
3fc814eaff2599c6ed6f8766e17ac185ec60ea1f2a52961b67b9c812fbf6184e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x448fa8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x448fac
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x448fb0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x448fb4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x448fb8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x448fbc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x448fc0
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x448fc4
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x448fc6
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417000
  4010e9:	test   eax,eax
  4010eb:	je     0x4152d6
  4010f1:	mov    edx,DWORD PTR [ebp-0x10]
  4010f4:	add    edx,0x1
  4010f7:	mov    DWORD PTR [ebp-0x10],edx
  4010fa:	aaa    
  4010fb:	shr    esp,0x27
  4010fe:	outs   dx,BYTE PTR gs:[esi]
  401100:	add    ebx,edi
  401102:	push   eax
  401103:	cwde   
  401104:	js     0x401144
  401106:	push   ecx
  401107:	mov    ds:0x2b0e0165,al
  40110c:	xor    dh,BYTE PTR [ecx-0x5b]
  40110f:	rcr    BYTE PTR [eax-0x55],0xa
  401113:	push   ebx
  401114:	xor    DWORD PTR ds:0x358210bd,0x2d5804e8
  40111e:	push   cs
  40111f:	jae    0x401174
  401121:	sub    al,0xe7
  401123:	int    0x59
  401125:	push   edi
  401126:	stos   BYTE PTR es:[edi],al
  401127:	pop    edx
  401128:	leave  
  401129:	jle    0x401102
  40112b:	xchg   ebx,eax
  40112c:	cdq    
  40112d:	jp     0x4010e6
  40112f:	rol    BYTE PTR [eax+0x77],1
  401132:	mov    WORD PTR [esi+0x4dc1b697],gs
  401138:	jno    0x401179
  40113a:	sbb    eax,0x20d48e2a
  40113f:	pop    ss
  401140:	repnz les ebp,FWORD PTR [edi+0x52d7581d]
  401147:	outs   dx,DWORD PTR ss:[esi]
  401149:	out    dx,eax
  40114a:	xor    al,0x31
  40114c:	pop    edx
  40114d:	rol    DWORD PTR ss:[edi+0x34ea6f1a],cl
  401154:	arpl   WORD PTR [ebx+edx*1-0x62],sp
  401158:	add    BYTE PTR [ebx+0x171b508b],0x87
  40115f:	sti    
  401160:	loop   0x4011b2
  401162:	ja     0x401183
  401164:	and    dh,BYTE PTR [ecx+eiz*1]
  401167:	cli    
  401168:	ror    esp,cl
  40116a:	test   BYTE PTR [esp+ecx*4-0x5268f0d5],ch
  401171:	popa   
  401172:	xchg   esi,eax
  401173:	fadd   QWORD PTR [ebp+0x4541bc60]
  401179:	out    0xdf,al
  40117b:	rcl    bl,1
  40117d:	popa   
  40117e:	add    al,0x48
  401180:	mov    ebp,0xd415ae4a
  401185:	mov    edi,0x37e06bf4
  40118a:	xchg   DWORD PTR [esi],esi
  40118c:	pop    eax
  40118d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40118e:	mov    esp,0xbc4a18e5
  401193:	mov    ebp,0x35b0463b
  401198:	(bad)  
  401199:	retf   
  40119a:	jecxz  0x4011d2
  40119c:	jle    0x401124
  40119e:	mov    ebx,fs
  4011a0:	pop    ds
  4011a1:	or     al,0x9d
  4011a3:	icebp  
  4011a4:	pop    es
  4011a5:	mov    ah,0x33
  4011a7:	lahf   
  4011a8:	pop    ebp
  4011a9:	mov    bh,0x4b
  4011ab:	xor    esi,ebx
  4011ad:	ror    DWORD PTR [edx+edx*4-0x2c8df629],cl
  4011b4:	add    BYTE PTR [eax-0x48],ah
  4011b7:	or     DWORD PTR [eax+0x64c957ba],edx
  4011bd:	mov    cl,0x6
  4011bf:	in     eax,dx
  4011c0:	in     al,dx
  4011c1:	daa    
  4011c2:	dec    esp
  4011c3:	arpl   WORD PTR [ecx+0x57ea23f4],dx
  4011c9:	inc    esp
  4011ca:	call   0xfde49d2d
  4011cf:	inc    esi
  4011d0:	out    dx,eax
  4011d1:	hlt    
  4011d2:	ret    0x3cdc
  4011d5:	in     al,0x75
  4011d7:	adc    eax,DWORD PTR [edx]
  4011d9:	jb     0x40116e
  4011db:	daa    
  4011dc:	dec    ebx
  4011dd:	(bad)  
  4011de:	jge    0x4011ce
  4011e0:	or     al,0x3a
  4011e2:	pop    ebx
  4011e3:	or     eax,0x9c740043
  4011e8:	add    ch,BYTE PTR [ecx+edx*1-0x6c]
  4011ec:	ins    BYTE PTR es:[edi],dx
  4011ed:	out    dx,eax
  4011ee:	add    BYTE PTR [edx+ecx*2+0x544468f9],dh
  4011f5:	cwde   
  4011f6:	std    
  4011f7:	jo     0x401180
  4011f9:	and    eax,DWORD PTR [esi+eiz*2]
  4011fc:	pop    ebp
  4011fd:	mov    WORD PTR [ebx+ebx*2+0x3e],ds
  401201:	rcl    BYTE PTR [ebx-0x7117de1e],cl
  401207:	fwait
  401208:	cmp    ebx,DWORD PTR ds:0x90c99c63
  40120e:	cmp    DWORD PTR [esi-0x2b],eax
  401211:	sbb    DWORD PTR [edx],ebp
  401213:	test   BYTE PTR [eax],0xfb
  401216:	xchg   BYTE PTR [edi],ch
  401218:	sbb    al,0xdc
  40121a:	mov    ebx,0xa26f6fdc
  40121f:	fisttp QWORD PTR [eax+0x65]
  401222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401223:	mov    eax,0x79f9e049
  401228:	retf   
  401229:	push   esi
  40122a:	popf   
  40122b:	or     eax,0xd5c5f8ed
  401230:	pop    ds
  401231:	cmc    
  401232:	mov    esi,0xb8a01f4a
  401237:	mov    ds:0x208da67a,eax
  40123c:	mov    cl,0x7f
  40123e:	cmc    
  40123f:	repz cs dec esi
  401242:	pop    ds
  401243:	adc    al,0x79
  401245:	(bad)  
  401246:	mov    ebp,0x790d1f03
  40124b:	cmp    DWORD PTR [ebp+0x17e1b6f9],edi
  401251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401252:	in     eax,dx
  401253:	jecxz  0x4011df
  401255:	int    0x6d
  401257:	adc    ah,BYTE PTR [edx]
  401259:	xor    al,0x10
  40125b:	test   al,0x96
  40125d:	or     al,0x46
  40125f:	imul   ebx,DWORD PTR [ecx+0x48efc1a],0xffffffd1
  401266:	fild   QWORD PTR [esi+0x4816efc9]
  40126c:	or     eax,0xe6367617
  401271:	or     eax,0xa2c16e26
  401276:	repz mov ebx,esi
  401279:	xchg   esp,eax
  40127a:	xor    esi,edx
  40127c:	add    dh,ch
  40127e:	sub    ch,BYTE PTR [ecx]
  401280:	mov    eax,ds:0x469197b4
  401285:	jmp    0x4012c0
  401287:	add    DWORD PTR [ebp+0x77eda4c8],edx
  40128d:	nop
  40128e:	cmp    eax,0xe49c2d6a
  401293:	dec    ecx
  401294:	or     edx,DWORD PTR [ebx]
  401296:	outs   dx,DWORD PTR ds:[esi]
  401297:	adc    eax,0x38cebc6f
  40129c:	sar    BYTE PTR [edi],1
  40129e:	lock fs ret 
  4012a1:	pop    es
  4012a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012a3:	jg     0x401306
  4012a5:	imul   ebp,DWORD PTR [eax+eiz*8-0x27],0x2e
  4012aa:	xchg   edi,eax
  4012ab:	mov    edx,0x736a9555
  4012b0:	mov    esi,0xea726c54
  4012b5:	fmul   DWORD PTR ds:0x28e77550
  4012bb:	add    al,0xc5
  4012bd:	std    
  4012be:	sbb    eax,0x898aafd9
  4012c3:	adc    eax,0x12fe16b9
  4012c8:	addr16 inc edi
  4012ca:	mov    esp,0xc6c06428
  4012cf:	out    dx,eax
  4012d0:	or     ebp,DWORD PTR [ebx-0x70]
  4012d3:	inc    edi
  4012d4:	inc    ebp
  4012d5:	add    DWORD PTR [esi+0x38ea2cad],esi
  4012db:	icebp  
  4012dc:	and    DWORD PTR [edi+eax*2-0x86f8061],eax
  4012e3:	(bad)  
  4012e4:	mov    bh,0x1
  4012e6:	xchg   esi,eax
  4012e7:	sub    ch,cl
  4012e9:	scas   eax,DWORD PTR es:[edi]
  4012ea:	add    BYTE PTR [edi],ch
  4012ec:	shl    eax,cl
  4012ee:	push   es
  4012ef:	push   esp
  4012f0:	pop    ebx
  4012f1:	arpl   WORD PTR [edx+eax*1],dx
  4012f4:	jbe    0x401301
  4012f6:	sub    DWORD PTR [ebx],esi
  4012f8:	sub    DWORD PTR [eax],edx
  4012fa:	repnz xchg edx,eax
  4012fc:	lahf   
  4012fd:	pop    esi
  4012fe:	jmp    0x2b63adc6
  401303:	pop    es
  401304:	jne    0x401298
  401306:	js     0x40134c
  401308:	das    
  401309:	adc    eax,0x6bba655b
  40130e:	sbb    al,0xd5
  401310:	jne    0x40132e
  401312:	jg     0x4012d5
  401314:	or     DWORD PTR [eax],esp
  401316:	push   esp
  401317:	retf   
  401318:	sbb    al,0x75
  40131a:	imul   ebx,DWORD PTR [edi],0x313d400f
  401320:	dec    edx
  401321:	dec    ebx
  401322:	sub    cl,bl
  401324:	or     cl,BYTE PTR [esi-0x311515b1]
  40132a:	loope  0x401375
  40132c:	and    al,0xf2
  40132e:	jnp    0x4012ba
  401330:	out    dx,al
  401331:	or     ebx,0x5c
  401334:	xchg   BYTE PTR [ecx],bh
  401336:	ja     0x401385
  401338:	dec    ebp
  401339:	(bad)  
  40133a:	int    0xee
  40133c:	xor    eax,0x8254a3ba
  401341:	(bad)  
  401342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401343:	sbb    eax,0xe7483382
  401348:	ins    BYTE PTR es:[edi],dx
  401349:	or     dh,BYTE PTR [esi+0x74]
  40134c:	lahf   
  40134d:	out    dx,eax
  40134e:	bound  ebx,QWORD PTR [eax-0x8]
  401351:	ins    DWORD PTR es:[edi],dx
  401352:	and    BYTE PTR [edx+ecx*4+0x4a4ac286],dl
  401359:	inc    edi
  40135a:	ret    0xbaaa
  40135d:	cwde   
  40135e:	or     BYTE PTR [ebp+eax*8+0x26e28c99],ch
  401365:	dec    eax
  401366:	xchg   BYTE PTR [esi],dh
  401368:	push   ebp
  401369:	ss inc ebx
  40136b:	mov    bl,0x1a
  40136d:	mov    ds:0x4f438bf3,eax
  401372:	fs lahf 
  401374:	sub    DWORD PTR [ebx],eax
  401376:	jle    0x40133c
  401378:	repz adc al,0xb7
  40137b:	cmp    DWORD PTR [ecx],esp
  40137d:	lods   al,BYTE PTR ds:[esi]
  40137e:	cmc    
  40137f:	loopne 0x40131c
  401381:	retf   0x6723
  401384:	cmc    
  401385:	lods   al,BYTE PTR ds:[esi]
  401386:	(bad)  
  401387:	jno    0x40131b
  401389:	into   
  40138a:	outs   dx,BYTE PTR ds:[esi]
  40138b:	xchg   esi,eax
  40138c:	add    edi,DWORD PTR [ebp-0x68]
  40138f:	dec    ebp
  401390:	dec    edx
  401391:	add    ah,dl
  401393:	jmp    0xad60075d
  401398:	sub    cl,BYTE PTR [ecx-0x44]
  40139b:	or     DWORD PTR [eax-0x4d],esp
  40139e:	daa    
  40139f:	in     eax,dx
  4013a0:	push   ss
  4013a1:	sub    eax,0x3677367
  4013a6:	pushf  
  4013a7:	adc    DWORD PTR [eax+0x58845f13],ecx
  4013ad:	aaa    
  4013ae:	inc    ebp
  4013af:	loop   0x401419
  4013b1:	pop    edi
  4013b2:	jnp    0x4013d7
  4013b4:	imul   edi,DWORD PTR [esi-0x525f3de0],0x190250e2
  4013be:	pop    ebp
  4013bf:	loop   0x4013ae
  4013c1:	mov    DWORD PTR [edx+0x30],esi
  4013c4:	xor    dl,BYTE PTR [esp+esi*8+0x30cf0008]
  4013cb:	add    dl,ch
  4013cd:	mov    ebp,0x32b5f11d
  4013d2:	loopne 0x40138f
  4013d4:	cmp    BYTE PTR [ecx+0xf],dl
  4013d7:	ds cld 
  4013d9:	push   ecx
  4013da:	fisub  WORD PTR [edx+0xf]
  4013dd:	or     ah,BYTE PTR [ebp+edi*1+0x6fda8857]
  4013e4:	mov    dh,0xfa
  4013e6:	inc    eax
  4013e7:	stos   DWORD PTR es:[edi],eax
  4013e8:	mov    ch,0xe0
  4013ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013eb:	xor    esp,DWORD PTR [edi+0x16e5222b]
  4013f1:	leave  
  4013f2:	inc    ebx
  4013f3:	ret    
  4013f4:	pusha  
  4013f5:	mov    DWORD PTR [ecx-0x122259d5],esi
  4013fb:	in     al,0x1a
  4013fd:	dec    edi
  4013fe:	adc    esp,DWORD PTR [ecx]
  401400:	push   ds
  401401:	mov    esp,0x65d8d28e
  401406:	jbe    0x401421
  401408:	scas   al,BYTE PTR es:[edi]
  401409:	sbb    BYTE PTR fs:[edx],dl
  40140c:	adc    bh,ch
  40140e:	add    eax,0x7922f73b
  401413:	dec    DWORD PTR [esi-0x2a4aa0fe]
  401419:	pop    ebp
  40141a:	cmc    
  40141b:	dec    eax
  40141c:	lock pop es
  40141e:	push   ds
  40141f:	out    dx,eax
  401420:	jge    0x40148e
  401422:	cmp    eax,0xb270ae54
  401427:	cmp    dh,BYTE PTR [edi]
  401429:	adc    ch,BYTE PTR [esp+esi*8+0x3]
  40142d:	sbb    eax,0x10b41bed
  401432:	xchg   ebp,eax
  401433:	out    dx,eax
  401434:	xchg   dh,ah
  401436:	inc    esp
  401437:	jl     0x40149b
  401439:	push   ss
  40143a:	dec    ecx
  40143b:	shl    BYTE PTR [ebx-0x1d62421d],1
  401441:	jb     0x401436
  401443:	mov    cl,BYTE PTR [ebx+0x1]
  401446:	sti    
  401447:	mov    esp,0x14a90f26
  40144c:	inc    esp
  40144d:	push   0x5c79917e
  401452:	data16 into 
  401454:	pop    eax
  401455:	in     eax,dx
  401456:	(bad)  
  401457:	adc    bh,al
  401459:	push   eax
  40145a:	(bad)  
  40145b:	cmp    al,0x71
  40145d:	leave  
  40145e:	xor    cl,BYTE PTR [edi-0x5b]
  401461:	pop    esp
  401462:	and    BYTE PTR [ebx-0x33],0xdb
  401466:	push   edx
  401467:	cmp    BYTE PTR [edx+eiz*8],ah
  40146a:	fdiv   st,st(2)
  40146c:	popa   
  40146d:	popf   
  40146e:	cmc    
  40146f:	or     al,0x44
  401471:	ja     0x40149e
  401473:	or     BYTE PTR [ebp+edx*8-0xc490ecd],dh
  40147a:	mov    ebx,0xcafe3a69
  40147f:	or     BYTE PTR es:[edi+0xf],al
  401483:	daa    
  401484:	cmp    al,0x81
  401486:	and    DWORD PTR [eax],ecx
  401488:	outs   dx,DWORD PTR ds:[esi]
  401489:	jbe    0x401447
  40148b:	cmp    eax,0x6162287b
  401490:	sbb    al,0x1b
  401492:	jae    0x40148b
  401494:	cs sbb al,dh
  401497:	adc    eax,DWORD PTR [esi-0x57973e82]
  40149d:	pop    es
  40149e:	mov    esi,0x8c5aaa88
  4014a3:	shr    DWORD PTR [ebx],0xbe
  4014a6:	add    DWORD PTR [eax],esp
  4014a8:	pop    ds
  4014a9:	(bad)  
  4014aa:	(bad)  
  4014ab:	in     eax,0x95
  4014ad:	and    eax,0xad58f516
  4014b2:	xchg   ebp,eax
  4014b3:	cmp    bh,al
  4014b5:	push   0x6d
  4014b7:	cwde   
  4014b8:	inc    edi
  4014b9:	jbe    0x40149b
  4014bb:	jne    0x4014cb
  4014bd:	push   cs
  4014be:	mov    DWORD PTR [eax-0xe],ebx
  4014c1:	popf   
  4014c2:	xchg   ebx,eax
  4014c3:	mov    DWORD PTR [ebx+0x14],eax
  4014c6:	inc    ebx
  4014c7:	shr    BYTE PTR [ebp-0x3f],0x70
  4014cb:	stc    
  4014cc:	cmp    bh,bl
  4014ce:	xchg   edx,eax
  4014cf:	fst    DWORD PTR [edi-0x27342e12]
  4014d5:	inc    edi
  4014d6:	or     al,0xc2
  4014d8:	sbb    al,0xda
  4014da:	mov    edx,DWORD PTR [eax-0x1d3ba17]
  4014e0:	sub    DWORD PTR [edi+eiz*8-0x59],edx
  4014e4:	in     ax,0x47
  4014e7:	jnp    0x4014df
  4014e9:	jmp    DWORD PTR [eax]
  4014eb:	mov    ch,0x54
  4014ed:	outs   dx,DWORD PTR ds:[esi]
  4014ee:	dec    eax
  4014ef:	iret   
  4014f0:	adc    eax,0x5aebefab
  4014f5:	loop   0x4014e1
  4014f7:	sub    al,0x7e
  4014f9:	pop    edx
  4014fa:	ror    dh,1
  4014fc:	and    BYTE PTR [edi],dh
  4014fe:	test   eax,0x2f27907d
  401503:	inc    edi
  401504:	inc    eax
  401505:	fcomp  QWORD PTR [esi+eiz*2+0x2a]
  401509:	cld    
  40150a:	xor    BYTE PTR ds:[edi-0x6d5675e2],bl
  401511:	loop   0x4014be
  401513:	push   eax
  401514:	cmp    BYTE PTR [edx],dl
  401516:	sub    esi,DWORD PTR [ecx+0x70cb58fd]
  40151c:	sahf   
  40151d:	ja     0x401508
  40151f:	sbb    eax,0x1b269289
  401524:	mov    dl,0xe6
  401526:	mov    al,0x93
  401528:	mov    eax,0xf2832613
  40152d:	dec    ebp
  40152e:	test   eax,0x9f701b01
  401533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401534:	aas    
  401535:	adc    DWORD PTR [edx],ebp
  401537:	adc    ebx,DWORD PTR [ecx-0x71f20586]
  40153d:	jg     0x4014cd
  40153f:	sbb    ch,BYTE PTR [esp+edx*8]
  401542:	mov    gs,WORD PTR [eax+0x7]
  401545:	push   ss
  401546:	cmp    al,0xa5
  401548:	add    eax,DWORD PTR [ebx-0x3a]
  40154b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40154c:	inc    edi
  40154d:	pop    edx
  40154e:	sbb    eax,0x6f551770
  401553:	cmp    DWORD PTR [esi-0x39a64714],esp
  401559:	mov    cl,0x21
  40155b:	sbb    al,cl
  40155d:	aad    0x5d
  40155f:	imul   ebp,DWORD PTR [ecx-0x80],0x7d
  401563:	int    0xf8
  401565:	adc    BYTE PTR [ebp-0x26],cl
  401568:	das    
  401569:	xchg   ah,ch
  40156b:	jbe    0x40150b
  40156d:	ficom  WORD PTR [ebp-0x26]
  401570:	cld    
  401571:	jle    0x4015a9
  401573:	dec    esp
  401574:	lods   al,BYTE PTR ds:[esi]
  401575:	bsf    eax,DWORD PTR [ebp+0x6d]
  401579:	dec    edi
  40157a:	xchg   ebx,eax
  40157b:	fadd   DWORD PTR [ecx+0x55]
  40157e:	ins    DWORD PTR es:[edi],dx
  40157f:	ret    0x8494
  401582:	inc    ebp
  401583:	inc    ebp
  401584:	lea    eax,[esi-0x194ab85a]
  40158a:	outs   dx,DWORD PTR ds:[esi]
  40158b:	xchg   edx,eax
  40158c:	inc    esp
  40158d:	xchg   DWORD PTR [ecx+0x51],ebx
  401590:	or     ah,BYTE PTR [edx-0x400771e7]
  401596:	(bad)  
  401597:	dec    ebp
  401598:	pop    ecx
  401599:	pop    esi
  40159a:	inc    ebx
  40159b:	pop    ebx
  40159c:	jo     0x4015b1
  40159e:	jae    0x401562
  4015a0:	repnz loop 0x40153b
  4015a3:	int3   
  4015a4:	(bad)  
  4015a5:	stos   DWORD PTR es:[edi],eax
  4015a6:	push   esp
  4015a7:	push   esi
  4015a8:	cmp    eax,0xa55fe0af
  4015ad:	mov    edx,0x14314d34
  4015b2:	test   eax,0x41eba7c6
  4015b7:	sbb    ecx,DWORD PTR [eax*8+0xf70359a]
  4015be:	shr    BYTE PTR [esp+ebp*8-0x438f13f8],0x80
  4015c6:	ror    BYTE PTR [ebp+0x261db78e],0xbc
  4015cd:	xchg   ecx,eax
  4015ce:	mov    ch,0x65
  4015d0:	pop    ebx
  4015d1:	je     0x4015b7
  4015d3:	les    esi,FWORD PTR [edx+0x56]
  4015d6:	mov    fs,WORD PTR [edi+0xd70a99d]
  4015dc:	pop    ebx
  4015dd:	push   es
  4015de:	mov    esi,0xfae4057c
  4015e3:	(bad)  
  4015e5:	(bad)  
  4015e6:	out    dx,al
  4015e7:	fadd   st,st(1)
  4015e9:	daa    
  4015ea:	xchg   ebx,eax
  4015eb:	ret    
  4015ec:	je     0x40160e
  4015ee:	lods   eax,DWORD PTR ds:[esi]
  4015ef:	and    dh,BYTE PTR [edi+0x14e31dcc]
  4015f5:	jg     0x401657
  4015f7:	cmp    eax,0x2b2c3242
  4015fc:	aad    0x55
  4015fe:	sub    edx,DWORD PTR [ecx]
  401600:	outs   dx,BYTE PTR ds:[esi]
  401601:	lahf   
  401602:	cmova  ebp,DWORD PTR [ecx+0x68]
  401606:	sbb    ah,BYTE PTR [esi+edi*1-0x34]
  40160a:	cmp    esp,DWORD PTR ds:0xe9781ec1
  401610:	pop    eax
  401611:	and    BYTE PTR [ecx-0x4aabfc2c],ch
  401617:	or     DWORD PTR [edi-0x1cf96a92],edi
  40161d:	cmp    DWORD PTR [esi],eax
  40161f:	adc    dh,BYTE PTR [ebp+0x735c5a54]
  401625:	out    0xde,eax
  401627:	fbld   TBYTE PTR [ebx-0x29c1ceab]
  40162d:	add    al,0xc2
  40162f:	popfw  
  401631:	icebp  
  401632:	and    bh,0xe7
  401635:	xchg   edi,eax
  401636:	arpl   ax,dx
  401638:	inc    esi
  401639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40163a:	hlt    
  40163b:	add    ecx,DWORD PTR [eax+ebx*2]
  40163e:	(bad)  
  40163f:	jle    0x4015ff
  401641:	push   ecx
  401642:	push   es
  401643:	jmp    0x75c7e697
  401648:	test   BYTE PTR [esi+edx*4],al
  40164b:	xchg   esi,eax
  40164c:	sbb    ch,ch
  40164e:	clc    
  40164f:	(bad)  
  401650:	outs   dx,BYTE PTR ds:[esi]
  401651:	leave  
  401652:	imul   DWORD PTR [esi+edx*8+0x75]
  401656:	(bad)  
  401657:	xchg   ebp,eax
  401658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401659:	and    dh,bl
  40165b:	arpl   WORD PTR [edi+eax*2-0xc6e19f0],bx
  401662:	sub    DWORD PTR ds:0xb6fa8270,esi
  401668:	sub    ah,cl
  40166a:	jl     0x401669
  40166c:	jl     0x40167b
  40166e:	sub    eax,0x4333d461
  401673:	lock sub eax,0xd6dd6d68
  401679:	mov    WORD PTR [esi],fs
  40167b:	mov    BYTE PTR [eax-0xa],al
  40167e:	mov    dh,0x14
  401680:	mov    al,0x75
  401682:	imul   BYTE PTR [ebx-0x2a7983f5]
  401688:	inc    DWORD PTR [eax-0x5c1d6496]
  40168e:	lea    ebp,ds:0xbe6ed164
  401694:	mov    esp,0x5f8a073e
  401699:	call   0xe988a815
  40169e:	mov    dh,0xf6
  4016a0:	out    dx,eax
  4016a1:	mov    edi,0xd38f83e8
  4016a6:	add    dl,dl
  4016a8:	push   esi
  4016a9:	pop    esp
  4016aa:	mov    esi,0xf7866d82
  4016af:	and    al,0xd4
  4016b1:	das    
  4016b2:	adc    eax,0xed59cb40
  4016b7:	jp     0x40165f
  4016b9:	aaa    
  4016ba:	mov    DWORD PTR [ebx+0x51],eax
  4016bd:	cmp    BYTE PTR [ecx],dh
  4016bf:	xchg   edi,eax
  4016c0:	mul    ecx
  4016c2:	aad    0x96
  4016c4:	jne    0x4016f6
  4016c6:	addr16 jns 0x40172e
  4016c9:	sub    al,0x38
  4016cb:	adc    DWORD PTR ds:[esi],esi
  4016ce:	out    0xc9,eax
  4016d0:	popw   es
  4016d2:	jnp    0x401723
  4016d4:	out    dx,al
  4016d5:	xor    BYTE PTR [ebx-0x74],ah
  4016d8:	leave  
  4016d9:	mov    al,ds:0x3e547c6f
  4016de:	adc    al,0xfb
  4016e0:	add    cl,0xea
  4016e3:	(bad)  
  4016e4:	pop    eax
  4016e5:	fwait
  4016e6:	dec    esi
  4016e7:	pusha  
  4016e8:	xlat   BYTE PTR ds:[ebx]
  4016e9:	test   eax,0xa66d06bc
  4016ee:	ds inc edx
  4016f0:	sbb    al,0x3e
  4016f2:	retf   0xa30b
  4016f5:	xor    eax,0x438c3a4
  4016fa:	pop    esi
  4016fb:	out    dx,eax
  4016fc:	int    0x3a
  4016fe:	inc    DWORD PTR [edx]
  401700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401701:	cmp    al,0xaf
  401703:	xchg   ebp,eax
  401704:	or     edx,esi
  401706:	add    edx,DWORD PTR [edx]
  401708:	mov    esp,0xefcfb241
  40170d:	out    dx,al
  40170e:	adc    al,0x48
  401710:	push   esi
  401711:	std    
  401712:	jns    0x40174c
  401714:	rcr    BYTE PTR [edx],cl
  401716:	mov    dh,0xb6
  401718:	lds    ecx,FWORD PTR [edx]
  40171a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40171b:	push   eax
  40171c:	fwait
  40171d:	and    ebp,DWORD PTR [ecx+0x36]
  401720:	das    
  401721:	sbb    eax,0x8c5b9248
  401726:	adc    esi,DWORD PTR [ebx+ecx*8+0x35da9d52]
  40172d:	jbe    0x40175c
  40172f:	int3   
  401730:	outs   dx,DWORD PTR ds:[esi]
  401731:	mov    dl,BYTE PTR [eax+0x5021f018]
  401737:	add    DWORD PTR [ebx-0x25],edx
  40173a:	inc    edi
  40173b:	pop    es
  40173c:	inc    edx
  40173d:	xlat   BYTE PTR ds:[ebx]
  40173e:	jl     0x40172c
  401740:	scas   eax,DWORD PTR es:[edi]
  401741:	jge    0x401744
  401743:	cld    
  401744:	aad    0xf2
  401746:	popa   
  401747:	mov    esi,0xe3b43ded
  40174c:	call   0xf11d:0x23f54a7d
  401753:	pushf  
  401754:	cmp    DWORD PTR [ebx-0x4a6e2b76],ecx
  40175a:	daa    
  40175b:	xlat   BYTE PTR ds:[ebx]
  40175c:	rcl    DWORD PTR [edi+ebp*8],1
  40175f:	int3   
  401760:	inc    ebp
  401761:	cmp    esi,DWORD PTR [eax+0x632e65b1]
  401767:	gs pop esp
  401769:	xor    DWORD PTR [ecx-0x4a],ebp
  40176c:	jae    0x401733
  40176e:	ss or  ch,ah
  401771:	mov    ecx,0xe9019360
  401776:	clts   
  401778:	(bad)  
  401779:	cdq    
  40177a:	push   ecx
  40177b:	icebp  
  40177c:	sub    eax,0x1f64fe2a
  401781:	call   0xcc607e4b
  401786:	dec    ebx
  401787:	fnstenv ds:[ebp+0x6]
  40178b:	ins    DWORD PTR es:[edi],dx
  40178c:	add    ebp,DWORD PTR [ecx]
  40178e:	out    dx,eax
  40178f:	test   DWORD PTR ds:0xa4b91424,0xd87cde02
  401799:	bound  esp,QWORD PTR [edx]
  40179b:	scas   eax,DWORD PTR es:[edi]
  40179c:	pop    esp
  40179d:	(bad)  
  40179e:	sbb    DWORD PTR [ebx],edx
  4017a0:	scas   eax,DWORD PTR es:[edi]
  4017a1:	jae    0x4017a9
  4017a3:	and    DWORD PTR [esp+ebp*8+0x539f421e],ebp
  4017aa:	fucompp 
  4017ac:	jne    0x40174c
  4017ae:	out    0xe4,eax
  4017b0:	sub    al,ah
  4017b2:	fst    QWORD PTR [edi+0x6dccb7d2]
  4017b8:	and    DWORD PTR [ebp+0xdeb0fc1],ebp
  4017be:	out    0xaf,eax
  4017c0:	push   edx
  4017c1:	push   ebx
  4017c2:	stc    
  4017c3:	add    eax,0x885cf7cc
  4017c8:	sbb    dl,BYTE PTR [ecx+esi*2+0x53738c1f]
  4017cf:	fild   WORD PTR [ecx+ecx*4-0xad6994]
  4017d6:	mov    eax,0xb57318f3
  4017db:	mov    ah,0x3a
  4017dd:	cld    
  4017de:	dec    ebp
  4017df:	fcomp  st(2)
  4017e1:	mov    ch,0x4a
  4017e3:	jns    0x40177c
  4017e5:	scas   eax,DWORD PTR es:[edi]
  4017e6:	adc    eax,0xffd61a4e
  4017eb:	cli    
  4017ec:	aad    0x89
  4017ee:	xor    eax,0xdf04f183
  4017f3:	aad    0xab
  4017f5:	imul   esi,DWORD PTR [eax+0x6b],0xffffff9e
  4017f9:	add    DWORD PTR [esi],0xaba1ff75
  4017ff:	or     eax,0x93e96cc3
  401804:	adc    al,0x88
  401806:	adc    DWORD PTR [edi-0x4a67be61],esp
  40180c:	jae    0x401838
  40180e:	ret    0xb8c4
  401811:	cmp    DWORD PTR [ebp-0x42f863db],edi
  401817:	sbb    DWORD PTR [edx],0x13d70df6
  40181d:	(bad)  
  40181e:	ror    DWORD PTR [esi+0x7a],1
  401821:	or     edi,DWORD PTR [esi]
  401823:	cmp    BYTE PTR [esi],cl
  401825:	jecxz  0x40188b
  401827:	jae    0x40189b
  401829:	pushf  
  40182a:	inc    esi
  40182b:	adc    al,0x59
  40182d:	push   esp
  40182e:	pop    es
  40182f:	xchg   ebx,eax
  401830:	stc    
  401831:	sub    BYTE PTR [ebp-0x27],bh
  401834:	stos   DWORD PTR es:[edi],eax
  401835:	shrd   DWORD PTR [edx+0x22419a7f],esp,0x2d
  40183d:	pop    ss
  40183e:	inc    ebp
  40183f:	mov    eax,ds:0xccb0b106
  401844:	xor    esp,esp
  401846:	push   es
  401847:	xchg   edx,eax
  401848:	jl     0x401856
  40184a:	popf   
  40184b:	sub    BYTE PTR [edx],0x12
  40184e:	cmp    DWORD PTR [edi+0x3],eax
  401851:	mov    dl,BYTE PTR [ecx+0x5c]
  401854:	or     DWORD PTR [esi],ebp
  401856:	xchg   ecx,eax
  401857:	iret   
  401858:	in     eax,dx
  401859:	push   ebp
  40185a:	jb     0x4018a2
  40185c:	in     eax,0x4
  40185e:	cmp    esi,eax
  401860:	sub    DWORD PTR [eax+0x2b],0x75
  401864:	sbb    DWORD PTR [edx+ebp*4+0x1479ce66],eax
  40186b:	push   es
  40186c:	sti    
  40186d:	inc    eax
  40186e:	mov    esi,DWORD PTR [esi+0x42]
  401871:	dec    ebx
  401872:	loopne 0x40183d
  401874:	out    0xef,al
  401876:	mov    bl,0xfa
  401879:	cld    
  40187a:	bound  ebp,QWORD PTR [ebp-0x2e504538]
  401880:	jle    0x4018ee
  401882:	or     al,BYTE PTR [eax+esi*1+0x51efd399]
  401889:	loope  0x401894
  40188b:	xlat   BYTE PTR ds:[ebx]
  40188c:	imul   esp,eax,0x8449ad6a
  401892:	(bad)  
  401893:	inc    edx
  401894:	inc    DWORD PTR [ebp-0x2f804bfb]
  40189a:	retf   0x1b99
  40189d:	iret   
  40189e:	test   eax,0x902d46e1
  4018a3:	arpl   WORD PTR [edi+0x4c7b70d9],cx
  4018a9:	jle    0x4018c7
  4018ab:	sbb    eax,0x52a864c3
  4018b0:	mov    bl,0x65
  4018b2:	mov    ebx,0xaea81ebd
  4018b7:	and    edx,DWORD PTR [ebp+0x46]
  4018ba:	arpl   WORD PTR [eax+0x12ebe611],bp
  4018c0:	jmp    0xd9bccf91
  4018c5:	nop
  4018c6:	imul   eax,DWORD PTR [edi-0x41],0x3da471a1
  4018cd:	ret    
  4018ce:	ja     0x4018ab
  4018d0:	out    0x15,al
  4018d2:	push   eax
  4018d3:	(bad)  
  4018d5:	(bad)  
  4018d6:	adc    esp,edx
  4018d8:	fldcw  WORD PTR [esi+0x3953d43c]
  4018de:	stos   DWORD PTR es:[edi],eax
  4018df:	scas   eax,DWORD PTR es:[edi]
  4018e0:	dec    ecx
  4018e1:	dec    esp
  4018e2:	sub    ah,BYTE PTR [edi-0x1b]
  4018e5:	push   0x73764218
  4018ea:	sub    eax,0x1fbc8195
  4018ef:	push   es
  4018f0:	and    BYTE PTR [ebp+0x66],0xfc
  4018f4:	cs ret 0x22ae
  4018f8:	mov    ss,WORD PTR [esp+edx*2]
  4018fb:	xor    bl,ah
  4018fd:	inc    ebp
  4018fe:	les    esi,FWORD PTR [edi-0x3e]
  401901:	cmp    eax,0x490ab837
  401906:	test   eax,0x4ec934a4
  40190b:	lar    edx,WORD PTR ds:0x14d55c4d
  401912:	retf   
  401913:	shl    BYTE PTR [esi-0x52bcd5d4],cl
  401919:	xchg   DWORD PTR [ebx-0xb1a0e85],edi
  40191f:	sbb    ecx,DWORD PTR [esi-0x149ba8cb]
  401925:	das    
  401926:	pop    ecx
  401927:	cmp    eax,0xc495b700
  40192c:	das    
  40192d:	out    dx,al
  40192e:	pop    esi
  40192f:	xor    DWORD PTR [eax-0x28a825a8],esp
  401935:	cli    
  401936:	add    DWORD PTR [edi-0x69],0xc604060c
  40193d:	stc    
  40193e:	and    al,0xc
  401940:	adc    ebp,eax
  401942:	inc    eax
  401943:	int3   
  401944:	mov    ch,0x0
  401946:	fnstsw WORD PTR [eax-0x5f]
  401949:	stc    
  40194a:	data16 inc BYTE PTR gs:[ecx-0x1a]
  40194f:	cld    
  401950:	clc    
  401951:	xor    al,0x19
  401953:	sub    bl,BYTE PTR ds:0xff28ad42
  401959:	out    dx,al
  40195a:	push   ds
  40195b:	lea    esp,[edi]
  40195d:	gs aam 0x49
  401960:	push   ds
  401961:	addr16 push ebp
  401963:	mov    cl,0x2d
  401965:	mov    al,dh
  401967:	aad    0xbd
  401969:	mov    ds:0xf992b802,eax
  40196e:	in     al,dx
  40196f:	aas    
  401970:	push   0xffffff98
  401972:	mov    BYTE PTR [ebp+esi*4+0x1e],0x31
  401977:	xor    dh,BYTE PTR [eax+0x3a]
  40197a:	repnz lds esp,FWORD PTR [eax-0x3f]
  40197e:	call   0x86d9:0x8a2f50a7
  401985:	sub    edx,DWORD PTR [ebx]
  401987:	bound  edi,QWORD PTR [ebx-0x2c]
  40198a:	fiadd  WORD PTR [edi+ecx*1]
  40198d:	mov    WORD PTR [esi+0x49],?
  401990:	adc    cl,dl
  401992:	add    DWORD PTR [eax],esi
  401994:	inc    edx
  401995:	add    al,0x8c
  401997:	in     al,dx
  401998:	outs   dx,DWORD PTR ds:[esi]
  401999:	inc    edx
  40199a:	ficomp WORD PTR [ecx-0x225e0988]
  4019a0:	aas    
  4019a1:	xor    ecx,edi
  4019a3:	aas    
  4019a4:	das    
  4019a5:	fistp  DWORD PTR [edi]
  4019a7:	dec    ebp
  4019a8:	pop    ss
  4019a9:	fcomp  QWORD PTR [esi+ecx*4+0x5e]
  4019ad:	sbb    BYTE PTR [ebx+0x1eb30a7d],bl
  4019b3:	fistp  QWORD PTR [ecx]
  4019b5:	cmp    eax,0x4bf69a5f
  4019ba:	cld    
  4019bb:	aad    0x52
  4019bd:	retf   0xbe4f
  4019c0:	mov    BYTE PTR [eax-0xf819aac],0x4
  4019c7:	sahf   
  4019c8:	inc    edx
  4019c9:	arpl   di,di
  4019cb:	jl     0x401a46
  4019cd:	cmp    dl,BYTE PTR ds:0x2de2bf56
  4019d3:	xor    eax,0x7a42d954
  4019d8:	test   BYTE PTR [edx],cl
  4019da:	ins    BYTE PTR es:[edi],dx
  4019db:	and    eax,0xc35abbf3
  4019e0:	data16 sub dh,al
  4019e3:	test   DWORD PTR [edi],edi
  4019e5:	pop    ds
  4019e6:	cmp    ch,BYTE PTR [edx+0x50]
  4019e9:	mov    dl,0xa
  4019eb:	xor    eax,esi
  4019ed:	pop    ebx
  4019ee:	leave  
  4019ef:	neg    esp
  4019f1:	inc    esp
  4019f2:	jbe    0x4019fe
  4019f4:	cmp    BYTE PTR [ebx],dh
  4019f6:	sub    dh,BYTE PTR [edi-0x55]
  4019f9:	jae    0x401a26
  4019fb:	push   edi
  4019fc:	sub    DWORD PTR [ebx+0x33],esi
  4019ff:	ret    
  401a00:	mov    ebx,0x952da1d7
  401a05:	js     0x4019ab
  401a07:	jg     0x401a14
  401a09:	pop    ss
  401a0a:	cli    
  401a0b:	addr16 into 
  401a0d:	loope  0x4019cb
  401a0f:	xor    al,0x61
  401a11:	cmp    ch,BYTE PTR [edx+edx*1-0x39]
  401a15:	retf   0xaa8e
  401a18:	mov    eax,edx
  401a1a:	ss dec edi
  401a1c:	xchg   ebp,eax
  401a1d:	cmp    DWORD PTR [ebx],esi
  401a1f:	inc    edi
  401a20:	(bad)  
  401a21:	imul   eax,DWORD PTR [ebx+0x28],0xffffffdb
  401a25:	stos   BYTE PTR es:[edi],al
  401a26:	lea    esp,[ebp-0x7b]
  401a29:	je     0x401a71
  401a2b:	and    dh,0xe5
  401a2e:	sbb    edi,esp
  401a30:	pop    esp
  401a31:	add    esp,DWORD PTR [eax-0x73349fe9]
  401a37:	sti    
  401a38:	cmp    al,0x97
  401a3a:	hlt    
  401a3b:	push   esi
  401a3c:	push   edx
  401a3d:	mov    ch,0xd
  401a3f:	lahf   
  401a40:	and    eax,0xe93d6a46
  401a45:	fwait
  401a46:	push   ds
  401a47:	inc    ecx
  401a48:	setae  BYTE PTR [edi-0x70]
  401a4c:	pop    ebp
  401a4d:	out    dx,al
  401a4e:	cmp    BYTE PTR [edi-0x35],dl
  401a51:	pop    ds
  401a52:	repz test DWORD PTR [ebx],0x1e20234
  401a59:	cmp    BYTE PTR [ecx+eax*4+0x6405d655],ch
  401a60:	cdq    
  401a61:	icebp  
  401a62:	pop    edx
  401a63:	sub    esi,eax
  401a65:	pop    ebp
  401a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a67:	sbb    DWORD PTR [esi+0x14da32e9],0x7b
  401a6e:	into   
  401a6f:	or     al,0x45
  401a71:	in     eax,0xe8
  401a73:	adc    al,0xd
  401a75:	mov    ebx,0xf160656b
  401a7a:	pop    ebx
  401a7b:	add    eax,edx
  401a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a7e:	cmp    dh,bh
  401a80:	imul   esp,DWORD PTR [esi-0x6a],0x3d
  401a84:	mov    eax,0xaf98f1cf
  401a89:	enter  0xed6,0xad
  401a8d:	out    0x6e,al
  401a8f:	adc    esi,DWORD PTR [ebp+0x3e]
  401a92:	stos   DWORD PTR es:[edi],eax
  401a93:	xchg   esp,eax
  401a94:	dec    edi
  401a95:	out    dx,eax
  401a96:	into   
  401a97:	cmp    BYTE PTR [esi],0x54
  401a9a:	add    al,0x9d
  401a9c:	jne    0x401a6a
  401a9e:	test   DWORD PTR [ebp-0x2e694191],edx
  401aa4:	or     al,0xe1
  401aa6:	sbb    BYTE PTR [edi],bh
  401aa8:	stos   DWORD PTR es:[edi],eax
  401aa9:	sbb    DWORD PTR [ecx],ebx
  401aab:	ins    DWORD PTR es:[edi],dx
  401aac:	mov    ebp,0x795d29ce
  401ab1:	mov    al,ds:0xd4380a60
  401ab6:	jp     0x401b0a
  401ab8:	inc    esi
  401ab9:	stos   DWORD PTR es:[edi],eax
  401aba:	shr    ecx,cl
  401abc:	sbb    al,0x8c
  401abe:	fild   DWORD PTR [ecx]
  401ac0:	push   ds
  401ac1:	add    DWORD PTR [eax],ecx
  401ac3:	xor    dh,BYTE PTR [edi+0x30111f2d]
  401ac9:	vmwrite ebx,DWORD PTR [esi-0x6f]
  401acd:	xchg   ebp,eax
  401ace:	pop    es
  401acf:	sub    eax,0x86372302
  401ad4:	pop    eax
  401ad5:	mov    DWORD PTR [edx-0xf12d6f4],ebx
  401adb:	into   
  401adc:	cwde   
  401add:	ret    0xa37b
  401ae0:	mov    ah,0x41
  401ae2:	add    eax,0xc34e2ceb
  401ae7:	mov    cl,0xaa
  401ae9:	xchg   esp,ecx
  401aeb:	pop    edx
  401aec:	mov    ebx,0x4f5b01fc
  401af1:	lods   eax,DWORD PTR ds:[esi]
  401af2:	push   es
  401af3:	ja     0x401af0
  401af5:	push   edx
  401af6:	fisub  WORD PTR [edx]
  401af8:	and    eax,0x4d5e8cfc
  401afd:	(bad)
  401b00:	pop    es
  401b01:	dec    edi
  401b02:	push   cs
  401b03:	loopne 0x401b21
  401b05:	xor    al,0xa7
  401b07:	or     eax,0xba1482e8
  401b0c:	sbb    al,0xec
  401b0e:	cmp    DWORD PTR [ecx-0x2d],ecx
  401b11:	lods   al,BYTE PTR ds:[esi]
  401b12:	sbb    ah,al
  401b14:	xchg   ecx,eax
  401b15:	inc    esi
  401b16:	stos   DWORD PTR es:[edi],eax
  401b17:	repz jmp 0xa242:0x9e2ff792
  401b1f:	pop    DWORD PTR [edi-0x27]
  401b22:	stos   DWORD PTR es:[edi],eax
  401b23:	push   edx
  401b24:	sub    al,0x2e
  401b26:	push   esp
  401b27:	int3   
  401b28:	out    dx,al
  401b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b2a:	lock sbb BYTE PTR ss:[ecx-0x6c],bl
  401b2f:	inc    ecx
  401b30:	xor    al,0x8e
  401b32:	and    DWORD PTR [ecx-0x4a6a0807],ebx
  401b38:	pushf  
  401b39:	mov    ch,0xd1
  401b3b:	add    al,0xf0
  401b3d:	sar    esp,cl
  401b3f:	or     eax,0xaa514da6
  401b44:	leave  
  401b45:	add    esp,edx
  401b47:	out    dx,eax
  401b48:	mov    ds:0x1aeca525,al
  401b4d:	shl    BYTE PTR [eax+0x17],cl
  401b50:	xchg   esp,eax
  401b51:	mov    ebx,0xf4d7cf5b
  401b56:	jne    0x401b8f
  401b58:	loopne 0x401b2f
  401b5a:	mov    ah,0x37
  401b5c:	cli    
  401b5d:	mov    cl,0x1b
  401b5f:	pop    es
  401b60:	fcmovnb st,st(0)
  401b62:	or     edx,DWORD PTR [ebx+esi*1]
  401b65:	call   0xd589:0xb6fcf432
  401b6c:	push   esi
  401b6d:	adc    edi,DWORD PTR [ebx]
  401b6f:	scas   eax,DWORD PTR es:[edi]
  401b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b71:	xchg   esi,eax
  401b72:	mov    ch,0xa0
  401b74:	loop   0x401b79
  401b76:	xor    al,BYTE PTR [ebx-0x51]
  401b79:	and    ch,BYTE PTR [edx+0x26]
  401b7c:	cmc    
  401b7d:	mov    ah,0x8c
  401b7f:	cdq    
  401b80:	sbb    DWORD PTR ds:0xec9c3a07,edx
  401b86:	in     al,dx
  401b87:	inc    esp
  401b88:	ins    DWORD PTR es:[edi],dx
  401b89:	lock push ecx
  401b8b:	ret    
  401b8c:	icebp  
  401b8d:	mov    ecx,0x977cfc7c
  401b92:	dec    eax
  401b93:	repz inc edx
  401b95:	xchg   ch,al
  401b97:	jg     0x401b44
  401b99:	sbb    al,0x70
  401b9b:	jmp    0x401b73
  401b9d:	jne    0x401bf6
  401b9f:	fild   QWORD PTR [edi]
  401ba1:	push   ecx
  401ba2:	jns    0x401b8e
  401ba4:	push   edx
  401ba5:	(bad)  
  401ba6:	rcl    BYTE PTR ss:[ecx+0x27],1
  401baa:	in     al,dx
  401bab:	rcr    DWORD PTR [ebx+0x39443af1],1
  401bb1:	call   0xe26a622f
  401bb6:	icebp  
  401bb7:	push   esi
  401bb8:	or     eax,DWORD PTR [edx+0x72718fcd]
  401bbe:	sti    
  401bbf:	call   0xe50a:0xf8f4a18
  401bc6:	hlt    
  401bc7:	cmp    DWORD PTR [edi],esi
  401bc9:	hlt    
  401bca:	js     0x401c05
  401bcc:	pop    ecx
  401bcd:	dec    edx
  401bce:	or     BYTE PTR [edi+0x4c8d5f6b],dl
  401bd4:	inc    eax
  401bd5:	and    bh,0x70
  401bd8:	dec    ebx
  401bd9:	(bad)  
  401bda:	sti    
  401bdb:	inc    ebx
  401bdc:	out    0x20,eax
  401bde:	mov    ah,0x93
  401be0:	fimul  DWORD PTR [ecx]
  401be2:	pop    ebp
  401be3:	ins    BYTE PTR es:[edi],dx
  401be4:	shl    BYTE PTR [edi-0x2a],0x39
  401be8:	stos   DWORD PTR es:[edi],eax
  401be9:	ss mov ebp,0x65670adb
  401bef:	push   ecx
  401bf0:	push   edi
  401bf1:	adc    ecx,DWORD PTR [edi-0x7e]
  401bf4:	mov    eax,0x6eb6b230
  401bf9:	aam    0xce
  401bfb:	or     DWORD PTR [ebx-0x43e0865],ebx
  401c01:	add    eax,0x6b31f4b3
  401c06:	test   al,0xed
  401c08:	pusha  
  401c09:	cmp    BYTE PTR [ecx],ch
  401c0b:	repnz mov WORD PTR [esi+0x7c9a91a5],es
  401c12:	jne    0x401c07
  401c14:	xor    eax,0x13ab4ff5
  401c19:	mul    DWORD PTR [edi-0x23]
  401c1c:	mov    ds:0x40958b9c,eax
  401c21:	pop    edx
  401c22:	cmp    DWORD PTR [ebx+0x31],ebx
  401c25:	ret    0xe03d
  401c28:	mov    ?,WORD PTR [esi]
  401c2a:	test   DWORD PTR [ebp-0x693758b1],0xd6cd92ab
  401c34:	pop    ecx
  401c35:	daa    
  401c36:	mov    edx,0x61fde0ad
  401c3b:	mov    ds:0xd3c88091,al
  401c40:	fwait
  401c41:	inc    eax
  401c42:	push   0x24
  401c44:	lea    ebx,[esi-0x36874ebf]
  401c4a:	jmp    0x89efb365
  401c4f:	fwait
  401c50:	mov    ecx,0x96074380
  401c55:	add    al,0xb9
  401c57:	jb     0x401c31
  401c59:	test   eax,0x6db2cb84
  401c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c5f:	fcom   DWORD PTR ss:[ebp+edx*1+0x1cd6f183]
  401c67:	jge    0x401c37
  401c69:	jmp    0x92cf:0xde25d755
  401c70:	stos   DWORD PTR es:[edi],eax
  401c71:	sbb    bh,BYTE PTR [edi]
  401c73:	daa    
  401c74:	rcl    eax,1
  401c76:	cmc    
  401c77:	not    DWORD PTR [edi+0x3c895c8c]
  401c7d:	dec    edi
  401c7e:	sbb    DWORD PTR [edi+ecx*8+0x6d],ebx
  401c82:	push   edx
  401c83:	mov    ch,BYTE PTR [edx-0x41bef94e]
  401c89:	jg     0x401d01
  401c8b:	cmc    
  401c8c:	mov    ch,0x23
  401c8e:	ja     0x401c52
  401c90:	xchg   ecx,eax
  401c91:	jl     0x401c2b
  401c93:	(bad)
  401c96:	sbb    BYTE PTR [ebp+0xa],cl
  401c99:	fist   DWORD PTR [ebx]
  401c9b:	add    edx,DWORD PTR [ebx-0x7e]
  401c9e:	test   BYTE PTR [edi],0x2f
  401ca1:	sub    eax,0xba21ca40
  401ca6:	xchg   DWORD PTR [eax],esp
  401ca8:	dec    edi
  401ca9:	(bad)  
  401caa:	fs inc esp
  401cac:	jge    0x401cdc
  401cae:	jnp    0x401cec
  401cb0:	add    eax,0x35009a4b
  401cb5:	mov    cl,0x9f
  401cb7:	push   0xffffffbf
  401cb9:	adc    eax,0x496ac30
  401cbe:	cmp    bl,BYTE PTR [esi+0x2fc9278a]
  401cc4:	rcr    BYTE PTR ds:0x6200681e,cl
  401cca:	mov    al,ds:0xaf566475
  401ccf:	mov    dh,0xf8
  401cd1:	shl    edi,0x6c
  401cd4:	hlt    
  401cd5:	imul   ebx,DWORD PTR [edi*8+0x4ba338be],0x5e3b35b1
  401ce0:	pop    ebx
  401ce1:	vandnps xmm4,xmm6,xmm7
  401ce5:	inc    edx
  401ce6:	shl    BYTE PTR [ecx],cl
  401ce8:	leave  
  401ce9:	imul   ebp,DWORD PTR [edi],0x6
  401cec:	mov    dl,0x5d
  401cee:	call   0xe294:0x280c91ad
  401cf5:	jno    0x401c87
  401cf7:	mov    edx,0x8f291225
  401cfc:	or     al,0xa9
  401cfe:	jecxz  0x401ca3
  401d00:	or     DWORD PTR [ebx-0x7c],eax
  401d03:	shl    DWORD PTR [eax-0x1506f616],cl
  401d09:	push   cs
  401d0a:	pop    esp
  401d0b:	test   DWORD PTR [esi+0x44a34333],edx
  401d11:	pusha  
  401d12:	xor    DWORD PTR [edi-0x26],edx
  401d15:	mov    gs,edx
  401d17:	xchg   ebp,eax
  401d18:	mov    ds:0x9fa1fab,eax
  401d1d:	xor    al,0x71
  401d1f:	xor    edx,DWORD PTR [ecx-0x6c396091]
  401d25:	push   ss
  401d26:	cmp    dl,BYTE PTR [eax]
  401d28:	mov    ?,eax
  401d2a:	nop
  401d2b:	sti    
  401d2c:	(bad)  
  401d2d:	lods   al,BYTE PTR ds:[esi]
  401d2e:	mov    ds:0xc07f4633,al
  401d33:	sub    al,0x6d
  401d35:	sub    DWORD PTR [edi+0x22b6a0d6],ebp
  401d3b:	xor    eax,0xac0a0a10
  401d40:	pop    esp
  401d41:	cli    
  401d42:	pushf  
  401d43:	or     eax,0x74d5d88e
  401d48:	jle    0x401cd5
  401d4a:	and    eax,0xa3c441f8
  401d4f:	inc    ebx
  401d50:	jns    0x401dc8
  401d52:	ins    BYTE PTR es:[edi],dx
  401d53:	ins    BYTE PTR es:[edi],dx
  401d54:	(bad)
  401d57:	icebp  
  401d58:	(bad)  
  401d59:	push   edx
  401d5a:	inc    ebx
  401d5b:	lods   al,BYTE PTR ds:[esi]
  401d5c:	sub    al,0x85
  401d5e:	sub    al,0x90
  401d60:	adc    eax,0x2267277a
  401d65:	setnp  BYTE PTR [edx]
  401d68:	mov    ch,0x36
  401d6a:	out    0x7d,eax
  401d6c:	pop    esi
  401d6d:	icebp  
  401d6e:	lock iret 
  401d70:	stos   BYTE PTR es:[edi],al
  401d71:	aaa    
  401d72:	sub    ecx,DWORD PTR [ebx-0x3849ac43]
  401d78:	cmp    eax,0x73518b5e
  401d7d:	cmp    eax,0x70abd711
  401d82:	retf   0xf5fd
  401d85:	mov    dl,bh
  401d87:	push   0x37554cb4
  401d8c:	(bad)  
  401d8d:	loope  0x401d36
  401d8f:	xchg   ecx,eax
  401d90:	fsub   QWORD PTR [edx-0x1c]
  401d93:	call   0x3422:0x47752233
  401d9a:	push   ebp
  401d9b:	cwde   
  401d9c:	or     eax,0x1e481b60
  401da1:	clc    
  401da2:	lock pop eax
  401da4:	idiv   BYTE PTR [ecx-0x30a0333b]
  401daa:	xchg   esp,eax
  401dab:	in     eax,dx
  401dac:	data16 aaa 
  401dae:	mov    eax,0x54dfb95b
  401db3:	mov    ebp,0x297d74
  401db8:	mov    ecx,0xd4036b8c
  401dbe:	jae    0x401d78
  401dc0:	inc    edi
  401dc1:	sti    
  401dc2:	call   0xb4b8:0x1a93
  401dc8:	dec    esp
  401dc9:	je     0x401ddf
  401dcb:	sbb    eax,0xa8d6b38e
  401dd0:	mov    eax,ds:0x861a0441
  401dd5:	push   eax
  401dd6:	jge    0x401d8a
  401dd8:	repz mov esi,0xafcaf419
  401dde:	data16 (bad) 
  401de0:	xor    cl,BYTE PTR [edi+0x61]
  401de3:	push   ss
  401de4:	repnz mov al,0xa3
  401de7:	mov    bh,0xe8
  401de9:	sahf   
  401dea:	test   DWORD PTR [esp+eax*1],eax
  401ded:	ror    bl,1
  401def:	mov    esi,0xc0ce4c57
  401df4:	add    edx,esi
  401df6:	enter  0x4dd2,0xca
  401dfa:	fdivr  QWORD PTR [ebx+ebx*2+0x655fb2db]
  401e01:	dec    edi
  401e02:	cdq    
  401e03:	dec    ebx
  401e04:	repnz out dx,eax
  401e06:	leave  
  401e07:	pop    ebx
  401e08:	mov    al,ds:0x27be3ca1
  401e0d:	and    eax,0xa17139de
  401e12:	cwde   
  401e13:	test   BYTE PTR [edi-0x10331aed],al
  401e19:	or     ecx,DWORD PTR [ecx-0x38843d49]
  401e1f:	repnz sti 
  401e21:	sbb    bl,bh
  401e23:	ds pop ebp
  401e25:	retf   
  401e26:	ins    BYTE PTR es:[edi],dx
  401e27:	notrack call DWORD PTR [ebp+esi*1-0x60]
  401e2c:	add    DWORD PTR [ebx],esi
  401e2e:	scas   eax,DWORD PTR es:[edi]
  401e2f:	xor    BYTE PTR [ebp-0x80],al
  401e32:	mov    ecx,0x3be42144
  401e37:	xor    BYTE PTR [esi],bh
  401e39:	jne    0x401dd4
  401e3b:	(bad)  
  401e3c:	call   0xb86ce195
  401e41:	mov    bl,0x9b
  401e43:	and    ebx,DWORD PTR [esi]
  401e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e46:	dec    ebp
  401e47:	adc    al,0xa7
  401e49:	lods   al,BYTE PTR ds:[esi]
  401e4a:	mov    ds:0x8d671fca,eax
  401e4f:	fnstcw WORD PTR [ebx]
  401e51:	das    
  401e52:	and    al,0x2b
  401e54:	xor    al,ch
  401e56:	xor    al,0x35
  401e58:	pop    ebx
  401e59:	or     ch,BYTE PTR [esi-0x437a3cee]
  401e5f:	shr    edi,0x57
  401e62:	pop    ebx
  401e63:	ins    DWORD PTR es:[edi],dx
  401e64:	cdq    
  401e65:	aaa    
  401e66:	loope  0x401e34
  401e68:	mov    WORD PTR [eax],?
  401e6a:	push   esi
  401e6b:	sbb    al,BYTE PTR es:[eax+0x55]
  401e6f:	in     al,0x4f
  401e71:	mov    al,ds:0x3b4bca25
  401e76:	mov    WORD PTR [eax],gs
  401e78:	mov    bh,0x18
  401e7a:	shl    DWORD PTR [ebx-0x75],0x1d
  401e7e:	xchg   ecx,eax
  401e7f:	fisttp QWORD PTR [ecx-0x2ff4d7e2]
  401e85:	arpl   si,bx
  401e87:	adc    al,0x10
  401e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8a:	sub    ebp,ebp
  401e8c:	jno    0x401e4b
  401e8e:	or     al,BYTE PTR [si-0x6fcd]
  401e93:	in     al,0xce
  401e95:	inc    esp
  401e96:	ret    0x68d6
  401e99:	ins    DWORD PTR es:[edi],dx
  401e9a:	xor    eax,0x2ae146a9
  401e9f:	daa    
  401ea0:	mov    al,0x60
  401ea2:	les    ebx,FWORD PTR [eax-0x5248a048]
  401ea8:	cld    
  401ea9:	int    0x6d
  401eab:	lods   eax,DWORD PTR ds:[esi]
  401eac:	xor    DWORD PTR [edi+0x664b6dfe],0x2f125e1c
  401eb6:	pusha  
  401eb7:	mov    cs,WORD PTR [edi-0x66]
  401eba:	in     eax,dx
  401ebb:	and    BYTE PTR [edx+0x348386da],0xdb
  401ec2:	daa    
  401ec3:	jne    0x401e93
  401ec5:	mov    ch,0x1f
  401ec7:	and    eax,0xa10d604b
  401ecc:	es cwde 
  401ece:	sbb    eax,0x72d99ae0
  401ed3:	mov    bl,0x5f
  401ed5:	imul   edi,DWORD PTR [edx],0xe9720d01
  401edb:	sbb    al,0xbe
  401edd:	gs ins BYTE PTR es:[edi],dx
  401edf:	stc    
  401ee0:	push   es
  401ee1:	das    
  401ee2:	push   edx
  401ee3:	call   0xadce:0xeb20ce74
  401eea:	rcr    DWORD PTR [eax-0x7d68d8e5],0x44
  401ef1:	sbb    DWORD PTR [ecx-0x2c],edi
  401ef4:	xchg   ebp,eax
  401ef5:	mov    edx,0xe2ed1082
  401efa:	out    dx,al
  401efb:	aad    0x2b
  401efd:	ret    
  401efe:	xchg   edi,eax
  401eff:	lods   eax,DWORD PTR ds:[esi]
  401f00:	enter  0xd7fc,0xd2
  401f04:	fs pop ebp
  401f06:	and    al,0x88
  401f08:	imul   bh
  401f0a:	out    dx,al
  401f0b:	xchg   ecx,eax
  401f0c:	ficomp DWORD PTR es:[esi+ecx*1]
  401f10:	ret    0x8c1a
  401f13:	push   ebx
  401f14:	fnstsw WORD PTR [edi-0x10]
  401f17:	jmp    0x401edb
  401f19:	cs enter 0xea64,0xaa
  401f1e:	ins    DWORD PTR es:[edi],dx
  401f1f:	add    cl,ah
  401f21:	pusha  
  401f22:	out    0x6f,eax
  401f24:	dec    ebx
  401f25:	sbb    ch,bh
  401f27:	adc    al,0xb7
  401f29:	adc    ah,BYTE PTR [esi+0x18db8e74]
  401f2f:	sbb    ah,ch
  401f31:	xlat   BYTE PTR ds:[ebx]
  401f32:	push   eax
  401f33:	adc    DWORD PTR [esi+ebx*1],ebx
  401f36:	jmp    0xa457:0x6341fd63
  401f3d:	shl    DWORD PTR [ecx-0x3ad47005],0x8d
  401f44:	jne    0x401f2c
  401f46:	mov    bh,0x4e
  401f48:	lds    edi,FWORD PTR [edx]
  401f4a:	sub    esp,ecx
  401f4c:	retf   
  401f4d:	inc    edx
  401f4e:	xchg   ebp,eax
  401f4f:	leave  
  401f50:	(bad)  
  401f51:	mov    eax,ds:0x9d64dbd9
  401f56:	sub    BYTE PTR [esi+0x740f7369],al
  401f5c:	js     0x401f23
  401f5e:	scas   al,BYTE PTR es:[edi]
  401f5f:	jp     0x401f35
  401f61:	fs or  eax,0x3b08d607
  401f67:	push   ebx
  401f68:	sbb    eax,0xe22edb95
  401f6d:	adc    eax,0xc448c238
  401f72:	adc    esi,DWORD PTR [ebp-0x4d94e78c]
  401f78:	mov    edx,0xc8ff9d0a
  401f7d:	retf   0x97bf
  401f80:	inc    esp
  401f81:	adc    edi,DWORD PTR [eax+0x47b89a36]
  401f87:	jmp    0x1613a237
  401f8c:	int    0x26
  401f8e:	sbb    dl,BYTE PTR [ebx]
  401f90:	xchg   esi,eax
  401f91:	iret   
  401f92:	lods   al,BYTE PTR ds:[esi]
  401f93:	les    edi,FWORD PTR [ecx-0x642e8c00]
  401f99:	sahf   
  401f9a:	sub    BYTE PTR [edi],ah
  401f9c:	rol    DWORD PTR [edx-0x690e6f91],cl
  401fa2:	iret   
  401fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fa4:	mov    bh,0x73
  401fa6:	iret   
  401fa7:	mov    ebx,0xc361beec
  401fac:	pop    eax
  401fad:	sub    eax,0x13c6c416
  401fb2:	xor    ebx,DWORD PTR [ebp-0x7c]
  401fb5:	or     eax,DWORD PTR ds:0x21484f92
  401fbb:	das    
  401fbc:	loopne 0x401fb6
  401fbe:	mov    al,ds:0x43dcdc76
  401fc3:	lods   eax,DWORD PTR ds:[esi]
  401fc4:	xor    DWORD PTR [ebx+0x1f5c5a18],edx
  401fca:	fst    QWORD PTR [eax+0x16408486]
  401fd0:	mov    ds:0x5c0df7ea,eax
  401fd5:	pop    ss
  401fd6:	or     edx,DWORD PTR [esi]
  401fd8:	cmp    ecx,DWORD PTR [esi+esi*8]
  401fdb:	cmp    eax,0x5bc97263
  401fe0:	popf   
  401fe1:	mov    dh,0x70
  401fe3:	mov    ?,WORD PTR [eax-0x4b]
  401fe6:	mov    edi,0xeffbf8ea
  401feb:	push   esi
  401fec:	mov    esp,esi
  401fee:	sbb    ebp,DWORD PTR [edx]
  401ff0:	ficomp DWORD PTR ds:0xd6807e78
  401ff6:	ins    BYTE PTR es:[edi],dx
  401ff7:	xchg   ebp,eax
  401ff8:	aas    
  401ff9:	test   al,0xfe
  401ffb:	xchg   esp,eax
  401ffc:	push   ebx
  401ffd:	fwait
  401ffe:	dec    edx
  401fff:	push   ds
  402000:	and    DWORD PTR [ebx],esp
  402002:	scas   al,BYTE PTR es:[edi]
  402003:	mov    al,0xa8
  402005:	shl    BYTE PTR [ebp+0x6],0x58
  402009:	add    DWORD PTR [edi-0x50],ebx
  40200c:	jo     0x40205f
  40200e:	mov    ch,0xff
  402010:	and    ebp,DWORD PTR [edi+0x1a]
  402013:	mov    dh,0x8c
  402015:	loope  0x401fd9
  402017:	adc    edx,DWORD PTR ds:0x85899f11
  40201d:	stos   DWORD PTR es:[edi],eax
  40201e:	mov    edi,0x455b8ab4
  402023:	sub    bh,BYTE PTR [esi]
  402025:	xor    ecx,DWORD PTR [edi-0x6d055c15]
  40202b:	inc    ebp
  40202c:	bswap  ebp
  40202e:	adc    eax,0x760cee69
  402033:	add    al,0x5e
  402035:	mov    BYTE PTR ds:0xd4496c03,dl
  40203b:	loopne 0x401fe9
  40203d:	cmp    BYTE PTR [esi],al
  40203f:	cmp    al,0x5a
  402041:	inc    eax
  402042:	xchg   BYTE PTR [esi],bl
  402044:	jmp    0xb7703a29
  402049:	add    eax,0x94c37754
  40204e:	and    esi,DWORD PTR [edx+0x4ae1c451]
  402054:	mov    dl,0xd
  402056:	pop    ebx
  402057:	mov    BYTE PTR [esi],bl
  402059:	sar    eax,cl
  40205b:	pop    ss
  40205c:	leave  
  40205d:	jge    0x402070
  40205f:	xlat   BYTE PTR ds:[ebx]
  402060:	test   esi,esi
  402062:	mov    edi,0xdd0f42b3
  402067:	add    eax,0x2ca02f19
  40206c:	xchg   esi,eax
  40206d:	(bad)  
  40206e:	mov    DWORD PTR [edi],ebp
  402070:	(bad)  
  402071:	fdiv   QWORD PTR [ecx]
  402073:	cdq    
  402074:	and    DWORD PTR [ebx],0x42d538dc
  40207a:	and    al,0x6c
  40207c:	dec    edi
  40207d:	sahf   
  40207e:	jno    0x4020de
  402080:	push   0xffffffc3
  402082:	xor    al,0x7e
  402084:	add    DWORD PTR [edx+0x8],ecx
  402087:	jmp    0x4020bd
  402089:	ffree  st(4)
  40208b:	ja     0x402019
  40208d:	adc    BYTE PTR ds:0x75a0072c,al
  402093:	mov    dl,0xc4
  402095:	pop    ecx
  402096:	sbb    BYTE PTR [eax+ebp*4+0x2b],dh
  40209a:	outs   dx,DWORD PTR ds:[esi]
  40209b:	out    dx,eax
  40209c:	jp     0x402028
  40209e:	pop    esi
  40209f:	ss fcmovnu st,st(0)
  4020a2:	and    eax,0x54d8ad39
  4020a7:	fnstenv [edx]
  4020a9:	jmp    0x4020b6
  4020ab:	dec    esi
  4020ac:	xor    al,0xed
  4020ae:	jmp    0x4020f4
  4020b0:	adc    ecx,DWORD PTR [esi+0x7050ae82]
  4020b6:	xchg   ebx,eax
  4020b7:	jecxz  0x402128
  4020b9:	add    eax,0x5403639a
  4020be:	mov    edi,0x59dfd364
  4020c3:	rcr    edi,0xb3
  4020c6:	dec    ebp
  4020c7:	call   DWORD PTR [edi+0x14]
  4020ca:	jae    0x4020c3
  4020cc:	cld    
  4020cd:	je     0x402107
  4020cf:	aaa    
  4020d0:	push   esp
  4020d1:	cmp    ah,bl
  4020d3:	mov    bl,0x86
  4020d5:	(bad)  
  4020d6:	mov    al,0x1c
  4020d8:	mov    ebp,0xa13263f4
  4020dd:	ret    0x52a8
  4020e0:	retf   0x644b
  4020e3:	cdq    
  4020e4:	dec    ebx
  4020e5:	(bad)  
  4020e7:	inc    edi
  4020e8:	sub    DWORD PTR [ebp-0x7e],0x10f39436
  4020ef:	mov    ds:0x5435c385,eax
  4020f4:	xchg   esi,eax
  4020f5:	ins    BYTE PTR es:[edi],dx
  4020f6:	nop
  4020f7:	ficomp DWORD PTR [edi-0xc]
  4020fa:	cmp    esi,DWORD PTR [eax]
  4020fc:	jb     0x402117
  4020fe:	add    al,0x97
  402100:	int    0x25
  402102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402103:	mov    dl,BYTE PTR [eax+0x4d]
  402106:	inc    eax
  402107:	repnz xor ebx,esi
  40210a:	outs   dx,BYTE PTR ds:[esi]
  40210b:	leave  
  40210c:	rol    BYTE PTR [edx-0x37],cl
  40210f:	mov    esi,0x6d71a71
  402114:	jge    0x402194
  402116:	mov    ebp,0xacbf9f3a
  40211b:	ret    0xde65
  40211e:	lods   eax,DWORD PTR ds:[esi]
  40211f:	dec    edi
  402120:	jl     0x40218f
  402122:	mov    esi,0x6f2b31d8
  402127:	gs ins BYTE PTR es:[edi],dx
  402129:	(bad)  [ecx]
  40212b:	and    bl,BYTE PTR [ebx+0x6d]
  40212e:	lods   al,BYTE PTR ds:[esi]
  40212f:	pop    edi
  402130:	sbb    al,0x1f
  402132:	mov    esp,0x16e92282
  402137:	dec    ecx
  402138:	add    eax,0x5885a8b6
  40213d:	enter  0xf4eb,0x61
  402141:	cmp    BYTE PTR [esi+edi*2+0x37],0x80
  402146:	sbb    ebx,ecx
  402148:	cdq    
  402149:	xor    DWORD PTR es:[eax+0x69ad2baf],ecx
  402150:	je     0x40215c
  402152:	inc    ebx
  402153:	mov    dl,BYTE PTR [esi-0x7af8315b]
  402159:	call   0x766e7909
  40215e:	scas   eax,DWORD PTR es:[edi]
  40215f:	jno    0x4021c1
  402161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402162:	adc    al,0xfb
  402164:	ss mov cl,0x3f
  402167:	cld    
  402168:	je     0x4021cb
  40216a:	ja     0x4021ea
  40216c:	outs   dx,DWORD PTR ds:[esi]
  40216d:	out    0x8f,al
  40216f:	cmc    
  402170:	mov    edx,DWORD PTR [ebx-0x7ee30f1f]
  402176:	pop    es
  402177:	sub    DWORD PTR [edx-0x66],esp
  40217a:	iret   
  40217b:	xor    BYTE PTR [ebx-0x58584bda],bl
  402181:	scas   eax,DWORD PTR es:[edi]
  402182:	or     BYTE PTR [eax],ah
  402184:	dec    edi
  402185:	adc    al,0xaf
  402187:	cli    
  402188:	js     0x402112
  40218a:	scas   al,BYTE PTR es:[edi]
  40218b:	mov    ss,WORD PTR [edi]
  40218d:	mov    ecx,0x29b64fee
  402192:	dec    ebx
  402193:	xchg   cl,al
  402195:	pushf  
  402196:	leave  
  402197:	(bad)  
  402198:	into   
  402199:	sar    al,1
  40219b:	mov    eax,ds:0xcb3eacce
  4021a0:	mov    ebp,DWORD PTR ds:0x91ece9a1
  4021a6:	push   es
  4021a7:	push   ecx
  4021a8:	(bad)  
  4021a9:	mov    ecx,0xf23ca129
  4021ae:	fsub   st,st(0)
  4021b0:	int3   
  4021b1:	fcomp  QWORD PTR [eax-0x78]
  4021b4:	(bad)  
  4021b5:	aad    0x1d
  4021b7:	ficom  WORD PTR [edx+edi*2+0x595cd56f]
  4021be:	mul    ch
  4021c0:	lahf   
  4021c1:	jl     0x4021de
  4021c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021c4:	or     ch,BYTE PTR [ecx]
  4021c6:	leave  
  4021c7:	mov    WORD PTR [edi+ebp*8-0x36],gs
  4021cb:	pop    ss
  4021cc:	xchg   ebx,eax
  4021cd:	pop    edi
  4021ce:	sbb    ah,dh
  4021d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021d1:	and    BYTE PTR [ecx],ah
  4021d3:	adc    bh,BYTE PTR [ecx]
  4021d5:	aam    0x90
  4021d7:	shr    DWORD PTR [ebx],0x78
  4021da:	push   edi
  4021db:	and    BYTE PTR [edi-0x6fdbfd61],al
  4021e1:	imul   esp,DWORD PTR [ebp-0x14d36db0],0xd5abba6c
  4021eb:	outs   dx,DWORD PTR ds:[esi]
  4021ec:	adc    dl,BYTE PTR [ebx+0x3ec461c3]
  4021f2:	int    0x34
  4021f4:	sub    eax,0x93834aed
  4021f9:	inc    si
  4021fb:	outs   dx,BYTE PTR ds:[esi]
  4021fc:	push   eax
  4021fd:	xor    DWORD PTR [eax+0x120ac06],edi
  402203:	xchg   esp,eax
  402204:	pushf  
  402205:	xchg   edx,edi
  402207:	loop   0x4021a3
  402209:	sub    BYTE PTR [eax-0x2],bl
  40220c:	into   
  40220d:	mov    edi,0x6c76bfbe
  402212:	mov    eax,ds:0x88676034
  402217:	cs mov cl,0xfd
  40221a:	mov    eax,0x24d1c25c
  40221f:	push   eax
  402220:	cdq    
  402221:	add    DWORD PTR [eax+0x113db563],eax
  402227:	es jp  0x4021c4
  40222a:	xchg   esi,eax
  40222b:	push   eax
  40222c:	jle    0x4021d1
  40222e:	mov    ebx,0xcce8d534
  402233:	mov    ah,BYTE PTR [edx+esi*4+0x5ce57b3f]
  40223a:	jae    0x402282
  40223c:	xlat   BYTE PTR ds:[ebx]
  40223d:	push   ebp
  40223e:	cmp    al,0xf4
  402240:	call   0xcbe6:0xdf4b1686
  402247:	nop
  402248:	mov    bl,0x3c
  40224a:	in     al,0x5c
  40224c:	pop    ss
  40224d:	dec    ecx
  40224e:	fnstenv [esi+ebx*2]
  402251:	aam    0x63
  402253:	adc    al,dl
  402255:	(bad)  
  402256:	mov    eax,ds:0x9c2dd679
  40225b:	jecxz  0x4022b5
  40225d:	pop    ecx
  40225e:	arpl   ax,si
  402260:	pop    es
  402261:	dec    ebx
  402262:	lds    esp,FWORD PTR cs:[ecx-0x4d]
  402266:	mov    DWORD PTR [ecx+0x49],ebp
  402269:	adc    ch,BYTE PTR [edi-0x516bae87]
  40226f:	in     al,0xd
  402271:	adc    ecx,ebp
  402273:	out    dx,eax
  402274:	test   DWORD PTR [esi],edi
  402276:	inc    ecx
  402277:	xor    ch,BYTE PTR [eax]
  402279:	sub    DWORD PTR [ebx-0x2bcdc2aa],ecx
  40227f:	dec    edx
  402280:	popf   
  402281:	inc    ebp
  402282:	and    al,0x70
  402284:	out    0x19,al
  402286:	pop    es
  402287:	test   DWORD PTR [ebx],ecx
  402289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228a:	sbb    al,0x67
  40228c:	cmp    DWORD PTR [ecx-0x51],edx
  40228f:	cmp    ebx,ebp
  402291:	pop    ebp
  402292:	scas   eax,DWORD PTR es:[edi]
  402293:	xchg   edx,eax
  402294:	(bad)
  402298:	jg     0x402277
  40229a:	mov    dh,BYTE PTR [edx+0x57]
  40229d:	cdq    
  40229e:	jae    0x402306
  4022a0:	mov    edi,0x3aea687
  4022a5:	popa   
  4022a6:	xchg   ebx,eax
  4022a7:	aas    
  4022a8:	mov    esi,0x5b37983
  4022ad:	jp     0x402249
  4022af:	mov    ah,0x8d
  4022b1:	add    BYTE PTR [edx],cl
  4022b3:	add    eax,0x4d1a0642
  4022b8:	inc    eax
  4022b9:	dec    eax
  4022ba:	retf   0xb13
  4022bd:	popf   
  4022be:	(bad)  
  4022bf:	icebp  
  4022c0:	cmc    
  4022c1:	je     0x4022cc
  4022c3:	sbb    edi,DWORD PTR [ebx+eax*8]
  4022c6:	mov    esp,0x69197dd7
  4022cb:	out    dx,eax
  4022cc:	aas    
  4022cd:	and    eax,0x33d70409
  4022d2:	fsub   QWORD PTR [edx]
  4022d4:	add    dl,cl
  4022d6:	les    eax,FWORD PTR [esi]
  4022d8:	stc    
  4022d9:	cmp    BYTE PTR [esi],dh
  4022db:	ds xchg esp,eax
  4022dd:	xchg   BYTE PTR [ebp+edi*2-0x7e],ch
  4022e1:	lock push ebx
  4022e3:	and    eax,0x24041973
  4022e8:	adc    eax,0x7256704a
  4022ed:	adc    BYTE PTR [edx],cl
  4022ef:	ja     0x402305
  4022f1:	adc    bl,0xd3
  4022f4:	dec    eax
  4022f5:	cld    
  4022f6:	dec    eax
  4022f7:	or     BYTE PTR [eax],dh
  4022f9:	adc    eax,DWORD PTR [edx-0xd]
  4022fc:	mov    eax,ds:0xfde152f7
  402301:	push   ebp
  402302:	inc    ebp
  402303:	fldenv [edx+0x7]
  402306:	adc    eax,0xc15cfc62
  40230b:	dec    edi
  40230c:	fisttp DWORD PTR [eax-0x65]
  40230f:	sbb    bl,BYTE PTR [ecx+0xb]
  402312:	aaa    
  402313:	nop
  402314:	mov    ch,0x33
  402316:	mov    esi,0x831ab7a9
  40231b:	enter  0x53b6,0xfe
  40231f:	mov    ebp,edx
  402321:	cli    
  402322:	pextrw ebp,(bad),0xc5
  402324:	test   al,0x36
  402326:	lock inc ecx
  402328:	adc    DWORD PTR [ebx],esp
  40232a:	push   es
  40232b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40232c:	in     al,dx
  40232d:	or     ecx,DWORD PTR [edi]
  40232f:	inc    eax
  402330:	mov    ebx,0xe704a0a6
  402335:	jmp    0xdbdffae8
  40233a:	data16 (bad) 
  40233c:	hlt    
  40233d:	or     DWORD PTR [ecx-0x1f2d501a],eax
  402343:	push   edi
  402344:	and    edi,ebp
  402346:	push   es
  402347:	push   edx
  402348:	or     edx,DWORD PTR [ecx]
  40234a:	adc    DWORD PTR ds:0x292c3e6d,ebp
  402350:	call   0xad6844c7
  402355:	jnp    0x4023c7
  402357:	xlat   BYTE PTR ds:[ebx]
  402358:	inc    esi
  402359:	in     eax,dx
  40235a:	loope  0x402328
  40235c:	aas    
  40235d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40235e:	inc    ebx
  40235f:	rol    BYTE PTR [eax+ecx*2-0x55fc7b4d],0xf1
  402367:	add    eax,0xa12fbd
  40236c:	bound  ebp,QWORD PTR [edi+esi*4-0x1d]
  402370:	daa    
  402371:	shr    BYTE PTR [edx+0x456d8004],0xc5
  402378:	push   ss
  402379:	in     al,dx
  40237a:	or     edx,DWORD PTR [esi]
  40237c:	mov    al,0xe1
  40237e:	jmp    0x402353
  402380:	pop    ss
  402381:	jo     0x402342
  402383:	(bad)  
  402385:	mov    al,0xca
  402387:	sbb    ch,cl
  402389:	adc    eax,0xd88dde9d
  40238e:	test   DWORD PTR [ebp-0x19],ebx
  402391:	inc    edx
  402392:	jo     0x402373
  402394:	test   ecx,0xf1ec44ba
  40239a:	shr    BYTE PTR [ecx-0x51fec3fc],1
  4023a0:	es inc ecx
  4023a2:	cdq    
  4023a3:	je     0x4023b7
  4023a5:	je     0x4023bf
  4023a7:	jp     0x4023ae
  4023a9:	push   ecx
  4023aa:	mov    dl,0xd9
  4023ac:	cmp    eax,0xae690960
  4023b1:	(bad)  
  4023b3:	aaa    
  4023b4:	clc    
  4023b5:	scas   eax,DWORD PTR es:[edi]
  4023b6:	mov    esp,0x96453095
  4023bb:	into   
  4023bc:	and    esp,DWORD PTR [eax-0x3e6012cb]
  4023c2:	(bad)  
  4023c4:	out    0x33,al
  4023c6:	mov    eax,0x329a95d5
  4023cb:	push   0xffffffea
  4023cd:	fs xor cl,dl
  4023d0:	repz cld 
  4023d2:	jge    0x402359
  4023d4:	stos   BYTE PTR es:[edi],al
  4023d5:	sbb    BYTE PTR [ebp-0x3a6ffdf6],al
  4023db:	cmp    eax,eax
  4023dd:	inc    edi
  4023de:	sbb    dl,BYTE PTR [eax+ebx*8]
  4023e1:	adc    BYTE PTR [edi],al
  4023e3:	aam    0x81
  4023e5:	mov    eax,0xafdd9bed
  4023ea:	push   esp
  4023eb:	rol    DWORD PTR [esi],cl
  4023ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023ee:	add    BYTE PTR ds:0x126865ce,dh
  4023f4:	adc    BYTE PTR [edx],dl
  4023f6:	or     al,0x61
  4023f8:	jecxz  0x4023a7
  4023fa:	inc    esp
  4023fb:	test   al,0x4e
  4023fd:	jp     0x40244a
  4023ff:	xchg   edx,eax
  402400:	stos   BYTE PTR es:[edi],al
  402401:	call   0xac0f:0xd981e94f
  402408:	je     0x402448
  40240a:	xchg   edi,eax
  40240b:	jns    0x4023e3
  40240d:	inc    ebp
  40240e:	cmp    bl,BYTE PTR [ecx]
  402410:	mov    edi,0x80e1b540
  402415:	inc    esp
  402416:	ret    
  402417:	icebp  
  402418:	leave  
  402419:	les    edx,FWORD PTR [ebx]
  40241b:	fimul  DWORD PTR [eax-0x6f]
  40241e:	mov    ch,0xf1
  402420:	nop
  402421:	pop    es
  402422:	pop    ss
  402423:	jle    0x4024a2
  402425:	and    eax,0x9052a792
  40242a:	or     eax,0x3489445a
  40242f:	mov    eax,ds:0x6435155a
  402434:	push   ds
  402435:	jne    0x40240f
  402437:	ins    DWORD PTR es:[edi],dx
  402438:	sbb    al,0x52
  40243a:	pop    eax
  40243b:	lods   al,BYTE PTR ds:[esi]
  40243c:	dec    esp
  40243d:	pushf  
  40243e:	rcr    BYTE PTR [ebp+0x5f713097],1
  402444:	call   0x11e11a72
  402449:	ror    DWORD PTR [edi],1
  40244b:	mov    cl,0x36
  40244d:	jmp    0xe3129dc7
  402452:	mov    ds:0xbf062273,al
  402457:	rcr    BYTE PTR [ebx+0x57],1
  40245a:	in     al,dx
  40245b:	push   ds
  40245c:	inc    ebp
  40245d:	push   eax
  40245e:	push   ecx
  40245f:	sbb    eax,0x343ecbfc
  402464:	sub    dh,dh
  402466:	inc    eax
  402467:	mov    cl,0x32
  402469:	leave  
  40246a:	jns    0x402498
  40246c:	(bad)  
  40246e:	ficom  WORD PTR [ebx-0x72227075]
  402474:	dec    edi
  402475:	add    al,0xff
  402477:	cmc    
  402478:	adc    edx,DWORD PTR [esi+0x36]
  40247b:	lea    ecx,[eax-0x3190aea5]
  402481:	jnp    0x4024dc
  402483:	inc    ebp
  402484:	push   ebp
  402485:	ins    DWORD PTR es:[edi],dx
  402486:	ret    
  402487:	xor    esp,DWORD PTR [edx+0x45]
  40248a:	pop    esi
  40248b:	(bad)  
  40248c:	mov    cl,0x75
  40248e:	xor    eax,0xc872bef0
  402493:	ret    0x7d88
  402496:	mov    esp,0x341dc770
  40249b:	and    al,0x5c
  40249d:	inc    esp
  40249e:	gs mov ah,0xc9
  4024a1:	es in  al,0x6c
  4024a4:	xchg   ecx,eax
  4024a5:	inc    ebp
  4024a6:	adc    eax,0xabdf6635
  4024ab:	sbb    DWORD PTR [ebp+0x25],0x9d8475cd
  4024b2:	push   0x27034ba
  4024b7:	mov    WORD PTR [eax+0x2],es
  4024ba:	je     0x40248e
  4024bc:	push   ecx
  4024bd:	cmp    eax,DWORD PTR [edi]
  4024bf:	mov    dl,0x47
  4024c1:	mov    edx,0x98a75e26
  4024c6:	lock aaa 
  4024c8:	pop    es
  4024c9:	or     DWORD PTR [edx+0x51],ebx
  4024cc:	in     al,dx
  4024cd:	repz jb 0x4024d8
  4024d0:	int3   
  4024d1:	aam    0xc9
  4024d3:	mov    edi,0x2169e1b7
  4024d8:	out    0x85,eax
  4024da:	push   esi
  4024db:	mov    eax,0x8714e42f
  4024e0:	pop    esp
  4024e1:	cmc    
  4024e2:	or     BYTE PTR [eax+0x25e28dd],dl
  4024e8:	dec    ebp
  4024e9:	inc    ecx
  4024ea:	push   ebx
  4024eb:	stos   DWORD PTR es:[edi],eax
  4024ec:	je     0x40252b
  4024ee:	xor    eax,0x28c15232
  4024f3:	mov    esp,0xe689f0c1
  4024f8:	mov    dl,0xe8
  4024fa:	cmp    dl,bh
  4024fc:	mov    dh,BYTE PTR [esi]
  4024fe:	test   al,0x87
  402500:	or     eax,0x8a9ace34
  402505:	(bad)  
  402507:	xlat   BYTE PTR ds:[ebx]
  402508:	pusha  
  402509:	mov    DWORD PTR [esi-0xefcb47c],0x65b9ff0f
  402513:	fisubr DWORD PTR [ebp-0x64cc6358]
  402519:	and    bl,BYTE PTR [edx+eax*8]
  40251c:	dec    esp
  40251d:	jns    0x4024bf
  40251f:	sbb    bh,BYTE PTR [esi]
  402521:	or     bl,ah
  402523:	cli    
  402524:	push   edx
  402525:	cs sbb al,0x6c
  402528:	adc    bl,bl
  40252a:	aas    
  40252b:	xchg   edx,eax
  40252c:	push   ds
  40252d:	ror    DWORD PTR [ebp+0x16808789],1
  402533:	xor    ch,BYTE PTR [esi]
  402535:	pop    eax
  402536:	retf   0xdafd
  402539:	std    
  40253a:	xchg   ecx,eax
  40253b:	xchg   edx,eax
  40253c:	mov    ch,0x83
  40253e:	jecxz  0x4025a2
  402540:	adc    esi,DWORD PTR [eax]
  402542:	retf   0xac11
  402545:	(bad)  
  402547:	out    0xe2,al
  402549:	push   ecx
  40254a:	fcomi  st,st(5)
  40254c:	push   edx
  40254d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40254e:	shl    BYTE PTR [edi+0x764e843c],0x9f
  402555:	sub    BYTE PTR [edx-0x47],0x97
  402559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40255a:	fstp   QWORD PTR [ebx-0x62]
  40255d:	push   cs
  40255e:	pop    es
  40255f:	pop    ebx
  402560:	mov    ds:0x5983eb0c,eax
  402565:	ds daa 
  402567:	cmovnp ebx,DWORD PTR [edx-0x28]
  40256b:	adc    al,0x43
  40256d:	jecxz  0x4024f9
  40256f:	cmp    dh,BYTE PTR [ebx+0x7bcadefe]
  402575:	pop    esi
  402576:	pop    esp
  402577:	test   BYTE PTR [edi-0x93736e3],cl
  40257d:	jmp    0x40255b
  40257f:	inc    esi
  402580:	push   esi
  402581:	je     0x402509
  402583:	dec    esp
  402584:	iret   
  402585:	lds    ecx,FWORD PTR [ecx-0x78]
  402588:	adc    al,0xec
  40258a:	cmc    
  40258b:	sar    ebp,1
  40258d:	hlt    
  40258e:	rsm    
  402590:	shr    BYTE PTR [edi],0xfd
  402593:	lss    ebp,FWORD PTR [ebp+0x26]
  402597:	cdq    
  402598:	dec    ebp
  402599:	sbb    al,0xe5
  40259b:	out    0x21,al
  40259d:	jb     0x402577
  40259f:	rol    BYTE PTR [edi],cl
  4025a1:	icebp  
  4025a2:	mov    es,WORD PTR [edx-0x14]
  4025a5:	in     eax,0x29
  4025a7:	pusha  
  4025a8:	aad    0xae
  4025aa:	add    BYTE PTR ds:0xc6583822,0xbb
  4025b1:	push   ds
  4025b2:	xchg   BYTE PTR [edi+0x52c6fe03],dh
  4025b8:	(bad)  
  4025b9:	adc    eax,0x99c86234
  4025be:	fnstcw WORD PTR [ecx+0x74]
  4025c1:	imul   ecx,DWORD PTR [edi+0x11dd91e1],0x9fbe8844
  4025cb:	dec    DWORD PTR [eax+eiz*2]
  4025ce:	hlt    
  4025cf:	fisttp DWORD PTR [esi]
  4025d1:	mov    bl,0x92
  4025d3:	sub    ecx,ebp
  4025d5:	sub    BYTE PTR [edx],bh
  4025d7:	daa    
  4025d8:	and    eax,0x1981f312
  4025dd:	cld    
  4025de:	dec    esp
  4025df:	inc    ebp
  4025e0:	stos   BYTE PTR es:[edi],al
  4025e1:	daa    
  4025e2:	adc    ebx,DWORD PTR [eax+0x0]
  4025e5:	out    dx,al
  4025e6:	cmovae esp,DWORD PTR [edi]
  4025e9:	jns    0x402595
  4025eb:	cmp    ecx,DWORD PTR [edx-0x1a]
  4025ee:	adc    DWORD PTR [ecx-0x70],ecx
  4025f1:	outs   dx,DWORD PTR ds:[esi]
  4025f2:	add    bh,BYTE PTR [edi]
  4025f4:	ret    
  4025f5:	mov    bl,0xcf
  4025f7:	cld    
  4025f8:	adc    BYTE PTR [ebx],bl
  4025fa:	adc    dh,ah
  4025fc:	jnp    0x4025c9
  4025fe:	xor    al,0xbe
  402600:	dec    ecx
  402601:	sysret 
  402603:	push   es
  402604:	ss pushf 
  402606:	xchg   edi,eax
  402607:	cmp    eax,0x5c0f4a01
  40260c:	sar    bh,1
  40260e:	mov    dh,0xc3
  402610:	sar    DWORD PTR [esi+0x17],cl
  402613:	mov    ebx,0x1429fc62
  402618:	pop    edi
  402619:	jmp    0x2e2f943b
  40261e:	push   edx
  40261f:	add    eax,DWORD PTR [edi+0x61f635e4]
  402625:	(bad)  
  402626:	out    dx,al
  402627:	add    eax,0xada6dd1d
  40262c:	inc    ebx
  40262d:	sbb    BYTE PTR [ecx+0x405ac9b9],ah
  402633:	loop   0x402663
  402635:	sub    al,0xae
  402637:	clc    
  402638:	sbb    DWORD PTR ds:0x5b6580c6,edi
  40263e:	pop    ebx
  40263f:	in     al,dx
  402640:	in     eax,0xe1
  402642:	mov    bh,0xfb
  402644:	mov    ds:0x5d9bd533,eax
  402649:	xchg   ecx,eax
  40264a:	addr16 xchg esi,eax
  40264c:	sbb    ebp,ebx
  40264e:	retf   
  40264f:	out    0x71,eax
  402651:	push   esi
  402652:	jb     0x40268d
  402654:	sahf   
  402655:	cmp    DWORD PTR [esi],ecx
  402657:	lahf   
  402658:	ds dec esp
  40265a:	aaa    
  40265b:	cmc    
  40265c:	dec    ecx
  40265d:	mov    dh,0x4b
  40265f:	pushf  
  402660:	rcr    DWORD PTR [edi+0x17629581],cl
  402666:	iret   
  402667:	and    BYTE PTR [ebx+0x6b],bl
  40266a:	in     al,0x57
  40266c:	jmp    DWORD PTR [eax-0x4b159845]
  402672:	mov    bh,0xc3
  402674:	pusha  
  402675:	and    BYTE PTR ds:0x6fa5b1a7,dh
  40267b:	and    ah,dl
  40267d:	daa    
  40267e:	pop    esp
  40267f:	cmp    cl,BYTE PTR [ebp+0x28]
  402682:	mov    al,0x3a
  402684:	clc    
  402685:	nop
  402686:	and    eax,0x3f205aad
  40268b:	mov    dl,0x6c
  40268d:	out    dx,eax
  40268e:	cmc    
  40268f:	pop    ds
  402690:	fbld   TBYTE PTR [eax-0x24fb2605]
  402696:	push   eax
  402697:	jmp    0x4026c2
  402699:	cmp    eax,0xc486ad2f
  40269e:	push   ecx
  40269f:	lods   al,BYTE PTR cs:[esi]
  4026a1:	jl     0x40265b
  4026a3:	(bad)  
  4026a4:	adc    al,0xfc
  4026a6:	push   edx
  4026a7:	mov    eax,ds:0xc892798c
  4026ac:	das    
  4026ad:	mov    esp,0xe86a68da
  4026b2:	mov    edx,0xf8fba8ac
  4026b7:	icebp  
  4026b8:	mov    bl,0xb0
  4026ba:	mov    ebx,0x4a61a292
  4026bf:	adc    al,0x54
  4026c1:	jl     0x402689
  4026c3:	scas   al,BYTE PTR es:[edi]
  4026c4:	jp     0x40273b
  4026c6:	leave  
  4026c7:	push   0x6088e93b
  4026cc:	outs   dx,BYTE PTR ds:[esi]
  4026cd:	adc    DWORD PTR [ebp+0x64],ebx
  4026d0:	repz sbb BYTE PTR [eax+0xf],cl
  4026d4:	pop    ds
  4026d5:	inc    ebx
  4026d6:	inc    edi
  4026d7:	mov    eax,ds:0x62a769ed
  4026dc:	jmp    0x6c12:0xe962347e
  4026e3:	not    DWORD PTR [ecx]
  4026e5:	sub    BYTE PTR [edx-0x65],0xe8
  4026e9:	or     DWORD PTR ds:0x3e2371c4,ecx
  4026ef:	xor    eax,0x7468f4bd
  4026f4:	in     al,dx
  4026f5:	gs (bad) 
  4026f7:	jo     0x402728
  4026f9:	dec    eax
  4026fa:	and    al,0x61
  4026fc:	clc    
  4026fd:	mov    ds:0x38aa509e,eax
  402702:	jp     0x4026c8
  402704:	aas    
  402705:	pop    eax
  402706:	enter  0x6fb9,0x94
  40270a:	push   ecx
  40270b:	out    0x4b,eax
  40270d:	add    esi,DWORD PTR [ebx-0x5416baf0]
  402713:	(bad)  
  402714:	sbb    ebx,DWORD PTR [ecx-0x6c81b444]
  40271a:	and    ebx,ebx
  40271c:	outs   dx,DWORD PTR es:[esi]
  40271e:	xor    al,0x20
  402720:	mov    ecx,0xe175255a
  402725:	jl     0x4026e6
  402727:	enter  0x2eff,0x85
  40272b:	mov    eax,0x52960643
  402730:	xchg   edx,eax
  402731:	xchg   ecx,eax
  402732:	cmp    DWORD PTR [esi-0x6f7d0bf6],esp
  402738:	icebp  
  402739:	cdq    
  40273a:	(bad)  
  40273b:	cmp    DWORD PTR [edx+0x68d752e7],esp
  402741:	shl    DWORD PTR [edi],cl
  402743:	ror    di,1
  402746:	cmp    DWORD PTR [edi-0x7e],0xfffffff4
  40274a:	rcr    DWORD PTR [esi+0x46],cl
  40274d:	pop    ebp
  40274e:	mov    al,0xcd
  402750:	add    eax,0x9081549c
  402755:	nop
  402756:	xchg   esp,eax
  402757:	cli    
  402758:	add    cl,BYTE PTR [edi-0x72]
  40275b:	pop    ebx
  40275c:	push   es
  40275d:	aas    
  40275e:	push   ss
  40275f:	(bad)  
  402761:	cmp    DWORD PTR [ebp+eiz*1+0x739b11ab],eax
  402768:	jbe    0x40273c
  40276a:	dec    edi
  40276b:	push   ss
  40276c:	sar    dl,1
  40276e:	mov    bl,0xe7
  402770:	int3   
  402771:	(bad)  
  402772:	xlat   BYTE PTR ds:[ebx]
  402773:	inc    ecx
  402774:	pop    esi
  402775:	mov    es,WORD PTR [esi-0x2b]
  402778:	inc    eax
  402779:	adc    DWORD PTR [eax+0x5],edi
  40277c:	adc    BYTE PTR [edx-0x45],bh
  40277f:	dec    esi
  402780:	popa   
  402781:	push   0xffffff93
  402783:	inc    edx
  402784:	in     al,0x78
  402786:	mov    dl,0xe7
  402788:	mov    ebx,0xaf908201
  40278d:	stc    
  40278e:	(bad)  
  40278f:	jle    0x4027dc
  402791:	out    0xc2,al
  402793:	fwait
  402794:	add    eax,0x3271fb16
  402799:	ret    0x2afc
  40279c:	jg     0x4027df
  40279e:	dec    ebp
  40279f:	jle    0x4027c6
  4027a1:	out    0xa0,al
  4027a3:	pop    ecx
  4027a4:	loope  0x40279f
  4027a6:	dec    esi
  4027a7:	jb     0x4027d3
  4027a9:	stos   BYTE PTR es:[edi],al
  4027aa:	or     al,0x5
  4027ac:	das    
  4027ad:	loopne 0x4027db
  4027af:	push   esi
  4027b0:	jge    0x40274d
  4027b2:	dec    ebp
  4027b4:	arpl   WORD PTR [edi-0x2c],ax
  4027b7:	mov    ah,0x8c
  4027b9:	frstor [edx-0x32649baa]
  4027bf:	dec    esp
  4027c0:	pop    eax
  4027c1:	pop    ss
  4027c2:	xchg   ecx,eax
  4027c3:	or     edi,DWORD PTR [ebp-0x432f73f5]
  4027c9:	pop    ds
  4027ca:	pushf  
  4027cb:	fbld   TBYTE PTR [esi+0x27d74b28]
  4027d1:	or     di,ax
  4027d4:	add    eax,0x4fe7ca2c
  4027d9:	mov    cl,0xa
  4027db:	sub    DWORD PTR [esi-0x3d],ebx
  4027de:	lahf   
  4027df:	inc    esi
  4027e0:	mov    ds:0xccf1978,eax
  4027e5:	mov    WORD PTR [ebp-0x1e],?
  4027e8:	xchg   esi,eax
  4027e9:	jle    0x4027e3
  4027eb:	dec    esi
  4027ec:	pop    ss
  4027ed:	fdivr  QWORD PTR [ebx]
  4027ef:	pop    eax
  4027f0:	push   edi
  4027f1:	scas   eax,DWORD PTR es:[edi]
  4027f2:	movups xmm6,xmm6
  4027f5:	out    dx,al
  4027f6:	retf   0x4967
  4027f9:	lods   eax,DWORD PTR ds:[esi]
  4027fa:	(bad)  
  4027fb:	jecxz  0x4027ce
  4027fd:	sub    BYTE PTR [edi+0x307863e5],ch
  402803:	dec    ecx
  402804:	inc    esi
  402805:	out    dx,al
  402806:	inc    ecx
  402807:	stos   DWORD PTR es:[edi],eax
  402808:	dec    BYTE PTR ss:[ebx+ebp*1-0x6bc09843]
  402810:	cmp    DWORD PTR [ebx-0x228365a7],edx
  402816:	inc    edi
  402817:	pop    ds
  402818:	outs   dx,BYTE PTR ds:[esi]
  402819:	aad    0xf5
  40281b:	in     al,dx
  40281c:	mov    cl,0xc8
  40281e:	adc    BYTE PTR [ecx+0x18071bb5],bh
  402824:	aam    0x57
  402826:	mov    dl,0x3d
  402828:	sub    al,0x79
  40282a:	aaa    
  40282b:	or     ah,dl
  40282d:	sub    eax,edx
  40282f:	cdq    
  402830:	mov    ds:0x290d09aa,eax
  402835:	in     al,dx
  402836:	xor    esp,DWORD PTR [edx]
  402838:	test   al,ah
  40283a:	jecxz  0x4027f0
  40283c:	xor    DWORD PTR [ebp-0x2046780a],esi
  402842:	fsubr  DWORD PTR [edx+eiz*8]
  402845:	add    DWORD PTR [esi+eax*8-0x468a42e7],0x76
  40284d:	cmp    al,0x8b
  402850:	loopne 0x4027f9
  402852:	in     al,0x8f
  402854:	add    bh,BYTE PTR [esi-0x1dff499d]
  40285a:	es sti 
  40285c:	(bad)  
  40285d:	dec    ecx
  40285e:	jp     0x4027f4
  402860:	mov    dh,BYTE PTR [ebp-0xe]
  402863:	aaa    
  402864:	cmp    BYTE PTR [ebp+0x70],0xd4
  402868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402869:	shr    edx,1
  40286b:	icebp  
  40286c:	inc    eax
  40286d:	je     0x40283c
  40286f:	lahf   
  402870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402871:	js     0x4028e6
  402873:	std    
  402874:	xchg   BYTE PTR [ebx-0x319fa85b],dh
  40287a:	call   0xbb8c:0xbe4f0fc0
  402881:	jmp    0x402880
  402883:	mov    ecx,0xc103c7af
  402888:	outs   dx,DWORD PTR ds:[esi]
  402889:	inc    esi
  40288a:	xor    bh,dh
  40288c:	in     al,0x4
  40288e:	inc    esi
  40288f:	inc    eax
  402890:	(bad)  
  402891:	and    DWORD PTR [di+0x3a],0xfffffff4
  402896:	xor    DWORD PTR [esp+ebp*1],edi
  402899:	dec    ebx
  40289a:	xchg   ecx,eax
  40289b:	int3   
  40289c:	sub    eax,0xcfca3aa6
  4028a1:	jge    0x40286f
  4028a3:	mov    esp,0x9cf74255
  4028a8:	mov    eax,ds:0x986b7c27
  4028ad:	jl     0x4028e8
  4028af:	(bad)  
  4028b0:	xor    BYTE PTR ds:0xe05326ea,ch
  4028b6:	(bad)  
  4028b7:	aas    
  4028b8:	test   BYTE PTR [esi-0x70],0xec
  4028bc:	mov    edx,0x5ff75eac
  4028c1:	add    esi,esi
  4028c3:	lock jg 0x402859
  4028c6:	xor    bh,ch
  4028c8:	and    BYTE PTR [edx],dl
  4028ca:	pop    esi
  4028cb:	cmp    eax,0x628bbdc2
  4028d0:	jecxz  0x40285b
  4028d2:	out    0x3d,eax
  4028d4:	push   ebp
  4028d5:	add    DWORD PTR [ebp+ebp*2-0x3e],0x3b8ba608
  4028dd:	jge    0x4028b4
  4028df:	aam    0x43
  4028e1:	pop    DWORD PTR [esi-0x2412ccd]
  4028e7:	or     al,0x83
  4028e9:	imul   ebx,DWORD PTR [esp+ebp*1+0x6a9e3a55],0xfffffff6
  4028f1:	sub    esp,DWORD PTR [eax+0x60]
  4028f4:	inc    ecx
  4028f5:	or     eax,0xbc3ec4aa
  4028fa:	mov    edi,0x9d779fdc
  4028ff:	in     al,0x62
  402901:	ja     0x4028a6
  402903:	jp     0x4028cf
  402905:	push   esi
  402906:	cmp    dl,BYTE PTR [ebx]
  402908:	xor    eax,0xe092dcd3
  40290d:	jbe    0x4028d0
  40290f:	aam    0x1c
  402911:	fsubp  st(5),st
  402913:	sbb    eax,0x7472dd15
  402918:	cmc    
  402919:	adc    eax,0xf01c4a0a
  40291e:	sub    eax,0x465e4519
  402923:	aam    0xf9
  402925:	push   0x2208dfd
  40292a:	aaa    
  40292b:	push   ds
  40292c:	add    BYTE PTR [esi],al
  40292e:	cli    
  40292f:	xor    ebx,esp
  402931:	ret    
  402932:	(bad)  
  402933:	loope  0x40290a
  402935:	mov    ecx,0x5108d1b7
  40293a:	dec    esi
  40293b:	xchg   esi,eax
  40293c:	jecxz  0x402931
  40293e:	ins    DWORD PTR es:[edi],dx
  40293f:	jb     0x40299a
  402941:	nop
  402942:	push   0x78e565c5
  402947:	sub    edx,ebp
  402949:	aas    
  40294a:	pop    ecx
  40294b:	scas   eax,DWORD PTR es:[edi]
  40294c:	cmp    edi,DWORD PTR ds:0xfdc46692
  402952:	dec    ebx
  402953:	or     ecx,ebx
  402955:	jl     0x8bca7a56
  40295b:	pop    ss
  40295c:	retf   0xd962
  40295f:	mov    dl,0x9
  402961:	mov    bl,0x7e
  402963:	popa   
  402964:	in     al,dx
  402965:	and    BYTE PTR [esi+0x3f],ah
  402968:	fistp  QWORD PTR ds:0xbdc1e6db
  40296e:	and    al,0x35
  402970:	cmp    ecx,DWORD PTR [ebp-0xd34c2eb]
  402976:	pop    eax
  402977:	lds    ecx,FWORD PTR [eax]
  402979:	or     DWORD PTR [ebx+0x15],ebx
  40297c:	jae    0x4029bf
  40297e:	cmp    BYTE PTR [edi],ch
  402980:	sti    
  402981:	sub    eax,0xe4d477a3
  402986:	ins    BYTE PTR es:[edi],dx
  402987:	in     eax,0x3c
  402989:	loopne 0x402a00
  40298b:	xchg   ebp,eax
  40298c:	sahf   
  40298d:	in     al,dx
  40298e:	dec    dh
  402990:	ja     0x402a0a
  402992:	out    dx,eax
  402993:	imul   esi,DWORD PTR [eax-0x65e21d6e],0x560e6470
  40299d:	jmp    0x4029bf
  40299f:	lods   eax,DWORD PTR ds:[esi]
  4029a0:	vcmpss k0{k5},xmm2,(bad),0xc1
  4029a2:	cs sbb eax,0x513785c2
  4029a8:	(bad)  
  4029a9:	pop    ss
  4029aa:	push   es
  4029ab:	cmc    
  4029ac:	mov    DWORD PTR [ebp-0x6fce2c82],eax
  4029b2:	and    ch,BYTE PTR [ecx]
  4029b4:	popf   
  4029b5:	cmp    eax,0xe2a59d5e
  4029ba:	pop    edx
  4029bb:	call   FWORD PTR [eax-0x62]
  4029be:	pop    edi
  4029bf:	cmp    eax,DWORD PTR [eax]
  4029c1:	fstp   QWORD PTR [eax-0x49a5c905]
  4029c7:	and    ecx,esp
  4029c9:	pop    es
  4029ca:	mov    ds:0xbc12c4f9,eax
  4029cf:	faddp  st(7),st
  4029d1:	aad    0x3d
  4029d3:	daa    
  4029d4:	inc    esp
  4029d5:	and    eax,0xf4fd9297
  4029da:	jp     0x40298a
  4029dc:	(bad)  
  4029dd:	push   esp
  4029de:	jmp    0x402a09
  4029e0:	mov    DWORD PTR [esp+0x6a],esi
  4029e4:	cmp    DWORD PTR [edx],esi
  4029e6:	cwde   
  4029e7:	xchg   esi,eax
  4029e8:	adc    edi,esp
  4029ea:	sahf   
  4029eb:	xor    ebp,ebx
  4029ed:	enter  0x772b,0xeb
  4029f1:	aad    0xdc
  4029f3:	jne    0x4029e4
  4029f5:	inc    edx
  4029f6:	xor    al,0x11
  4029f8:	jnp    0x40299c
  4029fa:	repz int 0x7c
  4029fd:	mov    al,ds:0xab3ad1d1
  402a02:	gs mov edx,0x2a2699b1
  402a08:	lds    ebx,FWORD PTR [edi-0x1ef1451a]
  402a0e:	or     al,BYTE PTR [eax+edi*2+0x6]
  402a12:	das    
  402a13:	adc    DWORD PTR [edi],ebx
  402a15:	jo     0x402a0f
  402a17:	fwait
  402a18:	push   edi
  402a19:	jno    0x402a4f
  402a1b:	push   0x2
  402a1d:	mov    bh,BYTE PTR [esi+0x6f]
  402a20:	dec    edi
  402a21:	in     al,0xac
  402a23:	jle    0x4029bd
  402a25:	add    BYTE PTR [edx],cl
  402a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a28:	jmp    0xd1bccfb9
  402a2d:	pushf  
  402a2e:	pop    ebx
  402a2f:	fwait
  402a30:	push   eax
  402a31:	nop
  402a32:	loop   0x4029df
  402a34:	rcl    DWORD PTR [ebx+0x35],cl
  402a37:	mov    bh,0x3
  402a39:	js     0x4029d0
  402a3b:	push   0xffffffff
  402a3d:	cmc    
  402a3e:	inc    eax
  402a3f:	jmp    0x402a76
  402a41:	dec    edx
  402a42:	or     ah,dl
  402a44:	push   ebx
  402a45:	ror    DWORD PTR [ecx-0x26],0x33
  402a49:	jns    0x402ab2
  402a4b:	cld    
  402a4c:	jmp    0x1b7ca742
  402a51:	(bad)  
  402a52:	pop    ebp
  402a53:	stos   BYTE PTR es:[edi],al
  402a54:	sub    BYTE PTR [eax-0x30],bl
  402a57:	sub    al,0x94
  402a59:	repz or dl,ch
  402a5c:	cdq    
  402a5d:	ja     0x402a9b
  402a5f:	fwait
  402a60:	and    al,0xa3
  402a62:	mov    cl,0x7a
  402a64:	mov    ch,0x8d
  402a66:	xor    eax,eax
  402a68:	xor    al,0xd6
  402a6a:	inc    esi
  402a6b:	or     ebx,edx
  402a6d:	lds    ebx,FWORD PTR [edx-0x5b5da134]
  402a73:	add    BYTE PTR [eax],0xc
  402a76:	xor    esp,ecx
  402a78:	mov    ecx,0xa3b8062a
  402a7d:	lahf   
  402a7e:	dec    ebp
  402a7f:	dec    ecx
  402a80:	outs   dx,BYTE PTR ds:[esi]
  402a81:	stos   DWORD PTR es:[edi],eax
  402a82:	cs stos DWORD PTR es:[edi],eax
  402a84:	jge    0x402a0a
  402a86:	rcr    DWORD PTR [edi+0x16],1
  402a89:	fbld   TBYTE PTR [edx-0x68b69046]
  402a8f:	retf   0x903
  402a92:	jl     0x402aa1
  402a94:	xor    dl,BYTE PTR [edx]
  402a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a97:	imul   esi,DWORD PTR [esi-0x13],0xffffff8b
  402a9b:	add    ah,dl
  402a9d:	mov    esp,DWORD PTR [esi+0x10]
  402aa0:	sbb    eax,0x5268841d
  402aa5:	lock add ch,BYTE PTR [edx+0x26002cab]
  402aac:	mov    ds:0xff1c64a9,al
  402ab1:	jb     0x402b1e
  402ab3:	cs ins DWORD PTR es:[edi],dx
  402ab5:	pop    esp
  402ab6:	inc    edx
  402ab7:	mov    ebp,0x881ef667
  402abc:	es ss xor dh,al
  402ac0:	bound  ebx,QWORD PTR [ecx-0x4c4e4b77]
  402ac6:	les    esi,FWORD PTR [edi]
  402ac8:	adc    esi,DWORD PTR [edi+0x3fe51d1f]
  402ace:	adc    BYTE PTR [ebx+0x43],bl
  402ad1:	pop    esi
  402ad2:	lds    ecx,FWORD PTR [ecx+ecx*4+0x74]
  402ad6:	fs mov ch,0x5f
  402ad9:	cmp    ah,BYTE PTR [ebx+0x5a]
  402adc:	mov    al,0xe6
  402ade:	pop    es
  402adf:	call   0x1e001bee
  402ae4:	pusha  
  402ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ae6:	loope  0x402afd
  402ae8:	stc    
  402ae9:	xchg   edi,eax
  402aea:	adc    ebp,DWORD PTR [edi+0x454e390d]
  402af0:	jnp    0x402b35
  402af2:	clc    
  402af3:	bound  ecx,QWORD PTR [ecx-0x6f]
  402af6:	sub    esi,ebp
  402af8:	dec    esi
  402af9:	ret    
  402afa:	adc    ah,BYTE PTR [ebx-0x1e]
  402afd:	sbb    BYTE PTR [eax],bl
  402aff:	shr    cl,0x25
  402b02:	jg     0x402ac7
  402b04:	enter  0xb6b3,0xdb
  402b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b09:	ror    BYTE PTR [edi],cl
  402b0b:	push   0x510eeb7e
  402b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b11:	push   esp
  402b12:	inc    eax
  402b13:	arpl   WORD PTR [edi+ecx*2-0x35],bp
  402b17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b18:	lods   al,BYTE PTR ds:[esi]
  402b19:	fdiv   QWORD PTR [edx+0x6a]
  402b1c:	les    ebx,FWORD PTR [ebp+0x24ee7ac7]
  402b22:	jbe    0x402b4a
  402b24:	push   esi
  402b25:	fidiv  WORD PTR ds:0xad98c831
  402b2b:	push   0xffffffd6
  402b2d:	pushf  
  402b2e:	repnz mov dl,0x56
  402b31:	div    dl
  402b33:	fild   QWORD PTR [ecx-0x64a427c]
  402b39:	cmp    dl,BYTE PTR [ecx+0x66]
  402b3c:	mov    edi,0x18a7120c
  402b41:	mov    ch,0x13
  402b43:	mov    eax,0xc2cda36c
  402b48:	jnp    0x402bbb
  402b4a:	out    dx,eax
  402b4b:	or     ebp,eax
  402b4d:	pop    ecx
  402b4e:	in     al,dx
  402b4f:	fldenv [edx]
  402b51:	fwait
  402b52:	loope  0x402ad6
  402b54:	fisubr DWORD PTR [ebx+ecx*8-0x47]
  402b58:	iret   
  402b59:	jbe    0x402bcc
  402b5b:	addr16 xor eax,0xdb1dc979
  402b61:	ins    DWORD PTR es:[edi],dx
  402b62:	inc    esp
  402b63:	or     esi,eax
  402b65:	test   DWORD PTR [eax],0x2801a660
  402b6b:	add    ch,ah
  402b6d:	jle    0x402bda
  402b6f:	ins    BYTE PTR es:[edi],dx
  402b70:	pop    edx
  402b71:	mov    eax,0x53601501
  402b76:	xor    edi,DWORD PTR [ecx-0x5f]
  402b79:	call   DWORD PTR [eax]
  402b7b:	ror    DWORD PTR [ebp-0x30f3bf66],0x17
  402b82:	dec    ecx
  402b83:	outs   dx,DWORD PTR ds:[esi]
  402b84:	lahf   
  402b85:	lock int 0x81
  402b88:	aad    0x48
  402b8a:	xor    esi,DWORD PTR [esi+0x3f]
  402b8d:	push   cs
  402b8e:	ds jne 0x402c09
  402b91:	test   eax,0xb1c8769d
  402b96:	hlt    
  402b97:	outs   dx,DWORD PTR gs:[esi]
  402b99:	jno    0x402b2f
  402b9b:	in     eax,0x71
  402b9d:	loopne 0x402bfa
  402b9f:	aad    0x36
  402ba1:	ret    
  402ba2:	push   cs
  402ba3:	and    ebp,edx
  402ba5:	cmc    
  402ba6:	lods   al,BYTE PTR ds:[esi]
  402ba7:	scas   eax,DWORD PTR es:[edi]
  402ba8:	fcom   DWORD PTR [esi+0x4b6d4fca]
  402bae:	mov    eax,0xfa0e5e34
  402bb3:	push   edx
  402bb4:	dec    esp
  402bb5:	mov    eax,0xe1ac42ac
  402bba:	fdiv   st,st(5)
  402bbc:	pop    edx
  402bbd:	sub    BYTE PTR [ebx-0x58],cl
  402bc0:	cmp    BYTE PTR [ebp-0x4a],cl
  402bc3:	icebp  
  402bc4:	mov    ss,edi
  402bc6:	daa    
  402bc7:	dec    edi
  402bc8:	(bad)  
  402bc9:	fcom   QWORD PTR [eax]
  402bcb:	inc    edx
  402bcc:	js     0x402b6d
  402bce:	adc    ch,BYTE PTR [eax]
  402bd0:	das    
  402bd1:	aam    0xbe
  402bd3:	jno    0x402c46
  402bd5:	(bad)  
  402bd6:	mov    esi,0xaeaf210f
  402bdb:	mov    sp,0x9132
  402bdf:	jecxz  0x402b9b
  402be1:	call   0x6ad808d1
  402be6:	push   ebp
  402be7:	jp     0x402ba6
  402be9:	lock stc 
  402beb:	jmp    0x402c66
  402bed:	lock sub eax,0x3e5f544b
  402bf3:	inc    ebx
  402bf4:	das    
  402bf5:	xor    BYTE PTR [ecx+0x34],0xff
  402bf9:	pop    ebx
  402bfa:	adc    BYTE PTR [esi-0x6f],0x44
  402bfe:	out    dx,al
  402bff:	ins    DWORD PTR es:[edi],dx
  402c00:	sbb    DWORD PTR [ebp+edi*8+0x2379bd58],esp
  402c07:	inc    esi
  402c08:	fnsave [ecx+0x78eb7aae]
  402c0e:	popa   
  402c0f:	mov    ds:0x97852aa6,al
  402c14:	in     al,0xe0
  402c16:	imul   edi,DWORD PTR ds:0x6683f130,0xf23e725d
  402c20:	cmp    eax,0xe4831cd5
  402c25:	cmp    edx,esi
  402c27:	cmc    
  402c28:	loopne 0x402c59
  402c2a:	or     bh,BYTE PTR [ecx+0x418473eb]
  402c30:	and    esi,ecx
  402c32:	push   0x7120c31b
  402c37:	jne    0x402c81
  402c39:	cmp    dl,BYTE PTR [ebx-0x4336372]
  402c3f:	jmp    0xd7a86858
  402c44:	pop    edx
  402c45:	mov    BYTE PTR [ebp-0x4d],ah
  402c48:	cmp    al,0x12
  402c4a:	addr16 push ss
  402c4c:	neg    dh
  402c4e:	jnp    0x402cb8
  402c50:	xchg   ebx,eax
  402c51:	push   ss
  402c52:	loop   0x402be5
  402c54:	mov    al,0xb7
  402c56:	mov    esi,0xcfcb22d0
  402c5b:	xor    edi,DWORD PTR [edi]
  402c5d:	xor    eax,0xe5b5c73d
  402c62:	push   esp
  402c63:	and    dh,ch
  402c65:	retf   0xdaff
  402c68:	into   
  402c69:	xor    al,0x94
  402c6b:	xchg   edx,eax
  402c6c:	bound  ecx,QWORD PTR [edi]
  402c6e:	mov    dl,0xae
  402c70:	mov    ds:0xad68aa17,eax
  402c75:	mov    cl,0x88
  402c77:	call   0x2cb5e850
  402c7c:	mov    fs,WORD PTR [ebp+0x42dcdc5c]
  402c82:	sbb    al,0x6c
  402c84:	repnz ds dec esp
  402c87:	daa    
  402c88:	iret   
  402c89:	xor    al,0x85
  402c8b:	jl     0x402c1e
  402c8d:	sub    eax,esp
  402c8f:	(bad)  
  402c90:	clc    
  402c91:	ds inc ecx
  402c93:	rcl    DWORD PTR [ecx],cl
  402c95:	(bad)  
  402c96:	ror    BYTE PTR [esi+eiz*2-0x4f],1
  402c9a:	outs   dx,BYTE PTR ds:[esi]
  402c9b:	int3   
  402c9c:	push   ss
  402c9d:	pop    ebx
  402c9e:	and    BYTE PTR [edx-0x417c20da],ch
  402ca4:	js     0x402d06
  402ca6:	call   0xae6f:0x61623d6c
  402cad:	fucomp st(4)
  402caf:	adc    al,0x7c
  402cb1:	cdq    
  402cb2:	hlt    
  402cb3:	rep outs dx,BYTE PTR ds:[esi]
  402cb5:	leave  
  402cb6:	jle    0x402c44
  402cb8:	out    dx,eax
  402cb9:	retf   
  402cba:	stos   BYTE PTR es:[edi],al
  402cbb:	int    0xd0
  402cbd:	inc    esp
  402cbe:	pop    esp
  402cbf:	sahf   
  402cc0:	cmp    eax,0x82fc9de
  402cc5:	dec    ebp
  402cc6:	push   cs
  402cc7:	mov    DWORD PTR [ecx+0x74],edx
  402cca:	pop    esi
  402ccb:	rol    BYTE PTR [edx+ebx*8],cl
  402cce:	push   edx
  402ccf:	sbb    al,0xf2
  402cd1:	out    dx,eax
  402cd2:	inc    edi
  402cd3:	test   eax,0xbd018c90
  402cd8:	jb     0x402c94
  402cda:	test   BYTE PTR [ebp+0x1fa560f7],al
  402ce0:	popf   
  402ce1:	retf   
  402ce2:	jle    0x402d44
  402ce4:	rcr    DWORD PTR [ecx],1
  402ce6:	xchg   ebx,eax
  402ce7:	or     al,BYTE PTR [ecx]
  402ce9:	mov    edx,0x9186b4ab
  402cee:	jns    0x402ce8
  402cf0:	sar    DWORD PTR [ebp+0x602e7ec],cl
  402cf6:	push   ebp
  402cf7:	sti    
  402cf8:	aad    0x5c
  402cfa:	and    ch,al
  402cfc:	in     al,0x13
  402cfe:	call   0x3902:0xe5212535
  402d05:	loop   0x402cea
  402d07:	xchg   DWORD PTR [eax],esp
  402d09:	das    
  402d0a:	mov    ebp,0xba5dd80f
  402d0f:	mov    eax,ds:0x4e6f5873
  402d14:	bound  esp,QWORD PTR [eax+0xb]
  402d17:	xor    eax,0x97ec4cfb
  402d1c:	out    dx,al
  402d1d:	jp     0x402d6e
  402d1f:	(bad)  
  402d20:	imul   esi,eax,0xffffffde
  402d23:	ret    
  402d24:	int3   
  402d25:	adc    eax,0x769f83f4
  402d2a:	pop    edi
  402d2b:	shl    al,0xae
  402d2e:	int    0xf5
  402d30:	enter  0xc3ca,0xb8
  402d34:	jbe    0x402da8
  402d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d37:	ror    DWORD PTR [ebx],0x25
  402d3a:	bound  edi,QWORD PTR [eax+0x40]
  402d3d:	lock lock cmp DWORD PTR [ebx+eax*1-0x67147b2f],ebx
  402d46:	xor    al,al
  402d48:	pop    edi
  402d49:	push   ds
  402d4a:	jge    0x402d2b
  402d4c:	sub    eax,0x3362f77d
  402d51:	push   esp
  402d52:	ret    0x9887
  402d55:	sub    ebx,DWORD PTR [ebp+0x63c5967a]
  402d5b:	retf   0x4c3
  402d5e:	push   es
  402d5f:	outs   dx,DWORD PTR ds:[esi]
  402d60:	cmp    BYTE PTR [edi+0x74],dl
  402d63:	or     BYTE PTR [ecx],dl
  402d65:	sbb    BYTE PTR [ebx-0x77e1744c],ah
  402d6b:	fxtract 
  402d6d:	xchg   ecx,eax
  402d6e:	add    ah,BYTE PTR [edx+0x11bd53ed]
  402d74:	je     0x402d29
  402d76:	int3   
  402d77:	mov    edx,DWORD PTR [eax+0x4a]
  402d7a:	mov    eax,ds:0xd24774b5
  402d7f:	cmp    esp,DWORD PTR [edi-0x6d]
  402d82:	sbb    DWORD PTR [eax],ecx
  402d84:	out    dx,al
  402d85:	das    
  402d86:	out    dx,al
  402d87:	dec    edx
  402d88:	cs adc al,0x21
  402d8b:	inc    ebx
  402d8c:	std    
  402d8d:	in     eax,dx
  402d8e:	sti    
  402d8f:	shl    al,1
  402d91:	rcl    DWORD PTR [eax+edi*4+0x2010cf6c],cl
  402d98:	daa    
  402d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d9a:	cmp    eax,0xfa55b03d
  402d9f:	rol    DWORD PTR [ebp+0x1ac81177],1
  402da5:	push   esi
  402da6:	aaa    
  402da7:	sbb    esi,DWORD PTR [ebx]
  402da9:	pop    esi
  402daa:	sub    al,0xcf
  402dac:	inc    edx
  402dad:	push   ss
  402dae:	push   ebp
  402daf:	repz pop ds
  402db1:	sub    eax,DWORD PTR [edi-0x3dd9f9df]
  402db7:	ret    0x2c23
  402dba:	daa    
  402dbb:	push   esi
  402dbc:	sub    ch,cl
  402dbe:	cmp    al,0x4d
  402dc0:	jae    0x402d71
  402dc2:	cmp    bl,ch
  402dc4:	and    eax,0xf9187f9c
  402dc9:	push   0x8d4d363e
  402dce:	sbb    ecx,ebp
  402dd0:	fcmovnu st,st(2)
  402dd2:	push   es
  402dd3:	ret    0x665a
  402dd6:	add    al,ah
  402dd8:	and    eax,0xb4b99246
  402ddd:	les    di,DWORD PTR [eax]
  402de0:	(bad)  
  402de1:	add    eax,0x85e0d7b1
  402de6:	fadd   DWORD PTR [ebx+edi*1+0x3c]
  402dea:	mov    edi,0x96b5a88c
  402def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402df0:	mov    fs,WORD PTR [ebx+0x6794fc46]
  402df6:	push   0xffffffc1
  402df8:	add    BYTE PTR [esi],ch
  402dfa:	dec    edi
  402dfb:	icebp  
  402dfc:	mov    bl,0x6a
  402dfe:	sbb    DWORD PTR [edx+0x6831bb8f],ebx
  402e04:	mov    ebx,0xd0f3e8c
  402e09:	push   ebp
  402e0a:	es in  eax,dx
  402e0c:	cmp    al,0x5f
  402e0e:	add    BYTE PTR [esi],0xa3
  402e11:	push   ebp
  402e12:	lock push ebx
  402e14:	clc    
  402e15:	mov    fs:0x7322d56a,eax
  402e1b:	mov    ebp,0x682af550
  402e20:	out    0x1e,eax
  402e22:	or     cl,cl
  402e24:	int    0xb0
  402e26:	jge    0x402dc6
  402e28:	call   0x84ee:0xe2dfd39e
  402e2f:	jl     0x402dc7
  402e31:	ret    
  402e32:	mov    ebp,edx
  402e34:	mov    dl,0x94
  402e36:	scas   al,BYTE PTR es:[edi]
  402e37:	jne    0x402e50
  402e39:	inc    esp
  402e3a:	push   esp
  402e3b:	mov    ebx,0x159fcf73
  402e40:	imul   eax,eax,0xdd209cda
  402e46:	into   
  402e47:	adc    eax,0x7f4c66e3
  402e4c:	in     al,dx
  402e4d:	mov    al,0x17
  402e4f:	jecxz  0x402ea0
  402e51:	es int 0x1e
  402e54:	ins    BYTE PTR es:[edi],dx
  402e55:	outs   dx,BYTE PTR ds:[esi]
  402e56:	test   BYTE PTR [esi-0x64],cl
  402e59:	pop    ss
  402e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e5b:	lea    ecx,[ebp+0x260b48c9]
  402e61:	xchg   esp,eax
  402e62:	sub    cl,bh
  402e64:	push   cs
  402e65:	in     eax,0xff
  402e67:	mov    bl,0x35
  402e69:	es hlt 
  402e6b:	clc    
  402e6c:	push   es
  402e6d:	in     eax,0xe5
  402e6f:	cld    
  402e70:	add    DWORD PTR [edx+0x7ab5d38f],ebp
  402e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e77:	std    
  402e78:	ror    BYTE PTR [eax-0x72],cl
  402e7b:	xchg   ecx,eax
  402e7c:	retf   
  402e7d:	cmp    esi,DWORD PTR [esi+0x3faacd82]
  402e83:	dec    ecx
  402e84:	push   ebp
  402e85:	bound  eax,QWORD PTR [eax+0x5c]
  402e88:	(bad)
  402e8d:	add    eax,0xd7a7b305
  402e92:	lods   eax,DWORD PTR ds:[esi]
  402e93:	into   
  402e94:	mov    esi,0xb154150f
  402e99:	push   edi
  402e9a:	xor    esi,DWORD PTR [edi-0x779831d6]
  402ea0:	mov    dh,0x44
  402ea2:	sbb    BYTE PTR [edx],al
  402ea4:	test   DWORD PTR [edx],0x54cff07f
  402eaa:	(bad)  
  402eab:	scas   al,BYTE PTR es:[edi]
  402eac:	cld    
  402ead:	xchg   ecx,eax
  402eae:	(bad)
  402eb2:	in     eax,dx
  402eb3:	cwde   
  402eb4:	fist   WORD PTR [edi-0x297536ce]
  402eba:	aam    0xcd
  402ebc:	mov    ds:0x889381ce,eax
  402ec1:	pop    eax
  402ec2:	adc    cl,BYTE PTR [ecx-0x5b2f07ab]
  402ec8:	out    dx,eax
  402ec9:	out    0x3e,al
  402ecb:	cmp    eax,0xb4e2fab0
  402ed0:	or     al,0xbc
  402ed2:	ja     0x402f2c
  402ed4:	mov    ecx,0x3f4c0859
  402ed9:	pop    esp
  402eda:	mov    ch,0x6b
  402edc:	jnp    0x402e86
  402ede:	mov    cl,0x32
  402ee0:	adc    eax,0xb6b9e5d5
  402ee5:	dec    edx
  402ee6:	daa    
  402ee7:	mov    eax,0xd92f3ca8
  402eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eed:	pop    ebp
  402eee:	pop    edx
  402eef:	cli    
  402ef0:	outs   dx,DWORD PTR ss:[esi]
  402ef2:	nop
  402ef3:	(bad)  
  402ef4:	pop    esp
  402ef5:	or     BYTE PTR [ebx+0x6d],bh
  402ef8:	mov    WORD PTR [ebp+0x7722a7d6],es
  402efe:	push   ecx
  402eff:	mov    ebx,DWORD PTR [edi]
  402f01:	sti    
  402f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f03:	dec    esi
  402f04:	pop    ebx
  402f05:	jbe    0x402f65
  402f07:	push   eax
  402f08:	les    esp,FWORD PTR [ecx]
  402f0a:	adc    BYTE PTR [esi],bl
  402f0c:	dec    esp
  402f0d:	add    edi,edi
  402f0f:	shr    BYTE PTR [ebp-0x75],1
  402f12:	sbb    eax,0xa9469a54
  402f17:	rcr    BYTE PTR [edi+ecx*1-0x3604a644],cl
  402f1e:	call   0x7957:0xbaff157e
  402f25:	data16 sti 
  402f27:	xlat   BYTE PTR ds:[ebx]
  402f28:	fst    QWORD PTR [ebx+0x3e]
  402f2b:	xor    BYTE PTR [ecx],0x25
  402f2e:	mov    ecx,0xa87b732d
  402f33:	fsub   DWORD PTR [ebx+0x79]
  402f36:	cmp    esp,DWORD PTR [esi]
  402f38:	adc    dh,BYTE PTR [ecx-0x13]
  402f3b:	dec    ebp
  402f3c:	lahf   
  402f3d:	test   al,0xf1
  402f3f:	rcr    ah,cl
  402f41:	and    al,ah
  402f43:	push   ds
  402f44:	fist   WORD PTR [esp+edx*4+0x2f378f97]
  402f4b:	call   0x28a038d
  402f50:	jb     0x402f9b
  402f52:	push   cs
  402f53:	cli    
  402f54:	dec    ebp
  402f55:	mov    edx,0x35b66047
  402f5a:	sbb    dl,BYTE PTR [ecx]
  402f5c:	add    ebx,DWORD PTR [edi+0x2b]
  402f5f:	mov    ds,edi
  402f61:	test   eax,0x20430e87
  402f66:	mov    ebx,ebx
  402f68:	cwde   
  402f69:	mov    edx,0xcedd939a
  402f6e:	test   DWORD PTR [ebx-0x5c],ebx
  402f71:	xchg   ebp,eax
  402f72:	inc    esi
  402f73:	sbb    eax,0x1c492768
  402f78:	cwde   
  402f79:	int    0x8c
  402f7b:	ror    DWORD PTR [edi*2+0x7e5b8439],cl
  402f82:	cld    
  402f83:	test   BYTE PTR [ebx+edi*1],cl
  402f86:	rol    DWORD PTR [esi-0x3aeba7d4],cl
  402f8c:	push   ebx
  402f8d:	xor    eax,0x811b637a
  402f92:	out    0x9c,eax
  402f94:	out    0xe3,al
  402f96:	stos   BYTE PTR es:[edi],al
  402f97:	dec    ebp
  402f98:	sub    BYTE PTR [eax+edx*8],cl
  402f9b:	and    ch,ah
  402f9d:	pop    esp
  402f9e:	pop    ecx
  402f9f:	loop   0x402fd4
  402fa1:	dec    esi
  402fa2:	push   eax
  402fa3:	pop    edi
  402fa4:	pusha  
  402fa5:	ret    0xde87
  402fa8:	push   ebx
  402fa9:	push   ds
  402faa:	cld    
  402fab:	dec    ebx
  402fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fad:	loopne 0x402fc7
  402faf:	iret   
  402fb0:	pushf  
  402fb1:	pop    ecx
  402fb2:	push   ebp
  402fb3:	adc    DWORD PTR [edx],esp
  402fb5:	sbb    edi,DWORD PTR [edi-0x532fbabf]
  402fbb:	push   0x6395729b
  402fc0:	sti    
  402fc1:	xchg   BYTE PTR [ebx-0x5c],bh
  402fc4:	sahf   
  402fc5:	jg     0x402f6a
  402fc7:	sahf   
  402fc8:	icebp  
  402fc9:	push   esp
  402fca:	add    bl,0x2c
  402fcd:	adc    eax,0xf5d74a23
  402fd2:	fwait
  402fd3:	mov    eax,ss:0x64f317cc
  402fd9:	cmp    edx,eax
  402fdb:	lea    esi,ss:[eax]
  402fde:	or     esi,ebx
  402fe0:	out    dx,al
  402fe1:	xor    DWORD PTR [esi-0x8c4e84d],ecx
  402fe7:	jnp    0x403067
  402fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fea:	or     esp,esi
  402fec:	sbb    eax,0x12de1f79
  402ff1:	jae    0x402fae
  402ff3:	inc    eax
  402ff4:	sbb    DWORD PTR [ebx+0x62],edx
  402ff7:	pop    eax
  402ff8:	jmp    0x403016
  402ffa:	adc    BYTE PTR [edi],0xac
  402ffd:	push   0x1a
  402fff:	dec    edi
  403000:	jmp    edx
  403002:	xlat   BYTE PTR ds:[ebx]
  403003:	nop
  403004:	jo     0x402fee
  403006:	cmp    edx,DWORD PTR [edi+0x5aa8111]
  40300c:	or     eax,0xa295edb9
  403011:	enter  0x92f4,0x9
  403015:	adc    al,0x68
  403017:	mov    ecx,eax
  403019:	ja     0x6993191e
  40301f:	repnz sub dl,BYTE PTR [edx-0x1b]
  403023:	add    eax,0x8a0f2591
  403028:	cmc    
  403029:	or     DWORD PTR [ecx+0x4c67eec],edx
  40302f:	mov    cl,BYTE PTR [ebp+0x17]
  403032:	push   ebp
  403033:	jmp    0x8cce6f8
  403038:	pop    esi
  403039:	rcr    al,1
  40303b:	adc    bh,BYTE PTR [edx]
  40303d:	inc    esp
  40303e:	(bad)  
  40303f:	mov    ecx,0x8db0d37
  403044:	out    0x5f,eax
  403046:	enter  0x1726,0x8d
  40304a:	dec    ebp
  40304b:	std    
  40304c:	aas    
  40304d:	jmp    0x44cd:0x8941f013
  403054:	out    dx,eax
  403055:	(bad)  [ebp-0x20c103cf]
  40305b:	push   ebp
  40305c:	jno    0x403022
  40305e:	push   ecx
  40305f:	xchg   edi,eax
  403060:	pop    esp
  403061:	push   0xa2479021
  403066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403067:	adc    BYTE PTR [ebx-0x7b],bl
  40306a:	lods   al,BYTE PTR ds:[esi]
  40306b:	(bad)  
  40306c:	imul   eax,DWORD PTR [ebp-0x7d],0x4
  403070:	push   esi
  403071:	jmp    0x3511:0xfec239e8
  403078:	inc    ecx
  403079:	add    al,0x2
  40307b:	mov    ah,BYTE PTR [eax+0x5807b556]
  403081:	xor    DWORD PTR [edi],ecx
  403083:	push   ecx
  403084:	add    DWORD PTR [ecx+0x73b6b99e],edi
  40308a:	les    ebp,FWORD PTR [edx]
  40308c:	push   esp
  40308d:	stos   DWORD PTR es:[edi],eax
  40308e:	call   0x4b0a:0xeef96fdc
  403095:	imul   ebp,DWORD PTR [edx],0x55afd3ff
  40309b:	pop    ebp
  40309c:	mov    bh,0x48
  40309e:	mov    al,ds:0x222e9d77
  4030a3:	int3   
  4030a4:	popf   
  4030a5:	pop    esp
  4030a6:	test   al,0x2d
  4030a8:	mov    ah,0x8d
  4030aa:	cmp    bh,BYTE PTR [edx-0x3a]
  4030ad:	out    dx,eax
  4030ae:	aaa    
  4030af:	pop    edi
  4030b0:	out    0xfa,eax
  4030b2:	push   esp
  4030b3:	push   edx
  4030b4:	lahf   
  4030b5:	mov    cs,ecx
  4030b7:	push   0xc25af3c3
  4030bc:	clc    
  4030bd:	xor    bh,0xf6
  4030c0:	xchg   bl,cl
  4030c2:	xchg   esi,eax
  4030c3:	xor    DWORD PTR [ecx+edi*2+0x3d],ebx
  4030c7:	xlat   BYTE PTR ds:[ebx]
  4030c8:	aam    0xc8
  4030ca:	stos   DWORD PTR es:[edi],eax
  4030cb:	inc    eax
  4030cc:	xor    edx,edx
  4030ce:	sbb    BYTE PTR [eax],al
  4030d0:	sbb    edi,esp
  4030d2:	(bad)  
  4030d3:	loopne 0x403115
  4030d5:	lock add edx,DWORD PTR [eax+0x45]
  4030d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030da:	xor    eax,0x10834a2
  4030df:	mov    cl,0x55
  4030e1:	fisub  WORD PTR [ebp+esi*4-0x1c129fb3]
  4030e8:	or     dl,BYTE PTR [eax+0x12]
  4030eb:	adc    al,0x40
  4030ed:	(bad)  
  4030ee:	pop    esi
  4030ef:	imul   esi,DWORD PTR [edx-0x7e],0xffffffb5
  4030f3:	call   0x775e2270
  4030f8:	fst    DWORD PTR [ebx]
  4030fa:	stos   BYTE PTR es:[edi],al
  4030fb:	test   BYTE PTR [edx+0x7c12511a],dl
  403101:	push   es
  403102:	xchg   esp,eax
  403103:	cmp    eax,0x55e8d736
  403108:	or     BYTE PTR [esi+0x78],bl
  40310b:	mov    cs,WORD PTR [eax-0x18]
  40310e:	adc    BYTE PTR [ebp+0x31],bl
  403111:	(bad)  
  403112:	mul    DWORD PTR [ebx]
  403114:	aaa    
  403115:	xchg   ecx,eax
  403116:	jb     0x403177
  403118:	adc    eax,DWORD PTR [ebx+ebx*2]
  40311b:	call   0xefb6e978
  403120:	inc    edi
  403121:	shr    BYTE PTR [edi+eax*4+0x6c],cl
  403125:	mov    ds:0x7ad77234,al
  40312a:	jp     0x403153
  40312c:	add    eax,0x43d6e670
  403131:	stos   BYTE PTR es:[edi],al
  403132:	xchg   edi,eax
  403133:	add    BYTE PTR [ebp-0x36cef835],ch
  403139:	test   eax,edi
  40313b:	dec    edx
  40313c:	mov    ch,0xbe
  40313e:	or     al,0x27
  403140:	xchg   ecx,eax
  403141:	cmp    ah,dh
  403143:	xor    BYTE PTR [eax],al
  403145:	test   BYTE PTR [ebx],0xc9
  403148:	pop    ebx
  403149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40314a:	loop   0x403146
  40314c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40314d:	out    0xed,al
  40314f:	sahf   
  403150:	xor    DWORD PTR [ebp+0x27d2525b],eax
  403156:	inc    ebx
  403157:	inc    edi
  403158:	aam    0xeb
  40315a:	inc    eax
  40315b:	mov    ah,0x4b
  40315d:	inc    edi
  40315e:	xor    eax,0x9c53b12e
  403163:	mov    cs,WORD PTR [ebp+0x73]
  403166:	sahf   
  403167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403168:	xchg   esi,eax
  403169:	cmp    ebx,eax
  40316b:	jp     0x403167
  40316d:	into   
  40316e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40316f:	fs mov dh,0x9e
  403172:	add    bl,BYTE PTR [ebp-0x31a6706b]
  403178:	jg     0x40311d
  40317a:	dec    ebp
  40317b:	sbb    eax,0xc3461b77
  403180:	cmp    esp,DWORD PTR [edx+0x4e]
  403183:	xchg   edx,eax
  403184:	cs aaa 
  403186:	or     BYTE PTR [edi+0x3b9434e1],cl
  40318c:	out    dx,eax
  40318d:	test   al,0xb5
  40318f:	adc    ebp,DWORD PTR [ebx-0x17]
  403192:	xor    dl,BYTE PTR [ecx]
  403194:	pop    ss
  403195:	dec    ebx
  403196:	loop   0x40317c
  403198:	rcr    BYTE PTR [ecx+esi*4+0x6ba227cf],0xc2
  4031a0:	repz int3 
  4031a2:	xor    ch,al
  4031a4:	add    eax,0x51f1b134
  4031a9:	or     al,BYTE PTR [ebx-0x52703a7e]
  4031af:	(bad)  
  4031b0:	std    
  4031b1:	(bad)  
  4031b3:	inc    esp
  4031b4:	ds scas al,BYTE PTR es:[edi]
  4031b6:	ja     0x4031cb
  4031b8:	sbb    esi,eax
  4031ba:	jne    0x403197
  4031bc:	scas   al,BYTE PTR es:[edi]
  4031bd:	dec    ebp
  4031be:	push   0x448614f9
  4031c3:	and    ch,ch
  4031c5:	pop    edx
  4031c6:	adc    al,0x87
  4031c8:	cmc    
  4031c9:	(bad)  
  4031ca:	jp     0x4031fa
  4031cc:	enter  0x9f3a,0xe9
  4031d0:	sbb    eax,0x52e38e1a
  4031d5:	inc    edx
  4031d6:	mov    ds:0xdafc2aff,al
  4031db:	cli    
  4031dc:	cs nop
  4031de:	xchg   BYTE PTR [ecx],bh
  4031e0:	xor    esi,ebx
  4031e2:	hlt    
  4031e3:	sub    ecx,DWORD PTR [esi+0x5e]
  4031e6:	xchg   ecx,eax
  4031e7:	mov    WORD PTR [esi+0x7eee496e],cs
  4031ed:	mov    ebp,0xa3e8ec33
  4031f2:	sbb    edx,DWORD PTR [edi+ebx*4-0x47]
  4031f6:	xor    BYTE PTR [esi],dl
  4031f8:	call   0x7724:0x37fe4501
  4031ff:	aas    
  403200:	enter  0xd6da,0xb6
  403204:	jae    0x403198
  403206:	xchg   edi,eax
  403207:	pop    es
  403208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403209:	mov    edx,0x5b99c5ad
  40320e:	push   esp
  40320f:	xor    DWORD PTR [ecx],ebp
  403211:	mov    ch,0x74
  403213:	lds    esi,FWORD PTR [ebp-0x51cb85d1]
  403219:	aas    
  40321a:	mov    dl,0xf2
  40321c:	pop    ds
  40321d:	xor    DWORD PTR [esi*4-0x3e5ed038],ebp
  403224:	fisub  DWORD PTR [ebp+0x72d12b34]
  40322a:	sub    BYTE PTR [edx-0xc],dl
  40322d:	shr    BYTE PTR [esi+ebp*8-0x509848d7],0xb8
  403235:	in     eax,dx
  403236:	lea    ebx,[edi-0x60400439]
  40323c:	or     eax,0x5cb5e765
  403241:	(bad)  
  403242:	aad    0x30
  403244:	mov    cl,0x12
  403246:	dec    eax
  403247:	outs   dx,DWORD PTR ds:[esi]
  403248:	lods   eax,DWORD PTR ds:[esi]
  403249:	mov    ecx,DWORD PTR [eax+ecx*8-0x1b]
  40324d:	sbb    edi,DWORD PTR [edi+0x224e4b99]
  403253:	mov    ebp,0xc405b900
  403258:	bound  ebx,QWORD PTR [esi-0x138866be]
  40325e:	xor    al,0x6c
  403260:	(bad)  
  403261:	adc    bl,bl
  403263:	and    al,0xfb
  403265:	mov    DWORD PTR [ebx],edx
  403267:	pop    ss
  403268:	in     al,dx
  403269:	stos   DWORD PTR es:[edi],eax
  40326a:	and    eax,0xdde751f6
  40326f:	scas   eax,DWORD PTR es:[edi]
  403270:	mov    ds:0x83e4113,al
  403275:	ret    0x871f
  403278:	(bad)  
  403279:	ins    BYTE PTR es:[edi],dx
  40327a:	mov    ebx,0xd12d59a3
  40327f:	jnp    0x403214
  403281:	pop    es
  403282:	leave  
  403283:	lea    ecx,[edi+eax*1]
  403286:	ss and eax,0x8728a1e2
  40328c:	fbld   TBYTE PTR [edx-0x6ccde296]
  403292:	or     edi,DWORD PTR [ebp+0x1c]
  403295:	xlat   BYTE PTR ds:[ebx]
  403296:	jmp    0x8535:0x78d944f4
  40329d:	xchg   edx,eax
  40329e:	or     DWORD PTR [esp+edx*8-0x70],eax
  4032a2:	mov    edx,0x8facf53d
  4032a7:	cli    
  4032a8:	mov    eax,ds:0xb16a1e76
  4032ad:	or     al,0xff
  4032af:	mov    eax,es:0x3525fb87
  4032b5:	or     esi,ebx
  4032b7:	cli    
  4032b8:	dec    edx
  4032b9:	and    al,0x35
  4032bb:	test   BYTE PTR [ebp-0x513f2977],al
  4032c1:	push   eax
  4032c2:	sub    ebx,0xffffffa8
  4032c5:	pusha  
  4032c6:	(bad)  
  4032c7:	mov    al,0xcd
  4032c9:	xchg   ecx,eax
  4032ca:	aaa    
  4032cb:	idiv   BYTE PTR [esi+0x2ceda076]
  4032d1:	dec    edx
  4032d2:	addr16 pop edi
  4032d4:	(bad)  
  4032d5:	enter  0x13f2,0x6
  4032d9:	xchg   DWORD PTR [edx],esi
  4032db:	out    dx,al
  4032dc:	(bad)  
  4032dd:	out    0xda,al
  4032df:	test   ch,bh
  4032e1:	ja     0x40332d
  4032e3:	fist   DWORD PTR [esi+ebx*4]
  4032e6:	loope  0x403270
  4032e8:	push   ebp
  4032e9:	add    DWORD PTR [ebx-0x2c],0xb3844a92
  4032f0:	test   BYTE PTR [ebx],bh
  4032f2:	or     eax,0xa956af9b
  4032f7:	or     BYTE PTR [edx],cl
  4032f9:	push   esi
  4032fa:	stc    
  4032fb:	aas    
  4032fc:	xor    bh,bl
  4032fe:	test   al,0x15
  403300:	fiadd  WORD PTR ds:0x6875efa8
  403306:	mov    al,0x39
  403308:	mov    ebx,0x9c8c1744
  40330d:	fbstp  TBYTE PTR [edi+ebx*2-0x72]
  403311:	lahf   
  403312:	out    dx,eax
  403313:	iret   
  403314:	dec    ebx
  403315:	fwait
  403316:	pop    es
  403317:	adc    DWORD PTR [edi],ecx
  403319:	sub    ah,BYTE PTR [ebp-0x4baaa112]
  40331f:	xor    DWORD PTR [eax],ecx
  403321:	int    0x2a
  403323:	pop    eax
  403324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403325:	cmp    BYTE PTR [eax+0x41],ah
  403328:	in     eax,dx
  403329:	add    eax,0x8d9672c4
  40332e:	leave  
  40332f:	sbb    BYTE PTR [ebp+0x3c586ae5],ch
  403335:	xor    bl,BYTE PTR [esi-0x51889fda]
  40333b:	pop    ss
  40333c:	jp     0x403370
  40333e:	and    bl,BYTE PTR ds:0x8b0c712b
  403344:	mov    ch,0xf3
  403346:	inc    edi
  403347:	shl    BYTE PTR [ecx+0x333de2cf],cl
  40334d:	bound  eax,QWORD PTR [ebp+edi*1-0x18bdaeef]
  403354:	mov    eax,ds:0x12fc8264
  403359:	xor    al,BYTE PTR [eax-0x31]
  40335c:	cmc    
  40335d:	hlt    
  40335e:	mov    ?,WORD PTR [esi+0x20]
  403361:	jae    0x403369
  403363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403364:	cmp    eax,0xe7f05ea4
  403369:	add    eax,0x5c1b04e3
  40336e:	ja     0x40334c
  403370:	pop    eax
  403371:	pusha  
  403372:	data16 fwait
  403374:	ds aas 
  403376:	or     eax,0x75a2e37
  40337b:	clc    
  40337c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40337d:	mov    al,ds:0x70d3d575
  403382:	cmc    
  403383:	jmp    0xa035:0xd71bd7e3
  40338a:	xchg   edi,eax
  40338b:	inc    edi
  40338c:	leave  
  40338d:	pop    esi
  40338e:	add    esi,DWORD PTR [ecx]
  403390:	stos   DWORD PTR es:[edi],eax
  403391:	mov    BYTE PTR [ecx+0x5a25ec2d],ch
  403397:	push   ss
  403398:	in     al,0x23
  40339a:	fwait
  40339b:	in     al,dx
  40339c:	push   ss
  40339d:	cmp    ch,BYTE PTR [esi]
  40339f:	ror    esi,1
  4033a1:	xlat   BYTE PTR ds:[ebx]
  4033a2:	dec    esi
  4033a3:	int3   
  4033a4:	fdivr  QWORD PTR [esi]
  4033a6:	in     eax,0x76
  4033a8:	iret   
  4033a9:	or     eax,0x95061e29
  4033ae:	call   0xb63adce6
  4033b3:	(bad)  [ecx-0x2364d35f]
  4033b9:	xchg   edi,eax
  4033ba:	mov    edi,0xdf5fd739
  4033bf:	popa   
  4033c0:	adc    DWORD PTR [esi-0x4b],esi
  4033c3:	push   edi
  4033c4:	sbb    DWORD PTR [edx-0x475f8cdd],edx
  4033ca:	out    dx,al
  4033cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033cc:	or     eax,0x39bd678b
  4033d1:	mov    ebx,0xed1abd82
  4033d6:	outs   dx,BYTE PTR ds:[esi]
  4033d7:	xchg   edi,ecx
  4033d9:	pop    esp
  4033da:	xor    BYTE PTR [edi-0x3c],cl
  4033dd:	jle    0x403397
  4033df:	xchg   edi,eax
  4033e0:	not    BYTE PTR [edi]
  4033e2:	mov    bh,0x1d
  4033e4:	xor    bh,ah
  4033e6:	outs   dx,BYTE PTR ds:[esi]
  4033e7:	(bad)  
  4033e8:	call   FWORD PTR [esp+ebp*4+0x75]
  4033ec:	xchg   edx,eax
  4033ed:	pop    edx
  4033ee:	test   al,0xea
  4033f0:	es clc 
  4033f2:	sbb    eax,0xd764f2b7
  4033f7:	data16 js 0x4033d2
  4033fa:	push   ebx
  4033fb:	into   
  4033fc:	mov    ah,0xc9
  4033fe:	xor    esp,edx
  403400:	fimul  DWORD PTR [esi-0x2932a78b]
  403406:	mov    ecx,0x486ed0f1
  40340b:	sbb    eax,0xae6c92c8
  403410:	addr16 jb 0x4033e7
  403413:	inc    edx
  403414:	addr16 jb 0x4033d3
  403417:	cmp    edi,edi
  403419:	mov    cl,0xb4
  40341b:	call   0xc927c4c
  403420:	pushf  
  403421:	(bad)  
  403422:	fs add eax,0x2fe8077
  403428:	(bad)  
  403429:	cmp    ebp,ebx
  40342b:	push   0xffffffae
  40342d:	in     al,0xe1
  40342f:	push   0xffffffbb
  403431:	xor    DWORD PTR [ecx+0x4707b408],ebp
  403437:	outs   dx,DWORD PTR ds:[esi]
  403438:	dec    esp
  403439:	xchg   ebx,eax
  40343a:	fcomip st,st(0)
  40343c:	mov    edx,0xe9b8587f
  403441:	hlt    
  403442:	rol    BYTE PTR [esi-0x3a1562bc],0x11
  403449:	mov    esp,0x5ccbef22
  40344e:	data16 or al,bh
  403451:	jae    0x403442
  403453:	(bad)  
  403454:	call   0x6a14:0x1e41e881
  40345b:	jo     0x403426
  40345d:	and    al,0x13
  40345f:	and    DWORD PTR [edi+0x72994be0],edi
  403465:	inc    eax
  403466:	lods   al,BYTE PTR ds:[esi]
  403467:	rcr    DWORD PTR [edi],cl
  403469:	cs inc ebx
  40346b:	and    DWORD PTR [ebp-0x24be7dbc],ebx
  403471:	inc    BYTE PTR [edx+ebx*8]
  403474:	inc    ebp
  403475:	xlat   BYTE PTR ds:[ebx]
  403476:	pop    edi
  403477:	loopne 0x40347f
  403479:	sahf   
  40347a:	sub    esp,ebp
  40347c:	push   ebp
  40347d:	cs scas eax,DWORD PTR es:[edi]
  40347f:	mov    ebp,0x5f88480b
  403484:	and    ch,cl
  403486:	hlt    
  403487:	imul   ebp,ecx,0xffffffaf
  40348a:	fucom  st(0)
  40348c:	ret    
  40348d:	adc    esp,DWORD PTR [edx+ebp*2+0x6a4230c2]
  403494:	xchg   BYTE PTR [edi-0x7a],bl
  403497:	dec    ecx
  403498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403499:	adc    al,0x9b
  40349b:	mov    ebx,0xbabf2a9a
  4034a0:	and    bh,BYTE PTR [ebx-0x73]
  4034a3:	push   edi
  4034a4:	or     al,0x94
  4034a6:	mov    ?,WORD PTR [esp+eax*2-0x38ac53df]
  4034ad:	inc    edx
  4034ae:	fdivrp st(7),st
  4034b0:	jae    0x4034d2
  4034b2:	rcr    DWORD PTR [ecx-0x77cfe34c],1
  4034b8:	stos   BYTE PTR es:[edi],al
  4034b9:	cld    
  4034ba:	out    0x7a,eax
  4034bc:	jge    0x40348f
  4034be:	dec    esp
  4034bf:	mov    bh,0x13
  4034c1:	xchg   ecx,eax
  4034c2:	pushf  
  4034c3:	ret    
  4034c4:	into   
  4034c5:	adc    eax,0xcdf023cc
  4034ca:	mov    al,ds:0x27c03fba
  4034cf:	pop    ecx
  4034d0:	xor    dh,BYTE PTR [eax-0x52e0436e]
  4034d6:	popa   
  4034d7:	icebp  
  4034d8:	xor    eax,eax
  4034da:	cld    
  4034db:	not    al
  4034dd:	dec    ebp
  4034de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034df:	fbld   TBYTE PTR [ecx-0x43e36b85]
  4034e5:	add    DWORD PTR [edi],ecx
  4034e7:	sbb    al,0x72
  4034e9:	fsub   DWORD PTR [esi+0x39]
  4034ec:	inc    eax
  4034ed:	dec    edi
  4034ee:	pop    ebx
  4034f0:	out    0xee,eax
  4034f2:	dec    ebx
  4034f3:	call   0xf72f:0x59493eb5
  4034fa:	call   0x1974:0x64af6fb
  403501:	retf   0x7f03
  403504:	cmp    dh,dl
  403506:	pop    ds
  403507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403508:	mov    ds,WORD PTR [esi]
  40350a:	mov    cl,BYTE PTR [edx]
  40350c:	inc    edi
  40350d:	inc    eax
  40350e:	lods   al,BYTE PTR ds:[esi]
  40350f:	jle    0x403507
  403511:	or     ebx,ebp
  403513:	mov    bl,0xc9
  403515:	retf   
  403516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403517:	out    0x2b,eax
  403519:	lds    ebx,FWORD PTR [eax+0x4d5f45eb]
  40351f:	inc    ecx
  403520:	inc    edi
  403521:	push   ss
  403522:	adc    BYTE PTR ds:[ecx],0x5
  403526:	repnz div DWORD PTR [eax+0x13fc62d6]
  40352d:	imul   esi,DWORD PTR [edi],0x72
  403530:	pop    ebx
  403531:	fld    DWORD PTR [ebp+0xb862a62]
  403537:	mov    edi,0x429f0185
  40353c:	sub    ebp,DWORD PTR [esp+ebp*4+0x2bdad1ee]
  403543:	aas    
  403544:	stos   BYTE PTR es:[edi],al
  403545:	inc    esp
  403546:	push   edi
  403547:	inc    esi
  403548:	jbe    0x403560
  40354a:	dec    esp
  40354b:	arpl   bx,si
  40354d:	push   edx
  40354e:	retf   0x55c5
  403551:	imul   edx,esp,0x2025e9f0
  403557:	and    ebp,ebp
  403559:	cwde   
  40355a:	xor    bh,BYTE PTR [edx]
  40355c:	repz pop esi
  40355e:	nop
  40355f:	inc    ebx
  403560:	ja     0x403513
  403562:	fidivr DWORD PTR [edx+0x517d11c1]
  403568:	in     eax,0x2f
  40356a:	jno    0x403578
  40356c:	(bad)  
  40356d:	fadd   DWORD PTR [ebx+0x73a4c00f]
  403573:	ins    BYTE PTR es:[edi],dx
  403574:	or     ebp,DWORD PTR [ecx+0x23]
  403577:	sbb    DWORD PTR [edi],ebx
  403579:	jb     0x403542
  40357b:	aad    0x1
  40357d:	xor    BYTE PTR [edx+0x7d],ch
  403580:	xor    al,BYTE PTR [ebx+0x52]
  403583:	sbb    bh,BYTE PTR [ebx+edi*4-0x71]
  403587:	in     al,0x1f
  403589:	inc    eax
  40358a:	cmp    eax,0x6b9c96de
  40358f:	xchg   BYTE PTR [esi],ch
  403591:	dec    edx
  403592:	sub    DWORD PTR [eax],ecx
  403594:	push   cs
  403595:	js     0x403603
  403597:	mov    edi,0xf993e8f8
  40359c:	and    esi,DWORD PTR es:[edi-0x5b35570a]
  4035a3:	or     al,0x9e
  4035a5:	xchg   ecx,eax
  4035a6:	fwait
  4035a7:	sahf   
  4035a8:	xchg   DWORD PTR [ecx+edi*1-0x3126ad8c],ebx
  4035af:	add    ebx,edi
  4035b1:	push   esi
  4035b2:	mov    dh,0xbd
  4035b4:	leave  
  4035b5:	mov    ecx,0xf0774045
  4035ba:	adc    cl,ah
  4035bc:	fistp  QWORD PTR [eax+0x2207ef2c]
  4035c2:	cld    
  4035c3:	pop    ebx
  4035c4:	int    0x55
  4035c6:	mov    bh,0x7f
  4035c8:	push   ss
  4035c9:	sbb    DWORD PTR [ebx-0x63a2fdd],esp
  4035cf:	push   ecx
  4035d0:	bound  edx,QWORD PTR [eax]
  4035d2:	imul   esp,DWORD PTR [esp+ebx*2-0x46],0xfffffffb
  4035d7:	adc    eax,0x70e72083
  4035dc:	les    edi,FWORD PTR [esi+0x7d]
  4035df:	xor    BYTE PTR [esp+eax*8-0xd],cl
  4035e3:	adc    eax,0x13919dea
  4035e8:	xor    eax,0x66198357
  4035ed:	jno    0x4035b2
  4035ef:	sbb    ecx,edx
  4035f1:	sbb    dl,bh
  4035f3:	jno    0x4035b9
  4035f5:	pop    ss
  4035f6:	inc    edi
  4035f7:	call   FWORD PTR [eax]
  4035f9:	je     0x40357b
  4035fb:	cmp    DWORD PTR [esp+esi*1-0x13655085],0x21
  403603:	xchg   edx,eax
  403604:	retf   
  403605:	xchg   esi,eax
  403606:	fisubr DWORD PTR [ecx-0xa]
  403609:	cmp    BYTE PTR [edi],al
  40360b:	daa    
  40360c:	mov    bl,0xfe
  40360e:	loopne 0x40361d
  403610:	mov    BYTE PTR [eax+ecx*2],ah
  403613:	inc    eax
  403614:	(bad)  
  403615:	fs ins BYTE PTR es:[edi],dx
  403617:	stos   DWORD PTR es:[edi],eax
  403618:	sahf   
  403619:	fimul  WORD PTR [ecx-0x2a]
  40361c:	cmc    
  40361d:	mov    ds:0xfa577cf6,al
  403622:	jle    0x403668
  403624:	and    edi,DWORD PTR [edx-0x73]
  403627:	inc    ecx
  403628:	imul   edi,DWORD PTR ds:0xb0380115,0x3b
  40362f:	shl    DWORD PTR [ebx-0x59],1
  403632:	inc    esi
  403633:	or     BYTE PTR [esi-0x4dead501],0x2f
  40363a:	bound  esp,QWORD PTR [eax+0x34bd4a02]
  403640:	pop    eax
  403641:	mov    bl,BYTE PTR [esi+0x63]
  403644:	xchg   esi,eax
  403645:	push   esi
  403646:	(bad)  
  403647:	repz push ds
  403649:	mov    esp,0x583a601b
  40364e:	fwait
  40364f:	or     dl,bl
  403651:	pop    esp
  403652:	js     0x40362d
  403654:	imul   DWORD PTR [eax+0x71945109]
  40365a:	lock ins DWORD PTR es:[edi],dx
  40365c:	push   0x59c858e2
  403661:	add    cl,BYTE PTR [ebp-0x13cbbc23]
  403667:	and    eax,0x58b28dc3
  40366c:	cs ins DWORD PTR es:[edi],dx
  40366e:	jmp    0xcd14:0x76f161e9
  403675:	stos   DWORD PTR es:[edi],eax
  403676:	cwde   
  403677:	fnstcw WORD PTR [eax+0x7114ade1]
  40367d:	cld    
  40367e:	cli    
  40367f:	jne    0x403631
  403681:	or     dl,BYTE PTR [esi+0x3b38ac08]
  403687:	sbb    eax,0x848fdb9b
  40368c:	mov    esp,0x9071cca5
  403691:	popf   
  403692:	pop    ebp
  403693:	int    0x5e
  403695:	in     eax,0xf4
  403697:	sub    al,0xa2
  403699:	shr    DWORD PTR [esp-0x56],0x5c
  40369e:	scas   eax,DWORD PTR es:[edi]
  40369f:	jp     0x4036fa
  4036a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036a2:	inc    ebx
  4036a3:	out    0xc4,al
  4036a5:	cmp    dl,cl
  4036a7:	xor    al,0x77
  4036a9:	cld    
  4036aa:	inc    ecx
  4036ab:	push   edi
  4036ac:	inc    edi
  4036ad:	data16 clc 
  4036af:	sti    
  4036b0:	in     al,dx
  4036b1:	sub    DWORD PTR [ecx-0xb07f878],eax
  4036b7:	jb     0x4036ae
  4036b9:	int    0xfe
  4036bb:	or     BYTE PTR [esi],ch
  4036bd:	mov    edx,0x4225db5a
  4036c2:	(bad)  
  4036c3:	repz xor BYTE PTR [ebp+0x39],cl
  4036c7:	stos   BYTE PTR es:[edi],al
  4036c8:	es jns 0x4036cf
  4036cb:	jmp    0x5e59923e
  4036d0:	mov    ecx,0x84ced0b9
  4036d5:	mov    cs,WORD PTR [eax+0x4691f021]
  4036db:	das    
  4036dc:	in     eax,0x34
  4036de:	sbb    al,0x98
  4036e0:	inc    edi
  4036e1:	retf   0xa018
  4036e4:	push   ecx
  4036e5:	inc    esp
  4036e6:	lock pop ebx
  4036e8:	jbe    0x4036fb
  4036ea:	mov    eax,0xc9894712
  4036ef:	(bad)  
  4036f0:	fisttp WORD PTR [eax-0xd]
  4036f3:	and    al,0x4b
  4036f5:	js     0x403736
  4036f7:	dec    eax
  4036f8:	pop    ebx
  4036f9:	inc    edi
  4036fa:	dec    edx
  4036fb:	daa    
  4036fc:	dec    ebx
  4036fd:	fadd   st,st(7)
  4036ff:	inc    eax
  403700:	sbb    eax,edi
  403702:	dec    edx
  403703:	sar    BYTE PTR [ebx-0x3c],0x8c
  403707:	push   0xffffffc5
  403709:	call   0xff12:0x2e8f4583
  403710:	aad    0x16
  403712:	and    BYTE PTR [edx+0x2],0xb
  403716:	icebp  
  403717:	dec    eax
  403718:	rcl    edi,0x4a
  40371b:	pop    ebp
  40371c:	push   ss
  40371d:	ins    DWORD PTR es:[edi],dx
  40371e:	lods   eax,DWORD PTR ds:[esi]
  40371f:	daa    
  403720:	or     BYTE PTR fs:[edi],ch
  403723:	xor    BYTE PTR [eax-0x76],bl
  403726:	inc    ebp
  403727:	push   dx
  403729:	dec    edi
  40372a:	ds iret 
  40372c:	popa   
  40372d:	xor    ah,BYTE PTR [ecx-0x27d88ec8]
  403733:	clc    
  403734:	xchg   esi,eax
  403735:	cmp    cl,cl
  403737:	arpl   WORD PTR [edx+0x5d518117],bp
  40373d:	dec    edx
  40373e:	aad    0x2e
  403740:	push   eax
  403741:	jno    0x403762
  403743:	imul   ecx,DWORD PTR [edx+ebp*8+0x5744b861],0xffffffd0
  40374b:	fild   WORD PTR [edx+edx*8+0x6b]
  40374f:	sub    eax,0x6feff1a6
  403754:	(bad)  
  403755:	jp     0x40374a
  403757:	ds test eax,0xca467a94
  40375d:	mov    dl,0xec
  40375f:	pop    ecx
  403760:	test   BYTE PTR [ebp+0x7c1ebe29],al
  403766:	push   es
  403767:	xor    eax,DWORD PTR [eax]
  403769:	xor    esp,DWORD PTR [ebx]
  40376b:	inc    edx
  40376c:	ins    BYTE PTR es:[edi],dx
  40376d:	int    0x4a
  40376f:	in     eax,0xc6
  403771:	dec    edi
  403772:	mov    esi,0xb5fb8f6a
  403777:	pop    ebx
  403778:	mov    bh,BYTE PTR [edi+0x627acddc]
  40377e:	mov    al,0x62
  403780:	ret    
  403781:	push   cs
  403782:	loopne 0x4037a5
  403784:	dec    edi
  403785:	aaa    
  403786:	sub    BYTE PTR [edx-0x7e],dl
  403789:	sbb    al,0x41
  40378b:	aam    0x2a
  40378d:	cmp    eax,DWORD PTR [ebx-0x4bd9fefd]
  403793:	mov    ecx,0xec216a69
  403798:	nop
  403799:	add    ch,dh
  40379b:	ror    DWORD PTR [edi+0x7a9476c6],1
  4037a1:	in     al,dx
  4037a2:	rol    esi,0x98
  4037a5:	pop    ss
  4037a6:	sub    al,BYTE PTR [ecx-0xad858a]
  4037ac:	xor    DWORD PTR [edx],0x82107417
  4037b2:	dec    edi
  4037b3:	enter  0xc86,0x63
  4037b7:	mov    esp,0x801c6c71
  4037bc:	daa    
  4037bd:	adc    DWORD PTR [ebx-0x23cb42ab],ebx
  4037c3:	push   0x5dc57759
  4037c8:	push   ds
  4037c9:	int3   
  4037ca:	into   
  4037cb:	pop    es
  4037cc:	mov    WORD PTR [esi+0x67],cs
  4037cf:	pop    esp
  4037d0:	or     ah,BYTE PTR [eax-0x48]
  4037d3:	xor    eax,0x15
  4037d6:	gs adc al,0xc
  4037d9:	inc    edx
  4037da:	inc    esp
  4037db:	inc    ebx
  4037dc:	xchg   edx,eax
  4037dd:	out    dx,al
  4037de:	jg     0x40384f
  4037e0:	aas    
  4037e1:	pop    ebx
  4037e2:	loop   0x403853
  4037e4:	out    dx,eax
  4037e5:	retf   0x93dd
  4037e8:	fs mov ah,0x2f
  4037eb:	cmc    
  4037ec:	pop    ebx
  4037ed:	lock int3 
  4037ef:	outs   dx,BYTE PTR ds:[esi]
  4037f0:	cwde   
  4037f1:	push   cs
  4037f2:	loope  0x4037fd
  4037f4:	out    dx,al
  4037f5:	xor    DWORD PTR [eax-0x14],ebp
  4037f8:	cmp    BYTE PTR [ecx+0x12],dl
  4037fb:	xchg   ecx,eax
  4037fc:	push   0x74a88c56
  403801:	pop    ss
  403802:	fnsave [eax-0x8655d95]
  403808:	fisttp DWORD PTR [ebp*8+0x60ff6929]
  40380f:	dec    ebp
  403810:	xor    al,0xc9
  403812:	jne    0x4037df
  403814:	sbb    BYTE PTR [eax+0x56],0xc9
  403818:	or     BYTE PTR [esi+0x51],ch
  40381b:	lea    esi,[edi-0x6e3642]
  403821:	outs   dx,DWORD PTR ds:[esi]
  403822:	mov    dh,BYTE PTR [ebp+0x1f0a39b]
  403828:	cs int3 
  40382a:	sub    ah,dh
  40382c:	popa   
  40382d:	call   0x50c3:0x39c29d7
  403834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403836:	cmc    
  403837:	or     al,BYTE PTR [edx+0x35eaa21a]
  40383d:	inc    edx
  40383e:	fwait
  40383f:	mov    eax,ds:0xa9aa4ead
  403844:	dec    edx
  403845:	add    BYTE PTR [esi+0x5c],dl
  403848:	test   DWORD PTR [esi+0x78],eax
  40384b:	outs   dx,DWORD PTR ds:[esi]
  40384c:	mov    dl,0x88
  40384e:	pop    esi
  40384f:	add    esi,DWORD PTR [edx+0x31]
  403852:	repnz jecxz 0x403813
  403855:	jmp    0x673f9cc2
  40385a:	pop    ebp
  40385b:	push   esi
  40385c:	fisubr WORD PTR [edi+0x6ae8cfe1]
  403862:	mov    al,ds:0xf7a7f03d
  403867:	ds sub al,0x94
  40386a:	dec    ebx
  40386b:	imul   DWORD PTR [ebp-0x5afb52f3]
  403871:	mov    gs,WORD PTR [edx-0x45]
  403874:	adc    dl,BYTE PTR [esp+edx*4-0x49]
  403878:	pusha  
  403879:	jmp    0xff44:0x71f7b76b
  403880:	out    0x8b,al
  403882:	or     BYTE PTR [ebp-0x21],ch
  403885:	not    ebx
  403887:	loope  0x40388b
  403889:	add    ch,BYTE PTR [ebp+edi*1-0x67]
  40388d:	mov    dl,0xcf
  40388f:	pop    edi
  403890:	push   ss
  403891:	dec    esp
  403892:	adc    bh,BYTE PTR [edi+ebx*8]
  403895:	fidivr WORD PTR [ebx+0x55]
  403898:	adc    bh,BYTE PTR ds:0x8f922bd7
  40389e:	ins    BYTE PTR es:[edi],dx
  40389f:	bound  ecx,QWORD PTR [ebx+0x47e7fc2c]
  4038a5:	sbb    ah,BYTE PTR [edi]
  4038a7:	add    cl,BYTE PTR [eax+edi*2]
  4038aa:	gs fwait
  4038ac:	sti    
  4038ad:	data16 clc 
  4038af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038b1:	mov    cl,0x12
  4038b3:	mov    edx,0x3810a925
  4038b8:	repnz mov cl,0xb5
  4038bb:	arpl   WORD PTR [ebx],bx
  4038bd:	xchg   ebx,eax
  4038be:	cmp    dh,bh
  4038c0:	out    0xac,eax
  4038c2:	icebp  
  4038c3:	pop    esi
  4038c4:	mov    ah,0x15
  4038c6:	pop    edx
  4038c7:	push   esp
  4038c8:	fs mov dl,bh
  4038cb:	sar    edx,cl
  4038cd:	test   al,0xc6
  4038cf:	icebp  
  4038d0:	(bad)  
  4038d1:	leave  
  4038d2:	mov    ds:0x2e31923c,eax
  4038d7:	sbb    esp,DWORD PTR [ebx]
  4038d9:	and    BYTE PTR [ecx+esi*4+0x22bcd8f],cl
  4038e0:	fisttp QWORD PTR [edx+0x9304590]
  4038e6:	aaa    
  4038e7:	adc    dl,cl
  4038e9:	or     DWORD PTR [edx+0x41f3dd28],ebx
  4038ef:	or     eax,0x76b7621a
  4038f4:	jg     0x8fcb90a7
  4038fa:	add    ebp,edx
  4038fc:	inc    ebx
  4038fd:	push   0x601f503f
  403902:	mov    eax,0x9b7af54d
  403907:	mov    dh,0xa2
  403909:	inc    ebp
  40390a:	pusha  
  40390b:	dec    ebx
  40390c:	nop
  40390d:	xchg   esi,eax
  40390e:	mov    ds:0xba22003f,al
  403913:	jae    0x403916
  403915:	cmp    eax,0x4721052b
  40391a:	xchg   BYTE PTR [ecx-0x7f3f11e5],dl
  403920:	inc    BYTE PTR [eax-0x1ccd27f7]
  403926:	jecxz  0x40396c
  403928:	popf   
  403929:	lds    esi,FWORD PTR [ecx+0x25]
  40392c:	xchg   ecx,eax
  40392d:	leave  
  40392e:	push   ecx
  40392f:	xlat   BYTE PTR ds:[ebx]
  403930:	out    dx,al
  403931:	cli    
  403932:	jp     0x4038de
  403934:	and    al,0x5
  403936:	adc    al,0x64
  403938:	das    
  403939:	mov    eax,0x46492cdb
  40393e:	fisubr DWORD PTR [edi-0x6f8563c9]
  403944:	gs push ds
  403946:	leave  
  403947:	jae    0x403977
  403949:	mov    WORD PTR [ecx+0x2724f5f8],?
  40394f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403950:	call   0xe3c5bc22
  403955:	pushf  
  403956:	clc    
  403957:	adc    al,0xd2
  403959:	push   0x9ba161e8
  40395e:	inc    edi
  40395f:	in     eax,0x56
  403961:	out    0xb2,eax
  403963:	push   ss
  403964:	jns    0x40390d
  403966:	in     al,dx
  403967:	(bad)  
  403968:	mov    edx,0xa1b9b06c
  40396d:	shr    DWORD PTR es:[edi+0x591a17f1],0xf7
  403975:	outs   dx,BYTE PTR ds:[esi]
  403976:	mov    ch,0x9
  403978:	js     0x403986
  40397a:	in     eax,0x3a
  40397c:	xor    al,0xb1
  40397e:	addr16 dec esp
  403980:	out    0x3e,eax
  403982:	and    bl,BYTE PTR [esi-0x3a4046cf]
  403988:	push   ecx
  403989:	sub    DWORD PTR [ebx-0x47325396],0x782083fe
  403993:	cs pop edx
  403995:	test   al,0x99
  403997:	das    
  403998:	cmp    BYTE PTR [edi+eax*1],bh
  40399b:	dec    edx
  40399c:	cdq    
  40399d:	push   eax
  40399e:	xor    BYTE PTR fs:[ecx-0x9b4cd71],dl
  4039a5:	sti    
  4039a6:	std    
  4039a7:	mov    ebx,0xe8bc8408
  4039ac:	jmp    0x403a16
  4039ae:	or     ebx,0x33
  4039b1:	inc    edi
  4039b2:	out    dx,al
  4039b3:	inc    ebp
  4039b4:	mov    WORD PTR [esi],ss
  4039b6:	dec    ebp
  4039b7:	(bad)
  4039ba:	mov    cl,0x70
  4039bc:	mov    dh,0x28
  4039be:	jns    0x4039c9
  4039c0:	mov    BYTE PTR [eax+0x474dd5b0],al
  4039c6:	retfw  0xaf58
  4039ca:	ins    DWORD PTR es:[edi],dx
  4039cb:	aas    
  4039cc:	out    0xa1,al
  4039ce:	adc    ah,bh
  4039d0:	cmp    BYTE PTR [esi],0x90
  4039d3:	(bad)  
  4039d5:	mov    ah,BYTE PTR [ecx]
  4039d7:	cmc    
  4039d8:	xor    eax,0xeea87117
  4039dd:	lahf   
  4039de:	jge    0x4039dd
  4039e0:	mov    ecx,0xfb843a0c
  4039e5:	icebp  
  4039e6:	jb     0x403a2c
  4039e8:	sbb    BYTE PTR [ebx-0x11aaf0d4],ch
  4039ee:	push   eax
  4039ef:	xchg   ebx,eax
  4039f0:	mov    ebp,eax
  4039f2:	dec    ebx
  4039f3:	mov    eax,ds:0xbb75f956
  4039f8:	ja     0x40399b
  4039fa:	or     cl,BYTE PTR [ecx]
  4039fc:	jbe    0x403996
  4039fe:	dec    ecx
  4039ff:	or     al,0x32
  403a01:	dec    esp
  403a02:	or     al,0xe8
  403a04:	pop    esp
  403a05:	mov    edx,0x5827c9ef
  403a0a:	(bad)  
  403a0b:	aas    
  403a0c:	mov    eax,0xa0a95c7c
  403a11:	add    ch,BYTE PTR [ebx+0x46]
  403a14:	leave  
  403a15:	imul   edx,DWORD PTR [ebp-0x2],0x64618d3
  403a1c:	xchg   DWORD PTR [ebx+eiz*2],ebp
  403a1f:	js     0x4039b2
  403a21:	fnsave [esi+0x665b82a5]
  403a27:	jmp    0x4039d4
  403a29:	rcr    DWORD PTR [ecx+0x50],1
  403a2c:	dec    esp
  403a2d:	ds std 
  403a2f:	dec    BYTE PTR ds:[ecx+0x2]
  403a33:	bound  esp,QWORD PTR [ebx+0x3]
  403a36:	in     eax,0x94
  403a38:	out    0xae,al
  403a3a:	mov    bh,0x44
  403a3c:	repnz stos BYTE PTR es:[edi],al
  403a3e:	test   DWORD PTR ds:0x819b7605,edx
  403a44:	cli    
  403a45:	jnp    0xb2e577ec
  403a4b:	cli    
  403a4c:	jnp    0x403a53
  403a4e:	ret    0xe26b
  403a51:	and    ah,BYTE PTR [eax+0x5f2e0a6e]
  403a57:	(bad)  
  403a59:	mov    ebp,0x5a2c1ec
  403a5e:	data16 jge 0x403a38
  403a61:	in     eax,0x26
  403a63:	shl    BYTE PTR [ebp+0x6f],1
  403a66:	dec    esi
  403a67:	cmp    al,0xc0
  403a69:	clc    
  403a6a:	mov    dl,0x83
  403a6c:	xchg   edx,eax
  403a6d:	dec    ebp
  403a6e:	or     eax,0xffffffa4
  403a71:	mul    DWORD PTR [ebp+esi*2-0x68983de5]
  403a78:	dec    edx
  403a79:	add    DWORD PTR [edx+0x9],0x879b67ab
  403a80:	or     eax,0x111abee2
  403a86:	imul   ecx,DWORD PTR [ecx+0x78],0xf0ed9a4f
  403a8d:	(bad)  
  403a8e:	ins    BYTE PTR es:[edi],dx
  403a8f:	lock push 0xffffff8b
  403a92:	loope  0x403a75
  403a94:	call   0x987663f7
  403a99:	add    eax,0x1b700a32
  403a9e:	xor    eax,0xb1ffaad7
  403aa3:	in     al,0x2b
  403aa5:	inc    edi
  403aa6:	and    cl,BYTE PTR [eax+0x3f7a35b1]
  403aac:	shl    BYTE PTR [eax-0x1e],cl
  403aaf:	mov    ecx,0x2bb08dae
  403ab4:	aam    0x92
  403ab6:	xor    al,bl
  403ab8:	push   edi
  403ab9:	jbe    0x403b2d
  403abb:	sti    
  403abc:	add    dh,BYTE PTR [ebx+0x7a93164d]
  403ac2:	sub    eax,0x6bea9039
  403ac7:	lock add bl,BYTE PTR gs:[edi-0x20]
  403acc:	and    eax,0x41fee488
  403ad1:	shl    DWORD PTR [ebx+0x60],1
  403ad4:	jecxz  0x403a6a
  403ad6:	rcl    dh,cl
  403ad8:	bswap  ecx
  403ada:	xor    al,0xc4
  403adc:	popa   
  403add:	adc    ch,al
  403adf:	mov    bl,BYTE PTR ds:0xe92982b6
  403ae5:	das    
  403ae6:	nop
  403ae7:	addr16 push ds
  403ae9:	ins    DWORD PTR es:[edi],dx
  403aea:	sbb    DWORD PTR [edi+0x22],0xfb7d3517
  403af1:	lds    esi,FWORD PTR [ebp+0x52]
  403af4:	(bad)  
  403af5:	mov    ebp,0x1e429dbe
  403afa:	outs   dx,BYTE PTR ds:[esi]
  403afb:	aaa    
  403afc:	jno    0x403b26
  403afe:	mov    ecx,0xf2ea2d80
  403b03:	mov    esp,0x72863d8b
  403b08:	jae    0x403a9b
  403b0a:	push   eax
  403b0b:	les    ecx,FWORD PTR [edi+0x48]
  403b0e:	sub    al,0xe3
  403b10:	clc    
  403b11:	mov    esp,0xeca3fb78
  403b16:	out    0x78,eax
  403b18:	add    esi,DWORD PTR [edi+0x47]
  403b1b:	push   eax
  403b1c:	je     0x403b7e
  403b1e:	jo     0x403b2c
  403b20:	adc    edi,DWORD PTR [ebx]
  403b22:	mov    eax,ds:0x4c66ab5e
  403b27:	in     eax,0xa1
  403b29:	out    0xb0,eax
  403b2b:	arpl   WORD PTR [edi-0x20],sp
  403b2e:	sbb    DWORD PTR [esi],esp
  403b30:	leave  
  403b31:	jbe    0x403b4e
  403b33:	jle    0x403af2
  403b35:	je     0x403b50
  403b37:	mov    al,0x53
  403b39:	cmp    ah,BYTE PTR [edx+ecx*8-0x62359db6]
  403b40:	lahf   
  403b41:	and    dh,bl
  403b43:	mov    cl,0xbd
  403b45:	mov    BYTE PTR [ecx-0x16],bh
  403b48:	sahf   
  403b49:	sub    eax,0x9626ec71
  403b4e:	cmp    al,0xa8
  403b50:	iret   
  403b51:	xor    DWORD PTR [edi],esi
  403b53:	div    ebp
  403b55:	sti    
  403b56:	loope  0x403b5d
  403b58:	adc    DWORD PTR [edi-0x58],edx
  403b5b:	stos   DWORD PTR es:[edi],eax
  403b5c:	mov    eax,0x409aa22b
  403b61:	into   
  403b62:	pop    ebp
  403b63:	push   ebp
  403b64:	dec    ecx
  403b65:	int    0x6c
  403b67:	inc    eax
  403b68:	mov    cs,edx
  403b6a:	push   esp
  403b6b:	ins    BYTE PTR es:[edi],dx
  403b6c:	cdq    
  403b6d:	daa    
  403b6e:	les    ebx,FWORD PTR [edx]
  403b70:	xor    edi,edi
  403b72:	cld    
  403b73:	les    edx,FWORD PTR [edx+edi*1]
  403b76:	rcl    DWORD PTR [eax],cl
  403b78:	sti    
  403b79:	es mov dh,0x5e
  403b7c:	pop    eax
  403b7d:	pusha  
  403b7e:	push   ecx
  403b7f:	and    esp,ebp
  403b81:	sub    eax,0xe073237b
  403b86:	cmp    BYTE PTR [edi-0x67],bl
  403b89:	or     edi,ebx
  403b8b:	sbb    eax,0x66ff3b15
  403b90:	jae    0x403be9
  403b92:	cdq    
  403b93:	jp     0x403ba7
  403b95:	in     eax,0xba
  403b97:	sub    eax,0xb99f7260
  403b9c:	dec    edi
  403b9d:	repz leave 
  403b9f:	test   al,0xda
  403ba1:	mov    eax,0x8a805279
  403ba6:	add    BYTE PTR [ebp-0x5234c00d],dh
  403bac:	mov    dl,0x7
  403bae:	jge    0x403b6f
  403bb0:	mov    bh,0x79
  403bb2:	out    0xea,al
  403bb4:	(bad)  
  403bb5:	fcom   QWORD PTR [eax]
  403bb7:	pop    ecx
  403bb8:	pop    ebp
  403bb9:	adc    BYTE PTR [edx],dh
  403bbb:	popa   
  403bbc:	jecxz  0x403bb3
  403bbe:	ds jnp 0x403bd0
  403bc1:	pushf  
  403bc2:	addr16 mov esi,0x2f1e0410
  403bc8:	scas   al,BYTE PTR es:[edi]
  403bc9:	out    dx,eax
  403bca:	dec    ecx
  403bcb:	adc    BYTE PTR [ecx+0x13066b7d],0x40
  403bd2:	leave  
  403bd3:	aas    
  403bd4:	dec    edi
  403bd5:	jmp    0xee13593
  403bda:	mov    ah,0xcc
  403bdc:	repnz inc edi
  403bde:	mov    bh,0xd8
  403be0:	push   ecx
  403be1:	mov    cl,0x4
  403be3:	xchg   ebx,eax
  403be4:	sub    DWORD PTR [edx],ebp
  403be6:	xor    DWORD PTR [edi-0x6b],esi
  403be9:	stos   BYTE PTR es:[edi],al
  403bea:	ror    DWORD PTR [ecx-0x374e7385],0x59
  403bf1:	es jbe 0x403bf4
  403bf4:	xchg   esi,eax
  403bf5:	ror    cl,1
  403bf7:	dec    edi
  403bf8:	xchg   ecx,eax
  403bf9:	lock push 0x225df3d6
  403bff:	mov    WORD PTR [edi-0x69615e2d],gs
  403c05:	std    
  403c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c07:	jg     0x403c7d
  403c09:	or     eax,0xe611059d
  403c0e:	mov    eax,0xc2d06cb8
  403c13:	or     BYTE PTR [esi+0x49fc385d],cl
  403c19:	data16 mov BYTE PTR es:[ebx+eiz*2],dh
  403c1e:	sar    DWORD PTR [eax-0x6a],1
  403c21:	outs   dx,DWORD PTR ds:[esi]
  403c22:	xor    DWORD PTR [esi+edx*1+0xa],ebp
  403c26:	jae    0x403bf4
  403c28:	push   esp
  403c29:	gs mov eax,0xc24c0970
  403c2f:	fist   WORD PTR [ebx+0x2d09d718]
  403c35:	xchg   ebx,eax
  403c36:	mov    al,ds:0xa3da1f05
  403c3b:	in     eax,dx
  403c3c:	fdiv   st(7),st
  403c3e:	cmp    BYTE PTR [eax+edi*2-0x4cc30e0a],bl
  403c45:	or     BYTE PTR [ebp-0x5ba56629],bh
  403c4b:	int    0xad
  403c4d:	hlt    
  403c4e:	mov    dh,0x6c
  403c50:	add    al,0xec
  403c53:	hlt    
  403c54:	popf   
  403c55:	pop    esp
  403c56:	stos   BYTE PTR es:[edi],al
  403c57:	jmp    0x403bf1
  403c59:	cmc    
  403c5a:	xor    DWORD PTR [ebx],esi
  403c5c:	or     ecx,DWORD PTR [edx-0x49ae91c8]
  403c62:	mov    al,ch
  403c64:	(bad)  
  403c65:	in     al,0xcd
  403c67:	mov    BYTE PTR [ebx+0x7f4c86ba],bh
  403c6d:	in     al,0x7f
  403c6f:	add    eax,0xc59f3cbe
  403c74:	pop    esp
  403c75:	lods   eax,DWORD PTR ds:[esi]
  403c76:	rcr    DWORD PTR [esi-0x75],0x70
  403c7a:	ja     0x403c9c
  403c7c:	fidiv  DWORD PTR [ebp-0x3094e68b]
  403c82:	push   ebp
  403c83:	loop   0x403c6d
  403c85:	fidiv  WORD PTR [edx-0x741be43]
  403c8b:	retf   
  403c8c:	xchg   edi,eax
  403c8d:	xor    BYTE PTR [eax+0x35c7c8b7],ch
  403c93:	js     0x403cd8
  403c95:	sbb    edx,DWORD PTR [ebp+edi*1-0x3da352f3]
  403c9c:	push   cs
  403c9d:	scas   al,BYTE PTR es:[edi]
  403c9e:	or     DWORD PTR [eax+0x4357a55],esi
  403ca4:	mov    cl,BYTE PTR [ecx-0x6a]
  403ca7:	xchg   esp,eax
  403ca8:	inc    esi
  403ca9:	outs   dx,BYTE PTR ds:[esi]
  403caa:	dec    eax
  403cab:	popa   
  403cac:	sub    DWORD PTR [edi+0x5c5bd377],ecx
  403cb2:	push   ss
  403cb3:	cdq    
  403cb4:	scas   eax,DWORD PTR es:[edi]
  403cb5:	aad    0xf0
  403cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cb8:	fiadd  DWORD PTR [ebx+0x35]
  403cbb:	sar    esp,cl
  403cbd:	xchg   edi,eax
  403cbe:	jecxz  0x403c84
  403cc0:	ja     0x403c73
  403cc2:	mov    dl,0xf6
  403cc4:	fld    TBYTE PTR [esi+0x389a4994]
  403cca:	bound  edx,QWORD PTR [esi+ebx*4+0xa]
  403cce:	push   ds
  403ccf:	ret    0x3d50
  403cd2:	add    al,0x9a
  403cd4:	shr    BYTE PTR [edi+0x6b151765],0x96
  403cdb:	mov    ecx,0x91c7dba5
  403ce0:	add    ecx,DWORD PTR [esi+esi*4+0x5]
  403ce4:	fsubr  QWORD PTR [eax+0x27]
  403ce7:	jecxz  0x403ca9
  403ce9:	add    bl,BYTE PTR [eax-0xe1de099]
  403cef:	rcl    BYTE PTR [edx-0x69],0xfd
  403cf3:	in     al,0x2
  403cf5:	adc    DWORD PTR [edx+0x6fb12410],eax
  403cfb:	pop    ebx
  403cfc:	out    0xd9,al
  403cfe:	mov    al,ds:0xe37be947
  403d03:	inc    esi
  403d04:	xchg   BYTE PTR [ebx],ch
  403d06:	fild   WORD PTR [ecx-0x11]
  403d09:	cmp    DWORD PTR [edi],esi
  403d0b:	sbb    ah,BYTE PTR [edx-0x4b94baf5]
  403d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d12:	stos   DWORD PTR es:[edi],eax
  403d13:	dec    esp
  403d14:	aad    0xcd
  403d16:	hlt    
  403d17:	xchg   ecx,eax
  403d18:	adc    cl,cl
  403d1a:	jp     0x403d88
  403d1c:	hlt    
  403d1d:	cmp    DWORD PTR [ebx-0x13],edx
  403d20:	sti    
  403d21:	nop
  403d22:	mov    cs,edx
  403d24:	into   
  403d25:	xchg   esi,eax
  403d26:	mov    esp,DWORD PTR [eax-0x6757eb5b]
  403d2c:	mov    edi,eax
  403d2e:	cwde   
  403d2f:	xchg   BYTE PTR [edx-0x418243b0],bh
  403d35:	fnstcw WORD PTR [esi+0x6af290a1]
  403d3b:	xchg   ebp,eax
  403d3c:	mov    bh,0x97
  403d3e:	repnz inc ebp
  403d40:	push   eax
  403d41:	cs retfw 0x978a
  403d46:	pushf  
  403d47:	jmp    0x403d00
  403d49:	cmp    BYTE PTR [edi-0x921319e],ah
  403d4f:	adc    DWORD PTR [edi+0x24],edx
  403d52:	or     DWORD PTR [ebp+0x4059eb67],esp
  403d58:	jmp    0x3cc8:0x1955e3f6
  403d5f:	out    dx,eax
  403d60:	ins    DWORD PTR es:[edi],dx
  403d61:	mov    ds:0xc59bf88b,al
  403d66:	cmp    DWORD PTR [esi-0x7a],esi
  403d69:	(bad)  
  403d6a:	loopne 0x403dd8
  403d6c:	mov    ebp,0x178e0bfa
  403d71:	jae    0x403dde
  403d73:	adc    BYTE PTR [ebx-0x36588b7c],al
  403d79:	xchg   esp,eax
  403d7a:	adc    bh,BYTE PTR [ecx+0x54]
  403d7d:	call   0xff61:0x4005b2a4
  403d84:	cmc    
  403d85:	lahf   
  403d86:	mov    ds:0xc2fdf945,eax
  403d8b:	fcomi  st,st(4)
  403d8d:	in     eax,dx
  403d8e:	and    BYTE PTR [edi],0x7b
  403d91:	xchg   ecx,eax
  403d92:	jo     0x403e00
  403d94:	jp     0x403d74
  403d96:	les    ebp,FWORD PTR [ecx]
  403d98:	or     eax,0x535eb408
  403d9d:	mov    ds:0x2fd8e598,al
  403da2:	arpl   dx,di
  403da4:	stos   BYTE PTR es:[edi],al
  403da5:	sbb    BYTE PTR [esi+edi*1],bh
  403da8:	pop    edx
  403da9:	dec    esp
  403daa:	push   ebx
  403dab:	inc    esi
  403dac:	jmp    0x96ce2d93
  403db1:	rcr    esp,cl
  403db3:	pop    ecx
  403db4:	lock push ds
  403db6:	scas   eax,DWORD PTR es:[edi]
  403db7:	loop   0x403ddc
  403db9:	jg     0x403d4a
  403dbb:	retf   
  403dbc:	scas   eax,DWORD PTR es:[edi]
  403dbd:	fsubr  QWORD PTR [edx+esi*1]
  403dc1:	push   edx
  403dc2:	push   0xffffff96
  403dc4:	lahf   
  403dc5:	dec    esp
  403dc6:	jl     0x403e3b
  403dc8:	adc    ah,BYTE PTR [edi+0x25]
  403dcb:	cmp    eax,0x13e09e92
  403dd0:	push   es
  403dd1:	pushf  
  403dd2:	cmp    eax,0x52c13a03
  403dd7:	and    BYTE PTR [edx],0x76
  403dda:	xor    al,0x5e
  403ddc:	xchg   edx,eax
  403ddd:	lods   eax,DWORD PTR ds:[esi]
  403dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ddf:	adc    eax,0xa35382fc
  403de4:	rcr    dl,cl
  403de6:	sub    bl,ch
  403de8:	mov    al,0x26
  403deb:	arpl   WORD PTR [esi-0x666af74a],sp
  403df1:	sub    eax,0xefe39915
  403df6:	sub    eax,0xdc4727a3
  403dfb:	xchg   eax,esi
  403dfd:	pop    es
  403dfe:	dec    esp
  403dff:	or     eax,0xc8ee210c
  403e04:	popa   
  403e05:	fisttp WORD PTR ds:0xf2acde50
  403e0b:	xchg   dh,ah
  403e0d:	loopne 0x403dd5
  403e0f:	sbb    al,0xa
  403e11:	call   0xcbd594a9
  403e16:	ins    BYTE PTR es:[edi],dx
  403e17:	push   esp
  403e18:	jmp    0x6d8a:0x8ae50911
  403e1f:	iret   
  403e20:	or     BYTE PTR [ebp+0xfcb476e],cl
  403e26:	enter  0x2390,0x41
  403e2a:	les    ecx,FWORD PTR ds:[eax+ebx*1+0x7a1b0c18]
  403e32:	mov    edi,0x4f1594ef
  403e37:	or     ebx,DWORD PTR [eax+0x22106bc5]
  403e3d:	xchg   esp,eax
  403e3e:	push   ebp
  403e3f:	sbb    BYTE PTR [ebp*4-0x3e5f4cce],ah
  403e46:	pop    ax
  403e48:	mov    ch,0x2d
  403e4a:	add    DWORD PTR [esi+eax*8-0x42],0x26
  403e4f:	push   ebp
  403e50:	mov    dh,0xe
  403e52:	mov    cs,esp
  403e54:	mov    al,ds:0xe96b6892
  403e59:	jmp    0xca44:0xcfb1e87c
  403e60:	cmp    ah,dl
  403e62:	jmp    FWORD PTR [edi-0x65]
  403e65:	jbe    0x403e19
  403e67:	cmp    DWORD PTR [edi-0x80],0xffffffc6
  403e6b:	fstp   TBYTE PTR [edx+0x65]
  403e6e:	adc    al,0x91
  403e70:	adc    dh,cl
  403e72:	jge    0x403ea4
  403e74:	or     BYTE PTR [eax-0x3],bh
  403e77:	inc    ebp
  403e78:	inc    ecx
  403e79:	dec    ebx
  403e7a:	fwait
  403e7b:	or     esi,DWORD PTR [ebx-0x3bca7ab9]
  403e81:	dec    ecx
  403e82:	fidiv  WORD PTR [edi+0x75f2bbc7]
  403e88:	shr    BYTE PTR [edx+ebp*1],0x9
  403e8c:	inc    esp
  403e8d:	mov    bl,0xd2
  403e8f:	xchg   DWORD PTR [eax-0x4cabc3d6],eax
  403e95:	dec    edi
  403e96:	repz retf 
  403e98:	add    eax,DWORD PTR [ecx-0x5a]
  403e9b:	lahf   
  403e9c:	ins    DWORD PTR es:[edi],dx
  403e9d:	jb     0x403e6f
  403e9f:	push   ebp
  403ea0:	popa   
  403ea1:	push   es
  403ea2:	int    0xcd
  403ea4:	pop    ebp
  403ea5:	mov    BYTE PTR [edi-0x23888eca],dh
  403eab:	mov    bh,0x88
  403ead:	repz inc esp
  403eaf:	int    0x85
  403eb1:	imul   ecx,DWORD PTR [edi+edi*8-0x27],0x9422da99
  403eb9:	in     al,0x41
  403ebb:	shl    BYTE PTR [eax+0x13],1
  403ebe:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec0:	int3   
  403ec1:	js     0x403ead
  403ec3:	stc    
  403ec4:	or     al,BYTE PTR ds:0xc10c2564
  403eca:	adc    esp,DWORD PTR [eax-0x116584c6]
  403ed0:	daa    
  403ed1:	arpl   WORD PTR [edx],cx
  403ed3:	es dec edi
  403ed5:	pop    es
  403ed6:	cmp    DWORD PTR [ecx+0x6a],eax
  403ed9:	(bad)  
  403edb:	sub    ecx,DWORD PTR [eax+0x50]
  403ede:	fisttp DWORD PTR [esi-0x10]
  403ee1:	adc    BYTE PTR [edi+0x6d2b5d12],ch
  403ee7:	jnp    0x403f58
  403ee9:	sub    al,0xdc
  403eeb:	add    BYTE PTR [esi],cl
  403eed:	aaa    
  403eee:	shr    DWORD PTR [edx+0x19],cl
  403ef1:	je     0x403f42
  403ef3:	pop    ebp
  403ef4:	push   cs
  403ef5:	dec    ebp
  403ef6:	pop    edi
  403ef7:	jmp    0x3bbceb1f
  403efc:	jle    0x403ee2
  403efe:	lock jo 0x403f1c
  403f01:	mov    WORD PTR [eax],cs
  403f03:	mov    bl,0xf6
  403f05:	enter  0x30b5,0x1
  403f09:	test   eax,0xf76be3c3
  403f0e:	xchg   ecx,eax
  403f0f:	inc    eax
  403f10:	clc    
  403f11:	out    0xe5,eax
  403f13:	jg     0x403f50
  403f15:	mov    ah,BYTE PTR [esi]
  403f17:	fistp  DWORD PTR [edx]
  403f19:	mov    gs,esi
  403f1b:	sahf   
  403f1c:	pop    eax
  403f1d:	push   ds
  403f1e:	fnsave [ecx+0x32d86c9f]
  403f24:	mov    al,ds:0x80cea967
  403f29:	pop    ebp
  403f2a:	int    0xe
  403f2c:	loopne 0x403f25
  403f2e:	cmp    eax,0x212ac91
  403f33:	das    
  403f34:	sub    dl,BYTE PTR [edx+0x41]
  403f37:	dec    esp
  403f38:	jae    0x403f2f
  403f3a:	inc    esi
  403f3b:	jmp    0x403f42
  403f3d:	xor    eax,0x74eeb2d4
  403f42:	les    ecx,FWORD PTR [ebx-0x46]
  403f45:	xor    eax,0xd43c6d7b
  403f4a:	add    eax,0xf36a9bc2
  403f4f:	mov    edx,0xf926a485
  403f54:	fwait
  403f55:	jge    0x403f11
  403f57:	inc    ebx
  403f58:	mov    dl,0xca
  403f5a:	lds    ebx,FWORD PTR [esi-0x51e06022]
  403f60:	jp     0x403ef6
  403f62:	adc    ah,BYTE PTR [ecx]
  403f64:	out    0xc5,eax
  403f66:	xor    dh,BYTE PTR [esi+edi*1-0x35]
  403f6a:	inc    ebx
  403f6b:	xchg   BYTE PTR [edi+0x1c865646],al
  403f71:	sub    eax,0xc5395b1f
  403f76:	and    dh,BYTE PTR ds:0xc60bca88
  403f7c:	sti    
  403f7d:	and    BYTE PTR [ebx+0x7c],0xa8
  403f81:	mov    edi,0x650b0632
  403f86:	or     esi,DWORD PTR [esi]
  403f88:	push   ebx
  403f89:	fstp   TBYTE PTR [ebx]
  403f8b:	(bad)  
  403f8c:	les    esi,FWORD PTR [edx]
  403f8e:	push   ebx
  403f8f:	xchg   edx,eax
  403f90:	adc    eax,0x4b7b9813
  403f95:	xlat   BYTE PTR ds:[ebx]
  403f96:	jecxz  0x403faf
  403f98:	xor    DWORD PTR [edi],eax
  403f9a:	pop    esp
  403f9b:	mov    edx,0x9966ba6f
  403fa0:	xor    al,0x6b
  403fa2:	pop    esp
  403fa3:	jno    0x40401c
  403fa5:	push   ebx
  403fa6:	or     ch,dl
  403fa8:	and    eax,0x208f7c9a
  403fad:	and    eax,DWORD PTR ds:0x31cd69eb
  403fb3:	cmp    edx,DWORD PTR [ebx-0x53a5d5cf]
  403fb9:	push   es
  403fba:	rol    BYTE PTR [edx],0xb0
  403fbd:	dec    ecx
  403fbe:	aas    
  403fbf:	inc    esi
  403fc0:	sbb    BYTE PTR [ebp+0x361be25f],dh
  403fc6:	jo     0x403fa9
  403fc8:	sti    
  403fc9:	sbb    BYTE PTR [esi+0x4e],bl
  403fcc:	pop    edx
  403fcd:	fld    st(6)
  403fcf:	cmp    al,0x15
  403fd1:	popa   
  403fd2:	cld    
  403fd3:	js     0x403fa8
  403fd5:	and    DWORD PTR [edi+0x55],0xffffffd6
  403fd9:	retf   0xcb1c
  403fdc:	les    ebp,FWORD PTR [edi-0x162a2b1a]
  403fe2:	pop    eax
  403fe3:	retf   
  403fe4:	jae    0x40401b
  403fe6:	jne    0x403ff6
  403fe8:	mov    esi,0x5e9a1d29
  403fed:	adc    bh,BYTE PTR [edi+0x1430a9a]
  403ff3:	dec    eax
  403ff4:	adc    DWORD PTR [edx-0x51],esp
  403ff7:	les    esp,FWORD PTR [esi-0x5d3ecb9c]
  403ffd:	clc    
  403ffe:	pop    ebp
  403fff:	enter  0xff6e,0x99
  404003:	dec    eax
  404004:	sbb    eax,0x17af79d
  404009:	push   ds
  40400a:	pushf  
  40400b:	add    DWORD PTR [eax],ebx
  40400d:	push   0xffffffc4
  40400f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404010:	jge    0x403ff1
  404012:	sub    al,0x47
  404014:	dec    eax
  404015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404016:	jne    0x404047
  404018:	pop    ss
  404019:	ret    
  40401a:	test   BYTE PTR [ebx-0x5d],0x11
  40401e:	inc    esi
  40401f:	sub    DWORD PTR [eax-0x46cede03],ebp
  404025:	mov    BYTE PTR [esi],cl
  404027:	sub    dh,bh
  404029:	arpl   WORD PTR [esi-0x1b],bx
  40402c:	subps  xmm7,XMMWORD PTR [ebx+ebp*8]
  404030:	mov    eax,ds:0xb2e6a66
  404035:	pop    es
  404036:	inc    ebx
  404037:	test   ebx,edi
  404039:	lods   eax,DWORD PTR ds:[esi]
  40403a:	mov    eax,0xd05039f
  40403f:	aad    0x84
  404041:	cmc    
  404042:	out    dx,al
  404043:	std    
  404044:	sbb    edx,esp
  404046:	iret   
  404047:	rep stos DWORD PTR es:[edi],eax
  404049:	inc    ebp
  40404a:	rcr    al,1
  40404c:	aad    0x15
  40404e:	add    dl,BYTE PTR [ecx]
  404050:	adc    BYTE PTR [edi-0x26],al
  404053:	jmp    0x94b0332a
  404058:	jecxz  0x404072
  40405a:	pop    esp
  40405b:	in     eax,0x64
  40405d:	jne    0x40406e
  40405f:	out    0xb7,al
  404061:	in     al,0x2b
  404063:	(bad)  
  404064:	sbb    dl,BYTE PTR [ecx]
  404066:	cmp    eax,0xaf36412b
  40406b:	sar    BYTE PTR es:[ebx+eax*8],cl
  40406f:	mov    ch,0x33
  404071:	push   0x51
  404073:	call   0x628:0x9389725
  40407a:	mov    edi,DWORD PTR [eax+0x43]
  40407d:	je     0x404080
  40407f:	mov    BYTE PTR cs:[eax-0xcf65ebb],bh
  404086:	inc    esp
  404087:	jmp    0x5aad33d0
  40408c:	jp     0x4040d3
  40408e:	cs mov dl,0x32
  404091:	inc    ecx
  404092:	lock lds edi,FWORD PTR [esi*1-0x2839151]
  40409a:	addr16 mov bh,0x15
  40409d:	ja     0x40406d
  40409f:	mov    bh,dl
  4040a1:	push   cs
  4040a2:	pusha  
  4040a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040a4:	in     al,dx
  4040a5:	cmp    ecx,DWORD PTR [eax-0x2cbc838d]
  4040ab:	out    dx,al
  4040ac:	outs   dx,DWORD PTR ds:[esi]
  4040ad:	jns    0x40404c
  4040af:	ror    DWORD PTR [edx-0x2c],1
  4040b2:	test   al,0x98
  4040b4:	mov    ebp,0xc29d40d
  4040b9:	inc    edx
  4040ba:	and    BYTE PTR [edi+ebx*8],al
  4040bd:	push   esp
  4040be:	xchg   esp,eax
  4040bf:	dec    esi
  4040c0:	cs cmp eax,0x267594f1
  4040c6:	mov    dl,0x56
  4040c8:	enter  0xd477,0x58
  4040cc:	icebp  
  4040cd:	mov    cl,0x57
  4040cf:	add    eax,0x7c18146e
  4040d4:	xchg   esp,eax
  4040d5:	sub    ecx,DWORD PTR [ecx]
  4040d7:	lea    edx,[esi-0xc]
  4040da:	ss popf 
  4040dc:	add    ch,BYTE PTR [edi+edx*1]
  4040df:	ins    DWORD PTR es:[edi],dx
  4040e0:	jg     0x404093
  4040e2:	push   edi
  4040e3:	jmp    0x40412c
  4040e5:	cwde   
  4040e6:	push   0x3f4ac4d1
  4040eb:	les    ebx,FWORD PTR [eax+0x6b]
  4040ee:	mov    ah,0x1d
  4040f0:	pop    edi
  4040f1:	shl    DWORD PTR ds:0xa473436f,0x5a
  4040f8:	mov    dl,0xff
  4040fa:	jmp    0x228b2051
  4040ff:	adc    DWORD PTR [edx],esp
  404101:	in     al,0x96
  404103:	lea    ebp,[ebx+0x6bb5eca6]
  404109:	clc    
  40410a:	push   edi
  40410b:	cwde   
  40410c:	xor    bh,dl
  40410e:	stos   BYTE PTR es:[edi],al
  40410f:	ss popa 
  404111:	sub    esp,DWORD PTR [ebp+0x9f3c7c6]
  404117:	jmp    0x1cc2:0x10b8599e
  40411e:	jmp    DWORD PTR [edx+0x4c2d604e]
  404124:	fnsave [edx-0x30]
  404127:	sbb    ebp,edx
  404129:	jnp    0x4041a2
  40412b:	push   edx
  40412c:	test   dl,al
  40412e:	cmp    eax,0xa8fff32a
  404133:	push   esi
  404134:	cmp    eax,0xbdb808a
  404139:	or     BYTE PTR ds:0x73085f1a,0xfe
  404140:	fisttp QWORD PTR [ebp+0x712d67ba]
  404146:	add    dh,BYTE PTR [eax+0x1741865b]
  40414c:	cmp    esp,DWORD PTR [esi]
  40414e:	lock adc ebp,DWORD PTR [eax+0x1a776645]
  404155:	adc    edi,ebx
  404157:	mov    edx,0x710e3877
  40415c:	imul   ebp,DWORD PTR es:[ebp-0x36],0x62cf916e
  404164:	icebp  
  404165:	das    
  404166:	cmp    DWORD PTR [ecx+0x504a00fd],edx
  40416c:	ds inc edi
  40416e:	clc    
  40416f:	jns    0x40414f
  404171:	dec    eax
  404172:	mov    bl,0xb7
  404174:	sub    al,0xf5
  404176:	int    0x9
  404178:	push   edx
  404179:	scas   eax,DWORD PTR es:[edi]
  40417a:	push   edi
  40417b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40417c:	xchg   ecx,eax
  40417d:	test   DWORD PTR [eax+eax*1-0x40bf0e9a],esp
  404184:	push   edi
  404185:	mov    cl,0xd8
  404187:	push   ds
  404188:	cs jle 0x404193
  40418b:	jae    0x404115
  40418d:	mov    dl,0xd7
  40418f:	sbb    dh,BYTE PTR [ebp-0x22f9685f]
  404195:	adc    esp,edx
  404197:	pand   mm3,mm5
  40419a:	pop    esp
  40419b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40419c:	fstp   DWORD PTR [eax+edi*2]
  40419f:	xor    al,0x56
  4041a1:	mov    al,0xe1
  4041a3:	mov    al,ds:0x818903f3
  4041a8:	outs   dx,BYTE PTR ds:[esi]
  4041a9:	scas   eax,DWORD PTR es:[edi]
  4041aa:	outs   dx,BYTE PTR ds:[esi]
  4041ab:	ss push ss
  4041ad:	jmp    0xfa3:0xeaebd60f
  4041b4:	inc    eax
  4041b5:	popa   
  4041b6:	mov    cl,0xf5
  4041b8:	scas   eax,DWORD PTR es:[edi]
  4041b9:	and    BYTE PTR [edi-0x24],bh
  4041bc:	and    BYTE PTR es:[esi+0x1aef29bf],bl
  4041c3:	and    BYTE PTR [eax-0x6f97be7e],bh
  4041c9:	pop    edx
  4041ca:	scas   eax,DWORD PTR es:[edi]
  4041cb:	ja     0x40417a
  4041cd:	stos   DWORD PTR es:[edi],eax
  4041ce:	pop    esi
  4041cf:	ret    0xbbf2
  4041d2:	mov    DWORD PTR [ebp*4+0x5f8a48e],ebp
  4041d9:	stos   DWORD PTR es:[edi],eax
  4041da:	ja     0x404226
  4041dc:	es retf 
  4041de:	bound  edx,QWORD PTR [ecx+0x2fd6a6ee]
  4041e4:	lahf   
  4041e5:	jne    0x4041b4
  4041e7:	xchg   ebp,eax
  4041e8:	cmp    dh,BYTE PTR [esi+0x3f944590]
  4041ee:	int    0x95
  4041f0:	mov    dl,0x12
  4041f2:	push   0x7535d1e4
  4041f7:	or     eax,0xa091702b
  4041fc:	dec    eax
  4041fd:	push   0x86876541
  404202:	or     al,0xc
  404204:	mov    al,ds:0xd92788d4
  404209:	stos   DWORD PTR es:[edi],eax
  40420a:	xor    al,0xb5
  40420c:	lods   eax,DWORD PTR ds:[esi]
  40420d:	push   ecx
  40420e:	loop   0x404234
  404210:	dec    ebx
  404211:	pop    esp
  404212:	fwait
  404213:	aam    0x36
  404215:	out    dx,al
  404216:	adc    ecx,DWORD PTR [edi+0x7a]
  404219:	mov    eax,ds:0x6b9b787d
  40421e:	inc    ebp
  40421f:	(bad)  
  404220:	call   0x628e:0x806e3d88
  404227:	pop    esi
  404228:	aas    
  404229:	mov    dh,0x5d
  40422b:	aaa    
  40422c:	mov    al,0x17
  40422e:	xchg   ebx,eax
  40422f:	sub    esp,esp
  404231:	mov    fs,WORD PTR [esi+0x4e]
  404234:	sub    ch,BYTE PTR [edi]
  404236:	imul   ecx,DWORD PTR ds:0x446c8543,0x787fed45
  404240:	dec    esi
  404241:	fimul  DWORD PTR [ecx+0x49]
  404244:	loop   0x404283
  404246:	add    al,cl
  404248:	mov    bh,0xe0
  40424a:	sub    eax,edi
  40424c:	or     BYTE PTR [ecx+0x1591150c],bl
  404252:	ins    BYTE PTR es:[edi],dx
  404253:	cmc    
  404254:	pop    ss
  404255:	es fst st(1)
  404258:	test   al,0xdf
  40425a:	xor    ebp,eax
  40425c:	dec    DWORD PTR [ebp-0x221fb408]
  404262:	mov    ch,0xd2
  404264:	push   ss
  404265:	xor    eax,0x8fb482a4
  40426a:	js     0x4042e4
  40426c:	inc    esp
  40426d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40426e:	mov    BYTE PTR [edi+0x3ef267bd],ch
  404274:	push   es
  404275:	add    BYTE PTR [ecx-0x5b],dh
  404278:	ficom  WORD PTR [esi+0x42da4293]
  40427e:	shr    ebp,cl
  404280:	mov    eax,0xeac9d0c5
  404285:	call   0xf352:0x4e4a154e
  40428c:	fcom   st(0)
  40428e:	or     BYTE PTR [ebx+0x3f50506c],dl
  404294:	push   ds
  404295:	cwde   
  404296:	out    dx,eax
  404297:	out    dx,al
  404298:	fstp   DWORD PTR [ecx+0x7c8fbdb9]
  40429e:	ins    BYTE PTR es:[edi],dx
  40429f:	loop   0x404257
  4042a1:	or     al,BYTE PTR [edi+0x1b]
  4042a4:	xchg   ebx,eax
  4042a5:	mov    ecx,0xed74296b
  4042aa:	test   al,0x2
  4042ac:	push   esi
  4042ad:	stos   DWORD PTR es:[edi],eax
  4042ae:	test   ch,0xe8
  4042b1:	push   ecx
  4042b2:	xchg   edx,eax
  4042b3:	inc    esi
  4042b4:	sbb    BYTE PTR [esi+eiz*2],cl
  4042b7:	stos   DWORD PTR es:[edi],eax
  4042b8:	loopne 0x404262
  4042ba:	js     0x404282
  4042bc:	dec    ebp
  4042bd:	mov    ds:0x729fdf63,eax
  4042c2:	cmp    BYTE PTR [eax],dl
  4042c4:	mov    edx,0x7c8ecb17
  4042c9:	scas   al,BYTE PTR es:[edi]
  4042ca:	test   al,0xe7
  4042cc:	xlat   BYTE PTR ds:[ebx]
  4042cd:	jbe    0x4042d4
  4042cf:	pop    esi
  4042d0:	xchg   esi,eax
  4042d1:	mov    ch,0x9d
  4042d3:	out    0xee,al
  4042d5:	jmp    0x2ecf:0xe020ff1e
  4042dc:	lods   al,BYTE PTR ds:[esi]
  4042dd:	adc    dh,BYTE PTR [eax-0x1f9ce017]
  4042e3:	add    eax,0xd5f647d0
  4042e8:	call   0x4910:0x1a0898d0
  4042ef:	out    0xf4,eax
  4042f1:	data16 mov bl,0x1c
  4042f4:	ret    0x7435
  4042f7:	scas   eax,DWORD PTR es:[edi]
  4042f8:	mov    BYTE PTR [ebp-0x694f5503],bh
  4042fe:	jmp    0x9b8d:0xc3708d63
  404305:	mov    DWORD PTR [eax],ebx
  404307:	sub    DWORD PTR [edx],0xdc1a930b
  40430d:	or     bl,dh
  40430f:	dec    edx
  404310:	lods   eax,DWORD PTR ds:[esi]
  404311:	fsub   DWORD PTR [ebp+0x2f]
  404314:	int3   
  404315:	jmp    0xecac4e75
  40431a:	in     al,0xd3
  40431c:	jb     0x40435c
  40431e:	push   cs
  40431f:	or     esi,DWORD PTR [esi+0x67]
  404322:	push   ebp
  404323:	stos   DWORD PTR es:[edi],eax
  404324:	js     0x404339
  404326:	or     ebp,DWORD PTR [ecx]
  404328:	push   0xfd4c11d9
  40432d:	mov    ah,0x44
  40432f:	clc    
  404330:	in     al,0xe5
  404332:	pop    esp
  404333:	pop    ebx
  404334:	dec    eax
  404335:	jmp    0x404390
  404337:	daa    
  404338:	inc    esp
  404339:	xchg   ecx,eax
  40433a:	aaa    
  40433b:	(bad)  
  40433d:	pop    ebp
  40433e:	xor    eax,0xed3782b6
  404343:	aas    
  404344:	int    0x68
  404346:	inc    esp
  404347:	jb     0x40439b
  404349:	or     ebp,DWORD PTR [ecx]
  40434b:	mov    DWORD PTR [esi],eax
  40434d:	in     al,0xe8
  40434f:	cdq    
  404350:	xor    DWORD PTR [ebx+edx*4],0x31fb7228
  404357:	jp     0x404306
  404359:	(bad)  
  40435a:	scas   eax,DWORD PTR es:[edi]
  40435b:	add    eax,0x8d301c19
  404360:	mov    eax,esp
  404362:	inc    ebp
  404363:	mov    al,0x7b
  404365:	pop    es
  404366:	push   esp
  404367:	push   es
  404368:	out    0x48,eax
  40436a:	cmp    eax,0x514ee53e
  40436f:	or     DWORD PTR [edi+0x88817d5],ebp
  404375:	pop    es
  404376:	mov    bh,0x33
  404378:	inc    edi
  404379:	arpl   WORD PTR [esi-0xe],ax
  40437c:	mov    ds:0x3184ba96,al
  404381:	sbb    eax,0xbc47e206
  404386:	(bad)  
  404388:	test   al,0x43
  40438a:	mov    dh,0xa5
  40438c:	mov    bh,BYTE PTR [edi+0x23]
  40438f:	outs   dx,BYTE PTR ds:[esi]
  404390:	xchg   edx,ecx
  404392:	inc    eax
  404393:	dec    ebx
  404394:	mov    WORD PTR [edi],ds
  404396:	add    dl,dh
  404398:	cmp    BYTE PTR [ebp+0x68],0x1a
  40439c:	int3   
  40439d:	mov    cs,WORD PTR [ebp-0x723e1ffb]
  4043a3:	dec    eax
  4043a4:	xchg   ecx,eax
  4043a5:	push   ebp
  4043a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043a7:	mov    ds:0xea470c39,al
  4043ac:	(bad)  
  4043ae:	cmp    eax,0xb76f686b
  4043b3:	mov    ebx,0xf3925f6e
  4043b8:	bound  esi,QWORD PTR [ebx]
  4043ba:	or     al,0xbd
  4043bc:	sahf   
  4043bd:	lods   al,BYTE PTR ds:[esi]
  4043be:	push   esi
  4043bf:	xor    edx,DWORD PTR [ebx-0x78fa1a99]
  4043c5:	push   0xffffff8a
  4043c7:	(bad)  
  4043c8:	and    BYTE PTR [ecx-0x26],bl
  4043cb:	xor    bh,BYTE PTR [esp+esi*4+0x639aa807]
  4043d2:	pop    esi
  4043d3:	pop    ss
  4043d4:	dec    ecx
  4043d6:	fcmovnu st,st(1)
  4043d8:	cmp    ecx,DWORD PTR [ebx+ebx*1-0x27]
  4043dc:	and    BYTE PTR [ebx],dl
  4043de:	push   ebx
  4043df:	repz neg cl
  4043e2:	xchg   BYTE PTR ds:0x8167db3d,ch
  4043e8:	inc    edi
  4043e9:	loopne 0x4043f6
  4043eb:	fxch   st(2)
  4043ed:	mov    bh,0x5e
  4043ef:	cwde   
  4043f0:	mov    bh,0xed
  4043f2:	push   0xc61ea22a
  4043f7:	dec    eax
  4043f8:	arpl   WORD PTR [ebp-0x12],bx
  4043fb:	jp     0x404462
  4043fd:	imul   sp,ax,0xca9b
  404402:	add    bh,BYTE PTR ds:0x573f35f1
  404408:	push   esp
  404409:	xchg   ebp,eax
  40440a:	inc    esi
  40440b:	mov    ecx,0x9357e7f1
  404410:	xchg   ebp,eax
  404411:	fyl2x  
  404413:	add    bl,BYTE PTR [ebx]
  404415:	cmp    al,0x88
  404417:	xchg   esp,eax
  404418:	ins    DWORD PTR es:[edi],dx
  404419:	scas   al,BYTE PTR es:[edi]
  40441a:	data16 fbld TBYTE PTR [ebx]
  40441d:	jnp    0x4043a7
  40441f:	gs pop ds
  404421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404422:	pop    esi
  404423:	push   ds
  404424:	fisubr WORD PTR [esi+0x78c88ccb]
  40442a:	pusha  
  40442b:	test   al,0x27
  40442d:	mov    eax,0x95f97429
  404432:	cli    
  404433:	enter  0x382e,0x7c
  404437:	je     0x40448d
  404439:	pop    es
  40443a:	popa   
  40443b:	(bad)  
  40443c:	stos   DWORD PTR es:[edi],eax
  40443d:	and    eax,0xacbea360
  404442:	mov    cl,0xef
  404444:	stos   BYTE PTR es:[edi],al
  404445:	sub    BYTE PTR [ebp-0x51],dl
  404448:	into   
  404449:	bound  ebp,QWORD PTR [ecx]
  40444b:	jnp    0x4043ec
  40444d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40444e:	fild   DWORD PTR [esp+ebx*8]
  404451:	fwait
  404452:	stos   DWORD PTR es:[edi],eax
  404453:	aaa    
  404454:	imul   ebp,DWORD PTR [ecx-0x5ba56e2c],0x17
  40445b:	retf   0x5568
  40445e:	gs xchg ecx,eax
  404460:	mov    esp,0x9d7f9d5
  404465:	inc    edi
  404466:	mov    ecx,0x41fc860e
  40446b:	mov    al,ch
  40446d:	daa    
  40446e:	sbb    esi,DWORD PTR [esi+0x42]
  404471:	ret    
  404472:	lahf   
  404473:	pop    esi
  404474:	adc    al,0xef
  404476:	mov    eax,0xeb4de732
  40447b:	lock pushf 
  40447d:	jb     0x404463
  40447f:	loop   0x4044e6
  404481:	adc    eax,0xfed9fdee
  404486:	pop    esi
  404487:	ret    0x48a8
  40448a:	pop    ebx
  40448b:	inc    ebx
  40448c:	das    
  40448d:	adc    BYTE PTR [edx+0x5],bl
  404490:	mov    eax,ds:0x2363f453
  404495:	inc    BYTE PTR [edx+0x2c]
  404498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404499:	pop    ebp
  40449a:	mov    ebp,0x739607f6
  40449f:	mov    WORD PTR [eax-0x10],fs
  4044a2:	fild   QWORD PTR [edx]
  4044a4:	mov    eax,0xa23b36d4
  4044a9:	sub    eax,0x440d0ee4
  4044ae:	repnz xor ah,al
  4044b1:	in     al,0xbf
  4044b3:	dec    ecx
  4044b4:	idiv   DWORD PTR [ecx+0x6e]
  4044b7:	pop    edx
  4044b8:	push   es
  4044b9:	xchg   ebp,eax
  4044ba:	mov    cl,0xf6
  4044bc:	inc    ebp
  4044bd:	shr    bl,0x5
  4044c0:	mov    es,WORD PTR [ebx-0x3f]
  4044c3:	es adc eax,0xdff3db27
  4044c9:	and    BYTE PTR [ebp-0x5982a706],dh
  4044cf:	outs   dx,DWORD PTR ds:[esi]
  4044d0:	cmp    al,0x19
  4044d2:	daa    
  4044d3:	sub    al,0x4a
  4044d5:	lahf   
  4044d6:	out    dx,eax
  4044d7:	push   0x4
  4044d9:	out    dx,al
  4044da:	push   0xffffffe2
  4044dc:	add    esi,edi
  4044de:	mov    edx,0x476aa4ec
  4044e3:	adc    cl,0x86
  4044e6:	pop    edx
  4044e7:	(bad)  
  4044e8:	ret    
  4044e9:	pop    ds
  4044ea:	mov    dh,BYTE PTR [ecx-0x1b81a864]
  4044f0:	sbb    ebp,DWORD PTR [eax+0x51]
  4044f3:	jl     0x4044d4
  4044f5:	fld    st(4)
  4044f7:	inc    esi
  4044f8:	loop   0x404573
  4044fa:	cdq    
  4044fb:	arpl   WORD PTR [ebx],dx
  4044fd:	xchg   edi,eax
  4044fe:	adc    al,0x59
  404500:	mov    bl,0xef
  404502:	jl     0x40452f
  404504:	aas    
  404505:	jo     0x4044cf
  404507:	inc    esp
  404508:	mov    cl,0xe7
  40450a:	aam    0xe
  40450c:	fstp   DWORD PTR [ecx-0x63]
  40450f:	mov    ds,WORD PTR [edi]
  404511:	sub    edx,DWORD PTR [ebx]
  404513:	xchg   ebp,eax
  404514:	pusha  
  404515:	jns    0x40456c
  404517:	xchg   esi,eax
  404518:	cs clc 
  40451a:	test   eax,0x44f62b57
  40451f:	pusha  
  404520:	clc    
  404521:	sbb    DWORD PTR [ecx+0x4079269f],edi
  404527:	fld    TBYTE PTR [ebp-0x734d9cb5]
  40452d:	(bad)  [esi+0x24]
  404530:	bound  esp,QWORD PTR [edi-0x3]
  404533:	cmc    
  404534:	mov    WORD PTR ds:0x9e0be571,?
  40453a:	push   edx
  40453b:	and    eax,0x50e3e700
  404540:	mov    ds:0x239b73ed,al
  404545:	jecxz  0x4045bd
  404547:	xchg   BYTE PTR [ecx-0x2ac9510e],dh
  40454d:	clc    
  40454e:	in     al,dx
  40454f:	push   es
  404550:	test   BYTE PTR [edx+ebp*1-0x72],0xb2
  404555:	ja     0x4045bf
  404557:	adc    al,0x62
  404559:	ret    0x2283
  40455c:	addr16 pop ebx
  40455e:	stc    
  40455f:	jbe    0x404538
  404561:	cmp    ebp,ebx
  404563:	call   DWORD PTR [edi-0x5c93f200]
  404569:	inc    ecx
  40456a:	nop
  40456b:	fisttp WORD PTR [edi]
  40456d:	pop    edx
  40456e:	cs push esp
  404570:	mov    eax,ds:0xb2b545ac
  404575:	pop    ebx
  404576:	fadd   QWORD PTR [ebp-0x53]
  404579:	and    eax,0x9cec1dc1
  40457e:	call   0xe2ff8c6c
  404583:	inc    esp
  404584:	mov    ecx,0xda12b68e
  404589:	cwde   
  40458a:	adc    BYTE PTR [esi-0xf36dadf],dl
  404590:	and    al,0x1a
  404592:	sbb    BYTE PTR [ecx-0x8],dh
  404595:	push   ebp
  404596:	sbb    BYTE PTR [ebx-0x35],0xab
  40459a:	dec    ebx
  40459b:	xor    edx,DWORD PTR [ebx+0x3bd7d1e8]
  4045a1:	xlat   BYTE PTR ds:[ebx]
  4045a2:	mov    ds,WORD PTR [eax-0x42]
  4045a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045a6:	jb     0x404598
  4045a8:	mov    ?,WORD PTR [eax]
  4045aa:	(bad)  
  4045ab:	mov    ds,WORD PTR [eax+esi*4-0x618141b8]
  4045b2:	or     al,0xcb
  4045b4:	dec    edx
  4045b5:	ret    
  4045b6:	fcomi  st,st(0)
  4045b8:	add    al,0x91
  4045ba:	lock ret 0x46a4
  4045be:	dec    eax
  4045bf:	cmp    edi,DWORD PTR [ebx+0x3a]
  4045c2:	mov    ebx,0x1d8a22f
  4045c7:	leave  
  4045c8:	stc    
  4045c9:	dec    ebp
  4045ca:	xchg   ebx,eax
  4045cb:	mov    BYTE PTR [edx+0x36],dh
  4045ce:	jns    0x4045bb
  4045d0:	cmp    al,0xb2
  4045d2:	xchg   esi,eax
  4045d3:	cli    
  4045d4:	cmp    eax,ebx
  4045d6:	mov    BYTE PTR [edx-0x7d],0xe7
  4045da:	mov    ah,0x97
  4045dc:	mov    ebp,0xd43eede
  4045e1:	push   ss
  4045e2:	js     0x4045e2
  4045e4:	push   cs
  4045e5:	push   esi
  4045e6:	jb     0x404658
  4045e8:	(bad)
  4045eb:	push   ecx
  4045ec:	and    edx,DWORD PTR [eax+0xb]
  4045ef:	push   ebp
  4045f0:	fistp  DWORD PTR [ebx+0x6f]
  4045f3:	popf   
  4045f4:	inc    eax
  4045f5:	pop    edx
  4045f6:	retf   0x7b87
  4045f9:	cdq    
  4045fa:	xchg   ebx,eax
  4045fb:	push   es
  4045fc:	std    
  4045fd:	hlt    
  4045fe:	(bad)
  404602:	jle    0x4045f7
  404604:	add    ebx,ecx
  404606:	mov    ds:0x190451ca,al
  40460b:	cdq    
  40460c:	mov    WORD PTR [edi],fs
  40460e:	sub    al,0x7e
  404610:	out    0xf6,al
  404612:	cmp    ebp,DWORD PTR [eax+0x36542826]
  404618:	mov    ch,0x4a
  40461a:	inc    ebx
  40461b:	loop   0x4045a9
  40461d:	or     eax,0xdc19c04e
  404622:	inc    esi
  404623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404624:	out    0x8a,eax
  404626:	pop    eax
  404627:	pop    edi
  404628:	xor    ebx,ebp
  40462a:	(bad)  
  40462b:	adc    DWORD PTR [edi],ebp
  40462d:	pop    edx
  40462e:	fld    DWORD PTR [eax+0x5]
  404631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404632:	xchg   BYTE PTR fs:[esp+ebx*4-0x3fdd27bc],ah
  40463a:	jp     0x4045c6
  40463c:	lock (bad) 
  40463e:	aad    0xa1
  404640:	test   eax,0x4fa1a7b5
  404645:	nop
  404646:	push   es
  404647:	push   esp
  404648:	mov    DWORD PTR [ebx],edx
  40464a:	add    eax,0x335d7c06
  40464f:	mov    ds:0xbd9b9c64,al
  404654:	xchg   ebp,eax
  404655:	fdivr  DWORD PTR [ebp-0x16]
  404658:	xor    esp,DWORD PTR [esi+0x5928df96]
  40465e:	stos   DWORD PTR es:[edi],eax
  40465f:	rcr    DWORD PTR [edi-0x14],0x79
  404663:	pusha  
  404664:	fs xchg esi,eax
  404666:	out    dx,al
  404667:	mov    esp,0xf714957f
  40466c:	cmp    eax,DWORD PTR [ebx]
  40466e:	ins    DWORD PTR es:[edi],dx
  40466f:	or     eax,0x1e3362fd
  404674:	jno    0x404658
  404676:	dec    edi
  404677:	cwde   
  404678:	adc    DWORD PTR [ebp+0x776a0505],eax
  40467e:	(bad)  
  40467f:	pop    eax
  404680:	xor    BYTE PTR [ebx+0x9],bh
  404683:	es ret 0xed98
  404687:	xor    eax,0x8175a906
  40468c:	adc    ch,ah
  40468e:	or     edx,DWORD PTR [esi]
  404690:	and    DWORD PTR [edx+0x644de06a],ebp
  404696:	xchg   edx,eax
  404697:	adc    DWORD PTR [edi],esi
  404699:	push   ds
  40469a:	(bad)  [edx+0x10]
  40469d:	sub    esp,DWORD PTR [ebx-0x3c]
  4046a0:	lods   al,BYTE PTR ds:[esi]
  4046a1:	pop    ds
  4046a2:	ja     0x40469e
  4046a4:	sub    al,0x85
  4046a6:	out    dx,eax
  4046a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a8:	xchg   ebx,ecx
  4046aa:	(bad)  
  4046ab:	nop
  4046ac:	xchg   esp,eax
  4046ad:	push   0x40
  4046af:	adc    bl,BYTE PTR [ebx+0x3e]
  4046b2:	add    ecx,esp
  4046b4:	jge    0x4046ae
  4046b6:	nop
  4046b7:	mov    dh,0xba
  4046b9:	push   cs
  4046ba:	push   0xfffffff7
  4046bc:	(bad)
  4046bf:	mov    gs,WORD PTR [ebp+0x3b]
  4046c2:	outs   dx,DWORD PTR ds:[esi]
  4046c3:	lahf   
  4046c4:	call   0x5ce0:0x1a3d0ce4
  4046cb:	pop    ecx
  4046cc:	aas    
  4046cd:	gs dec ebx
  4046cf:	mov    bl,BYTE PTR [ecx]
  4046d1:	add    DWORD PTR ds:0x99b7b24a,esp
  4046d7:	mov    WORD PTR [eax+edx*4],ds
  4046da:	sub    BYTE PTR [eax+ecx*8-0x45],ah
  4046de:	sti    
  4046df:	addr16 xor dx,dx
  4046e3:	iret   
  4046e4:	in     al,0xd8
  4046e6:	(bad)  
  4046e7:	adc    al,0xa0
  4046e9:	aad    0x51
  4046eb:	xor    BYTE PTR [eax-0x7f54039f],al
  4046f1:	xor    al,0xd3
  4046f3:	mov    edi,0x7fae4245
  4046f8:	xchg   esp,eax
  4046f9:	mov    ds:0x2e2f5cce,eax
  4046fe:	pusha  
  4046ff:	loop   0x4046a8
  404701:	jg     0x4046a2
  404703:	push   ebx
  404704:	sbb    al,BYTE PTR ds:0x5751963e
  40470a:	jmp    0x97673a2b
  40470f:	popf   
  404710:	sbb    eax,0xa0dd5de
  404715:	out    dx,al
  404716:	mov    ah,0x43
  404718:	pop    edi
  404719:	mov    ds:0xa4c5ea8c,eax
  40471e:	cmp    DWORD PTR [ecx-0xc],esp
  404721:	jmp    0x404733
  404723:	dec    esp
  404724:	test   al,0xfc
  404726:	mov    ch,0xba
  404728:	call   0xed6f6353
  40472d:	fist   WORD PTR [edi-0x6f515c06]
  404733:	cli    
  404734:	mov    edi,0x5413adda
  404739:	arpl   WORD PTR [eax],ax
  40473b:	push   edi
  40473c:	mov    al,0xab
  40473e:	push   ebx
  40473f:	repz sub eax,0x5ef13fe7
  404745:	ret    
  404746:	outs   dx,DWORD PTR ds:[esi]
  404747:	call   0xecc1dee9
  40474c:	add    dl,ch
  40474e:	shl    DWORD PTR [ebx+0x26cbb03c],1
  404754:	ins    DWORD PTR es:[edi],dx
  404755:	mov    ecx,0xba5baa4e
  40475a:	cdq    
  40475b:	cwde   
  40475c:	mov    dh,0x8
  40475e:	add    al,0xa8
  404760:	call   0xe61a8f50
  404765:	loope  0x40478f
  404767:	and    eax,0xc20e8df1
  40476c:	inc    edx
  40476d:	popa   
  40476e:	mov    bh,0xa4
  404770:	fs xor ch,BYTE PTR gs:[esi-0x28]
  404775:	mov    ds:0xb3214769,al
  40477a:	dec    esp
  40477b:	mov    edx,0x73555129
  404780:	mov    bh,0xf0
  404782:	outs   dx,DWORD PTR ds:[esi]
  404783:	adc    BYTE PTR [esi+edx*1+0x15],ch
  404787:	jmp    0x4047f5
  404789:	xchg   ebx,eax
  40478a:	adc    edx,DWORD PTR [edx]
  40478c:	mov    ebx,0x56dcb7f0
  404791:	or     cl,ah
  404793:	pop    esi
  404794:	int    0xf5
  404796:	pop    ss
  404797:	fsubr  QWORD PTR cs:[ecx-0x48c4fd42]
  40479e:	pop    edi
  40479f:	out    dx,eax
  4047a0:	pop    ss
  4047a1:	in     al,0xca
  4047a3:	adc    ebx,DWORD PTR [edi+0x2e9e7472]
  4047a9:	xchg   esi,eax
  4047aa:	and    bh,BYTE PTR [ecx+ebx*2-0x73]
  4047ae:	mov    dh,0x45
  4047b0:	jae    0x404786
  4047b2:	bound  ecx,QWORD PTR ds:0x2c7c7d88
  4047b8:	stos   DWORD PTR es:[edi],eax
  4047b9:	inc    ebp
  4047ba:	int3   
  4047bb:	push   edx
  4047bc:	mov    al,0xb5
  4047be:	stc    
  4047bf:	pop    es
  4047c0:	jae    0x40483b
  4047c2:	shl    dl,0xc1
  4047c5:	(bad)  
  4047c6:	arpl   WORD PTR [edi+0x6530afa0],bp
  4047cc:	mov    BYTE PTR [edi-0x44],ah
  4047cf:	clc    
  4047d0:	pop    ss
  4047d1:	sub    eax,0xf6c64649
  4047d6:	ins    DWORD PTR es:[edi],dx
  4047d7:	in     al,dx
  4047d8:	dec    esi
  4047d9:	fwait
  4047da:	xor    ecx,esp
  4047dc:	test   eax,0x9ea830d
  4047e1:	xchg   BYTE PTR [ebp+0x15],al
  4047e4:	leave  
  4047e5:	cmp    al,0x31
  4047e7:	stos   DWORD PTR es:[edi],eax
  4047e8:	sub    eax,DWORD PTR [ebp-0x5b669534]
  4047ee:	call   FWORD PTR [esi-0x22]
  4047f1:	mov    ch,0x48
  4047f3:	sbb    eax,0x47848e8d
  4047f8:	shr    DWORD PTR [edi+0x6],1
  4047fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047fc:	mov    ds:0xc267f3a6,eax
  404801:	push   ecx
  404802:	add    DWORD PTR [ecx-0xb],edx
  404805:	addr16 jmp 0x2b90:0x211b4579
  40480d:	xor    eax,0x4a799043
  404812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404814:	(bad)  
  404815:	das    
  404816:	push   ecx
  404817:	adc    eax,0x615e9eb9
  40481c:	popf   
  40481d:	sbb    al,0x2e
  40481f:	nop
  404820:	dec    edx
  404821:	xchg   edx,eax
  404822:	push   0x23
  404824:	imul   esp,DWORD PTR gs:[eax+0x4589d6],0x47
  40482c:	scas   al,BYTE PTR es:[edi]
  40482d:	jns    0x40481e
  40482f:	sbb    BYTE PTR [ecx-0x6],al
  404832:	sti    
  404833:	nop
  404834:	fisub  WORD PTR [edi]
  404836:	imul   ebx,DWORD PTR [ebx],0x46
  404839:	aad    0xc5
  40483b:	mov    ch,0xf0
  40483d:	or     esp,edi
  40483f:	enter  0x1bdf,0x3a
  404843:	adc    BYTE PTR [edx-0x3739ea65],0x4c
  40484a:	je     0x4047fd
  40484c:	dec    ebx
  40484d:	loope  0x4048bf
  40484f:	mov    ch,0xa0
  404851:	push   es
  404852:	and    al,0x41
  404854:	js     0x4047fe
  404856:	pushf  
  404857:	adc    DWORD PTR gs:[eax+0x49bd9289],0xffffffcb
  40485f:	(bad)  
  404860:	imul   ebx,DWORD PTR [esi],0x3a
  404863:	js     0x404854
  404865:	jecxz  0x404856
  404867:	dec    ebx
  404868:	enter  0xbea7,0x3f
  40486c:	call   0xf4b7e673
  404871:	cmp    edi,DWORD PTR [ebx+0x5]
  404874:	cli    
  404875:	or     al,0x65
  404877:	xchg   DWORD PTR [edx-0x36],esp
  40487a:	xchg   esp,eax
  40487b:	jb     0x40489d
  40487d:	mov    BYTE PTR [ebp+0x28],al
  404880:	pop    ebx
  404881:	xchg   ebp,eax
  404882:	stos   BYTE PTR es:[edi],al
  404883:	leave  
  404884:	adc    al,0xf1
  404886:	fild   QWORD PTR [bx+si-0x43]
  40488a:	stos   BYTE PTR es:[edi],al
  40488b:	call   0xb1ca:0xedf84cdd
  404892:	ja     0x4048f6
  404894:	sub    BYTE PTR [ecx+edi*2-0x64edd7c0],ah
  40489b:	fsubr  st,st(6)
  40489d:	and    eax,DWORD PTR [edx]
  40489f:	mov    ds:0x981e2cb,al
  4048a4:	jb     0x4048be
  4048a6:	fdiv   DWORD PTR [ecx]
  4048a8:	aad    0x5a
  4048aa:	cs pop edx
  4048ac:	mov    eax,edx
  4048ae:	mov    esi,DWORD PTR [eax-0x2]
  4048b1:	cmp    eax,DWORD PTR [ecx-0x75a6202b]
  4048b7:	jecxz  0x404907
  4048b9:	pop    ds
  4048ba:	iret   
  4048bb:	inc    eax
  4048bc:	pop    ebp
  4048bd:	push   esp
  4048be:	mov    dl,0x49
  4048c0:	jge    0x4048b0
  4048c2:	int3   
  4048c3:	cmp    ah,BYTE PTR [ebp+0x12c52bb7]
  4048c9:	mov    edx,0xa5c419ee
  4048ce:	into   
  4048cf:	outs   dx,DWORD PTR ds:[esi]
  4048d0:	xor    ch,BYTE PTR [ebp-0x43cbab5b]
  4048d6:	(bad)  
  4048d7:	cdq    
  4048d8:	or     esi,DWORD PTR [ecx+edx*1+0x68e7c09b]
  4048df:	pop    edx
  4048e0:	add    ebp,DWORD PTR [edx-0x4382afa7]
  4048e6:	lds    edi,FWORD PTR [eax]
  4048e8:	rcr    BYTE PTR [eax+0x44],cl
  4048eb:	test   al,0x2e
  4048ed:	jmp    0x4c4:0x6aea9af2
  4048f4:	sbb    dh,BYTE PTR [edx-0x1851d9d7]
  4048fa:	and    eax,0xfde37a46
  4048ff:	lea    edi,[esi-0x735e340b]
  404905:	pop    esi
  404906:	int3   
  404907:	xchg   esp,eax
  404908:	push   ss
  404909:	add    edi,ebx
  40490b:	cli    
  40490c:	inc    edi
  40490d:	sbb    DWORD PTR [ecx+0x47],ebx
  404910:	icebp  
  404911:	mov    ebx,0xf5743ee5
  404916:	es inc edx
  404918:	mov    esi,fs
  40491a:	or     ah,bh
  40491c:	xchg   ebp,eax
  40491d:	mov    edi,0x7e468f2b
  404922:	mov    al,bl
  404924:	push   edx
  404925:	lea    ebx,[ebp-0x13]
  404928:	inc    edx
  404929:	jo     0x404923
  40492b:	push   ebp
  40492c:	mov    ebx,0xf597d9ab
  404931:	or     edi,DWORD PTR [edi]
  404933:	mov    dl,0xe
  404935:	xchg   ebp,eax
  404936:	jne    0x404934
  404938:	or     eax,0x20a46330
  40493d:	sbb    ah,BYTE PTR [ebp+0x9bb3965]
  404943:	shl    DWORD PTR [ecx-0xc9954d],1
  404949:	clc    
  40494a:	ret    0x33f9
  40494d:	and    eax,0x9b8f8dba
  404952:	mov    esi,0xe81e67b4
  404957:	je     0x4048dd
  404959:	aam    0x5a
  40495b:	sbb    DWORD PTR [ebp+0x76],edi
  40495e:	imul   ecx,DWORD PTR [esp+eiz*4],0x9feaf268
  404965:	jmp    0x40492f
  404967:	add    eax,0xe574c479
  40496c:	inc    edx
  40496d:	and    DWORD PTR [ebx+0x14],edi
  404970:	sbb    al,0xc2
  404972:	popa   
  404973:	ins    DWORD PTR es:[edi],dx
  404974:	mov    ds:0x5e83a197,al
  404979:	sbb    BYTE PTR [edx+eax*1],cl
  40497c:	in     eax,dx
  40497d:	pushf  
  40497e:	fmulp  st(5),st
  404980:	ins    DWORD PTR es:[edi],dx
  404981:	frstor [ebx]
  404983:	mov    ebx,0x6bffe47
  404988:	mov    WORD PTR [ebp+0x732e33fb],ss
  40498e:	mov    edi,0xaeeb4565
  404993:	cmp    al,0x4f
  404995:	in     eax,dx
  404996:	lock inc eax
  404998:	xor    bl,BYTE PTR [edx+edx*4-0x361c97c3]
  40499f:	pop    edi
  4049a0:	repnz mov dh,0xa3
  4049a3:	xchg   edx,eax
  4049a4:	push   ss
  4049a5:	inc    ebx
  4049a6:	dec    ebp
  4049a7:	inc    esi
  4049a8:	out    dx,al
  4049a9:	fisttp QWORD PTR [esi]
  4049ab:	cmp    esi,DWORD PTR [edi]
  4049ad:	push   edi
  4049ae:	mov    al,0xda
  4049b0:	imul   edi,DWORD PTR ds:0xd7429025,0xa953cf72
  4049ba:	jmp    0xcb6a8592
  4049bf:	mov    esi,0xce8634b4
  4049c4:	ds jo  0x404a11
  4049c7:	inc    edi
  4049c8:	adc    DWORD PTR [edi],0xa3d28e04
  4049ce:	or     BYTE PTR [ecx],0x2d
  4049d1:	adc    cl,BYTE PTR [ecx-0x4d]
  4049d4:	sub    eax,0xd85dcbd9
  4049d9:	xchg   ebx,eax
  4049da:	loopne 0x404a58
  4049dc:	fcom   st(6)
  4049de:	int3   
  4049df:	inc    edi
  4049e0:	mov    bl,0xe6
  4049e2:	test   eax,0x1b91c091
  4049e7:	inc    eax
  4049e8:	jmp    0x40498a
  4049ea:	call   0xeb3304aa
  4049ef:	or     bh,dh
  4049f1:	mov    ds:0xf0d24bd6,eax
  4049f6:	adc    eax,0xebc8760
  4049fb:	imul   ebp,DWORD PTR [ecx+eiz*1],0xc7d8bed
  404a02:	div    esi
  404a04:	test   al,0x16
  404a06:	or     ah,BYTE PTR [esi-0x7071da15]
  404a0c:	in     eax,0x8b
  404a0e:	inc    esi
  404a0f:	popf   
  404a10:	xor    DWORD PTR [ebx+0x2d],0xbac66085
  404a17:	mov    cl,0x27
  404a19:	push   0xc69c015f
  404a1e:	jb     0x404a17
  404a20:	test   BYTE PTR [edi],0xb6
  404a23:	adc    edi,DWORD PTR [edi+0x4b]
  404a26:	dec    ecx
  404a27:	lock jle 0x404a01
  404a2a:	adc    DWORD PTR [ecx+eiz*1],edi
  404a2d:	cdq    
  404a2e:	mov    eax,ds:0xd8946835
  404a33:	jmp    0xb787:0xedd99b70
  404a3a:	push   edi
  404a3b:	out    0x10,eax
  404a3d:	lds    ebp,FWORD PTR [edx+edi*2+0x42925833]
  404a44:	xor    BYTE PTR [ecx-0x13d4fbb2],cl
  404a4a:	fild   QWORD PTR ss:[edi]
  404a4d:	dec    ebx
  404a4e:	dec    cl
  404a50:	bound  edi,QWORD PTR ds:0x129597a9
  404a56:	in     al,0xce
  404a58:	outs   dx,DWORD PTR ds:[esi]
  404a59:	or     al,0xe9
  404a5b:	mov    bl,0x5e
  404a5d:	popf   
  404a5e:	fidivr DWORD PTR [esi]
  404a60:	jg     0x404a13
  404a62:	test   al,0x90
  404a64:	out    0x61,eax
  404a66:	inc    esi
  404a67:	push   ebx
  404a68:	aaa    
  404a69:	ror    DWORD PTR [ebp-0x3c29e36d],1
  404a6f:	adc    DWORD PTR [ebp-0x44296a8e],0xffffffd9
  404a76:	pop    ss
  404a77:	add    BYTE PTR [esi-0xf],cl
  404a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a7b:	jge    0x404a94
  404a7d:	loope  0x404a72
  404a7f:	add    al,0x76
  404a81:	pop    esi
  404a82:	(bad)
  404a85:	pop    edx
  404a86:	out    0x85,al
  404a88:	dec    esi
  404a89:	or     ah,BYTE PTR [edi]
  404a8b:	or     ecx,DWORD PTR [ebp+esi*1+0x33a5c8de]
  404a92:	not    edi
  404a94:	push   edi
  404a95:	sbb    bh,BYTE PTR [ebp-0x1a8543f0]
  404a9b:	cmp    BYTE PTR [ebx],dl
  404a9d:	pusha  
  404a9e:	pop    eax
  404a9f:	aas    
  404aa0:	pop    esp
  404aa1:	jnp    0x404af5
  404aa3:	sub    al,0x83
  404aa5:	lods   al,BYTE PTR ds:[esi]
  404aa6:	sti    
  404aa7:	icebp  
  404aa8:	adc    eax,0xd3c5c8f9
  404aad:	loop   0x404a49
  404aaf:	aad    0x8e
  404ab1:	inc    ecx
  404ab2:	lahf   
  404ab3:	sub    bh,dl
  404ab5:	jb     0x404a4c
  404ab7:	in     al,dx
  404ab8:	cli    
  404ab9:	enter  0xafff,0x60
  404abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404abe:	sahf   
  404abf:	leave  
  404ac0:	ret    0x4036
  404ac3:	div    bh
  404ac5:	pushf  
  404ac6:	push   cs
  404ac7:	inc    edx
  404ac8:	arpl   cx,sp
  404aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404acb:	pusha  
  404acc:	inc    esi
  404acd:	mov    ds:0xb92d4388,eax
  404ad2:	push   edi
  404ad3:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ad6:	ret    
  404ad7:	aad    0xd6
  404ad9:	pop    edi
  404ada:	call   0x5648bcb1
  404adf:	pop    ds
  404ae0:	jmp    0x404ace
  404ae2:	and    al,0x5e
  404ae4:	std    
  404ae5:	stos   DWORD PTR es:[edi],eax
  404ae6:	ja     0x404b53
  404ae8:	mov    ?,edi
  404aea:	out    0x9e,eax
  404aec:	add    eax,0x7a1b6f3c
  404af1:	push   ebp
  404af2:	and    cl,BYTE PTR [ecx]
  404af4:	and    edi,DWORD PTR [esi]
  404af6:	(bad)  
  404af7:	sbb    DWORD PTR [eax+0x6305d130],edi
  404afd:	call   FWORD PTR [esi-0x12]
  404b00:	inc    esp
  404b01:	mov    cl,0xd
  404b03:	inc    BYTE PTR [esi+0x2a]
  404b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b07:	test   esp,esp
  404b09:	mov    esi,0xaa6c90df
  404b0e:	dec    esp
  404b0f:	xchg   esp,eax
  404b10:	inc    esi
  404b11:	push   esp
  404b12:	sub    eax,0x9f4cae4b
  404b17:	xor    BYTE PTR [ebx-0x2044a284],0xaf
  404b1e:	mov    BYTE PTR [ecx],al
  404b20:	xchg   ebp,eax
  404b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b22:	lds    ecx,FWORD PTR [ecx+0x25ee6cce]
  404b28:	and    BYTE PTR [ebx],cl
  404b2a:	jmp    FWORD PTR [ecx-0x49]
  404b2d:	scas   eax,DWORD PTR es:[edi]
  404b2e:	pop    es
  404b2f:	or     eax,0x3d129d08
  404b34:	rcr    DWORD PTR [edx],1
  404b36:	jne    0x404ad6
  404b38:	fld    TBYTE PTR [ebx+0x77966ce]
  404b3e:	push   0xffffffa1
  404b40:	mov    bh,BYTE PTR [ecx-0x37a06f9e]
  404b46:	mov    al,0xf6
  404b48:	inc    esi
  404b49:	pop    esi
  404b4a:	sbb    ecx,esi
  404b4c:	or     DWORD PTR [esp+edx*8],0x52
  404b50:	sub    edx,DWORD PTR [edi+0x73]
  404b53:	cmp    dl,BYTE PTR [esi+0x5a]
  404b56:	xchg   ebx,eax
  404b57:	stos   BYTE PTR es:[edi],al
  404b58:	push   esp
  404b59:	out    dx,al
  404b5a:	pop    es
  404b5b:	xor    DWORD PTR [eax],eax
  404b5d:	xchg   ecx,eax
  404b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b5f:	gs jg  0x404aee
  404b62:	cmp    BYTE PTR [eax+ebx*4-0x59ff51a8],bl
  404b69:	adc    eax,0x52039752
  404b6e:	dec    ebp
  404b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b70:	in     eax,dx
  404b71:	mov    esp,0x5f030613
  404b76:	adc    al,0x99
  404b78:	pop    edi
  404b79:	aas    
  404b7a:	and    eax,0x6680b07f
  404b7f:	adc    eax,0x6b5620e8
  404b84:	loope  0x404b90
  404b86:	mov    bl,BYTE PTR [esi-0x5a47d9d7]
  404b8c:	pop    ebx
  404b8d:	aaa    
  404b8e:	push   ebx
  404b8f:	xor    eax,0x18cfd2c6
  404b94:	mov    fs,esp
  404b96:	int3   
  404b97:	loop   0x404ba5
  404b99:	inc    esp
  404b9a:	sar    BYTE PTR [edi-0x11],cl
  404b9d:	popf   
  404b9e:	mov    bh,0x6b
  404ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ba1:	xchg   ecx,eax
  404ba2:	mov    BYTE PTR [edi],dl
  404ba4:	mov    dl,BYTE PTR [ebp+0x666d834]
  404baa:	or     eax,0x933745b6
  404baf:	jne    0x404c01
  404bb1:	jae    0x404bf8
  404bb3:	xchg   edx,eax
  404bb4:	cmp    BYTE PTR [eax],ch
  404bb6:	dec    ecx
  404bb7:	fsub   QWORD PTR [eax+0x1b6a0d82]
  404bbd:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  404bbf:	fucomip st,st(0)
  404bc1:	cmp    dh,al
  404bc3:	or     eax,0x57e81347
  404bc8:	push   edx
  404bc9:	and    ch,al
  404bcb:	lods   eax,DWORD PTR ds:[esi]
  404bcc:	loopne 0x404b8b
  404bce:	jb     0x404c42
  404bd0:	and    BYTE PTR [eax],al
  404bd2:	sub    ecx,DWORD PTR [edx]
  404bd4:	xor    eax,0x7145ee15
  404bd9:	mov    esi,0x4684500b
  404bde:	pop    esi
  404bdf:	push   cs
  404be0:	dec    esp
  404be1:	cmp    BYTE PTR ds:0x8b627dc9,bl
  404be7:	cmp    edi,DWORD PTR [ebx-0x3b]
  404bea:	test   DWORD PTR [eax],eax
  404bec:	add    eax,0x144fab9f
  404bf1:	cld    
  404bf2:	adc    cl,BYTE PTR [esi+ebx*1+0x7]
  404bf6:	xchg   ebp,eax
  404bf7:	dec    esi
  404bf8:	dec    ebx
  404bf9:	xor    BYTE PTR [esi-0x74cd48df],dl
  404bff:	xchg   ebx,eax
  404c00:	daa    
  404c01:	mov    eax,ds:0x3dce7a12
  404c06:	mov    ch,0xce
  404c08:	cmc    
  404c09:	sub    ecx,DWORD PTR [eax]
  404c0b:	mov    DWORD PTR [esi-0xbdad51f],0xd04ae8a5
  404c15:	adc    eax,0x84c98ece
  404c1a:	add    eax,0xa9a3789e
  404c1f:	xchg   esp,eax
  404c20:	xchg   esp,eax
  404c21:	xor    DWORD PTR [eax+0x21e15919],esi
  404c27:	add    ecx,DWORD PTR [ebp-0x77d75ed7]
  404c2d:	dec    ecx
  404c2e:	repz mov WORD PTR [ebx-0x4a],cs
  404c32:	jns    0x404ca7
  404c34:	push   ss
  404c35:	sbb    al,BYTE PTR [esp+eax*1-0x78]
  404c39:	not    BYTE PTR [eax+0x6e2db2bb]
  404c3f:	in     eax,0xc0
  404c41:	xchg   esi,eax
  404c42:	into   
  404c43:	mov    ebx,0xed413338
  404c48:	dec    edx
  404c49:	dec    edx
  404c4a:	mov    esi,0x7d226e9b
  404c4f:	push   0x9b9d74d5
  404c54:	cmp    eax,0x5af2bdfb
  404c59:	shl    BYTE PTR [esi+0x2c7e8ad1],1
  404c5f:	pop    es
  404c60:	mov    ah,0xe9
  404c62:	mov    cl,0x7e
  404c64:	outs   dx,DWORD PTR ds:[esi]
  404c65:	mov    ah,0xff
  404c67:	in     al,0x85
  404c69:	dec    edx
  404c6a:	or     DWORD PTR [ebp-0x70b29a0b],ebx
  404c70:	sti    
  404c71:	stos   DWORD PTR es:[edi],eax
  404c72:	aad    0x93
  404c74:	je     0x404c4e
  404c76:	loopne 0x404c5a
  404c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c7a:	or     eax,0xa08ab0da
  404c7f:	and    esp,DWORD PTR [esi+0x67]
  404c82:	xor    BYTE PTR [edi+edx*2],ch
  404c85:	and    esi,eax
  404c87:	pop    esp
  404c88:	es jge 0x404ce2
  404c8b:	popf   
  404c8c:	mov    eax,?
  404c8e:	fldcw  WORD PTR [eax+0x56]
  404c91:	jo     0x404c27
  404c93:	xchg   ebx,eax
  404c94:	push   es
  404c95:	sar    BYTE PTR [ebx+edx*1+0x75],1
  404c99:	pop    ss
  404c9a:	pop    esp
  404c9b:	ja     0x404ce6
  404c9d:	in     al,0xc
  404c9f:	lea    ecx,[ebx]
  404ca1:	int    0x1d
  404ca3:	sbb    ah,BYTE PTR [ebx]
  404ca5:	mov    dh,0xfd
  404ca7:	xor    al,0x30
  404ca9:	xchg   DWORD PTR [ebp+0x2abd8b74],eax
  404caf:	mov    cl,0xb3
  404cb1:	out    dx,al
  404cb2:	mov    DWORD PTR [edi+0x4ff76c69],edx
  404cb8:	push   es
  404cb9:	adc    eax,0x386ffb87
  404cbe:	ret    
  404cbf:	mov    ds:0xeb218cb1,al
  404cc4:	dec    ecx
  404cc5:	inc    esp
  404cc6:	out    dx,eax
  404cc7:	dec    ebx
  404cc8:	pop    ss
  404cc9:	xchg   esp,eax
  404cca:	add    cl,bl
  404ccc:	cli    
  404ccd:	jle    0x404c95
  404ccf:	cmp    dh,bh
  404cd1:	aaa    
  404cd2:	pop    eax
  404cd3:	adc    ecx,ebx
  404cd5:	jae    0x404d4b
  404cd7:	adc    BYTE PTR [eax],bl
  404cd9:	or     dl,BYTE PTR [ebx+0x12]
  404cdc:	sbb    eax,0xc3e94987
  404ce1:	(bad)  
  404ce3:	sbb    eax,0xca0f1095
  404ce8:	popf   
  404ce9:	and    eax,0x62296f6d
  404cee:	pop    edx
  404cef:	clc    
  404cf0:	mov    eax,ds:0x4b59432e
  404cf5:	in     eax,dx
  404cf6:	mov    WORD PTR gs:0xc3aa7c33,fs
  404cfd:	out    dx,al
  404cfe:	xlat   BYTE PTR fs:[ebx]
  404d00:	jo     0x404ccf
  404d02:	mov    DWORD PTR [ebx-0x36],esp
  404d05:	dec    eax
  404d06:	or     ecx,ebx
  404d08:	(bad)  
  404d09:	clc    
  404d0a:	rcl    BYTE PTR [ebp+0x65],0xa6
  404d0e:	add    BYTE PTR [esi+0x6619695b],bh
  404d14:	sbb    dl,BYTE PTR [ebx+0x33]
  404d17:	stos   BYTE PTR es:[edi],al
  404d18:	ins    BYTE PTR es:[edi],dx
  404d19:	dec    esi
  404d1a:	sti    
  404d1b:	es aas 
  404d1d:	mov    ebx,?
  404d1f:	and    BYTE PTR [esi-0x61],bl
  404d22:	iret   
  404d23:	loop   0x404cdc
  404d25:	cmp    edx,DWORD PTR [edx+0x3f]
  404d28:	cwd    
  404d2a:	xchg   ebp,eax
  404d2b:	call   0x84214d7f
  404d30:	mov    ds:0xe12cfa8f,al
  404d35:	or     al,0xf9
  404d37:	inc    edx
  404d38:	int3   
  404d39:	jecxz  0x404ce2
  404d3b:	push   eax
  404d3c:	push   ebx
  404d3d:	pop    esi
  404d3e:	(bad)  
  404d40:	fld    TBYTE PTR [ebp+esi*8-0x74]
  404d44:	lds    esi,FWORD PTR [ebp+0x6e]
  404d47:	nop
  404d48:	push   ss
  404d49:	mov    al,0x5c
  404d4b:	test   eax,0x11736fdc
  404d50:	int3   
  404d51:	int    0x0
  404d53:	sbb    eax,0x7ca8cf4e
  404d58:	mov    ebx,0xfead479a
  404d5d:	rcl    BYTE PTR [edi+0x30],cl
  404d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d61:	cmp    ch,BYTE PTR [eax-0x55]
  404d64:	rcl    DWORD PTR [esi],1
  404d66:	adc    esp,DWORD PTR [edi]
  404d68:	mov    edi,0xd9a4fb53
  404d6d:	and    ch,dl
  404d6f:	jbe    0x404def
  404d71:	mov    eax,0x1709e576
  404d76:	inc    ecx
  404d77:	dec    esi
  404d78:	iret   
  404d79:	lahf   
  404d7a:	xchg   ecx,eax
  404d7b:	push   cs
  404d7c:	add    dh,BYTE PTR [ebp-0x54]
  404d7f:	sar    BYTE PTR [edx+0x59],0x19
  404d83:	ins    BYTE PTR es:[edi],dx
  404d84:	cmp    eax,0x9b0069f9
  404d89:	lahf   
  404d8a:	outs   dx,DWORD PTR ds:[esi]
  404d8b:	lea    ebp,[ecx]
  404d8d:	lds    eax,FWORD PTR [ebx]
  404d8f:	fsincos 
  404d91:	in     eax,dx
  404d92:	lea    ebp,[ebp+0x56ca2829]
  404d98:	sub    bh,BYTE PTR [edi]
  404d9a:	ret    
  404d9b:	mov    cl,0x30
  404d9d:	outs   dx,DWORD PTR ds:[esi]
  404d9e:	(bad)  
  404d9f:	jae    0x404dc1
  404da1:	loop   0x404e0b
  404da3:	adc    BYTE PTR [edi],bh
  404da5:	xor    edi,DWORD PTR [ebp-0x396d5698]
  404dab:	cwde   
  404dac:	mov    eax,0x49523d6e
  404db1:	call   0xc405:0xf95406b2
  404db8:	pushf  
  404db9:	push   eax
  404dba:	mov    DWORD PTR [ebx-0x61],esp
  404dbd:	lods   al,BYTE PTR ds:[esi]
  404dbe:	out    dx,eax
  404dbf:	cmp    dh,bl
  404dc1:	sti    
  404dc2:	dec    ebp
  404dc3:	(bad)
  404dc6:	xchg   ebx,eax
  404dc7:	add    cl,BYTE PTR [ebx+0x37]
  404dca:	add    eax,0x670a8d92
  404dcf:	pop    ss
  404dd0:	add    bl,ah
  404dd2:	pushf  
  404dd3:	(bad)  [esi+esi*1+0x7f4117f1]
  404dda:	call   ebp
  404ddc:	add    al,0xc2
  404dde:	cs xor eax,0xb3544dc8
  404de4:	adc    DWORD PTR [ecx-0x6781f946],ebx
  404dea:	shl    esi,cl
  404dec:	cld    
  404ded:	dec    ebx
  404dee:	and    BYTE PTR [edi-0x79],dh
  404df1:	not    dh
  404df3:	jno    0x404e2a
  404df5:	mov    eax,0xb7be60b2
  404dfa:	stos   BYTE PTR es:[edi],al
  404dfb:	in     al,dx
  404dfc:	jge    0x404dc6
  404dfe:	xchg   edx,eax
  404dff:	fcomp  DWORD PTR [ebp+edx*1+0x42]
  404e03:	dec    esp
  404e04:	ret    0x57a1
  404e07:	cld    
  404e08:	jecxz  0x404e68
  404e0a:	adc    ah,BYTE PTR ds:0x5525b3b1
  404e10:	aam    0x5a
  404e12:	mov    ebx,0x608e4684
  404e17:	stos   DWORD PTR es:[edi],eax
  404e18:	inc    eax
  404e19:	sbb    ch,BYTE PTR [edi-0x3e6337bb]
  404e1f:	add    eax,0x5e6a216f
  404e24:	push   ecx
  404e25:	push   ds
  404e26:	bound  ecx,QWORD PTR [ebx]
  404e28:	push   esi
  404e29:	or     BYTE PTR [eax+0x4f],ah
  404e2c:	ins    DWORD PTR es:[edi],dx
  404e2d:	sbb    DWORD PTR [edx-0x29bbbe26],ecx
  404e33:	leave  
  404e34:	fnsave [ecx-0x9db502a]
  404e3a:	lods   eax,DWORD PTR ds:[esi]
  404e3b:	sbb    DWORD PTR [esi+0x3cd9586f],edx
  404e41:	cmp    eax,0xa8f805aa
  404e46:	jnp    0x404de0
  404e48:	pop    ebx
  404e49:	mov    ecx,0x8a7a0310
  404e4e:	jle    0x404e91
  404e50:	mov    WORD PTR [edi],gs
  404e52:	sub    esi,esp
  404e54:	add    BYTE PTR [ebx+0x77],ah
  404e57:	cmp    ch,al
  404e59:	lea    edx,[ebp+ebp*8+0x46ca76c7]
  404e60:	mov    cl,0x2d
  404e62:	ret    
  404e63:	jns    0x404e76
  404e65:	add    al,0x7b
  404e67:	or     al,0xa4
  404e69:	adc    eax,0x2381994b
  404e6e:	dec    edx
  404e6f:	mov    ds:0x307454d0,al
  404e74:	popf   
  404e75:	cmp    bl,BYTE PTR [ebx+0x6aadee8a]
  404e7b:	sbb    ch,BYTE PTR [esi+0x4b10ec6c]
  404e81:	test   DWORD PTR [eax],0xd95b78bf
  404e87:	and    BYTE PTR [ebx+ecx*2],al
  404e8a:	mov    esi,fs
  404e8c:	(bad)  [esi+0x9]
  404e8f:	fwait
  404e90:	add    eax,0x720015b0
  404e95:	leave  
  404e96:	add    DWORD PTR [eax-0x58],eax
  404e99:	sbb    ecx,ecx
  404e9b:	sbb    BYTE PTR ds:0xe9d1e1df,0xb9
  404ea2:	shr    BYTE PTR [ebx+edx*8],cl
  404ea5:	push   ebp
  404ea6:	mov    ecx,0x5bcce59b
  404eab:	ins    DWORD PTR es:[edi],dx
  404eac:	in     al,dx
  404ead:	mov    ecx,0xed3fcb08
  404eb2:	mov    ds:0x8fd49525,eax
  404eb7:	cmp    al,0xca
  404eb9:	pop    esp
  404eba:	and    cl,cl
  404ebc:	inc    esp
  404ebd:	and    edx,edi
  404ebf:	popf   
  404ec0:	mov    eax,0x9144a937
  404ec5:	mov    ds:0x43ca76fe,al
  404eca:	sahf   
  404ecb:	xchg   BYTE PTR [esi-0x5d],ah
  404ece:	gs adc bl,ch
  404ed1:	je     0x404ecc
  404ed3:	push   ecx
  404ed4:	adc    DWORD PTR [eax-0x32d2a944],ebx
  404eda:	push   es
  404edb:	sub    bl,ch
  404edd:	cdq    
  404ede:	inc    ecx
  404edf:	ins    DWORD PTR es:[edi],dx
  404ee0:	push   ebx
  404ee1:	dec    esi
  404ee2:	push   eax
  404ee3:	xchg   ebp,eax
  404ee4:	test   al,0x4d
  404ee6:	clc    
  404ee7:	js     0x404ec4
  404ee9:	lock jle 0x404f5e
  404eec:	mov    ch,0x20
  404eee:	(bad)  
  404eef:	cmp    cl,BYTE PTR [ecx+eiz*2]
  404ef2:	fstp   DWORD PTR [esi-0x7b]
  404ef5:	adc    al,ch
  404ef7:	add    BYTE PTR [ebx],0x7a
  404efa:	lea    edi,[eax+0x2294a244]
  404f00:	es and eax,0xd725dff7
  404f06:	leave  
  404f07:	jne    0x404ebb
  404f09:	cmp    eax,0xd01ada97
  404f0e:	dec    esi
  404f0f:	inc    BYTE PTR [ecx-0x2eee378e]
  404f15:	mov    esp,0x82cb937
  404f1a:	inc    esp
  404f1b:	lock adc bl,0x81
  404f1f:	jmp    0x404eb0
  404f21:	pop    esi
  404f22:	ret    
  404f23:	jns    0x404eab
  404f25:	jb     0x404f84
  404f27:	or     edi,DWORD PTR [eax-0x3a]
  404f2a:	add    al,0x72
  404f2c:	fidiv  WORD PTR [eax+0x397ec0b4]
  404f32:	rcl    DWORD PTR [esi+0x2eee5cb8],0x88
  404f39:	push   eax
  404f3a:	(bad)  
  404f3b:	cmp    eax,0x43804f07
  404f40:	in     eax,0xb9
  404f42:	or     DWORD PTR [ebp+0x50],ebp
  404f45:	pop    esp
  404f46:	xchg   ecx,eax
  404f47:	mov    fs,esp
  404f49:	pop    ecx
  404f4a:	xchg   ebx,eax
  404f4b:	or     eax,0xf26795e1
  404f50:	retf   
  404f51:	and    BYTE PTR [esi],0xb0
  404f54:	imul   esi,eax,0xffffffa8
  404f57:	xor    BYTE PTR [eax+ebp*4+0x25],bl
  404f5b:	(bad)  
  404f5c:	in     eax,0x5
  404f5e:	mov    dl,0x86
  404f60:	and    al,0x66
  404f62:	jo     0x404f9c
  404f64:	or     BYTE PTR [ecx-0x5717534b],dh
  404f6a:	ds pop eax
  404f6c:	fcomp  QWORD PTR [eax-0x77]
  404f6f:	cmp    al,ch
  404f71:	xchg   BYTE PTR [eax+eiz*8-0x60],al
  404f75:	jns    0x404fca
  404f77:	sub    al,0x70
  404f79:	mov    BYTE PTR ds:[ecx],cl
  404f7c:	mov    ebx,0x1de96ea4
  404f81:	add    esi,DWORD PTR [edx+0x30]
  404f84:	pop    ds
  404f85:	mov    ah,0xd6
  404f87:	scas   eax,DWORD PTR es:[edi]
  404f88:	cmp    al,0x7a
  404f8a:	or     ebx,edx
  404f8c:	mov    eax,0x9a45f97b
  404f91:	mov    dl,0x99
  404f93:	ja     0x404fbf
  404f95:	mov    eax,ds:0x7dbe20fd
  404f9a:	popa   
  404f9b:	sahf   
  404f9c:	div    DWORD PTR [edi-0x606a6b33]
  404fa2:	std    
  404fa3:	mov    ds:0x5438adc8,eax
  404fa8:	fnstenv [ecx-0x4467587b]
  404fae:	call   0x59dbc0e2
  404fb3:	lahf   
  404fb4:	not    BYTE PTR [ebx-0x2]
  404fb7:	add    al,0x55
  404fb9:	mov    bh,0x53
  404fbb:	mov    DWORD PTR [edx+0xce89c19],ebp
  404fc1:	stc    
  404fc2:	sub    DWORD PTR [ebp+eax*1-0x91d70b8],esp
  404fc9:	sub    BYTE PTR [ebx],dl
  404fcb:	ja     0x404fd3
  404fcd:	mov    esi,0x72dc57fb
  404fd2:	push   es
  404fd3:	cmp    eax,0xe6cfdc18
  404fd8:	call   0x99cd:0x68af3bc7
  404fdf:	addr16 lahf 
  404fe1:	scas   al,BYTE PTR es:[edi]
  404fe2:	add    eax,0x5ddb2982
  404fe7:	inc    eax
  404fe8:	ja     0x405069
  404fea:	out    0xe1,al
  404fec:	(bad)  
  404fed:	aad    0xde
  404fef:	jb     0x405068
  404ff1:	fwait
  404ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ff4:	add    ebp,edi
  404ff6:	push   ebx
  404ff7:	or     eax,0x147ff798
  404ffc:	ror    BYTE PTR [ebx+0x257782ac],0xfb
  405003:	xchg   ebx,eax
  405004:	mov    ebx,0xdb856cfc
  405009:	push   cs
  40500a:	and    al,0x5c
  40500c:	push   ebp
  40500d:	mov    BYTE PTR [esi],dh
  40500f:	mov    esp,DWORD PTR [edi]
  405011:	cmp    al,0xf6
  405013:	mov    BYTE PTR ds:0xdc0fcae3,bh
  405019:	fidiv  WORD PTR [ecx]
  40501b:	jmp    0x72279353
  405020:	cmp    ebx,edx
  405022:	push   es
  405023:	adc    al,0x3b
  405025:	dec    esp
  405026:	aam    0xd8
  405028:	nop
  405029:	das    
  40502a:	jns    0x40505d
  40502c:	xchg   esp,eax
  40502d:	lock jb 0x404fc9
  405030:	xchg   BYTE PTR [ebx],dl
  405032:	in     al,dx
  405033:	xlat   BYTE PTR ds:[ebx]
  405034:	scas   al,BYTE PTR es:[edi]
  405035:	pushf  
  405036:	imul   ecx,esi,0x1c
  405039:	call   0x2eba:0xfad321d0
  405040:	fdivr  QWORD PTR [eax]
  405042:	inc    eax
  405043:	loop   0x405014
  405045:	(bad)  
  405046:	fild   DWORD PTR [eax-0x6be34f04]
  40504c:	jp     0x405064
  40504e:	or     eax,DWORD PTR [ecx-0x689c4532]
  405054:	lods   al,BYTE PTR ds:[esi]
  405055:	pop    ecx
  405056:	sar    ebx,1
  405058:	test   ah,dh
  40505a:	nop
  40505b:	cmp    DWORD PTR [edx-0x3cb13e8e],edx
  405061:	ret    0xd1e5
  405064:	(bad)  
  405065:	data16 fucomi st,st(0)
  405068:	mov    al,BYTE PTR [eax-0x4ca126b]
  40506e:	push   esp
  40506f:	dec    esi
  405070:	(bad)  
  405071:	mov    ah,0x94
  405073:	or     al,0x7f
  405075:	or     BYTE PTR [edx-0x6d748db7],cl
  40507b:	shl    DWORD PTR [edx*2-0x9b2004c],0x2b
  405083:	mov    bh,0x95
  405085:	mov    esi,0xc976e683
  40508a:	adc    BYTE PTR [edx-0x6],al
  40508d:	outs   dx,DWORD PTR ds:[esi]
  40508e:	adc    dh,BYTE PTR [edx]
  405090:	(bad)  
  405092:	mov    ebx,0x7fc5152a
  405097:	and    al,BYTE PTR [esi+ecx*2+0x7196acdd]
  40509e:	xor    DWORD PTR es:[edi+0x1edf50b7],ecx
  4050a5:	int3   
  4050a6:	jmp    0xda85:0x200265aa
  4050ad:	push   es
  4050ae:	cmpps  xmm2,XMMWORD PTR [ecx],0x95
  4050b2:	dec    ecx
  4050b3:	add    edx,DWORD PTR [di-0x3]
  4050b7:	pop    es
  4050b8:	and    BYTE PTR [edi-0x5c26c3fb],al
  4050be:	and    DWORD PTR [ecx-0x18f952d0],esp
  4050c4:	pop    es
  4050c5:	cmp    esi,ebp
  4050c7:	adc    al,0x7f
  4050c9:	outs   dx,BYTE PTR ds:[esi]
  4050ca:	shr    BYTE PTR [edi],0xf4
  4050cd:	adc    al,0x29
  4050cf:	adc    esp,ecx
  4050d1:	pop    ebx
  4050d2:	pop    ebp
  4050d3:	xchg   esp,eax
  4050d4:	jmp    0x40511a
  4050d6:	ret    0x324f
  4050d9:	ret    0x7f6
  4050dc:	sar    BYTE PTR [eax+0x4b9880b3],0x75
  4050e3:	leave  
  4050e4:	neg    BYTE PTR [esi-0x30]
  4050e7:	add    eax,0xd162d5b1
  4050ec:	stos   BYTE PTR es:[edi],al
  4050ed:	xchg   BYTE PTR [ebp+0x13],bl
  4050f0:	jb     0x4050b3
  4050f2:	push   ss
  4050f3:	xchg   BYTE PTR [edi+0x19c0fd19],bl
  4050f9:	cmp    esp,ecx
  4050fb:	aad    0x9c
  4050fd:	pop    esi
  4050fe:	pop    ds
  4050ff:	stos   WORD PTR es:[edi],ax
  405101:	clc    
  405102:	inc    edi
  405103:	jbe    0x405146
  405105:	mov    edi,0x4b752409
  40510a:	out    dx,al
  40510b:	jo     0x4050dc
  40510d:	jp     0x405170
  40510f:	xchg   DWORD PTR [ebx+eiz*1],edx
  405112:	fisttp WORD PTR [ebp-0x61298cbc]
  405118:	int    0x5a
  40511a:	mov    ah,0x39
  40511c:	test   eax,0xaf28948
  405121:	push   0x1d
  405123:	fnstenvw ds:0x3ea07a1a
  40512a:	aas    
  40512b:	test   al,0xdf
  40512d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40512e:	popa   
  40512f:	pop    esp
  405130:	xor    al,0x8b
  405132:	xchg   ebx,eax
  405133:	pop    ss
  405134:	pusha  
  405135:	jmp    0xe379:0x6bffe1b7
  40513c:	popa   
  40513d:	xor    eax,DWORD PTR [edi+0x71]
  405140:	mov    edi,0x3694f344
  405145:	inc    ebp
  405146:	out    dx,eax
  405147:	cs pop ss
  405149:	jae    0x405167
  40514b:	jmp    0x9eff:0x480fb73b
  405152:	ficom  DWORD PTR [ecx]
  405154:	push   0x184357ba
  405159:	sub    cl,BYTE PTR [ebx+0x7e33c867]
  40515f:	sti    
  405160:	(bad)  
  405161:	fist   WORD PTR [esi-0x1a]
  405164:	jge    0x4051de
  405166:	cmc    
  405167:	in     al,0xad
  405169:	(bad)  
  40516a:	cwde   
  40516b:	les    ebp,FWORD PTR [edi+esi*2-0x79]
  40516f:	sti    
  405170:	sbb    ebp,DWORD PTR [edx-0x650d861d]
  405176:	inc    edx
  405177:	or     eax,DWORD PTR [ebp+0x34]
  40517a:	fbld   TBYTE PTR [edx+0x50cd4a0e]
  405180:	xchg   ebx,eax
  405181:	es mov ebx,0xf48da8d1
  405187:	cdq    
  405188:	cmp    cl,BYTE PTR [ebp+0x3b]
  40518b:	arpl   di,bp
  40518d:	add    edi,DWORD PTR [edi-0x3b04e92a]
  405193:	push   cs
  405194:	cmp    al,0x6f
  405196:	jg     0x4051d0
  405198:	(bad)  
  405199:	shl    BYTE PTR [edx+0xa],0x22
  40519d:	mov    bl,0xc4
  40519f:	pop    edi
  4051a0:	mov    edx,0x71e77b55
  4051a5:	fisub  DWORD PTR [eax+0x57]
  4051a8:	dec    esi
  4051a9:	fstp   TBYTE PTR [ecx]
  4051ab:	mov    DWORD PTR [eax],esp
  4051ad:	popa   
  4051ae:	scas   al,BYTE PTR es:[edi]
  4051af:	push   ss
  4051b0:	or     al,0xd3
  4051b3:	dec    eax
  4051b4:	pop    eax
  4051b5:	sbb    eax,0x99581459
  4051ba:	push   edx
  4051bb:	fwait
  4051bc:	adc    dh,cl
  4051be:	in     al,0x8d
  4051c0:	in     al,0x61
  4051c2:	mov    ch,0x4c
  4051c4:	jecxz  0x40518a
  4051c6:	lahf   
  4051c7:	add    DWORD PTR [eax-0x41],ecx
  4051ca:	iret   
  4051cb:	add    eax,DWORD PTR [esi-0x7]
  4051ce:	sbb    edx,ecx
  4051d0:	fdivr  QWORD PTR [edi-0x5a]
  4051d3:	push   eax
  4051d4:	jne    0x4051c1
  4051d6:	mov    edx,0xda76092
  4051db:	push   esi
  4051dc:	or     eax,0xc470d3a4
  4051e1:	out    0x8b,al
  4051e3:	pop    ecx
  4051e4:	xchg   esi,eax
  4051e5:	push   edi
  4051e6:	shl    BYTE PTR [edi-0x57],1
  4051e9:	add    esp,edx
  4051eb:	inc    ebp
  4051ec:	repnz mov WORD PTR ds:0x23c9a628,gs
  4051f3:	out    dx,al
  4051f4:	clc    
  4051f5:	sub    al,0xcc
  4051f7:	mov    ah,cl
  4051f9:	pop    eax
  4051fa:	hlt    
  4051fb:	imul   edi,DWORD PTR [eax-0x1f],0x8249cc5d
  405202:	inc    esi
  405203:	add    BYTE PTR [esp+eax*8+0x7e],bl
  405207:	mov    al,0x92
  405209:	jno    0x405274
  40520b:	lds    ebx,FWORD PTR [edx]
  40520d:	jmp    0xd6fd19f1
  405212:	mov    eax,0x3b99016b
  405217:	(bad)  
  40521a:	lahf   
  40521b:	xchg   edi,eax
  40521c:	cmp    ah,BYTE PTR [eax-0x43]
  40521f:	push   0xffffffde
  405221:	mov    bl,0x7
  405223:	xchg   ecx,eax
  405224:	inc    ebx
  405225:	sub    ebp,DWORD PTR [ecx]
  405227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405228:	push   edi
  405229:	jb     0x40521d
  40522b:	call   0x14b2:0x2fdc8d60
  405232:	mov    es,WORD PTR [eax-0x690874ea]
  405238:	jae    0x405206
  40523a:	sbb    eax,0x6bc0fc47
  40523f:	je     0x405298
  405241:	sub    eax,0xfa0cc7dc
  405246:	arpl   WORD PTR [ebx+0x5e9b82e2],bx
  40524c:	xchg   edx,eax
  40524d:	outs   dx,BYTE PTR ds:[esi]
  40524e:	add    edx,edx
  405250:	rcl    edx,cl
  405252:	popa   
  405253:	jo     0x4052a7
  405255:	push   es
  405256:	in     eax,dx
  405257:	push   ds
  405258:	(bad)  
  405259:	and    BYTE PTR [ecx+0x8],dh
  40525c:	jmp    0x274b502e
  405261:	jae    0x405286
  405263:	ret    0xb622
  405266:	sti    
  405267:	into   
  405268:	arpl   WORD PTR [ecx-0x7c598947],bp
  40526e:	xchg   ebp,eax
  40526f:	cli    
  405270:	ins    DWORD PTR es:[edi],dx
  405271:	test   BYTE PTR ds:0x5eaf236e,0x80
  405278:	mov    WORD PTR [edi],cs
  40527a:	jae    0x4052bc
  40527c:	mov    ch,0x7
  40527e:	pop    esp
  40527f:	ds inc ebx
  405281:	mov    ds:0x58c69524,al
  405286:	cdq    
  405287:	mov    edi,0x76503e45
  40528c:	call   0xd334ed7c
  405291:	xchg   edx,eax
  405292:	shl    bl,cl
  405294:	hlt    
  405295:	adc    bl,BYTE PTR [ebx-0x1b112a7f]
  40529b:	push   ebx
  40529c:	cmp    al,0xfc
  40529e:	ret    0x84e1
  4052a1:	sahf   
  4052a2:	xor    BYTE PTR [edx+0x0],ch
  4052a5:	sbb    DWORD PTR [esi-0x3fb3a8fa],edi
  4052ab:	xchg   BYTE PTR [edx+eiz*1],ah
  4052ae:	fild   WORD PTR [esi]
  4052b0:	inc    esi
  4052b1:	adc    BYTE PTR [esi],bh
  4052b3:	pop    es
  4052b4:	mov    cl,0x6
  4052b6:	jmp    0x40532f
  4052b8:	into   
  4052b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ba:	ss push edx
  4052bc:	or     dl,dl
  4052be:	rcr    DWORD PTR [edx],0xdf
  4052c1:	jno    0x4052c8
  4052c3:	and    BYTE PTR [ebp-0x69],0xee
  4052c7:	dec    eax
  4052c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052c9:	add    BYTE PTR [ebp+0x4bea0a98],dl
  4052cf:	adc    al,0x17
  4052d1:	xchg   DWORD PTR [eax+0x68603f02],ecx
  4052d7:	test   eax,0x963c6868
  4052dc:	cdq    
  4052dd:	push   ebp
  4052de:	sbb    BYTE PTR [ecx],cl
  4052e0:	dec    edi
  4052e1:	mov    dh,0xc2
  4052e3:	test   esi,0xb9aedb45
  4052e9:	jecxz  0x40529c
  4052eb:	push   edx
  4052ec:	rcr    BYTE PTR [ebx-0x13],cl
  4052ef:	(bad)  
  4052f1:	ss mov cl,0x7
  4052f4:	or     BYTE PTR [ebx],cl
  4052f6:	mov    gs,WORD PTR [ebp+0x62441886]
  4052fc:	pop    ebx
  4052fd:	dec    eax
  4052fe:	pop    ebx
  4052ff:	je     0x405327
  405301:	mov    DWORD PTR [eax+ebx*2],esp
  405304:	daa    
  405305:	int3   
  405306:	jo     0x4052c2
  405308:	repnz pusha 
  40530a:	dec    ebx
  40530b:	jne    0x40537c
  40530d:	jmp    0xcf5f:0xe843dbcc
  405314:	xchg   BYTE PTR [ecx],bh
  405316:	fild   QWORD PTR [ebp-0x4c]
  405319:	jae    0x4052de
  40531b:	mov    dl,BYTE PTR [esi-0x43203256]
  405321:	xor    al,0x14
  405323:	imul   ebp,DWORD PTR [edi],0x5e
  405326:	push   0x47d67ef7
  40532b:	xor    edx,ecx
  40532d:	test   cl,dh
  40532f:	arpl   WORD PTR cs:[ebx],dx
  405332:	mov    eax,cs:0xdf49b639
  405338:	mov    ch,0x9e
  40533a:	aam    0xbe
  40533c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40533d:	adc    cl,dl
  40533f:	push   es
  405340:	inc    ebp
  405341:	xchg   edi,eax
  405342:	inc    eax
  405343:	fistp  DWORD PTR [ebp-0x64728889]
  405349:	rcl    BYTE PTR [ecx+0x2eb04db1],0x62
  405350:	xchg   esp,eax
  405351:	aad    0x5b
  405353:	and    ebx,esi
  405355:	aas    
  405356:	push   eax
  405357:	fucomip st,st(2)
  405359:	ja     0x40538b
  40535b:	iret   
  40535c:	popa   
  40535d:	inc    eax
  40535e:	pop    ebp
  40535f:	(bad)  
  405360:	enter  0x8c8b,0x78
  405364:	leave  
  405365:	div    BYTE PTR [ebx+ecx*1+0x64]
  405369:	bound  eax,QWORD PTR [esp+eax*1]
  40536c:	test   al,0x36
  40536e:	fs sahf 
  405370:	pop    esp
  405371:	div    ah
  405373:	cmp    DWORD PTR [eax-0x52],0x38
  405377:	fnstsw WORD PTR [esi+edx*2]
  40537a:	add    edi,DWORD PTR [ebp-0x36bf6953]
  405380:	rol    DWORD PTR [ebx-0x53738fa3],1
  405386:	sub    DWORD PTR [esi+ebx*2-0x2b96a767],ebx
  40538d:	aas    
  40538e:	stos   DWORD PTR es:[edi],eax
  40538f:	repnz arpl WORD PTR [edi-0x70c6fb18],ax
  405396:	jmp    0x405357
  405398:	xchg   edi,eax
  405399:	aaa    
  40539a:	push   eax
  40539b:	fisub  DWORD PTR [edx+0x68]
  40539e:	repnz pusha 
  4053a0:	xchg   ebp,eax
  4053a1:	jo     0x405391
  4053a3:	ds mov dl,0xb8
  4053a6:	lock cmp eax,0x786d42cf
  4053ac:	mov    cl,0xa8
  4053ae:	mov    ah,0x70
  4053b0:	frstor [ecx-0x2e]
  4053b3:	mov    dl,0x42
  4053b5:	and    DWORD PTR [edi-0x1a0a9961],edx
  4053bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053bc:	ss xchg esp,eax
  4053be:	mov    eax,0x7d4a5284
  4053c3:	inc    esp
  4053c4:	mov    bl,0xd8
  4053c6:	mov    bh,0xd7
  4053c8:	in     eax,0x17
  4053ca:	adc    al,0xa8
  4053cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ce:	pop    esp
  4053cf:	retf   
  4053d0:	pop    esp
  4053d1:	xchg   esi,eax
  4053d2:	fmul   QWORD PTR [ecx-0x37]
  4053d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053d6:	out    dx,eax
  4053d7:	pop    esi
  4053d8:	lahf   
  4053d9:	repnz mov edi,0xdaa4f2d9
  4053df:	das    
  4053e0:	dec    ebp
  4053e1:	xchg   esp,eax
  4053e2:	mov    dl,0x3d
  4053e4:	push   cs
  4053e5:	ret    0xb240
  4053e8:	lahf   
  4053e9:	outs   dx,BYTE PTR ds:[esi]
  4053ea:	sbb    eax,0x72a42425
  4053ef:	inc    ebx
  4053f0:	add    al,0x17
  4053f2:	mov    ds:0xf39fd81c,eax
  4053f7:	icebp  
  4053f8:	jp     0x40544a
  4053fa:	bound  esi,QWORD PTR [ebp*2+0x12838671]
  405401:	jg     0x405414
  405403:	cwde   
  405404:	pop    edx
  405405:	pop    es
  405406:	dec    ebp
  405407:	mov    edx,0x23ee874
  40540c:	inc    ebx
  40540d:	pop    eax
  40540e:	mov    eax,ds:0x847acebc
  405413:	push   esi
  405414:	pop    es
  405415:	jne    0x4053b8
  405417:	mov    ebp,0xec3fdcdb
  40541c:	pop    ds
  40541d:	adc    DWORD PTR ds:[ecx],esi
  405420:	ret    
  405421:	push   ebx
  405422:	or     BYTE PTR [ebp-0x40155df8],bh
  405428:	lea    edi,[ecx+edi*8]
  40542b:	sub    BYTE PTR [edx+0x221134d1],0x47
  405432:	rcl    DWORD PTR [edi],1
  405434:	pop    esp
  405435:	sbb    BYTE PTR [edx-0x27],dh
  405438:	dec    eax
  405439:	lea    ebx,[esi+edi*2-0x355193ee]
  405440:	and    BYTE PTR [edi*1-0x78f8a90c],dl
  405447:	mov    gs,esi
  405449:	fsubr  DWORD PTR [edx+0x4b]
  40544c:	and    esp,DWORD PTR [edx-0x4e]
  40544f:	sub    eax,0xe2b51028
  405454:	pop    esp
  405455:	xchg   esp,eax
  405456:	dec    ebx
  405457:	inc    eax
  405458:	cwde   
  405459:	jmp    0xfe43deab
  40545e:	pop    esp
  40545f:	xor    ah,BYTE PTR [esi-0x57]
  405462:	adc    al,0x37
  405464:	ins    DWORD PTR es:[edi],dx
  405465:	imul   ebx,ebp,0x34713713
  40546b:	test   BYTE PTR [edi+ecx*2+0x53],bl
  40546f:	jns    0x4054b2
  405471:	cmp    ch,ch
  405473:	sahf   
  405474:	add    DWORD PTR [edi],0x81a4c647
  40547a:	ror    DWORD PTR [ebp-0x157bad86],0xdd
  405481:	xor    BYTE PTR [ebx+0x697152a6],ah
  405487:	std    
  405488:	nop
  405489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40548a:	inc    ebx
  40548b:	pop    ecx
  40548c:	cdq    
  40548d:	call   0x6ef769e3
  405492:	jge    0x4054cd
  405494:	push   ds
  405495:	push   eax
  405496:	std    
  405497:	ret    0xa4e0
  40549a:	nop
  40549b:	xchg   BYTE PTR [ecx-0x404b515c],al
  4054a1:	stos   DWORD PTR es:[edi],eax
  4054a2:	jnp    0x4054ac
  4054a4:	nop
  4054a5:	mov    esi,0x28580a67
  4054aa:	cmp    al,0x7b
  4054ac:	ins    BYTE PTR es:[edi],dx
  4054ad:	mov    edi,0x2f0181c9
  4054b2:	add    DWORD PTR gs:[edi],0x13
  4054b6:	int3   
  4054b7:	repz repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054ba:	call   0xdf3669d9
  4054bf:	inc    ebp
  4054c0:	shl    BYTE PTR [ebx-0xb5949d2],0x4c
  4054c7:	iret   
  4054c8:	in     eax,dx
  4054c9:	sbb    al,0xb
  4054cb:	and    eax,0x301d7c7e
  4054d0:	retf   0xb5
  4054d3:	jecxz  0x4054f4
  4054d5:	and    eax,0x6c05870d
  4054da:	pop    ebx
  4054db:	cmp    dh,BYTE PTR [eax-0x4a]
  4054de:	icebp  
  4054df:	jne    0x4054da
  4054e1:	mov    ebp,0x6443e3bb
  4054e6:	mov    eax,ds:0x878c61ad
  4054eb:	enter  0x6d69,0x80
  4054ef:	cli    
  4054f0:	(bad)  
  4054f1:	dec    edx
  4054f2:	or     al,0xca
  4054f4:	pop    eax
  4054f5:	dec    esi
  4054f6:	mov    ah,0x45
  4054f8:	pop    ss
  4054f9:	xchg   esp,eax
  4054fa:	lods   al,BYTE PTR ds:[esi]
  4054fb:	arpl   WORD PTR ds:0x5f0ce8fd,bx
  405501:	ss dec ebp
  405503:	sbb    al,bl
  405505:	add    eax,0x688a0c8
  40550a:	loope  0x40550f
  40550c:	arpl   WORD PTR [edi+esi*4-0x14],si
  405510:	jb     0x4054ef
  405512:	push   eax
  405513:	mov    bh,0xbf
  405515:	inc    esp
  405516:	(bad)  
  405518:	mov    BYTE PTR [ecx-0x35],bh
  40551b:	test   ah,0x4f
  40551e:	in     al,0xe3
  405520:	add    eax,0x53bb6e73
  405525:	aaa    
  405526:	sub    al,0xbd
  405528:	sbb    DWORD PTR [ebp+0x4dec180],ebx
  40552e:	fs jle 0x40551a
  405531:	call   0x6d46:0xc59b237d
  405538:	cmp    al,0xd6
  40553a:	(bad)  
  40553b:	lea    esp,[edx]
  40553d:	pop    ss
  40553e:	iret   
  40553f:	sub    eax,eax
  405541:	adc    edx,esi
  405543:	enter  0x687c,0x66
  405547:	sub    BYTE PTR [ecx],0xc8
  40554a:	les    eax,FWORD PTR [ebx+0x2]
  40554d:	fnstsw WORD PTR [edi+0x1a]
  405550:	push   esi
  405551:	out    0x1d,al
  405553:	popf   
  405554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405555:	pop    eax
  405556:	xor    cl,BYTE PTR [edi+0x63]
  405559:	sahf   
  40555a:	mov    DWORD PTR [edi-0x3c],eax
  40555d:	leave  
  40555e:	jns    0x40556f
  405560:	fwait
  405561:	xor    al,dl
  405563:	in     eax,0x3d
  405565:	cmp    edx,edi
  405567:	adc    BYTE PTR [ecx],bh
  405569:	push   0xeaaacbbc
  40556e:	mov    edx,0xce365651
  405573:	pop    ebx
  405574:	inc    ebx
  405575:	jge    0x405517
  405577:	xchg   esi,eax
  405578:	leave  
  405579:	fidivr WORD PTR [edx+0x4c]
  40557c:	add    cl,bh
  40557e:	jo     0x4055b5
  405580:	dec    ebx
  405581:	mov    ds:0x9e96cc5f,al
  405586:	mov    DWORD PTR [esi+0x623ea2cd],edx
  40558c:	pop    ebp
  40558d:	mov    al,ds:0x932eebc8
  405592:	jp     0x40555f
  405594:	pop    ecx
  405595:	gs add ch,bh
  405598:	jmp    0x725f:0x17cb8f9
  40559f:	sub    ebx,DWORD PTR [esi+0x13a5b16a]
  4055a5:	ror    BYTE PTR [ebx+0x3243770f],cl
  4055ab:	iret   
  4055ac:	mov    dl,0x23
  4055ae:	lds    edx,FWORD PTR [edi]
  4055b0:	jg     0x4055ce
  4055b2:	cli    
  4055b3:	mov    ebp,0x965135b8
  4055b8:	call   0x1591:0x3677afbd
  4055bf:	jp     0x405630
  4055c1:	adc    eax,0xbfa5aeb7
  4055c6:	jno    0x4055ef
  4055c8:	mov    ch,0x8
  4055ca:	(bad)  
  4055cb:	int3   
  4055cc:	push   edi
  4055cd:	in     eax,dx
  4055ce:	xor    eax,DWORD PTR [ebx-0x3a3b5216]
  4055d4:	push   eax
  4055d5:	fldenv [ebx]
  4055d7:	jmp    0xbaeb:0x4fea5663
  4055de:	xchg   edx,eax
  4055df:	sbb    DWORD PTR [esi],0x64
  4055e2:	adc    DWORD PTR [edi+eiz*4],ecx
  4055e5:	pop    ecx
  4055e6:	popf   
  4055e7:	cmp    al,0x36
  4055e9:	inc    edi
  4055ea:	pop    ebp
  4055eb:	inc    edi
  4055ec:	or     al,0xcb
  4055ee:	or     eax,0xc9fad4ef
  4055f3:	push   eax
  4055f4:	fwait
  4055f5:	cmc    
  4055f6:	stc    
  4055f7:	xchg   edx,eax
  4055f8:	jnp    0x405581
  4055fa:	jmp    0xd1619ed2
  4055ff:	int    0x41
  405601:	or     ch,BYTE PTR [ebx]
  405603:	retf   
  405604:	jg     0x40564e
  405606:	mov    edi,0x9256728d
  40560b:	rol    ecx,cl
  40560d:	dec    ebx
  40560e:	push   0x47
  405610:	inc    edx
  405611:	jae    0x405661
  405613:	ja     0x4055a4
  405615:	cmp    esi,esi
  405617:	xor    eax,DWORD PTR [esi]
  405619:	nop
  40561a:	outs   dx,DWORD PTR ds:[esi]
  40561b:	fisub  WORD PTR [eax+0x3da15ef7]
  405621:	outs   dx,BYTE PTR ds:[esi]
  405622:	pop    ss
  405623:	out    dx,eax
  405624:	inc    edi
  405625:	ins    BYTE PTR es:[edi],dx
  405626:	ds (bad) 
  405628:	imul   edi,DWORD PTR [ebx],0x44
  40562b:	jnp    0x4055e8
  40562d:	dec    esi
  40562e:	lock pushf 
  405630:	in     al,0x92
  405632:	shr    BYTE PTR [edx],cl
  405634:	xor    ch,BYTE PTR [esi+eiz*4]
  405637:	mov    eax,0xd601294a
  40563c:	pop    ecx
  40563d:	inc    edi
  40563e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40563f:	bound  ebx,QWORD PTR [esi]
  405641:	ja     0x405681
  405643:	xchg   esp,eax
  405644:	in     al,0x9f
  405646:	scas   al,BYTE PTR es:[edi]
  405647:	out    0xf5,eax
  405649:	fisttp WORD PTR [edi]
  40564b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40564c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40564d:	(bad)  
  40564f:	inc    ecx
  405650:	push   ss
  405651:	or     al,0x74
  405653:	sub    eax,0x9ba71de0
  405658:	sbb    eax,0xd6bed1b7
  40565d:	nop
  40565e:	fs repnz into 
  405661:	and    dl,cl
  405663:	test   DWORD PTR [edx],ebp
  405665:	jbe    0x4056a7
  405667:	test   BYTE PTR [eax+edx*4],bl
  40566a:	lock iret 
  40566c:	lock or al,0x9e
  40566f:	je     0x405616
  405671:	push   edx
  405672:	out    dx,al
  405673:	mov    cl,0xa
  405675:	ret    
  405676:	rcr    DWORD PTR [ebx+0x46],1
  405679:	out    0x57,al
  40567b:	sbb    edi,eax
  40567d:	mov    esi,0x648e9518
  405682:	or     eax,0xa659258e
  405687:	or     DWORD PTR [eax-0x56cbeeac],esp
  40568d:	gs inc esp
  40568f:	mov    cl,BYTE PTR [esi-0x37]
  405692:	fisttp WORD PTR [eax-0x79]
  405695:	xchg   edi,eax
  405696:	clc    
  405697:	adc    eax,0x2b48139b
  40569c:	mov    cl,0x2d
  40569e:	lahf   
  40569f:	mov    cl,0x1a
  4056a1:	daa    
  4056a2:	ret    0xcec1
  4056a5:	jmp    0x40571d
  4056a7:	sbb    DWORD PTR [ebx+0x16b8a6d3],0xa0444642
  4056b1:	jle    0x40571c
  4056b3:	jo     0x40569a
  4056b5:	into   
  4056b6:	call   0x4f11:0xa884360a
  4056bd:	fbld   TBYTE PTR [edi]
  4056bf:	popa   
  4056c0:	or     BYTE PTR [ecx-0x4f],al
  4056c3:	je     0x40564c
  4056c5:	scas   eax,DWORD PTR es:[edi]
  4056c6:	mov    al,0x5e
  4056c8:	jle    0x4056d2
  4056ca:	sbb    BYTE PTR [edi-0x48c743d1],cl
  4056d0:	lahf   
  4056d1:	push   eax
  4056d2:	jecxz  0x405706
  4056d4:	jp     0x405662
  4056d6:	ins    DWORD PTR es:[edi],dx
  4056d7:	cmp    DWORD PTR [ecx+0x51ba205b],edi
  4056dd:	xor    DWORD PTR [ebp+0x55],0x12f0b0b4
  4056e4:	iret   
  4056e5:	sbb    ch,BYTE PTR [ecx-0x9528bcc]
  4056eb:	xor    eax,0x92345cf0
  4056f0:	shr    DWORD PTR [eax-0xc],1
  4056f3:	push   ss
  4056f4:	call   0x36be:0x662a04e1
  4056fb:	or     eax,0x2a6dda44
  405700:	and    DWORD PTR [eax],0x34
  405703:	loope  0x405767
  405705:	call   0x7b52:0x24c027e
  40570c:	(bad)  
  40570d:	jns    0x40569f
  40570f:	pop    ss
  405710:	cmp    dh,BYTE PTR [edx+0x145dd4c7]
  405716:	les    edx,FWORD PTR [eax-0x18]
  405719:	test   BYTE PTR [eax],0x94
  40571c:	jae    0x40575b
  40571e:	lds    esi,FWORD PTR [ebp-0x24]
  405721:	pop    edi
  405722:	sub    bl,BYTE PTR [esi]
  405724:	cmp    ebp,DWORD PTR [ebp-0x3d]
  405727:	dec    edi
  405728:	push   edx
  405729:	(bad)  
  40572b:	pop    ss
  40572c:	mov    al,ds:0x1978e2cb
  405731:	shl    DWORD PTR [esi],cl
  405733:	sub    eax,0x4d0e5560
  405738:	es ret 
  40573a:	pop    ss
  40573b:	in     al,dx
  40573c:	cmp    al,al
  40573e:	fsubr  st,st(0)
  405740:	ins    BYTE PTR es:[edi],dx
  405741:	cdq    
  405742:	(bad)  
  405743:	xchg   ebx,eax
  405744:	cmp    edi,edi
  405746:	mov    ds:0x6d6ea1cf,eax
  40574b:	and    eax,DWORD PTR [esp+edx*2+0x68]
  40574f:	xor    bh,bh
  405751:	inc    edx
  405752:	xchg   ecx,eax
  405753:	leave  
  405754:	or     BYTE PTR [ebx+0x4c],al
  405757:	mov    al,0xeb
  405759:	ret    0xc0cf
  40575c:	cs push ebx
  40575e:	out    dx,eax
  40575f:	aam    0xa6
  405761:	adc    ah,bh
  405763:	loopne 0x405760
  405765:	xor    DWORD PTR [ebp-0x1b],0xffffffda
  405769:	(bad)  
  40576a:	ret    
  40576b:	scas   eax,DWORD PTR es:[edi]
  40576c:	lock aas 
  40576e:	cmp    ch,BYTE PTR [esi]
  405770:	cld    
  405771:	cwde   
  405772:	loopne 0x4057da
  405774:	jmp    0x4057ab
  405776:	jmp    0x4e27f5fa
  40577b:	mov    cl,0x58
  40577d:	lea    eax,[edi+0x3c]
  405780:	fstp   QWORD PTR [eax-0x2c]
  405783:	cmp    ch,BYTE PTR [esi]
  405785:	inc    ebx
  405786:	pop    ecx
  405787:	jp     0x405741
  405789:	xor    eax,0x969f5ada
  40578e:	std    
  40578f:	test   DWORD PTR [ebp-0x80e5573],edx
  405795:	aas    
  405796:	inc    ecx
  405797:	or     al,0x27
  405799:	ins    DWORD PTR es:[edi],dx
  40579a:	leave  
  40579b:	in     al,dx
  40579c:	dec    eax
  40579d:	ins    BYTE PTR es:[edi],dx
  40579e:	or     DWORD PTR [ebp+esi*1-0x58ca6434],edx
  4057a5:	stos   BYTE PTR es:[edi],al
  4057a6:	pop    eax
  4057a7:	or     bh,ah
  4057a9:	push   ebx
  4057aa:	mov    dl,0x12
  4057ac:	stos   DWORD PTR es:[edi],eax
  4057ad:	(bad)  
  4057ae:	cmp    esp,edx
  4057b0:	and    BYTE PTR [edx],ch
  4057b2:	xchg   edi,eax
  4057b3:	sbb    ch,BYTE PTR [edx+0x4f]
  4057b6:	pop    ebx
  4057b7:	stos   BYTE PTR es:[edi],al
  4057b8:	dec    edi
  4057b9:	pop    es
  4057ba:	dec    ebx
  4057bb:	call   0xbaab9856
  4057c0:	mov    ds:0xdc663494,al
  4057c5:	std    
  4057c6:	mov    dh,0x12
  4057c8:	mov    DWORD PTR [edx],edx
  4057ca:	bound  eax,QWORD PTR [eax+0x39b14ab6]
  4057d0:	test   DWORD PTR [ebx],esi
  4057d2:	fs dec edi
  4057d4:	or     eax,0x6c16fef5
  4057d9:	pop    esi
  4057da:	xchg   edi,eax
  4057db:	and    cl,BYTE PTR [esi+0x10]
  4057de:	push   esp
  4057df:	mov    DWORD PTR [edx],ebx
  4057e1:	pop    edx
  4057e2:	cmc    
  4057e3:	xchg   edx,eax
  4057e4:	fst    QWORD PTR [ecx-0x75]
  4057e7:	int    0x6c
  4057e9:	scas   eax,DWORD PTR es:[edi]
  4057ea:	jg     0x405804
  4057ec:	and    esi,ecx
  4057ee:	and    al,BYTE PTR [eax]
  4057f0:	lea    edx,[ebx-0x3b89c32b]
  4057f6:	dec    esi
  4057f7:	push   edx
  4057f8:	mov    ds:0x23fbcd80,al
  4057fd:	imul   ebx,ebp,0xf0ac145e
  405803:	js     0x40580a
  405805:	jecxz  0x405793
  405807:	call   0x1ffd:0x47f79977
  40580e:	fldcw  WORD PTR [edx+0x6859898a]
  405814:	adc    dl,BYTE PTR [ebx]
  405816:	jle    0x40585e
  405818:	or     al,0xcd
  40581a:	mov    bl,0xcc
  40581c:	xor    bl,BYTE PTR [ebp-0x69fd032a]
  405822:	pop    ss
  405823:	out    dx,eax
  405824:	mov    bl,0x36
  405826:	sub    eax,0xc5329942
  40582b:	enter  0x6587,0x30
  40582f:	imul   ecx,DWORD PTR [edx],0xffffff8d
  405832:	gs jno 0x4057e5
  405835:	inc    esp
  405836:	fidiv  WORD PTR ds:0xdc63606c
  40583c:	mov    BYTE PTR [esi*1+0x369602a4],bh
  405843:	pop    ss
  405844:	js     0x405888
  405846:	pushf  
  405847:	push   ebx
  405848:	nop
  405849:	dec    esi
  40584a:	sti    
  40584b:	aaa    
  40584c:	popf   
  40584d:	(bad)  
  40584f:	aad    0x21
  405851:	mov    al,ds:0xb0d4e5e
  405856:	xor    eax,0xe9d81f20
  40585b:	add    esp,DWORD PTR [ebp-0x12]
  40585e:	jmp    0x944959f1
  405863:	mov    ebx,0xd3673180
  405868:	mov    WORD PTR [ebp-0x537bc02a],?
  40586e:	cli    
  40586f:	push   edx
  405870:	push   es
  405871:	sub    DWORD PTR [esi],edi
  405873:	aaa    
  405874:	cmp    bl,BYTE PTR [esi-0x42]
  405877:	sub    BYTE PTR [ecx-0x38a6cb28],bl
  40587d:	jecxz  0x405847
  40587f:	mov    esi,0xc3d853bf
  405884:	fwait
  405885:	enter  0x98ee,0x2
  405889:	xor    BYTE PTR [esi+0x73],cl
  40588c:	sti    
  40588d:	mov    dl,0x71
  40588f:	sar    bh,0xd6
  405892:	xlat   BYTE PTR ds:[ebx]
  405893:	pop    ebx
  405894:	push   eax
  405895:	je     0x405841
  405897:	sbb    eax,0x68e639e9
  40589c:	sar    DWORD PTR [ecx+esi*8],cl
  40589f:	push   esi
  4058a0:	jmp    0x110065e8
  4058a5:	push   esp
  4058a6:	pop    edi
  4058a7:	int3   
  4058a8:	inc    ecx
  4058a9:	sbb    eax,0x87cd922a
  4058ae:	out    0x46,eax
  4058b0:	inc    esi
  4058b1:	lock push edx
  4058b3:	jmp    0x376f:0x2395a365
  4058ba:	pusha  
  4058bb:	call   0x22e9:0xe4c24fd
  4058c2:	mov    ah,0x47
  4058c4:	push   cs
  4058c5:	js     0x40588c
  4058c7:	mov    cl,0xfc
  4058c9:	xor    eax,0x16448c8a
  4058ce:	pushf  
  4058cf:	(bad)  
  4058d0:	and    esp,DWORD PTR [esi+0x21]
  4058d3:	jge    0x4058a7
  4058d5:	jmp    0xcac0:0xac7deee5
  4058dc:	add    ah,BYTE PTR [ecx-0x38]
  4058df:	fmul   st,st(4)
  4058e1:	adc    bh,ch
  4058e3:	push   ebp
  4058e4:	lods   eax,DWORD PTR ds:[esi]
  4058e5:	push   ecx
  4058e6:	cwde   
  4058e7:	mov    ebx,0x3c71c901
  4058ec:	cdq    
  4058ed:	dec    ebx
  4058ee:	in     al,0x94
  4058f0:	(bad)  
  4058f2:	jle    0x40593e
  4058f4:	mov    ch,0xd4
  4058f6:	cdq    
  4058f7:	(bad)  
  4058f8:	pop    edx
  4058f9:	imul   esi,esi,0x7
  4058fc:	jnp    0x4058bf
  4058fe:	stos   DWORD PTR es:[edi],eax
  4058ff:	add    BYTE PTR [edi-0xed4c05],al
  405905:	(bad)  
  405906:	pop    ss
  405907:	out    0x64,eax
  405909:	mov    dh,0x4e
  40590b:	test   al,0x1b
  40590d:	sahf   
  40590e:	push   esp
  40590f:	and    BYTE PTR [ebx-0x7d6bc119],dh
  405915:	cs push esi
  405917:	aad    0x45
  405919:	push   ebx
  40591a:	pop    es
  40591b:	cmp    esp,DWORD PTR [esi-0x76c734d4]
  405921:	xchg   ebx,eax
  405922:	pop    esp
  405923:	mov    BYTE PTR [edi+esi*2],bh
  405926:	add    DWORD PTR ds:0x527f2a74,esp
  40592c:	mov    al,ds:0xb79d8cb9
  405931:	inc    edi
  405932:	mov    al,ds:0x73bcf911
  405937:	out    0x61,eax
  405939:	inc    ebp
  40593a:	idiv   BYTE PTR [ebx]
  40593c:	jo     0x4058d6
  40593e:	lock mov esp,0xd9dd92af
  405944:	and    BYTE PTR [ebx-0x59],dl
  405947:	mov    edx,0x1b2617e
  40594c:	dec    edi
  40594d:	rol    DWORD PTR [esi],0xf7
  405950:	mov    esp,0x8200e849
  405955:	or     al,al
  405957:	jp     0x405915
  405959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40595a:	jecxz  0x4058de
  40595c:	mov    edi,0x208317f0
  405961:	pushf  
  405962:	mov    edx,0x6ca9e3fb
  405967:	sbb    BYTE PTR ds:0x70dbb40d,0xbf
  40596e:	cmp    bl,BYTE PTR [ecx+0x39c64a06]
  405974:	(bad)  
  405975:	cld    
  405976:	fcom   st(2)
  405978:	push   edx
  405979:	aas    
  40597a:	fs fcom st(1)
  40597d:	repnz fisubr DWORD PTR [esi+0x560c94f4]
  405984:	pop    edi
  405985:	mov    ah,0x4d
  405987:	fabs   
  405989:	retf   0xbea0
  40598c:	sti    
  40598d:	outs   dx,DWORD PTR ds:[esi]
  40598e:	adc    DWORD PTR [ebx-0xc],ebx
  405991:	sub    eax,0x557bcae5
  405996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405997:	add    BYTE PTR [ebp-0x61],al
  40599a:	nop
  40599b:	les    ebx,FWORD PTR [edi-0x718eecb8]
  4059a1:	shl    BYTE PTR ds:0xa802baf8,0x5a
  4059a8:	(bad)  [ebp+ebx*4-0x2a333a64]
  4059af:	addr16 mov edx,0xdf50e6fe
  4059b5:	call   0xfc669976
  4059ba:	push   0xa61959af
  4059bf:	inc    esi
  4059c0:	mov    esi,0xda89918b
  4059c5:	mov    ds:0x42b28d66,eax
  4059ca:	push   esp
  4059cb:	(bad)  
  4059cc:	jmp    0x4059a6
  4059ce:	repnz retf 0x7b03
  4059d2:	push   es
  4059d3:	jl     0x4059b1
  4059d5:	pop    esi
  4059d6:	mov    ch,0xdb
  4059d8:	je     0x4059f4
  4059da:	test   BYTE PTR [eax+0x3dead7db],al
  4059e0:	sbb    al,0x11
  4059e2:	mov    edi,esi
  4059e4:	out    0x35,al
  4059e6:	aam    0xb3
  4059e8:	lods   al,BYTE PTR ds:[esi]
  4059e9:	icebp  
  4059ea:	ret    
  4059eb:	pop    eax
  4059ec:	ja     0x405a42
  4059ee:	scas   eax,DWORD PTR es:[edi]
  4059ef:	dec    ebp
  4059f0:	inc    ecx
  4059f1:	sahf   
  4059f2:	add    ah,bh
  4059f4:	in     al,0x59
  4059f6:	test   al,0x76
  4059f8:	out    0xe4,eax
  4059fa:	mov    edx,0x9408391e
  4059ff:	mov    WORD PTR [esi+0x32],ds
  405a02:	jecxz  0x405a7b
  405a04:	lds    esi,FWORD PTR [esi-0x24318eea]
  405a0a:	push   cs
  405a0b:	mov    bh,0x51
  405a0d:	mov    ds:0x1d3c6a6,eax
  405a12:	cli    
  405a13:	jnp    0x405a89
  405a15:	and    dl,ah
  405a17:	sbb    eax,0x121eaedc
  405a1c:	push   edx
  405a1d:	cdq    
  405a1e:	xor    BYTE PTR [edi],cl
  405a20:	js     0x4059c0
  405a22:	lds    edx,FWORD PTR [esi]
  405a24:	or     BYTE PTR [ebx],ch
  405a26:	sub    BYTE PTR [eax],ch
  405a28:	or     edx,esi
  405a2a:	dec    edx
  405a2b:	(bad)  
  405a2c:	les    ebx,FWORD PTR [ebx-0x10]
  405a2f:	mov    esp,0x2a651ec7
  405a34:	in     al,dx
  405a35:	iret   
  405a36:	cmp    al,0x48
  405a38:	mov    dl,ch
  405a3a:	out    0x44,eax
  405a3c:	jg     0x405a5f
  405a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a3f:	sub    al,0x89
  405a41:	mov    al,ds:0x38eac62d
  405a46:	xor    al,0x3a
  405a48:	ret    0xce06
  405a4b:	pop    esi
  405a4c:	mov    esi,0x843026f2
  405a51:	jnp    0x405a86
  405a53:	fsub   DWORD PTR [ebx]
  405a55:	not    BYTE PTR [edx+ebx*4]
  405a58:	cmp    ch,BYTE PTR [ecx]
  405a5a:	ret    
  405a5b:	and    eax,0xeee62957
  405a60:	cwde   
  405a61:	xchg   ecx,eax
  405a62:	add    eax,DWORD PTR [esi-0x39d64906]
  405a68:	imul   ecx,ecx,0x28501899
  405a6e:	pop    eax
  405a6f:	mov    ebp,DWORD PTR [ecx-0x3]
  405a72:	xor    eax,0xddebeabc
  405a77:	js     0x405af1
  405a79:	in     eax,0x40
  405a7b:	pop    ds
  405a7c:	ror    DWORD PTR [eax],1
  405a7e:	fist   WORD PTR [ebx+edx*2+0x5b]
  405a82:	int    0xc9
  405a84:	xor    DWORD PTR [edx-0x440b186c],ebx
  405a8a:	xor    DWORD PTR ds:0x634ac901,esi
  405a90:	lods   al,BYTE PTR ds:[esi]
  405a91:	inc    esi
  405a92:	pop    eax
  405a93:	mov    ah,0xb8
  405a95:	mov    ch,0x80
  405a97:	xchg   ecx,eax
  405a98:	repnz push eax
  405a9a:	loop   0x405a8a
  405a9c:	or     BYTE PTR [esi-0x7b],al
  405a9f:	aaa    
  405aa0:	arpl   WORD PTR [ebp+0x28],cx
  405aa3:	gs push ecx
  405aa5:	jle    0x405ae2
  405aa7:	fcom   QWORD PTR ds:0x4d460bcd
  405aae:	bound  edx,QWORD PTR [edx-0x73e7ebac]
  405ab4:	cmp    eax,DWORD PTR [ecx-0x171e9afe]
  405aba:	inc    esp
  405abb:	mov    ch,0x16
  405abd:	push   esi
  405abe:	jle    0x405b33
  405ac0:	sub    ebp,ecx
  405ac2:	push   es
  405ac3:	icebp  
  405ac4:	push   esp
  405ac5:	mov    ds,WORD PTR [esi+0x19]
  405ac8:	call   0xb4e5:0x6264d15d
  405acf:	jmp    0xa00b21c9
  405ad4:	sti    
  405ad5:	mov    edx,0x8c2923d0
  405ada:	dec    edx
  405adb:	icebp  
  405adc:	das    
  405add:	mov    dh,0x7e
  405adf:	mov    ecx,0x28225280
  405ae4:	pop    ebx
  405ae5:	int3   
  405ae6:	add    BYTE PTR [edi-0x23dd95ed],ch
  405aec:	gs pop edx
  405aee:	jb     0x405b0d
  405af0:	dec    ebp
  405af1:	inc    ebp
  405af2:	lea    esp,ds:0xb036e9a8
  405af8:	loope  0x405af0
  405afa:	inc    edi
  405afb:	(bad)  
  405afc:	fs mov dl,0xd5
  405aff:	mov    al,ds:0x1cc1069d
  405b04:	xchg   edi,eax
  405b05:	daa    
  405b06:	(bad)  
  405b07:	ret    0x7fe5
  405b0a:	enter  0x4e69,0xbd
  405b0e:	gs push edx
  405b10:	rcl    esi,cl
  405b12:	retf   0x5945
  405b15:	xor    DWORD PTR [edx+0x60],ebx
  405b18:	fistp  WORD PTR [ebx-0x5d]
  405b1c:	or     ecx,DWORD PTR [esi+0x427c8906]
  405b22:	repz pop edx
  405b24:	inc    eax
  405b25:	xchg   ebx,eax
  405b26:	scas   al,BYTE PTR es:[edi]
  405b27:	(bad)  
  405b28:	fdivr  QWORD PTR [edi+0xb]
  405b2b:	inc    esp
  405b2c:	push   ds
  405b2d:	mov    bh,BYTE PTR [ebx]
  405b2f:	xor    ebx,DWORD PTR [edi-0x55]
  405b32:	xor    eax,0xbd42df51
  405b37:	nop
  405b38:	enter  0x8e97,0xdf
  405b3c:	push   esp
  405b3d:	sub    eax,0x793d0a3e
  405b42:	and    eax,0xf026b44e
  405b47:	xor    eax,0x9c8b0deb
  405b4c:	ds push esi
  405b4e:	jmp    0x7c9671bc
  405b53:	cmp    DWORD PTR [eax+edi*4],edi
  405b56:	or     al,0xe7
  405b58:	mov    ch,0x8c
  405b5a:	add    dl,BYTE PTR [edi-0x5ceda9d2]
  405b60:	xor    BYTE PTR [ebx-0x74],dh
  405b63:	nop
  405b64:	or     al,0x7d
  405b66:	cmp    DWORD PTR [eax-0xe2dd785],ebx
  405b6c:	sub    esp,DWORD PTR [edi-0x1f]
  405b6f:	dec    eax
  405b70:	mov    bl,0xcc
  405b72:	push   es
  405b73:	sub    dl,BYTE PTR [ebp+0x588990a3]
  405b79:	call   0x5412:0xf8293b89
  405b80:	ret    
  405b81:	jae    0x405bda
  405b83:	enter  0x46de,0x6a
  405b87:	inc    esp
  405b88:	lock and al,BYTE PTR [ecx]
  405b8b:	inc    ebp
  405b8c:	scas   eax,DWORD PTR es:[edi]
  405b8d:	mov    ebp,0xeebfaaad
  405b92:	push   ds
  405b93:	arpl   WORD PTR [esi-0x1e],dx
  405b96:	icebp  
  405b97:	dec    esi
  405b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b99:	push   es
  405b9a:	xchg   edx,eax
  405b9b:	xchg   eax,ebp
  405b9d:	shl    ebp,1
  405b9f:	sbb    eax,0x49cba34f
  405ba4:	dec    eax
  405ba5:	pop    ecx
  405ba6:	or     bh,cl
  405ba8:	in     eax,0x48
  405baa:	ror    BYTE PTR [ecx],0xa9
  405bad:	repz pusha 
  405baf:	mov    cl,0x12
  405bb1:	outs   dx,DWORD PTR ds:[esi]
  405bb2:	lds    esi,FWORD PTR [esi-0x7e66be85]
  405bb8:	push   0xfb6e4c28
  405bbd:	into   
  405bbe:	mov    dh,0x2e
  405bc0:	or     DWORD PTR [ecx+0x2b51ffa2],0xfbfbc3c0
  405bca:	int3   
  405bcb:	mov    dh,0x5c
  405bcd:	out    0x73,eax
  405bcf:	fucom  st(3)
  405bd1:	fyl2x  
  405bd3:	rol    BYTE PTR [eax-0x4e29ab82],1
  405bd9:	call   0x378c:0x47ffeb3
  405be0:	dec    ebp
  405be1:	aas    
  405be2:	jnp    0x405b96
  405be4:	jnp    0x405c11
  405be6:	call   0x101ec300
  405beb:	adc    edx,eax
  405bed:	cmc    
  405bee:	sbb    eax,0xd53106f2
  405bf3:	dec    ebx
  405bf4:	xchg   ecx,eax
  405bf5:	add    cl,bl
  405bf7:	inc    esp
  405bf8:	push   esp
  405bf9:	inc    ecx
  405bfa:	test   DWORD PTR [edx],ebp
  405bfc:	dec    ecx
  405bfd:	cld    
  405bfe:	aad    0x11
  405c00:	ficom  WORD PTR [ebx-0x6a]
  405c03:	daa    
  405c04:	test   BYTE PTR [eax+0x44ad20e7],al
  405c0a:	ret    0x15fe
  405c0d:	sub    eax,0x75791616
  405c12:	icebp  
  405c13:	(bad)  
  405c14:	(bad)  
  405c15:	and    BYTE PTR [esi],bl
  405c17:	xchg   esi,eax
  405c18:	fs cld 
  405c1a:	inc    ebp
  405c1b:	int    0x57
  405c1d:	xor    bl,dl
  405c1f:	pop    ecx
  405c20:	pop    es
  405c21:	retf   
  405c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c23:	mov    DWORD PTR [ebx-0x34558bf1],0x38cea52e
  405c2d:	outs   dx,DWORD PTR ds:[esi]
  405c2e:	out    dx,eax
  405c2f:	in     al,0x8a
  405c31:	pop    edi
  405c32:	sbb    eax,0xa301c81f
  405c37:	aas    
  405c38:	daa    
  405c39:	test   BYTE PTR [edi],ah
  405c3b:	add    DWORD PTR [edx+0x9],edx
  405c3e:	mov    edi,DWORD PTR [ebx+0x7a50cf7f]
  405c44:	ret    0x470
  405c47:	and    cl,BYTE PTR [ebx]
  405c49:	pop    eax
  405c4a:	pop    esi
  405c4b:	xor    eax,0x9d01baf2
  405c50:	pop    ss
  405c51:	call   0xd99382ab
  405c56:	popf   
  405c57:	sub    BYTE PTR [ebx+0x6],dh
  405c5a:	(bad)  
  405c5b:	js     0x405c45
  405c5d:	call   0x229b:0xa858eb64
  405c64:	aad    0x7
  405c66:	ins    DWORD PTR es:[edi],dx
  405c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c68:	addr16 cmp dh,bh
  405c6b:	les    ebx,FWORD PTR [edi+ebx*4-0x5165f947]
  405c72:	jle    0x405c34
  405c74:	pop    ds
  405c75:	xchg   ebp,eax
  405c76:	or     BYTE PTR [ebx+0x655b394a],0xe3
  405c7d:	inc    edx
  405c7e:	mov    ds,WORD PTR [ebx]
  405c80:	sbb    BYTE PTR [ecx+0x6d4ce6fa],ah
  405c86:	in     eax,dx
  405c87:	sub    BYTE PTR [esi-0x6b],ch
  405c8a:	mov    dl,0x97
  405c8c:	ficomp DWORD PTR [ecx+0x11]
  405c8f:	lods   eax,DWORD PTR ds:[esi]
  405c90:	or     eax,0xef930404
  405c95:	jbe    0x405c2d
  405c97:	mov    es,ecx
  405c99:	fisubr DWORD PTR [edx]
  405c9b:	ret    0xddaa
  405c9e:	ins    BYTE PTR es:[edi],dx
  405c9f:	pop    ds
  405ca0:	(bad)  
  405ca1:	xor    esp,DWORD PTR [esi]
  405ca3:	or     edi,esp
  405ca5:	retf   0x9a56
  405ca8:	push   ds
  405ca9:	mov    dl,0x45
  405cab:	and    eax,0xc483d60f
  405cb0:	jae    0x405d04
  405cb2:	ins    BYTE PTR es:[edi],dx
  405cb3:	mov    edi,0x52385a8c
  405cb8:	xor    bl,dh
  405cba:	fisttp WORD PTR [ebx+0x53b3ab26]
  405cc0:	ins    BYTE PTR es:[edi],dx
  405cc1:	or     al,ah
  405cc3:	mov    al,ds:0x57f5247d
  405cc8:	ret    0xa9c9
  405ccb:	shr    BYTE PTR [ebx+0x7e6a0226],1
  405cd1:	pop    ebx
  405cd2:	shl    DWORD PTR [ebx+esi*1-0x24063245],0x3e
  405cda:	jmp    0x4520:0xfacb1c83
  405ce1:	dec    ebp
  405ce2:	sbb    edi,eax
  405ce4:	ja     0x405cf7
  405ce6:	fwait
  405ce7:	sub    ecx,ebp
  405ce9:	imul   eax,ecx,0xfffffff9
  405cec:	imul   ebx,DWORD PTR [ebp-0x65],0x22c1e0b5
  405cf3:	ror    BYTE PTR [ebx-0x6e],cl
  405cf6:	mov    eax,0xde932bab
  405cfb:	popf   
  405cfc:	scas   al,BYTE PTR es:[edi]
  405cfd:	lods   al,BYTE PTR ds:[esi]
  405cfe:	and    bl,bh
  405d00:	(bad)  
  405d01:	mov    eax,0xccb40637
  405d06:	out    0x9f,al
  405d08:	dec    edi
  405d09:	into   
  405d0a:	adc    al,0x81
  405d0c:	and    al,0x54
  405d0e:	sbb    BYTE PTR [edi],bl
  405d10:	jno    0x405c9c
  405d12:	and    eax,0x5c5f21f7
  405d17:	popf   
  405d18:	mov    esp,0xe50d0924
  405d1d:	add    ah,BYTE PTR [edi+ebx*1+0x21d0baac]
  405d24:	jno    0x405d90
  405d26:	arpl   WORD PTR [ecx+0x4c],bx
  405d29:	add    al,0xee
  405d2b:	xor    DWORD PTR [esi+0x4],eax
  405d2e:	jnp    0x405d61
  405d30:	sbb    DWORD PTR [esp+edi*1],edx
  405d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d34:	mov    ss,WORD PTR [ecx+0x57c19e0]
  405d3a:	push   0x9838b4fa
  405d3f:	and    eax,0x8f948b37
  405d44:	retf   
  405d45:	pusha  
  405d46:	loopne 0x405d86
  405d48:	add    esi,DWORD PTR [edx+0x5b]
  405d4b:	nop
  405d4c:	or     BYTE PTR [edi+0x61],dl
  405d4f:	add    al,0x11
  405d51:	xlat   BYTE PTR ds:[ebx]
  405d52:	popa   
  405d53:	icebp  
  405d54:	mov    dh,0x88
  405d56:	xchg   edx,eax
  405d57:	ins    BYTE PTR es:[edi],dx
  405d58:	pusha  
  405d59:	ja     0x405d0a
  405d5b:	inc    ecx
  405d5c:	mov    bl,0x2a
  405d5e:	mov    ds:0x72fc8d43,eax
  405d63:	jmp    0xbdd8:0xd875742
  405d6a:	out    dx,eax
  405d6b:	jmp    0xb949:0x87e6cec7
  405d72:	or     BYTE PTR [ebx+0x3],0x1e
  405d76:	add    DWORD PTR [ebp+0x3],0xffffffe5
  405d7a:	(bad)  
  405d7b:	mov    ds:0xa1d50639,eax
  405d80:	cdq    
  405d81:	jl     0x405da2
  405d83:	cli    
  405d84:	cmc    
  405d85:	or     DWORD PTR [ecx+0x7a],eax
  405d88:	or     ah,0x76
  405d8b:	shr    BYTE PTR [ebx-0x2d],0xb0
  405d8f:	pop    ds
  405d90:	rcr    BYTE PTR [esi+0x6285181d],cl
  405d96:	fstp   QWORD PTR [ebp+0x1f1bce86]
  405d9c:	add    al,0x2a
  405d9e:	std    
  405d9f:	fwait
  405da0:	leave  
  405da1:	jmp    0x2202c5f5
  405da6:	mov    ds:0x3c585273,al
  405dab:	cmp    ebp,DWORD PTR [edx+0x2f8a4325]
  405db1:	xchg   esp,eax
  405db2:	dec    esp
  405db3:	inc    eax
  405db4:	mov    dh,0xbe
  405db6:	shl    BYTE PTR ds:0xdff3,cl
  405dbb:	imul   ebx,DWORD PTR [ecx],0x69
  405dbe:	sub    al,0x51
  405dc0:	lds    ebx,FWORD PTR [edx-0x45]
  405dc3:	outs   dx,DWORD PTR ds:[esi]
  405dc4:	push   es
  405dc5:	imul   edx,DWORD PTR [edx+0xc],0xf289ab2
  405dcc:	loop   0x405e4d
  405dce:	pop    ss
  405dcf:	xor    esp,DWORD PTR [ebx+0x749fb1e7]
  405dd5:	adc    al,0x82
  405dd7:	je     0x405d71
  405dd9:	sub    eax,0x28c5cd12
  405dde:	pop    eax
  405ddf:	out    0xe5,eax
  405de1:	cld    
  405de2:	xor    al,ah
  405de4:	in     eax,0x9
  405de6:	add    cl,0x1d
  405de9:	(bad)  
  405deb:	leave  
  405dec:	and    al,0x84
  405dee:	jp     0x405d95
  405df0:	mov    cs,WORD PTR [esi]
  405df2:	xchg   edi,eax
  405df3:	arpl   WORD PTR [eax-0x7c0d2be9],bx
  405df9:	pop    esp
  405dfa:	jp     0x405e34
  405dfc:	imul   ebx,DWORD PTR [edi-0x44],0x51
  405e00:	xacquire xchg DWORD PTR [ecx+0xd808469],ebx
  405e07:	add    DWORD PTR ds:0xa3108b7f,eax
  405e0d:	shl    DWORD PTR [eax+0x675e8323],cl
  405e13:	cmp    ecx,DWORD PTR ds:0xd64d8e4e
  405e19:	ds push ds
  405e1b:	scas   al,BYTE PTR es:[edi]
  405e1c:	nop
  405e1d:	adc    edx,DWORD PTR [ebp-0x7f]
  405e20:	pop    ds
  405e21:	mov    eax,0x495ef838
  405e26:	cmc    
  405e27:	sub    DWORD PTR [esp+edi*1+0xa404099],ebx
  405e2e:	mov    WORD PTR [ebp+ecx*2-0x7],cs
  405e32:	aas    
  405e33:	outs   dx,BYTE PTR ds:[esi]
  405e34:	arpl   WORD PTR ss:[eax+0x5d],dx
  405e38:	mov    ch,0x55
  405e3a:	test   eax,0x8dfab4be
  405e3f:	dec    edx
  405e40:	daa    
  405e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e42:	add    eax,0x76a2c451
  405e47:	test   al,bh
  405e49:	jg     0x405e95
  405e4b:	and    eax,0x8570bd0f
  405e50:	add    cl,BYTE PTR [edx]
  405e52:	adc    ch,BYTE PTR ds:0x8f804fad
  405e58:	bound  ebp,QWORD PTR [ebx+0x4a1ac268]
  405e5e:	cli    
  405e5f:	(bad)  
  405e60:	xchg   edi,eax
  405e61:	icebp  
  405e62:	add    bh,BYTE PTR [esi-0x2e469f30]
  405e68:	xchg   ebx,edx
  405e6a:	push   es
  405e6b:	(bad)  
  405e6d:	or     al,0xf9
  405e6f:	out    dx,eax
  405e70:	lea    edi,[ecx]
  405e72:	mov    eax,0x61c74ab0
  405e77:	dec    ebp
  405e78:	arpl   ax,ax
  405e7a:	stos   DWORD PTR es:[edi],eax
  405e7b:	fistp  QWORD PTR [ebx]
  405e7d:	sahf   
  405e7e:	mov    al,ds:0xcecbe550
  405e83:	ret    0xb77
  405e86:	xor    al,0x5c
  405e88:	pop    ds
  405e89:	mov    ebx,0x2ab145af
  405e8e:	adc    DWORD PTR [esp+ebx*1],edx
  405e91:	mov    al,ds:0xc58fa276
  405e96:	mov    esp,0xb2256b8f
  405e9b:	ret    0x9ab
  405e9e:	pop    esi
  405e9f:	jbe    0x405e81
  405ea1:	push   0x61
  405ea3:	jns    0x405e61
  405ea5:	sub    ch,BYTE PTR [edi]
  405ea7:	adc    BYTE PTR [ebp*2+0x1c08f56],dh
  405eae:	cmc    
  405eaf:	jmp    0xf4cb:0xca82a8f9
  405eb6:	push   ebp
  405eb7:	sbb    al,0x99
  405eb9:	jbe    0x405ed9
  405ebb:	fdivp  st(0),st
  405ebd:	sti    
  405ebe:	push   0x5115c0a9
  405ec3:	loope  0x405ec0
  405ec5:	int    0xfb
  405ec7:	mov    dl,0xd4
  405ec9:	push   DWORD PTR [edi+0x25a14e28]
  405ecf:	xor    DWORD PTR [ecx-0x60c40ba1],edx
  405ed5:	scas   eax,DWORD PTR es:[edi]
  405ed6:	scas   eax,DWORD PTR es:[edi]
  405ed7:	es add al,0x2e
  405eda:	pop    eax
  405edb:	and    al,0xfa
  405edd:	pop    ds
  405ede:	sub    BYTE PTR [edx-0x75],0xa2
  405ee2:	inc    ecx
  405ee3:	jbe    0x405ecd
  405ee5:	das    
  405ee6:	in     al,0x50
  405ee8:	test   esi,edx
  405eea:	jb     0x405ee5
  405eec:	or     al,0x20
  405eee:	bts    eax,ebx
  405ef1:	hlt    
  405ef2:	cmp    al,dh
  405ef4:	test   al,0x38
  405ef6:	rcr    DWORD PTR [esi+0x6415f613],1
  405efc:	mov    ds:0xba303403,eax
  405f01:	div    DWORD PTR ds:0x3916209
  405f07:	aas    
  405f08:	dec    edi
  405f09:	inc    ebx
  405f0a:	xor    dl,ah
  405f0c:	push   esi
  405f0d:	add    eax,DWORD PTR [esi-0x5ce6286]
  405f13:	inc    esp
  405f14:	sbb    eax,0x5a35baa6
  405f19:	sbb    ch,BYTE PTR [eax]
  405f1b:	add    DWORD PTR [eax],eax
  405f1d:	in     al,0xc2
  405f1f:	fisttp WORD PTR [edi+0x255af3c1]
  405f25:	fcmove st,st(6)
  405f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f28:	lea    edx,[ebp+0x1a33fbad]
  405f2e:	or     bh,BYTE PTR [edx+0x2d6e1879]
  405f34:	cmp    al,BYTE PTR [edx+0x40da013c]
  405f3a:	mov    esp,0xb6e0cf2c
  405f3f:	clc    
  405f40:	push   0xb8da46b0
  405f45:	call   0xe6eb:0x194c9f9f
  405f4c:	sbb    al,0x25
  405f4e:	popf   
  405f4f:	push   edx
  405f50:	xchg   esp,eax
  405f51:	sahf   
  405f52:	xchg   esp,eax
  405f53:	mov    ch,0x80
  405f55:	xchg   dl,al
  405f57:	dec    esi
  405f58:	pop    esi
  405f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f5a:	add    DWORD PTR [ebx-0x12],edi
  405f5d:	cmp    al,0x5a
  405f5f:	cmc    
  405f60:	xchg   esp,eax
  405f61:	pop    ss
  405f62:	mov    ?,ebp
  405f64:	in     eax,0x8a
  405f66:	adc    DWORD PTR [edi-0x1],esi
  405f69:	js     0x405fc1
  405f6b:	leave  
  405f6c:	inc    edi
  405f6d:	or     esi,DWORD PTR [eax+0x2de9c333]
  405f73:	stos   DWORD PTR es:[edi],eax
  405f74:	add    bh,0x11
  405f77:	test   eax,0x21b923a5
  405f7c:	jmp    0xd06c:0xdc4950e1
  405f83:	aaa    
  405f84:	out    dx,eax
  405f85:	xlat   BYTE PTR ds:[ebx]
  405f86:	es mov eax,0x1b7776c8
  405f8c:	push   esi
  405f8d:	adc    al,0xa3
  405f8f:	mov    edx,0x2be4f315
  405f94:	dec    edi
  405f95:	push   eax
  405f96:	mov    BYTE PTR [ebx-0x249f7f76],bl
  405f9c:	cmp    BYTE PTR [esi],0x5e
  405f9f:	mov    ch,0xfa
  405fa1:	sbb    BYTE PTR [esi+0x1f],cl
  405fa4:	pushf  
  405fa5:	add    bh,BYTE PTR [ebx-0xd]
  405fa8:	arpl   WORD PTR [ebx-0xcd165e7],di
  405fae:	xchg   edx,eax
  405faf:	stos   BYTE PTR es:[edi],al
  405fb0:	hlt    
  405fb1:	and    BYTE PTR [ecx+0x7ec63f27],bl
  405fb7:	mov    edi,es
  405fb9:	xchg   ebp,eax
  405fba:	popf   
  405fbb:	loopne 0x405f70
  405fbd:	icebp  
  405fbe:	pop    ds
  405fbf:	xor    esp,DWORD PTR [esi-0xb]
  405fc2:	mov    bh,0x1a
  405fc4:	enter  0xfb0b,0xe3
  405fc8:	jl     0x406049
  405fca:	jo     0x405ff2
  405fcc:	adc    DWORD PTR [ebx+esi*2+0x2a075e4],0x2c
  405fd4:	sub    dh,BYTE PTR [eax]
  405fd6:	pop    ss
  405fd7:	ror    BYTE PTR [esi-0x1a],0xa5
  405fdb:	xchg   DWORD PTR [ebp-0x7f],edx
  405fde:	pop    esp
  405fdf:	cli    
  405fe0:	push   es
  405fe1:	adc    esp,DWORD PTR [ebp+0x53]
  405fe4:	lds    edi,FWORD PTR [ecx+eax*4+0x55]
  405fe8:	lods   al,BYTE PTR ds:[esi]
  405fe9:	and    BYTE PTR [eax-0x1e],al
  405fec:	in     eax,dx
  405fed:	shl    DWORD PTR [eax-0x2f],1
  405ff0:	popf   
  405ff1:	jmp    0xbecb84f3
  405ff6:	and    esp,DWORD PTR [eax+eax*8]
  405ff9:	and    DWORD PTR [esi-0x20797390],esi
  405fff:	push   edi
  406000:	jnp    0x40603e
  406002:	xchg   ebx,eax
  406003:	nop
  406004:	xchg   ebx,eax
  406005:	and    ebp,DWORD PTR [eax-0xf835c14]
  40600b:	push   edx
  40600c:	outs   dx,DWORD PTR ds:[esi]
  40600d:	ficom  WORD PTR [eax+0x29]
  406010:	add    eax,0xa3c7ec43
  406015:	rcl    BYTE PTR [ecx],cl
  406017:	rcl    DWORD PTR [esi],cl
  406019:	int    0x95
  40601b:	mov    dh,BYTE PTR [edi]
  40601d:	lds    ebx,FWORD PTR [ecx+eax*1]
  406020:	fdiv   st(0),st
  406022:	out    0x89,eax
  406024:	push   0xbaebcb2a
  406029:	js     0x406055
  40602b:	jg     0x40606d
  40602d:	push   ss
  40602e:	mov    eax,ds:0x4375c23b
  406033:	or     eax,0x3a23469e
  406038:	mov    ebp,edi
  40603a:	stos   BYTE PTR es:[edi],al
  40603b:	push   cs
  40603c:	jp     0x406004
  40603e:	les    esi,FWORD PTR [ebx-0x19]
  406041:	adc    al,0x9f
  406043:	lea    ecx,[edi+0x4bd715cd]
  406049:	dec    ecx
  40604a:	fcom   DWORD PTR [edi-0x1b03d775]
  406050:	gs in  eax,dx
  406052:	xchg   edi,eax
  406053:	pushf  
  406054:	push   0x3d
  406056:	ins    BYTE PTR es:[edi],dx
  406057:	mov    cl,dl
  406059:	inc    ebx
  40605a:	adc    esi,DWORD PTR [ebx]
  40605c:	cli    
  40605d:	int    0x97
  40605f:	popa   
  406060:	inc    eax
  406061:	jmp    0x4060df
  406063:	jecxz  0x406029
  406065:	mov    ebx,0x3a07ce7e
  40606a:	mov    eax,0xf3acacc8
  40606f:	ins    DWORD PTR es:[edi],dx
  406070:	sub    al,0xcc
  406072:	nop
  406073:	and    esi,DWORD PTR [ebx-0x64c387b8]
  406079:	scas   al,BYTE PTR es:[edi]
  40607a:	aaa    
  40607b:	int    0xe6
  40607d:	fwait
  40607e:	call   0xca9b:0xd36d0686
  406085:	iret   
  406086:	or     DWORD PTR [edi+0x15],ebp
  406089:	inc    ecx
  40608a:	into   
  40608b:	cwde   
  40608c:	loopne 0x406085
  40608e:	sub    ebx,ebp
  406090:	cmp    dh,dh
  406092:	jns    0x4060e2
  406094:	ficom  WORD PTR [esi]
  406096:	add    al,0xda
  406098:	icebp  
  406099:	int    0x7a
  40609b:	push   ecx
  40609c:	push   ebx
  40609d:	fdiv   st(3),st
  40609f:	fcom   DWORD PTR [ebp+0x57]
  4060a2:	stos   DWORD PTR es:[edi],eax
  4060a3:	call   0xff50:0xa109e7bd
  4060aa:	sub    BYTE PTR [ecx+0x2d653fc],bh
  4060b0:	std    
  4060b1:	jno    0x4060b1
  4060b3:	gs dec edi
  4060b5:	addr16 dec ebx
  4060b7:	mov    edx,0x917ff6b5
  4060bc:	xchg   BYTE PTR [esi-0x76671e8c],ah
  4060c2:	and    BYTE PTR [edi+0x18b42b4],0xe9
  4060c9:	ja     0x40611f
  4060cb:	aas    
  4060cc:	ror    BYTE PTR [ecx+0x6877370c],1
  4060d2:	push   eax
  4060d3:	xchg   ecx,eax
  4060d4:	outs   dx,DWORD PTR ds:[esi]
  4060d5:	xchg   esp,eax
  4060d6:	sub    BYTE PTR [edx],bl
  4060d8:	jae    0x406078
  4060da:	inc    edx
  4060db:	outs   dx,DWORD PTR ds:[esi]
  4060dc:	fldenv [eax-0x5d5f4a65]
  4060e2:	add    DWORD PTR [eax+eiz*1+0x539d45c7],esi
  4060e9:	es nop
  4060eb:	pop    edi
  4060ec:	pop    edx
  4060ed:	ins    DWORD PTR es:[edi],dx
  4060ee:	mov    edi,0x1fc6c9e6
  4060f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060f4:	icebp  
  4060f5:	sub    BYTE PTR [esi-0x4bdb289e],dh
  4060fb:	ficomp DWORD PTR [ecx]
  4060fd:	xchg   edi,esp
  4060ff:	ins    BYTE PTR es:[edi],dx
  406100:	out    0x6a,eax
  406102:	je     0x40612f
  406104:	std    
  406105:	mov    edi,0xcead3bdf
  40610a:	lock inc edx
  40610c:	mov    al,BYTE PTR [eax-0x11]
  40610f:	xchg   esp,eax
  406110:	das    
  406111:	test   DWORD PTR [esp+edx*8],ebx
  406114:	fadd   st,st(5)
  406116:	pop    edx
  406117:	mov    dh,0x52
  406119:	mov    bl,0x46
  40611b:	inc    esp
  40611c:	sub    eax,0x79d806ac
  406121:	dec    ecx
  406122:	xor    BYTE PTR [ecx],0xe
  406125:	mov    bl,0xa8
  406127:	(bad)  
  406128:	pushf  
  406129:	xor    bh,BYTE PTR cs:[edi+0x2]
  40612d:	repz loopne 0x406164
  406130:	push   0x3f319af1
  406135:	push   ss
  406136:	add    ecx,DWORD PTR [esi-0x62b08095]
  40613c:	adc    ch,0x55
  40613f:	fsub   QWORD PTR [esi+edi*8]
  406142:	test   eax,0x852b9f99
  406147:	jle    0x4061b0
  406149:	mov    eax,ds:0x2de696c5
  40614e:	and    eax,0xbab59f90
  406153:	mov    ecx,0x5826d207
  406158:	(bad)  
  406159:	xchg   DWORD PTR [eax],ebx
  40615b:	push   ebx
  40615c:	pop    ss
  40615d:	iret   
  40615e:	out    0xc5,eax
  406160:	or     eax,0x115ce24f
  406165:	stos   DWORD PTR es:[edi],eax
  406166:	xchg   esp,eax
  406167:	ror    DWORD PTR [ebp+0x2a],0x53
  40616b:	or     ah,BYTE PTR [esi-0x829578a]
  406171:	adc    ebp,eax
  406173:	popa   
  406174:	sar    edi,0x2b
  406177:	mov    al,ds:0xd18bb792
  40617c:	xor    edx,ebx
  40617e:	ins    BYTE PTR es:[edi],dx
  40617f:	fld    TBYTE PTR [edx]
  406181:	loopne 0x406138
  406183:	sbb    BYTE PTR [ebx-0x409ee91a],bh
  406189:	in     eax,dx
  40618a:	ja     0x406164
  40618c:	dec    esi
  40618d:	sahf   
  40618e:	push   ss
  40618f:	int3   
  406190:	mov    edi,0xe6af9e5f
  406195:	push   ebx
  406196:	test   BYTE PTR [edi-0x6e],ch
  406199:	adc    ecx,0x110e21b4
  40619f:	inc    esi
  4061a0:	sbb    eax,0x46f11da1
  4061a5:	push   esp
  4061a6:	and    eax,0xc5a1d10a
  4061ab:	push   es
  4061ac:	in     al,dx
  4061ad:	ins    DWORD PTR es:[edi],dx
  4061ae:	ja     0x4061b0
  4061b0:	loope  0x4061f1
  4061b2:	outs   dx,DWORD PTR ds:[esi]
  4061b3:	sbb    esi,edi
  4061b5:	test   al,0xad
  4061b7:	mov    al,0xe
  4061b9:	scas   eax,DWORD PTR es:[edi]
  4061ba:	inc    edi
  4061bb:	jnp    0x4061bd
  4061bd:	imul   eax,DWORD PTR [esi+eax*4+0x5305ddfa],0xffffffc1
  4061c5:	jae    0x406208
  4061c7:	lods   al,BYTE PTR ds:[esi]
  4061c8:	jp     0x406203
  4061ca:	aad    0x2d
  4061cc:	scas   al,BYTE PTR es:[edi]
  4061cd:	cmp    DWORD PTR [ebx],esi
  4061cf:	dec    ebx
  4061d0:	adc    DWORD PTR [eax],ebx
  4061d2:	es out 0xb7,eax
  4061d5:	mov    cl,0xbb
  4061d7:	jnp    0x4061a1
  4061d9:	dec    ecx
  4061da:	cmc    
  4061db:	loopne 0x4061a2
  4061dd:	push   0x76
  4061df:	mov    esp,0xaa01ee77
  4061e4:	nop
  4061e5:	sar    al,1
  4061e7:	push   es
  4061e8:	mov    dh,0x70
  4061ea:	push   esp
  4061eb:	mov    DWORD PTR ds:0x31ec,eax
  4061f0:	cld    
  4061f1:	inc    edi
  4061f2:	push   esp
  4061f3:	mov    fs,ebx
  4061f5:	(bad)  [ecx]
  4061f7:	sti    
  4061f8:	nop
  4061f9:	sbb    ah,BYTE PTR [eax+0x48c5dbfe]
  4061ff:	and    al,0x45
  406201:	lods   eax,DWORD PTR ds:[esi]
  406202:	push   edx
  406203:	jo     0x4061a7
  406205:	loope  0x40621d
  406207:	aaa    
  406208:	retf   0xca0d
  40620b:	mov    ss,WORD PTR ds:0x821c7b86
  406211:	xor    ebp,DWORD PTR [esi]
  406213:	adc    bh,BYTE PTR es:[ebp+ebp*2+0x117e94a3]
  40621b:	inc    esi
  40621c:	daa    
  40621d:	std    
  40621e:	repz add al,0xed
  406221:	xor    ebp,eax
  406223:	cmc    
  406224:	dec    esi
  406225:	add    edx,DWORD PTR [edi+0x6c]
  406228:	rcr    DWORD PTR [ecx+0x33],1
  40622b:	inc    ebp
  40622c:	jle    0x406219
  40622e:	dec    edi
  40622f:	icebp  
  406230:	mov    es,edi
  406232:	jns    0x40624e
  406234:	fcom   st(6)
  406236:	lea    ecx,[edi-0xd]
  406239:	add    esi,ecx
  40623b:	test   al,0xf6
  40623d:	ret    
  40623e:	add    BYTE PTR [edi+0x5fc2a3c5],dl
  406244:	aas    
  406245:	pop    esi
  406246:	ret    0x81e2
  406249:	xor    BYTE PTR [edx+0x31],0xdf
  40624d:	xchg   BYTE PTR [eax+0x4a],al
  406250:	lahf   
  406251:	test   DWORD PTR [ebx],ecx
  406253:	cdq    
  406254:	dec    edx
  406255:	sar    esp,0x77
  406258:	ins    BYTE PTR es:[edi],dx
  406259:	ins    DWORD PTR es:[edi],dx
  40625a:	jmp    0x40621f
  40625c:	mov    BYTE PTR [edx-0x71d6747d],al
  406262:	pop    ebp
  406263:	push   esp
  406264:	retf   
  406265:	cs test eax,0x9c10c74a
  40626b:	xchg   edx,eax
  40626c:	aas    
  40626d:	dec    edi
  40626e:	neg    BYTE PTR [edi+ecx*1+0x26b71c45]
  406275:	push   ebp
  406276:	hlt    
  406277:	stos   DWORD PTR es:[edi],eax
  406278:	mov    edx,0x6c9ba889
  40627d:	xlat   BYTE PTR ds:[ebx]
  40627e:	out    0x51,al
  406280:	mov    ecx,esi
  406282:	(bad)  
  406283:	retf   0x9bce
  406286:	adc    eax,0x72f29c20
  40628b:	cdq    
  40628c:	and    cl,BYTE PTR [edi+0x1a]
  40628f:	mov    dl,0x14
  406291:	jbe    0x4062e3
  406293:	dec    edi
  406294:	pop    ecx
  406295:	mov    eax,0x5d656ce9
  40629a:	js     0x406273
  40629c:	dec    sp
  40629e:	cld    
  40629f:	pop    ebx
  4062a0:	popa   
  4062a1:	int    0xe5
  4062a3:	fldenv [ebp+0x49dc23e3]
  4062a9:	xchg   ebp,eax
  4062aa:	add    DWORD PTR [edx+edx*4+0x7f65d6d1],ebp
  4062b1:	pop    ecx
  4062b2:	dec    esi
  4062b3:	arpl   WORD PTR [ebp-0x27af3ee9],cx
  4062b9:	xchg   esp,eax
  4062ba:	push   0x614a6940
  4062bf:	(bad)  
  4062c0:	adc    BYTE PTR [esi-0x23],ch
  4062c3:	mov    edi,0xa6152d80
  4062c8:	cdq    
  4062c9:	and    ah,cl
  4062cb:	jl     0x4062e8
  4062cd:	push   0xfffffff8
  4062cf:	xor    eax,0x203f1c3
  4062d4:	lds    eax,FWORD PTR [ebp-0x4a5bec11]
  4062da:	xlat   BYTE PTR ds:[ebx]
  4062db:	or     DWORD PTR [esi],edi
  4062dd:	fstp   TBYTE PTR [eax-0x325f13d2]
  4062e3:	push   ebp
  4062e4:	dec    ebx
  4062e5:	push   cs
  4062e6:	imul   ebx,DWORD PTR [esi+0x3e],0x85daed6a
  4062ed:	ret    
  4062ee:	mov    ds:0xb6972f26,al
  4062f3:	jmp    0x406351
  4062f5:	sub    al,0x8e
  4062f7:	mov    bh,0xa1
  4062f9:	ins    DWORD PTR es:[edi],dx
  4062fa:	sbb    al,dl
  4062fc:	pop    ecx
  4062fd:	adc    eax,0xdaf7e00d
  406302:	mov    ebx,edx
  406304:	jg     0x40632c
  406306:	dec    edx
  406307:	in     eax,dx
  406308:	cli    
  406309:	cmp    DWORD PTR [esi+eiz*8+0xed72381],ecx
  406310:	out    dx,al
  406311:	and    ebp,DWORD PTR [ebx-0x73]
  406314:	aas    
  406315:	mov    ebx,esi
  406317:	xchg   ebx,eax
  406318:	xor    DWORD PTR [esi+ebx*4+0x65dfb872],esp
  40631f:	es mov dh,0x1e
  406322:	test   al,0xf6
  406324:	add    al,0xb2
  406326:	mov    esp,edx
  406328:	das    
  406329:	arpl   WORD PTR [eax+0x75],ax
  40632c:	adc    BYTE PTR [eax+0x29],dh
  40632f:	pop    es
  406330:	pop    ebp
  406331:	pop    eax
  406332:	icebp  
  406333:	in     al,dx
  406334:	dec    eax
  406335:	and    ebx,DWORD PTR [edi+0x32f7b0d0]
  40633b:	sahf   
  40633c:	sub    BYTE PTR [esi-0x42],ah
  40633f:	sub    bh,cl
  406341:	xor    al,0x85
  406343:	popf   
  406344:	and    esi,ebx
  406346:	sbb    ah,ah
  406348:	pop    ecx
  406349:	pop    ebx
  40634a:	add    BYTE PTR [esi+0x12],0xb
  40634e:	fist   WORD PTR [ebp+0x391a606c]
  406354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406355:	sti    
  406356:	pop    esp
  406357:	mov    ds:0x82cc8072,al
  40635c:	sbb    ecx,DWORD PTR [edx+0x4b]
  40635f:	cli    
  406360:	or     DWORD PTR [ebx+0x7e5cc8a5],0xc48dc2bf
  40636a:	pop    ebp
  40636b:	pop    eax
  40636c:	bound  ecx,QWORD PTR [edi+0x37eadd37]
  406372:	mov    ebp,0xc1c2b2f6
  406377:	push   edx
  406378:	push   edi
  406379:	shl    edi,cl
  40637b:	fld    DWORD PTR [edi-0x1d231e7e]
  406381:	(bad)  
  406383:	dec    eax
  406384:	pop    edi
  406385:	mov    ecx,0xd1177b94
  40638a:	sbb    bl,BYTE PTR [edi+eiz*2]
  40638d:	dec    eax
  40638e:	popf   
  40638f:	cmp    al,0xe0
  406391:	or     DWORD PTR [edx],ebx
  406393:	cmp    eax,0x84748df8
  406398:	xor    al,0xd8
  40639a:	retf   
  40639b:	push   ebp
  40639c:	nop
  40639d:	push   ss
  40639e:	mov    DWORD PTR [ebp-0x6cd31603],0x132754a0
  4063a8:	mov    ds:0xa6bbcdd7,al
  4063ad:	jbe    0x406420
  4063af:	psubq  mm1,QWORD PTR [edx-0x37ec0e5a]
  4063b6:	fnstenv [eax+0x5615596]
  4063bc:	push   0xffffffc2
  4063be:	mov    esp,0x110e2c29
  4063c3:	mov    ecx,0x7c1a75a3
  4063c8:	and    DWORD PTR [eax],ebp
  4063ca:	fsubp  st(0),st
  4063cc:	sahf   
  4063cd:	mov    ebp,0x4074e186
  4063d2:	or     eax,0xfdad4288
  4063d7:	in     al,dx
  4063d8:	dec    ebp
  4063d9:	ficom  WORD PTR [edx-0x6b72f282]
  4063df:	imul   eax,DWORD PTR [edi-0x25],0xccaadc72
  4063e6:	int3   
  4063e7:	inc    DWORD PTR [edx+0x27ad975f]
  4063ed:	dec    ebx
  4063ee:	mov    ds:0x7f4438b5,al
  4063f3:	loope  0x4063a5
  4063f5:	jne    0x406410
  4063f7:	test   DWORD PTR [eax+0x7],esp
  4063fa:	jg     0x406409
  4063fc:	mov    ah,bh
  4063fe:	jnp    0x406421
  406400:	sbb    dh,BYTE PTR [ecx-0x25]
  406403:	pop    esp
  406404:	bound  ebp,QWORD PTR [ebx+eiz*8+0x3764e198]
  40640b:	(bad)  
  40640c:	cmc    
  40640d:	sbb    bl,BYTE PTR ds:0xdca2cc56
  406413:	push   cs
  406414:	sbb    bl,cl
  406416:	outs   dx,DWORD PTR ds:[esi]
  406417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406418:	scas   eax,DWORD PTR es:[edi]
  406419:	in     eax,dx
  40641a:	and    al,0x7a
  40641c:	xchg   edi,eax
  40641d:	jl     0x4063fd
  40641f:	jmp    0xee7e1082
  406424:	xor    DWORD PTR [ecx],edx
  406426:	mov    bl,0x9e
  406428:	xchg   ebp,eax
  406429:	pop    eax
  40642a:	or     al,0x62
  40642c:	xchg   ebp,ebp
  40642e:	mov    bl,0xdb
  406430:	outs   dx,DWORD PTR ds:[esi]
  406431:	ret    
  406432:	and    DWORD PTR [ecx+edx*4-0x49],0xffffffc4
  406437:	popa   
  406438:	ja     0x4064b0
  40643a:	push   0x10
  40643c:	out    dx,eax
  40643d:	mov    dh,0x12
  40643f:	repnz clc 
  406441:	nop
  406442:	cwde   
  406443:	or     bh,cl
  406445:	fs mov ah,0x4d
  406448:	sti    
  406449:	sub    eax,DWORD PTR [eax]
  40644b:	cmp    ch,dh
  40644d:	xor    BYTE PTR [esp],dh
  406450:	push   cs
  406451:	int    0x44
  406453:	xor    DWORD PTR [edx+0x1d43906f],ebp
  406459:	inc    edx
  40645a:	pop    ds
  40645b:	out    0x25,al
  40645d:	mov    al,dl
  40645f:	(bad)  
  406460:	imul   eax,ecx,0xb9879ece
  406466:	mov    dh,0xba
  406468:	and    al,ch
  40646a:	adc    al,0x52
  40646c:	mov    ebp,0x672a3bdf
  406471:	scas   eax,DWORD PTR es:[edi]
  406472:	call   0x4ad1:0xea7e2427
  406479:	xor    edx,DWORD PTR [esi]
  40647b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40647c:	in     al,dx
  40647d:	std    
  40647e:	mov    eax,ds:0x7ba38be8
  406483:	(bad)  
  406484:	out    dx,al
  406485:	(bad)  
  406486:	mov    dh,0x3d
  406488:	pop    ecx
  406489:	dec    ebx
  40648a:	sub    eax,0x21e8ae4b
  40648f:	pop    eax
  406490:	mov    cl,0x3
  406492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406493:	bound  esp,QWORD PTR [edi]
  406495:	add    ebx,ebx
  406497:	sti    
  406498:	pop    edi
  406499:	jmp    0x3c0a:0xc866fe9d
  4064a0:	sbb    eax,0xf460d41b
  4064a5:	mov    ds:0xd979c74a,al
  4064aa:	push   ebx
  4064ab:	test   DWORD PTR [edi],0x8b553dec
  4064b1:	jne    0x40647a
  4064b3:	cdq    
  4064b4:	xchg   ebp,eax
  4064b5:	jns    0x40650d
  4064b7:	aas    
  4064b8:	pop    esi
  4064b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ba:	out    0x9a,al
  4064bc:	mov    esi,0xbf705c2e
  4064c1:	or     eax,edx
  4064c3:	cmp    DWORD PTR [eax],esi
  4064c5:	aam    0xc2
  4064c7:	test   eax,0xaac351fb
  4064cc:	pop    ecx
  4064cd:	into   
  4064ce:	stc    
  4064cf:	and    DWORD PTR gs:[ebx],ebx
  4064d2:	push   esp
  4064d3:	aaa    
  4064d4:	mov    al,0x95
  4064d6:	cmp    ch,dh
  4064d8:	add    cl,BYTE PTR [edi-0x38]
  4064db:	rol    DWORD PTR [edi+0x54],cl
  4064de:	mov    bl,0xe6
  4064e0:	add    eax,0xae9356d7
  4064e5:	lea    eax,fs:[edx+eax*4+0x1a59e47d]
  4064ed:	sub    BYTE PTR [edx],0x32
  4064f0:	xor    edx,ebx
  4064f2:	inc    ecx
  4064f3:	mov    DWORD PTR [ebp+0x473ebc89],eax
  4064f9:	adc    al,0x66
  4064fb:	mov    al,ds:0xbed23e01
  406500:	pop    ecx
  406501:	in     eax,dx
  406502:	loop   0x40650a
  406504:	mov    dh,0x82
  406506:	xor    al,0x81
  406508:	mov    ds:0x463d4b00,al
  40650d:	xor    eax,DWORD PTR [eax+esi*1]
  406510:	leave  
  406511:	jo     0x4064db
  406513:	pusha  
  406514:	sar    BYTE PTR [esi],0x9c
  406517:	stc    
  406518:	cli    
  406519:	mov    esi,0x70efb960
  40651e:	jmp    0x40654d
  406520:	inc    ebp
  406521:	push   ss
  406522:	pop    edi
  406523:	fs jo  0x406514
  406526:	fisub  WORD PTR [ebx+0x6c]
  406529:	pusha  
  40652a:	pop    edi
  40652b:	jl     0x4064b4
  40652d:	jo     0x4065a1
  40652f:	mov    WORD PTR [ebx+0xec43641],cs
  406535:	sub    si,di
  406538:	(bad)  
  406539:	addr16 enter 0x20d1,0xaf
  40653e:	mov    bl,0xab
  406540:	dec    ecx
  406541:	dec    esi
  406542:	ror    bh,0x4e
  406545:	pop    edi
  406546:	add    BYTE PTR [ebx-0x28],cl
  406549:	lock (bad) 
  40654b:	sbb    esp,DWORD PTR [ecx]
  40654d:	pusha  
  40654e:	dec    edi
  40654f:	repz mov ds:0xd8f09c60,eax
  406555:	ins    BYTE PTR es:[edi],dx
  406556:	adc    dh,BYTE PTR [edx-0x22]
  406559:	xchg   DWORD PTR [ecx],esi
  40655b:	(bad)  
  40655c:	hlt    
  40655d:	adc    eax,0xdb9ba8e3
  406562:	leave  
  406563:	pop    edx
  406564:	pusha  
  406565:	clc    
  406566:	mul    BYTE PTR [esi-0x4c]
  406569:	adc    eax,0x407c3b66
  40656e:	cmp    edi,DWORD PTR [esi+0x1]
  406571:	fld    DWORD PTR [edi]
  406573:	stos   BYTE PTR es:[edi],al
  406574:	outs   dx,BYTE PTR ds:[esi]
  406575:	repz aam 0xb5
  406578:	dec    eax
  406579:	aaa    
  40657a:	icebp  
  40657b:	inc    edx
  40657c:	mov    dh,0xe8
  40657e:	loop   0x4065ba
  406580:	jle    0x40654d
  406582:	das    
  406583:	into   
  406584:	jl     0x4065f5
  406586:	inc    ebx
  406587:	inc    ebp
  406588:	repnz retf 0x91fb
  40658c:	jnp    0x4065fd
  40658e:	xor    bl,bh
  406590:	aas    
  406591:	dec    ebx
  406592:	add    al,0x10
  406594:	dec    eax
  406595:	fistp  QWORD PTR [eax-0x5d]
  406598:	sbb    eax,0x3e1d5c7e
  40659d:	test   al,0x50
  40659f:	leave  
  4065a0:	lock sbb al,0x41
  4065a3:	mov    DWORD PTR [edi],esp
  4065a5:	cmp    eax,0x9f4bdb0
  4065aa:	xchg   ebp,eax
  4065ab:	jmp    0x362d3e5c
  4065b0:	in     eax,0x49
  4065b2:	inc    edi
  4065b3:	inc    ebp
  4065b4:	or     dh,BYTE PTR [eax]
  4065b6:	xchg   edi,eax
  4065b7:	into   
  4065b8:	adc    DWORD PTR [edi+ebx*8],ecx
  4065bb:	or     eax,0x1231fa2
  4065c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065c1:	cld    
  4065c2:	cmp    ch,BYTE PTR [edi+0x721a0c31]
  4065c8:	sub    DWORD PTR ds:0x841124a8,eax
  4065ce:	adc    eax,0x2f0dfc0d
  4065d3:	lock leave 
  4065d5:	or     edi,DWORD PTR [ebx]
  4065d7:	sar    BYTE PTR [edi+0x15],1
  4065da:	retf   
  4065db:	nop
  4065dc:	fmul   DWORD PTR [edi]
  4065de:	rcl    DWORD PTR [ecx],1
  4065e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065e1:	sbb    al,0x81
  4065e3:	or     eax,eax
  4065e5:	push   ss
  4065e6:	dec    esp
  4065e7:	sub    BYTE PTR [eax-0x7c9bd58b],bl
  4065ed:	ins    DWORD PTR es:[edi],dx
  4065ee:	test   ebx,0x80fa03b6
  4065f4:	jmp    0x342b:0xd5294367
  4065fb:	(bad)  [edx-0x30]
  4065fe:	ds jecxz 0x4065a7
  406601:	cmp    edx,esi
  406603:	xchg   DWORD PTR [edi+esi*1-0x3ead798e],ebx
  40660a:	ret    0xb40f
  40660d:	ficomp DWORD PTR [ecx-0x4da0e35d]
  406613:	mov    ds:0x22e6b4e9,al
  406618:	push   esi
  406619:	cwde   
  40661a:	inc    eax
  40661b:	xor    DWORD PTR [eax],esp
  40661d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40661e:	or     BYTE PTR [esp+edx*8],ch
  406621:	push   ebx
  406622:	mov    eax,ds:0xfbcf6ccf
  406627:	cli    
  406628:	inc    eax
  406629:	fisubr DWORD PTR [ebx-0x10135f8c]
  40662f:	mov    bh,0x94
  406631:	or     BYTE PTR [edx-0x32],ah
  406634:	scas   al,BYTE PTR es:[edi]
  406635:	mov    ebp,0x12ac1e9b
  40663a:	(bad)  
  40663b:	push   bx
  40663d:	ror    BYTE PTR [ebx+edx*4-0x37],0xdf
  406642:	(bad)  
  406643:	sbb    esp,esp
  406645:	xchg   ecx,eax
  406646:	and    DWORD PTR [eax+0x42],0xffffff96
  40664a:	icebp  
  40664b:	lock fild QWORD PTR [edi-0x15bbd5e3]
  406652:	ins    BYTE PTR es:[edi],dx
  406653:	pop    edx
  406654:	in     al,0x57
  406656:	call   0xbb331219
  40665b:	(bad)  
  40665c:	sub    esp,DWORD PTR ds:0x64d08995
  406662:	not    DWORD PTR [ebp+ecx*8+0x21]
  406666:	fdiv   QWORD PTR ds:0x5dc55b59
  40666c:	test   dh,0x95
  40666f:	cmp    bh,BYTE PTR [ecx+0x66]
  406672:	les    eax,FWORD PTR [ecx+0x6b]
  406675:	xlat   BYTE PTR ds:[ebx]
  406676:	and    DWORD PTR [ecx+esi*8-0x48],esi
  40667a:	mov    al,ds:0x2aeb2905
  40667f:	or     BYTE PTR [eax+edx*1],dl
  406682:	data16 mov ch,0xf2
  406685:	jp     0x4066ab
  406687:	inc    eax
  406688:	fbstp  TBYTE PTR [eax-0x25fafe15]
  40668e:	int3   
  40668f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406690:	xor    al,0xdd
  406692:	dec    edx
  406693:	mov    eax,esi
  406695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406696:	dec    esp
  406697:	outs   dx,DWORD PTR ds:[esi]
  406698:	mov    bh,0xf0
  40669a:	and    DWORD PTR [ecx+0x50],eax
  40669d:	sbb    eax,0xee798b4d
  4066a2:	mov    edx,0xc4d01776
  4066a7:	cwde   
  4066a8:	ja     0x406631
  4066aa:	push   eax
  4066ab:	in     al,dx
  4066ac:	xchg   esi,eax
  4066ad:	jecxz  0x40671c
  4066af:	add    ah,BYTE PTR [esi+esi*8-0x2b]
  4066b3:	jecxz  0x4066e2
  4066b5:	mul    bh
  4066b7:	and    al,0xf1
  4066b9:	push   edx
  4066ba:	aam    0xe0
  4066bc:	mov    es,WORD PTR [ebp-0x5a98b3cf]
  4066c2:	aaa    
  4066c3:	cwde   
  4066c4:	loopne 0x406649
  4066c6:	push   eax
  4066c7:	adc    DWORD PTR [edi+0x75],ebp
  4066ca:	xchg   DWORD PTR ds:0xf070b382,ebx
  4066d0:	cmp    DWORD PTR [ebp+0x371b1ed5],ecx
  4066d6:	int    0xf7
  4066d8:	sbb    eax,0xa987e608
  4066dd:	xchg   dl,bl
  4066df:	add    BYTE PTR [edx],bh
  4066e1:	inc    edi
  4066e2:	inc    ebx
  4066e3:	and    DWORD PTR [ebx],edi
  4066e5:	or     al,0xb0
  4066e7:	ret    0xdf28
  4066ea:	jl     0x406712
  4066ec:	push   gs
  4066ee:	out    dx,al
  4066ef:	(bad)  
  4066f0:	(bad)  
  4066f1:	retf   0xfd40
  4066f4:	mov    BYTE PTR [edx+ebp*1-0x70ef0ed2],ch
  4066fb:	(bad)  
  4066fc:	adc    esp,eax
  4066fe:	jge    0x4066b8
  406700:	adc    BYTE PTR [eax+0x1],dh
  406703:	pop    es
  406704:	dec    ebx
  406705:	jb     0x406692
  406707:	dec    ebx
  406708:	sub    al,0x68
  40670a:	daa    
  40670b:	push   edi
  40670c:	sub    eax,0xe8a2480d
  406711:	dec    edi
  406712:	mov    cs,edi
  406714:	xor    esp,esp
  406716:	(bad)  
  406717:	clc    
  406718:	pop    ecx
  406719:	ret    0xc364
  40671c:	hlt    
  40671d:	sbb    edi,DWORD PTR [edx]
  40671f:	clc    
  406720:	imul   ebp,esp,0x3a
  406723:	xor    eax,0xb3ef7d6c
  406728:	or     al,0x1
  40672a:	icebp  
  40672b:	jns    0x40676d
  40672d:	push   ebx
  40672e:	xchg   ecx,eax
  40672f:	adc    esp,ecx
  406731:	fist   WORD PTR [ebx+0x10]
  406734:	es std 
  406736:	cmc    
  406737:	mov    bh,0xc4
  406739:	(bad)  
  40673a:	mov    ecx,ds
  40673c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40673d:	(bad)  
  40673e:	adc    esi,DWORD PTR [eax-0x56]
  406741:	lods   al,BYTE PTR ds:[esi]
  406742:	pop    ss
  406743:	fst    st(4)
  406745:	retf   0x3b55
  406748:	push   0x579b0b05
  40674d:	in     eax,0x56
  40674f:	(bad)  
  406750:	out    0x3a,eax
  406752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406753:	mov    al,BYTE PTR [ecx+0x3ba3d18e]
  406759:	mov    cs,eax
  40675b:	add    edi,esp
  40675d:	vpshlb ymm4,xmm1,[edx]
  406762:	lods   eax,DWORD PTR ds:[esi]
  406763:	scas   eax,DWORD PTR es:[edi]
  406764:	stc    
  406765:	inc    ebp
  406766:	xchg   DWORD PTR [ebx+0x1b8e3054],eax
  40676c:	ins    DWORD PTR es:[edi],dx
  40676d:	es push ebx
  40676f:	adc    dh,BYTE PTR [esp+esi*4+0x31]
  406773:	js     0x406756
  406775:	mov    ?,WORD PTR [edx-0x3ea42a2c]
  40677b:	fld    TBYTE PTR [ebx]
  40677d:	into   
  40677e:	mov    ds:0x934e59fd,eax
  406783:	cmp    DWORD PTR [eax],edx
  406785:	bound  ebp,QWORD PTR [ebp+0x6c]
  406788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406789:	xor    eax,ebx
  40678b:	dec    esi
  40678c:	je     0x4067a4
  40678e:	int3   
  40678f:	sahf   
  406790:	sbb    eax,0x83be73b0
  406795:	inc    esi
  406796:	pop    ebx
  406797:	mov    ds:0xfe653ded,eax
  40679c:	pop    esi
  40679d:	mov    cl,0x27
  40679f:	or     al,0x4f
  4067a1:	and    al,0x81
  4067a3:	scas   eax,DWORD PTR es:[edi]
  4067a4:	pop    esp
  4067a5:	aas    
  4067a6:	adc    eax,0xd5ee9fda
  4067ab:	out    0xdf,al
  4067ad:	lods   al,BYTE PTR ds:[esi]
  4067ae:	mov    BYTE PTR [esi+ecx*8],bh
  4067b1:	push   ebx
  4067b2:	pop    edx
  4067b3:	lock fdivr st,st(0)
  4067b6:	aam    0x8f
  4067b8:	jecxz  0x40674a
  4067ba:	mov    al,ds:0x5b926401
  4067bf:	pop    ecx
  4067c0:	jns    0x406832
  4067c2:	pop    es
  4067c3:	and    edi,esi
  4067c5:	imul   eax,DWORD PTR [eax+ebp*8-0x1c6e43b0],0xffffffe4
  4067cd:	inc    ebp
  4067ce:	add    ebp,DWORD PTR [ebp-0x24]
  4067d1:	pop    ebp
  4067d2:	shr    DWORD PTR [ebx],0x36
  4067d5:	xor    DWORD PTR [edi-0x53645559],esi
  4067db:	mov    ebp,0xf2a6f852
  4067e0:	push   0x23aff972
  4067e5:	int    0x46
  4067e7:	dec    edi
  4067e8:	gs mov dh,0x41
  4067eb:	pop    ebp
  4067ec:	test   BYTE PTR [edi-0xaac24da],0xb8
  4067f3:	and    bl,cl
  4067f5:	cmp    bl,BYTE PTR [ecx-0x6ff51e7e]
  4067fb:	addr16 cwde 
  4067fd:	and    al,0x41
  4067ff:	in     al,dx
  406800:	dec    ebp
  406801:	and    BYTE PTR [edx*2-0x6cb866ea],dl
  406808:	add    eax,0x1aaa4a8b
  40680d:	pop    esi
  40680e:	xchg   esi,eax
  40680f:	fs xchg edi,eax
  406811:	pop    es
  406812:	xchg   esi,eax
  406813:	mov    BYTE PTR [ebx+eax*1-0x24],ah
  406817:	and    ebx,esp
  406819:	cmp    al,0xab
  40681b:	popa   
  40681c:	aad    0x15
  40681e:	sar    DWORD PTR [esi],1
  406820:	push   edi
  406821:	cs jle 0x40685f
  406824:	cli    
  406825:	dec    eax
  406826:	xor    DWORD PTR [edi+0x53],esp
  406829:	pop    esi
  40682a:	imul   ecx,esp,0x11bee82a
  406830:	cmp    eax,0x62a1c7b5
  406835:	sbb    ch,al
  406837:	outs   dx,DWORD PTR ds:[esi]
  406838:	inc    esi
  406839:	(bad)  
  40683a:	sti    
  40683b:	into   
  40683c:	xlat   BYTE PTR ds:[ebx]
  40683d:	cmp    BYTE PTR [eax],0x4
  406840:	shl    BYTE PTR [ebp-0x3e],0xf1
  406844:	ds lock and eax,0x6e0c59d1
  40684b:	fnstsw WORD PTR [ebx]
  40684d:	fisttp WORD PTR [ecx+eiz*4]
  406850:	pop    ebx
  406851:	icebp  
  406852:	shl    BYTE PTR [ebp+esi*8-0x4d],0xbd
  406857:	pop    ss
  406858:	aad    0x4
  40685a:	jle    0x406835
  40685c:	(bad)  
  40685d:	loope  0x4068b6
  40685f:	arpl   WORD PTR [esi+eiz*4],ax
  406862:	leave  
  406863:	mov    edx,DWORD PTR ds:0x340456dd
  406869:	push   0xffffff8d
  40686b:	or     BYTE PTR [ebp+0x66],ah
  40686e:	adc    bh,BYTE PTR [esi+0x3b]
  406871:	add    al,0x43
  406873:	mov    ah,0x65
  406875:	hlt    
  406876:	retf   0xa47e
  406879:	jp     0x406838
  40687b:	pop    edx
  40687c:	dec    ecx
  40687d:	rcr    bl,1
  40687f:	cmc    
  406880:	and    cl,BYTE PTR [ecx-0x55]
  406883:	arpl   bx,sp
  406885:	pop    ecx
  406886:	lock cmp DWORD PTR [eax+0x1a7b3a35],0xa562f1d8
  406891:	push   esi
  406892:	mov    al,0x2e
  406894:	sub    ch,BYTE PTR [ecx+0x4b744fb5]
  40689a:	js     0x40690c
  40689c:	adc    eax,0xc34eca80
  4068a1:	xor    eax,0xa9b42bdb
  4068a6:	sub    DWORD PTR [eax],ebx
  4068a8:	push   cs
  4068a9:	jmp    0x8ca3d609
  4068ae:	in     eax,0xe2
  4068b0:	push   0xffffffec
  4068b2:	pushf  
  4068b3:	aaa    
  4068b4:	or     ecx,0x1a
  4068b7:	fnstcw WORD PTR [ecx+0x2c8d71fd]
  4068bd:	(bad)  
  4068be:	mov    edx,0x21d8cc56
  4068c3:	sub    DWORD PTR [eax],edi
  4068c5:	jb     0x40690f
  4068c7:	aaa    
  4068c8:	iret   
  4068c9:	fnstcw WORD PTR [esi+0x53d8994d]
  4068cf:	mov    ds:0xf66224e5,eax
  4068d4:	push   ss
  4068d5:	js     0x40685f
  4068d7:	and    bh,BYTE PTR [edi]
  4068d9:	lods   al,BYTE PTR ds:[esi]
  4068da:	cmp    esp,0x2ee2a45e
  4068e0:	mov    ebp,0xfe3d89d
  4068e5:	push   esp
  4068e6:	or     al,0x78
  4068e8:	popa   
  4068e9:	gs (bad) 
  4068eb:	mov    ebp,0xc9a31582
  4068f0:	xor    al,BYTE PTR [esi]
  4068f2:	stos   BYTE PTR es:[edi],al
  4068f3:	popa   
  4068f4:	pop    ecx
  4068f5:	mov    edi,0x913cb584
  4068fa:	mov    dl,BYTE PTR [esi-0x3195ea2d]
  406900:	or     dl,BYTE PTR [eax]
  406902:	sub    dh,cl
  406904:	out    dx,al
  406905:	inc    esi
  406906:	pusha  
  406907:	xor    bh,0xb7
  40690a:	xchg   edx,eax
  40690b:	pop    ebp
  40690c:	push   edx
  40690d:	in     al,0x46
  40690f:	xchg   ebp,eax
  406910:	and    dh,BYTE PTR [esi-0x518ffd1a]
  406916:	inc    ebx
  406917:	push   esi
  406918:	xchg   edx,eax
  406919:	inc    esi
  40691a:	scas   al,BYTE PTR es:[edi]
  40691b:	imul   esi,DWORD PTR [edx],0x24
  40691e:	sbb    dl,0x56
  406921:	and    BYTE PTR [ebx+0x573e05ab],ch
  406927:	outs   dx,DWORD PTR ds:[esi]
  406928:	into   
  406929:	and    BYTE PTR [ebx],ah
  40692b:	inc    edi
  40692c:	lea    esp,[ebx+0x44384f05]
  406932:	inc    esi
  406933:	jp     0x406926
  406935:	imul   DWORD PTR ds:0x51370f63
  40693b:	xchg   esi,eax
  40693c:	xchg   ecx,eax
  40693d:	mov    DWORD PTR [ebp+0x6ba3953a],ebx
  406943:	scas   eax,DWORD PTR es:[edi]
  406944:	ins    DWORD PTR es:[edi],dx
  406945:	sbb    al,BYTE PTR [ebp-0x55c953f3]
  40694b:	xor    BYTE PTR [ebx],dl
  40694d:	and    DWORD PTR [ebx],edi
  40694f:	xor    bl,BYTE PTR [ebx+0x4cee6c97]
  406955:	out    dx,al
  406956:	or     BYTE PTR [edx+ecx*1-0x410904b0],ah
  40695d:	sahf   
  40695e:	test   eax,0xd74b6a80
  406963:	data16 adc bl,BYTE PTR [edx]
  406966:	mov    edx,0xcf2b114b
  40696b:	rcl    BYTE PTR [ebp+0x4c55a640],0x36
  406972:	js     0x4069d8
  406974:	pop    eax
  406975:	push   0x0
  406977:	mov    ds:0x1207fa66,al
  40697c:	pusha  
  40697d:	repnz xchg ebp,eax
  40697f:	and    eax,0x6e855c3a
  406984:	push   ecx
  406985:	lods   al,BYTE PTR ds:[esi]
  406986:	and    al,0x73
  406988:	and    ch,ah
  40698a:	jbe    0x40699a
  40698c:	arpl   cx,dx
  40698e:	jno    0x4069d9
  406990:	or     bh,ch
  406992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406993:	aam    0x3f
  406995:	sar    ch,1
  406997:	push   esi
  406998:	and    DWORD PTR [ebx],ebx
  40699a:	jo     0x40697a
  40699c:	push   0x29
  40699e:	or     cl,BYTE PTR [ebx*2+0x7ee91b26]
  4069a5:	call   0x9367dd
  4069aa:	jecxz  0x406970
  4069ac:	push   esi
  4069ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ae:	cmp    al,0xd5
  4069b0:	add    dl,BYTE PTR [ecx+0x5ecb3293]
  4069b6:	add    DWORD PTR [edi],edx
  4069b8:	rol    ebx,1
  4069ba:	pushf  
  4069bb:	push   ebp
  4069bc:	arpl   WORD PTR [esi+0x1a03c91b],di
  4069c2:	lods   eax,DWORD PTR ds:[esi]
  4069c4:	rcr    DWORD PTR [ebp+edx*8-0x63],0xf8
  4069c9:	sub    cl,BYTE PTR [ebx+0x35b2200c]
  4069cf:	sub    ah,BYTE PTR [ebp+0x15695a16]
  4069d5:	jmp    0x2475:0x7bc2a01
  4069dc:	in     eax,dx
  4069dd:	inc    ebp
  4069de:	dec    edi
  4069df:	das    
  4069e0:	or     eax,0x9e06f0f4
  4069e5:	dec    esp
  4069e6:	push   cs
  4069e7:	(bad)  
  4069e8:	rol    BYTE PTR [esi+0x1e2ecd72],1
  4069ee:	mov    dh,0xcc
  4069f0:	frstor [ecx-0xc23d0ef]
  4069f6:	sbb    BYTE PTR [ebx+0x2e],cl
  4069f9:	out    dx,eax
  4069fa:	push   eax
  4069fb:	xchg   edx,eax
  4069fc:	pop    ds
  4069fd:	mov    esp,DWORD PTR [edi]
  4069ff:	dec    edi
  406a00:	push   ebp
  406a01:	call   0x2b4c:0xb4a9
  406a07:	pop    ds
  406a08:	in     al,dx
  406a09:	mov    bl,0x9d
  406a0b:	cdq    
  406a0c:	out    0x32,al
  406a0e:	adc    eax,edi
  406a10:	pop    edi
  406a11:	lds    esi,FWORD PTR [eax+ebx*1]
  406a14:	aam    0xb1
  406a16:	or     BYTE PTR [ecx-0x61],dl
  406a19:	inc    edi
  406a1a:	shl    BYTE PTR [ebp+0x9],0x3b
  406a1e:	mov    bh,0x8f
  406a20:	jns    0x4069cf
  406a22:	jmp    0x4069c2
  406a24:	ficomp WORD PTR [edi]
  406a26:	adc    dh,BYTE PTR ds:0x5662c7bf
  406a2c:	inc    eax
  406a2d:	jno    0x406a56
  406a2f:	(bad)  
  406a30:	pop    esi
  406a31:	dec    ebx
  406a32:	cmp    bh,BYTE PTR [edi-0x61]
  406a35:	pop    esi
  406a36:	xchg   ecx,eax
  406a37:	(bad)  
  406a38:	jbe    0x4069d7
  406a3a:	cli    
  406a3b:	xor    ecx,DWORD PTR [edi-0x63604ec2]
  406a41:	mov    esi,0xdc2fac4e
  406a46:	outs   dx,BYTE PTR ds:[esi]
  406a47:	add    esp,DWORD PTR [edx-0x5c]
  406a4a:	ja     0x406a76
  406a4c:	aaa    
  406a4d:	rcr    esi,cl
  406a4f:	mov    cl,0xed
  406a51:	lahf   
  406a52:	adc    dh,BYTE PTR [ecx-0x3c]
  406a55:	or     esp,DWORD PTR [edx]
  406a57:	inc    esi
  406a58:	lds    eax,FWORD PTR ds:0x1b06611f
  406a5e:	jae    0x406a6c
  406a60:	jle    0x406a65
  406a62:	mov    ds:0xa15bed12,eax
  406a67:	scas   al,BYTE PTR es:[edi]
  406a68:	jmp    0x406ab1
  406a6a:	push   es
  406a6b:	and    DWORD PTR [eax+0x6d8c820c],0xffffff9d
  406a72:	push   esi
  406a73:	mov    edx,0xfe13fce4
  406a78:	(bad)  
  406a79:	or     cl,BYTE PTR [edx-0x10]
  406a7c:	xchg   ebp,eax
  406a7d:	push   0xa1eab87d
  406a82:	mov    al,0x62
  406a84:	xchg   esp,eax
  406a85:	pop    edx
  406a86:	pushf  
  406a87:	mov    ds:0x9a811c04,al
  406a8c:	leave  
  406a8d:	xor    dl,al
  406a8f:	ror    ch,1
  406a91:	dec    edi
  406a92:	lds    edi,FWORD PTR [esi]
  406a94:	mov    esp,0xc5ab8463
  406a99:	shl    cl,1
  406a9b:	add    al,0x31
  406a9d:	(bad)  
  406a9e:	lods   al,BYTE PTR ds:[esi]
  406a9f:	mov    bh,BYTE PTR [ebp-0x4b3d4102]
  406aa5:	call   0x47bf:0x57ad9a53
  406aac:	inc    edx
  406aad:	je     0x406b09
  406aaf:	sub    BYTE PTR [ecx],bh
  406ab1:	les    esp,FWORD PTR [edi-0x21]
  406ab4:	fistp  DWORD PTR [edi+edi*2]
  406ab7:	sub    ch,BYTE PTR [ecx+0x34]
  406aba:	or     eax,0x70642666
  406abf:	sbb    BYTE PTR [esp+ecx*1+0x47018978],cl
  406ac6:	jns    0x406a78
  406ac8:	dec    edi
  406ac9:	jmp    0x1ab3596c
  406ace:	gs mov bl,0x56
  406ad1:	jno    0x406afe
  406ad3:	mov    DWORD PTR [ecx+0x54],ebp
  406ad6:	pop    edi
  406ad7:	aas    
  406ad8:	add    al,0x67
  406ada:	pop    ds
  406adb:	call   0x944e:0x6227bcd0
  406ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ae3:	cwde   
  406ae4:	or     al,BYTE PTR [esi]
  406ae6:	jmp    0xf9c26679
  406aeb:	adc    DWORD PTR [esi-0x31],eax
  406aee:	jmp    0x406a80
  406af0:	push   eax
  406af1:	leave  
  406af2:	push   esp
  406af3:	imul   esi,ebp,0x59
  406af6:	repz pop edi
  406af8:	imul   bl
  406afa:	pop    esi
  406afb:	mov    ah,0x48
  406afd:	dec    esp
  406afe:	retf   0xd85
  406b01:	stc    
  406b02:	push   edi
  406b03:	dec    ebp
  406b04:	int3   
  406b05:	retfw  0x1c79
  406b09:	mov    ebx,0x718b280a
  406b0e:	stc    
  406b0f:	fs xchg esi,eax
  406b11:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b13:	mov    ebx,DWORD PTR [edx+0x1c8a2420]
  406b19:	and    cl,BYTE PTR [edx+0x4c72733c]
  406b1f:	xchg   DWORD PTR [esi-0x29],ebx
  406b22:	stc    
  406b23:	sbb    bh,BYTE PTR [edx+0x65]
  406b26:	fild   WORD PTR [ebp+edi*1+0x6fd5be0e]
  406b2d:	add    dh,dh
  406b2f:	loope  0x406b99
  406b31:	ficom  WORD PTR [ebx+0x53e345d3]
  406b37:	push   0x42
  406b39:	mov    ecx,0xfa526e1e
  406b3e:	mov    bl,0xb8
  406b40:	mov    bh,0x7c
  406b42:	lds    ebx,FWORD PTR [eax]
  406b44:	add    BYTE PTR [esi+0x63],0xbb
  406b48:	push   esp
  406b49:	sbb    eax,0x755e4cf5
  406b4e:	or     esp,DWORD PTR [ecx-0x5e4e1719]
  406b54:	test   DWORD PTR [ecx-0x65],ecx
  406b57:	in     al,dx
  406b58:	ins    BYTE PTR es:[di],dx
  406b5a:	loope  0x406b6e
  406b5c:	iret   
  406b5d:	sub    al,0xea
  406b5f:	or     cl,ah
  406b61:	xchg   BYTE PTR [edi-0x4b0105b1],ah
  406b67:	xchg   esi,eax
  406b68:	jne    0x406b87
  406b6a:	mov    bl,dh
  406b6c:	leave  
  406b6d:	shr    DWORD PTR [ebp+edi*8-0x2e],cl
  406b71:	lods   al,BYTE PTR ds:[esi]
  406b72:	jle    0x406afc
  406b74:	mov    eax,DWORD PTR [ebx]
  406b76:	xlat   BYTE PTR ds:[ebx]
  406b77:	loope  0x406bc0
  406b79:	mov    eax,0xd693a087
  406b7e:	call   0xea16835f
  406b83:	sbb    al,dh
  406b85:	ret    
  406b86:	cmp    eax,0x36d9cd37
  406b8b:	xor    BYTE PTR [eax],al
  406b8d:	and    ecx,DWORD PTR [edx-0x5ec86b32]
  406b93:	or     al,0x5f
  406b95:	xor    eax,0xa44a045c
  406b9a:	clc    
  406b9b:	jb     0x406b68
  406b9d:	sub    cl,ah
  406b9f:	mul    BYTE PTR [esi+0x6a]
  406ba2:	sbb    ebp,ecx
  406ba4:	dec    esp
  406ba5:	and    edx,DWORD PTR [eax+0x5a]
  406ba8:	mov    WORD PTR [ecx-0x29],ss
  406bab:	aas    
  406bac:	fwait
  406bad:	ja     0x406bfc
  406baf:	and    al,0x16
  406bb1:	das    
  406bb2:	or     eax,DWORD PTR [ebx-0x52]
  406bb5:	push   0xfcd0a72b
  406bba:	sbb    ecx,DWORD PTR [edx-0x5f048928]
  406bc0:	pushf  
  406bc1:	dec    edx
  406bc2:	int3   
  406bc3:	mov    bh,0x61
  406bc5:	xchg   ebp,ecx
  406bc7:	ror    BYTE PTR [esi-0x37],cl
  406bca:	add    DWORD PTR [eax],eax
  406bcc:	lods   eax,DWORD PTR ds:[esi]
  406bcd:	mov    al,0xdf
  406bcf:	mov    edi,0x2e04bea4
  406bd4:	in     eax,dx
  406bd5:	js     0x406c48
  406bd7:	pop    esp
  406bd8:	test   al,0xb3
  406bda:	jl     0x406bca
  406bdc:	das    
  406bdd:	mov    edi,0x35efc5b4
  406be2:	sahf   
  406be3:	inc    esi
  406be4:	push   ecx
  406be5:	pop    edi
  406be6:	mov    edi,0x108fa5f2
  406beb:	jl     0x406c2f
  406bed:	xor    dh,al
  406bef:	(bad)  
  406bf0:	push   edi
  406bf1:	pop    ebp
  406bf2:	jmp    0x4c70aefa
  406bf7:	repnz pop edi
  406bf9:	fadd   DWORD PTR [edx]
  406bfb:	pop    ss
  406bfc:	xchg   DWORD PTR [ebp+0x5ad4b4e1],ebp
  406c02:	outs   dx,BYTE PTR ds:[esi]
  406c03:	in     al,dx
  406c04:	add    eax,0x852a4b2c
  406c09:	dec    ebp
  406c0a:	push   ebp
  406c0b:	add    al,bl
  406c0d:	jno    0x406ba0
  406c0f:	js     0x406bc2
  406c11:	js     0x406bf8
  406c13:	sahf   
  406c14:	fiadd  DWORD PTR [eax]
  406c16:	(bad)  
  406c17:	in     al,dx
  406c18:	lods   al,BYTE PTR ds:[esi]
  406c19:	xor    edx,DWORD PTR [edi+0x5e47aa5f]
  406c1f:	outs   dx,BYTE PTR ds:[esi]
  406c20:	fist   WORD PTR [edx-0x60]
  406c23:	mov    cl,0x17
  406c26:	push   edx
  406c27:	push   ebp
  406c28:	ss sub al,0x67
  406c2b:	xchg   ebx,eax
  406c2c:	imul   ebp,DWORD PTR ds:[esi-0x3a69c84c],0xc2a9972c
  406c37:	push   ss
  406c38:	cmovne eax,DWORD PTR [edi]
  406c3b:	inc    ebx
  406c3c:	adc    DWORD PTR [ebp-0x1a],eax
  406c3f:	or     DWORD PTR [ebx-0x106451eb],esp
  406c45:	jg     0x406c4c
  406c47:	jp     0x406c3b
  406c49:	test   DWORD PTR [eax],eax
  406c4b:	and    eax,ebp
  406c4d:	mov    cl,ah
  406c4f:	push   eax
  406c50:	xchg   BYTE PTR [edx],ch
  406c52:	xor    BYTE PTR [eax+0x6d37bb9b],bh
  406c58:	(bad)  
  406c59:	sti    
  406c5a:	mov    ds:0xa2e6b477,al
  406c5f:	push   edi
  406c60:	mov    bh,0x58
  406c62:	pop    ecx
  406c63:	leave  
  406c64:	and    DWORD PTR [ecx],esp
  406c66:	mov    esp,0xb25fc9b6
  406c6b:	es fwait
  406c6d:	repnz pop edx
  406c6f:	sub    BYTE PTR [esp+ecx*4+0x27],dl
  406c73:	adc    al,0x8c
  406c75:	in     al,0x4
  406c77:	or     al,BYTE PTR ds:0xa5b245c1
  406c7d:	add    eax,0x5e44353f
  406c82:	jb     0x406c9f
  406c84:	jae    0x406cd2
  406c86:	ror    DWORD PTR [ebp+0x2d4cbe7c],cl
  406c8c:	loopne 0x406c29
  406c8e:	call   0xb6758820
  406c93:	iret   
  406c94:	addr16 mov ah,0xa5
  406c97:	outs   dx,DWORD PTR ds:[esi]
  406c98:	test   BYTE PTR es:[edx+eiz*4-0x502c485f],dl
  406ca0:	add    al,0xc7
  406ca2:	imul   esi,DWORD PTR [ebx-0x3b],0x7ef1e26d
  406ca9:	inc    edi
  406caa:	jnp    0x406c3d
  406cac:	lods   eax,DWORD PTR ds:[esi]
  406cad:	retf   0xe5a6
  406cb0:	dec    ebp
  406cb1:	scas   eax,DWORD PTR es:[edi]
  406cb2:	ret    0x1cee
  406cb5:	in     eax,dx
  406cb6:	fistp  DWORD PTR [esi+0x5799db27]
  406cbc:	jge    0x406c4b
  406cbe:	inc    BYTE PTR [eax+0x41b1df4e]
  406cc4:	sub    al,0xfd
  406cc6:	push   eax
  406cc7:	xchg   edi,eax
  406cc8:	sar    DWORD PTR [edi+0x770675cc],cl
  406cce:	scas   al,BYTE PTR es:[edi]
  406ccf:	dec    ebp
  406cd0:	xor    dl,BYTE PTR [edx+0x26]
  406cd3:	cwde   
  406cd4:	test   al,0x47
  406cd7:	iret   
  406cd8:	and    ebx,0x52
  406cdb:	pop    es
  406cdc:	add    DWORD PTR [ecx-0x70],edi
  406cdf:	popa   
  406ce0:	in     al,0x5f
  406ce2:	cmp    BYTE PTR [ecx],cl
  406ce4:	push   0x5a2a2e9f
  406ce9:	loopne 0x406d69
  406ceb:	pop    ebx
  406cec:	xor    eax,0xdd932171
  406cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf2:	jae    0x406d55
  406cf4:	daa    
  406cf5:	sub    DWORD PTR [eax+0x72],esp
  406cf8:	stos   DWORD PTR es:[edi],eax
  406cf9:	bound  ecx,QWORD PTR [ebx+0x7e]
  406cfc:	dec    ecx
  406cfd:	loopne 0x406d09
  406cff:	jns    0x406d22
  406d01:	lahf   
  406d02:	fidiv  WORD PTR [edx]
  406d04:	test   DWORD PTR [edi-0xfa13bc2],0x678d4f03
  406d0e:	jne    0x406d06
  406d10:	jnp    0x406d5d
  406d12:	pop    ecx
  406d13:	xlat   BYTE PTR ds:[ebx]
  406d14:	iret   
  406d15:	pusha  
  406d16:	stos   DWORD PTR es:[edi],eax
  406d17:	add    esi,esi
  406d19:	iret   
  406d1a:	pop    ebp
  406d1b:	mov    DWORD PTR [ebx],edx
  406d1d:	mov    BYTE PTR [edx],dh
  406d1f:	out    0x3,eax
  406d21:	clc    
  406d22:	lahf   
  406d23:	test   eax,ebp
  406d25:	mov    WORD PTR [eax],ds
  406d27:	sbb    bh,BYTE PTR [esp+esi*2+0x30]
  406d2b:	mov    ebx,0xeb555c4f
  406d30:	mov    bl,0x26
  406d32:	add    BYTE PTR [edx+0x6d],cl
  406d35:	add    DWORD PTR ds:0x7ad508f1,esp
  406d3b:	pop    ebx
  406d3c:	stos   BYTE PTR es:[edi],al
  406d3d:	shl    DWORD PTR [ebx+0x7],1
  406d40:	jne    0x406daf
  406d42:	jl     0x406db6
  406d44:	aas    
  406d45:	sti    
  406d46:	pop    edx
  406d47:	shl    ecx,cl
  406d49:	test   BYTE PTR [ebp+edi*2+0x72e59132],dh
  406d50:	(bad)  
  406d51:	mov    ecx,0x7350dfc9
  406d56:	jmp    0xf91b:0x585397c6
  406d5d:	push   ds
  406d5e:	shl    DWORD PTR [edx-0x7950978a],cl
  406d64:	test   eax,0xac99396c
  406d69:	gs cmc 
  406d6b:	js     0x406d75
  406d6d:	xchg   edi,eax
  406d6e:	inc    ebp
  406d6f:	jb     0x406dbf
  406d71:	and    cl,dh
  406d73:	mov    dh,0x74
  406d75:	cmp    dh,BYTE PTR ds:0x4bb89664
  406d7b:	pop    ecx
  406d7c:	aas    
  406d7d:	cmp    DWORD PTR [ecx-0xa00b4f9],ecx
  406d83:	cmp    eax,DWORD PTR [ebx-0x3c]
  406d86:	jne    0x406d0a
  406d88:	pop    edx
  406d89:	sbb    bl,dl
  406d8b:	retf   0xb2f3
  406d8e:	cmp    dh,ch
  406d90:	sbb    ebx,eax
  406d92:	aas    
  406d93:	xor    ebp,DWORD PTR [esi-0x1ae4fcf4]
  406d99:	inc    ebp
  406d9a:	jns    0x406dcd
  406d9c:	(bad)  
  406d9d:	fsub   DWORD PTR [edx-0x4]
  406da0:	sbb    BYTE PTR [eax+eax*2],cl
  406da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406da4:	lods   al,BYTE PTR ds:[esi]
  406da5:	std    
  406da6:	inc    esi
  406da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406da8:	mov    WORD PTR [ebx],es
  406daa:	pop    esi
  406dab:	scas   al,BYTE PTR es:[edi]
  406dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dad:	mov    esi,0x8a53b75
  406db2:	xchg   ecx,eax
  406db3:	mov    dl,0x71
  406db5:	loope  0x406d73
  406db7:	pop    edi
  406db8:	push   ebp
  406db9:	std    
  406dba:	adc    eax,0x8a49720d
  406dbf:	sbb    bh,ah
  406dc1:	ret    0xef5b
  406dc4:	jno    0x406d8b
  406dc6:	sar    DWORD PTR [edi-0x6b327cad],0xd1
  406dcd:	jne    0x406deb
  406dcf:	popa   
  406dd0:	lds    esp,FWORD PTR [esi]
  406dd2:	aaa    
  406dd3:	jl     0x406d9e
  406dd5:	arpl   cx,bx
  406dd7:	cmp    bh,BYTE PTR [edi+0x30]
  406dda:	test   BYTE PTR [eax-0x50],ch
  406ddd:	or     eax,0xcba80986
  406de2:	push   edx
  406de3:	adc    eax,0x9137892e
  406de8:	arpl   WORD PTR ds:0xa10543f,sp
  406dee:	jbe    0x406e48
  406df0:	stos   DWORD PTR es:[edi],eax
  406df1:	inc    esi
  406df2:	adc    BYTE PTR [ecx],al
  406df4:	pop    es
  406df5:	jb     0x406d80
  406df7:	(bad)  
  406df8:	sahf   
  406df9:	push   ecx
  406dfa:	imul   ebx,esp,0xffffff9d
  406dfd:	je     0x406e3c
  406dff:	xchg   esp,esi
  406e01:	sbb    esp,ecx
  406e03:	stc    
  406e04:	mov    edi,0x867cc010
  406e09:	hlt    
  406e0a:	mov    ebp,0x635a6726
  406e0f:	adc    eax,0xb414d4ee
  406e14:	pop    es
  406e15:	in     eax,dx
  406e16:	inc    eax
  406e17:	adc    bl,0xe8
  406e1a:	stos   DWORD PTR es:[edi],eax
  406e1b:	test   DWORD PTR [edi-0x20f4da6d],edx
  406e21:	or     al,BYTE PTR [edx-0xe]
  406e24:	add    DWORD PTR [ebp-0x14d2f518],0xb2ff8380
  406e2e:	nop
  406e2f:	inc    ebx
  406e30:	imul   ecx,DWORD PTR [ecx-0x1e],0xffffffad
  406e34:	cwde   
  406e35:	sbb    DWORD PTR [ebp+0x62],0xffffffe2
  406e39:	scas   al,BYTE PTR es:[edi]
  406e3a:	mov    ah,0x4f
  406e3c:	(bad)  
  406e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e3e:	lds    ebx,FWORD PTR [eax]
  406e40:	jns    0x406e62
  406e42:	mov    edx,0x70de0e49
  406e47:	and    DWORD PTR [ebp-0x6c],ebp
  406e4a:	bound  ebp,QWORD PTR [edi-0x51]
  406e4d:	into   
  406e4e:	pop    ss
  406e4f:	iret   
  406e50:	fwait
  406e51:	and    al,0x56
  406e53:	stos   BYTE PTR es:[edi],al
  406e54:	cdq    
  406e55:	sbb    DWORD PTR ds:[edi-0x14],0x5d7d9c0f
  406e5d:	push   cs
  406e5e:	sbb    BYTE PTR [ebp-0x57],0xdc
  406e62:	push   0xffffffbd
  406e64:	jmp    0x515d7441
  406e69:	or     al,0x18
  406e6b:	sbb    eax,0x8e19e96c
  406e70:	pop    es
  406e71:	inc    esp
  406e72:	mov    edx,0x8b44e067
  406e77:	cmp    ch,dh
  406e79:	mov    edx,0xff9a841d
  406e7e:	jl     0x406ea7
  406e80:	pop    edx
  406e81:	mul    BYTE PTR ss:[esi]
  406e84:	lahf   
  406e85:	lock int3 
  406e87:	mov    cl,0x75
  406e89:	pop    ebx
  406e8a:	fs test al,0x92
  406e8d:	mov    WORD PTR [ebx-0x6b],ss
  406e90:	jb     0x406e9e
  406e92:	out    dx,al
  406e93:	in     eax,dx
  406e94:	bound  ebp,QWORD PTR [edx-0x541eb432]
  406e9a:	rcl    BYTE PTR [ebp+ecx*2-0x50731fe],0x4
  406ea2:	aas    
  406ea3:	mov    ds:0x1e07119,al
  406ea8:	bnd jae 0x406ebb
  406eab:	cmp    edi,esp
  406ead:	les    esp,FWORD PTR [eax]
  406eaf:	js     0x406f29
  406eb1:	mov    esp,0xdb42d493
  406eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb7:	and    ch,ch
  406eb9:	ret    0xcbf7
  406ebc:	jbe    0x406e75
  406ebe:	mov    BYTE PTR [eax],dh
  406ec0:	les    edx,FWORD PTR [ecx]
  406ec2:	push   edi
  406ec3:	push   ds
  406ec4:	int3   
  406ec5:	arpl   WORD PTR [eax],di
  406ec7:	mov    eax,0x6b9f720f
  406ecc:	cmp    al,0x83
  406ece:	add    DWORD PTR [edi-0x5698f02b],edx
  406ed4:	xchg   edx,edx
  406ed6:	adc    ah,ah
  406ed8:	es sbb eax,0x930af6c2
  406ede:	addr16 loopne 0x406f47
  406ee1:	(bad)  
  406ee2:	or     al,0x87
  406ee4:	ss dec edi
  406ee6:	or     esi,DWORD PTR [esi-0x4742cbf4]
  406eec:	pop    edx
  406eed:	loopne 0x406f50
  406eef:	mov    dl,0x42
  406ef1:	push   ebp
  406ef2:	aas    
  406ef3:	push   es
  406ef4:	pop    ebx
  406ef5:	dec    eax
  406ef6:	sbb    DWORD PTR [eax-0x71],edx
  406ef9:	inc    esi
  406efa:	push   0x74606b4e
  406eff:	aam    0x69
  406f01:	call   0xd59e:0x87c3d58
  406f08:	xchg   edx,eax
  406f09:	pop    edi
  406f0a:	lahf   
  406f0b:	in     eax,dx
  406f0c:	sti    
  406f0d:	dec    edx
  406f0e:	scas   eax,DWORD PTR es:[edi]
  406f0f:	add    eax,esp
  406f11:	sbb    eax,0x91ece0b2
  406f16:	or     BYTE PTR [eax],ah
  406f18:	call   0xdb8f882c
  406f1d:	mov    DWORD PTR ds:0x20737e68,edx
  406f23:	mov    edi,0x35a536b3
  406f28:	mov    ebp,0x85fcacb7
  406f2d:	inc    esi
  406f2e:	and    bh,BYTE PTR [ebp+0x2e]
  406f31:	cmp    BYTE PTR ss:0xe07de6b1,cl
  406f38:	or     ebp,0x546e54e8
  406f3e:	outs   dx,BYTE PTR ds:[esi]
  406f3f:	and    al,0xe0
  406f41:	or     DWORD PTR [eax-0x49723d1],0x7f018194
  406f4b:	cwde   
  406f4c:	add    esi,edi
  406f4e:	xchg   edi,eax
  406f4f:	mov    al,ds:0x1d1cd129
  406f54:	aas    
  406f55:	nop
  406f56:	fidiv  WORD PTR [edx-0x5c]
  406f59:	xchg   DWORD PTR [ebx-0x11126d16],edi
  406f5f:	pop    ss
  406f60:	sub    al,0xb3
  406f62:	sub    eax,0xaf8ed8c1
  406f67:	repz xor DWORD PTR [ecx+0x1e],ebp
  406f6b:	adc    dl,BYTE PTR [ebx+0x4b]
  406f6e:	xor    bl,ah
  406f70:	cs or  edx,0x602536ef
  406f77:	fstp   DWORD PTR [ecx]
  406f79:	mov    BYTE PTR [ecx-0x72],dl
  406f7c:	push   esp
  406f7d:	push   edx
  406f7e:	push   0x672521dc
  406f83:	iret   
  406f84:	jge    0x406fe4
  406f86:	ins    BYTE PTR es:[edi],dx
  406f87:	inc    ebx
  406f88:	hlt    
  406f89:	popa   
  406f8a:	sar    BYTE PTR [ebx],1
  406f8c:	adc    ch,BYTE PTR [ebx]
  406f8e:	stc    
  406f8f:	clc    
  406f90:	jae    0x406fa9
  406f92:	lods   al,BYTE PTR ds:[esi]
  406f93:	inc    eax
  406f94:	cmovae esi,DWORD PTR [edi-0x2b]
  406f98:	sub    al,0x46
  406f9a:	aaa    
  406f9b:	out    dx,eax
  406f9c:	dec    ebx
  406f9d:	lods   eax,DWORD PTR ds:[esi]
  406f9e:	loope  0x406fe7
  406fa0:	dec    BYTE PTR [edx]
  406fa2:	dec    ebx
  406fa3:	dec    ecx
  406fa4:	loopne 0x406fd3
  406fa6:	stos   DWORD PTR es:[edi],eax
  406fa7:	popa   
  406fa8:	dec    ebx
  406faa:	gs mov ah,0x6c
  406fad:	mov    eax,0x97e41efa
  406fb2:	and    eax,0x5d5ec09d
  406fb7:	mov    edi,0x384747db
  406fbc:	leave  
  406fbd:	inc    edx
  406fbe:	(bad)  
  406fbf:	and    al,0xa3
  406fc1:	adc    esp,ecx
  406fc3:	jmp    0x453fcd5f
  406fc8:	mov    eax,0xeaabeb7c
  406fcd:	jns    0x406fb7
  406fcf:	mov    dh,0x28
  406fd1:	mov    ebp,0xc847cdb3
  406fd6:	and    dh,BYTE PTR [ebx-0x60]
  406fd9:	ret    
  406fda:	add    ebp,DWORD PTR [edx]
  406fdc:	and    bl,bh
  406fde:	test   al,0x4e
  406fe0:	jb     0x407023
  406fe2:	dec    esp
  406fe3:	adc    DWORD PTR [edx+0x1d],edx
  406fe6:	les    ebx,FWORD PTR [eax+0x6d959a80]
  406fec:	enter  0xc414,0x11
  406ff0:	cld    
  406ff1:	cdq    
  406ff2:	ins    BYTE PTR es:[edi],dx
  406ff3:	mov    al,0xfc
  406ff5:	mov    esp,DWORD PTR [ecx-0x67]
  406ff8:	fnsave [edi]
  406ffa:	adc    al,0x21
  406ffc:	xchg   ebx,eax
  406ffd:	iret   
  406ffe:	push   es
  406fff:	and    ah,BYTE PTR [ebp-0x4480c62a]
  407005:	inc    ecx
  407006:	in     eax,dx
  407007:	fbstp  TBYTE PTR [esi]
  407009:	and    esp,DWORD PTR [ebx]
  40700b:	xor    DWORD PTR [ebx-0x46b57896],esp
  407011:	push   edi
  407012:	mov    ebp,0xb8298297
  407017:	pop    edi
  407018:	pop    ss
  407019:	daa    
  40701a:	jmp    0x223b:0x52f4efe9
  407021:	or     cl,BYTE PTR [eax]
  407023:	add    ah,BYTE PTR [edx]
  407025:	pop    esp
  407026:	arpl   WORD PTR [edi+edx*8-0x80],di
  40702a:	mov    al,0x56
  40702c:	(bad)  
  40702d:	jne    0x40706c
  40702f:	sbb    ecx,DWORD PTR [ebx]
  407031:	add    BYTE PTR [edx-0x44],bh
  407034:	cli    
  407035:	dec    esp
  407036:	je     0x4070a8
  407038:	push   ecx
  407039:	push   ss
  40703a:	ss aas 
  40703c:	cli    
  40703d:	adc    BYTE PTR [edx+0x4431cbe6],cl
  407043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407044:	arpl   WORD PTR [ebx+0x4eb88996],di
  40704a:	cmp    BYTE PTR [ebx+0x5311adfe],bl
  407050:	out    dx,eax
  407051:	jmp    0xfb63cfdb
  407056:	sbb    al,0x30
  407058:	(bad)  
  407059:	retf   
  40705a:	pop    edi
  40705b:	scas   eax,DWORD PTR es:[edi]
  40705c:	mov    ch,0xaa
  40705e:	xchg   ecx,eax
  40705f:	and    al,0xc7
  407061:	shr    DWORD PTR ss:[ebx+0x71],cl
  407065:	out    dx,eax
  407066:	out    0xdc,al
  407068:	dec    DWORD PTR [esi+0x36]
  40706b:	cmp    dh,BYTE PTR [ebp-0x73feb18]
  407071:	popa   
  407072:	enter  0x7680,0xa3
  407076:	pop    es
  407077:	push   0x42
  407079:	ror    BYTE PTR [eax],cl
  40707b:	(bad)  
  40707c:	popf   
  40707d:	add    BYTE PTR [ecx],cl
  40707f:	ret    0x2d33
  407082:	sbb    esi,DWORD PTR [eax+0x11]
  407085:	xchg   DWORD PTR [esi+0x5fb4e6bf],edi
  40708b:	retf   0xe513
  40708e:	push   edi
  40708f:	scas   eax,DWORD PTR es:[edi]
  407090:	(bad)  
  407091:	ss sbb eax,0x253f642
  407097:	out    dx,al
  407098:	repz jmp DWORD PTR [ecx+0x4195176a]
  40709f:	mov    bl,0x22
  4070a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070a2:	or     BYTE PTR [edi+0x536eb06b],dl
  4070a8:	cmp    eax,0x9da20baf
  4070ad:	lock shr bl,cl
  4070b0:	jae    0x407076
  4070b2:	jno    0x407077
  4070b4:	inc    eax
  4070b5:	sub    eax,0xec30a906
  4070ba:	mov    ds:0x82dc4452,eax
  4070bf:	(bad)  
  4070c0:	jmp    0x407090
  4070c2:	mov    edx,0x8af7518
  4070c7:	mov    ch,0x19
  4070c9:	or     DWORD PTR [ecx],esp
  4070cb:	es clc 
  4070cd:	out    0x31,eax
  4070cf:	add    al,0x4b
  4070d1:	add    dh,BYTE PTR [ebx+0x7377ad44]
  4070d7:	push   0x63
  4070d9:	sbb    eax,0xe3bd76d4
  4070de:	shr    BYTE PTR [edi-0x6c],1
  4070e1:	add    BYTE PTR [edi+0x663111a3],bh
  4070e7:	clc    
  4070e8:	adc    BYTE PTR [esi],bh
  4070ea:	pop    ds
  4070eb:	inc    BYTE PTR gs:[esi+0x3f]
  4070ef:	ja     0x407089
  4070f1:	(bad)  
  4070f2:	mov    ecx,0x78e74ba5
  4070f7:	mov    ebx,0xd1dfe375
  4070fc:	(bad)  
  4070fd:	pop    esp
  4070fe:	or     BYTE PTR [eax-0x3c],0x2b
  407102:	cbw    
  407104:	adc    al,0xcd
  407106:	ret    
  407107:	dec    edi
  407108:	test   DWORD PTR [ecx],0x165d94e7
  40710e:	lahf   
  40710f:	xchg   DWORD PTR [ebx-0x76],ecx
  407112:	mov    dh,0xaf
  407114:	mov    al,0x0
  407116:	xor    al,0xdf
  407118:	ret    0xef7c
  40711b:	mov    al,0xde
  40711d:	cmp    eax,0x10091808
  407122:	inc    eax
  407123:	shr    DWORD PTR [edi+0x23400587],1
  407129:	imul   eax,DWORD PTR [ebp-0x47f64833],0x5412bd81
  407133:	cli    
  407134:	xor    BYTE PTR ds:0xc6b0600b,0x62
  40713b:	fld    TBYTE PTR [edx]
  40713d:	jmp    0x2a62:0xbe187cf8
  407144:	push   0x1703f77c
  407149:	mov    esp,0x33da48b2
  40714e:	punpckhdq mm1,mm2
  407151:	loope  0x407120
  407153:	aad    0x3b
  407155:	dec    eax
  407156:	or     DWORD PTR [edi],edx
  407158:	xchg   edx,eax
  407159:	push   edi
  40715a:	mov    esi,0xf9a25530
  40715f:	loopne 0x40716a
  407161:	inc    edx
  407162:	cmp    al,0xec
  407164:	sub    al,0x83
  407166:	mov    ebx,esp
  407168:	jb     0x407169
  40716a:	test   BYTE PTR [edx+ecx*4-0x78],ah
  40716e:	cli    
  40716f:	mov    ch,0xc
  407171:	adc    dl,bl
  407173:	dec    esp
  407174:	clc    
  407175:	push   esi
  407176:	add    edi,esp
  407178:	pushf  
  407179:	mov    ds:0xe7deaf1,al
  40717e:	fcomp  st(2)
  407180:	test   BYTE PTR [esi+0x637f4ce7],bl
  407186:	ds ins DWORD PTR es:[edi],dx
  407188:	cld    
  407189:	popa   
  40718a:	shr    ah,cl
  40718c:	stos   BYTE PTR es:[edi],al
  40718d:	pop    ds
  40718e:	mov    ebx,0xa13dfdff
  407193:	fld    DWORD PTR [ebx-0x3ab7b037]
  407199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40719a:	jge    0x40713f
  40719c:	dec    edx
  40719d:	push   cs
  40719e:	ror    DWORD PTR [eax+0xe1cc1f8],0xdd
  4071a5:	into   
  4071a6:	test   edi,esp
  4071a8:	fild   WORD PTR [esi-0x38303ba1]
  4071ae:	jbe    0x40721d
  4071b0:	hlt    
  4071b1:	inc    eax
  4071b2:	push   0x7930c334
  4071b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071b8:	mov    ah,0x22
  4071ba:	fs into 
  4071bc:	(bad)  
  4071bd:	imul   DWORD PTR [edi]
  4071bf:	js     0x40716d
  4071c1:	dec    ebx
  4071c2:	popa   
  4071c3:	jne    0x4071b0
  4071c5:	cli    
  4071c6:	daa    
  4071c7:	bound  edx,QWORD PTR [eax]
  4071c9:	xchg   esi,eax
  4071ca:	jno    0x4071e1
  4071cc:	int3   
  4071cd:	aaa    
  4071ce:	or     dh,ah
  4071d0:	xchg   ecx,eax
  4071d1:	xchg   ebx,eax
  4071d2:	les    edi,FWORD PTR [ebx-0x1]
  4071d5:	xor    ah,BYTE PTR [eax]
  4071d7:	sbb    esp,edi
  4071d9:	test   eax,0xb45241f8
  4071de:	jo     0x4071bb
  4071e0:	out    0xcd,eax
  4071e2:	scas   eax,DWORD PTR es:[edi]
  4071e3:	push   edi
  4071e4:	push   es
  4071e5:	pop    ebp
  4071e6:	mov    ch,0x4c
  4071e8:	outs   dx,BYTE PTR ds:[esi]
  4071e9:	adc    esp,DWORD PTR [eax]
  4071eb:	icebp  
  4071ec:	push   ebp
  4071ed:	mov    ss,WORD PTR [eax+eiz*8-0x752665d0]
  4071f4:	push   ebp
  4071f5:	lds    edi,FWORD PTR [edi+0x7e]
  4071f8:	icebp  
  4071f9:	or     esp,0x93d4cc87
  4071ff:	mov    al,ds:0xf047ea90
  407204:	xchg   esp,eax
  407205:	call   FWORD PTR [edi]
  407207:	ret    
  407208:	jo     0x40720d
  40720a:	jne    0x40726f
  40720c:	repz pop ecx
  40720e:	mov    WORD PTR [edx-0x3b],?
  407211:	fcmovnbe st,st(5)
  407213:	out    0xc2,al
  407215:	dec    eax
  407216:	mov    dh,0x3d
  407218:	in     eax,0xc2
  40721a:	jmp    0xe1af:0x766beb2e
  407221:	fild   WORD PTR [edi+0x36]
  407224:	aaa    
  407225:	mov    esi,DWORD PTR [ebp+0x26]
  407228:	ds ins BYTE PTR es:[edi],dx
  40722a:	pop    edi
  40722b:	or     dh,BYTE PTR [edi*2-0x4ce018f5]
  407232:	push   eax
  407233:	mov    ds:0xeef72b59,eax
  407238:	push   edi
  407239:	push   ebx
  40723a:	mov    eax,ds:0xd0631303
  40723f:	push   edi
  407240:	and    eax,0xd6cd7a8e
  407245:	pusha  
  407246:	shl    BYTE PTR [eax],1
  407248:	test   eax,0xffb61f89
  40724d:	or     BYTE PTR [esi],ch
  40724f:	sub    ah,BYTE PTR [esi-0x526abe64]
  407255:	push   ecx
  407256:	mov    al,ds:0x8a7d9b98
  40725b:	call   0x837c8a18
  407260:	(bad)  
  407261:	cdq    
  407262:	xchg   edx,eax
  407263:	xlat   BYTE PTR ds:[ebx]
  407264:	cmp    esi,DWORD PTR [edi+0x68de12f3]
  40726a:	xlat   BYTE PTR ds:[ebx]
  40726b:	jo     0x407288
  40726d:	jmp    0xf2826e72
  407272:	or     BYTE PTR [edx+0x2c493154],ah
  407278:	and    eax,0x965cc46
  40727d:	in     eax,0x50
  40727f:	adc    esp,DWORD PTR [edi]
  407281:	pop    ebp
  407282:	repz sbb DWORD PTR [ecx],esp
  407285:	outs   dx,DWORD PTR ds:[esi]
  407286:	push   ecx
  407287:	push   edx
  407288:	dec    edx
  407289:	mov    eax,0x7a431273
  40728e:	rcl    BYTE PTR [edx-0x57],cl
  407291:	hlt    
  407292:	xchg   ecx,eax
  407293:	test   al,0x51
  407295:	mov    esi,0x99e7cc5f
  40729a:	push   esi
  40729b:	(bad)  
  40729c:	leave  
  40729d:	clc    
  40729e:	shr    BYTE PTR fs:[edi],0xca
  4072a2:	loope  0x4072f5
  4072a4:	cmc    
  4072a5:	xchg   esi,eax
  4072a6:	push   ebp
  4072a7:	mov    dh,0x14
  4072a9:	jle    0x407247
  4072ab:	mov    esi,DWORD PTR [edi-0x41]
  4072ae:	push   cs
  4072af:	pop    ds
  4072b0:	mov    edi,0x322e1701
  4072b5:	xchg   BYTE PTR [ebp+0x7a],bh
  4072b8:	vpavgb ymm6,ymm0,ymm5
  4072bc:	mov    esi,0xc6a0fca
  4072c1:	sbb    al,0x36
  4072c3:	(bad)  
  4072c4:	sahf   
  4072c5:	xchg   esp,eax
  4072c6:	mov    dh,0x2e
  4072c8:	lds    esp,FWORD PTR [ebx]
  4072ca:	pop    ds
  4072cb:	jmp    0x4072b6
  4072cd:	hlt    
  4072ce:	jno    0x4072ca
  4072d0:	jbe    0x407261
  4072d2:	fbld   TBYTE PTR [eax+eax*4+0x2858a676]
  4072d9:	lods   eax,DWORD PTR ds:[esi]
  4072da:	push   edx
  4072db:	mov    edx,0xfec53ea4
  4072e0:	and    BYTE PTR [ebp+0x625f014b],0x68
  4072e7:	pushf  
  4072e8:	fnsave [edx]
  4072ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072eb:	(bad)  
  4072ed:	ret    0x5c97
  4072f0:	push   esi
  4072f1:	repnz xchg edi,eax
  4072f3:	ds jmp 0x8b03:0xaf0d154b
  4072fb:	sbb    al,0x35
  4072fd:	js     0x407318
  4072ff:	cmp    BYTE PTR [eax+eax*2+0x2c],0x85
  407304:	cdq    
  407305:	hlt    
  407306:	xchg   ebx,eax
  407307:	or     DWORD PTR ds:0xe68a3753,edx
  40730d:	pop    ebx
  40730e:	push   0xa00b3c4d
  407313:	adc    eax,0xc3a38a9
  407318:	fs js  0x407364
  40731b:	jb     0x4072b0
  40731d:	inc    edi
  40731e:	sub    eax,DWORD PTR [esi]
  407320:	sbb    BYTE PTR [esi-0x32],cl
  407323:	dec    eax
  407324:	int3   
  407325:	fld    DWORD PTR [esi-0x35dfe0c7]
  40732b:	dec    ecx
  40732c:	repz imul ecx,DWORD PTR [ecx+0x6b8337f6],0xd971d136
  407337:	jl     0x4072f0
  407339:	enter  0x7ea8,0xdf
  40733d:	addr16 icebp 
  40733f:	or     BYTE PTR [edi+0x600febf4],0x41
  407346:	xor    BYTE PTR [eax+0x4c],0x1e
  40734a:	push   cs
  40734b:	inc    edi
  40734c:	or     eax,0x6d30a287
  407351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407352:	icebp  
  407353:	and    edx,DWORD PTR [ebp+0x35]
  407356:	pop    esp
  407357:	add    DWORD PTR [edi*1+0x31eebe8e],edi
  40735e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40735f:	stc    
  407360:	loope  0x40732b
  407362:	lea    eax,[ebx+0x3a]
  407365:	loop   0x407327
  407367:	ret    0xcffd
  40736a:	push   eax
  40736b:	loopne 0x40738e
  40736d:	imul   ebp,DWORD PTR [edx-0x10],0x4
  407371:	mov    al,ds:0x731470b5
  407376:	pop    ds
  407377:	xchg   BYTE PTR [ebp+edx*8-0x3840b039],dl
  40737e:	iret   
  40737f:	nop
  407380:	mov    dl,0xff
  407382:	jbe    0x407370
  407384:	add    eax,0x926fb2f5
  407389:	add    al,0x93
  40738b:	pop    eax
  40738c:	loope  0x407375
  40738e:	adc    eax,ecx
  407390:	xchg   ecx,eax
  407391:	push   ds
  407392:	pop    edx
  407393:	ds sti 
  407395:	sbb    esp,DWORD PTR [edx-0x62]
  407398:	jge    0x407367
  40739a:	imul   edx,DWORD PTR [esi],0x7172dfbc
  4073a0:	adc    ebp,DWORD PTR [eax-0x76]
  4073a3:	pop    esi
  4073a4:	scas   eax,DWORD PTR es:[edi]
  4073a5:	lahf   
  4073a6:	mov    ah,0xb6
  4073a8:	test   esi,0x563981c5
  4073ae:	mov    al,0x61
  4073b0:	inc    esp
  4073b1:	add    DWORD PTR [ebp-0x3fb86cec],esp
  4073b7:	(bad)  
  4073b8:	ds and al,0x54
  4073bb:	(bad)  
  4073bd:	mov    esp,0xc3453170
  4073c2:	jmp    0x9cd1c9df
  4073c7:	imul   ebx,DWORD PTR [esp+ecx*1-0x1a],0xcfacc080
  4073cf:	jge    0x4073b8
  4073d1:	xchg   esi,eax
  4073d2:	cs adc ch,al
  4073d5:	fcmovb st,st(5)
  4073d7:	mov    ds:0xa87b1b16,al
  4073dc:	outs   dx,DWORD PTR ds:[esi]
  4073dd:	mov    ds:0x45e69567,eax
  4073e2:	or     ebx,DWORD PTR ds:0xfefb4f
  4073e8:	cmp    al,0xa8
  4073ea:	jne    0x40738e
  4073ec:	shl    dl,cl
  4073ee:	daa    
  4073ef:	xchg   ebp,eax
  4073f0:	sub    eax,0x4e8dad8c
  4073f5:	dec    esp
  4073f6:	mov    bl,0xa8
  4073f8:	out    dx,eax
  4073f9:	mov    esi,DWORD PTR [eax+0x4]
  4073fc:	(bad)  
  4073fd:	cwde   
  4073fe:	adc    al,0x8a
  407400:	retf   0xb5c4
  407403:	imul   esp,ebx,0x54
  407406:	sbb    al,0xd0
  407408:	jp     0x40740e
  40740a:	out    0x18,al
  40740c:	pop    esp
  40740d:	leave  
  40740e:	enter  0xb2b0,0xf1
  407412:	dec    eax
  407413:	jmp    FWORD PTR gs:[ecx]
  407416:	retf   
  407417:	sub    al,0x2c
  407419:	repz jecxz 0x4073c7
  40741c:	jns    0x407499
  40741e:	xor    dh,BYTE PTR [edi]
  407420:	mov    esi,0xc6b0e39e
  407425:	(bad)  
  407427:	push   edi
  407428:	push   edx
  407429:	sbb    al,BYTE PTR [edi-0x6d]
  40742c:	int    0x13
  40742e:	or     DWORD PTR [ebx+ebp*4+0x51],edx
  407432:	aas    
  407433:	(bad)  
  407434:	cmc    
  407435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407436:	push   esi
  407437:	jbe    0x4073f7
  407439:	test   DWORD PTR [ebx-0x47],esi
  40743c:	data16 adc al,0x35
  40743f:	xchg   edx,eax
  407440:	jne    0x4074a3
  407442:	xor    BYTE PTR [edi-0x98bfac0],ah
  407448:	pop    edi
  407449:	or     BYTE PTR [esi],ch
  40744b:	stos   DWORD PTR es:[edi],eax
  40744c:	sub    eax,0x2316bc08
  407451:	retf   0x24
  407454:	pop    es
  407455:	out    0x7e,eax
  407457:	arpl   sp,cx
  407459:	cmp    BYTE PTR [edx+0x5f],ch
  40745c:	sti    
  40745d:	bnd jmp 0xe8a6ce86
  407463:	out    0x1e,al
  407465:	add    ebp,DWORD PTR [ebx-0x69034136]
  40746b:	mov    dh,0xc6
  40746d:	ss mov ch,0xa5
  407470:	nop
  407471:	call   0x4d4b:0xc999017e
  407478:	xor    al,0xfa
  40747a:	cmp    eax,0x5f8a55da
  40747f:	cli    
  407480:	jl     0x407435
  407482:	into   
  407483:	xor    al,0xfa
  407485:	div    eax
  407487:	ds mov bh,0xb8
  40748a:	mov    bh,0xc3
  40748c:	jecxz  0x4074fa
  40748e:	bound  esp,QWORD PTR [edx+0xe]
  407491:	stos   BYTE PTR es:[edi],al
  407492:	bts    DWORD PTR [edi+0x3a],esi
  407496:	xchg   esp,eax
  407497:	movaps XMMWORD PTR [edx+0x25],xmm6
  40749b:	or     cl,dh
  40749d:	fild   DWORD PTR [edi-0x23]
  4074a0:	sbb    DWORD PTR [ebx],ebx
  4074a2:	sbb    eax,ecx
  4074a4:	das    
  4074a5:	sbb    edx,edi
  4074a7:	cwde   
  4074a8:	or     al,0x66
  4074aa:	loope  0x407476
  4074ac:	xchg   edi,eax
  4074ad:	adc    al,0x1a
  4074af:	xor    bh,BYTE PTR [edi]
  4074b1:	dec    edx
  4074b2:	mov    ds:0x317d3f87,eax
  4074b7:	rol    BYTE PTR [eax+0x5ba63d0b],cl
  4074bd:	popf   
  4074be:	sbb    esp,DWORD PTR [edi+eiz*2]
  4074c1:	pop    ebx
  4074c2:	dec    ebx
  4074c3:	enter  0x5b00,0x9
  4074c7:	inc    esi
  4074c8:	mov    ?,WORD PTR [ecx+0x3247c72e]
  4074ce:	dec    edi
  4074cf:	push   es
  4074d0:	ds jne 0x4074e2
  4074d3:	xchg   edi,ebx
  4074d5:	mov    DWORD PTR [edi+0x7],ecx
  4074d8:	cwde   
  4074d9:	js     0x4074f0
  4074db:	fldenv ds:0x16f03a5e
  4074e1:	lds    ecx,FWORD PTR [ebp+0x7d82ddc0]
  4074e7:	fcmovnbe st,st(0)
  4074e9:	inc    eax
  4074ea:	and    edx,DWORD PTR [ebp-0x76]
  4074ed:	add    edi,DWORD PTR [edx]
  4074ef:	loopne 0x407529
  4074f1:	les    ebp,FWORD PTR [ecx]
  4074f3:	add    ah,ah
  4074f5:	xchg   edi,eax
  4074f6:	lahf   
  4074f7:	fist   WORD PTR gs:[esi+edx*2]
  4074fb:	pop    ss
  4074fc:	enter  0xd118,0xe6
  407500:	cmp    eax,0xe8f3ba1f
  407505:	jbe    0x4074e0
  407507:	add    DWORD PTR [esi+0x16],ebp
  40750a:	push   ss
  40750b:	jg     0x407539
  40750d:	lea    esi,[edx+ebp*4-0x6]
  407511:	je     0x4074c6
  407513:	out    0xc2,al
  407515:	pop    ss
  407516:	aam    0xd
  407518:	mov    eax,ds:0xe5a0069d
  40751d:	popf   
  40751e:	sbb    BYTE PTR [ebp+edi*2-0x5850d928],bl
  407525:	icebp  
  407526:	sub    eax,0xb0c9360e
  40752b:	mov    ch,0x5e
  40752d:	cmp    BYTE PTR [esi+0x6e],cl
  407530:	push   ecx
  407531:	mov    eax,ds:0xf228ab8
  407536:	sub    eax,0x7f8062ca
  40753b:	popa   
  40753c:	in     al,dx
  40753d:	ins    BYTE PTR es:[edi],dx
  40753e:	jl     0x40757e
  407540:	mov    ecx,0x545e0f4b
  407545:	pop    edi
  407546:	aad    0x98
  407548:	jg     0x407527
  40754a:	cs iret 
  40754c:	aad    0x1c
  40754e:	pop    edi
  40754f:	add    al,0x35
  407551:	sbb    esi,eax
  407553:	pop    esp
  407554:	sbb    ebx,eax
  407556:	cmp    eax,DWORD PTR [eax+0x36]
  407559:	js     0x4075a0
  40755b:	push   0xb1e738b0
  407560:	push   ebx
  407561:	push   esp
  407562:	shl    ah,cl
  407564:	clc    
  407565:	adc    DWORD PTR [edi-0x1a00e1cb],eax
  40756b:	popa   
  40756c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40756d:	adc    bl,dh
  40756f:	imul   esi,DWORD PTR [edx+0x69],0x6e5f04fe
  407576:	js     0x407536
  407578:	and    DWORD PTR ds:0xaf3f011c,0x2d09353
  407582:	loope  0x4075da
  407584:	(bad)  
  407585:	push   cs
  407586:	stos   BYTE PTR es:[edi],al
  407587:	dec    ebx
  407588:	push   ecx
  407589:	xchg   edi,eax
  40758a:	sbb    cl,BYTE PTR [ecx]
  40758c:	mov    ds:0xe0fd5d9b,al
  407591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407592:	clc    
  407593:	adc    al,0x61
  407595:	xchg   esp,eax
  407596:	adc    cl,BYTE PTR [edx]
  407598:	xor    ch,0x96
  40759b:	test   eax,0x1407b0bf
  4075a0:	int3   
  4075a1:	xor    eax,0x11a2f55b
  4075a6:	cmp    eax,0xf24e0dee
  4075ab:	ins    DWORD PTR es:[edi],dx
  4075ac:	aad    0xb
  4075ae:	inc    edx
  4075af:	dec    ecx
  4075b0:	adc    ecx,DWORD PTR [ecx-0xd25a1e9]
  4075b6:	adc    eax,0x4aaeacc1
  4075bb:	adc    eax,0xa1db749c
  4075c0:	shr    esp,0xf4
  4075c3:	iret   
  4075c4:	ja     0x407594
  4075c6:	nop
  4075c7:	pop    ecx
  4075c8:	or     cl,BYTE PTR [edi-0x4ab9ce4d]
  4075ce:	inc    eax
  4075cf:	add    al,0xb6
  4075d1:	mov    dh,0xf8
  4075d3:	lods   al,BYTE PTR ss:[esi]
  4075d5:	sub    eax,0x433afe8c
  4075da:	dec    esp
  4075db:	icebp  
  4075dc:	push   ds
  4075dd:	iret   
  4075de:	add    DWORD PTR [ebx+0x1a],ebp
  4075e1:	mov    ebx,0xa0514cc0
  4075e6:	pop    esi
  4075e7:	jg     0x40764a
  4075e9:	sub    al,0x1d
  4075eb:	mov    dl,al
  4075ed:	(bad)  
  4075ee:	int    0xf7
  4075f0:	test   eax,0xbc2d05e5
  4075f5:	icebp  
  4075f6:	jge    0x40766d
  4075f8:	jne    0x4075f0
  4075fa:	cmp    al,0x84
  4075fc:	sbb    DWORD PTR [ecx-0x5e49e7b8],ecx
  407602:	add    bh,BYTE PTR [eax+0x41834314]
  407608:	clc    
  407609:	in     al,dx
  40760a:	pop    ds
  40760b:	pop    ebp
  40760c:	lds    esp,FWORD PTR [esi]
  40760e:	mov    al,0xb
  407610:	push   es
  407611:	adc    BYTE PTR [esi-0x752bafd2],bl
  407617:	and    esi,ebp
  407619:	or     esi,DWORD PTR [ebx-0x269af06a]
  40761f:	and    DWORD PTR [edx],0x406f7d6d
  407625:	and    DWORD PTR [esi-0x77b257e0],edx
  40762b:	test   eax,0xde2b9972
  407630:	stos   BYTE PTR es:[edi],al
  407631:	adc    al,0xca
  407633:	xchg   ebp,eax
  407634:	pusha  
  407635:	adc    edi,ebp
  407637:	xchg   DWORD PTR [eax-0x53],esp
  40763a:	pop    ebx
  40763b:	leave  
  40763c:	das    
  40763d:	es addr16 (bad) 
  407641:	cwde   
  407642:	stos   BYTE PTR es:[edi],al
  407643:	cwde   
  407644:	lock jnp 0x40767e
  407647:	push   edi
  407648:	aam    0xaa
  40764a:	sub    dl,BYTE PTR [ebx-0x19]
  40764d:	mov    BYTE PTR [ecx],al
  40764f:	push   edx
  407650:	mov    ds:0x36587848,eax
  407655:	or     al,BYTE PTR [ecx]
  407657:	or     ebx,DWORD PTR [edx+0x3b6b9017]
  40765d:	or     ebx,DWORD PTR [esi+0x79f37f05]
  407663:	pop    ss
  407664:	adc    bh,dh
  407666:	xor    dl,BYTE PTR [ecx+0x33]
  407669:	aad    0x48
  40766b:	push   edi
  40766c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40766d:	mov    dl,0x6b
  40766f:	int    0x22
  407671:	dec    esi
  407672:	loopne 0x407606
  407674:	xchg   ecx,eax
  407675:	xor    edx,DWORD PTR fs:[ecx-0x70]
  407679:	jg     0x4076a0
  40767b:	out    0x4,eax
  40767d:	add    dh,dl
  40767f:	(bad)
  407682:	cmc    
  407683:	pop    edx
  407684:	fmulp  st(4),st
  407686:	jns    0x4076fb
  407688:	cmovo  esp,DWORD PTR [ebp+0x1ee08b22]
  40768f:	lods   al,BYTE PTR ds:[esi]
  407690:	ucomiss xmm3,DWORD PTR [esi]
  407693:	aam    0x15
  407695:	sub    dl,BYTE PTR [esi+0x4f]
  407698:	dec    eax
  407699:	test   BYTE PTR [ebp-0x49e3e88a],cl
  40769f:	xor    BYTE PTR [ebp+0x3b],0x39
  4076a3:	pop    eax
  4076a4:	adc    BYTE PTR [edx],0xd7
  4076a7:	cmp    al,0x7a
  4076aa:	hlt    
  4076ab:	call   FWORD PTR [edx]
  4076ad:	int    0x1c
  4076af:	fsubr  st(3),st
  4076b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076b3:	xchg   BYTE PTR [ecx-0x2012830e],ah
  4076b9:	fdivr  DWORD PTR [edi-0x7760dda0]
  4076bf:	dec    edi
  4076c0:	fist   WORD PTR [ebx]
  4076c2:	xor    BYTE PTR [ebx],ah
  4076c4:	cli    
  4076c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c7:	fcmovnb st,st(7)
  4076c9:	lock addr16 sti 
  4076cc:	bound  ebx,QWORD PTR [ebx+0x6d]
  4076cf:	or     BYTE PTR [edi+0x5],ah
  4076d2:	jo     0x40767d
  4076d4:	out    dx,al
  4076d5:	mov    esp,0x8aff939f
  4076da:	sahf   
  4076db:	mov    eax,0xb00fa7ad
  4076e0:	mov    ds:0xb140af16,eax
  4076e5:	cmp    eax,0xf553b69b
  4076ea:	call   0xa97f:0x91c5216f
  4076f1:	add    edi,eax
  4076f3:	mov    WORD PTR [eax],es
  4076f5:	fsub   QWORD PTR [edi+0x675d3a50]
  4076fb:	add    al,0x86
  4076fd:	adc    dh,BYTE PTR [ebx]
  4076ff:	xor    eax,DWORD PTR [ecx-0xc]
  407702:	inc    ebp
  407703:	lock mov bl,0xe8
  407706:	dec    esi
  407707:	sbb    DWORD PTR [edi+0xfad202e],edi
  40770d:	sub    ch,BYTE PTR [ecx]
  40770f:	icebp  
  407710:	and    ecx,DWORD PTR [edx+0x32]
  407713:	mov    ch,0xb4
  407715:	(bad)  
  407716:	cli    
  407717:	sub    al,ch
  407719:	es adc al,0x4f
  40771c:	fnstenv [esi]
  40771e:	xor    BYTE PTR [ebp+0x21f97b5b],ah
  407724:	enter  0x3770,0x3a
  407728:	xor    BYTE PTR [ecx+ebp*8+0x37],ch
  40772c:	std    
  40772d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40772e:	clc    
  40772f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407730:	pop    edx
  407731:	je     0x407799
  407733:	add    edi,ebx
  407735:	xchg   ecx,esp
  407737:	je     0x407730
  407739:	jl     0x407734
  40773b:	mov    esp,0x98062374
  407740:	xchg   BYTE PTR [eax-0x79],dh
  407743:	pushf  
  407744:	push   edx
  407745:	push   ecx
  407746:	js     0x4077a2
  407748:	lods   al,BYTE PTR ds:[esi]
  407749:	fs jnp 0x4076df
  40774c:	push   cs
  40774d:	jno    0x4076dc
  40774f:	push   ecx
  407750:	cmp    eax,0xc74aaa22
  407755:	ja     0x4077ad
  407757:	pop    es
  407758:	sbb    al,0x7e
  40775a:	fnstenv [ecx]
  40775c:	(bad)  
  40775d:	xor    ah,al
  40775f:	xchg   DWORD PTR cs:[esi],esp
  407762:	cdq    
  407763:	pop    es
  407764:	adc    eax,DWORD PTR [ebx+0x4345e54b]
  40776a:	mov    ebp,0x46020aaf
  40776f:	mov    esi,0xf6caf77a
  407774:	xor    DWORD PTR [esi-0x28cd8d93],0x58
  40777b:	dec    esp
  40777c:	dec    edi
  40777d:	cmp    eax,0xc750fc74
  407782:	cmc    
  407783:	mov    WORD PTR [ebx+0x12],ds
  407786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407787:	pop    es
  407788:	or     al,0x1d
  40778a:	mov    esi,0xd642f7e8
  40778f:	mov    esp,0x44d24f72
  407794:	pop    edx
  407795:	xor    ah,dl
  407797:	push   esi
  407798:	sub    DWORD PTR [ecx+0x26ca0fe1],0x83c0e833
  4077a2:	icebp  
  4077a3:	mov    edi,0x5a83d78a
  4077a8:	mov    edi,0xf70ceaea
  4077ad:	ret    0xc212
  4077b0:	mov    ah,0xdb
  4077b2:	xlat   BYTE PTR ds:[ebx]
  4077b3:	ret    0x3e03
  4077b6:	hlt    
  4077b7:	clc    
  4077b8:	shl    bl,0x6b
  4077bb:	adc    bh,ch
  4077bd:	repz lock adc dh,bl
  4077c1:	mov    ah,0x41
  4077c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077c4:	and    DWORD PTR [edi],ebx
  4077c6:	mov    edi,DWORD PTR [ebx-0x59]
  4077c9:	lahf   
  4077ca:	mov    al,cl
  4077cc:	sbb    BYTE PTR [ebx+ebx*8+0x16c989e4],al
  4077d3:	sbb    dl,0xd6
  4077d6:	repz aad 0xa7
  4077d9:	sbb    esi,DWORD PTR [ecx+edi*4+0x6e]
  4077dd:	mov    esp,0x5733e5dc
  4077e2:	or     eax,0xb008f239
  4077e7:	or     BYTE PTR [esi-0xeaf78c0],ch
  4077ed:	adc    ax,0x30e8
  4077f1:	adc    esi,DWORD PTR [eax]
  4077f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077f4:	dec    edi
  4077f5:	ret    0x9938
  4077f8:	sub    ch,BYTE PTR cs:[eax-0x7bd21f72]
  4077ff:	mov    eax,ds:0xbb3ea0e7
  407804:	push   0x3b
  407806:	outs   dx,DWORD PTR fs:[esi]
  407808:	pop    esp
  407809:	adc    eax,0x37bcff5d
  40780e:	gs icebp 
  407810:	(bad)  
  407811:	in     eax,0x27
  407813:	fmul   QWORD PTR [ebx+0x11b8b4d7]
  407819:	add    eax,0x8927c0f4
  40781e:	xor    bl,BYTE PTR [bx]
  407821:	jl     0x4077c7
  407823:	out    dx,eax
  407824:	stc    
  407825:	test   al,0x8c
  407827:	xchg   ebp,eax
  407828:	aaa    
  407829:	call   0x8b67c623
  40782e:	test   DWORD PTR [edi+0x29],esp
  407831:	adc    eax,0x5d296a6f
  407836:	fxsave [edi]
  407839:	mov    dh,0xb3
  40783b:	leave  
  40783c:	ret    0x3642
  40783f:	dec    esi
  407840:	ins    DWORD PTR es:[edi],dx
  407841:	std    
  407842:	adc    al,0x9b
  407844:	or     cl,BYTE PTR [ebp-0x1e]
  407847:	mov    ebx,0x8e086749
  40784c:	call   0xdf8c:0xf753a636
  407853:	popa   
  407854:	neg    bh
  407856:	xchg   ecx,eax
  407857:	in     al,dx
  407858:	ss bswap eax
  40785b:	lock mov WORD PTR [bx-0x7be4],fs
  407861:	cmp    bl,BYTE PTR [edx+0x72]
  407864:	in     eax,dx
  407865:	jmp    0x407883
  407867:	add    al,0x48
  407869:	cmp    DWORD PTR [edi+0x5017dbef],ebx
  40786f:	cmp    al,0x8e
  407871:	mov    ds:0x7e91039d,eax
  407876:	cmp    ah,BYTE PTR [edi-0x23e50de5]
  40787c:	add    BYTE PTR [ebp+0x4a],ch
  40787f:	loopne 0x407842
  407881:	cmc    
  407882:	not    BYTE PTR [edx]
  407884:	xchg   esp,eax
  407885:	data16 adc bl,BYTE PTR [ecx]
  407888:	pop    ebx
  407889:	xor    ch,BYTE PTR [esi+0x64]
  40788c:	jp     0x40781a
  40788e:	cmp    BYTE PTR [ecx],0x67
  407891:	adc    al,0xbd
  407893:	inc    esi
  407894:	dec    ebp
  407895:	ins    DWORD PTR es:[edi],dx
  407896:	push   edx
  407897:	rcr    BYTE PTR [ecx+0x2863f521],0xbd
  40789e:	mov    bl,0x37
  4078a0:	mov    al,0x62
  4078a2:	pop    esp
  4078a3:	or     DWORD PTR [esi],edi
  4078a5:	call   0xb9e10493
  4078aa:	xchg   ebx,eax
  4078ab:	pop    esp
  4078ac:	jmp    0x407843
  4078ae:	inc    edi
  4078af:	repz or ecx,edi
  4078b2:	leave  
  4078b3:	(bad)  [eax]
  4078b5:	xchg   DWORD PTR [ebp+edx*1+0x72cc7f33],ebx
  4078bc:	push   0x9c63b4d1
  4078c1:	mov    esi,0x64769b46
  4078c6:	mov    ?,eax
  4078c8:	inc    eax
  4078c9:	ins    BYTE PTR es:[edi],dx
  4078ca:	aam    0xcc
  4078cc:	ins    BYTE PTR es:[edi],dx
  4078cd:	mov    ecx,0xb8c44192
  4078d2:	mov    ecx,0xfca50e8d
  4078d7:	and    edi,DWORD PTR [ebx]
  4078d9:	jl     0x4078c3
  4078db:	in     al,0x1d
  4078dd:	mov    ebx,esi
  4078df:	fadd   DWORD PTR [edi+edx*1]
  4078e2:	int    0xaa
  4078e4:	xor    ebx,edi
  4078e6:	retf   0xf37b
  4078e9:	push   esi
  4078ea:	push   eax
  4078eb:	add    DWORD PTR [edx+0x73b0174c],edi
  4078f1:	add    eax,0xd282b6a4
  4078f6:	add    al,BYTE PTR [ebx-0x44c118aa]
  4078fc:	cdq    
  4078fd:	jnp    0x40795d
  4078ff:	sub    ecx,DWORD PTR [ecx+0x1b729fff]
  407905:	xchg   edx,edx
  407907:	xchg   ecx,eax
  407908:	mov    WORD PTR [esp+eax*8],ss
  40790b:	or     ebx,ecx
  40790d:	fdiv   QWORD PTR [edi+0x5f592308]
  407913:	stos   BYTE PTR es:[edi],al
  407914:	and    BYTE PTR [edi],ch
  407916:	hlt    
  407917:	mov    bl,0x32
  407919:	retf   
  40791a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40791b:	ins    BYTE PTR es:[edi],dx
  40791c:	mov    edi,0x2678ad80
  407921:	sub    BYTE PTR [ebx+0x62],dl
  407924:	loope  0x40799c
  407926:	(bad)  
  407927:	and    eax,0x9c3204db
  40792c:	sub    al,0xd9
  40792e:	lods   eax,DWORD PTR ds:[esi]
  40792f:	mov    al,ds:0xdca48b50
  407934:	scas   al,BYTE PTR es:[edi]
  407935:	loopne 0x407934
  407937:	dec    ebp
  407938:	adc    al,0x3f
  40793a:	mov    ch,bh
  40793c:	add    eax,0xbf84e0b7
  407941:	inc    edi
  407942:	pop    DWORD PTR [ecx-0x35]
  407945:	cmp    ecx,DWORD PTR [ebx-0x24d6ff04]
  40794b:	xchg   ebx,eax
  40794c:	aam    0x30
  40794e:	stc    
  40794f:	ins    DWORD PTR es:[edi],dx
  407950:	mov    bl,0xa5
  407952:	xchg   ebp,eax
  407953:	and    BYTE PTR [eax-0xe],ch
  407956:	pop    ecx
  407957:	pop    edi
  407958:	ret    
  407959:	jns    0x4078f4
  40795b:	sbb    DWORD PTR [edx],esi
  40795d:	and    BYTE PTR [ebx],al
  40795f:	xchg   edi,eax
  407960:	adc    eax,0xd96024f2
  407965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407966:	cmp    ecx,0xc0466c0
  40796c:	fwait
  40796d:	adc    bh,BYTE PTR [esi]
  40796f:	into   
  407970:	sbb    edx,esp
  407972:	ja     0x407999
  407974:	lea    esi,[edi-0x3e]
  407977:	jg     0x4079e1
  407979:	add    al,BYTE PTR [ecx]
  40797b:	test   DWORD PTR [eax-0x18],edx
  40797e:	hlt    
  40797f:	fs dec edi
  407981:	popf   
  407982:	popa   
  407983:	loop   0x4079fa
  407985:	sbb    BYTE PTR [edx-0x287f91af],ch
  40798b:	add    eax,0xad5d3115
  407990:	inc    edx
  407991:	and    DWORD PTR [eax+edx*1+0xd],edi
  407995:	sub    eax,0xf11d24eb
  40799a:	iret   
  40799b:	mov    edx,DWORD PTR [edx]
  40799d:	mov    eax,0x185801d0
  4079a2:	popa   
  4079a3:	pop    ecx
  4079a4:	xchg   ecx,eax
  4079a5:	cmp    eax,0xb6b9e6aa
  4079aa:	es mov dh,0xe0
  4079ad:	add    al,0x3f
  4079af:	xchg   ebp,eax
  4079b0:	xor    al,0xf0
  4079b2:	inc    eax
  4079b3:	clc    
  4079b4:	push   esp
  4079b5:	fst    QWORD PTR [edi-0x2d]
  4079b8:	lds    edx,FWORD PTR [eax+0x1bc886a6]
  4079be:	inc    edi
  4079bf:	test   BYTE PTR [ebx],ah
  4079c1:	scas   al,BYTE PTR es:[edi]
  4079c2:	jle    0x4079ac
  4079c4:	aaa    
  4079c5:	mov    cl,0xba
  4079c7:	or     al,0x4e
  4079c9:	sub    eax,DWORD PTR [esi]
  4079cb:	lea    edi,ds:0x84499c60
  4079d1:	mov    cl,0x7
  4079d3:	and    dl,BYTE PTR [ebx+0x25]
  4079d6:	les    ecx,FWORD PTR [esi+0x10dad9eb]
  4079dc:	inc    eax
  4079dd:	cmc    
  4079de:	in     eax,dx
  4079df:	jmp    0xee17:0x710fc4c2
  4079e6:	(bad)  
  4079e7:	fimul  DWORD PTR [edi+0x15]
  4079ea:	mov    WORD PTR [ebx+0xc],fs
  4079ed:	lea    esi,[ebx]
  4079ef:	ret    
  4079f0:	les    esp,FWORD PTR [eax+eax*8-0x77d9b8bb]
  4079f7:	sbb    ebp,DWORD PTR [edx-0x38]
  4079fa:	fs es jmp 0xb15f:0x32f410c8
  407a03:	xor    BYTE PTR [esi+0x43],bh
  407a06:	lods   al,BYTE PTR ds:[esi]
  407a07:	xchg   esp,eax
  407a08:	loop   0x4079ef
  407a0a:	jbe    0x4079c9
  407a0c:	daa    
  407a0d:	pusha  
  407a0e:	jmp    0xd835f22a
  407a13:	fbld   TBYTE PTR cs:[esi-0x2f16f330]
  407a1a:	(bad)  
  407a1b:	ret    0xe04c
  407a1e:	sub    eax,0x78f57bc5
  407a23:	ror    dh,1
  407a25:	test   esi,esi
  407a27:	ja     0x407a90
  407a29:	jns    0x4079be
  407a2b:	dec    esp
  407a2c:	dec    ebx
  407a2d:	and    ch,BYTE PTR [edi+0x5c]
  407a30:	shl    ch,0x94
  407a33:	jl     0x407a4f
  407a35:	stc    
  407a36:	push   0x5aa51658
  407a3b:	test   eax,0x61a84d43
  407a40:	mov    bh,BYTE PTR [ebx-0x188f22a2]
  407a46:	les    eax,FWORD PTR [ebx-0x1ecf6767]
  407a4c:	sub    eax,0xf08ffd26
  407a51:	out    0x10,eax
  407a53:	and    ecx,DWORD PTR [ecx+0xd]
  407a56:	xor    ch,BYTE PTR [ebx+eax*2+0x5e87fa9c]
  407a5d:	push   es
  407a5e:	ins    BYTE PTR es:[edi],dx
  407a5f:	add    al,BYTE PTR [ecx-0x5aab3a38]
  407a65:	xchg   al,dl
  407a67:	jno    0x407ae8
  407a69:	gs in  eax,0x30
  407a6c:	pusha  
  407a6d:	out    0x94,eax
  407a6f:	fdiv   DWORD PTR [ebp+0x4c]
  407a72:	sub    ebx,DWORD PTR [edi]
  407a74:	repz xlat BYTE PTR ds:[ebx]
  407a76:	sbb    ebx,DWORD PTR [ebx-0x24]
  407a79:	pop    ds
  407a7a:	mov    ebp,0x34817bf1
  407a7f:	aad    0xab
  407a81:	pop    ebx
  407a82:	test   al,0x3a
  407a84:	cli    
  407a85:	inc    ecx
  407a86:	add    ch,ch
  407a88:	fistp  DWORD PTR [esp+ebx*2-0x31]
  407a8c:	clts   
  407a8e:	add    edi,DWORD PTR [edx-0x65]
  407a91:	imul   edi,DWORD PTR [ecx+0x3f94f2dc],0xffffffa7
  407a98:	or     ebx,DWORD PTR [ebx+ecx*1+0x7ae7abb0]
  407a9f:	loopne 0x407a8b
  407aa1:	cmp    eax,0xbbccda07
  407aa6:	and    al,0xf4
  407aa8:	out    dx,eax
  407aa9:	xor    eax,0x64b3fee9
  407aae:	imul   ecx,DWORD PTR [ebx],0x37
  407ab1:	inc    esi
  407ab2:	mov    ecx,DWORD PTR [ecx]
  407ab4:	sbb    DWORD PTR [ebx],eax
  407ab6:	test   BYTE PTR [ebx-0x5e],ah
  407ab9:	js     0x407ad0
  407abb:	jp     0x407a5e
  407abd:	add    al,0x58
  407abf:	sub    eax,0x3a42fca8
  407ac4:	sub    ch,bh
  407ac6:	sar    BYTE PTR [ebp+0x2f],1
  407ac9:	popf   
  407aca:	xchg   DWORD PTR [ebp-0x2ce65caa],eax
  407ad0:	xor    eax,0x839e8d82
  407ad5:	lods   al,BYTE PTR ds:[esi]
  407ad6:	leave  
  407ad7:	push   esp
  407ad8:	outs   dx,BYTE PTR ds:[esi]
  407ad9:	dec    eax
  407ada:	inc    esi
  407adb:	sbb    DWORD PTR [eax+0x43],0x6b8b99a
  407ae2:	dec    esp
  407ae3:	imul   esp,DWORD PTR [ecx+0x524bf6ed],0x2cfc2e67
  407aed:	dec    edx
  407aee:	and    dl,BYTE PTR ds:0x98f52b33
  407af4:	cmp    al,0x20
  407af6:	jg     0x407a7f
  407af8:	jp     0x407b4d
  407afa:	out    0x57,eax
  407afc:	addr16 mov esi,0x8927f05f
  407b02:	frstpm(287 only) 
  407b04:	sar    DWORD PTR [eax-0x90c8149],0xf6
  407b0b:	jns    0x407ab3
  407b0d:	push   edx
  407b0e:	xchg   ebp,eax
  407b0f:	mov    DWORD PTR [edi+0x25],ecx
  407b12:	sbb    BYTE PTR [eax+0x7],ah
  407b15:	push   eax
  407b16:	fwait
  407b17:	dec    esi
  407b18:	pop    ecx
  407b19:	rcl    BYTE PTR [esi-0x74261109],0x6b
  407b20:	cli    
  407b21:	sahf   
  407b22:	inc    ecx
  407b23:	arpl   WORD PTR [edi-0x5fc34600],bp
  407b29:	inc    ebx
  407b2a:	mov    ds:0xef4f91c5,eax
  407b2f:	loopne 0x407b2b
  407b31:	adc    dh,ah
  407b33:	mov    edx,0x66edeb1b
  407b38:	lea    edi,[edx-0x56]
  407b3b:	das    
  407b3c:	pop    edi
  407b3d:	jmp    0x407b59
  407b3f:	fidivr WORD PTR [edx-0x1db806a1]
  407b45:	cld    
  407b46:	outs   dx,DWORD PTR ds:[esi]
  407b47:	clc    
  407b48:	sahf   
  407b49:	rcl    esp,0x2d
  407b4c:	leave  
  407b4d:	push   ecx
  407b4e:	clc    
  407b4f:	in     eax,dx
  407b50:	mov    cl,0x99
  407b52:	popaw  
  407b54:	(bad)  
  407b55:	mov    al,ds:0xfa9e1b7d
  407b5a:	mov    al,0xc2
  407b5c:	or     ecx,esi
  407b5e:	rcl    DWORD PTR [ecx+0x5bf4061f],cl
  407b64:	mov    al,ds:0x60faf9c8
  407b69:	stos   DWORD PTR es:[edi],eax
  407b6a:	sbb    edi,DWORD PTR [edi+0x2fa212cd]
  407b70:	and    al,0x70
  407b72:	stos   BYTE PTR es:[edi],al
  407b73:	pop    edx
  407b74:	cmp    al,0x9d
  407b76:	cmp    BYTE PTR [eax+0x3e],cl
  407b79:	(bad)  [ebp-0x7d]
  407b7c:	popf   
  407b7d:	fidivr DWORD PTR cs:[ecx-0x5e4b8c20]
  407b84:	lods   eax,DWORD PTR ds:[esi]
  407b85:	jne    0x407bb2
  407b87:	fisubr WORD PTR [ebp-0x3a]
  407b8a:	into   
  407b8b:	pop    esi
  407b8c:	out    0xe0,eax
  407b8e:	add    DWORD PTR [edx-0x409b6809],esp
  407b94:	pushf  
  407b95:	dec    eax
  407b96:	stos   DWORD PTR es:[edi],eax
  407b97:	mov    al,ds:0xf1c16836
  407b9c:	push   eax
  407b9d:	imul   ebx,DWORD PTR [ecx-0x27],0xf24bc1d3
  407ba4:	loopne 0x407b30
  407ba6:	and    eax,0xbd08ff20
  407bab:	sbb    bh,bh
  407bad:	xchg   ecx,eax
  407bae:	and    edx,DWORD PTR [ebp-0x71]
  407bb1:	cmc    
  407bb2:	sbb    ecx,eax
  407bb4:	pop    ss
  407bb5:	mov    ebp,0x5f426551
  407bba:	xchg   edx,eax
  407bbb:	out    0x45,eax
  407bbd:	ins    DWORD PTR es:[edi],dx
  407bbe:	jae    0x407bd9
  407bc0:	iret   
  407bc1:	mov    eax,0xc0f390eb
  407bc6:	in     eax,0xe2
  407bc8:	push   0x8d05a3cb
  407bcd:	sar    BYTE PTR [edi-0x428ecf62],0x92
  407bd4:	outs   dx,BYTE PTR ds:[esi]
  407bd5:	add    eax,DWORD PTR [edx+0x16f80e4]
  407bdb:	cmc    
  407bdc:	jg     0x407bd0
  407bde:	xchg   ebp,eax
  407bdf:	xchg   edi,eax
  407be0:	sub    esp,DWORD PTR [ecx]
  407be2:	push   ss
  407be3:	pop    esi
  407be4:	cmp    BYTE PTR [ecx+0x6b8afa7e],0x93
  407beb:	add    BYTE PTR [esi-0x322b4a23],0xe0
  407bf2:	jmp    DWORD PTR [ebp+ebx*4+0x2f]
  407bf6:	jp     0x407c5e
  407bf8:	test   BYTE PTR [esi-0x1e],al
  407bfb:	sbb    ch,BYTE PTR [edx+0x73]
  407bfe:	cmc    
  407bff:	das    
  407c00:	jo     0x407b88
  407c02:	jge    0x407bcc
  407c04:	rcl    DWORD PTR [ebx-0x326ba337],0x4
  407c0b:	mov    bl,0x88
  407c0d:	xor    ebp,edi
  407c0f:	mov    ds:0xfad04fa9,al
  407c14:	ja     0x407c4a
  407c16:	ret    
  407c17:	push   0xaaf0f2d9
  407c1c:	inc    ebp
  407c1d:	pop    ebp
  407c1e:	mov    ds,WORD PTR [esi-0x4]
  407c21:	push   ss
  407c22:	rol    BYTE PTR [eax+0x6b1cc712],cl
  407c28:	ss mov eax,ebx
  407c2b:	adc    ebp,edi
  407c2d:	jb     0x407c0a
  407c2f:	ins    BYTE PTR es:[edi],dx
  407c30:	or     al,0xea
  407c32:	outs   dx,BYTE PTR ds:[esi]
  407c33:	addr16 mov ebx,0xaa71ec74
  407c39:	ss xchg ebp,eax
  407c3b:	mov    ebp,0xe3795551
  407c40:	js     0x407c7e
  407c42:	repnz call 0x663b:0x2066416f
  407c4a:	loope  0x407bf5
  407c4c:	adc    DWORD PTR [esp+edx*4+0x9c3c964],edx
  407c53:	xchg   edi,eax
  407c54:	pop    eax
  407c55:	leave  
  407c56:	xor    BYTE PTR [edi+ebx*1+0x43],ah
  407c5a:	arpl   bx,dx
  407c5c:	or     eax,0xeccb2f04
  407c61:	in     eax,dx
  407c62:	push   eax
  407c63:	mov    al,ds:0xa2db8597
  407c68:	lods   eax,DWORD PTR ds:[esi]
  407c69:	into   
  407c6a:	enter  0x235,0xf7
  407c6e:	(bad)  
  407c6f:	call   0xd344d34c
  407c74:	push   es
  407c75:	sbb    ah,BYTE PTR [edi]
  407c77:	in     eax,dx
  407c78:	inc    esp
  407c79:	mov    DWORD PTR [ebx-0x3],ecx
  407c7c:	and    eax,0x77bea9ca
  407c81:	adc    al,0xa5
  407c83:	mov    esp,0xe1a03e7c
  407c88:	out    0xf6,al
  407c8a:	xor    al,BYTE PTR [edi-0x26397317]
  407c90:	icebp  
  407c91:	and    eax,0x8959d42
  407c96:	mov    eax,ds:0x39906657
  407c9b:	push   esi
  407c9c:	cmp    DWORD PTR [eax+0x74],ebp
  407c9f:	adc    BYTE PTR [eax-0x5415ed36],0x6e
  407ca6:	fidivr WORD PTR [esp+ebp*8+0x6d72e78b]
  407cad:	xchg   edx,eax
  407cae:	jo     0x407c7d
  407cb0:	add    ch,BYTE PTR [edx-0x25a08793]
  407cb6:	mov    dl,0x32
  407cb8:	fs sub al,bl
  407cbb:	fstp   DWORD PTR [ecx-0x4d127095]
  407cc1:	inc    ebx
  407cc2:	pop    ss
  407cc3:	jp     0x407c89
  407cc5:	daa    
  407cc6:	ja     0x407cfb
  407cc8:	sub    eax,0x8775613
  407ccd:	add    bl,BYTE PTR [eax]
  407ccf:	loope  0x407ca0
  407cd1:	nop
  407cd2:	aaa    
  407cd3:	xchg   edx,eax
  407cd4:	xor    ch,BYTE PTR [ecx+0x24]
  407cd7:	add    bh,bh
  407cd9:	addr16 push ecx
  407cdb:	cmp    ecx,DWORD PTR [edi]
  407cdd:	ins    DWORD PTR es:[edi],dx
  407cde:	icebp  
  407cdf:	pop    eax
  407ce0:	mov    bh,BYTE PTR [ebp-0x38]
  407ce3:	aaa    
  407ce4:	fsubr  DWORD PTR ds:0x26057b93
  407cea:	imul   esi,DWORD PTR [ebx-0x21bcb71],0x6b7a5112
  407cf4:	iret   
  407cf5:	ja     0x407d12
  407cf7:	adc    eax,0xa9735ff3
  407cfc:	pop    edi
  407cfd:	pop    esp
  407cfe:	sub    BYTE PTR [edi+0x2421193e],cl
  407d04:	aas    
  407d05:	ret    
  407d06:	inc    ebp
  407d07:	push   es
  407d08:	sbb    BYTE PTR [ebx-0x47],ch
  407d0b:	hlt    
  407d0c:	pop    eax
  407d0d:	add    al,0x81
  407d0f:	popf   
  407d10:	jmp    0x7017f12a
  407d15:	pop    ebx
  407d16:	sbb    ebp,DWORD PTR [esi+0x40ee6ab0]
  407d1c:	sbb    bh,bh
  407d1e:	sub    dl,BYTE PTR [edi-0x529cab49]
  407d24:	arpl   si,dx
  407d26:	jb     0x407d05
  407d28:	cmp    ebp,DWORD PTR [esi+0x4ec4d041]
  407d2e:	push   edi
  407d2f:	mov    ecx,0x6014e223
  407d34:	and    eax,0xac38f37b
  407d39:	ins    BYTE PTR es:[edi],dx
  407d3a:	imul   edx,eax,0xbf3550a7
  407d40:	jmp    0xa05b:0xc4ddd5d4
  407d47:	lea    edi,[esi]
  407d49:	in     eax,0x99
  407d4b:	xchg   BYTE PTR [esi-0x62],cl
  407d4e:	jo     0x407d91
  407d50:	pusha  
  407d51:	bound  eax,QWORD PTR [edi]
  407d53:	rcl    BYTE PTR [edx-0x2c738c0],0xce
  407d5a:	aad    0x76
  407d5c:	add    eax,0x74416175
  407d61:	sub    bh,BYTE PTR [edi+edi*8-0x2e26d1fc]
  407d68:	(bad)  
  407d69:	iret   
  407d6a:	push   esp
  407d6b:	jbe    0x407cf0
  407d6d:	inc    esi
  407d6e:	jae    0x407def
  407d70:	add    al,0x2f
  407d72:	mov    al,ds:0x7accbe58
  407d77:	mov    eax,0x103a40d1
  407d7c:	aam    0x36
  407d7e:	xor    DWORD PTR [edx],0xfffffff1
  407d81:	mov    eax,ds:0xbed24ac5
  407d86:	sbb    ebx,DWORD PTR fs:[bp+di+0x53]
  407d8b:	mov    edi,DWORD PTR [edi-0x7ac33955]
  407d91:	xor    DWORD PTR [edi],edi
  407d93:	jle    0x407df7
  407d95:	repz jne 0x407d3f
  407d98:	pop    DWORD PTR [ebp+0x1793cf65]
  407d9e:	cmp    BYTE PTR [edx+0x1d],cl
  407da1:	jb     0x407d4e
  407da3:	xchg   ebx,eax
  407da4:	inc    ebx
  407da5:	outs   dx,BYTE PTR ds:[esi]
  407da6:	aad    0xd6
  407da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da9:	jae    0x407e18
  407dab:	repnz rol DWORD PTR [edx-0x246f2ace],0xc7
  407db3:	jp     0x407d63
  407db5:	xor    eax,0x65cf7d0c
  407dba:	jno    0x407d3f
  407dbc:	ja     0x407dc9
  407dbe:	pop    esp
  407dbf:	(bad)  
  407dc0:	repz test DWORD PTR [eax+eiz*1-0x58],eax
  407dc5:	popf   
  407dc6:	ss pop ecx
  407dc8:	es mov ecx,0x61c9276c
  407dce:	xchg   edx,eax
  407dcf:	cdq    
  407dd0:	jnp    0x407d62
  407dd2:	(bad)  
  407dd3:	mov    eax,ds:0x7bf2a606
  407dd8:	mov    eax,0xf3c837a1
  407ddd:	jecxz  0x407da8
  407ddf:	mov    ecx,0xacbf8859
  407de4:	ins    DWORD PTR es:[edi],dx
  407de5:	adc    eax,0x939de66c
  407dea:	adc    al,0xba
  407dec:	rcl    al,cl
  407dee:	jno    0x407e37
  407df0:	xchg   edi,eax
  407df1:	mov    eax,ds:0x68ea5fa2
  407df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407df7:	push   ecx
  407df8:	dec    ebp
  407df9:	repnz data16 (bad) 
  407dfc:	xchg   ebx,eax
  407dfd:	xor    bl,cl
  407dff:	sahf   
  407e00:	sub    cl,bl
  407e02:	retf   
  407e03:	sar    BYTE PTR [ebx-0x5890fdff],cl
  407e09:	dec    eax
  407e0a:	add    DWORD PTR [esi-0x7f],eax
  407e0d:	jmp    0x56c0:0xf8f5509f
  407e14:	jne    0x407e77
  407e16:	pushf  
  407e17:	xchg   DWORD PTR [esi-0x3d],esi
  407e1a:	cmc    
  407e1b:	fstp   DWORD PTR ds:[esi]
  407e1e:	add    eax,0x2366b1a9
  407e23:	sub    DWORD PTR [ebp-0x1c],ebp
  407e26:	or     eax,0xb0f5edd7
  407e2b:	shl    BYTE PTR [ecx],0x6
  407e2e:	xor    eax,0x3a6bb6b0
  407e33:	dec    ebx
  407e34:	xchg   ebp,eax
  407e35:	mov    ebp,0x8895d22
  407e3a:	jbe    0x407ddd
  407e3c:	mov    ds:0xa3ee5df,al
  407e41:	sub    eax,0x6a958ad8
  407e46:	cdq    
  407e47:	cwde   
  407e48:	ret    0x4fdc
  407e4b:	pop    es
  407e4c:	sbb    DWORD PTR [esi],ebx
  407e4e:	push   ebx
  407e4f:	(bad)  
  407e51:	cs pop edi
  407e53:	loope  0x407ea7
  407e55:	sub    edi,esi
  407e57:	pop    DWORD PTR [edx]
  407e59:	shl    bl,cl
  407e5b:	jno    0x407eba
  407e5d:	xchg   esp,eax
  407e5e:	aad    0x1a
  407e60:	or     dl,dh
  407e62:	lods   eax,DWORD PTR ds:[esi]
  407e63:	sub    ebx,DWORD PTR [ebx+0x440397bf]
  407e69:	push   0x1ae5a34e
  407e6e:	cmc    
  407e6f:	popa   
  407e70:	clc    
  407e71:	out    dx,al
  407e72:	add    BYTE PTR [edx-0x11],0xf4
  407e76:	mov    bh,0xc5
  407e78:	es das 
  407e7a:	sbb    eax,0x8a35e69f
  407e7f:	test   al,0xc1
  407e81:	mov    WORD PTR [eax],cs
  407e83:	fs ret 0x7496
  407e87:	xor    DWORD PTR [eax-0x8],ecx
  407e8a:	cld    
  407e8b:	adc    bl,BYTE PTR [esi-0x19]
  407e8e:	mov    bl,0xc8
  407e90:	xor    al,ch
  407e92:	into   
  407e93:	outs   dx,DWORD PTR ds:[esi]
  407e94:	hlt    
  407e95:	(bad)  
  407e96:	(bad)  
  407e97:	sub    al,0xc0
  407e99:	div    BYTE PTR [edi+0x446aa9d3]
  407e9f:	dec    ecx
  407ea0:	mov    ds:0x6474833a,eax
  407ea5:	jg     0x407e33
  407ea7:	(bad)  
  407ea8:	int    0x60
  407eaa:	or     esp,ebp
  407eac:	out    0xeb,al
  407eae:	mov    al,0xfe
  407eb0:	repz loope 0x407eda
  407eb3:	mov    DWORD PTR [eax],edx
  407eb5:	sub    al,0x6b
  407eb7:	(bad)  
  407eb8:	rep stos BYTE PTR es:[edi],al
  407eba:	inc    eax
  407ebb:	push   esp
  407ebc:	repz adc eax,0xb4ac941b
  407ec2:	out    0x14,al
  407ec4:	cmp    ebp,DWORD PTR [ecx]
  407ec6:	out    0xa3,al
  407ec8:	icebp  
  407ec9:	push   es
  407eca:	repz xor DWORD PTR [esi-0x44cab1cc],esi
  407ed1:	ins    DWORD PTR es:[edi],dx
  407ed2:	dec    esi
  407ed3:	cmp    al,0x87
  407ed5:	rcr    DWORD PTR [ecx+0x15fe866f],0xbb
  407edc:	bound  esi,QWORD PTR [edi+0x61b17588]
  407ee2:	xlat   BYTE PTR ds:[ebx]
  407ee3:	fst    QWORD PTR [ecx+ebp*1-0x1ebd9d7e]
  407eea:	mov    esi,0x590132b0
  407eef:	dec    esp
  407ef0:	mov    esi,esi
  407ef2:	aas    
  407ef3:	fist   DWORD PTR [eax-0x699570f9]
  407ef9:	shl    bh,0x1a
  407efc:	jl     0x407eec
  407efe:	call   0x8b7a7f4d
  407f03:	inc    edi
  407f04:	fldenv [ebp-0x59e8acf4]
  407f0a:	dec    esi
  407f0b:	mov    dh,0xb
  407f0d:	mov    cl,0x77
  407f0f:	pop    ds
  407f10:	std    
  407f11:	sti    
  407f12:	mov    DWORD PTR [esi-0x6a],ecx
  407f15:	pop    esi
  407f16:	in     eax,dx
  407f17:	cmp    BYTE PTR [edx-0x54],bl
  407f1a:	jnp    0x407f09
  407f1c:	inc    eax
  407f1d:	ficomp DWORD PTR [esi+0x10993571]
  407f23:	dec    esi
  407f24:	mov    fs,WORD PTR [ebp-0x172fd12f]
  407f2a:	aaa    
  407f2b:	jnp    0x407f2f
  407f2d:	into   
  407f2e:	push   ds
  407f2f:	imul   esi,esi,0x32
  407f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f33:	push   es
  407f34:	std    
  407f35:	in     al,dx
  407f36:	mov    WORD PTR ds:0xcdd76201,ss
  407f3c:	outs   dx,BYTE PTR ds:[esi]
  407f3d:	inc    ecx
  407f3e:	shr    DWORD PTR [edi],1
  407f40:	mov    ch,0x88
  407f42:	push   ds
  407f43:	pop    ss
  407f44:	test   BYTE PTR [ecx+0x60d14379],dl
  407f4a:	xchg   esp,eax
  407f4b:	aas    
  407f4c:	push   esi
  407f4d:	xchg   edx,eax
  407f4e:	inc    ecx
  407f4f:	or     bh,BYTE PTR [eax]
  407f51:	mov    BYTE PTR [edi],dh
  407f53:	cmp    BYTE PTR [esi+0x36ad7777],dl
  407f59:	adc    ebp,DWORD PTR [ebx]
  407f5b:	jle    0x407f94
  407f5d:	xor    eax,0xe812353f
  407f62:	mov    ebp,0xda5f1cd7
  407f67:	jnp    0x407f11
  407f69:	sbb    al,0x25
  407f6b:	fwait
  407f6c:	mov    ah,0xa5
  407f6e:	xchg   ebx,eax
  407f6f:	mov    ch,0xaa
  407f71:	rol    DWORD PTR [edx-0x5a],1
  407f74:	hlt    
  407f75:	sti    
  407f76:	or     al,0x89
  407f78:	jmp    0x3cd7ff97
  407f7d:	add    ebp,DWORD PTR [ebp+eax*4-0x72b1498d]
  407f84:	pop    eax
  407f85:	stos   DWORD PTR es:[edi],eax
  407f86:	inc    ecx
  407f87:	ds cwde 
  407f89:	adc    dh,BYTE PTR [esi]
  407f8b:	lods   eax,DWORD PTR ds:[esi]
  407f8c:	jmp    0x50f534cf
  407f91:	adc    ebx,DWORD PTR [ebp+0x36]
  407f94:	inc    ebx
  407f95:	cmp    eax,0xe2873eb
  407f9a:	scas   eax,DWORD PTR es:[edi]
  407f9b:	retf   0x7e83
  407f9e:	jne    0x40800e
  407fa0:	iret   
  407fa1:	sar    DWORD PTR [edx+0x220afcc7],cl
  407fa7:	sbb    al,0xd8
  407fa9:	std    
  407faa:	sub    edx,DWORD PTR [edx+0xa]
  407fad:	add    BYTE PTR [ecx-0xe],0x83
  407fb1:	jnp    0x407fff
  407fb3:	pop    esi
  407fb4:	enter  0x59f3,0x4d
  407fb8:	adc    al,0xd9
  407fba:	xor    eax,ebp
  407fbc:	stc    
  407fbd:	jns    0x407faa
  407fbf:	in     al,0xe7
  407fc1:	retf   0x151a
  407fc4:	ret    
  407fc5:	loope  0x408039
  407fc7:	cli    
  407fc8:	adc    BYTE PTR [ebp+0x26],al
  407fcb:	add    DWORD PTR [esi],0x3149f7a
  407fd1:	mov    ebp,cs
  407fd3:	xlat   BYTE PTR ds:[ebx]
  407fd4:	push   0x6102f4c8
  407fd9:	(bad)  
  407fdb:	pop    edx
  407fdc:	in     eax,0x9
  407fde:	dec    edx
  407fdf:	cmp    edi,DWORD PTR [esp+eax*2]
  407fe2:	lods   al,BYTE PTR ds:[esi]
  407fe3:	sti    
  407fe4:	add    esi,DWORD PTR [ebx+esi*4+0x60]
  407fe8:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fea:	icebp  
  407feb:	outs   dx,BYTE PTR ds:[esi]
  407fec:	pop    ss
  407fed:	sub    eax,0x31b732f8
  407ff2:	mov    cl,0x8e
  407ff4:	add    esp,DWORD PTR [esi+0x6d17df33]
  407ffa:	pop    ecx
  407ffb:	aaa    
  407ffc:	daa    
  407ffd:	jp     0x408072
  407fff:	sbb    ebx,ecx
  408001:	sbb    edi,DWORD PTR [edi]
  408003:	inc    esp
  408004:	add    DWORD PTR [ebx-0x64],ebx
  408007:	(bad)  ds:[eax-0x7396035d]
  40800e:	push   eax
  40800f:	test   al,0xbb
  408011:	hlt    
  408012:	inc    ebp
  408013:	add    BYTE PTR ds:0x809f496a,dl
  408019:	test   eax,0x3f4d35f9
  40801e:	mov    esi,0xd2d95fe6
  408023:	pop    esi
  408024:	pop    ss
  408025:	adc    DWORD PTR [edx],ecx
  408027:	icebp  
  408028:	pop    edi
  408029:	scas   eax,DWORD PTR es:[edi]
  40802a:	adc    al,0x61
  40802c:	(bad)  
  40802d:	and    ch,bl
  40802f:	in     eax,0x9
  408031:	test   al,0x37
  408033:	sbb    al,0x89
  408035:	and    cl,BYTE PTR ds:0xc1c0bd69
  40803b:	pop    es
  40803c:	lods   al,BYTE PTR ds:[esi]
  40803d:	sub    dl,BYTE PTR [esi+0xa]
  408040:	push   ebx
  408041:	je     0x4080b0
  408043:	and    DWORD PTR [edi],esi
  408045:	inc    edx
  408046:	dec    edi
  408047:	sbb    DWORD PTR [eax-0x75],ebp
  40804a:	fcomi  st,st(1)
  40804c:	pop    esp
  40804d:	out    dx,al
  40804e:	bound  ebx,QWORD PTR [edi+0x4]
  408051:	pop    edi
  408052:	fldenv [edi]
  408054:	in     eax,0x2e
  408056:	push   esi
  408057:	pushf  
  408058:	mov    eax,ds:0x71cd8fb4
  40805d:	xchg   edi,eax
  40805e:	ins    DWORD PTR es:[edi],dx
  40805f:	jge    0x4080b1
  408061:	dec    eax
  408062:	std    
  408063:	mov    bh,0x44
  408065:	pop    edx
  408066:	in     eax,0x30
  408068:	jge    0x40801b
  40806a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40806b:	sub    ah,ah
  40806d:	push   ebx
  40806e:	clc    
  40806f:	ja     0x40800d
  408071:	mov    eax,0xa2aa2d75
  408076:	stos   DWORD PTR es:[edi],eax
  408077:	adc    DWORD PTR [eax],0xffffff9f
  40807a:	cs jmp 0xbade8465
  408080:	(bad)  
  408081:	(bad)  [ebx-0x54]
  408084:	cmp    al,0x2
  408086:	ins    DWORD PTR es:[edi],dx
  408087:	data16 jg 0x408078
  40808a:	data16 fisttp QWORD PTR [ebx]
  40808d:	jl     0x4080f1
  40808f:	leave  
  408090:	mov    edx,0xca4910a6
  408095:	sahf   
  408096:	cmp    esi,DWORD PTR ds:0x35f902b2
  40809c:	or     eax,0x9a37e3a4
  4080a1:	outs   dx,BYTE PTR ds:[esi]
  4080a2:	ret    0x6b8c
  4080a5:	jmp    0x5682abc5
  4080aa:	idiv   esp
  4080ac:	test   BYTE PTR ds:0xb9fb30e0,ch
  4080b2:	add    al,0x31
  4080b4:	mov    bh,BYTE PTR [eax]
  4080b6:	xchg   BYTE PTR [ebp+ecx*2-0x317c4685],al
  4080bd:	and    eax,0x99d0f170
  4080c2:	call   0xd278:0xef6b26ab
  4080c9:	ret    0x7766
  4080cc:	xor    BYTE PTR [ebx-0x504f7921],ah
  4080d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080d3:	add    al,BYTE PTR [esi]
  4080d5:	ins    DWORD PTR es:[edi],dx
  4080d6:	aam    0x5c
  4080d8:	cmp    DWORD PTR [ebx+0x71ba032b],ecx
  4080de:	or     eax,0x1aefb527
  4080e3:	aam    0xc0
  4080e5:	sub    al,0xf4
  4080e7:	jge    0x4080b5
  4080e9:	scas   al,BYTE PTR es:[edi]
  4080ea:	je     0x40807e
  4080ec:	sub    ch,dh
  4080ee:	scas   eax,DWORD PTR es:[edi]
  4080ef:	inc    esi
  4080f0:	mov    WORD PTR [ebp-0x59],ss
  4080f3:	xchg   ecx,eax
  4080f4:	xchg   esi,eax
  4080f5:	pop    ecx
  4080f6:	cdq    
  4080f7:	in     al,0xee
  4080f9:	icebp  
  4080fa:	cmp    bh,BYTE PTR [ebx-0x5b43c727]
  408100:	dec    ebx
  408101:	popf   
  408102:	fsubr  DWORD PTR [edi+0x4b]
  408105:	pop    eax
  408106:	cs cmp ebx,ebx
  408109:	cmp    esi,DWORD PTR [esi]
  40810b:	mov    cl,0x80
  40810d:	cld    
  40810e:	ret    0xea2f
  408111:	jp     0x40811f
  408113:	lods   eax,DWORD PTR ds:[esi]
  408114:	js     0x40809a
  408116:	push   ecx
  408117:	inc    BYTE PTR [edx+0x458a073b]
  40811d:	jns    0x40818e
  40811f:	push   ss
  408120:	call   0x1f6abf2c
  408125:	xchg   edi,eax
  408126:	and    esi,DWORD PTR [ecx-0x107f36d7]
  40812c:	cmp    cl,BYTE PTR [edi-0x5e4bb0d3]
  408132:	pop    es
  408133:	mov    ch,0xea
  408135:	pop    ss
  408136:	sub    dh,dl
  408138:	imul   edi,DWORD PTR [eax+0x41],0xff222f89
  40813f:	mov    ds:0x9eb6e93a,eax
  408144:	in     eax,dx
  408145:	xor    eax,0xef5e5b3d
  40814a:	addr16 jb 0x4080f7
  40814d:	nop
  40814e:	inc    ecx
  40814f:	loopne 0x40810b
  408151:	inc    esi
  408152:	dec    esi
  408153:	lods   eax,DWORD PTR ds:[esi]
  408154:	js     0x4081cd
  408156:	in     eax,0xd2
  408158:	(bad)  
  408159:	cmp    BYTE PTR [esp+ebx*8-0x5cde7e56],ah
  408160:	test   DWORD PTR [edi],0x63af3064
  408166:	xchg   DWORD PTR [ebx],esi
  408168:	int    0x1c
  40816a:	pop    edi
  40816b:	test   BYTE PTR [ebp+esi*1+0xf5bb577],dl
  408172:	add    edx,DWORD PTR [ebp+eiz*4+0x42c0d68]
  408179:	test   BYTE PTR [eax-0x7bdfca28],al
  40817f:	xchg   ebx,eax
  408180:	cmp    eax,0x964d026a
  408185:	add    edx,DWORD PTR [edx+ebp*1-0x13]
  408189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40818a:	dec    eax
  40818b:	lods   al,BYTE PTR ds:[esi]
  40818c:	out    0x67,eax
  40818e:	bound  esi,QWORD PTR [esi+0x69158385]
  408194:	mov    bh,0x6
  408196:	push   eax
  408197:	fistp  QWORD PTR [ebx]
  408199:	into   
  40819a:	sub    esp,DWORD PTR [esi]
  40819c:	sub    eax,0xa5f7e535
  4081a1:	sub    BYTE PTR [edi-0x51],ch
  4081a4:	push   ebx
  4081a5:	pop    es
  4081a6:	inc    esp
  4081a7:	mov    dl,0x22
  4081a9:	or     DWORD PTR [eax],0xa838e487
  4081af:	outs   dx,BYTE PTR ds:[esi]
  4081b0:	dec    esi
  4081b1:	dec    esp
  4081b2:	adc    DWORD PTR [ebp-0x54a3ad32],ebx
  4081b8:	mov    al,ds:0xb297e5f1
  4081bd:	jmp    0x48362290
  4081c2:	inc    eax
  4081c3:	add    eax,ecx
  4081c5:	sub    edi,DWORD PTR [ebp-0x60]
  4081c8:	mov    ebp,0xab0318a0
  4081cd:	or     BYTE PTR [eax-0x4c3fd92e],0x7a
  4081d4:	jbe    0x408182
  4081d6:	call   0x41d0:0xfb822198
  4081dd:	gs pop es
  4081df:	jae    0x4081cb
  4081e1:	mov    ecx,0x2be63147
  4081e6:	xchg   ebx,eax
  4081e7:	xchg   DWORD PTR [edx+eiz*4-0x4c3859a],edx
  4081ee:	pusha  
  4081ef:	inc    ecx
  4081f0:	push   edi
  4081f1:	(bad)  
  4081f2:	and    edx,DWORD PTR [edi+0x50]
  4081f5:	je     0x4081d6
  4081f7:	mov    dh,0xcf
  4081f9:	ss leave 
  4081fb:	lods   al,BYTE PTR ds:[esi]
  4081fc:	fisttp WORD PTR [ecx-0x1d2d8ee8]
  408202:	rcl    DWORD PTR [eax],1
  408204:	out    0x42,eax
  408206:	dec    edx
  408207:	or     al,0x2
  408209:	cmp    edx,esi
  40820b:	mov    ds:0x7da846d7,al
  408210:	mov    ch,0x85
  408212:	(bad)
  408216:	pop    eax
  408217:	enter  0xc273,0x93
  40821b:	xchg   ebx,eax
  40821c:	inc    edi
  40821d:	adc    dl,cl
  40821f:	jge    0x40821e
  408221:	inc    ebx
  408222:	icebp  
  408223:	test   BYTE PTR [esi+ebx*8],dh
  408226:	nop
  408227:	mov    al,0x50
  408229:	aad    0xb6
  40822b:	adc    eax,0x1fb57f38
  408230:	cld    
  408231:	loopne 0x408292
  408233:	loope  0x4081e8
  408235:	shr    BYTE PTR [ecx-0x42],1
  408238:	pop    edi
  408239:	ret    
  40823a:	inc    ebx
  40823b:	mov    ds:0x560dd72,eax
  408240:	jmp    FWORD PTR [ebp+0x1916dc29]
  408246:	add    DWORD PTR [esi],edi
  408248:	mov    eax,ds:0x4c33c05a
  40824e:	cmp    eax,DWORD PTR [edi+0x3e4b4b78]
  408254:	mov    al,ds:0x1d0c919f
  408259:	shl    BYTE PTR [edx+edx*8],cl
  40825c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40825d:	xchg   ecx,eax
  40825e:	push   ss
  40825f:	jns    0x4082b7
  408261:	pop    ss
  408262:	pop    edi
  408263:	loopne 0x408257
  408265:	addr16 shr ah,1
  408268:	dec    esi
  408269:	and    al,0x9
  40826b:	cmp    DWORD PTR [edx+0x41],edi
  40826e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40826f:	sub    eax,0xc28383a8
  408274:	neg    DWORD PTR [ebx+0x6a]
  408277:	mov    ecx,0x87686d71
  40827c:	push   cs
  40827d:	rcr    cl,cl
  40827f:	repz lds ebx,FWORD PTR [esi+0x699cf89f]
  408286:	test   cl,bh
  408288:	loope  0x40824f
  40828a:	call   0xfccf:0x8871f93f
  408291:	scas   eax,DWORD PTR es:[edi]
  408292:	mov    BYTE PTR [ecx-0x7c7f58a7],ch
  408298:	sti    
  408299:	adc    ah,BYTE PTR [eax+0x325593a1]
  40829f:	shl    DWORD PTR [ebx+0x5e],cl
  4082a2:	test   DWORD PTR [ebp-0x1ff7a817],ebx
  4082a8:	xchg   ecx,eax
  4082a9:	and    eax,0xb38cb036
  4082ae:	out    dx,al
  4082af:	enter  0xd4f6,0x68
  4082b3:	shr    DWORD PTR [ebp-0x2b],cl
  4082b6:	inc    esp
  4082b7:	xor    BYTE PTR [esi+0x7e],0x78
  4082bb:	imul   esp,DWORD PTR [ebp+ecx*2-0x15a32fb1],0x30
  4082c3:	mov    ecx,0xc04a4db7
  4082c8:	ins    DWORD PTR es:[edi],dx
  4082c9:	pop    ebx
  4082ca:	data16 daa 
  4082cc:	stos   BYTE PTR es:[edi],al
  4082cd:	arpl   WORD PTR [ebx+0x70851b20],di
  4082d3:	inc    ebx
  4082d4:	or     esi,DWORD PTR [edi]
  4082d6:	mov    ebx,0xa945f2de
  4082db:	dec    edi
  4082dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082dd:	jl     0x40831e
  4082df:	mov    bl,0x78
  4082e1:	mov    ah,0xa5
  4082e3:	icebp  
  4082e4:	hlt    
  4082e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082e6:	xchg   ebp,eax
  4082e7:	fadd   QWORD PTR [ecx+0x2af1928e]
  4082ed:	inc    ebp
  4082ee:	rcr    esp,0x70
  4082f1:	pusha  
  4082f2:	mov    BYTE PTR [ebx+0x440c9821],bl
  4082f8:	sub    al,0xf6
  4082fa:	daa    
  4082fb:	data16 jne 0x408322
  4082fe:	sub    cl,cl
  408300:	test   BYTE PTR [ecx-0x1889068],ch
  408306:	push   cs
  408307:	fsub   QWORD PTR [edx]
  408309:	jmp    0xc63e6e16
  40830e:	adc    esp,ebx
  408310:	shl    BYTE PTR [ebp+0x66754593],0x73
  408317:	into   
  408318:	xor    eax,0xea39f2ae
  40831d:	and    bl,BYTE PTR [eax-0x56]
  408320:	sub    ch,BYTE PTR fs:[edi+0x57]
  408324:	adc    al,0x5d
  408326:	mov    eax,0xc096ed69
  40832b:	repz xchg edi,eax
  40832d:	out    dx,al
  40832e:	in     eax,0xe1
  408330:	(bad)  
  408331:	sub    WORD PTR [ebx-0x30],ax
  408335:	icebp  
  408336:	push   esi
  408337:	cld    
  408338:	dec    ebp
  408339:	mov    gs,WORD PTR [esi+ecx*1]
  40833c:	fucomp st(0)
  40833e:	dec    edi
  40833f:	jb     0x408364
  408341:	and    cl,0x9a
  408344:	adc    BYTE PTR [edx+0x2987fa3a],cl
  40834a:	pop    esi
  40834b:	push   ebx
  40834c:	dec    ecx
  40834d:	and    BYTE PTR [esi-0x7b96c6bf],dh
  408353:	xchg   esi,eax
  408354:	push   0xea431100
  408359:	mov    eax,0x102d3f34
  40835e:	inc    ebp
  40835f:	adc    al,0xfb
  408361:	lods   eax,DWORD PTR ds:[esi]
  408362:	ficom  DWORD PTR [eax]
  408364:	sub    DWORD PTR [esi],esi
  408366:	aam    0xda
  408368:	pop    ebx
  408369:	lds    esp,FWORD PTR [edx+0x5b]
  40836c:	or     DWORD PTR [esi+0x210cec58],edi
  408372:	xchg   BYTE PTR [esi+eax*2],cl
  408375:	cli    
  408376:	ss push 0xa9cb47c2
  40837c:	popf   
  40837d:	xor    eax,0x453c76bd
  408382:	push   0x1b94304d
  408387:	ud1    ebp,eax
  40838a:	lock jb 0x4083a3
  40838d:	mov    al,0x26
  40838f:	add    bh,bl
  408391:	fs dec esp
  408393:	loope  0x4083b8
  408395:	icebp  
  408396:	stc    
  408397:	jo     0x4083df
  408399:	lods   eax,DWORD PTR ds:[esi]
  40839a:	sbb    ebp,DWORD PTR [esi+0x40]
  40839d:	sbb    DWORD PTR [edi+ebx*1-0x6919c72d],edx
  4083a4:	mov    bl,0xaf
  4083a6:	mov    ds:0xe990a91a,al
  4083ab:	hlt    
  4083ac:	jbe    0x408410
  4083ae:	xchg   ebp,eax
  4083af:	(bad)  
  4083b0:	sti    
  4083b1:	or     dh,BYTE PTR [edx+0x47550deb]
  4083b7:	leave  
  4083b8:	xchg   edx,eax
  4083b9:	xor    eax,0xb110982
  4083be:	push   cs
  4083bf:	jmp    0x5642:0x259f55e
  4083c6:	adc    eax,0xaecc127b
  4083cb:	pop    edx
  4083cc:	(bad)  
  4083cd:	loope  0x4083da
  4083cf:	jb     0x40844d
  4083d1:	mov    ebx,0xe6d0a697
  4083d6:	sbb    esp,esi
  4083d8:	xor    eax,0x4e609cd2
  4083dd:	sbb    al,BYTE PTR [edi]
  4083df:	fwait
  4083e0:	add    eax,0x2aeb001d
  4083e5:	xchg   esi,eax
  4083e6:	hlt    
  4083e7:	fs inc ecx
  4083e9:	ins    DWORD PTR es:[edi],dx
  4083ea:	and    bl,BYTE PTR [edx-0x17]
  4083ed:	and    ebp,DWORD PTR [ebp-0x35]
  4083f0:	xchg   edi,eax
  4083f1:	loopne 0x4083c0
  4083f3:	shl    DWORD PTR [eax-0x65],0xc2
  4083f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083f8:	ins    BYTE PTR es:[edi],dx
  4083f9:	test   ebp,0x1615e1ef
  4083ff:	dec    esi
  408400:	sub    ah,BYTE PTR [eax+0x1d928e6f]
  408406:	mov    dh,dl
  408408:	into   
  408409:	mov    esp,0x89d5e52d
  40840e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40840f:	mov    WORD PTR [ebx-0x20],ds
  408412:	adc    BYTE PTR [esp+ebx*1+0x19b32297],ch
  408419:	es inc ebx
  40841b:	cwde   
  40841c:	je     0x408436
  40841e:	outs   dx,BYTE PTR es:[esi]
  408420:	cmc    
  408421:	cdq    
  408422:	cmp    BYTE PTR [ebp-0x68],0x28
  408426:	pop    ebx
  408427:	sub    DWORD PTR ds:0xc9bd49d8,0x4e
  40842e:	ins    DWORD PTR es:[edi],dx
  40842f:	mov    BYTE PTR [ecx-0x3c],al
  408432:	xchg   esi,eax
  408433:	push   esp
  408434:	mov    bh,0x7e
  408436:	cmp    eax,DWORD PTR [ebx]
  408438:	mov    ebp,cr2
  40843b:	cmp    DWORD PTR [edi],ecx
  40843d:	push   es
  40843e:	mov    edi,0x528504f0
  408443:	inc    esp
  408444:	aas    
  408445:	add    esp,DWORD PTR [edx]
  408447:	int    0xa2
  408449:	popf   
  40844a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40844b:	inc    edx
  40844c:	jge    0x4084bf
  40844e:	fist   DWORD PTR [esi+0x3bea6dda]
  408454:	fldenv [edi]
  408456:	nop
  408457:	xor    al,0x3
  408459:	push   cs
  40845a:	mov    eax,ds:0xaa853023
  40845f:	js     0x40840e
  408461:	sbb    ch,BYTE PTR [eax-0x3c]
  408464:	rcr    DWORD PTR [edi+0x66],cl
  408467:	imul   esi,edi,0x74686b86
  40846d:	dec    ecx
  40846e:	inc    esi
  40846f:	outs   dx,DWORD PTR ds:[esi]
  408470:	daa    
  408471:	and    ch,BYTE PTR [edx-0x1f9d510a]
  408477:	ret    
  408478:	out    dx,al
  408479:	cld    
  40847a:	push   cs
  40847b:	std    
  40847c:	cld    
  40847d:	push   edx
  40847e:	scas   eax,DWORD PTR es:[edi]
  40847f:	cwde   
  408480:	div    DWORD PTR [eax-0x7a22fd3f]
  408486:	in     eax,0x5c
  408488:	and    edi,ebx
  40848a:	add    edx,DWORD PTR [ebp-0xe]
  40848d:	loopne 0x40843b
  40848f:	jne    0x4084dc
  408491:	add    esi,esi
  408493:	push   ds
  408494:	and    eax,0xa3c981b8
  408499:	out    dx,eax
  40849a:	sahf   
  40849b:	or     BYTE PTR [ecx],cl
  40849d:	pushf  
  40849e:	scas   al,BYTE PTR es:[edi]
  40849f:	cli    
  4084a0:	pusha  
  4084a1:	or     BYTE PTR [ecx+0x5c],0xe8
  4084a5:	rol    DWORD PTR [ecx-0x53],1
  4084a8:	fisubr DWORD PTR [edi]
  4084aa:	mov    al,0x1e
  4084ac:	xchg   esi,eax
  4084ad:	cwde   
  4084ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084af:	mov    esi,0xa3f0e8a5
  4084b4:	idiv   BYTE PTR [esi]
  4084b6:	pop    esp
  4084b7:	shl    DWORD PTR [edx+0x48],0xcf
  4084bb:	nop
  4084bc:	ins    DWORD PTR es:[edi],dx
  4084bd:	inc    ebx
  4084be:	mov    dl,0xae
  4084c0:	ret    0x6c40
  4084c3:	test   DWORD PTR [eax-0x758850f],ecx
  4084c9:	scas   al,BYTE PTR es:[edi]
  4084ca:	mov    edx,0x8f517f88
  4084cf:	pop    ecx
  4084d0:	and    DWORD PTR [esi],ebp
  4084d2:	lods   eax,DWORD PTR ds:[esi]
  4084d3:	inc    BYTE PTR [ebp-0x58]
  4084d6:	pop    es
  4084d7:	jb     0x40846f
  4084d9:	(bad)  
  4084da:	pop    ds
  4084db:	enter  0x1cba,0xec
  4084df:	test   BYTE PTR [ebp+0x56199a7a],0x7b
  4084e6:	push   esp
  4084e7:	add    DWORD PTR [esi],edx
  4084e9:	pushf  
  4084ea:	dec    esi
  4084eb:	lods   al,BYTE PTR ds:[esi]
  4084ec:	fwait
  4084ed:	es inc edi
  4084ef:	push   ebx
  4084f0:	sub    al,0x45
  4084f2:	popa   
  4084f3:	hlt    
  4084f4:	mov    ebx,0xa130cd3f
  4084f9:	call   0x2212f213
  4084fe:	mov    esi,0x19ebad3e
  408503:	lds    esp,FWORD PTR [ecx-0x34c0d27]
  408509:	lods   al,BYTE PTR ds:[esi]
  40850a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40850b:	out    dx,al
  40850c:	adc    ebx,ecx
  40850e:	push   esi
  40850f:	into   
  408510:	sub    ecx,DWORD PTR [ebp-0x2a]
  408513:	std    
  408514:	push   0x5b
  408516:	mov    ebx,ebx
  408518:	mov    ds:0x462ddff,al
  40851d:	mov    ebx,0x20c54e8e
  408522:	push   es
  408523:	retf   
  408524:	loop   0x4084ac
  408526:	xchg   bl,cl
  408528:	mov    ebx,0xd18ca9c
  40852d:	outs   dx,DWORD PTR ds:[esi]
  40852e:	call   0x1c33c83e
  408533:	jecxz  0x408538
  408535:	xlat   BYTE PTR ds:[ebx]
  408536:	xor    ebx,DWORD PTR [edx+0x77a5f7a5]
  40853c:	xlat   BYTE PTR ds:[ebx]
  40853d:	(bad)  
  40853e:	cdq    
  40853f:	jns    0x408560
  408541:	dec    edx
  408542:	lock pushf 
  408544:	push   ecx
  408545:	pop    gs
  408547:	jno    0x4085bd
  408549:	push   ecx
  40854a:	mov    esi,0x5e8655b8
  40854f:	sub    ebx,DWORD PTR [ebx-0x70]
  408552:	fldcw  WORD PTR ds:0xc672aa97
  408558:	loopne 0x408513
  40855a:	shr    bl,0x4d
  40855d:	in     eax,0xa
  40855f:	mov    DWORD PTR [ebp-0x38b9f1cb],edi
  408565:	push   ebx
  408566:	(bad)  
  408567:	push   ebp
  408568:	aas    
  408569:	mov    bl,0x25
  40856b:	das    
  40856c:	mov    esp,0x5bc0864
  408571:	or     cl,BYTE PTR [edi-0xfc92b0e]
  408577:	inc    ebx
  408578:	pop    ebp
  408579:	push   edx
  40857a:	jb     0x40859a
  40857c:	inc    ecx
  40857d:	icebp  
  40857e:	(bad)  
  40857f:	stos   DWORD PTR es:[edi],eax
  408580:	pop    ebx
  408581:	mov    esp,0x88b9d224
  408586:	mov    ch,dl
  408588:	jge    0x40851c
  40858a:	push   cs
  40858b:	jp     0x408602
  40858d:	adc    eax,0xce06d820
  408592:	(bad)  [esi+0x18046d21]
  408598:	gs jo  0x40860d
  40859b:	pop    edx
  40859c:	mov    ebp,0xc7bf3136
  4085a1:	cmc    
  4085a2:	popa   
  4085a3:	jecxz  0x408589
  4085a5:	loop   0x408559
  4085a7:	push   esi
  4085a8:	or     al,0xdc
  4085aa:	fwait
  4085ab:	outs   dx,BYTE PTR ds:[esi]
  4085ac:	or     al,0xda
  4085ae:	push   ecx
  4085af:	int3   
  4085b0:	mov    esi,0x3bb57c0c
  4085b5:	xlat   BYTE PTR ds:[ebx]
  4085b6:	stos   DWORD PTR es:[edi],eax
  4085b7:	shl    dh,cl
  4085b9:	out    dx,al
  4085ba:	jmp    0x7259500f
  4085bf:	mov    edx,DWORD PTR [eax+ebp*8-0x2b]
  4085c3:	fcmovnu st,st(2)
  4085c5:	sbb    eax,0x7f551a32
  4085ca:	push   edi
  4085cb:	icebp  
  4085cc:	and    DWORD PTR [eax-0x4fe2eed6],0x7d
  4085d3:	icebp  
  4085d4:	arpl   WORD PTR [eax],sp
  4085d6:	add    ah,ch
  4085d8:	jge    0x408598
  4085da:	mov    ebx,0x5809ed8f
  4085df:	stc    
  4085e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085e1:	dec    esp
  4085e2:	out    dx,al
  4085e3:	sahf   
  4085e4:	retf   0xf19
  4085e7:	sub    eax,edx
  4085e9:	jg     0x4085a4
  4085eb:	mov    ah,0xc8
  4085ed:	es pop ebx
  4085ef:	jb     0x4085aa
  4085f1:	lock jbe 0x4085b3
  4085f4:	mov    esi,0x872f30e
  4085f9:	call   0xc3c9a581
  4085fe:	inc    ecx
  4085ff:	adc    BYTE PTR [esi],ah
  408601:	adc    DWORD PTR [esi+ebx*1+0x4b6e0a6c],edi
  408608:	xor    dh,dl
  40860a:	add    BYTE PTR [edx-0x45],dl
  40860d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40860e:	ds mov ecx,0x9325c1ad
  408614:	arpl   WORD PTR [ebp-0x7de7e2b1],bp
  40861a:	addr16 das 
  40861c:	dec    ebp
  40861d:	rol    ah,cl
  40861f:	jno    0x408697
  408621:	call   0x322b:0x8d7e5c68
  408628:	stos   BYTE PTR es:[edi],al
  408629:	mov    ds:0x87164b50,al
  40862e:	jnp    0x40868b
  408630:	push   0xffffffc5
  408632:	pop    ss
  408633:	jne    0x408667
  408635:	add    eax,ecx
  408637:	pop    edi
  408638:	sti    
  408639:	loop   0x4085f9
  40863b:	int3   
  40863c:	es adc al,0x3b
  40863f:	mov    ds:0xafb8e8aa,al
  408644:	outs   dx,BYTE PTR ds:[esi]
  408645:	cld    
  408646:	pusha  
  408647:	rcl    DWORD PTR [ebp-0x3d],cl
  40864a:	jo     0x408642
  40864c:	jne    0x4086c5
  40864e:	repz and bh,0x7a
  408652:	pop    ebx
  408653:	xchg   edi,eax
  408654:	daa    
  408655:	sub    DWORD PTR [ebp+ecx*8+0x2e],0x17
  40865a:	aaa    
  40865b:	shr    BYTE PTR [ebp+0x12c06c28],1
  408661:	leave  
  408662:	call   0xf8d5894f
  408667:	and    ah,bh
  408669:	mov    cl,BYTE PTR [esi+0x3096a00e]
  40866f:	lahf   
  408670:	xchg   edi,eax
  408671:	in     al,0x74
  408673:	or     eax,0xf798e0ea
  408678:	lods   al,BYTE PTR ds:[esi]
  408679:	out    0xd5,eax
  40867b:	aaa    
  40867c:	xchg   edi,eax
  40867d:	and    DWORD PTR [edx-0x41f1ad78],ebx
  408683:	rcr    BYTE PTR [eax],0x52
  408686:	and    bh,BYTE PTR [ebp-0x37d63020]
  40868c:	mov    ds:0xf80ab2c3,eax
  408691:	(bad)  
  408692:	stc    
  408693:	out    0xe4,eax
  408695:	dec    esp
  408696:	outs   dx,BYTE PTR ds:[esi]
  408697:	pushf  
  408698:	jo     0x408715
  40869a:	xlat   BYTE PTR ds:[ebx]
  40869b:	cwde   
  40869c:	ds jne 0x4086e9
  40869f:	lahf   
  4086a0:	lods   eax,DWORD PTR ds:[esi]
  4086a1:	jnp    0x408647
  4086a3:	aam    0x39
  4086a5:	pop    ebx
  4086a6:	xchg   edx,eax
  4086a7:	push   edx
  4086a8:	cli    
  4086a9:	ja     0x408669
  4086ab:	dec    edx
  4086ac:	xchg   eax,esp
  4086ae:	test   ebp,esp
  4086b0:	fldcw  WORD PTR [ecx]
  4086b2:	out    0x41,al
  4086b4:	pusha  
  4086b5:	call   0x59df2712
  4086ba:	out    dx,al
  4086bb:	dec    esi
  4086bc:	mov    bl,0xbf
  4086be:	mov    edx,0xf7ae36a6
  4086c3:	cmp    al,0x73
  4086c5:	cmp    esp,DWORD PTR [edi+0x4c]
  4086c8:	push   0xffffffc2
  4086ca:	rcl    edx,1
  4086cc:	fcom   QWORD PTR [esi]
  4086ce:	xchg   edx,eax
  4086cf:	stc    
  4086d0:	movd   DWORD PTR [ebx],mm7
  4086d3:	mov    eax,ds:0x5320e15a
  4086d8:	jge    0x40869f
  4086da:	inc    ebx
  4086db:	pusha  
  4086dc:	sar    DWORD PTR [ebx+0x32],1
  4086df:	jae    0x40867c
  4086e1:	outs   dx,BYTE PTR ds:[esi]
  4086e2:	mov    ch,0xf7
  4086e4:	aam    0x4b
  4086e6:	add    cl,BYTE PTR [ecx+ebp*8+0x4f]
  4086ea:	rcr    ch,1
  4086ec:	mov    ebp,0xa7e95ff4
  4086f1:	xor    dl,BYTE PTR [ebx]
  4086f3:	int3   
  4086f4:	mov    edx,0xf1174ce0
  4086f9:	add    bh,BYTE PTR [edi-0x71]
  4086fc:	ins    BYTE PTR es:[edi],dx
  4086fd:	cld    
  4086fe:	and    DWORD PTR [edx-0x51a8c581],ebp
  408704:	jbe    0x408706
  408706:	sbb    DWORD PTR [esi-0x73],ecx
  408709:	jmp    0xf9817300
  40870e:	ror    ebx,cl
  408710:	mov    bh,0x9
  408712:	les    esi,FWORD PTR [esi+0x226db7b1]
  408718:	test   DWORD PTR [ecx+0x5d],edx
  40871b:	(bad)  
  40871c:	in     al,dx
  40871d:	jl     0x408777
  40871f:	sub    eax,0x34693a9
  408724:	fmul   DWORD PTR [eax+0x2dc70ae8]
  40872a:	xchg   esp,edi
  40872c:	int3   
  40872d:	sub    DWORD PTR [ebx+edx*1-0x7],ebx
  408731:	mov    ch,0x4e
  408733:	rcr    BYTE PTR [di-0x14c1],0x17
  408739:	pop    ss
  40873a:	mov    ch,0xb7
  40873c:	and    BYTE PTR [ebp+0x6ed91589],ch
  408742:	mov    ebp,0xb74d1d64
  408747:	mov    esi,0xf1027c6e
  40874c:	adc    eax,0x57490298
  408751:	fsubp  st(3),st
  408753:	xor    esi,esp
  408755:	ficom  DWORD PTR [edi]
  408757:	shl    BYTE PTR [ecx+esi*2-0x1a],0x7f
  40875c:	ret    0xfc00
  40875f:	and    al,0x8d
  408761:	stos   DWORD PTR es:[edi],eax
  408762:	jbe    0x408704
  408764:	ja     0x40873c
  408766:	jnp    0x4087c1
  408768:	push   ebx
  408769:	lock mov ebx,0x83f8b429
  40876f:	sub    eax,0x8198d4c9
  408774:	inc    esp
  408775:	mov    ebp,eax
  408777:	jecxz  0x4087ea
  408779:	add    eax,DWORD PTR ds:0x717ad41f
  40877f:	into   
  408780:	(bad)  
  408781:	dec    ebx
  408782:	stos   DWORD PTR es:[edi],eax
  408783:	outs   dx,BYTE PTR ds:[esi]
  408784:	mov    BYTE PTR [edi-0x2e],bl
  408787:	inc    esi
  408788:	jae    0x40872c
  40878a:	mov    ebp,0xba90b6c9
  40878f:	adc    eax,0x863322e
  408794:	xor    al,0x64
  408796:	sbb    al,0x8e
  408798:	mov    al,0x5d
  40879a:	mov    dl,0x17
  40879c:	mov    edi,0xa21fec5
  4087a1:	pop    ss
  4087a2:	xchg   ecx,eax
  4087a3:	sub    BYTE PTR [esi],0x9
  4087a6:	mov    eax,0xbd371c09
  4087ab:	mov    ebx,0xc5f55347
  4087b0:	mov    ebx,0x98512c90
  4087b5:	dec    esi
  4087b6:	(bad)  
  4087b7:	mov    dh,0x47
  4087b9:	jnp    0x4087f1
  4087bb:	outs   dx,BYTE PTR ds:[esi]
  4087bc:	push   edx
  4087bd:	loope  0x408812
  4087bf:	popf   
  4087c0:	inc    edx
  4087c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087c2:	std    
  4087c3:	sub    al,0x8e
  4087c5:	leave  
  4087c6:	pop    eax
  4087c7:	add    eax,0xd8e568a9
  4087cc:	ss push esp
  4087ce:	outs   dx,DWORD PTR ds:[esi]
  4087cf:	or     ch,0x25
  4087d2:	adc    DWORD PTR [ebp-0x69ba0dee],esi
  4087d8:	es sbb ch,bh
  4087db:	scas   al,BYTE PTR es:[edi]
  4087dc:	push   ebx
  4087dd:	push   edx
  4087de:	(bad)  
  4087df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087e0:	les    edi,FWORD PTR [eax-0x4939c8fc]
  4087e6:	jo     0x4087a9
  4087e8:	inc    ecx
  4087e9:	and    eax,0x56d82997
  4087ee:	jne    0x408818
  4087f0:	mov    ah,0x55
  4087f2:	and    BYTE PTR [eax-0x39791fb9],ch
  4087f8:	iret   
  4087f9:	popa   
  4087fa:	add    dh,al
  4087fc:	mov    WORD PTR [ecx+esi*2],gs
  4087ff:	mul    DWORD PTR [esp+edx*1+0x48]
  408803:	mov    ebx,0xf334635a
  408808:	or     DWORD PTR [ebx],ebp
  40880a:	jnp    0x4087d8
  40880c:	pop    esp
  40880d:	sahf   
  40880e:	icebp  
  40880f:	pop    ebx
  408810:	adc    edx,ebp
  408812:	add    eax,0x39283e1e
  408817:	int    0xe2
  408819:	in     al,dx
  40881a:	loop   0x4087a3
  40881c:	call   0x607d34f
  408821:	(bad)  
  408822:	int3   
  408823:	mov    ds:0x49977f9,eax
  408828:	jno    0x408891
  40882a:	push   esp
  40882b:	psrlq  mm3,mm0
  40882e:	pop    ebx
  40882f:	cmp    eax,0x8f518e30
  408834:	and    BYTE PTR [edx+ecx*2-0x2e],cl
  408838:	stos   BYTE PTR es:[edi],al
  408839:	xchg   ecx,eax
  40883a:	inc    edi
  40883b:	mov    eax,0x78b9c1f6
  408840:	dec    eax
  408841:	push   cs
  408842:	pusha  
  408843:	in     eax,dx
  408844:	into   
  408845:	cvtpi2ps xmm2,QWORD PTR [ebp+0x62e14b5a]
  40884c:	(bad)  
  40884d:	in     al,0x77
  40884f:	and    cl,ah
  408851:	xor    BYTE PTR [ebx+0x54],dh
  408854:	mov    al,0xde
  408856:	lea    ecx,[ebx+0x3a]
  408859:	or     al,0x65
  40885b:	out    dx,al
  40885c:	inc    edi
  40885d:	adc    al,0x77
  40885f:	push   0x0
  408861:	pop    es
  408862:	fsub   QWORD PTR [ebp+0x44]
  408865:	mov    bh,cl
  408867:	fsubr  st(7),st
  408869:	mov    al,ds:0xde07eaf2
  40886e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40886f:	add    al,0x56
  408871:	xchg   esp,eax
  408872:	mov    WORD PTR [esi],dx
  408875:	es imul esi,ebp,0x7272cf92
  40887c:	ror    DWORD PTR [ecx+eiz*2+0x68],1
  408880:	adc    eax,0xb1cc9dcf
  408885:	cmp    eax,0x4f0507fa
  40888a:	fmul   QWORD PTR [edi+ebx*1-0x256efbb3]
  408891:	inc    esp
  408892:	adc    BYTE PTR [esi],dl
  408894:	(bad)  
  408895:	dec    eax
  408896:	xchg   esp,eax
  408897:	and    DWORD PTR [edx+eiz*8-0x50af16d4],ebp
  40889e:	je     0x4088a7
  4088a0:	(bad)  
  4088a1:	repz cli 
  4088a3:	sub    esi,ebx
  4088a5:	loopne 0x408877
  4088a7:	retf   
  4088a8:	adc    al,0xe5
  4088aa:	xchg   edx,eax
  4088ab:	cmp    DWORD PTR [ecx-0x2f4eb969],ebx
  4088b1:	clc    
  4088b2:	mov    dl,0xed
  4088b4:	add    ch,BYTE PTR [edi]
  4088b6:	mov    eax,ds:0xfdf4a1a3
  4088bb:	pop    ecx
  4088bc:	dec    ebp
  4088bd:	rcl    BYTE PTR [edi+0x14],cl
  4088c0:	xor    DWORD PTR [edi+ebx*8],ebp
  4088c3:	mov    dl,0xad
  4088c5:	jg     0x408920
  4088c7:	retf   
  4088c8:	out    dx,eax
  4088c9:	enter  0xe611,0x40
  4088cd:	or     al,0x9b
  4088cf:	inc    eax
  4088d0:	xchg   esi,eax
  4088d1:	mov    ebx,0x62a10d62
  4088d6:	xchg   esi,eax
  4088d7:	cmp    esp,DWORD PTR [eax]
  4088d9:	ins    BYTE PTR es:[edi],dx
  4088da:	mul    DWORD PTR [ebx+0x77e63e24]
  4088e0:	les    esp,FWORD PTR [edx+edx*2]
  4088e3:	pop    ebp
  4088e4:	cs out dx,al
  4088e6:	and    ah,BYTE PTR [ebp+0x1f799822]
  4088ec:	iret   
  4088ed:	addr16 jp 0x408952
  4088f0:	and    eax,0x611833ac
  4088f5:	jmp    0x408936
  4088f7:	cmp    eax,0x5b9934e1
  4088fc:	jge    0x4088ff
  4088fe:	sub    al,BYTE PTR [eax]
  408900:	dec    esi
  408901:	and    al,0xd7
  408903:	outs   dx,DWORD PTR ds:[esi]
  408904:	mov    ebx,0xcc394428
  408909:	push   esi
  40890a:	arpl   WORD PTR fs:[edi],ax
  40890d:	adc    al,0x71
  40890f:	es mov edi,0x185ea17c
  408915:	sahf   
  408916:	sub    dh,dl
  408918:	mov    ebp,0x37bc0638
  40891d:	or     bl,BYTE PTR [edi+0x6795d740]
  408923:	daa    
  408924:	pop    esi
  408925:	dec    ebx
  408926:	pop    ds
  408927:	gs pop es
  408929:	lods   al,BYTE PTR ds:[esi]
  40892a:	cmp    dh,BYTE PTR [ecx+0x3e45a3b5]
  408930:	loopne 0x40891f
  408932:	mov    edi,DWORD PTR [esi+0x31]
  408935:	addr16 addr16 mov ebp,0xc6febd7d
  40893c:	add    eax,0x2e65c610
  408941:	jl     0x40895d
  408943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408945:	je     0x408969
  408947:	inc    ebp
  408948:	and    eax,0x3a993047
  40894d:	retf   0x70ed
  408950:	pushf  
  408951:	mov    edi,0x3247e18c
  408956:	retf   0xe2a1
  408959:	jg     0x40898a
  40895b:	or     al,0x3
  40895d:	push   0x75
  40895f:	xchg   ecx,eax
  408960:	loope  0x4089cd
  408962:	std    
  408963:	mov    ecx,0x965927d3
  408968:	cmc    
  408969:	pop    es
  40896a:	and    DWORD PTR [edx],0xd2c8a269
  408970:	cmp    DWORD PTR ds:0xd9ef0b60,esp
  408976:	lds    edi,FWORD PTR [edi]
  408978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408979:	sbb    BYTE PTR [edx-0x5fc1e311],ch
  40897f:	xor    al,BYTE PTR [eax]
  408981:	repnz loop 0x408937
  408984:	fwait
  408985:	mov    cl,0xc7
  408987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408988:	jge    0x408969
  40898a:	adc    dh,al
  40898c:	xchg   DWORD PTR [edx-0x3657680d],ebx
  408992:	and    ecx,edx
  408994:	(bad)  
  408995:	sti    
  408996:	popf   
  408997:	dec    ecx
  408998:	add    esp,DWORD PTR [edx-0x148304d]
  40899e:	js     0x408a08
  4089a0:	mov    esp,0x9e4a7ec1
  4089a5:	lock cs pushf 
  4089a8:	je     0x4089d3
  4089aa:	sbb    DWORD PTR [ecx-0x3f46bf93],ecx
  4089b0:	femms  
  4089b2:	jecxz  0x408960
  4089b4:	rol    DWORD PTR [edi+0x112c5024],0x49
  4089bb:	pusha  
  4089bc:	pop    ss
  4089bd:	out    0xde,al
  4089bf:	imul   ecx,ecx,0xffffffc2
  4089c2:	ja     0x40898f
  4089c4:	add    DWORD PTR [esi+edx*4-0x47],eax
  4089c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089c9:	sbb    eax,0x1a0e101b
  4089ce:	mov    al,ds:0x818f5bf5
  4089d3:	fiadd  DWORD PTR [edi]
  4089d5:	sub    DWORD PTR [edi-0x48],0x627c0279
  4089dc:	mov    bl,0x10
  4089de:	sub    BYTE PTR [edx],bl
  4089e0:	xor    eax,0xe60eb29f
  4089e5:	inc    edi
  4089e6:	sbb    cl,ch
  4089e8:	mov    dl,0xcd
  4089ea:	ins    BYTE PTR es:[edi],dx
  4089eb:	sbb    al,0x3
  4089ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ee:	in     eax,0x71
  4089f0:	mov    ecx,0x91fcb024
  4089f5:	std    
  4089f6:	(bad)  
  4089f9:	push   edi
  4089fa:	stc    
  4089fb:	cwde   
  4089fc:	in     al,dx
  4089fd:	jl     0x4089c9
  4089ff:	push   ds
  408a00:	mov    ds:0xc7848a18,al
  408a05:	pop    ecx
  408a06:	mov    BYTE PTR [eax-0x53],ch
  408a09:	and    BYTE PTR ds:0x3c10857d,ah
  408a0f:	and    ah,BYTE PTR [edi]
  408a11:	jmp    0x2016b469
  408a16:	adc    BYTE PTR [ebp+0x2e272fa8],ah
  408a1c:	xchg   edx,eax
  408a1d:	pop    ss
  408a1e:	jle    0x408a47
  408a20:	in     al,dx
  408a21:	xchg   esp,eax
  408a22:	sub    DWORD PTR [eax+eiz*1+0x2b],edx
  408a26:	push   ds
  408a27:	push   0xffffff8d
  408a29:	ins    DWORD PTR es:[edi],dx
  408a2a:	dec    edi
  408a2b:	push   es
  408a2c:	rcr    al,cl
  408a2e:	and    al,bh
  408a30:	ja     0x408a38
  408a32:	push   edx
  408a33:	and    al,0xa6
  408a35:	jg     0x408a79
  408a37:	mov    eax,ds:0x1f5fc19b
  408a3c:	test   BYTE PTR [edx-0x74ac71de],0xd2
  408a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a44:	jl     0x408a9f
  408a46:	dec    ecx
  408a47:	mul    DWORD PTR [edx-0x15060a0a]
  408a4d:	test   al,0xf0
  408a4f:	cld    
  408a50:	leave  
  408a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a52:	xchg   ebx,eax
  408a53:	pop    ecx
  408a54:	in     al,0x1c
  408a56:	xchg   cl,bh
  408a58:	cmp    al,0x1a
  408a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a5b:	pop    ss
  408a5c:	cli    
  408a5d:	jne    0x408a58
  408a5f:	fcomip st,st(6)
  408a61:	sub    al,0xb
  408a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a64:	fistp  WORD PTR [ebx+0x16]
  408a67:	mov    ebx,0x73ffbbb6
  408a6c:	sbb    bh,0x95
  408a6f:	cmp    DWORD PTR [ebp-0x1c],0x3c70caf
  408a76:	jge    0x408aa0
  408a78:	dec    ecx
  408a79:	push   cs
  408a7a:	jle    0x408abb
  408a7c:	push   ss
  408a7d:	cmp    ah,BYTE PTR [ebx]
  408a7f:	sub    DWORD PTR [ebx+ebp*4-0x319d53a1],0x9c5f7179
  408a8a:	mov    edx,0xcef00dbe
  408a8f:	ss fdiv st,st(3)
  408a92:	xor    DWORD PTR [edi-0x28952250],0xffffffde
  408a99:	loopne 0x408aa9
  408a9b:	lea    esi,[esi]
  408a9d:	hlt    
  408a9e:	cs hlt 
  408aa0:	call   0x57d5842d
  408aa5:	jb     0x408b15
  408aa7:	lea    ebp,[edx+0x1b]
  408aaa:	adc    ah,bh
  408aac:	add    bh,BYTE PTR [edx+0x38]
  408aaf:	lock sbb ch,al
  408ab2:	cmp    eax,0x9a6bba96
  408ab7:	adc    eax,ebp
  408ab9:	add    eax,0xdebb8e4b
  408abe:	pop    ecx
  408abf:	pop    edi
  408ac0:	adc    DWORD PTR [esi],0x142a6986
  408ac6:	loop   0x408a97
  408ac8:	jl     0x408aeb
  408aca:	push   0xf14d58c1
  408acf:	lahf   
  408ad0:	shl    BYTE PTR [eax+ebp*2+0x5f],0xf6
  408ad5:	cli    
  408ad6:	add    esi,esp
  408ad8:	xchg   esi,eax
  408ad9:	fiadd  DWORD PTR ds:0x6acd67c4
  408adf:	xor    DWORD PTR [esi-0x40],ebx
  408ae2:	pop    ecx
  408ae3:	repz cmp DWORD PTR ds:0xb2a87d8a,esp
  408aea:	hlt    
  408aeb:	ins    DWORD PTR es:[edi],dx
  408aec:	xchg   ebp,eax
  408aed:	push   edx
  408aee:	out    0x6c,al
  408af0:	shr    esi,0xc6
  408af3:	icebp  
  408af4:	retf   
  408af5:	repnz stos BYTE PTR es:[edi],al
  408af7:	jns    0x408b32
  408af9:	pop    ebp
  408afa:	cdq    
  408afb:	retf   0x3d73
  408afe:	pop    es
  408aff:	mov    WORD PTR [esi-0x1e],fs
  408b02:	test   DWORD PTR [eax],edi
  408b04:	imul   BYTE PTR [ecx-0x7b44610b]
  408b0a:	dec    ebp
  408b0b:	scas   al,BYTE PTR es:[edi]
  408b0c:	leave  
  408b0d:	inc    ebx
  408b0e:	adc    al,0xfc
  408b10:	jo     0x408acb
  408b12:	jmp    0x408b2a
  408b14:	lahf   
  408b15:	imul   eax,DWORD PTR [esi+0x2e23497d],0xd4e43602
  408b1f:	test   al,0x0
  408b21:	and    dh,bl
  408b23:	ret    
  408b24:	jecxz  0x408b85
  408b26:	or     BYTE PTR [edx+0x16],cl
  408b29:	cli    
  408b2a:	fimul  WORD PTR [esp+ebx*2-0x7702f46f]
  408b31:	inc    edi
  408b32:	jb     0x408aed
  408b34:	or     ebx,DWORD PTR [edx-0x1ce74aef]
  408b3a:	std    
  408b3b:	xchg   edi,eax
  408b3c:	sar    BYTE PTR [ebx-0x3b3265da],0xc4
  408b43:	loope  0x408b85
  408b45:	lods   eax,DWORD PTR ds:[esi]
  408b46:	retf   0xa470
  408b49:	aaa    
  408b4a:	jmp    0x8ef4:0xd645546e
  408b51:	test   BYTE PTR [ebx],ah
  408b53:	ins    BYTE PTR es:[edi],dx
  408b54:	sbb    edx,DWORD PTR [ecx-0x7af6cb98]
  408b5a:	neg    BYTE PTR ds:0x3a14abe5
  408b60:	mov    al,0x8d
  408b62:	mov    ebx,ss
  408b64:	sbb    BYTE PTR [edx+0x4c555684],0xcd
  408b6b:	cmp    ebp,ebp
  408b6d:	xor    eax,0x277950c1
  408b72:	pop    edx
  408b73:	in     eax,0x3d
  408b75:	paddd  mm0,QWORD PTR [edx-0x2c8159ae]
  408b7c:	int    0x51
  408b7e:	mov    ch,0x64
  408b80:	or     eax,0x2cf6a108
  408b85:	dec    ebx
  408b86:	mov    edi,0xcc0998d2
  408b8b:	mov    ds:0x842c4d3f,al
  408b90:	sahf   
  408b91:	fbld   TBYTE PTR [ecx+0x37b939c2]
  408b97:	ins    DWORD PTR es:[edi],dx
  408b98:	adc    ah,BYTE PTR [ecx*4-0xc3268fa]
  408b9f:	cwde   
  408ba0:	in     al,0x7
  408ba2:	das    
  408ba3:	adc    DWORD PTR [esi+0x55],0x38cc3240
  408baa:	mov    bh,0x42
  408bac:	and    esp,DWORD PTR [ecx+0x5d]
  408baf:	jge    0x408c23
  408bb1:	add    ebx,DWORD PTR [esi+0x68]
  408bb4:	imul   edi,DWORD PTR [ebx+0x71505982],0x31
  408bbb:	scas   eax,DWORD PTR es:[edi]
  408bbc:	xchg   ebp,eax
  408bbd:	arpl   WORD PTR [ebp-0x4041851e],ax
  408bc3:	inc    ecx
  408bc4:	out    0xf5,al
  408bc6:	call   0x2451:0x1c261e76
  408bcd:	out    0xee,al
  408bcf:	inc    edx
  408bd0:	jmp    0x408b6c
  408bd2:	hlt    
  408bd3:	cmp    bl,BYTE PTR [esi+ebx*8]
  408bd6:	mov    cl,0x69
  408bd8:	push   DWORD PTR [edx]
  408bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bdb:	add    DWORD PTR [esi-0x47],edx
  408bde:	arpl   WORD PTR ds:0xd0f2400e,bx
  408be4:	xchg   DWORD PTR [esi+0x52],eax
  408be7:	xchg   esp,eax
  408be8:	xor    BYTE PTR [edx+0x766324d7],ah
  408bee:	jle    0x408c28
  408bf0:	test   edi,eax
  408bf2:	xchg   ecx,eax
  408bf3:	inc    bh
  408bf5:	xchg   DWORD PTR [edi],esi
  408bf7:	mov    eax,ds:0x7af2841a
  408bfc:	imul   eax,eax,0x75f28774
  408c02:	mov    ecx,0x8b73bb35
  408c07:	les    eax,FWORD PTR [ecx+0x17]
  408c0a:	test   BYTE PTR [edx+0x3cc9db6a],ch
  408c10:	rcl    BYTE PTR [ecx+0x2ab61714],cl
  408c16:	inc    esp
  408c17:	add    DWORD PTR [ebx],esi
  408c19:	jmp    0x5fe1:0x183b23c7
  408c20:	dec    edi
  408c21:	bound  eax,QWORD PTR [ecx+0x1f1e4ef6]
  408c27:	fs (bad) 
  408c2a:	inc    esi
  408c2b:	dec    edi
  408c2c:	bound  esi,QWORD PTR [edx-0x502e0238]
  408c32:	xchg   ecx,eax
  408c33:	push   ecx
  408c34:	shl    BYTE PTR [esi+eiz*4-0x50c41d96],1
  408c3b:	xor    DWORD PTR [ebp+eiz*2+0x27c6c3bd],esi
  408c42:	fnstsw WORD PTR ds:0x7be6dc53
  408c48:	int3   
  408c49:	xor    bl,BYTE PTR [ebp+0x1d]
  408c4c:	out    0xdf,al
  408c4e:	jb     0x408c38
  408c50:	mov    cl,0x7d
  408c52:	call   0x6f98:0xdc1842a0
  408c59:	push   ecx
  408c5a:	or     eax,0x36fa300d
  408c5f:	inc    eax
  408c60:	pusha  
  408c61:	mov    esp,0xd5459c72
  408c66:	in     eax,dx
  408c67:	inc    eax
  408c68:	xor    eax,0x13b6fdfa
  408c6d:	rol    BYTE PTR [eax],cl
  408c6f:	sub    dh,BYTE PTR [ebp-0x49b73d19]
  408c75:	aas    
  408c76:	dec    esp
  408c77:	out    dx,al
  408c78:	mov    fs,WORD PTR [bp+si-0x4dd6]
  408c7d:	dec    eax
  408c7e:	(bad)  
  408c7f:	fisttp DWORD PTR [esi]
  408c81:	mov    esi,0x48acdc74
  408c86:	xchg   esp,eax
  408c87:	scas   al,BYTE PTR es:[edi]
  408c88:	stos   BYTE PTR es:[edi],al
  408c89:	push   ss
  408c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c8b:	sub    al,0x3
  408c8d:	xchg   edi,eax
  408c8e:	mov    DWORD PTR [ecx+eiz*4+0x5a],esp
  408c92:	and    al,0xfe
  408c94:	call   0xd279:0x58de6bcf
  408c9b:	fstp   QWORD PTR [esi]
  408c9d:	dec    esi
  408c9e:	xchg   ebx,eax
  408c9f:	adc    bh,dh
  408ca1:	addr16 pop ebx
  408ca3:	cwde   
  408ca4:	repnz and edx,esp
  408ca7:	neg    BYTE PTR [eax-0x28]
  408caa:	push   edi
  408cab:	sbb    cl,dl
  408cad:	and    ebp,ecx
  408caf:	sbb    BYTE PTR [ecx-0x4ddcc61a],0x43
  408cb6:	retf   0xe792
  408cb9:	xchg   edi,eax
  408cba:	xor    eax,0x67c0f2e8
  408cbf:	mov    eax,ds:0xdace02f7
  408cc4:	inc    ebx
  408cc5:	add    ebx,DWORD PTR [ebx]
  408cc7:	xor    al,BYTE PTR [edi-0x64]
  408cca:	loopne 0x408ce1
  408ccc:	adc    DWORD PTR [edx-0x2c0cd91d],esp
  408cd2:	ja     0x408d2e
  408cd4:	enter  0x977a,0x2f
  408cd8:	into   
  408cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cda:	add    BYTE PTR [edi],dl
  408cdc:	xchg   esp,eax
  408cdd:	mov    dl,0x1c
  408cdf:	push   esp
  408ce0:	dec    ebp
  408ce1:	add    ch,0xf3
  408ce4:	push   ebp
  408ce5:	and    DWORD PTR [ebp+edx*4+0x27132c66],ecx
  408cec:	adc    bl,BYTE PTR [eax]
  408cee:	and    al,0xed
  408cf0:	retf   0x2eef
  408cf3:	xchg   esi,eax
  408cf4:	cwde   
  408cf5:	(bad)  
  408cf6:	and    eax,0xc53ce5c3
  408cfb:	sahf   
  408cfc:	adc    al,0x8
  408cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cff:	and    al,0x8e
  408d01:	into   
  408d02:	push   esi
  408d03:	sbb    eax,0x32646a24
  408d08:	sahf   
  408d09:	push   esi
  408d0a:	inc    eax
  408d0b:	inc    DWORD PTR [esi+eiz*2]
  408d0e:	out    dx,eax
  408d0f:	(bad)  
  408d10:	fist   WORD PTR [edx+0x7a7caf1c]
  408d16:	xor    DWORD PTR [ecx-0x3c],ebx
  408d19:	fwait
  408d1a:	or     al,0x3a
  408d1c:	inc    eax
  408d1d:	and    ecx,DWORD PTR [eax+0x3a3a0afe]
  408d23:	pop    ss
  408d24:	jo     0x408d0a
  408d26:	enter  0x6373,0xe5
  408d2a:	pop    ebx
  408d2b:	daa    
  408d2c:	pop    edi
  408d2d:	add    bh,BYTE PTR [edi+0x33]
  408d30:	imul   DWORD PTR [ebx-0x11]
  408d33:	push   0xd2d8847a
  408d38:	dec    edi
  408d39:	push   ds
  408d3a:	retf   0xfcec
  408d3d:	ja     0x408cff
  408d3f:	aad    0x80
  408d41:	dec    ebx
  408d42:	daa    
  408d43:	xchg   esp,eax
  408d44:	(bad)  
  408d45:	mov    esp,0x6de3aa2e
  408d4a:	retf   
  408d4b:	or     esp,eax
  408d4d:	lahf   
  408d4e:	pop    edx
  408d4f:	out    dx,eax
  408d50:	pop    es
  408d51:	cld    
  408d52:	test   eax,0x58f40eb8
  408d57:	xchg   BYTE PTR cs:[edx-0x3a459714],bl
  408d5e:	add    ch,dl
  408d60:	or     DWORD PTR [ebx-0x3],ecx
  408d63:	pop    ss
  408d64:	mov    ds:0x7178d8fb,al
  408d69:	sar    esp,cl
  408d6b:	int    0x50
  408d6d:	fs leave 
  408d6f:	je     0x408d53
  408d71:	ja     0x408d36
  408d73:	mov    ebp,0xa863bef8
  408d78:	push   es
  408d79:	(bad)  
  408d7b:	arpl   WORD PTR [ebx+0x2],ax
  408d7e:	cmp    eax,0x1c7c29db
  408d83:	(bad)  
  408d84:	cld    
  408d85:	repnz cs sbb eax,0xfadb1f4e
  408d8c:	outs   dx,DWORD PTR ds:[esi]
  408d8d:	mov    cl,0x7e
  408d8f:	sub    DWORD PTR [ebp+0x24],0x19193dcd
  408d96:	push   ebp
  408d97:	jbe    0x408d5d
  408d99:	mov    esp,0x67f0b188
  408d9e:	and    bl,cl
  408da0:	sub    eax,DWORD PTR [eax+edx*2-0x40c77767]
  408da7:	jmp    0xeec2:0x711b452a
  408dae:	stos   BYTE PTR es:[edi],al
  408daf:	sub    dh,0x24
  408db2:	call   0x8168:0xf337e3bc
  408db9:	mov    DWORD PTR [edi+0x60],esi
  408dbc:	cmp    bl,BYTE PTR [ebp*8+0x1089b48b]
  408dc3:	adc    BYTE PTR [esi+0x9],al
  408dc6:	adc    al,0x81
  408dc8:	jmp    0x408dc6
  408dca:	jle    0x408e29
  408dcc:	dec    esp
  408dcd:	sbb    ebp,esp
  408dcf:	push   0x5e
  408dd1:	aad    0x22
  408dd3:	mov    ds:0x92013846,eax
  408dd8:	(bad)
  408ddb:	repz add BYTE PTR [esi],cl
  408dde:	mov    BYTE PTR [ecx],bh
  408de0:	cmp    al,0xb
  408de2:	jge    0x408e11
  408de4:	push   0x3a
  408de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de7:	mov    edx,0xdb3a2f67
  408dec:	jmp    0xcd7a:0x20b67058
  408df3:	outs   dx,BYTE PTR ds:[esi]
  408df4:	jp     0x408dd2
  408df6:	jle    0x408d7f
  408df8:	out    dx,eax
  408df9:	push   ebp
  408dfa:	mov    WORD PTR [eax-0x43],cs
  408dfd:	adc    BYTE PTR [ebx-0x52faa29],0x9a
  408e04:	sbb    al,BYTE PTR [edi]
  408e06:	ror    BYTE PTR [esp+ecx*2],1
  408e09:	push   esi
  408e0a:	sbb    ebp,0x150d058b
  408e10:	jae    0x408dc1
  408e12:	arpl   WORD PTR [ebx+0x77],si
  408e15:	mov    bh,0xd2
  408e17:	xchg   esp,eax
  408e18:	jmp    0x408e12
  408e1a:	cdq    
  408e1b:	cmp    DWORD PTR ds:0xa5418cda,edx
  408e21:	dec    ecx
  408e22:	push   ebp
  408e23:	adc    BYTE PTR [esi+0x6b],bh
  408e26:	xchg   ebp,eax
  408e27:	jno    0x408dd6
  408e29:	add    BYTE PTR [ebx-0x5796f361],0x69
  408e30:	lods   al,BYTE PTR ds:[esi]
  408e31:	xchg   DWORD PTR [edi],edx
  408e33:	and    dl,dl
  408e35:	adc    al,0x3b
  408e37:	mov    ebx,0x7534b370
  408e3c:	imul   edi,DWORD PTR [ecx-0x3f],0xffffffc0
  408e40:	repz pusha 
  408e42:	dec    esi
  408e43:	or     BYTE PTR [edx-0x634e53ca],ah
  408e49:	(bad)  
  408e4a:	pushf  
  408e4b:	push   ebp
  408e4c:	mov    edi,0x99fbf606
  408e51:	fldcw  WORD PTR [ecx-0x4f]
  408e54:	popf   
  408e55:	retf   
  408e56:	sub    ch,ch
  408e58:	sub    bl,BYTE PTR [edi+0x59cc2f74]
  408e5e:	jno    0x408df3
  408e60:	inc    esp
  408e61:	imul   BYTE PTR [ebp+0x2102fb07]
  408e67:	ds pop edx
  408e69:	adc    al,0xc3
  408e6b:	popa   
  408e6c:	lock jo 0x408ed0
  408e6f:	mov    ch,0x24
  408e71:	xchg   BYTE PTR [ebx],cl
  408e73:	sub    ch,cl
  408e75:	into   
  408e76:	adc    edx,ebp
  408e78:	mov    edi,0x12d4fe83
  408e7d:	mov    DWORD PTR [ecx+0x6b561965],esp
  408e83:	jbe    0x408e51
  408e85:	icebp  
  408e86:	jbe    0x408e66
  408e88:	repnz mov cl,BYTE PTR [ebp+0x3fe547e1]
  408e8f:	push   ds
  408e90:	push   0x9dc21595
  408e95:	push   0xfb6b971f
  408e9a:	(bad)  
  408e9b:	add    al,0x91
  408e9d:	test   eax,ecx
  408e9f:	mov    ds:0xa43f9de0,eax
  408ea4:	xlat   BYTE PTR ds:[ebx]
  408ea5:	in     al,0x53
  408ea7:	and    al,0x1d
  408ea9:	push   0xffffff90
  408eab:	xchg   ebp,eax
  408eac:	int    0xb3
  408eae:	push   eax
  408eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb0:	and    eax,0xdad58221
  408eb5:	jge    0x408ebc
  408eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb8:	rcl    DWORD PTR [ebx-0x2f],0x3c
  408ebc:	fdiv   st(6),st
  408ebe:	gs ins DWORD PTR es:[edi],dx
  408ec0:	icebp  
  408ec1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ec2:	les    ebx,FWORD PTR [esi]
  408ec4:	mov    cl,0x40
  408ec6:	xchg   esi,eax
  408ec7:	jl     0x408f3e
  408ec9:	arpl   WORD PTR [eax-0x56623dbd],ax
  408ecf:	popf   
  408ed0:	popa   
  408ed1:	and    eax,eax
  408ed3:	adc    bl,BYTE PTR [ebp-0x5b98b280]
  408ed9:	test   eax,0x33b2272b
  408ede:	xchg   edi,eax
  408edf:	pop    esp
  408ee0:	stos   BYTE PTR es:[edi],al
  408ee1:	xchg   esp,eax
  408ee2:	push   es
  408ee3:	retf   0x7555
  408ee6:	dec    esp
  408ee7:	dec    esi
  408ee8:	not    edi
  408eea:	jp     0x408e94
  408eec:	adc    edi,DWORD PTR [esi]
  408eee:	inc    edx
  408eef:	dec    esp
  408ef0:	lods   al,BYTE PTR ds:[esi]
  408ef1:	mov    edi,0xbaa5b2ce
  408ef6:	ret    0x832
  408ef9:	add    dh,BYTE PTR [edi]
  408efb:	nop
  408efc:	mov    al,0xb0
  408efe:	out    dx,al
  408eff:	push   0xbc9cd669
  408f04:	add    eax,0xd9be423f
  408f09:	jmp    0xcd20c669
  408f0e:	or     DWORD PTR [edi-0x7c],ebp
  408f11:	test   al,0x1c
  408f13:	mov    dl,0xd6
  408f15:	add    eax,0x3c3f6bf6
  408f1a:	xchg   edi,eax
  408f1b:	arpl   WORD PTR [ecx+0x7d1720f6],si
  408f21:	mov    eax,0x9bf0f8ee
  408f26:	stc    
  408f27:	cmp    ebx,ebp
  408f29:	fdivr  DWORD PTR ds:0x2dc1021a
  408f2f:	ret    0xd6e1
  408f32:	icebp  
  408f33:	in     eax,0x45
  408f35:	shr    ecx,cl
  408f37:	mov    ch,0x37
  408f39:	jp     0x408f49
  408f3b:	sbb    dh,BYTE PTR [edi+0x64]
  408f3e:	jmp    0xaaf2d182
  408f43:	int3   
  408f44:	xchg   ebx,eax
  408f46:	pop    eax
  408f47:	adc    BYTE PTR [edx-0x68bf6758],ch
  408f4d:	es stos BYTE PTR es:[edi],al
  408f4f:	hlt    
  408f50:	cmp    al,0x9a
  408f52:	xlat   BYTE PTR ds:[ebx]
  408f53:	imul   edx,edx,0xd52ddf38
  408f59:	dec    edi
  408f5a:	jl     0x408fb1
  408f5c:	jle    0x408f8d
  408f5e:	pop    eax
  408f5f:	les    eax,FWORD PTR [edi]
  408f61:	mov    ds:0x6cf12ab,al
  408f66:	imul   esi,DWORD PTR [ebx],0x33
  408f69:	jmp    0x25e9:0x36ce762e
  408f70:	mov    dh,0xb9
  408f72:	lods   eax,DWORD PTR ds:[esi]
  408f73:	sub    eax,0x74457b50
  408f78:	jne    0x408f31
  408f7a:	aaa    
  408f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f7c:	adc    DWORD PTR [eax+0x4fbcbf2c],ecx
  408f82:	add    eax,DWORD PTR [ecx]
  408f84:	sbb    al,0xe4
  408f86:	std    
  408f87:	sub    BYTE PTR [ebx-0x45bd2d2],cl
  408f8d:	in     al,0xba
  408f8f:	add    al,0x0
  408f91:	das    
  408f92:	int    0xba
  408f94:	add    eax,0x883e3132
  408f99:	out    0xb8,al
  408f9b:	cmp    eax,0x43914d46
  408fa0:	jmp    0xce28:0x8f34699e
  408fa7:	in     eax,0xeb
  408fa9:	mov    eax,ds:0x358334da
  408fae:	(bad)  
  408faf:	push   ds
  408fb0:	cdq    
  408fb1:	mov    dl,0x3b
  408fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fb4:	sbb    BYTE PTR [edi+0x72848e51],0xa0
  408fbb:	adc    BYTE PTR [edx-0x770e857f],dl
  408fc1:	push   edi
  408fc2:	(bad)  
  408fc4:	ins    DWORD PTR es:[edi],dx
  408fc5:	sbb    ah,al
  408fc7:	lahf   
  408fc8:	add    BYTE PTR [ecx-0x71],ch
  408fcb:	ins    BYTE PTR es:[edi],dx
  408fcc:	mov    bl,0x15
  408fce:	iret   
  408fcf:	and    DWORD PTR [eax+eiz*2+0x44c73040],ebp
  408fd6:	dec    ebx
  408fd7:	lods   al,BYTE PTR ds:[esi]
  408fd8:	cwde   
  408fd9:	mov    edi,0x9e92e741
  408fde:	call   0xda1b7e5d
  408fe3:	imul   esi,DWORD PTR [esi],0xaff309e8
  408fe9:	fdivr  DWORD PTR [edx]
  408feb:	mov    eax,0x572cd846
  408ff0:	in     eax,0xf
  408ff2:	call   DWORD PTR [edx+0x7ab8702f]
  408ff8:	jl     0x409063
  408ffa:	push   cs
  408ffb:	mov    cl,0xde
  408ffd:	cmp    BYTE PTR [esi-0x272eb275],bl
  409003:	cmp    eax,0x4316a1ac
  409008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409009:	clc    
  40900a:	or     BYTE PTR [edi+ebp*1+0x10c43dc8],bl
  409011:	adc    edi,esi
  409013:	lock pop esp
  409015:	jecxz  0x409032
  409017:	push   ds
  409018:	cld    
  409019:	xchg   ebx,eax
  40901a:	jg     0x408fd1
  40901c:	or     ah,BYTE PTR [eax+0x4812cc8e]
  409022:	enter  0x350b,0xbd
  409026:	stc    
  409027:	jae    0x409085
  409029:	sbb    ch,BYTE PTR [edi-0x2b955031]
  40902f:	add    al,0xbb
  409031:	cwde   
  409032:	and    eax,0x1f0967f0
  409037:	adc    BYTE PTR [eax],ah
  409039:	iret   
  40903a:	frstpm(287 only) 
  40903c:	inc    ebx
  40903d:	mov    eax,0x3357e4a8
  409042:	add    ecx,DWORD PTR [ecx-0x54]
  409045:	fnstenv [ecx-0x872593c]
  40904b:	xchg   BYTE PTR [eax+0x38],ah
  40904e:	div    DWORD PTR [ebx+0x30]
  409051:	(bad)  
  409052:	dec    ebx
  409053:	mov    dh,0x26
  409055:	sub    BYTE PTR [edx-0x797c3b95],0xd6
  40905c:	(bad)  
  40905d:	ja     0x409072
  40905f:	mov    ?,WORD PTR [ebp-0x50]
  409062:	or     dl,0xfa
  409065:	add    BYTE PTR [eax-0x4227df74],dh
  40906b:	inc    edi
  40906c:	mov    ds:0x603bf754,al
  409071:	sbb    bl,BYTE PTR [ebx-0x752b29e2]
  409077:	dec    esi
  409078:	int3   
  409079:	dec    eax
  40907a:	jbe    0x4090b1
  40907c:	lods   al,BYTE PTR ds:[esi]
  40907d:	stc    
  40907e:	pop    ss
  40907f:	and    eax,0x2eb747a3
  409084:	mov    al,ds:0x7a4d5a28
  409089:	punpckhdq mm0,QWORD PTR [edi]
  40908c:	jns    0x409059
  40908e:	xor    dh,BYTE PTR [ebx-0x559059f7]
  409094:	fild   QWORD PTR [eax-0x12]
  409097:	sbb    cl,dh
  409099:	mov    ch,0x87
  40909b:	ror    BYTE PTR [edx+0xdfc6693],1
  4090a1:	dec    ecx
  4090a2:	fbld   TBYTE PTR [ebp+0x7b]
  4090a5:	aad    0xb8
  4090a7:	mov    edx,0x93c4f1d0
  4090ac:	scas   eax,DWORD PTR es:[edi]
  4090ad:	in     eax,0x56
  4090af:	mov    WORD PTR [eax-0x5e],fs
  4090b2:	adc    esi,esp
  4090b4:	jecxz  0x4090b8
  4090b6:	fisttp QWORD PTR [esi]
  4090b8:	out    dx,eax
  4090b9:	(bad)
  4090be:	stc    
  4090bf:	mov    edi,0x32e37100
  4090c4:	mov    edi,0x766001ac
  4090c9:	and    eax,0x7a5ce9af
  4090ce:	pop    es
  4090cf:	dec    eax
  4090d0:	jp     0x4090ec
  4090d2:	inc    ebp
  4090d3:	repz sub DWORD PTR [edx-0x20373f64],edi
  4090da:	adc    esp,DWORD PTR [eax+0x2a]
  4090dd:	sti    
  4090de:	arpl   WORD PTR [edx+0xa8bed4a],dx
  4090e4:	cdq    
  4090e5:	fld    TBYTE PTR [ebp+eax*4+0x30]
  4090e9:	or     DWORD PTR [esi+0x691a0675],edx
  4090ef:	add    BYTE PTR [edx+edx*2+0x34],dl
  4090f3:	fs aas 
  4090f5:	jecxz  0x4090bc
  4090f7:	jmp    0x5c16:0xb81e8c7d
  4090fe:	cmp    BYTE PTR [ebp-0x6f],cl
  409101:	out    dx,al
  409102:	adc    DWORD PTR [edi-0x55dc4dc6],ebp
  409108:	mov    edi,0x58a340c9
  40910d:	sub    al,0x87
  40910f:	lahf   
  409110:	(bad)  
  409111:	xchg   DWORD PTR [esi-0x223f69c4],ecx
  409117:	cs ins DWORD PTR es:[edi],dx
  409119:	stos   DWORD PTR es:[edi],eax
  40911a:	lock pop edi
  40911c:	call   0xacdac0c3
  409121:	retf   0x4869
  409124:	das    
  409125:	push   edx
  409126:	ins    BYTE PTR es:[edi],dx
  409127:	inc    ebx
  409128:	sub    DWORD PTR [eax+0x8b250b9],edx
  40912e:	call   0xb9d0:0xc2822cd1
  409135:	lods   eax,DWORD PTR ds:[esi]
  409136:	mov    esp,0x1fff11b
  40913b:	mov    ch,0x93
  40913d:	adc    bh,ah
  40913f:	sar    DWORD PTR [edi-0x5109f44e],0xcc
  409146:	pop    esi
  409147:	sub    DWORD PTR [edx],0xb08f4cde
  40914d:	xchg   edi,eax
  40914e:	in     al,dx
  40914f:	cmp    DWORD PTR [ebx-0x3b1f5d62],ebp
  409155:	rol    BYTE PTR [ebp-0x6f7d6d4],1
  40915b:	pop    ss
  40915c:	mov    ah,0x5e
  40915e:	xor    dh,BYTE PTR [ecx]
  409160:	inc    esp
  409161:	xlat   BYTE PTR ds:[ebx]
  409162:	aam    0xf9
  409164:	add    DWORD PTR [esi-0x13dc954],ebx
  40916a:	test   DWORD PTR fs:[ebx],esp
  40916d:	ins    BYTE PTR es:[edi],dx
  40916e:	sub    esi,DWORD PTR ds:0x61f71d12
  409174:	cmc    
  409175:	mov    DWORD PTR [edi-0x7574f5e],eax
  40917b:	jne    0x40919a
  40917d:	call   0x1a32a367
  409182:	int3   
  409183:	or     dh,ch
  409185:	xchg   edi,eax
  409186:	mov    cl,0x1a
  409188:	xlat   BYTE PTR ds:[ebx]
  409189:	jb     0x409156
  40918b:	inc    edx
  40918c:	fs push cs
  40918e:	lods   eax,DWORD PTR ds:[esi]
  40918f:	inc    esi
  409190:	sbb    DWORD PTR [edx-0x52],esi
  409193:	jne    0x409127
  409195:	in     eax,0x78
  409197:	cwde   
  409198:	sbb    al,BYTE PTR [edx-0x70]
  40919b:	add    bh,BYTE PTR [edx+0x73]
  40919e:	xchg   edi,eax
  40919f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091a0:	pop    esi
  4091a1:	inc    ebp
  4091a2:	ss jnp 0x4091a3
  4091a5:	or     BYTE PTR [eax],0x1c
  4091a8:	call   0x8156:0xf15c80b8
  4091af:	and    DWORD PTR [edi+0x42],ebx
  4091b2:	mov    al,0xd6
  4091b4:	ffreep st(0)
  4091b6:	or     al,0x14
  4091b8:	mov    edx,0x83af03ad
  4091bd:	xor    ebx,esp
  4091bf:	adc    eax,0x18ce8e58
  4091c4:	aad    0x14
  4091c6:	cmp    dh,BYTE PTR [ebp+0x354008c5]
  4091cc:	ja     0x409187
  4091ce:	in     al,0xb1
  4091d0:	pusha  
  4091d1:	sub    DWORD PTR [ebx],0xf3ae503
  4091d7:	pop    esp
  4091d8:	lock popf 
  4091da:	push   edx
  4091db:	adc    ch,BYTE PTR [esi]
  4091dd:	lds    eax,FWORD PTR [ebp+0x77]
  4091e0:	inc    esi
  4091e1:	mov    dl,0x13
  4091e3:	mov    ebx,0xe44b0cae
  4091e8:	cmp    BYTE PTR [edi],0x53
  4091eb:	fisub  WORD PTR ds:0xab8c84df
  4091f1:	das    
  4091f2:	jge    0x4091e9
  4091f4:	jp     0x409190
  4091f6:	push   ecx
  4091f7:	out    0xc0,al
  4091f9:	lock mov ch,0xfa
  4091fc:	pop    eax
  4091fd:	xor    DWORD PTR [edx],esp
  4091ff:	popf   
  409200:	mov    ebx,0xe48964c7
  409205:	(bad)  
  409206:	mov    cl,0x36
  409208:	dec    ebp
  409209:	ds mov edx,0xa19ddeda
  40920f:	mov    al,ds:0xb0c0d591
  409214:	inc    ebx
  409215:	xchg   edi,eax
  409216:	push   cs
  409217:	push   esp
  409218:	mov    dl,0xeb
  40921a:	test   eax,0x8fe93e8e
  40921f:	xor    edi,DWORD PTR [esi+0x4bea9f55]
  409225:	fistp  QWORD PTR [edx+0x41]
  409228:	std    
  409229:	mov    esi,0xae17af1e
  40922e:	(bad)  
  40922f:	push   cs
  409230:	or     DWORD PTR [ebx-0xe253c1b],eax
  409236:	lds    esi,FWORD PTR [edx+0x1474b24c]
  40923c:	cdq    
  40923d:	xor    ch,BYTE PTR ds:[edi-0x480e64cc]
  409244:	mov    al,0xd6
  409246:	dec    ecx
  409247:	aaa    
  409248:	retf   0x7bd2
  40924b:	xchg   ebx,eax
  40924c:	(bad)  
  40924d:	xchg   esi,eax
  40924e:	test   al,0x64
  409250:	in     eax,dx
  409251:	les    ecx,FWORD PTR [ecx]
  409253:	ss enter 0x46fb,0x8
  409258:	xchg   DWORD PTR [ebx-0x72b82858],ebp
  40925e:	cld    
  40925f:	in     al,0xde
  409261:	nop
  409262:	pop    esi
  409263:	rcr    esp,0x98
  409266:	scas   al,BYTE PTR es:[edi]
  409267:	arpl   sp,dx
  409269:	retf   
  40926a:	cmp    eax,0x7b0ad126
  40926f:	(bad)  
  409271:	cmp    ch,cl
  409273:	push   ecx
  409274:	mov    al,0xd2
  409276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409277:	aad    0x1b
  409279:	in     al,dx
  40927a:	pusha  
  40927b:	mov    ah,BYTE PTR [edx+0x37]
  40927e:	dec    ebx
  40927f:	lods   al,BYTE PTR ds:[esi]
  409280:	pop    esi
  409281:	add    BYTE PTR [esi+0x463a276b],cl
  409287:	lock pop ds
  409289:	mov    ah,0x10
  40928b:	xchg   edi,eax
  40928c:	idiv   BYTE PTR [edi+edi*8-0x10]
  409290:	test   BYTE PTR [edi+0x52],bl
  409293:	pop    esi
  409294:	test   BYTE PTR [ebx],ch
  409296:	aaa    
  409297:	jmp    0x375c:0x3e16cbce
  40929e:	add    esp,DWORD PTR [ecx-0x3af2922c]
  4092a4:	cmc    
  4092a5:	adc    ebp,ebx
  4092a7:	cwde   
  4092a8:	cwde   
  4092a9:	inc    ebp
  4092aa:	fist   DWORD PTR [ebx+0x6c]
  4092ad:	inc    esp
  4092ae:	sbb    al,0x3
  4092b0:	mov    al,0x69
  4092b2:	mov    ds:0xa2de603e,al
  4092b7:	and    BYTE PTR [edi],ah
  4092b9:	mov    ecx,0x51599a5f
  4092be:	int    0xef
  4092c0:	mov    eax,esp
  4092c2:	ins    DWORD PTR es:[edi],dx
  4092c3:	bound  esp,QWORD PTR [edi+0x6310cd30]
  4092c9:	sub    bh,BYTE PTR ds:0xdb494c80
  4092cf:	jp     0x409280
  4092d1:	mov    ch,dh
  4092d3:	dec    eax
  4092d4:	adc    dl,dh
  4092d6:	or     edx,DWORD PTR [ecx]
  4092d8:	cld    
  4092d9:	mov    ah,0xf6
  4092db:	ror    DWORD PTR [edx+edi*4+0x19e77b6b],1
  4092e2:	cmp    bh,ah
  4092e4:	inc    esp
  4092e5:	jmp    0x409351
  4092e7:	cli    
  4092e8:	mov    DWORD PTR [edx+0x154e02d1],esp
  4092ee:	fstp   QWORD PTR [esi+ebp*8-0x461ad9e7]
  4092f5:	sahf   
  4092f6:	mov    edi,0xe857ab36
  4092fb:	addr16 jmp 0x36e6:0x7acc4c3f
  409303:	(bad)  
  409304:	inc    esi
  409305:	xchg   edi,edx
  409307:	dec    ecx
  409309:	cdq    
  40930a:	jg     0x4092b4
  40930c:	and    bl,BYTE PTR [ebx]
  40930e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40930f:	(bad)  
  409310:	xor    DWORD PTR [eax-0x71],ecx
  409313:	or     DWORD PTR [edx-0x65],ebx
  409316:	adc    ebp,esp
  409318:	or     eax,DWORD PTR [edx-0x4f8fa01]
  40931e:	mov    ecx,0xc9783fc8
  409323:	or     al,0xaf
  409325:	xchg   esp,eax
  409326:	rcr    BYTE PTR [esi+0x9f6d0a0],cl
  40932c:	pop    eax
  40932d:	or     DWORD PTR [eax],eax
  40932f:	test   DWORD PTR [ebx-0x4f],esi
  409332:	lahf   
  409333:	dec    eax
  409334:	sub    BYTE PTR [ebp-0x24],0x11
  409338:	mov    bh,BYTE PTR [ebp-0x54]
  40933b:	pop    edi
  40933c:	cmc    
  40933d:	pop    esi
  40933e:	(bad)  
  40933f:	aam    0x2d
  409341:	add    dh,0x2f
  409344:	fs mov bh,0x2a
  409347:	test   DWORD PTR [ecx+0x65],ebp
  40934a:	dec    edi
  40934b:	test   bl,cl
  40934d:	jg     0x40937c
  40934f:	pop    ebp
  409350:	and    esi,edx
  409352:	in     al,0xe2
  409354:	hlt    
  409355:	jbe    0x409364
  409357:	adc    eax,0xe552347d
  40935c:	popa   
  40935d:	test   al,0xc3
  40935f:	out    0x8c,eax
  409361:	test   eax,0x376ab79b
  409366:	stos   DWORD PTR es:[edi],eax
  409367:	sub    eax,DWORD PTR [eax]
  409369:	mov    cl,BYTE PTR [eax+0x7b]
  40936c:	inc    ebp
  40936d:	in     al,0x64
  40936f:	or     al,0x7
  409371:	pop    ss
  409372:	xchg   esi,eax
  409373:	mov    ds:0x51a81993,eax
  409378:	test   eax,0xfe4f077f
  40937d:	das    
  40937e:	push   es
  40937f:	cmp    DWORD PTR [edi+0x3a7c92f8],ecx
  409385:	(bad)  
  409386:	adc    cl,BYTE PTR [ebx+0x4faf7a4e]
  40938c:	or     DWORD PTR [edx-0x42],esp
  40938f:	push   es
  409390:	popf   
  409391:	gs sbb al,0x73
  409394:	in     eax,0xd8
  409396:	mov    cr4,edx
  409399:	add    DWORD PTR [ecx-0x16],esp
  40939c:	sub    al,cl
  40939e:	xchg   ecx,eax
  40939f:	ins    BYTE PTR es:[edi],dx
  4093a0:	popf   
  4093a1:	adc    dh,ch
  4093a3:	mov    edi,0xbe9bc2fd
  4093a8:	call   0x2a8e:0xd803f456
  4093af:	adc    DWORD PTR [edx-0x1e],eax
  4093b2:	cmp    DWORD PTR [edi],ebx
  4093b4:	pop    eax
  4093b5:	ins    BYTE PTR es:[edi],dx
  4093b6:	adc    DWORD PTR [ecx],esp
  4093b8:	xor    esi,DWORD PTR [edx]
  4093ba:	add    DWORD PTR [edi],edx
  4093bc:	(bad)  
  4093bd:	repz imul eax,ebp,0x19fe3267
  4093c4:	jnp    0x4093d0
  4093c6:	pop    esp
  4093c7:	jbe    0x409401
  4093c9:	lahf   
  4093ca:	xchg   ebx,eax
  4093cb:	xor    ecx,DWORD PTR [ecx-0x70]
  4093ce:	cld    
  4093cf:	sbb    edx,esi
  4093d1:	mov    esi,0x4d57cf10
  4093d6:	pop    ecx
  4093d7:	mov    ebp,0xc3d7ebec
  4093dc:	mov    edx,0xf0a0171b
  4093e1:	jo     0x409411
  4093e3:	stc    
  4093e4:	imul   ebp,DWORD PTR [eax+edi*2-0x5d32a4b7],0x6f181099
  4093ef:	and    al,0xc4
  4093f1:	fwait
  4093f2:	gs std 
  4093f4:	(bad)  
  4093f5:	mov    esi,0x59b46178
  4093fa:	test   BYTE PTR ds:0x5b570c87,ch
  409400:	push   0x66
  409402:	push   ebx
  409403:	das    
  409404:	jmp    0x4093d2
  409406:	fst    QWORD PTR [eax+eax*4]
  409409:	or     DWORD PTR [ebx+0x86b630b],esp
  40940f:	int    0x2b
  409411:	or     eax,0xe544c609
  409416:	sahf   
  409417:	add    DWORD PTR [esi],ecx
  409419:	mov    esp,0xe2014385
  40941e:	add    dh,BYTE PTR [eax-0x1a79e37f]
  409424:	arpl   WORD PTR [eax+eax*4-0x43526794],bp
  40942b:	jg     0x409456
  40942d:	bound  esp,QWORD PTR [edi+edi*8+0x12520206]
  409434:	fwait
  409435:	pop    ss
  409436:	mov    eax,ds:0x6b074e39
  40943b:	mov    eax,ds:0x32e4a196
  409440:	add    BYTE PTR [ebp-0x38baa4f7],ah
  409446:	push   esp
  409447:	sbb    al,BYTE PTR [ebx+ebx*1]
  40944a:	dec    esi
  40944b:	mov    dl,0x58
  40944d:	int3   
  40944e:	mov    ah,BYTE PTR [ecx-0x4b]
  409451:	enter  0xc434,0xa5
  409455:	cwde   
  409456:	out    dx,eax
  409457:	xor    eax,0x1492b021
  40945c:	add    esp,DWORD PTR [edi-0x437ee314]
  409462:	arpl   WORD PTR [ebx-0x609f09db],ax
  409468:	mov    bh,0xdc
  40946a:	sbb    eax,DWORD PTR [ebx+0x1d4b74ce]
  409470:	mov    ds:0xce4fdb87,eax
  409475:	lods   al,BYTE PTR ds:[esi]
  409476:	jl     0xe3044788
  40947c:	fcmovnu st,st(0)
  40947e:	mov    al,0x71
  409480:	mul    BYTE PTR [esi-0x3a778384]
  409486:	jae    0x40942d
  409488:	and    DWORD PTR [ebp-0xe666f44],esi
  40948e:	fcom   st(5)
  409490:	jg     0x40948d
  409492:	xor    ebx,DWORD PTR [edi+ecx*4+0xbf60e30]
  409499:	cli    
  40949a:	mov    ah,0xfa
  40949c:	xchg   ebp,eax
  40949d:	test   BYTE PTR [ebp+0x52],0x5b
  4094a1:	mov    ecx,0xe3612842
  4094a6:	xchg   esp,eax
  4094a7:	xchg   ebx,eax
  4094a8:	in     eax,dx
  4094a9:	mov    ch,0x3b
  4094ab:	adc    cl,BYTE PTR [edi]
  4094ad:	scas   eax,DWORD PTR es:[edi]
  4094ae:	jb     0x409453
  4094b0:	pop    ebx
  4094b1:	icebp  
  4094b2:	xor    al,BYTE PTR [edx-0xb503f91]
  4094b8:	dec    edx
  4094b9:	out    dx,al
  4094ba:	stc    
  4094bb:	fstp   QWORD PTR [edx+0x51]
  4094be:	aaa    
  4094bf:	addr16 jbe 0x409475
  4094c2:	sub    eax,0xb738a012
  4094c7:	inc    edi
  4094c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094c9:	push   ebp
  4094ca:	loop   0x4094b5
  4094cc:	mov    ebx,0x3f84519f
  4094d1:	and    eax,0xf5d3e70e
  4094d6:	enter  0xe7,0xb9
  4094da:	outs   dx,BYTE PTR ds:[esi]
  4094db:	dec    esi
  4094dc:	pop    ecx
  4094dd:	push   0x951fa40
  4094e2:	int    0x1a
  4094e4:	hlt    
  4094e5:	pop    ecx
  4094e6:	add    al,0xbd
  4094e8:	sbb    bh,BYTE PTR ds:0xab907014
  4094ee:	cmc    
  4094ef:	cli    
  4094f0:	in     al,dx
  4094f1:	and    DWORD PTR [eax],esi
  4094f3:	out    dx,eax
  4094f4:	hlt    
  4094f5:	ins    DWORD PTR es:[edi],dx
  4094f6:	mov    ecx,0x47a9b44d
  4094fb:	adc    edi,ebp
  4094fd:	loope  0x40951c
  4094ff:	mov    al,0x61
  409501:	mov    cl,0x17
  409503:	outs   dx,DWORD PTR ds:[esi]
  409504:	sahf   
  409505:	add    BYTE PTR [ebx],0x55
  409508:	js     0x4094c8
  40950a:	icebp  
  40950b:	stc    
  40950c:	fidivr DWORD PTR [esi-0x13]
  40950f:	test   BYTE PTR [edi+eiz*2-0x7597cf01],0xd
  409517:	test   esi,ebx
  409519:	push   eax
  40951a:	adc    eax,0x1f5ef697
  40951f:	popa   
  409520:	jnp    0x409532
  409522:	loopne 0x40957b
  409524:	in     eax,0x1a
  409526:	jns    0x40959f
  409528:	push   ecx
  409529:	ret    
  40952a:	sub    al,BYTE PTR [esp+eiz*8]
  40952d:	loopne 0x40953c
  40952f:	ret    
  409530:	call   DWORD PTR [edi+0x74]
  409533:	xlat   BYTE PTR ds:[ebx]
  409534:	mov    BYTE PTR [ebx],dl
  409536:	inc    edx
  409537:	mov    DWORD PTR [ebp-0x7eedb25a],ebp
  40953d:	xor    BYTE PTR [ebx],bh
  40953f:	in     al,0x3c
  409541:	or     al,0xc9
  409543:	add    ecx,DWORD PTR [ebx]
  409545:	fs jle 0x4095ac
  409548:	repz mov esi,0x5afe8fb7
  40954e:	pop    edi
  40954f:	pop    ss
  409550:	in     al,dx
  409551:	daa    
  409552:	mov    dh,0x3d
  409554:	dec    eax
  409555:	pop    edi
  409556:	aam    0x4d
  409558:	xchg   ecx,eax
  409559:	xchg   edi,eax
  40955a:	das    
  40955b:	scas   eax,DWORD PTR es:[edi]
  40955c:	shr    BYTE PTR [edx-0x73],1
  40955f:	xor    al,0x6a
  409561:	mov    cl,0xd8
  409563:	jmp    0x40956c
  409565:	mov    dh,0xa0
  409567:	mov    ebx,0x53f96db0
  40956c:	pop    ebx
  40956d:	repnz mov ecx,0x509631a6
  409573:	mov    ds:0x8e2e1fe7,eax
  409578:	fimul  DWORD PTR [esi]
  40957a:	aad    0xde
  40957c:	es inc edx
  40957e:	repnz mov ds:0x39b3354f,eax
  409584:	(bad)  
  409585:	and    al,0x52
  409587:	(bad)  
  409588:	jecxz  0x4095e2
  40958a:	xchg   DWORD PTR [edi+edi*2-0x7633ba57],ebx
  409591:	call   0x7843a0dc
  409596:	cs pop edx
  409598:	push   ebp
  409599:	add    dh,BYTE PTR [ebx]
  40959b:	stos   BYTE PTR es:[edi],al
  40959c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40959d:	jmp    0x409562
  40959f:	sbb    ah,dl
  4095a1:	jle    0x40952c
  4095a3:	(bad)  
  4095a4:	jo     0x409596
  4095a6:	into   
  4095a7:	pusha  
  4095a8:	aas    
  4095a9:	and    dh,BYTE PTR [edi+0x5]
  4095ac:	stos   BYTE PTR es:[edi],al
  4095ad:	pop    ebp
  4095ae:	arpl   bx,bp
  4095b0:	sub    esp,DWORD PTR [ecx]
  4095b2:	sbb    eax,0x87a6697d
  4095b7:	mov    al,ds:0xb845663c
  4095bc:	aad    0x71
  4095be:	test   al,0x6c
  4095c0:	es stos DWORD PTR es:[edi],eax
  4095c2:	ins    BYTE PTR es:[edi],dx
  4095c3:	add    DWORD PTR [esi+0x19724173],eax
  4095c9:	jbe    0x4095cb
  4095cb:	inc    ebp
  4095cc:	fwait
  4095cd:	adc    bl,BYTE PTR [eax]
  4095cf:	sbb    DWORD PTR [ebp+0x66],ecx
  4095d2:	inc    ebp
  4095d3:	jecxz  0x409628
  4095d5:	ror    DWORD PTR [edx],cl
  4095d7:	push   es
  4095d8:	fisttp DWORD PTR [esi-0x6c]
  4095db:	xor    al,0xd6
  4095dd:	mov    ebp,0x44cbf5b7
  4095e2:	push   ecx
  4095e3:	outs   dx,BYTE PTR ds:[esi]
  4095e4:	repz push ss
  4095e6:	cmp    esp,0xb6f2b5c1
  4095ec:	push   ds
  4095ed:	(bad)  
  4095ee:	jo     0x4095ce
  4095f0:	sbb    bh,bl
  4095f2:	mov    WORD PTR [ebx],cs
  4095f4:	mov    eax,DWORD PTR [ebx]
  4095f6:	pop    edi
  4095f7:	in     al,0xf8
  4095f9:	pop    ds
  4095fa:	or     DWORD PTR [esi],edx
  4095fc:	shl    esp,1
  4095fe:	push   eax
  4095ff:	pop    ebx
  409600:	inc    edi
  409601:	adc    DWORD PTR [ecx],ecx
  409603:	cld    
  409604:	jnp    0x4095ef
  409606:	and    dh,BYTE PTR [esp+ecx*4-0x79691401]
  40960d:	nop
  40960e:	mov    DWORD PTR [edx-0x1c471d37],edi
  409614:	mov    al,0xf6
  409616:	jb     0xfb06778e
  40961c:	mov    dl,0xf8
  40961e:	aad    0x2b
  409620:	pop    ss
  409621:	inc    ecx
  409622:	retf   0xf3a1
  409625:	sbb    BYTE PTR [edx+0x25],ah
  409628:	aam    0x1c
  40962a:	xor    ebx,DWORD PTR [eiz*2+0x2cd2abf2]
  409631:	add    al,0x7
  409633:	out    dx,eax
  409634:	fs dec ebp
  409636:	mov    ebx,0x24509429
  40963b:	push   ss
  40963c:	push   0x9dfe445b
  409641:	rol    bl,1
  409643:	add    BYTE PTR [ecx+eiz*4+0x6fa57bc8],0xb7
  40964b:	adc    BYTE PTR [ebx-0x5696151b],dh
  409651:	scas   eax,DWORD PTR es:[edi]
  409652:	mov    al,0xf
  409654:	cli    
  409655:	fdiv   QWORD PTR [edx+esi*8-0x24]
  409659:	aad    0xa7
  40965b:	mov    ch,0x43
  40965d:	scas   al,BYTE PTR es:[edi]
  40965e:	jg     0x409633
  409660:	std    
  409661:	repz dec ebp
  409663:	retf   0x1ae9
  409666:	repnz test al,0xc8
  409669:	jp     0x4095ec
  40966b:	inc    ebp
  40966c:	cli    
  40966d:	aas    
  40966e:	(bad)  
  409670:	xchg   esp,eax
  409671:	jecxz  0x4096b4
  409673:	loope  0x4096ef
  409675:	cdq    
  409676:	jl     0x4096e9
  409678:	cli    
  409679:	fwait
  40967a:	sar    cl,0x68
  40967d:	mov    cl,dl
  40967f:	sbb    al,0x14
  409681:	mov    eax,ds:0xc553ce10
  409686:	popa   
  409687:	(bad)  
  409688:	mov    bh,0x45
  40968a:	and    eax,0x7f877f02
  40968f:	jno    0x40961b
  409691:	retf   
  409692:	or     ebp,DWORD PTR [esi]
  409694:	cmc    
  409695:	jns    0x40966c
  409697:	jb     0x40964f
  409699:	pop    ds
  40969a:	adc    dh,BYTE PTR ds:0xbd7bd1fd
  4096a0:	mov    eax,ds:0x9359247f
  4096a5:	fyl2x  
  4096a7:	out    dx,al
  4096a8:	imul   edx,DWORD PTR [edi],0x63236539
  4096ae:	test   dh,bh
  4096b0:	sar    BYTE PTR [ebp-0x5d],1
  4096b3:	nop
  4096b4:	popf   
  4096b5:	push   esi
  4096b6:	mov    edx,0x52df9a3e
  4096bb:	(bad)  [ecx+0x29]
  4096be:	mov    edi,0xc9d79739
  4096c3:	jmp    0x4096bb
  4096c5:	(bad)  
  4096c6:	(bad)  
  4096c7:	xor    dl,BYTE PTR [esi-0x6c]
  4096ca:	add    DWORD PTR es:[edi+0x66dcae8e],ebx
  4096d1:	push   esi
  4096d2:	(bad)  
  4096d3:	or     al,0x79
  4096d5:	adc    eax,0x1869e071
  4096da:	out    dx,eax
  4096db:	rcr    DWORD PTR [edx-0x5],1
  4096de:	jmp    0x409688
  4096e0:	xchg   bp,ax
  4096e2:	inc    edx
  4096e3:	hlt    
  4096e4:	mov    cl,0x2
  4096e6:	mov    ah,0xaa
  4096e8:	or     BYTE PTR [esi+0x1],dh
  4096eb:	and    DWORD PTR [edx-0x12aa3242],0x109eaaf6
  4096f5:	popf   
  4096f6:	mov    ebp,0xde8a07b2
  4096fb:	out    dx,eax
  4096fc:	sbb    ah,BYTE PTR [ebx-0xe]
  4096ff:	lods   eax,DWORD PTR ds:[esi]
  409700:	aaa    
  409701:	imul   edx,DWORD PTR [esi+esi*8-0x6aae8eb3],0x708f27a9
  40970c:	(bad)  
  40970d:	clc    
  40970e:	outs   dx,BYTE PTR ds:[esi]
  40970f:	bound  eax,QWORD PTR [ebx-0x57da8b62]
  409715:	jl     0x409788
  409717:	mov    cl,0xb9
  409719:	sbb    ecx,DWORD PTR [eax]
  40971b:	arpl   si,sp
  40971d:	jle    0x40971f
  40971f:	mov    al,0xdb
  409721:	mov    ecx,0x41107e8d
  409726:	stc    
  409727:	xchg   edi,eax
  409728:	mov    eax,ds:0x99b9ac5b
  40972d:	stos   DWORD PTR es:[edi],eax
  40972e:	aam    0x7b
  409730:	fistp  WORD PTR [edi-0x7615f811]
  409736:	out    0xb4,al
  409738:	stos   BYTE PTR es:[edi],al
  409739:	test   BYTE PTR [edx-0x61],0x77
  40973d:	out    dx,eax
  40973e:	push   ebx
  40973f:	mov    ds:0x4e6ecb32,eax
  409744:	mov    esi,0xf7c1a4c3
  409749:	pop    ebx
  40974a:	jno    0x409724
  40974c:	cdq    
  40974d:	cmp    BYTE PTR [ebx+edx*1+0x5353f0c0],bl
  409754:	and    dh,dl
  409756:	in     eax,0x55
  409758:	lock add edx,ecx
  40975b:	adc    al,0x13
  40975d:	int    0x5
  40975f:	jbe    0x409769
  409761:	adc    eax,0x31cff0
  409766:	mov    bl,BYTE PTR [esi-0xd96de50]
  40976c:	stos   DWORD PTR es:[edi],eax
  40976d:	clc    
  40976e:	sub    al,0xac
  409770:	enter  0x3426,0x55
  409774:	add    BYTE PTR [edi-0x4a47f12d],bh
  40977a:	or     al,0x7d
  40977c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40977d:	call   0x9c6e162
  409782:	jle    0x4097e8
  409784:	leave  
  409785:	xchg   cl,ah
  409787:	dec    ecx
  409788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409789:	pop    es
  40978a:	std    
  40978b:	je     0x409802
  40978d:	sahf   
  40978e:	jmp    DWORD PTR [ebx]
  409790:	pop    edi
  409791:	jnp    0x40972a
  409793:	sub    al,0xce
  409795:	add    DWORD PTR ds:0x6c22de55,0x8893d842
  40979f:	(bad)  ds:0x2b5389d3
  4097a5:	(bad)  
  4097a6:	xor    al,0xba
  4097a8:	pop    edi
  4097a9:	cmp    eax,0xc2dc1d07
  4097ae:	mov    bl,0xde
  4097b0:	mov    BYTE PTR [ebx+0x5cd6a425],cl
  4097b6:	and    dl,BYTE PTR [edx]
  4097b8:	dec    esi
  4097b9:	dec    ebp
  4097ba:	scas   al,BYTE PTR es:[edi]
  4097bb:	or     DWORD PTR [edi-0x605f0a6],eax
  4097c1:	test   DWORD PTR [esi+0x6edb1cbb],edi
  4097c7:	stos   BYTE PTR es:[edi],al
  4097c8:	inc    esi
  4097c9:	shl    DWORD PTR [esi-0x44fa8f7b],cl
  4097cf:	repnz inc eax
  4097d1:	mov    ds:0xaa239501,eax
  4097d6:	dec    edx
  4097d7:	inc    edx
  4097d8:	jno    0x4097dd
  4097da:	mov    ebp,0xe08248d8
  4097df:	mov    ebx,0x53c9eb1b
  4097e4:	ss xor al,0x23
  4097e7:	icebp  
  4097e8:	fistp  QWORD PTR [ebx]
  4097ea:	out    0x3c,al
  4097ec:	cmp    ebp,eax
  4097ee:	push   esp
  4097ef:	push   ss
  4097f0:	repz pop eax
  4097f2:	(bad)  
  4097f3:	mov    ecx,0xb71f4c5f
  4097f8:	shr    DWORD PTR [ebp+0x462c8a7c],0xa
  4097ff:	fadd   DWORD PTR [esi+0x2f92e07a]
  409805:	jnp    0x4097dd
  409807:	iret   
  409808:	aad    0x50
  40980a:	cmp    al,0x8b
  40980c:	cwde   
  40980d:	imul   ecx,ecx,0xffffffc8
  409810:	and    al,0x3b
  409812:	pop    ecx
  409813:	stos   DWORD PTR es:[edi],eax
  409814:	aas    
  409815:	inc    ebx
  409816:	push   0xf
  409818:	mov    edx,0x632c0a1a
  40981d:	pop    ebx
  40981e:	mov    eax,0xf4c3b902
  409823:	(bad)  
  409824:	les    ecx,FWORD PTR [esi+0x39bdc1ed]
  40982a:	in     eax,0xc
  40982c:	outs   dx,BYTE PTR ds:[esi]
  40982d:	adc    BYTE PTR [ebx],dh
  40982f:	in     al,0xe8
  409831:	scas   eax,DWORD PTR es:[edi]
  409832:	cwde   
  409833:	ins    DWORD PTR es:[edi],dx
  409834:	aas    
  409835:	xor    edi,esp
  409837:	jo     0x4097f3
  409839:	adc    eax,0xdcc109c5
  40983e:	jge    0x4097d6
  409840:	mov    ebx,0x5eb2ea01
  409845:	outs   dx,BYTE PTR ds:[esi]
  409846:	stos   DWORD PTR es:[edi],eax
  409847:	loop   0x4097eb
  409849:	mov    al,ds:0xf80727bb
  40984e:	mov    ebx,0x1d2993e3
  409854:	test   al,0x59
  409856:	adc    edx,DWORD PTR [esi-0x39b8cbf]
  40985c:	pop    ebx
  40985d:	in     al,dx
  40985e:	adc    dl,ah
  409860:	scas   al,BYTE PTR es:[edi]
  409861:	(bad)  
  409862:	das    
  409863:	imul   esi,DWORD PTR [edx-0x3d],0x3f
  409867:	or     eax,0x1ceb55a9
  40986c:	sbb    ch,BYTE PTR ds:[ebp+0x8e4b3a4]
  409873:	in     al,dx
  409874:	pop    ebp
  409875:	cmp    al,0xae
  409877:	mov    eax,0x9788651a
  40987c:	fistp  QWORD PTR [edi]
  40987e:	imul   ecx,DWORD PTR [ebp-0x34],0x6c
  409882:	mov    cl,0x25
  409884:	into   
  409885:	add    dl,dh
  409887:	sub    BYTE PTR [eax],al
  409889:	jmp    0xa4a350d2
  40988e:	in     al,0xb7
  409890:	dec    edx
  409891:	push   cs
  409892:	jecxz  0x4098f1
  409894:	int3   
  409895:	out    dx,al
  409896:	les    ebp,FWORD PTR [esi+0x8]
  409899:	hlt    
  40989a:	xor    eax,0xd152d064
  40989f:	pop    ebx
  4098a0:	mov    esi,0x402b0280
  4098a5:	mov    esi,0xe690a923
  4098aa:	sub    DWORD PTR [ecx],ecx
  4098ac:	adc    al,0xb1
  4098ae:	sub    ecx,edi
  4098b0:	dec    edx
  4098b1:	push   ds
  4098b2:	pop    edx
  4098b3:	sbb    eax,0xf6fbfb8e
  4098b8:	std    
  4098b9:	push   esp
  4098ba:	push   ebp
  4098bb:	push   esp
  4098bc:	leave  
  4098bd:	cld    
  4098be:	inc    ebx
  4098bf:	repnz jecxz 0x40986d
  4098c2:	and    DWORD PTR [edx],esp
  4098c4:	mov    ecx,0x775af14f
  4098c9:	fwait
  4098ca:	dec    ecx
  4098cb:	pop    ds
  4098cc:	adc    DWORD PTR [ebx+0x80903a9],esp
  4098d2:	test   eax,0x898f1032
  4098d7:	pushf  
  4098d8:	sbb    eax,0x96766b53
  4098dd:	rcl    ah,1
  4098df:	sbb    esp,eax
  4098e1:	mov    ch,0xa5
  4098e3:	dec    ecx
  4098e4:	add    edi,DWORD PTR [ecx]
  4098e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098e7:	sti    
  4098e8:	test   BYTE PTR [ebp-0x3c],dh
  4098eb:	xlat   BYTE PTR ds:[ebx]
  4098ec:	mov    bh,0x1c
  4098ee:	bound  ecx,QWORD PTR [ebx+0x4c341cd8]
  4098f4:	push   ebp
  4098f5:	rcr    BYTE PTR [edx-0x61],1
  4098f8:	sub    ebx,DWORD PTR [ebp-0x6e111897]
  4098fe:	adc    DWORD PTR [ecx+0x3cb2895e],ebx
  409904:	outs   dx,DWORD PTR ds:[esi]
  409905:	and    al,BYTE PTR [eax]
  409907:	stos   DWORD PTR es:[edi],eax
  409908:	dec    ebx
  409909:	outs   dx,BYTE PTR ds:[esi]
  40990a:	imul   esp,esi,0xffffffce
  40990d:	inc    esi
  40990e:	dec    esi
  40990f:	ja     0x409938
  409911:	sbb    BYTE PTR [edx-0x52],bl
  409914:	and    ch,BYTE PTR ss:[edi-0x45]
  409918:	inc    esi
  409919:	popa   
  40991a:	xor    DWORD PTR [ebx],ebp
  40991c:	sub    edi,edi
  40991e:	arpl   bx,sp
  409920:	test   BYTE PTR [ebp+0x70],bh
  409923:	sbb    dl,BYTE PTR [edi]
  409925:	fwait
  409926:	pop    ss
  409927:	add    al,0x14
  409929:	or     dl,BYTE PTR [eax-0x41]
  40992c:	scas   al,BYTE PTR es:[edi]
  40992d:	jl     0x40990f
  40992f:	call   0xa9ef:0xa8a45945
  409936:	and    eax,DWORD PTR [edi]
  409938:	mov    ah,0x11
  40993a:	data16 aas 
  40993c:	xchg   ebp,eax
  40993d:	enter  0xa2df,0x49
  409941:	xchg   edi,eax
  409942:	loop   0x40993d
  409944:	mov    bh,0x36
  409946:	cdq    
  409947:	aam    0x20
  409949:	loope  0x409956
  40994b:	pushf  
  40994c:	pop    ss
  40994d:	pop    eax
  40994e:	fistp  QWORD PTR [edi-0x4f07c0e9]
  409954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409955:	mov    esi,0xb4738fe9
  40995a:	mov    bl,0x2
  40995c:	lock call 0x60a0:0xaf0c957f
  409964:	inc    esp
  409965:	add    ch,bl
  409967:	inc    ebp
  409968:	ret    
  409969:	dec    ebp
  40996a:	pop    edx
  40996b:	pushf  
  40996c:	cwde   
  40996d:	mov    al,ds:0x509884f
  409972:	xor    edx,eax
  409974:	loop   0x4099dd
  409976:	popa   
  409977:	lea    eax,[ebx-0xb5e156e]
  40997d:	adc    ch,BYTE PTR [ecx+0x7a79baf5]
  409983:	inc    esi
  409984:	fdivr  st(6),st
  409986:	mov    esi,0x5f2bcc40
  40998b:	inc    ecx
  40998c:	push   cs
  40998d:	add    al,BYTE PTR [ebp+0x2d]
  409990:	(bad)  
  409991:	mov    al,0xf6
  409993:	push   cs
  409994:	inc    edi
  409995:	fild   DWORD PTR [edx+0x198ecf36]
  40999b:	fdiv   DWORD PTR [esi-0x2f75bd82]
  4099a1:	dec    edx
  4099a2:	lea    eax,[edi+0x328dc23a]
  4099a8:	jae    0x409946
  4099aa:	inc    edx
  4099ab:	xor    DWORD PTR [eax],ebp
  4099ad:	call   0x3f4:0xa15349e3
  4099b4:	call   0xbd77bd0f
  4099b9:	sub    dl,ch
  4099bb:	test   DWORD PTR [ebp+0x2303395],ebx
  4099c1:	and    cl,BYTE PTR [esi+ecx*4+0x5b080627]
  4099c8:	xchg   ebx,eax
  4099c9:	cmc    
  4099ca:	push   eax
  4099cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099cc:	sar    DWORD PTR [edi+0x5a],0x78
  4099d0:	lea    ebp,[edx]
  4099d2:	shl    bl,cl
  4099d4:	jae    0x4099ab
  4099d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099d7:	js     0x4099d9
  4099d9:	adc    DWORD PTR [eax],ebp
  4099db:	push   edi
  4099dc:	inc    ebp
  4099dd:	or     BYTE PTR [ecx+ebp*2+0x19],bl
  4099e1:	into   
  4099e2:	xchg   DWORD PTR [edi],eax
  4099e4:	shl    DWORD PTR [ebp-0x72],cl
  4099e7:	mov    esi,?
  4099e9:	or     al,0x51
  4099eb:	sbb    eax,0xae7e6fb1
  4099f0:	pop    ecx
  4099f1:	xchg   esp,eax
  4099f2:	cmp    BYTE PTR [edi],0xbb
  4099f5:	dec    eax
  4099f6:	stos   BYTE PTR es:[edi],al
  4099f7:	mov    al,0xa2
  4099f9:	mov    ebp,0xd8853416
  4099fe:	xchg   ecx,eax
  4099ff:	xor    DWORD PTR [ecx+0x58],edx
  409a02:	and    al,0x76
  409a04:	cmp    al,0xcd
  409a06:	sbb    edi,DWORD PTR [edi-0x7dd5772e]
  409a0c:	inc    edx
  409a0d:	fwait
  409a0e:	inc    eax
  409a0f:	test   DWORD PTR [esi-0x5f],ecx
  409a12:	jecxz  0x409a24
  409a14:	push   edi
  409a15:	lds    edx,FWORD PTR [esi]
  409a17:	pop    edi
  409a18:	sbb    eax,0x2391a77c
  409a1d:	push   ds
  409a1e:	sbb    BYTE PTR [edx-0x2a7adc5b],ah
  409a24:	loopne 0x409a22
  409a26:	pusha  
  409a27:	and    esp,edi
  409a29:	test   DWORD PTR [ebx],edx
  409a2b:	dec    esi
  409a2c:	and    esp,esp
  409a2e:	(bad)  
  409a2f:	clc    
  409a30:	xor    al,0xb3
  409a32:	mov    esp,DWORD PTR [edi+edi*1]
  409a35:	aad    0xc3
  409a37:	xchg   edx,eax
  409a38:	and    BYTE PTR [ebx],al
  409a3a:	inc    ebp
  409a3b:	pop    ebp
  409a3c:	sub    DWORD PTR [ebp-0x18e9f698],ebx
  409a42:	hlt    
  409a43:	popf   
  409a44:	outs   dx,DWORD PTR ds:[esi]
  409a45:	jns    0x409a4f
  409a47:	mov    ah,0xea
  409a49:	or     BYTE PTR [ebp+0x1313cb48],bh
  409a4f:	aaa    
  409a50:	xchg   esp,eax
  409a51:	cmp    DWORD PTR cs:[ebp+0x7c34ec36],eax
  409a58:	mov    ebp,0xdabe6064
  409a5d:	cmp    BYTE PTR [eax],0xcf
  409a60:	push   ebx
  409a61:	jbe    0xfbfa30d0
  409a67:	out    dx,al
  409a68:	iret   
  409a69:	mov    bl,0xc9
  409a6b:	mov    BYTE PTR [ecx-0x184a3af7],ch
  409a71:	add    BYTE PTR [edx],cl
  409a73:	dec    ecx
  409a74:	inc    edx
  409a75:	xor    DWORD PTR [ebp-0x7174e1e4],esp
  409a7b:	xchg   ecx,eax
  409a7c:	je     0x409a0b
  409a7e:	inc    eax
  409a7f:	sahf   
  409a80:	repnz add eax,0x1115241f
  409a86:	das    
  409a87:	push   edi
  409a88:	push   ebp
  409a89:	adc    ah,BYTE PTR [esi+0x2d4c5957]
  409a8f:	xchg   edi,esi
  409a91:	js     0x409b07
  409a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a94:	pop    esi
  409a95:	sbb    al,0xe6
  409a97:	mov    ebp,0x78d54e5c
  409a9c:	xchg   ecx,eax
  409a9d:	sbb    BYTE PTR [edi-0x7d],dh
  409aa0:	fwait
  409aa1:	add    bl,BYTE PTR [ebx-0x27]
  409aa4:	mov    esp,0x3c459747
  409aa9:	pop    di
  409aab:	inc    edi
  409aac:	xor    DWORD PTR ss:[esi-0xf],ebp
  409ab0:	outs   dx,DWORD PTR ds:[esi]
  409ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab2:	add    BYTE PTR ds:0xda22f2d6,0x47
  409ab9:	jl     0x409a60
  409abb:	pop    ebp
  409abc:	dec    esi
  409abd:	mov    ebx,0xb3eb3eb5
  409ac2:	dec    esp
  409ac3:	(bad)  
  409ac4:	(bad)  
  409ac6:	daa    
  409ac7:	jmp    0x409a68
  409ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aca:	mov    al,0xaf
  409acc:	pop    ss
  409acd:	cmp    dl,dh
  409acf:	das    
  409ad0:	adc    ch,BYTE PTR [ebx+0x7c]
  409ad3:	add    ah,ah
  409ad5:	mov    ecx,0x9bfc4921
  409ada:	xor    edx,ebx
  409adc:	addr16 pop edx
  409ade:	retf   
  409adf:	(bad)  
  409ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ae1:	jp     0x409b53
  409ae3:	cld    
  409ae4:	adc    esi,DWORD PTR [ecx+0x4b]
  409ae7:	push   esi
  409ae8:	or     BYTE PTR [ebp+0x44],0xd0
  409aec:	adc    esi,ecx
  409aee:	cmc    
  409aef:	pop    ebp
  409af0:	clc    
  409af1:	ins    BYTE PTR es:[edi],dx
  409af2:	push   0xffffffbb
  409af4:	push   esi
  409af5:	jmp    0x2e8b:0x55460d55
  409afc:	cmp    BYTE PTR [ecx+ebp*2+0x106ca0f1],bl
  409b03:	xlat   BYTE PTR ds:[ebx]
  409b04:	fimul  WORD PTR [ecx+0x4d]
  409b07:	mov    DWORD PTR [edx],0x9ed19af3
  409b0d:	adc    BYTE PTR [esp+ebx*2+0x6768802d],al
  409b14:	adc    eax,0x2a5bb863
  409b19:	fstp   DWORD PTR [edi-0x2c34e576]
  409b1f:	fdiv   QWORD PTR [edi+0x376daa04]
  409b25:	leave  
  409b26:	mov    esp,0x4bdfac4c
  409b2b:	div    BYTE PTR [ebp-0xf]
  409b2e:	cld    
  409b2f:	inc    esp
  409b30:	das    
  409b31:	inc    edx
  409b32:	test   ah,0xde
  409b35:	dec    ebx
  409b36:	xrelease mov DWORD PTR [edx+0x771f08b3],ebp
  409b3d:	mov    ah,0x82
  409b3f:	and    esp,DWORD PTR [edi+0x604fb4c6]
  409b45:	sbb    eax,0xefaa9d3d
  409b4a:	imul   ecx,DWORD PTR [ebx+0x7262348c],0x17bdc61a
  409b54:	add    BYTE PTR [ecx+0x30],0xf0
  409b58:	repnz (bad) 
  409b5a:	in     al,dx
  409b5b:	call   0x547e6be
  409b60:	xchg   esp,eax
  409b61:	xchg   esp,eax
  409b62:	popa   
  409b63:	clc    
  409b64:	or     DWORD PTR [ecx+0x72],esp
  409b67:	iret   
  409b68:	push   ebp
  409b69:	ja     0x409b9b
  409b6b:	stos   BYTE PTR es:[edi],al
  409b6c:	inc    esi
  409b6d:	push   ss
  409b6e:	in     al,0x30
  409b70:	pusha  
  409b71:	stos   DWORD PTR es:[edi],eax
  409b72:	sbb    eax,0x16858c8d
  409b77:	lods   eax,DWORD PTR ds:[esi]
  409b78:	js     0x409b59
  409b7a:	icebp  
  409b7b:	cmp    eax,0x6d5d2059
  409b80:	clc    
  409b81:	push   ecx
  409b82:	(bad)  
  409b83:	jo     0x409b7b
  409b85:	test   BYTE PTR [eax+0x10a02389],0x2
  409b8c:	dec    edi
  409b8d:	(bad)  
  409b8e:	out    dx,al
  409b8f:	aaa    
  409b90:	frstor [ebx+0x4c6b7ee9]
  409b96:	mov    bl,0x2
  409b98:	mov    BYTE PTR ds:0x797f04b9,bl
  409b9e:	mov    ah,0x9f
  409ba0:	loop   0x409b75
  409ba2:	push   edi
  409ba3:	jmp    0xf487:0xaaaca5d3
  409baa:	inc    esp
  409bab:	outs   dx,DWORD PTR ds:[esi]
  409bac:	std    
  409bad:	add    edi,DWORD PTR [esi]
  409baf:	std    
  409bb0:	push   es
  409bb1:	in     eax,0x4a
  409bb3:	fistp  WORD PTR [ebx]
  409bb5:	mov    ecx,0xfbde1b3
  409bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bbb:	test   DWORD PTR [ebp+0x3b7daa97],ebx
  409bc1:	out    dx,al
  409bc2:	test   edx,eax
  409bc4:	mov    cl,0x53
  409bc6:	lods   eax,DWORD PTR ds:[esi]
  409bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc8:	dec    ecx
  409bc9:	jb     0x409bd1
  409bcb:	push   ds
  409bcc:	popa   
  409bcd:	gs mov ah,bh
  409bd0:	sub    BYTE PTR [ebp+eiz*4+0x68b6dff0],dl
  409bd7:	(bad)  
  409bd8:	xor    ch,BYTE PTR [edi-0x40]
  409bdb:	sub    ebp,eax
  409bdd:	xchg   DWORD PTR [edi],esi
  409bdf:	scas   al,BYTE PTR es:[edi]
  409be0:	shl    ebx,1
  409be2:	jg     0x409bd2
  409be4:	test   al,0xd3
  409be6:	cs loop 0x409c42
  409be9:	mov    al,BYTE PTR [eax]
  409beb:	sti    
  409bec:	mov    bh,0x22
  409bee:	jg     0x409b96
  409bf0:	ds jo  0x409be3
  409bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bf4:	cli    
  409bf5:	dec    esi
  409bf6:	jg     0x409bb4
  409bf8:	imul   BYTE PTR [ecx-0x3a8078ec]
  409bfe:	push   edi
  409bff:	and    al,0xb8
  409c01:	ja     0x409be6
  409c03:	mov    ebx,0xe552e46d
  409c08:	ins    DWORD PTR es:[edi],dx
  409c09:	test   al,0x83
  409c0b:	out    0x3f,al
  409c0d:	imul   esp,DWORD PTR [ebx-0x57],0xfffffff4
  409c11:	lock fxch st(0)
  409c14:	fdiv   QWORD PTR [esi+ebx*2-0x34dbb5b5]
  409c1b:	lea    ecx,[ecx+0x7e37128]
  409c21:	and    DWORD PTR [edi],0x16
  409c24:	xchg   esp,eax
  409c25:	mov    ?,WORD PTR [edi]
  409c27:	lods   eax,DWORD PTR ds:[esi]
  409c28:	outs   dx,BYTE PTR ds:[esi]
  409c29:	xor    dh,BYTE PTR [ebx-0x64]
  409c2c:	push   edx
  409c2d:	iret   
  409c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c2f:	idiv   DWORD PTR [edi+eiz*4+0x1b8290d1]
  409c36:	jo     0x409be4
  409c38:	xchg   esp,eax
  409c39:	js     0x409c13
  409c3b:	push   ebx
  409c3c:	pop    ebx
  409c3d:	mov    ds:0x69c3716c,al
  409c42:	mov    ds:0xecc761,al
  409c47:	xor    edi,DWORD PTR [esi]
  409c49:	mov    WORD PTR [ecx-0x58],gs
  409c4c:	mov    eax,0x7912df6c
  409c51:	iret   
  409c52:	repnz mov dl,0x50
  409c55:	es icebp 
  409c57:	xchg   edx,eax
  409c58:	mov    ch,bl
  409c5a:	out    0xf3,eax
  409c5c:	pop    ebx
  409c5d:	push   esp
  409c5e:	and    al,0x66
  409c60:	jmp    0x409c1e
  409c62:	pop    ebp
  409c63:	jg     0x409cce
  409c65:	or     eax,0xc9b6c6d3
  409c6a:	stc    
  409c6b:	mov    eax,0x75352112
  409c70:	push   ss
  409c71:	push   ebp
  409c72:	and    DWORD PTR [ebx+edi*8-0x27],ecx
  409c76:	mov    ebx,0x2c42699f
  409c7b:	xchg   DWORD PTR [ecx-0x79],edi
  409c7e:	push   esp
  409c7f:	in     eax,0xed
  409c81:	cwde   
  409c82:	mov    bl,0x73
  409c84:	inc    edx
  409c85:	je     0x409c24
  409c87:	cmc    
  409c88:	outs   dx,BYTE PTR ds:[esi]
  409c89:	xchg   edi,eax
  409c8a:	xor    ah,dl
  409c8c:	test   al,0xf9
  409c8e:	jge    0x409c42
  409c90:	fiadd  DWORD PTR [edi]
  409c92:	es dec ebp
  409c94:	int3   
  409c95:	or     eax,0x6a602720
  409c9a:	xchg   DWORD PTR [edi],ebx
  409c9c:	pop    ecx
  409c9d:	mov    cs,WORD PTR [eax+0x3f692eb4]
  409ca3:	mov    al,0x23
  409ca5:	or     BYTE PTR [ecx-0x7c01d8b3],ah
  409cab:	int3   
  409cac:	(bad)  
  409cad:	retf   
  409cae:	cmp    BYTE PTR [ecx-0x5a876381],bh
  409cb4:	retf   
  409cb5:	mov    ds:0xd087eba,al
  409cba:	cwde   
  409cbb:	mov    edi,0xa471fec5
  409cc0:	adc    BYTE PTR [esi+0x59d133bc],bl
  409cc6:	inc    edi
  409cc7:	adc    eax,0x9cd6417c
  409ccc:	sub    DWORD PTR [edi-0x3d],ebp
  409ccf:	inc    edx
  409cd0:	ret    0x9b00
  409cd3:	cdq    
  409cd4:	call   0x2e9442c2
  409cd9:	loop   0x409d55
  409cdb:	lea    ebx,[ecx+0x2f0c9218]
  409ce1:	xor    eax,0x8c83ae4a
  409ce6:	pop    es
  409ce7:	jg     0x409d56
  409ce9:	push   0x15742d92
  409cee:	fisttp DWORD PTR [ecx-0x16]
  409cf1:	clc    
  409cf2:	xor    BYTE PTR [edx+0x177ab898],al
  409cf8:	cmp    ah,0xee
  409cfb:	inc    edx
  409cfc:	push   0xc7f3f5e7
  409d01:	fs push ss
  409d03:	dec    eax
  409d04:	je     0x409d36
  409d06:	dec    edi
  409d07:	fst    DWORD PTR [ecx]
  409d09:	pop    edi
  409d0a:	lods   eax,DWORD PTR ds:[esi]
  409d0b:	out    0x2e,al
  409d0d:	push   cs
  409d0e:	xor    eax,0x3a6fb757
  409d13:	add    al,0xf8
  409d15:	sub    ch,dl
  409d17:	add    al,0x64
  409d19:	int    0x8a
  409d1b:	sub    al,0xf2
  409d1d:	jg     0x409d4f
  409d1f:	mov    eax,ds:0x32f1b9b9
  409d24:	cmp    ecx,DWORD PTR [ecx]
  409d26:	cmp    eax,0x5ddda2de
  409d2b:	xchg   DWORD PTR [edi-0x60],ebx
  409d2e:	inc    esi
  409d2f:	mov    bl,0x67
  409d31:	clc    
  409d32:	leave  
  409d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d34:	dec    edi
  409d35:	sub    dh,BYTE PTR [edi-0x34]
  409d38:	push   eax
  409d39:	mov    esi,0xa8ab297
  409d3e:	inc    esi
  409d3f:	pop    ss
  409d40:	jg     0x409ccc
  409d42:	and    DWORD PTR [esi-0x5f672f82],ebx
  409d48:	inc    esp
  409d49:	iret   
  409d4a:	int3   
  409d4b:	mov    WORD PTR [eax],es
  409d4d:	push   0xffffff9f
  409d4f:	cwde   
  409d50:	ds loopne 0x409d4c
  409d53:	pop    edi
  409d54:	cli    
  409d55:	cmp    DWORD PTR [eax-0x3598a659],edi
  409d5b:	outs   dx,BYTE PTR ds:[esi]
  409d5c:	nop
  409d5d:	pop    dx
  409d5f:	cld    
  409d60:	stc    
  409d61:	not    DWORD PTR [edi+0x2eb68d6]
  409d67:	pop    ecx
  409d68:	push   ecx
  409d69:	je     0x409d04
  409d6b:	mov    fs,WORD PTR [edi+eax*4-0x2e]
  409d6f:	add    ch,bl
  409d71:	les    ebx,FWORD PTR [esi-0x7a0884d0]
  409d77:	shr    BYTE PTR [eax+0x4cc1c307],0x50
  409d7e:	xchg   edi,eax
  409d7f:	lods   al,BYTE PTR ds:[esi]
  409d80:	inc    eax
  409d81:	xor    ecx,DWORD PTR [ecx+eiz*8]
  409d84:	inc    edi
  409d85:	in     al,0x91
  409d87:	push   esp
  409d88:	bound  esi,QWORD PTR [edi+0x2c]
  409d8b:	push   edx
  409d8c:	jns    0x409d96
  409d8e:	pop    ebp
  409d8f:	push   0x4a
  409d91:	and    BYTE PTR [ecx],bl
  409d93:	fcom   QWORD PTR [edi+0x6ecc06c6]
  409d99:	and    eax,0x77a4297d
  409d9e:	psubsw mm3,QWORD PTR [edx+esi*8]
  409da2:	add    eax,0xf335675b
  409da7:	in     eax,dx
  409da8:	mov    ebx,0xd0f9233
  409dad:	sbb    DWORD PTR [ecx-0x66200bd8],ebx
  409db3:	pop    edi
  409db4:	sbb    eax,0xe54614a5
  409db9:	test   DWORD PTR [ebp-0x8],eax
  409dbc:	mov    eax,ds:0x80ebff81
  409dc1:	push   esi
  409dc2:	adc    ah,BYTE PTR [ebx]
  409dc4:	jl     0x409da4
  409dc6:	fimul  DWORD PTR [esi+0x53]
  409dc9:	mov    dh,0x94
  409dcb:	cmp    eax,0x4d45b4ad
  409dd0:	fs leave 
  409dd2:	push   0x937a6aad
  409dd7:	sbb    BYTE PTR [ebp-0x1e],ch
  409dda:	rdmsr  
  409ddc:	loope  0x409d70
  409dde:	jg     0x409dee
  409de0:	loopne 0x409e1e
  409de2:	pop    eax
  409de3:	pop    eax
  409de4:	mov    dl,0x69
  409de6:	dec    esi
  409de7:	add    eax,DWORD PTR [edx-0x157b4df9]
  409ded:	sub    bh,al
  409def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409df0:	mov    al,ds:0xc643e30f
  409df5:	ins    BYTE PTR es:[edi],dx
  409df6:	call   0x8573b61e
  409dfb:	sub    BYTE PTR [edx-0x5ef43be5],al
  409e01:	fbstp  TBYTE PTR [ebx]
  409e03:	cld    
  409e04:	data16 in al,0x98
  409e07:	sar    BYTE PTR [esi-0x3754c66c],0x2a
  409e0e:	mov    edx,0x3e8f9cb3
  409e13:	shl    DWORD PTR [ecx-0x665c627d],1
  409e19:	lods   al,BYTE PTR ds:[esi]
  409e1a:	push   ebp
  409e1b:	sti    
  409e1c:	test   DWORD PTR [eax],0x74fdfbd1
  409e22:	sub    BYTE PTR [edx-0x1caeb969],0x8e
  409e29:	adc    dl,bh
  409e2b:	dec    ebx
  409e2c:	test   al,0xfd
  409e2e:	(bad)  
  409e2f:	in     al,dx
  409e30:	enter  0x8b2,0x32
  409e34:	pushf  
  409e35:	scas   eax,DWORD PTR es:[edi]
  409e36:	mov    eax,0x79eea2a1
  409e3b:	push   ebx
  409e3c:	call   0xe86c:0x616a0944
  409e43:	cmp    al,0x25
  409e46:	mov    edx,ecx
  409e48:	jo     0x409e33
  409e4a:	or     BYTE PTR [ebx+0x5c],ah
  409e4d:	pusha  
  409e4e:	or     edi,edi
  409e50:	test   eax,0xcef80f82
  409e55:	xor    cl,BYTE PTR [esi-0x25]
  409e58:	fimul  WORD PTR [edi-0x4aea94a]
  409e5e:	sub    eax,0xf587a694
  409e63:	ret    0x8271
  409e66:	xor    eax,esi
  409e68:	out    0xd2,al
  409e6a:	test   eax,0xa723a419
  409e6f:	js     0x409eb1
  409e71:	and    bh,ch
  409e73:	or     al,0xe3
  409e75:	mov    ds:0xc3bf26d0,eax
  409e7a:	add    BYTE PTR [edi-0x4f],al
  409e7d:	mov    ch,0x9
  409e7f:	sbb    BYTE PTR ds:0xaf8ab97b,bl
  409e85:	retf   0x2541
  409e88:	je     0x409e5f
  409e8a:	(bad)  
  409e8b:	mov    ds:0x3edb7b9b,al
  409e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e91:	fstp   QWORD PTR [edx-0x28800699]
  409e97:	jmp    0xa5760f10
  409e9c:	push   0xf
  409e9e:	mov    bh,0x67
  409ea0:	xor    bl,BYTE PTR [ebx+0x2e]
  409ea3:	sbb    DWORD PTR [edx-0x1760b7d0],0xe575e623
  409ead:	jp     0x409e5e
  409eaf:	or     al,0x46
  409eb1:	xor    eax,0xbabb2021
  409eb6:	cmp    BYTE PTR [esi],dl
  409eb8:	das    
  409eb9:	leave  
  409eba:	mov    dl,0x49
  409ebc:	aaa    
  409ebd:	sub    al,BYTE PTR ds:0xf2c85995
  409ec3:	cmp    DWORD PTR ds:0x340981df,0xffffffb5
  409eca:	ret    
  409ecb:	scas   eax,DWORD PTR es:[edi]
  409ecc:	mov    bh,0xc8
  409ece:	popf   
  409ecf:	xchg   ebp,eax
  409ed0:	sub    al,0xce
  409ed2:	jmp    0xaa1c:0xce826e7b
  409ed9:	int    0xdd
  409edb:	push   edi
  409edc:	arpl   WORD PTR [eax+0x17f55a88],sp
  409ee2:	pop    esp
  409ee3:	je     0x409eb3
  409ee5:	and    eax,0xc272a8ae
  409eea:	les    edx,FWORD PTR es:[esp+ecx*8]
  409eee:	pusha  
  409eef:	ret    0xa928
  409ef2:	push   ebp
  409ef3:	stos   DWORD PTR es:[edi],eax
  409ef4:	dec    ebp
  409ef5:	dec    edx
  409ef6:	fwait
  409ef7:	mov    edi,0x4530c2d8
  409efc:	jmp    0x734d981e
  409f01:	repz mov edi,esi
  409f04:	mov    edx,0x8d80d850
  409f09:	jge    0x409eeb
  409f0b:	xor    eax,0x6b51a018
  409f10:	xlat   BYTE PTR fs:[ebx]
  409f12:	add    edi,DWORD PTR [esi-0x5f]
  409f15:	dec    esp
  409f16:	int    0x3a
  409f18:	lods   eax,DWORD PTR ds:[esi]
  409f19:	xor    eax,0xe5007737
  409f1e:	pop    esi
  409f1f:	fidivr WORD PTR [eax]
  409f21:	pop    ss
  409f22:	stos   DWORD PTR es:[edi],eax
  409f23:	stos   BYTE PTR es:[edi],al
  409f24:	daa    
  409f25:	adc    ah,BYTE PTR [ebx+0x5f]
  409f28:	ret    0xd4f4
  409f2b:	out    dx,eax
  409f2c:	or     edi,DWORD PTR [ecx]
  409f2e:	mov    cl,BYTE PTR [ecx+0x73]
  409f31:	cwde   
  409f32:	fwait
  409f33:	mov    edx,esi
  409f35:	pmaxsw mm1,QWORD PTR [ebp+ebp*8-0x71]
  409f3a:	fsub   QWORD PTR [ebp-0x6e]
  409f3d:	xchg   edi,eax
  409f3e:	nop
  409f3f:	cld    
  409f40:	fcomi  st,st(4)
  409f42:	dec    edx
  409f43:	lea    edi,[edx]
  409f45:	add    eax,DWORD PTR [edx+0x33fe536d]
  409f4b:	push   edx
  409f4c:	imul   DWORD PTR [edx]
  409f4e:	dec    ebx
  409f4f:	or     DWORD PTR [ebx-0x7e],edi
  409f52:	dec    ebx
  409f53:	or     al,dl
  409f55:	outs   dx,DWORD PTR ds:[esi]
  409f56:	mov    dh,0x19
  409f58:	les    edi,FWORD PTR [eax-0x32082c45]
  409f5e:	popf   
  409f5f:	fcomp  DWORD PTR [edx]
  409f61:	push   ds
  409f62:	nop
  409f63:	and    DWORD PTR [ebp-0x10],ebp
  409f66:	adc    DWORD PTR [esp+ecx*8],ecx
  409f69:	mov    al,0xcf
  409f6b:	call   0xfa72:0x720a1400
  409f72:	mov    WORD PTR [ebx-0x608d20b9],gs
  409f78:	add    ecx,DWORD PTR [ecx+ebp*2]
  409f7b:	aaa    
  409f7c:	mov    ds:0xe63784f2,al
  409f81:	in     al,dx
  409f82:	(bad)  
  409f83:	(bad)  
  409f84:	bound  esi,QWORD PTR ds:0xd66fdfb
  409f8a:	and    cl,dl
  409f8c:	sub    al,0xe4
  409f8e:	pop    ebp
  409f8f:	jecxz  0x409fb5
  409f91:	loopne 0x409f23
  409f93:	jmp    0x409ff5
  409f95:	and    dl,dh
  409f97:	push   ss
  409f98:	je     0x40a00b
  409f9a:	fdivr  DWORD PTR [ecx-0x6612d0b8]
  409fa0:	and    eax,0xc4be3660
  409fa5:	loopne 0x409f64
  409fa7:	mov    al,ds:0x2d0c604f
  409fac:	mov    dh,0x66
  409fae:	xor    dh,dh
  409fb0:	(bad)  
  409fb1:	fstp   DWORD PTR [esi]
  409fb3:	mov    dh,0x3a
  409fb5:	push   ebx
  409fb6:	test   DWORD PTR [eax+0x593c7208],0x57a81419
  409fc0:	xchg   BYTE PTR [edx+0x36a876ed],bl
  409fc6:	pop    esi
  409fc7:	loope  0x409f81
  409fc9:	adc    DWORD PTR [ebx],0x2e
  409fcc:	sahf   
  409fcd:	aas    
  409fce:	aas    
  409fcf:	mov    ah,0xcf
  409fd1:	hlt    
  409fd2:	and    eax,0x97be32cf
  409fd7:	mov    esi,DWORD PTR [eax+ecx*8]
  409fda:	fs in  eax,0x53
  409fdd:	imul   esi,DWORD PTR [edi+0x4d6ba8a7],0x7205fec9
  409fe7:	pop    edi
  409fe8:	cdq    
  409fe9:	mov    ?,esp
  409feb:	inc    edx
  409fec:	sbb    cl,BYTE PTR [edi-0x25000f5a]
  409ff2:	mov    dl,0xfb
  409ff4:	cmp    dh,BYTE PTR [esi-0x276e2119]
  409ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ffb:	xor    dl,BYTE PTR [ecx]
  409ffd:	sahf   
  409ffe:	push   ecx
  409fff:	jl     0x409f95
  40a001:	es ins BYTE PTR es:[edi],dx
  40a003:	xchg   DWORD PTR [ecx-0x3],ebx
  40a006:	mov    esp,0x1080a8bd
  40a00b:	ret    
  40a00c:	out    dx,al
  40a00d:	ret    
  40a00e:	jae    0x40a03d
  40a010:	bound  edx,QWORD PTR [ebp-0x36]
  40a013:	retf   
  40a014:	int3   
  40a015:	pop    ecx
  40a016:	int    0x9f
  40a018:	xor    DWORD PTR [ebp-0x7094b402],esp
  40a01e:	pop    es
  40a01f:	and    esp,DWORD PTR [esi]
  40a021:	(bad)  
  40a022:	pushf  
  40a023:	sahf   
  40a024:	jecxz  0x40a080
  40a026:	jnp    0x40a077
  40a028:	cmp    esi,ebx
  40a02a:	jbe    0x409fff
  40a02c:	in     eax,dx
  40a02d:	jge    0x409ff9
  40a02f:	aaa    
  40a030:	push   esi
  40a031:	lock fld QWORD PTR [ecx+0x7a]
  40a035:	and    esp,ebx
  40a037:	cmp    esp,DWORD PTR [ebx+0x2a]
  40a03a:	cdq    
  40a03b:	or     al,0x90
  40a03d:	enter  0x3ea5,0xe1
  40a041:	outs   dx,DWORD PTR ds:[esi]
  40a042:	add    BYTE PTR [edi],al
  40a044:	(bad)  
  40a045:	dec    esi
  40a046:	xchg   ebp,eax
  40a047:	push   esi
  40a048:	mov    BYTE PTR [esi+0x37],bl
  40a04b:	cmp    al,0xdd
  40a04d:	fistp  DWORD PTR [eax+0x68]
  40a050:	cs push ss
  40a052:	out    dx,eax
  40a053:	inc    edx
  40a054:	out    dx,al
  40a055:	outs   dx,BYTE PTR ds:[esi]
  40a056:	inc    esp
  40a057:	cmp    al,0x19
  40a059:	in     eax,dx
  40a05a:	test   eax,0x579dd354
  40a05f:	sbb    eax,0x24f01d05
  40a064:	mov    bl,0xcd
  40a066:	add    BYTE PTR [esi],bl
  40a068:	stos   BYTE PTR es:[edi],al
  40a069:	pop    esi
  40a06a:	jno    0x40a075
  40a06c:	push   eax
  40a06d:	sahf   
  40a06e:	xchg   ebx,eax
  40a06f:	or     DWORD PTR [esi-0x20dc2895],esp
  40a075:	stos   DWORD PTR es:[edi],eax
  40a076:	inc    edx
  40a077:	adc    BYTE PTR [ecx-0x491eb231],dl
  40a07d:	jg     0x40a0bb
  40a07f:	mov    ds:0x543050af,eax
  40a084:	dec    esp
  40a085:	retf   
  40a086:	cmc    
  40a087:	pop    ss
  40a088:	dec    ebp
  40a089:	das    
  40a08a:	lock (bad) 
  40a08c:	inc    esp
  40a08d:	pop    esi
  40a08e:	out    0xe9,eax
  40a090:	and    BYTE PTR [ebp-0x292f77a9],dl
  40a096:	jmp    0x40a045
  40a098:	aaa    
  40a099:	mov    BYTE PTR [ebx],ch
  40a09b:	outs   dx,DWORD PTR ds:[esi]
  40a09c:	scas   eax,DWORD PTR es:[edi]
  40a09d:	test   BYTE PTR [edx],bl
  40a09f:	mov    esi,0x54b67c0b
  40a0a4:	lock lods eax,DWORD PTR ds:[esi]
  40a0a6:	add    eax,DWORD PTR [eax+ebp*1-0x5d994cc3]
  40a0ad:	(bad)  
  40a0ae:	xchg   edi,eax
  40a0af:	pop    esi
  40a0b0:	or     ebp,DWORD PTR [edx+esi*4]
  40a0b3:	push   ebp
  40a0b4:	add    edx,eax
  40a0b6:	cwde   
  40a0b7:	push   es
  40a0b8:	cmp    eax,0xae32a47c
  40a0bd:	sbb    al,BYTE PTR [ebp+0x54]
  40a0c0:	shl    DWORD PTR [edx],0x58
  40a0c3:	(bad)  
  40a0c4:	sti    
  40a0c5:	cmp    dl,cl
  40a0c7:	imul   ebx,DWORD PTR [edi+0x1fbef502],0x356e0506
  40a0d1:	xchg   esp,eax
  40a0d2:	dec    ebx
  40a0d3:	mul    DWORD PTR [esi-0x51]
  40a0d6:	imul   ecx,edx,0xffffff8a
  40a0d9:	bnd jno 0x40a0e4
  40a0dc:	add    dh,BYTE PTR [ebx-0x17]
  40a0df:	out    0x43,al
  40a0e1:	xchg   BYTE PTR [ebx],bh
  40a0e3:	dec    esi
  40a0e4:	mov    ebx,0x5032ac70
  40a0e9:	push   ss
  40a0ea:	test   bh,al
  40a0ec:	xor    BYTE PTR [ecx+0x897a64b],al
  40a0f2:	sbb    DWORD PTR [ecx-0x413b9883],esp
  40a0f8:	outs   dx,BYTE PTR ds:[esi]
  40a0f9:	(bad)  
  40a0fa:	pop    ecx
  40a0fb:	aas    
  40a0fc:	hlt    
  40a0fd:	loop   0x40a10b
  40a0ff:	xor    DWORD PTR [edi-0x2d01c5d3],esi
  40a105:	inc    esp
  40a106:	dec    esi
  40a107:	inc    ebp
  40a108:	jl     0x40a090
  40a10a:	call   0x26af:0xfa906e5d
  40a111:	and    al,BYTE PTR [eax]
  40a113:	and    BYTE PTR [edi],dh
  40a115:	jge    0x40a116
  40a117:	dec    edx
  40a118:	aas    
  40a119:	cmp    dl,dl
  40a11b:	ret    
  40a11c:	fmul   QWORD PTR [ecx-0x5800eecb]
  40a122:	xchg   ebx,eax
  40a123:	pop    ebp
  40a124:	ja     0x40a148
  40a126:	mov    eax,0xdcf56544
  40a12b:	pop    ebp
  40a12c:	cld    
  40a12d:	out    0x4,al
  40a12f:	out    0x2,al
  40a131:	leave  
  40a132:	cli    
  40a133:	adc    DWORD PTR [ebp+0xa32f219],ebx
  40a139:	add    al,0x5e
  40a13b:	pop    ss
  40a13c:	cmc    
  40a13d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a13e:	lds    ecx,FWORD PTR [eax]
  40a140:	jb     0x40a0f9
  40a142:	mov    dl,0xf
  40a144:	call   DWORD PTR [eax]
  40a146:	js     0x40a157
  40a148:	loope  0x40a0ed
  40a14a:	pop    edx
  40a14b:	retf   0x21cc
  40a14e:	sub    ch,dl
  40a150:	lea    ebx,[ebp-0x64626e5d]
  40a156:	fisub  WORD PTR [esi+edi*2]
  40a159:	cld    
  40a15a:	les    ebx,FWORD PTR [ecx]
  40a15c:	loop   0x40a192
  40a15e:	push   edx
  40a15f:	pop    edi
  40a160:	push   edi
  40a161:	dec    ecx
  40a162:	(bad)  
  40a163:	mov    dl,BYTE PTR [eax-0xaf221b5]
  40a169:	sahf   
  40a16a:	inc    ebp
  40a16b:	test   DWORD PTR [edi+0x4f],0x549887e
  40a172:	cmc    
  40a173:	xor    esi,DWORD PTR [ecx+ebp*8]
  40a176:	add    DWORD PTR [ebx+edi*1],0xc479c3c9
  40a17d:	pop    eax
  40a17e:	hlt    
  40a17f:	inc    edx
  40a180:	mov    ecx,0x56ebb763
  40a185:	inc    esp
  40a186:	fs aaa 
  40a188:	or     BYTE PTR [esi-0x20],bh
  40a18b:	add    esp,DWORD PTR [esi-0x9c2fc69]
  40a191:	sbb    al,BYTE PTR ds:0xcb0386b9
  40a197:	inc    edx
  40a198:	lods   eax,DWORD PTR ds:[esi]
  40a199:	and    BYTE PTR [ebx-0x2c45ce51],ch
  40a19f:	(bad)  
  40a1a0:	call   0xc246f73a
  40a1a5:	and    eax,0xf03be4a
  40a1aa:	mov    cl,0xda
  40a1ac:	bound  eax,QWORD PTR [edx+0x5]
  40a1af:	pop    eax
  40a1b0:	jae    0x40a17c
  40a1b2:	test   eax,0xbca3ffd7
  40a1b7:	test   edi,esi
  40a1b9:	push   es
  40a1ba:	in     al,0x70
  40a1bc:	test   ebp,eax
  40a1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1bf:	push   esp
  40a1c0:	retf   
  40a1c1:	pop    ebx
  40a1c2:	dec    ecx
  40a1c3:	cwde   
  40a1c4:	fsub   DWORD PTR [eax-0xa]
  40a1c7:	pop    ss
  40a1c8:	aad    0xff
  40a1ca:	add    BYTE PTR [ebx+eax*8],bl
  40a1cd:	jmp    0x484d:0x40b0bdab
  40a1d4:	(bad)  
  40a1d5:	int    0x11
  40a1d7:	inc    ebp
  40a1d8:	jp     0x40a259
  40a1da:	mov    dl,0xf2
  40a1dc:	dec    edi
  40a1dd:	fdiv   QWORD PTR [ecx+0x1f9816d]
  40a1e3:	inc    ebp
  40a1e4:	jmp    0x8ce1:0x79957a6a
  40a1eb:	je     0x40a1e2
  40a1ed:	es (bad) 
  40a1f0:	xlat   BYTE PTR ds:[ebx]
  40a1f1:	retf   
  40a1f2:	iret   
  40a1f3:	cmp    al,0xa9
  40a1f5:	rol    BYTE PTR [eax-0x21],cl
  40a1f8:	loop   0x40a1c9
  40a1fa:	xchg   DWORD PTR [edx-0x1a],ecx
  40a1fd:	and    al,0x31
  40a1ff:	inc    ebx
  40a200:	cs in  al,dx
  40a202:	dec    ebp
  40a203:	clc    
  40a204:	add    BYTE PTR [eax+eiz*2],bh
  40a207:	ja     0x40a23f
  40a209:	out    dx,eax
  40a20a:	sti    
  40a20b:	push   ebx
  40a20c:	bound  esp,QWORD PTR [esi+0x46]
  40a20f:	push   ds
  40a210:	popf   
  40a211:	push   ebp
  40a212:	mov    esp,0xdd20fcd5
  40a217:	mov    ebp,0x3e0e3461
  40a21c:	dec    edi
  40a21d:	xlat   BYTE PTR ds:[ebx]
  40a21e:	cli    
  40a21f:	pop    ebp
  40a220:	adc    ebp,DWORD PTR [edx]
  40a222:	mov    dl,0x8f
  40a224:	lds    edx,FWORD PTR [edi+0x41]
  40a227:	mov    esi,0xea6832f0
  40a22c:	push   esp
  40a22d:	loope  0x40a23c
  40a22f:	dec    esp
  40a230:	mov    bh,0x83
  40a232:	xchg   edx,eax
  40a233:	sti    
  40a234:	sbb    al,0xc6
  40a236:	mov    cl,BYTE PTR [eax+0x1f]
  40a239:	mov    al,dh
  40a23b:	loope  0x40a275
  40a23d:	jp     0x40a2bc
  40a23f:	arpl   WORD PTR [edx],ax
  40a241:	dec    edx
  40a242:	popf   
  40a243:	or     al,0x65
  40a245:	cmc    
  40a246:	clc    
  40a247:	sbb    al,0xa2
  40a249:	jg     0x40a228
  40a24b:	ds mov dh,0x20
  40a24e:	out    0xed,eax
  40a250:	sbb    al,0xf7
  40a252:	adc    al,0xef
  40a254:	callw  0x5918
  40a258:	(bad)  
  40a259:	cld    
  40a25a:	(bad)  
  40a25b:	jne    0x40a27e
  40a25d:	jnp    0x40a256
  40a25f:	sbb    al,0x6b
  40a261:	jecxz  0x40a262
  40a263:	sub    BYTE PTR [ebp-0x202f2d71],bl
  40a269:	stos   DWORD PTR es:[edi],eax
  40a26a:	sahf   
  40a26b:	fstp   DWORD PTR [edx-0xcfbede]
  40a271:	jecxz  0x40a2ee
  40a273:	stc    
  40a274:	mov    eax,ds:0xf8e06d52
  40a279:	nop
  40a27a:	add    al,0xd
  40a27c:	call   0xa541:0x57109c17
  40a283:	fsub   st(6),st
  40a285:	cmp    ebx,DWORD PTR [ebx+esi*8+0x151fb100]
  40a28c:	fnstenv [edi+0x28139049]
  40a292:	inc    ecx
  40a293:	push   esp
  40a294:	push   ss
  40a295:	aad    0x85
  40a297:	retf   
  40a298:	outs   dx,DWORD PTR ds:[esi]
  40a299:	mov    edi,0x4686b954
  40a29e:	aam    0x28
  40a2a0:	sbb    al,dl
  40a2a2:	sahf   
  40a2a3:	jecxz  0x40a237
  40a2a5:	aaa    
  40a2a6:	push   esp
  40a2a7:	add    BYTE PTR [edi+0x29],0xd8
  40a2ab:	pop    ecx
  40a2ac:	(bad)
  40a2af:	int    0xdb
  40a2b1:	pop    ebx
  40a2b2:	ficom  DWORD PTR [ebx]
  40a2b4:	pop    esi
  40a2b5:	mov    ecx,0x4c70744c
  40a2ba:	iret   
  40a2bb:	repnz pop es
  40a2bd:	inc    ebx
  40a2be:	and    al,0x44
  40a2c0:	jmp    0x94cb1a79
  40a2c5:	inc    ebp
  40a2c6:	les    eax,FWORD PTR [esi+ebp*4]
  40a2c9:	or     al,0x4
  40a2cb:	outs   dx,DWORD PTR ds:[esi]
  40a2cc:	jo     0x40a281
  40a2ce:	jp     0x40a2a1
  40a2d0:	jns    0x40a33f
  40a2d2:	into   
  40a2d3:	hlt    
  40a2d4:	add    esi,ebp
  40a2d6:	xor    BYTE PTR [esi-0x32],ch
  40a2d9:	mov    DWORD PTR [ebx+edi*8-0x5],ecx
  40a2dd:	push   ecx
  40a2de:	sbb    eax,DWORD PTR [edi-0x368e8c33]
  40a2e4:	aad    0x16
  40a2e6:	rol    dl,0xc4
  40a2e9:	mov    BYTE PTR [bx+di+0x9],cl
  40a2ed:	ja     0x40a314
  40a2ef:	ret    0x4752
  40a2f2:	push   esp
  40a2f3:	push   ebp
  40a2f4:	int3   
  40a2f5:	mov    edx,0x56fda036
  40a2fa:	mov    ecx,0x98c2386f
  40a2ff:	mov    ?,ecx
  40a301:	mov    eax,0xbc89e96d
  40a306:	cld    
  40a307:	sbb    DWORD PTR [edi+0x2dfeb5fb],edi
  40a30d:	pop    es
  40a30e:	outs   dx,BYTE PTR ds:[esi]
  40a30f:	add    cl,dh
  40a311:	mov    esp,0x67566fc6
  40a316:	jmp    DWORD PTR [ecx]
  40a318:	loop   0x40a376
  40a31a:	add    al,0xba
  40a31c:	loope  0x40a323
  40a31e:	mov    edx,DWORD PTR [edx+edi*2+0x8]
  40a322:	push   edx
  40a323:	enter  0x4875,0xd2
  40a327:	pop    ds
  40a328:	xchg   esi,eax
  40a329:	pop    edi
  40a32a:	iret   
  40a32b:	sbb    eax,esi
  40a32d:	jle    0x40a32c
  40a32f:	cld    
  40a330:	push   ebp
  40a331:	pop    ebx
  40a332:	fild   QWORD PTR ds:0x15b8f7b0
  40a338:	jno    0x40a32a
  40a33a:	or     dh,dh
  40a33c:	xchg   ebx,eax
  40a33d:	mov    bl,0x71
  40a33f:	adc    al,0x77
  40a341:	out    0xeb,eax
  40a343:	push   eax
  40a344:	data16 xlat BYTE PTR ds:[ebx]
  40a346:	test   ebx,ecx
  40a348:	out    0x3c,eax
  40a34a:	or     BYTE PTR [ebx-0x45493ce2],cl
  40a350:	outs   dx,BYTE PTR ds:[esi]
  40a351:	aam    0x79
  40a353:	cdq    
  40a354:	dec    esp
  40a355:	popf   
  40a356:	adc    ebp,ebp
  40a358:	jle    0x40a395
  40a35a:	rcr    DWORD PTR [ebp-0xb],0x1e
  40a35e:	or     ebp,DWORD PTR [ebx-0x8]
  40a361:	adc    DWORD PTR [eax],ecx
  40a363:	adc    ecx,edi
  40a365:	enter  0x9919,0x1f
  40a369:	push   0xbcefc649
  40a36e:	or     edi,esi
  40a370:	adc    DWORD PTR [edx],0x8615799c
  40a376:	push   0x84c0bc9b
  40a37b:	dec    eax
  40a37c:	push   0x8c7d1b5a
  40a381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a382:	mov    ah,0xa9
  40a384:	test   eax,0x8f5e3753
  40a389:	cmc    
  40a38a:	and    DWORD PTR [eax],ebp
  40a38c:	repz inc eax
  40a38e:	push   ebp
  40a38f:	push   ebx
  40a390:	push   ecx
  40a391:	mov    esp,0x661d2f
  40a396:	(bad)  
  40a398:	fiadd  WORD PTR [ecx+0x4cb6ff6d]
  40a39e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a39f:	mov    dh,0xcd
  40a3a1:	adc    al,0x3f
  40a3a3:	mov    bl,0xc7
  40a3a5:	mov    ecx,0x35cd8525
  40a3aa:	sub    DWORD PTR [ecx+0x73],0x36
  40a3ae:	addr16 xchg ebp,eax
  40a3b0:	lds    eax,FWORD PTR [esi]
  40a3b2:	push   eax
  40a3b3:	jne    0x40a3f6
  40a3b5:	sbb    ah,bh
  40a3b7:	jmp    0xb5b9:0xf6b808cf
  40a3be:	sahf   
  40a3bf:	popf   
  40a3c0:	call   DWORD PTR [eax-0x72]
  40a3c3:	jge    0x40a40c
  40a3c5:	xchg   esp,eax
  40a3c6:	xchg   ebp,eax
  40a3c7:	push   0xc5aca183
  40a3cc:	mov    sp,0x57a4
  40a3d0:	push   ss
  40a3d1:	mul    edi
  40a3d3:	ret    
  40a3d4:	sub    cl,al
  40a3d6:	test   eax,esi
  40a3d8:	or     DWORD PTR [ebx],edi
  40a3da:	mov    bh,0x14
  40a3dc:	jb     0x40a3fd
  40a3de:	or     ah,al
  40a3e0:	daa    
  40a3e1:	add    BYTE PTR [edx+0x9],bh
  40a3e4:	or     al,0x89
  40a3e6:	out    0xe3,al
  40a3e8:	dec    ecx
  40a3e9:	aas    
  40a3ea:	xor    ch,BYTE PTR [edx]
  40a3ec:	idiv   DWORD PTR [esp+eax*4-0x35]
  40a3f0:	mov    ds:0x7ad0eeb2,al
  40a3f5:	pop    ebx
  40a3f6:	sub    DWORD PTR [edi],ebp
  40a3f8:	test   al,0x34
  40a3fa:	scas   eax,DWORD PTR es:[edi]
  40a3fb:	scas   al,BYTE PTR es:[edi]
  40a3fc:	xchg   ebx,eax
  40a3fd:	pusha  
  40a3fe:	ins    DWORD PTR es:[edi],dx
  40a3ff:	push   eax
  40a400:	pushf  
  40a401:	pop    es
  40a402:	(bad)
  40a405:	xor    DWORD PTR ds:0x5c7ec826,0xe111a6b5
  40a40f:	loop   0x40a39a
  40a411:	vpshlb ymm9,xmm0,[eax+0x23a56118]
  40a41a:	dec    ebx
  40a41b:	push   esi
  40a41c:	lods   al,BYTE PTR ds:[esi]
  40a41d:	mov    eax,0x218520ec
  40a422:	xlat   BYTE PTR ds:[ebx]
  40a423:	repnz lock mov ah,0xef
  40a427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a428:	es pextrw ebx,(bad),0xc5
  40a42b:	call   0x9bb3:0x200c9fb3
  40a432:	pop    ecx
  40a433:	pop    ebx
  40a434:	add    BYTE PTR [esi-0x2b],ah
  40a437:	and    eax,0x25c2426d
  40a43c:	cmp    bl,BYTE PTR [ecx+0x35]
  40a43f:	push   ss
  40a440:	rol    DWORD PTR [edi],0xa3
  40a443:	inc    edx
  40a444:	pop    edx
  40a445:	sub    BYTE PTR [esi+0x3],dl
  40a448:	xor    DWORD PTR es:[ebx],esi
  40a44b:	sub    edi,DWORD PTR [eax+0xe780bc5]
  40a451:	pop    edx
  40a452:	xchg   esi,eax
  40a453:	sub    edx,0xf538e4a3
  40a459:	mov    DWORD PTR [ecx-0x3c334823],esp
  40a45f:	shl    BYTE PTR [ecx+eiz*2+0x16],1
  40a463:	and    ch,BYTE PTR [edi-0x27]
  40a466:	ja     0x40a43f
  40a468:	cmp    bh,BYTE PTR [ecx+ecx*1+0x4e]
  40a46c:	mov    cl,0x5b
  40a46e:	rcl    cl,1
  40a470:	gs jb  0x40a442
  40a473:	dec    eax
  40a474:	mov    dl,0x26
  40a476:	(bad)  
  40a477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a478:	sbb    dl,al
  40a47a:	shl    dl,0x6
  40a47d:	xchg   edi,eax
  40a47e:	sub    BYTE PTR [esi-0xd],0xcd
  40a482:	mov    cl,0xbf
  40a484:	(bad)  
  40a485:	pop    eax
  40a486:	repnz xlat BYTE PTR ds:[ebx]
  40a488:	(bad)  
  40a489:	loope  0x40a49f
  40a48b:	push   edx
  40a48c:	in     eax,dx
  40a48d:	int3   
  40a48e:	sbb    eax,0x3e5f3674
  40a493:	(bad)  
  40a494:	cmc    
  40a495:	push   ecx
  40a496:	ret    
  40a497:	mov    cl,0x19
  40a499:	push   ss
  40a49a:	xlat   BYTE PTR ds:[ebx]
  40a49b:	std    
  40a49c:	and    esi,eax
  40a49e:	xlat   BYTE PTR ds:[ebx]
  40a49f:	mov    eax,ds:0x56ed973
  40a4a4:	imul   esp,DWORD PTR [edx+0x69],0x5d
  40a4a8:	shr    BYTE PTR [eax+0x49],0xd
  40a4ac:	popa   
  40a4ad:	add    BYTE PTR [edi-0x2ec5badb],0x16
  40a4b4:	add    esp,DWORD PTR [ebp+0x2c]
  40a4b7:	jecxz  0x40a4d9
  40a4b9:	dec    ebp
  40a4ba:	cdq    
  40a4bb:	and    DWORD PTR [eax+0x1f327364],eax
  40a4c1:	cld    
  40a4c2:	dec    ecx
  40a4c3:	inc    ecx
  40a4c4:	stos   BYTE PTR es:[edi],al
  40a4c5:	or     eax,0xc7f47f45
  40a4ca:	push   es
  40a4cb:	arpl   WORD PTR [edx+ecx*2+0x6616fb98],si
  40a4d2:	jmp    0x468ac2e6
  40a4d7:	xchg   edx,eax
  40a4d8:	cmp    bh,BYTE PTR [edi]
  40a4da:	fnstsw WORD PTR [ebx-0x79]
  40a4dd:	push   ebp
  40a4de:	(bad)  
  40a4df:	(bad)  [esi-0x2a]
  40a4e2:	and    BYTE PTR [eax+0x41],cl
  40a4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4e6:	lahf   
  40a4e7:	xchg   esi,eax
  40a4e8:	mov    cl,bh
  40a4ea:	(bad)  
  40a4eb:	(bad)  
  40a4ed:	neg    DWORD PTR [edi+0x3a]
  40a4f0:	jns    0x40a47a
  40a4f2:	mov    esi,0x726eceab
  40a4f7:	jne    0x40a51a
  40a4f9:	les    esp,FWORD PTR [ebx+0x2066a17a]
  40a4ff:	cmp    ch,bl
  40a501:	(bad)  
  40a502:	mov    esi,0x921944db
  40a507:	pop    ss
  40a508:	lds    edi,FWORD PTR [ecx+ebx*2]
  40a50b:	xor    DWORD PTR [ebx-0x8929776],ebp
  40a511:	pop    ecx
  40a512:	mov    eax,0xf77c15c9
  40a517:	xor    eax,0x5857dfcc
  40a51c:	mov    ds:0x5fc071cc,eax
  40a521:	mov    dl,0x74
  40a523:	fs push ecx
  40a525:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40a527:	jb     0x40a535
  40a529:	cmp    cl,bl
  40a52b:	cdq    
  40a52c:	push   esi
  40a52d:	mov    esi,0x132f255d
  40a532:	dec    ebx
  40a533:	inc    esp
  40a534:	loopne 0x40a4d4
  40a536:	xchg   ecx,eax
  40a537:	ror    BYTE PTR [edx-0x21],0xc3
  40a53b:	imul   BYTE PTR [edx-0x6e]
  40a53e:	push   cs
  40a53f:	cld    
  40a540:	fdiv   QWORD PTR [esi+0x40bcfd79]
  40a546:	cs inc edx
  40a548:	xchg   edi,eax
  40a549:	pop    ebx
  40a54a:	add    ecx,DWORD PTR [esi-0xb3f878a]
  40a550:	xor    edx,DWORD PTR [eax-0x2616bb66]
  40a556:	f2xm1  
  40a558:	adc    DWORD PTR [eax-0x34],edx
  40a55b:	cmp    DWORD PTR [eax+ebx*8+0x5aff61b1],edx
  40a562:	push   es
  40a563:	jp     0x40a4fd
  40a565:	sbb    DWORD PTR [edi-0x6b64573d],esp
  40a56b:	jmp    0xaaae:0xeb3c7f16
  40a572:	in     eax,dx
  40a573:	jge    0x40a531
  40a575:	or     eax,0x6915a48c
  40a57a:	mov    ebx,0x16824029
  40a57f:	pop    ss
  40a580:	jbe    0x40a58d
  40a582:	in     eax,0xa
  40a584:	pop    ds
  40a585:	pusha  
  40a586:	sar    BYTE PTR [edi],cl
  40a588:	adc    eax,0x766e9c90
  40a58d:	pop    ebp
  40a58e:	sbb    al,0x61
  40a590:	xchg   ecx,eax
  40a591:	popf   
  40a592:	int3   
  40a593:	jae    0x40a53a
  40a595:	test   esp,ebp
  40a597:	mov    ecx,0xd126b1ea
  40a59c:	mov    esi,0xfbcf8210
  40a5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5a2:	push   eax
  40a5a3:	out    0x7f,al
  40a5a5:	add    ebp,DWORD PTR [edx+0x6953a668]
  40a5ab:	pusha  
  40a5ac:	nop
  40a5ad:	call   0xc32f07ed
  40a5b2:	pop    ss
  40a5b3:	mul    DWORD PTR [ebx+edx*2+0x570629e8]
  40a5ba:	dec    ebp
  40a5bb:	test   eax,0x61907482
  40a5c0:	pop    ecx
  40a5c1:	fild   DWORD PTR [ebx]
  40a5c3:	push   ebx
  40a5c4:	pusha  
  40a5c5:	nop
  40a5c6:	std    
  40a5c7:	and    dh,cl
  40a5c9:	xchg   ebp,eax
  40a5ca:	clc    
  40a5cb:	cs inc eax
  40a5cd:	pop    edx
  40a5ce:	icebp  
  40a5cf:	fldcw  WORD PTR [ecx+0x767524a]
  40a5d5:	mov    cl,0xd8
  40a5d7:	xchg   esi,eax
  40a5d8:	cmp    esi,DWORD PTR [edi]
  40a5da:	gs js  0x40a56c
  40a5dd:	pop    eax
  40a5de:	mov    eax,DWORD PTR [edi+0x68]
  40a5e1:	xchg   esp,eax
  40a5e2:	dec    edi
  40a5e3:	and    BYTE PTR ds:0xf3246fd3,ch
  40a5e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5ea:	inc    ecx
  40a5eb:	mov    eax,ds:0x4c558e6e
  40a5f0:	dec    ecx
  40a5f1:	inc    eax
  40a5f2:	mov    al,ds:0xd2f35670
  40a5f7:	xor    al,0x58
  40a5f9:	daa    
  40a5fa:	pop    es
  40a5fb:	outs   dx,BYTE PTR ds:[esi]
  40a5fc:	or     DWORD PTR [edx],ebp
  40a5fe:	jmp    0x9442f10b
  40a603:	das    
  40a604:	int3   
  40a605:	jl     0x40a5f5
  40a607:	in     al,dx
  40a608:	mov    ch,0x9a
  40a60a:	push   es
  40a60b:	and    DWORD PTR [ebx],edx
  40a60d:	xor    ebp,esi
  40a60f:	xor    dl,BYTE PTR [ecx-0x53]
  40a612:	sti    
  40a613:	jmp    0x40a5a5
  40a615:	sti    
  40a616:	mov    DWORD PTR [ebp-0x1f104eac],esp
  40a61c:	in     eax,dx
  40a61d:	bound  ebp,QWORD PTR [esi-0x7f]
  40a620:	shr    DWORD PTR [edx-0x79],0xfc
  40a624:	ds ja  0x40a61f
  40a627:	nop
  40a628:	adc    ecx,ecx
  40a62a:	dec    esi
  40a62b:	xchg   esp,eax
  40a62c:	jp     0x40a624
  40a62e:	or     edi,ebp
  40a630:	xchg   edi,eax
  40a631:	sbb    eax,0x8ea25c70
  40a636:	jmp    0x40a601
  40a638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a639:	push   ebp
  40a63a:	ror    BYTE PTR [eax+0xf],cl
  40a63d:	push   ds
  40a63e:	mov    edi,0xf83a421c
  40a643:	lods   eax,DWORD PTR ds:[esi]
  40a644:	xor    esi,DWORD PTR [eax+0x62a96f0]
  40a64a:	mul    ebx
  40a64c:	pop    esi
  40a64d:	inc    esp
  40a64e:	and    BYTE PTR [si],al
  40a651:	js     0x40a683
  40a653:	pop    edi
  40a654:	xchg   ebx,eax
  40a655:	pushf  
  40a656:	cmp    al,0x7d
  40a658:	fstp   QWORD PTR [ecx]
  40a65a:	jbe    0x40a6ac
  40a65c:	push   ecx
  40a65d:	das    
  40a65e:	jl     0x40a676
  40a660:	daa    
  40a661:	mul    BYTE PTR [ebx+0x3b]
  40a664:	jmp    FWORD PTR [ecx+edx*2-0x78]
  40a668:	int3   
  40a669:	adc    al,dl
  40a66b:	add    al,0xe7
  40a66d:	mov    WORD PTR [ebp-0x2c10b095],gs
  40a673:	out    0x97,eax
  40a675:	mov    ecx,0xbef0be2b
  40a67a:	ss dec eax
  40a67c:	sbb    BYTE PTR [esi+edi*2+0x4883c7b2],0xd2
  40a684:	bound  ebp,QWORD PTR [esi-0x25727216]
  40a68a:	stos   DWORD PTR es:[edi],eax
  40a68b:	mov    ds:0x5a83a264,eax
  40a690:	pushf  
  40a691:	cmp    edx,DWORD PTR ds:0x4b422493
  40a697:	(bad)  
  40a698:	popa   
  40a699:	push   edi
  40a69a:	add    bl,dh
  40a69c:	ret    0xfaca
  40a69f:	test   BYTE PTR [esi+0x76bcd660],dl
  40a6a5:	jp     0x40a62d
  40a6a7:	popf   
  40a6a8:	dec    edx
  40a6a9:	or     cl,cl
  40a6ab:	dec    eax
  40a6ac:	jbe    0x40a640
  40a6ae:	test   eax,0xccbf8f14
  40a6b3:	dec    ebp
  40a6b4:	add    al,0xb1
  40a6b6:	inc    ecx
  40a6b7:	stos   BYTE PTR es:[edi],al
  40a6b8:	fmul   DWORD PTR [edx-0x3f]
  40a6bb:	and    al,0x39
  40a6bd:	inc    ecx
  40a6be:	sbb    al,0x99
  40a6c0:	add    al,0x7c
  40a6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6c3:	add    BYTE PTR [eax-0x52],bl
  40a6c6:	adc    al,0xd6
  40a6c8:	jmp    0x40a6ac
  40a6ca:	test   eax,0x617bf505
  40a6cf:	jnp    0x40a73d
  40a6d1:	fidivr WORD PTR [ebx]
  40a6d3:	mov    ebp,0xac0e8fd5
  40a6d8:	in     al,dx
  40a6d9:	clc    
  40a6da:	mov    bh,0x8
  40a6dc:	nop
  40a6dd:	int3   
  40a6de:	and    ch,ah
  40a6e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6e1:	add    al,0x40
  40a6e3:	mov    bl,0xe4
  40a6e5:	sbb    al,0xa3
  40a6e7:	and    eax,0x24aef9c7
  40a6ec:	sbb    eax,0x40a515ee
  40a6f1:	out    0x85,al
  40a6f3:	shr    DWORD PTR [edx],cl
  40a6f5:	lods   eax,DWORD PTR ds:[esi]
  40a6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6f7:	loopne 0x40a692
  40a6f9:	test   BYTE PTR [ebp+eiz*8+0x39],al
  40a6fd:	push   ss
  40a6fe:	mov    ebx,0xc966c920
  40a703:	jmp    0x3b08:0x787f28c8
  40a70a:	pushf  
  40a70b:	xor    ebp,DWORD PTR [esi]
  40a70d:	mov    ecx,0x9173d4
  40a712:	xor    BYTE PTR [ebx],ch
  40a714:	mov    ah,0xbf
  40a716:	cmp    dh,BYTE PTR [edi]
  40a718:	test   BYTE PTR [esi+0x375457c9],cl
  40a71e:	les    edx,FWORD PTR [esi-0x21]
  40a721:	call   DWORD PTR [ebx+0x47edfcd6]
  40a727:	xor    edx,DWORD PTR [ebx+edi*8-0x37]
  40a72b:	fwait
  40a72c:	mov    bl,0xcb
  40a72e:	mov    ds:0xb67a8806,al
  40a733:	fwait
  40a734:	outs   dx,BYTE PTR ds:[esi]
  40a735:	adc    al,0x94
  40a737:	adc    ecx,DWORD PTR [esi-0x18]
  40a73a:	mov    ch,0x63
  40a73c:	mov    bh,0x59
  40a73e:	cmp    ebx,eax
  40a740:	rcl    BYTE PTR [esi],0xa3
  40a743:	inc    esp
  40a744:	pusha  
  40a745:	cli    
  40a746:	nop
  40a747:	sub    ch,al
  40a749:	pop    edi
  40a74a:	jae    0x40a707
  40a74c:	into   
  40a74d:	iret   
  40a74e:	or     eax,0xbc2ed9d5
  40a753:	ja     0x40a725
  40a755:	or     dl,BYTE PTR fs:[eax]
  40a758:	shl    BYTE PTR [ecx-0x108f7aff],1
  40a75e:	popa   
  40a75f:	mov    eax,ds:0xd7797524
  40a764:	mov    ebx,0x6fe47354
  40a769:	push   edi
  40a76a:	mov    al,ds:0xd29fae7c
  40a76f:	cmp    al,0x57
  40a771:	outs   dx,BYTE PTR ds:[esi]
  40a772:	out    dx,al
  40a773:	jno    0x40a761
  40a775:	jne    0x40a7c1
  40a777:	xchg   edi,eax
  40a778:	dec    edx
  40a779:	mov    ecx,0x13f111c4
  40a77e:	xor    ebp,DWORD PTR [ebx]
  40a780:	inc    eax
  40a781:	pop    esp
  40a782:	mov    eax,0xb80c5a9f
  40a787:	into   
  40a788:	mov    esp,0x6222b245
  40a78d:	outs   dx,BYTE PTR ds:[esi]
  40a78e:	fld    DWORD PTR [eax-0x7377bff8]
  40a794:	out    0xd0,eax
  40a796:	icebp  
  40a797:	and    eax,0x50d930be
  40a79c:	pusha  
  40a79d:	adc    BYTE PTR [esi+0x1b],ch
  40a7a0:	mov    edx,edx
  40a7a2:	(bad)  
  40a7a3:	cdq    
  40a7a4:	fld    TBYTE PTR [edi]
  40a7a6:	out    0xe2,eax
  40a7a8:	out    dx,al
  40a7a9:	xlat   BYTE PTR ds:[ebx]
  40a7aa:	or     al,BYTE PTR [esi+ecx*2]
  40a7ad:	ins    BYTE PTR es:[edi],dx
  40a7ae:	or     eax,0x2e525e05
  40a7b3:	lea    eax,[ebp-0x79]
  40a7b6:	mov    ebp,0x958eef12
  40a7bb:	cmp    ebx,DWORD PTR [esi]
  40a7bd:	pop    ebx
  40a7be:	cli    
  40a7bf:	pop    ss
  40a7c0:	inc    esp
  40a7c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7c2:	push   0x3b
  40a7c4:	loope  0x40a7dd
  40a7c6:	xchg   ecx,eax
  40a7c7:	add    ah,dh
  40a7c9:	cdq    
  40a7ca:	sub    BYTE PTR [ebx-0x5a7d414d],dl
  40a7d0:	mov    ebp,0x42f491df
  40a7d5:	lock xlat BYTE PTR ds:[ebx]
  40a7d7:	jge    0x40a82c
  40a7d9:	pop    esi
  40a7da:	jbe    0x40a80a
  40a7dc:	xchg   BYTE PTR [eax-0x74e0b329],ah
  40a7e2:	xchg   ecx,eax
  40a7e3:	je     0x40a7e8
  40a7e5:	jp     0x40a850
  40a7e7:	jl     0x40a844
  40a7e9:	mov    edx,0x8ca335d7
  40a7ee:	mov    ebx,0x635d092a
  40a7f3:	xor    edx,DWORD PTR [ebx]
  40a7f5:	jo     0x40a7d9
  40a7f7:	and    BYTE PTR [ebx+0x1ae6920],cl
  40a7fd:	push   ss
  40a7fe:	mov    edx,0x2f8f9a2e
  40a803:	mov    edi,0x73f93fe1
  40a808:	test   BYTE PTR [edx],dl
  40a80a:	jmp    0x574823f3
  40a80f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a810:	ja     0x40a809
  40a812:	inc    esp
  40a813:	cs and ah,cl
  40a816:	add    eax,0x9a5644b6
  40a81b:	inc    edx
  40a81c:	(bad)  
  40a81d:	jg     0x40a7e8
  40a81f:	sub    DWORD PTR ds:0xdddd4560,esp
  40a825:	in     al,dx
  40a826:	mov    ah,0xd3
  40a828:	mov    ds:0xb251c38c,eax
  40a82d:	or     edi,0x4d8dac0d
  40a833:	add    dh,BYTE PTR [edi+esi*1-0x66a8909f]
  40a83a:	imul   ebp,edx,0x4
  40a83d:	or     DWORD PTR [esi-0x29],0xffffffe1
  40a841:	sbb    ch,bh
  40a843:	cmc    
  40a844:	mov    dl,0xfa
  40a846:	sbb    DWORD PTR [edi-0x666a8b0],ebp
  40a84c:	adc    esp,DWORD PTR [esi+0x4f456ddb]
  40a852:	paddsw mm4,QWORD PTR [ebp+0x5826d267]
  40a859:	push   ss
  40a85a:	aaa    
  40a85b:	push   edi
  40a85c:	mov    ah,0xde
  40a85e:	and    ch,ch
  40a860:	dec    ecx
  40a861:	and    esi,edx
  40a863:	in     eax,0x51
  40a865:	pop    eax
  40a866:	fwait
  40a867:	outs   dx,BYTE PTR ds:[esi]
  40a868:	and    al,0x8d
  40a86a:	add    al,bl
  40a86c:	imul   esi,DWORD PTR ds:0x70c67de6,0xffffffbb
  40a873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a874:	stos   BYTE PTR es:[edi],al
  40a875:	and    BYTE PTR [eax],bh
  40a877:	adc    DWORD PTR [edx-0x2f],edx
  40a87a:	fimul  WORD PTR [ecx-0x679872ef]
  40a880:	mov    DWORD PTR [esi-0x1c],edi
  40a883:	inc    eax
  40a884:	test   DWORD PTR ds:0xf1740412,ebp
  40a88a:	popa   
  40a88b:	xor    eax,0x53708c0b
  40a890:	jns    0x40a8bd
  40a892:	outs   dx,BYTE PTR ds:[esi]
  40a893:	mov    ah,0xe4
  40a895:	jb     0x40a8e7
  40a897:	mov    ebx,0x9cabb5cb
  40a89c:	cdq    
  40a89d:	out    dx,eax
  40a89e:	call   0xc08679fb
  40a8a3:	push   es
  40a8a4:	dec    ebx
  40a8a5:	inc    ecx
  40a8a6:	mov    esp,esp
  40a8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a9:	pusha  
  40a8aa:	fwait
  40a8ab:	xchg   edx,eax
  40a8ac:	xor    al,0x59
  40a8ae:	(bad)  
  40a8b0:	cmp    BYTE PTR [edi-0x6d],bh
  40a8b3:	mov    bl,0xbd
  40a8b5:	aad    0xd2
  40a8b7:	loope  0x40a8d4
  40a8b9:	xor    DWORD PTR [ecx+0xc],esp
  40a8bc:	cwde   
  40a8bd:	jecxz  0x40a90e
  40a8bf:	das    
  40a8c0:	lods   eax,DWORD PTR ds:[esi]
  40a8c1:	or     ecx,DWORD PTR [ecx]
  40a8c3:	retf   0xa03c
  40a8c6:	jo     0x40a84d
  40a8c8:	inc    ecx
  40a8ca:	mov    esi,0xe234ea16
  40a8cf:	inc    esi
  40a8d0:	dec    ebx
  40a8d1:	xchg   edi,eax
  40a8d2:	or     eax,0xe49e111c
  40a8d7:	mov    dl,BYTE PTR [ebx-0x269868c4]
  40a8dd:	out    dx,al
  40a8de:	inc    eax
  40a8df:	test   al,0x31
  40a8e1:	lods   eax,DWORD PTR ds:[esi]
  40a8e2:	cmc    
  40a8e3:	push   cs
  40a8e4:	adc    ebp,ebx
  40a8e6:	rcl    BYTE PTR [edi],1
  40a8e8:	icebp  
  40a8e9:	xchg   edi,eax
  40a8ea:	and    dl,BYTE PTR [edx-0xd2e6f51]
  40a8f0:	mov    edi,0x22735a1
  40a8f5:	fild   QWORD PTR [esp+ebx*8]
  40a8f8:	mov    dh,0x89
  40a8fa:	rcl    BYTE PTR [edi+0x25264a29],0xe9
  40a901:	inc    ebp
  40a902:	adc    eax,0x76dfafcd
  40a907:	mov    es,WORD PTR [edi]
  40a909:	xor    ecx,DWORD PTR [eax+ebp*2-0x37]
  40a90d:	dec    esp
  40a90e:	cwde   
  40a90f:	xor    DWORD PTR [ebx-0x424df099],ebx
  40a915:	fyl2x  
  40a917:	adc    eax,0x23164734
  40a91c:	mov    ebx,0x44a2673e
  40a921:	mov    bh,0xc0
  40a924:	popf   
  40a925:	aad    0x96
  40a927:	(bad)  
  40a928:	xchg   esi,eax
  40a929:	xchg   BYTE PTR [ebp+eax*1+0xe0ce6e0],ch
  40a930:	inc    esp
  40a931:	shl    BYTE PTR [eax],cl
  40a933:	les    ebp,FWORD PTR [ecx-0x39f4842c]
  40a939:	cmp    ebp,DWORD PTR [edi+ebp*8]
  40a93c:	call   0x8b85:0x7c1dc3a2
  40a943:	retf   
  40a944:	icebp  
  40a945:	inc    edi
  40a946:	lahf   
  40a947:	int    0x6e
  40a949:	sbb    ebp,DWORD PTR [ebp+0x22]
  40a94c:	dec    esi
  40a94d:	hlt    
  40a94e:	lods   al,BYTE PTR ds:[esi]
  40a94f:	test   eax,0x93580910
  40a954:	lods   al,BYTE PTR ds:[esi]
  40a955:	dec    ebp
  40a956:	jg     0x40a9d7
  40a958:	cmc    
  40a959:	lods   al,BYTE PTR ds:[esi]
  40a95a:	fistp  WORD PTR [edx]
  40a95c:	sbb    eax,0x5e012058
  40a961:	dec    ecx
  40a962:	cmp    esp,ecx
  40a964:	jp     0x40a963
  40a966:	adc    al,BYTE PTR [eax+0x6e]
  40a969:	inc    esi
  40a96a:	gs or  eax,0x727c1343
  40a970:	aad    0x7c
  40a972:	and    al,0xc3
  40a974:	pop    esi
  40a975:	imul   ebp,eax,0x46bf1171
  40a97b:	fiadd  DWORD PTR [ebp+ecx*2-0x1c3686d4]
  40a982:	es push ecx
  40a984:	in     eax,dx
  40a985:	aaa    
  40a986:	cld    
  40a987:	mov    dh,0xd4
  40a989:	sub    eax,0x341c7699
  40a98e:	out    dx,al
  40a98f:	je     0x40a961
  40a991:	pop    ds
  40a992:	cmp    al,0x40
  40a994:	scas   eax,DWORD PTR es:[edi]
  40a995:	dec    ebp
  40a996:	ror    BYTE PTR [edx+0x39d1428d],0x76
  40a99d:	pushf  
  40a99e:	lock and al,0xc
  40a9a1:	adc    bh,0x2e
  40a9a4:	outs   dx,BYTE PTR ds:[esi]
  40a9a5:	clc    
  40a9a6:	push   ebx
  40a9a7:	xchg   ecx,eax
  40a9a8:	in     al,dx
  40a9a9:	sub    DWORD PTR [eax],0x1eecf209
  40a9af:	mov    ebx,0x4dd765d1
  40a9b4:	mov    ebx,0x74369156
  40a9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9ba:	mov    ds:0x43573097,al
  40a9bf:	in     al,0x69
  40a9c1:	xchg   edi,eax
  40a9c2:	call   0x187e:0x31eb96e4
  40a9c9:	inc    edi
  40a9ca:	lock jno 0x40a9a9
  40a9cd:	pusha  
  40a9ce:	aaa    
  40a9cf:	ds push 0x21d9e188
  40a9d5:	jno    0x40a9e4
  40a9d7:	mov    edi,0xecad36a0
  40a9dc:	jae    0x40aa40
  40a9de:	add    BYTE PTR [ebx-0x23],0x31
  40a9e2:	mov    WORD PTR [edi-0x7df1f448],ss
  40a9e8:	ret    0xff12
  40a9eb:	js     0x40aa54
  40a9ed:	xchg   edx,eax
  40a9ee:	sub    BYTE PTR [ecx*1-0x4341258f],al
  40a9f5:	mov    dh,0xe9
  40a9f7:	imul   esp,ecx,0xaf9ab6df
  40a9fd:	mov    ch,0xa0
  40a9ff:	outs   dx,BYTE PTR gs:[esi]
  40aa01:	(bad)  
  40aa02:	std    
  40aa03:	rcr    BYTE PTR [eax-0x12],0x1e
  40aa07:	xor    al,0xf3
  40aa09:	fs ja  0x40aa12
  40aa0c:	inc    ecx
  40aa0d:	fs push ds
  40aa0f:	ret    
  40aa10:	push   0x11
  40aa12:	outs   dx,BYTE PTR ds:[esi]
  40aa13:	add    BYTE PTR [edi],bl
  40aa15:	pop    ss
  40aa16:	js     0x40a9dd
  40aa18:	cdq    
  40aa19:	popf   
  40aa1a:	sar    DWORD PTR [esi-0x4a39707],0xcf
  40aa21:	lea    edi,[edx+0x3b]
  40aa24:	js     0x40a9ca
  40aa26:	loop   0x40a9dc
  40aa28:	sahf   
  40aa29:	jmp    0x876d6ddf
  40aa2e:	test   al,0xf5
  40aa30:	push   ecx
  40aa31:	mov    bl,0x58
  40aa33:	mov    ds:0x44e3de86,al
  40aa38:	cmp    DWORD PTR [edi+0xf],eax
  40aa3b:	in     eax,0x55
  40aa3d:	lock jne 0x40aa64
  40aa40:	mov    edi,0xbccf47fb
  40aa45:	aad    0xa6
  40aa47:	mov    edx,0x11f740e
  40aa4c:	adc    ah,BYTE PTR [ebx]
  40aa4e:	push   ebp
  40aa4f:	push   edx
  40aa50:	and    eax,0x39ecfff2
  40aa55:	push   ds
  40aa56:	mov    dl,0x32
  40aa58:	xchg   ecx,eax
  40aa59:	mov    edi,0x729f880d
  40aa5e:	ret    0x1b32
  40aa61:	jmp    0x40aa77
  40aa63:	and    DWORD PTR cs:[ecx-0x77d9f6b4],ecx
  40aa6a:	bound  ebx,QWORD PTR [edx]
  40aa6c:	add    bl,al
  40aa6e:	adc    esp,edi
  40aa70:	adc    bh,cl
  40aa72:	inc    edi
  40aa73:	out    dx,eax
  40aa74:	sub    dh,BYTE PTR [edi+ecx*4+0x103c9ace]
  40aa7b:	stos   BYTE PTR es:[edi],al
  40aa7c:	rcr    DWORD PTR [ebp-0x55],0x0
  40aa80:	jecxz  0x40aaea
  40aa82:	je     0x40aa53
  40aa84:	pop    ds
  40aa85:	add    BYTE PTR [edi],ah
  40aa87:	pop    edi
  40aa88:	cmp    BYTE PTR ds:0x52cf0500,bh
  40aa8e:	sti    
  40aa8f:	lods   eax,DWORD PTR ds:[esi]
  40aa90:	adc    esi,edi
  40aa92:	(bad)  
  40aa94:	daa    
  40aa95:	xchg   BYTE PTR [ecx],bl
  40aa97:	inc    ebx
  40aa98:	push   0x65
  40aa9a:	int    0xd2
  40aa9c:	sbb    BYTE PTR [edx],0xbf
  40aa9f:	jle    0x40aab3
  40aaa1:	test   DWORD PTR [edi-0xd],eax
  40aaa4:	or     eax,0xc650ea30
  40aaa9:	cmp    DWORD PTR [edi+0x2cd40d0f],ebp
  40aaaf:	push   ds
  40aab0:	xor    DWORD PTR [ebx+0x8],edi
  40aab3:	and    dh,BYTE PTR [ecx+edi*1+0x20]
  40aab7:	retf   
  40aab8:	fs scas eax,DWORD PTR es:[edi]
  40aaba:	jmp    0x40aafa
  40aabc:	push   esp
  40aabd:	sbb    eax,0x176cf4bb
  40aac2:	xchg   BYTE PTR [edx-0x70],ah
  40aac5:	(bad)  
  40aac6:	div    BYTE PTR [edi]
  40aac8:	out    0xc2,eax
  40aaca:	bound  ecx,QWORD PTR [ebx]
  40aacc:	inc    edx
  40aacd:	mov    bl,0x3f
  40aacf:	push   cs
  40aad0:	jnp    0x40ab11
  40aad2:	fs add eax,0x6a395a45
  40aad8:	adc    al,0x5
  40aada:	test   dh,0xfb
  40aadd:	mov    cl,0x38
  40aadf:	cmp    eax,0x29fb66cf
  40aae4:	adc    edx,esp
  40aae6:	js     0x40aa95
  40aae8:	dec    ebx
  40aae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaea:	cmp    al,0xa9
  40aaec:	push   edi
  40aaed:	mov    eax,ds:0x8584aa8e
  40aaf2:	cmp    eax,0xc526629c
  40aaf7:	retf   
  40aaf8:	nop
  40aaf9:	jne    0x40ab73
  40aafb:	mov    edx,edi
  40aafd:	pop    ebx
  40aafe:	les    esp,FWORD PTR [eax+0x424e52ef]
  40ab04:	and    bl,BYTE PTR [eax+0x53]
  40ab07:	mov    edi,0xbdbac881
  40ab0c:	shl    BYTE PTR [ebp+0x2fe1a4ff],0x13
  40ab13:	jp     0x40aaf9
  40ab15:	jne    0x40aa9c
  40ab17:	jmp    0x6859:0x65e36c29
  40ab1e:	retf   0x75a2
  40ab21:	pop    esi
  40ab22:	push   es
  40ab23:	inc    edi
  40ab24:	xchg   ebp,eax
  40ab25:	int3   
  40ab26:	imul   esp,DWORD PTR [ecx-0x3a],0xffffffc8
  40ab2a:	leave  
  40ab2b:	mov    ds,WORD PTR [esi+0x28]
  40ab2e:	outs   dx,DWORD PTR ds:[esi]
  40ab2f:	cli    
  40ab30:	retf   
  40ab31:	mov    DWORD PTR [ecx],eax
  40ab33:	cmp    cl,BYTE PTR [edi-0x41]
  40ab36:	cwde   
  40ab37:	pop    ebp
  40ab38:	or     eax,0xa4ccd8bf
  40ab3d:	cli    
  40ab3e:	jmp    0x886bbfca
  40ab43:	aad    0xbc
  40ab45:	jmp    0x7482:0x4feaa6
  40ab4c:	(bad)  
  40ab4e:	in     eax,0xa6
  40ab50:	call   0x1aed8dc1
  40ab55:	push   esi
  40ab56:	xor    DWORD PTR [esi+0x30e85c7b],ebp
  40ab5c:	or     ah,BYTE PTR [edx+0x5bda2c14]
  40ab62:	mov    edi,0xbc930360
  40ab67:	mov    edx,DWORD PTR [eax]
  40ab69:	xor    BYTE PTR ds:0x136e602b,0x8a
  40ab70:	scas   al,BYTE PTR es:[edi]
  40ab71:	je     0x40ab27
  40ab73:	sub    esi,DWORD PTR [ebx+0x3d]
  40ab76:	jns    0x40abc9
  40ab78:	shl    BYTE PTR [ebp-0x235abc99],1
  40ab7e:	pop    eax
  40ab7f:	dec    esp
  40ab80:	std    
  40ab81:	pop    ds
  40ab82:	sub    cl,cl
  40ab84:	jbe    0x40ac02
  40ab86:	dec    esp
  40ab87:	gs adc ch,cl
  40ab8a:	push   edx
  40ab8b:	lea    ecx,[edx]
  40ab8d:	jbe    0x40ab5f
  40ab8f:	fst    DWORD PTR [edi+0x1e64a14d]
  40ab95:	push   ds
  40ab96:	aaa    
  40ab97:	push   cs
  40ab98:	ja     0x40abc5
  40ab9a:	pop    esi
  40ab9b:	mov    dh,0xb4
  40ab9d:	or     dl,BYTE PTR [ebp-0x5f]
  40aba0:	push   ebp
  40aba1:	scas   eax,DWORD PTR es:[edi]
  40aba2:	pop    edi
  40aba3:	mov    dl,0xd7
  40aba5:	pop    ss
  40aba6:	in     eax,0x91
  40aba8:	stos   BYTE PTR es:[edi],al
  40aba9:	jg     0x40ac0f
  40abab:	cmp    esp,DWORD PTR [eax+0x51e76982]
  40abb1:	dec    edx
  40abb2:	inc    edi
  40abb3:	dec    edi
  40abb4:	jmp    0x40ab80
  40abb6:	stc    
  40abb7:	adc    DWORD PTR [ebx+0x54f9fe77],esi
  40abbd:	jb     0x40ab88
  40abbf:	xchg   ebp,eax
  40abc0:	enter  0xf78e,0x6d
  40abc4:	jne    0x40ab8c
  40abc6:	repnz (bad) [edx-0x42]
  40abca:	push   0xf693ba82
  40abcf:	jg     0x40ab95
  40abd1:	loopne 0x40ac37
  40abd3:	outs   dx,DWORD PTR ds:[esi]
  40abd4:	fild   WORD PTR [ebx-0x51]
  40abd7:	or     eax,0x4bcbacef
  40abdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abdd:	das    
  40abde:	inc    esp
  40abdf:	ret    0xc8c1
  40abe2:	cmp    al,0x52
  40abe4:	into   
  40abe5:	test   eax,0xbc93cbf3
  40abea:	test   dh,0xaa
  40abed:	mov    ah,0x50
  40abef:	cmc    
  40abf0:	pop    es
  40abf1:	repnz cmp esp,0x8f9846d0
  40abf8:	or     DWORD PTR [ecx+0x7bb1afc4],0x150212c7
  40ac02:	xor    eax,0xf7a947b5
  40ac07:	mov    eax,0x57c62e0f
  40ac0c:	add    esp,eax
  40ac0e:	adc    eax,0x3c673281
  40ac13:	and    ecx,DWORD PTR [ebp+0x8ba1316]
  40ac19:	stos   DWORD PTR es:[edi],eax
  40ac1a:	loope  0x40abce
  40ac1c:	or     al,0xef
  40ac1e:	dec    esp
  40ac1f:	mov    al,ds:0xd531e021
  40ac24:	dec    ecx
  40ac25:	dec    ebp
  40ac26:	mov    DWORD PTR [ecx+0x45580de1],ecx
  40ac2c:	aad    0x9c
  40ac2e:	lods   eax,DWORD PTR ds:[esi]
  40ac2f:	cmp    eax,0xa6d1c2a8
  40ac34:	cmp    bh,BYTE PTR [ebp+0x47]
  40ac37:	dec    esp
  40ac38:	and    esi,DWORD PTR [esi-0x70]
  40ac3b:	mov    esp,0x901328d8
  40ac40:	enter  0x215e,0xc9
  40ac44:	outs   dx,DWORD PTR ds:[esi]
  40ac45:	inc    ecx
  40ac46:	fs cld 
  40ac48:	inc    ebx
  40ac49:	sti    
  40ac4a:	nop
  40ac4b:	jp     0x40ac5a
  40ac4d:	jl     0x40acbc
  40ac4f:	cdq    
  40ac50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac51:	inc    BYTE PTR [edi-0x1]
  40ac54:	stos   DWORD PTR es:[edi],eax
  40ac55:	loop   0x40ac11
  40ac57:	fxch   st(3)
  40ac59:	pop    edx
  40ac5a:	repz pushf 
  40ac5c:	mov    ds:0x519d7c78,al
  40ac61:	pushf  
  40ac62:	xor    BYTE PTR [esi],0x84
  40ac65:	add    ah,0x51
  40ac68:	repnz test bl,ch
  40ac6b:	jne    0x40acc8
  40ac6d:	shr    BYTE PTR [esp+ebp*1],cl
  40ac70:	or     DWORD PTR [edx+0x416982b8],ebx
  40ac76:	ret    0xae42
  40ac79:	sub    ecx,ebp
  40ac7b:	xor    BYTE PTR [esi-0xc],bl
  40ac7e:	push   ss
  40ac7f:	mov    ecx,0x76025781
  40ac84:	repnz outs dx,BYTE PTR ds:[esi]
  40ac86:	mov    ch,0x1c
  40ac88:	(bad)  
  40ac89:	pcmpeqw mm1,QWORD PTR [ebp-0x77]
  40ac8d:	mov    al,0x45
  40ac8f:	inc    eax
  40ac90:	call   0xa1c4:0x6b73c8b
  40ac97:	sar    ah,0xe0
  40ac9a:	and    DWORD PTR [ecx-0x64d75691],esi
  40aca0:	xor    eax,0xb72094cc
  40aca5:	jb     0x40acd4
  40aca7:	out    dx,al
  40aca8:	pushf  
  40aca9:	adc    al,0x4f
  40acab:	add    bh,0x18
  40acae:	fwait
  40acaf:	sub    DWORD PTR [esi-0x636868bc],0x5ebb31d4
  40acb9:	jo     0x40ac7a
  40acbb:	mov    edx,0x8b690cd6
  40acc0:	ja     0x40aced
  40acc2:	or     ecx,edx
  40acc4:	(bad)  
  40acc5:	push   ebx
  40acc6:	xor    ebp,0x55
  40acc9:	pop    ebx
  40acca:	jecxz  0x40acda
  40accc:	sti    
  40accd:	sbb    al,0x36
  40accf:	jns    0x40aca4
  40acd1:	push   edi
  40acd2:	mov    ebp,0x91b07707
  40acd7:	fistp  QWORD PTR [ebp-0x80]
  40acda:	repnz stos DWORD PTR es:[edi],eax
  40acdc:	xchg   edi,eax
  40acdd:	mov    ebp,DWORD PTR [esi+0x1f]
  40ace0:	repnz cmp eax,0x47a34152
  40ace6:	shl    BYTE PTR [esi+0x28],1
  40ace9:	adc    eax,0x602a6fbe
  40acee:	adc    dh,bh
  40acf0:	and    eax,0xa689b41f
  40acf5:	shl    bh,0x81
  40acf8:	add    edx,DWORD PTR [edi+0x31]
  40acfb:	call   0xb13a:0xff6b79c0
  40ad02:	rol    ebp,1
  40ad04:	(bad)  
  40ad05:	pop    edi
  40ad06:	dec    DWORD PTR [esi]
  40ad08:	inc    ebp
  40ad09:	jae    0x40ad64
  40ad0b:	jg     0x40ace4
  40ad0d:	mov    al,0x0
  40ad0f:	je     0x40ad4a
  40ad11:	jge    0x40acb0
  40ad13:	mov    BYTE PTR ds:0xae29394c,dl
  40ad19:	pusha  
  40ad1a:	(bad)
  40ad1d:	scas   al,BYTE PTR es:[edi]
  40ad1e:	push   ebx
  40ad1f:	(bad)  
  40ad20:	xor    ecx,DWORD PTR [eax-0x2f8395c]
  40ad26:	addr16 fsincos 
  40ad29:	leave  
  40ad2a:	stc    
  40ad2b:	sub    DWORD PTR [esp+ebx*2-0xe795cba],esp
  40ad32:	mov    cl,0x8d
  40ad34:	inc    eax
  40ad35:	in     eax,0xdc
  40ad37:	mov    edx,0xea0ea09
  40ad3c:	(bad)  
  40ad3d:	(bad)  
  40ad3e:	xlat   BYTE PTR ds:[ebx]
  40ad3f:	and    BYTE PTR [eax+edx*1-0x7bae9fef],dl
  40ad46:	push   esp
  40ad47:	dec    ebx
  40ad48:	stc    
  40ad49:	repz sbb ebx,DWORD PTR [eax-0x26223a46]
  40ad50:	lods   eax,DWORD PTR ds:[esi]
  40ad51:	sbb    al,0x71
  40ad53:	adc    ah,BYTE PTR [ecx-0x8]
  40ad56:	mov    ah,0xde
  40ad58:	and    DWORD PTR [edi+ebx*2],0x6
  40ad5c:	inc    esp
  40ad5d:	jmp    0x48a:0xaca63859
  40ad64:	sahf   
  40ad65:	sub    eax,0x24212d5b
  40ad6a:	jp     0x40ad51
  40ad6c:	in     al,dx
  40ad6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad6e:	retf   
  40ad6f:	aaa    
  40ad70:	inc    ebp
  40ad71:	or     eax,0x749a8c44
  40ad76:	sub    DWORD PTR [edx-0x41254bb7],ecx
  40ad7c:	or     DWORD PTR [esp+eax*1+0x1b9f11e2],0xffffffad
  40ad84:	adc    al,0xea
  40ad86:	inc    ecx
  40ad87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad88:	and    DWORD PTR [eax],0x12
  40ad8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad8c:	add    BYTE PTR fs:[bx],ah
  40ad90:	sub    al,dh
  40ad92:	std    
  40ad93:	cmp    DWORD PTR [ecx+ecx*4-0x7],edi
  40ad97:	ds push ebx
  40ad99:	mov    ebx,0x17325994
  40ad9e:	js     0x40ad6b
  40ada0:	cli    
  40ada1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ada2:	or     ebx,DWORD PTR [ebp+0x22]
  40ada5:	pop    es
  40ada6:	mov    esp,0x2837015d
  40adab:	push   esp
  40adac:	xor    eax,0x3e3e0a4f
  40adb1:	jle    0x40ad8a
  40adb3:	rcl    BYTE PTR [ebx+0x4b],0x21
  40adb7:	push   ebx
  40adb8:	adc    bh,BYTE PTR [eax-0x6a]
  40adbb:	pusha  
  40adbc:	(bad)  
  40adbd:	dec    esp
  40adbe:	icebp  
  40adbf:	mov    DWORD PTR [edx-0x3256af7b],edi
  40adc5:	je     0x40adbf
  40adc7:	(bad)  
  40adc8:	cli    
  40adc9:	aaa    
  40adca:	nop
  40adcb:	and    al,0x66
  40adcd:	cmp    eax,0x20576e22
  40add2:	cmp    al,0x1c
  40add4:	fs inc ebx
  40add6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40add7:	jbe    0x40addb
  40add9:	push   ss
  40adda:	mov    WORD PTR [eax+0x111e1364],es
  40ade0:	ins    BYTE PTR es:[edi],dx
  40ade1:	mov    esi,0x9be2b761
  40ade6:	or     BYTE PTR [ebp+0x3ba534e6],0xdf
  40aded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adee:	adc    ch,BYTE PTR [eax+0x6844f790]
  40adf4:	(bad)  
  40adf5:	mov    esi,0xef5aa429
  40adfa:	mov    bl,0xbd
  40adfc:	outs   dx,BYTE PTR ds:[esi]
  40adfd:	or     eax,0xe459b4fa
  40ae02:	int    0x6a
  40ae04:	test   DWORD PTR [edx+0x3b],0xab5a9d56
  40ae0b:	mov    ecx,0x85f27fe7
  40ae10:	imul   BYTE PTR [eax+0x1]
  40ae13:	out    0x7b,eax
  40ae15:	mov    bh,0x16
  40ae17:	stos   DWORD PTR es:[edi],eax
  40ae18:	jmp    0xc4861a0
  40ae1d:	(bad)  
  40ae1e:	cmp    BYTE PTR [eax+eax*8-0x63],al
  40ae22:	jmp    DWORD PTR [esi-0x36]
  40ae25:	mov    dh,bh
  40ae27:	mov    dl,0xc7
  40ae29:	jns    0x40adac
  40ae2b:	dec    edx
  40ae2c:	push   esi
  40ae2d:	(bad)  
  40ae2e:	push   ebp
  40ae2f:	in     al,0xab
  40ae31:	pop    ds
  40ae32:	fistp  DWORD PTR [ebx-0x80]
  40ae35:	jmp    0x40ae94
  40ae37:	imul   edx,DWORD PTR [esp+esi*1],0xffffffe7
  40ae3b:	dec    esi
  40ae3c:	pop    ecx
  40ae3d:	mov    ah,0x3e
  40ae3f:	sbb    al,0x72
  40ae41:	mov    ebx,0x739c66db
  40ae46:	scas   al,BYTE PTR es:[edi]
  40ae47:	jno    0x40adf4
  40ae49:	push   0x27
  40ae4b:	or     eax,0x37eb6350
  40ae50:	test   BYTE PTR [edi+edx*4+0x3c],bh
  40ae54:	retf   
  40ae55:	pop    ds
  40ae56:	mov    dh,0xeb
  40ae58:	repnz loope 0x40ae46
  40ae5b:	outs   dx,BYTE PTR ds:[esi]
  40ae5c:	imul   ebp,esi,0xffffff93
  40ae5f:	mov    bh,BYTE PTR [edi]
  40ae61:	cmc    
  40ae62:	sub    al,0x65
  40ae64:	sbb    BYTE PTR fs:[ebp+0x12],bh
  40ae68:	and    edi,DWORD PTR [ebx+ebx*4+0x3f389aa5]
  40ae6f:	fisubr DWORD PTR ds:0x6cebb1cf
  40ae75:	std    
  40ae76:	and    dl,0x94
  40ae79:	call   0xb5c3:0x4fb7666b
  40ae80:	cdq    
  40ae81:	inc    ebp
  40ae82:	std    
  40ae83:	dec    esi
  40ae84:	(bad)  ss:[edx]
  40ae87:	add    eax,0xcf44e58e
  40ae8c:	shr    BYTE PTR [eax],0xe0
  40ae8f:	cmp    ebp,DWORD PTR [ecx-0x46]
  40ae92:	hlt    
  40ae93:	jns    0x40ae88
  40ae95:	jnp    0x40ae59
  40ae97:	ins    BYTE PTR es:[di],dx
  40ae99:	push   0x2b
  40ae9b:	cmp    BYTE PTR [esi-0x20fbd3cf],al
  40aea1:	pop    edx
  40aea2:	push   esp
  40aea3:	repz scas eax,DWORD PTR es:[edi]
  40aea5:	push   0x582200c4
  40aeaa:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40aeac:	cmp    BYTE PTR [eax-0x1fae075f],bh
  40aeb2:	xor    al,0xfc
  40aeb4:	pop    esp
  40aeb5:	inc    edi
  40aeb6:	mov    ?,WORD PTR [edi+ebp*8-0x45]
  40aeba:	adc    dh,cl
  40aebc:	(bad)  
  40aebd:	aad    0xe2
  40aebf:	ins    BYTE PTR es:[edi],dx
  40aec0:	test   al,0xa1
  40aec2:	pusha  
  40aec3:	xchg   DWORD PTR [esi+0x39],esi
  40aec6:	sub    DWORD PTR [esi-0x347c8d0e],ebp
  40aecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aecd:	(bad)  
  40aece:	sti    
  40aecf:	shl    BYTE PTR [edx-0x2a],cl
  40aed2:	shl    BYTE PTR [ebp-0xe],0xef
  40aed6:	xchg   edx,eax
  40aed7:	or     eax,0x79f73615
  40aedc:	call   0x5d52:0xa8bd1df8
  40aee3:	cdq    
  40aee4:	pop    ebp
  40aee5:	mov    ebx,DWORD PTR [edi]
  40aee7:	and    BYTE PTR ds:0x61a98c3a,al
  40aeed:	adc    eax,0x4874c89
  40aef2:	mov    DWORD PTR [ecx+0x5c],0xb4fe916b
  40aef9:	jmp    0xeedd4d87
  40aefe:	xor    al,0x1d
  40af00:	in     eax,dx
  40af01:	mov    ebp,0xbb932567
  40af06:	sub    bl,BYTE PTR [edx+0x17b51595]
  40af0c:	xor    BYTE PTR [ebx+0x57da0aad],bh
  40af12:	mov    bh,0xeb
  40af14:	cmp    DWORD PTR [ecx-0x7ba826b4],ebp
  40af1a:	jl     0x40af89
  40af1c:	ja     0x40af54
  40af1e:	test   DWORD PTR [esi-0x30],edi
  40af21:	pop    ebx
  40af22:	fild   DWORD PTR [edi]
  40af24:	fs pop eax
  40af26:	lahf   
  40af27:	out    0xe9,eax
  40af29:	retfw  
  40af2b:	ja     0x40af12
  40af2d:	push   esp
  40af2e:	adc    ebx,edx
  40af30:	dec    edx
  40af31:	(bad)  
  40af32:	jl     0x40af9e
  40af34:	sbb    DWORD PTR fs:[ecx],ebx
  40af37:	mov    ebp,0xf6ae0ad
  40af3c:	sub    eax,0x7459665a
  40af41:	push   ss
  40af42:	push   esp
  40af43:	ret    
  40af44:	aaa    
  40af45:	mov    ?,WORD PTR [eax]
  40af47:	(bad)  
  40af48:	xchg   esi,eax
  40af49:	(bad)  
  40af4a:	aaa    
  40af4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af4c:	xlat   BYTE PTR ds:[ebx]
  40af4d:	sub    ch,cl
  40af4f:	and    al,0x72
  40af51:	ror    esp,0x3a
  40af54:	mov    ecx,0x59b7e94
  40af59:	(bad)  
  40af5a:	outs   dx,BYTE PTR ds:[esi]
  40af5b:	xchg   esi,eax
  40af5c:	popf   
  40af5d:	or     DWORD PTR [esi*8-0x6517159b],edi
  40af64:	sbb    eax,0x2fdb0b19
  40af69:	push   eax
  40af6a:	popf   
  40af6b:	sahf   
  40af6c:	lods   al,BYTE PTR ds:[esi]
  40af6d:	fsub   st,st(1)
  40af6f:	mov    ch,0xa9
  40af71:	jp     0x40af19
  40af73:	popa   
  40af74:	pop    esp
  40af75:	push   es
  40af76:	sub    al,0xc0
  40af78:	jge    0x40af92
  40af7a:	jmp    0x338e:0x4646e38b
  40af81:	inc    ecx
  40af82:	lods   al,BYTE PTR ds:[esi]
  40af83:	and    eax,0x1c4ed4d4
  40af88:	sbb    eax,0xa24bfe64
  40af8d:	loopne 0x40af13
  40af8f:	sahf   
  40af90:	mov    al,BYTE PTR [eax-0x519122ed]
  40af96:	xor    dh,BYTE PTR [edx-0x2a]
  40af99:	icebp  
  40af9a:	add    bl,BYTE PTR [ebp+0x46]
  40af9d:	fstp   TBYTE PTR [ecx+ebx*8]
  40afa0:	cmp    DWORD PTR [edi+edx*2],esi
  40afa3:	push   eax
  40afa4:	jp     0x40af72
  40afa6:	dec    ecx
  40afa7:	retf   0xe55d
  40afaa:	stos   DWORD PTR es:[edi],eax
  40afab:	pop    edi
  40afac:	mov    al,0xa5
  40afaf:	int    0xc4
  40afb1:	icebp  
  40afb2:	jg     0x40af8a
  40afb4:	mov    ch,0x38
  40afb6:	xchg   ebx,eax
  40afb7:	xchg   esi,eax
  40afb8:	shl    BYTE PTR [ebx-0x3b],cl
  40afbb:	std    
  40afbc:	mov    bh,0x2b
  40afbe:	pop    es
  40afbf:	sbb    BYTE PTR [edi],bh
  40afc1:	xchg   edx,eax
  40afc2:	add    eax,0xea2fa864
  40afc7:	in     al,dx
  40afc8:	sub    ebp,DWORD PTR [eax+0x3d]
  40afcb:	pop    edx
  40afcc:	int    0x33
  40afce:	retf   
  40afcf:	sahf   
  40afd0:	nop
  40afd1:	loopne 0x40afc3
  40afd3:	retf   
  40afd4:	cmp    eax,0x63b4e9a5
  40afd9:	pop    ss
  40afda:	adc    al,0x11
  40afdc:	push   0x4697d800
  40afe1:	int    0xc2
  40afe3:	pop    ss
  40afe4:	imul   esp,esp,0xffffffa0
  40afe7:	mov    eax,ds:0x7ebcbaa6
  40afec:	mov    ch,0xbb
  40afee:	push   ds
  40afef:	neg    dh
  40aff1:	mov    edi,cs
  40aff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aff4:	ss pop edi
  40aff6:	jl     0x40af94
  40aff8:	dec    ebp
  40aff9:	push   ecx
  40affa:	fbstp  TBYTE PTR [ebx+0x443f5fbe]
  40b000:	out    dx,eax
  40b001:	sbb    ebx,DWORD PTR [edx+edi*8+0x3e9fd6b4]
  40b008:	and    eax,0x9c6c7c67
  40b00d:	sar    DWORD PTR [edi-0x663dc10c],1
  40b013:	(bad)  
  40b014:	cli    
  40b015:	push   ds
  40b016:	hlt    
  40b017:	dec    edx
  40b018:	arpl   ax,cx
  40b01a:	fldenv [eax+0xf4fe31c]
  40b020:	adc    DWORD PTR [edx+0x63],0x5004985e
  40b027:	fcomp  DWORD PTR [edi+ebx*2-0x5b]
  40b02b:	xchg   esi,eax
  40b02c:	push   ss
  40b02d:	inc    ebp
  40b02e:	or     bh,dh
  40b030:	inc    edi
  40b031:	mov    edi,0xc238f32d
  40b036:	adc    BYTE PTR [ebp+ebp*1-0x6a13b7c0],dh
  40b03d:	lods   al,BYTE PTR ds:[esi]
  40b03e:	fst    st(3)
  40b040:	jmp    0xad54:0xff5d4d71
  40b047:	jb     0x40b064
  40b049:	cli    
  40b04a:	outs   dx,DWORD PTR ds:[esi]
  40b04b:	xchg   ecx,eax
  40b04c:	repz pop esi
  40b04e:	pop    esi
  40b04f:	pop    es
  40b050:	int    0x8e
  40b052:	and    DWORD PTR [ebp+ebp*8+0x38e52a2],eax
  40b059:	cmp    eax,DWORD PTR ds:0xbea25e38
  40b05f:	jp     0x40aff1
  40b061:	cmp    ch,BYTE PTR [edi-0x2e4455b1]
  40b067:	data16 mov bh,0xb0
  40b06a:	dec    esp
  40b06b:	dec    ecx
  40b06c:	mov    eax,ds:0x5722c06b
  40b071:	(bad)  
  40b072:	fcmovnbe st,st(7)
  40b074:	sub    al,0xd0
  40b076:	fadd   QWORD PTR [eax-0x2f]
  40b079:	pushf  
  40b07a:	sbb    DWORD PTR [edx+0x210f3e0c],ebp
  40b080:	fs ins DWORD PTR es:[edi],dx
  40b082:	lds    eax,FWORD PTR [eax-0x5ac610da]
  40b088:	arpl   ax,dx
  40b08a:	adc    bl,BYTE PTR [esi+0x38089110]
  40b090:	jl     0x40b08f
  40b092:	mov    cl,cl
  40b094:	pop    ebx
  40b095:	mov    dh,0x78
  40b097:	sub    eax,0x64546c4f
  40b09c:	sbb    BYTE PTR [ebx+0x4b],ah
  40b09f:	sub    al,0xec
  40b0a1:	xchg   edi,eax
  40b0a2:	pop    edi
  40b0a3:	xor    eax,0xdbab5d79
  40b0a8:	push   ecx
  40b0a9:	sbb    dh,BYTE PTR gs:[ebp+0x24]
  40b0ad:	push   0xc3bfe484
  40b0b2:	pop    ss
  40b0b3:	test   al,0x63
  40b0b5:	(bad)  
  40b0b6:	jae    0x40b081
  40b0b8:	mov    al,0x65
  40b0ba:	jecxz  0x40b045
  40b0bc:	xchg   esi,eax
  40b0bd:	xchg   BYTE PTR [eax+ebx*4+0x3f],ah
  40b0c1:	ins    BYTE PTR es:[edi],dx
  40b0c2:	enter  0x4a4d,0x71
  40b0c6:	xor    eax,0xf8b3560d
  40b0cb:	or     DWORD PTR [ebp-0x3f],eax
  40b0ce:	(bad)  
  40b0cf:	mov    dh,0xe2
  40b0d1:	ret    
  40b0d2:	lock mov al,ds:0xc4c11968
  40b0d8:	sub    BYTE PTR es:[eax-0x5f6ce134],dl
  40b0df:	jge    0x40b0bb
  40b0e1:	cmp    eax,0xae8462ca
  40b0e6:	dec    esp
  40b0e7:	pop    esp
  40b0e8:	pop    ecx
  40b0e9:	sub    al,0x91
  40b0eb:	(bad)  
  40b0ec:	icebp  
  40b0ed:	aas    
  40b0ee:	mov    ch,al
  40b0f0:	dec    edi
  40b0f1:	or     ch,BYTE PTR [ebx+ebx*1+0x6f]
  40b0f5:	movups xmm7,xmm7
  40b0f8:	int3   
  40b0f9:	loopne 0x40b0cf
  40b0fb:	push   es
  40b0fc:	adc    BYTE PTR [eax+0x56b9b2e7],bh
  40b102:	adc    edi,eax
  40b104:	jnp    0x40b0ca
  40b106:	push   0xff154464
  40b10b:	lea    esi,[ecx-0x74]
  40b10e:	or     DWORD PTR [edx],ecx
  40b110:	int    0xd7
  40b112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b113:	jmp    0x1b84:0x5beafa5d
  40b11a:	test   BYTE PTR [edi],0x36
  40b11d:	or     edi,ebx
  40b11f:	mov    ds:0x54135852,al
  40b124:	popf   
  40b125:	push   ds
  40b126:	dec    esi
  40b127:	pusha  
  40b128:	mov    DWORD PTR [edi-0x8],ebx
  40b12b:	leave  
  40b12c:	jl     0x40b1ad
  40b12e:	cs mov edi,0xdb31846f
  40b134:	and    BYTE PTR [eax],dl
  40b136:	jmp    0x40b12e
  40b138:	and    eax,0xd6434d9
  40b13d:	into   
  40b13e:	ret    0x9f15
  40b141:	fst    QWORD PTR [ebp+ebp*4+0x6d37c8d7]
  40b148:	cmp    al,bh
  40b14a:	xchg   edi,eax
  40b14b:	pop    esi
  40b14c:	cmp    ecx,DWORD PTR [eax-0x5]
  40b14f:	fs mov ch,0x6a
  40b152:	pop    ebp
  40b153:	push   ebx
  40b154:	mov    bh,BYTE PTR [ebx+0x33e00cb2]
  40b15a:	fwait
  40b15b:	and    BYTE PTR [eax],0x83
  40b15e:	js     0x40b112
  40b160:	clc    
  40b161:	xor    al,0x15
  40b163:	mov    ds:0x8f50de6,al
  40b168:	sbb    DWORD PTR [ebp+0x2b],eax
  40b16b:	mov    BYTE PTR [ebx-0x37ed0ae3],ch
  40b171:	push   0xffffff93
  40b173:	dec    edi
  40b174:	and    bh,dl
  40b176:	add    BYTE PTR [ecx],bl
  40b178:	sbb    BYTE PTR [esi+0x10a0601f],dl
  40b17e:	xor    DWORD PTR [edx-0x1b],esi
  40b181:	pop    ss
  40b182:	outs   dx,BYTE PTR ds:[esi]
  40b183:	add    al,0xe8
  40b185:	out    dx,eax
  40b186:	mov    ebx,0x87acfce4
  40b18b:	(bad)  
  40b18c:	fmul   st,st(1)
  40b18e:	pop    ebp
  40b18f:	iret   
  40b190:	jmp    0x40b155
  40b192:	pushf  
  40b193:	inc    ebp
  40b194:	add    ch,BYTE PTR [esi-0x72]
  40b197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b198:	test   BYTE PTR [ebp+0x29a20db0],ah
  40b19e:	and    al,0xb8
  40b1a0:	xor    ebx,DWORD PTR [ebp+eax*4+0x31]
  40b1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1a5:	out    0x88,al
  40b1a7:	jns    0x40b1be
  40b1a9:	repnz int 0x0
  40b1ac:	dec    eax
  40b1ad:	fdivrp st(2),st
  40b1af:	mov    DWORD PTR [ebp-0x3d75a6b9],ebx
  40b1b5:	imul   ecx,DWORD PTR [ebx+0x2ce24ad6],0xfca9d114
  40b1bf:	fist   DWORD PTR [edi+0x7d1a4f19]
  40b1c5:	xor    esi,DWORD PTR [eax+0x26]
  40b1c8:	mov    dl,0x9f
  40b1ca:	jl     0x40b208
  40b1cc:	jg     0x40b1d6
  40b1ce:	and    eax,0x1b74cf9c
  40b1d3:	fwait
  40b1d4:	js     0x40b216
  40b1d6:	mov    bh,0xa5
  40b1d8:	test   eax,0x2f8309ec
  40b1dd:	aaa    
  40b1de:	pop    ds
  40b1df:	or     al,0x56
  40b1e1:	nop
  40b1e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1e3:	xor    ah,BYTE PTR [edx-0x490ce4ae]
  40b1e9:	stc    
  40b1ea:	popa   
  40b1eb:	cmp    al,0x56
  40b1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ee:	cmp    DWORD PTR [edi],eax
  40b1f0:	sbb    eax,0xeb0f4917
  40b1f5:	xor    DWORD PTR fs:[eax-0x21],ebp
  40b1f9:	xchg   esp,eax
  40b1fa:	mov    al,0x17
  40b1fc:	dec    ebx
  40b1fd:	sub    esi,ebp
  40b1ff:	jbe    0x40b1ca
  40b201:	(bad)  
  40b202:	lea    esp,[edi+0x707d5cc6]
  40b208:	imul   esi,DWORD PTR gs:[ecx+ebp*2-0x1a85ab1d],0xffffffed
  40b211:	inc    edi
  40b212:	scas   eax,DWORD PTR es:[edi]
  40b213:	test   DWORD PTR [ecx-0x34011372],ecx
  40b219:	ror    DWORD PTR [ebp-0x1b],cl
  40b21c:	push   ebp
  40b21d:	or     DWORD PTR [edx-0x75],esi
  40b220:	in     al,0xc2
  40b222:	outs   dx,DWORD PTR ds:[esi]
  40b223:	inc    ecx
  40b224:	into   
  40b225:	inc    eax
  40b226:	cs popf 
  40b228:	jne    0x40b22d
  40b22a:	dec    esi
  40b22b:	add    DWORD PTR [edi+0x2636ee65],esp
  40b231:	xchg   DWORD PTR [ebp-0x4ebf01ad],edi
  40b237:	push   ebx
  40b238:	icebp  
  40b239:	fs scas eax,DWORD PTR es:[edi]
  40b23b:	mov    ch,BYTE PTR [eax-0x1474b11b]
  40b241:	inc    sp
  40b243:	(bad)  
  40b244:	and    al,0x16
  40b246:	adc    bl,bl
  40b248:	sbb    eax,0x770437b6
  40b24d:	sbb    esp,ecx
  40b24f:	repnz loope 0x40b1e4
  40b252:	or     BYTE PTR [edx],bh
  40b254:	dec    ebp
  40b255:	sbb    al,0x11
  40b257:	mov    bl,0x64
  40b259:	fst    DWORD PTR [edx]
  40b25b:	test   al,dl
  40b25d:	out    dx,al
  40b25e:	xchg   ebx,eax
  40b25f:	mov    al,ds:0x58562d4a
  40b264:	loopne 0x40b2b8
  40b266:	mov    bh,0xe8
  40b268:	js     0x40b1fb
  40b26a:	sahf   
  40b26b:	push   ecx
  40b26c:	mov    ch,0xee
  40b26e:	pop    esi
  40b26f:	pop    edx
  40b270:	mov    al,0x5d
  40b272:	fdivrp st(5),st
  40b274:	add    eax,0xc0e502fd
  40b279:	fld    DWORD PTR [edi]
  40b27b:	jne    0x40b276
  40b27d:	mul    DWORD PTR [ebx-0x35]
  40b280:	sbb    DWORD PTR [esi+0x46c051e5],ebp
  40b286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b287:	fs cmc 
  40b289:	into   
  40b28a:	and    al,BYTE PTR [edi]
  40b28c:	dec    eax
  40b28d:	add    edi,DWORD PTR [ebp+0x26]
  40b290:	addr16 push ds
  40b292:	or     DWORD PTR [ecx+0x63bd92dd],0x38
  40b299:	inc    ebp
  40b29a:	enter  0x7d71,0x4a
  40b29e:	add    eax,0x4f436fa1
  40b2a3:	mov    ebx,0x153682e7
  40b2a8:	test   DWORD PTR [esi],0x5f52144c
  40b2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2af:	std    
  40b2b0:	lds    ebp,FWORD PTR [ebx]
  40b2b2:	aam    0x20
  40b2b4:	lea    edx,[ebx]
  40b2b6:	or     ecx,ebp
  40b2b8:	mov    ch,dl
  40b2ba:	jns    0x40b320
  40b2bc:	pop    bx
  40b2be:	xchg   esi,eax
  40b2bf:	mov    ds:0x32113660,eax
  40b2c4:	adc    al,0xe2
  40b2c6:	jl     0x40b2a2
  40b2c8:	ins    BYTE PTR es:[edi],dx
  40b2c9:	or     dh,BYTE PTR ds:0x687c3a0d
  40b2cf:	scas   ax,WORD PTR es:[edi]
  40b2d1:	ds cwde 
  40b2d3:	pop    ecx
  40b2d4:	mov    esi,0x68f0428e
  40b2d9:	int3   
  40b2da:	jl     0x40b288
  40b2dc:	nop
  40b2dd:	enter  0xdadf,0x1d
  40b2e1:	inc    ebp
  40b2e2:	iret   
  40b2e3:	mov    esi,0x9fe78e83
  40b2e8:	push   esi
  40b2e9:	jno    0x40b349
  40b2eb:	mov    bh,0x41
  40b2ed:	rcr    ebp,cl
  40b2ef:	pop    ebx
  40b2f0:	and    esp,edi
  40b2f2:	sti    
  40b2f3:	and    eax,0xd97d4cbf
  40b2f8:	push   es
  40b2f9:	sbb    DWORD PTR [edi+0x49278f22],0xffffff92
  40b300:	or     BYTE PTR [ecx-0x9850e6f],al
  40b306:	retf   
  40b307:	scas   al,BYTE PTR es:[edi]
  40b308:	and    eax,0x2ef2be95
  40b30d:	mov    ah,0xe4
  40b30f:	loop   0x40b36c
  40b311:	sbb    al,0x11
  40b313:	sbb    al,0x46
  40b315:	lock pop esp
  40b317:	pop    ebx
  40b318:	mov    ebx,0x5e0fe546
  40b31d:	shr    BYTE PTR [esi+0x75860445],cl
  40b323:	sbb    dh,dh
  40b325:	pop    ebp
  40b326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b327:	ss mul dl
  40b32a:	lods   al,BYTE PTR ds:[esi]
  40b32b:	inc    eax
  40b32c:	cmc    
  40b32d:	sub    DWORD PTR [ecx-0x25],esp
  40b330:	daa    
  40b331:	push   esp
  40b332:	iret   
  40b333:	ja     0x40b3a9
  40b335:	arpl   WORD PTR [esi],bx
  40b337:	fadd   QWORD PTR [ebx]
  40b339:	pushf  
  40b33a:	(bad)  
  40b33b:	mov    dl,0xf
  40b33d:	outs   dx,BYTE PTR ds:[esi]
  40b33e:	call   DWORD PTR [ecx+ebp*1-0x24]
  40b342:	pushw  cs
  40b344:	mov    ebp,0x466ca413
  40b349:	xor    al,0xb2
  40b34b:	jae    0x40b353
  40b34d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b34e:	test   al,0x7e
  40b350:	push   ss
  40b351:	mov    bh,0xe8
  40b353:	outs   dx,BYTE PTR ds:[esi]
  40b354:	data16 jg 0x40b3a4
  40b357:	add    DWORD PTR [ebx-0x729393c8],edx
  40b35d:	shl    bh,cl
  40b35f:	scas   eax,DWORD PTR es:[edi]
  40b360:	test   BYTE PTR [edi-0x6781040c],ch
  40b366:	call   DWORD PTR [eax+eax*2-0x69]
  40b36a:	xchg   ebx,eax
  40b36b:	mov    dh,0x68
  40b36d:	in     eax,0xd5
  40b36f:	int    0x6d
  40b371:	(bad)  
  40b372:	cmp    BYTE PTR [ecx+0x71],dl
  40b375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b377:	int    0x4f
  40b379:	pushf  
  40b37a:	aas    
  40b37b:	xor    DWORD PTR [edi-0x51],esp
  40b37e:	daa    
  40b37f:	cmp    dl,BYTE PTR [edi+0x13289e09]
  40b385:	push   edi
  40b386:	loopne 0x40b3f4
  40b388:	out    0x42,al
  40b38a:	xor    al,0x86
  40b38c:	retf   0xccc7
  40b38f:	lods   al,BYTE PTR ds:[esi]
  40b390:	shl    BYTE PTR [esi+esi*2+0x228f65eb],0x10
  40b398:	push   edx
  40b399:	jge    0x40b39b
  40b39b:	xchg   DWORD PTR [esi-0x6f2732db],ebx
  40b3a1:	sahf   
  40b3a2:	cmc    
  40b3a3:	push   cs
  40b3a4:	daa    
  40b3a5:	jae    0x40b3d2
  40b3a7:	fisttp DWORD PTR [ecx-0x51]
  40b3aa:	call   0xeb8f:0x8f8fd669
  40b3b1:	shr    DWORD PTR [edi+0x8c908f8],1
  40b3b7:	outs   dx,DWORD PTR ds:[esi]
  40b3b8:	push   ecx
  40b3b9:	pop    ebx
  40b3ba:	into   
  40b3bb:	jns    0x40b3c2
  40b3bd:	mov    eax,0x9a83ef60
  40b3c2:	sub    edx,edx
  40b3c4:	sar    ch,0x7e
  40b3c7:	push   ebx
  40b3c8:	xchg   DWORD PTR [esi+ebp*4+0x170d6a1d],ebp
  40b3cf:	test   eax,0xa42e174a
  40b3d4:	push   ss
  40b3d5:	sub    DWORD PTR [ebx],eax
  40b3d7:	(bad)  
  40b3d8:	ret    0xe912
  40b3db:	xor    DWORD PTR [edi],eax
  40b3dd:	int3   
  40b3de:	arpl   WORD PTR [edx+0x5a],ax
  40b3e1:	sbb    DWORD PTR [eax],esp
  40b3e3:	mov    esp,0x5ab7edac
  40b3e8:	jb     0x40b413
  40b3ea:	bound  ecx,QWORD PTR [ebx-0x30966b2e]
  40b3f0:	stos   DWORD PTR es:[edi],eax
  40b3f1:	mov    WORD PTR [ecx-0xc1f9442],cs
  40b3f7:	adc    eax,0x6c0c66cf
  40b3fc:	rcr    DWORD PTR [esi+0x75a8e6a7],1
  40b402:	inc    esp
  40b403:	popf   
  40b404:	xlat   BYTE PTR ds:[ebx]
  40b405:	int3   
  40b406:	or     al,0x2d
  40b408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b409:	fwait
  40b40a:	mov    edx,0x927e3150
  40b40f:	xor    edi,DWORD PTR [eax+ebx*4+0x3d6eca]
  40b416:	inc    ebx
  40b417:	mov    ?,WORD PTR [esp+ebp*8]
  40b41a:	imul   ecx,ebx,0x8672fbb6
  40b420:	stos   DWORD PTR es:[edi],eax
  40b421:	clc    
  40b422:	nop
  40b423:	ins    BYTE PTR es:[edi],dx
  40b424:	adc    eax,0x9d4bb8ca
  40b429:	add    eax,0x96049c0b
  40b42e:	ror    ecx,0x64
  40b431:	stc    
  40b432:	mov    ecx,0xcae9e097
  40b437:	sti    
  40b438:	sbb    eax,0x13046048
  40b43d:	xchg   edx,eax
  40b43e:	leave  
  40b43f:	mov    esp,0x1eede5cd
  40b444:	xchg   esi,eax
  40b445:	jo     0x40b3e3
  40b447:	adc    ebx,esi
  40b449:	ds xchg esp,eax
  40b44b:	mov    ah,0x7f
  40b44d:	cli    
  40b44e:	push   ebx
  40b44f:	jecxz  0x40b46d
  40b451:	loop   0x40b484
  40b453:	adc    al,0x38
  40b455:	in     al,0x93
  40b457:	sub    eax,0xa3f713e4
  40b45c:	jmp    0x3eacbfa9
  40b461:	push   ebp
  40b462:	(bad)  
  40b464:	push   ecx
  40b465:	(bad)  
  40b466:	push   edx
  40b467:	adc    DWORD PTR [ecx-0x30],esi
  40b46a:	cmp    DWORD PTR [ecx+0x1967e5eb],ebx
  40b470:	fiadd  WORD PTR [edi]
  40b472:	mov    edi,eax
  40b474:	add    al,0x3
  40b476:	and    esp,DWORD PTR [edx+edx*4-0xc]
  40b47a:	fst    QWORD PTR [esi-0x54]
  40b47d:	(bad)  
  40b47f:	or     al,0x89
  40b481:	popa   
  40b482:	and    DWORD PTR [ecx+0x40ac637d],ebx
  40b488:	sub    cl,bl
  40b48a:	aam    0xbf
  40b48c:	outs   dx,DWORD PTR ds:[esi]
  40b48d:	and    DWORD PTR [ecx+ebp*8-0x5ceb5e20],esp
  40b494:	sbb    al,0x63
  40b496:	sar    ebp,cl
  40b498:	xor    eax,0xac4daa0c
  40b49d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b49e:	xor    ecx,esp
  40b4a0:	(bad)  
  40b4a1:	xchg   ecx,eax
  40b4a2:	test   eax,0xa7f90687
  40b4a7:	jmp    0x8f95a06a
  40b4ac:	pop    eax
  40b4ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4ae:	cld    
  40b4af:	xchg   esi,eax
  40b4b0:	pop    ecx
  40b4b1:	ja     0x40b4d7
  40b4b3:	lahf   
  40b4b4:	sub    bl,dh
  40b4b6:	adc    bl,BYTE PTR [esi+0x70]
  40b4b9:	fwait
  40b4ba:	imul   ebp,esp,0x6c1ed779
  40b4c0:	jae    0x40b50b
  40b4c2:	sahf   
  40b4c3:	shr    BYTE PTR [esi-0x3b],1
  40b4c6:	cmp    DWORD PTR [eax],0xfffffff6
  40b4c9:	sbb    esi,DWORD PTR [edi]
  40b4cb:	ror    dh,0x65
  40b4ce:	pusha  
  40b4cf:	jmp    0xb70814a9
  40b4d4:	push   es
  40b4d5:	lock xchg esp,eax
  40b4d7:	jne    0x40b466
  40b4d9:	xchg   esi,eax
  40b4da:	mov    al,ds:0x2d7b5c7e
  40b4df:	jmp    0x107f:0xd3c747b
  40b4e6:	mov    eax,0x354a9330
  40b4eb:	call   0x5be0602c
  40b4f0:	ss pop ebp
  40b4f2:	jmp    0x40b4a1
  40b4f4:	xchg   ebp,eax
  40b4f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4f6:	jmp    0x34abc7da
  40b4fb:	ins    BYTE PTR es:[edi],dx
  40b4fc:	cmp    edi,DWORD PTR cs:[edx]
  40b4ff:	inc    edi
  40b500:	jne    0x40b4d5
  40b502:	mov    edx,0x29e5869a
  40b507:	stos   DWORD PTR es:[edi],eax
  40b508:	mov    ah,0xae
  40b50a:	xor    eax,0xb6646ff2
  40b50f:	lea    ebx,[ebx]
  40b511:	mov    dl,0x75
  40b513:	int    0x4c
  40b515:	rcr    BYTE PTR [edi],cl
  40b517:	hlt    
  40b518:	gs pop edx
  40b51a:	mov    bl,0x3c
  40b51c:	stc    
  40b51d:	mov    al,ds:0x7db875ab
  40b522:	jb     0x40b599
  40b524:	jo     0x40b524
  40b526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b527:	mov    edi,0x8643fd15
  40b52c:	les    ecx,FWORD PTR [ebx+0x5d]
  40b52f:	mov    edx,0x5612c59d
  40b534:	js     0x40b4f4
  40b536:	or     eax,0xad33954d
  40b53b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b53c:	(bad)  
  40b53d:	mov    ah,0x30
  40b53f:	aaa    
  40b540:	push   ebx
  40b541:	sub    al,0xf9
  40b543:	inc    ecx
  40b544:	stc    
  40b545:	pop    es
  40b546:	mov    ch,0xe2
  40b548:	mov    gs,WORD PTR [edi-0x28791ff5]
  40b54e:	adc    al,0xa8
  40b550:	(bad)
  40b555:	ret    
  40b556:	push   es
  40b557:	inc    esp
  40b558:	jbe    0x40b530
  40b55a:	dec    esp
  40b55b:	clc    
  40b55c:	cs cmp eax,0x24e6d7d3
  40b562:	mov    ebp,0xddbabdf4
  40b567:	sub    al,0x5
  40b569:	sub    al,0xfc
  40b56b:	out    dx,al
  40b56c:	jno    0x40b53d
  40b56e:	retf   
  40b56f:	aad    0x1d
  40b571:	bound  ecx,QWORD PTR [eax]
  40b573:	sub    eax,0x42c937da
  40b578:	test   DWORD PTR [edi+0x31],eax
  40b57b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b57c:	push   ss
  40b57d:	arpl   WORD PTR [esi],di
  40b57f:	mov    dh,0x2f
  40b581:	sti    
  40b582:	jp     0x40b559
  40b584:	lock daa 
  40b586:	int3   
  40b587:	mov    dh,BYTE PTR [edx+edx*4+0x787dcbc6]
  40b58e:	cmc    
  40b58f:	push   esi
  40b590:	cmp    BYTE PTR [esi-0x40],bl
  40b593:	adc    dl,BYTE PTR [eax+0x334e55f3]
  40b599:	cld    
  40b59a:	test   BYTE PTR [edi+ecx*2],bl
  40b59d:	sti    
  40b59e:	xchg   esi,eax
  40b59f:	xlat   BYTE PTR ds:[ebx]
  40b5a0:	pusha  
  40b5a1:	xor    edx,DWORD PTR [ebx]
  40b5a3:	scas   al,BYTE PTR es:[edi]
  40b5a4:	test   ecx,ebx
  40b5a6:	sbb    DWORD PTR [eax+0xe],ebp
  40b5a9:	push   ecx
  40b5aa:	inc    edi
  40b5ab:	test   BYTE PTR [edi+0x61],dh
  40b5ae:	popa   
  40b5af:	loope  0x40b5dc
  40b5b1:	pushw  0x6
  40b5b4:	xchg   ebx,eax
  40b5b5:	in     al,dx
  40b5b6:	dec    edi
  40b5b7:	pushf  
  40b5b8:	daa    
  40b5b9:	push   es
  40b5ba:	scas   al,BYTE PTR es:[edi]
  40b5bb:	jb     0x40b630
  40b5bd:	repz cmp BYTE PTR [edi],bl
  40b5c0:	xlat   BYTE PTR ds:[ebx]
  40b5c1:	mov    ah,0x44
  40b5c3:	jle    0x40b57e
  40b5c5:	fs int 0x38
  40b5c8:	ds into 
  40b5ca:	push   ss
  40b5cb:	xor    DWORD PTR [esi+0x75],edi
  40b5ce:	call   0xaaa2ee3f
  40b5d3:	jecxz  0x40b59c
  40b5d5:	adc    al,0x24
  40b5d7:	inc    edx
  40b5d8:	popa   
  40b5d9:	or     eax,ebp
  40b5db:	fild   QWORD PTR [eax-0x15]
  40b5de:	add    dh,BYTE PTR [esi]
  40b5e0:	xlat   BYTE PTR ds:[ebx]
  40b5e1:	mov    ebx,0xe7444816
  40b5e6:	icebp  
  40b5e7:	fucomi st,st(1)
  40b5e9:	fdivp  st(4),st
  40b5eb:	das    
  40b5ec:	pusha  
  40b5ed:	mov    esp,0xe11c9701
  40b5f2:	lods   al,BYTE PTR ds:[esi]
  40b5f3:	xchg   edi,eax
  40b5f4:	and    DWORD PTR [ecx-0x73],esp
  40b5f7:	call   0x1cf5:0x71900611
  40b5fe:	push   esp
  40b5ff:	in     eax,dx
  40b600:	sbb    dl,BYTE PTR [ecx-0x5e065fb4]
  40b606:	jp     0x40b636
  40b608:	xchg   edx,eax
  40b609:	je     0x40b5d7
  40b60b:	bound  ecx,QWORD PTR [ebx]
  40b60d:	xchg   ebx,eax
  40b60e:	inc    BYTE PTR [ecx+0x7b0dc092]
  40b614:	iret   
  40b615:	lock lods al,BYTE PTR ds:[esi]
  40b617:	add    esi,ebp
  40b619:	inc    ecx
  40b61a:	sub    al,0xe0
  40b61c:	adc    eax,0x969fc504
  40b621:	push   cs
  40b622:	ret    0xd7f3
  40b625:	fld    DWORD PTR [ecx-0x48585d1b]
  40b62b:	push   ecx
  40b62c:	(bad)  
  40b62e:	(bad)  [esi-0x6f8e1cff]
  40b634:	xchg   esp,eax
  40b635:	in     al,dx
  40b636:	sub    BYTE PTR [edi-0x392db755],dh
  40b63c:	outs   dx,BYTE PTR ds:[esi]
  40b63d:	ret    0x2450
  40b640:	pushf  
  40b641:	add    ebx,ebx
  40b643:	sti    
  40b644:	addr16 enter 0x848,0x24
  40b649:	cmp    eax,0x1e147ce0
  40b64e:	data16 and BYTE PTR [ebx+ebx*1],0x7c
  40b653:	push   eax
  40b654:	sbb    eax,DWORD PTR [ebp+0x714df62a]
  40b65a:	cmp    al,0x80
  40b65c:	bound  edx,QWORD PTR [ebp+0x4a]
  40b65f:	push   ss
  40b660:	scas   al,BYTE PTR es:[edi]
  40b661:	pand   mm0,QWORD PTR [esi-0x11]
  40b665:	mov    esp,0xfbab3254
  40b66a:	shl    BYTE PTR [eiz*1-0x5580aa41],cl
  40b671:	xchg   edi,eax
  40b672:	aad    0x45
  40b674:	push   ebx
  40b675:	cli    
  40b676:	push   es
  40b677:	ss pushf 
  40b679:	gs (bad) 
  40b67c:	int3   
  40b67d:	push   edx
  40b67e:	or     DWORD PTR [edi+0x85818a],esi
  40b684:	mov    BYTE PTR [eax-0x359efcfa],ch
  40b68a:	jns    0x40b644
  40b68c:	and    DWORD PTR [ebp+0x1],edi
  40b68f:	js     0x40b6b1
  40b691:	adc    bl,BYTE PTR [edi]
  40b693:	nop
  40b694:	or     ah,0xda
  40b697:	and    ebp,DWORD PTR [ecx-0x45]
  40b69a:	scas   eax,DWORD PTR es:[edi]
  40b69b:	xor    dl,bh
  40b69d:	mov    esp,0x313fe170
  40b6a2:	inc    edx
  40b6a3:	mov    ah,0xd7
  40b6a5:	je     0x40b694
  40b6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6a8:	repz fwait
  40b6aa:	push   0xffffff91
  40b6ac:	imul   BYTE PTR [esp+edx*1-0x3c]
  40b6b0:	clc    
  40b6b1:	pop    ds
  40b6b2:	hlt    
  40b6b3:	fisttp WORD PTR [eax-0x3f]
  40b6b6:	jg     0x40b6d0
  40b6b8:	mov    ?,WORD PTR [ebp-0x42cfa3cd]
  40b6be:	sub    al,0xa5
  40b6c0:	aam    0xaa
  40b6c2:	sub    bh,bh
  40b6c4:	ds jnp 0x40b6a2
  40b6c7:	(bad)
  40b6cb:	aas    
  40b6cc:	mov    al,ds:0x2f0be3c3
  40b6d1:	jbe    0x40b727
  40b6d3:	rcr    BYTE PTR [esi+ecx*4-0x4bb814df],1
  40b6da:	and    cl,BYTE PTR [ebx+0x2df1526e]
  40b6e0:	push   edi
  40b6e1:	pop    es
  40b6e2:	pop    esi
  40b6e3:	icebp  
  40b6e4:	pop    ecx
  40b6e5:	loop   0x40b6a8
  40b6e7:	cmp    eax,0x30a0afd1
  40b6ec:	data16 (bad) 
  40b6ee:	dec    ebx
  40b6ef:	stos   DWORD PTR es:[edi],eax
  40b6f0:	and    DWORD PTR [ecx-0x28],0x18416a5e
  40b6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6f8:	cli    
  40b6f9:	sti    
  40b6fa:	shl    DWORD PTR [ebp+0x7d],1
  40b6fd:	xchg   ecx,eax
  40b6fe:	fcomp  QWORD PTR [edx-0x4dad25c7]
  40b704:	and    DWORD PTR [ebx+0x47],edx
  40b707:	fiadd  DWORD PTR [ecx]
  40b709:	push   esp
  40b70a:	add    eax,0xdf2c7624
  40b70f:	mov    DWORD PTR [edx-0x1d67cd8e],eax
  40b715:	mov    fs,ebp
  40b717:	mov    edx,0x28a648b2
  40b71c:	xor    edi,ecx
  40b71e:	dec    edi
  40b71f:	(bad)
  40b722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b723:	nop
  40b724:	shr    DWORD PTR [esi+esi*2],0x7b
  40b728:	dec    esp
  40b729:	or     DWORD PTR [edx+0x1c],ebp
  40b72c:	xlat   BYTE PTR ds:[ebx]
  40b72d:	hlt    
  40b72e:	(bad)  
  40b72f:	(bad)  
  40b730:	(bad)  
  40b731:	(bad)  
  40b732:	pop    ss
  40b733:	pusha  
  40b734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b735:	fidiv  DWORD PTR [edi+0x26]
  40b738:	in     eax,dx
  40b739:	rcl    DWORD PTR [edx-0x6f],cl
  40b73c:	jle    0x40b6e9
  40b73e:	jne    0x40b755
  40b740:	retfw  
  40b742:	jg     0x40b79b
  40b744:	rol    DWORD PTR [edx-0x17c42fee],1
  40b74a:	dec    ecx
  40b74b:	lahf   
  40b74c:	push   es
  40b74d:	mov    WORD PTR [edx],?
  40b74f:	or     eax,0x8072fb3d
  40b754:	inc    ecx
  40b755:	mov    bl,0xb2
  40b757:	mov    al,ds:0xdb9b94af
  40b75c:	sbb    al,0xd2
  40b75e:	xchg   BYTE PTR [ebx],ah
  40b760:	retf   0xea0b
  40b763:	and    edi,DWORD PTR [esi-0x3e]
  40b766:	rcr    BYTE PTR [ebp+0x55595422],1
  40b76c:	rcr    DWORD PTR [ecx+eax*4-0x4389e3db],0x2f
  40b774:	mov    cs,WORD PTR [ebx+0x2]
  40b777:	xchg   BYTE PTR [esp+ebx*8-0x9cb18a],bh
  40b77e:	adc    cl,cl
  40b780:	mov    ebp,0x15f8c923
  40b785:	jge    0x40b7b4
  40b787:	dec    edi
  40b788:	mov    bl,ch
  40b78a:	(bad)  
  40b78b:	and    al,0x81
  40b78d:	add    esi,DWORD PTR [edx-0x2d]
  40b790:	cmp    al,0xd7
  40b792:	xor    cl,BYTE PTR [eax]
  40b794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b795:	xor    BYTE PTR fs:[edi],cl
  40b798:	arpl   WORD PTR [edx],cx
  40b79a:	ret    0x89d4
  40b79d:	xor    ah,dh
  40b79f:	jp     0x40b7b8
  40b7a1:	loopne 0x40b7f7
  40b7a3:	(bad)  
  40b7a4:	adc    cl,BYTE PTR ds:0xe87bf464
  40b7aa:	mov    esp,0x518b3b16
  40b7af:	xlat   BYTE PTR ds:[ebx]
  40b7b0:	mov    ebx,0x1241f159
  40b7b5:	xlat   BYTE PTR ds:[ebx]
  40b7b6:	arpl   ax,si
  40b7b8:	push   0xc2012b25
  40b7bd:	jmp    0x40b827
  40b7bf:	inc    ecx
  40b7c0:	cmp    BYTE PTR [ebp+0x10],cl
  40b7c3:	daa    
  40b7c4:	jl     0x40b80b
  40b7c6:	lock lahf 
  40b7c8:	ins    BYTE PTR es:[edi],dx
  40b7c9:	pop    esi
  40b7ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7cb:	retf   
  40b7cc:	mov    edx,0xfdee88bd
  40b7d1:	cmp    eax,0xe002c343
  40b7d6:	sti    
  40b7d7:	call   0x4dd647e9
  40b7dc:	imul   DWORD PTR [esp+edx*1]
  40b7df:	cmp    eax,0x2501e0bf
  40b7e4:	sub    DWORD PTR [eax+edi*8-0x35a7f7ff],ebx
  40b7eb:	jne    0x40b7fc
  40b7ed:	test   edi,eax
  40b7ef:	jbe    0x40b85c
  40b7f1:	dec    ebx
  40b7f2:	in     al,0xeb
  40b7f4:	mov    cl,0x55
  40b7f6:	xor    al,0x2b
  40b7f8:	retf   
  40b7f9:	push   ecx
  40b7fa:	adc    eax,0xc9ceadb0
  40b7ff:	xchg   esp,eax
  40b800:	pop    es
  40b801:	mov    ebx,0x1a38d0de
  40b806:	aas    
  40b807:	push   ss
  40b808:	or     DWORD PTR [ebx-0x799fbcdf],0xffffffc1
  40b80f:	lea    eax,[ebp-0x4]
  40b812:	fxch   st(6)
  40b814:	pop    es
  40b815:	inc    edx
  40b816:	mov    WORD PTR [ecx],ss
  40b818:	push   ebp
  40b819:	fmul   QWORD PTR [eax-0x6bd87017]
  40b81f:	scas   al,BYTE PTR es:[edi]
  40b820:	xor    BYTE PTR [ebx+0x4d],al
  40b823:	jge    0x40b884
  40b825:	jae    0x40b86d
  40b827:	mov    al,0xc9
  40b829:	mov    bl,0x4e
  40b82b:	push   cs
  40b82c:	add    al,0xe2
  40b82e:	mov    ebx,0x7a2cae46
  40b833:	and    BYTE PTR [edx-0x36],0xe6
  40b837:	mov    dl,0x13
  40b839:	or     DWORD PTR [ebp-0x13],edi
  40b83c:	lds    edi,FWORD PTR [ecx+edx*4-0x51c7d588]
  40b843:	ins    DWORD PTR es:[edi],dx
  40b844:	xor    ebp,DWORD PTR ds:0x5177ef39
  40b84a:	shr    DWORD PTR [esi-0x5cce461a],1
  40b850:	dec    edx
  40b851:	xchg   dh,dl
  40b853:	push   ecx
  40b854:	push   edi
  40b855:	outs   dx,DWORD PTR ds:[esi]
  40b856:	push   ds
  40b857:	push   ss
  40b858:	lea    esp,[eax-0x14]
  40b85b:	iret   
  40b85c:	jmp    0x35ac2c5b
  40b861:	cwde   
  40b862:	stc    
  40b863:	ret    
  40b864:	cld    
  40b865:	and    eax,DWORD PTR [esi+esi*8-0x38fca60b]
  40b86c:	push   eax
  40b86d:	shr    ebp,1
  40b86f:	pop    esi
  40b870:	adc    DWORD PTR ds:0x216288f1,0xda45e18c
  40b87a:	and    dh,ch
  40b87c:	outs   dx,BYTE PTR ds:[esi]
  40b87d:	inc    ebp
  40b87e:	sub    BYTE PTR [ecx-0x2b1d95a5],al
  40b884:	sbb    al,0x62
  40b886:	jo     0x40b85a
  40b888:	adc    eax,0x92b7a380
  40b88d:	jo     0x40b88c
  40b88f:	test   dl,cl
  40b891:	outs   dx,DWORD PTR ds:[esi]
  40b892:	in     eax,dx
  40b893:	inc    ebx
  40b894:	sbb    eax,0x407421f
  40b899:	inc    esp
  40b89a:	sub    eax,0xa08879e1
  40b89f:	imul   ebx,edx,0xfffffff1
  40b8a2:	pop    ds
  40b8a3:	xchg   esp,eax
  40b8a4:	arpl   WORD PTR [ebp-0x5bc664bb],di
  40b8aa:	(bad)  
  40b8ab:	fisttp QWORD PTR [ebx]
  40b8ad:	pushf  
  40b8ae:	cmp    bh,bh
  40b8b0:	repz je 0x40b895
  40b8b3:	dec    ebp
  40b8b4:	pop    edi
  40b8b5:	jno    0x40b898
  40b8b7:	mov    cl,0xe4
  40b8b9:	popa   
  40b8ba:	push   esp
  40b8bb:	xor    BYTE PTR [eax],bl
  40b8bd:	pop    ebx
  40b8be:	jae    0x40b8aa
  40b8c0:	out    dx,eax
  40b8c1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8c3:	cmp    dl,BYTE PTR [ebx-0x238e7a5b]
  40b8c9:	stos   DWORD PTR es:[edi],eax
  40b8ca:	jb     0x40b885
  40b8cc:	pop    eax
  40b8cd:	jnp    0x40b920
  40b8cf:	xor    DWORD PTR [esi],ecx
  40b8d1:	add    dh,al
  40b8d3:	mov    BYTE PTR [eax-0x7b],bl
  40b8d6:	lods   al,BYTE PTR ds:[esi]
  40b8d7:	pop    ebp
  40b8d8:	mov    ds:0xa48b7b78,al
  40b8dd:	or     eax,DWORD PTR [ecx+0x19]
  40b8e0:	hlt    
  40b8e1:	in     al,dx
  40b8e2:	neg    BYTE PTR [edx]
  40b8e4:	xor    al,0x4f
  40b8e6:	pop    eax
  40b8e7:	out    dx,eax
  40b8e8:	or     ebp,DWORD PTR [edi]
  40b8ea:	mov    DWORD PTR [esi+ebp*2],eax
  40b8ed:	mov    ds:0x92cabe6e,eax
  40b8f2:	mov    ebp,DWORD PTR [edi-0x69cb3142]
  40b8f8:	push   eax
  40b8f9:	daa    
  40b8fa:	add    ah,al
  40b8fc:	call   0xc7ae4725
  40b901:	adc    al,0x79
  40b903:	mov    edi,0x29a29c15
  40b908:	mov    edx,0x60001b9a
  40b90d:	aaa    
  40b90e:	cli    
  40b90f:	add    BYTE PTR [eax-0x4c],0x3f
  40b913:	jl     0x40b8a5
  40b915:	imul   esp,DWORD PTR [ebx],0xffffffa9
  40b918:	sbb    BYTE PTR [ebx],bh
  40b91a:	inc    ecx
  40b91b:	sar    DWORD PTR [eax+0x3e],0x66
  40b91f:	cmpps  xmm3,xmm3,0x36
  40b923:	jae    0x40b98b
  40b925:	repz ror DWORD PTR [ecx],1
  40b928:	inc    ebp
  40b929:	fstp   DWORD PTR [ebp+0x19763979]
  40b92f:	mov    ecx,0xdf593458
  40b934:	xchg   BYTE PTR [edi],bl
  40b936:	fsub   QWORD PTR [esi+0x26bb1257]
  40b93c:	retf   0xbea2
  40b93f:	adc    eax,0x2fe6201e
  40b944:	adc    cl,BYTE PTR [ecx+eiz*4+0x15bbd9cb]
  40b94b:	out    0x65,eax
  40b94d:	sub    BYTE PTR [ecx-0xb],dl
  40b950:	not    bl
  40b952:	pop    esp
  40b953:	fiadd  DWORD PTR [ecx]
  40b955:	fs push ss
  40b957:	out    dx,al
  40b958:	add    eax,0x27c8a0c3
  40b95d:	xchg   esi,ebx
  40b95f:	xor    eax,0xfa870502
  40b964:	dec    ebx
  40b965:	(bad)
  40b968:	idiv   DWORD PTR [esi-0x18438de6]
  40b96e:	or     BYTE PTR [esp+ebx*1],al
  40b971:	xor    eax,ecx
  40b973:	dec    eax
  40b974:	and    DWORD PTR [ebp-0x22],esi
  40b977:	push   0x77
  40b979:	mov    ah,dl
  40b97b:	call   0x11512afb
  40b980:	jg     0x40b96b
  40b982:	pushf  
  40b983:	ja     0x40b9fe
  40b985:	xchg   DWORD PTR [ebp+0x60],esp
  40b988:	xor    eax,0xef968a30
  40b98d:	pop    ecx
  40b98e:	in     eax,dx
  40b98f:	addr16 test eax,0xe8b63ec2
  40b995:	popf   
  40b996:	outs   dx,DWORD PTR ds:[esi]
  40b997:	aas    
  40b998:	sbb    ebp,ebp
  40b99a:	not    DWORD PTR [esi-0xdd84ce3]
  40b9a0:	mov    ch,0x4
  40b9a2:	fcmovne st,st(4)
  40b9a4:	retf   0x7315
  40b9a7:	out    dx,al
  40b9a8:	inc    eax
  40b9a9:	ins    BYTE PTR es:[edi],dx
  40b9aa:	clc    
  40b9ab:	xor    ecx,DWORD PTR [eax+0xa0ba1a5]
  40b9b1:	pushf  
  40b9b2:	iret   
  40b9b3:	jecxz  0x40ba32
  40b9b5:	int3   
  40b9b6:	ds loope 0x40b980
  40b9b9:	das    
  40b9ba:	in     eax,0xc2
  40b9bc:	and    eax,0x82bdb711
  40b9c1:	xchg   ebx,eax
  40b9c2:	inc    esp
  40b9c3:	dec    edx
  40b9c4:	mov    edx,0xae57e83
  40b9c9:	push   es
  40b9ca:	data16 ja 0x40ba4b
  40b9cd:	pop    ecx
  40b9ce:	or     ebx,esp
  40b9d0:	lods   al,BYTE PTR ds:[esi]
  40b9d1:	out    0x7b,al
  40b9d3:	pop    ebx
  40b9d4:	rol    BYTE PTR [eax],0xa6
  40b9d7:	in     eax,0x5f
  40b9d9:	cmp    al,0x95
  40b9db:	adc    ebp,DWORD PTR [ecx+0x6f30e99d]
  40b9e1:	or     cl,BYTE PTR [edi+0x67171927]
  40b9e7:	cmp    BYTE PTR [eax+0x217c947],0x98
  40b9ee:	shl    BYTE PTR [ecx+0x52],1
  40b9f1:	mov    al,ds:0xe738155f
  40b9f6:	mov    ebx,DWORD PTR ds:0x81461f70
  40b9fc:	mov    esp,es
  40b9fe:	mov    bh,dh
  40ba00:	jle    0x40b9a1
  40ba02:	pop    edx
  40ba03:	icebp  
  40ba04:	outs   dx,BYTE PTR ds:[esi]
  40ba05:	mov    esi,0x7e65f481
  40ba0a:	mov    esi,0xf1fe0458
  40ba0f:	pop    es
  40ba10:	repnz cmp edi,DWORD PTR [ecx-0x30]
  40ba14:	rol    BYTE PTR [ebx+eax*4],cl
  40ba17:	call   0x32e9ba0d
  40ba1c:	mul    DWORD PTR [eax-0x37]
  40ba1f:	les    ecx,FWORD PTR [esi+0x52]
  40ba22:	test   eax,0x6a80b7b
  40ba27:	or     BYTE PTR [eax-0x61],ah
  40ba2a:	and    eax,0xcc8c5347
  40ba2f:	outs   dx,DWORD PTR ds:[esi]
  40ba30:	and    cl,dh
  40ba32:	sub    al,0x2d
  40ba34:	in     al,0xbf
  40ba36:	or     DWORD PTR [edi+0x25ee39c3],eax
  40ba3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba3d:	sahf   
  40ba3e:	je     0x40b9d9
  40ba40:	mov    dh,0x42
  40ba42:	mov    ebx,DWORD PTR [ebp-0x67]
  40ba45:	or     eax,0x98924efe
  40ba4a:	fbstp  TBYTE PTR [edi+0x3a33b8d6]
  40ba50:	fnstsw WORD PTR [eax-0x23aaffef]
  40ba56:	fimul  DWORD PTR [eax]
  40ba58:	in     al,0x7
  40ba5a:	push   edx
  40ba5b:	or     eax,0x75008f3f
  40ba60:	xchg   edx,eax
  40ba61:	and    BYTE PTR [eax+0x28d3247c],dh
  40ba67:	lea    esp,[edi]
  40ba69:	test   DWORD PTR [edi+eiz*1-0x75],0xdc63b19e
  40ba71:	cmp    DWORD PTR ds:0xe78975ef,esp
  40ba77:	xor    ecx,DWORD PTR [edx]
  40ba79:	dec    ebp
  40ba7a:	jbe    0x40ba3c
  40ba7c:	fidiv  DWORD PTR [eax-0x43249ed6]
  40ba82:	test   eax,0xf0695f37
  40ba87:	repz xchg ebp,eax
  40ba89:	jge    0x40bb00
  40ba8b:	repz jnp 0x40bae8
  40ba8e:	xchg   ebx,eax
  40ba8f:	jmp    0x40bb0a
  40ba91:	retf   0xf7c5
  40ba94:	fidiv  DWORD PTR [edx+0x555e1305]
  40ba9a:	(bad)  
  40ba9b:	mov    edi,0x70667ba6
  40baa0:	lods   al,BYTE PTR ds:[esi]
  40baa1:	(bad)  
  40baa2:	es fs push ebx
  40baa5:	fstp   st(6)
  40baa7:	shl    BYTE PTR [ebx+0x19],cl
  40baaa:	xchg   esp,eax
  40baab:	out    0xca,eax
  40baad:	sbb    ah,dl
  40baaf:	and    edi,DWORD PTR [ebx-0x89159e7]
  40bab5:	mov    cl,0x84
  40bab7:	inc    esp
  40bab8:	sub    DWORD PTR [ebx+0x496e2ab3],ebx
  40babe:	push   0xffffff9e
  40bac0:	rcr    DWORD PTR [edx-0x62473198],cl
  40bac6:	cmp    eax,0xe43e3779
  40bacb:	std    
  40bacc:	mov    ah,cl
  40bace:	(bad)  [ebx-0x7a886a50]
  40bad4:	adc    eax,0xb88813e6
  40bad9:	or     BYTE PTR [ebx-0x73a0dfd],dh
  40badf:	add    al,0x99
  40bae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bae2:	cmp    DWORD PTR ds:0xf9d9bcfe,ebx
  40bae8:	gs inc edi
  40baea:	xchg   esi,eax
  40baeb:	rcl    BYTE PTR [eax+edi*2+0x3f1ec737],1
  40baf2:	mov    ebp,0x917fab5e
  40baf7:	add    BYTE PTR [edx],ah
  40baf9:	pop    ecx
  40bafa:	dec    esi
  40bafb:	or     dl,bl
  40bafd:	inc    ebp
  40bafe:	sbb    eax,0x3c4a6370
  40bb03:	xchg   edi,eax
  40bb04:	adc    esi,DWORD PTR [esi+0x5f]
  40bb07:	loope  0x40bb6b
  40bb09:	test   al,0x9d
  40bb0c:	pop    ebp
  40bb0d:	lahf   
  40bb0e:	push   0x5
  40bb10:	ror    BYTE PTR [ebx],0x8a
  40bb13:	jo     0x40baba
  40bb15:	dec    edx
  40bb16:	addr16 jg 0x40baee
  40bb19:	maskmovq mm1,mm3
  40bb1c:	xchg   esi,eax
  40bb1d:	mov    ecx,0x75dd07d8
  40bb22:	pop    ebp
  40bb23:	(bad)  
  40bb24:	xlat   BYTE PTR ds:[ebx]
  40bb25:	(bad)  
  40bb26:	sub    DWORD PTR [ecx-0x7a],ecx
  40bb29:	xor    dh,ah
  40bb2b:	arpl   WORD PTR [ebx-0x213b9d3d],bx
  40bb31:	jb     0x40bbb1
  40bb33:	or     bl,0x60
  40bb36:	icebp  
  40bb37:	scas   eax,DWORD PTR es:[edi]
  40bb38:	lods   al,BYTE PTR ds:[esi]
  40bb39:	jno    0x40bac1
  40bb3b:	into   
  40bb3c:	dec    esi
  40bb3d:	fist   WORD PTR ds:[edi]
  40bb40:	call   0x1730:0x70a856e8
  40bb47:	aam    0xc6
  40bb49:	ret    0xaace
  40bb4c:	fcmovnbe st,st(3)
  40bb4e:	pop    ds
  40bb4f:	shr    DWORD PTR [ecx-0x13],0xfb
  40bb53:	stos   DWORD PTR es:[edi],eax
  40bb54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb55:	sti    
  40bb56:	jmp    0xf74b:0x948d3504
  40bb5d:	or     al,0x67
  40bb5f:	pop    ecx
  40bb60:	retf   
  40bb61:	(bad)  [ebx+0x71]
  40bb64:	addr16 push ebx
  40bb66:	out    dx,eax
  40bb67:	xchg   edi,eax
  40bb68:	icebp  
  40bb69:	push   ss
  40bb6a:	lea    edi,[eax+0x6a]
  40bb6d:	les    ebx,FWORD PTR [ebp+0x1c]
  40bb70:	sub    al,0x27
  40bb72:	sti    
  40bb73:	ja     0x40bb7d
  40bb75:	adc    DWORD PTR [ecx+0x78],edx
  40bb78:	lahf   
  40bb79:	fld    DWORD PTR [eax]
  40bb7b:	cdq    
  40bb7c:	pop    ebx
  40bb7d:	adc    BYTE PTR [esi+0x190ff3d0],al
  40bb83:	ss gs call 0xcc251277
  40bb8a:	out    0x43,al
  40bb8c:	jo     0x40bb49
  40bb8e:	sbb    DWORD PTR [esi+esi*2],0xffffff92
  40bb92:	cmp    al,0xb6
  40bb94:	mov    BYTE PTR ds:0x90c7227d,ah
  40bb9a:	adc    dh,bh
  40bb9c:	jb     0x40bb7f
  40bb9e:	hlt    
  40bb9f:	cmc    
  40bba0:	mov    ecx,0xa09b4e46
  40bba5:	pop    edi
  40bba6:	lahf   
  40bba7:	neg    DWORD PTR [esi]
  40bba9:	pop    edi
  40bbaa:	mov    ds:0x6c6bb7a9,eax
  40bbaf:	dec    edi
  40bbb0:	cmp    eax,0x8989a0a4
  40bbb5:	fcomp  DWORD PTR [edi]
  40bbb7:	sub    al,0x3d
  40bbb9:	push   edi
  40bbba:	mov    esp,DWORD PTR [edi+0x29081adb]
  40bbc0:	jmp    0xaa357162
  40bbc5:	lahf   
  40bbc6:	mov    dh,0x36
  40bbc8:	retf   0xf809
  40bbcb:	clc    
  40bbcc:	aam    0xee
  40bbce:	jp     0x40bc4e
  40bbd0:	add    bh,ah
  40bbd2:	imul   esi,DWORD PTR [ecx+0x39],0xffffffa1
  40bbd6:	es int3 
  40bbd8:	add    al,0x8
  40bbda:	mov    BYTE PTR [eax],al
  40bbdc:	mov    al,0x44
  40bbde:	xchg   ah,ch
  40bbe0:	jl     0x40bbc2
  40bbe2:	sub    dl,BYTE PTR [esp+eiz*2]
  40bbe5:	lea    ebp,[eax+eiz*2+0x7]
  40bbe9:	inc    ecx
  40bbea:	adc    al,BYTE PTR [ecx+0x48]
  40bbed:	mov    eax,0xbef03f54
  40bbf2:	jg     0x40bc32
  40bbf4:	and    DWORD PTR [esi],ebx
  40bbf6:	sub    eax,0x555b3dc8
  40bbfb:	pushf  
  40bbfc:	clc    
  40bbfd:	nop
  40bbfe:	ins    BYTE PTR es:[edi],dx
  40bbff:	cmp    ebx,DWORD PTR [ebp-0x12]
  40bc02:	push   eax
  40bc03:	or     BYTE PTR [eax-0x3d01abae],dl
  40bc09:	cmc    
  40bc0a:	add    al,0xa5
  40bc0c:	mov    dl,0xc5
  40bc0e:	cmc    
  40bc0f:	add    al,0xa8
  40bc11:	in     eax,dx
  40bc12:	mov    edx,0x2dffb41a
  40bc17:	nop
  40bc18:	out    dx,al
  40bc19:	jne    0x40bba8
  40bc1b:	cmp    esi,eax
  40bc1d:	mov    dl,0xe
  40bc1f:	pop    ecx
  40bc20:	pop    es
  40bc21:	jmp    0xf6d3:0x2c566026
  40bc28:	out    dx,eax
  40bc29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc2a:	ret    0x3b09
  40bc2d:	or     al,0xd8
  40bc2f:	gs mov eax,0x58c05a27
  40bc35:	jecxz  0x40bc38
  40bc37:	daa    
  40bc38:	lea    ebp,[ecx+0x603d27c0]
  40bc3e:	call   0x97ad:0x318bdb7f
  40bc45:	and    BYTE PTR [ecx-0x21],0xc0
  40bc49:	inc    edi
  40bc4a:	sbb    BYTE PTR [esi],cl
  40bc4c:	pop    ecx
  40bc4d:	sub    eax,0x35a5d3d7
  40bc52:	das    
  40bc53:	sub    DWORD PTR [esp+ebp*1],edi
  40bc56:	add    DWORD PTR [edi-0x3d755d58],edx
  40bc5c:	inc    esi
  40bc5d:	push   es
  40bc5e:	xchg   ebp,eax
  40bc5f:	jne    0x40bc4c
  40bc61:	ds retf 0x2411
  40bc65:	xchg   edx,eax
  40bc66:	loop   0x40bcd2
  40bc68:	push   0x5ce737bd
  40bc6d:	not    DWORD PTR [edx]
  40bc6f:	push   es
  40bc70:	push   edi
  40bc71:	scas   eax,DWORD PTR es:[edi]
  40bc72:	jne    0x40bc13
  40bc74:	imul   DWORD PTR [esi-0x30]
  40bc77:	and    ah,ch
  40bc79:	or     al,ah
  40bc7b:	mov    ch,0xd7
  40bc7d:	popf   
  40bc7e:	mov    esi,0x95dd7439
  40bc83:	lods   al,BYTE PTR ds:[esi]
  40bc84:	inc    esp
  40bc85:	or     eax,0xdd4f47be
  40bc8a:	stos   DWORD PTR es:[edi],eax
  40bc8b:	mov    bl,0xda
  40bc8d:	jge    0x40bc38
  40bc8f:	pop    esi
  40bc90:	bound  edi,QWORD PTR [edi+0x1557ad73]
  40bc96:	xor    al,0x4f
  40bc98:	sbb    esi,ebp
  40bc9a:	dec    eax
  40bc9b:	mov    bl,0x78
  40bc9d:	pushf  
  40bc9e:	pusha  
  40bc9f:	ins    BYTE PTR es:[edi],dx
  40bca0:	cmp    BYTE PTR [ecx+edi*1+0x6e],bh
  40bca4:	push   ds
  40bca5:	(bad)  
  40bca6:	(bad)  
  40bca7:	lea    ebx,[edi-0x51]
  40bcaa:	je     0x40bcf3
  40bcac:	icebp  
  40bcad:	cli    
  40bcae:	mov    esp,0x9301173d
  40bcb3:	outs   dx,BYTE PTR ds:[esi]
  40bcb4:	fnstsw WORD PTR ds:0x94aaa9f2
  40bcba:	das    
  40bcbb:	sub    eax,0x6fc81099
  40bcc0:	push   es
  40bcc1:	cli    
  40bcc2:	or     eax,0x3bc32df3
  40bcc7:	in     al,dx
  40bcc8:	push   ss
  40bcc9:	ins    DWORD PTR es:[edi],dx
  40bcca:	outs   dx,DWORD PTR ds:[esi]
  40bccb:	add    edi,0x3c2b8601
  40bcd1:	(bad)  
  40bcd2:	neg    DWORD PTR [esi-0x56]
  40bcd5:	mov    ecx,eax
  40bcd7:	lea    esi,[edx]
  40bcd9:	mov    bl,BYTE PTR [eax+edi*8+0xb7b4c87]
  40bce0:	stc    
  40bce1:	add    al,0x88
  40bce3:	out    dx,eax
  40bce4:	cmp    DWORD PTR [edi+0x7f3edf77],edx
  40bcea:	inc    eax
  40bceb:	ins    BYTE PTR es:[edi],dx
  40bcec:	xor    al,0xc5
  40bcee:	fldcw  WORD PTR [ecx-0x42]
  40bcf1:	inc    eax
  40bcf2:	xchg   esi,eax
  40bcf3:	ins    DWORD PTR es:[edi],dx
  40bcf4:	mov    DWORD PTR [esi-0xa159a6d],edi
  40bcfa:	ja     0x40bd43
  40bcfc:	pop    eax
  40bcfd:	sar    BYTE PTR [esi],1
  40bcff:	inc    eax
  40bd00:	pop    ecx
  40bd01:	push   es
  40bd02:	pop    esi
  40bd03:	xchg   esi,ecx
  40bd05:	div    BYTE PTR [eax-0x1a]
  40bd08:	ins    DWORD PTR es:[edi],dx
  40bd09:	jg     0x40bd82
  40bd0b:	jle    0x40bc99
  40bd0d:	mov    al,cl
  40bd0f:	pop    eax
  40bd10:	ja     0x40bcdd
  40bd12:	push   ebp
  40bd13:	sub    al,0x39
  40bd15:	lods   eax,DWORD PTR ds:[esi]
  40bd16:	iret   
  40bd17:	add    eax,0x7eecf5d8
  40bd1c:	push   ss
  40bd1d:	into   
  40bd1e:	stc    
  40bd1f:	push   eax
  40bd20:	add    BYTE PTR [esi],0xf1
  40bd23:	mov    eax,0x881ba440
  40bd28:	mov    al,ds:0xb023a6a0
  40bd2d:	pushf  
  40bd2e:	jmp    0x40bce5
  40bd30:	or     eax,0x42c65b2e
  40bd35:	lods   eax,DWORD PTR ds:[esi]
  40bd36:	mov    ss,WORD PTR [esi-0x11]
  40bd39:	sub    ebp,0xffffffcd
  40bd3c:	out    dx,al
  40bd3d:	fsubrp st(0),st
  40bd3f:	inc    ecx
  40bd40:	aam    0xc4
  40bd42:	lock hlt 
  40bd44:	xchg   ecx,eax
  40bd45:	je     0x40bd19
  40bd47:	mov    ds:0x50158fa2,eax
  40bd4c:	les    edi,FWORD PTR [ebp+0x71]
  40bd4f:	dec    eax
  40bd50:	adc    al,0x6f
  40bd52:	jmp    0x8601:0x4fc19692
  40bd59:	inc    ebx
  40bd5a:	icebp  
  40bd5b:	sti    
  40bd5c:	and    esi,DWORD PTR [edx+0x63526d1d]
  40bd62:	push   ds
  40bd63:	ror    BYTE PTR [ebp+0x42a1e67d],0x6b
  40bd6a:	xchg   cl,al
  40bd6c:	ins    DWORD PTR es:[edi],dx
  40bd6d:	cmp    ebx,DWORD PTR [ebx+ebx*8+0x78]
  40bd71:	jb     0x40bd19
  40bd73:	loop   0x40bcf6
  40bd75:	push   edx
  40bd76:	hlt    
  40bd77:	xor    ebp,ebp
  40bd79:	push   ds
  40bd7a:	bound  eax,QWORD PTR [ecx-0xd1a2a6]
  40bd80:	inc    ecx
  40bd81:	jmp    0x40bd24
  40bd83:	or     ah,BYTE PTR [eax]
  40bd85:	dec    ecx
  40bd86:	inc    ebx
  40bd87:	aas    
  40bd88:	lea    ebx,[ebp+ebx*2+0x4]
  40bd8c:	xor    BYTE PTR [ecx],ah
  40bd8e:	adc    cl,bh
  40bd90:	mov    dl,0x0
  40bd92:	fadd   DWORD PTR [ebp+eiz*1-0x28]
  40bd96:	sti    
  40bd97:	in     eax,0x2e
  40bd99:	cmp    al,0x20
  40bd9b:	cmp    bl,cl
  40bd9d:	daa    
  40bd9e:	inc    esi
  40bd9f:	cdq    
  40bda0:	fisttp WORD PTR [eax+0x2a41f24c]
  40bda6:	int3   
  40bda7:	sub    eax,0xe93cd3b3
  40bdac:	(bad)  
  40bdad:	jnp    0x40bd40
  40bdaf:	and    bl,BYTE PTR [ecx+0x5b]
  40bdb2:	inc    esi
  40bdb3:	std    
  40bdb4:	sbb    DWORD PTR [edx],ecx
  40bdb6:	aam    0x90
  40bdb8:	loope  0x40bdd6
  40bdba:	push   ds
  40bdbb:	xchg   BYTE PTR [edi],bh
  40bdbd:	in     eax,0xd6
  40bdbf:	mov    bh,0xdc
  40bdc1:	retf   
  40bdc2:	outs   dx,DWORD PTR ds:[esi]
  40bdc3:	(bad)  
  40bdc5:	xchg   esi,eax
  40bdc6:	mov    esi,0x42b7f581
  40bdcb:	sahf   
  40bdcc:	stos   DWORD PTR es:[edi],eax
  40bdcd:	dec    esp
  40bdce:	pop    edi
  40bdcf:	pop    ecx
  40bdd0:	cmp    dl,ch
  40bdd2:	xchg   ebx,eax
  40bdd3:	add    eax,0x87e15e5a
  40bdd8:	mov    edi,0x7e537d99
  40bddd:	dec    ecx
  40bdde:	dec    esi
  40bddf:	adc    DWORD PTR ds:0xba9aa428,0xffffffd5
  40bde6:	repz xlat BYTE PTR ds:[ebx]
  40bde8:	sbb    BYTE PTR [ebx],bl
  40bdea:	jle    0x40bdda
  40bdec:	push   0x5
  40bdee:	dec    ebp
  40bdef:	std    
  40bdf0:	mov    ah,0x42
  40bdf2:	ja     0x40be14
  40bdf4:	adc    ebx,DWORD PTR [ebx-0x508239f8]
  40bdfa:	adc    ah,BYTE PTR [ebp+eax*2+0x4]
  40bdfe:	sbb    bh,BYTE PTR [edi+0x8b76973]
  40be04:	shl    edx,1
  40be06:	dec    edi
  40be07:	aam    0xba
  40be09:	int    0x39
  40be0b:	jg     0x40bdbf
  40be0d:	dec    esp
  40be0e:	test   DWORD PTR fs:[eax],0x7ddea6b1
  40be15:	jbe    0x40be0c
  40be17:	mov    bl,0x31
  40be19:	and    edi,DWORD PTR [esi]
  40be1b:	sbb    BYTE PTR [ebx-0x4e],dl
  40be1e:	dec    edx
  40be1f:	sbb    al,0xfe
  40be21:	xor    edx,edi
  40be23:	mov    esi,0xd4a3cc1
  40be28:	imul   DWORD PTR [eax-0x7f]
  40be2b:	push   ebx
  40be2c:	xor    DWORD PTR ds:0x408bb813,0xe7d8acd5
  40be36:	and    cl,BYTE PTR [ebp-0x51]
  40be39:	inc    edx
  40be3a:	sub    BYTE PTR [eax+0x6c],0x5d
  40be3e:	jp     0x40be48
  40be40:	fstp   st(3)
  40be42:	or     eax,0x3707d10
  40be47:	and    eax,0x5756e113
  40be4c:	pop    edi
  40be4d:	jne    0x40be4a
  40be4f:	into   
  40be50:	sbb    esi,DWORD PTR ds:0x12a70fc4
  40be56:	(bad)  
  40be57:	mov    al,ds:0x1489285e
  40be5c:	xchg   edi,eax
  40be5d:	jno    0x40be01
  40be5f:	and    al,bh
  40be61:	sub    ebx,DWORD PTR [edx+edx*4]
  40be64:	dec    edx
  40be65:	mov    edi,ss
  40be67:	mov    dl,dh
  40be69:	lods   al,BYTE PTR ds:[esi]
  40be6a:	imul   ebp,DWORD PTR [ebx],0xca523c4b
  40be70:	clc    
  40be71:	scas   eax,DWORD PTR es:[edi]
  40be72:	test   DWORD PTR [ebx+0x2b4354c2],ebx
  40be78:	mov    dl,0x54
  40be7a:	repz cmp BYTE PTR [ebp-0x74],ah
  40be7e:	adc    al,0x7b
  40be80:	mov    dh,0x99
  40be82:	and    ebx,esp
  40be84:	or     BYTE PTR [esi-0x15d034f1],0x39
  40be8b:	in     eax,dx
  40be8c:	mov    al,0x87
  40be8e:	sti    
  40be8f:	cwde   
  40be90:	addr16 lock push ebx
  40be93:	in     al,0xa9
  40be95:	hlt    
  40be96:	push   cs
  40be97:	mov    esi,0xaa7f5478
  40be9c:	adc    ch,BYTE PTR [ecx]
  40be9e:	and    DWORD PTR [ebp-0x2901062e],esi
  40bea4:	jp     0x40be5b
  40bea6:	inc    eax
  40bea7:	pop    ss
  40bea8:	in     al,dx
  40bea9:	xchg   esi,eax
  40beaa:	add    eax,0x2b4daa46
  40beaf:	in     eax,dx
  40beb0:	xor    bl,BYTE PTR ds:0x5d889f3d
  40beb6:	pop    ds
  40beb7:	mov    edx,0xeee34069
  40bebc:	mov    al,ds:0xb42fabe
  40bec1:	jmp    0x937ad222
  40bec6:	rol    BYTE PTR [ecx-0x5b],cl
  40bec9:	mov    edx,0x1791693
  40bece:	inc    edi
  40becf:	dec    ecx
  40bed0:	clc    
  40bed1:	sub    cl,ch
  40bed3:	xchg   edi,esi
  40bed5:	fnstsw WORD PTR ds:0x335a93ef
  40bedb:	mov    ebx,0xb98f1e0c
  40bee0:	mov    al,BYTE PTR [edi+0x75bea836]
  40bee6:	aaa    
  40bee7:	push   edi
  40bee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bee9:	xor    esp,DWORD PTR [eax]
  40beeb:	xlat   BYTE PTR ds:[ebx]
  40beec:	sbb    eax,0x3b73901c
  40bef1:	inc    ebx
  40bef2:	adc    edx,DWORD PTR [edi-0x187e12d9]
  40bef8:	pop    ebx
  40bef9:	retf   
  40befa:	(bad)  
  40befb:	xor    DWORD PTR [esi+0x26e448f3],ebp
  40bf01:	pop    ebx
  40bf02:	push   ebx
  40bf03:	pop    esi
  40bf04:	imul   esi,DWORD PTR [ecx-0x582b6087],0xc06fc64f
  40bf0e:	into   
  40bf0f:	pop    ebx
  40bf10:	xchg   esi,eax
  40bf11:	mov    WORD PTR [edx+0x7d],?
  40bf14:	std    
  40bf15:	scas   eax,DWORD PTR es:[edi]
  40bf16:	inc    ebp
  40bf17:	nop
  40bf18:	mov    al,0x54
  40bf1a:	test   al,0x5c
  40bf1c:	dec    edi
  40bf1d:	pop    ecx
  40bf1e:	xor    al,0xb6
  40bf20:	mov    al,ds:0x9d797d63
  40bf25:	out    dx,eax
  40bf26:	(bad)  
  40bf28:	lea    eax,[ecx]
  40bf2a:	pop    eax
  40bf2b:	jecxz  0x40bf8e
  40bf2d:	jl     0x40bef9
  40bf2f:	imul   esi,esp,0x6d
  40bf32:	cwde   
  40bf33:	pop    es
  40bf34:	test   eax,0x9ed64f74
  40bf39:	repz ficom WORD PTR [edi+0x4c]
  40bf3d:	sub    BYTE PTR [edi],dh
  40bf3f:	pop    esi
  40bf40:	sar    BYTE PTR [ecx],cl
  40bf42:	aam    0x4b
  40bf44:	push   ebx
  40bf45:	sbb    al,0xbb
  40bf47:	mov    al,ds:0xa6ca7397
  40bf4c:	out    dx,eax
  40bf4d:	pop    ecx
  40bf4e:	add    al,0xf9
  40bf50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf51:	in     eax,0x77
  40bf53:	rcr    DWORD PTR ds:0x3361108c,1
  40bf59:	or     DWORD PTR [eax],eax
  40bf5b:	mov    cl,0x53
  40bf5d:	jl     0x40bfad
  40bf5f:	dec    esp
  40bf60:	imul   ecx,DWORD PTR [esi-0xbe1cad6],0xffffffc3
  40bf67:	mov    dh,0x78
  40bf69:	leave  
  40bf6a:	and    cl,BYTE PTR [edi+0x6a]
  40bf6d:	pop    edi
  40bf6e:	xchg   ecx,eax
  40bf6f:	mov    ebx,0x997576ba
  40bf74:	mov    edi,esi
  40bf76:	cdq    
  40bf77:	jge    0x40bf96
  40bf79:	adc    al,0xf8
  40bf7b:	data16 add bl,BYTE PTR [edi]
  40bf7e:	bound  edx,QWORD PTR [edi]
  40bf80:	jo     0x40bf30
  40bf82:	stos   BYTE PTR es:[edi],al
  40bf83:	xchg   ebx,eax
  40bf84:	xchg   esp,eax
  40bf85:	aas    
  40bf86:	(bad)  
  40bf88:	inc    ecx
  40bf89:	lea    edx,[ecx-0x2c]
  40bf8c:	or     BYTE PTR [ecx],bl
  40bf8e:	xchg   edi,eax
  40bf8f:	lahf   
  40bf90:	mov    ah,0x69
  40bf92:	inc    esp
  40bf93:	nop
  40bf94:	adc    eax,0xb5c9fa01
  40bf99:	add    DWORD PTR gs:[ebx-0x73b9da74],ebp
  40bfa0:	push   esp
  40bfa1:	push   ecx
  40bfa2:	push   ebx
  40bfa3:	jne    0x40c01d
  40bfa5:	into   
  40bfa6:	cs popf 
  40bfa8:	dec    esp
  40bfa9:	in     al,dx
  40bfaa:	pop    esi
  40bfab:	jo     0x40c002
  40bfad:	pusha  
  40bfae:	push   esp
  40bfaf:	cwde   
  40bfb0:	push   esp
  40bfb1:	xchg   esp,eax
  40bfb2:	ret    
  40bfb3:	cmp    bl,ch
  40bfb5:	ffree  st(0)
  40bfb7:	fadd   DWORD PTR [ebx-0xd56b624]
  40bfbd:	or     al,0xd3
  40bfbf:	ret    0x2f11
  40bfc2:	das    
  40bfc3:	aam    0xeb
  40bfc5:	dec    esp
  40bfc6:	or     ebp,DWORD PTR [ebx-0x40]
  40bfc9:	in     al,dx
  40bfca:	jb     0x40bfd4
  40bfcc:	das    
  40bfcd:	sub    DWORD PTR [esi-0x12],0x10
  40bfd1:	mov    eax,ds:0xca081381
  40bfd6:	cmp    al,0xef
  40bfd8:	push   edx
  40bfd9:	test   BYTE PTR [ebx+0xe50c51c],ah
  40bfdf:	imul   edx,DWORD PTR [edx+0x33],0xffffffcc
  40bfe3:	shl    esi,cl
  40bfe5:	jp     0x40bfed
  40bfe7:	int    0xd7
  40bfe9:	in     al,dx
  40bfea:	into   
  40bfeb:	jmp    0x40c046
  40bfed:	adc    al,BYTE PTR [edi]
  40bfef:	jp     0x40c023
  40bff1:	popf   
  40bff2:	rol    BYTE PTR [edi+0x58],cl
  40bff5:	push   edx
  40bff6:	adc    ebp,DWORD PTR [esi+0x4b1c1462]
  40bffc:	xchg   edx,eax
  40bffd:	fiadd  WORD PTR [edi]
  40bfff:	inc    esi
  40c000:	sub    dh,dh
  40c002:	sub    DWORD PTR [eax-0x31faa7d],0x488c3328
  40c00c:	push   esi
  40c00d:	fisub  DWORD PTR [edx-0x6d]
  40c010:	push   esp
  40c011:	sahf   
  40c012:	inc    ebp
  40c013:	cmp    eax,DWORD PTR [ebx]
  40c015:	sbb    DWORD PTR [edi+0x653ef5c2],ebx
  40c01b:	jg     0x40c04c
  40c01d:	push   ss
  40c01e:	jbe    0x40bfcd
  40c020:	fnstsw WORD PTR [ebx]
  40c022:	data16 test ah,dl
  40c025:	cmp    ch,BYTE PTR [esi-0xe]
  40c028:	test   edi,esi
  40c02a:	and    edi,DWORD PTR [eax+eax*1]
  40c02d:	mov    ecx,0x61bbf310
  40c032:	pop    edx
  40c033:	jge    0x40c064
  40c035:	imul   ebp,DWORD PTR [esp+ecx*1+0x1e],0xbb254a37
  40c03d:	(bad)  
  40c03e:	int3   
  40c03f:	xchg   edx,eax
  40c040:	push   cs
  40c041:	es dec esp
  40c043:	jecxz  0x40c06a
  40c045:	jnp    0x40c011
  40c047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c048:	add    eax,DWORD PTR [edx+0x649bdf18]
  40c04e:	call   0x3137:0x7861cc7a
  40c055:	or     eax,0x689ba057
  40c05a:	xor    al,al
  40c05c:	mov    esi,0x797f7e47
  40c061:	push   esp
  40c062:	push   ss
  40c063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c064:	sti    
  40c065:	mov    esp,0x8fdaca30
  40c06a:	scas   al,BYTE PTR es:[edi]
  40c06b:	mov    ch,0x7d
  40c06d:	xor    al,0x87
  40c06f:	adc    edx,esp
  40c071:	mov    ecx,0x1804a977
  40c076:	imul   esi,edi,0x58a1bde4
  40c07c:	mov    esi,DWORD PTR [esi+0x73]
  40c07f:	and    eax,0x251d54c7
  40c084:	push   ecx
  40c085:	cwde   
  40c086:	shl    BYTE PTR [edx+0x2b],cl
  40c089:	and    BYTE PTR [eax-0x12],dh
  40c08c:	adc    ch,BYTE PTR [ebx+edi*4]
  40c08f:	std    
  40c090:	sbb    al,0x53
  40c092:	push   esp
  40c093:	and    ebx,ebx
  40c095:	call   0x76d7:0xc84d87be
  40c09c:	(bad)  
  40c09d:	push   0xffffff84
  40c09f:	or     BYTE PTR [edi+0x6fd2f01d],0xc5
  40c0a6:	xchg   BYTE PTR [ebx+0x837a7bd],bh
  40c0ac:	mov    esp,0xc8a07f18
  40c0b1:	jo     0x40c0e1
  40c0b3:	out    dx,al
  40c0b4:	inc    ebp
  40c0b5:	inc    eax
  40c0b6:	cmp    al,0xb0
  40c0b8:	repz cmp BYTE PTR [edi+0x33],cl
  40c0bc:	(bad)  
  40c0bd:	fs push esp
  40c0bf:	push   esp
  40c0c0:	inc    edx
  40c0c1:	stos   BYTE PTR es:[edi],al
  40c0c2:	sbb    BYTE PTR [eax+0x3155db51],0xcd
  40c0c9:	(bad)  
  40c0ca:	push   0xffffffe2
  40c0cc:	cmp    ah,dl
  40c0ce:	push   cs
  40c0cf:	cmp    BYTE PTR [edi+0x71],0xaa
  40c0d3:	sub    BYTE PTR [ebx-0x5e894e1d],dl
  40c0d9:	push   esi
  40c0da:	mov    ebx,fs
  40c0dc:	loop   0x40c115
  40c0de:	sbb    BYTE PTR [eax],cl
  40c0e0:	repz cmp ebp,edx
  40c0e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0e4:	daa    
  40c0e5:	adc    BYTE PTR [edi+0x73],0x14
  40c0e9:	mov    ah,0x96
  40c0eb:	mov    eax,ds:0x30c8bc37
  40c0f0:	adc    ch,cl
  40c0f2:	fadd   st(1),st
  40c0f4:	call   0xc58e:0xe4bd1cb0
  40c0fb:	stc    
  40c0fc:	hlt    
  40c0fd:	push   ss
  40c0fe:	retf   0x35e1
  40c101:	add    ebp,ecx
  40c103:	pusha  
  40c104:	mov    bl,0x85
  40c106:	sahf   
  40c107:	imul   esp,DWORD PTR [ecx-0x3a650d06],0xbcc8c239
  40c111:	test   al,0x43
  40c113:	mul    DWORD PTR ds:0xf1e14721
  40c119:	lock mov ebp,0x5d12b85f
  40c11f:	jb     0x40c0ff
  40c121:	dec    esp
  40c122:	sbb    eax,0x7170c9ff
  40c127:	std    
  40c128:	jne    0x40c1a9
  40c12a:	loope  0x40c112
  40c12c:	loop   0x40c163
  40c12e:	pop    esp
  40c12f:	(bad)  
  40c130:	pushf  
  40c131:	leave  
  40c132:	jle    0x40c11e
  40c134:	test   eax,0x8f57e16c
  40c139:	xor    BYTE PTR [ecx],ch
  40c13b:	in     eax,dx
  40c13c:	dec    ecx
  40c13d:	loop   0x40c1a6
  40c13f:	retf   0x663e
  40c142:	inc    ebx
  40c143:	popa   
  40c144:	cmc    
  40c145:	js     0x40c145
  40c147:	aas    
  40c148:	rol    DWORD PTR [eax],cl
  40c14a:	add    al,0xf4
  40c14c:	push   0x62
  40c14e:	lods   al,BYTE PTR ds:[esi]
  40c14f:	push   ebx
  40c150:	jmp    0xae68:0x69ff2761
  40c157:	cdq    
  40c158:	loopne 0x40c13d
  40c15a:	xor    ecx,DWORD PTR [ebp-0x7b0bc4c5]
  40c160:	add    ecx,eax
  40c162:	das    
  40c163:	test   BYTE PTR [esi-0x29379f6],bh
  40c169:	sub    edi,ecx
  40c16b:	xchg   esi,eax
  40c16c:	add    edx,DWORD PTR [ecx+0x699a6bb7]
  40c172:	out    dx,al
  40c173:	ret    0x4f1c
  40c176:	cs jl  0x40c1cf
  40c179:	fstp   DWORD PTR [ebp+0x11]
  40c17c:	mov    ds:0x1f8234f1,eax
  40c181:	push   ebx
  40c182:	or     dl,0xc5
  40c185:	ret    
  40c186:	adc    DWORD PTR [eax+0x6b],esp
  40c189:	mov    ecx,0xbc4f6624
  40c18e:	(bad)  
  40c18f:	jno    0x40c1a1
  40c191:	test   BYTE PTR [eax-0x70ca5e8c],0x70
  40c198:	aam    0x67
  40c19a:	and    bl,BYTE PTR [ebx+0x274ca356]
  40c1a0:	push   0xff4ce949
  40c1a5:	cmp    BYTE PTR [edi-0x250f7a40],bl
  40c1ab:	inc    ebp
  40c1ac:	aam    0x3d
  40c1ae:	shl    DWORD PTR [ebx-0x3e],1
  40c1b1:	imul   esi,ebp,0x6abceafc
  40c1b7:	xchg   ebp,eax
  40c1b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1b9:	int3   
  40c1ba:	fwait
  40c1bb:	out    dx,al
  40c1bc:	icebp  
  40c1bd:	adc    DWORD PTR [ebx+0x5e],0x181255db
  40c1c4:	or     eax,0x5a79b524
  40c1c9:	bound  esi,QWORD PTR [ecx-0x47]
  40c1cc:	or     ebp,ebx
  40c1ce:	les    esp,FWORD PTR [eax-0x4f]
  40c1d1:	imul   edi,DWORD PTR [eax-0x26],0xffffff92
  40c1d5:	scas   eax,DWORD PTR es:[edi]
  40c1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1d7:	jecxz  0x40c1f1
  40c1d9:	mov    eax,DWORD PTR [ecx+0x162883b7]
  40c1df:	das    
  40c1e0:	cld    
  40c1e1:	or     DWORD PTR [edx-0x29],edx
  40c1e4:	cli    
  40c1e5:	mul    ebx
  40c1e7:	ret    0x1a0f
  40c1ea:	jne    0x40c1c2
  40c1ec:	jo     0x40c175
  40c1ee:	mov    cl,0x54
  40c1f0:	pusha  
  40c1f1:	test   al,0x37
  40c1f3:	(bad)  
  40c1f4:	sar    DWORD PTR [esi-0x3fc6f7c1],1
  40c1fa:	outs   dx,BYTE PTR ds:[esi]
  40c1fb:	and    cl,BYTE PTR [ecx+ebx*2-0x1e247727]
  40c202:	shl    BYTE PTR [edx-0x39],1
  40c205:	ror    BYTE PTR [esp+esi*2],0x9b
  40c209:	jno    0x40c23c
  40c20b:	xchg   edx,eax
  40c20c:	inc    esp
  40c20d:	sbb    BYTE PTR ds:0x89548746,al
  40c213:	pop    ecx
  40c214:	mov    ecx,0xee18c870
  40c219:	push   eax
  40c21a:	or     eax,0x63826abf
  40c21f:	push   es
  40c220:	cli    
  40c221:	(bad)  
  40c222:	imul   ecx,DWORD PTR [ebx-0x683c3b59],0x4754f357
  40c22c:	call   0x199b:0x25666e42
  40c233:	mov    ch,0x23
  40c235:	js     0x40c205
  40c237:	pop    edi
  40c238:	leave  
  40c239:	cmp    al,dh
  40c23b:	dec    DWORD PTR [edx]
  40c23d:	inc    ecx
  40c23e:	push   ebx
  40c23f:	add    DWORD PTR [edi-0x2bdcf198],edx
  40c245:	into   
  40c246:	fidivr DWORD PTR gs:[edx]
  40c249:	in     al,dx
  40c24a:	das    
  40c24b:	(bad)  
  40c24c:	push   edx
  40c24d:	push   ecx
  40c24e:	aad    0xc0
  40c250:	push   ss
  40c251:	mov    eax,0x312487f8
  40c256:	retf   0xa1ae
  40c259:	or     edi,DWORD PTR [eax+0x39]
  40c25c:	adc    esp,esp
  40c25e:	es push ss
  40c260:	xor    dh,BYTE PTR [eax+0x26]
  40c263:	cld    
  40c264:	and    ecx,DWORD PTR [ecx-0x1]
  40c267:	scas   eax,DWORD PTR es:[edi]
  40c268:	mov    ch,0xfb
  40c26a:	aas    
  40c26b:	mov    cl,0x47
  40c26d:	mov    ?,WORD PTR [eax-0x2a66d328]
  40c273:	(bad)  
  40c274:	xor    ch,al
  40c276:	dec    eax
  40c277:	mov    ds,eax
  40c279:	cli    
  40c27a:	daa    
  40c27b:	push   cs
  40c27c:	fstp   DWORD PTR [eax+0x4e258597]
  40c282:	repz stc 
  40c284:	mov    dl,BYTE PTR [edx-0x48]
  40c287:	add    DWORD PTR [eax+0x4b],eax
  40c28a:	lock xchg edi,eax
  40c28c:	jnp    0x40c258
  40c28e:	out    dx,al
  40c28f:	jl     0x40c283
  40c291:	push   ebx
  40c292:	pusha  
  40c293:	sbb    edx,DWORD PTR [edi+0x43]
  40c296:	sub    dl,ch
  40c298:	popf   
  40c299:	fwait
  40c29a:	loopne 0x40c2e2
  40c29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c29d:	inc    edi
  40c29e:	jmp    0x8ab74169
  40c2a3:	add    BYTE PTR [ebp+0x6375aa14],dl
  40c2a9:	retf   0x4b9c
  40c2ac:	push   esp
  40c2ad:	sbb    al,0x71
  40c2af:	enter  0xf320,0x82
  40c2b3:	clc    
  40c2b4:	jmp    0x617885d7
  40c2b9:	pxor   mm7,QWORD PTR [esi-0x33]
  40c2bd:	add    esi,DWORD PTR [ebx-0x3c532c7]
  40c2c3:	clc    
  40c2c4:	sub    ch,bl
  40c2c6:	sbb    BYTE PTR [ebx-0xd09c7f9],ch
  40c2cc:	xchg   ebx,eax
  40c2cd:	mov    esi,0xdd3d8722
  40c2d2:	adc    eax,0xcbfee7e7
  40c2d7:	pop    esp
  40c2d8:	loopne 0x40c2f7
  40c2da:	iret   
  40c2db:	xor    al,0x4a
  40c2dd:	xchg   ebx,eax
  40c2de:	pop    es
  40c2df:	sub    ebp,DWORD PTR [esi+edx*1+0x4]
  40c2e3:	dec    esp
  40c2e4:	add    edi,ebp
  40c2e6:	push   esi
  40c2e7:	cmp    ah,BYTE PTR [ebx+0xbb2a285]
  40c2ed:	inc    eax
  40c2ee:	dec    BYTE PTR [edi+0x4798c7fd]
  40c2f4:	add    ah,cl
  40c2f6:	inc    ebx
  40c2f7:	int3   
  40c2f8:	(bad)  
  40c2f9:	test   al,0x37
  40c2fb:	jb     0x40c2f1
  40c2fd:	aaa    
  40c2fe:	bound  ecx,QWORD PTR [ebx]
  40c300:	mov    esp,0x4ea9202c
  40c305:	iret   
  40c306:	(bad)  
  40c307:	dec    edi
  40c308:	sbb    bl,ah
  40c30a:	fs popa 
  40c30c:	cmp    eax,0x90639f6e
  40c311:	pop    edx
  40c312:	stos   BYTE PTR es:[edi],al
  40c313:	inc    ecx
  40c314:	xor    BYTE PTR [ecx+0x6c],ah
  40c317:	inc    ebp
  40c318:	xor    eax,0x9ac0582b
  40c31d:	in     eax,dx
  40c31e:	aaa    
  40c31f:	(bad)  
  40c320:	xchg   ebx,eax
  40c321:	stos   BYTE PTR es:[edi],al
  40c322:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40c324:	cmc    
  40c325:	add    esi,edx
  40c327:	in     eax,dx
  40c328:	push   ecx
  40c329:	fist   DWORD PTR [esi]
  40c32b:	push   eax
  40c32c:	lds    ecx,FWORD PTR ds:0xbd94927e
  40c332:	inc    ecx
  40c333:	retf   
  40c334:	scas   eax,DWORD PTR es:[edi]
  40c335:	sub    BYTE PTR fs:[ecx],ah
  40c338:	jb     0x40c31a
  40c33a:	dec    ebx
  40c33b:	push   ds
  40c33c:	xchg   ecx,eax
  40c33d:	in     al,0x32
  40c33f:	jae    0x40c3ab
  40c341:	xchg   DWORD PTR [esi+0x2c315822],ebx
  40c347:	call   0x1b7cacfb
  40c34c:	or     al,0x31
  40c34e:	inc    ebp
  40c34f:	(bad)  
  40c350:	sub    BYTE PTR [ebx+ebx*8],ch
  40c353:	cmp    al,0x4f
  40c355:	add    DWORD PTR [ebp-0x6a],ebp
  40c358:	arpl   WORD PTR [esi-0x7d004deb],ax
  40c35e:	aas    
  40c35f:	int3   
  40c360:	ror    dl,0x7c
  40c363:	lds    ebx,FWORD PTR [ecx-0x56]
  40c366:	and    edx,eax
  40c368:	mov    ecx,ss
  40c36a:	(bad)  
  40c36b:	aad    0x6c
  40c36d:	sbb    ecx,esp
  40c36f:	ins    DWORD PTR es:[edi],dx
  40c370:	xchg   DWORD PTR [ebx],edi
  40c372:	aas    
  40c373:	add    eax,0x4bc4d088
  40c378:	inc    ecx
  40c379:	push   ebp
  40c37a:	add    esi,DWORD PTR ds:0x9e16c157
  40c380:	daa    
  40c381:	adc    BYTE PTR fs:[esi+ebx*1+0x507d698e],cl
  40c389:	jmp    0xfa75:0x874804a3
  40c390:	dec    esi
  40c391:	jmp    0xbf1a59a3
  40c396:	scas   al,BYTE PTR es:[edi]
  40c397:	inc    esi
  40c398:	cmp    al,0x17
  40c39a:	js     0x40c389
  40c39c:	aam    0x6f
  40c39e:	ds pop ds
  40c3a0:	push   0x184c5fb1
  40c3a5:	mov    esi,0x4bf70590
  40c3aa:	push   ebx
  40c3ab:	(bad)  
  40c3ac:	(bad)  
  40c3ae:	ins    DWORD PTR es:[edi],dx
  40c3af:	cmp    eax,0xca673ca8
  40c3b4:	jne    0x40c342
  40c3b6:	xor    al,0x22
  40c3b8:	inc    ecx
  40c3b9:	and    esp,DWORD PTR [ecx+0x29]
  40c3bc:	mov    esp,0x5368916d
  40c3c1:	sbb    DWORD PTR [edx+0x1],esi
  40c3c4:	sub    al,0x7c
  40c3c6:	cs dec ecx
  40c3c8:	jns    0x40c367
  40c3ca:	push   ds
  40c3cb:	xchg   edx,eax
  40c3cc:	dec    edi
  40c3cd:	inc    ebx
  40c3ce:	mov    esp,0xd2ec5592
  40c3d3:	add    al,0xa6
  40c3d5:	lock das 
  40c3d7:	mov    DWORD PTR [esi-0x35b00122],edi
  40c3dd:	xchg   DWORD PTR [edx+0x6c],edx
  40c3e0:	jmp    0x40c40f
  40c3e2:	jo     0x40c3e1
  40c3e4:	cmp    BYTE PTR [ebp+0x1f59f33b],0x50
  40c3eb:	cs jp  0x40c42a
  40c3ee:	cmp    bh,BYTE PTR [ebp+0x53]
  40c3f1:	xor    ecx,edx
  40c3f3:	jmp    0x954e:0x9a283167
  40c3fa:	jae    0xfd1cef00
  40c400:	jle    0x40c43c
  40c402:	pushf  
  40c403:	add    al,0x8a
  40c405:	adc    DWORD PTR [edi+0x47789ce2],0x7a
  40c40c:	in     al,0xfb
  40c40e:	fimul  WORD PTR [edi]
  40c410:	add    DWORD PTR [ecx-0x77],eax
  40c413:	and    al,0x16
  40c415:	rcl    DWORD PTR cs:[ecx],0x28
  40c419:	cmp    edi,ebx
  40c41b:	adc    bh,BYTE PTR [eax]
  40c41d:	into   
  40c41e:	ret    0x7f57
  40c421:	enter  0x9396,0x4f
  40c425:	adc    BYTE PTR [ebx-0x7],cl
  40c428:	cmp    eax,0x4dbd2b07
  40c42d:	sbb    BYTE PTR [edx],ah
  40c42f:	stc    
  40c430:	jb     0x40c4a0
  40c432:	shr    BYTE PTR [ecx+0x7a],cl
  40c435:	inc    ebx
  40c436:	inc    eax
  40c437:	or     DWORD PTR ds:0x25e5f50d,esp
  40c43d:	addr16 das 
  40c43f:	sub    eax,0x69bf8059
  40c444:	dec    ecx
  40c445:	mov    ebp,0x667136c4
  40c44a:	pushf  
  40c44b:	mov    edi,0x152fc66d
  40c450:	adc    ecx,ecx
  40c452:	cdq    
  40c453:	and    bh,dl
  40c455:	add    edi,DWORD PTR [ebp-0x18]
  40c458:	mov    cl,cl
  40c45a:	cs es jmp 0x4f59:0x28a894f8
  40c463:	fldenv ds:0xdee8890
  40c469:	ja     0x40c40c
  40c46b:	ds retf 
  40c46d:	sub    bl,BYTE PTR [esi+0x1e9a4c54]
  40c473:	push   eax
  40c474:	dec    edx
  40c475:	std    
  40c476:	mov    cs,WORD PTR [ecx-0x7a]
  40c479:	aas    
  40c47a:	mov    DWORD PTR [ebx-0x4c],ecx
  40c47d:	ret    
  40c47e:	mov    al,ds:0x495e419b
  40c483:	or     al,0x18
  40c485:	mov    bh,0x96
  40c487:	pop    ds
  40c488:	retf   
  40c489:	dec    ebp
  40c48a:	sbb    DWORD PTR [esi-0x3b],0x96a78f68
  40c491:	inc    eax
  40c492:	pop    ecx
  40c493:	dec    ebx
  40c494:	lea    edi,[esi]
  40c496:	xor    esp,edi
  40c498:	mov    esp,0xea6dc02
  40c49d:	scas   eax,DWORD PTR es:[edi]
  40c49e:	rol    DWORD PTR [edx+edi*1+0x3b],cl
  40c4a2:	mov    edi,DWORD PTR [ecx+0x3]
  40c4a5:	(bad)  
  40c4a6:	mov    ebx,0x4136f771
  40c4ab:	cmp    bl,BYTE PTR [esi+0x73]
  40c4ae:	clc    
  40c4af:	dec    BYTE PTR [esp+ebx*4+0x9]
  40c4b3:	nop
  40c4b4:	xor    edx,ebp
  40c4b6:	lahf   
  40c4b7:	and    esp,DWORD PTR [edi-0x4b]
  40c4ba:	sub    esp,DWORD PTR ds:0xf72b9dc8
  40c4c0:	daa    
  40c4c1:	mov    edx,0x86de3530
  40c4c6:	call   0x5ef3:0xd696e479
  40c4cd:	shl    BYTE PTR [eax],1
  40c4cf:	ret    0x8264
  40c4d2:	ins    DWORD PTR es:[edi],dx
  40c4d3:	add    al,0xc6
  40c4d5:	mov    BYTE PTR [ebx-0x14],bl
  40c4d8:	(bad)  
  40c4da:	push   0x3e
  40c4dc:	xor    ecx,DWORD PTR [ebp-0x3e]
  40c4df:	pop    esi
  40c4e0:	iret   
  40c4e1:	mov    esp,0xb7a45e52
  40c4e6:	inc    edi
  40c4e7:	bound  esi,QWORD PTR [edx-0x4526c431]
  40c4ed:	pop    es
  40c4ee:	add    eax,0xe5c813ed
  40c4f3:	xor    BYTE PTR [ebp-0x16fdc616],cl
  40c4f9:	cdq    
  40c4fa:	fs xchg ebp,eax
  40c4fc:	dec    esp
  40c4fd:	neg    BYTE PTR [edx]
  40c4ff:	xchg   esp,eax
  40c500:	in     al,0xbd
  40c502:	or     ah,BYTE PTR [esi+0x696e0406]
  40c508:	enter  0xbd97,0x6a
  40c50c:	mov    al,0x4a
  40c50e:	add    DWORD PTR es:[edx+0x31],ebp
  40c512:	ins    DWORD PTR es:[edi],dx
  40c513:	sbb    eax,0xcd4fa82b
  40c518:	ins    BYTE PTR es:[edi],dx
  40c519:	xor    BYTE PTR [eax+0x2f],cl
  40c51c:	jbe    0x40c4ed
  40c51e:	cmp    DWORD PTR [esi-0x14],edi
  40c521:	or     eax,0xb738307
  40c526:	cmp    al,BYTE PTR [edi+0x158f80b0]
  40c52c:	arpl   WORD PTR ds:0xc3809e6e,sp
  40c532:	ds mov edx,0x6a679e77
  40c538:	xchg   esp,eax
  40c539:	adc    al,0xc3
  40c53b:	jle    0x40c577
  40c53d:	in     al,dx
  40c53e:	xor    esi,DWORD PTR [edi-0x2]
  40c541:	aas    
  40c542:	or     ebp,DWORD PTR [ecx-0x65]
  40c545:	jp     0x40c521
  40c547:	mov    ecx,0xa616c4b9
  40c54c:	cwde   
  40c54d:	or     BYTE PTR [edi],al
  40c54f:	inc    esp
  40c550:	mov    ah,0x1a
  40c552:	mov    ds:0x340c106c,eax
  40c557:	out    0x27,eax
  40c559:	push   edi
  40c55a:	push   cs
  40c55b:	out    0xc6,al
  40c55d:	mov    ?,WORD PTR [esi]
  40c55f:	or     al,0x60
  40c561:	pop    ebx
  40c562:	jg     0x40c5cf
  40c564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c565:	jnp    0x40c537
  40c567:	imul   DWORD PTR [esi+0x137b5873]
  40c56d:	xor    al,0x99
  40c56f:	lea    eax,[edi]
  40c571:	popaw  
  40c573:	xor    BYTE PTR [edi],0x41
  40c576:	rcl    edi,cl
  40c578:	xchg   BYTE PTR [edx+0x15],dh
  40c57b:	test   DWORD PTR [esp+ebx*1+0x1e127f7f],esp
  40c582:	push   ss
  40c583:	and    DWORD PTR [esi+0xbcaeb1b],esi
  40c589:	outs   dx,DWORD PTR ds:[esi]
  40c58a:	mov    ds:0xbeb6d76d,eax
  40c58f:	pop    eax
  40c590:	cs je  0x40c5ab
  40c593:	retf   
  40c594:	adc    bh,BYTE PTR [esi+0x1559352d]
  40c59a:	add    eax,0x9df1eca5
  40c59f:	mov    ebx,DWORD PTR [ecx+0x1c]
  40c5a2:	daa    
  40c5a3:	add    esi,DWORD PTR [edi-0x30]
  40c5a6:	jno    0x40c52c
  40c5a8:	jmp    0x9c5:0xd56a2f9d
  40c5af:	aam    0x44
  40c5b1:	fisttp QWORD PTR [ecx-0x40]
  40c5b4:	mov    dh,0xdd
  40c5b6:	mov    edx,0x40476a57
  40c5bb:	xchg   esp,eax
  40c5bc:	mov    esp,0xc09e8d10
  40c5c1:	xchg   ecx,eax
  40c5c2:	popf   
  40c5c3:	in     al,0x6b
  40c5c5:	jno    0x40c5ba
  40c5c7:	stos   DWORD PTR es:[edi],eax
  40c5c8:	pop    ds
  40c5c9:	sub    cl,BYTE PTR [edi+0x78]
  40c5cc:	jmp    0xb00df389
  40c5d1:	cmc    
  40c5d2:	sbb    al,BYTE PTR ds:0xd865c8b9
  40c5d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d9:	aas    
  40c5da:	sub    DWORD PTR [edx+0x1b6590a8],eax
  40c5e0:	in     al,0x63
  40c5e2:	jp     0x40c639
  40c5e4:	dec    ecx
  40c5e5:	xor    ebx,DWORD PTR [ebx-0xa]
  40c5e8:	sub    esp,DWORD PTR [edx]
  40c5ea:	mov    bl,ah
  40c5ec:	dec    esi
  40c5ed:	dec    ecx
  40c5ee:	loop   0x40c667
  40c5f0:	cmp    eax,0x617eada3
  40c5f5:	cld    
  40c5f6:	pop    ebx
  40c5f7:	jne    0x40c5e2
  40c5f9:	dec    ecx
  40c5fa:	mov    eax,0xfe196af7
  40c5ff:	xchg   ebx,eax
  40c600:	inc    ebx
  40c601:	push   esi
  40c602:	repnz xor al,0xb5
  40c605:	stc    
  40c606:	sbb    ebx,DWORD PTR [ebx]
  40c608:	mov    WORD PTR [edi+0x28f0ac31],es
  40c60e:	push   ecx
  40c60f:	aas    
  40c610:	adc    ch,BYTE PTR [edi+0x7e330886]
  40c616:	sbb    eax,0x6976029f
  40c61b:	xor    BYTE PTR [edi+ebx*8-0x729f0f4a],cl
  40c622:	inc    ebp
  40c623:	fcmovnb st,st(3)
  40c625:	out    dx,eax
  40c626:	hlt    
  40c627:	add    esp,DWORD PTR [ebx+0x355b6f72]
  40c62d:	dec    ebx
  40c62e:	enter  0x3464,0xf6
  40c632:	dec    edx
  40c633:	int3   
  40c634:	inc    edi
  40c635:	mov    ch,0xef
  40c637:	dec    DWORD PTR [eax+eax*2]
  40c63a:	fs sbb al,0xaf
  40c63d:	xor    dh,dh
  40c63f:	ffree  st(0)
  40c641:	cmp    BYTE PTR [esi+0x2d],ah
  40c644:	dec    ecx
  40c645:	lea    edx,[ebx-0x44]
  40c648:	jmp    0x40c68a
  40c64a:	mov    bl,0x1e
  40c64c:	or     DWORD PTR [eax],esi
  40c64e:	adc    dl,BYTE PTR [edx+0xcfa411e]
  40c654:	push   ecx
  40c655:	xchg   esi,eax
  40c656:	dec    ebp
  40c657:	pop    edx
  40c658:	iret   
  40c659:	xor    BYTE PTR [esi],bl
  40c65b:	cmp    BYTE PTR [ebx+ebx*2],dh
  40c65e:	inc    ebp
  40c65f:	xchg   ecx,eax
  40c660:	xchg   WORD PTR [eax],dx
  40c663:	jp     0x40c698
  40c665:	push   ds
  40c666:	and    al,BYTE PTR [edi-0x42]
  40c669:	pop    ds
  40c66a:	jmp    0x40c62c
  40c66c:	adc    ah,BYTE PTR [ebp+0x51ecb578]
  40c672:	shl    eax,cl
  40c674:	xchg   esi,eax
  40c675:	rcl    bl,cl
  40c677:	(bad)  
  40c678:	xor    DWORD PTR [edi],esi
  40c67a:	cmp    al,0x45
  40c67c:	aas    
  40c67d:	fcomp  QWORD PTR [edi-0x751ed96c]
  40c683:	mov    esi,0x755fab92
  40c688:	cmp    al,bh
  40c68a:	clc    
  40c68b:	imul   ecx,DWORD PTR [ecx],0x7b
  40c68e:	js     0x40c653
  40c690:	mov    dh,0xe2
  40c692:	mov    WORD PTR [edx],es
  40c694:	ret    
  40c695:	mov    ds:0x15a72222,eax
  40c69a:	bound  ebp,QWORD PTR [edi+eiz*4+0x76172aa1]
  40c6a1:	(bad)  
  40c6a2:	mov    ds,WORD PTR [ecx-0x4b12ed67]
  40c6a8:	cmp    BYTE PTR [ecx-0x5d],al
  40c6ab:	mov    esp,0x560a6636
  40c6b0:	popf   
  40c6b1:	int3   
  40c6b2:	stos   BYTE PTR es:[edi],al
  40c6b3:	pop    ebp
  40c6b4:	jae    0x40c694
  40c6b6:	jb     0x40c6bb
  40c6b8:	aam    0xa3
  40c6ba:	outs   dx,DWORD PTR ds:[esi]
  40c6bb:	inc    ecx
  40c6bc:	and    ecx,DWORD PTR [ebx+edi*2+0x38]
  40c6c0:	pop    es
  40c6c1:	inc    edx
  40c6c2:	jge    0x40c687
  40c6c4:	rcr    BYTE PTR [ebx-0x5d],1
  40c6c7:	bound  ebp,QWORD PTR [ebx+0x21]
  40c6ca:	ror    bl,cl
  40c6cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6cd:	shr    cl,0x6f
  40c6d0:	enter  0x5d84,0xd0
  40c6d4:	ss cmp al,0x31
  40c6d7:	mov    ah,0xfe
  40c6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6da:	icebp  
  40c6db:	xchg   ebx,eax
  40c6dc:	mov    bh,0x6d
  40c6de:	push   edx
  40c6df:	xchg   esp,eax
  40c6e0:	add    edx,DWORD PTR [esp+eax*1+0x437cf3ad]
  40c6e7:	or     eax,DWORD PTR [edi-0xa]
  40c6ea:	fneni(8087 only) 
  40c6ec:	leave  
  40c6ed:	psadbw mm0,QWORD PTR [eax+ecx*4-0x14]
  40c6f2:	rep stos BYTE PTR es:[edi],al
  40c6f4:	xchg   ebp,eax
  40c6f5:	xor    DWORD PTR [esi+0x40],0xffffffda
  40c6f9:	sbb    ebp,edx
  40c6fb:	xor    eax,0xa11ab67d
  40c700:	xor    al,0x44
  40c702:	mov    edi,0xe8254751
  40c707:	sti    
  40c708:	add    BYTE PTR [ebp+0x51],al
  40c70b:	mov    al,ds:0x8d822de1
  40c710:	mov    BYTE PTR [edi-0x2810a228],dl
  40c716:	dec    ecx
  40c717:	pop    edx
  40c718:	pop    ds
  40c719:	(bad)
  40c71c:	mov    ecx,0x4dd9a13c
  40c721:	cmp    eax,0x1cfc7f01
  40c726:	fsubr  st,st(3)
  40c728:	pop    ecx
  40c729:	adc    ebp,DWORD PTR ds:0xbe1aa404
  40c72f:	clc    
  40c730:	push   eax
  40c731:	repz loopne 0x40c71a
  40c734:	(bad)  
  40c735:	sti    
  40c736:	ins    DWORD PTR es:[edi],dx
  40c737:	or     al,0x26
  40c739:	sbb    esp,DWORD PTR [ecx+0x31778100]
  40c73f:	out    0x8d,al
  40c741:	xor    cl,0x15
  40c744:	adc    al,0x5e
  40c746:	jecxz  0x40c7ba
  40c748:	call   0x97d345d0
  40c74d:	ret    
  40c74e:	adc    ebx,DWORD PTR [edx]
  40c750:	stc    
  40c751:	in     eax,0xd5
  40c753:	jne    0x40c7ce
  40c755:	mov    dl,0xc9
  40c757:	je     0x40c7bc
  40c759:	into   
  40c75a:	mov    ebp,0x3de403c0
  40c75f:	mov    WORD PTR [esi+0x590d2e39],?
  40c765:	in     eax,0xe
  40c767:	xchg   ebp,eax
  40c768:	scas   al,BYTE PTR es:[edi]
  40c769:	mov    dl,0x8c
  40c76b:	mov    eax,DWORD PTR [eax-0xe]
  40c76e:	jae    0x40c729
  40c770:	push   edx
  40c771:	loopne 0x40c75b
  40c773:	mov    WORD PTR [esi-0x28],ss
  40c776:	jbe    0x40c7f4
  40c778:	jbe    0x40c7b6
  40c77a:	mov    bh,ah
  40c77c:	stos   DWORD PTR es:[edi],eax
  40c77d:	or     cl,BYTE PTR [edi+0x7d]
  40c780:	dec    esi
  40c781:	arpl   dx,cx
  40c783:	imul   esp,edx,0xbabacb1f
  40c789:	sub    al,BYTE PTR [edi+0x14f85ad9]
  40c78f:	lods   eax,DWORD PTR ds:[esi]
  40c790:	sbb    eax,0xb913b2c6
  40c795:	fcomip st,st(2)
  40c797:	sub    cl,BYTE PTR [edx+0x68]
  40c79a:	lahf   
  40c79b:	sbb    ch,BYTE PTR [esi-0x24]
  40c79e:	test   BYTE PTR [ebx],ah
  40c7a0:	push   ebx
  40c7a1:	call   0x6e230d15
  40c7a6:	sub    eax,DWORD PTR [ecx+0x2d]
  40c7a9:	rol    DWORD PTR [ebp+0x4d],cl
  40c7ac:	adc    al,0x1e
  40c7ae:	imul   ecx,DWORD PTR [ebx-0x405569b5],0x5f
  40c7b5:	xchg   ebx,eax
  40c7b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b7:	stc    
  40c7b8:	and    ebp,DWORD PTR [esi+0x725c4ce4]
  40c7be:	or     al,0x9c
  40c7c0:	jae    0x40c7e3
  40c7c2:	push   ss
  40c7c3:	push   ebp
  40c7c4:	push   edx
  40c7c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7c6:	in     al,0x63
  40c7c8:	idiv   al
  40c7ca:	sub    dh,BYTE PTR [edi]
  40c7cc:	adc    eax,0x3044a0b1
  40c7d1:	fsubr  QWORD PTR [ecx+eiz*4+0x3aca6293]
  40c7d8:	xchg   ebp,eax
  40c7d9:	mov    edx,0x49845f9c
  40c7de:	clc    
  40c7df:	adc    eax,0x14f9e3b
  40c7e4:	or     eax,0xf2bcaa63
  40c7e9:	inc    ebx
  40c7ea:	pop    es
  40c7eb:	nop
  40c7ec:	(bad)  
  40c7ed:	in     al,0xc2
  40c7ef:	or     BYTE PTR [edi],bl
  40c7f1:	inc    ecx
  40c7f2:	sahf   
  40c7f3:	sub    bl,BYTE PTR [ebp+0x264da576]
  40c7f9:	jl     0x40c798
  40c7fb:	jno    0x40c863
  40c7fd:	(bad)  
  40c7fe:	mov    WORD PTR [ebp-0x4163bcd9],cs
  40c804:	sub    ecx,DWORD PTR [ebp-0x3c]
  40c807:	push   ebx
  40c808:	(bad)  [ebp-0x4fb3fa9]
  40c80e:	xor    BYTE PTR [ecx-0x7],cl
  40c811:	ret    0x8d46
  40c814:	out    dx,al
  40c815:	mov    bh,0xce
  40c817:	xchg   ecx,eax
  40c818:	and    eax,0xb6fa2888
  40c81d:	and    al,0xc0
  40c81f:	out    0x14,al
  40c821:	pop    es
  40c822:	cmc    
  40c823:	loop   0x40c7b3
  40c825:	xchg   esp,eax
  40c826:	mov    dh,0xa3
  40c828:	aas    
  40c829:	ins    DWORD PTR es:[edi],dx
  40c82a:	popa   
  40c82b:	pop    eax
  40c82c:	out    0x2f,al
  40c82e:	and    ecx,DWORD PTR ds:0x7e612853
  40c834:	pop    ecx
  40c835:	in     eax,0xa7
  40c837:	test   DWORD PTR [eax],0x3e79202b
  40c83d:	dec    ebx
  40c83e:	xor    eax,0x1bb0d0a3
  40c843:	jg     0x40c872
  40c845:	jb     0x40c82d
  40c847:	sub    DWORD PTR [ecx+ebx*2-0x678659de],edx
  40c84e:	test   eax,0x81f75153
  40c853:	sti    
  40c854:	cli    
  40c855:	and    al,0xd9
  40c857:	dec    ebp
  40c858:	adc    al,0xf2
  40c85a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c85b:	lds    esi,FWORD PTR [esi+0x9]
  40c85e:	sbb    eax,0x4744c783
  40c863:	inc    BYTE PTR [ecx-0x70]
  40c866:	push   cs
  40c867:	pop    es
  40c868:	fldl2e 
  40c86a:	imul   edx,DWORD PTR [edi+0x2bc599f6],0xffffffba
  40c871:	sub    BYTE PTR [esi+0x6d],ah
  40c874:	sub    al,0xd7
  40c876:	push   edi
  40c877:	push   0xc9de8451
  40c87c:	je     0x40c8c8
  40c87e:	sahf   
  40c87f:	or     al,0x89
  40c881:	test   al,0x51
  40c883:	lock aad 0xd0
  40c886:	cld    
  40c887:	pop    edi
  40c888:	mov    edx,0x877d02f1
  40c88d:	pop    ebx
  40c88e:	jmp    0x40c89c
  40c890:	sbb    eax,0x769ebbe6
  40c895:	call   0x1044:0x30131274
  40c89c:	or     BYTE PTR [esi+eax*2+0x52e3b944],dl
  40c8a3:	jge    0x40c8a4
  40c8a5:	addr16 es dec ebp
  40c8a8:	fist   WORD PTR [esi+0x53e9029]
  40c8ae:	pop    edx
  40c8af:	call   0x6f8e:0xa7be6864
  40c8b6:	fxch   st(1)
  40c8b8:	in     al,dx
  40c8b9:	jmp    0x199:0x1e49831
  40c8c0:	je     0x40c881
  40c8c2:	out    0x23,eax
  40c8c4:	lods   al,BYTE PTR ds:[esi]
  40c8c5:	leave  
  40c8c6:	mov    ah,al
  40c8c8:	inc    esi
  40c8c9:	dec    eax
  40c8ca:	mov    ecx,0xa2cd1532
  40c8cf:	xchg   DWORD PTR [esp+ecx*4],ecx
  40c8d2:	xor    edi,DWORD PTR [esi+edx*2-0x27cf2778]
  40c8d9:	push   ebp
  40c8da:	pop    ebx
  40c8db:	es hlt 
  40c8dd:	bound  esp,QWORD PTR [edi-0x6da80312]
  40c8e3:	cli    
  40c8e4:	das    
  40c8e5:	fucomip st,st(5)
  40c8e7:	(bad)  
  40c8e8:	mov    esi,ecx
  40c8ea:	retf   0x8846
  40c8ed:	jg     0x40c8c3
  40c8ef:	push   edx
  40c8f1:	xchg   DWORD PTR [edx],edi
  40c8f3:	jg     0x40c965
  40c8f5:	mov    ah,0x65
  40c8f7:	sub    BYTE PTR [ebx-0x76069bcd],cl
  40c8fd:	shl    BYTE PTR [ecx+ebx*4-0x1d43e879],0xa4
  40c905:	inc    ecx
  40c906:	mov    al,ds:0xfa8b5173
  40c90b:	inc    ecx
  40c90c:	loop   0x40c8eb
  40c90e:	push   ecx
  40c90f:	or     BYTE PTR [esi],bl
  40c911:	pop    esi
  40c912:	or     al,0x31
  40c914:	mov    ds:0xf3bac872,eax
  40c919:	mov    eax,0x1b81c7eb
  40c91e:	sub    eax,DWORD PTR [ecx+0x1748ea15]
  40c924:	cmovo  eax,edx
  40c927:	cwde   
  40c928:	pop    edx
  40c929:	fucomip st,st(1)
  40c92b:	push   ds
  40c92c:	(bad)  
  40c92d:	and    bh,ah
  40c92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c930:	dec    ecx
  40c931:	or     eax,0x3d488248
  40c936:	or     eax,0xb67dff68
  40c93b:	test   al,0x56
  40c93d:	mov    BYTE PTR [ecx+0x4360826c],ah
  40c943:	mul    DWORD PTR [ecx+eiz*2-0x1d]
  40c947:	mov    edx,0xde7723cd
  40c94c:	neg    BYTE PTR [eax+eiz*8]
  40c94f:	pop    edi
  40c950:	fdivr  QWORD PTR [esi-0x74d3cee8]
  40c956:	mov    esi,0x917daf6
  40c95b:	cld    
  40c95c:	xor    bl,BYTE PTR [ebp-0x5d]
  40c95f:	mov    ds:0x21e3fcef,eax
  40c964:	and    ch,cl
  40c966:	adc    ecx,DWORD PTR [ecx]
  40c968:	adc    ebx,0xcfde3ff2
  40c96e:	rep outs dx,DWORD PTR ds:[esi]
  40c970:	mov    ch,0x98
  40c972:	adc    ebp,DWORD PTR [edi+0x74]
  40c975:	pop    esi
  40c976:	scas   al,BYTE PTR es:[edi]
  40c977:	pusha  
  40c978:	test   al,0x6f
  40c97a:	popa   
  40c97b:	mov    al,0xe6
  40c97d:	es dec edi
  40c97f:	dec    edi
  40c980:	das    
  40c981:	loope  0x40c978
  40c983:	inc    ebx
  40c984:	sub    al,0x21
  40c986:	adc    cl,dl
  40c988:	jmp    0x2fc88194
  40c98d:	mov    gs,ecx
  40c98f:	(bad)  
  40c990:	jns    0x40c9b8
  40c992:	les    esi,FWORD PTR [eax-0x3a7b3e26]
  40c998:	mov    ebx,0xd3f03e78
  40c99d:	cld    
  40c99e:	pop    ebp
  40c99f:	pop    es
  40c9a0:	int    0xee
  40c9a2:	les    ecx,FWORD PTR [edx]
  40c9a4:	loopne 0x40c9c1
  40c9a6:	lahf   
  40c9a7:	mov    esp,0x4717e0ef
  40c9ac:	mov    dh,0x93
  40c9ae:	dec    ebp
  40c9af:	fdiv   st(5),st
  40c9b1:	je     0x40ca05
  40c9b3:	out    0x31,eax
  40c9b5:	xchg   edx,eax
  40c9b6:	jle    0x40c9c7
  40c9b8:	push   edi
  40c9b9:	add    al,0xec
  40c9bb:	sbb    BYTE PTR [eax-0x35446f39],bh
  40c9c1:	aas    
  40c9c2:	call   0x1378:0xf0211b94
  40c9c9:	dec    edx
  40c9ca:	mov    ah,0xa0
  40c9cc:	rcr    BYTE PTR [ecx+edi*8-0x2f],cl
  40c9d0:	aaa    
  40c9d1:	or     eax,0x5f8e5f55
  40c9d6:	mov    bh,0x3
  40c9d8:	pop    esi
  40c9d9:	aam    0x74
  40c9db:	aad    0xfc
  40c9dd:	call   FWORD PTR [ebx+0x4c9c8c12]
  40c9e3:	adc    BYTE PTR [edx-0x11c0b823],bl
  40c9e9:	sub    DWORD PTR [ebx],0x4e
  40c9ec:	mov    esi,0xc86276df
  40c9f1:	ins    BYTE PTR es:[edi],dx
  40c9f2:	cmp    al,0x6e
  40c9f4:	les    edi,FWORD PTR [eax-0x61]
  40c9f7:	mov    ebp,0x863cf3b
  40c9fc:	js     0x40ca1b
  40c9fe:	push   edi
  40c9ff:	ds movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca02:	or     dh,dh
  40ca04:	pusha  
  40ca05:	and    al,0xc3
  40ca07:	jmp    0xb095:0x73879fd7
  40ca0e:	pop    eax
  40ca0f:	call   0x5ca40e4d
  40ca14:	into   
  40ca15:	adc    al,0x7a
  40ca17:	call   0xae3ad629
  40ca1c:	xor    al,0xdc
  40ca1e:	out    0x59,eax
  40ca20:	or     cl,BYTE PTR [esi]
  40ca22:	call   0x8c77:0x29039749
  40ca29:	xchg   edx,eax
  40ca2a:	adc    al,0x4b
  40ca2c:	mov    edi,0x9b0db409
  40ca31:	sbb    al,0xb8
  40ca33:	iret   
  40ca34:	jecxz  0x40ca24
  40ca36:	mov    ds:0xcef2916f,al
  40ca3b:	mov    esp,0xdd4cd748
  40ca40:	jmp    FWORD PTR [ebx+0x56ed75d1]
  40ca46:	inc    ecx
  40ca47:	mov    ds,ecx
  40ca49:	fs and eax,0xc5ee8909
  40ca4f:	(bad)  
  40ca51:	jns    0x40ca3a
  40ca53:	adc    al,0xba
  40ca55:	xchg   ebp,eax
  40ca56:	or     eax,0xeb78a295
  40ca5b:	repnz push es
  40ca5d:	sub    al,BYTE PTR [edi+0x12]
  40ca60:	out    dx,al
  40ca61:	rol    al,cl
  40ca63:	mov    ebx,0x6118d579
  40ca68:	fdiv   DWORD PTR [edx-0x44]
  40ca6b:	imul   ebp,DWORD PTR ds:0x5a36144f,0x6f
  40ca72:	daa    
  40ca73:	je     0x40ca82
  40ca75:	nop
  40ca76:	jg     0x40ca3e
  40ca78:	push   eax
  40ca79:	mov    edi,0xbfdcf89b
  40ca7e:	adc    cl,BYTE PTR [edi-0x6bf185a8]
  40ca84:	repnz adc edi,DWORD PTR [ebx+esi*8+0x588b0a03]
  40ca8c:	das    
  40ca8d:	add    eax,0xf7497113
  40ca92:	leave  
  40ca93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca94:	xor    DWORD PTR [edx-0x2e176d05],edi
  40ca9a:	cmp    eax,0xddfa5f54
  40ca9f:	jnp    0x40cb06
  40caa1:	clc    
  40caa2:	es leave 
  40caa4:	adc    dl,dh
  40caa6:	inc    eax
  40caa7:	jg     0x40caf2
  40caa9:	test   BYTE PTR [ebx],dh
  40caab:	jnp    0x40ca2f
  40caad:	xchg   ebx,eax
  40caae:	push   0x657fb4b0
  40cab3:	fbld   TBYTE PTR [edi]
  40cab5:	cmp    DWORD PTR [esi],eax
  40cab7:	dec    esi
  40cab8:	push   ds
  40cab9:	iret   
  40caba:	jp     0x40ca81
  40cabc:	test   DWORD PTR [ecx+0x60f3cff1],ebx
  40cac2:	mov    ah,0x8e
  40cac4:	inc    ecx
  40cac5:	jmp    FWORD PTR [eax-0x451ad1ba]
  40cacb:	push   ebx
  40cacc:	fs jmp 0x40cae0
  40cacf:	nop
  40cad0:	sbb    BYTE PTR [edx+eax*4-0x5be16d41],0xa1
  40cad8:	push   ecx
  40cad9:	outs   dx,BYTE PTR ds:[esi]
  40cada:	loope  0x40cb06
  40cadc:	pop    edx
  40cadd:	sar    eax,1
  40cadf:	xchg   ecx,eax
  40cae0:	and    BYTE PTR [edi+edx*8],dh
  40cae3:	pop    ss
  40cae4:	xchg   esp,eax
  40cae5:	fisubr DWORD PTR [edi-0x1c]
  40cae8:	rcr    DWORD PTR [ebp-0x2ece6d5e],0xd9
  40caef:	jae    0x40cb03
  40caf1:	lock xchg esp,eax
  40caf3:	mov    ebx,0x2b1c6311
  40caf8:	or     BYTE PTR [edi-0x41],ch
  40cafb:	ins    DWORD PTR es:[edi],dx
  40cafc:	inc    esi
  40cafd:	xor    edi,DWORD PTR [ebx]
  40caff:	pusha  
  40cb00:	mov    BYTE PTR [ecx+0x19a483e9],dh
  40cb06:	retf   
  40cb07:	cs cmp esp,esp
  40cb0a:	aaa    
  40cb0b:	mov    eax,0x59cf81ed
  40cb10:	cdq    
  40cb11:	mov    DWORD PTR [eax-0x5c62c673],ecx
  40cb17:	ss mov ch,0x6b
  40cb1a:	inc    ecx
  40cb1b:	dec    edx
  40cb1c:	mov    ecx,0x1c1f714c
  40cb21:	xchg   ebp,eax
  40cb22:	push   ecx
  40cb23:	add    al,BYTE PTR [esi]
  40cb25:	mov    ds:0x8c445bfd,al
  40cb2a:	mov    fs,WORD PTR [ebp+eax*8-0x47]
  40cb2e:	push   ss
  40cb2f:	bound  ecx,QWORD PTR [eax+0x1]
  40cb32:	fcmovu st,st(7)
  40cb34:	dec    edx
  40cb35:	int    0xa
  40cb37:	cmp    eax,0xb400beb1
  40cb3c:	in     eax,0xa6
  40cb3e:	hlt    
  40cb3f:	pusha  
  40cb40:	sub    eax,0xc86f3ce
  40cb45:	pop    esi
  40cb46:	sub    DWORD PTR [esi+ecx*8+0x51c705e4],edx
  40cb4d:	sub    BYTE PTR [esi-0x47],ah
  40cb50:	jno    0x40cb51
  40cb52:	addr16 std 
  40cb54:	rcr    DWORD PTR [ebx],cl
  40cb56:	dec    ebx
  40cb57:	mov    ecx,0x6e4604f4
  40cb5c:	gs retf 
  40cb5e:	in     al,0xc0
  40cb60:	xchg   DWORD PTR [eax],ebp
  40cb62:	pop    ebx
  40cb63:	call   0x8671be3d
  40cb68:	xor    ecx,DWORD PTR [ebx+0x6431c0cf]
  40cb6e:	xchg   ebx,eax
  40cb6f:	inc    edi
  40cb70:	sub    BYTE PTR [edi-0x5e5d04dd],0x68
  40cb77:	dec    esp
  40cb78:	inc    edi
  40cb79:	imul   edi,DWORD PTR [edi+0x1d88e6fa],0xc3e2f04a
  40cb83:	lods   al,BYTE PTR ds:[esi]
  40cb84:	mov    ah,BYTE PTR [ecx]
  40cb86:	rcl    DWORD PTR [edi],cl
  40cb88:	in     eax,0xf5
  40cb8a:	imul   eax
  40cb8c:	and    ebx,DWORD PTR [ecx+0x46]
  40cb8f:	loop   0x40cb93
  40cb91:	and    al,0x45
  40cb93:	cmp    edi,DWORD PTR [edi+edi*8-0x15f3cab]
  40cb9a:	dec    esi
  40cb9b:	xchg   esi,eax
  40cb9c:	cli    
  40cb9d:	mov    ds:0x6140206f,eax
  40cba2:	xor    ch,dh
  40cba4:	cmp    eax,0x814ebb7c
  40cba9:	in     al,dx
  40cbaa:	out    dx,eax
  40cbab:	sbb    eax,0x12858f68
  40cbb0:	out    0x22,al
  40cbb2:	pushf  
  40cbb3:	pop    ss
  40cbb4:	shr    BYTE PTR [ebx-0x6e],1
  40cbb7:	inc    esp
  40cbb8:	push   ds
  40cbb9:	imul   edx,DWORD PTR [edx+0x68],0x291446cb
  40cbc0:	cmp    ecx,esp
  40cbc2:	sub    DWORD PTR [ecx+0x43],ebp
  40cbc5:	sbb    eax,0xcbf4feb7
  40cbca:	inc    eax
  40cbcb:	sbb    al,0x2a
  40cbcd:	sub    bl,BYTE PTR [ecx+0x65094062]
  40cbd3:	add    al,0xad
  40cbd5:	jo     0x40cbe6
  40cbd7:	popf   
  40cbd8:	mov    ds,edi
  40cbda:	outs   dx,BYTE PTR ds:[esi]
  40cbdb:	hlt    
  40cbdc:	xor    DWORD PTR [ebp-0x652e71c7],0x71d6e327
  40cbe6:	or     BYTE PTR [edx-0x30],dh
  40cbe9:	or     ecx,DWORD PTR [esi]
  40cbeb:	bound  edx,QWORD PTR [eax+0x3e]
  40cbee:	addr16 (bad) 
  40cbf0:	loopne 0x40cc18
  40cbf2:	out    dx,eax
  40cbf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbf4:	pop    edx
  40cbf5:	mov    WORD PTR [edx],?
  40cbf7:	pusha  
  40cbf8:	push   0x7ca631c1
  40cbfd:	dec    eax
  40cbfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbff:	cwde   
  40cc00:	aad    0x8e
  40cc02:	pop    ecx
  40cc03:	and    cl,BYTE PTR [eax+0x2c]
  40cc06:	daa    
  40cc07:	mov    dl,0xc4
  40cc09:	pop    esp
  40cc0a:	push   ebx
  40cc0b:	call   0x7e76:0xbcfd0eaf
  40cc12:	jle    0x40cc67
  40cc14:	test   ch,0x1e
  40cc17:	jns    0x40cc42
  40cc19:	test   al,0x79
  40cc1b:	or     edx,DWORD PTR [esi+0x1f58729f]
  40cc21:	inc    eax
  40cc22:	std    
  40cc23:	shl    DWORD PTR [ebp+eax*8+0x54ee12c9],1
  40cc2a:	mov    bl,0xb1
  40cc2c:	cli    
  40cc2d:	ss out dx,al
  40cc2f:	inc    edx
  40cc30:	sbb    BYTE PTR [eax],dh
  40cc32:	add    esp,DWORD PTR [eax+eax*1+0x24753bed]
  40cc39:	rcr    DWORD PTR [ebp-0x6a996c71],1
  40cc3f:	lock out 0xd4,al
  40cc42:	or     eax,0x731c9d5f
  40cc47:	pop    ebx
  40cc48:	test   eax,0x441f588f
  40cc4d:	and    DWORD PTR [esi+0x69],eax
  40cc50:	cli    
  40cc51:	mov    esp,0x174b1370
  40cc56:	xor    BYTE PTR [edi],cl
  40cc58:	xchg   edi,eax
  40cc59:	sti    
  40cc5a:	jecxz  0x40cc72
  40cc5c:	dec    ebx
  40cc5d:	adc    dl,BYTE PTR [ebp+0x54277fe3]
  40cc63:	pop    eax
  40cc64:	ins    BYTE PTR es:[edi],dx
  40cc65:	(bad)  
  40cc66:	dec    esp
  40cc67:	call   FWORD PTR [eax-0x174e6b21]
  40cc6d:	add    DWORD PTR [ecx],esi
  40cc6f:	or     DWORD PTR [edx+0x18cde3d8],ebp
  40cc75:	scas   al,BYTE PTR es:[edi]
  40cc76:	inc    ecx
  40cc77:	push   0x44
  40cc79:	pop    edx
  40cc7a:	push   0xace2c555
  40cc7f:	inc    ebx
  40cc80:	leave  
  40cc81:	aaa    
  40cc82:	cld    
  40cc83:	or     eax,0xa784f518
  40cc88:	loop   0x40cc7d
  40cc8a:	jae    0x40cc2c
  40cc8c:	rcl    eax,0xa7
  40cc8f:	inc    edi
  40cc90:	loope  0x40cc54
  40cc92:	aad    0x3f
  40cc94:	mov    WORD PTR [eax],es
  40cc96:	push   es
  40cc97:	inc    ecx
  40cc98:	push   ss
  40cc99:	call   0x8106001c
  40cc9e:	mov    cl,0x39
  40cca0:	js     0x40cd21
  40cca2:	dec    ecx
  40cca3:	in     eax,0x9a
  40cca5:	jg     0x40cd1d
  40cca7:	pop    ebp
  40cca8:	pop    edi
  40cca9:	xor    ebx,DWORD PTR [ebx+0x60e75429]
  40ccaf:	test   DWORD PTR [edi+0x22a64368],ebp
  40ccb5:	out    0xb8,al
  40ccb7:	xchg   DWORD PTR [ecx+esi*8+0x2e],eax
  40ccbb:	inc    ebp
  40ccbc:	enter  0x7aba,0xf2
  40ccc0:	or     eax,0x9b7f29b2
  40ccc5:	hlt    
  40ccc6:	jecxz  0x40ccc1
  40ccc8:	pushf  
  40ccc9:	int3   
  40ccca:	std    
  40cccb:	push   esp
  40cccc:	push   es
  40cccd:	idiv   BYTE PTR [eax-0x2b4fdae2]
  40ccd3:	inc    edx
  40ccd4:	pop    ebp
  40ccd5:	sbb    DWORD PTR [esi],eax
  40ccd7:	lea    ebx,[edx+eax*2]
  40ccda:	enter  0x9e9,0x47
  40ccde:	retf   0xa4a2
  40cce1:	ja     0x40ccf0
  40cce3:	dec    ebx
  40cce4:	ins    BYTE PTR es:[edi],dx
  40cce5:	das    
  40cce6:	sbb    bh,bh
  40cce8:	fnstenv [eax]
  40ccea:	in     al,0x9c
  40ccec:	cmp    DWORD PTR ds:0xa9535fab,eax
  40ccf2:	push   esi
  40ccf3:	iret   
  40ccf4:	mov    al,0x17
  40ccf6:	fmul   QWORD PTR ds:0xdf286f39
  40ccfc:	enter  0x1d,0xd3
  40cd00:	(bad)  
  40cd01:	jmp    0x40cd2e
  40cd03:	sahf   
  40cd04:	clc    
  40cd05:	sti    
  40cd06:	push   esi
  40cd07:	pop    eax
  40cd08:	mov    ecx,0xe79cf112
  40cd0d:	lods   al,BYTE PTR ds:[esi]
  40cd0e:	inc    ecx
  40cd0f:	xor    eax,0xc2104d2a
  40cd14:	push   eax
  40cd15:	cwde   
  40cd16:	adc    al,0xe5
  40cd18:	in     al,dx
  40cd19:	xchg   BYTE PTR [ebp+eiz*4-0x11774a29],dl
  40cd20:	push   cs
  40cd21:	cmp    eax,0xff140bcb
  40cd26:	jns    0x40cd6d
  40cd28:	push   es
  40cd29:	push   esi
  40cd2a:	push   ss
  40cd2b:	popa   
  40cd2c:	fwait
  40cd2d:	std    
  40cd2e:	dec    ebp
  40cd2f:	mov    fs,WORD PTR [eax+0x7b]
  40cd32:	scas   eax,DWORD PTR es:[edi]
  40cd33:	js     0x40cd47
  40cd35:	or     eax,DWORD PTR [ecx-0x58]
  40cd38:	or     bl,dl
  40cd3a:	je     0x40cd4a
  40cd3c:	rcl    DWORD PTR [ebx+0x78c1ded7],0x7e
  40cd43:	into   
  40cd44:	xor    ah,BYTE PTR [edx-0x5f]
  40cd47:	(bad)  
  40cd48:	mov    edi,0xc936b5ab
  40cd4d:	je     0x40cdb6
  40cd4f:	test   al,0xa3
  40cd51:	mov    WORD PTR ds:0xeea43faf,ds
  40cd57:	add    eax,0x185eaf09
  40cd5c:	rol    BYTE PTR [eax+0x17],1
  40cd5f:	sub    al,0xbb
  40cd61:	mov    dl,0xd2
  40cd64:	(bad)  
  40cd65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd66:	fs adc al,0x39
  40cd69:	inc    eax
  40cd6a:	cli    
  40cd6b:	add    bl,0x3
  40cd6e:	outs   dx,BYTE PTR ds:[esi]
  40cd6f:	(bad)  [esi+0x73]
  40cd72:	ja     0x40ccff
  40cd74:	xchg   DWORD PTR [esi+0x5aa87ded],esp
  40cd7a:	pop    ebx
  40cd7b:	sub    eax,0x62775ef2
  40cd80:	in     eax,0x5f
  40cd82:	dec    esi
  40cd83:	stos   BYTE PTR es:[edi],al
  40cd84:	mov    al,ds:0xdf4af915
  40cd89:	add    BYTE PTR [eax],dl
  40cd8b:	popa   
  40cd8c:	ss retf 0x12e5
  40cd90:	mov    ah,0x79
  40cd92:	mov    esp,0x996863b
  40cd97:	pop    esp
  40cd98:	call   0x88c34c25
  40cd9d:	mov    ebp,0xf8827cda
  40cda2:	pop    ss
  40cda3:	sti    
  40cda4:	xchg   ecx,eax
  40cda5:	aam    0x8
  40cda7:	cvtps2pi mm1,QWORD PTR gs:[esi+edx*1-0x71]
  40cdad:	add    DWORD PTR [esi+eax*8],eax
  40cdb0:	js     0x40cd7e
  40cdb2:	add    eax,0x50241b18
  40cdb7:	rcl    BYTE PTR [ebp-0x3],0xdf
  40cdbb:	inc    eax
  40cdbc:	mov    cl,0xae
  40cdbe:	sti    
  40cdbf:	ror    DWORD PTR [eax],cl
  40cdc1:	sbb    BYTE PTR [ebx],dl
  40cdc3:	ins    DWORD PTR es:[edi],dx
  40cdc4:	lock mov ebx,0x5ad30af5
  40cdca:	repz push ecx
  40cdcc:	dec    ecx
  40cdcd:	mov    cl,al
  40cdcf:	shl    ch,0xb9
  40cdd2:	arpl   di,bx
  40cdd4:	out    dx,al
  40cdd5:	repz int 0xa4
  40cdd8:	add    DWORD PTR [ebp+0x345d7962],0x22985cf2
  40cde2:	cli    
  40cde3:	xor    al,0x21
  40cde5:	jns    0x40cdea
  40cde7:	push   esi
  40cde8:	fsubr  QWORD PTR [eax-0xf]
  40cdeb:	push   eax
  40cdec:	or     al,0x3c
  40cdee:	xchg   dh,al
  40cdf0:	mov    bh,0x9b
  40cdf2:	fistp  QWORD PTR [eax+0x1f]
  40cdf5:	(bad)  
  40cdf6:	fisubr DWORD PTR [ecx]
  40cdf8:	daa    
  40cdf9:	retf   0xea0f
  40cdfc:	add    DWORD PTR [eax],0x21c5068c
  40ce02:	lock push 0x64
  40ce05:	xor    eax,0xe0d150b8
  40ce0a:	xor    BYTE PTR ds:0x92e91942,0xb2
  40ce11:	xor    eax,0x186629b4
  40ce16:	lock fucomip st,st(7)
  40ce19:	in     eax,dx
  40ce1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce1b:	rcr    ecx,cl
  40ce1d:	rcr    edx,1
  40ce1f:	pusha  
  40ce20:	push   edi
  40ce21:	mov    WORD PTR [edi-0x3f355c4c],cs
  40ce27:	(bad)  
  40ce28:	ficom  WORD PTR [ecx+0x38]
  40ce2b:	mov    DWORD PTR [ebp-0x4713653d],ebx
  40ce31:	and    bl,al
  40ce33:	pop    ds
  40ce34:	jge    0x40ce98
  40ce36:	inc    ebp
  40ce37:	or     eax,0x64e36b12
  40ce3c:	inc    esi
  40ce3d:	add    eax,0x434ce8ab
  40ce42:	popf   
  40ce43:	mov    ebx,0x30a69150
  40ce48:	rcl    BYTE PTR [ebp-0x530d00d9],0x3c
  40ce4f:	les    esi,FWORD PTR [ecx-0x410c9a67]
  40ce55:	add    ebx,ebp
  40ce57:	fcomi  st,st(4)
  40ce59:	xor    DWORD PTR ds:0xea1c6901,eax
  40ce5f:	xchg   ebp,eax
  40ce60:	mov    eax,ds:0xb9ce6f78
  40ce65:	loopne 0x40cee6
  40ce67:	pop    ss
  40ce68:	sub    eax,0x2d324c58
  40ce6d:	(bad)  
  40ce6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce70:	in     al,0x9a
  40ce72:	inc    esi
  40ce73:	sbb    bl,al
  40ce75:	gs inc ebx
  40ce77:	aad    0xc0
  40ce79:	sub    eax,0x930b8db2
  40ce7e:	mov    bl,0x7e
  40ce80:	lahf   
  40ce81:	push   esi
  40ce82:	inc    esp
  40ce83:	pop    edx
  40ce84:	add    BYTE PTR [ecx],dl
  40ce86:	fisubr WORD PTR [edi+eax*8+0x30]
  40ce8a:	sub    ah,BYTE PTR [edi-0x66]
  40ce8d:	lock sub al,0x5c
  40ce90:	ins    DWORD PTR es:[edi],dx
  40ce91:	fnstsw WORD PTR [esp+edx*1]
  40ce94:	cld    
  40ce95:	jbe    0x40cef8
  40ce97:	out    0xcd,eax
  40ce99:	jae    0x40ceb6
  40ce9b:	inc    esp
  40ce9c:	add    edi,DWORD PTR [esi+0x11]
  40ce9f:	jmp    0x2a6c:0xe8dd7eb8
  40cea6:	arpl   WORD PTR [edi+edi*8-0x4912c7ad],di
  40cead:	aas    
  40ceae:	leave  
  40ceaf:	aaa    
  40ceb0:	xchg   edi,eax
  40ceb1:	or     eax,0xfa95696a
  40ceb6:	pop    ebx
  40ceb7:	lods   eax,DWORD PTR ds:[esi]
  40ceb8:	lods   eax,DWORD PTR ds:[esi]
  40ceb9:	add    esp,edi
  40cebb:	xor    DWORD PTR [ecx-0x73a1c085],edx
  40cec1:	fdiv   DWORD PTR [ebx]
  40cec3:	mov    al,ds:0xbcb259de
  40cec8:	push   es
  40cec9:	or     eax,0x16dd5129
  40cece:	sbb    eax,0xed1c98a4
  40ced3:	hlt    
  40ced4:	imul   edx,DWORD PTR [ebx+0x33],0x45
  40ced8:	imul   ecx,esi,0xffffffad
  40cedb:	arpl   WORD PTR [edx],di
  40cedd:	jns    0x40cf55
  40cedf:	cwde   
  40cee0:	mov    dl,BYTE PTR [ecx+ebp*1+0x58]
  40cee4:	lahf   
  40cee5:	mov    ecx,0x1c16ba86
  40ceea:	ror    BYTE PTR [edi-0x9185266],0xe7
  40cef1:	sub    BYTE PTR [esi-0x3a],bh
  40cef4:	stos   BYTE PTR es:[edi],al
  40cef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cef6:	push   0x2f46f5f7
  40cefb:	test   BYTE PTR [eax+edx*2+0x75],ah
  40ceff:	mov    bh,0x92
  40cf01:	xor    ebp,DWORD PTR [eax-0x13eeb448]
  40cf07:	inc    ebp
  40cf08:	sbb    BYTE PTR [eax],bl
  40cf0a:	cmc    
  40cf0b:	ds dec edx
  40cf0d:	aas    
  40cf0e:	int3   
  40cf0f:	aaa    
  40cf10:	aam    0x31
  40cf12:	je     0x40cf64
  40cf14:	or     BYTE PTR [edi-0x5d5ae6ff],ch
  40cf1a:	sbb    DWORD PTR [ebp+edi*4-0x1a],0xffffff9e
  40cf1f:	ja     0x40cf74
  40cf21:	push   esp
  40cf22:	jmp    0x40cef0
  40cf24:	xor    eax,0x2549a4db
  40cf29:	jae    0x40cfa4
  40cf2b:	sbb    al,0x85
  40cf2d:	(bad)  
  40cf2f:	(bad)  
  40cf30:	scas   al,BYTE PTR es:[edi]
  40cf31:	retf   
  40cf32:	add    ah,bh
  40cf34:	jle    0x40cf4d
  40cf36:	(bad)  
  40cf37:	sti    
  40cf38:	repnz bound ecx,QWORD PTR [ebp+0xb79779f]
  40cf3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf40:	in     eax,0xa1
  40cf42:	ret    0x6bdc
  40cf45:	mov    ?,WORD PTR [eax+0x4c]
  40cf48:	add    BYTE PTR [edi-0x1a],ch
  40cf4b:	bound  esi,QWORD PTR [eax+0x57]
  40cf4e:	out    0xcb,al
  40cf50:	gs cld 
  40cf52:	int    0x59
  40cf54:	push   edx
  40cf55:	xchg   edx,eax
  40cf56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf57:	pop    ds
  40cf58:	lahf   
  40cf59:	test   al,0x95
  40cf5b:	imul   DWORD PTR [ebx-0x15]
  40cf5e:	cli    
  40cf5f:	mov    ds:0x6e9552c0,eax
  40cf64:	ud2    
  40cf66:	or     al,0x50
  40cf68:	ficomp DWORD PTR [esi+0x42e2633d]
  40cf6e:	push   cs
  40cf6f:	inc    ecx
  40cf70:	leave  
  40cf71:	add    ch,BYTE PTR [edi-0x1d]
  40cf74:	ja     0x40cf56
  40cf76:	mov    bl,0xda
  40cf78:	inc    esi
  40cf79:	les    edi,FWORD PTR [edx+0x3e]
  40cf7c:	jnp    0x40cfcf
  40cf7e:	or     BYTE PTR [eax],bh
  40cf80:	lea    esi,[esi]
  40cf82:	push   DWORD PTR [eax]
  40cf84:	dec    ebx
  40cf85:	rcl    DWORD PTR [ebp+0x3559a16a],1
  40cf8b:	xchg   ebx,eax
  40cf8c:	xor    edi,DWORD PTR [ebx+0x21a0c827]
  40cf92:	fiadd  DWORD PTR [ebx]
  40cf94:	jno    0x40cf7b
  40cf96:	mov    bl,0x17
  40cf98:	in     eax,dx
  40cf99:	xchg   esp,eax
  40cf9a:	mov    edi,0x2f11067b
  40cf9f:	test   esi,0x25cc4332
  40cfa5:	shr    BYTE PTR [esi+edx*8+0x3d],1
  40cfa9:	fild   DWORD PTR [esi+eiz*4+0x2f]
  40cfad:	pop    eax
  40cfae:	mov    ch,0x35
  40cfb0:	sbb    ebp,ebp
  40cfb2:	mov    dl,0x6a
  40cfb4:	mov    bl,bh
  40cfb6:	cwde   
  40cfb7:	push   edi
  40cfb8:	push   cs
  40cfb9:	jo     0x40cffa
  40cfbb:	fisub  WORD PTR ds:0x8aa5985a
  40cfc1:	push   ebx
  40cfc2:	jmp    0xce8b:0x378ee4c7
  40cfc9:	test   edi,edx
  40cfcb:	iret   
  40cfcc:	je     0x40d027
  40cfce:	jo     0x40d002
  40cfd0:	push   0x58
  40cfd2:	fwait
  40cfd3:	fs sbb eax,0x90c7eabe
  40cfd9:	lock cld 
  40cfdb:	fwait
  40cfdc:	outs   dx,DWORD PTR ds:[esi]
  40cfdd:	lds    esi,FWORD PTR [edi]
  40cfdf:	jle    0x40d029
  40cfe1:	push   ds
  40cfe2:	shr    bl,cl
  40cfe4:	js     0x40cff3
  40cfe6:	js     0x40d029
  40cfe8:	imul   esi,DWORD PTR [esi-0x248dfaf4],0xffffffa8
  40cfef:	adc    esp,esp
  40cff1:	lods   al,BYTE PTR ds:[esi]
  40cff2:	mov    al,0xb
  40cff4:	jae    0x40d06f
  40cff6:	pop    esp
  40cff7:	xlat   BYTE PTR ds:[ebx]
  40cff8:	xchg   DWORD PTR [edx-0x60],esp
  40cffb:	sbb    BYTE PTR [edi-0x29],ch
  40cffe:	aas    
  40cfff:	enter  0xfc5c,0x1b
  40d003:	cmp    al,0x4a
  40d005:	jnp    0x40d053
  40d007:	fild   DWORD PTR [eax+0x64]
  40d00a:	mov    WORD PTR [edi-0x3b044be0],es
  40d010:	je     0x40d05b
  40d012:	sbb    edx,esp
  40d014:	out    dx,al
  40d015:	adc    esi,DWORD PTR [ebx-0x2d]
  40d018:	cwde   
  40d019:	dec    edi
  40d01a:	jae    0x40d04b
  40d01c:	js     0x40d026
  40d01e:	jb     0x40d063
  40d020:	inc    ecx
  40d021:	jmp    0x7cee:0x878e4dcd
  40d028:	adc    eax,0x84eec1dd
  40d02d:	clc    
  40d02e:	dec    esi
  40d02f:	mov    ah,0x84
  40d031:	bound  esi,QWORD PTR [edx+0x3]
  40d034:	in     al,0xe1
  40d036:	rcr    ah,1
  40d038:	push   ebx
  40d039:	jg     0x40d000
  40d03b:	in     al,dx
  40d03c:	pop    ss
  40d03d:	pop    esp
  40d03e:	das    
  40d03f:	adc    BYTE PTR ds:0x3cb2d01f,ah
  40d045:	mov    fs,esp
  40d047:	shl    BYTE PTR [ebx-0x38],0xe6
  40d04b:	push   ds
  40d04c:	pop    edi
  40d04d:	(bad)  
  40d04e:	int    0x34
  40d050:	psubusw mm5,QWORD PTR [esp+ecx*2+0x7f7320c3]
  40d058:	sub    bh,BYTE PTR [edx-0x26]
  40d05b:	rcr    DWORD PTR [ecx-0x339c7e3],1
  40d061:	out    dx,al
  40d062:	mov    esi,0x38dd0332
  40d067:	push   edi
  40d068:	mov    ebx,0x79cc6e56
  40d06d:	cmp    eax,0xc155b324
  40d072:	push   ecx
  40d073:	imul   eax,ebx,0xffffffc9
  40d076:	(bad)  
  40d078:	imul   esi,DWORD PTR [ecx],0xffffffb1
  40d07b:	retf   
  40d07c:	sti    
  40d07d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d07e:	mov    BYTE PTR [edi-0xb7704a6],bh
  40d084:	push   edx
  40d085:	mov    ds:0x31af963f,al
  40d08a:	push   eax
  40d08b:	jl     0x40d08f
  40d08d:	or     DWORD PTR ds:0x62c6149e,edx
  40d093:	bsr    ebp,DWORD PTR [ecx+0x3b028d9a]
  40d09a:	mov    DWORD PTR [ebp-0x4df2c00f],ecx
  40d0a0:	cli    
  40d0a1:	mov    ds:0x1b9658dc,al
  40d0a6:	xchg   ebp,eax
  40d0a7:	adc    BYTE PTR [bp+di+0x16f7],cl
  40d0ac:	xor    dh,BYTE PTR [ebx]
  40d0ae:	jo     0x40d065
  40d0b0:	mov    eax,0x25f6d5f7
  40d0b5:	dec    ebp
  40d0b6:	test   al,0xa2
  40d0b8:	sub    edx,DWORD PTR [ebx]
  40d0ba:	bound  esp,QWORD PTR [ecx-0x72]
  40d0bd:	push   ebp
  40d0be:	cs retf 0x4a8c
  40d0c2:	sub    al,al
  40d0c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0c6:	jns    0x40d0d2
  40d0c8:	mov    bl,0xf1
  40d0ca:	nop
  40d0cb:	jge    0x40d0d5
  40d0cd:	cmp    al,0xb6
  40d0cf:	push   edx
  40d0d0:	fild   QWORD PTR [ebp+0x7f]
  40d0d3:	jp     0x40d0ad
  40d0d5:	mov    DWORD PTR [ebx-0x3b],ebx
  40d0d8:	sub    eax,0x2df377be
  40d0dd:	adc    al,BYTE PTR [edx+0x24df32b3]
  40d0e3:	setg   BYTE PTR [edi+0x6f]
  40d0e7:	mov    bh,0x9b
  40d0e9:	push   edx
  40d0ea:	xor    eax,esp
  40d0ec:	mov    cl,dl
  40d0ee:	mov    ebp,0x84cddb43
  40d0f3:	jno    0x40d0d5
  40d0f5:	call   0x1f5900ad
  40d0fa:	adc    BYTE PTR [ebp-0x6f],cl
  40d0fd:	dec    esi
  40d0fe:	mov    dl,0xbc
  40d100:	lea    edx,[eax+0xf]
  40d103:	and    BYTE PTR [edi],al
  40d105:	xchg   ebp,eax
  40d106:	out    0x8c,al
  40d108:	pop    ebx
  40d109:	pop    ebx
  40d10a:	dec    edx
  40d10b:	scas   al,BYTE PTR es:[edi]
  40d10c:	push   esi
  40d10d:	cs in  eax,0x26
  40d110:	jb     0x40d0bc
  40d112:	push   0x47b464a6
  40d117:	out    0xcd,al
  40d119:	or     BYTE PTR [edx],cl
  40d11b:	sahf   
  40d11c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d11d:	cmp    BYTE PTR [esi-0x1bcfc9e],ch
  40d123:	mov    bl,0xd7
  40d125:	push   ecx
  40d126:	test   DWORD PTR [edi-0x48],0xa16e7c7b
  40d12d:	idiv   ch
  40d12f:	adc    ebx,ebx
  40d131:	jb     0x40d0ba
  40d133:	das    
  40d134:	mov    eax,0xc859008b
  40d139:	mov    dh,BYTE PTR [eax]
  40d13b:	(bad)  
  40d13c:	call   0xe8e0:0x728a83b7
  40d143:	add    eax,0x88017a89
  40d148:	jge    0x40d113
  40d14a:	cmp    BYTE PTR [ecx],bh
  40d14c:	in     eax,dx
  40d14d:	pop    eax
  40d14e:	cmp    al,0xb7
  40d150:	add    esi,DWORD PTR [edx]
  40d152:	and    BYTE PTR [ecx+0x758a87a2],bl
  40d158:	fist   DWORD PTR [ebp+0x6f0e3fa]
  40d15e:	xor    edx,DWORD PTR [eax-0x6d]
  40d161:	sub    edx,DWORD PTR [ebx-0x5e]
  40d164:	in     al,dx
  40d165:	loop   0x40d0e9
  40d167:	sbb    DWORD PTR [esp+edx*8],esi
  40d16a:	dec    BYTE PTR [ebx-0x4e700266]
  40d170:	or     al,0x40
  40d172:	clc    
  40d173:	jno    0x40d13c
  40d175:	jnp    0x40d142
  40d177:	sbb    ebp,DWORD PTR [ebx]
  40d179:	xlat   BYTE PTR ds:[ebx]
  40d17a:	arpl   WORD PTR [ebx],di
  40d17c:	fwait
  40d17d:	mov    ss,edi
  40d17f:	xchg   ebx,eax
  40d180:	loopne 0x40d1c9
  40d182:	and    bh,BYTE PTR [edx]
  40d184:	sbb    ch,BYTE PTR [edx+0x56f7599f]
  40d18a:	adc    ecx,DWORD PTR ds:[esi-0x57f4d168]
  40d191:	xor    al,0x40
  40d193:	jp     0x40d1b8
  40d195:	xchg   esp,eax
  40d196:	stos   BYTE PTR es:[edi],al
  40d197:	popf   
  40d198:	sahf   
  40d199:	pop    esp
  40d19a:	xchg   esi,eax
  40d19b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d19c:	lea    edx,ss:[ebx-0x7e9b8b7e]
  40d1a3:	(bad)  
  40d1a4:	jg     0x40d132
  40d1a6:	add    DWORD PTR [ebx],0xffffff86
  40d1a9:	test   BYTE PTR [ebx+0x1c36d180],0x8
  40d1b0:	punpcklbw mm0,mm2
  40d1b3:	jne    0x40d18e
  40d1b5:	sub    DWORD PTR [ebx],edi
  40d1b7:	test   DWORD PTR [edx-0x51],0x92654960
  40d1be:	rcl    DWORD PTR [edx],cl
  40d1c0:	or     eax,0xf52937e0
  40d1c5:	dec    ecx
  40d1c6:	mov    dl,0x79
  40d1c8:	dec    edi
  40d1c9:	nop
  40d1ca:	jno    0x40d22f
  40d1cc:	clc    
  40d1cd:	inc    BYTE PTR [edx-0x5]
  40d1d0:	jne    0x40d167
  40d1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1d3:	sub    bl,BYTE PTR [edx+ebx*1+0x26]
  40d1d7:	push   eax
  40d1d8:	into   
  40d1d9:	addr16 sti 
  40d1db:	(bad)  
  40d1dd:	xchg   ebx,eax
  40d1de:	int3   
  40d1df:	add    BYTE PTR [ecx-0x64ad6d0c],ch
  40d1e5:	dec    esp
  40d1e6:	in     al,0x61
  40d1e8:	pop    ebx
  40d1e9:	test   al,0x7b
  40d1eb:	dec    edx
  40d1ec:	mov    ds:0xe5397b93,eax
  40d1f1:	jp     0x40d219
  40d1f3:	cmp    eax,0x85a8c666
  40d1f8:	(bad)
  40d1fc:	xor    DWORD PTR [esi+0x77],0xffffff9f
  40d200:	sbb    edi,DWORD PTR [esi+0x405ef815]
  40d206:	aam    0xb8
  40d208:	dec    ecx
  40d209:	arpl   WORD PTR [edi+0x533a6c9],sp
  40d20f:	outs   dx,DWORD PTR ds:[esi]
  40d210:	mov    ecx,0x5a0a93
  40d215:	ins    DWORD PTR es:[edi],dx
  40d216:	push   ebp
  40d217:	arpl   dx,cx
  40d219:	mov    ds:0x7b4ff56b,al
  40d21e:	ret    
  40d21f:	ret    0xfec9
  40d222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d223:	mov    ebx,DWORD PTR [eax]
  40d225:	jae    0x40d28c
  40d227:	pop    edi
  40d228:	mov    esp,DWORD PTR [eax]
  40d22a:	sub    eax,0x807897b2
  40d22f:	mov    dl,0xc6
  40d231:	fs dec ecx
  40d233:	sbb    bl,BYTE PTR [edi+0x2fdd5802]
  40d239:	push   cs
  40d23a:	sbb    dl,BYTE PTR [ecx+0x72]
  40d23d:	les    cx,DWORD PTR [edx]
  40d240:	sbb    edi,ebp
  40d242:	stos   BYTE PTR es:[edi],al
  40d243:	call   0xd42d:0x362a600c
  40d24a:	and    dl,BYTE PTR cs:[edi+0x0]
  40d24e:	ret    0x5ab5
  40d251:	jp     0x40d2bb
  40d253:	mov    ch,0x80
  40d255:	mov    eax,ds:0x26bfa540
  40d25a:	xor    bl,0x6f
  40d25d:	inc    ebx
  40d25e:	sbb    eax,0x7f70e886
  40d263:	scas   eax,DWORD PTR es:[edi]
  40d264:	test   DWORD PTR [esi+eiz*2-0x6d],0x341e5dd8
  40d26c:	mov    es,WORD PTR [ebp+0x1e2c93bd]
  40d272:	test   ah,bl
  40d274:	test   al,0xe2
  40d276:	pop    ebx
  40d277:	retf   0x7ace
  40d27a:	push   edi
  40d27b:	jmp    FWORD PTR ds:0x2c0ef15a
  40d281:	or     bh,BYTE PTR [esi-0xca3d68e]
  40d287:	cdq    
  40d288:	inc    esi
  40d289:	das    
  40d28a:	pushf  
  40d28b:	(bad)  
  40d28c:	into   
  40d28d:	ror    BYTE PTR [edx],cl
  40d28f:	add    DWORD PTR [eax],edi
  40d291:	mov    ebx,0x414c92eb
  40d296:	push   cs
  40d297:	loop   0x40d29a
  40d299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d29a:	sbb    eax,0xee982a9d
  40d29f:	int3   
  40d2a0:	(bad)  
  40d2a1:	(bad)  
  40d2a3:	add    eax,0xd508e0a1
  40d2a8:	xor    bh,BYTE PTR [edi]
  40d2aa:	mov    DWORD PTR [edx],esp
  40d2ac:	jp     0x40d24c
  40d2ae:	nop
  40d2af:	mov    esi,0x90b24fcb
  40d2b4:	aad    0xb
  40d2b6:	scas   al,BYTE PTR es:[edi]
  40d2b7:	add    eax,DWORD PTR [ecx-0x3c]
  40d2ba:	jns    0x40d305
  40d2bc:	leave  
  40d2bd:	ins    DWORD PTR es:[edi],dx
  40d2be:	scas   al,BYTE PTR es:[edi]
  40d2bf:	mov    WORD PTR [ebp-0x799f7cad],ss
  40d2c5:	xor    DWORD PTR [ebx+0x287cee85],ebx
  40d2cb:	jne    0x40d344
  40d2cd:	mov    ah,0x15
  40d2cf:	out    dx,al
  40d2d0:	adc    ecx,ebp
  40d2d2:	push   esi
  40d2d3:	pop    ebx
  40d2d4:	sbb    esp,DWORD PTR [ebx]
  40d2d6:	push   0xffffff97
  40d2d8:	imul   ecx,DWORD PTR [ebp*4+0x6572c3b8],0xffffffc4
  40d2e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2e1:	add    DWORD PTR ds:0x7b227150,ecx
  40d2e7:	push   esi
  40d2e8:	mov    ebp,0x79f1ad18
  40d2ed:	and    BYTE PTR [eax+0x71],0x8a
  40d2f1:	add    BYTE PTR [eax],al
  40d2f3:	pop    ebx
  40d2f4:	push   ss
  40d2f5:	sub    BYTE PTR [edi+0x70d20fcb],bl
  40d2fb:	js     0x40d2d3
  40d2fd:	jo     0x40d28f
  40d2ff:	(bad)  
  40d301:	xchg   esp,eax
  40d302:	mov    al,0x73
  40d304:	aam    0xba
  40d306:	add    esi,DWORD PTR [ecx+0x79eeb5a4]
  40d30c:	xchg   bh,dl
  40d30e:	add    DWORD PTR [ebx],ebp
  40d310:	pusha  
  40d311:	dec    esp
  40d312:	jmp    DWORD PTR ds:0x1c31ed27
  40d318:	aaa    
  40d319:	data16 fisubr WORD PTR [eax]
  40d31c:	mov    esi,0x5b1c98c2
  40d321:	gs pusha 
  40d323:	fs xor eax,0xf007ca32
  40d329:	xchg   edx,ebx
  40d32b:	ret    0x102b
  40d32e:	test   eax,0xf18b7083
  40d333:	cld    
  40d334:	jb     0x40d2b7
  40d336:	jge    0x40d361
  40d338:	mov    al,0x9c
  40d33a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d33b:	pusha  
  40d33c:	out    0x98,eax
  40d33e:	dec    esi
  40d33f:	push   esi
  40d340:	stos   BYTE PTR es:[edi],al
  40d341:	imul   eax,DWORD PTR [ebp+ebp*8+0x7c],0xffffffc1
  40d346:	push   0x74fbec20
  40d34b:	in     al,0xa6
  40d34d:	mov    dh,0x4
  40d34f:	adc    eax,0xa63b5913
  40d354:	jp     0x40d330
  40d356:	dec    esi
  40d357:	add    BYTE PTR [edi+0x7d],ah
  40d35a:	(bad)  
  40d35c:	ss pop esi
  40d35e:	call   0x725:0xa75684d9
  40d365:	jnp    0x40d3a3
  40d367:	mov    bl,0x3b
  40d369:	rol    DWORD PTR [edx+ebx*2-0x223d374e],1
  40d370:	mov    ecx,0xa5843fc3
  40d375:	dec    eax
  40d376:	mov    esi,0x25e2f47b
  40d37b:	mov    WORD PTR [esi+ebx*8+0x46],gs
  40d37f:	(bad)  
  40d380:	cmp    DWORD PTR [eax-0x2d3f4c10],ebx
  40d386:	xchg   edi,eax
  40d387:	add    DWORD PTR [ecx+0x74d24aa2],edx
  40d38d:	mov    al,0x9e
  40d38f:	jle    0x40d320
  40d391:	call   0xb4a5:0x1c44fce3
  40d398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d399:	push   cs
  40d39a:	adc    al,0x95
  40d39c:	mov    ds:0xff9a4cf6,eax
  40d3a1:	repnz sbb ebx,DWORD PTR [ecx-0x12e15a07]
  40d3a8:	(bad)
  40d3ab:	test   DWORD PTR [edi],0x65809df9
  40d3b1:	leave  
  40d3b2:	ja     0x40d423
  40d3b4:	jl     0x40d3b7
  40d3b6:	adc    DWORD PTR [ebp-0x4713f8c0],esp
  40d3bc:	shl    BYTE PTR [ebx+0x48f019e6],1
  40d3c2:	sbb    eax,DWORD PTR [ebp+ebp*4+0x7011196c]
  40d3c9:	jnp    0x40d409
  40d3cb:	aad    0x8f
  40d3cd:	std    
  40d3ce:	xchg   esi,eax
  40d3cf:	or     ebp,esp
  40d3d1:	mov    cl,0x30
  40d3d3:	push   ecx
  40d3d4:	add    eax,0x21d663
  40d3d9:	xor    al,0x26
  40d3db:	jno    0x40d3e9
  40d3dd:	or     BYTE PTR [ebp+edi*2+0x2f],bl
  40d3e1:	jp     0x40d3ee
  40d3e3:	dec    ecx
  40d3e4:	(bad)  
  40d3e5:	sbb    ecx,DWORD PTR [edx]
  40d3e7:	cmp    eax,ebx
  40d3e9:	std    
  40d3ea:	jno    0x40d461
  40d3ec:	call   0x52d7:0xeb68225e
  40d3f3:	cld    
  40d3f4:	jo     0x40d458
  40d3f6:	push   0x61839be9
  40d3fb:	call   0x9d8517ed
  40d400:	inc    esi
  40d401:	mov    ecx,0x9904faaf
  40d406:	je     0x40d437
  40d408:	retf   
  40d409:	push   ebp
  40d40a:	lahf   
  40d40b:	dec    edx
  40d40c:	jo     0xebd381d2
  40d412:	loope  0x40d466
  40d414:	xlat   BYTE PTR ds:[ebx]
  40d415:	sbb    ch,BYTE PTR [ecx+0xc04d472]
  40d41b:	sahf   
  40d41c:	scas   al,BYTE PTR es:[edi]
  40d41d:	jge    0xb515e28b
  40d423:	iret   
  40d424:	pop    esi
  40d425:	mov    eax,ds:0xa540e74a
  40d42a:	das    
  40d42b:	pop    esp
  40d42c:	(bad)  
  40d42e:	jg     0x40d418
  40d430:	fs inc ebp
  40d432:	or     cl,BYTE PTR [ecx+0x4e419ee3]
  40d438:	dec    ebp
  40d439:	sbb    dh,bh
  40d43b:	ins    DWORD PTR es:[edi],dx
  40d43c:	jbe    0x40d3e5
  40d43e:	pop    edi
  40d43f:	mov    esp,0x31162306
  40d444:	push   esp
  40d445:	xchg   edi,eax
  40d446:	sbb    al,0x1b
  40d448:	cdq    
  40d449:	pop    edx
  40d44a:	(bad)  
  40d44b:	fmul   DWORD PTR ds:0x6973a925
  40d451:	retf   0x135d
  40d454:	cmp    ebx,DWORD PTR [edi]
  40d456:	iret   
  40d457:	inc    eax
  40d458:	sub    cl,BYTE PTR [esi-0x43]
  40d45b:	jbe    0x40d461
  40d45d:	mov    eax,0xd04ff927
  40d462:	xchg   DWORD PTR [edx-0x1c29b629],esi
  40d468:	stc    
  40d469:	cli    
  40d46a:	jge    0x40d4a2
  40d46c:	arpl   cx,di
  40d46e:	bound  esi,QWORD PTR ds:0x70de882a
  40d474:	sbb    al,0xb0
  40d476:	arpl   WORD PTR [edx],bp
  40d478:	jge    0x40d4d8
  40d47a:	push   ecx
  40d47b:	out    0x84,eax
  40d47d:	xchg   ebp,eax
  40d47e:	xor    esi,DWORD PTR [ebx+edx*2]
  40d481:	ja     0x40d4c9
  40d483:	(bad)  
  40d484:	(bad)  
  40d485:	fucomp st(5)
  40d487:	shl    cl,0x96
  40d48a:	in     eax,dx
  40d48b:	enter  0xd9be,0xd0
  40d48f:	arpl   WORD PTR [esi],bx
  40d491:	push   es
  40d492:	es (bad) 
  40d495:	inc    eax
  40d496:	popf   
  40d497:	push   edi
  40d498:	dec    edx
  40d499:	sbb    edi,DWORD PTR [ebp+ebp*1+0x3f112be9]
  40d4a0:	add    bh,BYTE PTR [esi-0x6571b288]
  40d4a6:	aam    0xc3
  40d4a8:	push   esi
  40d4a9:	dec    esp
  40d4aa:	test   BYTE PTR [ebx-0x17],bh
  40d4ad:	jae    0x40d4b2
  40d4af:	sbb    al,0x7c
  40d4b1:	sub    BYTE PTR [ecx],bl
  40d4b3:	js     0x40d50a
  40d4b5:	xchg   edx,eax
  40d4b6:	or     al,0x28
  40d4b8:	xchg   ebp,eax
  40d4b9:	inc    ebp
  40d4ba:	scas   al,BYTE PTR es:[edi]
  40d4bb:	xor    DWORD PTR [ecx-0x33],0xd7ee06d1
  40d4c2:	ins    DWORD PTR es:[edi],dx
  40d4c3:	cmp    al,0x98
  40d4c5:	in     eax,dx
  40d4c6:	clc    
  40d4c7:	lock call 0x76e8bbca
  40d4cd:	cld    
  40d4ce:	stos   DWORD PTR es:[edi],eax
  40d4cf:	shr    BYTE PTR [edi+0x1d8184da],0xd0
  40d4d6:	das    
  40d4d7:	inc    edx
  40d4d8:	jne    0x40d503
  40d4da:	adc    eax,0x9862bd84
  40d4df:	push   esp
  40d4e0:	pop    ebx
  40d4e1:	call   edi
  40d4e3:	imul   eax,DWORD PTR [esi],0xb88bd059
  40d4e9:	pusha  
  40d4ea:	inc    ebp
  40d4eb:	les    eax,FWORD PTR [esi+0x3830f9cf]
  40d4f1:	out    dx,al
  40d4f2:	lds    eax,FWORD PTR [ecx+0xb3339d8]
  40d4f8:	pop    ebx
  40d4f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4fa:	and    al,0x60
  40d4fc:	aaa    
  40d4fd:	xchg   ecx,edx
  40d4ff:	daa    
  40d500:	leave  
  40d501:	mov    ebp,0xf9740fe9
  40d506:	pop    esi
  40d507:	and    eax,0x2d13c81e
  40d50c:	enter  0x4051,0xec
  40d510:	adc    dl,BYTE PTR [esi-0x54]
  40d513:	sti    
  40d514:	mov    ebx,0xe34d0e48
  40d519:	jl     0x40d56e
  40d51b:	adc    al,0xc9
  40d51d:	push   edi
  40d51e:	popa   
  40d51f:	jmp    0xd1f7ec98
  40d524:	leave  
  40d525:	dec    ebp
  40d526:	imul   ebp,DWORD PTR [edi-0x1b7111b7],0x304f29cf
  40d530:	sti    
  40d531:	and    eax,0x2f823734
  40d536:	mov    ds:0x659a3c72,eax
  40d53b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d53c:	mov    BYTE PTR [edx-0x74],al
  40d53f:	fmul   QWORD PTR ds:0x5e4cef83
  40d545:	xor    bl,0x46
  40d548:	mov    ah,0x6d
  40d54a:	mov    dh,0x47
  40d54c:	ret    0x41b4
  40d54f:	pusha  
  40d550:	jge    0x40d56b
  40d552:	ins    BYTE PTR es:[edi],dx
  40d553:	mov    ah,0x64
  40d555:	jno    0x40d50f
  40d557:	cmp    al,0x3b
  40d559:	call   DWORD PTR [edx]
  40d55b:	mov    dh,0xef
  40d55d:	mov    DWORD PTR [ebx],edi
  40d55f:	(bad)  
  40d560:	push   edi
  40d561:	in     al,0x4a
  40d563:	aad    0xc3
  40d565:	push   edi
  40d566:	stos   BYTE PTR es:[edi],al
  40d567:	mov    dl,0xad
  40d569:	sbb    DWORD PTR [esi+edi*1],edx
  40d56c:	sar    dh,cl
  40d56e:	lea    edx,[edx-0xfc205a]
  40d574:	rcl    BYTE PTR [ebx],0x4e
  40d577:	test   dh,cl
  40d579:	mov    bh,0xcc
  40d57b:	jmp    0x40d58e
  40d57d:	cmp    eax,0xfb0b7b21
  40d582:	mov    dh,al
  40d584:	push   0x7d
  40d586:	sub    eax,0xa633c18e
  40d58b:	scas   eax,DWORD PTR es:[edi]
  40d58c:	rcr    ah,1
  40d58e:	sub    DWORD PTR [ecx-0xc6ad9a],edi
  40d594:	pusha  
  40d595:	cmp    dh,BYTE PTR [esi-0x48]
  40d598:	sbb    DWORD PTR [edi],ebx
  40d59a:	mov    edi,ebx
  40d59c:	cwde   
  40d59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d59e:	popa   
  40d59f:	lea    edi,[ebx+0x14]
  40d5a2:	mov    bl,0x65
  40d5a4:	(bad)  
  40d5a5:	pusha  
  40d5a6:	pop    es
  40d5a7:	dec    DWORD PTR fs:[esi-0x25ace36c]
  40d5ae:	pusha  
  40d5af:	mov    BYTE PTR [ebx+0x3c0423bc],cl
  40d5b5:	adc    dh,0x16
  40d5b8:	mov    esi,0x4e43e50d
  40d5bd:	test   al,0xd9
  40d5bf:	pop    ds
  40d5c0:	daa    
  40d5c1:	fabs   
  40d5c3:	out    0x4e,al
  40d5c5:	and    dh,al
  40d5c7:	outs   dx,BYTE PTR ds:[esi]
  40d5c8:	sti    
  40d5c9:	jp     0x40d5b0
  40d5cb:	mov    ecx,DWORD PTR [esi]
  40d5cd:	leave  
  40d5ce:	ss cwde 
  40d5d0:	fisttp DWORD PTR [esi]
  40d5d2:	out    dx,al
  40d5d3:	add    DWORD PTR [ebx],edi
  40d5d5:	loop   0x40d5cc
  40d5d7:	inc    esi
  40d5d8:	retf   
  40d5d9:	sbb    ah,bh
  40d5db:	jbe    0x40d5c3
  40d5dd:	cmc    
  40d5de:	cmp    ebx,ebp
  40d5e0:	jp     0x40d623
  40d5e2:	pop    edx
  40d5e3:	ins    DWORD PTR es:[edi],dx
  40d5e4:	rep outs dx,DWORD PTR ds:[esi]
  40d5e6:	inc    edx
  40d5e7:	repz sub ch,dh
  40d5ea:	(bad)  
  40d5eb:	fsubrp st(7),st
  40d5ed:	aaa    
  40d5ee:	xor    eax,DWORD PTR [esi+0x14]
  40d5f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5f2:	pop    ss
  40d5f3:	push   edx
  40d5f4:	stos   DWORD PTR es:[edi],eax
  40d5f5:	out    dx,eax
  40d5f6:	mov    dh,0x1f
  40d5f8:	rcl    DWORD PTR [edi],cl
  40d5fa:	imul   esp,DWORD PTR [ebp-0x11],0x599a584b
  40d601:	xor    BYTE PTR [esi],cl
  40d603:	icebp  
  40d604:	mov    eax,ds:0x26e10a64
  40d609:	mov    eax,0x99d12da2
  40d60e:	fstp   DWORD PTR [esi+0x6f]
  40d611:	popf   
  40d612:	adc    BYTE PTR [ebx],cl
  40d614:	dec    esi
  40d615:	cwde   
  40d616:	in     al,0x1f
  40d618:	pop    ebx
  40d619:	hlt    
  40d61a:	xor    al,0xcb
  40d61c:	(bad)  
  40d61d:	fcmovu st,st(1)
  40d61f:	fs inc ecx
  40d621:	xchg   ebx,eax
  40d622:	enter  0x3d6c,0x40
  40d626:	sub    al,bl
  40d628:	pop    ss
  40d629:	addr16 push esp
  40d62b:	sbb    bl,ch
  40d62d:	cli    
  40d62e:	mov    dh,0xc2
  40d630:	cs repz js 0x40d5c6
  40d634:	div    DWORD PTR [edi-0x63de65c0]
  40d63a:	out    dx,eax
  40d63b:	and    ecx,ecx
  40d63d:	cmp    BYTE PTR [eax],dh
  40d63f:	dec    edx
  40d640:	data16 icebp 
  40d642:	add    DWORD PTR [esi+0x75e69835],ecx
  40d648:	push   esp
  40d649:	push   esp
  40d64a:	sub    bh,dh
  40d64c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d64d:	(bad)  
  40d64e:	xor    DWORD PTR [edx+ebx*1],edi
  40d651:	int    0x38
  40d653:	add    dh,dl
  40d655:	pop    esi
  40d656:	mov    cl,0x47
  40d658:	pop    esi
  40d659:	outs   dx,DWORD PTR ds:[esi]
  40d65a:	push   0xffffffdb
  40d65c:	add    ch,BYTE PTR [ebx]
  40d65e:	add    BYTE PTR [edx-0x7a961908],dh
  40d664:	lods   al,BYTE PTR ds:[esi]
  40d665:	pop    edx
  40d666:	pop    ds
  40d667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d668:	sbb    BYTE PTR [ebx+0x190cceb5],0x5f
  40d66f:	cld    
  40d670:	push   ss
  40d671:	hlt    
  40d672:	rcr    DWORD PTR [ecx-0x73],0x4a
  40d676:	lods   eax,DWORD PTR ds:[esi]
  40d677:	mov    eax,ds:0x3de18308
  40d67c:	push   edx
  40d67d:	mov    bh,0x58
  40d67f:	shl    BYTE PTR [edi-0x7d81a719],cl
  40d685:	ins    BYTE PTR es:[edi],dx
  40d686:	lock test DWORD PTR [edi+0x35],edi
  40d68a:	sbb    BYTE PTR [edi+0x42126123],dh
  40d690:	mov    BYTE PTR [ebx+ebx*2+0x3e],dh
  40d694:	jb     0x40d633
  40d696:	out    dx,eax
  40d697:	xchg   ebp,eax
  40d698:	adc    ah,dl
  40d69a:	fwait
  40d69b:	xor    bl,ah
  40d69d:	and    BYTE PTR [esi+0x59],0xbf
  40d6a1:	dec    ebx
  40d6a2:	push   eax
  40d6a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6a4:	lds    esi,FWORD PTR [ebp+0x5b]
  40d6a7:	mov    ebp,0x2beb9e96
  40d6ac:	fldcw  WORD PTR [ebp*1+0x721808d0]
  40d6b3:	rcl    BYTE PTR [si],1
  40d6b6:	jb     0x40d712
  40d6b8:	cmc    
  40d6b9:	cs pop es
  40d6bb:	int    0xa5
  40d6bd:	leave  
  40d6be:	xlat   BYTE PTR ds:[ebx]
  40d6bf:	cwde   
  40d6c0:	rol    BYTE PTR ds:0x212c95e6,1
  40d6c6:	imul   edx,DWORD PTR es:0x5fe087e6,0xa9ddd0f4
  40d6d1:	enter  0x7a1e,0x22
  40d6d5:	(bad)  
  40d6d6:	adc    ah,BYTE PTR [ecx]
  40d6d8:	and    DWORD PTR [ecx+0xbd2175d],0xafc634c5
  40d6e2:	or     BYTE PTR [eax+0x4],0x30
  40d6e6:	out    dx,eax
  40d6e7:	dec    ebx
  40d6e8:	cwde   
  40d6e9:	mov    ah,0xe2
  40d6eb:	inc    esi
  40d6ec:	out    dx,eax
  40d6ed:	push   eax
  40d6ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6ef:	cdq    
  40d6f0:	scas   eax,DWORD PTR es:[edi]
  40d6f1:	xchg   esi,eax
  40d6f2:	test   BYTE PTR [ebx-0x42],bh
  40d6f5:	aad    0x11
  40d6f7:	xor    DWORD PTR [esi],edi
  40d6f9:	jle    0x40d745
  40d6fb:	ja     0x40d74c
  40d6fd:	fdivr  st(0),st
  40d6ff:	xchg   BYTE PTR [esi-0x78],al
  40d702:	jb     0x40d70d
  40d704:	adc    dl,cl
  40d706:	sbb    eax,0xd1749994
  40d70b:	mov    ecx,eax
  40d70d:	fistp  WORD PTR [ecx-0x4405bc7e]
  40d713:	mov    esi,0x36bbddb4
  40d718:	xchg   edx,eax
  40d719:	pop    es
  40d71a:	jbe    0x40d784
  40d71c:	rcr    cl,0xa7
  40d71f:	push   ss
  40d720:	cli    
  40d721:	ins    BYTE PTR es:[edi],dx
  40d722:	retf   0xbf26
  40d725:	imul   edi,DWORD PTR [eax+0x6b6c6f37],0x50
  40d72c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d72d:	add    al,0x87
  40d72f:	repz jae 0x40d790
  40d732:	jns    0x40d784
  40d734:	jmp    0x40d747
  40d736:	jecxz  0x40d7b3
  40d738:	outs   dx,DWORD PTR ds:[esi]
  40d739:	fwait
  40d73a:	adc    eax,0xdac2d29f
  40d73f:	mov    es,WORD PTR [ebp+0x50]
  40d742:	inc    esi
  40d743:	mov    ebx,0x906fd62d
  40d748:	sti    
  40d749:	idiv   DWORD PTR [esi+0x43cd7c7]
  40d74f:	mov    dh,0xce
  40d751:	add    eax,esi
  40d753:	cmp    ebx,DWORD PTR [ebp+eiz*4-0x18]
  40d757:	add    dl,BYTE PTR [edx+esi*8]
  40d75a:	pop    edx
  40d75b:	mov    ds:0x8549a7c2,eax
  40d760:	and    ah,BYTE PTR [esi+0x3e1dd9a2]
  40d766:	mov    fs,WORD PTR [eax+0x6d158db5]
  40d76c:	add    esi,DWORD PTR [esi-0x6a]
  40d76f:	(bad)  
  40d771:	scas   eax,DWORD PTR es:[edi]
  40d772:	mov    ds:0xad9d5153,al
  40d777:	sahf   
  40d778:	dec    ecx
  40d779:	add    al,0x38
  40d77b:	mov    ebp,0xff14205a
  40d780:	sub    eax,0x92c02fd4
  40d785:	sub    ebp,esp
  40d787:	imul   ebx,DWORD PTR [eax+ebx*4-0x59ff4bb1],0x5acadaae
  40d792:	cwde   
  40d793:	in     al,dx
  40d794:	add    BYTE PTR [ecx-0x4b231447],dl
  40d79a:	or     edx,DWORD PTR [ebx]
  40d79c:	ins    DWORD PTR es:[edi],dx
  40d79d:	xchg   esp,eax
  40d79e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d79f:	pushf  
  40d7a0:	push   ds
  40d7a1:	aam    0x34
  40d7a3:	sub    cl,BYTE PTR [edi-0x1c]
  40d7a6:	mov    ebp,0x4aef1975
  40d7ab:	pop    ds
  40d7ac:	imul   ebx,eax,0xffffffdb
  40d7af:	scas   al,BYTE PTR es:[edi]
  40d7b0:	sub    BYTE PTR [eax],cl
  40d7b2:	add    eax,0xbcd0a10c
  40d7b7:	out    0xae,al
  40d7b9:	add    eax,0xcc0cc146
  40d7be:	les    edi,FWORD PTR [ebx-0xfd2db4d]
  40d7c4:	popa   
  40d7c5:	jg     0x40d82c
  40d7c7:	xor    ch,dl
  40d7c9:	sub    bh,al
  40d7cb:	sub    eax,0x82f21d5c
  40d7d0:	xchg   edx,eax
  40d7d1:	adc    edi,DWORD PTR [esi]
  40d7d3:	retf   0xab88
  40d7d6:	adc    ch,dl
  40d7d8:	ror    BYTE PTR [ecx],0x36
  40d7db:	mov    eax,0x3389bd95
  40d7e0:	xlat   BYTE PTR ds:[ebx]
  40d7e1:	and    eax,0xac1fbea2
  40d7e6:	dec    edi
  40d7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e8:	dec    ecx
  40d7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7ea:	mov    ds:0xe5fe06c6,eax
  40d7ef:	or     DWORD PTR [ebx],edi
  40d7f1:	cmc    
  40d7f2:	enter  0xb72c,0xaf
  40d7f6:	fcom   DWORD PTR [ecx-0x3e378e6b]
  40d7fc:	cmp    eax,esp
  40d7fe:	mov    dl,0xcd
  40d800:	das    
  40d801:	fcmovu st,st(7)
  40d803:	pop    ss
  40d804:	call   0x1c98:0xff94df05
  40d80b:	mov    ebp,0xf1f75a5c
  40d810:	adc    edx,DWORD PTR [ebx+edi*8+0x3d68a3dd]
  40d817:	fcmovnu st,st(5)
  40d819:	jmp    0x29b1b236
  40d81e:	dec    ebp
  40d81f:	sub    eax,0x5d75ba2d
  40d824:	jg     0x40d894
  40d826:	sbb    al,0x2
  40d828:	cmp    al,BYTE PTR [edx-0x62648e01]
  40d82e:	aaa    
  40d82f:	mov    eax,ds:0xba732278
  40d834:	mov    ebp,0xf5b8f8e5
  40d839:	popf   
  40d83a:	or     esp,0xcac3080b
  40d840:	pop    eax
  40d841:	xor    ch,BYTE PTR [edi]
  40d843:	(bad)  [esi-0x3e]
  40d846:	sar    DWORD PTR [edx+edx*8+0x47947c03],cl
  40d84d:	and    dh,BYTE PTR [eax+0x37db5711]
  40d853:	out    dx,eax
  40d854:	test   ebp,eax
  40d856:	jbe    0x40d832
  40d858:	jo     0x40d834
  40d85a:	in     al,0x5a
  40d85c:	call   0xb7b22550
  40d861:	(bad)  
  40d862:	fistp  QWORD PTR [edx-0x6e]
  40d865:	mov    ds:0xc264c8ee,al
  40d86a:	mov    esp,0x16a09e08
  40d86f:	cmp    al,0xff
  40d871:	pop    ebp
  40d872:	inc    ebp
  40d873:	iret   
  40d874:	mov    eax,ds:0xb1b31be
  40d879:	fwait
  40d87a:	push   ecx
  40d87b:	in     al,dx
  40d87c:	je     0x40d8a0
  40d87e:	or     eax,0x4c6e05ce
  40d883:	dec    esi
  40d884:	jno    0x40d8b5
  40d886:	int    0x9a
  40d888:	push   edx
  40d889:	cmc    
  40d88a:	les    esp,FWORD PTR [edi-0x6d]
  40d88d:	cmc    
  40d88e:	repz mov ebx,DWORD PTR [edi]
  40d891:	cmp    DWORD PTR [ecx-0x2e6c6a77],ebp
  40d897:	mov    bl,0xf5
  40d899:	in     eax,dx
  40d89a:	mul    ebx
  40d89c:	bound  eax,QWORD PTR [esi+0x50]
  40d89f:	loop   0x40d8e4
  40d8a1:	pop    edi
  40d8a2:	dec    ebp
  40d8a3:	xchg   edx,eax
  40d8a4:	sub    eax,0x8a58420b
  40d8a9:	rcr    BYTE PTR [eax],0x59
  40d8ac:	mov    esi,0x9008da29
  40d8b1:	pop    ebp
  40d8b2:	or     ch,ch
  40d8b4:	sub    BYTE PTR [eax-0x272aec2c],dl
  40d8ba:	mov    ch,0xf4
  40d8bc:	inc    ebp
  40d8bd:	inc    esi
  40d8bf:	pop    esi
  40d8c0:	pxor   mm5,mm4
  40d8c3:	adc    al,0x54
  40d8c5:	leave  
  40d8c6:	jns    0x40d877
  40d8c8:	test   bh,dl
  40d8ca:	mov    ah,0x2a
  40d8cc:	into   
  40d8cd:	hlt    
  40d8ce:	lahf   
  40d8cf:	ja     0x40d944
  40d8d1:	and    ebx,DWORD PTR [esi+0x12]
  40d8d4:	pop    esi
  40d8d5:	imul   ebx,DWORD PTR [edi-0x3e],0x7c58d479
  40d8dc:	pop    esp
  40d8dd:	mov    ds:0x2a6ddfff,al
  40d8e2:	jae    0x40d889
  40d8e4:	sahf   
  40d8e5:	sub    ah,ch
  40d8e7:	mov    WORD PTR [eax+ebx*1-0x1c],ss
  40d8eb:	fdiv   DWORD PTR [ecx]
  40d8ee:	dec    ebx
  40d8ef:	(bad)  
  40d8f0:	mov    eax,0xedc3ed56
  40d8f5:	outs   dx,BYTE PTR ds:[esi]
  40d8f6:	shr    ebp,cl
  40d8f8:	cmp    DWORD PTR [ebx+0x6b808df9],esi
  40d8fe:	cld    
  40d8ff:	pop    ecx
  40d900:	and    DWORD PTR [edi+0x5f],ebx
  40d903:	add    al,0xbd
  40d905:	adc    al,0x81
  40d907:	and    bh,dl
  40d909:	stc    
  40d90a:	and    dl,al
  40d90c:	imul   eax,DWORD PTR [edx-0x52],0x364bad52
  40d913:	into   
  40d914:	mov    eax,ds:0x33c3db20
  40d919:	xchg   DWORD PTR [ebp-0xad0abfe],edi
  40d91f:	loopne 0x40d8f3
  40d921:	cmp    edi,DWORD PTR [edi-0xb]
  40d924:	dec    ecx
  40d925:	push   es
  40d926:	fincstp 
  40d928:	xor    al,0xc
  40d92a:	jb     0x40d92a
  40d92c:	in     al,dx
  40d92d:	sub    eax,0x6a537a0b
  40d932:	xor    BYTE PTR [esi-0x63],dl
  40d935:	das    
  40d936:	mov    edi,0x17d81ede
  40d93b:	or     esp,DWORD PTR [esi+0x45]
  40d93e:	adc    eax,eax
  40d940:	add    al,0x53
  40d942:	mov    bl,0x5f
  40d944:	nop
  40d945:	sahf   
  40d946:	(bad)  
  40d947:	mov    al,ds:0xc21da262
  40d94c:	(bad)  
  40d94d:	sbb    DWORD PTR fs:[eax+0x76],ecx
  40d951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d952:	leave  
  40d953:	and    BYTE PTR [ebx-0x8],0x15
  40d957:	outs   dx,BYTE PTR ds:[esi]
  40d958:	ds inc ebp
  40d95a:	shl    bh,0xd7
  40d95d:	iret   
  40d95e:	jbe    0x40d93f
  40d960:	sub    edx,ebx
  40d962:	mov    dl,0x5d
  40d964:	retf   0x120
  40d967:	mov    dh,0x7d
  40d969:	push   ebx
  40d96a:	cmp    ch,BYTE PTR [edi]
  40d96c:	ret    
  40d96d:	pop    ebx
  40d96e:	test   al,0x32
  40d970:	pop    eax
  40d971:	(bad)  
  40d972:	dec    ebp
  40d973:	inc    ebx
  40d974:	stos   DWORD PTR es:[edi],eax
  40d975:	xchg   ebp,eax
  40d976:	(bad)  
  40d977:	out    0x32,al
  40d979:	addr16 adc al,0x5e
  40d97c:	ror    DWORD PTR [edi-0x2c20f51f],cl
  40d982:	(bad)  
  40d983:	xor    al,0x70
  40d985:	std    
  40d986:	push   0x2217b651
  40d98b:	inc    edx
  40d98c:	clc    
  40d98d:	mov    cl,BYTE PTR [ebx-0x50]
  40d990:	inc    esp
  40d991:	add    BYTE PTR [edi+0x1b],cl
  40d994:	pushf  
  40d995:	ror    DWORD PTR [ecx],0xd2
  40d998:	scas   al,BYTE PTR es:[edi]
  40d999:	fisubr WORD PTR [edx+0x75]
  40d99c:	add    BYTE PTR [ebx],bh
  40d99e:	dec    eax
  40d99f:	mov    bh,0xf
  40d9a1:	ins    DWORD PTR es:[edi],dx
  40d9a2:	sub    ecx,esp
  40d9a4:	pop    ss
  40d9a5:	cmp    al,0xd1
  40d9a7:	jns    0x40d976
  40d9a9:	icebp  
  40d9aa:	stos   BYTE PTR es:[edi],al
  40d9ab:	sti    
  40d9ac:	inc    eax
  40d9ad:	out    0x24,al
  40d9af:	pop    ecx
  40d9b0:	push   edi
  40d9b1:	jo     0x40d938
  40d9b3:	mov    dl,0x92
  40d9b5:	test   BYTE PTR [ebp-0x7a438110],ch
  40d9bb:	jno    0x40d99c
  40d9bd:	add    BYTE PTR [ebx+0x6b],dh
  40d9c0:	mov    ah,0x21
  40d9c2:	aam    0x6d
  40d9c4:	loope  0x40d971
  40d9c6:	call   0x82634147
  40d9cb:	(bad)  
  40d9cc:	fbstp  TBYTE PTR [ebx-0x3a14c46c]
  40d9d2:	(bad)  
  40d9d4:	not    bl
  40d9d6:	or     ch,dh
  40d9d8:	jp     0x40d9c7
  40d9da:	retf   0xdaa1
  40d9dd:	push   esp
  40d9de:	(bad)  
  40d9df:	je     0x40d964
  40d9e1:	jb     0x40da3c
  40d9e3:	iret   
  40d9e4:	mov    edx,0x7c708810
  40d9e9:	mov    BYTE PTR [edi+0x61],ch
  40d9ec:	jmp    0xb727faee
  40d9f1:	sub    DWORD PTR [eax+0x5c],0x9cbd45cd
  40d9f8:	jg     0x40d994
  40d9fa:	push   ebx
  40d9fb:	mov    dh,cl
  40d9fd:	push   ds
  40d9fe:	ins    BYTE PTR es:[edi],dx
  40d9ff:	fbstp  TBYTE PTR [esi]
  40da01:	jle    0x40d9d0
  40da03:	xchg   ebx,eax
  40da04:	aad    0xae
  40da06:	jg     0x40da15
  40da08:	and    eax,0xa2bc2cec
  40da0d:	test   eax,0xa0f45a28
  40da12:	es (bad) 
  40da14:	jns    0x40d9ce
  40da16:	ror    BYTE PTR [edi-0x39],cl
  40da19:	ret    0xf9d
  40da1c:	and    eax,0x113044db
  40da21:	mov    al,0x50
  40da23:	push   es
  40da24:	arpl   WORD PTR [edi-0x16906878],bp
  40da2a:	test   DWORD PTR [ebx],0x806e8ab4
  40da30:	jge    0x40da2f
  40da32:	xchg   esp,eax
  40da33:	scas   eax,DWORD PTR es:[edi]
  40da34:	xchg   BYTE PTR [edx+0x3f29dbc9],ch
  40da3a:	cmp    al,0xb5
  40da3c:	xchg   ecx,eax
  40da3d:	lods   eax,DWORD PTR ds:[esi]
  40da3e:	mov    ds:0xc807c8fb,eax
  40da43:	sahf   
  40da44:	add    cl,bh
  40da46:	lahf   
  40da47:	adc    edx,esi
  40da49:	ins    DWORD PTR es:[edi],dx
  40da4a:	(bad)  
  40da4b:	arpl   WORD PTR [esi],cx
  40da4d:	cmp    BYTE PTR [edx],al
  40da4f:	bound  ebp,QWORD PTR ds:0x3092578a
  40da55:	inc    edx
  40da56:	mov    bh,bh
  40da58:	(bad)  
  40da5a:	mov    dl,dl
  40da5c:	fstp   QWORD PTR [ecx-0x68b7628a]
  40da62:	cmp    DWORD PTR [edi+esi*1],edi
  40da65:	addr16 push esp
  40da67:	mov    bh,0x8
  40da69:	add    BYTE PTR [ebx],cl
  40da6b:	xchg   esi,eax
  40da6c:	mov    ah,0xcf
  40da6e:	call   0x1387b4ae
  40da73:	je     0x40daec
  40da75:	aad    0xd8
  40da77:	dec    edx
  40da78:	xchg   esp,eax
  40da79:	fmul   st(7),st
  40da7b:	and    DWORD PTR [eax],edi
  40da7d:	pop    eax
  40da7e:	dec    ecx
  40da7f:	fstp   DWORD PTR [eax-0x17]
  40da82:	inc    edi
  40da83:	push   esi
  40da84:	clc    
  40da85:	call   0xe095d02a
  40da8a:	xor    eax,0x545271a7
  40da8f:	mov    ah,0x41
  40da91:	push   esi
  40da92:	or     eax,0x5e79f9ed
  40da97:	xchg   DWORD PTR [eiz*8-0x143afbe],esp
  40da9e:	mov    dh,0x2f
  40daa0:	push   0xa9edb99c
  40daa5:	rcl    DWORD PTR [edi-0x52cb5527],0x19
  40daac:	inc    edi
  40daad:	leave  
  40daae:	arpl   WORD PTR [edx-0x2d],sp
  40dab1:	mov    al,ds:0xbb49bf54
  40dab6:	ins    BYTE PTR es:[edi],dx
  40dab7:	out    0x3e,eax
  40dab9:	jnp    0x40da87
  40dabb:	icebp  
  40dabc:	out    0x3b,al
  40dabe:	cmp    eax,0x305bcdad
  40dac3:	xchg   esp,eax
  40dac4:	in     eax,dx
  40dac5:	les    edi,FWORD PTR [eax+0x20]
  40dac8:	(bad)  
  40dac9:	pop    edi
  40daca:	adc    ebx,DWORD PTR [eax+eax*1-0x8b7003e]
  40dad1:	xchg   ecx,eax
  40dad2:	pushf  
  40dad3:	xchg   ebx,eax
  40dad4:	jmp    0x8e659d4b
  40dad9:	xchg   ebx,eax
  40dada:	test   al,0xb6
  40dadc:	or     DWORD PTR [eax+0x7d],0xd
  40dae0:	cwde   
  40dae1:	dec    BYTE PTR [edi]
  40dae3:	iret   
  40dae4:	xchg   ebx,eax
  40dae5:	pop    edi
  40dae6:	jb     0x40db2c
  40dae8:	test   eax,0x79eb4f31
  40daed:	jbe    0x40dacc
  40daef:	xchg   edi,eax
  40daf0:	sbb    BYTE PTR [eax],dl
  40daf2:	jne    0x40db71
  40daf4:	out    dx,eax
  40daf5:	push   ss
  40daf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daf7:	and    al,0x1d
  40daf9:	adc    bh,al
  40dafb:	ret    
  40dafc:	mov    eax,0x3b9244c8
  40db01:	lea    esp,[edi+0x10]
  40db04:	shl    ebp,1
  40db06:	and    eax,0x6238c4b3
  40db0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db0c:	and    eax,esi
  40db0e:	mov    WORD PTR [esp+ecx*1+0x55],ds
  40db12:	nop
  40db13:	(bad)  
  40db14:	cmp    bl,BYTE PTR [edx+0x58]
  40db17:	cmp    dh,dh
  40db19:	dec    eax
  40db1a:	cdq    
  40db1b:	fs retf 0x3d7e
  40db1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db20:	sub    BYTE PTR [ebx],dh
  40db22:	jg     0x40dad8
  40db24:	sahf   
  40db25:	mov    ebx,0x94779742
  40db2a:	rol    BYTE PTR [eax+0x68],1
  40db2d:	stos   DWORD PTR es:[edi],eax
  40db2e:	ja     0x40db33
  40db30:	dec    ebp
  40db31:	ins    BYTE PTR es:[edi],dx
  40db32:	popa   
  40db33:	dec    ebp
  40db34:	js     0x40db44
  40db36:	jo     0x40db7f
  40db38:	pop    ecx
  40db39:	outs   dx,BYTE PTR ds:[esi]
  40db3a:	xor    eax,DWORD PTR ds:0x68be4ad7
  40db40:	ffreep st(4)
  40db42:	fsubr  DWORD PTR [edi-0x12]
  40db45:	mov    ebx,ss
  40db47:	ds out 0xfd,al
  40db4a:	and    cl,BYTE PTR [esi-0x16]
  40db4d:	dec    ecx
  40db4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db4f:	and    al,0xf3
  40db51:	test   eax,0x1cb12625
  40db56:	gs out 0xa0,eax
  40db59:	pop    esi
  40db5a:	push   0xc72af79c
  40db5f:	mov    cl,0x7e
  40db61:	lds    edx,FWORD PTR [ebp+0x7c6175b0]
  40db67:	jb     0x40dbe1
  40db69:	inc    edx
  40db6a:	sbb    DWORD PTR [esi+0x7d],eax
  40db6d:	jp     0x40daf5
  40db6f:	gs sbb al,0xc9
  40db72:	shr    dl,0xeb
  40db75:	mov    ebx,0x10526b1a
  40db7a:	jle    0x40dbf1
  40db7c:	push   edx
  40db7d:	into   
  40db7e:	pop    esp
  40db7f:	xor    cl,dl
  40db81:	stos   BYTE PTR es:[edi],al
  40db82:	andnps xmm5,XMMWORD PTR [esi]
  40db85:	jns    0x40db6c
  40db87:	mov    cl,0x91
  40db89:	mov    esp,0xce54155d
  40db8e:	xchg   edx,eax
  40db8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db90:	push   esi
  40db91:	inc    ebx
  40db92:	cli    
  40db93:	loope  0x40dbf0
  40db95:	call   0xfb1771ca
  40db9a:	jp     0x40db45
  40db9c:	mov    es,WORD PTR [ebx-0x46]
  40db9f:	mov    BYTE PTR gs:[eax-0x65],0x8c
  40dba4:	mov    fs,WORD PTR [edx]
  40dba6:	lahf   
  40dba7:	dec    ecx
  40dba8:	dec    ebx
  40dba9:	dec    edi
  40dbaa:	in     al,0x91
  40dbac:	sub    ebx,edi
  40dbae:	and    al,0xc7
  40dbb0:	rol    BYTE PTR [edi+ebp*8+0x7295e377],1
  40dbb7:	fst    QWORD PTR [esi+0x241982d2]
  40dbbd:	test   al,0x5c
  40dbbf:	idiv   BYTE PTR [eax+0xb14ac4]
  40dbc5:	(bad)
  40dbc8:	bound  esi,QWORD PTR [ecx-0x76]
  40dbcb:	dec    edi
  40dbcc:	jg     0x40dbbc
  40dbce:	iret   
  40dbcf:	enter  0xf8ee,0xb8
  40dbd3:	jo     0x40db82
  40dbd5:	and    eax,0x233887aa
  40dbda:	out    dx,al
  40dbdb:	je     0x40dbc6
  40dbdd:	scas   al,BYTE PTR es:[edi]
  40dbde:	xchg   ebx,eax
  40dbdf:	push   ebp
  40dbe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbe1:	jb     0x40dba3
  40dbe3:	dec    ecx
  40dbe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbe5:	jne    0x40dbf3
  40dbe7:	dec    ecx
  40dbe8:	and    al,0x3e
  40dbea:	inc    esp
  40dbeb:	sahf   
  40dbec:	add    ebx,DWORD PTR [ebp+0x39]
  40dbef:	repnz and al,0x2
  40dbf2:	inc    ebp
  40dbf3:	push   esi
  40dbf4:	lds    ebx,FWORD PTR [esi+0x65]
  40dbf7:	out    0xb2,al
  40dbf9:	jae    0x40db92
  40dbfb:	mov    esi,0xda313da3
  40dc00:	cdq    
  40dc01:	sub    al,0x45
  40dc03:	bound  edi,QWORD PTR [ecx]
  40dc05:	sbb    eax,0xdfd61dcf
  40dc0a:	leave  
  40dc0b:	add    BYTE PTR [ebx+0xeaa380d],bh
  40dc11:	pop    ds
  40dc12:	cmp    al,0x5f
  40dc14:	scas   al,BYTE PTR es:[edi]
  40dc15:	test   eax,0x154e6c3d
  40dc1a:	(bad)
  40dc1d:	sbb    esp,eax
  40dc1f:	inc    edx
  40dc20:	imul   ecx,DWORD PTR [esi],0x4e750f08
  40dc26:	sar    bl,0x68
  40dc29:	loopne 0x40dca2
  40dc2b:	popa   
  40dc2c:	push   0xe88ac221
  40dc31:	es jmp 0x64d9:0xc759288f
  40dc39:	scas   eax,DWORD PTR es:[edi]
  40dc3a:	add    ebp,ecx
  40dc3c:	mov    eax,ds:0x2627750a
  40dc41:	jno    0x40dc2d
  40dc43:	sar    DWORD PTR [ecx],1
  40dc45:	das    
  40dc46:	adc    ebx,DWORD PTR [esi-0x5ff4656b]
  40dc4c:	nop
  40dc4d:	xor    esp,ecx
  40dc4f:	jnp    0x40dc00
  40dc51:	xchg   esp,eax
  40dc52:	mov    edx,esi
  40dc54:	mov    ch,0xe4
  40dc56:	fbstp  TBYTE PTR [eax-0x55]
  40dc59:	scas   al,BYTE PTR es:[edi]
  40dc5a:	cmp    ch,BYTE PTR [eax-0x28]
  40dc5d:	or     DWORD PTR [ecx+0x25],ecx
  40dc60:	icebp  
  40dc61:	rcr    DWORD PTR [esp+ecx*2],1
  40dc64:	mov    WORD PTR [ecx],ds
  40dc66:	pushf  
  40dc67:	adc    BYTE PTR [edx-0x32068d4a],bl
  40dc6d:	xchg   ecx,eax
  40dc6e:	imul   ebx,edi,0x58
  40dc71:	stos   BYTE PTR es:[edi],al
  40dc72:	lock shl DWORD PTR [edx+0x17cf4e14],0xec
  40dc7a:	dec    BYTE PTR [ebx-0x3d5a4485]
  40dc80:	pop    esp
  40dc81:	xchg   esi,eax
  40dc82:	gs (bad) 
  40dc84:	int3   
  40dc85:	push   0xc0384778
  40dc8a:	mov    al,0x91
  40dc8c:	jbe    0x40dcab
  40dc8e:	xchg   edx,eax
  40dc8f:	ja     0x40dc79
  40dc91:	je     0x40dcc5
  40dc93:	das    
  40dc94:	stos   BYTE PTR es:[edi],al
  40dc95:	jbe    0x40dcba
  40dc97:	in     eax,dx
  40dc98:	repnz scas al,BYTE PTR es:[edi]
  40dc9a:	mov    ebx,0x369ceb9f
  40dc9f:	cld    
  40dca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dca1:	stos   BYTE PTR es:[edi],al
  40dca2:	mov    ds:0xe535e55b,al
  40dca7:	std    
  40dca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dca9:	dec    edi
  40dcaa:	adc    eax,0xdd7f0155
  40dcaf:	or     BYTE PTR [ebx+0x7e459de7],cl
  40dcb5:	mov    ebp,DWORD PTR [ebx+0x3ffd2fc9]
  40dcbb:	mov    ah,0xca
  40dcbd:	mov    bl,0xf8
  40dcbf:	dec    esp
  40dcc0:	push   ss
  40dcc1:	push   0x5f
  40dcc3:	mov    dh,0x27
  40dcc5:	jns    0x40dca2
  40dcc7:	cmp    DWORD PTR [edx-0x10606995],edx
  40dccd:	push   es
  40dcce:	sbb    DWORD PTR [esp+ebp*4],esp
  40dcd1:	in     al,dx
  40dcd2:	into   
  40dcd3:	pusha  
  40dcd4:	fild   WORD PTR [ebp+0x6c]
  40dcd7:	test   eax,0x834c699a
  40dcdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcdd:	xchg   edx,eax
  40dcde:	daa    
  40dcdf:	sbb    ecx,DWORD PTR [ecx+ecx*1-0xb862c42]
  40dce6:	arpl   WORD PTR [edx-0x27],bp
  40dce9:	(bad)  [eax+0x5269a717]
  40dcef:	xchg   ebp,eax
  40dcf0:	jnp    0x40dd18
  40dcf2:	data16 fwait
  40dcf4:	jmp    0x40dd4f
  40dcf6:	fld1   
  40dcf8:	leave  
  40dcf9:	and    DWORD PTR [edx-0x2a363293],eax
  40dcff:	int3   
  40dd00:	clc    
  40dd01:	sti    
  40dd02:	sbb    al,0xaa
  40dd04:	pop    edx
  40dd05:	add    eax,0x42fa7a10
  40dd0a:	jmp    0x40dce2
  40dd0c:	loope  0x40dd17
  40dd0e:	mov    ecx,0x910c6135
  40dd13:	stos   DWORD PTR es:[edi],eax
  40dd14:	sbb    DWORD PTR [eax+eax*2+0x1e],ebp
  40dd18:	test   eax,0xc1d5cc47
  40dd1d:	cld    
  40dd1e:	cwde   
  40dd1f:	fadd   st,st(3)
  40dd21:	pop    es
  40dd22:	aas    
  40dd23:	outs   dx,DWORD PTR ds:[esi]
  40dd24:	(bad)  
  40dd26:	imul   BYTE PTR [edx]
  40dd28:	xchg   esp,eax
  40dd29:	push   edi
  40dd2a:	cmc    
  40dd2b:	mov    eax,ds:0xa10e36f3
  40dd30:	inc    eax
  40dd31:	fld1   
  40dd33:	sti    
  40dd34:	xchg   esi,eax
  40dd35:	ins    DWORD PTR es:[edi],dx
  40dd36:	outs   dx,DWORD PTR ds:[esi]
  40dd37:	pop    ss
  40dd38:	daa    
  40dd39:	retf   0xd006
  40dd3c:	dec    ebp
  40dd3d:	mov    ch,0xd6
  40dd3f:	jae    0x40dd14
  40dd41:	test   al,0x8d
  40dd43:	adc    eax,0xde634a08
  40dd48:	xchg   edx,eax
  40dd49:	push   edi
  40dd4a:	scas   eax,DWORD PTR es:[edi]
  40dd4b:	mov    ah,0x91
  40dd4d:	jg     0x40ddc2
  40dd4f:	jg     0x40dce7
  40dd51:	push   0xffffff98
  40dd53:	xor    al,0x63
  40dd55:	jmp    0x40ddd4
  40dd57:	sbb    ecx,0x4c
  40dd5a:	add    eax,0xf39fb871
  40dd5f:	stos   BYTE PTR es:[edi],al
  40dd60:	loop   0x40dd73
  40dd62:	add    bl,BYTE PTR [eax-0xf6b2b47]
  40dd68:	cmp    bl,bh
  40dd6a:	int    0x4d
  40dd6c:	jl     0x40dd99
  40dd6e:	sbb    esi,esi
  40dd70:	imul   ebp,DWORD PTR [ecx],0xcfe77e7d
  40dd76:	ret    0xd4a9
  40dd79:	cmp    al,0x91
  40dd7b:	nop
  40dd7c:	scas   eax,DWORD PTR es:[edi]
  40dd7d:	test   DWORD PTR [edi-0x49976229],ebp
  40dd83:	mov    DWORD PTR [edx+0x5c],esp
  40dd86:	test   al,0x20
  40dd88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd89:	inc    edi
  40dd8a:	fs cmp eax,0x1e12c384
  40dd90:	std    
  40dd91:	xor    DWORD PTR [eax-0x23726099],edx
  40dd97:	adc    BYTE PTR [esi-0x71f5020c],bl
  40dd9d:	mov    bl,0x8b
  40dd9f:	adc    edi,ecx
  40dda1:	fcom   QWORD PTR [edi-0x54b9d507]
  40dda7:	clc    
  40dda8:	fdiv   DWORD PTR [ebp-0x25]
  40ddab:	pop    ecx
  40ddac:	mov    ah,0x33
  40ddae:	jne    0x40ddce
  40ddb0:	sar    bh,0x78
  40ddb3:	pop    ss
  40ddb4:	sbb    eax,0x2722b949
  40ddb9:	mov    ah,0x85
  40ddbb:	sbb    edx,esp
  40ddbd:	aas    
  40ddbe:	and    dh,dh
  40ddc0:	out    0x69,eax
  40ddc2:	call   0x5b38:0x8d7f0f88
  40ddc9:	jno    0x40dd74
  40ddcb:	popa   
  40ddcc:	out    dx,eax
  40ddcd:	mov    ch,0x30
  40ddcf:	int    0xdf
  40ddd1:	jne    0x40de24
  40ddd3:	push   edi
  40ddd4:	inc    edx
  40ddd5:	sbb    esi,ecx
  40ddd7:	hlt    
  40ddd8:	shr    bh,1
  40ddda:	fldcw  WORD PTR [ecx+0x3f]
  40dddd:	imul   ecx,DWORD PTR [edx+ecx*8],0x4e
  40dde1:	mov    al,cl
  40dde3:	ret    
  40dde4:	aaa    
  40dde5:	es pop esi
  40dde7:	cmp    al,0x3
  40dde9:	pop    esi
  40ddea:	je     0x40de55
  40ddec:	push   0x15813a1d
  40ddf1:	lds    ebp,FWORD PTR [eax]
  40ddf3:	dec    ebp
  40ddf4:	arpl   WORD PTR [ebx-0x11],ax
  40ddf7:	mov    ah,0x81
  40ddf9:	int3   
  40ddfa:	pop    ecx
  40ddfb:	les    ebp,FWORD PTR [esi+eax*2-0x358b83f1]
  40de02:	jg     0x40de12
  40de04:	jno    0x40ddb1
  40de06:	jae    0x40dd9a
  40de08:	pop    ds
  40de09:	jecxz  0x40dd8b
  40de0b:	push   ebp
  40de0c:	imul   edi,DWORD PTR [eax+0x60],0x801d881a
  40de13:	lahf   
  40de14:	popa   
  40de15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de16:	push   edx
  40de17:	dec    DWORD PTR [edx]
  40de19:	ret    0xfb42
  40de1c:	xor    al,0xfd
  40de1e:	aas    
  40de1f:	add    eax,0xcd81f976
  40de24:	test   bh,dl
  40de26:	mov    bl,BYTE PTR [esi]
  40de28:	jmp    0x2b3aaf88
  40de2d:	ins    BYTE PTR es:[edi],dx
  40de2e:	pusha  
  40de2f:	add    DWORD PTR [ebp+0x60c24a52],edx
  40de35:	adc    al,0x40
  40de37:	test   BYTE PTR [eax+ebp*4+0x63],bh
  40de3b:	add    DWORD PTR [edi+0x34],0x951c0fec
  40de42:	scas   al,BYTE PTR es:[edi]
  40de43:	stc    
  40de44:	fcomi  st,st(2)
  40de46:	fstp   TBYTE PTR [ecx+0x56e54383]
  40de4c:	dec    esi
  40de4d:	xchg   BYTE PTR [edi-0x4f76d8c5],bl
  40de53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de54:	cdq    
  40de55:	rol    DWORD PTR [esi+ebx*8-0x3e],0x5
  40de5a:	inc    edi
  40de5b:	dec    eax
  40de5c:	jmp    0xb81:0x9ea1c850
  40de63:	test   al,0x15
  40de65:	inc    edi
  40de66:	dec    esi
  40de67:	or     al,0x64
  40de69:	js     0x40deba
  40de6b:	add    BYTE PTR [edi-0x78d00964],ah
  40de71:	and    al,0x87
  40de73:	sbb    BYTE PTR [ebp-0x6cb3bce0],al
  40de79:	lods   eax,DWORD PTR ds:[esi]
  40de7a:	ror    DWORD PTR [ebx-0x64],1
  40de7d:	bound  esp,QWORD PTR [edi]
  40de7f:	xor    al,0x88
  40de81:	icebp  
  40de82:	dec    ebp
  40de83:	pop    ebp
  40de84:	dec    edi
  40de85:	in     eax,dx
  40de86:	pop    ds
  40de87:	mov    eax,ds:0x4180ef6
  40de8c:	fistp  QWORD PTR [ebx]
  40de8e:	(bad)  
  40de8f:	aad    0x74
  40de91:	aas    
  40de92:	scas   al,BYTE PTR es:[edi]
  40de93:	mov    edi,0x4cf30d57
  40de98:	sbb    dh,ch
  40de9a:	(bad)
  40de9d:	lea    ecx,[eax+0x37]
  40dea0:	push   ds
  40dea1:	fadd   DWORD PTR [edx-0x3e08c98f]
  40dea7:	popf   
  40dea8:	push   edx
  40dea9:	and    BYTE PTR [ebx-0x20],0xbe
  40dead:	jnp    0x40de69
  40deaf:	push   esi
  40deb0:	out    0x35,al
  40deb2:	test   esp,edx
  40deb4:	gs dec eax
  40deb6:	dec    esp
  40deb7:	mov    ecx,0xedb87151
  40debc:	cld    
  40debd:	cmp    eax,0x238719d0
  40dec2:	mov    eax,0x722624e0
  40dec7:	pop    esp
  40dec8:	push   es
  40dec9:	std    
  40deca:	fcom   DWORD PTR [eax+0x6c]
  40decd:	pop    ss
  40dece:	outs   dx,DWORD PTR ds:[esi]
  40decf:	shl    DWORD PTR [ebp-0x474ef3e1],0x4f
  40ded6:	data16 lahf 
  40ded8:	sbb    BYTE PTR [esp+ebx*2-0x66207289],ch
  40dedf:	xlat   BYTE PTR ds:[ebx]
  40dee0:	add    DWORD PTR [edi],0xffffffd4
  40dee3:	stos   DWORD PTR es:[edi],eax
  40dee4:	mov    edi,0x620b7583
  40dee9:	aam    0xd0
  40deeb:	fld    DWORD PTR cs:[esi]
  40deee:	sbb    DWORD PTR [eax+0x53],ebp
  40def1:	aam    0x34
  40def3:	mov    bl,0xc0
  40def5:	iret   
  40def6:	shl    esp,cl
  40def8:	mov    dl,0xd3
  40defa:	mov    ds:0xe8681da7,al
  40deff:	push   ebx
  40df00:	xchg   ecx,eax
  40df01:	jge    0x40df2e
  40df03:	push   cs
  40df04:	ins    DWORD PTR es:[edi],dx
  40df05:	(bad)  
  40df06:	hlt    
  40df07:	int    0xf0
  40df09:	cdq    
  40df0a:	scas   eax,DWORD PTR es:[edi]
  40df0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df0c:	repz mov bh,0x43
  40df0f:	cmp    ah,BYTE PTR [esi]
  40df11:	pop    ss
  40df12:	sbb    cl,BYTE PTR [ebp+0x17]
  40df15:	aaa    
  40df16:	jbe    0x40ded3
  40df18:	sbb    BYTE PTR [eax+0x138489a7],ch
  40df1e:	popa   
  40df1f:	icebp  
  40df20:	xor    ecx,DWORD PTR [edi-0x30]
  40df23:	(bad)  
  40df24:	lock sbb BYTE PTR [esi],bh
  40df27:	shl    ch,1
  40df29:	push   esp
  40df2a:	(bad)  
  40df2b:	pop    ebx
  40df2d:	jns    0x40df5e
  40df2f:	jno    0x40df87
  40df31:	inc    ebx
  40df32:	or     eax,0xffffff8f
  40df35:	out    0xfb,al
  40df37:	dec    DWORD PTR [ecx+0x14]
  40df3a:	adc    BYTE PTR [ebx],al
  40df3c:	(bad)  
  40df3d:	aam    0xb5
  40df3f:	mov    dh,0x72
  40df41:	stc    
  40df42:	push   cs
  40df43:	or     al,0xbd
  40df45:	cmp    bh,BYTE PTR [ebp+0x7929d6e9]
  40df4b:	cmp    dl,BYTE PTR [esi]
  40df4d:	hlt    
  40df4e:	xchg   ebp,eax
  40df4f:	mov    dh,0x20
  40df51:	sub    al,0x87
  40df53:	fisubr DWORD PTR [ebx+0x2c4efd9c]
  40df59:	pop    esp
  40df5a:	stos   DWORD PTR es:[edi],eax
  40df5b:	dec    esi
  40df5c:	and    eax,0xf23f1d22
  40df61:	les    ebx,FWORD PTR [edi+ecx*1-0x6a]
  40df65:	aas    
  40df66:	cmp    al,0xb5
  40df68:	in     al,dx
  40df69:	ficomp DWORD PTR [eax+esi*2-0x25bfa96f]
  40df70:	aaa    
  40df71:	lds    edi,FWORD PTR [eax]
  40df73:	mov    eax,ds:0x6ee488df
  40df78:	add    ah,ch
  40df7a:	shl    DWORD PTR [ebp+0x77],1
  40df7d:	loop   0x40dfee
  40df7f:	push   ebp
  40df80:	(bad)  
  40df81:	addr16 dec ebp
  40df83:	jl     0x40df0b
  40df85:	inc    ebp
  40df86:	inc    edx
  40df87:	jne    0x40dffd
  40df89:	inc    edx
  40df8a:	in     al,dx
  40df8b:	push   ds
  40df8c:	jecxz  0x40dfb8
  40df8e:	mov    BYTE PTR [edi+0x3c],0x2c
  40df92:	pop    esp
  40df93:	imul   esi,edi,0x67
  40df96:	adc    BYTE PTR [esi],0xcd
  40df99:	xor    DWORD PTR [edx],edx
  40df9b:	jle    0x40df73
  40df9d:	cmp    ecx,DWORD PTR [edx+0x69]
  40dfa0:	fcmovu st,st(6)
  40dfa2:	les    esp,FWORD PTR [edi-0x3a036a1f]
  40dfa8:	jbe    0x40dfc8
  40dfaa:	jb     0x40df5b
  40dfac:	jle    0x40dfbc
  40dfae:	pop    ds
  40dfaf:	dec    esi
  40dfb1:	aad    0xa9
  40dfb3:	adc    DWORD PTR [edx],edi
  40dfb5:	lods   al,BYTE PTR ds:[esi]
  40dfb6:	dec    edi
  40dfb7:	mov    cl,0x4
  40dfb9:	inc    ebp
  40dfba:	xchg   edi,eax
  40dfbb:	shr    edi,0x76
  40dfbe:	aaa    
  40dfbf:	in     eax,0xab
  40dfc1:	xchg   esi,eax
  40dfc2:	jae    0x40df58
  40dfc4:	push   ds
  40dfc5:	out    dx,eax
  40dfc6:	dec    ecx
  40dfc7:	inc    ecx
  40dfc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfc9:	xor    dl,bl
  40dfcb:	inc    esp
  40dfcc:	out    dx,al
  40dfcd:	pop    edi
  40dfce:	xor    eax,0x162f997d
  40dfd3:	mov    es,WORD PTR [edx+eiz*8]
  40dfd6:	(bad)  
  40dfd7:	in     al,dx
  40dfd8:	(bad)  
  40dfd9:	ror    BYTE PTR [ebx-0x6abd8bc5],1
  40dfdf:	jne    0x40df9c
  40dfe1:	pop    ecx
  40dfe2:	or     BYTE PTR [eax+0x36],dh
  40dfe5:	repz inc esi
  40dfe7:	cwde   
  40dfe8:	mov    ebx,0x569364b5
  40dfed:	les    ebp,FWORD PTR [edx-0x2a]
  40dff0:	rcl    DWORD PTR [ebx+0x5b],1
  40dff3:	or     al,0x1d
  40dff5:	rol    DWORD PTR [ebx],1
  40dff7:	loopne 0x40e06e
  40dff9:	mov    al,ds:0xff56a618
  40dffe:	sbb    bh,BYTE PTR [eax-0x3f]
  40e001:	xor    BYTE PTR [edx+0x2e93b519],bl
  40e007:	sbb    ah,dl
  40e009:	leave  
  40e00a:	pop    ds
  40e00b:	and    al,0xce
  40e00d:	out    0x40,eax
  40e00f:	push   ebx
  40e010:	mov    ds:0xe8109f7f,al
  40e015:	inc    edx
  40e016:	imul   edi,DWORD PTR [eax-0x29ea90be],0x77
  40e01d:	mov    ebp,ss
  40e01f:	jge    0x40dfee
  40e021:	push   ebp
  40e022:	(bad)  
  40e023:	jmp    0x88da:0xe47cf716
  40e02a:	ins    BYTE PTR es:[edi],dx
  40e02b:	lock add DWORD PTR ds:[edi],ebx
  40e02f:	vcvtsi2sd xmm6,xmm7,eax
  40e033:	adc    edx,DWORD PTR [edi-0x7d97dc0]
  40e039:	push   eax
  40e03a:	or     eax,0x76c3596f
  40e03f:	(bad)  
  40e040:	mov    eax,0x163749c
  40e045:	push   esp
  40e046:	lds    eax,FWORD PTR [edi+0x35afbd96]
  40e04c:	dec    BYTE PTR [ebx+0x5e7ba3f]
  40e052:	sahf   
  40e053:	pop    ds
  40e054:	or     BYTE PTR [eax],0xf7
  40e057:	out    dx,al
  40e058:	enter  0xa166,0xae
  40e05c:	sbb    eax,0xc77fc511
  40e061:	or     BYTE PTR [ebp+0x275210a4],0x5d
  40e068:	frstor [edi+0x3d]
  40e06b:	es adc bl,0x9c
  40e06f:	xor    DWORD PTR [ebx+0x42],ecx
  40e072:	jne    0x40e08d
  40e074:	jae    0x40dfff
  40e076:	out    0x67,al
  40e078:	outs   dx,BYTE PTR ds:[esi]
  40e079:	mov    esp,0xff2b6d57
  40e07e:	data16 jecxz 0x40e075
  40e081:	clc    
  40e082:	push   0x9c78598f
  40e087:	mov    eax,0x1c163f9c
  40e08c:	in     al,dx
  40e08d:	bound  esi,QWORD PTR [ebx+edi*1-0x50]
  40e091:	cdq    
  40e092:	fldln2 
  40e094:	clc    
  40e095:	push   eax
  40e096:	retf   0x87a6
  40e099:	dec    edi
  40e09a:	aaa    
  40e09b:	popa   
  40e09c:	sbb    al,0xf2
  40e09e:	(bad)  [ecx]
  40e0a0:	outs   dx,DWORD PTR ds:[esi]
  40e0a1:	mov    ah,0x5
  40e0a3:	jnp    0x40e044
  40e0a5:	lahf   
  40e0a6:	pop    eax
  40e0a7:	mov    al,ds:0x6e914647
  40e0ac:	xor    eax,DWORD PTR [ebp-0x121ffbb2]
  40e0b2:	mov    ds:0x3653488a,al
  40e0b7:	jns    0x40e066
  40e0b9:	aad    0xde
  40e0bb:	es dec esi
  40e0bd:	sahf   
  40e0be:	retf   0xf83d
  40e0c1:	fdiv   DWORD PTR [edx]
  40e0c3:	(bad)  [ecx]
  40e0c5:	out    dx,al
  40e0c6:	retf   
  40e0c7:	cmp    al,BYTE PTR gs:[ebx]
  40e0ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0cb:	mov    ebx,0x29ad8bf3
  40e0d0:	retf   
  40e0d1:	lods   al,BYTE PTR ds:[esi]
  40e0d2:	and    DWORD PTR [esi+0x788122be],edi
  40e0d8:	pop    edi
  40e0d9:	cmp    eax,0xbf72fc82
  40e0de:	ds jns 0x40e093
  40e0e1:	cmc    
  40e0e2:	xchg   ebp,eax
  40e0e3:	cmp    eax,0xf45a11e6
  40e0e8:	in     al,dx
  40e0e9:	mov    dl,0xdd
  40e0eb:	mov    ebp,0xd9e7fd64
  40e0f0:	mov    ah,0xf6
  40e0f2:	cs cmc 
  40e0f4:	fnsave [eax+0x42e6d2ff]
  40e0fa:	sahf   
  40e0fb:	mov    al,ds:0x46b996ee
  40e100:	jle    0x40e085
  40e102:	jle    0x40e136
  40e104:	das    
  40e105:	pop    ecx
  40e106:	sbb    BYTE PTR [ecx+0x7fc039b6],ah
  40e10c:	or     DWORD PTR [ebx],0xbd2d4adb
  40e112:	push   es
  40e113:	cld    
  40e114:	mov    bh,BYTE PTR [esi+0x34ad371b]
  40e11a:	cmp    ebp,DWORD PTR [eax]
  40e11c:	push   cs
  40e11d:	into   
  40e11e:	add    al,0x8c
  40e120:	xchg   DWORD PTR [edx+0x7a],esi
  40e123:	jle    0x40e156
  40e125:	pop    edx
  40e126:	or     al,0xc6
  40e128:	xlat   BYTE PTR ds:[ebx]
  40e129:	jmp    0x5282f48c
  40e12e:	mov    dl,0x94
  40e130:	and    BYTE PTR [esi+ebp*4],bh
  40e133:	outs   dx,BYTE PTR ds:[esi]
  40e134:	and    ecx,DWORD PTR ds:0xcad697d0
  40e13a:	out    0x78,al
  40e13c:	sub    DWORD PTR [ebx-0x46],esp
  40e13f:	(bad)  
  40e140:	xor    DWORD PTR [esi+0x6b],eax
  40e143:	push   esp
  40e144:	hlt    
  40e145:	out    dx,al
  40e146:	add    al,BYTE PTR [esi+0xf]
  40e149:	inc    ebx
  40e14a:	sbb    dl,BYTE PTR [edi+eax*2-0x7e]
  40e14e:	sbb    al,dl
  40e150:	cmp    DWORD PTR [ecx-0x8],ecx
  40e153:	mov    eax,ds:0xfedc5ead
  40e158:	sti    
  40e159:	mov    edi,0x93723a2b
  40e15e:	lods   al,BYTE PTR ds:[esi]
  40e15f:	pop    esi
  40e160:	mov    edx,0xa73391b8
  40e165:	mov    esp,0x5f1390de
  40e16a:	mov    WORD PTR [edx-0xc309ae4],cs
  40e170:	adc    eax,0x67ce0e92
  40e175:	sbb    BYTE PTR [edx+0x7ee11f5a],al
  40e17b:	and    bh,BYTE PTR [edx-0x67e80640]
  40e181:	out    dx,al
  40e182:	dec    ebx
  40e183:	outs   dx,BYTE PTR ds:[esi]
  40e184:	add    BYTE PTR [ebx+0x1ad765e2],bh
  40e18a:	loope  0x40e1e1
  40e18c:	or     edx,edi
  40e18e:	mov    al,ds:0x1282010
  40e193:	push   cs
  40e194:	mov    al,ds:0x49d29296
  40e199:	jecxz  0x40e142
  40e19b:	je     0x40e1d1
  40e19d:	mov    dh,0x3a
  40e19f:	and    DWORD PTR [ebp+0x38c916f4],esp
  40e1a5:	stc    
  40e1a6:	inc    ebx
  40e1a7:	jno    0x40e151
  40e1a9:	(bad)  
  40e1aa:	dec    esp
  40e1ab:	jge    0x40e1ae
  40e1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1af:	dec    eax
  40e1b0:	push   ebp
  40e1b1:	jns    0x40e195
  40e1b3:	mov    al,ds:0x6d500b11
  40e1b8:	jnp    0x40e1cd
  40e1ba:	sbb    al,0xf8
  40e1bc:	add    esi,DWORD PTR [edx+0x30728b2]
  40e1c2:	or     DWORD PTR [eax+0xd],ebp
  40e1c5:	mov    al,BYTE PTR [ecx]
  40e1c7:	and    ch,BYTE PTR [eax+0xf47273e]
  40e1cd:	pop    eax
  40e1ce:	adc    eax,0x418c8e60
  40e1d3:	push   ds
  40e1d4:	rcl    ebx,1
  40e1d6:	jmp    0xf7f:0xb82891a2
  40e1dd:	jmp    0x40e17b
  40e1df:	mov    fs,WORD PTR [eax-0xf]
  40e1e2:	ins    DWORD PTR es:[edi],dx
  40e1e3:	enter  0xce4a,0xb5
  40e1e7:	push   es
  40e1e8:	aaa    
  40e1e9:	in     al,0x4d
  40e1eb:	int    0x64
  40e1ed:	in     eax,0xe3
  40e1ef:	cs mov ecx,ebx
  40e1f2:	mov    bh,0x82
  40e1f4:	pop    ebx
  40e1f5:	adc    al,0xfa
  40e1f7:	out    0xa1,eax
  40e1f9:	std    
  40e1fa:	in     eax,0xe6
  40e1fc:	stc    
  40e1fd:	ss popf 
  40e1ff:	cli    
  40e200:	mov    esp,0xf6af03bb
  40e205:	es inc edi
  40e207:	test   DWORD PTR [ecx+ebx*4-0x2d],0x39daab46
  40e20f:	mov    ebx,0x3e0a953b
  40e214:	mov    ebx,0x46448383
  40e219:	ficomp WORD PTR [ebp-0x5aa26691]
  40e21f:	into   
  40e220:	xchg   DWORD PTR [ecx-0x7dc42164],edi
  40e226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e227:	ds cwde 
  40e229:	xor    eax,0x4a69db35
  40e22e:	mov    ds:0x14cea71,eax
  40e233:	fidivr WORD PTR [edi+0x17]
  40e236:	(bad)  
  40e237:	xor    BYTE PTR [ebx-0x1d36204c],ah
  40e23d:	stc    
  40e23e:	and    BYTE PTR [edx],0xad
  40e241:	outs   dx,DWORD PTR ds:[esi]
  40e242:	add    eax,0x80965666
  40e247:	addr16 sub ebx,eax
  40e24a:	adc    BYTE PTR [ecx-0x76],0x6
  40e24e:	add    al,0x1
  40e250:	dec    esi
  40e251:	movq   QWORD PTR [ecx+ebp*8+0x76],mm3
  40e256:	or     DWORD PTR [edx],esp
  40e258:	pushf  
  40e259:	dec    ebx
  40e25a:	add    DWORD PTR [edx+0x5b],ebx
  40e25d:	cmp    esi,esp
  40e25f:	(bad)  
  40e260:	enter  0xfecc,0x29
  40e264:	push   ebp
  40e265:	call   0x604f0b95
  40e26a:	dec    BYTE PTR [eax-0x6a]
  40e26d:	pusha  
  40e26e:	pop    es
  40e26f:	mov    ds:0x8dd6b222,eax
  40e274:	into   
  40e275:	pop    eax
  40e276:	pop    ebx
  40e277:	adc    BYTE PTR [edi+0x38254a3d],0x53
  40e27e:	sbb    bl,0xee
  40e281:	push   ds
  40e282:	cs hlt 
  40e284:	mov    ebx,0xa4992bef
  40e289:	xchg   BYTE PTR [eax+esi*1+0x7224e987],ah
  40e290:	push   ds
  40e291:	fbstp  TBYTE PTR ds:0x5271abab
  40e297:	dec    edi
  40e298:	mov    bl,0x33
  40e29a:	jmp    0x40e297
  40e29c:	cmp    eax,0x7c2acd61
  40e2a1:	add    edi,ecx
  40e2a3:	fmul   QWORD PTR [esi+eiz*8-0x2d]
  40e2a7:	mov    ds:0xa5ce3123,eax
  40e2ac:	mov    ds:0x2da35f55,eax
  40e2b1:	stc    
  40e2b2:	sbb    ch,al
  40e2b4:	mov    eax,DWORD PTR es:[ebx-0x5a]
  40e2b8:	and    eax,0x73529478
  40e2bd:	adc    BYTE PTR [ebp+0x5605ad0b],al
  40e2c3:	mov    edx,edi
  40e2c5:	or     cl,bh
  40e2c7:	pop    ebp
  40e2c8:	inc    esi
  40e2c9:	fsubr  st(0),st
  40e2cb:	push   edx
  40e2cc:	push   0x4884a429
  40e2d1:	fdivr  st(5),st
  40e2d3:	add    al,0xd4
  40e2d5:	out    dx,eax
  40e2d6:	add    DWORD PTR [esi-0x80],edi
  40e2d9:	into   
  40e2da:	xchg   ebp,eax
  40e2db:	enter  0x4180,0xc9
  40e2df:	push   esi
  40e2e0:	pop    ebx
  40e2e1:	mov    ebp,0x57138ba
  40e2e6:	mov    ebp,0x99bee837
  40e2eb:	imul   ebx,DWORD PTR [eax+0x5a616af6],0x62
  40e2f2:	aaa    
  40e2f3:	mov    edi,0xc7e89f72
  40e2f8:	sbb    BYTE PTR [ebp-0x51cc623e],al
  40e2fe:	popf   
  40e2ff:	hlt    
  40e300:	out    dx,al
  40e301:	sbb    BYTE PTR [ecx-0x815d680],cl
  40e307:	mov    al,0xa2
  40e309:	fiadd  WORD PTR ds:[ecx]
  40e30c:	je     0x40e2ec
  40e30e:	stc    
  40e30f:	dec    edx
  40e310:	les    eax,FWORD PTR [ecx+0x54]
  40e313:	fcomp  DWORD PTR [esi-0xf0e68bb]
  40e319:	xor    al,0x61
  40e31b:	gs jl  0x40e38e
  40e31e:	inc    edx
  40e31f:	jnp    0x40e35d
  40e321:	ror    DWORD PTR [eax],cl
  40e323:	fdivp  st(1),st
  40e325:	cmp    ah,BYTE PTR [edx]
  40e327:	shl    DWORD PTR ds:0xd35e235e,cl
  40e32d:	shr    DWORD PTR [ebx-0x1ddf9d6c],0x14
  40e334:	ret    0x4ccc
  40e337:	mov    ch,0x64
  40e339:	mov    edx,0xd33ef3f5
  40e33e:	pop    ebx
  40e33f:	sbb    eax,0xa88827fd
  40e344:	loope  0x40e386
  40e346:	xor    dh,dh
  40e348:	mov    dh,0xd1
  40e34a:	inc    edx
  40e34b:	mov    al,ds:0x533234a4
  40e350:	jae    0x40e2ea
  40e352:	jo     0x40e37d
  40e354:	into   
  40e355:	sbb    BYTE PTR [esp+esi*4-0x2cca0c20],bh
  40e35c:	ja     0x40e306
  40e35e:	jb     0x40e3aa
  40e360:	inc    esi
  40e361:	mov    ebx,0x4b953f14
  40e366:	mov    ecx,0x2d513f27
  40e36b:	mov    ch,0xd5
  40e36d:	not    DWORD PTR [edi-0x4a80db92]
  40e373:	clc    
  40e374:	add    bh,cl
  40e376:	jbe    0x40e349
  40e378:	push   ebx
  40e379:	jmp    0x59aa:0x4ca772f4
  40e380:	in     eax,0xb7
  40e382:	add    eax,0xebe5a8ec
  40e387:	fimul  WORD PTR [ebx-0x50]
  40e38a:	out    dx,eax
  40e38b:	mov    BYTE PTR [esp+ecx*2-0x59],dl
  40e38f:	pop    ds
  40e390:	outs   dx,BYTE PTR ds:[esi]
  40e391:	inc    edi
  40e392:	pushf  
  40e393:	and    esp,DWORD PTR [esi]
  40e395:	adc    eax,0x3d7b7dfd
  40e39a:	rcr    DWORD PTR [eax],cl
  40e39c:	mov    WORD PTR [ecx+0x3a],es
  40e39f:	ja     0x40e330
  40e3a1:	xor    al,0xa7
  40e3a3:	and    BYTE PTR [esi+0x3ae825fc],0xda
  40e3aa:	pushf  
  40e3ab:	push   ebx
  40e3ac:	nop
  40e3ad:	outs   dx,BYTE PTR ds:[esi]
  40e3ae:	repnz xchg ecx,eax
  40e3b0:	pop    ebx
  40e3b1:	(bad)  
  40e3b4:	test   al,0xeb
  40e3b6:	cmp    bl,BYTE PTR [ebp-0x3b]
  40e3b9:	xchg   BYTE PTR [edi-0x58],cl
  40e3bc:	mov    dl,0x41
  40e3be:	vpsubd xmm0,xmm2,XMMWORD PTR [ecx-0x2c]
  40e3c3:	dec    edi
  40e3c4:	mov    ch,0xcc
  40e3c6:	gs ss mov dh,0x24
  40e3ca:	jmp    0x40e3d7
  40e3cc:	gs icebp 
  40e3ce:	ds je  0x40e37c
  40e3d1:	pop    ebx
  40e3d2:	aam    0x75
  40e3d4:	fld    st(7)
  40e3d6:	dec    eax
  40e3d7:	dec    edi
  40e3d8:	xchg   BYTE PTR [ecx-0x69],dh
  40e3db:	and    al,0x5
  40e3dd:	stc    
  40e3de:	add    BYTE PTR [eax],ch
  40e3e0:	inc    esi
  40e3e1:	push   ss
  40e3e2:	mov    ebx,DWORD PTR [edx-0x73f634f2]
  40e3e8:	jnp    0x40e3aa
  40e3ea:	mov    eax,0x50b28ead
  40e3ef:	fisubr DWORD PTR [ebp+0x0]
  40e3f2:	or     DWORD PTR [eax-0x5d],0xfffffff4
  40e3f6:	pop    eax
  40e3f7:	stos   BYTE PTR es:[edi],al
  40e3f8:	lahf   
  40e3f9:	stos   DWORD PTR es:[edi],eax
  40e3fa:	and    bl,cl
  40e3fc:	pop    ds
  40e3fd:	inc    ebp
  40e3fe:	sbb    ecx,DWORD PTR [ebp-0x22]
  40e401:	mov    ebp,0x63f053ec
  40e406:	or     eax,0x29b40b6a
  40e40b:	push   ecx
  40e40c:	jmp    0x40e3c4
  40e40e:	retf   0xb161
  40e411:	dec    ecx
  40e412:	add    esp,edx
  40e414:	ins    BYTE PTR es:[edi],dx
  40e415:	rsqrtps xmm4,xmm1
  40e418:	push   esi
  40e419:	sbb    eax,0x5166f5be
  40e41e:	loop   0x40e3a6
  40e420:	aaa    
  40e421:	and    DWORD PTR [ebp+0x3c],ecx
  40e424:	popa   
  40e425:	lods   eax,DWORD PTR ds:[esi]
  40e426:	mov    edx,0xf2bf4ac3
  40e42b:	pop    ss
  40e42c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40e42e:	jle    0x40e474
  40e430:	mov    DWORD PTR [eax-0x26],ebp
  40e433:	test   eax,0xb6d6cc02
  40e438:	and    esi,esi
  40e43a:	cmp    ch,BYTE PTR [esp+edi*8]
  40e43d:	adc    ch,0x6a
  40e440:	dec    esi
  40e441:	xor    ch,dl
  40e443:	fst    QWORD PTR [edi-0x42]
  40e446:	lock in al,dx
  40e448:	dec    ecx
  40e449:	dec    edi
  40e44a:	xchg   edi,eax
  40e44b:	fcmovne st,st(4)
  40e44d:	jo     0x40e3e8
  40e44f:	cli    
  40e450:	jmp    DWORD PTR [edi]
  40e452:	cmp    al,0x67
  40e454:	pop    es
  40e455:	sbb    dl,dl
  40e457:	leave  
  40e458:	xor    eax,0x6373d8e1
  40e45d:	pop    es
  40e45e:	(bad)  
  40e45f:	push   eax
  40e460:	add    eax,0x98fc24a3
  40e465:	inc    ebp
  40e466:	inc    ebx
  40e467:	scas   al,BYTE PTR es:[edi]
  40e468:	mov    edx,DWORD PTR [eax]
  40e46a:	xor    DWORD PTR [esi+0x48],0x46
  40e46e:	and    cl,BYTE PTR [esi]
  40e470:	pop    eax
  40e471:	frstor [edx+0x7d8b40ce]
  40e477:	dec    BYTE PTR [esi-0x5dc425b]
  40e47d:	jno    0x40e490
  40e47f:	and    ebp,DWORD PTR [edx+0x18bcb366]
  40e485:	iret   
  40e486:	jmp    0x9d28:0xbb72d2d8
  40e48d:	mov    WORD PTR ss:[ecx-0x20f7cf9a],?
  40e494:	xchg   ebp,eax
  40e495:	mov    si,0xb511
  40e499:	pop    ss
  40e49a:	cdq    
  40e49b:	pop    edx
  40e49c:	pop    esi
  40e49d:	outs   dx,DWORD PTR ds:[esi]
  40e49e:	aaa    
  40e49f:	jb     0x40e4b4
  40e4a1:	jb     0x40e45d
  40e4a3:	pop    ss
  40e4a4:	bound  ebp,QWORD PTR [edx+0x1a0c930]
  40e4aa:	mov    al,0x40
  40e4ac:	xchg   ecx,eax
  40e4ad:	mov    eax,ds:0xb1d2a5c4
  40e4b2:	inc    ecx
  40e4b3:	xor    BYTE PTR [esi+edi*1-0x13396536],cl
  40e4ba:	add    dl,BYTE PTR [ecx-0x4a]
  40e4bd:	mov    eax,0xa9c539a6
  40e4c2:	(bad)  
  40e4c3:	in     al,dx
  40e4c4:	or     DWORD PTR [ecx-0x77d3a042],ebx
  40e4ca:	(bad)  
  40e4cb:	repz repnz (bad) 
  40e4ce:	out    0x57,eax
  40e4d0:	sub    edx,DWORD PTR [ebx]
  40e4d2:	(bad)  
  40e4d4:	lock inc eax
  40e4d6:	inc    edx
  40e4d7:	out    dx,eax
  40e4d8:	dec    edx
  40e4d9:	xor    esi,0x1733ddf3
  40e4df:	enter  0x467e,0xa2
  40e4e3:	aam    0xda
  40e4e5:	jp     0x40e4f3
  40e4e7:	test   DWORD PTR [ebp+ebp*4-0x5a],ebp
  40e4eb:	dec    esi
  40e4ec:	iret   
  40e4ed:	mov    al,0x96
  40e4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4f0:	pushf  
  40e4f1:	dec    edx
  40e4f2:	mov    ebx,0xd4e04b7a
  40e4f7:	xor    ebp,DWORD PTR [ecx-0x6e]
  40e4fa:	dec    edx
  40e4fb:	or     DWORD PTR ds:0x2b47e6d9,0x9b001825
  40e505:	shr    BYTE PTR [ecx-0x1c1c55d2],1
  40e50b:	push   eax
  40e50c:	push   ds
  40e50d:	push   esp
  40e50e:	push   0xf86abee0
  40e513:	inc    esp
  40e514:	and    DWORD PTR [ecx],eax
  40e516:	repnz mov cl,0x66
  40e519:	xor    eax,0x78a2878c
  40e51e:	retf   0xfef9
  40e521:	xchg   BYTE PTR ds:0x7dba2864,al
  40e527:	(bad)  
  40e529:	ss ret 
  40e52b:	sub    DWORD PTR [esi+ebx*1],eax
  40e52e:	pop    esi
  40e52f:	out    0x79,al
  40e531:	pop    ss
  40e532:	cdq    
  40e533:	jnp    0x40e533
  40e535:	xchg   DWORD PTR [esi-0x63],esp
  40e538:	cli    
  40e539:	pop    DWORD PTR [edi-0x4]
  40e53c:	cmp    DWORD PTR [edi],eax
  40e53e:	cmc    
  40e53f:	cmp    esp,edx
  40e541:	push   ebx
  40e542:	cmp    BYTE PTR [eax+0x67bd3b36],0xcf
  40e549:	sub    dl,BYTE PTR [ecx-0x7ede283b]
  40e54f:	add    dl,BYTE PTR [edx-0x53]
  40e552:	ret    
  40e553:	aas    
  40e554:	sbb    BYTE PTR [ebx],al
  40e556:	ja     0x40e563
  40e558:	xchg   edi,eax
  40e559:	stos   BYTE PTR es:[edi],al
  40e55a:	mov    esi,0x14692c36
  40e55f:	adc    esp,DWORD PTR ds:0x7e714105
  40e565:	mov    cl,0x73
  40e567:	call   0x18a28e8
  40e56c:	or     al,0x33
  40e56e:	xchg   edi,eax
  40e56f:	arpl   WORD PTR ds:0xddd49b77,di
  40e575:	lea    ebx,[eax-0x13c7c3a1]
  40e57b:	and    ah,bh
  40e57d:	(bad)  
  40e57e:	in     eax,0x5d
  40e580:	lods   eax,DWORD PTR ds:[esi]
  40e581:	mov    al,ah
  40e583:	ror    DWORD PTR [eax-0x4b],cl
  40e586:	cmp    al,0x87
  40e588:	nop
  40e589:	pop    ebx
  40e58a:	cli    
  40e58b:	(bad)  
  40e58c:	aad    0x55
  40e58e:	fadd   QWORD PTR [edi-0x33]
  40e591:	imul   eax,DWORD PTR [esi],0x5119c90c
  40e597:	in     al,dx
  40e598:	int    0xc5
  40e59a:	pop    ss
  40e59b:	xchg   ebx,eax
  40e59c:	scas   al,BYTE PTR es:[edi]
  40e59d:	in     eax,dx
  40e59e:	stos   BYTE PTR es:[edi],al
  40e59f:	adc    BYTE PTR [esi+0x1],ah
  40e5a2:	popf   
  40e5a3:	ret    
  40e5a4:	xlat   BYTE PTR ds:[ebx]
  40e5a5:	add    eax,0xc7b2bb92
  40e5aa:	cmp    dl,0x33
  40e5ad:	sub    eax,0x91a62655
  40e5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5b3:	repz adc eax,0x443487af
  40e5b9:	fmul   QWORD PTR [edx-0x4702a9bc]
  40e5bf:	add    eax,0xaa32b793
  40e5c4:	fdiv   QWORD PTR [ebx-0x3e]
  40e5c7:	sub    BYTE PTR [ecx+0x6d],0x8e
  40e5cb:	retf   0xcdf0
  40e5ce:	(bad)  
  40e5cf:	jle    0x40e58a
  40e5d1:	mov    ah,0xe3
  40e5d3:	sub    eax,ecx
  40e5d5:	repz dec BYTE PTR [ecx+0x3e]
  40e5d9:	jg     0x40e5ed
  40e5db:	pusha  
  40e5dc:	sbb    al,0x96
  40e5de:	push   0xdb38dd2b
  40e5e3:	or     al,0xa6
  40e5e5:	adc    BYTE PTR [eax],al
  40e5e7:	jo     0x40e5f8
  40e5e9:	ins    DWORD PTR es:[edi],dx
  40e5ea:	cmc    
  40e5eb:	icebp  
  40e5ec:	das    
  40e5ed:	dec    ecx
  40e5ee:	mov    esi,0xa497c3cd
  40e5f3:	fisttp DWORD PTR ds:0xe0820aa4
  40e5f9:	and    DWORD PTR [eax-0x3dcd7b09],esi
  40e5ff:	xchg   ebp,eax
  40e600:	mov    edx,0x3ddea136
  40e605:	push   ebx
  40e606:	outs   dx,DWORD PTR ds:[esi]
  40e607:	cmp    cl,BYTE PTR [edi-0x6a112905]
  40e60d:	outs   dx,DWORD PTR ds:[esi]
  40e60e:	add    eax,0xd11c5fb8
  40e613:	mov    edx,0x8431fd53
  40e618:	bound  ecx,QWORD PTR [ebx]
  40e61a:	add    al,0x6f
  40e61c:	sub    DWORD PTR [ebx+0x2bb33cf7],ecx
  40e622:	(bad)  
  40e623:	cli    
  40e624:	lea    ebp,[esi+0x108bb400]
  40e62a:	and    dh,BYTE PTR [ebx-0xb]
  40e62d:	outs   dx,BYTE PTR ds:[esi]
  40e62e:	push   eax
  40e62f:	pop    edi
  40e630:	jp     0x40e626
  40e632:	push   ebx
  40e633:	aad    0x75
  40e635:	adc    al,0xe6
  40e637:	dec    edi
  40e638:	pop    ebx
  40e639:	sbb    al,0xbb
  40e63b:	scas   al,BYTE PTR es:[edi]
  40e63c:	sub    esi,0x2f7e50d1
  40e642:	pushf  
  40e643:	loop   0x40e5d1
  40e645:	aam    0xd1
  40e647:	das    
  40e648:	test   DWORD PTR [edx-0x46027351],ecx
  40e64e:	clc    
  40e64f:	sbb    al,0xd5
  40e651:	popa   
  40e652:	push   0x6e63dd40
  40e657:	sub    BYTE PTR [eax+0x4c],bh
  40e65a:	and    edx,DWORD PTR [esi-0x7e]
  40e65d:	pop    ecx
  40e65e:	rcl    BYTE PTR [eax+0x3a],cl
  40e661:	mov    bl,0x1
  40e663:	daa    
  40e664:	test   BYTE PTR ds:[ebx-0x656c9990],al
  40e66b:	cli    
  40e66c:	cmp    eax,0xc13fc3e0
  40e671:	(bad)  
  40e672:	ins    DWORD PTR es:[edi],dx
  40e673:	or     BYTE PTR [edi-0x22b25d60],al
  40e679:	mov    ch,0x52
  40e67b:	mov    ds:0x24f1e2c4,al
  40e680:	call   0x430e2e76
  40e685:	lods   eax,DWORD PTR ds:[esi]
  40e686:	clc    
  40e687:	pop    ecx
  40e688:	call   DWORD PTR [ecx-0x36c8f11]
  40e68e:	clc    
  40e68f:	scas   al,BYTE PTR es:[edi]
  40e690:	or     eax,0x198498a9
  40e695:	mov    esp,0x40359a86
  40e69a:	rcl    BYTE PTR ss:[ecx-0x7f368d2],0x60
  40e6a2:	sbb    dl,BYTE PTR [ebx]
  40e6a4:	aas    
  40e6a5:	test   al,0x58
  40e6a7:	ret    0xbd45
  40e6aa:	pop    ss
  40e6ab:	inc    ebx
  40e6ac:	aam    0xab
  40e6ae:	add    edx,DWORD PTR [ebp-0x16]
  40e6b1:	push   esp
  40e6b2:	inc    eax
  40e6b3:	in     eax,0x23
  40e6b5:	jecxz  0x40e724
  40e6b7:	stos   BYTE PTR es:[edi],al
  40e6b8:	jle    0x40e6ac
  40e6ba:	leave  
  40e6bb:	mov    ecx,0x431ff0b7
  40e6c0:	jle    0x40e697
  40e6c2:	fmul   st,st(6)
  40e6c4:	cdq    
  40e6c5:	lea    ecx,[ebp+esi*8-0x1420e6d4]
  40e6cc:	adc    ch,BYTE PTR [edx-0x5e]
  40e6cf:	cmp    al,0xae
  40e6d1:	mov    DWORD PTR [esi+0x2536f3d3],edi
  40e6d7:	(bad)  
  40e6d8:	pop    es
  40e6d9:	jo     0x40e68b
  40e6db:	fsubr  DWORD PTR [esi+eiz*8]
  40e6de:	dec    ecx
  40e6df:	icebp  
  40e6e0:	clc    
  40e6e1:	sub    eax,0x7a5ee3c0
  40e6e6:	into   
  40e6e7:	inc    ebx
  40e6e8:	dec    edi
  40e6e9:	xchg   edx,eax
  40e6ea:	fwait
  40e6eb:	xlat   BYTE PTR ds:[ebx]
  40e6ec:	adc    ch,0xaa
  40e6ef:	jbe    0x40e751
  40e6f1:	fmul   DWORD PTR [esi+eax*2]
  40e6f4:	cmp    DWORD PTR [edi+ebp*4],eax
  40e6f7:	fldenv [eax+esi*2]
  40e6fa:	mov    al,ds:0xf494a66b
  40e6ff:	sub    DWORD PTR [ebx],0xa2c9f609
  40e705:	sub    cl,cl
  40e707:	test   al,0xaa
  40e709:	in     al,0x31
  40e70b:	mov    ds:0x27a8ad14,eax
  40e710:	pop    ss
  40e711:	pop    edx
  40e712:	xor    ebp,DWORD PTR [edi-0x7d]
  40e715:	idiv   bl
  40e717:	inc    eax
  40e718:	fcomp  st(7)
  40e71a:	popf   
  40e71b:	jne    0x40e6e9
  40e71d:	stos   BYTE PTR es:[edi],al
  40e71e:	fidivr DWORD PTR [eax-0x5e9a46e2]
  40e724:	sub    dh,BYTE PTR [ecx+0x2da10835]
  40e72a:	mov    ds:0xd10b5fb2,al
  40e72f:	imul   ebp,DWORD PTR [edi+edx*2-0x6d],0xffffffd8
  40e734:	(bad)  
  40e736:	xor    ah,BYTE PTR [ebp+eiz*4-0x2b95a52a]
  40e73d:	jne    0x40e733
  40e73f:	pop    eax
  40e740:	cmp    eax,0xb998ba06
  40e745:	std    
  40e746:	xchg   esp,eax
  40e747:	pop    ecx
  40e748:	adc    eax,0xce76d5d1
  40e74d:	adc    al,0x31
  40e74f:	mov    edi,0xcbc74089
  40e754:	retf   0x5705
  40e757:	xchg   ecx,eax
  40e758:	pop    ss
  40e759:	dec    ecx
  40e75a:	sar    DWORD PTR [eax+esi*1],1
  40e75d:	aad    0x27
  40e75f:	cmp    DWORD PTR [edx-0x5499c181],ebx
  40e765:	fdivr  DWORD PTR [ebx]
  40e767:	je     0x40e780
  40e769:	sbb    eax,0x573ec955
  40e76e:	bnd ret 
  40e770:	mov    eax,ds:0x12799c77
  40e775:	mov    ebp,0x7ddf0ae9
  40e77a:	and    BYTE PTR ds:0xa06c31a8,dh
  40e780:	(bad)  
  40e782:	inc    ecx
  40e783:	out    dx,al
  40e784:	popa   
  40e785:	add    BYTE PTR [ebx-0x42],ah
  40e788:	jmp    0x40e7d7
  40e78a:	mov    ah,0xa7
  40e78c:	sub    DWORD PTR [eax+0x35],0xb3468bc8
  40e793:	mov    ebp,0x5bf79227
  40e798:	add    al,0x49
  40e79a:	inc    ebp
  40e79b:	xchg   DWORD PTR [ebx],ebx
  40e79d:	push   0x1bccd9ea
  40e7a2:	adc    edi,0xffffff84
  40e7a5:	push   cs
  40e7a6:	sub    eax,DWORD PTR [edi]
  40e7a8:	gs stos BYTE PTR es:[edi],al
  40e7aa:	cmp    eax,0x2bcbbe54
  40e7af:	lahf   
  40e7b0:	push   ss
  40e7b1:	jnp    0x40e7ea
  40e7b3:	addr16 ds dec esi
  40e7b6:	pop    ebp
  40e7b7:	push   ss
  40e7b8:	adc    ecx,0x950fcd1b
  40e7be:	das    
  40e7bf:	cdq    
  40e7c0:	push   ebp
  40e7c1:	rol    DWORD PTR [eax-0x3b],0x1b
  40e7c5:	sub    cl,BYTE PTR [edx+0x46]
  40e7c8:	xor    ebx,esp
  40e7ca:	push   0x67dac0f3
  40e7cf:	popa   
  40e7d0:	sub    al,0x16
  40e7d2:	in     eax,0xa7
  40e7d4:	inc    ebx
  40e7d5:	jno    0x40e76b
  40e7d7:	fidiv  DWORD PTR [edi-0x266c2c71]
  40e7dd:	rcr    BYTE PTR [eax-0x50c66218],cl
  40e7e3:	imul   eax,DWORD PTR [esi],0xe2e786e4
  40e7e9:	sub    dl,BYTE PTR [ebx+0x6010dafc]
  40e7ef:	dec    ebx
  40e7f0:	mov    eax,ds:0x4c25ffab
  40e7f5:	mov    bl,0x2b
  40e7f7:	jmp    0x40e7c4
  40e7f9:	mov    edx,0xab6a435a
  40e7fe:	pop    ebx
  40e7ff:	mov    bh,0x3a
  40e801:	inc    ecx
  40e802:	fild   QWORD PTR [ebp+0x2]
  40e805:	or     DWORD PTR [ecx-0x788ede3f],ecx
  40e80b:	push   ss
  40e80c:	jecxz  0x40e829
  40e80e:	sub    ch,ch
  40e810:	fnstsw WORD PTR [edx+0xe8ed89b]
  40e816:	sbb    edx,ebx
  40e818:	sbb    al,0x19
  40e81a:	lods   eax,DWORD PTR ds:[esi]
  40e81b:	pushf  
  40e81c:	(bad)  
  40e81e:	adc    dh,BYTE PTR [ecx-0x6b7071be]
  40e824:	repnz pop ebp
  40e826:	jge    0x40e807
  40e828:	lds    ecx,FWORD PTR ds:0x354921ff
  40e82e:	lods   eax,DWORD PTR ds:[esi]
  40e82f:	paddsb mm2,QWORD PTR [edx+0x331fbb29]
  40e836:	aam    0x25
  40e838:	and    eax,0x915a6eda
  40e83d:	and    bl,BYTE PTR [edi+0x65a52794]
  40e843:	adc    eax,DWORD PTR [ebx-0x16]
  40e846:	jp     0x40e81d
  40e848:	ret    
  40e849:	xchg   BYTE PTR [edi],ah
  40e84b:	scas   al,BYTE PTR es:[edi]
  40e84c:	xor    dh,dh
  40e84e:	add    bh,BYTE PTR [esp+ecx*2-0x42]
  40e852:	pop    ds
  40e853:	rcl    esp,1
  40e855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e856:	cmc    
  40e857:	stos   DWORD PTR es:[edi],eax
  40e858:	dec    esp
  40e859:	mul    BYTE PTR [ecx+eiz*1]
  40e85c:	repz push ss
  40e85e:	test   al,0x2d
  40e860:	out    dx,al
  40e861:	pop    ebx
  40e862:	pop    ss
  40e863:	jge    0x40e871
  40e865:	ins    DWORD PTR es:[edi],dx
  40e866:	inc    eax
  40e867:	add    eax,0xa3373ea7
  40e86c:	addr16 sbb eax,0x6414a202
  40e872:	and    eax,0xd993e80e
  40e877:	add    BYTE PTR [ebx+0x65],0xf9
  40e87b:	add    DWORD PTR [edi-0x3a],esp
  40e87e:	mov    al,ds:0xe70128c0
  40e883:	lds    ebx,FWORD PTR [ecx-0x560c0677]
  40e889:	adc    bh,BYTE PTR [ebx]
  40e88b:	aas    
  40e88c:	and    al,0xb
  40e88e:	int3   
  40e88f:	push   ebp
  40e890:	sbb    ebx,DWORD PTR [ebx+0x53]
  40e893:	call   0xbbcf7db4
  40e898:	inc    esi
  40e899:	mov    ch,0xc7
  40e89b:	mov    al,0x4e
  40e89d:	sbb    ebx,DWORD PTR [edx+edi*4]
  40e8a0:	arpl   WORD PTR [esi+ebp*4],ax
  40e8a3:	and    eax,0x8772ca93
  40e8a8:	cmp    eax,0x87731958
  40e8ad:	jmp    0x40e87e
  40e8af:	popf   
  40e8b0:	lods   eax,DWORD PTR ds:[esi]
  40e8b1:	mov    cl,0xdb
  40e8b3:	push   0x9617373
  40e8b8:	inc    eax
  40e8b9:	imul   eax,DWORD PTR [edx-0x5ec61113],0xffffffa3
  40e8c0:	and    esp,edi
  40e8c2:	pop    ds
  40e8c3:	xor    ch,bh
  40e8c5:	jb     0x40e853
  40e8c7:	in     al,0x97
  40e8c9:	mov    edx,0x1dca99d
  40e8ce:	xchg   esi,eax
  40e8cf:	pop    edx
  40e8d0:	inc    esi
  40e8d1:	clc    
  40e8d2:	mov    eax,ds:0x74cc8741
  40e8d7:	fistp  DWORD PTR [esi+edx*1]
  40e8da:	test   BYTE PTR ds:0x78c61b24,dh
  40e8e0:	ror    al,0xa3
  40e8e3:	adc    BYTE PTR [edi],dl
  40e8e5:	mov    ecx,0x8ea9a535
  40e8ea:	pop    esp
  40e8eb:	(bad)  [edx+edx*1+0x36]
  40e8ef:	in     eax,dx
  40e8f0:	push   ecx
  40e8f1:	std    
  40e8f2:	push   ebp
  40e8f3:	mov    ss,WORD PTR [edi]
  40e8f5:	or     eax,0x9a6f07dd
  40e8fa:	pushf  
  40e8fb:	jg     0x40e913
  40e8fd:	arpl   WORD PTR [eax],di
  40e8ff:	fmul   DWORD PTR [esi]
  40e901:	int    0x43
  40e903:	out    0xf8,al
  40e905:	jmp    0xbfa7:0xfdbc2d3a
  40e90c:	sahf   
  40e90d:	hlt    
  40e90e:	xor    al,0x23
  40e910:	mov    esp,0x961603b
  40e915:	out    0xf4,al
  40e917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e918:	xor    ecx,DWORD PTR [eax+0x56dc5f38]
  40e91e:	imul   esp,ebp,0xffffffc3
  40e921:	sbb    bl,BYTE PTR [edx+esi*1]
  40e924:	mov    DWORD PTR [edx+0x27],ebx
  40e927:	frstor [esi-0x4d]
  40e92a:	stos   DWORD PTR es:[edi],eax
  40e92b:	hlt    
  40e92c:	cmp    DWORD PTR [ebx-0x62],esi
  40e92f:	loop   0x40e8d2
  40e931:	push   0x6
  40e933:	cmp    al,0xb1
  40e935:	hlt    
  40e936:	fiadd  DWORD PTR [edx-0x35]
  40e939:	popf   
  40e93a:	sub    edx,ebp
  40e93c:	xor    ecx,DWORD PTR [ecx-0x4ac2541a]
  40e942:	mov    eax,ds:0x7a0aca6b
  40e947:	jg     0x40e980
  40e949:	xchg   edx,eax
  40e94a:	mov    ds:0xdab1215f,al
  40e94f:	and    al,0xf1
  40e951:	fdiv   DWORD PTR [edx-0x1c]
  40e954:	push   ecx
  40e955:	mov    dh,0x4c
  40e957:	inc    edx
  40e958:	int3   
  40e959:	pop    ds
  40e95a:	ja     0x40e8fd
  40e95c:	push   esp
  40e95d:	outs   dx,DWORD PTR ds:[esi]
  40e95e:	jecxz  0x40e96c
  40e960:	out    dx,eax
  40e961:	imul   dl
  40e963:	lods   eax,DWORD PTR ds:[esi]
  40e964:	fwait
  40e965:	ret    
  40e966:	ror    BYTE PTR [eax+0xc],0x77
  40e96a:	sbb    esp,DWORD PTR [edi+0x731e9090]
  40e970:	cmc    
  40e971:	repnz in al,dx
  40e973:	fidivr WORD PTR [ecx]
  40e975:	ds jge 0x40e951
  40e978:	xlat   BYTE PTR ds:[ebx]
  40e979:	in     al,dx
  40e97a:	pop    es
  40e97b:	mov    al,0x1f
  40e97d:	jle    0x40e993
  40e97f:	scas   eax,DWORD PTR es:[edi]
  40e980:	fdiv   QWORD PTR [edx]
  40e982:	sub    DWORD PTR [edi],0xffffffcc
  40e985:	ffreep st(5)
  40e987:	or     DWORD PTR [ebx],edx
  40e989:	inc    ebp
  40e98a:	sub    eax,0x1395acdc
  40e98f:	ficom  WORD PTR [eax+0x3b]
  40e992:	(bad)  
  40e994:	cmp    ecx,DWORD PTR [edx+eax*2+0x4f]
  40e998:	repz es hlt 
  40e99b:	stc    
  40e99c:	inc    ecx
  40e99d:	ret    0x24ac
  40e9a0:	jl     0x40e971
  40e9a2:	push   ecx
  40e9a3:	mov    ebx,0xa7d6165e
  40e9a8:	inc    eax
  40e9a9:	jecxz  0x40e984
  40e9ab:	pop    ecx
  40e9ac:	dec    ecx
  40e9ad:	push   esp
  40e9ae:	push   eax
  40e9af:	out    0x94,al
  40e9b1:	out    0x4f,al
  40e9b3:	mov    bh,0x5c
  40e9b5:	cmp    dh,dl
  40e9b7:	pop    ecx
  40e9b8:	loopne 0x40e9e6
  40e9ba:	inc    esi
  40e9bb:	push   es
  40e9bc:	outs   dx,DWORD PTR ds:[esi]
  40e9bd:	call   0xa0ab9b21
  40e9c2:	push   eax
  40e9c3:	push   ss
  40e9c4:	shl    eax,0xb9
  40e9c7:	pop    ds
  40e9c8:	xchg   ebx,eax
  40e9c9:	dec    ebp
  40e9ca:	(bad)  
  40e9cb:	fld    DWORD PTR [ecx-0x53]
  40e9ce:	rcl    DWORD PTR [eax+0x76],cl
  40e9d1:	push   eax
  40e9d2:	adc    bh,bh
  40e9d4:	(bad)  
  40e9d5:	mov    edi,0xf7fde852
  40e9da:	ror    bh,1
  40e9dc:	mov    ch,0x76
  40e9de:	popf   
  40e9df:	and    BYTE PTR [eax],0xc9
  40e9e2:	sub    al,0xad
  40e9e4:	push   es
  40e9e5:	sbb    edx,edx
  40e9e7:	and    bl,BYTE PTR [ebx]
  40e9e9:	add    DWORD PTR [edx+0x33a96331],ebp
  40e9ef:	xchg   esi,eax
  40e9f0:	add    DWORD PTR [ecx+0x45],esp
  40e9f3:	jl     0x40e9c0
  40e9f5:	cs es in al,dx
  40e9f8:	enter  0xc5d7,0x54
  40e9fc:	inc    esi
  40e9fd:	jno    0x40ea59
  40e9ff:	das    
  40ea00:	mov    eax,ds:0x7609e313
  40ea05:	sub    bh,cl
  40ea07:	arpl   ax,ax
  40ea09:	sub    dh,0x13
  40ea0c:	sub    eax,0xde4da185
  40ea11:	(bad)  
  40ea13:	bound  edi,QWORD PTR [esi-0xf]
  40ea16:	js     0x40e9ef
  40ea18:	mov    edi,0xa01c0405
  40ea1d:	js     0x40ea98
  40ea1f:	pop    ebp
  40ea20:	inc    eax
  40ea21:	pop    esi
  40ea22:	mov    ecx,0x8eec2752
  40ea27:	fwait
  40ea28:	js     0x40ea7e
  40ea2a:	ins    BYTE PTR es:[edi],dx
  40ea2b:	fidivr WORD PTR [edi+esi*8-0x4]
  40ea2f:	xor    ch,BYTE PTR [ecx-0x4e]
  40ea32:	adc    eax,0x38db0295
  40ea37:	aad    0xdf
  40ea39:	in     eax,dx
  40ea3a:	cmp    ecx,DWORD PTR [eax]
  40ea3c:	pusha  
  40ea3d:	not    BYTE PTR [edi+0x40]
  40ea40:	mov    eax,ds:0x38ea68cb
  40ea45:	imul   ecx,DWORD PTR [edx-0x6],0x36
  40ea49:	repnz int 0x38
  40ea4c:	xor    al,0x42
  40ea4e:	fld    QWORD PTR [edx+0x73071096]
  40ea54:	les    ebx,FWORD PTR [ebp+0x4020a6a2]
  40ea5a:	jnp    0x40ea89
  40ea5c:	add    BYTE PTR [edx+eiz*4],ah
  40ea5f:	inc    edx
  40ea60:	lock cmp ah,BYTE PTR [edx+0x41]
  40ea64:	shr    DWORD PTR [edi],1
  40ea66:	xchg   edi,eax
  40ea67:	scas   al,BYTE PTR es:[edi]
  40ea68:	je     0x40ea1c
  40ea6a:	jne    0x40ea9b
  40ea6c:	shl    DWORD PTR [ebp-0x50],cl
  40ea6f:	pop    edx
  40ea70:	or     al,0x6f
  40ea72:	retf   0xc57e
  40ea75:	dec    ebp
  40ea76:	push   0x3b
  40ea78:	mov    esp,0x44fe27f8
  40ea7d:	addr16 cdq 
  40ea7f:	and    eax,0x6700b5e9
  40ea84:	sti    
  40ea85:	cdq    
  40ea86:	dec    eax
  40ea87:	stc    
  40ea88:	jle    0x40ea15
  40ea8a:	add    edi,DWORD PTR [eax]
  40ea8c:	ror    DWORD PTR [esp+ecx*2-0x1a21768d],cl
  40ea93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea94:	clc    
  40ea95:	stos   BYTE PTR es:[edi],al
  40ea96:	lds    esi,FWORD PTR [eax-0x28]
  40ea99:	inc    edx
  40ea9a:	(bad)  
  40ea9b:	pop    ss
  40ea9c:	jg     0x40eb0d
  40ea9e:	mov    esi,0x61ce674a
  40eaa3:	int3   
  40eaa4:	les    ebx,FWORD PTR [eax+0x65]
  40eaa7:	inc    ebp
  40eaa8:	jl     0x40eae7
  40eaaa:	sub    al,0x9d
  40eaac:	cmp    ecx,0xffffffe1
  40eaaf:	mov    esi,0xc37a3d3d
  40eab4:	fbld   TBYTE PTR [eax+0x7f]
  40eab7:	add    eax,0x736c2a88
  40eabc:	ins    BYTE PTR es:[edi],dx
  40eabd:	(bad)  [esi-0x61]
  40eac0:	inc    esi
  40eac1:	inc    ebx
  40eac2:	test   dl,ch
  40eac4:	push   ebx
  40eac5:	or     DWORD PTR [ebp-0x6d],edx
  40eac8:	shl    BYTE PTR [edi],1
  40eaca:	test   al,0x47
  40eacc:	xor    edi,DWORD PTR [esi-0x4ba215fb]
  40ead2:	pusha  
  40ead3:	shl    ch,1
  40ead5:	fisubr DWORD PTR [eax-0x6c]
  40ead8:	add    al,bl
  40eada:	arpl   sp,bp
  40eadc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eadd:	popa   
  40eade:	scas   al,BYTE PTR es:[edi]
  40eadf:	test   DWORD PTR [esi+0x5b5a6bf3],esi
  40eae5:	inc    ebx
  40eae6:	(bad)  
  40eae7:	neg    BYTE PTR [edx-0x67]
  40eaea:	push   ecx
  40eaeb:	ins    DWORD PTR es:[edi],dx
  40eaec:	fst    DWORD PTR [edx+0x7183f80a]
  40eaf2:	rcl    BYTE PTR [esi],cl
  40eaf4:	jle    0x40eb0e
  40eaf6:	cmp    al,0xbf
  40eaf8:	jnp    0x40eaaf
  40eafa:	or     BYTE PTR [edi],bh
  40eafc:	inc    esp
  40eafd:	and    bl,ah
  40eaff:	add    DWORD PTR fs:[esi],ebp
  40eb02:	dec    ebp
  40eb03:	inc    ebx
  40eb04:	mov    edx,0x14ecc6b6
  40eb09:	fistp  QWORD PTR [ecx]
  40eb0b:	mov    ecx,0xf8dba63a
  40eb10:	xchg   DWORD PTR [ecx+0xb],esp
  40eb13:	inc    ecx
  40eb14:	in     al,dx
  40eb15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb16:	dec    esi
  40eb17:	out    0x17,eax
  40eb19:	js     0x40eac2
  40eb1b:	or     al,0x8a
  40eb1d:	or     eax,0x1555ecef
  40eb22:	loop   0x40eab7
  40eb24:	mov    ecx,0xc996da79
  40eb29:	xchg   esp,eax
  40eb2a:	push   ebx
  40eb2b:	cdq    
  40eb2c:	jo     0x40eb75
  40eb2e:	sbb    BYTE PTR [eax-0x4d],cl
  40eb31:	push   ss
  40eb32:	in     eax,dx
  40eb33:	add    dl,0xd8
  40eb36:	shl    BYTE PTR [ebp-0x24],1
  40eb39:	xchg   edx,eax
  40eb3a:	mov    al,0x2e
  40eb3c:	addr16 mov al,0xa8
  40eb3f:	pop    ss
  40eb40:	dec    ebx
  40eb41:	lock imul esi,DWORD PTR [edx+ebx*2-0x6e],0xffffff8d
  40eb47:	loopne 0x40ebc4
  40eb49:	jmp    0x40eb4c
  40eb4b:	or     al,0x3b
  40eb4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb4e:	or     esp,DWORD PTR [esi+esi*4-0x54d386b2]
  40eb55:	je     0x40eb21
  40eb57:	pop    ds
  40eb58:	mov    al,ds:0x51b700b8
  40eb5d:	shr    BYTE PTR [edi-0x1d1a4a6],0x3e
  40eb64:	adc    al,0x20
  40eb66:	jae    0x40eb52
  40eb68:	dec    edx
  40eb69:	sbb    DWORD PTR [ecx+0x1f3a59cf],0xa7a4eae0
  40eb73:	push   eax
  40eb74:	pusha  
  40eb75:	call   0x6bc5:0xeb32fdc
  40eb7c:	mov    ebx,0x60a775a9
  40eb81:	or     DWORD PTR [ecx+ebx*2-0x1d],ebp
  40eb85:	jge    0x40eb22
  40eb87:	fcomi  st,st(1)
  40eb89:	rcr    BYTE PTR [edi],cl
  40eb8b:	mov    ch,0x9a
  40eb8d:	out    0x9f,al
  40eb8f:	cld    
  40eb90:	xor    al,0xf9
  40eb92:	pop    esp
  40eb93:	jmp    0x40ebaf
  40eb95:	or     cl,BYTE PTR [ecx-0x2a]
  40eb98:	pop    ds
  40eb99:	inc    esp
  40eb9a:	enter  0x2036,0x96
  40eb9e:	adc    DWORD PTR [edi+eiz*2+0x1163d181],esp
  40eba5:	adc    DWORD PTR [eax],0x47
  40eba8:	imul   edx,eax,0x98edbc5e
  40ebae:	xor    BYTE PTR [ecx+0x5962b557],dl
  40ebb4:	inc    ebx
  40ebb5:	hlt    
  40ebb6:	into   
  40ebb7:	outs   dx,DWORD PTR ds:[esi]
  40ebb8:	aas    
  40ebb9:	dec    ebx
  40ebba:	(bad)  
  40ebbb:	out    dx,eax
  40ebbc:	sbb    cl,cl
  40ebbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbf:	popf   
  40ebc0:	dec    ebp
  40ebc1:	test   al,0x5d
  40ebc3:	mov    ch,0x60
  40ebc5:	mov    ?,WORD PTR [edx-0x24]
  40ebc8:	outs   dx,DWORD PTR ds:[esi]
  40ebc9:	jmp    0xc8e43506
  40ebce:	dec    esi
  40ebcf:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebd1:	add    dl,BYTE PTR [esi+eax*4-0x6d]
  40ebd5:	imul   esp,DWORD PTR [eax+0x48c75284],0xa87457dc
  40ebdf:	or     esi,ecx
  40ebe1:	jle    0x40eb84
  40ebe3:	xchg   DWORD PTR [edx],edi
  40ebe5:	sbb    DWORD PTR ds:[esi+0x55],edx
  40ebe9:	and    ebp,ebp
  40ebeb:	push   ds
  40ebec:	arpl   WORD PTR [edi+0x3ba1124e],dx
  40ebf2:	in     eax,0xab
  40ebf4:	pop    ss
  40ebf5:	dec    esp
  40ebf6:	or     cl,BYTE PTR [ebx-0x64f83a75]
  40ebfc:	je     0x40ec67
  40ebfe:	loop   0x40ebe5
  40ec00:	adc    eax,0xf39682a0
  40ec05:	jb     0x40ec6b
  40ec07:	cmp    dh,BYTE PTR [ebp+0xc]
  40ec0a:	xchg   ebx,eax
  40ec0b:	jne    0x40ebae
  40ec0d:	leave  
  40ec0e:	or     eax,edi
  40ec10:	jmpw   0xb20e
  40ec14:	push   es
  40ec15:	jmp    0x40ebb6
  40ec17:	xor    al,BYTE PTR [ebx+0x4854c36e]
  40ec1d:	loope  0x40ec32
  40ec1f:	jg     0x40ec57
  40ec21:	lahf   
  40ec22:	sub    eax,0xf8b08253
  40ec27:	in     eax,dx
  40ec28:	mov    esi,0x8c00de81
  40ec2d:	adc    DWORD PTR [eax+0x75ee5b28],ecx
  40ec33:	daa    
  40ec34:	inc    esp
  40ec35:	shl    DWORD PTR [edx-0x4ccd7119],cl
  40ec3b:	test   eax,edx
  40ec3d:	or     ah,BYTE PTR [ebx+0x15]
  40ec40:	xchg   edx,eax
  40ec41:	cld    
  40ec42:	repz mov dl,ah
  40ec45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec46:	ret    
  40ec47:	out    0xb6,al
  40ec49:	xchg   ebp,eax
  40ec4a:	xor    bh,BYTE PTR [ebx]
  40ec4c:	mov    edi,0x2342a6c
  40ec51:	aad    0x63
  40ec53:	jne    0x40ec7d
  40ec55:	daa    
  40ec56:	inc    esp
  40ec57:	cld    
  40ec58:	mov    ch,0x6
  40ec5a:	pmaddwd mm2,QWORD PTR [eax+0x16]
  40ec5e:	stc    
  40ec5f:	std    
  40ec60:	shl    ebx,0x86
  40ec63:	daa    
  40ec64:	xor    al,0x42
  40ec66:	cmp    bh,BYTE PTR [edi+ebx*4]
  40ec69:	push   ss
  40ec6a:	add    BYTE PTR [ebp-0x2ee3cc5c],bh
  40ec70:	mov    edi,0xd5e25519
  40ec75:	mov    eax,0x433a2810
  40ec7a:	adc    eax,DWORD PTR [esi-0x3d14e633]
  40ec80:	push   0xffffff97
  40ec82:	dec    eax
  40ec83:	fchs   
  40ec85:	int3   
  40ec86:	and    al,dh
  40ec88:	pop    edx
  40ec89:	and    DWORD PTR [ecx-0x4c],eax
  40ec8c:	(bad)  
  40ec8d:	in     al,0x16
  40ec8f:	gs or  eax,0x52d8afc0
  40ec95:	mov    ecx,ss
  40ec97:	(bad)  
  40ec98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec99:	dec    esi
  40ec9a:	mov    bp,sp
  40ec9d:	mov    ds:0x206c7ae4,al
  40eca2:	mov    bh,dh
  40eca4:	mov    dh,BYTE PTR [ebx+0x51]
  40eca7:	xchg   edx,eax
  40eca8:	jb     0x40ecc3
  40ecaa:	dec    esi
  40ecab:	stos   DWORD PTR es:[edi],eax
  40ecac:	cmp    edx,ecx
  40ecae:	cmp    dl,BYTE PTR [eax-0x19d7ff07]
  40ecb4:	mov    BYTE PTR ds:0xe1a699d4,dl
  40ecba:	sbb    edi,edx
  40ecbc:	outs   dx,BYTE PTR ds:[esi]
  40ecbd:	popf   
  40ecbe:	push   ss
  40ecbf:	ret    0xfe9c
  40ecc2:	jo     0x40ecd5
  40ecc4:	outs   dx,BYTE PTR ds:[esi]
  40ecc5:	mov    ecx,0xee43d800
  40ecca:	imul   ecx,eax,0x76
  40eccd:	sbb    eax,0xa2009d78
  40ecd2:	cmp    BYTE PTR [esi+0x6b],dh
  40ecd5:	mov    dl,0xe5
  40ecd7:	jns    0x40ed37
  40ecd9:	sbb    dh,BYTE PTR ds:0x499a7f0c
  40ecdf:	xor    BYTE PTR [edx-0x6d1d5d32],al
  40ece5:	cdq    
  40ece6:	xchg   esp,eax
  40ece7:	mov    edi,DWORD PTR [eax+0x6b726e8]
  40eced:	mov    al,0x56
  40ecef:	inc    DWORD PTR [eax-0x37]
  40ecf2:	cmp    DWORD PTR [edi+0x46],ecx
  40ecf5:	inc    ebp
  40ecf6:	repz ret 0x3336
  40ecfa:	sbb    ebx,DWORD PTR [ebx]
  40ecfc:	jmp    0x119f:0x2788a46a
  40ed03:	mov    edi,0xc118cc04
  40ed08:	outs   dx,BYTE PTR ds:[esi]
  40ed09:	push   edx
  40ed0a:	push   0x14
  40ed0c:	les    edx,FWORD PTR [ebp-0x31]
  40ed0f:	and    al,0x64
  40ed11:	adc    DWORD PTR [esi],ecx
  40ed13:	inc    esi
  40ed14:	pop    esp
  40ed15:	adc    dh,BYTE PTR [ecx]
  40ed17:	adc    dl,BYTE PTR [ebp+0x6f1f75a7]
  40ed1d:	pop    es
  40ed1e:	sub    bl,al
  40ed20:	xor    al,dh
  40ed22:	sub    eax,0xb333b64
  40ed27:	cs dec eax
  40ed29:	imul   esp,DWORD PTR [ebx-0x420cf8b2],0xffffffcc
  40ed30:	not    BYTE PTR [ecx+0x4386d619]
  40ed36:	push   cs
  40ed37:	pop    ebx
  40ed38:	imul   esi,DWORD PTR [ecx],0x5b
  40ed3b:	dec    edi
  40ed3d:	fdivr  QWORD PTR [esi+0x5e]
  40ed40:	sbb    eax,0x55098c39
  40ed45:	ror    DWORD PTR [edx+0x7869cc94],cl
  40ed4b:	sahf   
  40ed4c:	or     bh,BYTE PTR [edx-0x6fc7c88b]
  40ed52:	mov    edx,0xe41bc594
  40ed57:	mov    edi,0x89ed0a81
  40ed5c:	and    BYTE PTR [edx],bl
  40ed5e:	(bad)  
  40ed5f:	and    al,0x1c
  40ed61:	dec    edx
  40ed62:	or     al,BYTE PTR [edi]
  40ed64:	push   ds
  40ed65:	dec    ebp
  40ed66:	lods   al,BYTE PTR ds:[esi]
  40ed67:	or     eax,0x47e7f4b1
  40ed6c:	jle    0x40ed8d
  40ed6e:	and    al,0xf0
  40ed70:	repz inc esp
  40ed72:	sub    BYTE PTR ds:0xcc8f3316,cl
  40ed78:	(bad)  
  40ed7a:	push   ds
  40ed7b:	aam    0x7
  40ed7d:	div    DWORD PTR ds:0xf119b2cb
  40ed83:	cli    
  40ed84:	add    BYTE PTR [esi],ch
  40ed86:	cwde   
  40ed87:	mov    BYTE PTR [eax],bl
  40ed89:	inc    ebp
  40ed8a:	daa    
  40ed8b:	xchg   ecx,eax
  40ed8c:	push   ds
  40ed8d:	ret    
  40ed8e:	jecxz  0x40ed4d
  40ed90:	jb     0x40edb0
  40ed92:	enter  0x68dd,0xfa
  40ed96:	sub    al,BYTE PTR [esi+0x77]
  40ed99:	shr    DWORD PTR [eax+ebp*2-0x5e],0x47
  40ed9e:	pop    eax
  40ed9f:	into   
  40eda0:	cmp    al,0x75
  40eda2:	or     al,0xdb
  40eda4:	jp     0x40ee12
  40eda6:	shr    bl,0x4
  40eda9:	call   0x2f44:0x364b5527
  40edb0:	pop    ebp
  40edb1:	push   esp
  40edb2:	jb     0x40ed88
  40edb4:	sbb    eax,0xe5270428
  40edb9:	cmp    esi,DWORD PTR ds:0x999b9a29
  40edbf:	pop    ebx
  40edc0:	push   esp
  40edc1:	push   ebx
  40edc2:	xchg   esp,eax
  40edc3:	sbb    cl,bh
  40edc5:	(bad)  
  40edc6:	pop    eax
  40edc7:	lahf   
  40edc8:	add    ah,bh
  40edca:	push   edi
  40edcb:	pop    es
  40edcc:	add    edi,DWORD PTR es:[ecx-0x36bc9f3d]
  40edd3:	mov    ebx,0x6da6ef4c
  40edd8:	rol    esp,cl
  40edda:	cli    
  40eddb:	mov    al,ds:0xa9656fa9
  40ede0:	or     esi,DWORD PTR [eax-0x79f5c704]
  40ede6:	xlat   BYTE PTR ds:[ebx]
  40ede7:	mov    ds:0x5f29dc35,al
  40edec:	ror    edx,0xfd
  40edef:	(bad)  
  40edf0:	jae    0x40ede5
  40edf2:	aam    0x64
  40edf4:	cmp    BYTE PTR [edi+0x21f367bd],bl
  40edfa:	cwde   
  40edfb:	dec    ebp
  40edfc:	arpl   dx,di
  40edfe:	ss ds xchg bl,dl
  40ee02:	and    edx,ebx
  40ee04:	xchg   edi,ebx
  40ee06:	xor    al,0x8
  40ee08:	int3   
  40ee09:	adc    BYTE PTR [edi+0x3a],bl
  40ee0c:	in     eax,0xc0
  40ee0e:	pusha  
  40ee0f:	push   ds
  40ee10:	cmc    
  40ee11:	and    BYTE PTR [eax+ebx*4+0x3b],cl
  40ee15:	pop    esi
  40ee16:	or     DWORD PTR [edi+0x38],ebp
  40ee19:	xor    al,0x30
  40ee1b:	mov    al,0x99
  40ee1d:	sub    al,0xd
  40ee1f:	mov    es,esp
  40ee21:	sub    DWORD PTR [ecx],edi
  40ee23:	stc    
  40ee24:	cld    
  40ee25:	popa   
  40ee26:	ins    DWORD PTR es:[edi],dx
  40ee27:	push   ecx
  40ee28:	test   BYTE PTR [edi+0x27],bh
  40ee2b:	retf   0x5375
  40ee2e:	daa    
  40ee2f:	dec    eax
  40ee30:	push   0x7a
  40ee32:	or     BYTE PTR [eax],ah
  40ee34:	(bad)  
  40ee35:	lahf   
  40ee36:	push   0xf7455703
  40ee3b:	retf   0x652f
  40ee3e:	mov    esp,0xd3994c3a
  40ee43:	sub    BYTE PTR [esi],ah
  40ee45:	jno    0x40ee55
  40ee47:	push   ss
  40ee48:	jmp    0x27716a39
  40ee4d:	into   
  40ee4e:	and    DWORD PTR [ecx+eiz*1],eax
  40ee51:	jae    0x40edd8
  40ee53:	and    eax,0x624d12ad
  40ee58:	idiv   BYTE PTR [edx+0x41]
  40ee5b:	ins    BYTE PTR es:[edi],dx
  40ee5c:	dec    ebx
  40ee5d:	jg     0x40eea0
  40ee5f:	fisubr WORD PTR [esi-0x4835d169]
  40ee65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee66:	ret    
  40ee67:	or     BYTE PTR [esi],dh
  40ee69:	ret    0x2cd5
  40ee6c:	add    ah,BYTE PTR [ebp-0x19413497]
  40ee72:	mov    edi,DWORD PTR [eax+0x10]
  40ee75:	push   cs
  40ee76:	sub    DWORD PTR [eax],ebp
  40ee78:	fisub  WORD PTR fs:[eax-0x68e5d65d]
  40ee7f:	add    edi,DWORD PTR [eax+ebp*1]
  40ee82:	fdivr  QWORD PTR [esp+esi*2]
  40ee85:	ret    0x55fa
  40ee88:	(bad)  
  40ee89:	pop    eax
  40ee8a:	xor    eax,0x871f4330
  40ee8f:	rol    DWORD PTR [ebx],0xbe
  40ee92:	in     al,dx
  40ee93:	xor    bh,BYTE PTR [edx+ecx*2]
  40ee96:	imul   ecx,DWORD PTR [ebp-0x3a2790ad],0xffffffc1
  40ee9d:	or     eax,0x53e6f0d1
  40eea2:	add    bl,BYTE PTR [eax-0x34]
  40eea5:	push   esp
  40eea6:	cs aad 0x9b
  40eea9:	and    bh,0x9c
  40eeac:	dec    esi
  40eead:	push   eax
  40eeae:	ins    BYTE PTR es:[edi],dx
  40eeaf:	dec    esi
  40eeb0:	imul   eax,DWORD PTR [eax],0x45
  40eeb3:	inc    eax
  40eeb4:	cwde   
  40eeb5:	bound  esp,QWORD PTR [edi+0x15]
  40eeb8:	fisttp DWORD PTR ds:0xfcffc941
  40eebe:	xchg   ecx,eax
  40eebf:	dec    edx
  40eec0:	out    0xd4,eax
  40eec2:	cmp    DWORD PTR [ecx-0x1e22a76c],edi
  40eec8:	sti    
  40eec9:	sbb    al,0x6c
  40eecb:	lods   al,BYTE PTR ds:[esi]
  40eecc:	jle    0x40ef39
  40eece:	dec    esi
  40eecf:	hlt    
  40eed0:	sbb    ebp,DWORD PTR [ebx]
  40eed2:	lahf   
  40eed3:	mov    eax,0xf549a3df
  40eed8:	lock loopne 0x40ee5b
  40eedb:	add    ebp,DWORD PTR [esi+0x4e]
  40eede:	jae    0x40eebd
  40eee0:	nop
  40eee1:	jmp    0xf0206dd5
  40eee6:	dec    esi
  40eee7:	jbe    0x40eed8
  40eee9:	paddw  mm2,QWORD PTR [eax]
  40eeec:	adc    al,0x8c
  40eeee:	sub    DWORD PTR [esi-0x74cdbc56],esi
  40eef4:	xchg   esi,eax
  40eef5:	adc    esp,DWORD PTR [edi+0x56]
  40eef8:	sti    
  40eef9:	lock ds jecxz 0x40ee9b
  40eefd:	push   edx
  40eefe:	jmp    DWORD PTR [esi+0x6d]
  40ef01:	ins    BYTE PTR es:[edi],dx
  40ef02:	push   edi
  40ef03:	aad    0x8a
  40ef05:	(bad)  
  40ef06:	sub    edi,DWORD PTR [eax-0x1c]
  40ef09:	xchg   ebp,eax
  40ef0a:	aam    0x82
  40ef0c:	xor    eax,0x47b7bcb1
  40ef11:	shl    DWORD PTR gs:[eax],cl
  40ef14:	pop    es
  40ef15:	pop    ebx
  40ef16:	and    BYTE PTR [edi+0x21d911c],cl
  40ef1c:	imul   BYTE PTR [ebx+esi*1]
  40ef1f:	dec    DWORD PTR [edx+0x6b]
  40ef22:	jp     0xf71567b7
  40ef28:	ins    BYTE PTR es:[edi],dx
  40ef29:	shl    DWORD PTR ds:0xe92b7c5f,cl
  40ef2f:	les    esi,FWORD PTR [edi]
  40ef31:	sub    al,0x81
  40ef33:	mov    bh,0x9c
  40ef35:	int    0x15
  40ef37:	fisubr DWORD PTR [eax+0xc]
  40ef3a:	in     eax,dx
  40ef3b:	out    dx,eax
  40ef3c:	push   ecx
  40ef3d:	lds    edx,FWORD PTR [eax]
  40ef3f:	add    BYTE PTR [ecx-0x10d291b7],0x6e
  40ef46:	jae    0x40ef96
  40ef48:	call   0x8c360838
  40ef4d:	mov    esp,0xf13d4efc
  40ef52:	or     BYTE PTR [edx],bh
  40ef54:	lea    ebx,[esi+0x61f49786]
  40ef5a:	xchg   esi,eax
  40ef5b:	jb     0x40ef1a
  40ef5d:	and    DWORD PTR [eax],edi
  40ef5f:	jg     0x40ef08
  40ef61:	or     bl,dl
  40ef63:	nop
  40ef64:	add    eax,ebp
  40ef66:	lods   eax,DWORD PTR ds:[esi]
  40ef67:	in     al,dx
  40ef68:	call   0x3268:0xeba6039b
  40ef6f:	test   al,0x5d
  40ef71:	stc    
  40ef72:	fsub   DWORD PTR [edi-0x38]
  40ef75:	adc    al,0x7d
  40ef77:	sub    ecx,DWORD PTR [edx]
  40ef79:	fsub   QWORD PTR ds:0x8a63e75
  40ef7f:	xor    ebx,DWORD PTR [eax*4-0x1133be4e]
  40ef86:	clc    
  40ef87:	sub    cl,cl
  40ef89:	xchg   ch,cl
  40ef8b:	into   
  40ef8c:	shl    BYTE PTR [ebp-0x66dce915],0x9f
  40ef93:	int    0xbe
  40ef95:	cld    
  40ef96:	xor    bl,0xea
  40ef99:	es pop ecx
  40ef9b:	sbb    eax,0x4976ad9
  40efa0:	sbb    eax,0x6e838897
  40efa5:	push   0x42
  40efa7:	pop    edi
  40efa8:	pop    esp
  40efa9:	and    eax,0x724aac3b
  40efae:	xchg   edi,eax
  40efaf:	jl     0x40ef7c
  40efb1:	jmp    0x40ef42
  40efb3:	adc    cl,bl
  40efb5:	fcom   DWORD PTR [ecx+ecx*1-0x16571252]
  40efbc:	or     ecx,DWORD PTR [edx+0x33d62989]
  40efc2:	in     eax,dx
  40efc3:	aad    0xd9
  40efc5:	xchg   edx,eax
  40efc6:	jo     0x40f03c
  40efc8:	xchg   DWORD PTR [eax+ebx*4],edx
  40efcb:	cmp    eax,0xb726384e
  40efd0:	ss dec ecx
  40efd2:	mov    esi,0xb5776c26
  40efd7:	outs   dx,BYTE PTR ds:[esi]
  40efd8:	jnp    0x40efee
  40efda:	push   esp
  40efdb:	pop    esp
  40efdc:	sbb    al,0x62
  40efde:	test   eax,0xa5d1d563
  40efe3:	add    DWORD PTR [esi-0x4b],esp
  40efe6:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efe8:	jo     0x40f02c
  40efea:	cwde   
  40efeb:	adc    ah,ah
  40efed:	sbb    eax,0x14b44521
  40eff2:	pop    ecx
  40eff3:	jo     0x40efb1
  40eff5:	jecxz  0x40f059
  40eff7:	aas    
  40eff8:	(bad)  
  40eff9:	xchg   edx,eax
  40effa:	fwait
  40effb:	(bad)  
  40effc:	not    esi
  40effe:	or     BYTE PTR [edi],ah
  40f000:	sbb    BYTE PTR [eax-0x947cab],dh
  40f006:	add    al,0x91
  40f008:	push   ds
  40f009:	out    0x70,eax
  40f00b:	jbe    0x40f016
  40f00d:	(bad)  
  40f00e:	fsubrp st(0),st
  40f010:	test   DWORD PTR [eax],ebx
  40f012:	jmp    0xd364:0xc7c4207c
  40f019:	push   es
  40f01a:	mov    WORD PTR [ebx-0x44],fs
  40f01d:	cmp    BYTE PTR [eax+0x5b],bh
  40f020:	or     ebx,ebp
  40f022:	mov    ebx,esi
  40f024:	mov    esp,DWORD PTR [edx-0x20793087]
  40f02a:	xor    BYTE PTR [ebp*8+0x14e4daa],0x5b
  40f032:	dec    esi
  40f033:	push   ss
  40f034:	mov    BYTE PTR [eax-0x57],ah
  40f037:	and    eax,0x32bd65f0
  40f03c:	cmc    
  40f03d:	adc    al,0xcb
  40f03f:	dec    esi
  40f040:	pop    eax
  40f041:	inc    ebp
  40f042:	jb     0x40f007
  40f044:	test   eax,0xcba508f5
  40f049:	repnz sahf 
  40f04b:	dec    edi
  40f04c:	stos   DWORD PTR es:[edi],eax
  40f04d:	push   edx
  40f04e:	push   ss
  40f04f:	test   al,bl
  40f051:	jae    0x40f08a
  40f053:	push   edi
  40f054:	mov    dh,BYTE PTR [eax+0x46]
  40f057:	or     al,ah
  40f059:	dec    ebx
  40f05a:	retf   0xb0ec
  40f05d:	(bad)  
  40f05e:	sbb    DWORD PTR [ecx+0x3cc6d6],ebx
  40f064:	cmc    
  40f065:	jno    0x40f038
  40f067:	jge    0x40f0db
  40f069:	fist   DWORD PTR [esi-0x5842882]
  40f06f:	cmc    
  40f070:	add    DWORD PTR [edx+0x6faba77c],ebx
  40f076:	test   al,0xf3
  40f078:	pop    ebx
  40f079:	lods   al,BYTE PTR ds:[esi]
  40f07a:	je     0x40f0f8
  40f07c:	jbe    0x40f026
  40f07e:	cdq    
  40f07f:	dec    ebp
  40f080:	stos   DWORD PTR es:[edi],eax
  40f081:	xchg   ecx,eax
  40f082:	cs dec eax
  40f084:	sahf   
  40f085:	dec    BYTE PTR [edx+edi*4-0x21]
  40f089:	sbb    eax,0x28735178
  40f08e:	mov    edi,0xb43d267c
  40f093:	fisttp WORD PTR [esi]
  40f095:	aam    0xe5
  40f097:	push   ss
  40f098:	xor    dl,ch
  40f09a:	data16 sub BYTE PTR [ecx],dh
  40f09d:	mov    ds:0xf5a1b98b,al
  40f0a2:	ret    
  40f0a3:	xor    al,0x4b
  40f0a5:	mov    ebp,0xe2630000
  40f0aa:	sub    edi,esp
  40f0ac:	fist   WORD PTR [ecx-0x25]
  40f0af:	fist   WORD PTR [ebx]
  40f0b1:	mov    ds:0x998a323b,al
  40f0b6:	mov    ds:0x971facdf,al
  40f0bb:	jb     0x40f069
  40f0bd:	mov    al,0xc3
  40f0bf:	les    eax,FWORD PTR [ebp+0x121786bb]
  40f0c5:	jbe    0x40f0af
  40f0c7:	mov    al,ds:0x12bf0325
  40f0cc:	push   ebp
  40f0cd:	cmp    ebx,edi
  40f0cf:	test   ebp,edx
  40f0d1:	addr16 ja 0x40f148
  40f0d4:	mov    dl,0x4b
  40f0d6:	xor    dh,BYTE PTR fs:[esi-0x1120f50c]
  40f0dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0de:	and    eax,0x2b703d84
  40f0e3:	xchg   edi,eax
  40f0e4:	pushf  
  40f0e5:	fs xor esi,0xabe601a0
  40f0ec:	dec    eax
  40f0ed:	jns    0x40f07e
  40f0ef:	lods   eax,DWORD PTR ds:[esi]
  40f0f0:	push   0xc75e00ea
  40f0f5:	aad    0x35
  40f0f7:	adc    al,0x51
  40f0f9:	imul   ecx,DWORD PTR [edi],0xffffffc9
  40f0fc:	xor    DWORD PTR [esi-0x49e4f07f],edi
  40f102:	sub    eax,0xe8f4e9f6
  40f107:	icebp  
  40f108:	loope  0x40f12d
  40f10a:	das    
  40f10b:	cmp    al,0x46
  40f10d:	out    dx,al
  40f10e:	xchg   BYTE PTR ds:0x5216a970,cl
  40f114:	sar    BYTE PTR [edi-0x7e5320c8],0x3e
  40f11b:	ins    DWORD PTR es:[edi],dx
  40f11c:	out    0x5c,eax
  40f11e:	ins    BYTE PTR es:[edi],dx
  40f11f:	cmp    DWORD PTR [eax-0x15],ebp
  40f122:	popa   
  40f123:	inc    ecx
  40f124:	and    DWORD PTR [ebx+0x50],esi
  40f127:	sub    al,0xf6
  40f129:	inc    ebp
  40f12a:	xlat   BYTE PTR ds:[ebx]
  40f12b:	mov    ch,0xb8
  40f12d:	mov    ss:0xbe8d6ded,eax
  40f133:	cwde   
  40f134:	pop    esi
  40f135:	jecxz  0x40f0c6
  40f137:	add    eax,0x1e0173bb
  40f13c:	cmp    eax,ebp
  40f13e:	jecxz  0x40f14f
  40f140:	leave  
  40f141:	dec    esi
  40f142:	daa    
  40f143:	jbe    0x40f1af
  40f145:	push   0xc2c4b92e
  40f14a:	mov    dh,0x48
  40f14c:	ficomp DWORD PTR [edx-0x27]
  40f14f:	call   0x8340b73d
  40f154:	retf   
  40f155:	mov    edi,0x75fa6b4c
  40f15a:	sbb    ecx,0x61
  40f15d:	out    dx,al
  40f15e:	es sbb dh,cl
  40f161:	push   edx
  40f162:	jmp    0x40f106
  40f164:	loop   0x40f18f
  40f166:	mov    esp,0xb49725fc
  40f16b:	(bad)  
  40f16c:	test   BYTE PTR [ebx],cl
  40f16e:	fnsave [eax+eax*4+0x2]
  40f172:	xchg   ebx,eax
  40f173:	dec    esp
  40f174:	les    edx,FWORD PTR [edx]
  40f176:	adc    eax,0x4ecc38cb
  40f17b:	out    dx,al
  40f17c:	push   eax
  40f17d:	or     DWORD PTR [edx-0x7167a030],esp
  40f183:	fld    QWORD PTR [ebx]
  40f185:	or     DWORD PTR [edx],0x84fcf2bf
  40f18b:	sbb    DWORD PTR [ecx+0x41fcba9a],ecx
  40f191:	or     ebp,DWORD PTR [eax]
  40f193:	pop    edx
  40f194:	push   ds
  40f195:	(bad)  
  40f196:	mov    ebx,0x6e428b74
  40f19b:	jns    0x40f1a6
  40f19d:	sub    ch,bl
  40f19f:	sti    
  40f1a0:	rcl    DWORD PTR [ecx],0x99
  40f1a3:	arpl   dx,di
  40f1a5:	test   DWORD PTR [esi+0x59328034],esp
  40f1ab:	cmp    DWORD PTR [esi-0x3e],ebp
  40f1ae:	xchg   edx,eax
  40f1af:	inc    edx
  40f1b0:	int    0xe0
  40f1b2:	xchg   edx,eax
  40f1b3:	sti    
  40f1b4:	les    ecx,FWORD PTR [ebp+0x6afb986d]
  40f1ba:	adc    al,0x11
  40f1bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1bd:	lahf   
  40f1be:	or     BYTE PTR [eax-0xc],bh
  40f1c1:	dec    eax
  40f1c2:	cdq    
  40f1c3:	mov    esi,0x9b4e3a16
  40f1c8:	ffreep st(1)
  40f1ca:	pop    edi
  40f1cb:	push   cs
  40f1cc:	dec    ebp
  40f1cd:	pusha  
  40f1ce:	cdq    
  40f1cf:	push   ss
  40f1d0:	push   esp
  40f1d1:	dec    eax
  40f1d2:	xor    ecx,edx
  40f1d4:	xor    BYTE PTR [esi-0x5e],al
  40f1d7:	pop    ds
  40f1d8:	push   esp
  40f1d9:	push   ebp
  40f1da:	popa   
  40f1db:	push   0x550fb0da
  40f1e0:	lahf   
  40f1e1:	fcomp  DWORD PTR [ebx]
  40f1e3:	nop
  40f1e4:	outs   dx,BYTE PTR ds:[esi]
  40f1e5:	outs   dx,DWORD PTR ds:[esi]
  40f1e6:	enter  0xf4,0x4e
  40f1ea:	(bad)  
  40f1eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1ec:	and    al,0x33
  40f1ee:	(bad)  
  40f1ef:	fdiv   st,st(1)
  40f1f1:	inc    edi
  40f1f2:	psadbw mm3,QWORD PTR [edx-0x3c]
  40f1f6:	push   0x41689df8
  40f1fb:	inc    edx
  40f1fc:	pop    es
  40f1fd:	rdtsc  
  40f1ff:	mov    cl,0x50
  40f201:	stos   BYTE PTR es:[edi],al
  40f202:	inc    esi
  40f203:	call   0x6d20449e
  40f208:	in     eax,0xb3
  40f20a:	pop    esi
  40f20b:	push   ds
  40f20c:	xchg   edx,eax
  40f20d:	div    BYTE PTR [ebx]
  40f20f:	into   
  40f210:	fcmovne st,st(5)
  40f212:	xor    DWORD PTR [esi-0x42c55144],esi
  40f218:	xor    DWORD PTR [ebp+0x48],edi
  40f21b:	push   esi
  40f21c:	data16 jle 0x40f286
  40f21f:	aad    0x3e
  40f221:	(bad)  
  40f222:	dec    edx
  40f223:	and    eax,DWORD PTR [esi]
  40f225:	pop    ebx
  40f226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f227:	icebp  
  40f228:	mov    ch,0x31
  40f22a:	test   DWORD PTR [edx-0x78],ebx
  40f22d:	fist   DWORD PTR [esi+0x11]
  40f230:	pushf  
  40f231:	fcmove st,st(7)
  40f233:	stos   BYTE PTR es:[edi],al
  40f234:	fucomip st,st(4)
  40f236:	popf   
  40f237:	pop    ss
  40f238:	sub    eax,0x3c1c7e1c
  40f23d:	push   es
  40f23e:	dec    edx
  40f23f:	xor    DWORD PTR [esi-0x2d75d4a7],edx
  40f245:	ins    DWORD PTR es:[edi],dx
  40f246:	and    al,0xaa
  40f248:	jns    0x40f1cb
  40f24a:	pop    ebx
  40f24b:	jnp    0x40f274
  40f24d:	inc    ecx
  40f24e:	sbb    BYTE PTR [edi],0x7d
  40f251:	dec    ebx
  40f252:	dec    ebx
  40f253:	(bad)  [edx+0x65c65c80]
  40f259:	add    eax,0x5f916679
  40f25e:	call   0x2359:0x66a4928e
  40f265:	pop    ecx
  40f266:	mov    al,0xf1
  40f268:	xchg   esp,eax
  40f269:	inc    edx
  40f26a:	mov    al,0xb6
  40f26c:	stos   DWORD PTR es:[edi],eax
  40f26d:	dec    esp
  40f26e:	push   edi
  40f26f:	pop    esp
  40f270:	xor    BYTE PTR [ecx+ebx*1],ch
  40f273:	xchg   ebp,eax
  40f274:	scas   eax,DWORD PTR es:[edi]
  40f275:	dec    edi
  40f276:	push   ds
  40f277:	and    bh,BYTE PTR [edi-0x4]
  40f27a:	mov    esp,0x30dd7fbb
  40f27f:	stos   DWORD PTR es:[edi],eax
  40f280:	mov    al,bl
  40f282:	mov    eax,0x6ab825c2
  40f287:	push   cs
  40f288:	adc    al,0x3c
  40f28a:	das    
  40f28b:	aam    0x30
  40f28d:	(bad)  
  40f28e:	jg     0x40f2e8
  40f290:	enter  0xaf77,0x56
  40f294:	adc    BYTE PTR [ecx],cl
  40f296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f297:	xchg   edi,eax
  40f298:	leave  
  40f299:	mov    bl,0xdd
  40f29b:	(bad)  
  40f29c:	fcos   
  40f29e:	lods   al,BYTE PTR ds:[esi]
  40f29f:	sti    
  40f2a0:	ins    BYTE PTR es:[edi],dx
  40f2a1:	mov    eax,ds:0xb1ca7878
  40f2a6:	fmul   st(1),st
  40f2a8:	dec    ecx
  40f2a9:	xor    ebp,ebx
  40f2ab:	xchg   ebp,eax
  40f2ac:	cdq    
  40f2ad:	inc    edx
  40f2ae:	not    ecx
  40f2b0:	push   eax
  40f2b1:	test   DWORD PTR [esi],eax
  40f2b3:	adc    BYTE PTR [ebp-0x4ab32aac],ch
  40f2b9:	enter  0x495e,0xc4
  40f2bd:	cmc    
  40f2be:	test   BYTE PTR ds:0x68c85759,ch
  40f2c4:	sub    eax,0xf9d92873
  40f2c9:	add    eax,0xfbcccdf1
  40f2ce:	loope  0x40f28a
  40f2d0:	enter  0xf644,0x75
  40f2d4:	stos   DWORD PTR es:[edi],eax
  40f2d5:	push   ebp
  40f2d6:	dec    edi
  40f2d7:	pop    edx
  40f2d8:	clc    
  40f2d9:	cmp    DWORD PTR ds:[eax-0x261b65de],0x46d54898
  40f2e4:	and    edi,DWORD PTR [eax-0x65ecfdad]
  40f2ea:	inc    ebp
  40f2eb:	pop    es
  40f2ec:	adc    ebp,ecx
  40f2ee:	xor    DWORD PTR [ecx],0x27
  40f2f1:	jmp    0xbea369f4
  40f2f6:	clc    
  40f2f7:	mov    dl,al
  40f2f9:	jb     0x40f299
  40f2fb:	mov    bl,0xcd
  40f2fd:	add    BYTE PTR [edi-0x30f8becd],bh
  40f303:	add    eax,0xd55c3431
  40f308:	xchg   esi,eax
  40f309:	hlt    
  40f30a:	daa    
  40f30b:	adc    eax,eax
  40f30d:	xchg   edx,eax
  40f30e:	ja     0x40f2fd
  40f310:	pop    esi
  40f311:	in     al,0x60
  40f313:	ret    0x202d
  40f316:	ret    0x1e8d
  40f319:	es loope 0x40f366
  40f31c:	call   DWORD PTR [edi-0x20a546f8]
  40f322:	push   esi
  40f323:	out    0x84,al
  40f325:	mov    dl,0xef
  40f327:	stos   BYTE PTR es:[edi],al
  40f328:	jmp    0x40f2f7
  40f32a:	ret    0x8685
  40f32d:	add    esp,DWORD PTR [ebx+0x7925d153]
  40f333:	sbb    eax,0x3b492091
  40f338:	fwait
  40f339:	fs jns 0x40f368
  40f33c:	lahf   
  40f33d:	stos   BYTE PTR es:[edi],al
  40f33e:	xchg   ebp,eax
  40f33f:	lea    ecx,[ecx-0x40fa7dfc]
  40f345:	icebp  
  40f346:	imul   esp,DWORD PTR [edi],0xa0ff7dec
  40f34c:	repz xchg edx,eax
  40f34e:	pop    esi
  40f34f:	pop    esi
  40f350:	rcr    bh,0xd7
  40f353:	mov    dl,0xf4
  40f355:	jl     0x40f361
  40f357:	xchg   ecx,eax
  40f358:	ror    DWORD PTR [ecx-0x6ca558fb],0xd2
  40f35f:	repz mov ch,0x3c
  40f362:	push   esp
  40f363:	test   BYTE PTR [edi+ebp*8-0x3940858e],al
  40f36a:	adc    al,0x3e
  40f36c:	cmp    ebp,DWORD PTR [ebp+0x6e65b7ad]
  40f372:	xchg   ebp,eax
  40f373:	addr16 mov ds:0xb91a,al
  40f377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f378:	addr16 (bad) 
  40f37a:	arpl   WORD PTR [eax+0x1c9745c0],bp
  40f380:	sbb    eax,0x376bb463
  40f385:	dec    edx
  40f386:	pop    ss
  40f387:	ja     0x40f32c
  40f389:	outs   dx,DWORD PTR ds:[esi]
  40f38a:	jmp    0x40f368
  40f38c:	jae    0x40f3dd
  40f38e:	jmp    0xfa76:0x46a2a3a9
  40f395:	pushf  
  40f396:	add    DWORD PTR [eax],esp
  40f398:	pop    ebx
  40f399:	into   
  40f39a:	fidivr DWORD PTR [eax+eiz*2+0x4a]
  40f39e:	test   al,0x1
  40f3a0:	xor    al,0x44
  40f3a2:	mov    esp,DWORD PTR [esi+0x4e15634d]
  40f3a8:	test   eax,eax
  40f3aa:	lods   ax,WORD PTR ds:[esi]
  40f3ac:	(bad)  
  40f3ad:	nop
  40f3ae:	cld    
  40f3af:	lahf   
  40f3b0:	push   edi
  40f3b1:	in     eax,dx
  40f3b2:	add    eax,0x76871ab9
  40f3b7:	sub    al,0x1f
  40f3b9:	and    eax,0xd553795b
  40f3be:	xchg   ebx,eax
  40f3bf:	sub    DWORD PTR [edi-0x1188bbe],edx
  40f3c5:	push   esp
  40f3c6:	mov    edx,0x99cacde
  40f3cb:	inc    ebx
  40f3cc:	repnz pushf 
  40f3ce:	push   0x36
  40f3d0:	cmp    BYTE PTR ds:0x4096dc55,ah
  40f3d6:	fbstp  TBYTE PTR [edx+0x7687c15d]
  40f3dc:	xchg   ecx,eax
  40f3dd:	push   cs
  40f3de:	into   
  40f3df:	mov    esp,0x8f601bcc
  40f3e4:	xor    al,BYTE PTR ds:0xb76bac65
  40f3ea:	ret    
  40f3eb:	pop    ebp
  40f3ec:	mov    cl,0x16
  40f3ee:	mov    edx,0x36f645e7
  40f3f3:	add    al,0x20
  40f3f5:	inc    esi
  40f3f6:	jmp    0xca6103d0
  40f3fb:	sahf   
  40f3fc:	and    eax,DWORD PTR fs:[edx-0x26e1f99]
  40f403:	test   DWORD PTR [edi+0xb],0xdaa3d05b
  40f40a:	mov    ds:0xbcb47020,eax
  40f40f:	add    BYTE PTR ds:0x5fc72f3c,0x29
  40f416:	inc    ebp
  40f417:	push   ecx
  40f418:	jmp    0x5cc1:0xd84613e9
  40f41f:	je     0x40f48e
  40f421:	xchg   ebp,eax
  40f422:	fcmovb st,st(4)
  40f424:	out    0x40,al
  40f426:	(bad)  
  40f427:	ror    BYTE PTR cs:[eax-0x33],1
  40f42b:	add    bh,BYTE PTR [eax+0x3a]
  40f42e:	cmp    edx,DWORD PTR [ecx+eiz*2]
  40f431:	js     0x40f3c9
  40f433:	or     DWORD PTR [edx],esi
  40f435:	dec    ebp
  40f436:	jge    0x40f42b
  40f438:	data16 int 0x26
  40f43b:	push   ebp
  40f43c:	jecxz  0x40f4b7
  40f43e:	pop    edx
  40f43f:	sbb    BYTE PTR [eax-0x23],al
  40f442:	test   al,0xe0
  40f444:	pushf  
  40f445:	stc    
  40f446:	mov    esi,0xc0aa3106
  40f44b:	mov    DWORD PTR [ecx+eax*1],esi
  40f44e:	outs   dx,BYTE PTR ds:[esi]
  40f44f:	daa    
  40f450:	mov    DWORD PTR [esi+0xb580a37],ebp
  40f456:	inc    cl
  40f458:	(bad)  
  40f459:	or     bh,al
  40f45b:	fiadd  DWORD PTR [ebx+eiz*4]
  40f45e:	ja     0x40f4b6
  40f460:	adc    eax,0x62571ae8
  40f465:	bound  esi,QWORD PTR [eax-0x65]
  40f468:	and    DWORD PTR [ecx+0x2f94d0ee],0x6dd29e8e
  40f472:	dec    esp
  40f473:	dec    ecx
  40f474:	cmp    dh,BYTE PTR [ecx+0x5142cd8f]
  40f47a:	mov    edi,0xfbe324ac
  40f47f:	or     BYTE PTR [ebx+0x52f26232],0x45
  40f486:	dec    edx
  40f487:	mov    al,ds:0x853988d
  40f48c:	test   eax,0x8556d90c
  40f491:	inc    eax
  40f492:	jmp    0xe03aa169
  40f497:	sub    eax,0x7e6e307a
  40f49c:	fistp  QWORD PTR [edx-0x6b27aaaf]
  40f4a2:	mul    DWORD PTR [edi-0x30]
  40f4a5:	mov    ah,0xbc
  40f4a7:	add    bl,BYTE PTR [ebx+0x205dad9b]
  40f4ad:	ret    0x8858
  40f4b0:	pop    edx
  40f4b1:	enter  0xe8c5,0x27
  40f4b5:	sar    BYTE PTR [edx-0x4d],cl
  40f4b8:	jp     0x40f441
  40f4ba:	xor    dh,0x27
  40f4bd:	sar    esp,cl
  40f4bf:	lea    esp,[esi+0x29e00af0]
  40f4c5:	shr    BYTE PTR [esi],1
  40f4c7:	mov    bl,0x97
  40f4c9:	inc    eax
  40f4ca:	loop   0x40f4f7
  40f4cc:	iret   
  40f4cd:	call   0x9009cc99
  40f4d2:	dec    esi
  40f4d3:	mov    ah,0xbe
  40f4d5:	in     eax,0xcb
  40f4d7:	xchg   edx,eax
  40f4d8:	imul   eax,ebp,0x38
  40f4db:	dec    edi
  40f4dc:	fild   WORD PTR [ebx]
  40f4de:	std    
  40f4df:	lds    ebx,FWORD PTR [ebx+0x7670f045]
  40f4e5:	jns    0x40f555
  40f4e7:	xchg   ebp,eax
  40f4e8:	inc    esp
  40f4e9:	imul   eax,DWORD PTR [edx-0x64f41b38],0xffffffed
  40f4f0:	jmp    0x2e1aa9c4
  40f4f5:	imul   edx,DWORD PTR [edx],0x3c
  40f4f8:	jbe    0x40f53b
  40f4fa:	test   al,0x31
  40f4fc:	mov    eax,0x45d7d7d
  40f501:	mov    ds:0x17604390,eax
  40f506:	adc    cl,bl
  40f508:	or     eax,0xf4f6a8a9
  40f50d:	adc    dh,BYTE PTR [ebx]
  40f50f:	sub    DWORD PTR [ebp-0x5],esp
  40f512:	push   edx
  40f513:	sub    esp,0x3573312d
  40f519:	clc    
  40f51a:	rol    BYTE PTR [edi+0x53],cl
  40f51d:	(bad)  
  40f51e:	add    eax,0x1b9c2fb0
  40f523:	aas    
  40f524:	mov    esp,0xb4e87435
  40f529:	imul   ebx,DWORD PTR [ebx+0x37cd1c80],0x13e0a328
  40f533:	xlat   BYTE PTR ds:[ebx]
  40f534:	pusha  
  40f535:	nop
  40f536:	dec    ebx
  40f537:	push   cs
  40f538:	dec    ebp
  40f539:	jp     0x40f4f8
  40f53b:	std    
  40f53c:	in     al,0xd3
  40f53e:	fwait
  40f53f:	(bad)  
  40f540:	cmc    
  40f541:	aam    0x96
  40f543:	mov    al,ds:0x1bec2af4
  40f548:	jne    0x40f54f
  40f54a:	adc    al,0x24
  40f54c:	loope  0x40f4fb
  40f54e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f54f:	test   eax,0xd61887cd
  40f554:	ja     0x40f4e1
  40f556:	inc    ebx
  40f557:	pop    ds
  40f558:	dec    eax
  40f559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f55a:	test   eax,0xa0fd502c
  40f55f:	pop    esi
  40f560:	add    al,0x9d
  40f562:	rcr    ebx,cl
  40f564:	(bad)  
  40f565:	sbb    eax,0x611e2d8f
  40f56a:	cwde   
  40f56b:	jmp    0xa4b8:0x196d5bf9
  40f572:	clc    
  40f573:	fwait
  40f574:	sahf   
  40f575:	inc    ebx
  40f576:	ins    BYTE PTR es:[edi],dx
  40f577:	cmp    dl,dh
  40f579:	pop    ds
  40f57a:	test   BYTE PTR [eax],cl
  40f57c:	sbb    esp,DWORD PTR [eax-0x7df8c188]
  40f582:	call   0x8e4f:0xf89dadbf
  40f589:	bound  edx,QWORD PTR [esi]
  40f58b:	xor    DWORD PTR [edx],edi
  40f58d:	out    dx,al
  40f58e:	xor    DWORD PTR [eax-0x119cfa07],edx
  40f594:	sbb    al,0xde
  40f596:	sar    DWORD PTR [eax-0x21],1
  40f599:	xor    cl,BYTE PTR [edx+0x496b4571]
  40f59f:	es push ebp
  40f5a1:	ror    DWORD PTR [ecx+ebp*8-0x29],cl
  40f5a5:	jl     0x40f5d6
  40f5a7:	push   edi
  40f5a8:	push   ebx
  40f5a9:	jle    0x40f590
  40f5ab:	pop    edi
  40f5ac:	inc    ebx
  40f5ad:	mov    esi,0x9b3a7e12
  40f5b2:	lods   eax,DWORD PTR ds:[esi]
  40f5b3:	stc    
  40f5b4:	jl     0x40f5f7
  40f5b6:	(bad)  [eax]
  40f5b8:	test   DWORD PTR [ecx+edi*4-0x67],esi
  40f5bc:	jl     0x40f544
  40f5be:	dec    ebp
  40f5bf:	and    esi,0x1560c8c1
  40f5c5:	adc    DWORD PTR ds:0x38450d9,esi
  40f5cb:	add    cl,BYTE PTR [ecx-0x49]
  40f5ce:	sbb    dh,bl
  40f5d0:	jg     0x40f579
  40f5d2:	cmp    bl,bh
  40f5d4:	mov    eax,ds:0xd7073f16
  40f5d9:	push   esp
  40f5da:	jl     0x40f61b
  40f5dc:	jmp    0xadce:0xc0e5f565
  40f5e3:	pop    ebp
  40f5e4:	jle    0x40f624
  40f5e6:	dec    ebp
  40f5e7:	sbb    esi,ecx
  40f5e9:	jae    0x40f618
  40f5eb:	xchg   BYTE PTR [edi+esi*2-0x51f78e72],ah
  40f5f2:	ds dec eax
  40f5f4:	rol    ch,0x96
  40f5f7:	jmp    0xbf82961
  40f5fc:	adc    BYTE PTR [ebp+0x70506faf],ch
  40f602:	test   DWORD PTR [ecx],edi
  40f604:	cdq    
  40f605:	and    eax,0xb66dea31
  40f60a:	push   ss
  40f60b:	xchg   BYTE PTR [ecx+0x5a740bca],ch
  40f611:	cld    
  40f612:	sub    cl,BYTE PTR [ecx-0x6]
  40f615:	leave  
  40f616:	push   0x37ac6f67
  40f61b:	mov    ch,0x69
  40f61d:	xor    eax,0x1d8c9aa2
  40f622:	cli    
  40f623:	adc    ah,BYTE PTR [edi+0xa14eadf]
  40f629:	mov    edi,0x23ed9abc
  40f62e:	int3   
  40f62f:	or     BYTE PTR [eax+edx*2],dh
  40f632:	pop    ss
  40f633:	loope  0x40f64c
  40f635:	pop    edi
  40f636:	dec    eax
  40f637:	ret    0xc99a
  40f63a:	cwde   
  40f63b:	pop    edi
  40f63c:	cmp    DWORD PTR [esi+ecx*2],ebp
  40f63f:	adc    cl,BYTE PTR [ecx]
  40f641:	add    ecx,ebx
  40f643:	xchg   ecx,eax
  40f644:	inc    esp
  40f645:	pushf  
  40f646:	xor    eax,0xdb5995db
  40f64b:	xor    edx,DWORD PTR [esi]
  40f64d:	jp     0x40f631
  40f64f:	xor    BYTE PTR [ecx],bl
  40f651:	or     edx,DWORD PTR es:[eax+0x47]
  40f655:	cmp    bl,BYTE PTR [esi-0x280147d5]
  40f65b:	fnsave [ebx+0x301a7f5d]
  40f661:	ja     0x40f637
  40f663:	call   0xaad1f883
  40f668:	mov    sp,0xb16
  40f66c:	data16 xlat BYTE PTR ds:[ebx]
  40f66e:	ja     0x40f67a
  40f670:	addr16 push ebp
  40f672:	lods   eax,DWORD PTR ds:[esi]
  40f673:	inc    edx
  40f674:	add    BYTE PTR [eax+0x7f],dh
  40f677:	loop   0x40f65c
  40f679:	xchg   ebp,eax
  40f67a:	stos   DWORD PTR es:[edi],eax
  40f67b:	popf   
  40f67c:	push   edi
  40f67d:	ror    cl,cl
  40f67f:	mov    ebx,0x6ef0402e
  40f684:	aas    
  40f685:	out    dx,eax
  40f686:	aam    0x2e
  40f688:	mov    ah,0x7c
  40f68a:	arpl   WORD PTR [esi],ax
  40f68c:	(bad)  
  40f68d:	in     eax,0x88
  40f68f:	arpl   WORD PTR [ecx+ecx*1+0x2d7b0284],bx
  40f696:	push   esi
  40f697:	mov    esp,0xd1e91916
  40f69c:	adc    eax,0xd1698bac
  40f6a1:	adc    ebx,esi
  40f6a3:	shl    edx,cl
  40f6a5:	in     al,dx
  40f6a6:	push   ecx
  40f6a7:	add    al,dh
  40f6a9:	lods   eax,DWORD PTR ds:[esi]
  40f6aa:	and    BYTE PTR [eax+0x11],bl
  40f6ad:	js     0x40f63b
  40f6af:	inc    ebx
  40f6b0:	xor    DWORD PTR [edx+0x17af907e],edi
  40f6b6:	ret    0x3891
  40f6b9:	retf   
  40f6ba:	shl    BYTE PTR [edi],cl
  40f6bc:	dec    ebp
  40f6bd:	xlat   BYTE PTR ds:[ebx]
  40f6be:	adc    al,0x82
  40f6c0:	jae    0x40f722
  40f6c2:	xor    al,0x4e
  40f6c4:	aaa    
  40f6c5:	dec    ebx
  40f6c6:	or     BYTE PTR [edi-0x58],bl
  40f6c9:	xchg   edx,eax
  40f6ca:	sar    edx,0xa2
  40f6cd:	and    al,0x2
  40f6cf:	pop    ecx
  40f6d0:	pop    edi
  40f6d1:	xchg   dh,ch
  40f6d3:	ss aas 
  40f6d5:	and    ebx,edx
  40f6d7:	mov    ch,0x81
  40f6d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6da:	mov    cl,0x7c
  40f6dc:	out    dx,eax
  40f6dd:	test   eax,0x604ca726
  40f6e2:	mov    dl,0x45
  40f6e4:	mov    ebx,0x748ecb2b
  40f6e9:	shr    eax,1
  40f6eb:	jp     0x40f6b3
  40f6ed:	xchg   edx,eax
  40f6ee:	(bad)  
  40f6ef:	and    esi,ecx
  40f6f1:	aas    
  40f6f2:	lds    edi,FWORD PTR [edi-0x53849215]
  40f6f8:	add    al,0xa4
  40f6fa:	push   ebx
  40f6fb:	mov    esi,0x1a25b024
  40f700:	cmp    cl,ah
  40f702:	push   esi
  40f703:	push   ds
  40f704:	xchg   esi,eax
  40f705:	lods   al,BYTE PTR ds:[esi]
  40f706:	imul   esi,DWORD PTR [ecx],0x6e
  40f709:	daa    
  40f70a:	scas   eax,DWORD PTR es:[edi]
  40f70b:	pop    es
  40f70c:	or     eax,0x7039e9a6
  40f711:	(bad)  
  40f713:	jo     0x40f75c
  40f715:	adc    al,0x3e
  40f717:	cwde   
  40f718:	(bad)  
  40f719:	jnp    0x40f737
  40f71b:	jmp    0xf1db:0x142cd526
  40f722:	fisub  DWORD PTR ds:0x601d956e
  40f728:	cmp    ebp,DWORD PTR [ebp-0x2cbd6bd6]
  40f72e:	hlt    
  40f72f:	xor    al,0x79
  40f731:	adc    bh,BYTE PTR [eax+0x692cdd53]
  40f737:	shr    ebp,1
  40f739:	fild   DWORD PTR [eax+0x52]
  40f73c:	dec    eax
  40f73d:	or     cl,BYTE PTR [edi]
  40f73f:	adc    al,0x2c
  40f741:	das    
  40f742:	add    al,0x91
  40f744:	inc    esi
  40f745:	inc    esi
  40f746:	cmp    ebx,DWORD PTR [edi]
  40f748:	jbe    0x40f786
  40f74a:	mov    ah,0x2b
  40f74c:	add    DWORD PTR [esi],esi
  40f74e:	mov    ch,0xbb
  40f750:	in     eax,0x7c
  40f752:	es jns 0x40f7b9
  40f755:	sbb    eax,0x8acd8cb4
  40f75a:	mov    dl,0xdc
  40f75c:	push   esp
  40f75d:	mov    ch,BYTE PTR [edx-0x25]
  40f760:	cli    
  40f761:	adc    ecx,DWORD PTR [esi]
  40f763:	dec    edi
  40f764:	iret   
  40f765:	test   eax,0x54e8e501
  40f76a:	ins    DWORD PTR es:[edi],dx
  40f76b:	dec    ebx
  40f76c:	and    al,0xb5
  40f76e:	pop    ebp
  40f76f:	pop    es
  40f770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f771:	loope  0x40f72d
  40f773:	and    DWORD PTR [esi-0xb],esp
  40f776:	sub    cl,BYTE PTR [ecx]
  40f778:	cmp    edx,ebx
  40f77a:	push   edx
  40f77b:	popf   
  40f77c:	lods   al,BYTE PTR ds:[esi]
  40f77d:	(bad)
  40f780:	outs   dx,BYTE PTR ds:[esi]
  40f781:	mov    bh,0xab
  40f783:	push   esp
  40f784:	gs sahf 
  40f786:	aas    
  40f787:	mov    edi,0xc273d799
  40f78c:	xor    esi,eax
  40f78e:	gs ins DWORD PTR es:[edi],dx
  40f790:	das    
  40f791:	int3   
  40f792:	cdq    
  40f793:	push   esi
  40f794:	mov    bh,0x36
  40f796:	cmp    ebp,eax
  40f798:	or     dl,ah
  40f79a:	mov    bl,0x67
  40f79c:	xchg   ebp,eax
  40f79d:	rcr    ch,1
  40f79f:	shl    DWORD PTR [eax],1
  40f7a1:	sub    cl,BYTE PTR [edx]
  40f7a3:	retf   
  40f7a4:	xchg   ebx,eax
  40f7a5:	clc    
  40f7a6:	push   ebp
  40f7a7:	call   0x57f7d54e
  40f7ac:	data16 jmp 0x40f79a
  40f7af:	sahf   
  40f7b0:	or     dh,BYTE PTR [ebx-0x4211a3ad]
  40f7b6:	mov    eax,ds:0x2212429d
  40f7bb:	int    0x87
  40f7bd:	ret    0xe2b
  40f7c0:	or     BYTE PTR [esi],dl
  40f7c2:	loope  0x40f821
  40f7c4:	mov    bh,0x9c
  40f7c6:	adc    eax,0xfef298e3
  40f7cb:	and    BYTE PTR [edx],0x6a
  40f7ce:	scas   al,BYTE PTR es:[edi]
  40f7cf:	xlat   BYTE PTR ds:[ebx]
  40f7d0:	out    dx,eax
  40f7d1:	mov    ds:0xa3329777,eax
  40f7d6:	popf   
  40f7d7:	xchg   DWORD PTR [ecx+0x3a704775],edi
  40f7dd:	xor    cl,BYTE PTR [eax-0x62]
  40f7e0:	adc    ebx,edx
  40f7e2:	mov    DWORD PTR [ebp-0x21],ebp
  40f7e5:	add    edx,DWORD PTR [ebp-0x23]
  40f7e8:	sub    eax,0x19682112
  40f7ed:	or     DWORD PTR [ebx+esi*8],edi
  40f7f0:	mov    bl,0x96
  40f7f2:	shl    BYTE PTR [esi+0x136915bc],cl
  40f7f8:	arpl   ax,bx
  40f7fa:	pop    edi
  40f7fb:	das    
  40f7fc:	dec    ebp
  40f7fd:	adc    al,0x59
  40f7ff:	arpl   WORD PTR [ebp+0x69f7c26d],cx
  40f805:	mov    DWORD PTR [edx+ebx*8+0x68],esi
  40f809:	or     BYTE PTR [ecx+0x49],al
  40f80c:	dec    esp
  40f80e:	loop   0x40f7fb
  40f810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f811:	leave  
  40f812:	fisubr WORD PTR [edx+0x58]
  40f815:	icebp  
  40f816:	pop    ebp
  40f817:	sbb    al,0x70
  40f819:	dec    esi
  40f81a:	sub    ebp,ebx
  40f81c:	stos   BYTE PTR es:[edi],al
  40f81d:	add    edi,ecx
  40f81f:	jp     0x40f875
  40f821:	nop
  40f822:	repz add DWORD PTR [ecx+eax*8-0x26],edx
  40f827:	add    bl,dl
  40f829:	ror    DWORD PTR [ebx+0x5c0c4ab4],1
  40f82f:	scas   eax,DWORD PTR es:[edi]
  40f830:	push   edx
  40f831:	out    dx,al
  40f832:	and    DWORD PTR [ebx],esi
  40f834:	pop    esi
  40f835:	aam    0x8
  40f837:	shl    BYTE PTR [eax-0x3b],cl
  40f83a:	int    0x19
  40f83c:	inc    edx
  40f83d:	mov    esi,0x1f0436cd
  40f842:	push   edi
  40f843:	or     BYTE PTR [edi+0x2b],0x2d
  40f847:	pop    esp
  40f848:	or     ebx,ebx
  40f84a:	jno    0x40f85d
  40f84c:	or     al,0xf3
  40f84e:	in     eax,dx
  40f84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f850:	enter  0xf100,0x8b
  40f854:	xchg   edx,eax
  40f855:	lds    ecx,FWORD PTR [edx+0x7f795d4b]
  40f85b:	bound  edi,QWORD PTR [edx-0x49483d5]
  40f861:	int3   
  40f862:	inc    ebp
  40f863:	xchg   edi,eax
  40f864:	(bad)  
  40f865:	lock mov WORD PTR [ecx+0x44],fs
  40f869:	jnp    0x40f804
  40f86b:	mov    bl,0xa9
  40f86d:	sub    eax,0xcd91b6ba
  40f872:	jmp    0xe9d6:0x390761e
  40f879:	xchg   edx,eax
  40f87a:	ret    
  40f87b:	lahf   
  40f87c:	cmp    cl,BYTE PTR [edx+edx*1-0x14]
  40f880:	jne    0x40f8c2
  40f882:	enter  0x2317,0xbf
  40f886:	daa    
  40f887:	dec    esp
  40f888:	mov    esi,0x368952a8
  40f88d:	push   eax
  40f88e:	xchg   esi,eax
  40f88f:	test   ah,ch
  40f891:	arpl   bp,sp
  40f893:	das    
  40f894:	xchg   esp,eax
  40f895:	xchg   ecx,eax
  40f896:	scas   eax,DWORD PTR es:[edi]
  40f897:	pop    ecx
  40f898:	lock arpl WORD PTR ds:0xac323cad,dx
  40f89f:	ss loop 0x40f854
  40f8a2:	mov    dh,0xa
  40f8a4:	or     cl,ch
  40f8a6:	jbe    0x40f850
  40f8a8:	mov    bl,0x7b
  40f8aa:	icebp  
  40f8ab:	inc    ebp
  40f8ac:	leave  
  40f8ad:	inc    esi
  40f8ae:	or     DWORD PTR ds:0xaa07c3e1,eax
  40f8b4:	sbb    ebp,ecx
  40f8b6:	mov    ah,BYTE PTR [edx*4-0x607f3c5a]
  40f8bd:	mov    dl,0xf5
  40f8bf:	jno    0x40f93d
  40f8c1:	jmp    0x2733:0xebf69f49
  40f8c8:	retf   
  40f8c9:	add    al,0xb
  40f8cb:	cli    
  40f8cc:	inc    esi
  40f8cd:	pop    ds
  40f8ce:	(bad)  
  40f8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8d0:	pop    eax
  40f8d1:	in     al,dx
  40f8d2:	sbb    al,0x47
  40f8d4:	arpl   WORD PTR [ebp-0x55592ae4],di
  40f8da:	xchg   ecx,eax
  40f8db:	xor    esp,edx
  40f8dd:	mov    ah,0x75
  40f8df:	push   cs
  40f8e0:	xchg   DWORD PTR [edi+0x7df0088a],edi
  40f8e6:	(bad)  
  40f8e7:	cmp    ebp,DWORD PTR [ebx]
  40f8e9:	sar    DWORD PTR [ebp+0x28],1
  40f8ec:	mov    eax,ds:0x8a2c744a
  40f8f1:	fmul   DWORD PTR [esi+0x71]
  40f8f4:	mov    esp,0xcaa5e088
  40f8f9:	fistp  DWORD PTR [edi-0x76]
  40f8fc:	mov    edi,0x775b4ced
  40f901:	bnd jle 0x40f92f
  40f904:	nop
  40f905:	xor    eax,0x96de4e17
  40f90a:	inc    esi
  40f90b:	inc    ebp
  40f90c:	cmp    al,0xe4
  40f90e:	aaa    
  40f90f:	cmp    BYTE PTR [edx+0x7724fee8],bl
  40f915:	das    
  40f916:	fisub  DWORD PTR [eax-0x68]
  40f919:	in     eax,0xea
  40f91b:	dec    esi
  40f91c:	(bad)  
  40f91d:	mov    esi,DWORD PTR [ebp+0x65]
  40f920:	dec    edi
  40f921:	jge    0x40f984
  40f923:	sub    edx,edx
  40f925:	cld    
  40f926:	dec    ebp
  40f927:	int    0x73
  40f929:	jecxz  0x40f937
  40f92b:	aas    
  40f92c:	mov    cl,0xdd
  40f92e:	iret   
  40f92f:	xlat   BYTE PTR ds:[ebx]
  40f930:	xchg   edx,eax
  40f931:	aad    0xfd
  40f933:	lahf   
  40f934:	mov    ds:0xccc5cbf5,eax
  40f939:	enter  0xac0d,0xf6
  40f93d:	sub    edx,DWORD PTR [ecx]
  40f93f:	adc    DWORD PTR [esi+0x5734a09f],ebp
  40f945:	xchg   bh,bh
  40f947:	pop    esi
  40f948:	aas    
  40f949:	push   edi
  40f94a:	pop    ds
  40f94b:	rcl    BYTE PTR [edi+0xb],cl
  40f94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f94f:	xor    esi,DWORD PTR [edi+0x6]
  40f952:	and    eax,0x1b282494
  40f957:	ss pop eax
  40f959:	dec    edx
  40f95a:	fwait
  40f95b:	stos   DWORD PTR es:[edi],eax
  40f95c:	cli    
  40f95d:	and    al,0xc4
  40f95f:	comiss xmm1,DWORD PTR [edi+0x58e9b7bb]
  40f966:	data16 mov bh,0xaa
  40f969:	hlt    
  40f96a:	daa    
  40f96b:	ja     0x40f97f
  40f96d:	and    al,0xcf
  40f96f:	or     esp,DWORD PTR [esi-0x45]
  40f972:	jnp    0x40f900
  40f974:	jmp    0xcaf11ff
  40f979:	lahf   
  40f97a:	and    BYTE PTR [ebp+0x63e6724f],bl
  40f980:	xchg   edi,eax
  40f981:	cdq    
  40f982:	mov    ecx,0x24a109d3
  40f987:	(bad)  
  40f988:	mov    eax,DWORD PTR [ebx]
  40f98a:	lahf   
  40f98b:	repz mov edi,0xc841dca6
  40f991:	or     eax,0x16ca0723
  40f996:	loop   0x40f961
  40f998:	pushf  
  40f999:	xchg   esi,eax
  40f99a:	xchg   esp,eax
  40f99b:	pop    ebx
  40f99c:	mov    ch,0x78
  40f99e:	sar    dl,1
  40f9a0:	or     esp,edi
  40f9a2:	fwait
  40f9a3:	jmp    0x7750:0xac0406a0
  40f9aa:	test   DWORD PTR [ebx+0x3d58df95],ebx
  40f9b0:	inc    esi
  40f9b1:	xchg   DWORD PTR [ebx-0x1e4f0e30],eax
  40f9b7:	sar    DWORD PTR [ebp-0x39],1
  40f9ba:	push   0xffffff81
  40f9bc:	add    BYTE PTR [esi+0x5470e87f],bl
  40f9c2:	dec    eax
  40f9c3:	and    DWORD PTR [ebp-0x344fa869],0x4f
  40f9ca:	shl    DWORD PTR [ecx+0x2a],cl
  40f9cd:	mov    esi,0x8e403e07
  40f9d2:	sbb    edx,DWORD PTR [esi+ebx*1]
  40f9d5:	mov    dh,0x50
  40f9d7:	ret    
  40f9d8:	sub    eax,0xb68ea5e4
  40f9dd:	jl     0x40f99d
  40f9df:	xchg   BYTE PTR [ebp+0x395e6497],bl
  40f9e5:	cwde   
  40f9e6:	imul   edx,DWORD PTR [edx+0xb],0x9d4b9bd3
  40f9ed:	arpl   si,dx
  40f9ef:	nop
  40f9f0:	add    eax,0xbc607501
  40f9f5:	pop    ecx
  40f9f6:	clc    
  40f9f7:	dec    esp
  40f9f8:	mov    eax,0xf1001aa7
  40f9fd:	sbb    esp,DWORD PTR [ebp-0x2d]
  40fa00:	cli    
  40fa01:	inc    edx
  40fa02:	gs mov cl,0x57
  40fa05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa06:	retf   0x803
  40fa09:	pusha  
  40fa0a:	or     DWORD PTR [ebp+0x4c155193],eax
  40fa10:	sub    DWORD PTR [esi-0x43],ecx
  40fa13:	adc    al,0xbb
  40fa15:	rcr    DWORD PTR [edx+0x72],cl
  40fa18:	and    DWORD PTR [eax-0x52f924ba],0x5f32a101
  40fa22:	hlt    
  40fa23:	sub    BYTE PTR [eax+0x4bb63c19],cl
  40fa29:	adc    eax,0x825dcb53
  40fa2e:	jp     0x40fa61
  40fa30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa31:	daa    
  40fa32:	ja     0x40fa57
  40fa34:	ins    BYTE PTR es:[edi],dx
  40fa35:	std    
  40fa36:	sbb    edx,esp
  40fa38:	lods   al,BYTE PTR ds:[esi]
  40fa39:	jns    0x40fa5f
  40fa3b:	pop    eax
  40fa3c:	mov    eax,0x3e3b011a
  40fa41:	inc    eax
  40fa42:	inc    edx
  40fa43:	sbb    ch,BYTE PTR [edx+0x8]
  40fa46:	push   es
  40fa47:	dec    ecx
  40fa48:	retf   
  40fa49:	xor    eax,DWORD PTR [ecx]
  40fa4b:	fiadd  DWORD PTR [edx-0x5a6e2132]
  40fa51:	sub    eax,0x83b31acb
  40fa56:	inc    ebp
  40fa57:	pop    ebp
  40fa58:	ins    DWORD PTR es:[edi],dx
  40fa59:	cli    
  40fa5a:	sahf   
  40fa5b:	adc    DWORD PTR [eax-0x353b12a3],edi
  40fa61:	inc    ecx
  40fa62:	fld    DWORD PTR es:[ebp+eiz*4-0x77]
  40fa67:	clc    
  40fa68:	fdiv   QWORD PTR ds:0x4765de2c
  40fa6e:	jmp    0x37e56879
  40fa73:	lods   al,BYTE PTR ds:[esi]
  40fa74:	mov    ds:0x9ac65860,eax
  40fa79:	aaa    
  40fa7a:	test   eax,0xaf8b754d
  40fa7f:	mov    edx,0xe6f9efad
  40fa84:	jg     0x40faba
  40fa86:	stc    
  40fa87:	mov    ebx,eax
  40fa89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa8a:	xchg   ebx,eax
  40fa8b:	pop    esi
  40fa8c:	jg     0x40fa11
  40fa8e:	mov    dh,0x33
  40fa90:	jae    0x40fb0f
  40fa92:	xchg   BYTE PTR [eax+eax*2],al
  40fa95:	fbld   TBYTE PTR [esi-0x5c80e724]
  40fa9b:	sbb    cl,BYTE PTR [edx+0x767763a5]
  40faa1:	stc    
  40faa2:	sbb    al,0x3b
  40faa4:	shr    DWORD PTR [ecx-0x2adcf733],0x8
  40faab:	arpl   dx,ax
  40faad:	mov    ebp,0x48a15324
  40fab2:	and    eax,0xcdfba031
  40fab7:	jne    0x40fae4
  40fab9:	js     0x40fad7
  40fabb:	inc    esp
  40fabc:	pop    es
  40fabd:	into   
  40fabe:	(bad)  
  40fabf:	jne    0x40fab8
  40fac1:	fcom   DWORD PTR fs:[ebx-0x7d]
  40fac5:	out    0x65,al
  40fac7:	or     eax,esp
  40fac9:	pop    es
  40faca:	popaw  
  40facc:	xchg   esi,eax
  40facd:	push   esp
  40face:	pop    ebp
  40facf:	dec    eax
  40fad0:	pop    esp
  40fad1:	popa   
  40fad2:	adc    al,0x1a
  40fad4:	push   edx
  40fad5:	or     BYTE PTR fs:0xc00a02c4,dh
  40fadc:	mov    ebp,0x66d107e6
  40fae1:	mov    eax,ds:0xc2f09399
  40fae6:	dec    ebp
  40fae7:	mov    WORD PTR [edi],gs
  40fae9:	fnstsw WORD PTR [ebp-0x27]
  40faec:	test   DWORD PTR [ebx+eiz*2-0x36],eax
  40faf0:	pop    esp
  40faf1:	push   0xf7fb6ebf
  40faf6:	lock sbb al,0xb4
  40faf9:	xchg   ebx,eax
  40fafa:	cli    
  40fafb:	or     al,0x3b
  40fafd:	jo     0x40faa4
  40faff:	aas    
  40fb00:	mov    eax,ds:0x1109441c
  40fb05:	ins    BYTE PTR es:[edi],dx
  40fb06:	cmp    DWORD PTR [ebx-0x7c],ecx
  40fb09:	push   esi
  40fb0a:	aad    0x19
  40fb0c:	mov    eax,0x3568e611
  40fb11:	frstor [ebp+0x13352d9a]
  40fb17:	mov    WORD PTR [esi+0x5a47d4e],?
  40fb1d:	aam    0xf
  40fb1f:	pop    ebx
  40fb20:	lods   al,BYTE PTR ds:[esi]
  40fb21:	rsqrtps xmm7,XMMWORD PTR [ebp+eax*1-0x9bea3a8]
  40fb29:	nop
  40fb2a:	cdq    
  40fb2b:	rcr    BYTE PTR [eax],cl
  40fb2d:	inc    esi
  40fb2e:	in     eax,0x50
  40fb30:	fst    QWORD PTR [edi+eax*4]
  40fb33:	dec    edx
  40fb34:	add    ecx,0x2b
  40fb37:	jecxz  0x40fb46
  40fb39:	dec    eax
  40fb3a:	push   eax
  40fb3b:	mov    WORD PTR [edi+eiz*1-0x11],?
  40fb3f:	mov    al,0xdf
  40fb41:	cmp    eax,DWORD PTR [ebx+0x17]
  40fb44:	sub    BYTE PTR [esi+eiz*1],bl
  40fb47:	mov    BYTE PTR [edx],al
  40fb49:	xor    eax,0x53295d92
  40fb4e:	pop    eax
  40fb4f:	cld    
  40fb50:	dec    edi
  40fb51:	mov    al,0xce
  40fb53:	ins    BYTE PTR es:[edi],dx
  40fb54:	add    ebp,DWORD PTR [esi]
  40fb56:	test   DWORD PTR [edx-0x5c967eca],ecx
  40fb5c:	fwait
  40fb5d:	jbe    0x40fb36
  40fb5f:	(bad)  
  40fb60:	stc    
  40fb61:	fild   DWORD PTR [edx+0x3a]
  40fb64:	ja     0x40fb7f
  40fb66:	mov    eax,DWORD PTR es:[ecx-0x80]
  40fb6a:	mov    ah,0x94
  40fb6c:	push   esp
  40fb6d:	push   edx
  40fb6e:	mov    esp,DWORD PTR [ebx-0x21a8bf3b]
  40fb74:	data16 jle 0x40fb1e
  40fb77:	xchg   edi,eax
  40fb78:	adc    al,0xaa
  40fb7a:	in     eax,dx
  40fb7b:	lea    edx,[edi-0x5df0157]
  40fb81:	jmp    0xdf32:0x5e0b0589
  40fb88:	cmp    DWORD PTR [eax-0x76e805b5],ecx
  40fb8e:	jl     0x40fb4b
  40fb90:	add    BYTE PTR [edi+0x45],ah
  40fb93:	jle    0x40fb73
  40fb95:	pop    ds
  40fb96:	jbe    0x40fb27
  40fb98:	pusha  
  40fb99:	mov    al,ds:0x4cda974
  40fb9e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40fba0:	or     eax,DWORD PTR [ebp+0x642fa4c9]
  40fba6:	je     0x40fb88
  40fba8:	outs   dx,DWORD PTR ds:[esi]
  40fba9:	(bad)  
  40fbaa:	loopne 0x40fba7
  40fbac:	cdq    
  40fbad:	sub    al,0xb0
  40fbaf:	jno    0x40fbe0
  40fbb1:	push   0x6521f72e
  40fbb6:	loop   0x40fc2f
  40fbb8:	xchg   edx,eax
  40fbb9:	fsubr  QWORD PTR [edx]
  40fbbb:	popf   
  40fbbc:	sub    esp,DWORD PTR [eax]
  40fbbe:	(bad)  
  40fbbf:	jge    0x40fb81
  40fbc1:	dec    edx
  40fbc2:	xchg   DWORD PTR [eax-0x6f],esi
  40fbc5:	jne    0x40fbe6
  40fbc7:	jo     0x40fc1f
  40fbc9:	mov    ebp,0x1548a0b9
  40fbce:	(bad)  
  40fbcf:	pop    edi
  40fbd0:	mov    edx,ss
  40fbd2:	push   es
  40fbd3:	iret   
  40fbd4:	dec    ecx
  40fbd5:	mov    ecx,eax
  40fbd7:	inc    esi
  40fbd8:	xlat   BYTE PTR ds:[ebx]
  40fbd9:	xor    BYTE PTR cs:[edi-0x19],ch
  40fbdd:	das    
  40fbde:	mov    bh,0x52
  40fbe0:	adc    eax,0x4ebee973
  40fbe5:	call   0x2043:0x63aee146
  40fbec:	mov    ch,0x72
  40fbee:	ret    
  40fbef:	rcr    BYTE PTR [ecx],0x70
  40fbf2:	dec    edx
  40fbf3:	addr16 in eax,0xb1
  40fbf6:	out    dx,al
  40fbf7:	aam    0x17
  40fbf9:	adc    BYTE PTR [ebx-0x7a],0xd9
  40fbfd:	out    0xa4,eax
  40fbff:	mov    ebx,0xe42a8d83
  40fc04:	jge    0x40fc1f
  40fc06:	pop    ds
  40fc07:	popa   
  40fc08:	push   edx
  40fc09:	nop
  40fc0a:	mov    dh,BYTE PTR [esi-0x44]
  40fc0d:	jp     0x40fc13
  40fc0f:	je     0x40fc29
  40fc11:	ss in  eax,dx
  40fc13:	in     al,0x5c
  40fc15:	and    edi,ecx
  40fc17:	mov    ds:0x6c599431,al
  40fc1c:	pop    esi
  40fc1d:	xor    BYTE PTR [ecx],bh
  40fc1f:	jmp    0xf4ed2631
  40fc24:	fldcw  WORD PTR [esi+0x7655eb2d]
  40fc2a:	add    eax,edi
  40fc2c:	xchg   DWORD PTR [edi-0x54],ecx
  40fc2f:	adc    DWORD PTR [esp+edi*4],eax
  40fc32:	push   ss
  40fc33:	push   0xa929d72b
  40fc38:	(bad)  
  40fc39:	rcr    esi,0x26
  40fc3c:	push   DWORD PTR [ebx-0x52]
  40fc3f:	xor    eax,0x5d6dab31
  40fc44:	or     BYTE PTR [esi],0x24
  40fc47:	dec    esp
  40fc48:	cwde   
  40fc49:	jge    0x40fbf8
  40fc4b:	sbb    eax,0x1dbf84b8
  40fc50:	in     al,0x6f
  40fc52:	push   esi
  40fc53:	adc    dl,dl
  40fc55:	leave  
  40fc56:	fcomp  QWORD PTR [eax+0x12]
  40fc59:	mov    ds:0xd468a3b9,eax
  40fc5e:	sbb    ebp,0xf0919374
  40fc64:	and    bh,BYTE PTR [esi+eax*1+0x45112f7f]
  40fc6b:	mov    ebx,0xdcd6b7bb
  40fc70:	sub    esi,DWORD PTR [edi-0x37caa631]
  40fc76:	fs fdivrp st(7),st
  40fc79:	sbb    bl,BYTE PTR [eax]
  40fc7b:	push   ss
  40fc7c:	mov    ah,0x53
  40fc7e:	mov    ds:0x2e946f8e,eax
  40fc83:	mov    ah,0x91
  40fc85:	lods   eax,DWORD PTR ds:[esi]
  40fc86:	sbb    bh,BYTE PTR [eax-0x4b5909d4]
  40fc8c:	test   al,0xb8
  40fc8e:	add    bl,BYTE PTR [edi-0x3a7a4343]
  40fc94:	mov    dl,0x32
  40fc96:	rcl    DWORD PTR [ebx+0x46b7adfa],cl
  40fc9c:	aaa    
  40fc9d:	call   0xcddfc5d5
  40fca2:	sub    ebx,esp
  40fca4:	sub    cl,al
  40fca6:	jb     0x40fce4
  40fca8:	or     BYTE PTR [edi-0x4ceed524],cl
  40fcae:	fcom   DWORD PTR [eax+0x513dece7]
  40fcb4:	or     al,0xdc
  40fcb6:	or     al,BYTE PTR [eax-0x4f4940b0]
  40fcbc:	mov    ebx,0x3ebc79ed
  40fcc1:	inc    esi
  40fcc2:	cmp    al,0xcd
  40fcc4:	into   
  40fcc5:	ss dec esi
  40fcc7:	fnstsw WORD PTR [edx+0x3e]
  40fcca:	push   esi
  40fccb:	dec    ecx
  40fccc:	fbstp  TBYTE PTR [ebp-0x25]
  40fccf:	sub    DWORD PTR [edi+0x9],eax
  40fcd2:	dec    esp
  40fcd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcd4:	je     0x40fc91
  40fcd6:	xchg   ecx,eax
  40fcd7:	mov    ah,0x77
  40fcd9:	(bad)  [edx-0x7f714ac1]
  40fcdf:	int3   
  40fce0:	sbb    BYTE PTR ds:0xe4ca1fab,cl
  40fce6:	and    DWORD PTR [eax-0x4b3af945],edx
  40fcec:	lock popa 
  40fcee:	mov    esi,0x370f2991
  40fcf3:	xchg   ebp,eax
  40fcf4:	test   eax,0x3e71579b
  40fcf9:	jmp    0x40fca6
  40fcfb:	ja     0x40fd06
  40fcfd:	popf   
  40fcfe:	jmp    0xd775:0xbd0c2ee6
  40fd05:	sub    eax,0xae886152
  40fd0a:	pop    eax
  40fd0b:	addr16 int 0x7c
  40fd0e:	adc    BYTE PTR [edx],ah
  40fd10:	jns    0x40fd84
  40fd12:	pop    edi
  40fd13:	push   esp
  40fd14:	cmc    
  40fd15:	aad    0x4
  40fd17:	xchg   ecx,eax
  40fd18:	ins    BYTE PTR es:[edi],dx
  40fd19:	fistp  WORD PTR [eax+0x38]
  40fd1c:	clc    
  40fd1d:	inc    BYTE PTR [edx]
  40fd1f:	pop    edi
  40fd20:	mov    dl,dl
  40fd22:	pop    esi
  40fd23:	inc    edx
  40fd24:	or     BYTE PTR [edi+0x44],cl
  40fd27:	test   ch,ch
  40fd29:	mov    bh,0x91
  40fd2b:	mov    edi,0xa4a405c5
  40fd30:	lods   eax,DWORD PTR ds:[esi]
  40fd31:	mov    esi,0xaa8c7752
  40fd36:	xor    al,BYTE PTR [ebp-0x5f]
  40fd39:	push   edi
  40fd3a:	sbb    DWORD PTR [esi+esi*4],0x255e2051
  40fd41:	lods   eax,DWORD PTR ds:[esi]
  40fd42:	fcomp  DWORD PTR [ecx-0x39120a95]
  40fd48:	stc    
  40fd49:	(bad)  
  40fd4a:	mov    cl,0xc8
  40fd4c:	mov    dl,0x86
  40fd4e:	dec    eax
  40fd4f:	mov    DWORD PTR [eax+0x6b],edi
  40fd52:	push   es
  40fd53:	popa   
  40fd54:	pop    edx
  40fd55:	xchg   DWORD PTR [esi],edi
  40fd57:	ja     0x40fdcb
  40fd59:	mov    esp,es
  40fd5b:	inc    ecx
  40fd5c:	mov    bh,BYTE PTR [ecx]
  40fd5e:	shl    BYTE PTR [esi+0xc38b0af],cl
  40fd64:	lahf   
  40fd65:	and    bh,bh
  40fd67:	push   ss
  40fd68:	inc    edx
  40fd69:	fwait
  40fd6a:	repz xor eax,0x6cd0a0ff
  40fd70:	fdiv   st,st(2)
  40fd72:	inc    BYTE PTR gs:[esi+0x7ceb929e]
  40fd79:	xchg   DWORD PTR [ebx+0x1af0a541],edi
  40fd7f:	fisttp QWORD PTR [ebx+0x7ba9e7fd]
  40fd85:	and    dl,BYTE PTR [edi+ebp*8+0x10]
  40fd89:	stos   DWORD PTR es:[edi],eax
  40fd8a:	xor    al,cl
  40fd8c:	mov    dl,0x72
  40fd8e:	add    edi,DWORD PTR [ebx+0xdbca907]
  40fd94:	inc    edi
  40fd95:	ret    
  40fd96:	je     0x40fd3e
  40fd98:	out    0x56,eax
  40fd9a:	pop    ebp
  40fd9b:	neg    ch
  40fd9d:	cdq    
  40fd9e:	mov    WORD PTR [esi+0x68387322],ss
  40fda4:	es (bad) 
  40fda6:	pop    ecx
  40fda7:	jmp    0x40fd64
  40fda9:	jo     0x40fd9f
  40fdab:	sub    dl,al
  40fdad:	lahf   
  40fdae:	push   es
  40fdaf:	pop    ebx
  40fdb0:	aas    
  40fdb1:	xchg   BYTE PTR ds:[esi-0x36],ch
  40fdb5:	hlt    
  40fdb6:	cmp    edi,DWORD PTR ds:0x6a612514
  40fdbc:	cmp    eax,0x6bb752ed
  40fdc1:	jnp    0x40fe42
  40fdc3:	cmp    al,0xc9
  40fdc5:	psubw  mm5,QWORD PTR [edi+ebx*4-0x74]
  40fdca:	xor    BYTE PTR [si-0x17f8],ch
  40fdcf:	mov    bl,0xd8
  40fdd1:	dec    ebp
  40fdd2:	addr16 jns 0x40fdbf
  40fdd5:	mov    esi,0xc4014538
  40fdda:	push   esp
  40fddb:	mov    edi,0x730b4fad
  40fde0:	xchg   ebx,eax
  40fde1:	scas   al,BYTE PTR es:[edi]
  40fde2:	nop
  40fde3:	out    0x4d,eax
  40fde5:	mov    edx,0xda85cae6
  40fdea:	sahf   
  40fdeb:	inc    ebp
  40fdec:	push   esi
  40fded:	cmp    al,0xea
  40fdef:	dec    esi
  40fdf0:	cmp    edi,ecx
  40fdf2:	xchg   ebx,eax
  40fdf3:	xor    eax,0x1dd9f2ef
  40fdf8:	es hlt 
  40fdfa:	xchg   esi,eax
  40fdfb:	nop
  40fdfc:	hlt    
  40fdfd:	cmp    DWORD PTR [eax],edi
  40fdff:	aam    0x4c
  40fe01:	fldcw  WORD PTR [edx+edx*2-0x19]
  40fe05:	stos   DWORD PTR es:[edi],eax
  40fe06:	adc    BYTE PTR [edi+0x59],bh
  40fe09:	out    0x31,eax
  40fe0b:	push   ds
  40fe0c:	imul   ebx,DWORD PTR [esi-0x1c9989ad],0xa0ff8f19
  40fe16:	cld    
  40fe17:	das    
  40fe18:	xlat   BYTE PTR ds:[ebx]
  40fe19:	jge    0x40fe42
  40fe1b:	pushf  
  40fe1c:	lea    esp,[edi-0x604abf1b]
  40fe22:	dec    edx
  40fe23:	xchg   DWORD PTR [esi-0x45],esi
  40fe26:	or     eax,0xe4afeea
  40fe2b:	outs   dx,DWORD PTR ds:[esi]
  40fe2c:	cdq    
  40fe2d:	lock in al,dx
  40fe2f:	mov    cl,0x59
  40fe31:	or     BYTE PTR [edi+0x2b76a685],dl
  40fe37:	aaa    
  40fe38:	mov    DWORD PTR [ebp+0x33],edi
  40fe3b:	mov    dh,0x17
  40fe3d:	fcomp  QWORD PTR [ebx+0x19]
  40fe40:	aas    
  40fe41:	shr    BYTE PTR [ebp+0x7d],1
  40fe44:	mov    ah,0x33
  40fe46:	enter  0xc377,0x41
  40fe4a:	in     eax,dx
  40fe4b:	fadd   DWORD PTR [ebx-0x38e82a72]
  40fe51:	dec    edi
  40fe52:	add    dh,bh
  40fe54:	cmp    cl,BYTE PTR [eax+0x18]
  40fe57:	shl    DWORD PTR [eax],1
  40fe59:	pop    ss
  40fe5a:	(bad)  
  40fe5b:	and    edx,edx
  40fe5d:	into   
  40fe5e:	sti    
  40fe5f:	jg     0x40fea3
  40fe61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe62:	mov    ch,0x11
  40fe64:	cmc    
  40fe65:	push   edi
  40fe66:	pop    edx
  40fe68:	or     eax,0x246260f8
  40fe6d:	mov    al,0x8b
  40fe6f:	jle    0x40feb1
  40fe71:	int    0x89
  40fe73:	jbe    0x40fed7
  40fe75:	int    0x6c
  40fe77:	inc    esi
  40fe78:	mov    esp,0xc3ccb2a4
  40fe7d:	mov    ecx,0xefa99a91
  40fe82:	push   edi
  40fe83:	push   es
  40fe84:	and    al,BYTE PTR [esi+0x1775f439]
  40fe8a:	(bad)  
  40fe8c:	mov    eax,ds:0xc30932d4
  40fe91:	fwait
  40fe92:	cdq    
  40fe93:	xor    al,0x45
  40fe95:	push   es
  40fe96:	pop    ebp
  40fe97:	or     DWORD PTR [eax+0x73],0x8003c83c
  40fe9e:	(bad)  
  40fe9f:	xchg   BYTE PTR [ebp+0x55],al
  40fea2:	sub    edx,DWORD PTR [edi+0x3d29354d]
  40fea8:	cmp    eax,0x3f3588c1
  40fead:	and    DWORD PTR [eax+0x6c],0xb8bd3a19
  40feb4:	rcl    DWORD PTR [eax],0x31
  40feb7:	enter  0x9457,0x75
  40febb:	inc    eax
  40febd:	push   ebp
  40febe:	xchg   ecx,eax
  40febf:	lods   al,BYTE PTR ds:[esi]
  40fec0:	mov    ds:0xe210307d,eax
  40fec5:	and    ebx,ebp
  40fec7:	shl    DWORD PTR [edx-0x429a52c9],0x97
  40fece:	push   ds
  40fecf:	not    BYTE PTR [edx+0xbb7f664]
  40fed5:	jmp    0x40feb1
  40fed7:	sbb    esi,DWORD PTR [esi]
  40fed9:	jnp    0x40ff39
  40fedb:	pop    ebp
  40fedc:	jne    0x40febe
  40fede:	test   BYTE PTR [ecx-0x76],bh
  40fee1:	dec    edi
  40fee2:	sbb    DWORD PTR [edx+eax*8],ebx
  40fee5:	sub    al,0x84
  40fee7:	and    eax,0xca698c3d
  40feec:	fstp   DWORD PTR [ebx-0x342def18]
  40fef2:	loope  0x40fee4
  40fef4:	out    dx,eax
  40fef5:	sbb    cl,al
  40fef7:	push   cs
  40fef8:	sbb    al,0x90
  40fefa:	cmp    BYTE PTR [edi-0x5e144c4e],ch
  40ff00:	mov    edi,0x8596725f
  40ff05:	and    BYTE PTR [ecx-0x29],bl
  40ff08:	inc    ebp
  40ff09:	add    ebx,DWORD PTR [ebx]
  40ff0b:	xchg   ecx,eax
  40ff0c:	hlt    
  40ff0d:	adc    BYTE PTR [eax],al
  40ff0f:	push   esi
  40ff10:	push   0xffffffaa
  40ff12:	push   esp
  40ff13:	sub    BYTE PTR [edi-0x62],dl
  40ff16:	xor    al,0x7f
  40ff18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff19:	lea    eax,[ebx-0x27]
  40ff1c:	add    BYTE PTR [edi-0x52],al
  40ff1f:	or     DWORD PTR [edi+ebx*1-0x6542a823],esp
  40ff26:	mov    esp,0x75dd8848
  40ff2b:	push   0xffffff86
  40ff2d:	pop    edi
  40ff2e:	inc    eax
  40ff2f:	pop    ss
  40ff30:	pop    ecx
  40ff31:	push   ds
  40ff32:	add    al,0xd8
  40ff34:	test   DWORD PTR [eax],0x8864c538
  40ff3a:	scas   al,BYTE PTR es:[edi]
  40ff3b:	repnz adc eax,0x1020bd0e
  40ff42:	dec    edi
  40ff43:	inc    esp
  40ff44:	jb     0x40ff47
  40ff46:	push   esi
  40ff47:	and    esi,esi
  40ff49:	inc    ebp
  40ff4a:	adc    eax,0xddca6a20
  40ff4f:	in     eax,dx
  40ff50:	xor    BYTE PTR [ebx],cl
  40ff52:	fdiv   st(0),st
  40ff54:	jno    0x40ff9e
  40ff56:	(bad)  
  40ff57:	enter  0x7a9,0xac
  40ff5b:	dec    esp
  40ff5c:	out    dx,al
  40ff5d:	and    eax,0xf592bf47
  40ff62:	lea    esi,[ecx]
  40ff64:	fisttp WORD PTR [edx]
  40ff66:	xchg   ecx,eax
  40ff67:	daa    
  40ff68:	cmc    
  40ff69:	repnz lea esi,[edx]
  40ff6c:	mov    esi,0xc763d9cb
  40ff71:	loope  0x40ffe7
  40ff73:	sahf   
  40ff74:	mov    ebp,DWORD PTR [ecx+0x8]
  40ff77:	pop    ds
  40ff78:	mov    bl,0x58
  40ff7a:	mov    ebp,0x226331aa
  40ff7f:	les    ebp,FWORD PTR [edx+0x48]
  40ff82:	ins    DWORD PTR es:[edi],dx
  40ff83:	sbb    edx,esp
  40ff85:	inc    di
  40ff87:	xchg   esp,eax
  40ff88:	push   es
  40ff89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff8a:	sub    DWORD PTR [ebx],ebx
  40ff8c:	dec    edi
  40ff8d:	jb     0x40ff4b
  40ff8f:	push   DWORD PTR [edi-0xf739aa5]
  40ff95:	xlat   BYTE PTR ds:[ebx]
  40ff96:	sbb    eax,0x640c5b1e
  40ff9b:	push   ds
  40ff9c:	sub    BYTE PTR [ecx+0x47672f79],bl
  40ffa2:	js     0x40ffdb
  40ffa4:	sbb    DWORD PTR [eax],ebp
  40ffa6:	imul   edi,DWORD PTR [edi+esi*8+0x4356740e],0xd36f47
  40ffb1:	lahf   
  40ffb2:	mov    BYTE PTR [ebp+0x4d],cl
  40ffb5:	test   al,0x5
  40ffb7:	js     0x40ff7c
  40ffb9:	test   DWORD PTR [esi-0x4d],edx
  40ffbc:	ja     0x40ff8a
  40ffbe:	mov    esi,0x21713975
  40ffc3:	pop    eax
  40ffc4:	lods   eax,DWORD PTR ds:[esi]
  40ffc5:	pop    ecx
  40ffc6:	sbb    DWORD PTR ds:0x1f3a435c,ebx
  40ffcc:	push   cs
  40ffcd:	inc    edi
  40ffce:	(bad)  
  40ffcf:	mov    ah,0x24
  40ffd1:	xor    ebp,DWORD PTR [edx+0x4d]
  40ffd4:	mov    es,WORD PTR [edx-0x3c0fc29f]
  40ffda:	call   0x9a61:0xa8bcc07b
  40ffe1:	out    dx,eax
  40ffe2:	rol    ecx,cl
  40ffe4:	push   esp
  40ffe5:	fisubr DWORD PTR [esi+0x1f]
  40ffe8:	push   ds
  40ffe9:	pop    ebp
  40ffea:	sub    bh,BYTE PTR [esp+eiz*8]
  40ffed:	inc    eax
  40ffee:	xchg   edi,eax
  40ffef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fff0:	lock fild QWORD PTR [edi+ebx*2-0x74]
  40fff5:	(bad)  
  40fff7:	pop    ss
  40fff8:	sbb    dl,dl
  40fffa:	imul   esp,DWORD PTR [ebp-0x49],0x982c9e63
  410001:	push   ecx
  410002:	pop    es
  410003:	fbstp  TBYTE PTR [ecx+0x11]
  410006:	call   0x9eee5c54
  41000b:	out    0xad,eax
  41000d:	xchg   edx,eax
  41000e:	jmp    0x410002
  410010:	or     esi,ebx
  410012:	cmp    BYTE PTR [edx+esi*1+0x3d],ah
  410016:	mov    ds:0xafcac17c,al
  41001b:	scas   al,BYTE PTR es:[edi]
  41001c:	aad    0x6d
  41001e:	ret    
  41001f:	sub    al,0xba
  410021:	lfs    edx,FWORD PTR [edx]
  410024:	ret    0x663d
  410027:	push   cs
  410028:	cmp    BYTE PTR [ebx],ch
  41002a:	fdiv   QWORD PTR [edi-0x5b]
  41002d:	stos   DWORD PTR es:[edi],eax
  41002e:	idiv   esp
  410030:	add    eax,DWORD PTR [edx]
  410032:	outs   dx,BYTE PTR ds:[esi]
  410033:	inc    esi
  410034:	dec    ecx
  410035:	das    
  410036:	loopne 0x41007c
  410038:	test   BYTE PTR [ebx+0x621538cc],cl
  41003e:	pop    esi
  41003f:	dec    edx
  410040:	and    DWORD PTR [ebx+0x46],0xa892b11e
  410047:	aas    
  410048:	mov    edi,DWORD PTR [ebp-0x2c]
  41004b:	mov    eax,0x6090e2ec
  410050:	(bad)  
  410051:	hlt    
  410052:	mov    ds:0xcd098662,al
  410057:	dec    eax
  410058:	pop    es
  410059:	and    ebx,edx
  41005b:	inc    ecx
  41005c:	and    BYTE PTR [ebx],bl
  41005e:	pushf  
  41005f:	ret    
  410060:	in     al,dx
  410061:	add    ah,al
  410063:	jl     0x41004a
  410065:	adc    BYTE PTR [ebp-0xe807fd5],dl
  41006b:	cmp    esp,esp
  41006d:	les    edx,FWORD PTR [ecx+0x63]
  410070:	test   al,0xcb
  410072:	jne    0x410084
  410074:	push   ebp
  410075:	push   ebx
  410076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410077:	cwde   
  410078:	mov    cl,0x12
  41007a:	sbb    edi,edx
  41007c:	aam    0x4e
  41007e:	jbe    0x410022
  410080:	adc    al,0x8d
  410082:	and    ebx,esp
  410084:	mov    edx,0xe9720bf3
  410089:	jmp    0x41004d
  41008b:	mov    edi,0xd73218f6
  410090:	mov    ebx,0x6693bd02
  410095:	xor    BYTE PTR [ecx+0x5],ch
  410098:	sub    BYTE PTR [ebx],dl
  41009a:	ret    
  41009b:	cmp    al,BYTE PTR [edx+0x2]
  41009e:	jecxz  0x410097
  4100a0:	dec    esi
  4100a1:	rcr    al,1
  4100a3:	xor    BYTE PTR [edx],0x94
  4100a6:	push   cs
  4100a7:	mov    esi,0xced930a4
  4100ac:	or     dl,dh
  4100ae:	dec    ebx
  4100af:	es mov edi,0x411ed63f
  4100b5:	inc    edi
  4100b6:	imul   esi,DWORD PTR [esi-0x525eae8b],0x74b9c362
  4100c0:	mov    eax,ds:0xb67fc6f
  4100c5:	or     eax,0x75392a1a
  4100ca:	xchg   ebp,eax
  4100cb:	pop    ds
  4100cc:	pushf  
  4100cd:	mov    edi,0x26f8ef49
  4100d2:	or     BYTE PTR [ebp+0x70],bl
  4100d5:	fsub   QWORD PTR [ebp+0x2470fb5e]
  4100db:	sub    esi,esp
  4100dd:	in     eax,0xe1
  4100df:	aad    0xd2
  4100e1:	ds scas eax,DWORD PTR es:[edi]
  4100e3:	rcl    BYTE PTR [esi-0x10],0xef
  4100e7:	mov    ds:0x45bf16ff,eax
  4100ec:	dec    edx
  4100ed:	push   cs
  4100ee:	loop   0x41008b
  4100f0:	(bad)  
  4100f1:	mov    esp,0x46bc3b91
  4100f6:	jg     0x41015e
  4100f8:	mov    edx,0x3ee21d14
  4100fd:	fs stos BYTE PTR es:[edi],al
  4100ff:	sbb    BYTE PTR [ecx+eax*8+0x7e],0x3e
  410104:	cmp    al,0xe0
  410106:	push   ecx
  410107:	test   BYTE PTR [ebp+0x62],ah
  41010a:	lds    esp,FWORD PTR [edi]
  41010c:	lods   eax,DWORD PTR ds:[esi]
  41010d:	xor    BYTE PTR [eax],dl
  41010f:	test   al,0xf7
  410111:	aaa    
  410112:	pop    edi
  410113:	mov    ch,0x41
  410115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410116:	cmp    ebx,DWORD PTR [esi]
  410118:	push   ss
  410119:	or     eax,0xbfb44aa7
  41011e:	dec    edx
  41011f:	sti    
  410120:	mov    BYTE PTR ds:0xc6113ef4,bh
  410126:	add    ch,BYTE PTR [ebp+0x42fd1026]
  41012c:	mov    esi,DWORD PTR [edi+edi*2]
  41012f:	jecxz  0x4100b6
  410131:	icebp  
  410132:	out    dx,eax
  410133:	xor    DWORD PTR [edi+eax*2],0x22
  410137:	faddp  st(6),st
  410139:	pop    ebx
  41013a:	mov    bh,0xec
  41013c:	jp     0x410178
  41013e:	push   ebp
  41013f:	dec    esi
  410140:	cmp    ch,BYTE PTR [eax]
  410142:	dec    ecx
  410143:	sahf   
  410144:	mov    ds:0xab0a912f,al
  410149:	sub    al,0xd3
  41014b:	mov    dl,0xfc
  41014d:	xor    bl,BYTE PTR [edi+0x5]
  410150:	popf   
  410151:	and    esp,DWORD PTR [esi-0x158d852a]
  410157:	cmp    al,0xd9
  410159:	push   cs
  41015a:	xor    BYTE PTR [ebx],0xe3
  41015d:	stos   BYTE PTR es:[edi],al
  41015e:	int3   
  41015f:	les    esi,FWORD PTR [ecx-0x7bcb9f6e]
  410165:	imul   eax,esp,0x53
  410168:	fmul   DWORD PTR [esi+0x7dacd510]
  41016e:	add    DWORD PTR [edi],esi
  410170:	adc    DWORD PTR [ebx-0x63],0x2d
  410174:	push   ecx
  410175:	dec    esi
  410176:	test   eax,0x6aacabaa
  41017b:	pop    esi
  41017c:	jno    0x410143
  41017e:	nop
  41017f:	mov    cl,0xfd
  410181:	retf   
  410182:	add    al,BYTE PTR [ebp+0xdc47c96]
  410188:	xchg   DWORD PTR [ebx+0x2d690c65],ebx
  41018e:	pop    ecx
  41018f:	enter  0xb56b,0x73
  410193:	dec    ecx
  410194:	lods   al,BYTE PTR ds:[esi]
  410195:	(bad)  
  410196:	test   al,0x20
  410198:	test   eax,0xf9ca3f48
  41019d:	mov    edx,0xf09075ef
  4101a2:	nop
  4101a3:	loope  0x4101d7
  4101a5:	jae    0x410181
  4101a7:	cs out 0x63,eax
  4101aa:	popf   
  4101ab:	int3   
  4101ac:	sar    BYTE PTR [edi+0x67f71481],1
  4101b2:	xor    ah,BYTE PTR [ebx]
  4101b4:	pushf  
  4101b5:	add    ah,BYTE PTR [si+0x7d]
  4101b9:	dec    esp
  4101ba:	mov    ecx,0x5ce10155
  4101bf:	aaa    
  4101c0:	lock xor edi,DWORD PTR [ebx-0x795735fe]
  4101c7:	clc    
  4101c8:	out    0x7,eax
  4101ca:	jmp    0xe837:0x47117d96
  4101d1:	pop    ecx
  4101d2:	(bad)  
  4101d3:	out    dx,eax
  4101d4:	dec    esi
  4101d5:	mov    bl,0x5
  4101d7:	cli    
  4101d8:	adc    al,0xc4
  4101da:	mov    ah,dl
  4101dc:	cld    
  4101dd:	push   edi
  4101de:	push   esp
  4101df:	adc    eax,0xed673ca6
  4101e4:	in     eax,dx
  4101e5:	mov    eax,ds:0xb01f995
  4101ea:	push   ebx
  4101eb:	leave  
  4101ec:	push   cs
  4101ed:	xor    al,BYTE PTR [esi]
  4101ef:	sbb    DWORD PTR [edi],0xfb082564
  4101f5:	jle    0x410263
  4101f7:	rcr    BYTE PTR [edx-0x698d0e4e],1
  4101fd:	js     0x410242
  4101ff:	push   es
  410200:	adc    BYTE PTR [esi-0x2f10d490],ah
  410206:	fs add al,ch
  410209:	scas   al,BYTE PTR es:[edi]
  41020a:	retf   
  41020b:	xchg   ebp,eax
  41020c:	mov    bh,0xf0
  41020e:	sbb    al,0xde
  410210:	frstpm(287 only) 
  410212:	pop    ebp
  410213:	push   esp
  410214:	dec    ecx
  410215:	pop    eax
  410216:	(bad)  
  410217:	xor    al,0xcb
  410219:	sbb    eax,0x2ef10a2d
  41021e:	pop    es
  41021f:	lahf   
  410220:	scas   al,BYTE PTR es:[edi]
  410221:	pop    edi
  410222:	cdq    
  410223:	cmp    al,0x12
  410225:	dec    edx
  410226:	and    al,BYTE PTR [edi+0x61]
  410229:	and    DWORD PTR [esi],ecx
  41022b:	or     eax,0x492cd20b
  410230:	test   BYTE PTR [ebp+0x21ac320],ah
  410236:	jmp    0xd27d:0x9152a0b9
  41023d:	inc    eax
  41023e:	lods   eax,DWORD PTR ds:[esi]
  41023f:	and    ebp,DWORD PTR [eax]
  410241:	(bad)  
  410242:	aas    
  410243:	and    dl,BYTE PTR [edi+0x34]
  410246:	sahf   
  410247:	mov    edx,0x1bed4999
  41024c:	xchg   ebx,eax
  41024d:	xchg   DWORD PTR [edi-0x60df1a0c],ecx
  410253:	mov    edi,0xbca87665
  410258:	adc    bl,BYTE PTR [edi-0x21]
  41025b:	xor    al,0xa6
  41025d:	das    
  41025e:	cmp    dh,BYTE PTR [esi+0x13]
  410261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410262:	fwait
  410263:	enter  0x35b2,0x9e
  410267:	or     edi,DWORD PTR [ebp-0x1eabc202]
  41026d:	xor    ebx,DWORD PTR [ebx]
  41026f:	inc    esi
  410270:	or     edx,DWORD PTR [edi+0x3792c1c6]
  410276:	repnz out dx,al
  410278:	dec    edi
  410279:	data16 icebp 
  41027b:	add    al,0xe5
  41027d:	mov    edi,0xab79c178
  410283:	fisub  WORD PTR [esi+0x6b60a56]
  410289:	jmp    0x4102f1
  41028b:	pushf  
  41028c:	div    DWORD PTR es:[edi+0x14]
  410290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410291:	shl    BYTE PTR [ebx+ecx*2],0xac
  410295:	jbe    0x410282
  410297:	push   edx
  410298:	xor    DWORD PTR [ecx+0x65bf5767],ebp
  41029e:	or     DWORD PTR [ecx],esp
  4102a0:	cmc    
  4102a1:	push   edi
  4102a2:	pop    ebp
  4102a3:	pop    ss
  4102a4:	test   al,0xcc
  4102a6:	ins    DWORD PTR es:[edi],dx
  4102a7:	dec    esp
  4102a8:	xor    DWORD PTR [esi+ebp*8],ebp
  4102ab:	cdq    
  4102ac:	adc    dh,BYTE PTR [eax-0xd]
  4102af:	js     0x410310
  4102b1:	push   esi
  4102b2:	hlt    
  4102b3:	addr16 fs mov esp,0x35d4e65f
  4102ba:	fs in  al,dx
  4102bc:	sbb    DWORD PTR [edi-0x385fa619],eax
  4102c2:	xchg   ebp,eax
  4102c3:	imul   edx,ebx,0xb6c7575e
  4102c9:	mov    edi,DWORD PTR [edx+0x29]
  4102cc:	jns    0x4102be
  4102ce:	mov    dh,0xb
  4102d0:	dec    edx
  4102d1:	fstp   TBYTE PTR [edx+eiz*1-0xbddce09]
  4102d8:	and    cl,BYTE PTR [eax-0x7d00c1f0]
  4102de:	mov    eax,ds:0x7951c6d1
  4102e3:	sub    al,BYTE PTR [ebp+0x16]
  4102e6:	js     0x4102b8
  4102e8:	sbb    BYTE PTR [esi-0x7a],bl
  4102eb:	xor    al,0xb5
  4102ed:	ret    0x1a60
  4102f0:	and    eax,0x6217b662
  4102f5:	retf   0x39ec
  4102f8:	xchg   edi,eax
  4102f9:	jg     0x410306
  4102fb:	adc    al,0x99
  4102fd:	shl    DWORD PTR [esi+0x21c3231f],0xe5
  410304:	and    al,0xbc
  410306:	and    BYTE PTR [ebp+0x39],ch
  410309:	enter  0x4361,0xb
  41030d:	mov    bl,0xfe
  41030f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410310:	retf   0x98d6
  410313:	stc    
  410314:	or     DWORD PTR [eax],ebp
  410316:	imul   ebp,DWORD PTR [ebp+0x7162c54d],0xffffffdf
  41031d:	fwait
  41031e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41031f:	lds    ebp,FWORD PTR [edi-0x3e]
  410322:	aaa    
  410323:	xor    DWORD PTR [esi+0x60],0x66657a75
  41032a:	stos   BYTE PTR es:[edi],al
  41032b:	lods   eax,DWORD PTR ds:[esi]
  41032c:	test   BYTE PTR [esi+0x60],0xeb
  410330:	mov    ecx,0xbd80acd3
  410335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410336:	dec    DWORD PTR [edi-0x64]
  410339:	scas   al,BYTE PTR es:[edi]
  41033a:	call   0x93ba:0x4f22c898
  410341:	xchg   esi,eax
  410342:	dec    edi
  410343:	mov    WORD PTR [eax+eiz*8],gs
  410346:	jae    0x41034f
  410348:	push   ebx
  410349:	mov    al,ds:0xabaac9ef
  41034e:	jmp    0xbd96:0x60722be9
  410355:	icebp  
  410356:	cwde   
  410357:	cmp    BYTE PTR [eax+0x67718bcf],ah
  41035d:	pop    esp
  41035e:	repnz lea eax,fs:[ebp+0x423e012d]
  410366:	xor    eax,0xf66836ab
  41036b:	cwde   
  41036c:	gs push edi
  41036e:	xchg   ecx,eax
  41036f:	mov    eax,ds:0x1f329c43
  410374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410375:	and    eax,0x96b0195
  41037a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41037b:	cmp    eax,0x4b9a9302
  410380:	loop   0x410332
  410382:	sar    BYTE PTR [ecx-0x77bb4ca3],1
  410388:	jnp    0x4103dc
  41038a:	mov    edi,0x3f9d1a26
  41038f:	jmp    0x408f9f64
  410394:	add    edx,edx
  410396:	jns    0x410397
  410398:	(bad)  
  41039a:	jecxz  0x4103e6
  41039c:	xchg   ebp,eax
  41039d:	dec    esi
  41039e:	adc    BYTE PTR [esp+esi*8],ah
  4103a1:	mov    al,ds:0x85680165
  4103a7:	iret   
  4103a8:	sbb    ebp,DWORD PTR [ebx-0x16]
  4103ab:	cwde   
  4103ac:	xor    BYTE PTR [edx-0x46],cl
  4103af:	lods   eax,DWORD PTR ds:[esi]
  4103b0:	out    0x53,eax
  4103b2:	das    
  4103b3:	mov    ecx,DWORD PTR [ecx-0x7a435a14]
  4103b9:	sub    ebx,edx
  4103bb:	jbe    0x410376
  4103bd:	push   edx
  4103be:	test   BYTE PTR ds:0x1b655d72,bl
  4103c4:	(bad)  
  4103c5:	inc    BYTE PTR [ebx+0x6]
  4103c8:	dec    edx
  4103c9:	sar    BYTE PTR [ebx-0x72f72977],0xe1
  4103d0:	out    0xdb,al
  4103d2:	mov    ch,0xef
  4103d4:	xor    DWORD PTR [edi-0x6c],esp
  4103d7:	inc    esi
  4103d8:	fs push 0x5f9317d9
  4103de:	pop    edx
  4103df:	les    ecx,FWORD PTR [ecx]
  4103e1:	or     cl,BYTE PTR [ebp+0x6c47a8b5]
  4103e7:	stos   DWORD PTR es:[edi],eax
  4103e8:	pushf  
  4103e9:	outs   dx,DWORD PTR ds:[esi]
  4103ea:	outs   dx,BYTE PTR ds:[esi]
  4103eb:	mov    ebx,DWORD PTR [ebx]
  4103ed:	imul   ebp,ebp,0xc40c0654
  4103f3:	jno    0x41042a
  4103f5:	gs adc al,0x69
  4103f8:	jne    0x410424
  4103fa:	mov    esi,0xecd23553
  4103ff:	mov    al,ds:0x4761feb5
  410404:	ret    0x698c
  410407:	dec    edi
  410408:	jne    0x41042a
  41040a:	add    al,0x2e
  41040c:	dec    eax
  41040d:	in     eax,0xda
  41040f:	pop    ecx
  410410:	xchg   BYTE PTR [esi],ch
  410412:	add    DWORD PTR [ebx-0x3459c9d7],ebp
  410418:	es jns 0x4103d8
  41041b:	int3   
  41041c:	shr    DWORD PTR [esp+esi*8+0x27048b13],1
  410423:	push   ebp
  410424:	xor    DWORD PTR [esi],edx
  410426:	and    dh,BYTE PTR [ebx-0x1b8ef4d8]
  41042c:	inc    esi
  41042d:	(bad)  
  41042e:	jge    0x4103f5
  410430:	or     ch,BYTE PTR [ebx-0x40]
  410433:	nop
  410434:	mov    esp,0xec26c84b
  410439:	xchg   edi,eax
  41043a:	pop    ecx
  41043b:	scas   eax,DWORD PTR es:[edi]
  41043c:	icebp  
  41043d:	test   eax,0x7fd44472
  410442:	int    0xe0
  410444:	jge    0x410413
  410446:	popf   
  410447:	shl    BYTE PTR [ebx],0xc1
  41044a:	cmp    ah,BYTE PTR [ebx+0x2e]
  41044d:	sbb    ah,dh
  41044f:	pop    edi
  410450:	cmp    BYTE PTR [edx-0x1e],bh
  410453:	int    0x78
  410455:	in     eax,dx
  410456:	mov    DWORD PTR [edi],esp
  410458:	cmp    BYTE PTR [edx],0x4b
  41045b:	mov    ah,0x3f
  41045d:	cwde   
  41045e:	push   0xffffffc4
  410460:	mov    dh,0x52
  410462:	neg    BYTE PTR [edx-0x80]
  410465:	outs   dx,DWORD PTR ds:[esi]
  410466:	mov    eax,0xa0226850
  41046b:	fstp   QWORD PTR [eax]
  41046d:	jecxz  0x410492
  41046f:	push   0x8d14e0b3
  410474:	xchg   ebx,eax
  410475:	pop    ds
  410476:	ret    
  410477:	loopne 0x41046e
  410479:	test   ch,bl
  41047b:	cmp    edi,ebp
  41047d:	ret    0x1aa2
  410480:	not    esi
  410482:	sbb    ch,dh
  410484:	retf   0x7785
  410487:	mov    BYTE PTR [esi+0x27],0x58
  41048b:	jmp    0x4726a18b
  410490:	jb     0x41043b
  410492:	and    edi,DWORD PTR [ebx]
  410494:	pop    eax
  410495:	loopne 0x410456
  410497:	cmp    eax,DWORD PTR [edx+edi*4]
  41049a:	pushf  
  41049b:	outs   dx,BYTE PTR ds:[esi]
  41049c:	sub    eax,0xb5bc1ed2
  4104a1:	pop    ds
  4104a2:	nop
  4104a3:	push   ebp
  4104a4:	add    eax,0xb80768b0
  4104a9:	xchg   BYTE PTR ss:[eax+0x2136eff6],al
  4104b0:	arpl   WORD PTR [ebp-0x40],dx
  4104b3:	mov    al,0xbc
  4104b5:	enter  0x30d,0xa2
  4104b9:	inc    ecx
  4104ba:	xchg   esp,eax
  4104bb:	in     al,dx
  4104bc:	xchg   ebp,eax
  4104bd:	scas   eax,DWORD PTR es:[edi]
  4104be:	or     DWORD PTR [edx-0x373f890b],esp
  4104c4:	sub    DWORD PTR [esi],0xffffffe9
  4104c7:	pop    ss
  4104c8:	sub    eax,0xa8830df5
  4104cd:	adc    al,0xfa
  4104cf:	xor    ecx,esp
  4104d1:	adc    dl,BYTE PTR ds:0xcfde2058
  4104d7:	xchg   ebp,eax
  4104d8:	mov    esi,0x5acd075
  4104dd:	pop    ecx
  4104df:	mov    bh,0xd2
  4104e1:	test   DWORD PTR [esi-0x2bbd9583],0xbe83558f
  4104eb:	pop    ds
  4104ec:	test   dh,cl
  4104ee:	(bad)  
  4104ef:	std    
  4104f0:	ret    0xb912
  4104f3:	int3   
  4104f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104f5:	dec    edx
  4104f6:	dec    esp
  4104f7:	xchg   ebx,eax
  4104f8:	in     al,0xa6
  4104fa:	pushf  
  4104fb:	outs   dx,DWORD PTR ds:[esi]
  4104fc:	inc    ebp
  4104fd:	xchg   edx,eax
  4104fe:	fmul   DWORD PTR [edi+0x5d]
  410501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410502:	test   dl,ah
  410504:	sub    BYTE PTR [eax+0x1f],cl
  410507:	enter  0x24f5,0xd6
  41050b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41050c:	jns    0x4104c9
  41050e:	xor    al,bh
  410510:	cdq    
  410511:	ins    BYTE PTR es:[edi],dx
  410512:	enter  0xfa24,0x40
  410516:	out    dx,al
  410517:	jle    0x4104f8
  410519:	and    eax,0x65d3be8d
  41051e:	ret    0xf504
  410521:	ins    BYTE PTR es:[edi],dx
  410522:	jb     0x410528
  410524:	cli    
  410525:	and    DWORD PTR [eax+ebp*2+0x7703a52c],ecx
  41052c:	jmp    0x6789:0x60c09d15
  410533:	mov    ah,0x95
  410535:	(bad)  
  410536:	popf   
  410537:	int3   
  410538:	sub    ecx,DWORD PTR [edx+0x2a]
  41053b:	mov    WORD PTR [eax-0x3aecf434],cs
  410541:	xchg   bh,dl
  410543:	popf   
  410544:	mov    WORD PTR [ebp+0x43],cs
  410547:	ror    DWORD PTR [ebx-0x719cde66],0xb1
  41054e:	in     eax,dx
  41054f:	scas   eax,DWORD PTR es:[edi]
  410550:	aas    
  410551:	or     esi,DWORD PTR [ebx-0x2388087c]
  410557:	jo     0x41052f
  410559:	ret    0x8be6
  41055c:	or     DWORD PTR [eax],esp
  41055e:	and    BYTE PTR [ebx*4-0x5d3ffa2d],bl
  410565:	xor    BYTE PTR [ecx+eax*8+0x47d4cc92],ah
  41056c:	push   es
  41056d:	push   esp
  41056e:	sahf   
  41056f:	aaa    
  410570:	pop    esi
  410571:	cmp    ebx,ebp
  410573:	loop   0x410505
  410575:	out    dx,al
  410576:	out    0x7d,eax
  410578:	(bad)  
  410579:	sub    eax,0x8d7ba72c
  41057e:	or     ecx,0xffffffdd
  410581:	and    eax,0x82b31258
  410586:	sbb    DWORD PTR [edx],edi
  410588:	adc    ebx,esp
  41058a:	inc    esi
  41058b:	sub    eax,0xe2190e7f
  410590:	aad    0x55
  410592:	sub    esp,DWORD PTR [eax]
  410594:	or     eax,0x47fcf04c
  410599:	sub    ebp,DWORD PTR [edi]
  41059b:	fwait
  41059c:	push   0x7a8fac73
  4105a1:	mov    dl,0xb8
  4105a3:	ss call 0x72fa884e
  4105a9:	adc    al,BYTE PTR [ebp+ecx*2+0x51]
  4105ad:	push   ecx
  4105ae:	in     al,0xf7
  4105b0:	fist   WORD PTR [ebp+eax*4-0x2e]
  4105b4:	les    esp,FWORD PTR [eax+0x6cfefca8]
  4105ba:	je     0x4105aa
  4105bc:	xlat   BYTE PTR ds:[ebx]
  4105bd:	nop
  4105be:	push   edi
  4105bf:	sub    al,0x1e
  4105c1:	int    0x1f
  4105c3:	js     0x4105ba
  4105c5:	adc    al,0x77
  4105c7:	enter  0x1a3f,0x7
  4105cb:	sub    edi,DWORD PTR [ebp+0x4dbb395c]
  4105d1:	or     eax,0x1e961f54
  4105d6:	or     BYTE PTR [eax],ah
  4105d8:	mov    al,0x80
  4105da:	jnp    0x410560
  4105dc:	cs xchg esp,eax
  4105de:	daa    
  4105df:	dec    eax
  4105e0:	add    al,0x20
  4105e2:	imul   DWORD PTR [esi]
  4105e4:	ss xchg ebx,eax
  4105e6:	mov    eax,0xd4833945
  4105eb:	dec    eax
  4105ec:	sahf   
  4105ed:	or     eax,0x90d62863
  4105f2:	dec    edi
  4105f3:	pop    ss
  4105f4:	mov    al,0xee
  4105f6:	xchg   esi,eax
  4105f7:	pop    ebp
  4105f8:	ficomp WORD PTR [edx+0x3c]
  4105fb:	outs   dx,DWORD PTR ds:[esi]
  4105fc:	arpl   WORD PTR [esi-0x5a],bx
  4105ff:	adc    BYTE PTR [edi],0xb9
  410602:	ja     0x4105fa
  410604:	ja     0x4105e7
  410606:	ins    DWORD PTR es:[edi],dx
  410607:	xchg   esp,eax
  410608:	fild   QWORD PTR [ebx+0x78721d60]
  41060e:	mov    al,0x1b
  410610:	adc    bh,dl
  410612:	pop    esi
  410613:	dec    eax
  410614:	sub    bl,BYTE PTR [eax+0x3c]
  410617:	bnd ja 0x41061d
  41061a:	dec    esi
  41061b:	arpl   si,si
  41061d:	push   esi
  41061e:	sbb    BYTE PTR [eax+esi*1-0x55bf59c3],al
  410625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410626:	push   0x72
  410628:	int3   
  410629:	popa   
  41062a:	cmp    ch,BYTE PTR [edi]
  41062c:	push   ecx
  41062d:	fwait
  41062e:	pop    esp
  41062f:	fs movsx edi,ax
  410633:	(bad)  [edi+0x1dc2e38b]
  410639:	push   ecx
  41063a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41063b:	sbb    DWORD PTR [ebx-0x5a],esp
  41063e:	aaa    
  41063f:	sub    ebp,0x61
  410642:	mov    dl,BYTE PTR [esp+eax*8+0x64]
  410646:	(bad)  
  410647:	add    eax,edi
  410649:	rcl    bl,cl
  41064b:	rcl    DWORD PTR [edi-0x5917e408],0x54
  410652:	icebp  
  410653:	pop    eax
  410654:	pop    eax
  410655:	cld    
  410656:	pusha  
  410657:	xor    edx,DWORD PTR [ecx]
  410659:	xchg   ebx,eax
  41065a:	out    0x5,al
  41065c:	cmp    al,0x6d
  41065e:	adc    esp,ebx
  410660:	or     DWORD PTR [edx+0x63],0x52
  410664:	xor    dh,bh
  410666:	adc    ah,BYTE PTR [edx-0x65]
  410669:	hlt    
  41066a:	adc    esp,esp
  41066c:	xor    edx,DWORD PTR [ebx-0x44b012f0]
  410672:	jno    0x410605
  410674:	repz (bad) 
  410676:	rcr    BYTE PTR [ebx+0x16],cl
  410679:	xchg   esi,eax
  41067a:	mov    ds:0x7dc93dc6,eax
  41067f:	pop    ds
  410680:	jne    0x4106ad
  410682:	cwde   
  410683:	sbb    dl,bl
  410685:	dec    eax
  410686:	inc    ebp
  410687:	mov    ds:0x4881b6c8,eax
  41068c:	cmp    esp,esp
  41068e:	repz ficomp DWORD PTR [si-0xbbd]
  410694:	rcr    DWORD PTR [ebp+0xd3c22c7],1
  41069a:	sbb    al,0x81
  41069c:	adc    eax,0x9330a68f
  4106a1:	or     BYTE PTR [edx+0x340d4677],ah
  4106a7:	mov    esi,0x99f77df3
  4106ac:	test   al,0x90
  4106ae:	stos   DWORD PTR es:[edi],eax
  4106af:	data16 jle 0x410651
  4106b2:	mov    edx,0x675827
  4106b7:	jno    0x4106e7
  4106b9:	jmp    0x4106fa
  4106bb:	jecxz  0x410664
  4106bd:	nop
  4106be:	xchg   ecx,eax
  4106bf:	cs xor al,0xa3
  4106c2:	and    ah,BYTE PTR [edi]
  4106c4:	dec    ebp
  4106c5:	(bad)  
  4106c6:	lock je 0x410653
  4106c9:	stos   DWORD PTR es:[edi],eax
  4106ca:	mov    esp,0x4731582b
  4106cf:	fcmove st,st(3)
  4106d1:	cmc    
  4106d2:	mov    edx,DWORD PTR [edx-0x5f]
  4106d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106d6:	inc    ecx
  4106d7:	mov    ah,0x16
  4106d9:	cmc    
  4106da:	lods   al,BYTE PTR ds:[esi]
  4106db:	scas   eax,DWORD PTR es:[edi]
  4106dc:	add    DWORD PTR [esi],esi
  4106de:	(bad)  
  4106df:	xor    dl,BYTE PTR [eax-0x47]
  4106e2:	inc    ebx
  4106e3:	cs pushf 
  4106e5:	aas    
  4106e6:	aas    
  4106e7:	jge    0x41071f
  4106e9:	jo     0x41073f
  4106eb:	and    ecx,esi
  4106ed:	mov    bh,0x4
  4106ef:	cdq    
  4106f0:	and    DWORD PTR [ebx+eax*2],edi
  4106f3:	jae    0x41073e
  4106f5:	(bad)  
  4106f6:	pop    edi
  4106f7:	jns    0x410707
  4106f9:	jno    0x4106b4
  4106fb:	xor    ch,BYTE PTR [ebx+0x75]
  4106fe:	div    ch
  410700:	rol    bl,0xda
  410703:	aad    0x6e
  410705:	push   esp
  410706:	fidiv  DWORD PTR [ebp+0x22]
  410709:	int3   
  41070a:	in     eax,0xa7
  41070c:	test   DWORD PTR [ebx+0x8b55ddc],esi
  410712:	sbb    al,0xa0
  410714:	dec    esi
  410715:	out    dx,al
  410716:	add    edi,DWORD PTR [ebx-0x3306d895]
  41071c:	sbb    eax,0x74f2d13a
  410721:	pushf  
  410722:	aam    0x82
  410724:	pop    eax
  410725:	jnp    0x410705
  410727:	fcom   DWORD PTR [ebx-0x5b]
  41072a:	icebp  
  41072b:	mov    dl,0xa4
  41072d:	pop    esi
  41072e:	repz xchg esp,eax
  410730:	add    DWORD PTR [eax],edx
  410732:	outs   dx,DWORD PTR ds:[esi]
  410733:	out    0x39,eax
  410735:	mov    esp,0xeb2266ad
  41073a:	sbb    eax,0x89641253
  41073f:	cli    
  410740:	cwde   
  410741:	call   0xb2362b57
  410746:	in     al,dx
  410747:	pmaxsw mm2,mm0
  41074a:	xlat   BYTE PTR ds:[ebx]
  41074b:	in     al,0xb8
  41074d:	(bad)  
  41074e:	jnp    0x410759
  410750:	push   esp
  410751:	outs   dx,DWORD PTR ds:[esi]
  410752:	and    eax,0xe0d978e7
  410757:	test   eax,0x21f4f93e
  41075c:	ins    BYTE PTR es:[edi],dx
  41075d:	mul    BYTE PTR [eax-0x79aa3cdf]
  410763:	fs and eax,0x4e06d7c0
  410769:	shl    DWORD PTR [edi-0x72],cl
  41076c:	lods   eax,DWORD PTR ds:[esi]
  41076d:	push   ebx
  41076e:	pop    ebx
  41076f:	or     eax,0xaa4caa95
  410774:	nop
  410775:	adc    edi,0x4b8ea671
  41077b:	out    0x45,al
  41077d:	jl     0x41074c
  41077f:	popf   
  410780:	iret   
  410781:	cwde   
  410782:	retf   0xe4fb
  410785:	cwde   
  410786:	dec    esi
  410787:	inc    edx
  410788:	fsub   QWORD PTR [edx+0x4dc1a1f0]
  41078e:	pushf  
  41078f:	push   ecx
  410790:	push   esp
  410791:	ret    0xb91e
  410794:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410796:	es sub al,0xea
  410799:	or     al,0xac
  41079b:	fcom   DWORD PTR [eiz*8-0x3dfc3f26]
  4107a2:	test   eax,0x5865b679
  4107a7:	fwait
  4107a8:	jbe    0x410790
  4107aa:	into   
  4107ab:	addr16 (bad) 
  4107ae:	fadd   QWORD PTR [edi]
  4107b0:	fdivr  st(4),st
  4107b2:	iret   
  4107b3:	loopne 0x4107dc
  4107b5:	cmp    dh,al
  4107b7:	mov    bh,0xe2
  4107b9:	dec    esp
  4107ba:	in     al,dx
  4107bb:	scas   eax,DWORD PTR es:[edi]
  4107bc:	adc    edi,DWORD PTR [ebx]
  4107be:	jecxz  0x410742
  4107c0:	(bad)  
  4107c1:	out    0x9b,al
  4107c3:	xor    DWORD PTR [ebx],edx
  4107c5:	mov    edx,0x8fb73231
  4107ca:	push   es
  4107cb:	retf   
  4107cc:	add    eax,0x57af0020
  4107d1:	push   ebx
  4107d2:	push   es
  4107d3:	mov    dl,dl
  4107d5:	je     0x41078d
  4107d7:	test   cl,ch
  4107d9:	sbb    esp,DWORD PTR [ecx-0x64b788c2]
  4107df:	shl    DWORD PTR [edi+esi*8],1
  4107e2:	push   ss
  4107e3:	(bad)  
  4107e4:	mul    BYTE PTR [edi]
  4107e6:	jge    0x4107f8
  4107e8:	sbb    bh,BYTE PTR [esi+0x77]
  4107eb:	lea    edx,[ebp-0x14106e2c]
  4107f1:	jb     0x410788
  4107f3:	lahf   
  4107f4:	aas    
  4107f5:	mov    bl,0x4
  4107f7:	push   esp
  4107f8:	test   DWORD PTR [esi+ebp*2],esp
  4107fb:	aas    
  4107fc:	xchg   ecx,eax
  4107fd:	jb     0x4107ec
  4107ff:	ja     0x410850
  410801:	mov    esp,0xf29f43b3
  410806:	adc    eax,0x100c200a
  41080b:	mov    dh,0xa7
  41080d:	dec    ebx
  41080e:	dec    esp
  41080f:	sbb    al,0x4d
  410811:	adc    BYTE PTR [ebx+0x5d23c090],0xa6
  410818:	js     0x410805
  41081a:	(bad)  
  41081b:	jo     0x410858
  41081d:	jmp    0x48492e87
  410822:	add    BYTE PTR [edi-0x1875a4fa],bh
  410828:	mov    bh,0x8e
  41082a:	adc    BYTE PTR [edi-0x1ce3a601],bl
  410830:	cmp    BYTE PTR ds:0x12e9d864,dh
  410836:	jb     0x41081a
  410838:	pop    ebp
  410839:	pop    ds
  41083a:	aad    0xee
  41083c:	pop    ebp
  41083d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41083e:	add    ebx,ebp
  410840:	mov    esi,0x2053a80
  410845:	pop    ss
  410846:	push   edx
  410847:	cmp    eax,0xdfa65653
  41084c:	imul   ebp,DWORD PTR [ebx-0x15],0xa80b371a
  410853:	arpl   WORD PTR ss:[ecx-0x77],sp
  410857:	mov    eax,0xafb9c576
  41085c:	cmc    
  41085d:	std    
  41085e:	xor    BYTE PTR [ebp-0x718390f5],dl
  410864:	xor    BYTE PTR [edi+0x33],ah
  410867:	scas   al,BYTE PTR es:[edi]
  410868:	jp     0x410811
  41086a:	push   esi
  41086b:	dec    ebp
  41086c:	push   cs
  41086d:	shr    edi,1
  41086f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410870:	inc    esi
  410871:	xlat   BYTE PTR ds:[ebx]
  410872:	jg     0x410844
  410874:	mov    al,ds:0xfd987742
  410879:	mov    BYTE PTR [esi+ebx*2+0x132e16b3],bh
  410880:	sub    al,0x64
  410882:	cld    
  410883:	pop    ss
  410884:	push   esi
  410885:	leave  
  410886:	push   esp
  410887:	xor    bh,BYTE PTR ss:[ecx+0x3f]
  41088b:	add    eax,0xb73969e7
  410890:	xchg   ebx,eax
  410891:	cmp    al,0x87
  410893:	xchg   al,cl
  410895:	mov    ds:0x23ac4b0c,al
  41089a:	jg     0x4108cc
  41089c:	dec    esp
  41089d:	pop    esi
  41089e:	icebp  
  41089f:	jns    0x4108e4
  4108a1:	loope  0x4108c1
  4108a3:	test   DWORD PTR [esi],eax
  4108a5:	inc    edx
  4108a6:	popa   
  4108a7:	mov    esi,0x66639395
  4108ac:	retf   
  4108ad:	repnz cmp ch,BYTE PTR [ecx]
  4108b0:	mov    WORD PTR [esi-0x25],cs
  4108b3:	sar    BYTE PTR [edx+0x4b9d06bf],cl
  4108b9:	ins    DWORD PTR es:[edi],dx
  4108ba:	popf   
  4108bb:	outs   dx,BYTE PTR ds:[esi]
  4108bc:	loopne 0x410917
  4108be:	inc    eax
  4108bf:	pop    ecx
  4108c0:	mov    cl,0xef
  4108c2:	repz xchg edx,eax
  4108c4:	in     eax,0xe0
  4108c6:	shr    cl,0xd
  4108c9:	and    BYTE PTR [esi],dh
  4108cb:	dec    esp
  4108cc:	loopne 0x4108fe
  4108ce:	mov    al,ds:0x380ac9e6
  4108d3:	mov    edx,0x99c19578
  4108d8:	ror    DWORD PTR [esi+0x7eec7238],1
  4108de:	fild   DWORD PTR [edi+ecx*8]
  4108e1:	push   ebp
  4108e2:	xchg   ebx,eax
  4108e3:	xchg   ebx,eax
  4108e4:	push   ss
  4108e5:	jge    0x4108e1
  4108e7:	add    al,0x80
  4108e9:	js     0x410905
  4108eb:	aad    0xa8
  4108ed:	mov    ecx,0x288a621
  4108f2:	jmp    0xed971dca
  4108f7:	out    0x71,al
  4108f9:	sub    DWORD PTR [ebx+ecx*4],ebx
  4108fc:	mov    bl,0x9c
  4108fe:	imul   eax,eax,0xc35a958b
  410904:	and    DWORD PTR [eax+0x5e],esp
  410907:	imul   ecx,DWORD PTR [ebp-0x3],0xffffffec
  41090b:	and    BYTE PTR [edx],0xda
  41090e:	aam    0xdf
  410910:	dec    ebx
  410911:	mov    ebp,0x7e917934
  410916:	mov    eax,ds:0x4b56ad8
  41091b:	cmp    BYTE PTR [ebp-0x58],cl
  41091e:	fndisi(8087 only) 
  410920:	rcl    bl,1
  410922:	sbb    DWORD PTR [edi-0x41],esp
  410925:	jae    0x410990
  410927:	(bad)  
  410928:	xor    eax,0xc577ed61
  41092d:	fcomp  DWORD PTR [ebp-0x1d]
  410930:	outs   dx,DWORD PTR ds:[esi]
  410931:	aas    
  410932:	lds    esi,FWORD PTR [esp+ecx*8+0x3f]
  410936:	mov    dl,0x96
  410938:	push   ebx
  410939:	and    edi,DWORD PTR [ebp+0x10]
  41093c:	push   0xa5101e0e
  410941:	call   0x67bd6692
  410946:	adc    BYTE PTR [eax-0x5],al
  410949:	fdivr  DWORD PTR [ebp+0x43]
  41094c:	add    eax,0x16c3ad5c
  410951:	data16 fbld TBYTE PTR [edi-0x1b]
  410955:	loop   0x410921
  410957:	mov    cs,eax
  410959:	sub    eax,0x794c9621
  41095e:	test   eax,0xd03a3049
  410963:	cli    
  410964:	and    eax,0x2d7543e9
  410969:	fs or  bh,bh
  41096c:	pop    edx
  41096d:	inc    ebp
  41096e:	pop    ebp
  41096f:	jg     0x41090e
  410971:	add    BYTE PTR [ebp-0x1b],cl
  410974:	or     eax,0x9f20f331
  410979:	aad    0x2c
  41097b:	push   edi
  41097c:	retf   0xd59b
  41097f:	stc    
  410980:	sub    DWORD PTR [eax],edi
  410982:	add    bl,bh
  410984:	mov    al,0xbb
  410986:	(bad)  
  410987:	mul    DWORD PTR [eax+0x78]
  41098a:	push   cs
  41098b:	push   ebp
  41098c:	or     BYTE PTR [ebp-0x2b5da4ee],bh
  410992:	out    0x4e,al
  410994:	in     al,0x3
  410996:	and    eax,0xb1c8aaee
  41099b:	repnz sar al,cl
  41099e:	push   0x40
  4109a0:	jns    0x410971
  4109a2:	sahf   
  4109a3:	pop    ecx
  4109a4:	jle    0x410973
  4109a6:	test   DWORD PTR [ecx-0x3e],ebx
  4109a9:	test   eax,0xa02d9d08
  4109ae:	xor    DWORD PTR [ecx-0x9993e6e],ecx
  4109b4:	jns    0x410943
  4109b6:	js     0x410a04
  4109b8:	sbb    BYTE PTR [ecx-0x18c2f253],cl
  4109be:	shl    BYTE PTR [edx+0x5a1e4cb7],0x4c
  4109c5:	dec    edx
  4109c6:	dec    esi
  4109c7:	test   al,0xd2
  4109c9:	pop    ds
  4109ca:	pop    edi
  4109cb:	add    al,0xba
  4109cd:	dec    eax
  4109ce:	xor    al,0x6a
  4109d0:	xor    eax,0x3682d030
  4109d5:	leave  
  4109d6:	bound  edi,QWORD PTR ds:0xb7fff7d
  4109dc:	pop    edi
  4109dd:	fld    st(6)
  4109df:	js     0x4109ac
  4109e1:	jnp    0x410a33
  4109e3:	mov    eax,ds:0x11d17b40
  4109e8:	(bad)  
  4109e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109ea:	scas   eax,DWORD PTR es:[edi]
  4109eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109ec:	pop    ebx
  4109ed:	xchg   edx,eax
  4109ee:	pop    esi
  4109ef:	(bad)  
  4109f0:	push   ecx
  4109f1:	add    eax,0x9688a478
  4109f6:	and    esp,ecx
  4109f8:	jl     0x410a5c
  4109fa:	ja     0x41098d
  4109fc:	xchg   ebx,eax
  4109fd:	sbb    al,0x5f
  4109ff:	lahf   
  410a00:	aad    0x6
  410a02:	inc    edx
  410a03:	inc    edi
  410a04:	pop    ebp
  410a05:	mov    esp,0x8306e6ed
  410a0a:	in     al,0xd7
  410a0c:	add    al,0xed
  410a0e:	mov    edx,0xabb59f7a
  410a13:	in     eax,dx
  410a14:	dec    esi
  410a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a16:	or     al,0xdc
  410a18:	adc    DWORD PTR [ebp+ecx*8+0x40],edx
  410a1c:	int3   
  410a1d:	ja     0x4109c8
  410a1f:	pop    esi
  410a20:	mov    edi,ds
  410a22:	push   edi
  410a23:	out    dx,al
  410a24:	lock into 
  410a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a27:	retf   
  410a28:	pop    edi
  410a29:	mov    ecx,esi
  410a2b:	cwde   
  410a2c:	mov    esi,0x82f884fd
  410a31:	sbb    ch,BYTE PTR [esp+ebx*4-0x2e]
  410a35:	(bad)  
  410a36:	sub    DWORD PTR [ebp-0x5a8af571],edi
  410a3c:	retf   0x8cb7
  410a3f:	add    eax,0xe85ece85
  410a44:	loop   0x4109c8
  410a46:	push   ebx
  410a47:	fstp   QWORD PTR ss:[eax-0x7d7242db]
  410a4e:	pop    es
  410a4f:	adc    ebx,ecx
  410a51:	imul   esi,DWORD PTR [esi-0x28],0x62
  410a55:	pop    ebp
  410a56:	or     dl,dh
  410a58:	leave  
  410a59:	mov    ebp,0x2a4db355
  410a5e:	ds inc edx
  410a60:	dec    ebx
  410a61:	in     al,dx
  410a62:	gs int3 
  410a64:	nop
  410a65:	loope  0x410a6a
  410a67:	push   edi
  410a68:	(bad)  
  410a69:	adc    DWORD PTR [esi-0x71],ebp
  410a6c:	sub    bh,BYTE PTR [ebx]
  410a6e:	cmp    edx,esp
  410a70:	or     BYTE PTR ds:0x8173dc96,bl
  410a76:	jl     0x410a30
  410a78:	mov    ecx,DWORD PTR [eax+0x1b]
  410a7b:	adc    ebx,edx
  410a7d:	cmp    BYTE PTR [edx],ch
  410a7f:	(bad)  
  410a80:	rcr    DWORD PTR [edx+0x61068246],0x6d
  410a87:	dec    esi
  410a88:	jb     0x410aea
  410a8a:	jb     0x410a58
  410a8c:	push   0x54dd4573
  410a91:	sar    DWORD PTR [ebx-0x26fe8892],0x71
  410a98:	les    esp,FWORD PTR [esi]
  410a9a:	mov    ebx,0xd5424a3c
  410a9f:	jno    0x410aaf
  410aa1:	inc    edi
  410aa2:	xor    al,0x98
  410aa4:	xchg   ebx,eax
  410aa5:	mov    fs,eax
  410aa7:	in     al,0x5a
  410aa9:	shr    DWORD PTR [eax+0x55261310],1
  410aaf:	or     cl,BYTE PTR [ecx+ebp*8-0x2e91d9cc]
  410ab6:	nop
  410ab7:	push   0x70
  410ab9:	jbe    0x410a43
  410abb:	fcomp  DWORD PTR ss:[ecx+0x4]
  410abf:	sub    eax,0x3ce0f037
  410ac4:	cmp    al,0x6
  410ac6:	sub    eax,0xbfda2cb
  410acb:	mov    ebp,0x8da15645
  410ad0:	js     0x410a7a
  410ad2:	mov    bh,0xe0
  410ad4:	pop    esi
  410ad5:	inc    esi
  410ad6:	xchg   esi,eax
  410ad7:	push   ebp
  410ad8:	je     0x410ac8
  410ada:	sub    al,0x18
  410adc:	pushf  
  410add:	mov    ebp,0xea32b94c
  410ae2:	push   ds
  410ae3:	mov    eax,ds:0xb5c3602a
  410ae8:	cmp    ch,BYTE PTR [edx+edi*2]
  410aeb:	pop    esp
  410aec:	add    BYTE PTR [ebx+0x3b],dh
  410aef:	mov    DWORD PTR [ebp+0x7248871b],edx
  410af5:	mov    esi,0x202da9ae
  410afa:	aas    
  410afb:	mov    DWORD PTR [esi+0x3f],ebp
  410afe:	sbb    eax,0xb7e5f40b
  410b03:	loope  0x410a95
  410b05:	or     al,0x35
  410b07:	adc    DWORD PTR [esi],0x6b9f4d33
  410b0d:	jbe    0x410b72
  410b0f:	imul   edx,DWORD PTR [ecx+0xbd04d40],0x5b8aa730
  410b19:	push   cs
  410b1a:	pop    eax
  410b1b:	inc    esp
  410b1c:	test   al,0x7f
  410b1e:	jno    0x410b6b
  410b20:	jmp    0xba6b:0x7891f144
  410b27:	add    ebx,DWORD PTR [edi-0x7f]
  410b2a:	cmp    BYTE PTR [ebp-0x1f],ch
  410b2d:	js     0x410b5d
  410b2f:	mov    edi,0xfd3fd30c
  410b34:	sub    al,0x2f
  410b36:	fwait
  410b37:	test   al,0xf6
  410b39:	dec    esp
  410b3a:	(bad)  
  410b3b:	not    BYTE PTR [edx+0x626f095f]
  410b41:	cli    
  410b42:	cmp    BYTE PTR [ebp-0x57749563],bl
  410b48:	dec    edi
  410b49:	inc    ecx
  410b4a:	push   0xffffff8b
  410b4c:	xchg   ebp,eax
  410b4d:	cmc    
  410b4e:	adc    dh,BYTE PTR [esi+0x6f1daf98]
  410b54:	stos   DWORD PTR es:[edi],eax
  410b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b56:	or     eax,0x4b53c32a
  410b5b:	sub    edi,DWORD PTR [ebx]
  410b5d:	or     DWORD PTR [ecx-0xa6ad099],0x99f240b5
  410b67:	scas   eax,DWORD PTR es:[edi]
  410b68:	fstp   DWORD PTR [ebx+0x7b]
  410b6b:	pop    ebp
  410b6c:	jge    0x410b84
  410b6e:	xchg   ecx,eax
  410b6f:	or     al,0xc6
  410b71:	jge    0x410b93
  410b73:	mov    edi,0xd33fb731
  410b78:	pop    esi
  410b79:	sbb    al,0x90
  410b7b:	punpckldq mm5,mm1
  410b7e:	push   ds
  410b7f:	dec    edi
  410b80:	scas   al,BYTE PTR es:[edi]
  410b81:	ss dec eax
  410b83:	les    ecx,FWORD PTR [edx+0x2405bfb2]
  410b89:	popa   
  410b8a:	in     al,0xc1
  410b8c:	push   esi
  410b8d:	jb     0x410ba7
  410b8f:	sbb    DWORD PTR [ebx+0x6e0b18ca],edx
  410b95:	mov    esi,0xc2d69323
  410b9a:	xlat   BYTE PTR ds:[ebx]
  410b9b:	mov    dl,0x6f
  410b9d:	ja     0x410b20
  410b9f:	mov    bl,BYTE PTR [ebp+0x60b126af]
  410ba5:	sbb    eax,0x9a5d2987
  410baa:	adc    eax,0x39d3b98e
  410baf:	cmp    ch,0x6c
  410bb2:	(bad)  
  410bb3:	in     eax,0xfe
  410bb5:	ins    DWORD PTR es:[edi],dx
  410bb6:	lds    ebp,FWORD PTR [edx-0x619a85ca]
  410bbc:	push   0xffffffd9
  410bbe:	daa    
  410bbf:	dec    esp
  410bc0:	push   0x59abbb37
  410bc5:	inc    edx
  410bc6:	test   DWORD PTR [edi-0x1af56913],0xe94ce0b5
  410bd0:	xchg   edi,eax
  410bd1:	dec    ebx
  410bd2:	jns    0x410b6d
  410bd4:	retf   
  410bd5:	push   esi
  410bd6:	or     esi,DWORD PTR [ecx+0x49]
  410bd9:	bound  ebx,QWORD PTR [ebp-0x3d835025]
  410bdf:	dec    ebp
  410be0:	out    0xf5,al
  410be2:	pop    ebp
  410be3:	mov    edi,0xd5f966d7
  410be8:	cld    
  410be9:	jns    0x410bfe
  410beb:	lock mov ecx,0xfc7a063a
  410bf1:	call   0x4afb:0x4a45ad86
  410bf8:	test   BYTE PTR ds:0x69e5c18a,dh
  410bfe:	lea    edx,[ecx+0x4c16e217]
  410c04:	test   eax,0xb9af6167
  410c09:	or     BYTE PTR [ebx-0x1e6b1f5f],ch
  410c0f:	xchg   ecx,eax
  410c10:	cli    
  410c11:	cmp    ch,BYTE PTR [eax]
  410c13:	retf   
  410c14:	int3   
  410c15:	ins    DWORD PTR es:[edi],dx
  410c16:	xor    edi,DWORD PTR [edi+0x2df4f480]
  410c1c:	fmul   DWORD PTR [edx*2-0x5a727c75]
  410c23:	iret   
  410c24:	ins    DWORD PTR es:[edi],dx
  410c25:	hlt    
  410c26:	fs gs addr16 pop eax
  410c2a:	repz jle 0x410c15
  410c2d:	mov    dl,0x53
  410c2f:	xsha256 (bad)
  410c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c31:	xchg   edi,eax
  410c32:	sti    
  410c33:	idiv   BYTE PTR [ebp-0x75]
  410c36:	mov    DWORD PTR [ecx+0x17],esi
  410c39:	ins    DWORD PTR es:[edi],dx
  410c3a:	mov    al,cs:0x48ce35d3
  410c40:	or     BYTE PTR [edx-0x7d80b415],al
  410c46:	lahf   
  410c47:	mov    dh,0xce
  410c49:	dec    ebx
  410c4a:	jge    0x410c82
  410c4c:	std    
  410c4d:	iret   
  410c4e:	test   BYTE PTR [ecx],cl
  410c50:	mov    dl,0x29
  410c52:	jb     0x410c33
  410c54:	dec    edx
  410c55:	je     0x410c22
  410c57:	mov    ebp,DWORD PTR [ebp+0x1f]
  410c5a:	(bad)  ds:0x9309869
  410c60:	fdiv   QWORD PTR [ecx+0x46]
  410c63:	stc    
  410c64:	test   eax,0x43d26c88
  410c69:	jl     0x410cbe
  410c6b:	mov    bl,0x87
  410c6d:	outs   dx,BYTE PTR ds:[esi]
  410c6e:	addr16 jne 0x410c22
  410c71:	lock sahf 
  410c73:	mov    dh,0x9
  410c75:	pop    ecx
  410c76:	push   cs
  410c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c78:	jp     0x410bfe
  410c7a:	add    DWORD PTR [ebp+0x6f],esi
  410c7d:	add    bh,ch
  410c7f:	arpl   WORD PTR [edx],ax
  410c81:	mov    al,0x9c
  410c83:	(bad)  
  410c84:	int    0xa3
  410c86:	inc    ebp
  410c87:	es inc esp
  410c89:	inc    esi
  410c8a:	scas   eax,DWORD PTR es:[edi]
  410c8b:	fcos   
  410c8d:	pop    ebp
  410c8e:	jnp    0x410cb9
  410c90:	cmp    eax,0x8718f477
  410c95:	mov    edi,0x719478c6
  410c9a:	mov    edx,0x6598e3e8
  410c9f:	jl     0x410d09
  410ca1:	jb     0x410d01
  410ca3:	xor    BYTE PTR [ecx-0x63],ch
  410ca6:	jge    0x410c45
  410ca8:	stos   BYTE PTR es:[edi],al
  410ca9:	dec    edi
  410caa:	xor    esp,DWORD PTR [eax+0x2a]
  410cad:	fisub  WORD PTR [ebx+edi*2]
  410cb0:	mov    BYTE PTR [eax+0x62],bh
  410cb3:	xchg   al,dh
  410cb5:	mov    ds:0xc10b95a5,al
  410cba:	(bad)  
  410cbb:	clc    
  410cbc:	test   eax,0x6ada30b8
  410cc1:	cmp    bl,BYTE PTR [esi]
  410cc3:	hlt    
  410cc4:	mov    eax,ds:0x66b5c97
  410cc9:	cmp    eax,esp
  410ccb:	add    eax,0xd2dc34c0
  410cd0:	inc    esp
  410cd1:	xchg   ebp,eax
  410cd2:	sar    ch,0xc1
  410cd5:	inc    ebp
  410cd6:	jge    0x410cd5
  410cd8:	(bad)  
  410cd9:	cld    
  410cda:	jmp    0xae3d894d
  410cdf:	add    al,cl
  410ce1:	mov    bl,0x2b
  410ce3:	mov    WORD PTR [ecx],cs
  410ce5:	jmp    0x470ffd7d
  410cea:	dec    ebp
  410ceb:	mov    cl,0x60
  410ced:	popf   
  410cee:	daa    
  410cef:	shl    BYTE PTR [edx],cl
  410cf1:	pop    edx
  410cf2:	xchg   ecx,eax
  410cf3:	hlt    
  410cf4:	ja     0x410d65
  410cf6:	scas   eax,DWORD PTR es:[edi]
  410cf7:	xchg   DWORD PTR ds:0x3bfcf717,eax
  410cfd:	shl    BYTE PTR [ebx+eiz*8],1
  410d00:	adc    al,0x60
  410d02:	iret   
  410d03:	out    dx,al
  410d04:	sbb    DWORD PTR [eax-0x781ecd62],ebx
  410d0a:	mov    al,ds:0x4e12e3e4
  410d0f:	sub    ebx,DWORD PTR [eax-0x2d8a4643]
  410d15:	rcl    BYTE PTR [edi+0x7a],cl
  410d18:	jae    0x410d83
  410d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d1c:	pop    esi
  410d1d:	jmp    0xec50c3da
  410d22:	cwde   
  410d23:	pop    esp
  410d24:	scas   eax,DWORD PTR es:[edi]
  410d25:	xchg   edx,eax
  410d26:	jmp    0x410cab
  410d28:	push   ss
  410d29:	pushf  
  410d2a:	ins    DWORD PTR es:[edi],dx
  410d2b:	repz adc dh,al
  410d2e:	scas   al,BYTE PTR es:[edi]
  410d2f:	stc    
  410d30:	inc    esp
  410d31:	sbb    eax,0x9e5f7a31
  410d36:	fcomip st,st(4)
  410d38:	inc    ebp
  410d39:	add    BYTE PTR [edx],bl
  410d3b:	inc    ebx
  410d3c:	push   ss
  410d3d:	mov    ah,0x8b
  410d3f:	imul   esi,DWORD PTR [edi],0xffffffd9
  410d42:	imul   edi,DWORD PTR [edx+ebx*1],0xffffff86
  410d46:	loopne 0x410daf
  410d48:	rol    BYTE PTR [edi],0x51
  410d4b:	sar    BYTE PTR [ecx],0xe6
  410d4e:	and    eax,0xe7b6b010
  410d53:	push   ds
  410d54:	mov    ecx,0xe99c5058
  410d59:	(bad)  
  410d5a:	loopne 0x410ced
  410d5c:	mov    bl,bl
  410d5e:	or     DWORD PTR [esi-0x18968d6f],ebp
  410d64:	in     al,dx
  410d65:	ret    0xef1b
  410d68:	retf   0x1bd6
  410d6b:	ret    
  410d6c:	scas   al,BYTE PTR es:[edi]
  410d6d:	cmp    BYTE PTR [edx+0x3b0f2113],0x82
  410d74:	mov    ebp,0xc64c6e94
  410d79:	or     BYTE PTR [esi+ebx*8-0x4fa060a],ah
  410d80:	and    bl,BYTE PTR [eax+0x33ea33c6]
  410d86:	scas   al,BYTE PTR es:[edi]
  410d87:	mov    ebx,0x7f62f9de
  410d8c:	pop    ebp
  410d8d:	daa    
  410d8e:	jo     0x410d95
  410d90:	push   ebp
  410d91:	mov    BYTE PTR [ecx+0x20],dh
  410d94:	loope  0x410ddc
  410d96:	fcmovnb st,st(1)
  410d98:	arpl   WORD PTR [eax-0xb7b4b94],bp
  410d9e:	outs   dx,DWORD PTR ds:[esi]
  410d9f:	out    0x3c,al
  410da1:	(bad)  
  410da2:	lahf   
  410da3:	imul   esi,DWORD PTR [esi],0xe4262d30
  410da9:	aam    0xb6
  410dab:	cs inc edi
  410dad:	pop    edx
  410dae:	fild   WORD PTR [edx]
  410db0:	adc    eax,0xf5f405b7
  410db5:	lods   eax,DWORD PTR ds:[esi]
  410db6:	lds    edi,FWORD PTR [edx-0x5]
  410db9:	inc    ebp
  410dba:	jg     0x410d83
  410dbc:	xchg   esi,eax
  410dbd:	(bad)  [esi+0x48]
  410dc0:	int3   
  410dc1:	outs   dx,DWORD PTR ds:[esi]
  410dc2:	jb     0x410d68
  410dc4:	pop    ecx
  410dc5:	sub    eax,DWORD PTR [esi-0x75]
  410dc8:	pop    edi
  410dc9:	mov    bh,0xee
  410dcb:	mov    WORD PTR [esi-0x3892017],gs
  410dd1:	add    ecx,esi
  410dd3:	hlt    
  410dd4:	push   0x75abc11f
  410dd9:	nop
  410dda:	mov    dl,0xa2
  410ddc:	pop    ecx
  410ddd:	cmc    
  410dde:	push   0x70eaec27
  410de3:	mov    ds:0x8429ff20,eax
  410de8:	fbstp  TBYTE PTR [eax+0x34ae88a7]
  410dee:	mov    al,ds:0x16879bec
  410df3:	ret    0xea0b
  410df6:	jg     0x410e4c
  410df8:	mov    cl,0x14
  410dfa:	mov    ebp,0xa1e462c9
  410dff:	push   cs
  410e00:	xor    DWORD PTR [esi],0xf0c8243b
  410e06:	(bad)  
  410e08:	pop    edi
  410e09:	and    DWORD PTR [esi+0x60673211],esi
  410e0f:	fucomp st(5)
  410e11:	dec    ecx
  410e12:	loope  0x410de3
  410e14:	xchg   ebx,eax
  410e15:	mov    esi,0x1827a35e
  410e1a:	pop    ss
  410e1b:	pop    edi
  410e1c:	adc    al,BYTE PTR [esi+0x32]
  410e1f:	test   BYTE PTR [ebp-0x46bea113],al
  410e25:	les    esi,FWORD PTR [edx]
  410e27:	xchg   esp,eax
  410e28:	add    DWORD PTR [esi-0x2f],ebx
  410e2b:	xor    DWORD PTR [ecx-0x2a8e8ffa],0x5b
  410e32:	test   ah,dl
  410e34:	pop    ebx
  410e35:	push   ds
  410e36:	mov    eax,ds:0x1913fcd7
  410e3b:	add    eax,0xbf21baaa
  410e40:	mov    ecx,0x5e824d31
  410e45:	mov    ds:0x652f2403,eax
  410e4a:	nop
  410e4b:	sbb    edi,DWORD PTR [esi]
  410e4d:	sub    bh,bl
  410e4f:	(bad)  
  410e51:	lahf   
  410e52:	js     0x410e89
  410e54:	mov    edi,0x38b2950d
  410e59:	or     dl,dl
  410e5b:	add    edi,DWORD PTR [ebx+0x41]
  410e5e:	dec    eax
  410e5f:	mov    DWORD PTR [esi+0x69ebd7e1],0xc108c8d7
  410e69:	pusha  
  410e6a:	jg     0x410e31
  410e6c:	mov    ds:0x21c209a3,eax
  410e71:	cmc    
  410e72:	sub    BYTE PTR [eax+0x14b1d001],0x7
  410e79:	out    0xbc,al
  410e7b:	arpl   WORD PTR [esi],ax
  410e7d:	push   ebp
  410e7e:	push   esp
  410e7f:	fstp   DWORD PTR [esp+ebx*8+0x25c1101e]
  410e86:	enter  0x7821,0xb8
  410e8a:	loopne 0x410ebd
  410e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e8d:	xor    BYTE PTR [ecx-0x60624c6a],ch
  410e93:	mov    ecx,0x398612c1
  410e98:	call   0x61a975d2
  410e9d:	mov    esp,0x63c17519
  410ea2:	xor    al,0xaa
  410ea5:	mov    cl,0x56
  410ea7:	sub    bl,BYTE PTR [ebx]
  410ea9:	shr    BYTE PTR [eax+0x17000b4d],cl
  410eaf:	and    DWORD PTR [edi+ebp*2-0x3d],0xffffffef
  410eb4:	enter  0x9bc9,0x4d
  410eb8:	pushf  
  410eb9:	cmc    
  410eba:	sub    eax,0x59c1aabb
  410ebf:	(bad)  
  410ec0:	dec    esp
  410ec1:	dec    ebx
  410ec2:	push   0xffffffab
  410ec4:	sbb    eax,esp
  410ec6:	add    DWORD PTR [edx-0x4a0a52],ecx
  410ecc:	cmp    esi,DWORD PTR [esi-0x2]
  410ecf:	mov    DWORD PTR [ecx+0x6c],eax
  410ed2:	mov    bl,0x9a
  410ed4:	pop    edx
  410ed5:	(bad)  
  410ed6:	aad    0x3c
  410ed8:	and    al,0xb4
  410eda:	and    eax,0x4df3be78
  410edf:	inc    ebp
  410ee0:	mov    dh,0x5c
  410ee2:	rol    DWORD PTR [ebx+0x77],1
  410ee5:	mov    ecx,0x4051b1f9
  410eea:	mov    bl,0x12
  410eec:	add    DWORD PTR [esp+edi*4+0x6c],ebx
  410ef0:	imul   edi,ecx,0x1e97d8d3
  410ef6:	inc    ebp
  410ef7:	dec    eax
  410ef8:	mov    ah,0xb5
  410efa:	push   esp
  410efb:	(bad)  
  410efc:	int3   
  410efd:	fwait
  410efe:	popf   
  410eff:	mul    DWORD PTR [ebp+0x518e876d]
  410f05:	pop    eax
  410f06:	push   edi
  410f07:	mov    dl,0x8f
  410f09:	jp     0x410eee
  410f0b:	aad    0xd9
  410f0d:	push   edx
  410f0e:	mov    DWORD PTR [ebp-0x48],0xa218b128
  410f15:	fidivr DWORD PTR ds:0x776cb41d
  410f1b:	add    DWORD PTR cs:[ebx-0x168256aa],edi
  410f22:	es inc edi
  410f24:	or     al,0x8d
  410f26:	ror    BYTE PTR [ecx],0x2b
  410f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f2a:	out    dx,eax
  410f2b:	pop    es
  410f2c:	aaa    
  410f2d:	mov    BYTE PTR ds:0x589d8205,dh
  410f33:	jle    0x410f12
  410f35:	or     esp,DWORD PTR [ebp+0x51313d55]
  410f3b:	dec    esi
  410f3c:	pop    esp
  410f3d:	test   al,0x65
  410f3f:	or     al,0xc3
  410f41:	mov    ecx,0xbcd2aae9
  410f46:	push   DWORD PTR [ebx+0x50fc3407]
  410f4c:	addr16 mov ah,0xcc
  410f4f:	jae    0x410f25
  410f51:	or     eax,0x786aa8c0
  410f56:	scas   eax,DWORD PTR es:[edi]
  410f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f58:	mov    ah,0x9e
  410f5a:	test   BYTE PTR [ecx+0x18777c9d],ah
  410f60:	out    0x74,al
  410f62:	das    
  410f63:	push   eax
  410f64:	out    dx,al
  410f65:	sti    
  410f66:	sub    bh,ch
  410f68:	pop    ds
  410f69:	pusha  
  410f6a:	in     eax,0xc3
  410f6c:	inc    edx
  410f6d:	and    DWORD PTR [ecx-0xf],ebp
  410f70:	adc    edi,DWORD PTR [ebp+0x18]
  410f73:	cs popf 
  410f75:	inc    esi
  410f76:	push   esp
  410f77:	mov    esi,0xf6f2634b
  410f7c:	cs xor al,0xbd
  410f7f:	or     DWORD PTR [ecx],edi
  410f81:	pusha  
  410f82:	mov    al,0xa3
  410f84:	xor    eax,0x980d4a19
  410f89:	(bad)  
  410f8a:	fnstcw WORD PTR [ebp+0x2aea8805]
  410f90:	lds    edi,FWORD PTR [eax+0x57]
  410f93:	mov    BYTE PTR [esi],ah
  410f95:	xor    al,0x92
  410f97:	repnz test ah,0x78
  410f9b:	mov    DWORD PTR [ecx+0x26],0xcf0e437c
  410fa2:	(bad)  
  410fa5:	jp     0x410f3b
  410fa7:	shr    al,cl
  410fa9:	stos   BYTE PTR es:[edi],al
  410faa:	mov    bh,0xe4
  410fac:	repnz (bad) 
  410fae:	lds    edi,FWORD PTR [ecx+0x5679b7d7]
  410fb4:	sbb    al,0x2e
  410fb6:	loope  0x410fa3
  410fb8:	mov    cl,0x48
  410fba:	or     eax,0xecbe48f3
  410fbf:	adc    BYTE PTR [ebx],bh
  410fc1:	test   edx,eax
  410fc3:	bound  edx,QWORD PTR [esi-0x328bc808]
  410fc9:	mov    al,0xcc
  410fcb:	mov    eax,0x8273e8de
  410fd0:	and    cl,dl
  410fd2:	mov    bh,0x93
  410fd4:	cmc    
  410fd5:	sbb    DWORD PTR [esi-0x3ab0fec0],edx
  410fdb:	jl     0x410f8c
  410fdd:	fld    st(5)
  410fdf:	das    
  410fe0:	sbb    DWORD PTR [edx-0x5d9ba2b7],ebp
  410fe6:	std    
  410fe7:	pop    edx
  410fe8:	popa   
  410fe9:	fcmovbe st,st(2)
  410feb:	jno    0x410fc1
  410fed:	shl    bl,0x5f
  410ff0:	lea    ebx,[ebp-0xd]
  410ff3:	aas    
  410ff4:	mov    bh,0x1
  410ff6:	mov    ds:0x745d6df4,eax
  410ffb:	push   0xba5c0017
  411000:	mov    dl,0x48
  411002:	dec    ecx
  411003:	xchg   ecx,eax
  411004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411005:	stos   DWORD PTR es:[edi],eax
  411006:	dec    ebp
  411007:	lods   al,BYTE PTR ds:[esi]
  411008:	(bad)
  41100c:	ss leave 
  41100e:	sbb    BYTE PTR [ebp-0x1e],dh
  411011:	fucomip st,st(3)
  411013:	outs   dx,BYTE PTR ds:[esi]
  411014:	jne    0x411033
  411016:	mov    edi,0x6404b4a8
  41101b:	jae    0x41101a
  41101d:	push   esp
  41101e:	pusha  
  41101f:	outs   dx,BYTE PTR ds:[esi]
  411020:	xchg   ebx,eax
  411021:	inc    ebx
  411022:	ret    0xe1e5
  411025:	sub    edx,DWORD PTR [ecx-0x20c474cb]
  41102b:	(bad)  
  41102c:	and    al,cl
  41102e:	jl     0x411060
  411030:	adc    DWORD PTR [eax-0x10f03427],ebx
  411036:	or     esp,DWORD PTR [eax+ebp*2+0x67c24e2d]
  41103d:	sbb    DWORD PTR [ecx+0x28691dc7],0xffffffd1
  411044:	add    al,BYTE PTR [edx+0x2f149469]
  41104a:	adc    esp,esi
  41104c:	ins    DWORD PTR es:[edi],dx
  41104d:	stos   BYTE PTR es:[edi],al
  41104e:	or     DWORD PTR [edx],ecx
  411050:	aaa    
  411051:	pop    ebp
  411052:	lods   eax,DWORD PTR ds:[esi]
  411053:	cmp    eax,0xc2686740
  411058:	and    al,BYTE PTR [ecx-0x2c]
  41105b:	push   0x95ede0b5
  411060:	out    dx,eax
  411061:	xor    bh,ah
  411063:	fisubr WORD PTR [esi+0x2954fac]
  411069:	pop    ss
  41106a:	popf   
  41106b:	repnz xor BYTE PTR [edi-0x1a],ah
  41106f:	shr    DWORD PTR [edx+0x62],1
  411072:	aaa    
  411073:	pop    es
  411074:	adc    al,0x77
  411076:	test   DWORD PTR [esi],ecx
  411078:	test   DWORD PTR [esi],esi
  41107a:	pop    esi
  41107b:	iret   
  41107c:	sbb    eax,0x2e67c8a3
  411081:	cmc    
  411082:	rcl    DWORD PTR [edx+0x2dd5d5f8],1
  411088:	xor    BYTE PTR [edi],bh
  41108a:	loopne 0x411055
  41108c:	adc    eax,0x13c30f96
  411091:	xor    esi,DWORD PTR [eax+0x4b]
  411094:	xchg   BYTE PTR [esi+0x58],dl
  411097:	and    BYTE PTR fs:[edi+esi*2-0x4f8d6179],ah
  41109f:	add    esp,eax
  4110a1:	cli    
  4110a2:	ret    0x8b25
  4110a5:	xchg   esi,eax
  4110a6:	pushf  
  4110a7:	add    BYTE PTR [ebp+0x7973f360],cl
  4110ad:	addr16 mov ch,0x92
  4110b0:	inc    ebp
  4110b1:	loop   0x411084
  4110b3:	in     al,dx
  4110b4:	adc    eax,0xcb366d70
  4110b9:	jno    0x4110a6
  4110bb:	leave  
  4110bc:	xchg   ecx,eax
  4110bd:	mov    edx,0x172b1f9c
  4110c2:	scas   eax,DWORD PTR es:[edi]
  4110c3:	call   0xfe294efb
  4110c8:	push   esp
  4110c9:	sbb    eax,0x435bf7b6
  4110ce:	scas   eax,DWORD PTR es:[edi]
  4110cf:	cmp    al,0xd1
  4110d1:	test   BYTE PTR [edx+0x2ef05242],cl
  4110d7:	mov    ds:0xa9735a30,eax
  4110dc:	fnstenv [ebp-0x79193327]
  4110e2:	mov    DWORD PTR [ecx+0x1a6c9f95],edi
  4110e8:	jae    0x4110f5
  4110ea:	and    BYTE PTR [ebp-0x57068690],al
  4110f0:	daa    
  4110f1:	xchg   edi,eax
  4110f2:	hlt    
  4110f3:	loope  0x4110b5
  4110f5:	mov    ah,0xe
  4110f7:	pop    ss
  4110f8:	popf   
  4110f9:	(bad)  
  4110fa:	push   ss
  4110fb:	mov    bl,0xc1
  4110fd:	pop    ss
  4110fe:	cmp    BYTE PTR [esi-0x32],ah
  411101:	out    dx,al
  411102:	inc    ebx
  411103:	out    0x50,eax
  411105:	scas   al,BYTE PTR es:[edi]
  411106:	jl     0x4110bc
  411108:	inc    ecx
  411109:	into   
  41110a:	sub    al,0x11
  41110c:	mov    ah,0x23
  41110e:	mov    DWORD PTR [ebp+edi*1-0x54a9dfba],ecx
  411115:	jno    0x411191
  411117:	test   BYTE PTR [edx-0x7d67b686],0x88
  41111e:	push   0xde5771c7
  411123:	in     eax,dx
  411124:	jo     0x4110ed
  411126:	mov    ds:0x9857b734,eax
  41112b:	push   ebx
  41112c:	cmp    ecx,DWORD PTR [edx-0x54]
  41112f:	loopne 0x411114
  411131:	and    dh,BYTE PTR [esi+0x19a4890d]
  411137:	sub    eax,0x4e6eba3f
  41113c:	and    eax,0x239c2cf4
  411141:	push   es
  411142:	dec    eax
  411143:	rcl    edx,0xe
  411146:	pop    ebp
  411147:	adc    ah,BYTE PTR [edi+0x659b0bb0]
  41114d:	loop   0x411190
  41114f:	and    al,0x61
  411151:	inc    ebp
  411152:	arpl   cx,si
  411154:	jecxz  0x411130
  411156:	cmp    al,al
  411158:	xor    ebx,DWORD PTR [edi-0x51]
  41115b:	fcmovbe st,st(4)
  41115d:	(bad)  
  41115e:	loope  0x4110e0
  411160:	scas   eax,DWORD PTR es:[edi]
  411161:	add    eax,0x62676af
  411166:	add    bl,BYTE PTR [ebx-0x60]
  411169:	or     esi,DWORD PTR [eax-0x25b238d9]
  41116f:	jmp    0x703c:0xf6d4f9fa
  411176:	jae    0x411119
  411178:	push   ecx
  411179:	mov    BYTE PTR [edx+ecx*2],al
  41117c:	test   eax,0xc962d900
  411181:	fwait
  411182:	or     DWORD PTR [eax+0x13],0x5e9803b5
  411189:	data16 or dh,al
  41118c:	xor    al,0x13
  41118e:	jbe    0x411113
  411190:	push   es
  411191:	stc    
  411192:	inc    esp
  411193:	popa   
  411194:	jle    0x4111d7
  411196:	cdq    
  411197:	add    eax,0x998a6577
  41119c:	pop    edx
  41119d:	test   eax,0xf9535289
  4111a2:	mov    dh,0xc6
  4111a4:	adc    al,BYTE PTR [ebp+0x7ef60ad8]
  4111aa:	jp     0x41119e
  4111ac:	sbb    al,0x58
  4111ae:	push   ecx
  4111af:	mov    WORD PTR [edi+0x52c46e99],?
  4111b5:	add    dh,BYTE PTR [eax+ebp*1+0x5e4deb73]
  4111bc:	lock add edx,edi
  4111bf:	das    
  4111c0:	stos   BYTE PTR es:[edi],al
  4111c1:	lds    eax,FWORD PTR [edi]
  4111c3:	pop    esp
  4111c4:	fdiv   QWORD PTR [edx]
  4111c6:	cmp    al,0x1d
  4111c8:	pop    ds
  4111c9:	repnz dec ebp
  4111cb:	jns    0x411249
  4111cd:	gs sbb eax,0xadd23c93
  4111d3:	gs stc 
  4111d5:	cmp    ebp,DWORD PTR [ebp+0x25]
  4111d8:	imul   edi,DWORD PTR fs:[esi+0x71151620],0x75
  4111e0:	pusha  
  4111e1:	test   BYTE PTR [ecx],ah
  4111e3:	pusha  
  4111e4:	int3   
  4111e5:	jb     0x41124f
  4111e7:	jne    0x41121d
  4111e9:	pop    ebp
  4111ea:	cdq    
  4111eb:	ficom  DWORD PTR [edx+0x4d109958]
  4111f1:	push   ss
  4111f2:	sbb    DWORD PTR [eax],edi
  4111f4:	ins    BYTE PTR es:[edi],dx
  4111f5:	or     cl,BYTE PTR [ebp-0x47dd7b79]
  4111fb:	mov    bl,0xae
  4111fd:	mov    BYTE PTR [edi+eax*8],ah
  411200:	adc    al,0xb9
  411202:	not    DWORD PTR [esp+ebx*8-0x6ec7d4b]
  411209:	sbb    bl,bl
  41120b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41120c:	mov    ebx,0x8459994f
  411211:	adc    edi,edi
  411213:	xchg   ebx,eax
  411214:	xchg   esi,eax
  411215:	in     al,0x32
  411217:	(bad)  
  411219:	popf   
  41121a:	dec    ebx
  41121b:	adc    ah,BYTE PTR [ebp+0x21]
  41121e:	mov    cl,0xc0
  411220:	mov    dl,0xf0
  411222:	mov    ch,0x0
  411224:	mov    bh,0x1
  411226:	enter  0xfde4,0xad
  41122a:	or     ecx,edx
  41122c:	inc    esi
  41122d:	cmp    cl,ch
  41122f:	ret    0x344e
  411232:	sub    BYTE PTR [edx+0x15],ah
  411235:	fwait
  411236:	mov    esi,0xe38e038b
  41123b:	int3   
  41123c:	ror    BYTE PTR [eax+eax*4-0x16],1
  411240:	lahf   
  411241:	lahf   
  411242:	ins    BYTE PTR es:[edi],dx
  411243:	inc    esp
  411244:	aas    
  411245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411246:	xor    bl,0xfd
  411249:	sbb    BYTE PTR [ecx+0x48bd8537],bl
  41124f:	xor    edi,DWORD PTR [ecx-0x14]
  411252:	ja     0x411219
  411254:	pop    edi
  411255:	add    bh,BYTE PTR [ebp+0x41b1a8b7]
  41125b:	lea    esi,[ebx+0x13]
  41125e:	mov    cl,0x23
  411260:	(bad)  
  411262:	push   esi
  411263:	and    al,0xf1
  411265:	fist   WORD PTR [edx-0x18]
  411268:	push   eax
  411269:	pop    edi
  41126a:	xor    eax,ebp
  41126c:	popa   
  41126d:	(bad)  [ebx]
  41126f:	adc    eax,0xda5914ed
  411274:	or     edx,DWORD PTR [edx]
  411276:	sahf   
  411277:	popf   
  411278:	icebp  
  411279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41127a:	cmp    BYTE PTR [ecx+0x1804ff15],dh
  411280:	pushf  
  411281:	pop    ds
  411282:	pusha  
  411283:	xchg   DWORD PTR [ecx],ebp
  411285:	imul   edi,DWORD PTR [edi],0xffffffcc
  411288:	je     0x411308
  41128a:	add    al,0x7c
  41128c:	sbb    cl,BYTE PTR [edx-0x72]
  41128f:	add    BYTE PTR [ecx],dl
  411291:	inc    eax
  411292:	and    al,0xc1
  411294:	pop    edi
  411295:	inc    ebp
  411296:	pop    edi
  411297:	arpl   WORD PTR [edx+0x41],cx
  41129a:	add    eax,ebp
  41129c:	ror    DWORD PTR [eax+edx*4+0x364202b4],cl
  4112a3:	push   ss
  4112a4:	je     0x41129a
  4112a6:	clc    
  4112a7:	jl     0x411232
  4112a9:	mov    dh,0x92
  4112ab:	das    
  4112ac:	ja     0x4112fa
  4112ae:	inc    edx
  4112af:	mov    cl,0x13
  4112b1:	mov    ds:0x28d52f55,al
  4112b6:	push   esp
  4112b7:	imul   edx,DWORD PTR [edi+0x1bfa71b6],0x111f465b
  4112c1:	es jge 0x411311
  4112c4:	pop    ss
  4112c5:	or     esi,eax
  4112c7:	stos   DWORD PTR es:[edi],eax
  4112c8:	jno    0x41131d
  4112ca:	cdq    
  4112cb:	xchg   esp,eax
  4112cc:	out    0x24,eax
  4112ce:	mov    ebp,DWORD PTR [edi]
  4112d0:	lea    esi,[esi]
  4112d2:	xlat   BYTE PTR ds:[ebx]
  4112d3:	(bad)  [esp+ebp*4]
  4112d6:	or     BYTE PTR [ebp+0x7d8648c9],0xdf
  4112dd:	push   DWORD PTR [eax]
  4112df:	(bad)  
  4112e0:	imul   DWORD PTR [esi+edx*4]
  4112e3:	inc    ebp
  4112e4:	or     ah,al
  4112e6:	pop    ss
  4112e7:	pop    esp
  4112e8:	loopne 0x4112d8
  4112ea:	adc    BYTE PTR [edx+ecx*1-0x5b],ah
  4112ee:	(bad)  
  4112ef:	xchg   esp,eax
  4112f0:	xor    ebp,DWORD PTR [ebx]
  4112f2:	ret    0x7dea
  4112f5:	inc    eax
  4112f6:	adc    al,0x62
  4112f8:	idiv   BYTE PTR [ebx]
  4112fa:	mov    ah,0x73
  4112fc:	push   esp
  4112fd:	rcr    BYTE PTR [eax-0x4f],cl
  411300:	sbb    ebx,DWORD PTR [ebx-0xc620edc]
  411306:	push   esi
  411307:	fnstenv ds:0x6d25ff83
  41130e:	mov    dl,0x2
  411310:	imul   BYTE PTR [edi]
  411312:	jne    0x4112e8
  411314:	rcl    BYTE PTR [ebp+0x15],1
  411317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411318:	mov    ebx,0x2d36ba25
  41131d:	pxor   mm7,mm4
  411320:	daa    
  411321:	mov    ah,0xb5
  411323:	pop    ebx
  411324:	or     al,0x6
  411326:	push   ebp
  411327:	bound  edx,QWORD PTR [ecx+0x21a2c521]
  41132d:	(bad)  
  41132f:	xlat   BYTE PTR ds:[ebx]
  411330:	jns    0x4113aa
  411332:	jne    0x4113b2
  411334:	stos   DWORD PTR es:[edi],eax
  411335:	xchg   esp,eax
  411336:	sar    ch,cl
  411338:	inc    esp
  411339:	ret    0x3060
  41133c:	xor    al,0xc6
  41133e:	mov    al,ds:0x9888bfeb
  411343:	les    ebx,FWORD PTR [ebx]
  411345:	sti    
  411346:	lahf   
  411347:	imul   edi,DWORD PTR [edx+0x262cb5b2],0xf8e0dbf8
  411351:	mov    al,ch
  411353:	push   ecx
  411354:	xor    al,0xd2
  411356:	cmp    dl,bh
  411358:	sahf   
  411359:	mov    ah,0xc7
  41135b:	sub    dl,BYTE PTR [ecx+ebx*2+0x1b]
  41135f:	mov    ebp,DWORD PTR [edx-0x31]
  411362:	ja     0x4113b8
  411364:	test   al,0x29
  411366:	mov    esi,0x784090a5
  41136b:	ss shl ecx,cl
  41136e:	into   
  41136f:	hlt    
  411370:	mov    ebx,0x3caca31c
  411375:	push   cs
  411376:	shl    BYTE PTR [edx-0x19],0xdb
  41137a:	in     eax,0x6
  41137c:	push   ds
  41137d:	mov    WORD PTR [esi+0x1c7d2533],fs
  411383:	dec    edi
  411384:	add    edi,edx
  411386:	inc    esp
  411387:	ins    BYTE PTR es:[edi],dx
  411388:	xchg   edi,eax
  411389:	mov    ch,al
  41138b:	inc    ebx
  41138c:	cs js  0x4113db
  41138f:	mov    esi,0x21aa187b
  411394:	fwait
  411395:	cmc    
  411396:	int    0x11
  411398:	(bad)  
  411399:	xor    cl,BYTE PTR [edx-0x4]
  41139c:	jnp    0x41135c
  41139e:	in     eax,0xc6
  4113a0:	dec    edx
  4113a1:	jno    0x411409
  4113a3:	ror    DWORD PTR [edi+0x7f],1
  4113a6:	test   eax,0xf34f850c
  4113ab:	popa   
  4113ac:	ret    
  4113ad:	dec    ecx
  4113ae:	add    edi,DWORD PTR [esp+ebp*8]
  4113b1:	sbb    eax,0x7d4d47a7
  4113b6:	fimul  DWORD PTR [ebx-0x2b]
  4113b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ba:	aad    0x83
  4113bc:	add    al,0x6c
  4113be:	fwait
  4113bf:	mov    edi,0xa7934f70
  4113c4:	ror    BYTE PTR [edx+0x33d4a165],1
  4113ca:	mov    ds:0x195a151e,al
  4113cf:	and    DWORD PTR [edi+0x5c4f4132],0xffffffba
  4113d6:	push   ebx
  4113d7:	scas   al,BYTE PTR es:[edi]
  4113d8:	jne    0x41143b
  4113da:	and    al,BYTE PTR [edi+esi*2]
  4113dd:	outs   dx,DWORD PTR ds:[esi]
  4113de:	lods   al,BYTE PTR ds:[esi]
  4113df:	xor    dl,BYTE PTR [ebx-0xd6d9c3b]
  4113e5:	jae    0x4113d5
  4113e7:	inc    edx
  4113e8:	add    DWORD PTR [esi+edx*8+0x24349e3b],esp
  4113ef:	shl    DWORD PTR [bp-0x1],cl
  4113f3:	inc    eax
  4113f4:	popa   
  4113f5:	cmp    DWORD PTR [edi],ebp
  4113f7:	lods   al,BYTE PTR ds:[esi]
  4113f8:	mov    edx,0xdb9b2fac
  4113fd:	mov    ecx,0xefcdb83f
  411402:	into   
  411403:	in     al,dx
  411404:	mov    edx,0x2262c130
  411409:	add    DWORD PTR [esi+0x21],0xa4862369
  411410:	adc    BYTE PTR [eax+0x30],al
  411413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411414:	dec    esp
  411415:	jmp    0xbcb8:0x9df42adc
  41141c:	cmp    DWORD PTR ds:0xf0e982cb,edx
  411422:	pop    ebx
  411423:	(bad)  
  411425:	pop    ecx
  411426:	pop    esp
  411427:	or     DWORD PTR [edi],ecx
  411429:	cmp    al,0xd7
  41142b:	lahf   
  41142c:	sbb    ch,BYTE PTR [edi]
  41142e:	mov    ch,0xa2
  411430:	leave  
  411431:	pusha  
  411432:	push   es
  411433:	mov    ecx,0x8c0624b2
  411438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411439:	hlt    
  41143a:	adc    ebx,DWORD PTR [ecx]
  41143c:	gs cmc 
  41143e:	ficomp DWORD PTR [ecx]
  411440:	dec    DWORD PTR [esi-0x513f9830]
  411446:	adc    esp,DWORD PTR [ebx]
  411448:	xchg   ebp,eax
  411449:	mov    ds:0x3a1226ec,eax
  41144e:	mov    ds:0xe160bc6c,eax
  411453:	ins    DWORD PTR es:[edi],dx
  411454:	fsubr  QWORD PTR [edi-0x50]
  411457:	pop    edx
  411458:	adc    DWORD PTR [ebp+0x2993a195],edx
  41145e:	shl    BYTE PTR [esi-0x682436c6],cl
  411464:	daa    
  411465:	outs   dx,DWORD PTR ds:[esi]
  411466:	lods   al,BYTE PTR ds:[esi]
  411467:	jmp    0x3a12:0x980e5701
  41146e:	dec    ebx
  41146f:	inc    esp
  411470:	stos   DWORD PTR es:[edi],eax
  411471:	sar    BYTE PTR [eax-0x1b],cl
  411474:	mov    dl,0xc4
  411476:	clc    
  411477:	cmp    eax,0x8252e12a
  41147c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41147d:	adc    al,0x8b
  41147f:	stos   DWORD PTR es:[edi],eax
  411480:	xor    edi,DWORD PTR [eax-0x7c]
  411483:	mov    DWORD PTR [esi+0x6bedd7df],0xbbb7c764
  41148d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41148e:	adc    DWORD PTR ds:0x2a05a4f7,esp
  411494:	aas    
  411495:	leave  
  411496:	test   DWORD PTR [ebx-0x7355ce0],0x42bbcb76
  4114a0:	sti    
  4114a1:	inc    ecx
  4114a2:	mov    ch,0xe3
  4114a4:	mov    eax,ds:0x429adbbe
  4114a9:	hlt    
  4114aa:	sbb    eax,0x703c0fd9
  4114af:	jmp    0x41148f
  4114b1:	xchg   edx,eax
  4114b2:	out    dx,al
  4114b3:	push   ebp
  4114b4:	jg     0x41147f
  4114b6:	rcl    DWORD PTR [ebx+ebp*4],0xdd
  4114ba:	cmp    al,0x28
  4114bc:	xchg   BYTE PTR [edi],ch
  4114be:	stc    
  4114bf:	imul   eax,esi,0x4de56979
  4114c5:	out    dx,al
  4114c6:	aam    0xa1
  4114c8:	dec    ebp
  4114c9:	adc    DWORD PTR [ecx-0x44],ebx
  4114cc:	jae    0x41152f
  4114ce:	sti    
  4114cf:	ficomp WORD PTR [edx+0x40]
  4114d2:	sub    al,0xa2
  4114d4:	sbb    dl,BYTE PTR [eax]
  4114d6:	dec    ecx
  4114d7:	adc    DWORD PTR [eax-0x5dcac570],0xe6a8c14f
  4114e1:	(bad)  
  4114e2:	ds repnz pop ebx
  4114e5:	lods   eax,DWORD PTR ds:[esi]
  4114e6:	or     esp,esi
  4114e8:	out    dx,al
  4114e9:	(bad)  
  4114ea:	sbb    eax,0x98b6f702
  4114ef:	push   esi
  4114f0:	pop    ss
  4114f1:	lods   al,BYTE PTR ds:[esi]
  4114f2:	or     al,0xc3
  4114f4:	mov    dh,0xbf
  4114f6:	into   
  4114f7:	or     ebp,0xffffff98
  4114fa:	cld    
  4114fb:	dec    edi
  4114fc:	sar    bh,cl
  4114fe:	aaa    
  4114ff:	out    dx,eax
  411500:	sub    BYTE PTR [ebp+ebp*8+0x7142b7c3],bl
  411507:	cwde   
  411508:	rol    BYTE PTR [eax+ecx*4],0x61
  41150c:	pop    ds
  41150d:	pmuludq mm5,QWORD PTR [esi]
  411510:	ret    
  411511:	push   di
  411513:	inc    esi
  411514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411515:	mov    ah,0x48
  411517:	mov    DWORD PTR [ebx*2+0x704c4ea0],ecx
  41151e:	mov    cl,0x68
  411520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411521:	mov    cl,0x8b
  411523:	pop    esi
  411524:	mov    ch,BYTE PTR [edx+0x2a]
  411527:	shl    DWORD PTR [edi+eax*2-0x13],cl
  41152b:	mov    ds:0xb34aaf23,al
  411530:	and    al,0x12
  411532:	aam    0x9
  411534:	cmp    eax,0xb08f5440
  411539:	sub    ah,0xd2
  41153c:	and    eax,0xec6c04eb
  411541:	mov    eax,ds:0x223a1217
  411546:	test   DWORD PTR [edi-0x14],ebp
  411549:	and    DWORD PTR [ebx],edi
  41154b:	dec    ecx
  41154c:	xchg   ebx,eax
  41154d:	jbe    0x41151c
  41154f:	hlt    
  411550:	in     eax,dx
  411551:	add    ebx,ecx
  411553:	xchg   ecx,eax
  411554:	les    eax,FWORD PTR [edi+0x57]
  411557:	jp     0x4115d6
  411559:	mov    ds:0xe4d2a9fe,eax
  41155e:	xor    edi,DWORD PTR [edx-0x23]
  411561:	inc    edi
  411562:	test   al,0xee
  411564:	ds jecxz 0x411578
  411567:	(bad)  
  411568:	jmp    FWORD PTR [edx]
  41156a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41156b:	xchg   DWORD PTR [esi+0xd1655e7],eax
  411571:	lahf   
  411572:	inc    ebp
  411573:	outs   dx,BYTE PTR ds:[esi]
  411574:	xor    BYTE PTR [esi],ch
  411576:	fs add al,0xf2
  411579:	ret    
  41157a:	test   al,0xc8
  41157c:	xchg   edx,eax
  41157d:	xor    esp,DWORD PTR [ecx+esi*2+0x5c]
  411581:	jnp    0x4115c4
  411583:	and    esi,ebp
  411585:	stos   BYTE PTR es:[edi],al
  411586:	(bad)  
  411587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411588:	jge    0x411570
  41158a:	fmulp  st(7),st
  41158c:	in     al,dx
  41158d:	scas   al,BYTE PTR es:[edi]
  41158e:	pop    edi
  41158f:	cmp    ebp,DWORD PTR ss:[esi-0x4f05e8d0]
  411596:	sbb    DWORD PTR [eax],ebp
  411598:	add    DWORD PTR [ecx],edi
  41159a:	outs   dx,BYTE PTR ds:[esi]
  41159b:	or     dl,dl
  41159d:	stos   DWORD PTR es:[edi],eax
  41159e:	adc    ah,BYTE PTR [ebx+0x1f497a42]
  4115a4:	adc    BYTE PTR [ebp+0xe],al
  4115a7:	adc    esi,DWORD PTR [ecx-0x6c3fdea5]
  4115ad:	add    dh,bh
  4115af:	jb     0x411584
  4115b1:	(bad)  
  4115b2:	mov    dh,0x43
  4115b4:	mov    DWORD PTR [edi-0x49],esp
  4115b7:	in     eax,dx
  4115b8:	push   eax
  4115b9:	nop
  4115ba:	iret   
  4115bb:	aas    
  4115bc:	pop    ebp
  4115bd:	sub    ebp,0x27f607f8
  4115c3:	add    ebx,DWORD PTR [eax-0x62]
  4115c6:	dec    edi
  4115c7:	push   eax
  4115c8:	or     dl,al
  4115ca:	pop    es
  4115cb:	jecxz  0x4115cd
  4115cd:	push   ds
  4115ce:	mov    esi,0x579ab3aa
  4115d3:	and    eax,0x2b037867
  4115d8:	sub    BYTE PTR [edx-0x421054f6],dl
  4115de:	pop    esi
  4115df:	sti    
  4115e0:	sbb    eax,0xa67bddac
  4115e5:	adc    edi,DWORD PTR [eax-0x5b]
  4115e8:	and    al,0x9c
  4115ea:	pop    eax
  4115eb:	cmc    
  4115ec:	cmp    BYTE PTR [esi+esi*4+0x4ab4277f],dh
  4115f3:	sbb    BYTE PTR [ebp+0x7a],bh
  4115f6:	mov    es,esp
  4115f8:	ror    BYTE PTR [edi-0x1a9ef6b8],1
  4115fe:	mov    ebp,0x1fb7ca4b
  411603:	(bad)  
  411604:	cdq    
  411605:	dec    ebp
  411606:	stos   DWORD PTR es:[edi],eax
  411607:	leave  
  411608:	fst    QWORD PTR [esi+0xcf7714b]
  41160e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41160f:	fsub   st,st(4)
  411611:	stos   DWORD PTR es:[edi],eax
  411612:	cmp    ebp,DWORD PTR [ebx-0x12]
  411615:	and    DWORD PTR [ebx+0xd5e2396],eax
  41161b:	xchg   edi,eax
  41161c:	xor    BYTE PTR [edx-0x3c93d206],bh
  411622:	mov    bl,0x20
  411624:	push   ebx
  411625:	popa   
  411626:	xchg   ecx,eax
  411627:	(bad)  
  411628:	out    dx,eax
  411629:	push   0xffffffb3
  41162b:	jmp    0x7bed:0x4dac9c7
  411632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411633:	sbb    BYTE PTR [ecx],ch
  411635:	adc    BYTE PTR ds:0x8794db3e,bh
  41163b:	cli    
  41163c:	out    0x8,eax
  41163e:	stos   BYTE PTR es:[edi],al
  41163f:	push   ebx
  411640:	push   0x57
  411642:	xchg   ebx,eax
  411643:	push   ecx
  411644:	cmp    cl,BYTE PTR [ebp+0x1989af24]
  41164a:	repz rcr BYTE PTR [ebx-0x30680a16],0x62
  411652:	xchg   ebx,eax
  411653:	lahf   
  411654:	loopne 0x411607
  411656:	mov    ah,0xb1
  411658:	jns    0x411688
  41165a:	mov    ah,0xfc
  41165c:	xor    al,0x74
  41165e:	mov    eax,esi
  411660:	test   BYTE PTR [esi+0x3d21044b],0xec
  411667:	repnz xchg ebx,eax
  411669:	aas    
  41166a:	mov    ebp,0x77817f66
  41166f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411670:	arpl   WORD PTR [ebp-0x45],dx
  411673:	pop    ss
  411674:	rcr    BYTE PTR [edx+eax*2-0x66931a00],cl
  41167b:	mov    bl,0xb7
  41167d:	cdq    
  41167e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41167f:	adc    eax,0x8d320680
  411684:	sbb    al,0x4d
  411686:	add    al,0x26
  411688:	pop    es
  411689:	push   edi
  41168a:	push   ss
  41168b:	mov    WORD PTR [eax-0x39da1e14],?
  411691:	mov    dh,BYTE PTR [ecx]
  411693:	jbe    0x41164a
  411695:	sbb    esp,DWORD PTR [ecx]
  411697:	cs dec edx
  411699:	imul   edi,edx,0xfffffffb
  41169c:	pop    esp
  41169e:	(bad)  
  41169f:	fstp   QWORD PTR [eax+0x0]
  4116a2:	out    0x4b,eax
  4116a4:	and    ch,BYTE PTR [ebx-0x745c0a71]
  4116aa:	lods   al,BYTE PTR ds:[esi]
  4116ab:	xor    DWORD PTR [eax-0x38c2ed5d],0x6887d156
  4116b5:	xor    ebx,DWORD PTR [esi]
  4116b7:	mov    al,ds:0xec727dd2
  4116bc:	mov    ds:0x3541ac6,eax
  4116c1:	popf   
  4116c2:	mov    DWORD PTR [edx+0x72ec8121],0xf4b6c455
  4116cc:	test   eax,0xce3e8cc0
  4116d1:	pop    esi
  4116d2:	gs leave 
  4116d4:	imul   ebx,eax,0xffffffcd
  4116d7:	pushf  
  4116d8:	push   ecx
  4116d9:	mov    ecx,0xdf74717d
  4116de:	cmp    eax,0x31e7eff1
  4116e3:	mov    edi,0x3c28380b
  4116e8:	arpl   WORD PTR [esi],bp
  4116ea:	mov    esi,0xe5050cd7
  4116ef:	xor    eax,0x30c4ffcd
  4116f4:	and    al,0x93
  4116f6:	and    DWORD PTR [eax+0x50],ecx
  4116f9:	and    edi,DWORD PTR [esi+0x4cc34cb0]
  4116ff:	dec    ecx
  411700:	call   FWORD PTR [ecx-0x71595c3a]
  411706:	and    BYTE PTR [ebx],bh
  411708:	scas   al,BYTE PTR es:[edi]
  411709:	adc    dl,BYTE PTR [ebx]
  41170b:	mov    ch,0xc
  41170d:	add    esi,DWORD PTR [esi+0x3a62b81e]
  411713:	xor    DWORD PTR [ebp+0xe],eax
  411716:	out    0xdf,eax
  411718:	sub    BYTE PTR [eax+0x47],cl
  41171b:	adc    al,0xc4
  41171d:	mov    ch,0x62
  41171f:	out    0xc2,ax
  411722:	xor    BYTE PTR [edi+0x26],cl
  411725:	rcl    BYTE PTR [ecx],cl
  411727:	icebp  
  411728:	in     al,0xbc
  41172a:	jmp    0xc34b1f9c
  41172f:	leave  
  411730:	retf   
  411731:	mov    edx,0xebed974
  411736:	rcl    BYTE PTR [eax],0xfd
  411739:	(bad)  [eax-0x77bad05f]
  41173f:	jno    0x41174a
  411741:	and    al,BYTE PTR [ebx-0x64b61f8c]
  411747:	jne    0x4117be
  411749:	mov    eax,0xc1b8e4d5
  41174e:	int    0x67
  411750:	iret   
  411751:	mov    ds:0x8a349316,al
  411756:	adc    dl,ah
  411758:	xor    BYTE PTR [ebx],cl
  41175a:	je     0x4117cc
  41175c:	loop   0x41179c
  41175e:	ficomp DWORD PTR [eax]
  411760:	in     al,0x48
  411762:	push   0x4fe526cd
  411767:	lods   eax,DWORD PTR ds:[esi]
  411768:	inc    ebp
  411769:	es mov edx,0x67387b1f
  41176f:	into   
  411770:	inc    ebp
  411771:	(bad)  
  411772:	pop    ecx
  411773:	fisttp WORD PTR [ebx-0x1]
  411776:	xchg   esi,eax
  411777:	mov    ds:0xb599ada5,eax
  41177c:	mov    cl,0xcd
  41177e:	sub    eax,0x6a9bf03c
  411783:	mov    edx,0xaf1d34b3
  411788:	sub    BYTE PTR [edx],0xf4
  41178b:	cmp    ecx,DWORD PTR [ebp+0x30]
  41178e:	mov    edx,0xf9f8508
  411793:	ss add dh,bl
  411796:	push   0x4b8ca46a
  41179b:	pushf  
  41179c:	jecxz  0x411762
  41179e:	push   ecx
  41179f:	stos   DWORD PTR es:[edi],eax
  4117a0:	popf   
  4117a1:	std    
  4117a2:	fwait
  4117a3:	jecxz  0x4117a0
  4117a5:	fidiv  DWORD PTR [ebx+0x181efc45]
  4117ab:	mov    bh,0x6d
  4117ad:	ins    BYTE PTR es:[edi],dx
  4117ae:	aaa    
  4117af:	outs   dx,BYTE PTR ds:[esi]
  4117b0:	das    
  4117b1:	inc    ecx
  4117b2:	mov    esp,0x63be1968
  4117b7:	mov    BYTE PTR [esi+0x5f2bd4f6],dh
  4117bd:	jae    0x4117e9
  4117bf:	neg    BYTE PTR ds:0x6fa9d2f7
  4117c5:	push   cs
  4117c6:	or     DWORD PTR [eax],0x7f
  4117c9:	loop   0x411788
  4117cb:	es cli 
  4117cd:	xor    ebp,DWORD PTR [edx]
  4117cf:	arpl   di,bx
  4117d1:	aam    0xf3
  4117d3:	retf   0x857d
  4117d6:	in     al,dx
  4117d7:	xor    eax,0xffb2b2c2
  4117dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117dd:	cmp    al,0xb6
  4117df:	lods   al,BYTE PTR ds:[esi]
  4117e0:	or     al,0x9d
  4117e2:	push   es
  4117e3:	add    edx,esi
  4117e5:	dec    ecx
  4117e6:	pop    edi
  4117e7:	dec    ebx
  4117e8:	jle    0x411780
  4117ea:	dec    edi
  4117eb:	imul   edx,DWORD PTR [ecx+0x60d84f11],0xc
  4117f2:	ins    DWORD PTR es:[edi],dx
  4117f3:	add    esp,DWORD PTR [esi-0x6b0f67d7]
  4117f9:	xor    DWORD PTR [eax+0x2a],esi
  4117fc:	(bad)  
  4117fd:	repz push edi
  4117ff:	sbb    dh,dl
  411801:	and    BYTE PTR [edx],ch
  411803:	ins    BYTE PTR es:[edi],dx
  411804:	addr16 dec esi
  411806:	push   edx
  411807:	bnd jno 0x411797
  41180a:	ret    0xd3ff
  41180d:	stc    
  41180e:	sbb    esp,DWORD PTR [esi+0x1a1ff5ed]
  411814:	pop    esp
  411815:	mov    edi,DWORD PTR ds:0xb154d961
  41181b:	cwde   
  41181c:	pop    es
  41181d:	mov    cl,0x72
  41181f:	xchg   ebp,eax
  411820:	jo     0x411806
  411822:	and    dh,ah
  411824:	mov    ds:0xb5e0da5d,eax
  411829:	add    BYTE PTR [esi+0x18],ch
  41182c:	mov    eax,DWORD PTR [ebx]
  41182e:	push   edx
  41182f:	call   0x62fb6c00
  411834:	je     0x411825
  411836:	mov    al,ds:0x267fe28b
  41183b:	shr    al,1
  41183d:	shr    BYTE PTR [eax-0x77],0x1f
  411841:	jns    0x4117eb
  411843:	outs   dx,DWORD PTR ds:[esi]
  411844:	lods   eax,DWORD PTR ds:[esi]
  411845:	scas   eax,DWORD PTR es:[edi]
  411846:	je     0x411864
  411848:	stc    
  411849:	pop    ebp
  41184a:	inc    edx
  41184b:	mov    ecx,0x92c17cfb
  411850:	pop    ebp
  411851:	push   0x238ee84b
  411856:	inc    eax
  411857:	ins    BYTE PTR es:[edi],dx
  411858:	test   DWORD PTR [eax+ebp*4],esi
  41185b:	imul   esi,DWORD PTR [ebx-0xe],0xffffffd5
  41185f:	xchg   ebx,eax
  411860:	stos   BYTE PTR es:[edi],al
  411861:	xlat   BYTE PTR ds:[ebx]
  411862:	adc    eax,0x6abd9151
  411867:	(bad)  
  411868:	jmp    0x3164:0xad550bb2
  41186f:	cmp    al,0x49
  411871:	xor    ebx,DWORD PTR [eax+0x5b5d9e2b]
  411877:	imul   edx,edi,0x3c6f6bd9
  41187d:	int3   
  41187e:	add    BYTE PTR [edi],0x84
  411881:	add    ebp,ecx
  411883:	jns    0x411816
  411885:	sbb    al,0x48
  411887:	jg     0x4118b1
  411889:	sub    eax,0xb73bf004
  41188e:	arpl   di,ax
  411890:	xor    al,0xb
  411892:	cmp    eax,ecx
  411894:	sbb    DWORD PTR [esi+0x57],ebx
  411897:	iret   
  411898:	stc    
  411899:	lods   eax,DWORD PTR ds:[esi]
  41189a:	cmp    al,0x3e
  41189c:	fmul   DWORD PTR [ebx-0x58]
  41189f:	xchg   DWORD PTR fs:[ebp-0x23],eax
  4118a3:	stos   BYTE PTR es:[edi],al
  4118a4:	and    ebx,0x41
  4118a7:	cmp    esi,DWORD PTR [esi+0x5]
  4118aa:	jge    0x411913
  4118ac:	mov    esp,0x18eb071c
  4118b1:	sahf   
  4118b2:	jge    0x41185a
  4118b4:	cmp    DWORD PTR [edi+0x68e185e5],eax
  4118ba:	jne    0x4118ba
  4118bc:	cmp    dh,ch
  4118be:	xchg   ebp,eax
  4118bf:	and    al,0x72
  4118c1:	repnz fild DWORD PTR [edx+0x5b]
  4118c5:	push   ss
  4118c6:	test   BYTE PTR [esi],0x9e
  4118c9:	mov    BYTE PTR [edi],cl
  4118cb:	and    BYTE PTR [eax-0x1b6d845e],ah
  4118d1:	mov    dl,0x42
  4118d3:	stos   DWORD PTR es:[edi],eax
  4118d4:	(bad)  
  4118d5:	cmp    eax,0x6a92a650
  4118da:	pushf  
  4118db:	pop    edx
  4118dc:	add    edi,DWORD PTR [edx+0x2d]
  4118df:	push   esi
  4118e0:	(bad)  
  4118e1:	jno    0x4118a8
  4118e3:	repz inc BYTE PTR [ecx-0x4a]
  4118e7:	stos   DWORD PTR es:[edi],eax
  4118e8:	dec    esi
  4118ea:	xor    BYTE PTR [ebx+0x35],dh
  4118ed:	stc    
  4118ee:	sbb    al,0xae
  4118f0:	jae    0x41189f
  4118f2:	push   edx
  4118f3:	xchg   ebx,eax
  4118f4:	inc    ebp
  4118f5:	sub    eax,0x39e41302
  4118fa:	and    ah,BYTE PTR [ecx+0x5f38f106]
  411900:	xor    ebx,edx
  411902:	cmp    ecx,eax
  411904:	fdiv   st(3),st
  411906:	cmp    esp,ecx
  411908:	je     0x4118b1
  41190a:	mov    esi,0xf946980b
  41190f:	jns    0x4118ca
  411911:	mul    BYTE PTR [ecx+ebx*1+0x39]
  411915:	xchg   BYTE PTR [ebx],cl
  411917:	or     dh,BYTE PTR ds:0x808c957a
  41191d:	enter  0x683a,0x26
  411921:	jmp    0xce84fe14
  411926:	(bad)  
  411927:	xor    eax,0x7e52c915
  41192c:	enter  0xddd8,0xab
  411930:	fs loope 0x41199b
  411933:	test   DWORD PTR [edi],esi
  411935:	inc    eax
  411936:	and    bl,BYTE PTR [edx+0x37]
  411939:	mov    ss,WORD PTR [edx]
  41193b:	test   DWORD PTR [edx-0x70b63cb6],0xe5f283fc
  411945:	mov    ebp,0xa51c2bed
  41194a:	xlat   BYTE PTR ds:[ebx]
  41194b:	inc    eax
  41194c:	test   DWORD PTR [ebx-0x38],ebx
  41194f:	or     al,BYTE PTR [eax+ebx*2]
  411952:	mov    edi,0xee2a3455
  411957:	add    al,0xab
  411959:	pusha  
  41195a:	xchg   esp,eax
  41195b:	sub    esi,edx
  41195d:	js     0x41197c
  41195f:	push   es
  411960:	fwait
  411961:	mov    esp,0x12d33685
  411966:	lods   al,BYTE PTR ds:[esi]
  411967:	rcr    BYTE PTR [ebp+0x64],cl
  41196a:	jne    0x411965
  41196c:	adc    dh,BYTE PTR [edi]
  41196e:	mov    ds:0xc7884ff9,al
  411973:	sbb    eax,0x1740847b
  411978:	push   edx
  411979:	xchg   edx,eax
  41197a:	push   edx
  41197b:	dec    edi
  41197c:	pop    ss
  41197d:	sub    cl,BYTE PTR [edx]
  41197f:	scas   al,BYTE PTR es:[edi]
  411980:	jbe    0x411989
  411982:	mov    ds:0x47f1ae7a,al
  411987:	int3   
  411988:	sti    
  411989:	in     al,0x80
  41198b:	push   ebx
  41198c:	in     eax,0x72
  41198e:	inc    esp
  41198f:	cli    
  411990:	into   
  411991:	jns    0x4119e1
  411993:	pop    esp
  411994:	pop    ecx
  411995:	cmp    DWORD PTR [ecx-0x3a],ebp
  411998:	lock mov ah,BYTE PTR es:[ecx]
  41199c:	mov    WORD PTR [ebp+0x31c119d9],fs
  4119a2:	aad    0x24
  4119a4:	stc    
  4119a5:	xor    eax,0xe2f93004
  4119aa:	fdivr  st,st(1)
  4119ac:	mov    dh,0xe8
  4119ae:	add    al,0x44
  4119b0:	cmp    BYTE PTR [ebp-0x3a],ah
  4119b3:	sub    DWORD PTR [ebx-0x3b],ebp
  4119b6:	xor    dh,ah
  4119b8:	ins    DWORD PTR es:[edi],dx
  4119b9:	mov    ebx,0xd6c29ea9
  4119be:	xlat   BYTE PTR ds:[ebx]
  4119bf:	push   edx
  4119c0:	mov    ah,0xc5
  4119c2:	in     al,0x77
  4119c4:	mov    ds:0x4c47bc07,eax
  4119c9:	test   al,0x6d
  4119cb:	ins    BYTE PTR es:[edi],dx
  4119cc:	mov    ebx,DWORD PTR [ecx]
  4119ce:	adc    eax,0xcce7e6ac
  4119d3:	mov    edi,0x19fb2fcc
  4119d8:	mov    edx,0x4c6a74cd
  4119dd:	push   ds
  4119de:	sahf   
  4119df:	ds inc eax
  4119e1:	sbb    DWORD PTR [esi-0x50949d91],0xfffffffe
  4119e8:	shr    BYTE PTR [ebx-0x152a06e1],cl
  4119ee:	add    eax,0xcdc7808d
  4119f3:	rcr    al,0x89
  4119f6:	xor    esi,eax
  4119f8:	mov    al,0x4
  4119fa:	bound  edx,QWORD PTR [edx-0x77]
  4119fd:	loope  0x411a2a
  4119ff:	cmp    al,0x65
  411a01:	xchg   ebx,eax
  411a02:	fild   DWORD PTR [ebp-0x2e1b25b9]
  411a08:	das    
  411a09:	cmp    cl,al
  411a0b:	or     ebp,DWORD PTR [ebp-0x79]
  411a0e:	adc    dh,ch
  411a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a11:	jmp    0xbf45:0xe2a59ede
  411a18:	test   eax,0xeaa3c724
  411a1d:	mov    bl,0x70
  411a1f:	leave  
  411a20:	outs   dx,BYTE PTR ds:[esi]
  411a21:	imul   esp,DWORD PTR [edi+0x7a],0xf97c8243
  411a28:	test   eax,0x4fc120cd
  411a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a2e:	cmp    eax,0x537a429f
  411a33:	sti    
  411a34:	iret   
  411a35:	push   0xea836f16
  411a3a:	fwait
  411a3b:	xor    ah,0xf4
  411a3e:	fbld   TBYTE PTR [edx+0x40]
  411a41:	frstor [ebx+ecx*2-0x36]
  411a45:	dec    eax
  411a46:	add    DWORD PTR [ebx+0x32],ebp
  411a49:	jge    0x411a07
  411a4b:	jnp    0x411aca
  411a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a4e:	test   DWORD PTR [esi+0x4b72873b],ebp
  411a54:	scas   al,BYTE PTR es:[edi]
  411a55:	add    BYTE PTR [esi+edx*8+0xfcb18cd],ch
  411a5c:	mov    eax,ds:0xdc100233
  411a61:	push   esi
  411a62:	add    eax,0xe9a76c8f
  411a67:	ror    dh,cl
  411a69:	mov    eax,ds:0x8e3e572e
  411a6e:	add    DWORD PTR [ecx+eax*2],0x31
  411a72:	xchg   edi,eax
  411a73:	and    DWORD PTR [ebx+0x5d],esp
  411a76:	(bad)  
  411a78:	iret   
  411a79:	sbb    BYTE PTR [edx-0x507e7310],0xc0
  411a80:	lahf   
  411a81:	mov    bh,BYTE PTR [eax+0x14]
  411a84:	call   0xc801d2c
  411a89:	adc    eax,0xc252c958
  411a8e:	jb     0x411a86
  411a90:	adc    BYTE PTR [bx+di-0x3f41],cl
  411a95:	mul    DWORD PTR [eax-0x4]
  411a98:	push   cs
  411a99:	retf   
  411a9a:	es out dx,al
  411a9c:	popf   
  411a9d:	xchg   esi,eax
  411a9e:	jae    0x411a42
  411aa0:	mov    ?,edi
  411aa2:	push   es
  411aa3:	mov    ecx,gs
  411aa5:	dec    esp
  411aa6:	cmp    DWORD PTR [esi+0x425e7556],esp
  411aac:	in     al,0x8f
  411aae:	inc    ebp
  411aaf:	stos   DWORD PTR es:[edi],eax
  411ab0:	mov    ebp,0x689dca1c
  411ab5:	or     al,0xed
  411ab7:	loop   0x411af3
  411ab9:	mov    eax,DWORD PTR ds:[edi-0x22]
  411abd:	cli    
  411abe:	dec    ebx
  411abf:	pushf  
  411ac0:	mov    eax,0x4d70a22f
  411ac5:	mov    ah,0xd4
  411ac7:	xchg   esp,eax
  411ac8:	or     edx,esi
  411aca:	mov    ds,WORD PTR [ebx-0x6e]
  411acd:	aam    0x86
  411acf:	add    DWORD PTR [ebp+0x394b37a2],edx
  411ad5:	jo     0x411af2
  411ad7:	sahf   
  411ad8:	jb     0x411a8d
  411ada:	add    al,0x12
  411adc:	leave  
  411add:	test   al,0xde
  411adf:	jnp    0x411a93
  411ae1:	in     eax,dx
  411ae2:	(bad)  [ebx-0x52eb6061]
  411ae8:	xlat   BYTE PTR ds:[ebx]
  411ae9:	add    al,ah
  411aeb:	mov    dl,0x6a
  411aed:	xor    ecx,eax
  411aef:	out    dx,al
  411af0:	nop
  411af1:	mov    ch,bh
  411af3:	add    eax,0x42e9963d
  411af8:	push   edx
  411af9:	mov    ds:0xb641fd38,al
  411afe:	adc    al,0xe9
  411b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b01:	and    eax,0xbf23c81f
  411b06:	lods   al,BYTE PTR ds:[esi]
  411b07:	push   ecx
  411b08:	(bad)  [esi+0x47125e8a]
  411b0e:	call   0xc983:0x3e83979
  411b15:	push   ss
  411b16:	xchg   esp,eax
  411b17:	popf   
  411b18:	in     eax,dx
  411b19:	loop   0x411aa2
  411b1b:	popf   
  411b1c:	jl     0x411ac7
  411b1e:	xor    esi,DWORD PTR [eax-0x49]
  411b21:	mov    DWORD PTR [ebx],ebp
  411b23:	jnp    0x411b6e
  411b25:	inc    BYTE PTR [ecx]
  411b27:	out    0xfc,eax
  411b29:	sbb    eax,0x4ebfbf93
  411b2e:	xchg   ebp,eax
  411b2f:	ja     0x411b8f
  411b31:	add    bl,BYTE PTR [ebp+ebx*1-0x128acdeb]
  411b38:	(bad)  
  411b39:	push   eax
  411b3a:	scas   eax,DWORD PTR es:[edi]
  411b3b:	sub    ebx,DWORD PTR [edi+0x3deae4ca]
  411b41:	mov    ebx,DWORD PTR [eiz*2+0x1ab577b]
  411b48:	hlt    
  411b49:	xchg   esi,eax
  411b4a:	shr    DWORD PTR [eax],cl
  411b4c:	add    DWORD PTR [ebp+0x412efb28],esi
  411b52:	add    BYTE PTR [edx],bh
  411b54:	push   ecx
  411b55:	outs   dx,BYTE PTR ds:[esi]
  411b56:	dec    eax
  411b57:	hlt    
  411b58:	fistp  WORD PTR [esi+ebp*8-0x4432c462]
  411b5f:	stos   DWORD PTR es:[edi],eax
  411b60:	dec    eax
  411b61:	das    
  411b62:	jge    0x411bd1
  411b64:	in     al,dx
  411b65:	fidiv  DWORD PTR [edi]
  411b67:	mov    ecx,0xf511e5c
  411b6c:	stos   DWORD PTR es:[edi],eax
  411b6d:	(bad)  
  411b6e:	dec    eax
  411b6f:	ret    
  411b70:	call   0xb124:0x92943478
  411b77:	sbb    eax,0x257dcec4
  411b7c:	(bad)  
  411b7d:	pusha  
  411b7e:	call   0xae0cb256
  411b83:	sub    al,0xb5
  411b85:	push   ecx
  411b86:	and    BYTE PTR ds:0xacf01f74,al
  411b8c:	pop    es
  411b8d:	jg     0x411b16
  411b8f:	sti    
  411b90:	into   
  411b91:	jo     0x411b49
  411b93:	fs repz (bad)
  411b97:	dec    ebx
  411b98:	retf   0x9a8d
  411b9b:	jae    0x411b9a
  411b9d:	adc    BYTE PTR [edi],bh
  411b9f:	pop    ebp
  411ba0:	cmp    al,0xef
  411ba2:	fnstsw WORD PTR [ecx+ecx*2+0xe]
  411ba6:	mov    ch,0x6b
  411ba8:	loop   0x411bf5
  411baa:	repz imul ecx,edi,0xffffffcf
  411bae:	add    eax,0x6fca3048
  411bb3:	call   FWORD PTR [ebx-0x3b]
  411bb6:	or     DWORD PTR [ebx+0x22],edi
  411bb9:	iret   
  411bba:	cdq    
  411bbb:	xor    dh,ah
  411bbd:	dec    edx
  411bbe:	jmp    0xc7d0fcbb
  411bc3:	jno    0x411b97
  411bc5:	or     eax,0x6679f998
  411bca:	call   0xda3b:0xc6470301
  411bd1:	add    al,0x16
  411bd3:	pop    ebx
  411bd4:	or     dl,dl
  411bd6:	jp     0x411b89
  411bd8:	test   BYTE PTR [edi+ebp*8+0x5f],ch
  411bdc:	and    BYTE PTR [esi],0x3d
  411bdf:	mov    dl,0x6f
  411be1:	adc    al,0x34
  411be3:	pop    ss
  411be4:	stc    
  411be5:	retf   
  411be6:	or     BYTE PTR [ecx],0x4e
  411be9:	int3   
  411bea:	out    dx,al
  411beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bec:	gs sbb edx,ebx
  411bef:	aaa    
  411bf0:	pop    edx
  411bf1:	idiv   ebx
  411bf3:	or     al,0x1c
  411bf5:	les    ebx,FWORD PTR [edi]
  411bf7:	ror    DWORD PTR [ecx],cl
  411bf9:	test   al,0x81
  411bfb:	sub    ch,BYTE PTR [esi-0x66f93721]
  411c01:	or     DWORD PTR [edi],edx
  411c03:	mov    bh,0xce
  411c05:	retf   
  411c06:	pop    edx
  411c07:	sub    al,0xd9
  411c09:	out    0x34,eax
  411c0b:	fmul   QWORD PTR [esi-0x46a073cd]
  411c11:	imul   DWORD PTR [eax+0x7183213]
  411c17:	push   ecx
  411c18:	mov    eax,ds:0xf940c0f5
  411c1d:	popa   
  411c1e:	shr    DWORD PTR [edi-0x1b],1
  411c21:	aaa    
  411c22:	cmp    DWORD PTR [ebx+0x47],edx
  411c25:	ficomp WORD PTR ds:0xc7b0a78e
  411c2b:	sahf   
  411c2c:	xor    bh,bl
  411c2e:	push   cs
  411c2f:	in     al,dx
  411c30:	jbe    0x411c82
  411c32:	push   ss
  411c33:	inc    edi
  411c34:	or     BYTE PTR [ecx],ah
  411c36:	sub    ch,bh
  411c38:	mov    ebp,0x42e3d689
  411c3d:	rcl    esp,cl
  411c3f:	add    eax,0xc6e7efc2
  411c44:	xor    DWORD PTR [ecx-0x38],esi
  411c47:	mov    ebp,0xe0f76acb
  411c4c:	scas   eax,DWORD PTR es:[edi]
  411c4d:	or     DWORD PTR [eax-0x8dbccbd],0xffffff93
  411c54:	cmp    DWORD PTR [ebx],eax
  411c56:	sbb    DWORD PTR [edx+0x14],edi
  411c59:	out    dx,eax
  411c5a:	aad    0x7d
  411c5c:	push   ss
  411c5d:	push   esp
  411c5e:	xor    eax,0x920ef050
  411c63:	int    0xe8
  411c65:	mov    ds:0x13ee5876,eax
  411c6a:	in     al,dx
  411c6b:	test   BYTE PTR [ebx+0x28],dh
  411c6e:	cmp    eax,0x266fb522
  411c73:	push   ds
  411c74:	(bad)
  411c77:	rep outs dx,DWORD PTR ds:[esi]
  411c79:	retf   
  411c7a:	jmp    0xe1f80b6c
  411c7f:	es mov ecx,0x80de0ed0
  411c85:	or     ebp,DWORD PTR [ebx+0x6]
  411c88:	es scas eax,DWORD PTR es:[edi]
  411c8a:	cmp    DWORD PTR [esi],ebp
  411c8c:	sub    cl,dh
  411c8e:	fldcw  WORD PTR [ebp+eax*2-0x80]
  411c92:	pushf  
  411c93:	dec    edx
  411c94:	pushf  
  411c95:	enter  0x677f,0x6e
  411c99:	pusha  
  411c9a:	mov    ch,0x1d
  411c9c:	push   ecx
  411c9d:	daa    
  411c9e:	push   0xd570ea06
  411ca3:	xor    ah,cl
  411ca5:	aas    
  411ca6:	pop    edx
  411ca7:	adc    BYTE PTR [edi+0x73],ch
  411caa:	popf   
  411cab:	fisttp QWORD PTR [eax+0x25d6cb59]
  411cb1:	neg    DWORD PTR [edi]
  411cb3:	(bad)  
  411cb4:	lock lods eax,DWORD PTR ds:[esi]
  411cb6:	clc    
  411cb7:	sbb    ch,dh
  411cb9:	xor    DWORD PTR [edi+0x2a632775],ebp
  411cbf:	test   BYTE PTR [edx-0x3398f264],0x1d
  411cc6:	jae    0x411d10
  411cc8:	out    dx,al
  411cc9:	imul   esp,edx,0xffffffda
  411ccc:	mov    dl,0xcd
  411cce:	repnz fwait
  411cd0:	loop   0x411d1c
  411cd2:	push   edi
  411cd3:	jnp    0x411c91
  411cd5:	aad    0x7b
  411cd7:	mov    ebx,0x8ba120f9
  411cdc:	out    0x6e,eax
  411cde:	xchg   BYTE PTR [eax],al
  411ce0:	mov    esi,0xec375db8
  411ce5:	jge    0x411c97
  411ce7:	xor    al,0xe8
  411ce9:	icebp  
  411cea:	xor    al,0xa7
  411cec:	or     al,BYTE PTR [edi+eax*1]
  411cef:	out    0xc3,al
  411cf1:	mov    cl,0x3c
  411cf3:	retf   0xe061
  411cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cf7:	fldenv ds:0xed9e6061
  411cfd:	in     al,0x57
  411cff:	sub    BYTE PTR [ebx],bl
  411d01:	push   esi
  411d02:	cmp    ah,BYTE PTR [ebp+0x7f0ec6f9]
  411d08:	xlat   BYTE PTR ds:[ebx]
  411d09:	pop    edi
  411d0a:	jae    0x411c8e
  411d0c:	xchg   ebp,eax
  411d0d:	bound  esp,QWORD PTR [esp+eax*8-0x3f]
  411d11:	mov    ecx,0xd24f6c0e
  411d16:	mov    esp,0x94b0ad69
  411d1b:	call   0xb6be:0xca522212
  411d22:	mov    cl,0x7a
  411d24:	loope  0x411d6d
  411d26:	popa   
  411d27:	dec    edi
  411d28:	jecxz  0x411d26
  411d2a:	mov    al,0x24
  411d2c:	arpl   WORD PTR [ebx+0x56],si
  411d2f:	push   ecx
  411d30:	movlhps xmm7,xmm3
  411d33:	or     edi,0xf96d3528
  411d39:	sbb    DWORD PTR [ebx+0x65],eax
  411d3c:	cmp    ch,dh
  411d3e:	xchg   DWORD PTR [ecx],edx
  411d40:	ss stos BYTE PTR es:[edi],al
  411d42:	adc    eax,0x78543cdd
  411d47:	clc    
  411d48:	inc    eax
  411d49:	adc    al,0x8f
  411d4b:	ret    
  411d4c:	jmp    0x411d6d
  411d4e:	jne    0x411cd7
  411d50:	ss jmp 0x411d7d
  411d53:	mov    esi,0x52e2e40f
  411d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d59:	jmp    0xc93d3f55
  411d5e:	push   esi
  411d5f:	jno    0x411d20
  411d61:	call   0xd2a5:0xf5c0041a
  411d68:	jns    0x411d4d
  411d6a:	ja     0x411d13
  411d6c:	int    0x83
  411d6e:	xchg   edx,eax
  411d6f:	mov    ecx,0xfe146cd1
  411d74:	xchg   BYTE PTR [eax-0x3ffb1175],dh
  411d7a:	cs sub al,0x2
  411d7d:	lahf   
  411d7e:	int3   
  411d7f:	jno    0x411d3c
  411d81:	sbb    eax,0xb455982
  411d86:	leave  
  411d87:	or     BYTE PTR ds:0xcfb83eb2,0x4a
  411d8e:	and    eax,0x41bd4580
  411d93:	stos   DWORD PTR es:[edi],eax
  411d94:	out    dx,al
  411d95:	or     eax,0x8c929543
  411d9a:	adc    eax,0xe3014552
  411d9f:	push   ebp
  411da0:	clc    
  411da1:	pop    es
  411da2:	loope  0x411d73
  411da4:	in     al,dx
  411da5:	rcl    esp,1
  411da7:	and    bl,BYTE PTR [ebx-0xc28ef9a]
  411dad:	dec    esp
  411dae:	mov    ecx,DWORD PTR [ecx]
  411db0:	sahf   
  411db1:	sbb    dl,BYTE PTR [ebp+0x3f]
  411db4:	push   cs
  411db5:	xor    esp,ebp
  411db7:	stos   BYTE PTR es:[edi],al
  411db8:	mov    DWORD PTR [esi-0x6a96a3ca],esi
  411dbe:	and    eax,0x279f0d84
  411dc3:	xlat   BYTE PTR ds:[ebx]
  411dc4:	lods   al,BYTE PTR ds:[esi]
  411dc5:	cs pop eax
  411dc7:	fnsave [ecx+0xf]
  411dca:	push   ebp
  411dcb:	jmp    0xc0a3fbe9
  411dd0:	popf   
  411dd1:	int3   
  411dd2:	jb     0x411e10
  411dd4:	repnz inc esi
  411dd6:	cmp    ebp,DWORD PTR [eax+0x4cb4741f]
  411ddc:	jmp    0x87371a29
  411de1:	and    ecx,DWORD PTR [esi-0x2e]
  411de4:	or     al,0x4d
  411de6:	mov    esi,ecx
  411de8:	jnp    0x411dda
  411dea:	gs cs inc ecx
  411ded:	out    dx,eax
  411dee:	mov    ds:0x3a41f800,eax
  411df3:	mov    ebp,0x2a06ee9c
  411df8:	fmul   DWORD PTR [esi+0x3f872205]
  411dfe:	arpl   WORD PTR [edx+0x2a],sp
  411e01:	mov    esp,0x2d931c8c
  411e06:	pop    DWORD PTR [ecx-0x6a3e95b2]
  411e0c:	call   0xf536067f
  411e11:	jl     0x411e58
  411e13:	sub    bh,BYTE PTR [ebx+0x6e417f39]
  411e19:	out    dx,al
  411e1a:	jecxz  0x411e68
  411e1c:	jns    0x411dc3
  411e1e:	push   edx
  411e1f:	fcmovne st,st(1)
  411e21:	test   eax,0x2bb5990b
  411e26:	loop   0x411e30
  411e28:	dec    ebp
  411e29:	fdivr  QWORD PTR [eax]
  411e2b:	mov    ah,0x64
  411e2d:	(bad)  
  411e2f:	xchg   edi,eax
  411e30:	add    eax,0x7d23f05c
  411e35:	fdiv   DWORD PTR [ebp-0x10]
  411e38:	enter  0xb512,0xa6
  411e3c:	xor    BYTE PTR [eax-0x657c534d],al
  411e42:	adc    al,0x9c
  411e44:	sar    DWORD PTR [eax-0x15],0x96
  411e48:	and    al,0xa0
  411e4a:	xchg   BYTE PTR [ecx+0x290107c8],cl
  411e50:	xchg   ebx,eax
  411e51:	or     BYTE PTR [ecx+0x22],dl
  411e54:	or     BYTE PTR [eax],ah
  411e56:	inc    esi
  411e57:	inc    esi
  411e58:	inc    ecx
  411e59:	sahf   
  411e5a:	adc    ecx,DWORD PTR [ebx+0x6cf9bf8c]
  411e60:	and    eax,0x9383879a
  411e65:	mov    edx,0xa042cdd1
  411e6a:	jle    0x411eb7
  411e6c:	mov    ah,0x54
  411e6e:	test   bl,ah
  411e70:	mov    ch,0x14
  411e72:	shr    DWORD PTR [ebx+0xbd5368a],1
  411e78:	ins    BYTE PTR es:[edi],dx
  411e79:	adc    ch,ah
  411e7b:	or     DWORD PTR [ebx+0x89d9980],esp
  411e81:	xchg   DWORD PTR [ecx+0x6147f696],ecx
  411e87:	sar    BYTE PTR [esi],0x8e
  411e8a:	and    cl,BYTE PTR [eax]
  411e8c:	add    BYTE PTR [ebp+0x63],ah
  411e8f:	mov    DWORD PTR [esi-0x31456a2e],eax
  411e95:	mov    ecx,0x96bff50c
  411e9a:	xor    DWORD PTR [edx+0x2b625bc4],esp
  411ea0:	in     eax,dx
  411ea1:	add    bl,al
  411ea3:	lea    edx,[ebx+0x34fa3de5]
  411ea9:	stos   BYTE PTR es:[edi],al
  411eaa:	xor    eax,0x784505a6
  411eaf:	xchg   esi,eax
  411eb0:	and    BYTE PTR [eax],bh
  411eb2:	pushf  
  411eb3:	or     cl,BYTE PTR [ebx]
  411eb5:	xor    al,0x93
  411eb7:	adc    dl,BYTE PTR [esi]
  411eb9:	sbb    ebx,DWORD PTR [ecx+ebx*2+0x633fccd4]
  411ec0:	mov    ds:0xd20bd60c,al
  411ec5:	je     0x411ec2
  411ec7:	popa   
  411ec8:	(bad)  
  411ec9:	in     al,0x52
  411ecb:	rcr    DWORD PTR [esp+ebx*1],cl
  411ece:	push   0xffffffc3
  411ed0:	adc    bl,cl
  411ed2:	icebp  
  411ed3:	scas   al,BYTE PTR es:[edi]
  411ed4:	call   0xd619:0x5b411148
  411edb:	mov    ah,0xbf
  411edd:	inc    ebp
  411ede:	mov    ebp,0xd9c57d34
  411ee3:	jbe    0x411f2f
  411ee5:	mov    ah,0x19
  411ee7:	stos   DWORD PTR es:[edi],eax
  411ee8:	(bad)  
  411ee9:	repz xchg ecx,eax
  411eeb:	add    eax,0x61658f7f
  411ef0:	jg     0x411eda
  411ef2:	or     ch,0x72
  411ef5:	gs repz aaa 
  411ef8:	in     al,0x8b
  411efa:	test   al,0xdf
  411efc:	ins    DWORD PTR es:[edi],dx
  411efd:	sub    esp,ecx
  411eff:	add    ebx,esp
  411f01:	push   ecx
  411f02:	sbb    BYTE PTR [ebp+0x32],bh
  411f05:	enter  0x5ada,0x39
  411f09:	pushf  
  411f0a:	aaa    
  411f0b:	loope  0x411f16
  411f0d:	cmp    BYTE PTR [ebx+eax*2-0x5f],bl
  411f11:	fcom   DWORD PTR [edi-0x7696ea52]
  411f17:	icebp  
  411f18:	pop    eax
  411f19:	inc    ecx
  411f1a:	scas   al,BYTE PTR es:[edi]
  411f1b:	fiadd  DWORD PTR [ebp-0x1aa5329c]
  411f21:	cdq    
  411f22:	nop
  411f23:	push   0x22262cf7
  411f28:	aam    0x43
  411f2a:	xchg   ebp,eax
  411f2b:	push   eax
  411f2c:	inc    ebx
  411f2d:	test   dh,dh
  411f2f:	fadd   QWORD PTR [ebx-0x6547ee2c]
  411f35:	xchg   ebx,eax
  411f36:	xor    dl,BYTE PTR [ecx-0x62461fd7]
  411f3c:	sub    al,0x80
  411f3e:	not    DWORD PTR [esi]
  411f40:	(bad)  
  411f41:	in     eax,dx
  411f42:	cmc    
  411f43:	sti    
  411f44:	(bad)  
  411f45:	pop    esi
  411f46:	das    
  411f47:	sub    ebx,ebx
  411f49:	cmp    eax,0x42696d93
  411f4e:	mov    dh,0x3b
  411f50:	jbe    0x411f83
  411f52:	retf   
  411f53:	dec    eax
  411f54:	scas   al,BYTE PTR es:[edi]
  411f55:	sbb    al,0xd5
  411f57:	enter  0x7660,0x65
  411f5b:	mov    DWORD PTR [ebx-0x52ad5db5],edi
  411f61:	cld    
  411f62:	adc    ch,BYTE PTR [ecx]
  411f64:	xchg   edx,eax
  411f65:	mov    dl,0xbf
  411f67:	add    esi,DWORD PTR [edx]
  411f69:	ficomp DWORD PTR [ecx-0x5a]
  411f6c:	xchg   esp,eax
  411f6d:	inc    ebp
  411f6e:	das    
  411f6f:	fs pop eax
  411f71:	push   ebp
  411f72:	test   eax,0x754efa59
  411f77:	(bad)  
  411f79:	outs   dx,BYTE PTR ds:[esi]
  411f7a:	(bad)  
  411f7b:	shl    BYTE PTR [eax+eiz*2+0x47204aea],0x18
  411f83:	pop    esp
  411f84:	pop    ebx
  411f85:	sbb    edi,DWORD PTR [ebx+eiz*8+0x63]
  411f89:	sub    ch,BYTE PTR ds:0xce365244
  411f8f:	test   al,0xf7
  411f91:	(bad)  
  411f92:	imul   BYTE PTR [eax]
  411f94:	(bad)  
  411f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f96:	mov    al,ds:0x86f7cc53
  411f9b:	adc    BYTE PTR [ecx-0x1672a540],ch
  411fa1:	pop    esp
  411fa2:	pop    edi
  411fa3:	pushf  
  411fa4:	(bad)  
  411fa5:	adc    ch,al
  411fa7:	imul   ebx,esi,0x2ee009a7
  411fad:	stc    
  411fae:	scas   eax,DWORD PTR es:[edi]
  411faf:	xor    edi,edx
  411fb1:	push   ss
  411fb2:	add    eax,edx
  411fb4:	test   al,0xde
  411fb6:	dec    ebx
  411fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fb8:	je     0x411fcf
  411fba:	cmp    bh,BYTE PTR [edi-0x3b226112]
  411fc0:	and    ebp,DWORD PTR [esp+edx*8+0x4]
  411fc4:	mul    ebp
  411fc6:	popa   
  411fc7:	inc    ebx
  411fc8:	and    dl,BYTE PTR [esi+0x41]
  411fcb:	arpl   WORD PTR [ecx+0x54],cx
  411fce:	loopne 0x41201f
  411fd0:	push   esi
  411fd1:	mov    bl,BYTE PTR [ebx+0x28]
  411fd4:	test   dl,dl
  411fd6:	in     eax,dx
  411fd7:	sub    eax,0xd894b67c
  411fdc:	popf   
  411fdd:	add    BYTE PTR [esi-0x33],dl
  411fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fe1:	das    
  411fe2:	adc    DWORD PTR [esi],esp
  411fe4:	and    DWORD PTR [ecx-0x4f],ecx
  411fe7:	or     DWORD PTR [ebp+0x4a],ebp
  411fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411feb:	dec    ebx
  411fec:	xor    eax,0xbb38d350
  411ff1:	inc    edx
  411ff2:	mov    ebp,0x4d593eba
  411ff7:	clc    
  411ff8:	retf   
  411ff9:	mov    BYTE PTR [esi+0x4a],0x68
  411ffd:	fnsave [ecx+0x7ba0605a]
  412003:	sub    al,0x8f
  412005:	rol    DWORD PTR [ecx-0x3b093c65],1
  41200b:	xchg   BYTE PTR [edx+0x3],ch
  41200e:	pop    ebx
  41200f:	retf   
  412010:	adc    DWORD PTR [eax+0x52],0x30
  412014:	xchg   ebp,eax
  412015:	xchg   BYTE PTR [ebx+ebx*8+0x4c],dh
  412019:	jge    0x411fb2
  41201b:	mov    ebp,0x1a9c8a9a
  412020:	nop    DWORD PTR [ebx+0x29b8dc23]
  412027:	mov    bh,BYTE PTR [ecx-0x65]
  41202a:	sbb    al,0x6e
  41202c:	lods   eax,DWORD PTR ds:[esi]
  41202d:	push   edx
  41202e:	sbb    bl,ch
  412030:	lods   al,BYTE PTR ds:[esi]
  412031:	xor    ch,BYTE PTR [edx+0x5e047123]
  412037:	shl    ecx,1
  412039:	push   edx
  41203a:	in     al,0x71
  41203c:	xor    eax,0x400a2a75
  412041:	cmp    BYTE PTR [eax-0xe],0x6a
  412045:	sbb    DWORD PTR [edx+0x65],eax
  412048:	and    dl,BYTE PTR [ecx+0x56a38504]
  41204e:	mov    dh,0x9f
  412050:	(bad)
  412053:	xchg   esp,eax
  412054:	push   0xffffffd0
  412056:	inc    edx
  412057:	pop    esp
  412058:	add    esp,DWORD PTR [ecx+0x13]
  41205b:	ret    
  41205c:	or     eax,0x51d8c707
  412061:	jle    0x412009
  412063:	sbb    bl,BYTE PTR [esi]
  412065:	push   eax
  412066:	mov    eax,ds:0x707f439a
  41206b:	cdq    
  41206c:	mov    ds,WORD PTR [esi+0x73]
  41206f:	sub    cl,BYTE PTR [esi]
  412071:	mov    bl,0xc0
  412073:	inc    ebx
  412074:	(bad)
  412077:	mov    ch,BYTE PTR [ecx]
  412079:	cwde   
  41207a:	dec    edi
  41207b:	adc    al,0xce
  41207d:	(bad)  
  41207f:	in     al,0x5d
  412081:	cli    
  412082:	mov    DWORD PTR [ebp+ebx*4+0x6c],0x12b47a98
  41208a:	jnp    0x41206a
  41208c:	mov    esp,0xfa9ad1f4
  412091:	jae    0x412032
  412093:	shr    DWORD PTR [esi+ebx*2],0xe5
  412097:	loop   0x41205f
  412099:	out    dx,al
  41209a:	add    BYTE PTR ds:0x92bd889b,dl
  4120a0:	add    BYTE PTR [edi],0x29
  4120a3:	addr16 mov ah,0x64
  4120a6:	xor    esi,DWORD PTR [edx+ebp*8-0x15c829c4]
  4120ad:	out    0xde,eax
  4120af:	imul   ecx,DWORD PTR ds:0xeed755d8,0x1f894822
  4120b9:	dec    esp
  4120ba:	mov    edx,0xd6e03c42
  4120bf:	cwde   
  4120c0:	retf   0xac43
  4120c3:	and    cl,BYTE PTR [edx-0x28]
  4120c6:	xchg   ecx,eax
  4120c7:	xchg   BYTE PTR [ebx-0xc],al
  4120ca:	call   0xee97dbb3
  4120cf:	imul   DWORD PTR [esp+ecx*2]
  4120d2:	sub    ah,BYTE PTR [eax]
  4120d4:	aas    
  4120d5:	adc    eax,0xffffffd0
  4120d8:	(bad)  [ebx+0x50]
  4120db:	dec    ebp
  4120dc:	fisub  WORD PTR [ebp-0x50]
  4120df:	xor    al,0x85
  4120e1:	add    eax,DWORD PTR [edx+0x40]
  4120e4:	xchg   ecx,eax
  4120e5:	stos   DWORD PTR es:[edi],eax
  4120e6:	and    DWORD PTR [ebx-0x65],ebx
  4120e9:	sub    BYTE PTR [edx+0x68fd7862],0x8e
  4120f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f1:	jp     0x4120e1
  4120f3:	or     bh,BYTE PTR fs:[ebx]
  4120f6:	(bad)  
  4120f7:	lock int 0x66
  4120fa:	cwde   
  4120fb:	xor    esi,DWORD PTR ds:0xa41b7f14
  412101:	jbe    0x4120bf
  412103:	cdq    
  412104:	repnz mov cl,0xad
  412107:	aas    
  412108:	cld    
  412109:	jmp    0x3efe:0x635fad97
  412110:	mov    dh,0xe
  412112:	fwait
  412113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412114:	pop    ebp
  412115:	and    al,0x9e
  412117:	mov    dh,0x70
  412119:	loopne 0x41218d
  41211b:	sub    dl,BYTE PTR [eax]
  41211d:	jge    0x4120a9
  41211f:	scas   al,BYTE PTR es:[edi]
  412120:	sbb    al,0x98
  412122:	or     BYTE PTR [edx+0x6afd51b9],0x9b
  412129:	mov    ecx,0x5e4a9e45
  41212e:	adc    eax,0x21c83c33
  412133:	sub    eax,0xde31b488
  412138:	dec    ebx
  412139:	lods   al,BYTE PTR ds:[esi]
  41213a:	call   0x480a:0x7f001aa5
  412141:	imul   ebp
  412143:	sbb    al,0x70
  412145:	mov    ds:0x8ada715,eax
  41214a:	ret    
  41214b:	(bad)  
  41214c:	ins    BYTE PTR es:[edi],dx
  41214d:	adc    al,0x78
  41214f:	and    edi,DWORD PTR [edi-0x77]
  412152:	stc    
  412153:	push   es
  412154:	ss stos DWORD PTR es:[edi],eax
  412156:	mov    ebx,0xe9ee6523
  41215b:	(bad)  [ebx+0x66b82d47]
  412161:	or     al,0xee
  412163:	dec    eax
  412164:	(bad)  
  412165:	jecxz  0x4121b7
  412167:	adc    BYTE PTR [ecx],al
  412169:	outs   dx,DWORD PTR ds:[esi]
  41216a:	call   0xf6b3:0x9ca9b092
  412171:	cmp    bl,BYTE PTR [ecx+0x94c37d5]
  412177:	pop    edi
  412178:	or     ebx,DWORD PTR [ecx]
  41217a:	lock sbb BYTE PTR [edx+0x22],ah
  41217e:	leave  
  41217f:	inc    edi
  412180:	pop    ebp
  412181:	into   
  412182:	or     DWORD PTR [ebx],ebx
  412184:	add    ecx,DWORD PTR [eax+0x42c524f9]
  41218a:	dec    edx
  41218b:	dec    esi
  41218c:	dec    edx
  41218d:	mov    eax,ds:0xaa1cac87
  412192:	call   FWORD PTR [eax+0x52774549]
  412198:	fcmovb st,st(5)
  41219a:	jmp    0x4121a9
  41219c:	nop
  41219d:	pop    ebx
  41219e:	dec    esp
  41219f:	test   al,0xcd
  4121a1:	js     0x41218d
  4121a3:	mov    eax,0xc73b32bf
  4121a8:	add    edx,DWORD PTR [esi+0x6f5cb7ea]
  4121ae:	push   edx
  4121af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121b0:	shl    BYTE PTR [ebx],0x55
  4121b3:	out    dx,eax
  4121b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121b5:	nop
  4121b6:	fbstp  TBYTE PTR [ebx+0x12]
  4121b9:	clc    
  4121ba:	outs   dx,DWORD PTR ds:[esi]
  4121bb:	push   es
  4121bc:	xlat   BYTE PTR ds:[ebx]
  4121bd:	add    dh,ah
  4121bf:	fst    DWORD PTR [eax+0x69f27058]
  4121c5:	sbb    eax,0xee42c4e0
  4121ca:	push   ecx
  4121cb:	stos   DWORD PTR es:[edi],eax
  4121cc:	int    0x1c
  4121ce:	pop    ebp
  4121cf:	retf   0x7773
  4121d2:	mov    eax,ds:0x36dfbcc2
  4121d7:	pushf  
  4121d8:	or     al,0xf9
  4121da:	jnp    0x412241
  4121dc:	jp     0x412205
  4121de:	and    DWORD PTR [esi-0x3a],esi
  4121e1:	aad    0x8f
  4121e3:	int    0x91
  4121e5:	mov    ecx,0x525a6bd5
  4121ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121eb:	mov    WORD PTR [ecx-0x7015570f],?
  4121f1:	pop    edi
  4121f2:	fcom   DWORD PTR [esi]
  4121f4:	sub    eax,esi
  4121f6:	sahf   
  4121f7:	sbb    al,0x39
  4121f9:	mov    edi,cs
  4121fb:	xchg   BYTE PTR [eax-0x77],dh
  4121fe:	mov    ds:0x86744de6,al
  412203:	fisubr WORD PTR [edx*2+0x3e84a014]
  41220a:	sbb    DWORD PTR [edi],ebp
  41220c:	rcr    DWORD PTR [edx+0x58930b6b],0xb9
  412213:	dec    edi
  412214:	out    dx,eax
  412215:	ja     0x412205
  412217:	mov    DWORD PTR fs:[edx+0x34297599],0xfb2c0d5
  412222:	push   ss
  412223:	xor    esi,DWORD PTR [edi-0xf]
  412226:	pushf  
  412227:	in     eax,0x88
  412229:	adc    DWORD PTR [ebx],0xeccecf7f
  41222f:	sbb    ch,BYTE PTR es:[esi-0x12dee11c]
  412236:	mov    dl,0x13
  412238:	dec    esp
  412239:	lahf   
  41223a:	daa    
  41223b:	push   cs
  41223c:	daa    
  41223d:	aam    0xec
  41223f:	cdq    
  412240:	aad    0x49
  412242:	jns    0x412230
  412244:	jmp    0xd68d8f38
  412249:	xor    bh,cl
  41224b:	popa   
  41224c:	das    
  41224d:	inc    ebx
  41224e:	aaa    
  41224f:	mov    dl,0x9b
  412251:	out    dx,eax
  412252:	adc    bh,BYTE PTR [ecx+0x16720a33]
  412258:	not    BYTE PTR ds:0x345df072
  41225e:	mov    ebp,0x2987c2f8
  412263:	es push 0x8be2eb8d
  412269:	xchg   ecx,eax
  41226a:	or     eax,0x489ee713
  41226f:	xchg   ebp,eax
  412270:	dec    edx
  412271:	loopne 0x412291
  412273:	fidivr WORD PTR [eax+0xf]
  412276:	addr16 jo 0x41220b
  412279:	or     BYTE PTR [esi-0x68],ch
  41227c:	mov    bh,0x87
  41227e:	pop    ss
  41227f:	cwde   
  412280:	mov    ecx,0xb62d2a4b
  412285:	jecxz  0x41227c
  412287:	push   ebx
  412288:	mov    eax,ds:0x4384f0de
  41228d:	test   eax,0x7cab952
  412292:	mov    cl,0x90
  412294:	add    al,dh
  412296:	xchg   edi,eax
  412297:	xchg   ebx,eax
  412298:	sub    BYTE PTR [ebp-0x205e90ce],dl
  41229e:	test   al,0xcb
  4122a0:	int3   
  4122a1:	adc    eax,0x4b6edede
  4122a6:	in     eax,dx
  4122a7:	mov    WORD PTR [edi-0x243ae9e7],ds
  4122ad:	mov    bp,0x1efc
  4122b1:	in     eax,0x8b
  4122b3:	pop    eax
  4122b4:	scas   al,BYTE PTR es:[edi]
  4122b5:	psrld  mm7,QWORD PTR [ecx]
  4122b8:	and    ebx,DWORD PTR ds:0x299d5200
  4122be:	lods   eax,DWORD PTR ds:[esi]
  4122bf:	jmp    0xee4e9c01
  4122c4:	outs   dx,BYTE PTR ds:[esi]
  4122c5:	cmc    
  4122c6:	jae    0x412274
  4122c8:	sub    BYTE PTR [esi+eiz*4+0x5bf252c4],ah
  4122cf:	sahf   
  4122d0:	mov    edx,esi
  4122d2:	xor    dl,BYTE PTR ds:0xed0489a0
  4122d8:	imul   edx,DWORD PTR [esi-0x647b08d8],0xe9c2a62a
  4122e2:	mov    cl,0x1f
  4122e4:	rcl    BYTE PTR [eax-0x7a3b6b80],0x88
  4122eb:	retf   0x9247
  4122ee:	xor    ah,BYTE PTR [esi]
  4122f0:	or     dl,BYTE PTR [eax-0x137d6c2d]
  4122f6:	test   eax,0x77287974
  4122fb:	jmp    0x412327
  4122fd:	mov    esp,0x9a493882
  412302:	pop    edi
  412303:	cmp    edx,DWORD PTR [ebx+0x4f]
  412306:	or     esi,DWORD PTR [ebp+0x33]
  412309:	loopne 0x412345
  41230b:	sbb    DWORD PTR [esp+ecx*2+0x1dfb5d23],ecx
  412312:	adc    ecx,esp
  412314:	adc    eax,0xf1d5f6fc
  412319:	xchg   ebp,eax
  41231a:	sbb    edi,ebx
  41231c:	enter  0x89d9,0x71
  412320:	inc    ebp
  412321:	jno    0x412321
  412323:	(bad)  
  412324:	les    esp,FWORD PTR [ebp+ebp*8+0x12]
  412328:	arpl   WORD PTR [ebx+0x5986b87f],bp
  41232e:	es push edi
  412330:	(bad)  
  412331:	les    edx,FWORD PTR [edi-0x7b]
  412334:	or     al,0x82
  412336:	xchg   DWORD PTR [ebp+0x0],edx
  412339:	lods   eax,DWORD PTR ds:[esi]
  41233a:	lock or eax,0x7ff207e
  412340:	sti    
  412341:	cmp    BYTE PTR [edx],al
  412343:	ins    BYTE PTR es:[edi],dx
  412344:	pusha  
  412345:	div    edi
  412347:	fmul   st,st(5)
  412349:	xchg   BYTE PTR [esi+0x11664655],bh
  41234f:	addr16 leave 
  412351:	push   ecx
  412352:	leave  
  412353:	jmp    0x8eff:0x54bc9f78
  41235a:	push   ds
  41235b:	(bad)
  41235f:	js     0x4123ae
  412361:	loopne 0x4123bd
  412363:	bound  eax,QWORD PTR [eax+ebp*1-0x5e21aa96]
  41236a:	mov    edi,0x1607e20
  41236f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412370:	inc    esi
  412371:	add    DWORD PTR [ecx+0x67],ebx
  412374:	lds    esi,FWORD PTR [ebx]
  412376:	xchg   esp,eax
  412377:	mov    bl,0xe9
  412379:	repnz shr BYTE PTR [ebp+edx*1+0xeba9823],0xf3
  412382:	lock js 0x41237f
  412385:	pushf  
  412386:	popf   
  412387:	leave  
  412388:	cwde   
  412389:	push   cs
  41238a:	icebp  
  41238b:	jns    0x41230f
  41238d:	inc    ecx
  41238e:	sub    bh,BYTE PTR [ebp+0x66]
  412391:	rcl    ebp,cl
  412393:	mov    dh,0xc1
  412395:	adc    al,0xab
  412397:	stos   BYTE PTR es:[edi],al
  412398:	dec    esp
  412399:	(bad)  
  41239a:	jb     0x41240f
  41239c:	mov    bh,0x47
  41239e:	fwait
  41239f:	mov    ebp,0x4feb74b4
  4123a4:	add    esi,0xffffff9e
  4123a7:	out    0x4c,al
  4123a9:	inc    esi
  4123aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123ab:	fistp  QWORD PTR [esi+ecx*8]
  4123ae:	pop    ds
  4123af:	mov    ebp,0x9a481ee3
  4123b4:	inc    ecx
  4123b5:	mov    eax,DWORD PTR [edx]
  4123b7:	gs inc ecx
  4123b9:	cld    
  4123ba:	jl     0x4123ef
  4123bc:	imul   ecx,DWORD PTR [ebx+edi*8],0x2b196a08
  4123c3:	call   0x7095:0x22e53119
  4123ca:	dec    esi
  4123cb:	inc    esp
  4123cc:	sbb    al,0xfa
  4123ce:	out    0x81,eax
  4123d0:	dec    ecx
  4123d1:	pusha  
  4123d2:	xor    BYTE PTR [esi+0x34770fd4],0x63
  4123d9:	pop    es
  4123da:	push   edx
  4123db:	fld    TBYTE PTR [ebx-0x758d3f9b]
  4123e1:	jl     0x4123b6
  4123e3:	push   edi
  4123e4:	or     bl,BYTE PTR [esi-0x709a0775]
  4123ea:	or     al,0xd4
  4123ec:	pop    ebp
  4123ed:	add    BYTE PTR [ecx-0x498c5cd1],0x5c
  4123f4:	push   ds
  4123f5:	(bad)
  4123f8:	pop    esi
  4123f9:	adc    al,0x7f
  4123fb:	sbb    esp,DWORD PTR [esi]
  4123fd:	inc    ebx
  4123fe:	push   ebx
  4123ff:	and    al,0xc6
  412401:	cmc    
  412402:	(bad)  
  412403:	pusha  
  412404:	adc    esp,DWORD PTR [ebp+ebp*4-0x2e]
  412408:	fldcw  WORD PTR [ecx-0x3b]
  41240b:	stos   DWORD PTR es:[edi],eax
  41240c:	sub    al,0x45
  41240e:	xchg   ebx,eax
  41240f:	mov    ah,0x41
  412411:	add    cl,BYTE PTR [edx]
  412413:	push   ebp
  412414:	sub    BYTE PTR [edi+0x84ee0c8],cl
  41241a:	mov    ch,0x96
  41241c:	retf   0x8b3a
  41241f:	pop    edx
  412420:	call   0x5874:0xa0479a44
  412427:	pop    ds
  412428:	or     cl,0x98
  41242b:	inc    ebx
  41242c:	shld   DWORD PTR [eax],edx,0x77
  412430:	mov    ebx,0x14bce68f
  412435:	nop
  412436:	or     eax,0x329e2e3f
  41243b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41243c:	cmc    
  41243d:	scas   eax,DWORD PTR es:[edi]
  41243e:	mov    ah,0x64
  412440:	cli    
  412441:	and    DWORD PTR [eax+0x5083a3bb],edi
  412447:	pop    ecx
  412448:	fs js  0x412468
  41244b:	or     al,0xbb
  41244d:	jno    0x412493
  41244f:	adc    ebx,DWORD PTR [ebp-0x63]
  412452:	mov    cl,0x43
  412454:	test   DWORD PTR [ecx],ebx
  412456:	add    DWORD PTR [esi+0x7c],esi
  412459:	xor    BYTE PTR [edx-0x484ab9fc],dl
  41245f:	int3   
  412460:	xchg   BYTE PTR [esi+0x34],bl
  412463:	dec    edx
  412464:	add    BYTE PTR [eax+ecx*2-0x346a72c],0x58
  41246c:	imul   eax,DWORD PTR [ecx-0x5f9feb8f],0xc1d2f206
  412476:	sti    
  412477:	pop    DWORD PTR [ecx+0x13]
  41247a:	jmp    0x964e5109
  41247f:	adc    eax,0x97a7f68
  412484:	and    ebp,DWORD PTR [ebp+0x153cac68]
  41248a:	xor    BYTE PTR [ecx+0x7c],dl
  41248d:	adc    al,0x44
  41248f:	aaa    
  412490:	(bad)  
  412491:	mov    cl,0x34
  412493:	(bad)  
  412494:	dec    ecx
  412495:	mov    ecx,DWORD PTR [ebx-0x64630754]
  41249b:	loope  0x412433
  41249d:	aad    0x21
  41249f:	(bad)  
  4124a0:	xlat   BYTE PTR ds:[ebx]
  4124a1:	loope  0x4124a4
  4124a3:	or     esp,DWORD PTR [ebx]
  4124a5:	mov    edx,0xcebfec8d
  4124aa:	dec    esi
  4124ab:	dec    edx
  4124ac:	fmul   st(4),st
  4124ae:	adc    ebx,DWORD PTR [edi+0x1c7aff44]
  4124b4:	pusha  
  4124b5:	adc    cl,ah
  4124b7:	arpl   bx,cx
  4124b9:	retf   0x2041
  4124bc:	add    DWORD PTR [esp+esi*2],ebx
  4124bf:	mov    ebp,0x30b0df90
  4124c4:	ds (bad) 
  4124c6:	and    eax,0x4ba1aa92
  4124cb:	clc    
  4124cc:	adc    DWORD PTR [edx],ebp
  4124ce:	pop    ss
  4124cf:	out    0x13,eax
  4124d1:	idiv   BYTE PTR [eax]
  4124d3:	retf   0x2c15
  4124d6:	fistp  QWORD PTR [esi+0x51]
  4124d9:	jp     0x41252c
  4124db:	dec    edi
  4124dc:	jecxz  0x412475
  4124de:	ret    
  4124df:	inc    DWORD PTR [edi+0x411b1a00]
  4124e5:	mov    ecx,0x4bed585b
  4124ea:	or     esp,eax
  4124ec:	inc    ebp
  4124ed:	fcomp  DWORD PTR [edx+ebx*4]
  4124f0:	retf   0x5699
  4124f3:	sbb    dl,dh
  4124f5:	push   eax
  4124f6:	lea    eax,[ebp-0x6a]
  4124f9:	out    dx,eax
  4124fa:	mov    BYTE PTR [ecx-0x5e],ah
  4124fd:	and    BYTE PTR [eax+eiz*4],cl
  412500:	out    0x38,eax
  412502:	mov    eax,DWORD PTR [esp+ecx*2]
  412505:	jl     0x4124c0
  412507:	les    edi,FWORD PTR [esi+0x15b31388]
  41250d:	mov    ebp,0x43bcd8de
  412512:	xchg   edi,eax
  412513:	jns    0x41249c
  412515:	out    0x84,eax
  412517:	mov    al,0xca
  412519:	adc    eax,0x40622ad7
  41251e:	ret    0x78e1
  412521:	cmp    al,0x11
  412523:	adc    eax,0xe121a302
  412528:	jae    0x4124f4
  41252a:	and    dl,BYTE PTR [ebx]
  41252c:	sbb    esp,esp
  41252e:	push   bx
  412530:	js     0x412505
  412532:	mov    bl,0x95
  412534:	jl     0x412521
  412536:	xor    bh,BYTE PTR [ecx]
  412538:	cmp    ecx,DWORD PTR [edi+0x4ee9be9]
  41253e:	pusha  
  41253f:	and    BYTE PTR [ecx+0x10a35c],0x59
  412546:	jmp    0x8a2:0xa8cb6980
  41254d:	push   ds
  41254e:	psrld  mm2,QWORD PTR [esp]
  412552:	ins    BYTE PTR es:[edi],dx
  412553:	jns    0x412558
  412555:	lods   eax,DWORD PTR ds:[esi]
  412556:	lods   al,BYTE PTR ds:[esi]
  412557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412558:	adc    al,BYTE PTR [ecx+0x18e81b81]
  41255e:	mov    BYTE PTR [ecx+ecx*4-0x5],0x40
  412563:	add    bl,ah
  412565:	add    bh,ah
  412567:	mov    bl,0x2f
  412569:	(bad)  
  41256a:	loopne 0x41258e
  41256c:	jb     0x4125d8
  41256e:	sub    BYTE PTR [ecx],dh
  412570:	ja     0x4125eb
  412572:	cmp    ebx,DWORD PTR [edi-0x7]
  412575:	push   ecx
  412576:	shr    dh,cl
  412578:	xor    BYTE PTR [edx+0x1d8e77e0],dh
  41257e:	push   ss
  41257f:	inc    esp
  412580:	sti    
  412581:	jp     0x41252d
  412583:	add    cl,al
  412585:	mov    ebx,0x408e73e0
  41258a:	ss add al,0xc2
  41258d:	(bad)  
  41258e:	adc    ch,BYTE PTR [esi+eiz*8]
  412591:	cmp    al,0x5f
  412593:	jnp    0x4125f0
  412595:	jns    0x4125a1
  412597:	mov    edx,0xfd986dca
  41259c:	sbb    DWORD PTR [esi-0x5e],0xffffffce
  4125a0:	xchg   ebx,eax
  4125a1:	fcomp  QWORD PTR [ecx+edi*4-0x147a9010]
  4125a8:	rol    BYTE PTR [esi-0x5a],1
  4125ab:	jb     0x4125d7
  4125ad:	and    eax,0x69d8cb68
  4125b2:	sbb    ebx,esp
  4125b4:	jne    0x4125f6
  4125b6:	stc    
  4125b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125b8:	fs test eax,0x5506bb64
  4125be:	fstp   DWORD PTR [esi]
  4125c0:	jnp    0x4125ed
  4125c2:	test   eax,0x39e79723
  4125c7:	dec    ebp
  4125c8:	jle    0x4125c0
  4125ca:	jno    0x41258c
  4125cc:	adc    eax,DWORD PTR [ecx-0x2f0710a]
  4125d2:	jecxz  0x41260e
  4125d4:	mov    esi,0x5b84e223
  4125d9:	push   eax
  4125da:	xor    ecx,ebp
  4125dc:	and    al,0xf6
  4125de:	hlt    
  4125df:	ret    0xbe16
  4125e2:	xchg   ebp,eax
  4125e3:	jne    0x41257e
  4125e5:	xchg   esp,eax
  4125e6:	add    DWORD PTR [esi+0x41],ebp
  4125e9:	jns    0x4125fd
  4125eb:	sahf   
  4125ec:	iret   
  4125ed:	imul   esp,DWORD PTR [edi-0x41],0x5e
  4125f1:	jmp    0x412590
  4125f3:	out    0xd1,eax
  4125f5:	test   BYTE PTR [ebp+0x3c],ah
  4125f8:	sub    eax,0x7079e947
  4125fd:	sbb    ah,bh
  4125ff:	dec    eax
  412600:	sub    DWORD PTR [esi-0x5232f408],ebx
  412606:	xchg   bl,dh
  412608:	pop    esp
  412609:	push   esp
  41260a:	cmp    ecx,DWORD PTR [ecx]
  41260c:	cmp    bl,BYTE PTR [esi-0x7617cb83]
  412612:	pop    ss
  412613:	iret   
  412614:	inc    ebx
  412615:	sub    DWORD PTR [ecx-0x7db6fe29],0x8
  41261c:	sbb    ebx,DWORD PTR [ecx]
  41261e:	cli    
  41261f:	push   esi
  412620:	stos   BYTE PTR es:[edi],al
  412621:	in     al,0x1e
  412623:	leave  
  412624:	xchg   esi,eax
  412625:	dec    eax
  412626:	mov    ebp,0x412150f5
  41262b:	out    dx,eax
  41262c:	(bad)  
  41262d:	mov    eax,0xaddd32d
  412632:	jle    0x4125b7
  412634:	ins    BYTE PTR es:[edi],dx
  412635:	and    BYTE PTR [edx+ecx*1],bl
  412638:	or     al,0xb
  41263a:	mov    eax,0xdf519b12
  41263f:	mov    DWORD PTR [eax-0xd],esi
  412642:	pop    es
  412643:	in     eax,0xfe
  412645:	cmp    BYTE PTR [edx+0x1c],0x7f
  412649:	xchg   ebx,eax
  41264a:	mov    ecx,0xc430e4d8
  41264f:	outs   dx,DWORD PTR ds:[esi]
  412650:	xchg   edx,eax
  412651:	fadd   DWORD PTR [eax+0x7d]
  412654:	mov    edx,0x5b592763
  412659:	int    0xd1
  41265b:	scas   eax,DWORD PTR es:[edi]
  41265c:	outs   dx,BYTE PTR ds:[esi]
  41265d:	(bad)  
  41265e:	pop    edx
  41265f:	fadd   QWORD PTR [edx]
  412661:	stos   DWORD PTR es:[edi],eax
  412662:	dec    eax
  412663:	aaa    
  412664:	lock ret 
  412666:	sub    BYTE PTR [ebx-0x52],al
  412669:	cmp    al,0xd8
  41266b:	mov    edi,0x64f0d51c
  412670:	add    ecx,DWORD PTR [ecx]
  412672:	jl     0x41265c
  412674:	out    0x3b,al
  412676:	cwde   
  412677:	rcr    BYTE PTR [edx+0x38],cl
  41267a:	mov    cl,0xf7
  41267c:	stos   BYTE PTR es:[edi],al
  41267d:	jle    0x41260a
  41267f:	les    ecx,FWORD PTR [ebx-0x25129900]
  412685:	mov    al,ds:0x6db8f078
  41268a:	cmp    edi,DWORD PTR [eax-0x709459fd]
  412690:	add    al,0xb9
  412692:	out    dx,al
  412693:	fist   DWORD PTR [edx+0x16e6e992]
  412699:	jle    0x4126c7
  41269b:	pop    edx
  41269c:	or     eax,0x1eaffd9f
  4126a1:	lock and BYTE PTR [ebx+0x20],bh
  4126a5:	retf   
  4126a6:	and    eax,0x8c94d741
  4126ab:	test   DWORD PTR [ebx],ebx
  4126ad:	push   0xffffffcc
  4126af:	pop    es
  4126b0:	xor    bh,ah
  4126b2:	lds    ecx,FWORD PTR [ebx-0x74e48523]
  4126b8:	(bad)  ds:0x67f52228
  4126be:	fwait
  4126bf:	inc    esi
  4126c0:	xchg   esi,eax
  4126c1:	sahf   
  4126c2:	mov    bh,0x57
  4126c4:	popa   
  4126c5:	push   edx
  4126c6:	aaa    
  4126c7:	cmp    DWORD PTR [edi],ebx
  4126c9:	adc    BYTE PTR [ecx-0x62a47150],0xce
  4126d0:	dec    esp
  4126d1:	clc    
  4126d2:	xor    DWORD PTR [eax+0x57],0x2a
  4126d6:	add    ch,BYTE PTR [ebp-0x24]
  4126d9:	gs mov al,ds:0x1e6f9e88
  4126e0:	xor    eax,esp
  4126e2:	and    DWORD PTR [edx],esi
  4126e4:	xchg   edx,eax
  4126e5:	push   ecx
  4126e6:	inc    ebp
  4126e7:	xchg   ebx,eax
  4126e8:	fst    DWORD PTR [ecx]
  4126ea:	push   cs
  4126eb:	dec    esi
  4126ec:	add    eax,0xb677dbd3
  4126f1:	dec    edi
  4126f2:	and    BYTE PTR [eax-0x28],al
  4126f5:	es cs dec edx
  4126f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126f9:	adc    DWORD PTR [eax],esi
  4126fb:	mov    esp,0x61b9a173
  412700:	mov    edi,0x1d30c48a
  412705:	sbb    al,0xae
  412707:	into   
  412708:	xchg   edi,eax
  412709:	jbe    0x41271a
  41270b:	add    ecx,DWORD PTR [edx]
  41270d:	fcmovnbe st,st(2)
  41270f:	fwait
  412710:	imul   ebx,DWORD PTR [esi-0x10],0x1c
  412714:	sahf   
  412715:	in     al,0xef
  412717:	pusha  
  412718:	and    DWORD PTR [ecx],ebx
  41271a:	inc    ebp
  41271b:	mov    esp,0x7eb394ec
  412720:	sar    DWORD PTR [esi-0x58],0xff
  412724:	sti    
  412725:	stc    
  412726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412727:	pop    ebx
  412728:	psubsb mm7,QWORD PTR [edi-0x22d745d9]
  41272f:	or     BYTE PTR [edx],dl
  412731:	int    0x76
  412733:	pop    esi
  412734:	push   cs
  412735:	js     0x41277e
  412737:	adc    cl,BYTE PTR [edi+esi*2-0x5d]
  41273b:	fcmovu st,st(0)
  41273d:	loop   0x4126da
  41273f:	dec    ecx
  412740:	xchg   edx,eax
  412741:	mov    eax,ecx
  412743:	and    DWORD PTR [edi+esi*2+0x53],esp
  412747:	xchg   ebx,eax
  412748:	cs pop edx
  41274a:	(bad)  
  41274b:	mov    dh,0x58
  41274d:	sbb    ebx,DWORD PTR [ecx+0x68e530ff]
  412753:	sbb    al,0x6c
  412755:	ret    
  412756:	xchg   BYTE PTR [ebp+0x6f],al
  412759:	scas   al,BYTE PTR es:[edi]
  41275a:	xchg   ecx,eax
  41275b:	fwait
  41275c:	push   0xffffffe1
  41275e:	jge    0x4127a0
  412760:	sbb    al,0xc7
  412762:	and    esp,DWORD PTR [edi-0x42b0dcae]
  412768:	mov    WORD PTR [edx+0x33],?
  41276b:	(bad)  
  41276c:	(bad)  
  41276d:	dec    ebp
  41276e:	sub    al,0x99
  412770:	repnz loopne 0x4126fe
  412773:	loope  0x412738
  412775:	jg     0x4127d3
  412777:	outs   dx,DWORD PTR ds:[esi]
  412778:	mov    bh,0x91
  41277a:	add    dh,bl
  41277c:	mov    al,ds:0x9cfb7d2f
  412781:	rcl    bl,cl
  412783:	cmc    
  412784:	sti    
  412785:	sbb    cl,0x9
  412788:	stos   DWORD PTR es:[edi],eax
  412789:	dec    esi
  41278a:	xor    DWORD PTR [esi-0x2d],edi
  41278d:	js     0x412795
  41278f:	jno    0x4127b3
  412791:	in     eax,dx
  412792:	lock cdq 
  412794:	sub    eax,0xe063fead
  412799:	xchg   edx,eax
  41279a:	imul   eax,DWORD PTR [ebx],0xc8b666d4
  4127a0:	mov    DWORD PTR [edi],ebx
  4127a2:	inc    dh
  4127a4:	std    
  4127a5:	sub    ah,BYTE PTR [edi-0x37ff10d9]
  4127ab:	push   edx
  4127ac:	and    al,0xdf
  4127ae:	mov    esi,0xe8d406e9
  4127b3:	jle    0x412739
  4127b5:	dec    edi
  4127b6:	sahf   
  4127b7:	jmp    0x9098:0x5f90d98a
  4127be:	(bad)  
  4127bf:	or     BYTE PTR [ebp-0x41326ead],bh
  4127c5:	fnstcw WORD PTR [edx+0x223f57a2]
  4127cb:	add    BYTE PTR [eax+eiz*2+0x6118781f],bh
  4127d2:	retf   
  4127d3:	sbb    ebx,DWORD PTR [esi+0x7915d1c4]
  4127d9:	int3   
  4127da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127db:	mov    eax,ss:0xcd48bef1
  4127e1:	jecxz  0x4127db
  4127e3:	xchg   edi,eax
  4127e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e5:	not    BYTE PTR [eax-0x32]
  4127e8:	cmp    DWORD PTR [esi-0x15],edi
  4127eb:	jnp    0x412816
  4127ed:	clc    
  4127ee:	jns    0x4127d5
  4127f0:	jecxz  0x41283c
  4127f2:	lahf   
  4127f3:	and    DWORD PTR [edx+0xa9032b1],esp
  4127f9:	(bad)  
  4127fa:	pop    ss
  4127fb:	retf   0x24da
  4127fe:	test   eax,0x66facfdc
  412803:	adc    eax,0x6a14eb76
  412808:	adc    DWORD PTR [ecx+0x4f],ebx
  41280b:	in     eax,dx
  41280c:	ins    BYTE PTR es:[edi],dx
  41280d:	test   al,0xd
  412810:	add    eax,DWORD PTR [edi+0x51eab543]
  412816:	push   ss
  412817:	lahf   
  412818:	mov    al,0x93
  41281a:	lds    ebx,FWORD PTR [ebx-0x2b]
  41281d:	xchg   esp,eax
  41281e:	scas   al,BYTE PTR es:[edi]
  41281f:	ds jno 0x412810
  412822:	mov    ss,WORD PTR [ebp-0x58]
  412825:	cwde   
  412826:	mov    ebp,0xba5c6ed5
  41282b:	jae    0x412828
  41282d:	mov    eax,ds:0x2118932f
  412832:	popa   
  412833:	mov    WORD PTR [edi-0x70c98500],gs
  412839:	and    al,0x47
  41283b:	cmp    edx,0xffffff84
  41283e:	mov    dl,0xea
  412840:	(bad)  
  412841:	sub    ch,bh
  412843:	pusha  
  412844:	outs   dx,BYTE PTR ds:[esi]
  412845:	leave  
  412846:	mov    ecx,0xb49fe915
  41284b:	jbe    0x412874
  41284d:	cmc    
  41284e:	mov    dh,0xee
  412850:	imul   edx,DWORD PTR ds:0xe28240,0xdb524052
  41285a:	out    0x37,eax
  41285c:	sub    esp,esp
  41285e:	cmp    eax,0x1fb8c27b
  412863:	repnz inc esp
  412865:	xchg   BYTE PTR [ecx],al
  412867:	shl    BYTE PTR [ebx],0x45
  41286a:	mov    bh,0x19
  41286c:	and    BYTE PTR [ebx],0xa0
  41286f:	loop   0x412835
  412871:	sub    DWORD PTR [ecx-0x1c],esp
  412874:	and    eax,0xd7d1931a
  412879:	das    
  41287a:	xchg   cl,ah
  41287c:	push   ebp
  41287d:	shl    DWORD PTR [eax+0x5719cbe2],1
  412883:	cmp    ah,dh
  412885:	sub    bh,BYTE PTR [ebx-0x2b]
  412888:	xor    ebp,0x44
  41288b:	repz push ds
  41288d:	add    DWORD PTR [ebp-0x40],ebx
  412890:	and    al,0x1
  412892:	ins    DWORD PTR es:[edi],dx
  412893:	adc    al,BYTE PTR [edi+ecx*4-0x204ab9c2]
  41289a:	push   ss
  41289b:	adc    BYTE PTR [ecx-0x2ac3ccd4],bl
  4128a1:	pop    ds
  4128a2:	jg     0x41288e
  4128a4:	mov    WORD PTR ds:0x945e76de,es
  4128aa:	mov    dl,0x99
  4128ac:	mov    ch,0xbc
  4128ae:	das    
  4128af:	cwde   
  4128b0:	leave  
  4128b1:	mov    ah,BYTE PTR [esi]
  4128b3:	fiadd  WORD PTR ds:0x194c68b7
  4128b9:	in     eax,dx
  4128ba:	hlt    
  4128bb:	adc    DWORD PTR [ebx+0x6bd61124],ecx
  4128c1:	outs   dx,BYTE PTR ds:[esi]
  4128c2:	popf   
  4128c3:	cmp    dh,BYTE PTR [eax]
  4128c5:	mov    eax,ds:0x28f0c9e0
  4128ca:	push   0xffffffc8
  4128cc:	not    DWORD PTR [eax+0x29]
  4128cf:	sub    BYTE PTR [ecx+0xbc1e90a],ch
  4128d5:	or     ch,BYTE PTR ds:0x70d8d27c
  4128db:	mov    DWORD PTR [ebx],ebp
  4128dd:	push   ss
  4128de:	sub    DWORD PTR [ebp+0x70],ecx
  4128e1:	(bad)  
  4128e2:	jl     0x41287b
  4128e4:	pop    esi
  4128e5:	and    BYTE PTR [edx],dh
  4128e7:	sar    BYTE PTR fs:[edi+0x49],cl
  4128eb:	add    bl,dh
  4128ed:	sbb    BYTE PTR [eax+edi*8],cl
  4128f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128f1:	mov    ds:0x5c9435eb,eax
  4128f6:	dec    edi
  4128f7:	add    al,0x70
  4128f9:	shl    DWORD PTR [ecx+0x5a],0x3e
  4128fd:	mov    ?,WORD PTR [eax]
  4128ff:	ss out 0x64,eax
  412902:	mov    dl,0x54
  412904:	or     esi,ebx
  412906:	shr    ecx,cl
  412908:	or     DWORD PTR [eax+0x504f8],edx
  41290e:	cmp    ebx,DWORD PTR [ebp+0x410d7db9]
  412914:	mov    dl,BYTE PTR [ebx]
  412916:	rcr    DWORD PTR [eax-0x1],0x38
  41291a:	stos   BYTE PTR es:[edi],al
  41291b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41291c:	(bad)  
  41291d:	mov    ah,0x79
  41291f:	mov    ds:0x1a579a64,al
  412924:	sbb    al,0xa7
  412926:	add    ecx,ebx
  412928:	xor    dl,BYTE PTR [esi+ecx*1-0x4c41e5ff]
  41292f:	jp     0x4128ef
  412931:	mov    esi,DWORD PTR [ebp-0x4cfc4e8c]
  412937:	mov    ecx,0xf42f1e82
  41293c:	add    BYTE PTR [eax],dh
  41293e:	stc    
  41293f:	(bad)  
  412940:	and    ebx,DWORD PTR [esi+0x4c]
  412943:	inc    ebx
  412944:	mov    bl,0x45
  412946:	sub    ah,ch
  412948:	inc    edx
  412949:	es mov dh,0xeb
  41294c:	or     bh,BYTE PTR [eax-0x69e444f2]
  412952:	fnstsw WORD PTR ds:0xa8db6a16
  412958:	mov    ebp,0x9c5540ac
  41295d:	test   eax,0x8fade042
  412962:	popa   
  412963:	inc    ebx
  412964:	cli    
  412965:	adc    al,BYTE PTR [eax]
  412967:	lds    ecx,FWORD PTR [esi-0x3d]
  41296a:	push   esi
  41296b:	cmp    BYTE PTR [ebx+0x63],dh
  41296e:	fidiv  DWORD PTR [eax+esi*1]
  412971:	sbb    eax,DWORD PTR [ecx+0x34]
  412974:	push   ss
  412975:	push   cs
  412976:	gs leave 
  412978:	adc    DWORD PTR [ebp-0x700b0710],ebx
  41297e:	inc    ebx
  41297f:	retf   0xef06
  412982:	ret    
  412983:	xchg   ecx,eax
  412984:	sub    BYTE PTR [edi+0x7a4426a4],0xd0
  41298b:	aaa    
  41298c:	popf   
  41298d:	push   edx
  41298e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41298f:	cmp    ebx,ebx
  412991:	xchg   ebp,eax
  412992:	popf   
  412993:	mov    bh,0x39
  412995:	icebp  
  412996:	push   eax
  412997:	shl    DWORD PTR [ebp-0x25c64a5b],cl
  41299d:	xchg   DWORD PTR [edi+0x79e5fe6b],ebp
  4129a3:	inc    ebx
  4129a4:	lahf   
  4129a5:	pop    es
  4129a6:	pushf  
  4129a7:	inc    eax
  4129a8:	push   esi
  4129a9:	inc    ebx
  4129aa:	or     ch,dh
  4129ac:	(bad)  
  4129ad:	lods   al,BYTE PTR ds:[esi]
  4129ae:	rcl    BYTE PTR [ebx-0x18255d05],0x68
  4129b5:	or     ebx,DWORD PTR [ecx+0x45]
  4129b8:	out    0x93,eax
  4129ba:	fnstsw WORD PTR [edx+edi*2+0x7e313afa]
  4129c1:	mov    bl,0x6d
  4129c3:	ss mov ch,0x7
  4129c6:	jmp    DWORD PTR [edi]
  4129c8:	adc    dh,BYTE PTR [eax+0x3bf727df]
  4129ce:	(bad)  
  4129cf:	neg    esp
  4129d1:	pop    ebp
  4129d2:	aas    
  4129d3:	lds    esi,FWORD PTR [edx-0x2bc36e4]
  4129d9:	jo     0x4129ec
  4129db:	(bad)  
  4129dc:	ins    BYTE PTR es:[edi],dx
  4129dd:	xchg   edi,eax
  4129de:	inc    edx
  4129df:	loopne 0x412a4f
  4129e1:	adc    eax,DWORD PTR [ebx+0xd]
  4129e4:	jbe    0x4129ee
  4129e6:	mov    al,0xa8
  4129e8:	call   0x9e419136
  4129ed:	retf   0xd5b
  4129f0:	push   ebx
  4129f1:	xchg   esp,eax
  4129f2:	adc    eax,0x3b88ead0
  4129f7:	mov    ah,0xed
  4129f9:	pushf  
  4129fa:	and    BYTE PTR [eax+0x2a809091],al
  412a00:	stc    
  412a01:	sbb    BYTE PTR [edx],ah
  412a03:	cdq    
  412a04:	dec    edi
  412a05:	ror    ah,cl
  412a07:	mov    esi,DWORD PTR [edx+ecx*8-0x4c]
  412a0b:	adc    BYTE PTR [ebp+eax*1+0x4f],bl
  412a0f:	pop    ebp
  412a10:	inc    edx
  412a11:	xchg   bl,ah
  412a13:	jae    0x4129bb
  412a15:	lods   al,BYTE PTR ds:[esi]
  412a16:	test   BYTE PTR [edi+edi*1+0x24a83aab],dh
  412a1d:	test   DWORD PTR [ecx],edi
  412a1f:	iret   
  412a20:	mov    ah,0xaa
  412a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a23:	fwait
  412a24:	mov    ds:0x22faab80,eax
  412a29:	and    al,0xf9
  412a2b:	inc    ecx
  412a2c:	mov    ebx,0x8a82d147
  412a31:	jne    0x4129f2
  412a33:	xchg   dh,bl
  412a35:	inc    edx
  412a36:	cli    
  412a37:	cmp    eax,0x300ed13b
  412a3c:	dec    eax
  412a3d:	shr    edx,cl
  412a3f:	add    al,ah
  412a41:	call   0x99770e71
  412a46:	sub    esi,esi
  412a48:	jb     0x412abf
  412a4a:	and    ch,BYTE PTR [ebx-0x4f]
  412a4d:	mov    ah,0xd8
  412a4f:	sar    DWORD PTR [ebx],cl
  412a51:	xor    BYTE PTR [eax-0x389ab188],0x59
  412a58:	and    ebx,DWORD PTR [esi]
  412a5a:	sub    DWORD PTR [edx+0x67b47537],ecx
  412a60:	jge    0x412a6e
  412a62:	neg    BYTE PTR [ecx-0x7d]
  412a65:	jmp    0xfe29c27f
  412a6a:	and    eax,0x7a7dc82b
  412a6f:	pushw  es
  412a71:	sub    al,0x66
  412a73:	cdq    
  412a74:	cmp    eax,0x3fea844f
  412a79:	push   edi
  412a7a:	mov    ebx,0x4f80c28d
  412a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a80:	test   dh,cl
  412a82:	lods   al,BYTE PTR ds:[esi]
  412a83:	pop    ebx
  412a84:	push   ebp
  412a85:	sub    esi,0xbedf52f4
  412a8b:	cmp    DWORD PTR [esi+0x72],edi
  412a8e:	invlpg BYTE PTR [edx+ecx*2]
  412a92:	call   0x38c1:0x68d37439
  412a99:	mov    ch,0x23
  412a9b:	adc    al,0x8
  412a9d:	xchg   ecx,eax
  412a9e:	xor    BYTE PTR ds:0x6859669a,bl
  412aa4:	mov    edi,0xab556816
  412aa9:	dec    esi
  412aaa:	mov    al,ds:0x46866acb
  412aaf:	jno    0x412af1
  412ab1:	inc    ebx
  412ab2:	pop    ss
  412ab3:	mov    bl,dh
  412ab5:	je     0x412a55
  412ab7:	pop    ss
  412ab8:	jg     0x412abf
  412aba:	ins    DWORD PTR es:[edi],dx
  412abb:	xchg   edi,eax
  412abc:	lds    ebx,FWORD PTR [edi+0xf]
  412abf:	add    BYTE PTR [eax],cl
  412ac1:	inc    ecx
  412ac2:	fwait
  412ac3:	dec    edx
  412ac4:	je     0x412acc
  412ac6:	cmp    al,0xe5
  412ac8:	push   edi
  412ac9:	xchg   ecx,eax
  412aca:	inc    esi
  412acb:	inc    ebp
  412acc:	add    ebx,DWORD PTR [ebp+0x20f5005]
  412ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad3:	dec    edx
  412ad4:	mov    ds:0x99cb8c55,al
  412ad9:	leave  
  412ada:	ret    0xe142
  412add:	jmp    0xf6f3:0x15b96aed
  412ae4:	mov    esi,0xd65b22e7
  412ae9:	xlat   BYTE PTR ds:[ebx]
  412aea:	stos   BYTE PTR es:[edi],al
  412aeb:	jo     0x412b0f
  412aed:	mov    edx,0x77348d2a
  412af2:	arpl   cx,ax
  412af4:	das    
  412af5:	sbb    al,0xd0
  412af7:	and    esi,DWORD PTR [ebp+eax*4-0x719c29cf]
  412afe:	cdq    
  412aff:	js     0x412aa8
  412b01:	ror    DWORD PTR [ecx-0x7],cl
  412b04:	sbb    bh,BYTE PTR [edi]
  412b06:	jno    0x412b01
  412b08:	pop    ds
  412b09:	loope  0x412a9f
  412b0b:	mov    esi,0x8cc1fc7d
  412b10:	ret    
  412b11:	jecxz  0x412b4d
  412b13:	lods   al,BYTE PTR ds:[esi]
  412b14:	inc    ecx
  412b15:	mov    ah,0x99
  412b17:	push   ebx
  412b18:	pushf  
  412b19:	into   
  412b1a:	or     edi,esi
  412b1c:	pop    esi
  412b1d:	xor    al,0xa5
  412b1f:	cmp    DWORD PTR [edx-0x8],edi
  412b22:	inc    esi
  412b23:	xor    al,0x98
  412b25:	adc    BYTE PTR [edx-0x51aac807],bh
  412b2b:	test   BYTE PTR [ebx-0xe99be47],ah
  412b31:	imul   ebx,edi,0xffffff82
  412b34:	call   0x1346:0x315f46ad
  412b3b:	dec    edi
  412b3c:	hlt    
  412b3d:	adc    ch,BYTE PTR [esi-0x1f]
  412b40:	pop    ecx
  412b41:	add    DWORD PTR [ebx],eax
  412b43:	jno    0x412aca
  412b45:	pop    esp
  412b46:	pop    ebx
  412b47:	or     eax,0x195f0ca2
  412b4c:	sub    BYTE PTR [eax+edx*8],0x5f
  412b50:	sbb    ebx,esp
  412b52:	stc    
  412b53:	pop    eax
  412b54:	jb     0x412b35
  412b56:	mov    dh,0x8b
  412b58:	scas   al,BYTE PTR es:[edi]
  412b59:	and    al,0xa3
  412b5b:	and    eax,0x2578db09
  412b60:	arpl   WORD PTR [eax+eax*4-0x5eef7d4],di
  412b67:	mov    eax,0xc5440daa
  412b6c:	inc    edi
  412b6d:	scas   eax,DWORD PTR es:[edi]
  412b6e:	icebp  
  412b6f:	add    BYTE PTR [esi+0x7a40340a],al
  412b75:	or     al,0x80
  412b77:	fs sbb cl,cl
  412b7a:	inc    eax
  412b7b:	mov    BYTE PTR [edi+ebx*2-0x6244c261],bl
  412b82:	hlt    
  412b83:	cli    
  412b84:	sbb    ch,BYTE PTR [esi-0x6230a038]
  412b8a:	xchg   edx,eax
  412b8b:	xchg   esi,eax
  412b8c:	fbld   TBYTE PTR [edx+0x3]
  412b8f:	mov    esp,0x5cd4998
  412b94:	out    dx,al
  412b95:	stc    
  412b96:	inc    cl
  412b98:	mov    cl,0xd5
  412b9a:	js     0x412bda
  412b9c:	arpl   si,bx
  412b9e:	stos   DWORD PTR es:[edi],eax
  412b9f:	shl    DWORD PTR [eax-0x2813ec49],cl
  412ba5:	icebp  
  412ba6:	pop    edx
  412ba7:	jmp    0x3e8f86f1
  412bac:	mov    ecx,0x49270bd
  412bb1:	mov    ebx,0x1ff7e3f8
  412bb6:	popa   
  412bb7:	inc    ecx
  412bb8:	fimul  DWORD PTR [ebp+0x76c4516e]
  412bbe:	stos   DWORD PTR es:[edi],eax
  412bbf:	and    eax,0x30770b25
  412bc4:	add    ch,BYTE PTR [edx+ebp*4+0x610fbe8a]
  412bcb:	jae    0x412bac
  412bcd:	mov    ds:0x1547bd2d,al
  412bd2:	or     al,BYTE PTR [ebp+0x41]
  412bd5:	cdq    
  412bd6:	xor    ecx,DWORD PTR [edi+0x356368c1]
  412bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bdd:	push   0xffffffe0
  412bdf:	and    bh,bh
  412be1:	leave  
  412be2:	addr16 hlt 
  412be4:	inc    esi
  412be5:	lds    ecx,FWORD PTR [ebx+0x30b41ebc]
  412beb:	into   
  412bec:	or     al,0x90
  412bee:	push   0x51b7f5a0
  412bf3:	(bad)  
  412bf4:	fld    TBYTE PTR [ebx-0x6e]
  412bf7:	and    BYTE PTR [edi+0x61],ch
  412bfa:	call   0x4c5f:0x1c8e5121
  412c01:	cmp    al,0x1d
  412c03:	hlt    
  412c04:	shl    dh,1
  412c06:	mov    cl,0x78
  412c08:	inc    ecx
  412c09:	push   eax
  412c0a:	mov    eax,ds:0x4027db10
  412c0f:	std    
  412c10:	(bad)  [edx-0x2c133912]
  412c16:	pushf  
  412c17:	sub    edx,esi
  412c19:	sbb    DWORD PTR [esi-0x60],ebp
  412c1c:	inc    esp
  412c1d:	ss pop ds
  412c1f:	xchg   edi,eax
  412c20:	push   edx
  412c21:	scas   al,BYTE PTR es:[edi]
  412c22:	sub    BYTE PTR gs:[esi],al
  412c25:	cmp    eax,0x5a068af3
  412c2a:	xor    eax,0x44a8e323
  412c2f:	ss mov ah,dh
  412c32:	xor    eax,0x7c642135
  412c37:	and    dh,BYTE PTR [edx+0x2ea1f922]
  412c3d:	nop
  412c3e:	pop    esi
  412c3f:	inc    esi
  412c40:	dec    ecx
  412c41:	sahf   
  412c42:	mov    ecx,0x9bb5f22b
  412c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c48:	lods   al,BYTE PTR ds:[esi]
  412c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c4a:	dec    eax
  412c4b:	mov    eax,0x46b33952
  412c50:	mov    BYTE PTR [ebx+ebx*2+0x72],0xe3
  412c55:	cmc    
  412c56:	lods   eax,DWORD PTR ds:[esi]
  412c57:	fucomp st(7)
  412c59:	div    BYTE PTR [edx+0x34]
  412c5c:	and    dl,ch
  412c5e:	or     bl,cl
  412c60:	jbe    0x412c42
  412c62:	(bad)  
  412c63:	pop    ecx
  412c64:	adc    BYTE PTR [edi+0x2b],ah
  412c67:	fcomp  DWORD PTR [ebp+esi*2+0x64d512cd]
  412c6e:	lods   al,BYTE PTR ds:[esi]
  412c6f:	or     eax,0x7a1b184e
  412c74:	mov    dl,0x2c
  412c76:	loopne 0x412cce
  412c78:	test   al,0xce
  412c7a:	ins    DWORD PTR es:[edi],dx
  412c7b:	(bad)  
  412c7c:	rcl    BYTE PTR [ebx+0x6640bb75],1
  412c82:	push   ss
  412c83:	pop    ecx
  412c84:	fldenv [ebx+0x3a5282e4]
  412c8a:	push   ds
  412c8b:	xchg   ebx,eax
  412c8c:	xor    al,0x13
  412c8e:	scas   eax,DWORD PTR es:[edi]
  412c8f:	pop    ebx
  412c90:	push   ss
  412c91:	stc    
  412c92:	call   0x34de05d8
  412c97:	mov    al,0xba
  412c99:	stc    
  412c9a:	mov    ds:0x6a1c3cfc,eax
  412c9f:	ins    BYTE PTR es:[edi],dx
  412ca0:	add    eax,0x238a2f56
  412ca5:	mov    DWORD PTR [esi],ecx
  412ca7:	xchg   ebp,eax
  412ca8:	out    dx,al
  412ca9:	fcom   DWORD PTR [bp+di+0x6753]
  412cae:	sub    DWORD PTR [eax-0x23],ecx
  412cb1:	in     al,dx
  412cb2:	outs   dx,DWORD PTR ds:[esi]
  412cb3:	fadd   st(1),st
  412cb5:	xchg   DWORD PTR [edx],edx
  412cb7:	popf   
  412cb8:	int3   
  412cb9:	repnz (bad) 
  412cbb:	imul   esi,DWORD PTR [ebp+0x20],0xffffffd4
  412cbf:	mov    al,0x39
  412cc1:	(bad)  
  412cc2:	out    dx,eax
  412cc3:	pushf  
  412cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cc5:	pop    es
  412cc6:	xlat   BYTE PTR ds:[ebx]
  412cc7:	sub    edi,ebp
  412cc9:	ffree  st(7)
  412ccb:	out    0xdf,eax
  412ccd:	test   al,0x6b
  412ccf:	aas    
  412cd0:	fwait
  412cd1:	push   ss
  412cd2:	mov    dl,ah
  412cd4:	stc    
  412cd5:	inc    esp
  412cd6:	dec    ebp
  412cd7:	nop
  412cd8:	dec    esp
  412cd9:	inc    ebx
  412cda:	rcl    cl,cl
  412cdc:	xchg   edi,eax
  412cdd:	stc    
  412cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cdf:	sbb    ah,BYTE PTR [edi+0x5e]
  412ce2:	xchg   esp,eax
  412ce3:	cs mov esi,0xafb5d56c
  412ce9:	mov    cl,0xf8
  412ceb:	daa    
  412cec:	push   edi
  412ced:	xchg   edx,eax
  412cee:	mov    ah,0x1f
  412cf0:	jle    0x412d43
  412cf2:	cli    
  412cf3:	inc    BYTE PTR [edx-0x78]
  412cf6:	lahf   
  412cf7:	push   edx
  412cf8:	aaa    
  412cf9:	ret    0xc6a2
  412cfc:	xchg   edx,eax
  412cfd:	mov    esi,ds
  412cff:	pop    ds
  412d00:	ins    BYTE PTR es:[edi],dx
  412d01:	ss dec esp
  412d03:	xchg   esp,eax
  412d04:	push   cs
  412d05:	mov    ecx,0x4fb6a24d
  412d0a:	sahf   
  412d0b:	dec    ebx
  412d0c:	sbb    al,0x4
  412d0e:	add    BYTE PTR [esi+eax*4+0x5d],cl
  412d12:	xchg   edi,eax
  412d13:	dec    edx
  412d14:	mov    ds:0x6f4f14b7,al
  412d19:	fcmovnb st,st(5)
  412d1b:	test   DWORD PTR [ecx],esi
  412d1d:	push   es
  412d1e:	or     al,0xe9
  412d20:	in     eax,0x32
  412d22:	jmp    0x1be3:0x8eb7d686
  412d29:	nop
  412d2a:	xchg   ebx,eax
  412d2b:	(bad)  
  412d2c:	mov    ds:0x26c3753b,eax
  412d31:	rcr    bh,0x7d
  412d34:	sahf   
  412d35:	mov    ds:0xadf8dcc7,eax
  412d3a:	dec    edi
  412d3b:	mov    dl,0x20
  412d3d:	sti    
  412d3e:	adc    al,0x50
  412d40:	es push edi
  412d42:	dec    edx
  412d43:	and    DWORD PTR [edx+0xf3090e],ebp
  412d49:	inc    ecx
  412d4a:	push   0x6e
  412d4c:	out    dx,eax
  412d4d:	into   
  412d4e:	cmc    
  412d4f:	pop    ebx
  412d50:	ror    DWORD PTR [edx],cl
  412d52:	sub    al,0xac
  412d54:	jg     0x412d1a
  412d56:	ja     0x412dc8
  412d58:	mov    ebp,0x23e174d3
  412d5d:	mov    eax,ds:0xa9a41aeb
  412d62:	push   ss
  412d63:	fidiv  DWORD PTR [esi-0x289cb5ad]
  412d69:	mov    eax,0xb7627347
  412d6e:	push   esi
  412d6f:	test   BYTE PTR [ecx+0x70ff41f9],0x6d
  412d76:	jbe    0x412d93
  412d78:	add    eax,0xb41cabde
  412d7d:	cs stos DWORD PTR es:[edi],eax
  412d7f:	fmul   QWORD PTR [edx]
  412d81:	push   esi
  412d82:	scas   al,BYTE PTR es:[edi]
  412d83:	popa   
  412d84:	push   edx
  412d85:	xchg   ecx,eax
  412d86:	sbb    al,0xc6
  412d88:	xchg   DWORD PTR [edi-0x5a7c3b16],ecx
  412d8e:	pop    ebx
  412d8f:	jno    0x412de6
  412d91:	add    cl,BYTE PTR [edi+0x33]
  412d94:	mov    bl,0x89
  412d96:	add    ecx,DWORD PTR [ecx+0x25]
  412d99:	jmp    0x876b:0xc3e40dcf
  412da0:	push   cs
  412da1:	xchg   edi,esp
  412da3:	js     0x412e23
  412da5:	out    dx,al
  412da6:	les    edx,FWORD PTR [ecx]
  412da8:	jg     0x412d89
  412daa:	adc    dl,ah
  412dac:	outs   dx,DWORD PTR ds:[esi]
  412dad:	fist   DWORD PTR [esi-0x20]
  412db0:	add    dl,bl
  412db2:	das    
  412db3:	jnp    0x412d47
  412db5:	ret    0x175d
  412db8:	inc    ebx
  412db9:	jnp    0x412e36
  412dbb:	push   ebx
  412dbc:	pop    eax
  412dbd:	call   0x5541:0xd3119c5f
  412dc4:	adc    esp,eax
  412dc6:	imul   ebp,DWORD PTR [ecx-0x11],0xffffff98
  412dca:	dec    esi
  412dcb:	pop    esp
  412dcc:	dec    ebp
  412dcd:	sti    
  412dce:	inc    BYTE PTR [ebx-0x42]
  412dd1:	aas    
  412dd2:	(bad)  
  412dd3:	fxch   st(7)
  412dd5:	fild   DWORD PTR [ebx-0x60d5e4ac]
  412ddb:	into   
  412ddc:	in     eax,dx
  412ddd:	xchg   edi,eax
  412dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ddf:	shr    ebx,0xd0
  412de2:	mov    cl,0x44
  412de4:	test   al,0x8f
  412de6:	jmp    0x412d7d
  412de8:	mov    ebp,0x15a94e2e
  412ded:	aam    0xf5
  412def:	shr    BYTE PTR [si],cl
  412df2:	(bad)  
  412df4:	pop    es
  412df5:	in     al,dx
  412df6:	mov    ah,0xa6
  412df8:	inc    edi
  412df9:	xor    BYTE PTR [ebx+0x49],ch
  412dfc:	retf   
  412dfd:	in     al,dx
  412dfe:	pop    ecx
  412dff:	sti    
  412e00:	imul   dl
  412e02:	mov    eax,ds:0x8a83bf9d
  412e07:	sbb    BYTE PTR [ebp-0x4d047487],0xd6
  412e0e:	fnstenv [esi+0x35bba273]
  412e14:	outs   dx,BYTE PTR ds:[esi]
  412e15:	xor    BYTE PTR [ebp+0x795aabdc],ah
  412e1b:	rol    DWORD PTR [edi+0x70e921c8],1
  412e21:	sbb    ebx,esp
  412e23:	into   
  412e24:	jge    0x412e1c
  412e26:	cmc    
  412e27:	jge    0x412e96
  412e29:	(bad)  [edx+ebx*2+0x63]
  412e2d:	ret    0xaf7c
  412e30:	lods   al,BYTE PTR ds:[esi]
  412e31:	or     esi,DWORD PTR [ebx]
  412e33:	neg    DWORD PTR [eax+0x249e34f]
  412e39:	dec    edi
  412e3a:	lods   al,BYTE PTR ds:[esi]
  412e3b:	jno    0x412e40
  412e3d:	inc    ebx
  412e3e:	or     cl,0x31
  412e41:	bound  esi,QWORD PTR [edx-0x4e]
  412e44:	ins    BYTE PTR es:[edi],dx
  412e45:	push   ss
  412e46:	int3   
  412e47:	jbe    0x412dec
  412e49:	mov    esi,0x1b85d4b6
  412e4e:	pop    ss
  412e4f:	dec    ecx
  412e50:	stos   BYTE PTR es:[edi],al
  412e51:	or     al,0x17
  412e53:	icebp  
  412e54:	mov    eax,esi
  412e56:	popa   
  412e57:	adc    ebx,DWORD PTR [edi-0x7e7b94d2]
  412e5d:	dec    esp
  412e5e:	adc    bl,BYTE PTR ds:0x126e0e46
  412e64:	fmul   QWORD PTR [eax-0x59f512ff]
  412e6a:	pop    ecx
  412e6b:	daa    
  412e6c:	in     eax,dx
  412e6d:	add    al,0xed
  412e6f:	xchg   edx,eax
  412e70:	cld    
  412e71:	add    bl,BYTE PTR [esi]
  412e73:	ds cmc 
  412e75:	xchg   BYTE PTR [esi-0x5c],bh
  412e78:	aam    0x2
  412e7a:	iret   
  412e7b:	and    ch,cl
  412e7d:	or     ecx,DWORD PTR [esi]
  412e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e80:	cdq    
  412e81:	pop    ss
  412e82:	rcr    DWORD PTR [ebx],1
  412e84:	jno    0x412e0f
  412e86:	loope  0x412e42
  412e88:	fdiv   QWORD PTR [edi-0x7c]
  412e8b:	cli    
  412e8c:	mov    edx,0xd873fbb7
  412e91:	nop
  412e92:	mov    ch,0xfb
  412e94:	imul   ebp,DWORD PTR [edi+0x20074c77],0xffffffa9
  412e9b:	and    eax,0x4b48c86
  412ea0:	and    ch,bh
  412ea2:	and    BYTE PTR [edx+0x73c38f10],dh
  412ea8:	or     al,0xc1
  412eaa:	add    eax,0xa35fd245
  412eaf:	rol    BYTE PTR [edi],1
  412eb1:	mov    bl,BYTE PTR [ebx]
  412eb3:	fmulp  st(5),st
  412eb5:	mov    ?,WORD PTR [ecx]
  412eb7:	fs sti 
  412eb9:	scas   eax,DWORD PTR es:[edi]
  412eba:	enter  0xc1a5,0x4d
  412ebe:	into   
  412ebf:	dec    edi
  412ec0:	pop    ds
  412ec1:	mov    WORD PTR [edx*1+0x271b0609],fs
  412ec8:	test   eax,0xe5104cf7
  412ecd:	and    DWORD PTR [edi-0x4f],esp
  412ed0:	pop    ds
  412ed1:	lods   al,BYTE PTR ds:[esi]
  412ed2:	dec    esi
  412ed3:	adc    ebx,ebp
  412ed5:	pop    esp
  412ed6:	stos   DWORD PTR es:[edi],eax
  412ed7:	mov    edi,0x25b8f9cc
  412edc:	ss loopne 0x412e97
  412edf:	mov    fs,WORD PTR [esi+edi*2-0x3c]
  412ee3:	cmp    eax,0xb8fc3fbe
  412ee8:	(bad)  
  412ee9:	cwde   
  412eea:	(bad)  
  412eec:	adc    al,0xa2
  412eee:	cmp    eax,eax
  412ef0:	bound  ebp,QWORD PTR [bx+si]
  412ef3:	jnp    0x412f3d
  412ef5:	xchg   edx,eax
  412ef6:	lock daa 
  412ef8:	lds    ecx,FWORD PTR [bp+si-0x16]
  412efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412efd:	std    
  412efe:	ins    BYTE PTR es:[edi],dx
  412eff:	je     0x412f72
  412f01:	int3   
  412f02:	outs   dx,BYTE PTR ds:[esi]
  412f03:	mov    ebp,0x2fa9ad03
  412f08:	dec    eax
  412f09:	add    BYTE PTR [eax+edx*2+0x6f],dl
  412f0d:	sahf   
  412f0e:	sub    DWORD PTR [ecx],0x2
  412f11:	test   al,0x35
  412f13:	js     0x412f7f
  412f15:	lods   eax,DWORD PTR ds:[esi]
  412f16:	jge    0x412ec5
  412f18:	pop    eax
  412f19:	rol    edi,1
  412f1b:	jae    0x412f77
  412f1d:	test   BYTE PTR [edx-0x42],dl
  412f20:	xor    BYTE PTR [edx+0x20ccda4e],dl
  412f26:	xchg   ecx,eax
  412f27:	push   0x40a975b8
  412f2c:	mov    dl,0xc2
  412f2e:	jnp    0x412f13
  412f30:	push   edx
  412f31:	(bad)  
  412f34:	(bad)  
  412f35:	cmovbe eax,DWORD PTR [edx-0x6dc8481]
  412f3c:	mov    dl,0xab
  412f3e:	bound  esi,QWORD PTR [ecx]
  412f40:	sub    DWORD PTR [eax-0x16],esi
  412f43:	mov    al,0x3e
  412f45:	jmp    0x412f31
  412f47:	fstp   QWORD PTR es:[ebx+0x27]
  412f4b:	cs xchg ecx,eax
  412f4d:	xchg   BYTE PTR [edx-0x49],cl
  412f50:	es mov eax,0x64944622
  412f56:	and    ecx,DWORD PTR [eax-0x575e18a3]
  412f5c:	dec    esp
  412f5d:	cli    
  412f5e:	nop
  412f5f:	dec    eax
  412f60:	dec    edx
  412f61:	cmp    DWORD PTR [ecx],0xcd180c72
  412f67:	fist   DWORD PTR [esi-0x3b]
  412f6a:	rcl    DWORD PTR [eax+0x319c1d0a],0x42
  412f71:	(bad)  
  412f72:	pop    esp
  412f73:	add    BYTE PTR [esi+ecx*2-0x63],0xf0
  412f78:	or     eax,0x21eff9ba
  412f7d:	hlt    
  412f7e:	loope  0x412fd8
  412f80:	out    dx,eax
  412f81:	jb     0x412f0a
  412f83:	and    al,0x27
  412f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f86:	int    0x5a
  412f88:	loopne 0x412fc9
  412f8a:	gs adc al,0xf2
  412f8d:	push   edx
  412f8e:	or     DWORD PTR [edi],edi
  412f90:	pop    eax
  412f91:	cmc    
  412f92:	push   ds
  412f93:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  412f95:	mov    ecx,ebx
  412f97:	addr16 hlt 
  412f99:	push   ecx
  412f9a:	mov    ds:0x876a3395,eax
  412f9f:	pop    ebx
  412fa0:	sub    al,0xde
  412fa2:	ins    BYTE PTR es:[edi],dx
  412fa3:	in     eax,dx
  412fa4:	jbe    0x412f68
  412fa6:	pop    edx
  412fa7:	pop    ebx
  412fa8:	in     al,0x68
  412faa:	dec    edi
  412fab:	push   ecx
  412fac:	retf   0x8fef
  412faf:	stc    
  412fb0:	addr16 push ds
  412fb2:	push   es
  412fb3:	mov    cs,WORD PTR [ecx-0x341dd79c]
  412fb9:	jp     0x412fef
  412fbb:	popf   
  412fbc:	ins    BYTE PTR es:[edi],dx
  412fbd:	push   ds
  412fbe:	pusha  
  412fbf:	inc    eax
  412fc0:	or     DWORD PTR [edi-0x72f3b890],esp
  412fc6:	shr    BYTE PTR [ecx+eiz*4+0x11],cl
  412fca:	adc    cl,al
  412fcc:	or     al,0x93
  412fce:	jl     0x412fe4
  412fd0:	lea    ebx,fs:0x5423e935
  412fd7:	gs cmc 
  412fd9:	lahf   
  412fda:	stos   DWORD PTR es:[edi],eax
  412fdb:	lds    ecx,FWORD PTR [ecx+esi*4]
  412fde:	mov    al,bh
  412fe0:	push   ss
  412fe1:	lock je 0x41301c
  412fe4:	mov    DWORD PTR [edx+edi*8],esp
  412fe7:	add    ebx,DWORD PTR [ecx-0xc]
  412fea:	dec    ebx
  412feb:	call   0xb09:0x316e1d11
  412ff2:	sub    DWORD PTR [edx*4+0x791c43bb],ecx
  412ff9:	stos   BYTE PTR es:[edi],al
  412ffa:	iret   
  412ffb:	cmp    BYTE PTR [eax+eax*2-0x1e],al
  412fff:	lahf   
  413000:	fimul  DWORD PTR [ebp+0x6a]
  413003:	xchg   BYTE PTR [ebp+0x4b8cb775],ch
  413009:	jp     0x413044
  41300b:	push   ds
  41300c:	mov    eax,0x36ef0008
  413011:	out    0x20,eax
  413013:	or     esi,DWORD PTR [esi+0x58c181ae]
  413019:	div    DWORD PTR [edi-0x25]
  41301c:	inc    edx
  41301d:	cli    
  41301e:	adc    DWORD PTR [esi],ecx
  413020:	mov    cl,0x80
  413022:	ret    0xb462
  413025:	sub    ah,BYTE PTR [esp+edi*4-0x59]
  413029:	or     esp,DWORD PTR [eax+0x4d509ee0]
  41302f:	dec    esi
  413030:	loope  0x41309c
  413032:	xor    BYTE PTR [edx],cl
  413034:	fstp   TBYTE PTR [eax+0x44]
  413037:	in     eax,dx
  413038:	in     eax,dx
  413039:	add    al,0xc7
  41303b:	loop   0x41300d
  41303d:	jno    0x413078
  41303f:	cmp    eax,0xa44f10f8
  413044:	leave  
  413045:	sub    bh,bl
  413047:	sub    BYTE PTR [edi],0xee
  41304a:	jge    0x413068
  41304c:	add    al,0x12
  41304e:	mov    ds:0x83f5b7bf,al
  413053:	mov    eax,0x7d8a3a7b
  413058:	dec    esp
  413059:	stos   DWORD PTR es:[edi],eax
  41305a:	and    eax,0xb8b4d4d2
  41305f:	mov    eax,0x96e1f64e
  413064:	push   eax
  413065:	test   DWORD PTR [eax],0xc4f95a97
  41306b:	mov    cl,0xa1
  41306d:	cmp    BYTE PTR [esi-0x2],0x44
  413071:	aaa    
  413072:	sub    bl,0x80
  413075:	ss lock dec ecx
  413078:	fisttp QWORD PTR [ebx+0x45aac062]
  41307e:	xchg   BYTE PTR [edx],dh
  413080:	jo     0x4130bb
  413082:	loopne 0x4130ae
  413084:	sub    ebx,DWORD PTR [esi+eiz*4]
  413087:	dec    edx
  413088:	imul   BYTE PTR [eax-0x3526a716]
  41308e:	add    ch,0x61
  413091:	cld    
  413092:	jmp    0xc8e0:0x86c9fcde
  413099:	daa    
  41309a:	push   ss
  41309b:	out    dx,eax
  41309c:	in     eax,dx
  41309d:	rcr    DWORD PTR [ecx+0x78c394f3],cl
  4130a3:	(bad)  
  4130a4:	push   0xffffffbf
  4130a6:	mov    ch,dl
  4130a8:	stos   BYTE PTR es:[edi],al
  4130a9:	or     eax,0x63f11fb1
  4130ae:	icebp  
  4130af:	fdivrp st(6),st
  4130b1:	dec    ebp
  4130b2:	into   
  4130b3:	jno    0x413127
  4130b5:	or     cl,BYTE PTR [ebx+0x5a1022d2]
  4130bb:	cmp    DWORD PTR [eiz*8+0x43cb0e9f],edx
  4130c2:	pop    ss
  4130c3:	pushf  
  4130c4:	jno    0x413069
  4130c6:	cmp    esp,eax
  4130c8:	pusha  
  4130c9:	jbe    0x413140
  4130cb:	dec    edx
  4130cc:	in     eax,0x5c
  4130ce:	pop    ebx
  4130cf:	xor    BYTE PTR [eax-0x1b],bl
  4130d2:	loope  0x413123
  4130d4:	adc    eax,0x19f701d1
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	and    BYTE PTR [ebp-0x20b325ec],dl
  4130e0:	inc    ecx
  4130e1:	test   WORD PTR [edi+ebp*4],bx
  4130e5:	lahf   
  4130e6:	sbb    cl,BYTE PTR [ecx+0x70]
  4130e9:	shl    DWORD PTR [ecx-0x1cf24aa3],1
  4130ef:	call   0x8a8f835a
  4130f4:	dec    eax
  4130f5:	pushf  
  4130f6:	mov    ch,0x8d
  4130f8:	inc    esp
  4130f9:	dec    edx
  4130fa:	xor    eax,0xc0fc46ab
  4130ff:	xchg   ecx,eax
  413100:	sbb    al,0xa0
  413102:	int    0x4e
  413104:	mov    ds:0x4d20fd7f,eax
  413109:	sahf   
  41310a:	add    eax,0x5af1b90d
  41310f:	or     edx,DWORD PTR [ecx-0x3095f6c4]
  413115:	cmp    esp,DWORD PTR [eax+0xd87ca97]
  41311b:	call   0xa539:0xa9ad42d6
  413122:	pop    edx
  413123:	push   es
  413124:	mov    edi,0x7a868cb3
  413129:	cmp    ebx,DWORD PTR [ebp-0x3d]
  41312c:	xchg   esi,eax
  41312d:	cmp    DWORD PTR [ebp+0x46],esp
  413130:	das    
  413131:	pusha  
  413132:	jmp    0x713a:0xc749d77b
  413139:	add    eax,0xac8f308b
  41313e:	mov    ch,0xc2
  413140:	mov    bl,0x3
  413142:	sub    al,dh
  413144:	popf   
  413145:	inc    edx
  413147:	call   0x838a41a
  41314c:	fwait
  41314d:	pusha  
  41314e:	adc    esp,edx
  413150:	push   ebx
  413151:	and    DWORD PTR [ecx],ebp
  413153:	xchg   ebp,eax
  413154:	dec    esi
  413155:	pop    ecx
  413156:	mov    ebp,0xe932c4c0
  41315b:	mov    edx,DWORD PTR [esi-0xf371fcd]
  413161:	jae    0x41311c
  413163:	jl     0x413187
  413165:	leave  
  413166:	pusha  
  413167:	out    0x5b,al
  413169:	cdq    
  41316a:	bound  ebx,QWORD PTR gs:[ebp+0x5c]
  41316e:	je     0x4131ca
  413170:	loopne 0x413154
  413172:	sbb    eax,0x16b8bbf1
  413177:	icebp  
  413178:	outs   dx,BYTE PTR ds:[esi]
  413179:	lds    edx,FWORD PTR [ebx]
  41317b:	inc    ebp
  41317c:	and    dl,dl
  41317e:	pop    edx
  41317f:	nop
  413180:	mov    al,0x77
  413182:	pop    ss
  413183:	mov    si,0x4fb6
  413187:	aas    
  413188:	pop    ebp
  413189:	ja     0x4131a4
  41318b:	arpl   WORD PTR [edi-0x43],di
  41318e:	push   ss
  41318f:	jle    0x413157
  413191:	fs adc edi,esi
  413194:	ins    DWORD PTR es:[edi],dx
  413195:	xchg   esp,eax
  413196:	mov    BYTE PTR [ecx+0x27],cl
  413199:	nop
  41319a:	in     eax,dx
  41319b:	mov    ah,0x55
  41319d:	popa   
  41319e:	sbb    cl,ah
  4131a0:	xor    dl,al
  4131a2:	jb     0x413161
  4131a4:	adc    eax,0x22bd5481
  4131a9:	cld    
  4131aa:	packsswb mm7,QWORD PTR [esi-0x12]
  4131ae:	sbb    BYTE PTR ds:0xf44d3165,bh
  4131b4:	push   ecx
  4131b5:	pop    edi
  4131b6:	jnp    0x413204
  4131b8:	or     al,0x7c
  4131ba:	xor    eax,0x14dc357d
  4131bf:	sbb    DWORD PTR [eax],edx
  4131c1:	(bad)  
  4131c2:	dec    BYTE PTR fs:[ebx-0x2c]
  4131c6:	add    eax,0x56181595
  4131cb:	(bad)  
  4131cc:	xor    ebp,DWORD PTR [eax+0x2f4a0dd8]
  4131d2:	pop    eax
  4131d3:	cmp    BYTE PTR ds:0xf32eb756,cl
  4131d9:	into   
  4131da:	stc    
  4131db:	imul   eax,DWORD PTR [esi+0x10],0x3a
  4131df:	mov    al,0xc2
  4131e1:	out    dx,eax
  4131e2:	mov    WORD PTR [ebp-0x11],ds
  4131e5:	pusha  
  4131e6:	push   esp
  4131e7:	(bad)  
  4131e8:	aad    0x52
  4131ea:	ins    BYTE PTR es:[edi],dx
  4131eb:	retf   0x5868
  4131ee:	leave  
  4131ef:	into   
  4131f0:	jo     0x413172
  4131f2:	mov    DWORD PTR [edx+0x5a6ab6ba],edx
  4131f8:	test   esp,eax
  4131fa:	sbb    eax,0x1e6c015
  4131ff:	minps  xmm2,xmm2
  413202:	ret    0x4474
  413205:	inc    edx
  413206:	xor    al,0x6f
  413208:	ins    DWORD PTR es:[edi],dx
  413209:	outs   dx,DWORD PTR ds:[esi]
  41320a:	stc    
  41320b:	mov    bl,0x12
  41320d:	cdq    
  41320e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41320f:	push   0xa754b22e
  413214:	and    eax,0x6e5ec94c
  413219:	call   0xe44b:0xefe7a0af
  413220:	outs   dx,DWORD PTR ds:[esi]
  413221:	pop    esp
  413222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413223:	mov    ebx,gs
  413225:	and    ebx,DWORD PTR [ecx-0x4a]
  413228:	aas    
  413229:	scas   al,BYTE PTR es:[edi]
  41322a:	out    0x5f,eax
  41322c:	mov    bl,0x68
  41322e:	inc    esp
  41322f:	jl     0x413242
  413231:	inc    edi
  413232:	mov    eax,0x1f64de2a
  413237:	dec    ecx
  413238:	sub    edi,eax
  41323a:	pop    ss
  41323b:	outs   dx,BYTE PTR ds:[esi]
  41323c:	es daa 
  41323e:	(bad)  
  41323f:	loopne 0x41329c
  413241:	and    DWORD PTR [edx+0x78],ecx
  413244:	jp     0x4132b1
  413246:	int3   
  413247:	int    0xea
  413249:	push   cs
  41324a:	and    al,0xe4
  41324c:	cmp    bl,ch
  41324e:	xor    cl,ah
  413250:	fldenv [esi]
  413252:	repnz pop ds
  413254:	js     0x41320c
  413256:	cmc    
  413257:	scas   al,BYTE PTR es:[edi]
  413258:	les    ecx,FWORD PTR fs:[ebx]
  41325b:	lds    edx,FWORD PTR [ecx]
  41325d:	dec    eax
  41325e:	jno    0x41324f
  413260:	dec    esi
  413261:	test   ebp,ebx
  413263:	out    0xfb,al
  413265:	mov    ah,BYTE PTR [esi+eiz*2-0x280f0fc7]
  41326c:	and    eax,0x9569756c
  413271:	popf   
  413272:	leave  
  413273:	bound  esp,QWORD PTR [esi]
  413275:	pop    ebx
  413276:	dec    esp
  413277:	cwde   
  413278:	ret    
  413279:	enter  0xbf07,0x5
  41327d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41327e:	stos   DWORD PTR es:[edi],eax
  41327f:	ret    
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	test   BYTE PTR [eax+0x108c03af],al
  413287:	in     eax,0xf4
  413289:	pop    edi
  41328a:	pop    ss
  41328b:	mov    ecx,0xd90f957b
  413290:	cli    
  413291:	mov    esp,0x22cecd91
  413296:	loop   0x413262
  413298:	pusha  
  413299:	adc    ecx,DWORD PTR [esi+0x5f]
  41329c:	cmp    ebx,DWORD PTR [esi+0x13634a0]
  4132a2:	mov    edx,0x2c157a30
  4132a7:	jl     0x41330c
  4132a9:	icebp  
  4132aa:	mov    cl,0xe8
  4132ac:	gs jecxz 0x41332d
  4132af:	test   DWORD PTR [ebx-0x42f27e05],0xeb42a2a7
  4132b9:	pop    eax
  4132ba:	imul   edi,DWORD PTR [esi-0x66],0x4
  4132be:	cdq    
  4132bf:	lahf   
  4132c0:	bound  ecx,QWORD PTR [edx+0x3fcc4c1e]
  4132c6:	pop    edi
  4132c7:	loop   0x41324f
  4132c9:	add    BYTE PTR [ecx-0x43],dl
  4132cc:	pop    esp
  4132cd:	in     eax,dx
  4132ce:	adc    edi,esp
  4132d0:	mov    edx,0x56652565
  4132d5:	add    al,ch
  4132d7:	out    dx,eax
  4132d8:	test   eax,0x8b918344
  4132dd:	mov    esp,DWORD PTR [edx]
  4132df:	sbb    DWORD PTR [edi+ecx*1+0x7e5c6f48],0x1
  4132e7:	scas   eax,DWORD PTR es:[edi]
  4132e8:	jb     0x4132f0
  4132ea:	sub    BYTE PTR [ebp+0x29],0x2f
  4132ee:	push   eax
  4132ef:	aaa    
  4132f0:	sbb    ebx,DWORD PTR [edx+0x5c]
  4132f3:	call   0x2b8:0x35100c05
  4132fa:	cmp    ebp,DWORD PTR [ebx+0x42]
  4132fd:	xor    eax,0x6fd100cd
  413302:	sbb    BYTE PTR [edi],ah
  413304:	mov    ebp,0xf285d33b
  413309:	es sahf 
  41330b:	and    ebp,DWORD PTR [ecx+0x1ef017cd]
  413311:	(bad)  
  413312:	ds dec ebx
  413314:	xchg   ebx,eax
  413315:	add    edx,DWORD PTR [ecx]
  413317:	xor    DWORD PTR [esi+0x1a0c6664],ecx
  41331d:	jmp    FWORD PTR [ebp+0x61555ebd]
  413323:	mov    dl,0xa9
  413325:	mov    WORD PTR [ebp+0x58],fs
  413328:	es xor eax,0x6cc389a
  41332e:	inc    esi
  41332f:	in     eax,0xf3
  413331:	jno    0x413378
  413333:	out    0x60,eax
  413335:	es ss jo 0x4132cc
  413339:	sbb    dl,BYTE PTR [edx+esi*8]
  41333c:	push   ebx
  41333d:	mov    ds:0xe5c7e0e8,eax
  413342:	jmp    0x4133c2
  413344:	stos   BYTE PTR es:[edi],al
  413345:	xor    ebp,DWORD PTR [eax-0x740ec233]
  41334b:	ins    DWORD PTR es:[edi],dx
  41334c:	and    eax,DWORD PTR [edi-0x51]
  41334f:	out    0x5e,eax
  413351:	bound  ebp,QWORD PTR [ebx]
  413353:	test   DWORD PTR [eax+ecx*4+0x2b],ebp
  413357:	inc    ebp
  413358:	jecxz  0x4132ec
  41335a:	add    DWORD PTR [esi+0x2f],0x71dcd912
  413361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413362:	xchg   esi,eax
  413363:	mov    ah,BYTE PTR ds:0xb1e0d184
  413369:	shr    DWORD PTR [edx-0x1],0x1b
  41336d:	das    
  41336e:	mov    al,0x8f
  413370:	push   cs
  413371:	and    DWORD PTR [eax-0x177087b6],edx
  413377:	xlat   BYTE PTR ds:[ebx]
  413379:	mov    edi,0x68ac9a4e
  41337e:	int    0xbb
  413380:	push   edx
  413381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413382:	icebp  
  413383:	gs cwde 
  413385:	fnstsw WORD PTR [ebx+0x2a]
  413388:	dec    eax
  413389:	or     esp,0x31
  41338c:	iret   
  41338d:	mov    ds:0x713b65ec,al
  413392:	sahf   
  413393:	jne    0x41331e
  413395:	jl     0x4133ae
  413397:	push   ebx
  413398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413399:	push   edx
  41339a:	into   
  41339b:	mov    al,ds:0x85f5725e
  4133a0:	in     eax,0x9d
  4133a2:	and    al,0xa1
  4133a4:	xchg   ebp,eax
  4133a5:	leave  
  4133a6:	and    al,0x58
  4133a8:	cmp    al,BYTE PTR [ecx]
  4133aa:	pop    DWORD PTR [ebx]
  4133ac:	icebp  
  4133ad:	sub    eax,0x41a2fb27
  4133b2:	into   
  4133b3:	out    0x40,eax
  4133b5:	push   edi
  4133b6:	shl    BYTE PTR [edx+0x43],cl
  4133b9:	pop    ss
  4133ba:	repz push cs
  4133bc:	(bad)  
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	sub    ecx,ebp
  4133c0:	add    edi,esi
  4133c2:	mov    edx,0x8398a383
  4133c7:	stos   DWORD PTR es:[edi],eax
  4133c8:	sar    BYTE PTR [eax-0x34f856c0],0x1c
  4133cf:	sbb    eax,0x7b784603
  4133d4:	test   al,0xf1
  4133d6:	or     al,BYTE PTR [bp-0x3a]
  4133da:	fnsave [ecx+0x26]
  4133dd:	pop    eax
  4133de:	jecxz  0x41345e
  4133e0:	cmc    
  4133e1:	(bad)  
  4133e2:	pop    edi
  4133e3:	mov    es,WORD PTR [edi]
  4133e5:	mov    cl,0x9c
  4133e7:	out    dx,eax
  4133e8:	stos   BYTE PTR es:[edi],al
  4133e9:	loopne 0x4133b2
  4133eb:	pop    ebx
  4133ec:	inc    esp
  4133ed:	cmp    ecx,DWORD PTR [edx-0x61]
  4133f0:	jno    0x41342d
  4133f2:	sbb    DWORD PTR [edi-0x723d973],eax
  4133f8:	iret   
  4133f9:	cdq    
  4133fa:	or     BYTE PTR [edx-0x63],al
  4133fd:	ss push es
  4133ff:	mov    bl,0xa0
  413401:	adc    bh,BYTE PTR [ebx]
  413403:	inc    esi
  413404:	shld   DWORD PTR [edx-0x621554b4],esi,0x44
  41340c:	mov    al,0x2c
  41340e:	rcr    DWORD PTR [ecx-0x5],1
  413411:	inc    ebp
  413412:	fild   WORD PTR [ebp+0x60b39941]
  413418:	clc    
  413419:	adc    BYTE PTR [ebx],dl
  41341b:	pop    ecx
  41341c:	xlat   BYTE PTR ds:[ebx]
  41341d:	shl    BYTE PTR [ebx+edi*8],1
  413420:	retf   0x52ab
  413423:	xchg   ecx,eax
  413424:	scas   al,BYTE PTR es:[edi]
  413425:	outs   dx,BYTE PTR ds:[esi]
  413426:	sub    al,0x41
  413428:	arpl   WORD PTR [esi+esi*8],cx
  41342b:	stc    
  41342c:	and    ch,bl
  41342e:	popf   
  41342f:	loopne 0x413446
  413431:	mov    DWORD PTR [edx-0x32],edx
  413434:	mov    DWORD PTR [edx],esp
  413436:	std    
  413437:	cmp    al,BYTE PTR [eax-0x20]
  41343a:	fdivr  st(4),st
  41343c:	aad    0xea
  41343e:	inc    esi
  41343f:	dec    edx
  413440:	in     al,dx
  413441:	lods   eax,DWORD PTR ds:[esi]
  413442:	out    dx,al
  413443:	aaa    
  413444:	fwait
  413445:	dec    edi
  413446:	cmc    
  413447:	jmp    0xa8f2:0xcde952af
  41344e:	push   eax
  41344f:	dec    eax
  413450:	fild   WORD PTR [esi+ebp*8-0x1ab35d7c]
  413457:	ins    BYTE PTR es:[edi],dx
  413458:	xchg   edi,eax
  413459:	aas    
  41345a:	test   al,0xf6
  41345c:	sub    eax,0xbaabf441
  413461:	mov    DWORD PTR [eax],edx
  413463:	cmp    al,0x60
  413465:	adc    BYTE PTR [edx],dl
  413467:	out    0x7b,al
  413469:	leave  
  41346a:	mov    ebp,DWORD PTR cs:[edx]
  41346d:	mov    ch,0x8a
  41346f:	xor    al,0xfc
  413471:	sbb    eax,0x9d5680b5
  413476:	cli    
  413477:	xchg   esp,eax
  413478:	popa   
  413479:	jno    0x413490
  41347b:	sbb    bh,BYTE PTR [edx-0x16ca355]
  413481:	test   eax,0xd98ebe38
  413486:	aaa    
  413487:	leave  
  413488:	ror    edx,0x3e
  41348b:	sahf   
  41348c:	mov    BYTE PTR [edx],dl
  41348e:	test   BYTE PTR [edi+0x6ef4fadd],ch
  413494:	stos   BYTE PTR es:[edi],al
  413495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413496:	es ss xchg edx,eax
  413499:	xor    al,0x76
  41349b:	pusha  
  41349c:	not    WORD PTR [esi*2+0x43fc37b2]
  4134a4:	pop    ecx
  4134a5:	into   
  4134a6:	dec    ecx
  4134a7:	sbb    DWORD PTR [eax],eax
  4134a9:	test   DWORD PTR [esi+0x30],ecx
  4134ac:	sbb    eax,0x68e3e3b6
  4134b1:	int    0x67
  4134b3:	mov    eax,ds:0x900a35d7
  4134b8:	push   ss
  4134b9:	push   es
  4134ba:	sahf   
  4134bb:	dec    edx
  4134bc:	jle    0x413530
  4134be:	jo     0x413442
  4134c0:	and    eax,edi
  4134c2:	gs (bad) 
  4134c4:	mov    cl,0xd
  4134c6:	imul   eax,DWORD PTR [eax],0x7b085a0d
  4134cc:	mov    ?,WORD PTR [ecx-0x18c90939]
  4134d2:	push   0x547bbefe
  4134d7:	cmp    al,BYTE PTR [edi-0x15699a23]
  4134dd:	sbb    ah,BYTE PTR [edx+eiz*8-0x36a31ae7]
  4134e4:	int3   
  4134e5:	jecxz  0x4134d5
  4134e7:	mov    al,0xde
  4134e9:	ret    
  4134ea:	adc    DWORD PTR [ebx],0x32e6f44a
  4134f0:	mov    ds:0x5b23194c,al
  4134f5:	add    al,0xaa
  4134f7:	loopne 0x413514
  4134f9:	cmp    eax,0xa3b6d067
  4134fe:	fld    TBYTE PTR [ebp-0x2b]
  413501:	leave  
  413502:	nop
  413503:	adc    BYTE PTR [edx],bh
  413505:	aam    0x4a
  413507:	xor    ch,al
  413509:	jo     0x4134a8
  41350b:	pushf  
  41350c:	or     DWORD PTR [ebp+0x1daff6ee],ebp
  413512:	outs   dx,DWORD PTR ds:[esi]
  413513:	dec    edi
  413514:	aam    0xde
  413516:	pop    es
  413517:	sbb    bl,ah
  413519:	cs aam 0xd4
  41351c:	sahf   
  41351d:	mov    ebx,0x4b7e3bdf
  413522:	jl     0x4134dc
  413524:	mov    ecx,0x586842f0
  413529:	xor    ah,ch
  41352b:	jle    0x4134da
  41352d:	ins    BYTE PTR es:[edi],dx
  41352e:	lock scas al,BYTE PTR es:[edi]
  413530:	xor    eax,0x96b94ddb
  413535:	rcl    BYTE PTR [edx-0x258c8270],1
  41353b:	jmp    0x413518
  41353d:	mov    eax,0xd3bcc444
  413542:	push   0x8a4e15e8
  413547:	into   
  413548:	ret    
  413549:	adc    BYTE PTR [ebx-0x4c98bbb4],0xc3
  413550:	popa   
  413551:	ins    DWORD PTR es:[edi],dx
  413552:	ja     0x4135b3
  413554:	mov    bh,0x15
  413556:	rcr    BYTE PTR [esp+edi*8],0xb7
  41355a:	sbb    BYTE PTR [ebp+0x10],dh
  41355d:	aad    0xd1
  41355f:	xor    al,0x6f
  413561:	cmp    ah,BYTE PTR [ebx-0x3f4c797]
  413567:	sub    DWORD PTR [ebx+edx*8+0xe87d605],esi
  41356e:	mov    bl,0x6f
  413570:	jge    0x413573
  413572:	popa   
  413573:	out    dx,al
  413574:	mov    BYTE PTR [edx],dh
  413576:	je     0x4135f3
  413578:	ins    DWORD PTR es:[edi],dx
  413579:	in     al,0xde
  41357b:	stos   BYTE PTR es:[edi],al
  41357c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41357d:	in     eax,dx
  41357e:	or     al,bl
  413580:	pop    edi
  413581:	loop   0x4135ef
  413583:	add    eax,0xb4359921
  413588:	sbb    al,0xfc
  41358a:	add    al,0xb8
  41358c:	lock cmp eax,ebx
  41358f:	cmp    al,0x6b
  413591:	addr16 mov ds:0xaf2a,eax
  413595:	jo     0x4135a6
  413597:	fcom   QWORD PTR [ecx+0x10d04dcd]
  41359d:	imul   eax,DWORD PTR [ecx+0x3f0d9f32],0xc437712c
  4135a7:	mov    BYTE PTR [edi-0x438166a4],0x69
  4135ae:	stc    
  4135af:	dec    esp
  4135b0:	jle    0x4135a2
  4135b2:	and    DWORD PTR [ebx-0x57],esp
  4135b5:	mov    DWORD PTR [edx-0x32],edx
  4135b8:	xor    al,0x4f
  4135ba:	repnz shl BYTE PTR [esi+0x2d2abd84],0x45
  4135c2:	(bad)
  4135c5:	mov    BYTE PTR [edi+0x69],0xc3
  4135c9:	inc    edx
  4135ca:	repnz dec edi
  4135cc:	iret   
  4135cd:	push   ss
  4135ce:	mov    ds:0xadcb0b1c,eax
  4135d3:	out    dx,eax
  4135d4:	or     edi,DWORD PTR fs:[edi]
  4135d7:	fisttp QWORD PTR [edi-0x23c31aa]
  4135dd:	jle    0x4135de
  4135df:	mov    dl,0x41
  4135e1:	mov    esi,0xae264cee
  4135e6:	push   ss
  4135e7:	pushf  
  4135e8:	stos   DWORD PTR es:[edi],eax
  4135e9:	jns    0x413667
  4135eb:	icebp  
  4135ec:	cmovbe esp,DWORD PTR ds:0x592d890d
  4135f3:	pop    ss
  4135f4:	push   ebx
  4135f5:	fdiv   st(2),st
  4135f7:	pushf  
  4135f8:	call   DWORD PTR [edi-0x6d]
  4135fb:	mov    fs,ebp
  4135fd:	jmp    0x41363b
  4135ff:	sbb    ah,BYTE PTR [eax]
  413601:	(bad)  
  413603:	xchg   ecx,eax
  413604:	xchg   esp,eax
  413605:	mov    DWORD PTR [edi+0x1],esi
  413608:	pop    eax
  413609:	xlat   BYTE PTR ds:[ebx]
  41360a:	ret    
  41360b:	outs   dx,DWORD PTR ds:[esi]
  41360c:	leave  
  41360d:	(bad)  
  41360e:	aad    0x4a
  413610:	adc    DWORD PTR [esp+esi*2+0x19],edi
  413614:	lock inc ebp
  413616:	ret    
  413617:	in     al,dx
  413618:	mov    eax,0x4b031b32
  41361d:	dec    ecx
  41361e:	push   edx
  41361f:	and    BYTE PTR [esi+0x4e],0x7
  413623:	inc    esi
  413624:	pushf  
  413625:	ins    BYTE PTR es:[edi],dx
  413626:	cmp    al,0xbf
  413628:	cdq    
  413629:	fwait
  41362a:	scas   eax,DWORD PTR es:[edi]
  41362b:	idiv   ch
  41362d:	push   ss
  41362e:	test   al,0x9a
  413630:	mov    WORD PTR [ebx+0x7a],fs
  413633:	popf   
  413634:	test   al,0xa0
  413636:	add    BYTE PTR [edi],cl
  413638:	sub    ch,BYTE PTR [ebp+0x59a7bbd4]
  41363e:	jg     0x4135ca
  413640:	sbb    ch,BYTE PTR [eax+ebx*4+0x4]
  413644:	je     0x41368d
  413646:	jno    0x413600
  413648:	ss pop ds
  41364a:	push   es
  41364b:	xor    DWORD PTR [ebp+0x62],edi
  41364e:	je     0x4136c4
  413650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413651:	adc    ebx,DWORD PTR [eax+0x19]
  413654:	sub    DWORD PTR [eax],esp
  413656:	and    ah,dh
  413658:	sbb    ch,dl
  41365a:	ret    
  41365b:	clc    
  41365c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41365d:	inc    ebx
  41365e:	inc    edi
  41365f:	adc    eax,0xf88dc864
  413664:	push   edx
  413665:	aad    0xc7
  413667:	jp     0x4136db
  413669:	mov    DWORD PTR [edi],esi
  41366b:	lea    edx,[ebx]
  41366d:	xchg   edi,eax
  41366e:	pusha  
  41366f:	jns    0x413692
  413671:	dec    eax
  413672:	and    eax,eax
  413674:	pop    esp
  413675:	idiv   BYTE PTR [edx]
  413677:	xchg   ebx,eax
  413678:	mov    edi,0xa6492814
  41367d:	xchg   BYTE PTR [ebx-0x1578d36d],dl
  413683:	sbb    DWORD PTR [edi],0x1e
  413686:	and    al,0x20
  413688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413689:	rol    bh,0x47
  41368c:	dec    ebx
  41368d:	and    al,0x66
  41368f:	enter  0x92fa,0xf0
  413693:	iret   
  413694:	inc    esi
  413695:	clc    
  413696:	icebp  
  413697:	call   0x405b09c8
  41369c:	inc    esp
  41369d:	ja     0x41364d
  41369f:	ja     0x4136b5
  4136a1:	out    dx,al
  4136a2:	xor    eax,0xdfb3b9d9
  4136a7:	inc    edx
  4136a8:	out    dx,al
  4136a9:	pop    ebp
  4136aa:	adc    al,0xd2
  4136ac:	lahf   
  4136ad:	dec    esp
  4136ae:	jmp    0xd62b:0xbaf59a3a
  4136b5:	out    0xdb,eax
  4136b7:	sar    eax,0xc8
  4136ba:	xchg   DWORD PTR [edi+0x11ab9e19],eax
  4136c0:	inc    ecx
  4136c1:	cmp    al,0x47
  4136c3:	ret    0xc950
  4136c6:	mov    eax,ds:0xd3203d1e
  4136cb:	mov    eax,ds:0x761a990b
  4136d0:	jmp    0x8b15:0x5c873939
  4136d7:	push   esi
  4136d8:	jnp    0x4136e8
  4136da:	fstp   DWORD PTR [eax-0x38]
  4136dd:	xor    ecx,DWORD PTR [esi+eiz*4+0x334a7917]
  4136e4:	dec    esp
  4136e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136e6:	dec    ebp
  4136e7:	xor    edx,DWORD PTR [ebx-0x636edbb4]
  4136ed:	test   eax,0x8be6ab5b
  4136f2:	call   0x5bf4:0x6847488b
  4136f9:	xchg   edi,eax
  4136fa:	push   0x99321582
  4136ff:	pop    es
  413700:	pop    ds
  413701:	fiadd  DWORD PTR [edx]
  413703:	lahf   
  413704:	pushf  
  413705:	push   cs
  413706:	xchg   esp,eax
  413707:	sub    al,0xa8
  413709:	sub    ecx,DWORD PTR [ebp+0x2f]
  41370c:	jbe    0x413771
  41370e:	adc    BYTE PTR [ebx+0x78],dh
  413711:	push   esp
  413712:	les    ebx,FWORD PTR [eax-0xc]
  413715:	xor    BYTE PTR [edi+edx*4],dh
  413718:	int3   
  413719:	sub    eax,0xe6ca4ca5
  41371e:	jmp    0xc494:0x2f05c0b2
  413725:	int    0xe9
  413727:	stos   DWORD PTR es:[edi],eax
  413728:	sub    al,0xd3
  41372a:	inc    esi
  41372b:	mov    esp,0xb3617da7
  413730:	mov    al,ch
  413732:	add    eax,0x8e175802
  413737:	dec    esi
  413738:	mov    edi,edx
  41373a:	icebp  
  41373b:	xchg   esp,eax
  41373c:	enter  0x91e3,0x4c
  413740:	fmul   DWORD PTR [edi-0x75a716a8]
  413746:	test   DWORD PTR [eax+eax*8],ebp
  413749:	aad    0xf6
  41374b:	mov    edx,0xca0146de
  413750:	jecxz  0x4137cb
  413752:	xchg   DWORD PTR [ebp+0x7e],esi
  413755:	icebp  
  413756:	in     al,dx
  413757:	inc    ebx
  413758:	mov    ch,BYTE PTR [ecx-0x56]
  41375b:	test   eax,0x2eec7846
  413760:	pop    edi
  413761:	dec    edi
  413762:	jae    0x4137b7
  413764:	es jno 0x41374d
  413767:	retf   
  413768:	jae    0x41379f
  41376a:	adc    BYTE PTR [eax],bh
  41376c:	rol    DWORD PTR [esi-0x3b619708],0x11
  413773:	adc    ebp,esp
  413775:	jmp    0xa396f9ee
  41377a:	(bad)  
  41377b:	hlt    
  41377c:	xchg   DWORD PTR [bp+0x1d91],esp
  413781:	out    0x62,eax
  413783:	add    DWORD PTR [esi-0xe],edi
  413786:	(bad)  
  413787:	push   eax
  413788:	add    al,dh
  41378a:	xchg   edx,eax
  41378b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41378c:	pop    eax
  41378d:	retf   0xee5d
  413790:	(bad)  
  413791:	imul   ebx,esi,0x28cc4dfd
  413797:	pop    ebx
  413798:	push   eax
  413799:	mov    ebp,ebx
  41379b:	add    DWORD PTR [ebx+eax*8],0x5b8e7bfc
  4137a2:	xchg   ebp,eax
  4137a3:	inc    ebp
  4137a4:	jne    0x4137e6
  4137a6:	and    esi,ebp
  4137a8:	lahf   
  4137a9:	xchg   ebp,eax
  4137aa:	sbb    al,0x77
  4137ac:	jmp    0x77bf:0xe5d1359c
  4137b3:	lea    ebp,[edi+0x16]
  4137b6:	push   es
  4137b7:	cmc    
  4137b8:	dec    esi
  4137b9:	std    
  4137ba:	loopne 0x41378d
  4137bc:	dec    esi
  4137bd:	jecxz  0x413812
  4137bf:	icebp  
  4137c0:	xchg   edi,eax
  4137c1:	cdq    
  4137c2:	out    dx,eax
  4137c3:	adc    BYTE PTR [ebp-0x39],ah
  4137c6:	scas   eax,DWORD PTR es:[edi]
  4137c7:	ins    DWORD PTR es:[edi],dx
  4137c8:	push   ecx
  4137c9:	shl    BYTE PTR [ebp+0x49],0xae
  4137cd:	mov    al,ds:0x6ba15841
  4137d2:	in     eax,0xa
  4137d4:	xor    eax,0x37a5935e
  4137d9:	mov    ?,WORD PTR [ecx]
  4137db:	mov    ebp,0xd2b04be4
  4137e0:	push   ebp
  4137e1:	test   eax,0x320e0997
  4137e6:	xchg   esp,eax
  4137e7:	lds    esi,FWORD PTR [ebx-0xe]
  4137ea:	test   eax,0x8d89aecc
  4137ef:	aaa    
  4137f0:	jae    0x413856
  4137f2:	int    0x40
  4137f4:	or     eax,0x434e5847
  4137f9:	outs   dx,DWORD PTR ds:[esi]
  4137fa:	loopne 0x413849
  4137fc:	rol    BYTE PTR [esi],0xe6
  4137ff:	jbe    0x4137a8
  413801:	push   DWORD PTR [edi+0x2d]
  413804:	ret    0x91d5
  413807:	add    ah,BYTE PTR [edi+0x6b687e6a]
  41380d:	jno    0x4137f1
  41380f:	les    edx,FWORD PTR [esi-0xf]
  413812:	fcomp  st(2)
  413814:	daa    
  413815:	ret    
  413816:	add    esp,DWORD PTR [edi-0x7a]
  413819:	mov    dh,0x22
  41381b:	push   es
  41381c:	(bad)  [edx+0xe9ec5c1]
  413822:	fnstcw WORD PTR fs:[edx+0x6b]
  413826:	jae    0x41380a
  413828:	imul   ebx,esp,0x27
  41382b:	jp     0x413803
  41382d:	nop
  41382e:	in     eax,dx
  41382f:	lods   al,BYTE PTR ds:[esi]
  413830:	sub    BYTE PTR [edi+0xd],cl
  413833:	jb     0x41382e
  413835:	mov    dl,0xbe
  413837:	dec    esp
  413838:	cmp    eax,0x5f0092d5
  41383d:	sub    ebx,0x56
  413840:	fs rol ebx,cl
  413843:	stos   BYTE PTR es:[edi],al
  413844:	mov    eax,ds:0x8dc7e4a7
  413849:	(bad)  
  41384a:	sbb    edi,DWORD PTR ds:0xd5b661e2
  413850:	ror    esp,1
  413852:	ins    BYTE PTR es:[edi],dx
  413853:	shr    al,cl
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	fs inc eax
  413858:	div    BYTE PTR [edx+ecx*4-0x55fa646e]
  41385f:	and    ebx,DWORD PTR [ebx-0x6]
  413862:	mov    esp,0x10a93460
  413867:	repz loopne 0x4138b8
  41386a:	je     0x413824
  41386c:	enter  0x64b5,0x55
  413870:	adc    bl,bl
  413872:	sbb    DWORD PTR [edx],ebp
  413874:	mov    ds:0xe63ff2bc,eax
  413879:	stos   DWORD PTR es:[edi],eax
  41387a:	scas   al,BYTE PTR es:[edi]
  41387b:	fild   DWORD PTR ds:0xd547ca8d
  413881:	sbb    al,0x9a
  413883:	or     BYTE PTR [ecx],cl
  413885:	pushf  
  413886:	aad    0x47
  413888:	push   eax
  413889:	nop
  41388a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41388b:	xchg   edi,eax
  41388c:	inc    esp
  41388d:	ret    
  41388e:	mov    ecx,0xc655f3dc
  413893:	fsub   DWORD PTR [esi-0x51766b91]
  413899:	xchg   ebx,eax
  41389a:	mov    dh,bl
  41389c:	lods   al,BYTE PTR ds:[esi]
  41389d:	test   DWORD PTR [eax+0xece60da],edi
  4138a3:	test   dl,dl
  4138a5:	arpl   WORD PTR [edi+edi*1-0x4f],dx
  4138a9:	test   al,0x88
  4138ab:	jbe    0x413884
  4138ad:	shr    BYTE PTR ds:0x2febac99,0x2b
  4138b4:	add    BYTE PTR [edi],bh
  4138b6:	pop    ebx
  4138b7:	mov    dh,0x9d
  4138b9:	or     eax,0x36897185
  4138be:	cli    
  4138bf:	cs shr eax,1
  4138c2:	xchg   ebp,eax
  4138c3:	cmp    BYTE PTR [edi-0x19],dl
  4138c6:	shl    edi,1
  4138c8:	xchg   ebx,eax
  4138c9:	add    dh,dh
  4138cb:	jmp    0xc761:0x3a7d27d1
  4138d2:	pop    ebx
  4138d3:	pop    edi
  4138d4:	stc    
  4138d5:	push   eax
  4138d6:	add    eax,edi
  4138d8:	mov    dl,0x70
  4138da:	lods   al,BYTE PTR ds:[esi]
  4138db:	push   edx
  4138dc:	out    dx,eax
  4138dd:	je     0x4138ff
  4138df:	lods   eax,DWORD PTR ds:[esi]
  4138e0:	fs jg  0x4138a8
  4138e3:	add    DWORD PTR [edi-0x5e],edi
  4138e6:	(bad)  
  4138e7:	push   ebx
  4138e8:	sbb    DWORD PTR [ebp+0x5ce0725e],esp
  4138ee:	xchg   ebx,eax
  4138ef:	stos   DWORD PTR es:[edi],eax
  4138f0:	mov    eax,ds:0x20ab0f0
  4138f5:	ror    ebx,cl
  4138f7:	inc    ebp
  4138f8:	sub    al,0xb6
  4138fa:	std    
  4138fb:	sub    bh,BYTE PTR [esi+0x64a91558]
  413901:	shl    BYTE PTR [ecx],0x85
  413904:	test   esp,0x966b589e
  41390a:	scas   al,BYTE PTR es:[edi]
  41390b:	hlt    
  41390c:	xchg   ebx,eax
  41390d:	push   0xffffffd9
  41390f:	ret    
  413910:	ret    0xccce
  413913:	cld    
  413914:	xlat   BYTE PTR ds:[ebx]
  413915:	mov    ah,0xac
  413917:	pusha  
  413918:	fistp  DWORD PTR [ecx-0x133026a1]
  41391e:	inc    eax
  41391f:	jmp    esp
  413921:	call   0xab41015c
  413926:	add    al,0x9e
  413928:	add    bh,BYTE PTR [edx-0x144044be]
  41392e:	sub    di,WORD PTR [esi]
  413931:	clc    
  413932:	scas   al,BYTE PTR es:[edi]
  413933:	jae    0x41392f
  413935:	repz xor ebx,esp
  413938:	rol    eax,1
  41393a:	inc    esp
  41393b:	repz inc edx
  41393d:	jbe    0x413958
  41393f:	inc    ebp
  413940:	fdiv   st,st(1)
  413942:	scas   al,BYTE PTR es:[edi]
  413943:	mov    al,0x57
  413945:	clc    
  413946:	je     0x41390d
  413948:	test   al,0x8
  41394a:	out    dx,eax
  41394b:	and    esi,edi
  41394d:	sbb    ecx,DWORD PTR [ebx]
  41394f:	cli    
  413950:	xor    ch,dh
  413952:	imul   edx,DWORD PTR [esi],0xfffffff9
  413955:	fwait
  413956:	adc    al,0x4a
  413958:	mov    esp,ebp
  41395a:	xlat   BYTE PTR ds:[ebx]
  41395b:	push   0x5bbf05fb
  413960:	dec    eax
  413961:	mov    ebx,0xe4d28f97
  413966:	jl     0x4139ab
  413968:	rcr    eax,1
  41396a:	rcr    BYTE PTR [ebx+0x47956f6e],cl
  413970:	xchg   esi,eax
  413971:	jnp    0x413936
  413973:	loop   0x41394d
  413975:	icebp  
  413976:	mov    ?,WORD PTR es:0x7141cc59
  41397d:	iret   
  41397e:	xor    DWORD PTR [eax-0x4df9c016],esi
  413984:	xor    al,0x4
  413986:	mov    bh,0x43
  413988:	das    
  413989:	(bad)  
  41398a:	aaa    
  41398b:	inc    esi
  41398c:	adc    ecx,DWORD PTR [ecx]
  41398e:	cmp    esi,esp
  413990:	lods   eax,DWORD PTR ds:[esi]
  413991:	add    eax,0x5151b738
  413996:	push   esi
  413997:	popf   
  413998:	xor    al,0x4b
  41399a:	sti    
  41399b:	add    cl,BYTE PTR [eax-0x80]
  41399e:	xor    bh,BYTE PTR [edi+0x13c29be7]
  4139a4:	push   ecx
  4139a5:	stos   BYTE PTR es:[edi],al
  4139a6:	ret    0xde6e
  4139a9:	xlat   BYTE PTR ds:[ebx]
  4139aa:	test   eax,0x99b4e2ac
  4139af:	(bad)  [esi+0x69]
  4139b2:	pusha  
  4139b3:	outs   dx,BYTE PTR ds:[esi]
  4139b4:	out    dx,eax
  4139b5:	loop   0x41396f
  4139b7:	enter  0xba3c,0xc3
  4139bb:	push   ebp
  4139bc:	pop    ds
  4139bd:	aam    0xa4
  4139bf:	cld    
  4139c0:	pop    ebx
  4139c1:	sub    BYTE PTR [ecx],0x6
  4139c4:	not    BYTE PTR [edi+eiz*4+0x2ec617a1]
  4139cb:	mov    esi,0x41843a11
  4139d0:	pop    edi
  4139d1:	mov    cl,0x75
  4139d3:	inc    edi
  4139d4:	push   ebp
  4139d5:	push   edi
  4139d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139d7:	imul   edx,DWORD PTR [edx-0x44a2620c],0x49
  4139de:	prefetcht0 BYTE PTR [ebx]
  4139e1:	fnstsw WORD PTR [esi]
  4139e3:	(bad)  
  4139e4:	mov    eax,ds:0x7a46da49
  4139e9:	jmp    0x41398f
  4139eb:	push   ds
  4139ec:	pop    es
  4139ed:	(bad)  
  4139ee:	sub    BYTE PTR ss:[eax-0x5653191f],ch
  4139f5:	pop    ebp
  4139f6:	and    esp,DWORD PTR [eax]
  4139f8:	mov    ebx,0xc5019946
  4139fd:	xor    eax,ecx
  4139ff:	push   ecx
  413a00:	sub    al,0xf8
  413a02:	rcr    DWORD PTR [esi-0x4f],cl
  413a05:	jmp    0xa900:0xcaf3ba36
  413a0c:	les    esi,FWORD PTR [ecx+0x462589be]
  413a12:	cmp    ch,BYTE PTR [eax]
  413a14:	mov    eax,ds:0x90f8195d
  413a19:	mov    ds:0xa3317fa1,al
  413a1e:	push   eax
  413a1f:	(bad)  
  413a20:	sub    esi,esp
  413a22:	ret    0x22ff
  413a25:	cs jp  0x413aa2
  413a28:	sub    al,0xa0
  413a2a:	push   esi
  413a2b:	jbe    0x413a76
  413a2d:	std    
  413a2e:	push   edx
  413a2f:	(bad)  
  413a31:	xor    al,al
  413a33:	aad    0x60
  413a35:	mov    DWORD PTR [eax+0x35],esi
  413a38:	aas    
  413a39:	fiadd  DWORD PTR [ebx]
  413a3b:	jmp    0x23a4313d
  413a40:	fs dec ebx
  413a42:	rcl    DWORD PTR [ebp-0x5a],1
  413a45:	or     eax,0x3431550d
  413a4a:	es aas 
  413a4c:	xchg   edi,eax
  413a4d:	enter  0x843b,0x8
  413a51:	ret    0xfabe
  413a54:	sub    BYTE PTR ds:[edx+edx*4],0x5
  413a59:	enter  0x85ab,0xe6
  413a5d:	vunpcklps ymm7,ymm4,YMMWORD PTR [edx]
  413a61:	imul   esp,DWORD PTR ds:0xf0f3c13e,0xfffffff5
  413a68:	ror    bl,0x59
  413a6b:	loope  0x413a27
  413a6d:	out    dx,eax
  413a6e:	xchg   esi,eax
  413a6f:	pop    eax
  413a70:	aad    0x24
  413a72:	inc    esp
  413a73:	push   ebp
  413a74:	test   DWORD PTR [edx+0x401731ae],eax
  413a7a:	fild   DWORD PTR [ebp-0x1e0a5715]
  413a80:	lock out dx,al
  413a82:	nop
  413a83:	pop    esp
  413a84:	fisttp DWORD PTR [ecx+eiz*4+0x44]
  413a88:	push   ecx
  413a89:	adc    cl,cl
  413a8b:	sbb    dl,BYTE PTR [eax-0x1857f3ef]
  413a91:	lea    esp,[edx]
  413a93:	mov    ebp,0x2e62fac0
  413a98:	add    esp,ecx
  413a9a:	retf   0x6f1b
  413a9d:	ror    ebx,cl
  413a9f:	jmp    0x5fcf961a
  413aa4:	add    edi,esi
  413aa6:	adc    DWORD PTR [edi-0x30009910],ebp
  413aac:	in     al,dx
  413aad:	pushf  
  413aae:	cmc    
  413aaf:	push   0x5d
  413ab1:	dec    eax
  413ab2:	call   0x9571f06a
  413ab7:	stos   BYTE PTR es:[edi],al
  413ab8:	rol    BYTE PTR [ebx+0x537a9b06],1
  413abe:	add    BYTE PTR [edi+0x55782b1b],al
  413ac4:	das    
  413ac5:	xor    al,0xcf
  413ac7:	shl    ebx,1
  413ac9:	mov    WORD PTR [ebx-0x7],es
  413acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413acd:	mov    BYTE PTR [edi+eax*8+0x5396d75b],0x23
  413ad5:	dec    DWORD PTR [esi]
  413ad7:	mov    edx,DWORD PTR [ecx-0x553d98de]
  413add:	rcl    DWORD PTR [ebp+0x160e84c1],0xc
  413ae4:	mov    bl,0x85
  413ae6:	inc    ebx
  413ae7:	das    
  413ae8:	sar    DWORD PTR [ebx+0x1b],cl
  413aeb:	jo     0x413af7
  413aed:	dec    ebp
  413aee:	clc    
  413aef:	stos   BYTE PTR es:[edi],al
  413af0:	cdq    
  413af1:	mov    bh,BYTE PTR [ebx-0x1ab2bd1]
  413af7:	xlat   BYTE PTR ds:[ebx]
  413af8:	push   ss
  413af9:	daa    
  413afa:	jb     0x413aaf
  413afc:	(bad)  
  413afd:	sar    esp,cl
  413aff:	add    esi,DWORD PTR [ebp-0x76]
  413b02:	fisub  DWORD PTR [eax]
  413b04:	cmp    edi,DWORD PTR [edi]
  413b06:	test   BYTE PTR [edi+0x2b],dh
  413b09:	jne    0x413b43
  413b0b:	out    dx,eax
  413b0c:	clc    
  413b0d:	add    DWORD PTR [esi-0x4e88facb],ecx
  413b13:	lock inc esp
  413b15:	xchg   esp,eax
  413b16:	and    eax,0x513b807c
  413b1b:	pop    esp
  413b1c:	inc    DWORD PTR [ecx-0x5a]
  413b1f:	xchg   edi,eax
  413b20:	inc    esp
  413b21:	fwait
  413b22:	cwde   
  413b23:	cmc    
  413b24:	xchg   esi,eax
  413b25:	cli    
  413b26:	inc    edi
  413b27:	pop    es
  413b28:	rcr    DWORD PTR [ecx-0x61],1
  413b2b:	bound  esp,QWORD PTR [esi-0x77]
  413b2e:	fsub   st,st(3)
  413b30:	stc    
  413b31:	push   cs
  413b32:	pop    edx
  413b33:	mov    esi,0x2fbf6994
  413b38:	dec    ebp
  413b39:	pop    esi
  413b3a:	adc    al,BYTE PTR [edi-0x44]
  413b3d:	mov    ds:0x4ca6b323,eax
  413b42:	std    
  413b43:	retf   
  413b44:	jmp    0x413b80
  413b46:	scas   eax,DWORD PTR es:[edi]
  413b47:	sbb    BYTE PTR [edx-0x2b350499],al
  413b4d:	cmp    eax,0x72f9d3c5
  413b52:	xor    al,0x9b
  413b54:	inc    ecx
  413b55:	cmp    BYTE PTR [esi],ah
  413b57:	imul   esp,DWORD PTR [edi+eiz*8-0xfcef5a4],0x2c
  413b5f:	fcomp  st(1)
  413b61:	jl     0x413b30
  413b63:	aaa    
  413b64:	jl     0x413b49
  413b66:	cmp    edx,DWORD PTR [ebx+0x52]
  413b69:	(bad)  
  413b6a:	sti    
  413b6b:	or     BYTE PTR [ebx+ebp*1-0x1f3707da],ch
  413b72:	jb     0x413ba2
  413b74:	mov    ch,0xd8
  413b76:	add    al,0x18
  413b78:	scas   eax,DWORD PTR es:[edi]
  413b79:	mov    cl,0xfe
  413b7b:	repz jecxz 0x413bdf
  413b7e:	or     al,0x7
  413b80:	mov    dl,0x16
  413b83:	xor    eax,0x464eae49
  413b88:	out    0x4,eax
  413b8a:	inc    ebp
  413b8b:	out    dx,al
  413b8c:	adc    eax,0xdfa7066d
  413b91:	pop    ebx
  413b92:	sub    al,0x4d
  413b94:	out    0x59,al
  413b96:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413b98:	icebp  
  413b99:	lock retf 0xb2c2
  413b9d:	push   0x807124b1
  413ba2:	popa   
  413ba3:	mov    ds:0xed124498,eax
  413ba8:	push   0xc336bae9
  413bad:	shr    DWORD PTR [ecx],1
  413baf:	push   cs
  413bb0:	add    al,0x3
  413bb2:	aas    
  413bb3:	aad    0xdd
  413bb5:	mov    al,0xd4
  413bb7:	or     bl,BYTE PTR [eax+0x1d]
  413bba:	push   ebx
  413bbb:	icebp  
  413bbc:	adc    eax,ecx
  413bbe:	and    DWORD PTR [esp+edx*1-0x7b4a7714],edx
  413bc5:	arpl   WORD PTR [edx],cx
  413bc7:	sub    al,0x92
  413bc9:	test   DWORD PTR [edi+0x25],ebp
  413bcc:	test   DWORD PTR [edi+0xd700d09],esp
  413bd2:	scas   al,BYTE PTR es:[edi]
  413bd3:	into   
  413bd4:	add    al,0x8e
  413bd6:	mov    dl,cl
  413bd8:	test   BYTE PTR [ecx-0x12702c55],dh
  413bde:	cmp    al,0x8
  413be0:	mov    ah,0x99
  413be2:	in     eax,dx
  413be3:	sar    ecx,0x9c
  413be6:	or     eax,0x61b40d88
  413beb:	adc    BYTE PTR [edi+0x6c41e4c1],ah
  413bf1:	sub    DWORD PTR [ecx-0x65ef807b],ecx
  413bf7:	sbb    bl,BYTE PTR [eax-0x51]
  413bfa:	sub    BYTE PTR [esi-0x6bcd243a],al
  413c00:	inc    eax
  413c01:	ja     0x413bf8
  413c03:	push   ebx
  413c04:	rol    BYTE PTR [ecx-0x6c],cl
  413c07:	push   es
  413c08:	and    BYTE PTR [ebx],bl
  413c0a:	rol    DWORD PTR [ebx],0x0
  413c0d:	xchg   esi,eax
  413c0e:	jne    0x413b9a
  413c10:	es jmp 0x77c44ccd
  413c16:	and    al,0x22
  413c18:	cmp    DWORD PTR [edi-0x12],0xf9b5d802
  413c1f:	cdq    
  413c20:	mov    ch,0x14
  413c22:	or     ecx,DWORD PTR [edx+0x5e]
  413c25:	push   ebx
  413c26:	push   es
  413c27:	pop    edx
  413c28:	lea    ebx,[ebp+0x771e4e70]
  413c2e:	fisubr WORD PTR [ebp+0x43acd1ce]
  413c34:	or     esi,eax
  413c36:	test   BYTE PTR [edx],dl
  413c38:	aam    0xd6
  413c3a:	lds    ebx,FWORD PTR [edx-0xecc0364]
  413c40:	and    DWORD PTR [edi],esp
  413c42:	mov    esp,0x2d53a933
  413c47:	call   0xb99f0b86
  413c4c:	pop    es
  413c4d:	repz inc edi
  413c4f:	lods   eax,DWORD PTR ds:[esi]
  413c50:	in     al,dx
  413c51:	retf   
  413c52:	and    ah,ah
  413c54:	push   eax
  413c55:	push   cs
  413c56:	sbb    ebp,esp
  413c58:	cs inc esi
  413c5a:	sbb    BYTE PTR [ecx+0x66],cl
  413c5d:	in     al,dx
  413c5e:	scas   eax,DWORD PTR es:[edi]
  413c5f:	push   ecx
  413c60:	aam    0xde
  413c62:	xchg   edx,eax
  413c63:	stos   DWORD PTR es:[edi],eax
  413c64:	sbb    DWORD PTR [ecx-0x215c5dff],esp
  413c6a:	fld    TBYTE PTR [esi+0x76]
  413c6d:	inc    eax
  413c6e:	push   DWORD PTR [eax+0x1]
  413c71:	mov    dh,0x65
  413c73:	and    ch,dh
  413c75:	js     0x413c79
  413c77:	xor    ebp,DWORD PTR [ebp-0x1]
  413c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c7b:	or     eax,0xafd365e0
  413c80:	(bad)
  413c83:	jnp    0x413c35
  413c85:	retf   0x4151
  413c88:	daa    
  413c89:	je     0x413cbd
  413c8b:	stc    
  413c8c:	jnp    0x413c74
  413c8e:	xchg   esi,eax
  413c8f:	inc    ecx
  413c90:	repz data16 xlat BYTE PTR ds:[ebx]
  413c93:	(bad)  
  413c95:	(bad)
  413c98:	mov    bl,0xcb
  413c9a:	push   eax
  413c9b:	cwde   
  413c9c:	push   cs
  413c9d:	mov    ?,WORD PTR [ecx-0x2]
  413ca0:	outs   dx,BYTE PTR ds:[esi]
  413ca1:	dec    edx
  413ca2:	retf   
  413ca3:	or     edx,DWORD PTR [ecx+0x26]
  413ca6:	std    
  413ca7:	cld    
  413ca8:	aad    0x70
  413caa:	sub    BYTE PTR [ebx+ecx*2+0x23436e50],ah
  413cb1:	(bad)  
  413cb2:	jmp    0xb6050b4f
  413cb7:	jmp    0x16fb:0xda0018b0
  413cbe:	pop    ss
  413cbf:	ds jo  0x413d2b
  413cc2:	and    al,0x9e
  413cc4:	xlat   BYTE PTR ds:[ebx]
  413cc5:	cld    
  413cc6:	in     eax,dx
  413cc7:	lea    eax,[ebx-0x55a06e34]
  413ccd:	push   esi
  413cce:	clc    
  413ccf:	iret   
  413cd0:	cmp    al,0x16
  413cd2:	rol    DWORD PTR [edi-0x3e69ae7a],cl
  413cd8:	xchg   ebx,eax
  413cd9:	or     DWORD PTR [eax+0x5b0aed03],esi
  413cdf:	jmp    0x413cba
  413ce1:	sub    esp,eax
  413ce3:	push   0xa8b733dd
  413ce8:	xchg   ebp,eax
  413ce9:	jns    0x413c9b
  413ceb:	shr    DWORD PTR [edi+0x42],0x6
  413cef:	fcmovb st,st(6)
  413cf1:	cmp    eax,0x6c2d7134
  413cf6:	sub    DWORD PTR [ebx-0x76],ebp
  413cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cfa:	dec    ebp
  413cfb:	push   ecx
  413cfc:	xchg   DWORD PTR [eax-0x3a],ebp
  413cff:	fldenv [eax]
  413d01:	fwait
  413d02:	repz add cl,BYTE PTR [ebx+0x65b9d97c]
  413d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d0a:	outs   dx,DWORD PTR ds:[esi]
  413d0b:	xchg   edi,eax
  413d0c:	pop    ds
  413d0d:	test   eax,0x24a4c6b9
  413d12:	mov    esp,0xe03520a7
  413d17:	aas    
  413d18:	dec    edi
  413d19:	mov    ebx,0x20671648
  413d1e:	xor    ch,BYTE PTR [esi-0x6fcedc72]
  413d24:	mov    al,0x7d
  413d26:	and    cl,BYTE PTR [ecx+0xa45893b]
  413d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d2d:	fimul  DWORD PTR [ebx]
  413d2f:	jb     0x413d89
  413d31:	not    DWORD PTR [edi]
  413d33:	rol    BYTE PTR [ebp-0x6d37dd5c],cl
  413d39:	or     BYTE PTR [ebx+0x1bc5c8ec],dh
  413d3f:	mov    DWORD PTR [edx+0x0],eax
  413d42:	sub    ecx,esp
  413d44:	(bad)  
  413d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d46:	pop    edx
  413d47:	out    0x3a,eax
  413d49:	out    dx,al
  413d4a:	mov    esi,0xc10c24b2
  413d4f:	xor    al,0x18
  413d51:	or     BYTE PTR [ebp-0x454a6141],ah
  413d57:	mov    bl,0xb7
  413d59:	and    BYTE PTR [ebp+0x391ca606],bl
  413d5f:	hlt    
  413d60:	imul   ebp,DWORD PTR [esi+0x44],0xbc66fc2b
  413d67:	pop    edi
  413d68:	and    dh,BYTE PTR [eax]
  413d6a:	imul   edi,DWORD PTR [eax+ecx*2-0x445a52e4],0x7ef73358
  413d75:	pop    ecx
  413d76:	pop    eax
  413d77:	add    BYTE PTR [edx+esi*8+0x31324ac2],0xa7
  413d7f:	jle    0x413dfc
  413d81:	mov    cl,al
  413d83:	adc    eax,0x27619f33
  413d88:	std    
  413d89:	jno    0x413d20
  413d8b:	dec    eax
  413d8c:	in     al,0x7
  413d8e:	or     DWORD PTR [esi],edx
  413d90:	push   esp
  413d91:	inc    esp
  413d92:	push   esp
  413d93:	arpl   bx,bp
  413d95:	retf   0x6416
  413d98:	sub    eax,0x63a219cf
  413d9d:	inc    esp
  413d9e:	push   esi
  413d9f:	add    dl,bl
  413da1:	test   eax,0xb06c8da7
  413da6:	popa   
  413da7:	fwait
  413da8:	icebp  
  413da9:	std    
  413daa:	imul   DWORD PTR [ebp-0x7c]
  413dad:	lea    esi,[esp+edi*2-0x64]
  413db1:	retf   
  413db2:	cmp    al,0xce
  413db4:	aam    0xf4
  413db6:	pop    ss
  413db7:	xchg   edx,eax
  413db8:	sub    eax,0x82d91a73
  413dbd:	dec    eax
  413dbe:	sbb    esp,0xffffffee
  413dc1:	jp     0x413df0
  413dc3:	or     eax,0x65dfc9f3
  413dc8:	stc    
  413dc9:	mov    dh,0xb
  413dcb:	retf   0x43b0
  413dce:	jmp    0xb65dfa7
  413dd3:	fist   DWORD PTR [ebp-0xb]
  413dd6:	(bad)  [eax]
  413dd8:	mov    eax,0xea47ac66
  413ddd:	dec    eax
  413dde:	ret    0xf516
  413de1:	icebp  
  413de2:	ds jbe 0x413dee
  413de5:	fs fwait
  413de7:	ins    BYTE PTR es:[edi],dx
  413de8:	or     eax,0xcdb4645e
  413ded:	and    eax,0x47d6e8a
  413df2:	(bad)  
  413df3:	mov    dl,0xec
  413df5:	and    esi,DWORD PTR [edx]
  413df7:	test   BYTE PTR [edx],0xcc
  413dfa:	fdivr  QWORD PTR [ecx+0x10]
  413dfd:	add    bh,BYTE PTR [esi+0x39]
  413e00:	hlt    
  413e01:	call   0x3af5ae70
  413e06:	seto   BYTE PTR [ebp+0xd32e2b3]
  413e0d:	inc    ebp
  413e0e:	(bad)  
  413e0f:	stc    
  413e10:	xchg   esi,eax
  413e11:	fsub   QWORD PTR ds:0xc44a961b
  413e17:	push   ecx
  413e18:	xor    edi,DWORD PTR [eax-0x7cec8630]
  413e1e:	jno    0x413e5e
  413e20:	cmp    edi,0x4b
  413e23:	sbb    DWORD PTR [ecx+0x57],edx
  413e26:	or     BYTE PTR [edx+0x293e8b90],bl
  413e2c:	ja     0x413e63
  413e2e:	retf   0x1dcf
  413e31:	nop
  413e32:	mov    ds,WORD PTR [ebx+ebp*4-0x4b]
  413e36:	lock adc esi,DWORD PTR ds:0xbea4a0b8
  413e3d:	mov    al,0xfa
  413e3f:	or     al,BYTE PTR [ecx+0x72a2a95f]
  413e45:	sub    al,0x24
  413e47:	jmp    0x413e38
  413e49:	push   esi
  413e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e4b:	repnz mov ds:0xfaa69be9,eax
  413e51:	cmp    eax,DWORD PTR [eax+0x4f195fb1]
  413e57:	js     0x413e08
  413e59:	push   0xffffffc4
  413e5b:	pop    edx
  413e5c:	mov    dh,0x60
  413e5e:	jns    0x413e4f
  413e60:	aas    
  413e61:	mov    edx,esi
  413e63:	push   0xf
  413e65:	retf   
  413e66:	outs   dx,BYTE PTR ds:[esi]
  413e67:	adc    eax,0xf2d032c8
  413e6c:	ins    DWORD PTR es:[edi],dx
  413e6d:	xor    al,BYTE PTR [ebx-0x157a754f]
  413e73:	cdq    
  413e74:	rcr    DWORD PTR [edx-0x38f0dfe],1
  413e7a:	jge    0x413e74
  413e7c:	adc    edi,DWORD PTR [ecx]
  413e7e:	leave  
  413e7f:	call   0xa966:0xf7034cfc
  413e86:	pop    ss
  413e87:	into   
  413e88:	(bad)  
  413e89:	xlat   BYTE PTR ds:[ebx]
  413e8a:	arpl   WORD PTR [edx-0x1e],di
  413e8d:	dec    esp
  413e8e:	cdq    
  413e8f:	ins    BYTE PTR es:[edi],dx
  413e90:	jno    0x413eb1
  413e92:	or     eax,0x9a1df677
  413e97:	cmp    esi,DWORD PTR [edx+0x36dc34d0]
  413e9d:	fwait
  413e9e:	mov    ebx,0xfbe8a1eb
  413ea3:	inc    ecx
  413ea4:	outs   dx,BYTE PTR ds:[esi]
  413ea5:	mov    eax,ds:0x375bda41
  413eaa:	jle    0x413e58
  413eac:	add    edx,DWORD PTR [edx+ebx*4-0x48]
  413eb0:	in     eax,0x27
  413eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eb3:	mov    ds:0xf037c2e9,al
  413eb8:	and    al,BYTE PTR ds:0xad4d1cb2
  413ebe:	add    bl,BYTE PTR ds:0x128def66
  413ec4:	xchg   edx,eax
  413ec5:	ja     0x413ed4
  413ec7:	sub    al,0x9
  413ec9:	mov    ds:0x30163e17,eax
  413ece:	push   0xffffffd3
  413ed0:	pop    edx
  413ed1:	mov    eax,0xa4d3ecd6
  413ed6:	mov    edi,DWORD PTR [edi-0x7d4b803b]
  413edc:	xor    ebp,ebp
  413ede:	sub    eax,0xd47b25a5
  413ee3:	mov    ?,esi
  413ee5:	inc    ebp
  413ee6:	pop    edx
  413ee7:	call   0x8063:0x39bcfe78
  413eee:	rcr    DWORD PTR [edx-0xc],cl
  413ef1:	mov    ebp,0x4d46d634
  413ef6:	ins    BYTE PTR es:[edi],dx
  413ef7:	ss xor al,0x66
  413efa:	test   DWORD PTR [ecx-0x3955754],esp
  413f00:	push   eax
  413f01:	xchg   ebp,eax
  413f02:	cdq    
  413f03:	add    BYTE PTR [edx+0x30],0x5f
  413f07:	pop    ebp
  413f08:	xchg   edi,eax
  413f09:	xor    BYTE PTR [ebx-0x2d],cl
  413f0c:	sti    
  413f0d:	ror    DWORD PTR [ecx],cl
  413f0f:	aaa    
  413f10:	aam    0x65
  413f12:	mov    dh,0x7a
  413f14:	es in  al,dx
  413f16:	cmp    al,0xa4
  413f18:	(bad)  
  413f19:	sub    eax,0x9110228
  413f1e:	data16 sub al,0x2
  413f21:	div    BYTE PTR [esi]
  413f23:	nop
  413f24:	or     al,0x1a
  413f26:	xor    BYTE PTR [ebp-0x2c],dl
  413f29:	imul   eax,DWORD PTR [eax+0x50],0x7b
  413f2d:	ins    BYTE PTR es:[di],dx
  413f2f:	dec    edx
  413f30:	mov    dh,0xe0
  413f32:	sti    
  413f33:	mov    al,0x49
  413f35:	ja     0x413f49
  413f37:	cdq    
  413f38:	scas   al,BYTE PTR es:[edi]
  413f39:	aaa    
  413f3a:	lods   al,BYTE PTR ds:[esi]
  413f3b:	cwde   
  413f3c:	dec    edi
  413f3d:	push   esi
  413f3e:	shl    bh,cl
  413f40:	xchg   edx,eax
  413f41:	rcr    ecx,0xf1
  413f44:	aaa    
  413f45:	jmp    0x660cd670
  413f4a:	mov    eax,ds:0xd24db9a2
  413f4f:	in     al,dx
  413f50:	pop    ds
  413f51:	push   esp
  413f52:	sbb    cl,BYTE PTR [edx+0x51]
  413f55:	aas    
  413f56:	mov    ds:0xbca1e208,al
  413f5b:	inc    ebx
  413f5c:	outs   dx,DWORD PTR ds:[esi]
  413f5d:	sub    DWORD PTR [ecx-0x58beedab],ebp
  413f63:	cmp    al,0x3d
  413f65:	mov    edx,0x4d563e3a
  413f6a:	js     0x413f69
  413f6c:	lods   al,BYTE PTR ds:[esi]
  413f6d:	(bad)  
  413f6e:	pop    ebx
  413f6f:	pop    ds
  413f70:	mov    WORD PTR [edx+0x103c6e8e],?
  413f76:	xchg   ecx,eax
  413f77:	lea    edi,[ecx+edi*8]
  413f7a:	sar    BYTE PTR [ebp+0x2eaecd43],cl
  413f80:	mov    bh,0x43
  413f82:	xchg   ebp,eax
  413f83:	stos   BYTE PTR es:[edi],al
  413f84:	xor    cl,BYTE PTR [edi]
  413f86:	inc    BYTE PTR ds:0x7adf7cef
  413f8c:	sti    
  413f8d:	inc    esi
  413f8e:	aam    0xb6
  413f90:	jl     0x413f5a
  413f92:	jecxz  0x413f5f
  413f94:	jnp    0x413fc2
  413f96:	push   edx
  413f97:	jmp    0x9c5a:0xc3bc7d7c
  413f9e:	and    al,0x23
  413fa0:	rcr    BYTE PTR [edi-0x55405f56],1
  413fa6:	popa   
  413fa7:	dec    eax
  413fa8:	pop    eax
  413fa9:	mov    eax,0xd090f7b
  413fae:	lods   al,BYTE PTR ds:[esi]
  413faf:	call   0x937b7ef2
  413fb4:	mov    dl,0x5b
  413fb6:	pop    ebx
  413fb7:	jbe    0x41401a
  413fb9:	cmp    ecx,DWORD PTR cs:[eax-0x7d]
  413fbd:	inc    esp
  413fbe:	das    
  413fbf:	lods   eax,DWORD PTR ds:[esi]
  413fc0:	inc    ecx
  413fc1:	jo     0x413ffe
  413fc3:	popa   
  413fc4:	adc    eax,0xfa0df657
  413fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fca:	les    eax,FWORD PTR [edx]
  413fcc:	dec    eax
  413fcd:	(bad)  
  413fce:	and    DWORD PTR [ecx],esp
  413fd0:	adc    al,0x9e
  413fd2:	push   edi
  413fd3:	mov    edx,0xbcc46811
  413fd8:	adc    BYTE PTR [eax],cl
  413fda:	outs   dx,DWORD PTR ds:[esi]
  413fdb:	nop
  413fdc:	xchg   ebx,eax
  413fdd:	dec    ebx
  413fde:	xor    eax,0xa1f3bf49
  413fe3:	pop    esp
  413fe4:	gs cmp eax,0x4cfa2834
  413fea:	pop    ecx
  413feb:	enter  0x7847,0x5d
  413fef:	dec    ebp
  413ff0:	mov    eax,0xdc40365a
  413ff5:	push   cs
  413ff6:	sar    bl,0xdb
  413ff9:	mov    ch,0x4a
  413ffb:	jnp    0x413fde
  413ffd:	cs add DWORD PTR gs:[ebx+0x377ed3d8],ebx
  414005:	pop    ecx
  414006:	aas    
  414007:	shr    ah,cl
  414009:	and    ah,BYTE PTR [ebx]
  41400b:	(bad)  
  41400c:	cmp    BYTE PTR [edx],bl
  41400e:	pop    eax
  41400f:	stc    
  414010:	or     DWORD PTR [edi],0x2
  414013:	pop    ebp
  414014:	sbb    DWORD PTR [edx-0x5a19219a],ebx
  41401a:	push   edx
  41401b:	jle    0x41402b
  41401d:	cdq    
  41401e:	stos   DWORD PTR es:[edi],eax
  41401f:	cmp    DWORD PTR [edx-0x50f87a10],ecx
  414025:	rcl    BYTE PTR [ebp+ebx*2-0x18411123],0x65
  41402d:	(bad)  
  41402e:	fadd   st,st(4)
  414030:	sbb    edx,DWORD PTR [ecx+0x6f5cf6d9]
  414036:	dec    esp
  414037:	bound  ebp,QWORD PTR [eax]
  414039:	js     0x414002
  41403b:	pop    esi
  41403c:	lahf   
  41403d:	push   ss
  41403e:	sbb    BYTE PTR [ebx+0x228e89c8],0x3a
  414045:	cs push es
  414047:	rcl    DWORD PTR [edx+ecx*1],1
  41404a:	mov    cs,WORD PTR [ebp-0x6ca86fd9]
  414050:	cmp    al,0x1a
  414052:	add    esp,edx
  414054:	mov    ebx,0x7789bb5c
  414059:	jo     0x41401e
  41405b:	aam    0x7d
  41405d:	jmp    0x41404e
  41405f:	into   
  414060:	inc    esp
  414061:	adc    DWORD PTR [ebp+0x48adeb9f],ebp
  414067:	push   ebx
  414068:	add    al,0xc6
  41406a:	jbe    0x414046
  41406c:	lods   al,BYTE PTR ds:[esi]
  41406d:	cmp    ecx,DWORD PTR [edx+ebx*2+0x7b]
  414071:	xchg   esi,eax
  414072:	arpl   WORD PTR [esi-0x7f2af6f6],dx
  414078:	jge    0x414061
  41407a:	jecxz  0x413fff
  41407c:	adc    al,0xba
  41407e:	mov    ecx,0x2e03f5bf
  414083:	in     al,0xb0
  414085:	push   ds
  414086:	sub    DWORD PTR [ebp-0x2f99b622],0x4037b30a
  414090:	mov    eax,0x97bb2ac
  414095:	mov    dh,BYTE PTR [eax-0x5b]
  414098:	jne    0x4140bb
  41409a:	shl    BYTE PTR [ecx+0x1b4c48b2],1
  4140a0:	adc    BYTE PTR [ecx-0x1],0x49
  4140a4:	and    eax,0xcb5b32ed
  4140a9:	cld    
  4140aa:	push   edi
  4140ab:	(bad)  
  4140ac:	and    ebx,edi
  4140ae:	sub    al,0x8f
  4140b0:	jp     0x41405c
  4140b2:	or     al,0x4
  4140b4:	sbb    DWORD PTR [esi+0x4bc0857e],edx
  4140ba:	add    DWORD PTR [esi-0x338c085b],0xffffff82
  4140c1:	mov    bl,ah
  4140c3:	push   edx
  4140c4:	jae    0x414106
  4140c6:	daa    
  4140c7:	sub    ah,BYTE PTR [ebx]
  4140c9:	sub    dh,BYTE PTR [ebx-0x7866da13]
  4140cf:	rcl    BYTE PTR [edx],0x3e
  4140d2:	jg     0x4140e0
  4140d4:	hlt    
  4140d5:	mov    al,ds:0x79f90f7d
  4140da:	mov    ds:0x18bcdbe4,al
  4140df:	push   esp
  4140e0:	xor    eax,0x6cbf24c1
  4140e5:	idiv   BYTE PTR [esi]
  4140e7:	jae    0x4140be
  4140e9:	xor    edi,DWORD PTR [ebx+ebx*2+0x1139019c]
  4140f0:	loop   0x414154
  4140f2:	ret    
  4140f3:	into   
  4140f4:	(bad)  
  4140f5:	push   esp
  4140f6:	hlt    
  4140f7:	sar    DWORD PTR [edi],cl
  4140f9:	(bad)  [esi]
  4140fb:	addr16 loopne 0x414098
  4140fe:	jno    0x4140bf
  414100:	outs   dx,DWORD PTR ds:[esi]
  414101:	mov    eax,0xa6e4dd93
  414106:	in     al,dx
  414107:	inc    edx
  414108:	shr    BYTE PTR [ebx],cl
  41410a:	mov    eax,ds:0x8f8f9184
  41410f:	jnp    0x414183
  414111:	or     eax,0xd09f4b83
  414116:	retf   
  414117:	xor    edx,DWORD PTR ds:0xcfdcee70
  41411d:	mov    dl,0x2f
  41411f:	in     al,dx
  414120:	sbb    BYTE PTR [ebx],0xb4
  414123:	stos   DWORD PTR es:[edi],eax
  414124:	add    DWORD PTR [ecx+0x65],edi
  414127:	mov    ebp,0x6289d0d3
  41412c:	mov    esp,0xde2e09ff
  414131:	repnz aaa 
  414133:	retf   
  414134:	retf   
  414135:	ins    BYTE PTR es:[edi],dx
  414136:	sahf   
  414137:	sbb    al,0x2
  414139:	aam    0x9b
  41413b:	(bad)  
  41413c:	aam    0x6a
  41413e:	js     0x414157
  414140:	pop    eax
  414141:	lea    esp,[edi-0x15039bf2]
  414147:	or     esi,eax
  414149:	test   al,0x34
  41414b:	mov    eax,ds:0x950d7173
  414150:	sbb    al,0x91
  414152:	xor    ebp,DWORD PTR [ecx+0x7c]
  414155:	jg     0x414126
  414157:	aas    
  414158:	jl     0x414140
  41415a:	js     0x414182
  41415c:	out    dx,eax
  41415d:	out    0x97,al
  41415f:	pop    es
  414160:	or     al,0x7f
  414162:	jno    0x41415d
  414164:	fnstcw WORD PTR [eax+0x19e9acda]
  41416a:	and    dh,BYTE PTR [ebp+0x4596310e]
  414170:	stos   BYTE PTR es:[edi],al
  414171:	push   esp
  414172:	and    DWORD PTR [edx+0x2c],esi
  414175:	push   edi
  414176:	sti    
  414177:	cwde   
  414178:	push   esi
  414179:	jecxz  0x414148
  41417b:	dec    esi
  41417c:	jne    0x4141d0
  41417e:	adc    ebx,0xffffff99
  414181:	repz cmp ecx,eax
  414184:	add    al,0x86
  414186:	imul   ecx,eax,0x52d671ab
  41418c:	je     0x4141b2
  41418e:	push   esi
  41418f:	pop    ss
  414190:	jl     0x41420d
  414192:	lds    ebx,FWORD PTR [ebx]
  414194:	jnp    0x41417c
  414196:	jb     0x414191
  414198:	mov    ecx,0xf554415c
  41419d:	xor    esp,ebp
  41419f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141a0:	enter  0x7fe9,0xca
  4141a4:	xchg   esp,eax
  4141a5:	pop    edi
  4141a6:	jle    0x414213
  4141a8:	dec    bh
  4141aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141ab:	sbb    DWORD PTR [ebp+0x41],edi
  4141ae:	push   esi
  4141af:	inc    eax
  4141b0:	js     0x41422d
  4141b2:	mov    ah,0x12
  4141b4:	mov    al,0x3c
  4141b6:	aad    0x23
  4141b8:	inc    edi
  4141b9:	arpl   WORD PTR [edi-0x7eb019b1],di
  4141bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141c0:	test   al,0x97
  4141c2:	(bad)  
  4141c3:	mov    sp,WORD PTR [ecx+0x68]
  4141c7:	popf   
  4141c8:	data16 xchg BYTE PTR [esi],ch
  4141cb:	sar    BYTE PTR [edx-0x80],1
  4141ce:	lahf   
  4141cf:	dec    ebp
  4141d0:	sbb    al,BYTE PTR [ebx-0x485b2bbf]
  4141d6:	sbb    BYTE PTR [ecx+esi*8+0x3513464f],dh
  4141dd:	mov    eax,0x2921ddb
  4141e2:	(bad)  
  4141e3:	xor    al,bh
  4141e5:	xor    BYTE PTR [ebx+0x4d5dd218],0x85
  4141ec:	(bad)  
  4141ed:	cmp    ebp,DWORD PTR [ecx+0x53]
  4141f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141f1:	xchg   edi,eax
  4141f2:	dec    ebx
  4141f3:	ss pusha 
  4141f5:	push   ds
  4141f6:	(bad)  
  4141f7:	loop   0x4141a5
  4141f9:	out    dx,al
  4141fa:	sbb    eax,0x94b708aa
  4141ff:	pop    esi
  414200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414201:	or     DWORD PTR [ebp-0x1f4dec5d],0x2bd6cba
  41420b:	cs pop esi
  41420d:	ins    DWORD PTR es:[edi],dx
  41420e:	shr    BYTE PTR [ecx+0x2d],0x95
  414212:	xor    BYTE PTR [ebx],dh
  414214:	int    0x55
  414216:	call   0xdd41:0x4f8278e5
  41421d:	sub    al,0xd0
  41421f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414220:	inc    esp
  414221:	int    0xf3
  414223:	xor    esp,0xffffffb7
  414226:	inc    ebx
  414227:	call   0xa8e8d793
  41422c:	ds pop ss
  41422e:	mov    ecx,0x52484c68
  414233:	sbb    BYTE PTR [edi],cl
  414235:	fidivr DWORD PTR [edi]
  414237:	xor    BYTE PTR [eax+0x7f],dl
  41423a:	iret   
  41423b:	jle    0x4141f3
  41423d:	push   esp
  41423e:	fcmovbe st,st(3)
  414240:	inc    eax
  414241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414242:	xor    eax,0x445ee83b
  414247:	or     eax,0x130f14aa
  41424c:	cmc    
  41424d:	push   ds
  41424e:	cmp    ebp,eax
  414250:	pop    esp
  414251:	dec    esp
  414252:	sar    BYTE PTR ds:0x35374a51,cl
  414258:	lods   eax,DWORD PTR ds:[esi]
  414259:	popf   
  41425a:	pusha  
  41425b:	test   al,0x7f
  41425d:	test   DWORD PTR [ebx],edx
  41425f:	mov    al,ds:0x6018f301
  414264:	(bad)  
  414265:	sbb    edi,ecx
  414267:	xchg   ebx,eax
  414268:	or     al,0xec
  41426a:	retf   
  41426b:	lahf   
  41426c:	aaa    
  41426d:	int3   
  41426e:	mov    dl,0x74
  414270:	retf   0x5418
  414273:	aad    0xd2
  414275:	ins    BYTE PTR es:[edi],dx
  414276:	or     eax,0x9864f9f1
  41427b:	mov    dl,dh
  41427d:	push   esi
  41427e:	sti    
  41427f:	cmp    ch,BYTE PTR [esp+edi*2-0x5c80bbef]
  414286:	retf   0x5773
  414289:	fcmovnb st,st(4)
  41428b:	fist   WORD PTR [eax-0x2d]
  41428e:	dec    esi
  41428f:	ins    BYTE PTR es:[edi],dx
  414290:	cmp    ecx,esi
  414292:	mov    esi,0x1d49a3cc
  414297:	outs   dx,BYTE PTR ds:[esi]
  414298:	lods   eax,DWORD PTR ds:[esi]
  414299:	pop    ebx
  41429a:	call   ebx
  41429c:	fild   DWORD PTR [edi+edx*8]
  41429f:	jg     0x4142c7
  4142a1:	jnp    0x4142d7
  4142a3:	imul   esi,DWORD PTR [eax],0xa9bb63d1
  4142a9:	mov    dl,0xd2
  4142ab:	mov    edx,0xd58a8900
  4142b0:	or     BYTE PTR [ecx+esi*2+0xc],bl
  4142b4:	jb     0x4142eb
  4142b6:	call   0xfe96:0x3cd2e101
  4142bd:	cmp    al,0xb7
  4142bf:	ds jge 0x4142f0
  4142c2:	mov    al,ds:0xacd35305
  4142c7:	rcl    DWORD PTR [eax+0x631ac2a8],1
  4142cd:	xchg   ecx,eax
  4142ce:	in     al,0x32
  4142d0:	test   al,0x31
  4142d2:	dec    esp
  4142d3:	push   ecx
  4142d4:	outs   dx,BYTE PTR ds:[esi]
  4142d5:	inc    esi
  4142d6:	fcomp  st(7)
  4142d8:	in     eax,0x8b
  4142da:	ins    DWORD PTR es:[edi],dx
  4142db:	das    
  4142dc:	pop    ss
  4142dd:	inc    ebx
  4142de:	fmul   st(6),st
  4142e0:	mov    ch,BYTE PTR [ebp-0x7e]
  4142e3:	fbstp  TBYTE PTR [eax]
  4142e5:	adc    edi,ebp
  4142e7:	cld    
  4142e8:	and    BYTE PTR [ebp-0xd],ch
  4142eb:	xchg   ebp,eax
  4142ec:	push   eax
  4142ed:	inc    esp
  4142ee:	adc    BYTE PTR [edx-0x7f953f02],0x8d
  4142f5:	(bad)  
  4142f7:	sub    al,0xcd
  4142f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142fa:	mov    eax,0x1d4a7095
  4142ff:	leave  
  414300:	adc    al,0xaf
  414302:	jae    0x4142bd
  414304:	hlt    
  414305:	push   edi
  414306:	lods   eax,DWORD PTR ds:[esi]
  414307:	popf   
  414308:	jno    0x41430b
  41430a:	enter  0xc940,0xcc
  41430e:	sub    esi,ebx
  414310:	pop    ebx
  414311:	xchg   esi,eax
  414312:	sub    edx,0x5c589ae
  414318:	mov    ebp,0x699f71b7
  41431d:	xor    BYTE PTR [esi+0x40],bh
  414320:	outs   dx,DWORD PTR ds:[esi]
  414321:	fadd   st(1),st
  414323:	addr16 stc 
  414325:	lods   al,BYTE PTR ds:[esi]
  414326:	mov    ebp,0x11823b52
  41432b:	ror    edi,0xc5
  41432e:	pop    edi
  41432f:	div    ecx
  414331:	or     al,0xad
  414333:	sti    
  414334:	push   es
  414335:	je     0x41430f
  414337:	mov    ebp,esp
  414339:	xor    DWORD PTR [esi],ecx
  41433b:	scas   al,BYTE PTR es:[edi]
  41433c:	inc    eax
  41433d:	mov    eax,0x2129e32f
  414342:	test   BYTE PTR [edi+ebx*1-0x39],bh
  414346:	test   DWORD PTR [ebx+0x75a3aca4],eax
  41434c:	inc    ecx
  41434d:	jmp    FWORD PTR [ebx-0x63]
  414350:	(bad)  
  414351:	(bad)  
  414352:	ja     0x414356
  414354:	xchg   esp,eax
  414355:	adc    esi,esi
  414357:	sub    dh,0x8f
  41435a:	xor    esp,DWORD PTR [esi+edi*2-0x57cde748]
  414361:	push   edx
  414362:	mov    edi,0x407b3aa5
  414367:	scas   eax,DWORD PTR es:[edi]
  414368:	or     cl,BYTE PTR [ecx-0x7d]
  41436b:	lods   eax,DWORD PTR ds:[esi]
  41436c:	xor    ah,bh
  41436e:	scas   eax,DWORD PTR es:[edi]
  41436f:	in     eax,0x56
  414371:	loope  0x41437d
  414373:	inc    ecx
  414374:	mov    BYTE PTR [ecx+0x18],ch
  414377:	dec    esi
  414378:	adc    eax,0x14ce5903
  41437d:	out    0x40,al
  41437f:	jecxz  0x4143eb
  414381:	and    al,0xd1
  414383:	sbb    BYTE PTR [edx],bl
  414385:	adc    al,0x67
  414387:	lods   eax,DWORD PTR ds:[esi]
  414388:	xchg   DWORD PTR [esi+0xb1e244f],ebx
  41438e:	(bad)
  414392:	and    DWORD PTR [edi+0x2d0e52cc],edi
  414398:	sub    dh,ah
  41439a:	(bad)
  41439e:	inc    esi
  41439f:	dec    esp
  4143a0:	mov    ebx,0xb86590d
  4143a5:	cmp    DWORD PTR [ebp-0x7d8ee12d],edi
  4143ab:	mov    ds:0xaa970e7b,eax
  4143b0:	repnz xchg ebp,eax
  4143b2:	in     eax,0xfd
  4143b4:	and    cl,BYTE PTR [edi]
  4143b6:	fucomp st(7)
  4143b8:	sub    al,0x81
  4143ba:	test   BYTE PTR [ebp-0x45],bh
  4143bd:	xchg   edi,eax
  4143be:	mov    bh,0x9c
  4143c0:	xchg   esi,eax
  4143c1:	pusha  
  4143c2:	lock jp 0x41435e
  4143c5:	jl     0x414417
  4143c7:	pushf  
  4143c8:	pop    ebp
  4143c9:	dec    ebp
  4143ca:	inc    eax
  4143cb:	into   
  4143cc:	test   DWORD PTR [edx+0x3c392a46],ecx
  4143d2:	(bad)  
  4143d3:	cld    
  4143d4:	stos   BYTE PTR es:[edi],al
  4143d5:	push   ebp
  4143d6:	stos   DWORD PTR es:[edi],eax
  4143d7:	sti    
  4143d8:	icebp  
  4143d9:	and    eax,0xf084395d
  4143de:	push   cs
  4143df:	gs cmp al,0xe7
  4143e2:	js     0x41440b
  4143e4:	sub    BYTE PTR [edi+0x48516d86],ah
  4143ea:	sahf   
  4143eb:	ja     0x4143c4
  4143ed:	and    esp,DWORD PTR [ecx-0x12]
  4143f0:	stos   BYTE PTR es:[edi],al
  4143f1:	sub    eax,DWORD PTR [eax]
  4143f3:	or     DWORD PTR [edi+0x61a4273a],edi
  4143f9:	cwde   
  4143fa:	imul   edi,DWORD PTR [ebx],0xf285e2cc
  414400:	in     al,dx
  414401:	pop    ebp
  414402:	jge    0x414411
  414404:	cdq    
  414405:	rcr    BYTE PTR [eax],cl
  414407:	mov    esi,0x723dc9b0
  41440c:	sbb    ch,bl
  41440e:	pop    es
  41440f:	jmp    DWORD PTR [eax-0x3fb0bac9]
  414415:	outs   dx,BYTE PTR ds:[esi]
  414416:	cmp    al,ah
  414418:	lds    ecx,FWORD PTR [edi-0x752b4f03]
  41441e:	jb     0x4143ac
  414420:	jno    0x41446c
  414422:	inc    ebp
  414423:	mov    dh,0xb4
  414425:	jns    0x41443f
  414427:	jmp    0x7ef7:0xbdf4c275
  41442e:	dec    BYTE PTR [edi]
  414430:	jmp    0x41440e
  414432:	push   edi
  414434:	in     al,dx
  414435:	popf   
  414436:	jp     0x41447f
  414438:	in     al,dx
  414439:	jmp    DWORD PTR [esi+0x1a]
  41443c:	adc    al,0x47
  41443e:	mov    ds:0xed97154f,eax
  414443:	adc    eax,0xc44b23c7
  414448:	popa   
  414449:	sbb    al,0x3a
  41444b:	jno    0x41440d
  41444d:	imul   edi,DWORD PTR [ebp+0x367951f5],0xc2b8cfd7
  414457:	xlat   BYTE PTR ds:[ebx]
  414458:	in     al,dx
  414459:	leave  
  41445a:	and    BYTE PTR [edi+edx*2-0x4],ch
  41445e:	mov    dh,0x6
  414460:	push   eax
  414461:	aam    0xd
  414463:	lds    edi,FWORD PTR [edx]
  414465:	in     eax,dx
  414466:	mov    DWORD PTR [eax+eiz*4],esp
  414469:	dec    ebp
  41446a:	mov    ebp,0x2402a6cf
  41446f:	sub    DWORD PTR [edx],edx
  414471:	jp     0x4144b9
  414473:	pop    edi
  414474:	push   ss
  414475:	dec    esp
  414476:	in     al,0xb5
  414478:	mov    dl,0xbc
  41447a:	call   0x6d2d:0x37d4c12a
  414481:	sbb    esp,DWORD PTR ds:0x53fcaf12
  414487:	loope  0x414475
  414489:	dec    edx
  41448a:	in     eax,dx
  41448b:	sbb    cl,0x1b
  41448e:	pop    ecx
  41448f:	mov    cs,WORD PTR [ebx]
  414491:	mov    bh,0x97
  414493:	jb     0x414480
  414495:	sub    bh,BYTE PTR [eax+0x4c]
  414498:	mov    BYTE PTR [ebx+0x16],al
  41449b:	xchg   DWORD PTR [ebx],esp
  41449d:	iret   
  41449e:	test   al,0x44
  4144a0:	in     eax,0xe7
  4144a2:	daa    
  4144a3:	mov    ebx,0x64989ecc
  4144a8:	cmp    dl,BYTE PTR [esi-0x39]
  4144ab:	mov    dl,0xb9
  4144ad:	call   0x59f8:0x37382350
  4144b4:	jge    0x4144af
  4144b6:	loopne 0x414527
  4144b8:	sbb    esi,DWORD PTR [eax+0xb05dc95]
  4144be:	aam    0x7c
  4144c0:	ja     0x414484
  4144c2:	aaa    
  4144c3:	lea    ecx,[eax+0x13]
  4144c6:	jns    0x4144a3
  4144c8:	ss sub al,0x87
  4144cb:	mov    ecx,0x7f86a820
  4144d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144d1:	clc    
  4144d2:	xor    ebx,esi
  4144d4:	inc    ecx
  4144d5:	sub    al,0x4f
  4144d7:	adc    eax,0x36ed6c34
  4144dc:	lock xchg BYTE PTR [edx-0x43],bh
  4144e0:	xchg   ebx,eax
  4144e1:	jo     0x414526
  4144e3:	cwde   
  4144e4:	leave  
  4144e5:	shl    eax,1
  4144e7:	es and al,0x1d
  4144ea:	lock std 
  4144ec:	dec    esp
  4144ed:	push   0x31
  4144ef:	mov    al,BYTE PTR [eax+0x69997718]
  4144f5:	jl     0x414516
  4144f7:	fwait
  4144f8:	test   al,0x2d
  4144fa:	fwait
  4144fb:	sub    dl,BYTE PTR [ebp+0x297ae88c]
  414501:	fcom   QWORD PTR [eax]
  414503:	int3   
  414504:	mov    al,ds:0x6eb136c9
  414509:	addr16 retf 
  41450b:	repz rcl al,0x4d
  41450f:	loop   0x4144c5
  414511:	jnp    0x4144b9
  414513:	(bad)  
  414514:	jmp    0x3940:0x5a1b6b89
  41451b:	retf   
  41451c:	outs   dx,DWORD PTR ds:[esi]
  41451d:	jnp    0x414514
  41451f:	mov    edx,DWORD PTR [esi]
  414521:	clc    
  414522:	mov    ds:0xbc60f389,al
  414527:	outs   dx,DWORD PTR ds:[esi]
  414528:	jo     0x414501
  41452a:	in     al,0xe4
  41452c:	scas   eax,DWORD PTR es:[edi]
  41452d:	shl    DWORD PTR [esp+esi*4+0x7],1
  414531:	ins    BYTE PTR es:[edi],dx
  414532:	loope  0x4144fb
  414534:	retf   
  414535:	pop    ds
  414536:	jl     0x41455e
  414538:	sub    esp,ecx
  41453a:	mov    eax,0xd0d0aa12
  41453f:	lea    ecx,[eax-0x20]
  414542:	dec    edi
  414543:	retf   0x6038
  414546:	lds    ebp,FWORD PTR [eax]
  414548:	mov    ecx,0xaa3c532e
  41454e:	data16 rcl BYTE PTR [edi],cl
  414551:	imul   esi,ebx,0xffffff8d
  414554:	or     al,0x44
  414556:	fdiv   QWORD PTR [eax-0x2b]
  414559:	push   0x711d737f
  41455e:	xchg   esp,eax
  41455f:	das    
  414560:	xchg   ebx,eax
  414561:	ret    
  414562:	and    edx,ecx
  414564:	mov    WORD PTR [ecx+0x5da4f655],gs
  41456a:	nop
  41456b:	imul   esi,DWORD PTR [esi-0x3e],0x659ca92d
  414572:	fld    TBYTE PTR [edx]
  414574:	adc    eax,DWORD PTR [ecx+0x16]
  414577:	clc    
  414578:	iret   
  414579:	pop    ds
  41457a:	test   DWORD PTR [ebp-0x7bcda8e5],edi
  414580:	jnp    0x414507
  414582:	mov    al,ds:0xfed96030
  414587:	das    
  414588:	xor    eax,0xe69068cb
  41458d:	xchg   ecx,ebx
  41458f:	adc    BYTE PTR [eax],0x39
  414592:	jge    0x4145cc
  414594:	fisttp QWORD PTR [edi+esi*1+0x4e]
  414598:	mov    bl,cl
  41459a:	hlt    
  41459b:	cmp    al,0x56
  41459d:	sbb    eax,0x4fdb6d47
  4145a2:	sbb    eax,0x4821d95b
  4145a7:	pop    ecx
  4145a8:	leave  
  4145a9:	push   es
  4145aa:	jno    0x414593
  4145ac:	inc    eax
  4145ad:	test   BYTE PTR [ebp+0x57],0xd4
  4145b1:	test   DWORD PTR [esi+eiz*4],edi
  4145b4:	cmp    eax,0x44980987
  4145b9:	mov    esp,0x87c5422f
  4145be:	pop    esi
  4145bf:	sbb    esi,DWORD PTR [edx+0x3f8a71c2]
  4145c5:	lods   eax,DWORD PTR ds:[esi]
  4145c6:	arpl   WORD PTR [eax],bp
  4145c8:	mov    esi,0xc3168062
  4145cd:	mov    cs,WORD PTR [edx-0x4ac4b3cf]
  4145d3:	sar    DWORD PTR [esi+0x58f26e9c],0xad
  4145da:	add    eax,0x60cf4bec
  4145df:	stos   DWORD PTR es:[edi],eax
  4145e0:	imul   ebx
  4145e2:	dec    eax
  4145e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145e5:	sbb    eax,DWORD PTR [esi]
  4145e7:	push   edi
  4145e8:	inc    ebp
  4145e9:	(bad)  
  4145eb:	ja     0x4145db
  4145ed:	jne    0x4145be
  4145ef:	xor    ecx,eax
  4145f1:	shl    BYTE PTR [ecx+0x7e52503a],0xd5
  4145f8:	scas   eax,DWORD PTR es:[edi]
  4145f9:	addr16 enter 0x229d,0x8d
  4145fe:	fisub  WORD PTR [eax]
  414600:	push   edi
  414601:	inc    esi
  414602:	ins    BYTE PTR es:[edi],dx
  414603:	xchg   esi,eax
  414604:	cmc    
  414605:	mov    ch,0xa8
  414607:	out    dx,al
  414608:	inc    esi
  414609:	loopne 0x41458b
  41460b:	cmp    ebp,edx
  41460d:	ins    BYTE PTR es:[edi],dx
  41460e:	dec    eax
  41460f:	nop
  414610:	sbb    al,0x15
  414612:	jno    0x414607
  414614:	mov    ebx,0x39dba6d4
  414619:	mov    cl,0x40
  41461b:	lds    eax,FWORD PTR [ebx]
  41461d:	icebp  
  41461e:	into   
  41461f:	inc    esp
  414620:	out    0xf7,eax
  414622:	pop    ds
  414623:	mov    al,ds:0x999a3b49
  414628:	ret    0x11f1
  41462b:	dec    ebp
  41462c:	jg     0x414693
  41462e:	fwait
  41462f:	push   ecx
  414630:	in     al,dx
  414631:	aam    0x5d
  414633:	or     DWORD PTR [eax],eax
  414635:	das    
  414636:	les    esp,FWORD PTR [ecx-0x6c7a24e5]
  41463c:	mov    edi,0x27a4ca8d
  414641:	dec    eax
  414642:	outs   dx,BYTE PTR ds:[esi]
  414643:	pop    edx
  414644:	lds    edx,FWORD PTR [edx]
  414646:	jne    0x4145ef
  414648:	ins    DWORD PTR es:[edi],dx
  414649:	pusha  
  41464a:	mov    BYTE PTR [edi-0x2910b7bb],ah
  414650:	mov    ebx,0x6850a0c2
  414655:	add    eax,0xb1885187
  41465a:	lea    edx,[edi+eiz*1-0x37]
  41465e:	or     bl,BYTE PTR [edx-0x166cbe4d]
  414664:	rcl    BYTE PTR [edi-0x6a],cl
  414667:	or     BYTE PTR [esp+edi*1+0x2b],dh
  41466b:	push   ebp
  41466c:	fimul  WORD PTR [edx]
  41466e:	outs   dx,DWORD PTR ds:[esi]
  41466f:	les    ebp,FWORD PTR [ebp+0x21b39a9a]
  414675:	sub    DWORD PTR [edx+0x600bdce3],esi
  41467b:	ja     0x414672
  41467d:	mov    eax,ds:0x24a4a38b
  414682:	outs   dx,BYTE PTR ds:[esi]
  414683:	inc    esi
  414684:	add    DWORD PTR [edx],0xffffffbe
  414687:	pop    edi
  414688:	iret   
  414689:	ds inc edx
  41468b:	and    al,0x26
  41468d:	add    bl,BYTE PTR [ecx+0x49]
  414690:	pop    esp
  414691:	imul   ecx,DWORD PTR [edi-0x6a],0xffffffd2
  414695:	and    edx,DWORD PTR [edx+0x78392262]
  41469b:	inc    ecx
  41469c:	mov    eax,ds:0xb7bb0257
  4146a1:	ror    DWORD PTR [ebx],cl
  4146a3:	das    
  4146a4:	daa    
  4146a5:	je     0x414639
  4146a7:	(bad)  
  4146a9:	jmp    0x6db99870
  4146ae:	and    DWORD PTR [ebx-0x12],esp
  4146b1:	cmp    esi,edi
  4146b3:	das    
  4146b4:	cmc    
  4146b5:	or     bh,bl
  4146b7:	cmp    dl,BYTE PTR [edx]
  4146b9:	lods   eax,DWORD PTR ds:[esi]
  4146ba:	or     eax,0x327c6439
  4146bf:	je     0x414713
  4146c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146c2:	int    0x87
  4146c4:	push   ebp
  4146c5:	add    BYTE PTR [eax-0x13],bh
  4146c8:	fwait
  4146c9:	pushf  
  4146ca:	jl     0x414728
  4146cc:	jp     0x4146e3
  4146ce:	icebp  
  4146cf:	inc    esp
  4146d0:	shr    ebx,0xb6
  4146d3:	bound  esi,QWORD PTR [eax+edx*2]
  4146d6:	in     eax,0xbf
  4146d8:	jge    0x414717
  4146da:	repz xor BYTE PTR [edx],ah
  4146dd:	outs   dx,BYTE PTR ds:[esi]
  4146de:	inc    edi
  4146df:	fwait
  4146e0:	loopne 0x4146e0
  4146e2:	mov    eax,0x6848e73b
  4146e7:	loope  0x41474f
  4146e9:	stos   DWORD PTR es:[edi],eax
  4146ea:	pop    ds
  4146eb:	add    al,0x9d
  4146ed:	lock xlat BYTE PTR ds:[ebx]
  4146ef:	(bad)  
  4146f0:	sahf   
  4146f1:	int3   
  4146f2:	ds xchg esp,eax
  4146f4:	ss xchg ebx,eax
  4146f6:	lods   al,BYTE PTR ds:[esi]
  4146f7:	pop    edx
  4146f8:	retf   0xe105
  4146fb:	out    0xff,eax
  4146fd:	push   ss
  4146fe:	out    dx,eax
  4146ff:	sub    edi,0x8dca2a8a
  414705:	and    esi,eax
  414707:	cmp    al,0x14
  41470a:	stos   BYTE PTR es:[edi],al
  41470b:	xchg   al,ch
  41470d:	popf   
  41470e:	pop    esp
  41470f:	imul   edx,DWORD PTR [eax-0xb],0x71
  414713:	sbb    al,BYTE PTR [edi+0x6ea4ef38]
  414719:	cmc    
  41471a:	push   0x72
  41471c:	jo     0x414769
  41471e:	mov    ebx,0x5d47c6be
  414723:	jnp    0x4146d8
  414725:	je     0x4146ef
  414727:	sub    ah,BYTE PTR [esi-0x37]
  41472a:	into   
  41472b:	mov    BYTE PTR [eax+0xb],ah
  41472e:	pop    esp
  41472f:	scas   al,BYTE PTR es:[edi]
  414730:	lds    esp,FWORD PTR [eax]
  414732:	jo     0x414705
  414734:	mov    dh,0xbd
  414736:	fsub   st,st(6)
  414738:	stc    
  414739:	inc    edi
  41473a:	and    edi,DWORD PTR [ecx+0x2d1c4ad5]
  414740:	es xchg ah,dh
  414743:	dec    ebp
  414744:	ret    0x6e6e
  414747:	xchg   ebx,eax
  414748:	xchg   esp,eax
  414749:	lahf   
  41474a:	lods   al,BYTE PTR ds:[esi]
  41474b:	sub    al,0xfc
  41474d:	test   DWORD PTR cs:[esi],0x6589dcb6
  414754:	sub    al,0xf0
  414756:	and    al,0x4b
  414758:	fsub   DWORD PTR [esi+eax*4-0x19]
  41475c:	or     DWORD PTR [esi-0x3b03cda0],esp
  414762:	pushf  
  414763:	call   0x77f44f35
  414768:	or     ebp,DWORD PTR [edi-0x51036d60]
  41476e:	pop    esp
  41476f:	mov    ds:0x55141f12,al
  414774:	sub    DWORD PTR [esi+0x3e],edx
  414777:	in     eax,0x3d
  414779:	push   0x68
  41477b:	sbb    eax,DWORD PTR es:[ebp+eiz*1+0x7f0aad9]
  414783:	lods   al,BYTE PTR ds:[esi]
  414784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414785:	pushf  
  414786:	bound  eax,QWORD PTR [eax-0x1567173c]
  41478c:	jo     0x414733
  41478e:	rcr    dh,cl
  414790:	popf   
  414791:	xchg   esi,eax
  414792:	push   esi
  414793:	mov    al,0x47
  414795:	icebp  
  414796:	jb     0x4147e7
  414798:	sahf   
  414799:	out    0x4c,al
  41479b:	inc    ecx
  41479c:	lods   al,BYTE PTR ds:[esi]
  41479d:	and    eax,0xefd98012
  4147a2:	and    cl,BYTE PTR [edi*8-0x9b2a02b]
  4147a9:	adc    al,0x2a
  4147ab:	cs dec edx
  4147ad:	jg     0x41474e
  4147af:	mov    esp,DWORD PTR [esi-0x2a62d91e]
  4147b5:	jmp    0x71c8:0xa8633267
  4147bc:	(bad)  
  4147be:	push   ss
  4147bf:	loope  0x4147e3
  4147c1:	fimul  DWORD PTR [ebx-0x9]
  4147c4:	fs ins BYTE PTR es:[edi],dx
  4147c6:	inc    ebx
  4147c7:	push   edi
  4147c8:	call   0x7aa9:0xebd0286d
  4147cf:	push   eax
  4147d0:	inc    esp
  4147d2:	add    bh,dl
  4147d4:	adc    DWORD PTR [edi],ecx
  4147d6:	sub    bl,BYTE PTR [eax]
  4147d8:	push   esi
  4147d9:	inc    edx
  4147da:	out    0x84,al
  4147dc:	jle    0x414788
  4147de:	cmp    al,0x7e
  4147e0:	mov    eax,DWORD PTR [esi+edi*1-0x2c819433]
  4147e7:	js     0x414865
  4147e9:	ret    
  4147ea:	jno    0x4147ac
  4147ec:	fs pop ss
  4147ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147ef:	imul   esi,DWORD PTR [esi+ebp*4-0x5b],0xb953f810
  4147f7:	xor    ebp,DWORD PTR [edx]
  4147f9:	and    DWORD PTR [eax],0x2cda4409
  4147ff:	mov    ah,0x5e
  414801:	out    0xaf,al
  414803:	imul   esi,DWORD PTR [esi],0xffffff84
  414806:	lods   eax,DWORD PTR ds:[esi]
  414807:	adc    BYTE PTR [edi],dl
  414809:	jae    0x414840
  41480b:	pop    es
  41480c:	outs   dx,DWORD PTR ds:[esi]
  41480d:	or     DWORD PTR [edi+0x26e560b0],edx
  414813:	sub    ebp,DWORD PTR [ebx+0x3]
  414816:	fisub  DWORD PTR ds:0xb4e1edf6
  41481c:	pop    es
  41481d:	cld    
  41481e:	out    dx,eax
  41481f:	jno    0x4147f2
  414821:	leave  
  414822:	mov    dl,0x50
  414824:	or     al,0x4f
  414826:	dec    ebp
  414827:	or     edi,0xffffffb8
  41482a:	test   dh,0x8d
  41482d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41482e:	mov    esp,0x3b1c6d7c
  414833:	and    dh,BYTE PTR [ebx-0x101c9205]
  414839:	popa   
  41483a:	popa   
  41483b:	scas   al,BYTE PTR es:[edi]
  41483c:	popf   
  41483d:	jp     0x4147f0
  41483f:	and    cl,BYTE PTR [esp+ebx*8-0x2d1a3802]
  414846:	enter  0x2874,0xc6
  41484a:	call   0xad7d:0xf67e70ed
  414851:	retf   0x46fc
  414854:	push   ebx
  414855:	test   DWORD PTR [ebx],0xe0625ef5
  41485b:	lock (bad) 
  41485e:	pop    ds
  41485f:	in     al,dx
  414860:	imul   esi,DWORD PTR [edi],0xffffffaa
  414863:	popa   
  414864:	sqrtps xmm5,xmm7
  414867:	cmc    
  414868:	sub    ch,BYTE PTR [edi]
  41486a:	dec    eax
  41486b:	mov    edx,0x941cc470
  414870:	cmp    ah,ah
  414872:	mov    ebx,0xeab9486c
  414877:	gs mov dh,0x11
  41487a:	dec    dx
  41487c:	mov    dl,0xfa
  41487e:	dec    edi
  41487f:	pop    ds
  414880:	popf   
  414881:	cli    
  414882:	clc    
  414883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414884:	in     al,0x51
  414886:	addr16 xchg edi,eax
  414888:	ins    BYTE PTR es:[edi],dx
  414889:	mov    eax,ds:0x9ea2cf2
  41488e:	je     0x41484c
  414890:	lods   eax,DWORD PTR ds:[esi]
  414891:	push   esp
  414892:	cmp    ebp,ecx
  414894:	mov    ebp,0x1e4750ef
  414899:	push   cs
  41489a:	xchg   esi,eax
  41489b:	sub    DWORD PTR [esi],ebp
  41489d:	dec    ecx
  41489e:	bound  esp,QWORD PTR ds:[ebp+0x51]
  4148a2:	mov    DWORD PTR [ebp-0x7681f0de],ebx
  4148a8:	xchg   ebp,eax
  4148a9:	cs int3 
  4148ab:	je     0x414865
  4148ad:	sti    
  4148ae:	lods   al,BYTE PTR ds:[esi]
  4148af:	enter  0xa59f,0xa4
  4148b3:	mov    DWORD PTR [edi+0x502df6b5],ecx
  4148b9:	pop    esp
  4148ba:	or     bl,BYTE PTR [ebp-0x67e6526f]
  4148c0:	mov    eax,ds:0x4950b206
  4148c5:	fild   QWORD PTR [ebx]
  4148c7:	lods   al,BYTE PTR ds:[esi]
  4148c8:	cmp    DWORD PTR [edi+0x342a6d81],ebp
  4148ce:	jmp    0x414907
  4148d0:	sahf   
  4148d1:	pop    ebx
  4148d2:	cld    
  4148d3:	inc    ecx
  4148d4:	fadd   st,st(6)
  4148d6:	mov    dh,0x54
  4148d8:	(bad)  
  4148d9:	test   bl,0x96
  4148dc:	xchg   esi,eax
  4148dd:	and    ah,BYTE PTR [ebx]
  4148df:	sub    al,0x6c
  4148e1:	pop    ss
  4148e2:	pushf  
  4148e3:	and    al,0x57
  4148e5:	cmp    BYTE PTR [edi-0x51659f04],0x92
  4148ec:	push   eax
  4148ed:	call   0x89c49230
  4148f2:	hlt    
  4148f3:	mov    bh,0x9
  4148f5:	jge    0x41489c
  4148f7:	xchg   edx,eax
  4148f8:	add    al,0x3e
  4148fa:	dec    edi
  4148fb:	lods   eax,DWORD PTR ds:[esi]
  4148fc:	shl    BYTE PTR [edi],0xa
  4148ff:	test   DWORD PTR [edi],ecx
  414901:	xchg   esp,eax
  414902:	and    dh,BYTE PTR [esi+0x19]
  414905:	pusha  
  414906:	mov    cl,0x14
  414908:	inc    edx
  414909:	mov    ds:0x237b066b,al
  41490e:	cmp    DWORD PTR [esi-0x302e2927],esp
  414914:	sub    al,BYTE PTR [ecx+esi*8+0x2f]
  414918:	cmp    BYTE PTR [esi],dh
  41491a:	add    al,0x6f
  41491c:	jp     0x4148dd
  41491e:	add    esp,DWORD PTR [ecx]
  414920:	push   edx
  414921:	retf   0x2663
  414924:	pop    es
  414925:	xchg   edx,eax
  414926:	pop    eax
  414927:	fcmovu st,st(5)
  414929:	ja     0x4148eb
  41492b:	and    ecx,DWORD PTR [ecx+esi*2-0x1e]
  41492f:	pop    ss
  414930:	popa   
  414931:	shr    ebx,cl
  414933:	pop    ds
  414934:	arpl   WORD PTR [ebx-0x4e138012],bp
  41493a:	push   cs
  41493b:	adc    BYTE PTR [ebx+0x39],dl
  41493e:	enter  0x723,0xe5
  414942:	push   0xf3f04295
  414947:	add    BYTE PTR [edx-0x7e],al
  41494a:	inc    edx
  41494b:	ins    DWORD PTR es:[edi],dx
  41494c:	mov    ebp,0xf08c184f
  414951:	lods   al,BYTE PTR ds:[esi]
  414952:	jg     0x414937
  414954:	test   DWORD PTR [ebp-0x6fadc869],edx
  41495a:	test   eax,0x386f2d5a
  41495f:	cmc    
  414960:	push   cs
  414961:	neg    ecx
  414963:	aad    0xa8
  414965:	sbb    BYTE PTR [esi+esi*1-0x3bb8ab29],0x87
  41496d:	and    BYTE PTR [eax],bl
  41496f:	rcr    BYTE PTR [eax-0x34],1
  414972:	sar    DWORD PTR [eax],1
  414974:	xchg   ebx,eax
  414975:	stos   DWORD PTR es:[edi],eax
  414976:	xor    ah,BYTE PTR [edi+0x24]
  414979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41497a:	(bad)  
  41497b:	pop    esi
  41497c:	add    DWORD PTR [edi+0x7e510509],ebx
  414982:	adc    eax,edi
  414984:	popf   
  414985:	adc    esp,ecx
  414987:	aad    0x3a
  414989:	mov    edi,0x4d99ff26
  41498e:	lds    edi,FWORD PTR [ebx]
  414990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414991:	retf   0xebd3
  414994:	pop    ss
  414995:	or     BYTE PTR [ecx+0x3e],bl
  414998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414999:	pop    ebx
  41499a:	xchg   esp,esp
  41499c:	imul   ebx,DWORD PTR [ecx+0x10],0x2d693874
  4149a3:	mov    dl,0x52
  4149a5:	outs   dx,BYTE PTR ds:[esi]
  4149a6:	jmp    0xd885:0xa9dcfe24
  4149ad:	mov    ?,WORD PTR [ecx]
  4149af:	push   ebx
  4149b0:	lds    esp,FWORD PTR [ecx]
  4149b2:	pop    esp
  4149b3:	iret   
  4149b4:	cmp    DWORD PTR [ecx],ebp
  4149b6:	repz test dh,dh
  4149b9:	enter  0xeabf,0x53
  4149bd:	push   cs
  4149be:	mul    DWORD PTR [eax+0x5b]
  4149c1:	or     dh,BYTE PTR [esi+0x6f48ae9c]
  4149c7:	xchg   edx,eax
  4149c8:	pop    es
  4149c9:	mov    ds:0xe9a912a3,al
  4149ce:	cmp    al,bh
  4149d0:	adc    eax,0xc411f1f6
  4149d5:	ja     0x414a28
  4149d7:	dec    eax
  4149d8:	jle    0x4149e0
  4149da:	and    BYTE PTR [ebx],al
  4149dc:	mov    dl,0x3f
  4149de:	push   cs
  4149df:	jg     0x4149aa
  4149e1:	mov    bh,BYTE PTR [edx+0x3150bab]
  4149e7:	fidivr WORD PTR [edx]
  4149e9:	repnz imul edi,DWORD PTR [edi-0x32],0xffffff85
  4149ee:	or     BYTE PTR [edi+0x6d],ch
  4149f1:	xor    eax,0xec303157
  4149f6:	ret    
  4149f7:	stc    
  4149f8:	loop   0x414a51
  4149fa:	test   DWORD PTR [edi-0xa6bffc8],ecx
  414a00:	xchg   ebx,eax
  414a01:	je     0x414a29
  414a03:	out    0x97,eax
  414a05:	leave  
  414a06:	retf   0xe87d
  414a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a0a:	add    al,0x8d
  414a0c:	lods   eax,DWORD PTR ds:[esi]
  414a0d:	dec    eax
  414a0e:	call   0x889bbcfe
  414a13:	repz push 0x5a
  414a16:	jle    0x4149a5
  414a18:	rcr    cl,0xfd
  414a1b:	pop    ss
  414a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a1d:	jle    0x4149b5
  414a1f:	sbb    al,0x63
  414a21:	sbb    al,0x12
  414a23:	sub    DWORD PTR [edi+0x78e2784],edi
  414a29:	and    eax,0x7fc9f57e
  414a2e:	jbe    0x414a75
  414a30:	push   ecx
  414a31:	mov    bh,0xb1
  414a33:	or     eax,eax
  414a35:	add    eax,0x6abe3aea
  414a3a:	call   0xf3de:0x69076302
  414a41:	je     0x414aab
  414a43:	and    al,0xce
  414a45:	push   0xffffffdb
  414a47:	mov    bh,0x73
  414a49:	retf   0x52bd
  414a4c:	xchg   edi,eax
  414a4d:	mov    ecx,0x349233dd
  414a52:	pop    esp
  414a53:	mov    fs,edx
  414a55:	in     eax,0xce
  414a57:	mov    ecx,0xd4a705a8
  414a5c:	loope  0x414a3f
  414a5e:	loopne 0x414a79
  414a60:	test   BYTE PTR [esi+0x3484692a],al
  414a66:	push   ecx
  414a68:	adc    dh,al
  414a6a:	xchg   ecx,eax
  414a6b:	in     eax,0x6c
  414a6d:	jecxz  0x414a6b
  414a6f:	cld    
  414a70:	mov    esp,0xe3182728
  414a75:	adc    bl,BYTE PTR ds:0xcc2e25b6
  414a7b:	mov    eax,0xe3b17e20
  414a80:	pop    ds
  414a81:	mov    ds:0x5467e126,al
  414a86:	mov    esp,0xe779300c
  414a8b:	and    esp,edx
  414a8d:	jns    0x414a8a
  414a8f:	and    BYTE PTR [esp+edi*8-0x31f81b2c],0xf5
  414a97:	mov    esi,0xbd1f1f25
  414a9c:	dec    edi
  414a9d:	cwde   
  414a9e:	pusha  
  414a9f:	sar    DWORD PTR [ebp+0x13fc6e27],cl
  414aa5:	sbb    dl,BYTE PTR [ecx-0x5437d06a]
  414aab:	push   ecx
  414aac:	lods   eax,DWORD PTR ds:[esi]
  414aad:	test   DWORD PTR [edx-0x4],esi
  414ab0:	adc    eax,0x3f3e1138
  414ab5:	mov    ss,edx
  414ab7:	mov    WORD PTR [ebp+0x5d23628c],ds
  414abd:	into   
  414abe:	cmp    al,0x6c
  414ac0:	arpl   WORD PTR [eax+ebx*8-0x7c],si
  414ac4:	sbb    DWORD PTR [esi],0x1db161ed
  414aca:	add    BYTE PTR [esi],dl
  414acc:	frstor [esi+0x1e9ae8d3]
  414ad2:	mov    al,ah
  414ad4:	jbe    0x414ae8
  414ad6:	add    ebx,ebx
  414ad8:	jmp    0xd3afc981
  414add:	fnsave [eax+0x1a]
  414ae0:	fdivr  DWORD PTR [edi]
  414ae2:	pop    ecx
  414ae3:	cmp    BYTE PTR [eax-0x2be5d2a7],0xcb
  414aea:	imul   DWORD PTR [bx+di]
  414aed:	lock sbb DWORD PTR [esi-0x14],eax
  414af1:	adc    eax,0x2fb6abf5
  414af6:	call   0x81ac:0x40d8ebc7
  414afd:	mov    al,ds:0xbd24b38b
  414b02:	or     eax,0x1a543660
  414b07:	dec    esp
  414b08:	mov    ebx,0x7245ee2
  414b0d:	xlat   BYTE PTR ds:[ebx]
  414b0e:	call   0x2dbbf3b3
  414b13:	jg     0x414b06
  414b15:	scas   al,BYTE PTR es:[edi]
  414b16:	and    eax,ebx
  414b18:	adc    edi,DWORD PTR fs:[edi]
  414b1b:	or     al,bl
  414b1d:	clc    
  414b1e:	push   ss
  414b1f:	leave  
  414b20:	push   edx
  414b21:	sub    eax,0x1524fd6b
  414b26:	sahf   
  414b27:	outs   dx,DWORD PTR ds:[esi]
  414b28:	leave  
  414b29:	sbb    eax,0x48c9d712
  414b2e:	mov    ebx,eax
  414b30:	push   edi
  414b31:	test   BYTE PTR [ecx-0xf],0xb6
  414b35:	sti    
  414b36:	push   0x43b4176e
  414b3b:	ds dec edx
  414b3d:	cmp    eax,0x1d62fb4c
  414b42:	add    eax,0xa2a6fe88
  414b47:	iret   
  414b48:	push   cs
  414b49:	fcmovb st,st(7)
  414b4b:	int3   
  414b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b4d:	fs push 0x94df2de3
  414b53:	clc    
  414b54:	mov    ds,WORD PTR [esi]
  414b56:	pop    edi
  414b57:	js     0x414b16
  414b59:	fdivr  QWORD PTR [eax+eax*4-0x45]
  414b5d:	aaa    
  414b5e:	bsf    ebx,esi
  414b61:	mov    ds:0xe74f3fdd,al
  414b66:	es sbb eax,0x2aec51ea
  414b6c:	push   ecx
  414b6d:	dec    edi
  414b6e:	(bad)  
  414b6f:	mov    al,0x6f
  414b71:	or     dh,BYTE PTR [eax+0x5b1eea2c]
  414b77:	pop    ss
  414b78:	(bad)  
  414b79:	cmp    ch,BYTE PTR [ecx+0x656206d4]
  414b7f:	xor    ebp,DWORD PTR ds:0x66abc212
  414b85:	(bad)  
  414b86:	clc    
  414b87:	push   0xffffff97
  414b89:	push   ebp
  414b8a:	lds    ecx,FWORD PTR [ebp+ebx*8+0xb]
  414b8e:	shl    BYTE PTR [ecx+edx*1],cl
  414b91:	fsub   QWORD PTR [esi+0x7f]
  414b94:	out    0x74,al
  414b96:	jne    0x414b58
  414b98:	imul   ebx,DWORD PTR [edx+ebx*2],0xffffff83
  414b9c:	icebp  
  414b9d:	cmp    DWORD PTR [ecx+0x16],esp
  414ba0:	imul   ebx,DWORD PTR [ebx+ecx*2+0x33],0x5c6b69ac
  414ba8:	pop    ebp
  414ba9:	div    DWORD PTR [ecx+0x4813744c]
  414baf:	int    0x72
  414bb1:	lea    esi,[ebx+0x31]
  414bb4:	(bad)  
  414bb5:	repz repnz cmp bh,bh
  414bb9:	pop    ecx
  414bba:	scas   al,BYTE PTR es:[edi]
  414bbb:	adc    al,0x75
  414bbd:	lock loope 0x414bfd
  414bc0:	lods   eax,DWORD PTR ds:[esi]
  414bc1:	rcr    edx,0x75
  414bc4:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bc6:	sbb    BYTE PTR [ebp+0x33],bl
  414bc9:	sar    BYTE PTR [ecx+eax*2-0x63],1
  414bcd:	int3   
  414bce:	jecxz  0x414b6a
  414bd0:	xchg   edi,eax
  414bd1:	fwait
  414bd2:	in     eax,dx
  414bd3:	adc    DWORD PTR [esi+ebp*2],eax
  414bd6:	test   DWORD PTR [edi-0x27e10871],eax
  414bdc:	jno    0x414be9
  414bde:	int3   
  414bdf:	stos   BYTE PTR es:[edi],al
  414be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414be1:	data16 or cl,dl
  414be4:	ret    
  414be5:	ret    0xaf4a
  414be8:	sbb    eax,0xbcb3ccda
  414bed:	rcr    al,cl
  414bef:	pop    ebx
  414bf0:	ds stos BYTE PTR es:[edi],al
  414bf2:	jg     0x414bdd
  414bf4:	jge    0x414c2c
  414bf6:	xor    DWORD PTR [eax-0x77],ebp
  414bf9:	or     edx,ebp
  414bfb:	loopne 0x414c6e
  414bfd:	cmc    
  414bfe:	std    
  414bff:	or     al,0xde
  414c01:	js     0x414c03
  414c03:	cmp    DWORD PTR [esi-0x28],esi
  414c06:	push   edx
  414c07:	(bad)
  414c0a:	cmp    BYTE PTR [edi+0x250262e9],bh
  414c10:	fbld   TBYTE PTR [esi-0x2c06ad18]
  414c16:	loope  0x414c50
  414c18:	jmp    FWORD PTR [ebp+0x71]
  414c1b:	test   BYTE PTR ds:0xedc71055,bl
  414c21:	(bad)  
  414c22:	or     eax,DWORD PTR [ebp-0x68]
  414c25:	jmp    FWORD PTR [eax]
  414c27:	aam    0xa
  414c29:	stos   DWORD PTR es:[edi],eax
  414c2a:	scas   al,BYTE PTR es:[edi]
  414c2b:	rdmsr  
  414c2d:	and    eax,0x12d39fba
  414c32:	sub    BYTE PTR [ecx+0x770cc9b5],al
  414c38:	retf   0xaa02
  414c3b:	bound  ebp,QWORD PTR [edi+0x66]
  414c3e:	mov    dh,0x90
  414c40:	mov    ah,ch
  414c42:	jae    0x414c23
  414c44:	xchg   ecx,eax
  414c45:	cmp    al,0x44
  414c47:	mov    ecx,0xc6be57f
  414c4c:	adc    BYTE PTR [eax+eiz*8-0x44],bl
  414c50:	mov    ch,0x68
  414c52:	push   es
  414c53:	add    al,0x59
  414c55:	or     DWORD PTR [ebx-0x63],eax
  414c58:	nop
  414c59:	push   edx
  414c5a:	mov    edx,DWORD PTR [bx-0x4332]
  414c5f:	sbb    ebx,DWORD PTR [ecx+0x61]
  414c62:	mov    ch,0x3
  414c64:	inc    edx
  414c65:	adc    DWORD PTR [esi+0x45],0xffffffc6
  414c69:	jp     0x414cab
  414c6b:	repnz add al,0x61
  414c6e:	pop    edx
  414c6f:	add    bl,BYTE PTR [edi+0x9ecc]
  414c75:	fbld   TBYTE PTR [esp+eiz*8-0x54]
  414c79:	div    ah
  414c7b:	lds    edi,FWORD PTR [edx+ebx*4]
  414c7e:	dec    edi
  414c7f:	push   ebp
  414c80:	pop    eax
  414c81:	pop    edi
  414c82:	lea    ebx,[ebp+0x7b]
  414c85:	scas   eax,DWORD PTR es:[edi]
  414c86:	jbe    0x414c88
  414c88:	dec    edx
  414c89:	lods   eax,DWORD PTR ds:[esi]
  414c8a:	imul   edi,DWORD PTR [edx+0x39],0x2
  414c8e:	jl     0x414cbe
  414c90:	jb     0x414caf
  414c92:	(bad)  
  414c94:	dec    ebx
  414c95:	push   ecx
  414c96:	xor    DWORD PTR [edi+0x3321d102],edx
  414c9c:	mov    ebx,0xd6b8bd6b
  414ca1:	bound  ebp,QWORD PTR [ecx-0x33]
  414ca4:	fs jb  0x414c50
  414ca7:	(bad)  
  414ca8:	push   cs
  414ca9:	xchg   DWORD PTR [eax+ecx*2],ecx
  414cac:	sti    
  414cad:	ret    
  414cae:	xchg   BYTE PTR [ebx+eiz*1-0x5293d9b1],dh
  414cb5:	mov    dh,0xbf
  414cb7:	(bad)  
  414cb9:	(bad)  
  414cba:	mov    edi,DWORD PTR [edx]
  414cbc:	sti    
  414cbd:	jmp    0x22271758
  414cc2:	jmp    0x36bc1a52
  414cc7:	add    eax,0xa1e819a9
  414ccc:	(bad)  [ebx+0x7ef14b9e]
  414cd2:	pop    esi
  414cd3:	inc    edx
  414cd4:	xchg   esp,eax
  414cd5:	(bad)  
  414cd6:	jo     0x414cb7
  414cd8:	aad    0xe8
  414cda:	cmc    
  414cdb:	add    DWORD PTR [edi+0x6a],eax
  414cde:	call   0xc9c1:0xfa2b7d82
  414ce5:	pusha  
  414ce6:	jae    0x414d27
  414ce8:	dec    ebx
  414ce9:	xor    dl,BYTE PTR [esi-0x74261a4b]
  414cef:	sub    ah,dh
  414cf1:	cmp    ch,dl
  414cf3:	push   edx
  414cf4:	popf   
  414cf5:	xchg   edi,eax
  414cf6:	mov    eax,0xf4b5d6e6
  414cfb:	scas   eax,DWORD PTR es:[edi]
  414cfc:	mov    edi,0xfb86e24b
  414d01:	sub    al,0xb
  414d03:	ds jbe 0x414d7c
  414d06:	or     DWORD PTR [ebx-0x62],ebp
  414d09:	jp     0x414cd7
  414d0b:	xchg   edi,eax
  414d0c:	cld    
  414d0d:	add    ebx,esi
  414d0f:	jg     0x414d10
  414d11:	mov    dl,0x7a
  414d13:	aad    0x4d
  414d15:	jns    0x414cf1
  414d17:	dec    edi
  414d18:	cld    
  414d19:	ficomp WORD PTR [ecx+0x4b69bdea]
  414d1f:	mov    BYTE PTR [ebp-0x5f765c46],bh
  414d25:	push   ebp
  414d26:	fld    st(5)
  414d28:	adc    esi,DWORD PTR [ecx-0x11]
  414d2b:	push   0xffffffaa
  414d2d:	mov    edx,0xbd46e4de
  414d32:	es retf 0x313b
  414d36:	mov    dl,0x84
  414d38:	stos   BYTE PTR es:[edi],al
  414d39:	mov    ch,0x43
  414d3b:	jbe    0x414d6a
  414d3d:	xor    eax,0x54416434
  414d42:	in     al,dx
  414d43:	test   eax,0x3c278c4c
  414d48:	mov    al,0x10
  414d4a:	cmp    al,0x4f
  414d4d:	add    eax,0x4e4fe68d
  414d52:	test   DWORD PTR [edi+ebp*2-0x31],ebp
  414d56:	inc    edx
  414d57:	les    esi,FWORD PTR [ebx+0x149db9e8]
  414d5d:	adc    cl,al
  414d5f:	push   ss
  414d60:	fldcw  WORD PTR [ebx-0x2a0968e5]
  414d66:	dec    esi
  414d67:	cld    
  414d68:	dec    esp
  414d69:	cmc    
  414d6a:	mov    ebx,0x8ea3c52a
  414d6f:	into   
  414d70:	sub    al,0xf0
  414d72:	fisub  WORD PTR [eax+0x2095854e]
  414d78:	mov    esp,0xfac5cf92
  414d7d:	and    DWORD PTR [ecx],eax
  414d7f:	jno    0x414d1e
  414d81:	dec    ebx
  414d82:	sti    
  414d83:	call   0xd3639d86
  414d88:	sbb    eax,0xce919031
  414d8d:	imul   DWORD PTR [ecx]
  414d8f:	xchg   dl,cl
  414d91:	sti    
  414d92:	mov    ebp,0x25d6028f
  414d97:	in     al,0x7b
  414d99:	stos   BYTE PTR es:[edi],al
  414d9a:	push   esi
  414d9b:	fwait
  414d9c:	test   al,0xd
  414d9e:	adc    al,0x9e
  414da0:	jecxz  0x414d55
  414da2:	push   ecx
  414da3:	add    al,0x5e
  414da5:	ins    BYTE PTR es:[edi],dx
  414da6:	mov    ds:0x159dac0f,al
  414dab:	mov    ?,edi
  414dad:	rcl    DWORD PTR [eax+ebx*2-0x3d765ba0],1
  414db4:	mov    es,esi
  414db6:	xchg   ebx,eax
  414db7:	inc    ebx
  414db8:	push   cs
  414db9:	daa    
  414dba:	lds    ecx,FWORD PTR [ebx-0x6b]
  414dbd:	inc    edi
  414dbe:	int3   
  414dbf:	inc    edi
  414dc0:	pop    ds
  414dc1:	pop    ebx
  414dc2:	scas   al,BYTE PTR es:[edi]
  414dc3:	js     0x414da6
  414dc5:	and    dl,bh
  414dc7:	outs   dx,DWORD PTR ds:[esi]
  414dc8:	cwde   
  414dc9:	sub    DWORD PTR [ebx+edx*2],ecx
  414dcc:	sub    bh,dl
  414dce:	ins    BYTE PTR es:[edi],dx
  414dcf:	icebp  
  414dd0:	mov    bh,0x63
  414dd2:	push   ds
  414dd3:	js     0x414e2b
  414dd5:	inc    ebx
  414dd6:	out    0x9b,al
  414dd8:	es xor eax,0x9d5d82b8
  414dde:	pop    edi
  414ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414de0:	and    bh,BYTE PTR [edx+0x592b6fec]
  414de6:	(bad)  
  414de7:	push   0x1d567494
  414dec:	dec    ecx
  414ded:	push   edx
  414dee:	or     DWORD PTR [ecx+edx*8],0x4a
  414df2:	jnp    0x414e20
  414df4:	adc    ebp,edx
  414df6:	popf   
  414df7:	stos   BYTE PTR es:[edi],al
  414df8:	daa    
  414df9:	fsubrp st(7),st
  414dfb:	add    DWORD PTR [ebp-0x61442255],ecx
  414e01:	lds    edx,FWORD PTR [eax-0x238a0b33]
  414e07:	xlat   BYTE PTR ds:[ebx]
  414e08:	mov    DWORD PTR [ebx+eax*4],ebp
  414e0b:	clflush BYTE PTR [esi+eiz*1-0x3b]
  414e10:	test   eax,0x81a91e3b
  414e15:	popa   
  414e16:	ins    DWORD PTR es:[edi],dx
  414e17:	adc    edi,DWORD PTR [eax-0xa]
  414e1a:	es retf 0x6a01
  414e1e:	ret    
  414e1f:	mov    esp,0xde164497
  414e24:	mov    ds:0xa9becdd2,eax
  414e29:	adc    dh,BYTE PTR [edx+edi*8+0x78]
  414e2d:	add    BYTE PTR [eax-0x4d],0x5a
  414e31:	sub    al,0x99
  414e33:	scas   al,BYTE PTR es:[edi]
  414e34:	xor    DWORD PTR [edx+eax*2+0x457333ff],0x35
  414e3c:	repz push ss
  414e3e:	dec    esi
  414e3f:	and    ebx,DWORD PTR [edi+ebx*8+0x6]
  414e43:	cmp    BYTE PTR [edx-0x4c1b4c54],bh
  414e49:	mov    ebp,0x44508a03
  414e4e:	out    dx,al
  414e4f:	enter  0x8118,0x6a
  414e53:	dec    ecx
  414e54:	retf   
  414e55:	and    eax,0x144f4b87
  414e5a:	fsub   DWORD PTR [ecx-0x67]
  414e5d:	cmp    ch,cl
  414e5f:	jb     0x414ed5
  414e61:	and    BYTE PTR [eax+0x56],bl
  414e64:	fstp   TBYTE PTR [eax]
  414e66:	mov    dl,0x65
  414e68:	stos   DWORD PTR es:[edi],eax
  414e69:	je     0x414ead
  414e6b:	fimul  WORD PTR [ebx+0x377517ce]
  414e71:	scas   eax,DWORD PTR es:[edi]
  414e72:	shr    ch,1
  414e74:	ins    DWORD PTR es:[edi],dx
  414e75:	hlt    
  414e76:	sbb    edi,DWORD PTR [ecx+0x59]
  414e79:	mov    al,ds:0xc3bc0d60
  414e7e:	ret    
  414e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e80:	stc    
  414e81:	test   al,0x91
  414e83:	jmp    0x414e20
  414e85:	push   0xffffffbe
  414e87:	xchg   esp,eax
  414e88:	inc    edx
  414e89:	pop    ss
  414e8a:	or     edi,DWORD PTR [edi+0x6d]
  414e8d:	icebp  
  414e8e:	xchg   edx,eax
  414e8f:	es cs loop 0x414f12
  414e93:	jbe    0x414ef7
  414e95:	mov    dh,cl
  414e97:	scas   al,BYTE PTR es:[edi]
  414e98:	rcr    BYTE PTR [eax+0x132314a],1
  414e9e:	sbb    BYTE PTR [edi-0x2f473a9c],dl
  414ea4:	inc    eax
  414ea5:	ret    
  414ea6:	or     al,0x3a
  414ea8:	das    
  414ea9:	mov    dh,0x79
  414eab:	jbe    0x414eb8
  414ead:	retf   0x1592
  414eb0:	shl    BYTE PTR [ebx+esi*8-0x29],cl
  414eb4:	xor    al,0x1a
  414eb6:	fst    QWORD PTR ds:0x4ec61bb4
  414ebc:	mov    bl,0xb6
  414ebe:	pop    eax
  414ebf:	mov    ebx,0xbde434e6
  414ec4:	out    0x4b,eax
  414ec6:	cs clc 
  414ec8:	xor    bl,BYTE PTR [ebx-0x4e]
  414ecb:	sub    eax,0x38b978de
  414ed0:	scas   al,BYTE PTR es:[edi]
  414ed1:	ficomp DWORD PTR [eax-0x3b]
  414ed4:	das    
  414ed5:	std    
  414ed6:	cli    
  414ed7:	stos   BYTE PTR es:[edi],al
  414ed8:	and    cl,BYTE PTR ds:[edx-0x627f44da]
  414edf:	dec    esp
  414ee0:	and    BYTE PTR [eax-0x4ed4ff0e],0xac
  414ee7:	cmp    esp,DWORD PTR [edx*1+0x63400a1a]
  414eee:	stos   BYTE PTR es:[edi],al
  414eef:	gs ret 0xe40
  414ef3:	ds sbb dl,ah
  414ef6:	out    0xf5,eax
  414ef8:	mov    dl,BYTE PTR fs:[esp+ebx*2-0x22]
  414efd:	jle    0x414edd
  414eff:	jle    0x414f54
  414f01:	adc    eax,0xbff701cf
  414f06:	ins    BYTE PTR es:[edi],dx
  414f07:	cmp    esp,DWORD PTR [eax+0x62b5964]
  414f0d:	mov    bh,0xae
  414f0f:	mov    dh,0x8f
  414f11:	ins    DWORD PTR es:[edi],dx
  414f12:	mov    cl,0xba
  414f14:	ret    
  414f15:	ret    0x1306
  414f18:	mov    edx,esp
  414f1a:	outs   dx,BYTE PTR ds:[esi]
  414f1b:	outs   dx,BYTE PTR ds:[esi]
  414f1c:	cmc    
  414f1d:	mov    BYTE PTR [ecx+ebp*2-0x573356f0],cl
  414f24:	adc    cl,dh
  414f26:	jmp    0x414f6b
  414f28:	cmp    dl,cl
  414f2a:	or     BYTE PTR [edi],cl
  414f2c:	sub    al,BYTE PTR [esi-0x76d96ee2]
  414f32:	adc    al,BYTE PTR [eax-0x7d91138a]
  414f38:	sti    
  414f39:	repz fstp st(6)
  414f3c:	aas    
  414f3d:	pop    ebx
  414f3e:	xchg   ecx,eax
  414f3f:	jae    0x414f85
  414f41:	cli    
  414f42:	call   0x3bac:0x5ba5
  414f48:	lds    esp,FWORD PTR [esi]
  414f4a:	xlat   BYTE PTR ds:[ebx]
  414f4b:	push   ss
  414f4c:	dec    ebx
  414f4d:	pop    ebp
  414f4e:	sbb    BYTE PTR [eax+0x1a],ah
  414f51:	mov    edi,0xfaafe5aa
  414f56:	outs   dx,DWORD PTR ds:[esi]
  414f57:	sub    ebp,DWORD PTR [edi]
  414f59:	(bad)  
  414f5a:	cli    
  414f5b:	lods   al,BYTE PTR ds:[esi]
  414f5c:	ds (bad) 
  414f5e:	mov    DWORD PTR [esi],0xfb2cc991
  414f64:	adc    DWORD PTR [ecx+eiz*4],esi
  414f67:	hlt    
  414f68:	out    dx,eax
  414f69:	cmp    eax,0x1666772b
  414f6e:	xchg   ecx,eax
  414f6f:	stos   DWORD PTR es:[edi],eax
  414f70:	inc    edx
  414f71:	call   0x552b:0xc37dc74d
  414f78:	xchg   ecx,eax
  414f79:	xchg   ebp,eax
  414f7a:	mov    esi,0x9dbf8745
  414f7f:	fs loope 0x414f76
  414f82:	ss sbb eax,0x45fc5a23
  414f88:	sbb    DWORD PTR [eax-0x6d],0xffffffee
  414f8c:	fadd   st,st(6)
  414f8e:	aaa    
  414f8f:	cmp    dl,BYTE PTR [eax+0x74]
  414f92:	mov    es,WORD PTR [eax-0x54ae35aa]
  414f98:	mov    ds,WORD PTR [eax-0x6bd957e4]
  414f9e:	dec    esp
  414f9f:	repnz clc 
  414fa1:	stc    
  414fa2:	cmp    al,BYTE PTR [edi]
  414fa4:	jge    0x414fd1
  414fa6:	pop    ss
  414fa7:	mov    DWORD PTR [ecx-0x7e],edx
  414faa:	jl     0x414ffc
  414fac:	add    DWORD PTR [ebx],ebx
  414fae:	inc    eax
  414faf:	pop    eax
  414fb0:	lods   al,BYTE PTR ds:[esi]
  414fb1:	pop    edi
  414fb2:	sbb    al,0x63
  414fb4:	pop    esi
  414fb5:	je     0x414fb3
  414fb7:	daa    
  414fb8:	je     0x414f90
  414fba:	push   es
  414fbb:	jecxz  0x415002
  414fbd:	inc    ebp
  414fbe:	outs   dx,DWORD PTR ds:[esi]
  414fbf:	sbb    DWORD PTR [ebp+0x7bee7362],ecx
  414fc5:	rcl    esi,cl
  414fc7:	push   esi
  414fc8:	pop    ebx
  414fc9:	adc    ecx,ebp
  414fcb:	jmp    0xf758:0xaec64255
  414fd2:	ss dec eax
  414fd4:	test   al,0xe9
  414fd6:	xor    DWORD PTR [eax],eax
  414fd8:	fstp   DWORD PTR [ebx+ebx*1-0x77bfcf80]
  414fdf:	cdq    
  414fe0:	cmc    
  414fe1:	sub    al,0x75
  414fe3:	loop   0x414f78
  414fe5:	pop    esi
  414fe6:	iret   
  414fe7:	mov    eax,ds:0x12eb17b4
  414fec:	mov    ch,0x5
  414fee:	das    
  414fef:	ror    DWORD PTR [esi+0x2c30a0d0],cl
  414ff5:	cmp    eax,0x94cca82d
  414ffa:	pop    eax
  414ffb:	jae    0x414fc9
  414ffd:	mov    ds:0x3c5860d3,al
  415002:	ja     0x41505c
  415004:	jno    0x415057
  415006:	mov    ds,WORD PTR [esi+0x454ac1fa]
  41500c:	cmp    al,0xad
  41500e:	sbb    ah,al
  415010:	jo     0x414fec
  415012:	fiadd  WORD PTR [esi+0x2d]
  415015:	jne    0x41506e
  415017:	xchg   ecx,eax
  415018:	push   ebp
  415019:	stos   DWORD PTR es:[edi],eax
  41501a:	xchg   ebx,eax
  41501b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41501c:	aam    0x6b
  41501e:	inc    edi
  41501f:	adc    al,0x4
  415021:	xor    eax,0x5a68b01e
  415026:	mov    dl,0x77
  415028:	iret   
  415029:	jle    0x414fce
  41502b:	pop    ds
  41502c:	cmp    ah,ah
  41502e:	add    cl,cl
  415030:	shl    BYTE PTR [edi],0xa4
  415033:	in     eax,dx
  415034:	xchg   esi,eax
  415035:	pop    DWORD PTR [edi+0x3726e606]
  41503b:	shl    dh,1
  41503d:	mov    eax,ds:0x9ffdca2f
  415042:	nop
  415043:	call   0x3381:0x5ea30a05
  41504a:	pop    eax
  41504b:	(bad)
  41504e:	test   BYTE PTR ds:0xe43abd5b,0xc3
  415055:	xchg   edx,eax
  415056:	ins    DWORD PTR es:[edi],dx
  415057:	mov    esi,DWORD PTR [eax]
  415059:	jmp    0xbcdc:0xd27edbb6
  415060:	fsubr  QWORD PTR [edi-0x430dae55]
  415066:	popa   
  415067:	push   edi
  415068:	push   ecx
  415069:	inc    esp
  41506a:	aas    
  41506b:	in     al,dx
  41506c:	dec    ebx
  41506d:	and    ah,BYTE PTR [edi-0x3754c869]
  415073:	imul   ebp,DWORD PTR [edi+ecx*4],0xfbdd449a
  41507a:	sar    ebx,0x95
  41507d:	sbb    ch,BYTE PTR [esi+ecx*1+0x20]
  415081:	mov    al,0xa
  415083:	inc    ecx
  415084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415085:	sbb    al,0x1d
  415087:	jnp    0x415052
  415089:	jae    0x4150c6
  41508b:	es std 
  41508d:	adc    DWORD PTR [esi],ebp
  41508f:	pop    ds
  415090:	push   ebx
  415091:	in     al,dx
  415092:	push   ebx
  415093:	arpl   WORD PTR ds:0xdd957508,cx
  415099:	loope  0x4150c3
  41509b:	mov    ds:0x7bdd3cfa,eax
  4150a0:	aam    0x2d
  4150a2:	ficom  WORD PTR [eax+0xf74f724]
  4150a8:	dec    eax
  4150a9:	lea    esp,[ebx-0x7d]
  4150ac:	jecxz  0x41512d
  4150ae:	jecxz  0x415104
  4150b0:	pop    ecx
  4150b1:	push   ebp
  4150b2:	and    eax,0x526238d5
  4150b7:	ds je  0x415045
  4150ba:	inc    edx
  4150bb:	cld    
  4150bc:	adc    DWORD PTR [eax],edi
  4150be:	fwait
  4150bf:	imul   ecx,ebp,0xffffffcd
  4150c2:	popf   
  4150c3:	or     al,0x91
  4150c5:	aad    0xad
  4150c7:	sub    edx,DWORD PTR [esi]
  4150c9:	adc    al,0x3d
  4150cb:	iret   
  4150cc:	push   es
  4150cd:	adc    ecx,ecx
  4150cf:	pop    ebx
  4150d0:	jp     0x41510c
  4150d2:	(bad)  
  4150d3:	repnz lea edi,[edi-0x69]
  4150d7:	inc    ebp
  4150d8:	jmp    0xfb3b8bf7
  4150dd:	dec    esp
  4150de:	pop    esp
  4150df:	and    al,0x41
  4150e1:	push   ss
  4150e2:	inc    ecx
  4150e3:	mov    dh,0x32
  4150e5:	sbb    eax,0x31d3d96
  4150ea:	lods   al,BYTE PTR ds:[esi]
  4150eb:	(bad)  
  4150ec:	mov    ebp,0xfe6ee4e9
  4150f1:	stos   BYTE PTR es:[edi],al
  4150f2:	fistp  QWORD PTR [edx-0x9]
  4150f5:	mov    esp,0x964c3a27
  4150fa:	mov    esi,0xf49fc21e
  4150ff:	or     al,0x0
  415101:	add    bl,dl
  415103:	cmc    
  415104:	test   eax,0x5d216337
  415109:	inc    edx
  41510a:	mov    ah,0xae
  41510c:	lds    ecx,FWORD PTR [esi-0x60]
  41510f:	stc    
  415110:	sub    BYTE PTR [edi+edx*1+0x77d3694],0x99
  415118:	ss int 0xcf
  41511b:	jl     0x4150ec
  41511d:	jne    0x415157
  41511f:	xchg   edi,eax
  415120:	push   si
  415122:	mov    eax,ds:0x2739d9d5
  415127:	(bad)  
  415129:	mov    eax,0x748df021
  41512e:	xchg   esi,eax
  41512f:	das    
  415130:	xchg   ecx,eax
  415131:	inc    edx
  415132:	mov    DWORD PTR [eax-0x44e59b9],edi
  415138:	mul    bl
  41513a:	retf   0x44a
  41513d:	adc    al,0xa6
  41513f:	test   eax,0xc3ea1e81
  415144:	jnp    0x415123
  415146:	mov    edx,0x7b65375b
  41514b:	call   0x15ba4071
  415150:	dec    eax
  415151:	cmp    BYTE PTR [eax+0x534434e8],dh
  415157:	ins    BYTE PTR es:[edi],dx
  415158:	inc    edi
  415159:	push   ebp
  41515a:	xchg   ebx,eax
  41515b:	mov    DWORD PTR ds:0xdd5d136f,eax
  415161:	pop    esp
  415162:	out    dx,eax
  415163:	pop    ds
  415164:	(bad)  
  415165:	test   al,0xba
  415167:	jmp    0x4151da
  415169:	rol    BYTE PTR [ebp-0x7d4720bf],1
  41516f:	mov    eax,0xb61c9025
  415174:	add    dh,ch
  415176:	push   ebp
  415177:	sbb    eax,DWORD PTR [ebx-0xc23680]
  41517d:	mov    eax,0x8ceb847e
  415182:	pop    ss
  415183:	ds pushf 
  415185:	xchg   ebp,eax
  415186:	in     al,0xa5
  415188:	inc    ebx
  415189:	lea    esi,[edx-0x4f]
  41518c:	(bad)  
  41518d:	dec    esi
  41518e:	mov    cs:0xb2bb7cac,eax
  415194:	cmp    eax,0x81589c45
  415199:	out    0x1a,eax
  41519b:	jnp    0x415125
  41519d:	pop    esp
  41519e:	jg     0x41518f
  4151a0:	mov    bh,0xa2
  4151a2:	inc    edi
  4151a3:	int3   
  4151a4:	lods   al,BYTE PTR ds:[esi]
  4151a5:	dec    esp
  4151a6:	fistp  QWORD PTR [ebp+eiz*1-0x5]
  4151aa:	fsub   DWORD PTR [edx-0x45]
  4151ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ae:	rcl    ecx,cl
  4151b0:	fist   DWORD PTR ds:0x652999f
  4151b6:	mov    ds:0xdccebcc1,al
  4151bb:	sbb    eax,edi
  4151bd:	mov    BYTE PTR [ebp-0x44c62fae],ch
  4151c3:	push   ds
  4151c4:	xor    bh,bh
  4151c6:	adc    BYTE PTR [ebx+0x7eddc57c],0xb2
  4151cd:	pop    es
  4151ce:	fadd   QWORD PTR [eax]
  4151d0:	leave  
  4151d1:	and    BYTE PTR [esi],bh
  4151d3:	mov    cl,ch
  4151d5:	mov    ah,0xd7
  4151d7:	jl     0x4151d8
  4151d9:	cmp    ebx,DWORD PTR [esi+0x5bf6441e]
  4151df:	inc    ebx
  4151e0:	fwait
  4151e1:	pop    eax
  4151e2:	pop    esp
  4151e3:	mov    ecx,0xffb770c5
  4151e8:	clc    
  4151e9:	das    
  4151ea:	sub    esi,DWORD PTR [esi+0xfed113]
  4151f0:	popa   
  4151f1:	inc    ebx
  4151f2:	mov    ecx,0x34fef421
  4151f7:	pushf  
  4151f8:	add    BYTE PTR [eax-0x2b],0x62
  4151fc:	mov    edx,0xf160a6b
  415201:	cdq    
  415202:	and    al,0xfa
  415204:	pop    es
  415205:	sti    
  415206:	ss dec edi
  415208:	cli    
  415209:	bound  esp,QWORD PTR [eax]
  41520b:	repz mov dh,0x74
  41520e:	push   es
  41520f:	jbe    0x415199
  415211:	push   edx
  415212:	inc    ebp
  415213:	push   0xffffffb3
  415215:	pop    ss
  415216:	(bad)  
  415218:	je     0x415258
  41521a:	jbe    0x41521f
  41521c:	out    0xdf,al
  41521e:	cmp    al,0xda
  415220:	cmp    cl,al
  415222:	in     eax,0x5d
  415224:	clc    
  415225:	sti    
  415226:	mov    al,ds:0x40b0aad8
  41522b:	xor    ebp,DWORD PTR [ecx+ebp*2-0x24]
  41522f:	and    bl,al
  415231:	ins    BYTE PTR es:[edi],dx
  415232:	pop    ebx
  415233:	repnz xchg di,ax
  415236:	aaa    
  415237:	mov    ebp,ds
  415239:	or     al,BYTE PTR [esi-0x4e0b6ae5]
  41523f:	int    0x7b
  415241:	and    al,0x3c
  415243:	rcl    BYTE PTR ds:0x6bcb4d73,cl
  415249:	inc    edx
  41524a:	or     eax,0x820561d1
  41524f:	inc    ecx
  415250:	inc    ebx
  415251:	mov    esi,0xaabc6662
  415256:	sub    BYTE PTR [edx+0x53],ah
  415259:	sbb    bl,BYTE PTR [ebx+0x29]
  41525c:	iret   
  41525d:	xchg   edi,eax
  41525e:	fnsave [ebp+0x3016ae25]
  415264:	test   eax,0x485eb7cc
  415269:	mov    ecx,0xec6f55e2
  41526e:	(bad)  
  41526f:	mov    ecx,DWORD PTR [ebx+0x6c]
  415272:	xor    BYTE PTR [eax-0x30aaad8b],bl
  415278:	repz cmp ch,BYTE PTR [edx]
  41527b:	push   ebx
  41527c:	jae    0x415263
  41527e:	stos   DWORD PTR es:[edi],eax
  41527f:	xchg   ecx,eax
  415280:	fdiv   DWORD PTR [eax+0x75]
  415283:	lods   eax,DWORD PTR ds:[esi]
  415284:	mul    DWORD PTR [ebp+0x7c895b54]
  41528a:	add    BYTE PTR ds:0xed10b137,0x3f
  415291:	out    dx,al
  415292:	ds lock push cs
  415295:	ins    BYTE PTR es:[edi],dx
  415296:	push   esi
  415297:	inc    eax
  415298:	add    BYTE PTR [ecx],0x98
  41529b:	and    edx,DWORD PTR [ecx]
  41529d:	arpl   bp,sp
  41529f:	xor    al,0x2e
  4152a1:	cmp    ecx,esp
  4152a3:	fwait
  4152a4:	sub    bl,cl
  4152a6:	test   al,0xa1
  4152a8:	rcr    edi,cl
  4152aa:	ja     0x41526b
  4152ac:	push   ebx
  4152ad:	rol    DWORD PTR [ebx+eax*1-0x7d],0x88
  4152b2:	js     0x415239
  4152b4:	push   ds
  4152b5:	dec    ebp
  4152b6:	jecxz  0x4152dd
  4152b8:	mov    eax,ds:0xa280aba8
  4152bd:	dec    esp
  4152be:	cdq    
  4152bf:	pop    ecx
  4152c0:	imul   edi,DWORD PTR [esi+0x72834768],0x76030528
  4152ca:	and    eax,0x8e8231e0
  4152cf:	not    DWORD PTR [esp+ebx*8+0x2b]
  4152d3:	xlat   BYTE PTR ds:[ebx]
  4152d4:	aad    0xaf
  4152d6:	call   DWORD PTR ds:0x417014
  4152dc:	mov    DWORD PTR [ebp-0x2c],eax
  4152df:	movzx  eax,WORD PTR [ebp-0x2c]
  4152e3:	cmp    eax,0x539
  4152e8:	jne    0x415319
  4152ea:	mov    DWORD PTR [ebp-0x14],0xe0d
  4152f1:	lea    ecx,[ebp-0x28]
  4152f4:	push   ecx
  4152f5:	call   DWORD PTR ds:0x417018
  4152fb:	mov    DWORD PTR [ebp-0x60],eax
  4152fe:	mov    DWORD PTR [ebp-0x54],0x3a
  415305:	mov    BYTE PTR [ebp-0x34],0x0
  415309:	mov    DWORD PTR [ebp-0x8],0xb7426bd7
  415310:	mov    DWORD PTR [ebp-0x68],0x122d67
  415317:	jmp    0x41532e
  415319:	mov    BYTE PTR ds:0x417038,0x0
  415320:	push   0x42cfc8
  415325:	call   DWORD PTR ds:0x417018
  41532b:	mov    DWORD PTR [ebp-0x2c],eax
  41532e:	push   0x0
  415330:	call   DWORD PTR ds:0x417018
  415336:	mov    DWORD PTR [ebp-0x2c],eax
  415339:	push   DWORD PTR ds:0x417018
  41533f:	pop    edx
  415340:	mov    DWORD PTR [ebp-0x6c],edx
  415343:	lea    edx,[ebp-0x40]
  415346:	push   edx
  415347:	mov    eax,DWORD PTR [ebp-0x60]
  41534a:	push   eax
  41534b:	call   DWORD PTR ds:0x417024
  415351:	mov    DWORD PTR [ebp-0x44],eax
  415354:	push   DWORD PTR [ebp-0x30]
  415357:	push   0x1000
  41535c:	mov    eax,DWORD PTR [ebp-0x14]
  41535f:	add    eax,0x23
  415362:	add    eax,0x23
  415365:	push   eax
  415366:	xor    eax,eax
  415368:	push   eax
  415369:	mov    ecx,DWORD PTR [ebp-0x44]
  41536c:	call   ecx
  41536e:	push   eax
  41536f:	pop    ecx
  415370:	mov    DWORD PTR [ebp-0x4],ecx
  415373:	mov    ecx,DWORD PTR [ebp-0x68]
  415376:	sub    ecx,0xdae0b
  41537c:	mov    DWORD PTR [ebp-0x68],ecx
  41537f:	cmp    DWORD PTR [ebp-0x4],0x0
  415383:	jne    0x41539d
  415385:	push   0x0
  415387:	push   0x0
  415389:	call   0x416a5c
  41538e:	push   0x0
  415390:	call   DWORD PTR ds:0x41702c
  415396:	mov    BYTE PTR ds:0x447f40,0x0
  41539d:	mov    edx,DWORD PTR [ebp-0x4]
  4153a0:	add    edx,DWORD PTR [ebp-0x14]
  4153a3:	mov    eax,DWORD PTR [ebp-0x8]
  4153a6:	mov    DWORD PTR [edx],eax
  4153a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4153ab:	add    ecx,DWORD PTR [ebp-0x54]
  4153ae:	mov    DWORD PTR [ebp-0x5c],ecx
  4153b1:	mov    edx,DWORD PTR ds:0x417024
  4153b7:	mov    DWORD PTR [ebp-0x4c],edx
  4153ba:	mov    eax,DWORD PTR [ebp-0x4]
  4153bd:	add    eax,DWORD PTR [ebp-0x14]
  4153c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4153c3:	mov    DWORD PTR [eax+0x4],ecx
  4153c6:	mov    edx,DWORD PTR [ebp-0x4]
  4153c9:	add    edx,DWORD PTR [ebp-0x14]
  4153cc:	mov    DWORD PTR [ebp-0xc],edx
  4153cf:	cmp    DWORD PTR [ebp-0x68],0x0
  4153d3:	jbe    0x4153f0
  4153d5:	mov    eax,DWORD PTR [ebp-0xc]
  4153d8:	push   eax
  4153d9:	mov    ecx,DWORD PTR [ebp-0x14]
  4153dc:	push   ecx
  4153dd:	mov    edx,DWORD PTR [ebp-0x2c]
  4153e0:	add    edx,DWORD PTR [ebp-0x68]
  4153e3:	push   edx
  4153e4:	mov    eax,DWORD PTR [ebp-0x4]
  4153e7:	push   eax
  4153e8:	call   0x41696e
  4153ed:	add    esp,0x10
  4153f0:	cmp    DWORD PTR [ebp-0x5c],0x0
  4153f4:	je     0x415404
  4153f6:	push   DWORD PTR [ebp-0x4c]
  4153f9:	push   DWORD PTR [ebp-0x6c]
  4153fc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4153ff:	push   ecx
  415400:	jmp    ecx
  415402:	jmp    0x41540a
  415404:	mov    ecx,DWORD PTR [ebp+0x8]
  415407:	mov    DWORD PTR [ebp-0x18],ecx
  41540a:	mov    eax,0x1
  41540f:	mov    esp,ebp
  415411:	pop    ebp
  415412:	ret    
  415413:	push   ebp
  415414:	mov    ebp,esp
  415416:	pop    ebp
  415417:	ret    
  415418:	push   ebp
  415419:	mov    ebp,esp
  41541b:	sub    esp,0x54
  41541e:	mov    DWORD PTR [ebp-0x34],0x0
  415425:	mov    DWORD PTR [ebp-0x4],0x0
  41542c:	mov    DWORD PTR [ebp-0x50],0x0
  415433:	mov    DWORD PTR [ebp-0x4c],0x0
  41543a:	mov    DWORD PTR [ebp-0x30],0x0
  415441:	lea    eax,[ebp-0x38]
  415444:	push   eax
  415445:	push   0x8
  415447:	call   DWORD PTR ds:0x417020
  41544d:	call   DWORD PTR ds:0x417014
  415453:	mov    DWORD PTR [ebp-0x30],eax
  415456:	lea    ecx,[ebp-0x48]
  415459:	push   ecx
  41545a:	call   DWORD PTR ds:0x417010
  415460:	mov    edx,DWORD PTR [ebp-0x34]
  415463:	push   edx
  415464:	call   0x415493
  415469:	add    esp,0x4
  41546c:	call   0x41695f
  415471:	mov    DWORD PTR [ebp-0x54],0x0
  415478:	jmp    0x415483
  41547a:	mov    eax,DWORD PTR [ebp-0x54]
  41547d:	add    eax,0x1
  415480:	mov    DWORD PTR [ebp-0x54],eax
  415483:	cmp    DWORD PTR [ebp-0x54],0x64
  415487:	jae    0x41548b
  415489:	jmp    0x41547a
  41548b:	xor    eax,eax
  41548d:	mov    esp,ebp
  41548f:	pop    ebp
  415490:	ret    0x10
  415493:	push   ebp
  415494:	mov    ebp,esp
  415496:	sub    esp,0x3c
  415499:	push   esi
  41549a:	mov    DWORD PTR [ebp-0x3c],0x0
  4154a1:	mov    DWORD PTR [ebp-0x38],0x0
  4154a8:	mov    DWORD PTR [ebp-0x30],0x0
  4154af:	mov    DWORD PTR [ebp-0x24],0x0
  4154b6:	mov    DWORD PTR [ebp-0x1c],0x0
  4154bd:	mov    DWORD PTR [ebp-0x28],0x0
  4154c4:	mov    DWORD PTR [ebp-0x2c],0x448fc8
  4154cb:	mov    DWORD PTR [ebp-0x24],0xb39a8995
  4154d2:	mov    DWORD PTR [ebp-0x34],0x0
  4154d9:	mov    eax,DWORD PTR [ebp-0x24]
  4154dc:	mov    DWORD PTR [ebp-0x20],eax
  4154df:	mov    DWORD PTR [ebp-0x4],0x0
  4154e6:	mov    ecx,DWORD PTR ds:0x417014
  4154ec:	mov    DWORD PTR [ebp-0x4],ecx
  4154ef:	push   0x0
  4154f1:	push   0x4e
  4154f3:	push   0x1e
  4154f5:	push   0x0
  4154f7:	push   0xffffffff
  4154f9:	call   DWORD PTR ds:0x41701c
  4154ff:	test   eax,eax
  415501:	je     0x41693e
  415507:	out    0xb3,al
  415509:	adc    eax,DWORD PTR [eax+0x68f685c4]
  41550f:	add    eax,0xe992f283
  415514:	push   esp
  415515:	jmp    0x86088d9d
  41551a:	imul   BYTE PTR [eax+0x1]
  41551d:	xor    edx,0xffffffd2
  415520:	push   ss
  415521:	stos   DWORD PTR es:[edi],eax
  415522:	jmp    0x8608d5aa
  415527:	imul   BYTE PTR [eax+0x1]
  41552a:	xor    edx,0xffffff92
  41552d:	push   ss
  41552e:	stos   DWORD PTR es:[edi],eax
  41552f:	jmp    0x8608d5b7
  415534:	imul   BYTE PTR [eax+0x1]
  415537:	xor    edx,0xffffff92
  41553a:	push   ss
  41553b:	stos   DWORD PTR es:[edi],eax
  41553c:	jmp    0x8608d5c4
  415541:	imul   BYTE PTR [eax+0x9]
  415544:	xor    dl,0x92
  415547:	sbb    BYTE PTR [ebx+edx*2-0x738c7f73],dh
  41554e:	cmp    ecx,DWORD PTR [ecx-0x47]
  415551:	cmp    BYTE PTR [esi-0x7e00c8a1],0xea
  415558:	repz out 0xf5,eax
  41555b:	test   BYTE PTR [edi],al
  41555d:	data16 icebp 
  41555f:	xchg   ebx,eax
  415560:	push   DWORD PTR [esi]
  415562:	enter  0xed88,0xee
  415566:	test   al,0xf1
  415568:	(bad)  
  415569:	or     ah,BYTE PTR [ebx+eiz*4-0x80]
  41556d:	out    0x78,eax
  41556f:	mov    eax,DWORD PTR [eax-0x357c5f13]
  415575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415576:	dec    eax
  415577:	ins    BYTE PTR es:[edi],dx
  415578:	in     al,dx
  415579:	xchg   esi,eax
  41557a:	idiv   DWORD PTR [eax]
  41557c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41557d:	in     al,0x89
  41557f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415580:	mov    DWORD PTR [ebp-0x7cfe970a],0xbdd9e8f2
  41558a:	addr16 mov ebp,0xc858bf2e
  415590:	(bad)  
  415591:	jns    0x4155f1
  415593:	int3   
  415594:	cmp    al,0x6e
  415596:	jbe    0x415564
  415598:	mov    al,0x66
  41559a:	sbb    ah,BYTE PTR [edi-0x5923efa8]
  4155a0:	rol    DWORD PTR [eax-0x35],0x14
  4155a4:	inc    edi
  4155a5:	sti    
  4155a6:	pop    ebp
  4155a7:	loop   0x41555f
  4155a9:	and    eax,0x8a2d14b5
  4155ae:	dec    edi
  4155af:	inc    edi
  4155b0:	jae    0x4155ec
  4155b2:	pop    esi
  4155b3:	mov    ebx,0x5f2bfd69
  4155b8:	xlat   BYTE PTR ds:[ebx]
  4155b9:	js     0x4155ea
  4155bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155bc:	mov    eax,0x56b434d3
  4155c1:	sub    al,0x58
  4155c3:	rol    esi,cl
  4155c5:	jns    0x415625
  4155c7:	int3   
  4155c8:	cmp    al,0x6f
  4155ca:	jbe    0x41556c
  4155cc:	sub    al,0xf8
  4155ce:	sbb    al,BYTE PTR [edi+0x78]
  4155d1:	add    bl,ah
  4155d3:	mov    bl,0x5c
  4155d5:	jmp    0xbe5d:0x54da8ecb
  4155dc:	sub    ecx,DWORD PTR [esi+0x10b024b5]
  4155e2:	dec    edi
  4155e3:	sub    DWORD PTR ds:0xf4a55e91,eax
  4155e9:	pusha  
  4155ea:	sub    edx,DWORD PTR [edi-0x51]
  4155ed:	sti    
  4155ee:	das    
  4155ef:	sar    BYTE PTR [edi-0x38],0x81
  4155f3:	mov    ebp,0xf658bf2e
  4155f8:	push   0x92f28301
  4155fd:	push   ss
  4155fe:	stos   DWORD PTR es:[edi],eax
  4155ff:	jmp    0x8608d687
  415604:	imul   BYTE PTR [eax+0x1]
  415607:	xor    edx,0xffffff92
  41560a:	push   ss
  41560b:	stos   DWORD PTR es:[edi],eax
  41560c:	jmp    0xc0d8d694
  415611:	imul   BYTE PTR [eax+0x4d]
  415614:	xor    cl,0x92
  415617:	jo     0x4155fe
  415619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41561a:	int3   
  41561b:	add    bh,0x85
  41561e:	imul   BYTE PTR [eax+0x1]
  415621:	xor    edx,0x72
  415624:	push   ss
  415625:	test   eax,0xcd8188e8
  41562a:	test   esi,esi
  41562c:	mov    al,BYTE PTR ds:0x1016f283
  415632:	stos   DWORD PTR es:[edi],eax
  415633:	jmp    0xc708d6bb
  415638:	dec    ebx
  415639:	push   0x92e28301
  41563e:	push   ss
  41563f:	stos   DWORD PTR es:[edi],eax
  415640:	jmp    0x8608d6cb
  415645:	mov    dh,0x68
  415647:	add    DWORD PTR [ebx-0x56e96d0e],edx
  41564d:	jmp    0x8508dbd5
  415652:	imul   BYTE PTR [eax+0x1]
  415655:	xor    edx,0xffffff97
  415658:	push   ss
  415659:	stos   BYTE PTR es:[edi],al
  41565a:	jmp    0x8608d6e2
  41565f:	neg    BYTE PTR [eax+0xd]
  415662:	xor    edx,0xffffff96
  415665:	push   ss
  415666:	stos   DWORD PTR es:[edi],eax
  415667:	jecxz  0x4156e6
  415669:	test   bh,al
  41566b:	xchg   esi,esi
  41566d:	sub    BYTE PTR [eax+0x1682f283],al
  415673:	stos   DWORD PTR es:[edi],eax
  415674:	stc    
  415675:	add    DWORD PTR [eax+0x68e685c7],0x1
  41567c:	xchg   ebx,eax
  41567d:	repnz xchg edx,eax
  41567f:	push   ss
  415680:	stos   DWORD PTR es:[edi],eax
  415681:	jmp    0x8608e709
  415686:	imul   BYTE PTR [eax+0x1]
  415689:	xor    edx,0xffffff92
  41568c:	push   ss
  41568d:	stos   DWORD PTR es:[edi],eax
  41568e:	jmp    0x860cd71a
  415693:	scas   eax,DWORD PTR es:[edi]
  415694:	imul   eax,DWORD PTR [ecx],0xffffff83
  415697:	repnz push edx
  415699:	sbb    eax,0x80bcbcab
  41569e:	mov    DWORD PTR [ebp-0x7cfe970a],0xab1692f2
  4156a8:	jmp    0x8608d730
  4156ad:	imul   BYTE PTR [eax+0x1]
  4156b0:	mov    ds:0xab0e92fe,eax
  4156b5:	jmp    0x8608d73d
  4156ba:	imul   BYTE PTR [eax+0x1]
  4156bd:	xor    edx,0xffffff92
  4156c0:	push   ss
  4156c1:	stos   DWORD PTR es:[edi],eax
  4156c2:	jmp    0x8608d74a
  4156c7:	imul   BYTE PTR [eax+0x1]
  4156ca:	xor    edx,0xffffff92
  4156cd:	push   ss
  4156ce:	stos   DWORD PTR es:[edi],eax
  4156cf:	jmp    0x8608d757
  4156d4:	imul   BYTE PTR [eax+0x1]
  4156d7:	xor    edx,0xffffff92
  4156da:	push   ss
  4156db:	stos   DWORD PTR es:[edi],eax
  4156dc:	jmp    0x8608d764
  4156e1:	imul   BYTE PTR [eax+0x1]
  4156e4:	xor    edx,0xffffff92
  4156e7:	push   ss
  4156e8:	stos   DWORD PTR es:[edi],eax
  4156e9:	jmp    0x8608d771
  4156ee:	imul   BYTE PTR [eax+0x1]
  4156f1:	xor    edx,0xffffff92
  4156f4:	push   ss
  4156f5:	stos   DWORD PTR es:[edi],eax
  4156f6:	jmp    0x8608d77e
  4156fb:	imul   BYTE PTR [eax+0x1]
  4156fe:	xor    edx,0xffffff92
  415701:	push   ss
  415702:	stos   DWORD PTR es:[edi],eax
  415703:	jmp    0xac08d78b
  415708:	or     BYTE PTR ds:0x92f2f779,0x16
  41570f:	stos   DWORD PTR es:[edi],eax
  415710:	pop    ecx
  415711:	mov    BYTE PTR [eax+0x68f695c7],al
  415717:	add    ebp,esp
  415719:	not    BYTE PTR [edx-0x7c1650ea]
  41571f:	rol    BYTE PTR [edx+0x4e3cc4c6],1
  415725:	xor    edx,0xffffff92
  415728:	push   ss
  415729:	stos   DWORD PTR es:[edi],eax
  41572a:	jmp    0x6608d7d2
  41572f:	fcomp  DWORD PTR [edx]
  415731:	jb     0x415724
  415733:	xchg   ecx,eax
  415734:	xchg   edx,eax
  415735:	push   ss
  415736:	stos   DWORD PTR es:[edi],eax
  415737:	jmp    0x8608d81f
  41573c:	arpl   WORD PTR ss:[ecx],ax
  41573f:	and    DWORD PTR [eax-0x7c54e96e],0xffffff87
  415746:	add    bh,0x85
  415749:	imul   BYTE PTR [eax+0x1]
  41574c:	xor    edx,0xffffff92
  41574f:	push   ss
  415750:	stos   DWORD PTR es:[edi],eax
  415751:	jmp    0x8608f7d9
  415756:	push   ss
  415757:	inc    esi
  415758:	jae    0x415740
  41575a:	sahf   
  41575b:	std    
  41575c:	jne    0x415709
  41575e:	jmp    0x8608d9e6
  415763:	test   BYTE PTR [eax+0xd],0x83
  415767:	repnz nop
  415769:	push   ss
  41576a:	stos   DWORD PTR es:[edi],eax
  41576b:	jmp    0x8608dbaf
  415770:	imul   BYTE PTR [eax+0x1]
  415773:	xor    edx,0xffffff92
  415776:	push   ss
  415777:	stos   DWORD PTR es:[edi],eax
  415778:	jmp    0x85c8d800
  41577d:	imul   BYTE PTR [eax-0x6d0d7cff]
  415783:	push   ss
  415784:	stos   DWORD PTR es:[edi],eax
  415785:	jmp    0x8608d80d
  41578a:	imul   BYTE PTR [eax+0x1]
  41578d:	xor    edx,0xffffff92
  415790:	push   ss
  415791:	stos   DWORD PTR es:[edi],eax
  415792:	jmp    0x8608d81a
  415797:	imul   BYTE PTR [eax+0x1]
  41579a:	xor    edx,0xffffff92
  41579d:	push   ss
  41579e:	stos   DWORD PTR es:[edi],eax
  41579f:	jmp    0x8608d827
  4157a4:	imul   BYTE PTR [eax+0x1]
  4157a7:	xor    edx,0xffffff92
  4157aa:	push   ss
  4157ab:	stos   DWORD PTR es:[edi],eax
  4157ac:	jmp    0x8608d834
  4157b1:	imul   BYTE PTR [eax+0x1]
  4157b4:	xor    edx,0xffffff92
  4157b7:	push   ss
  4157b8:	stos   DWORD PTR es:[edi],eax
  4157b9:	jmp    0x8608d841
  4157be:	imul   BYTE PTR [eax+0x1]
  4157c1:	xor    edx,0xffffff92
  4157c4:	push   ss
  4157c5:	stos   DWORD PTR es:[edi],eax
  4157c6:	jmp    0x8608d84e
  4157cb:	imul   BYTE PTR [eax+0x1]
  4157ce:	xor    edx,0xffffff92
  4157d1:	push   ss
  4157d2:	stos   DWORD PTR es:[edi],eax
  4157d3:	jmp    0x8608d85b
  4157d8:	imul   BYTE PTR [eax+0x1]
  4157db:	xor    edx,0xffffff92
  4157de:	push   ss
  4157df:	stos   DWORD PTR es:[edi],eax
  4157e0:	jmp    0x8608d868
  4157e5:	imul   BYTE PTR [eax+0x1]
  4157e8:	xor    edx,0xffffff92
  4157eb:	push   ss
  4157ec:	stos   DWORD PTR es:[edi],eax
  4157ed:	jmp    0x8608d875
  4157f2:	imul   BYTE PTR [eax+0x1]
  4157f5:	xor    edx,0xffffff92
  4157f8:	push   ss
  4157f9:	stos   DWORD PTR es:[edi],eax
  4157fa:	jmp    0x8608d882
  4157ff:	imul   BYTE PTR [eax+0x1]
  415802:	xor    edx,0xffffff92
  415805:	push   ss
  415806:	stos   DWORD PTR es:[edi],eax
  415807:	jmp    0x8608d88f
  41580c:	imul   BYTE PTR [eax+0x1]
  41580f:	xor    edx,0xffffff92
  415812:	push   ss
  415813:	stos   DWORD PTR es:[edi],eax
  415814:	jmp    0x8608d89c
  415819:	imul   BYTE PTR [eax+0x1]
  41581c:	xor    edx,0xffffff92
  41581f:	push   ss
  415820:	stos   DWORD PTR es:[edi],eax
  415821:	jmp    0x8608d8a9
  415826:	imul   BYTE PTR [eax+0x1]
  415829:	xor    edx,0xffffff92
  41582c:	push   ss
  41582d:	stos   DWORD PTR es:[edi],eax
  41582e:	jmp    0x8608d8b6
  415833:	imul   BYTE PTR [eax+0x1]
  415836:	xor    edx,0xffffff92
  415839:	push   ss
  41583a:	stos   DWORD PTR es:[edi],eax
  41583b:	jmp    0x8608d8c3
  415840:	imul   BYTE PTR [eax+0x1]
  415843:	xor    edx,0xffffff92
  415846:	push   ss
  415847:	stos   DWORD PTR es:[edi],eax
  415848:	jmp    0x8608d8d0
  41584d:	imul   BYTE PTR [eax+0x1]
  415850:	xor    edx,0xffffff92
  415853:	push   ss
  415854:	stos   DWORD PTR es:[edi],eax
  415855:	jmp    0x8608d8dd
  41585a:	imul   BYTE PTR [eax+0x1]
  41585d:	xor    edx,0xffffff92
  415860:	push   ss
  415861:	stos   DWORD PTR es:[edi],eax
  415862:	jmp    0x8608d8ea
  415867:	imul   BYTE PTR [eax+0x1]
  41586a:	xor    edx,0xffffff92
  41586d:	push   ss
  41586e:	stos   DWORD PTR es:[edi],eax
  41586f:	jmp    0x8608d8f7
  415874:	imul   BYTE PTR [eax+0x1]
  415877:	xor    edx,0xffffff92
  41587a:	push   ss
  41587b:	stos   DWORD PTR es:[edi],eax
  41587c:	jmp    0x8608d904
  415881:	imul   BYTE PTR [eax+0x1]
  415884:	xor    edx,0xffffff92
  415887:	push   ss
  415888:	stos   DWORD PTR es:[edi],eax
  415889:	jmp    0x8608d911
  41588e:	imul   BYTE PTR [eax+0x1]
  415891:	xor    edx,0xffffff92
  415894:	push   ss
  415895:	stos   DWORD PTR es:[edi],eax
  415896:	jmp    0x8608d91e
  41589b:	imul   BYTE PTR [eax+0x1]
  41589e:	xor    edx,0xffffff92
  4158a1:	push   ss
  4158a2:	stos   DWORD PTR es:[edi],eax
  4158a3:	jmp    0x8608d92b
  4158a8:	imul   BYTE PTR [eax+0x1]
  4158ab:	xor    edx,0xffffff92
  4158ae:	push   ss
  4158af:	stos   DWORD PTR es:[edi],eax
  4158b0:	jmp    0x8608d938
  4158b5:	imul   BYTE PTR [eax+0x1]
  4158b8:	xor    edx,0xffffff92
  4158bb:	push   ss
  4158bc:	stos   DWORD PTR es:[edi],eax
  4158bd:	jmp    0x8608d945
  4158c2:	imul   BYTE PTR [eax+0x1]
  4158c5:	xor    edx,0xffffff92
  4158c8:	push   ss
  4158c9:	stos   DWORD PTR es:[edi],eax
  4158ca:	jmp    0x8608d952
  4158cf:	imul   BYTE PTR [eax+0x1]
  4158d2:	xor    edx,0xffffff92
  4158d5:	push   ss
  4158d6:	stos   DWORD PTR es:[edi],eax
  4158d7:	jmp    0x8608d95f
  4158dc:	imul   BYTE PTR [eax+0x1]
  4158df:	xor    edx,0xffffff92
  4158e2:	push   ss
  4158e3:	stos   DWORD PTR es:[edi],eax
  4158e4:	jmp    0x8608d96c
  4158e9:	imul   BYTE PTR [eax+0x1]
  4158ec:	xor    edx,0xffffff92
  4158ef:	push   ss
  4158f0:	stos   DWORD PTR es:[edi],eax
  4158f1:	jmp    0x8608d979
  4158f6:	imul   BYTE PTR [eax+0x1]
  4158f9:	xor    edx,0xffffff92
  4158fc:	push   ss
  4158fd:	stos   DWORD PTR es:[edi],eax
  4158fe:	jmp    0x8608d986
  415903:	imul   BYTE PTR [eax+0x1]
  415906:	sbb    DWORD PTR [ecx-0x24],0x1d
  41590a:	stos   DWORD PTR es:[edi],eax
  41590b:	mov    BYTE PTR [ebx-0x97a2880],0x42
  415912:	mov    ds:0x592f8659,eax
  415917:	cwde   
  415918:	sti    
  415919:	test   al,0xbb
  41591b:	cli    
  41591c:	push   0x43
  41591e:	cli    
  41591f:	pop    es
  415920:	retf   0x63ab
  415923:	retf   0xfa18
  415926:	les    edi,FWORD PTR [ebx+0x2a7d5d2e]
  41592c:	jo     0x41596f
  41592e:	or     ch,bl
  415930:	xor    ebp,0xa4c05736
  415936:	call   0xa7122c50
  41593b:	mov    cl,0x9b
  41593d:	sahf   
  41593e:	sub    edi,esi
  415940:	jle    0x4158e2
  415942:	(bad)  
  415943:	mov    ebp,0xc44d6ab5
  415948:	sub    cl,BYTE PTR [esi]
  41594a:	shl    esp,0xd7
  41594d:	xor    BYTE PTR [esi+0x33],dh
  415950:	pushf  
  415951:	loope  0x415979
  415953:	lock rcr DWORD PTR [ebp+0x76bbf10e],1
  41595a:	jae    0x415986
  41595c:	std    
  41595d:	sub    BYTE PTR [ebx+0x23],dh
  415960:	std    
  415961:	sub    DWORD PTR ds:0x353c3774,ebx
  415967:	bound  ebx,QWORD PTR [ebx]
  415969:	loopne 0x415942
  41596b:	ret    
  41596c:	ins    BYTE PTR es:[edi],dx
  41596d:	inc    ecx
  41596e:	jbe    0x415944
  415970:	imul   BYTE PTR [ebx-0x2a446bbc]
  415976:	jo     0x4159e9
  415978:	mov    bh,BYTE PTR [ecx]
  41597a:	sbb    DWORD PTR [ebx+0x21b4f7e7],ebx
  415980:	int    0xa0
  415982:	adc    ah,BYTE PTR [ebx]
  415984:	push   ds
  415985:	xchg   esp,eax
  415986:	adc    ebx,DWORD PTR [eax]
  415988:	pusha  
  415989:	gs mov dh,0x43
  41598c:	cmp    eax,DWORD PTR [edx+0x71]
  41598f:	sbb    eax,0x3ed0e3b5
  415994:	lahf   
  415995:	pop    es
  415996:	addr16 aad 0x9f
  415999:	push   edx
  41599a:	fnstsw WORD PTR [eax+eiz*4+0x7bdaf35d]
  4159a1:	repnz push esp
  4159a3:	(bad)  
  4159a4:	mov    esp,0x78cbed0c
  4159a9:	fmul   DWORD PTR ds:0xab9b394c
  4159af:	dec    ebp
  4159b0:	push   ds
  4159b1:	inc    edi
  4159b2:	and    dh,bh
  4159b4:	popf   
  4159b5:	inc    edx
  4159b6:	popf   
  4159b7:	cli    
  4159b8:	inc    ecx
  4159b9:	ffree  st(1)
  4159bb:	imul   esi,DWORD PTR [edi],0x6e9e1f1a
  4159c1:	mov    al,ds:0x5e22f7ec
  4159c7:	xor    DWORD PTR [edx-0x59809e9c],esp
  4159cd:	hlt    
  4159ce:	cli    
  4159cf:	or     BYTE PTR [ebx+0x1f2f2d1a],ch
  4159d5:	enter  0x48d3,0x3
  4159d9:	pop    ss
  4159da:	arpl   WORD PTR [edx-0x1135fbdd],cx
  4159e0:	add    al,0x6d
  4159e2:	and    ebp,esp
  4159e4:	push   es
  4159e5:	or     ch,bh
  4159e7:	pushf  
  4159e8:	mov    bl,BYTE PTR [edx-0x3f]
  4159eb:	cs or  eax,0x9cada41e
  4159f1:	jb     0x415a0f
  4159f3:	mov    cs,WORD PTR [ebp-0x3f]
  4159f6:	add    eax,0x87c3fa5c
  4159fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159fc:	mov    ebx,0xdc3e9924
  415a01:	dec    ebp
  415a02:	les    ebx,FWORD PTR [eax+esi*4+0x13]
  415a06:	mov    al,ds:0x19efc432
  415a0b:	or     al,0x7d
  415a0d:	and    eax,DWORD PTR [edx+edi*8]
  415a10:	sub    BYTE PTR [edx-0x3b],0x45
  415a14:	push   ebx
  415a15:	(bad)  
  415a16:	ret    
  415a17:	push   dx
  415a19:	xchg   edx,eax
  415a1a:	fadd   QWORD PTR [ecx-0x4f416fdb]
  415a20:	int3   
  415a21:	sub    al,0xc3
  415a23:	dec    esp
  415a24:	mov    ah,0x9f
  415a26:	sub    eax,0x163778a8
  415a2b:	push   ebp
  415a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a2d:	test   BYTE PTR [edi],cl
  415a2f:	loope  0x4159f1
  415a31:	inc    ebx
  415a32:	inc    edx
  415a33:	sti    
  415a34:	mov    bl,0xe7
  415a36:	lea    ebx,[ecx-0x39]
  415a39:	sbb    cl,BYTE PTR [ebp-0x7a9c6160]
  415a3f:	or     DWORD PTR [esi-0x7a],0x71710aef
  415a46:	sub    edx,ecx
  415a48:	and    BYTE PTR [ebp-0x1addcd43],0x6
  415a4f:	mov    ebp,0x27385064
  415a54:	mov    cl,0x6b
  415a56:	and    eax,DWORD PTR [ebp+0x41]
  415a59:	sbb    DWORD PTR [ecx+eiz*2],edi
  415a5c:	fimul  WORD PTR [ebx]
  415a5e:	pusha  
  415a5f:	fadd   DWORD PTR [ecx]
  415a61:	pop    ebx
  415a62:	scas   al,BYTE PTR es:[edi]
  415a63:	inc    edi
  415a64:	mov    WORD PTR ds:0x73bbe7cc,cs
  415a6a:	jno    0x415a85
  415a6c:	aam    0x83
  415a6e:	arpl   WORD PTR [edx],bx
  415a70:	sbb    al,0x8e
  415a72:	or     eax,0x305ffad5
  415a77:	cmp    DWORD PTR [eax],ecx
  415a79:	iret   
  415a7a:	aas    
  415a7b:	xor    ecx,DWORD PTR [esi+0x22d93e55]
  415a81:	xor    dh,BYTE PTR [ecx+0x43]
  415a84:	pop    es
  415a85:	sar    ebp,1
  415a87:	shr    DWORD PTR [ebx-0x59],0x1c
  415a8b:	jecxz  0x415ae0
  415a8d:	imul   ecx,DWORD PTR [edi+0x2],0x2e710436
  415a94:	mov    BYTE PTR [eax-0x80],bh
  415a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a98:	repnz rol edx,cl
  415a9b:	dec    ebx
  415a9c:	repnz pusha 
  415a9e:	(bad)  
  415a9f:	outs   dx,DWORD PTR ds:[esi]
  415aa0:	sbb    DWORD PTR [eax],edi
  415aa2:	arpl   WORD PTR [ebp-0x4f7f4644],cx
  415aa8:	pop    eax
  415aa9:	push   0x440a07a
  415aae:	add    BYTE PTR [edi],dl
  415ab0:	cmp    ebp,edi
  415ab2:	test   DWORD PTR [edx-0x30430952],ebx
  415ab8:	sbb    BYTE PTR [ebx],ch
  415aba:	xor    al,BYTE PTR [ebx+edi*8]
  415abd:	jne    0x415a55
  415abf:	jmp    0x415ac2
  415ac1:	scas   eax,DWORD PTR es:[edi]
  415ac2:	ins    BYTE PTR es:[edi],dx
  415ac3:	mov    al,0xa9
  415ac5:	dec    ebp
  415ac6:	fcomi  st,st(5)
  415ac8:	out    0x85,eax
  415aca:	and    eax,DWORD PTR [edx-0x73161baa]
  415ad0:	pusha  
  415ad1:	pop    ds
  415ad2:	mov    dh,0xf9
  415ad4:	(bad)  [ebx+0x5b]
  415ad7:	(bad)  
  415ad9:	(bad)  
  415ada:	or     bl,0x44
  415add:	clc    
  415ade:	jmp    0x415ad2
  415ae0:	in     al,dx
  415ae1:	xchg   esp,eax
  415ae2:	adc    edi,DWORD PTR [ebx-0x26]
  415ae5:	push   DWORD PTR ds:[esp+edi*8-0x6ece7766]
  415aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aee:	add    ch,al
  415af0:	fwait
  415af1:	cmp    BYTE PTR [esi-0x36d8697b],bh
  415af7:	mov    esp,0x874cfb9c
  415afc:	mov    ebp,0x2dadf66f
  415b01:	ficom  WORD PTR [ecx-0x74]
  415b04:	xor    eax,edi
  415b06:	jle    0x415b07
  415b08:	push   eax
  415b09:	std    
  415b0a:	cli    
  415b0b:	xor    ebx,DWORD PTR [edx+0x576730e2]
  415b11:	aaa    
  415b12:	clc    
  415b13:	sbb    DWORD PTR [ecx+0xb],ebx
  415b16:	sub    ah,BYTE PTR [esi+edx*4-0x69]
  415b1a:	xlat   BYTE PTR ds:[ebx]
  415b1b:	pop    esp
  415b1c:	imul   DWORD PTR [esi]
  415b1e:	inc    ebp
  415b1f:	adc    edx,DWORD PTR [eax+ecx*1-0x4e021e]
  415b26:	rcl    BYTE PTR [esi+esi*1+0x72131821],cl
  415b2d:	ds out dx,al
  415b2f:	fwait
  415b30:	pushf  
  415b31:	outs   dx,DWORD PTR ds:[esi]
  415b32:	stc    
  415b33:	mov    WORD PTR [edx+0x3c],es
  415b36:	xlat   BYTE PTR ds:[ebx]
  415b37:	dec    esi
  415b38:	idiv   BYTE PTR [edx]
  415b3a:	sub    cl,BYTE PTR [ebx-0x40]
  415b3d:	xchg   BYTE PTR [esi+0x36],dl
  415b40:	sbb    ebx,DWORD PTR [ebp+0x30]
  415b43:	loope  0x415b80
  415b45:	lods   al,BYTE PTR ds:[esi]
  415b46:	add    DWORD PTR ds:0x5b51a178,edx
  415b4c:	neg    BYTE PTR [edi]
  415b4e:	and    BYTE PTR [edi-0x7fac8405],0x4f
  415b55:	xor    BYTE PTR [eax],bl
  415b57:	jl     0x415b71
  415b59:	sar    edi,1
  415b5b:	int3   
  415b5c:	in     al,dx
  415b5d:	dec    edx
  415b5e:	popa   
  415b5f:	gs dec esi
  415b61:	add    ch,al
  415b63:	lock xchg ebp,eax
  415b65:	jae    0x415af9
  415b67:	mov    cl,0x75
  415b69:	mov    cl,0x31
  415b6b:	mov    edi,0x10c4e576
  415b70:	jge    0x415bad
  415b72:	cmp    al,0x4a
  415b74:	jge    0x415b2b
  415b76:	inc    eax
  415b77:	ins    BYTE PTR es:[edi],dx
  415b78:	dec    ebx
  415b79:	pusha  
  415b7a:	pop    ds
  415b7b:	mov    ds:0xc9b5b0e9,eax
  415b80:	mov    esi,0x9106b4d9
  415b85:	push   ebx
  415b86:	cmp    ch,BYTE PTR [ecx+0x78]
  415b89:	call   0x9365fe1d
  415b8e:	sub    al,0x5d
  415b90:	scas   eax,DWORD PTR es:[edi]
  415b91:	mov    dl,0xe5
  415b93:	jne    0x415b25
  415b95:	outs   dx,BYTE PTR ds:[esi]
  415b96:	mov    ds:0x58477f5e,eax
  415b9b:	jo     0x415b3e
  415b9d:	out    dx,eax
  415b9e:	es jl  0x415c0e
  415ba1:	imul   eax,esi,0x8d3154f6
  415ba7:	lods   al,BYTE PTR ds:[esi]
  415ba8:	popf   
  415ba9:	or     dh,BYTE PTR [eax+0x61057c02]
  415baf:	inc    esp
  415bb0:	mov    BYTE PTR [ecx+0x62ce2fa7],al
  415bb6:	es test BYTE PTR fs:[ebx-0x2a4cf763],0x3f
  415bbf:	adc    DWORD PTR ds:0x1bc8ddd0,0x367b7a0a
  415bc9:	mov    ch,0xa5
  415bcb:	ret    
  415bcc:	mov    eax,0x16ba9c57
  415bd1:	cs xor bl,ch
  415bd4:	out    0x7b,al
  415bd6:	inc    edx
  415bd7:	lods   al,BYTE PTR ds:[esi]
  415bd8:	mov    dh,BYTE PTR [esi+0x31ee9971]
  415bde:	cwde   
  415bdf:	test   edx,ebx
  415be1:	inc    esi
  415be3:	shl    DWORD PTR [ebx+0x78],1
  415be6:	xor    DWORD PTR [edx+eiz*4-0x7c],ebp
  415bea:	imul   edi,DWORD PTR [edx+edx*4+0x73],0x3c0883bf
  415bf2:	dec    eax
  415bf3:	jnp    0x415c49
  415bf5:	mov    ebx,DWORD PTR [edi-0x126a229a]
  415bfb:	test   BYTE PTR [edx-0x1a],bl
  415bfe:	push   es
  415bff:	int    0x7a
  415c01:	push   ss
  415c02:	inc    ecx
  415c03:	inc    ebp
  415c04:	enter  0x4b7a,0x27
  415c08:	rol    DWORD PTR [ebx-0x1f70cb98],0x7b
  415c0f:	mov    edx,0xb3ace2e1
  415c14:	xchg   ebx,eax
  415c15:	outs   dx,BYTE PTR ds:[esi]
  415c16:	inc    edx
  415c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c18:	inc    esp
  415c19:	adc    BYTE PTR [ebx-0x54],0xb4
  415c1d:	mov    ch,0x2d
  415c1f:	or     cl,bl
  415c21:	cli    
  415c22:	fnstcw WORD PTR [ebx]
  415c24:	shr    BYTE PTR [esi],1
  415c26:	outs   dx,BYTE PTR ds:[esi]
  415c27:	xchg   ebx,eax
  415c28:	out    dx,al
  415c29:	lahf   
  415c2a:	pop    esi
  415c2b:	icebp  
  415c2c:	call   0x8c4c:0xc464d8aa
  415c33:	sti    
  415c34:	sbb    DWORD PTR [edi+ebx*1-0x66],edi
  415c38:	js     0x206d05b4
  415c3e:	pushf  
  415c3f:	push   ebx
  415c40:	call   0xbfc82f26
  415c45:	push   ecx
  415c46:	mov    ebx,0xe5a725de
  415c4b:	and    bl,BYTE PTR [ebp+0x1a]
  415c4e:	ja     0x415c1b
  415c50:	or     al,0xe
  415c52:	xchg   esp,eax
  415c53:	pushf  
  415c54:	div    edi
  415c56:	sbb    DWORD PTR [eax+ebp*1],esi
  415c59:	sbb    BYTE PTR [edx+0x20],bh
  415c5c:	inc    edx
  415c5d:	cld    
  415c5e:	lock inc esp
  415c60:	xor    BYTE PTR [ecx+edi*2+0x7a],ch
  415c64:	inc    esi
  415c65:	ins    DWORD PTR es:[edi],dx
  415c66:	jne    0x415c3f
  415c68:	clc    
  415c69:	icebp  
  415c6a:	(bad)  
  415c6b:	loope  0x415c43
  415c6d:	cmp    eax,0x8bc35847
  415c72:	mov    ah,BYTE PTR [ebx+0x14]
  415c75:	push   ecx
  415c76:	adc    DWORD PTR [ebp+ebx*1+0x3012cecb],0x1dd16d8d
  415c81:	ss lock cdq 
  415c84:	mov    ecx,0xa6c64f9f
  415c89:	iret   
  415c8a:	push   ebp
  415c8b:	stc    
  415c8c:	xor    BYTE PTR [eax+0x75],dl
  415c8f:	arpl   WORD PTR [esi-0x486b2714],bp
  415c95:	js     0x415d11
  415c97:	xor    al,0x50
  415c99:	dec    edi
  415c9a:	lea    edx,[edi+0x11]
  415c9d:	int    0xe6
  415c9f:	fucomp st(5)
  415ca1:	inc    esp
  415ca2:	xchg   dh,al
  415ca4:	mov    esp,0x635f143e
  415ca9:	outs   dx,BYTE PTR ds:[esi]
  415caa:	call   0x1e0:0x7d101bde
  415cb1:	outs   dx,BYTE PTR ds:[esi]
  415cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb3:	lods   al,BYTE PTR ds:[esi]
  415cb4:	sbb    al,0x26
  415cb6:	and    eax,0xc275a521
  415cbb:	ins    DWORD PTR es:[edi],dx
  415cbc:	mov    al,ds:0x34df44c3
  415cc1:	add    BYTE PTR [edi+0x73cd00b3],ah
  415cc7:	test   DWORD PTR [ecx+0x38],ebx
  415cca:	jnp    0x415cb1
  415ccc:	ficomp WORD PTR [esi+edi*2+0x7d]
  415cd0:	sub    bh,BYTE PTR [eax]
  415cd2:	in     eax,0xfa
  415cd4:	jb     0x415d21
  415cd6:	push   ecx
  415cd7:	inc    esi
  415cd8:	cwde   
  415cd9:	fistp  QWORD PTR [edi+0x68]
  415cdc:	mov    ds:0x334cedd9,al
  415ce1:	cmc    
  415ce2:	dec    edx
  415ce3:	mov    eax,ds:0xa8c4b95c
  415ce8:	sub    eax,0x98e603f
  415ced:	(bad)  
  415cee:	shl    BYTE PTR [edi+0x4795297a],cl
  415cf4:	shl    BYTE PTR [edi],0x48
  415cf7:	call   0x277a:0x408115af
  415cfe:	imul   ebp,DWORD PTR [ebp+eiz*2-0x12],0xffffffa4
  415d03:	ins    BYTE PTR es:[edi],dx
  415d04:	mov    dh,BYTE PTR [ebp+0x37]
  415d07:	mov    WORD PTR [ecx-0x52],ss
  415d0a:	clc    
  415d0b:	jp     0x415d29
  415d0d:	inc    ecx
  415d0e:	ss lds eax,FWORD PTR es:[esi-0x38506f4]
  415d16:	and    esp,DWORD PTR ds:0xd9620d86
  415d1c:	cdq    
  415d1d:	jns    0x415cd8
  415d1f:	pop    esp
  415d20:	stos   BYTE PTR es:[edi],al
  415d21:	(bad)  
  415d23:	idiv   esp
  415d25:	dec    esp
  415d26:	es cmc 
  415d28:	scas   al,BYTE PTR es:[edi]
  415d29:	inc    eax
  415d2a:	test   al,0x8a
  415d2c:	dec    esp
  415d2d:	push   0x6fadcc03
  415d32:	lds    eax,FWORD PTR [eax+ebp*8+0x44d43ee6]
  415d39:	imul   edx,DWORD PTR [ebx+0x23],0x81072186
  415d40:	imul   esi,DWORD PTR [ecx],0x1e
  415d43:	ret    
  415d44:	mov    ebp,0x3fd473e0
  415d49:	push   ss
  415d4a:	adc    eax,0x9735b18f
  415d4f:	ss add ebx,eax
  415d52:	mov    al,0x48
  415d54:	xor    BYTE PTR [edi],bh
  415d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d57:	scas   eax,DWORD PTR es:[edi]
  415d58:	lods   eax,DWORD PTR ds:[esi]
  415d59:	mov    ah,0xf4
  415d5b:	inc    ebp
  415d5c:	loope  0x415d39
  415d5e:	cmp    DWORD PTR [ebx+0x64],esi
  415d61:	jns    0x415db3
  415d63:	loopne 0x415ddc
  415d65:	pushf  
  415d66:	xchg   DWORD PTR [edi],ebp
  415d68:	push   ax
  415d6a:	add    eax,0x37672243
  415d6f:	mov    bl,0x62
  415d71:	pop    ss
  415d72:	jo     0x415d3e
  415d74:	push   ebp
  415d75:	xchg   esp,eax
  415d76:	mov    ds:0x9e300280,al
  415d7b:	stos   DWORD PTR es:[edi],eax
  415d7c:	jo     0x415d7f
  415d7e:	jno    0x415d66
  415d80:	push   edx
  415d81:	rcl    DWORD PTR [eax-0x276c86c],1
  415d87:	dec    esi
  415d88:	push   ds
  415d89:	cmp    BYTE PTR [ecx+0x2b],ch
  415d8c:	sbb    dh,BYTE PTR [ecx-0x77]
  415d8f:	imul   ebp,DWORD PTR [ecx+0x59],0xffffffcf
  415d93:	mov    ebp,0x1be1d405
  415d98:	fst    DWORD PTR [ecx]
  415d9a:	imul   edx,eax,0x9ae7fd1b
  415da0:	dec    DWORD PTR [esi]
  415da2:	pop    esi
  415da3:	inc    BYTE PTR [esi+ebp*1]
  415da6:	data16 int 0xcd
  415da9:	shl    DWORD PTR [eax-0x5f],cl
  415dac:	pop    edi
  415dad:	sbb    DWORD PTR ds:0x5a0df33c,edx
  415db3:	inc    eax
  415db4:	jo     0x415dac
  415db6:	fstp   DWORD PTR [eax-0xfaab89f]
  415dbc:	add    al,0xe3
  415dbe:	in     eax,dx
  415dbf:	adc    eax,0x4f151e0d
  415dc4:	sub    ecx,DWORD PTR [ecx]
  415dc6:	or     al,0x11
  415dc8:	lods   eax,DWORD PTR ds:[esi]
  415dc9:	ins    BYTE PTR es:[edi],dx
  415dca:	test   BYTE PTR [ebp-0x24],ah
  415dcd:	sub    al,0xd8
  415dcf:	lea    edi,[eax+edx*2-0x106ee31d]
  415dd6:	pop    es
  415dd7:	fild   QWORD PTR [ebx+0x2c4fea8d]
  415ddd:	clc    
  415dde:	cmp    cl,BYTE PTR [ebx+0x1e]
  415de1:	xchg   BYTE PTR [ebx+0x3f],ch
  415de4:	ja     0x415d81
  415de6:	xor    DWORD PTR [ecx],ecx
  415de8:	adc    cl,BYTE PTR [ebx-0x13]
  415deb:	jb     0x415e3d
  415ded:	xchg   ecx,eax
  415dee:	arpl   WORD PTR [esi+0x30],si
  415df1:	mov    cl,BYTE PTR [ebx+0x8]
  415df4:	stos   BYTE PTR es:[edi],al
  415df5:	repnz jmp 0xaf1c:0xdb9eb144
  415dfd:	imul   esi,DWORD PTR [eax+0x1c],0x54
  415e01:	mov    edi,gs
  415e03:	fld    TBYTE PTR [ebx+0x25f80648]
  415e09:	and    eax,0x69436c93
  415e0e:	jge    0x415db1
  415e10:	xchg   ebx,eax
  415e11:	fisubr DWORD PTR [edx]
  415e13:	bound  edi,QWORD PTR [ebp-0x2503269a]
  415e19:	pop    esp
  415e1a:	popf   
  415e1b:	ins    BYTE PTR es:[edi],dx
  415e1c:	xchg   ebp,eax
  415e1d:	pushf  
  415e1e:	mov    ebx,0xc24b9943
  415e23:	mov    ?,ebx
  415e25:	or     ebp,esi
  415e27:	sahf   
  415e28:	ins    BYTE PTR es:[edi],dx
  415e29:	es leave 
  415e2b:	fwait
  415e2c:	mov    ebx,0x95646127
  415e31:	repz scas eax,DWORD PTR es:[edi]
  415e33:	cdq    
  415e34:	retf   0xd8e9
  415e37:	sahf   
  415e38:	ficomp WORD PTR [ebx+eax*4]
  415e3b:	leave  
  415e3c:	xchg   ebp,eax
  415e3d:	pop    esi
  415e3e:	js     0x415e19
  415e40:	repz dec ebx
  415e42:	mov    ecx,0x18c570d8
  415e47:	bound  ebp,QWORD PTR [edi]
  415e49:	ret    0xf531
  415e4c:	(bad)  
  415e4d:	lds    edi,FWORD PTR [ebx+0x372b91a3]
  415e53:	and    DWORD PTR [ebp+0x17433fcd],edx
  415e59:	adc    al,0x95
  415e5b:	ror    DWORD PTR [ebp-0x6c2ec0ee],cl
  415e61:	dec    esi
  415e62:	adc    BYTE PTR [esi+0x3118442b],bl
  415e68:	add    ch,ah
  415e6a:	pusha  
  415e6b:	push   esi
  415e6c:	mov    ah,0xe1
  415e6e:	stc    
  415e6f:	stos   BYTE PTR es:[edi],al
  415e70:	js     0x415e55
  415e72:	xor    esi,0x31086d9c
  415e78:	mov    edi,0xfea30528
  415e7d:	mov    bh,0xe6
  415e7f:	push   ebx
  415e80:	and    DWORD PTR [edx+0x66],esp
  415e83:	jge    0x415e4e
  415e85:	add    eax,0x943b89f3
  415e8a:	jp     0x415e21
  415e8c:	jmp    0x415efc
  415e8e:	dec    esp
  415e8f:	xchg   esi,eax
  415e90:	cmp    al,0xe4
  415e92:	call   0xd4b2:0x8542d507
  415e99:	xor    eax,0x5df14e6a
  415e9e:	(bad)  
  415e9f:	call   0x563dba0a
  415ea4:	mov    ecx,0x313a389c
  415ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eaa:	sub    BYTE PTR ss:[edx+0x599e1302],bl
  415eb1:	push   ecx
  415eb2:	inc    ebx
  415eb3:	popf   
  415eb4:	inc    ebx
  415eb5:	inc    ebp
  415eb6:	(bad)  
  415eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb8:	retf   
  415eb9:	das    
  415eba:	rol    BYTE PTR [ebx],0x26
  415ebd:	mov    edx,0x269d9323
  415ec2:	cld    
  415ec3:	fnstenv [edx]
  415ec5:	rol    edi,cl
  415ec7:	pushf  
  415ec8:	in     al,dx
  415ec9:	(bad)  
  415eca:	in     eax,dx
  415ecb:	sub    DWORD PTR [esp+edx*2],edx
  415ece:	ins    DWORD PTR es:[edi],dx
  415ecf:	loope  0x415e96
  415ed1:	call   0x9781:0x5efecc89
  415ed8:	aas    
  415ed9:	or     cl,al
  415edb:	cld    
  415edc:	and    cl,0xa0
  415edf:	push   ecx
  415ee0:	jge    0x415f46
  415ee2:	push   cs
  415ee3:	ja     0x415f25
  415ee5:	cmp    al,dl
  415ee7:	and    cl,BYTE PTR [esi-0x4d7c8997]
  415eed:	mov    ah,0x81
  415eef:	sub    al,0xc9
  415ef1:	xor    BYTE PTR [edi-0x28d54843],ah
  415ef7:	add    ch,dl
  415ef9:	add    al,0x58
  415efb:	fidivr WORD PTR [esi+0x49]
  415efe:	ret    0x940d
  415f01:	jne    0x415f4a
  415f03:	out    0x11,eax
  415f05:	mov    bh,0xfa
  415f07:	pusha  
  415f08:	pushw  0xff4c
  415f0c:	ja     0x415f73
  415f0e:	sub    BYTE PTR [edi-0x6],cl
  415f11:	inc    eax
  415f12:	imul   ebp,DWORD PTR [ebx-0x4b],0x662b6a99
  415f19:	and    eax,0x336d668c
  415f1e:	imul   ecx,edi,0x99ff26b7
  415f24:	sar    DWORD PTR [esi-0x4a],1
  415f27:	imul   ebx,DWORD PTR [edi+edx*4-0x76],0xffffffe7
  415f2c:	sbb    eax,0x93041313
  415f31:	js     0x415f5c
  415f33:	out    0x1f,al
  415f35:	mov    dl,0xbe
  415f37:	mov    ss,WORD PTR [ecx]
  415f39:	xchg   al,al
  415f3b:	adc    eax,0x91895ac7
  415f40:	arpl   WORD PTR [esi],si
  415f42:	mov    edi,0xa032089c
  415f47:	fisubr WORD PTR [esp+ebp*8]
  415f4a:	xor    ebx,DWORD PTR [esi]
  415f4c:	inc    edx
  415f4d:	in     eax,0x31
  415f4f:	push   esp
  415f50:	arpl   WORD PTR [edx-0x4b],sp
  415f53:	cmp    BYTE PTR [ebx],0xca
  415f56:	das    
  415f57:	xchg   esp,eax
  415f58:	(bad)  [ebx+0x74]
  415f5b:	test   al,0x28
  415f5d:	sub    al,0x85
  415f5f:	mov    eax,0x5e8adf58
  415f64:	arpl   WORD PTR ds:[edi+edx*2+0x1081ab57],dx
  415f6c:	push   ecx
  415f6d:	sbb    edx,ecx
  415f6f:	add    DWORD PTR [edx],esi
  415f71:	repz sbb ebp,DWORD PTR [eax]
  415f74:	ja     0x415fea
  415f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f77:	and    bl,BYTE PTR [ecx-0x22]
  415f7a:	shr    DWORD PTR [ebp-0x70],1
  415f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f7e:	jl     0x415fb7
  415f80:	and    dl,BYTE PTR [edx+0x65275042]
  415f86:	adc    eax,0x29adfdd7
  415f8b:	lods   eax,DWORD PTR ds:[esi]
  415f8c:	mov    edi,0x3f7bb282
  415f91:	or     eax,eax
  415f93:	adc    eax,0xc291ee69
  415f98:	cmp    BYTE PTR [esi-0x68a1ea0a],dl
  415f9e:	xor    BYTE PTR [eax+0x54],al
  415fa1:	inc    edi
  415fa2:	(bad)  
  415fa3:	adc    bh,bh
  415fa5:	retf   
  415fa6:	and    al,0xa5
  415fa8:	int    0xe7
  415faa:	sub    eax,0x687d0170
  415faf:	or     eax,edx
  415fb1:	sti    
  415fb2:	jp     0x415fb5
  415fb4:	not    DWORD PTR [eax]
  415fb6:	sbb    DWORD PTR [edx+0x78],eax
  415fb9:	retf   
  415fba:	xlat   BYTE PTR ds:[ebx]
  415fbb:	cld    
  415fbc:	cmp    DWORD PTR [edi-0xe],ebx
  415fbf:	das    
  415fc0:	mov    eax,0xd8ed9ad1
  415fc5:	loop   0x415f5d
  415fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fc8:	pop    ebx
  415fc9:	(bad)  
  415fca:	jmp    0x79704865
  415fcf:	call   edi
  415fd1:	jl     0x415f6a
  415fd3:	sahf   
  415fd4:	or     dl,BYTE PTR [eax+0x3d]
  415fd7:	and    eax,0xb6f5bcef
  415fdc:	in     al,0x4a
  415fde:	lahf   
  415fdf:	jae    0x41601a
  415fe1:	fistp  QWORD PTR [eax-0x6f]
  415fe4:	push   ecx
  415fe5:	inc    edx
  415fe6:	push   cs
  415fe7:	and    ebp,0xab75e127
  415fed:	cmp    cl,BYTE PTR [esi-0x4d1624ec]
  415ff3:	lahf   
  415ff4:	dec    eax
  415ff5:	sbb    al,0x91
  415ff7:	div    DWORD PTR [ebp-0x73c7147f]
  415ffd:	add    eax,0x47
  416000:	or     bh,al
  416002:	(bad)  [eax]
  416004:	add    DWORD PTR [esp],eax
  416007:	jle    0x415fae
  416009:	jo     0x415fd9
  41600b:	ret    0x75e
  41600e:	repz out 0xfd,al
  416011:	out    dx,eax
  416012:	es das 
  416014:	push   ds
  416015:	jp     0x416041
  416017:	dec    eax
  416018:	jl     0x41602d
  41601a:	xor    BYTE PTR [ecx-0x36],0xb1
  41601e:	(bad)
  416021:	rol    BYTE PTR [eax+ebx*4-0x28006cbe],1
  416028:	ror    DWORD PTR [ecx*4-0x11a10c42],0xd3
  416030:	jno    0x415fbb
  416032:	fistp  DWORD PTR [edi+edx*2]
  416035:	push   edi
  416036:	ficomp WORD PTR [edi-0x7e]
  416039:	mov    dh,0x57
  41603b:	dec    ecx
  41603c:	sub    al,0x95
  41603e:	add    BYTE PTR [ebx],cl
  416040:	mov    al,0xd
  416042:	ss hlt 
  416044:	cmp    eax,0x96eefa21
  416049:	ins    BYTE PTR es:[edi],dx
  41604a:	das    
  41604b:	or     ebx,DWORD PTR [edi+0x34]
  41604e:	xor    eax,0xd01581a1
  416053:	mov    bl,0x97
  416055:	xchg   ebx,eax
  416056:	dec    edi
  416057:	aam    0xba
  416059:	pop    ds
  41605a:	into   
  41605b:	push   es
  41605c:	(bad)  
  41605d:	clc    
  41605e:	mov    ecx,esi
  416060:	xlat   BYTE PTR ds:[ebx]
  416061:	test   eax,0x41413683
  416066:	rcl    DWORD PTR [esi-0x29],1
  416069:	shr    BYTE PTR [eax+0x7d3de0d7],cl
  41606f:	fs jo  0x4160a3
  416072:	retf   
  416073:	add    ebp,ebx
  416075:	adc    BYTE PTR [esi],bh
  416077:	out    0xcc,al
  416079:	(bad)  
  41607a:	pop    fs
  41607c:	adc    ecx,ecx
  41607e:	add    BYTE PTR [edx-0x79],dl
  416081:	jns    0x416068
  416083:	enter  0xeca2,0x5d
  416087:	fisttp WORD PTR [esi+0x72]
  41608a:	fisttp DWORD PTR [ebp-0x62ea8226]
  416090:	mov    edi,0xaad2594f
  416095:	jb     0x416101
  416097:	cmp    BYTE PTR [eax],bh
  416099:	jle    0x41604c
  41609b:	mov    esi,0xdce84a48
  4160a0:	dec    ecx
  4160a1:	jmp    0x8d80c380
  4160a6:	mov    dl,0x64
  4160a8:	popf   
  4160a9:	ss dec ebp
  4160ab:	lahf   
  4160ac:	call   0xe479:0xf9e92958
  4160b3:	fwait
  4160b4:	test   BYTE PTR [edx-0x543d562f],ah
  4160ba:	pop    ss
  4160bb:	push   bx
  4160bd:	sub    bl,BYTE PTR [ebx-0x5008ac94]
  4160c3:	add    ch,BYTE PTR [edi-0x7d]
  4160c6:	add    edi,ebx
  4160c8:	inc    ecx
  4160c9:	aam    0x7
  4160cb:	in     eax,0xb7
  4160cd:	sbb    al,0x1d
  4160cf:	adc    al,0xc5
  4160d1:	add    BYTE PTR [esi+0x7],0x4f
  4160d5:	ret    0x79a7
  4160d8:	aad    0xb1
  4160da:	shl    bl,1
  4160dc:	out    dx,eax
  4160dd:	pop    edx
  4160de:	dec    esi
  4160df:	xor    eax,0x8a03d137
  4160e4:	sbb    esi,DWORD PTR [edx]
  4160e6:	popa   
  4160e7:	cmp    ah,0xc4
  4160ea:	sub    ebx,DWORD PTR [ecx-0x67b8a07d]
  4160f0:	mov    ebx,0x34ed346c
  4160f5:	inc    edx
  4160f6:	rcr    DWORD PTR [esi+esi*8-0x2c24fb10],0x4a
  4160fe:	sbb    al,ah
  416100:	in     eax,0xd4
  416102:	xchg   edx,eax
  416103:	inc    edx
  416104:	mov    eax,0x3a3827e7
  416109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41610a:	es jb  0x416113
  41610d:	sub    al,0x53
  41610f:	pop    ecx
  416110:	ror    BYTE PTR [ebx],cl
  416112:	mov    eax,ds:0x35a1aa86
  416117:	shl    DWORD PTR [edx-0x11],cl
  41611a:	stos   BYTE PTR es:[edi],al
  41611b:	iret   
  41611c:	xchg   edx,eax
  41611d:	addr16 inc edi
  41611f:	and    DWORD PTR [edi-0x5c],0x69
  416123:	and    ecx,ecx
  416125:	mov    ds:0x1d34f8e7,al
  41612a:	aad    0xa8
  41612c:	je     0x4160f2
  41612e:	imul   ebx,DWORD PTR [edx+0x27],0x5
  416132:	mov    BYTE PTR [esi-0x4e],0x3c
  416136:	popf   
  416137:	mov    bl,0x2d
  416139:	stos   DWORD PTR es:[edi],eax
  41613a:	retf   
  41613b:	pop    esi
  41613c:	popa   
  41613d:	xor    ecx,eax
  41613f:	mov    dh,0x0
  416141:	pushf  
  416142:	or     BYTE PTR [ebx+0x2f],0xab
  416146:	test   eax,0xc8ba6345
  41614b:	jp     0x416195
  41614d:	in     al,0x20
  41614f:	sub    eax,0x2ce9d19e
  416154:	dec    esp
  416155:	and    al,0xd
  416157:	or     eax,0x836610aa
  41615c:	retf   0x2fac
  41615f:	xchg   ebx,eax
  416160:	test   DWORD PTR [edi+0x14],eax
  416163:	mov    es,WORD PTR [ecx]
  416165:	loop   0x41618b
  416167:	lea    ecx,[eax+0x54711d00]
  41616d:	out    0x0,eax
  41616f:	fnstenv [edi]
  416171:	mov    WORD PTR [esi],?
  416173:	aas    
  416174:	js     0x41617d
  416176:	mul    DWORD PTR [edx+edx*4+0x45]
  41617a:	add    ebp,ebp
  41617c:	cld    
  41617d:	inc    ebx
  41617e:	aam    0x5
  416180:	(bad)  
  416182:	mov    ds:0xc29197d0,al
  416187:	inc    ebx
  416188:	ret    
  416189:	inc    ebp
  41618a:	add    DWORD PTR [eax+ebp*2-0x63],esi
  41618e:	pop    edi
  41618f:	sub    BYTE PTR [ebp+0x5095b214],bh
  416195:	cmp    DWORD PTR [ebp-0x48],ecx
  416198:	outs   dx,DWORD PTR ds:[esi]
  416199:	loope  0x416215
  41619b:	xor    BYTE PTR [eax],cl
  41619d:	out    0x1b,al
  41619f:	das    
  4161a0:	out    dx,al
  4161a1:	dec    ebx
  4161a2:	out    dx,eax
  4161a3:	test   DWORD PTR [edx],ebp
  4161a5:	xchg   dl,ah
  4161a7:	test   BYTE PTR [eax+ebp*4],ch
  4161aa:	sbb    eax,0x83319c92
  4161af:	ret    
  4161b0:	clc    
  4161b1:	pushf  
  4161b2:	imul   edx,DWORD PTR [edx-0x2c],0x88f1e3ed
  4161b9:	fs (bad) 
  4161bb:	div    edx
  4161bd:	xchg   ebp,eax
  4161be:	test   al,0xfa
  4161c0:	iret   
  4161c1:	les    ecx,FWORD PTR [edx-0x66]
  4161c4:	jb     0x416216
  4161c6:	int    0x91
  4161c8:	out    dx,eax
  4161c9:	pop    ebx
  4161ca:	and    bh,BYTE PTR [ebx+ebx*2+0x2b]
  4161ce:	loopne 0x4161a0
  4161d0:	lahf   
  4161d1:	in     al,dx
  4161d2:	or     BYTE PTR [ecx],0x3f
  4161d5:	xchg   ebp,eax
  4161d6:	inc    ecx
  4161d7:	lahf   
  4161d8:	cld    
  4161d9:	mov    esi,0x641d1644
  4161de:	xchg   ecx,eax
  4161df:	and    DWORD PTR [edx+ebx*8-0x57],ebx
  4161e3:	daa    
  4161e4:	cwde   
  4161e5:	clc    
  4161e6:	ror    dh,0x6e
  4161e9:	mov    ch,0x26
  4161eb:	xor    BYTE PTR ds:0x5ff8683e,bl
  4161f1:	jle    0x416248
  4161f3:	outs   dx,DWORD PTR ds:[esi]
  4161f4:	push   edx
  4161f5:	test   DWORD PTR [ebp-0x37676a43],esp
  4161fb:	push   0xe1f856a2
  416200:	push   ebp
  416201:	jmp    0x89d4c2f6
  416206:	jne    0x4161c1
  416208:	fcomi  st,st(0)
  41620a:	mov    WORD PTR [edi+0x2722be91],gs
  416210:	(bad)  
  416211:	lods   al,BYTE PTR ds:[esi]
  416212:	call   0x684a:0x30967f31
  416219:	inc    ebp
  41621a:	xchg   cl,bh
  41621c:	mov    ah,0x38
  41621e:	(bad)  
  41621f:	lahf   
  416220:	aad    0x1f
  416222:	in     al,dx
  416223:	lods   eax,DWORD PTR ds:[esi]
  416224:	repnz dec edi
  416226:	outs   dx,BYTE PTR ds:[esi]
  416227:	popf   
  416228:	pop    edx
  416229:	add    ecx,ebx
  41622b:	ins    BYTE PTR es:[edi],dx
  41622c:	jg     0x416274
  41622e:	mov    ebx,0x9bd0c5ca
  416233:	mov    ds:0x54e5d533,eax
  416238:	xor    eax,0x733fafa1
  41623d:	push   0xdbf6b883
  416242:	sbb    al,0x31
  416244:	outs   dx,BYTE PTR ds:[esi]
  416245:	int3   
  416246:	mov    esp,0x9da720dc
  41624b:	cs xor cl,ah
  41624e:	mov    al,0xb3
  416250:	pop    edi
  416251:	xchg   edi,eax
  416252:	pop    ds
  416253:	add    DWORD PTR [ebx+edi*8+0x7d],esp
  416257:	xchg   edi,ebx
  416259:	xchg   DWORD PTR [ebx+0x690fde6e],edi
  41625f:	push   0xe4f3f48f
  416264:	arpl   dx,dx
  416266:	sar    ebp,1
  416268:	sub    al,0x55
  41626a:	mov    esp,0x14583cf4
  41626f:	out    dx,al
  416270:	pop    DWORD PTR [ecx]
  416272:	mov    ebx,0x62d1a457
  416277:	pop    ds
  416278:	cdq    
  416279:	inc    eax
  41627a:	push   ebx
  41627b:	inc    edx
  41627c:	ins    DWORD PTR es:[edi],dx
  41627d:	inc    ebp
  41627e:	pushf  
  41627f:	jb     0x41626d
  416281:	push   esp
  416282:	push   es
  416283:	fidivr DWORD PTR [edi-0x1a]
  416286:	push   esi
  416287:	or     eax,0x9f1944d4
  41628c:	repz jnp 0x41626f
  41628f:	cmp    al,ah
  416291:	or     al,0xeb
  416293:	sub    DWORD PTR [edx+0x6a],esi
  416296:	xchg   dh,cl
  416298:	push   edi
  416299:	pop    edi
  41629a:	push   es
  41629b:	push   ebp
  41629c:	clc    
  41629d:	call   0x407efca
  4162a2:	(bad)  
  4162a3:	(bad)  
  4162a4:	mov    ecx,0x7ce3db87
  4162a9:	icebp  
  4162aa:	shl    BYTE PTR [ebp+0x33],0x7a
  4162ae:	push   ds
  4162af:	dec    eax
  4162b0:	sbb    DWORD PTR [edx-0x139c2776],esi
  4162b6:	imul   ebx,DWORD PTR [ebx+ebx*2],0x2dbaf404
  4162bd:	shl    DWORD PTR [edi-0x45],1
  4162c0:	test   BYTE PTR fs:[ecx+0x7951733e],cl
  4162c7:	mov    eax,0x11349ec9
  4162cc:	(bad)  
  4162cd:	out    0x7b,eax
  4162cf:	or     BYTE PTR [esi-0x16aad87d],al
  4162d5:	push   ds
  4162d6:	cli    
  4162d7:	(bad)  
  4162d8:	adc    eax,0xcfecb618
  4162dd:	retf   0xe537
  4162e0:	(bad)  
  4162e1:	adc    BYTE PTR [edx],ah
  4162e3:	pusha  
  4162e4:	retf   
  4162e5:	add    BYTE PTR [ebx],0xea
  4162e8:	pusha  
  4162e9:	xchg   esp,eax
  4162ea:	adc    bh,BYTE PTR [ecx+0x32cefc03]
  4162f0:	jae    0x41628d
  4162f2:	sub    BYTE PTR [ebp+0x272218f6],bh
  4162f8:	sbb    ecx,esi
  4162fa:	(bad)  
  4162fb:	xor    eax,0x3784659
  416300:	xor    DWORD PTR [ebp+0x5c],ecx
  416303:	aad    0x3b
  416305:	jmp    0x17a:0x5df46a6e
  41630c:	out    dx,al
  41630d:	jno    0x416339
  41630f:	out    0xe9,al
  416311:	pushf  
  416312:	adc    eax,0xe1fc3942
  416317:	mov    ds:0x18674fe9,al
  41631c:	xor    esi,DWORD PTR [ecx-0xff453fa]
  416322:	adc    ch,ah
  416324:	fld    st(7)
  416326:	push   cs
  416327:	push   edx
  416328:	je     0x416378
  41632a:	xor    DWORD PTR [ecx],edi
  41632c:	dec    edx
  41632d:	adc    al,0xcc
  41632f:	push   ebx
  416330:	ins    DWORD PTR es:[edi],dx
  416331:	pop    ss
  416332:	push   edx
  416333:	nop
  416334:	mov    eax,0x98b067dc
  416339:	iret   
  41633a:	ret    0x5b07
  41633d:	aad    0x6a
  41633f:	dec    edx
  416340:	sub    al,0x6
  416342:	dec    ecx
  416343:	cmp    edi,edx
  416345:	loope  0x416360
  416347:	jmp    0x42372b2d
  41634c:	sbb    DWORD PTR [ecx+0x75],esi
  41634f:	retf   0x7c3
  416352:	inc    edx
  416353:	adc    BYTE PTR [ebp+0x1],bh
  416356:	fidivr DWORD PTR [esi-0x7f2bc3e7]
  41635c:	iret   
  41635d:	mov    dh,0x53
  41635f:	cmp    DWORD PTR [esi+0x209a8e77],ecx
  416365:	xchg   ebp,eax
  416366:	mov    edi,0x2a3b6075
  41636b:	sahf   
  41636c:	jp     0x4163bc
  41636e:	rcr    DWORD PTR [ebp+0x360702d3],0xb2
  416375:	in     eax,0xda
  416377:	loopne 0x4163e1
  416379:	cmp    BYTE PTR [ebx+0x1a],bl
  41637c:	pusha  
  41637d:	test   al,0xad
  41637f:	mov    ch,0xe6
  416381:	outs   dx,DWORD PTR ds:[esi]
  416382:	fsubr  QWORD PTR [edx+0x43]
  416385:	js     0x416381
  416387:	jge    0x41631f
  416389:	xor    eax,0xfd87de4
  41638e:	repnz retf 
  416390:	xor    al,0xbf
  416392:	das    
  416393:	add    cl,BYTE PTR [ebp+0x59]
  416396:	mov    eax,ds:0x49b43ba1
  41639b:	cs pop ebp
  41639d:	jmp    0xb24a7945
  4163a2:	xchg   ebp,eax
  4163a3:	sbb    al,0xe5
  4163a5:	mov    ch,0x4e
  4163a7:	jge    0x41632d
  4163a9:	mov    ds:0x114298ae,al
  4163ae:	push   esp
  4163af:	sub    al,0x5c
  4163b1:	xor    cl,bl
  4163b3:	repz mov bl,0x4e
  4163b6:	and    ch,BYTE PTR ds:0xd34c8a70
  4163bc:	clc    
  4163bd:	les    ebp,FWORD PTR [eax-0x60]
  4163c0:	jg     0x4163b2
  4163c2:	ins    BYTE PTR es:[edi],dx
  4163c3:	sbb    eax,0xc1c8a53a
  4163c8:	sub    al,0xbd
  4163ca:	push   edi
  4163cb:	ss aas 
  4163cd:	xor    ebp,esi
  4163cf:	mov    edi,ebp
  4163d1:	jecxz  0x4163d1
  4163d3:	mov    dl,0xd3
  4163d5:	cmp    bh,BYTE PTR [eax-0x4e]
  4163d8:	lock test eax,0x4b388201
  4163de:	mov    ds:0x1a14c867,al
  4163e3:	imul   ebp,DWORD PTR [ecx],0x38
  4163e6:	rep lock outs dx,DWORD PTR ds:[esi]
  4163e9:	pop    edx
  4163ea:	sti    
  4163eb:	loop   0x4163e4
  4163ed:	in     al,0xed
  4163ef:	add    al,0x11
  4163f1:	dec    eax
  4163f2:	or     edi,ebx
  4163f4:	shl    DWORD PTR [edx+0x67],0xaf
  4163f8:	lock pop edi
  4163fa:	(bad)  
  4163fb:	pop    esp
  4163fc:	int    0x96
  4163fe:	xor    BYTE PTR [ebx+0x73],ah
  416401:	push   0xffffffa9
  416403:	xor    DWORD PTR [eax+0x3aa001fa],ebx
  416409:	cmp    edi,edx
  41640b:	mov    ecx,0x4abd6575
  416410:	icebp  
  416411:	popa   
  416412:	aad    0x9f
  416414:	neg    dh
  416416:	mov    ds:0x52809920,al
  41641b:	mov    bl,BYTE PTR [ebp+0x5c2ab9a3]
  416421:	xor    ebp,edx
  416423:	outs   dx,BYTE PTR ds:[esi]
  416424:	and    bl,cl
  416426:	mov    al,0x4c
  416428:	ins    BYTE PTR es:[edi],dx
  416429:	in     eax,0xb3
  41642b:	xor    cl,BYTE PTR [edi]
  41642d:	ret    0xe6cc
  416430:	xchg   ebp,eax
  416431:	pop    ebx
  416432:	mov    ebx,0x8c830803
  416437:	ja     0x4163e9
  416439:	popa   
  41643a:	pop    esi
  41643b:	lea    esi,[edi-0x14]
  41643e:	mov    ds:0x505d195b,al
  416443:	jb     0x416475
  416445:	xor    eax,0x64537983
  41644a:	mov    al,0x1a
  41644c:	sbb    cl,BYTE PTR [edx-0x662d9943]
  416452:	scas   al,BYTE PTR es:[edi]
  416453:	push   edi
  416454:	cwde   
  416455:	add    al,0x73
  416457:	lahf   
  416458:	jmp    0xe5e2:0x57ee4518
  41645f:	mov    dl,0xf4
  416461:	inc    ecx
  416462:	(bad)  
  416463:	daa    
  416464:	imul   esp,esi,0x3e4d9112
  41646a:	int    0xc5
  41646c:	(bad)
  41646f:	push   ss
  416470:	add    bl,BYTE PTR [ebx-0x6fabb0b7]
  416476:	(bad)  
  416477:	sbb    al,dl
  416479:	lds    esi,FWORD PTR [eax+eax*2-0x4a8401f7]
  416480:	inc    esi
  416481:	std    
  416482:	xchg   ebx,eax
  416483:	pop    esi
  416484:	pusha  
  416485:	xor    dl,dh
  416487:	push   edi
  416488:	ror    eax,0x2d
  41648b:	pop    ebx
  41648c:	inc    ebp
  41648d:	fdiv   st(1),st
  41648f:	cmp    eax,0x38188ff7
  416494:	push   es
  416495:	cli    
  416496:	push   ecx
  416497:	jo     0x4164f9
  416499:	adc    DWORD PTR [eax],edx
  41649b:	or     DWORD PTR [ebp+ecx*4+0x58246628],0xffffff82
  4164a3:	dec    ebp
  4164a4:	cmp    ebx,DWORD PTR [eax-0xb]
  4164a7:	hlt    
  4164a8:	inc    esp
  4164a9:	das    
  4164aa:	sub    ebp,DWORD PTR [ecx-0x20400bf1]
  4164b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164b1:	and    esi,ecx
  4164b3:	sub    DWORD PTR [ecx+0x50],edx
  4164b6:	ret    
  4164b7:	mov    bl,BYTE PTR [eax+0x1c]
  4164ba:	addr16 push cs
  4164bc:	xchg   ecx,eax
  4164bd:	ss ja  0x41650b
  4164c0:	in     eax,0xe4
  4164c2:	retf   0xdabd
  4164c5:	ins    DWORD PTR es:[edi],dx
  4164c6:	cmp    eax,0xe0130d2b
  4164cb:	stos   BYTE PTR es:[edi],al
  4164cc:	ins    DWORD PTR es:[edi],dx
  4164cd:	pop    ecx
  4164ce:	popa   
  4164cf:	imul   eax,DWORD PTR [eax],0x4110eeec
  4164d5:	jmp    0xe37a4d5f
  4164da:	mov    WORD PTR [ebx],ss
  4164dc:	add    ebp,DWORD PTR [ebp-0x3e205119]
  4164e2:	cmp    bl,0xb7
  4164e5:	push   ebp
  4164e6:	pop    ebp
  4164e7:	dec    edi
  4164e8:	push   ss
  4164e9:	mov    eax,ds:0x67a237dd
  4164ee:	out    0x72,al
  4164f0:	xlat   BYTE PTR ds:[ebx]
  4164f1:	jmp    0x4d223b95
  4164f6:	xchg   ah,ch
  4164f8:	les    esp,FWORD PTR [eax+0x61]
  4164fb:	push   es
  4164fc:	mov    al,ds:0x4d9c510e
  416501:	mov    al,ds:0xdf4e29e8
  416506:	pop    ebx
  416507:	aaa    
  416508:	jne    0x4164bb
  41650a:	arpl   WORD PTR [edi-0x61],si
  41650d:	push   ss
  41650e:	fst    DWORD PTR ds:0x6f8cb1f0
  416514:	dec    eax
  416515:	mov    ds:0x2f0e3d04,al
  41651a:	and    BYTE PTR [ecx+0x21144b81],dl
  416520:	mov    edi,0x450c8cb8
  416525:	ret    
  416526:	push   0xcdc5a43a
  41652b:	arpl   WORD PTR [edi-0x11],bx
  41652e:	stos   BYTE PTR es:[edi],al
  41652f:	push   ebp
  416530:	xor    DWORD PTR [ebx],esi
  416532:	outs   dx,DWORD PTR ds:[esi]
  416533:	adc    DWORD PTR [esi-0x4b],0x21d25f7a
  41653a:	outs   dx,DWORD PTR ds:[esi]
  41653b:	inc    bp
  41653d:	add    bl,BYTE PTR [eax-0x24682562]
  416543:	xchg   edx,eax
  416544:	or     DWORD PTR [ebp-0x2b221d0f],ecx
  41654a:	inc    edx
  41654b:	mov    edi,0x1193e049
  416550:	inc    eax
  416551:	mov    al,0x75
  416553:	into   
  416554:	loopne 0x41659b
  416556:	pop    eax
  416557:	shl    BYTE PTR [ebx-0x20827766],1
  41655d:	push   ecx
  41655e:	icebp  
  41655f:	enter  0x72df,0x45
  416563:	push   ecx
  416564:	xchg   ebx,eax
  416565:	fidivr DWORD PTR [ecx+ebp*1-0x162e2b73]
  41656c:	jne    0x41657c
  41656e:	cld    
  41656f:	xor    DWORD PTR [edi],ebp
  416571:	jb     0x416588
  416573:	loope  0x416594
  416575:	and    dh,cl
  416577:	ja     0x4164fa
  416579:	cwde   
  41657a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41657b:	cmc    
  41657c:	mov    dl,0x89
  41657e:	imul   ebp,DWORD PTR [ecx-0x2020c5d4],0xffffff9c
  416585:	ss sub edi,ebx
  416588:	popf   
  416589:	jno    0x4165b2
  41658b:	mov    dh,0xf5
  41658d:	mov    ebx,0x831df5ca
  416592:	arpl   WORD PTR [edx],bx
  416594:	cmc    
  416595:	stos   BYTE PTR es:[edi],al
  416596:	mov    ds:0xa4caaa5b,al
  41659b:	jae    0x4165f3
  41659d:	dec    ebx
  41659e:	pusha  
  41659f:	mov    dh,0xb0
  4165a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165a2:	or     DWORD PTR [esi-0x3b],0x1b
  4165a6:	nop
  4165a7:	std    
  4165a8:	stos   BYTE PTR es:[edi],al
  4165a9:	adc    dl,bl
  4165ab:	(bad)  
  4165ad:	loop   0x41658e
  4165af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165b0:	pop    esi
  4165b1:	push   eax
  4165b2:	jle    0x41659e
  4165b4:	cmp    esp,DWORD PTR [ecx]
  4165b6:	icebp  
  4165b7:	adc    al,0x26
  4165b9:	xor    DWORD PTR ds:0x29df6f44,ebx
  4165bf:	push   0x50
  4165c1:	call   0xa2a8:0xdb9490d0
  4165c8:	lea    ebp,[esi+0x5e8fe2f7]
  4165ce:	sti    
  4165cf:	pop    esi
  4165d0:	(bad)  
  4165d1:	lods   al,BYTE PTR ds:[esi]
  4165d2:	iret   
  4165d3:	cmp    cl,BYTE PTR [edx]
  4165d5:	pop    ebx
  4165d6:	sbb    ebp,0x5c
  4165d9:	pop    ebx
  4165da:	das    
  4165db:	or     al,0x27
  4165dd:	sti    
  4165de:	es std 
  4165e0:	mov    BYTE PTR [ebp+0x75829a7e],bl
  4165e6:	adc    BYTE PTR [edx-0x4c],bh
  4165e9:	mov    cl,0xbf
  4165eb:	jb     0x4165d7
  4165ed:	(bad)  
  4165ee:	mov    esp,0x7563ad1d
  4165f3:	push   es
  4165f4:	(bad)  
  4165f6:	cdq    
  4165f7:	sub    DWORD PTR [ebp-0x218ea6b1],0x20
  4165fe:	imul   ebx,DWORD PTR [ecx],0xd018b0de
  416604:	inc    eax
  416605:	arpl   WORD PTR [ecx+0x13],di
  416608:	xor    esi,edx
  41660a:	mov    ds,WORD PTR [ecx+0x5d2202d2]
  416610:	mov    ds:0xa8f1d147,eax
  416615:	test   cl,al
  416617:	pextrw esp,(bad),0xc5
  416619:	sub    WORD PTR [edx+0x4ddcaad9],0x727f
  416622:	xlat   BYTE PTR ds:[ebx]
  416623:	(bad)  
  416624:	ds pusha 
  416626:	iret   
  416627:	je     0x41661a
  416629:	lds    esp,FWORD PTR [edx+0x2f]
  41662c:	mov    al,0x54
  41662e:	(bad)  
  41662f:	jmp    0x4165d6
  416631:	adc    eax,0xcb817c4e
  416636:	xchg   edx,eax
  416637:	sub    ch,BYTE PTR [edx]
  416639:	aam    0x94
  41663b:	pop    ebp
  41663c:	mov    cs,edx
  41663e:	mov    eax,ds:0xe54cc5d2
  416643:	dec    DWORD PTR [esi]
  416645:	outs   dx,DWORD PTR ds:[esi]
  416646:	hlt    
  416647:	pusha  
  416648:	jo     0x41665b
  41664a:	xor    DWORD PTR [ecx-0x4fb95722],0x22
  416651:	loopne 0x4165e4
  416653:	arpl   di,dx
  416655:	dec    edx
  416656:	hlt    
  416657:	push   0xffffff92
  416659:	iret   
  41665a:	pop    edx
  41665b:	cmp    al,BYTE PTR [ebx]
  41665d:	jle    0x416668
  41665f:	jmp    0xb0da842
  416664:	jl     0x416645
  416666:	jne    0x416644
  416668:	ror    DWORD PTR [ecx],cl
  41666a:	mov    cl,0xfa
  41666c:	dec    ebp
  41666d:	pop    esp
  41666e:	sbb    BYTE PTR [ecx+edi*8+0x5a],0x2d
  416673:	push   cs
  416674:	pop    ebx
  416675:	pop    ebx
  416676:	mov    ebx,0xe2230339
  41667b:	inc    ebp
  41667c:	push   edx
  41667d:	arpl   WORD PTR gs:[ebp+0x74d2bb6d],cx
  416684:	cwde   
  416685:	leave  
  416686:	enter  0xbd64,0x4f
  41668a:	(bad)  
  41668b:	imul   ebx,DWORD PTR [eax],0x28887dc9
  416691:	adc    ch,BYTE PTR [edi-0x4b]
  416694:	push   ebx
  416695:	xor    edi,ecx
  416697:	pushf  
  416698:	cmp    DWORD PTR [esi],0x715865a
  41669e:	sub    DWORD PTR [edi+0x5a],esi
  4166a1:	adc    BYTE PTR [edx],0x71
  4166a4:	and    BYTE PTR [ecx],ch
  4166a6:	out    dx,eax
  4166a7:	pop    ecx
  4166a8:	mov    ecx,0xe708bd4a
  4166ad:	bound  edi,QWORD PTR [eax+eiz*4-0x72ae9e7d]
  4166b4:	push   esi
  4166b5:	jo     0x41666c
  4166b7:	sub    ecx,edx
  4166b9:	(bad)  
  4166ba:	pop    ebx
  4166bb:	clc    
  4166bc:	or     bl,bl
  4166be:	outs   dx,BYTE PTR ds:[esi]
  4166bf:	ret    
  4166c0:	fcom   DWORD PTR [ecx-0xf3f249c]
  4166c6:	hlt    
  4166c7:	jb     0x41671a
  4166c9:	sar    ebx,1
  4166cb:	ja     0x416682
  4166cd:	imul   ebx,DWORD PTR [ebx+edi*1+0x22],0x40
  4166d2:	cmp    edi,DWORD PTR [ecx-0x3b399e6d]
  4166d8:	cwde   
  4166d9:	call   0x7930f1a0
  4166de:	pop    edx
  4166df:	in     al,dx
  4166e0:	shl    BYTE PTR [ebx-0x6b],1
  4166e3:	cld    
  4166e4:	imul   edx,ebp,0x25ba3a6a
  4166ea:	mov    cl,dh
  4166ec:	clc    
  4166ed:	add    cl,BYTE PTR [edi-0xe2a3dc9]
  4166f3:	add    DWORD PTR [eax-0x28],esi
  4166f6:	mov    eax,0xf24a6f43
  4166fb:	jge    0x41670b
  4166fd:	aas    
  4166fe:	mov    al,ds:0xd3d68b05
  416703:	lock jo 0x416766
  416706:	mov    cl,0xa4
  416708:	not    DWORD PTR [edi-0x7d1dc98a]
  41670e:	icebp  
  41670f:	out    0x6a,al
  416711:	add    bl,BYTE PTR [esi]
  416713:	jae    0x416714
  416715:	ret    
  416716:	ror    ebp,cl
  416718:	mov    edx,0x41a77c5f
  41671d:	cs lahf 
  41671f:	adc    dl,BYTE PTR [esi]
  416721:	xor    DWORD PTR [eax+0x56],esp
  416724:	jne    0x4166f3
  416726:	sahf   
  416727:	add    bh,0xba
  41672a:	xor    BYTE PTR [eax+0x536a47e0],bh
  416730:	imul   esi,DWORD PTR [esi],0x4ada02e1
  416736:	lods   al,BYTE PTR ds:[esi]
  416737:	pop    eax
  416738:	mov    ebx,0xd5abd35a
  41673d:	push   edx
  41673e:	mov    WORD PTR [ecx],ds
  416740:	jmp    0x416705
  416742:	mov    eax,ds:0x7805873d
  416747:	jb     0x4166f3
  416749:	jno    0x41676c
  41674b:	lds    esp,FWORD PTR [eax]
  41674d:	sbb    DWORD PTR [ebx+0x5f],eax
  416750:	add    al,0x25
  416752:	add    al,0x65
  416754:	jg     0x41678a
  416756:	dec    esi
  416757:	xor    DWORD PTR [ebp+0x10],edi
  41675a:	dec    ebp
  41675b:	or     BYTE PTR [esi+ebp*4+0x79],0xc4
  416760:	ror    DWORD PTR [edi-0x1b0f58],0x57
  416767:	sub    al,0x4
  416769:	adc    eax,0x2d32aec3
  41676e:	(bad)  
  41676f:	mov    eax,ds:0x4bb2ae88
  416774:	mov    DWORD PTR [ebp-0x634dd98c],esi
  41677a:	push   edx
  41677b:	js     0x41675e
  41677d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41677e:	xchg   ebp,eax
  41677f:	xor    bh,BYTE PTR [esi-0x34f62765]
  416785:	push   0x3c
  416787:	mov    ch,al
  416789:	push   edx
  41678a:	mov    edx,0xad589a6b
  41678f:	inc    esi
  416790:	or     edx,DWORD PTR [edx+0x24179136]
  416796:	xor    al,0xc3
  416798:	dec    eax
  416799:	out    dx,al
  41679a:	into   
  41679b:	sbb    bl,BYTE PTR [ebp+0x22]
  41679e:	call   0x7e13:0x1f1f7412
  4167a5:	inc    ebx
  4167a6:	in     al,0x34
  4167a8:	pop    eax
  4167a9:	(bad)  
  4167aa:	or     al,0x6e
  4167ac:	xchg   ebp,eax
  4167ad:	into   
  4167ae:	mov    ecx,0x6b77311f
  4167b3:	ret    0x2a79
  4167b6:	ins    BYTE PTR es:[edi],dx
  4167b7:	cmp    DWORD PTR [ecx+0x319f45f],edx
  4167bd:	push   esi
  4167be:	push   ds
  4167bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c0:	lss    esi,FWORD PTR [ebx+0x26]
  4167c4:	push   cs
  4167c5:	jbe    0x416811
  4167c7:	dec    esp
  4167c8:	pop    esp
  4167c9:	(bad)  
  4167ca:	out    0x79,eax
  4167cc:	cmp    al,0x9f
  4167ce:	sbb    eax,0x8451bb7a
  4167d3:	jmp    0x4167bb
  4167d5:	int    0xc
  4167d7:	push   esp
  4167d8:	mov    bh,0x71
  4167da:	(bad)  
  4167db:	lock mov dh,0xfd
  4167de:	lea    edx,[ebx]
  4167e0:	jmp    0x524f2ba3
  4167e5:	inc    ebp
  4167e6:	in     eax,0x73
  4167e8:	aas    
  4167e9:	cdq    
  4167ea:	popf   
  4167eb:	mov    ecx,ds
  4167ed:	stc    
  4167ee:	mov    bh,0x9a
  4167f0:	in     al,dx
  4167f1:	and    ebx,DWORD PTR [edx-0x14]
  4167f4:	xchg   edx,eax
  4167f5:	cmp    eax,0xc66530d9
  4167fa:	ins    DWORD PTR es:[edi],dx
  4167fb:	daa    
  4167fc:	test   BYTE PTR [ecx],bl
  4167fe:	pusha  
  4167ff:	or     bl,al
  416801:	sub    BYTE PTR [ebx],bh
  416803:	mov    ?,WORD PTR [edi]
  416805:	dec    edx
  416806:	lds    esp,FWORD PTR [esi]
  416808:	jns    0x4167f0
  41680a:	dec    edi
  41680b:	cmp    BYTE PTR ds:0x2dde5ab0,dh
  416811:	push   eax
  416812:	test   DWORD PTR [ebp+edx*1-0x6f],esp
  416816:	pop    ebp
  416817:	adc    al,0x72
  416819:	fcom   QWORD PTR [eax-0x75f5672e]
  41681f:	fldcw  WORD PTR es:[edx]
  416822:	push   ss
  416823:	add    edx,DWORD PTR [eax-0x1655b8ce]
  416829:	inc    edx
  41682a:	jns    0x4167f0
  41682c:	cs push es
  41682e:	jb     0x4167b7
  416830:	(bad)  
  416832:	mov    cs,eax
  416834:	(bad)  
  416835:	stc    
  416836:	aas    
  416837:	hlt    
  416838:	ret    0xc2ea
  41683b:	bound  ebx,QWORD PTR [esi]
  41683d:	mov    bh,0x51
  41683f:	jnp    0x41686d
  416841:	in     al,dx
  416842:	xchg   esp,eax
  416843:	repz bound ecx,QWORD PTR ss:[eax+0x757ba2ed]
  41684b:	fistp  DWORD PTR [ecx]
  41684d:	mov    esi,0x50c55ec1
  416852:	shl    DWORD PTR [ecx+0x3b],1
  416855:	mov    ecx,0x9cee5d27
  41685a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41685b:	cmp    esp,esi
  41685d:	xor    ecx,DWORD PTR [ecx-0x20]
  416860:	shl    DWORD PTR fs:[edi-0x4],1
  416864:	mov    ds:0x2c898138,eax
  416869:	lea    sp,[edi-0x322fdc]
  416870:	xor    dh,BYTE PTR [ebx-0x5ac47a95]
  416876:	and    al,0x72
  416878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416879:	data16 or dh,bh
  41687c:	jns    0x416849
  41687e:	or     dh,BYTE PTR [edx+0x19be6906]
  416884:	mov    DWORD PTR [edx-0x5fb80f8],edi
  41688a:	jmp    0xf4fc:0x32eff3d5
  416891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416892:	jo     0x416853
  416894:	xchg   edx,eax
  416895:	or     ebx,eax
  416897:	cmp    BYTE PTR [edi],cl
  416899:	mov    ebp,0x1a0012ca
  41689e:	js     0x4168ff
  4168a0:	aaa    
  4168a1:	(bad)  
  4168a2:	in     al,0x5d
  4168a4:	mov    ds:0x21399a6d,al
  4168a9:	(bad)  
  4168aa:	push   ebx
  4168ab:	sub    al,0x23
  4168ad:	out    0xf3,al
  4168af:	stos   BYTE PTR es:[edi],al
  4168b0:	ins    BYTE PTR es:[edi],dx
  4168b1:	mov    ds:0xda81818f,eax
  4168b6:	add    BYTE PTR [esi-0x3bd87866],cl
  4168bc:	sub    al,BYTE PTR [ebp+0x60a2c1cb]
  4168c2:	(bad)
  4168c6:	fiadd  DWORD PTR [edi-0x59]
  4168c9:	das    
  4168ca:	push   0xffffff95
  4168cc:	jecxz  0x4168f2
  4168ce:	cmp    eax,0x1fb95708
  4168d3:	xor    DWORD PTR [ebx],esi
  4168d5:	jecxz  0x416857
  4168d7:	mov    ds:0x76494d1e,eax
  4168dc:	pop    ecx
  4168dd:	mov    bl,0xd6
  4168df:	push   edx
  4168e0:	push   eax
  4168e1:	pop    esi
  4168e2:	cmp    al,BYTE PTR [ebx+ecx*8+0xf0c7000]
  4168e9:	leave  
  4168ea:	push   0xf47c465d
  4168ef:	push   esi
  4168f0:	call   0xe862:0x6a035f75
  4168f7:	setne  BYTE PTR [esi*8-0x14811ca8]
  4168ff:	into   
  416900:	les    eax,FWORD PTR [ebp+0x25]
  416903:	fnsave [ecx+0x1a]
  416906:	push   esp
  416907:	mov    bh,dl
  416909:	in     al,dx
  41690a:	(bad)  
  41690b:	cmp    eax,esp
  41690d:	mov    bh,0x45
  41690f:	icebp  
  416910:	mov    ecx,0x4aa527e
  416915:	and    edx,esi
  416917:	das    
  416918:	or     dh,bh
  41691a:	mov    bl,0xb3
  41691c:	xchg   esi,eax
  41691d:	xor    dh,ch
  41691f:	out    dx,al
  416920:	mov    esi,0x42d3145b
  416925:	and    edi,0x7756e125
  41692b:	ret    
  41692c:	lods   eax,DWORD PTR cs:[esi]
  41692e:	and    al,0xc1
  416930:	scas   al,BYTE PTR es:[edi]
  416931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416932:	adc    al,0xaf
  416934:	or     ch,BYTE PTR [ebx-0x78]
  416937:	xchg   edx,eax
  416938:	and    al,0x25
  41693a:	sub    BYTE PTR [edi],ah
  41693c:	in     al,0x75
  41693e:	mov    esi,DWORD PTR [ebp-0x4]
  416941:	call   esi
  416943:	mov    DWORD PTR [ebp-0x38],eax
  416946:	cmp    DWORD PTR [ebp-0x38],0x57
  41694a:	jne    0x416958
  41694c:	mov    edx,DWORD PTR [ebp-0x20]
  41694f:	push   edx
  416950:	call   0x401000
  416955:	add    esp,0x4
  416958:	xor    eax,eax
  41695a:	pop    esi
  41695b:	mov    esp,ebp
  41695d:	pop    ebp
  41695e:	ret    
  41695f:	push   ebp
  416960:	mov    ebp,esp
  416962:	sub    esp,0x124
  416968:	xor    eax,eax
  41696a:	mov    esp,ebp
  41696c:	pop    ebp
  41696d:	ret    
  41696e:	push   ebp
  41696f:	mov    ebp,esp
  416971:	sub    esp,0x2c
  416974:	push   ebx
  416975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41697c:	mov    DWORD PTR [ebp-0xc],0x0
  416983:	mov    DWORD PTR [ebp-0x20],0x1
  41698a:	mov    DWORD PTR [ebp-0x10],0x0
  416991:	mov    eax,DWORD PTR [ebp+0xc]
  416994:	mov    DWORD PTR [ebp-0x1c],eax
  416997:	mov    DWORD PTR [ebp-0x18],0x0
  41699e:	mov    DWORD PTR [ebp-0x8],0x0
  4169a5:	mov    DWORD PTR [ebp-0x24],0x0
  4169ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4169af:	sub    ecx,0x1
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	mov    edx,DWORD PTR [ebp+0x8]
  4169b8:	mov    DWORD PTR [ebp-0x10],edx
  4169bb:	mov    DWORD PTR [ebp-0x28],0x1
  4169c2:	mov    eax,DWORD PTR [ebp-0x4]
  4169c5:	add    eax,0x2
  4169c8:	mov    DWORD PTR [ebp-0x4],eax
  4169cb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4169ce:	add    ecx,DWORD PTR [ebp-0x4]
  4169d1:	mov    dl,BYTE PTR [ecx+0x1]
  4169d4:	mov    BYTE PTR [ebp-0x11],dl
  4169d7:	mov    eax,DWORD PTR [ebp-0x4]
  4169da:	add    eax,0x1
  4169dd:	mov    DWORD PTR [ebp-0x4],eax
  4169e0:	mov    cl,BYTE PTR [ebp-0x11]
  4169e3:	mov    BYTE PTR [ebp-0x29],cl
  4169e6:	push   edx
  4169e7:	pop    ebx
  4169e8:	mov    ecx,ebx
  4169ea:	mov    edx,DWORD PTR [ebp-0x10]
  4169ed:	add    edx,DWORD PTR [ebp-0x4]
  4169f0:	mov    al,BYTE PTR [ebp-0x29]
  4169f3:	mov    BYTE PTR [edx],al
  4169f5:	mov    ebx,esi
  4169f7:	mov    ecx,DWORD PTR [ebp+0x14]
  4169fa:	add    ecx,DWORD PTR [ebp-0x8]
  4169fd:	movzx  edx,BYTE PTR [ecx]
  416a00:	mov    DWORD PTR [ebp-0xc],edx
  416a03:	mov    eax,DWORD PTR [ebp-0x8]
  416a06:	mov    ecx,DWORD PTR [ebp-0x28]
  416a09:	add    eax,ecx
  416a0b:	mov    DWORD PTR [ebp-0x8],eax
  416a0e:	mov    eax,DWORD PTR [ebp-0x8]
  416a11:	shr    eax,0x3
  416a14:	mov    ecx,0x1
  416a19:	sub    ecx,eax
  416a1b:	mov    DWORD PTR [ebp-0x20],ecx
  416a1e:	shr    eax,cl
  416a20:	mov    edx,DWORD PTR [ebp-0x8]
  416a23:	imul   edx,DWORD PTR [ebp-0x20]
  416a27:	mov    DWORD PTR [ebp-0x8],edx
  416a2a:	shl    ebx,0x3
  416a2d:	mov    eax,DWORD PTR [ebp-0x10]
  416a30:	add    eax,DWORD PTR [ebp-0x4]
  416a33:	movzx  ecx,BYTE PTR [eax]
  416a36:	add    ecx,DWORD PTR [ebp-0xc]
  416a39:	mov    edx,DWORD PTR [ebp-0x10]
  416a3c:	add    edx,DWORD PTR [ebp-0x4]
  416a3f:	mov    BYTE PTR [edx],cl
  416a41:	mov    eax,DWORD PTR [ebp-0x4]
  416a44:	sub    eax,0x2
  416a47:	mov    DWORD PTR [ebp-0x4],eax
  416a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  416a4d:	cmp    ecx,DWORD PTR [ebp+0x10]
  416a50:	jl     0x4169c2
  416a56:	pop    ebx
  416a57:	mov    esp,ebp
  416a59:	pop    ebp
  416a5a:	ret    
  416a5b:	int3   
  416a5c:	jmp    DWORD PTR ds:0x417008
