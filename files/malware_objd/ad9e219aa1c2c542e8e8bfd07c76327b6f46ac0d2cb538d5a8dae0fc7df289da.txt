
ad9e219aa1c2c542e8e8bfd07c76327b6f46ac0d2cb538d5a8dae0fc7df289da.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0xd555e01a
  402b89:	add    BYTE PTR [esi+ecx*1+0x7a7a7a7a],dh
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0x6],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x1d42f8bf
  402c38:	fnstcw WORD PTR [edi+0x3424bd89]
  402c3e:	xor    al,BYTE PTR [esp+edi*1]
  402c41:	xor    BYTE PTR [ecx-0x5c],bh
  402c44:	aad    0x7f
  402c46:	xchg   cl,bl
  402c48:	jmp    0x402c8c
  402c4a:	jo     0x402c8a
  402c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c4d:	in     eax,0x40
  402c4f:	jbe    0x402bf6
  402c51:	mov    al,ds:0xbf5f6787
  402c56:	push   edi
  402c57:	je     0x402c9f
  402c59:	sbb    DWORD PTR [ebx],edx
  402c5b:	frstor [ebx-0x53ff1440]
  402c61:	ret    
  402c62:	dec    cx
  402c64:	xor    DWORD PTR [edi+0x21],0xffffff8b
  402c68:	retf   
  402c69:	lea    edi,[edi]
  402c6b:	into   
  402c6c:	inc    edx
  402c6d:	dec    ecx
  402c6e:	add    al,0xbf
  402c70:	and    al,0x4e
  402c72:	adc    al,0x5a
  402c74:	push   es
  402c75:	lods   eax,DWORD PTR ds:[esi]
  402c76:	fwait
  402c77:	jno    0x402c9c
  402c79:	pusha  
  402c7a:	idiv   bh
  402c7c:	or     ah,BYTE PTR [edx]
  402c7e:	stos   DWORD PTR es:[edi],eax
  402c7f:	jecxz  0x402cd8
  402c81:	js     0x402ce3
  402c83:	dec    edx
  402c84:	mov    cs,eax
  402c86:	iret   
  402c87:	add    al,0x56
  402c89:	push   esp
  402c8a:	cmp    ebx,DWORD PTR [edi+0x41]
  402c8d:	mov    ds:0xe0da32dc,al
  402c92:	and    BYTE PTR [esi+0x5abc0020],ch
  402c98:	cmp    DWORD PTR [ebx-0x36],esi
  402c9b:	xchg   al,dh
  402c9d:	ficom  DWORD PTR [edx+0x5160e2d2]
  402ca3:	push   edi
  402ca4:	mov    al,ds:0x1380c0ce
  402ca9:	(bad)  
  402cab:	in     eax,dx
  402cac:	push   ds
  402cad:	inc    edi
  402cae:	mov    esi,0x589d2b81
  402cb3:	push   ss
  402cb4:	mov    cl,0xd2
  402cb6:	nop
  402cb7:	xchg   DWORD PTR [ebx+0x623d7f00],esi
  402cbd:	mov    dl,0x55
  402cbf:	daa    
  402cc0:	test   al,0xb1
  402cc2:	push   esp
  402cc3:	sub    ebp,DWORD PTR [ebp-0x80]
  402cc6:	sub    al,BYTE PTR [edx-0x6792e170]
  402ccc:	add    al,0xb1
  402cce:	or     ecx,DWORD PTR [esi+0x176801ab]
  402cd4:	addr16 push 0xd8281123
  402cda:	in     eax,0x1
  402cdc:	push   esp
  402cdd:	add    edi,DWORD PTR [ecx+0x380cdf8e]
  402ce3:	int3   
  402ce4:	aad    0xb7
  402ce6:	pop    ss
  402ce7:	outs   dx,BYTE PTR ds:[esi]
  402ce8:	jnp    0x402c7d
  402cea:	enter  0x26db,0x47
  402cee:	call   0xc407:0x9c970126
  402cf5:	int    0xb4
  402cf7:	dec    BYTE PTR [eax+0x1d]
  402cfa:	fsubr  QWORD PTR [ebx]
  402cfc:	test   al,0x52
  402cfe:	pop    ebp
  402cff:	sbb    ebp,esp
  402d01:	mov    bh,0x96
  402d03:	imul   edx,DWORD PTR [ebx],0xfffffff6
  402d06:	push   esp
  402d07:	sbb    eax,0xbb6912ad
  402d0c:	mov    WORD PTR [esi+esi*1],?
  402d0f:	rcr    BYTE PTR [edx-0x59],0x20
  402d13:	out    dx,eax
  402d14:	pusha  
  402d15:	mov    cl,0xa6
  402d17:	pop    eax
  402d18:	leave  
  402d19:	inc    edi
  402d1a:	pop    ebp
  402d1b:	push   0x45
  402d1d:	push   ds
  402d1e:	call   0x1431:0x95cde896
  402d25:	fs ins BYTE PTR es:[edi],dx
  402d27:	add    al,0x86
  402d29:	loope  0x402d5a
  402d2b:	jge    0x402d73
  402d2d:	pop    esp
  402d2e:	jg     0x402d9d
  402d30:	int    0xb5
  402d32:	and    BYTE PTR [edx+0x5d],ch
  402d35:	cwde   
  402d36:	jge    0x402d79
  402d38:	shl    ebx,cl
  402d3a:	dec    esp
  402d3b:	dec    ebx
  402d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d3d:	repnz inc BYTE PTR [ecx+0x30e70de4]
  402d44:	and    al,0xe4
  402d46:	sbb    BYTE PTR [ecx],ah
  402d48:	fst    DWORD PTR [ebx+0x2381934]
  402d4e:	test   ah,al
  402d50:	inc    ebx
  402d51:	jle    0x402d38
  402d53:	aam    0x6f
  402d55:	icebp  
  402d56:	in     eax,0xe
  402d58:	sti    
  402d59:	nop
  402d5a:	fld    QWORD PTR [ecx-0x3abb50e1]
  402d60:	js     0x402d44
  402d62:	and    eax,0x4bee3005
  402d67:	jge    0x402de8
  402d69:	jno    0x402d5c
  402d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d6c:	mov    dl,0xa
  402d6e:	sub    eax,0x42ea0713
  402d73:	fidiv  WORD PTR [ebx+0x51ac8c95]
  402d79:	or     edx,DWORD PTR [ecx-0x4b]
  402d7c:	add    eax,0x7a4c5d93
  402d81:	pusha  
  402d82:	adc    al,0x2f
  402d84:	adc    ebx,DWORD PTR [ebx]
  402d86:	mov    ?,WORD PTR [ecx]
  402d88:	pop    esp
  402d89:	xor    eax,0x6419e2b9
  402d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d8f:	fisubr WORD PTR [esi]
  402d91:	jmp    0x402d73
  402d93:	pop    ds
  402d94:	mov    dh,0x50
  402d96:	pop    esi
  402d97:	daa    
  402d98:	push   ecx
  402d99:	add    DWORD PTR [ebx-0x33bc649e],ebp
  402d9f:	pop    ss
  402da0:	scas   eax,DWORD PTR es:[edi]
  402da1:	push   0x39
  402da3:	sub    al,0xb6
  402da5:	es pop ebx
  402da7:	add    al,0x63
  402da9:	or     al,BYTE PTR [ebx+0x7d2a409a]
  402daf:	mov    ebx,0x52a61005
  402db4:	neg    edi
  402db6:	push   0xcbb754c3
  402dbb:	scas   eax,DWORD PTR es:[edi]
  402dbc:	push   eax
  402dbd:	cdq    
  402dbe:	push   ebx
  402dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dc0:	inc    ebp
  402dc1:	push   0x3
  402dc3:	mov    bh,0x4d
  402dc5:	jbe    0x402d5f
  402dc7:	pusha  
  402dc8:	pop    esp
  402dc9:	add    BYTE PTR [ecx-0x12],0xd8
  402dcd:	and    bh,ah
  402dcf:	ins    BYTE PTR es:[edi],dx
  402dd0:	stc    
  402dd1:	repnz fcomp QWORD PTR ds:0xdacdb864
  402dd8:	pop    ebx
  402dd9:	sar    BYTE PTR [edx-0x35d1fead],cl
  402ddf:	addr16 mov esi,ebp
  402de2:	and    dl,BYTE PTR [ebx]
  402de4:	stos   DWORD PTR es:[edi],eax
  402de5:	in     al,dx
  402de6:	imul   esi,edx,0xefa3b037
  402dec:	cmp    esp,DWORD PTR [esi+eax*2-0x5861066b]
  402df3:	mov    cs,WORD PTR [edx-0x5c]
  402df6:	adc    BYTE PTR [edi-0x5c],dh
  402df9:	pusha  
  402dfa:	push   edi
  402dfb:	leave  
  402dfc:	dec    esi
  402dfd:	frstor [edi]
  402dff:	rcl    ecx,1
  402e01:	jmp    0xee58:0xa9139525
  402e08:	xchg   edx,eax
  402e09:	sbb    esp,DWORD PTR [esp+ebx*2-0x2e373b1c]
  402e10:	adc    ebx,DWORD PTR [eax+eiz*1-0x6b5daec2]
  402e17:	mov    edx,0xa4541d6d
  402e1c:	mov    ds:0x26a8424a,al
  402e21:	add    bl,ah
  402e23:	fist   WORD PTR [edx]
  402e25:	inc    ebx
  402e26:	dec    ecx
  402e27:	xchg   edx,eax
  402e28:	outs   dx,DWORD PTR ds:[esi]
  402e29:	jmp    0x402dc1
  402e2b:	frstor [esi]
  402e2d:	addr16 xchg ebx,eax
  402e2f:	push   ds
  402e30:	dec    edi
  402e31:	sub    DWORD PTR [ebp-0x43],0xce692150
  402e38:	lock pop ecx
  402e3a:	mov    esp,0x9c211d0
  402e3f:	dec    esp
  402e40:	sub    dh,BYTE PTR [edi]
  402e42:	sahf   
  402e43:	imul   eax,DWORD PTR [edi],0xffffff91
  402e46:	pop    es
  402e47:	bound  ebp,QWORD PTR [ebx-0x41a5ca52]
  402e4d:	stos   BYTE PTR es:[edi],al
  402e4e:	dec    esp
  402e4f:	mov    al,ds:0xf588f76e
  402e54:	in     al,0xf9
  402e56:	push   esi
  402e57:	adc    al,0x66
  402e59:	imul   esp,DWORD PTR [edx+ecx*1],0x1efa7fef
  402e60:	mov    cs:0x12eb089,al
  402e66:	mov    ebp,0xcc21a2c0
  402e6b:	jne    0x402edd
  402e6d:	out    0xb7,eax
  402e6f:	mov    WORD PTR cs:[ecx+0x31ce2245],?
  402e76:	retf   0x4256
  402e79:	fld    DWORD PTR [ebp+0x8d093f]
  402e7f:	xchg   ebx,eax
  402e80:	and    dh,BYTE PTR [ebx]
  402e82:	fisttp DWORD PTR [edx+0x32]
  402e85:	lock (bad) 
  402e87:	jae    0x402ee8
  402e89:	(bad)  
  402e8b:	rcl    cl,0x5b
  402e8e:	push   0xffffffcb
  402e90:	sub    DWORD PTR [edi+edx*4+0x15f93879],edi
  402e97:	outs   dx,BYTE PTR ds:[esi]
  402e98:	arpl   WORD PTR [esi-0x4db9074d],bp
  402e9e:	dec    ebx
  402e9f:	or     esp,DWORD PTR [ebp+0x61774a30]
  402ea5:	and    DWORD PTR [eax-0x11],edx
  402ea8:	and    DWORD PTR [ecx+0x74],ebp
  402eab:	leave  
  402eac:	push   ecx
  402ead:	dec    eax
  402eae:	cmp    ch,BYTE PTR [edi]
  402eb0:	inc    edi
  402eb1:	push   edx
  402eb2:	xchg   esi,eax
  402eb3:	push   eax
  402eb4:	inc    ecx
  402eb5:	cmp    eax,0x6e03f9ba
  402eba:	sbb    ch,BYTE PTR [ebx+eiz*4+0x10d0cbdf]
  402ec1:	xor    DWORD PTR [esi+0x26],edi
  402ec4:	cld    
  402ec5:	dec    esp
  402ec6:	dec    eax
  402ec7:	popf   
  402ec8:	data16 scas al,BYTE PTR es:[edi]
  402eca:	fistp  DWORD PTR [ebx+ebp*8-0x7e71b271]
  402ed1:	data16 das 
  402ed3:	(bad)  
  402ed4:	mov    ds:0x719c6819,al
  402ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eda:	ror    BYTE PTR [edx-0x77],1
  402edd:	dec    eax
  402ede:	inc    eax
  402edf:	jnp    0x402e85
  402ee1:	mov    al,0xe6
  402ee3:	pushf  
  402ee4:	xor    BYTE PTR [esi-0x221b08ec],0x16
  402eeb:	icebp  
  402eec:	rcl    DWORD PTR ds:0xab9af1b7,1
  402ef2:	int    0x59
  402ef4:	sbb    esp,DWORD PTR [esi*2+0x32011ff0]
  402efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402efc:	sti    
  402efd:	or     DWORD PTR [edi-0x7d35a21d],ebp
  402f03:	xchg   DWORD PTR [esi-0x66f140c7],ebx
  402f09:	xchg   ebp,eax
  402f0a:	nop
  402f0b:	jl     0x402e99
  402f0d:	pop    ebx
  402f0e:	sub    edx,DWORD PTR [esi+0x55]
  402f11:	add    bh,0x35
  402f14:	popa   
  402f15:	sub    ebp,DWORD PTR ds:0x503527ce
  402f1b:	mov    edi,0x779066c8
  402f20:	pop    ds
  402f21:	out    0xb9,eax
  402f23:	jb     0x402f7b
  402f25:	dec    ecx
  402f26:	add    dl,ch
  402f28:	inc    edi
  402f29:	cmc    
  402f2a:	mov    al,ds:0x94a47479
  402f2f:	dec    ebx
  402f30:	sub    esi,0x8c4f8972
  402f36:	fwait
  402f37:	adc    dh,BYTE PTR [ebx]
  402f39:	add    DWORD PTR [esi+0x68459ea],0xffffffbd
  402f40:	cmovbe ebp,DWORD PTR [ecx+0x3a]
  402f44:	cdq    
  402f45:	pushf  
  402f46:	jnp    0x402f6c
  402f48:	fimul  DWORD PTR [eax+0x4e72adc6]
  402f4e:	fnstcw WORD PTR [edi]
  402f50:	jl     0x402f3c
  402f52:	sbb    ch,0x58
  402f55:	and    ebp,0x7b
  402f58:	inc    ebp
  402f59:	add    bl,ah
  402f5b:	sub    al,BYTE PTR ds:0x4f0fd11f
  402f61:	lds    esi,FWORD PTR [esp+ebx*1+0x519bdc12]
  402f68:	cmp    ch,BYTE PTR [edx-0x31a095a]
  402f6e:	and    cl,BYTE PTR [ebx]
  402f70:	cmc    
  402f71:	cwde   
  402f72:	jno    0x402f02
  402f74:	sub    al,0x33
  402f76:	jbe    0x402fad
  402f78:	and    al,0xeb
  402f7a:	pop    es
  402f7b:	adc    al,0xa6
  402f7d:	ret    
  402f7e:	fcmovnbe st,st(3)
  402f80:	xor    al,0x36
  402f82:	cmc    
  402f83:	pop    ebp
  402f84:	out    dx,al
  402f85:	fmul   st(2),st
  402f87:	cdq    
  402f88:	fs (bad) 
  402f8b:	imul   ebp,DWORD PTR [esi],0x436338cd
  402f91:	xchg   esi,eax
  402f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f93:	std    
  402f94:	and    al,0x4a
  402f96:	inc    ebx
  402f97:	sub    BYTE PTR [ecx],dl
  402f99:	jb     0x402f63
  402f9b:	dec    esi
  402f9c:	fist   WORD PTR [eax-0x7]
  402f9f:	jo     0x402fce
  402fa1:	repz or al,0x8
  402fa4:	sar    BYTE PTR ss:[ebx],0xb6
  402fa8:	gs mov eax,0xf6af24f9
  402fae:	mov    DWORD PTR [esp+edi*8],ecx
  402fb1:	pop    ecx
  402fb2:	inc    ecx
  402fb3:	shr    DWORD PTR [ecx+0x6a77abc],cl
  402fb9:	idiv   edx
  402fbb:	add    ebp,ebp
  402fbd:	pusha  
  402fbe:	icebp  
  402fbf:	mov    esi,edi
  402fc1:	es (bad) 
  402fc3:	ss call 0xaa409e4c
  402fc9:	jae    0x402fcd
  402fcb:	fild   WORD PTR [edi]
  402fcd:	mov    edi,esp
  402fcf:	pop    ecx
  402fd0:	mov    DWORD PTR [esi-0x1e2d6e3a],ebx
  402fd6:	push   edi
  402fd7:	retf   
  402fd8:	sub    ebp,ebx
  402fda:	adc    bl,0xa9
  402fdd:	sahf   
  402fde:	test   eax,0x48aa87a7
  402fe3:	cmp    eax,0x52fac377
  402fe8:	sub    al,0x46
  402fea:	repz dec esi
  402fec:	outs   dx,DWORD PTR ds:[esi]
  402fed:	push   ebp
  402fee:	mov    BYTE PTR [edx],cl
  402ff0:	dec    ebp
  402ff1:	adc    dl,0x3c
  402ff4:	in     eax,dx
  402ff5:	inc    ebp
  402ff6:	push   edx
  402ff7:	aaa    
  402ff8:	rcl    dl,1
  402ffa:	xor    cl,bh
  402ffc:	sub    edi,ecx
  402ffe:	fs jecxz 0x402fca
  403001:	mov    esi,esp
  403003:	push   esp
  403004:	jbe    0x402fb0
  403006:	adc    DWORD PTR gs:[esp+eax*1-0x6663d58e],0x50
  40300f:	mov    esi,0x23915818
  403014:	jge    0x403017
  403016:	inc    ecx
  403017:	and    BYTE PTR [eax-0x78afae3],bl
  40301d:	retf   0x2e9f
  403020:	xchg   ebx,eax
  403021:	(bad)  
  403022:	push   ss
  403023:	inc    ecx
  403024:	xchg   ecx,eax
  403025:	dec    ebx
  403026:	push   ss
  403027:	xchg   ebx,eax
  403028:	mov    dh,0x6c
  40302a:	lea    esi,[ecx]
  40302c:	sub    esi,DWORD PTR [ebp+edi*1+0x4fc1454d]
  403033:	hlt    
  403034:	sahf   
  403035:	xchg   ebx,eax
  403036:	out    dx,eax
  403037:	jbe    0x402ff2
  403039:	sbb    bh,BYTE PTR [esi-0x7bc5c00d]
  40303f:	test   BYTE PTR [eax],0x64
  403042:	xchg   esp,eax
  403043:	cwde   
  403044:	mov    bl,0xcc
  403046:	in     eax,0xd4
  403048:	mov    bh,0xaa
  40304a:	mov    bl,0x89
  40304c:	cmp    al,0xb8
  40304e:	popf   
  40304f:	xor    cl,al
  403051:	lods   al,BYTE PTR ds:[esi]
  403052:	adc    eax,DWORD PTR [ebx]
  403054:	std    
  403055:	loopne 0x4030d5
  403057:	jnp    0x402fdc
  403059:	mov    ecx,0x5db9870d
  40305e:	neg    DWORD PTR [edi+ebx*2+0x5f]
  403062:	mov    bl,0xc4
  403064:	js     0x403009
  403066:	arpl   WORD PTR [ecx+0x38],cx
  403069:	jno    0x403047
  40306b:	xor    esi,DWORD PTR [eax]
  40306d:	mov    edi,0x13f7fc74
  403072:	scas   al,BYTE PTR es:[edi]
  403073:	(bad)  
  403074:	out    dx,eax
  403075:	xchg   esp,eax
  403076:	ja     0x403096
  403078:	sub    BYTE PTR [ebp*2-0x7ab786df],0x7c
  403080:	pop    eax
  403081:	and    ah,cl
  403083:	lahf   
  403084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403085:	bound  edi,QWORD PTR [eax-0x37f209d7]
  40308b:	hlt    
  40308c:	adc    DWORD PTR [ebx],0x5
  40308f:	xchg   ebx,eax
  403090:	push   ecx
  403091:	test   DWORD PTR [esi+0x4bc7168f],esp
  403097:	adc    DWORD PTR [edx],eax
  403099:	adc    dl,BYTE PTR [eax+0x2e022e6f]
  40309f:	stos   BYTE PTR es:[edi],al
  4030a0:	push   ebx
  4030a1:	test   BYTE PTR [esp+edi*8-0x62d457f4],0x9
  4030a9:	mul    DWORD PTR [ebx]
  4030ab:	rcl    BYTE PTR [ecx+0x76],1
  4030ae:	(bad)  
  4030af:	or     al,0x66
  4030b1:	in     eax,dx
  4030b2:	out    0x33,al
  4030b4:	xchg   DWORD PTR [esi+0xbec07fb],ebx
  4030ba:	push   di
  4030bc:	mov    al,0xf5
  4030be:	inc    esp
  4030bf:	jecxz  0x403069
  4030c1:	add    ch,dl
  4030c3:	jmp    0x20b6:0x23596126
  4030ca:	fcmovnb st,st(6)
  4030cc:	in     eax,dx
  4030cd:	mov    dl,0xd0
  4030cf:	clc    
  4030d0:	in     al,dx
  4030d1:	mov    ebp,0x8fd7031c
  4030d6:	jle    0x403097
  4030d8:	cmp    al,0x40
  4030da:	jb     0x40314e
  4030dc:	sbb    al,0x72
  4030de:	xor    eax,0x2c871acd
  4030e3:	mov    ebp,0x74740e0b
  4030e8:	(bad)  
  4030e9:	leave  
  4030ea:	aam    0xda
  4030ec:	sbb    eax,0xbf9f3059
  4030f1:	xor    bl,dh
  4030f3:	jae    0x4030c8
  4030f5:	cmp    BYTE PTR [esi+0x5a],0x47
  4030f9:	cwde   
  4030fa:	sub    al,BYTE PTR [edx+ebp*8]
  4030fd:	jmp    0x403116
  4030ff:	leave  
  403100:	jns    0x403136
  403102:	and    al,0x5e
  403104:	iret   
  403105:	lds    ecx,FWORD PTR ds:0x1e2f5a35
  40310b:	mov    dh,0x78
  40310d:	add    DWORD PTR [edx+0x2716097c],0x7d
  403114:	jl     0x403123
  403116:	popf   
  403117:	mov    dh,BYTE PTR [edx+0x73]
  40311a:	pop    ebp
  40311b:	push   edx
  40311c:	sahf   
  40311d:	mov    ebx,0x35bf8bb0
  403122:	call   0xb49c:0x1395dced
  403129:	mov    DWORD PTR [ebx+eax*1],ecx
  40312c:	mov    ch,0xa3
  40312e:	test   esp,edi
  403130:	or     BYTE PTR [ebx],bl
  403132:	cmc    
  403133:	sbb    DWORD PTR [ebp-0x6c],esp
  403136:	xor    al,0xf0
  403138:	cld    
  403139:	(bad)  
  40313a:	or     al,0x25
  40313c:	dec    ebp
  40313d:	mov    bh,bh
  40313f:	lds    esi,FWORD PTR [ebx]
  403141:	dec    edi
  403142:	je     0x403105
  403144:	mov    dl,0xd0
  403146:	mov    esi,0x98833533
  40314b:	in     al,dx
  40314c:	xor    al,0xf1
  40314e:	adc    al,ah
  403150:	or     dh,BYTE PTR [esi+0x4d]
  403153:	sar    DWORD PTR [eax],0xf6
  403156:	pop    edx
  403157:	into   
  403158:	dec    edx
  403159:	retf   0xf9a9
  40315c:	popa   
  40315d:	pusha  
  40315e:	adc    al,0x6c
  403160:	sbb    bl,BYTE PTR [edx+0x1bf8abed]
  403166:	jne    0x403128
  403168:	jmp    0x80e5aa4b
  40316d:	pop    eax
  40316e:	jle    0x40316e
  403170:	loope  0x403115
  403172:	js     0x4031bf
  403174:	aam    0xe8
  403176:	jbe    0x403150
  403178:	pop    ds
  403179:	aaa    
  40317a:	pop    ds
  40317b:	dec    ecx
  40317c:	or     ecx,edi
  40317e:	iret   
  40317f:	xchg   esi,eax
  403180:	in     eax,dx
  403181:	aaa    
  403182:	int    0xbb
  403184:	int    0xb9
  403186:	ficomp DWORD PTR [esi+0x47]
  403189:	psrlw  mm2,QWORD PTR [esi]
  40318c:	mov    ch,ah
  40318e:	pop    ebp
  40318f:	jg     0x4031b6
  403191:	jle    0x403158
  403193:	fbld   TBYTE PTR [edx+ebx*8-0x36]
  403197:	ds pop ebx
  403199:	push   esi
  40319a:	sbb    BYTE PTR [ebx-0x2c],0xdd
  40319e:	pop    eax
  40319f:	cmp    ebx,ebp
  4031a1:	shl    DWORD PTR [esi+0x4756d93b],cl
  4031a7:	test   DWORD PTR [eax-0x76],esi
  4031aa:	jg     0x4031bd
  4031ac:	mov    esp,DWORD PTR [edx+0x36]
  4031af:	(bad)  
  4031b0:	ficomp DWORD PTR [edx+0x1e]
  4031b3:	jecxz  0x40318f
  4031b5:	xchg   edi,eax
  4031b6:	add    ecx,DWORD PTR [edx+esi*1]
  4031b9:	pop    eax
  4031ba:	(bad)  [edi+0x2c]
  4031bd:	mov    ch,0xf4
  4031bf:	dec    edx
  4031c0:	test   DWORD PTR [edx-0x24a3e0e9],esp
  4031c6:	or     edx,DWORD PTR [edx+0x19b80fbf]
  4031cc:	xor    DWORD PTR ds:0x6354a24b,0xffffff94
  4031d3:	rcl    BYTE PTR [ebp-0x7e],cl
  4031d6:	mov    es,WORD PTR [edx-0x2d]
  4031d9:	mov    edx,0x60085920
  4031de:	jmp    0x486f:0x5778a7eb
  4031e5:	add    al,0x39
  4031e7:	xor    al,0x70
  4031e9:	into   
  4031ea:	mov    BYTE PTR [edx+0x1f],0xb
  4031ee:	fiadd  DWORD PTR [edi-0x662725a5]
  4031f4:	inc    ebx
  4031f5:	icebp  
  4031f6:	sbb    eax,0x27a8b749
  4031fb:	xchg   BYTE PTR [ebx-0x23da3378],dh
  403201:	jo     0x403218
  403203:	jo     0x40322a
  403205:	out    0x4d,al
  403207:	inc    edi
  403208:	and    BYTE PTR ds:0x117d,cl
  40320d:	sub    eax,0x99516a5a
  403212:	(bad)  
  403213:	or     BYTE PTR [eax],bh
  403215:	dec    edi
  403216:	xor    BYTE PTR [edx-0x62],ch
  403219:	ds mov ch,0x3f
  40321c:	xchg   ebp,eax
  40321d:	fwait
  40321e:	into   
  40321f:	in     eax,dx
  403220:	das    
  403221:	sti    
  403222:	add    eax,0xeb418814
  403227:	loop   0x403224
  403229:	dec    esp
  40322a:	outs   dx,DWORD PTR ds:[esi]
  40322b:	mov    BYTE PTR [ebx],0x31
  40322e:	sbb    bl,BYTE PTR [edx-0x6a]
  403231:	add    al,bl
  403233:	repnz xchg esp,eax
  403235:	inc    esi
  403236:	out    0xe3,al
  403238:	pop    edi
  403239:	and    dl,bh
  40323b:	push   ebx
  40323c:	mov    ebx,ecx
  40323e:	push   esi
  40323f:	dec    DWORD PTR [edi+ebx*8+0x410f49a9]
  403246:	lds    esp,FWORD PTR [edi+edx*8-0x6a]
  40324a:	out    0x0,al
  40324c:	outs   dx,BYTE PTR ds:[esi]
  40324d:	(bad)  [ebx+0x63]
  403250:	fnsave [ebp+0x37]
  403253:	xchg   ebx,eax
  403254:	xchg   esi,eax
  403255:	int    0x70
  403257:	jb     0x4032a2
  403259:	inc    esi
  40325a:	inc    esp
  40325b:	xor    eax,0x684f57a5
  403260:	rcl    dl,0xcd
  403263:	push   eax
  403264:	ret    
  403265:	stos   BYTE PTR es:[edi],al
  403266:	inc    esp
  403267:	js     0x40323d
  403269:	lods   al,BYTE PTR ds:[esi]
  40326a:	adc    cl,ch
  40326c:	stos   BYTE PTR es:[edi],al
  40326d:	pop    ecx
  40326e:	xor    al,0x9c
  403270:	pop    ebx
  403271:	sbb    DWORD PTR [ebp+0x39],edx
  403274:	cdq    
  403275:	xchg   ecx,eax
  403276:	and    eax,0x35762822
  40327b:	cmp    DWORD PTR [edi],esi
  40327d:	inc    esp
  40327e:	(bad)  
  40327f:	jmp    0xf9c78bb5
  403284:	and    al,0xa7
  403286:	(bad)  
  403287:	int    0x67
  403289:	lahf   
  40328a:	fwait
  40328b:	mov    esi,0x6c5d3966
  403290:	loopne 0x4032f8
  403292:	cmp    bl,BYTE PTR [edx]
  403294:	clc    
  403295:	sub    bh,bh
  403297:	xlat   BYTE PTR ds:[ebx]
  403298:	jecxz  0x403313
  40329a:	(bad)  
  40329b:	mov    eax,0x5d0fbee1
  4032a0:	sar    DWORD PTR [esi],cl
  4032a2:	lds    ecx,FWORD PTR [eax-0x61d4b1f3]
  4032a8:	inc    esi
  4032a9:	dec    eax
  4032aa:	dec    eax
  4032ab:	js     0x403239
  4032ad:	shl    DWORD PTR [esp+ebp*8],cl
  4032b0:	jle    0x403299
  4032b2:	call   0x6c55:0xd888f684
  4032b9:	and    al,0x48
  4032bb:	scas   eax,DWORD PTR es:[edi]
  4032bc:	jmp    0x8404:0x5bf3e66a
  4032c3:	imul   BYTE PTR [edi]
  4032c5:	mov    esp,0xe24e1e69
  4032ca:	cdq    
  4032cb:	sahf   
  4032cc:	inc    edi
  4032cd:	sti    
  4032ce:	stos   DWORD PTR es:[edi],eax
  4032cf:	shr    DWORD PTR [esi],cl
  4032d1:	test   al,0xa6
  4032d3:	pusha  
  4032d4:	mov    dl,0x6e
  4032d6:	add    DWORD PTR [edx-0x19],esp
  4032d9:	xor    eax,DWORD PTR [ecx-0x2d]
  4032dc:	xchg   ebx,eax
  4032dd:	jmp    0xabf877cf
  4032e2:	leave  
  4032e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032e4:	mov    es,WORD PTR [eax]
  4032e6:	dec    edx
  4032e7:	fiadd  DWORD PTR [eax]
  4032e9:	cli    
  4032ea:	lock dec esp
  4032ec:	xor    eax,0x7d2fff57
  4032f1:	dec    esi
  4032f2:	sbb    al,0xa3
  4032f4:	jo     0x4032af
  4032f6:	fwait
  4032f7:	mov    bl,BYTE PTR [eax-0x7e0cac64]
  4032fd:	sub    eax,0x8ca8a7a5
  403302:	out    0xf8,al
  403304:	mov    esp,0xbf553974
  403309:	(bad)  
  40330a:	dec    ebp
  40330b:	aad    0xb6
  40330d:	jbe    0x403377
  40330f:	pop    ebx
  403310:	popa   
  403311:	ror    BYTE PTR [edx],cl
  403313:	(bad)  
  403314:	nop
  403315:	and    DWORD PTR es:[edx+eiz*4+0x62],ebx
  40331a:	xchg   esp,eax
  40331b:	jecxz  0x40335b
  40331d:	mov    ch,0xaa
  40331f:	das    
  403320:	push   ecx
  403321:	jbe    0x4032e3
  403323:	(bad)  
  403324:	popf   
  403325:	ins    DWORD PTR es:[edi],dx
  403326:	jp     0x4032e4
  403328:	sti    
  403329:	sub    eax,0xf3eca6d6
  40332e:	sub    BYTE PTR [eax-0x55],ch
  403331:	sbb    BYTE PTR [eax],cl
  403333:	popa   
  403334:	arpl   cx,ax
  403336:	mov    edx,0xe9a25ab7
  40333b:	xor    DWORD PTR [esi+0x45],ebx
  40333e:	cwde   
  40333f:	scas   eax,DWORD PTR es:[edi]
  403340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403341:	into   
  403342:	add    eax,0x38eb10fa
  403347:	jbe    0x40330e
  403349:	fs call 0x8d83:0x96263da7
  403351:	loope  0x4033b7
  403353:	mov    ecx,0x6e9b28e8
  403358:	cmc    
  403359:	imul   eax,DWORD PTR [ecx],0xf23f23b8
  40335f:	sub    DWORD PTR ds:0x801c8a92,0xffffffd6
  403366:	inc    edx
  403367:	sbb    edx,edx
  403369:	add    eax,0xaef5229d
  40336e:	mov    esi,0xcbeae68c
  403373:	adc    BYTE PTR [eax+0x1462b119],0x5b
  40337a:	jmp    0x699:0x14d0f936
  403381:	cs iret 
  403383:	stos   DWORD PTR es:[edi],eax
  403384:	jno    0x403360
  403386:	dec    ebx
  403387:	scas   al,BYTE PTR es:[edi]
  403388:	mov    ebp,0x66e339ef
  40338d:	in     al,dx
  40338e:	shr    BYTE PTR [edi-0x6e],1
  403391:	adc    bh,BYTE PTR [esi+0xb9aa1c2]
  403397:	daa    
  403398:	ret    0x531e
  40339b:	push   esi
  40339c:	adc    al,BYTE PTR [edx+ecx*1]
  40339f:	cmp    BYTE PTR [ecx],cl
  4033a1:	push   ds
  4033a2:	jp     0x40337c
  4033a4:	das    
  4033a5:	jge    0x403341
  4033a7:	cwde   
  4033a8:	jmp    0xb7fb:0x9b770406
  4033af:	neg    DWORD PTR [edx]
  4033b1:	xor    BYTE PTR [edx+0x3da3bd44],ah
  4033b7:	aaa    
  4033b8:	jb     0x403377
  4033ba:	icebp  
  4033bb:	stc    
  4033bc:	dec    edx
  4033bd:	rol    cl,0x87
  4033c0:	test   eax,0xab80dcea
  4033c5:	pop    esi
  4033c6:	addr16 mov bh,al
  4033c9:	imul   edi,DWORD PTR [eax-0x69f2f018],0x43
  4033d0:	nop
  4033d1:	cmp    eax,0x84b0fc74
  4033d6:	adc    edx,DWORD PTR [esi+0x4f]
  4033d9:	inc    edi
  4033da:	aaa    
  4033db:	xor    bl,bh
  4033dd:	mov    bh,0xe9
  4033df:	test   DWORD PTR ss:[ebx-0x3c],eax
  4033e3:	pop    ecx
  4033e4:	or     edx,edi
  4033e6:	std    
  4033e7:	pop    ds
  4033e8:	ins    BYTE PTR es:[edi],dx
  4033e9:	mov    esp,0x491dac3
  4033ee:	leave  
  4033ef:	fs push esp
  4033f1:	jmp    0x538e:0x144f3a51
  4033f8:	mov    edx,DWORD PTR [ebp-0x7c891392]
  4033fe:	or     DWORD PTR [ebx+edi*1+0x35],0xdcf3a697
  403406:	ret    
  403407:	jbe    0x4033e4
  403409:	push   esi
  40340a:	and    BYTE PTR ds:0x5b5c9d0c,bl
  403410:	dec    esp
  403411:	(bad)  
  403412:	jnp    0x40344e
  403414:	das    
  403415:	mov    ebx,cs
  403417:	inc    esi
  403418:	test   eax,0x5e1bfc11
  40341d:	sbb    ebp,esi
  40341f:	add    ecx,DWORD PTR [ecx*1+0x6f7afb15]
  403426:	add    al,0x7a
  403428:	cmc    
  403429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40342a:	je     0x4033f9
  40342c:	jecxz  0x40341b
  40342e:	adc    DWORD PTR [edi],ecx
  403430:	(bad)  
  403431:	jg     0x40348c
  403433:	fs push ecx
  403435:	sbb    BYTE PTR [esi-0x745fdd4c],dl
  40343b:	or     eax,0x4dccab0c
  403440:	in     al,dx
  403441:	stos   BYTE PTR es:[edi],al
  403442:	inc    eax
  403443:	cld    
  403444:	les    eax,FWORD PTR [edx-0x35]
  403447:	add    bh,ah
  403449:	push   edi
  40344a:	xchg   ebp,eax
  40344b:	sbb    eax,0x57791959
  403450:	mov    eax,ds:0xcb4ef7a7
  403455:	ret    
  403456:	bnd jmp 0x40343e
  403459:	dec    ax
  40345b:	jnp    0x403436
  40345d:	aam    0xba
  40345f:	pop    edi
  403460:	mov    edx,ebx
  403462:	test   DWORD PTR [edx+0x55],esp
  403465:	push   ebp
  403466:	xor    DWORD PTR [eax+ecx*1],edi
  403469:	mov    eax,ds:0xafae8c6a
  40346e:	daa    
  40346f:	mov    bl,0xbd
  403471:	sar    BYTE PTR [ecx+eiz*4-0x40],1
  403475:	cmp    al,0x22
  403477:	cmp    bh,dl
  403479:	mov    WORD PTR ds:0xe0182f80,es
  40347f:	or     al,0xb0
  403481:	sub    BYTE PTR [ebx+0x3999d782],dh
  403487:	je     0x4034f4
  403489:	outs   dx,BYTE PTR ds:[esi]
  40348a:	mov    esp,0xe96640f7
  40348f:	enter  0xf7c5,0x4e
  403493:	wbinvd 
  403495:	inc    ebx
  403496:	test   esp,eax
  403498:	hlt    
  403499:	mov    ecx,0xf1caa75
  40349e:	icebp  
  40349f:	fnsave [ecx]
  4034a1:	jecxz  0x403430
  4034a3:	aad    0x61
  4034a5:	sar    DWORD PTR [edx],0x51
  4034a8:	cwde   
  4034a9:	xchg   ecx,eax
  4034aa:	push   0x76
  4034ac:	mov    al,0x42
  4034ae:	adc    BYTE PTR [ebx-0x63],al
  4034b1:	sbb    ebp,DWORD PTR [ebx]
  4034b3:	fdiv   st(0),st
  4034b5:	cmp    DWORD PTR [eax-0x6b],0xb518424d
  4034bc:	sub    al,0xe2
  4034be:	lds    edi,FWORD PTR [ebp+0x25]
  4034c1:	and    al,0xe6
  4034c3:	add    cl,ch
  4034c5:	neg    DWORD PTR [edi]
  4034c7:	lods   eax,DWORD PTR ds:[esi]
  4034c8:	(bad)  
  4034c9:	pop    ebx
  4034ca:	jle    0x4034a3
  4034cc:	fld    QWORD PTR [ebx-0x3def401c]
  4034d2:	fdivrp st(7),st
  4034d4:	mov    al,0xf8
  4034d6:	push   esi
  4034d7:	jmp    0xd3aec60c
  4034dc:	arpl   WORD PTR [ecx-0x198b691b],bx
  4034e2:	daa    
  4034e3:	push   ds
  4034e4:	sub    BYTE PTR [ebp+0x33],cl
  4034e7:	pop    es
  4034e8:	ret    
  4034e9:	xchg   edi,eax
  4034ea:	push   0x2b5f136f
  4034ef:	mov    eax,0xc70daaec
  4034f4:	test   DWORD PTR [eax+0x256ddd06],edi
  4034fa:	adc    eax,DWORD PTR [ecx]
  4034fc:	gs pushf 
  4034fe:	je     0x403565
  403500:	ins    BYTE PTR es:[edi],dx
  403501:	jae    0x403517
  403503:	lea    ebx,[eax+0xbbc8b51]
  403509:	and    eax,0x8d11eec8
  40350e:	in     eax,0x7d
  403510:	xchg   esp,eax
  403511:	mov    bl,0x38
  403513:	sbb    eax,0x8ea06b7e
  403518:	or     BYTE PTR [edx-0x4556abcc],bh
  40351e:	in     al,0xe0
  403520:	in     eax,dx
  403521:	and    edx,DWORD PTR [ebx+0x5418d45f]
  403527:	mov    dl,0xbc
  403529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40352a:	mov    bl,0xb4
  40352c:	rcr    BYTE PTR [ebx+0x5617e47b],1
  403532:	leave  
  403533:	mov    ds:0x3d6f00ea,al
  403538:	data16 jge 0x403590
  40353b:	dec    esi
  40353c:	cmp    esi,DWORD PTR [ebp+0x1e35830]
  403542:	cwde   
  403543:	inc    ebx
  403544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403545:	cmp    eax,0xc8ca60f1
  40354a:	mov    eax,0x1af8f194
  40354f:	bound  esp,QWORD PTR es:[esi-0x66]
  403553:	je     0x40357a
  403555:	bound  edi,QWORD PTR [ebx+0x3c]
  403558:	lahf   
  403559:	add    al,0x5a
  40355b:	add    eax,0x254d1da1
  403560:	and    edx,DWORD PTR [edx+0x325415e]
  403566:	fadd   QWORD PTR [ecx]
  403568:	push   cs
  403569:	aad    0xa0
  40356b:	dec    edx
  40356c:	ja     0x403569
  40356e:	cmp    edx,DWORD PTR [ebx-0x2a]
  403571:	fstp   st(6)
  403573:	fsub   DWORD PTR [ecx-0x54]
  403576:	iret   
  403577:	imul   ebx,DWORD PTR [eax],0xbe4a6395
  40357d:	pop    eax
  40357e:	outs   dx,DWORD PTR ds:[esi]
  40357f:	stc    
  403580:	cmc    
  403581:	mov    ecx,0x4e33c642
  403586:	dec    esp
  403588:	adc    eax,ebx
  40358a:	stos   BYTE PTR es:[edi],al
  40358b:	dec    ecx
  40358c:	into   
  40358d:	fnstsw WORD PTR [ebx+0x11]
  403590:	lock pop ds
  403592:	popf   
  403593:	fisttp WORD PTR [ecx+0x6b]
  403596:	fwait
  403597:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403599:	add    DWORD PTR [edi+0x76],eax
  40359c:	sbb    edx,ebx
  40359e:	fcomp  DWORD PTR [eax-0x17]
  4035a1:	cs addr16 cmp al,0x26
  4035a5:	in     eax,0xcf
  4035a7:	mov    ebp,0xd691250f
  4035ac:	stos   DWORD PTR es:[edi],eax
  4035ad:	neg    BYTE PTR [ebp-0x3ff526a9]
  4035b3:	cwde   
  4035b4:	cmp    BYTE PTR [ecx],bl
  4035b6:	fmul   DWORD PTR [ebp+0x75ffb5e1]
  4035bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035bd:	fsub   QWORD PTR [esi-0x6]
  4035c1:	inc    esp
  4035c2:	jb     0x403574
  4035c4:	dec    esi
  4035c5:	pop    es
  4035c6:	jp     0x4035f8
  4035c8:	gs into 
  4035ca:	mov    ebx,0xf212e29f
  4035cf:	xchg   ebx,eax
  4035d0:	dec    eax
  4035d1:	cmp    eax,0x1f35fe9d
  4035d6:	add    BYTE PTR [edx+0x649efb2b],0x67
  4035dd:	cmp    cl,BYTE PTR [eax+0x352c3130]
  4035e3:	(bad)  
  4035e5:	jns    0x403608
  4035e7:	xor    ebx,DWORD PTR [ebx+0x1]
  4035ea:	sbb    edx,DWORD PTR [edx+0x65]
  4035ed:	scas   al,BYTE PTR es:[edi]
  4035ee:	xchg   esp,eax
  4035ef:	dec    ebx
  4035f0:	add    al,0x4d
  4035f2:	xor    DWORD PTR [edi+0x6108e82],ebp
  4035f8:	pop    edx
  4035f9:	sub    al,0xd9
  4035fb:	mov    cl,dh
  4035fd:	push   ss
  4035fe:	retf   
  4035ff:	pop    es
  403600:	bound  ebp,QWORD PTR [eax+0x7eada0cd]
  403606:	mov    al,0xba
  403608:	ins    DWORD PTR es:[edi],dx
  403609:	jmp    0xd2ada9d0
  40360e:	cmp    ah,dh
  403610:	mov    eax,0x27515d9
  403615:	test   al,0xc2
  403617:	scas   eax,DWORD PTR es:[edi]
  403618:	adc    DWORD PTR ds:0xa05c4d7e,edi
  40361e:	cld    
  40361f:	repz pop esp
  403621:	imul   eax,DWORD PTR [esi],0xb357636f
  403627:	fnstsw WORD PTR [ebp+0x41]
  40362a:	dec    ebp
  40362b:	(bad)  
  40362d:	in     eax,0xe9
  40362f:	and    eax,DWORD PTR [edx+0x4cbdef08]
  403635:	(bad)  
  403636:	hlt    
  403637:	ds in  eax,0x99
  40363a:	pop    edx
  40363b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40363c:	adc    BYTE PTR [eax-0x15ad8a22],cl
  403642:	(bad)  
  403643:	ror    edx,1
  403645:	aas    
  403646:	mov    ch,0x96
  403648:	mov    ecx,0xcd9707e2
  40364d:	stos   DWORD PTR es:[edi],eax
  40364e:	ss pushf 
  403650:	xor    BYTE PTR [ebp-0x63cad7cf],ah
  403656:	sbb    eax,0x56052a98
  40365b:	jmp    0xcd9bb148
  403660:	inc    eax
  403661:	push   ebp
  403662:	mov    ebp,DWORD PTR [edx+0x7d]
  403665:	ror    ecx,cl
  403667:	sub    dh,bh
  403669:	addr16 aad 0xa2
  40366c:	lods   al,BYTE PTR ds:[esi]
  40366d:	xor    ecx,DWORD PTR ds:[ebx+0x4ec99b62]
  403674:	xchg   ebx,eax
  403675:	retf   0xf220
  403678:	xor    ah,BYTE PTR [eax+0x775ff024]
  40367e:	ficomp DWORD PTR [esi]
  403680:	or     edi,edi
  403682:	aaa    
  403683:	sbb    eax,0x4829541f
  403688:	(bad)  
  403689:	cmp    BYTE PTR [ebp-0x4bed0b9e],dh
  40368f:	imul   esp,edx,0xffffffa9
  403692:	push   ebx
  403693:	int3   
  403694:	push   0xabeead77
  403699:	cmc    
  40369a:	or     ecx,DWORD PTR [ecx]
  40369c:	test   DWORD PTR [ebp+0x39],edi
  40369f:	pop    esp
  4036a0:	xchg   DWORD PTR [esi+0x23d90140],edi
  4036a6:	pop    edx
  4036a7:	outs   dx,BYTE PTR ds:[esi]
  4036a8:	pop    ebp
  4036a9:	xchg   edi,eax
  4036aa:	jbe    0x403690
  4036ac:	fcmovnbe st,st(2)
  4036ae:	fwait
  4036af:	xor    eax,0xbb3f261
  4036b4:	or     DWORD PTR [edi+edx*1+0x49],ebx
  4036b8:	(bad)  
  4036b9:	gs ds sub edx,0x7d
  4036be:	js     0x4036f1
  4036c0:	push   es
  4036c1:	sar    esi,1
  4036c3:	popf   
  4036c4:	shl    ebx,0x2c
  4036c7:	mov    ?,WORD PTR [ecx-0x7f]
  4036ca:	ja     0x4036c4
  4036cc:	dec    eax
  4036cd:	cwde   
  4036ce:	rcl    BYTE PTR [edx],cl
  4036d0:	and    ebx,DWORD PTR [edi+0x1]
  4036d3:	jmp    0x6112:0xc0a7bede
  4036da:	shl    BYTE PTR [edi],1
  4036dc:	lods   eax,DWORD PTR ds:[esi]
  4036dd:	ds ret 0x13bf
  4036e1:	in     al,0x70
  4036e3:	xchg   ebx,eax
  4036e4:	jp     0x4036b5
  4036e6:	sbb    bh,cl
  4036e8:	inc    ebx
  4036e9:	repnz stos DWORD PTR es:[edi],eax
  4036eb:	stos   BYTE PTR es:[edi],al
  4036ec:	add    BYTE PTR [ebp-0x2ba92094],al
  4036f2:	xchg   edx,eax
  4036f3:	mov    dl,dh
  4036f5:	push   ebx
  4036f6:	jo     0x40370b
  4036f8:	jle    0x4036a1
  4036fa:	mov    WORD PTR [ebp+eiz*8-0x71f88b35],es
  403701:	inc    eax
  403702:	stos   BYTE PTR es:[edi],al
  403703:	fistp  DWORD PTR [ebx+ecx*2]
  403706:	xor    DWORD PTR fs:[ebx+esi*2-0x5d],ebx
  40370b:	sbb    eax,0x20df39b8
  403710:	push   edi
  403711:	push   0xffffffe1
  403713:	punpckhwd mm1,QWORD PTR [esi-0x13]
  403717:	or     eax,DWORD PTR [edx-0x1c]
  40371a:	or     DWORD PTR [edx-0x61],esp
  40371d:	or     eax,0x12c52128
  403722:	psrad  mm1,QWORD PTR [ecx+0x17]
  403726:	ret    
  403727:	push   esi
  403728:	mov    edi,DWORD PTR ds:0xe7b5cf47
  40372e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40372f:	sbb    al,0xec
  403731:	add    esi,0x48
  403734:	call   0x61a30534
  403739:	mov    al,0x7b
  40373b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40373c:	pop    edx
  40373d:	pop    eax
  40373e:	out    0x98,eax
  403740:	es inc esp
  403742:	push   eax
  403743:	cld    
  403744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403745:	hlt    
  403746:	lea    esp,[edx+ebx*4]
  403749:	push   ss
  40374a:	fsubr  DWORD PTR [eax+0x8f7d82d]
  403750:	mov    ch,0xe9
  403752:	dec    ebp
  403753:	cmp    BYTE PTR [ecx+0x4ac125df],0xf1
  40375a:	enter  0x1b24,0xb7
  40375e:	jg     0x403767
  403760:	call   0x66f786ad
  403765:	jbe    0x4037b7
  403767:	lds    ebx,FWORD PTR [esi+0x12]
  40376a:	inc    eax
  40376b:	cmp    eax,0xc312c552
  403770:	rcr    edi,cl
  403772:	xchg   edx,eax
  403773:	shr    DWORD PTR [edx],1
  403775:	out    0x25,eax
  403777:	cdq    
  403778:	clc    
  403779:	push   ebx
  40377a:	xchg   esi,eax
  40377b:	pop    eax
  40377c:	cld    
  40377d:	shr    BYTE PTR [esi],1
  40377f:	test   edi,ecx
  403781:	xor    eax,0x7b517565
  403786:	or     al,0x1b
  403788:	pop    es
  403789:	and    BYTE PTR [edi-0x53fd2811],0xa0
  403790:	or     al,0x5c
  403792:	jb     0x4037bc
  403794:	pop    DWORD PTR ds:0x380d9534
  40379a:	xchg   BYTE PTR [ebx+esi*4+0x3be16212],bh
  4037a1:	icebp  
  4037a2:	fisub  DWORD PTR [eax+0x5f]
  4037a5:	(bad)  
  4037a7:	lock in eax,0xdc
  4037aa:	cmp    esi,eax
  4037ac:	add    al,0xf1
  4037ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037af:	fucomi st,st(0)
  4037b1:	sub    edi,DWORD PTR [edi-0x428d82b8]
  4037b7:	pop    edi
  4037b8:	js     0x403777
  4037ba:	add    eax,0x781c3fed
  4037bf:	pop    edx
  4037c0:	retf   
  4037c1:	push   0x588be3f2
  4037c6:	mov    DWORD PTR [edx+0x12b09d01],esp
  4037cc:	rol    esp,1
  4037ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037cf:	dec    esp
  4037d0:	fnstsw WORD PTR [ecx+0x40]
  4037d3:	and    eax,0xf68c365f
  4037d8:	enter  0xda3c,0xc9
  4037dc:	xor    edi,DWORD PTR [eax]
  4037de:	inc    esi
  4037df:	push   ds
  4037e0:	fs test esp,0xe6eb5990
  4037e7:	pop    ds
  4037e8:	mov    edx,0x9a7a3fe9
  4037ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ee:	sahf   
  4037ef:	jge    0x5288a75e
  4037f5:	jge    0x403778
  4037f7:	push   0xffffff80
  4037f9:	stc    
  4037fa:	push   esi
  4037fb:	fs in  al,dx
  4037fd:	mov    edx,DWORD PTR [ecx+0x45]
  403800:	loopne 0x4037ef
  403802:	xor    ah,al
  403804:	and    BYTE PTR [edx],al
  403806:	aas    
  403807:	ret    0x2631
  40380a:	mov    edi,0x1d23635
  40380f:	jle    0x403795
  403811:	cmp    eax,0xc8f9311e
  403816:	outs   dx,BYTE PTR gs:[esi]
  403818:	push   ds
  403819:	inc    ebp
  40381a:	out    0x82,al
  40381c:	in     al,dx
  40381d:	dec    edi
  40381e:	out    dx,al
  40381f:	xchg   esi,eax
  403820:	ss mov ch,0xf1
  403823:	xor    ebx,DWORD PTR [ecx]
  403825:	pusha  
  403826:	loope  0x403814
  403828:	sub    esp,edi
  40382a:	fs pop eax
  40382c:	popa   
  40382d:	cmp    bh,ch
  40382f:	aam    0x8d
  403831:	add    dl,BYTE PTR ds:0x25eb87d4
  403837:	or     eax,0xc92e58c9
  40383c:	adc    ebx,DWORD PTR [ebp+ecx*2-0x25]
  403840:	loop   0x4037fb
  403842:	dec    edx
  403843:	aam    0xa8
  403845:	xor    ecx,eax
  403847:	fild   QWORD PTR [esi]
  403849:	shr    DWORD PTR [edx-0x597197a7],cl
  40384f:	mov    eax,ds:0x96e5f909
  403854:	test   eax,0x51aabb67
  403859:	or     BYTE PTR [eax+ebp*1],ch
  40385c:	or     BYTE PTR [ecx+0x4e],cl
  40385f:	retf   0x6ba4
  403862:	and    al,0xfe
  403864:	add    al,BYTE PTR ds:0x891e2d
  40386b:	pop    ecx
  40386c:	ficom  WORD PTR [ebp+0x36]
  40386f:	cld    
  403870:	call   0xc9997a4a
  403875:	fs std 
  403877:	and    al,0x2a
  403879:	and    eax,0xe7c63ab1
  40387e:	cmp    ebp,DWORD PTR [ebp-0x49]
  403881:	cmp    BYTE PTR [edi+0x6d720162],ah
  403887:	and    bh,BYTE PTR [edx]
  403889:	pop    es
  40388a:	cmc    
  40388b:	outs   dx,DWORD PTR ds:[esi]
  40388c:	ins    BYTE PTR es:[edi],dx
  40388d:	xchg   ecx,eax
  40388e:	ret    
  40388f:	and    DWORD PTR [ebx-0x26],edx
  403892:	aam    0xf8
  403894:	out    0x10,eax
  403896:	js     0x403882
  403898:	addr16 repz xchg si,ax
  40389c:	or     ebp,DWORD PTR [ecx+esi*8+0x7c]
  4038a0:	outs   dx,DWORD PTR ds:[esi]
  4038a1:	push   edi
  4038a2:	xchg   esi,eax
  4038a3:	or     DWORD PTR [edx-0x2dcb4c61],esp
  4038a9:	inc    edi
  4038aa:	lds    edx,FWORD PTR [edi-0x18]
  4038ad:	imul   ebx,esi,0x44
  4038b0:	(bad)  
  4038b1:	fbld   TBYTE PTR [esi-0x64]
  4038b4:	sub    bh,bl
  4038b6:	icebp  
  4038b7:	in     al,dx
  4038b8:	sbb    DWORD PTR [ebx+0x74a40fad],ecx
  4038be:	add    esp,eax
  4038c0:	out    0xed,al
  4038c2:	hlt    
  4038c3:	rcl    ebx,1
  4038c5:	cmp    DWORD PTR [ecx+0x6104bd7a],0xffffffa2
  4038cc:	ret    0xd279
  4038cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038d0:	arpl   WORD PTR [ebx+edi*1-0x43],di
  4038d4:	or     ebp,DWORD PTR [ebp-0x155fa82]
  4038da:	adc    DWORD PTR [ecx],eax
  4038dc:	cmp    esp,DWORD PTR [edi+0x6d9a3609]
  4038e2:	sahf   
  4038e3:	das    
  4038e4:	and    al,0xb5
  4038e6:	and    BYTE PTR [esi-0x59],0x78
  4038ea:	sub    edx,DWORD PTR [esi+edx*8-0x31]
  4038ee:	push   eax
  4038ef:	sub    al,0x4a
  4038f1:	mov    esi,0x5536a3e
  4038f6:	call   FWORD PTR ds:0xfac2a98a
  4038fc:	fnstcw WORD PTR [ebp+0x18cbe3bf]
  403902:	iret   
  403903:	(bad)  
  403904:	in     al,dx
  403905:	rol    ah,0x6e
  403908:	adc    DWORD PTR [ecx+edi*1+0x1e133ee0],0xffffffc7
  403910:	mov    cl,0x82
  403912:	test   al,0x76
  403914:	dec    edx
  403915:	mov    esi,0x742a9710
  40391a:	pop    ds
  40391b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40391c:	jp     0x40392e
  40391e:	call   0x2b78:0xde89fc03
  403925:	mov    ah,0xec
  403927:	pop    eax
  403928:	push   esp
  403929:	pop    es
  40392a:	push   ds
  40392b:	lods   al,BYTE PTR ds:[esi]
  40392c:	cwde   
  40392d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40392e:	jns    0x4038eb
  403930:	sbb    esi,DWORD PTR [edx]
  403932:	ins    BYTE PTR es:[edi],dx
  403933:	mov    dh,0x28
  403935:	adc    ebp,ebp
  403937:	test   eax,0xb706b09
  40393c:	scas   eax,DWORD PTR es:[edi]
  40393d:	out    dx,al
  40393e:	cmp    bh,BYTE PTR [ecx]
  403940:	or     al,0x30
  403942:	xchg   edx,eax
  403943:	(bad)
  403947:	sub    al,0xc6
  403949:	pusha  
  40394a:	sbb    bh,BYTE PTR [ebx-0x7255cf89]
  403950:	push   eax
  403951:	arpl   bx,si
  403953:	pop    eax
  403954:	dec    ebx
  403955:	aad    0x7
  403957:	mov    ecx,0xacb6dc73
  40395c:	sbb    DWORD PTR [eax-0x52664a71],0x15d9025f
  403966:	and    BYTE PTR [esi-0x71],ch
  403969:	xchg   edx,eax
  40396a:	adc    eax,0xbcfba749
  40396f:	lock pop es
  403971:	inc    ebp
  403972:	mov    esi,0x9f61e291
  403977:	dec    edx
  403978:	sbb    ah,BYTE PTR [ebx-0x56]
  40397b:	push   ds
  40397c:	ret    
  40397d:	in     al,0xb1
  40397f:	scas   eax,DWORD PTR es:[edi]
  403980:	call   0x495a1b56
  403985:	mov    al,0x95
  403987:	outs   dx,BYTE PTR ds:[esi]
  403988:	mov    ds:0x383b790d,eax
  40398d:	sbb    dl,BYTE PTR [ebx+edi*4-0x67]
  403991:	fild   WORD PTR [ecx-0x3c]
  403994:	cmp    eax,0x5ed56cc7
  403999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40399a:	fcom   DWORD PTR [edx-0x73]
  40399d:	dec    ecx
  40399e:	mov    cl,0xbf
  4039a0:	(bad)  
  4039a1:	popf   
  4039a2:	mov    esi,0x24661885
  4039a7:	into   
  4039a8:	mov    ebp,0x153b8e62
  4039ad:	jle    0x403a1a
  4039af:	aas    
  4039b0:	call   0x2b49:0x5451dbe8
  4039b7:	add    al,0xc1
  4039b9:	adc    al,0xa4
  4039bb:	aad    0x2e
  4039bd:	or     eax,0x8e78078a
  4039c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039c3:	clc    
  4039c4:	icebp  
  4039c5:	loope  0x403a2e
  4039c7:	daa    
  4039c8:	outs   dx,BYTE PTR ds:[esi]
  4039c9:	pop    edi
  4039ca:	xchg   DWORD PTR [edx],esp
  4039cc:	jg     0x403973
  4039ce:	inc    ecx
  4039cf:	cli    
  4039d0:	sub    al,0x2f
  4039d2:	mov    eax,ds:0xb9431be5
  4039d7:	pop    esi
  4039d8:	test   DWORD PTR [eax+0x0],edi
  4039db:	inc    ecx
  4039dc:	cld    
  4039dd:	outs   dx,BYTE PTR ds:[esi]
  4039de:	mov    eax,ds:0xa65a2aba
  4039e3:	mov    ebp,0xbae3dff0
  4039e8:	inc    esp
  4039e9:	(bad)  [eax-0x25c807a]
  4039ef:	push   eax
  4039f0:	jmp    0x403977
  4039f2:	bound  edi,QWORD PTR [eax+0x45]
  4039f5:	or     al,0x8b
  4039f7:	or     ah,BYTE PTR [esi+0x30]
  4039fa:	pop    es
  4039fb:	jae    0x403a71
  4039fd:	shr    BYTE PTR [ebx-0x7c],1
  403a00:	cmp    ebx,DWORD PTR ds:0x3cef0ad4
  403a06:	jb     0x4039fe
  403a08:	sahf   
  403a09:	or     DWORD PTR ds:0x18f0968f,ebp
  403a0f:	in     al,dx
  403a10:	call   FWORD PTR [ecx-0x74]
  403a13:	mov    bh,0x84
  403a15:	lea    ecx,[ecx+0x49]
  403a18:	inc    edi
  403a19:	scas   al,BYTE PTR es:[edi]
  403a1a:	shr    DWORD PTR [eax-0x68],cl
  403a1d:	lea    esp,[edx+0x39]
  403a20:	int    0x96
  403a22:	jecxz  0x4039e3
  403a24:	push   edi
  403a25:	dec    BYTE PTR ds:0xd586708a
  403a2b:	(bad)  
  403a2f:	in     eax,dx
  403a30:	sbb    ah,BYTE PTR [eax]
  403a32:	jl     0x403a06
  403a34:	sbb    DWORD PTR [edi+0x3d],ebp
  403a37:	adc    al,0xb3
  403a39:	mov    ch,0x85
  403a3b:	or     cl,BYTE PTR [ebp+0x46]
  403a3e:	(bad)  
  403a3f:	bswap  eax
  403a41:	addr16 push esp
  403a43:	imul   DWORD PTR [edi+ecx*4+0x4e]
  403a47:	ss ds xor al,0x52
  403a4b:	stos   BYTE PTR es:[edi],al
  403a4c:	shr    DWORD PTR [ebx-0x4],cl
  403a4f:	add    al,BYTE PTR [eax]
  403a51:	iret   
  403a52:	neg    DWORD PTR ds:0x6884fb30
  403a58:	sub    eax,0xbc46d5ee
  403a5d:	inc    ecx
  403a5e:	les    eax,FWORD PTR [ecx-0x2f9e5425]
  403a64:	jno    0x403ae2
  403a66:	push   ebp
  403a67:	push   ss
  403a68:	shl    cl,0x89
  403a6b:	mov    cl,0x5c
  403a6d:	adc    cl,BYTE PTR [ebx+0x25c039a]
  403a73:	pop    edx
  403a74:	cld    
  403a75:	in     eax,0x7c
  403a77:	dec    esi
  403a78:	xchg   ebp,eax
  403a79:	mov    ss,WORD PTR [ebx]
  403a7b:	push   ss
  403a7c:	xlat   BYTE PTR ds:[ebx]
  403a7d:	dec    ebp
  403a7e:	das    
  403a7f:	popf   
  403a80:	fwait
  403a81:	jnp    0x403b00
  403a83:	ins    DWORD PTR es:[edi],dx
  403a84:	pop    edx
  403a85:	outs   dx,BYTE PTR ds:[esi]
  403a86:	(bad)  
  403a87:	into   
  403a88:	jmp    0x4e75f2f9
  403a8d:	xchg   BYTE PTR [edx+eiz*1],dl
  403a90:	mov    al,0xed
  403a92:	xor    ch,BYTE PTR [edx+ebx*8+0x67f12fe3]
  403a99:	jmp    FWORD PTR [eax+0x52c5745a]
  403a9f:	add    esi,DWORD PTR [ebx]
  403aa1:	mov    ch,0xa5
  403aa3:	cmp    eax,0x209bbfa1
  403aa8:	pop    edx
  403aa9:	adc    ch,BYTE PTR [eax]
  403aab:	mov    eax,ds:0x52c2d6a9
  403ab0:	mov    edi,0x4c3ad93e
  403ab5:	das    
  403ab6:	call   0x6214:0xbd65d75d
  403abd:	mov    dh,0xbe
  403abf:	pop    ebx
  403ac0:	cmp    al,0x5c
  403ac2:	repz sbb DWORD PTR [ebx+0x21],ebp
  403ac6:	mov    esp,0x127929
  403acb:	cmp    DWORD PTR [eax-0x27e0e197],0xdc718e80
  403ad5:	mov    ebp,0xc3c75109
  403ada:	push   0xffaab85b
  403adf:	mov    BYTE PTR [ebp+eiz*2+0x76],0xe4
  403ae4:	dec    edx
  403ae5:	fwait
  403ae6:	mov    bl,0x5b
  403ae8:	push   edi
  403ae9:	add    eax,0xc9170c24
  403aee:	aam    0xb9
  403af0:	cli    
  403af1:	pop    edx
  403af2:	mov    al,ds:0x28d6933c
  403af7:	mov    ebp,0x9a5a3663
  403afc:	push   ds
  403afd:	(bad)  [esi+0x621a65e7]
  403b03:	out    0x2e,al
  403b05:	ja     0x403ad4
  403b07:	(bad)  
  403b08:	and    eax,0xba71296c
  403b0d:	ficom  WORD PTR [edx]
  403b0f:	sub    al,BYTE PTR [edx+0x3a]
  403b12:	pop    eax
  403b13:	into   
  403b14:	push   0xffffffaa
  403b16:	push   esp
  403b17:	adc    BYTE PTR [ecx+0x6ad723c4],dh
  403b1d:	cli    
  403b1e:	sbb    dl,ch
  403b20:	enter  0x7a17,0x3
  403b24:	mov    ecx,0xb88116b8
  403b29:	jmp    FWORD PTR [ecx-0x1c]
  403b2c:	rol    edx,cl
  403b2e:	adc    edx,esp
  403b30:	in     al,dx
  403b31:	(bad)  
  403b32:	std    
  403b33:	pop    eax
  403b34:	jb     0x403baf
  403b36:	idiv   BYTE PTR [edi]
  403b38:	pop    ecx
  403b39:	xchg   DWORD PTR [ecx-0x6d],edx
  403b3c:	and    DWORD PTR [ecx-0x8],eax
  403b3f:	jmp    0x3244:0x4d1702d6
  403b46:	jmp    0x9446f466
  403b4b:	aaa    
  403b4c:	loope  0x403b30
  403b4e:	sbb    eax,0x801c31d8
  403b53:	arpl   WORD PTR [esi],cx
  403b55:	cmp    BYTE PTR [esi-0x1c1ebca1],dh
  403b5b:	cmp    bl,dl
  403b5d:	mov    edx,0xd5ce0109
  403b62:	jmp    0x403b3a
  403b64:	sub    DWORD PTR [edi+0x383e939f],esp
  403b6a:	lea    edi,[bp+si-0x2546]
  403b6f:	leave  
  403b70:	enter  0xcccc,0xb1
  403b74:	inc    edi
  403b75:	dec    esp
  403b76:	not    esi
  403b78:	mov    ecx,0x96e1ca88
  403b7d:	or     al,0x7f
  403b7f:	push   esp
  403b80:	(bad)  
  403b81:	sbb    ch,BYTE PTR [edi]
  403b83:	xchg   ecx,eax
  403b84:	fcom   DWORD PTR [ebp+0x6f]
  403b87:	fs stc 
  403b89:	xchg   ecx,eax
  403b8a:	sti    
  403b8b:	or     dl,dl
  403b8d:	mov    al,0xa5
  403b8f:	xchg   ebx,eax
  403b90:	inc    esp
  403b91:	pushf  
  403b92:	inc    ah
  403b94:	and    BYTE PTR [edx],dh
  403b96:	lods   eax,DWORD PTR ds:[esi]
  403b97:	pushf  
  403b98:	sbb    ah,BYTE PTR [eax]
  403b9a:	jbe    0x403c17
  403b9c:	aam    0x5f
  403b9e:	inc    eax
  403b9f:	push   ds
  403ba0:	mov    bp,WORD PTR [ecx]
  403ba3:	pop    ecx
  403ba4:	xchg   DWORD PTR [edi-0xe],esi
  403ba7:	das    
  403ba8:	fisub  WORD PTR [ebx*8+0x3a4036d4]
  403baf:	repz pop es
  403bb1:	pop    ebx
  403bb2:	lods   eax,DWORD PTR ds:[esi]
  403bb3:	cmc    
  403bb4:	mov    edi,0x3e1383
  403bb9:	cmc    
  403bba:	sub    dh,ah
  403bbc:	gs jge 0x403b62
  403bbf:	or     al,0x3e
  403bc1:	inc    esp
  403bc2:	xchg   esp,eax
  403bc3:	retf   0xa5aa
  403bc6:	add    BYTE PTR [ebx-0x2fe0beb6],0x69
  403bcd:	mov    eax,ds:0x8f99922e
  403bd2:	pop    es
  403bd3:	mov    bh,0x84
  403bd5:	pop    ss
  403bd6:	push   0x6b6c0bf9
  403bdb:	xchg   ecx,eax
  403bdc:	xchg   DWORD PTR [edx+0x56],ecx
  403bdf:	dec    eax
  403be0:	mov    ds:0x474c0403,eax
  403be5:	in     eax,0x4c
  403be7:	ds sti 
  403be9:	inc    eax
  403bea:	adc    BYTE PTR [esi*4-0x2163c601],dl
  403bf1:	push   esp
  403bf2:	div    DWORD PTR [ebx+0x1f3d34fd]
  403bf8:	or     al,0xd4
  403bfa:	std    
  403bfb:	push   edx
  403bfc:	mov    DWORD PTR [edi+0xcdf8c40],ebx
  403c02:	aad    0x93
  403c04:	adc    edx,edi
  403c06:	cmp    eax,DWORD PTR [ecx]
  403c08:	jge    0x403c08
  403c0a:	ins    DWORD PTR es:[edi],dx
  403c0b:	fdivr  st(4),st
  403c0d:	adc    cl,ah
  403c0f:	in     eax,dx
  403c10:	or     DWORD PTR [edi],edi
  403c12:	pop    ebx
  403c13:	jb     0x403c87
  403c15:	icebp  
  403c16:	ret    
  403c17:	scas   al,BYTE PTR es:[edi]
  403c18:	pop    edi
  403c19:	mov    ds:0x23b9e67c,al
  403c1e:	fisttp DWORD PTR [edi]
  403c20:	sub    al,0x11
  403c22:	and    al,BYTE PTR [edx+0x6f2131d]
  403c28:	pop    edx
  403c29:	xchg   edi,eax
  403c2a:	outs   dx,DWORD PTR ds:[esi]
  403c2b:	ja     0x403bc3
  403c2d:	xor    dh,BYTE PTR [ecx+edi*4+0x54d7ba82]
  403c34:	shr    BYTE PTR es:[ecx+0x3bed5af4],0x4b
  403c3c:	(bad)  
  403c3d:	ins    DWORD PTR es:[edi],dx
  403c3e:	(bad)  
  403c3f:	mov    edi,0xfe6c61d1
  403c44:	daa    
  403c45:	jns    0x403bf1
  403c47:	ins    DWORD PTR es:[edi],dx
  403c48:	fs pop eax
  403c4a:	test   al,0x85
  403c4c:	stc    
  403c4d:	test   bl,bl
  403c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c50:	or     eax,0xc471ee61
  403c55:	xlat   BYTE PTR ds:[ebx]
  403c56:	aaa    
  403c57:	lea    edi,[edi-0x5c362025]
  403c5d:	or     DWORD PTR [ebx+esi*4-0x2a8e3659],ecx
  403c64:	adc    ecx,DWORD PTR [ebp+0x2a]
  403c67:	aas    
  403c68:	ret    
  403c69:	push   esi
  403c6a:	mov    al,ds:0xc9b01189
  403c6f:	push   edi
  403c70:	stos   DWORD PTR es:[edi],eax
  403c71:	fsub   DWORD PTR [ebp+0x45]
  403c74:	push   ds
  403c75:	push   eax
  403c76:	inc    edx
  403c77:	dec    edi
  403c78:	pop    edi
  403c79:	stc    
  403c7a:	mov    dh,0x63
  403c7c:	cmp    ebx,esp
  403c7e:	out    0x84,al
  403c80:	out    0xcf,eax
  403c82:	scas   eax,DWORD PTR es:[edi]
  403c83:	add    DWORD PTR [eax-0x460cd174],esp
  403c89:	and    al,0xe5
  403c8b:	add    bh,ch
  403c8d:	push   esp
  403c8e:	fisubr DWORD PTR [ebp+0xd]
  403c91:	fs retf 0x867
  403c95:	imul   ebx,eax,0x63
  403c98:	jb     0x403ce7
  403c9a:	sahf   
  403c9b:	cli    
  403c9c:	mov    ds:0x1f64fd6f,eax
  403ca1:	mov    al,ds:0x112a9bc8
  403ca6:	lock sub cl,al
  403ca9:	xor    ch,BYTE PTR [edi]
  403cab:	and    al,BYTE PTR [ecx+0x73b9e37a]
  403cb1:	cld    
  403cb2:	popf   
  403cb3:	pop    es
  403cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cb5:	adc    BYTE PTR ds:0x31cfeb0d,ah
  403cbb:	mov    bh,0x9c
  403cbd:	mov    al,ds:0x5f34efcc
  403cc2:	push   ecx
  403cc3:	in     al,dx
  403cc4:	cli    
  403cc5:	xchg   esp,eax
  403cc6:	lea    edx,[edi]
  403cc8:	jmp    0x403d02
  403cca:	mov    DWORD PTR [ebx-0x73],ebp
  403ccd:	repnz outs dx,DWORD PTR ds:[esi]
  403ccf:	inc    esp
  403cd0:	jb     0x403c76
  403cd2:	jmp    0x8e904c69
  403cd7:	mov    esp,0x5715c958
  403cdc:	jns    0x403c6c
  403cde:	inc    ebx
  403cdf:	xchg   edi,eax
  403ce0:	push   0x76d03c4b
  403ce5:	ins    DWORD PTR es:[edi],dx
  403ce6:	xchg   ebp,eax
  403ce7:	adc    BYTE PTR [edx-0x5],ch
  403cea:	xor    ch,dl
  403cec:	xchg   ebx,eax
  403ced:	push   ecx
  403cee:	xchg   ebp,eax
  403cef:	sub    eax,0xfb41f3fc
  403cf4:	dec    esp
  403cf5:	push   0x49c67c59
  403cfa:	dec    edx
  403cfb:	int3   
  403cfc:	jo     0x403cf9
  403cfe:	inc    eax
  403cff:	xor    al,0x15
  403d01:	add    BYTE PTR [ecx-0x644314c1],ah
  403d07:	push   es
  403d08:	and    dl,BYTE PTR [ecx*2-0x390791eb]
  403d0f:	call   0x2cc7:0x70e76d50
  403d16:	sbb    eax,0xc2bf630b
  403d1b:	push   0xffffffd0
  403d1d:	mov    cl,0x75
  403d1f:	xchg   ecx,eax
  403d20:	lods   al,BYTE PTR ds:[esi]
  403d21:	inc    ebp
  403d22:	mov    eax,ds:0x4b8bc471
  403d27:	ja     0x403cc1
  403d29:	xor    al,0xaa
  403d2b:	test   DWORD PTR [ecx-0x72859063],ebp
  403d31:	and    edi,eax
  403d33:	inc    edi
  403d34:	inc    eax
  403d35:	inc    esp
  403d36:	je     0x403cdf
  403d38:	adc    dl,BYTE PTR [ebx-0x45ec7e1d]
  403d3e:	cmp    bl,ch
  403d40:	mov    esi,0xfb2af62e
  403d45:	aam    0x66
  403d47:	adc    eax,DWORD PTR [ebp-0x43]
  403d4a:	cmp    al,BYTE PTR [edx+ebx*4+0x6c6a8d4c]
  403d51:	push   0x75
  403d53:	push   edi
  403d54:	and    dl,BYTE PTR [eax-0xf9e23b5]
  403d5a:	icebp  
  403d5b:	jg     0x403d12
  403d5d:	and    al,0xdf
  403d5f:	test   BYTE PTR [esi-0x15b763bf],0xf
  403d66:	mov    es,WORD PTR [eax-0x2bf89fbb]
  403d6c:	mov    ?,eax
  403d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d6f:	cmp    ch,BYTE PTR [ecx]
  403d71:	test   eax,0x4f789725
  403d76:	lahf   
  403d77:	lods   al,BYTE PTR ds:[esi]
  403d78:	(bad)  
  403d79:	lea    ebp,[eax+0x7f]
  403d7c:	pop    edx
  403d7d:	rcr    BYTE PTR [ebx+0x4928f330],cl
  403d83:	test   al,0x78
  403d85:	jecxz  0x403df7
  403d87:	inc    ah
  403d89:	hlt    
  403d8a:	repz xor bl,0x15
  403d8e:	dec    esp
  403d8f:	aam    0x1c
  403d91:	popf   
  403d92:	gs pushf 
  403d94:	leave  
  403d95:	mov    eax,0x9bd0296a
  403d9a:	scas   eax,DWORD PTR es:[edi]
  403d9b:	dec    edx
  403d9c:	mov    ds:0x1248c789,al
  403da1:	pop    es
  403da2:	xchg   DWORD PTR [edx],ecx
  403da4:	repz jbe 0x403d76
  403da7:	sub    dh,BYTE PTR [esi+0x4e]
  403daa:	add    esi,DWORD PTR [edx+edi*4]
  403dad:	lds    ecx,FWORD PTR [eax+0x125b5c97]
  403db3:	test   eax,0xdfc52c19
  403db8:	clc    
  403db9:	ret    
  403dba:	add    DWORD PTR [ecx+edx*1-0x3d5af2ce],edi
  403dc1:	ss cld 
  403dc3:	mov    esp,0x445daecc
  403dc8:	or     al,0x34
  403dca:	jl     0x403def
  403dcc:	out    0x1a,eax
  403dce:	xor    al,0x95
  403dd0:	shl    cl,cl
  403dd2:	sub    al,BYTE PTR ds:0x1a101610
  403dd8:	inc    eax
  403dd9:	dec    ecx
  403dda:	add    esp,DWORD PTR [ecx]
  403ddc:	xchg   ah,al
  403dde:	retf   0xbf4
  403de1:	sbb    al,0x3
  403de3:	adc    bh,dl
  403de5:	addr16 mov dh,0x51
  403de8:	push   cs
  403de9:	icebp  
  403dea:	sbb    cl,BYTE PTR [edi-0x65f0da15]
  403df0:	lods   eax,DWORD PTR ds:[esi]
  403df1:	push   es
  403df2:	mov    esi,0xba622511
  403df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403df8:	(bad)  
  403df9:	in     al,dx
  403dfa:	mov    ch,0xff
  403dfc:	inc    ebp
  403dfd:	sbb    al,bh
  403dff:	outs   dx,DWORD PTR ds:[esi]
  403e00:	test   DWORD PTR [edi],ebx
  403e02:	adc    bh,ch
  403e04:	mov    al,0x85
  403e06:	rcr    BYTE PTR [esi],0xe9
  403e09:	xlat   BYTE PTR ds:[ebx]
  403e0a:	je     0x31848368
  403e10:	adc    DWORD PTR [edi],eax
  403e12:	ret    
  403e13:	ror    DWORD PTR [ecx],cl
  403e15:	sbb    BYTE PTR [ebx+0x7a],dh
  403e18:	xor    eax,0xce9751a0
  403e1d:	sub    esp,ebx
  403e1f:	add    BYTE PTR [ecx*8-0x4b1a24a9],bh
  403e26:	push   edx
  403e27:	fiadd  DWORD PTR [esp+ebx*8-0x624ea9cc]
  403e2e:	or     DWORD PTR [edx],eax
  403e30:	test   DWORD PTR [edi+0x40062fae],esi
  403e36:	ret    0x4676
  403e39:	mov    ds:0x66bb6a6,al
  403e3e:	(bad)  [ebx]
  403e40:	call   0x347c5be9
  403e45:	dec    ebp
  403e46:	fist   WORD PTR [edx+edx*1]
  403e49:	pop    ecx
  403e4a:	push   ss
  403e4b:	sub    DWORD PTR [ecx-0x4d90a6c7],ecx
  403e51:	mov    cl,0xd7
  403e53:	dec    ebx
  403e54:	jp     0x403e5c
  403e56:	mov    DWORD PTR [ebx],ecx
  403e58:	mov    bh,0xa4
  403e5a:	jp     0x403eda
  403e5c:	imul   esi,DWORD PTR [ecx-0x61],0x6b
  403e60:	mov    ecx,0x9cff1649
  403e65:	stos   BYTE PTR es:[edi],al
  403e66:	sbb    DWORD PTR [ebx],0x48
  403e69:	call   0x727c:0xa73b2ab0
  403e70:	(bad)  
  403e71:	add    al,0x38
  403e73:	gs sti 
  403e75:	jo     0x403ede
  403e77:	(bad)  
  403e78:	retf   0x4e58
  403e7b:	in     eax,dx
  403e7c:	cmp    eax,0x558ff281
  403e81:	(bad)  
  403e82:	jno    0x403e69
  403e84:	xor    al,0xdf
  403e86:	xchg   esi,eax
  403e87:	mov    al,ds:0xd63f0416
  403e8c:	popa   
  403e8d:	repz loop 0x403e68
  403e90:	inc    edi
  403e91:	jle    0x403e36
  403e93:	or     eax,0xca5e8ddb
  403e98:	inc    edi
  403e99:	pop    edx
  403e9a:	inc    eax
  403e9b:	fsub   st(7),st
  403e9d:	icebp  
  403e9e:	(bad)  [edi]
  403ea0:	jle    0x403e60
  403ea2:	jae    0x403e4b
  403ea4:	idiv   BYTE PTR [ebx+0x4eca948a]
  403eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eab:	xchg   esp,eax
  403eac:	test   edi,ebp
  403eae:	int    0xfb
  403eb0:	pop    esp
  403eb1:	in     al,0x29
  403eb3:	mov    BYTE PTR [eax-0x49],dl
  403eb6:	data16 lods al,BYTE PTR ds:[esi]
  403eb8:	and    edx,DWORD PTR [ecx+0x40]
  403ebb:	div    bh
  403ebd:	rol    DWORD PTR [ecx+0x16507966],1
  403ec3:	xchg   ch,al
  403ec5:	stc    
  403ec6:	je     0x403f1a
  403ec8:	daa    
  403ec9:	dec    edi
  403eca:	out    0x40,eax
  403ecc:	sub    ecx,esp
  403ece:	arpl   WORD PTR [ebp+ebp*1-0x1a],sp
  403ed2:	push   ds
  403ed3:	popf   
  403ed4:	push   0x65942d00
  403ed9:	fbstp  TBYTE PTR [eax]
  403edb:	int    0xa7
  403edd:	pusha  
  403ede:	add    bl,dh
  403ee0:	or     edi,eax
  403ee2:	xchg   esp,eax
  403ee3:	icebp  
  403ee4:	push   0xffffffec
  403ee6:	call   0x3cb7:0x549d9900
  403eed:	into   
  403eee:	(bad)  
  403eef:	out    0x12,al
  403ef1:	pop    esi
  403ef2:	lods   eax,DWORD PTR ds:[esi]
  403ef3:	leave  
  403ef4:	jecxz  0x403e94
  403ef6:	sbb    eax,0xbe9e16b1
  403efb:	pop    esi
  403efc:	enter  0xe1c8,0x46
  403f00:	or     edi,ecx
  403f02:	jno    0x2ae6ac50
  403f08:	cmc    
  403f09:	inc    DWORD PTR [esi+0x73]
  403f0c:	lahf   
  403f0d:	push   ss
  403f0e:	dec    ebx
  403f0f:	sub    al,0x8e
  403f11:	pop    ebp
  403f12:	ins    DWORD PTR es:[edi],dx
  403f13:	mov    ds:0x5b4bfe95,eax
  403f18:	ja     0x403ec2
  403f1a:	ins    DWORD PTR es:[edi],dx
  403f1b:	sub    al,0xaa
  403f1d:	add    DWORD PTR [ebp-0x73636ea3],esi
  403f23:	push   eax
  403f24:	retf   
  403f25:	sub    DWORD PTR [ebx-0x1a],esp
  403f28:	cmc    
  403f29:	leave  
  403f2a:	hlt    
  403f2b:	inc    ecx
  403f2c:	fdivr  QWORD PTR [edi]
  403f2e:	lock ret 0xe130
  403f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f33:	and    al,0xde
  403f35:	jae    0x403f69
  403f37:	sbb    edi,ecx
  403f39:	jecxz  0x403fa2
  403f3b:	fdivr  QWORD PTR [eax]
  403f3d:	dec    esp
  403f3e:	mov    eax,ds:0x82c30a3a
  403f43:	cwde   
  403f44:	mov    bh,0xe6
  403f46:	mov    bh,0x63
  403f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f49:	jnp    0x403f76
  403f4b:	fidiv  DWORD PTR [eax+0x4d]
  403f4e:	or     eax,0xfd9d4f5f
  403f53:	adc    cl,bh
  403f55:	sbb    DWORD PTR [edi],esp
  403f57:	inc    ebp
  403f58:	mov    BYTE PTR [eax-0x7524578c],cl
  403f5e:	scas   eax,DWORD PTR es:[edi]
  403f5f:	lock sti 
  403f61:	rol    DWORD PTR [ebx],1
  403f63:	js     0x403f9e
  403f65:	jns    0x403fc5
  403f67:	int3   
  403f68:	out    0x5e,eax
  403f6a:	sbb    DWORD PTR [eax-0xa],0xe9a34472
  403f71:	(bad)  
  403f72:	cmp    dl,BYTE PTR [eax]
  403f74:	inc    esp
  403f75:	loope  0x403f68
  403f77:	shr    DWORD PTR [edi-0x624e81f2],0x8f
  403f7e:	pop    esp
  403f7f:	or     BYTE PTR [eax],ch
  403f81:	out    dx,al
  403f82:	cmp    dh,BYTE PTR [ecx-0x32]
  403f85:	pop    esi
  403f86:	outs   dx,BYTE PTR ds:[esi]
  403f87:	pusha  
  403f88:	lods   al,BYTE PTR ds:[esi]
  403f89:	jmp    0x8565:0x64d53f54
  403f90:	fs inc ebx
  403f92:	cmp    al,0x93
  403f94:	ss inc ebx
  403f96:	das    
  403f97:	mov    BYTE PTR [ebp-0x4c],bh
  403f9a:	xor    eax,0x47e94b4a
  403f9f:	mov    esp,0xdffe0a95
  403fa4:	jmp    0x404022
  403fa6:	mov    ecx,0xf9bd62c
  403fab:	jg     0x40401c
  403fad:	out    0x4c,eax
  403faf:	mov    ebx,0x2a6858f1
  403fb4:	xchg   edi,eax
  403fb5:	jge    0x404006
  403fb7:	aaa    
  403fb8:	loop   0x403fca
  403fba:	hlt    
  403fbb:	push   ebp
  403fbc:	ins    BYTE PTR es:[edi],dx
  403fbd:	(bad)  
  403fbf:	adc    ebx,DWORD PTR [ebx+ecx*1]
  403fc2:	shl    ch,1
  403fc4:	jbe    0x404005
  403fc6:	cs cld 
  403fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fc9:	or     dh,BYTE PTR [ebx-0x2f]
  403fcc:	cli    
  403fcd:	xlat   BYTE PTR ds:[ebx]
  403fce:	push   esp
  403fcf:	mov    bh,0x19
  403fd1:	push   0x67d8613e
  403fd6:	mov    bh,0x48
  403fd8:	jne    0x403fd3
  403fda:	add    eax,0xdec57569
  403fdf:	inc    esp
  403fe0:	push   ds
  403fe1:	shr    BYTE PTR [ebp+0x37b12cec],0xa9
  403fe8:	pop    ss
  403fe9:	mov    esi,0x2b731de6
  403fee:	aad    0x37
  403ff0:	sbb    al,0xf5
  403ff2:	xchg   edi,eax
  403ff3:	retf   0xcb2
  403ff6:	or     BYTE PTR [edx],al
  403ff8:	cmp    eax,0xd91167fe
  403ffd:	ds jge 0x403f98
  404000:	mov    edx,0x6ecfd72e
  404005:	add    ah,BYTE PTR [esi]
  404007:	add    al,BYTE PTR [edi-0x637d13bb]
  40400d:	xor    DWORD PTR [ebx-0x708f987f],eax
  404013:	loopne 0x403fe8
  404015:	in     al,0xae
  404017:	sub    eax,0x3fdd20f3
  40401c:	fsubr  DWORD PTR [eax-0x6d]
  40401f:	ins    DWORD PTR es:[edi],dx
  404020:	adc    eax,0x20db2ce5
  404025:	mov    ebp,0x5f2b0d44
  40402a:	dec    eax
  40402b:	fsub   QWORD PTR [ebx]
  40402d:	stc    
  40402e:	mov    al,ds:0x67655bb6
  404033:	jmp    0xba6:0xc597ef2b
  40403a:	push   ss
  40403b:	ret    0x43df
  40403e:	mov    BYTE PTR [eax+0x49],ch
  404041:	pop    DWORD PTR [edi+0x3e4ae514]
  404047:	addr16 in al,dx
  404049:	xchg   DWORD PTR [eax-0x727ffc3c],eax
  40404f:	je     0x4040c2
  404051:	dec    edi
  404052:	mov    WORD PTR [ebx-0x57],?
  404055:	push   esp
  404056:	pop    esp
  404057:	mov    WORD PTR [ecx-0x3c],?
  40405a:	inc    edx
  40405b:	jg     0x403fee
  40405d:	jp     0x40400d
  40405f:	push   eax
  404060:	sub    al,0x5c
  404062:	std    
  404063:	test   eax,0xd7eaf5d0
  404068:	ja     0x40401e
  40406a:	and    ecx,eax
  40406c:	push   ss
  40406d:	scas   al,BYTE PTR es:[edi]
  40406e:	into   
  40406f:	mov    WORD PTR [eax],fs
  404071:	leave  
  404072:	mov    eax,ds:0x50eb833d
  404077:	jns    0x404035
  404079:	ins    BYTE PTR es:[edi],dx
  40407a:	cmp    DWORD PTR [eax+edi*8+0x6c1b1114],esi
  404081:	std    
  404082:	pop    eax
  404083:	test   DWORD PTR [edi],ecx
  404085:	in     eax,0x67
  404087:	mov    ds:0x8843c3d5,al
  40408c:	pop    esi
  40408d:	and    DWORD PTR [edi+ebp*1],0x2a07d6b3
  404094:	in     eax,0x6
  404096:	cmp    BYTE PTR [eax],dl
  404098:	outs   dx,BYTE PTR ds:[esi]
  404099:	mov    dh,0x54
  40409b:	arpl   si,bx
  40409d:	jmp    0x349e:0xf18b7d32
  4040a4:	xor    bh,BYTE PTR [eax+eiz*2+0xe]
  4040a8:	(bad)
  4040ab:	fwait
  4040ac:	mov    esp,0x3caced8d
  4040b1:	push   esi
  4040b2:	xchg   edx,esi
  4040b4:	pop    es
  4040b5:	adc    al,0x7a
  4040b7:	mov    dl,0x83
  4040b9:	inc    edx
  4040ba:	pop    ebx
  4040bb:	dec    ebx
  4040bc:	mov    BYTE PTR [eax],0xf3
  4040bf:	adc    esp,DWORD PTR ds:0x37144baf
  4040c5:	in     al,0x5e
  4040c7:	mov    esi,eax
  4040c9:	movnti DWORD PTR [esi],ebx
  4040cc:	mov    ecx,0x7c956706
  4040d1:	scas   eax,DWORD PTR es:[edi]
  4040d2:	push   esi
  4040d3:	enter  0x6ac2,0xb8
  4040d7:	jnp    0x404069
  4040d9:	or     eax,0xb676d2b9
  4040de:	push   esp
  4040df:	imul   DWORD PTR [ebp+0x42]
  4040e2:	mov    al,ds:0x557991f
  4040e7:	rol    DWORD PTR [esp+ecx*8+0x289bb4b6],0x5
  4040ef:	test   al,0x2a
  4040f1:	int    0x58
  4040f3:	test   eax,0xfb233b66
  4040f8:	fcmove st,st(0)
  4040fa:	or     eax,0x789ee300
  4040ff:	daa    
  404100:	xor    al,dl
  404102:	nop
  404103:	push   ds
  404104:	test   al,0x4a
  404106:	mov    eax,ds:0xa100cb31
  40410b:	dec    eax
  40410c:	and    ebp,eax
  40410e:	daa    
  40410f:	fsubr  QWORD PTR [edi+edx*2-0x5c]
  404113:	pop    ecx
  404114:	jnp    0x4040e1
  404116:	mov    ah,0xfc
  404118:	das    
  404119:	cmp    eax,0xf9277735
  40411e:	mov    edi,0x719d650a
  404123:	jmp    0x98298679
  404128:	das    
  404129:	stos   BYTE PTR es:[edi],al
  40412a:	lea    edi,[ebp-0x52]
  40412d:	jp     0x4040e5
  40412f:	lods   al,BYTE PTR ds:[esi]
  404130:	pushf  
  404131:	outs   dx,DWORD PTR ds:[esi]
  404132:	xor    ch,BYTE PTR [esi+0x75521bbc]
  404138:	and    edx,DWORD PTR [edi+0x591da75d]
  40413e:	xchg   BYTE PTR [edi-0x33b306d],dh
  404144:	mov    edi,0x278bcc5
  404149:	bound  edx,QWORD PTR [ecx-0x1f4b8f66]
  40414f:	mov    ah,cl
  404151:	sbb    al,0xf8
  404153:	or     BYTE PTR [edi+0x4d],dh
  404156:	mov    ds:0xff114f31,al
  40415b:	inc    ecx
  40415c:	jo     0x4041b1
  40415e:	in     al,dx
  40415f:	loopne 0x4041ce
  404161:	or     BYTE PTR [eax+0x126ef7],al
  404167:	dec    edx
  404168:	sbb    BYTE PTR [ebp+ecx*8-0x53106e79],cl
  40416f:	clc    
  404170:	lock and eax,0x18bc0e6f
  404176:	fwait
  404177:	out    dx,eax
  404178:	push   es
  404179:	scas   eax,DWORD PTR es:[edi]
  40417a:	dec    edx
  40417b:	mov    esp,0x360457ca
  404180:	pushf  
  404181:	cld    
  404182:	fnstsw WORD PTR [edx]
  404184:	or     DWORD PTR [ecx+0x31],edx
  404187:	push   0xffffff99
  404189:	pop    esi
  40418a:	(bad)  
  40418c:	fnstsw WORD PTR [ecx-0x34]
  40418f:	test   eax,0xf690c4d
  404194:	call   0x50fe:0x90118d6a
  40419b:	sbb    BYTE PTR [ebx-0x4ac91da4],bh
  4041a1:	clc    
  4041a2:	fisub  WORD PTR [ebx+0x7d]
  4041a5:	addr16 cmc 
  4041a7:	ret    
  4041a8:	cmp    esp,esp
  4041aa:	ins    BYTE PTR es:[edi],dx
  4041ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ac:	pop    edi
  4041ad:	das    
  4041ae:	mov    eax,?
  4041b0:	xchg   ebx,eax
  4041b1:	loop   0x40415d
  4041b3:	test   al,0x4f
  4041b5:	dec    esp
  4041b6:	inc    ebp
  4041b7:	mov    ebp,0xd27bc48f
  4041bc:	sub    dl,BYTE PTR [esi]
  4041be:	xchg   esi,eax
  4041bf:	dec    eax
  4041c0:	xlat   BYTE PTR ss:[ebx]
  4041c2:	sbb    DWORD PTR [edi],ecx
  4041c4:	mov    ebp,0xcb492a86
  4041c9:	cdq    
  4041ca:	push   ebp
  4041cb:	aas    
  4041cc:	sbb    BYTE PTR ss:[edi],cl
  4041cf:	sahf   
  4041d0:	or     BYTE PTR [edx],ah
  4041d2:	repnz sahf 
  4041d4:	add    al,0xe8
  4041d6:	push   eax
  4041d7:	fbstp  TBYTE PTR [edx-0x2cfdc93d]
  4041dd:	leave  
  4041de:	pop    ebx
  4041df:	iret   
  4041e0:	push   ebp
  4041e1:	push   ebp
  4041e2:	inc    ecx
  4041e3:	inc    esi
  4041e4:	test   BYTE PTR ss:0x909820c2,dl
  4041eb:	cli    
  4041ec:	xor    eax,0x74ffb0a7
  4041f1:	sbb    BYTE PTR [ebp-0x1162fbad],cl
  4041f7:	shr    DWORD PTR [edi-0x132c207c],cl
  4041fd:	dec    bh
  4041ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404200:	aam    0xe5
  404202:	jecxz  0x4041f8
  404204:	test   BYTE PTR ds:0x4e2c9c56,cl
  40420a:	imul   ebp,DWORD PTR [ecx-0x5b],0x60
  40420e:	sbb    BYTE PTR [ebp-0x41],dl
  404211:	mov    ch,0x92
  404213:	scas   al,BYTE PTR es:[edi]
  404214:	xor    ebx,DWORD PTR [ecx+0x528469b8]
  40421a:	repnz (bad) 
  40421c:	cli    
  40421d:	js     0x404244
  40421f:	adc    eax,0x2d89e2ba
  404224:	(bad)  [ebx]
  404226:	pop    esp
  404227:	lods   eax,DWORD PTR ds:[esi]
  404228:	push   ebp
  404229:	test   eax,0xbae5975b
  40422e:	int3   
  40422f:	adc    ebx,DWORD PTR [ecx-0x52]
  404232:	popf   
  404233:	mov    esi,0xd8a4faa4
  404238:	adc    dh,BYTE PTR [edi-0x7aed84d5]
  40423e:	push   0x42
  404240:	or     BYTE PTR [ebp-0x32],bh
  404243:	enter  0xdc88,0xc2
  404247:	lahf   
  404248:	lods   al,BYTE PTR ds:[esi]
  404249:	iret   
  40424a:	cs jg  0x4042bb
  40424d:	mov    edx,0xedd6d3d4
  404252:	out    0x5a,eax
  404254:	lods   eax,DWORD PTR ds:[esi]
  404255:	outs   dx,BYTE PTR ds:[esi]
  404256:	(bad)  [ebx-0x6d]
  404259:	fdivr  QWORD PTR ds:0xca3d5d90
  40425f:	and    edi,DWORD PTR [esi]
  404261:	mov    ch,0xc5
  404263:	xchg   ecx,eax
  404264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404265:	xor    eax,0x5cf85fa7
  40426a:	pusha  
  40426b:	sub    BYTE PTR [ebx-0x7e],ch
  40426e:	xchg   ecx,eax
  40426f:	or     al,0xbb
  404271:	gs in  eax,0xc2
  404274:	je     0x4041f8
  404276:	pop    ds
  404277:	inc    ebx
  404278:	inc    ebx
  404279:	inc    ebx
  40427a:	cs popf 
  40427c:	add    ah,cl
  40427e:	jge    0x40424f
  404280:	retf   0xfaad
  404283:	inc    ebx
  404284:	inc    ebx
  404285:	add    eax,0xe45ca0f7
  40428a:	xchg   ebx,eax
  40428b:	add    esp,DWORD PTR [ecx]
  40428d:	loopne 0x40430a
  40428f:	or     al,0x6
  404291:	or     eax,0x1ec596f9
  404296:	(bad)  [ecx]
  404298:	hlt    
  404299:	cdq    
  40429a:	fwait
  40429b:	lea    esp,[eax-0x496a979f]
  4042a1:	es push edi
  4042a3:	pop    ss
  4042a4:	ss in  al,dx
  4042a6:	cld    
  4042a7:	or     al,0x78
  4042a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042aa:	cmp    BYTE PTR [ebx+0x74beda81],0x18
  4042b1:	addr16 push ebp
  4042b3:	jns    0x4042d3
  4042b5:	test   al,0x64
  4042b7:	inc    ebx
  4042b8:	fcomp  DWORD PTR [esi+0x72be509e]
  4042be:	cmp    DWORD PTR ds:0x945c685a,0x3d
  4042c5:	cdq    
  4042c6:	stos   DWORD PTR es:[edi],eax
  4042c7:	ds sub dl,ch
  4042ca:	xchg   BYTE PTR [edi-0xb03950],dh
  4042d0:	sub    eax,0x97e2d835
  4042d5:	pop    ss
  4042d6:	adc    eax,DWORD PTR [ebp+0x4189dc87]
  4042dc:	adc    DWORD PTR [esi],eax
  4042de:	in     eax,0x72
  4042e0:	mov    ds:0xb269840f,al
  4042e5:	add    BYTE PTR [edx],cl
  4042e7:	mov    ah,0x80
  4042e9:	pop    edx
  4042ea:	xor    bh,0x7b
  4042ed:	imul   eax,DWORD PTR [esi+0x7ef65f8e],0xc6f55733
  4042f7:	sub    eax,0xa11e68b7
  4042fc:	dec    eax
  4042fd:	pop    edi
  4042fe:	(bad)  
  4042ff:	sar    BYTE PTR [edx-0x47],cl
  404302:	(bad)  
  404303:	test   al,0xf8
  404305:	jmp    0x4042ce
  404307:	dec    esp
  404308:	sbb    dh,BYTE PTR [eax+ebx*4-0x29f3683f]
  40430f:	das    
  404310:	test   DWORD PTR [edx],eax
  404312:	jmp    0x6b759b7c
  404317:	test   al,0x0
  404319:	mov    ebp,0x64990e3d
  40431e:	mov    edx,edi
  404320:	fnstcw WORD PTR [eax+0x1145937e]
  404326:	das    
  404327:	faddp  st(3),st
  404329:	addr16 ret 0xa457
  40432d:	cmp    BYTE PTR [ecx],0xe5
  404330:	mov    ah,0x1e
  404332:	cs jbe 0x404376
  404335:	test   ecx,edi
  404337:	test   al,0x8c
  404339:	jl     0x4042c9
  40433b:	lds    eax,FWORD PTR [ecx]
  40433d:	(bad)
  404341:	mov    ebp,0x22037fb1
  404346:	daa    
  404347:	out    dx,eax
  404348:	mov    es,WORD PTR [esi+0x57519ce6]
  40434e:	jne    0x4043aa
  404350:	mov    bl,0x2b
  404352:	push   ds
  404353:	xchg   edi,eax
  404354:	sub    al,0xfd
  404356:	inc    edx
  404357:	sbb    BYTE PTR [edi],0x3
  40435a:	(bad)  
  40435b:	daa    
  40435c:	dec    edx
  40435d:	sub    al,0x8b
  40435f:	adc    eax,0x7930f762
  404364:	xchg   edi,eax
  404365:	es dec ecx
  404367:	(bad)  
  404368:	ja     0x4043ce
  40436a:	cmp    esp,DWORD PTR [edx-0x18]
  40436d:	mov    cl,0x15
  40436f:	shl    BYTE PTR [ecx],0xac
  404372:	(bad)  
  404374:	std    
  404375:	and    eax,0x114dc710
  40437a:	mov    BYTE PTR [edi],ch
  40437c:	fistp  WORD PTR [ebx-0x5e]
  40437f:	mov    dh,0xb6
  404381:	add    DWORD PTR [ecx+0x3b496284],eax
  404387:	pop    edx
  404388:	cmp    al,BYTE PTR [edi+0x1e]
  40438b:	xchg   esp,eax
  40438c:	sahf   
  40438d:	stos   BYTE PTR es:[edi],al
  40438e:	or     DWORD PTR [edi+eiz*1-0x14b0a060],0x607195b4
  404399:	ficomp WORD PTR [edi+0x8]
  40439c:	mov    esi,0xbbc5ed66
  4043a1:	adc    BYTE PTR [esi+0x68],cl
  4043a4:	leave  
  4043a5:	inc    ecx
  4043a6:	and    dh,BYTE PTR [edx+0x1678aab4]
  4043ac:	dec    esi
  4043ad:	push   edi
  4043ae:	fadd   QWORD PTR [ecx]
  4043b0:	push   eax
  4043b1:	add    esp,DWORD PTR [edi+0x4a7b102e]
  4043b7:	push   ebx
  4043b8:	in     eax,0xcf
  4043ba:	mov    eax,ds:0xb499298a
  4043bf:	retf   0xd318
  4043c2:	nop
  4043c3:	ja     0x4043cd
  4043c5:	sbb    esi,esi
  4043c7:	xchg   edi,eax
  4043c8:	mov    esi,0xfbe9278d
  4043cd:	ret    0x7ce7
  4043d0:	ds jnp 0x40442d
  4043d3:	js     0x4043a4
  4043d5:	out    0xdc,eax
  4043d7:	or     esp,ecx
  4043d9:	pop    ecx
  4043da:	cmc    
  4043db:	sub    al,0x9c
  4043dd:	repz pop esp
  4043df:	and    eax,0x7421eb90
  4043e4:	ror    BYTE PTR [ebp+0xa],0xc8
  4043e8:	sub    dl,cl
  4043ea:	das    
  4043eb:	lea    esp,[ecx+0xca4d297]
  4043f1:	jo     0x4043bf
  4043f3:	jbe    0x404381
  4043f5:	or     eax,0xae410844
  4043fa:	ret    0x92d
  4043fd:	dec    edi
  4043fe:	and    BYTE PTR [edx],al
  404400:	mov    ah,0x8f
  404402:	sub    eax,0x9fce1933
  404407:	fs int 0xa5
  40440a:	and    eax,0x205e5291
  40440f:	mov    esp,0xebd02f41
  404414:	dec    edi
  404415:	sbb    BYTE PTR [esi+0x2b],cl
  404418:	hlt    
  404419:	dec    edi
  40441a:	pop    ebx
  40441b:	adc    eax,0xc73dcedd
  404420:	lods   eax,DWORD PTR ds:[esi]
  404421:	jne    0x404411
  404423:	div    ebp
  404425:	div    DWORD PTR [esi-0x56]
  404428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404429:	mov    dl,0x3f
  40442b:	jg     0x4043da
  40442d:	pop    esi
  40442e:	sub    eax,0xd11680d5
  404433:	fwait
  404434:	stos   DWORD PTR es:[edi],eax
  404435:	xchg   DWORD PTR [esi+0x20b7a372],esp
  40443b:	mov    bl,0x8f
  40443d:	dec    esi
  40443e:	aas    
  40443f:	out    dx,al
  404440:	bnd jne 0x4044b9
  404443:	cdq    
  404444:	iret   
  404445:	lahf   
  404446:	mov    bh,0x26
  404448:	jmp    0xc54919ed
  40444d:	vmulsd xmm6,xmm7,xmm0
  404451:	nop
  404452:	jp     0x4044a9
  404454:	sub    eax,DWORD PTR [ecx+0x194e7389]
  40445a:	out    dx,eax
  40445b:	jl     0x404402
  40445d:	imul   esi,DWORD PTR [edx],0x42
  404460:	adc    edx,DWORD PTR ss:[ebp-0x40]
  404464:	and    ah,cl
  404466:	rcl    DWORD PTR [ecx+0x73],1
  404469:	pop    esi
  40446a:	add    al,0x96
  40446c:	imul   edx,DWORD PTR fs:[edi+0x6d6564fc],0xaba3c7f
  404477:	mov    al,0x29
  404479:	or     bl,ah
  40447b:	cmp    al,0x63
  40447d:	(bad)  [edi+ebp*4]
  404480:	push   edi
  404481:	in     eax,dx
  404482:	in     al,0xa7
  404484:	mov    dh,0x1b
  404486:	add    al,0x9c
  404488:	mov    ebp,0x942f590f
  40448d:	or     DWORD PTR [edx+0x48aa06ce],edi
  404493:	sub    al,0x42
  404495:	push   ecx
  404496:	in     al,dx
  404497:	mov    edi,0x3379349d
  40449c:	test   ebx,eax
  40449e:	inc    ebp
  40449f:	dec    ecx
  4044a0:	pop    eax
  4044a1:	xlat   BYTE PTR ds:[ebx]
  4044a2:	aad    0xc5
  4044a4:	sub    BYTE PTR [ecx+ecx*8-0x2],0x5f
  4044a9:	mov    bl,0xce
  4044ab:	and    edx,DWORD PTR es:[ebp+ebx*1+0xae1009a]
  4044b3:	mov    ecx,0x6a6c8708
  4044b8:	adc    eax,DWORD PTR [esi-0x3f]
  4044bb:	cmp    cl,ch
  4044bd:	loop   0x40447b
  4044bf:	sub    DWORD PTR [eax],0xad2a507a
  4044c5:	cwde   
  4044c6:	cmp    ah,BYTE PTR [ebx-0x7505731b]
  4044cc:	(bad)  
  4044ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044cf:	inc    ebx
  4044d0:	dec    ebp
  4044d1:	sub    bh,BYTE PTR [ebp-0x26]
  4044d4:	dec    esi
  4044d5:	inc    esi
  4044d6:	or     bl,al
  4044d8:	add    dl,BYTE PTR [ecx]
  4044da:	loope  0x404517
  4044dc:	je     0x404481
  4044de:	push   es
  4044df:	dec    esi
  4044e0:	fs (bad) 
  4044e2:	fsubr  QWORD PTR [ebx-0x35]
  4044e5:	sub    esp,DWORD PTR [ebp+0x7735772]
  4044eb:	or     al,0xb4
  4044ed:	pop    ecx
  4044ee:	shl    DWORD PTR [esi],1
  4044f0:	(bad)  
  4044f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f3:	cmp    eax,0xe7b82c95
  4044f8:	enter  0x1f67,0x8d
  4044fc:	sbb    esi,DWORD PTR [eax]
  4044fe:	or     al,0xf2
  404500:	aad    0x82
  404502:	fs dec ebx
  404504:	das    
  404505:	imul   DWORD PTR [ebp+0x4b]
  404508:	rol    BYTE PTR [edx+0x700f4e23],1
  40450e:	push   ecx
  40450f:	outs   dx,DWORD PTR ds:[esi]
  404510:	mov    edx,0x9faf850f
  404515:	mov    esi,0x5fda18bf
  40451a:	aam    0x21
  40451c:	xchg   edx,eax
  40451d:	jbe    0x404524
  40451f:	mov    es:0xc17cfdeb,al
  404525:	adc    eax,0xc3d8551
  40452a:	int    0x94
  40452c:	shr    BYTE PTR [esp+edi*1-0x4d28aae1],0xb2
  404534:	add    eax,0x7cb05c41
  404539:	lds    esp,FWORD PTR [eax]
  40453b:	iret   
  40453c:	addr16 dec ebp
  40453e:	icebp  
  40453f:	fcom   QWORD PTR [edi*4+0x62fdb9ab]
  404546:	cmp    al,0xb8
  404548:	lods   al,BYTE PTR ds:[esi]
  404549:	mov    esi,0x7521de53
  40454e:	sub    al,0x68
  404550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404551:	push   0x1eeb2e3d
  404556:	dec    edx
  404557:	(bad)  
  404558:	(bad)  [edi+0xa0d94c8]
  40455e:	in     eax,dx
  40455f:	or     al,BYTE PTR [ebx-0x6a]
  404562:	les    eax,FWORD PTR [edx-0xe]
  404565:	inc    esp
  404566:	enter  0xed3d,0x75
  40456a:	call   0x17f5:0x87bb765e
  404571:	repnz hlt 
  404573:	(bad)  
  404574:	not    ebp
  404576:	clc    
  404577:	lea    edx,[edi+ebp*4-0x3c1dbc91]
  40457e:	xchg   ecx,eax
  40457f:	mov    eax,ds:0xdf9223c6
  404584:	data16 arpl bx,bx
  404587:	lock sbb BYTE PTR [esi],0x51
  40458b:	pfmax  mm3,QWORD PTR [eax-0x4a]
  404590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404591:	jl     0x404568
  404593:	or     DWORD PTR [edx-0xc],eax
  404596:	mov    bl,0x56
  404598:	add    BYTE PTR [esi-0x6c],0xa1
  40459c:	fs in  al,dx
  40459e:	dec    eax
  40459f:	push   esi
  4045a0:	push   0x26
  4045a2:	or     eax,0x29c40165
  4045a7:	sbb    eax,0xefb49097
  4045ac:	retf   0xe0c
  4045af:	mov    DWORD PTR [ebp-0x72],ecx
  4045b2:	cmp    al,0x44
  4045b4:	or     eax,0x26fc08d1
  4045b9:	sar    BYTE PTR [edi],cl
  4045bb:	(bad)  
  4045bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045be:	ficom  DWORD PTR [esi-0x4c]
  4045c1:	or     dl,BYTE PTR [esp+edx*2-0x1dc39658]
  4045c8:	adc    ah,dh
  4045ca:	jne    0x4045c7
  4045cc:	or     al,0xb6
  4045ce:	repnz cmp eax,0x66132466
  4045d4:	repnz adc BYTE PTR [ebx+0x20],dh
  4045d8:	cdq    
  4045d9:	out    0x59,al
  4045db:	retf   
  4045dc:	xchg   esp,eax
  4045dd:	mov    edx,0xff3f246e
  4045e2:	sub    ebx,ebp
  4045e4:	add    edx,esp
  4045e6:	test   BYTE PTR [edi+0x5e],dh
  4045e9:	inc    ebp
  4045ea:	sar    DWORD PTR [ebp-0x5],cl
  4045ed:	pop    edi
  4045ee:	mov    ds:0x27a979a,al
  4045f3:	push   eax
  4045f4:	bound  edx,QWORD PTR [edi+esi*1]
  4045f7:	dec    edx
  4045f8:	(bad)  
  4045f9:	(bad)  
  4045fb:	aaa    
  4045fc:	mov    bl,0x5a
  4045fe:	inc    esp
  4045ff:	pop    ds
  404600:	push   ebp
  404601:	inc    ebx
  404602:	outs   dx,DWORD PTR ds:[esi]
  404603:	xchg   ebp,eax
  404604:	dec    esi
  404605:	fnstcw WORD PTR [ebx-0x72]
  404608:	aas    
  404609:	adc    ch,bl
  40460b:	mov    edi,0x3e477013
  404610:	cwde   
  404611:	add    ch,0x8e
  404614:	adc    BYTE PTR [esi+0x6af32e68],dl
  40461a:	retf   0x812e
  40461d:	(bad)  
  40461e:	mov    ds:0x7b5b92e4,eax
  404623:	fisub  WORD PTR [eax-0x61]
  404626:	add    al,0xec
  404628:	xor    eax,0xb63ccfc5
  40462d:	sbb    bh,BYTE PTR [edi]
  40462f:	(bad)  
  404630:	fisttp WORD PTR [ebx+0xe]
  404633:	mov    edi,0xeae6cd77
  404638:	cmp    esi,esi
  40463a:	or     bl,BYTE PTR [edi]
  40463c:	int3   
  40463d:	mov    BYTE PTR [eax],dl
  40463f:	sbb    BYTE PTR [ecx+0x18],al
  404642:	(bad)  
  404643:	mov    edx,es
  404645:	adc    al,0x1
  404647:	mov    ds,WORD PTR gs:[ecx+eiz*8-0x1c]
  40464c:	push   edi
  40464d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40464e:	out    dx,al
  40464f:	retf   0x7a6c
  404652:	xor    BYTE PTR [edx],bl
  404654:	xor    DWORD PTR [edi],0x43dc311c
  40465a:	or     ecx,DWORD PTR [esi]
  40465c:	pop    esi
  40465d:	jge    0x404680
  40465f:	cmp    al,0x68
  404661:	lock jmp 0xb68db287
  404667:	mov    dl,0x10
  404669:	xor    bh,BYTE PTR [ebx-0x5c]
  40466c:	sub    al,BYTE PTR [esi-0x5a]
  40466f:	dec    esi
  404670:	ret    0xeac7
  404673:	inc    ebp
  404674:	fldenv [esp+ebp*2-0x63610c2c]
  40467b:	pop    edx
  40467c:	inc    eax
  40467d:	scas   eax,DWORD PTR es:[edi]
  40467e:	push   ebx
  40467f:	jecxz  0x404627
  404681:	stos   BYTE PTR es:[edi],al
  404682:	test   DWORD PTR [eax+eiz*1+0x5616a8eb],edi
  404689:	jo     0x4046c7
  40468b:	push   0xffffffc7
  40468d:	cs push es
  40468f:	shr    DWORD PTR [ebx+0x56],cl
  404692:	in     al,0xeb
  404694:	cmp    esp,DWORD PTR ds:0xb9af1d70
  40469a:	aaa    
  40469b:	adc    DWORD PTR ds:0x4355fa9f,ecx
  4046a1:	mov    ch,0x2c
  4046a3:	pop    eax
  4046a4:	(bad)  
  4046a5:	aaa    
  4046a6:	loope  0x404630
  4046a8:	test   BYTE PTR [edi-0x2a6a114b],dl
  4046ae:	ins    BYTE PTR es:[edi],dx
  4046af:	jp     0x4046f7
  4046b1:	(bad)  
  4046b2:	sbb    BYTE PTR ds:0xad83c760,cl
  4046b8:	aas    
  4046b9:	ja     0x40465c
  4046bb:	jo     0x40464a
  4046bd:	out    dx,al
  4046be:	cmc    
  4046bf:	and    cl,BYTE PTR [edx+eiz*2]
  4046c2:	inc    esp
  4046c3:	mov    ebp,0x8e55b4a3
  4046c8:	add    DWORD PTR [ecx+0x5],0xffffffb2
  4046cc:	nop
  4046cd:	push   0xffffffd0
  4046cf:	and    al,0xe7
  4046d1:	aaa    
  4046d2:	(bad)  
  4046d3:	gs adc al,0x42
  4046d6:	jbe    0x404700
  4046d8:	ja     0x4046aa
  4046da:	inc    esi
  4046db:	outs   dx,BYTE PTR ds:[esi]
  4046dc:	js     0x4046cc
  4046de:	sahf   
  4046df:	das    
  4046e0:	and    bl,ah
  4046e2:	pop    esp
  4046e3:	shl    DWORD PTR [ebp-0x6c3ff8e8],1
  4046e9:	test   al,0x3
  4046eb:	mov    esp,0x142d405f
  4046f0:	call   0x8cd6:0x6169cc7d
  4046f7:	jmp    0x34eaba04
  4046fc:	adc    BYTE PTR [ebx+edx*2+0x48],ch
  404700:	rcr    BYTE PTR [ebp-0x8e4e378],0x6e
  404707:	inc    edi
  404708:	test   eax,0x5e0bf082
  40470d:	repz jne 0x404717
  404710:	mov    edi,0x29891ea9
  404715:	inc    esp
  404716:	inc    ecx
  404717:	stc    
  404718:	sar    BYTE PTR [ebx+0x7718744f],0x98
  40471f:	jns    0x4046d1
  404721:	pop    ds
  404722:	sahf   
  404723:	push   ds
  404724:	mov    al,ds:0x82579808
  404729:	ins    BYTE PTR es:[edi],dx
  40472a:	xchg   esp,eax
  40472b:	xchg   ebp,eax
  40472c:	outs   dx,BYTE PTR ds:[esi]
  40472d:	push   0x3a3aed2e
  404732:	adc    esi,edi
  404734:	call   0xd6f3:0x2074632e
  40473b:	pop    eax
  40473c:	mul    DWORD PTR [ecx]
  40473e:	out    0xd,al
  404740:	ds test bl,dh
  404743:	and    al,0x66
  404745:	(bad)  
  404746:	call   0x8284:0xaf9a7b05
  40474d:	sahf   
  40474e:	dec    ebx
  40474f:	add    eax,0x8633a1b0
  404754:	push   ecx
  404755:	and    BYTE PTR [edi+0x26],cl
  404758:	jno    0x404782
  40475a:	jne    0x40471a
  40475c:	sub    BYTE PTR [ebx-0x21ef545d],ah
  404762:	mov    esi,0x923922ee
  404767:	pop    eax
  404768:	outs   dx,BYTE PTR ds:[esi]
  404769:	sub    al,0xfe
  40476b:	enter  0xbb9b,0xd0
  40476f:	fcomp  DWORD PTR [ecx]
  404771:	sub    cl,al
  404773:	mov    dl,0x8d
  404775:	pop    esi
  404776:	jno    0x404707
  404778:	adc    DWORD PTR [ecx-0x7fa8b152],esi
  40477e:	bound  esi,QWORD PTR [esp+eax*8+0x51]
  404782:	mov    esi,0x5923a0b7
  404787:	imul   ebx,esp,0x1dd0cbd3
  40478d:	mov    edi,0x43af8481
  404792:	or     DWORD PTR [edi-0x35da4cc1],esi
  404798:	loop   0x4047b7
  40479a:	jnp    0x4047e5
  40479c:	dec    ebp
  40479d:	sub    DWORD PTR [eax+ebp*2],eax
  4047a0:	aas    
  4047a1:	mov    ds:0x38959fe2,eax
  4047a6:	(bad)  
  4047a7:	loopne 0x40478b
  4047a9:	not    BYTE PTR [ecx]
  4047ab:	dec    eax
  4047ac:	stos   BYTE PTR es:[edi],al
  4047ad:	div    DWORD PTR ds:0xc780a58d
  4047b3:	dec    esp
  4047b4:	les    ebp,FWORD PTR [eax-0x71]
  4047b7:	sub    DWORD PTR [eax],ebp
  4047b9:	icebp  
  4047ba:	xor    eax,DWORD PTR [ebx-0x2e]
  4047bd:	je     0x4047d7
  4047bf:	xor    al,0x2b
  4047c1:	into   
  4047c2:	mov    dl,0x8d
  4047c4:	and    esi,DWORD PTR [ecx+edi*2+0x3]
  4047c8:	lahf   
  4047c9:	push   ds
  4047ca:	inc    edi
  4047cb:	cmp    eax,0x507739ad
  4047d0:	add    eax,0xb04ab3ca
  4047d5:	lea    edx,[edx-0x3e92e104]
  4047db:	inc    ecx
  4047dc:	loopne 0x4047f5
  4047de:	jmp    0x404834
  4047e0:	sub    al,BYTE PTR [esi-0x320a00ea]
  4047e6:	xor    eax,ecx
  4047e8:	and    DWORD PTR [ebx],ebx
  4047ea:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ec:	arpl   WORD PTR [ecx],bx
  4047ee:	fiadd  WORD PTR [ebx+0x75a8d35d]
  4047f4:	je     0x4047a8
  4047f6:	jecxz  0x4047f0
  4047f8:	shl    BYTE PTR [ebp+0x43],0x3f
  4047fc:	and    edi,DWORD PTR [ecx+0x2e4b2ba]
  404802:	ins    DWORD PTR es:[edi],dx
  404803:	(bad)  [ebp-0x791a94]
  404809:	pop    eax
  40480a:	push   0x6a
  40480c:	in     al,0x26
  40480e:	sbb    eax,0xbea90999
  404813:	adc    BYTE PTR [eax+0x6315064f],al
  404819:	bound  ecx,QWORD PTR [ebx-0x50]
  40481c:	cld    
  40481d:	lods   eax,DWORD PTR ds:[esi]
  40481e:	fs ins DWORD PTR es:[edi],dx
  404820:	lock and BYTE PTR [edi],ch
  404823:	sbb    al,0x10
  404825:	push   esi
  404826:	in     al,0xe1
  404828:	push   ebp
  404829:	add    DWORD PTR [esi+edi*8+0x1d],edi
  40482d:	lods   al,BYTE PTR ds:[esi]
  40482e:	jecxz  0x4047d8
  404830:	dec    eax
  404831:	clc    
  404832:	test   al,0x1
  404834:	bound  ebp,QWORD PTR [ecx+0x4]
  404837:	rol    DWORD PTR [ecx],0x23
  40483a:	aam    0x59
  40483c:	xor    al,0x2f
  40483e:	cmp    dl,BYTE PTR [esp+ecx*1]
  404841:	sahf   
  404842:	je     0x404815
  404844:	scas   al,BYTE PTR es:[edi]
  404845:	lods   eax,DWORD PTR ds:[esi]
  404846:	push   ds
  404847:	sub    edi,DWORD PTR [edi+0x37cd3b28]
  40484d:	push   edi
  40484e:	lahf   
  40484f:	mov    ebp,0xd6f5021c
  404854:	dec    esi
  404855:	mov    cs,WORD PTR [ecx+0x33b54bf6]
  40485b:	pop    ebx
  40485c:	adc    eax,0x955d0ba3
  404861:	sub    al,0xcc
  404863:	jecxz  0x4048be
  404865:	jb     0x404805
  404867:	fwait
  404868:	mov    ebp,0xb0d0dead
  40486d:	mov    ?,WORD PTR [esp+ebp*1]
  404870:	aaa    
  404871:	adc    ebx,edi
  404873:	icebp  
  404874:	push   edx
  404875:	dec    edi
  404876:	pop    esp
  404877:	int    0x31
  404879:	mov    edx,0xd55714e8
  40487e:	daa    
  40487f:	xchg   ecx,eax
  404880:	pop    eax
  404881:	in     al,0x68
  404883:	jge    0x404859
  404885:	dec    ebx
  404886:	mov    esi,0x18204c4b
  40488b:	out    0xbb,al
  40488d:	sub    edx,DWORD PTR [eax+ebp*4-0x1f]
  404891:	ss or  bl,cl
  404894:	push   cs
  404895:	sbb    ebp,esi
  404897:	adc    ah,BYTE PTR [edi+0x46]
  40489a:	fistp  WORD PTR [edx]
  40489c:	jns    0x4048fe
  40489e:	dec    ebx
  40489f:	xor    BYTE PTR [ebx],0xf8
  4048a2:	mov    ecx,0x2ba90f16
  4048a7:	stc    
  4048a8:	or     ebx,edi
  4048aa:	fldcw  WORD PTR [edx+eiz*1-0x46a2651c]
  4048b1:	inc    edx
  4048b2:	pop    ebp
  4048b3:	push   0x9b938659
  4048b8:	sahf   
  4048b9:	push   0x94d16131
  4048be:	js     0x404933
  4048c0:	jge    0x40493f
  4048c2:	jge    0x4048eb
  4048c4:	mov    bl,BYTE PTR [ebx+0x2959a54c]
  4048ca:	jl     0x404897
  4048cc:	push   es
  4048cd:	dec    edi
  4048ce:	sub    ch,ah
  4048d0:	ret    0x587e
  4048d3:	push   es
  4048d4:	cmp    bh,BYTE PTR [eax]
  4048d6:	dec    ebx
  4048d7:	popf   
  4048d8:	les    eax,FWORD PTR [esi+0x3f3ed739]
  4048de:	(bad)  
  4048e0:	pop    ecx
  4048e1:	push   ds
  4048e2:	cmp    bl,BYTE PTR [esi-0x77ef5787]
  4048e8:	add    al,0x55
  4048ea:	mov    ds:0x703e20a6,al
  4048ef:	dec    esp
  4048f0:	mov    ebp,0xf1c16e79
  4048f5:	pop    esi
  4048f6:	rol    BYTE PTR [edi-0x4c],1
  4048f9:	push   eax
  4048fa:	adc    BYTE PTR [esi-0x4d09265a],bh
  404900:	dec    ebp
  404901:	jb     0x404973
  404903:	test   ecx,edx
  404905:	and    BYTE PTR [eax],dl
  404907:	pusha  
  404908:	cmp    cl,BYTE PTR [esi-0x46]
  40490b:	and    eax,0x17d74edd
  404910:	pop    ecx
  404911:	pop    ebx
  404912:	cmc    
  404913:	push   esp
  404914:	jae    0x404978
  404916:	mov    dl,0x1c
  404918:	popa   
  404919:	mov    eax,ds:0x4746adf7
  40491e:	sub    DWORD PTR [esi+0x7fedf96a],esi
  404924:	aad    0xaf
  404926:	mov    ah,0xf7
  404928:	shl    al,cl
  40492a:	mov    ah,0xdc
  40492c:	pop    ds
  40492d:	outs   dx,BYTE PTR ds:[esi]
  40492e:	(bad)  
  40492f:	sub    eax,0xda76cdc4
  404934:	js     0x404964
  404936:	and    ebx,0x56
  404939:	test   ch,al
  40493b:	retf   0x40b2
  40493e:	jp     0x40493e
  404940:	rol    DWORD PTR [ebx+0x7ddb8af3],1
  404946:	xor    al,0x22
  404948:	mov    esi,0x96bde13d
  40494d:	push   ebx
  40494e:	lods   al,BYTE PTR ds:[esi]
  40494f:	xor    DWORD PTR [edi],edx
  404951:	push   esi
  404952:	sti    
  404953:	int3   
  404954:	(bad)  
  404955:	in     eax,0xc
  404957:	or     esp,0x2f
  40495a:	in     eax,0x33
  40495c:	sar    BYTE PTR [ebx],1
  40495e:	pop    ds
  40495f:	fcom   QWORD PTR [esi-0x7837b717]
  404965:	adc    BYTE PTR [eax+0x65],bh
  404968:	shr    ebp,1
  40496a:	and    DWORD PTR [eax+0x41631666],0xa61197d6
  404974:	or     al,0xc
  404976:	xchg   ecx,eax
  404977:	add    eax,DWORD PTR [ebp+0x4d]
  40497a:	ret    
  40497b:	jns    0x4049db
  40497d:	out    0x40,eax
  40497f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404980:	adc    bl,bl
  404982:	jns    0x4049cf
  404984:	sub    DWORD PTR [esp+edx*1-0x63],edi
  404988:	data16 ror bl,1
  40498b:	aad    0x66
  40498d:	push   cs
  40498e:	fiadd  WORD PTR [eax]
  404990:	add    dh,BYTE PTR [edx-0x6a]
  404993:	adc    DWORD PTR [eax+0xbc35ba1],ebx
  404999:	cld    
  40499a:	adc    DWORD PTR [ebp+0x34],ebp
  40499d:	scas   eax,DWORD PTR es:[edi]
  40499e:	jnp    0x4049ec
  4049a0:	fmulp  st(6),st
  4049a2:	jne    0x4049ec
  4049a4:	push   eax
  4049a5:	jno    0x404a13
  4049a7:	adc    DWORD PTR [edi+ebp*4],ebx
  4049aa:	rcr    eax,0xcf
  4049ad:	cli    
  4049ae:	xchg   DWORD PTR [ebx],ecx
  4049b0:	adc    ebp,0x5f28d373
  4049b6:	push   ebp
  4049b7:	push   ds
  4049b8:	push   DWORD PTR [edi-0x738e6f20]
  4049be:	sbb    DWORD PTR [eax],0x4e
  4049c1:	xlat   BYTE PTR ds:[ebx]
  4049c2:	mov    al,0xfc
  4049c4:	dec    ebp
  4049c5:	mov    bl,0xd6
  4049c7:	(bad)  
  4049c8:	pop    eax
  4049c9:	int3   
  4049ca:	adc    DWORD PTR [ebp-0x5ac04fbe],ebp
  4049d0:	or     DWORD PTR [ecx-0x16],esp
  4049d3:	xchg   esi,eax
  4049d4:	pop    ecx
  4049d5:	cdq    
  4049d6:	rol    BYTE PTR [esi],1
  4049d8:	xor    al,0xb6
  4049da:	lds    edi,FWORD PTR ds:0xcf5fdca0
  4049e0:	sub    ebp,esp
  4049e2:	mov    edi,0x10694452
  4049e7:	sbb    bl,BYTE PTR [esi+0xe]
  4049ea:	iret   
  4049eb:	les    edx,FWORD PTR [esi+0x18c3c7e8]
  4049f1:	sbb    dl,BYTE PTR [eax-0x12]
  4049f4:	cmp    al,0xd4
  4049f6:	imul   esi,DWORD PTR [ebx-0x62197e51],0x102f893d
  404a00:	enter  0xf5b5,0x6e
  404a04:	pop    ss
  404a05:	pop    esp
  404a06:	fcmovnbe st,st(4)
  404a08:	xchg   esp,eax
  404a09:	push   esi
  404a0a:	inc    esi
  404a0b:	push   esi
  404a0c:	mov    dh,0x20
  404a0e:	adc    cl,ch
  404a10:	or     DWORD PTR [edx+0x2a],esi
  404a13:	add    DWORD PTR [esp+eiz*8],esi
  404a16:	mov    ebx,0xedb1ad74
  404a1b:	das    
  404a1c:	mov    ebx,0x5a27b1de
  404a21:	loope  0x404a8c
  404a23:	dec    ebp
  404a24:	icebp  
  404a25:	pop    es
  404a26:	ror    ah,1
  404a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a29:	pop    ebx
  404a2a:	mov    WORD PTR [ebx+0x6c],?
  404a2d:	push   ecx
  404a2e:	sbb    BYTE PTR [esi-0xb],ah
  404a31:	aaa    
  404a32:	jbe    0x4049bc
  404a34:	out    0x64,al
  404a36:	adc    ah,0x26
  404a39:	pop    esi
  404a3a:	(bad)  
  404a3b:	jnp    0x404a7d
  404a3d:	cs sbb esp,esi
  404a40:	cmp    eax,0x4cbc30d1
  404a45:	cmp    ebp,DWORD PTR [eax]
  404a47:	popf   
  404a48:	jmp    0x4b0:0xf51916d9
  404a4f:	lods   eax,DWORD PTR ds:[esi]
  404a50:	cmp    ch,ah
  404a52:	or     ebp,DWORD PTR [eax-0x6c]
  404a55:	in     eax,0x78
  404a57:	or     al,0x22
  404a59:	mov    ch,0x8
  404a5b:	and    BYTE PTR ds:0xf3f9cf48,bl
  404a61:	xchg   ebx,eax
  404a62:	stos   DWORD PTR es:[edi],eax
  404a63:	mov    BYTE PTR [ebx+0x69e0129],ch
  404a69:	(bad)  
  404a6a:	dec    eax
  404a6b:	lods   al,BYTE PTR ds:[esi]
  404a6c:	in     eax,dx
  404a6d:	(bad)  
  404a6e:	jg     0x404a3b
  404a70:	sahf   
  404a71:	int    0x1a
  404a73:	push   0x81b7d4d5
  404a78:	sar    BYTE PTR [esi+edx*8-0x42],1
  404a7c:	push   ds
  404a7d:	test   BYTE PTR [ebx],bl
  404a7f:	daa    
  404a80:	ins    DWORD PTR es:[edi],dx
  404a81:	imul   bx,WORD PTR [ebp-0x2e],0x9b49
  404a87:	adc    dh,al
  404a89:	jb     0x404a3f
  404a8b:	fiadd  WORD PTR [edx-0x3c98d750]
  404a91:	cld    
  404a92:	jg     0x404a2b
  404a94:	dec    ebx
  404a95:	cmc    
  404a96:	cmp    al,bh
  404a98:	test   eax,0xf4c2c852
  404a9d:	cmp    BYTE PTR [esi],cl
  404a9f:	aaa    
  404aa0:	leave  
  404aa1:	(bad)  
  404aa2:	cwde   
  404aa3:	lea    edx,[edx-0x5e]
  404aa6:	push   cs
  404aa7:	sub    BYTE PTR [ebp-0xfde25cd],0xc7
  404aae:	sub    eax,0x878e94d
  404ab3:	dec    ebx
  404ab4:	call   0x1b4a:0x70bd49cb
  404abb:	mov    esi,0xa2daabe
  404ac0:	mov    dh,cl
  404ac2:	std    
  404ac3:	int    0x6d
  404ac5:	and    BYTE PTR [ebx],al
  404ac7:	push   esp
  404ac8:	es sbb ah,cl
  404acb:	jbe    0x404b3e
  404acd:	(bad)  [ecx+0x7a]
  404ad0:	leave  
  404ad1:	push   cs
  404ad2:	mov    edi,ebp
  404ad4:	inc    ebp
  404ad5:	pop    es
  404ad6:	test   al,0xf5
  404ad8:	sbb    al,0xca
  404ada:	push   0x51b969bf
  404adf:	pushf  
  404ae0:	clc    
  404ae1:	or     ecx,edx
  404ae3:	push   ds
  404ae4:	sbb    eax,0xf10305b5
  404ae9:	push   ebx
  404aea:	sti    
  404aeb:	cmp    al,0xea
  404aed:	gs (bad) 
  404af0:	js     0x404ab0
  404af2:	stos   DWORD PTR es:[edi],eax
  404af3:	mov    ds:0x91fce963,eax
  404af8:	int3   
  404af9:	mov    DWORD PTR [ecx-0x8],ecx
  404afc:	mov    al,ds:0xace30f50
  404b01:	pop    esp
  404b02:	mov    gs,WORD PTR [edi-0x16]
  404b05:	mov    BYTE PTR [ecx+edx*4+0x55],0x59
  404b0a:	push   es
  404b0b:	vpand  ymm5,ymm5,ymm2
  404b0f:	fcmovnbe st,st(3)
  404b11:	out    dx,eax
  404b12:	(bad)  
  404b13:	push   0xffffff8d
  404b15:	and    BYTE PTR [esi-0x3adc4fe8],0xf1
  404b1c:	dec    eax
  404b1d:	pusha  
  404b1e:	repz enter 0x80e,0x96
  404b23:	out    dx,al
  404b24:	adc    ebp,eax
  404b26:	mov    cl,0xbe
  404b28:	cmp    DWORD PTR [ebx+0x668a9a6b],edx
  404b2e:	pop    edi
  404b2f:	cmp    ebp,DWORD PTR [ebp+0x192f601e]
  404b35:	addr16 mov esi,0x105c8765
  404b3b:	icebp  
  404b3c:	out    0xaa,al
  404b3e:	clc    
  404b3f:	js     0x404b7d
  404b41:	jb     0x404ad7
  404b43:	push   edi
  404b44:	fs jbe 0x404b59
  404b47:	(bad)  
  404b48:	adc    cl,BYTE PTR [esi+0x412e494]
  404b4e:	sbb    eax,0x21727a74
  404b53:	add    DWORD PTR [edi],edx
  404b55:	jecxz  0x404bae
  404b57:	stc    
  404b58:	inc    ecx
  404b59:	fwait
  404b5a:	xlat   BYTE PTR ds:[ebx]
  404b5b:	and    DWORD PTR [ebx+0x58bf6605],eax
  404b61:	shl    edi,0xfe
  404b64:	push   es
  404b65:	jb     0x404bdd
  404b67:	adc    DWORD PTR [edx-0x2bc55d1a],ebx
  404b6d:	lods   al,BYTE PTR ds:[esi]
  404b6e:	jmp    0xcda8:0x87a27ec2
  404b75:	pop    ebp
  404b76:	dec    edi
  404b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b78:	or     ah,bh
  404b7a:	dec    esp
  404b7b:	cmp    DWORD PTR [esi-0x7f6b3c26],ecx
  404b81:	xchg   BYTE PTR [edi-0x17],ah
  404b84:	je     0x404bf8
  404b86:	(bad)  
  404b88:	push   ss
  404b89:	dec    eax
  404b8a:	adc    eax,0x56abe099
  404b8f:	sub    al,0x43
  404b91:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  404b93:	sub    al,0x65
  404b95:	loope  0x404bad
  404b97:	repnz xor ah,BYTE PTR [eax+0x51]
  404b9b:	mov    bh,0x6
  404b9d:	(bad)  
  404b9e:	sub    al,0x53
  404ba0:	push   ds
  404ba1:	jbe    0x404c1f
  404ba3:	push   es
  404ba4:	outs   dx,DWORD PTR ds:[esi]
  404ba5:	and    al,0xec
  404ba7:	leave  
  404ba8:	or     al,0x54
  404baa:	pop    esp
  404bab:	or     esp,DWORD PTR [edi-0x4ff33c8]
  404bb1:	pop    ebx
  404bb2:	call   0xd867e1fe
  404bb7:	push   edx
  404bb8:	add    bh,BYTE PTR [ebx+0x680f43a8]
  404bbe:	stc    
  404bbf:	inc    edx
  404bc0:	out    dx,eax
  404bc1:	mov    edi,0x654e289
  404bc6:	fiadd  WORD PTR [eax-0x5534a0bc]
  404bcc:	das    
  404bcd:	test   BYTE PTR [ecx-0x2d1a9f6c],al
  404bd3:	sbb    eax,0xd7bd6618
  404bd8:	sbb    dl,BYTE PTR [ebx+0x42]
  404bdb:	xor    esp,DWORD PTR [edx+0x69358d05]
  404be1:	xchg   ebp,eax
  404be2:	mov    gs,WORD PTR [edi]
  404be4:	ret    
  404be5:	ret    0x7e04
  404be8:	test   DWORD PTR [edx],ebx
  404bea:	adc    BYTE PTR [ecx+edi*2-0x37],dh
  404bee:	pop    ebp
  404bef:	call   ebx
  404bf1:	in     eax,0x2
  404bf3:	stc    
  404bf4:	outs   dx,BYTE PTR ds:[esi]
  404bf5:	or     dh,ch
  404bf7:	or     DWORD PTR [ebx+0x76],0x7ca3e771
  404bfe:	test   al,0x57
  404c00:	je     0x404c0d
  404c02:	fist   WORD PTR [ebp+eax*4+0x10]
  404c06:	push   cs
  404c07:	mov    edi,0xea371108
  404c0c:	xor    DWORD PTR [ebp+ebx*1-0x199e4593],esp
  404c13:	sub    edx,DWORD PTR [esi]
  404c15:	mov    ch,0xc1
  404c17:	outs   dx,BYTE PTR ds:[esi]
  404c18:	(bad)  
  404c1a:	ins    BYTE PTR es:[edi],dx
  404c1b:	imul   eax,DWORD PTR [edi+eax*4+0x7c],0x61
  404c20:	sar    BYTE PTR [ecx-0x5d3d74fc],cl
  404c26:	xchg   esp,eax
  404c27:	push   cs
  404c28:	sbb    edx,DWORD PTR [ebx-0x31aab847]
  404c2e:	fstp   DWORD PTR [edx+esi*4+0x4f]
  404c32:	pop    eax
  404c33:	sub    al,0x65
  404c35:	push   ss
  404c36:	loope  0x404c9a
  404c38:	or     BYTE PTR [ebx+0x23],al
  404c3b:	data16 sbb ch,BYTE PTR [edx-0x10]
  404c3f:	xor    al,0xe8
  404c41:	sub    ebx,DWORD PTR [ecx+0x36]
  404c44:	mov    dh,BYTE PTR [ebp+0x7a9acaf7]
  404c4a:	out    dx,eax
  404c4b:	cmp    al,0x4d
  404c4d:	cs cmc 
  404c4f:	loopne 0x404c8d
  404c51:	ss popa 
  404c53:	aad    0x75
  404c55:	shr    DWORD PTR [ebp+0x3bdb2348],0x30
  404c5c:	aaa    
  404c5d:	dec    esi
  404c5e:	mov    ds:0x2328feb0,eax
  404c63:	loope  0x404c48
  404c65:	inc    esp
  404c66:	stos   DWORD PTR es:[edi],eax
  404c67:	fisub  DWORD PTR ds:0x5a7ee0e
  404c6d:	retf   
  404c6e:	iret   
  404c6f:	mov    dh,0x4b
  404c71:	ins    DWORD PTR es:[edi],dx
  404c72:	add    BYTE PTR [esi],0x8d
  404c75:	push   edi
  404c76:	inc    esp
  404c77:	(bad)  
  404c78:	out    dx,eax
  404c79:	imul   esp,DWORD PTR [ecx],0xfd05f7d6
  404c7f:	mov    al,0xa7
  404c81:	hlt    
  404c82:	rcl    BYTE PTR [ecx+0x48d118d9],cl
  404c88:	cli    
  404c89:	jg     0x404cfe
  404c8b:	and    BYTE PTR [edx],dh
  404c8d:	jae    0x404c30
  404c8f:	dec    esi
  404c90:	adc    eax,0x265f9057
  404c95:	cmp    eax,0x29cce117
  404c9a:	dec    ecx
  404c9b:	jnp    0x404cee
  404c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c9e:	mov    esp,0x1e101cd8
  404ca3:	aad    0xc0
  404ca5:	call   0x4570:0x60972dde
  404cac:	cmp    BYTE PTR [ebp-0x45],ah
  404caf:	push   ss
  404cb0:	add    al,0x82
  404cb2:	in     eax,0x78
  404cb4:	mov    esi,0xdb964ad3
  404cb9:	jge    0x404caf
  404cbb:	nop
  404cbc:	cld    
  404cbd:	test   BYTE PTR [edi+eax*8],dl
  404cc0:	cdq    
  404cc1:	pop    esp
  404cc2:	pop    esp
  404cc3:	mov    cl,0x64
  404cc5:	mov    ch,0xa6
  404cc7:	pop    esp
  404cc8:	out    0xcb,al
  404cca:	dec    edi
  404ccb:	aaa    
  404ccc:	ds push ss
  404cce:	sbb    esi,DWORD PTR [ecx+0x42]
  404cd1:	(bad)
  404cd5:	enter  0x5c7c,0x26
  404cd9:	mov    ah,0x36
  404cdb:	push   edi
  404cdc:	xor    al,0x52
  404cde:	rcr    DWORD PTR [eax-0x1f05126f],1
  404ce4:	div    edi
  404ce6:	(bad)  
  404ce7:	mov    al,ds:0xf8254530
  404cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ced:	out    dx,al
  404cee:	dec    edi
  404cef:	test   al,0x17
  404cf1:	iret   
  404cf2:	cwde   
  404cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cf4:	pop    ebx
  404cf5:	jbe    0x404d0c
  404cf7:	mov    dl,0xe0
  404cf9:	lods   al,BYTE PTR ds:[esi]
  404cfa:	cmc    
  404cfb:	test   DWORD PTR [edi-0x7c4a1fb8],esp
  404d01:	sub    DWORD PTR [edi-0xd],edi
  404d04:	or     dl,0x2f
  404d07:	fnsave [ebp-0x29a47b71]
  404d0d:	mov    bl,0x78
  404d0f:	loope  0x404d48
  404d11:	xor    DWORD PTR [edx-0x73163677],0x723eac6b
  404d1b:	push   0xffffffb0
  404d1d:	cmp    al,0xa
  404d1f:	mov    bh,0x20
  404d21:	cmp    BYTE PTR [eax-0x1275994f],bh
  404d27:	sbb    ch,BYTE PTR [ecx]
  404d29:	mov    BYTE PTR [ebp-0x2a741b90],ch
  404d2f:	into   
  404d30:	gs dec esp
  404d32:	jno    0x404d9e
  404d34:	ficomp DWORD PTR [eax+0x66]
  404d37:	leave  
  404d38:	dec    edx
  404d39:	adc    al,0x1d
  404d3b:	xchg   edi,eax
  404d3c:	xor    eax,0x22ff6b21
  404d41:	pop    es
  404d42:	jbe    0x404cd0
  404d44:	or     DWORD PTR ds:0x61e5b204,edx
  404d4a:	xchg   ebp,eax
  404d4b:	xor    eax,0x2899bf55
  404d50:	fstp   st(5)
  404d52:	xchg   ebx,eax
  404d53:	jmp    0xa0c8811b
  404d58:	mov    gs,WORD PTR [edx+ecx*8-0x7a]
  404d5c:	sbb    BYTE PTR [edx+0x1d],0xc
  404d60:	test   al,0xdd
  404d62:	js     0x404ce5
  404d64:	mov    ebx,0x98cd3e4d
  404d69:	xor    bh,bh
  404d6b:	sahf   
  404d6c:	xor    eax,0x1edf09d9
  404d71:	test   al,0x98
  404d73:	sbb    BYTE PTR [eax-0x1340d0dd],0x14
  404d7a:	mov    DWORD PTR [edx+edx*2-0x6ad5285c],ebp
  404d81:	addr16 adc eax,0xb1fd534c
  404d87:	xor    dl,bh
  404d89:	pcmpgtw mm1,QWORD PTR [ebx]
  404d8c:	dec    ebp
  404d8d:	retf   
  404d8e:	test   DWORD PTR [esp+eiz*8-0x7094c920],ecx
  404d95:	adc    BYTE PTR es:[esi],0xaa
  404d99:	clc    
  404d9a:	adc    dh,ah
  404d9c:	imul   ebx,DWORD PTR [edx],0xcc5b8173
  404da2:	call   0xe738:0xd07bce4c
  404da9:	push   ecx
  404daa:	iret   
  404dab:	sub    esi,DWORD PTR [edx]
  404dad:	inc    BYTE PTR [ecx+0x31d406a1]
  404db3:	xor    edi,esi
  404db5:	shl    BYTE PTR [ecx+ecx*4+0x244f8dbd],1
  404dbc:	push   esi
  404dbd:	sbb    BYTE PTR [ebp-0x5afe0a04],bh
  404dc3:	sub    al,0xe2
  404dc5:	(bad)  
  404dc6:	cld    
  404dc7:	jmp    0x404dac
  404dc9:	jae    0x404dc2
  404dcb:	jg     0x404e00
  404dcd:	mov    ds:0x65730629,eax
  404dd2:	lock fs callw 0xa1ce
  404dd8:	popa   
  404dd9:	sub    al,0xf2
  404ddb:	jmp    0xe648af3e
  404de0:	daa    
  404de1:	push   ebp
  404de2:	inc    ecx
  404de3:	sbb    BYTE PTR [ebx],ah
  404de5:	gs pop es
  404de7:	inc    esi
  404de8:	push   cs
  404de9:	dec    esi
  404dea:	add    al,0xd9
  404dec:	push   ecx
  404ded:	mov    eax,ds:0x630b1420
  404df2:	in     eax,0x3e
  404df4:	in     eax,dx
  404df5:	retf   
  404df6:	fs out dx,al
  404df8:	dec    edx
  404df9:	bound  edi,QWORD PTR [esi+0x26]
  404dfc:	les    edi,FWORD PTR [ecx]
  404dfe:	pop    ss
  404dff:	jmp    0xb865ae62
  404e04:	cmp    dl,al
  404e06:	pop    esi
  404e07:	ds mov ah,0x73
  404e0a:	xor    BYTE PTR [ebx],ch
  404e0c:	inc    edi
  404e0d:	cmp    BYTE PTR [edx],bh
  404e0f:	adc    DWORD PTR [edi+0xe],ecx
  404e12:	(bad)  
  404e13:	aam    0x48
  404e15:	imul   ecx,ebx,0x21
  404e18:	push   ds
  404e19:	ss push edi
  404e1b:	sub    eax,DWORD PTR [edi+ebx*8-0x2de0fbd7]
  404e22:	xor    ah,ah
  404e24:	jb     0x404e69
  404e26:	sub    DWORD PTR [ecx],0x69eac56c
  404e2c:	xor    DWORD PTR [ebx+0x19],0xffffff9b
  404e30:	pop    ebp
  404e31:	xchg   esp,eax
  404e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e33:	mov    cl,0x91
  404e35:	dec    esp
  404e36:	pop    edx
  404e37:	pop    edx
  404e38:	mov    ah,0xbd
  404e3a:	sbb    cl,ah
  404e3c:	and    ebp,esp
  404e3e:	lods   eax,DWORD PTR ds:[esi]
  404e3f:	ret    
  404e40:	mov    ds:0x5c24b32a,eax
  404e45:	in     al,0x9f
  404e47:	out    dx,eax
  404e48:	xchg   ebp,eax
  404e49:	fcmovb st,st(1)
  404e4b:	mov    edx,0x63f32a1b
  404e50:	push   0x3d
  404e52:	xchg   BYTE PTR [edi],dl
  404e54:	mov    bh,0x39
  404e56:	mov    ch,0xc9
  404e58:	xchg   edi,eax
  404e59:	inc    edx
  404e5a:	and    dh,ch
  404e5c:	xor    ebp,esp
  404e5e:	cmc    
  404e5f:	cdq    
  404e60:	jno    0x404e3c
  404e62:	mov    dl,0x6
  404e64:	jge    0x404e96
  404e66:	jmp    0x404e1b
  404e68:	cmp    esi,DWORD PTR [edx]
  404e6a:	jbe    0x404e03
  404e6c:	adc    eax,0x77a5bd74
  404e71:	leave  
  404e72:	ret    0x9d6b
  404e75:	push   esi
  404e76:	ss ror dl,cl
  404e79:	mul    BYTE PTR [ebx+ebx*2]
  404e7c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  404e7e:	fdiv   DWORD PTR [edx-0x2512b955]
  404e84:	xchg   esp,eax
  404e85:	aam    0x5d
  404e87:	mov    ch,0xfa
  404e89:	pop    es
  404e8a:	sub    bl,BYTE PTR [eax-0xb82d526]
  404e90:	jbe    0x404e9a
  404e92:	or     al,0xdd
  404e94:	jns    0x404e72
  404e96:	xchg   ebx,eax
  404e97:	sbb    ecx,ebp
  404e99:	dec    esi
  404e9a:	mov    BYTE PTR [ecx],dh
  404e9c:	adc    ah,BYTE PTR [edx+0x4d]
  404e9f:	in     eax,dx
  404ea0:	xor    esp,ebx
  404ea2:	push   edx
  404ea3:	jge    0x404f05
  404ea5:	sub    DWORD PTR [edx-0x80],ebx
  404ea8:	push   es
  404ea9:	retf   0x91c
  404eac:	stc    
  404ead:	mov    WORD PTR [edi+0x7f3ebecc],cs
  404eb3:	js     0x404e79
  404eb5:	add    al,0xeb
  404eb7:	pop    esp
  404eb8:	mov    al,0xec
  404eba:	jmp    0xa2b4b7d9
  404ebf:	fcom   DWORD PTR [ebx+0x3667cecb]
  404ec5:	jecxz  0x404e72
  404ec7:	jmp    0xa6d9:0x5ffd8d7b
  404ece:	jle    0x404e82
  404ed0:	jge    0x404f14
  404ed2:	xor    DWORD PTR [edi],0x8a6044d4
  404ed8:	mov    eax,ds:0x6089bd7f
  404edd:	push   edx
  404ede:	jne    0x404e61
  404ee0:	fs cmp ah,ah
  404ee3:	sti    
  404ee4:	and    al,0xa3
  404ee6:	sbb    BYTE PTR [edx],bh
  404ee8:	(bad)  
  404ee9:	pop    ebx
  404eea:	mov    al,0x28
  404eec:	test   BYTE PTR [ebp+0x4a],cl
  404eef:	scas   eax,DWORD PTR es:[edi]
  404ef0:	xor    eax,0xa8e8caaa
  404ef5:	pop    ebp
  404ef6:	xchg   ebx,eax
  404ef7:	rcl    ch,1
  404ef9:	lods   eax,DWORD PTR ds:[esi]
  404efa:	cmp    ecx,DWORD PTR [ecx+0x2]
  404efd:	or     BYTE PTR [edx-0x60],0x9e
  404f01:	std    
  404f02:	je     0x404ed0
  404f04:	ja     0x404eb4
  404f06:	xchg   ecx,eax
  404f07:	rcr    cl,0xe5
  404f0a:	bound  ecx,QWORD PTR [eax+0x65]
  404f0d:	jo     0x404ed1
  404f0f:	cmp    al,0xdc
  404f11:	inc    ebp
  404f12:	pop    ss
  404f13:	and    bh,BYTE PTR [ebp-0x70125e30]
  404f19:	inc    ebp
  404f1a:	arpl   WORD PTR [esi-0x31d4963f],dx
  404f20:	cmc    
  404f21:	std    
  404f22:	push   edi
  404f23:	sbb    eax,0x6bb51f64
  404f28:	xchg   edi,eax
  404f29:	sub    BYTE PTR [ecx-0x5ab01069],dl
  404f2f:	mov    eax,DWORD PTR [ebp-0x4]
  404f32:	mov    edi,DWORD PTR [ebp-0x8]
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0x3643f58a
  405700:	jo     0x405771
  405702:	xlat   BYTE PTR ds:[ebx]
  405703:	pop    edi
  405704:	jp     0x405780
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	leave  
  40570b:	bound  edx,QWORD PTR [esi+0x13942bc7]
  405711:	loop   0x4056c1
  405713:	sbb    dl,BYTE PTR [edi]
  405715:	fnsave [esi+0x1b]
  405718:	icebp  
  405719:	dec    eax
  40571a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40571c:	inc    ecx
  40571d:	imul   edx,DWORD PTR [ebx+0x1],0xfffffff8
  405721:	out    0xeb,al
  405723:	stos   DWORD PTR es:[edi],eax
  405724:	or     cl,BYTE PTR [ecx]
  405726:	and    eax,0x6a91e1ab
  40572b:	mov    DWORD PTR [edi*2+0x7c52031e],edx
  405732:	pop    ecx
  405733:	jae    0x4056f6
  405735:	in     eax,0xd1
  405737:	xchg   esi,eax
  405738:	pop    ds
  405739:	cmc    
  40573a:	sar    BYTE PTR [ebp+0x46c5979a],cl
  405740:	cld    
  405741:	pop    edx
  405742:	lods   al,BYTE PTR ds:[esi]
  405743:	xor    DWORD PTR [ebp-0x8],ebp
  405746:	mov    BYTE PTR [ebx],bh
  405748:	ds dec eax
  40574a:	add    DWORD PTR [edi-0x1f],ecx
  40574d:	pop    ebp
  40574e:	imul   eax,eax,0x8e822d4d
  405754:	sbb    BYTE PTR [edx-0x2c],0x14
  405758:	fistp  DWORD PTR [eax-0x48]
  40575b:	pop    ebp
  40575c:	loopne 0x4057a0
  40575e:	mov    ds:0xcc1fdb7c,eax
  405763:	test   al,0x8f
  405765:	cld    
  405766:	mov    esi,?
  405768:	adc    ebx,ebx
  40576a:	(bad)  
  40576b:	sbb    al,0x5b
  40576d:	pop    ecx
  40576e:	adc    DWORD PTR [ecx+0x39c87aae],ebp
  405774:	test   al,0x90
  405776:	and    BYTE PTR [esp+eax*2-0x13],ah
  40577a:	out    dx,eax
  40577b:	adc    esi,DWORD PTR [ebp+0x60]
  40577e:	or     ecx,eax
  405780:	rcr    DWORD PTR [edi+0x4a771c56],cl
  405786:	(bad)  
  405787:	paddd  mm5,mm2
  40578a:	sub    esi,ecx
  40578c:	push   dx
  40578e:	daa    
  40578f:	inc    esp
  405790:	jb     0x405770
  405792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405793:	hlt    
  405794:	inc    esp
  405795:	xchg   ebx,eax
  405796:	jle    0x405808
  405798:	xor    al,BYTE PTR cs:[esi+0x2bfb11d9]
  40579f:	imul   BYTE PTR [esi]
  4057a1:	rol    eax,0x1e
  4057a4:	mov    BYTE PTR [edx-0x2ad8e3ec],al
  4057aa:	mov    dh,0x86
  4057ac:	data16 jbe 0x4057eb
  4057af:	pop    edi
  4057b0:	in     ax,0xa9
  4057b3:	or     dl,BYTE PTR [eax-0x7d]
  4057b6:	mov    bh,0xdf
  4057b8:	and    ebx,DWORD PTR [ebp+edi*2+0x2fcbd46d]
  4057bf:	mov    al,ds:0x71c095f8
  4057c4:	lea    ecx,[eax+0x2d]
  4057c7:	push   ss
  4057c8:	retf   
  4057c9:	dec    ebx
  4057ca:	sub    al,0x51
  4057cc:	add    al,0xf4
  4057ce:	div    BYTE PTR [esi-0x13d547c2]
  4057d4:	xchg   esp,eax
  4057d5:	mov    ?,esi
  4057d7:	(bad)  
  4057d8:	lods   eax,DWORD PTR ds:[esi]
  4057d9:	adc    BYTE PTR [ebx+eiz*8],0x72
  4057dd:	and    eax,0x72b36519
  4057e2:	mov    edi,0x51e688c0
  4057e7:	push   esp
  4057e8:	popf   
  4057e9:	sbb    edi,esi
  4057eb:	jmp    0x1dae0895
  4057f0:	iret   
  4057f1:	ror    al,1
  4057f3:	in     al,0xb4
  4057f5:	sti    
  4057f6:	pop    esp
  4057f7:	addr16 mov esi,0xc7458c63
  4057fd:	sbb    BYTE PTR [esi+eax*2-0x3bc220c7],al
  405804:	xchg   edx,eax
  405805:	dec    eax
  405806:	outs   dx,DWORD PTR fs:[esi]
  405808:	shl    DWORD PTR [eax-0x5d],1
  40580b:	push   ecx
  40580c:	xchg   esp,eax
  40580d:	pop    es
  40580e:	cmp    edi,DWORD PTR [esi+0x0]
  405811:	dec    ebx
  405812:	pop    esp
  405813:	jb     0x40588d
  405815:	adc    BYTE PTR [ecx],al
  405817:	xor    ah,BYTE PTR [ecx]
  405819:	and    DWORD PTR [ecx+0x64],ebp
  40581c:	mov    bl,0x4b
  40581e:	inc    eax
  40581f:	sub    ebp,DWORD PTR [eax-0xeb3af]
  405825:	mov    dl,0x59
  405827:	je     0x40582d
  405829:	icebp  
  40582a:	call   0xb2a:0xf8bc5184
  405831:	cmp    eax,0x6ab12863
  405836:	xchg   ecx,eax
  405837:	lahf   
  405838:	arpl   WORD PTR [edx-0x66675e15],si
  40583e:	push   ecx
  40583f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405840:	jl     0x405877
  405842:	pop    ecx
  405843:	cmp    esp,eax
  405845:	test   BYTE PTR [ecx-0x80],0x45
  405849:	sub    BYTE PTR [edi+0x47],al
  40584c:	adc    DWORD PTR [edx+0x7b1effc9],0x1a
  405853:	push   ecx
  405854:	inc    esp
  405855:	xlat   BYTE PTR ds:[ebx]
  405856:	mov    ds:0x8025e6e3,eax
  40585b:	loop   0x40584d
  40585d:	push   ebp
  40585e:	sub    DWORD PTR [edx],ecx
  405860:	scas   al,BYTE PTR es:[edi]
  405861:	jmp    0xdc4cf58e
  405866:	test   DWORD PTR [edx-0x1e],edx
  405869:	mov    dh,0x77
  40586b:	dec    ebx
  40586c:	add    BYTE PTR [eax],0x18
  40586f:	(bad)  
  405870:	out    dx,eax
  405871:	jb     0x405839
  405873:	test   eax,0xb92d7f60
  405878:	or     al,BYTE PTR [ebp+0x4d]
  40587b:	xchg   esp,eax
  40587c:	inc    ecx
  40587d:	clc    
  40587e:	dec    ebp
  40587f:	xor    DWORD PTR [ecx],edi
  405881:	add    al,0xe
  405883:	push   ecx
  405884:	bound  ebp,QWORD PTR [ecx+0x3365f262]
  40588a:	mov    dl,0x57
  40588c:	adc    bh,al
  40588e:	jne    0x4058ef
  405890:	fisubr DWORD PTR cs:[eax-0x64f7ca81]
  405897:	push   edi
  405898:	mov    al,dl
  40589a:	cmp    esi,DWORD PTR [eax+edx*2]
  40589d:	ja     0x40587e
  40589f:	in     eax,0x90
  4058a1:	dec    esp
  4058a2:	or     BYTE PTR [eax+0x43],al
  4058a5:	cmp    BYTE PTR [ebx+ebx*2+0x48b6ddd7],al
  4058ac:	out    dx,al
  4058ad:	mov    ds:0x63ae97fd,al
  4058b2:	cmp    BYTE PTR [ecx+0x69],0xee
  4058b6:	and    bl,bh
  4058b8:	pop    esi
  4058b9:	ret    0xc48e
  4058bc:	jmp    0x4058a5
  4058be:	and    eax,0x5cb4569a
  4058c3:	sub    DWORD PTR [ebp+0x3d],0x61
  4058c7:	or     dh,dl
  4058c9:	(bad)  
  4058ca:	adc    edi,ebp
  4058cc:	inc    esp
  4058cd:	ret    
  4058ce:	mov    bl,0xc9
  4058d0:	(bad)  
  4058d1:	aam    0x8f
  4058d3:	push   esp
  4058d4:	ret    0x5f54
  4058d7:	pop    di
  4058d9:	das    
  4058da:	je     0x4058ba
  4058dc:	shr    BYTE PTR [esi+0x8fbeca3],cl
  4058e2:	ds jo  0x405950
  4058e5:	or     bh,cl
  4058e7:	(bad)  
  4058e8:	cmp    edx,DWORD PTR [ebp-0x202349b]
  4058ee:	xor    bh,BYTE PTR gs:[edi+0x36313bdb]
  4058f5:	das    
  4058f6:	int3   
  4058f7:	xchg   BYTE PTR [eax-0x20],bh
  4058fa:	pusha  
  4058fb:	mov    ah,0x3e
  4058fd:	pop    esi
  4058fe:	repnz mov bh,0x2f
  405901:	int    0x5f
  405903:	lods   eax,DWORD PTR ds:[esi]
  405904:	cmp    DWORD PTR [eax-0x1985969b],ebx
  40590a:	mov    bh,0x27
  40590c:	jg     0x4058e1
  40590e:	mov    ah,0x4a
  405910:	xchg   DWORD PTR [eax-0x5b4f4c0f],edx
  405916:	lods   al,BYTE PTR ds:[esi]
  405917:	push   ss
  405918:	cmp    BYTE PTR [eax-0x4d],bl
  40591b:	sbb    DWORD PTR [eax-0x714a8e95],0xdc42e4dc
  405925:	mov    ecx,0x7e108e7a
  40592a:	cmp    BYTE PTR [ecx],dl
  40592c:	shl    DWORD PTR [edi+0x0],1
  40592f:	cs push edx
  405931:	fnstsw WORD PTR [ebx-0x67480506]
  405937:	mov    edx,DWORD PTR [eax+0x14fcef1d]
  40593d:	mov    ah,BYTE PTR [edx]
  40593f:	and    eax,0x69e1adce
  405944:	pop    ss
  405945:	ja     0x4058cb
  405947:	mov    cl,0x9a
  405949:	scas   al,BYTE PTR es:[edi]
  40594a:	into   
  40594b:	int3   
  40594c:	sbb    BYTE PTR [ebx],dh
  40594e:	into   
  40594f:	test   al,0x7c
  405951:	or     esi,DWORD PTR [ebx+0x3191af5c]
  405957:	data16 outs dx,BYTE PTR ds:[esi]
  405959:	fnsave [ecx]
  40595b:	out    dx,al
  40595c:	sub    ebx,DWORD PTR [esi+edx*1-0x5d72d096]
  405963:	or     DWORD PTR [ebp+0x3edf2506],esp
  405969:	cmc    
  40596a:	sub    BYTE PTR ds:0xea86448c,al
  405970:	stos   DWORD PTR es:[edi],eax
  405971:	and    BYTE PTR [ecx-0x8],ch
  405974:	sub    esi,edi
  405976:	pop    edx
  405977:	test   eax,0x92cffa85
  40597c:	scas   eax,DWORD PTR es:[edi]
  40597d:	into   
  40597e:	lock push 0xffffffed
  405981:	pop    esi
  405982:	(bad)  
  405983:	stos   DWORD PTR es:[edi],eax
  405984:	sar    DWORD PTR [ecx-0x671763e9],1
  40598a:	jae    0x4059a7
  40598c:	push   ebp
  40598d:	les    ebp,FWORD PTR [ebx+0x23]
  405990:	ficom  DWORD PTR [edx-0x5b]
  405993:	mov    ebx,DWORD PTR [ebp-0x162357a3]
  405999:	scas   al,BYTE PTR es:[edi]
  40599a:	ret    
  40599b:	or     al,0x60
  40599d:	pop    ebx
  40599e:	int    0x10
  4059a0:	jo     0x405964
  4059a2:	sahf   
  4059a3:	and    bh,cl
  4059a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a6:	icebp  
  4059a7:	ins    DWORD PTR es:[edi],dx
  4059a8:	jle    0x4059c8
  4059aa:	in     eax,0x25
  4059ac:	pop    ss
  4059ad:	cmp    ebp,DWORD PTR [esi+0x25]
  4059b0:	or     BYTE PTR [esi-0x8b1dc99],bl
  4059b6:	mov    BYTE PTR [eax+0x18cc87b0],al
  4059bc:	es dec edi
  4059be:	pop    esp
  4059bf:	(bad)
  4059c3:	push   0xec993f23
  4059c8:	(bad)  
  4059c9:	mov    esi,0x8a4257f2
  4059ce:	not    DWORD PTR [edi]
  4059d0:	aas    
  4059d1:	pop    esp
  4059d2:	bound  esp,QWORD PTR [ebp+esi*1-0x55]
  4059d6:	jl     0x40599f
  4059d8:	(bad)  
  4059d9:	scas   eax,DWORD PTR es:[edi]
  4059da:	sti    
  4059db:	shl    DWORD PTR [ecx-0x51c62941],cl
  4059e1:	pop    esp
  4059e2:	not    BYTE PTR [edx+ebx*4]
  4059e5:	jmp    0x4059ae
  4059e7:	sti    
  4059e8:	adc    eax,0x2a27686a
  4059ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059ee:	aad    0x90
  4059f0:	add    al,BYTE PTR [edx]
  4059f2:	push   edx
  4059f3:	inc    edi
  4059f4:	das    
  4059f5:	call   0x7f10:0x529e14c6
  4059fc:	icebp  
  4059fd:	mov    ds:0x625603c9,eax
  405a02:	add    DWORD PTR [esi],edi
  405a04:	jmp    0x405a52
  405a06:	pusha  
  405a07:	push   cs
  405a08:	daa    
  405a09:	addr16 mov esi,0xfd26fedd
  405a0f:	out    dx,eax
  405a10:	adc    al,0x97
  405a12:	push   0x13bc1e17
  405a17:	das    
  405a18:	ins    BYTE PTR es:[edi],dx
  405a19:	push   cs
  405a1a:	popa   
  405a1b:	push   ebx
  405a1c:	adc    BYTE PTR [edx],ah
  405a1e:	mov    ah,0x8f
  405a20:	cmc    
  405a21:	sbb    DWORD PTR [ebx+0x9a321c0],ebp
  405a27:	and    DWORD PTR [eax],ecx
  405a29:	xchg   esp,eax
  405a2a:	leave  
  405a2b:	adc    dl,BYTE PTR [edx+0x4ce0258d]
  405a31:	cmc    
  405a32:	mov    DWORD PTR [edi],ebx
  405a34:	mov    ebp,0xa2bb70a0
  405a39:	in     eax,0xa
  405a3b:	xchg   esp,eax
  405a3c:	mov    BYTE PTR [eax],ah
  405a3e:	test   al,0xe5
  405a40:	xor    dh,BYTE PTR [ebx-0x675ba2d0]
  405a46:	dec    ecx
  405a47:	mov    WORD PTR [edi],ss
  405a49:	add    eax,0xaf0d1ef8
  405a4e:	inc    eax
  405a4f:	(bad)  
  405a50:	cmp    BYTE PTR [ebx+0x40e61e9a],bl
  405a56:	repz push ebx
  405a58:	mov    dh,0x26
  405a5a:	pop    esi
  405a5b:	hlt    
  405a5c:	add    BYTE PTR [edx+0x5b8ac103],0x4c
  405a63:	adc    BYTE PTR ds:0x39dd4329,dh
  405a69:	ss push 0xffffffe9
  405a6c:	int    0xf
  405a6e:	(bad)  
  405a6f:	lahf   
  405a70:	mov    ds:0xa7a26211,al
  405a75:	call   0xf450a16c
  405a7a:	xchg   edx,eax
  405a7b:	xchg   DWORD PTR [edi*4-0x18adedf8],edi
  405a82:	push   esi
  405a83:	cli    
  405a84:	xchg   eax,edi
  405a86:	lods   al,BYTE PTR ds:[esi]
  405a87:	fld    QWORD PTR [ebx-0x25e02c11]
  405a8d:	dec    eax
  405a8e:	push   ds
  405a8f:	mov    al,0x91
  405a91:	clc    
  405a92:	rcr    BYTE PTR [edx],0x18
  405a95:	fwait
  405a96:	jg     0x405a47
  405a98:	xchg   ebx,eax
  405a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a9a:	lar    edx,WORD PTR [eax+esi*2]
  405a9e:	rol    bl,cl
  405aa0:	fldz   
  405aa2:	sbb    BYTE PTR [ebx+0x78972284],bh
  405aa8:	test   BYTE PTR [ebx-0x3e4f50c2],bl
  405aae:	xchg   ecx,eax
  405aaf:	inc    ebx
  405ab0:	(bad)  
  405ab1:	push   edi
  405ab2:	rcl    DWORD PTR [esp+edx*4],1
  405ab5:	fwait
  405ab6:	xor    BYTE PTR [edx],ch
  405ab8:	xchg   edi,eax
  405ab9:	int3   
  405aba:	loop   0x405b2a
  405abc:	bsf    ebx,DWORD PTR [esi+0x51]
  405ac0:	sbb    eax,0xc6b08f31
  405ac5:	clc    
  405ac6:	xchg   edi,eax
  405ac7:	les    eax,FWORD PTR [ebx]
  405ac9:	mov    bh,0x8a
  405acb:	xor    al,0x58
  405acd:	pop    ebp
  405ace:	aas    
  405acf:	daa    
  405ad0:	cld    
  405ad1:	ds mov al,0xdf
  405ad4:	xchg   BYTE PTR [eax-0x6a],dl
  405ad7:	retf   
  405ad8:	cmp    dl,bh
  405ada:	loope  0x405af4
  405adc:	or     BYTE PTR [edi-0x2dffb7b7],bl
  405ae2:	in     al,0x85
  405ae4:	sub    eax,0xfa288540
  405ae9:	inc    esi
  405aea:	pop    ebx
  405aeb:	push   ecx
  405aec:	sbb    eax,0x4846fedc
  405af1:	sbb    DWORD PTR [edx-0x28],eax
  405af4:	(bad)  [eax]
  405af6:	xchg   ebp,eax
  405af7:	gs or  al,0xa5
  405afa:	jno    0x405a99
  405afc:	sbb    al,0xbf
  405afe:	test   DWORD PTR [eax+edi*1],edx
  405b01:	mov    ebx,0x52e77d21
  405b06:	push   esi
  405b07:	mov    ds:0xb71224dd,eax
  405b0c:	cmp    esi,DWORD PTR [ebp+0x30]
  405b0f:	and    eax,0x2b13311e
  405b14:	scas   eax,DWORD PTR es:[edi]
  405b15:	or     cl,BYTE PTR [esi+0x398eae19]
  405b1b:	xchg   edi,eax
  405b1c:	pop    ds
  405b1d:	fadd   QWORD PTR [edi+0x2c102515]
  405b23:	mov    WORD PTR [esi+0x2f48c635],ss
  405b29:	inc    edi
  405b2a:	sbb    BYTE PTR [edi],bl
  405b2c:	inc    ecx
  405b2d:	jmp    0xc040eaa2
  405b32:	cmp    eax,0xff465f87
  405b37:	mov    bl,0xe2
  405b39:	mov    dl,0xba
  405b3b:	repnz or BYTE PTR [eax+0x7242f45d],cl
  405b42:	lahf   
  405b43:	sbb    edx,ecx
  405b45:	inc    eax
  405b46:	mov    ebp,0x446525b6
  405b4b:	jmp    0x528c:0x1cb69d33
  405b52:	jp     0x405b23
  405b54:	clc    
  405b55:	punpcklbw mm2,DWORD PTR [ebx+0x4844251e]
  405b5c:	cmp    BYTE PTR [eax+eax*8],ch
  405b5f:	scas   eax,DWORD PTR es:[edi]
  405b60:	shl    al,1
  405b62:	push   0xffffffa6
  405b64:	xchg   esi,eax
  405b65:	mov    bl,0x16
  405b67:	daa    
  405b68:	mov    ebx,esi
  405b6a:	mov    cl,0x31
  405b6c:	int    0x21
  405b6e:	bound  ecx,QWORD PTR [ecx]
  405b70:	adc    cl,BYTE PTR [esp+esi*1+0x46]
  405b74:	mov    fs,WORD PTR [ecx]
  405b76:	or     bh,0xc6
  405b79:	sub    cl,BYTE PTR [esi-0x56]
  405b7c:	repz mov dh,0x1
  405b7f:	mov    edi,0x21daad5b
  405b84:	mov    edx,0xbcedca36
  405b89:	outs   dx,BYTE PTR ds:[esi]
  405b8a:	jns    0x405bd0
  405b8c:	pushf  
  405b8d:	into   
  405b8e:	push   cs
  405b8f:	pop    edx
  405b90:	pop    edi
  405b91:	enter  0x1984,0xd9
  405b95:	shl    DWORD PTR [ebx],1
  405b97:	pop    edx
  405b98:	xchg   ebx,eax
  405b99:	mov    ebp,0x1089002b
  405b9e:	sub    eax,0xc635ce0a
  405ba3:	pop    edi
  405ba4:	jno    0x405b5a
  405ba6:	arpl   WORD PTR [esi-0x5303e371],sp
  405bac:	sbb    ah,BYTE PTR [edi]
  405bae:	xor    DWORD PTR [ecx],esi
  405bb0:	ja     0x405bf7
  405bb2:	ss pop esp
  405bb4:	and    al,0xb7
  405bb6:	mov    cl,BYTE PTR [edx]
  405bb8:	xchg   ebp,eax
  405bb9:	das    
  405bba:	das    
  405bbb:	jbe    0x405bd5
  405bbd:	ja     0x405be8
  405bbf:	pop    ss
  405bc0:	in     al,dx
  405bc1:	add    DWORD PTR ds:0xc98ef0f2,0x6
  405bc8:	call   0x78bd:0xa346d179
  405bcf:	adc    eax,DWORD PTR [edx+0x4]
  405bd2:	push   edx
  405bd3:	or     eax,0x22ffbcd3
  405bd8:	std    
  405bd9:	xor    ebx,esi
  405bdb:	and    eax,0x2e3f01b1
  405be0:	fucomp st(1)
  405be2:	and    dl,BYTE PTR [eax-0x23c02ddc]
  405be8:	push   ds
  405be9:	jle    0x405c6a
  405beb:	lods   eax,DWORD PTR ds:[esi]
  405bec:	pop    esi
  405bed:	or     BYTE PTR [eax+0x2c],0x7f
  405bf1:	jno    0x405c27
  405bf3:	lds    ebx,FWORD PTR [ebx-0x6b]
  405bf6:	inc    ebx
  405bf7:	push   esp
  405bf8:	mov    ss,edi
  405bfa:	cld    
  405bfb:	mov    bh,0x6a
  405bfd:	les    ecx,FWORD PTR [eax]
  405bff:	pop    edi
  405c00:	clc    
  405c01:	sbb    eax,0x83516d90
  405c06:	adc    ch,BYTE PTR [ebp-0x6d94a73b]
  405c0c:	pushf  
  405c0d:	adc    DWORD PTR [edx+0x55],ecx
  405c10:	pusha  
  405c11:	add    DWORD PTR [edi],ebp
  405c13:	std    
  405c14:	(bad)  
  405c15:	repz inc eax
  405c17:	popa   
  405c18:	aaa    
  405c19:	fisttp DWORD PTR ds:0xb43d44aa
  405c1f:	call   0x2574dcd5
  405c24:	retf   0x858f
  405c27:	scas   al,BYTE PTR es:[edi]
  405c28:	loopne 0x405bc9
  405c2a:	xlat   BYTE PTR ds:[ebx]
  405c2b:	inc    esi
  405c2c:	scas   eax,DWORD PTR es:[edi]
  405c2d:	adc    BYTE PTR [ecx+0x3aa96e54],0x78
  405c34:	pusha  
  405c35:	imul   BYTE PTR [esi]
  405c37:	mov    ds:0xcae43b3c,eax
  405c3c:	scas   eax,DWORD PTR es:[edi]
  405c3d:	xor    al,BYTE PTR [esi]
  405c3f:	pusha  
  405c40:	dec    edi
  405c41:	(bad)  
  405c42:	xor    al,0xe6
  405c44:	mov    BYTE PTR [ebx+0x2a],cl
  405c47:	jnp    0x405bf7
  405c49:	push   ebp
  405c4a:	pop    eax
  405c4b:	pop    ss
  405c4c:	iret   
  405c4d:	sbb    eax,0xb4befac4
  405c52:	dec    edx
  405c53:	inc    ebx
  405c54:	mov    bh,0xb7
  405c56:	std    
  405c57:	out    dx,eax
  405c58:	dec    eax
  405c59:	mov    edx,0x121f6fb1
  405c5e:	mov    esi,0xbdc2f6a7
  405c63:	lea    ebp,[ebp+0x683946d2]
  405c69:	add    DWORD PTR [edx+ebp*2-0x4a360ede],0xa8e582bd
  405c74:	(bad)  
  405c75:	sub    ch,BYTE PTR [ebp+0x7d88c030]
  405c7b:	mov    esp,0x3e746df1
  405c80:	fisub  DWORD PTR [ecx+0x57ae6753]
  405c86:	popf   
  405c87:	mov    dl,0xb
  405c89:	cmp    al,0x95
  405c8b:	cmp    DWORD PTR [ebx+ebp*4-0x613d0a59],ebx
  405c92:	adc    ecx,DWORD PTR [eax]
  405c94:	mul    DWORD PTR [ebx]
  405c96:	test   DWORD PTR [eax+0x2357c8bc],ebx
  405c9c:	(bad)  
  405c9d:	mov    eax,0xa21ea0a1
  405ca2:	jp     0x405cf4
  405ca4:	sahf   
  405ca5:	ja     0x405ca1
  405ca7:	push   0xc76e9932
  405cac:	push   esi
  405cad:	add    ebp,ebx
  405caf:	lods   al,BYTE PTR ds:[esi]
  405cb0:	cmp    ah,ah
  405cb2:	in     al,0x28
  405cb4:	dec    esp
  405cb5:	not    BYTE PTR [edi+eiz*1+0x66874afa]
  405cbc:	or     eax,0xf28243e6
  405cc1:	xchg   edx,edx
  405cc3:	xchg   ebp,eax
  405cc4:	sbb    bh,bl
  405cc6:	addr16 mov edi,0xdefe0afc
  405ccc:	xor    al,0xfb
  405cce:	sbb    eax,0x13ba0e6d
  405cd3:	retf   
  405cd4:	loopne 0x405d20
  405cd6:	pop    edx
  405cd7:	dec    edi
  405cd8:	mov    ?,WORD PTR [ebx]
  405cda:	and    eax,0x467a7d8d
  405cdf:	jp     0x405c61
  405ce1:	ja     0x405d3b
  405ce3:	call   0x12aa:0xfa73c0f8
  405cea:	stos   BYTE PTR es:[edi],al
  405ceb:	ds push eax
  405ced:	(bad)  
  405cee:	mov    ecx,0x36729e7a
  405cf3:	std    
  405cf4:	add    dl,BYTE PTR [edx-0x37]
  405cf7:	push   ss
  405cf8:	xchg   ecx,eax
  405cf9:	pusha  
  405cfa:	mov    bh,0x4b
  405cfc:	push   ebx
  405cfd:	int3   
  405cfe:	stc    
  405cff:	push   edx
  405d00:	loope  0x405cbf
  405d02:	jb     0x405cfa
  405d04:	adc    cl,BYTE PTR gs:[esi+0x41]
  405d08:	xchg   ecx,eax
  405d09:	scas   eax,DWORD PTR es:[edi]
  405d0a:	xchg   edx,eax
  405d0b:	sub    eax,0xe4692b07
  405d10:	mov    ebx,0x7f857355
  405d15:	adc    DWORD PTR [esi-0x713acedd],ebx
  405d1b:	shl    BYTE PTR [eax],1
  405d1d:	pop    edi
  405d1e:	adc    bh,al
  405d20:	in     al,0xae
  405d22:	call   DWORD PTR [edx-0x940525a]
  405d28:	lock jl 0x405d6c
  405d2b:	dec    esi
  405d2c:	jmp    0xca6c:0x9d206567
  405d33:	add    ah,BYTE PTR [ecx]
  405d35:	add    DWORD PTR [eax+0x293469e1],edx
  405d3b:	jecxz  0x405d15
  405d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d3e:	idiv   DWORD PTR [esi+ebp*8-0x27dd7d56]
  405d45:	xor    DWORD PTR [edi+0x38f38cd2],0x213e666c
  405d4f:	jge    0x405dc4
  405d51:	out    0x32,eax
  405d53:	mov    ds:0x877d740c,al
  405d58:	test   BYTE PTR [edx-0x76],ch
  405d5b:	lods   eax,DWORD PTR ds:[esi]
  405d5c:	xlat   BYTE PTR ds:[ebx]
  405d5d:	sbb    bh,BYTE PTR [esi+0x229c569d]
  405d63:	(bad)  [ebx]
  405d65:	or     eax,0xea18349b
  405d6a:	inc    esi
  405d6b:	inc    edx
  405d6c:	or     DWORD PTR [ebp-0x4f],eax
  405d6f:	cli    
  405d70:	mov    edi,DWORD PTR [esi+eiz*2]
  405d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d74:	inc    ebp
  405d75:	pop    es
  405d76:	dec    ebx
  405d77:	pop    ds
  405d78:	xchg   ebp,eax
  405d79:	mov    ch,0xf
  405d7b:	mov    ebp,0x14deeb37
  405d80:	in     al,0x52
  405d82:	xlat   BYTE PTR ds:[ebx]
  405d83:	loop   0x405df1
  405d85:	xchg   BYTE PTR [eax-0x27],cl
  405d88:	adc    ch,ah
  405d8a:	and    ebx,ebp
  405d8c:	int3   
  405d8d:	fadd   DWORD PTR [esi-0x48e5029]
  405d93:	and    eax,0xc5fdbc59
  405d98:	pusha  
  405d99:	lods   al,BYTE PTR ds:[esi]
  405d9a:	or     DWORD PTR [esp+eiz*8],esp
  405d9d:	icebp  
  405d9e:	add    edi,DWORD PTR [edx+ebx*4]
  405da1:	dec    eax
  405da2:	xor    ch,BYTE PTR [eax]
  405da4:	pushf  
  405da5:	push   ss
  405da6:	cli    
  405da7:	push   ebp
  405da8:	fild   WORD PTR [edx]
  405daa:	or     DWORD PTR [edx],edi
  405dac:	in     al,dx
  405dad:	in     eax,0x31
  405daf:	mov    ds:0x6c688775,eax
  405db4:	mov    ecx,0xe649f3b4
  405db9:	push   ds
  405dba:	fwait
  405dbb:	inc    esp
  405dbc:	out    dx,al
  405dbd:	shl    BYTE PTR [edx],0xf6
  405dc0:	adc    ah,BYTE PTR [edx-0x311e824e]
  405dc6:	push   ecx
  405dc7:	adc    BYTE PTR [ebx+0x382b0d0],al
  405dcd:	mov    esp,0xad04361e
  405dd2:	lea    ebx,[edx]
  405dd4:	jmp    0xc36:0x110e3122
  405ddb:	icebp  
  405ddc:	icebp  
  405ddd:	jle    0x405db8
  405ddf:	sub    BYTE PTR [edi+0x14],bl
  405de2:	repz dec eax
  405de4:	fistp  DWORD PTR [ebx+0xf6be177]
  405dea:	(bad)  
  405dec:	ds add eax,0xa4142890
  405df2:	xor    al,0x1a
  405df4:	inc    edx
  405df5:	cmp    esp,DWORD PTR [edx-0x3b]
  405df8:	jmp    0xe221c3c6
  405dfd:	dec    edi
  405dfe:	out    dx,eax
  405dff:	pushf  
  405e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e01:	ror    BYTE PTR [ebp-0x616aa4f7],0x7f
  405e08:	je     0x405e4e
  405e0a:	sbb    eax,0xeedbfb47
  405e0f:	nop
  405e10:	or     DWORD PTR [ecx+edx*1-0x67],edx
  405e14:	retf   
  405e15:	mov    cl,0x9a
  405e17:	shr    BYTE PTR [ecx],1
  405e19:	push   ss
  405e1a:	leave  
  405e1b:	inc    ebp
  405e1c:	sahf   
  405e1d:	jmp    0x1d99:0xa4952bc
  405e24:	in     al,0xb0
  405e26:	and    ebp,DWORD PTR [esi+0x369864ea]
  405e2c:	mov    ebp,0x1dee30b6
  405e31:	bound  edi,QWORD PTR [edx-0x7a6534eb]
  405e37:	popa   
  405e38:	xchg   esp,eax
  405e39:	dec    edi
  405e3a:	push   0xabb8845d
  405e3f:	sbb    al,0xc6
  405e41:	xor    ah,BYTE PTR [edx-0x21923270]
  405e47:	add    eax,0x42de737c
  405e4c:	retf   0xc3fb
  405e4f:	sbb    eax,0x44124f13
  405e54:	sub    bh,0x9b
  405e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e58:	pop    esi
  405e59:	nop
  405e5a:	test   BYTE PTR [ebx+ebx*1+0x33],0x20
  405e5f:	fs sahf 
  405e61:	hlt    
  405e62:	add    al,BYTE PTR [ebp+0xe698112]
  405e68:	inc    edx
  405e69:	pop    ss
  405e6a:	shl    DWORD PTR [edi-0x20],cl
  405e6d:	mov    bh,0xb7
  405e6f:	ret    
  405e70:	xchg   esi,eax
  405e71:	mov    al,ds:0xba1af1d3
  405e76:	mov    edx,0xb147e0c4
  405e7b:	sbb    al,0x8f
  405e7d:	(bad)  [edi+0x72]
  405e80:	and    edx,DWORD PTR [edi+0x8]
  405e83:	inc    esp
  405e84:	ja     0x405ec0
  405e86:	inc    esi
  405e87:	xor    al,0xa6
  405e89:	shl    BYTE PTR [ebx+ebx*8-0x70],1
  405e8d:	xchg   BYTE PTR [edx],bh
  405e8f:	test   eax,0x194ad3e8
  405e94:	popf   
  405e95:	or     eax,0x7dfed2ec
  405e9a:	inc    esp
  405e9b:	pop    ss
  405e9c:	ins    BYTE PTR es:[edi],dx
  405e9d:	push   ebp
  405e9e:	xor    DWORD PTR [ebx],edi
  405ea0:	enter  0xfba6,0x71
  405ea4:	pop    ds
  405ea5:	(bad)  
  405ea6:	aam    0x4b
  405ea8:	cmp    eax,0x64c6591e
  405ead:	and    edi,DWORD PTR [ebp+0x46]
  405eb0:	jae    0x405e48
  405eb2:	adc    BYTE PTR [ebx],ch
  405eb4:	inc    ecx
  405eb5:	lea    edx,[edx+0x18]
  405eb8:	pop    esi
  405eb9:	sbb    BYTE PTR [ebp+ebp*1-0x3b],ah
  405ebd:	or     ah,BYTE PTR [ebx-0x48]
  405ec0:	jns    0x405e4e
  405ec2:	test   cl,bl
  405ec4:	das    
  405ec5:	mov    esi,DWORD PTR [ebx]
  405ec7:	je     0x405ef6
  405ec9:	add    al,0xac
  405ecb:	xchg   ecx,eax
  405ecc:	jp     0x405e56
  405ece:	mov    cl,0x3e
  405ed0:	sar    BYTE PTR [edi],cl
  405ed2:	rcr    BYTE PTR [edi+0x1aa0bb5d],1
  405ed8:	sti    
  405ed9:	lds    edi,FWORD PTR [edi]
  405edb:	jae    0x405e97
  405edd:	cld    
  405ede:	ror    BYTE PTR [ebx],cl
  405ee0:	dec    ecx
  405ee1:	push   ecx
  405ee2:	bswap  ebp
  405ee4:	pop    ebp
  405ee5:	rcl    DWORD PTR [edx+0xf],1
  405ee8:	inc    esp
  405ee9:	pop    esp
  405eea:	mov    esi,0xcf7d0709
  405eef:	push   esi
  405ef0:	sti    
  405ef1:	jno    0x405f63
  405ef3:	dec    ebp
  405ef4:	(bad)  
  405ef5:	ds pop esp
  405ef7:	mov    ecx,0xf372a0be
  405efc:	push   0xc3e595d9
  405f01:	add    al,cl
  405f03:	test   BYTE PTR [edi-0xbf698fe],0x4b
  405f0a:	push   0xfc0ae207
  405f0f:	ror    DWORD PTR ss:[ebx],1
  405f12:	cli    
  405f13:	add    ebp,DWORD PTR [esi+0x1f8a3c2f]
  405f19:	out    0x62,al
  405f1b:	push   esi
  405f1c:	jmp    DWORD PTR [esi+0x39]
  405f1f:	jns    0x405f2a
  405f21:	inc    esi
  405f22:	jge    0x405f8c
  405f24:	lods   al,BYTE PTR ds:[esi]
  405f25:	arpl   WORD PTR [ebp+0x7],si
  405f28:	jae    0x405eac
  405f2a:	jp     0x405f53
  405f2c:	sahf   
  405f2d:	push   ds
  405f2e:	jmp    0x31cb47c9
  405f33:	(bad)  
  405f34:	stos   DWORD PTR es:[edi],eax
  405f35:	ret    0x5f2
  405f38:	ds ret 
  405f3a:	push   ecx
  405f3b:	mov    ebp,0x637fe032
  405f40:	into   
  405f41:	cdq    
  405f42:	xlat   BYTE PTR ds:[ebx]
  405f43:	pop    ds
  405f44:	call   0xb7f7:0x7263fd36
  405f4b:	scas   eax,DWORD PTR es:[edi]
  405f4c:	adc    DWORD PTR es:[edx],esp
  405f4f:	jb     0x405efe
  405f51:	in     al,dx
  405f52:	inc    ecx
  405f53:	sub    al,0x74
  405f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f56:	sbb    BYTE PTR [ebx-0x6f],cl
  405f59:	cs lock in al,dx
  405f5c:	rol    BYTE PTR [ecx],0xc
  405f5f:	cpuid  
  405f61:	sub    al,0x3
  405f63:	jp     0x405ee9
  405f65:	push   edi
  405f66:	sbb    BYTE PTR [eax+0x3f],0xaa
  405f6a:	loopne 0x405f4a
  405f6c:	cdq    
  405f6d:	xchg   edx,eax
  405f6e:	test   al,0xa6
  405f70:	push   esp
  405f71:	(bad)  [edx-0x33eda126]
  405f77:	test   DWORD PTR [edx+0xc],0xd9837073
  405f7e:	aad    0xc7
  405f80:	xor    eax,0x27c1b1ee
  405f85:	dec    edx
  405f86:	and    DWORD PTR [eax],0x73
  405f89:	es ds test edi,edi
  405f8d:	iret   
  405f8e:	(bad)  
  405f90:	dec    edi
  405f91:	jecxz  0x405fb8
  405f93:	arpl   di,cx
  405f95:	loopne 0x405fd0
  405f97:	jb     0x405f75
  405f99:	sbb    BYTE PTR [ebx+0x28a459eb],dl
  405f9f:	push   esi
  405fa0:	adc    al,0x2d
  405fa2:	out    dx,al
  405fa3:	sub    BYTE PTR ds:0xdc6e2f3,0xb4
  405faa:	jmp    DWORD PTR [ebx+edx*4+0x66]
  405fae:	out    dx,eax
  405faf:	dec    ebx
  405fb0:	jns    0x405ff8
  405fb2:	lods   al,BYTE PTR ds:[esi]
  405fb3:	pop    esi
  405fb4:	cli    
  405fb5:	(bad)  
  405fb6:	jmp    0x25c13721
  405fbb:	inc    ebx
  405fbc:	arpl   WORD PTR [edx],di
  405fbe:	sbb    eax,0xe7f52cef
  405fc3:	cmp    eax,0x45653e66
  405fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fc9:	push   es
  405fca:	fadd   QWORD PTR [ebx-0x5b15489c]
  405fd0:	jb     0x405f73
  405fd2:	call   0x42da:0x3d584d91
  405fd9:	cs pop es
  405fdb:	lea    esi,[eax+0x5f]
  405fde:	sbb    BYTE PTR [eax],dh
  405fe0:	mov    esp,0x89c905f2
  405fe5:	test   al,0xb9
  405fe7:	xchg   esp,eax
  405fe8:	fnstenv [edx]
  405fea:	mov    esp,0xa16d1dd0
  405fef:	and    al,BYTE PTR [edi+eiz*2-0x67]
  405ff3:	pushf  
  405ff4:	hlt    
  405ff5:	jecxz  0x406013
  405ff7:	jg     0x405fce
  405ff9:	stc    
  405ffa:	mov    edi,0x365892a7
  405fff:	and    esi,DWORD PTR [ecx+0x78]
  406002:	adc    bl,bl
  406004:	inc    DWORD PTR [esi+0x14046c2]
  40600a:	inc    ecx
  40600b:	mov    dh,0x5a
  40600d:	arpl   cx,si
  40600f:	xchg   ecx,eax
  406010:	lds    edi,FWORD PTR [ebx+edi*8]
  406013:	pop    ebx
  406014:	push   ecx
  406015:	call   0xd747b40d
  40601a:	jle    0x406082
  40601c:	cmp    DWORD PTR [eax-0x35],eax
  40601f:	dec    ebx
  406020:	add    BYTE PTR [edi+0x446965df],dh
  406026:	pop    ecx
  406027:	mov    ebp,0xf9c687d0
  40602c:	aad    0xfe
  40602e:	mov    bl,BYTE PTR [esi+0x24845f2a]
  406034:	pop    ebx
  406035:	push   ebp
  406036:	or     al,0x16
  406038:	mov    ecx,ebp
  40603a:	gs test al,0xd9
  40603d:	xor    al,0xa5
  40603f:	aaa    
  406040:	add    BYTE PTR [edi],dl
  406042:	mov    edi,0x528213f0
  406047:	jb     0x405ffa
  406049:	out    0x48,al
  40604b:	cmp    BYTE PTR [ebx+0x68],cl
  40604e:	cwde   
  40604f:	cmp    bl,BYTE PTR [edi-0xb3bbd9f]
  406055:	outs   dx,BYTE PTR ds:[esi]
  406056:	sbb    esp,DWORD PTR [eax]
  406058:	loopne 0x405fde
  40605a:	inc    esp
  40605b:	xchg   esi,eax
  40605c:	pushf  
  40605d:	cmp    eax,0xecd9ec52
  406062:	jge    0x4060db
  406064:	hlt    
  406065:	and    al,al
  406067:	cmovno edx,esi
  40606a:	mov    edx,0x7d82426d
  40606f:	out    0xd6,al
  406071:	fild   WORD PTR [ebx]
  406073:	jmp    0xeb093854
  406078:	in     al,0x89
  40607a:	sbb    esi,DWORD PTR [esi-0x55]
  40607d:	sbb    eax,0xb5e6b148
  406082:	push   esp
  406083:	sbb    BYTE PTR [eax+edx*4+0x8f52e99],bh
  40608a:	sub    ebp,edx
  40608c:	adc    BYTE PTR [esi+0x64],bh
  40608f:	aas    
  406090:	add    ah,BYTE PTR [ecx]
  406092:	sbb    ah,BYTE PTR [esi]
  406094:	xor    BYTE PTR [edx-0x4c],ah
  406097:	bswap  edx
  406099:	hlt    
  40609a:	ficomp DWORD PTR [ebx-0x9d2e434]
  4060a0:	icebp  
  4060a1:	rcl    BYTE PTR ds:0x73348710,cl
  4060a7:	inc    ebx
  4060a8:	mov    ch,BYTE PTR cs:[eax+esi*4]
  4060ac:	in     al,dx
  4060ad:	fwait
  4060ae:	jbe    0x406050
  4060b0:	push   esp
  4060b1:	jg     0x4060df
  4060b3:	pop    edi
  4060b4:	cmp    ecx,DWORD PTR [edx]
  4060b6:	xor    esp,DWORD PTR [edx+0x27]
  4060b9:	dec    edx
  4060ba:	or     al,0xc
  4060bc:	out    0xcf,eax
  4060be:	mov    cl,0xd0
  4060c0:	sbb    ebx,DWORD PTR [eax+edi*8-0x1aea2051]
  4060c7:	mov    ebx,0xe7e1da97
  4060cc:	imul   DWORD PTR ds:0x41a72f93
  4060d2:	(bad)  
  4060d3:	sbb    eax,0x95997317
  4060d8:	adc    DWORD PTR [ebp-0x2d],esp
  4060db:	out    0x6c,eax
  4060dd:	shr    bl,0xa0
  4060e0:	rcr    DWORD PTR [esi+0x4b32e652],0x31
  4060e7:	jae    0x40609f
  4060e9:	xor    cl,al
  4060eb:	pop    ss
  4060ec:	imul   esi,DWORD PTR [esp+edi*4+0x5f2487f3],0xac23a8ae
  4060f7:	out    dx,eax
  4060f8:	jae    0x40611b
  4060fa:	bnd jno 0x406142
  4060fd:	cmp    al,0x72
  4060ff:	retf   0xab0e
  406102:	pop    es
  406103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406104:	mov    bh,0xe1
  406106:	retf   
  406107:	rcr    BYTE PTR [edi+0x75],cl
  40610a:	mov    esp,0xbda25f2e
  40610f:	mov    es:0x8fcd5f08,al
  406115:	(bad)  
  406116:	push   esp
  406117:	jmp    ebx
  406119:	mov    edx,DWORD PTR [edi]
  40611b:	xor    dh,dh
  40611d:	arpl   bx,di
  40611f:	lds    eax,FWORD PTR [ebx]
  406121:	cmp    DWORD PTR [eax+0x19a0b2eb],esi
  406127:	add    BYTE PTR [ebx+0x519a74e9],bl
  40612d:	(bad)  
  40612e:	xor    al,0x13
  406130:	repz push cs
  406132:	dec    dx
  406134:	adc    al,0x7
  406136:	jecxz  0x4060c0
  406138:	imul   edx,DWORD PTR [ecx+ebp*2-0x17b510fd],0xffffffbe
  406140:	sbb    bh,bl
  406142:	das    
  406143:	pop    ss
  406144:	(bad)  
  406145:	mov    ebp,0x6cde7e66
  40614a:	sbb    edi,DWORD PTR [eax-0x39d83aed]
  406150:	repnz cmp DWORD PTR [edx],esi
  406153:	repnz sub edi,DWORD PTR [edx+0x5f]
  406157:	mov    dh,0xe9
  406159:	mov    edx,0xc223e559
  40615e:	push   esp
  40615f:	cmp    DWORD PTR [eax-0x6d93e415],esi
  406165:	(bad)  
  406166:	pop    ds
  406167:	int    0xc7
  406169:	dec    BYTE PTR [edx-0x2190bc51]
  40616f:	dec    eax
  406170:	loopne 0x40611e
  406172:	jo     0x40616d
  406174:	dec    esi
  406175:	push   ebx
  406176:	or     eax,0xf0b79615
  40617b:	push   edx
  40617c:	mov    eax,ds:0xaf5244b3
  406181:	push   ds
  406182:	mov    DWORD PTR ds:0x6460955e,edx
  406188:	shr    DWORD PTR [edx-0x7f],cl
  40618b:	adc    al,0x7
  40618d:	mov    eax,ds:0x1b6818fb
  406192:	aad    0x36
  406194:	pop    eax
  406195:	test   esi,esi
  406197:	into   
  406198:	sbb    bh,0xed
  40619b:	test   DWORD PTR [ebp+0x47],eax
  40619e:	or     eax,0x6f0a9b76
  4061a3:	adc    al,0x79
  4061a5:	leave  
  4061a6:	dec    ebp
  4061a7:	inc    edx
  4061a8:	mov    es,eax
  4061aa:	lock pushf 
  4061ac:	int    0xa8
  4061ae:	dec    esp
  4061af:	ret    0xdb69
  4061b2:	xchg   DWORD PTR [ecx-0x547204b2],edx
  4061b8:	aas    
  4061b9:	in     eax,dx
  4061ba:	test   eax,0xf6ed4d29
  4061bf:	jb     0x40616d
  4061c1:	mov    dl,0xcd
  4061c3:	add    dh,al
  4061c5:	or     dh,BYTE PTR [eax+0x7f0180aa]
  4061cb:	daa    
  4061cc:	xor    BYTE PTR [ebx+0x73],0xc
  4061d0:	cmp    al,0xe3
  4061d2:	or     ecx,DWORD PTR [ebx+eiz*4-0x4f]
  4061d6:	gs sbb al,0x7a
  4061d9:	add    al,0x1a
  4061db:	test   eax,0x73f572f4
  4061e0:	mov    DWORD PTR [eax],ebp
  4061e2:	push   eax
  4061e3:	out    dx,eax
  4061e4:	aas    
  4061e5:	mov    al,0x49
  4061e7:	mov    dl,0xc8
  4061e9:	pop    ecx
  4061ea:	xchg   ecx,eax
  4061eb:	xchg   ebx,eax
  4061ec:	or     ebp,DWORD PTR [eax+0x55]
  4061ef:	gs sbb al,0x2e
  4061f2:	adc    BYTE PTR [ebp-0x211049a2],ch
  4061f8:	add    eax,0x61119c87
  4061fd:	das    
  4061fe:	add    BYTE PTR [ebp+0x74],cl
  406201:	es cmp al,0x87
  406204:	mov    bl,0x30
  406206:	mov    BYTE PTR [esp+eax*8],ch
  406209:	sahf   
  40620a:	jmp    0x9c0dab3c
  40620f:	ret    0x823d
  406212:	mov    bh,0xf4
  406214:	pop    edi
  406215:	sahf   
  406216:	loop   0x406229
  406218:	int    0x17
  40621a:	shl    DWORD PTR [ecx-0x3e5e9ac0],0x25
  406221:	mov    edx,0x8ff219c
  406226:	jne    0x4061d4
  406228:	jae    0x406275
  40622a:	jge    0x4061b1
  40622c:	add    ch,BYTE PTR [ebp+0x40919adc]
  406232:	retf   
  406233:	cli    
  406234:	lods   al,BYTE PTR ds:[esi]
  406235:	inc    esi
  406236:	inc    edx
  406237:	mov    esi,edx
  406239:	mov    BYTE PTR [edi-0x43014657],cl
  40623f:	and    DWORD PTR [ebx],0x4faae118
  406245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406246:	cmp    eax,0xbbc3bce9
  40624b:	imul   eax,DWORD PTR [eax],0xffffffa5
  40624e:	sbb    dl,BYTE PTR [ecx+edi*1]
  406251:	mov    ds:0x8e1b60d2,eax
  406256:	fidivr WORD PTR [esi-0x649b13b8]
  40625c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40625d:	dec    edx
  40625e:	lea    edi,[edx+eax*2+0x63801a5c]
  406265:	sbb    BYTE PTR [esp+edx*2],bh
  406268:	cdq    
  406269:	adc    eax,0x620be37a
  40626e:	addr16 cmc 
  406270:	mov    cl,0xb
  406272:	inc    ebx
  406273:	dec    edi
  406274:	mov    bh,0xc1
  406276:	sbb    DWORD PTR [ecx+0x16],edi
  406279:	push   ebx
  40627a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40627b:	mov    WORD PTR [ecx],ss
  40627d:	adc    BYTE PTR [edi],ch
  40627f:	cmp    DWORD PTR fs:[esi-0x5549ffb2],eax
  406286:	inc    ecx
  406287:	cmc    
  406288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406289:	fisttp QWORD PTR [bp+si-0x39d7]
  40628e:	dec    eax
  40628f:	loop   0x40626f
  406291:	stos   DWORD PTR es:[edi],eax
  406292:	inc    eax
  406293:	push   ebp
  406294:	adc    DWORD PTR [edx+0x6405950e],ebx
  40629a:	mov    bh,0x69
  40629c:	ret    
  40629d:	push   esp
  40629e:	test   BYTE PTR [ebp+0x37],bh
  4062a1:	xchg   edx,eax
  4062a2:	sar    DWORD PTR [esi+0xc91a56d],1
  4062a8:	fstp   TBYTE PTR [edi]
  4062aa:	stos   BYTE PTR es:[edi],al
  4062ab:	push   ds
  4062ac:	adc    edi,ecx
  4062ae:	pop    esi
  4062af:	in     al,dx
  4062b0:	cdq    
  4062b1:	pop    edi
  4062b2:	push   ss
  4062b3:	xor    al,0x6a
  4062b5:	dec    edx
  4062b6:	sub    ah,ah
  4062b8:	enter  0xd082,0x68
  4062bc:	cmp    cl,cl
  4062be:	xor    DWORD PTR [edx+eax*4-0x15a4c94],0xffffff82
  4062c6:	and    eax,0x2268db26
  4062cb:	ins    BYTE PTR es:[edi],dx
  4062cc:	sub    DWORD PTR [ecx],ecx
  4062ce:	mov    ch,0x41
  4062d0:	adc    al,0x95
  4062d2:	fidivr DWORD PTR [ebx-0x69]
  4062d5:	(bad)  
  4062d6:	adc    cl,BYTE PTR [ebx+eiz*1]
  4062d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062da:	fistp  DWORD PTR ds:[edx+0x6a5ae4e6]
  4062e1:	jns    0x4062bb
  4062e3:	sar    BYTE PTR [ebp-0x16],cl
  4062e6:	inc    ebx
  4062e7:	push   0xffffffb5
  4062e9:	pushf  
  4062ea:	stos   DWORD PTR es:[edi],eax
  4062eb:	xor    esp,DWORD PTR [edx-0x1b]
  4062ee:	loopne 0x406272
  4062f0:	ror    DWORD PTR [esi],cl
  4062f2:	push   ebx
  4062f3:	mov    gs,WORD PTR [ebp+eax*1-0x6b70626d]
  4062fa:	pop    esi
  4062fb:	and    dl,bl
  4062fd:	stc    
  4062fe:	fsub   QWORD PTR [ecx]
  406300:	iret   
  406301:	outs   dx,BYTE PTR ds:[esi]
  406302:	addr16 (bad) 
  406304:	fisub  DWORD PTR [esi]
  406306:	shl    BYTE PTR [esi],1
  406308:	push   esi
  406309:	cdq    
  40630a:	dec    BYTE PTR [edx-0x24]
  40630d:	or     esi,ebp
  40630f:	lods   al,BYTE PTR ds:[esi]
  406310:	mov    WORD PTR [edx],ds
  406312:	es adc esi,esi
  406315:	push   edx
  406316:	mov    BYTE PTR [eax-0x7d],al
  406319:	loopne 0x406322
  40631b:	in     al,dx
  40631c:	imul   DWORD PTR [ebp+0x1520d055]
  406322:	inc    ecx
  406323:	inc    edi
  406324:	mov    esp,0x69d15f6d
  406329:	ins    BYTE PTR es:[edi],dx
  40632a:	es nop
  40632c:	push   ebx
  40632d:	int    0x2
  40632f:	push   ds
  406330:	cmp    DWORD PTR [ebx+0x4ffccd0a],edx
  406336:	std    
  406337:	pop    esi
  406338:	adc    eax,0x34e6b09
  40633d:	push   cs
  40633e:	leave  
  40633f:	loop   0x4062d9
  406341:	mov    edx,0xd1dcf1fd
  406346:	dec    ebx
  406347:	sbb    DWORD PTR [eax-0xa],ecx
  40634a:	dec    ebp
  40634b:	mov    cl,0x42
  40634d:	xor    BYTE PTR [ecx],ch
  40634f:	sti    
  406350:	inc    ebp
  406351:	sbb    ah,cl
  406353:	mov    DWORD PTR [eax-0x333a468d],edx
  406359:	or     bl,0xd4
  40635c:	xlat   BYTE PTR ds:[ebx]
  40635d:	ins    BYTE PTR es:[edi],dx
  40635e:	(bad)  [edi+0x53]
  406361:	or     al,0xc7
  406363:	xlat   BYTE PTR ds:[ebx]
  406364:	in     eax,0x20
  406366:	add    BYTE PTR [eax],cl
  406368:	jle    0x4063de
  40636a:	cmp    edx,eax
  40636c:	pop    esp
  40636d:	(bad)  [eax+0x21]
  406370:	sti    
  406371:	jbe    0x406353
  406373:	cmp    dh,0xff
  406376:	pop    ebx
  406377:	or     eax,0x70d3e75f
  40637c:	lods   al,BYTE PTR ds:[esi]
  40637d:	test   eax,0xcb9f3d37
  406382:	dec    edx
  406383:	mov    bh,0xb
  406385:	jp     0x406402
  406387:	sbb    dl,BYTE PTR ds:0x20e0f2bd
  40638d:	push   0x28
  40638f:	inc    ebx
  406390:	xchg   BYTE PTR [ecx+0x41de3109],bl
  406396:	xor    bl,dl
  406398:	retf   
  406399:	rcr    DWORD PTR [eax-0x4b3985e0],cl
  40639f:	aam    0x59
  4063a1:	xchg   esp,eax
  4063a2:	sbb    edx,DWORD PTR fs:[esi-0x1e83c719]
  4063a9:	push   eax
  4063aa:	xchg   ebx,eax
  4063ab:	test   BYTE PTR [ecx],dl
  4063ad:	sub    BYTE PTR gs:[edi-0x75],0x59
  4063b2:	cmp    DWORD PTR [edi+0x41],esp
  4063b5:	xchg   ebx,eax
  4063b6:	dec    edx
  4063b7:	inc    edx
  4063b8:	add    eax,0x568a5ca0
  4063bd:	sub    BYTE PTR [esi],ah
  4063bf:	dec    esp
  4063c0:	imul   edi,ecx,0x29
  4063c3:	fcomp  QWORD PTR [edi]
  4063c5:	and    dl,BYTE PTR [ebx-0x7e]
  4063c8:	mov    al,0xb2
  4063ca:	int    0x8e
  4063cc:	enter  0xa14f,0xa8
  4063d0:	repz pop ebp
  4063d2:	xchg   edi,eax
  4063d3:	fwait
  4063d4:	adc    BYTE PTR [ecx-0x1b],al
  4063d7:	rcr    DWORD PTR [eax+0x57a8da67],cl
  4063dd:	jecxz  0x406412
  4063df:	arpl   WORD PTR [ebp-0x37136074],cx
  4063e5:	sbb    bl,ah
  4063e7:	mov    ?,ecx
  4063e9:	shl    DWORD PTR [esi-0x7c],1
  4063ec:	or     al,0xb4
  4063ee:	sahf   
  4063ef:	mov    ch,0x10
  4063f1:	add    al,0x8a
  4063f3:	mov    esi,0x5c3961af
  4063f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063f9:	ss mov al,dh
  4063fc:	cli    
  4063fd:	ret    0x9b94
  406400:	push   esi
  406401:	add    al,cl
  406403:	xlat   BYTE PTR ds:[ebx]
  406404:	(bad)  
  406405:	in     al,0xf2
  406407:	and    DWORD PTR [esi+0x35e683b1],ebp
  40640d:	sub    bl,cl
  40640f:	shl    BYTE PTR [edi],1
  406411:	mov    esp,0xfe703d8c
  406416:	mov    cl,0xb1
  406418:	push   es
  406419:	cmp    BYTE PTR [ebx],dl
  40641b:	dec    esi
  40641c:	jb     0x40646c
  40641e:	icebp  
  40641f:	jne    0x406457
  406421:	(bad)  
  406422:	and    bh,bl
  406424:	jno    0x406479
  406426:	jnp    0x4063ef
  406428:	ins    BYTE PTR es:[edi],dx
  406429:	mov    bl,0x91
  40642b:	xchg   esi,eax
  40642c:	js     0x406445
  40642e:	or     DWORD PTR [ecx],ecx
  406430:	jns    0x4063dd
  406432:	(bad)  
  406433:	loop   0x40649c
  406435:	xchg   edx,eax
  406436:	psubsw mm5,QWORD PTR [ebp-0x74336f5e]
  40643d:	(bad)  
  40643e:	iret   
  40643f:	sub    esi,esp
  406441:	pop    edx
  406442:	shl    ecx,1
  406444:	dec    edi
  406445:	pop    edi
  406446:	test   al,0xa1
  406448:	fiadd  DWORD PTR ds:0xc52b2fb4
  40644e:	std    
  40644f:	mov    gs,ebp
  406451:	imul   ecx,DWORD PTR [eax-0x6dd9fbe2],0x5f
  406458:	jmp    0x51cb:0xa1277453
  40645f:	mov    ecx,0xb7765a93
  406464:	repnz or al,0xaf
  406467:	inc    ebp
  406468:	or     BYTE PTR [eax],ch
  40646a:	ret    
  40646b:	mov    WORD PTR [ebp+0x38],ss
  40646e:	ror    DWORD PTR [edi],1
  406470:	jmp    0x63f28405
  406475:	mov    eax,0xfda8a3d6
  40647a:	jne    0x40649c
  40647c:	test   al,0xc2
  40647e:	xor    eax,DWORD PTR [esi-0x79]
  406481:	aaa    
  406482:	cli    
  406483:	xchg   edx,eax
  406484:	pusha  
  406485:	lahf   
  406486:	jne    0x40640d
  406488:	inc    ecx
  406489:	mov    ah,BYTE PTR [ebx+0x57]
  40648c:	shr    bh,0xc1
  40648f:	adc    al,0x8
  406491:	cmp    bl,ah
  406493:	jno    0x4064af
  406495:	rcr    BYTE PTR ds:0x78e3f4bb,1
  40649b:	push   ebx
  40649c:	fwait
  40649d:	xchg   edx,eax
  40649e:	mov    WORD PTR [esi+0x2e],fs
  4064a1:	adc    al,BYTE PTR [esi-0x26]
  4064a4:	xor    BYTE PTR [ecx],bh
  4064a6:	mov    edi,0x4af575a9
  4064ab:	mov    ebp,0xbc0f186d
  4064b0:	ret    0xe6b3
  4064b3:	iret   
  4064b4:	and    ecx,DWORD PTR [edi+edi*1-0x6c]
  4064b8:	iret   
  4064b9:	push   cs
  4064ba:	jnp    0x406463
  4064bc:	xor    DWORD PTR [esp+edx*1-0x74],edi
  4064c0:	push   0xffffffd7
  4064c2:	in     al,dx
  4064c3:	jne    0x4064f0
  4064c5:	(bad)  
  4064c6:	ficomp WORD PTR [edi-0x26]
  4064c9:	iret   
  4064ca:	mov    DWORD PTR [eax+0x287e4e9b],ebx
  4064d0:	mov    esi,0x229c5f22
  4064d5:	pop    esi
  4064d6:	(bad)  
  4064d7:	ficom  WORD PTR [ecx]
  4064d9:	sbb    eax,0x68cdc7f0
  4064de:	pop    ds
  4064df:	and    ebp,eax
  4064e1:	sbb    ebx,ecx
  4064e3:	xor    al,BYTE PTR [ecx]
  4064e5:	sahf   
  4064e6:	test   BYTE PTR [esi],ah
  4064e8:	sub    esi,DWORD PTR [ebp-0x6d1cf407]
  4064ee:	imul   DWORD PTR [esi+ebx*1+0x16]
  4064f2:	or     eax,DWORD PTR [esi+eax*4-0x1c3c83c0]
  4064f9:	pop    ss
  4064fa:	gs push edi
  4064fc:	arpl   WORD PTR [ebx+0x1af63db1],di
  406502:	jecxz  0x4064cc
  406504:	dec    esi
  406505:	icebp  
  406506:	jne    0x40650f
  406508:	mov    bh,BYTE PTR [eax]
  40650a:	(bad)
  40650e:	cmp    BYTE PTR ds:[edi+0x5c0112cb],dh
  406515:	stos   DWORD PTR es:[edi],eax
  406516:	pop    esi
  406517:	mov    ebp,0xe248dfb9
  40651c:	jo     0x4064fe
  40651e:	out    dx,eax
  40651f:	jmp    0xf230:0xdefe819e
  406526:	pop    esp
  406527:	rcl    DWORD PTR [ebp-0x56],0x89
  40652b:	mov    DWORD PTR ds:0x7326a4be,esp
  406531:	xchg   ebp,eax
  406532:	adc    eax,0x88d29864
  406537:	mov    eax,0xe0fcfe9b
  40653c:	(bad)  
  40653d:	pcmpeqb mm1,QWORD PTR [ebx+0x40ae86ad]
  406544:	rol    DWORD PTR [esi+edx*1],0xf3
  406548:	cli    
  406549:	sub    eax,esi
  40654b:	mov    ds,ebp
  40654d:	nop
  40654e:	adc    BYTE PTR [edx],cl
  406550:	stos   BYTE PTR es:[edi],al
  406551:	push   0x48
  406553:	xchg   edi,eax
  406554:	mov    edi,0x9e464b34
  406559:	add    al,0x86
  40655b:	clc    
  40655c:	xor    eax,0x5155b795
  406561:	push   eax
  406562:	sub    BYTE PTR [ecx+0x6b946400],0xdf
  406569:	push   eax
  40656a:	mov    ah,0xea
  40656c:	cmp    dl,BYTE PTR [edx+edx*4+0x4d08b1c8]
  406573:	in     eax,0xcf
  406575:	mov    edi,esi
  406577:	inc    ebp
  406578:	mov    ch,0xd6
  40657a:	scas   al,BYTE PTR es:[edi]
  40657b:	jmp    0x406539
  40657d:	ret    0x70ba
  406580:	hlt    
  406581:	push   ebp
  406582:	aaa    
  406583:	popa   
  406584:	jl     0x406541
  406586:	sub    BYTE PTR [eax-0x15149a21],dl
  40658c:	aas    
  40658d:	pop    ecx
  40658e:	dec    ecx
  40658f:	adc    DWORD PTR [edi-0x44],edi
  406592:	je     0x40656b
  406594:	ss jmp edx
  406597:	pop    edi
  406598:	pop    esi
  406599:	mov    ah,0x8a
  40659b:	leave  
  40659c:	adc    DWORD PTR [edi],0x6a
  40659f:	scas   al,BYTE PTR es:[edi]
  4065a0:	mov    ah,0x75
  4065a2:	mov    ds:0x16270d9e,al
  4065a7:	gs cmp ah,cl
  4065aa:	xchg   edi,eax
  4065ab:	test   edi,0xa439ac62
  4065b1:	inc    esi
  4065b2:	mov    al,0x2d
  4065b4:	retf   0x8c57
  4065b7:	sar    BYTE PTR [edx],0x8c
  4065ba:	pop    ebp
  4065bb:	imul   eax,esi,0x4567b9f7
  4065c1:	es jg  0x406572
  4065c4:	xchg   esp,ebp
  4065c6:	fstp   QWORD PTR [ebp+0x7f8d87c3]
  4065cc:	xchg   edi,eax
  4065cd:	jno    0x4065eb
  4065cf:	mov    esp,0xf2125627
  4065d4:	je     0x406617
  4065d6:	push   ecx
  4065d7:	xor    eax,0xe710142b
  4065dc:	stos   BYTE PTR es:[edi],al
  4065dd:	ins    DWORD PTR es:[edi],dx
  4065de:	or     DWORD PTR [edi+ebx*1-0x6b],esp
  4065e2:	iret   
  4065e3:	stos   DWORD PTR es:[edi],eax
  4065e4:	loop   0x406639
  4065e6:	cmp    eax,0x3e522b97
  4065eb:	pop    ebp
  4065ec:	jle    0x4065b2
  4065ee:	ror    DWORD PTR [eax-0xcdd3d63],0x95
  4065f5:	xchg   esp,eax
  4065f6:	xor    esp,DWORD PTR [edi-0x485e936c]
  4065fc:	inc    ebx
  4065fd:	add    al,0xd8
  4065ff:	push   edi
  406600:	mov    esp,0xc65b6b9f
  406605:	out    dx,eax
  406606:	add    cl,bl
  406608:	push   ecx
  406609:	inc    ebx
  40660a:	ss out dx,eax
  40660c:	rcl    bl,1
  40660e:	jmp    0x2691:0x2d93807d
  406615:	mov    ah,0x53
  406617:	retf   0xbeb5
  40661a:	cs (bad) 
  40661c:	stc    
  40661d:	fwait
  40661e:	adc    al,0x2e
  406620:	jne    0x406616
  406622:	pop    ebx
  406623:	jp     0x406657
  406625:	popa   
  406626:	(bad)  
  406627:	neg    DWORD PTR [ecx-0x76177bfe]
  40662d:	stos   BYTE PTR es:[edi],al
  40662e:	ror    DWORD PTR [eax+0x6e1e5edc],1
  406634:	xchg   edx,eax
  406635:	mov    ds,WORD PTR [edi-0x3744f715]
  40663b:	cmp    dh,al
  40663d:	aaa    
  40663e:	mov    ebx,0xcf4545b
  406643:	sub    al,0xf9
  406645:	sub    al,0x2
  406647:	in     al,0x81
  406649:	xchg   edx,eax
  40664a:	jmp    0x1362:0xca5d1128
  406651:	sub    dl,BYTE PTR [esi+ebx*1+0x7c0486c2]
  406658:	call   0x81fb5b4b
  40665d:	jb     0x406690
  40665f:	and    BYTE PTR [edx+0x9],al
  406662:	xchg   edx,eax
  406663:	jbe    0x406626
  406665:	fisttp DWORD PTR [ecx]
  406667:	and    al,0xf8
  406669:	sbb    DWORD PTR [ebp+0x6ec2b0d1],0x5b
  406670:	mov    bh,0x68
  406672:	mov    eax,0x60a3e6ff
  406677:	push   esp
  406678:	xchg   edi,eax
  406679:	push   0xe0786bd4
  40667e:	(bad)  
  40667f:	dec    esp
  406680:	xor    ch,al
  406682:	dec    edx
  406683:	sub    BYTE PTR [ecx+edi*1-0x71d09da4],bl
  40668a:	push   edx
  40668b:	cld    
  40668c:	push   ss
  40668d:	cmc    
  40668e:	jno    0x4066ac
  406690:	adc    DWORD PTR [eax+0x14567886],edi
  406696:	sub    BYTE PTR [edi],al
  406698:	icebp  
  406699:	pop    ecx
  40669a:	lock addr16 in al,0xe2
  40669e:	mov    esi,0xb0f14cf0
  4066a3:	mov    DWORD PTR [ecx-0x60aad862],eax
  4066a9:	inc    ebx
  4066aa:	mov    esp,0x24c89e87
  4066af:	cmp    esp,DWORD PTR [edi+ebp*8+0x40106976]
  4066b6:	push   0x1a
  4066b8:	daa    
  4066b9:	scas   eax,DWORD PTR es:[edi]
  4066ba:	fwait
  4066bb:	inc    ecx
  4066bc:	fdiv   DWORD PTR [edx-0x3014b130]
  4066c2:	lahf   
  4066c3:	gs mov cl,0x12
  4066c6:	into   
  4066c7:	test   BYTE PTR [edx-0x63],0x61
  4066cb:	rcr    BYTE PTR [edx-0xfde49d9],1
  4066d1:	or     ecx,ebp
  4066d3:	rcr    DWORD PTR [esi-0xa],0xc
  4066d7:	repz xchg esi,eax
  4066d9:	jmp    0x406734
  4066db:	imul   ebp,DWORD PTR ds:0xaf594be3,0xffffff8b
  4066e2:	xchg   ecx,eax
  4066e3:	int    0x36
  4066e5:	xchg   ebx,eax
  4066e6:	dec    esp
  4066e7:	mov    dl,0x92
  4066e9:	mov    dh,0x47
  4066eb:	scas   eax,DWORD PTR es:[edi]
  4066ec:	fdivr  QWORD PTR [ebx+0x7f]
  4066ef:	sub    bl,BYTE PTR [edx-0xf4bfc48]
  4066f5:	push   edx
  4066f6:	adc    al,0xd6
  4066f8:	(bad)  
  4066f9:	jecxz  0x40671c
  4066fb:	aas    
  4066fc:	enter  0xab3f,0xef
  406700:	stos   BYTE PTR es:[edi],al
  406701:	aas    
  406702:	loopne 0x4066c5
  406704:	xchg   ebp,eax
  406705:	xchg   ebp,eax
  406706:	call   0x284e:0x8a95fd85
  40670d:	pop    eax
  40670e:	aaa    
  40670f:	pop    esp
  406710:	pop    eax
  406711:	pusha  
  406712:	ficom  WORD PTR ds:0x1782b867
  406718:	cwde   
  406719:	mov    ds:0xb0255453,al
  40671e:	popa   
  40671f:	or     DWORD PTR [ebx-0x6fc85ab0],ebp
  406725:	int    0xf4
  406727:	inc    ebp
  406728:	mov    bl,0x7c
  40672a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40672b:	sbb    dh,ah
  40672d:	add    eax,0x86eef5ea
  406732:	and    DWORD PTR [esi+0x10],edx
  406735:	mov    dh,0x76
  406737:	sbb    esi,DWORD PTR [edx-0x62c03e17]
  40673d:	lahf   
  40673e:	add    eax,0x6fd634bc
  406743:	cmp    BYTE PTR [eax],cl
  406745:	(bad)  
  406746:	mov    dl,BYTE PTR [ebp-0x127c7641]
  40674c:	mov    bl,0xa1
  40674e:	pusha  
  40674f:	sbb    ebp,esi
  406751:	sub    al,0xcb
  406753:	push   0xc9bdab35
  406758:	sub    bh,cl
  40675a:	dec    eax
  40675b:	call   0x845d060e
  406760:	in     al,dx
  406761:	jge    0x4067ad
  406763:	dec    edi
  406764:	ins    BYTE PTR es:[edi],dx
  406765:	push   ebx
  406766:	shl    ecx,1
  406768:	sub    DWORD PTR [edx+eiz*2-0x5d5ce679],0xa0dfce89
  406773:	xchg   edi,eax
  406774:	push   ecx
  406775:	ins    BYTE PTR es:[edi],dx
  406776:	(bad)  [esp+edi*2]
  406779:	add    DWORD PTR [ecx+0x7c],ebx
  40677c:	les    ecx,FWORD PTR [esi]
  40677e:	push   cs
  40677f:	inc    ecx
  406780:	cmp    al,0xd4
  406782:	es jmp 0x5ff49f4e
  406788:	sahf   
  406789:	sti    
  40678a:	(bad)  
  40678c:	(bad)  
  40678d:	out    dx,eax
  40678e:	jo     0x406762
  406790:	and    ebp,ebp
  406792:	push   ebx
  406793:	(bad)  
  406794:	jmp    0xe9c1:0xd32bf16a
  40679b:	cmp    ah,bl
  40679d:	hlt    
  40679e:	in     al,0x34
  4067a0:	xlat   BYTE PTR ds:[ebx]
  4067a1:	stos   BYTE PTR es:[edi],al
  4067a2:	cdq    
  4067a3:	mov    ds:0x469241e8,eax
  4067a8:	mov    ds:0xf3a26951,eax
  4067ad:	shl    DWORD PTR [ebp-0x5b2bfedd],1
  4067b3:	mov    eax,ds:0x952a03ff
  4067b8:	cmpps  xmm0,XMMWORD PTR [edi],0x4e
  4067bc:	adc    DWORD PTR [edx-0x49ef95ac],esi
  4067c2:	jne    0x406836
  4067c4:	(bad)
  4067c9:	xchg   DWORD PTR [edx],ecx
  4067cb:	pop    eax
  4067cc:	fs push es
  4067ce:	imul   esi,DWORD PTR [edx+0x4],0x2d5838db
  4067d5:	sub    DWORD PTR [ebp+ebx*2-0xde9d211],ecx
  4067dc:	mov    ah,0xe8
  4067de:	shr    ecx,cl
  4067e0:	jge    0x40681c
  4067e2:	sbb    DWORD PTR [ecx+0x59bc9bd6],ebp
  4067e8:	mov    ch,0x12
  4067ea:	or     eax,0x455ffdbb
  4067ef:	adc    edi,DWORD PTR [edi+0x566e9bad]
  4067f5:	cld    
  4067f6:	sbb    eax,0xc7afefb4
  4067fb:	inc    edx
  4067fc:	ins    DWORD PTR es:[edi],dx
  4067fd:	cmp    BYTE PTR [eax],dh
  4067ff:	ins    DWORD PTR es:[edi],dx
  406800:	imul   esp,DWORD PTR [esi-0x30],0x70
  406804:	pushfw 
  406806:	sbb    DWORD PTR [edi],ecx
  406808:	push   esi
  406809:	mov    ds:0x48ee2e66,al
  40680e:	and    DWORD PTR [ecx+0x52],edx
  406811:	xor    DWORD PTR ss:[ecx],esi
  406814:	xchg   ebx,eax
  406815:	inc    ebp
  406816:	stos   DWORD PTR es:[edi],eax
  406817:	mov    bl,0xf6
  406819:	into   
  40681a:	cmp    ecx,ebp
  40681c:	mov    ebp,0x37a1a94
  406821:	mov    ebp,0xbb0ba63a
  406826:	dec    ecx
  406827:	test   BYTE PTR [esp+ebx*1-0x2f7052b6],bh
  40682e:	xchg   esp,eax
  40682f:	dec    BYTE PTR [ebx]
  406831:	daa    
  406832:	pop    ds
  406833:	adc    BYTE PTR [edx+0x620f9783],dh
  406839:	lods   al,BYTE PTR ds:[esi]
  40683a:	mov    sp,0x4ef0
  40683e:	(bad)  
  40683f:	sbb    ah,al
  406841:	xor    edi,DWORD PTR [eax+0x1d2dfd1e]
  406847:	pop    esi
  406848:	fld    DWORD PTR [eax]
  40684a:	cmp    ebp,DWORD PTR [ecx]
  40684c:	mov    eax,0xfd651923
  406851:	js     0x40683f
  406853:	adc    DWORD PTR [esi],esi
  406855:	scas   eax,DWORD PTR es:[edi]
  406856:	ficomp WORD PTR [edx+0x5b9e431e]
  40685c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40685d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40685e:	(bad)
  406861:	lea    esp,[ebx-0x3a8c70bd]
  406867:	call   0x3d3f2ec0
  40686c:	int    0x89
  40686e:	dec    esi
  40686f:	pop    edi
  406870:	and    al,0xdd
  406872:	ss xchg esi,eax
  406874:	push   esi
  406875:	ds push ecx
  406877:	inc    esi
  406878:	jmp    0x4067fa
  40687a:	iret   
  40687b:	jmp    0x5ccd:0x2b4e5385
  406882:	in     al,dx
  406883:	mov    bh,BYTE PTR [ebp+edi*1+0x670cbd12]
  40688a:	mov    al,0xf
  40688c:	inc    esi
  40688d:	sub    BYTE PTR [esp+esi*1-0x2d],ch
  406891:	xchg   ebp,eax
  406892:	xchg   DWORD PTR [eax+0x63],esi
  406895:	popa   
  406896:	sub    cl,BYTE PTR [edx]
  406898:	mov    eax,DWORD PTR [ebx-0x418c25d2]
  40689e:	adc    ebp,ebx
  4068a0:	(bad)
  4068a5:	push   cs
  4068a6:	push   ds
  4068a7:	aad    0x97
  4068a9:	or     al,0xb2
  4068ab:	add    DWORD PTR [edx-0x56a905dd],ebp
  4068b1:	cmp    eax,0x9a620ed4
  4068b6:	pop    ecx
  4068b7:	popa   
  4068b8:	dec    ecx
  4068b9:	push   ebx
  4068ba:	xor    bl,bh
  4068bc:	mov    eax,0x4de35f23
  4068c1:	cmp    eax,0x1df0adc7
  4068c6:	xchg   DWORD PTR [eax],esp
  4068c8:	mov    esp,0xe1416fda
  4068cd:	push   0x5673d2f3
  4068d2:	xor    BYTE PTR [edx-0x58],dl
  4068d5:	(bad)  
  4068d6:	push   0xc4cd9a6f
  4068db:	dec    edi
  4068dc:	pop    es
  4068dd:	mov    dl,0x95
  4068df:	test   BYTE PTR [ecx+0x43],ch
  4068e2:	adc    al,0xf3
  4068e4:	jecxz  0x406911
  4068e6:	mov    ah,0x6f
  4068e8:	add    DWORD PTR [edi-0x6e],edx
  4068eb:	mov    bh,BYTE PTR [esi+0x5479be5b]
  4068f1:	pop    ds
  4068f2:	adc    al,0xdc
  4068f4:	add    DWORD PTR [esi-0x5418fa43],ecx
  4068fa:	or     BYTE PTR [esi-0x558b270b],dl
  406900:	jecxz  0x4068ab
  406902:	cmp    al,0x19
  406904:	das    
  406905:	retf   
  406906:	dec    ebp
  406907:	out    dx,eax
  406908:	adc    al,0x73
  40690a:	sub    ch,0x32
  40690d:	jnp    0x4068b4
  40690f:	fisub  DWORD PTR [ecx-0x5e402869]
  406915:	sub    DWORD PTR [edi],0xffffffdd
  406918:	or     ebx,DWORD PTR [eax]
  40691a:	ds mov ah,0x65
  40691d:	cmp    eax,0x8ea18464
  406922:	xor    eax,0x90cf810e
  406927:	pushf  
  406928:	push   edi
  406929:	mov    esp,0xc213836b
  40692e:	mov    ebp,0x54cfff46
  406933:	pop    edx
  406934:	mov    ecx,0xe9af562b
  406939:	jg     0x406906
  40693b:	ret    0xa209
  40693e:	mov    ds:0xdde1d9c7,al
  406943:	xchg   edi,eax
  406944:	dec    edi
  406945:	jecxz  0x40692e
  406947:	je     0x4069b5
  406949:	mov    BYTE PTR [ecx+0x38159b7d],0xbf
  406950:	xchg   esp,eax
  406951:	cmp    eax,0xfa8ad1e9
  406956:	mov    edi,0x40386cbc
  40695b:	mov    edx,0x33a8ec94
  406960:	fsubr  DWORD PTR [edi]
  406962:	aas    
  406963:	repnz in eax,dx
  406965:	sub    ebx,DWORD PTR [edi]
  406967:	pcmpgtd mm3,mm6
  40696a:	push   ebp
  40696b:	jnp    0x40694f
  40696d:	sub    dl,cl
  40696f:	and    DWORD PTR [ebx+eax*8],eax
  406972:	pop    esi
  406973:	lahf   
  406974:	inc    esi
  406975:	sub    DWORD PTR [edx+ebx*1],ecx
  406978:	cwde   
  406979:	inc    ecx
  40697a:	int3   
  40697b:	jmp    0x4069b6
  40697d:	jl     0x4069c9
  40697f:	or     eax,0x18c7a02b
  406984:	fdiv   st,st(4)
  406986:	mov    al,0x20
  406988:	jbe    0x40694d
  40698a:	(bad)  
  40698b:	call   0xf79ea2cc
  406990:	xor    BYTE PTR [ebx+0x2a57406f],ah
  406996:	bound  esp,QWORD PTR [ebp+0x391a88a2]
  40699c:	lock xchg edx,eax
  40699e:	lock xor al,0x5c
  4069a1:	icebp  
  4069a2:	cmp    ecx,DWORD PTR [edx+0x5ed47896]
  4069a8:	jg     0x406984
  4069aa:	mov    esp,0x7d83b91e
  4069af:	pusha  
  4069b0:	sbb    ebx,DWORD PTR [ecx+0x7e]
  4069b3:	scas   al,BYTE PTR es:[edi]
  4069b4:	sbb    BYTE PTR [edx],al
  4069b6:	arpl   WORD PTR [ecx],dx
  4069b8:	iret   
  4069b9:	xchg   esp,eax
  4069ba:	in     eax,0x9d
  4069bc:	jl     0x406980
  4069be:	clc    
  4069bf:	mov    cl,0x3b
  4069c1:	xor    ebx,DWORD PTR [esi-0x51b49e6f]
  4069c7:	mov    ecx,DWORD PTR [eax+0x2e01a4]
  4069cd:	pop    ecx
  4069ce:	(bad)  
  4069d0:	(bad)  
  4069d1:	test   al,0x23
  4069d3:	pushf  
  4069d4:	and    BYTE PTR [ebp+0x5eb86bc2],dh
  4069da:	add    al,al
  4069dc:	sub    BYTE PTR [edi+0x2c091df7],bl
  4069e2:	sub    eax,0x95fc1017
  4069e7:	push   DWORD PTR [esi]
  4069e9:	rcr    BYTE PTR [eax],cl
  4069eb:	push   ebp
  4069ec:	in     eax,dx
  4069ed:	les    eax,FWORD PTR [ebx-0x1d]
  4069f0:	sar    ecx,0x10
  4069f3:	jae    0x4069d5
  4069f5:	ret    
  4069f6:	pop    ss
  4069f7:	push   ss
  4069f8:	lods   eax,DWORD PTR ds:[esi]
  4069f9:	jle    0x406990
  4069fb:	clc    
  4069fc:	cmp    ebx,ebp
  4069fe:	ss icebp 
  406a00:	repnz adc eax,0xd1182aa8
  406a06:	daa    
  406a07:	iret   
  406a08:	pop    es
  406a09:	xor    edi,edi
  406a0b:	sahf   
  406a0c:	pop    es
  406a0d:	jbe    0x406a5d
  406a0f:	fucomip st,st(7)
  406a11:	jb     0x406a66
  406a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a14:	cmp    eax,0xcd5a60da
  406a19:	jecxz  0x4069ef
  406a1b:	mov    esi,0x96f7b735
  406a20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a21:	push   ebx
  406a22:	(bad)  
  406a24:	repz ja 0x406a10
  406a27:	and    BYTE PTR [edx-0x70],dl
  406a2a:	shl    ebp,0x6b
  406a2d:	fsub   st,st(0)
  406a2f:	dec    ebx
  406a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a31:	dec    esi
  406a32:	retf   0xee28
  406a35:	jno    0x4069eb
  406a37:	outs   dx,DWORD PTR ds:[esi]
  406a38:	ret    0x1bdc
  406a3b:	shl    BYTE PTR [eax],0x8f
  406a3e:	mov    cl,0x5
  406a40:	stos   BYTE PTR es:[edi],al
  406a41:	mov    ds:0x90c49d1e,eax
  406a46:	data16 add BYTE PTR [eax+0x62],al
  406a4a:	fdivr  QWORD PTR [ecx+0x61]
  406a4d:	fidivr DWORD PTR [ebx-0x4d66ada7]
  406a53:	fisubr WORD PTR [edx+0x6cc7838d]
  406a59:	add    DWORD PTR [ecx+0x77f47d0d],0xed22b7d5
  406a63:	call   0xf12c:0xe9d7291a
  406a6a:	mov    eax,0x3a403fad
  406a6f:	mov    cl,BYTE PTR ds:0xac97a1e9
  406a75:	mov    BYTE PTR [esi+0x2b8ba260],ch
  406a7b:	fwait
  406a7c:	sbb    BYTE PTR [ebx+eax*2-0x77],bl
  406a80:	pop    es
  406a81:	jmp    0x334d:0x19e5fe42
  406a88:	dec    edx
  406a89:	aad    0x1
  406a8b:	lods   eax,DWORD PTR gs:[esi]
  406a8d:	push   es
  406a8e:	fisubr DWORD PTR [edx-0x8c8d56e]
  406a94:	into   
  406a95:	call   0x2876:0x76cf6979
  406a9c:	mov    eax,0xb72f4c6b
  406aa1:	jo     0x406a5c
  406aa3:	push   ss
  406aa4:	and    ebx,DWORD PTR [esi]
  406aa6:	repz hlt 
  406aa8:	imul   edi,DWORD PTR [ebp-0x3a31bfa6],0xffffffb6
  406aaf:	es xchg BYTE PTR es:[edx-0x1a],bl
  406ab4:	inc    edx
  406ab5:	adc    al,0x5
  406ab7:	xchg   ecx,eax
  406ab8:	jge    0x406a3f
  406aba:	xor    ebp,DWORD PTR [eax+0x73b86968]
  406ac0:	mov    ds:0x9877e5ba,eax
  406ac5:	lahf   
  406ac6:	push   edx
  406ac7:	jbe    0x406af3
  406ac9:	mov    DWORD PTR [edi],esp
  406acb:	jmp    0xa4f0:0xc49a28a6
  406ad2:	or     ecx,ecx
  406ad4:	ret    
  406ad5:	cmp    al,BYTE PTR [eax]
  406ad7:	xchg   ebx,eax
  406ad8:	adc    ecx,DWORD PTR es:[ecx-0x7d]
  406adc:	mov    esi,0x96661caa
  406ae1:	push   edx
  406ae2:	add    DWORD PTR [esi+edx*4+0x44],ecx
  406ae6:	adc    bl,BYTE PTR [esi-0xf4b2760]
  406aec:	mov    ds:0xd5743bd,eax
  406af1:	mov    ds,WORD PTR [esi+0x26535126]
  406af7:	shl    BYTE PTR [eax-0x6],1
  406afa:	or     DWORD PTR [ecx],ebx
  406afc:	test   al,0x96
  406afe:	mov    ecx,0x9b448ca5
  406b03:	fst    QWORD PTR [eax]
  406b05:	jo     0x406a9e
  406b07:	dec    eax
  406b08:	mov    esp,0x4796eb88
  406b0e:	ja     0x406af4
  406b10:	or     dh,ch
  406b12:	iret   
  406b13:	jbe    0x406b5d
  406b15:	jle    0x406ada
  406b17:	addr16 popa 
  406b19:	jmp    0xb4c:0xeea8bf7a
  406b20:	add    bl,bl
  406b22:	nop
  406b23:	sbb    ch,BYTE PTR [edi]
  406b25:	addr16 xchg esp,eax
  406b27:	dec    ebx
  406b28:	xchg   BYTE PTR [edi-0x5642878a],ah
  406b2e:	mov    esp,0x4ed3e632
  406b33:	shl    BYTE PTR [edx],1
  406b35:	mov    esi,0xc5734b40
  406b3a:	xor    al,0x8b
  406b3c:	cmp    ecx,DWORD PTR [ebx-0x35]
  406b3f:	sbb    eax,0x87e47bc9
  406b44:	and    DWORD PTR [eax],esp
  406b46:	(bad)  
  406b47:	xchg   edx,eax
  406b48:	mov    bh,dl
  406b4a:	std    
  406b4b:	imul   ecx
  406b4d:	pop    esp
  406b4e:	mov    ch,BYTE PTR ds:[edi+edi*4]
  406b52:	inc    esp
  406b53:	sub    al,0x68
  406b55:	xor    dl,BYTE PTR [ecx+0x17]
  406b58:	cwde   
  406b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b5a:	cmc    
  406b5b:	xlat   BYTE PTR ds:[ebx]
  406b5c:	cmp    bl,ah
  406b5e:	sub    BYTE PTR [di],cl
  406b61:	popa   
  406b62:	cld    
  406b63:	stc    
  406b64:	cdq    
  406b65:	sbb    al,0x78
  406b67:	and    edi,eax
  406b69:	sbb    eax,0xe27bc0d3
  406b6e:	imul   eax,DWORD PTR [esi],0x9a473493
  406b74:	ins    BYTE PTR es:[edi],dx
  406b75:	jg     0x406bd8
  406b77:	cmp    dl,bh
  406b79:	test   bl,0xad
  406b7c:	add    al,0x5f
  406b7e:	imul   ecx,edx,0xffffffbe
  406b81:	outs   dx,DWORD PTR ds:[esi]
  406b82:	rcr    BYTE PTR [eax-0x1123d6a1],1
  406b88:	inc    esi
  406b89:	mov    ds:0x2f5b2e21,al
  406b8e:	xor    esp,ecx
  406b90:	fst    DWORD PTR [ecx+0x73]
  406b93:	scas   al,BYTE PTR es:[edi]
  406b94:	call   FWORD PTR ds:0xcacded1d
  406b9a:	pop    es
  406b9b:	sub    al,0xc8
  406b9d:	jg     0x406bde
  406b9f:	adc    BYTE PTR [ebp+0x27],0xd7
  406ba3:	xchg   ecx,eax
  406ba4:	sub    eax,0xac6f2c0
  406ba9:	pushf  
  406baa:	mov    eax,0xa6a1ad64
  406baf:	ja     0x406c2b
  406bb1:	rol    BYTE PTR [edi+0x58fe45f8],0x77
  406bb8:	xchg   BYTE PTR [ecx-0x68],dh
  406bbb:	ja     0x406b4c
  406bbd:	in     al,dx
  406bbe:	repnz retf 
  406bc0:	int3   
  406bc1:	icebp  
  406bc2:	into   
  406bc3:	je     0x406c17
  406bc5:	xchg   esi,eax
  406bc6:	adc    al,bh
  406bc8:	retf   0x4f44
  406bcb:	adc    dl,dl
  406bcd:	adc    DWORD PTR [edi-0x44],ecx
  406bd0:	fimul  WORD PTR [esi+0x14]
  406bd3:	xchg   esp,eax
  406bd4:	xlat   BYTE PTR ds:[ebx]
  406bd5:	push   edi
  406bd6:	inc    eax
  406bd7:	cmc    
  406bd8:	sub    ch,BYTE PTR [eax+ebp*2-0x43b07ae0]
  406bdf:	stos   BYTE PTR es:[edi],al
  406be0:	mov    ecx,0x28911c5c
  406be5:	ins    DWORD PTR es:[edi],dx
  406be6:	fnsave [esi+0x4a976e42]
  406bec:	cs jp  0x406c44
  406bef:	into   
  406bf0:	push   edi
  406bf1:	lea    edi,[ebx-0x1a]
  406bf4:	pusha  
  406bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bf6:	mov    dh,0xf4
  406bf8:	das    
  406bf9:	xchg   esi,eax
  406bfa:	sbb    ebx,DWORD PTR [ebx+0x50]
  406bfd:	fmul   QWORD PTR [esi+eiz*1]
  406c00:	dec    edi
  406c01:	imul   eax,DWORD PTR [esi+0x6c],0xffffffa3
  406c05:	pop    esi
  406c06:	add    eax,0xc32027bf
  406c0b:	mov    eax,ds:0xf1aa26ce
  406c10:	jo     0x406c41
  406c12:	out    dx,al
  406c13:	(bad)  
  406c15:	and    BYTE PTR [edi+0x4e1c33d5],ch
  406c1b:	and    BYTE PTR [esp+ebx*1-0x2d],ah
  406c1f:	popf   
  406c20:	mov    BYTE PTR [ebx-0x49],bl
  406c23:	test   DWORD PTR [ebp+0x59d51cde],ebx
  406c29:	mov    al,ds:0x39b48dfc
  406c2e:	dec    esi
  406c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c30:	cwde   
  406c31:	adc    ah,BYTE PTR [edx+edi*8+0x6c4abe61]
  406c38:	inc    ecx
  406c39:	in     al,dx
  406c3a:	cli    
  406c3b:	mov    ch,0x18
  406c3d:	push   ss
  406c3e:	(bad)  
  406c40:	jo     0x406c5f
  406c42:	jmp    0x406c52
  406c44:	adc    al,0xf5
  406c46:	js     0x406cc1
  406c48:	jo     0x406c07
  406c4a:	icebp  
  406c4b:	lods   al,BYTE PTR ds:[esi]
  406c4c:	mov    eax,DWORD PTR [ebx]
  406c4e:	and    al,BYTE PTR [eax-0x4c08c0a4]
  406c54:	test   DWORD PTR [ecx-0x1503454],eax
  406c5a:	std    
  406c5b:	and    BYTE PTR [ebp+0x35],cl
  406c5e:	push   ss
  406c5f:	adc    eax,0xb8f3aa6f
  406c64:	loope  0x406c16
  406c66:	inc    edx
  406c67:	mov    ebx,0xf9c6a151
  406c6c:	test   DWORD PTR [edx-0x22],ecx
  406c6f:	retf   
  406c70:	rol    DWORD PTR [ebx-0x60],cl
  406c73:	mov    al,0x6d
  406c75:	inc    edi
  406c76:	inc    ecx
  406c77:	leave  
  406c78:	sub    DWORD PTR [edi],0xffffffe1
  406c7b:	call   0x6b31ec9c
  406c80:	loope  0x406c10
  406c82:	aas    
  406c83:	aas    
  406c84:	cmp    ebx,eax
  406c86:	data16 fdivr st,st(4)
  406c89:	cmp    DWORD PTR [esi+0x71e95a26],edi
  406c8f:	repnz addr16 cli 
  406c92:	test   eax,0x477c1d4d
  406c97:	js     0x406c7f
  406c99:	mov    eax,0x5007eff1
  406c9e:	sahf   
  406c9f:	lock rol DWORD PTR [ebp-0x6f],0xd2
  406ca4:	dec    eax
  406ca5:	sub    DWORD PTR [edx],esp
  406ca7:	fs test al,0xd4
  406caa:	mul    BYTE PTR [esi-0x120e9675]
  406cb0:	test   eax,0xd482806f
  406cb5:	stos   BYTE PTR es:[edi],al
  406cb6:	arpl   WORD PTR [ebx+0x232c43b9],bx
  406cbc:	rol    DWORD PTR [esi-0x7fa70c54],cl
  406cc2:	dec    edx
  406cc3:	(bad)  
  406cc4:	mov    DWORD PTR [edi+0x3e],edx
  406cc7:	addr16 mov ebx,0xbf6ce4ad
  406ccd:	mov    ds:0x8f751a84,eax
  406cd2:	inc    edx
  406cd3:	mov    eax,ds:0x87e93cb6
  406cd8:	gs stos BYTE PTR es:[edi],al
  406cda:	loop   0x406ca9
  406cdc:	pop    edi
  406cdd:	push   esp
  406cde:	or     edx,DWORD PTR [edi-0x782478bc]
  406ce4:	sbb    dl,dh
  406ce6:	sti    
  406ce7:	imul   edx,ebp,0xffffffee
  406cea:	or     DWORD PTR [ebx],ebx
  406cec:	pop    es
  406ced:	jmp    0x2fcb:0xb41f04cb
  406cf4:	mov    eax,0x7287e668
  406cf9:	pop    edi
  406cfa:	fnstcw WORD PTR [ebx+ebp*2]
  406cfd:	or     ebp,edx
  406cff:	ins    BYTE PTR es:[edi],dx
  406d00:	mov    ds:0xdd4df910,al
  406d05:	std    
  406d06:	pop    ds
  406d07:	add    DWORD PTR [ecx+0x256b3088],ecx
  406d0d:	out    0x6d,al
  406d0f:	pop    ds
  406d10:	push   cs
  406d11:	mul    BYTE PTR [esi-0x9]
  406d14:	jns    0x406cc7
  406d16:	test   BYTE PTR [ebx+0x9c5ea06],dh
  406d1c:	inc    eax
  406d1d:	in     eax,0x90
  406d1f:	and    eax,0x92c54394
  406d24:	jmp    0x73039026
  406d29:	add    al,0x11
  406d2b:	fimul  WORD PTR [edi+0x6a]
  406d2e:	in     al,dx
  406d2f:	(bad)  
  406d30:	jecxz  0x406d28
  406d32:	xor    al,0x59
  406d34:	aas    
  406d35:	cmp    BYTE PTR [eax],dh
  406d37:	jl     0x406cbc
  406d39:	xor    ah,0x8a
  406d3c:	dec    ebp
  406d3d:	nop
  406d3e:	cmp    BYTE PTR [ecx+0x4e],bl
  406d41:	mov    eax,0xb3c5bc29
  406d46:	jo     0x406d0d
  406d48:	and    bl,bl
  406d4a:	jle    0x406da0
  406d4c:	inc    esi
  406d4d:	xchg   edx,eax
  406d4e:	mov    eax,fs
  406d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d51:	arpl   WORD PTR [ebp-0x4c],si
  406d54:	mov    ds:0x8a781294,al
  406d59:	inc    eax
  406d5a:	add    al,0xf3
  406d5c:	fstp   QWORD PTR [eax]
  406d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d5f:	or     eax,0x8632cfa9
  406d64:	mov    eax,0xeefd3e40
  406d69:	es das 
  406d6b:	xchg   edx,eax
  406d6c:	jle    0x406d80
  406d6e:	fs mov bh,0x7d
  406d71:	xor    al,0x11
  406d73:	test   BYTE PTR [edx-0xf1f994c],bl
  406d79:	inc    esp
  406d7a:	imul   ecx,DWORD PTR [ecx+0x57],0xffffffbd
  406d7e:	inc    edx
  406d7f:	push   DWORD PTR [ebx]
  406d81:	jo     0x406d4d
  406d83:	pop    es
  406d84:	test   eax,0xd7adda5
  406d89:	clc    
  406d8a:	mov    ch,0x29
  406d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8d:	loope  0x406d75
  406d8f:	(bad)  
  406d90:	push   eax
  406d91:	outs   dx,DWORD PTR ds:[esi]
  406d92:	aam    0x1d
  406d94:	add    al,0xeb
  406d96:	xor    eax,0xf4b47ab3
  406d9b:	scas   al,BYTE PTR es:[edi]
  406d9c:	out    dx,al
  406d9d:	test   bl,dh
  406d9f:	mov    WORD PTR [ebp-0x6c049689],ds
  406da5:	xor    eax,0x378b1643
  406daa:	test   BYTE PTR [esi-0x5d],ch
  406dad:	mov    ebx,0x2751e7dd
  406db2:	xchg   BYTE PTR [esi],dl
  406db4:	pop    esi
  406db5:	add    dh,BYTE PTR ss:[ebp+0x30]
  406db9:	xor    eax,ecx
  406dbb:	pushf  
  406dbc:	lea    edi,[edi]
  406dbe:	push   ss
  406dbf:	sub    ecx,esi
  406dc1:	daa    
  406dc2:	loope  0x406e2f
  406dc4:	lods   eax,DWORD PTR ds:[esi]
  406dc5:	push   esp
  406dc6:	and    dl,dh
  406dc8:	cwde   
  406dc9:	mov    edi,0x2ad14c95
  406dce:	push   edi
  406dcf:	test   eax,0x2652e390
  406dd4:	inc    ebp
  406dd5:	(bad)  
  406dd6:	dec    eax
  406dd7:	pusha  
  406dd8:	dec    DWORD PTR [edi-0xacee9c3]
  406dde:	sub    cl,BYTE PTR [edi]
  406de0:	lods   eax,DWORD PTR ds:[esi]
  406de1:	call   0xb5e4:0xfa67ba66
  406de8:	fidiv  DWORD PTR [ebp-0x5f]
  406deb:	pop    es
  406dec:	mov    esi,0xa3c10157
  406df1:	jo     0x406de8
  406df3:	fcmovb st,st(0)
  406df5:	pop    eax
  406df6:	scas   eax,DWORD PTR es:[edi]
  406df7:	push   ecx
  406df8:	add    DWORD PTR [edx-0x700906aa],0x764c014d
  406e02:	mov    ebx,0x4488d535
  406e07:	sub    eax,0x40b86991
  406e0c:	mov    esi,0xc63473f0
  406e11:	ins    DWORD PTR es:[edi],dx
  406e12:	inc    ebp
  406e13:	shl    eax,cl
  406e15:	sub    esi,DWORD PTR ds:0x8c83298a
  406e1b:	mov    edx,0x599b074c
  406e20:	sub    ebx,DWORD PTR [edx]
  406e22:	mov    edi,0x12345e12
  406e27:	inc    ebp
  406e28:	sub    eax,0xf93d5dd2
  406e2d:	sbb    ch,cl
  406e2f:	mov    ecx,0xd4837e18
  406e34:	mov    WORD PTR [edx],cs
  406e36:	out    0xa,eax
  406e38:	lods   eax,DWORD PTR ds:[esi]
  406e39:	lahf   
  406e3a:	and    DWORD PTR [bx+di+0x2a],ebp
  406e3e:	ficomp DWORD PTR fs:[ecx-0x18]
  406e42:	push   0x3498fc01
  406e47:	shl    BYTE PTR [esi+ebp*4],1
  406e4a:	xchg   esi,eax
  406e4b:	mov    ebp,0xa8d3214d
  406e50:	xchg   ecx,eax
  406e51:	mov    ebx,0xc62c8518
  406e56:	or     ebx,ecx
  406e58:	xchg   ebp,eax
  406e59:	ror    DWORD PTR ds:0x6bd72f7e,0xd1
  406e60:	push   esp
  406e61:	sbb    eax,0xcaa4a82f
  406e66:	fwait
  406e67:	iret   
  406e68:	ret    0xe297
  406e6b:	sbb    eax,0x3a0821a4
  406e70:	mov    bl,0x7d
  406e72:	ds pop esi
  406e74:	push   ss
  406e75:	mov    ds:0xbe4c5462,eax
  406e7a:	xchg   edx,eax
  406e7b:	shr    ebp,0x3e
  406e7e:	mov    eax,0xff06c2bd
  406e83:	mov    WORD PTR [ebx+0x27],?
  406e86:	not    BYTE PTR ss:[ecx]
  406e89:	adc    cl,0xed
  406e8c:	je     0x406e29
  406e8e:	xor    eax,0x9a9f81dd
  406e93:	xchg   ebx,eax
  406e94:	push   es
  406e95:	int    0xb5
  406e97:	xchg   ebx,eax
  406e98:	(bad)  
  406e99:	add    eax,0x5986cde9
  406e9e:	cdq    
  406e9f:	je     0x406ee7
  406ea1:	(bad)  
  406ea2:	cmp    ecx,DWORD PTR [eax+0x3f]
  406ea5:	pop    ebp
  406ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ea7:	xchg   edx,eax
  406ea8:	adc    dl,BYTE PTR [ebx-0x7d7287e8]
  406eae:	inc    ebx
  406eaf:	outs   dx,DWORD PTR ds:[esi]
  406eb0:	mov    WORD PTR [esi+0x4783cf1c],ss
  406eb6:	test   bl,al
  406eb8:	sub    al,0xe9
  406eba:	add    bh,BYTE PTR [edi-0x29]
  406ebd:	fdivrp st(7),st
  406ebf:	mov    al,0xdd
  406ec1:	or     al,0xb5
  406ec3:	mov    bh,BYTE PTR [edx]
  406ec5:	iret   
  406ec6:	push   eax
  406ec7:	xchg   ecx,eax
  406ec8:	ret    
  406ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eca:	sbb    eax,0xef9b833f
  406ecf:	cmp    eax,0x48e10b44
  406ed4:	out    dx,al
  406ed5:	and    DWORD PTR [ecx],ebx
  406ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed8:	cmp    al,0x7d
  406eda:	xor    DWORD PTR [edi+0x56],0x8a3e0307
  406ee1:	cld    
  406ee2:	pop    edx
  406ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ee4:	shl    edx,1
  406ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ee7:	nop
  406ee8:	cmp    BYTE PTR [esi],ch
  406eea:	add    dl,BYTE PTR ss:[eax+0x3d]
  406eee:	sub    DWORD PTR [esi-0x1be1865a],edx
  406ef4:	mov    eax,ds:0xa5c483bd
  406ef9:	dec    edx
  406efa:	leave  
  406efb:	pushf  
  406efc:	or     dl,0x44
  406eff:	call   0x78c3:0x167b9c7e
  406f06:	xor    esp,DWORD PTR [ecx+0x51475823]
  406f0c:	(bad)  
  406f0d:	repnz pop edi
  406f0f:	fild   WORD PTR [edx]
  406f11:	ror    dh,cl
  406f13:	fcmovnu st,st(4)
  406f15:	add    ah,dl
  406f17:	cli    
  406f18:	enter  0x4a57,0xbd
  406f1c:	fs stc 
  406f1e:	pop    ebx
  406f1f:	mov    cl,0x29
  406f21:	jb     0x406f61
  406f23:	in     eax,0x67
  406f25:	adc    DWORD PTR [eax],edi
  406f27:	cwde   
  406f28:	mov    ecx,0xc15786ae
  406f2d:	(bad)  
  406f2e:	sbb    bh,ah
  406f30:	mov    bh,0x77
  406f32:	jg     0x406eef
  406f34:	arpl   WORD PTR [edx-0x3b],sp
  406f37:	arpl   WORD PTR [edx-0x6178afa5],ax
  406f3d:	push   0xc8fe5e3a
  406f42:	stos   DWORD PTR es:[edi],eax
  406f43:	arpl   WORD PTR [esi+0x33f38087],sp
  406f49:	leave  
  406f4a:	aas    
  406f4b:	push   ebp
  406f4c:	and    al,0xc1
  406f4e:	ret    0x6739
  406f51:	out    dx,eax
  406f52:	jl     0x406ee4
  406f54:	lods   eax,DWORD PTR ds:[esi]
  406f55:	mov    ah,0x98
  406f57:	loope  0x406f91
  406f59:	icebp  
  406f5a:	ret    0x28ee
  406f5d:	ffree  st(1)
  406f5f:	push   esp
  406f60:	stc    
  406f61:	sub    DWORD PTR [edx],edi
  406f63:	jo     0x406fbe
  406f65:	lods   eax,DWORD PTR ds:[esi]
  406f66:	hlt    
  406f67:	in     al,dx
  406f68:	out    0xe5,al
  406f6a:	and    DWORD PTR [edx*2-0x5c5d7298],0xffffffaf
  406f72:	ret    0x5c40
  406f75:	scas   al,BYTE PTR es:[edi]
  406f76:	popf   
  406f77:	repz and BYTE PTR [esi],bh
  406f7a:	inc    esp
  406f7b:	add    ebp,ebp
  406f7d:	inc    ebx
  406f7e:	cmp    si,sp
  406f81:	lods   eax,DWORD PTR ds:[esi]
  406f82:	out    dx,al
  406f83:	les    ecx,FWORD PTR [esi+esi*8]
  406f86:	dec    edi
  406f87:	cmp    ch,BYTE PTR [edi+0x414a118e]
  406f8d:	xchg   BYTE PTR [ecx],bl
  406f8f:	pushf  
  406f90:	xor    edi,DWORD PTR [edx-0x7dffaeb]
  406f96:	loope  0x406fbc
  406f98:	out    dx,eax
  406f99:	mov    esp,0x7af34e7
  406f9e:	lods   eax,DWORD PTR ds:[esi]
  406f9f:	and    DWORD PTR [eax],edi
  406fa1:	daa    
  406fa2:	adc    eax,0xff6e9294
  406fa7:	cmp    al,0x46
  406fa9:	data16 or ah,ch
  406fac:	mov    edx,0x8dbd2c4f
  406fb1:	and    BYTE PTR es:[eax-0x7d],bl
  406fb5:	sbb    esi,esp
  406fb7:	sbb    edi,ebp
  406fb9:	cmp    BYTE PTR [ecx],dh
  406fbb:	not    DWORD PTR [esi]
  406fbd:	jbe    0x40703d
  406fbf:	inc    ebx
  406fc0:	outs   dx,BYTE PTR ds:[esi]
  406fc1:	sub    ch,BYTE PTR [eax]
  406fc3:	(bad)  
  406fc4:	jg     0x406f54
  406fc6:	mov    ecx,0xb9d0f60f
  406fcb:	shl    DWORD PTR ds:0x2839e4d8,1
  406fd1:	pop    esi
  406fd2:	push   ds
  406fd3:	(bad)  
  406fd4:	bound  ebx,QWORD PTR [ebx-0x43794707]
  406fda:	mov    ch,0xa4
  406fdc:	add    al,0xb7
  406fde:	fisub  DWORD PTR [ecx-0x53c586e]
  406fe4:	imul   edi,DWORD PTR ds:0xcdab10b,0xc68233e5
  406fee:	adc    BYTE PTR [ecx],al
  406ff0:	cli    
  406ff1:	rcl    BYTE PTR [esi],1
  406ff3:	jg     0x407010
  406ff5:	cwde   
  406ff6:	aam    0xd1
  406ff8:	rcr    BYTE PTR [ecx],cl
  406ffa:	jge    0x406ffa
  406ffc:	lea    ebp,[ebx+0x60fcebf5]
  407002:	push   cs
  407003:	popa   
  407004:	push   edx
  407005:	xchg   ebp,eax
  407006:	sub    eax,0xd5ca7e1
  40700b:	pop    edx
  40700c:	test   al,0x10
  40700e:	mov    ds:0x48a3ddd3,al
  407013:	pop    ebp
  407014:	sbb    ebx,edi
  407016:	xchg   esi,eax
  407017:	fst    DWORD PTR [ecx+0x26ed3b0]
  40701d:	lods   al,BYTE PTR ds:[esi]
  40701e:	loope  0x407093
  407020:	sbb    BYTE PTR [edi+0x3b],0x8b
  407024:	popa   
  407025:	mov    DWORD PTR [eax],esp
  407027:	fmul   DWORD PTR [ebx-0x7da3defa]
  40702d:	pop    edi
  40702e:	rcl    BYTE PTR [ecx],0xf1
  407031:	stos   BYTE PTR es:[edi],al
  407032:	push   eax
  407033:	push   ss
  407034:	push   edi
  407035:	and    DWORD PTR [ebx-0x23e863f0],ebx
  40703b:	pop    ecx
  40703c:	sub    DWORD PTR [eax-0x1d],edi
  40703f:	xor    eax,0x539e47a9
  407044:	xor    edx,DWORD PTR [ecx+eiz*4]
  407047:	xor    DWORD PTR [eax],edx
  407049:	pop    ecx
  40704a:	iret   
  40704b:	je     0x407045
  40704d:	stos   DWORD PTR es:[edi],eax
  40704e:	and    edi,DWORD PTR [ebx-0x24]
  407051:	dec    esi
  407052:	pop    edx
  407053:	dec    ebx
  407054:	inc    edi
  407055:	(bad)  
  407056:	mov    ebp,0x309f2d62
  40705b:	cmc    
  40705c:	fild   DWORD PTR [ecx-0x2cc64eca]
  407062:	test   eax,0x6b142dd3
  407067:	adc    al,0x32
  407069:	outs   dx,BYTE PTR ds:[esi]
  40706a:	or     BYTE PTR [ebp*1+0x6c9f2fa4],dh
  407071:	out    dx,al
  407072:	in     al,0xd9
  407074:	scas   al,BYTE PTR es:[edi]
  407075:	cmc    
  407076:	and    BYTE PTR [ebp+edi*1-0x3b4f5b4c],ch
  40707d:	push   ebp
  40707e:	and    BYTE PTR [edx+0x22],ch
  407081:	and    al,0x21
  407083:	fsub   DWORD PTR [ebp+eiz*1+0x12]
  407087:	loope  0x4070f9
  407089:	pop    edi
  40708a:	sbb    ah,bh
  40708c:	lea    edi,[edi-0x58]
  40708f:	xchg   edx,eax
  407090:	sub    DWORD PTR [edx],ecx
  407092:	das    
  407093:	add    bl,bl
  407095:	push   ds
  407096:	inc    esp
  407097:	fdiv   DWORD PTR [edx-0x749d87b2]
  40709d:	das    
  40709e:	or     al,0x5a
  4070a0:	or     BYTE PTR [ebx-0x17],0x61
  4070a4:	sbb    eax,0xca961acf
  4070a9:	test   DWORD PTR [edx],esi
  4070ab:	lock xchg DWORD PTR [edx-0x4],ecx
  4070af:	repnz pusha 
  4070b1:	int    0xe9
  4070b3:	ds pop eax
  4070b5:	into   
  4070b6:	loope  0x4070cf
  4070b8:	adc    al,0x24
  4070ba:	sub    eax,0x9e9be6c7
  4070bf:	gs popf 
  4070c1:	gs loope 0x407059
  4070c4:	imul   edi,DWORD PTR [ecx],0x53237e04
  4070ca:	inc    esi
  4070cb:	mov    ch,0x51
  4070cd:	fst    DWORD PTR [ebx+0x70]
  4070d0:	xor    BYTE PTR [ebp+0x22d9bab8],ch
  4070d6:	sbb    BYTE PTR [esi],0x36
  4070d9:	adc    al,0x23
  4070db:	sub    dh,BYTE PTR [eax]
  4070dd:	(bad)  
  4070de:	data16 jo 0x4070f9
  4070e1:	adc    eax,0x960e67fc
  4070e6:	ins    DWORD PTR es:[edi],dx
  4070e7:	int    0x28
  4070e9:	loope  0x4070f8
  4070eb:	daa    
  4070ec:	mov    esi,0xc54749cb
  4070f1:	retf   
  4070f2:	cmp    al,0x52
  4070f4:	add    BYTE PTR [edx+0x5c041062],dh
  4070fa:	dec    edi
  4070fb:	dec    ebx
  4070fc:	dec    edx
  4070fd:	or     eax,0x317cb81b
  407102:	add    BYTE PTR [edx],bl
  407104:	add    DWORD PTR [edx+0x3b],edi
  407107:	xchg   DWORD PTR [eax],esi
  407109:	jnp    0x4070c2
  40710b:	push   ebp
  40710c:	pop    esi
  40710d:	loop   0x40714a
  40710f:	jle    0x40714c
  407111:	sahf   
  407112:	mov    eax,0x892d17c3
  407117:	cmp    ah,dh
  407119:	xor    ecx,DWORD PTR [eax+0x7261f73d]
  40711f:	stc    
  407120:	sbb    BYTE PTR [ecx+0x6c7f9387],dl
  407126:	add    al,0x3a
  407128:	lods   eax,DWORD PTR ds:[esi]
  407129:	add    edx,esi
  40712b:	sbb    ch,BYTE PTR [ebp+0x18]
  40712e:	push   esp
  40712f:	(bad)  
  407130:	ja     0x4070c7
  407132:	mov    al,ds:0xc321e29a
  407137:	or     esp,0x67
  40713a:	mov    esi,0xd47d643b
  40713f:	leave  
  407140:	sub    eax,0x7faa3b24
  407145:	int    0x14
  407147:	mov    edi,0x83e15877
  40714c:	arpl   WORD PTR [ecx],dx
  40714e:	ss dec esp
  407150:	(bad)
  407155:	gs repnz push ecx
  407158:	mov    dl,0xc
  40715a:	or     BYTE PTR [ebp+0x58],0x21
  40715e:	jns    0x407171
  407160:	or     DWORD PTR [esi-0x29133319],ecx
  407166:	push   ds
  407167:	call   FWORD PTR [eax+ecx*4-0x7fcc376d]
  40716e:	lahf   
  40716f:	in     al,dx
  407170:	mov    fs,WORD PTR [ecx]
  407172:	imul   ebp,ecx,0x4f
  407175:	inc    eax
  407176:	mov    bl,BYTE PTR ds:[ecx+eax*2]
  40717a:	(bad)  
  40717b:	popa   
  40717c:	add    esp,ebp
  40717e:	push   edi
  40717f:	fisttp WORD PTR [ecx+edx*8+0x7e077900]
  407186:	lahf   
  407187:	inc    edi
  407188:	xchg   esi,eax
  407189:	es sti 
  40718b:	inc    edi
  40718c:	scas   al,BYTE PTR es:[edi]
  40718d:	jns    0x4071b7
  40718f:	mov    ah,0xef
  407191:	(bad)  
  407192:	adc    ebp,ecx
  407194:	add    al,0x8b
  407196:	outs   dx,BYTE PTR ds:[esi]
  407197:	ds add ebx,eax
  40719a:	dec    esi
  40719b:	add    BYTE PTR [eax+0x61],ch
  40719e:	inc    ebx
  40719f:	div    DWORD PTR ds:0xab2a70cd
  4071a5:	xor    ebp,DWORD PTR [eax]
  4071a7:	xor    eax,0xcb75a637
  4071ac:	sar    esi,1
  4071ae:	sbb    dl,BYTE PTR [edx-0x3e544c30]
  4071b4:	ds into 
  4071b6:	(bad)  
  4071b7:	cli    
  4071b8:	scas   eax,DWORD PTR es:[edi]
  4071b9:	push   edi
  4071ba:	add    edx,ebp
  4071bc:	sub    esp,esp
  4071be:	sbb    BYTE PTR [edi-0x17aa0a28],al
  4071c4:	mov    cl,BYTE PTR [ebp-0x4f]
  4071c7:	jmp    0xc0c2:0x5d13c11b
  4071ce:	mov    ebx,0x50b41ecf
  4071d3:	push   edx
  4071d4:	imul   ecx,DWORD PTR [edi+0x1c],0xffffffa6
  4071d8:	ss in  eax,dx
  4071da:	call   0xa689e179
  4071df:	pop    edx
  4071e0:	mov    ebp,0xe2ec02f2
  4071e5:	imul   BYTE PTR [eax-0x6a92e9b2]
  4071eb:	sub    DWORD PTR [ebp-0x4f],0xffffff8f
  4071ef:	xchg   esp,eax
  4071f0:	scas   eax,DWORD PTR es:[edi]
  4071f1:	ins    BYTE PTR es:[edi],dx
  4071f2:	cmc    
  4071f3:	mov    eax,0xed036d17
  4071f8:	fadd   st(1),st
  4071fa:	test   al,0x82
  4071fc:	and    ebx,DWORD PTR [ebp+0x539bd95f]
  407202:	xchg   edi,eax
  407203:	(bad)  [eax-0x2b]
  407206:	and    esp,edx
  407208:	inc    edi
  407209:	mov    DWORD PTR [edx+edi*1+0x25],esi
  40720d:	ror    DWORD PTR [bp-0x76a6],cl
  407212:	jle    0x40722b
  407214:	loope  0x4071e1
  407216:	xchg   esp,eax
  407217:	scas   al,BYTE PTR es:[edi]
  407218:	jl     0x40722b
  40721a:	fild   DWORD PTR [edi+0x70]
  40721d:	mov    ecx,0x8ca8c1ef
  407222:	mov    ecx,0x347878dc
  407227:	cli    
  407228:	repz loopne 0x40726d
  40722b:	xor    edi,DWORD PTR [eax-0xd]
  40722e:	ins    DWORD PTR es:[edi],dx
  40722f:	dec    esi
  407230:	mov    eax,ds:0x2a1a7f98
  407235:	jmp    0xe0bd:0x860242e2
  40723c:	mov    al,0x31
  40723e:	bt     DWORD PTR [ebp+0x4c40ee89],ebx
  407245:	xchg   BYTE PTR [esi],ah
  407247:	lock aaa 
  407249:	daa    
  40724a:	jbe    0x4072c7
  40724c:	les    ebp,FWORD PTR [edx-0x1]
  40724f:	aaa    
  407250:	test   eax,0xe6d41537
  407255:	jmp    0x27cd:0xa4b75bf1
  40725c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40725d:	popf   
  40725e:	sar    DWORD PTR [edx+0x6c68fc0f],0x21
  407265:	sub    dh,BYTE PTR [eax+0x2512ead6]
  40726b:	lods   al,BYTE PTR ds:[esi]
  40726c:	jg     0x407270
  40726e:	push   edx
  40726f:	retf   0x22c6
  407272:	sti    
  407273:	sub    BYTE PTR [ebx+ebx*2-0x1667c4b4],cl
  40727a:	mov    edx,0xf6ccbd78
  40727f:	jne    0x4072fe
  407281:	div    cl
  407283:	(bad)  
  407284:	idiv   DWORD PTR [eax]
  407286:	mov    eax,fs
  407288:	or     bl,BYTE PTR [edx+0x72]
  40728b:	adc    eax,DWORD PTR [edi]
  40728d:	scas   al,BYTE PTR es:[edi]
  40728e:	fcom   st(1)
  407290:	pop    eax
  407291:	loopne 0x4072cc
  407293:	sbb    eax,0x5151fe8b
  407298:	mov    esi,0x3463e0ca
  40729d:	rol    cl,cl
  40729f:	or     DWORD PTR ds:0x52464043,0xffffffc6
  4072a6:	(bad)  
  4072a7:	outs   dx,BYTE PTR ds:[esi]
  4072a8:	push   esp
  4072a9:	cmp    eax,0xf63cba81
  4072ae:	xchg   edx,eax
  4072af:	cmp    bh,al
  4072b1:	mov    dl,BYTE PTR [eax+ebx*4]
  4072b4:	sbb    edx,DWORD PTR [ecx+0x41081c3a]
  4072ba:	sbb    al,ch
  4072bc:	mul    DWORD PTR [edx-0x1e]
  4072bf:	sbb    al,0x1d
  4072c1:	inc    edx
  4072c2:	sbb    DWORD PTR [ecx-0x2],esi
  4072c5:	enter  0x5cad,0xf5
  4072c9:	jne    0x4072b1
  4072cb:	sbb    bh,ch
  4072cd:	(bad)  
  4072ce:	enter  0x8107,0x52
  4072d2:	popf   
  4072d3:	ins    BYTE PTR es:[edi],dx
  4072d4:	ins    BYTE PTR es:[edi],dx
  4072d5:	test   al,0xc2
  4072d7:	retf   
  4072d8:	push   ebx
  4072d9:	sub    al,0xed
  4072db:	jl     0x4072f4
  4072dd:	das    
  4072de:	sbb    ecx,DWORD PTR [ecx+0xe332c39]
  4072e4:	loope  0x40726c
  4072e6:	arpl   ax,bx
  4072e8:	icebp  
  4072e9:	xor    edi,ebp
  4072eb:	push   ss
  4072ec:	and    al,dl
  4072ee:	retf   0x120f
  4072f1:	fsub   DWORD PTR [edx]
  4072f3:	leave  
  4072f4:	stos   DWORD PTR es:[edi],eax
  4072f5:	addr16 cmp al,0xe0
  4072f8:	lods   eax,DWORD PTR ds:[esi]
  4072f9:	fisub  DWORD PTR [edx]
  4072fb:	pop    esi
  4072fc:	(bad)  
  4072fd:	jno    0x407314
  4072ff:	pop    esp
  407300:	out    0x4b,eax
  407302:	dec    esp
  407303:	push   eax
  407304:	sahf   
  407305:	sub    DWORD PTR [eax+ebx*4+0x12],0x6d
  40730a:	mov    WORD PTR [ecx-0x75cf9fb1],ds
  407310:	jmp    0x4072b6
  407312:	adc    eax,0x3412b194
  407317:	shl    BYTE PTR [eax],0x50
  40731a:	mov    bh,0x44
  40731c:	mov    dh,BYTE PTR [edx]
  40731e:	cs cli 
  407320:	sbb    BYTE PTR [esi],al
  407322:	(bad)  
  407323:	push   ebp
  407324:	loop   0x4072ba
  407326:	imul   ebp,DWORD PTR [ebp-0x5f4c04b9],0xf7210c36
  407330:	das    
  407331:	rcr    BYTE PTR [edx],1
  407333:	scas   eax,DWORD PTR es:[edi]
  407334:	xor    ah,BYTE PTR [ebx-0x64ce1e55]
  40733a:	adc    cl,BYTE PTR [ebx]
  40733c:	stc    
  40733d:	(bad)  
  40733e:	mov    edi,0x8decb9e0
  407343:	mov    dh,0x7
  407345:	mov    eax,0x20f3c6df
  40734a:	jmp    0x407386
  40734c:	pushf  
  40734d:	or     eax,0x308da9ba
  407352:	sbb    ecx,DWORD PTR [edi]
  407354:	fs in  eax,dx
  407356:	scas   al,BYTE PTR es:[edi]
  407357:	sbb    cl,BYTE PTR [ecx-0x4cf89589]
  40735d:	xor    eax,0x43b31b2
  407362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407363:	push   ebp
  407364:	xchg   DWORD PTR [ebx+ebx*1-0x25eff151],edx
  40736b:	aad    0xf2
  40736d:	js     0x40732c
  40736f:	sar    DWORD PTR [ebx-0x68],0xac
  407373:	rcl    DWORD PTR [eax],cl
  407375:	sbb    BYTE PTR [edi+0x1a],al
  407378:	loop   0x40731c
  40737a:	pop    edx
  40737b:	ror    BYTE PTR [esi+0x1e],cl
  40737e:	xlat   BYTE PTR ds:[ebx]
  40737f:	inc    esi
  407380:	xchg   edi,eax
  407381:	xor    al,0x9c
  407383:	ss ja  0x4073df
  407386:	inc    ebx
  407387:	cmp    esi,DWORD PTR [edi+0x78]
  40738a:	mov    al,BYTE PTR [eax]
  40738c:	jmp    0x71a9bb91
  407391:	fisubr WORD PTR [ecx+0x5f875861]
  407397:	sbb    bh,BYTE PTR [eax-0x6d83c213]
  40739d:	ds ret 
  40739f:	jp     0x4073e3
  4073a1:	sbb    eax,0x7c5aa6b7
  4073a6:	jge    0x4073e1
  4073a8:	cld    
  4073a9:	mov    ch,0xc4
  4073ab:	jnp    0x40733d
  4073ad:	mov    DWORD PTR [edi-0x8],esi
  4073b0:	sbb    BYTE PTR [esi-0x22],dh
  4073b3:	ficomp DWORD PTR [ebx+0x12]
  4073b6:	mov    DWORD PTR [edx-0x6a],ebx
  4073b9:	in     al,dx
  4073ba:	add    BYTE PTR ds:0x159dfe3b,0x61
  4073c1:	cwde   
  4073c2:	or     ah,BYTE PTR [edi+ebx*2-0x27]
  4073c6:	and    bh,BYTE PTR [ebx+ebp*1+0x1f6f4ee7]
  4073cd:	xor    DWORD PTR [eax],edx
  4073cf:	cmp    ah,cl
  4073d1:	add    al,0x6
  4073d3:	popf   
  4073d4:	test   BYTE PTR [edx-0x644f90d2],bl
  4073da:	daa    
  4073db:	mov    BYTE PTR [eax],al
  4073dd:	sahf   
  4073de:	ret    
  4073df:	xchg   esi,eax
  4073e0:	int    0xd8
  4073e2:	mov    dl,0x34
  4073e4:	jb     0x40744d
  4073e6:	stc    
  4073e7:	pop    ss
  4073e8:	jnp    0x4073b7
  4073ea:	xchg   esi,eax
  4073eb:	mov    al,0x55
  4073ed:	fidiv  DWORD PTR ds:0x70da2c22
  4073f3:	jbe    0x4073b8
  4073f5:	pop    ss
  4073f6:	jle    0x407470
  4073f8:	mov    esi,0x6956c81e
  4073fd:	jae    0x407466
  4073ff:	loop   0x407413
  407401:	gs mov dl,0x9b
  407404:	pushf  
  407405:	push   ecx
  407406:	fwait
  407407:	daa    
  407408:	cmp    edx,esi
  40740a:	push   cs
  40740b:	out    dx,al
  40740c:	push   eax
  40740d:	pop    eax
  40740e:	stos   DWORD PTR es:[edi],eax
  40740f:	cmp    bh,BYTE PTR [esi+0x5ddf2168]
  407415:	sbb    edx,DWORD PTR [ebx]
  407417:	jno    0x407414
  407419:	js     0x407433
  40741b:	ins    DWORD PTR es:[edi],dx
  40741c:	jb     0x40748c
  40741e:	sub    DWORD PTR [edi+0x33],edi
  407421:	or     bh,bh
  407423:	lods   eax,DWORD PTR ds:[esi]
  407424:	sti    
  407425:	pop    esp
  407426:	jle    0x407430
  407428:	mov    BYTE PTR [ecx+0x50],al
  40742b:	pusha  
  40742c:	mov    cl,0xd3
  40742e:	jecxz  0x407494
  407430:	pop    esp
  407431:	or     esi,edi
  407433:	cmp    ecx,DWORD PTR [esi+0x7a]
  407436:	mov    edx,0x2592675c
  40743b:	shl    esp,0x14
  40743e:	jb     0x40743f
  407440:	cmp    edx,DWORD PTR [ebx-0x55ce1b6c]
  407446:	pop    ebp
  407447:	adc    esi,edi
  407449:	outs   dx,BYTE PTR ds:[esi]
  40744a:	popa   
  40744b:	std    
  40744c:	fisubr WORD PTR [eax+0x5c20fe9b]
  407452:	fidivr WORD PTR [ecx]
  407454:	ins    BYTE PTR es:[edi],dx
  407455:	push   ss
  407456:	retf   0xe12c
  407459:	xchg   esi,eax
  40745a:	push   ebp
  40745b:	data16 cmp BYTE PTR [esi],dh
  40745e:	fist   DWORD PTR [edx-0x740a7326]
  407464:	jl     0x407407
  407466:	jnp    0x4074e4
  407468:	push   0x8dd1d806
  40746d:	aam    0xe9
  40746f:	pop    ebp
  407470:	or     DWORD PTR [ebx-0x5bf6aca2],ebx
  407476:	sub    DWORD PTR [edi],ecx
  407478:	push   ecx
  407479:	adc    esp,DWORD PTR [edi-0x79]
  40747c:	lds    ebp,FWORD PTR [ebp-0x37]
  40747f:	js     0x4074a2
  407481:	or     al,0x45
  407483:	int    0xd
  407485:	adc    BYTE PTR [ecx-0x16],dh
  407488:	ins    DWORD PTR es:[edi],dx
  407489:	push   ebx
  40748a:	cs mov ch,0xe0
  40748d:	int    0x9b
  40748f:	lods   al,BYTE PTR ds:[esi]
  407490:	stc    
  407491:	push   es
  407492:	inc    esi
  407493:	mov    ds:0xb901e057,al
  407498:	jno    0x4074c2
  40749a:	ins    BYTE PTR es:[edi],dx
  40749b:	sub    eax,0x68770cc0
  4074a0:	out    0x44,eax
  4074a2:	cmp    DWORD PTR [ecx-0x61],eax
  4074a5:	pop    ss
  4074a6:	jns    0x407452
  4074a8:	xor    BYTE PTR [ecx+0x4298b733],bh
  4074ae:	cmp    esp,ebx
  4074b0:	xor    DWORD PTR [ebx+0xa],ebp
  4074b3:	dec    esp
  4074b4:	enter  0xde0a,0xf5
  4074b8:	hlt    
  4074b9:	pop    edi
  4074ba:	cmp    eax,0x6627e4dc
  4074bf:	aaa    
  4074c0:	adc    ecx,DWORD PTR [esi+0x9896212]
  4074c6:	xchg   ebx,eax
  4074c7:	mov    dh,0x74
  4074c9:	or     eax,DWORD PTR [edx+0x5d]
  4074cc:	shl    BYTE PTR [ebp+0x2c085a21],0xc0
  4074d3:	pop    ecx
  4074d4:	shl    BYTE PTR [edx+0x1f2f15d5],1
  4074da:	inc    esp
  4074db:	icebp  
  4074dc:	sbb    al,0xfc
  4074de:	fpatan 
  4074e0:	cmp    BYTE PTR [edi-0x49],ah
  4074e3:	shl    BYTE PTR [ebx+0x8],1
  4074e6:	jecxz  0x4074a6
  4074e8:	popa   
  4074e9:	xor    eax,0xc9aa92f8
  4074ee:	pop    eax
  4074ef:	push   ebp
  4074f0:	or     al,BYTE PTR [esi+0x15]
  4074f3:	mov    edx,0xba4d769
  4074f8:	xor    bl,ch
  4074fa:	pop    eax
  4074fb:	in     eax,dx
  4074fc:	xchg   esi,eax
  4074fd:	adc    dl,BYTE PTR [esi+edx*4]
  407500:	push   ebx
  407501:	inc    esi
  407502:	pop    ds
  407503:	leave  
  407504:	in     eax,dx
  407505:	xor    bl,BYTE PTR [edi]
  407507:	xchg   esp,eax
  407508:	outs   dx,DWORD PTR ds:[esi]
  407509:	fisubr WORD PTR [esi]
  40750b:	add    cl,BYTE PTR ds:0xfc690703
  407511:	mov    ds:0x7b626176,al
  407516:	mov    esi,0x826b1d91
  40751b:	xchg   ecx,eax
  40751c:	mov    edi,0x86ef16a
  407521:	mov    ch,0xb7
  407523:	xor    BYTE PTR ds:0x4ffec277,ah
  407529:	inc    esi
  40752a:	stc    
  40752b:	sbb    al,0xe4
  40752d:	and    bh,BYTE PTR [edx]
  40752f:	rcr    DWORD PTR [ecx+0x6e2c03e8],cl
  407535:	pop    es
  407536:	cmp    bh,BYTE PTR ds:0x8b09a3ea
  40753c:	cmp    al,0xb3
  40753e:	(bad)  
  40753f:	cmp    eax,0xf3d720db
  407544:	xor    ch,BYTE PTR [edx]
  407546:	adc    bl,BYTE PTR [ebp+0x32]
  407549:	jae    0x40759d
  40754b:	pop    es
  40754c:	into   
  40754d:	leave  
  40754e:	sbb    DWORD PTR [edi-0x4f],ecx
  407551:	lea    eax,[esi+0x28]
  407554:	adc    bl,BYTE PTR [ebp-0x41]
  407557:	jl     0x40754b
  407559:	adc    BYTE PTR [ecx],dl
  40755b:	sub    al,0xdf
  40755d:	popa   
  40755e:	push   cs
  40755f:	aad    0xad
  407561:	mul    DWORD PTR [esi-0x3]
  407564:	cwde   
  407565:	adc    DWORD PTR [ecx+0x77d54a04],edx
  40756b:	imul   esp,DWORD PTR [edi],0x7f
  40756e:	test   cl,al
  407570:	or     BYTE PTR [ecx+edi*8+0x8f35b78],cl
  407577:	fidivr WORD PTR [esi]
  407579:	or     DWORD PTR [edi-0x714091c],edi
  40757f:	or     al,0xac
  407581:	iret   
  407582:	dec    edx
  407583:	fisttp WORD PTR [edi+eiz*4]
  407586:	or     DWORD PTR [esp-0xc5090ee],eax
  40758d:	and    eax,0xb2bd6364
  407592:	repz cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  407595:	xchg   esp,eax
  407596:	add    BYTE PTR [edi-0x44ab0888],bl
  40759c:	cmp    BYTE PTR [ecx],bl
  40759e:	adc    al,BYTE PTR [ebx-0x2b]
  4075a1:	outs   dx,DWORD PTR ds:[esi]
  4075a2:	xor    bl,BYTE PTR [edi-0x2ca51a5a]
  4075a8:	(bad)  
  4075a9:	mov    esi,0xac82ac40
  4075ae:	and    BYTE PTR [edi],bh
  4075b0:	jns    0x40759f
  4075b2:	add    cl,dh
  4075b4:	(bad)  
  4075b5:	mov    ebx,0x181b2c7e
  4075ba:	lock dec ebx
  4075bc:	pop    eax
  4075bd:	fimul  WORD PTR [esi]
  4075bf:	push   edi
  4075c0:	xor    DWORD PTR [edi+0x4c],0x538f4235
  4075c7:	add    eax,0xacbd7e22
  4075cc:	jle    0x40757d
  4075ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075cf:	gs pop edx
  4075d1:	push   cs
  4075d2:	push   0xffffffa2
  4075d4:	call   0x2491:0x83c60477
  4075db:	scas   eax,DWORD PTR es:[edi]
  4075dc:	retf   0x88de
  4075df:	xor    edi,eax
  4075e1:	icebp  
  4075e2:	outs   dx,DWORD PTR ds:[esi]
  4075e3:	test   eax,0xac25585c
  4075e8:	dec    edi
  4075e9:	push   ebp
  4075ea:	pop    ds
  4075eb:	scas   al,BYTE PTR es:[edi]
  4075ec:	leave  
  4075ed:	push   es
  4075ee:	mov    bh,0x4a
  4075f0:	pop    ebx
  4075f1:	and    al,0x5b
  4075f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f4:	xchg   DWORD PTR ds:0x704ee420,ebp
  4075fa:	out    dx,al
  4075fb:	icebp  
  4075fc:	xor    al,0xfa
  4075fe:	xor    al,0x72
  407600:	es xchg ebx,eax
  407602:	xor    al,0x42
  407604:	dec    eax
  407605:	jmp    0xf1dadd24
  40760a:	out    dx,eax
  40760b:	sbb    BYTE PTR [ebp+0x40],ah
  40760e:	inc    eax
  40760f:	cld    
  407610:	or     al,0xe1
  407612:	ja     0x407649
  407614:	(bad)  
  407615:	mov    dl,0x85
  407617:	sbb    dh,BYTE PTR [edx]
  407619:	inc    esp
  40761a:	(bad)  
  40761b:	mov    esi,0x243b5eb5
  407620:	jmp    DWORD PTR [ecx+0x56f01e37]
  407626:	pushf  
  407627:	cmp    DWORD PTR [ecx],edx
  407629:	inc    edi
  40762a:	inc    ebx
  40762b:	mov    esi,0x42e94131
  407630:	rcr    dh,1
  407632:	(bad)
  407635:	fmul   st(5),st
  407637:	xor    eax,0x38d45407
  40763c:	cli    
  40763d:	add    esi,DWORD PTR [eax+0x33]
  407640:	lock mov bl,0x74
  407643:	bound  ecx,QWORD PTR [ebx+ecx*2+0x75]
  407647:	cmp    al,0xb4
  407649:	out    dx,al
  40764a:	sub    al,0xd
  40764c:	fsub   QWORD PTR es:[eax+0xe]
  407650:	fsub   st,st(6)
  407652:	(bad)  
  407653:	loope  0x40765e
  407655:	inc    ebx
  407656:	mov    al,0x5d
  407658:	xchg   ebx,eax
  407659:	mov    eax,ds:0x852625fa
  40765e:	mov    ebp,0xb8476ac2
  407663:	gs xchg ecx,eax
  407665:	add    DWORD PTR [eax],ebp
  407667:	jl     0x4076be
  407669:	pop    esp
  40766a:	(bad)  [edx+edx*2+0x37]
  40766e:	inc    eax
  40766f:	inc    ebp
  407670:	scas   eax,DWORD PTR es:[edi]
  407671:	and    dh,dh
  407673:	mov    dl,0xcc
  407675:	inc    ecx
  407676:	popa   
  407677:	mov    gs,WORD PTR [esi]
  407679:	aad    0x2a
  40767b:	adc    DWORD PTR [esi+0x1a],0x38a543e7
  407682:	mov    ds:0xe4c25ca3,al
  407687:	dec    ebp
  407688:	xor    DWORD PTR [edx],0x5650a5d
  40768e:	or     BYTE PTR [ecx-0x18],ah
  407691:	sub    BYTE PTR [esi-0x7d3ca2e3],0x11
  407698:	push   0x8d82ca09
  40769d:	mov    al,ds:0x4ca96ecf
  4076a2:	cmp    DWORD PTR [eax+0x7c7332f3],0x3bc2bad4
  4076ac:	cmp    eax,0x394f0493
  4076b1:	cli    
  4076b2:	sbb    al,0x4b
  4076b4:	aaa    
  4076b5:	call   DWORD PTR [edi]
  4076b7:	and    al,0x16
  4076b9:	sbb    eax,0xd67ac71c
  4076be:	es sti 
  4076c0:	xchg   edi,eax
  4076c1:	jns    0x4076ae
  4076c3:	mov    esi,0x2121441d
  4076c8:	bound  esp,QWORD PTR [edx-0x3dc96b82]
  4076ce:	mov    eax,ds:0xa4059f5e
  4076d3:	dec    edi
  4076d4:	cmp    BYTE PTR [ebx+0x6234cc81],0x5d
  4076db:	cmp    BYTE PTR [ebx+0x46],al
  4076de:	sahf   
  4076df:	xchg   bp,ax
  4076e1:	or     eax,0x1a6232eb
  4076e6:	pushf  
  4076e7:	not    DWORD PTR [ebp+0x1a195613]
  4076ed:	pop    ebp
  4076ee:	or     cl,BYTE PTR [edx]
  4076f0:	lods   al,BYTE PTR ds:[esi]
  4076f1:	push   esi
  4076f2:	dec    BYTE PTR [ebx+edi*1+0x32]
  4076f6:	ficom  WORD PTR [ebp+0x52ae057e]
  4076fc:	push   ebx
  4076fd:	and    eax,0x800769ac
  407702:	dec    esi
  407703:	daa    
  407704:	mov    ecx,0xc7edd801
  407709:	retf   
  40770a:	cmp    eax,0x8a4488fd
  40770f:	scas   eax,DWORD PTR es:[edi]
  407710:	arpl   sp,sp
  407712:	test   DWORD PTR [ecx],edx
  407714:	mov    cl,0x9d
  407716:	or     DWORD PTR [edx+0x39a264c9],esp
  40771c:	shl    DWORD PTR [edx+edi*1+0x72],0xb3
  407721:	arpl   bx,bp
  407723:	test   DWORD PTR [edx+0x54],0x46761840
  40772a:	dec    eax
  40772b:	addr16 adc eax,0x310ae7d7
  407731:	adc    bl,0x7d
  407734:	xor    esp,DWORD PTR [edi-0x2b]
  407737:	push   0x8e78ea99
  40773c:	mov    esp,0x43e391f6
  407741:	jp     0x4077b3
  407743:	and    DWORD PTR [ebp+ebx*4+0x1c2d92f2],esp
  40774a:	loope  0x4076ee
  40774c:	dec    edi
  40774d:	out    dx,eax
  40774e:	gs in  al,dx
  407750:	and    DWORD PTR ds:0xc0ac9fb2,edi
  407756:	jmp    0x192e2645
  40775b:	or     al,0xe4
  40775d:	pop    edx
  40775e:	or     DWORD PTR [ebx-0x7e],esi
  407761:	and    DWORD PTR [ebp+0x1b4282c2],esi
  407767:	cs pop edi
  407769:	in     eax,0x9
  40776b:	push   edi
  40776c:	adc    BYTE PTR [ebx+0x39],ah
  40776f:	sar    esp,cl
  407771:	lock popa 
  407773:	sub    eax,DWORD PTR [edi-0xc9b7871]
  407779:	imul   esp,DWORD PTR [ebp-0x4],0x1bcd2c93
  407780:	cmp    esp,ebx
  407782:	dec    esp
  407783:	sub    BYTE PTR [edx],ch
  407785:	or     DWORD PTR [ebp-0x5c],ecx
  407788:	mov    cl,0xc4
  40778a:	mov    esi,0xce96ffa
  40778f:	shrd   DWORD PTR ds:0x4423dde2,eax,cl
  407796:	mov    edi,0xc4fa7fd6
  40779b:	ror    BYTE PTR [eax+0x24],1
  40779e:	jle    0x4077de
  4077a0:	retf   0xcc1c
  4077a3:	and    eax,0x6f9788b6
  4077a8:	in     eax,dx
  4077a9:	sub    dl,ah
  4077ab:	rcl    DWORD PTR [ecx+ebx*1-0x141e97f1],cl
  4077b2:	dec    ebx
  4077b3:	jmp    0xdd53696e
  4077b8:	cld    
  4077b9:	add    dh,BYTE PTR [ebx]
  4077bb:	sbb    bh,BYTE PTR [ebx]
  4077bd:	cmp    DWORD PTR [edi+0x39],ecx
  4077c0:	aam    0xc2
  4077c2:	sbb    DWORD PTR [ebx-0x303ac1],edi
  4077c8:	dec    edx
  4077c9:	xor    ch,cl
  4077cb:	int    0xb5
  4077cd:	adc    bl,BYTE PTR [edx+edi*2+0x40]
  4077d1:	aam    0xf2
  4077d3:	test   DWORD PTR [eax-0x6796b26b],0xea6fea48
  4077dd:	mov    bh,0x29
  4077df:	clc    
  4077e0:	xchg   DWORD PTR [esi],eax
  4077e2:	popf   
  4077e3:	sub    al,0x59
  4077e5:	ret    
  4077e6:	mov    ebx,0xa1f82f1d
  4077eb:	je     0x40785c
  4077ed:	nop
  4077ee:	inc    esi
  4077ef:	add    esp,DWORD PTR [ebp+0x27]
  4077f2:	lds    eax,FWORD PTR [edi+esi*2+0x7d42ec27]
  4077f9:	iret   
  4077fa:	xor    bl,ch
  4077fc:	adc    ch,BYTE PTR [edi+0x36]
  4077ff:	pop    eax
  407800:	imul   BYTE PTR [edx]
  407802:	into   
  407803:	in     eax,dx
  407804:	mov    ds:0xd277ebbb,al
  407809:	or     al,BYTE PTR [esi+0x7c]
  40780c:	call   edi
  40780e:	xchg   ebp,eax
  40780f:	adc    bh,ah
  407811:	mul    BYTE PTR fs:[ebx+0x2a]
  407815:	lds    ebx,FWORD PTR [edx+0x7c2e831c]
  40781b:	or     BYTE PTR [ecx+0xa],0x8e
  40781f:	dec    ecx
  407820:	scas   eax,DWORD PTR es:[edi]
  407821:	iret   
  407822:	jmp    DWORD PTR [ecx-0x13]
  407825:	int    0x97
  407827:	fidiv  DWORD PTR [esi-0x202933fe]
  40782d:	dec    edx
  40782e:	pop    esp
  40782f:	adc    ah,BYTE PTR [esi+0x7e]
  407832:	cmp    bh,bl
  407834:	lods   al,BYTE PTR ds:[esi]
  407835:	push   0xffffffd4
  407837:	inc    esi
  407838:	test   DWORD PTR [edx+0x2689835],ebx
  40783e:	dec    esp
  40783f:	inc    esi
  407840:	daa    
  407841:	and    ebx,DWORD PTR [eax-0x72a69246]
  407847:	add    al,0x14
  407849:	xor    DWORD PTR [ebp+ecx*8-0x655ebda7],eax
  407850:	cli    
  407851:	shl    edi,0xc3
  407854:	je     0x407886
  407856:	js     0x40783a
  407858:	(bad)  
  40785a:	fist   WORD PTR [edx]
  40785c:	add    al,0x64
  40785e:	pop    ebp
  40785f:	loope  0x40787a
  407861:	jns    0x4077f8
  407863:	rol    BYTE PTR [edx],1
  407865:	cmp    ebx,DWORD PTR [ebx+0x5a6937e0]
  40786b:	loopne 0x407847
  40786d:	pop    edx
  40786e:	std    
  40786f:	mov    ecx,0xfe44f59a
  407874:	pusha  
  407875:	lods   al,BYTE PTR ds:[esi]
  407876:	loope  0x407827
  407878:	iret   
  407879:	dec    esp
  40787a:	stc    
  40787b:	sub    dh,BYTE PTR [ebx+0x8]
  40787e:	(bad)  
  40787f:	push   DWORD PTR [ebp-0x49]
  407882:	push   edi
  407883:	ins    DWORD PTR es:[edi],dx
  407884:	cmp    cl,BYTE PTR [ecx-0x41f83fb1]
  40788a:	jg     0x40783c
  40788c:	loope  0x40788a
  40788e:	mov    edi,DWORD PTR ds:0x286f4443
  407894:	mov    ds:0xd2a4099e,al
  407899:	rol    al,1
  40789b:	adc    esp,DWORD PTR [edi-0x665d59ef]
  4078a1:	cmp    esi,eax
  4078a3:	lock xlat BYTE PTR ds:[ebx]
  4078a5:	ret    
  4078a6:	push   edx
  4078a7:	xchg   DWORD PTR [esi-0x65504038],ebp
  4078ad:	(bad)  
  4078ae:	xlat   BYTE PTR ds:[ebx]
  4078af:	sti    
  4078b0:	jmp    0x40790c
  4078b2:	jmp    0x4078ae
  4078b4:	cs icebp 
  4078b6:	push   cs
  4078b7:	mov    esi,0x36ff8f56
  4078bc:	inc    edi
  4078bd:	ins    BYTE PTR es:[edi],dx
  4078be:	(bad)  
  4078bf:	sti    
  4078c0:	pusha  
  4078c1:	imul   edi,DWORD PTR [esi],0xfffffff5
  4078c4:	sub    ah,BYTE PTR [edx+0x50426ed8]
  4078ca:	ror    BYTE PTR [esi+0x7f],0x8d
  4078ce:	adc    al,0x4e
  4078d0:	mov    dh,0x10
  4078d2:	nop
  4078d3:	sbb    al,al
  4078d5:	mov    ch,0x3c
  4078d7:	xchg   ebp,eax
  4078d8:	cld    
  4078d9:	or     al,0xfc
  4078db:	inc    edx
  4078dc:	cmp    al,0xd7
  4078de:	in     al,0x23
  4078e0:	xchg   edi,eax
  4078e1:	arpl   WORD PTR [ebx+0x54eb0d22],sp
  4078e7:	or     eax,0x32158128
  4078ec:	jo     0x40793d
  4078ee:	dec    edx
  4078ef:	pop    esi
  4078f0:	mov    bh,0x59
  4078f2:	stos   BYTE PTR es:[edi],al
  4078f3:	xchg   esi,eax
  4078f4:	jge    0x40787e
  4078f6:	nop
  4078f7:	es sbb al,0x48
  4078fa:	push   ss
  4078fb:	out    dx,eax
  4078fc:	mov    esi,0xc0d44650
  407901:	or     al,0xb9
  407903:	fcmovnu st,st(0)
  407905:	div    BYTE PTR [ebx-0xc98ed85]
  40790b:	hlt    
  40790c:	aas    
  40790d:	inc    ebx
  40790e:	repz xchg ebx,eax
  407910:	pop    ebx
  407911:	repz loopne 0x407948
  407914:	mov    ebp,0x2dc981f9
  407919:	jg     0x4078e2
  40791b:	cwde   
  40791c:	(bad)  
  40791d:	jmp    0x889e:0xbc0c94f6
  407924:	arpl   WORD PTR [ecx+edi*1+0x588602c7],dx
  40792b:	(bad)  [esi-0xb]
  40792e:	into   
  40792f:	outs   dx,BYTE PTR ds:[esi]
  407930:	or     DWORD PTR [esp+ebp*1+0x33],esp
  407934:	mov    ah,0x26
  407936:	inc    edx
  407937:	dec    eax
  407938:	add    al,0x15
  40793a:	leave  
  40793b:	retf   
  40793c:	push   esi
  40793d:	xchg   esp,eax
  40793e:	cli    
  40793f:	pop    ecx
  407940:	or     DWORD PTR [ecx-0x7a46cb28],esp
  407946:	scas   eax,DWORD PTR es:[edi]
  407947:	cmp    BYTE PTR [edx+ecx*4-0x44e2582d],0xf
  40794f:	lock mov al,0xf6
  407952:	push   ss
  407953:	and    dl,0x54
  407956:	pop    ebp
  407957:	mov    edi,0x78548f5f
  40795c:	std    
  40795d:	push   edx
  40795e:	adc    cl,BYTE PTR [esi+0x16de1e88]
  407964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407965:	mov    DWORD PTR [ebx+eax*8+0x1b],ecx
  407969:	lods   eax,DWORD PTR ds:[esi]
  40796a:	arpl   WORD PTR [ecx-0x31],ax
  40796d:	add    BYTE PTR [edx-0x63],ah
  407970:	daa    
  407971:	push   ss
  407972:	call   0x37a7e051
  407977:	imul   esi,eax,0xef5a905d
  40797d:	sub    DWORD PTR [edi-0x12cf32e],eax
  407983:	lea    ebp,[edi+eiz*8]
  407986:	test   DWORD PTR [edx],ebx
  407988:	and    BYTE PTR [edi+0x1e],bh
  40798b:	iret   
  40798c:	jns    0x4079a3
  40798e:	outs   dx,BYTE PTR ds:[esi]
  40798f:	sbb    al,0xfd
  407991:	fisttp QWORD PTR [eax+0x1121ba00]
  407997:	or     dl,cl
  407999:	pop    edi
  40799a:	mov    ?,WORD PTR [edi]
  40799c:	(bad)  
  40799d:	out    dx,eax
  40799e:	and    cl,cl
  4079a0:	cmp    ch,BYTE PTR [esi+ebp*8+0x5b]
  4079a4:	pop    ebp
  4079a5:	push   cs
  4079a6:	sbb    al,BYTE PTR [edx+edx*8]
  4079a9:	jo     0x4079df
  4079ab:	ds xchg ah,al
  4079ae:	inc    esi
  4079af:	out    dx,eax
  4079b0:	test   DWORD PTR [edi-0x19],eax
  4079b3:	ret    
  4079b4:	fcmove st,st(2)
  4079b6:	call   0xe634206f
  4079bb:	or     al,0x3c
  4079bd:	mov    esp,0xbe3b79f9
  4079c2:	add    DWORD PTR [ecx-0x19b46c4b],ecx
  4079c8:	leave  
  4079c9:	sbb    edx,ecx
  4079cb:	nop
  4079cc:	dec    esi
  4079cd:	push   cs
  4079ce:	pop    esi
  4079cf:	retf   0xbd69
  4079d2:	jmp    0x4079e4
  4079d4:	in     eax,0xdc
  4079d6:	sbb    eax,0xe487338b
  4079db:	inc    eax
  4079dc:	out    0x8b,al
  4079de:	push   cs
  4079df:	cld    
  4079e0:	aad    0x30
  4079e2:	sbb    dl,BYTE PTR [ecx-0x2b]
  4079e5:	int3   
  4079e6:	inc    ebx
  4079e7:	ret    
  4079e8:	std    
  4079e9:	pop    ss
  4079ea:	adc    al,0x3c
  4079ec:	jae    0x4079ee
  4079ee:	cmp    cl,bh
  4079f0:	adc    DWORD PTR [eax-0x276dd200],edx
  4079f6:	xchg   ecx,eax
  4079f7:	js     0x407a26
  4079f9:	or     BYTE PTR [edi+0x68c20852],dh
  4079ff:	test   ah,0x17
  407a02:	sahf   
  407a03:	sbb    ecx,DWORD PTR [ecx+0x3c42799e]
  407a09:	push   ds
  407a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a0b:	or     al,0x19
  407a0d:	psubsw mm4,QWORD PTR [ecx]
  407a10:	fcmovnbe st,st(7)
  407a12:	daa    
  407a13:	scas   al,BYTE PTR es:[edi]
  407a14:	gs call 0xc4c93623
  407a1a:	imul   edi,DWORD PTR [ebx+0x26383ac7],0xffffffdb
  407a21:	xor    ecx,DWORD PTR [edi]
  407a23:	call   0x2313d85d
  407a28:	scas   eax,DWORD PTR es:[edi]
  407a29:	test   ch,0x94
  407a2c:	mov    esp,DWORD PTR [esi-0x5a]
  407a2f:	and    BYTE PTR [eax-0x2c],bh
  407a32:	cdq    
  407a33:	dec    esp
  407a34:	and    DWORD PTR [ecx-0x585eacbf],ebx
  407a3a:	jle    0x407a58
  407a3c:	rcr    BYTE PTR [eax-0x76c8b069],0xa6
  407a43:	retf   
  407a44:	dec    ebp
  407a45:	mov    ecx,DWORD PTR [ebp-0x4]
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0x57bc66ff
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	(bad)  
  407b36:	sbb    al,0xea
  407b38:	mov    cl,0x7
  407b3a:	call   0x20ca:0xc27cb188
  407b41:	dec    ebp
  407b42:	push   esp
  407b43:	lea    ecx,[edi+0x7f34f693]
  407b49:	jg     0x407b96
  407b4b:	xchg   ebx,eax
  407b4c:	mov    esp,DWORD PTR [edx-0x256db56]
  407b52:	adc    DWORD PTR [ebx],edi
  407b54:	outs   dx,DWORD PTR ds:[esi]
  407b55:	call   0x5516:0xfde74212
  407b5c:	ds nop
  407b5e:	inc    edx
  407b5f:	dec    edx
  407b60:	or     al,0x9d
  407b62:	cwde   
  407b63:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  407b65:	repnz sub eax,0xa24ba17a
  407b6b:	xlat   BYTE PTR ds:[ebx]
  407b6c:	or     eax,0x8d6add93
  407b71:	push   0x5a9182e
  407b76:	std    
  407b77:	call   DWORD PTR [ebp+eax*8+0x57dc1cf8]
  407b7e:	mov    ch,0x4f
  407b80:	cld    
  407b81:	push   edi
  407b82:	imul   eax,eax,0x63
  407b85:	sbb    DWORD PTR [edx+0x20],0x98df4367
  407b8c:	sbb    eax,0x4794aa33
  407b91:	mov    ch,0xc0
  407b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b94:	adc    eax,0xde9f2c03
  407b99:	and    ebx,DWORD PTR [esi+0x6d8856de]
  407b9f:	add    esi,edi
  407ba1:	jmp    0x407b9f
  407ba3:	xchg   esp,eax
  407ba4:	jns    0x407b9b
  407ba6:	push   ds
  407ba7:	pop    esp
  407ba8:	sbb    DWORD PTR [ecx-0xc6bc8b3],edi
  407bae:	cmp    eax,0x1dd0dc6f
  407bb3:	pop    eax
  407bb4:	fwait
  407bb5:	jl     0x407c0a
  407bb7:	mov    bl,BYTE PTR [esi]
  407bb9:	stc    
  407bba:	lods   eax,DWORD PTR ds:[esi]
  407bbb:	outs   dx,DWORD PTR ds:[esi]
  407bbc:	xchg   ebx,eax
  407bbd:	fdivrp st(6),st
  407bbf:	push   esp
  407bc0:	imul   ebx,DWORD PTR [edx-0x76],0x3
  407bc4:	lods   al,BYTE PTR ds:[esi]
  407bc5:	in     eax,0x75
  407bc7:	sbb    al,BYTE PTR [ecx-0x86ff3d5]
  407bcd:	adc    BYTE PTR [ecx+eax*2-0x1d0b9c6c],0xbd
  407bd5:	dec    ebp
  407bd6:	inc    esi
  407bd7:	mov    al,0x64
  407bd9:	rcr    dl,1
  407bdb:	loopne 0x407c3a
  407bdd:	inc    esp
  407bde:	js     0x407bc7
  407be0:	mov    al,ds:0x13db58bb
  407be5:	or     edi,ebx
  407be7:	push   edi
  407be8:	mov    esi,0x810c441d
  407bed:	mov    cl,0x79
  407bef:	cmp    DWORD PTR [esi],edi
  407bf1:	or     al,0xce
  407bf3:	rol    DWORD PTR [ecx+0x6f5286c6],0xbd
  407bfa:	dec    ecx
  407bfb:	cs jbe 0x407bec
  407bfe:	cmc    
  407bff:	and    BYTE PTR [eax+0x18be47c9],cl
  407c05:	fistp  DWORD PTR fs:[ecx+0x62]
  407c09:	ffree  st(6)
  407c0b:	sar    BYTE PTR [ebx+0x1e1bcaf7],1
  407c11:	in     al,dx
  407c12:	aaa    
  407c13:	cmp    eax,0x4e50ae40
  407c18:	sbb    ebp,DWORD PTR [ebx]
  407c1a:	lods   al,BYTE PTR ds:[esi]
  407c1b:	fisubr DWORD PTR [eax]
  407c1d:	das    
  407c1e:	or     eax,0xdae9a0f0
  407c23:	push   cs
  407c24:	sbb    BYTE PTR [ebp+0x3],0xf2
  407c28:	xchg   esp,eax
  407c29:	or     al,0xd5
  407c2b:	push   ecx
  407c2c:	pop    ds
  407c2d:	xor    BYTE PTR [ebx],ch
  407c2f:	cmc    
  407c30:	xchg   ecx,eax
  407c31:	pop    esi
  407c32:	stc    
  407c33:	scas   al,BYTE PTR es:[edi]
  407c34:	xor    al,0xab
  407c36:	xchg   edi,eax
  407c37:	aas    
  407c38:	push   DWORD PTR [edx+eax*1]
  407c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c3c:	iret   
  407c3d:	and    DWORD PTR [eax],0xffffffc9
  407c40:	pop    ds
  407c41:	mov    esi,0x5c434be8
  407c46:	xchg   ebp,eax
  407c47:	ins    BYTE PTR es:[edi],dx
  407c48:	jge    0x407bd0
  407c4a:	or     eax,0xa6e0c0c8
  407c4f:	icebp  
  407c50:	inc    esi
  407c51:	bound  eax,QWORD PTR ds:0x580ae915
  407c57:	dec    edx
  407c58:	xchg   edx,eax
  407c59:	lock fsub QWORD PTR [edx-0x7d]
  407c5d:	fwait
  407c5e:	(bad)  
  407c5f:	cmc    
  407c60:	sti    
  407c61:	lods   eax,DWORD PTR ds:[esi]
  407c62:	retf   0x7f28
  407c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c66:	cmp    bh,BYTE PTR [edi+0x40]
  407c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c6a:	sbb    DWORD PTR [ebx],edx
  407c6c:	jns    0x407cdf
  407c6e:	aam    0x1
  407c70:	jmp    0x68bfdbb4
  407c75:	pop    eax
  407c76:	push   ds
  407c77:	ficomp WORD PTR [eax+0x5c4ef192]
  407c7d:	popa   
  407c7e:	mov    bl,0x91
  407c80:	in     al,dx
  407c81:	rcr    esi,0xca
  407c84:	imul   edi,DWORD PTR [edi],0x3de42140
  407c8a:	mov    esi,0x2baee006
  407c8f:	fdiv   st,st(7)
  407c91:	imul   bl
  407c93:	(bad)  
  407c94:	icebp  
  407c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c96:	inc    ebp
  407c97:	jle    0x407cdb
  407c99:	lea    eax,[ebx]
  407c9b:	pop    edx
  407c9c:	test   BYTE PTR [ecx],ch
  407c9e:	push   ecx
  407c9f:	ja     0x407c6c
  407ca1:	mov    al,0x89
  407ca3:	add    esi,DWORD PTR [eax+0x65]
  407ca6:	pop    ebp
  407ca7:	ins    BYTE PTR es:[edi],dx
  407ca8:	adc    ah,BYTE PTR [ecx+ecx*2+0x7f]
  407cac:	mov    ds:0xb453c8ac,al
  407cb1:	aaa    
  407cb2:	push   ecx
  407cb3:	jmp    0x5189444c
  407cb8:	and    BYTE PTR ds:0x9ed9055d,dh
  407cbe:	fwait
  407cbf:	not    DWORD PTR [ebx-0x22c2a41f]
  407cc5:	adc    DWORD PTR [edi+ebp*4-0x1b20c851],edi
  407ccc:	push   ebp
  407ccd:	das    
  407cce:	add    edi,DWORD PTR [edi-0x57a00086]
  407cd4:	add    ch,BYTE PTR [ebx-0x59]
  407cd7:	sahf   
  407cd8:	mov    ecx,0xc050dfba
  407cdd:	(bad)  
  407cde:	(bad)  
  407cdf:	cmp    BYTE PTR ds:[esi],dh
  407ce2:	fwait
  407ce3:	pop    esi
  407ce4:	(bad)  
  407ce5:	mov    esi,edi
  407ce7:	cli    
  407ce8:	in     al,dx
  407ce9:	mov    BYTE PTR [edx-0x47],dh
  407cec:	(bad)  
  407ced:	loop   0x407ceb
  407cef:	push   edi
  407cf0:	ret    
  407cf1:	retf   0xe0b3
  407cf4:	cmp    al,dl
  407cf6:	jl     0x407cea
  407cf8:	and    DWORD PTR ds:0x55cc169e,0x7d
  407cff:	ror    DWORD PTR [ebx-0x74],0x66
  407d03:	sbb    dl,dl
  407d05:	lods   eax,DWORD PTR ds:[esi]
  407d06:	sub    edi,DWORD PTR [edi+0x4d]
  407d09:	iret   
  407d0a:	add    al,0x9c
  407d0c:	out    0xd1,al
  407d0e:	push   edx
  407d0f:	sub    DWORD PTR [ecx-0x56ec17f7],esi
  407d15:	push   ss
  407d16:	xlat   BYTE PTR ds:[ebx]
  407d17:	and    BYTE PTR ds:0x6caa0430,cl
  407d1d:	daa    
  407d1e:	push   cs
  407d1f:	dec    edi
  407d20:	sbb    eax,0xaed08749
  407d25:	or     DWORD PTR [ebp+0x830c1ea],ebp
  407d2b:	fisubr DWORD PTR [ebp+0x4d]
  407d2e:	and    eax,0x23fefdfc
  407d33:	inc    edx
  407d34:	ss sar esi,cl
  407d37:	out    0x5d,eax
  407d39:	mov    dl,bh
  407d3b:	pop    ebx
  407d3c:	lds    eax,FWORD PTR [esi]
  407d3e:	mov    dl,0x7a
  407d40:	shl    BYTE PTR [edi+ebx*1],cl
  407d43:	retf   0xfa
  407d46:	fbstp  TBYTE PTR [edi+ebx*1-0x15]
  407d4a:	dec    ebx
  407d4b:	in     al,0x34
  407d4d:	ins    DWORD PTR es:[edi],dx
  407d4e:	aam    0xea
  407d50:	inc    ecx
  407d51:	jge    0x407d42
  407d53:	inc    edx
  407d54:	lock inc eax
  407d56:	stos   DWORD PTR es:[edi],eax
  407d57:	popa   
  407d58:	adc    eax,0xc0deee43
  407d5d:	dec    edx
  407d5e:	dec    ebx
  407d5f:	pop    ebx
  407d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d61:	add    BYTE PTR [esp+esi*8+0x6e],al
  407d65:	xchg   edi,eax
  407d66:	jbe    0x407d91
  407d68:	push   0x3e
  407d6a:	imul   esi,DWORD PTR [edx-0x60e210],0x678a7e90
  407d74:	and    al,0x37
  407d76:	inc    eax
  407d77:	and    ebx,DWORD PTR [edx-0x548c26d6]
  407d7d:	lahf   
  407d7e:	lods   al,BYTE PTR ds:[esi]
  407d7f:	adc    BYTE PTR [edx],dl
  407d81:	push   ecx
  407d82:	pop    es
  407d83:	(bad)  
  407d84:	xchg   edi,eax
  407d85:	dec    esi
  407d86:	xchg   ebp,eax
  407d87:	or     eax,0xd13fb71c
  407d8c:	shl    BYTE PTR [edx-0x5b5b0c9f],0xf4
  407d93:	dec    edi
  407d94:	sar    BYTE PTR [ebx+ebx*1],cl
  407d97:	cld    
  407d98:	sub    BYTE PTR [edx+0x5b],0xa5
  407d9c:	cs stos DWORD PTR es:[edi],eax
  407d9e:	inc    ebx
  407d9f:	popf   
  407da0:	xor    DWORD PTR [edx+0x37],edx
  407da3:	jp     0x407deb
  407da5:	fcmovnbe st,st(6)
  407da7:	mov    eax,ds:0xbfe53e10
  407dac:	fmul   QWORD PTR [eax+edi*2+0x11d26f9f]
  407db3:	aaa    
  407db4:	pop    ebp
  407db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407db6:	cli    
  407db7:	fsub   DWORD PTR [esi-0x55c07c]
  407dbd:	fs test ebp,ebx
  407dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dc1:	pushf  
  407dc2:	test   al,0x78
  407dc4:	dec    ecx
  407dc5:	dec    esi
  407dc6:	popf   
  407dc7:	ins    DWORD PTR es:[edi],dx
  407dc8:	adc    DWORD PTR [edx-0x7e],ecx
  407dcb:	dec    eax
  407dcc:	ins    DWORD PTR es:[edi],dx
  407dcd:	push   edi
  407dce:	lds    esi,FWORD PTR [ebx+0x12]
  407dd1:	outs   dx,DWORD PTR ds:[esi]
  407dd2:	aas    
  407dd3:	xchg   edi,eax
  407dd4:	inc    esi
  407dd5:	inc    ebx
  407dd6:	xchg   edx,eax
  407dd7:	and    esi,DWORD PTR [esi]
  407dd9:	cmp    edi,edi
  407ddb:	les    edx,FWORD PTR [ecx-0x5b]
  407dde:	cli    
  407ddf:	pushf  
  407de0:	scas   eax,DWORD PTR es:[edi]
  407de1:	hlt    
  407de2:	cwde   
  407de3:	test   BYTE PTR [edi+0x78],ah
  407de6:	sbb    eax,0x4fcf535a
  407deb:	sbb    DWORD PTR [ecx+0x46ca20e3],0xe8f29421
  407df5:	cmp    ah,BYTE PTR [ebx-0x12]
  407df8:	and    bl,BYTE PTR [eax]
  407dfa:	ds mov dl,0x55
  407dfd:	int    0x65
  407dff:	je     0x407d94
  407e01:	pusha  
  407e02:	mov    ecx,0xb5d1e8ca
  407e07:	xchg   ebx,eax
  407e08:	push   0x84f5c032
  407e0d:	push   0x4845324c
  407e12:	push   0xffffff88
  407e14:	stc    
  407e15:	push   ds
  407e16:	xor    al,0x71
  407e18:	ficomp WORD PTR [ebx+0x70]
  407e1b:	pushf  
  407e1c:	cld    
  407e1d:	out    dx,al
  407e1e:	lea    edx,[esp+edi*8]
  407e21:	les    esi,FWORD PTR [edx-0xed67bd]
  407e27:	test   DWORD PTR [eax+eax*1],eax
  407e2a:	cdq    
  407e2b:	es daa 
  407e2d:	sub    ecx,ebp
  407e2f:	jb     0x407e68
  407e31:	sbb    eax,0x4045cf65
  407e36:	imul   eax,DWORD PTR [edi],0x304ebaa4
  407e3c:	(bad)  
  407e3d:	popa   
  407e3e:	fiadd  DWORD PTR [edx+0x2a85b1f6]
  407e44:	fistp  WORD PTR [edx]
  407e46:	mov    WORD PTR [ebx],cs
  407e48:	xchg   edx,eax
  407e49:	add    al,0xd0
  407e4b:	inc    ebx
  407e4c:	sar    DWORD PTR [ecx-0x8aa829f],1
  407e52:	cmc    
  407e53:	jp     0x407ddb
  407e55:	or     al,0x89
  407e57:	jp     0x407ead
  407e59:	inc    ebp
  407e5a:	mov    ebx,0xca05344b
  407e5f:	ret    
  407e60:	push   ebx
  407e61:	lds    esp,FWORD PTR [eax+0x4d]
  407e64:	jmp    0x2e9c:0x192b4e34
  407e6b:	mul    BYTE PTR es:[edx-0x730cb03]
  407e72:	shl    BYTE PTR [ebx],0x7
  407e75:	lea    ecx,[ecx+0x77e985a0]
  407e7b:	int    0x37
  407e7d:	xor    al,0xfc
  407e7f:	ficomp WORD PTR [edi+edx*8-0x8]
  407e83:	and    bl,BYTE PTR [edx]
  407e85:	fstp   st(6)
  407e87:	inc    edi
  407e88:	xor    DWORD PTR [ebx],0x3890fd3a
  407e8e:	sbb    edi,ebx
  407e90:	jnp    0x407e71
  407e92:	ja     0x407edf
  407e94:	jp     0x407e88
  407e96:	jmp    0x82e28303
  407e9b:	pop    ebp
  407e9c:	jg     0x407e8a
  407e9e:	bound  esp,QWORD PTR [ebx-0x19594259]
  407ea4:	repnz inc esi
  407ea6:	push   ebx
  407ea7:	retf   0x6141
  407eaa:	sub    dl,BYTE PTR [ebp-0x3ff44761]
  407eb0:	lods   eax,DWORD PTR ds:[esi]
  407eb1:	cld    
  407eb2:	imul   eax,DWORD PTR [ebp-0x1a],0x7476418c
  407eb9:	cmp    BYTE PTR [ebp+0x1d],bl
  407ebc:	mov    edi,0xbcdcd883
  407ec1:	pop    eax
  407ec2:	shl    DWORD PTR [ebx],0xb9
  407ec5:	mov    edi,0xf0cd318a
  407eca:	pop    esi
  407ecb:	sbb    DWORD PTR [eax+0x4f2a1971],ebx
  407ed1:	out    0xf5,eax
  407ed3:	(bad)  [ebp-0x2498b117]
  407ed9:	xor    eax,0xab59d18e
  407ede:	add    al,dh
  407ee0:	(bad)  [ebp-0x4]
  407ee3:	outs   dx,BYTE PTR ds:[esi]
  407ee4:	mov    DWORD PTR [eax+0x7cbe8ee0],ebx
  407eea:	jno    0x407f3f
  407eec:	pushf  
  407eed:	dec    edi
  407eee:	inc    ebx
  407eef:	adc    eax,0x5cdd499a
  407ef4:	stos   BYTE PTR es:[edi],al
  407ef5:	mov    esp,0x3972cee4
  407efa:	mov    es,eax
  407efc:	push   es
  407efd:	cmp    bh,BYTE PTR [ebx-0x3b]
  407f00:	ret    0xd685
  407f03:	pop    ds
  407f04:	xor    eax,0xdd41d032
  407f09:	dec    ebp
  407f0a:	mov    ecx,0x39736211
  407f0f:	je     0x407ecd
  407f11:	pusha  
  407f12:	scas   al,BYTE PTR es:[edi]
  407f13:	les    edx,FWORD PTR [ebx]
  407f15:	jl     0x407f74
  407f17:	mov    esi,0xc83f558e
  407f1c:	mov    bl,0xe2
  407f1e:	xor    DWORD PTR ds:0x1a5a533d,esp
  407f24:	push   ebp
  407f25:	xchg   DWORD PTR [ebp-0x71],edi
  407f28:	jae    0x407f9b
  407f2a:	pop    ecx
  407f2b:	loopne 0x407f63
  407f2d:	je     0x407f6a
  407f2f:	add    ah,dh
  407f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f32:	cmp    BYTE PTR [edi],dh
  407f34:	jo     0x407ec6
  407f36:	or     DWORD PTR [edx+0x23],eax
  407f39:	xor    esp,DWORD PTR [edi]
  407f3b:	mov    ds:0xe19a2b7f,eax
  407f40:	stos   DWORD PTR es:[edi],eax
  407f41:	out    dx,eax
  407f42:	sub    BYTE PTR [esi+0x6c],bh
  407f45:	sub    DWORD PTR [ebp+0x70],ecx
  407f48:	sbb    DWORD PTR [esi+esi*1-0x3a03a1d2],0xd5165c3c
  407f53:	push   0xffffffdb
  407f55:	repnz ds adc ebp,ebx
  407f59:	int3   
  407f5a:	cs jb  0x407f9d
  407f5d:	popf   
  407f5e:	scas   al,BYTE PTR es:[edi]
  407f5f:	and    eax,0x2a96cbcc
  407f64:	scas   eax,DWORD PTR es:[edi]
  407f65:	sub    eax,0xbfcaf6cb
  407f6a:	push   es
  407f6b:	out    0xb8,ax
  407f6e:	sbb    eax,0x72aa5ecc
  407f73:	push   0xffffff8a
  407f75:	mov    eax,0xd0d185ef
  407f7a:	shl    ah,0x9f
  407f7d:	mov    edx,0xa1109a97
  407f82:	aaa    
  407f83:	shr    BYTE PTR [ebp+0x1c88e6a2],1
  407f89:	cwde   
  407f8a:	rol    dl,cl
  407f8c:	inc    edx
  407f8d:	fst    st(3)
  407f8f:	push   ebx
  407f90:	cmp    ebp,edx
  407f92:	mov    ah,0x4d
  407f94:	fcmovb st,st(0)
  407f96:	lahf   
  407f97:	fdecstp 
  407f99:	mov    ah,0xf4
  407f9b:	inc    eax
  407f9c:	and    DWORD PTR [edx+eiz*4-0x6d0ef1c9],ebp
  407fa3:	pop    esp
  407fa4:	pop    esp
  407fa5:	iret   
  407fa6:	inc    DWORD PTR [esi]
  407fa8:	sub    edx,ebx
  407faa:	les    edi,FWORD PTR [eax]
  407fac:	inc    eax
  407fad:	fmul   QWORD PTR [esi*1-0x433afac1]
  407fb4:	mov    DWORD PTR [edi+0x47],eax
  407fb7:	loop   0x407f57
  407fb9:	mov    dl,0x6c
  407fbb:	xchg   edi,eax
  407fbc:	in     eax,dx
  407fbd:	push   sp
  407fbf:	push   cs
  407fc0:	cwde   
  407fc1:	ins    BYTE PTR es:[edi],dx
  407fc2:	mov    ds:0x37e8c676,eax
  407fc7:	adc    dh,dl
  407fc9:	(bad)  
  407fca:	pop    ecx
  407fcb:	xor    bl,bl
  407fcd:	and    edx,0x3b61e8a0
  407fd3:	test   eax,0x3ff37d63
  407fd8:	fs out 0xfa,al
  407fdb:	cmp    al,0x95
  407fdd:	paddq  mm2,QWORD PTR [ebx+0x14]
  407fe1:	mov    al,ds:0x860a5f59
  407fe6:	arpl   WORD PTR [ecx+ebx*2-0xa04ca2c],bp
  407fed:	ss push eax
  407fef:	xor    al,0x42
  407ff1:	pop    ss
  407ff2:	inc    eax
  407ff3:	imul   ebp,DWORD PTR [bx],0x1e52dab
  407ffa:	cmc    
  407ffb:	add    BYTE PTR [eax+0x608dd28e],0x5a
  408002:	xchg   edi,eax
  408003:	les    ebp,FWORD PTR [ebp-0x4a]
  408006:	add    BYTE PTR [eax-0x53c9eb53],ch
  40800c:	lods   al,BYTE PTR ds:[esi]
  40800d:	cmp    eax,0x4c9e2e72
  408012:	lods   al,BYTE PTR ds:[esi]
  408013:	jnp    0x408091
  408015:	(bad)  
  408016:	mov    edx,0xc1184632
  40801b:	dec    ebx
  40801c:	lea    esp,[ebx]
  40801e:	push   esi
  40801f:	adc    eax,DWORD PTR gs:[ebx-0x3e]
  408023:	repz and edx,DWORD PTR [edi]
  408026:	mov    al,0xd3
  408028:	js     0x407fb7
  40802a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40802b:	mov    ebx,DWORD PTR [edx]
  40802d:	push   edx
  40802e:	xor    BYTE PTR [esi],bh
  408030:	pushf  
  408031:	mov    DWORD PTR [ecx],ebx
  408033:	pop    eax
  408034:	pop    ebx
  408035:	sub    ebp,DWORD PTR [esi]
  408037:	mov    dh,bh
  408039:	xor    bl,BYTE PTR [esp+eax*1+0x47]
  40803d:	and    eax,0x21807fcb
  408042:	ja     0x407ffc
  408044:	repz xor ecx,DWORD PTR gs:[esi+esi*1]
  408049:	pop    ss
  40804a:	into   
  40804b:	aam    0x84
  40804d:	push   ebp
  40804e:	repz sbb esi,eax
  408051:	adc    eax,0x2be93e64
  408056:	mov    bh,0x14
  408058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408059:	mov    bl,0x6d
  40805b:	(bad)  
  40805c:	je     0x4080c3
  40805e:	cdq    
  40805f:	add    al,0x75
  408062:	mov    bl,BYTE PTR [ebx-0x60]
  408065:	or     eax,0xdaec5bb4
  40806a:	xchg   ebx,eax
  40806b:	fnstsw WORD PTR [eax]
  40806d:	pop    eax
  40806e:	fwait
  40806f:	test   eax,0x5ea9b9e4
  408074:	dec    edx
  408075:	adc    ah,BYTE PTR [edi+0x11]
  408078:	mov    BYTE PTR [ebp+0x39372d22],bl
  40807e:	std    
  40807f:	in     eax,dx
  408080:	dec    ebx
  408081:	and    BYTE PTR [eax-0x509681c3],ch
  408087:	cwde   
  408088:	lock pop es
  40808a:	out    0x92,al
  40808c:	clc    
  40808d:	jnp    0x4080a5
  40808f:	mov    esi,0xf13f57c4
  408094:	aam    0xc5
  408096:	lods   eax,DWORD PTR ds:[esi]
  408097:	ror    edx,0xb0
  40809a:	cmovnp edi,DWORD PTR [edi]
  40809d:	jmp    0xf830ddbd
  4080a2:	dec    esi
  4080a3:	aad    0x80
  4080a5:	lock addr16 nop
  4080a8:	cmp    al,0x26
  4080aa:	mov    si,0x3bdc
  4080ae:	lahf   
  4080af:	lea    ebp,[eax]
  4080b1:	dec    ecx
  4080b2:	cmp    al,0xda
  4080b4:	jecxz  0x40804f
  4080b6:	dec    esi
  4080b7:	cwde   
  4080b8:	les    ecx,FWORD PTR [ecx+eiz*2-0x6371cea2]
  4080bf:	sbb    cl,bh
  4080c1:	mov    edi,DWORD PTR [ebp-0x9eb678d]
  4080c7:	adc    DWORD PTR [ecx],edi
  4080c9:	in     al,dx
  4080ca:	je     0x4080e7
  4080cc:	sbb    ah,ch
  4080ce:	push   esp
  4080cf:	bound  ebx,QWORD PTR [esi+eax*4]
  4080d2:	mov    ds:0x365385a7,al
  4080d7:	push   edi
  4080d8:	das    
  4080d9:	aam    0x88
  4080db:	jle    0x408096
  4080dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080de:	retf   
  4080df:	in     al,dx
  4080e0:	and    BYTE PTR [ecx],bh
  4080e2:	mov    ds:0x67f80b16,al
  4080e7:	mov    esi,0xd3cf6ffe
  4080ec:	and    al,0x57
  4080ee:	test   DWORD PTR [ebx],edi
  4080f0:	gs stos BYTE PTR es:[edi],al
  4080f2:	lock mov al,ds:0xc5a0ef47
  4080f8:	inc    ecx
  4080f9:	int3   
  4080fa:	(bad)  
  4080fb:	dec    esi
  4080fc:	xor    BYTE PTR [edx],ch
  4080fe:	les    esi,FWORD PTR [eax-0x1c]
  408101:	std    
  408102:	aad    0x93
  408104:	xor    eax,0x6ec3efa9
  408109:	push   eax
  40810a:	add    BYTE PTR [ecx+0x1b42610b],bh
  408110:	sub    DWORD PTR [ebp-0x5a],0xffffff92
  408114:	nop
  408115:	mov    esp,0x64bd9b7b
  40811a:	xlat   BYTE PTR ds:[ebx]
  40811b:	xchg   esp,eax
  40811c:	inc    bh
  40811e:	or     DWORD PTR [ebx-0x62298cd6],ecx
  408124:	push   ds
  408125:	add    al,bl
  408127:	xchg   ecx,eax
  408128:	adc    eax,eax
  40812a:	(bad)  
  40812b:	xchg   edx,eax
  40812c:	mov    al,0xde
  40812e:	jg     0x4080f6
  408130:	xor    BYTE PTR [ebp+0x28b06855],cl
  408136:	xchg   ecx,eax
  408137:	ja     0x4080d8
  408139:	outs   dx,BYTE PTR ds:[esi]
  40813a:	sbb    eax,0x30842af9
  40813f:	stc    
  408140:	pop    esp
  408141:	icebp  
  408142:	jmp    0x2ba5:0x79c09d60
  408149:	sbb    al,0x7c
  40814b:	inc    ecx
  40814c:	cmp    edx,esp
  40814e:	xchg   esi,eax
  40814f:	inc    ebx
  408150:	outs   dx,DWORD PTR ds:[esi]
  408151:	sbb    BYTE PTR [edi+0x29],ch
  408154:	inc    ebp
  408155:	xor    edx,eax
  408157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408158:	mov    cl,0x72
  40815a:	(bad)  
  40815b:	sbb    al,0x83
  40815d:	stos   BYTE PTR es:[edi],al
  40815e:	cdq    
  40815f:	cmc    
  408160:	cli    
  408161:	mov    esi,0xc084f009
  408166:	push   esi
  408167:	aad    0x69
  408169:	scas   eax,DWORD PTR es:[edi]
  40816a:	je     0x4081d2
  40816c:	leave  
  40816d:	pop    edx
  40816e:	jecxz  0x408151
  408170:	arpl   WORD PTR [esp+ebp*4-0x7f428ca6],sp
  408177:	ficomp WORD PTR [ecx]
  408179:	rol    BYTE PTR [ecx-0x6b1c3ef6],0x95
  408180:	sbb    DWORD PTR [edx-0x6a7498c2],edi
  408186:	(bad)  
  408187:	repnz add BYTE PTR [eax+0x1a48ba8c],bh
  40818e:	push   cs
  40818f:	adc    ah,BYTE PTR [ebx]
  408191:	push   cs
  408192:	sti    
  408193:	xchg   esp,eax
  408194:	daa    
  408195:	sbb    DWORD PTR [esi+ecx*4+0x59],ecx
  408199:	xchg   ecx,eax
  40819a:	jno    0x4081e9
  40819c:	push   0xffffffd1
  40819e:	jg     0x4081b8
  4081a0:	ds push eax
  4081a2:	and    DWORD PTR [edi+0x68],esp
  4081a5:	ja     0x40820c
  4081a7:	dec    esi
  4081a8:	xor    dl,BYTE PTR [ecx-0x17]
  4081ab:	jge    0x4081e1
  4081ad:	fld    st(2)
  4081af:	jmp    0x2adc:0x7fc4dd75
  4081b6:	shr    ecx,0xae
  4081b9:	inc    edi
  4081ba:	xchg   ebp,eax
  4081bb:	fwait
  4081bc:	test   BYTE PTR [edx],ch
  4081be:	imul   ecx,ecx,0x40879e1
  4081c4:	push   ebp
  4081c5:	or     cl,BYTE PTR [ebx-0x605af1ca]
  4081cb:	dec    eax
  4081cc:	sar    BYTE PTR [ebx+0x646b9cad],1
  4081d2:	and    BYTE PTR [eax-0x3a],0xd2
  4081d6:	iret   
  4081d7:	mov    esp,0x85ab3c52
  4081dc:	or     DWORD PTR [eax-0x6f61ee77],0xffffffb0
  4081e3:	lods   al,BYTE PTR ds:[esi]
  4081e4:	lock call 0xb2f8:0x5e3e27db
  4081ec:	call   0x5da2fd1
  4081f1:	jns    0x40826f
  4081f3:	not    DWORD PTR [edi]
  4081f5:	push   esp
  4081f6:	xchg   esi,eax
  4081f7:	cmp    DWORD PTR ds:0xd5d1a512,edi
  4081fd:	cwde   
  4081fe:	push   es
  4081ff:	push   esp
  408200:	ror    BYTE PTR [ecx-0x273a7cc4],0xb
  408207:	jecxz  0x4081cc
  408209:	xchg   ebp,eax
  40820a:	mov    esi,0x5bc466ae
  40820f:	cmp    BYTE PTR [edi-0x2b749592],dh
  408215:	xor    BYTE PTR [edi],bh
  408217:	jle    0x408231
  408219:	sbb    ecx,esp
  40821b:	aad    0xbd
  40821d:	out    0xc8,al
  40821f:	cmp    edx,DWORD PTR [eax-0x39262bb1]
  408225:	ds mov ch,0xfb
  408228:	pop    ebx
  408229:	in     eax,0xb0
  40822b:	adc    al,0x16
  40822d:	pop    edx
  40822e:	cld    
  40822f:	ss cmp al,0xd5
  408232:	loope  0x4081e2
  408234:	pop    eax
  408235:	aaa    
  408236:	ins    DWORD PTR es:[edi],dx
  408237:	push   ecx
  408238:	push   cs
  408239:	xor    DWORD PTR [edi],edi
  40823b:	cmp    cl,BYTE PTR [ebx]
  40823d:	cmp    eax,0x1f516ad9
  408242:	outs   dx,DWORD PTR ds:[esi]
  408243:	jge    0x4082b9
  408245:	loope  0x40826c
  408247:	out    dx,eax
  408248:	xor    esi,DWORD PTR [ebx-0x73]
  40824b:	sbb    BYTE PTR [esi+0x13],bh
  40824e:	push   edi
  40824f:	mov    edi,0x51bd6f92
  408254:	out    dx,al
  408255:	ror    DWORD PTR [edx+0x0],cl
  408258:	mov    eax,0xa090ade5
  40825d:	ds lea edi,es:[esi+0x78e906e2]
  408265:	mov    ch,0x75
  408267:	xor    esi,DWORD PTR [eax]
  408269:	dec    ebp
  40826a:	mov    ds:0x8a2c2347,eax
  40826f:	hlt    
  408270:	mov    cs,ebp
  408272:	hlt    
  408273:	add    al,0x83
  408275:	pop    edi
  408276:	jmp    0x582d1b1e
  40827b:	sub    BYTE PTR [esi],dh
  40827d:	jmp    0x408217
  40827f:	pop    eax
  408280:	mov    esp,0xfec8a2c8
  408285:	arpl   WORD PTR [eax+0x1f],bx
  408288:	dec    esi
  408289:	or     edx,DWORD PTR [ecx]
  40828b:	in     al,0x73
  40828d:	fiadd  DWORD PTR [edi]
  40828f:	jns    0x408232
  408291:	arpl   cx,si
  408293:	mov    al,0x66
  408295:	xor    al,0xad
  408297:	pusha  
  408298:	ja     0x408317
  40829a:	jb     0x4082a3
  40829c:	and    eax,DWORD PTR [ebx-0x6a]
  40829f:	fld    QWORD PTR [ecx+0x16]
  4082a2:	adc    eax,ecx
  4082a4:	push   edi
  4082a5:	jae    0x408299
  4082a7:	push   esp
  4082a8:	ror    BYTE PTR [edx],1
  4082aa:	or     eax,0x7772202d
  4082af:	popf   
  4082b0:	xchg   esp,eax
  4082b1:	call   0x95d455d9
  4082b6:	addr16 pop ebp
  4082b8:	pop    es
  4082b9:	aas    
  4082ba:	fcom   QWORD PTR [esi+0x2ac529e3]
  4082c0:	pop    edi
  4082c1:	fstp   st(3)
  4082c3:	ja     0x408291
  4082c5:	sub    DWORD PTR [ecx],edx
  4082c7:	xchg   ebx,eax
  4082c8:	aaa    
  4082c9:	or     ah,BYTE PTR [ebx+ecx*8-0x38f4f739]
  4082d0:	adc    al,0xaa
  4082d2:	pop    edi
  4082d3:	jle    0x4082d4
  4082d5:	cmc    
  4082d6:	inc    ebx
  4082d7:	and    al,0x40
  4082d9:	test   BYTE PTR [ecx+0x7d],bh
  4082dc:	push   es
  4082dd:	mov    esp,0xf7a6edf
  4082e2:	out    0xa5,eax
  4082e4:	in     eax,0x88
  4082e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e7:	(bad)  
  4082e9:	inc    ebp
  4082ea:	mov    dh,0x9
  4082ec:	pop    ebp
  4082ed:	pop    eax
  4082ee:	cdq    
  4082ef:	test   al,0xe4
  4082f1:	jl     0x408331
  4082f3:	sti    
  4082f4:	inc    ebx
  4082f5:	leave  
  4082f6:	stos   BYTE PTR es:[edi],al
  4082f7:	retf   0x52c6
  4082fa:	(bad)  
  4082fb:	sbb    DWORD PTR [esi+0x5136bf4a],esp
  408301:	in     al,0x13
  408303:	fistp  QWORD PTR [eax+esi*8+0x4a]
  408307:	xor    DWORD PTR [edx],0x136d6193
  40830d:	fbstp  TBYTE PTR [eax+0x12]
  408310:	out    dx,eax
  408311:	popa   
  408312:	push   ds
  408313:	xchg   esi,eax
  408314:	scas   eax,DWORD PTR es:[edi]
  408315:	retf   
  408316:	pushf  
  408317:	addr16 jmp 0x6b59:0xd7b33c6c
  40831f:	adc    al,0x65
  408321:	fdivr  DWORD PTR [esi+0x74]
  408324:	cmp    al,0xd2
  408326:	hlt    
  408327:	xor    esp,DWORD PTR [esi]
  408329:	push   ebp
  40832a:	mov    BYTE PTR [eax+0x62],ch
  40832d:	mov    ecx,0xb94ce8d9
  408332:	stos   DWORD PTR es:[edi],eax
  408333:	xor    ebp,DWORD PTR [edi]
  408335:	sub    al,0x58
  408337:	and    edi,DWORD PTR [ebp-0x1e]
  40833a:	xchg   BYTE PTR [edi+0x64],dl
  40833d:	cld    
  40833e:	xchg   ebx,eax
  40833f:	imul   eax,DWORD PTR [ebx],0xf91f6285
  408345:	or     al,0x39
  408347:	or     eax,0xca960d15
  40834c:	je     0x4082de
  40834e:	das    
  40834f:	pusha  
  408350:	mov    bl,0xb6
  408352:	xor    dl,ch
  408354:	mov    dl,0xa4
  408356:	outs   dx,DWORD PTR ds:[esi]
  408357:	push   0x2e94935d
  40835c:	test   BYTE PTR [eax],0x1f
  40835f:	aaa    
  408360:	aas    
  408361:	not    DWORD PTR [ebx+0x1aef16db]
  408367:	test   al,0x8e
  408369:	sub    BYTE PTR [ecx-0x22f3d301],ah
  40836f:	cmp    dh,dl
  408371:	add    ch,bh
  408373:	(bad)  
  408374:	dec    ecx
  408375:	mov    bh,0x3b
  408377:	sub    BYTE PTR [edx+0x54b7bc60],0x9e
  40837e:	aam    0x31
  408380:	inc    esi
  408381:	inc    esi
  408382:	push   esi
  408383:	mov    al,ds:0x3df21c73
  408388:	imul   edx,DWORD PTR [ecx+edx*4-0x1e76435c],0x3ddc0f66
  408393:	out    0xb1,eax
  408395:	in     eax,dx
  408396:	adc    al,0x20
  408398:	jno    0x408405
  40839a:	sahf   
  40839b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40839c:	or     DWORD PTR [eax+ebx*4],ebp
  40839f:	icebp  
  4083a0:	outs   dx,DWORD PTR ds:[esi]
  4083a1:	inc    ebp
  4083a2:	adc    BYTE PTR [ecx],ah
  4083a4:	lods   eax,DWORD PTR ds:[esi]
  4083a5:	push   0xffffffcf
  4083a7:	scas   al,BYTE PTR es:[edi]
  4083a8:	fwait
  4083a9:	sub    DWORD PTR cs:[ebp-0x67],edi
  4083ad:	scas   eax,DWORD PTR es:[edi]
  4083ae:	add    DWORD PTR gs:[edx-0x2120dd60],ecx
  4083b5:	xchg   BYTE PTR [eax-0xb4e5d6d],al
  4083bb:	in     al,dx
  4083bc:	xor    eax,0xfeb0df7c
  4083c1:	mov    DWORD PTR [ebx+edi*1-0x6d],edi
  4083c5:	jg     0x4083a7
  4083c7:	add    DWORD PTR [esi+0x63074aaf],ebp
  4083cd:	mov    bh,0x84
  4083cf:	int3   
  4083d0:	sets   BYTE PTR [esi]
  4083d3:	cmp    edx,DWORD PTR [eax]
  4083d5:	jns    0x4083ba
  4083d7:	test   al,0x1f
  4083d9:	pop    ecx
  4083da:	inc    esp
  4083db:	nop
  4083dc:	sub    DWORD PTR [esi+0x2dc3420a],ecx
  4083e2:	addr16 es out dx,al
  4083e5:	int3   
  4083e6:	dec    esp
  4083e7:	in     al,dx
  4083e8:	xor    al,0xae
  4083ea:	pop    ebx
  4083eb:	shl    DWORD PTR [esi],1
  4083ed:	mov    DWORD PTR [esi],0xee3fa1f8
  4083f3:	cmc    
  4083f4:	sub    esi,ebx
  4083f6:	jp     0x408388
  4083f8:	out    0x62,eax
  4083fa:	xor    edi,DWORD PTR [edi+0x45ee7840]
  408400:	sub    eax,0xa98c2370
  408405:	sbb    ebp,ebp
  408407:	imul   ebx,ebp,0x59
  40840a:	in     al,dx
  40840b:	ins    BYTE PTR es:[edi],dx
  40840c:	out    dx,al
  40840d:	or     edi,DWORD PTR [ecx-0x5c500509]
  408413:	jmp    0x408483
  408415:	repnz pop edi
  408417:	mov    dh,0xe4
  408419:	repnz xor eax,0xe78d9bed
  40841f:	(bad)  
  408420:	shr    DWORD PTR [ebx],cl
  408422:	cmp    eax,0xd9881227
  408427:	(bad)  
  408428:	loop   0x4083b9
  40842a:	dec    eax
  40842b:	pcmpeqw mm4,QWORD PTR [edi*2+0xaab934c]
  408433:	mov    ebp,0x78b59b3f
  408438:	sbb    bl,BYTE PTR [eax+0x3a]
  40843b:	cs aam 0xce
  40843e:	inc    ebp
  40843f:	xor    DWORD PTR [edi-0x1c],0x46
  408443:	rcr    DWORD PTR [edi],0xbe
  408446:	push   edi
  408447:	in     eax,dx
  408448:	mov    edx,0xcd7d445e
  40844d:	push   0xa9363034
  408452:	mov    ebp,0x2fda3223
  408457:	mov    al,ds:0x200b1700
  40845c:	dec    esi
  40845d:	inc    edx
  40845e:	and    al,0xe5
  408460:	ds loope 0x4084ae
  408463:	dec    esp
  408464:	aas    
  408465:	jno    0x4084b1
  408467:	jl     0x4083f1
  408469:	popa   
  40846a:	and    eax,edx
  40846c:	ret    
  40846d:	jae    0x408483
  40846f:	mov    dl,0xf2
  408471:	mov    al,ds:0x733f8676
  408476:	xchg   esp,eax
  408477:	add    cl,BYTE PTR [ecx-0x602b9772]
  40847d:	pop    ecx
  40847e:	xchg   esp,eax
  40847f:	inc    edx
  408480:	mov    al,0xb4
  408482:	repnz dec eax
  408484:	stc    
  408485:	jae    0x40844b
  408487:	in     al,dx
  408488:	xchg   edi,eax
  408489:	pop    fs
  40848b:	push   ebp
  40848c:	dec    esi
  40848d:	scas   eax,DWORD PTR es:[edi]
  40848e:	mov    ss,WORD PTR [ebx+0x41]
  408491:	outs   dx,BYTE PTR ds:[esi]
  408492:	and    cl,BYTE PTR [ebp-0x5bd7d9c9]
  408498:	mov    ebp,0x93ec1920
  40849d:	lods   eax,DWORD PTR ds:[esi]
  40849e:	jae    0x408451
  4084a0:	and    BYTE PTR [ebp+0x47a3a21b],dl
  4084a6:	inc    edx
  4084a7:	adc    DWORD PTR ds:0x74e145bc,eax
  4084ad:	inc    ecx
  4084ae:	out    dx,al
  4084af:	jge    0x4084f2
  4084b1:	mov    esp,0x5e0df931
  4084b6:	fiadd  DWORD PTR [ecx+ecx*8-0x304e49af]
  4084bd:	pop    edi
  4084be:	in     al,0x21
  4084c0:	sub    eax,0xc82482d9
  4084c5:	(bad)  
  4084c6:	(bad)  
  4084c7:	adc    eax,0x6c5411e8
  4084cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084cd:	fisub  WORD PTR ds:0xc541fa14
  4084d3:	jecxz  0x408531
  4084d5:	add    al,cl
  4084d7:	out    0xdc,al
  4084d9:	mov    ebx,0xd02d2ca6
  4084de:	imul   edx,DWORD PTR [ebx+eiz*4+0x1d957a9e],0x9ec18544
  4084e9:	pop    esi
  4084ea:	push   cs
  4084eb:	mov    ebx,fs
  4084ed:	ins    DWORD PTR es:[edi],dx
  4084ee:	xchg   esi,eax
  4084ef:	mov    ch,0xc0
  4084f1:	ins    BYTE PTR es:[edi],dx
  4084f2:	mov    edx,gs
  4084f4:	pop    ebp
  4084f5:	xor    BYTE PTR [edi-0x6b],al
  4084f8:	cs dec ebp
  4084fa:	sbb    ch,dl
  4084fc:	jae    0x40849e
  4084fe:	ins    DWORD PTR es:[edi],dx
  4084ff:	popa   
  408500:	outs   dx,DWORD PTR ds:[esi]
  408501:	shr    dl,cl
  408503:	cmp    al,0x63
  408505:	cmp    BYTE PTR [edx],ch
  408507:	gs out dx,al
  408509:	mov    ch,0x19
  40850b:	rcl    DWORD PTR [ebp+esi*8-0x2b0db7ac],cl
  408512:	xchg   edx,eax
  408513:	jecxz  0x4084e8
  408515:	loop   0x408578
  408517:	rol    dh,cl
  408519:	enter  0x6b69,0xc3
  40851d:	(bad)  
  40851e:	stos   DWORD PTR es:[edi],eax
  40851f:	out    dx,al
  408520:	lahf   
  408521:	inc    edi
  408522:	retf   
  408523:	repnz sub eax,0xd0d51366
  408529:	add    bl,BYTE PTR [ebx-0x74db2541]
  40852f:	sbb    al,0xb4
  408531:	jge    0x408522
  408533:	loop   0x408523
  408535:	gs leave 
  408537:	fidiv  DWORD PTR [ebx-0x200412ed]
  40853d:	cmc    
  40853e:	pop    esi
  40853f:	dec    ebx
  408540:	(bad)  
  408541:	test   al,0x98
  408543:	adc    BYTE PTR [edx+0x1b],dh
  408546:	pop    edi
  408547:	cmp    dh,BYTE PTR [edi+0x2c]
  40854a:	adc    DWORD PTR [esi-0x72],0xffffffa7
  40854e:	aam    0x8c
  408550:	xor    al,0x29
  408552:	imul   ebp,DWORD PTR [edi-0x4e],0xec7c0aa8
  408559:	scas   al,BYTE PTR es:[edi]
  40855a:	int    0xe8
  40855c:	ret    
  40855d:	jne    0x408576
  40855f:	pop    ds
  408560:	clc    
  408561:	(bad)  
  408563:	ins    DWORD PTR es:[edi],dx
  408564:	ins    BYTE PTR es:[edi],dx
  408565:	cdq    
  408566:	xor    DWORD PTR [ebx],ebx
  408568:	(bad)  [eax+0x2f]
  40856b:	xor    edi,esp
  40856d:	dec    esi
  40856e:	ins    BYTE PTR es:[edi],dx
  40856f:	pop    ecx
  408570:	ins    DWORD PTR es:[edi],dx
  408571:	test   al,0x10
  408573:	mov    cl,BYTE PTR [edi+ecx*2]
  408576:	ret    
  408577:	and    al,0xd2
  408579:	icebp  
  40857a:	aad    0xf3
  40857c:	ins    DWORD PTR es:[edi],dx
  40857d:	scas   al,BYTE PTR es:[edi]
  40857e:	push   esp
  40857f:	(bad)  
  408580:	push   ebx
  408581:	xchg   edi,eax
  408582:	aad    0xd4
  408584:	add    al,0xea
  408586:	sub    BYTE PTR [edi+ebp*4],bh
  408589:	imul   DWORD PTR [esi+0x4d]
  40858c:	xor    BYTE PTR [eax+0x58],0xb0
  408590:	rcr    BYTE PTR [esi-0x2f9901c2],1
  408596:	jmp    0x4085a4
  408598:	inc    eax
  408599:	xchg   DWORD PTR [eax-0x51d6860b],edx
  40859f:	loopne 0x4085b1
  4085a1:	or     eax,DWORD PTR [esi+edx*8+0xfa6cb65]
  4085a8:	xchg   ebp,eax
  4085a9:	jne    0x4085d7
  4085ab:	(bad)  
  4085ac:	ins    BYTE PTR es:[edi],dx
  4085ad:	das    
  4085ae:	adc    ah,ah
  4085b0:	inc    ebp
  4085b1:	sbb    al,0x4e
  4085b3:	xchg   edx,eax
  4085b4:	dec    ebp
  4085b5:	jg     0x40858d
  4085b7:	mov    BYTE PTR [edx],bl
  4085b9:	jecxz  0x408569
  4085bb:	test   al,0x7
  4085bd:	sub    eax,DWORD PTR [ebx+0x21]
  4085c0:	mov    bl,BYTE PTR [edx-0x461e548a]
  4085c6:	repz mov ebp,0xd2900e03
  4085cc:	stos   DWORD PTR es:[edi],eax
  4085cd:	inc    eax
  4085ce:	add    BYTE PTR [ebx-0x8],ch
  4085d1:	mov    edi,0x3336b7b4
  4085d6:	shl    BYTE PTR [edi-0x69],1
  4085d9:	mov    cl,0x47
  4085db:	sub    cl,ah
  4085dd:	pop    ds
  4085de:	push   ss
  4085df:	jg     0x40860b
  4085e1:	jbe    0x40862f
  4085e3:	scas   al,BYTE PTR es:[edi]
  4085e4:	xor    esi,DWORD PTR [edx-0x18a8ff80]
  4085ea:	inc    ebx
  4085eb:	or     eax,0x8fbf81a2
  4085f0:	test   BYTE PTR [ebx+0x6a4c0214],cl
  4085f6:	popa   
  4085f7:	mov    BYTE PTR [ecx-0x70],dl
  4085fa:	lods   al,BYTE PTR ds:[esi]
  4085fb:	pop    ss
  4085fc:	ins    DWORD PTR es:[edi],dx
  4085fd:	leave  
  4085fe:	mov    ?,WORD PTR [esi+0x15]
  408601:	inc    ecx
  408602:	xlat   BYTE PTR ds:[ebx]
  408603:	gs scas al,BYTE PTR es:[edi]
  408605:	fist   WORD PTR [ebx+0x28]
  408608:	iret   
  408609:	loope  0x40867e
  40860b:	pop    edi
  40860c:	mov    edi,0x3a5ffdbb
  408611:	add    bl,BYTE PTR [ebx+0x7bc9f367]
  408617:	pop    ds
  408618:	pop    ecx
  408619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40861a:	pop    es
  40861b:	data16 mov BYTE PTR [edi+esi*2-0x5b3709bc],0xb7
  408624:	mov    ebx,edi
  408626:	mov    WORD PTR [edx-0x1dd4b682],ss
  40862c:	aas    
  40862d:	pushf  
  40862e:	inc    edi
  40862f:	add    al,0x50
  408631:	sar    DWORD PTR [ebp-0x39b34824],cl
  408637:	outs   dx,BYTE PTR ds:[esi]
  408638:	and    BYTE PTR [esi-0x255095df],0x44
  40863f:	mov    esi,edx
  408641:	retf   0xa83f
  408644:	add    ecx,ecx
  408646:	mov    al,ds:0xd736eaa0
  40864b:	mov    ebx,0x944c8b28
  408650:	mov    ebp,fs
  408652:	or     ecx,ebp
  408654:	xchg   ebx,eax
  408655:	mov    edx,0x9ab76b7f
  40865a:	push   ebx
  40865b:	xor    ebp,ecx
  40865d:	xor    al,0x48
  40865f:	and    ecx,ecx
  408661:	ror    al,0x15
  408664:	and    dh,BYTE PTR ds:0x65ca0b39
  40866a:	push   esp
  40866b:	pop    esi
  40866c:	push   ebx
  40866d:	daa    
  40866e:	push   ds
  40866f:	jg     0x4086e6
  408671:	mov    bl,0x59
  408673:	mov    BYTE PTR [esi+eax*8],ch
  408676:	mov    es,WORD PTR [edi]
  408678:	add    DWORD PTR [ebx+0xa],ebp
  40867b:	std    
  40867c:	stc    
  40867d:	popa   
  40867e:	push   eax
  40867f:	mov    esp,0x462f476f
  408684:	shr    BYTE PTR [ebx],1
  408686:	mov    eax,ds:0x1139d75b
  40868b:	mov    BYTE PTR [ecx+eax*8+0x44],dh
  40868f:	pop    ecx
  408690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408691:	xor    ebp,DWORD PTR [ebx]
  408693:	stos   DWORD PTR es:[edi],eax
  408694:	dec    ebx
  408695:	leave  
  408696:	std    
  408697:	jo     0x4086c5
  408699:	and    dh,BYTE PTR [ebx]
  40869b:	push   esi
  40869c:	push   eax
  40869d:	js     0x40869e
  40869f:	push   es
  4086a0:	ret    
  4086a1:	xlat   BYTE PTR ds:[ebx]
  4086a2:	add    ah,bh
  4086a4:	mov    esp,0x5341f00b
  4086a9:	cld    
  4086aa:	clc    
  4086ab:	push   esp
  4086ac:	int    0xe4
  4086ae:	pop    ebx
  4086af:	(bad)  
  4086b0:	sar    DWORD PTR ds:0x8dbcbb52,1
  4086b6:	inc    edx
  4086b7:	or     cl,bh
  4086b9:	dec    ecx
  4086ba:	test   cl,dl
  4086bc:	adc    cl,BYTE PTR [esi]
  4086be:	pop    edx
  4086bf:	mov    esp,ds
  4086c1:	adc    al,BYTE PTR [eax-0x3a]
  4086c4:	and    esi,esp
  4086c6:	js     0x408734
  4086c8:	jp     0x408740
  4086ca:	push   eax
  4086cb:	push   0xffffffe7
  4086cd:	pop    ss
  4086ce:	push   edx
  4086cf:	push   eax
  4086d0:	push   0x3fa188e2
  4086d5:	jae    0x40865d
  4086d7:	bound  ecx,QWORD PTR [eax-0x2a9a03ba]
  4086dd:	add    al,0x99
  4086df:	cmpps  xmm4,XMMWORD PTR [ecx],0xeb
  4086e3:	out    dx,al
  4086e4:	xchg   edx,eax
  4086e5:	ss stos BYTE PTR es:[edi],al
  4086e7:	sti    
  4086e8:	hlt    
  4086e9:	in     al,dx
  4086ea:	fiadd  WORD PTR [ebx-0x28294e84]
  4086f0:	popf   
  4086f1:	and    ecx,DWORD PTR [eax]
  4086f3:	fnstenv [esi]
  4086f5:	fsubr  QWORD PTR [esi]
  4086f7:	and    cl,BYTE PTR [eax]
  4086f9:	xlat   BYTE PTR ds:[ebx]
  4086fa:	stos   BYTE PTR es:[edi],al
  4086fb:	push   esi
  4086fc:	in     al,0x73
  4086fe:	addr16 inc esi
  408700:	xchg   esp,eax
  408701:	retf   0xc054
  408704:	scas   eax,DWORD PTR es:[edi]
  408705:	jb     0x40868a
  408707:	ss mov dh,0xea
  40870a:	xchg   ecx,eax
  40870b:	jne    0x408754
  40870d:	jne    0x40876e
  40870f:	out    dx,eax
  408710:	mov    al,ds:0x10bd0691
  408715:	push   esp
  408716:	enter  0xd049,0x58
  40871a:	and    BYTE PTR [ebx-0x7f],ch
  40871d:	je     0x40878d
  40871f:	dec    esi
  408720:	jle    0x408765
  408722:	hlt    
  408723:	les    ebp,FWORD PTR [ecx-0x7b]
  408726:	jge    0x408737
  408728:	cmp    dh,BYTE PTR ds:0x7ccfb6a7
  40872e:	stos   DWORD PTR es:[edi],eax
  40872f:	inc    esp
  408730:	popa   
  408731:	mov    gs,WORD PTR [edx+0x11b4d7c4]
  408737:	ins    DWORD PTR es:[edi],dx
  408738:	or     edx,DWORD PTR [eax-0x55]
  40873b:	adc    BYTE PTR [edx],bl
  40873d:	push   0x67f7de62
  408742:	lahf   
  408743:	xchg   edi,ecx
  408745:	test   al,0x7
  408747:	or     ebp,edx
  408749:	scas   eax,DWORD PTR es:[edi]
  40874a:	dec    ebx
  40874b:	mov    ch,BYTE PTR [esi+0x1e]
  40874e:	add    al,BYTE PTR [esi+0x4c]
  408751:	pop    esi
  408752:	push   ds
  408753:	pop    es
  408754:	cmp    al,0xac
  408756:	test   dl,dh
  408758:	jnp    0x408741
  40875a:	lods   eax,DWORD PTR ds:[esi]
  40875b:	mov    ch,0x73
  40875d:	jb     0x4087d9
  40875f:	dec    edi
  408760:	loop   0x408711
  408762:	push   eax
  408763:	push   ss
  408764:	adc    DWORD PTR [esi],ebx
  408766:	call   DWORD PTR [esp+eax*1-0x5f]
  40876a:	call   0xed02:0x78e322ca
  408771:	nop
  408772:	add    DWORD PTR [esi+0x552d2b9e],ebp
  408778:	outs   dx,BYTE PTR ds:[esi]
  408779:	lods   al,BYTE PTR ds:[esi]
  40877a:	mov    ah,BYTE PTR [eax+0x76]
  40877d:	mov    DWORD PTR [eax+0x1f],ebx
  408780:	repz mov eax,ds:0x6f2b79a
  408786:	mov    BYTE PTR [ebp-0xa31a9f0],bh
  40878c:	jg     0x4087d0
  40878e:	iret   
  40878f:	inc    eax
  408790:	inc    ecx
  408791:	in     eax,0xe8
  408793:	fstp   TBYTE PTR [eax+ebx*4+0x4f]
  408797:	ins    DWORD PTR es:[edi],dx
  408798:	or     ebp,esi
  40879a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40879b:	and    BYTE PTR [edi+esi*8-0x4c],0xe7
  4087a0:	mov    al,ds:0x30ece43b
  4087a5:	ins    DWORD PTR es:[edi],dx
  4087a6:	in     eax,dx
  4087a7:	sbb    DWORD PTR [edx],eax
  4087a9:	in     al,dx
  4087aa:	ror    BYTE PTR [edx],0x74
  4087ad:	fnstenv [ebx+eax*1-0x8eb6463]
  4087b4:	test   ecx,esi
  4087b6:	daa    
  4087b7:	adc    eax,0x3c1858d1
  4087bc:	mov    WORD PTR [eax],cs
  4087be:	adc    BYTE PTR [ecx],ch
  4087c0:	pop    ebx
  4087c1:	jmp    0x2ba8:0xa000d4e2
  4087c8:	loope  0x4087cd
  4087ca:	xor    al,0x1e
  4087cc:	fwait
  4087cd:	push   esi
  4087ce:	push   edx
  4087cf:	push   cs
  4087d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087d1:	dec    ecx
  4087d2:	adc    bl,BYTE PTR [esi]
  4087d4:	je     0x4087e9
  4087d6:	outs   dx,BYTE PTR ds:[esi]
  4087d7:	outs   dx,DWORD PTR ds:[esi]
  4087d8:	push   ss
  4087d9:	lods   al,BYTE PTR ds:[esi]
  4087da:	scas   al,BYTE PTR es:[edi]
  4087db:	xor    BYTE PTR [esi],cl
  4087dd:	xchg   esp,eax
  4087de:	fidivr DWORD PTR [ebx+0x717032ee]
  4087e4:	sbb    bh,BYTE PTR [esi]
  4087e6:	mov    edx,0xe318c8e8
  4087eb:	xchg   ecx,eax
  4087ec:	push   es
  4087ed:	pop    es
  4087ee:	fwait
  4087ef:	cwde   
  4087f0:	mov    ch,0xeb
  4087f2:	hlt    
  4087f3:	mov    ebp,0x3468e157
  4087f8:	arpl   WORD PTR [eax-0x1d90bce5],cx
  4087fe:	and    DWORD PTR [ebx+0xfc6818],ebx
  408804:	nop
  408805:	mov    dl,0xad
  408807:	push   ecx
  408808:	and    DWORD PTR [edx],esi
  40880a:	or     BYTE PTR [edx-0x356558f2],dl
  408810:	dec    ebx
  408811:	add    eax,0x7195309
  408816:	sub    al,0xae
  408818:	retf   0xb71e
  40881b:	and    al,0x5
  40881d:	das    
  40881e:	int    0x3a
  408820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408821:	xor    dl,dh
  408823:	(bad)  [edx-0x6b]
  408826:	repz adc cl,ah
  408829:	pop    ebx
  40882a:	aad    0x1b
  40882c:	lods   al,BYTE PTR ds:[esi]
  40882d:	popf   
  40882e:	cmp    eax,0x4c00efde
  408833:	inc    esp
  408834:	dec    esi
  408835:	dec    esi
  408836:	mov    esp,0xf59d44a2
  40883b:	and    dh,al
  40883d:	inc    ecx
  40883e:	pop    ebp
  40883f:	(bad)  
  408840:	push   ecx
  408841:	xchg   ebp,eax
  408842:	cli    
  408843:	cmp    edi,DWORD PTR [ebx+0x55]
  408846:	js     0x4087da
  408848:	push   ebp
  408849:	test   al,0xd9
  40884b:	pop    ds
  40884c:	sub    BYTE PTR [esi],ch
  40884e:	mov    dh,0x5a
  408850:	dec    edi
  408851:	add    al,0x9c
  408853:	mov    ah,0xe1
  408855:	dec    edx
  408856:	outs   dx,BYTE PTR ds:[esi]
  408857:	call   0xf284160a
  40885c:	sbb    eax,0xe134064
  408861:	jl     0x408800
  408863:	pop    ds
  408864:	in     al,dx
  408865:	cmp    al,0x60
  408867:	push   eax
  408868:	mov    DWORD PTR [edi+0x35],0x175eaa3b
  40886f:	mov    WORD PTR [esi],cs
  408871:	jne    0x408829
  408873:	inc    cx
  408875:	push   edx
  408876:	ret    
  408877:	psrad  mm7,QWORD PTR [edi]
  40887a:	or     al,0x14
  40887c:	sbb    eax,0x3426afbb
  408881:	ja     0x40889e
  408883:	jno    0x40886a
  408885:	xchg   edx,eax
  408886:	mov    DWORD PTR [ecx+0x45],ebx
  408889:	jmp    0x40881e
  40888b:	out    0x74,eax
  40888d:	xchg   esp,eax
  40888e:	ins    DWORD PTR es:[edi],dx
  40888f:	les    edi,FWORD PTR [ebp+0x5c]
  408892:	add    BYTE PTR [eax+esi*2-0x14efccb4],0xa
  40889a:	ss aas 
  40889c:	cmp    BYTE PTR [edi-0x49],al
  40889f:	add    eax,0x352e4362
  4088a4:	mov    al,ds:0xb6fb6add
  4088a9:	adc    bl,dl
  4088ab:	gs mov esp,0xaff25e5c
  4088b1:	test   BYTE PTR [ecx-0x36],ah
  4088b4:	pop    ebp
  4088b5:	fucom  st(6)
  4088b7:	xchg   BYTE PTR [edi-0xaad9df9],dh
  4088bd:	jbe    0x4088e1
  4088bf:	jg     0x40890a
  4088c1:	mov    cl,0x5
  4088c3:	mov    esi,0xd7bf3cb4
  4088c8:	xchg   ebp,eax
  4088c9:	mov    dh,bl
  4088cb:	xchg   BYTE PTR [eax-0xf],bh
  4088ce:	dec    ebp
  4088cf:	out    dx,al
  4088d0:	(bad)  
  4088d1:	push   0xdff3c02a
  4088d6:	jle    0x408929
  4088d8:	clc    
  4088d9:	xchg   ecx,eax
  4088da:	out    dx,eax
  4088db:	leave  
  4088dc:	cvtsi2ss xmm3,DWORD PTR es:[edx+ebx*4-0x9]
  4088e3:	pop    ebx
  4088e4:	aam    0x34
  4088e6:	lahf   
  4088e7:	mov    eax,ds:0xc7458108
  4088ec:	cmp    eax,0xdbf8da6c
  4088f1:	mov    esi,0x14bd3fbc
  4088f6:	or     ah,ah
  4088f8:	addr16 mov dl,0xbf
  4088fb:	pushf  
  4088fc:	rcl    DWORD PTR [edx-0x1299d7e2],cl
  408902:	add    al,0x97
  408904:	jns    0x408922
  408906:	adc    DWORD PTR [edx-0x3b288667],ecx
  40890c:	cmp    al,0x2d
  40890e:	cld    
  40890f:	xchg   ebp,eax
  408910:	jo     0x40893e
  408912:	cmp    dh,BYTE PTR [eax+0x261aa171]
  408918:	idiv   BYTE PTR [ecx+0x3b]
  40891b:	mov    WORD PTR [edx+0x78ae01b9],?
  408921:	es sahf 
  408923:	es pop ecx
  408925:	arpl   WORD PTR [ecx],di
  408927:	xchg   ebx,eax
  408928:	retf   
  408929:	out    dx,al
  40892a:	xor    dh,BYTE PTR [ecx]
  40892c:	cwde   
  40892d:	adc    edx,DWORD PTR [ebp+0x3161dd83]
  408933:	cmp    al,0xc9
  408935:	popf   
  408936:	mov    al,ds:0xae66d868
  40893b:	pop    edx
  40893c:	pop    edi
  40893d:	and    dh,BYTE PTR [esi+0x7b]
  408940:	pop    edi
  408941:	sub    ch,dh
  408943:	call   0xca89:0xe07c6e6f
  40894a:	xchg   ebp,eax
  40894b:	sbb    ecx,ebx
  40894d:	inc    edx
  40894e:	jno    0x408945
  408950:	icebp  
  408951:	mov    ds:0xc7b29db,eax
  408956:	or     BYTE PTR [edx+0x3c],0x2e
  40895a:	mov    ebx,0x79549bfc
  40895f:	(bad)  
  408960:	pinsrw mm3,WORD PTR [edx],0x8e
  408964:	es inc esp
  408966:	mov    ebx,0x709f5d8a
  40896b:	inc    ebx
  40896c:	xchg   edi,eax
  40896d:	js     0x40890b
  40896f:	lods   eax,DWORD PTR ds:[esi]
  408970:	repz sahf 
  408972:	xchg   ebp,eax
  408973:	dec    edx
  408974:	sahf   
  408975:	in     al,0x40
  408977:	in     al,dx
  408978:	pop    ds
  408979:	push   ebx
  40897a:	dec    edi
  40897b:	mov    ebx,0x51c126e7
  408980:	cmp    eax,0x31d89692
  408985:	cmp    eax,0xd03d75be
  40898a:	mov    edx,0x4cb2edf
  40898f:	out    0xe1,al
  408991:	and    BYTE PTR [ebx+0x56275288],ch
  408997:	jmp    0x99104309
  40899c:	mov    ebp,esp
  40899e:	pop    ds
  40899f:	push   esp
  4089a0:	mov    cl,0x51
  4089a2:	aam    0xcf
  4089a4:	and    cl,dh
  4089a6:	arpl   WORD PTR [ecx-0x1aa98991],ax
  4089ac:	cmp    DWORD PTR [eax+0x67c795b3],0xd471af5a
  4089b6:	pop    ebp
  4089b7:	mov    ds:0x6b32b38a,al
  4089bc:	jg     0x4089bd
  4089be:	mov    dh,BYTE PTR [ebp-0x17e906db]
  4089c4:	xchg   DWORD PTR [edi],esp
  4089c6:	scas   al,BYTE PTR es:[edi]
  4089c7:	retf   0xbefc
  4089ca:	adc    DWORD PTR [edx],0x62
  4089cd:	adc    BYTE PTR [edx+ebp*4],ch
  4089d0:	into   
  4089d1:	fdivr  DWORD PTR [eax+0x20]
  4089d4:	arpl   bp,cx
  4089d6:	sbb    eax,0x7daeaa45
  4089db:	mov    al,0xfc
  4089dd:	jno    0x4089e5
  4089df:	add    al,0x69
  4089e1:	int    0xe2
  4089e3:	icebp  
  4089e4:	icebp  
  4089e5:	fnsave [edi]
  4089e7:	iret   
  4089e8:	cmp    DWORD PTR [edi],edx
  4089ea:	mov    cl,0xbc
  4089ec:	dec    esp
  4089ed:	jecxz  0x408996
  4089ef:	shl    DWORD PTR [edx+eax*4-0x55cd6550],0xc4
  4089f7:	dec    ebx
  4089f8:	dec    eax
  4089f9:	mov    al,ds:0x6f99718
  4089fe:	loopne 0x4089e6
  408a00:	add    al,0xdf
  408a02:	call   DWORD PTR [edi]
  408a04:	in     al,0xd4
  408a06:	push   0x2e
  408a08:	pop    eax
  408a09:	push   ecx
  408a0a:	jo     0x4089cc
  408a0c:	push   ebx
  408a0d:	mov    bl,BYTE PTR gs:[eax]
  408a10:	call   0x6fa0:0x3cd3c451
  408a17:	repnz lods al,BYTE PTR ds:[esi]
  408a19:	ret    
  408a1a:	xor    al,0x2d
  408a1c:	jno    0x408a0a
  408a1e:	jge    0x4089a8
  408a20:	mov    bl,0x1e
  408a22:	mov    BYTE PTR [ebx-0x16373c48],bh
  408a28:	and    BYTE PTR [esi-0x51],ch
  408a2b:	push   ecx
  408a2c:	and    eax,0x7fc24619
  408a31:	mov    ecx,0x523cf28f
  408a36:	cmp    BYTE PTR [esi],bh
  408a38:	les    edi,FWORD PTR [eax-0x55d48dbc]
  408a3e:	out    0x60,eax
  408a40:	ret    
  408a41:	cld    
  408a42:	mov    dh,0xba
  408a44:	inc    ebx
  408a45:	iret   
  408a46:	gs mov ah,0x6b
  408a49:	mov    edx,0xb692faa4
  408a4e:	mov    al,fs:0xad91c76f
  408a54:	(bad)  
  408a55:	xlat   BYTE PTR ds:[ebx]
  408a56:	push   0x289db83f
  408a5b:	jle    0x408a38
  408a5d:	or     DWORD PTR [edi-0x43],edi
  408a60:	je     0x408ad7
  408a62:	mov    BYTE PTR [esi],al
  408a64:	mov    edx,0x8ac8ee23
  408a69:	sahf   
  408a6a:	addr16 aam 0x9c
  408a6d:	cs pop ss
  408a6f:	les    ecx,FWORD PTR [esi-0x7]
  408a72:	add    DWORD PTR [ebp+0x1e],esi
  408a75:	loope  0x408ab9
  408a77:	loopne 0x408ab7
  408a79:	mov    dl,ah
  408a7b:	jb     0x408af5
  408a7d:	or     DWORD PTR [ebp+0x5c],edx
  408a80:	pop    ebx
  408a81:	cmc    
  408a82:	or     ch,BYTE PTR [ebx]
  408a84:	dec    eax
  408a85:	leave  
  408a86:	ja     0x408aa7
  408a88:	dec    ebx
  408a89:	test   DWORD PTR [eax+0x2e],edi
  408a8c:	mov    esp,0x3945dc13
  408a91:	shl    eax,1
  408a93:	pop    ecx
  408a94:	mov    al,BYTE PTR [esi]
  408a96:	ins    BYTE PTR es:[edi],dx
  408a97:	ds and eax,0xe50bff30
  408a9d:	jmp    0x207f:0xa2108c59
  408aa4:	xor    BYTE PTR [ebx],bh
  408aa6:	mov    ebx,0x7a6ddbd8
  408aab:	out    0x48,eax
  408aad:	jns    0x408b17
  408aaf:	std    
  408ab0:	dec    ecx
  408ab1:	js     0x408aef
  408ab3:	mov    bl,0x9a
  408ab5:	jns    0x408a59
  408ab7:	loop   0x408b2a
  408ab9:	(bad)  
  408aba:	mov    ecx,DWORD PTR [eax]
  408abc:	and    esi,DWORD PTR [edi+0x1b]
  408abf:	fsub   DWORD PTR [esi-0x68d71504]
  408ac5:	cmp    al,0xe1
  408ac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ac8:	cmp    eax,0xb08afa20
  408acd:	icebp  
  408ace:	fimul  WORD PTR [esi]
  408ad0:	add    BYTE PTR [ecx+eiz*1-0x58],al
  408ad4:	test   DWORD PTR [ebp-0x38],edx
  408ad7:	bound  ebx,QWORD PTR [ecx-0x43b080de]
  408add:	mov    ch,0x7d
  408adf:	push   esi
  408ae0:	xlat   BYTE PTR ds:[ebx]
  408ae1:	fimul  WORD PTR [esp+eiz*4]
  408ae4:	ret    0x345b
  408ae7:	dec    eax
  408ae8:	jecxz  0x408a86
  408aea:	jns    0x408b45
  408aec:	dec    ebx
  408aed:	addr16 jg 0x408ad5
  408af0:	test   BYTE PTR [esi],al
  408af2:	lds    eax,FWORD PTR [edx+eax*4-0x63eaa1be]
  408af9:	stos   DWORD PTR es:[edi],eax
  408afa:	jbe    0x408ac8
  408afc:	cmp    DWORD PTR [ecx-0x7fcd1bf5],esi
  408b02:	xor    ebx,DWORD PTR [eax]
  408b04:	add    al,0x72
  408b06:	inc    eax
  408b07:	mov    cl,0x90
  408b09:	push   ebx
  408b0a:	neg    DWORD PTR [ebx+0x224803c6]
  408b10:	fiadd  DWORD PTR [eax]
  408b12:	pop    ds
  408b13:	sub    bl,BYTE PTR [ebx-0xec46e87]
  408b19:	or     eax,0xd1fb7c30
  408b1e:	cmp    cl,BYTE PTR [edx-0x6ec9a8a1]
  408b24:	test   eax,0x9220289d
  408b29:	and    BYTE PTR [edi+0x78],ah
  408b2c:	aad    0xae
  408b2e:	push   esi
  408b2f:	hlt    
  408b30:	fpatan 
  408b32:	mov    ebp,0x83fa2dc2
  408b37:	xor    BYTE PTR [ecx+0x4e],bh
  408b3a:	cld    
  408b3b:	mov    bh,0x29
  408b3d:	loope  0x408bb6
  408b3f:	mov    bh,0xa7
  408b41:	mov    ebp,0x8e9e2c0c
  408b46:	daa    
  408b47:	mov    ebx,0x2a94526c
  408b4c:	(bad)  
  408b4d:	(bad)  
  408b4f:	xchg   ebx,eax
  408b50:	ret    
  408b51:	loop   0x408b3f
  408b53:	xchg   esp,eax
  408b54:	outs   dx,BYTE PTR ds:[esi]
  408b55:	adc    al,BYTE PTR [eax+eax*1-0x52]
  408b59:	sub    ecx,DWORD PTR [esi]
  408b5b:	push   ebx
  408b5c:	push   ds
  408b5d:	inc    eax
  408b5e:	cs lahf 
  408b60:	hlt    
  408b61:	in     eax,0xb8
  408b63:	sub    eax,0x594de358
  408b68:	fwait
  408b69:	icebp  
  408b6a:	inc    esp
  408b6b:	pop    ecx
  408b6c:	iret   
  408b6d:	cmc    
  408b6e:	int    0x59
  408b70:	shl    DWORD PTR [edi],1
  408b72:	mov    cl,0x6b
  408b74:	pop    ebx
  408b75:	je     0x408b51
  408b77:	sub    esi,ebp
  408b79:	imul   eax,DWORD PTR [edx+ebp*1-0x3564ba15],0x2
  408b81:	push   ebx
  408b82:	lods   al,BYTE PTR ds:[esi]
  408b83:	sbb    eax,0x6d6ad038
  408b88:	mov    eax,0x968f5319
  408b8d:	push   ss
  408b8e:	scas   eax,DWORD PTR es:[edi]
  408b8f:	out    dx,eax
  408b90:	mul    DWORD PTR [ecx+0xb]
  408b93:	pop    ds
  408b94:	mov    al,0xdc
  408b96:	fwait
  408b97:	stos   BYTE PTR es:[edi],al
  408b98:	test   al,0xf4
  408b9a:	jae    0x408bde
  408b9c:	out    0x6f,eax
  408b9e:	or     DWORD PTR [esi+0x47],0x71a6a534
  408ba5:	push   cs
  408ba6:	sbb    ebx,DWORD PTR [eax*1+0x7d3aa3d5]
  408bad:	dec    eax
  408bae:	rcl    BYTE PTR [edi],1
  408bb0:	ret    0x2d8
  408bb3:	loop   0x408c28
  408bb5:	pushf  
  408bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bb7:	adc    cl,0x68
  408bba:	pop    ds
  408bbb:	pop    esi
  408bbc:	or     edi,esp
  408bbe:	mov    dl,0x19
  408bc0:	inc    esp
  408bc1:	test   al,0x55
  408bc3:	mov    ebx,0xbb694a9a
  408bc8:	ret    
  408bc9:	adc    al,0x0
  408bcb:	sub    BYTE PTR [edx],dh
  408bcd:	cmp    bl,BYTE PTR [edi]
  408bcf:	pop    eax
  408bd0:	scas   eax,DWORD PTR es:[edi]
  408bd1:	xlat   BYTE PTR ds:[ebx]
  408bd2:	imul   ebp,DWORD PTR [edx+0x54],0xa
  408bd6:	ret    
  408bd7:	mov    cl,0x16
  408bd9:	jl     0x408bc4
  408bdb:	jb     0x408b78
  408bdd:	lods   al,BYTE PTR ds:[esi]
  408bde:	add    BYTE PTR [edi+edi*1-0x1fc243e9],dh
  408be5:	pop    ecx
  408be6:	in     eax,0xc3
  408be8:	test   DWORD PTR [eax*4-0x455c79ae],ebx
  408bef:	lods   eax,DWORD PTR ds:[esi]
  408bf0:	mov    dh,0x15
  408bf2:	pop    edi
  408bf3:	xor    edx,esp
  408bf5:	xor    BYTE PTR [ecx-0x4e],cl
  408bf8:	dec    edx
  408bf9:	(bad)  
  408bfa:	outs   dx,BYTE PTR ds:[esi]
  408bfb:	ins    DWORD PTR es:[edi],dx
  408bfc:	sub    ecx,DWORD PTR [edx]
  408bfe:	mov    al,0xe8
  408c00:	add    esp,DWORD PTR [ebp+esi*1-0x76]
  408c04:	sub    al,0xfa
  408c06:	aad    0xd6
  408c08:	cwde   
  408c09:	xchg   edi,eax
  408c0a:	popa   
  408c0b:	mov    al,0x56
  408c0d:	test   BYTE PTR [ebx+0x69],cl
  408c10:	and    DWORD PTR [ebx+0x331e195c],ebp
  408c16:	sub    BYTE PTR gs:[ebx-0x23c58905],ch
  408c1d:	pushf  
  408c1e:	or     bl,BYTE PTR [esi+ebx*1-0x3c708d90]
  408c25:	mov    esi,0xedd0f51f
  408c2a:	ret    0x6681
  408c2d:	push   ds
  408c2e:	out    0x40,al
  408c30:	pop    ss
  408c31:	icebp  
  408c32:	arpl   WORD PTR [edi-0x39b46cc],di
  408c38:	ret    0x8088
  408c3b:	fidiv  DWORD PTR [edi+eiz*2-0x2967cf09]
  408c42:	icebp  
  408c43:	aaa    
  408c44:	jge    0x408bed
  408c46:	sub    ebx,DWORD PTR [ecx*8-0x58296794]
  408c4d:	imul   esi,esi,0x25
  408c50:	xchg   ebp,edx
  408c52:	ds mov dl,0x9b
  408c55:	test   eax,0x9c4f298a
  408c5a:	out    dx,eax
  408c5b:	pop    edi
  408c5c:	and    DWORD PTR [ecx],ecx
  408c5e:	inc    esp
  408c5f:	jg     0x408ca4
  408c61:	and    al,al
  408c63:	stos   BYTE PTR es:[edi],al
  408c64:	aam    0xed
  408c66:	push   es
  408c67:	ins    BYTE PTR es:[edi],dx
  408c68:	repz or dl,BYTE PTR [eax+0x5]
  408c6c:	ja     0x408c8a
  408c6e:	cli    
  408c6f:	inc    dh
  408c71:	push   cs
  408c72:	inc    esp
  408c73:	cmp    eax,0x374d8048
  408c78:	gs in  eax,0x87
  408c7b:	cmp    eax,0xce084602
  408c80:	out    dx,al
  408c81:	sub    BYTE PTR ds:[edx+eiz*1-0x9],ah
  408c86:	xor    eax,0xe8fb2292
  408c8b:	mov    eax,ds:0xc1d46919
  408c90:	and    al,0x7b
  408c92:	jbe    0x408c82
  408c94:	push   ecx
  408c95:	xor    BYTE PTR [ebx+0x3],dh
  408c98:	push   ds
  408c99:	enter  0xe4d4,0xfa
  408c9d:	sub    eax,0x8092887f
  408ca2:	and    BYTE PTR [edx-0x12cd4e5b],bh
  408ca8:	xor    DWORD PTR [ecx+esi*8],0xdf028353
  408caf:	dec    edi
  408cb0:	ror    BYTE PTR [ebx],0xbb
  408cb3:	push   0xffffffa1
  408cb5:	ds popw ss
  408cb8:	loope  0x408c97
  408cba:	(bad)  
  408cbb:	fnclex 
  408cbd:	in     eax,dx
  408cbe:	loopne 0x408c87
  408cc0:	and    BYTE PTR [ecx],dh
  408cc2:	mov    eax,ds:0xe7524175
  408cc7:	adc    BYTE PTR [ebx-0x8],dl
  408cca:	test   BYTE PTR [ebx],ah
  408ccc:	popf   
  408ccd:	sti    
  408cce:	clc    
  408ccf:	xor    BYTE PTR [edi-0x3b],bl
  408cd2:	scas   eax,DWORD PTR es:[edi]
  408cd3:	jns    0x408d09
  408cd5:	mov    edi,0xa317336a
  408cda:	call   0xdae6:0xaabb9903
  408ce1:	sbb    al,0xbf
  408ce3:	mov    dh,0x6
  408ce5:	mov    cl,0x3a
  408ce7:	jmp    0x408d29
  408ce9:	mov    ds:0x6a25db72,al
  408cee:	sub    bl,BYTE PTR [edi+0x5dd7ffea]
  408cf4:	cmovl  edx,DWORD PTR [ebp+0x78]
  408cf8:	sub    ebp,DWORD PTR [ecx+0xb]
  408cfb:	addr16 jns 0x408cbf
  408cfe:	mov    ds,WORD PTR [esp+0x49e7edda]
  408d05:	pop    edx
  408d06:	gs into 
  408d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d09:	pop    edi
  408d0a:	mov    ah,0x38
  408d0c:	mov    dh,BYTE PTR [edx+0x36]
  408d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d10:	jle    0x408cde
  408d12:	sub    esp,esi
  408d14:	hlt    
  408d15:	xor    eax,esp
  408d17:	cdq    
  408d18:	cmc    
  408d19:	dec    ebx
  408d1a:	xor    DWORD PTR [ebx-0x60],ebx
  408d1d:	mov    eax,ds:0xa3d47a6
  408d22:	je     0x408d89
  408d24:	mov    ch,0x8d
  408d26:	nop
  408d27:	and    al,0x11
  408d29:	jmp    0x9c70871e
  408d2e:	mov    eax,0xf5bfbf1e
  408d33:	adc    eax,0x916e7a55
  408d38:	xchg   esp,eax
  408d39:	and    al,0xfa
  408d3b:	clc    
  408d3c:	push   esp
  408d3d:	out    dx,al
  408d3e:	mov    esp,ecx
  408d40:	out    0xa8,al
  408d42:	in     al,0x83
  408d44:	sbb    BYTE PTR [ebp+0x201a4d4d],dh
  408d4a:	sub    DWORD PTR [ebx+0x17a4c632],ebp
  408d50:	cdq    
  408d51:	push   es
  408d52:	mov    eax,0x2b7d5ac0
  408d57:	into   
  408d58:	mov    esi,0xfd6e8f37
  408d5d:	add    BYTE PTR [ebp-0x6916c26b],al
  408d63:	cmp    edx,DWORD PTR [esp+ecx*4-0x2e]
  408d67:	ss (bad) 
  408d69:	sahf   
  408d6a:	jmp    0x9c50:0x93e48fe1
  408d71:	test   bl,al
  408d73:	pop    ecx
  408d74:	xchg   BYTE PTR [ebp-0x2],dh
  408d77:	mov    cl,0x96
  408d79:	pop    es
  408d7a:	gs je  0x408d0c
  408d7d:	sub    BYTE PTR [eax],ch
  408d7f:	push   edi
  408d80:	shl    DWORD PTR [edx+0x20],0x59
  408d84:	xchg   ecx,eax
  408d85:	jmp    0xf687259e
  408d8a:	mov    esp,0x62185cb1
  408d8f:	leave  
  408d90:	out    0x46,eax
  408d92:	jne    0x408d9f
  408d94:	mov    bl,0xf3
  408d96:	xchg   BYTE PTR [esi+0x61],bl
  408d99:	test   bl,dl
  408d9b:	cmp    al,0x6b
  408d9d:	push   ebp
  408d9e:	or     cl,BYTE PTR [edi+0x37]
  408da1:	push   esi
  408da2:	jne    0x408d77
  408da4:	jecxz  0x408dac
  408da6:	sub    BYTE PTR ds:0xf44a78ce,al
  408dac:	push   esp
  408dad:	mov    ebp,0x9e8e3892
  408db2:	(bad)
  408db5:	pop    edi
  408db6:	ror    DWORD PTR [esi],1
  408db8:	sub    al,0xe4
  408dba:	in     eax,dx
  408dbb:	push   0x1dbb40cb
  408dc0:	stos   DWORD PTR es:[edi],eax
  408dc1:	sar    DWORD PTR [ebx+esi*1+0x5e],1
  408dc5:	(bad)  
  408dc6:	(bad)  
  408dc7:	js     0x408d4c
  408dc9:	mov    esi,0xe9bd77ab
  408dce:	in     eax,0x37
  408dd0:	mov    BYTE PTR ds:0xf11ba903,0x57
  408dd7:	and    DWORD PTR [esp+ebx*4+0x3d68bd29],eax
  408dde:	into   
  408ddf:	mov    eax,0x7bb7b438
  408de4:	and    ecx,ebp
  408de6:	cmp    edx,esi
  408de8:	jnp    0x408e30
  408dea:	cmc    
  408deb:	imul   esp,DWORD PTR [esi+esi*1-0x22a42be6],0x7b7ba43a
  408df6:	add    bl,BYTE PTR [eax+0x70]
  408df9:	data16 or al,BYTE PTR [ecx]
  408dfc:	in     eax,0xc3
  408dfe:	(bad)  
  408dff:	clc    
  408e00:	lods   eax,DWORD PTR ds:[esi]
  408e01:	jo     0x408e20
  408e03:	fs adc eax,0xd82d44db
  408e09:	shl    DWORD PTR [edi],1
  408e0b:	pop    esp
  408e0c:	test   BYTE PTR [ecx],bl
  408e0e:	aam    0x85
  408e10:	mov    esp,ss
  408e12:	cdq    
  408e13:	mov    ch,0x83
  408e15:	or     DWORD PTR [ebx],ebx
  408e17:	cdq    
  408e18:	mov    al,ds:0x20e19ec6
  408e1d:	out    dx,al
  408e1e:	push   0xffffffdf
  408e20:	in     eax,dx
  408e21:	mov    cl,0xf5
  408e23:	not    BYTE PTR [ebx]
  408e25:	inc    edi
  408e26:	mov    dh,0xb4
  408e28:	dec    eax
  408e29:	push   edx
  408e2a:	hlt    
  408e2b:	xchg   ebx,eax
  408e2c:	(bad)  
  408e2d:	iret   
  408e2e:	sub    ecx,ecx
  408e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e31:	xchg   edx,eax
  408e32:	sub    al,0x67
  408e34:	aad    0xd1
  408e36:	mov    esi,0x1e7b76e9
  408e3b:	push   edi
  408e3c:	mov    ah,0x13
  408e3e:	pop    ebp
  408e3f:	xor    edx,edx
  408e41:	enter  0xe57a,0xc1
  408e45:	fidivr DWORD PTR [ebx+eax*1+0x16]
  408e49:	test   ch,0xcc
  408e4c:	cmc    
  408e4d:	imul   edx,DWORD PTR [ebp+0x6f3230ad],0x62643e4a
  408e57:	inc    ebp
  408e58:	fnstenv [ecx+0x714a847f]
  408e5e:	repnz in al,0x2d
  408e61:	sub    dh,BYTE PTR [ecx+0x2b8349d0]
  408e67:	ret    0x4d88
  408e6a:	push   ebp
  408e6b:	scas   eax,DWORD PTR es:[edi]
  408e6c:	pop    esi
  408e6d:	gs xchg esp,eax
  408e6f:	inc    edi
  408e70:	dec    edi
  408e71:	mov    al,ds:0xedf2be2
  408e76:	lea    edi,[eax]
  408e78:	dec    ecx
  408e79:	mov    dh,0x46
  408e7b:	nop
  408e7c:	loopne 0x408e34
  408e7e:	rcr    BYTE PTR [esi+0x7eb48330],cl
  408e84:	(bad)  
  408e85:	push   eax
  408e86:	daa    
  408e87:	add    eax,0xffffffec
  408e8a:	rol    DWORD PTR [ebx],1
  408e8c:	dec    ecx
  408e8d:	outs   dx,DWORD PTR ds:[esi]
  408e8e:	jmp    0x4229:0x3a5018c5
  408e95:	and    eax,eax
  408e97:	lds    ebx,FWORD PTR [ebx-0x235ba9cf]
  408e9d:	js     0x408f01
  408e9f:	(bad)  
  408ea0:	sub    BYTE PTR ds:0x403b2780,ch
  408ea6:	and    ch,BYTE PTR [edx]
  408ea8:	test   DWORD PTR [edx],esi
  408eaa:	sub    dh,BYTE PTR [ecx-0x5a0a729f]
  408eb0:	int    0x52
  408eb2:	pop    ebp
  408eb3:	and    ch,ch
  408eb5:	sub    BYTE PTR [ebx],dh
  408eb7:	mov    edx,0xda4355a5
  408ebc:	dec    ebx
  408ebd:	pop    edi
  408ebe:	inc    eax
  408ebf:	cmp    al,0x87
  408ec1:	loop   0x408f0b
  408ec3:	lea    ecx,ds:0xbad5a1f6
  408ec9:	imul   esp,esi,0x3cac41cb
  408ecf:	cld    
  408ed0:	in     al,dx
  408ed1:	xchg   ebp,eax
  408ed2:	mov    esi,0xdb49b26b
  408ed7:	(bad)  
  408ed8:	iret   
  408ed9:	jno    0x408e9d
  408edb:	sahf   
  408edc:	adc    ch,al
  408ede:	icebp  
  408edf:	call   0x1a7e:0x171c3042
  408ee6:	loopne 0x408f07
  408ee8:	(bad)  
  408ee9:	ret    
  408eea:	and    dl,BYTE PTR [ebx]
  408eec:	xor    esp,DWORD PTR [ecx-0x79]
  408eef:	or     esp,DWORD PTR [ecx-0x350b9a9e]
  408ef5:	dec    edx
  408ef6:	cli    
  408ef7:	cmp    dl,ch
  408ef9:	lds    esi,FWORD PTR [ebx-0xf]
  408efc:	pop    es
  408efd:	add    ebx,DWORD PTR [ebp+eiz*2-0x7e651caf]
  408f04:	popa   
  408f05:	mov    eax,0xa407f144
  408f0b:	rcr    BYTE PTR ds:0x87f075dd,cl
  408f11:	dec    ecx
  408f12:	imul   esp,DWORD PTR [ebp+0x460e270c],0x2b
  408f19:	adc    ebp,ecx
  408f1b:	sbb    BYTE PTR [edx+0x261df467],0x69
  408f22:	fbld   TBYTE PTR [ebx-0x68]
  408f25:	push   edx
  408f26:	xchg   esp,eax
  408f27:	push   ebp
  408f28:	int    0xe4
  408f2a:	test   DWORD PTR [edx+0x41],0x8e6a91a6
  408f31:	mov    edi,0x80c13fea
  408f36:	retf   
  408f37:	push   esi
  408f38:	into   
  408f39:	pop    edi
  408f3a:	xchg   eax,edx
  408f3c:	push   cs
  408f3d:	push   edx
  408f3e:	push   es
  408f3f:	addr16 test eax,0x9c0d5170
  408f45:	pop    esi
  408f46:	jo     0x408f35
  408f48:	or     ebp,ebp
  408f4a:	cwde   
  408f4b:	addr16 ja 0x408edf
  408f4e:	mov    eax,0xeba6e016
  408f53:	out    0xb1,eax
  408f55:	clc    
  408f56:	xor    DWORD PTR [edi],edi
  408f58:	sub    bl,BYTE PTR ds:0xf3aad32f
  408f5e:	int    0x7d
  408f60:	test   DWORD PTR [eax+ebx*1-0x52],edx
  408f64:	jp     0x408f92
  408f66:	pop    edi
  408f67:	mov    ah,0x74
  408f69:	mov    edi,0x77927baf
  408f6e:	stc    
  408f6f:	cwde   
  408f70:	cmc    
  408f71:	into   
  408f72:	sbb    edi,DWORD PTR [edx+0x604769b8]
  408f78:	or     eax,0xfc2b6a8a
  408f7d:	pop    ebp
  408f7e:	mov    eax,ds:0x3f8c356b
  408f83:	adc    al,0x72
  408f85:	inc    esi
  408f86:	sahf   
  408f87:	xor    al,0x8a
  408f89:	call   0x7059:0x832a5342
  408f90:	cmp    al,dh
  408f92:	icebp  
  408f93:	retf   
  408f94:	mov    al,ds:0x74f3bf80
  408f99:	aad    0x25
  408f9b:	jle    0x408ffa
  408f9d:	(bad)  
  408f9f:	xchg   ecx,eax
  408fa0:	sbb    DWORD PTR ds:0x537e0cb5,ecx
  408fa6:	pop    esi
  408fa7:	rcl    BYTE PTR [ebx-0x55b0161f],cl
  408fad:	sub    BYTE PTR [edx+0x538109b5],dh
  408fb3:	cmp    al,0xe6
  408fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fb6:	add    dh,bl
  408fb8:	stc    
  408fb9:	lds    esp,FWORD PTR [edx+0x1c41a130]
  408fbf:	xchg   ebp,eax
  408fc0:	xor    ebx,eax
  408fc2:	xor    eax,0xac59e691
  408fc7:	(bad)  
  408fc8:	push   edi
  408fc9:	or     al,0xe
  408fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fcc:	jb     0x409016
  408fce:	push   edx
  408fcf:	adc    eax,0x330e400c
  408fd4:	int    0xc0
  408fd6:	cmp    al,0xd8
  408fd8:	jl     0x408fbd
  408fda:	mov    ebp,0xd86c046a
  408fdf:	lock (bad) 
  408fe1:	retf   0x45a
  408fe4:	cmp    eax,0x2390781c
  408fe9:	inc    esp
  408fea:	push   ebx
  408feb:	repz fnsave [eax-0x1406c08c]
  408ff2:	pop    ebp
  408ff3:	iret   
  408ff4:	test   eax,0x8dfa9c7f
  408ff9:	jno    0x409019
  408ffb:	mov    al,ds:0x4adabf74
  409000:	jmp    0x64c3:0xa3a6760d
  409007:	xchg   ebx,eax
  409008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409009:	xchg   esi,eax
  40900a:	rol    BYTE PTR [ebx],0x85
  40900d:	jnp    0x409006
  40900f:	fdiv   DWORD PTR [eax]
  409011:	test   DWORD PTR [edx+0x5fb0843c],esi
  409017:	(bad)  
  409018:	lods   al,BYTE PTR ds:[esi]
  409019:	add    eax,0xb9a564d9
  40901e:	cmp    DWORD PTR [esi+0x38],ebp
  409021:	mov    dl,0x28
  409023:	loop   0x408fe2
  409025:	ret    
  409026:	mov    dh,0x4a
  409028:	gs sbb bh,bl
  40902b:	(bad)  
  40902c:	fist   DWORD PTR [edx-0x4]
  40902f:	in     eax,0x26
  409031:	imul   ebp,DWORD PTR [edx+0x7c],0x38
  409035:	mov    bl,0x97
  409037:	pop    ds
  409038:	xchg   ebp,eax
  409039:	xor    ah,dl
  40903b:	push   ecx
  40903c:	xor    DWORD PTR [eax+esi*2+0x1a765c1a],ebx
  409043:	adc    al,0xa0
  409045:	or     ebp,DWORD PTR [edx+0x31]
  409048:	std    
  409049:	jg     0x408fe9
  40904b:	pop    ecx
  40904c:	fisttp WORD PTR [esi-0x13]
  40904f:	adc    BYTE PTR [esi-0x3e],0x1e
  409053:	shl    DWORD PTR [edi],1
  409055:	dec    ebx
  409056:	test   BYTE PTR [ebx],al
  409058:	xchg   edx,eax
  409059:	pop    ss
  40905a:	enter  0x89b2,0xca
  40905e:	or     al,0x1a
  409060:	mov    ch,0xb
  409062:	(bad)  
  409064:	jb     0x4090a9
  409066:	ror    DWORD PTR [ebp+ebp*2+0x5f],cl
  40906a:	push   eax
  40906b:	mov    edx,0xa99ff618
  409070:	sub    cl,BYTE PTR [esi+0x4dfa8b9d]
  409076:	xor    DWORD PTR [edi+eiz*8],edx
  409079:	inc    ecx
  40907a:	(bad)  
  40907b:	xlat   BYTE PTR ds:[ebx]
  40907c:	jnp    0x4090a7
  40907e:	pop    ds
  40907f:	mov    edx,edx
  409081:	jg     0x40902d
  409083:	or     BYTE PTR [eax],bh
  409085:	add    DWORD PTR [ebp-0x1970e74f],ecx
  40908b:	addr16 xchg ecx,esi
  40908e:	mov    bh,0xd6
  409090:	out    0x58,al
  409092:	das    
  409093:	fadd   DWORD PTR [ecx-0x70f970d6]
  409099:	(bad)  
  40909a:	popf   
  40909b:	add    esp,DWORD PTR [esi]
  40909d:	mov    dl,al
  40909f:	rcr    DWORD PTR [ebp-0x394e23f7],cl
  4090a5:	imul   edx,DWORD PTR [esp+ecx*4-0x58],0xffffffaa
  4090aa:	sbb    BYTE PTR [ebx-0x3],0xca
  4090ae:	into   
  4090af:	lock push edi
  4090b1:	adc    ah,BYTE PTR [edi-0x6688bc1f]
  4090b7:	fstp   DWORD PTR [eax]
  4090b9:	rol    BYTE PTR [ebx-0x32],cl
  4090bc:	pusha  
  4090bd:	adc    DWORD PTR [ebx+0x6b],ecx
  4090c0:	retf   
  4090c1:	in     eax,0x2e
  4090c3:	out    0x9e,al
  4090c5:	or     ch,dl
  4090c7:	jp     0x409052
  4090c9:	(bad)  
  4090ca:	mov    dl,0x1a
  4090cc:	jo     0x409051
  4090ce:	and    ebx,DWORD PTR [ecx+0x5]
  4090d1:	pop    ecx
  4090d2:	sahf   
  4090d3:	and    edx,esp
  4090d5:	cwde   
  4090d6:	ds push gs
  4090d9:	xor    bl,BYTE PTR [edi-0x55f88b0e]
  4090df:	xor    ebx,DWORD PTR [eax-0x9]
  4090e2:	xchg   edi,eax
  4090e3:	inc    edx
  4090e4:	mov    ah,dh
  4090e6:	aad    0x4e
  4090e8:	aaa    
  4090e9:	(bad)
  4090ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ed:	push   0xfffffff4
  4090ef:	daa    
  4090f0:	loope  0x409168
  4090f2:	inc    esi
  4090f3:	inc    ecx
  4090f4:	xchg   ebp,eax
  4090f5:	mov    al,0xca
  4090f7:	ror    dl,cl
  4090f9:	xchg   edi,eax
  4090fa:	out    dx,eax
  4090fb:	mov    dl,0x80
  4090fd:	mov    ch,0x15
  4090ff:	(bad)  
  409100:	push   eax
  409101:	cmp    DWORD PTR [ecx-0x69e3e0b2],0xd6b17dff
  40910b:	(bad)  
  40910c:	dec    edi
  40910d:	sbb    al,0x65
  40910f:	aaa    
  409110:	xor    eax,DWORD PTR [ecx-0x7d4c220c]
  409116:	lahf   
  409117:	stos   BYTE PTR es:[edi],al
  409118:	jb     0x409174
  40911a:	or     eax,DWORD PTR [esp+ebp*4]
  40911d:	mov    ?,eax
  40911f:	icebp  
  409120:	sub    BYTE PTR [edi-0x30],0xcc
  409124:	ret    0x1078
  409127:	mov    al,0x4c
  409129:	push   ss
  40912a:	loope  0x409116
  40912c:	lds    esp,FWORD PTR [edi+0x71]
  40912f:	xchg   edi,eax
  409130:	pop    edx
  409131:	add    al,0xdc
  409133:	add    BYTE PTR [edx+ecx*8],al
  409136:	cmp    al,0xda
  409138:	outs   dx,BYTE PTR ds:[esi]
  409139:	jp     0x4090e4
  40913b:	repz adc al,0x94
  40913e:	fild   WORD PTR [eax]
  409140:	icebp  
  409141:	out    dx,al
  409142:	push   0x90c254a7
  409147:	(bad)  
  409148:	cs ret 0x8c7d
  40914c:	mov    WORD PTR [eax-0x365eb369],gs
  409152:	std    
  409153:	cmp    dl,ch
  409155:	adc    al,0x73
  409157:	adc    al,BYTE PTR [eax+eiz*2+0x2174e55a]
  40915e:	jmp    0x40911b
  409160:	xchg   ebx,eax
  409161:	push   0xffffffae
  409163:	mov    dh,0xbf
  409165:	xchg   BYTE PTR [edi+0x6f],cl
  409168:	cmc    
  409169:	jae    0x40918e
  40916b:	cli    
  40916c:	push   esp
  40916d:	mov    ebx,0x8ef1bc9
  409172:	lahf   
  409173:	add    al,BYTE PTR [ecx+0x1763c970]
  409179:	jmp    0x5ecd:0x856ae4a7
  409180:	inc    ecx
  409181:	add    dh,ah
  409183:	cmp    cl,bh
  409185:	xor    ch,BYTE PTR [ecx+0x1e]
  409188:	lods   eax,DWORD PTR ds:[esi]
  409189:	stc    
  40918a:	rcr    BYTE PTR [ebx+ebx*8-0x77029f94],0x26
  409192:	ss iret 
  409194:	mov    ah,0xcd
  409196:	stos   DWORD PTR es:[edi],eax
  409197:	gs test al,0xc3
  40919a:	mov    bl,0xd6
  40919c:	cmp    al,0xca
  40919e:	js     0x409179
  4091a0:	ret    
  4091a1:	test   eax,0xa7707b0e
  4091a6:	push   esp
  4091a7:	lds    edx,FWORD PTR [edi-0x7]
  4091aa:	fisttp QWORD PTR [ecx-0x14]
  4091ad:	jecxz  0x409167
  4091af:	xchg   edi,eax
  4091b0:	into   
  4091b1:	mov    ch,0xab
  4091b4:	inc    esi
  4091b5:	lods   eax,DWORD PTR ds:[esi]
  4091b6:	dec    BYTE PTR [eax+0x156e722]
  4091bc:	adc    eax,DWORD PTR [edi-0x1d021bfd]
  4091c2:	jg     0x409191
  4091c4:	push   cs
  4091c5:	cmp    DWORD PTR [edi],esi
  4091c7:	dec    esi
  4091c8:	xchg   esp,eax
  4091c9:	test   BYTE PTR [eax-0x24],ah
  4091cc:	adc    DWORD PTR [eax-0x18],edx
  4091cf:	mov    eax,0x26223149
  4091d4:	fwait
  4091d5:	add    dl,BYTE PTR [ebx+0x3a]
  4091d8:	(bad)  
  4091d9:	ja     0x40918b
  4091db:	aam    0x92
  4091dd:	cmc    
  4091de:	inc    ecx
  4091df:	retf   0x6285
  4091e2:	outs   dx,DWORD PTR ds:[esi]
  4091e3:	mov    ebx,0x60107679
  4091e8:	out    dx,eax
  4091e9:	push   edi
  4091ea:	mov    eax,0x8471c77d
  4091ef:	popf   
  4091f0:	sar    BYTE PTR [edi],1
  4091f2:	bound  ebx,QWORD PTR [ebp-0x1a]
  4091f5:	push   ds
  4091f6:	add    eax,0x1b31c26
  4091fb:	call   0x66a0:0xc670e9d0
  409202:	pop    ss
  409203:	mov    esi,0x99c09abd
  409208:	sub    bl,BYTE PTR [ebx+0x154a2ce]
  40920e:	mov    ecx,0x656eadee
  409213:	mov    WORD PTR [ecx+0x5427323d],es
  409219:	mov    ch,0xbe
  40921b:	aam    0x47
  40921d:	neg    edx
  40921f:	fst    DWORD PTR [ebx+edx*2-0xebe7e4a]
  409226:	jno    0x40920f
  409228:	xor    edi,ebp
  40922a:	div    ch
  40922c:	jne    0x4091bf
  40922e:	loope  0x409236
  409230:	lea    ebx,ds:0xd0947b0
  409236:	das    
  409237:	inc    eax
  409238:	outs   dx,DWORD PTR ds:[esi]
  409239:	cld    
  40923a:	jge    0x409287
  40923c:	retf   0x9828
  40923f:	dec    ecx
  409240:	aaa    
  409241:	cmp    ebp,ebx
  409243:	add    bl,BYTE PTR [ecx+0x6d490f94]
  409249:	jg     0x4091e0
  40924b:	fisub  DWORD PTR [eax-0xb30927a]
  409251:	mov    eax,0xe6fffedf
  409256:	push   cs
  409257:	mov    al,ds:0xaf3f9f6f
  40925c:	outs   dx,BYTE PTR ds:[esi]
  40925d:	in     eax,0xb
  40925f:	dec    edx
  409260:	push   cs
  409261:	int    0x4
  409263:	pop    ebp
  409264:	(bad)  
  409265:	out    0x46,al
  409267:	js     0x4092e8
  409269:	pop    esp
  40926a:	or     BYTE PTR [edx+0x33],al
  40926d:	xchg   DWORD PTR [edi+0x246551c4],edi
  409273:	sbb    al,0x9f
  409275:	mov    al,ds:0x77d7a26
  40927a:	repnz pop edx
  40927c:	ins    DWORD PTR es:[edi],dx
  40927d:	sub    esi,DWORD PTR [ebx+ecx*2]
  409280:	dec    ebp
  409281:	xchg   esi,eax
  409282:	aam    0x1d
  409284:	and    cl,BYTE PTR ds:0x5abc9217
  40928a:	mov    cl,ch
  40928c:	sub    edx,ebx
  40928e:	xlat   BYTE PTR ds:[ebx]
  40928f:	mov    dl,0x80
  409291:	sbb    ah,BYTE PTR [eax-0x2a312155]
  409297:	xchg   ecx,eax
  409298:	push   0xffffffec
  40929a:	sbb    eax,0x70bb9f55
  40929f:	lock jne 0x409239
  4092a2:	cli    
  4092a3:	mov    ch,0x51
  4092a5:	ror    BYTE PTR [ebx+0x34],1
  4092a8:	mov    bh,al
  4092aa:	pop    esi
  4092ab:	dec    ebx
  4092ac:	cli    
  4092ad:	outs   dx,DWORD PTR ds:[esi]
  4092ae:	les    esi,FWORD PTR [ebp+0x819ebbe]
  4092b4:	pop    ebx
  4092b5:	cmp    DWORD PTR [ebp-0x23],0xdf6efc9a
  4092bc:	inc    ebp
  4092bd:	push   eax
  4092be:	dec    edx
  4092bf:	pop    ds
  4092c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092c1:	ss push es
  4092c3:	jbe    0x4092b5
  4092c5:	mov    eax,ds:0xf3431e8
  4092ca:	imul   ecx,DWORD PTR ds:0x9797efa7,0x8006bcd0
  4092d4:	daa    
  4092d5:	dec    ebx
  4092d6:	ja     0x4092a2
  4092d8:	xchg   ecx,eax
  4092d9:	cs pop ebx
  4092db:	aaa    
  4092dc:	loopne 0x4092ee
  4092de:	and    DWORD PTR [ecx],0xf4194cb9
  4092e4:	imul   DWORD PTR [edx-0x719cd096]
  4092ea:	rcr    BYTE PTR ss:0x178f3674,cl
  4092f1:	mov    eax,0x48b745ae
  4092f6:	xchg   DWORD PTR [edi+0x5c],edi
  4092f9:	(bad)  
  4092fa:	mov    ds:0x4c34eba,eax
  4092ff:	gs repz loop 0x40934a
  409303:	fnstenv [eax-0x6fc17f2b]
  409309:	xor    eax,0x9aa15219
  40930e:	mov    edx,0xffad9a98
  409313:	jb     0x4092a0
  409315:	popa   
  409316:	pop    esp
  409317:	loop   0x40933e
  409319:	jp     0x40932d
  40931b:	and    BYTE PTR [esi+0x54f33093],dl
  409321:	pop    esp
  409322:	jnp    0x40936e
  409324:	push   0x78
  409326:	mov    bl,0xb0
  409328:	sar    BYTE PTR [ebp+0x4e1c2cb5],cl
  40932e:	mov    ah,0x9e
  409330:	enter  0x66c0,0xd9
  409334:	iret   
  409335:	sub    dh,BYTE PTR [ecx]
  409337:	sub    edi,edi
  409339:	ret    
  40933a:	jle    0x4093a7
  40933c:	cmp    dl,BYTE PTR [esi]
  40933e:	imul   ebp,DWORD PTR [ecx-0x1e445eb3],0x4ec01a2e
  409348:	ins    DWORD PTR es:[edi],dx
  409349:	repnz cmp esp,ebp
  40934c:	inc    ebp
  40934d:	fidivr WORD PTR [ebx+0x9fab9e7]
  409353:	inc    ebx
  409354:	rsm    
  409356:	fisttp WORD PTR [edi-0x6]
  409359:	mov    bh,BYTE PTR [edi+esi*2]
  40935c:	mov    esp,0x9ac0ba6d
  409361:	mov    edx,0xd942b4a8
  409366:	gs inc esp
  409368:	adc    edx,DWORD PTR [ebx]
  40936a:	(bad)  
  40936b:	xchg   ecx,eax
  40936c:	add    eax,0x633e144e
  409372:	xchg   ebx,eax
  409373:	inc    eax
  409374:	push   edx
  409375:	ds dec ebx
  409377:	inc    ecx
  409378:	sbb    BYTE PTR [ebx+0x69ac8331],dl
  40937e:	hlt    
  40937f:	ror    DWORD PTR [eax],cl
  409381:	pushf  
  409382:	cdq    
  409383:	pop    esi
  409384:	inc    eax
  409385:	and    BYTE PTR [edx+0x682cbaa3],ah
  40938b:	inc    edi
  40938c:	pminub mm1,QWORD PTR [eax]
  40938f:	sbb    al,0x7f
  409391:	xor    dl,BYTE PTR [ebx]
  409393:	xchg   ecx,eax
  409394:	pop    ebx
  409395:	mov    cl,BYTE PTR [ecx-0x19d60e23]
  40939b:	push   edx
  40939c:	inc    esp
  40939d:	inc    ecx
  40939e:	inc    esi
  40939f:	mov    ebx,0xd20bdefb
  4093a4:	adc    eax,0x7e6b1e43
  4093a9:	dec    ecx
  4093aa:	cdq    
  4093ab:	xchg   ebp,ecx
  4093ad:	jae    0x4093ed
  4093af:	cs leave 
  4093b1:	jmp    0x4093c8
  4093b3:	into   
  4093b4:	pop    ebx
  4093b5:	ror    DWORD PTR [esi-0x203ba9a5],1
  4093bb:	ins    BYTE PTR es:[edi],dx
  4093bc:	retf   
  4093bd:	sbb    al,0xb8
  4093bf:	or     DWORD PTR ds:0xcc16535d,edx
  4093c5:	fcom   DWORD PTR [eax-0x34686bfd]
  4093cb:	je     0x4093f7
  4093cd:	inc    edi
  4093ce:	adc    eax,DWORD PTR [edx-0x23]
  4093d1:	out    dx,eax
  4093d2:	and    DWORD PTR [edi],ecx
  4093d4:	je     0x409436
  4093d6:	cmp    eax,eax
  4093d8:	loopne 0x40937a
  4093da:	xor    esi,DWORD PTR [edx-0x6c185c5d]
  4093e0:	push   ebx
  4093e1:	(bad)  
  4093e2:	push   edx
  4093e3:	addr16 xchg edi,eax
  4093e5:	xor    al,0x82
  4093e7:	xchg   DWORD PTR ds:0x6ef102ed,ebp
  4093ed:	test   BYTE PTR [ecx-0x387c3800],ah
  4093f3:	adc    DWORD PTR [ecx+0x21],0x6e
  4093f7:	lds    esp,FWORD PTR [edx+esi*8]
  4093fa:	arpl   WORD PTR [ebx+eiz*2-0x789e88e3],ax
  409401:	push   edi
  409402:	pop    es
  409403:	sbb    ecx,DWORD PTR [edx-0x17]
  409406:	je     0x4093f3
  409408:	sub    DWORD PTR [ecx],ebx
  40940a:	mov    esp,0x284b169d
  40940f:	mov    edi,0xaefcbc67
  409414:	add    ecx,DWORD PTR [edx-0xca255e4]
  40941a:	dec    esp
  40941b:	les    edi,FWORD PTR [ebp-0xb]
  40941e:	(bad)  
  40941f:	pushf  
  409420:	(bad)  
  409421:	jle    0x409455
  409423:	sub    eax,0x54d4daa
  409428:	cdq    
  409429:	dec    ebp
  40942a:	mov    cl,0x34
  40942c:	or     eax,0x99d3c22b
  409431:	outs   dx,DWORD PTR ds:[esi]
  409432:	xor    edi,DWORD PTR [eax-0x76462c7a]
  409438:	xor    BYTE PTR [eax],0xab
  40943b:	cld    
  40943c:	ins    BYTE PTR es:[edi],dx
  40943d:	aad    0xff
  40943f:	mov    eax,ds:0xfa2f1876
  409444:	fdiv   DWORD PTR [ebx]
  409446:	adc    al,0xd1
  409448:	cmp    BYTE PTR ds:0xdd7e308f,cl
  40944e:	add    ecx,edi
  409450:	leave  
  409451:	aad    0xe7
  409453:	je     0x4094ba
  409455:	(bad)  
  409457:	sbb    eax,DWORD PTR [edx]
  409459:	cdq    
  40945a:	pusha  
  40945b:	pop    edi
  40945c:	imul   edx,DWORD PTR [esi],0x2c
  40945f:	mov    ecx,0x6bed48db
  409464:	cs dec eax
  409466:	ficomp DWORD PTR fs:0x8f15ac90
  40946d:	(bad)  
  40946e:	fsubp  st(2),st
  409470:	jl     0x4094da
  409472:	stos   DWORD PTR es:[edi],eax
  409473:	out    0x8c,al
  409475:	cwde   
  409476:	xlat   BYTE PTR ds:[ebx]
  409477:	outs   dx,DWORD PTR ds:[esi]
  409478:	inc    edx
  409479:	outs   dx,DWORD PTR ds:[esi]
  40947a:	adc    cl,BYTE PTR [ebx+0x7229c628]
  409480:	cmp    al,bl
  409482:	push   0xffffff87
  409484:	fcmove st,st(1)
  409486:	pop    ebx
  409487:	retf   
  409488:	lds    ecx,FWORD PTR [ebx+0x475da7c5]
  40948e:	js     0x409473
  409490:	pop    ds
  409491:	jmp    0x40946c
  409493:	pop    ebx
  409494:	mov    bl,0x6d
  409496:	call   0xad242383
  40949b:	out    0x85,al
  40949d:	xchg   DWORD PTR [edx],edx
  40949f:	pop    ss
  4094a0:	sahf   
  4094a1:	mov    al,ds:0x781176eb
  4094a6:	aas    
  4094a7:	pop    ecx
  4094a8:	jge    0x409455
  4094aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094ab:	push   ecx
  4094ac:	repz (bad) 
  4094ae:	mov    ch,0x10
  4094b0:	cmp    ecx,DWORD PTR [edi+0xbb9cac9]
  4094b6:	add    bh,BYTE PTR [ecx-0x33]
  4094b9:	xchg   ebp,eax
  4094ba:	and    DWORD PTR [edx+0x88f1255],ecx
  4094c0:	jnp    0x409512
  4094c2:	repnz dec ecx
  4094c4:	dec    ebx
  4094c5:	dec    edx
  4094c6:	lods   al,BYTE PTR ds:[esi]
  4094c7:	xor    esp,ecx
  4094c9:	add    ebp,ebp
  4094cb:	js     0x4094c8
  4094cd:	ret    0x2ff2
  4094d0:	push   edx
  4094d1:	add    esp,DWORD PTR [eax-0x4ed41abe]
  4094d7:	cmp    eax,0x52c378e3
  4094dc:	inc    eax
  4094dd:	js     0x409502
  4094df:	aam    0x8a
  4094e1:	sti    
  4094e2:	test   eax,0x80d5ba6e
  4094e7:	push   0x2f8f5ea8
  4094ec:	inc    ebp
  4094ed:	jecxz  0x40955e
  4094ef:	mov    ecx,0x3284e1a1
  4094f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f5:	inc    ebx
  4094f6:	fstp   TBYTE PTR [eax+0x39]
  4094f9:	fistp  WORD PTR [eax+0x21]
  4094fc:	rcr    BYTE PTR [esi+ecx*8+0x44ea3b98],0x31
  409504:	or     DWORD PTR [edi+0x59],0x42
  409508:	test   eax,0x5cc24886
  40950d:	xchg   edi,eax
  40950e:	mov    bh,0x1a
  409510:	inc    ebp
  409511:	inc    ebp
  409512:	jnp    0x409504
  409514:	dec    edx
  409515:	int3   
  409516:	stos   BYTE PTR es:[edi],al
  409517:	lds    ecx,FWORD PTR ds:0xb699e695
  40951d:	xor    DWORD PTR [eax+0x25b0b5ad],esp
  409523:	gs or  eax,0x6ecf4109
  409529:	fnsave fs:0x3468bfe8
  409530:	xor    eax,esi
  409532:	or     DWORD PTR [edi+0x1],0x93ec3d92
  409539:	(bad)  
  40953a:	lahf   
  40953b:	sbb    eax,0x87ae554a
  409540:	inc    edx
  409541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409542:	jo     0x4095b5
  409544:	jp     0x409590
  409546:	pop    eax
  409547:	xor    dl,BYTE PTR [edx+0x6c9757fb]
  40954d:	dec    eax
  40954e:	into   
  40954f:	or     DWORD PTR [esi+edx*2],esp
  409552:	sahf   
  409553:	adc    DWORD PTR [ecx-0x2d],ebx
  409556:	ret    
  409557:	call   0x6cb8:0x5b3d1115
  40955e:	jle    0x409586
  409560:	jne    0x4095a4
  409562:	lahf   
  409563:	jo     0x409538
  409565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409566:	mov    WORD PTR ds:[ebp-0x1db48af2],?
  40956d:	retf   0xa502
  409570:	call   DWORD PTR [ecx+ecx*8-0x1ab634ea]
  409577:	push   ebp
  409578:	test   eax,0x1b11e65d
  40957d:	lea    ebx,[ecx-0x35]
  409580:	repnz ins DWORD PTR es:[edi],dx
  409582:	cmp    eax,0x56a328ef
  409587:	mov    esi,0x3484ff6
  40958c:	mov    ds:0x8b651bf1,eax
  409591:	mov    edx,0x2cd33d0b
  409596:	xchg   edi,eax
  409597:	add    esi,DWORD PTR [ebp+0x7334cb15]
  40959d:	es dec eax
  40959f:	stos   BYTE PTR es:[edi],al
  4095a0:	loope  0x40955f
  4095a2:	sahf   
  4095a3:	xor    eax,0xaa00eaf9
  4095a8:	cli    
  4095a9:	loopne 0x409582
  4095ab:	xor    eax,0x117d8a62
  4095b0:	aaa    
  4095b1:	call   0xf5e9:0x222f04c6
  4095b8:	fcmovb st,st(3)
  4095ba:	(bad)  
  4095bb:	repnz into 
  4095bd:	sub    DWORD PTR [eax+ebx*8+0x3e],ecx
  4095c1:	out    0xe9,al
  4095c3:	push   0xafbed149
  4095c8:	scas   al,BYTE PTR es:[edi]
  4095c9:	adc    BYTE PTR [ebp-0x14],bh
  4095cc:	dec    edx
  4095cd:	adc    ah,BYTE PTR [edi+0x51]
  4095d0:	or     edx,ebp
  4095d2:	xlat   BYTE PTR ds:[ebx]
  4095d3:	xchg   ebp,eax
  4095d4:	pop    ebp
  4095d5:	(bad)  
  4095d6:	jae    0x4095d5
  4095d8:	imul   eax,DWORD PTR ds:[edx+eax*8],0x3722b5b6
  4095e0:	pop    ecx
  4095e1:	mov    BYTE PTR [ebp-0xa],0x43
  4095e5:	cmp    eax,0x104ce9c5
  4095ea:	cmp    al,0x29
  4095ec:	retf   0x7d27
  4095ef:	out    dx,eax
  4095f0:	and    esi,edi
  4095f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095f3:	push   0xffffffa2
  4095f5:	shl    BYTE PTR [edi],0x7
  4095f8:	xor    edi,ebp
  4095fa:	pop    ss
  4095fb:	pushf  
  4095fc:	mov    esp,0xfa2bf8c9
  409601:	mov    al,ds:0xc27fab87
  409606:	add    al,0xe2
  409608:	push   ss
  409609:	and    DWORD PTR [eax],esp
  40960b:	mov    WORD PTR [edi+0x72],fs
  40960e:	mov    ch,0x57
  409610:	pop    esi
  409611:	shl    ebx,cl
  409613:	mov    edx,0x59f754a2
  409618:	(bad)  
  409619:	ja     0x4095b6
  40961b:	mov    eax,0x8a559b6
  409620:	sub    esp,DWORD PTR [edx+0x4]
  409623:	and    bh,BYTE PTR [edx+0x6c]
  409626:	lods   eax,DWORD PTR ds:[esi]
  409627:	mov    BYTE PTR [ebx],dl
  409629:	adc    al,0x9e
  40962b:	outs   dx,BYTE PTR ds:[esi]
  40962c:	sbb    BYTE PTR [esp+edx*4+0x1b],dh
  409630:	sub    BYTE PTR [eax-0x12b4c027],bl
  409636:	xor    al,0x4a
  409638:	fcomp  DWORD PTR [eax-0x17]
  40963b:	in     eax,0x15
  40963d:	and    al,0x6e
  40963f:	(bad)  
  409640:	out    dx,al
  409641:	or     dh,BYTE PTR [ebx-0x69]
  409644:	inc    edi
  409645:	sbb    bh,BYTE PTR [ebx+0x1f5b35b]
  40964b:	fsubr  DWORD PTR ds:[ebx+0x7b]
  40964f:	mov    DWORD PTR [esi-0x75],eax
  409652:	push   edi
  409653:	push   esi
  409654:	dec    eax
  409655:	nop
  409656:	mov    ds:0x538ede37,al
  40965b:	fistp  QWORD PTR [eax+0x7f]
  40965e:	or     BYTE PTR [ebx-0xda88c77],bl
  409664:	out    dx,eax
  409665:	fwait
  409666:	mov    edx,0x308d32c
  40966b:	xor    cl,ch
  40966d:	sub    eax,0xfea6a934
  409672:	lea    eax,[ebx-0x61]
  409675:	push   es
  409676:	or     ebp,DWORD PTR [ebp-0x1]
  409679:	pop    edx
  40967a:	push   0xd
  40967c:	add    DWORD PTR [ebp-0x10ea10a],0xffffffc7
  409683:	xchg   edi,eax
  409684:	imul   ecx,DWORD PTR [edx+0x5d],0x85fd3db3
  40968b:	and    ah,BYTE PTR [edx]
  40968d:	mov    bl,0xc9
  40968f:	leave  
  409690:	add    BYTE PTR ds:0x85156125,ah
  409696:	push   edi
  409697:	add    DWORD PTR [ebp-0x66],0xb1bc9ae7
  40969e:	push   0xffffffdc
  4096a0:	adc    DWORD PTR [esi],0x8c374e07
  4096a6:	mov    ebp,0xff27b0b6
  4096ab:	or     ah,BYTE PTR [eax]
  4096ad:	inc    edi
  4096ae:	ja     0x4096ef
  4096b0:	push   esp
  4096b1:	or     esp,DWORD PTR [edx]
  4096b3:	jp     0x4096d8
  4096b5:	jge    0x4096a0
  4096b7:	xor    eax,0xc9f22657
  4096bc:	mov    esp,0xa563165b
  4096c1:	cdq    
  4096c2:	stos   BYTE PTR es:[edi],al
  4096c3:	jle    0x409663
  4096c5:	add    ebx,DWORD PTR [ebx+0x6c]
  4096c8:	xor    eax,DWORD PTR [ecx+0x75]
  4096cb:	stos   DWORD PTR es:[edi],eax
  4096cc:	cdq    
  4096cd:	cdq    
  4096ce:	xchg   ebx,eax
  4096cf:	(bad)
  4096d2:	jno    0x409698
  4096d4:	pop    esp
  4096d5:	sar    DWORD PTR [ebp-0x36494da8],cl
  4096db:	aad    0xdf
  4096dd:	adc    ebx,esp
  4096df:	jbe    0x4096c2
  4096e1:	and    BYTE PTR [esi],bl
  4096e3:	mov    BYTE PTR [ecx-0x21383db4],dl
  4096e9:	cli    
  4096ea:	or     ecx,DWORD PTR [edx+0x323a7d]
  4096f0:	ins    DWORD PTR es:[edi],dx
  4096f1:	out    0x3e,al
  4096f3:	(bad)  
  4096f4:	mov    ah,0x40
  4096f6:	xchg   esp,eax
  4096f7:	test   eax,0x3721b81e
  4096fc:	es daa 
  4096fe:	jb     0x409743
  409700:	nop
  409701:	mov    ch,dl
  409703:	push   cs
  409704:	aad    0x89
  409706:	mov    eax,ds:0xdaaafc8c
  40970b:	sbb    esi,DWORD PTR [edi-0x20]
  40970e:	pushf  
  40970f:	loopne 0x409693
  409711:	xchg   esp,eax
  409712:	add    bl,BYTE PTR [ecx]
  409714:	neg    DWORD PTR [ebp+ecx*4+0x318e5626]
  40971b:	out    dx,eax
  40971c:	mov    DWORD PTR [esi+0x147eae2b],ebx
  409722:	jns    0x409769
  409724:	stc    
  409725:	mov    bh,0x5c
  409727:	mov    ah,0xcc
  409729:	add    eax,0x65ccb847
  40972e:	adc    dh,BYTE PTR [esi-0x54]
  409731:	add    eax,edx
  409733:	push   ecx
  409734:	mov    edi,0x3f9bff01
  409739:	pop    es
  40973a:	pop    esi
  40973b:	push   esp
  40973c:	mov    ah,0x9
  40973e:	cwde   
  40973f:	adc    BYTE PTR [edi+0x4c577eba],ah
  409745:	in     al,dx
  409746:	xchg   ebx,eax
  409747:	sbb    BYTE PTR [ebx-0x6],ah
  40974a:	and    esi,DWORD PTR [ebp+0x43e764ca]
  409750:	std    
  409751:	inc    ebx
  409752:	test   eax,0x629f2bee
  409757:	lock cmp BYTE PTR [ecx-0x27a56f69],cl
  40975e:	push   edi
  40975f:	xchg   esi,eax
  409760:	add    DWORD PTR [eax+ecx*2],esi
  409763:	push   esi
  409764:	adc    BYTE PTR [edx],0xb8
  409767:	nop
  409768:	mov    bh,bh
  40976a:	int    0xf6
  40976c:	mov    bl,0x23
  40976e:	push   DWORD PTR [esi]
  409770:	mov    ah,0x8e
  409772:	test   edi,0x6cb9acb3
  409778:	out    0x13,al
  40977a:	pop    edi
  40977b:	xchg   BYTE PTR [esi+ebx*8-0x6825a643],dl
  409782:	sbb    al,0x4
  409784:	mov    ds:0xe4333519,eax
  409789:	or     ah,0xbd
  40978c:	adc    DWORD PTR [edi-0x3b145f04],edi
  409792:	stos   DWORD PTR es:[edi],eax
  409793:	fsub   st,st(7)
  409795:	add    DWORD PTR [edx+0x6559e162],ebx
  40979b:	push   eax
  40979c:	jb     0x4097fb
  40979e:	and    al,0x16
  4097a0:	mov    al,0x18
  4097a2:	and    esp,DWORD PTR [ebp+ebx*2+0x52]
  4097a6:	and    bh,bh
  4097a8:	pop    edx
  4097a9:	xchg   ebx,eax
  4097aa:	push   0x72
  4097ac:	aad    0x25
  4097ae:	ds jmp 0x4097b2
  4097b1:	cmp    edi,DWORD PTR [ecx+edx*1-0x2ae98ba0]
  4097b8:	mov    bl,0xef
  4097ba:	out    0xff,eax
  4097bc:	xor    ecx,esi
  4097be:	mov    bl,0x70
  4097c0:	in     eax,dx
  4097c1:	(bad)  
  4097c2:	loop   0x40982a
  4097c4:	call   0xf5cb125
  4097c9:	jno    0x409752
  4097cb:	and    al,0x35
  4097cd:	and    BYTE PTR ds:0x8f9937c6,dh
  4097d3:	ret    
  4097d4:	jo     0x409815
  4097d6:	lds    edi,FWORD PTR fs:[ebp-0x33]
  4097da:	dec    ecx
  4097db:	mov    dl,0xc7
  4097dd:	mov    esp,DWORD PTR [ebx+0x38]
  4097e0:	scas   eax,DWORD PTR es:[edi]
  4097e1:	loop   0x4097ee
  4097e3:	xor    DWORD PTR ds:0x63381891,ecx
  4097e9:	adc    eax,0xdc7f6d7c
  4097ee:	dec    ebp
  4097ef:	inc    ecx
  4097f0:	int3   
  4097f1:	jle    0x4097cd
  4097f3:	add    esp,ebx
  4097f5:	out    0x6a,al
  4097f7:	push   0xffffff80
  4097f9:	cmovnp edx,DWORD PTR [ecx-0x12]
  4097fd:	out    0xc0,al
  4097ff:	lods   eax,DWORD PTR ds:[esi]
  409800:	fstp   TBYTE PTR ds:0xec630a86
  409806:	cli    
  409807:	loop   0x4097f7
  409809:	pop    es
  40980a:	xchg   DWORD PTR [ebp+0x1a874868],edx
  409810:	in     eax,0x65
  409812:	fwait
  409813:	call   DWORD PTR [esi]
  409815:	xchg   ebx,eax
  409816:	or     eax,0x121d47d
  40981b:	ja     0x4097dc
  40981d:	pop    es
  40981e:	fild   DWORD PTR [edi+0x6a]
  409821:	setge  BYTE PTR [ebx+0x36c603f1]
  409828:	add    ah,al
  40982a:	xor    ecx,DWORD PTR [edi+0x2f]
  40982d:	int3   
  40982e:	adc    BYTE PTR es:[edi+ebp*1+0x33b18249],al
  409836:	add    dl,BYTE PTR [edx-0x2b]
  409839:	mov    cl,0x16
  40983b:	jp     0x40981f
  40983d:	dec    edx
  40983e:	test   bl,bh
  409840:	jle    0x409864
  409842:	sub    dh,BYTE PTR [esi]
  409844:	and    bl,BYTE PTR [edx]
  409846:	shr    DWORD PTR [eax],0x10
  409849:	test   DWORD PTR [ebx+0x52],edx
  40984c:	int    0x25
  40984e:	pop    ebp
  40984f:	push   cs
  409850:	or     BYTE PTR [ebx+0x17d64c59],bh
  409856:	or     BYTE PTR [ecx+0x3],cl
  409859:	je     0x409828
  40985b:	push   ds
  40985c:	or     esi,DWORD PTR [ebp*2+0x783ec39a]
  409863:	sbb    edi,DWORD PTR [edi+0x70]
  409866:	xor    ebp,ebp
  409868:	daa    
  409869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40986a:	lea    edi,[ebp+0x76]
  40986d:	lds    edx,FWORD PTR [ebx-0x29]
  409870:	adc    dl,BYTE PTR [ebp-0x53]
  409873:	test   BYTE PTR [esp-0x7a],bh
  409877:	xor    eax,DWORD PTR [eax-0x5986781e]
  40987d:	add    DWORD PTR fs:[ebp+ebp*1-0x6d],esp
  409882:	sbb    bh,BYTE PTR [esi]
  409884:	ja     0x409894
  409886:	scas   al,BYTE PTR es:[edi]
  409887:	iret   
  409888:	bt     DWORD PTR [ebp+0x59],0x2
  40988d:	inc    ecx
  40988e:	inc    ebx
  40988f:	fs mov edx,0x8b5256f4
  409895:	in     eax,dx
  409896:	fucomi st,st(6)
  409898:	data16 mov al,0x71
  40989b:	cld    
  40989c:	sbb    eax,0xd9cc95c2
  4098a1:	sub    DWORD PTR [edx+0x3552ec77],0xffffffe2
  4098a8:	xor    DWORD PTR [esi],0xffffffe7
  4098ab:	(bad)  
  4098ac:	lock or al,0x6
  4098af:	cmc    
  4098b0:	sar    BYTE PTR [ebx-0x7b],1
  4098b3:	cmp    DWORD PTR cs:[ecx],ecx
  4098b6:	stc    
  4098b7:	loop   0x4098e9
  4098b9:	ror    esp,0x64
  4098bc:	cmp    al,0xa4
  4098be:	(bad)  
  4098bf:	ja     0x40984f
  4098c1:	inc    ebx
  4098c2:	and    al,0x79
  4098c4:	in     al,0x10
  4098c6:	mov    ds:0xe1637185,eax
  4098cb:	adc    ah,0xb7
  4098ce:	(bad)  
  4098cf:	mov    ebp,0x4530512f
  4098d4:	push   cs
  4098d5:	inc    eax
  4098d6:	dec    edi
  4098d7:	xchg   edx,eax
  4098d8:	dec    ebx
  4098d9:	mov    ebx,0x6d0e8c85
  4098de:	push   ebx
  4098df:	sub    dh,BYTE PTR [eax+0xe2310e1]
  4098e5:	sbb    al,0x34
  4098e7:	loop   0x4098a9
  4098e9:	sub    DWORD PTR [edi],esp
  4098eb:	bound  esi,QWORD PTR [eax]
  4098ed:	mov    db7,ebp
  4098f0:	pop    esi
  4098f1:	add    eax,ecx
  4098f3:	in     al,0xbe
  4098f5:	add    al,0x59
  4098f7:	repz jns 0x40992f
  4098fa:	mov    ss,WORD PTR [eax+0x72]
  4098fd:	in     al,dx
  4098fe:	daa    
  4098ff:	test   ch,cl
  409901:	dec    eax
  409902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409903:	xchg   esi,eax
  409904:	pop    ecx
  409905:	fdiv   st,st(1)
  409907:	push   edx
  409908:	je     0x40993f
  40990a:	push   ebp
  40990b:	mov    ebp,0xaeb41d8c
  409910:	pop    ds
  409911:	xor    BYTE PTR [edi+0x37],dl
  409914:	jns    0x409938
  409916:	(bad)  
  409917:	xchg   ecx,eax
  409918:	call   0x9ce11cb6
  40991d:	inc    edi
  40991e:	fwait
  40991f:	call   0xefd9dc77
  409924:	outs   dx,DWORD PTR ds:[esi]
  409925:	inc    edx
  409926:	xor    BYTE PTR [esp+eiz*4+0x49],0x1e
  40992b:	inc    BYTE PTR [esi-0x4d]
  40992e:	cmp    ch,BYTE PTR [edi]
  409930:	push   ds
  409931:	mov    eax,ds:0x40d17b2
  409936:	pop    edi
  409937:	in     al,dx
  409938:	js     0x40993a
  40993a:	mov    edi,0xf839f22f
  40993f:	push   esp
  409940:	addr16 mov eax,ds:0x6287
  409944:	mov    al,cs:0x3cec1c7
  40994a:	mul    BYTE PTR [edx+0x15ca6188]
  409950:	iret   
  409951:	mov    al,0x82
  409953:	xor    eax,0xead3f071
  409958:	pop    ebx
  409959:	adc    esi,DWORD PTR [edx]
  40995b:	nop
  40995c:	and    eax,0x1411044f
  409961:	inc    eax
  409962:	mov    edi,0xbc6cdd45
  409967:	pop    es
  409968:	jle    0x40991e
  40996a:	dec    esi
  40996b:	call   0x7572:0xf84a60a2
  409972:	call   0x719d:0x7cb87077
  409979:	push   ebp
  40997a:	or     eax,0x870cdd57
  40997f:	inc    edi
  409980:	out    0xb2,al
  409982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409983:	into   
  409984:	push   es
  409985:	call   0x4e76:0xd4c469f5
  40998c:	adc    al,al
  40998e:	mov    BYTE PTR [ebx+edx*8-0x5bd9843],ch
  409995:	dec    edi
  409996:	shl    BYTE PTR [ecx-0x3f],cl
  409999:	leave  
  40999a:	fmul   QWORD PTR [esp+eax*2-0x73]
  40999e:	cmovns ebx,DWORD PTR [ebx-0x4a]
  4099a2:	fbld   TBYTE PTR [eax-0x68]
  4099a5:	sti    
  4099a6:	test   DWORD PTR [ebx+0x43],0xe6c0436
  4099ad:	pop    esi
  4099ae:	xchg   edx,eax
  4099af:	retf   0xffd9
  4099b2:	(bad)
  4099b6:	xor    dh,BYTE PTR [edi+0x72]
  4099b9:	mov    ds:0xb6310871,al
  4099be:	mov    cs,WORD PTR [edx+eax*4]
  4099c1:	loop   0x4099bf
  4099c3:	xchg   ebx,eax
  4099c4:	inc    eax
  4099c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099c6:	xlat   BYTE PTR ds:[ebx]
  4099c7:	sbb    eax,0x88b99e5
  4099cc:	cmp    ch,dl
  4099ce:	and    al,0xc6
  4099d0:	ins    DWORD PTR es:[edi],dx
  4099d1:	daa    
  4099d2:	add    al,0x9c
  4099d4:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4099d6:	pop    es
  4099d7:	inc    ebx
  4099d8:	and    eax,0x63d3d222
  4099dd:	fs lock xor al,0x26
  4099e1:	mov    dh,0xa0
  4099e3:	adc    esi,ebx
  4099e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099e6:	inc    esi
  4099e7:	pop    ss
  4099e8:	cmp    ch,cl
  4099ea:	es mov eax,0x42dbf936
  4099f0:	fadd   QWORD PTR [edx]
  4099f2:	push   edx
  4099f3:	ds cld 
  4099f5:	std    
  4099f6:	test   DWORD PTR [esi+eax*2],edi
  4099f9:	push   esp
  4099fa:	dec    eax
  4099fb:	jle    0x4099c8
  4099fd:	in     al,0xaf
  4099ff:	in     al,dx
  409a00:	pop    ss
  409a01:	rcr    BYTE PTR [ecx],0xd3
  409a04:	dec    eax
  409a05:	daa    
  409a06:	adc    eax,0x3e800932
  409a0b:	dec    ebp
  409a0c:	out    dx,eax
  409a0d:	push   esp
  409a0e:	cmp    ecx,DWORD PTR [ecx+0x795ad8c8]
  409a14:	mov    eax,0x797beba2
  409a19:	rcl    BYTE PTR [edi+0x4984a8c8],1
  409a1f:	jnp    0x4099cf
  409a21:	fisttp QWORD PTR [edi-0x1a]
  409a24:	ins    BYTE PTR es:[edi],dx
  409a25:	inc    eax
  409a26:	jl     0x409a54
  409a28:	(bad)  
  409a29:	sar    DWORD PTR [eax-0x36],1
  409a2c:	cli    
  409a2d:	sar    DWORD PTR [eax-0x3c],1
  409a30:	add    eax,0x2cfe8ad4
  409a35:	daa    
  409a36:	sub    ch,al
  409a38:	fmul   st(2),st
  409a3a:	xchg   esp,eax
  409a3b:	test   eax,0x42607950
  409a40:	enter  0xaff7,0xa7
  409a44:	iret   
  409a45:	scas   eax,DWORD PTR es:[edi]
  409a46:	repnz cmp al,0xb3
  409a49:	or     bl,BYTE PTR [esi+0x2eb02458]
  409a4f:	sub    DWORD PTR [eax+0x38],edi
  409a52:	in     eax,dx
  409a53:	ins    DWORD PTR es:[edi],dx
  409a54:	xor    BYTE PTR [eax-0x2c31882],0xae
  409a5b:	adc    ebp,DWORD PTR [eax]
  409a5d:	mov    edi,0xb0bf9fbe
  409a62:	lock dec bx
  409a65:	mov    edi,0xc3a87225
  409a6a:	sub    eax,0x299c224e
  409a6f:	and    DWORD PTR [ebx+0x5d9a9565],0xa8e0e1ec
  409a79:	imul   ebx,esi,0xffffffc6
  409a7c:	fadd   DWORD PTR [esp+eax*8]
  409a7f:	fcomip st,st(6)
  409a81:	xchg   esi,eax
  409a82:	mov    bl,0x16
  409a84:	mov    al,ch
  409a86:	jl     0x409a21
  409a88:	mov    ecx,0xb0d43e87
  409a8d:	cs push edx
  409a8f:	mov    bl,0x61
  409a91:	out    0xcb,eax
  409a93:	in     al,dx
  409a94:	shl    eax,0x29
  409a97:	jmp    0x409a20
  409a99:	sub    DWORD PTR [esi+ecx*1+0x65468b42],0xd1e75474
  409aa4:	shl    eax,0xf7
  409aa7:	push   esp
  409aa8:	inc    edi
  409aa9:	cmp    al,0x72
  409aab:	cli    
  409aac:	push   es
  409aad:	xor    ebx,DWORD PTR [ebx-0x4d]
  409ab0:	addr16 out 0x35,al
  409ab3:	out    0xc8,al
  409ab5:	pusha  
  409ab6:	jns    0x409aaf
  409ab8:	ds dec esi
  409aba:	jbe    0x409b2e
  409abc:	out    0xf6,al
  409abe:	ret    
  409abf:	loop   0x409acb
  409ac1:	or     BYTE PTR [ebp+0x61],dl
  409ac4:	out    dx,eax
  409ac5:	inc    eax
  409ac6:	ret    
  409ac7:	dec    eax
  409ac8:	mov    cl,0xa1
  409aca:	ja     0x409ad8
  409acc:	leave  
  409acd:	sub    bl,BYTE PTR [eax-0x44]
  409ad0:	sahf   
  409ad1:	jae    0x409aa3
  409ad3:	test   BYTE PTR [edx+esi*2],dh
  409ad6:	mov    ecx,ebx
  409ad8:	pop    ebp
  409ad9:	imul   ebp,eax,0xae4a7cc7
  409adf:	dec    eax
  409ae0:	aad    0x1b
  409ae2:	iret   
  409ae3:	aam    0xd8
  409ae5:	repz jge 0x409b02
  409ae8:	js     0x409a86
  409aea:	mov    dh,0xee
  409aec:	mov    BYTE PTR [eax+0x341b485a],bl
  409af2:	push   ebx
  409af3:	test   DWORD PTR ds:0xb87a27dd,ebp
  409af9:	or     al,0x77
  409afb:	and    ah,cl
  409afd:	rcr    ebp,0x32
  409b00:	int    0x4
  409b02:	pop    ecx
  409b03:	test   al,0x7f
  409b06:	aam    0x2f
  409b08:	fucomi st,st(5)
  409b0a:	mov    esp,0xc56a0d6a
  409b0f:	iret   
  409b10:	aas    
  409b11:	push   0xef133944
  409b16:	dec    ecx
  409b17:	imul   edx,esi,0x21
  409b1a:	xchg   ecx,eax
  409b1b:	jmp    0xa2435f37
  409b20:	loopne 0x409b5b
  409b22:	sahf   
  409b23:	xor    DWORD PTR [ecx+0x50],0x797c4558
  409b2a:	fcomp  DWORD PTR ds:[ebx-0x35]
  409b2e:	push   0xc3abc954
  409b33:	push   edi
  409b34:	popf   
  409b35:	dec    ebp
  409b36:	out    dx,eax
  409b37:	pop    esp
  409b38:	gs jg  0x409af0
  409b3b:	bound  esp,QWORD PTR [ecx+edx*1+0x7f]
  409b3f:	sub    edx,ebx
  409b41:	fcomi  st,st(1)
  409b43:	fdivrp st(5),st
  409b45:	imul   ecx
  409b47:	fidivr WORD PTR [ecx+0x3]
  409b4a:	std    
  409b4b:	sub    al,0xf1
  409b4d:	xor    ch,BYTE PTR [ebx+0x2]
  409b50:	push   0x42
  409b52:	nop
  409b53:	mov    ds:0x7c9b6654,eax
  409b58:	cmc    
  409b59:	iret   
  409b5a:	push   ds
  409b5b:	mov    cl,0x52
  409b5d:	lds    esp,FWORD PTR [edi+0x2c]
  409b60:	dec    edx
  409b61:	test   eax,0x7d26244c
  409b66:	mov    ds:0x279b7936,al
  409b6b:	lds    edx,FWORD PTR [edi-0x5b]
  409b6e:	(bad)  
  409b6f:	jg     0x409b74
  409b71:	dec    esp
  409b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b73:	jnp    0x409b50
  409b75:	arpl   WORD PTR [edx],di
  409b77:	fstp   TBYTE PTR [eax]
  409b79:	dec    ebp
  409b7a:	jb     0x409b86
  409b7c:	imul   edi,edx,0xc8396d5e
  409b82:	push   ebx
  409b83:	dec    ecx
  409b84:	daa    
  409b85:	cmp    al,0x45
  409b87:	sbb    eax,0x5c0503e6
  409b8c:	lea    edx,[ebp-0x3e]
  409b8f:	sub    al,0x19
  409b91:	(bad)  
  409b92:	fdivr  QWORD PTR [edx+0x2e]
  409b95:	ins    DWORD PTR es:[edi],dx
  409b96:	lea    ebx,[ebp+edi*1-0x72]
  409b9a:	xchg   ebx,eax
  409b9b:	mov    esi,0xcb6cd04a
  409ba0:	mov    edi,0xbc2aeb84
  409ba5:	xor    BYTE PTR [ebx-0x4a26d8df],dl
  409bab:	sahf   
  409bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bad:	fs mov esp,0xbc7d85d4
  409bb3:	jne    0x409b71
  409bb5:	rol    BYTE PTR [ebp+edi*4-0x7e1c8055],0xd8
  409bbd:	outs   dx,DWORD PTR ds:[esi]
  409bbe:	out    0xf,al
  409bc0:	jge    0x409b63
  409bc2:	lea    ecx,[esi]
  409bc4:	sub    ebx,DWORD PTR [eax+0x6286d632]
  409bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bcb:	pop    es
  409bcc:	and    edx,esp
  409bce:	les    eax,FWORD PTR [eax+ebp*4]
  409bd1:	in     eax,0xc9
  409bd3:	cdq    
  409bd4:	mov    dl,0xce
  409bd6:	ret    0x30db
  409bd9:	push   cs
  409bda:	adc    esi,DWORD PTR [eax+0x4bb6aa83]
  409be0:	push   cs
  409be1:	imul   edi,DWORD PTR [ecx+ebp*1-0x24],0xe0c5b6b8
  409be9:	(bad)  
  409bea:	xchg   edi,eax
  409beb:	cmp    dh,BYTE PTR [ebp-0x66]
  409bee:	test   DWORD PTR [ebx],ebx
  409bf0:	sbb    DWORD PTR [edx],ebx
  409bf2:	jp     0x409c5a
  409bf4:	ja     0x409bed
  409bf6:	push   0xffffffd3
  409bf8:	int    0x98
  409bfa:	test   DWORD PTR [eax+ebx*2],ebp
  409bfd:	jl     0x409c11
  409bff:	mov    edi,0xd2c5d43e
  409c04:	and    eax,0xddd85bd5
  409c09:	jb     0x409bfe
  409c0b:	push   eax
  409c0c:	add    bh,bh
  409c0e:	xchg   esi,eax
  409c0f:	shr    DWORD PTR [edx],cl
  409c11:	leave  
  409c12:	sub    ch,BYTE PTR [ecx-0x60bee69e]
  409c18:	call   0x77f5:0xd6328173
  409c1f:	fisttp WORD PTR [ecx]
  409c21:	and    DWORD PTR [ebp-0x54],edx
  409c24:	xor    eax,0x5b10b14e
  409c29:	clc    
  409c2a:	cmp    esp,DWORD PTR [eax]
  409c2c:	test   dl,al
  409c2e:	add    DWORD PTR [ebp+0x1f],ecx
  409c31:	cmp    BYTE PTR [ecx],cl
  409c33:	loopne 0x409c85
  409c35:	push   eax
  409c36:	ds jb  0x409be1
  409c39:	and    eax,0x91dfc311
  409c3e:	inc    esi
  409c3f:	hlt    
  409c40:	mov    eax,ds:0xe2781ea8
  409c45:	iret   
  409c46:	pop    eax
  409c47:	push   ecx
  409c48:	(bad)  [eax-0xe]
  409c4b:	sahf   
  409c4c:	mov    al,ds:0xe8d1eb28
  409c51:	lock pushf 
  409c53:	retf   
  409c54:	scas   al,BYTE PTR es:[edi]
  409c55:	jmp    0x409bfb
  409c57:	sub    BYTE PTR [esi+0x4f84d2de],ch
  409c5d:	aaa    
  409c5e:	push   ebp
  409c5f:	(bad)  
  409c60:	sbb    eax,0x1e7dc17d
  409c65:	cwde   
  409c66:	cld    
  409c67:	(bad)  
  409c68:	hlt    
  409c69:	cmp    al,0x76
  409c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c6c:	inc    edx
  409c6d:	pop    edx
  409c6e:	pop    es
  409c6f:	in     al,0x5d
  409c71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c72:	pop    ebx
  409c73:	cmp    DWORD PTR [esi+0x1e51ca65],edi
  409c79:	popf   
  409c7a:	fisttp QWORD PTR ss:[esi-0x37]
  409c7e:	into   
  409c7f:	repnz mov WORD PTR [esi],es
  409c82:	in     eax,0xe
  409c84:	pop    ds
  409c85:	jmp    0xa2ca8060
  409c8a:	xor    bl,ah
  409c8c:	stos   DWORD PTR es:[edi],eax
  409c8d:	lods   eax,DWORD PTR ds:[esi]
  409c8e:	js     0x409c2e
  409c90:	add    DWORD PTR [ebx+0x34ab1b22],esp
  409c96:	push   edx
  409c97:	dec    eax
  409c98:	into   
  409c99:	fsubrp st(6),st
  409c9b:	xchg   ebp,eax
  409c9c:	adc    BYTE PTR [ebp-0x19],bh
  409c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ca0:	leave  
  409ca1:	(bad)  
  409ca2:	pop    ds
  409ca3:	sbb    BYTE PTR [edi+0x6715d54b],bh
  409ca9:	ins    DWORD PTR es:[edi],dx
  409caa:	cld    
  409cab:	mov    ebx,0x1df04859
  409cb0:	push   0x319c483e
  409cb5:	mov    esp,0x9e1f22bc
  409cba:	mov    edx,0x7c2fb5f4
  409cbf:	add    edx,DWORD PTR [ecx]
  409cc1:	imul   edx,ebp,0x7378578e
  409cc7:	(bad)  
  409cc8:	pop    eax
  409cc9:	dec    esp
  409cca:	mov    esp,0x43bd75
  409ccf:	sub    DWORD PTR [esi+0x671111f9],eax
  409cd5:	aad    0x3a
  409cd7:	es aaa 
  409cd9:	enter  0x6482,0x1
  409cdd:	retf   
  409cde:	push   0xb
  409ce0:	pop    esi
  409ce1:	mul    DWORD PTR [eax]
  409ce3:	jns    0x409d40
  409ce5:	adc    DWORD PTR [edi-0x5],esi
  409ce8:	adc    esp,ecx
  409cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ceb:	jae    0x409d51
  409ced:	pop    ebp
  409cee:	sub    ah,BYTE PTR [edi]
  409cf0:	std    
  409cf1:	scas   al,BYTE PTR es:[edi]
  409cf2:	push   esp
  409cf3:	stos   DWORD PTR es:[edi],eax
  409cf4:	popa   
  409cf5:	loop   0x409d64
  409cf7:	xchg   edi,eax
  409cf8:	inc    edi
  409cf9:	jne    0x409d35
  409cfb:	out    0x72,al
  409cfd:	pop    ds
  409cfe:	push   es
  409cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d00:	inc    edx
  409d01:	and    BYTE PTR [eax-0x58],ch
  409d04:	dec    ecx
  409d05:	push   edx
  409d06:	pop    esp
  409d07:	cmp    eax,DWORD PTR [eax+eiz*4-0x5d44215d]
  409d0e:	loope  0x409cc8
  409d10:	cmp    bl,BYTE PTR [edx+0x56cb9b23]
  409d16:	xchg   edi,eax
  409d17:	test   edx,edx
  409d19:	sbb    bl,BYTE PTR [ecx-0x3bf5d531]
  409d1f:	push   edx
  409d20:	mov    dh,0x7a
  409d22:	sbb    dl,BYTE PTR [esi-0x14e246bf]
  409d28:	nop
  409d29:	pop    edi
  409d2a:	and    ch,BYTE PTR [ecx]
  409d2c:	fcmovne st,st(7)
  409d2e:	retf   
  409d2f:	adc    eax,0xdfd5cc25
  409d34:	dec    eax
  409d35:	fimul  DWORD PTR [esi-0x1e]
  409d38:	jl     0x409d3f
  409d3a:	and    esi,ecx
  409d3c:	stc    
  409d3d:	stos   BYTE PTR es:[edi],al
  409d3e:	test   BYTE PTR [eax-0x269d9be0],0x45
  409d45:	scas   eax,DWORD PTR es:[edi]
  409d46:	mov    eax,gs:0x55132ab
  409d4c:	sub    ebp,DWORD PTR [esi]
  409d4e:	mov    dh,0x1f
  409d50:	outs   dx,DWORD PTR ds:[esi]
  409d51:	in     al,0x2b
  409d53:	int3   
  409d54:	and    edx,DWORD PTR [eax]
  409d56:	sbb    bh,dl
  409d58:	xchg   DWORD PTR [edx+0x6bae8fda],edx
  409d5e:	mov    ecx,0x61c7ba45
  409d63:	cli    
  409d64:	push   0x810b83b9
  409d69:	push   esi
  409d6a:	lahf   
  409d6b:	push   cs
  409d6c:	out    dx,eax
  409d6d:	gs mov bh,0xa5
  409d70:	addr16 dec edi
  409d72:	pushf  
  409d73:	in     eax,0x10
  409d75:	in     al,dx
  409d76:	retf   0xac51
  409d79:	retf   
  409d7a:	jns    0x409d0e
  409d7c:	test   BYTE PTR [eax+0x78217558],dl
  409d82:	mov    bl,BYTE PTR gs:0x44352576
  409d89:	mov    eax,ds:0x6fa3ba54
  409d8e:	es mov dl,0xba
  409d91:	push   eax
  409d92:	fdiv   QWORD PTR [edx]
  409d94:	int3   
  409d95:	xlat   BYTE PTR ds:[ebx]
  409d96:	retf   
  409d97:	adc    al,0x86
  409d99:	jmp    0x409d70
  409d9b:	(bad)  
  409d9c:	das    
  409d9d:	mov    ch,0xf4
  409d9f:	or     BYTE PTR ds:0xa4ca1e4f,dh
  409da5:	mov    es,WORD PTR [ecx]
  409da7:	scas   eax,DWORD PTR es:[edi]
  409da8:	mov    si,0x41ce
  409dac:	int    0x53
  409dae:	std    
  409daf:	adc    ebx,DWORD PTR [eax]
  409db1:	sub    DWORD PTR [edi+ebx*4],edi
  409db4:	shl    DWORD PTR [esp+ecx*1-0x75],cl
  409db8:	mov    al,ds:0xc3723356
  409dbd:	push   cs
  409dbe:	dec    ebx
  409dbf:	sub    BYTE PTR [ecx+ebx*8+0x37],dl
  409dc3:	xchg   ecx,eax
  409dc4:	in     eax,dx
  409dc5:	adc    ecx,ebx
  409dc7:	adc    eax,0x421604d7
  409dcc:	cs and eax,0x887d6d19
  409dd2:	mov    esi,DWORD PTR [eax+0x1e58e9f0]
  409dd8:	in     eax,0x49
  409dda:	xchg   BYTE PTR [edi-0x6dd3c46c],cl
  409de0:	push   ds
  409de1:	xchg   DWORD PTR [esi],ebx
  409de3:	or     esp,esp
  409de5:	jb     0x409e2c
  409de7:	inc    edi
  409de8:	arpl   WORD PTR [ecx-0x5f],di
  409deb:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  409ded:	sub    eax,0x143ddc79
  409df2:	out    dx,eax
  409df3:	jmp    0xf312:0x2abee568
  409dfa:	ret    
  409dfb:	cwde   
  409dfc:	cmp    DWORD PTR [esi-0x122ac486],ebp
  409e02:	xor    eax,0xe5d841f2
  409e07:	ins    DWORD PTR es:[edi],dx
  409e08:	sbb    BYTE PTR [ebx+0x4a],ch
  409e0b:	add    esp,ecx
  409e0d:	cld    
  409e0e:	inc    esp
  409e0f:	pushf  
  409e10:	xor    DWORD PTR [ebp+0x20e250c0],0x37
  409e17:	add    BYTE PTR ds:0xb6669ec9,bl
  409e1d:	call   0x1b36a7d4
  409e22:	bound  eax,QWORD PTR [ecx-0x40]
  409e25:	or     al,0xe7
  409e27:	pop    ebp
  409e28:	push   0x7a3d0d09
  409e2d:	(bad)  
  409e2e:	call   0x17a4900
  409e33:	sbb    eax,DWORD PTR [eax-0x55]
  409e36:	(bad)  
  409e37:	push   ds
  409e38:	mov    ch,0x6b
  409e3a:	sub    al,0xab
  409e3c:	mov    al,ds:0x9516d9ac
  409e41:	or     eax,0x2a8c9435
  409e46:	jo     0x409ddd
  409e48:	pop    esi
  409e49:	les    ebp,FWORD PTR [esi-0x72566c0b]
  409e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e51:	xor    al,cl
  409e53:	xlat   BYTE PTR ds:[ebx]
  409e54:	mov    ah,0x48
  409e56:	aad    0xaa
  409e58:	mov    WORD PTR [ebp+esi*2+0x29],?
  409e5c:	loopne 0x409ea1
  409e5e:	pusha  
  409e5f:	mov    ch,0x46
  409e61:	jb     0x409ded
  409e63:	jmp    0x409e22
  409e65:	int3   
  409e66:	jge    0x409e5e
  409e68:	shl    BYTE PTR [ecx+0x6a4d51a6],0x98
  409e6f:	ja     0x409e80
  409e71:	scas   eax,DWORD PTR es:[edi]
  409e72:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx+0x1457c083],bl
  40a717:	mov    cl,BYTE PTR [ebx+0x7a046d86]
  40a71d:	jp     0x40a705
  40a71f:	pop    edi
  40a720:	jp     0x40a79c
  40a722:	(bad)  
  40a723:	push   ebp
  40a724:	push   ecx
  40a725:	pop    edi
  40a726:	outs   dx,DWORD PTR ds:[esi]
  40a727:	add    al,0xb2
  40a729:	repz test BYTE PTR [edx],al
  40a72c:	mov    ds:0x8b34b02a,al
  40a731:	cld    
  40a732:	or     BYTE PTR [eax-0x1c3a5776],0xe8
  40a739:	bound  edx,QWORD PTR [eax+0x66]
  40a73c:	call   0x4e15:0xca223c79
  40a743:	cdq    
  40a744:	add    edx,DWORD PTR [ebp+0x27]
  40a747:	sub    al,BYTE PTR [eax]
  40a749:	sbb    ebp,edx
  40a74b:	idiv   DWORD PTR [edi+edx*1+0x3]
  40a74f:	pop    esp
  40a750:	xor    bh,BYTE PTR ds:0xd6815730
  40a756:	fwait
  40a757:	aaa    
  40a758:	mov    BYTE PTR ds:0x31e1518c,ah
  40a75e:	dec    ebx
  40a75f:	in     eax,0x39
  40a761:	sbb    eax,0x7149381e
  40a766:	ret    0xdedc
  40a769:	and    esp,0xd258a3f7
  40a76f:	pop    ss
  40a770:	add    eax,DWORD PTR [eax]
  40a772:	sti    
  40a773:	xchg   esp,eax
  40a774:	or     al,0x3a
  40a776:	mov    ds:0xdb4a061b,eax
  40a77b:	jbe    0x40a752
  40a77d:	xchg   ebx,eax
  40a77e:	jp     0x40a705
  40a780:	inc    eax
  40a781:	mov    ecx,0x202f176a
  40a786:	add    al,0x2e
  40a788:	addr16 dec ecx
  40a78a:	js     0x40a725
  40a78c:	call   0xca6:0xe3b0ca1c
  40a793:	mov    al,ds:0x553a935c
  40a798:	add    eax,0xe632eb38
  40a79d:	push   cs
  40a79e:	scas   al,BYTE PTR es:[edi]
  40a79f:	lods   al,BYTE PTR ds:[esi]
  40a7a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7a1:	xor    esi,DWORD PTR [edi+edx*1-0x72]
  40a7a5:	inc    esi
  40a7a6:	fcomp  QWORD PTR [edx]
  40a7a8:	popa   
  40a7a9:	cmp    ah,BYTE PTR [edi+0x49]
  40a7ac:	lock add BYTE PTR [esi+edx*8-0x323ab065],bh
  40a7b4:	pushf  
  40a7b5:	push   0x36
  40a7b7:	in     eax,dx
  40a7b8:	ds js  0x40a7b3
  40a7bb:	out    0xcd,eax
  40a7bd:	mov    esi,0xa8e8697e
  40a7c2:	test   BYTE PTR [edx+0x2b5df557],al
  40a7c8:	(bad)  
  40a7ca:	fcmovne st,st(6)
  40a7cc:	aas    
  40a7cd:	leave  
  40a7ce:	add    al,0xae
  40a7d0:	xor    cl,0xc2
  40a7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7d4:	xchg   ebp,eax
  40a7d5:	arpl   ax,dx
  40a7d7:	(bad)  
  40a7d8:	mov    dl,BYTE PTR [edi]
  40a7da:	clc    
  40a7db:	je     0x40a7cb
  40a7dd:	or     eax,0xb905bf48
  40a7e2:	fld1   
  40a7e4:	mov    cl,BYTE PTR [ebx+0x45]
  40a7e7:	and    DWORD PTR [edx+eax*2-0xb],0x9cf52fbb
  40a7ef:	mov    eax,ds:0x3d0c68e
  40a7f4:	ds out dx,al
  40a7f6:	in     eax,0x52
  40a7f8:	jmp    0x9a1d:0xcfac4712
  40a7ff:	jge    0x40a846
  40a801:	lahf   
  40a802:	xor    cl,cl
  40a804:	xlat   BYTE PTR ds:[ebx]
  40a805:	jecxz  0x40a834
  40a807:	out    0x4f,al
  40a809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a80a:	ss mov BYTE PTR gs:[edx+0x30fe28ff],0xa
  40a813:	ret    
  40a814:	push   esi
  40a815:	scas   al,BYTE PTR es:[edi]
  40a816:	ret    
  40a817:	out    dx,eax
  40a818:	mov    ebp,0x4f9a524a
  40a81d:	(bad)  
  40a81e:	cmp    BYTE PTR [edi],bl
  40a820:	sti    
  40a821:	xor    edi,DWORD PTR [ebx+eiz*1-0xff02f0b]
  40a828:	sub    bh,dl
  40a82a:	lods   eax,DWORD PTR ds:[esi]
  40a82b:	jb     0x40a7f4
  40a82d:	mov    al,ds:0xf60e32af
  40a832:	or     DWORD PTR [ebx+0x26],ebp
  40a835:	xchg   ebx,eax
  40a836:	(bad)  
  40a837:	in     eax,dx
  40a838:	and    DWORD PTR [edx+0x5462246f],ebp
  40a83e:	scas   al,BYTE PTR es:[edi]
  40a83f:	xchg   ecx,eax
  40a840:	mov    al,0x2e
  40a842:	mov    esi,0xb5afa733
  40a847:	cmp    DWORD PTR [ecx+0x10],ebp
  40a84a:	jp     0x40a8c3
  40a84c:	aad    0x51
  40a84e:	fs mov ch,0xdb
  40a851:	ins    BYTE PTR es:[edi],dx
  40a852:	stc    
  40a853:	dec    ebx
  40a854:	push   0x1e
  40a856:	test   eax,0x7ff1d40a
  40a85b:	retf   
  40a85c:	ss imul ebp,eax,0x9e0ce7a1
  40a863:	ret    
  40a864:	mov    ?,WORD PTR [edi+0x523ea5b5]
  40a86a:	push   edi
  40a86b:	adc    eax,0x671a58d8
  40a870:	fimul  DWORD PTR [ebp+0x4b]
  40a873:	pop    esp
  40a874:	jns    0x40a7f7
  40a876:	mov    ecx,0xbb152eff
  40a87b:	xchg   ebp,eax
  40a87c:	mov    ds:0x1542503,al
  40a881:	or     bh,BYTE PTR [edi]
  40a883:	add    dh,BYTE PTR [eax]
  40a885:	xchg   ecx,eax
  40a886:	pusha  
  40a887:	ins    BYTE PTR es:[edi],dx
  40a888:	retf   
  40a889:	jg     0x40a8e6
  40a88b:	enter  0xe5fd,0x36
  40a88f:	mov    DWORD PTR [edx-0x63],ecx
  40a892:	mov    ds:0xe7f4cd66,al
  40a897:	mov    edi,0x4e4ec783
  40a89c:	mov    es,WORD PTR [edi+0x29a6274a]
  40a8a2:	sbb    eax,0x5e26739a
  40a8a7:	into   
  40a8a8:	ds mov ch,0x27
  40a8ab:	out    dx,al
  40a8ac:	mov    ecx,0xd2cb0158
  40a8b1:	pop    ss
  40a8b2:	push   ecx
  40a8b3:	sub    DWORD PTR [esi-0x10d04942],eax
  40a8b9:	mov    fs,WORD PTR [ecx+0x4a]
  40a8bc:	cmp    DWORD PTR es:[esi-0x51a95427],ecx
  40a8c3:	lds    ecx,FWORD PTR gs:[esi-0x6]
  40a8c7:	or     DWORD PTR [eax-0x35],0x2c063f6
  40a8ce:	dec    eax
  40a8cf:	mov    esi,DWORD PTR ds:0x91c180f1
  40a8d5:	fisubr WORD PTR [ebx+0x6ff9cbcc]
  40a8db:	or     al,0x23
  40a8dd:	ret    0x7e20
  40a8e0:	xchg   ebp,eax
  40a8e1:	xor    esi,DWORD PTR [esi+0x474237df]
  40a8e7:	loope  0x40a901
  40a8e9:	call   FWORD PTR [ecx]
  40a8eb:	addr16 fwait
  40a8ed:	push   esi
  40a8ee:	inc    ecx
  40a8ef:	jns    0x40a963
  40a8f1:	and    al,0x9e
  40a8f3:	fnsave [ebx-0x7c]
  40a8f6:	ffree  st(5)
  40a8f8:	add    DWORD PTR [ebp-0x795f72f7],edi
  40a8fe:	xchg   ch,dl
  40a900:	jb     0x40a8ac
  40a902:	pop    es
  40a903:	cli    
  40a904:	xchg   edx,eax
  40a905:	add    DWORD PTR [esi+0x36ce6bcb],ebx
  40a90b:	lahf   
  40a90c:	mov    edi,0x66a0ca81
  40a911:	pop    esp
  40a912:	popa   
  40a913:	cs pop eax
  40a915:	dec    edx
  40a916:	out    dx,al
  40a917:	repnz xchg esi,eax
  40a919:	mov    bl,0xfb
  40a91b:	loopne 0x40a924
  40a91d:	popa   
  40a91e:	ret    0x6eb1
  40a921:	test   al,0x39
  40a923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a924:	arpl   WORD PTR [ebx-0x14c7da2c],bp
  40a92a:	mov    ecx,0xb9d7c670
  40a92f:	mov    WORD PTR [edi+0x4c],es
  40a932:	inc    esp
  40a933:	call   0x3fed:0x8012829b
  40a93a:	repnz pop ebx
  40a93c:	retf   
  40a93d:	lahf   
  40a93e:	inc    ebx
  40a93f:	and    BYTE PTR [ecx],0xd7
  40a942:	jmp    0x21ed3410
  40a947:	or     BYTE PTR [esi-0x10],bh
  40a94a:	adc    bh,BYTE PTR [eax]
  40a94c:	and    eax,0x64113f55
  40a951:	push   esi
  40a952:	icebp  
  40a953:	push   ebx
  40a954:	cdq    
  40a955:	hlt    
  40a956:	xchg   esi,eax
  40a957:	push   ecx
  40a958:	inc    ebp
  40a959:	and    ebp,ebx
  40a95b:	inc    ecx
  40a95c:	push   esp
  40a95d:	popf   
  40a95e:	dec    esi
  40a95f:	xchg   ebp,eax
  40a960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a961:	gs jb  0x40a93f
  40a964:	iret   
  40a965:	or     dh,BYTE PTR [ebp+ebx*4-0x682076aa]
  40a96c:	inc    edx
  40a96d:	jae    0x40a91b
  40a96f:	cmc    
  40a970:	push   es
  40a971:	sbb    ch,BYTE PTR ds:0xe90344b9
  40a977:	in     al,dx
  40a978:	xchg   edx,eax
  40a979:	adc    al,0xa1
  40a97b:	ins    DWORD PTR es:[edi],dx
  40a97c:	clc    
  40a97d:	popf   
  40a97e:	add    al,0x45
  40a980:	add    eax,0x7db6e18a
  40a985:	retf   0xd81f
  40a988:	imul   edi,DWORD PTR [edi],0xfffffff5
  40a98b:	ret    
  40a98c:	loop   0x40a951
  40a98e:	xchg   esp,eax
  40a98f:	sbb    eax,0xeedb2e15
  40a994:	adc    BYTE PTR [edi-0x2a],ah
  40a997:	pop    edx
  40a999:	ret    0xb516
  40a99c:	pop    edi
  40a99d:	lods   eax,DWORD PTR ds:[esi]
  40a99e:	not    DWORD PTR [ebx]
  40a9a0:	add    ecx,DWORD PTR [ebp-0x4e299a45]
  40a9a6:	imul   ecx,DWORD PTR [ebp+0x76ba2e3b],0xffffff8a
  40a9ad:	(bad)  
  40a9af:	ret    
  40a9b0:	and    DWORD PTR [ecx],esp
  40a9b2:	jp     0x40a9a3
  40a9b4:	dec    ecx
  40a9b5:	ins    BYTE PTR es:[edi],dx
  40a9b6:	jno    0x40a948
  40a9b8:	dec    eax
  40a9b9:	loope  0x40aa06
  40a9bb:	mov    eax,0xb82ac0e9
  40a9c0:	mov    esp,0x8624a811
  40a9c5:	adc    BYTE PTR [edi],al
  40a9c7:	cdq    
  40a9c8:	loope  0x40a99d
  40a9ca:	mov    bh,0x8b
  40a9cc:	or     BYTE PTR [ebp-0x2905bb2d],ch
  40a9d2:	push   esi
  40a9d3:	and    BYTE PTR [esi],ah
  40a9d5:	pop    esi
  40a9d6:	(bad)  
  40a9d7:	adc    al,0x30
  40a9d9:	test   al,0xf9
  40a9db:	push   esi
  40a9dc:	sub    al,0x32
  40a9de:	ins    DWORD PTR es:[edi],dx
  40a9df:	pop    ebp
  40a9e0:	adc    DWORD PTR [eax-0x36],ecx
  40a9e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9e4:	dec    esi
  40a9e5:	aas    
  40a9e6:	mov    ecx,0x6346448d
  40a9eb:	sub    eax,0xa7eb0045
  40a9f0:	stos   BYTE PTR es:[edi],al
  40a9f1:	xor    dl,BYTE PTR es:0xa04af664
  40a9f8:	jge    0x40a9c6
  40a9fa:	inc    esp
  40a9fb:	inc    edx
  40a9fc:	call   0x32180acb
  40aa01:	jnp    0x40a9c7
  40aa03:	sbb    edx,esp
  40aa05:	sti    
  40aa06:	or     eax,0x7b6aeeaa
  40aa0b:	xlat   BYTE PTR ds:[ebx]
  40aa0c:	mov    esp,0x51c2fbc2
  40aa11:	xchg   esp,eax
  40aa12:	push   ss
  40aa13:	xor    BYTE PTR [ecx-0x5dd3ab3],bh
  40aa19:	sub    al,0x93
  40aa1b:	mov    WORD PTR ds:0xd4d6789,?
  40aa21:	loop   0x40aa8a
  40aa23:	jb     0x40aa27
  40aa25:	and    al,0xdc
  40aa27:	rol    ch,1
  40aa29:	arpl   WORD PTR [ebx-0xb],ax
  40aa2c:	adc    al,0x97
  40aa2f:	jl     0x40aa8d
  40aa31:	dec    edi
  40aa32:	cmp    bl,BYTE PTR [edi-0x20558b4e]
  40aa38:	daa    
  40aa39:	in     eax,dx
  40aa3a:	push   esp
  40aa3b:	lock idiv DWORD PTR [esp]
  40aa3f:	jns    0x40aa0b
  40aa41:	mov    edx,0x1a8b457f
  40aa46:	nop    DWORD PTR [esi-0x6b]
  40aa4a:	mov    ?,WORD PTR [edi+0x2024d66c]
  40aa50:	or     ah,BYTE PTR [edx+0x71fe58be]
  40aa56:	cli    
  40aa57:	cmp    BYTE PTR [eax-0x36],0x41
  40aa5b:	ins    DWORD PTR es:[edi],dx
  40aa5c:	test   BYTE PTR [esi+eiz*2-0x1ee55398],bh
  40aa63:	xchg   edi,eax
  40aa64:	or     bl,BYTE PTR [esi]
  40aa66:	xor    eax,0x32af9f08
  40aa6b:	stos   BYTE PTR es:[edi],al
  40aa6c:	call   0xaea4:0xc5356348
  40aa73:	xor    al,0xee
  40aa75:	out    0xaf,eax
  40aa77:	cmp    BYTE PTR [esp+eax*2],bl
  40aa7a:	sbb    BYTE PTR [eax+esi*1],cl
  40aa7d:	xor    bl,BYTE PTR [ebp-0x71e2d9bb]
  40aa83:	jge    0x40aad0
  40aa85:	fisttp DWORD PTR [eax+0x2532e963]
  40aa8b:	dec    ebx
  40aa8c:	pop    edi
  40aa8d:	les    edi,FWORD PTR [eax-0x6a]
  40aa90:	push   0xfffffff7
  40aa92:	sti    
  40aa93:	rol    DWORD PTR [ebx+0x3a],1
  40aa96:	cmp    al,0xc2
  40aa98:	inc    ebp
  40aa99:	popf   
  40aa9a:	and    eax,0xff3e89c
  40aa9f:	addr16 adc eax,0x1e053274
  40aaa5:	mov    esp,gs
  40aaa7:	inc    DWORD PTR [edx-0x62]
  40aaaa:	mov    dl,0x3a
  40aaac:	inc    ebx
  40aaad:	out    0xf5,eax
  40aaaf:	add    bh,BYTE PTR [ecx-0x439b1eea]
  40aab5:	scas   eax,DWORD PTR es:[edi]
  40aab6:	push   cs
  40aab7:	popf   
  40aab8:	mov    BYTE PTR [eax],0xc3
  40aabb:	fidivr WORD PTR [ebx]
  40aabd:	jno    0x40aae8
  40aabf:	or     al,0xb1
  40aac1:	das    
  40aac2:	xor    bh,BYTE PTR [edi-0x33457e04]
  40aac8:	cli    
  40aac9:	inc    edi
  40aaca:	shl    BYTE PTR [ebp+0x5314e76d],0x8e
  40aad1:	rcl    DWORD PTR [ebx+0x1fd9448d],1
  40aad7:	test   eax,0xa9048c4
  40aadc:	dec    ebp
  40aadd:	cli    
  40aade:	xchg   esi,eax
  40aadf:	call   0xfdc30752
  40aae4:	mov    edi,0xb2f6fe2e
  40aae9:	ss in  eax,0x90
  40aaec:	add    cl,cl
  40aaee:	add    DWORD PTR [ebx-0x4a7e5ede],esp
  40aaf4:	mov    al,ds:0xbb15fe37
  40aaf9:	jge    0x40aaa0
  40aafb:	mov    dh,BYTE PTR [esi+ecx*1-0x3e]
  40aaff:	push   eax
  40ab00:	enter  0xf50a,0x8b
  40ab04:	in     eax,dx
  40ab05:	ror    BYTE PTR [edx+0x6f],1
  40ab08:	mov    ebx,0x7b74a726
  40ab0d:	scas   al,BYTE PTR es:[edi]
  40ab0e:	sub    DWORD PTR [eax+ebx*2],ecx
  40ab11:	or     eax,0x9c18c45
  40ab16:	cwde   
  40ab17:	sbb    BYTE PTR [esi],0xce
  40ab1a:	ret    0x8fc5
  40ab1d:	adc    eax,0x4ce497f4
  40ab22:	jbe    0x40aad4
  40ab24:	pop    ss
  40ab25:	sbb    al,0xc0
  40ab27:	jnp    0x40ab5f
  40ab29:	sahf   
  40ab2a:	and    eax,edx
  40ab2c:	stos   BYTE PTR es:[edi],al
  40ab2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab2e:	ins    BYTE PTR es:[edi],dx
  40ab2f:	popa   
  40ab30:	lea    edx,[edx]
  40ab32:	add    ecx,0xffffffcd
  40ab35:	cmp    BYTE PTR [edx+0x40],0x9a
  40ab39:	or     eax,0x5e5237ad
  40ab3e:	mov    al,ds:0x19093413
  40ab43:	inc    ecx
  40ab44:	ds push es
  40ab46:	aas    
  40ab47:	push   cs
  40ab48:	mov    edx,0x9a7b6f1
  40ab4d:	not    DWORD PTR [ecx-0x17]
  40ab50:	movntq QWORD PTR [edx],mm2
  40ab53:	jmp    FWORD PTR [ebp-0x50a6d2bc]
  40ab59:	and    ecx,edx
  40ab5b:	leave  
  40ab5c:	jb     0x40ab09
  40ab5e:	loopne 0x40abdc
  40ab60:	into   
  40ab61:	out    dx,al
  40ab62:	xor    DWORD PTR [ebx],ebp
  40ab64:	mov    ch,0xd1
  40ab66:	jne    0x40aaf1
  40ab68:	jbe    0x40ab7d
  40ab6a:	add    DWORD PTR ds:0x99ea0eeb,ecx
  40ab70:	cli    
  40ab71:	pushf  
  40ab72:	inc    edi
  40ab73:	add    DWORD PTR [edi],0x756fb607
  40ab79:	rol    eax,cl
  40ab7b:	pop    ss
  40ab7c:	cmp    ebp,DWORD PTR [ebp+eiz*8+0x60]
  40ab80:	sti    
  40ab81:	push   esp
  40ab82:	sbb    al,0x7b
  40ab84:	stos   BYTE PTR es:[edi],al
  40ab85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab86:	iret   
  40ab87:	scas   eax,DWORD PTR es:[edi]
  40ab88:	push   ecx
  40ab89:	scas   eax,DWORD PTR es:[edi]
  40ab8a:	jmp    0x9b2d:0x4497a460
  40ab91:	xlat   BYTE PTR ds:[ebx]
  40ab92:	cmp    BYTE PTR [eax-0x5ed6b5c0],bl
  40ab98:	push   edi
  40ab99:	pop    ebx
  40ab9a:	mov    ebp,0x8df823fc
  40ab9f:	je     0x40ab34
  40aba1:	and    al,0x44
  40aba3:	lods   eax,DWORD PTR ds:[esi]
  40aba4:	aas    
  40aba5:	aad    0xcd
  40aba7:	push   ebx
  40aba8:	test   al,0x39
  40abaa:	push   0x4131f96e
  40abaf:	iret   
  40abb0:	push   eax
  40abb1:	and    edi,ecx
  40abb3:	mov    DWORD PTR [ecx+0x76],ebp
  40abb6:	add    BYTE PTR [eax-0x26d22dd1],dl
  40abbc:	sbb    al,0xb9
  40abbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abbf:	or     BYTE PTR [ebp+0x23b4054b],al
  40abc5:	mov    ds:0xacb45eda,eax
  40abca:	aas    
  40abcb:	lods   al,BYTE PTR ds:[esi]
  40abcc:	sub    edx,eax
  40abce:	lock cmp al,0x3d
  40abd1:	inc    edi
  40abd2:	sub    edx,DWORD PTR [ecx-0x25aa6f2e]
  40abd8:	sbb    eax,0xba90b59b
  40abdd:	arpl   WORD PTR [ecx-0x48cd5975],si
  40abe3:	iret   
  40abe4:	jmp    0x57ed:0xd5f14a85
  40abeb:	out    0xed,eax
  40abed:	std    
  40abee:	fiadd  DWORD PTR [eax+ebp*4]
  40abf1:	stos   BYTE PTR es:[edi],al
  40abf2:	dec    eax
  40abf3:	cld    
  40abf4:	int    0xfd
  40abf6:	dec    edi
  40abf7:	pop    ebp
  40abf8:	push   edx
  40abf9:	pusha  
  40abfa:	fcomp  DWORD PTR [ecx]
  40abfc:	shl    DWORD PTR [esi-0x4f],1
  40abff:	repnz inc eax
  40ac01:	fdiv   DWORD PTR [eax]
  40ac03:	xchg   esi,eax
  40ac04:	cmp    BYTE PTR [edi],ah
  40ac06:	sbb    DWORD PTR [ebx+0x6de6427b],ebx
  40ac0c:	jnp    0x40ac61
  40ac0e:	pop    ds
  40ac0f:	pop    ebp
  40ac10:	fdiv   QWORD PTR [ebp-0x27720797]
  40ac16:	inc    ecx
  40ac17:	cmp    ebp,esp
  40ac19:	or     eax,0x694ea9e7
  40ac1e:	push   ebp
  40ac1f:	rol    DWORD PTR [ebp-0x6b],1
  40ac22:	xor    DWORD PTR [ebp+0x611ea562],eax
  40ac28:	mov    esi,0x18204460
  40ac2d:	add    DWORD PTR [esi+0x34f05f0e],esi
  40ac33:	stos   DWORD PTR es:[edi],eax
  40ac34:	ss leave 
  40ac36:	push   ecx
  40ac37:	ret    
  40ac38:	xchg   BYTE PTR [esi+0x1c],ah
  40ac3b:	mov    dh,0x8f
  40ac3d:	fwait
  40ac3e:	stc    
  40ac3f:	repnz add al,0x2b
  40ac42:	adc    BYTE PTR [ebp-0x46632623],bh
  40ac48:	shl    BYTE PTR [esi-0x2a6c2150],1
  40ac4e:	mov    ah,0xe4
  40ac50:	fwait
  40ac51:	mov    esp,0x6890b492
  40ac56:	xchg   ecx,eax
  40ac57:	lock push ss
  40ac59:	pop    ebp
  40ac5a:	std    
  40ac5b:	pop    ebx
  40ac5c:	lea    ebp,[esi+0x56]
  40ac5f:	popa   
  40ac60:	sub    al,0x47
  40ac62:	mov    ?,WORD PTR [edi+0x3433a3b8]
  40ac68:	int    0x5f
  40ac6a:	test   BYTE PTR [eax-0x53],dh
  40ac6d:	call   0xf5b3770b
  40ac72:	sub    BYTE PTR [edx+ebx*8-0x6d],bh
  40ac76:	push   esi
  40ac77:	or     al,0xaa
  40ac79:	das    
  40ac7a:	ret    
  40ac7b:	mov    eax,0x6aeb1181
  40ac80:	fs je  0x40acac
  40ac83:	cld    
  40ac84:	xor    ah,BYTE PTR [ecx]
  40ac86:	ret    
  40ac87:	fidivr WORD PTR [edi+0x55]
  40ac8a:	push   es
  40ac8b:	std    
  40ac8c:	dec    esp
  40ac8d:	mov    esi,0x52b84e23
  40ac92:	jl     0x40ad0a
  40ac94:	sti    
  40ac95:	call   0x16d34cde
  40ac9a:	jle    0x40ad04
  40ac9c:	(bad)  
  40ac9d:	dec    ebx
  40ac9e:	sti    
  40ac9f:	xor    al,0x51
  40aca1:	shl    BYTE PTR [edi],0x75
  40aca4:	jns    0x40ac63
  40aca6:	mov    al,0xdd
  40aca8:	and    esi,eax
  40acaa:	or     eax,0xda7a9deb
  40acaf:	repnz or ah,BYTE PTR [ecx+esi*8-0x6b9cecd1]
  40acb7:	xor    al,0x54
  40acb9:	cmp    DWORD PTR [eax+0x3b],0xffffff83
  40acbd:	clc    
  40acbe:	xlat   BYTE PTR ds:[ebx]
  40acbf:	shr    BYTE PTR [esp+edi*1],0xf1
  40acc3:	mul    bh
  40acc5:	je     0x40ac96
  40acc7:	xor    DWORD PTR [edx],esi
  40acc9:	add    BYTE PTR [ecx+0x3a0bd859],bl
  40accf:	jnp    0x40acde
  40acd1:	les    esp,FWORD PTR [eax+0x10]
  40acd4:	test   BYTE PTR [ebx+ebp*8-0x65],dl
  40acd8:	rcr    BYTE PTR [esp+eiz*2+0x44],1
  40acdc:	adc    eax,0x2651ac80
  40ace1:	cmp    BYTE PTR [esi+0x79],bh
  40ace4:	xor    BYTE PTR [eax-0x3a5949f8],dh
  40acea:	sub    BYTE PTR [ebp+0x52],bl
  40aced:	mov    dl,BYTE PTR [ecx]
  40acef:	sbb    edi,esp
  40acf1:	enter  0x98bb,0x88
  40acf5:	xchg   ebx,eax
  40acf6:	(bad)  
  40acf7:	fs jne 0x40acd2
  40acfa:	mov    ds:0x3f7b8f8,al
  40acff:	mov    ?,WORD PTR ds:0x2d870a89
  40ad05:	iret   
  40ad06:	inc    eax
  40ad07:	daa    
  40ad08:	xchg   ebp,eax
  40ad09:	mov    ebx,0xf0c8bdad
  40ad0e:	pushf  
  40ad0f:	stos   DWORD PTR es:[edi],eax
  40ad10:	or     al,0xf6
  40ad12:	cwde   
  40ad13:	sub    ch,ah
  40ad15:	fsub   DWORD PTR [esi]
  40ad17:	fmulp  st(0),st
  40ad19:	inc    edx
  40ad1a:	adc    ecx,DWORD PTR [edx+0x33]
  40ad1d:	xchg   esp,eax
  40ad1e:	fisub  WORD PTR [esp+ecx*1-0x6b]
  40ad22:	fld    QWORD PTR [eax]
  40ad24:	xchg   ecx,eax
  40ad25:	push   edi
  40ad26:	pushf  
  40ad27:	dec    esp
  40ad28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad29:	ficom  DWORD PTR [eax+0x7f]
  40ad2c:	mov    esp,0x86b5202d
  40ad31:	ds stos BYTE PTR es:[edi],al
  40ad33:	mov    ch,0x5a
  40ad35:	mov    ch,0x99
  40ad37:	aam    0x9c
  40ad39:	inc    edi
  40ad3a:	cmp    DWORD PTR [edx],eax
  40ad3c:	cmp    cl,BYTE PTR [edx]
  40ad3e:	repz jne 0x40ace3
  40ad41:	push   ebp
  40ad42:	push   ebx
  40ad43:	dec    DWORD PTR [ebx]
  40ad45:	imul   ebx,DWORD PTR [edi],0xffffff96
  40ad48:	fwait
  40ad49:	out    0xb9,al
  40ad4b:	das    
  40ad4c:	jo     0x40acf0
  40ad4e:	shl    BYTE PTR [eax+0x63],0x5b
  40ad52:	adc    al,BYTE PTR [edi+ebx*2]
  40ad55:	xor    edi,DWORD PTR [edi+eiz*4-0x403902fa]
  40ad5c:	in     al,0x66
  40ad5e:	test   BYTE PTR [edx],cl
  40ad60:	mov    bh,0x47
  40ad62:	add    BYTE PTR [esi-0x38b06f19],0x1
  40ad69:	popa   
  40ad6a:	repz repnz sbb DWORD PTR [eax-0x468d2e50],0xffffff8c
  40ad73:	sub    BYTE PTR [ebx],dl
  40ad75:	pop    es
  40ad76:	test   edi,edx
  40ad78:	in     eax,dx
  40ad79:	fsub   st,st(7)
  40ad7b:	xchg   esp,eax
  40ad7c:	gs dec edi
  40ad7e:	mov    ch,BYTE PTR [esp+eiz*2]
  40ad81:	stos   DWORD PTR es:[edi],eax
  40ad82:	je     0x40ad3c
  40ad84:	(bad)  
  40ad85:	jne    0x40add1
  40ad87:	sub    DWORD PTR [ecx+0x6],ebx
  40ad8a:	ja     0x40ad9c
  40ad8c:	enter  0x939e,0x68
  40ad90:	push   ebx
  40ad91:	adc    al,0x5
  40ad93:	mov    DWORD PTR [ebx+0x3b],ebp
  40ad96:	xor    DWORD PTR [ecx-0x32],0x5579a4c6
  40ad9d:	dec    edi
  40ad9e:	mov    ch,ah
  40ada0:	mov    BYTE PTR [esi+ecx*4-0x38],al
  40ada4:	lods   al,BYTE PTR ds:[esi]
  40ada5:	and    bl,BYTE PTR [ecx+0x1905e482]
  40adab:	pushf  
  40adac:	mov    cx,WORD PTR [esi+0x2508c6b5]
  40adb3:	lock mov ds:0x9f007c3c,eax
  40adb9:	add    BYTE PTR [edx],0x51
  40adbc:	enter  0x9f67,0xfd
  40adc0:	fwait
  40adc1:	into   
  40adc2:	and    DWORD PTR [edi],esp
  40adc4:	test   ah,ah
  40adc6:	pop    eax
  40adc7:	imul   eax,DWORD PTR ds:0x1eac852d,0x3f
  40adce:	scas   eax,DWORD PTR es:[edi]
  40adcf:	adc    al,0x36
  40add1:	jp     0x40ad7a
  40add3:	enter  0x4070,0x31
  40add7:	mov    ds:0x593fbf9f,eax
  40addc:	daa    
  40addd:	mov    ds:0xababb300,eax
  40ade2:	popf   
  40ade3:	rcl    BYTE PTR [ecx+ebx*4],0x50
  40ade7:	(bad)  
  40ade8:	dec    ebp
  40ade9:	mov    ecx,0xc8f9109c
  40adee:	retf   
  40adef:	je     0x40ae1e
  40adf1:	out    dx,eax
  40adf2:	loop   0x40ad78
  40adf4:	imul   ecx,DWORD PTR [esp+esi*1-0xaaa77a6],0xf7bc75bf
  40adff:	jbe    0x40adfe
  40ae01:	shl    DWORD PTR [esi-0x2],cl
  40ae04:	xchg   ebx,eax
  40ae05:	sbb    dl,BYTE PTR [esi+0x36a8e100]
  40ae0b:	test   al,0xd5
  40ae0d:	mov    esi,0xec1755ab
  40ae12:	jae    0x40ade2
  40ae14:	jge    0x40ae30
  40ae16:	push   eax
  40ae17:	test   BYTE PTR [eax-0x76],dh
  40ae1a:	out    0xd8,al
  40ae1c:	(bad)  
  40ae1d:	sub    eax,0x768cfe12
  40ae22:	mov    edx,0x5b0032f9
  40ae27:	xchg   DWORD PTR [eax-0x6ad7a9c3],ebx
  40ae2d:	scas   eax,DWORD PTR es:[edi]
  40ae2e:	mov    ch,dh
  40ae30:	popf   
  40ae31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae32:	(bad)  
  40ae33:	dec    ebp
  40ae34:	dec    ecx
  40ae35:	push   edx
  40ae36:	in     eax,dx
  40ae37:	cmc    
  40ae38:	xlat   BYTE PTR ds:[ebx]
  40ae39:	sub    al,0xf2
  40ae3b:	jbe    0x40ae5b
  40ae3d:	in     eax,0xc2
  40ae3f:	xchg   edx,eax
  40ae40:	xor    dl,ch
  40ae42:	int3   
  40ae43:	sbb    edi,0x11a4f1ba
  40ae49:	enter  0x3577,0x7e
  40ae4d:	dec    eax
  40ae4e:	push   esp
  40ae4f:	mov    ebp,0x72924470
  40ae54:	out    0xc3,al
  40ae56:	mov    eax,0xb76be635
  40ae5b:	out    0x36,al
  40ae5d:	cdq    
  40ae5e:	fisub  DWORD PTR [eax+ecx*2+0x61]
  40ae62:	mov    edi,0x9a8d4eee
  40ae67:	punpckhdq mm4,QWORD PTR [ebp-0x52]
  40ae6b:	mov    dl,0x85
  40ae6d:	scas   eax,DWORD PTR es:[edi]
  40ae6e:	rcl    DWORD PTR [ecx-0x39],0x98
  40ae72:	in     eax,0x53
  40ae74:	xchg   edi,eax
  40ae75:	shr    DWORD PTR [ebp-0x57],cl
  40ae78:	fstp   QWORD PTR [ecx+0x24]
  40ae7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae7c:	inc    edx
  40ae7d:	dec    ebx
  40ae7e:	aas    
  40ae7f:	inc    edx
  40ae80:	dec    ecx
  40ae81:	call   0x167d992
  40ae86:	bound  edi,QWORD PTR [esp+edx*4-0x6c60b37a]
  40ae8d:	jne    0x40aea3
  40ae8f:	inc    esp
  40ae90:	cli    
  40ae91:	addr16 lock aad 0x5c
  40ae95:	mov    WORD PTR [edi],es
  40ae97:	add    bl,BYTE PTR [esi]
  40ae99:	jg     0x40ae7d
  40ae9b:	adc    al,0xc7
  40ae9d:	pop    ss
  40ae9e:	push   DWORD PTR [ebx]
  40aea0:	mov    al,0x13
  40aea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea3:	sub    eax,0xcf057d24
  40aea8:	aad    0xf8
  40aeaa:	hlt    
  40aeab:	jae    0x40aec2
  40aead:	sbb    DWORD PTR [ebx+eiz*8+0x1],ebx
  40aeb1:	jne    0x40aed8
  40aeb3:	iret   
  40aeb4:	cmp    BYTE PTR [edi],al
  40aeb6:	push   edx
  40aeb7:	jl     0x40aed8
  40aeb9:	scas   al,BYTE PTR es:[edi]
  40aeba:	mov    ecx,0x41ee66c3
  40aebf:	jmp    0x40aedd
  40aec1:	pop    edx
  40aec2:	imul   edi,DWORD PTR [ecx],0x3f82b2bb
  40aec8:	pop    ebp
  40aec9:	mov    eax,DWORD PTR [ecx-0x708cbe59]
  40aecf:	mov    al,ds:0x446cd238
  40aed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aed5:	sbb    esp,DWORD PTR [eax+0x8]
  40aed8:	lods   eax,DWORD PTR ds:[esi]
  40aed9:	leave  
  40aeda:	std    
  40aedb:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aedd:	dec    dx
  40aedf:	bound  esp,QWORD PTR [edx-0x31f5adef]
  40aee5:	call   0x101627be
  40aeea:	jnp    0x40af4d
  40aeec:	les    edi,FWORD PTR [edx+esi*8-0x5c]
  40aef0:	pop    edi
  40aef1:	out    0xa4,eax
  40aef3:	pop    eax
  40aef4:	xchg   esp,eax
  40aef5:	pop    edi
  40aef6:	pop    esp
  40aef7:	out    dx,al
  40aef8:	popa   
  40aef9:	adc    BYTE PTR [esi-0x14e5cebd],ch
  40aeff:	jns    0x40af1c
  40af01:	mov    ebp,0xe8909a07
  40af06:	outs   dx,DWORD PTR ds:[esi]
  40af07:	mov    BYTE PTR ds:0x661e0b7f,bh
  40af0d:	aam    0x3a
  40af0f:	rcr    bh,cl
  40af11:	mov    DWORD PTR [ecx+0x70],ebp
  40af14:	pop    es
  40af15:	sub    al,BYTE PTR [eax+0x79]
  40af18:	es pop ds
  40af1a:	stc    
  40af1b:	sub    eax,0x8fa6c98c
  40af20:	xchg   BYTE PTR [eax-0x10d2e6f0],al
  40af26:	out    dx,eax
  40af27:	out    0xae,al
  40af29:	dec    ebp
  40af2a:	push   edx
  40af2b:	popa   
  40af2c:	(bad)  
  40af2d:	xchg   esi,eax
  40af2e:	lods   al,BYTE PTR es:[esi]
  40af30:	xchg   edi,eax
  40af31:	push   eax
  40af32:	xchg   edi,eax
  40af33:	sub    al,0x75
  40af35:	test   BYTE PTR [ecx-0x3405c6b8],0x41
  40af3c:	xchg   edx,esi
  40af3e:	mov    ecx,0x93536b60
  40af43:	mov    ebp,0x153b696d
  40af48:	mov    ecx,ecx
  40af4a:	stos   BYTE PTR es:[edi],al
  40af4b:	sub    BYTE PTR [esi],al
  40af4d:	sub    BYTE PTR [ecx+0x1ff2527],bl
  40af53:	test   DWORD PTR [esi],edi
  40af55:	xchg   DWORD PTR [ebx-0xb03dd85],esp
  40af5b:	dec    ebx
  40af5c:	hlt    
  40af5d:	sbb    DWORD PTR [ecx],ecx
  40af5f:	lds    ebp,FWORD PTR [eax+0x57]
  40af62:	es ins DWORD PTR es:[edi],dx
  40af64:	fld    st(4)
  40af66:	iret   
  40af67:	inc    edx
  40af68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af69:	and    al,0xfd
  40af6b:	pop    ecx
  40af6c:	mov    dl,0x4c
  40af6e:	out    dx,al
  40af6f:	clc    
  40af70:	call   0x27da493c
  40af75:	inc    edx
  40af76:	inc    ebx
  40af77:	rcr    BYTE PTR [eax+eiz*8],1
  40af7a:	sbb    esi,esp
  40af7c:	imul   ebx,DWORD PTR [esi],0x508d182f
  40af82:	cdq    
  40af83:	fwait
  40af84:	loop   0x40af4d
  40af86:	daa    
  40af87:	push   esp
  40af88:	sub    esi,ecx
  40af8a:	retf   0x6daa
  40af8d:	stos   DWORD PTR es:[edi],eax
  40af8e:	jl     0x40af3f
  40af90:	(bad)  
  40af91:	xor    al,0x60
  40af93:	fisttp WORD PTR [eax+0x37]
  40af96:	pop    ebx
  40af97:	retf   0xd6a3
  40af9a:	stos   BYTE PTR es:[edi],al
  40af9b:	pop    ecx
  40af9c:	mov    edx,0xe980c181
  40afa1:	or     eax,0x81b6115e
  40afa6:	inc    edx
  40afa7:	xchg   esi,eax
  40afa8:	jnp    0x40b010
  40afaa:	add    bl,BYTE PTR [ebx]
  40afac:	inc    ebx
  40afad:	pop    ebp
  40afae:	cmc    
  40afaf:	rol    DWORD PTR [eax+ebx*8+0x4e],cl
  40afb3:	and    DWORD PTR [ebx],ecx
  40afb5:	dec    esp
  40afb6:	ror    BYTE PTR [edx-0x74],cl
  40afb9:	jp     0x40af88
  40afbb:	fidivr WORD PTR [eax-0x66e5c2b0]
  40afc1:	or     BYTE PTR [edi+0x2],0x7d
  40afc5:	jbe    0x40affa
  40afc7:	into   
  40afc8:	cwde   
  40afc9:	add    al,0xfc
  40afcb:	pop    ds
  40afcc:	mov    ebx,DWORD PTR [edx]
  40afce:	inc    ecx
  40afcf:	icebp  
  40afd0:	add    eax,0x324615e7
  40afd5:	popa   
  40afd6:	mov    esi,0x912cc2a7
  40afdb:	mov    ch,0x7f
  40afdd:	mov    bh,0xce
  40afdf:	clc    
  40afe0:	stos   BYTE PTR es:[edi],al
  40afe1:	(bad)  
  40afe2:	les    eax,FWORD PTR [esi+0x29]
  40afe5:	in     al,0xbf
  40afe7:	clc    
  40afe8:	mov    ah,0x6e
  40afea:	(bad)  
  40afeb:	jae    0x40afeb
  40afed:	xor    eax,0xcfda61c0
  40aff2:	push   edi
  40aff3:	mov    cl,0x1e
  40aff5:	in     al,0x80
  40aff7:	mov    ebp,0xf0b28022
  40affc:	iret   
  40affd:	adc    DWORD PTR [edx],edx
  40afff:	sahf   
  40b000:	imul   al
  40b002:	xor    ebx,ebp
  40b004:	add    ebp,DWORD PTR [edi+ebp*2-0x42]
  40b008:	stos   BYTE PTR es:[edi],al
  40b009:	sub    ebp,DWORD PTR [esi]
  40b00b:	adc    eax,ebx
  40b00d:	in     al,dx
  40b00e:	sbb    ax,WORD PTR [edi-0x9]
  40b012:	enter  0x4f72,0x85
  40b016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b017:	xor    DWORD PTR [edi],edx
  40b019:	xor    ebx,esp
  40b01b:	fwait
  40b01c:	data16 das 
  40b01e:	dec    eax
  40b01f:	xchg   DWORD PTR [edx],ecx
  40b021:	and    DWORD PTR ds:0x9a2a0540,ebx
  40b027:	xor    ah,BYTE PTR [edx]
  40b029:	adc    dh,bh
  40b02b:	sub    dh,BYTE PTR [eax+ebx*2]
  40b02e:	adc    dh,bh
  40b030:	push   edi
  40b031:	stc    
  40b032:	imul   eax,eax,0xffffff99
  40b035:	cwde   
  40b036:	ficomp WORD PTR ds:0x8d5daa75
  40b03c:	lock rcl BYTE PTR [ebx+0x2eab093e],0x7e
  40b044:	ins    BYTE PTR es:[edi],dx
  40b045:	cmp    esp,DWORD PTR [edi+0x43d01902]
  40b04b:	cwde   
  40b04c:	lock mov cl,0x7d
  40b04f:	(bad)  
  40b050:	mov    cl,0xd1
  40b052:	lds    edi,FWORD PTR [ecx+0x73bcd9a]
  40b058:	mov    ebp,esp
  40b05a:	sbb    eax,ebp
  40b05c:	push   esp
  40b05d:	sahf   
  40b05e:	fsub   DWORD PTR [ecx]
  40b060:	into   
  40b061:	push   esi
  40b062:	add    ch,BYTE PTR [edi+0x20ad822c]
  40b068:	add    al,0xa2
  40b06a:	sub    dl,ch
  40b06c:	(bad)  
  40b06d:	xor    BYTE PTR [edi+0x31dc45],dl
  40b073:	mov    esp,0xd7cdbd4f
  40b078:	sub    al,0x66
  40b07a:	add    esi,DWORD PTR fs:[ebx]
  40b07d:	jl     0x40b018
  40b07f:	xchg   BYTE PTR [eax-0x766ec6b8],al
  40b085:	mov    cs,WORD PTR [ecx]
  40b087:	mov    ebp,0x6441de4
  40b08c:	ds dec ebp
  40b08e:	jne    0x40b0d4
  40b090:	popf   
  40b091:	imul   esi,DWORD PTR [ecx-0x3a807801],0x368b120e
  40b09b:	or     esi,DWORD PTR [ebx+0x531e9f2]
  40b0a1:	test   eax,0x837fa3eb
  40b0a6:	ins    BYTE PTR es:[edi],dx
  40b0a7:	cli    
  40b0a8:	(bad)  [edx]
  40b0aa:	mov    dl,0xb6
  40b0ac:	jp     0x40b0c4
  40b0ae:	dec    esp
  40b0af:	fdiv   st(5),st
  40b0b1:	in     al,dx
  40b0b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0b3:	xchg   edi,eax
  40b0b4:	mov    edx,0xd9047e2f
  40b0b9:	loop   0x40b0cd
  40b0bb:	jo     0x40b113
  40b0bd:	mov    dh,BYTE PTR [esi-0x75]
  40b0c0:	pop    es
  40b0c1:	scas   al,BYTE PTR es:[edi]
  40b0c2:	xchg   esi,eax
  40b0c3:	rol    DWORD PTR [edx-0x6aba1d42],cl
  40b0c9:	jae    0x40b059
  40b0cb:	not    DWORD PTR [esi-0x340147e2]
  40b0d1:	xor    eax,0x49c9069c
  40b0d6:	sub    esp,DWORD PTR ds:0xe949c7f2
  40b0dc:	outs   dx,BYTE PTR ds:[esi]
  40b0dd:	push   ds
  40b0de:	and    ah,BYTE PTR [eax]
  40b0e0:	adc    dh,BYTE PTR [ecx+0x1f]
  40b0e3:	mov    DWORD PTR [edi],esp
  40b0e5:	lock ret 0xaca8
  40b0e9:	into   
  40b0ea:	mov    al,0x54
  40b0ec:	nop
  40b0ed:	xchg   DWORD PTR [ecx],eax
  40b0ef:	jg     0x40b07d
  40b0f1:	clc    
  40b0f2:	jge    0x40b138
  40b0f4:	retf   
  40b0f5:	mov    BYTE PTR [ebx+0x45],bl
  40b0f8:	add    DWORD PTR [ebp+0xc300800],edx
  40b0fe:	mov    eax,ds:0x2b221aa
  40b103:	sub    cl,0xe2
  40b106:	in     al,dx
  40b107:	add    al,0xd7
  40b109:	retf   
  40b10a:	mov    edi,0xfe57584
  40b10f:	loop   0x40b11e
  40b111:	push   0xffffff9f
  40b113:	pusha  
  40b114:	pop    es
  40b115:	sbb    esp,0x4d
  40b118:	cmc    
  40b119:	mov    dh,0x0
  40b11b:	lock jno 0x40b0fd
  40b11e:	leave  
  40b11f:	sub    DWORD PTR [esi],ecx
  40b121:	retf   
  40b122:	into   
  40b123:	retf   0x629b
  40b126:	xor    dl,BYTE PTR [edx+0x5706a7e9]
  40b12c:	adc    bl,dh
  40b12e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b12f:	test   al,0x28
  40b131:	xchg   esp,eax
  40b132:	xor    ebx,DWORD PTR [edi+ecx*2+0x21]
  40b136:	(bad)
  40b139:	or     DWORD PTR [eiz*4+0x406b55ba],ebx
  40b140:	fst    st(0)
  40b142:	shl    DWORD PTR [ecx],1
  40b144:	jge    0x40b1a9
  40b146:	xor    al,0xbf
  40b148:	cmp    edx,eax
  40b14a:	pop    ebp
  40b14b:	fcom   QWORD PTR [ebx]
  40b14d:	and    esi,ecx
  40b14f:	scas   eax,DWORD PTR es:[edi]
  40b150:	cli    
  40b151:	sub    DWORD PTR [ebp-0x49066c22],edx
  40b157:	test   DWORD PTR [ecx-0x3f],ebp
  40b15a:	push   ebx
  40b15b:	push   ebx
  40b15c:	mov    edx,ebp
  40b15e:	inc    BYTE PTR [edx]
  40b160:	adc    DWORD PTR [esi],ebx
  40b162:	dec    ecx
  40b163:	jbe    0x40b155
  40b165:	arpl   WORD PTR [esi],bp
  40b167:	mov    al,0xca
  40b169:	adc    esi,esp
  40b16b:	mov    WORD PTR [edi+0x60],es
  40b16e:	dec    dx
  40b170:	add    eax,DWORD PTR [edi+edi*2+0x4c]
  40b174:	jl     0x40b1a6
  40b176:	and    edi,esp
  40b178:	fbstp  TBYTE PTR [ecx+0x19205c57]
  40b17e:	setbe  BYTE PTR [ebp+0x47]
  40b182:	add    eax,0x4d030937
  40b187:	sbb    DWORD PTR [edx+esi*8+0x7b8650c5],ebp
  40b18e:	mov    eax,DWORD PTR [edi-0x50]
  40b191:	bound  esi,QWORD PTR [edi+0x28b178ab]
  40b197:	jo     0x40b1a1
  40b199:	leave  
  40b19a:	pop    es
  40b19b:	(bad)  
  40b19c:	jae    0x40b20f
  40b19e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b19f:	retf   
  40b1a0:	sbb    eax,0xc910c27d
  40b1a5:	jns    0x40b1b8
  40b1a7:	ret    0x9085
  40b1aa:	push   ss
  40b1ab:	dec    edx
  40b1ac:	xchg   ecx,eax
  40b1ad:	jnp    0x40b156
  40b1af:	test   al,0x94
  40b1b1:	xchg   edx,ebx
  40b1b3:	(bad)  [edx]
  40b1b5:	sub    ebx,DWORD PTR [ebx+0x32]
  40b1b8:	xor    ebp,DWORD PTR [edi-0x47]
  40b1bb:	or     ah,BYTE PTR [esi]
  40b1bd:	inc    ebx
  40b1be:	sub    ebx,ecx
  40b1c0:	aaa    
  40b1c1:	sar    dl,1
  40b1c3:	push   bp
  40b1c5:	shl    BYTE PTR [edx+0x19],1
  40b1c8:	mov    cl,0x59
  40b1ca:	jecxz  0x40b1ae
  40b1cc:	mov    ecx,cs
  40b1ce:	sbb    DWORD PTR [esi+ecx*1],0xffffffc0
  40b1d2:	lock rcl DWORD PTR [ecx-0x2505de66],cl
  40b1d9:	(bad)  
  40b1db:	int3   
  40b1dc:	cld    
  40b1dd:	xchg   edi,eax
  40b1de:	std    
  40b1df:	in     eax,dx
  40b1e0:	push   ebx
  40b1e1:	cdq    
  40b1e2:	xchg   ecx,eax
  40b1e3:	dec    eax
  40b1e4:	jmp    0x40b170
  40b1e6:	dec    eax
  40b1e7:	inc    esp
  40b1e8:	sahf   
  40b1e9:	xchg   esi,eax
  40b1ea:	adc    DWORD PTR [esi-0x59],edx
  40b1ed:	jg     0x40b1bd
  40b1ef:	mov    ebp,0x5f4673f0
  40b1f4:	(bad)  
  40b1f5:	cmp    ecx,DWORD PTR [esi-0x793ba492]
  40b1fb:	sti    
  40b1fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1fd:	ret    0xeb8b
  40b200:	mov    bh,0x5b
  40b202:	push   esp
  40b203:	pop    es
  40b204:	mov    ecx,DWORD PTR [ebx+0x67d559e4]
  40b20a:	or     ah,BYTE PTR [ecx]
  40b20c:	ja     0x40b20a
  40b20e:	pop    ebx
  40b20f:	lahf   
  40b210:	push   cs
  40b211:	mov    es,WORD PTR [eax-0x786830f6]
  40b217:	and    eax,0xa96a3067
  40b21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b21d:	adc    al,0xa9
  40b21f:	imul   edx,DWORD PTR [ecx+0x6dadeb15],0xffffffe2
  40b226:	jecxz  0x40b202
  40b228:	xor    DWORD PTR [edx-0x8],edx
  40b22b:	popa   
  40b22c:	mov    ds:0x2d7d9fa8,al
  40b231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b232:	pop    ecx
  40b233:	xor    BYTE PTR [ebx-0x72ebcc6a],bh
  40b239:	mov    ebp,eax
  40b23b:	dec    ebx
  40b23c:	rcr    BYTE PTR [ebx-0x5f34f656],cl
  40b242:	xchg   edx,eax
  40b243:	pop    ebx
  40b244:	cmp    dh,BYTE PTR [ecx-0x6f0d8383]
  40b24a:	rol    esp,1
  40b24c:	lea    ebx,[eax+0x38dc4e53]
  40b252:	fs dec edx
  40b254:	ds shl edx,1
  40b257:	repz cwde 
  40b259:	inc    edi
  40b25a:	in     eax,0xef
  40b25c:	pop    ebp
  40b25d:	mov    ds:0xa0b21c4d,eax
  40b262:	and    eax,0xd77ec168
  40b267:	outs   dx,DWORD PTR ds:[esi]
  40b268:	fsub   QWORD PTR [si]
  40b26b:	ret    0x4c02
  40b26e:	aam    0xdb
  40b270:	daa    
  40b271:	mov    BYTE PTR [ebx-0x21],bl
  40b274:	add    DWORD PTR [edi+ebx*8-0x35],ebp
  40b278:	adc    edx,esp
  40b27a:	test   eax,0x8d765633
  40b27f:	mov    al,ds:0x34943a48
  40b284:	aam    0xcc
  40b286:	cmp    al,0xd7
  40b288:	push   es
  40b289:	(bad)
  40b28e:	inc    ecx
  40b28f:	test   eax,0x89c4d472
  40b294:	pop    ebp
  40b295:	mov    dl,0x38
  40b297:	shl    BYTE PTR [ebx],0xf2
  40b29a:	inc    esi
  40b29b:	hlt    
  40b29c:	rcr    BYTE PTR gs:[edi],1
  40b29f:	test   DWORD PTR [esi+0x3],0x7b47d311
  40b2a6:	jns    0x40b256
  40b2a8:	leave  
  40b2a9:	ins    BYTE PTR es:[edi],dx
  40b2aa:	sar    BYTE PTR [edx+0x77],0x7b
  40b2ae:	aaa    
  40b2af:	mov    al,0xec
  40b2b1:	imul   esi,DWORD PTR [edx+esi*8],0xffffffe3
  40b2b5:	xchg   edx,eax
  40b2b6:	das    
  40b2b7:	mov    eax,ds:0x54c190d0
  40b2bc:	mov    eax,ds:0x3079d05e
  40b2c1:	xor    eax,0x9d232df3
  40b2c6:	mov    esi,0x14fa048d
  40b2cb:	enter  0xaab,0xde
  40b2cf:	sub    cl,bh
  40b2d1:	xchg   esp,eax
  40b2d2:	and    al,0xc6
  40b2d4:	pop    eax
  40b2d5:	andnps xmm4,XMMWORD PTR [edx]
  40b2d8:	sbb    al,0x1c
  40b2da:	cli    
  40b2db:	sub    eax,0x2447e8d8
  40b2e0:	repz sti 
  40b2e2:	and    DWORD PTR [ecx-0x2c0c7bc4],ebx
  40b2e8:	add    BYTE PTR [ecx-0x13554301],ah
  40b2ee:	xchg   ebp,eax
  40b2ef:	push   eax
  40b2f0:	jmp    0x1768:0x44178d03
  40b2f7:	(bad)  
  40b2f9:	sbb    DWORD PTR [eax+0x5c],0xc91ba746
  40b300:	adc    al,0xc9
  40b302:	cmp    al,0xcd
  40b304:	shl    BYTE PTR [ecx-0x50c2c99b],0xdb
  40b30b:	xor    DWORD PTR [eax],edi
  40b30d:	xor    eax,0x8eaa94e9
  40b312:	or     BYTE PTR [edx+0x6dceec38],dh
  40b318:	inc    ebp
  40b319:	xchg   esp,eax
  40b31a:	cli    
  40b31b:	mov    dl,0x5
  40b31d:	out    dx,al
  40b31e:	es (bad) 
  40b320:	cmp    dl,dl
  40b322:	xchg   ecx,eax
  40b323:	js     0x40b394
  40b325:	and    BYTE PTR [esi],dh
  40b327:	cmp    eax,ecx
  40b329:	fmul   QWORD PTR [eax-0x5]
  40b32c:	jl     0x40b3a9
  40b32e:	push   ss
  40b32f:	std    
  40b330:	jbe    0x40b2c4
  40b332:	push   eax
  40b333:	adc    eax,0x94976cbd
  40b338:	pop    ebp
  40b339:	mov    edi,0x3b0d4762
  40b33e:	dec    ebx
  40b33f:	aaa    
  40b340:	mov    dh,0xba
  40b342:	xor    eax,0xa8367294
  40b347:	mov    ah,0x49
  40b349:	fidiv  WORD PTR [esp]
  40b34c:	int    0x2f
  40b34e:	in     eax,dx
  40b34f:	mov    ebp,0x97530b67
  40b354:	mov    al,0xec
  40b356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b357:	or     ebx,edi
  40b359:	mov    edi,0xf040437
  40b35e:	mov    ecx,0x32f3fb40
  40b363:	in     eax,dx
  40b364:	inc    edx
  40b365:	icebp  
  40b366:	jb     0x40b391
  40b368:	or     BYTE PTR [edx],bl
  40b36a:	retf   0x4cd3
  40b36d:	enter  0x60cb,0x91
  40b371:	je     0x40b3ab
  40b373:	cmp    eax,0x4c0f40be
  40b378:	and    DWORD PTR [esi],ecx
  40b37a:	je     0x40b35a
  40b37c:	je     0x40b3ad
  40b37e:	mov    BYTE PTR [eax+0x1f],0x98
  40b382:	aad    0xdb
  40b384:	daa    
  40b385:	loop   0x40b352
  40b387:	add    cl,BYTE PTR [ebx-0x2a]
  40b38a:	fdivr  QWORD PTR [eax-0x3e]
  40b38d:	dec    ebx
  40b38e:	sub    edx,DWORD PTR [ecx-0x70eba4a1]
  40b394:	fisttp WORD PTR [esi-0x23]
  40b397:	push   0x5
  40b399:	pop    eax
  40b39a:	scas   al,BYTE PTR es:[edi]
  40b39b:	fisubr DWORD PTR [eax]
  40b39d:	cmp    esi,DWORD PTR [edx+ecx*4+0x28]
  40b3a1:	mov    ecx,0x894662b0
  40b3a6:	push   edx
  40b3a7:	ficomp WORD PTR [edi+0x3be0dae1]
  40b3ad:	cmp    DWORD PTR [edi+ebx*2-0x11],ebp
  40b3b1:	outs   dx,DWORD PTR ds:[esi]
  40b3b2:	fcmove st,st(7)
  40b3b4:	jl     0x40b40d
  40b3b6:	fsubr  QWORD PTR [ebx]
  40b3b8:	daa    
  40b3b9:	push   ds
  40b3ba:	add    eax,0x29dac6eb
  40b3bf:	mov    dl,0xe
  40b3c1:	int    0xc8
  40b3c3:	dec    edx
  40b3c4:	ret    0x107a
  40b3c7:	test   al,0x9
  40b3c9:	pushf  
  40b3ca:	lods   al,BYTE PTR ds:[esi]
  40b3cb:	imul   esi,DWORD PTR [ecx+eax*4-0x41],0x27
  40b3d0:	scas   al,BYTE PTR es:[edi]
  40b3d1:	mov    cl,0xbe
  40b3d3:	rol    BYTE PTR [ebx+0x116b541],1
  40b3d9:	xchg   ecx,eax
  40b3da:	mov    cl,0xad
  40b3dc:	enter  0x54a8,0x23
  40b3e0:	imul   esp,DWORD PTR [edx+0x6d902c5f],0x50
  40b3e7:	stos   DWORD PTR es:[edi],eax
  40b3e8:	(bad)
  40b3eb:	push   edi
  40b3ec:	adc    esp,DWORD PTR [ebp+0x719ac018]
  40b3f2:	push   edx
  40b3f3:	cmc    
  40b3f4:	lahf   
  40b3f5:	fwait
  40b3f6:	jp     0x40b38a
  40b3f8:	inc    ebp
  40b3f9:	xor    eax,0xd674beac
  40b3fe:	in     eax,0x7d
  40b400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b401:	test   BYTE PTR [esi-0x1f],ch
  40b404:	out    dx,eax
  40b405:	in     eax,dx
  40b406:	cld    
  40b407:	xlat   BYTE PTR ds:[ebx]
  40b408:	adc    eax,0xf5194de1
  40b40d:	dec    esi
  40b40e:	repz dec edi
  40b410:	hlt    
  40b411:	mov    ecx,DWORD PTR [edi+0x2060e1d2]
  40b417:	and    al,0xbc
  40b419:	jb     0x40b459
  40b41b:	repnz cdq 
  40b41d:	jne    0x40b48e
  40b41f:	add    DWORD PTR [esi],ecx
  40b421:	fwait
  40b422:	repz add eax,0x8f7ad97d
  40b428:	sub    eax,0x976bd64f
  40b42d:	mov    ebp,0x4aff2e7
  40b432:	xor    eax,DWORD PTR [eax-0x64]
  40b435:	mov    ah,0x1e
  40b437:	push   ss
  40b438:	or     ch,BYTE PTR [ebx]
  40b43a:	ds lahf 
  40b43c:	sub    ah,BYTE PTR [eax]
  40b43e:	pop    edx
  40b43f:	ret    0xb583
  40b442:	lds    ebx,FWORD PTR [edi+0x7d62b1b6]
  40b448:	repz jno 0x40b403
  40b44b:	adc    BYTE PTR [ebp+0x43],bl
  40b44e:	pop    edi
  40b44f:	test   al,0x69
  40b451:	hlt    
  40b452:	sti    
  40b453:	xor    eax,0xb03919a6
  40b458:	and    DWORD PTR [ecx],eax
  40b45a:	ins    BYTE PTR es:[edi],dx
  40b45b:	scas   al,BYTE PTR es:[edi]
  40b45c:	adc    DWORD PTR [edx],eax
  40b45e:	imul   eax,DWORD PTR [ebx+0x16],0x1f80915
  40b465:	push   ebp
  40b466:	xchg   DWORD PTR [esi+0x71c3f0e7],ecx
  40b46c:	adc    BYTE PTR [eax-0x79a61ea3],ah
  40b472:	jbe    0x40b42f
  40b474:	adc    BYTE PTR [ecx],0xbe
  40b477:	jne    0x40b44f
  40b479:	inc    ebp
  40b47a:	call   0x3435:0x999f9959
  40b481:	lea    ebp,[edi]
  40b483:	pop    ss
  40b484:	inc    eax
  40b485:	test   BYTE PTR [edi-0x47259da1],0x77
  40b48c:	cs push edi
  40b48e:	lahf   
  40b48f:	xchg   esi,eax
  40b490:	bound  eax,QWORD PTR [ebp+0x90baf90]
  40b496:	pop    es
  40b497:	(bad)  
  40b498:	jp     0x40b462
  40b49a:	aam    0x5e
  40b49c:	das    
  40b49d:	and    edi,DWORD PTR [eax-0x72]
  40b4a0:	xor    DWORD PTR [esi+0x1f],ecx
  40b4a3:	ret    
  40b4a4:	cld    
  40b4a5:	add    BYTE PTR [edi-0x63],dl
  40b4a8:	add    dl,BYTE PTR [ecx]
  40b4aa:	inc    ebx
  40b4ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ac:	xchg   DWORD PTR [eax],ebx
  40b4ae:	mov    dh,0x25
  40b4b0:	aas    
  40b4b1:	test   al,0x33
  40b4b3:	aaa    
  40b4b4:	xchg   BYTE PTR [ecx-0x227fccfc],al
  40b4ba:	push   eax
  40b4bb:	ja     0x40b4f5
  40b4bd:	sar    DWORD PTR ds:0xb74a1db8,1
  40b4c3:	mov    ah,0xc6
  40b4c5:	arpl   WORD PTR [edx-0x9],bp
  40b4c8:	lock mov WORD PTR [edx],fs
  40b4cb:	push   edi
  40b4cc:	xchg   edx,eax
  40b4cd:	in     eax,dx
  40b4ce:	pushf  
  40b4cf:	hlt    
  40b4d0:	dec    edx
  40b4d1:	jg     0x40b549
  40b4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d4:	jmp    0x40b52a
  40b4d6:	inc    esi
  40b4d7:	mov    ds:0x9e907937,eax
  40b4dc:	out    dx,eax
  40b4dd:	pop    ebx
  40b4de:	in     al,0xb
  40b4e0:	dec    ebx
  40b4e1:	in     eax,dx
  40b4e2:	(bad)  
  40b4e3:	aad    0xa0
  40b4e5:	(bad)  
  40b4e6:	(bad)  
  40b4e7:	jmp    0x56959a91
  40b4ec:	push   DWORD PTR [ebp-0x2c]
  40b4ef:	ss mov edx,0x9953d9e5
  40b4f5:	or     edx,edi
  40b4f7:	inc    edi
  40b4f8:	jnp    0x40b512
  40b4fa:	gs pop ds
  40b4fc:	fstp   st(6)
  40b4fe:	xchg   esi,eax
  40b4ff:	jmp    eax
  40b501:	or     BYTE PTR [eax-0x12db3866],bh
  40b507:	mov    esp,0x81e744be
  40b50c:	adc    dh,BYTE PTR [ecx]
  40b50e:	imul   esi,DWORD PTR [edi],0x8ef04181
  40b514:	or     eax,0x43888edb
  40b519:	jae    0x40b558
  40b51b:	mov    es,esi
  40b51d:	xchg   esp,eax
  40b51e:	cli    
  40b51f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b520:	xor    al,0x46
  40b522:	jae    0x40b51b
  40b524:	push   ds
  40b525:	mov    ecx,0x291beb60
  40b52a:	xor    ebx,DWORD PTR [edi-0x71764503]
  40b530:	cmp    al,0x11
  40b532:	outs   dx,DWORD PTR ds:[esi]
  40b533:	icebp  
  40b534:	jl     0x40b588
  40b536:	sbb    BYTE PTR [ebx-0x2781d62f],cl
  40b53c:	fnstenv [ebx+0x3be3203c]
  40b542:	push   ds
  40b543:	aam    0xfa
  40b545:	xor    ebp,DWORD PTR [edi+0x70]
  40b548:	dec    eax
  40b549:	mov    esi,0xf069a228
  40b54e:	sbb    edi,DWORD PTR [edi]
  40b550:	or     dl,dl
  40b552:	or     al,0x4b
  40b554:	pop    es
  40b555:	mov    ebp,0x302dc5c5
  40b55a:	(bad)
  40b55d:	or     eax,0x6f635e5f
  40b562:	sar    DWORD PTR [ecx],cl
  40b564:	loopne 0x40b53a
  40b566:	call   0xfdd0:0x4bef8bcb
  40b56d:	jbe    0x40b51f
  40b56f:	sbb    eax,0x9b21e573
  40b574:	fsub   DWORD PTR [eax-0x92392a4]
  40b57a:	repz adc bp,0x797b
  40b580:	mov    ebp,0xe66bfab7
  40b585:	ss stos DWORD PTR es:[edi],eax
  40b587:	scas   eax,DWORD PTR es:[edi]
  40b588:	call   0x1d7db11a
  40b58d:	lock xchg DWORD PTR [edx+0x4278acb3],ebx
  40b594:	sub    BYTE PTR [edx],ch
  40b596:	mov    eax,ds:0x138b7d96
  40b59b:	jmp    0xe5cf341d
  40b5a0:	xchg   esp,eax
  40b5a1:	push   edx
  40b5a2:	mov    esp,0x84ad93ff
  40b5a7:	mov    WORD PTR fs:[ebx-0x46fad423],?
  40b5ae:	inc    ebx
  40b5af:	int3   
  40b5b0:	ja     0x40b614
  40b5b2:	inc    esp
  40b5b3:	sbb    bh,BYTE PTR [edx+edi*4+0x7c43cc67]
  40b5ba:	call   0x9f9cc79c
  40b5bf:	mov    ebx,0xa789e591
  40b5c4:	div    DWORD PTR [edi+ecx*1+0x44]
  40b5c8:	pop    ebp
  40b5c9:	(bad)  
  40b5cb:	mov    ah,0x54
  40b5cd:	sub    eax,0x96fed32e
  40b5d2:	push   ss
  40b5d3:	push   cs
  40b5d4:	jmp    0x5fbb:0xda1079cc
  40b5db:	pop    ds
  40b5dc:	jge    0x40b633
  40b5de:	push   eax
  40b5df:	daa    
  40b5e0:	add    al,0x3f
  40b5e2:	or     DWORD PTR [eax+0x1f],ecx
  40b5e5:	sub    edx,edx
  40b5e7:	xchg   DWORD PTR [eax-0x395f1345],ebp
  40b5ed:	mov    al,0x7e
  40b5ef:	push   edx
  40b5f0:	and    BYTE PTR [ebx],cl
  40b5f2:	out    dx,eax
  40b5f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5f4:	sub    ch,dl
  40b5f6:	test   dl,dh
  40b5f8:	mov    edi,DWORD PTR [ecx-0x39]
  40b5fb:	shr    BYTE PTR [ebx+0x40f7bc44],1
  40b601:	xchg   esp,eax
  40b602:	imul   BYTE PTR [esi+0x10]
  40b605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b606:	inc    ecx
  40b607:	mov    ebx,0x946965b5
  40b60c:	popf   
  40b60d:	aas    
  40b60e:	jg     0x40b688
  40b610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b612:	add    DWORD PTR [ebx+0x39],esi
  40b615:	cdq    
  40b616:	lods   al,BYTE PTR ds:[esi]
  40b617:	ins    DWORD PTR es:[edi],dx
  40b618:	push   ebx
  40b619:	ins    DWORD PTR es:[edi],dx
  40b61a:	add    BYTE PTR [edx+edi*8-0x58],bh
  40b61e:	mov    edi,0x634b096f
  40b623:	sar    DWORD PTR [ecx],0x1f
  40b626:	mov    al,ds:0x7bd059ce
  40b62b:	jae    0x40b621
  40b62d:	adc    al,0x1
  40b62f:	shl    BYTE PTR [ebx-0x11c1b9b3],cl
  40b635:	xchg   sp,ax
  40b637:	xor    BYTE PTR [ecx],bh
  40b639:	add    DWORD PTR [ebx],eax
  40b63b:	sub    DWORD PTR [ebx+eax*4],ebp
  40b63e:	cwde   
  40b63f:	js     0x40b67b
  40b641:	gs inc esi
  40b643:	mov    eax,0xa8d627c3
  40b648:	push   es
  40b649:	rol    DWORD PTR [edx],cl
  40b64b:	dec    ecx
  40b64c:	lock xor esp,ebx
  40b64f:	mov    ebp,DWORD PTR [esi+ebx*4-0x67]
  40b653:	das    
  40b654:	fadd   QWORD PTR [edx+0x6d]
  40b657:	mov    esi,0xe0e1d6f4
  40b65c:	xchg   BYTE PTR ds:0xbc64214a,cl
  40b662:	lea    ecx,[edx]
  40b664:	std    
  40b665:	aam    0x88
  40b667:	jl     0x40b60d
  40b669:	inc    esi
  40b66a:	in     al,0xae
  40b66c:	clc    
  40b66d:	stc    
  40b66e:	test   al,0xba
  40b670:	das    
  40b671:	pop    es
  40b672:	cli    
  40b673:	push   eax
  40b674:	enter  0x539f,0xac
  40b678:	xchg   edx,eax
  40b679:	ins    BYTE PTR es:[edi],dx
  40b67a:	das    
  40b67b:	sub    BYTE PTR [edx-0x24],0x94
  40b67f:	mov    eax,0x6151dd8f
  40b684:	not    bl
  40b686:	mov    edi,0xca450619
  40b68b:	mov    ebx,0x45fc8671
  40b690:	mov    ebx,0x1380c4f1
  40b695:	lods   eax,DWORD PTR ds:[esi]
  40b696:	(bad)  
  40b697:	pusha  
  40b698:	inc    edi
  40b699:	mov    ah,0x7f
  40b69b:	in     eax,dx
  40b69c:	push   es
  40b69d:	outs   dx,BYTE PTR ds:[esi]
  40b69e:	jmp    FWORD PTR [eax+0x41]
  40b6a1:	or     BYTE PTR [eax-0x7c],cl
  40b6a4:	add    DWORD PTR [esi+0x48],0x32e3c913
  40b6ab:	jne    0x40b6e6
  40b6ad:	sbb    eax,0x95da206d
  40b6b2:	in     eax,0xdb
  40b6b4:	leave  
  40b6b5:	lock sti 
  40b6b7:	nop
  40b6b8:	and    al,0xe6
  40b6ba:	sub    eax,0x7237e8e
  40b6bf:	addr16 xchg esi,eax
  40b6c1:	add    al,0xcd
  40b6c3:	jecxz  0x40b654
  40b6c5:	data16 jnp 0x40b67b
  40b6c8:	xor    dl,dh
  40b6ca:	aas    
  40b6cb:	mov    eax,DWORD PTR [edx+0x55]
  40b6ce:	and    DWORD PTR [edx+0x65],esi
  40b6d1:	popa   
  40b6d2:	fld    TBYTE PTR [ebp-0x80]
  40b6d5:	jns    0x40b6b3
  40b6d7:	sub    al,0xa1
  40b6d9:	int3   
  40b6da:	icebp  
  40b6db:	pusha  
  40b6dc:	int3   
  40b6dd:	int    0x49
  40b6df:	mov    ebp,0x4904e5aa
  40b6e4:	cmc    
  40b6e5:	call   0xcb146da3
  40b6ea:	push   esi
  40b6eb:	mov    WORD PTR [esi+0xa],ss
  40b6ee:	add    DWORD PTR [ecx],esi
  40b6f0:	xor    esi,DWORD PTR [edi-0x22]
  40b6f3:	sub    BYTE PTR [ecx+0x1bbad6c5],ah
  40b6f9:	mov    ebx,0x7140aa46
  40b6fe:	loopne 0x40b72a
  40b700:	and    DWORD PTR [ecx],edx
  40b702:	jp     0x40b738
  40b704:	jge    0x40b737
  40b706:	or     ecx,DWORD PTR [edi+0x56db338d]
  40b70c:	aaa    
  40b70d:	pop    es
  40b70e:	(bad)  
  40b70f:	fiadd  DWORD PTR [edi-0x17e31e58]
  40b715:	(bad)  
  40b716:	mov    dl,0x82
  40b718:	push   di
  40b71a:	mov    esp,0xa73a031d
  40b71f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b720:	and    dh,BYTE PTR ds:0x64254887
  40b726:	(bad)  [ebp+0x6b5cbb71]
  40b72c:	test   al,0x37
  40b72e:	xor    ebx,DWORD PTR [ebp+0x54]
  40b731:	stos   BYTE PTR es:[edi],al
  40b732:	mov    fs,WORD PTR [edi-0x73]
  40b735:	cs jge 0x40b756
  40b738:	xchg   edi,eax
  40b739:	or     eax,0x80e2d4f5
  40b73e:	lods   eax,DWORD PTR ds:[esi]
  40b73f:	outs   dx,BYTE PTR ds:[esi]
  40b740:	(bad)  
  40b741:	adc    bl,bh
  40b743:	dec    ebp
  40b744:	jmp    0xdcd2:0xace51cda
  40b74b:	push   ebp
  40b74c:	dec    edx
  40b74d:	outs   dx,BYTE PTR ds:[esi]
  40b74e:	xchg   esp,eax
  40b74f:	jmp    0x2748:0xd035fdf0
  40b756:	jne    0x40b771
  40b758:	ss mov ebx,0x5db347f3
  40b75e:	cmp    esp,DWORD PTR [edx+ebp*8]
  40b761:	into   
  40b762:	ins    DWORD PTR es:[edi],dx
  40b763:	xchg   edi,eax
  40b764:	lods   eax,DWORD PTR ds:[esi]
  40b765:	(bad)  
  40b766:	xor    dl,BYTE PTR [ebp-0x60]
  40b769:	cdq    
  40b76a:	jno    0x40b728
  40b76c:	mov    esi,0xdb610f9d
  40b771:	and    DWORD PTR [eax+0x7abfb836],ecx
  40b777:	push   es
  40b778:	sub    cl,BYTE PTR [edi-0x69546134]
  40b77e:	addr16 cmc 
  40b780:	leave  
  40b781:	sub    bl,ah
  40b783:	cli    
  40b784:	bound  ebp,QWORD PTR es:[edi+0x557bd6d7]
  40b78b:	test   DWORD PTR [edx],0xe898798
  40b791:	add    eax,0x133806bb
  40b796:	ins    BYTE PTR es:[edi],dx
  40b797:	jg     0x40b7eb
  40b799:	xchg   BYTE PTR [esi+0x753e2605],dl
  40b79f:	das    
  40b7a0:	data16 out dx,al
  40b7a2:	aaa    
  40b7a3:	fcmovu st,st(6)
  40b7a5:	push   es
  40b7a6:	daa    
  40b7a7:	xchg   edi,eax
  40b7a8:	pop    ebp
  40b7a9:	mov    edx,0xa9f281e5
  40b7ae:	mov    ds:0x808d584d,eax
  40b7b3:	mov    bh,0xfd
  40b7b5:	repnz cmp eax,0x6c196344
  40b7bb:	sub    DWORD PTR [edx-0x71c4611d],0xb660f693
  40b7c5:	or     al,0xdb
  40b7c7:	and    DWORD PTR [eax],ebx
  40b7c9:	xchg   ecx,eax
  40b7ca:	push   es
  40b7cb:	jb     0x40b7ba
  40b7cd:	xor    DWORD PTR [edx+0x74],esi
  40b7d0:	fldenv [ecx]
  40b7d2:	adc    al,0x11
  40b7d4:	dec    ebx
  40b7d5:	dec    eax
  40b7d6:	adc    BYTE PTR [ebx+0x71],dh
  40b7d9:	mov    al,BYTE PTR [ecx+0x70a51fca]
  40b7df:	cmp    DWORD PTR [edx+0x11],ecx
  40b7e2:	or     BYTE PTR [ebx+0x69],al
  40b7e5:	sub    eax,0x64ed5dc9
  40b7ea:	call   0x24c4:0x684dd172
  40b7f1:	jnp    0x40b823
  40b7f3:	or     DWORD PTR [ecx+esi*4+0x31],ecx
  40b7f7:	pusha  
  40b7f8:	loopne 0x40b875
  40b7fa:	cmp    dh,BYTE PTR [edx]
  40b7fc:	lods   eax,DWORD PTR ds:[esi]
  40b7fd:	jnp    0x40b802
  40b7ff:	scas   al,BYTE PTR es:[edi]
  40b800:	sub    al,0x47
  40b802:	sar    BYTE PTR [ebp-0x272ffadd],cl
  40b808:	shl    BYTE PTR [edx-0x2c2d988b],cl
  40b80e:	iret   
  40b80f:	(bad)  
  40b810:	loopne 0x40b891
  40b812:	and    al,0x3b
  40b814:	inc    esi
  40b815:	daa    
  40b816:	sti    
  40b817:	xor    al,0x0
  40b819:	dec    esi
  40b81a:	nop
  40b81b:	xchg   ecx,eax
  40b81c:	pop    ebx
  40b81d:	loop   0x40b80a
  40b81f:	dec    edx
  40b820:	into   
  40b821:	outs   dx,BYTE PTR ds:[esi]
  40b822:	cmovs  edi,eax
  40b825:	mov    ss,WORD PTR [ebp+0x52b0b631]
  40b82b:	dec    esi
  40b82c:	pop    es
  40b82d:	(bad)  
  40b82e:	int    0x80
  40b830:	(bad)  
  40b831:	cmp    eax,0xe2b75ded
  40b836:	add    al,0x2d
  40b838:	pop    esp
  40b839:	sti    
  40b83a:	jno    0x40b873
  40b83c:	scas   al,BYTE PTR es:[edi]
  40b83d:	outs   dx,BYTE PTR ds:[esi]
  40b83e:	sbb    BYTE PTR [eax+0x71c4782],al
  40b844:	icebp  
  40b845:	xchg   esp,eax
  40b846:	not    bh
  40b848:	adc    dl,bh
  40b84a:	shr    DWORD PTR [edx],cl
  40b84c:	lods   al,BYTE PTR ds:[esi]
  40b84d:	push   eax
  40b84e:	ins    DWORD PTR es:[edi],dx
  40b84f:	fist   DWORD PTR [edx+0xb6f5a5f]
  40b855:	scas   al,BYTE PTR es:[edi]
  40b856:	mov    BYTE PTR [ebx-0x21],bh
  40b859:	ror    BYTE PTR [ecx+0x5d04af5b],1
  40b85f:	mov    cl,0xf3
  40b861:	push   edi
  40b862:	(bad)  
  40b863:	fiadd  DWORD PTR [eax-0x735b967c]
  40b869:	jg     0x40b86f
  40b86b:	scas   al,BYTE PTR es:[edi]
  40b86c:	add    ebx,DWORD PTR [ebp+edi*8-0x65a11463]
  40b873:	fs lahf 
  40b875:	cmp    DWORD PTR [ebp-0x356dfaa1],esp
  40b87b:	stos   DWORD PTR es:[edi],eax
  40b87c:	call   0xf872:0xf6bd2538
  40b883:	adc    bl,bl
  40b885:	(bad)  
  40b886:	mov    edx,0x7edc579c
  40b88b:	and    bl,0xe6
  40b88e:	out    dx,al
  40b88f:	pop    es
  40b890:	in     eax,dx
  40b891:	das    
  40b892:	jmp    0x40b85f
  40b894:	xlat   BYTE PTR ds:[ebx]
  40b895:	mov    ah,0x69
  40b897:	retf   0xa447
  40b89a:	wrmsr  
  40b89c:	lods   eax,DWORD PTR ds:[esi]
  40b89d:	nop
  40b89e:	(bad)  
  40b89f:	bnd jge 0x40b8d4
  40b8a2:	mul    ecx
  40b8a4:	or     BYTE PTR [edx+0xb],al
  40b8a7:	cmp    al,BYTE PTR [ecx+0x681ded36]
  40b8ad:	xor    ah,BYTE PTR [ebx+0x3fb4443a]
  40b8b3:	or     esi,ebx
  40b8b5:	push   ebx
  40b8b6:	or     eax,0x4622e572
  40b8bb:	ss dec eax
  40b8bd:	push   esi
  40b8be:	icebp  
  40b8bf:	adc    BYTE PTR [eax+ebp*4-0x1f],al
  40b8c3:	lods   eax,DWORD PTR ds:[esi]
  40b8c4:	je     0x40b8d8
  40b8c6:	dec    esi
  40b8c7:	jmp    0x40b84a
  40b8c9:	enter  0x224b,0xd3
  40b8cd:	stc    
  40b8ce:	mov    ebp,0xcdbbc6b8
  40b8d3:	xchg   esp,eax
  40b8d4:	ja     0x40b936
  40b8d6:	rcr    DWORD PTR [edx+0x74e26d02],1
  40b8dc:	pop    eax
  40b8dd:	add    eax,0xa4306a0e
  40b8e2:	loop   0x40b8d2
  40b8e4:	clc    
  40b8e5:	jp     0x40b925
  40b8e7:	push   ebp
  40b8e8:	jmp    0x7af5e744
  40b8ed:	xchg   ecx,eax
  40b8ee:	xor    ah,BYTE PTR [esi-0x20]
  40b8f1:	adc    DWORD PTR [edx],ebp
  40b8f3:	jb     0x40b879
  40b8f5:	ret    
  40b8f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8f7:	aaa    
  40b8f8:	aad    0x23
  40b8fa:	add    esp,DWORD PTR [edx]
  40b8fc:	outs   dx,BYTE PTR ds:[esi]
  40b8fd:	xchg   edx,eax
  40b8fe:	repz and BYTE PTR [esi-0x52],dh
  40b902:	mov    ebp,0xf2cc6df4
  40b907:	add    al,al
  40b909:	data16 jb 0x40b8e5
  40b90c:	mov    WORD PTR [edi-0x31602e4c],cs
  40b912:	mov    dh,0x33
  40b914:	mov    esp,0x8e1486fb
  40b919:	sar    ah,0xbd
  40b91c:	(bad)  
  40b91d:	ins    BYTE PTR es:[edi],dx
  40b91e:	or     BYTE PTR [eax+0x1e],bl
  40b921:	and    DWORD PTR [edx-0x25],ecx
  40b924:	mov    cl,BYTE PTR [esi-0x37]
  40b927:	inc    ebp
  40b928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b929:	dec    eax
  40b92a:	push   cs
  40b92b:	mov    gs,edx
  40b92d:	lea    edx,[ebx+0x21]
  40b930:	imul   BYTE PTR [eax+0x578c4db3]
  40b936:	push   esi
  40b937:	lods   eax,DWORD PTR ds:[esi]
  40b938:	cwde   
  40b939:	xchg   edi,eax
  40b93a:	call   0x44fdf5b4
  40b93f:	or     BYTE PTR [esi+0x12c9adf6],cl
  40b945:	mov    ds:0x26dc4c,eax
  40b94a:	call   0xdb00:0xd9a5cb00
  40b951:	(bad)  
  40b952:	repnz lea ebx,[esi+0x6e53c1d5]
  40b959:	repnz push ds
  40b95b:	out    0x97,eax
  40b95d:	std    
  40b95e:	xchg   edx,eax
  40b95f:	and    DWORD PTR [ebp+0x79],0xed9d4847
  40b966:	and    BYTE PTR [ebx],dh
  40b968:	sbb    DWORD PTR [esi+0x4f],esp
  40b96b:	rcr    DWORD PTR [ebp+0x1db56d64],0x6a
  40b972:	pop    ss
  40b973:	pop    eax
  40b974:	sahf   
  40b975:	push   ebx
  40b976:	ins    DWORD PTR es:[edi],dx
  40b977:	je     0x40b9cb
  40b979:	jle    0x40b90a
  40b97b:	add    al,0x42
  40b97d:	jb     0x40b972
  40b97f:	jbe    0x40b938
  40b981:	cmp    DWORD PTR [esi],ebx
  40b983:	pop    esp
  40b984:	inc    ebx
  40b985:	dec    ebx
  40b986:	mov    ecx,0x2f99c94
  40b98b:	add    DWORD PTR [edi+0x716b6780],edx
  40b991:	inc    ebp
  40b992:	pop    edi
  40b993:	pop    edi
  40b994:	out    dx,al
  40b995:	jg     0x40b945
  40b997:	cmc    
  40b998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b999:	retf   0x2def
  40b99c:	(bad)  
  40b99d:	mov    ebx,0xc1b173b0
  40b9a2:	or     BYTE PTR [edi],ah
  40b9a4:	iret   
  40b9a5:	or     esi,0xe044e6c7
  40b9ab:	mov    ds:0x5b993f9c,eax
  40b9b0:	loopne 0x40b9df
  40b9b2:	icebp  
  40b9b3:	test   dl,bh
  40b9b5:	iret   
  40b9b6:	(bad)  
  40b9b8:	(bad)  
  40b9b9:	(bad)
  40b9bc:	mov    ds:0x48cfa2ca,al
  40b9c1:	mov    edi,0x54f7acd6
  40b9c6:	inc    edi
  40b9c7:	sahf   
  40b9c8:	cmp    al,0xb6
  40b9ca:	jo     0x40b9aa
  40b9cc:	jg     0x40b952
  40b9ce:	sbb    bh,ah
  40b9d0:	lods   al,BYTE PTR ds:[esi]
  40b9d1:	fs in  al,0xc5
  40b9d4:	adc    BYTE PTR gs:[ecx-0xf],bh
  40b9d8:	and    ebx,0xe2de759e
  40b9de:	jb     0x40ba21
  40b9e0:	pop    esp
  40b9e1:	nop
  40b9e2:	cmp    ah,BYTE PTR [eax+0x58]
  40b9e5:	sub    al,0xbc
  40b9e7:	push   ss
  40b9e8:	(bad)  
  40b9e9:	int    0x42
  40b9eb:	call   0xbae8df40
  40b9f0:	sub    BYTE PTR [ebx+0x4e0f5016],ah
  40b9f6:	int    0xac
  40b9f8:	lock cmc 
  40b9fa:	push   esp
  40b9fb:	and    ebx,DWORD PTR [edx]
  40b9fd:	hlt    
  40b9fe:	and    eax,0x614dafc2
  40ba03:	push   esp
  40ba04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba05:	out    dx,eax
  40ba06:	jg     0x40b992
  40ba08:	in     eax,0x86
  40ba0a:	sbb    bl,BYTE PTR [edi+0x7cd4ffce]
  40ba10:	mov    eax,ds:0xfa970545
  40ba15:	jle    0x40ba53
  40ba17:	out    dx,al
  40ba18:	fld    st(5)
  40ba1a:	cdq    
  40ba1b:	jle    0x40ba4d
  40ba1d:	mov    ecx,ecx
  40ba1f:	(bad)  
  40ba21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba22:	cmp    DWORD PTR [eax-0x780c2aec],eax
  40ba28:	sbb    eax,0xfb2002dc
  40ba2d:	ficomp WORD PTR es:[ebx]
  40ba30:	sahf   
  40ba31:	adc    al,0x1d
  40ba33:	lods   eax,DWORD PTR ds:[esi]
  40ba34:	jne    0x40b9ee
  40ba36:	scas   al,BYTE PTR es:[edi]
  40ba37:	or     al,0xf8
  40ba39:	inc    edx
  40ba3a:	mov    ebp,0x446c5d40
  40ba3f:	(bad)  
  40ba40:	xchg   esp,eax
  40ba41:	or     esp,DWORD PTR [edi+edi*8-0x2]
  40ba45:	adc    al,0x37
  40ba47:	stos   DWORD PTR es:[edi],eax
  40ba48:	inc    eax
  40ba49:	sti    
  40ba4a:	adc    al,0xb6
  40ba4c:	gs repnz xchg ebx,eax
  40ba4f:	xchg   edx,eax
  40ba50:	mov    edx,0x637686b8
  40ba55:	push   edx
  40ba56:	shl    BYTE PTR [ebx-0x48292240],0xa0
  40ba5d:	jmp    0x40ba2c
  40ba5f:	out    dx,al
  40ba60:	or     cl,bl
  40ba62:	icebp  
  40ba63:	mov    bl,0x53
  40ba65:	das    
  40ba66:	stos   DWORD PTR es:[edi],eax
  40ba67:	pop    ss
  40ba68:	test   DWORD PTR [edx+0xf],0x2c9243b0
  40ba6f:	out    dx,al
  40ba70:	addr16 mov dh,0x41
  40ba73:	test   BYTE PTR [edi+0xe63b361],dl
  40ba79:	mov    al,bl
  40ba7b:	retf   0xa4e4
  40ba7e:	push   esi
  40ba7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba80:	inc    ecx
  40ba81:	mov    ebp,0xf3af0938
  40ba86:	cmp    eax,0x844f975a
  40ba8b:	pushf  
  40ba8c:	shr    DWORD PTR [ecx+0x4c],cl
  40ba8f:	(bad)  
  40ba90:	push   esp
  40ba91:	loope  0x40ba22
  40ba93:	sar    al,cl
  40ba95:	call   0x6e8b:0x1a543b
  40ba9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba9d:	ja     0x40ba36
  40ba9f:	jb     0x40bafb
  40baa1:	jne    0x40ba48
  40baa3:	enter  0xa9c0,0xa8
  40baa7:	les    ecx,FWORD PTR [esi+eiz*2+0x41b85dde]
  40baae:	add    esi,DWORD PTR [esi]
  40bab0:	mov    edi,0x8e2715dc
  40bab5:	pop    ecx
  40bab6:	push   cs
  40bab7:	popa   
  40bab8:	lock xchg ecx,eax
  40baba:	aam    0xb5
  40babc:	adc    BYTE PTR ss:[ecx],0xba
  40bac0:	arpl   WORD PTR [ecx+ecx*4],dx
  40bac3:	or     ecx,ebx
  40bac5:	and    ebp,DWORD PTR [esi]
  40bac7:	inc    ecx
  40bac8:	rol    BYTE PTR [esi+0x5b],1
  40bacb:	lea    esp,[edx]
  40bacd:	aad    0x22
  40bacf:	icebp  
  40bad0:	retf   0xdf93
  40bad3:	lods   ax,WORD PTR ds:[si]
  40bad6:	inc    edi
  40bad7:	scas   al,BYTE PTR es:[edi]
  40bad8:	mov    al,ds:0x7cda26a0
  40badd:	inc    ecx
  40bade:	sar    DWORD PTR [ebx-0x6a],cl
  40bae1:	lea    esp,[eax-0x41]
  40bae4:	jae    0x40ba9b
  40bae6:	mov    DWORD PTR [edi-0x40c9f1d1],edx
  40baec:	xrstors [eax+edi*2]
  40baf0:	(bad)  
  40baf1:	in     al,dx
  40baf2:	(bad)  
  40baf3:	pinsrw mm1,WORD PTR [esi],0x24
  40baf7:	or     al,0x72
  40baf9:	mov    edi,0x79388ebf
  40bafe:	adc    eax,0x3817aa9f
  40bb03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb04:	in     eax,0x93
  40bb06:	or     al,0xe5
  40bb08:	lahf   
  40bb09:	cmp    al,0x57
  40bb0b:	mov    WORD PTR [esi-0x15724a95],cs
  40bb11:	std    
  40bb12:	test   DWORD PTR [esi],ebx
  40bb14:	pop    esp
  40bb15:	xchg   ecx,eax
  40bb16:	adc    eax,0xd6d311de
  40bb1b:	lods   eax,DWORD PTR ds:[esi]
  40bb1c:	adc    eax,0x4dbca04e
  40bb21:	jae    0x40baf9
  40bb23:	popa   
  40bb24:	pop    esp
  40bb25:	nop
  40bb26:	sub    al,0x54
  40bb28:	dec    eax
  40bb29:	(bad)  
  40bb2a:	dec    ecx
  40bb2b:	clc    
  40bb2c:	adc    eax,0x65f6785b
  40bb31:	sbb    dl,BYTE PTR [ecx-0x46293cc1]
  40bb37:	int    0x32
  40bb39:	imul   ecx,ebx,0x81beb36b
  40bb3f:	jg     0x40bb44
  40bb41:	adc    DWORD PTR [ecx-0x43f6c3e6],esp
  40bb47:	nop
  40bb48:	sbb    BYTE PTR [edx],bh
  40bb4a:	inc    ecx
  40bb4b:	mov    ecx,0xd8db7da0
  40bb50:	xchg   esi,eax
  40bb51:	dec    ebx
  40bb52:	or     BYTE PTR [ecx+edi*8-0x4a],dl
  40bb56:	(bad)  
  40bb57:	push   0x4b
  40bb59:	jno    0x40bb43
  40bb5b:	xor    BYTE PTR [ecx],0x8b
  40bb5e:	push   ecx
  40bb5f:	mov    al,BYTE PTR [ebp-0x62]
  40bb62:	mov    ds:0x583afe97,eax
  40bb67:	dec    esi
  40bb68:	adc    al,0xf8
  40bb6a:	sbb    eax,0x22ea2e75
  40bb6f:	pop    esi
  40bb70:	cwde   
  40bb71:	xchg   BYTE PTR [ebp+0x4b258290],dl
  40bb77:	xlat   BYTE PTR ds:[ebx]
  40bb78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb79:	fwait
  40bb7a:	pop    edi
  40bb7b:	rcr    al,cl
  40bb7d:	je     0x40bb60
  40bb7f:	xchg   edx,eax
  40bb80:	int3   
  40bb81:	ja     0x40bbe3
  40bb83:	sbb    DWORD PTR [ebp-0x5b6ecbea],0x20af2188
  40bb8d:	out    0xfa,eax
  40bb8f:	(bad)  
  40bb90:	and    cl,al
  40bb92:	(bad)  
  40bb93:	xchg   ebx,eax
  40bb94:	scas   al,BYTE PTR es:[edi]
  40bb95:	sub    eax,0xc8b06184
  40bb9a:	sti    
  40bb9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb9c:	fcomp  DWORD PTR ds:0x170777d9
  40bba2:	dec    esp
  40bba3:	and    BYTE PTR ds:0x629cd5cb,bh
  40bba9:	push   ds
  40bbaa:	or     DWORD PTR [edi],ebx
  40bbac:	ror    DWORD PTR [ecx],1
  40bbae:	or     al,0x1d
  40bbb0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbb2:	mov    edi,0x873187bc
  40bbb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbb8:	loopne 0x40bbb9
  40bbba:	lods   eax,DWORD PTR ds:[esi]
  40bbbb:	jecxz  0x40bb46
  40bbbd:	outs   dx,DWORD PTR ds:[esi]
  40bbbe:	hlt    
  40bbbf:	sub    BYTE PTR [esp+esi*8-0x40],0x4a
  40bbc4:	dec    ebx
  40bbc5:	xchg   ebp,eax
  40bbc6:	sbb    eax,0xa752d394
  40bbcb:	lar    esi,WORD PTR [esi-0x6069592e]
  40bbd2:	(bad)  
  40bbd3:	xor    DWORD PTR [eax],esp
  40bbd5:	(bad)  
  40bbd6:	es outs dx,BYTE PTR gs:[esi]
  40bbd9:	stc    
  40bbda:	leave  
  40bbdb:	cdq    
  40bbdc:	mov    dh,0x69
  40bbde:	fisttp DWORD PTR [eax+0x7d]
  40bbe1:	(bad)  
  40bbe2:	stc    
  40bbe3:	and    bh,BYTE PTR [eax]
  40bbe5:	out    0x61,eax
  40bbe7:	adc    edi,esi
  40bbe9:	mov    esi,0x84a6d533
  40bbee:	push   ss
  40bbef:	sbb    eax,0x45e20963
  40bbf4:	dec    eax
  40bbf5:	(bad)  
  40bbf6:	or     al,0xb4
  40bbf8:	je     0x40bbec
  40bbfa:	ds cmovle eax,ecx
  40bbfe:	les    esi,FWORD PTR [ebx-0x718e1180]
  40bc04:	inc    esi
  40bc05:	fisub  WORD PTR [esi-0x13349355]
  40bc0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc0c:	sbb    eax,DWORD PTR [ecx+0x7a]
  40bc0f:	imul   eax,DWORD PTR [edi+eax*1],0x43c40882
  40bc16:	ret    0x523f
  40bc19:	mov    edx,0xe8f6f5ff
  40bc1e:	xchg   BYTE PTR [eax+0x7d],ah
  40bc21:	inc    eax
  40bc22:	enter  0x88b8,0x27
  40bc26:	shr    edx,1
  40bc28:	sbb    BYTE PTR [edx-0x38f6dbb3],cl
  40bc2e:	clc    
  40bc2f:	cmp    eax,DWORD PTR [ebp+0x34]
  40bc32:	repz dec ecx
  40bc34:	enter  0x41d,0x56
  40bc38:	test   al,0x95
  40bc3a:	iret   
  40bc3b:	out    0x7d,eax
  40bc3d:	ja     0x40bc12
  40bc3f:	test   eax,0x14dadf02
  40bc44:	push   ebp
  40bc45:	xor    esi,0x2ba127ea
  40bc4b:	(bad)  
  40bc4c:	xchg   ebx,eax
  40bc4d:	bound  edx,QWORD PTR gs:[ecx]
  40bc50:	test   BYTE PTR [edi],bl
  40bc52:	and    ch,BYTE PTR [ecx-0x36]
  40bc55:	ret    0xf0d7
  40bc58:	dec    edx
  40bc59:	xchg   ebx,eax
  40bc5a:	dec    ebp
  40bc5b:	daa    
  40bc5c:	or     al,0x88
  40bc5e:	clc    
  40bc5f:	pop    ds
  40bc60:	or     edx,ebx
  40bc62:	mov    edx,0x9c3d05e8
  40bc67:	push   cs
  40bc68:	mov    cl,BYTE PTR [ebp+esi*4+0x63e7126b]
  40bc6f:	dec    edx
  40bc70:	lods   al,BYTE PTR ds:[esi]
  40bc71:	jno    0x40bc47
  40bc73:	xlat   BYTE PTR ds:[ebx]
  40bc74:	push   es
  40bc75:	fmul   DWORD PTR [esi-0x44]
  40bc78:	lds    ecx,FWORD PTR [ecx+0x32a2f2ee]
  40bc7e:	adc    eax,0xaacedb08
  40bc83:	(bad)  
  40bc84:	les    edi,FWORD PTR [edi+ebp*1]
  40bc87:	std    
  40bc88:	sub    DWORD PTR [edi+0xcea0b83],0x53
  40bc8f:	jg     0x40bc91
  40bc91:	mov    al,ds:0x6e45301
  40bc96:	inc    ebx
  40bc97:	cmp    ah,BYTE PTR [eax+0x7]
  40bc9a:	cwde   
  40bc9b:	daa    
  40bc9c:	loope  0x40bc27
  40bc9e:	and    al,0xd3
  40bca0:	cmp    BYTE PTR [ecx-0x11],ah
  40bca3:	imul   edi,DWORD PTR [ecx+0x53e97ed0],0xd579a674
  40bcad:	scas   al,BYTE PTR es:[edi]
  40bcae:	add    al,0x22
  40bcb1:	call   0x7f19:0xd18f6727
  40bcb8:	mov    es:0x5253f8f9,eax
  40bcbe:	mov    ch,0x65
  40bcc0:	pop    es
  40bcc1:	ins    DWORD PTR es:[edi],dx
  40bcc2:	fdiv   DWORD PTR [eax+ecx*2+0x4225abcc]
  40bcc9:	sbb    DWORD PTR [ebx-0x5e],ebp
  40bccc:	cdq    
  40bccd:	outs   dx,BYTE PTR ds:[esi]
  40bcce:	sbb    DWORD PTR [esi],edi
  40bcd0:	jno    0x40bd2e
  40bcd2:	adc    bh,BYTE PTR [edx+0x2be03d4b]
  40bcd8:	ret    0xc039
  40bcdb:	mov    ch,0x54
  40bcdd:	jge    0x40bcd9
  40bcdf:	fmul   st,st(2)
  40bce1:	sub    al,0xc4
  40bce3:	jne    0x40bcce
  40bce5:	fimul  DWORD PTR [esi]
  40bce7:	imul   ebx,DWORD PTR [esi-0x18ca4607],0x19
  40bcee:	cmp    eax,0xd3df5113
  40bcf3:	mov    ah,0x67
  40bcf5:	sub    cl,bl
  40bcf7:	mov    al,ds:0x8d9b0719
  40bcfc:	xlat   BYTE PTR ds:[ebx]
  40bcfd:	loope  0x40bcfb
  40bcff:	and    DWORD PTR [ebx+0x1cd9265b],ebp
  40bd05:	out    dx,eax
  40bd06:	mov    ah,0x37
  40bd08:	adc    eax,0x4735b094
  40bd0d:	repnz ficom WORD PTR [edi]
  40bd10:	gs nop
  40bd12:	adc    ecx,esp
  40bd14:	or     eax,DWORD PTR [ecx]
  40bd16:	or     eax,0xbda0ec6e
  40bd1b:	fs test dl,bl
  40bd1e:	dec    ebp
  40bd1f:	jge    0x40bd71
  40bd21:	mov    ecx,0x8247b738
  40bd26:	adc    eax,0xcb68ca64
  40bd2b:	out    0x50,eax
  40bd2d:	pop    ecx
  40bd2e:	xchg   ebp,eax
  40bd2f:	dec    ebp
  40bd30:	jmp    FWORD PTR [esi-0x77e029b9]
  40bd36:	cmp    ebp,0x7bc252d5
  40bd3c:	hlt    
  40bd3d:	in     eax,0x92
  40bd3f:	mov    ebx,0xe3fdf93b
  40bd44:	loopne 0x40bd37
  40bd46:	pop    ebp
  40bd47:	out    dx,al
  40bd48:	lock fld TBYTE PTR [eax+0x27]
  40bd4c:	mov    ch,0x26
  40bd4e:	or     BYTE PTR [edi-0x2eaee290],ch
  40bd54:	pop    ebx
  40bd55:	mov    bl,0x3b
  40bd57:	gs (bad) 
  40bd59:	mov    ecx,0x69e0b4c2
  40bd5e:	push   ebx
  40bd5f:	mov    eax,ds:0xfd6a53c7
  40bd64:	cmp    eax,0xe43b7bab
  40bd69:	iret   
  40bd6a:	leave  
  40bd6b:	jmp    0x40bd13
  40bd6d:	scas   eax,DWORD PTR es:[edi]
  40bd6e:	mov    ebp,0xc04651d4
  40bd73:	push   0x8
  40bd75:	in     al,0x76
  40bd77:	test   eax,0x1a5bd70f
  40bd7c:	push   cs
  40bd7d:	js     0x40bd0f
  40bd7f:	rcr    BYTE PTR [edi],1
  40bd81:	mov    eax,ds:0x8dd9da01
  40bd86:	mov    BYTE PTR [ebx+eiz*2],ch
  40bd89:	xchg   ebp,eax
  40bd8a:	mov    edx,0x70215dfc
  40bd8f:	xchg   DWORD PTR [ecx],edx
  40bd91:	out    dx,al
  40bd92:	lock mov cl,0x47
  40bd95:	mov    al,ds:0x71f41894
  40bd9a:	sbb    ah,BYTE PTR [esi]
  40bd9c:	shl    DWORD PTR [eax+0x4],cl
  40bd9f:	fbstp  TBYTE PTR [ebx+0x64850753]
  40bda5:	mov    ds:0xf176e136,al
  40bdaa:	and    edx,DWORD PTR [ecx]
  40bdac:	push   ss
  40bdad:	and    ebp,edi
  40bdaf:	pop    eax
  40bdb0:	cmp    esp,DWORD PTR [ebx+ebp*4-0xf]
  40bdb4:	xchg   esp,eax
  40bdb5:	and    BYTE PTR [ebp-0x10],dl
  40bdb8:	jmp    0x8aef33e8
  40bdbd:	repz and BYTE PTR fs:[eax],cl
  40bdc1:	ja     0x40bd62
  40bdc3:	pop    ebx
  40bdc4:	aam    0x4b
  40bdc6:	in     al,dx
  40bdc7:	in     eax,0xa8
  40bdc9:	or     al,0xd2
  40bdcb:	and    DWORD PTR [eax],0x634e34bc
  40bdd1:	ins    DWORD PTR es:[edi],dx
  40bdd2:	mov    al,ds:0xdaa66609
  40bdd7:	jg     0x40bd89
  40bdd9:	mov    DWORD PTR [edx-0x71],ebp
  40bddc:	retf   0xd2e
  40bddf:	lods   al,BYTE PTR ds:[esi]
  40bde0:	push   ebx
  40bde1:	sub    eax,0x79a6a959
  40bde6:	retf   0x12e8
  40bde9:	push   ds
  40bdea:	loope  0x40bdf1
  40bdec:	loop   0x40be61
  40bdee:	pop    eax
  40bdef:	adc    ch,cl
  40bdf1:	mov    ah,0x3
  40bdf3:	inc    edx
  40bdf4:	retf   0xdf0c
  40bdf7:	cmp    BYTE PTR [ecx-0xd3f52bf],dh
  40bdfd:	popf   
  40bdfe:	add    ah,BYTE PTR [ebx]
  40be00:	sub    ecx,DWORD PTR [eax+0x50]
  40be03:	mov    ebp,0x89f1d98f
  40be08:	sti    
  40be09:	push   edi
  40be0a:	cli    
  40be0b:	jb     0x40be2c
  40be0d:	xchg   ebx,eax
  40be0e:	sub    DWORD PTR [edx+0x1ef3824d],ebp
  40be14:	mov    eax,ds:0xac36cf08
  40be19:	fs pop ecx
  40be1b:	xchg   ecx,eax
  40be1c:	cs xchg edx,eax
  40be1e:	pop    edx
  40be1f:	test   eax,0x1305e6d8
  40be24:	xor    eax,0x50eeade1
  40be29:	int3   
  40be2a:	jmp    0x7b914a
  40be2f:	add    al,0x5
  40be31:	nop
  40be32:	repz pop ebx
  40be34:	das    
  40be35:	pop    ss
  40be36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be37:	out    dx,eax
  40be38:	test   eax,0x86e6a16c
  40be3d:	jl     0x40be92
  40be3f:	mov    dh,0x64
  40be41:	or     eax,0x29a37afe
  40be46:	push   edx
  40be47:	mov    esp,DWORD PTR [edi]
  40be49:	stos   BYTE PTR es:[edi],al
  40be4a:	cs mov ecx,0x2de13f9a
  40be50:	aas    
  40be51:	inc    esp
  40be52:	lahf   
  40be53:	(bad)  
  40be54:	enter  0xeb73,0x8f
  40be58:	out    dx,al
  40be59:	push   cs
  40be5a:	bnd jmp 0x639f2c28
  40be60:	pop    ecx
  40be61:	aad    0x7d
  40be63:	outs   dx,BYTE PTR ds:[esi]
  40be64:	cmp    ebp,DWORD PTR [eax]
  40be66:	or     al,BYTE PTR [edx-0x37311375]
  40be6c:	xor    DWORD PTR [ebx+0x33],0xffffffbe
  40be70:	dec    ecx
  40be71:	and    BYTE PTR [eax],0xed
  40be74:	mov    ah,0x72
  40be76:	(bad)  
  40be77:	sub    edx,eax
  40be79:	jmp    0x40bef4
  40be7b:	ds mov dl,0x7a
  40be7e:	pop    ebp
  40be7f:	pop    ebx
  40be80:	sub    cl,bl
  40be82:	mov    ebx,0x3698c661
  40be87:	mov    al,ds:0x28e3600b
  40be8c:	or     DWORD PTR [edi],0x22
  40be8f:	mov    edi,0x24656f56
  40be94:	xor    bl,bl
  40be96:	adc    esi,ecx
  40be98:	mov    cl,0x95
  40be9a:	add    BYTE PTR [edx-0x4f8f5ae7],cl
  40bea0:	mov    al,0x19
  40bea2:	lahf   
  40bea3:	add    BYTE PTR [edx+0x231fd600],bh
  40bea9:	mov    ebx,0xf9d0a526
  40beae:	aaa    
  40beaf:	cld    
  40beb0:	(bad)  
  40beb1:	mov    esi,0xbef56cf0
  40beb6:	sub    cl,BYTE PTR [edi]
  40beb8:	scas   eax,DWORD PTR es:[edi]
  40beb9:	pop    es
  40beba:	jmp    0x40bf07
  40bebc:	xchg   edi,eax
  40bebd:	xor    DWORD PTR [eax-0x3b739737],esp
  40bec3:	leave  
  40bec4:	ins    BYTE PTR es:[edi],dx
  40bec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bec6:	mov    dh,0xcd
  40bec8:	rcl    DWORD PTR ds:0xa0a97e6b,cl
  40bece:	pop    es
  40becf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bed0:	xchg   edx,eax
  40bed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed2:	data16 jnp 0x40bed0
  40bed5:	into   
  40bed6:	pop    esp
  40bed7:	ret    
  40bed8:	(bad)
  40bedc:	out    0xce,al
  40bede:	retf   
  40bedf:	dec    ecx
  40bee0:	aam    0x71
  40bee2:	pushf  
  40bee3:	retf   0xf77
  40bee6:	xor    eax,0x26fead1f
  40beeb:	or     BYTE PTR [ebx-0x4d6c9ff8],0xa1
  40bef2:	pusha  
  40bef3:	test   al,0xc2
  40bef5:	adc    BYTE PTR ds:0x566e1f89,dl
  40befb:	push   ebx
  40befc:	mov    al,ds:0xe288e452
  40bf01:	bound  edx,QWORD PTR [edi-0x78]
  40bf04:	cmp    ecx,ecx
  40bf06:	repnz dec edx
  40bf08:	std    
  40bf09:	mov    eax,0x11c401e3
  40bf0e:	test   al,0x1b
  40bf10:	jl     0x40bf81
  40bf12:	jg     0x40beda
  40bf14:	cdq    
  40bf15:	cmp    al,0x40
  40bf17:	mov    dl,0x71
  40bf19:	cmp    BYTE PTR [ebx-0x4d],ah
  40bf1c:	mov    WORD PTR [esi+0x2b9dc56d],cs
  40bf22:	adc    eax,DWORD PTR [ecx]
  40bf24:	ss repz jnp 0x40bf42
  40bf28:	loopne 0x40bf4e
  40bf2a:	jae    0x40bed4
  40bf2c:	in     eax,0x0
  40bf2e:	int3   
  40bf2f:	push   ss
  40bf30:	mov    dl,0xe7
  40bf32:	inc    edi
  40bf33:	int    0x21
  40bf35:	out    0x2b,eax
  40bf37:	test   ebp,eax
  40bf39:	sbb    eax,0x1b1048dc
  40bf3e:	dec    edi
  40bf3f:	shr    DWORD PTR fs:[edx+0xcbdebe6],0x2b
  40bf47:	inc    ebx
  40bf48:	xor    al,0x54
  40bf4a:	lods   al,BYTE PTR ds:[esi]
  40bf4b:	jns    0x40bf2e
  40bf4d:	sar    BYTE PTR [ecx+edx*2-0x1334e5],1
  40bf54:	mov    edi,0x2b97bde5
  40bf59:	idiv   BYTE PTR [esi-0x26]
  40bf5c:	cdq    
  40bf5d:	inc    edx
  40bf5e:	rcr    DWORD PTR [ebp-0x1dd0d971],1
  40bf64:	es (bad) 
  40bf66:	(bad)  
  40bf68:	mov    ecx,0x706e0a6a
  40bf6d:	dec    ebx
  40bf6e:	jmp    0x40bf36
  40bf70:	fldcw  WORD PTR [ecx+0x62e0089]
  40bf76:	push   esi
  40bf77:	mov    DWORD PTR [ebx+esi*2-0x6c],edi
  40bf7b:	add    eax,0x85a8eef0
  40bf80:	jno    0x40bfcb
  40bf82:	inc    edx
  40bf83:	mov    bl,0x21
  40bf85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf86:	fldenv [eax+0x28]
  40bf89:	sub    edx,eax
  40bf8b:	sbb    eax,0x4d6d69fe
  40bf90:	xor    BYTE PTR [esi+0x32],cl
  40bf93:	push   cs
  40bf94:	inc    esp
  40bf95:	cmp    DWORD PTR [esi-0x26],ebx
  40bf98:	adc    al,0x81
  40bf9a:	adc    eax,0xefe94aea
  40bf9f:	hlt    
  40bfa0:	dec    esi
  40bfa1:	or     ebp,DWORD PTR [ebx+ebp*1]
  40bfa4:	pusha  
  40bfa5:	pop    esi
  40bfa6:	test   DWORD PTR [edi],eax
  40bfa8:	push   es
  40bfa9:	or     al,0xc3
  40bfab:	jns    0x40bfba
  40bfad:	add    esp,0xffffffef
  40bfb0:	pop    ebp
  40bfb1:	inc    ecx
  40bfb2:	mov    al,ds:0xd4fd123e
  40bfb7:	inc    ebx
  40bfb8:	xchg   ebx,eax
  40bfb9:	out    0x25,eax
  40bfbb:	call   0x498c:0x211d410
  40bfc2:	inc    esi
  40bfc3:	fcom   QWORD PTR [ebx-0x49d6d281]
  40bfc9:	cld    
  40bfca:	aas    
  40bfcb:	push   edi
  40bfcc:	int3   
  40bfcd:	pop    ds
  40bfce:	ins    BYTE PTR es:[edi],dx
  40bfcf:	(bad)  
  40bfd0:	push   esp
  40bfd1:	repz cmp ch,BYTE PTR [esi-0x3faaec9a]
  40bfd8:	mov    ebp,0xcf041187
  40bfdd:	mov    ah,0x20
  40bfdf:	scas   eax,DWORD PTR es:[edi]
  40bfe0:	pop    ecx
  40bfe1:	xchg   BYTE PTR [edi+ecx*2-0x5594883e],cl
  40bfe8:	(bad)  
  40bfe9:	stos   DWORD PTR es:[edi],eax
  40bfea:	aam    0x90
  40bfec:	and    BYTE PTR [eax+0x597c645b],cl
  40bff2:	arpl   WORD PTR [esi+0x5cbd4e40],bp
  40bff8:	inc    ebp
  40bff9:	(bad)  
  40bffa:	xchg   ebx,eax
  40bffb:	cdq    
  40bffc:	xchg   ecx,eax
  40bffd:	xor    al,0x7e
  40bfff:	into   
  40c000:	jp     0x40c062
  40c002:	out    dx,al
  40c003:	js     0x40bf86
  40c005:	jg     0x40c051
  40c007:	ret    
  40c008:	cwde   
  40c009:	mov    ds:0xcefe1d10,eax
  40c00e:	pop    ds
  40c00f:	(bad)  
  40c010:	lods   al,BYTE PTR ds:[esi]
  40c011:	jo     0x40bfe7
  40c013:	ret    0x5c9e
  40c016:	adc    eax,0x241c118c
  40c01b:	xchg   ecx,eax
  40c01c:	(bad)  
  40c01d:	mov    ecx,0xaeffe7be
  40c022:	adc    BYTE PTR [ebp+0x51bc15d4],bh
  40c028:	cmp    eax,0xe86ab3b4
  40c02d:	in     al,0xe7
  40c02f:	dec    esi
  40c030:	sbb    al,0xca
  40c032:	mov    DWORD PTR [edi],esp
  40c034:	mov    ah,0x6
  40c036:	lds    ecx,FWORD PTR [eax]
  40c038:	les    edx,FWORD PTR ds:0x87a2d8d0
  40c03e:	(bad)  ds:0x71c19f1f
  40c044:	sahf   
  40c045:	sbb    al,dl
  40c047:	pop    edx
  40c048:	lock pop es
  40c04a:	adc    eax,0x287ad575
  40c04f:	cmp    al,0xb5
  40c051:	hlt    
  40c052:	and    eax,0x9739206a
  40c057:	pop    esp
  40c058:	cmp    BYTE PTR [ebx+0x76],ch
  40c05b:	mov    ecx,0x34d70549
  40c060:	mov    DWORD PTR [ebp-0x316bb023],esp
  40c066:	rcl    BYTE PTR [edi+0x62aaeb09],1
  40c06c:	push   edi
  40c06d:	jp     0x40c0bf
  40c06f:	mov    al,0x64
  40c071:	xchg   ebx,eax
  40c072:	inc    esi
  40c073:	ss scas eax,DWORD PTR es:[edi]
  40c075:	or     eax,0x14f6fbb8
  40c07a:	cwde   
  40c07b:	xchg   esp,eax
  40c07c:	popf   
  40c07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c07e:	outs   dx,DWORD PTR ds:[esi]
  40c07f:	xchg   edi,eax
  40c080:	and    BYTE PTR [ecx+eax*4+0x4f14a0d7],0x89
  40c088:	push   esi
  40c089:	jbe    0x40c0e3
  40c08b:	outs   dx,DWORD PTR ds:[esi]
  40c08c:	mov    eax,ds:0x9af967e6
  40c091:	cmp    al,0x7a
  40c093:	and    esi,DWORD PTR [edi]
  40c095:	add    BYTE PTR [edx-0x7d],al
  40c098:	pop    es
  40c099:	mov    eax,ds:0x1a6f1020
  40c09e:	leave  
  40c09f:	out    dx,al
  40c0a0:	mov    BYTE PTR [ebp+0x6d],dl
  40c0a3:	retf   0x6dc9
  40c0a6:	pop    esi
  40c0a7:	mov    ch,0x91
  40c0a9:	rol    dh,1
  40c0ab:	adc    edi,edi
  40c0ad:	xor    edx,esi
  40c0af:	jg     0x40c072
  40c0b1:	out    dx,al
  40c0b2:	dec    esp
  40c0b3:	test   BYTE PTR [edi],bh
  40c0b5:	outs   dx,BYTE PTR ds:[esi]
  40c0b6:	adc    eax,0x55058f98
  40c0bb:	pop    ds
  40c0bc:	mov    cl,0x7a
  40c0be:	jne    0x40c104
  40c0c0:	pop    edi
  40c0c1:	jle    0x40c11e
  40c0c3:	and    dh,bl
  40c0c5:	push   esi
  40c0c6:	mov    dh,0x8a
  40c0c8:	dec    esp
  40c0c9:	jmp    0x6eeb:0x2fe47126
  40c0d0:	out    0x8,al
  40c0d2:	lods   al,BYTE PTR ds:[esi]
  40c0d3:	shr    BYTE PTR [ebx],1
  40c0d5:	(bad)  
  40c0d6:	mov    edi,0x60dbe27a
  40c0db:	in     eax,dx
  40c0dc:	pop    ebx
  40c0dd:	cwde   
  40c0de:	shr    bl,0xad
  40c0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e2:	cmp    DWORD PTR [esi-0x12300147],eax
  40c0e8:	pop    ds
  40c0e9:	adc    esp,esi
  40c0eb:	in     al,0xb2
  40c0ed:	std    
  40c0ee:	mov    al,ds:0x94f036d9
  40c0f3:	out    dx,eax
  40c0f4:	rol    ch,1
  40c0f6:	les    esp,FWORD PTR [edi]
  40c0f8:	cmp    esi,ebp
  40c0fa:	and    DWORD PTR [ebx-0xa073aa],0xfffffff7
  40c101:	lds    eax,FWORD PTR [eax+0x7806685f]
  40c107:	jne    0x40c115
  40c109:	ja     0x40c0f7
  40c10b:	dec    esi
  40c10c:	leave  
  40c10d:	or     edi,DWORD PTR [ebp+0x69aea01a]
  40c113:	sub    BYTE PTR [edi*2-0x6258460c],bl
  40c11a:	icebp  
  40c11b:	sbb    esp,DWORD PTR [ecx]
  40c11d:	jl     0x40c162
  40c11f:	(bad)  
  40c120:	outs   dx,BYTE PTR ds:[esi]
  40c121:	ret    0x921e
  40c124:	mov    ecx,0xbfccab70
  40c129:	xchg   edx,eax
  40c12a:	or     DWORD PTR ds:0x75098f6b,edx
  40c130:	cmp    eax,0xda580a03
  40c135:	xchg   edi,eax
  40c136:	adc    al,0xf1
  40c138:	and    eax,edx
  40c13a:	dec    edi
  40c13b:	pop    es
  40c13c:	test   al,0x2f
  40c13e:	fisubr WORD PTR [edx-0x22]
  40c141:	pop    esp
  40c142:	push   edi
  40c143:	rol    DWORD PTR [edi+0x5170b4a0],0x69
  40c14a:	mov    ah,0x87
  40c14c:	sbb    DWORD PTR [ebp-0x38],esi
  40c14f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c150:	int    0xc2
  40c152:	ss cld 
  40c154:	lahf   
  40c155:	jne    0x40c136
  40c157:	jb     0x40c0ed
  40c159:	push   cs
  40c15a:	jp     0x40c11f
  40c15c:	jge    0x40c174
  40c15e:	inc    ebp
  40c15f:	loopne 0x40c112
  40c161:	push   cs
  40c162:	(bad)  
  40c164:	sbb    DWORD PTR [ebp+0x7c],edx
  40c167:	les    ebx,FWORD PTR [ebp-0x7102177a]
  40c16d:	pop    ds
  40c16e:	pop    ecx
  40c16f:	lods   al,BYTE PTR ds:[esi]
  40c170:	ficomp WORD PTR [ecx+0x17]
  40c173:	sbb    BYTE PTR [edi+0x340139eb],dh
  40c179:	arpl   WORD PTR fs:[ecx-0x57],bx
  40c17d:	pop    ebp
  40c17e:	aad    0x49
  40c180:	lahf   
  40c181:	add    eax,0x9fe8a6b7
  40c186:	sbb    al,0xda
  40c188:	mov    ecx,0x9d55a50c
  40c18d:	jbe    0x40c1b9
  40c18f:	fcomp  QWORD PTR [ebp+0x75]
  40c192:	push   esi
  40c193:	dec    eax
  40c194:	push   ss
  40c195:	and    eax,0xd0c5efdb
  40c19a:	outs   dx,BYTE PTR ds:[esi]
  40c19b:	push   eax
  40c19c:	jb     0x40c1a2
  40c19e:	xchg   edi,eax
  40c19f:	cli    
  40c1a0:	in     eax,dx
  40c1a1:	test   eax,0x959bf5a8
  40c1a6:	leave  
  40c1a7:	jmp    0x40c164
  40c1a9:	mov    BYTE PTR [ebp+0x22],0x7c
  40c1ad:	push   ebp
  40c1ae:	fisttp WORD PTR [esi-0x4d]
  40c1b1:	outs   dx,BYTE PTR ds:[esi]
  40c1b2:	out    dx,eax
  40c1b3:	(bad)  
  40c1b4:	dec    esi
  40c1b5:	imul   ebx,DWORD PTR [ebx],0xffffffa6
  40c1b8:	addr16 xor al,0x4b
  40c1bb:	sub    BYTE PTR [esp+eiz*2],dh
  40c1be:	cs sbb bh,ch
  40c1c1:	xlat   BYTE PTR ds:[ebx]
  40c1c2:	dec    ebx
  40c1c3:	mov    ebx,0xe95ef1fa
  40c1c8:	aas    
  40c1c9:	fimul  DWORD PTR [esi-0x4cc5f9f8]
  40c1cf:	scas   eax,DWORD PTR es:[edi]
  40c1d0:	mov    al,0xd9
  40c1d2:	jb     0x40c21a
  40c1d4:	ficomp WORD PTR [esi+0x17]
  40c1d7:	jmp    0xf339:0x74cd5b60
  40c1de:	bound  edi,QWORD PTR [ebx+0x3d]
  40c1e1:	imul   esi,ebp,0xffffffa1
  40c1e4:	sar    DWORD PTR [edx+esi*2],1
  40c1e7:	into   
  40c1e8:	hlt    
  40c1e9:	jmp    0x2471acb8
  40c1ee:	mov    esp,0x6f7ab08
  40c1f4:	mov    edi,0xd15582af
  40c1f9:	js     0x40c188
  40c1fb:	jg     0x40c195
  40c1fd:	setg   BYTE PTR [esi-0x1201d285]
  40c204:	push   cs
  40c205:	dec    edi
  40c206:	xchg   ecx,eax
  40c207:	fcomi  st,st(7)
  40c209:	iret   
  40c20a:	add    edi,edi
  40c20c:	or     eax,0xd0ad9206
  40c211:	inc    ebx
  40c212:	test   eax,0x45443bba
  40c217:	rol    ecx,1
  40c219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c21a:	jmp    0xd54e5653
  40c21f:	xchg   ebx,eax
  40c220:	adc    DWORD PTR [edx+0x3e944f6a],ebp
  40c226:	fistp  WORD PTR [esi-0x69]
  40c229:	mov    ch,0x80
  40c22b:	ja     0x40c1da
  40c22d:	or     eax,0x1778186
  40c232:	push   cs
  40c233:	shr    BYTE PTR [edi],1
  40c235:	ins    DWORD PTR es:[edi],dx
  40c236:	and    al,0x2
  40c238:	fs pop eax
  40c23a:	lods   al,BYTE PTR ds:[esi]
  40c23b:	xlat   BYTE PTR ds:[ebx]
  40c23c:	sub    BYTE PTR [ebp+0x6e],0xe7
  40c240:	xor    cl,bh
  40c242:	lods   al,BYTE PTR ds:[esi]
  40c243:	(bad)  
  40c244:	jb     0x40c1cd
  40c246:	sar    BYTE PTR [edx-0x2],cl
  40c249:	hlt    
  40c24a:	add    esp,DWORD PTR [esi-0x2376b7ee]
  40c250:	or     DWORD PTR [ebp-0x1c],eax
  40c253:	ss mov ecx,0x45db76cc
  40c259:	pushf  
  40c25a:	shr    DWORD PTR [edi+0x787a089a],0x34
  40c261:	repz inc ebp
  40c263:	pop    edx
  40c264:	jle    0x40c2c9
  40c266:	rcr    DWORD PTR [eax-0x7f],cl
  40c269:	cli    
  40c26a:	fsub   st(3),st
  40c26c:	scas   al,BYTE PTR es:[edi]
  40c26d:	sbb    al,0xdf
  40c26f:	ss mov ah,0x74
  40c272:	fcomp  DWORD PTR [ebx]
  40c274:	cld    
  40c275:	loope  0x40c2df
  40c277:	xor    ecx,DWORD PTR [eax]
  40c279:	jle    0x40c216
  40c27b:	push   edx
  40c27c:	imul   esp,DWORD PTR [ecx+0x6051640b],0x69e8bce7
  40c286:	add    eax,0xadb162e3
  40c28b:	pinsrw mm4,WORD PTR [edx+0x20],0x49
  40c290:	add    al,0x89
  40c292:	dec    esp
  40c293:	in     eax,0xa8
  40c295:	loop   0x40c260
  40c297:	sub    ebx,DWORD PTR [ebp+0x65]
  40c29a:	stos   BYTE PTR es:[edi],al
  40c29b:	(bad)  
  40c29c:	(bad)  
  40c29d:	fistp  QWORD PTR es:[edx-0x23]
  40c2a1:	adc    esi,eax
  40c2a3:	out    0xbd,eax
  40c2a5:	push   ebx
  40c2a6:	or     al,al
  40c2a8:	or     dh,BYTE PTR [ecx]
  40c2aa:	xchg   esi,eax
  40c2ab:	dec    esi
  40c2ac:	mov    edx,0xf3cc6726
  40c2b1:	mov    cl,0x1e
  40c2b3:	mov    ebx,0xc65e3041
  40c2b8:	xor    eax,DWORD PTR [eax-0x6cd78048]
  40c2be:	loope  0x40c2db
  40c2c0:	lods   eax,DWORD PTR ds:[esi]
  40c2c1:	aaa    
  40c2c2:	dec    eax
  40c2c3:	sbb    eax,0x55567ac6
  40c2c8:	in     al,0x8f
  40c2ca:	sub    BYTE PTR [edx-0x36fe89dd],dl
  40c2d0:	push   cs
  40c2d1:	lahf   
  40c2d2:	pop    eax
  40c2d3:	inc    esp
  40c2d4:	mov    ebp,0x8c571a8b
  40c2d9:	js     0x40c281
  40c2db:	loop   0x40c329
  40c2dd:	and    BYTE PTR [ebx+eiz*8],al
  40c2e0:	and    BYTE PTR [ecx+ebx*8+0x3a6e683b],cl
  40c2e7:	xchg   dl,ah
  40c2e9:	hlt    
  40c2ea:	imul   eax,ecx,0x6a0f46ae
  40c2f0:	and    al,0x23
  40c2f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2f3:	mov    bl,0x9
  40c2f5:	mov    ah,0x14
  40c2f7:	(bad)  
  40c2f9:	pop    ss
  40c2fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2fb:	dec    esp
  40c2fc:	(bad)  
  40c2fd:	call   0x61e98fdf
  40c302:	and    esi,esi
  40c304:	imul   esp,DWORD PTR [ecx+esi*8-0x3367edd1],0xfecf759e
  40c30f:	shr    DWORD PTR [edi-0x2d2b6942],0xaf
  40c316:	out    dx,al
  40c317:	neg    DWORD PTR [ebx-0x69]
  40c31a:	cmp    al,0xdd
  40c31c:	test   eax,0xff30514
  40c321:	mov    cl,0xf0
  40c324:	jle    0x40c39a
  40c326:	jp     0x40c2c2
  40c328:	aaa    
  40c329:	sub    ah,cl
  40c32b:	jnp    0x40c373
  40c32d:	neg    DWORD PTR [edi]
  40c32f:	dec    ebp
  40c330:	push   0xffffffc8
  40c332:	lods   al,BYTE PTR ds:[esi]
  40c333:	ret    0x4a75
  40c336:	mov    ds:0x33390e3d,al
  40c33b:	lods   eax,DWORD PTR ds:[esi]
  40c33c:	sub    esi,0x1b4dc821
  40c342:	or     eax,0x2e623404
  40c347:	rol    DWORD PTR [esi-0x33],1
  40c34a:	sahf   
  40c34b:	in     eax,dx
  40c34c:	loop   0x40c317
  40c34e:	xchg   BYTE PTR [ebx],dh
  40c350:	push   ecx
  40c351:	pop    eax
  40c352:	cdq    
  40c353:	lds    ebx,FWORD PTR [eax+0x17]
  40c356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c357:	xchg   ebp,eax
  40c358:	xor    eax,0x2d14ebef
  40c35d:	mov    bl,0x9a
  40c35f:	jmp    0x1721693
  40c364:	cmp    al,0x37
  40c366:	pop    ss
  40c367:	xor    DWORD PTR [eax+eiz*1],esp
  40c36a:	je     0x40c38a
  40c36c:	mov    bh,0xda
  40c36e:	inc    edi
  40c36f:	test   DWORD PTR [ebp-0x3043ae04],edi
  40c375:	jle    0x40c325
  40c377:	bound  ebx,QWORD PTR [ebx]
  40c379:	mov    eax,ds:0xac485532
  40c37e:	mov    esp,ecx
  40c380:	mov    ds:0x32f0f8a3,al
  40c385:	dec    esi
  40c386:	add    BYTE PTR [esi+0x54],al
  40c389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c38a:	adc    bl,BYTE PTR [edx]
  40c38c:	out    dx,eax
  40c38d:	jo     0x40c33e
  40c38f:	adc    eax,0xaab67917
  40c394:	adc    DWORD PTR ds:0xe1099483,0xffffffe0
  40c39b:	and    al,0x45
  40c39d:	sbb    al,0xec
  40c39f:	sub    dh,BYTE PTR [eax-0x5553c559]
  40c3a5:	stos   DWORD PTR es:[edi],eax
  40c3a6:	jnp    0x40c3b7
  40c3a8:	lods   al,BYTE PTR ds:[esi]
  40c3a9:	enter  0x69b7,0xb3
  40c3ad:	cli    
  40c3ae:	mov    BYTE PTR [eax+0x575ca217],cl
  40c3b4:	test   BYTE PTR [ecx],bl
  40c3b6:	and    ecx,DWORD PTR [ecx-0x4e704a0f]
  40c3bc:	mov    DWORD PTR [ebx+0x35563126],esp
  40c3c2:	or     ch,bh
  40c3c4:	sar    DWORD PTR [edx+0x56c88ea5],cl
  40c3ca:	cmp    al,0x9d
  40c3cc:	retf   0x1958
  40c3cf:	clc    
  40c3d0:	adc    eax,0x2a3c134c
  40c3d5:	jne    0x40c3c0
  40c3d7:	push   cs
  40c3d8:	jo     0x40c386
  40c3da:	dec    edi
  40c3db:	stos   DWORD PTR es:[edi],eax
  40c3dc:	les    eax,FWORD PTR [ebp-0x5]
  40c3df:	ins    BYTE PTR es:[edi],dx
  40c3e0:	mov    al,0x4c
  40c3e2:	push   ecx
  40c3e3:	rol    DWORD PTR es:[ebx+0x33],0x8e
  40c3e8:	fistp  QWORD PTR [ebp+0x682ef880]
  40c3ee:	jmp    0x40c3d1
  40c3f0:	mov    ds:0xdbb57e40,eax
  40c3f5:	sub    cl,BYTE PTR [ebx+ebp*1]
  40c3f8:	in     al,dx
  40c3f9:	add    al,0xdb
  40c3fb:	gs iret 
  40c3fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3fe:	fincstp 
  40c400:	dec    edx
  40c401:	(bad)  
  40c402:	mov    edi,0xc9119ab8
  40c407:	or     eax,0x3d4738c4
  40c40c:	add    eax,0x87c72975
  40c411:	out    dx,eax
  40c412:	popa   
  40c413:	test   al,0xf6
  40c415:	bound  si,DWORD PTR [edx]
  40c418:	inc    ebx
  40c419:	js     0x40c470
  40c41b:	(bad)  
  40c41d:	inc    esp
  40c41e:	imul   edx,DWORD PTR [ebx-0x2f2de03a],0xffffff9c
  40c425:	inc    eax
  40c426:	push   ss
  40c427:	xor    BYTE PTR [eax-0xa],0xab
  40c42b:	addr16 dec edx
  40c42d:	or     BYTE PTR [ecx+0x8fbe2be],ch
  40c433:	out    dx,al
  40c434:	ficomp DWORD PTR [ecx]
  40c436:	push   esp
  40c437:	test   eax,0xab18be29
  40c43c:	dec    ecx
  40c43d:	int3   
  40c43e:	(bad)  [ecx]
  40c440:	or     eax,0xffffffcc
  40c443:	outs   dx,BYTE PTR ds:[esi]
  40c444:	pop    eax
  40c445:	retf   
  40c446:	test   BYTE PTR [edi+0x24],al
  40c449:	(bad)  
  40c44a:	cmc    
  40c44b:	lods   eax,DWORD PTR ds:[esi]
  40c44c:	daa    
  40c44d:	and    BYTE PTR [edx],dl
  40c44f:	cli    
  40c450:	cwde   
  40c451:	shl    DWORD PTR [ecx],1
  40c453:	cli    
  40c454:	aad    0x53
  40c456:	cmc    
  40c457:	stc    
  40c458:	in     eax,0xf7
  40c45a:	pop    edx
  40c45b:	dec    edi
  40c45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c45d:	push   ecx
  40c45e:	in     eax,0x2e
  40c460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c461:	pop    esi
  40c462:	xchg   esp,eax
  40c463:	mov    eax,ds:0x107d12e4
  40c468:	adc    ecx,DWORD PTR ss:[esp+ebp*1+0x309ecfba]
  40c470:	js     0x40c4eb
  40c472:	add    al,0xd7
  40c474:	mov    bl,0x5f
  40c476:	lods   eax,DWORD PTR ds:[esi]
  40c477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c478:	test   eax,0x40fcc670
  40c47d:	sub    eax,0x2c5ef433
  40c482:	cmp    dl,ch
  40c484:	dec    ebp
  40c485:	iret   
  40c486:	repnz pushf 
  40c488:	pop    eax
  40c489:	test   DWORD PTR [eax],0x9ffd3a75
  40c48f:	jle    0x40c4d6
  40c491:	adc    eax,0xdbff71dd
  40c496:	push   cs
  40c497:	mov    ebp,cs
  40c499:	pop    ebp
  40c49a:	xor    BYTE PTR [eax+0x4e4d6f3e],0x29
  40c4a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4a2:	lea    esi,[edx+eax*4-0x13ff0d04]
  40c4a9:	aaa    
  40c4aa:	add    eax,DWORD PTR [edx]
  40c4ac:	xchg   BYTE PTR [ebp-0x47],ch
  40c4af:	mov    al,0xdb
  40c4b1:	ins    DWORD PTR es:[edi],dx
  40c4b2:	xor    dl,0xf5
  40c4b5:	cmp    esi,ebx
  40c4b7:	loope  0x40c507
  40c4b9:	inc    ecx
  40c4ba:	js     0x40c4db
  40c4bc:	pushf  
  40c4bd:	mov    ebp,0xf3df4c79
  40c4c2:	fnstsw WORD PTR [edi-0x57]
  40c4c5:	pop    edx
  40c4c6:	(bad)  
  40c4c7:	je     0x40c46a
  40c4c9:	sub    al,0x8b
  40c4cb:	out    dx,al
  40c4cc:	xor    BYTE PTR [edi],ah
  40c4ce:	adc    ebp,esi
  40c4d0:	test   DWORD PTR [ebx-0x1810ea63],ecx
  40c4d6:	jecxz  0x40c4f0
  40c4d8:	iret   
  40c4d9:	lods   eax,DWORD PTR ds:[esi]
  40c4da:	or     edi,ebp
  40c4dc:	arpl   WORD PTR [esi+0x69c3a894],sp
  40c4e2:	sub    edi,DWORD PTR [edx+ebx*8]
  40c4e5:	xor    al,0xe
  40c4e7:	or     ecx,DWORD PTR [edi]
  40c4e9:	test   al,0x44
  40c4eb:	cwde   
  40c4ec:	sub    esp,edx
  40c4ee:	and    ch,BYTE PTR [ecx-0x53]
  40c4f1:	add    DWORD PTR [ebp-0x73d02801],0xffffff8b
  40c4f8:	repz cmp eax,esp
  40c4fb:	add    al,0x53
  40c4fd:	(bad)  
  40c4fe:	sub    dl,BYTE PTR [eax]
  40c500:	ja     0x40c571
  40c502:	add    BYTE PTR [esi+ebp*8-0x6bbe5404],ch
  40c509:	lods   eax,DWORD PTR ds:[esi]
  40c50a:	pop    edi
  40c50b:	sbb    cl,BYTE PTR [edx+0x53]
  40c50e:	sbb    eax,0x4d6c4b2e
  40c513:	fsub   st(7),st
  40c515:	fisttp QWORD PTR [edx+edi*1+0x41]
  40c519:	mov    dh,0xa3
  40c51b:	jmp    0x40c543
  40c51d:	xchg   ebp,eax
  40c51e:	outs   dx,BYTE PTR ds:[esi]
  40c51f:	daa    
  40c520:	data16 (bad) 
  40c522:	xchg   ecx,eax
  40c523:	aam    0x3f
  40c525:	mov    al,ds:0xa2377bb0
  40c52a:	aaa    
  40c52b:	mov    edi,0xb2af2d06
  40c530:	daa    
  40c531:	sahf   
  40c532:	adc    ebx,DWORD PTR [ebx]
  40c534:	loope  0x40c4f2
  40c536:	sub    eax,0x13623abe
  40c53b:	push   0x39
  40c53d:	shl    DWORD PTR [eax-0x13],0xc9
  40c541:	or     al,0xea
  40c543:	jecxz  0x40c570
  40c545:	call   0x64227439
  40c54a:	mov    DWORD PTR [eax+0x3dfd8a30],esi
  40c550:	add    ch,BYTE PTR [edx-0x44]
  40c553:	push   esi
  40c554:	mov    ah,0xd2
  40c556:	xchg   edi,eax
  40c557:	sar    DWORD PTR [eax],0xca
  40c55a:	and    esi,DWORD PTR [ebp+0x72d515e7]
  40c560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c561:	sub    al,0x89
  40c563:	pop    edx
  40c564:	iret   
  40c565:	xor    BYTE PTR [esi],cl
  40c567:	and    eax,0x412ae8e7
  40c56c:	sub    ebx,eax
  40c56e:	xchg   BYTE PTR [edx+eiz*2],bh
  40c571:	mov    ?,WORD PTR [edx-0x249bf5fc]
  40c577:	jns    0x40c57a
  40c579:	sbb    DWORD PTR [eax-0x6f0c245c],0x2c88a85c
  40c583:	mov    edx,0x250f50d0
  40c588:	repz jae 0x40c5a0
  40c58b:	dec    ebx
  40c58c:	xchg   ebx,eax
  40c58d:	(bad)  
  40c58e:	out    dx,al
  40c58f:	cmovno eax,DWORD PTR [edx]
  40c592:	mov    al,ds:0x6fc133d9
  40c597:	outs   dx,BYTE PTR ds:[esi]
  40c598:	or     eax,0x635fa0fb
  40c59d:	sbb    al,0x80
  40c59f:	mov    bh,0x4c
  40c5a1:	dec    esp
  40c5a2:	daa    
  40c5a3:	xor    al,0xca
  40c5a5:	mov    al,ds:0xb701870a
  40c5aa:	es and ah,ah
  40c5ad:	fisttp QWORD PTR [esi+0x6b33fe5c]
  40c5b3:	mov    edx,0x9c221d56
  40c5b8:	adc    dl,BYTE PTR [esi]
  40c5ba:	push   0xffffffc4
  40c5bc:	jo     0x40c5cf
  40c5be:	pop    eax
  40c5bf:	enter  0x65ad,0x3b
  40c5c3:	dec    edi
  40c5c4:	cdq    
  40c5c5:	or     ecx,DWORD PTR ds:0x914f321
  40c5cb:	pop    ss
  40c5cc:	in     al,0x8c
  40c5ce:	test   BYTE PTR [eax-0x12],cl
  40c5d1:	mov    dh,0x92
  40c5d3:	sti    
  40c5d4:	retf   0xbd19
  40c5d7:	xchg   esp,eax
  40c5d8:	(bad)  
  40c5d9:	aam    0x4a
  40c5db:	clc    
  40c5dc:	mov    edi,0x23c0955c
  40c5e1:	pop    ebx
  40c5e2:	or     al,0x22
  40c5e4:	jp     0x40c5fd
  40c5e6:	pop    eax
  40c5e7:	dec    esi
  40c5e8:	push   cs
  40c5e9:	ffreep st(6)
  40c5eb:	inc    eax
  40c5ec:	stos   BYTE PTR es:[edi],al
  40c5ed:	adc    al,dl
  40c5ef:	pop    ss
  40c5f0:	adc    dl,dh
  40c5f2:	and    al,0xad
  40c5f4:	jmp    0xbe51:0x35839eb7
  40c5fb:	sbb    DWORD PTR [edx],esi
  40c5fd:	loope  0x40c5d4
  40c5ff:	jge    0x40c66b
  40c601:	jb     0x40c67a
  40c603:	(bad)
  40c606:	pop    edx
  40c607:	test   esp,edi
  40c609:	push   0x3ab68253
  40c60e:	lods   al,BYTE PTR ds:[esi]
  40c60f:	mov    ebp,eax
  40c611:	aas    
  40c612:	or     esp,DWORD PTR [esi-0xc592447]
  40c618:	lock call 0xa8bd:0x99693a9b
  40c620:	mov    DWORD PTR [eax-0x14],esi
  40c623:	dec    ebp
  40c624:	sti    
  40c625:	addr16 mov ds:0xad,eax
  40c629:	sub    ebp,esp
  40c62b:	or     al,0x7c
  40c62d:	push   edi
  40c62e:	push   eax
  40c62f:	or     al,0x37
  40c631:	jb     0x40c5f5
  40c633:	in     al,0x39
  40c635:	cwde   
  40c636:	or     al,0x7e
  40c638:	dec    eax
  40c639:	or     DWORD PTR [ebp+0x62],0xb33fbbb2
  40c640:	sbb    al,al
  40c642:	mov    ebx,0xc0f005dd
  40c647:	mov    ah,0x7
  40c649:	idiv   DWORD PTR [ebp+0x6391c775]
  40c64f:	or     DWORD PTR [ebp+0x180f8bec],ebx
  40c655:	sub    al,0x14
  40c657:	jb     0x40c635
  40c659:	arpl   WORD PTR [edx],bp
  40c65b:	cmc    
  40c65c:	adc    DWORD PTR [eax+0x3a784b5c],edx
  40c662:	lahf   
  40c663:	push   ds
  40c664:	inc    edi
  40c665:	dec    ebx
  40c666:	push   ebp
  40c667:	std    
  40c668:	jno    0x40c68f
  40c66a:	loope  0x40c6e3
  40c66c:	push   es
  40c66d:	cs pop ebx
  40c66f:	sahf   
  40c670:	cmp    eax,0xa1595f14
  40c675:	aam    0x46
  40c677:	inc    edi
  40c678:	xor    al,0x9b
  40c67a:	(bad)  
  40c67b:	out    dx,al
  40c67c:	(bad)  
  40c67d:	xchg   ecx,eax
  40c67e:	sbb    ah,BYTE PTR [ebx+0xd0a540a]
  40c684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c685:	sbb    eax,0x7e5f4362
  40c68a:	ja     0x40c6cf
  40c68c:	push   esp
  40c68d:	ins    BYTE PTR es:[edi],dx
  40c68e:	cmp    BYTE PTR [ecx-0x17aa651],ch
  40c694:	cmp    esi,DWORD PTR [edx]
  40c696:	repnz mov DWORD PTR [ebp+0x44feb19],ecx
  40c69d:	in     al,0x8c
  40c69f:	mov    esp,esi
  40c6a1:	or     al,0xf
  40c6a3:	pavgw  mm5,QWORD PTR [edx+0x563da6c6]
  40c6aa:	add    dh,BYTE PTR [esi*4+0x13473b8f]
  40c6b1:	push   ecx
  40c6b2:	sahf   
  40c6b3:	cmc    
  40c6b4:	ja     0x40c663
  40c6b6:	mov    eax,0xadb37b0
  40c6bb:	icebp  
  40c6bc:	in     eax,0x45
  40c6be:	mul    BYTE PTR [ecx]
  40c6c0:	outs   dx,DWORD PTR ds:[esi]
  40c6c1:	push   0x39
  40c6c3:	push   eax
  40c6c4:	push   esp
  40c6c5:	inc    ecx
  40c6c6:	sub    al,0x3d
  40c6c8:	aad    0x61
  40c6ca:	stos   BYTE PTR es:[edi],al
  40c6cb:	es push esp
  40c6cd:	aad    0xe7
  40c6cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6d0:	int    0x4a
  40c6d2:	xor    al,BYTE PTR [ebp+edi*8-0x8]
  40c6d6:	dec    eax
  40c6d7:	imul   esi,DWORD PTR [edi+ecx*4],0x8
  40c6db:	int    0xe7
  40c6dd:	iret   
  40c6de:	and    al,0x7
  40c6e0:	ins    BYTE PTR es:[edi],dx
  40c6e1:	dec    esi
  40c6e2:	jb     0x40c71f
  40c6e4:	(bad)  
  40c6e5:	leave  
  40c6e6:	mov    bl,0x25
  40c6e8:	dec    DWORD PTR [ebp+0x115b2811]
  40c6ee:	sub    DWORD PTR [edi+ecx*4],0x60db414c
  40c6f5:	xchg   esi,eax
  40c6f6:	ins    DWORD PTR es:[edi],dx
  40c6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6f8:	hlt    
  40c6f9:	xchg   DWORD PTR [edi+0x7c59070b],esi
  40c6ff:	test   al,0xa3
  40c701:	pusha  
  40c702:	pop    ss
  40c703:	add    DWORD PTR [edi-0x5d6c566f],edi
  40c709:	xchg   edi,eax
  40c70a:	jnp    0x40c73f
  40c70c:	in     al,0x3a
  40c70e:	ins    BYTE PTR es:[edi],dx
  40c70f:	jmp    0xd1dd:0x87fd45aa
  40c716:	cs fcmovnu st,st(7)
  40c719:	(bad)  
  40c71a:	out    0x60,al
  40c71c:	pop    edx
  40c71d:	xchg   ebx,eax
  40c71e:	retf   
  40c71f:	mov    ds:0xea75ccf9,al
  40c724:	lods   eax,DWORD PTR ds:[esi]
  40c725:	inc    esp
  40c726:	fimul  WORD PTR [ebp+0x44d58e25]
  40c72c:	sti    
  40c72d:	jnp    0x40c76c
  40c72f:	ins    DWORD PTR es:[edi],dx
  40c730:	mov    bh,dl
  40c732:	es inc ecx
  40c734:	pop    ebx
  40c735:	mov    esp,0x5769ab73
  40c73a:	jge    0x40c6c1
  40c73c:	jmp    0xb752:0x7d01190e
  40c743:	sahf   
  40c744:	in     al,dx
  40c745:	jmp    FWORD PTR [edi+0x12]
  40c748:	fdivr  st(7),st
  40c74a:	inc    esi
  40c74b:	fild   WORD PTR [edx+0x55f4a2fc]
  40c751:	jl     0x40c751
  40c753:	seto   BYTE PTR [ebx-0x614e857c]
  40c75a:	push   es
  40c75b:	daa    
  40c75c:	cmp    DWORD PTR [esp+edx*4-0x6],edi
  40c760:	mov    ds:0xe93b5786,eax
  40c765:	into   
  40c766:	sub    cl,dl
  40c768:	loope  0x40c7ab
  40c76a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c76b:	in     eax,0x9e
  40c76d:	loope  0x40c702
  40c76f:	shl    DWORD PTR [edi+0x32ae5b06],1
  40c775:	in     eax,dx
  40c776:	inc    ebx
  40c777:	fcom   DWORD PTR [edx-0x80]
  40c77a:	xlat   BYTE PTR ds:[ebx]
  40c77b:	scas   al,BYTE PTR es:[edi]
  40c77c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c77d:	rol    esp,cl
  40c77f:	mov    ch,0x6d
  40c781:	lods   eax,DWORD PTR ds:[esi]
  40c782:	mov    ds:0x5364474c,al
  40c787:	xchg   esp,eax
  40c788:	stc    
  40c789:	jo     0x40c7a0
  40c78b:	and    al,0xbf
  40c78d:	dec    edi
  40c78e:	test   BYTE PTR [edx],ch
  40c790:	pop    esi
  40c791:	and    edx,DWORD PTR [edi]
  40c793:	pop    es
  40c794:	aas    
  40c795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c796:	and    edi,eax
  40c798:	loop   0x40c7b3
  40c79a:	mov    ds:0x52aac9c5,eax
  40c79f:	jl     0x40c792
  40c7a1:	inc    ebx
  40c7a2:	inc    esp
  40c7a3:	jmp    0x40c7be
  40c7a5:	stos   DWORD PTR es:[edi],eax
  40c7a6:	fucom  st(5)
  40c7a8:	daa    
  40c7a9:	inc    esp
  40c7aa:	dec    ecx
  40c7ab:	cwde   
  40c7ac:	inc    esp
  40c7ad:	mov    BYTE PTR [eax],0x38
  40c7b0:	mov    ecx,0xe947b050
  40c7b5:	outs   dx,BYTE PTR ds:[esi]
  40c7b6:	lahf   
  40c7b7:	dec    ecx
  40c7b8:	xor    bh,BYTE PTR [esi]
  40c7ba:	mov    bh,0x70
  40c7bc:	cmp    bl,dl
  40c7be:	push   esi
  40c7bf:	pop    edx
  40c7c0:	dec    esp
  40c7c1:	stc    
  40c7c2:	(bad)  
  40c7c3:	loopne 0x40c785
  40c7c5:	cli    
  40c7c6:	aam    0xaf
  40c7c8:	inc    ebx
  40c7c9:	pop    edx
  40c7ca:	test   eax,0x1b661d04
  40c7cf:	jle    0x40c825
  40c7d1:	mov    ecx,0xf20ba5fa
  40c7d6:	mov    ss,edx
  40c7d8:	dec    edi
  40c7d9:	(bad)  
  40c7da:	shld   edi,edi,cl
  40c7dd:	jo     0x40c85e
  40c7df:	ja     0x40c841
  40c7e1:	xchg   DWORD PTR ds:0xe70742a4,edi
  40c7e7:	mov    DWORD PTR [esi+0x47],0x6d57afc3
  40c7ee:	outs   dx,DWORD PTR ds:[esi]
  40c7ef:	mov    edi,ecx
  40c7f1:	cmp    eax,0xc5c0171d
  40c7f6:	mov    esi,esp
  40c7f8:	fsub   st(5),st
  40c7fa:	sbb    eax,0x15b46f45
  40c7ff:	inc    ebx
  40c800:	xchg   ebx,eax
  40c801:	mov    ch,0xb6
  40c803:	push   ecx
  40c804:	fs xchg esi,eax
  40c806:	lods   eax,DWORD PTR ds:[esi]
  40c807:	test   BYTE PTR [ebp-0x108511ff],bl
  40c80d:	jno    0x40c84c
  40c80f:	adc    bh,BYTE PTR [esi+0x29]
  40c812:	loop   0x40c826
  40c814:	adc    cl,dl
  40c816:	(bad)  
  40c817:	jnp    0x40c800
  40c819:	xor    eax,0x3f54ddb
  40c81e:	nop
  40c81f:	adc    ebx,esi
  40c821:	cs cdq 
  40c823:	in     al,dx
  40c824:	neg    DWORD PTR [edi]
  40c826:	or     cl,al
  40c828:	out    0x51,al
  40c82a:	data16 daa 
  40c82c:	pop    ecx
  40c82d:	mov    ds:0x47cf95b4,al
  40c832:	in     al,0xf5
  40c834:	push   ss
  40c835:	and    ebx,DWORD PTR [ebx]
  40c837:	mov    ds:0xa8d8bf9b,eax
  40c83c:	stos   BYTE PTR es:[edi],al
  40c83d:	xor    al,0x90
  40c83f:	stos   BYTE PTR es:[edi],al
  40c840:	call   0xcb7b7fbf
  40c845:	mov    dh,0x2e
  40c847:	fild   QWORD PTR [ebp+0x30]
  40c84a:	or     BYTE PTR [esi],bl
  40c84c:	daa    
  40c84d:	rcl    BYTE PTR [eax],cl
  40c84f:	pop    esp
  40c850:	xchg   ebp,eax
  40c851:	fs inc edi
  40c853:	or     al,0x6d
  40c855:	jl     0x40c7d9
  40c857:	adc    BYTE PTR [ebx],bh
  40c859:	sbb    al,0x95
  40c85b:	pop    edx
  40c85c:	int    0x32
  40c85e:	mov    bl,0xdc
  40c860:	xor    BYTE PTR [ebx],al
  40c862:	push   eax
  40c863:	test   al,0x32
  40c865:	xchg   ebp,eax
  40c866:	sub    DWORD PTR [esi],edi
  40c868:	pusha  
  40c869:	xor    BYTE PTR [edi+ebp*1],ah
  40c86c:	sub    bh,BYTE PTR [ebx-0x6a0e9282]
  40c872:	sub    ch,al
  40c874:	stos   BYTE PTR es:[edi],al
  40c875:	inc    esi
  40c876:	sub    DWORD PTR [ecx+0x4b],esi
  40c879:	add    BYTE PTR [ecx+edx*4+0x43114a9a],ah
  40c880:	pop    ebx
  40c881:	cmp    eax,0xe582ee05
  40c886:	lea    ebx,[edi+0x27d30f64]
  40c88c:	mov    cl,0x41
  40c88e:	and    eax,0x849b6f7d
  40c893:	retf   
  40c894:	add    BYTE PTR gs:[edx-0x39],0xdc
  40c899:	(bad)  
  40c89a:	iret   
  40c89b:	(bad)  
  40c89d:	test   eax,0x1c09b29c
  40c8a2:	into   
  40c8a3:	gs jbe 0x40c86c
  40c8a6:	push   0xfc644a72
  40c8ab:	adc    DWORD PTR [ebp+0x56],ebp
  40c8ae:	(bad)  
  40c8af:	xor    ch,cl
  40c8b1:	mov    ebx,0xe72f365
  40c8b6:	sub    edx,DWORD PTR [edx-0x260212ca]
  40c8bc:	and    BYTE PTR [edx],ah
  40c8be:	xor    al,0xb6
  40c8c0:	sbb    eax,0xb8cf5609
  40c8c5:	pop    es
  40c8c6:	xchg   ecx,eax
  40c8c7:	shl    eax,0xf6
  40c8ca:	jge    0x40c8d7
  40c8cc:	mov    ds:0xdaf52a2b,eax
  40c8d1:	in     al,0x3f
  40c8d3:	cmc    
  40c8d4:	or     al,bl
  40c8d6:	test   DWORD PTR [esi-0x6235b10c],esi
  40c8dc:	mov    dh,0xfd
  40c8de:	inc    esp
  40c8df:	sti    
  40c8e0:	jne    0x40c93e
  40c8e2:	or     BYTE PTR [ebp-0x7be43ae3],ah
  40c8e8:	das    
  40c8e9:	pop    ecx
  40c8ea:	cdq    
  40c8eb:	icebp  
  40c8ec:	fmul   st,st(3)
  40c8ee:	inc    ebp
  40c8ef:	dec    edi
  40c8f0:	jl     0x40c89b
  40c8f2:	xchg   esi,eax
  40c8f3:	sbb    BYTE PTR [eax+0x2a],dh
  40c8f6:	pop    esp
  40c8f7:	xchg   ebx,eax
  40c8f8:	jae    0x40c91d
  40c8fa:	xor    BYTE PTR [edi],al
  40c8fc:	adc    eax,0x263ef8f4
  40c901:	ds nop
  40c903:	pop    ebp
  40c904:	cmp    ebp,DWORD PTR [edi-0x1c]
  40c907:	jae    0x40c954
  40c909:	mov    WORD PTR [ebx+eiz*4+0x27b4a33c],ss
  40c910:	pop    esi
  40c911:	fsub   st,st(5)
  40c913:	cli    
  40c914:	mov    ch,0x92
  40c916:	or     BYTE PTR [ebx],al
  40c918:	loope  0x40c926
  40c91a:	lahf   
  40c91b:	punpckhbw mm7,QWORD PTR [edx+eiz*2+0x50ccf7b3]
  40c923:	nop
  40c924:	or     eax,0xad97f311
  40c929:	neg    BYTE PTR ds:0x47738287
  40c92f:	mov    esp,0x273f8a6
  40c934:	sbb    ebp,DWORD PTR [esi+ebx*8+0x63]
  40c938:	mov    bh,0xb5
  40c93a:	ja     0x40c8e1
  40c93c:	into   
  40c93d:	and    edi,DWORD PTR [edi-0x2566458e]
  40c943:	sbb    ebx,edi
  40c945:	pop    edx
  40c946:	cmp    DWORD PTR [ecx],ecx
  40c948:	das    
  40c949:	add    al,0xbe
  40c94b:	js     0x40c9a7
  40c94d:	aad    0xfe
  40c94f:	sub    al,dl
  40c951:	sti    
  40c952:	shr    BYTE PTR [edx+0x7a],1
  40c955:	push   es
  40c956:	leave  
  40c957:	mov    esp,0xf4776d06
  40c95c:	cmp    DWORD PTR [ecx+0x3],ebp
  40c95f:	pop    ebx
  40c960:	push   esp
  40c961:	push   ss
  40c962:	adc    eax,0xbece4574
  40c967:	iret   
  40c968:	xchg   esi,eax
  40c969:	arpl   WORD PTR [ecx],si
  40c96b:	call   0x74c63264
  40c970:	icebp  
  40c971:	xor    DWORD PTR [esi+0x12],0xffffffbb
  40c975:	adc    eax,0x2926282d
  40c97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c97b:	dec    ebp
  40c97c:	mov    ds:0x86d7c1a2,eax
  40c981:	fldenv [ecx-0x24]
  40c984:	iret   
  40c985:	sbb    al,0xa3
  40c987:	add    ebx,DWORD PTR [ebp-0x6f]
  40c98a:	push   0x3fddf8a9
  40c98f:	sub    al,BYTE PTR [ecx]
  40c991:	push   ss
  40c992:	das    
  40c993:	mov    bh,0x74
  40c995:	jo     0x40c972
  40c997:	cmp    DWORD PTR [edi-0x50],eax
  40c99a:	dec    eax
  40c99b:	icebp  
  40c99c:	out    dx,eax
  40c99d:	inc    edx
  40c99e:	loope  0x40c9af
  40c9a0:	ror    bl,0xd
  40c9a3:	mov    DWORD PTR [esi-0x7c07e477],0xb1330bd8
  40c9ad:	xchg   edi,eax
  40c9ae:	ja     0x40c9f3
  40c9b0:	sar    cl,0x32
  40c9b3:	jl     0x40c98b
  40c9b5:	and    bl,BYTE PTR [eax]
  40c9b7:	loop   0x40c9a3
  40c9b9:	cmp    BYTE PTR [edx],ah
  40c9bb:	stos   DWORD PTR es:[edi],eax
  40c9bc:	sub    eax,0x85c5a2ce
  40c9c1:	pop    ss
  40c9c2:	mov    ah,BYTE PTR [esp+eax*1]
  40c9c5:	jb     0x40c95d
  40c9c7:	dec    edx
  40c9c8:	outs   dx,BYTE PTR ds:[esi]
  40c9c9:	inc    edx
  40c9ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9cb:	mov    al,0x84
  40c9cd:	mov    ds:0x6617b741,al
  40c9d2:	mov    cl,0x46
  40c9d4:	xor    DWORD PTR [ecx],ebx
  40c9d6:	fucom  st(1)
  40c9d8:	add    ch,BYTE PTR [eax-0x6c2f5f2e]
  40c9de:	sub    ah,0xe9
  40c9e1:	pop    edx
  40c9e2:	into   
  40c9e3:	mov    eax,0xdb583144
  40c9e8:	sub    al,0x5a
  40c9ea:	test   eax,0xf2f115d6
  40c9ef:	inc    esi
  40c9f0:	(bad)  
  40c9f1:	adc    eax,0xf436d272
  40c9f6:	scas   eax,DWORD PTR es:[edi]
  40c9f7:	dec    edi
  40c9f8:	pop    ecx
  40c9f9:	test   al,0xe6
  40c9fb:	daa    
  40c9fc:	daa    
  40c9fd:	and    eax,0x38d5202f
  40ca02:	fsubr  QWORD PTR [edi+ebx*8+0x48]
  40ca06:	adc    ebp,edx
  40ca08:	xor    BYTE PTR [ebx],bh
  40ca0a:	addr16 cdq 
  40ca0c:	ror    BYTE PTR [edx-0x3d744f59],0xbd
  40ca13:	jp     0x40c9a7
  40ca15:	pop    ebx
  40ca16:	sbb    DWORD PTR [esi],ebx
  40ca18:	sub    esi,DWORD PTR [edx+0x6f]
  40ca1b:	jmp    0xa5eee65c
  40ca20:	les    esi,FWORD PTR [ebp+0x88cbc08]
  40ca26:	and    al,0xa7
  40ca28:	or     eax,0x7f401974
  40ca2d:	gs (bad) 
  40ca2f:	and    eax,0x2f52f3fd
  40ca34:	adc    dh,ch
  40ca36:	(bad)  
  40ca37:	push   0x4bb11385
  40ca3c:	jo     0x40caa8
  40ca3e:	inc    ecx
  40ca3f:	mov    al,ds:0x5f324171
  40ca44:	jo     0x40ca03
  40ca46:	daa    
  40ca47:	pop    ebx
  40ca48:	add    dl,BYTE PTR [ebp-0x345c6f17]
  40ca4e:	or     al,0xc3
  40ca50:	mov    esi,0xf7f025a4
  40ca55:	or     edi,ebx
  40ca57:	out    0x54,eax
  40ca59:	test   al,0xf5
  40ca5b:	xor    ebx,edi
  40ca5d:	xchg   esp,eax
  40ca5e:	or     al,ch
  40ca60:	or     BYTE PTR [edi+0x4f42069],0x7d
  40ca67:	push   es
  40ca68:	das    
  40ca69:	and    BYTE PTR [edi+0x34],bh
  40ca6c:	pop    es
  40ca6d:	sbb    al,0xda
  40ca6f:	mov    DWORD PTR [eax-0x38],edi
  40ca72:	push   edi
  40ca73:	in     al,0x27
  40ca75:	call   DWORD PTR [edx+edi*2+0x70]
  40ca79:	mov    WORD PTR [ebp+0xb],?
  40ca7c:	cmp    BYTE PTR [eax*1+0x545f8bcb],bh
  40ca83:	lea    ebp,[edi+eax*4+0x36]
  40ca87:	jl     0x40ca8a
  40ca89:	mov    esi,0x75cd419a
  40ca8e:	pop    esp
  40ca8f:	and    cl,BYTE PTR [ebp+0x3fc9ded0]
  40ca95:	les    edx,FWORD PTR [edi]
  40ca97:	mov    bh,0xa7
  40ca99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca9a:	frndint 
  40ca9c:	or     eax,0xd5baff93
  40caa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa2:	jns    0x40caf4
  40caa4:	mov    al,ds:0xdd93217b
  40caa9:	or     DWORD PTR [esi+eiz*1+0x18013730],0xffffff8b
  40cab1:	inc    ebp
  40cab2:	cld    
  40cab3:	mov    edi,DWORD PTR [ebp-0x8]
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0x1cb9e14c,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40cd70
  40cde1:	ins    BYTE PTR es:[edi],dx
  40cde2:	xor    edi,DWORD PTR [edx-0x74]
  40cde5:	jp     0x40cda4
  40cde7:	pop    edi
  40cde8:	mov    bl,0xec
  40cdea:	fld    TBYTE PTR [ebp+0x2a]
  40cded:	jns    0x40ce1a
  40cdef:	jae    0x40ce52
  40cdf1:	adc    al,BYTE PTR [edx+ebx*4-0x3]
  40cdf5:	stc    
  40cdf6:	or     BYTE PTR [edx],bl
  40cdf8:	pop    eax
  40cdf9:	test   DWORD PTR [edi-0x1ea7cfd2],0x135c7185
  40ce03:	test   eax,0xc05fa76d
  40ce08:	jno    0x40ce04
  40ce0a:	push   esp
  40ce0b:	mov    ebp,0x4c357350
  40ce10:	pop    es
  40ce11:	retf   0x2f13
  40ce14:	sahf   
  40ce15:	je     0x40cdc7
  40ce17:	pop    eax
  40ce18:	jge    0x40ce3b
  40ce1a:	lods   eax,DWORD PTR ds:[esi]
  40ce1b:	xor    eax,0x3101c84b
  40ce20:	xchg   BYTE PTR [esi+ebp*1+0x5df9af45],dl
  40ce27:	popa   
  40ce28:	ficom  WORD PTR [ebp-0x24fb8bf4]
  40ce2e:	ds inc ecx
  40ce30:	(bad)  
  40ce31:	fidiv  DWORD PTR [edi+eax*1+0x7ab7bc15]
  40ce38:	or     al,BYTE PTR [edi-0x38dbf543]
  40ce3e:	fcmovb st,st(3)
  40ce40:	mov    esi,0xa615c17d
  40ce45:	xchg   DWORD PTR [edx-0x3a],esi
  40ce48:	xchg   esp,eax
  40ce49:	pop    ecx
  40ce4a:	mov    cl,0x58
  40ce4c:	(bad)  
  40ce4d:	loop   0x40ce52
  40ce4f:	hlt    
  40ce50:	aaa    
  40ce51:	sbb    esp,DWORD PTR [ecx]
  40ce53:	adc    cl,ah
  40ce55:	jns    0x40cdfa
  40ce57:	jecxz  0x40ce9b
  40ce59:	mov    esi,0xc089458c
  40ce5e:	sbb    BYTE PTR [ecx+ecx*1+0x5e1df541],ah
  40ce65:	push   cs
  40ce66:	mov    BYTE PTR [eax+0x27ed9dc4],0x1e
  40ce6d:	fild   QWORD PTR [ebp-0x50]
  40ce70:	out    0xf3,al
  40ce72:	xchg   esp,eax
  40ce73:	mov    ah,0x79
  40ce75:	or     ebp,DWORD PTR [ebx-0x7b3c125b]
  40ce7b:	push   0x6a7a6e3f
  40ce80:	cmp    al,0x12
  40ce82:	xor    al,bl
  40ce84:	dec    edi
  40ce85:	xor    BYTE PTR [edx+0x1c64cf6a],bl
  40ce8b:	and    eax,0x307b94ff
  40ce90:	fcom   QWORD PTR [ecx-0x5]
  40ce93:	jl     0x40cec4
  40ce95:	mov    ebp,0x4523a182
  40ce9a:	add    BYTE PTR [esi-0x74ffc1d0],0x16
  40cea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea2:	icebp  
  40cea3:	ja     0x40ce49
  40cea5:	push   0x111a426e
  40ceaa:	pop    eax
  40ceab:	jno    0x40ce92
  40cead:	(bad)  
  40ceae:	jg     0x40cf19
  40ceb0:	dec    edi
  40ceb1:	gs xchg esp,eax
  40ceb3:	sbb    BYTE PTR [esi+ecx*4],bl
  40ceb6:	sti    
  40ceb7:	xor    BYTE PTR [eax],ah
  40ceb9:	or     ebp,esi
  40cebb:	mov    BYTE PTR [edi],bh
  40cebd:	pop    edi
  40cebe:	je     0x40ceb4
  40cec0:	jbe    0x40cecf
  40cec2:	add    DWORD PTR [eax-0x2a08473c],edx
  40cec8:	enter  0x1052,0x75
  40cecc:	icebp  
  40cecd:	sbb    ah,dh
  40cecf:	push   cs
  40ced0:	add    BYTE PTR [edx+edx*2-0x9421afd],al
  40ced7:	or     DWORD PTR [ebx+esi*1],eax
  40ceda:	lods   eax,DWORD PTR ds:[esi]
  40cedb:	adc    al,0x88
  40cedd:	and    eax,0xe1d41f16
  40cee2:	cli    
  40cee3:	out    0x4c,al
  40cee5:	fild   WORD PTR [ebp-0x18]
  40cee8:	dec    ebp
  40cee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceea:	xchg   DWORD PTR [eax+0x4e91cc40],ecx
  40cef0:	scas   al,BYTE PTR es:[edi]
  40cef1:	xor    DWORD PTR [ebx],0xfee7d715
  40cef7:	or     esi,DWORD PTR [eax+edi*4+0x1a01e97e]
  40cefe:	mov    ebp,0x1f84e650
  40cf03:	mov    ds:0xe123f495,al
  40cf08:	jns    0x40cf26
  40cf0a:	iret   
  40cf0b:	sub    eax,DWORD PTR [esp+edx*2+0x79b8952e]
  40cf12:	and    ebx,edi
  40cf14:	add    ch,BYTE PTR [edx+0x68911212]
  40cf1a:	xchg   edx,eax
  40cf1b:	loopne 0x40cf20
  40cf1d:	popf   
  40cf1e:	jns    0x40cede
  40cf20:	test   BYTE PTR [esi+0x2ed42ca2],bl
  40cf26:	popf   
  40cf27:	jecxz  0x40ceaf
  40cf29:	(bad)  
  40cf2a:	retf   
  40cf2b:	psadbw mm1,QWORD PTR [edi]
  40cf2e:	adc    BYTE PTR [esi+0x6b],ch
  40cf31:	fidivr DWORD PTR [ebx-0x5cc42063]
  40cf37:	ds sbb al,0x11
  40cf3a:	in     al,dx
  40cf3b:	aam    0x9c
  40cf3d:	stos   DWORD PTR es:[edi],eax
  40cf3e:	pop    ebp
  40cf3f:	add    esp,esp
  40cf41:	inc    edi
  40cf42:	mov    edx,0x6abb04a4
  40cf47:	push   esp
  40cf48:	cmp    bl,BYTE PTR [edi]
  40cf4a:	aam    0xf6
  40cf4c:	pusha  
  40cf4d:	loopne 0x40cee6
  40cf4f:	pop    ebp
  40cf50:	dec    eax
  40cf51:	imul   ebp,DWORD PTR [eax-0x34],0x25392146
  40cf58:	mov    cl,0xcc
  40cf5a:	push   edi
  40cf5b:	and    ah,BYTE PTR [ecx]
  40cf5d:	sbb    eax,0x514ae2c2
  40cf62:	pop    esi
  40cf63:	adc    dl,BYTE PTR [edx+eax*4]
  40cf66:	sbb    eax,DWORD PTR [edx+esi*1]
  40cf69:	mov    es,WORD PTR [ecx-0x76]
  40cf6c:	jp     0x40cfc9
  40cf6e:	in     al,dx
  40cf6f:	xor    cl,BYTE PTR [esi*8-0x12f219f3]
  40cf76:	adc    esp,0x6595b257
  40cf7c:	mov    edx,ss
  40cf7e:	aaa    
  40cf7f:	inc    edx
  40cf80:	and    eax,0x768dfc21
  40cf85:	mov    esp,0xe65e125
  40cf8a:	(bad)  
  40cf8b:	stc    
  40cf8c:	mov    DWORD PTR [edx],ecx
  40cf8e:	arpl   si,cx
  40cf90:	pop    esi
  40cf91:	stos   BYTE PTR es:[edi],al
  40cf92:	outs   dx,BYTE PTR ds:[esi]
  40cf93:	pop    ecx
  40cf94:	jb     0x40cf4c
  40cf96:	xchg   ecx,eax
  40cf97:	dec    ebp
  40cf98:	imul   eax,DWORD PTR [ebx-0x4d8fdf53],0x75
  40cf9f:	rcl    ah,cl
  40cfa1:	je     0x40cf55
  40cfa3:	std    
  40cfa4:	sbb    BYTE PTR [edx],bl
  40cfa6:	jo     0x40cfc3
  40cfa8:	out    0x3d,eax
  40cfaa:	stos   BYTE PTR es:[edi],al
  40cfab:	and    bh,BYTE PTR [ecx]
  40cfad:	scas   eax,DWORD PTR es:[edi]
  40cfae:	(bad)
  40cfb1:	push   es
  40cfb2:	inc    esp
  40cfb3:	into   
  40cfb4:	fisubr DWORD PTR [ecx-0x39396818]
  40cfba:	and    DWORD PTR [ecx+0x1a],0xffffff9e
  40cfbe:	mov    ebp,0x99037bea
  40cfc3:	cmc    
  40cfc4:	retf   
  40cfc5:	fst    QWORD PTR [eax-0x51]
  40cfc8:	add    eax,0x6180c437
  40cfcd:	pop    ebp
  40cfce:	add    eax,0xb3077080
  40cfd3:	pusha  
  40cfd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfd5:	pop    ebp
  40cfd6:	lock adc ecx,eax
  40cfd9:	aas    
  40cfda:	inc    esp
  40cfdb:	out    dx,al
  40cfdc:	das    
  40cfdd:	fs (bad) 
  40cfdf:	mov    bh,0xdd
  40cfe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfe3:	mov    ds:0x50909562,al
  40cfe8:	mov    edi,0xda8e6f8c
  40cfed:	scas   eax,DWORD PTR es:[edi]
  40cfee:	mov    eax,0x3607c7b4
  40cff3:	dec    eax
  40cff4:	mov    BYTE PTR [edi-0x79],dl
  40cff7:	pop    dx
  40cff9:	icebp  
  40cffa:	and    BYTE PTR [eax],0x2
  40cffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cffe:	inc    esi
  40cfff:	call   0x8809:0x823a1e59
  40d006:	pop    es
  40d007:	mov    DWORD PTR [esi+ecx*4-0x2b],0xc67ff789
  40d00f:	jge    0x40d078
  40d011:	fiadd  WORD PTR fs:[edx]
  40d014:	sub    edi,DWORD PTR [ecx+ecx*1-0x43]
  40d018:	pop    ss
  40d019:	fistp  DWORD PTR [edx-0x55965c81]
  40d01f:	push   0x30
  40d021:	call   0xef21:0xb0875767
  40d028:	inc    ebx
  40d029:	push   eax
  40d02a:	ins    DWORD PTR es:[edi],dx
  40d02b:	fld    DWORD PTR [ebp+0x46b6dffa]
  40d031:	es cmc 
  40d033:	jecxz  0x40cfe1
  40d035:	or     eax,0x5c320536
  40d03a:	push   0xffffffbc
  40d03c:	xchg   cl,bh
  40d03e:	sbb    eax,0x834a1758
  40d043:	push   ebx
  40d044:	cmp    al,0xde
  40d046:	nop
  40d047:	pop    edx
  40d048:	xchg   ecx,eax
  40d049:	xor    eax,0x86cfcdab
  40d04e:	and    DWORD PTR [ecx-0x49],edi
  40d051:	jl     0x40d0cf
  40d053:	stos   DWORD PTR es:[edi],eax
  40d054:	imul   edi,DWORD PTR [edi-0x5dd742d1],0x2e201a80
  40d05e:	test   eax,0xa9ef6c92
  40d063:	push   esi
  40d064:	sbb    edi,DWORD PTR [esp+eax*8+0x45]
  40d068:	or     dl,BYTE PTR es:[ecx]
  40d06b:	jg     0x40d03c
  40d06d:	cli    
  40d06e:	mov    esp,0x60a99e43
  40d073:	int    0x3a
  40d075:	or     ebx,eax
  40d077:	mov    al,BYTE PTR [edi+0x36f2eedb]
  40d07d:	and    DWORD PTR [esi*4+0x7d483bb7],ecx
  40d084:	mov    ds:0xabf59a59,al
  40d089:	push   eax
  40d08a:	out    0xb0,al
  40d08c:	cmp    bh,cl
  40d08e:	add    BYTE PTR [ebx-0x3da0c2c0],0x1e
  40d095:	sbb    al,0x4d
  40d097:	mov    ah,0x5b
  40d099:	cdq    
  40d09a:	jl     0x40d0d8
  40d09c:	icebp  
  40d09d:	in     eax,0x55
  40d09f:	int3   
  40d0a0:	stc    
  40d0a1:	push   ebp
  40d0a2:	inc    ebp
  40d0a3:	push   ebp
  40d0a4:	das    
  40d0a5:	ret    0xfda8
  40d0a8:	aad    0xfa
  40d0aa:	sub    ebx,DWORD PTR [edx+eiz*2]
  40d0ad:	push   ds
  40d0ae:	adc    ebx,DWORD PTR [ecx-0x64aeda62]
  40d0b4:	popf   
  40d0b5:	cmp    al,0x8a
  40d0b7:	dec    ecx
  40d0b8:	sub    DWORD PTR [ecx-0x10aeee2],0x7a923457
  40d0c2:	dec    ecx
  40d0c3:	inc    ebx
  40d0c4:	pop    es
  40d0c5:	aad    0x24
  40d0c7:	jne    0x40d11e
  40d0c9:	adc    BYTE PTR [edx],0xdc
  40d0cc:	fisub  WORD PTR [ecx-0x43]
  40d0cf:	inc    ebx
  40d0d0:	je     0x40d13c
  40d0d2:	pop    ecx
  40d0d3:	icebp  
  40d0d4:	into   
  40d0d5:	mov    DWORD PTR [esp+edi*1-0x5],0xefe70f7d
  40d0dd:	into   
  40d0de:	jp     0x40d139
  40d0e0:	sub    al,0x75
  40d0e2:	je     0x40d0db
  40d0e4:	pusha  
  40d0e5:	mov    ds:0x31cf2e2d,al
  40d0ea:	sbb    esp,DWORD PTR [esi+0x7f337a0a]
  40d0f0:	ins    DWORD PTR es:[edi],dx
  40d0f1:	sbb    al,0x3a
  40d0f3:	aas    
  40d0f4:	or     BYTE PTR [esi+0x483d7f10],dh
  40d0fa:	xchg   ecx,eax
  40d0fb:	sbb    ecx,DWORD PTR [edi-0x65]
  40d0fe:	mov    ebp,DWORD PTR [ebx-0x73]
  40d101:	mov    edi,0xde5ee00c
  40d106:	fs pop edx
  40d108:	sbb    eax,DWORD PTR [edi-0x57]
  40d10b:	mov    esi,0x6af4ee83
  40d110:	(bad)  
  40d111:	or     ch,dl
  40d113:	in     al,dx
  40d114:	jno    0x40d17f
  40d116:	mov    dl,0x65
  40d118:	xchg   edx,esp
  40d11a:	jmp    0x40d0de
  40d11c:	mov    ebx,0x798de646
  40d121:	add    esi,DWORD PTR ds:0x9d5d20d8
  40d127:	xchg   BYTE PTR [esi-0x19aba9e],ch
  40d12d:	dec    DWORD PTR [ecx-0xd]
  40d130:	inc    esi
  40d131:	loop   0x40d194
  40d133:	pushf  
  40d134:	xchg   edx,eax
  40d135:	push   esp
  40d136:	imul   edx,DWORD PTR [esi],0xc
  40d139:	shl    BYTE PTR [eax],0xa
  40d13c:	and    bl,BYTE PTR [eax+0x5c]
  40d13f:	and    bl,BYTE PTR [esi-0x214f109a]
  40d145:	std    
  40d146:	adc    DWORD PTR [edx+ecx*1-0x6c],esi
  40d14a:	ror    BYTE PTR [ebx+ebp*1-0x2b730757],cl
  40d151:	fcom   DWORD PTR [ebx+eiz*2+0x6c]
  40d155:	ret    0x5d4e
  40d158:	mov    al,0xbe
  40d15a:	imul   esp,DWORD PTR [ecx+0x176062cc],0x899937e3
  40d164:	scas   eax,DWORD PTR es:[edi]
  40d165:	loopne 0x40d130
  40d167:	push   cs
  40d168:	ins    DWORD PTR es:[edi],dx
  40d169:	fucomp st(3)
  40d16b:	cmp    al,0x78
  40d16d:	es cld 
  40d16f:	ret    
  40d170:	outs   dx,BYTE PTR ds:[esi]
  40d171:	lods   eax,DWORD PTR ds:[esi]
  40d172:	outs   dx,BYTE PTR ds:[esi]
  40d173:	lods   al,BYTE PTR ds:[esi]
  40d174:	inc    esp
  40d175:	push   cs
  40d176:	sti    
  40d177:	(bad)  
  40d179:	mov    bl,0xa0
  40d17b:	cmp    al,0xa4
  40d17d:	adc    BYTE PTR [ebp-0x5e],dl
  40d180:	jg     0x40d1c4
  40d182:	pushf  
  40d183:	(bad)  
  40d185:	cmp    ebx,DWORD PTR [ecx+0x6ea0fd72]
  40d18b:	out    0x7e,eax
  40d18d:	lahf   
  40d18e:	jge    0x40d1d8
  40d190:	sbb    ebp,DWORD PTR [ecx+esi*1+0x1b]
  40d194:	imul   edi,DWORD PTR [ebp+0x57972b19],0xffffffc3
  40d19b:	dec    esi
  40d19c:	test   cl,0xd5
  40d19f:	push   esp
  40d1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1a1:	mov    dh,0xe3
  40d1a3:	cld    
  40d1a4:	xchg   esp,eax
  40d1a5:	call   0x5e2b0b1a
  40d1aa:	jae    0x40d171
  40d1ac:	retf   
  40d1ad:	and    al,0xfe
  40d1af:	(bad)  
  40d1b0:	sub    eax,0x36fd9d59
  40d1b5:	cmp    eax,0x30ea8a52
  40d1ba:	add    al,0xa2
  40d1bc:	mov    edi,0x18639214
  40d1c1:	jecxz  0x40d1cc
  40d1c3:	fiadd  DWORD PTR [eax+0x6e4f2687]
  40d1c9:	dec    esp
  40d1ca:	inc    esi
  40d1cb:	jnp    0x40d1f5
  40d1cd:	xchg   ebx,eax
  40d1ce:	adc    DWORD PTR [edi+0x5c7a21fb],esi
  40d1d4:	jns    0x40d1a8
  40d1d6:	xchg   ebx,eax
  40d1d7:	inc    eax
  40d1d8:	xor    eax,0x3d72063f
  40d1dd:	sbb    BYTE PTR [ecx+eiz*2+0x49],dl
  40d1e1:	lock in eax,dx
  40d1e3:	ret    0xde4f
  40d1e6:	icebp  
  40d1e7:	pop    esp
  40d1e8:	outs   dx,BYTE PTR ds:[esi]
  40d1e9:	pop    eax
  40d1ea:	adc    eax,0xdbb83e83
  40d1ef:	xor    esi,ebx
  40d1f1:	mov    WORD PTR [ebx+0x80261e1],?
  40d1f7:	dec    eax
  40d1f8:	jl     0x40d1f6
  40d1fa:	push   0x71
  40d1fc:	and    ebp,DWORD PTR [edx+eiz*2+0x1c]
  40d200:	arpl   WORD PTR [ebx+ebp*8+0x14192db6],bp
  40d207:	lods   eax,DWORD PTR ds:[esi]
  40d208:	mov    esp,0xe099b7f6
  40d20d:	lods   eax,DWORD PTR ds:[esi]
  40d20e:	(bad)  
  40d210:	fs and eax,0x5dbcc1ae
  40d216:	hlt    
  40d217:	in     eax,dx
  40d218:	gs push 0xffffffce
  40d21b:	adc    al,0xe7
  40d21d:	pop    ds
  40d21e:	pop    eax
  40d21f:	push   0x7b
  40d221:	popf   
  40d222:	iret   
  40d223:	inc    ebx
  40d224:	sbb    ebx,DWORD PTR [edi-0x39]
  40d227:	jge    0x40d226
  40d229:	xchg   ecx,eax
  40d22a:	xor    DWORD PTR [esi+eiz*8],ecx
  40d22d:	lahf   
  40d22e:	pop    esi
  40d22f:	shl    DWORD PTR [ecx+0x22],cl
  40d232:	xchg   edx,eax
  40d233:	cwde   
  40d234:	or     DWORD PTR [edi],edi
  40d236:	out    0x18,al
  40d238:	cmp    BYTE PTR [esi+0x38],0xa3
  40d23c:	nop
  40d23d:	jecxz  0x40d1fd
  40d23f:	(bad)  
  40d240:	pop    ss
  40d241:	lahf   
  40d242:	adc    eax,0xe8b577f4
  40d247:	and    edx,edi
  40d249:	xor    eax,0x38f8f774
  40d24e:	stos   BYTE PTR es:[edi],al
  40d24f:	pop    ebp
  40d250:	and    eax,0x7ddd9e20
  40d255:	add    al,0x52
  40d257:	(bad)  
  40d258:	dec    esp
  40d259:	adc    ch,al
  40d25b:	test   DWORD PTR [edx],edi
  40d25d:	xchg   ebx,eax
  40d25e:	and    dh,BYTE PTR ds:0x2aabf9df
  40d264:	les    esi,FWORD PTR [ebp-0xe94474b]
  40d26a:	popf   
  40d26b:	neg    DWORD PTR [ecx]
  40d26d:	or     al,0xd1
  40d26f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d270:	sub    eax,0x191709d5
  40d275:	js     0x40d2dd
  40d277:	mov    ds:0x9fe1976f,al
  40d27c:	push   cs
  40d27d:	jae    0x40d2b8
  40d27f:	pop    esi
  40d280:	gs push ecx
  40d282:	jle    0x40d262
  40d284:	pop    eax
  40d285:	fistp  WORD PTR [eax-0x4d]
  40d288:	inc    ebp
  40d289:	mov    eax,0x405b377d
  40d28e:	fwait
  40d28f:	dec    edi
  40d290:	ins    DWORD PTR es:[edi],dx
  40d291:	dec    ebp
  40d292:	enter  0xd435,0xdc
  40d296:	mov    al,0xf7
  40d298:	dec    edx
  40d299:	not    DWORD PTR [ebx-0x47107f21]
  40d29f:	ss mov edi,0x43acc82f
  40d2a5:	loopne 0x40d2cc
  40d2a7:	cwde   
  40d2a8:	sbb    BYTE PTR [ebx+0x71],0x4b
  40d2ac:	sbb    DWORD PTR ds:0x7954c2b9,0xf15ad23f
  40d2b6:	ja     0x40d266
  40d2b8:	or     DWORD PTR [eax],ebx
  40d2ba:	std    
  40d2bb:	add    eax,0xaa83cd33
  40d2c0:	mov    al,0x98
  40d2c2:	sub    eax,0x7cb9b755
  40d2c7:	xor    ebx,DWORD PTR [ebx+0x2d]
  40d2ca:	pop    ss
  40d2cb:	xchg   ebp,eax
  40d2cc:	cmp    BYTE PTR ds:0x74329a5f,ah
  40d2d2:	push   esi
  40d2d3:	and    BYTE PTR [edx-0x49],cl
  40d2d6:	test   dl,ah
  40d2d8:	mov    BYTE PTR [ebx],dh
  40d2da:	pushf  
  40d2db:	pop    ebp
  40d2dc:	xchg   edx,eax
  40d2dd:	add    bh,BYTE PTR [ebx]
  40d2df:	lds    ebp,FWORD PTR [esp+ecx*8]
  40d2e2:	rcr    DWORD PTR [edx+esi*2+0x3d],0x16
  40d2e7:	cdq    
  40d2e8:	inc    ebx
  40d2e9:	fistp  DWORD PTR ds:0x3d4c13ae
  40d2ef:	sar    DWORD PTR [ebx+0x5893577b],0x39
  40d2f6:	outs   dx,BYTE PTR ds:[esi]
  40d2f7:	clc    
  40d2f8:	test   eax,0xaa1d4904
  40d2fd:	in     al,dx
  40d2fe:	or     esp,DWORD PTR [esi-0x52]
  40d301:	(bad)  
  40d302:	lods   eax,DWORD PTR ds:[esi]
  40d303:	dec    esi
  40d304:	cmp    al,0xc7
  40d306:	ins    DWORD PTR es:[edi],dx
  40d307:	retf   0xa812
  40d30a:	xchg   edx,eax
  40d30b:	jnp    0x40d327
  40d30d:	xchg   edx,eax
  40d30e:	mov    cl,0xe8
  40d310:	mov    ebp,0x5ed84476
  40d315:	(bad)
  40d319:	pop    ss
  40d31a:	js     0x40d2c1
  40d31c:	loope  0x40d2ea
  40d31e:	sbb    al,0x50
  40d320:	outs   dx,BYTE PTR ds:[esi]
  40d321:	div    DWORD PTR [ebx-0x2f2184cf]
  40d327:	xchg   edi,eax
  40d328:	mov    esi,0xdccf670e
  40d32d:	mov    ah,0x9
  40d32f:	cdq    
  40d330:	pop    eax
  40d331:	dec    esp
  40d332:	inc    edx
  40d333:	and    eax,0xdbd91ac6
  40d338:	mov    ebx,0xc2cfeba0
  40d33d:	push   esp
  40d33e:	jmp    0x1117:0x3506e6ee
  40d345:	ror    DWORD PTR ds:0x6d60cc99,1
  40d34b:	stos   BYTE PTR es:[edi],al
  40d34c:	jl     0x40d3a1
  40d34e:	fiadd  DWORD PTR [ecx]
  40d350:	lsl    eax,dx
  40d353:	rol    BYTE PTR ds:[edx-0x3c],0xc0
  40d358:	cmp    bl,BYTE PTR ds:0x5e9567f8
  40d35e:	xchg   BYTE PTR [ecx-0x39],dl
  40d361:	(bad)  
  40d362:	aaa    
  40d363:	and    DWORD PTR [edi],edx
  40d365:	mov    ebx,0x1289e627
  40d36a:	lds    eax,FWORD PTR [esi]
  40d36c:	aaa    
  40d36d:	cmp    DWORD PTR [ecx],esi
  40d36f:	fisub  DWORD PTR [ecx+0x75]
  40d372:	sub    al,BYTE PTR [ebp+0x3fe613c6]
  40d378:	repz int 0xa3
  40d37b:	jo     0x40d31a
  40d37d:	jp     0x40d3f5
  40d37f:	or     eax,0xe13fd2bf
  40d384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d385:	push   ebp
  40d386:	jmp    0xc826:0x531c0cbc
  40d38d:	push   es
  40d38e:	cmp    BYTE PTR [edi-0x36],cl
  40d391:	neg    bh
  40d393:	jne    0x40d3d7
  40d395:	int    0x62
  40d397:	xor    DWORD PTR [ecx-0x216122f9],0xffffff80
  40d39e:	push   es
  40d39f:	sahf   
  40d3a0:	jbe    0x40d420
  40d3a2:	hlt    
  40d3a3:	in     eax,0x4c
  40d3a5:	shr    DWORD PTR gs:[ebp+0x5ce218e0],cl
  40d3ac:	lahf   
  40d3ad:	(bad)  
  40d3b0:	xor    esi,DWORD PTR [eax-0x4317e18a]
  40d3b6:	cmp    bl,BYTE PTR [edi-0x19]
  40d3b9:	mov    esi,0xe7b55c6e
  40d3be:	lds    ebx,FWORD PTR [eax+0x2d]
  40d3c1:	xchg   ecx,eax
  40d3c2:	mov    ebp,0x51e702eb
  40d3c7:	mov    al,0xdc
  40d3c9:	pop    eax
  40d3ca:	fs addr16 popa 
  40d3cd:	lods   al,BYTE PTR ds:[esi]
  40d3ce:	cmp    eax,0x2f5e6c14
  40d3d3:	sbb    al,0x82
  40d3d5:	outs   dx,BYTE PTR ds:[esi]
  40d3d6:	lods   eax,DWORD PTR ds:[esi]
  40d3d7:	imul   ecx,DWORD PTR [ebp-0x75],0xfaf9c9a2
  40d3de:	inc    edi
  40d3df:	pop    esi
  40d3e0:	pop    eax
  40d3e1:	sbb    eax,0x626840af
  40d3e6:	lods   eax,DWORD PTR ds:[esi]
  40d3e7:	(bad)  
  40d3e8:	xor    al,0x5f
  40d3ea:	fmul   st,st(5)
  40d3ec:	push   es
  40d3ed:	jne    0x40d459
  40d3ef:	jl     0x40d399
  40d3f1:	or     eax,DWORD PTR [ebx+0x2e]
  40d3f4:	(bad)  
  40d3f5:	loope  0x40d461
  40d3f7:	call   0x487bf6d2
  40d3fc:	fidivr DWORD PTR [esi]
  40d3fe:	xor    al,0x68
  40d400:	aam    0x22
  40d402:	xor    eax,0x2ecd82ac
  40d407:	ror    DWORD PTR [edx-0x2c7a1288],cl
  40d40d:	lds    ebx,FWORD PTR [ebx]
  40d40f:	sub    bh,BYTE PTR [esi-0x50]
  40d412:	das    
  40d413:	jae    0x40d443
  40d415:	stos   DWORD PTR es:[edi],eax
  40d416:	int    0x27
  40d418:	fsub   st,st(1)
  40d41a:	mov    es,WORD PTR [eax+0x31]
  40d41d:	sbb    esi,edx
  40d41f:	in     eax,dx
  40d420:	shr    ecx,1
  40d422:	mov    dl,0xb0
  40d424:	arpl   dx,si
  40d426:	loop   0x40d473
  40d428:	shl    DWORD PTR [edx-0x3360e75e],0x52
  40d42f:	sbb    eax,DWORD PTR [ebp+0x31]
  40d432:	sbb    eax,0xa39e4dcd
  40d437:	or     DWORD PTR [esi+ecx*1-0x55],0x3c396172
  40d43f:	sbb    DWORD PTR [esi-0x553c1e2f],0xffffffd6
  40d446:	push   eax
  40d447:	pushf  
  40d448:	int3   
  40d449:	cmp    ebx,DWORD PTR [eax]
  40d44b:	les    esp,FWORD PTR [edi]
  40d44d:	es pushf 
  40d44f:	iret   
  40d450:	inc    eax
  40d451:	push   edi
  40d452:	push   cs
  40d453:	lea    ebx,[edi+0x6eccf57a]
  40d459:	pusha  
  40d45a:	mov    bl,0x1f
  40d45c:	inc    esi
  40d45d:	jnp    0x40d4d6
  40d45f:	and    edx,ebp
  40d461:	mov    esi,0xe217bebd
  40d466:	stc    
  40d467:	adc    BYTE PTR [eax-0x170e1e0d],ah
  40d46d:	cld    
  40d46e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d470:	scas   al,BYTE PTR es:[edi]
  40d471:	repz mov ah,bh
  40d474:	mov    edx,0x59910644
  40d479:	inc    esp
  40d47a:	or     al,0xdf
  40d47c:	lds    edx,FWORD PTR [esi+eax*2+0x21]
  40d480:	mov    cs,WORD PTR [edx-0x6c]
  40d483:	aad    0xf6
  40d485:	sub    al,0xe4
  40d487:	or     BYTE PTR [eax+0x2f],0x72
  40d48b:	mov    ebx,DWORD PTR [ecx]
  40d48d:	fsubr  DWORD PTR [eax+0x46350c3f]
  40d493:	clc    
  40d494:	jne    0x40d4c0
  40d496:	fnstsw WORD PTR ds:0xd75a168d
  40d49c:	add    BYTE PTR [ebp+0x5c969c8a],0x28
  40d4a3:	dec    edx
  40d4a4:	xchg   esi,eax
  40d4a5:	and    eax,0xde9323ba
  40d4aa:	cld    
  40d4ab:	push   cs
  40d4ac:	in     eax,0x52
  40d4ae:	and    bl,dh
  40d4b0:	adc    ebx,DWORD PTR [eax+0x27]
  40d4b3:	mov    eax,0xa94f0fef
  40d4b8:	xchg   esi,edi
  40d4ba:	outs   dx,DWORD PTR ds:[esi]
  40d4bb:	mov    cl,0x25
  40d4bd:	sub    BYTE PTR [ebx-0x58],0x59
  40d4c1:	and    ebp,ecx
  40d4c3:	pop    es
  40d4c4:	mov    ebx,0x77999d78
  40d4c9:	idiv   BYTE PTR [esi]
  40d4cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4cc:	sub    eax,DWORD PTR [esi*2+0x6692c75f]
  40d4d3:	sbb    al,0xf0
  40d4d5:	mov    ah,0x8b
  40d4d7:	fwait
  40d4d8:	mov    bh,0xc0
  40d4da:	in     eax,dx
  40d4db:	pop    es
  40d4dc:	data16 into 
  40d4de:	mov    ebp,0x6f017053
  40d4e3:	xor    al,0x32
  40d4e5:	imul   esi,esp,0xa351d96
  40d4eb:	dec    esp
  40d4ec:	shl    BYTE PTR [edx],1
  40d4ee:	retf   
  40d4ef:	jl     0x40d4f7
  40d4f1:	mov    edx,0xd77bffd5
  40d4f6:	push   esi
  40d4f7:	xchg   edi,eax
  40d4f8:	push   ebp
  40d4f9:	xchg   ebx,eax
  40d4fa:	dec    edi
  40d4fb:	jge    0x40d497
  40d4fd:	sub    BYTE PTR [ebx+0x59b48e92],ch
  40d503:	lods   al,BYTE PTR ds:[esi]
  40d504:	jae    0x40d501
  40d506:	sbb    ebx,DWORD PTR [eax-0x6ebb8c56]
  40d50c:	bound  ebp,QWORD PTR [edx+0x21]
  40d50f:	in     al,0xdf
  40d511:	push   0x8ee0f71e
  40d516:	sti    
  40d517:	cwde   
  40d518:	xchg   ebx,eax
  40d519:	jbe    0x40d53e
  40d51b:	add    esi,esi
  40d51d:	mov    al,0x3d
  40d51f:	or     bl,ch
  40d521:	jle    0x40d5a0
  40d523:	and    eax,0x4578c6e2
  40d528:	or     eax,DWORD PTR [edi-0x7b]
  40d52b:	xor    bh,0x55
  40d52e:	mov    bh,BYTE PTR [edi-0x2382f3a]
  40d534:	enter  0x5f65,0x17
  40d538:	pop    ebx
  40d539:	(bad)  
  40d53a:	(bad)  
  40d53b:	out    0xbb,al
  40d53d:	pop    ds
  40d53e:	int    0x6e
  40d540:	mov    cl,0xec
  40d542:	test   BYTE PTR [ecx-0x545d5175],dh
  40d548:	cmp    edi,esp
  40d54a:	pusha  
  40d54b:	sbb    dh,BYTE PTR [eax+0x26]
  40d54e:	mov    ah,0x1a
  40d550:	adc    dh,BYTE PTR [eax]
  40d552:	mov    ebp,0xdaddf37d
  40d557:	pop    ds
  40d558:	in     eax,dx
  40d559:	outs   dx,DWORD PTR ds:[esi]
  40d55a:	js     0x40d565
  40d55c:	mov    eax,0x29f1b693
  40d561:	ss xor ah,al
  40d564:	out    0x97,eax
  40d566:	fild   WORD PTR [eax-0x469a169e]
  40d56c:	dec    ebp
  40d56d:	or     dl,BYTE PTR [esi-0x35]
  40d570:	fild   DWORD PTR [ebx-0x63c6f86f]
  40d576:	xchg   esp,eax
  40d577:	adc    ebp,DWORD PTR [eax-0x14]
  40d57a:	mov    ds:0x1200abd7,al
  40d57f:	add    eax,0xc024aa5b
  40d584:	pushf  
  40d585:	inc    edi
  40d586:	jmp    0x40d541
  40d588:	add    DWORD PTR es:[edi-0x12cdb367],0x23
  40d590:	ret    0xc39
  40d593:	or     DWORD PTR [edx],edx
  40d595:	ret    
  40d596:	xor    ecx,ebp
  40d598:	enter  0x3266,0xe3
  40d59c:	sub    dh,BYTE PTR [edx]
  40d59e:	pusha  
  40d59f:	mov    ah,0xba
  40d5a1:	mov    bh,0xd7
  40d5a3:	push   ecx
  40d5a4:	cli    
  40d5a5:	test   edi,0xd0767153
  40d5ab:	pop    ebx
  40d5ac:	mov    edi,ds
  40d5ae:	in     eax,dx
  40d5af:	push   cs
  40d5b0:	imul   edx,eax,0x2709177b
  40d5b6:	mov    ss,esp
  40d5b8:	xchg   edi,eax
  40d5b9:	ins    DWORD PTR es:[edi],dx
  40d5ba:	mov    ch,0x1
  40d5bc:	and    BYTE PTR [eax-0x7a652486],al
  40d5c2:	sub    eax,0x53c72042
  40d5c7:	jg     0x40d564
  40d5c9:	or     eax,0x9ffa477c
  40d5ce:	push   ss
  40d5cf:	jne    0x40d616
  40d5d1:	test   al,0x38
  40d5d3:	loope  0x40d5a7
  40d5d5:	repz inc ebx
  40d5d7:	popa   
  40d5d8:	mov    bh,0x15
  40d5da:	je     0x40d578
  40d5dc:	loop   0x40d647
  40d5de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5df:	inc    ebp
  40d5e0:	dec    esp
  40d5e1:	loope  0x40d56a
  40d5e3:	ss ror ebx,cl
  40d5e6:	mov    ch,BYTE PTR [ecx-0x2d]
  40d5e9:	ins    BYTE PTR es:[edi],dx
  40d5ea:	mov    edi,0xef231f41
  40d5ef:	adc    DWORD PTR [ecx],edi
  40d5f1:	test   eax,0x82e026a2
  40d5f6:	scas   eax,DWORD PTR es:[edi]
  40d5f7:	sar    cl,1
  40d5f9:	leave  
  40d5fa:	xchg   edx,eax
  40d5fb:	popf   
  40d5fc:	xchg   ebx,eax
  40d5fd:	inc    esi
  40d5fe:	jnp    0x40d66d
  40d600:	fwait
  40d601:	inc    ecx
  40d602:	xchg   edi,eax
  40d603:	and    eax,0xb99af82d
  40d608:	sti    
  40d609:	mov    bl,0xd1
  40d60b:	add    al,ch
  40d60d:	hlt    
  40d60e:	mov    bl,0x97
  40d610:	sbb    al,0x6b
  40d612:	aaa    
  40d613:	cdq    
  40d614:	adc    esp,DWORD PTR [edx-0xcad85f8]
  40d61a:	sub    DWORD PTR [edi-0x2ae8092d],esi
  40d620:	bound  eax,QWORD PTR [ebp+0x73af3c6c]
  40d626:	js     0x40d692
  40d628:	pop    edx
  40d629:	mov    ch,ch
  40d62b:	das    
  40d62c:	in     eax,dx
  40d62d:	lods   al,BYTE PTR ds:[esi]
  40d62e:	sbb    eax,0xc88905d1
  40d633:	jecxz  0x40d62d
  40d635:	ja     0x40d69f
  40d637:	enter  0x6fec,0x11
  40d63b:	loopne 0x40d661
  40d63d:	sub    esp,DWORD PTR [ecx]
  40d63f:	clc    
  40d640:	xor    BYTE PTR [eax],dl
  40d642:	sub    DWORD PTR [edx+0x33],ecx
  40d645:	mov    edx,ds
  40d647:	mov    ebp,ecx
  40d649:	cmp    ch,BYTE PTR [edx]
  40d64b:	stos   DWORD PTR es:[edi],eax
  40d64c:	sbb    edx,DWORD PTR [edx]
  40d64e:	pop    esp
  40d64f:	or     ah,BYTE PTR [ebx+0x5a]
  40d652:	sahf   
  40d653:	inc    ecx
  40d654:	cmp    dl,dl
  40d656:	pop    ebx
  40d657:	cmp    cl,BYTE PTR ds:0x25a9a8fe
  40d65d:	repnz xchg esp,eax
  40d65f:	dec    ecx
  40d660:	(bad)  
  40d661:	mov    DWORD PTR [ebx-0x58],esp
  40d664:	xor    BYTE PTR [esi-0x5f857bc4],ch
  40d66a:	xlat   BYTE PTR ds:[ebx]
  40d66b:	sbb    edx,ebp
  40d66d:	rcr    BYTE PTR fs:[edx+0x751f33a0],cl
  40d674:	inc    esi
  40d675:	add    al,0xe3
  40d677:	ret    0xf473
  40d67a:	xor    eax,0x486065aa
  40d67f:	inc    edx
  40d680:	push   ds
  40d681:	xchg   edi,eax
  40d682:	mov    al,ds:0x382a8c1b
  40d687:	cmp    BYTE PTR [edx+0x75],ah
  40d68a:	out    dx,al
  40d68b:	mov    BYTE PTR [ebp+0x4f],bh
  40d68e:	add    ch,BYTE PTR [esi+0x41]
  40d691:	pop    ebp
  40d692:	ins    DWORD PTR es:[edi],dx
  40d693:	add    al,0x8a
  40d695:	or     DWORD PTR [edx-0xb5362b7],edx
  40d69b:	sahf   
  40d69c:	test   eax,0x1827d35e
  40d6a1:	icebp  
  40d6a2:	and    BYTE PTR [eax-0x5c1a35e],bh
  40d6a8:	fs sbb al,0x96
  40d6ab:	jmp    0x77effd4
  40d6b0:	jge    0x40d676
  40d6b2:	cmp    BYTE PTR [ecx-0x45c66894],dh
  40d6b8:	fcomp  st(0)
  40d6ba:	adc    edi,esp
  40d6bc:	and    BYTE PTR [edx-0x2e83517d],ah
  40d6c2:	push   ds
  40d6c3:	popf   
  40d6c4:	jno    0x40d667
  40d6c6:	xchg   ebp,eax
  40d6c7:	and    ebp,DWORD PTR [ebp+edx*8-0x45a8c473]
  40d6ce:	cdq    
  40d6cf:	cmp    ch,BYTE PTR [edi+ebp*1]
  40d6d2:	not    BYTE PTR ss:[eax+0x1712f786]
  40d6d9:	inc    ecx
  40d6da:	loopne 0x40d701
  40d6dc:	int3   
  40d6dd:	out    dx,al
  40d6de:	icebp  
  40d6df:	jp     0x40d6c6
  40d6e1:	adc    DWORD PTR [ebx-0x3d],esp
  40d6e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6e5:	mov    al,ds:0xb0bf134
  40d6ea:	mov    ?,eax
  40d6ec:	lods   eax,DWORD PTR ds:[esi]
  40d6ed:	inc    ecx
  40d6ee:	in     eax,0x3d
  40d6f0:	mov    eax,0x9fedf4d9
  40d6f5:	sbb    BYTE PTR [ebp+0x26a28c05],0xe6
  40d6fc:	xchg   ebp,eax
  40d6fd:	stc    
  40d6fe:	int    0x78
  40d700:	pop    esi
  40d701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d702:	jmp    0xb36cc791
  40d707:	lods   al,BYTE PTR ds:[esi]
  40d708:	adc    ah,cl
  40d70a:	sar    DWORD PTR [ebx-0x7c86239f],1
  40d710:	std    
  40d711:	xchg   ebp,ebp
  40d713:	retf   
  40d714:	daa    
  40d715:	bnd jl 0x40d753
  40d718:	pusha  
  40d719:	outs   dx,DWORD PTR ds:[esi]
  40d71a:	and    edi,DWORD PTR [esi-0x3e]
  40d71d:	mov    esi,0xc292f725
  40d722:	xchg   esp,eax
  40d723:	ds ds dec ecx
  40d726:	test   eax,0xfede9516
  40d72b:	out    dx,al
  40d72c:	pop    esp
  40d72d:	in     al,dx
  40d72e:	push   ebx
  40d72f:	xchg   esp,eax
  40d730:	jnp    0x40d796
  40d732:	js     0x40d77e
  40d734:	mov    ah,0x3b
  40d736:	or     eax,0xc33c2f02
  40d73b:	(bad)
  40d73e:	xchg   esi,eax
  40d73f:	inc    esi
  40d740:	out    0x37,eax
  40d742:	cmc    
  40d743:	mov    eax,ds:0x676c6283
  40d748:	loope  0x40d791
  40d74a:	sar    DWORD PTR [eax],0xe2
  40d74d:	add    cl,BYTE PTR [eax-0xcf23612]
  40d753:	icebp  
  40d754:	sub    edx,DWORD PTR [eax]
  40d756:	sub    eax,0x3f127e0d
  40d75b:	xor    BYTE PTR [edi+0x20],al
  40d75e:	es push eax
  40d760:	mov    eax,0xafa2e7b7
  40d765:	(bad)  
  40d766:	mov    WORD PTR [edi+0x2d],ss
  40d769:	std    
  40d76a:	pop    edi
  40d76b:	dec    esi
  40d76c:	add    BYTE PTR [edi],cl
  40d76e:	popa   
  40d76f:	(bad)  
  40d770:	fnstenv [esi]
  40d772:	push   eax
  40d773:	or     ah,0x64
  40d776:	dec    edx
  40d777:	icebp  
  40d778:	push   0x5d0339ad
  40d77d:	in     al,dx
  40d77e:	cmp    eax,0xd9263bf2
  40d783:	cmc    
  40d784:	hlt    
  40d785:	xor    al,0x7b
  40d787:	jne    0x40d7ab
  40d789:	adc    ch,bh
  40d78b:	cmp    al,0x4f
  40d78d:	addr16 addr16 adc eax,0x9bb7775d
  40d794:	push   esi
  40d795:	xor    BYTE PTR ds:0x8c575495,0x2e
  40d79c:	inc    edi
  40d79d:	stos   DWORD PTR es:[edi],eax
  40d79e:	mov    WORD PTR [eax+eiz*4+0x7fee1c0e],fs
  40d7a5:	ss out 0x53,eax
  40d7a8:	dec    ecx
  40d7a9:	cmp    eax,0x6b81b7b0
  40d7ae:	xor    ebx,edi
  40d7b0:	mov    edx,0x31e13583
  40d7b5:	loope  0x40d761
  40d7b7:	jnp    0x40d7a6
  40d7b9:	jmp    0x40d7fd
  40d7bb:	out    0xd7,al
  40d7bd:	cmp    bl,BYTE PTR [edi+0x74]
  40d7c0:	xor    BYTE PTR [ecx],al
  40d7c2:	cmp    edx,0xffffffea
  40d7c5:	dec    eax
  40d7c6:	es add al,0x85
  40d7c9:	imul   ebx,esi,0x50
  40d7cc:	jmp    0x2ef74641
  40d7d1:	pop    edx
  40d7d2:	cwde   
  40d7d3:	(bad)  
  40d7d5:	inc    edx
  40d7d6:	in     eax,0x1b
  40d7d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7d9:	cld    
  40d7da:	add    ch,BYTE PTR [esi+0x0]
  40d7dd:	stos   BYTE PTR es:[edi],al
  40d7de:	xlat   BYTE PTR ds:[ebx]
  40d7df:	inc    edx
  40d7e0:	jns    0x40d827
  40d7e2:	inc    eax
  40d7e3:	icebp  
  40d7e4:	stos   DWORD PTR es:[edi],eax
  40d7e5:	lock sub ch,BYTE PTR [edx+0x1e49b76d]
  40d7ec:	or     DWORD PTR [ebp+0x62],0x71
  40d7f0:	popf   
  40d7f1:	ret    
  40d7f2:	repz sahf 
  40d7f4:	in     eax,0x93
  40d7f6:	js     0x40d86f
  40d7f8:	das    
  40d7f9:	bound  edi,QWORD PTR [edi]
  40d7fb:	push   0xffffffa1
  40d7fd:	mov    bl,0xc7
  40d7ff:	stos   BYTE PTR es:[edi],al
  40d800:	dec    ebx
  40d801:	nop
  40d802:	or     cl,dh
  40d804:	push   0xffffffeb
  40d806:	pushf  
  40d807:	jp     0x40d7c0
  40d809:	out    dx,al
  40d80a:	je     0x40d7bf
  40d80c:	fucom  st(7)
  40d80e:	fs jl  0x40d85c
  40d811:	sbb    ch,cl
  40d813:	jge    0x40d79e
  40d815:	into   
  40d816:	call   0xb3c8:0x453c3051
  40d81d:	mov    edx,0x5e7548df
  40d822:	nop
  40d823:	mov    WORD PTR [ebp-0x37810001],?
  40d829:	push   esi
  40d82a:	out    dx,al
  40d82b:	xor    ah,cl
  40d82d:	jmp    0x8b33:0x18267196
  40d834:	xlat   BYTE PTR ds:[ebx]
  40d835:	cmc    
  40d836:	sahf   
  40d837:	dec    edx
  40d838:	es mov ah,0x9f
  40d83b:	cmp    DWORD PTR [ebp+0x59],eax
  40d83e:	dec    eax
  40d83f:	dec    edx
  40d840:	in     al,0xf6
  40d842:	js     0x40d7ed
  40d844:	xchg   ebx,edx
  40d846:	inc    eax
  40d847:	xchg   esi,eax
  40d848:	pop    ds
  40d849:	ins    BYTE PTR es:[edi],dx
  40d84a:	pop    edi
  40d84b:	inc    edi
  40d84c:	push   DWORD PTR [ecx+0x6d75df64]
  40d852:	mov    dh,0x7e
  40d854:	or     DWORD PTR [esi+0x479c555],edx
  40d85a:	add    ah,bl
  40d85c:	test   eax,eax
  40d85e:	cwde   
  40d85f:	pop    ebx
  40d860:	or     bh,al
  40d862:	xchg   ecx,eax
  40d863:	sbb    edi,DWORD PTR [ebx+0x6a354b77]
  40d869:	dec    ebp
  40d86a:	ror    eax,cl
  40d86c:	inc    eax
  40d86d:	push   DWORD PTR [ecx]
  40d86f:	jmp    0x40d8a9
  40d871:	add    al,0xf8
  40d873:	jge    0x40d89d
  40d875:	or     ebp,DWORD PTR [ecx+ecx*1]
  40d878:	retf   
  40d879:	ret    0xf50e
  40d87c:	rol    BYTE PTR [eax],0x11
  40d87f:	push   ecx
  40d880:	dec    ebp
  40d881:	sbb    ebx,ecx
  40d883:	stos   BYTE PTR es:[edi],al
  40d884:	aam    0x20
  40d886:	adc    ecx,DWORD PTR [ebp+0x1f]
  40d889:	sti    
  40d88a:	and    al,0xfc
  40d88c:	cld    
  40d88d:	inc    ebx
  40d88e:	mov    bl,0x93
  40d890:	cdq    
  40d891:	push   0xe40daaa2
  40d896:	popf   
  40d897:	(bad)  
  40d898:	rcl    al,0x5d
  40d89b:	loope  0x40d8ee
  40d89d:	aas    
  40d89e:	xchg   edi,eax
  40d89f:	push   ds
  40d8a0:	push   es
  40d8a1:	push   ebp
  40d8a2:	fidivr WORD PTR [ecx-0x51]
  40d8a5:	jmp    0x40d916
  40d8a7:	fdivr  QWORD PTR [esi]
  40d8a9:	cmc    
  40d8aa:	inc    esp
  40d8ab:	pushf  
  40d8ac:	dec    ebx
  40d8ad:	lahf   
  40d8ae:	(bad)  
  40d8af:	cmp    dl,BYTE PTR [eax*1-0x5f5e5e78]
  40d8b6:	xchg   esp,eax
  40d8b7:	pusha  
  40d8b8:	test   DWORD PTR [esi+0x26152aaa],esp
  40d8be:	pop    esi
  40d8bf:	test   al,0xd8
  40d8c1:	mov    gs,WORD PTR [ecx+edx*4+0x2ed02013]
  40d8c8:	imul   BYTE PTR [ebp-0x6b]
  40d8cb:	adc    bl,BYTE PTR [eax-0x272269c6]
  40d8d1:	leave  
  40d8d2:	je     0x40d8d7
  40d8d4:	gs cld 
  40d8d6:	jecxz  0x40d8de
  40d8d8:	stos   BYTE PTR es:[edi],al
  40d8d9:	push   es
  40d8da:	pop    ecx
  40d8db:	je     0x40d872
  40d8dd:	clc    
  40d8de:	test   DWORD PTR [edi+0x63],esi
  40d8e1:	mov    WORD PTR [eax+0x18],cs
  40d8e4:	jns    0x40d8a9
  40d8e6:	test   al,0x98
  40d8e8:	in     al,0xaa
  40d8ea:	inc    esp
  40d8eb:	dec    esp
  40d8ec:	mov    cl,0x68
  40d8ee:	cmp    eax,0x57158c4e
  40d8f3:	sahf   
  40d8f4:	adc    BYTE PTR [eax-0xfeb0a6d],dl
  40d8fa:	dec    ebx
  40d8fb:	mov    dl,0xf4
  40d8fd:	mov    cl,0x4f
  40d8ff:	push   esi
  40d900:	gs stos BYTE PTR es:[edi],al
  40d902:	sub    DWORD PTR [edi-0x5da92f65],ecx
  40d908:	sti    
  40d909:	shl    BYTE PTR [ebp-0x52],1
  40d90c:	call   0x1c38:0xfbce079c
  40d913:	pop    ss
  40d914:	and    ebp,DWORD PTR [ecx-0x13dbce71]
  40d91a:	push   esi
  40d91b:	push   cs
  40d91c:	mov    ebp,0x20616805
  40d921:	mov    ah,0x25
  40d923:	adc    DWORD PTR [ebx+ebp*4-0x62],esi
  40d927:	out    dx,al
  40d928:	jp     0x40d969
  40d92a:	call   DWORD PTR [esi+0xa04f94e]
  40d930:	sahf   
  40d931:	jo     0xb596f938
  40d937:	arpl   WORD PTR [ecx+0x435d1be4],di
  40d93d:	nop
  40d93e:	xchg   ebp,eax
  40d93f:	popf   
  40d940:	adc    BYTE PTR [esi-0x19],al
  40d943:	bnd jnp 0x40d8fa
  40d946:	rol    DWORD PTR [ecx-0x61],0xde
  40d94a:	mov    WORD PTR [esi+ecx*4+0x30],?
  40d94e:	addr16 pusha 
  40d950:	push   es
  40d951:	jbe    0x40d9ca
  40d953:	sbb    ah,BYTE PTR [ebp+0x4e]
  40d956:	cmp    DWORD PTR ds:0x7ca7a68f,0xffffffd9
  40d95d:	fwait
  40d95e:	xchg   ecx,eax
  40d95f:	push   esi
  40d960:	or     bh,ah
  40d962:	ins    BYTE PTR es:[edi],dx
  40d963:	mov    esp,0xa4e37e88
  40d968:	dec    ecx
  40d969:	push   ss
  40d96a:	jg     0x40d9b7
  40d96c:	je     0x40d939
  40d96e:	and    DWORD PTR [edx-0x4d],edx
  40d971:	les    ecx,FWORD PTR [ecx+0x20cb6d65]
  40d977:	stos   BYTE PTR es:[edi],al
  40d978:	cli    
  40d979:	adc    ch,BYTE PTR [edi-0x5225c34c]
  40d97f:	dec    edi
  40d980:	outs   dx,BYTE PTR ds:[esi]
  40d981:	imul   edx,DWORD PTR [edx+0x38aeddcc],0x55470eec
  40d98b:	mov    ah,0x4c
  40d98d:	sub    cl,cl
  40d98f:	into   
  40d990:	pop    eax
  40d991:	lock mov al,ah
  40d994:	jmp    0xb06f:0x656ec83c
  40d99b:	outs   dx,BYTE PTR ds:[esi]
  40d99c:	cmp    cl,cl
  40d99e:	adc    dl,dh
  40d9a0:	cli    
  40d9a1:	retf   
  40d9a2:	jge    0x40d9a9
  40d9a4:	das    
  40d9a5:	mov    edx,fs
  40d9a7:	cmp    cl,BYTE PTR [edx-0x6d]
  40d9aa:	stos   BYTE PTR es:[edi],al
  40d9ab:	and    al,0x22
  40d9ad:	fs pop esi
  40d9af:	and    ch,ah
  40d9b1:	fmul   DWORD PTR [esi+0x5dfae1e]
  40d9b7:	push   ss
  40d9b8:	mov    dh,0x3c
  40d9ba:	daa    
  40d9bb:	push   edi
  40d9bc:	dec    esp
  40d9bd:	divps  xmm5,XMMWORD PTR [edi+ecx*8-0x69]
  40d9c2:	inc    ebx
  40d9c3:	mov    ds:0x63db395,al
  40d9c8:	into   
  40d9c9:	fild   QWORD PTR [ebp+0x4]
  40d9cc:	fwait
  40d9cd:	mov    eax,ds:0x90a9cf11
  40d9d2:	jmp    0xa3ea5528
  40d9d7:	out    0xcf,eax
  40d9d9:	push   0x87be30c2
  40d9de:	mov    BYTE PTR [ecx],ch
  40d9e0:	add    ecx,ecx
  40d9e2:	and    BYTE PTR [edi+0x4c],dl
  40d9e5:	mov    eax,0x93f89187
  40d9ea:	imul   esp,DWORD PTR [ebx],0x4d6c8638
  40d9f0:	jns    0x40d973
  40d9f2:	mov    ds:0x8e42e229,eax
  40d9f7:	(bad)  ds:0xb34c06ad
  40d9fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9fe:	or     ebx,DWORD PTR [edi+0x2c7813d1]
  40da04:	lods   al,BYTE PTR ds:[esi]
  40da05:	rol    DWORD PTR [edi+0x78],cl
  40da08:	call   0x9348:0xa86120c4
  40da0f:	pop    eax
  40da10:	jge    0x40da88
  40da12:	test   eax,0x49af2707
  40da17:	(bad)  
  40da18:	out    0xbe,al
  40da1a:	sub    DWORD PTR [ebp-0x5a],ebx
  40da1d:	shr    BYTE PTR [ecx-0x27],0x6f
  40da21:	call   0x8d6c41c6
  40da26:	aad    0xf6
  40da28:	retf   
  40da29:	inc    edi
  40da2a:	inc    edi
  40da2b:	inc    edi
  40da2c:	shr    DWORD PTR [eax+0x1cde62a6],cl
  40da32:	inc    esp
  40da33:	(bad)  
  40da34:	xor    eax,0x9e416e02
  40da39:	(bad)  [edi]
  40da3c:	mov    BYTE PTR [eax],ah
  40da3e:	adc    al,0xe6
  40da40:	adc    DWORD PTR [edx-0x779b5e94],eax
  40da46:	pusha  
  40da47:	imul   esi,DWORD PTR [esi],0x6e
  40da4a:	aam    0x60
  40da4c:	lods   al,BYTE PTR ds:[esi]
  40da4d:	sbb    BYTE PTR [edx+ebp*4],0x8d
  40da51:	(bad)  
  40da52:	sbb    DWORD PTR [ebp-0x729d8ab1],edi
  40da58:	or     ah,BYTE PTR [ebp+ebp*4+0x33]
  40da5c:	jne    0x40da0c
  40da5e:	jb     0x40da5b
  40da60:	or     eax,DWORD PTR [ebx]
  40da62:	push   es
  40da63:	mov    ebx,edi
  40da65:	fistp  QWORD PTR [edx+0xf]
  40da68:	(bad)  
  40da6a:	push   es
  40da6b:	ins    BYTE PTR es:[edi],dx
  40da6c:	and    BYTE PTR [eax+0x1b8a48e],dh
  40da72:	imul   edi,DWORD PTR [esi-0x12],0xffffff95
  40da76:	adc    eax,DWORD PTR [ebx+0x46c300b9]
  40da7c:	push   0xffffffbb
  40da7e:	in     al,0x50
  40da80:	imul   BYTE PTR [esi-0x1b]
  40da83:	push   edx
  40da84:	clc    
  40da85:	out    0x2c,eax
  40da87:	fsub   st,st(0)
  40da89:	pop    ss
  40da8a:	loope  0x40da5c
  40da8c:	fistp  WORD PTR [esi+0x3af543ee]
  40da92:	sbb    dh,BYTE PTR [esi+0x7a]
  40da95:	mov    dh,0x55
  40da97:	loopne 0x40da2d
  40da99:	push   edi
  40da9a:	inc    edi
  40da9b:	(bad)  
  40da9d:	sbb    BYTE PTR [esi-0x43cb2f40],dl
  40daa3:	and    ebp,DWORD PTR [ecx+ecx*1]
  40daa6:	dec    ebx
  40daa7:	in     al,0x9e
  40daa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daaa:	into   
  40daab:	cmp    esp,edx
  40daad:	aaa    
  40daae:	inc    esp
  40daaf:	pop    ss
  40dab0:	and    cl,ah
  40dab2:	test   ebx,edi
  40dab4:	cmp    eax,0xf99b1ab9
  40dab9:	scas   al,BYTE PTR es:[edi]
  40daba:	loop   0x40db03
  40dabc:	loope  0x40daa6
  40dabe:	mov    al,ds:0x49d326cd
  40dac3:	mov    ebp,0xea435839
  40dac8:	ror    BYTE PTR [ebx-0x23],1
  40dacb:	jbe    0x40da75
  40dacd:	dec    edi
  40dace:	retf   
  40dacf:	ja     0x40db01
  40dad1:	lea    edi,[esi]
  40dad3:	mov    ebx,0xd3200913
  40dad8:	jns    0x40db1e
  40dada:	jne    0x40da94
  40dadc:	xchg   esi,eax
  40dadd:	and    BYTE PTR [esi],al
  40dadf:	nop
  40dae0:	ss pusha 
  40dae2:	push   ds
  40dae3:	dec    ebp
  40dae4:	or     DWORD PTR [edx],edx
  40dae6:	mov    ebx,0x156fdbc4
  40daeb:	xchg   ecx,eax
  40daec:	jg     0x40db4a
  40daee:	and    edx,ecx
  40daf0:	pusha  
  40daf1:	loope  0x40daae
  40daf3:	clc    
  40daf4:	or     esp,DWORD PTR [ecx+eiz*8+0x5a39473d]
  40dafb:	dec    esp
  40dafc:	leave  
  40dafd:	push   esp
  40dafe:	fidivr WORD PTR [edi-0x54]
  40db01:	addr16 inc eax
  40db03:	in     al,dx
  40db04:	pop    ebx
  40db05:	lea    eax,[edx]
  40db07:	repnz mov ah,0x4e
  40db0a:	or     al,0x48
  40db0c:	imul   eax,DWORD PTR [edi-0x2a27f7ad],0x39
  40db13:	lock nop
  40db15:	mov    ds:0x599cd2bb,eax
  40db1a:	ds test al,0x67
  40db1d:	jge    0x40db1b
  40db1f:	sub    al,0x37
  40db21:	dec    eax
  40db22:	sub    DWORD PTR [ebp-0x326f595d],eax
  40db28:	xchg   edi,eax
  40db29:	in     al,0xbc
  40db2b:	out    dx,al
  40db2c:	fadd   DWORD PTR [edi]
  40db2e:	cld    
  40db2f:	pop    ebp
  40db30:	adc    edi,esp
  40db32:	sbb    eax,0xe0be8873
  40db37:	into   
  40db38:	int3   
  40db39:	ss fs mov al,0x1
  40db3d:	or     DWORD PTR [eax+0x12b0ee78],esp
  40db43:	(bad)  
  40db44:	ja     0x40db08
  40db46:	bound  edx,QWORD PTR [ecx-0x22]
  40db49:	cwde   
  40db4a:	jp     0x40dbcb
  40db4c:	lahf   
  40db4d:	pop    esi
  40db4e:	jo     0x40db17
  40db50:	jb     0x40dbc1
  40db52:	stc    
  40db53:	xchg   DWORD PTR [ebx+0x4d3d173b],edx
  40db59:	mov    dl,0xf2
  40db5b:	mov    bl,0x16
  40db5d:	adc    ah,BYTE PTR [ecx+0x3831ceed]
  40db63:	mov    edx,0xa7376693
  40db68:	inc    ebx
  40db69:	test   BYTE PTR [edi+0x6d8627af],cl
  40db6f:	sbb    edx,DWORD PTR [ecx-0x67dbbf90]
  40db75:	mov    cl,0xa3
  40db77:	test   DWORD PTR [eax],esi
  40db79:	jno    0x40db8c
  40db7b:	popa   
  40db7c:	xor    BYTE PTR [ecx+0x471907d8],ah
  40db82:	mov    ds:0x7b51034e,al
  40db87:	vandps ymm6,ymm6,YMMWORD PTR [ebx+0x4d]
  40db8c:	aam    0x45
  40db8e:	test   DWORD PTR [ebx+0x2c],ebx
  40db91:	lods   al,BYTE PTR ds:[esi]
  40db92:	sub    BYTE PTR [edx],ch
  40db94:	sahf   
  40db95:	jp     0x40db48
  40db97:	in     al,dx
  40db98:	xchg   ebx,eax
  40db99:	outs   dx,DWORD PTR gs:[esi]
  40db9b:	and    eax,0x8dc2a4c8
  40dba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dba1:	dec    eax
  40dba2:	push   ecx
  40dba3:	jmp    0x40db68
  40dba5:	mov    eax,0x1f267dde
  40dbaa:	pusha  
  40dbab:	mov    dl,0x50
  40dbad:	and    al,0xb
  40dbaf:	dec    esp
  40dbb0:	jmp    0x4ebfb855
  40dbb5:	cs fcomi st,st(1)
  40dbb8:	out    0xa3,eax
  40dbba:	pusha  
  40dbbb:	imul   ecx,DWORD PTR [eax-0x2e4ee9c5],0x483e039d
  40dbc5:	cmp    eax,ecx
  40dbc7:	fild   DWORD PTR [ecx+esi*2-0x2f]
  40dbcb:	and    BYTE PTR [edi+eiz*1-0x6741181a],dh
  40dbd2:	iret   
  40dbd3:	(bad)  
  40dbd4:	fidiv  DWORD PTR [edi]
  40dbd6:	inc    ebp
  40dbd7:	pop    esi
  40dbd8:	ins    DWORD PTR es:[edi],dx
  40dbd9:	xlat   BYTE PTR ds:[ebx]
  40dbda:	push   ebp
  40dbdb:	fcomp  QWORD PTR [edi+0xc]
  40dbde:	shr    DWORD PTR [esi],0x35
  40dbe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbe2:	mov    al,ds:0xfdb53d4c
  40dbe7:	jmp    0x946d29d7
  40dbec:	cmp    al,0xfc
  40dbee:	adc    al,0x2d
  40dbf0:	add    eax,0x29
  40dbf3:	push   eax
  40dbf4:	test   al,0x13
  40dbf6:	push   ecx
  40dbf7:	add    bl,dl
  40dbf9:	mov    esp,0xe4b326a2
  40dbfe:	pop    ebp
  40dbff:	aaa    
  40dc00:	pop    ebx
  40dc01:	nop
  40dc02:	push   ebp
  40dc03:	jle    0x40dc62
  40dc05:	adc    esp,DWORD PTR [edi]
  40dc07:	into   
  40dc08:	push   ds
  40dc09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc0a:	add    eax,0x64c88cdd
  40dc0f:	test   BYTE PTR [ebx+0x2cb09a56],dl
  40dc15:	neg    bh
  40dc17:	ret    
  40dc18:	jl     0x40dc83
  40dc1a:	int3   
  40dc1b:	pusha  
  40dc1c:	sti    
  40dc1d:	mov    ebp,DWORD PTR [esi-0x287bb168]
  40dc23:	mov    dh,al
  40dc25:	lahf   
  40dc26:	out    dx,eax
  40dc27:	call   0x81f5:0xee078dad
  40dc2e:	jns    0x40dbe4
  40dc30:	lock add ebp,DWORD PTR [edx+0x1f]
  40dc34:	(bad)  
  40dc35:	xchg   ecx,eax
  40dc36:	les    ecx,FWORD PTR [esi-0x76]
  40dc39:	mov    edx,0x93ab309f
  40dc3e:	mov    ch,0x92
  40dc40:	cmp    DWORD PTR [eax],edi
  40dc42:	es inc ebx
  40dc44:	outs   dx,BYTE PTR ds:[esi]
  40dc45:	test   DWORD PTR [edx+0x5d136a53],0x1441a7ce
  40dc4f:	dec    edx
  40dc50:	sahf   
  40dc51:	repz mov edx,0xa2fc69c8
  40dc57:	xchg   esp,eax
  40dc58:	outs   dx,DWORD PTR ds:[esi]
  40dc59:	push   ebp
  40dc5a:	add    bh,ah
  40dc5c:	jp     0x40dbfc
  40dc5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc5f:	js     0x40dbe2
  40dc61:	inc    ecx
  40dc62:	icebp  
  40dc63:	push   ecx
  40dc64:	mov    dl,0xd9
  40dc66:	xchg   edi,eax
  40dc67:	sub    eax,0xb291c9ae
  40dc6c:	mov    bh,0xa6
  40dc6e:	push   edx
  40dc6f:	retf   0xfaa9
  40dc72:	test   DWORD PTR [ebx+0x1f],edi
  40dc75:	pop    ecx
  40dc76:	mov    ecx,es
  40dc78:	(bad)  
  40dc79:	fidiv  WORD PTR [edi]
  40dc7b:	test   BYTE PTR [ebx+0x8a512c5],bl
  40dc81:	xchg   esi,eax
  40dc82:	mov    WORD PTR [ebx-0x5a],es
  40dc85:	xchg   edi,eax
  40dc86:	ret    
  40dc87:	ror    DWORD PTR [edx],0x82
  40dc8a:	std    
  40dc8b:	pop    esi
  40dc8c:	(bad)  
  40dc8d:	std    
  40dc8e:	push   ss
  40dc8f:	pop    es
  40dc90:	mov    ebp,0x5e3853b
  40dc95:	push   edx
  40dc96:	sub    ecx,DWORD PTR [esp+eiz*8]
  40dc99:	nop
  40dc9a:	sbb    al,0x99
  40dc9c:	loope  0x40dc3d
  40dc9e:	dec    ebx
  40dc9f:	mov    bl,0x99
  40dca1:	xlat   BYTE PTR ds:[ebx]
  40dca2:	xor    ebx,DWORD PTR [eax-0x7f]
  40dca5:	int    0x5a
  40dca7:	inc    eax
  40dca8:	push   esi
  40dca9:	pop    ecx
  40dcaa:	leave  
  40dcab:	cs faddp st(0),st
  40dcae:	data16 shl BYTE PTR [eax+ecx*2],0xe1
  40dcb3:	fmul   QWORD PTR [ebx-0x9f2b28b]
  40dcb9:	fcomp  st(2)
  40dcbb:	pop    ss
  40dcbc:	ja     0x40dd1e
  40dcbe:	retf   
  40dcbf:	xchg   ebp,ebp
  40dcc1:	setle  bl
  40dcc4:	sub    BYTE PTR [ecx-0x47524027],bl
  40dcca:	pop    ecx
  40dccb:	xlat   BYTE PTR ds:[ebx]
  40dccc:	push   0x110ddafc
  40dcd1:	mov    dh,ch
  40dcd3:	add    ebx,DWORD PTR [eax+0xa]
  40dcd6:	fnstenv [ebp+eiz*2+0x13b2cf]
  40dcdd:	and    eax,0x4892e3d7
  40dce2:	ret    
  40dce3:	sub    bl,al
  40dce5:	xor    al,0x30
  40dce7:	sub    eax,DWORD PTR [edx+0x24]
  40dcea:	inc    ecx
  40dceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcec:	xchg   esi,eax
  40dced:	xor    BYTE PTR [esi+0x37e324ae],bh
  40dcf3:	mov    dl,0xcc
  40dcf5:	mov    esp,0xd4341f95
  40dcfa:	mov    esp,0x6c7af1ea
  40dcff:	(bad)  
  40dd00:	add    BYTE PTR [edx-0x62],ah
  40dd03:	loopne 0x40dd73
  40dd05:	push   esi
  40dd06:	mov    eax,gs
  40dd08:	test   DWORD PTR [esp+edi*1-0x70],esi
  40dd0c:	inc    ebp
  40dd0d:	dec    edx
  40dd0e:	mov    eax,0x98b38c84
  40dd13:	jg     0x40dd60
  40dd15:	(bad)  
  40dd16:	popa   
  40dd17:	xor    eax,0xa1755368
  40dd1c:	es shl dh,cl
  40dd1f:	pop    ebp
  40dd20:	pop    ss
  40dd21:	mov    esi,DWORD PTR [ebx+eiz*8+0x529a97ae]
  40dd28:	xor    eax,0xfa07053d
  40dd2d:	dec    ecx
  40dd2e:	push   edi
  40dd2f:	jns    0x40dd84
  40dd31:	and    DWORD PTR [edi-0x59d8f850],0xffffffe3
  40dd38:	push   esp
  40dd39:	neg    BYTE PTR ds:0xa89ec798
  40dd3f:	push   0x57
  40dd41:	mov    eax,0x6fd316ad
  40dd46:	call   0x2eed:0xc352a21f
  40dd4d:	cmp    eax,0xdfb8dbba
  40dd52:	sbb    BYTE PTR [ebx+0x14951080],al
  40dd58:	mov    edi,0x45975344
  40dd5d:	sbb    ecx,esi
  40dd5f:	mov    esp,0x5c9e282a
  40dd64:	lods   al,BYTE PTR ds:[esi]
  40dd65:	xor    eax,0x5627210
  40dd6a:	(bad)  
  40dd6b:	push   ebp
  40dd6c:	push   ebx
  40dd6d:	ins    BYTE PTR es:[edi],dx
  40dd6e:	mov    dl,0x20
  40dd70:	aaa    
  40dd71:	and    eax,0xe0718e69
  40dd76:	jno    0x40dde8
  40dd78:	test   al,0x33
  40dd7a:	inc    edi
  40dd7b:	push   ds
  40dd7c:	xor    ebx,DWORD PTR [eax]
  40dd7e:	arpl   WORD PTR [ebx],bx
  40dd80:	ins    BYTE PTR es:[edi],dx
  40dd81:	mov    ah,0xb2
  40dd83:	je     0x40dd5f
  40dd85:	cmp    ebx,DWORD PTR [edx]
  40dd87:	jnp    0x40dd85
  40dd89:	cmp    al,BYTE PTR [eax+0x2]
  40dd8c:	ret    0x391f
  40dd8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd90:	jge    0x40de0a
  40dd92:	fisubr WORD PTR [eax-0x17]
  40dd95:	and    al,0xa0
  40dd97:	in     al,0x15
  40dd99:	sbb    ebp,DWORD PTR [edi-0xe83cd64]
  40dd9f:	test   al,dh
  40dda1:	daa    
  40dda2:	mov    dh,0xc5
  40dda4:	lods   al,BYTE PTR fs:[esi]
  40dda6:	xor    al,0x58
  40dda8:	xor    al,bh
  40ddaa:	sbb    ebx,ebp
  40ddac:	out    0x91,eax
  40ddae:	repz jb 0x40dd46
  40ddb1:	scas   al,BYTE PTR es:[edi]
  40ddb2:	iret   
  40ddb3:	dec    esi
  40ddb4:	(bad)  
  40ddb5:	push   ss
  40ddb6:	ins    BYTE PTR es:[edi],dx
  40ddb7:	popa   
  40ddb8:	(bad)  
  40ddb9:	ins    DWORD PTR es:[edi],dx
  40ddba:	push   edx
  40ddbb:	jb     0x40de2e
  40ddbd:	pusha  
  40ddbe:	mov    bh,BYTE PTR [ebx]
  40ddc0:	add    esp,DWORD PTR [eax+0x2f]
  40ddc3:	out    0x90,al
  40ddc5:	pop    edi
  40ddc6:	dec    ebx
  40ddc7:	call   0x310e0bb1
  40ddcc:	mov    DWORD PTR [eax-0x2c],ecx
  40ddcf:	jp     0x40dd55
  40ddd1:	add    BYTE PTR [edx-0x36],dh
  40ddd4:	or     al,0x39
  40ddd6:	add    eax,0x41fc3b60
  40dddb:	add    al,0x19
  40dddd:	lds    esi,FWORD PTR [ecx]
  40dddf:	rol    DWORD PTR ds:0x30b0eeb4,0xc8
  40dde6:	or     dh,BYTE PTR [edi+eiz*8]
  40dde9:	xor    bh,BYTE PTR [ebp+esi*4-0x2e]
  40dded:	mov    ecx,0xac000eea
  40ddf2:	mov    dl,0x8a
  40ddf4:	int    0x42
  40ddf6:	mov    ch,0x8e
  40ddf8:	xchg   edi,eax
  40ddf9:	enter  0xfd7b,0x86
  40ddfd:	push   0x6c34eef9
  40de02:	scas   eax,DWORD PTR es:[edi]
  40de03:	das    
  40de04:	mov    ecx,0xac8b4159
  40de09:	leave  
  40de0a:	loopne 0x40ddb4
  40de0c:	push   ecx
  40de0d:	push   ecx
  40de0e:	imul   ebx,ebp,0x61
  40de11:	pop    ecx
  40de12:	outs   dx,BYTE PTR ds:[esi]
  40de13:	dec    edi
  40de14:	xor    DWORD PTR [eax+0x4092c5bc],0x3c
  40de1b:	sbb    ah,BYTE PTR [eax-0x80]
  40de1e:	pop    edi
  40de1f:	or     edx,esi
  40de21:	mov    ebp,0x92b9efe8
  40de26:	(bad)  
  40de27:	cmp    al,0xe8
  40de29:	cmp    BYTE PTR [ebx+eax*8-0x2],dl
  40de2d:	pop    ss
  40de2e:	stos   DWORD PTR es:[edi],eax
  40de2f:	xor    ecx,edi
  40de31:	mov    edx,0xd2e965b1
  40de36:	adc    ebx,edi
  40de38:	mov    ah,0x68
  40de3a:	dec    ebx
  40de3b:	std    
  40de3c:	mov    BYTE PTR [edi-0x27860],cl
  40de42:	xchg   BYTE PTR [esi-0x4d2e558f],al
  40de48:	push   ecx
  40de49:	loopne 0x40de0f
  40de4b:	xchg   ecx,eax
  40de4c:	shl    DWORD PTR [ebp+0x1e],cl
  40de4f:	inc    edx
  40de50:	mov    esp,DWORD PTR [eax-0x400aaa9c]
  40de56:	jle    0x40ddeb
  40de58:	dec    edx
  40de59:	xlat   BYTE PTR ds:[ebx]
  40de5a:	pop    eax
  40de5b:	bound  ebx,QWORD PTR [esi-0x41]
  40de5e:	mov    al,0xda
  40de60:	jle    0x40de85
  40de62:	jo     0x40de21
  40de64:	shl    cl,1
  40de66:	ss xor eax,0xd68075ba
  40de6c:	mov    ebp,0x1bd85618
  40de71:	pop    esi
  40de72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de73:	push   ebp
  40de74:	inc    eax
  40de75:	je     0x40de43
  40de77:	dec    esi
  40de78:	test   eax,0x52fdad6b
  40de7d:	sub    al,0x40
  40de7f:	xchg   esp,eax
  40de80:	cmp    al,0xed
  40de82:	mov    edx,0x3cf7fceb
  40de87:	repz sbb DWORD PTR [edx-0x16],ebp
  40de8b:	mov    ds,WORD PTR ss:[ecx]
  40de8e:	fdivr  st(5),st
  40de90:	add    al,0x73
  40de92:	mov    al,ds:0xfb8fbd8
  40de97:	sahf   
  40de98:	sub    al,dh
  40de9a:	mov    eax,0x117dd421
  40de9f:	xor    dl,BYTE PTR [edx]
  40dea1:	push   ss
  40dea2:	add    BYTE PTR [esi],ch
  40dea4:	popf   
  40dea5:	and    eax,0xa1ad91b
  40deaa:	xor    esi,DWORD PTR [ecx+edi*8+0x35]
  40deae:	xor    edi,0xffffffff
  40deb1:	pop    ebp
  40deb2:	adc    eax,0x6f52782d
  40deb7:	cmp    dh,BYTE PTR [eax-0x25]
  40deba:	pop    ebp
  40debb:	sub    DWORD PTR [edi+0x7c],0xffffff85
  40debf:	repnz cmp eax,DWORD PTR [eax]
  40dec2:	imul   ecx,DWORD PTR [eax-0x4dc3c136],0x18fd6348
  40decc:	sti    
  40decd:	adc    ebp,esp
  40decf:	xor    dl,BYTE PTR [edi]
  40ded1:	shl    BYTE PTR [eax-0x60decb2c],1
  40ded7:	mov    BYTE PTR [edi+ecx*4],bh
  40deda:	push   di
  40dedc:	pusha  
  40dedd:	jne    0x40df15
  40dedf:	test   ch,dl
  40dee1:	pop    edx
  40dee2:	cmc    
  40dee3:	jg     0x40deb1
  40dee5:	sub    al,0x91
  40dee7:	pop    edx
  40dee8:	pushw  0xffd8
  40deeb:	mov    ds:0x8dd5706b,al
  40def0:	ss pop eax
  40def2:	jge    0x40df46
  40def4:	out    0xdc,al
  40def6:	push   edi
  40def7:	dec    ebx
  40def8:	fidivr WORD PTR [ebx+0x30]
  40defb:	pop    ds
  40defc:	mov    esi,0x7784d2e0
  40df01:	ret    0xbd58
  40df04:	or     esi,DWORD PTR [ebx-0x61]
  40df07:	pop    ebx
  40df08:	int3   
  40df09:	mov    dl,0xd4
  40df0b:	jecxz  0x40df0c
  40df0d:	or     al,bh
  40df0f:	fcomp  QWORD PTR [esi+0x7a]
  40df12:	jb     0x40df5d
  40df14:	hlt    
  40df15:	add    DWORD PTR [ecx+esi*4],0xffffffb8
  40df19:	pop    eax
  40df1a:	data16 (bad) 
  40df1c:	push   eax
  40df1d:	cs call 0x15b1252b
  40df23:	jge    0x40df63
  40df25:	gs call 0x84ca:0xd4f82e1d
  40df2d:	lods   al,BYTE PTR ds:[esi]
  40df2e:	dec    esp
  40df2f:	sub    edi,DWORD PTR [esi+0x9]
  40df32:	lock jmp DWORD PTR [esi+0x26]
  40df36:	jno    0x40defb
  40df38:	sbb    al,0x55
  40df3a:	adc    dl,BYTE PTR ds:0x3cbddc83
  40df40:	pop    ss
  40df41:	ficom  WORD PTR es:[ebx+0x71]
  40df45:	sbb    ebx,DWORD PTR [ebx]
  40df47:	adc    edx,DWORD PTR [eax-0x3023dc61]
  40df4d:	mov    dh,BYTE PTR [edx]
  40df4f:	push   cs
  40df50:	jl     0x40df09
  40df52:	test   al,0xe3
  40df54:	dec    ecx
  40df55:	add    dl,ah
  40df57:	out    dx,eax
  40df58:	xchg   esi,eax
  40df59:	inc    BYTE PTR [esi+ecx*8+0x2a]
  40df5d:	push   esp
  40df5e:	push   eax
  40df5f:	inc    eax
  40df60:	(bad)  
  40df61:	inc    ecx
  40df62:	ins    DWORD PTR es:[edi],dx
  40df63:	std    
  40df64:	ret    0xfbd2
  40df67:	push   ecx
  40df68:	fidivr DWORD PTR [edi+0xd]
  40df6b:	repz jle 0x40dfc1
  40df6e:	and    ebp,DWORD PTR ds:0xed8c277d
  40df74:	adc    eax,0xdafea4a1
  40df7a:	out    dx,eax
  40df7b:	inc    edx
  40df7c:	pop    ss
  40df7d:	popa   
  40df7e:	loopne 0x40df8e
  40df80:	in     al,dx
  40df81:	mov    ecx,edi
  40df83:	jge    0x40dfda
  40df85:	pop    ebp
  40df86:	sub    DWORD PTR [eax],ebp
  40df88:	mov    bh,0xac
  40df8a:	in     eax,dx
  40df8b:	bound  esp,QWORD PTR [ebp-0x710a382d]
  40df91:	daa    
  40df92:	scas   al,BYTE PTR es:[edi]
  40df93:	daa    
  40df94:	ficom  DWORD PTR [ebx]
  40df96:	xor    edx,DWORD PTR [ebx+0xab8a18e]
  40df9c:	mov    edx,esp
  40df9e:	shl    DWORD PTR [esi+0x46],cl
  40dfa1:	scas   al,BYTE PTR es:[edi]
  40dfa2:	add    DWORD PTR ds:0x770d3465,ebx
  40dfa8:	dec    edx
  40dfa9:	jbe    0x40df76
  40dfab:	sbb    BYTE PTR [eax+0x1b],cl
  40dfae:	pop    esi
  40dfaf:	cmp    eax,0x46058cca
  40dfb4:	xor    bh,BYTE PTR [esi-0x63]
  40dfb7:	inc    ecx
  40dfb8:	mov    al,0x1a
  40dfba:	dec    ebp
  40dfbb:	lea    edx,[edx+esi*2-0x72]
  40dfbf:	lods   al,BYTE PTR ds:[esi]
  40dfc0:	jnp    0x40df54
  40dfc2:	dec    ecx
  40dfc3:	loopne 0x40dfeb
  40dfc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfc6:	fld    DWORD PTR [ecx]
  40dfc8:	xchg   esp,eax
  40dfc9:	sbb    BYTE PTR [eax+0x7a],bh
  40dfcc:	popa   
  40dfcd:	daa    
  40dfce:	sar    DWORD PTR [edi],cl
  40dfd0:	scas   al,BYTE PTR es:[edi]
  40dfd1:	pop    ebp
  40dfd2:	xchg   edx,eax
  40dfd3:	jmp    0x5cbe:0xd7e0ab7a
  40dfda:	fimul  WORD PTR [ecx+0x74702d56]
  40dfe0:	jecxz  0x40df67
  40dfe2:	dec    BYTE PTR [ecx-0x2cf5467b]
  40dfe8:	call   0x71fce41b
  40dfed:	aas    
  40dfee:	rol    DWORD PTR [esi*8+0x3a3183e0],1
  40dff5:	cmp    al,dl
  40dff7:	pop    ds
  40dff8:	push   ds
  40dff9:	retf   
  40dffa:	fwait
  40dffb:	out    0xd8,al
  40dffd:	jb     0x40e01f
  40dfff:	ins    DWORD PTR es:[edi],dx
  40e000:	ins    DWORD PTR es:[edi],dx
  40e001:	imul   ebp,esi,0x2a
  40e004:	lods   eax,DWORD PTR ds:[esi]
  40e005:	fst    DWORD PTR [edi]
  40e007:	adc    al,0x3c
  40e009:	xor    esi,DWORD PTR [esi+0x44]
  40e00c:	scas   al,BYTE PTR es:[edi]
  40e00d:	fadd   DWORD PTR [esi-0x74]
  40e010:	xor    al,0x1b
  40e012:	cmp    al,0xbf
  40e014:	les    edi,FWORD PTR [ebp+edi*8+0x2e]
  40e018:	ja     0x40e081
  40e01a:	sbb    esi,edx
  40e01c:	(bad)  
  40e01d:	fwait
  40e01e:	test   DWORD PTR [ebx+eiz*2],edi
  40e021:	outs   dx,BYTE PTR ds:[esi]
  40e022:	call   0x18fe6131
  40e027:	dec    ebp
  40e028:	daa    
  40e029:	inc    edx
  40e02a:	fmul   st,st(0)
  40e02c:	outs   dx,BYTE PTR ds:[esi]
  40e02d:	inc    edx
  40e02e:	dec    esp
  40e02f:	fcmovu st,st(0)
  40e031:	mov    al,ds:0xc2821908
  40e036:	cmp    al,0xcd
  40e038:	(bad)
  40e03b:	sub    bh,0x3f
  40e03e:	xchg   ebp,eax
  40e03f:	mov    ecx,ebx
  40e041:	push   ecx
  40e042:	sub    BYTE PTR [esi+0x49a1d265],ah
  40e048:	cwde   
  40e049:	dec    ecx
  40e04a:	in     eax,0xbb
  40e04c:	test   DWORD PTR [ebx-0x23],ecx
  40e04f:	mov    al,ds:0x27a0822b
  40e054:	je     0x40dfef
  40e056:	fcom   DWORD PTR [ecx+0x7f]
  40e059:	loop   0x40e091
  40e05b:	shr    DWORD PTR [eax],cl
  40e05d:	inc    eax
  40e05e:	dec    esp
  40e05f:	cmp    al,0xb2
  40e061:	stos   BYTE PTR es:[edi],al
  40e062:	repz xchg ebx,eax
  40e064:	sar    BYTE PTR [edi-0x45],0xcf
  40e068:	inc    esp
  40e069:	xchg   ebp,eax
  40e06a:	dec    edi
  40e06b:	mov    eax,ds:0x14b7c890
  40e070:	pop    es
  40e071:	and    ch,bh
  40e073:	daa    
  40e074:	or     eax,esi
  40e076:	movntq QWORD PTR [ecx+0x5d5b386f],mm6
  40e07d:	stc    
  40e07e:	cmp    edx,DWORD PTR [eax-0x54e26f61]
  40e084:	adc    eax,0x80032168
  40e089:	(bad)  
  40e08a:	xchg   edi,eax
  40e08b:	dec    ebx
  40e08c:	mov    esp,0x5949ec93
  40e091:	shr    BYTE PTR [esi+eax*8-0x60b0601f],cl
  40e098:	add    eax,0x5d3e2ae9
  40e09d:	mov    al,0xda
  40e09f:	sub    ebx,DWORD PTR [ebx-0x1]
  40e0a2:	clc    
  40e0a3:	inc    edx
  40e0a4:	pop    ebp
  40e0a5:	inc    ecx
  40e0a6:	xchg   ebx,eax
  40e0a7:	ins    BYTE PTR es:[edi],dx
  40e0a8:	sub    BYTE PTR [edx],ch
  40e0aa:	sbb    al,0x88
  40e0ac:	fisubr DWORD PTR [edi+0x35504fdb]
  40e0b2:	cdq    
  40e0b3:	shr    BYTE PTR ds:0x3cf26e14,1
  40e0b9:	stos   DWORD PTR es:[edi],eax
  40e0ba:	xchg   esp,eax
  40e0bb:	fs je  0x40e112
  40e0be:	inc    ebx
  40e0bf:	or     al,0x72
  40e0c1:	inc    edx
  40e0c2:	scas   eax,DWORD PTR es:[edi]
  40e0c3:	popa   
  40e0c4:	das    
  40e0c5:	lds    ebx,FWORD PTR [edi-0x25d0edce]
  40e0cb:	mov    edx,0xffa4c551
  40e0d0:	cmc    
  40e0d1:	and    DWORD PTR [eax+0x51],eax
  40e0d4:	and    edx,DWORD PTR [edi+0x4146512f]
  40e0da:	mov    edi,0xa16ed8c1
  40e0df:	sub    eax,0xe41b54e9
  40e0e4:	leave  
  40e0e5:	pop    esi
  40e0e6:	daa    
  40e0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0e8:	xchg   ebp,eax
  40e0e9:	imul   edi,DWORD PTR [esi+0x2e00f0a4],0x5dc597e9
  40e0f3:	popa   
  40e0f4:	sub    cl,BYTE PTR [edx]
  40e0f6:	cmp    bl,0x87
  40e0f9:	leave  
  40e0fa:	scas   eax,DWORD PTR es:[edi]
  40e0fb:	push   esi
  40e0fc:	test   al,0x9a
  40e0fe:	test   DWORD PTR [ecx+ecx*1+0x6ba3e300],eax
  40e105:	enter  0x25ad,0x5a
  40e109:	call   FWORD PTR [ecx-0xe]
  40e10c:	popf   
  40e10d:	outs   dx,BYTE PTR ds:[esi]
  40e10e:	inc    ebp
  40e10f:	cmp    ecx,DWORD PTR [eax-0x45]
  40e112:	shr    BYTE PTR [edx+0x13],cl
  40e115:	adc    eax,0x68613928
  40e11a:	lds    esi,FWORD PTR [eax+0x10]
  40e11d:	outs   dx,BYTE PTR ds:[esi]
  40e11e:	pop    ds
  40e11f:	dec    edi
  40e120:	dec    ebx
  40e121:	and    al,0x45
  40e123:	and    eax,DWORD PTR [eax]
  40e125:	dec    BYTE PTR [edx]
  40e127:	(bad)  
  40e128:	xchg   edi,eax
  40e129:	fcomp  QWORD PTR [eax-0x2097da44]
  40e12f:	int3   
  40e130:	outs   dx,DWORD PTR ds:[esi]
  40e131:	and    edx,esp
  40e133:	mov    ds:0xecea8794,al
  40e138:	aam    0x52
  40e13a:	add    al,0x46
  40e13c:	mov    bh,0xd4
  40e13e:	and    DWORD PTR [ecx+0x7ffdf135],eax
  40e144:	test   BYTE PTR [edx],cl
  40e146:	sbb    bl,BYTE PTR [eax]
  40e148:	add    eax,0x993f2a90
  40e14d:	add    BYTE PTR [edx],0x2f
  40e150:	pcmpgtw mm0,mm2
  40e153:	jmp    0x5d8c62c5
  40e158:	stos   BYTE PTR es:[edi],al
  40e159:	mov    ah,0x7f
  40e15b:	jmp    0xb9d66876
  40e160:	nop
  40e161:	mov    ds:0xbdccaacc,eax
  40e166:	retf   
  40e167:	cmp    eax,0x7161f56f
  40e16c:	pop    ds
  40e16d:	xor    DWORD PTR [esi+0x5f873cb],ecx
  40e173:	push   esp
  40e174:	dec    eax
  40e175:	(bad)  
  40e176:	stc    
  40e177:	dec    ebx
  40e178:	fdivp  st(5),st
  40e17a:	jecxz  0x40e15a
  40e17c:	adc    eax,0xe931d882
  40e181:	aad    0x3e
  40e183:	jmp    0x40e1e0
  40e185:	leave  
  40e186:	cdq    
  40e187:	pop    es
  40e188:	(bad)  
  40e189:	mov    dh,0xf5
  40e18b:	into   
  40e18c:	mov    dh,0x5
  40e18e:	mov    eax,ds:0x2bd37959
  40e193:	or     ch,bl
  40e195:	sbb    BYTE PTR [eax+0x18],cl
  40e198:	lock out 0x33,al
  40e19b:	mov    eax,ds:0xeb542295
  40e1a0:	xchg   ebx,eax
  40e1a1:	(bad)  
  40e1a2:	arpl   WORD PTR [esi+0xd],di
  40e1a5:	mov    ch,0x9d
  40e1a7:	and    DWORD PTR [ebx-0x70afa7b3],edi
  40e1ad:	outs   dx,BYTE PTR ds:[esi]
  40e1ae:	ror    BYTE PTR [ecx-0x7e],1
  40e1b1:	pop    esp
  40e1b2:	cmp    ch,BYTE PTR [edx+0x24]
  40e1b5:	(bad)  
  40e1b6:	mov    ecx,0x14b57983
  40e1bb:	mov    al,0xd2
  40e1bd:	pop    es
  40e1be:	lds    ebp,FWORD PTR [ebx-0x2b]
  40e1c1:	push   0xffffffd2
  40e1c3:	or     DWORD PTR [edi],edi
  40e1c5:	pop    eax
  40e1c6:	test   DWORD PTR [esi+0x65],0x9119e3ea
  40e1cd:	adc    bh,BYTE PTR [ebx+0x24951339]
  40e1d3:	dec    ecx
  40e1d4:	mov    ah,0x64
  40e1d6:	mov    ss,WORD PTR [eax+0x392ce2bc]
  40e1dc:	mov    al,0x54
  40e1de:	mov    edx,0x6998a45c
  40e1e3:	jmp    0x26ff4
  40e1e8:	jmp    0x80a3:0xbdaa47f4
  40e1ef:	nop
  40e1f0:	push   es
  40e1f1:	mov    ebx,0x58849ad3
  40e1f6:	nop
  40e1f7:	push   edx
  40e1f8:	mov    ds:0x459dba3f,al
  40e1fd:	mov    BYTE PTR [edx],ah
  40e1ff:	stc    
  40e200:	dec    ecx
  40e201:	pop    esp
  40e202:	aam    0xd4
  40e204:	mov    ch,0x54
  40e206:	dec    eax
  40e207:	add    BYTE PTR [edi+0x4b],dh
  40e20a:	dec    edi
  40e20b:	scas   al,BYTE PTR es:[edi]
  40e20c:	cmp    BYTE PTR [edi-0x2d5a9a39],ch
  40e212:	test   al,0x57
  40e214:	push   0x59
  40e216:	out    dx,eax
  40e217:	mov    ecx,0xa6b9e05f
  40e21c:	rcr    BYTE PTR [ebx],cl
  40e21e:	dec    esi
  40e21f:	mov    eax,0xfaa292de
  40e224:	cmc    
  40e225:	aaa    
  40e226:	dec    esp
  40e227:	dec    edx
  40e228:	mov    eax,DWORD PTR [eax]
  40e22a:	sbb    ah,al
  40e22c:	push   ecx
  40e22d:	dec    esp
  40e22e:	pop    es
  40e22f:	pushf  
  40e230:	jle    0x40e219
  40e232:	ret    
  40e233:	pop    eax
  40e234:	(bad)  
  40e236:	rol    DWORD PTR [ebx],cl
  40e238:	push   ds
  40e239:	mov    ebx,0x9f5a1b03
  40e23f:	or     dh,BYTE PTR [esi+0xff548cb]
  40e245:	inc    ebp
  40e246:	pop    eax
  40e247:	fwait
  40e248:	(bad)  
  40e249:	out    0xa8,eax
  40e24b:	add    DWORD PTR [edx+0x18c9a692],edx
  40e251:	out    0x32,al
  40e253:	sub    dh,BYTE PTR [ecx]
  40e255:	popf   
  40e256:	or     DWORD PTR ds:0x2426afc7,eax
  40e25c:	mov    ds:0xdd90bfea,al
  40e261:	(bad)  
  40e262:	shl    DWORD PTR [esi+0x31],cl
  40e265:	sahf   
  40e266:	test   al,0xb5
  40e268:	pop    ebp
  40e269:	ins    BYTE PTR es:[edi],dx
  40e26a:	fld    DWORD PTR [esp+ecx*8-0x6f]
  40e26e:	mov    ah,0x41
  40e270:	inc    eax
  40e271:	mov    dh,0x67
  40e273:	or     edi,DWORD PTR [esp+edx*4+0x4f0b24d1]
  40e27a:	stos   BYTE PTR es:[edi],al
  40e27b:	mov    ah,0x7f
  40e27d:	out    dx,al
  40e27e:	sub    eax,0x4b24006f
  40e283:	lahf   
  40e284:	btr    edx,ebp
  40e287:	test   eax,0x70afe6d4
  40e28c:	mov    ch,0x9d
  40e28e:	push   esi
  40e28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e290:	push   esi
  40e291:	cdq    
  40e292:	shr    BYTE PTR [ebp-0x65b524d2],cl
  40e298:	and    BYTE PTR [ebx-0x40],cl
  40e29b:	pop    ss
  40e29c:	daa    
  40e29d:	cdq    
  40e29e:	imul   edi,DWORD PTR [esi+0x4c],0xaa41a85a
  40e2a5:	outs   dx,BYTE PTR ds:[esi]
  40e2a6:	xor    DWORD PTR [esi],edx
  40e2a8:	in     eax,dx
  40e2a9:	or     al,0x48
  40e2ab:	jmpw   0x2b
  40e2af:	mov    edi,0x891df9f8
  40e2b4:	mov    ecx,DWORD PTR [edi+0x7aaf3b1e]
  40e2ba:	loope  0x40e2a0
  40e2bc:	xchg   edx,eax
  40e2bd:	es popa 
  40e2bf:	jl     0x40e245
  40e2c1:	xchg   ebx,eax
  40e2c2:	rcl    DWORD PTR [esi-0x2f],0x2f
  40e2c6:	xor    DWORD PTR [ebp+0x4e],ebp
  40e2c9:	jl     0x40e266
  40e2cb:	xchg   edi,eax
  40e2cc:	dec    ecx
  40e2cd:	pop    esp
  40e2ce:	or     edi,DWORD PTR [esi]
  40e2d0:	xlat   BYTE PTR ds:[ebx]
  40e2d1:	cwde   
  40e2d2:	clc    
  40e2d3:	dec    ebx
  40e2d4:	xor    DWORD PTR [ecx+0x2d],0x29
  40e2d8:	out    dx,eax
  40e2d9:	pop    edi
  40e2da:	call   0x70a:0xd2d8e104
  40e2e1:	pop    esp
  40e2e2:	in     al,dx
  40e2e3:	test   eax,0x501a3856
  40e2e8:	add    esp,DWORD PTR [esi]
  40e2ea:	ror    BYTE PTR [edi-0x5f10c3e2],cl
  40e2f0:	push   esp
  40e2f1:	xchg   dh,dl
  40e2f3:	ret    0xd988
  40e2f6:	pop    ds
  40e2f7:	jecxz  0x40e2b8
  40e2f9:	cmc    
  40e2fa:	or     ebp,ebp
  40e2fc:	sub    ebx,DWORD PTR [ebp-0x7e]
  40e2ff:	js     0x40e2f8
  40e301:	jecxz  0x40e2fe
  40e303:	lds    eax,FWORD PTR [ecx]
  40e305:	jae    0xd76cd5c6
  40e30b:	sub    DWORD PTR [ecx+esi*1+0x4799b58b],0xfffffffd
  40e313:	and    ax,0x9d4f
  40e317:	add    eax,0xcc85bb80
  40e31c:	push   cs
  40e31d:	inc    ebx
  40e31e:	sbb    esp,DWORD PTR [ecx+0x27]
  40e321:	je     0x40e332
  40e323:	ret    
  40e324:	xor    BYTE PTR ds:0x77be1f2f,cl
  40e32a:	sub    bh,cl
  40e32c:	jb     0x40e318
  40e32e:	cmc    
  40e32f:	sub    eax,DWORD PTR [esi]
  40e331:	inc    eax
  40e332:	jge    0x40e358
  40e334:	adc    al,0x2d
  40e336:	or     BYTE PTR [esi+0xbb19237],0xd5
  40e33d:	xor    al,0x77
  40e33f:	inc    edx
  40e340:	or     esp,edi
  40e342:	inc    esi
  40e343:	fdiv   QWORD PTR [eax-0x1c998102]
  40e349:	jl     0x40e348
  40e34b:	ins    BYTE PTR es:[edi],dx
  40e34c:	aas    
  40e34d:	rol    DWORD PTR [edi-0x6c],0x8
  40e351:	(bad)  
  40e352:	mov    ss,edx
  40e354:	xchg   ebp,eax
  40e355:	cmp    ecx,DWORD PTR [edx-0x713247ed]
  40e35b:	scas   eax,DWORD PTR es:[edi]
  40e35c:	xsaves [esi-0x610cd4df]
  40e363:	aad    0x3e
  40e365:	ja     0x40e3d9
  40e367:	daa    
  40e368:	imul   esp,edx,0x3c01392a
  40e36e:	or     eax,0x41254061
  40e373:	into   
  40e374:	fstp   DWORD PTR [ecx-0x4999155e]
  40e37a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e37b:	xor    al,0x93
  40e37d:	adc    DWORD PTR [ebp+eiz*8+0x43],0x5d9e825f
  40e385:	cmp    eax,0xf0bdcbef
  40e38a:	sbb    dl,BYTE PTR [eax+0x40124830]
  40e390:	mov    esp,0x918c4de1
  40e395:	mov    dl,0xc6
  40e397:	(bad)  
  40e398:	int    0x2c
  40e39a:	add    DWORD PTR [eax],0xc6a8e8f2
  40e3a0:	nop
  40e3a1:	adc    BYTE PTR [edi+0x1b25453e],al
  40e3a7:	jg     0x40e423
  40e3a9:	test   BYTE PTR [ebp-0x6e],bh
  40e3ac:	inc    esi
  40e3ad:	inc    edx
  40e3ae:	imul   eax,DWORD PTR [edx-0xbdb0591],0x5efaa41a
  40e3b8:	inc    ebx
  40e3b9:	inc    edi
  40e3ba:	mov    ebx,0x55294444
  40e3bf:	aaa    
  40e3c0:	(bad)  [edi]
  40e3c2:	and    dh,ah
  40e3c4:	pop    ecx
  40e3c5:	cdq    
  40e3c6:	sahf   
  40e3c7:	pusha  
  40e3c8:	aas    
  40e3c9:	pop    es
  40e3ca:	leave  
  40e3cb:	mov    ch,0x78
  40e3cd:	mov    bl,0x15
  40e3cf:	ds ret 0x8e5f
  40e3d3:	mov    ds:0xf70ea7dd,al
  40e3d8:	push   ecx
  40e3d9:	cmp    BYTE PTR [eax-0x6f],bh
  40e3dc:	add    eax,0xceaea443
  40e3e1:	lock ds inc eax
  40e3e4:	mov    ah,0xe1
  40e3e6:	repz out dx,al
  40e3e8:	popf   
  40e3e9:	loopne 0x40e3cc
  40e3eb:	cmp    al,0x49
  40e3ed:	xchg   ebx,eax
  40e3ee:	es std 
  40e3f0:	jg     0x40e450
  40e3f2:	in     al,0x94
  40e3f4:	cmp    bl,BYTE PTR [edi+ebp*2-0xe]
  40e3f8:	push   cs
  40e3f9:	stos   BYTE PTR es:[edi],al
  40e3fa:	adc    eax,0x25e300e5
  40e3ff:	loop   0x40e42f
  40e401:	add    eax,0x1b7800d6
  40e406:	inc    esi
  40e407:	shl    bl,1
  40e409:	lahf   
  40e40a:	inc    edi
  40e40b:	mov    dl,0x84
  40e40d:	fwait
  40e40e:	in     al,0x4
  40e410:	shl    BYTE PTR [eax-0x34],0x15
  40e414:	stos   BYTE PTR es:[edi],al
  40e415:	or     DWORD PTR [ecx],edx
  40e417:	loope  0x40e3f6
  40e419:	mov    ebx,0x9474288f
  40e41e:	mov    edx,0xe2089014
  40e423:	xlat   BYTE PTR ds:[ebx]
  40e424:	push   cs
  40e425:	add    al,0x4
  40e427:	scas   al,BYTE PTR es:[edi]
  40e428:	(bad)  
  40e429:	bndldx bnd2,[edi+0x4e5f9fd]
  40e430:	push   eax
  40e431:	mov    bl,0x42
  40e433:	cmp    al,0xa8
  40e435:	not    ah
  40e437:	test   al,0x91
  40e439:	loope  0x40e43d
  40e43b:	add    DWORD PTR [ebx-0x47],esp
  40e43e:	out    0xda,al
  40e440:	mov    dl,0xb1
  40e442:	ret    0x77b4
  40e445:	stc    
  40e446:	and    DWORD PTR [esi-0x6d],esi
  40e449:	pop    es
  40e44a:	xchg   BYTE PTR [edx-0x18eadec4],cl
  40e450:	adc    al,0x1c
  40e452:	shl    eax,cl
  40e454:	jle    0x40e406
  40e456:	mov    esi,0x2ca984be
  40e45b:	test   BYTE PTR [eax],0x51
  40e45e:	popf   
  40e45f:	sbb    ch,ch
  40e461:	sbb    BYTE PTR [ecx+ecx*8-0x5e],cl
  40e465:	js     0x40e4ad
  40e467:	icebp  
  40e468:	mov    eax,ds:0x98e941e
  40e46d:	cs pop edi
  40e46f:	and    al,0x1b
  40e471:	sub    edx,DWORD PTR [ebp+0x36]
  40e474:	aad    0xe5
  40e476:	shl    BYTE PTR [edi-0x44],1
  40e479:	test   BYTE PTR [ebp+0x35a934f8],bh
  40e47f:	add    BYTE PTR [edi-0x5b],bh
  40e482:	or     edi,ebx
  40e484:	jle    0x40e4c7
  40e486:	bound  ebx,QWORD PTR [eax]
  40e488:	scas   eax,DWORD PTR es:[edi]
  40e489:	lods   al,BYTE PTR ds:[esi]
  40e48a:	sbb    eax,DWORD PTR [esi-0x3b]
  40e48d:	inc    ebx
  40e48e:	cwde   
  40e48f:	xor    bh,al
  40e491:	mov    eax,0x7e900c1d
  40e496:	cmp    edx,DWORD PTR [esi-0x731a2e87]
  40e49c:	scas   eax,DWORD PTR es:[edi]
  40e49d:	or     ah,ah
  40e49f:	mov    ebx,0x8d899ff7
  40e4a4:	xchg   ebp,eax
  40e4a5:	adc    dh,0x77
  40e4a8:	in     eax,dx
  40e4a9:	retf   
  40e4aa:	fs stc 
  40e4ac:	push   ebp
  40e4ad:	and    BYTE PTR [edi+0x5d],al
  40e4b0:	inc    ebx
  40e4b1:	in     al,0xb7
  40e4b3:	mov    ds:0x30360953,al
  40e4b8:	inc    ebp
  40e4b9:	(bad)  
  40e4ba:	push   esi
  40e4bb:	jge    0x40e4f5
  40e4bd:	mov    WORD PTR [ecx+0x311c4c43],fs
  40e4c3:	add    eax,0xbf36b85e
  40e4c8:	outs   dx,DWORD PTR ds:[esi]
  40e4c9:	je     0x40e4ad
  40e4cb:	cmp    BYTE PTR [edx-0x3d],0x48
  40e4cf:	adc    ch,bl
  40e4d1:	mov    ebp,0xaae7cb71
  40e4d6:	mov    ebx,0xcc4995da
  40e4db:	aad    0x65
  40e4dd:	sar    BYTE PTR [esi],cl
  40e4df:	and    al,0xa1
  40e4e1:	jns    0x40e536
  40e4e3:	xor    eax,0x556b15a4
  40e4e8:	(bad)  
  40e4e9:	push   ebx
  40e4eb:	leave  
  40e4ec:	fcmovu st,st(1)
  40e4ee:	xchg   ecx,eax
  40e4ef:	out    0x17,eax
  40e4f1:	jae    0x40e52e
  40e4f3:	ja     0x40e538
  40e4f5:	cmc    
  40e4f6:	xor    bh,cl
  40e4f8:	mov    esp,0xc97e827c
  40e4fd:	sbb    DWORD PTR [ebp-0x48],0x9416a163
  40e504:	fist   WORD PTR [edx+0x4b9377a]
  40e50a:	(bad)  
  40e50c:	push   esp
  40e50d:	je     0x40e515
  40e50f:	in     al,0xb0
  40e511:	cmp    DWORD PTR [esi+eax*8-0x67],ebp
  40e515:	jae    0x40e548
  40e517:	retf   0x99b8
  40e51a:	mov    BYTE PTR [esi+0x53772c97],ah
  40e520:	push   ss
  40e521:	sub    BYTE PTR [ecx-0xe7750a1],0x4
  40e528:	adc    eax,0x9645c2f3
  40e52d:	lds    ebx,FWORD PTR [edi]
  40e52f:	fwait
  40e530:	jb     0x40e54f
  40e532:	gs (bad) 
  40e534:	sar    BYTE PTR [edi+0x61],cl
  40e537:	sub    esp,DWORD PTR [ecx+edx*2]
  40e53a:	pushf  
  40e53b:	jmp    0x40e55e
  40e53d:	xor    al,0xf2
  40e53f:	aas    
  40e540:	push   esi
  40e541:	jne    0x40e59f
  40e543:	les    edi,FWORD PTR [eax]
  40e545:	jb     0x40e580
  40e547:	pop    ebx
  40e548:	enter  0x3935,0x6c
  40e54c:	imul   DWORD PTR [ecx-0x31]
  40e54f:	iret   
  40e550:	je     0x40e516
  40e552:	std    
  40e553:	outs   dx,DWORD PTR ds:[esi]
  40e554:	push   ss
  40e555:	dec    edx
  40e556:	shl    ah,0x6f
  40e559:	mov    eax,ds:0x29381187
  40e55e:	add    dh,dh
  40e560:	in     eax,0x92
  40e562:	loope  0x40e556
  40e564:	dec    esi
  40e565:	jge    0x40e519
  40e567:	ja     0x40e56d
  40e569:	stos   DWORD PTR es:[edi],eax
  40e56a:	xor    eax,0x4d39e9ec
  40e56f:	mov    al,0x77
  40e571:	add    eax,0xe90cca65
  40e576:	cli    
  40e577:	test   BYTE PTR [esi-0x57],al
  40e57a:	ret    0x4a55
  40e57d:	cld    
  40e57e:	cmp    cl,BYTE PTR [ebx]
  40e580:	sar    BYTE PTR [edi+0x4c9a6c7a],0xa
  40e587:	outs   dx,BYTE PTR ds:[esi]
  40e588:	cdq    
  40e589:	mov    edx,DWORD PTR [edx]
  40e58b:	add    bh,0xc1
  40e58e:	mov    WORD PTR [edi],ss
  40e590:	or     cl,cl
  40e592:	cs es out dx,al
  40e595:	sbb    BYTE PTR [ebx],0xac
  40e598:	data16 in al,0x85
  40e59b:	ins    DWORD PTR es:[edi],dx
  40e59c:	fild   WORD PTR [edi+ebp*4]
  40e59f:	shr    BYTE PTR [edx+0x6c],1
  40e5a2:	xor    BYTE PTR [esi],bh
  40e5a4:	(bad)  
  40e5a5:	fdiv   QWORD PTR [ebx]
  40e5a7:	hlt    
  40e5a8:	nop
  40e5a9:	call   0x2cde:0x1f3105a
  40e5b0:	mov    fs,esp
  40e5b2:	repz and ebp,DWORD PTR [esp+ebp*2+0x62d94a85]
  40e5ba:	pop    edi
  40e5bb:	mov    bh,BYTE PTR [ebp+0x7b4febac]
  40e5c1:	sbb    eax,0x60041385
  40e5c6:	mov    ecx,0x9143b5b7
  40e5cb:	or     eax,0x68d6f169
  40e5d0:	fbstp  TBYTE PTR [edx-0x58]
  40e5d3:	shl    DWORD PTR [ebp-0x57],1
  40e5d6:	push   esp
  40e5d7:	dec    ebp
  40e5d8:	sub    al,0xf2
  40e5da:	stos   DWORD PTR es:[edi],eax
  40e5db:	jnp    0x40e632
  40e5dd:	retf   
  40e5de:	jmp    0x40e604
  40e5e0:	test   BYTE PTR [edi+0x20],0x4c
  40e5e4:	dec    edx
  40e5e5:	(bad)  [ebx-0x7e]
  40e5e8:	(bad)  
  40e5e9:	cmp    ebp,edi
  40e5eb:	jle    0x40e5c6
  40e5ed:	mov    ebp,0xee28c231
  40e5f2:	lock or BYTE PTR [eax],dh
  40e5f5:	or     eax,0x1b0ac39a
  40e5fa:	jb     0x40e62d
  40e5fc:	ds mov ebx,0x7d8d4ff6
  40e602:	das    
  40e603:	ret    
  40e604:	add    BYTE PTR [esi],ch
  40e606:	xchg   edx,eax
  40e607:	add    edi,ebp
  40e609:	je     0x40e617
  40e60b:	imul   esp,DWORD PTR [eax-0x3b],0x26eea67c
  40e612:	pop    ds
  40e613:	jp     0x40e623
  40e615:	push   ebp
  40e616:	sar    DWORD PTR [edx+0x60],1
  40e619:	adc    ecx,DWORD PTR [ebx]
  40e61b:	cmp    BYTE PTR ds:[esi-0x5f],dh
  40e61f:	fidivr DWORD PTR [ecx-0x6e]
  40e622:	mov    al,0xd6
  40e624:	push   esi
  40e625:	xchg   esp,eax
  40e626:	lock int3 
  40e628:	jns    0x40e67e
  40e62a:	test   eax,0x7a1a615a
  40e62f:	test   al,0x9e
  40e631:	mov    esp,ecx
  40e633:	sub    BYTE PTR [esp+esi*8],bl
  40e636:	pushf  
  40e637:	lods   al,BYTE PTR ds:[esi]
  40e638:	jns    0x40e608
  40e63a:	sbb    ebx,ebx
  40e63c:	cmp    ah,0xb8
  40e63f:	(bad)  
  40e640:	xor    eax,0x993f398
  40e645:	retf   
  40e646:	or     al,0x29
  40e648:	push   edi
  40e649:	xor    edx,edx
  40e64b:	cmp    al,0x40
  40e64d:	aam    0x32
  40e64f:	add    eax,0x48f53d5f
  40e654:	jmp    0x225cbfe0
  40e659:	dec    edi
  40e65a:	xchg   ebx,eax
  40e65b:	retf   0xc103
  40e65e:	adc    DWORD PTR [ebx+0x11],edx
  40e661:	ret    0xdc67
  40e664:	arpl   WORD PTR es:[ebp-0x60398b63],sp
  40e66b:	loop   0x40e665
  40e66d:	bnd jb 0x40e625
  40e670:	(bad)  
  40e671:	jg     0x40e6e2
  40e673:	(bad)  
  40e674:	jmp    0x40e68a
  40e676:	mov    al,ds:0xca3dd795
  40e67b:	dec    esi
  40e67c:	jae    0x40e6f1
  40e67e:	jnp    0x40e606
  40e680:	(bad)  
  40e681:	(bad)  
  40e682:	cmp    DWORD PTR [ebp+0x3a],ebp
  40e685:	scas   al,BYTE PTR es:[edi]
  40e686:	adc    BYTE PTR [esi+ebp*2],cl
  40e689:	mov    ecx,0xfe7b20b
  40e68e:	mov    ebx,0xdf03cd6
  40e693:	test   BYTE PTR [edi+0x31],0xa8
  40e697:	enter  0xde96,0x37
  40e69b:	cmp    BYTE PTR [eax+ecx*2+0x65],al
  40e69f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6a0:	add    al,BYTE PTR [edx-0x54510042]
  40e6a6:	mov    ?,WORD PTR [edx-0x53]
  40e6a9:	out    0x69,al
  40e6ab:	(bad)  
  40e6ac:	mul    DWORD PTR [edx+0x29]
  40e6af:	xor    DWORD PTR [eax],eax
  40e6b1:	cmp    al,0x7d
  40e6b3:	es das 
  40e6b5:	sar    dl,0x94
  40e6b8:	pop    edi
  40e6b9:	stos   BYTE PTR es:[edi],al
  40e6ba:	lds    edx,FWORD PTR [ebx+0x560a4f5]
  40e6c0:	aam    0x9c
  40e6c2:	xchg   edi,eax
  40e6c3:	retf   0xf80c
  40e6c6:	call   0x2aa1e750
  40e6cb:	push   ecx
  40e6cc:	push   edx
  40e6cd:	sar    BYTE PTR [ebp-0x7e],cl
  40e6d0:	mov    cl,ch
  40e6d2:	out    dx,al
  40e6d3:	add    BYTE PTR [eax],bh
  40e6d5:	and    eax,0xa8ebcc41
  40e6da:	and    eax,DWORD PTR [edx+0x13]
  40e6dd:	or     ecx,DWORD PTR [edx+0x28]
  40e6e0:	pop    ss
  40e6e1:	imul   edi,esp,0x1aaa28c3
  40e6e7:	jbe    0x40e6a8
  40e6e9:	jns    0x40e6aa
  40e6eb:	jbe    0x40e67d
  40e6ed:	leave  
  40e6ee:	fidivr DWORD PTR [esi]
  40e6f0:	in     eax,dx
  40e6f1:	add    BYTE PTR [eax-0x627cce43],dh
  40e6f7:	mov    BYTE PTR [esp+esi*1],cl
  40e6fa:	pop    ecx
  40e6fb:	jb     0x40e6af
  40e6fd:	mov    ecx,0x52e94890
  40e702:	xchg   DWORD PTR [edi],edi
  40e704:	xor    edi,DWORD PTR [ebx]
  40e706:	pop    esp
  40e707:	icebp  
  40e708:	xchg   ecx,eax
  40e709:	mov    ebp,0xb4fc8f9f
  40e70e:	js     0x40e752
  40e710:	mov    ss,ecx
  40e712:	mov    edx,0x87c5deeb
  40e717:	jmp    0x8afe7511
  40e71c:	cli    
  40e71d:	fs cli 
  40e71f:	push   ebx
  40e720:	push   edx
  40e721:	pop    es
  40e722:	or     eax,0x74eb8553
  40e727:	cmp    ebp,DWORD PTR [ebp+0x52]
  40e72a:	or     eax,0x5f94e713
  40e72f:	dec    edi
  40e730:	or     al,0xb6
  40e732:	xchg   ebp,eax
  40e733:	shl    BYTE PTR [edx-0x5da55544],1
  40e739:	(bad)  
  40e73a:	ss pop ebp
  40e73c:	pop    edi
  40e73d:	sahf   
  40e73e:	(bad)
  40e741:	test   dh,dh
  40e743:	das    
  40e744:	leave  
  40e745:	mov    eax,0xf4dce014
  40e74a:	test   DWORD PTR [edx+ecx*1-0x7],ebp
  40e74e:	and    ecx,DWORD PTR [ebp+0x5e]
  40e751:	ss ins DWORD PTR es:[edi],dx
  40e753:	add    ch,dl
  40e755:	sub    eax,DWORD PTR [edx]
  40e757:	out    0x3e,al
  40e759:	jno    0x40e6ec
  40e75b:	sbb    edx,esi
  40e75d:	jle    0x40e740
  40e75f:	pop    ss
  40e760:	sbb    ch,BYTE PTR [eax-0x35]
  40e763:	test   al,0x37
  40e765:	xchg   esp,eax
  40e766:	dec    esp
  40e767:	inc    ecx
  40e768:	mov    ecx,0xa26bf644
  40e76d:	sbb    esp,ebx
  40e76f:	sub    eax,0xcb1ca3c3
  40e774:	fdivr  st(0),st
  40e776:	inc    ebp
  40e777:	dec    ecx
  40e778:	lahf   
  40e779:	push   ecx
  40e77a:	inc    esi
  40e77b:	das    
  40e77c:	push   ebp
  40e77d:	adc    eax,0xb38d0c00
  40e782:	pop    ecx
  40e783:	sub    al,0x6e
  40e785:	cwde   
  40e786:	cmp    ebp,DWORD PTR [edi]
  40e788:	imul   BYTE PTR [edx+0x53]
  40e78b:	into   
  40e78c:	mov    eax,0x275b744e
  40e791:	jo     0x40e7ad
  40e793:	cmp    dh,BYTE PTR [ebp+0x7f9cccda]
  40e799:	sbb    edi,DWORD PTR es:[ecx+0x1057655c]
  40e7a0:	pushf  
  40e7a1:	mov    fs,edi
  40e7a3:	push   eax
  40e7a4:	mov    ebp,DWORD PTR ds:0x77b13c02
  40e7aa:	push   cs
  40e7ab:	dec    ebx
  40e7ac:	add    esi,DWORD PTR [ecx+ebp*4-0x3c978aac]
  40e7b3:	mov    ds:0x336b687f,al
  40e7b8:	mov    bl,0x55
  40e7ba:	rcr    DWORD PTR [ecx+0x3f341a1d],1
  40e7c0:	popf   
  40e7c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7c2:	scas   eax,DWORD PTR es:[edi]
  40e7c3:	xchg   ecx,eax
  40e7c4:	inc    BYTE PTR [ebp+0x72]
  40e7c7:	or     DWORD PTR [ebp+0x60],esi
  40e7ca:	or     al,0x7f
  40e7cc:	xlat   BYTE PTR ds:[ebx]
  40e7cd:	jnp    0x40e7f9
  40e7cf:	jecxz  0x40e782
  40e7d1:	cmp    al,0x2
  40e7d3:	xchg   esp,eax
  40e7d4:	inc    DWORD PTR [ebx+0xe377ea1]
  40e7da:	lods   al,BYTE PTR ds:[esi]
  40e7db:	and    ebx,edx
  40e7dd:	jo     0x40e79d
  40e7df:	outs   dx,BYTE PTR ds:[esi]
  40e7e0:	add    DWORD PTR [ebx-0x2b],0x418f743d
  40e7e7:	jno    0x40e81b
  40e7e9:	inc    eax
  40e7ea:	shr    DWORD PTR [edx+edi*1-0x72],cl
  40e7ee:	ss je  0x40e78a
  40e7f1:	inc    ebp
  40e7f2:	js     0x40e873
  40e7f4:	mov    edx,0x16d3991b
  40e7f9:	aad    0xf3
  40e7fb:	push   ecx
  40e7fc:	xchg   esp,eax
  40e7fd:	icebp  
  40e7fe:	push   ss
  40e7ff:	jmp    FWORD PTR [edx+0x15bde653]
  40e805:	mov    ecx,0x5ab80bd6
  40e80a:	push   edi
  40e80b:	xchg   esi,eax
  40e80c:	mov    ch,0x62
  40e80e:	dec    BYTE PTR [eax+0x1]
  40e811:	pushf  
  40e812:	sub    cl,BYTE PTR [edx-0x68db2661]
  40e818:	clc    
  40e819:	dec    edx
  40e81a:	dec    ebp
  40e81b:	mov    WORD PTR gs:[edx+0x6180ce39],ss
  40e822:	pop    ds
  40e823:	addr16 inc esp
  40e825:	jle    0x40e892
  40e827:	cmp    al,0xd
  40e829:	imul   edi,DWORD PTR [edx+edx*2],0xb602679f
  40e830:	and    DWORD PTR [ebp+0x6],ebx
  40e833:	xor    al,0xfa
  40e835:	inc    eax
  40e836:	sbb    BYTE PTR [ebx],ch
  40e838:	popa   
  40e839:	adc    al,0x56
  40e83b:	in     al,dx
  40e83c:	lock xchg ebx,eax
  40e83e:	inc    edi
  40e83f:	mov    BYTE PTR [eax-0x31ee716e],ah
  40e845:	dec    ebx
  40e846:	xor    DWORD PTR [esi+0x52],0xffffff90
  40e84a:	jnp    0x40e85a
  40e84c:	out    0x10,al
  40e84e:	in     eax,dx
  40e84f:	mov    esi,0x3e29274b
  40e854:	xor    DWORD PTR [esp+ecx*8],edi
  40e857:	cmp    ch,BYTE PTR [ecx+0x57960710]
  40e85d:	dec    edx
  40e85e:	fs and eax,0xb1ccd013
  40e864:	mov    edi,0x36ce27bf
  40e869:	jge    0x40e80c
  40e86b:	daa    
  40e86c:	jle    0x40e890
  40e86e:	loop   0x40e8bf
  40e870:	or     al,0x9d
  40e872:	iret   
  40e873:	xchg   esi,eax
  40e874:	mov    ?,WORD PTR [ecx-0x2a]
  40e877:	dec    edx
  40e878:	test   al,dh
  40e87a:	add    BYTE PTR [ebp+0x832b9b3],bl
  40e880:	ds (bad) 
  40e882:	mov    bl,0xd3
  40e884:	ror    DWORD PTR [edi+0x1080bd1],0x18
  40e88b:	ins    DWORD PTR es:[edi],dx
  40e88c:	lds    ebp,FWORD PTR [ebp-0xa52b88]
  40e892:	js     0x40e8e6
  40e894:	ret    0x55ca
  40e897:	popf   
  40e898:	iret   
  40e899:	mov    cl,0x10
  40e89b:	(bad)  
  40e89c:	mov    esi,0x62e7396a
  40e8a1:	cmc    
  40e8a2:	not    ecx
  40e8a4:	push   ds
  40e8a5:	jno    0x40e8c2
  40e8a7:	jmp    0x40e856
  40e8a9:	or     BYTE PTR [ebx-0x4c],0xdd
  40e8ad:	(bad)  
  40e8ae:	push   esp
  40e8af:	jbe    0x40e8be
  40e8b1:	test   DWORD PTR [ebp-0x62972c7c],esi
  40e8b7:	pop    edx
  40e8b8:	add    eax,0x315b7e12
  40e8bd:	pop    fs
  40e8bf:	adc    esi,DWORD PTR [ebx]
  40e8c1:	lds    ebx,FWORD PTR [edi-0x37]
  40e8c4:	mov    ebp,0x8237b4ca
  40e8c9:	int3   
  40e8ca:	(bad)  
  40e8cc:	not    BYTE PTR [ecx]
  40e8ce:	adc    DWORD PTR [eax+0x4939170b],edx
  40e8d4:	pop    ss
  40e8d5:	scas   al,BYTE PTR es:[edi]
  40e8d6:	sbb    ecx,ecx
  40e8d8:	mov    DWORD PTR [ebp-0x3467607f],ebp
  40e8de:	add    eax,0x8a21ae22
  40e8e3:	sbb    al,0x52
  40e8e6:	push   0x662fa8bd
  40e8eb:	fistp  QWORD PTR [ecx]
  40e8ed:	push   es
  40e8ee:	lods   eax,DWORD PTR ds:[esi]
  40e8ef:	jns    0x40e941
  40e8f1:	enter  0x12ce,0x54
  40e8f5:	js     0x40e889
  40e8f7:	stos   BYTE PTR es:[edi],al
  40e8f8:	retf   
  40e8f9:	call   0xbdc6706c
  40e8fe:	sbb    eax,0x9e32a7f2
  40e903:	fdivr  QWORD PTR [ebp+0x46]
  40e906:	cmp    eax,0x5577b638
  40e90b:	fidivr DWORD PTR [edi-0x1c]
  40e90e:	call   0xf173:0xd98ad70e
  40e915:	int3   
  40e916:	stos   DWORD PTR es:[edi],eax
  40e917:	fs jbe 0x40e907
  40e91a:	adc    DWORD PTR [ebp-0x34],edx
  40e91d:	std    
  40e91e:	int3   
  40e91f:	fst    QWORD PTR [eax+ebx*4-0x2b070c27]
  40e926:	jmp    0x7d959246
  40e92b:	or     eax,0x3d293d45
  40e930:	mov    bl,bl
  40e932:	dec    edi
  40e933:	and    al,0xf6
  40e935:	dec    ebp
  40e936:	gs ds sbb eax,0x689e7830
  40e93d:	push   0xe0364d79
  40e942:	adc    al,cl
  40e944:	push   0xe9d17819
  40e949:	inc    DWORD PTR ds:[ebx-0x3d41d0]
  40e950:	jno    0x40e9be
  40e952:	je     0x40e8fc
  40e954:	out    0xbc,eax
  40e956:	ret    
  40e957:	mov    ss,WORD PTR [ebx]
  40e959:	jno    0x40e93c
  40e95b:	dec    edi
  40e95c:	(bad)  
  40e95e:	loop   0x40e950
  40e960:	popa   
  40e961:	and    al,0x23
  40e963:	mov    ds,WORD PTR [ecx-0x54]
  40e966:	leave  
  40e967:	inc    ebp
  40e968:	(bad)  
  40e969:	frstor [ebp+0x60]
  40e96c:	push   ecx
  40e96d:	aaa    
  40e96e:	inc    esp
  40e96f:	ins    DWORD PTR es:[edi],dx
  40e970:	inc    edx
  40e971:	sti    
  40e972:	xchg   esi,eax
  40e973:	je     0x40e921
  40e975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e976:	retf   
  40e977:	xor    bh,BYTE PTR ds:0x9dcb570
  40e97d:	imul   edi,esi,0x4a3f5135
  40e983:	vpmuludq ymm4,ymm3,YMMWORD PTR [ebp+eax*2+0x58168137]
  40e98c:	sar    DWORD PTR [edi],0xc8
  40e98f:	dec    ebp
  40e990:	lds    eax,FWORD PTR [edi-0x411fbb5b]
  40e996:	loope  0x40e953
  40e998:	pop    esi
  40e999:	mov    edi,0x34d1ffda
  40e99e:	push   esi
  40e99f:	and    al,dh
  40e9a1:	jg     0x40e9e3
  40e9a3:	daa    
  40e9a4:	cmp    al,0xaa
  40e9a6:	cmp    al,0x2
  40e9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9a9:	adc    al,0x98
  40e9ab:	add    cl,BYTE PTR [eax+0xc]
  40e9ae:	sub    edi,DWORD PTR [ebx+0x532c900c]
  40e9b4:	dec    esi
  40e9b5:	pop    esp
  40e9b6:	shr    DWORD PTR [ecx+0x53],1
  40e9b9:	iret   
  40e9ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9bb:	neg    DWORD PTR [edx-0x5b6f37ed]
  40e9c1:	and    al,0x2f
  40e9c3:	dec    eax
  40e9c4:	mov    ah,0x67
  40e9c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9c7:	mov    dl,BYTE PTR ds:[esi-0x43347862]
  40e9ce:	inc    ebx
  40e9cf:	xchg   ecx,eax
  40e9d0:	push   es
  40e9d1:	jg     0x40e9ae
  40e9d3:	mov    esp,DWORD PTR [edx+0x50d8dd72]
  40e9d9:	jne    0x40e9d1
  40e9db:	sub    esi,0x1e65c698
  40e9e1:	add    esp,DWORD PTR [eax+0x28]
  40e9e4:	(bad)  
  40e9e5:	xor    eax,0xd06f27da
  40e9ea:	lock add al,0x85
  40e9ed:	inc    edx
  40e9ee:	call   0x6a47:0x64f41e2e
  40e9f5:	add    al,0xb5
  40e9f7:	nop
  40e9f8:	pop    ds
  40e9f9:	and    al,0x2f
  40e9fb:	push   ss
  40e9fc:	add    edx,DWORD PTR [ecx+ebx*8+0x77]
  40ea00:	pop    ebp
  40ea01:	(bad)  
  40ea02:	icebp  
  40ea03:	arpl   WORD PTR [edi+0xf],di
  40ea06:	aas    
  40ea07:	scas   eax,DWORD PTR es:[edi]
  40ea08:	jl     0x40e9ad
  40ea0a:	test   BYTE PTR [edx+0x210b59aa],bl
  40ea10:	jbe    0x40e9c6
  40ea12:	push   edx
  40ea13:	jmp    FWORD PTR [esi]
  40ea15:	xchg   ebx,eax
  40ea16:	and    eax,0x50df778a
  40ea1b:	adc    DWORD PTR [eax-0x23],edi
  40ea1e:	clc    
  40ea1f:	sub    ch,BYTE PTR [esi+0x6c]
  40ea22:	int    0x62
  40ea24:	sbb    ch,BYTE PTR [ebp+eiz*4-0x4a0a2029]
  40ea2b:	sbb    eax,0x9d807df2
  40ea30:	push   0xffffff80
  40ea32:	lock imul edx,DWORD PTR [ebp-0x29],0x6f
  40ea37:	(bad)  
  40ea38:	jmp    0x3bb6:0x53109dbf
  40ea3f:	pop    esp
  40ea40:	xchg   ecx,eax
  40ea41:	lock sub al,0x9e
  40ea44:	sbb    al,0x96
  40ea46:	xchg   esi,eax
  40ea47:	push   esp
  40ea48:	adc    esp,DWORD PTR [ecx+edx*8]
  40ea4b:	mov    ebp,0xe5eb2c5
  40ea50:	pop    esp
  40ea51:	cmp    al,0xce
  40ea53:	adc    DWORD PTR [esi],ecx
  40ea55:	ror    DWORD PTR [esi+0x57447350],0x51
  40ea5c:	ins    DWORD PTR es:[edi],dx
  40ea5d:	dec    edx
  40ea5e:	pop    esp
  40ea5f:	push   esp
  40ea60:	push   ecx
  40ea61:	pop    ebx
  40ea62:	shl    eax,0x82
  40ea65:	bound  esi,QWORD PTR [ecx+0x12]
  40ea68:	push   eax
  40ea69:	fxch   st(1)
  40ea6b:	ja     0x40eac8
  40ea6d:	mov    edi,0x58fa1784
  40ea72:	fdivr  DWORD PTR [esi+esi*4-0x1cd0462b]
  40ea79:	shl    BYTE PTR [edi],cl
  40ea7b:	pop    ecx
  40ea7c:	pop    edx
  40ea7d:	adc    bh,BYTE PTR [eax]
  40ea7f:	dec    esp
  40ea80:	fsub   st,st(3)
  40ea82:	mov    ds,WORD PTR [ecx-0x378006d]
  40ea88:	adc    BYTE PTR [ebp-0x83635a2],al
  40ea8e:	and    DWORD PTR [ebx+0x78cfd7bb],edi
  40ea94:	(bad)  
  40ea95:	jl     0x40ea98
  40ea97:	push   edi
  40ea98:	adc    al,0x95
  40ea9a:	xchg   esp,eax
  40ea9b:	adc    BYTE PTR [ecx],ch
  40ea9d:	fcom   st(7)
  40ea9f:	push   cs
  40eaa0:	test   al,0x7f
  40eaa2:	xor    esp,DWORD PTR [ebp+esi*2-0x68]
  40eaa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaa7:	mov    eax,ds:0x397d1b0a
  40eaac:	enter  0x5baa,0x89
  40eab0:	scas   eax,DWORD PTR es:[edi]
  40eab1:	pop    esi
  40eab2:	dec    edi
  40eab3:	push   ds
  40eab4:	sub    BYTE PTR [ecx+ebp*1+0xfb73a1],ah
  40eabb:	jmp    0x15fb:0xbe32d8f0
  40eac2:	ret    0xdfa0
  40eac5:	ret    0xe18e
  40eac8:	xchg   esi,eax
  40eac9:	pop    ecx
  40eaca:	test   eax,0xe9371d
  40eacf:	cwde   
  40ead0:	xor    BYTE PTR [bx+di-0x70],bl
  40ead4:	adc    dl,bh
  40ead6:	mov    edx,0x93bb44c4
  40eadb:	inc    edx
  40eadc:	adc    ecx,DWORD PTR gs:[ebx+eax*4+0x36]
  40eae1:	icebp  
  40eae2:	inc    eax
  40eae3:	add    ebx,DWORD PTR [ebp+0x6]
  40eae6:	and    ebx,esp
  40eae8:	shl    edx,cl
  40eaea:	fstp   DWORD PTR [eax]
  40eaec:	inc    edx
  40eaed:	test   DWORD PTR [edx+0x70],edx
  40eaf0:	je     0x40eac6
  40eaf2:	sbb    eax,0xa65e1b8
  40eaf7:	jmp    0x5e4b:0xaa0b097e
  40eafe:	sar    BYTE PTR [ebx+0x10],cl
  40eb01:	aam    0x32
  40eb03:	mov    ecx,0x7ee39514
  40eb08:	and    DWORD PTR [eax+0x38],esi
  40eb0b:	repz sub edi,DWORD PTR [eax+0x2f]
  40eb0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb10:	(bad)  
  40eb11:	gs iret 
  40eb13:	sub    DWORD PTR [ebx+ebx*2],eax
  40eb16:	jecxz  0x40eac3
  40eb18:	out    0xca,eax
  40eb1a:	cmp    ecx,DWORD PTR [edx]
  40eb1c:	jmp    0x81cb:0x32a37edf
  40eb23:	pop    ebp
  40eb24:	popa   
  40eb25:	jnp    0x40eb15
  40eb27:	sbb    esi,edx
  40eb29:	mov    dh,0xca
  40eb2b:	dec    esp
  40eb2c:	push   ecx
  40eb2d:	minps  xmm2,XMMWORD PTR [ecx+ebp*8]
  40eb31:	or     DWORD PTR [ebx],ebp
  40eb33:	sbb    DWORD PTR [eax+0x21],ebx
  40eb36:	test   DWORD PTR [edx],ecx
  40eb38:	pop    es
  40eb39:	xchg   ebp,eax
  40eb3a:	fsubr  QWORD PTR [ebp-0x15363593]
  40eb40:	jno    0x40eb4a
  40eb42:	or     DWORD PTR [edi+edx*2-0x26],esi
  40eb46:	or     edi,DWORD PTR [ecx+edx*8]
  40eb49:	faddp  st(6),st
  40eb4b:	(bad)  
  40eb4c:	lds    ebx,FWORD PTR [edi-0x550d6d62]
  40eb52:	lods   eax,DWORD PTR ds:[esi]
  40eb53:	int3   
  40eb54:	jge    0x40eaf0
  40eb56:	sbb    eax,0x13a98e8c
  40eb5b:	fild   DWORD PTR [edx+0x56]
  40eb5e:	add    DWORD PTR [ebp-0x4a],esi
  40eb61:	adc    DWORD PTR [ecx],0xfffffffd
  40eb64:	ds adc al,0x1e
  40eb67:	xchg   edi,eax
  40eb68:	push   eax
  40eb69:	pushf  
  40eb6a:	mov    esp,DWORD PTR [edi]
  40eb6c:	push   0x9e0a28d4
  40eb71:	pusha  
  40eb72:	add    eax,0xa4d0e26b
  40eb77:	scas   al,BYTE PTR es:[edi]
  40eb78:	imul   edx,DWORD PTR [edx+0x3bc877e5],0x1
  40eb7f:	nop
  40eb80:	enter  0x6acb,0xdb
  40eb84:	push   ds
  40eb85:	sub    BYTE PTR [esi],0x8f
  40eb88:	mov    ds,esp
  40eb8a:	push   edx
  40eb8b:	leave  
  40eb8c:	push   ecx
  40eb8d:	cmp    esi,eax
  40eb8f:	ret    
  40eb90:	or     eax,ecx
  40eb92:	adc    dh,BYTE PTR [edi+eax*8-0x48]
  40eb96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb97:	or     bh,ch
  40eb99:	dec    esp
  40eb9a:	adc    dl,BYTE PTR [ebx-0x642b9813]
  40eba0:	mov    WORD PTR [esi],es
  40eba2:	mov    al,0xca
  40eba4:	rol    DWORD PTR [ecx-0x6f],0x50
  40eba8:	fist   WORD PTR [edx+ebp*4-0x7e24f8db]
  40ebaf:	xor    cl,BYTE PTR [esi+edi*2-0x3f]
  40ebb3:	cmp    eax,0x9dd95a3d
  40ebb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebb9:	and    DWORD PTR [esi+0x77],0xed48483a
  40ebc0:	jle    0x40ec20
  40ebc2:	push   ss
  40ebc3:	mov    ds:0xf93eb8cd,al
  40ebc8:	repz pop ebx
  40ebca:	mov    WORD PTR cs:[eax+0x5f],cs
  40ebce:	mov    bl,0x8e
  40ebd0:	mov    bh,BYTE PTR [esi+0x67]
  40ebd3:	fnstcw WORD PTR [eax+0x1e]
  40ebd6:	jp     0x40ebf6
  40ebd8:	mov    esp,DWORD PTR [ebp+0x5f]
  40ebdb:	mov    dl,0x7a
  40ebdd:	fs add ah,ah
  40ebe0:	cmp    al,al
  40ebe2:	push   ss
  40ebe3:	pop    esp
  40ebe4:	sbb    ebp,edi
  40ebe6:	(bad)  
  40ebe7:	fwait
  40ebe8:	(bad)  
  40ebe9:	dec    esp
  40ebea:	xchg   edi,eax
  40ebeb:	adc    al,0xec
  40ebed:	fst    QWORD PTR [edx]
  40ebef:	pop    ecx
  40ebf0:	leave  
  40ebf1:	push   0x32c85e5e
  40ebf6:	loopne 0x40eb89
  40ebf8:	jmp    0x40ec38
  40ebfa:	retf   
  40ebfb:	(bad)  
  40ebfc:	fild   WORD PTR [eax]
  40ebfe:	or     cl,BYTE PTR [edi+0x24]
  40ec01:	lds    edx,FWORD PTR [ecx+0x6]
  40ec04:	adc    BYTE PTR [edi+0x43],bh
  40ec07:	or     edi,DWORD PTR [ebp+0x6d]
  40ec0a:	mov    ebp,0x41f23692
  40ec0f:	stos   BYTE PTR es:[edi],al
  40ec10:	jl     0x40ec5c
  40ec12:	repz or cl,BYTE PTR [esi+0x4a62cfa5]
  40ec19:	lahf   
  40ec1a:	ins    BYTE PTR es:[edi],dx
  40ec1b:	repnz pusha 
  40ec1d:	sbb    bh,al
  40ec1f:	pusha  
  40ec20:	iret   
  40ec21:	adc    eax,edx
  40ec23:	cmp    BYTE PTR [ebp*4-0x45c7e1cc],cl
  40ec2a:	mov    ah,0xb6
  40ec2c:	or     ah,bl
  40ec2e:	outs   dx,DWORD PTR ds:[esi]
  40ec2f:	loope  0x40ebc8
  40ec31:	and    al,BYTE PTR [ebx+edi*8]
  40ec34:	add    ecx,DWORD PTR [eax+0x7]
  40ec37:	and    al,BYTE PTR [ebp-0x71]
  40ec3a:	pop    ecx
  40ec3b:	dec    esi
  40ec3c:	(bad)  
  40ec3d:	dec    esi
  40ec3e:	mov    dh,0x3a
  40ec40:	and    DWORD PTR [esi],0x37cba6de
  40ec46:	xor    edx,edi
  40ec48:	dec    esp
  40ec49:	test   al,0x37
  40ec4b:	es pop ds
  40ec4d:	jecxz  0x40ebd8
  40ec4f:	rcr    BYTE PTR [edx],1
  40ec51:	mov    ah,0x18
  40ec53:	test   edx,ecx
  40ec55:	push   ss
  40ec56:	outs   dx,BYTE PTR ds:[esi]
  40ec57:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40ec59:	mov    bh,0xa
  40ec5b:	ins    BYTE PTR es:[edi],dx
  40ec5c:	dec    edi
  40ec5d:	(bad)  
  40ec5e:	out    dx,al
  40ec5f:	mov    esi,0x412a4d4d
  40ec64:	jl     0x40ec9a
  40ec66:	jl     0x40ec42
  40ec68:	mov    ah,BYTE PTR [ebx-0xe]
  40ec6b:	cmc    
  40ec6c:	adc    BYTE PTR [edx+eax*8+0x4e],bl
  40ec70:	out    dx,eax
  40ec71:	nop
  40ec72:	push   0xf32420a1
  40ec77:	jmp    0x41b3:0xd9dbb76f
  40ec7e:	mov    dl,0xc3
  40ec80:	out    dx,eax
  40ec81:	push   esi
  40ec82:	aaa    
  40ec83:	jne    0x40ec4f
  40ec85:	pop    ss
  40ec86:	jl     0x40ec40
  40ec88:	data16 cmp al,0xbf
  40ec8b:	pop    ds
  40ec8c:	es je  0x40ec8e
  40ec8f:	loop   0x40ec21
  40ec91:	fs int 0xa6
  40ec94:	aam    0xa7
  40ec96:	mov    ds:0xff0e0c5f,eax
  40ec9b:	stos   DWORD PTR es:[edi],eax
  40ec9c:	cmp    al,0xa0
  40ec9e:	into   
  40ec9f:	or     ch,BYTE PTR [ebp-0x77e0466]
  40eca5:	mov    dh,0x43
  40eca7:	loope  0x40ed28
  40eca9:	in     al,0xf6
  40ecab:	add    cl,BYTE PTR [edi-0x66]
  40ecae:	mov    ebx,ebx
  40ecb0:	(bad)  
  40ecb1:	sti    
  40ecb2:	fcomp  DWORD PTR [eax]
  40ecb4:	popf   
  40ecb5:	push   0xc7e21156
  40ecba:	es popa 
  40ecbc:	push   0x56
  40ecbe:	jp     0x40ecb5
  40ecc0:	repnz daa 
  40ecc2:	pop    edx
  40ecc3:	ds pop edx
  40ecc5:	pop    es
  40ecc6:	cmp    edi,DWORD PTR [edi-0x3fd58ee6]
  40eccc:	sbb    esi,ecx
  40ecce:	jg     0x40ec7b
  40ecd0:	inc    esi
  40ecd1:	sbb    eax,0x59e2f96b
  40ecd6:	jmp    0xa4a4:0xee50044f
  40ecdd:	ja     0x40ec8f
  40ecdf:	xor    eax,0x8f692b36
  40ece4:	inc    edx
  40ece5:	mov    dh,0xc8
  40ece7:	jae    0x40ec99
  40ece9:	retf   0x9563
  40ecec:	in     al,0x25
  40ecee:	rol    BYTE PTR [edi-0x1c],0x7
  40ecf2:	fisub  WORD PTR [esi+0x16]
  40ecf5:	rcr    DWORD PTR [ecx+0x47],0x58
  40ecf9:	lock not DWORD PTR [esi]
  40ecfc:	dec    ebx
  40ecfd:	xor    eax,0xe73ed63e
  40ed02:	in     al,dx
  40ed03:	push   ss
  40ed04:	mov    al,BYTE PTR [ecx+0x56decbf9]
  40ed0a:	into   
  40ed0b:	sbb    BYTE PTR [edi+0x713e032a],bl
  40ed11:	iret   
  40ed12:	or     esp,DWORD PTR [eax]
  40ed14:	jbe    0x40ed72
  40ed16:	fnsave [edi]
  40ed18:	cmp    eax,0x2698db40
  40ed1d:	dec    esp
  40ed1e:	dec    esp
  40ed1f:	out    dx,eax
  40ed20:	sbb    BYTE PTR ds:0x5e11b0fe,ch
  40ed26:	hlt    
  40ed27:	fwait
  40ed28:	out    0xd1,al
  40ed2a:	inc    ebp
  40ed2b:	mov    ebp,0xb6f6be53
  40ed30:	xor    DWORD PTR [edx],ebp
  40ed32:	popa   
  40ed33:	push   es
  40ed34:	daa    
  40ed35:	and    cl,BYTE PTR [ebx]
  40ed37:	push   esi
  40ed38:	and    ecx,ebx
  40ed3a:	jmp    0x40ecc2
  40ed3c:	enter  0x21ec,0xb2
  40ed40:	cmove  esp,DWORD PTR [esp+edx*8]
  40ed44:	aaa    
  40ed45:	jg     0x40ece2
  40ed47:	sub    ecx,DWORD PTR [edi+ebp*8+0x5bcd79bc]
  40ed4e:	das    
  40ed4f:	test   eax,0xd49241b9
  40ed54:	sub    eax,0xbe8b2eb5
  40ed59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed5a:	mov    dl,0x54
  40ed5c:	push   ebx
  40ed5d:	test   DWORD PTR [edi-0x48],0x526dc0b9
  40ed64:	adc    BYTE PTR [ecx-0x65],bh
  40ed67:	mov    cl,0x21
  40ed69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed6a:	clc    
  40ed6b:	arpl   cx,si
  40ed6d:	inc    ebp
  40ed6e:	test   DWORD PTR [ebp-0x3386b943],edi
  40ed74:	xchg   edx,eax
  40ed75:	push   ebp
  40ed76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed77:	loopne 0x40ed1a
  40ed79:	(bad)  
  40ed7a:	in     eax,dx
  40ed7b:	jbe    0x40edef
  40ed7d:	stc    
  40ed7e:	call   FWORD PTR [ebx]
  40ed80:	adc    al,0xfa
  40ed82:	ja     0x40edb1
  40ed84:	adc    DWORD PTR [ebx-0x64c26a59],ecx
  40ed8a:	or     eax,0x26805f4b
  40ed8f:	xchg   ecx,eax
  40ed90:	pop    ebx
  40ed91:	mov    ebx,0x928ca6a0
  40ed96:	mul    eax
  40ed98:	lods   al,BYTE PTR ds:[esi]
  40ed99:	mov    ah,0x2e
  40ed9b:	dec    edi
  40ed9c:	bound  ebp,QWORD PTR [ebp+0x38f92290]
  40eda2:	call   0xb0adfe8e
  40eda7:	mov    esi,0x7896dfb7
  40edac:	loope  0x40ed8d
  40edae:	ds dec ecx
  40edb0:	ret    0x6c37
  40edb3:	sbb    al,0x51
  40edb5:	lods   eax,DWORD PTR ds:[esi]
  40edb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edb9:	pop    edx
  40edba:	mov    ah,0xfb
  40edbc:	push   ds
  40edbd:	shl    DWORD PTR [edi-0x69],cl
  40edc0:	mov    esp,0xf4290a7d
  40edc5:	pop    ds
  40edc6:	sub    BYTE PTR [ebx],dh
  40edc8:	sbb    al,0xaa
  40edca:	xchg   ebx,eax
  40edcb:	xchg   edi,eax
  40edcc:	push   0xffffff97
  40edce:	pusha  
  40edcf:	inc    ecx
  40edd0:	fisub  WORD PTR gs:[esi+0x4a]
  40edd4:	loope  0x40ed7c
  40edd6:	mov    BYTE PTR [edi+0x57],bh
  40edd9:	xchg   esp,eax
  40edda:	(bad)  
  40eddb:	mov    esi,0x28e9f67d
  40ede0:	and    DWORD PTR ds:[esp+ebp*8+0x1c],esi
  40ede5:	fiadd  WORD PTR [ebp-0x37]
  40ede8:	add    bh,BYTE PTR [edi-0x5e32773a]
  40edee:	xor    BYTE PTR [ecx-0x77],dl
  40edf1:	mov    cl,0xf5
  40edf3:	xchg   DWORD PTR [edi+0x36],ebp
  40edf6:	int    0x8d
  40edf8:	dec    edx
  40edf9:	jecxz  0x40edf0
  40edfb:	cdq    
  40edfc:	outs   dx,BYTE PTR ds:[esi]
  40edfd:	jbe    0x40edde
  40edff:	cmc    
  40ee00:	cmc    
  40ee01:	mov    edi,0x1542d82d
  40ee06:	xor    bl,dh
  40ee08:	test   DWORD PTR [bp+si],ecx
  40ee0b:	std    
  40ee0c:	xchg   ebx,eax
  40ee0d:	clc    
  40ee0e:	lods   al,BYTE PTR ds:[esi]
  40ee0f:	ds xchg ebp,eax
  40ee11:	xor    ah,BYTE PTR [esi+0x6733e5c1]
  40ee17:	punpckhwd mm5,mm0
  40ee1a:	cs pop esp
  40ee1c:	imul   ecx,DWORD PTR [ecx],0xffffff85
  40ee1f:	test   ebx,ebx
  40ee21:	jae    0x40edca
  40ee23:	dec    edi
  40ee24:	div    BYTE PTR [ebp-0x67]
  40ee27:	adc    eax,0xf05165c6
  40ee2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee2d:	adc    al,cl
  40ee2f:	les    eax,FWORD PTR [ecx-0x39]
  40ee32:	or     DWORD PTR [edi+0x440e6b0f],ebx
  40ee38:	fldlg2 
  40ee3a:	pop    ebp
  40ee3b:	adc    ecx,DWORD PTR [ecx-0x28]
  40ee3e:	test   eax,0xc0f19880
  40ee43:	sbb    DWORD PTR [ecx+0x11c30c29],ebx
  40ee49:	and    ebp,DWORD PTR [esp+eax*1]
  40ee4c:	push   ebx
  40ee4d:	or     al,0x85
  40ee4f:	xchg   edi,eax
  40ee50:	mov    bl,0x9a
  40ee52:	scas   eax,DWORD PTR es:[edi]
  40ee53:	cdq    
  40ee54:	or     eax,0xd50d0ffa
  40ee59:	sub    BYTE PTR [edi],cl
  40ee5b:	mov    DWORD PTR [ebp-0x7a],0xb2d2dd4
  40ee62:	pop    ebp
  40ee63:	retf   0xc1bd
  40ee66:	mov    ebx,0x42c8c25c
  40ee6b:	mov    DWORD PTR [edi],ebx
  40ee6d:	push   esp
  40ee6e:	cld    
  40ee6f:	inc    eax
  40ee70:	mov    al,0x3d
  40ee72:	mov    ds:0xa7588853,eax
  40ee77:	in     al,dx
  40ee78:	out    0xab,al
  40ee7a:	gs retf 0x2f55
  40ee7e:	cmp    eax,0x6d9b253d
  40ee83:	(bad)  
  40ee84:	icebp  
  40ee85:	xor    bl,cl
  40ee87:	add    al,0x1b
  40ee89:	pop    ebx
  40ee8a:	lods   eax,DWORD PTR ds:[esi]
  40ee8b:	fs ins BYTE PTR es:[edi],dx
  40ee8d:	xchg   edi,eax
  40ee8e:	inc    edx
  40ee8f:	(bad)  
  40ee90:	stc    
  40ee91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee92:	push   ds
  40ee93:	into   
  40ee94:	mov    ah,0xbc
  40ee96:	stc    
  40ee97:	(bad)  
  40ee98:	cld    
  40ee99:	pop    ds
  40ee9a:	ret    0xad85
  40ee9d:	pusha  
  40ee9e:	outs   dx,DWORD PTR ds:[esi]
  40ee9f:	mov    al,0x1b
  40eea1:	pop    eax
  40eea2:	ror    DWORD PTR [eax+0x64],0x9e
  40eea6:	push   ss
  40eea7:	pop    esp
  40eea8:	xchg   ecx,eax
  40eea9:	cmp    DWORD PTR [eax+ebp*2-0x70],ebx
  40eead:	xor    BYTE PTR [edx-0x5f8bf38],bl
  40eeb3:	loopne 0x40ee54
  40eeb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb6:	call   DWORD PTR [edi]
  40eeb8:	popa   
  40eeb9:	pop    ebp
  40eeba:	xchg   edx,eax
  40eebb:	and    DWORD PTR [esi+0x13ee9833],ebp
  40eec1:	inc    ebx
  40eec2:	push   ebp
  40eec3:	inc    ebp
  40eec4:	mov    dh,BYTE PTR [eax]
  40eec6:	(bad)
  40eec9:	push   ebp
  40eeca:	mov    dh,0x32
  40eecc:	aad    0xee
  40eece:	inc    ebx
  40eecf:	pop    eax
  40eed0:	adc    DWORD PTR [eax-0x7b734ac],ebp
  40eed6:	test   DWORD PTR [edi-0x71],esp
  40eed9:	aad    0xb2
  40eedb:	(bad)  
  40eedc:	xor    DWORD PTR ds:0x40c35a,ecx
  40eee2:	shr    edi,1
  40eee4:	imul   ecx,esp,0xf90babb2
  40eeea:	mov    bh,0xf0
  40eeec:	mov    DWORD PTR ds:0x807648ce,eax
  40eef2:	lahf   
  40eef3:	out    dx,al
  40eef4:	cmp    bh,BYTE PTR [ecx+0x69213926]
  40eefa:	sbb    eax,0x67fb67d0
  40eeff:	xor    ebp,DWORD PTR [ebx-0xf68878]
  40ef05:	mov    ebx,0xccf29b6c
  40ef0a:	mov    esp,0x1bf9e394
  40ef0f:	adc    esp,DWORD PTR fs:[eax-0x773f4b1b]
  40ef16:	jl     0x40eefd
  40ef18:	loop   0x40ef14
  40ef1a:	rcl    bh,0x2b
  40ef1d:	xchg   edx,eax
  40ef1e:	xlat   BYTE PTR ds:[ebx]
  40ef1f:	fst    QWORD PTR [edx]
  40ef21:	div    BYTE PTR [ecx-0x186fbfc7]
  40ef27:	jnp    0x40eeca
  40ef29:	sti    
  40ef2a:	aaa    
  40ef2b:	sub    eax,DWORD PTR [edi+0x258a671]
  40ef31:	add    al,ah
  40ef33:	dec    ebp
  40ef34:	mov    ds:0x2499aaec,eax
  40ef39:	lods   eax,DWORD PTR ds:[esi]
  40ef3a:	lock dec ebx
  40ef3c:	mov    ds:0x339ee9,eax
  40ef41:	pop    ebx
  40ef42:	cld    
  40ef43:	cmp    al,0x96
  40ef45:	iret   
  40ef46:	lock repz push esi
  40ef49:	jmp    0x40ef91
  40ef4b:	mov    eax,ds:0xb775f855
  40ef50:	cmp    al,BYTE PTR [ecx+0x5f8700fd]
  40ef56:	call   0x511c:0xbfd119c
  40ef5d:	into   
  40ef5e:	inc    ebp
  40ef5f:	gs cdq 
  40ef61:	(bad)  
  40ef62:	jnp    0x40efcd
  40ef64:	inc    ecx
  40ef65:	inc    eax
  40ef66:	loopne 0x40efa9
  40ef68:	xchg   ecx,esp
  40ef6a:	push   edx
  40ef6b:	ins    BYTE PTR es:[edi],dx
  40ef6c:	popa   
  40ef6d:	js     0x40efa2
  40ef6f:	sar    BYTE PTR [ecx],cl
  40ef71:	add    ecx,DWORD PTR [ebx-0x44]
  40ef74:	scas   eax,DWORD PTR es:[edi]
  40ef75:	outs   dx,BYTE PTR ds:[esi]
  40ef76:	jo     0x40efb0
  40ef78:	mov    ebx,0x67f2262f
  40ef7d:	sbb    al,0x21
  40ef7f:	mov    al,BYTE PTR [eax-0x2e98a9c4]
  40ef85:	mov    BYTE PTR [esi],dl
  40ef87:	ret    0x8c7
  40ef8a:	xchg   BYTE PTR [edi-0x5f],dl
  40ef8d:	push   ecx
  40ef8e:	(bad)  
  40ef8f:	je     0x40efa2
  40ef91:	mov    ebp,DWORD PTR [ecx]
  40ef93:	test   BYTE PTR ds:0xea682ffd,cl
  40ef99:	mov    eax,ds:0xdbad28cd
  40ef9e:	mov    ebp,0xfe22e8c2
  40efa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa4:	sbb    al,0x64
  40efa6:	xor    al,0x25
  40efa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efa9:	jl     0x40ef52
  40efab:	and    eax,0x683aa2aa
  40efb0:	lahf   
  40efb1:	arpl   bp,dx
  40efb3:	es cld 
  40efb5:	inc    esi
  40efb6:	ja     0x40ef65
  40efb8:	xchg   DWORD PTR [esi+0x6d],esi
  40efbb:	add    BYTE PTR [ebx+0x7a],dl
  40efbe:	pop    ss
  40efbf:	test   DWORD PTR [edx+0x69],edx
  40efc2:	add    ecx,ecx
  40efc4:	ret    
  40efc5:	out    dx,eax
  40efc6:	repz sahf 
  40efc8:	dec    ebp
  40efc9:	push   0xffffff8e
  40efcb:	stc    
  40efcc:	adc    al,0xb6
  40efce:	xchg   edx,eax
  40efcf:	or     eax,0x61fb7eca
  40efd4:	jno    0x40ef74
  40efd6:	jns    0x40effa
  40efd8:	jae    0x40f034
  40efda:	stos   BYTE PTR es:[edi],al
  40efdb:	push   0x91584198
  40efe0:	test   DWORD PTR [ebx-0x72d80dcb],edi
  40efe6:	test   eax,0x62a84498
  40efeb:	mov    eax,0x3f720414
  40eff0:	push   ecx
  40eff1:	mov    ds:0xc38325,eax
  40eff6:	xor    al,0xf9
  40eff8:	sub    eax,0x42fcb2cb
  40effd:	push   edi
  40effe:	fdiv   st,st(2)
  40f000:	cwde   
  40f001:	xchg   BYTE PTR [ebx-0x27fb72b9],cl
  40f007:	sub    al,0x68
  40f009:	ss stos DWORD PTR es:[edi],eax
  40f00b:	sbb    DWORD PTR [ebp+0x54e231bb],eax
  40f011:	fbld   TBYTE PTR [ebx-0xea18bbe]
  40f017:	mov    eax,0x9944eb52
  40f01c:	mov    esi,0x4531f6c2
  40f021:	jge    0x40efc4
  40f023:	inc    ebx
  40f024:	mov    bl,0xe3
  40f026:	cmp    al,0xba
  40f028:	xchg   ebp,eax
  40f029:	mov    ebp,0x1ee168e9
  40f02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f02f:	cmc    
  40f030:	xchg   ecx,eax
  40f031:	std    
  40f032:	aaa    
  40f033:	jg     0x40f052
  40f035:	adc    DWORD PTR [ebx-0x6d48c341],ebp
  40f03b:	test   BYTE PTR [ebx],bh
  40f03d:	sbb    BYTE PTR [edx+ebp*8],ah
  40f040:	inc    ebx
  40f041:	add    al,0x18
  40f043:	shl    BYTE PTR [edx-0x67],1
  40f046:	xchg   esp,eax
  40f047:	jmp    0x40f01c
  40f049:	outs   dx,BYTE PTR ds:[esi]
  40f04a:	aad    0xd7
  40f04c:	adc    dh,ch
  40f04e:	pop    esi
  40f04f:	pop    esp
  40f050:	iret   
  40f051:	je     0x40f098
  40f053:	ret    0x6a07
  40f056:	dec    eax
  40f057:	repz mov al,0xe5
  40f05a:	cmp    eax,edi
  40f05c:	inc    edx
  40f05d:	retf   0x987a
  40f060:	pop    ss
  40f061:	add    eax,0x8d757d49
  40f066:	mov    ch,0xe2
  40f068:	and    al,al
  40f06a:	dec    ecx
  40f06b:	xlat   BYTE PTR ds:[ebx]
  40f06c:	clc    
  40f06d:	mov    dl,0x22
  40f06f:	mov    bh,0xbd
  40f071:	shl    BYTE PTR [edx],cl
  40f073:	mov    ch,BYTE PTR [ebp+0x2]
  40f076:	stos   DWORD PTR es:[edi],eax
  40f077:	scas   al,BYTE PTR es:[edi]
  40f078:	mov    esp,DWORD PTR [ebp-0xb]
  40f07b:	cmc    
  40f07c:	push   esi
  40f07d:	in     eax,0x49
  40f07f:	adc    al,0x21
  40f081:	mov    al,ds:0xb89b04ea
  40f086:	mov    al,0x79
  40f088:	cmp    al,0xcd
  40f08a:	pop    es
  40f08b:	ss mov ebx,0xc2ce2aa6
  40f091:	stos   DWORD PTR es:[edi],eax
  40f092:	fild   WORD PTR [esi-0x53]
  40f095:	loopne 0x40f0be
  40f097:	stc    
  40f098:	push   es
  40f099:	int    0x43
  40f09b:	retf   
  40f09c:	or     cl,BYTE PTR [ecx+0x24]
  40f09f:	aad    0x5c
  40f0a1:	or     BYTE PTR [eax],bh
  40f0a3:	sbb    BYTE PTR [ebx+0x7],0xe4
  40f0a7:	cwde   
  40f0a8:	mov    al,al
  40f0aa:	jle    0x40f02e
  40f0ac:	cmp    ebp,esp
  40f0ae:	cld    
  40f0af:	sbb    DWORD PTR [edi-0x7e2c548d],esp
  40f0b5:	jo     0x40f134
  40f0b7:	fsubr  DWORD PTR ds:0x91ac62db
  40f0bd:	outs   dx,DWORD PTR ds:[esi]
  40f0be:	or     ch,BYTE PTR [edx]
  40f0c0:	les    edi,FWORD PTR [edx]
  40f0c2:	mov    dl,0xf7
  40f0c4:	sbb    DWORD PTR [eax+edi*2+0x7fbe6f10],0x3740e2ea
  40f0cf:	jecxz  0x40f07e
  40f0d1:	clc    
  40f0d2:	pop    esi
  40f0d3:	cwde   
  40f0d4:	jg     0x40f0f9
  40f0d6:	loope  0x40f0cd
  40f0d8:	imul   edx,esi,0xcc547f44
  40f0de:	jne    0x40f118
  40f0e0:	hlt    
  40f0e1:	mov    ah,0x5f
  40f0e3:	adc    ebp,esi
  40f0e5:	jle    0x40f0a1
  40f0e7:	dec    ecx
  40f0e8:	test   eax,0xb7d0140e
  40f0ed:	push   ecx
  40f0ee:	fist   WORD PTR [ebp+0xbeaa02c]
  40f0f4:	fsub   st,st(4)
  40f0f6:	adc    ebp,DWORD PTR ds:[ebx+0x7c]
  40f0fa:	daa    
  40f0fb:	xor    al,0x66
  40f0fd:	jmp    0x40f119
  40f0ff:	or     BYTE PTR [ecx+0x23],cl
  40f102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f103:	dec    esi
  40f104:	(bad)  
  40f106:	out    dx,al
  40f107:	and    al,0xdf
  40f109:	xchg   edx,eax
  40f10a:	mov    WORD PTR [esi],gs
  40f10c:	out    dx,al
  40f10d:	clc    
  40f10e:	inc    esp
  40f10f:	mov    esi,0x99f91758
  40f114:	enter  0x26df,0x7d
  40f118:	sar    BYTE PTR [edi-0x67],cl
  40f11b:	repz push 0x1acbc3bb
  40f121:	mov    ds:0xe97368db,al
  40f126:	ins    BYTE PTR es:[edi],dx
  40f127:	call   0x7fcd4732
  40f12c:	out    0xbe,al
  40f12e:	pop    esp
  40f12f:	fiadd  WORD PTR [esi]
  40f131:	jns    0x40f17c
  40f133:	xchg   ebp,eax
  40f134:	jmp    0x93cec37f
  40f139:	adc    dl,BYTE PTR [edx+0x758ba566]
  40f13f:	or     al,0x3b
  40f141:	lock mov eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	xchg   esp,eax
  40fa17:	mov    ch,0xa4
  40fa19:	(bad)  
  40fa1a:	je     0x40f9e6
  40fa1c:	jp     0x40fa98
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	dec    ecx
  40fa23:	jns    0x40fa42
  40fa25:	xchg   ebx,eax
  40fa26:	pop    eax
  40fa27:	sub    al,0x85
  40fa29:	or     ah,cl
  40fa2b:	jmp    0x61e51978
  40fa30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa31:	rcl    DWORD PTR [ecx],0x1e
  40fa34:	(bad)  
  40fa35:	jo     0x40f9eb
  40fa37:	repnz (bad) 
  40fa39:	push   ecx
  40fa3a:	and    eax,0xafc3c24f
  40fa3f:	mov    ecx,0x11aac14c
  40fa44:	hlt    
  40fa45:	ror    BYTE PTR [ecx+0x65],1
  40fa48:	adc    edx,DWORD PTR [ecx-0x7c739f94]
  40fa4e:	mov    edx,0xabdab243
  40fa53:	xchg   BYTE PTR [edx-0x7e5dc063],bh
  40fa59:	(bad)  
  40fa5b:	inc    ecx
  40fa5c:	sti    
  40fa5d:	pop    eax
  40fa5e:	mov    esi,DWORD PTR [ebx]
  40fa60:	jb     0x40fa80
  40fa62:	sub    BYTE PTR [eax-0x6e],bh
  40fa65:	jnp    0x40fa47
  40fa67:	lock gs or ebp,esi
  40fa6b:	mov    DWORD PTR [edx-0xa],edx
  40fa6e:	scas   eax,DWORD PTR es:[edi]
  40fa6f:	jl     0x40fac5
  40fa71:	mov    eax,ds:0x3e0b64ca
  40fa76:	dec    eax
  40fa77:	xchg   DWORD PTR [ecx+0x71],ebp
  40fa7a:	or     al,0xe9
  40fa7c:	adc    esp,edx
  40fa7e:	dec    ebx
  40fa7f:	out    0x58,al
  40fa81:	rcl    esi,1
  40fa83:	nop
  40fa84:	stc    
  40fa85:	or     al,0x73
  40fa87:	xor    eax,0x6a9df8ae
  40fa8c:	imul   esi,DWORD PTR [eax-0x5c5fa54c],0xffffffbf
  40fa93:	jne    0x1c1e0af6
  40fa99:	or     bl,BYTE PTR [ebx-0x44]
  40fa9c:	shr    BYTE PTR [edx+esi*4+0x19c26012],0x5a
  40faa4:	push   es
  40faa5:	jns    0x40fb22
  40faa7:	ret    
  40faa8:	lods   al,BYTE PTR ds:[esi]
  40faa9:	xchg   edi,eax
  40faaa:	or     al,dl
  40faac:	push   ss
  40faad:	sub    bl,BYTE PTR [ebx]
  40faaf:	lods   al,BYTE PTR ds:[esi]
  40fab0:	cmp    ah,BYTE PTR [ecx]
  40fab2:	mov    DWORD PTR [esi-0x30],ebp
  40fab5:	adc    edx,DWORD PTR [edi-0x573fce80]
  40fabb:	pop    ds
  40fabc:	imul   esp,DWORD PTR [esi+ecx*1-0x2a],0xb4283e0f
  40fac4:	ins    DWORD PTR es:[edi],dx
  40fac5:	jnp    0x40fa94
  40fac7:	xchg   DWORD PTR [eax+0x6],ebx
  40faca:	mov    bl,0xb9
  40facc:	xor    DWORD PTR [ebx+0xc69e8ab],ebp
  40fad2:	scas   eax,DWORD PTR es:[edi]
  40fad3:	ret    
  40fad4:	aas    
  40fad5:	leave  
  40fad6:	(bad)  
  40fad7:	in     al,0x7e
  40fad9:	popa   
  40fada:	in     al,0x33
  40fadc:	ror    BYTE PTR [edx+0x3e],cl
  40fadf:	mov    bl,0x4d
  40fae1:	fistp  QWORD PTR [edx-0x21]
  40fae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fae5:	out    0xc2,ax
  40fae8:	ror    edx,0x97
  40faeb:	sysexit 
  40faed:	jno    0x40fb49
  40faef:	ins    BYTE PTR es:[edi],dx
  40faf0:	xlat   BYTE PTR ds:[ebx]
  40faf1:	or     eax,0x59011721
  40faf6:	inc    ebx
  40faf7:	inc    esi
  40faf8:	jmp    0xc96c:0x109603cb
  40faff:	das    
  40fb00:	dec    esp
  40fb01:	mov    BYTE PTR [edx-0x27],0xb0
  40fb05:	jo     0x40facf
  40fb07:	mov    si,0xc20f
  40fb0b:	fcom   DWORD PTR [edi+0x2c51ce48]
  40fb11:	inc    esi
  40fb12:	ds enter 0xf54c,0x19
  40fb17:	push   ebx
  40fb18:	xor    ebx,DWORD PTR [ebp+eiz*2-0x393e9d3f]
  40fb1f:	jl     0x40faf2
  40fb21:	fcom   st(7)
  40fb23:	loope  0x40fb53
  40fb25:	inc    esi
  40fb26:	mov    cl,0x4a
  40fb28:	dec    ebx
  40fb29:	loope  0x40fb4f
  40fb2b:	inc    ecx
  40fb2c:	popa   
  40fb2d:	or     ah,BYTE PTR [eax+ebp*8]
  40fb30:	add    eax,0xf47ea760
  40fb35:	ins    BYTE PTR es:[edi],dx
  40fb36:	jle    0x40fad8
  40fb38:	xor    al,0x9
  40fb3a:	cwde   
  40fb3b:	adc    BYTE PTR [edx+0x3cade8df],bh
  40fb41:	sbb    DWORD PTR [edi-0x228db2b9],0x6a282431
  40fb4b:	xor    cl,BYTE PTR [ecx]
  40fb4d:	mov    BYTE PTR [esi+0x4d],0x36
  40fb51:	mov    DWORD PTR [eax-0x51e6a012],ebp
  40fb57:	les    edi,FWORD PTR [edx-0x92588ae]
  40fb5d:	jg     0x40fb73
  40fb5f:	ja     0x40fba1
  40fb61:	out    dx,eax
  40fb62:	or     cl,BYTE PTR [esi-0x64a11d25]
  40fb68:	mov    ds:0x6069c56,eax
  40fb6d:	enter  0x43f1,0x3a
  40fb71:	inc    esi
  40fb72:	das    
  40fb73:	iret   
  40fb74:	(bad)  
  40fb75:	idiv   BYTE PTR [ebx-0x55]
  40fb78:	push   edx
  40fb79:	lods   al,BYTE PTR ds:[esi]
  40fb7a:	or     DWORD PTR [esi-0x3bead64d],0xffffffa2
  40fb81:	dec    eax
  40fb82:	iret   
  40fb83:	mov    edi,0x6beb99a6
  40fb88:	cwde   
  40fb89:	aam    0xb7
  40fb8b:	(bad)  [eax-0x7c60f8f5]
  40fb91:	pushf  
  40fb92:	or     DWORD PTR [esi-0x3c],edi
  40fb95:	lahf   
  40fb96:	adc    esp,edx
  40fb98:	pop    ss
  40fb99:	outs   dx,BYTE PTR ds:[esi]
  40fb9a:	pop    edx
  40fb9b:	push   esi
  40fb9c:	gs sub edx,DWORD PTR ss:[esi]
  40fba0:	adc    BYTE PTR [edx+eax*1],bl
  40fba3:	push   0xffffffbd
  40fba5:	dec    edx
  40fba6:	dec    edi
  40fba7:	ja     0x40fb49
  40fba9:	push   edx
  40fbaa:	repnz push 0xffffff98
  40fbad:	pop    es
  40fbae:	hlt    
  40fbaf:	jg     0x40fb68
  40fbb1:	push   es
  40fbb2:	inc    edx
  40fbb3:	mov    edx,0xb43051fe
  40fbb8:	fwait
  40fbb9:	pop    ebx
  40fbba:	(bad)  
  40fbbb:	out    dx,al
  40fbbc:	mov    cl,dh
  40fbbe:	inc    ecx
  40fbbf:	push   edx
  40fbc0:	xor    BYTE PTR [eax],0x7d
  40fbc3:	cmp    BYTE PTR [eax-0x44f1d9b3],bl
  40fbc9:	pop    esp
  40fbca:	out    dx,al
  40fbcb:	pop    edx
  40fbcc:	xor    BYTE PTR [edx+0x15],dl
  40fbcf:	out    0x8f,eax
  40fbd1:	jnp    0x40fb5f
  40fbd3:	aas    
  40fbd4:	mov    ds:0x414260f1,eax
  40fbd9:	scas   al,BYTE PTR es:[edi]
  40fbda:	ficomp DWORD PTR [ebp+eax*2-0x22]
  40fbde:	stos   DWORD PTR es:[edi],eax
  40fbdf:	mov    cl,0xe6
  40fbe1:	imul   eax,DWORD PTR [edi],0x6d
  40fbe4:	stc    
  40fbe5:	sbb    al,0x41
  40fbe7:	and    al,0x29
  40fbe9:	imul   ebx,DWORD PTR [esi],0x7e6f1cac
  40fbef:	jmp    0x1446:0x1190c14e
  40fbf6:	daa    
  40fbf7:	iret   
  40fbf8:	stos   WORD PTR es:[edi],ax
  40fbfa:	dec    edi
  40fbfb:	in     eax,dx
  40fbfc:	and    BYTE PTR [edx-0x3e],dh
  40fbff:	add    DWORD PTR [edi+0x1c],0xfddd38a0
  40fc06:	mov    ch,0x58
  40fc08:	cmc    
  40fc09:	ins    BYTE PTR es:[edi],dx
  40fc0a:	dec    eax
  40fc0b:	or     eax,0xaf28419b
  40fc10:	push   eax
  40fc11:	cmp    ebx,DWORD PTR [ecx+0x501a0cd3]
  40fc17:	sub    dl,BYTE PTR [eax-0x79]
  40fc1a:	call   0x9bdf:0xea135a20
  40fc21:	bound  ecx,QWORD PTR [ecx-0x54]
  40fc24:	test   eax,0x3dc534f2
  40fc29:	fucom  st(0)
  40fc2b:	and    DWORD PTR [edi+edx*8-0x20],esi
  40fc2f:	sbb    DWORD PTR [edi-0x5afeddd1],ebp
  40fc35:	jmp    0xb93e:0xc6fff26a
  40fc3c:	xlat   BYTE PTR ds:[ebx]
  40fc3d:	pop    edx
  40fc3e:	enter  0xd036,0x20
  40fc42:	and    eax,0x25c8cfbb
  40fc47:	mov    ebp,0x3c9a48cf
  40fc4c:	xchg   cx,ax
  40fc4e:	test   al,0x1c
  40fc50:	or     esi,ecx
  40fc52:	ss adc eax,eax
  40fc55:	xchg   esi,eax
  40fc56:	fs mov esi,esi
  40fc59:	or     BYTE PTR [ecx-0x7f037c1f],bh
  40fc5f:	inc    ebp
  40fc60:	sub    esp,ebp
  40fc62:	lahf   
  40fc63:	in     eax,0x50
  40fc65:	pushf  
  40fc66:	(bad)  
  40fc67:	mov    al,0x3f
  40fc69:	lds    esp,FWORD PTR [edx+0x32]
  40fc6c:	pop    ebx
  40fc6d:	dec    eax
  40fc6e:	hlt    
  40fc6f:	add    edx,ebx
  40fc71:	pop    es
  40fc72:	jo     0x3435e76a
  40fc78:	jbe    0x40fc35
  40fc7a:	sub    BYTE PTR [ebp-0xc87b5b8],bh
  40fc80:	inc    edx
  40fc81:	adc    bh,BYTE PTR [eax-0x36]
  40fc84:	mov    eax,ds:0xbd2ea887
  40fc89:	push   ss
  40fc8a:	jnp    0x40fd03
  40fc8c:	pop    edx
  40fc8d:	sub    eax,0x8d19a0c4
  40fc92:	(bad)  
  40fc93:	jo     0x40fc39
  40fc95:	test   BYTE PTR [ecx+0x1adc2ffd],cl
  40fc9b:	leave  
  40fc9c:	fstp   TBYTE PTR [esi-0x39]
  40fc9f:	mov    eax,ds:0xd534a121
  40fca4:	inc    esp
  40fca5:	inc    ebx
  40fca6:	dec    ebx
  40fca7:	sahf   
  40fca8:	pop    ds
  40fca9:	sub    DWORD PTR [edx-0x4eb1f238],ebx
  40fcaf:	sbb    ch,BYTE PTR [edx+0x11]
  40fcb2:	sbb    al,0xc3
  40fcb4:	int    0x9b
  40fcb6:	xchg   esi,eax
  40fcb7:	jl     0x40fcde
  40fcb9:	xor    DWORD PTR [edi+esi*2+0x7758b7bc],0xb4e272bf
  40fcc4:	cli    
  40fcc5:	(bad)  
  40fcc7:	test   al,0xc3
  40fcc9:	and    eax,0xc75855a6
  40fcce:	mov    DWORD PTR [eax-0x7e],ebp
  40fcd1:	push   esp
  40fcd2:	xchg   edx,eax
  40fcd3:	in     al,0xa3
  40fcd5:	mov    bl,0x17
  40fcd7:	xchg   edx,eax
  40fcd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcd9:	dec    ecx
  40fcda:	test   eax,0x589e0fb9
  40fcdf:	fld    TBYTE PTR [ecx-0x248c10c1]
  40fce5:	imul   ebp,DWORD PTR [esp+esi*2-0x2d529a07],0x4e5cc0f0
  40fcf0:	add    eax,DWORD PTR [ecx+0x27bbddcc]
  40fcf6:	xor    cl,0x1b
  40fcf9:	out    dx,eax
  40fcfa:	cs (bad) 
  40fcfc:	mov    al,ds:0xc5de77b9
  40fd01:	test   cl,ah
  40fd03:	test   DWORD PTR [ecx],edx
  40fd05:	push   0xffffffc7
  40fd07:	mov    edx,0xf42bc5c2
  40fd0c:	cmp    BYTE PTR [edx-0x28cc3001],0x10
  40fd13:	pop    eax
  40fd14:	je     0x40fce2
  40fd16:	sar    DWORD PTR [edi-0x1647b98c],cl
  40fd1c:	(bad)  
  40fd1d:	mov    dh,0x82
  40fd1f:	shl    BYTE PTR [edx+ecx*4-0x2],cl
  40fd23:	cwde   
  40fd24:	inc    esp
  40fd25:	test   eax,0x10bf3719
  40fd2a:	leave  
  40fd2b:	pop    ebp
  40fd2c:	loop   0x40fd2b
  40fd2e:	dec    esi
  40fd2f:	cmp    dh,BYTE PTR [edi]
  40fd31:	mov    cs,WORD PTR [edx-0x3eac454c]
  40fd37:	sahf   
  40fd38:	test   BYTE PTR [esi],0x5e
  40fd3b:	mov    esp,0xc2f4afdb
  40fd40:	mov    cl,0xdf
  40fd42:	rcr    BYTE PTR [ebp+0x5eaafd0f],1
  40fd48:	mov    dl,0xfa
  40fd4a:	fbld   TBYTE PTR [ebp+0x6355813d]
  40fd50:	jmp    0xb56:0xe266a446
  40fd57:	cmp    BYTE PTR [eax],al
  40fd59:	(bad)  
  40fd5a:	cdq    
  40fd5b:	aad    0x9f
  40fd5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd5e:	arpl   WORD PTR [ebx+0x71],ax
  40fd61:	xor    ecx,DWORD PTR [edi]
  40fd63:	inc    esi
  40fd64:	mov    edi,0xddece095
  40fd69:	ror    BYTE PTR [ebx],1
  40fd6b:	cmc    
  40fd6c:	mov    esp,esi
  40fd6e:	lock xchg DWORD PTR [ebx+0x13],ebp
  40fd72:	mov    bh,0x60
  40fd74:	and    cl,BYTE PTR [edx]
  40fd76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd77:	outs   dx,BYTE PTR ds:[esi]
  40fd78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd79:	sub    esp,ebp
  40fd7b:	inc    ebx
  40fd7c:	adc    bh,al
  40fd7e:	jmp    0x40fd87
  40fd80:	dec    ebp
  40fd81:	leave  
  40fd82:	setnp  BYTE PTR [edi]
  40fd85:	in     eax,0xf8
  40fd87:	lahf   
  40fd88:	xchg   ebx,eax
  40fd89:	fbld   TBYTE PTR [eax-0x72b10833]
  40fd8f:	not    DWORD PTR [ebp+0x4a572981]
  40fd95:	and    esp,ecx
  40fd97:	jle    0x40fdb0
  40fd99:	xor    BYTE PTR [edi],ah
  40fd9b:	and    eax,0x5dce01c2
  40fda0:	aam    0x3e
  40fda2:	jmp    0x85f2f2af
  40fda7:	and    BYTE PTR [edx],bl
  40fda9:	in     al,dx
  40fdaa:	push   esi
  40fdab:	outs   dx,DWORD PTR ds:[esi]
  40fdac:	inc    ecx
  40fdad:	cmc    
  40fdae:	std    
  40fdaf:	loop   0x40fd4f
  40fdb1:	xchg   esp,eax
  40fdb2:	and    al,0xd8
  40fdb4:	add    DWORD PTR [ebx+0x63],esp
  40fdb7:	aaa    
  40fdb8:	sbb    al,0xd0
  40fdba:	(bad)  
  40fdbb:	sar    BYTE PTR [esp+edx*2],1
  40fdbe:	push   edx
  40fdbf:	mov    eax,ds:0x8641cd52
  40fdc4:	adc    cl,bh
  40fdc6:	mov    ebx,0xc694d941
  40fdcb:	stc    
  40fdcc:	mov    al,0xd8
  40fdce:	sbb    dh,BYTE PTR [ebp+0x59]
  40fdd1:	xor    esi,DWORD PTR [edx+0x2]
  40fdd4:	mov    dh,0x3a
  40fdd6:	cmp    BYTE PTR [esi-0x1217c02c],ch
  40fddc:	sbb    al,0x28
  40fdde:	retf   0x5e5b
  40fde1:	sar    BYTE PTR [ebx],0x59
  40fde4:	fist   DWORD PTR [esi]
  40fde6:	xchg   edi,eax
  40fde7:	add    BYTE PTR cs:[esi],dl
  40fdea:	jg     0x40fe59
  40fdec:	dec    ecx
  40fded:	dec    esi
  40fdee:	or     cl,dl
  40fdf0:	int    0xbf
  40fdf2:	or     eax,0x9b071f85
  40fdf7:	add    al,0x9f
  40fdf9:	pop    es
  40fdfa:	rcl    DWORD PTR [edx-0x164c9024],0x88
  40fe01:	test   eax,0xd5dc7ee
  40fe07:	mov    al,ds:0x60569aa4
  40fe0c:	add    al,0x96
  40fe0e:	imul   esi,DWORD PTR [eax-0x62],0x3c16d37d
  40fe15:	hlt    
  40fe16:	mov    esp,0xc222f3d1
  40fe1b:	daa    
  40fe1c:	cs scas al,BYTE PTR es:[edi]
  40fe1e:	cmp    al,ch
  40fe20:	add    al,0xc6
  40fe22:	fimul  WORD PTR [eax-0x4b]
  40fe25:	shl    ecx,cl
  40fe27:	ror    edi,0x88
  40fe2a:	lods   al,BYTE PTR ds:[esi]
  40fe2b:	fld    TBYTE PTR [ebp-0x7af76da8]
  40fe31:	ror    BYTE PTR [ebp+edi*8-0xe781f44],0xa6
  40fe39:	xor    eax,0xe9fb67a0
  40fe3e:	fldcw  WORD PTR [ecx+0x2e]
  40fe41:	test   BYTE PTR [ebp+0x2b4341d],bh
  40fe47:	add    BYTE PTR [ecx],dh
  40fe49:	enter  0x1c50,0x5
  40fe4d:	int3   
  40fe4e:	sub    BYTE PTR [ebp-0x9],dh
  40fe51:	inc    cl
  40fe53:	sbb    al,0x1a
  40fe55:	outs   dx,BYTE PTR ds:[esi]
  40fe56:	aaa    
  40fe57:	rol    DWORD PTR [eax-0x6ce80940],cl
  40fe5d:	inc    esi
  40fe5e:	arpl   WORD PTR [ebp-0x58],bp
  40fe61:	xchg   edi,eax
  40fe62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe63:	xor    edx,DWORD PTR [edx+0x3a1ac30b]
  40fe69:	inc    esi
  40fe6a:	push   edx
  40fe6b:	dec    ebx
  40fe6c:	stc    
  40fe6d:	push   esi
  40fe6e:	or     al,0x54
  40fe71:	outs   dx,WORD PTR ds:[esi]
  40fe73:	rcl    DWORD PTR [ecx],1
  40fe75:	fistp  DWORD PTR [edi-0x8]
  40fe78:	inc    eax
  40fe79:	mov    ebx,0x6d762002
  40fe7e:	cmp    al,BYTE PTR [ebx+edi*8+0x56]
  40fe82:	mov    ds:0xa4a54d78,eax
  40fe87:	dec    esi
  40fe88:	jle    0x40fe0e
  40fe8a:	dec    edi
  40fe8b:	push   edx
  40fe8c:	xor    eax,esp
  40fe8e:	shl    DWORD PTR [esp+eiz*4],cl
  40fe91:	inc    sp
  40fe93:	inc    esi
  40fe94:	test   eax,0x26922c3a
  40fe99:	jb     0x40fe66
  40fe9b:	xor    edx,DWORD PTR [ebx+0x12]
  40fe9e:	into   
  40fe9f:	xchg   edi,eax
  40fea0:	iret   
  40fea1:	bound  esp,QWORD PTR [edx]
  40fea3:	ins    DWORD PTR es:[edi],dx
  40fea4:	xor    eax,0xa26bccdc
  40fea9:	pop    ebx
  40feaa:	jns    0x40fe30
  40feac:	fcomi  st,st(4)
  40feae:	sbb    al,0xaa
  40feb0:	out    0x9f,al
  40feb2:	outs   dx,DWORD PTR ds:[esi]
  40feb3:	push   ds
  40feb4:	push   0x1f
  40feb6:	push   ebx
  40feb7:	inc    ebp
  40feb8:	stos   DWORD PTR es:[edi],eax
  40feb9:	nop
  40feba:	xor    DWORD PTR [edi],0xffffff87
  40febd:	mov    DWORD PTR [ebx],ebp
  40febf:	add    ch,BYTE PTR [ebx-0x7d8b0f1c]
  40fec5:	mul    BYTE PTR [ebp+ebp*4+0x3a911091]
  40fecc:	fistp  QWORD PTR [eax+0x5d]
  40fecf:	bound  eax,QWORD PTR [edi]
  40fed1:	(bad)  
  40fed3:	dec    edi
  40fed4:	test   eax,0x70ecfe8
  40fed9:	(bad)  
  40feda:	cli    
  40fedb:	mov    ah,0xcb
  40fedd:	out    dx,al
  40fede:	ins    BYTE PTR es:[edi],dx
  40fedf:	minps  xmm2,XMMWORD PTR [edx-0x2538f2fb]
  40fee6:	mov    WORD PTR [ebx-0x23],ss
  40fee9:	xor    DWORD PTR ds:0xc0743631,esp
  40feef:	pop    ebx
  40fef0:	addr16 pop ecx
  40fef2:	dec    eax
  40fef3:	hlt    
  40fef4:	sub    DWORD PTR [ebx],esi
  40fef6:	and    eax,0x84dddb98
  40fefb:	icebp  
  40fefc:	call   0x345d2a2
  40ff01:	mov    eax,0x669e0256
  40ff06:	mov    WORD PTR [ecx+0x6],cs
  40ff09:	stc    
  40ff0a:	xchg   ebx,eax
  40ff0b:	cmp    esp,esp
  40ff0d:	mov    edi,0xf1d2a6ba
  40ff12:	clc    
  40ff13:	aas    
  40ff14:	stos   DWORD PTR es:[edi],eax
  40ff15:	sbb    eax,0xea8981d8
  40ff1a:	hlt    
  40ff1b:	cli    
  40ff1c:	xor    BYTE PTR [ecx],dh
  40ff1e:	adc    bl,ah
  40ff20:	cmp    esp,esp
  40ff22:	jbe    0x40fee1
  40ff24:	iret   
  40ff25:	jmp    0x40ff3f
  40ff27:	ins    DWORD PTR es:[edi],dx
  40ff28:	push   ebp
  40ff29:	adc    al,0xb9
  40ff2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff2c:	icebp  
  40ff2d:	mov    ds:0x77ee66e0,eax
  40ff32:	cmp    DWORD PTR [ecx+0x20c7af92],eax
  40ff38:	loop   0x40ff83
  40ff3a:	push   0x54b6f17a
  40ff3f:	sbb    BYTE PTR [ecx-0x1d],dl
  40ff42:	jnp    0x40ff03
  40ff44:	pop    ss
  40ff45:	push   cs
  40ff46:	dec    ebp
  40ff47:	jno    0x40ff85
  40ff49:	pop    ebp
  40ff4a:	sub    esi,DWORD PTR [esi]
  40ff4c:	push   ds
  40ff4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff4e:	in     eax,dx
  40ff4f:	inc    esi
  40ff50:	or     ecx,DWORD PTR [eax]
  40ff52:	int3   
  40ff53:	dec    esi
  40ff54:	rol    BYTE PTR [edx-0x39],1
  40ff57:	mov    ch,0xc5
  40ff59:	add    DWORD PTR [ebx-0x6aac405d],eax
  40ff5f:	lahf   
  40ff60:	test   DWORD PTR [eax-0x10da0ff],ebx
  40ff66:	push   es
  40ff67:	and    BYTE PTR [esi+0x2e],ah
  40ff6a:	pop    ds
  40ff6b:	mov    edi,0xa05d8b8
  40ff70:	call   0xdb608aa1
  40ff75:	mov    cl,0xe6
  40ff77:	fs add ebx,DWORD PTR es:[esi+0x7a]
  40ff7c:	pop    ebp
  40ff7d:	in     al,dx
  40ff7e:	(bad)  
  40ff7f:	xor    edx,ecx
  40ff81:	pop    ecx
  40ff82:	jbe    0x40ff92
  40ff84:	and    eax,0x4b894f3b
  40ff89:	cmp    eax,0x603e3f79
  40ff8e:	frstor [edi+0x4f]
  40ff91:	out    dx,eax
  40ff92:	and    al,0x52
  40ff94:	pop    edi
  40ff95:	stos   BYTE PTR es:[edi],al
  40ff96:	dec    esi
  40ff97:	cdq    
  40ff98:	pop    ebx
  40ff99:	mov    eax,0xa277e8be
  40ff9e:	add    al,0x57
  40ffa0:	ins    DWORD PTR es:[edi],dx
  40ffa1:	pop    ds
  40ffa2:	pop    ds
  40ffa3:	mov    eax,ds:0xeb3ae0a7
  40ffa8:	into   
  40ffa9:	mov    edi,0x7960af60
  40ffae:	xchg   edx,eax
  40ffaf:	jp     0x40ff86
  40ffb1:	xchg   ch,ah
  40ffb3:	inc    ebp
  40ffb4:	adc    BYTE PTR [esi+eiz*4-0x6bd23cc0],bl
  40ffbb:	and    esp,DWORD PTR [edi]
  40ffbd:	(bad)  
  40ffbe:	test   al,0xc4
  40ffc0:	adc    eax,0xd028629d
  40ffc5:	sbb    eax,0xd8d55d0b
  40ffca:	adc    eax,0xcc73fc1b
  40ffcf:	mov    bh,0xa4
  40ffd1:	in     eax,0xe5
  40ffd3:	jae    0x40ffba
  40ffd5:	lods   eax,DWORD PTR ds:[esi]
  40ffd6:	sbb    ebp,DWORD PTR ds:0xefdf157d
  40ffdc:	repz mov ah,0x28
  40ffdf:	and    BYTE PTR [edi+0x5f],ah
  40ffe2:	loop   0x40ffc4
  40ffe4:	das    
  40ffe5:	push   ebx
  40ffe6:	pop    esp
  40ffe7:	jne    0x40ffb8
  40ffe9:	and    ecx,DWORD PTR [ebx]
  40ffeb:	idiv   DWORD PTR [ecx-0x6]
  40ffee:	jg     0x40ffa0
  40fff0:	in     eax,0x62
  40fff2:	test   bh,bh
  40fff4:	fxch   st(1)
  40fff6:	(bad)  
  40fff7:	sbb    ah,BYTE PTR [esi+0x6f]
  40fffa:	es scas eax,DWORD PTR es:[edi]
  40fffc:	xor    ecx,DWORD PTR [esi]
  40fffe:	push   ds
  40ffff:	cmp    eax,0x7ed237c
  410004:	xchg   ecx,eax
  410005:	aas    
  410006:	int    0x3b
  410008:	pop    edi
  410009:	cmc    
  41000a:	mov    bh,0xeb
  41000c:	xchg   edx,eax
  41000d:	stos   DWORD PTR es:[edi],eax
  41000e:	push   esi
  41000f:	dec    ebx
  410010:	sar    DWORD PTR [edx+0x22],0x5f
  410014:	ret    
  410015:	jmp    0xe4b:0xd5927cb0
  41001c:	cmp    BYTE PTR [eax+0x147a7f7e],bh
  410022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410023:	add    edx,DWORD PTR [edx-0xc]
  410026:	mov    edx,0x9fddd80c
  41002b:	mov    ecx,0x24951cbb
  410030:	stos   BYTE PTR es:[edi],al
  410031:	loopne 0x40ffea
  410033:	mov    ah,0xc8
  410035:	mov    WORD PTR ds:0x4f9a68bc,fs
  41003b:	bound  esp,QWORD PTR [ecx+ebp*4+0x39]
  41003f:	shr    BYTE PTR [eax-0x5bdd4561],1
  410045:	std    
  410046:	inc    esp
  410047:	sub    DWORD PTR [ebx],ebp
  410049:	mov    DWORD PTR [ebx-0x67],esi
  41004c:	in     al,dx
  41004d:	mov    bh,0x2f
  41004f:	sbb    al,0xa
  410051:	je     0x41000e
  410053:	dec    edi
  410054:	xor    DWORD PTR [ebx+0xd7b3e8c],esp
  41005a:	(bad)  
  41005c:	mov    bh,0xbc
  41005e:	shl    DWORD PTR [ecx],1
  410060:	repnz rcr BYTE PTR [edi+0x36],0x9
  410065:	aam    0x61
  410067:	push   ecx
  410068:	(bad)  
  41006a:	in     eax,dx
  41006b:	cwde   
  41006c:	mov    ebx,0x9de55b76
  410071:	sub    al,0x60
  410073:	loop   0x410099
  410075:	jbe    0x410066
  410077:	jl     0x410028
  410079:	jp     0x41000b
  41007b:	adc    eax,0x291eb79a
  410080:	loop   0x4100bd
  410082:	mov    esi,0xa3bfe490
  410087:	lods   al,BYTE PTR ds:[esi]
  410088:	mov    edi,DWORD PTR [ebx+0x1d]
  41008b:	xchg   edi,eax
  41008c:	shl    BYTE PTR [ebx+ecx*2+0x39],0xb6
  410091:	push   ecx
  410092:	sub    al,0xd0
  410094:	mov    edi,0xe8282ca0
  410099:	arpl   WORD PTR [ecx-0x45],cx
  41009c:	mov    BYTE PTR [edx-0x26014c35],ch
  4100a2:	jle    0x4100a5
  4100a4:	loop   0x410051
  4100a6:	rcl    esi,1
  4100a8:	es cld 
  4100aa:	and    BYTE PTR [ecx],0x50
  4100ad:	dec    ebx
  4100ae:	ins    BYTE PTR es:[edi],dx
  4100af:	mov    bl,0x35
  4100b1:	or     eax,0xf7aa2a69
  4100b6:	test   DWORD PTR [eax+0x4e],ebx
  4100b9:	repz inc edx
  4100bb:	fiadd  WORD PTR [esi+0x10]
  4100be:	sbb    cl,BYTE PTR [eax-0x10]
  4100c1:	neg    ecx
  4100c3:	test   bl,bl
  4100c5:	dec    ecx
  4100c6:	in     al,dx
  4100c7:	dec    esp
  4100c8:	out    dx,al
  4100c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100ca:	hlt    
  4100cb:	mov    eax,ds:0xdbf74158
  4100d0:	push   es
  4100d1:	stc    
  4100d2:	jg     0x410061
  4100d4:	mov    al,ds:0xfdc0f6f7
  4100d9:	shl    DWORD PTR [esi-0x6e65cebe],0x80
  4100e0:	scas   eax,DWORD PTR es:[edi]
  4100e1:	out    dx,al
  4100e2:	xchg   ecx,eax
  4100e3:	jo     0x4100f5
  4100e5:	jmp    0x8728:0x6a059ad1
  4100ec:	cdq    
  4100ed:	push   esp
  4100ee:	adc    DWORD PTR [ebp-0x13e03e34],0xffffffc8
  4100f5:	daa    
  4100f6:	gs pop es
  4100f8:	fild   WORD PTR ds:0x3c11359b
  4100fe:	fld    TBYTE PTR [eax+0x61]
  410101:	inc    esp
  410102:	mov    ch,0xa8
  410104:	or     BYTE PTR [ecx],bh
  410106:	or     edi,DWORD PTR [ebx]
  410108:	lods   eax,DWORD PTR ds:[esi]
  410109:	mov    cl,dl
  41010b:	fbld   TBYTE PTR [ecx+0xd]
  41010e:	adc    al,0x91
  410110:	dec    ebp
  410111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410112:	sub    ebx,DWORD PTR [ebx-0x2f]
  410115:	ret    
  410116:	and    edx,DWORD PTR [esp+eax*2]
  410119:	fidiv  WORD PTR [ebp+0x0]
  41011c:	test   BYTE PTR [edi+0x1],0xc7
  410120:	je     0x4100bd
  410122:	xchg   cl,bh
  410124:	out    0x23,al
  410126:	ror    BYTE PTR [eax+0x38],0xae
  41012a:	data16 aaa 
  41012c:	sub    DWORD PTR [ebx-0x44111aa2],edx
  410132:	pop    DWORD PTR [ebp+edi*1-0x38]
  410136:	shr    DWORD PTR [esi+0x22],1
  410139:	jno    0x4101b9
  41013b:	xchg   ecx,eax
  41013c:	(bad)  
  41013d:	jecxz  0x41014d
  41013f:	lds    edi,FWORD PTR [ecx+esi*4+0x2fa06723]
  410146:	inc    ebx
  410147:	loop   0x41016a
  410149:	push   0x68
  41014b:	xchg   esi,eax
  41014c:	push   DWORD PTR [edx+eiz*8-0x437faeb3]
  410153:	push   0xffffffcc
  410155:	inc    edi
  410156:	inc    ecx
  410157:	fistp  QWORD PTR [ecx+ebx*1+0x53]
  41015b:	pop    esi
  41015c:	hlt    
  41015d:	or     DWORD PTR [ecx-0x2857a1fa],esp
  410163:	cmc    
  410164:	div    eax
  410166:	jne    0x4100f8
  410168:	popa   
  410169:	and    DWORD PTR [ebp+ebx*8+0x1c88c481],edx
  410170:	(bad)  
  410171:	bound  ebp,QWORD PTR [eax]
  410173:	jle    0x41011e
  410175:	sub    eax,0x75f1d078
  41017a:	ret    0x3365
  41017d:	sbb    eax,0x63db9ad0
  410182:	mov    ds:0xfe93d2c4,al
  410187:	dec    esi
  410188:	pop    edi
  410189:	jne    0x4101a7
  41018b:	pop    ecx
  41018c:	sbb    eax,0x1a332b86
  410191:	mov    eax,ds:0x6f2458d7
  410196:	xchg   bh,bl
  410198:	pop    ss
  410199:	popf   
  41019a:	jecxz  0x41017e
  41019c:	lods   al,BYTE PTR ds:[esi]
  41019d:	rcr    DWORD PTR [ebx-0x3f62f135],cl
  4101a3:	adc    al,0xbd
  4101a5:	and    ecx,edx
  4101a7:	scas   al,BYTE PTR es:[edi]
  4101a8:	ret    
  4101a9:	and    ah,bh
  4101ab:	mov    bh,0x48
  4101ad:	arpl   WORD PTR [esi+0x16e086b8],si
  4101b3:	fst    QWORD PTR [ebx-0x5542e873]
  4101b9:	shl    DWORD PTR [edi-0x4e],0x5e
  4101bd:	mov    edi,0xf008372a
  4101c2:	push   ss
  4101c3:	push   ecx
  4101c4:	jg     0x410241
  4101c6:	scas   eax,DWORD PTR es:[edi]
  4101c7:	test   al,0x17
  4101c9:	jecxz  0x410171
  4101cb:	mov    eax,ds:0x7b2af705
  4101d0:	rcl    esi,cl
  4101d2:	adc    dl,ch
  4101d4:	mov    ds:0x1ec5f259,al
  4101d9:	mov    ds:0x7b38b327,al
  4101de:	lahf   
  4101df:	sub    edx,DWORD PTR [edi+0x4f81e877]
  4101e5:	or     BYTE PTR [esi+0x66],dl
  4101e8:	push   eax
  4101e9:	popa   
  4101ea:	cld    
  4101eb:	test   DWORD PTR ds:0x5a60d0a,edx
  4101f1:	(bad)
  4101f4:	fidiv  DWORD PTR [edx]
  4101f6:	xchg   ebp,eax
  4101f7:	ins    BYTE PTR es:[edi],dx
  4101f8:	inc    edi
  4101f9:	sub    cl,BYTE PTR [ebp+0x59c408ff]
  4101ff:	ins    DWORD PTR es:[edi],dx
  410200:	add    DWORD PTR [ebp-0x3a88bd4f],ecx
  410206:	sub    esi,DWORD PTR [edx-0x67760e19]
  41020c:	jno    0x410227
  41020e:	add    al,0x81
  410210:	bound  edi,QWORD PTR [edi+0x713c40ba]
  410216:	outs   dx,DWORD PTR ds:[esi]
  410217:	jnp    0x410258
  410219:	mov    dh,0xd1
  41021b:	xor    bl,bl
  41021d:	pop    es
  41021e:	outs   dx,DWORD PTR ds:[esi]
  41021f:	and    eax,0x81626671
  410224:	lea    edi,[edi-0x1a]
  410227:	retf   
  410228:	adc    BYTE PTR [ebx],bh
  41022a:	inc    esp
  41022b:	stc    
  41022c:	das    
  41022d:	les    ebp,FWORD PTR [ebp-0x30]
  410230:	xor    esi,ebp
  410232:	stos   DWORD PTR es:[edi],eax
  410233:	pop    ebp
  410234:	dec    edi
  410235:	and    eax,0xed47c057
  41023a:	pop    ebp
  41023b:	dec    edx
  41023c:	sahf   
  41023d:	jbe    0x410215
  41023f:	mov    cl,0xfb
  410241:	fldenv [ebx+0x49]
  410244:	xchg   ecx,eax
  410245:	outs   dx,BYTE PTR ds:[esi]
  410246:	sub    BYTE PTR [edx-0x7e1636f6],0x18
  41024d:	xchg   edx,eax
  41024e:	mov    edi,0xfe0c8d7e
  410253:	sti    
  410254:	cli    
  410255:	sub    dh,bh
  410257:	inc    edx
  410258:	ret    0x782f
  41025b:	sbb    ecx,DWORD PTR [eax-0x7a]
  41025e:	inc    edi
  41025f:	sbb    eax,0xabd90de1
  410264:	fmul   QWORD PTR ds:0x5ff73ed1
  41026a:	lea    eax,[edi]
  41026c:	es xchg edi,eax
  41026e:	bound  ebp,QWORD PTR [ebx+0x4c4e0090]
  410274:	retf   0x76ff
  410277:	fidivr DWORD PTR [esi+0x2c]
  41027a:	js     0x4102f8
  41027c:	xor    esp,DWORD PTR [ecx]
  41027e:	dec    edx
  41027f:	xchg   edx,eax
  410280:	adc    BYTE PTR [edi-0x32cef6a8],bl
  410286:	mov    ds,WORD PTR [ebx]
  410288:	out    0x12,eax
  41028a:	mov    ebx,DWORD PTR [esi]
  41028c:	gs push eax
  41028e:	and    BYTE PTR [ecx-0x578bceea],al
  410294:	or     DWORD PTR [ecx+0x49],ebx
  410297:	push   es
  410298:	add    BYTE PTR [ecx+ecx*1],ah
  41029b:	std    
  41029c:	adc    ecx,DWORD PTR [esi+ebp*2]
  41029f:	mov    cl,0xba
  4102a1:	cwde   
  4102a2:	lea    ebp,[ecx]
  4102a4:	rcr    BYTE PTR [edx+edx*4+0x7b],1
  4102a8:	mov    dl,0x6
  4102aa:	jg     0x410288
  4102ac:	mov    esi,cs
  4102ae:	ins    DWORD PTR es:[edi],dx
  4102af:	inc    ecx
  4102b0:	stos   DWORD PTR es:[edi],eax
  4102b1:	jecxz  0x410274
  4102b3:	jecxz  0x41024c
  4102b5:	enter  0xb8f5,0xf
  4102b9:	xchg   edx,eax
  4102ba:	lods   al,BYTE PTR gs:[esi]
  4102bc:	mov    WORD PTR [edx-0x6fb3fe22],ss
  4102c2:	jo     0x41033d
  4102c4:	sub    dh,BYTE PTR [ebp-0x34f064aa]
  4102ca:	add    DWORD PTR [ecx+0x7a9a9d2f],edx
  4102d0:	jl     0x410332
  4102d2:	mov    bl,0x3d
  4102d4:	xchg   BYTE PTR [esi+ebx*4+0x794393e2],dl
  4102db:	push   ebx
  4102dc:	int3   
  4102dd:	or     al,0x7
  4102df:	ret    
  4102e0:	push   ds
  4102e1:	les    eax,FWORD PTR [edi+edx*8-0xa]
  4102e5:	inc    ecx
  4102e6:	xchg   esi,eax
  4102e7:	dec    edx
  4102e8:	jmp    0x4102d7
  4102ea:	test   BYTE PTR [ecx+0x35a1648d],0x78
  4102f1:	jns    0x41032d
  4102f3:	push   esp
  4102f4:	sub    bl,BYTE PTR [ebp-0x61]
  4102f7:	or     esi,DWORD PTR [ebx+0x75]
  4102fa:	stos   BYTE PTR es:[edi],al
  4102fb:	jmp    0x41032e
  4102fd:	jbe    0x41030e
  4102ff:	cmp    ecx,DWORD PTR [edi-0x46]
  410302:	test   eax,0x6af38b72
  410308:	iret   
  410309:	loopne 0x410322
  41030b:	aam    0x99
  41030d:	and    al,BYTE PTR [ecx-0xa9968ba]
  410313:	push   ds
  410314:	mov    al,0x95
  410316:	ins    DWORD PTR es:[edi],dx
  410317:	dec    eax
  410318:	retf   
  410319:	xor    eax,DWORD PTR [edx-0x50aa7a99]
  41031f:	les    esi,FWORD PTR [edi+esi*8+0x32056ae0]
  410326:	adc    esp,esi
  410328:	repz mov ah,0xdc
  41032b:	pop    es
  41032c:	outs   dx,DWORD PTR ds:[esi]
  41032d:	cdq    
  41032e:	dec    edx
  41032f:	push   ebx
  410330:	sbb    DWORD PTR ds:0xbbc985b,0xf12798f
  41033a:	xor    al,0x5f
  41033c:	lock aam 0x64
  41033f:	push   ebp
  410340:	das    
  410341:	gs jmp 0xf298:0x41ec437c
  410349:	dec    edi
  41034a:	or     DWORD PTR ds:0x633749e,esp
  410350:	cmc    
  410351:	xchg   ecx,eax
  410352:	lahf   
  410353:	pop    edi
  410354:	popa   
  410355:	xchg   ebp,eax
  410356:	xor    bh,BYTE PTR [eiz*1-0x5b51e170]
  41035d:	inc    ebp
  41035e:	mov    esi,0xea7a8f7f
  410363:	aam    0x68
  410365:	outs   dx,DWORD PTR ds:[esi]
  410366:	jne    0x4102f6
  410368:	pop    esp
  410369:	in     eax,0xee
  41036b:	ret    0x28d7
  41036e:	adc    ebp,DWORD PTR [edi-0x63]
  410371:	or     DWORD PTR [ebp+0x2eec91ee],esp
  410377:	fdiv   st(2),st
  410379:	and    DWORD PTR [edx],0xffffffba
  41037c:	ficom  DWORD PTR [edi-0x4]
  41037f:	adc    BYTE PTR [ebp-0x4a],al
  410382:	sub    al,0xa
  410384:	(bad)  
  410385:	(bad)  
  410386:	pop    ds
  410387:	and    eax,0xe4784d7
  41038c:	dec    edx
  41038d:	sahf   
  41038e:	daa    
  41038f:	dec    ebp
  410390:	in     eax,dx
  410391:	or     eax,0x2fca3fd3
  410396:	sbb    eax,0x9a70fdf0
  41039b:	mov    bh,0xf2
  41039d:	aaa    
  41039e:	sahf   
  41039f:	into   
  4103a0:	retf   0xddb9
  4103a3:	xchg   edi,eax
  4103a4:	(bad)
  4103a8:	mov    es,WORD PTR [ebp-0x17aaf433]
  4103ae:	aam    0x6c
  4103b0:	jae    0x410425
  4103b2:	adc    al,0x62
  4103b4:	(bad)  
  4103b6:	dec    ebx
  4103b7:	cmp    eax,0x47c027b5
  4103bc:	movups xmm5,XMMWORD PTR [esi+eiz*8]
  4103c0:	sbb    DWORD PTR [ebx+0x45e10ba9],edx
  4103c6:	sub    al,0xcb
  4103c8:	stos   BYTE PTR es:[edi],al
  4103c9:	dec    esp
  4103ca:	or     esi,eax
  4103cc:	ret    
  4103cd:	push   ecx
  4103ce:	push   0x9512e0ef
  4103d3:	xchg   esi,eax
  4103d4:	mov    esi,0x9485be7
  4103d9:	jbe    0x41040a
  4103db:	mov    edx,edx
  4103dd:	xchg   ebx,eax
  4103de:	fs loope 0x410424
  4103e1:	cld    
  4103e2:	cld    
  4103e3:	outs   dx,DWORD PTR ds:[esi]
  4103e4:	and    BYTE PTR [eax+0x2f0b6ad5],bl
  4103ea:	scas   al,BYTE PTR es:[edi]
  4103eb:	mov    al,ds:0x519b247
  4103f0:	xor    al,0x90
  4103f2:	mov    al,ds:0x8e413452
  4103f7:	call   0xb3c0f638
  4103fc:	push   edx
  4103fd:	aas    
  4103fe:	dec    ecx
  4103ff:	lea    edi,[edx-0x55]
  410402:	(bad)  
  410403:	(bad)  
  410404:	in     al,0x10
  410406:	jmp    0x122a:0xa7a1b85f
  41040d:	lods   al,BYTE PTR ds:[esi]
  41040e:	imul   esp,DWORD PTR [eax+eax*8-0x65],0x17
  410413:	mov    ds:0xd54fe989,eax
  410418:	jmp    0x9d99:0xe2a31b50
  41041f:	fcmovnbe st,st(7)
  410421:	mov    edi,0x13a5c6fc
  410426:	mov    bl,0x9f
  410428:	das    
  410429:	and    DWORD PTR [edx-0x3a7a4b5c],ebx
  41042f:	lods   eax,DWORD PTR ds:[esi]
  410430:	frstor [edx+ebp*1]
  410433:	jmp    0xd2af:0xacbf586c
  41043a:	push   0x1890f26c
  41043f:	dec    ebx
  410440:	int    0x3b
  410442:	ins    DWORD PTR es:[edi],dx
  410443:	cmc    
  410444:	aad    0x9f
  410446:	push   ebx
  410447:	dec    eax
  410448:	ret    
  410449:	push   ebx
  41044a:	cmc    
  41044b:	rcr    BYTE PTR [eax+0x1f694b69],1
  410451:	xlat   BYTE PTR ds:[ebx]
  410452:	or     BYTE PTR [esi+0x25],dl
  410455:	es cli 
  410457:	neg    BYTE PTR [edi-0x9]
  41045a:	mov    dh,0x6
  41045c:	mov    dh,0x9d
  41045e:	std    
  41045f:	mov    ecx,0x7c012944
  410464:	out    dx,al
  410465:	xchg   esi,eax
  410466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410468:	pop    esp
  410469:	repz sub edi,ebx
  41046c:	ret    
  41046d:	adc    al,0xcb
  41046f:	xor    al,0x64
  410471:	sub    BYTE PTR [edx+0x50],bl
  410474:	xchg   esp,eax
  410475:	mov    eax,ds
  410477:	and    edx,DWORD PTR [ebx+eiz*4-0x4636fc46]
  41047e:	jmp    0x3a8a9ddd
  410483:	scas   eax,DWORD PTR es:[edi]
  410484:	int    0x58
  410486:	and    al,0x35
  410488:	cwde   
  410489:	(bad)  
  41048a:	in     al,dx
  41048b:	mov    al,ah
  41048d:	mov    al,0xb3
  41048f:	add    DWORD PTR [eax-0x28],0x4e129d4d
  410496:	(bad)  
  410498:	jmp    0x41048e
  41049a:	dec    eax
  41049b:	ds fwait
  41049d:	les    edi,FWORD PTR [esi+0x673bbc71]
  4104a3:	cmp    edx,DWORD PTR [edx+0x52]
  4104a6:	icebp  
  4104a7:	sub    eax,DWORD PTR [edx-0x22]
  4104aa:	iret   
  4104ab:	mov    ch,0xb4
  4104ad:	add    ecx,DWORD PTR gs:[ebp-0x14]
  4104b1:	lock pop es
  4104b3:	(bad)  
  4104b4:	cdq    
  4104b5:	repz aad 0x79
  4104b8:	adc    ebx,edx
  4104ba:	dec    DWORD PTR [eax+eiz*1]
  4104bd:	imul   BYTE PTR [ecx]
  4104bf:	pop    ebp
  4104c0:	xchg   ebp,eax
  4104c1:	mov    ds,WORD PTR ss:[ecx-0x755427eb]
  4104c8:	ficomp WORD PTR [esi]
  4104ca:	and    ch,BYTE PTR [eax+edi*8-0x56]
  4104ce:	sbb    eax,0x59064c1d
  4104d3:	daa    
  4104d4:	js     0x41049d
  4104d6:	mov    dl,0x7d
  4104d8:	mov    cl,0xc7
  4104da:	das    
  4104db:	and    ebx,DWORD PTR [ebp+0x3cbd859b]
  4104e1:	imul   esp,DWORD PTR [eax],0x2e
  4104e4:	imul   eax,DWORD PTR [ebx+0x7f90ca16]
  4104eb:	dec    ecx
  4104ec:	popa   
  4104ed:	push   ebp
  4104ee:	rol    DWORD PTR [ecx],0x1d
  4104f1:	sbb    DWORD PTR [ecx+eiz*4],0x34
  4104f5:	mov    dh,0x93
  4104f7:	rcl    BYTE PTR [ebx],cl
  4104f9:	sbb    al,0xd0
  4104fb:	les    edi,FWORD PTR [esi+0xe]
  4104fe:	cmp    bl,BYTE PTR [ecx+0x179d7246]
  410504:	add    BYTE PTR [esi-0x59],0x35
  410508:	int    0xe7
  41050a:	out    dx,al
  41050b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41050c:	xor    DWORD PTR [ecx+eax*8+0x39],esi
  410510:	jmp    0x4104a7
  410512:	pop    esp
  410513:	inc    esp
  410514:	inc    ecx
  410515:	pop    ebp
  410516:	cmc    
  410517:	or     DWORD PTR [ebx],edx
  410519:	rol    BYTE PTR ds:0x536418c8,cl
  41051f:	inc    ebx
  410520:	movups XMMWORD PTR [esi-0xc68be8d],xmm4
  410527:	pop    ss
  410528:	adc    BYTE PTR [edi+ebx*4+0x428b47bc],0xee
  410530:	sar    DWORD PTR [ebp-0x401a5d01],1
  410536:	inc    esi
  410537:	pop    esi
  410538:	aam    0xda
  41053a:	jbe    0x410539
  41053c:	leave  
  41053d:	mov    bh,0x43
  41053f:	arpl   WORD PTR [edi+0xb47350],ax
  410545:	and    al,0xaa
  410547:	sub    edx,DWORD PTR [eax]
  410549:	lahf   
  41054a:	sti    
  41054b:	test   eax,0xfa2bb24c
  410550:	dec    DWORD PTR [eax]
  410552:	test   BYTE PTR [ecx],ah
  410554:	aad    0xce
  410556:	ins    BYTE PTR es:[edi],dx
  410557:	push   eax
  410558:	jg     0x410566
  41055a:	inc    edi
  41055b:	mov    ?,WORD PTR [ebp+0x2a]
  41055e:	repnz push ds
  410560:	mov    esi,0xfe76c492
  410565:	fisttp QWORD PTR [ebx-0x33]
  410568:	jp     0x4105da
  41056a:	in     al,dx
  41056b:	aam    0xe0
  41056d:	dec    eax
  41056e:	sbb    eax,0x8e8ebc34
  410573:	std    
  410574:	xchg   esp,eax
  410575:	outs   dx,BYTE PTR ds:[esi]
  410576:	xchg   edx,eax
  410577:	jg     0x410598
  410579:	adc    DWORD PTR ds:0xdf45060e,ebx
  41057f:	pop    ebp
  410580:	inc    esi
  410581:	aam    0xa1
  410583:	dec    edi
  410584:	add    BYTE PTR [edx+0x3c],bl
  410587:	test   al,0xf8
  410589:	outs   dx,BYTE PTR ds:[esi]
  41058a:	pop    esp
  41058b:	jno    0x41059f
  41058d:	push   edx
  41058e:	fimul  WORD PTR [eax-0x392a9a99]
  410594:	retf   0xd44f
  410597:	mov    WORD PTR [ecx+0x12],?
  41059a:	cmc    
  41059b:	or     DWORD PTR [ecx],eax
  41059d:	rcl    eax,1
  41059f:	scas   al,BYTE PTR es:[edi]
  4105a0:	ror    BYTE PTR [edx],cl
  4105a2:	push   ebx
  4105a3:	fxch   st(1)
  4105a5:	stos   DWORD PTR es:[edi],eax
  4105a6:	hlt    
  4105a7:	aaa    
  4105a8:	mov    ebx,0x8d5bf4db
  4105ad:	xor    ah,BYTE PTR [edi-0x46bf6c8b]
  4105b3:	adc    ecx,0x658e58aa
  4105b9:	scas   al,BYTE PTR es:[edi]
  4105ba:	inc    ebx
  4105bb:	push   0xb4ad688c
  4105c0:	pop    ebx
  4105c1:	xchg   edx,eax
  4105c2:	dec    esp
  4105c3:	push   edx
  4105c4:	sub    eax,0x8c3750d7
  4105c9:	cmp    al,0xdb
  4105cb:	ret    0xe9a9
  4105ce:	leave  
  4105cf:	bnd ret 
  4105d1:	repnz inc ebp
  4105d3:	mov    ah,0x66
  4105d5:	cli    
  4105d6:	push   ss
  4105d7:	or     edi,eax
  4105d9:	adc    al,0xbb
  4105db:	int    0xf6
  4105dd:	pop    ss
  4105de:	mov    ebx,DWORD PTR [edi+ecx*8+0x64aa2012]
  4105e5:	push   edi
  4105e6:	(bad)  
  4105e7:	or     al,0x59
  4105e9:	push   es
  4105ea:	sbb    bh,BYTE PTR [eax+ebx*1-0x325f5b29]
  4105f1:	mov    ecx,0xae1ba6b3
  4105f6:	jo     0x41066f
  4105f8:	sub    dh,BYTE PTR [edi-0x61]
  4105fb:	(bad)  [eax+0x74]
  4105fe:	fucom  st(4)
  410600:	add    eax,0xf9d2c2fa
  410605:	retf   
  410606:	xlat   BYTE PTR ds:[ebx]
  410607:	mov    dl,al
  410609:	fld    TBYTE PTR [eax-0x61]
  41060c:	inc    ebp
  41060d:	jge    0x410627
  41060f:	pop    ss
  410610:	xor    edi,edx
  410612:	nop
  410613:	sub    eax,0xcf64c3de
  410618:	jns    0x410689
  41061a:	xchg   ch,dh
  41061c:	(bad)
  41061f:	and    al,BYTE PTR [edi]
  410621:	pop    edi
  410622:	int3   
  410623:	cmp    BYTE PTR ds:0x594b3f4b,0x94
  41062a:	cs xchg edx,eax
  41062c:	ins    BYTE PTR es:[edi],dx
  41062d:	sub    BYTE PTR [eax+0x6e7538c6],0x25
  410634:	push   ds
  410635:	fs gs ffree st(6)
  410639:	ss loop 0x410650
  41063c:	sbb    ah,BYTE PTR [esi]
  41063e:	push   0x99383b28
  410643:	pusha  
  410644:	lea    edx,[edx+0x13]
  410647:	pop    esi
  410648:	jns    0x41066f
  41064a:	int3   
  41064b:	jns    0x410629
  41064d:	xor    al,0x59
  41064f:	mov    ecx,0xdb4475ad
  410654:	cs adc al,0x8c
  410657:	sahf   
  410658:	xchg   esp,eax
  410659:	jb     0x410655
  41065b:	mov    ?,WORD PTR [ebx-0x69]
  41065e:	loopne 0x4106b5
  410660:	sub    al,0x58
  410662:	outs   dx,BYTE PTR ds:[esi]
  410663:	dec    ebx
  410664:	dec    edx
  410665:	fdiv   st,st(4)
  410667:	out    dx,al
  410668:	cld    
  410669:	aad    0x17
  41066b:	cmp    BYTE PTR [edx+edi*8-0x727fa3d8],dl
  410672:	jbe    0x410616
  410674:	enter  0x79b2,0x41
  410678:	lods   al,BYTE PTR ds:[esi]
  410679:	fldenv [ebx+0x3d]
  41067c:	adc    dl,BYTE PTR [esi+0x23033fc5]
  410682:	rcl    BYTE PTR [eax-0x1f],1
  410685:	outs   dx,DWORD PTR ds:[esi]
  410686:	adc    al,0x94
  410688:	in     eax,0xf0
  41068a:	mov    ds:0x5111fcc5,eax
  41068f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410690:	jbe    0x4106df
  410692:	popaw  
  410694:	les    ebp,FWORD PTR [edi]
  410696:	jp     0x4106b8
  410698:	int    0xcd
  41069a:	xchg   edi,eax
  41069b:	xchg   edx,eax
  41069c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41069d:	jo     0x410641
  41069f:	data16 in al,0x47
  4106a2:	pop    esp
  4106a3:	or     edx,DWORD PTR [esi-0xd]
  4106a6:	les    edx,FWORD PTR [ebx+eiz*1]
  4106a9:	test   BYTE PTR [edi],bl
  4106ab:	push   eax
  4106ac:	push   0xdf356a1d
  4106b1:	push   0xf380a3b2
  4106b6:	add    dh,BYTE PTR [esi-0x6b942afe]
  4106bc:	outs   dx,DWORD PTR ds:[esi]
  4106bd:	out    0x65,eax
  4106bf:	mov    al,BYTE PTR ss:[ecx-0x76]
  4106c3:	push   esi
  4106c4:	dec    edi
  4106c5:	fsqrt  
  4106c7:	bound  esp,QWORD PTR [esi-0x40]
  4106ca:	pushf  
  4106cb:	add    esi,DWORD PTR [ebx]
  4106cd:	cdq    
  4106ce:	xchg   ecx,eax
  4106cf:	xchg   ebx,eax
  4106d0:	jle    0x410657
  4106d2:	fstp   QWORD PTR [ecx-0x57b84d8a]
  4106d8:	ins    DWORD PTR es:[edi],dx
  4106d9:	add    BYTE PTR fs:[ecx+0x28],0x9
  4106de:	mov    bh,0x99
  4106e0:	mov    cl,0xd2
  4106e2:	(bad)  
  4106e4:	mov    esp,0xb5f9f09a
  4106e9:	or     edi,edx
  4106eb:	jae    0x410707
  4106ed:	jne    0x41070e
  4106ef:	dec    ecx
  4106f0:	enter  0xed2,0xa5
  4106f4:	aam    0xab
  4106f6:	rcr    bl,0x17
  4106f9:	imul   edx,DWORD PTR [eax-0x64a0d0ce],0xd7d19473
  410703:	int    0x5e
  410705:	pop    edx
  410706:	inc    esp
  410707:	xchg   ecx,eax
  410708:	or     eax,0xc12a0270
  41070d:	cld    
  41070e:	dec    ecx
  41070f:	ss call 0xefa0ca81
  410715:	outs   dx,BYTE PTR ds:[esi]
  410716:	mov    eax,0x4474df68
  41071b:	adc    esp,DWORD PTR [ebx-0x21]
  41071e:	(bad)  
  41071f:	outs   dx,DWORD PTR ds:[esi]
  410720:	jb     0x410796
  410722:	es and eax,0x72c6b903
  410728:	adc    ebp,DWORD PTR [ebx]
  41072a:	lahf   
  41072b:	push   edi
  41072c:	mov    cl,0x3b
  41072e:	inc    edi
  41072f:	jecxz  0x410710
  410731:	into   
  410732:	popa   
  410733:	mov    cl,0x51
  410735:	mov    ds:0x32bc6092,al
  41073a:	fld    QWORD PTR [ebp+esi*2+0x1ae33a4f]
  410741:	enter  0xaba0,0x7c
  410745:	ret    
  410746:	or     DWORD PTR [ecx],edx
  410748:	pop    ecx
  410749:	dec    ebp
  41074a:	xor    BYTE PTR [ebp+0x30],ch
  41074d:	sbb    al,0x91
  41074f:	ja     0x410788
  410751:	scas   eax,DWORD PTR es:[edi]
  410752:	ss cwde 
  410754:	ficom  WORD PTR ds:0x49ba3270
  41075a:	push   ecx
  41075b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41075c:	push   ss
  41075d:	fmul   DWORD PTR gs:[ecx+0x78]
  410761:	outs   dx,BYTE PTR ds:[esi]
  410762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410763:	cwde   
  410764:	mov    WORD PTR [eax+0xa],gs
  410767:	scas   eax,DWORD PTR es:[edi]
  410768:	popa   
  410769:	xchg   BYTE PTR gs:[eax+ebx*1+0x538d5d49],dl
  410771:	scas   eax,DWORD PTR es:[edi]
  410772:	icebp  
  410773:	scas   eax,DWORD PTR es:[edi]
  410774:	test   bh,bh
  410776:	pop    esi
  410777:	in     al,dx
  410778:	loope  0x4106fe
  41077a:	xchg   esi,edi
  41077c:	lahf   
  41077d:	cmp    edx,DWORD PTR gs:[edi+0x45215bfa]
  410784:	arpl   WORD PTR [esi+0x1f],bp
  410787:	scas   eax,DWORD PTR es:[edi]
  410788:	cmp    DWORD PTR [ebx-0x36],ebp
  41078b:	pop    eax
  41078c:	add    eax,0x432267e8
  410791:	sbb    edi,ebx
  410793:	fadd   DWORD PTR [ecx+esi*2]
  410796:	(bad)  
  410797:	cwde   
  410798:	loope  0x4107a0
  41079a:	dec    ebx
  41079b:	scas   al,BYTE PTR es:[edi]
  41079c:	popa   
  41079d:	clc    
  41079e:	jp     0x4107f6
  4107a0:	mov    esi,0xb5b2ea43
  4107a5:	out    0xd9,eax
  4107a7:	mov    cl,0x64
  4107a9:	jge    0x410787
  4107ab:	pop    ecx
  4107ac:	mov    eax,ds:0x33e1816
  4107b1:	hlt    
  4107b2:	cmp    BYTE PTR [edx],0xcd
  4107b5:	ja     0x41078f
  4107b7:	dec    ebx
  4107b8:	dec    esp
  4107b9:	enter  0xa02,0xbf
  4107bd:	mov    al,0xd7
  4107bf:	std    
  4107c0:	jecxz  0x4107ec
  4107c2:	inc    ebp
  4107c3:	lods   eax,DWORD PTR ds:[esi]
  4107c4:	nop
  4107c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c6:	xor    al,0x3
  4107c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c9:	jns    0x410806
  4107cb:	imul   BYTE PTR [eax]
  4107cd:	mov    BYTE PTR ds:0xa3e0eaa3,bl
  4107d3:	sbb    al,0x8c
  4107d5:	call   0x8652:0x538b2dac
  4107dc:	mov    ebx,0x829c1b38
  4107e1:	xor    bh,BYTE PTR [esi]
  4107e3:	das    
  4107e4:	mov    bl,0xa8
  4107e6:	daa    
  4107e7:	push   ecx
  4107e8:	inc    eax
  4107e9:	and    eax,0xb4933bab
  4107ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ef:	lods   eax,DWORD PTR ds:[esi]
  4107f0:	sub    bh,bh
  4107f2:	out    0x66,al
  4107f4:	and    al,0xdf
  4107f6:	cdq    
  4107f7:	stos   DWORD PTR es:[edi],eax
  4107f8:	lahf   
  4107f9:	lahf   
  4107fa:	pop    ebx
  4107fb:	mov    bh,0x8b
  4107fd:	xchg   ecx,eax
  4107fe:	out    0xc8,eax
  410800:	call   0xd358:0x8d222c71
  410807:	pop    ebx
  410808:	add    eax,0x5ec41b15
  41080d:	add    ah,BYTE PTR [edi+ecx*2-0x159da266]
  410814:	int    0x95
  410816:	jecxz  0x410829
  410818:	in     eax,dx
  410819:	(bad)  
  41081a:	mov    ecx,0xb10062bc
  41081f:	jle    0x410886
  410821:	and    BYTE PTR [esi],ch
  410823:	lock mov esi,0xe7fcfd4d
  410829:	mov    ds:0x18b8f9cf,eax
  41082e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41082f:	pop    ebx
  410830:	(bad)  
  410831:	shl    DWORD PTR [ebx+0x5d],cl
  410834:	in     al,0x9e
  410836:	push   0xd5f145e5
  41083b:	adc    DWORD PTR [ebp+0x4d1ab0c6],edx
  410841:	push   ecx
  410842:	lea    edi,[ebx]
  410844:	outs   dx,BYTE PTR ds:[esi]
  410845:	mov    esi,0x397115e0
  41084a:	cmp    ah,BYTE PTR ds:0x24db75c6
  410850:	mov    edi,cs
  410852:	jle    0x410807
  410854:	xor    DWORD PTR [eax+0x76],ebx
  410857:	test   BYTE PTR [edx-0x9],ah
  41085a:	add    DWORD PTR [ecx],ecx
  41085c:	mov    ch,0x33
  41085e:	dec    ebp
  41085f:	xor    ah,BYTE PTR [ebx+0x51]
  410862:	push   edi
  410863:	dec    ebx
  410864:	pop    edx
  410865:	rol    DWORD PTR [edi+0xe6fa23d],1
  41086b:	fisub  DWORD PTR [edi+eiz*1]
  41086e:	pop    esp
  41086f:	mov    ds:0xb93b0c16,al
  410874:	push   edx
  410875:	mov    dh,0x93
  410877:	in     al,dx
  410878:	and    eax,0xe57d2dc8
  41087d:	lea    edx,[edx-0x80]
  410880:	loopne 0x41086d
  410882:	and    esp,DWORD PTR [esi+0x72ab3df4]
  410888:	adc    edx,DWORD PTR [esi-0x75]
  41088b:	and    esi,DWORD PTR [ebx+0x3a]
  41088e:	cmp    ebx,DWORD PTR [edi+0xfd28951]
  410894:	inc    ebx
  410895:	fistp  QWORD PTR [edi]
  410897:	xor    al,0x6a
  410899:	ins    BYTE PTR es:[edi],dx
  41089a:	add    BYTE PTR [esi],ah
  41089c:	jl     0x4108b9
  41089e:	jns    0x4108eb
  4108a0:	push   ss
  4108a1:	loope  0x4108d5
  4108a3:	fs addr16 inc eax
  4108a6:	shr    BYTE PTR [eax-0x4539202],0x70
  4108ad:	out    dx,al
  4108ae:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108b0:	jl     0x410916
  4108b2:	fcomp  QWORD PTR [ebp+0x1f]
  4108b5:	cmp    al,0x6e
  4108b7:	cwde   
  4108b8:	adc    ah,0x76
  4108bb:	hlt    
  4108bc:	xchg   esi,eax
  4108bd:	fwait
  4108be:	cs inc ecx
  4108c0:	or     edx,DWORD PTR [ecx+0x5ab2ca87]
  4108c6:	and    ah,BYTE PTR [ecx-0x4ae61d4e]
  4108cc:	fnstsw WORD PTR [ebx+0x7aad10f]
  4108d2:	call   0x2a76:0xd0ed7d30
  4108d9:	daa    
  4108da:	and    edx,DWORD PTR [edx+0x56c6b25c]
  4108e0:	mov    bh,0xb8
  4108e2:	jns    0x4108a1
  4108e4:	ret    
  4108e5:	js     0x4108c9
  4108e7:	jge    0x41087e
  4108e9:	scas   eax,DWORD PTR es:[edi]
  4108ea:	jnp    0x41091d
  4108ec:	mov    eax,ds:0xf5517f63
  4108f1:	or     ecx,eax
  4108f3:	mov    esi,0xa8c2e68b
  4108f9:	leave  
  4108fa:	push   es
  4108fb:	rcr    cl,0xe6
  4108fe:	push   edx
  4108ff:	sub    al,0xdc
  410901:	stos   BYTE PTR es:[edi],al
  410902:	push   0xffffffe8
  410904:	and    eax,DWORD PTR [edi-0xaf4cf8f]
  41090a:	aas    
  41090b:	rcr    bh,0x47
  41090e:	out    0xac,al
  410910:	cmp    al,0x85
  410912:	and    esi,edi
  410914:	sbb    BYTE PTR ds:0x6d8a6288,al
  41091a:	clc    
  41091b:	rcl    DWORD PTR [edx],1
  41091d:	adc    ah,BYTE PTR [edi]
  41091f:	shl    DWORD PTR [ebp-0x64dbcfea],0x4b
  410926:	sub    ebx,DWORD PTR [edx]
  410928:	and    DWORD PTR [ecx+0x76],esp
  41092b:	inc    ebx
  41092c:	cwde   
  41092d:	push   ss
  41092e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41092f:	je     0x410914
  410931:	and    eax,0x7491e0c0
  410936:	sbb    edi,DWORD PTR [eax+0x46]
  410939:	aad    0xde
  41093b:	in     eax,0xbd
  41093d:	and    al,0x51
  41093f:	sub    BYTE PTR [esi],cl
  410941:	dec    edi
  410942:	and    DWORD PTR [eax+0x7f],ecx
  410945:	loopne 0x410903
  410947:	icebp  
  410948:	mov    bh,0xaf
  41094a:	push   esi
  41094b:	scas   al,BYTE PTR es:[edi]
  41094c:	cdq    
  41094d:	mov    ebp,0x4ab0b5bc
  410952:	jge    0x410944
  410954:	outs   dx,BYTE PTR ds:[esi]
  410955:	fsubr  QWORD PTR [eax+0x3b]
  410958:	mov    ecx,0x767683e8
  41095d:	push   es
  41095e:	mov    ?,WORD PTR [edx-0x4]
  410961:	add    ah,BYTE PTR [edi-0x2c]
  410964:	sbb    ecx,esi
  410966:	push   eax
  410967:	adc    DWORD PTR [edi],ecx
  410969:	adc    BYTE PTR [esi],0x96
  41096c:	retf   
  41096d:	dec    edi
  41096e:	mov    eax,0x8aea0c7
  410973:	(bad)  
  410974:	mov    ebx,0x3f1e7c76
  410979:	push   0xffffffd0
  41097b:	push   ebx
  41097c:	cmp    eax,0x33c1f3f
  410981:	jno    0x410972
  410983:	pop    edi
  410984:	scas   al,BYTE PTR es:[edi]
  410985:	mov    BYTE PTR [edi-0x31],cl
  410988:	push   edi
  410989:	in     eax,0x98
  41098b:	jns    0x410988
  41098d:	jns    0x4109e3
  41098f:	fst    st(5)
  410991:	mov    bl,0x53
  410993:	test   BYTE PTR [edi+edx*4],dh
  410996:	pop    es
  410997:	daa    
  410998:	test   dl,0xf9
  41099b:	push   ecx
  41099c:	je     0x410a07
  41099e:	nop
  41099f:	xor    al,0x1f
  4109a1:	jle    0x4109b2
  4109a3:	mov    ebx,DWORD PTR [edi]
  4109a5:	xor    BYTE PTR [ecx+0x16be0c51],cl
  4109ab:	mov    ah,0xdb
  4109ad:	inc    ebx
  4109ae:	stos   BYTE PTR es:[edi],al
  4109af:	pop    esp
  4109b0:	sbb    al,0x40
  4109b2:	xor    BYTE PTR [ebx],cl
  4109b4:	ror    DWORD PTR [ebx+0x6c],1
  4109b7:	sbb    ch,ch
  4109b9:	out    dx,ax
  4109bb:	sub    eax,0xd52a23b9
  4109c0:	in     eax,dx
  4109c1:	add    DWORD PTR [ebx+esi*1],eax
  4109c4:	xchg   DWORD PTR [ecx-0x36],ebp
  4109c7:	clc    
  4109c8:	daa    
  4109c9:	(bad)  [esp+edx*2-0x5f4e3e5b]
  4109d0:	into   
  4109d1:	and    BYTE PTR ds:0xa087ba7e,0x6d
  4109d8:	jns    0x4109a4
  4109da:	add    esi,DWORD PTR [ecx+0x6f560929]
  4109e0:	out    dx,al
  4109e1:	mov    ebx,0x483a4e64
  4109e6:	mov    ch,0x81
  4109e8:	mov    bh,0x7c
  4109ea:	(bad)  
  4109eb:	call   0xcb54:0x8e6c2b43
  4109f2:	test   eax,0x9bc16cfe
  4109f7:	das    
  4109f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109f9:	push   0xffffffa7
  4109fb:	fnstenv [esi-0x178833e7]
  410a01:	and    ebp,edx
  410a03:	bound  ebp,QWORD PTR [edx+0x3a]
  410a06:	mov    BYTE PTR ds:0x112c683f,dh
  410a0c:	or     eax,0xb0d7a784
  410a11:	js     0x410a38
  410a13:	loopne 0x4109b7
  410a15:	ror    BYTE PTR [ebx-0x73],0xcc
  410a19:	pushf  
  410a1a:	lahf   
  410a1b:	ds call 0x9119:0x609c1392
  410a23:	out    0x24,al
  410a25:	mov    edi,0xde90cce7
  410a2a:	add    al,0x1b
  410a2c:	sub    eax,0xcc91fd02
  410a31:	rol    ah,0xfd
  410a34:	scas   al,BYTE PTR es:[edi]
  410a35:	sbb    edi,DWORD PTR [ebx-0x47]
  410a38:	push   ebp
  410a39:	imul   esp,ebx,0x5b
  410a3c:	out    0x7c,eax
  410a3e:	mov    ah,0x2e
  410a40:	jg     0x410a85
  410a42:	jns    0x410a27
  410a44:	jns    0x4109f0
  410a46:	or     DWORD PTR [eax-0x3],eax
  410a49:	and    ebx,DWORD PTR [edi-0x3e3465ce]
  410a4f:	push   eax
  410a50:	jno    0x410a07
  410a52:	aad    0x2a
  410a54:	(bad)  
  410a55:	out    0xd,eax
  410a57:	out    dx,eax
  410a58:	(bad)  
  410a59:	out    0x7,al
  410a5b:	mov    cl,0x17
  410a5d:	push   es
  410a5e:	pop    esp
  410a5f:	cmp    ebp,DWORD PTR [edx]
  410a61:	inc    eax
  410a62:	inc    edx
  410a63:	sub    eax,DWORD PTR [ebp-0x34]
  410a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a67:	inc    edi
  410a68:	jnp    0x410aaa
  410a6a:	(bad)  
  410a6b:	mov    esp,0x7b872743
  410a70:	rcl    BYTE PTR gs:[edx],cl
  410a73:	inc    esi
  410a74:	adc    eax,0xcbd85962
  410a79:	adc    edx,ecx
  410a7b:	pop    edx
  410a7c:	cdq    
  410a7d:	out    dx,al
  410a7e:	in     al,dx
  410a7f:	js     0x410a99
  410a81:	cs dec eax
  410a83:	cwde   
  410a84:	in     al,0x96
  410a86:	fistp  DWORD PTR [ecx-0xc684496]
  410a8c:	retf   0x6483
  410a8f:	pop    ds
  410a90:	jb     0x410a99
  410a92:	or     al,0xef
  410a94:	mov    ah,0xef
  410a96:	icebp  
  410a97:	fadd   QWORD PTR [edi-0x7bb3d6c1]
  410a9d:	(bad)  
  410a9e:	bound  eax,QWORD PTR [eax+0x175e3129]
  410aa4:	inc    esi
  410aa5:	stos   DWORD PTR es:[edi],eax
  410aa6:	sbb    eax,0xbcbb0c50
  410aab:	sbb    al,0x7d
  410aad:	push   cs
  410aae:	xchg   edi,eax
  410aaf:	adc    al,0x58
  410ab1:	jo     0x410a42
  410ab3:	dec    esi
  410ab4:	pop    es
  410ab5:	(bad)  
  410ab6:	(bad)  [ecx]
  410ab8:	test   DWORD PTR [esp+edi*8-0x4b2d6a10],esp
  410abf:	mov    ecx,0x93c63816
  410ac4:	jbe    0x410b3a
  410ac6:	dec    eax
  410ac7:	adc    eax,0xfbd399e5
  410acc:	(bad)  
  410ace:	(bad)  
  410ad0:	test   eax,0xf9f99c3b
  410ad5:	outs   dx,DWORD PTR ds:[esi]
  410ad6:	jbe    0x410ae4
  410ad8:	or     DWORD PTR [eax+0x58],0x1d4045b6
  410adf:	inc    esp
  410ae0:	jbe    0x410af2
  410ae2:	inc    edi
  410ae3:	scas   eax,DWORD PTR es:[edi]
  410ae4:	inc    ebp
  410ae5:	sub    BYTE PTR [edi-0x456f29ba],dl
  410aeb:	inc    esi
  410aec:	stos   BYTE PTR es:[edi],al
  410aed:	xchg   ecx,eax
  410aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aef:	xor    ch,bl
  410af1:	dec    esp
  410af2:	arpl   WORD PTR [ecx],cx
  410af4:	test   dl,cl
  410af6:	mov    ch,0xf8
  410af8:	nop
  410af9:	push   eax
  410afa:	dec    ebx
  410afb:	sub    DWORD PTR [ebx+esi*2-0x4e49ea0d],ebx
  410b02:	(bad)  
  410b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b04:	xchg   edx,eax
  410b05:	sub    al,BYTE PTR [edx+0x110c9b6b]
  410b0b:	and    DWORD PTR [ebx],esi
  410b0d:	dec    esi
  410b0e:	fisubr WORD PTR [edi+eiz*8+0x7eb36dd3]
  410b15:	enter  0x4b2a,0xa0
  410b19:	ds sbb bl,dh
  410b1c:	fmul   QWORD PTR [esp-0x3abd752b]
  410b23:	es popa 
  410b25:	aam    0x18
  410b27:	es sahf 
  410b29:	adc    eax,0x5e000626
  410b2e:	cmc    
  410b2f:	(bad)  
  410b30:	mov    ebp,ecx
  410b32:	cmp    esi,DWORD PTR [ecx+0x16f24c1f]
  410b38:	cmp    cl,BYTE PTR [eax]
  410b3a:	lea    ebp,[edx-0x36]
  410b3d:	mov    eax,ds:0x9fc01442
  410b42:	mov    ds,WORD PTR [ebx-0x4c]
  410b45:	or     BYTE PTR [eax],dl
  410b47:	aam    0xe3
  410b49:	mov    ds:0x9674e14,eax
  410b4e:	outs   dx,DWORD PTR ds:[esi]
  410b4f:	in     al,dx
  410b50:	pslld  mm3,QWORD PTR [ecx-0x5f]
  410b54:	outs   dx,DWORD PTR ds:[esi]
  410b55:	jne    0x410b09
  410b57:	and    BYTE PTR [ebp-0x64],0x36
  410b5b:	add    bh,BYTE PTR [ebp+0x4c7b7868]
  410b61:	ds ret 
  410b63:	sbb    al,al
  410b65:	es xor bl,ch
  410b68:	push   edx
  410b69:	pop    ss
  410b6a:	cwde   
  410b6b:	fiadd  DWORD PTR [esi-0xa]
  410b6e:	repz pop ecx
  410b70:	cdq    
  410b71:	aam    0xbe
  410b73:	sub    bl,BYTE PTR [eax+eiz*8+0x70c096f0]
  410b7a:	sub    bh,bl
  410b7c:	and    bl,BYTE PTR [ecx]
  410b7e:	xor    ah,cl
  410b80:	ins    DWORD PTR es:[edi],dx
  410b81:	jae    0x410bce
  410b83:	jle    0x410beb
  410b85:	into   
  410b86:	daa    
  410b87:	cdq    
  410b88:	mov    bl,0x33
  410b8a:	jae    0x410bb6
  410b8c:	lock jmp 0x38148ebc
  410b92:	adc    edi,DWORD PTR [esp+ebx*2+0x19]
  410b96:	adc    eax,0x687e4d86
  410b9b:	sub    al,ah
  410b9d:	jmp    0x410bf7
  410b9f:	xchg   ebp,eax
  410ba0:	(bad)  [ebx-0x49]
  410ba3:	test   BYTE PTR [edx],bh
  410ba5:	lds    ebp,FWORD PTR [eax+0x6c]
  410ba8:	ficomp DWORD PTR [ebp-0x298cb4b3]
  410bae:	ins    BYTE PTR es:[edi],dx
  410baf:	xor    eax,0x554dc838
  410bb4:	(bad)  
  410bb5:	xchg   esi,eax
  410bb6:	sub    eax,0xec244657
  410bbb:	ds pusha 
  410bbd:	leave  
  410bbe:	fwait
  410bbf:	pop    eax
  410bc0:	sbb    esp,edx
  410bc2:	stc    
  410bc3:	mov    DWORD PTR [esi+0x1a],edi
  410bc6:	loop   0x410c0d
  410bc8:	pusha  
  410bc9:	jmp    0x7d1d:0x60d197bc
  410bd0:	das    
  410bd1:	test   BYTE PTR [esi+ebp*2-0x64],0xba
  410bd6:	fdiv   st(4),st
  410bd8:	retf   
  410bd9:	fcom   QWORD PTR [edi]
  410bdb:	dec    ebp
  410bdc:	xchg   DWORD PTR [edi-0x16],eax
  410bdf:	xlat   BYTE PTR ds:[ebx]
  410be0:	pop    ebp
  410be1:	out    dx,eax
  410be2:	push   edi
  410be3:	sub    esi,DWORD PTR [ebx]
  410be5:	push   ds
  410be6:	sub    dl,dl
  410be8:	push   0xa1eeb416
  410bed:	sub    DWORD PTR [ebx+ebx*2],esi
  410bf0:	(bad)  
  410bf1:	jmp    0x7386:0x5c6b583c
  410bf8:	hlt    
  410bf9:	bound  esp,QWORD PTR [ecx+0x698d676d]
  410bff:	or     ecx,DWORD PTR [ebp+0x25]
  410c02:	test   eax,0x7cf8bb1e
  410c07:	sub    BYTE PTR [esp+edi*4],cl
  410c0a:	cwde   
  410c0b:	mov    ch,0x2e
  410c0d:	ss mov cs,edi
  410c10:	ror    dl,0x95
  410c13:	jg     0x410c22
  410c15:	jge    0x410c2b
  410c17:	(bad)  
  410c18:	xor    BYTE PTR [eax+0xc],ch
  410c1b:	mov    ds:0xf1009346,al
  410c20:	gs int 0x1b
  410c23:	mov    ebx,0xbd3b8462
  410c28:	ret    
  410c29:	xchg   edi,eax
  410c2a:	icebp  
  410c2b:	lods   eax,DWORD PTR ds:[esi]
  410c2c:	pop    ebp
  410c2d:	rcr    BYTE PTR [esi],1
  410c2f:	fisttp QWORD PTR ds:0xa71794fa
  410c35:	and    bl,BYTE PTR [ebx]
  410c37:	sub    bl,BYTE PTR [edx]
  410c39:	fiadd  WORD PTR [ecx+eax*1+0x69f4ac52]
  410c40:	out    0x75,al
  410c42:	int    0x80
  410c44:	aam    0x6d
  410c46:	test   eax,0x7c71934f
  410c4b:	adc    DWORD PTR ds:0x29d1942,ecx
  410c51:	fiadd  WORD PTR [edi+edi*4-0x1e9d99c8]
  410c58:	or     eax,0x2a8ba5f1
  410c5d:	enter  0xa018,0xda
  410c61:	call   0x8cded7a6
  410c66:	icebp  
  410c67:	xchg   cx,ax
  410c69:	push   edx
  410c6a:	mov    BYTE PTR [esi],dl
  410c6c:	adc    edx,esi
  410c6e:	dec    esi
  410c6f:	hlt    
  410c70:	stc    
  410c71:	pop    eax
  410c72:	stos   DWORD PTR es:[edi],eax
  410c73:	ror    BYTE PTR [ecx],1
  410c75:	test   al,0xfb
  410c77:	test   al,0x2
  410c79:	jns    0x410c94
  410c7b:	imul   eax,esi,0x62
  410c7e:	and    DWORD PTR [ecx+esi*8+0x36e9faa],esi
  410c85:	pop    ds
  410c86:	enter  0x8664,0xeb
  410c8a:	push   ebp
  410c8b:	push   ebx
  410c8c:	sbb    al,0x36
  410c8e:	sub    esp,DWORD PTR [ecx+0x68]
  410c91:	les    ebx,FWORD PTR [eax]
  410c93:	unpcklps xmm5,XMMWORD PTR [ebx+0x7c]
  410c97:	iret   
  410c98:	aas    
  410c99:	jmp    0xd405:0x232b50f3
  410ca0:	adc    ebp,esp
  410ca2:	leave  
  410ca3:	and    cl,dh
  410ca5:	gs push esi
  410ca7:	shl    BYTE PTR [eax+ecx*2+0x5caf53bc],cl
  410cae:	mov    bl,0x94
  410cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cb1:	mov    dh,0x57
  410cb3:	dec    edx
  410cb4:	pop    es
  410cb5:	(bad)  
  410cb6:	mov    ds:0xc42db535,eax
  410cbb:	rcl    DWORD PTR [esi],cl
  410cbd:	jns    0x410d17
  410cbf:	sbb    edx,DWORD PTR [esi-0x205c8920]
  410cc5:	lea    edx,[esi-0x6d]
  410cc8:	or     bh,BYTE PTR ds:0xdd083931
  410cce:	or     al,0x48
  410cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cd1:	sub    ebp,DWORD PTR ds:0xd5ea20c2
  410cd7:	add    BYTE PTR [esi],bl
  410cd9:	add    eax,0xfff3d694
  410cde:	xchg   ebx,eax
  410cdf:	cs nop
  410ce1:	mov    BYTE PTR [edx+0x2f992cf],dl
  410ce7:	push   es
  410ce8:	inc    BYTE PTR [edi+eiz*2]
  410ceb:	retf   0x90e5
  410cee:	or     eax,0x39fda1be
  410cf3:	fmul   QWORD PTR [edx+0x11fe81f5]
  410cf9:	xor    edx,DWORD PTR [ecx]
  410cfb:	and    bh,BYTE PTR [edi]
  410cfd:	fsub   DWORD PTR [ebx+0xa3203f2]
  410d03:	je     0x410cf2
  410d05:	(bad)  
  410d07:	adc    BYTE PTR [ebx],ch
  410d09:	jbe    0x410d00
  410d0b:	out    0xa8,eax
  410d0d:	push   edx
  410d0e:	mov    ds:0x8a4a9107,al
  410d13:	pushf  
  410d14:	xchg   BYTE PTR [edi+0x35],ch
  410d17:	(bad)  
  410d18:	(bad)
  410d1b:	dec    edi
  410d1c:	sahf   
  410d1d:	jmp    0xebec:0xe5b6
  410d23:	clc    
  410d24:	mov    DWORD PTR [ecx],edi
  410d26:	adc    DWORD PTR cs:[ebx-0x222f8146],0x8ddc94fe
  410d31:	inc    ebp
  410d33:	sub    eax,0x55b205f9
  410d38:	xchg   ebx,eax
  410d39:	sub    DWORD PTR [esi],edi
  410d3b:	or     DWORD PTR ds:0xfc0c9c7f,ecx
  410d41:	lds    ebp,FWORD PTR [esi+0x3a35b45a]
  410d47:	mov    esi,0x2adeaf7b
  410d4c:	mov    ebp,0x7a67916d
  410d51:	mov    edi,0xcab13a26
  410d56:	(bad)  
  410d57:	xor    cl,BYTE PTR [ebp+0x1054ac50]
  410d5d:	js     0x410d92
  410d5f:	stos   DWORD PTR es:[edi],eax
  410d60:	sbb    DWORD PTR [ecx-0x10a430c6],0x6b011ee0
  410d6a:	es dec edx
  410d6c:	push   ecx
  410d6d:	scas   al,BYTE PTR es:[edi]
  410d6e:	push   edi
  410d6f:	sbb    DWORD PTR [ebx-0x2ab5a6de],0x45
  410d76:	add    eax,0x811ce79
  410d7b:	adc    dh,BYTE PTR [eax]
  410d7d:	push   es
  410d7e:	sti    
  410d7f:	pop    esp
  410d80:	push   esp
  410d81:	mov    ds:0xb9b8b635,al
  410d86:	ja     0x410de6
  410d88:	mov    ecx,0x6ecc3163
  410d8d:	aam    0xf3
  410d8f:	fisub  DWORD PTR ds:0x8c099a7
  410d95:	xor    DWORD PTR [esi],ebp
  410d97:	enter  0x567c,0xd7
  410d9b:	push   es
  410d9c:	les    esi,FWORD PTR ds:0x144db079
  410da2:	repnz jmp 0xd5ed:0x5a2e2e01
  410daa:	rol    bl,cl
  410dac:	inc    ebp
  410dad:	popa   
  410dae:	xchg   ebx,eax
  410daf:	sbb    bl,BYTE PTR [edx+ebp*2+0x3d]
  410db3:	dec    edi
  410db4:	xchg   ebp,eax
  410db5:	dec    esp
  410db6:	ds xchg ebp,eax
  410db8:	mov    esp,DWORD PTR [ebx]
  410dba:	icebp  
  410dbb:	call   0x948fa797
  410dc0:	ret    
  410dc1:	xlat   BYTE PTR ds:[ebx]
  410dc2:	arpl   bx,bx
  410dc4:	cs data16 ss push dx
  410dc9:	pop    ecx
  410dca:	push   ds
  410dcb:	je     0x410d99
  410dcd:	push   esi
  410dce:	mov    ecx,0x5911c679
  410dd3:	mov    al,BYTE PTR [eax+edi*4-0x68]
  410dd7:	(bad)  
  410dd8:	int3   
  410dd9:	xchg   DWORD PTR [esi-0x1624ce6b],ecx
  410ddf:	mov    ds:0xf316ae93,al
  410de4:	scas   al,BYTE PTR es:[edi]
  410de5:	sti    
  410de6:	push   esi
  410de7:	mov    WORD PTR [ebx-0x69b204ed],cs
  410ded:	ror    esp,0xc2
  410df0:	pop    ds
  410df1:	rcr    BYTE PTR [ebx-0x789e49ac],0x9a
  410df8:	lds    eax,FWORD PTR [esi+0x72]
  410dfb:	mov    edx,esp
  410dfd:	xchg   ecx,eax
  410dfe:	repnz push esp
  410e00:	mov    al,ds:0x9362dc23
  410e05:	mov    WORD PTR [edi+ebp*1-0x21],cs
  410e09:	cmp    al,0x13
  410e0b:	sbb    eax,0xe03f0a9f
  410e10:	(bad)  
  410e11:	cdq    
  410e12:	cdq    
  410e13:	pop    es
  410e14:	push   0x84de62f7
  410e19:	pop    ecx
  410e1a:	pop    esi
  410e1b:	int3   
  410e1c:	ins    DWORD PTR es:[edi],dx
  410e1d:	mov    cl,BYTE PTR [edx+0x63]
  410e20:	shr    eax,0xe2
  410e23:	adc    BYTE PTR [edx],0x9a
  410e26:	push   edi
  410e27:	cmp    edi,DWORD PTR [ebp+0x2d]
  410e2a:	dec    esi
  410e2b:	(bad)  
  410e2c:	(bad)  
  410e2d:	jmp    0x415:0x98363141
  410e34:	sbb    DWORD PTR [ecx+0x4a08d307],ebp
  410e3a:	out    0xed,eax
  410e3c:	(bad)  
  410e3d:	xchg   edx,eax
  410e3e:	mov    esi,0xacbacc5
  410e43:	sub    ecx,DWORD PTR [ebp+ebx*1+0x431ad821]
  410e4a:	(bad)  
  410e4b:	fbstp  TBYTE PTR [eax+0x6]
  410e4e:	mov    ecx,0xaa4bc8d5
  410e53:	aam    0xbf
  410e55:	mov    dl,0x6f
  410e57:	mov    es,WORD PTR [eax+0x3c]
  410e5a:	and    eax,DWORD PTR [ecx+0x0]
  410e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e5e:	test   BYTE PTR [ecx+0x1a],ch
  410e61:	xchg   ebp,eax
  410e62:	and    eax,0xb01d2a89
  410e67:	test   BYTE PTR [esi-0x29842304],0xe8
  410e6e:	aad    0xbd
  410e70:	sub    al,0x21
  410e72:	pop    ebx
  410e73:	out    dx,al
  410e74:	push   esp
  410e75:	fild   DWORD PTR [ebx+eiz*8-0x1e]
  410e79:	push   0xffffffb5
  410e7b:	inc    ebx
  410e7c:	call   0xd955:0x937289f0
  410e83:	and    eax,0xfc9cb9f8
  410e88:	jnp    0x410e45
  410e8a:	(bad)
  410e8d:	or     al,0xcc
  410e8f:	mov    bl,0x1f
  410e91:	or     al,0x53
  410e93:	imul   esp,DWORD PTR [edi],0xffffffa8
  410e96:	(bad)  
  410e97:	fucomp st(3)
  410e99:	into   
  410e9a:	sahf   
  410e9b:	xor    edi,DWORD PTR [ebx-0x5f]
  410e9e:	pop    ebp
  410e9f:	sub    esp,edi
  410ea1:	sbb    eax,0xad092bca
  410ea6:	loopne 0x410ec6
  410ea8:	sbb    DWORD PTR [edi],ebp
  410eaa:	mov    al,0x18
  410eac:	es adc eax,0x976b6f6e
  410eb2:	arpl   WORD PTR [ecx-0x34],cx
  410eb5:	lock nop
  410eb7:	xchg   edx,eax
  410eb8:	xchg   DWORD PTR [edx],ebx
  410eba:	adc    ah,bh
  410ebc:	nop
  410ebd:	loop   0x410ed6
  410ebf:	fwait
  410ec0:	mov    dh,BYTE PTR [ebx+0x540ffff0]
  410ec6:	xchg   ebx,eax
  410ec7:	inc    esi
  410ec8:	adc    DWORD PTR [esi+ebx*2+0x5bd78cf],esi
  410ecf:	sahf   
  410ed0:	fistp  WORD PTR [ebp+0x48]
  410ed3:	add    ebp,DWORD PTR [ebp+0x745119d6]
  410ed9:	xchg   esp,eax
  410eda:	push   0x74
  410edc:	inc    eax
  410edd:	pop    eax
  410ede:	inc    eax
  410edf:	inc    ecx
  410ee0:	jns    0x410e9e
  410ee2:	imul   edx,edx,0x7ac239e7
  410ee8:	sub    eax,0x7c508804
  410eed:	jbe    0x410e8c
  410eef:	xchg   edx,eax
  410ef0:	push   cs
  410ef1:	scas   eax,DWORD PTR es:[edi]
  410ef2:	fstp   QWORD PTR [ecx-0x80]
  410ef5:	in     eax,dx
  410ef6:	push   esi
  410ef7:	mov    cl,0xbc
  410ef9:	fdiv   QWORD PTR [eax-0x62]
  410efc:	call   0x2214a635
  410f01:	jnp    0x410ef9
  410f03:	cmc    
  410f04:	adc    eax,0x8f9ee53c
  410f09:	lahf   
  410f0a:	jns    0x410f61
  410f0c:	jmp    0xff6f:0x3355e69c
  410f13:	shl    BYTE PTR [esi-0x39],0x24
  410f17:	add    ecx,DWORD PTR [ebp+0x23f1bd2c]
  410f1d:	div    BYTE PTR [edx]
  410f1f:	aam    0xc4
  410f21:	pop    ebp
  410f22:	(bad)  
  410f24:	clc    
  410f25:	lds    esp,FWORD PTR [ecx]
  410f27:	not    DWORD PTR [edi+0x11979da1]
  410f2d:	mov    edi,0x4afcbe8f
  410f32:	out    0x90,al
  410f34:	jnp    0x410ed5
  410f36:	clc    
  410f37:	xchg   BYTE PTR [eax],bl
  410f39:	push   cs
  410f3a:	clc    
  410f3b:	xor    al,0x6c
  410f3d:	inc    esi
  410f3e:	daa    
  410f3f:	fstp   TBYTE PTR [esi]
  410f41:	cmp    al,cl
  410f43:	mov    eax,0x23987a43
  410f48:	mov    eax,ds:0x16c5d849
  410f4d:	and    dh,BYTE PTR ds:0xc428ee2d
  410f53:	sti    
  410f54:	push   edx
  410f55:	jle    0x410f6e
  410f57:	xor    eax,0xb7965608
  410f5c:	mov    ?,ebp
  410f5e:	or     eax,0xea2e871b
  410f63:	gs es retf 
  410f66:	push   0xffffffad
  410f68:	lds    ebp,FWORD PTR [esp+edx*4+0x39]
  410f6c:	push   es
  410f6d:	dec    eax
  410f6e:	cli    
  410f6f:	fsubr  st,st(4)
  410f71:	sahf   
  410f72:	pop    esi
  410f73:	repnz sti 
  410f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f76:	jle    0x410f83
  410f78:	nop
  410f79:	add    BYTE PTR ds:0xb511fb2c,cl
  410f7f:	cmp    dl,ch
  410f81:	(bad)  
  410f82:	xor    cl,BYTE PTR [eax-0x57e672d7]
  410f88:	test   BYTE PTR [ebp-0x48],dh
  410f8b:	enter  0x3a0c,0xc5
  410f8f:	push   ebx
  410f90:	stc    
  410f91:	aas    
  410f92:	pop    esp
  410f93:	cmc    
  410f94:	xchg   edi,eax
  410f95:	pop    ss
  410f96:	push   edx
  410f97:	mov    bl,0xe1
  410f99:	sub    dl,dh
  410f9b:	inc    edx
  410f9c:	shl    DWORD PTR [edi],1
  410f9e:	xchg   ebx,eax
  410f9f:	cld    
  410fa0:	addr16 jbe 0x410f30
  410fa3:	inc    ebx
  410fa4:	mov    al,0x6d
  410fa6:	(bad)  
  410fa7:	rcr    dl,cl
  410fa9:	cld    
  410faa:	adc    eax,0x109848f3
  410faf:	and    al,0xf
  410fb1:	cmp    BYTE PTR [esp+esi*4+0x45],0x1e
  410fb6:	mov    edi,0xcb233402
  410fbb:	ds push eax
  410fbd:	xor    eax,eax
  410fbf:	enter  0xd8bb,0xa4
  410fc3:	add    DWORD PTR [edi-0x68],ebp
  410fc6:	je     0x410f9c
  410fc8:	les    edi,FWORD PTR [edi+edx*8]
  410fcb:	in     al,dx
  410fcc:	inc    ecx
  410fcd:	jecxz  0x41104a
  410fcf:	push   ebx
  410fd0:	jge    0xfb6cdba9
  410fd6:	inc    eax
  410fd7:	jae    0x410ff8
  410fd9:	push   esi
  410fda:	push   esp
  410fdb:	inc    ecx
  410fdc:	mov    ah,0x65
  410fde:	mov    eax,ecx
  410fe0:	dec    esi
  410fe1:	xchg   ecx,eax
  410fe2:	jb     0x410f94
  410fe4:	test   eax,0xa62921c
  410fe9:	mov    al,ds:0xfaffea12
  410fee:	cdq    
  410fef:	pop    ss
  410ff0:	ins    DWORD PTR es:[edi],dx
  410ff1:	imul   esi,esi,0x22
  410ff4:	jae    0x411073
  410ff6:	xor    al,BYTE PTR [edx]
  410ff8:	jnp    0x411043
  410ffa:	mov    ebx,0x3335f965
  410fff:	stos   BYTE PTR es:[edi],al
  411000:	fwait
  411001:	dec    eax
  411002:	icebp  
  411003:	in     al,0x98
  411005:	fwait
  411006:	pusha  
  411007:	jnp    0x41100b
  411009:	fimul  DWORD PTR [edx+edx*1]
  41100c:	aad    0x38
  41100e:	add    al,BYTE PTR [ecx-0x365e85e5]
  411014:	xor    DWORD PTR [ecx+0x2b],ebx
  411017:	jecxz  0x41101d
  411019:	inc    eax
  41101a:	sbb    eax,0x85bcab83
  41101f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411020:	pop    ss
  411021:	sar    DWORD PTR [eax+0xe],1
  411024:	out    dx,al
  411025:	lods   al,BYTE PTR ds:[esi]
  411026:	mov    esi,0xe7d6d56c
  41102b:	xor    al,0x4e
  41102d:	fdivr  QWORD PTR [ecx+0x6a548594]
  411033:	and    esi,DWORD PTR [ecx+0x2b899429]
  411039:	pop    eax
  41103a:	jmp    0x3b5ed1ed
  41103f:	adc    eax,0x80f3dcdc
  411044:	aad    0x65
  411046:	fild   QWORD PTR [ebx]
  411048:	das    
  411049:	xlat   BYTE PTR ds:[ebx]
  41104a:	inc    edx
  41104b:	push   ebx
  41104c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41104d:	xchg   edi,eax
  41104e:	call   0xa1f7:0x7844c65f
  411055:	dec    edi
  411056:	stos   DWORD PTR es:[edi],eax
  411057:	es inc ecx
  411059:	sbb    al,0x3d
  41105b:	jmp    0xb7e52b75
  411060:	daa    
  411061:	xchg   al,ah
  411063:	jns    0x41108a
  411065:	int3   
  411066:	sub    DWORD PTR [ecx-0x5f],ebx
  411069:	aaa    
  41106a:	adc    DWORD PTR [ebx+ecx*4+0x4eaae5a],esi
  411071:	stos   BYTE PTR es:[edi],al
  411072:	push   esp
  411073:	add    DWORD PTR [edi],ebp
  411075:	(bad)  
  411076:	bound  eax,QWORD PTR [edx]
  411078:	pusha  
  411079:	inc    edx
  41107a:	push   cs
  41107b:	xchg   ebx,eax
  41107c:	pushf  
  41107d:	pop    ebx
  41107e:	mov    BYTE PTR [ebx],al
  411080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411081:	jle    0x411075
  411083:	jg     0x411066
  411085:	enter  0x28d5,0xdc
  411089:	xchg   ebx,eax
  41108a:	jmp    0xeb8c:0x37af39f9
  411091:	fimul  WORD PTR [ecx+0x267fbf3d]
  411097:	mov    esp,0xb5a6320c
  41109c:	fldl2t 
  41109e:	out    0xe1,al
  4110a0:	mov    ch,0xc3
  4110a2:	test   WORD PTR [ecx],di
  4110a5:	pop    ds
  4110a6:	call   0x18417dca
  4110ab:	adc    DWORD PTR [edi-0x6f],0x29cdc6cc
  4110b2:	cld    
  4110b3:	mov    ebp,DWORD PTR [edx-0x4e]
  4110b6:	retf   
  4110b7:	cwde   
  4110b8:	push   ss
  4110b9:	bound  ebx,QWORD PTR [ecx-0x58]
  4110bc:	xor    eax,0x2d945d0d
  4110c1:	pusha  
  4110c2:	xchg   BYTE PTR [eax+0x4a],bh
  4110c5:	fistp  DWORD PTR [ecx-0x3740f40e]
  4110cb:	aas    
  4110cc:	jecxz  0x4110b9
  4110ce:	ss dec edi
  4110d0:	jecxz  0x411131
  4110d2:	scas   eax,DWORD PTR es:[edi]
  4110d3:	mov    edi,0x4fe8bfa7
  4110d8:	test   al,0xea
  4110da:	dec    ecx
  4110db:	fiadd  WORD PTR [ecx]
  4110dd:	inc    esp
  4110de:	rep stos DWORD PTR es:[edi],eax
  4110e0:	jae    0x41109d
  4110e2:	sar    DWORD PTR [ebx+0x13],0xc3
  4110e6:	mov    ds:0xec9e6c11,al
  4110eb:	fdivr  QWORD PTR [esi+ecx*2+0x63]
  4110ef:	inc    esp
  4110f0:	ret    0xf302
  4110f3:	call   0xfae8:0xb51f5fc8
  4110fa:	add    ecx,esi
  4110fc:	rol    ecx,0x5a
  4110ff:	pop    ds
  411100:	xchg   ebx,eax
  411101:	scas   eax,DWORD PTR es:[edi]
  411102:	aad    0xa5
  411104:	or     ebx,DWORD PTR [eax+0x18]
  411107:	mov    ds:0x73c516e,al
  41110c:	xchg   BYTE PTR [eax],bl
  41110e:	jne    0x411174
  411110:	sbb    BYTE PTR [eax-0x30],dh
  411113:	dec    eax
  411114:	adc    BYTE PTR [edi-0x26],0x57
  411118:	xchg   ebp,eax
  411119:	scas   al,BYTE PTR es:[edi]
  41111a:	mov    dl,0x96
  41111c:	(bad)  
  41111d:	push   ebp
  41111e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41111f:	(bad)  
  411120:	popf   
  411121:	loop   0x411187
  411123:	jo     0x411108
  411125:	(bad)  
  411126:	in     al,dx
  411127:	xchg   edi,eax
  411128:	push   ds
  411129:	outs   dx,DWORD PTR ds:[esi]
  41112a:	scas   eax,DWORD PTR es:[edi]
  41112b:	icebp  
  41112c:	adc    esi,DWORD PTR [ecx-0x70]
  41112f:	add    al,0x63
  411131:	xchg   ecx,eax
  411132:	pop    ss
  411133:	enter  0x370a,0x8f
  411137:	(bad)  
  411138:	fmul   QWORD PTR [esi-0x56]
  41113b:	mov    dh,0x10
  41113d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41113e:	fstp   TBYTE PTR [ecx+0x2aad6b66]
  411144:	sbb    al,0xff
  411146:	dec    esp
  411147:	fadd   st,st(1)
  411149:	inc    esp
  41114a:	cld    
  41114b:	dec    ebx
  41114c:	pop    edx
  41114d:	jecxz  0x411116
  41114f:	mov    edx,0x5304e7ac
  411154:	add    DWORD PTR [ebp-0x1c],esp
  411157:	sub    DWORD PTR [ecx+0x15a4f905],esp
  41115d:	rol    DWORD PTR [esi],0xb4
  411160:	out    dx,eax
  411161:	inc    edx
  411162:	jecxz  0x4111d8
  411164:	js     0x4111c5
  411166:	xor    DWORD PTR [eax+0x59],ecx
  411169:	mov    ecx,0xbe47a773
  41116e:	outs   dx,BYTE PTR ds:[esi]
  41116f:	ss pop esp
  411171:	into   
  411172:	sbb    BYTE PTR [ebx],ah
  411174:	lea    ebp,[esp+ecx*4]
  411177:	inc    eax
  411178:	and    eax,0x1ec0dd9e
  41117d:	stos   BYTE PTR es:[edi],al
  41117e:	jecxz  0x411151
  411180:	sahf   
  411181:	mov    ch,0x8f
  411183:	xor    DWORD PTR [ebx],0x71
  411186:	retf   
  411187:	mov    WORD PTR [edi-0x4b],?
  41118a:	ja     0x4111dc
  41118c:	in     al,dx
  41118d:	aad    0x41
  41118f:	inc    ebx
  411190:	xlat   BYTE PTR ds:[ebx]
  411191:	add    DWORD PTR ds:0xee224569,esi
  411197:	or     eax,0xfb5a67bf
  41119c:	inc    eax
  41119d:	xchg   BYTE PTR [eax+0x6a6947de],ch
  4111a3:	and    DWORD PTR [edx],esp
  4111a5:	adc    BYTE PTR [ecx+0x496cbf0b],dh
  4111ab:	sub    eax,ecx
  4111ad:	mov    dh,0x93
  4111af:	mov    dl,0xae
  4111b1:	add    DWORD PTR [eax+ebp*1+0x59],ebp
  4111b5:	call   0xbcce:0xf755983
  4111bc:	mov    dl,0x59
  4111be:	rol    BYTE PTR [ecx+ecx*1],cl
  4111c1:	daa    
  4111c2:	pop    esp
  4111c3:	les    edi,FWORD PTR [esi-0x3773246e]
  4111c9:	pop    edi
  4111ca:	mov    ebp,0xb931db35
  4111cf:	mov    dh,0x29
  4111d1:	aaa    
  4111d2:	jp     0x4111af
  4111d4:	xchg   ecx,eax
  4111d5:	mov    ebx,0xed572b3f
  4111da:	or     eax,0xa9aae1ee
  4111df:	push   cs
  4111e0:	stc    
  4111e1:	(bad)
  4111e5:	ins    DWORD PTR es:[edi],dx
  4111e6:	add    DWORD PTR [esi],edi
  4111e8:	inc    ebp
  4111e9:	add    bl,BYTE PTR gs:[esi-0x12]
  4111ed:	(bad)  
  4111ee:	jmp    0x411198
  4111f0:	cs pop ecx
  4111f2:	mov    ebx,0x8e08fd3f
  4111f7:	and    DWORD PTR [ebx-0x70],edi
  4111fa:	pop    es
  4111fb:	popf   
  4111fc:	and    bl,cl
  4111fe:	pop    ss
  4111ff:	xchg   BYTE PTR [ebx-0x39],ch
  411202:	das    
  411203:	inc    edx
  411204:	not    BYTE PTR [ebp+edi*1-0xcf93139]
  41120b:	out    dx,eax
  41120c:	aam    0x92
  41120e:	sbb    eax,0x9172842b
  411213:	fbstp  TBYTE PTR [eax+ecx*4-0x3bc543c1]
  41121a:	dec    eax
  41121b:	sbb    DWORD PTR [ebx-0x39],esi
  41121e:	retf   0xa30c
  411221:	sub    ah,BYTE PTR [esi]
  411223:	or     al,0xfe
  411225:	imul   ebp,DWORD PTR [esp+eiz*4],0x8049bf38
  41122c:	cmp    eax,0x1bb6c6c6
  411231:	arpl   bp,bx
  411233:	sbb    al,0xae
  411235:	(bad)  
  411236:	sub    bh,BYTE PTR [ebx-0x4c]
  411239:	out    0x6e,eax
  41123b:	dec    ecx
  41123c:	cs (bad) 
  41123e:	or     dh,cl
  411240:	sub    al,0xbe
  411242:	(bad)  
  411243:	xlat   BYTE PTR ds:[ebx]
  411244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411245:	inc    esi
  411246:	push   0xffffffdc
  411248:	and    ecx,DWORD PTR [esi]
  41124a:	sti    
  41124b:	pusha  
  41124c:	xor    ch,ah
  41124e:	xor    bl,dl
  411250:	mov    esp,0x5b09b386
  411255:	mov    al,0x91
  411257:	scas   eax,DWORD PTR es:[edi]
  411258:	ret    
  411259:	push   0x16a3cf91
  41125e:	into   
  41125f:	pusha  
  411260:	sbb    bl,0xdd
  411263:	xchg   BYTE PTR [eax+edx*2],dh
  411266:	push   ss
  411267:	stos   DWORD PTR es:[edi],eax
  411268:	ins    DWORD PTR es:[edi],dx
  411269:	or     eax,0xe2d30e99
  41126e:	mov    ebp,0x9c3ff47d
  411273:	loop   0x411274
  411275:	lods   eax,DWORD PTR ds:[esi]
  411276:	mov    cl,0xe3
  411278:	mov    al,0x13
  41127a:	push   ds
  41127b:	mov    ecx,0x6f35f657
  411280:	xchg   esi,eax
  411281:	scas   eax,DWORD PTR es:[edi]
  411282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411283:	dec    edi
  411284:	inc    esp
  411285:	mov    edi,DWORD PTR [edx+0x7b67d980]
  41128b:	xor    eax,0x79b1b0bf
  411290:	data16 mov cs,WORD PTR [edi+ebp*8]
  411294:	or     BYTE PTR [ebp+0x2c7d26ac],dh
  41129a:	push   edi
  41129b:	mov    ah,0x2
  41129d:	ins    DWORD PTR es:[edi],dx
  41129e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41129f:	dec    eax
  4112a0:	(bad)  
  4112a1:	pop    esi
  4112a2:	dec    eax
  4112a3:	and    DWORD PTR [ecx-0x2f],ecx
  4112a6:	out    dx,eax
  4112a7:	popf   
  4112a8:	fwait
  4112a9:	gs push esi
  4112ab:	inc    esi
  4112ac:	and    BYTE PTR ds:0x2134ecf1,bl
  4112b2:	outs   dx,DWORD PTR ds:[esi]
  4112b3:	jle    0x411322
  4112b5:	push   esi
  4112b6:	(bad)  
  4112b8:	stos   BYTE PTR es:[edi],al
  4112b9:	cmp    DWORD PTR [ebx-0x21961605],ebp
  4112bf:	aaa    
  4112c0:	jp     0x4112a3
  4112c2:	imul   esp,ecx,0xd78c8bed
  4112c8:	sbb    DWORD PTR [esi*4+0x3fa556ee],0x10e86984
  4112d3:	ins    DWORD PTR es:[edi],dx
  4112d4:	in     eax,dx
  4112d5:	ror    BYTE PTR [ecx+0x23],0x81
  4112d9:	in     eax,dx
  4112da:	in     al,dx
  4112db:	ss mov edi,0xb4dc3457
  4112e1:	dec    eax
  4112e2:	imul   ecx,eax,0xaf355d80
  4112e8:	mov    ebx,eax
  4112ea:	imul   ebp,DWORD PTR [eax],0xce4f0918
  4112f0:	rcl    ah,0x84
  4112f3:	out    dx,al
  4112f4:	jne    0x41135e
  4112f6:	sbb    bl,BYTE PTR [eax-0x7e]
  4112f9:	and    eax,0x9eae81c1
  4112fe:	xor    DWORD PTR [eax+edx*8+0x49468960],edi
  411305:	std    
  411306:	(bad)  
  411307:	mov    esi,DWORD PTR [ecx+0x2c350d8a]
  41130d:	loopne 0x41134b
  41130f:	cmp    al,0x23
  411311:	pop    esp
  411312:	adc    DWORD PTR [ecx+0x4c],esi
  411315:	ret    0x6f4
  411318:	add    al,0x87
  41131a:	sahf   
  41131b:	xor    DWORD PTR [ebx-0x7f],edi
  41131e:	(bad)
  411322:	mov    bh,0x54
  411324:	retf   
  411325:	pop    ecx
  411326:	push   0xf
  411328:	movmskps esp,xmm5
  41132b:	shl    BYTE PTR [ecx],0xa7
  41132e:	adc    BYTE PTR [bx-0x7f67],ah
  411333:	jae    0x411378
  411335:	retf   
  411336:	in     al,0x27
  411338:	lods   eax,DWORD PTR ds:[esi]
  411339:	repz add DWORD PTR [edx+edi*2+0x39],0xffffffbc
  41133f:	sub    edi,DWORD PTR [esi+edi*1]
  411342:	leave  
  411343:	fsubr  DWORD PTR [ecx]
  411345:	jg     0x4113a8
  411347:	(bad)  
  411348:	stc    
  411349:	xchg   ebp,eax
  41134a:	pop    edi
  41134b:	pop    eax
  41134c:	push   cs
  41134d:	sub    al,0x7e
  41134f:	dec    edx
  411350:	bound  esi,QWORD PTR [esi]
  411352:	pushf  
  411353:	push   ss
  411354:	or     esp,DWORD PTR [eax-0x4c]
  411357:	pminub mm5,mm0
  41135a:	fucomip st,st(0)
  41135c:	jno    0x411339
  41135e:	push   edx
  41135f:	sbb    BYTE PTR [ebp+0xfa9511b],dh
  411365:	dec    esi
  411366:	add    dh,BYTE PTR [ecx]
  411368:	loopne 0x411366
  41136a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41136b:	test   DWORD PTR [eax-0x4],0x11af9cd3
  411372:	cmp    BYTE PTR [ecx-0x2e51eba4],dl
  411378:	xor    edx,DWORD PTR [ebp-0x184c46fd]
  41137e:	in     al,0x2f
  411380:	fisubr WORD PTR [esp+edi*4]
  411383:	rcr    DWORD PTR [ebx],1
  411385:	mov    al,ds:0x201770de
  41138a:	rcl    BYTE PTR [eax+0x5b5b05a8],0xfc
  411391:	outs   dx,DWORD PTR ds:[esi]
  411392:	fiadd  DWORD PTR [edx-0x18]
  411395:	xchg   esp,eax
  411396:	mov    ah,0xb1
  411398:	dec    esi
  411399:	jmp    0x4113bc
  41139b:	pop    es
  41139c:	dec    esp
  41139d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41139e:	sub    BYTE PTR [edx],ah
  4113a0:	pop    edx
  4113a1:	mov    dh,0x18
  4113a3:	mov    bl,BYTE PTR [ebx+0x17]
  4113a6:	mov    ah,0x53
  4113a8:	pop    eax
  4113a9:	mov    esi,edx
  4113ab:	es in  eax,0x8e
  4113ae:	int    0x7c
  4113b0:	xor    cl,BYTE PTR [esi+0x45]
  4113b3:	jmp    0xd8db:0xc3f0129a
  4113ba:	mov    edx,0x2e8fc406
  4113bf:	(bad)  
  4113c0:	ficom  WORD PTR [eax+0x32c89a10]
  4113c6:	jo     0x411386
  4113c8:	cmp    dl,bl
  4113ca:	shr    DWORD PTR [ebx-0x10],1
  4113cd:	push   edx
  4113ce:	jecxz  0x411362
  4113d0:	jp     0x41137d
  4113d2:	(bad)  
  4113d3:	int3   
  4113d4:	push   esi
  4113d5:	dec    edx
  4113d6:	aad    0x6f
  4113d8:	mov    ch,0x4e
  4113da:	inc    ebx
  4113db:	aad    0x2c
  4113dd:	mov    ebx,DWORD PTR [edx-0x2f06ad1d]
  4113e3:	jmp    DWORD PTR [edx+0x56]
  4113e6:	xor    dl,BYTE PTR [ecx]
  4113e8:	(bad)
  4113ec:	sub    al,0x75
  4113ee:	xchg   ebp,eax
  4113ef:	sub    eax,esi
  4113f1:	shl    ch,0xeb
  4113f4:	and    edx,ecx
  4113f6:	mov    ebx,0xdf5128af
  4113fb:	mov    eax,ds:0x6c2e4eb8
  411400:	das    
  411401:	aas    
  411402:	inc    eax
  411403:	(bad)  
  411404:	sbb    al,0x82
  411406:	addr16 shr dl,1
  411409:	sahf   
  41140a:	mov    bl,0x17
  41140c:	sti    
  41140d:	jno    0x41146c
  41140f:	xchg   edi,eax
  411410:	xor    BYTE PTR [esi+ebx*2-0xa7deedb],ah
  411417:	fnsave ds:0x6ebbf9c1
  41141d:	mov    al,ds:0xf8c9f6d1
  411422:	adc    dl,bl
  411424:	fcomp  QWORD PTR [ebp+ebp*2+0x5caa8079]
  41142b:	lods   eax,DWORD PTR ds:[esi]
  41142c:	mov    al,0x79
  41142e:	call   0xb2716906
  411433:	push   cs
  411434:	adc    DWORD PTR [ebx-0x48299d78],0x2a
  41143b:	stos   BYTE PTR es:[edi],al
  41143c:	lods   al,BYTE PTR ds:[esi]
  41143d:	dec    esp
  41143e:	nop
  41143f:	pop    ss
  411440:	ds pop ebx
  411442:	mov    dl,0x1a
  411444:	sbb    edx,DWORD PTR [ecx]
  411446:	mov    edx,0xff3fc62b
  41144b:	ficomp WORD PTR [ecx]
  41144d:	fs aaa 
  41144f:	adc    BYTE PTR [ecx+0x31],cl
  411452:	xchg   esi,eax
  411453:	fs adc eax,eax
  411456:	mov    esi,0x87b5a878
  41145b:	clc    
  41145c:	push   eax
  41145d:	pop    ebx
  41145e:	mov    esp,0x231850a4
  411463:	aam    0x6d
  411465:	adc    BYTE PTR [ebx],bh
  411467:	into   
  411468:	jge    0x4114b6
  41146a:	test   al,0x10
  41146c:	sbb    DWORD PTR [edi+0x57c5056a],edi
  411472:	stos   DWORD PTR es:[edi],eax
  411473:	and    edi,ecx
  411475:	cmp    dh,0x12
  411478:	(bad)  
  411479:	retf   
  41147a:	cmp    al,0x92
  41147c:	add    dh,ch
  41147e:	sub    al,0x8c
  411480:	push   0xffffff97
  411482:	mov    dh,0x18
  411484:	lds    esp,FWORD PTR [edi-0x4dbeef60]
  41148a:	fisubr DWORD PTR [edx]
  41148c:	rcr    BYTE PTR [ecx],0xa2
  41148f:	push   0xd
  411491:	or     esp,DWORD PTR [ecx-0x48]
  411494:	and    eax,DWORD PTR [ebx]
  411496:	mov    edi,0xa59af725
  41149b:	jmp    0x64648680
  4114a0:	imul   esp,DWORD PTR [esi-0x708a02ff],0xffffffc1
  4114a7:	pop    ebp
  4114a8:	lahf   
  4114a9:	inc    DWORD PTR [eax+0x7d]
  4114ac:	jmp    0x411529
  4114ae:	sbb    al,0x3b
  4114b0:	test   al,0x37
  4114b2:	out    dx,eax
  4114b3:	mov    WORD PTR [ebp-0x5fe3706e],cs
  4114b9:	inc    edi
  4114ba:	push   edi
  4114bb:	jmp    0x4254c740
  4114c0:	sub    ebp,ebp
  4114c2:	in     eax,0x40
  4114c4:	stos   BYTE PTR es:[edi],al
  4114c5:	hlt    
  4114c6:	mov    esp,0xcf77eadf
  4114cb:	xchg   ebx,eax
  4114cc:	cdq    
  4114cd:	and    al,0x0
  4114cf:	test   eax,0x67755aaa
  4114d4:	pusha  
  4114d5:	nop
  4114d6:	mov    esi,0x7b7062d6
  4114db:	mov    eax,ds:0x7e56581b
  4114e0:	pop    ebp
  4114e1:	dec    ebp
  4114e2:	jmp    0xfb36:0x6223f511
  4114e9:	scas   eax,DWORD PTR es:[edi]
  4114ea:	mov    ebp,?
  4114ec:	rcl    DWORD PTR [edi+0x21],0x6a
  4114f0:	and    DWORD PTR [edx],esi
  4114f2:	mov    bl,ah
  4114f4:	repz xor al,0xa1
  4114f7:	imul   ch
  4114f9:	std    
  4114fa:	cmp    esi,esi
  4114fc:	or     ebx,DWORD PTR [edx-0x2c3c0514]
  411502:	fadd   st,st(2)
  411504:	sub    BYTE PTR [edi-0x397ddb5c],bl
  41150a:	lods   eax,DWORD PTR ds:[esi]
  41150b:	xor    DWORD PTR [eax],esp
  41150d:	ret    
  41150e:	adc    edi,DWORD PTR [eax]
  411510:	xor    al,0x9d
  411512:	rcr    BYTE PTR [ebx],1
  411514:	jl     0x4114fe
  411516:	xchg   esp,eax
  411517:	jecxz  0x41152a
  411519:	mov    cl,0x56
  41151b:	cmp    ebx,DWORD PTR [eax-0x61]
  41151e:	sub    al,0xc0
  411520:	pop    esi
  411521:	or     ecx,DWORD PTR [ebp+0x6d]
  411524:	mov    esi,0xf969355e
  411529:	push   es
  41152a:	xchg   ebp,eax
  41152b:	add    BYTE PTR [ecx],dh
  41152d:	ffreep st(1)
  41152f:	push   edi
  411530:	jp     0x411569
  411532:	inc    esp
  411533:	cld    
  411534:	call   0xd701:0xa8ed732d
  41153b:	push   ecx
  41153c:	outs   dx,BYTE PTR ds:[esi]
  41153d:	xor    al,0x4e
  41153f:	fs cli 
  411541:	sbb    eax,0xb169b44f
  411546:	sti    
  411547:	hlt    
  411548:	mov    DWORD PTR [edx-0x67],edi
  41154b:	lock fisubr WORD PTR [ebx-0x3d]
  41154f:	or     BYTE PTR ds:[ebp-0x6ae5b24c],al
  411556:	mov    eax,ds:0x446463a0
  41155b:	cs xchg ebp,eax
  41155d:	idiv   BYTE PTR [ebp+0x10]
  411560:	ja     0x41157a
  411562:	xchg   ebx,eax
  411563:	cmp    ecx,ecx
  411565:	adc    al,0xe3
  411567:	jne    0x411542
  411569:	call   0x4fa0819e
  41156e:	inc    esi
  41156f:	loop   0x41152a
  411571:	fimul  DWORD PTR [edx+0x17]
  411574:	retf   0xad72
  411577:	adc    eax,0x12ba9ae8
  41157c:	(bad)  
  41157e:	repz mov bl,0xd8
  411581:	mov    cl,al
  411583:	jb     0x411589
  411585:	aad    0xb7
  411587:	scas   al,BYTE PTR es:[edi]
  411588:	dec    ebp
  411589:	jmp    0xd5bbf422
  41158e:	push   ebx
  41158f:	inc    edi
  411590:	sub    ebx,DWORD PTR [edi-0x7ac4a9f4]
  411596:	aas    
  411597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411598:	jmp    0xf4f9:0xdf85de3d
  41159f:	mov    dl,0x5b
  4115a1:	scas   al,BYTE PTR es:[edi]
  4115a2:	ins    BYTE PTR es:[edi],dx
  4115a3:	das    
  4115a4:	mov    ah,0x40
  4115a6:	test   al,0x7e
  4115a8:	mov    eax,ds:0xdbda459f
  4115ad:	sub    DWORD PTR [ecx+esi*4-0x252fb8fa],0x59f7511f
  4115b8:	fwait
  4115b9:	test   eax,0xc4bbb387
  4115be:	push   ss
  4115bf:	fmulp  st(4),st
  4115c1:	(bad)  
  4115c2:	repz retf 
  4115c4:	fsub   st,st(7)
  4115c6:	bnd jb 0x41155a
  4115c9:	fild   QWORD PTR [ecx]
  4115cb:	cld    
  4115cc:	add    ecx,DWORD PTR [ecx-0x39a30f52]
  4115d2:	not    ebp
  4115d4:	adc    al,0xec
  4115d6:	or     DWORD PTR [ecx-0x7a],edx
  4115d9:	xchg   edx,eax
  4115da:	pop    es
  4115db:	inc    esp
  4115dc:	pop    ecx
  4115dd:	hlt    
  4115de:	mov    edi,0xe0d2c3e2
  4115e3:	les    esi,FWORD PTR [edi+0x236b970d]
  4115e9:	or     al,0xec
  4115eb:	xchg   edx,eax
  4115ec:	push   ebx
  4115ed:	loopne 0x41163d
  4115ef:	out    dx,al
  4115f0:	ja     0x4115af
  4115f2:	sbb    BYTE PTR [ecx],0x4e
  4115f5:	nop
  4115f6:	arpl   bp,bx
  4115f8:	dec    ecx
  4115f9:	pop    ss
  4115fa:	or     DWORD PTR [ebp+ebx*4-0x5b],ebx
  4115fe:	jge    0x4115e1
  411600:	jp     0x4115ec
  411602:	and    ebx,ebx
  411604:	mov    al,0x70
  411606:	cmp    BYTE PTR [ebp+edi*4+0xc33bae0],0x6f
  41160e:	or     eax,0x75d0ea32
  411613:	mov    esp,0xca88e69f
  411618:	rol    dl,0x0
  41161b:	repnz sar DWORD PTR [ebp+0x79],1
  41161f:	jno    0x41167d
  411621:	mov    cl,0x71
  411623:	sbb    DWORD PTR [esi+edi*2],ebp
  411626:	nop
  411627:	cmc    
  411628:	out    0x8a,eax
  41162a:	or     bl,BYTE PTR [ebx-0x59f22815]
  411630:	lahf   
  411631:	lods   eax,DWORD PTR ds:[esi]
  411632:	jae    0x411631
  411634:	div    edi
  411636:	loop   0x4115c1
  411638:	rcl    BYTE PTR ds:0x2dc8d1a3,1
  41163e:	mov    cl,0xbe
  411640:	mov    eax,0x6c3e23a9
  411645:	cld    
  411646:	lods   eax,DWORD PTR ds:[esi]
  411647:	inc    ebp
  411648:	xchg   DWORD PTR [eax+0x376b6184],ebx
  41164e:	sbb    ebx,eax
  411650:	sti    
  411651:	nop
  411652:	sbb    eax,0xf20c3a7b
  411657:	mov    ebx,0x16981f2b
  41165c:	mov    dh,0x79
  41165e:	add    ecx,DWORD PTR [eax+0x144c526b]
  411664:	fsubr  st(3),st
  411666:	outs   dx,BYTE PTR ds:[esi]
  411667:	cmc    
  411668:	aad    0x4a
  41166a:	retf   0xfb4
  41166d:	mov    bl,0x54
  41166f:	cmp    ebp,ecx
  411671:	xchg   esp,eax
  411672:	mov    ch,0x4c
  411674:	xor    DWORD PTR [esi+edx*2+0x25b81b55],ecx
  41167b:	or     esi,DWORD PTR [ecx-0x3436c94f]
  411681:	push   0x822c7a59
  411686:	jne    0x411658
  411688:	and    bh,BYTE PTR [ebx+0x46]
  41168b:	outs   dx,BYTE PTR ds:[esi]
  41168c:	(bad)  
  41168d:	mov    ds:0x7eff85a2,al
  411692:	ins    BYTE PTR es:[edi],dx
  411693:	adc    al,0xe4
  411695:	into   
  411696:	lods   eax,DWORD PTR ds:[esi]
  411697:	(bad)  
  411698:	xchg   ecx,eax
  411699:	(bad)  
  41169a:	fcomp  DWORD PTR [eax-0x7]
  41169d:	push   0x67e9b90
  4116a2:	cld    
  4116a3:	add    ah,BYTE PTR [esi+ebx*1+0x64]
  4116a7:	pop    ebp
  4116a8:	jl     0x41164a
  4116aa:	sbb    al,0x62
  4116ac:	out    dx,al
  4116ad:	test   edi,edi
  4116af:	mov    esp,0x4d10792a
  4116b4:	(bad)  
  4116b5:	cmp    DWORD PTR [ebx-0x3b618e8a],ecx
  4116bb:	push   edx
  4116bc:	cwde   
  4116bd:	cmp    ebx,DWORD PTR [ebx+esi*2+0x29]
  4116c1:	fldcw  WORD PTR [edi]
  4116c3:	cwde   
  4116c4:	(bad)  
  4116c5:	pushf  
  4116c6:	pop    es
  4116c7:	das    
  4116c8:	cmp    edx,esp
  4116ca:	jne    0x411703
  4116cc:	cmp    ch,BYTE PTR [eax+0xa3f4dd6]
  4116d2:	mov    esp,0xa3d73d5
  4116d7:	push   es
  4116d8:	js     0x41172c
  4116da:	(bad)
  4116df:	mov    ds:0xfc8ec6e1,al
  4116e4:	repnz cmp BYTE PTR [ebx-0x5460a76f],0x48
  4116ec:	dec    ecx
  4116ed:	shl    BYTE PTR [edx+0x30],1
  4116f0:	dec    esp
  4116f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116f2:	enter  0xd383,0x96
  4116f6:	mov    dh,0xe6
  4116f8:	loop   0x41172d
  4116fa:	mov    al,ds:0x56f78000
  4116ff:	adc    BYTE PTR [esp+eax*4+0x2d],bh
  411703:	add    al,0x82
  411705:	inc    ecx
  411706:	ins    DWORD PTR es:[edi],dx
  411707:	push   eax
  411708:	(bad)  
  411709:	xchg   DWORD PTR [eax],esi
  41170b:	daa    
  41170c:	push   edi
  41170d:	imul   edx,DWORD PTR [edx],0x9858970e
  411713:	jl     0x411730
  411715:	push   es
  411716:	cdq    
  411717:	je     0x411724
  411719:	jne    0x4116f2
  41171b:	pop    eax
  41171c:	push   edi
  41171d:	sbb    al,0x71
  41171f:	mov    esi,0xf84c03ad
  411724:	push   0x37
  411726:	push   ds
  411727:	dec    ecx
  411728:	popf   
  411729:	xchg   edi,eax
  41172a:	jp     0x4116e1
  41172c:	cwde   
  41172d:	inc    esp
  41172e:	lahf   
  41172f:	xchg   ebp,eax
  411730:	dec    edi
  411731:	dec    edi
  411732:	lock iret 
  411734:	sti    
  411735:	das    
  411736:	adc    ebx,DWORD PTR [eax]
  411738:	aad    0x62
  41173a:	fcomp  DWORD PTR [ebx]
  41173c:	inc    eax
  41173d:	inc    edi
  41173e:	fxch   st(6)
  411740:	sub    bl,BYTE PTR [ebx+esi*8]
  411743:	xlat   BYTE PTR ds:[ebx]
  411744:	mov    ah,BYTE PTR [edx+0x3c9772bc]
  41174a:	cmp    eax,DWORD PTR cs:[ecx]
  41174d:	into   
  41174e:	aad    0x14
  411750:	push   0xfffffffa
  411752:	pop    eax
  411753:	jmp    0x4116e2
  411755:	fild   QWORD PTR [esi+0x5f]
  411758:	push   cs
  411759:	js     0x41171d
  41175b:	push   ebx
  41175c:	inc    ebp
  41175d:	sub    eax,0x7f932417
  411762:	sbb    dl,BYTE PTR [ebp-0x75cfd574]
  411768:	ja     0x41176b
  41176a:	inc    esp
  41176b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41176c:	data16 sti 
  41176e:	or     eax,ecx
  411770:	inc    ecx
  411771:	push   0x62
  411773:	push   ebp
  411774:	lea    esi,[esi+0x74]
  411777:	punpcklbw mm2,DWORD PTR [edi+0x61]
  41177b:	mov    ch,0x41
  41177d:	or     DWORD PTR [edi],eax
  41177f:	es mov eax,0xeddc2418
  411785:	ins    BYTE PTR es:[edi],dx
  411786:	mov    WORD PTR [ebx+0x3a],fs
  411789:	pop    ecx
  41178a:	adc    eax,0x79cc0211
  41178f:	mov    eax,0xa71c6078
  411794:	loopne 0x41179c
  411796:	iret   
  411797:	jo     0x4117d8
  411799:	mov    esp,0xff98eb59
  41179e:	push   0xcabbbcd0
  4117a3:	div    DWORD PTR [edi+0x37cc0ad2]
  4117a9:	(bad)
  4117ac:	inc    eax
  4117ad:	pop    ds
  4117ae:	mov    eax,ds:0xdd4b85e5
  4117b3:	mov    dh,0x80
  4117b5:	scas   al,BYTE PTR es:[edi]
  4117b6:	sbb    DWORD PTR [esi-0x44],ecx
  4117b9:	inc    edi
  4117ba:	test   DWORD PTR [eax],esp
  4117bc:	adc    BYTE PTR es:[edx-0x12],0xc5
  4117c1:	mov    cl,0x5e
  4117c3:	rcr    DWORD PTR [ebx+0x44],0x45
  4117c7:	imul   esi,esi,0x4
  4117ca:	add    edx,esi
  4117cc:	clc    
  4117cd:	add    bl,BYTE PTR ds:0xc669d332
  4117d3:	out    0x1b,eax
  4117d5:	adc    DWORD PTR [eax+eax*1+0x3ee87d3f],ecx
  4117dc:	xor    al,0x8f
  4117de:	xchg   DWORD PTR ds:0x5b5fbf0e,esp
  4117e4:	add    edi,ebp
  4117e6:	xchg   esi,eax
  4117e7:	arpl   WORD PTR [ecx-0x5094869c],sp
  4117ed:	ins    BYTE PTR es:[edi],dx
  4117ee:	inc    esp
  4117ef:	pop    ebp
  4117f0:	jmp    0x4117da
  4117f2:	cs or  eax,0xf98770ae
  4117f8:	adc    ecx,DWORD PTR ds:0x23aa23aa
  4117fe:	inc    ebp
  4117ff:	test   BYTE PTR [esi+0x69],0xf5
  411803:	stos   BYTE PTR es:[edi],al
  411804:	call   DWORD PTR [esi-0x12f6d45f]
  41180a:	js     0x411852
  41180c:	repz loope 0x41184e
  41180f:	inc    esi
  411810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411811:	call   0x9d71:0x4bc5770f
  411818:	cmp    esi,ecx
  41181a:	cwde   
  41181b:	inc    esi
  41181c:	or     esi,DWORD PTR [eax+0x60b10aa8]
  411822:	pop    eax
  411823:	mov    ds:0x522419f,al
  411828:	sub    ebx,edi
  41182a:	enter  0xa13b,0xf6
  41182e:	mov    esp,esp
  411830:	and    DWORD PTR [esi],0xfad33fc4
  411836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411837:	push   esp
  411838:	and    DWORD PTR [eax],eax
  41183a:	dec    esp
  41183b:	push   edi
  41183c:	or     DWORD PTR [edi+0x5a34c75e],esi
  411842:	xor    ebx,DWORD PTR ds:0xf76c587a
  411848:	stos   DWORD PTR es:[edi],eax
  411849:	mov    ah,0x59
  41184b:	mov    ecx,0x7b0f48b7
  411850:	mov    eax,0xa89a2e38
  411855:	inc    ebx
  411856:	mov    bh,BYTE PTR [edi]
  411858:	sub    BYTE PTR [ebx],0xd9
  41185b:	repnz dec eax
  41185d:	popf   
  41185e:	and    ah,BYTE PTR [ebx+0x26]
  411861:	pop    esp
  411862:	aam    0xf4
  411864:	mov    eax,ds:0xf95e104
  411869:	aaa    
  41186a:	cmp    bh,BYTE PTR [edx]
  41186c:	mov    ds:0xff057bea,eax
  411871:	xchg   ebx,eax
  411872:	mov    dl,0x2b
  411874:	(bad)  
  411875:	(bad)  
  411876:	push   esi
  411877:	jecxz  0x411881
  411879:	sbb    bl,BYTE PTR [ebp+0x3c]
  41187c:	add    BYTE PTR [eax],dl
  41187e:	cld    
  41187f:	mov    ebx,0xde2bcfeb
  411884:	or     al,0x3e
  411886:	int3   
  411887:	push   esp
  411888:	add    eax,0x6c9631e1
  41188d:	xchg   esp,eax
  41188e:	mov    bl,0x17
  411890:	sub    BYTE PTR [esi+0x24],bl
  411893:	call   0x334a:0xc25bb6a7
  41189a:	mov    bh,0x28
  41189c:	xchg   edi,eax
  41189d:	add    DWORD PTR [edx],edx
  41189f:	mov    ecx,0x6fce2848
  4118a4:	or     BYTE PTR [ecx+0x893d9af],dh
  4118aa:	test   eax,0x573fa680
  4118af:	pushf  
  4118b0:	js     0x411855
  4118b2:	nop
  4118b3:	in     al,0xd4
  4118b5:	bound  edx,QWORD PTR [ebp-0x8]
  4118b8:	dec    ebx
  4118b9:	xchg   ecx,edi
  4118bb:	out    dx,eax
  4118bc:	jne    0x41189a
  4118be:	clc    
  4118bf:	dec    ebx
  4118c0:	arpl   WORD PTR [esi+0x2782edc0],bx
  4118c6:	in     al,dx
  4118c7:	or     BYTE PTR [edi+0x2d],dh
  4118ca:	and    DWORD PTR ds:0xfaa29882,eax
  4118d0:	test   BYTE PTR [ebp-0xa75e6f2],cl
  4118d6:	or     ah,bh
  4118d8:	push   0xffffff85
  4118da:	mov    cl,0x5e
  4118dc:	mov    bl,0x89
  4118de:	sbb    DWORD PTR [esi+0x1abb3b76],ebp
  4118e4:	dec    edi
  4118e5:	sbb    DWORD PTR ds:0x58ecf591,eax
  4118eb:	mov    ah,0xba
  4118ed:	mov    ecx,0xa4266baa
  4118f2:	jmp    0x5d8ef49
  4118f7:	jnp    0x411947
  4118f9:	xchg   eax,ebp
  4118fb:	xchg   esi,eax
  4118fc:	push   0xffffff9c
  4118fe:	pushf  
  4118ff:	mul    DWORD PTR [esi]
  411901:	leave  
  411902:	js     0x411967
  411904:	test   BYTE PTR [ebx+0x1a],dl
  411907:	pop    esp
  411908:	pop    edx
  411909:	mov    bl,0x39
  41190b:	mov    ds:0xbec75f33,eax
  411910:	(bad)  
  411911:	in     al,dx
  411912:	adc    DWORD PTR [ebp-0x36a8e109],edx
  411918:	inc    esp
  411919:	shl    bh,0xc9
  41191c:	cmp    al,0xa2
  41191e:	xchg   DWORD PTR [bx+0x1f2a],esi
  411923:	mov    ch,0x28
  411925:	sti    
  411926:	pop    es
  411927:	jecxz  0x4118bc
  411929:	mov    ds:0x8908c5e6,eax
  41192e:	pop    ecx
  41192f:	aas    
  411930:	push   esi
  411931:	xchg   DWORD PTR [ebp+0x64b2e9d2],esp
  411937:	fwait
  411938:	push   0x5b
  41193a:	jnp    0x411966
  41193c:	or     ch,bl
  41193e:	dec    eax
  41193f:	sub    al,BYTE PTR [edx-0x648fdd59]
  411945:	scas   eax,DWORD PTR es:[edi]
  411946:	dec    ebx
  411947:	mov    bl,0xc1
  411949:	psllq  mm0,QWORD PTR [esi+ebx*2]
  41194d:	pop    eax
  41194e:	int3   
  41194f:	pop    ebx
  411950:	outs   dx,DWORD PTR ds:[esi]
  411951:	xchg   ebp,eax
  411952:	sbb    dh,BYTE PTR [edx]
  411954:	and    ah,BYTE PTR [ebp-0x27]
  411957:	add    BYTE PTR [esi+ebx*4+0x55],0xef
  41195c:	ja     0x41196c
  41195e:	sti    
  41195f:	dec    edi
  411960:	fnstcw WORD PTR [ebp-0x37]
  411963:	popa   
  411964:	(bad)  
  411965:	clc    
  411966:	xchg   esp,esp
  411968:	js     0x41195a
  41196a:	jl     0x4119c8
  41196c:	shl    ecx,cl
  41196e:	out    0x6c,al
  411970:	pop    ebp
  411971:	mov    al,ds:0x2616781
  411976:	fdiv   QWORD PTR [ebp+0x62]
  411979:	jo     0x411952
  41197b:	(bad)  
  41197c:	idiv   BYTE PTR [edx]
  41197e:	les    ebx,FWORD PTR [eax-0x46]
  411981:	imul   esi,DWORD PTR [esi-0x2caadebb],0xbf5a2366
  41198b:	inc    esi
  41198c:	test   esp,eax
  41198e:	jp     0x411997
  411990:	std    
  411991:	xchg   BYTE PTR [edx+eiz*2+0x36],ch
  411995:	pop    ds
  411996:	jnp    0x4119cd
  411998:	lock add al,0x63
  41199b:	or     dh,dl
  41199d:	cmp    al,0xf4
  41199f:	rol    DWORD PTR [eax+0x2b5a44a1],1
  4119a5:	mov    bh,0xca
  4119a7:	sub    dl,dh
  4119a9:	icebp  
  4119aa:	cmc    
  4119ab:	cld    
  4119ac:	nop
  4119ad:	fisubr WORD PTR [edx+0x55]
  4119b0:	cwde   
  4119b1:	pusha  
  4119b2:	not    BYTE PTR [edx]
  4119b4:	mov    ch,0xd0
  4119b6:	std    
  4119b7:	sbb    al,BYTE PTR [ebx+0x5]
  4119ba:	mov    eax,ds:0x21bfe61
  4119bf:	mov    ch,0xeb
  4119c1:	sar    DWORD PTR [ebx+edi*2+0x21bfac0d],1
  4119c8:	adc    dh,BYTE PTR [eax-0x77e380f2]
  4119ce:	xor    cl,BYTE PTR [edi]
  4119d0:	mov    eax,eax
  4119d2:	xor    BYTE PTR [ebx+0x671b807c],ah
  4119d8:	fsub   DWORD PTR [edi+0x43fcc460]
  4119de:	lahf   
  4119df:	inc    bx
  4119e1:	iret   
  4119e2:	pop    ebp
  4119e3:	push   esi
  4119e4:	jmp    0x41197d
  4119e6:	das    
  4119e7:	ja     0x411975
  4119e9:	and    ebx,DWORD PTR [esi]
  4119eb:	leave  
  4119ec:	sub    eax,0x90146604
  4119f1:	xchg   ebx,eax
  4119f2:	mov    WORD PTR [edi],cs
  4119f4:	push   ecx
  4119f5:	xor    bl,BYTE PTR [edi-0x7e]
  4119f8:	outs   dx,BYTE PTR ds:[esi]
  4119f9:	dec    edx
  4119fa:	jo     0x411a61
  4119fc:	mov    al,ds:0xc5cff702
  411a01:	push   ss
  411a02:	sbb    bh,BYTE PTR [edx-0x5501f5a1]
  411a08:	(bad)  
  411a09:	popf   
  411a0a:	outs   dx,DWORD PTR ds:[esi]
  411a0b:	lds    edx,FWORD PTR [ebx+0x23f3df95]
  411a11:	inc    esi
  411a12:	and    DWORD PTR [edi],ecx
  411a14:	inc    ebp
  411a15:	pop    es
  411a16:	leave  
  411a17:	ins    BYTE PTR es:[edi],dx
  411a18:	jae    0x411a6b
  411a1a:	add    eax,0xeb47b22b
  411a1f:	pop    esp
  411a20:	mov    edx,0xeb627b6c
  411a25:	or     DWORD PTR fs:[edi+0x61],ebx
  411a29:	inc    esi
  411a2a:	aam    0xf4
  411a2c:	lock sahf 
  411a2e:	retf   
  411a2f:	jl     0x4119e0
  411a31:	mov    esp,0xbbfbc590
  411a36:	fcmovnbe st,st(2)
  411a38:	inc    edi
  411a39:	mov    ah,0x1b
  411a3b:	sahf   
  411a3c:	push   0xf00be697
  411a41:	or     BYTE PTR ds:0x29ff44b3,ah
  411a47:	mov    ecx,0x14543702
  411a4c:	cmc    
  411a4d:	inc    edi
  411a4e:	leave  
  411a4f:	adc    al,0x52
  411a51:	add    ebx,DWORD PTR [edi+esi*1+0x1d]
  411a55:	and    DWORD PTR ds:[ecx],edx
  411a58:	ret    0x94cc
  411a5b:	inc    eax
  411a5c:	or     eax,0x44869fe
  411a61:	les    esi,FWORD PTR [eax+0x6e7b8ca1]
  411a67:	mov    edx,0xaa34fb40
  411a6c:	sbb    BYTE PTR [ebp+0x7097c74b],0xa0
  411a73:	loop   0x411a3d
  411a75:	(bad)  
  411a76:	in     al,dx
  411a77:	pop    edx
  411a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a79:	ret    
  411a7a:	(bad)  
  411a7b:	xor    esi,DWORD PTR [ebp-0x50]
  411a7e:	sub    ah,BYTE PTR [edx+0x6def3909]
  411a84:	inc    esp
  411a85:	xchg   BYTE PTR [eax],ah
  411a87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a88:	lock pop edi
  411a8a:	pop    esi
  411a8b:	frstor ss:[edx]
  411a8e:	sub    al,ch
  411a90:	xchg   ebp,eax
  411a91:	inc    esi
  411a92:	adc    bl,BYTE PTR [edi]
  411a94:	mov    bl,0x15
  411a96:	adc    bh,BYTE PTR [edx+ebp*2+0x5511fad8]
  411a9d:	daa    
  411a9e:	outs   dx,BYTE PTR ds:[esi]
  411a9f:	adc    BYTE PTR cs:[edi+ecx*1],ah
  411aa3:	xor    ecx,DWORD PTR [ecx-0x34bc70c4]
  411aa9:	(bad)  
  411aaa:	fist   WORD PTR [eax+0x1eed3dc7]
  411ab0:	test   DWORD PTR [ecx+edi*2-0x1a8b3f62],ecx
  411ab7:	in     al,dx
  411ab8:	pop    esp
  411ab9:	xchg   esp,eax
  411aba:	add    esp,DWORD PTR [esi-0x6b70e76b]
  411ac0:	inc    esi
  411ac1:	cmp    al,0xe2
  411ac3:	out    0xb5,al
  411ac5:	jmp    0x4495:0xeddb9f8f
  411acc:	rcl    edx,cl
  411ace:	ins    BYTE PTR es:[edi],dx
  411acf:	sbb    al,0x95
  411ad1:	rcr    BYTE PTR [eax+0x74],0xac
  411ad5:	hlt    
  411ad6:	fsub   QWORD PTR [eax+ebp*1]
  411ad9:	push   ecx
  411ada:	jno    0x411b1f
  411adc:	scas   al,BYTE PTR es:[edi]
  411add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ade:	push   edx
  411adf:	dec    eax
  411ae0:	call   0x6e67:0xf18e2b9
  411ae7:	imul   esp,esp,0x4a1ebec2
  411aed:	(bad)  
  411aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411af0:	out    0x6e,eax
  411af2:	push   ebx
  411af3:	mov    cl,BYTE PTR [ecx+0x76]
  411af6:	mov    BYTE PTR [esi+edx*4+0x5180ae4d],ah
  411afd:	mov    dl,0x2b
  411aff:	mov    eax,cs:0x4c6c85bc
  411b05:	jg     0x411aef
  411b07:	stos   DWORD PTR es:[edi],eax
  411b08:	cmc    
  411b09:	outs   dx,BYTE PTR ds:[esi]
  411b0a:	pop    esi
  411b0b:	or     ch,dh
  411b0d:	xor    BYTE PTR [esp+esi*8-0x45],0xb5
  411b12:	or     ecx,DWORD PTR [ebp+esi*1+0x55]
  411b16:	adc    esp,esp
  411b18:	or     DWORD PTR [eax],edx
  411b1a:	test   DWORD PTR [edx-0x2bd87e19],ebx
  411b20:	and    BYTE PTR [edx-0x12],cl
  411b23:	test   DWORD PTR [edx+edi*2],esp
  411b26:	sub    dl,BYTE PTR [eax-0x2]
  411b29:	or     eax,0x8d2f042c
  411b2e:	rol    DWORD PTR [eax-0x75bf2312],1
  411b34:	cmp    eax,DWORD PTR [edi-0x624798b9]
  411b3a:	loope  0x411b3b
  411b3c:	mov    al,ds:0x30bf9b69
  411b41:	xchg   ebx,eax
  411b42:	ret    0x1625
  411b45:	fsub   QWORD PTR [edi]
  411b47:	mov    dl,0x3a
  411b49:	call   0x44fe88e6
  411b4e:	outs   dx,DWORD PTR ds:[esi]
  411b4f:	sbb    ch,BYTE PTR [eax-0x1eb3764]
  411b55:	dec    ecx
  411b56:	push   esi
  411b57:	add    DWORD PTR [ecx+0x5c0db939],edi
  411b5d:	jns    0x411b45
  411b5f:	aaa    
  411b60:	mov    al,ds:0x5214b49e
  411b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b66:	pop    ebp
  411b67:	lods   eax,DWORD PTR ds:[esi]
  411b68:	jge    0x411b93
  411b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b6b:	mov    esp,ebp
  411b6d:	rol    DWORD PTR [esi-0x6d],1
  411b70:	dec    esp
  411b71:	ss std 
  411b73:	popa   
  411b74:	clc    
  411b75:	mov    ecx,0xf41a2249
  411b7a:	jb     0x411b66
  411b7c:	jecxz  0x411bfc
  411b7e:	jecxz  0x411b05
  411b80:	push   ebp
  411b81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b82:	jae    0x411b5d
  411b84:	data16 out 0xfb,al
  411b87:	push   esp
  411b88:	mov    ch,ah
  411b8a:	stc    
  411b8b:	cmp    al,0xf1
  411b8d:	push   edx
  411b8e:	fnstsw WORD PTR [ebp-0x6893c467]
  411b94:	loope  0x411b7e
  411b96:	jle    0x411be8
  411b98:	push   cs
  411b99:	mov    ecx,0xbd00d4f8
  411b9e:	dec    esp
  411b9f:	inc    ecx
  411ba0:	(bad)  [eax+0x6d]
  411ba3:	inc    eax
  411ba4:	and    ebp,DWORD PTR [edx-0x2f9e46af]
  411baa:	cmp    BYTE PTR [edi-0x218017f5],ah
  411bb0:	and    esi,esi
  411bb2:	push   ebx
  411bb3:	pop    edx
  411bb4:	sbb    eax,0xa20c408e
  411bb9:	pop    ecx
  411bba:	pop    esp
  411bbb:	xor    DWORD PTR [ecx-0x6ad82f65],eax
  411bc1:	add    ebx,ebp
  411bc3:	jecxz  0x411b6a
  411bc5:	es jo  0x411bee
  411bc8:	loope  0x411c49
  411bca:	adc    al,0xe1
  411bcc:	icebp  
  411bcd:	stc    
  411bce:	mov    dl,0x23
  411bd0:	pop    edi
  411bd1:	mov    ecx,0x6c2a3926
  411bd6:	mov    eax,0x81badfdb
  411bdb:	sub    al,0x8a
  411bdd:	scas   eax,DWORD PTR es:[edi]
  411bde:	outs   dx,DWORD PTR ds:[esi]
  411bdf:	mov    DWORD PTR [ecx],esi
  411be1:	loope  0x411bca
  411be3:	xor    DWORD PTR [edi+0x357b06e7],edi
  411be9:	push   cs
  411bea:	jmp    FWORD PTR [ecx+0x17c93f85]
  411bf0:	jmp    0x3b3d:0x572d3e9e
  411bf7:	leave  
  411bf8:	inc    eax
  411bf9:	lock shr BYTE PTR [ecx+0x4c],1
  411bfd:	mov    BYTE PTR [ebx+0x15cd2f9f],cl
  411c03:	shl    BYTE PTR [ebp-0x70],cl
  411c06:	cmc    
  411c07:	aam    0xaf
  411c09:	sub    BYTE PTR [eax-0x2d891602],ah
  411c0f:	sbb    edi,DWORD PTR [edx+ebp*1-0x49873a79]
  411c16:	or     BYTE PTR [edi+0x45],ah
  411c19:	xor    bh,BYTE PTR [edi+eiz*8+0x4f]
  411c1d:	fcomp  DWORD PTR [edi-0x11]
  411c20:	aad    0x1d
  411c22:	jmp    0xd62b009c
  411c27:	adc    ah,BYTE PTR ds:0xe3fa30ee
  411c2d:	sbb    esp,DWORD PTR [esp+edi*2+0x4a9d2515]
  411c34:	js     0x411c78
  411c36:	add    ebp,DWORD PTR [edx+0x785ed058]
  411c3c:	mov    bl,0x9e
  411c3e:	push   esp
  411c3f:	push   es
  411c40:	lock test al,0xdf
  411c43:	inc    edx
  411c44:	sbb    ecx,DWORD PTR [edx-0x322004d3]
  411c4a:	test   DWORD PTR [eax-0x118e586e],edx
  411c50:	retf   0x28c8
  411c53:	(bad)  
  411c54:	out    0x6f,al
  411c56:	mov    ch,0x97
  411c58:	aad    0xf6
  411c5a:	add    edx,DWORD PTR [ebp-0x28]
  411c5d:	cmp    DWORD PTR [ebx+0x7a9df458],esp
  411c63:	pushf  
  411c64:	sbb    esi,ebp
  411c66:	add    ebx,DWORD PTR [edi+0x4fea6974]
  411c6c:	fprem1 
  411c6e:	mov    ecx,gs
  411c70:	cwde   
  411c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c72:	xchg   edi,eax
  411c73:	fdiv   st(5),st
  411c75:	in     al,0x3
  411c77:	xchg   esi,eax
  411c78:	dec    esi
  411c79:	call   0x45bdb0a
  411c7e:	adc    DWORD PTR [edx-0x51],ecx
  411c81:	retf   0xd99
  411c84:	retf   
  411c85:	xor    esp,ebx
  411c87:	adc    al,BYTE PTR [ecx]
  411c89:	fwait
  411c8a:	test   DWORD PTR [ecx+0x3c],0xdaed596c
  411c91:	cmp    eax,0xf20e5b89
  411c96:	jp     0x411c84
  411c98:	nop
  411c99:	lods   al,BYTE PTR ds:[esi]
  411c9a:	cmp    edi,edi
  411c9c:	xchg   ebx,eax
  411c9d:	jg     0x411cfb
  411c9f:	out    dx,eax
  411ca0:	or     ecx,DWORD PTR ds:0x9be9330e
  411ca6:	sub    cl,BYTE PTR [ebx+0x53bd64a9]
  411cac:	or     DWORD PTR [ecx-0x47],edx
  411caf:	inc    edx
  411cb0:	xor    bh,BYTE PTR [edx-0x72274d]
  411cb6:	pop    ebx
  411cb7:	stos   DWORD PTR es:[edi],eax
  411cb8:	push   edi
  411cb9:	add    eax,0xff925703
  411cbe:	xchg   ebx,eax
  411cbf:	jno    0x411c55
  411cc1:	jnp    0x411cda
  411cc3:	inc    eax
  411cc4:	add    esi,edx
  411cc6:	mov    ch,0x4e
  411cc8:	jnp    0x411cfd
  411cca:	je     0x411cca
  411ccc:	cmp    dh,dh
  411cce:	xlat   BYTE PTR ds:[ebx]
  411ccf:	pop    ebx
  411cd0:	adc    eax,0xfe402933
  411cd5:	and    DWORD PTR [edx],esp
  411cd7:	loope  0x411cd1
  411cd9:	jno    0x411caf
  411cdb:	push   cs
  411cdc:	mov    dh,0x99
  411cde:	xchg   dh,dl
  411ce0:	jp     0x411cdc
  411ce2:	sti    
  411ce3:	cdq    
  411ce4:	cmp    esi,DWORD PTR [ebx-0x7aae52dc]
  411cea:	loope  0x411c76
  411cec:	pushf  
  411ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cee:	mov    ch,0x12
  411cf0:	sub    DWORD PTR [edx+0x73],ebx
  411cf3:	dec    esp
  411cf4:	out    dx,al
  411cf5:	mov    edx,0xd405f047
  411cfa:	cmp    al,0x6e
  411cfc:	bound  esp,QWORD PTR [ebp+ebp*2-0x7b]
  411d00:	cmp    dl,dl
  411d02:	jmp    0xab3d:0xe41830cd
  411d09:	loopne 0x411c9a
  411d0b:	rcl    DWORD PTR [ebx],0x92
  411d0e:	fsubr  QWORD PTR [ebp+0x2]
  411d11:	and    BYTE PTR [ecx-0x48bda103],dl
  411d17:	pop    ebp
  411d18:	mov    edx,0x8917ccff
  411d1d:	sbb    BYTE PTR [edx-0x277547fd],ah
  411d23:	dec    edi
  411d24:	mov    es,WORD PTR [edx+0x2e]
  411d27:	sub    ch,BYTE PTR [ebx+0x3d]
  411d2a:	jno    0x411da6
  411d2c:	repnz int3 
  411d2e:	(bad)
  411d31:	push   ds
  411d32:	ret    
  411d33:	and    DWORD PTR [edx],esp
  411d35:	push   edx
  411d36:	mov    ah,BYTE PTR [edx+0x62b9c084]
  411d3c:	loope  0x411d70
  411d3e:	xor    al,bl
  411d40:	or     BYTE PTR [edi],0xd
  411d43:	in     al,0xe6
  411d45:	xor    esi,ebx
  411d47:	pop    esi
  411d48:	outs   dx,DWORD PTR ds:[esi]
  411d49:	cli    
  411d4a:	test   DWORD PTR [edx-0x74],esp
  411d4d:	mov    cl,0xf3
  411d4f:	int    0x42
  411d51:	test   eax,0xd31fb2bc
  411d56:	mov    dh,0x1f
  411d58:	adc    DWORD PTR [edx],edx
  411d5a:	pop    ebx
  411d5b:	iret   
  411d5c:	mov    ebx,0x9eac0123
  411d61:	xchg   BYTE PTR es:[edi],ch
  411d64:	retf   
  411d65:	repz push 0x1bea9119
  411d6b:	mov    eax,esp
  411d6d:	rol    BYTE PTR [edx+0x2e3f9ef3],0x95
  411d74:	inc    esi
  411d75:	icebp  
  411d76:	push   esp
  411d77:	fnsave [eax]
  411d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d7a:	(bad)  
  411d7b:	rcl    DWORD PTR [esi-0xd],1
  411d7e:	sub    al,0x88
  411d80:	jne    0x411da4
  411d82:	test   BYTE PTR [edi-0x17],dl
  411d85:	pop    ebx
  411d86:	dec    ebp
  411d87:	fmul   DWORD PTR [eax+ecx*2-0x7d]
  411d8b:	sub    DWORD PTR [edi+0x48cb15a9],ebx
  411d91:	icebp  
  411d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d94:	es cwde 
  411d96:	and    edi,DWORD PTR [ebp+0x66d7b05]
  411d9c:	pop    ecx
  411d9d:	mov    bh,0x15
  411d9f:	jg     0x411dae
  411da1:	cmp    ecx,edx
  411da3:	jb     0x40f9d0
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	test   eax,0x9d86a383
  412039:	ret    
  41203a:	pop    ss
  41203b:	dec    edx
  41203c:	test   al,0xf6
  41203e:	sub    eax,0xccfcc191
  412043:	mov    es,WORD PTR [ecx]
  412045:	add    BYTE PTR [eax],al
  412047:	add    BYTE PTR [ebx+0x3a],al
  41204a:	pop    esp
  41204b:	inc    ebx
  41204c:	jne    0x4120c0
  41204e:	jb     0x4120b5
  412050:	outs   dx,BYTE PTR ds:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	out    dx,eax
  41563f:	push   0xffffffce
  415641:	popa   
  415642:	jns    0x415618
  415644:	add    BYTE PTR [eax],al
  415646:	repz add al,0x0
  415649:	add    BYTE PTR [esp+edx*1+0x1f461e97],dh
  415650:	mov    ecx,ebx
  415652:	in     eax,0x43
  415654:	dec    esi
  415655:	jo     0x4155f6
  415657:	sbb    DWORD PTR [edx-0x590e5c0b],0x34
  41565e:	push   0xffffff98
  415660:	cmp    DWORD PTR [esi-0x678beaf3],esi
  415666:	outs   dx,DWORD PTR ds:[esi]
  415667:	jmp    0x415642
  415669:	push   ebp
  41566a:	arpl   di,di
  41566c:	les    esp,FWORD PTR [eax]
  41566e:	xor    eax,ebp
  415670:	mov    dh,0xd5
  415672:	pop    eax
  415673:	mov    bl,0xa9
  415675:	imul   ecx,DWORD PTR [edx-0x5f],0xf8f24ea0
  41567c:	js     0x4156eb
  41567e:	les    ebp,FWORD PTR [edi+edx*1+0x2cbf54ee]
  415685:	cdq    
  415686:	sahf   
  415687:	cmp    eax,0xa10bae24
  41568c:	ret    
  41568d:	jno    0x4156b7
  41568f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415690:	lea    esi,[ecx-0x68bd3aad]
  415696:	jmp    0x55f7574e
  41569b:	mov    eax,0xe228ef29
  4156a0:	outs   dx,DWORD PTR ds:[esi]
  4156a1:	xchg   BYTE PTR [edi],cl
  4156a3:	pop    ds
  4156a4:	push   esp
  4156a6:	push   ecx
  4156a7:	xor    BYTE PTR [ebx+0x75],0xbc
  4156ab:	(bad)  
  4156ac:	sub    al,0x61
  4156ae:	popf   
  4156af:	and    DWORD PTR [ebp+eax*2+0x2661f9a8],ebp
  4156b6:	fisubr WORD PTR [eax-0x35]
  4156b9:	mov    ?,edi
  4156bb:	cld    
  4156bc:	or     al,0xa6
  4156be:	outs   dx,DWORD PTR ds:[esi]
  4156bf:	pop    edx
  4156c0:	inc    eax
  4156c1:	and    edi,edx
  4156c3:	mov    ds:0x669c83d0,eax
  4156c8:	push   ecx
  4156c9:	inc    esp
  4156ca:	pop    esi
  4156cb:	pop    esi
  4156cc:	adc    BYTE PTR [esi-0x27],0x35
  4156d0:	aad    0x75
  4156d2:	popf   
  4156d3:	mov    eax,ds:0xc7cda804
  4156d8:	dec    ebp
  4156d9:	mov    ebp,edi
  4156db:	adc    dh,0xbf
  4156de:	aas    
  4156df:	icebp  
  4156e0:	les    esi,FWORD PTR [ebx+0x2b]
  4156e3:	dec    ebp
  4156e4:	scas   eax,DWORD PTR es:[edi]
  4156e5:	sbb    edx,ecx
  4156e7:	mov    esi,0xeedf0a24
  4156ec:	(bad)  
  4156ed:	cli    
  4156ee:	fstp   TBYTE PTR [edi]
  4156f0:	test   eax,0xcef21f3e
  4156f5:	push   0x981de74
  4156fa:	stos   BYTE PTR es:[edi],al
  4156fb:	dec    ebp
  4156fc:	cmp    al,0x70
  4156fe:	(bad)  
  4156ff:	and    eax,0xe632f7b1
  415704:	out    dx,eax
  415705:	jmp    0x205398a0
  41570a:	(bad)  
  41570b:	pushw  cs
  41570d:	sub    DWORD PTR [edi-0x63aedfd3],edi
  415713:	mov    edx,0xe14cfd99
  415718:	lods   eax,DWORD PTR ds:[esi]
  415719:	and    BYTE PTR [ebx-0x11],bh
  41571c:	push   cs
  41571d:	int    0x7d
  41571f:	into   
  415720:	dec    ecx
  415721:	adc    BYTE PTR [edx+0x38],bl
  415724:	in     eax,0xc7
  415726:	(bad)  
  415727:	pop    ds
  415728:	or     dh,dl
  41572a:	adc    DWORD PTR [ebp-0x20],edi
  41572d:	push   es
  41572e:	mov    ch,0xef
  415730:	xchg   edi,eax
  415731:	cmp    bl,cl
  415733:	cmp    eax,0x2480a98e
  415738:	mov    ecx,0x45e487e6
  41573d:	jns    0x41571f
  41573f:	test   al,0x4b
  415741:	mov    edi,0xf155e0d
  415746:	dec    ecx
  415747:	cmp    BYTE PTR [ebp+0x447ff7c0],bl
  41574d:	adc    al,BYTE PTR [ebx+0x171bb307]
  415753:	popf   
  415754:	push   edi
  415755:	push   ss
  415756:	mov    ds:0xc48eaa82,eax
  41575b:	int3   
  41575c:	dec    edx
  41575d:	mov    al,0xfd
  41575f:	pop    ss
  415760:	push   edi
  415761:	xlat   BYTE PTR ds:[ebx]
  415762:	fcomi  st,st(7)
  415764:	aam    0xd7
  415766:	xchg   ebp,eax
  415767:	bound  esi,QWORD PTR [ecx+0x28e76389]
  41576d:	adc    eax,0x6e409369
  415772:	push   cs
  415773:	xor    dh,bh
  415775:	fsub   QWORD PTR [ebx]
  415777:	add    DWORD PTR [eax+0x175f9a1],esp
  41577d:	loope  0x41578c
  41577f:	mov    eax,0x2b09f0a2
  415784:	mov    es,WORD PTR [esi+esi*8+0xe]
  415788:	out    0x7,eax
  41578a:	dec    ecx
  41578b:	repz mov ebx,0x6fad30b5
  415791:	add    eax,0x43d2dbc0
  415796:	mov    ss,WORD PTR ds:0x39ebd21b
  41579c:	and    ch,BYTE PTR [edi+0x11]
  41579f:	push   ss
  4157a0:	add    eax,0x8618c92b
  4157a5:	scas   eax,DWORD PTR es:[edi]
  4157a6:	test   eax,0xa5af76bc
  4157ab:	xor    eax,0x6b33d58f
  4157b0:	or     al,0xa1
  4157b2:	lahf   
  4157b3:	stc    
  4157b4:	mov    eax,DWORD PTR [esi-0x6a9f2269]
  4157ba:	sub    ah,cl
  4157bc:	ret    0xfe6d
  4157bf:	push   esp
  4157c0:	xor    al,0x1f
  4157c2:	fs stc 
  4157c4:	cmp    eax,0xf750c55a
  4157c9:	pop    ebp
  4157ca:	into   
  4157cb:	mov    ds:0x4ff8fd9b,al
  4157d0:	mov    ah,bl
  4157d2:	aas    
  4157d3:	rcl    BYTE PTR [edi-0x57],0x8b
  4157d7:	cdq    
  4157d8:	cmp    BYTE PTR [eax-0x5bf51941],ch
  4157de:	mov    ebp,0xdc43bbd4
  4157e3:	inc    eax
  4157e4:	jmp    0xa0df76ba
  4157e9:	shl    BYTE PTR [edx+0x3],cl
  4157ec:	ins    BYTE PTR es:[edi],dx
  4157ed:	push   esp
  4157ee:	shl    DWORD PTR [esi],1
  4157f0:	sub    DWORD PTR [ebx+0x1469bbd5],edx
  4157f6:	jno    0x415827
  4157f8:	hlt    
  4157f9:	push   ecx
  4157fa:	cmc    
  4157fb:	sbb    ebx,ecx
  4157fd:	push   cs
  4157fe:	(bad)  
  4157ff:	adc    bh,dl
  415801:	in     eax,0xb5
  415803:	xchg   BYTE PTR [esi-0x5b522fdd],al
  415809:	lds    edx,FWORD PTR ss:[edx-0x25e8eaf2]
  415810:	ds mov ebp,0xedf5a52e
  415816:	test   DWORD PTR [esp+ecx*4+0x2ffe4d9b],edx
  41581d:	nop
  41581e:	(bad)  
  41581f:	(bad)  
  415820:	loopne 0x4157ab
  415822:	xchg   BYTE PTR [edi],dl
  415824:	test   al,0xad
  415826:	fnstenv [ebp+0x1cf60a06]
  41582c:	sub    DWORD PTR [ebp-0x73],ebx
  41582f:	(bad)  
  415830:	dec    ebx
  415831:	mov    cl,0xe
  415833:	hlt    
  415834:	jnp    0x41580d
  415836:	xchg   BYTE PTR [ecx+0x31793a42],bh
  41583c:	fadd   QWORD PTR [eax+eax*4-0x296d469d]
  415843:	data16 jle 0x4158b7
  415846:	adc    bl,dh
  415848:	dec    ecx
  415849:	cld    
  41584a:	mov    bh,0x61
  41584c:	jnp    0x4157de
  41584e:	add    esi,DWORD PTR es:[eax+0x25]
  415852:	mov    esi,0xbc09f127
  415857:	xor    BYTE PTR [eax+ebx*1+0x81b773],bl
  41585e:	mov    gs,ecx
  415860:	or     al,0x77
  415862:	scas   eax,DWORD PTR es:[edi]
  415863:	fbstp  TBYTE PTR [ebp+0x20]
  415866:	retf   
  415867:	jecxz  0x41581b
  415869:	pop    esp
  41586a:	cli    
  41586b:	pop    edx
  41586c:	jl     0x41582a
  41586e:	mov    edx,0x4c12feec
  415873:	fwait
  415874:	push   ss
  415875:	iret   
  415876:	jmp    0xc3b4:0x8dca05dd
  41587d:	add    BYTE PTR [edi-0x1f],al
  415880:	inc    eax
  415881:	cmp    dh,BYTE PTR [ebp+0x45d97cff]
  415887:	push   ds
  415888:	mov    ebx,0x8a3f64a4
  41588d:	sub    al,0x57
  41588f:	jle    0x4158be
  415891:	cmp    BYTE PTR [esi+0x69d0952c],bh
  415897:	scas   al,BYTE PTR es:[edi]
  415898:	push   ecx
  415899:	push   ebx
  41589a:	lahf   
  41589b:	push   ebp
  41589c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41589d:	pop    esi
  41589e:	loope  0x4158a1
  4158a0:	cmp    ah,BYTE PTR [esp+eiz*8]
  4158a3:	(bad)  
  4158a4:	or     dh,BYTE PTR ds:0xe1ad5d2f
  4158aa:	lds    ecx,FWORD PTR [edx-0x7e01d199]
  4158b0:	into   
  4158b1:	xchg   edi,eax
  4158b2:	test   eax,0xfacb5217
  4158b7:	pop    ebp
  4158b8:	mov    eax,ds:0x84e921ef
  4158bd:	xor    al,0x50
  4158bf:	push   0xdbde4d7b
  4158c4:	sub    eax,0x23101a09
  4158c9:	clc    
  4158ca:	int3   
  4158cb:	mov    al,ds:0xa21f5954
  4158d0:	jb     0x4158a2
  4158d2:	mov    eax,ds:0x822feddc
  4158d7:	mov    ah,0xb2
  4158d9:	push   eax
  4158da:	mov    eax,0xa16e1a23
  4158df:	arpl   WORD PTR [ebp+esi*1-0x2394794a],cx
  4158e6:	xchg   BYTE PTR [ecx+ebp*1-0x56],bh
  4158ea:	imul   esi,edi,0x9a5c236c
  4158f0:	retf   0x4e3e
  4158f3:	fsub   DWORD PTR [edx]
  4158f5:	or     DWORD PTR [edi+0x38],0x585b3b73
  4158fc:	and    dl,BYTE PTR [ebx-0x50]
  4158ff:	popf   
  415900:	mov    ds:0x53f85499,al
  415905:	test   al,0xfb
  415907:	aas    
  415908:	fwait
  415909:	cmp    edx,ebx
  41590b:	sub    al,0x8b
  41590d:	inc    ebp
  41590e:	cwde   
  41590f:	sub    bl,cl
  415911:	mov    dh,0xec
  415913:	out    0x1a,al
  415915:	push   es
  415916:	ins    BYTE PTR es:[edi],dx
  415917:	cmp    al,0x79
  415919:	cmp    eax,DWORD PTR [edi]
  41591b:	mov    ds:0x252bdb2a,al
  415920:	lea    ebx,[eax-0x27]
  415923:	fwait
  415924:	dec    ebx
  415925:	js     0x41594d
  415927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415928:	iret   
  415929:	pop    edi
  41592a:	pop    edi
  41592b:	mov    ?,WORD PTR [edx]
  41592d:	jmp    0xb536:0xd232383
  415934:	and    al,0xdf
  415936:	fwait
  415937:	js     0x41592e
  415939:	adc    DWORD PTR [edi-0xef7e1ac],esp
  41593f:	jbe    0x415989
  415941:	cwde   
  415942:	in     eax,dx
  415943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415944:	retf   
  415945:	psllw  mm3,QWORD PTR [ecx]
  415948:	push   es
  415949:	test   al,0xcd
  41594b:	lds    ebx,FWORD PTR [edx-0x4e]
  41594e:	outs   dx,BYTE PTR ds:[esi]
  41594f:	mov    edx,0x8ffecf42
  415954:	and    eax,0x669180ef
  415959:	cld    
  41595a:	mov    esi,0x8fd66f71
  41595f:	jle    0x415915
  415961:	mov    es,esp
  415963:	push   esi
  415964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415965:	adc    BYTE PTR gs:[edi-0x3fbd1f03],dh
  41596c:	in     eax,0x6b
  41596e:	(bad)  
  415970:	xlat   BYTE PTR ds:[ebx]
  415971:	mov    ebx,0xe56f4f56
  415976:	scas   eax,DWORD PTR es:[edi]
  415977:	add    al,bh
  415979:	in     al,0xe0
  41597b:	sbb    dl,cl
  41597d:	cs iret 
  41597f:	jnp    0x4159d6
  415981:	xor    BYTE PTR [edx],bh
  415983:	or     cl,cl
  415985:	pop    edx
  415986:	inc    ecx
  415987:	or     DWORD PTR [ebx+0x44],0x6f
  41598b:	push   cs
  41598c:	sub    eax,ebx
  41598e:	ret    
  41598f:	push   0xffffffa1
  415991:	sbb    DWORD PTR [eax-0x43],ecx
  415994:	adc    eax,ebx
  415996:	(bad)  
  415997:	into   
  415998:	(bad)  
  415999:	pusha  
  41599a:	and    esp,edi
  41599c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41599d:	fidiv  WORD PTR [ebx-0x7c]
  4159a0:	push   eax
  4159a1:	iret   
  4159a2:	add    al,0x4e
  4159a4:	pop    ebp
  4159a5:	xor    DWORD PTR [esi+0x479439c9],ebp
  4159ab:	mov    esp,0xdf74597f
  4159b0:	mov    ebx,0xc4c18073
  4159b5:	jmp    0x3a3b:0x6d2c5d3
  4159bc:	inc    ebx
  4159bd:	pop    ss
  4159be:	gs enter 0xf169,0xf4
  4159c3:	mov    BYTE PTR [edx+0x32],ah
  4159c6:	adc    ch,BYTE PTR [ebp+0x74]
  4159c9:	icebp  
  4159ca:	inc    esp
  4159cb:	sub    eax,esp
  4159cd:	dec    esp
  4159ce:	out    0xa6,al
  4159d0:	push   eax
  4159d1:	adc    al,dh
  4159d3:	jle    0x415a0a
  4159d5:	xchg   ecx,eax
  4159d6:	mov    esi,0x70b8b038
  4159db:	loop   0x4159e9
  4159dd:	jp     0x4159cf
  4159df:	(bad)  
  4159e1:	push   0xc21cfa6b
  4159e6:	xchg   edx,eax
  4159e7:	mov    ds:0xd42229cf,eax
  4159ec:	jno    0x4159e6
  4159ee:	mov    eax,ds:0x47545e2a
  4159f3:	xchg   ebx,edx
  4159f5:	in     eax,dx
  4159f6:	ror    DWORD PTR [edi+ecx*4+0x1],0x6c
  4159fb:	out    dx,al
  4159fc:	sub    bh,BYTE PTR [esp+edi*4]
  4159ff:	mov    DWORD PTR [ecx-0x6bb6156],0x256c226d
  415a09:	out    0xfb,al
  415a0b:	pop    ss
  415a0c:	add    eax,0x2e6afd9e
  415a11:	adc    cl,BYTE PTR [edi]
  415a13:	rcl    ebx,cl
  415a15:	jl     0x4159a4
  415a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a18:	rcl    dl,cl
  415a1a:	jg     0x415a7d
  415a1c:	loop   0x415a61
  415a1e:	cld    
  415a1f:	int    0x2e
  415a21:	sub    ah,dl
  415a23:	stc    
  415a24:	mov    BYTE PTR [eax-0x3f31bf70],ch
  415a2a:	stos   DWORD PTR es:[edi],eax
  415a2b:	jnp    0x415a3e
  415a2d:	push   ebp
  415a2e:	mov    BYTE PTR [eax-0x48],ah
  415a31:	retf   
  415a32:	pop    edi
  415a33:	dec    edi
  415a34:	(bad)  
  415a35:	cmp    esi,edi
  415a37:	in     al,0x6a
  415a39:	inc    esi
  415a3a:	in     eax,0x1
  415a3c:	jo     0x415a19
  415a3e:	inc    edx
  415a3f:	jecxz  0x415a9d
  415a41:	xchg   BYTE PTR [esi+0x5],cl
  415a44:	mov    edx,0xe47c40a7
  415a49:	inc    ebx
  415a4a:	mov    dl,0x4e
  415a4c:	fisub  WORD PTR [ebx]
  415a4e:	xor    dh,bh
  415a50:	sti    
  415a51:	fstp   DWORD PTR ds:0xe08d0997
  415a57:	(bad)  
  415a59:	sbb    DWORD PTR [ecx+eax*4+0x6b803c8],ecx
  415a60:	adc    BYTE PTR [ecx+0x0],ch
  415a63:	and    al,BYTE PTR [ebp+0x12]
  415a66:	push   es
  415a67:	cmp    dl,bl
  415a69:	(bad)  
  415a6a:	in     eax,0xd3
  415a6c:	jne    0x415a42
  415a6e:	mov    esp,0x3fb0f56c
  415a73:	sub    eax,0x7d150baa
  415a78:	push   esp
  415a79:	adc    BYTE PTR [edx],bl
  415a7b:	sub    bl,BYTE PTR [esp+eax*4+0x1279b835]
  415a82:	or     edx,ebp
  415a84:	mov    dh,0xff
  415a86:	dec    esi
  415a87:	cmc    
  415a88:	and    DWORD PTR [edi],ebp
  415a8a:	xor    eax,DWORD PTR [esi]
  415a8c:	inc    edx
  415a8d:	aad    0xf9
  415a8f:	mov    cl,0xe9
  415a91:	int3   
  415a92:	imul   DWORD PTR [ebx]
  415a94:	mov    esp,0x2efcec1e
  415a99:	cmp    DWORD PTR [edx],0xffffffe5
  415a9c:	(bad)  
  415a9d:	test   DWORD PTR [edx-0x71],0xa94141eb
  415aa4:	xor    bh,ch
  415aa6:	cld    
  415aa7:	sub    ebx,ebp
  415aa9:	dec    edx
  415aaa:	outs   dx,DWORD PTR ds:[esi]
  415aab:	push   ds
  415aac:	in     eax,0xab
  415aae:	mov    esp,gs
  415ab0:	in     al,0xc0
  415ab2:	jbe    0x415b1c
  415ab4:	jl     0x415ae4
  415ab6:	add    DWORD PTR [ebx+0x66c809bf],ebp
  415abc:	aam    0x7d
  415abe:	add    BYTE PTR [esi-0x23],al
  415ac1:	jno    0x415a88
  415ac3:	push   es
  415ac4:	xlat   BYTE PTR ds:[ebx]
  415ac5:	mov    ebx,0x2ad8739d
  415aca:	les    ecx,FWORD PTR [ebp*4+0x625fa4e3]
  415ad1:	aaa    
  415ad2:	ret    
  415ad3:	popa   
  415ad4:	jecxz  0x415b13
  415ad6:	jno    0x415a6a
  415ad8:	and    al,0x3d
  415ada:	adc    eax,0xe9b7d39e
  415adf:	enter  0xc45a,0x66
  415ae3:	push   esp
  415ae4:	jnp    0x415ab7
  415ae6:	cdq    
  415ae7:	ss popf 
  415ae9:	cmp    eax,0x76805f73
  415aee:	inc    eax
  415aef:	outs   dx,BYTE PTR ds:[esi]
  415af0:	mov    dh,0x65
  415af2:	sahf   
  415af3:	popa   
  415af4:	mov    dh,0x10
  415af6:	(bad)  
  415af7:	push   0x99b99f91
  415afc:	mov    edi,0x9edc620c
  415b01:	inc    ebp
  415b02:	push   ecx
  415b03:	fstp   TBYTE PTR [esi+0x265ca212]
  415b09:	adc    eax,0x5e0ab1f0
  415b0e:	(bad)  
  415b0f:	in     al,dx
  415b10:	repz and eax,0x88f10755
  415b16:	dec    eax
  415b17:	les    ebp,FWORD PTR [ebp-0x42]
  415b1a:	push   edi
  415b1b:	adc    al,0x1c
  415b1d:	xchg   ecx,eax
  415b1e:	in     eax,dx
  415b1f:	popa   
  415b20:	and    al,0x90
  415b22:	nop
  415b23:	fcomi  st,st(2)
  415b25:	(bad)  
  415b26:	jg     0x415b5d
  415b28:	frstor [edx]
  415b2a:	push   edi
  415b2b:	push   esi
  415b2c:	xchg   ebp,eax
  415b2d:	mov    eax,0x2813eb32
  415b32:	and    DWORD PTR [ecx],esi
  415b34:	and    edi,DWORD PTR [eax]
  415b36:	in     al,dx
  415b37:	jg     0x415b09
  415b39:	pop    es
  415b3a:	inc    eax
  415b3b:	mul    bh
  415b3d:	add    BYTE PTR [eax],al
  415b3f:	add    BYTE PTR [eax],al
  415b41:	add    al,al
  415b43:	push   ss
  415b44:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415b48:	fistp  DWORD PTR [edi-0x239a6a81]
  415b4e:	(bad)  
  415b4f:	mov    al,ds:0xd96c1960
  415b54:	add    BYTE PTR [eax],al
  415b56:	repz add al,0x0
  415b59:	add    BYTE PTR [ecx],ah
  415b5b:	jmp    esp
  415b5d:	in     al,dx
  415b5e:	xchg   esi,eax
  415b5f:	inc    eax
  415b60:	xor    dl,ah
  415b62:	mov    ss,WORD PTR [edi+0x59e702d9]
  415b68:	inc    ecx
  415b69:	jge    0x415b42
  415b6b:	repz pop ds
  415b6d:	imul   edx,ebx,0x5a
  415b70:	or     eax,0xbf38c11e
  415b75:	cmp    eax,0x1e2b366c
  415b7a:	jo     0x415b33
  415b7c:	pop    ss
  415b7d:	xchg   esp,eax
  415b7e:	call   0x7674823b
  415b83:	mov    dh,0x24
  415b85:	(bad)  
  415b86:	shr    cl,1
  415b88:	int    0x40
  415b8a:	adc    DWORD PTR [esi+ebx*1+0x66],ebx
  415b8e:	inc    ecx
  415b8f:	lock dec ecx
  415b91:	(bad)  [edi]
  415b93:	inc    ebp
  415b94:	mov    dh,0xa9
  415b96:	or     ebp,esp
  415b98:	jbe    0x415b97
  415b9a:	pusha  
  415b9b:	inc    edx
  415b9c:	jbe    0x415bb0
  415b9e:	mov    edi,0x384d5752
  415ba3:	repnz fcomp st(1)
  415ba6:	or     al,0x8d
  415ba8:	sbb    eax,edi
  415baa:	sbb    eax,0x1ff7e3e3
  415baf:	test   BYTE PTR [esp+edi*8-0x4b],0x7f
  415bb4:	xor    BYTE PTR [ebx],ch
  415bb6:	or     DWORD PTR [ebp+0x4c8e79b9],0xffffff87
  415bbd:	lock fld QWORD PTR [edx-0x4]
  415bc1:	push   edx
  415bc2:	sbb    ecx,esi
  415bc4:	ja     0x415c22
  415bc6:	jmp    0x829d:0xfa4d5fdd
  415bcd:	xor    eax,0xe204bfaa
  415bd2:	xchg   esp,eax
  415bd4:	repz mov dl,0xfb
  415bd7:	jecxz  0x415c2a
  415bd9:	or     DWORD PTR [ecx+0x5d],0xf31a983a
  415be0:	test   BYTE PTR [esi-0x64c291c4],bl
  415be6:	sub    al,0x9e
  415be8:	and    BYTE PTR [ecx+ebx*2-0x4b9b332b],bh
  415bef:	push   ebp
  415bf0:	fs mov dl,0x4
  415bf3:	scas   eax,DWORD PTR es:[edi]
  415bf4:	shr    bl,0x84
  415bf7:	jb     0x415c58
  415bf9:	mov    esp,0xd283008f
  415bfe:	mov    esp,0x828f67a6
  415c03:	jge    0x415c4e
  415c05:	pop    ecx
  415c06:	jmp    0xf505:0xdcdd1558
  415c0d:	sub    eax,0x809c2923
  415c12:	inc    ebx
  415c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c14:	xchg   esp,eax
  415c15:	dec    esi
  415c16:	(bad)  
  415c17:	sar    BYTE PTR [eax],1
  415c19:	pop    ebx
  415c1a:	pop    esp
  415c1b:	loop   0x415c3c
  415c1d:	cmp    DWORD PTR [ebx+0x24],ecx
  415c20:	and    BYTE PTR [ecx],0x39
  415c23:	mov    esp,0xf14f8385
  415c28:	and    bh,al
  415c2a:	out    0x87,eax
  415c2c:	mov    edi,0x1cf59400
  415c31:	or     BYTE PTR [edi],dh
  415c33:	and    ebx,DWORD PTR [edx+edx*8+0x49]
  415c37:	jae    0x415c88
  415c39:	xor    al,0x47
  415c3b:	push   edx
  415c3c:	(bad)  
  415c3d:	shl    DWORD PTR [ecx-0x21ab74b7],cl
  415c43:	add    al,BYTE PTR [edx+0x413566c7]
  415c49:	add    al,dh
  415c4b:	inc    esi
  415c4c:	in     eax,0x57
  415c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c4f:	ds jae 0x415bf0
  415c52:	mov    al,ds:0x217f1622
  415c57:	mov    cl,0xc7
  415c59:	loope  0x415bfb
  415c5b:	pusha  
  415c5c:	clc    
  415c5d:	lods   al,BYTE PTR ds:[esi]
  415c5e:	add    al,0xe0
  415c60:	sub    bl,bh
  415c62:	dec    ebp
  415c63:	sub    ax,0x84b3
  415c67:	adc    eax,0x74ae633d
  415c6c:	in     eax,dx
  415c6d:	adc    al,0x22
  415c6f:	xlat   BYTE PTR ds:[ebx]
  415c70:	mov    eax,ds:0x4f1ef171
  415c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c76:	or     al,0x98
  415c78:	aam    0x3a
  415c7a:	pop    ds
  415c7b:	(bad)  
  415c7c:	dec    ecx
  415c7d:	xlat   BYTE PTR ds:[ebx]
  415c7e:	shl    DWORD PTR [esi+0x47],1
  415c81:	inc    eax
  415c82:	inc    eax
  415c83:	imul   ebx,DWORD PTR [eax-0x33],0x2f
  415c87:	mov    al,ds:0xbcd2b5aa
  415c8c:	mov    ecx,0xd4f0c115
  415c91:	mov    ch,0xc0
  415c93:	push   ebx
  415c94:	cmp    BYTE PTR [ebx+0x773682e6],dh
  415c9a:	sti    
  415c9b:	jne    0x415c8d
  415c9d:	test   DWORD PTR [esi+esi*4],ecx
  415ca0:	and    edi,DWORD PTR [edx+0x41]
  415ca3:	jmp    0x2a7e6d15
  415ca8:	adc    DWORD PTR [edx-0x2fca6f84],edx
  415cae:	jl     0x415cc9
  415cb0:	or     BYTE PTR [ebx],dl
  415cb2:	loope  0x415d16
  415cb4:	mov    esi,0xa66221e6
  415cb9:	push   cs
  415cba:	mov    ecx,0x89a48ddc
  415cbf:	jl     0x415d30
  415cc1:	ficom  DWORD PTR [ebp+ebp*2+0x55]
  415cc5:	push   cs
  415cc6:	mov    bl,0x15
  415cc8:	lods   al,BYTE PTR ds:[esi]
  415cc9:	dec    edx
  415cca:	or     DWORD PTR [eax],0x11631f6c
  415cd0:	sti    
  415cd1:	adc    eax,0xfa7b8ed4
  415cd6:	pushf  
  415cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cd8:	into   
  415cd9:	pop    ds
  415cda:	lea    edx,[esi-0x3d]
  415cdd:	mov    edi,0xe18b3699
  415ce2:	add    DWORD PTR [ebx],ebp
  415ce4:	mov    ch,0x68
  415ce6:	cmp    ebx,DWORD PTR [eax-0x7d]
  415ce9:	jmp    0x415c81
  415ceb:	mov    al,0x66
  415ced:	lea    ecx,[eax+0x2dbdc3f2]
  415cf3:	enter  0xec2f,0x9f
  415cf7:	ror    ah,1
  415cf9:	jmp    0xaffe2374
  415cfe:	mov    esp,0xd87a099e
  415d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d04:	daa    
  415d05:	rcl    BYTE PTR [ebp-0x74],cl
  415d08:	rol    DWORD PTR [ebp+ebp*8+0x44],1
  415d0c:	add    bl,bh
  415d0e:	ins    BYTE PTR es:[edi],dx
  415d0f:	mov    ds:0x6a74bb6e,al
  415d14:	std    
  415d15:	cmp    eax,0x400d20c1
  415d1a:	pushf  
  415d1b:	addr16 in eax,dx
  415d1d:	adc    al,0x82
  415d1f:	xchg   esp,eax
  415d20:	fdivr  DWORD PTR [edx-0x64]
  415d23:	inc    esp
  415d24:	jmp    0x63cc:0x90d5d3d
  415d2b:	jae    0x415d92
  415d2d:	test   BYTE PTR [edx+0x78ba2dcc],bl
  415d33:	add    ebp,esp
  415d35:	shl    DWORD PTR [ebp+0x7a1fa9b4],0x7c
  415d3c:	jmp    0x224cc357
  415d41:	enter  0xc83f,0x1a
  415d45:	in     al,dx
  415d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d47:	pop    es
  415d48:	ja     0x415cfd
  415d4a:	push   cs
  415d4b:	push   es
  415d4c:	clc    
  415d4d:	add    DWORD PTR [esi+0x2620bd1e],edx
  415d53:	cld    
  415d54:	mov    ds:0xed43d9f8,eax
  415d59:	scas   eax,DWORD PTR es:[edi]
  415d5a:	jno    0x415dc4
  415d5c:	xchg   ecx,eax
  415d5d:	ins    DWORD PTR es:[edi],dx
  415d5e:	xchg   esi,eax
  415d5f:	push   cs
  415d60:	enter  0xa44c,0x63
  415d64:	mov    bh,0xf6
  415d66:	pop    ecx
  415d67:	cs jb  0x415d84
  415d6a:	into   
  415d6b:	and    esp,edx
  415d6d:	jno    0x415d54
  415d6f:	cld    
  415d70:	pop    ss
  415d71:	cli    
  415d72:	add    BYTE PTR [ebx-0x38],0x90
  415d76:	(bad)  
  415d77:	test   DWORD PTR [edx+0x75],0x8953f9d6
  415d7e:	jmp    0x98f2:0x7777d932
  415d85:	adc    dh,0xe4
  415d88:	dec    edx
  415d89:	fnstenv [ebp+ebx*8-0x71]
  415d8d:	jg     0x415db1
  415d8f:	mov    al,0x2f
  415d91:	or     dl,BYTE PTR ds:0x9d37f1fd
  415d97:	and    BYTE PTR [edi-0x5],ch
  415d9a:	test   eax,0xf7cf0851
  415d9f:	retf   
  415da0:	add    esi,DWORD PTR [esi+0x2d3b2947]
  415da6:	mov    dl,0x7a
  415da8:	jge    0x415e25
  415daa:	test   DWORD PTR ds:0x9f31471b,eax
  415db0:	jmp    0x62e821c
  415db5:	inc    ebx
  415db6:	ins    BYTE PTR es:[edi],dx
  415db7:	add    cl,BYTE PTR [ebp+0x69561237]
  415dbd:	in     al,dx
  415dbe:	xchg   cl,bh
  415dc0:	push   esp
  415dc1:	sub    edi,DWORD PTR [edi]
  415dc3:	addr16 mov dh,0xb8
  415dc6:	add    DWORD PTR [esi+0x70c34df9],ebp
  415dcc:	pushf  
  415dcd:	ret    0x6c4e
  415dd0:	cmp    ebp,DWORD PTR [ebx+0x42]
  415dd3:	push   edx
  415dd4:	rcl    BYTE PTR [edi-0x6a],1
  415dd7:	inc    ecx
  415dd8:	fsubr  st(3),st
  415dda:	add    ebp,DWORD PTR [edi-0x6c]
  415ddd:	int3   
  415dde:	ret    
  415ddf:	mov    cl,0xd6
  415de1:	dec    ecx
  415de2:	mov    WORD PTR [ebx+0xc6fd3e7],gs
  415de8:	scas   al,BYTE PTR es:[edi]
  415de9:	mov    BYTE PTR ds:0xd26577ea,dl
  415def:	push   cs
  415df0:	call   0x90d7f8fa
  415df5:	ror    BYTE PTR ds:0xf8dbabc4,1
  415dfb:	stos   BYTE PTR es:[edi],al
  415dfc:	and    BYTE PTR [edi],dl
  415dfe:	mov    BYTE PTR [esi],al
  415e00:	dec    esi
  415e01:	in     eax,dx
  415e02:	(bad)  
  415e03:	not    al
  415e05:	cmp    eax,0x4e9f78a3
  415e0a:	mov    ebx,0x5f89e011
  415e0f:	and    BYTE PTR [esi+0x5f],0xae
  415e13:	sbb    eax,0xfa145d14
  415e18:	outs   dx,BYTE PTR ds:[esi]
  415e19:	inc    edi
  415e1a:	ja     0x415dd3
  415e1c:	in     eax,dx
  415e1d:	sti    
  415e1e:	xor    ch,dl
  415e20:	lods   al,BYTE PTR ds:[esi]
  415e21:	inc    eax
  415e22:	fs out dx,eax
  415e24:	inc    eax
  415e25:	sahf   
  415e26:	in     eax,0x39
  415e28:	xlat   BYTE PTR ds:[ebx]
  415e29:	dec    edx
  415e2a:	mov    WORD PTR [esi+0x77],ss
  415e2d:	fs mov edx,0x63674cff
  415e33:	test   BYTE PTR [edi+0x1f],cl
  415e36:	inc    edx
  415e37:	cwde   
  415e38:	cdq    
  415e39:	push   es
  415e3a:	or     DWORD PTR [ecx-0x3f],ecx
  415e3d:	mov    dl,0x48
  415e3f:	pushf  
  415e40:	jp     0x415ded
  415e42:	and    al,0x9c
  415e44:	scas   eax,DWORD PTR es:[edi]
  415e45:	cwde   
  415e46:	(bad)  
  415e47:	jl     0x415de2
  415e49:	fldenv [ecx+0x53]
  415e4c:	mov    WORD PTR [edx-0x56a10465],ds
  415e52:	lods   eax,DWORD PTR ds:[esi]
  415e53:	mov    ss,WORD PTR [edi]
  415e55:	push   ebx
  415e56:	jmp    0x2a71:0x82e4256b
  415e5d:	(bad)  
  415e5e:	aad    0xd0
  415e60:	cdq    
  415e61:	mov    edx,DWORD PTR [esi-0x41]
  415e64:	or     al,0x65
  415e66:	jmp    0x1b91:0xd315dcb0
  415e6d:	addr16 cs mov dh,ch
  415e71:	leave  
  415e72:	in     al,dx
  415e73:	(bad)  
  415e74:	push   esi
  415e75:	popa   
  415e76:	out    dx,eax
  415e77:	add    BYTE PTR [esi],ah
  415e79:	adc    eax,DWORD PTR [esi-0x45]
  415e7c:	outs   dx,DWORD PTR ds:[esi]
  415e7d:	push   cs
  415e7e:	rol    ebx,0xc9
  415e81:	shr    DWORD PTR [esi-0x19],1
  415e84:	cmp    DWORD PTR [ebp-0x59103035],eax
  415e8a:	lods   al,BYTE PTR ds:[esi]
  415e8b:	dec    ebp
  415e8c:	(bad)  
  415e8d:	stos   DWORD PTR es:[edi],eax
  415e8e:	popa   
  415e8f:	push   esi
  415e90:	add    BYTE PTR [edi-0x1b6f2ba1],dl
  415e96:	popf   
  415e97:	xchg   ebx,eax
  415e98:	iret   
  415e99:	mov    al,0x85
  415e9b:	push   0x18aded0f
  415ea0:	jmp    0x415f20
  415ea2:	inc    ecx
  415ea3:	(bad)  
  415ea4:	xor    DWORD PTR [ebx+edx*4-0x38],esi
  415ea8:	mov    ch,0x53
  415eaa:	aam    0x9d
  415eac:	dec    ebp
  415ead:	mov    dh,0x94
  415eaf:	in     eax,dx
  415eb0:	and    BYTE PTR [edi+0x594b7670],0x13
  415eb7:	test   al,0x96
  415eb9:	call   FWORD PTR [esi-0x1a1f03e2]
  415ebf:	gs in  al,0x12
  415ec2:	sub    al,BYTE PTR [eax-0x590ec881]
  415ec8:	inc    BYTE PTR [esp+ecx*1-0xf]
  415ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ecd:	dec    ebx
  415ece:	iret   
  415ecf:	pop    eax
  415ed0:	test   ebx,0x91adee8
  415ed6:	cli    
  415ed7:	clc    
  415ed8:	pop    eax
  415ed9:	in     eax,dx
  415eda:	out    dx,eax
  415edb:	cmp    BYTE PTR [ecx-0x6d],ah
  415ede:	mov    al,ds:0xd3706fba
  415ee3:	add    eax,0xce73fd6c
  415ee8:	repnz sbb eax,0x57389eb
  415eee:	lods   eax,DWORD PTR ds:[esi]
  415eef:	sbb    DWORD PTR [edx-0x39fb752a],0xb629f306
  415ef9:	adc    al,0xdf
  415efb:	push   0xa1b2bdea
  415f00:	stc    
  415f01:	xchg   esi,eax
  415f02:	fcomp  DWORD PTR [ecx-0x38ba320b]
  415f08:	mov    edi,0xcdf1490b
  415f0d:	xlat   BYTE PTR ds:[ebx]
  415f0e:	ja     0x415f57
  415f10:	out    0xf3,al
  415f12:	leave  
  415f13:	aaa    
  415f14:	push   0x9300f53
  415f19:	fst    QWORD PTR ds:0x2f1114f0
  415f1f:	stc    
  415f20:	mov    dl,BYTE PTR [eax-0x4d9413aa]
  415f26:	(bad)  
  415f27:	lods   eax,DWORD PTR ds:[esi]
  415f28:	and    eax,DWORD PTR [ebp-0x235e5586]
  415f2e:	stos   DWORD PTR es:[edi],eax
  415f2f:	test   DWORD PTR [ebp+esi*4+0x37bbf606],0xf7d2736a
  415f3a:	sbb    eax,0x11df0ecf
  415f3f:	call   0x22bd:0x71c13aab
  415f46:	fisub  DWORD PTR [edi+0x25be9998]
  415f4c:	pop    ds
  415f4d:	cmp    bl,BYTE PTR [eax-0x1de31faa]
  415f53:	sub    DWORD PTR [ebp+0x20802e09],edx
  415f59:	add    al,0xc8
  415f5c:	fist   WORD PTR [eax+esi*8+0x38671b28]
  415f63:	int    0xfc
  415f65:	xchg   ebx,eax
  415f66:	test   al,0x4f
  415f69:	(bad)  
  415f6a:	xor    eax,DWORD PTR [edx+0x3d81d7ce]
  415f70:	scas   eax,DWORD PTR es:[edi]
  415f71:	xchg   edx,eax
  415f72:	stos   DWORD PTR es:[edi],eax
  415f73:	lods   eax,DWORD PTR ds:[esi]
  415f74:	test   DWORD PTR [bp+di-0x7d],0x1c47977c
  415f7c:	repnz mov DWORD PTR [ebx+eiz*1-0x44c7bab0],edi
  415f84:	adc    edx,DWORD PTR [ecx+ebx*8+0x5548ca8b]
  415f8b:	dec    esi
  415f8c:	lods   eax,DWORD PTR ds:[esi]
  415f8d:	inc    BYTE PTR [edx]
  415f8f:	je     0x415f8c
  415f91:	cmp    eax,0x7cba4aa7
  415f96:	fmul   DWORD PTR [ecx+0x2c]
  415f99:	in     eax,dx
  415f9a:	shl    BYTE PTR [edi+edx*1+0x6673b3f8],0x45
  415fa2:	pop    ss
  415fa3:	in     al,0x7d
  415fa5:	icebp  
  415fa6:	add    bh,al
  415fa8:	push   ds
  415fa9:	lods   eax,DWORD PTR ds:[esi]
  415faa:	lods   eax,DWORD PTR ds:[esi]
  415fab:	sub    eax,0x74b1f9b7
  415fb0:	dec    ecx
  415fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fb3:	cli    
  415fb4:	inc    eax
  415fb5:	mov    esi,0x408cc970
  415fba:	jnp    0x415fc9
  415fbc:	jmp    0xcb50:0x4d56e4e3
  415fc3:	push   ebx
  415fc4:	popf   
  415fc5:	(bad)  
  415fc6:	loop   0x416041
  415fc8:	stc    
  415fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fca:	ss mov edi,0x52c1575c
  415fd0:	je     0x415f94
  415fd2:	loopne 0x416001
  415fd4:	sub    DWORD PTR [ebx+ebx*4],edx
  415fd7:	jno    0x415fed
  415fd9:	out    0x38,eax
  415fdb:	mov    cl,0x27
  415fdd:	imul   esp,ebx,0xa0a7f56a
  415fe3:	xor    dh,BYTE PTR ds:0x27609517
  415fe9:	xor    ch,0xa
  415fec:	mov    edi,0x9a4a54ee
  415ff1:	pcmpgtw mm3,QWORD PTR [eax+edi*8]
  415ff5:	lods   al,BYTE PTR ds:[esi]
  415ff6:	fld    QWORD PTR [ebp-0x47a4d876]
  415ffc:	lds    eax,FWORD PTR ds:0x9e3ff808
  416002:	sbb    al,0x4d
  416004:	stc    
  416005:	push   ss
  416006:	xor    ch,ah
  416008:	mov    edx,0x4a1a71ea
  41600d:	retf   
  41600e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41600f:	dec    ebx
  416010:	adc    DWORD PTR [ebx+ecx*2],0xffffffa4
  416014:	sar    DWORD PTR [esi],cl
  416016:	mov    edx,0xa3d0e567
  41601b:	(bad)  
  41601c:	jne    0x416004
  41601e:	xor    DWORD PTR [edx+0x51],esi
  416021:	icebp  
  416022:	sub    bh,BYTE PTR [eax]
  416024:	pop    eax
  416025:	dec    esi
  416026:	xor    al,0x7d
  416028:	pop    ebx
  416029:	jno    0x416046
  41602b:	jp     0x41606f
  41602d:	inc    DWORD PTR [ecx-0x57]
  416030:	and    edx,0x5acd2b91
  416036:	retf   
  416037:	aam    0x62
  416039:	inc    ebp
  41603a:	jns    0x415fe0
  41603c:	inc    esp
  41603d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41603e:	rcl    BYTE PTR [ecx-0x1fbbcab6],1
  416044:	fcmovb st,st(5)
  416046:	test   eax,0x34ca89e5
  41604b:	push   ecx
  41604c:	mov    dl,0x0
  41604e:	add    BYTE PTR [eax],al
  416050:	add    BYTE PTR [eax],al
  416052:	cmp    dh,BYTE PTR [ebp+0x3c]
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x41601e
  41605f:	inc    ebp
  416060:	fistp  WORD PTR [bx-0x22]
  416064:	add    BYTE PTR [eax],al
  416066:	repz add al,0x0
  416069:	add    BYTE PTR [ebx],ah
  41606b:	mov    ecx,0x5e6d0d19
  416070:	fcom   DWORD PTR [edi]
  416072:	dec    ebp
  416073:	xchg   ecx,eax
  416074:	je     0x416087
  416076:	mov    eax,0xbb384a7e
  41607b:	outs   dx,BYTE PTR ds:[esi]
  41607c:	out    0x5e,eax
  41607e:	inc    ecx
  41607f:	es rcl dh,0x8e
  416083:	dec    ecx
  416084:	loopne 0x41602d
  416086:	mov    BYTE PTR [edi+0x32],0xce
  41608a:	inc    esi
  41608b:	js     0x416016
  41608d:	or     BYTE PTR [esi-0x72f4de25],ah
  416093:	cmc    
  416094:	(bad)  
  416095:	pop    eax
  416096:	or     al,0xef
  416098:	jns    0x41609e
  41609a:	xlat   BYTE PTR ds:[ebx]
  41609b:	sub    DWORD PTR [edi],ebp
  41609d:	fst    DWORD PTR gs:[edi+0x56]
  4160a1:	enter  0xbaeb,0x83
  4160a5:	outs   dx,BYTE PTR ds:[esi]
  4160a6:	cmp    eax,0xfb11d9a2
  4160ab:	mov    al,0x22
  4160ad:	repz retf 
  4160af:	push   0xb93a1080
  4160b4:	cmp    BYTE PTR [ecx+0x66],0xf0
  4160b8:	hlt    
  4160b9:	loopne 0x416046
  4160bb:	add    al,0xa7
  4160bd:	call   0x39882f2c
  4160c2:	inc    esi
  4160c3:	cmp    BYTE PTR [ebx],cl
  4160c5:	add    al,0x6b
  4160c7:	aad    0xfd
  4160c9:	rcl    BYTE PTR ds:0x340d2472,cl
  4160cf:	or     BYTE PTR [esi+eiz*8+0x31],cl
  4160d3:	clc    
  4160d4:	hlt    
  4160d5:	mov    ebx,0x2a17974b
  4160da:	test   BYTE PTR [edx],ch
  4160dc:	jmp    0x9804:0x7f3b8c58
  4160e3:	fidiv  DWORD PTR [edi+ebp*2]
  4160e6:	mov    ebp,0x32a8a53b
  4160eb:	sub    DWORD PTR [edi],0xffffffde
  4160ee:	sub    al,0xe9
  4160f0:	test   DWORD PTR [ebx+0x46a3774c],ebp
  4160f6:	mov    DWORD PTR [edx+ebp*1-0x7],edi
  4160fa:	std    
  4160fb:	icebp  
  4160fc:	(bad)  
  4160fd:	jg     0x4160d0
  4160ff:	lea    esp,[eax-0x701e2688]
  416105:	xor    BYTE PTR [edi],bh
  416107:	leave  
  416108:	and    al,0x51
  41610a:	cs inc ebp
  41610c:	jp     0x41612d
  41610e:	mov    edx,0x28184f8e
  416113:	lahf   
  416114:	clc    
  416115:	call   0x780e:0x18ee83b0
  41611c:	mov    ebx,0x7f6846c9
  416121:	adc    dh,ah
  416123:	(bad)  
  416124:	(bad)  
  416125:	jp     0x4160a7
  416127:	in     al,0x24
  416129:	xchg   edx,eax
  41612a:	hlt    
  41612b:	fmul   DWORD PTR [edi+edx*4]
  41612e:	jae    0x416157
  416130:	call   0x20f1c5cc
  416135:	adc    eax,0xbad5a388
  41613a:	lea    esp,[edx]
  41613c:	sbb    eax,0x8859138c
  416141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416142:	ins    DWORD PTR es:[edi],dx
  416143:	or     eax,0x705fd29a
  416148:	sbb    BYTE PTR fs:[eax],0xb3
  41614c:	adc    esp,ebx
  41614e:	lock or al,0xce
  416151:	push   ecx
  416152:	sub    eax,0x44aaf1c6
  416157:	stos   DWORD PTR es:[edi],eax
  416158:	mov    eax,ds:0xa4358626
  41615d:	push   0xc2cad2a3
  416162:	mov    BYTE PTR [eax-0x62],bl
  416165:	add    al,0x63
  416167:	inc    ebp
  416168:	mov    ebx,0xac96acd1
  41616d:	jne    0x416189
  41616f:	cdq    
  416170:	sbb    DWORD PTR [edx-0x6ad59481],ebp
  416176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416177:	push   esp
  416178:	jno    0x416168
  41617a:	adc    al,0xed
  41617c:	rcl    BYTE PTR [ecx+0x81e2d43],1
  416182:	add    al,0x5b
  416184:	mov    BYTE PTR [edi-0x4601e57c],bl
  41618a:	cwde   
  41618b:	sbb    DWORD PTR [esi-0x1b],edx
  41618e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41618f:	fcompp 
  416191:	(bad)  
  416192:	and    eax,0x4f6613ea
  416197:	jns    0x416213
  416199:	cmp    eax,0xeb10d3f0
  41619e:	mov    edi,ebx
  4161a0:	sbb    dl,ah
  4161a2:	cmp    BYTE PTR [ebp-0x3e],cl
  4161a5:	mov    BYTE PTR [ecx],dh
  4161a7:	push   ebx
  4161a8:	test   al,0xc3
  4161aa:	mov    ebx,0xfaf8e086
  4161af:	(bad)  
  4161b0:	sbb    cl,BYTE PTR ds:0x899848fd
  4161b6:	mov    gs:0xd0483888,al
  4161bc:	mov    ch,0x61
  4161be:	popa   
  4161bf:	rol    edx,0x77
  4161c2:	jmp    0x416196
  4161c4:	popf   
  4161c5:	add    edi,DWORD PTR [edi+0x50102ca9]
  4161cb:	fstp   TBYTE PTR [ecx+0x65a2b74c]
  4161d1:	dec    edx
  4161d2:	mov    ds:0x3ccba6d6,eax
  4161d7:	mov    ch,0xa8
  4161d9:	cmp    BYTE PTR [eax-0x2f],cl
  4161dc:	jle    0x4161f6
  4161de:	jnp    0x41623c
  4161e0:	jmp    0xcd6e8bb4
  4161e5:	ss cwde 
  4161e7:	xchg   esp,eax
  4161e8:	shl    bh,1
  4161ea:	lea    ebx,[edi]
  4161ec:	fisttp QWORD PTR [eax-0x66]
  4161ef:	xchg   esi,eax
  4161f0:	(bad)  
  4161f1:	cld    
  4161f2:	inc    esi
  4161f3:	mov    ebx,0x397db9ae
  4161f8:	aas    
  4161f9:	mov    edx,DWORD PTR [edi]
  4161fb:	rcl    bh,0x74
  4161fe:	lods   al,BYTE PTR ds:[esi]
  4161ff:	or     al,0x61
  416201:	mov    cs,WORD PTR [ebx-0x25]
  416204:	jle    0x41618f
  416206:	lahf   
  416207:	leave  
  416208:	push   esp
  416209:	or     bh,cl
  41620b:	sub    BYTE PTR [esi-0x286120d2],ch
  416211:	cmp    esp,DWORD PTR [ebx+esi*1+0x67ced866]
  416218:	dec    ebp
  416219:	push   esp
  41621a:	mov    ebx,0xdcb19f7a
  41621f:	sbb    DWORD PTR [edi-0x2f],edx
  416222:	mov    ebp,DWORD PTR [edx]
  416224:	jno    0x416226
  416226:	mov    ah,0xfc
  416228:	add    al,0x29
  41622a:	sbb    DWORD PTR ds:0xa48782a,eax
  416230:	xchg   ebp,eax
  416231:	jne    0x4161f2
  416233:	pop    ecx
  416234:	xchg   edx,eax
  416235:	xchg   ebx,eax
  416236:	fwait
  416237:	imul   BYTE PTR [edi]
  416239:	out    0xc5,al
  41623b:	and    DWORD PTR [esi],eax
  41623d:	push   edx
  41623e:	pop    edi
  41623f:	mov    eax,0xf46b0963
  416244:	dec    edi
  416245:	or     ebp,DWORD PTR [edi+0x1c2861ab]
  41624b:	push   esi
  41624c:	adc    dh,bh
  41624e:	push   edx
  41624f:	or     BYTE PTR [ecx+edx*8-0x12],dh
  416253:	leave  
  416254:	xor    ah,BYTE PTR [esi]
  416256:	jne    0x41623e
  416258:	adc    eax,0xb3f5b0d2
  41625d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41625e:	xor    al,0x3e
  416260:	xor    al,0x66
  416262:	jecxz  0x41623e
  416264:	inc    ecx
  416265:	test   al,0x91
  416267:	fist   DWORD PTR [esi-0x6de6bca8]
  41626d:	pusha  
  41626e:	sti    
  41626f:	push   ss
  416270:	mov    ebx,0x69e0e8cd
  416275:	adc    dl,BYTE PTR [ebp-0x655c82e5]
  41627b:	popa   
  41627c:	fsubrp st(2),st
  41627e:	xchg   ecx,eax
  41627f:	pop    ebp
  416280:	out    dx,al
  416281:	mov    esi,0xd0810a63
  416286:	cld    
  416287:	call   0x3c9b1d91
  41628c:	push   0xfffffff3
  41628e:	pop    ebx
  41628f:	stos   DWORD PTR es:[edi],eax
  416290:	imul   ecx,DWORD PTR [ebx],0xbc419342
  416296:	pop    ss
  416297:	add    al,0x82
  416299:	push   eax
  41629a:	ror    BYTE PTR [ebp+0x6ce950ec],0x8c
  4162a1:	or     BYTE PTR [edi-0x75],ah
  4162a4:	lods   eax,DWORD PTR ds:[esi]
  4162a5:	add    BYTE PTR [ebx],dl
  4162a7:	dec    ecx
  4162a8:	xlat   BYTE PTR ds:[ebx]
  4162a9:	cmp    eax,DWORD PTR [ecx+eax*1+0x5ac5ff5]
  4162b0:	ins    DWORD PTR es:[edi],dx
  4162b1:	adc    BYTE PTR [ecx+0x5f],dh
  4162b4:	mov    esp,es
  4162b6:	lds    esp,FWORD PTR [edi-0x2d6d575]
  4162bc:	mov    dl,0xf4
  4162be:	adc    DWORD PTR [ebp-0x75f3b36e],0x1969958a
  4162c8:	popf   
  4162c9:	repz lock pop eax
  4162cc:	loopne 0x4162e2
  4162ce:	imul   esi,DWORD PTR [ebp+eiz*4+0x56],0x755fac7d
  4162d6:	mov    gs,WORD PTR [edi+0x54]
  4162d9:	enter  0x1ccc,0x62
  4162dd:	pop    ebx
  4162de:	(bad)  
  4162df:	mov    dh,0x30
  4162e1:	mov    dh,0x5b
  4162e3:	fisub  DWORD PTR [ebx+eax*8-0x42ea85dc]
  4162ea:	xor    ecx,ebp
  4162ec:	push   es
  4162ed:	pmovmskb eax,mm7
  4162f0:	pop    es
  4162f1:	xor    dh,BYTE PTR [ebx+0x6ee85e47]
  4162f7:	or     BYTE PTR [esi],al
  4162f9:	pop    ss
  4162fa:	loopne 0x4162ac
  4162fc:	fnstsw WORD PTR [esi+0x68a922f9]
  416302:	ss push esp
  416304:	les    ax,DWORD PTR [edx-0x3ff1a3ed]
  41630b:	repnz pop edx
  41630d:	xor    al,0x3d
  41630f:	shl    BYTE PTR [ecx],1
  416311:	pusha  
  416312:	pop    ss
  416313:	mov    ecx,DWORD PTR [edi+eiz*1]
  416316:	xor    edx,DWORD PTR [esi-0x1c6968ec]
  41631c:	fsubr  DWORD PTR [eax-0x65]
  41631f:	sbb    BYTE PTR [eax+eax*4+0x73400129],bh
  416326:	jmp    0x416381
  416328:	enter  0x49f0,0x13
  41632c:	jge    0x41639b
  41632e:	ins    BYTE PTR es:[edi],dx
  41632f:	pop    ecx
  416330:	jecxz  0x416382
  416332:	and    bh,ah
  416334:	mov    eax,ds:0xdc63e920
  416339:	(bad)  
  41633a:	sub    bh,0x39
  41633d:	push   ss
  41633e:	leave  
  41633f:	mov    ds:0x54fbc229,eax
  416344:	cmp    edi,DWORD PTR [edx-0x61109681]
  41634a:	sbb    DWORD PTR [edi+0x10],esp
  41634d:	stos   BYTE PTR es:[di],al
  41634f:	shl    ebx,1
  416351:	jo     0x4162e9
  416353:	xchg   esp,eax
  416354:	jg     0x416321
  416356:	push   ebp
  416357:	jne    0x416357
  416359:	ins    DWORD PTR es:[edi],dx
  41635a:	sbb    esi,DWORD PTR [eax+0x4b]
  41635d:	mov    dh,0x17
  41635f:	repnz arpl WORD PTR ds:0x6d8fc3f0,sp
  416366:	pop    ds
  416367:	ins    DWORD PTR es:[edi],dx
  416368:	idiv   DWORD PTR [ecx-0x26]
  41636b:	mov    edx,0x10820b1b
  416370:	jnp    0x45686541
  416376:	ins    BYTE PTR es:[edi],dx
  416377:	lock mov dh,0xa
  41637a:	add    ecx,eax
  41637c:	xchg   edi,eax
  41637d:	loopne 0x416333
  41637f:	cmp    ecx,DWORD PTR [eax-0x325cb4bf]
  416385:	push   ss
  416386:	jne    0x416389
  416388:	adc    al,0xfc
  41638a:	inc    eax
  41638b:	dec    eax
  41638c:	xor    al,0x6c
  41638e:	pop    edx
  41638f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416390:	add    DWORD PTR ds:0x3fdf2ae9,edx
  416396:	inc    edx
  416397:	sub    eax,0x2bd446d3
  41639c:	daa    
  41639d:	mov    dl,0x31
  41639f:	fnstcw WORD PTR [esi-0x59dd374d]
  4163a5:	inc    ecx
  4163a6:	dec    edi
  4163a7:	int3   
  4163a8:	in     eax,dx
  4163a9:	ja     0x4163db
  4163ab:	std    
  4163ac:	push   es
  4163ad:	add    bl,BYTE PTR [ebp-0x21]
  4163b0:	sub    DWORD PTR [edi+ebx*2+0x3507a710],esi
  4163b7:	jp     0x41639d
  4163b9:	jp     0x4163ce
  4163bb:	scas   al,BYTE PTR es:[edi]
  4163bc:	adc    ax,0x5a45
  4163c0:	ror    BYTE PTR [edi-0x49f4aa02],cl
  4163c6:	dec    ebp
  4163c7:	cwde   
  4163c8:	push   ss
  4163c9:	retf   0x77b9
  4163cc:	lds    ebp,FWORD PTR [esi+edi*1]
  4163cf:	repnz icebp 
  4163d1:	cwde   
  4163d2:	scas   al,BYTE PTR es:[edi]
  4163d3:	xchg   ecx,eax
  4163d4:	sbb    ch,BYTE PTR [eax-0x782889f2]
  4163da:	sahf   
  4163db:	lock xor ebx,esp
  4163de:	aas    
  4163df:	aad    0x8e
  4163e1:	stc    
  4163e2:	in     al,dx
  4163e3:	pushf  
  4163e4:	sbb    edx,DWORD PTR [edx]
  4163e6:	and    esp,DWORD PTR [eax]
  4163e8:	fisub  DWORD PTR [edi-0x7b]
  4163eb:	mov    dl,0xf1
  4163ed:	mov    DWORD PTR [ecx-0x5506a8b3],esi
  4163f3:	into   
  4163f4:	add    ecx,DWORD PTR [eax+0x1f]
  4163f7:	adc    eax,DWORD PTR [edx+0x3]
  4163fa:	or     DWORD PTR [esi+0x6f9933f5],ebx
  416400:	pop    eax
  416401:	jp     0x41644c
  416403:	mov    al,0x8e
  416405:	call   0x98e54484
  41640a:	mov    WORD PTR [edx],?
  41640c:	cmp    eax,0xed27d414
  416411:	mov    ds:0x86df39b0,al
  416416:	repz mov WORD PTR [eax+ebx*1+0x791bd25],gs
  41641e:	pop    esi
  41641f:	je     0x4163c2
  416421:	popa   
  416422:	or     edx,ecx
  416424:	ins    BYTE PTR es:[edi],dx
  416425:	push   cs
  416426:	or     ecx,DWORD PTR [eax+0x75]
  416429:	std    
  41642a:	mov    ch,0xda
  41642c:	inc    eax
  41642d:	sub    DWORD PTR [esi],esp
  41642f:	inc    ebx
  416430:	mov    esi,0x595834e6
  416435:	icebp  
  416436:	test   DWORD PTR [eax],esi
  416438:	jns    0x4164a7
  41643a:	push   ecx
  41643b:	data16 sub bl,dh
  41643e:	or     al,0x71
  416440:	adc    al,0xee
  416442:	jne    0x41649c
  416444:	pop    edx
  416445:	dec    eax
  416446:	bound  ebx,QWORD PTR [edx+0x3a07ccf]
  41644c:	inc    ecx
  41644d:	dec    eax
  41644e:	adc    ebx,DWORD PTR [ecx-0x4]
  416451:	and    eax,0x55885f8e
  416456:	xchg   ecx,eax
  416457:	not    DWORD PTR [ebx]
  416459:	test   BYTE PTR [eax+0x25],ah
  41645c:	icebp  
  41645d:	mov    bh,BYTE PTR [esi]
  41645f:	std    
  416460:	pop    ss
  416461:	sub    al,0x6a
  416463:	cdq    
  416464:	xchg   esp,eax
  416465:	inc    ebx
  416466:	sbb    BYTE PTR [ebx-0x25],0x93
  41646a:	and    ecx,DWORD PTR [edx+0x65ca3791]
  416470:	xchg   ecx,eax
  416471:	dec    edx
  416472:	imul   edi,DWORD PTR [ebp-0x5d00e18e],0x3c9b8237
  41647c:	mov    esi,DWORD PTR [edx+ecx*4]
  41647f:	add    esp,DWORD PTR [ecx+0x74]
  416482:	mov    ebx,0x463c1fb8
  416487:	retf   
  416488:	mov    ds:0x8b607b66,eax
  41648d:	out    dx,eax
  41648e:	jp     0x41646e
  416490:	lods   al,BYTE PTR ds:[esi]
  416491:	in     eax,0xd0
  416493:	push   esp
  416494:	imul   esi,DWORD PTR [ebp+0x4aaf64af],0xffffff8f
  41649b:	push   esi
  41649c:	cmp    al,dh
  41649e:	cmp    al,0x10
  4164a0:	ret    
  4164a1:	iret   
  4164a2:	adc    DWORD PTR [ebx-0x21],esi
  4164a5:	push   cs
  4164a6:	cli    
  4164a7:	or     al,0xdc
  4164a9:	scas   eax,DWORD PTR es:[edi]
  4164aa:	fild   DWORD PTR [ebx*2-0x2b24228a]
  4164b1:	or     DWORD PTR ds:0x6189686c,edi
  4164b7:	cdq    
  4164b8:	inc    ecx
  4164b9:	jecxz  0x4164a3
  4164bb:	cdq    
  4164bc:	mov    dh,0xf2
  4164be:	sbb    al,0xd4
  4164c0:	leave  
  4164c1:	pop    edx
  4164c2:	out    dx,al
  4164c3:	dec    ebx
  4164c4:	xor    bh,BYTE PTR [esi+ebp*8-0x1b]
  4164c8:	ret    0x3621
  4164cb:	jg     0x416471
  4164cd:	call   0xef971f6c
  4164d2:	xchg   edi,eax
  4164d3:	adc    eax,0x6d2f9f25
  4164d8:	or     eax,0x17f04352
  4164dd:	add    al,0x75
  4164df:	test   eax,0x4d0f655d
  4164e4:	jecxz  0x4164aa
  4164e6:	(bad)
  4164ea:	adc    eax,esi
  4164ec:	push   ecx
  4164ed:	ins    BYTE PTR es:[edi],dx
  4164ee:	adc    ebp,DWORD PTR [edx+edi*1-0x3160d9a7]
  4164f5:	xor    BYTE PTR [ebp-0xb159f53],0x2d
  4164fc:	dec    ebp
  4164fd:	ror    ch,cl
  4164ff:	sbb    esi,edi
  416501:	xchg   dl,dl
  416503:	pop    esi
  416504:	jns    0x416537
  416506:	(bad)  
  416507:	xor    BYTE PTR [edx-0x416152f0],bh
  41650d:	jns    0x4164e0
  41650f:	xchg   edi,eax
  416510:	push   ds
  416511:	test   eax,0xfef65af4
  416516:	cli    
  416517:	pop    ebp
  416518:	and    edi,ebx
  41651a:	and    eax,0xd888176d
  41651f:	in     al,0x8f
  416521:	xor    dh,al
  416523:	xlat   BYTE PTR ds:[ebx]
  416524:	adc    dh,bl
  416526:	jmp    0x64c0:0xd079d9d
  41652d:	or     eax,0x1cc913ba
  416532:	fdivr  DWORD PTR ds:0xa2c0fd08
  416538:	into   
  416539:	dec    ecx
  41653a:	xor    edx,edi
  41653c:	mov    ebp,0xf8d6a1b2
  416541:	jmp    0x4164ea
  416543:	int3   
  416544:	jns    0x4164d8
  416546:	cwde   
  416547:	or     DWORD PTR [edi-0x3b4c495d],edx
  41654d:	das    
  41654e:	stos   BYTE PTR es:[edi],al
  41654f:	leave  
  416550:	in     al,dx
  416551:	arpl   bx,si
  416553:	aam    0x1b
  416555:	sub    ecx,DWORD PTR [eax]
  416557:	mov    cl,BYTE PTR [ebx+ebx*1]
  41655a:	ret    0x5677
  41655d:	add    BYTE PTR [eax],al
  41655f:	add    BYTE PTR [eax],al
  416561:	add    al,bh
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0x88f1
  41656f:	xlat   BYTE PTR ds:[ebx]
  416570:	(bad)  
  416571:	xchg   edx,eax
  416572:	push   edx
  416573:	jecxz  0x416575
  416575:	add    bl,dh
  416577:	add    al,0x0
  416579:	add    BYTE PTR [esi-0x1785026a],bl
  41657f:	call   0x560de28a
  416584:	out    0x5e,eax
  416586:	xchg   ebp,eax
  416587:	leave  
  416588:	inc    ecx
  416589:	pop    edx
  41658a:	sbb    bh,BYTE PTR [esi-0x16]
  41658d:	les    esp,FWORD PTR [ebp+ecx*8+0x3eb52b37]
  416594:	scas   al,BYTE PTR es:[edi]
  416595:	cli    
  416596:	call   0x8822:0x62ebeaad
  41659d:	pop    edx
  41659e:	outs   dx,BYTE PTR ds:[esi]
  41659f:	gs jle 0x41655d
  4165a2:	mov    al,0x65
  4165a4:	cmp    bl,bl
  4165a6:	lds    ecx,FWORD PTR [ebx-0x4f]
  4165a9:	nop
  4165aa:	mov    dh,dl
  4165ac:	adc    ebx,DWORD PTR [edx]
  4165ae:	pushf  
  4165af:	cs stc 
  4165b1:	ins    DWORD PTR es:[edi],dx
  4165b2:	out    0x42,al
  4165b4:	jae    0x4165dd
  4165b6:	mov    edx,0xc8daec71
  4165bb:	call   0xaa57d4d0
  4165c0:	out    dx,eax
  4165c1:	(bad)  
  4165c2:	mov    ecx,0xa1797ff3
  4165c7:	mov    ebp,0xe27509a7
  4165cc:	aas    
  4165cd:	fwait
  4165ce:	mov    ebx,0x5cf08ad0
  4165d3:	js     0x416638
  4165d5:	jl     0x4165c9
  4165d7:	jecxz  0x4165f9
  4165d9:	test   al,0x2b
  4165db:	fadd   DWORD PTR [ebx+0x2a09dbbd]
  4165e1:	jg     0x4165e6
  4165e3:	mov    edi,0x571694b3
  4165e8:	test   al,0xb1
  4165ea:	push   ebx
  4165eb:	in     eax,dx
  4165ec:	loopne 0x4165dc
  4165ee:	cmp    ebx,edx
  4165f0:	je     0x4165fb
  4165f2:	and    bl,BYTE PTR [ecx+0x23af46b1]
  4165f8:	mul    dl
  4165fa:	imul   ebp,DWORD PTR ds:0xdecc1b60,0x9d125850
  416604:	adc    BYTE PTR [eax-0x3b],cl
  416607:	pop    ds
  416608:	inc    edx
  416609:	add    DWORD PTR [ecx-0x23],ecx
  41660c:	fs adc al,dl
  41660f:	test   eax,0x75642b55
  416614:	pop    ecx
  416615:	stc    
  416616:	aaa    
  416617:	dec    esp
  416618:	rcl    DWORD PTR [ebp-0x5],1
  41661b:	ss pushf 
  41661d:	jnp    0x416631
  41661f:	fwait
  416620:	es pop esp
  416622:	into   
  416623:	xchg   edx,eax
  416624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416625:	push   eax
  416626:	loope  0x416664
  416628:	mov    ecx,0x5ea2843b
  41662d:	outs   dx,BYTE PTR ds:[esi]
  41662e:	in     al,dx
  41662f:	popf   
  416630:	sbb    BYTE PTR [ebp-0x1f06d669],dh
  416636:	out    dx,al
  416637:	rcl    DWORD PTR [ebp-0x1c1f39b9],0xb5
  41663e:	in     al,dx
  41663f:	mov    esp,0x6d52ca5d
  416644:	inc    esi
  416645:	arpl   WORD PTR [edx-0xf0b4002],di
  41664b:	jns    0x416600
  41664d:	aaa    
  41664e:	inc    eax
  41664f:	jl     0x4165e9
  416651:	ja     0x416677
  416653:	mov    BYTE PTR [esi+0x3c],ah
  416656:	adc    DWORD PTR [ebx-0x76],edx
  416659:	adc    ah,ah
  41665b:	mov    edx,DWORD PTR ds:0x622ab656
  416661:	push   ecx
  416662:	xlat   BYTE PTR ds:[bx]
  416664:	pushf  
  416665:	loope  0x41666c
  416667:	xchg   esi,eax
  416668:	dec    ecx
  416669:	scas   al,BYTE PTR es:[edi]
  41666a:	js     0x41668b
  41666c:	xchg   ecx,eax
  41666d:	mov    esp,DWORD PTR [eax-0x6b]
  416670:	inc    edi
  416671:	call   FWORD PTR [ebp-0x3c592735]
  416677:	aad    0x94
  416679:	fs push es
  41667b:	dec    esp
  41667c:	dec    edx
  41667d:	pop    edi
  41667e:	and    al,0xb7
  416680:	test   BYTE PTR [esi],dh
  416682:	cmp    edi,DWORD PTR [esi+0x64b43635]
  416688:	mov    cl,0xc9
  41668a:	dec    ecx
  41668b:	loop   0x416682
  41668d:	popf   
  41668e:	not    BYTE PTR [edi+0x70437000]
  416694:	jne    0x4166e2
  416696:	loopne 0x4166ea
  416698:	mov    al,0x72
  41669a:	fs xchg ecx,eax
  41669c:	gs test al,0xe0
  41669f:	inc    ecx
  4166a0:	and    edi,ebx
  4166a2:	int    0xfb
  4166a4:	cmp    BYTE PTR [eax],ch
  4166a6:	ins    BYTE PTR es:[edi],dx
  4166a7:	sbb    ch,dh
  4166a9:	add    eax,DWORD PTR ds:0xecc699bf
  4166af:	adc    DWORD PTR [esi-0x7fda47f0],edi
  4166b5:	inc    esi
  4166b6:	dec    edx
  4166b7:	xor    BYTE PTR [esi],al
  4166b9:	test   DWORD PTR [ecx+0x39],esi
  4166bc:	sbb    BYTE PTR [ebp+0x75],cl
  4166bf:	and    dl,BYTE PTR [eax-0x6f84527d]
  4166c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166c6:	xor    eax,0x919f2951
  4166cb:	or     al,0xbc
  4166cd:	call   0x6e58:0x7dc3ab66
  4166d4:	popa   
  4166d5:	jmp    0x7fd97de8
  4166da:	ja     0x4166dd
  4166dc:	ds cmp ebp,edx
  4166df:	js     0x4166a0
  4166e1:	scas   al,BYTE PTR es:[edi]
  4166e2:	int    0xcb
  4166e4:	mov    ebx,gs
  4166e6:	imul   DWORD PTR [esi+0x1e1bb3b]
  4166ec:	xchg   edx,eax
  4166ed:	sbb    esi,ebp
  4166ef:	arpl   WORD PTR [esp+ecx*4-0x3f7bf385],si
  4166f6:	fist   WORD PTR [ebp-0x49]
  4166f9:	pop    eax
  4166fa:	scas   al,BYTE PTR es:[edi]
  4166fb:	xor    ch,BYTE PTR [eax-0x5d]
  4166fe:	out    dx,al
  4166ff:	dec    DWORD PTR [esi+0x15a3cfd6]
  416705:	repz add BYTE PTR ds:[ebp-0x31],ah
  41670a:	jp     0x416696
  41670c:	stos   BYTE PTR es:[edi],al
  41670d:	inc    edx
  41670e:	xchg   ebp,eax
  41670f:	pop    ds
  416710:	adc    bl,BYTE PTR [edi+0x9]
  416713:	cmp    eax,0x1ca0d5d
  416718:	test   eax,0x72502f8d
  41671d:	sub    al,0x67
  41671f:	pop    ecx
  416720:	or     eax,0x86d60a3a
  416725:	xor    cl,BYTE PTR [edi-0x36f4f74f]
  41672b:	xchg   ebp,eax
  41672c:	stos   BYTE PTR es:[edi],al
  41672d:	lds    edi,FWORD PTR [ecx]
  41672f:	outs   dx,DWORD PTR ds:[esi]
  416730:	dec    ebx
  416731:	outs   dx,BYTE PTR ds:[esi]
  416732:	ds loope 0x41677b
  416735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416736:	push   esp
  416737:	daa    
  416738:	fimul  DWORD PTR [eax-0x40cd6c03]
  41673e:	cmp    dl,al
  416740:	push   esi
  416741:	iret   
  416742:	sub    ebx,ebp
  416744:	sub    al,0x17
  416746:	lods   eax,DWORD PTR ds:[esi]
  416747:	push   ss
  416748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416749:	push   ecx
  41674a:	adc    eax,0xfee9a528
  41674f:	cmp    eax,0xe93dad15
  416754:	add    ebp,DWORD PTR [ecx-0x473dbde]
  41675a:	inc    esi
  41675b:	leave  
  41675c:	mov    edi,0xe579bb1c
  416761:	dec    ebp
  416762:	sub    ebp,DWORD PTR [ecx]
  416764:	adc    DWORD PTR [esi+ecx*1-0xdbdaaa9],0x1f00e1da
  41676f:	pop    edi
  416770:	mov    edi,0x56f5fb2a
  416775:	shr    DWORD PTR [esi+esi*1-0x3e],cl
  416779:	xchg   ebx,eax
  41677b:	enter  0x35ed,0x14
  41677f:	inc    ecx
  416780:	leave  
  416781:	mov    dl,0xf3
  416783:	push   esi
  416784:	mov    esi,0x2462fef4
  416789:	outs   dx,BYTE PTR ds:[esi]
  41678a:	sbb    al,0x9f
  41678c:	cmp    BYTE PTR [ebp-0x65],dh
  41678f:	xor    eax,0x510d1adb
  416794:	xchg   esp,eax
  416795:	in     al,dx
  416796:	pop    ds
  416797:	xchg   ebp,eax
  416798:	pop    es
  416799:	sti    
  41679a:	iret   
  41679b:	cmp    eax,0x3a7095e6
  4167a0:	or     BYTE PTR [ebx+0xb],dh
  4167a3:	test   al,0xc2
  4167a5:	pop    ebp
  4167a6:	xchg   edi,eax
  4167a7:	jno    0x416815
  4167a9:	retf   0x51eb
  4167ac:	ror    BYTE PTR [ebx+0x346f91f6],cl
  4167b2:	pop    ds
  4167b3:	pushf  
  4167b4:	jmp    0x67458516
  4167b9:	lods   eax,DWORD PTR ds:[esi]
  4167ba:	and    BYTE PTR [edi+0x2e94cf64],0xf6
  4167c1:	test   eax,0xb26c8539
  4167c6:	adc    al,0x55
  4167c8:	cmc    
  4167c9:	ins    BYTE PTR es:[edi],dx
  4167ca:	adc    ch,ch
  4167cc:	adc    eax,0xfb4bfc4b
  4167d1:	xor    DWORD PTR [edx-0x25],edi
  4167d4:	mov    bh,0xd8
  4167d6:	jle    0x416808
  4167d8:	sbb    BYTE PTR [edx],bl
  4167da:	fs pop edx
  4167dc:	ins    DWORD PTR es:[edi],dx
  4167dd:	lods   al,BYTE PTR ds:[esi]
  4167de:	sahf   
  4167df:	enter  0x83c0,0xe3
  4167e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e4:	push   ebp
  4167e5:	fld1   
  4167e7:	shr    BYTE PTR [esi],cl
  4167e9:	mov    ecx,0x198393a2
  4167ee:	fld    TBYTE PTR [ebp-0x2b]
  4167f1:	mov    ebx,0x41e7939
  4167f6:	xor    al,bh
  4167f8:	daa    
  4167f9:	or     al,0xdc
  4167fb:	xchg   ebp,eax
  4167fc:	gs stos DWORD PTR es:[edi],eax
  4167fe:	pusha  
  4167ff:	imul   ebx,DWORD PTR [esp+edi*8+0x3e],0x23
  416804:	dec    edi
  416805:	sbb    al,0xb8
  416807:	add    al,0xda
  416809:	jnp    0x416862
  41680b:	ins    BYTE PTR es:[edi],dx
  41680c:	add    eax,0x2a74857e
  416811:	xchg   edi,esp
  416813:	inc    ebx
  416814:	mov    edi,0x9fa2b00
  416819:	inc    ebx
  41681a:	stc    
  41681b:	pop    ebx
  41681c:	mov    ebx,0x30ff4ca3
  416821:	mov    cl,0x77
  416823:	pop    esp
  416824:	mov    al,ds:0xcc103219
  416829:	xchg   ebp,eax
  41682a:	cld    
  41682b:	xchg   ecx,eax
  41682c:	les    edi,FWORD PTR [edx-0x3a]
  41682f:	xchg   ebx,eax
  416830:	jl     0x4167f1
  416832:	pop    ebp
  416833:	inc    edi
  416834:	aad    0xb6
  416836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416837:	retf   
  416838:	and    ch,BYTE PTR [ecx-0x7c090cae]
  41683e:	dec    ecx
  41683f:	or     al,0xd9
  416841:	fidivr WORD PTR [edi+0x29]
  416844:	dec    eax
  416845:	add    BYTE PTR [edi+0x13],al
  416848:	and    dl,BYTE PTR [ecx+edx*8]
  41684b:	loope  0x41683b
  41684d:	js     0x416880
  41684f:	cmp    DWORD PTR [ecx+0x7b52c067],0xfffffff3
  416856:	or     edx,DWORD PTR [ebx-0x2d4af93e]
  41685c:	and    al,0x85
  41685e:	loopne 0x41683a
  416860:	or     edi,DWORD PTR [esi+0x20c44c26]
  416866:	push   edi
  416867:	(bad)  
  416868:	sub    eax,0x234a83f8
  41686d:	sub    eax,0x83864293
  416872:	aaa    
  416873:	xchg   edi,eax
  416874:	xchg   ebp,edx
  416876:	out    0x4b,al
  416878:	add    DWORD PTR [esi],eax
  41687a:	ret    0x87d8
  41687d:	sub    BYTE PTR [ecx],dh
  41687f:	pop    ecx
  416880:	in     al,dx
  416881:	mov    WORD PTR es:[ebp+0x6ec4bfba],fs
  416888:	jb     0x416858
  41688a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41688b:	std    
  41688c:	sub    ch,al
  41688e:	xchg   ecx,eax
  41688f:	adc    al,0x8b
  416891:	inc    esp
  416892:	sahf   
  416893:	or     eax,0x631c0bca
  416898:	inc    esp
  416899:	enter  0x6aee,0x9f
  41689d:	push   es
  41689e:	aaa    
  41689f:	sar    BYTE PTR [esp+edx*4],0x4d
  4168a3:	or     esi,DWORD PTR [ecx+0x46973b27]
  4168a9:	ja     0x4168b9
  4168ab:	cdq    
  4168ac:	dec    eax
  4168ad:	push   edi
  4168ae:	inc    edx
  4168af:	cvtpi2ps xmm2,QWORD PTR [edx-0x42]
  4168b3:	fbstp  TBYTE PTR [ecx]
  4168b5:	xchg   ecx,eax
  4168b6:	xor    DWORD PTR [edi-0x48],esp
  4168b9:	dec    ecx
  4168ba:	push   es
  4168bb:	jae    0x416932
  4168bd:	daa    
  4168be:	cmp    BYTE PTR [esp+eax*8-0x64],dh
  4168c2:	sub    al,0xe1
  4168c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168c5:	in     eax,dx
  4168c6:	mov    ecx,0x41ab9ea6
  4168cb:	push   es
  4168cc:	sbb    esp,edi
  4168ce:	cmp    BYTE PTR [ebx+0x45174739],ah
  4168d4:	mov    dl,0xc2
  4168d6:	dec    eax
  4168d7:	push   eax
  4168d8:	sub    ah,cl
  4168da:	in     al,0x77
  4168dc:	loope  0x4168a5
  4168de:	retf   0x91b7
  4168e1:	loopne 0x4168f6
  4168e3:	(bad)  
  4168e5:	daa    
  4168e6:	adc    DWORD PTR [eax+edi*2],eax
  4168e9:	enter  0xba4f,0x2d
  4168ed:	icebp  
  4168ee:	fwait
  4168ef:	ins    DWORD PTR es:[edi],dx
  4168f0:	fimul  DWORD PTR [eax+0x7d042cae]
  4168f6:	xor    esi,DWORD PTR [ebx+0x59]
  4168f9:	and    al,0xac
  4168fb:	int    0x9d
  4168fd:	out    0x66,al
  4168ff:	enter  0x43a9,0xf7
  416903:	sub    BYTE PTR [ebp-0x62],dl
  416906:	ins    BYTE PTR es:[edi],dx
  416907:	cld    
  416908:	iret   
  416909:	ss and eax,0x6ef98bd
  41690f:	mov    WORD PTR [eax-0x6d],?
  416912:	repnz xchg ebx,eax
  416914:	test   al,0xb2
  416916:	js     0x416935
  416918:	cmp    cl,BYTE PTR [ecx-0x16b99e85]
  41691e:	jno    0x4168f1
  416920:	push   0xffffffa0
  416922:	xor    bh,al
  416924:	xlat   BYTE PTR ds:[ebx]
  416925:	enter  0xaa9f,0xf8
  416929:	jp     0x41699a
  41692b:	mov    BYTE PTR [edi+0x5a],ah
  41692e:	pop    edx
  41692f:	sbb    bh,cl
  416931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416932:	mov    bh,0xcf
  416934:	(bad)  
  416935:	push   ecx
  416936:	fldenv [edx]
  416938:	test   eax,0x65bcdbf5
  41693d:	ins    DWORD PTR es:[edi],dx
  41693e:	jl     0x4169b1
  416940:	sqrtps xmm2,XMMWORD PTR ds:0x5b793eac
  416947:	cmp    cl,BYTE PTR [esi-0x73]
  41694a:	push   ecx
  41694b:	jnp    0x41693a
  41694d:	dec    edi
  41694e:	rcl    DWORD PTR [eax],1
  416950:	sahf   
  416951:	retf   0x623
  416954:	adc    bl,cl
  416956:	and    bl,ah
  416958:	mov    edx,0xe09590fa
  41695d:	loope  0x41690d
  41695f:	push   0xf8a30a82
  416964:	mov    dh,0x6e
  416966:	ins    BYTE PTR es:[edi],dx
  416967:	push   ds
  416968:	jnp    0x41694c
  41696a:	adc    DWORD PTR [edx+ecx*8],ecx
  41696d:	sahf   
  41696e:	mov    ds:0x277803e2,al
  416973:	or     esi,DWORD PTR [ebx]
  416975:	cwde   
  416976:	mov    ch,0x73
  416978:	lock pop esp
  41697a:	pop    es
  41697b:	inc    esi
  41697c:	and    al,0x63
  41697e:	pop    eax
  41697f:	fdivr  DWORD PTR [eax+ebp*1+0x3a]
  416983:	rol    cl,0xea
  416986:	fstp   QWORD PTR [ecx-0x75]
  416989:	shl    DWORD PTR [esi+0x7e2e2f90],0xd3
  416990:	dec    edx
  416991:	cmc    
  416992:	rcr    DWORD PTR [ebp+eax*2-0x2bb199d9],cl
  416999:	test   al,0xfc
  41699b:	das    
  41699c:	retf   
  41699d:	mov    bh,BYTE PTR [edi-0x4a487267]
  4169a3:	inc    ebp
  4169a4:	fucomip st,st(6)
  4169a6:	jl     0x4169d0
  4169a8:	pop    edi
  4169a9:	push   ss
  4169aa:	pop    edx
  4169ab:	jle    0x416981
  4169ad:	pop    ebp
  4169ae:	pop    edx
  4169af:	ss stos DWORD PTR es:[edi],eax
  4169b1:	gs dec ecx
  4169b3:	or     ebx,esi
  4169b5:	repz add WORD PTR [edi+0xa290eb2],di
  4169bd:	mov    ch,0xa9
  4169bf:	in     al,dx
  4169c0:	adc    ch,BYTE PTR [edx-0x37157fb8]
  4169c6:	mov    al,ds:0x3d1dab6e
  4169cb:	and    al,0x49
  4169cd:	aam    0x9a
  4169cf:	inc    edx
  4169d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169d1:	push   ss
  4169d2:	xchg   edx,eax
  4169d3:	sbb    al,BYTE PTR [ecx]
  4169d5:	in     eax,dx
  4169d6:	mov    bh,0xce
  4169d8:	cmp    DWORD PTR [edx],ecx
  4169da:	push   cs
  4169db:	addr16 sub al,0xb
  4169de:	mov    ds:0x8f889ab6,al
  4169e3:	daa    
  4169e4:	push   edi
  4169e5:	aas    
  4169e6:	jbe    0x416a4c
  4169e8:	cmp    al,0xbe
  4169ea:	sbb    eax,0x5382215f
  4169ef:	(bad)  
  4169f0:	pop    eax
  4169f1:	dec    esp
  4169f2:	push   0x43b96b12
  4169f7:	sahf   
  4169f8:	ss aad 0x8b
  4169fb:	inc    eax
  4169fc:	js     0x416a21
  4169fe:	sbb    al,0xa5
  416a00:	sbb    al,0x88
  416a02:	cmp    eax,0x1b188b05
  416a07:	xor    eax,0xd1a2b454
  416a0c:	icebp  
  416a0d:	mov    ah,0xd2
  416a0f:	fstp   TBYTE PTR [esi+0x72a8c0f1]
  416a15:	cmp    al,0x7a
  416a17:	or     bh,BYTE PTR [ebx]
  416a19:	sbb    esp,ecx
  416a1b:	or     eax,0x20a631b9
  416a20:	scas   eax,DWORD PTR es:[edi]
  416a21:	(bad)  
  416a22:	int3   
  416a23:	push   edi
  416a24:	aad    0x94
  416a26:	fbstp  TBYTE PTR [ebp-0x42]
  416a29:	fisttp DWORD PTR [esi-0x7d978612]
  416a2f:	loopne 0x416a4d
  416a31:	scas   al,BYTE PTR es:[edi]
  416a32:	lods   al,BYTE PTR ds:[esi]
  416a33:	(bad)  
  416a34:	push   edx
  416a35:	retf   
  416a36:	lods   al,BYTE PTR ds:[esi]
  416a37:	in     al,0xe8
  416a39:	aam    0x29
  416a3b:	cmp    ecx,DWORD PTR [ecx-0x78]
  416a3e:	clc    
  416a3f:	fnsave [ecx]
  416a41:	in     eax,0xe5
  416a43:	cmp    eax,0x52e23de
  416a48:	jecxz  0x416a3d
  416a4a:	mov    ebp,0x780fab95
  416a4f:	nop
  416a50:	push   esi
  416a51:	or     bh,BYTE PTR [ebx]
  416a53:	xor    edx,DWORD PTR [edi+0x2c]
  416a56:	sar    BYTE PTR [esi+edx*1+0x37],0x9b
  416a5b:	(bad)  
  416a5c:	fimul  WORD PTR [edi]
  416a5e:	stc    
  416a5f:	inc    ecx
  416a60:	add    cl,BYTE PTR [esi-0x287937bd]
  416a66:	enter  0xe8a3,0x51
  416a6a:	mov    al,ds:0xe8cb
  416a6f:	add    BYTE PTR [eax],al
  416a71:	add    al,ch
  416a73:	xchg   ecx,eax
  416a74:	retf   0xfb3a
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx+0x43f3b875],cl
  416a7f:	adc    al,0xe1
  416a81:	daa    
  416a82:	inc    ebp
  416a83:	call   0x5346a88
  416a88:	add    BYTE PTR [eax],al
  416a8a:	call   0xcb02031e
  416a8f:	(bad)  
  416a90:	fwait
  416a91:	dec    edi
  416a92:	les    esi,FWORD PTR [edx]
  416a94:	xor    edx,ecx
  416a96:	cdq    
  416a97:	xchg   bl,bh
  416a99:	mov    ebx,DWORD PTR ds:0x23cbe2c5
  416a9f:	jecxz  0x416b1b
  416aa1:	pop    ds
  416aa2:	cmp    al,0xfb
  416aa4:	push   ecx
  416aa5:	lahf   
  416aa6:	cmp    al,0x15
  416aa8:	jp     0x416a93
  416aaa:	mov    eax,ds:0xdc0adec
  416aaf:	dec    edx
  416ab0:	sub    BYTE PTR [eax-0x7ce4a52b],dl
  416ab6:	icebp  
  416ab7:	loopne 0x416a75
  416ab9:	rol    cl,1
  416abb:	sbb    eax,0x6554ce5f
  416ac0:	aam    0xa2
  416ac2:	push   ebx
  416ac3:	or     eax,DWORD PTR [ecx+0x529ee2a1]
  416ac9:	pop    ss
  416aca:	mov    ds:0x9c15f7d5,eax
  416acf:	addr16 cs xchg ebp,eax
  416ad2:	fwait
  416ad3:	mov    ecx,0xbaaedac7
  416ad8:	jmp    0xd1e5b8e5
  416add:	dec    ecx
  416ade:	sbb    al,0xdd
  416ae0:	rcl    al,cl
  416ae2:	gs loop 0x416ae7
  416ae5:	mov    edi,0xa8547a3e
  416aea:	cmp    DWORD PTR [edi-0x38df6bb3],0xffffffcb
  416af1:	out    dx,eax
  416af2:	jns    0x416b0d
  416af4:	arpl   WORD PTR [ecx+edx*2],si
  416af7:	mov    esi,edi
  416af9:	not    BYTE PTR [esi+eiz*1+0x5e364303]
  416b00:	inc    ebx
  416b01:	in     al,0xf3
  416b03:	cmc    
  416b04:	or     ah,BYTE PTR [edx+0xdf8e640]
  416b0a:	add    edx,DWORD PTR [esi]
  416b0c:	sbb    DWORD PTR [edx],edi
  416b0e:	add    eax,0x80ee4370
  416b13:	add    esp,0x2998d9d2
  416b19:	ret    
  416b1a:	pop    ebx
  416b1b:	in     eax,0x26
  416b1d:	es jbe 0x416b3f
  416b20:	ins    BYTE PTR es:[edi],dx
  416b21:	jne    0x416b5f
  416b23:	or     eax,0x6a15db2a
  416b28:	xlat   BYTE PTR ds:[ebx]
  416b29:	or     al,0x33
  416b2b:	sub    DWORD PTR [edi+esi*1-0x40],0xffffffdc
  416b30:	out    0xf4,eax
  416b32:	std    
  416b33:	mov    ecx,0xf66ff93a
  416b38:	inc    ebx
  416b39:	sbb    DWORD PTR [ebx+0x1de6d2ec],edi
  416b3f:	inc    ebp
  416b40:	fist   DWORD PTR [ecx-0x19]
  416b43:	or     al,0xca
  416b45:	int    0xa2
  416b47:	jle    0x416b0e
  416b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b4a:	mov    esp,cs
  416b4c:	pop    es
  416b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b4e:	data16 mov es,WORD PTR [esi]
  416b51:	in     eax,0x48
  416b53:	sub    ecx,DWORD PTR [eax*4-0x34ed3160]
  416b5a:	pop    edi
  416b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b5c:	lea    edx,[eax]
  416b5e:	repz mov esp,0x6532c1bf
  416b64:	adc    eax,0x150116bb
  416b69:	and    eax,DWORD PTR [edi]
  416b6b:	mov    esp,0xcf2fdba6
  416b70:	lds    eax,FWORD PTR [ecx-0x268b37cb]
  416b76:	and    al,0xda
  416b78:	out    dx,al
  416b79:	pop    ds
  416b7a:	or     ebx,DWORD PTR [ebp+0x7ebeb49b]
  416b80:	int3   
  416b81:	sbb    BYTE PTR [edi+0x78],cl
  416b84:	dec    esi
  416b85:	out    dx,eax
  416b86:	inc    ecx
  416b87:	push   ebx
  416b88:	cwde   
  416b89:	mov    es,WORD PTR [ecx]
  416b8b:	pop    ecx
  416b8c:	cdq    
  416b8d:	repnz (bad) 
  416b8f:	out    dx,eax
  416b90:	jecxz  0x416bbb
  416b92:	ficomp DWORD PTR [ebx]
  416b94:	jg     0x416c15
  416b96:	in     al,dx
  416b97:	aam    0x2f
  416b99:	test   DWORD PTR [edx],0x9369e21b
  416b9f:	mov    al,ds:0x9b6fc002
  416ba4:	aaa    
  416ba5:	dec    ebx
  416ba6:	in     eax,dx
  416ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ba8:	xor    al,0xe3
  416baa:	push   ecx
  416bab:	pop    ds
  416bac:	sbb    DWORD PTR gs:[ebx+ebx*8-0x7422ce27],edx
  416bb4:	jle    0x416bc3
  416bb6:	lock mov al,0xbd
  416bb9:	outs   dx,BYTE PTR ds:[esi]
  416bba:	loopne 0x416b8a
  416bbc:	add    eax,0x9226ff03
  416bc1:	lea    eax,[ebx+0x33]
  416bc4:	sub    DWORD PTR [edx],ecx
  416bc6:	sti    
  416bc7:	or     ebx,DWORD PTR [edx]
  416bc9:	retf   0x42e2
  416bcc:	sbb    DWORD PTR [edi],ecx
  416bce:	and    eax,ecx
  416bd0:	mov    BYTE PTR [ebx],0xea
  416bd3:	or     ebp,DWORD PTR [edx-0x7493fc38]
  416bd9:	sahf   
  416bda:	pop    ecx
  416bdb:	and    al,0x34
  416bdd:	fwait
  416bde:	push   ss
  416bdf:	test   eax,0x2b5ff0e2
  416be4:	add    ah,ah
  416be6:	and    BYTE PTR [ecx],ch
  416be8:	mov    ds:0x2e0818cd,al
  416bed:	cwde   
  416bee:	iret   
  416bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bf0:	add    bh,dh
  416bf2:	mov    dh,0xba
  416bf4:	adc    BYTE PTR [ebx+eiz*4+0x3c9485b9],al
  416bfb:	or     eax,0xc313598b
  416c00:	inc    ecx
  416c01:	nop
  416c02:	(bad)  
  416c03:	mov    ds:0x4acee9e8,al
  416c08:	in     eax,dx
  416c09:	jae    0x416c81
  416c0b:	push   esi
  416c0c:	(bad)  
  416c0d:	shl    DWORD PTR [ecx],1
  416c0f:	sub    BYTE PTR [ebx+0x3b],dl
  416c12:	push   esp
  416c13:	xchg   ebx,eax
  416c14:	imul   ebp,DWORD PTR [eax],0x652257eb
  416c1a:	jb     0x416bd2
  416c1c:	test   ecx,esp
  416c1e:	ret    0xacb1
  416c21:	or     esi,DWORD PTR [edi+edx*2+0xe648577]
  416c28:	adc    BYTE PTR [ecx+0x78c82fd3],dl
  416c2e:	cmovo  esp,DWORD PTR ds:0x8195ef99
  416c35:	jae    0x416c14
  416c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c38:	push   es
  416c39:	dec    edi
  416c3a:	pop    esp
  416c3b:	xchg   edi,eax
  416c3c:	cmp    ebp,DWORD PTR [ebx-0x2d7f7dcf]
  416c42:	or     ah,ch
  416c44:	mov    edi,0x4c16855e
  416c49:	add    eax,0x9bcb020e
  416c4e:	jecxz  0x416c72
  416c50:	mov    ecx,0xb3298ea4
  416c55:	pop    ss
  416c56:	jnp    0x416bdb
  416c58:	dec    ebx
  416c59:	shl    DWORD PTR [edx+0x550cb670],cl
  416c5f:	call   0x98fc6a1e
  416c64:	cmp    eax,0x71e4023
  416c69:	gs mov cl,0x55
  416c6c:	cmp    al,0xab
  416c6e:	iret   
  416c6f:	jecxz  0x416c1d
  416c71:	fild   WORD PTR [edi]
  416c73:	xchg   edx,eax
  416c74:	sbb    ebx,0xfffffffb
  416c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c78:	retf   
  416c79:	add    eax,0x36291cd6
  416c7e:	fld    DWORD PTR [eax-0x152a0fbc]
  416c84:	(bad)  
  416c85:	and    BYTE PTR [edi-0x17],cl
  416c88:	and    BYTE PTR ds:0xc24115ba,bh
  416c8e:	retf   
  416c8f:	shr    edx,1
  416c91:	fcmove st,st(4)
  416c93:	fsubrp st(6),st
  416c95:	cmp    esp,DWORD PTR [edx]
  416c97:	in     al,0xd5
  416c99:	xor    al,0x30
  416c9b:	es js  0x416c70
  416c9e:	dec    eax
  416c9f:	sti    
  416ca0:	fnsave [ecx-0x4e]
  416ca3:	clc    
  416ca4:	sbb    edi,DWORD PTR [ebp*1-0x6e1a65e7]
  416cab:	sub    BYTE PTR [eax-0x12ed2b0f],0x45
  416cb2:	inc    esp
  416cb3:	addr16 mov bl,0xd5
  416cb6:	pop    esi
  416cb7:	iret   
  416cb8:	cdq    
  416cb9:	in     eax,dx
  416cba:	push   es
  416cbb:	pop    eax
  416cbc:	ds and eax,0x3920b0f0
  416cc2:	fs mov dl,0xf5
  416cc5:	das    
  416cc6:	stos   BYTE PTR es:[edi],al
  416cc7:	xchg   ebx,eax
  416cc8:	retf   0x207
  416ccb:	lock adc ebx,ebp
  416cce:	std    
  416ccf:	pusha  
  416cd0:	and    BYTE PTR [edi+0x4e1237bc],ah
  416cd6:	stos   BYTE PTR es:[edi],al
  416cd7:	xor    eax,DWORD PTR [edx]
  416cd9:	int3   
  416cda:	scas   eax,DWORD PTR es:[edi]
  416cdb:	mov    eax,0x94d78e52
  416ce0:	sbb    bl,al
  416ce2:	test   BYTE PTR [ebp-0x4031460c],0x63
  416ce9:	jp     0x416d16
  416ceb:	int    0xd5
  416ced:	sahf   
  416cee:	loopne 0x416cf2
  416cf0:	mov    ecx,0xdac52e56
  416cf5:	dec    esi
  416cf6:	cmp    ah,BYTE PTR [edi]
  416cf8:	jg     0x416cd1
  416cfa:	xor    esi,DWORD PTR [ecx]
  416cfc:	sbb    ebx,DWORD PTR [edx+0xc8a03d3]
  416d02:	or     DWORD PTR [ebp-0x73],ecx
  416d05:	sub    ecx,esi
  416d07:	inc    esp
  416d08:	or     eax,0x236980bd
  416d0d:	mov    eax,ds:0x41feba58
  416d12:	jge    0x416d3c
  416d14:	inc    esp
  416d15:	jle    0x416d3a
  416d17:	aaa    
  416d18:	push   edx
  416d19:	pop    esi
  416d1a:	test   BYTE PTR [ecx+ebp*8-0x26743237],0x8
  416d22:	pop    ebp
  416d23:	jmp    0xe19ac0d2
  416d28:	push   ebp
  416d29:	aas    
  416d2a:	xchg   edi,ebx
  416d2c:	out    dx,eax
  416d2d:	dec    eax
  416d2e:	sbb    DWORD PTR [ebp+0x235ac3c],0xd584cbe0
  416d38:	repz cmp al,0x5e
  416d3b:	scas   eax,DWORD PTR es:[edi]
  416d3c:	sub    edi,DWORD PTR [esi+0x1fa276a5]
  416d42:	and    al,0x57
  416d44:	les    eax,FWORD PTR [edi+0x7a1437ab]
  416d4a:	jo     0x416d89
  416d4c:	adc    al,0xaa
  416d4e:	stc    
  416d4f:	cdq    
  416d50:	inc    ecx
  416d51:	scas   al,BYTE PTR es:[edi]
  416d52:	inc    ebp
  416d53:	inc    esi
  416d54:	dec    BYTE PTR [ebp+0x557e1820]
  416d5a:	xchg   edx,eax
  416d5b:	(bad)  
  416d5c:	pop    eax
  416d5d:	inc    ebx
  416d5e:	sbb    BYTE PTR [ebx+0x16],dl
  416d61:	out    dx,al
  416d62:	inc    ebx
  416d63:	sbb    dl,cl
  416d65:	(bad)  
  416d66:	pop    esi
  416d67:	ret    0xc666
  416d6a:	mov    al,ds:0x7a1342b9
  416d6f:	les    ebp,FWORD PTR [ecx+0x7cada8d5]
  416d75:	and    DWORD PTR [ebp-0x4c1abb9c],ebx
  416d7b:	xor    DWORD PTR [edx-0x52],ebp
  416d7e:	adc    DWORD PTR [esi-0x47],esi
  416d81:	mov    ds:0xb5fe18f9,al
  416d86:	jmp    0x416d95
  416d88:	std    
  416d89:	out    dx,al
  416d8a:	and    bl,BYTE PTR [ebp+0xd76d74c]
  416d90:	fimul  DWORD PTR [ecx-0x79330e09]
  416d96:	loope  0x416d70
  416d98:	dec    bx
  416d9a:	jecxz  0x416d73
  416d9c:	ins    BYTE PTR es:[edi],dx
  416d9d:	cs loopne 0x416d60
  416da0:	jmp    0x9f0a2ee9
  416da5:	(bad)  
  416da7:	or     eax,0xa65bd847
  416dac:	stos   BYTE PTR es:[edi],al
  416dad:	ret    0xa276
  416db0:	xor    eax,0x97c4b2ad
  416db5:	cdq    
  416db6:	or     dh,BYTE PTR [edi+0x75a775a0]
  416dbc:	shl    esi,0x4
  416dbf:	arpl   WORD PTR [edx],ax
  416dc1:	push   ebx
  416dc2:	mov    esp,0xa6c078b3
  416dc7:	sub    eax,0xfc4fdcdf
  416dcc:	(bad)  
  416dcd:	sar    BYTE PTR [esi+0xbff9ac2],1
  416dd3:	mov    esp,0xf42a2531
  416dd8:	into   
  416dd9:	icebp  
  416dda:	push   cs
  416ddb:	and    al,0xeb
  416ddd:	shr    al,1
  416ddf:	or     eax,DWORD PTR cs:[edi-0x96476e0]
  416de6:	cmc    
  416de7:	aaa    
  416de8:	xor    esi,DWORD PTR [esi]
  416dea:	cmc    
  416deb:	ins    BYTE PTR es:[edi],dx
  416dec:	ds push cs
  416dee:	and    eax,0x3d72617e
  416df3:	cli    
  416df4:	xchg   edx,eax
  416df5:	jecxz  0x416db5
  416df7:	sbb    DWORD PTR [edx+0xe],0x7e28475b
  416dfe:	in     eax,0x79
  416e00:	stc    
  416e01:	scas   al,BYTE PTR es:[edi]
  416e02:	out    dx,al
  416e03:	pop    esp
  416e04:	xchg   ecx,eax
  416e05:	aam    0x9a
  416e07:	jne    0x416e45
  416e09:	jg     0x416e25
  416e0b:	or     ch,BYTE PTR [edx]
  416e0d:	sub    bl,BYTE PTR [eax]
  416e0f:	sbb    DWORD PTR [edx],0xd1af1171
  416e15:	cs cmp dh,ch
  416e18:	push   eax
  416e19:	sub    esp,DWORD PTR [eax]
  416e1b:	fcmovb st,st(0)
  416e1d:	pop    ebx
  416e1e:	inc    esi
  416e1f:	les    edi,FWORD PTR [ecx-0x58d0792a]
  416e25:	daa    
  416e26:	xchg   ebx,eax
  416e27:	lods   eax,DWORD PTR ds:[esi]
  416e28:	or     ch,al
  416e2a:	and    ebp,DWORD PTR [ebx+0x17628d13]
  416e30:	scas   al,BYTE PTR es:[edi]
  416e31:	mov    dh,cl
  416e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e34:	jmp    0x416e7d
  416e36:	pushf  
  416e37:	outs   dx,BYTE PTR ds:[esi]
  416e38:	dec    esp
  416e39:	push   ecx
  416e3a:	pop    edi
  416e3b:	xchg   ecx,eax
  416e3c:	pop    esp
  416e3d:	jmp    0x416e9d
  416e3f:	push   edi
  416e40:	mov    ds:0xb8dafecd,al
  416e45:	iret   
  416e46:	enter  0x8aa3,0x5f
  416e4a:	mov    cl,0xc
  416e4c:	(bad)  
  416e4d:	pop    DWORD PTR [ecx-0xe]
  416e50:	sub    bl,BYTE PTR [bx+0x66]
  416e54:	and    BYTE PTR [edx],cl
  416e56:	fwait
  416e57:	cmp    eax,0xe16862f8
  416e5c:	xchg   BYTE PTR [edi],dh
  416e5e:	or     eax,0x89e21a66
  416e63:	sahf   
  416e64:	add    al,0xf4
  416e66:	lock cmp DWORD PTR [ebx],ebp
  416e69:	cs cwde 
  416e6b:	push   es
  416e6c:	(bad)  
  416e6d:	not    BYTE PTR [ebx]
  416e6f:	pop    edi
  416e70:	add    DWORD PTR [esi+edi*8-0x1],ecx
  416e74:	mov    ebx,0xebfbdb20
  416e79:	(bad)  
  416e7a:	in     eax,dx
  416e7b:	pop    ecx
  416e7c:	ficomp WORD PTR [esi+0x4ffa0907]
  416e82:	sub    esi,ecx
  416e84:	mov    eax,ds:0xb7f4321a
  416e89:	lock xor DWORD PTR [ecx+edi*8-0x44d0090d],0x655395d1
  416e95:	and    eax,0xd25c83ae
  416e9a:	gs push 0xfe9e54f1
  416ea0:	add    bh,BYTE PTR [edx+0x381ed640]
  416ea6:	popa   
  416ea7:	add    BYTE PTR [ebx],ch
  416ea9:	xchg   ch,dl
  416eab:	shl    bl,1
  416ead:	outs   dx,BYTE PTR ds:[esi]
  416eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eaf:	test   BYTE PTR [ebp-0x5a],bl
  416eb2:	jnp    0x416ee3
  416eb4:	and    eax,0x9345d498
  416eb9:	scas   eax,DWORD PTR es:[di]
  416ebb:	jle    0x416e88
  416ebd:	or     esi,ebx
  416ebf:	add    edx,DWORD PTR [esi]
  416ec1:	xor    DWORD PTR [ebx+0x1be3f572],ebp
  416ec7:	xor    esi,DWORD PTR [ecx-0x3809fe36]
  416ecd:	and    esp,DWORD PTR [edi+0x67]
  416ed0:	xor    BYTE PTR [edi],ah
  416ed2:	(bad)  
  416ed3:	in     al,dx
  416ed4:	xor    ebp,DWORD PTR [eax]
  416ed6:	pop    esi
  416ed7:	or     DWORD PTR [edi+0xd],ebp
  416eda:	inc    edi
  416edb:	lds    edx,FWORD PTR gs:[ecx]
  416ede:	adc    edx,DWORD PTR ds:0xf06fa13e
  416ee4:	jle    0x416f12
  416ee6:	sub    al,0x38
  416ee8:	sub    al,0xc0
  416eea:	xlat   BYTE PTR ds:[ebx]
  416eeb:	cmp    dh,BYTE PTR [edx+0x78b8f50d]
  416ef1:	mov    al,BYTE PTR [ebx-0x29]
  416ef4:	popa   
  416ef5:	or     BYTE PTR [ecx-0x270fe7d1],dh
  416efb:	(bad)  
  416efc:	jae    0x416e8d
  416efe:	test   DWORD PTR [ebp+0x66077f12],ebx
  416f04:	inc    esp
  416f05:	cmp    eax,0x3d0eb79e
  416f0a:	ret    0xf792
  416f0d:	aaa    
  416f0e:	jno    0x416f5f
  416f10:	pop    ss
  416f11:	pop    ecx
  416f12:	iret   
  416f13:	and    edx,DWORD PTR [ebx-0x60]
  416f16:	addr16 xchg ebx,eax
  416f18:	mov    ecx,0xf73f24d5
  416f1d:	popf   
  416f1e:	aas    
  416f1f:	js     0x416f68
  416f21:	push   ecx
  416f22:	push   ds
  416f23:	inc    ecx
  416f24:	ja     0x416f9f
  416f26:	not    ecx
  416f28:	mov    es,esp
  416f2a:	ds fucomip st,st(4)
  416f2d:	adc    BYTE PTR [ebp-0x7e],dh
  416f30:	(bad)  
  416f31:	lods   al,BYTE PTR ds:[esi]
  416f32:	jne    0x416f93
  416f34:	loop   0x416f9d
  416f36:	push   0x79
  416f38:	fnstsw WORD PTR [ecx]
  416f3a:	dec    ebp
  416f3b:	sbb    BYTE PTR [ebx+0x6f8f669],ch
  416f41:	push   ebp
  416f42:	mov    edi,gs
  416f44:	gs or  eax,0xdcec920c
  416f4a:	dec    ebp
  416f4b:	dec    esp
  416f4c:	into   
  416f4d:	mov    ch,0x87
  416f4f:	dec    esi
  416f50:	inc    esi
  416f51:	cmc    
  416f52:	aam    0x89
  416f54:	ja     0x416ed9
  416f56:	je     0x416fcd
  416f58:	pushf  
  416f59:	in     al,dx
  416f5a:	(bad)  
  416f5b:	in     al,0x63
  416f5d:	rcl    BYTE PTR [ebx+0x70],0xd8
  416f61:	jae    0x416fa4
  416f63:	fsubrp st(5),st
  416f65:	or     eax,0xddbf36d7
  416f6a:	rol    DWORD PTR [edx],0xe2
  416f6d:	mov    ds:0xcc6a157c,al
  416f72:	mov    dl,0xcf
  416f74:	jno    0x416f1a
  416f76:	shr    BYTE PTR [ebp+0x50],0x5f
  416f7a:	fiadd  DWORD PTR [eax+0xc1]
  416f80:	add    BYTE PTR [eax],al
  416f82:	push   ebp
  416f83:	sub    al,0x5f
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx-0x77fc09da]
  416f90:	dec    ecx
  416f91:	stc    
  416f92:	cmp    ch,ch
  416f94:	add    BYTE PTR [eax],al
  416f96:	repz add al,0x0
  416f99:	add    bl,al
  416f9b:	push   cs
  416f9c:	mov    bl,BYTE PTR [eax]
  416f9e:	jnp    0x416fa1
  416fa0:	ret    0x4e36
  416fa3:	xchg   BYTE PTR [ebp-0x34],al
  416fa6:	push   ebp
  416fa7:	xor    ebp,DWORD PTR [eax-0x29]
  416faa:	loopne 0x416f35
  416fac:	jnp    0x416faa
  416fae:	in     al,0x56
  416fb0:	xchg   esp,eax
  416fb1:	pop    es
  416fb2:	pop    ebx
  416fb3:	adc    al,0x11
  416fb5:	nop
  416fb6:	idiv   BYTE PTR [ebp-0x7c4a248]
  416fbc:	lock lahf 
  416fbe:	je     0x416fb0
  416fc0:	adc    ebp,0x4c
  416fc3:	add    al,0xde
  416fc5:	stc    
  416fc6:	gs popa 
  416fc8:	fistp  QWORD PTR [esi+edx*1-0x47]
  416fcc:	pop    ss
  416fcd:	jl     0x416f72
  416fcf:	call   0xd2b1103f
  416fd4:	fstp   st(4)
  416fd6:	push   ds
  416fd7:	mov    esi,0x4c2d0ccc
  416fdc:	adc    bl,ah
  416fde:	sbb    BYTE PTR [esp+ecx*1-0x1ad72943],0x29
  416fe6:	dec    esp
  416fe7:	push   0x10
  416fe9:	test   al,0x52
  416feb:	mov    ebx,0xe4f037d
  416ff0:	mov    ds,WORD PTR ds:0x64bac03d
  416ff6:	jo     0x417031
  416ff8:	in     al,0x4d
  416ffa:	fisttp DWORD PTR [edx+edx*2]
  416ffd:	mov    eax,ds:0x2f6e7a9c
  417002:	jmp    0xe26b:0x294d8bbf
  417009:	jno    0x417025
  41700b:	xor    DWORD PTR [ecx+0x4400a67a],ebx
  417011:	sub    eax,0xfe4c6003
  417016:	push   ecx
  417017:	sti    
  417018:	adc    eax,0x2a857522
  41701d:	dec    ebx
  41701e:	sbb    BYTE PTR [ecx-0x35909f8],al
  417024:	pushf  
  417025:	add    edi,DWORD PTR [edx+0x4543286]
  41702b:	mov    cl,0x9e
  41702d:	scas   al,BYTE PTR es:[edi]
  41702e:	in     eax,dx
  41702f:	xchg   ebx,eax
  417030:	ficomp DWORD PTR [ecx+edx*2]
  417033:	fdivr  st(2),st
  417035:	dec    esi
  417036:	out    0x6d,eax
  417038:	adc    dh,BYTE PTR [ecx-0x3a7e122f]
  41703e:	repnz xchg edi,eax
  417040:	fidivr DWORD PTR [edi-0x6e8b8013]
  417046:	mov    ebx,0x2b2f7726
  41704b:	add    dh,BYTE PTR [esi]
  41704d:	dec    esi
  41704e:	jns    0x417045
  417050:	or     bh,0x8a
  417053:	push   edi
  417054:	rcr    BYTE PTR [edi+0x4e],1
  417057:	adc    al,0x1c
  417059:	jb     0x4170ae
  41705b:	sbb    al,0x4e
  41705d:	xchg   ecx,eax
  41705e:	loop   0x4170b1
  417060:	jmp    0x93a5:0x67d9c416
  417067:	scas   eax,DWORD PTR es:[edi]
  417068:	stos   DWORD PTR es:[edi],eax
  417069:	mov    DWORD PTR [esp+eax*4],eax
  41706c:	cpuid  
  41706e:	ret    
  41706f:	or     al,0x62
  417071:	cmp    al,0x85
  417073:	dec    esi
  417074:	(bad)  
  417075:	mov    eax,0x3f15356d
  41707a:	cmp    eax,0xfcc230f6
  41707f:	ins    DWORD PTR es:[edi],dx
  417080:	lods   al,BYTE PTR ds:[esi]
  417081:	xchg   ecx,eax
  417082:	or     BYTE PTR [edx-0x6e],0x96
  417086:	lods   al,BYTE PTR ds:[esi]
  417087:	inc    ebx
  417088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417089:	cld    
  41708a:	jmp    0x2e23:0xa56f4d61
  417091:	and    eax,0x2aa43f37
  417096:	sbb    BYTE PTR [edx+0x7836c4f8],ah
  41709c:	dec    edi
  41709d:	fidiv  WORD PTR [ebx+ecx*1-0x54]
  4170a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170a2:	mov    ebx,0x1ad6b359
  4170a7:	and    al,0xad
  4170a9:	xchg   esi,eax
  4170aa:	cmp    bl,BYTE PTR [ebp+ebx*1+0x206ac50c]
  4170b1:	mov    edi,0x929ec0c
  4170b6:	pop    esp
  4170b7:	mov    ah,0x45
  4170b9:	pop    edx
  4170ba:	mov    WORD PTR [edx],ss
  4170bc:	and    BYTE PTR [edi-0x32d8d9f7],al
  4170c2:	pop    esi
  4170c3:	or     al,0x98
  4170c5:	jp     0x41708a
  4170c7:	add    DWORD PTR [ebp-0x55],0x35
  4170cb:	lahf   
  4170cc:	add    edi,DWORD PTR [ebp+0x2262f3be]
  4170d2:	xor    DWORD PTR [edi],edi
  4170d4:	inc    ebp
  4170d5:	cmc    
  4170d6:	(bad)  
  4170d7:	fld    DWORD PTR [ebp+0x1f]
  4170da:	jbe    0x4170ca
  4170dc:	jb     0x417144
  4170de:	jns    0x4170b4
  4170e0:	mov    eax,0xec70e3f
  4170e5:	mov    esi,0x3055eba2
  4170ea:	fmul   DWORD PTR [ebx-0x26c07d40]
  4170f0:	aam    0x86
  4170f2:	mov    eax,ds:0x9c50820c
  4170f7:	jno    0x4170bb
  4170f9:	add    DWORD PTR [ebx-0x30],ebp
  4170fc:	ja     0x4170a8
  4170fe:	jae    0x4170a9
  417100:	xor    edx,0xe79c3189
  417106:	aad    0xcb
  417108:	repz pushf 
  41710a:	or     eax,0x53c018a
  41710f:	cli    
  417110:	xchg   edx,eax
  417111:	add    al,0xc3
  417113:	xchg   esi,eax
  417114:	retf   
  417115:	loopne 0x41712d
  417117:	repnz cmp bh,BYTE PTR [ecx]
  41711a:	movhps QWORD PTR [eax+ebx*1-0xe8aabec],xmm0
  417122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417123:	rcl    BYTE PTR [ecx+0x264a352c],1
  417129:	test   edi,0xfed9146b
  41712f:	daa    
  417130:	popa   
  417131:	mov    BYTE PTR [ecx+ecx*8],0xa8
  417135:	ins    BYTE PTR es:[edi],dx
  417136:	add    eax,0x6f5fe15a
  41713b:	fdiv   DWORD PTR [ebx-0x71]
  41713e:	xor    DWORD PTR [edx],eax
  417140:	xchg   edx,eax
  417141:	mov    al,ds:0x263ee6a2
  417146:	out    0x6d,eax
  417148:	jle    0x417130
  41714a:	dec    ecx
  41714b:	test   eax,0xb74a71b3
  417150:	jb     0x41714b
  417152:	mov    ds:0x5dbe31e,al
  417157:	xchg   ebp,eax
  417158:	retf   
  417159:	sub    ah,al
  41715b:	aas    
  41715c:	shr    BYTE PTR [edx],0xda
  41715f:	mov    ds:0x4777a2ef,eax
  417164:	les    edi,FWORD PTR [esi-0x70]
  417167:	imul   esi,DWORD PTR [edx+0x72],0x45
  41716b:	xchg   ebp,eax
  41716c:	add    eax,0xdd8c14cf
  417171:	cmp    eax,0x17af3c68
  417176:	rol    BYTE PTR [eax+0x70],0x70
  41717a:	add    DWORD PTR [eax-0x2627c56a],esi
  417180:	test   eax,0x916fd208
  417185:	mov    dl,0x48
  417187:	cmp    BYTE PTR [esp+eax*8+0x131263ea],cl
  41718e:	xchg   edx,eax
  41718f:	test   al,0xda
  417191:	mov    eax,ds:0x7eb72485
  417196:	dec    edi
  417197:	push   esp
  417198:	jp     0x4171d7
  41719a:	inc    esi
  41719b:	xchg   edx,eax
  41719c:	mov    cl,BYTE PTR [edi]
  41719e:	fcomp  QWORD PTR [esi+0x71]
  4171a1:	outs   dx,BYTE PTR ds:[esi]
  4171a2:	mov    edi,0x104cc734
  4171a7:	and    bh,BYTE PTR [eax+0x151c3162]
  4171ad:	adc    ch,BYTE PTR [esi]
  4171af:	push   0xeb8c0745
  4171b4:	js     0x417226
  4171b6:	push   cs
  4171b7:	jb     0x4171bd
  4171b9:	push   ebp
  4171ba:	shl    DWORD PTR [ecx],cl
  4171bc:	mov    ch,0xc8
  4171be:	stc    
  4171bf:	cmp    eax,0x270467dc
  4171c4:	push   ss
  4171c5:	cmp    eax,0x4bd5d18b
  4171ca:	fisubr WORD PTR [ecx]
  4171cc:	pop    ebp
  4171cd:	std    
  4171ce:	in     eax,dx
  4171cf:	xchg   ebp,eax
  4171d0:	xor    BYTE PTR [esp+edx*1+0x59e416b3],ah
  4171d7:	fstp   QWORD PTR [eax]
  4171d9:	jne    0x41719c
  4171db:	mov    eax,ds:0x22177d7f
  4171e0:	out    dx,eax
  4171e1:	inc    eax
  4171e2:	jl     0x417261
  4171e4:	jecxz  0x41722e
  4171e6:	push   ebx
  4171e8:	sub    bh,BYTE PTR [ebx+0x5d]
  4171eb:	sbb    BYTE PTR [edx-0x42198364],dl
  4171f1:	inc    ecx
  4171f2:	pop    ecx
  4171f3:	fcomp  QWORD PTR [edx]
  4171f5:	mov    dl,0x62
  4171f7:	inc    ebx
  4171f8:	pop    ss
  4171f9:	into   
  4171fa:	repz sbb ebx,DWORD PTR [eax-0x66b0a1db]
  417201:	int    0x35
  417203:	pop    esp
  417204:	(bad)  
  417205:	aam    0xb0
  417207:	push   edx
  417208:	into   
  417209:	int    0x3d
  41720b:	push   edx
  41720c:	push   0xc060d173
  417211:	mov    eax,0xf99c4444
  417216:	dec    edx
  417217:	hlt    
  417218:	ds mov eax,0xf31d9eee
  41721e:	outs   dx,DWORD PTR ds:[esi]
  41721f:	retf   
  417220:	out    dx,al
  417221:	mov    eax,ds:0xba8d707a
  417226:	inc    ebx
  417227:	adc    ecx,DWORD PTR [ebx+ebp*4]
  41722a:	pushf  
  41722b:	mov    ds,WORD PTR [ebp+0x57]
  41722e:	scas   al,BYTE PTR es:[edi]
  41722f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417230:	add    esi,ecx
  417232:	loope  0x417269
  417234:	sti    
  417235:	test   DWORD PTR [edx],edi
  417237:	int    0x3c
  417239:	sbb    al,0x64
  41723b:	jle    0x41729d
  41723d:	fld    DWORD PTR [edi+edx*4]
  417240:	pop    edi
  417241:	fdivr  QWORD PTR [edx-0x2d]
  417244:	mov    dl,0x76
  417246:	sbb    BYTE PTR ds:0x484833a3,dh
  41724c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41724d:	push   esi
  41724e:	fisubr DWORD PTR [esi+esi*1-0x57]
  417252:	(bad)  
  417253:	fdivr  DWORD PTR ds:0xd9f4f224
  417259:	loopne 0x417241
  41725b:	loopne 0x4171ea
  41725d:	aaa    
  41725e:	adc    dl,BYTE PTR [edi+0x40]
  417261:	push   ss
  417262:	pushf  
  417263:	sahf   
  417264:	js     0x4172b9
  417266:	lods   eax,DWORD PTR ds:[esi]
  417267:	ins    DWORD PTR es:[edi],dx
  417268:	in     eax,dx
  417269:	aam    0x60
  41726b:	mov    cl,0xb8
  41726d:	or     eax,0xf5c74e49
  417272:	or     al,0xfd
  417274:	mov    WORD PTR [edi+0x20bd987b],es
  41727a:	mov    ds:0x1638e48e,al
  41727f:	pop    ebp
  417280:	call   0xa2290ef9
  417285:	mov    ebx,0x17c6d0a1
  41728a:	push   eax
  41728b:	dec    ecx
  41728c:	mov    ch,0xa3
  41728e:	out    0x1d,eax
  417290:	lea    esp,[esi-0x14]
  417293:	(bad)  
  417294:	repz push esi
  417296:	and    eax,DWORD PTR [edx+0x30]
  417299:	jl     0x417258
  41729b:	ret    0x4ed
  41729e:	push   ds
  41729f:	add    al,0x39
  4172a1:	loop   0x41724d
  4172a3:	fidiv  WORD PTR [edi+0x666bd426]
  4172a9:	adc    ah,0x3a
  4172ac:	shl    esp,cl
  4172ae:	fs hlt 
  4172b0:	scas   eax,DWORD PTR es:[edi]
  4172b1:	dec    eax
  4172b2:	sub    edi,DWORD PTR [edi]
  4172b4:	and    BYTE PTR ds:0xc41463ec,0x1f
  4172bb:	xor    DWORD PTR [eax-0x4b9ab108],0x469311fb
  4172c5:	mov    ebp,0x6c8cac42
  4172ca:	pop    esp
  4172cb:	inc    eax
  4172cc:	mov    edx,0xabd00f17
  4172d1:	scas   al,BYTE PTR es:[edi]
  4172d2:	imul   esp,DWORD PTR [edx-0x7ed0e3b7],0xf6f9a29e
  4172dc:	pop    eax
  4172dd:	push   edi
  4172de:	mov    bl,0xb7
  4172e0:	jmp    0x417337
  4172e2:	xchg   cl,dh
  4172e4:	repnz div BYTE PTR [ebp-0x31]
  4172e8:	cmp    DWORD PTR [esi+0x6a57bb59],0xe56e51f0
  4172f2:	jmp    FWORD PTR [edx-0x25]
  4172f5:	clc    
  4172f6:	xchg   esp,eax
  4172f7:	out    dx,al
  4172f8:	push   eax
  4172f9:	jno    0x4172b6
  4172fb:	test   BYTE PTR [edx+ecx*8+0x5d],dh
  4172ff:	shl    dh,cl
  417301:	imul   ebx,DWORD PTR [ebx],0xffffffbc
  417304:	aas    
  417305:	stos   BYTE PTR es:[edi],al
  417306:	jmp    0xd405:0x89770234
  41730d:	jne    0x417290
  41730f:	dec    edi
  417310:	mov    esi,0x6d96836a
  417315:	mov    al,ds:0x3f6328aa
  41731a:	arpl   cx,si
  41731c:	pop    ecx
  41731d:	int    0x62
  41731f:	xchg   DWORD PTR [esi-0x7548d71a],edx
  417325:	dec    edx
  417326:	enter  0x8a37,0xa2
  41732a:	(bad)  
  41732b:	fld    TBYTE PTR [edi+0x4a4b2c6b]
  417331:	jnp    0x4173a2
  417333:	sbb    eax,0xdc65e7cf
  417338:	or     ch,0xe1
  41733b:	dec    esp
  41733c:	loop   0x417321
  41733e:	sbb    dh,BYTE PTR [ebx-0x1725cd4e]
  417344:	fwait
  417345:	xchg   edx,eax
  417346:	je     0x41738d
  417348:	jb     0x4173b4
  41734a:	fmul   QWORD PTR [eax]
  41734c:	push   esp
  41734d:	ss inc ebx
  41734f:	ja     0x88faa120
  417355:	mov    ch,0x4d
  417357:	nop
  417358:	jne    0x417345
  41735a:	sub    ecx,ecx
  41735c:	call   0xd7f2:0x9b84dbac
  417363:	or     eax,ebp
  417365:	sbb    al,0xe6
  417367:	scas   al,BYTE PTR es:[edi]
  417368:	and    ah,0x74
  41736b:	or     ebp,DWORD PTR [ebx-0x3]
  41736e:	and    al,0xb5
  417370:	xchg   BYTE PTR [ecx+0x7f],dh
  417373:	popa   
  417374:	lock and DWORD PTR [esi],esp
  417377:	loop   0x41730e
  417379:	retf   0x8053
  41737c:	push   edi
  41737d:	push   0x6f8aa682
  417382:	mov    esp,0x8249d436
  417387:	jmp    0x4173b1
  417389:	shl    al,1
  41738b:	inc    esi
  41738c:	dec    edi
  41738d:	jbe    0x4173ce
  41738f:	ins    BYTE PTR es:[edi],dx
  417390:	pop    esi
  417391:	push   ebp
  417392:	inc    ecx
  417393:	iret   
  417394:	inc    eax
  417395:	js     0x4173a4
  417397:	arpl   WORD PTR [eax],dx
  417399:	mov    dh,0xa2
  41739b:	mov    eax,ds:0x2e9fbb86
  4173a0:	hlt    
  4173a1:	nop
  4173a2:	cmp    al,0x22
  4173a4:	xchg   ecx,eax
  4173a5:	mov    dl,0x49
  4173a7:	in     al,0x5d
  4173a9:	adc    dl,cl
  4173ab:	test   edi,ebp
  4173ad:	xchg   ebx,eax
  4173ae:	ss cld 
  4173b0:	in     al,0x20
  4173b2:	popf   
  4173b3:	jmp    0x5eac:0xe386e10
  4173ba:	retf   0x4281
  4173bd:	push   es
  4173be:	jns    0x417397
  4173c0:	test   esi,esi
  4173c2:	pop    ecx
  4173c3:	sbb    bl,BYTE PTR [esi]
  4173c5:	inc    eax
  4173c6:	xchg   edi,eax
  4173c7:	mov    esp,ebx
  4173c9:	pop    esi
  4173ca:	adc    dl,dh
  4173cc:	stos   DWORD PTR es:[edi],eax
  4173cd:	mov    DWORD PTR [ecx],0x836b0eca
  4173d3:	pop    esi
  4173d4:	test   al,0xb8
  4173d6:	mov    edi,0x332f73e2
  4173db:	pushf  
  4173dc:	cmp    eax,0x26702670
  4173e1:	stos   BYTE PTR es:[edi],al
  4173e2:	cwde   
  4173e3:	mov    eax,0xdda35a9d
  4173e8:	sbb    DWORD PTR [edi],edx
  4173ea:	rol    BYTE PTR [edi+ecx*8-0x79],0xe1
  4173ef:	adc    DWORD PTR [esi],ebp
  4173f1:	xor    esi,DWORD PTR [eax+esi*4-0x23]
  4173f5:	fucom  st(7)
  4173f7:	bound  ebp,QWORD PTR [ecx+eiz*1-0x61c400e]
  4173fe:	loop   0x417411
  417400:	sub    al,0x96
  417402:	inc    ebp
  417403:	loop   0x4173d6
  417405:	jns    0x41746d
  417407:	(bad)  
  417408:	iret   
  417409:	mov    edx,0xd2e8faf9
  41740e:	inc    ebp
  41740f:	xchg   edi,eax
  417410:	xchg   edx,eax
  417411:	pop    ecx
  417412:	sub    al,0xab
  417414:	(bad)  
  417415:	popf   
  417416:	and    DWORD PTR [ebp-0x5a],eax
  417419:	sbb    dh,BYTE PTR [esi+0x2bd91465]
  41741f:	je     0x41745b
  417421:	aas    
  417422:	xchg   ecx,eax
  417423:	pusha  
  417424:	mov    ebp,0x41ae2b7a
  417429:	sbb    edx,DWORD PTR [edi]
  41742b:	mov    cl,BYTE PTR [ecx]
  41742d:	outs   dx,BYTE PTR ds:[esi]
  41742e:	mov    ecx,0xeff27b3a
  417433:	iret   
  417434:	sub    bl,BYTE PTR [edi+0x5f]
  417437:	aam    0x87
  417439:	outs   dx,BYTE PTR ds:[esi]
  41743a:	lea    eax,[eax+0x6b3f0b92]
  417440:	repnz and eax,0x29243eab
  417446:	rcr    DWORD PTR [eax],cl
  417448:	push   ecx
  417449:	inc    ebp
  41744a:	and    ecx,edx
  41744c:	(bad)  
  41744d:	and    ebp,DWORD PTR [eax-0x6f]
  417450:	dec    ebp
  417451:	repz into 
  417453:	es cdq 
  417455:	jnp    0x417404
  417457:	nop
  417458:	mov    esi,0xc574bfe1
  41745d:	mov    al,ds:0x7784a68d
  417462:	mov    ch,0xa3
  417464:	inc    ebp
  417465:	call   0x846b:0x9cf6b537
  41746c:	mov    ds,eax
  41746e:	xchg   DWORD PTR [ebx-0x18],ecx
  417471:	dec    esp
  417472:	std    
  417473:	jo     0x417411
  417475:	inc    esi
  417476:	sbb    ch,bh
  417478:	mov    ds:0xb89099e6,eax
  41747d:	add    DWORD PTR [edx+0x3efe0b2],edi
  417483:	jne    0x4174b5
  417485:	and    DWORD PTR [esi-0x5a],ebx
  417488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417489:	mov    ch,0x10
  41748b:	(bad)  
  41748c:	sub    al,BYTE PTR [eax]
  41748e:	add    BYTE PTR [eax],al
  417490:	add    BYTE PTR [eax],al
  417492:	fisttp WORD PTR [ebp-0x66]
  417495:	mov    DWORD PTR [edx+0x305fdfdf],ebx
  41749b:	adc    al,0x61
  41749d:	retf   0xa650
  4174a0:	or     DWORD PTR [edi+0xf22b],esi
  4174a6:	repz add al,0x0
  4174a9:	add    BYTE PTR [ebx],ah
  4174ab:	dec    ebp
  4174ac:	aad    0xfa
  4174ae:	dec    edx
  4174af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174b0:	ins    BYTE PTR es:[edi],dx
  4174b1:	push   ebp
  4174b2:	sbb    BYTE PTR [edx],0x6
  4174b5:	pop    ds
  4174b6:	mov    DWORD PTR [eax+0x34a0747b],ebx
  4174bc:	adc    eax,0xe2c3ada3
  4174c1:	test   DWORD PTR ds:0x620d1187,esi
  4174c7:	daa    
  4174c8:	das    
  4174c9:	push   ds
  4174ca:	sti    
  4174cb:	mov    edi,0x1707752e
  4174d0:	xor    eax,0x6f328d73
  4174d5:	test   DWORD PTR [edi-0x4],edi
  4174d8:	xchg   BYTE PTR ds:0xe85d9964,dh
  4174de:	loopne 0x4174d5
  4174e0:	inc    eax
  4174e1:	dec    eax
  4174e2:	and    DWORD PTR [eax],edx
  4174e4:	mov    edx,0x7415830c
  4174e9:	add    edi,ebx
  4174eb:	popa   
  4174ec:	mov    ch,0x28
  4174ee:	nop
  4174ef:	or     DWORD PTR [eax],edx
  4174f1:	and    cl,BYTE PTR [esi+ebp*2]
  4174f4:	aad    0x40
  4174f6:	(bad)  
  4174f7:	mov    ecx,0xc0c76fc9
  4174fc:	and    bl,BYTE PTR [eax-0x4c]
  4174ff:	mov    dh,0x52
  417501:	jecxz  0x41753f
  417503:	sbb    ah,ah
  417505:	cs pop ecx
  417507:	inc    ebx
  417508:	loop   0x417541
  41750a:	fadd   QWORD PTR [ebx]
  41750c:	repnz or DWORD PTR [edi-0x70],ebp
  417510:	mov    ebx,0x5d6ff94b
  417515:	pop    ebx
  417516:	pop    es
  417517:	test   eax,0x8a321f09
  41751c:	xor    BYTE PTR [esi-0x7f],bl
  41751f:	aas    
  417520:	outs   dx,BYTE PTR ds:[esi]
  417521:	adc    BYTE PTR [ebx],cl
  417523:	mov    ecx,0x9d23d612
  417528:	mov    ds:0xc7e95be8,eax
  41752d:	(bad)  
  41752f:	fcomp  QWORD PTR [eax]
  417531:	fs jle 0x417516
  417534:	bound  ebx,QWORD PTR [ebx]
  417536:	les    esi,FWORD PTR [ecx+0xf]
  417539:	xor    eax,0x155409d4
  41753e:	mov    BYTE PTR [edx-0x5c],dh
  417541:	retf   
  417542:	jbe    0x41751c
  417544:	cdq    
  417545:	repz sbb al,BYTE PTR [edx]
  417548:	mov    ds:0xbe6a208d,al
  41754d:	retf   
  41754e:	mov    esp,0x5bf24178
  417553:	mov    bh,cl
  417555:	mov    ch,0x31
  417557:	or     eax,0x5d1a61e5
  41755c:	stc    
  41755d:	(bad)  [esi+0x1fc1a99]
  417563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417564:	jmp    0x3025:0x3a193354
  41756b:	jmp    0x253962a
  417570:	inc    eax
  417571:	dec    ebp
  417572:	mov    edx,0xa0951395
  417577:	mov    bl,0x76
  417579:	mov    ah,0x10
  41757b:	inc    ebx
  41757c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41757d:	inc    esp
  41757e:	sbb    BYTE PTR [esi-0x51],ch
  417581:	adc    al,0x79
  417583:	adc    eax,0x96b05379
  417588:	iret   
  417589:	jl     0x41755e
  41758b:	xor    ebp,ecx
  41758d:	popf   
  41758e:	cmp    eax,0x6f34b46c
  417593:	shl    BYTE PTR es:[eax+eiz*4+0x7e],cl
  417598:	pop    es
  417599:	cmp    ebx,DWORD PTR [edx+0x192929c5]
  41759f:	mov    edx,0x89e0eb18
  4175a4:	push   esp
  4175a5:	fdivr  DWORD PTR [edx-0x5]
  4175a8:	das    
  4175a9:	mul    BYTE PTR [esi]
  4175ab:	cmp    eax,0x60805879
  4175b0:	gs mov bl,0xcf
  4175b3:	stc    
  4175b4:	mul    ebx
  4175b6:	mov    eax,ds:0x8e83b2a8
  4175bb:	push   cs
  4175bc:	int    0x90
  4175be:	out    0x8d,al
  4175c0:	push   es
  4175c1:	test   BYTE PTR [esi],al
  4175c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175c4:	jae    0x417645
  4175c6:	mov    bl,0x6e
  4175c8:	inc    ebx
  4175c9:	ins    DWORD PTR es:[edi],dx
  4175ca:	or     eax,0x6077430d
  4175cf:	sar    DWORD PTR [edi],1
  4175d1:	ret    
  4175d2:	push   eax
  4175d3:	pop    esp
  4175d4:	dec    edi
  4175d5:	lds    esi,FWORD PTR [ecx+edi*1]
  4175d8:	sub    BYTE PTR [eax],bl
  4175da:	cwde   
  4175db:	push   ss
  4175dc:	sahf   
  4175dd:	sub    al,0xa4
  4175df:	cmp    DWORD PTR [edi+0x13],esi
  4175e2:	mov    ds:0x74c0aaee,al
  4175e7:	daa    
  4175e8:	inc    ebx
  4175e9:	sbb    BYTE PTR [ebp+0x69],0x5a
  4175ed:	imul   ecx,DWORD PTR gs:[eax],0xffffff82
  4175f1:	dec    ebx
  4175f2:	push   0x65
  4175f4:	enter  0xbedf,0x7
  4175f8:	ja     0x4175f9
  4175fa:	cmp    al,0xa5
  4175fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175fd:	pushf  
  4175fe:	dec    ecx
  4175ff:	ds dec esp
  417601:	xchg   DWORD PTR [eax+0x7de12998],esp
  417607:	fld    DWORD PTR [esi-0x28]
  41760a:	inc    edx
  41760b:	in     al,0x19
  41760d:	fnstcw WORD PTR [edx]
  41760f:	xchg   ebx,eax
  417610:	adc    eax,0xdf02f1af
  417615:	outs   dx,DWORD PTR ds:[esi]
  417616:	lea    eax,[ebx+0x25]
  417619:	push   edi
  41761a:	adc    eax,0xbebeaba9
  41761f:	test   eax,0xd3968ff6
  417624:	sahf   
  417625:	(bad)  
  417626:	jb     0x417685
  417628:	js     0x4175b9
  41762a:	add    al,0x3f
  41762c:	jl     0x4175bd
  41762e:	shr    BYTE PTR [ebx+0x6b285434],cl
  417634:	or     DWORD PTR [edi-0x1ea886dd],esp
  41763a:	jg     0x4175cd
  41763c:	loope  0x41767c
  41763e:	xchg   edi,eax
  41763f:	inc    esp
  417640:	fiadd  WORD PTR [ecx]
  417642:	pop    ecx
  417643:	push   edx
  417644:	xchg   esp,eax
  417645:	push   ebp
  417646:	sub    bl,BYTE PTR [ecx+0x19]
  417649:	add    DWORD PTR [eax-0x61],ecx
  41764c:	fwait
  41764d:	sub    dl,BYTE PTR [ecx+ebp*1]
  417650:	or     DWORD PTR [edi-0x5d],eax
  417653:	fist   DWORD PTR [ebx+0x33af0607]
  417659:	mov    esi,0x7b5621f3
  41765e:	mov    eax,0xf8fb66a9
  417663:	enter  0x7fb2,0xb7
  417667:	xor    cl,BYTE PTR [esp+edi*1-0x69]
  41766b:	iret   
  41766c:	addr16 pop ss
  41766e:	les    ecx,FWORD PTR [edx+0x6484846b]
  417674:	lds    edx,FWORD PTR [eax-0x5509be41]
  41767a:	fidivr WORD PTR [edi+ebx*2]
  41767d:	iret   
  41767e:	mov    dl,0x4a
  417680:	cli    
  417681:	inc    eax
  417682:	cmp    DWORD PTR [ebx+0x2929d458],esi
  417688:	push   ebx
  417689:	les    esp,FWORD PTR [eax-0x61]
  41768c:	int3   
  41768d:	cmp    BYTE PTR [edx+eax*8],0x2d
  417691:	mov    bl,0xd8
  417693:	sbb    DWORD PTR [ebp-0x70db2e03],ebp
  417699:	push   es
  41769a:	xor    DWORD PTR ds:0xbb2e3f52,esi
  4176a0:	jne    0x4176f3
  4176a2:	pop    esp
  4176a3:	push   cs
  4176a4:	mov    ebx,0x558411b6
  4176a9:	aad    0xab
  4176ab:	pop    es
  4176ac:	lock adc bh,BYTE PTR [ecx-0x1e3355a6]
  4176b3:	sbb    BYTE PTR [ebp-0x64],ah
  4176b6:	lock enterw 0x199a,0x54
  4176bc:	mov    eax,ds:0x3555d34d
  4176c1:	cli    
  4176c2:	lods   al,BYTE PTR ds:[esi]
  4176c3:	mov    esi,esi
  4176c5:	repnz or BYTE PTR ds:0xd01c9442,bh
  4176cc:	daa    
  4176cd:	pop    ss
  4176ce:	enter  0xec32,0xf8
  4176d2:	cmp    DWORD PTR [ebp+0x7c],edx
  4176d5:	retf   0x1a21
  4176d8:	fsubrp st(1),st
  4176da:	jno    0x41766e
  4176dc:	mov    bh,0xcd
  4176de:	sbb    al,0x2f
  4176e0:	ss hlt 
  4176e2:	adc    BYTE PTR [ebx+eiz*8],al
  4176e5:	pop    esp
  4176e6:	loop   0x4176e0
  4176e8:	je     0x4176f9
  4176ea:	mov    dl,0x45
  4176ec:	ret    
  4176ed:	xchg   esp,eax
  4176ee:	jge    0x417681
  4176f0:	out    0xb,al
  4176f2:	aas    
  4176f3:	aas    
  4176f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176f5:	and    DWORD PTR [ebx+edi*2+0x4e658228],esi
  4176fc:	sahf   
  4176fd:	or     al,0x8e
  4176ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417700:	adc    eax,0xd260e462
  417705:	lock fld QWORD PTR [edi+0xcd848d7]
  41770c:	sub    BYTE PTR [ebx+eiz*1+0x26],ch
  417710:	and    DWORD PTR [ebx+esi*8-0x76],edx
  417714:	aaa    
  417715:	or     BYTE PTR [ebp-0x3f77263c],cl
  41771b:	call   0xa92d:0x3465d019
  417722:	cmp    eax,0x1ff2f064
  417727:	adc    bh,BYTE PTR [esp+edi*2+0x618fccbe]
  41772e:	dec    edi
  41772f:	repnz call FWORD PTR [ebx]
  417732:	jbe    0x41779c
  417734:	sbb    DWORD PTR [eax-0x67c596a5],esp
  41773a:	pusha  
  41773b:	in     eax,0xda
  41773d:	cmp    edi,DWORD PTR [ecx+ebx*1]
  417740:	sub    BYTE PTR [edx-0x232dfea4],dl
  417746:	pop    ecx
  417747:	jmp    DWORD PTR [esi+0x7a2973d2]
  41774d:	xor    al,0x70
  41774f:	push   ds
  417750:	pop    ebx
  417751:	xchg   BYTE PTR [esp+esi*1+0x33],ah
  417755:	test   BYTE PTR [ebx-0x273a2b6c],ah
  41775b:	adc    ebp,DWORD PTR [ecx+0x1c]
  41775e:	std    
  41775f:	leave  
  417760:	and    al,0x2f
  417762:	mov    ds:0x950ffb33,eax
  417767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417768:	out    0xd3,eax
  41776a:	inc    edi
  41776b:	out    0xec,al
  41776d:	push   edi
  41776e:	or     BYTE PTR [esi+0x5f],al
  417771:	dec    ecx
  417772:	pop    eax
  417773:	enter  0x2507,0x67
  417777:	iret   
  417778:	(bad)  
  417779:	xchg   esp,eax
  41777a:	adc    ebx,DWORD PTR [ebx-0x1c]
  41777d:	int3   
  41777e:	int3   
  41777f:	cdq    
  417780:	inc    ebp
  417781:	sbb    BYTE PTR [eax-0x68],0x87
  417785:	sub    eax,0xcd0c3866
  41778a:	int    0xe3
  41778c:	and    al,0xef
  41778e:	push   es
  41778f:	cs push esp
  417791:	repnz (bad) 
  417793:	cmc    
  417794:	inc    esp
  417795:	pop    ebp
  417796:	inc    edx
  417797:	int3   
  417798:	add    eax,0xa0523af9
  41779d:	inc    ebx
  41779e:	and    al,0xeb
  4177a0:	sar    DWORD PTR [ebx+0x1f259207],1
  4177a6:	lea    ebx,[ebx-0x5d]
  4177a9:	xor    esi,DWORD PTR [eax]
  4177ab:	out    dx,al
  4177ac:	jecxz  0x417792
  4177ae:	jnp    0x417731
  4177b0:	sub    al,0x9a
  4177b2:	sbb    ebx,DWORD PTR [eax-0x47d5be8d]
  4177b8:	xor    ah,bh
  4177ba:	cmp    ebx,ebp
  4177bc:	jbe    0x4177a3
  4177be:	inc    edx
  4177bf:	(bad)  [edi+ebp*2-0xcd9710f]
  4177c6:	mov    ds:0x8614f0c5,al
  4177cb:	enter  0x397e,0x8b
  4177cf:	clc    
  4177d0:	pusha  
  4177d1:	xchg   ebp,eax
  4177d2:	inc    edi
  4177d3:	mov    ah,0x50
  4177d5:	test   eax,0xc2fbe74
  4177da:	imul   ecx,DWORD PTR [eax],0x6c4f2368
  4177e0:	pusha  
  4177e1:	mov    WORD PTR [eax],ds
  4177e3:	push   ss
  4177e4:	push   cs
  4177e5:	jmp    0xe632:0x5a0022f6
  4177ec:	sahf   
  4177ed:	fucomp st(2)
  4177ef:	and    al,0x30
  4177f1:	bound  ebp,QWORD PTR [edi]
  4177f3:	out    0x17,al
  4177f5:	mov    dh,0xdc
  4177f7:	out    dx,al
  4177f8:	mov    DWORD PTR [esp+esi*2],esp
  4177fb:	and    ebx,esi
  4177fd:	in     al,0xcf
  4177ff:	ficomp DWORD PTR [esi+eax*2-0x5c]
  417803:	ret    
  417804:	inc    eax
  417805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417806:	ss pusha 
  417808:	icebp  
  417809:	or     edi,DWORD PTR [eax-0x6fdcde40]
  41780f:	es in  al,0xf4
  417812:	xchg   edx,eax
  417813:	lahf   
  417814:	xlat   BYTE PTR ds:[ebx]
  417815:	pusha  
  417816:	pop    edx
  417817:	adc    DWORD PTR [eax-0x59],ecx
  41781a:	cli    
  41781b:	ja     0x417869
  41781d:	ja     0x4177f7
  41781f:	jnp    0x417893
  417821:	ret    0xd10f
  417824:	mov    ecx,0xd40d7db6
  417829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41782a:	popf   
  41782b:	cmp    BYTE PTR [ebx+0x63],ch
  41782e:	pop    esp
  41782f:	out    0xd,eax
  417831:	test   al,0xe0
  417833:	push   esp
  417834:	adc    eax,0xde82a67a
  417839:	sub    al,BYTE PTR [ebx-0x51]
  41783c:	pop    edi
  41783d:	jle    0x4177c5
  41783f:	outs   dx,DWORD PTR ds:[esi]
  417840:	dec    esp
  417841:	call   0x4c91:0x7e514a6d
  417848:	and    edx,ebx
  41784a:	enter  0x19f,0xcc
  41784e:	adc    ah,BYTE PTR [ebx-0x45283308]
  417854:	dec    edi
  417855:	(bad)  
  417856:	fsubrp st(7),st
  417858:	xchg   edi,eax
  417859:	ja     0x417850
  41785b:	dec    esi
  41785c:	push   esp
  41785d:	and    eax,0xd0b791db
  417862:	shr    DWORD PTR [edx+0x1656942],0xfc
  417869:	mov    ah,0xca
  41786b:	push   0x19
  41786d:	imul   esi
  41786f:	scas   al,BYTE PTR es:[edi]
  417870:	and    al,0xe0
  417872:	out    0xd5,al
  417874:	mov    edx,0xa684264f
  417879:	xor    al,0x86
  41787b:	mov    dl,0xd0
  41787d:	adc    al,0x18
  41787f:	das    
  417880:	data16 mov bl,0xb5
  417883:	mov    cl,0xaf
  417885:	mov    dh,0x49
  417887:	lea    edi,[eax]
  417889:	bound  esp,QWORD PTR [edi]
  41788b:	or     al,0x13
  41788d:	test   eax,0xc36e00b6
  417892:	push   ebx
  417893:	add    al,BYTE PTR [eax-0x69]
  417896:	jae    0x417892
  417898:	test   DWORD PTR [eax-0x7be84a50],esi
  41789e:	ins    DWORD PTR es:[edi],dx
  41789f:	(bad)  
  4178a1:	pop    edx
  4178a2:	xchg   edx,eax
  4178a3:	add    esi,DWORD PTR [edi-0x47]
  4178a6:	xor    al,0xa
  4178a8:	test   al,0x50
  4178aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178ab:	adc    al,0xc
  4178ad:	adc    dh,BYTE PTR [ebx+0x7f08995d]
  4178b3:	adc    ah,BYTE PTR [ebx+0x39b5162f]
  4178b9:	daa    
  4178ba:	push   ebp
  4178bb:	dec    ebx
  4178bc:	ss cwde 
  4178be:	mov    ah,0xa7
  4178c0:	ss xchg esi,eax
  4178c2:	das    
  4178c3:	xor    ch,BYTE PTR [edx]
  4178c5:	cmp    eax,0xd9d4f351
  4178ca:	test   DWORD PTR [esi+ecx*2-0x4151d017],0x268de01c
  4178d5:	iret   
  4178d6:	mov    cl,0xee
  4178d8:	mov    bh,0xff
  4178da:	retf   0x5ec6
  4178dd:	mov    esp,0x58ee099d
  4178e2:	push   cs
  4178e3:	xadd   BYTE PTR [ebp-0x2ea57b3e],bl
  4178ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178eb:	pop    edi
  4178ec:	adc    eax,0xb6d519b
  4178f1:	ss in  al,0x59
  4178f4:	pop    esp
  4178f5:	fsubr  DWORD PTR [ecx]
  4178f7:	popa   
  4178f8:	ins    DWORD PTR es:[edi],dx
  4178f9:	in     al,0x63
  4178fb:	jle    0x41791a
  4178fd:	lods   eax,DWORD PTR ds:[esi]
  4178fe:	jp     0x417940
  417900:	es pop ss
  417902:	fabs   
  417904:	repnz dec ecx
  417906:	jae    0x41792f
  417908:	es jne 0x41791a
  41790b:	inc    esp
  41790c:	inc    esi
  41790d:	shl    BYTE PTR [esi],0xa1
  417910:	les    ebx,FWORD PTR [edx]
  417912:	aam    0xce
  417914:	inc    esp
  417915:	adc    edi,DWORD PTR [edi]
  417917:	jp     0x417990
  417919:	fisubr WORD PTR [edx]
  41791b:	mov    ch,0xeb
  41791d:	mov    edx,0x69a04106
  417922:	prefetchnta BYTE PTR [esi-0x78]
  417926:	fidivr DWORD PTR [edx+0x41]
  417929:	lods   eax,DWORD PTR cs:[esi]
  41792b:	jmp    0x66b96911
  417930:	shr    DWORD PTR [esi+0x64],0x4b
  417934:	icebp  
  417935:	stos   BYTE PTR es:[edi],al
  417936:	enter  0x7beb,0x1
  41793a:	jl     0x417935
  41793c:	adc    DWORD PTR [edi+0x4a9d5e0e],ecx
  417942:	(bad)  
  417943:	aam    0xaf
  417945:	xchg   esp,eax
  417946:	pushf  
  417947:	push   DWORD PTR [esi-0x39545900]
  41794d:	ss xchg ebx,eax
  41794f:	scas   al,BYTE PTR es:[edi]
  417950:	rol    BYTE PTR [edi-0x51],1
  417953:	clc    
  417954:	outs   dx,DWORD PTR ds:[esi]
  417955:	js     0x417934
  417957:	dec    ebp
  417958:	js     0x4179d9
  41795a:	jle    0x417989
  41795c:	fstp   TBYTE PTR [eax-0x1141fbdf]
  417962:	xchg   esp,eax
  417963:	add    eax,0xa5c14093
  417968:	mov    ecx,es
  41796a:	add    DWORD PTR [esi-0x17d582a8],ebp
  417970:	xor    al,0x87
  417972:	stos   BYTE PTR es:[edi],al
  417973:	sbb    dh,BYTE PTR [eax+0x228b9ea2]
  417979:	popa   
  41797a:	aas    
  41797b:	sbb    DWORD PTR [edx-0x1c],ebp
  41797e:	les    eax,FWORD PTR [eax-0x7de656a]
  417984:	inc    esp
  417985:	jb     0x4179a7
  417987:	jbe    0x417943
  417989:	cdq    
  41798a:	sbb    BYTE PTR [edi-0x65],dl
  41798d:	jnp    0x417a03
  41798f:	mov    ebp,0x6c1ec11e
  417994:	(bad)  ds:0xd8b3e5f5
  41799a:	add    eax,0xbc0c
  41799f:	add    BYTE PTR [eax],al
  4179a1:	add    BYTE PTR [esi],ah
  4179a3:	mov    ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x10bd3c75
  4179b1:	out    0x1e,eax
  4179b3:	test   DWORD PTR [eax],0x4f300
  4179b9:	add    BYTE PTR [ebx+0x75740727],dh
  4179bf:	int    0x95
  4179c1:	ins    BYTE PTR es:[edi],dx
  4179c2:	inc    edi
  4179c3:	sub    eax,0xd732c621
  4179c8:	dec    edi
  4179c9:	push   ss
  4179ca:	pop    esi
  4179cb:	fild   WORD PTR [ebp+ecx*8+0x64]
  4179cf:	shr    BYTE PTR [esi+0x28a0417a],1
  4179d5:	and    eax,0x29e00095
  4179da:	cli    
  4179db:	in     eax,dx
  4179dc:	mov    bl,0xcd
  4179de:	mov    dh,0xf8
  4179e0:	test   eax,0xafe639b5
  4179e5:	lods   eax,DWORD PTR ds:[esi]
  4179e6:	push   ebp
  4179e7:	cmp    dh,BYTE PTR [eax-0x45f8a339]
  4179ed:	arpl   di,sp
  4179ef:	inc    eax
  4179f0:	jnp    0x41799a
  4179f2:	mov    esp,0x3508a2c5
  4179f7:	push   eax
  4179f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179f9:	jecxz  0x417a3e
  4179fb:	dec    eax
  4179fc:	mov    eax,ds:0xa26c367c
  417a01:	push   ebx
  417a02:	xchg   BYTE PTR [esi-0x80],ah
  417a05:	ja     0x4179ed
  417a07:	cld    
  417a08:	or     esp,esp
  417a0a:	inc    esp
  417a0b:	call   0xcad73104
  417a10:	mov    eax,ds:0x79ff03e5
  417a15:	mov    ebx,0x35e9dddc
  417a1a:	jmp    0x4179a0
  417a1c:	jp     0x4179a6
  417a1e:	or     DWORD PTR [esi],esp
  417a20:	je     0x417a3e
  417a22:	fimul  WORD PTR [eax+0x3114b703]
  417a28:	test   al,0xf8
  417a2a:	fadd   DWORD PTR [eax]
  417a2c:	retf   
  417a2d:	popf   
  417a2e:	mov    al,0x50
  417a30:	sbb    ebp,DWORD PTR [edx+ecx*4+0x6794016]
  417a37:	push   0x51e35e46
  417a3c:	int    0x5
  417a3e:	push   ebp
  417a3f:	or     DWORD PTR [ebx],edx
  417a41:	jp     0x417a7f
  417a43:	dec    ebx
  417a44:	enter  0x57c3,0xe0
  417a48:	jge    0x417aad
  417a4a:	in     eax,0xb8
  417a4c:	(bad)  
  417a4d:	inc    esp
  417a4e:	aas    
  417a4f:	and    DWORD PTR [esi],eax
  417a51:	dec    eax
  417a52:	test   DWORD PTR [ebx+0x60],esp
  417a55:	adc    bh,ch
  417a57:	mov    ebx,0xe2122cd6
  417a5c:	sbb    eax,0x20f10f16
  417a61:	jno    0x417a06
  417a63:	lods   eax,DWORD PTR ds:[esi]
  417a64:	pusha  
  417a65:	push   ecx
  417a66:	js     0x417ab3
  417a68:	or     eax,0x7de2d447
  417a6d:	rcl    BYTE PTR [ebx+0x3a],cl
  417a70:	push   eax
  417a71:	(bad)  
  417a72:	jmp    0x417a0a
  417a74:	clc    
  417a75:	lahf   
  417a76:	adc    DWORD PTR [esi+eiz*8-0xb],edx
  417a7a:	fadd   DWORD PTR [esi-0x137f6e3f]
  417a80:	inc    esi
  417a81:	repz jg 0x417ad6
  417a84:	mov    edi,0x7ce503b6
  417a89:	fimul  WORD PTR [eax]
  417a8b:	(bad)  
  417a8c:	cmp    BYTE PTR [edx+0x6d98d2b0],ch
  417a92:	out    0x68,al
  417a94:	ffree  st(7)
  417a96:	dec    eax
  417a97:	(bad)  
  417a98:	fistp  DWORD PTR [eax+eiz*4+0x32250a8]
  417a9f:	js     0x417a70
  417aa1:	sbb    BYTE PTR [edx+ebx*4],bl
  417aa4:	dec    ebx
  417aa5:	scas   al,BYTE PTR es:[edi]
  417aa6:	fwait
  417aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aa8:	out    dx,al
  417aa9:	bound  ebp,QWORD PTR [esi]
  417aab:	xchg   edx,eax
  417aac:	fst    QWORD PTR [ecx+0x3f]
  417aaf:	jne    0x417a70
  417ab1:	and    ebx,esp
  417ab3:	cmp    edx,DWORD PTR [ecx+0x1cbb6d90]
  417ab9:	retf   
  417aba:	jecxz  0x417af9
  417abc:	shl    DWORD PTR [ebx+edx*2],cl
  417abf:	pop    ds
  417ac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ac1:	in     al,0xaf
  417ac3:	pop    ebx
  417ac4:	xor    eax,0x23e9698e
  417ac9:	push   0x4f6c0cf9
  417ace:	push   ds
  417acf:	mov    ebp,0xca90728
  417ad4:	in     ax,dx
  417ad6:	xchg   BYTE PTR [ebp+0x12bc618],ah
  417adc:	pop    ebx
  417add:	xchg   ebp,eax
  417ade:	call   0x3534:0x288cfe1a
  417ae5:	ret    
  417ae6:	fidivr WORD PTR [edx+0x68]
  417ae9:	jmp    0xf7f5e12b
  417aee:	add    eax,0xe9e7c1b1
  417af3:	dec    edx
  417af4:	stos   DWORD PTR es:[edi],eax
  417af5:	(bad)  
  417af6:	hlt    
  417af7:	push   0x7821ef2f
  417afc:	jg     0x417a8f
  417afe:	lock frstor [edi+0x334e93cb]
  417b05:	jnp    0x417a97
  417b07:	jo     0x417b68
  417b09:	call   0xc06b:0xd04470f7
  417b10:	mov    esi,0xde8efc17
  417b15:	and    BYTE PTR [edi+0x26],dl
  417b18:	aas    
  417b19:	fidiv  WORD PTR [edi+0x6f]
  417b1c:	loop   0x417b54
  417b1e:	mov    ch,0x25
  417b20:	and    BYTE PTR [ebx],dl
  417b22:	mov    ch,0x7a
  417b24:	inc    esi
  417b25:	cmp    BYTE PTR [eax-0x10d3fee],cl
  417b2b:	ret    0x9574
  417b2e:	or     BYTE PTR [esi+0x8],dh
  417b31:	pop    esp
  417b32:	daa    
  417b33:	fs push eax
  417b35:	cmp    ecx,0x33629023
  417b3b:	loopne 0x417b1a
  417b3d:	xor    al,0x3c
  417b3f:	add    BYTE PTR [edx],ch
  417b41:	mov    DWORD PTR [edx+0x19],esp
  417b44:	jns    0x417b68
  417b46:	mov    al,0x5f
  417b48:	or     edi,DWORD PTR [ebx+0x74423a6b]
  417b4e:	out    0xd9,eax
  417b50:	in     al,0xd0
  417b52:	mov    ebp,0xf66adcfc
  417b57:	inc    esi
  417b58:	jle    0x417b10
  417b5a:	mov    eax,ds:0xa6b395ff
  417b5f:	clc    
  417b60:	cli    
  417b61:	mov    esp,0x3444e4b3
  417b66:	sub    ebp,edx
  417b68:	cmp    cl,BYTE PTR [ebp-0x1f]
  417b6b:	mov    edx,0x8f3f38c5
  417b70:	add    eax,esp
  417b72:	add    dh,BYTE PTR [edi]
  417b74:	sub    DWORD PTR [eax],esp
  417b76:	pop    ds
  417b77:	out    0x4b,eax
  417b79:	retf   
  417b7a:	xchg   esi,eax
  417b7b:	xchg   DWORD PTR [ebp-0x5f846417],edx
  417b81:	mov    ebx,ebp
  417b83:	jb     0x417b69
  417b85:	mov    WORD PTR [eax+0x3fd63ade],gs
  417b8b:	cmp    al,0x62
  417b8d:	test   BYTE PTR [edi+0x73],bh
  417b90:	jmp    0x417c0c
  417b92:	xor    DWORD PTR ds:0x35ea8d4d,edi
  417b98:	pop    es
  417b99:	xchg   ebx,eax
  417b9a:	push   esp
  417b9b:	shr    ch,cl
  417b9d:	ficom  DWORD PTR [ebp-0x55]
  417ba0:	test   al,0x9f
  417ba2:	and    BYTE PTR [ecx+ebp*1-0x6ca13950],dh
  417ba9:	nop
  417baa:	add    ebp,DWORD PTR [ebp-0x1041e9db]
  417bb0:	or     eax,DWORD PTR [esi]
  417bb2:	dec    edi
  417bb3:	scas   eax,DWORD PTR es:[edi]
  417bb4:	call   0x8d99:0x868765c
  417bbb:	das    
  417bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bbd:	rcr    edi,cl
  417bbf:	imul   esp,DWORD PTR [edx+0x63636994],0xffffff99
  417bc6:	leave  
  417bc7:	out    dx,eax
  417bc8:	mov    ds:0xe4281814,eax
  417bcd:	and    BYTE PTR [ebp-0x8],al
  417bd0:	ja     0x417be2
  417bd2:	sub    bl,BYTE PTR [ebp+0x45]
  417bd5:	stc    
  417bd6:	mov    esi,0xacc3d66f
  417bdb:	mov    ecx,DWORD PTR [ebx-0x7d]
  417bde:	adc    eax,0x30bb27b3
  417be3:	sbb    DWORD PTR [eax],ecx
  417be5:	and    bh,BYTE PTR [esi]
  417be7:	xchg   ebx,eax
  417be8:	mov    cl,0x64
  417bea:	dec    ecx
  417beb:	pop    esp
  417bec:	pavgb  mm6,QWORD PTR [esi-0x48]
  417bf0:	psubsb mm7,QWORD PTR [ebx+0x3c16daec]
  417bf7:	jb     0x417c26
  417bf9:	or     BYTE PTR [ebp+edx*4+0x8fe190b],ah
  417c00:	and    cl,BYTE PTR [esi+ecx*4]
  417c03:	cwde   
  417c04:	push   ds
  417c05:	mov    eax,0xcbd7af08
  417c0a:	out    0x89,al
  417c0c:	cld    
  417c0d:	sub    BYTE PTR ds:0x502a8762,bl
  417c13:	test   DWORD PTR [edi+ecx*2+0x52673715],eax
  417c1a:	mov    ebp,0x7824bf7a
  417c1f:	lea    edi,fs:[bp+di+0x54de]
  417c25:	mov    al,0x36
  417c27:	jne    0x417bc6
  417c29:	clc    
  417c2a:	xchg   esi,eax
  417c2b:	and    DWORD PTR [eax],ecx
  417c2d:	push   0xffffff96
  417c2f:	iret   
  417c30:	ss inc edx
  417c32:	scas   eax,DWORD PTR es:[edi]
  417c33:	push   0xffffffc9
  417c35:	mov    eax,0x5d4ec8
  417c3a:	jecxz  0x417c63
  417c3c:	push   eax
  417c3d:	xlat   BYTE PTR es:[ebx]
  417c3f:	out    0xdb,eax
  417c41:	pusha  
  417c42:	jecxz  0x417c5f
  417c44:	mov    cl,0x6f
  417c46:	adc    eax,0xce2cf9f1
  417c4b:	hlt    
  417c4c:	int3   
  417c4d:	in     eax,dx
  417c4e:	ss ja  0x417c44
  417c51:	pop    edx
  417c52:	pop    edi
  417c53:	xchg   esp,eax
  417c54:	lahf   
  417c55:	out    0xc9,al
  417c57:	loop   0x417c09
  417c59:	dec    edx
  417c5a:	or     DWORD PTR [esp+ebp*8+0x4f2676a5],ebx
  417c61:	cmp    DWORD PTR [edx-0x6ee68cb4],esp
  417c67:	in     al,0x9b
  417c69:	fcomp  DWORD PTR [edx+0x2e1fecfe]
  417c6f:	out    0x21,al
  417c71:	daa    
  417c72:	adc    eax,DWORD PTR [esi+0x34cf9d1a]
  417c78:	push   ss
  417c79:	push   ds
  417c7a:	je     0x417cba
  417c7c:	shl    BYTE PTR [ebx+0x6262a235],cl
  417c82:	push   edi
  417c83:	(bad)  
  417c84:	fwait
  417c85:	outs   dx,DWORD PTR ds:[esi]
  417c86:	inc    ecx
  417c87:	outs   dx,DWORD PTR ds:[esi]
  417c88:	cmp    eax,eax
  417c8a:	rcl    BYTE PTR [esi+0x524efc8e],cl
  417c90:	dec    edi
  417c91:	imul   esi,DWORD PTR gs:[bp+si-0x2154],0x9d239dc8
  417c9b:	(bad)
  417c9f:	add    al,0x30
  417ca1:	nop
  417ca2:	xor    al,0x73
  417ca4:	fcomip st,st(7)
  417ca6:	xor    al,0xdc
  417ca8:	(bad)  
  417ca9:	rcl    BYTE PTR [ecx],0x84
  417cac:	and    al,0x92
  417cae:	sub    edi,DWORD PTR [ebp+0x6]
  417cb1:	ret    
  417cb2:	push   ebp
  417cb3:	adc    BYTE PTR [edi],ah
  417cb5:	push   eax
  417cb6:	es retf 0x730d
  417cba:	xchg   esi,eax
  417cbb:	nop
  417cbc:	push   0x7
  417cbe:	popf   
  417cbf:	sub    eax,0x1596992b
  417cc4:	push   ss
  417cc5:	push   ecx
  417cc6:	or     DWORD PTR [edi],eax
  417cc8:	jge    0x417c7c
  417cca:	rcr    DWORD PTR [esi+0x7b5da823],1
  417cd0:	cmp    edi,ebx
  417cd2:	test   eax,0xc1cccea6
  417cd7:	call   0xd29669e
  417cdc:	mov    ebp,ebx
  417cde:	mov    cl,0x86
  417ce0:	sbb    eax,0x828825e9
  417ce5:	rcl    BYTE PTR [ebx],1
  417ce7:	leave  
  417ce8:	pusha  
  417ce9:	and    dl,BYTE PTR [ebp+0x48688add]
  417cef:	loop   0x417ce7
  417cf1:	or     al,0x39
  417cf3:	shr    eax,0x10
  417cf6:	mov    BYTE PTR [esi+eiz*2-0x2e],dl
  417cfa:	pop    esi
  417cfb:	inc    eax
  417cfc:	mov    bl,0xa3
  417cfe:	or     al,0xfe
  417d00:	mov    ds:0xab086a91,al
  417d05:	stos   BYTE PTR es:[edi],al
  417d06:	xchg   edi,eax
  417d07:	lods   eax,DWORD PTR ds:[esi]
  417d08:	jo     0x417d38
  417d0a:	adc    BYTE PTR [ecx+0x3ca62ff1],al
  417d10:	mov    eax,0x9eb71158
  417d15:	dec    edi
  417d16:	sub    eax,0x402a009e
  417d1b:	std    
  417d1c:	xchg   edi,eax
  417d1d:	sbb    BYTE PTR [edi+0x5e807e08],ch
  417d23:	pop    edx
  417d24:	add    eax,0x71c47634
  417d29:	ins    BYTE PTR es:[edi],dx
  417d2a:	or     eax,0xd319dbd6
  417d2f:	cs pop es
  417d31:	mov    esi,0x1a2a0bb7
  417d36:	adc    esp,edi
  417d38:	lds    esi,FWORD PTR [ecx+0x2f]
  417d3b:	js     0x417d21
  417d3d:	call   0x155c:0xb9f2417e
  417d44:	sbb    BYTE PTR ds:0x631f6480,dh
  417d4a:	pop    esp
  417d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d4c:	inc    DWORD PTR [eax+0x47]
  417d4f:	add    DWORD PTR [edi+eiz*4+0x10],edx
  417d53:	(bad)  
  417d54:	jmp    DWORD PTR [ecx+0x21]
  417d57:	aas    
  417d58:	adc    dl,BYTE PTR [esi+0x5d]
  417d5b:	fadd   QWORD PTR [eax-0x6f]
  417d5e:	repnz mov ebx,0xdd2254d7
  417d64:	aas    
  417d65:	gs das 
  417d67:	jecxz  0x417d30
  417d69:	mov    bl,0x14
  417d6b:	push   ds
  417d6c:	loopne 0x417dba
  417d6e:	hlt    
  417d6f:	xchg   edi,eax
  417d70:	sbb    ecx,DWORD PTR [esi-0x67]
  417d73:	lea    esi,[ebp-0x20]
  417d76:	sbb    eax,0x17185e6c
  417d7b:	(bad)  
  417d7c:	ffree  st(1)
  417d7e:	xchg   esp,esi
  417d80:	mov    ecx,0xf267fc9c
  417d85:	fld    QWORD PTR [edx-0x5b]
  417d88:	test   BYTE PTR [edx-0x6b68e583],ah
  417d8e:	pushf  
  417d8f:	(bad)  
  417d90:	frstor [edx+0x43b60b5d]
  417d96:	pop    ebx
  417d97:	or     al,0x46
  417d99:	call   0x8991fe9b
  417d9e:	xor    ah,BYTE PTR [edi]
  417da0:	lea    esi,[edi]
  417da2:	xor    ah,BYTE PTR [ecx+edx*4+0x1e]
  417da6:	jae    0x417df0
  417da8:	push   ds
  417da9:	icebp  
  417daa:	fadd   QWORD PTR [ecx+0x72]
  417dad:	adc    al,0x97
  417daf:	div    BYTE PTR [edi+ecx*4]
  417db2:	adc    BYTE PTR [esi+eiz*1-0x9],al
  417db6:	and    BYTE PTR [edi+0x30],dh
  417db9:	(bad)  
  417dba:	fwait
  417dbb:	push   ebx
  417dbc:	out    dx,al
  417dbd:	add    eax,0xccb780ed
  417dc2:	sbb    ebp,DWORD PTR [edx+0x11750c05]
  417dc8:	sub    BYTE PTR [eax],bh
  417dca:	loope  0x417d79
  417dcc:	scas   al,BYTE PTR es:[edi]
  417dcd:	inc    eax
  417dce:	inc    edx
  417dcf:	jae    0x417e33
  417dd1:	lahf   
  417dd2:	jp     0x1e9cca4
  417dd8:	mov    esp,DWORD PTR [ebx-0x38441b32]
  417dde:	push   esi
  417ddf:	ret    
  417de0:	test   al,0x49
  417de2:	or     DWORD PTR [ebp+0x3fbfecae],0xffffffca
  417de9:	bound  esp,QWORD PTR [edx]
  417deb:	daa    
  417dec:	aas    
  417ded:	ja     0x417e57
  417def:	add    BYTE PTR [eax+0x34b61ee1],bl
  417df5:	xor    al,0xfb
  417df7:	ja     0x417e4c
  417df9:	mov    ebp,0x33e01b70
  417dfe:	cld    
  417dff:	fsubr  DWORD PTR [edi]
  417e01:	inc    edx
  417e02:	(bad)
  417e05:	out    0x2c,al
  417e07:	das    
  417e08:	test   DWORD PTR [ebp+0x4ec36776],edx
  417e0e:	push   ebp
  417e0f:	mov    cl,0x45
  417e11:	push   ecx
  417e12:	xchg   ebx,eax
  417e13:	push   ss
  417e14:	cwde   
  417e15:	(bad)  
  417e16:	data16 mov ah,0x2c
  417e19:	fsub   DWORD PTR [edx+0x5f]
  417e1c:	jmp    0xce1e:0xa9b702f2
  417e23:	sbb    al,0xf7
  417e25:	or     eax,0xa5aa71b8
  417e2a:	push   ds
  417e2b:	lods   al,BYTE PTR ds:[esi]
  417e2c:	xchg   DWORD PTR [ebx+0x4b76eebf],ecx
  417e32:	fprem1 
  417e34:	add    eax,0x6fa8d3cc
  417e39:	outs   dx,BYTE PTR ds:[esi]
  417e3a:	and    ebp,DWORD PTR [ebx]
  417e3c:	jnp    0x417e37
  417e3e:	lea    esi,[ebx+0x6d]
  417e41:	cld    
  417e42:	test   al,0x54
  417e44:	dec    esp
  417e45:	in     eax,0x11
  417e47:	inc    ebp
  417e48:	daa    
  417e49:	mov    ds:0x9fca6d9e,eax
  417e4e:	in     al,dx
  417e4f:	push   0x6
  417e51:	jp     0x417e3c
  417e53:	add    al,BYTE PTR [ecx+0xfdf41b4]
  417e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e5a:	push   0x37
  417e5c:	fst    QWORD PTR [edi-0x53]
  417e5f:	jl     0x417e4a
  417e61:	push   ds
  417e62:	lock or BYTE PTR [edx+0x9],bl
  417e66:	mov    ds:0x20e867a3,eax
  417e6b:	mov    ds:0x60620432,eax
  417e70:	test   al,0xbe
  417e72:	mov    ds:0x3bbf4074,al
  417e77:	mov    al,0x8
  417e79:	aaa    
  417e7a:	mov    dh,0xb0
  417e7c:	aaa    
  417e7d:	push   es
  417e7e:	xchg   esi,eax
  417e7f:	inc    esp
  417e80:	jnp    0x417e3d
  417e82:	xchg   edi,eax
  417e83:	ror    DWORD PTR [ebx],1
  417e85:	mov    bh,0xdb
  417e87:	retf   0xba09
  417e8a:	sub    al,0xb2
  417e8c:	cmp    edi,DWORD PTR [edx+0x10292396]
  417e92:	sub    DWORD PTR [eax-0x72738007],0x1532f760
  417e9c:	push   ebp
  417e9d:	mov    al,ds:0xeaea58ed
  417ea2:	fbstp  TBYTE PTR [ebx]
  417ea4:	add    eax,0xed725d89
  417ea9:	data16 shl BYTE PTR [esi+0x93],cl
  417eb0:	add    BYTE PTR [eax],al
  417eb2:	ret    0x939e
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	rsqrtps xmm7,XMMWORD PTR [ecx]
  417ec0:	imul   edi,ebx,0xfc11
  417ec6:	repz add al,0x0
  417ec9:	add    BYTE PTR [ecx],ah
  417ecb:	jmp    0x2a50:0x865f3ab7
  417ed2:	xor    eax,0xffffd9fb
  417ed7:	jecxz  0x417f37
  417ed9:	jbe    0x417f2c
  417edb:	pop    ebx
  417edc:	xchg   esi,ecx
  417ede:	pop    ecx
  417edf:	div    DWORD PTR [ecx+0x10]
  417ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee3:	nop
  417ee4:	js     0x417ea5
  417ee6:	and    al,0x7f
  417ee8:	shl    edx,0xdb
  417eeb:	popa   
  417eec:	push   ds
  417eed:	or     DWORD PTR [edi],0x7
  417ef0:	mov    edx,0x46dc6dfa
  417ef5:	js     0x417f2f
  417ef7:	outs   dx,DWORD PTR ds:[esi]
  417ef8:	jle    0x417f25
  417efa:	mov    ecx,0xe5bdf26e
  417eff:	mov    eax,ds:0xfc563055
  417f04:	sbb    al,0xbb
  417f06:	sub    bl,ah
  417f08:	pop    ecx
  417f09:	sbb    bl,bl
  417f0b:	xor    al,dl
  417f0d:	xchg   DWORD PTR [edx-0xf20feba],esi
  417f13:	sbb    esi,DWORD PTR [esi]
  417f15:	fdivr  st,st(1)
  417f17:	dec    edx
  417f18:	push   esp
  417f19:	add    al,0x5d
  417f1b:	xchg   ebp,eax
  417f1c:	std    
  417f1d:	fs mov esi,0x62959cce
  417f23:	dec    ecx
  417f24:	xor    bl,BYTE PTR [edi-0x7b3076df]
  417f2a:	(bad)  
  417f2b:	retf   0x7350
  417f2e:	sub    dl,BYTE PTR [eax]
  417f30:	cld    
  417f31:	xor    al,0x19
  417f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f34:	in     eax,dx
  417f35:	cmp    al,0x2a
  417f37:	cdq    
  417f38:	jl     0x417ebb
  417f3a:	sti    
  417f3b:	inc    ebx
  417f3c:	add    eax,0x45408fed
  417f41:	mov    ds:0xfc87f61c,eax
  417f46:	cld    
  417f47:	out    0xf6,eax
  417f49:	stos   BYTE PTR es:[edi],al
  417f4a:	pop    ss
  417f4b:	mov    bl,0x69
  417f4d:	push   esp
  417f4e:	pop    esp
  417f50:	xchg   DWORD PTR [ecx],ebx
  417f52:	addr16 mov eax,ds:0x1f78
  417f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f57:	jl     0x417f3f
  417f59:	fs jl  0x417f07
  417f5c:	fneni(8087 only) 
  417f5e:	(bad)  
  417f5f:	mov    eax,0xc943d050
  417f64:	push   eax
  417f65:	sbb    al,0x3b
  417f67:	sar    DWORD PTR [ebp+0x60],0x48
  417f6b:	inc    edi
  417f6c:	inc    ecx
  417f6d:	mov    eax,0x481c52e4
  417f72:	int3   
  417f73:	addr16 in al,0x5b
  417f76:	jl     0x417f59
  417f78:	or     ah,BYTE PTR [esi+ebx*8]
  417f7b:	add    DWORD PTR cs:[ecx-0x22852ab8],ecx
  417f82:	push   0x8dac60ac
  417f87:	shl    BYTE PTR [ebx+edi*4-0x75],1
  417f8b:	jp     0x417fdb
  417f8d:	(bad)  
  417f8e:	out    0x6d,al
  417f90:	sahf   
  417f91:	xchg   ecx,eax
  417f92:	mov    eax,ds:0x2880079f
  417f97:	jl     0x417f2a
  417f99:	lods   al,BYTE PTR ds:[esi]
  417f9a:	test   al,0x70
  417f9c:	or     al,0xfa
  417f9e:	inc    ebp
  417f9f:	retf   
  417fa0:	int    0xf8
  417fa2:	retf   0x9d3a
  417fa5:	out    0xa5,eax
  417fa7:	(bad)  
  417fa8:	fld    TBYTE PTR ds:0xcadfe4f3
  417fae:	pop    esp
  417faf:	add    eax,edx
  417fb1:	push   0x5005d628
  417fb6:	gs push fs
  417fb9:	cmp    cl,BYTE PTR ds:0x9c4e015a
  417fbf:	push   ebp
  417fc0:	push   ebp
  417fc1:	mov    edx,ebx
  417fc3:	jbe    0x418044
  417fc5:	mov    eax,0xe37e8f9d
  417fca:	adc    dl,bl
  417fcc:	inc    edx
  417fcd:	outs   dx,BYTE PTR ds:[esi]
  417fce:	fisubr WORD PTR [eax]
  417fd0:	sbb    DWORD PTR [ebx+0x62],0xfd739600
  417fd7:	and    ch,BYTE PTR [esi+0x79]
  417fda:	ins    BYTE PTR es:[edi],dx
  417fdb:	popf   
  417fdc:	loopne 0x417fb6
  417fde:	and    eax,0xdcb3bf5b
  417fe3:	lock test eax,0x92138c02
  417fe9:	pop    esi
  417fea:	and    ch,0x3e
  417fed:	and    bl,dh
  417fef:	loope  0x418000
  417ff1:	mov    ecx,0xf81dbf1c
  417ff6:	je     0x418041
  417ff8:	push   ecx
  417ff9:	mov    ecx,0xa12b398e
  417ffe:	pushf  
  417fff:	dec    eax
  418000:	sub    eax,0xb61fc872
  418005:	addr16 mov eax,0x2b6d6bb7
  41800b:	jae    0x417fe9
  41800d:	lods   eax,DWORD PTR ds:[esi]
  41800e:	sbb    al,0x24
  418010:	inc    DWORD PTR [eax-0x42]
  418013:	ret    
  418014:	cmp    ebx,DWORD PTR ds:[edx+0x36]
  418018:	sub    DWORD PTR [edx+0x5c],ebp
  41801b:	mov    ah,0xff
  41801d:	out    0x25,al
  41801f:	cmc    
  418020:	pop    edi
  418021:	(bad)  
  418022:	jb     0x418031
  418024:	cmp    DWORD PTR [edi],ebx
  418026:	push   0x12
  418028:	push   edx
  418029:	cli    
  41802a:	loope  0x418095
  41802c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41802d:	and    esp,DWORD PTR cs:[edx]
  418030:	scas   al,BYTE PTR es:[edi]
  418031:	push   esp
  418032:	mov    dl,bl
  418034:	das    
  418035:	xchg   ecx,eax
  418036:	retf   
  418037:	pop    esi
  418038:	es out dx,eax
  41803a:	sub    eax,0x1f86d39
  41803f:	in     eax,dx
  418040:	cmp    bl,ch
  418042:	sbb    eax,0x829822b2
  418047:	sub    DWORD PTR ds:0x971865cb,ecx
  41804d:	and    edx,DWORD PTR [edi+0x309ea308]
  418053:	in     al,dx
  418054:	xor    ah,BYTE PTR [edi]
  418056:	ret    
  418057:	inc    esi
  418058:	sub    BYTE PTR [edi-0x69],bl
  41805b:	inc    ecx
  41805c:	ja     0x4180dd
  41805e:	or     DWORD PTR [edi-0x5f],esi
  418061:	fmul   DWORD PTR [ebp-0x11]
  418064:	inc    eax
  418065:	cmc    
  418066:	xchg   esi,eax
  418067:	mov    edx,0x6d9a1418
  41806c:	add    eax,0x703a20a9
  418071:	push   ss
  418072:	aad    0x4b
  418074:	(bad)  
  418077:	lahf   
  418078:	ins    BYTE PTR es:[edi],dx
  418079:	out    dx,eax
  41807a:	cwde   
  41807b:	sbb    ah,dl
  41807d:	sbb    edi,ebp
  41807f:	sbb    dh,BYTE PTR [edx]
  418081:	js     0x418099
  418083:	cmp    esp,DWORD PTR [edx+0x7]
  418086:	scas   eax,DWORD PTR es:[edi]
  418087:	(bad)  [ebp+0x57]
  41808a:	push   edx
  41808b:	fist   DWORD PTR [di+0x261f]
  418090:	rcr    BYTE PTR [edx-0x1d],0x64
  418094:	shl    edx,cl
  418096:	bound  edi,QWORD PTR [ebx+0x66]
  418099:	jb     0x418021
  41809b:	jo     0x41809b
  41809d:	fldcw  WORD PTR ds:0x719e521
  4180a3:	push   esi
  4180a4:	scas   al,BYTE PTR es:[edi]
  4180a5:	jmp    0x5e176d3b
  4180aa:	add    edx,eax
  4180ac:	mov    bl,BYTE PTR [eax+edx*1+0x3e]
  4180b0:	pop    ebp
  4180b1:	push   esp
  4180b2:	out    dx,eax
  4180b3:	dec    ebp
  4180b4:	retf   
  4180b5:	ds into 
  4180b7:	sub    eax,0x18fbc307
  4180bc:	mov    WORD PTR [ecx+0x35fa4a23],gs
  4180c2:	xchg   edi,eax
  4180c3:	rcl    DWORD PTR [ebp+0x3d],1
  4180c6:	(bad)  
  4180c7:	xchg   edi,eax
  4180c8:	lahf   
  4180c9:	cs pop es
  4180cb:	dec    ecx
  4180cc:	pop    ds
  4180cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ce:	jp     0x41805b
  4180d0:	xor    al,0xf9
  4180d2:	lods   eax,DWORD PTR ds:[esi]
  4180d3:	adc    DWORD PTR [esi+edx*2+0x42],edx
  4180d7:	sbb    al,0xe9
  4180d9:	jnp    0x418106
  4180db:	test   al,0x9d
  4180dd:	inc    ebp
  4180de:	daa    
  4180df:	pushf  
  4180e0:	pushf  
  4180e1:	xchg   ebp,eax
  4180e2:	push   ebx
  4180e3:	ret    
  4180e4:	sub    al,0xec
  4180e6:	cmp    DWORD PTR [ebx+0x7a307e39],esi
  4180ec:	jno    0x4180cd
  4180ee:	repz mov edx,0x4eca9836
  4180f4:	inc    ebx
  4180f5:	add    ebp,DWORD PTR [esi-0xc]
  4180f8:	mov    edi,0xcd92846e
  4180fd:	xchg   esp,eax
  4180fe:	mov    edx,0x6b92aec7
  418103:	and    dl,BYTE PTR [ecx+0x2d5055fb]
  418109:	mov    ds:0xe191a26b,eax
  41810e:	pop    ebx
  41810f:	pusha  
  418110:	or     DWORD PTR [ecx-0xc254ed6],esi
  418116:	push   eax
  418117:	mov    al,0xa9
  418119:	adc    DWORD PTR [esi-0x6955ef41],edi
  41811f:	cdq    
  418120:	jnp    0x418149
  418122:	jne    0x418123
  418124:	or     BYTE PTR [edi],0x2a
  418127:	adc    edi,DWORD PTR [esi-0x28]
  41812a:	(bad)
  41812d:	lock jno 0x4180d8
  418130:	lahf   
  418131:	sub    al,0x59
  418133:	sub    eax,0xc8f9f0b8
  418138:	(bad)  
  418139:	scas   al,BYTE PTR es:[edi]
  41813a:	pop    eax
  41813b:	data16 in al,0xf4
  41813e:	(bad)  
  41813f:	push   ss
  418140:	je     0x4181b7
  418142:	pushf  
  418143:	lods   al,BYTE PTR ds:[esi]
  418144:	rcr    BYTE PTR [esi-0x16],0xa9
  418148:	inc    ebx
  418149:	in     al,0xf0
  41814b:	jnp    0x418138
  41814d:	iret   
  41814e:	shl    BYTE PTR [esp+edx*4-0x4b],cl
  418152:	jg     0x4181d0
  418154:	into   
  418155:	adc    cl,ah
  418157:	cmp    dl,BYTE PTR [edx+edi*4+0x63]
  41815b:	arpl   di,dx
  41815d:	adc    bh,0x25
  418160:	xor    al,0xe8
  418162:	fild   DWORD PTR [eax+0x7a]
  418165:	not    DWORD PTR [edi]
  418167:	sbb    ecx,ebx
  418169:	shl    BYTE PTR [ecx-0x403b2d64],1
  41816f:	cmp    esi,DWORD PTR [esi+edx*8-0x4e]
  418173:	and    BYTE PTR [edx+0xb],0x8
  418177:	ret    0xfd68
  41817a:	stos   DWORD PTR es:[edi],eax
  41817b:	popa   
  41817c:	cmc    
  41817d:	inc    edx
  41817e:	shr    ecx,cl
  418180:	jns    0x4181dd
  418182:	xchg   ebx,eax
  418183:	mov    edi,ds
  418185:	cmp    ah,BYTE PTR [edi+0x4e]
  418188:	lods   eax,DWORD PTR ds:[esi]
  418189:	out    0x5f,eax
  41818b:	sti    
  41818c:	and    eax,DWORD PTR [edi-0x13617b33]
  418192:	push   esi
  418193:	or     al,0xea
  418195:	push   esi
  418196:	aam    0xd6
  418198:	test   dl,cl
  41819a:	(bad)  
  41819b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41819c:	fsubr  QWORD PTR [ecx]
  41819e:	dec    edx
  41819f:	cld    
  4181a0:	xchg   esi,eax
  4181a1:	fs jecxz 0x4181c3
  4181a4:	sbb    edx,DWORD PTR [esp+ebx*4]
  4181a7:	pavgb  mm7,QWORD PTR [ebp+0x6aeeec00]
  4181ae:	push   edi
  4181af:	retf   0xf06c
  4181b2:	test   eax,0x2714d298
  4181b7:	cmp    al,0x2c
  4181b9:	push   esp
  4181ba:	mov    esp,0x3b6ebce3
  4181bf:	jl     0x41814a
  4181c1:	push   0x37
  4181c3:	dec    edx
  4181c4:	sub    DWORD PTR [edi+0x404d3c1f],edi
  4181ca:	cmc    
  4181cb:	test   edx,ebp
  4181cd:	inc    ecx
  4181ce:	scas   eax,DWORD PTR es:[edi]
  4181cf:	adc    ch,BYTE PTR [edi]
  4181d1:	xchg   BYTE PTR [edi-0x467886e],dl
  4181d7:	mov    ebp,0x42da49c6
  4181dc:	sub    eax,0x46f7ccd1
  4181e1:	inc    edx
  4181e2:	adc    al,0x2d
  4181e4:	jp     0x41825d
  4181e6:	mov    esp,0x25f46bb
  4181eb:	(bad)  
  4181ec:	retf   
  4181ed:	stc    
  4181ee:	xor    BYTE PTR es:[edx],ch
  4181f1:	add    BYTE PTR [eax+0x43],dh
  4181f4:	cmc    
  4181f5:	addr16 test al,0x21
  4181f8:	test   DWORD PTR [eax+0x21ed012f],esp
  4181fe:	out    dx,al
  4181ff:	stos   BYTE PTR es:[edi],al
  418200:	jg     0x418201
  418202:	lds    esp,FWORD PTR [esi]
  418204:	adc    DWORD PTR [esi+0x1b153821],esi
  41820a:	adc    ebx,DWORD PTR [ebx]
  41820c:	dec    ebp
  41820d:	xchg   ebp,eax
  41820e:	xchg   esp,eax
  41820f:	arpl   WORD PTR [ecx-0x27],sp
  418212:	(bad)  [esi]
  418214:	or     esi,esi
  418216:	aam    0x5
  418218:	and    DWORD PTR gs:[edi],ebp
  41821b:	add    BYTE PTR ds:0xffdf42aa,dh
  418221:	xor    DWORD PTR [ecx],ebx
  418223:	and    ah,bh
  418225:	(bad)  
  418226:	xor    eax,0x29ffe31d
  41822b:	mov    dl,0xa6
  41822d:	xor    esi,DWORD PTR [esp+edx*2]
  418230:	aam    0x8d
  418232:	jb     0x418262
  418234:	pop    ss
  418235:	je     0x418206
  418237:	lods   eax,DWORD PTR ds:[esi]
  418238:	xchg   ecx,eax
  418239:	lods   al,BYTE PTR ds:[esi]
  41823a:	add    BYTE PTR [edi-0x6da744b3],bl
  418240:	inc    edx
  418242:	jb     0x418229
  418244:	xor    BYTE PTR [eax+0x28ac26ba],ah
  41824a:	mov    ecx,0x856d89e0
  41824f:	cmp    bh,ah
  418251:	jg     0x418219
  418253:	adc    ah,dl
  418255:	xlat   BYTE PTR ds:[ebx]
  418256:	mov    dl,0xfc
  418258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418259:	mov    dh,0xa2
  41825b:	dec    esp
  41825c:	sub    eax,DWORD PTR [edi+0x32]
  41825f:	xchg   edi,eax
  418260:	mov    bh,0x62
  418262:	mul    edi
  418264:	adc    DWORD PTR [edx-0x6b],ebx
  418267:	pop    edx
  418268:	(bad)  
  418269:	stc    
  41826a:	inc    eax
  41826b:	in     al,0x5e
  41826d:	cmp    ch,BYTE PTR [ecx+0x49624949]
  418273:	sbb    eax,0x9e3935cc
  418278:	push   ecx
  418279:	sbb    ecx,ebx
  41827b:	pop    es
  41827c:	xchg   esi,eax
  41827d:	pop    ebx
  41827e:	or     BYTE PTR [eax],0xf6
  418281:	out    0x44,eax
  418283:	out    0xb8,al
  418285:	xchg   ebp,eax
  418286:	mov    esi,0x2eb32dae
  41828b:	pop    eax
  41828c:	ds ds arpl WORD PTR ds:[edi],bp
  418291:	ds xchg edx,eax
  418293:	xchg   edi,eax
  418294:	mov    WORD PTR [ebx+0x30],?
  418297:	test   DWORD PTR ds:0x7c7ac6df,eax
  41829d:	iret   
  41829e:	retf   
  41829f:	pushf  
  4182a0:	arpl   si,bx
  4182a2:	gs dec ebp
  4182a4:	mov    ?,WORD PTR [ecx+0x3a]
  4182a7:	loop   0x41822f
  4182a9:	repnz and eax,0x75c00b30
  4182af:	inc    esi
  4182b0:	adc    bl,BYTE PTR [eax]
  4182b2:	lahf   
  4182b3:	xchg   ebx,eax
  4182b4:	je     0x41825a
  4182b6:	in     eax,0x6
  4182b8:	push   es
  4182b9:	push   esi
  4182ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182bb:	stos   BYTE PTR es:[edi],al
  4182bc:	jo     0x418279
  4182be:	cmp    al,0xd5
  4182c0:	inc    ecx
  4182c1:	push   edx
  4182c2:	sbb    BYTE PTR [ebx],dh
  4182c4:	sbb    DWORD PTR [esp+edx*1+0x66021d82],ebx
  4182cb:	fdivrp st(1),st
  4182cd:	xor    bl,BYTE PTR [ecx]
  4182cf:	mov    WORD PTR [eax+0x72e4d48f],?
  4182d5:	(bad)  
  4182d6:	xor    eax,0xc3ecf615
  4182db:	mov    al,0xeb
  4182dd:	iret   
  4182de:	dec    esi
  4182df:	push   eax
  4182e0:	bound  ebp,QWORD PTR [ebx+edx*2-0xf]
  4182e4:	ds mov eax,0x63369b3d
  4182ea:	xchg   BYTE PTR [ebx+0x1cd6f565],bl
  4182f0:	mov    bh,0xc8
  4182f2:	out    dx,eax
  4182f3:	bound  esi,QWORD PTR [esi+0x382dd37]
  4182f9:	cmp    ch,BYTE PTR [ebx]
  4182fb:	jmp    0x4182bc
  4182fd:	and    al,0xcd
  4182ff:	mov    cl,0x37
  418301:	lds    ebp,FWORD PTR [eax-0x48bd8db2]
  418307:	fwait
  418308:	sbb    eax,0x527899bd
  41830d:	mov    al,ds:0xf1820061
  418312:	daa    
  418313:	sbb    bl,dh
  418315:	add    BYTE PTR [ecx-0x2c7e68d5],cl
  41831b:	ret    0x8ec0
  41831e:	push   ebx
  41831f:	xchg   ebp,eax
  418320:	sub    BYTE PTR [eax],dh
  418322:	imul   ebp,edx,0xffffffd0
  418325:	xchg   esp,eax
  418326:	js     0x418384
  418328:	inc    esp
  418329:	dec    ebp
  41832a:	sahf   
  41832b:	pusha  
  41832c:	sbb    al,0xed
  41832e:	sar    DWORD PTR [eax],cl
  418330:	pop    esp
  418331:	dec    ebp
  418332:	and    eax,0xf666b2e9
  418337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418338:	adc    DWORD PTR [edi],edx
  41833a:	inc    esp
  41833b:	test   al,0x35
  41833d:	in     al,dx
  41833e:	jecxz  0x41837d
  418340:	mov    edi,esi
  418342:	dec    edi
  418343:	push   ds
  418344:	test   BYTE PTR [ebx-0xe08fef4],ah
  41834a:	cs xor al,0xe7
  41834d:	add    DWORD PTR [esi-0xf],ebp
  418350:	popf   
  418351:	or     ebx,eax
  418353:	imul   edi,DWORD PTR [esi],0xffffff8a
  418356:	push   ss
  418357:	and    eax,esi
  418359:	lahf   
  41835a:	repnz sti 
  41835c:	adc    BYTE PTR ds:0x41f6a156,ch
  418362:	sub    eax,0xaac75876
  418367:	lea    ebx,[ebp+0x47]
  41836a:	xor    dl,bh
  41836c:	hlt    
  41836d:	mov    esi,0x47808857
  418372:	xor    eax,0x39d3bc59
  418377:	es mov ch,0xc
  41837a:	cmp    eax,0x53fd30c7
  41837f:	xchg   ecx,eax
  418380:	loopne 0x4183fa
  418382:	push   edi
  418383:	inc    edx
  418384:	sub    ebx,ecx
  418386:	sub    al,0xec
  418388:	mov    dl,0xd9
  41838a:	push   esp
  41838b:	mov    edx,0xbba1782e
  418390:	sub    DWORD PTR ds:[edx+0x26],eax
  418394:	xchg   bx,ax
  418396:	mov    ds:0xc94f428b,al
  41839b:	pop    ecx
  41839c:	push   ebp
  41839d:	fwait
  41839e:	inc    esp
  41839f:	outs   dx,DWORD PTR ds:[esi]
  4183a0:	sub    BYTE PTR [eax+0xf849223],0x76
  4183a7:	jb     0x41838e
  4183a9:	scas   al,BYTE PTR es:[edi]
  4183aa:	mov    bl,0x28
  4183ac:	imul   esi,DWORD PTR [ecx-0x7a],0x7e
  4183b0:	adc    al,BYTE PTR [eax-0x2b]
  4183b3:	xor    esi,edx
  4183b5:	mov    bh,0x7
  4183b7:	scas   eax,DWORD PTR es:[edi]
  4183b8:	outs   dx,BYTE PTR ds:[esi]
  4183b9:	inc    ecx
  4183ba:	das    
  4183bb:	xchg   esi,eax
  4183bc:	dec    ebp
  4183bd:	add    BYTE PTR [eax],al
  4183bf:	add    BYTE PTR [eax],al
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	or     DWORD PTR [edx+0x48f861c],0x1
  4183d4:	add    DWORD PTR [eax],eax
  4183d6:	repz add al,0x0
  4183d9:	add    BYTE PTR [eax-0x3eae957d],dl
  4183df:	js     0x418450
  4183e1:	and    BYTE PTR [ecx+0x611ad714],bl
  4183e7:	xor    esp,DWORD PTR [ebx]
  4183e9:	das    
  4183ea:	popa   
  4183eb:	sub    al,0xfe
  4183ed:	rcr    BYTE PTR [ecx],cl
  4183ef:	jmp    0x7c830de3
  4183f4:	inc    esp
  4183f5:	(bad)  
  4183f6:	jbe    0x4183cf
  4183f8:	mov    ebp,0x68a49425
  4183fd:	inc    eax
  4183fe:	jb     0x418383
  418400:	dec    ecx
  418401:	in     eax,0x5e
  418403:	push   0xffffffa0
  418405:	rcl    BYTE PTR [edi+0x3d656adb],0xdb
  41840c:	xchg   esi,eax
  41840d:	push   ebx
  41840e:	cmp    al,0x38
  418410:	or     eax,0x10392dfb
  418415:	in     eax,dx
  418416:	in     eax,0xf8
  418418:	xor    BYTE PTR [eax],ch
  41841a:	cmp    eax,0x55049e4b
  41841f:	cmp    eax,0x80589be3
  418424:	(bad)  
  418425:	and    esi,ecx
  418427:	fcom   QWORD PTR [eax-0x40]
  41842a:	jb     0x418413
  41842c:	imul   esp,eax,0xb88c2dd6
  418432:	or     edx,eax
  418434:	push   es
  418435:	out    dx,al
  418436:	cld    
  418437:	mov    ah,BYTE PTR [eax+ecx*4-0x3e]
  41843b:	pop    esi
  41843c:	ins    DWORD PTR es:[edi],dx
  41843d:	lods   al,BYTE PTR ds:[esi]
  41843e:	xchg   BYTE PTR [bx+si-0x19],ah
  418442:	adc    edx,DWORD PTR [esi*4-0x77ec0773]
  418449:	hlt    
  41844a:	in     eax,0x4c
  41844c:	jle    0x41844b
  41844e:	mov    ds:0x5c54b318,eax
  418453:	cmp    ebp,DWORD PTR [eax]
  418455:	pop    esp
  418456:	icebp  
  418457:	cli    
  418458:	imul   ebp,DWORD PTR ds:0xc55cd553,0x5c
  41845f:	push   ss
  418460:	bound  edi,QWORD PTR [ebp-0x4c]
  418463:	inc    ebp
  418464:	mov    esp,0x77ae1242
  418469:	pop    eax
  41846a:	jb     0x418481
  41846c:	arpl   WORD PTR [esi],bx
  41846e:	mov    ch,ch
  418470:	cld    
  418471:	jae    0x41843b
  418473:	mov    dl,0x16
  418475:	repz xor DWORD PTR [ecx+ecx*4-0x3f],0x26421a75
  41847e:	leave  
  41847f:	xlat   BYTE PTR ds:[ebx]
  418480:	xor    DWORD PTR [eax+0x7b33b37],ebp
  418486:	into   
  418487:	add    BYTE PTR [edi+0x6a],al
  41848a:	inc    ebx
  41848b:	mov    edi,0x68555a80
  418490:	xor    BYTE PTR [edx+0x7b397d4e],dh
  418496:	inc    edi
  418497:	fwait
  418498:	aas    
  418499:	sbb    eax,0xfe237ca6
  41849e:	or     DWORD PTR [eax+0x7a],ebp
  4184a1:	scas   al,BYTE PTR es:[edi]
  4184a2:	fnstsw WORD PTR [ebp-0x758a850c]
  4184a8:	jp     0x41851a
  4184aa:	cmp    BYTE PTR [esi],dh
  4184ac:	loop   0x41843f
  4184ae:	das    
  4184af:	add    edi,esp
  4184b1:	adc    ebp,ecx
  4184b3:	aad    0x7e
  4184b5:	jmp    0x3113bca2
  4184ba:	add    al,0xb5
  4184bc:	sub    bl,BYTE PTR [ebx]
  4184be:	pusha  
  4184bf:	mov    cl,0x81
  4184c1:	stos   BYTE PTR es:[edi],al
  4184c2:	inc    esp
  4184c3:	scas   al,BYTE PTR es:[edi]
  4184c4:	nop
  4184c5:	ds or  al,0x1a
  4184c8:	dec    ebx
  4184c9:	data16 clc 
  4184cb:	push   ds
  4184cc:	int3   
  4184cd:	mov    al,ds:0x9dfc309b
  4184d2:	xor    ebp,edx
  4184d4:	jmp    0x7a7f5847
  4184d9:	push   es
  4184da:	rol    BYTE PTR [ecx+eax*4],cl
  4184dd:	aaa    
  4184de:	dec    edx
  4184df:	mov    al,BYTE PTR [ebx-0x28]
  4184e2:	xchg   edx,eax
  4184e3:	cli    
  4184e4:	jle    0x418499
  4184e6:	es jmp 0xcfd8:0xe1290b41
  4184ee:	cld    
  4184ef:	xor    cl,BYTE PTR [edx]
  4184f1:	lock xchg ebp,eax
  4184f3:	in     eax,dx
  4184f4:	mov    ah,0xc3
  4184f6:	je     0x418492
  4184f8:	ins    BYTE PTR es:[edi],dx
  4184f9:	hlt    
  4184fa:	loop   0x418543
  4184fc:	cld    
  4184fd:	test   eax,0xc673b475
  418502:	xor    DWORD PTR [ecx],0x2fc0deee
  418508:	xchg   BYTE PTR [edi-0xa5a703],ah
  41850e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41850f:	jmp    DWORD PTR [ecx]
  418511:	cwde   
  418512:	hlt    
  418513:	fadd   QWORD PTR [esi+0x2f]
  418516:	push   ss
  418517:	popa   
  418518:	xchg   esp,eax
  418519:	cdq    
  41851a:	cmp    al,BYTE PTR [edx+eax*8+0x7a]
  41851e:	in     al,dx
  41851f:	jle    0x418592
  418521:	jg     0x418541
  418523:	fs mov ebp,0x8dd65b66
  418529:	into   
  41852a:	imul   edx,DWORD PTR [ecx],0xffffffa9
  41852d:	mov    edi,0xe526f80c
  418532:	or     BYTE PTR [ebx-0x43],dl
  418535:	adc    ch,BYTE PTR [ebx]
  418537:	and    eax,0xf5320f88
  41853c:	add    eax,0xfcb9c93
  418541:	sub    al,0xbd
  418543:	xchg   edx,eax
  418544:	sub    eax,0xc0b3047c
  418549:	std    
  41854a:	sbb    eax,0x5e87a2f1
  41854f:	sub    ebp,DWORD PTR [eax]
  418551:	dec    edx
  418552:	or     dh,BYTE PTR [edi+0x487b92f9]
  418558:	jo     0x41851b
  41855a:	add    eax,0x16867df0
  41855f:	mov    ebp,0x3ab98c22
  418564:	xlat   BYTE PTR ds:[ebx]
  418565:	ror    DWORD PTR ds:0xef6b8134,cl
  41856b:	retf   0x14fa
  41856e:	scas   al,BYTE PTR es:[edi]
  41856f:	push   ds
  418570:	int    0x45
  418572:	rcl    BYTE PTR [edi-0x162d0a59],1
  418578:	xor    esi,DWORD PTR [ebx+0x70]
  41857b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41857c:	dec    ebp
  41857d:	and    ebx,esi
  41857f:	and    DWORD PTR [esi-0x33c1ba1],ecx
  418585:	xor    eax,DWORD PTR [eax-0x1a]
  418588:	fucom  st(4)
  41858a:	pop    esi
  41858b:	int3   
  41858c:	xchg   ebp,eax
  41858d:	adc    ecx,eax
  41858f:	mov    edx,eax
  418591:	push   esi
  418592:	daa    
  418593:	scas   eax,DWORD PTR es:[edi]
  418594:	adc    DWORD PTR [esi-0x7e],ebp
  418597:	lods   al,BYTE PTR ds:[esi]
  418598:	lds    esp,FWORD PTR [eax]
  41859a:	pop    ecx
  41859b:	es add al,0x3f
  41859e:	jnp    0x41861c
  4185a0:	cmp    dl,BYTE PTR [edi-0xd]
  4185a3:	mov    cl,0x77
  4185a5:	idiv   dl
  4185a7:	(bad)  
  4185a8:	mov    ch,0xe3
  4185aa:	dec    edi
  4185ab:	mov    ds:0x2204c1cd,eax
  4185b0:	arpl   WORD PTR [ecx],sp
  4185b2:	mov    al,0xb1
  4185b4:	scas   eax,DWORD PTR es:[edi]
  4185b5:	mov    eax,ds:0x124d15bf
  4185ba:	in     eax,0xe8
  4185bc:	mov    cl,BYTE PTR [edi]
  4185be:	adc    BYTE PTR [ecx],dh
  4185c0:	cmp    al,0x92
  4185c2:	mov    edx,0x527c8e7e
  4185c7:	jbe    0x4185d2
  4185c9:	shr    DWORD PTR [edx+0x42493af0],1
  4185cf:	pop    ebp
  4185d0:	or     DWORD PTR [eax+0x3ae07537],0xbbe29118
  4185da:	out    0x49,eax
  4185dc:	pop    ebp
  4185dd:	mov    ss,WORD PTR [edi-0x42]
  4185e0:	push   edx
  4185e1:	jmp    0x785d:0xfeabe573
  4185e8:	out    dx,al
  4185e9:	push   edx
  4185ea:	ret    
  4185eb:	and    al,BYTE PTR [ebp+0x73]
  4185ee:	sub    DWORD PTR [eax-0x67],esi
  4185f1:	lahf   
  4185f2:	les    edi,FWORD PTR fs:[edi+0x3a343364]
  4185f9:	sub    bl,BYTE PTR [ecx+0x33a7b117]
  4185ff:	push   es
  418600:	gs push eax
  418602:	sub    edx,DWORD PTR [ecx+ebx*1]
  418605:	pop    ebp
  418606:	das    
  418607:	push   edx
  418608:	adc    dl,ch
  41860a:	mov    ds:0x1f4ca0d6,al
  41860f:	loopne 0x4185f8
  418611:	ret    
  418612:	jno    0x41860b
  418614:	sub    cl,BYTE PTR [ebx+esi*2+0xdf74761]
  41861b:	test   BYTE PTR [esi],dh
  41861d:	mov    edi,0x7145260a
  418622:	mov    WORD PTR [ebp+0x55582046],cs
  418628:	xor    al,0x99
  41862a:	sbb    eax,0x2d1cbaf7
  41862f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418630:	(bad)  
  418631:	mov    BYTE PTR [ebp+0x16],ch
  418634:	loop   0x418678
  418636:	sub    eax,DWORD PTR [esi]
  418638:	jns    0x418699
  41863a:	push   0xf3d333ea
  41863f:	push   ecx
  418640:	fadd   DWORD PTR [ebp-0x14]
  418643:	aas    
  418644:	jmp    0x4185e6
  418646:	iret   
  418647:	cwde   
  418648:	mov    ds:0xd399ed9d,al
  41864d:	mov    esp,DWORD PTR [esi]
  41864f:	lea    esi,[eax]
  418651:	xchg   esi,eax
  418652:	lds    esi,FWORD PTR [ebx+ebx*2-0x28eaafb5]
  418659:	dec    edx
  41865a:	push   0xffffffee
  41865c:	pop    ecx
  41865d:	jno    0x418652
  41865f:	sbb    BYTE PTR [eax+0x38],al
  418662:	rcl    DWORD PTR [ecx-0x260c0a5e],0xa
  418669:	lock pop ebx
  41866b:	jle    0x418608
  41866d:	nop
  41866e:	and    bh,BYTE PTR [ebx+ebx*4+0x4913a2ee]
  418675:	xor    ebx,DWORD PTR [esi]
  418677:	fld    DWORD PTR [ecx]
  418679:	ds pop esi
  41867b:	cld    
  41867c:	jge    0x418629
  41867e:	and    eax,0x570d1fb2
  418683:	jno    0x4186d8
  418685:	popa   
  418686:	or     esi,DWORD PTR [esi+0x67]
  418689:	cmp    eax,0x5edcb007
  41868e:	(bad)  
  41868f:	lock ja 0x418643
  418692:	cmp    eax,esp
  418694:	push   ecx
  418695:	adc    eax,0xbce011f7
  41869a:	das    
  41869b:	mov    edi,0x4f9626ee
  4186a0:	sub    DWORD PTR [edx+0x12],esi
  4186a3:	mov    al,ds:0x3b7ebafe
  4186a8:	imul   edx,esp,0xfffffff5
  4186ab:	sbb    ecx,ebp
  4186ad:	adc    esp,DWORD PTR [eax+edi*2-0x55e54ad8]
  4186b4:	sbb    eax,0xd38b0ca9
  4186b9:	lods   al,BYTE PTR ds:[esi]
  4186ba:	fist   WORD PTR [esi+eax*2-0xc]
  4186be:	mov    al,0x85
  4186c0:	(bad)  
  4186c1:	push   esi
  4186c2:	aad    0x34
  4186c4:	push   cs
  4186c5:	sbb    BYTE PTR [esi+ebp*1-0x6b],dh
  4186c9:	sub    DWORD PTR [eax],esp
  4186cb:	ins    BYTE PTR es:[edi],dx
  4186cc:	dec    ebp
  4186cd:	mov    WORD PTR [edi+0x1b],ss
  4186d0:	adc    ecx,DWORD PTR [esi-0x17]
  4186d3:	loop   0x41865f
  4186d5:	or     BYTE PTR [ecx+ebx*2],bh
  4186d8:	mov    dh,0xc2
  4186da:	or     bl,BYTE PTR [esi+edx*8-0x2a4df420]
  4186e1:	add    edx,edi
  4186e3:	rcr    esp,0x44
  4186e6:	test   DWORD PTR [esi-0x689ad87f],edx
  4186ec:	sbb    ebp,esi
  4186ee:	into   
  4186ef:	lds    ecx,FWORD PTR [ecx]
  4186f1:	or     eax,0x16e404e5
  4186f6:	repz or esi,DWORD PTR [eax]
  4186f9:	inc    BYTE PTR [ecx-0x6845c74a]
  4186ff:	test   al,0xf4
  418701:	add    cl,BYTE PTR [ebx+0x439641fd]
  418707:	gs push esp
  418709:	and    bl,BYTE PTR [ecx]
  41870b:	add    BYTE PTR [ebx+ecx*1],0xfc
  41870f:	inc    eax
  418710:	sbb    DWORD PTR [ecx+0x4a],edi
  418713:	jno    0x418753
  418715:	mov    dh,0xd3
  418717:	dec    ebx
  418718:	push   ss
  418719:	sbb    ebx,DWORD PTR [ebx+0x59811ba3]
  41871f:	idiv   BYTE PTR [ebx+0x8148352]
  418725:	push   ss
  418726:	xchg   esp,eax
  418727:	mov    ds:0x2afdb60a,al
  41872c:	sub    BYTE PTR [esi+ebp*1+0x471dcb6a],ch
  418733:	dec    esi
  418734:	repz push ds
  418736:	cmp    al,0x46
  418738:	mov    eax,0xc62c0d9d
  41873d:	data16 loope 0x418795
  418740:	cmp    DWORD PTR [ebx],0xffffffbc
  418743:	pop    ebx
  418744:	dec    ebp
  418745:	aam    0x8a
  418747:	(bad)  
  418749:	repz dec eax
  41874b:	sti    
  41874c:	stos   BYTE PTR es:[edi],al
  41874d:	sbb    cl,BYTE PTR [esi+0x2ed09450]
  418753:	fadd   st(0),st
  418755:	mov    ch,0xba
  418757:	lds    ebx,FWORD PTR [ebx+0x2b]
  41875a:	sti    
  41875b:	out    0x9a,eax
  41875d:	inc    eax
  41875e:	push   0x55745870
  418763:	test   eax,0x2da0c04c
  418768:	or     DWORD PTR [ecx-0x2a233f46],esp
  41876e:	sbb    BYTE PTR [ebp-0x6e],al
  418771:	neg    DWORD PTR [ebx+0x6dfc558f]
  418777:	jmp    0x41871f
  418779:	in     al,dx
  41877a:	cwde   
  41877b:	xchg   ebx,eax
  41877c:	cmovns eax,esi
  41877f:	dec    ebx
  418780:	push   edi
  418781:	cmc    
  418782:	ins    DWORD PTR es:[edi],dx
  418783:	lods   eax,DWORD PTR ds:[esi]
  418784:	call   0x82626f5f
  418789:	pusha  
  41878a:	jmp    0x1942:0x717c3fb0
  418791:	and    al,0xb9
  418793:	sbb    BYTE PTR [eax],dh
  418795:	lods   eax,DWORD PTR ds:[esi]
  418796:	out    0xbf,eax
  418798:	dec    esp
  418799:	mov    edx,0x83436018
  41879e:	clc    
  41879f:	stos   BYTE PTR es:[edi],al
  4187a0:	mov    eax,0x1c937591
  4187a5:	mov    al,ds:0x4ec4d0da
  4187aa:	loopne 0x418778
  4187ac:	lds    ebp,FWORD PTR [edx+0xe936dad]
  4187b2:	and    edi,edx
  4187b4:	inc    ecx
  4187b5:	lods   eax,DWORD PTR ds:[esi]
  4187b6:	cdq    
  4187b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187b8:	add    dh,BYTE PTR [ebp+ebp*2+0x5ea6a45b]
  4187bf:	push   ebx
  4187c0:	idiv   BYTE PTR [ecx+0x3208aa12]
  4187c6:	add    ah,ch
  4187c8:	fdiv   DWORD PTR [ebp-0x2e]
  4187cb:	sub    BYTE PTR [ebp+edi*4-0x19],ch
  4187cf:	and    BYTE PTR [edx],cl
  4187d1:	add    BYTE PTR [edi+0x27],0x39
  4187d5:	sub    edx,DWORD PTR [ecx-0x43c675f5]
  4187db:	and    DWORD PTR fs:[ecx-0x1e],0x19
  4187e0:	fdivp  st(4),st
  4187e2:	sub    BYTE PTR [edi+0x3f9538b8],dh
  4187e8:	pushf  
  4187e9:	mov    ecx,0x4120b00d
  4187ee:	in     eax,0xdf
  4187f0:	clc    
  4187f1:	xchg   esi,eax
  4187f2:	dec    edi
  4187f3:	pop    ebp
  4187f4:	mov    WORD PTR ds:0x4b466370,ds
  4187fa:	pop    ebp
  4187fb:	mov    al,0xd4
  4187fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187fe:	sbb    bh,BYTE PTR [ebx+0x1b]
  418801:	jno    0x418788
  418803:	outs   dx,DWORD PTR ds:[esi]
  418804:	jg     0x4187d2
  418806:	rcl    DWORD PTR [ebx+0x4b],1
  418809:	push   ecx
  41880a:	pop    esi
  41880b:	fwait
  41880c:	in     al,0xf8
  41880e:	add    bh,cl
  418810:	cld    
  418811:	or     al,0x21
  418813:	or     BYTE PTR fs:[ebp+0x298b8aba],cl
  41881a:	sahf   
  41881b:	fdivr  DWORD PTR [edx+ebp*1]
  41881e:	cmc    
  41881f:	rcl    DWORD PTR [ecx],cl
  418821:	jle    0x41888b
  418823:	jns    0x41888f
  418825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418826:	mov    esi,0x23fec58e
  41882b:	in     eax,dx
  41882c:	sbb    al,0x9e
  41882e:	lea    ebx,[ecx+eax*1-0x9ec4406]
  418835:	mov    dh,0x52
  418837:	test   eax,0x4bab513
  41883c:	adc    al,0x97
  41883e:	out    0xbc,al
  418840:	dec    esi
  418841:	imul   edx,DWORD PTR [ebx],0xffffffc9
  418844:	fsubr  DWORD PTR [ebp-0x7d]
  418847:	jecxz  0x41882a
  418849:	jnp    0x418838
  41884b:	fimul  WORD PTR [ecx]
  41884d:	rol    DWORD PTR [esi-0x66],cl
  418850:	mov    al,0x42
  418852:	dec    ecx
  418853:	xchg   DWORD PTR [edx],edi
  418855:	jp     0x418800
  418857:	or     bh,BYTE PTR [ebx]
  418859:	sbb    al,0x81
  41885b:	fxch   st(1)
  41885d:	pushf  
  41885e:	je     0x4187ea
  418860:	inc    esi
  418861:	jle    0x41883b
  418863:	dec    eax
  418864:	(bad)  
  418865:	adc    edx,ebx
  418867:	pusha  
  418868:	stos   DWORD PTR es:[edi],eax
  418869:	cli    
  41886a:	push   ds
  41886b:	and    dh,BYTE PTR [esi-0x46d77941]
  418871:	sub    eax,0x499e7160
  418876:	out    0xda,al
  418878:	xor    BYTE PTR [ecx-0x119fd7a4],bh
  41887e:	push   0x50103733
  418883:	addr16 jnp 0x4188de
  418886:	mov    ebx,0x744e923c
  41888b:	std    
  41888c:	pushf  
  41888d:	icebp  
  41888e:	pop    esi
  41888f:	push   edx
  418890:	in     al,dx
  418891:	pop    ebp
  418892:	inc    ebp
  418893:	push   cs
  418894:	je     0x41882a
  418896:	test   esp,ebx
  418898:	cmp    BYTE PTR [ebx+ecx*1+0x1c],0x71
  41889d:	sub    eax,0xfafc309f
  4188a2:	pop    esi
  4188a3:	dec    ecx
  4188a4:	outs   dx,BYTE PTR ds:[esi]
  4188a5:	pop    es
  4188a6:	test   al,0x80
  4188a8:	js     0x41886b
  4188aa:	lock jl 0x418898
  4188ad:	pop    esi
  4188ae:	(bad)  
  4188af:	jp     0x4188ed
  4188b1:	inc    edx
  4188b2:	aad    0x56
  4188b4:	in     al,dx
  4188b5:	rol    ch,cl
  4188b7:	and    dl,BYTE PTR [ebx+edx*2-0x4b]
  4188bb:	jne    0x4188ab
  4188bd:	not    DWORD PTR [ecx+0x40164a98]
  4188c3:	push   edi
  4188c4:	int    0xb5
  4188c6:	mov    ebp,0x17e4d4e
  4188cb:	mov    ebp,0x84
  4188d0:	add    BYTE PTR [eax],al
  4188d2:	sahf   
  4188d3:	ins    DWORD PTR es:[edi],dx
  4188d4:	not    esi
  4188d6:	neg    esi
  4188d8:	mov    edi,0x9e0bd66d
  4188dd:	int    0x1b
  4188df:	shl    edi,cl
  4188e1:	mov    edi,esi
  4188e3:	add    eax,0x4f30001
  4188e8:	add    BYTE PTR [eax],al
  4188ea:	loope  0x4188fd
  4188ec:	xor    ah,BYTE PTR [ebx+eiz*2-0x45]
  4188f0:	sub    al,0x4b
  4188f2:	sbb    al,0x66
  4188f4:	out    dx,al
  4188f5:	nop
  4188f6:	in     al,0x6d
  4188f8:	jo     0x418881
  4188fa:	daa    
  4188fb:	pusha  
  4188fc:	imul   ebx,DWORD PTR [edx+0x36682f32],0x10
  418903:	xor    esi,DWORD PTR [eax-0x10e804ae]
  418909:	nop
  41890a:	jbe    0x4188b8
  41890c:	in     eax,dx
  41890d:	retf   
  41890e:	jge    0x4188ea
  418910:	dec    ebx
  418911:	les    ebx,FWORD PTR [esi]
  418913:	lods   eax,DWORD PTR cs:[esi]
  418915:	aam    0x34
  418917:	fwait
  418918:	sahf   
  418919:	ja     0x418990
  41891b:	add    eax,0x13ef18b8
  418920:	ret    0x2c3e
  418923:	mov    WORD PTR [ecx-0x7b],fs
  418926:	nop
  418927:	sub    DWORD PTR [ebx+0x2f5f17c5],edi
  41892d:	test   BYTE PTR [ecx+0x1c],al
  418930:	add    ah,BYTE PTR [edx]
  418932:	or     DWORD PTR [esi+0x7427e5ad],edx
  418938:	loop   0x418988
  41893a:	fwait
  41893b:	mov    WORD PTR [ebx+eax*4],cs
  41893e:	cmp    BYTE PTR gs:[esp+esi*1],ah
  418942:	jge    0x4189a5
  418944:	push   eax
  418945:	sbb    bl,0x61
  418948:	imul   esi,DWORD PTR [ebx+eiz*2+0x79856a26],0xfffffffc
  418950:	test   BYTE PTR [eax-0x6b],ah
  418953:	xor    al,0xf1
  418955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418956:	outs   dx,DWORD PTR ds:[esi]
  418957:	dec    esp
  418958:	aas    
  418959:	inc    ecx
  41895a:	hlt    
  41895b:	push   ss
  41895c:	sbb    DWORD PTR [eax],0x55
  41895f:	inc    esi
  418960:	test   eax,0x3024e94a
  418965:	in     al,0x55
  418967:	jns    0x4189de
  418969:	fidiv  WORD PTR [ebp-0x23]
  41896c:	inc    ecx
  41896d:	add    eax,0xa88c843f
  418972:	jnp    0x4189a8
  418974:	dec    ebx
  418975:	mov    ebx,0x7b43b977
  41897a:	and    BYTE PTR [eax+0x56],0x17
  41897e:	inc    edx
  41897f:	ins    DWORD PTR es:[edi],dx
  418980:	adc    ah,al
  418982:	pop    eax
  418983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418984:	sub    al,0x4f
  418986:	push   esp
  418987:	xchg   esp,eax
  418988:	sbb    eax,0x27aa90e3
  41898d:	xchg   ecx,eax
  41898e:	add    DWORD PTR [edx+0x0],esp
  418991:	xor    BYTE PTR [ebx],0x1
  418994:	cld    
  418995:	dec    eax
  418996:	jmp    0x1413:0xca2a5b78
  41899d:	popf   
  41899e:	mov    esp,esi
  4189a0:	pop    es
  4189a1:	push   edi
  4189a2:	xchg   ebx,eax
  4189a3:	enter  0xbdad,0xee
  4189a7:	mov    eax,0x9da93ada
  4189ac:	cld    
  4189ad:	test   eax,0x8e2ad528
  4189b2:	cmc    
  4189b3:	mov    edx,0x1dd422ba
  4189b8:	cwde   
  4189b9:	mov    ds:0x736d0e94,eax
  4189be:	xchg   esp,eax
  4189bf:	ret    0x2f11
  4189c2:	adc    ebx,DWORD PTR [ecx-0x3]
  4189c5:	pop    ebp
  4189c6:	dec    ebx
  4189c7:	mov    ch,0xae
  4189c9:	(bad)  
  4189ca:	bound  ecx,QWORD PTR [edx+0x72]
  4189cd:	push   esi
  4189ce:	xor    ecx,DWORD PTR [ebp+eiz*1+0x68]
  4189d2:	dec    eax
  4189d3:	das    
  4189d4:	adc    cl,al
  4189d6:	(bad)  
  4189d8:	aad    0x88
  4189da:	mov    DWORD PTR [edx-0x9],edx
  4189dd:	xchg   ebx,eax
  4189de:	std    
  4189df:	inc    esp
  4189e0:	shr    DWORD PTR [ecx],0x3e
  4189e3:	aas    
  4189e4:	xchg   edi,eax
  4189e5:	mov    al,0xf5
  4189e7:	adc    BYTE PTR [edx-0x6ef487d],0x67
  4189ee:	ror    BYTE PTR [edi+0x37c45a21],cl
  4189f4:	xor    DWORD PTR [esi+edx*8],ecx
  4189f7:	out    0xb2,eax
  4189f9:	sub    eax,0xf046cfca
  4189fe:	inc    ebp
  4189ff:	jb     0x418984
  418a01:	lods   al,BYTE PTR ds:[esi]
  418a02:	xor    ch,bh
  418a04:	rcr    DWORD PTR [ecx],1
  418a06:	mov    DWORD PTR [edx-0x4a28f347],0x325280d2
  418a10:	push   0x6db93407
  418a15:	pop    ebp
  418a16:	cmp    dl,BYTE PTR [eax]
  418a18:	loop   0x418a7b
  418a1a:	jmp    0x4189b3
  418a1c:	ins    BYTE PTR es:[edi],dx
  418a1d:	sub    BYTE PTR ds:0x618685db,bl
  418a23:	push   ds
  418a24:	jns    0x4189e6
  418a26:	cmp    eax,0xbd6811b
  418a2b:	jp     0x418a1f
  418a2d:	out    dx,al
  418a2e:	mov    WORD PTR [ebx],?
  418a30:	jmp    0x4189dc
  418a32:	xor    bh,bl
  418a34:	sub    al,0x59
  418a36:	mov    dl,0x67
  418a38:	mov    edx,0xa5e4c480
  418a3d:	jge    0x418a11
  418a3f:	push   0xa5f0a9e4
  418a44:	mov    ecx,ss
  418a46:	out    dx,eax
  418a47:	mov    al,ds:0xcd5cf276
  418a4c:	xor    eax,0x11e1e1d9
  418a51:	(bad)  
  418a53:	pop    edi
  418a54:	push   eax
  418a55:	int3   
  418a56:	cmp    eax,0x4672ffc1
  418a5b:	adc    edi,esp
  418a5d:	or     al,bl
  418a5f:	pop    es
  418a60:	(bad)  
  418a61:	popf   
  418a62:	call   0x46c4:0x7c3abe4c
  418a69:	out    0x36,al
  418a6b:	pop    ecx
  418a6c:	add    al,0x6a
  418a6e:	or     bl,BYTE PTR [esi]
  418a70:	fwait
  418a71:	add    eax,0x902298d
  418a76:	lock sub DWORD PTR [edi+0x365324f2],edx
  418a7d:	jge    0x418a95
  418a7f:	lds    ebx,FWORD PTR [esi+0x2aa867ac]
  418a85:	aas    
  418a86:	jl     0x418a2c
  418a88:	outs   dx,BYTE PTR ds:[esi]
  418a89:	dec    ecx
  418a8a:	loop   0x418ad3
  418a8c:	cmp    eax,0xc4c426d7
  418a91:	dec    ebx
  418a92:	in     al,dx
  418a93:	pop    ds
  418a94:	mov    ?,WORD PTR [ecx]
  418a96:	es popa 
  418a98:	movntq QWORD PTR [ecx],mm6
  418a9b:	call   0x9ae6:0x11b14996
  418aa2:	dec    ebp
  418aa3:	cmovle ebx,DWORD PTR [edx-0x4c1c621d]
  418aaa:	retf   0x4638
  418aad:	xor    eax,0xb879a886
  418ab2:	ror    BYTE PTR [eax-0x5d3d4d90],cl
  418ab8:	pop    eax
  418ab9:	xchg   edi,eax
  418aba:	push   0x4ad6239f
  418abf:	mov    ebp,0x68c7fb44
  418ac4:	mov    ebx,0x8d0d947b
  418ac9:	push   es
  418aca:	mov    ds:0xc59ebaf9,eax
  418acf:	mov    bl,0xcc
  418ad1:	pop    eax
  418ad2:	popf   
  418ad3:	xchg   edi,eax
  418ad4:	sub    DWORD PTR [eax-0x61],edx
  418ad7:	in     eax,dx
  418ad8:	mov    cl,0xe5
  418ada:	adc    edi,DWORD PTR [ecx]
  418adc:	sbb    ebp,DWORD PTR [edx+0x57]
  418adf:	inc    esi
  418ae0:	dec    edi
  418ae1:	clc    
  418ae2:	data16 jb 0x418b4a
  418ae5:	or     ebx,edx
  418ae7:	shr    esp,cl
  418ae9:	xchg   bl,ch
  418aeb:	push   0x79848f39
  418af0:	out    0x85,al
  418af2:	sbb    ebx,DWORD PTR [edi+0x49]
  418af5:	dec    edi
  418af6:	or     eax,0x2d5382a9
  418afb:	add    dl,al
  418afd:	push   0xa4864c05
  418b02:	jmp    0x5c847da5
  418b07:	shl    BYTE PTR [edi+0x4720c24],cl
  418b0d:	adc    BYTE PTR [edi],0x56
  418b10:	stos   DWORD PTR es:[edi],eax
  418b11:	imul   BYTE PTR [esi]
  418b13:	mov    al,0x24
  418b15:	fwait
  418b16:	pushf  
  418b17:	or     eax,0xc956d6ac
  418b1c:	mov    ebx,DWORD PTR [esi-0x2f0c53f6]
  418b22:	dec    ebx
  418b23:	push   cs
  418b24:	cld    
  418b25:	addr16 mov eax,ds:0x1efa
  418b29:	cmc    
  418b2a:	xchg   esi,eax
  418b2b:	jns    0x418aed
  418b2d:	dec    ecx
  418b2e:	mov    ebp,0x766dd9e4
  418b33:	xchg   edx,eax
  418b34:	pop    edi
  418b35:	ss out 0xb7,al
  418b38:	mov    ch,0x50
  418b3a:	dec    esi
  418b3b:	add    eax,0x33d89a9d
  418b40:	outs   dx,BYTE PTR ds:[esi]
  418b41:	xchg   DWORD PTR [edx+eax*4],edi
  418b44:	pop    esi
  418b45:	mov    ds:0x9cb67cd2,eax
  418b4a:	sub    al,0xc7
  418b4c:	loope  0x418b9c
  418b4e:	aas    
  418b4f:	loopne 0x418b22
  418b51:	sbb    BYTE PTR [ebx+0x218a65ef],bh
  418b57:	inc    edx
  418b58:	jg     0x418b3d
  418b5a:	mov    edx,0x136e5e11
  418b5f:	adc    eax,0x63b9330b
  418b64:	fst    DWORD PTR [edx+0x4d86f1f1]
  418b6a:	mov    dl,0x5
  418b6c:	jo     0x418b13
  418b6e:	call   0x4011b737
  418b73:	add    BYTE PTR [edx+0x48],bl
  418b76:	in     eax,dx
  418b77:	cmp    edi,DWORD PTR [esi-0x58]
  418b7a:	add    BYTE PTR [eax-0x7e7ce4c3],bh
  418b80:	in     eax,0x4d
  418b82:	mov    ebp,0xf40a7b76
  418b87:	arpl   WORD PTR [ebx],di
  418b89:	mov    dh,al
  418b8b:	adc    eax,0xba508a90
  418b90:	fadd   QWORD PTR ss:[eax+eax*4]
  418b94:	mov    dl,0x5d
  418b96:	lods   eax,DWORD PTR ds:[esi]
  418b97:	out    dx,eax
  418b98:	push   esp
  418b99:	dec    esp
  418b9a:	int3   
  418b9b:	shl    BYTE PTR [edi+0x33],1
  418b9e:	lea    edi,[edi+0x2d37e4a8]
  418ba4:	shl    DWORD PTR [ebp+0x3b],1
  418ba7:	cmp    edi,eax
  418ba9:	mov    ebp,ds
  418bab:	gs xchg ebx,eax
  418bad:	add    DWORD PTR [edx],edx
  418baf:	ss xchg esp,eax
  418bb1:	es loope 0x418b4e
  418bb4:	frstor [ebx+0x5d9db166]
  418bba:	arpl   WORD PTR [eax+0x1e],si
  418bbd:	dec    ebx
  418bbe:	imul   esi,eax,0xffffffcc
  418bc1:	(bad)  
  418bc2:	int3   
  418bc3:	(bad)  
  418bc4:	icebp  
  418bc5:	sahf   
  418bc6:	aam    0x90
  418bc8:	fnsave [eax+0x4c]
  418bcb:	cmp    DWORD PTR [esp+esi*8+0x5cd177be],eax
  418bd2:	lods   eax,DWORD PTR ds:[esi]
  418bd3:	mov    ds:0x5de1b73b,eax
  418bd8:	pop    ebx
  418bd9:	js     0x418bc1
  418bdb:	xor    eax,0x14a5af72
  418be0:	frstor [ebx-0x2cbaf573]
  418be6:	push   ebp
  418be7:	or     ebp,eax
  418be9:	mov    ebp,0xfffbc919
  418bee:	fisttp DWORD PTR [ecx-0x726e6ea1]
  418bf4:	cmp    al,0x52
  418bf6:	les    ebp,FWORD PTR [ebx-0x2a]
  418bf9:	pop    esp
  418bfa:	push   cs
  418bfb:	or     BYTE PTR [esi],dl
  418bfd:	mov    al,ds:0xa3b9bd44
  418c02:	cmc    
  418c03:	push   eax
  418c04:	adc    DWORD PTR [esi-0x3e],ebx
  418c07:	mov    esi,0x7f929179
  418c0c:	mov    eax,ds:0xdd96599a
  418c11:	es retf 
  418c13:	(bad)  
  418c14:	jns    0x418bce
  418c16:	ret    
  418c17:	mov    dl,0x6
  418c19:	mov    BYTE PTR [eax],bl
  418c1b:	adc    BYTE PTR [eax+eax*8-0x49],0x86
  418c20:	mov    ds,WORD PTR [edx+0x1c]
  418c23:	pop    eax
  418c24:	or     DWORD PTR [edi],0x2fca5686
  418c2a:	sahf   
  418c2b:	test   al,0x4c
  418c2d:	test   al,0xd4
  418c2f:	sub    bh,BYTE PTR [ebp-0x64]
  418c32:	inc    ecx
  418c33:	ret    
  418c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c35:	arpl   WORD PTR [ebx+0x721c4caa],dx
  418c3b:	das    
  418c3c:	jmp    0x48ad5a29
  418c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c42:	xor    al,0x7c
  418c44:	ins    DWORD PTR es:[edi],dx
  418c45:	xor    ch,BYTE PTR [esi-0x7ba8c235]
  418c4b:	push   DWORD PTR [eax+0x4a9f7d27]
  418c51:	shl    dl,cl
  418c53:	pop    es
  418c54:	jg     0x418cbc
  418c56:	mov    ah,0x37
  418c58:	jmp    0x86a9:0x58678c5f
  418c5f:	sti    
  418c60:	and    ebx,DWORD PTR [edi]
  418c62:	cmp    al,0xa1
  418c64:	(bad)  
  418c65:	add    DWORD PTR es:[esi-0xc],0x17
  418c6a:	fnstsw WORD PTR gs:[ecx+0xa]
  418c6e:	sub    edi,DWORD PTR [eax]
  418c70:	push   edx
  418c71:	adc    ah,dh
  418c73:	ss sub al,0x81
  418c76:	leave  
  418c77:	clc    
  418c78:	push   ds
  418c79:	aam    0x5a
  418c7b:	mov    eax,ds:0xeae783de
  418c80:	outs   dx,BYTE PTR ds:[esi]
  418c81:	out    0x9,eax
  418c83:	stc    
  418c84:	jns    0x418c4a
  418c86:	inc    eax
  418c87:	dec    ecx
  418c88:	scas   eax,DWORD PTR es:[edi]
  418c89:	cmp    eax,DWORD PTR [eax]
  418c8b:	ins    DWORD PTR es:[edi],dx
  418c8c:	xchg   DWORD PTR [edx-0x3255d50b],esp
  418c92:	shl    DWORD PTR [eax+0x7],0xf
  418c96:	add    al,0x4e
  418c98:	cmp    BYTE PTR [ebx+0x3fff66d9],al
  418c9e:	dec    esi
  418c9f:	sbb    ebx,DWORD PTR [eax-0x10]
  418ca2:	sti    
  418ca3:	sbb    DWORD PTR [esi],eax
  418ca5:	arpl   ax,bp
  418ca7:	les    esp,FWORD PTR [eax+0x5a26f2e1]
  418cad:	cmp    ebp,edi
  418caf:	ds and al,0xe
  418cb2:	in     al,dx
  418cb3:	adc    DWORD PTR [edx-0x7d],ebp
  418cb6:	mov    bh,0x22
  418cb8:	lds    ebp,FWORD PTR ds:0x3f0d1ac0
  418cbe:	jp     0x418c80
  418cc0:	inc    esi
  418cc1:	adc    al,0x6b
  418cc4:	sbb    ah,bh
  418cc6:	jmp    DWORD PTR [edi]
  418cc8:	pop    ebp
  418cc9:	(bad)  
  418cca:	mov    eax,ds:0x9ecf2b7
  418ccf:	mov    ds:0x720628dd,eax
  418cd4:	xor    BYTE PTR [ecx+0x7b],ch
  418cd7:	enter  0x6d6b,0x7a
  418cdb:	inc    edi
  418cdc:	push   edx
  418cdd:	xor    BYTE PTR [ebp-0x53],bl
  418ce0:	dec    edx
  418ce1:	cmp    al,0x3
  418ce3:	sar    bl,cl
  418ce5:	nop
  418ce6:	mov    edi,0x324ff9b
  418ceb:	aas    
  418cec:	jno    0x418c8b
  418cee:	pop    DWORD PTR [ecx-0x66e0765f]
  418cf4:	cmp    al,0xf
  418cf6:	shl    BYTE PTR [eax+0x1ea073f4],1
  418cfc:	retf   0x247a
  418cff:	xor    edx,esp
  418d01:	nop
  418d02:	sub    ecx,DWORD PTR [edx-0x504c0f38]
  418d08:	lahf   
  418d09:	and    BYTE PTR [edx+edx*2],cl
  418d0c:	and    BYTE PTR [esi+0x4db5fad8],0xd3
  418d13:	dec    ebx
  418d14:	xor    dl,BYTE PTR [ebx-0xe]
  418d17:	inc    ebx
  418d18:	or     al,0xb5
  418d1a:	das    
  418d1b:	sub    DWORD PTR [edi+0x9c5dc42],edi
  418d21:	into   
  418d22:	jns    0x418d0c
  418d24:	aas    
  418d25:	xor    eax,0x4d42dad7
  418d2a:	sbb    bl,dh
  418d2c:	jecxz  0x418d16
  418d2e:	xor    cl,al
  418d30:	inc    ebx
  418d31:	punpcklwd mm0,mm5
  418d34:	push   esi
  418d35:	mov    dh,0x92
  418d37:	test   DWORD PTR [esi],ebx
  418d39:	fisttp WORD PTR [ebx-0x71420965]
  418d3f:	cmp    eax,0x488370b5
  418d44:	(bad)  
  418d45:	cwde   
  418d46:	push   esp
  418d47:	mov    bh,ch
  418d49:	dec    eax
  418d4a:	jge    0x418dbf
  418d4c:	sbb    al,0x60
  418d4e:	out    0x69,eax
  418d50:	jg     0x418d62
  418d52:	mov    dl,0xb
  418d54:	js     0x418d35
  418d56:	test   DWORD PTR [esi],edi
  418d58:	fstp   QWORD PTR [ecx-0x24878623]
  418d5e:	add    eax,DWORD PTR [ebx]
  418d60:	jo     0x418d9e
  418d62:	pop    esp
  418d63:	sub    eax,0x1a165a98
  418d68:	adc    edi,ebp
  418d6a:	out    0x7d,al
  418d6c:	das    
  418d6d:	std    
  418d6e:	stos   DWORD PTR es:[edi],eax
  418d6f:	inc    ebp
  418d70:	hlt    
  418d71:	mov    es,WORD PTR [esi]
  418d73:	and    BYTE PTR [edx-0x29],ch
  418d76:	push   esp
  418d77:	repz test DWORD PTR [edx+0x37],edx
  418d7b:	lahf   
  418d7c:	mov    ch,0x97
  418d7e:	loop   0x418dc3
  418d80:	test   BYTE PTR [ecx+0x7fd725fb],al
  418d86:	(bad)  
  418d87:	xlat   BYTE PTR ds:[ebx]
  418d88:	or     eax,0x4ad8eae4
  418d8d:	ds hlt 
  418d8f:	ud1    ecx,DWORD PTR [ebx+esi*4+0x15]
  418d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d95:	cmc    
  418d96:	loope  0x418d53
  418d98:	push   0x35
  418d9a:	inc    DWORD PTR [ebx+0x79]
  418d9d:	jno    0x418dc7
  418d9f:	and    bl,cl
  418da1:	ss pop edi
  418da3:	ins    DWORD PTR es:[edi],dx
  418da4:	lock cli 
  418da6:	in     eax,dx
  418da7:	in     eax,0x2b
  418da9:	xor    al,0x5
  418dab:	jbe    0x418d66
  418dad:	and    DWORD PTR [esi],ecx
  418daf:	int    0x4f
  418db1:	xor    ch,BYTE PTR [edx+0x39]
  418db4:	or     BYTE PTR [ebx-0x54],ah
  418db7:	sbb    ah,BYTE PTR [edx]
  418db9:	xor    BYTE PTR [eax+edi*4],dh
  418dbc:	mov    ah,BYTE PTR [edi]
  418dbe:	out    dx,al
  418dbf:	out    dx,eax
  418dc0:	data16 mov dl,BYTE PTR [edx+0x62d17c43]
  418dc7:	xor    DWORD PTR [eax*8+0x79442fc3],0xffffff82
  418dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dd0:	pop    esp
  418dd1:	xchg   edx,eax
  418dd2:	dec    ecx
  418dd3:	fnsave [edx-0x70b0c06e]
  418dd9:	pop    edx
  418dda:	lock jmp 0x418d92
  418ddd:	add    BYTE PTR [eax],al
  418ddf:	add    BYTE PTR [eax],al
  418de1:	add    BYTE PTR [edx-0x103695a9],dh
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0x131865f4
  418df2:	jmp    0x4:0xf300010a
  418df9:	add    bl,bh
  418dfb:	mov    al,0xa
  418dfd:	(bad)  
  418dfe:	jecxz  0x418de7
  418e00:	inc    esi
  418e01:	mov    dh,dl
  418e03:	out    0x7a,eax
  418e05:	mov    al,ds:0xfdbfa79a
  418e0a:	jnp    0x418e65
  418e0c:	gs popa 
  418e0e:	repz shl BYTE PTR [edi-0x6a240563],1
  418e15:	jnp    0x418e1b
  418e17:	jmp    DWORD PTR [eax]
  418e19:	jle    0x418e16
  418e1b:	ror    ecx,cl
  418e1d:	mov    eax,ds:0x1c6edb8f
  418e22:	mov    al,0x29
  418e24:	inc    ebx
  418e25:	leave  
  418e26:	sti    
  418e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e28:	out    dx,al
  418e29:	dec    ebp
  418e2a:	push   esp
  418e2b:	jno    0x418e79
  418e2d:	mov    ecx,0xc71a201c
  418e32:	arpl   WORD PTR [ebp-0x1a],cx
  418e35:	or     edx,DWORD PTR [eax]
  418e37:	scas   eax,DWORD PTR es:[edi]
  418e38:	fild   WORD PTR ds:0x6a024049
  418e3e:	lods   al,BYTE PTR ds:[esi]
  418e3f:	push   es
  418e40:	xchg   edi,eax
  418e41:	ja     0x418e15
  418e43:	push   edx
  418e44:	pop    esp
  418e45:	or     ebp,DWORD PTR [esi]
  418e47:	jne    0x418e09
  418e49:	fs cld 
  418e4b:	shl    DWORD PTR [edx+ecx*2],0x5a
  418e4f:	fisttp WORD PTR [ebx]
  418e51:	test   BYTE PTR [esi+0x9],ah
  418e54:	rcl    DWORD PTR [ecx+0x67f3bfa9],1
  418e5a:	mov    bl,BYTE PTR [esi]
  418e5c:	mov    ebp,0x8c6a4aec
  418e61:	data16 fs mov ch,0x87
  418e65:	and    ebx,DWORD PTR [edx+0x45]
  418e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e69:	cmp    BYTE PTR [eax],0xe1
  418e6c:	xor    esp,0x40
  418e6f:	mov    edi,0xe70fe369
  418e74:	shl    DWORD PTR [eax+edi*2+0x2b77c9a0],1
  418e7b:	lea    si,[edi]
  418e7e:	sub    DWORD PTR [edx-0x35b67bd4],esp
  418e84:	lds    esi,FWORD PTR [edi+0x1f]
  418e87:	shl    BYTE PTR [eax+edi*4],1
  418e8a:	lods   al,BYTE PTR ds:[esi]
  418e8b:	mov    ds:0xdc2390a3,al
  418e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e91:	mov    ds:0x2858e2eb,eax
  418e96:	loop   0x418e2b
  418e98:	xchg   ebp,eax
  418e99:	test   al,0x20
  418e9b:	arpl   WORD PTR [edx+0x17],si
  418e9e:	adc    eax,0x6ced28cb
  418ea3:	pop    edi
  418ea4:	ins    BYTE PTR es:[di],dx
  418ea6:	sub    eax,0xcb00570b
  418eab:	hlt    
  418eac:	dec    eax
  418ead:	sub    ebp,eax
  418eaf:	add    BYTE PTR [esi+ebp*4-0x68],dl
  418eb3:	cmp    eax,0xf7398f71
  418eb8:	pop    eax
  418eb9:	inc    esi
  418eba:	sbb    eax,0x8d710681
  418ebf:	mul    DWORD PTR [edi+ebx*4]
  418ec2:	(bad)  
  418ec3:	mov    al,cs:0x9fd210f6
  418ec9:	xchg   BYTE PTR [edx-0x61e9b47],bl
  418ecf:	or     DWORD PTR [ebx-0x25ec7747],0x3578e062
  418ed9:	ins    DWORD PTR es:[edi],dx
  418eda:	mov    al,0x27
  418edc:	inc    esi
  418edd:	pop    es
  418ede:	sahf   
  418edf:	adc    al,0x9f
  418ee1:	jb     0x418ef9
  418ee3:	repnz fsubrp st(5),st
  418ee6:	sbb    esi,DWORD PTR [ecx-0xc]
  418ee9:	(bad)  
  418eea:	jp     0x418e8c
  418eec:	bound  ebp,QWORD PTR [ebx+0x61c01aea]
  418ef2:	dec    ecx
  418ef3:	jp     0x418f60
  418ef5:	rol    DWORD PTR [eax+esi*8+0x6e80b91d],0x98
  418efd:	sub    cl,BYTE PTR [ebx+0x10]
  418f00:	mov    bh,0x6a
  418f02:	int    0x28
  418f04:	sub    eax,0x832c48a1
  418f09:	test   DWORD PTR [edx+0x3],0xf9c6f3e
  418f10:	xchg   eax,eax
  418f12:	jg     0x418f6e
  418f14:	daa    
  418f15:	out    0x8,al
  418f17:	arpl   dx,ax
  418f19:	jae    0x418f2c
  418f1b:	sbb    DWORD PTR [ecx-0x632a2bce],edi
  418f21:	ds loopne 0x418f64
  418f24:	stos   BYTE PTR es:[edi],al
  418f25:	xor    ah,ch
  418f27:	out    dx,eax
  418f28:	(bad)
  418f2c:	(bad)  
  418f2d:	xor    eax,0xb1262c8f
  418f32:	gs mov ecx,0x3d6ad211
  418f38:	jo     0x418f30
  418f3a:	(bad)  
  418f3b:	mov    ds:0xec50f51f,al
  418f40:	jle    0x418edf
  418f42:	mov    ah,BYTE PTR [eax+0x67]
  418f45:	rcl    BYTE PTR gs:[ecx+0x3f2daad3],1
  418f4c:	push   0x30
  418f4e:	repz sbb dl,BYTE PTR [ecx+0x3cdb63a3]
  418f55:	jge    0x418fcb
  418f57:	fs icebp 
  418f59:	and    ebp,eax
  418f5b:	mul    DWORD PTR cs:[eax]
  418f5e:	mov    ss,ecx
  418f60:	aaa    
  418f61:	test   al,0x48
  418f63:	jge    0x418fb4
  418f65:	pop    ebx
  418f66:	mov    esp,0x99c549ae
  418f6b:	imul   esi,DWORD PTR [ebp-0x48],0x30
  418f6f:	std    
  418f70:	xor    edx,esp
  418f72:	out    dx,al
  418f73:	cdq    
  418f74:	push   ebx
  418f75:	cmp    edx,DWORD PTR [ebx]
  418f77:	test   esp,ebx
  418f79:	jecxz  0x418f68
  418f7b:	push   0x913005b6
  418f80:	outs   dx,BYTE PTR ds:[esi]
  418f81:	retf   
  418f82:	mov    ecx,0x87f34b81
  418f87:	sub    esp,DWORD PTR [ecx]
  418f89:	mov    ah,0x12
  418f8b:	lock dec esp
  418f8d:	loopne 0x418ff9
  418f8f:	mov    bl,BYTE PTR [ebx-0x9]
  418f92:	cmp    edx,edx
  418f94:	fwait
  418f95:	mov    esi,esi
  418f97:	push   0xffffffa0
  418f99:	mov    edx,0x7bc62024
  418f9e:	imul   eax,eax,0xffffffda
  418fa1:	test   al,dh
  418fa3:	pop    edi
  418fa4:	test   al,0xc2
  418fa6:	adc    DWORD PTR [edi+ebx*1-0x10],0x75416bdd
  418fae:	ficomp WORD PTR [edi-0xe152acb]
  418fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fb5:	mov    ds:0x7e4b6018,al
  418fba:	shl    BYTE PTR [edi],0x3a
  418fbd:	stos   DWORD PTR es:[edi],eax
  418fbe:	pop    ebp
  418fbf:	adc    DWORD PTR [ecx+0x66],esp
  418fc2:	(bad)  
  418fc3:	mov    cl,0xbd
  418fc5:	add    eax,0x305d79fb
  418fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fcb:	xchg   edi,eax
  418fcc:	icebp  
  418fcd:	or     DWORD PTR [edx+0x34eed6d1],esi
  418fd3:	sbb    al,0x79
  418fd5:	(bad)  
  418fd6:	and    al,0xb8
  418fd8:	inc    esi
  418fd9:	add    bl,BYTE PTR [esi]
  418fdb:	sti    
  418fdc:	in     eax,0x4b
  418fde:	lods   al,BYTE PTR ds:[esi]
  418fdf:	xor    esp,DWORD PTR [ebp-0x7b]
  418fe2:	sti    
  418fe3:	add    al,0xf7
  418fe5:	cmp    BYTE PTR [ebx],cl
  418fe7:	and    esp,DWORD PTR [ebp+ebp*8+0x1b1bf11f]
  418fee:	xor    eax,0x2d885f49
  418ff3:	sbb    edi,0xffffffc1
  418ff6:	xor    DWORD PTR [ebx+0xe],ebx
  418ff9:	dec    esp
  418ffa:	retf   0x49d5
  418ffd:	and    eax,0x9ce8db79
  419002:	fucom  st(3)
  419004:	or     eax,0xf8838426
  419009:	adc    dx,WORD PTR [edx+ecx*1]
  41900d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41900e:	xlat   BYTE PTR ds:[ebx]
  41900f:	sub    eax,0x9ecd5fa2
  419014:	daa    
  419015:	or     al,0x6b
  419017:	outs   dx,BYTE PTR ds:[esi]
  419018:	sub    ah,BYTE PTR [esi-0x6589781a]
  41901e:	xchg   BYTE PTR [edi],dl
  419020:	gs outs dx,DWORD PTR cs:[esi]
  419023:	mov    ah,dh
  419025:	mov    esi,0xbd3e57dd
  41902a:	pop    es
  41902b:	lods   eax,DWORD PTR ds:[esi]
  41902c:	es jne 0x419015
  41902f:	mov    dl,0xb1
  419031:	cmp    esp,DWORD PTR [ebx-0x6]
  419034:	cmp    dl,bh
  419036:	or     eax,0xf4a62e8
  41903b:	inc    ebx
  41903c:	bnd jns 0x418fd8
  41903f:	jg     0x41908b
  419041:	addr16 aaa 
  419043:	adc    dl,0x62
  419046:	test   bh,ah
  419048:	or     cl,BYTE PTR [esi]
  41904a:	cmp    eax,edi
  41904c:	or     ah,bh
  41904e:	inc    esp
  41904f:	push   es
  419050:	cmp    esp,edx
  419052:	call   0x9b4a0af6
  419057:	push   ss
  419058:	push   ebp
  419059:	out    dx,al
  41905a:	dec    esp
  41905b:	jp     0x41907d
  41905d:	jge    0x41905d
  41905f:	into   
  419060:	loop   0x418ff2
  419062:	(bad)  [ecx+eiz*4]
  419065:	sub    ecx,DWORD PTR [ecx+0x55aba876]
  41906b:	out    0x36,al
  41906d:	mov    eax,ds:0x7daea65e
  419072:	inc    edi
  419073:	cmp    ecx,eax
  419075:	sub    dh,BYTE PTR [edx]
  419077:	and    BYTE PTR [ebx+edi*1-0x31],cl
  41907b:	sub    eax,0x39e88271
  419080:	and    BYTE PTR [ebx],cl
  419082:	test   BYTE PTR [eax-0x4362205a],cl
  419088:	pop    ebp
  419089:	rcl    BYTE PTR [edi-0x44583418],1
  41908f:	repz fiadd DWORD PTR [ecx-0x77]
  419093:	das    
  419094:	pop    ecx
  419095:	inc    ebx
  419096:	retf   
  419097:	or     ebp,esi
  419099:	xor    edi,esp
  41909b:	icebp  
  41909c:	mov    edi,0xd3147635
  4190a1:	ror    BYTE PTR [ebx-0x7f6d8e7],1
  4190a7:	ja     0x419120
  4190a9:	sbb    bl,BYTE PTR [edx+edi*4-0x249f1dcc]
  4190b0:	cmp    BYTE PTR [eax+eax*4+0x4b],bl
  4190b4:	push   ebp
  4190b5:	shl    bh,1
  4190b7:	ret    
  4190b8:	loop   0x419136
  4190ba:	(bad)  
  4190bc:	or     BYTE PTR [edx-0x29],cl
  4190bf:	dec    eax
  4190c0:	mov    ds:0xced36d54,eax
  4190c5:	arpl   WORD PTR [ebp-0x1d],di
  4190c8:	pop    eax
  4190c9:	(bad)  
  4190ca:	es push ds
  4190cc:	rcl    bl,0x7b
  4190cf:	retf   0x58a9
  4190d2:	mov    BYTE PTR [esi-0x7d31813b],dl
  4190d8:	repnz mov dl,0x81
  4190db:	sbb    al,0x52
  4190dd:	loopne 0x4190c6
  4190df:	aaa    
  4190e0:	iret   
  4190e1:	stos   BYTE PTR es:[edi],al
  4190e2:	call   0xc1f07f6e
  4190e7:	out    0x91,eax
  4190e9:	(bad)  
  4190ea:	mov    esi,0x3e26fcac
  4190ef:	mov    ebx,0x7c1a8e92
  4190f4:	and    DWORD PTR [edi+ebx*4],ebx
  4190f7:	sahf   
  4190f8:	pop    ss
  4190f9:	ja     0x41912f
  4190fb:	push   0x78
  4190fd:	pop    edi
  4190fe:	outs   dx,DWORD PTR ds:[esi]
  4190ff:	mov    eax,0xbf3c1a43
  419104:	das    
  419105:	jmp    0x2f46:0xe354502c
  41910c:	(bad)  
  41910d:	clc    
  41910e:	add    BYTE PTR [ecx-0x14cef510],ch
  419114:	push   edx
  419115:	sti    
  419116:	mov    edx,0x925adcbe
  41911b:	outs   dx,BYTE PTR ds:[esi]
  41911c:	jge    0x4190cd
  41911e:	(bad)  
  41911f:	aam    0x15
  419121:	and    edi,DWORD PTR [ebx-0x5f]
  419124:	mov    esi,0xc03401db
  419129:	repnz xor eax,DWORD PTR [edx]
  41912c:	jmp    0xaea35cf6
  419131:	nop
  419132:	out    dx,eax
  419133:	or     al,0x48
  419135:	jmp    0x9ff3:0x208320eb
  41913c:	sub    al,0x70
  41913e:	pop    ss
  41913f:	inc    ebx
  419140:	adc    al,0xf2
  419142:	sahf   
  419143:	adc    bh,ch
  419145:	xchg   ebx,eax
  419146:	push   ds
  419147:	imul   edi,DWORD PTR [edx+0x70],0xffffff94
  41914b:	sub    DWORD PTR [ebx],0xffffff99
  41914e:	jo     0x41912e
  419150:	jo     0x4190de
  419152:	jae    0x4191bf
  419154:	or     eax,0xc0340dc9
  419159:	std    
  41915a:	sbb    DWORD PTR [edx],0x340871cb
  419160:	dec    esp
  419161:	xchg   edx,eax
  419162:	sar    BYTE PTR [ebx+ebp*8-0x2be89bca],cl
  419169:	shr    ch,cl
  41916b:	fild   WORD PTR [ebp+0x64]
  41916e:	scas   al,BYTE PTR es:[edi]
  41916f:	cmp    eax,DWORD PTR [ecx+0x7d]
  419172:	leave  
  419173:	inc    esi
  419174:	std    
  419175:	aas    
  419176:	pop    ds
  419177:	pop    esp
  419178:	dec    edx
  419179:	inc    ecx
  41917a:	sbb    esp,DWORD PTR [ebp-0x17dc8490]
  419180:	dec    esp
  419181:	push   cs
  419182:	pop    esi
  419183:	cmc    
  419184:	(bad)  
  419185:	mov    ds:0x29ba3f39,eax
  41918a:	lods   eax,DWORD PTR ds:[esi]
  41918b:	xlat   BYTE PTR ds:[ebx]
  41918c:	sbb    DWORD PTR [ecx-0x57],edx
  41918f:	cmp    esp,esp
  419191:	xor    DWORD PTR [edx],edi
  419193:	and    eax,edi
  419195:	xchg   BYTE PTR [ebx-0x176f0574],ah
  41919b:	ss pop ecx
  41919d:	popf   
  41919e:	jmp    0x1978:0xa58d7be6
  4191a5:	pop    ds
  4191a6:	lods   al,BYTE PTR ds:[esi]
  4191a7:	pop    ds
  4191a8:	xchg   BYTE PTR ds:0xe7d61e6d,dl
  4191ae:	ret    
  4191af:	jge    0x4191a4
  4191b1:	push   ebx
  4191b2:	aam    0x98
  4191b4:	cmp    BYTE PTR cs:[ecx],cl
  4191b7:	xchg   DWORD PTR [eax-0x6d],ebx
  4191ba:	jo     0x4191f8
  4191bc:	icebp  
  4191bd:	stos   DWORD PTR es:[edi],eax
  4191be:	sbb    eax,edi
  4191c0:	inc    edx
  4191c1:	dec    ebx
  4191c2:	fimul  DWORD PTR [edx]
  4191c4:	push   edi
  4191c5:	inc    edx
  4191c6:	push   ecx
  4191c7:	cli    
  4191c8:	push   0xbde6cd45
  4191cd:	xchg   ecx,eax
  4191ce:	es or  DWORD PTR cs:[esi-0x3e3c9f7a],eax
  4191d6:	jmp    0x419180
  4191d8:	pop    ecx
  4191d9:	xchg   edi,eax
  4191da:	retf   
  4191db:	push   edx
  4191dc:	xchg   ecx,eax
  4191dd:	int3   
  4191de:	out    dx,al
  4191df:	gs jns 0x419183
  4191e2:	pop    edx
  4191e3:	dec    edi
  4191e4:	inc    ecx
  4191e5:	popf   
  4191e6:	jl     0x419252
  4191e8:	sbb    al,0xe4
  4191ea:	and    BYTE PTR [ebx],ah
  4191ec:	aad    0xd3
  4191ee:	and    DWORD PTR [eax-0x28],edx
  4191f1:	lahf   
  4191f2:	add    esi,DWORD PTR [ebx-0x3d4fe830]
  4191f8:	xchg   DWORD PTR [edx+0x86f1186],ebp
  4191fe:	adc    al,0x9b
  419200:	push   0xffffff8e
  419202:	xchg   BYTE PTR [eax],al
  419204:	mov    ss,WORD PTR ds:0x91b37aac
  41920a:	xor    al,0x9b
  41920c:	(bad)  
  41920d:	clc    
  41920e:	test   DWORD PTR [eax+edx*8+0x55cc7804],0xe221423c
  419219:	mov    eax,ds:0x6428f64f
  41921e:	mov    al,0x39
  419220:	das    
  419221:	inc    edi
  419222:	xchg   ecx,eax
  419223:	jbe    0x4191e6
  419225:	test   DWORD PTR [edi+0x1996c566],edx
  41922b:	inc    eax
  41922c:	sbb    al,0xd0
  41922e:	sub    bh,cl
  419230:	loopne 0x419287
  419232:	push   ss
  419233:	lds    esi,FWORD PTR [edx+0x7]
  419236:	mov    ds:0xd43f653b,eax
  41923b:	mov    ebp,0x450c1987
  419240:	mov    ds:0xdedf9aee,eax
  419245:	mov    ecx,0x1296c082
  41924a:	fs mov ah,0x7c
  41924d:	pop    esi
  41924e:	repz inc ecx
  419250:	and    dh,BYTE PTR [edx-0x6c]
  419253:	pop    edx
  419254:	sub    al,ah
  419256:	mov    eax,ds:0xf0a0b318
  41925b:	fwait
  41925c:	rcl    DWORD PTR [esp+edx*8-0x24271d5e],1
  419263:	int3   
  419264:	(bad)  
  419265:	dec    esp
  419266:	mov    ebx,0x478d3a0b
  41926b:	xchg   edi,eax
  41926c:	xor    al,0x16
  41926e:	ja     0x419243
  419270:	pop    es
  419271:	ss mov ecx,0x2f9cb88c
  419277:	xchg   DWORD PTR [esi+0xb858470],ecx
  41927d:	pop    eax
  41927e:	fst    DWORD PTR [edx]
  419280:	outs   dx,BYTE PTR ds:[esi]
  419281:	nop
  419282:	in     al,dx
  419283:	fwait
  419284:	cmp    DWORD PTR [ebx+0x773db7d1],0x64
  41928b:	xor    cl,dh
  41928d:	inc    esp
  41928e:	jnp    0x41929e
  419290:	mov    ah,0xbe
  419292:	dec    esi
  419293:	scas   al,BYTE PTR es:[edi]
  419294:	add    DWORD PTR [eax],0x75331793
  41929a:	mov    bl,0xdd
  41929c:	cmp    BYTE PTR [edi+0x1d18e90c],ch
  4192a2:	inc    esi
  4192a3:	or     dh,BYTE PTR [edi+ebp*8-0x42]
  4192a7:	test   eax,0xd8fc1469
  4192ac:	(bad)  
  4192ad:	push   esi
  4192ae:	xchg   esp,eax
  4192af:	mov    esp,ebx
  4192b1:	test   BYTE PTR [edi+0x413d662e],0xb6
  4192b8:	jno    0x41928a
  4192ba:	popf   
  4192bb:	cmp    eax,0x915116c5
  4192c0:	mov    ds:0x239c7800,eax
  4192c5:	fmul   DWORD PTR [edx+0x2e]
  4192c8:	sbb    eax,0x4e95688e
  4192cd:	imul   eax,DWORD PTR [eax],0xffffffd1
  4192d0:	xchg   ebx,eax
  4192d1:	pop    ebp
  4192d2:	sbb    DWORD PTR [eax+0x76d6e0b0],edi
  4192d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192d9:	mov    dh,0x6c
  4192db:	or     al,0xcd
  4192dd:	dec    edx
  4192de:	add    edi,DWORD PTR [eax+0x78]
  4192e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192e2:	xchg   edx,eax
  4192e3:	and    al,0x5b
  4192e5:	and    BYTE PTR [edx+edx*4-0x8db27ac],ah
  4192ec:	adc    eax,DWORD PTR [eax]
  4192ee:	add    BYTE PTR [eax],al
  4192f0:	add    BYTE PTR [eax],al
  4192f2:	inc    ebp
  4192f3:	push   cs
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x7eab5d81
  419300:	inc    ebp
  419301:	in     al,0xdd
  419303:	sgdtd  [eax]
  419306:	repz add al,0x0
  419309:	add    dl,ch
  41930b:	adc    dl,ch
  41930d:	shl    DWORD PTR [ebx-0x6b4635e],cl
  419313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419315:	(bad)  
  419316:	jbe    0x419339
  419318:	ret    0xb11
  41931b:	jg     0x4192c3
  41931d:	loopne 0x419372
  41931f:	or     ecx,DWORD PTR [ebp+0x18c6616d]
  419325:	in     eax,dx
  419326:	add    al,0xf5
  419328:	loopne 0x41937a
  41932a:	inc    bl
  41932c:	(bad)  
  41932d:	mov    al,ds:0xa127f737
  419332:	push   esi
  419333:	or     ecx,ecx
  419335:	or     ebx,DWORD PTR [esp+ebp*1-0x73]
  419339:	adc    al,0xe3
  41933b:	cld    
  41933c:	mov    ch,0x72
  41933e:	ins    BYTE PTR es:[edi],dx
  41933f:	pop    es
  419340:	ss pop ecx
  419342:	ins    BYTE PTR es:[edi],dx
  419343:	mov    BYTE PTR [ecx-0x55],ah
  419346:	test   eax,0x41bc68ef
  41934b:	(bad)
  41934e:	jnp    0x419389
  419350:	ins    BYTE PTR es:[edi],dx
  419351:	sti    
  419352:	pop    ebp
  419353:	pop    ebx
  419354:	jmp    0xf7fe:0xdaec9b0d
  41935b:	das    
  41935c:	inc    ebp
  41935d:	xor    ecx,DWORD PTR [eax]
  41935f:	cwde   
  419360:	idiv   BYTE PTR [esi-0x13]
  419363:	rcr    DWORD PTR [edx-0x39],0x8b
  419367:	add    bl,bl
  419369:	mov    ah,0x12
  41936b:	xchg   BYTE PTR [ecx],ch
  41936d:	mov    edi,0xbbec0543
  419372:	inc    eax
  419373:	push   edx
  419374:	xchg   ecx,eax
  419375:	daa    
  419376:	cmp    ebp,edi
  419378:	jmp    0x15fc9dd6
  41937d:	dec    ebx
  41937e:	enter  0xdd17,0x8b
  419382:	mov    ds:0xee048720,al
  419387:	adc    esi,ecx
  419389:	ja     0x41939b
  41938b:	jnp    0x4193e9
  41938d:	pop    ss
  41938e:	mov    ds:0x55087f81,al
  419393:	mov    bl,0xee
  419395:	mov    bh,0x74
  419397:	xor    bl,cl
  419399:	jmp    0x4193f7
  41939b:	xchg   BYTE PTR [edi-0x47],al
  41939e:	cmp    ecx,edi
  4193a0:	retf   0x6fc2
  4193a3:	mov    edx,0xb931d8ed
  4193a8:	jle    0x419409
  4193aa:	push   esi
  4193ab:	cmp    dh,dh
  4193ad:	clc    
  4193ae:	or     eax,0x8b507ac4
  4193b3:	outs   dx,DWORD PTR ds:[esi]
  4193b4:	stc    
  4193b5:	sbb    DWORD PTR [ebx-0x3d],eax
  4193b8:	inc    esp
  4193b9:	nop
  4193ba:	dec    esp
  4193bb:	jmp    0xbe39a674
  4193c0:	push   ds
  4193c1:	icebp  
  4193c2:	pusha  
  4193c3:	scas   al,BYTE PTR es:[edi]
  4193c4:	popa   
  4193c5:	jmp    0x4193e7
  4193c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193c8:	xchg   ebp,eax
  4193c9:	mov    al,0xda
  4193cb:	or     DWORD PTR [esi+0x1f],ebp
  4193ce:	mov    ebp,0x13660abd
  4193d3:	adc    eax,0x692edd5
  4193d8:	mov    dh,0x11
  4193da:	jmp    0x419452
  4193dc:	mov    dl,0x77
  4193de:	push   esp
  4193df:	je     0x419391
  4193e1:	xor    DWORD PTR [edi+0x32],ecx
  4193e4:	ins    BYTE PTR es:[edi],dx
  4193e5:	pop    ds
  4193e6:	sbb    eax,DWORD PTR [esi-0x11]
  4193e9:	jae    0x419370
  4193eb:	push   ebp
  4193ec:	xchg   esp,eax
  4193ed:	and    BYTE PTR [eax-0x27dfaa53],ah
  4193f3:	mov    eax,ds:0x2a465cd6
  4193f8:	sub    eax,0xdaa9566c
  4193fd:	test   DWORD PTR [ebx+0x53],0x54b1e850
  419404:	popa   
  419405:	retf   0x63e
  419408:	inc    ebx
  419409:	mov    al,ds:0x3e01ecaf
  41940e:	je     0x419440
  419410:	mov    ebx,0x7ea012d3
  419415:	and    ebx,DWORD PTR [eax]
  419417:	arpl   WORD PTR [edi-0x389b4dc5],bp
  41941d:	fmul   DWORD PTR [ebp+0x5b2dc1ca]
  419423:	outs   dx,BYTE PTR ds:[esi]
  419424:	xchg   DWORD PTR [esi+ecx*1-0x47],esp
  419428:	jmp    0x41941c
  41942a:	add    al,0x8a
  41942c:	sub    al,bl
  41942e:	adc    ebx,0xffffff9b
  419431:	retf   0x46e0
  419434:	xlat   BYTE PTR ds:[ebx]
  419435:	cwde   
  419436:	or     eax,0x670e6bce
  41943b:	sub    al,0xa0
  41943d:	inc    edx
  41943e:	xchg   BYTE PTR [ebx-0x27],ah
  419441:	cld    
  419442:	mov    bh,BYTE PTR [edx+0x4f]
  419445:	data16 rol BYTE PTR [ecx-0x7d],cl
  419449:	out    dx,al
  41944a:	pop    ebx
  41944b:	jb     0x4194b6
  41944d:	out    0x13,eax
  41944f:	cmp    bl,BYTE PTR [ebx-0x137d181e]
  419455:	mov    ds:0xae874332,al
  41945a:	lock push ecx
  41945c:	cmp    esp,DWORD PTR [edi-0x40e0967]
  419462:	xchg   esp,eax
  419463:	sbb    edi,DWORD PTR ds:0x35a3d280
  419469:	leave  
  41946a:	xchg   esp,eax
  41946b:	sub    edi,DWORD PTR [edx]
  41946d:	mov    cl,bh
  41946f:	in     eax,dx
  419470:	jecxz  0x4194ed
  419472:	mov    edx,0x166c131a
  419477:	int    0xbe
  419479:	cs retf 0x72fd
  41947d:	jbe    0x4193ff
  41947f:	mov    edi,0x158eb608
  419484:	fisubr WORD PTR [di]
  419487:	mov    bl,0xa7
  419489:	pop    DWORD PTR [edi+0x70]
  41948c:	push   es
  41948d:	mov    bh,0x9b
  41948f:	adc    eax,0x20969f9c
  419494:	stos   BYTE PTR es:[edi],al
  419495:	icebp  
  419496:	sbb    al,dh
  419498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419499:	jl     0x419457
  41949b:	sbb    bh,BYTE PTR [eax+0x47e50cd1]
  4194a1:	mov    al,0x69
  4194a4:	inc    edi
  4194a5:	inc    edi
  4194a6:	and    ebp,DWORD PTR [eax-0x44]
  4194a9:	ret    
  4194aa:	ss fwait
  4194ac:	add    bh,BYTE PTR [ebx+eax*8+0x13]
  4194b0:	sub    esp,DWORD PTR [ebx+0x61e03867]
  4194b6:	xor    esp,DWORD PTR [esp+ebp*1+0x62d09f8c]
  4194bd:	int3   
  4194be:	mov    eax,ds:0x9a998298
  4194c3:	xchg   DWORD PTR [esi+0x711fff48],edx
  4194c9:	in     eax,dx
  4194ca:	test   al,0x21
  4194cc:	mov    ah,0xb4
  4194ce:	jg     0x4194cf
  4194d0:	ret    
  4194d1:	in     eax,0xcc
  4194d3:	mov    edx,0x91d9cd13
  4194d8:	or     al,0xcc
  4194da:	push   ds
  4194db:	jecxz  0x419472
  4194dd:	(bad)  
  4194de:	(bad)  [ecx+0x4f518c1b]
  4194e4:	out    dx,eax
  4194e5:	adc    BYTE PTR [edi-0x44],cl
  4194e8:	add    al,0xc9
  4194ea:	ss dec eax
  4194ec:	mov    ah,0xcf
  4194ee:	sub    al,0x3d
  4194f0:	loopne 0x4194d1
  4194f2:	cmp    al,0x38
  4194f4:	sub    bh,BYTE PTR [ecx]
  4194f6:	call   0xc3022e6f
  4194fb:	xor    eax,0xb94fddda
  419500:	jno    0x41949c
  419502:	sub    eax,0xd4c261b0
  419507:	rcl    DWORD PTR [edx+0x48],0xd4
  41950b:	es pop ebp
  41950d:	enter  0x687e,0x30
  419511:	enter  0x2f9e,0x4f
  419515:	hlt    
  419516:	loop   0x4194ac
  419518:	into   
  419519:	arpl   di,bx
  41951b:	ins    DWORD PTR es:[edi],dx
  41951c:	out    dx,al
  41951d:	test   eax,0x6831b941
  419522:	ins    DWORD PTR es:[edi],dx
  419523:	add    bl,BYTE PTR [ecx-0x7b23c5d2]
  419529:	iret   
  41952a:	aaa    
  41952b:	cmp    DWORD PTR [ebx-0x7d097fc5],0xffffffe3
  419532:	jo     0x419527
  419534:	jo     0x419531
  419536:	ds push eax
  419538:	cmp    edi,DWORD PTR [eax]
  41953a:	cmp    al,0xe0
  41953c:	and    eax,0xdd9a006b
  419541:	fwait
  419542:	icebp  
  419543:	xchg   edx,eax
  419544:	dec    ebx
  419545:	jg     0x419534
  419547:	fisubr DWORD PTR [esi-0x7232ad35]
  41954d:	outs   dx,DWORD PTR ds:[esi]
  41954e:	lahf   
  41954f:	mov    eax,0xd1771e55
  419554:	(bad)  
  419555:	sub    eax,0x809e10d2
  41955a:	in     al,dx
  41955b:	jge    0x419529
  41955d:	jle    0x419550
  41955f:	shl    ch,1
  419561:	add    eax,edx
  419563:	ds cs scas eax,DWORD PTR es:[edi]
  419566:	jecxz  0x4194ff
  419568:	mov    fs,WORD PTR [ebx]
  41956a:	loop   0x4195ca
  41956c:	sub    al,0x73
  41956e:	mov    ebp,DWORD PTR [eax-0x130fe49c]
  419574:	jae    0x41952e
  419576:	adc    eax,0x61cf6b27
  41957b:	or     al,0xe6
  41957d:	jl     0x41956a
  41957f:	add    al,0xb4
  419581:	or     al,0x58
  419583:	data16 and BYTE PTR [edx],al
  419586:	add    DWORD PTR ds:0xa21eaf68,edx
  41958c:	inc    esp
  41958d:	stc    
  41958e:	ins    BYTE PTR es:[edi],dx
  41958f:	arpl   di,si
  419591:	sub    DWORD PTR ds:0xa4c4234e,esp
  419597:	clc    
  419598:	(bad)  
  419599:	cdq    
  41959a:	(bad)  
  41959b:	popa   
  41959c:	and    al,0x95
  41959e:	shr    DWORD PTR [edx+0x26],cl
  4195a1:	or     BYTE PTR [edi+0x45],cl
  4195a4:	int    0x5b
  4195a6:	sub    dl,BYTE PTR [edi+esi*4-0x746ac1f2]
  4195ad:	xchg   ebx,eax
  4195ae:	push   0x33
  4195b0:	fisub  DWORD PTR [ebp+0x2bf67f4d]
  4195b6:	and    eax,0x5f8ff96f
  4195bb:	pop    ecx
  4195bc:	out    0x6e,eax
  4195be:	cli    
  4195bf:	pop    es
  4195c0:	loop   0x41958b
  4195c2:	inc    ecx
  4195c3:	pop    es
  4195c4:	dec    esp
  4195c5:	(bad)  
  4195c6:	sbb    eax,0xb665319
  4195cb:	inc    edi
  4195cc:	or     eax,0xfcdf28aa
  4195d1:	jl     0x419586
  4195d3:	adc    ebp,ecx
  4195d5:	sbb    edi,DWORD PTR [edx-0x16]
  4195d8:	test   DWORD PTR [esi+edx*4-0x1a],ecx
  4195dc:	push   edx
  4195dd:	add    al,0x26
  4195df:	addr16 add dh,bl
  4195e2:	mov    dh,0x77
  4195e4:	jbe    0x4195fb
  4195e6:	iret   
  4195e7:	add    al,al
  4195e9:	add    eax,0x2a2de2b5
  4195ee:	popa   
  4195ef:	pop    ss
  4195f0:	daa    
  4195f1:	jno    0x41960b
  4195f3:	mov    ebx,0xa75bfab1
  4195f8:	nop
  4195f9:	add    al,BYTE PTR [ebp+0x8]
  4195fc:	xchg   esp,eax
  4195fd:	fdiv   QWORD PTR ds:0x5909fad7
  419603:	cwde   
  419604:	ins    BYTE PTR es:[edi],dx
  419605:	xlat   BYTE PTR ds:[ebx]
  419606:	fimul  WORD PTR [esi+0x3b1b9b1d]
  41960c:	inc    ecx
  41960d:	jb     0x41959f
  41960f:	rcl    BYTE PTR [ebx+0x23],0xd0
  419613:	cld    
  419614:	inc    edx
  419615:	pop    ebp
  419616:	sahf   
  419617:	cmp    DWORD PTR [edx+0x75acdcc8],0xff62ae27
  419621:	cmp    edi,eax
  419623:	jne    0x4195dc
  419625:	cdq    
  419626:	retf   
  419627:	out    0x3b,eax
  419629:	mov    dl,BYTE PTR [edx]
  41962b:	jmp    0x4f77bf27
  419630:	xor    al,0xd2
  419632:	iret   
  419633:	xlat   BYTE PTR ds:[ebx]
  419634:	xor    DWORD PTR [ebx],ebp
  419636:	push   esp
  419637:	inc    eax
  419638:	sub    DWORD PTR [eax+0x4f],esp
  41963b:	ss hlt 
  41963d:	dec    esi
  41963e:	and    al,0xe2
  419640:	xor    al,0x2e
  419642:	xchg   DWORD PTR [ebp-0x3f],edi
  419645:	push   ebx
  419646:	rcr    DWORD PTR [ecx+0x5ef85d9b],0x3e
  41964d:	sub    eax,ebx
  41964f:	xchg   DWORD PTR [eax+0x34],esp
  419652:	mov    bh,0xc1
  419654:	sub    ecx,DWORD PTR [edi+ebp*1+0x54]
  419658:	scas   al,BYTE PTR es:[edi]
  419659:	dec    ecx
  41965a:	(bad)  
  41965d:	cmp    BYTE PTR [ecx],dh
  41965f:	sub    eax,0xbe6e0f28
  419664:	mov    ah,0xfd
  419667:	call   0xb4af:0x23fc72c
  41966e:	cmc    
  41966f:	and    eax,0x246ec7a6
  419674:	outs   dx,BYTE PTR ds:[esi]
  419675:	pop    ds
  419676:	call   0x2d4b:0xa83464c5
  41967d:	push   ss
  41967e:	imul   ebp,edi,0x5e
  419681:	xor    al,0x38
  419683:	stos   DWORD PTR es:[edi],eax
  419684:	fbld   TBYTE PTR [ebp-0x72]
  419687:	mov    ecx,0xca772ab6
  41968c:	out    dx,al
  41968d:	mov    esp,0x829bd65e
  419692:	jno    0x41962b
  419694:	into   
  419695:	(bad)  
  419696:	shr    bl,0xce
  419699:	pushf  
  41969a:	ror    ebx,1
  41969c:	stos   BYTE PTR es:[edi],al
  41969d:	sbb    ah,0x8
  4196a0:	jp     0x419683
  4196a2:	outs   dx,BYTE PTR ds:[esi]
  4196a3:	mov    dh,0xf8
  4196a5:	mov    al,0x53
  4196a7:	loope  0x419714
  4196a9:	mov    ah,0x5c
  4196ab:	or     al,BYTE PTR [esi]
  4196ad:	inc    esi
  4196ae:	rol    BYTE PTR [eax],0xdb
  4196b1:	push   edi
  4196b2:	ds inc ebp
  4196b4:	mov    ah,0x2f
  4196b6:	sub    edi,edx
  4196b8:	in     al,0x4f
  4196ba:	shl    dh,1
  4196bc:	test   dh,0xb
  4196bf:	push   ds
  4196c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196c1:	out    dx,eax
  4196c2:	and    al,0xb2
  4196c4:	ret    
  4196c5:	pop    esi
  4196c6:	clc    
  4196c7:	or     al,0x5a
  4196ca:	into   
  4196cb:	xor    dl,BYTE PTR [ebp-0x45]
  4196ce:	inc    esi
  4196cf:	ins    DWORD PTR es:[edi],dx
  4196d0:	test   eax,0x7439ca70
  4196d5:	fild   DWORD PTR [edx-0x1]
  4196d8:	ins    DWORD PTR es:[edi],dx
  4196d9:	jne    0x419680
  4196db:	sub    cl,BYTE PTR [edx]
  4196dd:	(bad)  
  4196de:	or     eax,eax
  4196e0:	in     al,0x64
  4196e2:	mov    al,BYTE PTR [edx]
  4196e4:	xor    al,0x48
  4196e6:	div    DWORD PTR ds:0x3c54623
  4196ec:	std    
  4196ed:	mov    WORD PTR [edx-0x31],es
  4196f0:	or     al,dl
  4196f2:	and    esi,DWORD PTR [esi+0x2b0f62d6]
  4196f8:	mov    ecx,0x9007855f
  4196fd:	mov    esp,0x2b5d6f62
  419702:	test   eax,0x1eb27bf9
  419707:	std    
  419708:	or     bh,BYTE PTR [edi-0x30]
  41970b:	cmc    
  41970c:	outs   dx,BYTE PTR ds:[esi]
  41970d:	sar    BYTE PTR [edx],0x95
  419710:	enter  0x395,0x9d
  419714:	call   0x56f8:0xedb9e64e
  41971b:	push   0xffffffac
  41971d:	ss jp  0x41974f
  419720:	cli    
  419721:	cmp    al,0x81
  419723:	push   edi
  419724:	add    DWORD PTR [edi+0x41],esp
  419727:	in     al,dx
  419728:	dec    edi
  419729:	sub    cl,BYTE PTR [edx+esi*4-0x78]
  41972d:	push   eax
  41972e:	(bad)  
  41972f:	fdiv   st,st(0)
  419731:	mov    es,eax
  419733:	iret   
  419734:	inc    ecx
  419735:	adc    bl,BYTE PTR [ebx+ebx*8-0x33d1623a]
  41973c:	xor    eax,0x359e6bf2
  419741:	iret   
  419742:	xor    DWORD PTR [ebp+0x17],eax
  419745:	add    bl,BYTE PTR [edi+ebp*1]
  419748:	popf   
  419749:	or     BYTE PTR [ebp-0x4e4aa4f8],0x8e
  419750:	add    al,0xa2
  419752:	out    0xb,al
  419754:	mov    esp,0xf4411cb1
  419759:	push   es
  41975a:	aam    0x78
  41975c:	retf   0x7dc3
  41975f:	loope  0x4197b8
  419761:	shl    BYTE PTR [ebp-0x22],cl
  419764:	fmul   QWORD PTR [ecx]
  419766:	xchg   esp,eax
  419767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419768:	jne    0x4197b4
  41976a:	int    0x2c
  41976c:	sub    ah,BYTE PTR [esi+0x6e]
  41976f:	ret    
  419770:	mov    WORD PTR [eax+0x25],gs
  419773:	xor    al,0xa3
  419775:	addr16 sbb al,0xc8
  419778:	sub    ebx,edi
  41977a:	outs   dx,DWORD PTR ds:[esi]
  41977b:	xlat   BYTE PTR ds:[ebx]
  41977c:	enter  0x1b9f,0x3c
  419780:	adc    bl,bh
  419782:	pop    es
  419783:	mov    bh,0x27
  419785:	lahf   
  419786:	sub    esp,esp
  419788:	jnp    0x4197d5
  41978a:	sub    al,dh
  41978c:	mov    ebp,0xdb4937ab
  419791:	xor    bh,BYTE PTR [eax+0x11e8bea1]
  419797:	es jnp 0x4197fb
  41979a:	in     eax,dx
  41979b:	ficom  DWORD PTR [ebx+edx*8+0x44]
  41979f:	mov    dh,0x87
  4197a1:	in     eax,0xfa
  4197a3:	inc    ecx
  4197a4:	dec    esi
  4197a5:	jo     0x4197ce
  4197a7:	cld    
  4197a8:	loop   0x4197fe
  4197aa:	cli    
  4197ab:	loope  0x4197f3
  4197ad:	imul   esi,DWORD PTR [ebx],0x20e30d13
  4197b3:	lea    esi,[esi]
  4197b5:	(bad)  
  4197b6:	mov    dh,0xe
  4197b8:	call   0x3060:0xbc703d0a
  4197bf:	xchg   ebp,eax
  4197c0:	xor    eax,0x30f21420
  4197c5:	fsub   DWORD PTR [esi-0x46]
  4197c8:	std    
  4197c9:	xor    bh,BYTE PTR [edi-0x3418e309]
  4197cf:	cmp    al,BYTE PTR [esi+0x4e]
  4197d2:	push   0xc55f2d9c
  4197d7:	inc    ebx
  4197d8:	rcl    BYTE PTR [ebx-0x53],1
  4197db:	inc    esp
  4197dc:	repz sub eax,0xc8d4d69a
  4197e2:	xor    ebp,DWORD PTR [edi-0xe692ad2]
  4197e8:	sahf   
  4197e9:	cmp    cl,BYTE PTR [ebx-0x26308a05]
  4197ef:	stos   DWORD PTR es:[edi],eax
  4197f0:	aad    0x0
  4197f2:	clc    
  4197f3:	jae    0x4197dc
  4197f5:	fbld   TBYTE PTR [ecx+eax*4-0x1f]
  4197f9:	inc    edi
  4197fa:	push   edx
  4197fb:	fnsave [esi+0x0]
  419801:	add    BYTE PTR [ecx+ebp*8],dl
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	shr    cl,1
  41980f:	and    eax,0x14d027f9
  419814:	add    DWORD PTR [eax],eax
  419816:	repz add al,0x0
  419819:	add    ch,ch
  41981b:	fsub   QWORD PTR [edx]
  41981d:	lea    eax,[eax+0x5d7d0873]
  419823:	jnp    0x41983b
  419825:	int3   
  419826:	mov    ah,0xe2
  419828:	mov    eax,ecx
  41982a:	and    ebx,DWORD PTR [eax-0x492007c]
  419830:	jmp    0x4197bf
  419832:	jmp    0x30186cc9
  419837:	xor    ebp,DWORD PTR [ebx+eiz*2+0xec26ec9]
  41983e:	sahf   
  41983f:	xlat   BYTE PTR ss:[ebx]
  419841:	cmc    
  419842:	or     eax,0x9b2c7a95
  419847:	pop    edi
  419848:	pop    esi
  419849:	in     eax,dx
  41984a:	jle    0x41988e
  41984c:	daa    
  41984d:	(bad)  
  41984e:	and    bl,BYTE PTR [esi]
  419850:	sub    ebx,DWORD PTR [edi-0x1d]
  419853:	jne    0x4198bf
  419855:	sahf   
  419856:	adc    al,0x9d
  419858:	scas   al,BYTE PTR es:[edi]
  419859:	and    dl,bl
  41985b:	xchg   edx,eax
  41985c:	push   ds
  41985d:	dec    ebp
  41985e:	stc    
  41985f:	push   ebx
  419860:	scas   al,BYTE PTR es:[edi]
  419861:	xor    al,ch
  419863:	mov    ah,0xfd
  419865:	fbld   TBYTE PTR [ebp+0x29]
  419868:	pop    ebp
  419869:	loope  0x419846
  41986b:	mov    bh,0x9
  41986d:	leave  
  41986e:	cmp    ebx,DWORD PTR [esi]
  419870:	ins    BYTE PTR es:[edi],dx
  419871:	test   al,0xe4
  419873:	and    eax,0x2cf74f60
  419878:	add    DWORD PTR [eax+0x14cd6181],0x452e3369
  419882:	mov    bh,0xc4
  419884:	dec    eax
  419885:	mov    es,WORD PTR [ebx-0x80b6229]
  41988b:	fsubp  st(0),st
  41988d:	sti    
  41988e:	cs int 0xb4
  419891:	jp     0x4198b5
  419893:	icebp  
  419894:	adc    ch,BYTE PTR [edi+0x16]
  419897:	shr    ecx,cl
  419899:	push   eax
  41989a:	xchg   esi,eax
  41989b:	jno    0x419903
  41989d:	test   BYTE PTR [eax+0xe],ah
  4198a0:	stos   DWORD PTR es:[edi],eax
  4198a1:	(bad)  
  4198a2:	sub    BYTE PTR [edi],ch
  4198a4:	cli    
  4198a5:	adc    dh,dl
  4198a7:	addr16 push esp
  4198a9:	retf   
  4198aa:	jno    0x41990b
  4198ac:	push   di
  4198ae:	lods   eax,DWORD PTR ds:[esi]
  4198af:	inc    edx
  4198b0:	ja     0x419912
  4198b2:	pop    eax
  4198b3:	xchg   ebp,eax
  4198b4:	xor    DWORD PTR [ebp+ebx*8-0x5c],ecx
  4198b8:	in     al,dx
  4198b9:	loopne 0x41985b
  4198bb:	pop    edx
  4198bc:	jnp    0x419930
  4198be:	repz jecxz 0x419934
  4198c1:	dec    ecx
  4198c2:	pusha  
  4198c3:	shl    DWORD PTR [edi+0x29],cl
  4198c6:	inc    edx
  4198c7:	outs   dx,DWORD PTR ds:[esi]
  4198c8:	mov    esi,0x668e61ea
  4198cd:	lods   al,BYTE PTR ds:[esi]
  4198ce:	push   0xa5dc2a76
  4198d3:	ss mov ebp,0xa9397d3f
  4198d9:	sti    
  4198da:	mov    ah,0x91
  4198dc:	pushf  
  4198dd:	inc    ebp
  4198de:	cmp    eax,0x93749064
  4198e3:	add    DWORD PTR [ebp+0x2b],ecx
  4198e6:	pop    es
  4198e7:	inc    edx
  4198e8:	lods   eax,DWORD PTR ds:[esi]
  4198e9:	pop    ebx
  4198ea:	pop    esp
  4198eb:	ja     0x4198f4
  4198ed:	ror    DWORD PTR [eax+0x65],0x36
  4198f1:	clc    
  4198f2:	mov    ecx,0xbc393482
  4198f7:	(bad)  [ebp+edx*1+0x50093f8b]
  4198fe:	stos   DWORD PTR es:[edi],eax
  4198ff:	shl    DWORD PTR [ebx+0x7052d81c],1
  419905:	xchg   ebx,eax
  419906:	shl    BYTE PTR [eax+0x2],1
  419909:	dec    edx
  41990a:	xchg   edi,eax
  41990b:	xor    al,0xb9
  41990d:	sbb    eax,0x32b7c257
  419912:	out    dx,al
  419913:	jbe    0x419980
  419915:	shl    ah,cl
  419917:	es gs xor al,0x63
  41991b:	mov    dl,0x43
  41991d:	shr    BYTE PTR [edx+edi*2],0x5a
  419921:	pop    ebp
  419922:	adc    eax,0x82ad0c23
  419927:	sub    eax,0x7dcf3255
  41992d:	cmp    al,0xb2
  41992f:	mov    DWORD PTR ds:0x36fb4e0a,ebp
  419935:	fcmovne st,st(0)
  419937:	inc    edi
  419938:	xchg   esi,eax
  419939:	dec    edx
  41993a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41993b:	ja     0x4198d5
  41993d:	mov    eax,0xb955b2f0
  419942:	popa   
  419943:	inc    eax
  419944:	or     BYTE PTR [edi-0x4f],0x7a
  419948:	mov    dl,0x85
  41994a:	icebp  
  41994b:	cs je  0x4198d8
  41994e:	mov    eax,ds:0x91539f3c
  419953:	xor    ebp,DWORD PTR [ebx+0x6a]
  419956:	dec    ebp
  419957:	dec    edi
  419958:	test   eax,0x49a9d0b9
  41995d:	out    0xcf,al
  41995f:	std    
  419960:	and    DWORD PTR [ebp-0x7b],edi
  419963:	call   0x267:0x3385fa0b
  41996a:	inc    ebx
  41996b:	pushf  
  41996c:	push   ecx
  41996d:	mov    ebx,DWORD PTR [ebx+0x6c4b3d1f]
  419973:	pusha  
  419974:	mov    cl,BYTE PTR [ecx-0x53]
  419977:	fimul  WORD PTR [edx-0x77]
  41997a:	out    dx,eax
  41997b:	push   ebx
  41997c:	cs ret 
  41997e:	pop    ebp
  41997f:	xor    DWORD PTR [edi-0xe2ed098],edi
  419985:	mov    cl,0x5b
  419987:	aas    
  419988:	mov    bl,ah
  41998a:	add    eax,0xddcaf273
  41998f:	arpl   WORD PTR [esp+esi*4-0x30a5395d],bp
  419996:	nop
  419997:	in     al,dx
  419998:	sbb    esi,DWORD PTR [esi-0x2bae9e30]
  41999e:	jb     0x4199db
  4199a0:	pop    ds
  4199a1:	cld    
  4199a2:	jp     0x419995
  4199a4:	scas   al,BYTE PTR es:[edi]
  4199a5:	ja     0x419a20
  4199a7:	loope  0x4199df
  4199a9:	div    DWORD PTR ds:0x81a6e9d2
  4199af:	push   0x60
  4199b1:	dec    esi
  4199b2:	sbb    al,0x37
  4199b4:	mov    eax,ds:0xf2ef099e
  4199b9:	loope  0x419971
  4199bb:	cmp    BYTE PTR [ecx],bh
  4199bd:	jo     0x419967
  4199bf:	and    dh,BYTE PTR [edx+0x1b]
  4199c2:	push   ds
  4199c3:	dec    edx
  4199c4:	int    0x8c
  4199c6:	test   ebp,esp
  4199c8:	outs   dx,BYTE PTR ds:[esi]
  4199c9:	and    edx,eax
  4199cb:	lea    esp,[ecx]
  4199cd:	dec    bl
  4199cf:	popa   
  4199d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199d1:	lods   eax,DWORD PTR ds:[esi]
  4199d2:	in     eax,dx
  4199d3:	fist   DWORD PTR [ebx-0x29]
  4199d6:	jecxz  0x419a1f
  4199d8:	mov    bl,dh
  4199da:	pop    esi
  4199db:	or     eax,0xf40859b0
  4199e0:	jg     0x4199e4
  4199e2:	or     DWORD PTR [eax+0x4c],0xffffffaf
  4199e6:	adc    edx,0xffffff9a
  4199e9:	enter  0x95e0,0xe5
  4199ed:	test   al,0x3b
  4199ef:	mov    al,ds:0x88436a6d
  4199f4:	cmp    BYTE PTR [ebp-0x5f],ch
  4199f7:	inc    ebx
  4199f8:	mov    DWORD PTR [ebp+0x1d],ebx
  4199fb:	(bad)  
  4199fc:	cmp    eax,0x705f6b86
  419a01:	sbb    BYTE PTR [esi],bl
  419a03:	or     BYTE PTR [ebx],0x6e
  419a06:	add    al,0x47
  419a08:	pop    edx
  419a09:	stos   DWORD PTR es:[edi],eax
  419a0a:	cmp    bh,BYTE PTR [ebx-0x5a]
  419a0d:	(bad)  
  419a0e:	push   ds
  419a0f:	aas    
  419a10:	outs   dx,BYTE PTR ds:[esi]
  419a11:	rcl    BYTE PTR [edx],0x4b
  419a14:	xchg   edx,eax
  419a15:	push   cs
  419a16:	pop    esi
  419a17:	scas   eax,DWORD PTR es:[edi]
  419a18:	mov    esp,0xc6443cae
  419a1d:	data16 jns 0x419a7f
  419a20:	icebp  
  419a21:	add    ch,al
  419a23:	sbb    al,0x1b
  419a25:	out    dx,al
  419a26:	(bad)  
  419a27:	ds inc esp
  419a29:	call   0x3ef1:0xf412de89
  419a30:	les    ecx,FWORD PTR [ebx-0x6f]
  419a33:	inc    edi
  419a34:	leave  
  419a35:	enter  0xf2ad,0x67
  419a39:	pop    ecx
  419a3a:	push   0xe499f994
  419a3f:	sar    BYTE PTR [ebx-0x524ba08b],cl
  419a45:	gs mov eax,0x6e7f047
  419a4b:	pushf  
  419a4c:	push   edi
  419a4d:	js     0x419a17
  419a4f:	add    bl,BYTE PTR ds:0x4951444c
  419a55:	jmp    0x419a72
  419a57:	mov    BYTE PTR [eax+0x28],ch
  419a5a:	je     0x419ada
  419a5c:	inc    edx
  419a5d:	out    dx,eax
  419a5e:	or     al,0x59
  419a60:	aad    0xbf
  419a62:	pop    ebp
  419a63:	xchg   DWORD PTR [esi+0x56],esi
  419a66:	nop
  419a67:	and    eax,0x6c2f5b9
  419a6c:	jo     0x419a14
  419a6e:	je     0x419a49
  419a70:	pusha  
  419a71:	jnp    0x419ada
  419a73:	loop   0x419a77
  419a75:	cmp    BYTE PTR [eax+0x6a2edcab],ch
  419a7b:	pop    ebx
  419a7c:	out    dx,ax
  419a7e:	ds (bad) 
  419a80:	std    
  419a81:	jno    0x419a11
  419a83:	jns    0x419af5
  419a85:	pop    ebx
  419a86:	sbb    BYTE PTR [edx+0x2d483185],0x59
  419a8d:	push   edi
  419a8e:	mov    DWORD PTR [eax+0x5ba0bac2],ebp
  419a94:	inc    edi
  419a95:	add    bl,BYTE PTR [edx-0x41]
  419a98:	cmc    
  419a99:	sti    
  419a9a:	out    0x7d,al
  419a9c:	fdivr  st(1),st
  419a9e:	sub    DWORD PTR ds:0x34c2c07,0x83af8c30
  419aa8:	dec    DWORD PTR [edx+0x77]
  419aab:	fcom   QWORD PTR [eax+0x41297aea]
  419ab1:	mov    ebx,0x50190d19
  419ab6:	outs   dx,BYTE PTR ds:[esi]
  419ab7:	inc    edi
  419ab8:	cmp    eax,0xe6349489
  419abd:	mov    eax,0xef1f75b8
  419ac2:	jns    0x419afc
  419ac4:	lea    edx,[esi+0x6c29bb2]
  419aca:	sti    
  419acb:	mov    esi,0x94cc17f2
  419ad0:	jecxz  0x419af0
  419ad2:	or     dh,bh
  419ad4:	adc    edx,eax
  419ad6:	adc    BYTE PTR [esi+edi*4+0x71],ch
  419ada:	mov    bl,dh
  419adc:	dec    eax
  419add:	push   edx
  419ade:	or     al,0xd4
  419ae0:	mov    ch,0x38
  419ae2:	cwde   
  419ae3:	jo     0x419b62
  419ae5:	mov    eax,ebx
  419ae7:	mov    bh,0x88
  419ae9:	or     BYTE PTR [ebx+0x6d],al
  419aec:	gs mov edi,0xaf661b01
  419af2:	jp     0x419b34
  419af4:	aas    
  419af5:	(bad)  
  419af6:	mov    ds:0x57c9eceb,eax
  419afb:	xor    DWORD PTR [esi+0x2142b8a4],ecx
  419b01:	push   esi
  419b02:	popa   
  419b03:	jb     0x419b28
  419b05:	lea    edx,[ebx+0x47]
  419b08:	push   eax
  419b09:	sar    BYTE PTR [ecx],cl
  419b0b:	push   ds
  419b0c:	stos   DWORD PTR es:[edi],eax
  419b0d:	pop    esi
  419b0e:	inc    esp
  419b0f:	xor    BYTE PTR [esi-0x64a6f2ae],ch
  419b15:	in     eax,dx
  419b16:	dec    esp
  419b17:	jnp    0x419b1a
  419b19:	imul   edi,DWORD PTR [edi],0x36
  419b1c:	add    eax,0xfd7c8c3b
  419b21:	sub    BYTE PTR [esi-0x7ea6e9c9],dl
  419b27:	and    esp,DWORD PTR [ecx+0x55]
  419b2a:	out    0xca,al
  419b2c:	popf   
  419b2d:	or     eax,0x4de6f6cd
  419b32:	or     cl,BYTE PTR [ebx+0x73]
  419b35:	ins    BYTE PTR es:[edi],dx
  419b36:	cwde   
  419b37:	push   0xffffff84
  419b39:	scas   al,BYTE PTR es:[edi]
  419b3a:	push   edx
  419b3b:	mov    ebx,0x37911a8c
  419b40:	(bad)  [eax-0x105d5dca]
  419b46:	add    ecx,DWORD PTR [ecx*8+0x7a25a0ad]
  419b4d:	(bad)  
  419b4e:	stos   BYTE PTR es:[edi],al
  419b4f:	push   edi
  419b50:	rcr    DWORD PTR gs:[eax],0x61
  419b54:	test   BYTE PTR [eax],ah
  419b56:	fiadd  DWORD PTR ds:0x95ab6bc0
  419b5c:	inc    esi
  419b5d:	mov    bl,0xec
  419b5f:	cdq    
  419b60:	icebp  
  419b61:	mov    ch,BYTE PTR [esi-0x50e99987]
  419b67:	loopne 0x419b63
  419b69:	push   0x4d6a77f2
  419b6e:	jns    0x419b8f
  419b70:	in     eax,0x79
  419b72:	mov    ch,0xb1
  419b74:	fnstsw WORD PTR [eax]
  419b76:	jno    0x419aff
  419b78:	sahf   
  419b79:	shl    BYTE PTR [edi+esi*2-0x4a],0x87
  419b7e:	xchg   esp,eax
  419b7f:	push   ds
  419b80:	and    ecx,edi
  419b82:	cmp    DWORD PTR [esi+0x5d],ecx
  419b85:	and    ch,BYTE PTR ds:[esi-0x26]
  419b89:	pop    ecx
  419b8a:	add    ebp,DWORD PTR [ebp+0x5ed8b327]
  419b90:	ret    
  419b91:	int    0x98
  419b93:	xor    ah,0x56
  419b96:	lea    esi,[edi+0x69]
  419b99:	daa    
  419b9a:	add    bl,BYTE PTR [ebx+0x4d49ba21]
  419ba0:	xor    ah,BYTE PTR [esi]
  419ba2:	or     al,0x4a
  419ba4:	xchg   edx,eax
  419ba5:	ds dec ecx
  419ba7:	aas    
  419ba8:	push   esi
  419ba9:	push   edx
  419baa:	lds    edx,FWORD PTR [eax+0x5a23c5ac]
  419bb0:	outs   dx,DWORD PTR fs:[esi]
  419bb2:	dec    esi
  419bb3:	out    0xc1,eax
  419bb5:	lods   eax,DWORD PTR ds:[esi]
  419bb6:	call   DWORD PTR [edi+0x66]
  419bb9:	pusha  
  419bba:	mov    al,0xe0
  419bbc:	into   
  419bbd:	and    DWORD PTR [ebp-0x40],edx
  419bc0:	out    dx,al
  419bc1:	sub    eax,0x37e9aa68
  419bc6:	mov    ecx,0xc73b8b07
  419bcb:	push   edx
  419bcc:	dec    ebp
  419bcd:	xchg   ebx,esi
  419bcf:	sbb    DWORD PTR [edx],edi
  419bd1:	pusha  
  419bd2:	pop    ebx
  419bd3:	cmp    al,0x66
  419bd5:	mov    ds:0x89111373,eax
  419bda:	sahf   
  419bdb:	iret   
  419bdc:	dec    ecx
  419bdd:	xchg   ebp,eax
  419bde:	call   0xdb84:0x291736b8
  419be5:	leave  
  419be6:	lods   eax,DWORD PTR ds:[esi]
  419be7:	sub    al,0xc8
  419be9:	push   es
  419bea:	ret    
  419beb:	xor    DWORD PTR [edx+0x23],esi
  419bee:	adc    DWORD PTR ds:0x855d275a,0x6929a7e2
  419bf8:	push   eax
  419bf9:	loope  0x419c18
  419bfb:	bound  eax,QWORD PTR [ebp+0x200ab32a]
  419c01:	test   DWORD PTR [eax+edi*2-0x41],esp
  419c05:	imul   ecx,DWORD PTR [ebp+0x67],0x8
  419c09:	lods   al,BYTE PTR ds:[esi]
  419c0a:	inc    ebp
  419c0b:	(bad)  
  419c0c:	int    0xac
  419c0e:	imul   ecx,DWORD PTR [ecx],0x72
  419c11:	retf   0x2b72
  419c14:	mov    ch,0xd1
  419c16:	or     BYTE PTR [edx-0x24ac165f],dh
  419c1c:	outs   dx,BYTE PTR ds:[esi]
  419c1d:	fild   WORD PTR [ebp+0x3c]
  419c20:	push   esp
  419c21:	jne    0x419bfb
  419c23:	enter  0x20a2,0x4f
  419c27:	gs loope 0x419bd4
  419c2a:	loop   0x419bc5
  419c2c:	repnz add eax,0xaffcb9ad
  419c32:	mov    ebp,0xd8b482c6
  419c37:	popa   
  419c38:	sub    DWORD PTR [ebp+0x54],ecx
  419c3b:	adc    edi,DWORD PTR cs:0xa6838fc8
  419c42:	xchg   ecx,eax
  419c43:	into   
  419c44:	scas   eax,DWORD PTR es:[edi]
  419c45:	pusha  
  419c46:	hlt    
  419c47:	repnz mov ebx,0xb293263e
  419c4d:	lods   eax,DWORD PTR ds:[esi]
  419c4e:	adc    BYTE PTR [edx+0x5d72fc58],ah
  419c54:	das    
  419c55:	push   0xffffffbe
  419c57:	lds    ebp,FWORD PTR [ebp+0x5c]
  419c5a:	data16 das 
  419c5c:	dec    ebx
  419c5d:	mov    dl,0x1c
  419c5f:	mov    eax,ds:0x709ad55b
  419c64:	rol    DWORD PTR [eax+0x53],cl
  419c67:	ror    ah,cl
  419c69:	jmp    0x419cae
  419c6b:	(bad)  
  419c6c:	in     al,0xd4
  419c6e:	mov    WORD PTR [ebp+0x2774db99],es
  419c74:	ins    DWORD PTR es:[edi],dx
  419c75:	fild   DWORD PTR [eax+0x6]
  419c78:	xchg   edx,ecx
  419c7a:	scas   al,BYTE PTR es:[edi]
  419c7b:	pop    ds
  419c7c:	sub    DWORD PTR [ebx+edi*4+0x51],eax
  419c80:	retf   
  419c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c82:	mov    ebp,0x804df1fc
  419c87:	fs dec ebx
  419c89:	jae    0x419c45
  419c8b:	mov    ds:0x94c38209,al
  419c90:	mov    cl,0x7d
  419c92:	sub    DWORD PTR [eax-0x5ad7941d],ecx
  419c98:	push   edx
  419c99:	(bad)  
  419c9a:	jmp    0xe8c9:0x17ea08d1
  419ca1:	outs   dx,BYTE PTR ds:[esi]
  419ca2:	or     al,0xbe
  419ca4:	jmp    0x419c72
  419ca6:	jg     0x419c7e
  419ca8:	aaa    
  419ca9:	adc    DWORD PTR [esi-0x64a76302],edx
  419caf:	mov    dl,0x89
  419cb1:	or     bl,BYTE PTR ds:0xf3472e71
  419cb7:	mov    eax,0x8a467808
  419cbc:	and    dl,BYTE PTR [edi+0x2c]
  419cbf:	sub    eax,0x214b658e
  419cc4:	cmp    esp,edi
  419cc6:	mov    ds:0xe388a7a9,eax
  419ccb:	jnp    0x419cee
  419ccd:	es sbb al,0x6c
  419cd0:	loope  0x419c7f
  419cd2:	sub    ah,BYTE PTR ds:0xaeac058f
  419cd8:	push   0x3a1f9a96
  419cdd:	add    ebx,esi
  419cdf:	adc    edi,DWORD PTR [ebp+0x58622dcc]
  419ce5:	out    0xff,eax
  419ce7:	in     al,0x9
  419ce9:	push   ebp
  419cea:	std    
  419ceb:	add    ebx,ebx
  419ced:	inc    esi
  419cee:	aad    0xb4
  419cf0:	cmp    al,0x26
  419cf2:	std    
  419cf3:	push   esi
  419cf4:	sub    DWORD PTR [esi+0x58],0x8d3ea8ff
  419cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cfc:	push   esp
  419cfd:	std    
  419cfe:	or     DWORD PTR es:[ebx],eax
  419d01:	xchg   DWORD PTR [ebp-0x33],edi
  419d04:	jmp    0xc46b81e3
  419d09:	and    bl,BYTE PTR [ebx+0x9e8a]
  419d0f:	add    BYTE PTR [eax],al
  419d11:	add    BYTE PTR [eax-0x329b3fbb],cl
  419d17:	in     eax,0xac
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp-0x32eef884]
  419d20:	enter  0xc3d0,0x19
  419d24:	add    DWORD PTR [eax],eax
  419d26:	repz add al,0x0
  419d29:	add    BYTE PTR [ebx+0xa],dh
  419d2c:	add    ebp,DWORD PTR [ebx]
  419d2e:	push   ebx
  419d2f:	rol    BYTE PTR [ecx-0x6302e7bd],cl
  419d35:	xchg   edi,eax
  419d36:	cmp    dl,BYTE PTR ds:[ebp+0x36]
  419d3a:	xchg   DWORD PTR [ebp-0x79],ecx
  419d3d:	mov    ecx,0xadfd5045
  419d42:	retf   
  419d43:	inc    edi
  419d44:	rcr    DWORD PTR [ebx+0x65],0xae
  419d48:	shl    BYTE PTR [esi],1
  419d4a:	(bad)  
  419d4b:	jmp    0x419ccd
  419d4d:	xor    dl,dh
  419d4f:	cmp    DWORD PTR [eax-0x35b8cd16],edx
  419d55:	les    edi,FWORD PTR [ebp-0x79]
  419d58:	cmp    esi,DWORD PTR [esi-0x53d8148]
  419d5e:	aam    0x53
  419d60:	fwait
  419d61:	mov    ebp,0xa59e3143
  419d66:	test   DWORD PTR [esi-0x7f],ebx
  419d69:	or     DWORD PTR [ebp+ebp*4+0xd],esi
  419d6d:	inc    ebx
  419d6e:	imul   DWORD PTR [ecx]
  419d70:	dec    eax
  419d71:	mov    edx,0xaf237b2a
  419d76:	sar    ebp,0x67
  419d79:	mov    al,ds:0x5796eda9
  419d7e:	add    eax,DWORD PTR [ecx]
  419d80:	rcl    BYTE PTR [ecx-0x4783d9d],0xfa
  419d87:	(bad)  
  419d88:	or     BYTE PTR [ebx+0x5157680d],ah
  419d8e:	mov    ds:0xa6f3e9ee,al
  419d93:	push   ss
  419d94:	ins    BYTE PTR es:[edi],dx
  419d95:	sbb    eax,0xccf60d54
  419d9a:	stc    
  419d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d9c:	fld    TBYTE PTR [ebp-0x44d2964a]
  419da2:	inc    ebx
  419da3:	cmp    ebx,eax
  419da5:	xchg   edi,eax
  419da6:	add    BYTE PTR [esi],ch
  419da8:	or     ch,BYTE PTR [ebx+0x63]
  419dab:	pop    esi
  419dac:	cdq    
  419dad:	test   DWORD PTR [edx-0x2504e37],0x124acb9e
  419db7:	push   ebx
  419db8:	sbb    eax,0x1e80d577
  419dbd:	call   0x69d8faad
  419dc2:	cwde   
  419dc3:	scas   al,BYTE PTR es:[edi]
  419dc4:	(bad)  
  419dc6:	out    dx,eax
  419dc7:	int3   
  419dc8:	cdq    
  419dc9:	lahf   
  419dca:	add    BYTE PTR [esi],ah
  419dcc:	pop    esi
  419dcd:	mov    ds:0x848ad1b2,eax
  419dd2:	inc    esp
  419dd3:	inc    edx
  419dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd5:	jmp    0x14bc75b5
  419dda:	sbb    BYTE PTR [ecx*1+0x24974dd7],dl
  419de1:	mov    ds:0xf3a92b57,al
  419de6:	dec    ecx
  419de7:	cmp    BYTE PTR [eax-0x167d01fc],dh
  419ded:	int3   
  419dee:	ret    
  419def:	adc    eax,0x4c56865d
  419df4:	mov    ebx,0x4b5dec7a
  419df9:	jecxz  0x419dbe
  419dfb:	add    bh,dh
  419dfd:	repz daa 
  419dff:	pushf  
  419e00:	xchg   esp,eax
  419e01:	(bad)  
  419e03:	out    dx,al
  419e04:	jle    0x419e05
  419e06:	push   esp
  419e07:	scas   eax,DWORD PTR es:[edi]
  419e08:	jle    0x419db2
  419e0a:	shl    DWORD PTR [ebp+0x6bea3bfb],1
  419e10:	or     al,0x3a
  419e12:	pop    edi
  419e13:	nop
  419e14:	(bad)  
  419e16:	out    dx,al
  419e17:	push   es
  419e18:	lea    ecx,[edi-0x29703590]
  419e1e:	repz bound ebx,QWORD PTR [edx]
  419e21:	rol    BYTE PTR [ebx],1
  419e23:	xor    DWORD PTR [ecx],edi
  419e25:	cmp    al,0x8b
  419e27:	add    DWORD PTR ds:0x33e221e,esp
  419e2d:	adc    DWORD PTR [edx],0xb
  419e30:	mov    dh,0xb3
  419e32:	sub    DWORD PTR [esi],esp
  419e34:	repz pop ebp
  419e36:	pop    ecx
  419e37:	and    esp,DWORD PTR [ecx-0xa]
  419e3a:	xchg   ebx,ebp
  419e3c:	add    eax,0x79e27b54
  419e41:	iret   
  419e42:	outs   dx,BYTE PTR ds:[esi]
  419e43:	sahf   
  419e44:	jmp    0x419e1d
  419e46:	xchg   edi,eax
  419e47:	jge    0x419eb3
  419e49:	lahf   
  419e4a:	sub    ebx,eax
  419e4c:	push   0xfffffffa
  419e4e:	inc    edx
  419e4f:	cld    
  419e50:	ret    
  419e51:	mov    al,ds:0x93bd58cc
  419e56:	inc    esp
  419e57:	ds in  eax,dx
  419e59:	or     esi,0xffffffe3
  419e5c:	lea    ebp,[ebx+0x2]
  419e5f:	push   ebx
  419e60:	xor    bl,bh
  419e62:	fbstp  TBYTE PTR [ebx+0x6647e7a0]
  419e68:	sub    ebx,DWORD PTR [ecx+0x5c]
  419e6b:	dec    edi
  419e6c:	cmp    DWORD PTR [eax+0x1f719550],ebp
  419e72:	jns    0x419e5b
  419e74:	in     eax,0x1e
  419e76:	loop   0x419e91
  419e78:	fsubr  st(5),st
  419e7a:	das    
  419e7b:	je     0x419ec5
  419e7d:	inc    edx
  419e7e:	xor    esp,DWORD PTR ds:0x860a1595
  419e84:	aad    0xa7
  419e86:	xchg   edi,eax
  419e87:	jnp    0x419e0d
  419e89:	popf   
  419e8a:	adc    eax,0x9bdcc1dc
  419e8f:	adc    ecx,ecx
  419e91:	pop    ebx
  419e92:	inc    edx
  419e93:	adc    ecx,esi
  419e95:	int    0xcd
  419e97:	mov    ecx,0x1079091c
  419e9c:	ins    DWORD PTR es:[edi],dx
  419e9d:	sbb    DWORD PTR [ebx+0x4d],edx
  419ea0:	aas    
  419ea1:	jae    0x419ef0
  419ea3:	xchg   edi,eax
  419ea4:	and    ebp,DWORD PTR [ebp-0x29]
  419ea7:	or     eax,DWORD PTR [esi]
  419ea9:	(bad)  
  419eaa:	fs dec ecx
  419eac:	or     DWORD PTR [esi-0x3f],edx
  419eaf:	dec    edi
  419eb0:	mov    es,esp
  419eb2:	adc    eax,0x77c1075d
  419eb7:	dec    eax
  419eb8:	out    0xca,al
  419eba:	sbb    al,0x4e
  419ebc:	shr    bh,0x4a
  419ebf:	(bad)  
  419ec0:	imul   ebx,DWORD PTR [edx-0x1a],0xb
  419ec4:	std    
  419ec5:	add    al,0x91
  419ec7:	pusha  
  419ec8:	push   eax
  419ec9:	les    esi,FWORD PTR [ebp+0x14c818aa]
  419ecf:	nop
  419ed0:	sub    edi,esp
  419ed2:	inc    edi
  419ed3:	jmp    0x419e8e
  419ed5:	(bad)  
  419ed7:	mov    al,0x3
  419ed9:	out    0x1a,al
  419edb:	or     al,0x1c
  419edd:	xchg   edi,eax
  419ede:	(bad)  
  419edf:	jg     0x419f2a
  419ee1:	std    
  419ee2:	stc    
  419ee3:	sbb    bl,BYTE PTR [eax]
  419ee5:	gs in  eax,0xee
  419ee8:	adc    ebx,esp
  419eea:	jmp    DWORD PTR [esi+0x6e2fc026]
  419ef0:	pop    esp
  419ef1:	into   
  419ef2:	lods   eax,DWORD PTR ds:[esi]
  419ef3:	inc    ecx
  419ef4:	add    BYTE PTR [ecx],dl
  419ef6:	xchg   ebp,eax
  419ef7:	clc    
  419ef8:	sub    ch,BYTE PTR [eax]
  419efa:	sub    DWORD PTR [eax-0x4cb64f9d],edx
  419f00:	pop    edi
  419f02:	or     ah,cl
  419f04:	xchg   ecx,eax
  419f05:	imul   esp,DWORD PTR [ecx-0x972803b],0x4
  419f0c:	cmp    BYTE PTR [eax],0x24
  419f0f:	loop   0x419f49
  419f11:	sub    BYTE PTR [ecx+0x50f7378],ah
  419f17:	sbb    dh,BYTE PTR [ebx-0x6a90b4ce]
  419f1d:	ja     0x419ef8
  419f1f:	xchg   BYTE PTR [ecx+0x369674c6],cl
  419f25:	scas   eax,DWORD PTR es:[edi]
  419f26:	xchg   edi,eax
  419f27:	call   0xa200:0x45088f51
  419f2e:	loop   0x419eb2
  419f30:	and    BYTE PTR [eax+0x4d],0x48
  419f34:	sti    
  419f35:	push   edi
  419f36:	pusha  
  419f37:	jns    0x419f57
  419f39:	xchg   ebx,eax
  419f3a:	adc    BYTE PTR [eax+edx*2],ch
  419f3d:	pushf  
  419f3e:	xchg   ecx,eax
  419f3f:	cdq    
  419f40:	push   edi
  419f41:	out    dx,eax
  419f42:	xor    al,0x67
  419f44:	icebp  
  419f45:	pop    ebx
  419f46:	push   esp
  419f47:	pop    ss
  419f48:	mov    ch,0xb5
  419f4a:	push   0xb
  419f4c:	mov    bh,0x88
  419f4e:	mov    esi,0x9ec0dbed
  419f53:	addr16 iret 
  419f55:	xchg   esi,eax
  419f56:	and    al,ah
  419f58:	cmp    al,0x6f
  419f5a:	jle    0x419fd6
  419f5c:	cld    
  419f5d:	xchg   ebp,eax
  419f5e:	push   ebp
  419f5f:	jle    0x419ee9
  419f61:	pop    eax
  419f62:	test   eax,0xf22232a7
  419f67:	mov    cl,0x7
  419f69:	dec    ebp
  419f6a:	sub    al,0x4e
  419f6c:	std    
  419f6d:	xchg   ebp,eax
  419f6e:	or     esp,edi
  419f70:	fsubr  QWORD PTR [ecx]
  419f72:	stc    
  419f73:	sbb    BYTE PTR [ecx+0x67],bh
  419f76:	mov    edi,0xa3669bf7
  419f7b:	(bad)  
  419f7d:	outs   dx,DWORD PTR ds:[esi]
  419f7e:	push   eax
  419f7f:	or     al,0xc8
  419f81:	jne    0x419f8c
  419f83:	xor    ah,bl
  419f85:	mov    BYTE PTR [esi],ch
  419f87:	xor    bh,bh
  419f89:	xchg   esp,eax
  419f8a:	pop    edx
  419f8b:	call   0x8412a796
  419f90:	fs jns 0x419fbe
  419f93:	fnstcw WORD PTR [ecx]
  419f95:	mov    ebx,DWORD PTR [ebx-0x72f6d21a]
  419f9b:	xchg   DWORD PTR [ecx-0x19852256],eax
  419fa1:	pop    eax
  419fa2:	pop    ecx
  419fa3:	adc    eax,0xfd83ca08
  419fa8:	and    DWORD PTR [edx+eiz*2],ebx
  419fab:	or     cl,BYTE PTR [edx-0x67]
  419fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419faf:	dec    esi
  419fb0:	or     eax,edi
  419fb2:	mov    al,ds:0x2636b835
  419fb7:	xchg   si,ax
  419fb9:	fld    TBYTE PTR [ebp+0x47f8bb1e]
  419fbf:	adc    eax,0x6da68293
  419fc4:	push   eax
  419fc5:	adc    edx,edi
  419fc7:	js     0x41a034
  419fc9:	cmp    edi,edi
  419fcb:	icebp  
  419fcc:	je     0x419fd9
  419fce:	adc    edi,edi
  419fd0:	sti    
  419fd1:	add    bl,bl
  419fd3:	cmp    ah,BYTE PTR [edi+0x410ea2a7]
  419fd9:	adc    DWORD PTR [esi],0xc8a14ada
  419fdf:	fidivr WORD PTR [edx+0x6783f047]
  419fe5:	gs ret 
  419fe7:	(bad)  
  419fe8:	clc    
  419fe9:	shl    BYTE PTR [eax+0x4398c805],0x3
  419ff0:	sub    BYTE PTR [edi-0x4a],bl
  419ff3:	cli    
  419ff4:	jnp    0x419f78
  419ff6:	inc    esp
  419ff7:	mov    eax,0x2cb5e6a6
  419ffc:	mov    cs,eax
  419ffe:	jno    0x41a056
  41a000:	ins    DWORD PTR es:[edi],dx
  41a001:	inc    ebx
  41a002:	cmp    BYTE PTR [edi+eax*1-0x37],0xdc
  41a007:	mov    dl,0xff
  41a009:	mov    dh,0xdc
  41a00b:	mov    dl,0xe0
  41a00d:	push   ecx
  41a00e:	sbb    DWORD PTR [edx],edi
  41a010:	jle    0x419feb
  41a012:	fld    QWORD PTR gs:[edx-0x7a]
  41a016:	sbb    dh,BYTE PTR [edx+0x1e]
  41a019:	jmp    0x146d:0x5a4e4078
  41a020:	mov    ebx,eax
  41a022:	mov    bh,0x4c
  41a024:	lahf   
  41a025:	inc    ecx
  41a026:	inc    ebx
  41a027:	pop    eax
  41a028:	retf   0x5910
  41a02b:	push   0xffffffda
  41a02d:	jge    0x41a029
  41a02f:	cdq    
  41a030:	fldenv [edx+0x5d89b078]
  41a036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a037:	sbb    DWORD PTR [edx+0x5c33609],ebx
  41a03d:	adc    cl,BYTE PTR [ebp+0x4f]
  41a040:	fcmovnbe st,st(7)
  41a042:	mov    esi,0x7aad11ec
  41a047:	jnp    0x41a033
  41a049:	cmp    dl,BYTE PTR [edx+0x2]
  41a04c:	aaa    
  41a04d:	mov    esp,0x3f4930da
  41a052:	xchg   esi,ebx
  41a054:	push   esp
  41a055:	push   ds
  41a056:	ds stos DWORD PTR es:[edi],eax
  41a058:	inc    eax
  41a059:	lds    eax,FWORD PTR [ebx*1+0x549bc2a7]
  41a060:	sbb    al,0x6
  41a062:	sbb    edx,DWORD PTR [ebx-0x67]
  41a065:	out    0x34,al
  41a067:	pop    ss
  41a068:	jne    0x41a07c
  41a06a:	ret    0x10d8
  41a06d:	sahf   
  41a06e:	loope  0x41a0de
  41a070:	push   0xec907caa
  41a075:	xchg   esp,eax
  41a076:	pusha  
  41a077:	push   ebp
  41a078:	push   0xffffffd9
  41a07a:	xor    cl,dl
  41a07c:	dec    esi
  41a07d:	fcomi  st,st(6)
  41a07f:	stos   DWORD PTR es:[edi],eax
  41a080:	xchg   edx,eax
  41a081:	add    BYTE PTR [ebx+0x43],cl
  41a084:	daa    
  41a085:	es out 0xe5,eax
  41a088:	(bad)  
  41a089:	push   ebx
  41a08a:	pushf  
  41a08b:	pop    edx
  41a08c:	adc    al,0xe2
  41a08e:	mov    ah,0x11
  41a090:	sbb    esi,eax
  41a092:	mov    al,ds:0x458d2271
  41a097:	sbb    eax,0x33674fa8
  41a09c:	(bad)  
  41a09d:	loop   0x41a025
  41a09f:	and    eax,0x9d4a197f
  41a0a4:	xchg   esi,eax
  41a0a5:	es sub ch,al
  41a0a8:	ds mov cl,0x16
  41a0ab:	dec    ebx
  41a0ac:	fcmovbe st,st(3)
  41a0ae:	icebp  
  41a0af:	pushf  
  41a0b0:	adc    DWORD PTR [ecx+0x2f6735de],0x2e
  41a0b7:	loop   0x41a096
  41a0b9:	sub    eax,0x8cc0eaa8
  41a0be:	mov    cl,0x2e
  41a0c0:	add    eax,0x6ed207ee
  41a0c5:	mov    al,0x23
  41a0c7:	fs and al,0x15
  41a0ca:	dec    ebx
  41a0cb:	mov    ecx,0x3acf499e
  41a0d0:	fs jl  0x41a10f
  41a0d3:	add    DWORD PTR [edi+0x36e80d5],esi
  41a0d9:	add    edi,ecx
  41a0db:	adc    bh,0x3e
  41a0de:	outs   dx,BYTE PTR ds:[esi]
  41a0df:	mov    dh,0x4
  41a0e1:	repz sub ecx,esp
  41a0e4:	aam    0xda
  41a0e6:	xchg   BYTE PTR [eax],ah
  41a0e8:	and    BYTE PTR [edi+0x60],ah
  41a0eb:	push   ebp
  41a0ec:	xchg   dl,bl
  41a0ee:	outs   dx,DWORD PTR ds:[esi]
  41a0ef:	sub    eax,DWORD PTR gs:[esi-0x73]
  41a0f3:	sub    eax,0x9c4bbf71
  41a0f8:	push   es
  41a0f9:	(bad)  
  41a0fa:	fisttp DWORD PTR [esi]
  41a0fc:	sahf   
  41a0fd:	push   0xffffffd6
  41a0ff:	or     DWORD PTR [ebx-0x14],ebp
  41a102:	sub    al,0x12
  41a104:	pop    edx
  41a105:	xchg   ebp,eax
  41a106:	sti    
  41a107:	retf   
  41a108:	push   ds
  41a109:	pop    es
  41a10a:	mov    ds:0xa0031fc7,eax
  41a10f:	sub    al,0xf2
  41a111:	iret   
  41a112:	out    dx,eax
  41a113:	pop    edi
  41a114:	ret    0x9962
  41a117:	jl     0x41a106
  41a119:	push   edx
  41a11a:	push   0x41
  41a11c:	lods   al,BYTE PTR ds:[esi]
  41a11d:	jo     0x41a0f8
  41a11f:	test   esp,ebp
  41a121:	ret    
  41a122:	pop    ebp
  41a123:	jb     0x41a12b
  41a125:	test   al,0xda
  41a127:	scas   eax,DWORD PTR es:[edi]
  41a128:	mov    cl,0x7c
  41a12a:	inc    eax
  41a12b:	mov    ah,0x56
  41a12d:	mov    eax,ds:0x5ea671e7
  41a132:	cmc    
  41a133:	mov    edi,0xe1f98c93
  41a138:	sub    bl,BYTE PTR [eax+0x6e5f86a0]
  41a13e:	aam    0x34
  41a140:	sti    
  41a141:	dec    ecx
  41a142:	push   esi
  41a143:	or     BYTE PTR [edi+0x6855bdb6],bh
  41a149:	imul   edi,DWORD PTR [esi],0x55f1273c
  41a14f:	and    DWORD PTR [ecx],eax
  41a151:	in     eax,0x59
  41a153:	and    eax,0xe4a4f4ed
  41a158:	jp     0x41a102
  41a15a:	cld    
  41a15b:	pop    ebx
  41a15c:	xlat   BYTE PTR ds:[ebx]
  41a15d:	popf   
  41a15e:	cmp    BYTE PTR [edx],0x54
  41a161:	xchg   ebp,eax
  41a162:	rcl    DWORD PTR [ecx],1
  41a164:	adc    edx,DWORD PTR [edx+0x57b22a29]
  41a16a:	shl    DWORD PTR [ebx-0x55],1
  41a16d:	xor    DWORD PTR [edx],ecx
  41a16f:	mov    edi,DWORD PTR [esi-0x3d]
  41a172:	fstp   TBYTE PTR [esi]
  41a174:	cmc    
  41a175:	add    DWORD PTR [ebx+0x32fb85a2],esi
  41a17b:	ds out 0x5f,al
  41a17e:	and    edi,eax
  41a180:	mov    DWORD PTR [eax+0x6f4dada3],esi
  41a186:	jl     0x41a1e1
  41a188:	or     al,0xb2
  41a18a:	pop    es
  41a18b:	pop    esp
  41a18c:	or     esi,DWORD PTR [edx-0x34]
  41a18f:	mov    esi,0x94a40eb1
  41a194:	ret    0xbc0d
  41a197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a198:	sub    edi,esp
  41a19a:	push   cs
  41a19b:	jmp    DWORD PTR [edi]
  41a19d:	psubq  mm2,QWORD PTR [ebp+0x7df2fb3a]
  41a1a4:	adc    al,BYTE PTR [edx-0x48]
  41a1a7:	sbb    ch,BYTE PTR [edx-0x43]
  41a1aa:	imul   ecx,edx,0xffffffdb
  41a1ad:	cmp    ah,dh
  41a1af:	scas   al,BYTE PTR es:[edi]
  41a1b0:	or     BYTE PTR [ecx+esi*4-0x2fae41cf],bh
  41a1b7:	push   0x6f1f85dc
  41a1bc:	sbb    BYTE PTR [eax+0x65],al
  41a1bf:	xchg   ecx,eax
  41a1c0:	into   
  41a1c1:	lods   eax,DWORD PTR ds:[esi]
  41a1c2:	and    ebp,ebp
  41a1c4:	xor    BYTE PTR [ebx+edx*1-0x1ad3e431],0xf2
  41a1cc:	rcl    BYTE PTR [edi],1
  41a1ce:	icebp  
  41a1cf:	sub    eax,0x8d34e949
  41a1d4:	jg     0x41a1cc
  41a1d6:	pushf  
  41a1d7:	or     BYTE PTR [eax-0x33c79395],0x67
  41a1de:	nop
  41a1df:	imul   ebx,DWORD PTR [ebp+0xb],0x382143c0
  41a1e6:	cmp    eax,0x9fdc575c
  41a1eb:	bound  ebx,QWORD PTR [edx]
  41a1ed:	push   ds
  41a1ee:	call   0xaadeda4
  41a1f3:	call   0xcbfac8aa
  41a1f8:	sbb    al,0x65
  41a1fa:	mov    bl,0x1a
  41a1fc:	add    BYTE PTR [ecx-0x7d],bh
  41a1ff:	push   esi
  41a200:	out    dx,eax
  41a201:	je     0x41a1ce
  41a203:	jne    0x41a20c
  41a205:	jne    0x41a250
  41a207:	or     BYTE PTR [edx],cl
  41a209:	add    dh,al
  41a20b:	out    dx,al
  41a20c:	or     al,0x7b
  41a20e:	mov    ebx,0x39b8e258
  41a213:	xor    edi,0x2c6f6d1d
  41a219:	adc    ecx,DWORD PTR [edi+0xeea1]
  41a21f:	add    BYTE PTR [eax],al
  41a221:	add    BYTE PTR [eax],bl
  41a223:	push   ebp
  41a224:	push   cs
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs hlt 
  41a22f:	lea    ebx,[esi+edi*4+0x11eb6]
  41a236:	repz add al,0x0
  41a239:	add    BYTE PTR [esi+ebx*1],dh
  41a23c:	loop   0x41a25d
  41a23e:	call   DWORD PTR [ebx]
  41a240:	dec    esp
  41a241:	mov    ds:0x7f1a262c,eax
  41a246:	jmp    0x41a245
  41a248:	inc    bl
  41a24a:	adc    eax,0x61b15fe5
  41a24f:	dec    ebx
  41a250:	(bad)  
  41a251:	or     bl,dl
  41a253:	mov    dl,al
  41a255:	loopne 0x41a24b
  41a257:	mov    dh,0x18
  41a259:	lds    ecx,FWORD PTR [esi]
  41a25b:	or     al,0xe4
  41a25d:	lods   eax,DWORD PTR ds:[esi]
  41a25e:	mov    edi,0x5317b0c3
  41a263:	fs cwde 
  41a265:	push   ebp
  41a266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a267:	cdq    
  41a268:	icebp  
  41a269:	test   BYTE PTR [edi+edx*4+0x34],dl
  41a26d:	addr16 xor ch,al
  41a270:	mov    al,0x2e
  41a272:	xchg   ch,cl
  41a274:	les    ecx,FWORD PTR [edi+0x34]
  41a277:	inc    edi
  41a278:	jae    0x41a232
  41a27a:	shl    BYTE PTR [ebx],0x52
  41a27d:	xor    BYTE PTR [eax],dl
  41a27f:	fdiv   DWORD PTR [edx-0x25]
  41a282:	sbb    dh,BYTE PTR [ecx-0x59c16eb7]
  41a288:	aad    0x8b
  41a28a:	rol    BYTE PTR [esi],cl
  41a28c:	inc    edi
  41a28d:	push   ebp
  41a28e:	add    BYTE PTR [edi+0x1c83c7f5],bh
  41a294:	xor    DWORD PTR [ebx],edi
  41a296:	xlat   BYTE PTR ds:[ebx]
  41a297:	aam    0x92
  41a299:	enter  0x47f6,0x3f
  41a29d:	push   ss
  41a29e:	rcr    BYTE PTR [esi-0x38],0xdd
  41a2a2:	add    ecx,DWORD PTR [ebx+0x14]
  41a2a5:	loopne 0x41a254
  41a2a7:	mov    bh,0xa2
  41a2a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2aa:	ret    0x7b83
  41a2ad:	jne    0x41a25a
  41a2af:	dec    eax
  41a2b0:	push   cs
  41a2b1:	stos   BYTE PTR es:[edi],al
  41a2b2:	pop    esi
  41a2b3:	and    BYTE PTR [eax+0x15f47916],dh
  41a2b9:	pop    edx
  41a2ba:	fs jbe 0x41a30b
  41a2bd:	xchg   ch,cl
  41a2bf:	jbe    0x41a328
  41a2c1:	sub    DWORD PTR [ebp+eiz*1+0x21611ae9],ebx
  41a2c8:	xchg   ebx,ebx
  41a2ca:	xchg   esi,eax
  41a2cb:	push   ebp
  41a2cc:	or     BYTE PTR [ecx-0x5574af6b],0xf
  41a2d3:	repz pop es
  41a2d5:	cwde   
  41a2d6:	(bad)  
  41a2d7:	test   al,0xc1
  41a2d9:	cmp    al,0x36
  41a2db:	sahf   
  41a2dc:	xlat   BYTE PTR ds:[ebx]
  41a2dd:	mov    eax,ds:0xe27c365f
  41a2e2:	loope  0x41a295
  41a2e4:	xlat   BYTE PTR ds:[ebx]
  41a2e5:	xchg   dl,ah
  41a2e7:	ss jp  0x41a2a2
  41a2ea:	clc    
  41a2eb:	shr    BYTE PTR [ebx],1
  41a2ed:	xchg   esi,eax
  41a2ee:	stos   DWORD PTR es:[edi],eax
  41a2ef:	xor    edx,DWORD PTR [eax]
  41a2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2f2:	(bad)  
  41a2f3:	adc    eax,0x4536505b
  41a2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2f9:	nop
  41a2fa:	dec    esp
  41a2fb:	sahf   
  41a2fc:	or     DWORD PTR ds:[edx-0x6521fff],edi
  41a303:	lods   al,BYTE PTR ds:[esi]
  41a304:	dec    ecx
  41a305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a306:	(bad)  
  41a307:	sti    
  41a308:	dec    esi
  41a309:	lock and edx,edx
  41a30c:	(bad)  
  41a30d:	sbb    dl,dl
  41a30f:	and    BYTE PTR [ebx-0x6c],cl
  41a312:	div    BYTE PTR ds:0x1d9a7a09
  41a318:	(bad)  
  41a31a:	cwde   
  41a31b:	sub    ch,BYTE PTR fs:[esi-0x4a71ee63]
  41a322:	lds    ebx,FWORD PTR [eax+0x46]
  41a325:	mov    esi,0xd93991cc
  41a32a:	shl    BYTE PTR [edi+ebx*4+0x685a9335],cl
  41a331:	and    al,0x9d
  41a333:	adc    eax,0xa153a173
  41a338:	mov    bh,al
  41a33a:	sbb    eax,0xa1b82e4b
  41a33f:	pop    edx
  41a340:	or     cl,dh
  41a342:	dec    edi
  41a343:	pop    esi
  41a344:	xor    dh,BYTE PTR [ebp-0x11]
  41a347:	leave  
  41a348:	xchg   ebx,eax
  41a349:	mov    ebp,0x323e4040
  41a34e:	pop    esi
  41a34f:	outs   dx,DWORD PTR ds:[esi]
  41a350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a351:	xchg   edx,eax
  41a352:	in     eax,dx
  41a353:	sub    eax,0x1a94e461
  41a358:	cmc    
  41a359:	addr16 dec ebx
  41a35b:	data16 fs mov bl,al
  41a35f:	pop    es
  41a360:	xor    DWORD PTR [ebp+0x5855ce42],ecx
  41a366:	and    BYTE PTR [edi+0x66561a2e],dh
  41a36c:	pop    es
  41a36d:	inc    ebp
  41a36e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a36f:	dec    edx
  41a370:	outs   dx,BYTE PTR ds:[esi]
  41a371:	fs dec eax
  41a373:	xchg   ecx,eax
  41a374:	mov    ecx,0xbff162ba
  41a379:	lods   al,BYTE PTR ds:[esi]
  41a37a:	mov    BYTE PTR [ebp-0x3c5eb56c],ch
  41a380:	data16 sbb BYTE PTR [ecx],bl
  41a383:	stc    
  41a384:	xor    al,0x17
  41a386:	xor    DWORD PTR [esi+0x13d81c27],edx
  41a38c:	ss clc 
  41a38e:	xchg   BYTE PTR [ebx+0x40],ah
  41a391:	shl    BYTE PTR [ecx+ebx*2-0x7f57ca62],cl
  41a398:	repz adc DWORD PTR [ebx+0x13],ecx
  41a39c:	stc    
  41a39d:	rcr    ah,1
  41a39f:	pop    edx
  41a3a0:	hlt    
  41a3a1:	in     eax,dx
  41a3a2:	clc    
  41a3a3:	mov    dl,0x5b
  41a3a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3a6:	push   esp
  41a3a7:	out    dx,al
  41a3a8:	mov    bl,0xe0
  41a3aa:	aas    
  41a3ab:	or     DWORD PTR [edx],eax
  41a3ad:	in     eax,dx
  41a3ae:	adc    dl,dl
  41a3b0:	push   0x29
  41a3b2:	loope  0x41a367
  41a3b4:	fcmovne st,st(2)
  41a3b6:	adc    edi,DWORD PTR [esi]
  41a3b8:	mov    dl,0x85
  41a3ba:	jae    0x41a3bf
  41a3bc:	sbb    ah,BYTE PTR [ebp-0x2c3feaae]
  41a3c2:	jg     0x41a372
  41a3c4:	test   DWORD PTR ds:[edi-0x734d3ee0],ebp
  41a3cb:	nop
  41a3cc:	mov    al,0xac
  41a3ce:	pop    edx
  41a3cf:	add    ebx,esi
  41a3d1:	push   es
  41a3d2:	add    DWORD PTR [ebp-0x52],ecx
  41a3d5:	xor    eax,0xca6a7578
  41a3da:	stos   BYTE PTR es:[edi],al
  41a3db:	xor    DWORD PTR [edx],ebx
  41a3dd:	ret    0xb392
  41a3e0:	mov    ds:0x16a6c481,al
  41a3e5:	dec    edx
  41a3e6:	in     al,dx
  41a3e7:	(bad)  
  41a3e8:	mov    DWORD PTR [eax+0x30cb7247],esp
  41a3ee:	test   ecx,esp
  41a3f0:	and    eax,0x8c09338e
  41a3f5:	add    ecx,DWORD PTR [edi]
  41a3f7:	test   eax,0xbf599f9a
  41a3fc:	sub    BYTE PTR [esi+0x26],ah
  41a3ff:	mov    eax,0xec146662
  41a404:	sub    ebx,ebx
  41a406:	out    0xe9,eax
  41a408:	push   esp
  41a409:	add    ch,BYTE PTR [ecx+0x76]
  41a40c:	pusha  
  41a40d:	sahf   
  41a40e:	push   0xffffff9e
  41a410:	xchg   edx,eax
  41a411:	push   cs
  41a412:	shl    al,1
  41a414:	js     0x41a46d
  41a416:	les    edx,FWORD PTR [ebx]
  41a418:	xor    esp,DWORD PTR [ebp-0x2c]
  41a41b:	pop    eax
  41a41c:	jmp    0x789f:0x74a269bf
  41a423:	push   eax
  41a424:	(bad)  
  41a425:	fwait
  41a426:	cmp    eax,0xccb22964
  41a42b:	and    ecx,DWORD PTR [eax]
  41a42d:	cmp    al,0xf1
  41a42f:	ret    0x75c
  41a432:	mov    al,dl
  41a434:	mov    al,BYTE PTR [edi]
  41a436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a437:	cmp    DWORD PTR [ebx],0xffffffb0
  41a43a:	sub    esi,DWORD PTR ds:0xfc9f3d59
  41a440:	jecxz  0x41a41a
  41a442:	rol    DWORD PTR [ecx],cl
  41a444:	dec    edx
  41a445:	pop    es
  41a446:	das    
  41a447:	aad    0xbf
  41a449:	xchg   DWORD PTR [ebx+0x31],ebp
  41a44c:	(bad)  
  41a44d:	jmp    0xb3d7:0x23ec6e35
  41a454:	outs   dx,DWORD PTR ds:[esi]
  41a455:	nop
  41a456:	ret    0x146f
  41a459:	mov    al,ds:0xf955d2a4
  41a45e:	and    al,0xdd
  41a460:	out    0x7f,eax
  41a462:	ficomp WORD PTR [edx+ebx*8]
  41a465:	jle    0x41a4d4
  41a467:	add    DWORD PTR ds:0xca7fa48d,0x8dcbd856
  41a471:	mov    cs,WORD PTR ds:0x2512b38c
  41a477:	pop    DWORD PTR ds:[eax+0x12]
  41a47b:	adc    ebx,DWORD PTR [ebp-0x2c]
  41a47e:	jo     0x41a437
  41a480:	ret    0x5dd8
  41a483:	loopne 0x41a45f
  41a485:	scas   eax,DWORD PTR es:[edi]
  41a486:	adc    DWORD PTR [edx+ebp*8+0x4a],ebx
  41a48a:	sahf   
  41a48b:	mov    esi,0x1337bc6d
  41a490:	fwait
  41a491:	popf   
  41a492:	or     dh,BYTE PTR [edi-0x374b39ec]
  41a498:	leave  
  41a499:	enter  0x33a7,0x5b
  41a49d:	pop    esi
  41a49e:	test   eax,0xd089b982
  41a4a3:	mov    ebp,0x5cfafa
  41a4a8:	or     DWORD PTR [esi+ebx*4-0x23b4454d],ebp
  41a4af:	xor    al,0x9a
  41a4b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4b3:	jno    0x41a477
  41a4b5:	pop    esi
  41a4b6:	ss icebp 
  41a4b8:	fsubr  QWORD PTR [ebx]
  41a4ba:	(bad)  
  41a4bc:	jo     0x41a487
  41a4be:	dec    ebp
  41a4bf:	fsubr  DWORD PTR [ebx-0x5a977920]
  41a4c5:	and    DWORD PTR [eax+0x123a32a7],ebx
  41a4cb:	test   ebp,0xa6789c52
  41a4d1:	jge    0x41a4ad
  41a4d3:	pop    ebp
  41a4d4:	call   0xe318:0xacdc0e29
  41a4db:	mov    al,0x1
  41a4dd:	pop    edx
  41a4de:	fnstcw WORD PTR [ebx+0x1a]
  41a4e1:	imul   eax,ebp,0x6559a5b0
  41a4e7:	sub    al,BYTE PTR [ecx+eax*1]
  41a4ea:	(bad)  
  41a4eb:	div    BYTE PTR [ebp+0x550e052]
  41a4f1:	rdpmc  
  41a4f3:	(bad)  
  41a4f5:	or     DWORD PTR [eax+0x12],esi
  41a4f8:	or     al,0xd1
  41a4fa:	cmp    ah,BYTE PTR [ebp+0x6209978a]
  41a500:	xchg   ecx,eax
  41a501:	or     eax,0xf4691380
  41a506:	push   esi
  41a507:	push   ecx
  41a508:	cdq    
  41a509:	(bad)  
  41a50a:	fdivp  st(2),st
  41a50c:	outs   dx,BYTE PTR ds:[esi]
  41a50d:	(bad)  
  41a50e:	ins    DWORD PTR es:[edi],dx
  41a50f:	add    BYTE PTR [eax+0x6a],dl
  41a512:	retf   
  41a513:	push   ecx
  41a514:	scas   eax,DWORD PTR es:[edi]
  41a515:	call   FWORD PTR [ecx+eax*1+0x128a92c8]
  41a51c:	inc    eax
  41a51d:	inc    ecx
  41a51e:	cld    
  41a51f:	inc    eax
  41a520:	aas    
  41a521:	dec    esi
  41a522:	ins    BYTE PTR es:[edi],dx
  41a523:	or     al,0x23
  41a525:	retf   0xf38b
  41a528:	stc    
  41a529:	imul   esp,DWORD PTR [edx],0x56f0e6cd
  41a52f:	mov    cs,WORD PTR [ebx+edi*8+0x50]
  41a533:	xlat   BYTE PTR ds:[ebx]
  41a534:	(bad)  
  41a535:	repnz int3 
  41a537:	in     eax,dx
  41a538:	inc    eax
  41a539:	pushf  
  41a53a:	jmp    0xcd29:0x20582a80
  41a541:	mov    WORD PTR [esp+ebp*1+0x4a],es
  41a545:	mov    cl,0x8
  41a547:	pop    eax
  41a548:	pop    ds
  41a549:	leave  
  41a54a:	push   0xe
  41a54c:	nop
  41a54d:	cs iret 
  41a54f:	ja     0x41a579
  41a551:	fiadd  WORD PTR [edx]
  41a553:	pop    ebx
  41a554:	in     eax,dx
  41a555:	cmp    al,0x91
  41a557:	mov    WORD PTR [eax+ebx*8],fs
  41a55a:	and    bh,BYTE PTR [edx+ecx*8+0x57e2a152]
  41a561:	push   edi
  41a562:	jno    0x41a573
  41a564:	add    al,0x7c
  41a566:	adc    dl,ah
  41a568:	xchg   BYTE PTR [ebp-0x20],cl
  41a56b:	inc    esp
  41a56c:	bound  ebp,QWORD PTR [ecx]
  41a56e:	ss out 0x6f,eax
  41a571:	or     eax,0x1e218a7b
  41a576:	mov    bl,0x64
  41a578:	aaa    
  41a579:	imul   edx,DWORD PTR [esi-0x2587526b],0x1d
  41a580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a581:	sbb    ah,bl
  41a583:	xor    al,0x42
  41a585:	lods   al,BYTE PTR cs:[esi]
  41a587:	dec    esp
  41a588:	mov    DWORD PTR [esi],esi
  41a58a:	mov    al,0x56
  41a58c:	inc    ebp
  41a58d:	add    BYTE PTR [edi+0x29716b50],cl
  41a593:	xchg   ecx,eax
  41a594:	cmp    dh,BYTE PTR [ecx]
  41a596:	inc    esi
  41a597:	push   ebp
  41a598:	or     DWORD PTR [ecx],edi
  41a59a:	pop    ebp
  41a59b:	sbb    al,0xa2
  41a59d:	sbb    DWORD PTR [eax+0x69],0x63
  41a5a1:	sahf   
  41a5a2:	movups XMMWORD PTR [eax],xmm5
  41a5a5:	mov    dl,BYTE PTR [ecx]
  41a5a7:	push   ds
  41a5a8:	sbb    BYTE PTR [edx],bl
  41a5aa:	cmp    esi,DWORD PTR [ebx+0x42]
  41a5ad:	inc    esp
  41a5ae:	mov    eax,ds:0xf6511ca5
  41a5b3:	mov    edx,0x1e0bbf5
  41a5b8:	aaa    
  41a5b9:	in     eax,dx
  41a5ba:	loop   0x41a5b4
  41a5bc:	shr    BYTE PTR ds:0xb91c175b,1
  41a5c2:	jmp    0xdf06d04e
  41a5c7:	or     eax,0x1d822979
  41a5cc:	push   ebx
  41a5cd:	inc    ecx
  41a5ce:	mov    ds:0xa81aef44,al
  41a5d3:	shl    eax,cl
  41a5d5:	or     DWORD PTR [eax],eax
  41a5d7:	sub    al,0x18
  41a5d9:	(bad)  
  41a5da:	jns    0x41a62f
  41a5dc:	(bad)  
  41a5de:	fnstenv [eax]
  41a5e0:	adc    eax,0x290aef8c
  41a5e5:	and    al,0xea
  41a5e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5e8:	dec    ecx
  41a5e9:	fs jmp 0xe829:0x563e75c0
  41a5f1:	cmp    al,0xfd
  41a5f3:	mov    BYTE PTR [edi],dh
  41a5f5:	pop    edx
  41a5f6:	cwde   
  41a5f7:	adc    ah,bh
  41a5f9:	push   ebp
  41a5fa:	leave  
  41a5fb:	(bad)  
  41a5fc:	retf   
  41a5fd:	or     BYTE PTR [eax+0x15],ah
  41a600:	xor    eax,0xca4c734f
  41a605:	push   ecx
  41a606:	mov    DWORD PTR [eax+0x523ce834],eax
  41a60c:	call   0x74998a24
  41a611:	cmp    DWORD PTR [eax+0x84e24c9],ecx
  41a617:	shl    DWORD PTR [ebp+0x46],0x1d
  41a61b:	mov    WORD PTR [ebx-0x5f],ds
  41a61e:	mov    bh,0x22
  41a620:	jge    0x41a63d
  41a622:	nop
  41a623:	push   esp
  41a624:	and    eax,eax
  41a626:	mov    edi,0xe2d21f15
  41a62b:	in     al,0x61
  41a62d:	out    dx,al
  41a62e:	or     eax,DWORD PTR [ebx-0xd]
  41a631:	rcl    DWORD PTR [edx],0x10
  41a634:	js     0x41a648
  41a636:	cmp    bh,BYTE PTR [eax-0x61]
  41a639:	arpl   WORD PTR [esi],ax
  41a63b:	or     bh,cl
  41a63d:	ss es loope 0x41a62f
  41a641:	xor    al,0x4b
  41a643:	sbb    ebx,esp
  41a645:	mov    ah,0xcc
  41a647:	pop    ss
  41a648:	pop    ss
  41a649:	mov    ah,BYTE PTR [esi+0x1d3675df]
  41a64f:	pop    eax
  41a650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a651:	call   ebp
  41a653:	std    
  41a654:	dec    edx
  41a655:	ret    0x248f
  41a658:	mov    esp,0x3a933d97
  41a65d:	add    edi,DWORD PTR [edi]
  41a65f:	imul   ebp,DWORD PTR [edi],0x10
  41a662:	inc    edi
  41a663:	pop    ebx
  41a664:	or     BYTE PTR [ebx-0x6a87ed04],dl
  41a66a:	xlat   BYTE PTR ds:[ebx]
  41a66b:	xor    ebx,ebx
  41a66d:	imul   ecx,DWORD PTR [ecx+0x1c1d15],0x9b6f900f
  41a677:	xchg   esp,eax
  41a678:	mul    dh
  41a67a:	lds    edi,FWORD PTR [ebx+0x77be646]
  41a680:	pop    ss
  41a681:	mov    ds:0x99aae8eb,al
  41a686:	or     eax,0x9bb5831b
  41a68b:	pop    esi
  41a68c:	mov    DWORD PTR [esi],eax
  41a68e:	push   edi
  41a68f:	jmp    0xbbf6:0xad4c0c7f
  41a696:	sub    BYTE PTR [edx+0x16],ch
  41a699:	inc    edx
  41a69a:	mov    ch,0x65
  41a69c:	sub    edi,DWORD PTR [edx*2+0x6f92179a]
  41a6a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6a4:	cdq    
  41a6a5:	test   eax,0x56f3e4b8
  41a6aa:	sbb    dh,BYTE PTR [ecx-0x447a5987]
  41a6b0:	jg     0x41a6a8
  41a6b2:	fldenv [ebp+0x409a4610]
  41a6b8:	outs   dx,DWORD PTR ds:[esi]
  41a6b9:	rcl    DWORD PTR [eax-0x45d68a14],cl
  41a6bf:	out    0x5f,al
  41a6c1:	stc    
  41a6c2:	and    BYTE PTR [ebx+0x3c7a6c22],bh
  41a6c8:	push   0x79a696e7
  41a6cd:	push   ss
  41a6ce:	pop    ebx
  41a6cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6d0:	mov    bl,0x37
  41a6d2:	cli    
  41a6d3:	cli    
  41a6d4:	cmp    DWORD PTR [ecx],esi
  41a6d6:	cwde   
  41a6d7:	loop   0x41a722
  41a6d9:	push   ebx
  41a6da:	(bad)  
  41a6db:	ins    BYTE PTR es:[edi],dx
  41a6dc:	jb     0x41a6a2
  41a6de:	call   0xfb01:0x35d94c0d
  41a6e5:	(bad)  
  41a6e6:	idiv   DWORD PTR [ecx]
  41a6e8:	pop    ss
  41a6e9:	dec    edx
  41a6ea:	pop    ecx
  41a6eb:	pop    ss
  41a6ec:	shl    BYTE PTR [ecx+eax*2+0x6fb600ae],cl
  41a6f3:	arpl   WORD PTR [edi+0x255f5a07],ax
  41a6f9:	fs cmp esp,eax
  41a6fc:	push   ebx
  41a6fd:	out    0xa,eax
  41a6ff:	sti    
  41a700:	das    
  41a701:	jmp    0xb487335
  41a706:	sar    BYTE PTR [eax-0x25],0x21
  41a70a:	jne    0x41a756
  41a70c:	pop    eax
  41a70d:	add    DWORD PTR [esi-0x76641124],esp
  41a713:	std    
  41a714:	test   BYTE PTR [edx+eiz*2],dl
  41a717:	xor    edx,esi
  41a719:	cld    
  41a71a:	stc    
  41a71b:	scas   al,BYTE PTR es:[edi]
  41a71c:	or     ch,cl
  41a71e:	xor    DWORD PTR [eax+eiz*8+0x2623a396],esp
  41a725:	mov    dl,0x6b
  41a727:	fadd   DWORD PTR [ecx]
  41a729:	cmc    
  41a72a:	xor    edx,DWORD PTR [ecx+0x5e]
  41a72d:	add    BYTE PTR [eax],al
  41a72f:	add    BYTE PTR [eax],al
  41a731:	add    BYTE PTR [esi+0x6f],cl
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	sahf   
  41a73f:	mov    ecx,0x23a99677
  41a744:	add    DWORD PTR [eax],eax
  41a746:	repz add al,0x0
  41a749:	add    cl,al
  41a74b:	jge    0x41a6f0
  41a74d:	and    al,0x13
  41a74f:	int    0x14
  41a751:	fisub  WORD PTR [edx+edi*8]
  41a754:	fld    QWORD PTR [eax-0x3e1f4a4c]
  41a75a:	push   ebp
  41a75b:	cmp    cl,ah
  41a75d:	repnz sub esp,0x41ea0ab9
  41a764:	add    eax,0x61445f7f
  41a769:	mul    BYTE PTR [eax+0x53d2ae8c]
  41a76f:	fmul   DWORD PTR ds:0x9b12cd78
  41a775:	repnz cs stos DWORD PTR es:[edi],eax
  41a778:	mov    edi,0x9acde186
  41a77d:	(bad)  
  41a77e:	sub    al,0x9e
  41a780:	sub    BYTE PTR [esi+0x4],0xab
  41a784:	sbb    eax,DWORD PTR [eax-0x4bfb6afd]
  41a78a:	sbb    bh,BYTE PTR [esp+ebp*4-0x5]
  41a78e:	retf   0xe1b0
  41a791:	dec    esp
  41a792:	lahf   
  41a793:	aad    0xd3
  41a795:	loope  0x41a7a8
  41a797:	test   BYTE PTR [ebx+0x1b],dl
  41a79a:	xor    ebp,esp
  41a79c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a79d:	mov    WORD PTR [ecx+0x68],es
  41a7a0:	dec    ecx
  41a7a1:	cmp    DWORD PTR [eax+0x34],eax
  41a7a4:	ins    BYTE PTR es:[edi],dx
  41a7a5:	icebp  
  41a7a6:	(bad)  
  41a7a7:	and    DWORD PTR [esi-0x2183f295],ecx
  41a7ad:	into   
  41a7ae:	lods   eax,DWORD PTR ds:[esi]
  41a7af:	inc    eax
  41a7b0:	xchg   dl,ah
  41a7b2:	adc    eax,0x8cc6d8aa
  41a7b7:	and    al,0xde
  41a7b9:	scas   eax,DWORD PTR es:[edi]
  41a7ba:	cld    
  41a7bb:	or     al,0xc4
  41a7bd:	or     al,dh
  41a7bf:	cdq    
  41a7c0:	add    DWORD PTR [esp+eiz*4],ebp
  41a7c3:	cmp    dh,dh
  41a7c5:	push   edi
  41a7c6:	test   BYTE PTR [ebx],dl
  41a7c8:	add    bh,BYTE PTR [ebx+0x2a6fbcd9]
  41a7ce:	int    0x27
  41a7d0:	rcr    DWORD PTR ds:[eax-0x71],cl
  41a7d4:	pop    es
  41a7d5:	dec    ebp
  41a7d6:	dec    ecx
  41a7d7:	iret   
  41a7d8:	leave  
  41a7d9:	push   ebp
  41a7da:	mov    eax,ds:0xc1d1462e
  41a7df:	dec    ebx
  41a7e0:	and    eax,0x5cb52df9
  41a7e5:	sub    al,0x71
  41a7e7:	mov    bl,0x2f
  41a7e9:	xor    dl,BYTE PTR [ecx]
  41a7eb:	sub    al,0x5f
  41a7ed:	cdq    
  41a7ee:	sub    DWORD PTR [eax],0xffffffae
  41a7f1:	dec    ebp
  41a7f2:	ror    BYTE PTR [edi-0x297c651a],1
  41a7f8:	xor    al,0x3
  41a7fa:	ret    0x1ccc
  41a7fd:	push   sp
  41a7ff:	mov    bl,0x79
  41a801:	fsubr  QWORD PTR [ecx]
  41a803:	jmp    0x5ff83d1c
  41a808:	fld    TBYTE PTR [ebp-0x4180714a]
  41a80e:	jg     0x41a7ec
  41a810:	call   FWORD PTR [esi+0x45d73696]
  41a816:	stc    
  41a817:	stos   DWORD PTR es:[edi],eax
  41a818:	add    al,0x91
  41a81a:	pusha  
  41a81b:	fyl2x  
  41a81d:	push   cs
  41a81e:	(bad)  
  41a81f:	adc    ah,BYTE PTR [edx+ecx*1-0x69c6adb2]
  41a826:	fistp  DWORD PTR [edx+0x5fc0e963]
  41a82c:	test   al,0xf1
  41a82e:	bound  ecx,QWORD PTR [eax]
  41a830:	fdivr  DWORD PTR [ecx]
  41a832:	adc    al,0x16
  41a834:	cmp    al,BYTE PTR [ecx+0x18]
  41a837:	pop    ecx
  41a838:	out    0x2f,al
  41a83a:	push   eax
  41a83b:	or     BYTE PTR [eax+0x39],ah
  41a83e:	popa   
  41a83f:	cld    
  41a840:	push   0x2cd4fc45
  41a845:	xchg   esi,eax
  41a846:	fcom   DWORD PTR [ebx-0x57]
  41a849:	mov    eax,0xf54e99b3
  41a84e:	cmp    eax,DWORD PTR [ecx+ebp*4-0x567375a3]
  41a855:	adc    DWORD PTR [edi-0x1e],eax
  41a858:	adc    al,0x35
  41a85a:	inc    ebp
  41a85b:	push   edi
  41a85c:	cmp    eax,0x85af7b61
  41a861:	fisub  WORD PTR [ebx-0x41a33376]
  41a867:	inc    esi
  41a868:	addr16 push eax
  41a86a:	mov    esi,0x50d9c050
  41a86f:	add    eax,0x4a83a4f9
  41a874:	xor    edx,edx
  41a876:	mov    bh,0x65
  41a878:	div    al
  41a87a:	stos   BYTE PTR es:[edi],al
  41a87b:	inc    esi
  41a87c:	sbb    eax,DWORD PTR [ebx-0x120d638]
  41a882:	push   ds
  41a883:	push   es
  41a884:	shl    DWORD PTR [ebp-0x11],1
  41a887:	cmp    eax,0x1b357277
  41a88c:	push   ebp
  41a88d:	mov    eax,ds:0x95831f0b
  41a892:	and    al,0x5b
  41a894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a895:	sti    
  41a896:	scas   eax,DWORD PTR es:[edi]
  41a897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a898:	pop    edi
  41a899:	stos   DWORD PTR es:[edi],eax
  41a89a:	(bad)  
  41a89b:	push   0x3e
  41a89d:	inc    eax
  41a89e:	xchg   edx,eax
  41a89f:	jae    0x41a909
  41a8a1:	cs pop edx
  41a8a3:	cmp    edx,DWORD PTR [esi]
  41a8a5:	cli    
  41a8a6:	jg     0x41a891
  41a8a8:	imul   esp,DWORD PTR [ebp+0x2b],0x14292a48
  41a8af:	dec    eax
  41a8b0:	fcmovnbe st,st(4)
  41a8b2:	dec    edx
  41a8b3:	mov    esi,0x7acd0517
  41a8b8:	xchg   ebp,eax
  41a8b9:	dec    eax
  41a8ba:	cdq    
  41a8bb:	ja     0x41a91a
  41a8bd:	out    dx,al
  41a8be:	mov    dl,0x5a
  41a8c0:	inc    ebp
  41a8c1:	int3   
  41a8c2:	add    ebx,edx
  41a8c4:	lods   al,BYTE PTR ds:[esi]
  41a8c5:	sub    al,0x6a
  41a8c7:	mov    eax,0xd03749a7
  41a8cc:	adc    al,BYTE PTR [edx-0x2]
  41a8cf:	setbe  BYTE PTR [eax]
  41a8d2:	clc    
  41a8d3:	sbb    ah,BYTE PTR [esp+eax*8+0x5630c1f5]
  41a8da:	xchg   ebx,eax
  41a8db:	push   ebx
  41a8dc:	sub    BYTE PTR [ecx],ch
  41a8de:	sar    BYTE PTR [eax+0x73],cl
  41a8e1:	mov    eax,ds:0x67a2adf3
  41a8e6:	test   BYTE PTR [eax-0x67],dl
  41a8e9:	jnp    0x41a946
  41a8eb:	(bad)  
  41a8ec:	imul   esi,ecx,0x821cc373
  41a8f2:	loopne 0x41a901
  41a8f4:	cli    
  41a8f5:	or     bh,dh
  41a8f7:	mov    DWORD PTR [edx+0x1924e95e],esi
  41a8fd:	push   edi
  41a8fe:	mov    BYTE PTR [ebx-0x70],cl
  41a901:	push   ebp
  41a902:	cdq    
  41a903:	pop    esp
  41a904:	(bad)  
  41a905:	call   0xb2bebd8c
  41a90a:	adc    esi,DWORD PTR [esi+0x40fe41e0]
  41a910:	sbb    al,0x3c
  41a912:	sub    al,0x25
  41a914:	clc    
  41a915:	iret   
  41a916:	popf   
  41a917:	xlat   BYTE PTR ds:[ebx]
  41a918:	(bad)  
  41a919:	aas    
  41a91a:	jg     0x41a91a
  41a91c:	aad    0x2
  41a91e:	jecxz  0x41a8e1
  41a920:	mov    ds:0xa5f5796e,eax
  41a925:	(bad)  
  41a926:	lods   eax,DWORD PTR ds:[esi]
  41a927:	mov    esi,0x3ff988a0
  41a92c:	cmp    DWORD PTR [esi+0x30],edi
  41a92f:	inc    ebx
  41a930:	(bad)  
  41a931:	xchg   esi,eax
  41a932:	mov    bh,0x48
  41a934:	push   0x995098dc
  41a939:	lahf   
  41a93a:	sbb    cl,BYTE PTR [edx+0x230386c7]
  41a940:	aam    0x2e
  41a942:	inc    esi
  41a943:	mov    ebp,0xf8ba4589
  41a948:	sub    eax,0xdd1720c9
  41a94d:	test   DWORD PTR [edx],0x9935c582
  41a953:	inc    edi
  41a954:	(bad)  
  41a955:	test   eax,0x3a433db3
  41a95a:	xchg   ebx,eax
  41a95b:	and    BYTE PTR [ebp-0x384d80c7],0x30
  41a962:	push   ecx
  41a963:	test   DWORD PTR cs:[ebx-0x19f81e3a],ecx
  41a96a:	sbb    dl,BYTE PTR [edx]
  41a96c:	mov    ds:0x8fcbfdde,al
  41a971:	lea    edx,[edi-0x8]
  41a974:	clc    
  41a975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a976:	jmp    0x7a88:0xf5085b97
  41a97d:	jmp    0x41a978
  41a97f:	inc    edx
  41a980:	add    BYTE PTR [esi+0x26],0x57
  41a984:	loop   0x41a9ae
  41a986:	sub    al,0xe5
  41a988:	jle    0x41a9cc
  41a98a:	mov    ecx,0x1d619ac6
  41a98f:	ss js  0x41a9f5
  41a992:	dec    edi
  41a993:	lods   eax,DWORD PTR ds:[esi]
  41a994:	xor    ah,BYTE PTR [esi+0x6c5cd702]
  41a99a:	call   0x965:0x2aed50f2
  41a9a1:	adc    ch,BYTE PTR [esi-0x34ba286f]
  41a9a7:	es iret 
  41a9a9:	(bad)  
  41a9aa:	pop    esi
  41a9ab:	mov    al,ds:0x9892bbdb
  41a9b0:	push   edi
  41a9b1:	gs jno 0x41a9de
  41a9b4:	or     eax,0x77efdc41
  41a9b9:	jecxz  0x41a97a
  41a9bb:	jecxz  0x41a97c
  41a9bd:	pop    esi
  41a9be:	and    ax,0x841b
  41a9c2:	fwait
  41a9c3:	and    al,0x69
  41a9c5:	ds test al,0x69
  41a9c8:	sbb    DWORD PTR [edx],ecx
  41a9ca:	call   0xd650ab3e
  41a9cf:	sahf   
  41a9d0:	push   ecx
  41a9d1:	jmp    0x1ada:0x6143d740
  41a9d8:	dec    esp
  41a9d9:	pop    esi
  41a9da:	inc    edi
  41a9db:	pop    edi
  41a9dc:	or     ecx,DWORD PTR [eax+0x5d64307c]
  41a9e2:	ja     0x41a9a5
  41a9e4:	sbb    BYTE PTR [esi-0xa],al
  41a9e7:	xchg   esi,eax
  41a9e8:	das    
  41a9e9:	sub    BYTE PTR [ebp+0x70ff47fb],bh
  41a9ef:	scas   al,BYTE PTR es:[edi]
  41a9f0:	mov    ecx,ds
  41a9f2:	sahf   
  41a9f3:	call   0xd85b0102
  41a9f8:	xchg   ebp,eax
  41a9f9:	adc    DWORD PTR [esi+0x11],ecx
  41a9fc:	or     al,0x98
  41a9fe:	mov    WORD PTR [edx+ebx*1+0x21c1b953],fs
  41aa05:	sti    
  41aa06:	pop    esi
  41aa07:	lahf   
  41aa08:	push   ss
  41aa09:	push   ss
  41aa0a:	into   
  41aa0b:	push   ebp
  41aa0c:	dec    esi
  41aa0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa0e:	inc    edi
  41aa0f:	mov    ecx,0x1210edb5
  41aa14:	pushf  
  41aa15:	loope  0x41aa2c
  41aa17:	sbb    ebx,DWORD PTR [ebp-0x118df0c0]
  41aa1d:	mov    ecx,DWORD PTR [edx+0x78]
  41aa20:	int    0x6
  41aa22:	shr    BYTE PTR [ecx-0x746a608],0xa4
  41aa29:	fwait
  41aa2a:	sub    BYTE PTR [esi-0x51],0x3d
  41aa2e:	xor    eax,0x90b1b1ea
  41aa33:	jp     0x41aa4f
  41aa35:	(bad)  [esi]
  41aa37:	test   al,0x33
  41aa39:	ficomp DWORD PTR [edx]
  41aa3b:	pushf  
  41aa3c:	mov    ecx,0xe98c5fb0
  41aa41:	arpl   bx,dx
  41aa43:	push   ebp
  41aa44:	cmp    eax,0x26420708
  41aa49:	mov    eax,ds:0xfb6806dd
  41aa4e:	mov    ecx,0xd70165fc
  41aa53:	push   edi
  41aa54:	loopne 0x41aa47
  41aa56:	lock cdq 
  41aa58:	pop    edi
  41aa59:	in     eax,dx
  41aa5a:	mov    esi,0xaa515bd1
  41aa5f:	retf   0xb35b
  41aa62:	rol    BYTE PTR [esi-0x3b],0x7
  41aa66:	fs dec ecx
  41aa68:	push   ss
  41aa69:	and    BYTE PTR [edi-0x9ed163],bh
  41aa6f:	and    eax,0xe2872c79
  41aa74:	add    dl,al
  41aa76:	mov    ecx,esp
  41aa78:	or     al,0xb
  41aa7a:	mov    ecx,eax
  41aa7c:	pop    DWORD PTR ds:0xd50420da
  41aa82:	jl     0x41aa4a
  41aa84:	retf   
  41aa85:	cmovs  ecx,DWORD PTR [edi]
  41aa88:	cmp    eax,DWORD PTR [edx+0x39]
  41aa8b:	dec    ebp
  41aa8c:	adc    edi,DWORD PTR [edx+0x65912f30]
  41aa92:	out    0x71,al
  41aa94:	push   cs
  41aa95:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41aa97:	test   al,0x8f
  41aa99:	daa    
  41aa9a:	rcr    DWORD PTR [ebx-0x3a79b821],0x5e
  41aaa1:	jecxz  0x41aa9b
  41aaa3:	(bad)  
  41aaa4:	mov    eax,ds:0x8e43a0c4
  41aaa9:	popa   
  41aaaa:	std    
  41aaab:	popa   
  41aaac:	ret    
  41aaad:	mul    BYTE PTR [esi+0x79]
  41aab0:	adc    eax,0x6f592345
  41aab5:	sbb    bl,al
  41aab7:	cmp    al,0xcd
  41aab9:	out    0x35,eax
  41aabb:	sbb    eax,0x14587b01
  41aac0:	add    eax,0x9acd1994
  41aac5:	loopne 0x41aaf6
  41aac7:	cmp    bl,ch
  41aac9:	xchg   BYTE PTR ds:0x71cd73a7,ch
  41aacf:	call   0xe086:0x921a8f
  41aad6:	retf   
  41aad7:	xor    eax,0x189547ec
  41aadc:	test   ebp,0x42e07aab
  41aae2:	(bad)  
  41aae3:	pop    ss
  41aae4:	sbb    DWORD PTR [esi-0x20f99daa],ecx
  41aaea:	and    eax,0x5eab9062
  41aaef:	mov    edi,0x9fda2c47
  41aaf4:	in     al,dx
  41aaf5:	test   eax,0xba908cc8
  41aafa:	cmp    esp,DWORD PTR [eax-0x55]
  41aafd:	mov    ecx,0xe8b28052
  41ab02:	scas   eax,DWORD PTR es:[edi]
  41ab03:	push   ebp
  41ab04:	inc    esi
  41ab05:	nop
  41ab06:	jmp    FWORD PTR [edi-0x5d9e0a4e]
  41ab0c:	fld    st(6)
  41ab0e:	fidivr WORD PTR [ecx-0x706abb6e]
  41ab14:	ret    
  41ab15:	push   esi
  41ab16:	into   
  41ab17:	gs enter 0xda8f,0x9f
  41ab1c:	out    dx,eax
  41ab1d:	popf   
  41ab1e:	xlat   BYTE PTR ds:[ebx]
  41ab1f:	sub    edx,DWORD PTR [edi]
  41ab21:	sbb    dh,BYTE PTR [ecx]
  41ab23:	cdq    
  41ab24:	xor    BYTE PTR [ebp-0x7fce55d9],bh
  41ab2a:	sub    bl,BYTE PTR ss:[edx-0x11]
  41ab2e:	and    al,0x1
  41ab30:	(bad)  [ecx]
  41ab32:	ror    BYTE PTR [esi],1
  41ab34:	sub    ebx,DWORD PTR [eax-0xbf83fea]
  41ab3a:	adc    edx,DWORD PTR [eax]
  41ab3c:	and    DWORD PTR ds:0x40c51004,0x37
  41ab43:	mov    BYTE PTR [ecx-0x7994c760],dl
  41ab49:	sub    al,0xac
  41ab4b:	fnstenv [ebp-0x56d56496]
  41ab51:	(bad)  
  41ab52:	jmp    0x23a6:0x17ff6e8d
  41ab59:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab5b:	pop    ebp
  41ab5c:	fistp  WORD PTR [esi]
  41ab5e:	inc    ebp
  41ab5f:	in     al,0x1
  41ab61:	sub    ecx,DWORD PTR [ebp-0x32]
  41ab64:	lds    ebp,FWORD PTR [ebp+eax*2+0x5c82fd66]
  41ab6b:	lock mov ch,0x0
  41ab6e:	fisttp DWORD PTR [eax+eax*2]
  41ab71:	call   0xfd42:0x8659a158
  41ab78:	rcl    BYTE PTR [edi],0xda
  41ab7b:	lock jmp 0x41ab85
  41ab7e:	cdq    
  41ab7f:	sbb    al,0x7e
  41ab81:	pop    ds
  41ab82:	sub    DWORD PTR [eax+0x4a],edx
  41ab85:	dec    esi
  41ab86:	cwde   
  41ab87:	adc    DWORD PTR [esp+ecx*1],edx
  41ab8a:	pop    ebx
  41ab8b:	neg    esi
  41ab8d:	fdiv   QWORD PTR [ebx-0x6b5c9971]
  41ab93:	(bad)  
  41ab94:	rcr    DWORD PTR [edi],cl
  41ab96:	jg     0x41ab78
  41ab98:	push   ebp
  41ab99:	ret    0x44e
  41ab9c:	in     eax,dx
  41ab9d:	hlt    
  41ab9e:	(bad)  
  41ab9f:	pop    ebx
  41aba0:	cmp    edi,DWORD PTR [esi]
  41aba2:	sar    DWORD PTR [edi],cl
  41aba4:	mov    bl,BYTE PTR [edi+0x30]
  41aba7:	aaa    
  41aba8:	dec    esp
  41aba9:	xor    eax,0xe73ba6e0
  41abae:	inc    esi
  41abaf:	leave  
  41abb0:	test   edx,0xb42e8872
  41abb6:	jbe    0x41abdb
  41abb8:	js     0x41abcc
  41abba:	jmp    0x41abdb
  41abbc:	or     bh,BYTE PTR [ebx]
  41abbe:	mov    dl,0xff
  41abc0:	xor    BYTE PTR [ebp+0x456583ad],cl
  41abc6:	and    esp,eax
  41abc8:	sub    ah,BYTE PTR ds:0x5ca5cda0
  41abce:	mov    al,ds:0xf3ffd256
  41abd3:	arpl   WORD PTR [ebx],si
  41abd5:	mov    ah,0x85
  41abd7:	adc    cl,BYTE PTR [ecx]
  41abd9:	fild   DWORD PTR [ebx-0x631deb80]
  41abdf:	lods   al,BYTE PTR ds:[esi]
  41abe0:	hlt    
  41abe1:	sub    al,0xb4
  41abe3:	pushf  
  41abe4:	and    bl,0xec
  41abe7:	jae    0x41abb0
  41abe9:	(bad)  
  41abeb:	popa   
  41abec:	into   
  41abed:	sbb    ch,cl
  41abef:	dec    edx
  41abf0:	jmp    0x2d8620b
  41abf5:	out    dx,eax
  41abf6:	loop   0x41ac15
  41abf8:	and    bl,BYTE PTR [edi]
  41abfa:	mov    al,ds:0xd302fd54
  41abff:	pop    edx
  41ac00:	jnp    0x41abab
  41ac02:	les    edi,FWORD PTR [esi]
  41ac04:	lock adc al,0x96
  41ac07:	aaa    
  41ac08:	adc    ah,ch
  41ac0a:	js     0x41abf5
  41ac0c:	cmp    edx,DWORD PTR [ebx]
  41ac0e:	or     al,0xd2
  41ac10:	into   
  41ac11:	inc    bp
  41ac13:	call   0xa1cad0a0
  41ac18:	add    eax,0x17896d4
  41ac1d:	mov    ecx,0xe92fbf82
  41ac22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac23:	dec    bx
  41ac25:	mov    DWORD PTR [ebx-0x54],0xe2976b91
  41ac2c:	ret    0xa86c
  41ac2f:	ds loopne 0x41ac78
  41ac32:	pop    eax
  41ac33:	lds    esp,FWORD PTR [ebx+0x5]
  41ac36:	lods   eax,DWORD PTR ds:[esi]
  41ac37:	les    edi,FWORD PTR [eax-0x21]
  41ac3a:	mov    cl,0xb
  41ac3c:	push   eax
  41ac3d:	add    BYTE PTR [eax],al
  41ac3f:	add    BYTE PTR [eax],al
  41ac41:	add    BYTE PTR [ebp+0x4d],cl
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	xchg   BYTE PTR [edi*4+0x1289c29],bh
  41ac55:	add    bl,dh
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR ds:0x9cfd2d2c,dh
  41ac5f:	cld    
  41ac60:	cmp    al,0xfd
  41ac62:	rdtsc  
  41ac64:	cmc    
  41ac65:	outs   dx,BYTE PTR ds:[esi]
  41ac66:	pop    ds
  41ac67:	add    BYTE PTR [edx+0x4cc69a4f],0xed
  41ac6e:	jo     0x41aca2
  41ac70:	stos   BYTE PTR es:[edi],al
  41ac71:	sbb    BYTE PTR [edi-0xac2343e],0x1e
  41ac78:	inc    esi
  41ac79:	xchg   esi,eax
  41ac7a:	stc    
  41ac7b:	ins    BYTE PTR es:[edi],dx
  41ac7c:	mov    eax,ds:0x5fb56acf
  41ac81:	jno    0x41ac0e
  41ac83:	sbb    ebp,eax
  41ac85:	call   0xa38edccb
  41ac8a:	std    
  41ac8b:	adc    BYTE PTR [ecx],0xec
  41ac8e:	mov    esp,0xc65df035
  41ac93:	dec    ebx
  41ac94:	inc    ecx
  41ac95:	lods   eax,DWORD PTR ds:[esi]
  41ac96:	cld    
  41ac97:	loope  0x41ace5
  41ac99:	lahf   
  41ac9a:	mov    WORD PTR [ebp-0x561d71b5],ds
  41aca0:	push   es
  41aca1:	loope  0x41ad1e
  41aca3:	les    edi,FWORD PTR [eax-0x65]
  41aca6:	push   eax
  41aca7:	xchg   edx,eax
  41aca8:	and    al,BYTE PTR [ecx-0x260fc61]
  41acae:	xchg   ecx,eax
  41acaf:	rcr    DWORD PTR ds:0x1227fdf9,cl
  41acb5:	jae    0x41acaa
  41acb7:	arpl   si,ax
  41acb9:	div    BYTE PTR [ebp+0x77]
  41acbc:	aad    0x74
  41acbe:	fsub   DWORD PTR [esi]
  41acc0:	pop    esp
  41acc1:	cmp    eax,0xd3bc4fff
  41acc6:	stc    
  41acc7:	add    eax,0x54f0835f
  41accc:	push   esi
  41accd:	sbb    dh,BYTE PTR [ecx]
  41accf:	pop    esp
  41acd0:	mov    ebp,DWORD PTR [edx]
  41acd2:	and    cl,ah
  41acd4:	sti    
  41acd5:	in     eax,dx
  41acd6:	retf   0x44a1
  41acd9:	jmp    0xbfcc:0x474e6ef5
  41ace0:	mov    ds:0x4c8157dd,al
  41ace5:	daa    
  41ace6:	in     eax,0x44
  41ace8:	add    esp,eax
  41acea:	sbb    al,ch
  41acec:	das    
  41aced:	jmp    0x7cc1:0xf8a343d3
  41acf4:	jae    0x41acd0
  41acf6:	jge    0x41ad34
  41acf8:	rol    DWORD PTR [eiz*2+0x42cca136],cl
  41acff:	loopne 0x41acbd
  41ad01:	or     DWORD PTR [edx+0x1a],ecx
  41ad04:	daa    
  41ad05:	icebp  
  41ad06:	push   ebp
  41ad07:	or     ch,BYTE PTR ds:0x90c23034
  41ad0d:	nop
  41ad0e:	mov    dl,0x29
  41ad10:	add    ecx,eax
  41ad12:	bound  eax,QWORD PTR [ecx-0x6f]
  41ad15:	cli    
  41ad16:	mov    ecx,0x299e82a1
  41ad1b:	ins    BYTE PTR es:[edi],dx
  41ad1c:	jp     0x41acd9
  41ad1e:	sub    eax,0x3ed61187
  41ad23:	in     al,0xdd
  41ad25:	add    DWORD PTR [ebp+0x3219110a],edi
  41ad2b:	mov    bh,0x1e
  41ad2d:	push   0x40a9a39c
  41ad32:	sahf   
  41ad33:	mov    al,BYTE PTR [esi+0x2dca0813]
  41ad39:	mov    cl,0xa9
  41ad3b:	push   0xf3f68a45
  41ad40:	je     0x41ad41
  41ad42:	in     eax,dx
  41ad43:	xor    eax,0xc55054ea
  41ad48:	mov    ss,WORD PTR [eax+0x27eee518]
  41ad4e:	adc    edi,edi
  41ad50:	adc    DWORD PTR [ebp+0x5d21eca1],eax
  41ad56:	es push ds
  41ad58:	xchg   edx,eax
  41ad59:	mov    ch,0x8e
  41ad5b:	push   ecx
  41ad5c:	xor    edx,DWORD PTR [ebx+0x60]
  41ad5f:	add    al,0xd0
  41ad61:	dec    ecx
  41ad62:	mov    ebx,0xa19bc148
  41ad67:	cmp    eax,0x4a1ccce2
  41ad6c:	cmp    esp,eax
  41ad6e:	push   es
  41ad6f:	sbb    BYTE PTR gs:[ebp+0x1d54775b],0x61
  41ad77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad78:	cmp    edx,ebx
  41ad7a:	imul   ebx,esi,0x1b2f387d
  41ad80:	cmp    cl,BYTE PTR [ecx+0x1a68d80d]
  41ad86:	pushf  
  41ad87:	and    al,0x70
  41ad89:	addr16 ss out 0xe6,eax
  41ad8d:	jle    0x41ad17
  41ad8f:	jmp    0x41adb6
  41ad91:	jae    0x41ad41
  41ad93:	rcr    BYTE PTR ds:0x6dfd4573,cl
  41ad99:	ds mov al,0xe
  41ad9c:	pop    edx
  41ad9d:	sub    BYTE PTR [ecx+eiz*8+0x59],0xfe
  41ada2:	imul   edi,ebp,0x2392e153
  41ada8:	in     al,0xb5
  41adaa:	xchg   ecx,eax
  41adab:	cs ret 0x2944
  41adaf:	cmc    
  41adb0:	clc    
  41adb1:	imul   esi,DWORD PTR [eax+edi*8],0x41
  41adb5:	cmp    DWORD PTR [edx],esi
  41adb7:	sti    
  41adb8:	icebp  
  41adb9:	adc    eax,0xa37d3693
  41adbe:	pop    ebx
  41adbf:	pop    eax
  41adc0:	aas    
  41adc1:	popa   
  41adc2:	cmp    edx,DWORD PTR [edx-0x4ab14f68]
  41adc8:	sub    al,0xe2
  41adca:	lea    edx,[ecx]
  41adcc:	jnp    0x41ad9f
  41adce:	loopne 0x41adfc
  41add0:	les    edx,FWORD PTR [ebx]
  41add2:	int3   
  41add3:	(bad)  
  41add4:	cli    
  41add5:	in     eax,0xb2
  41add7:	add    ebp,DWORD PTR [ebx+esi*4]
  41adda:	pop    ss
  41addb:	dec    ebp
  41addc:	mov    dl,0x7a
  41adde:	sbb    eax,0x8e75100a
  41ade3:	pop    ds
  41ade4:	in     eax,dx
  41ade5:	push   esi
  41ade6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ade7:	mov    bl,0x69
  41ade9:	sub    edx,esi
  41adeb:	mov    ds:0xc3209cd0,eax
  41adf0:	jne    0x41ae11
  41adf2:	inc    esp
  41adf3:	and    al,0x7d
  41adf5:	cmp    ecx,DWORD PTR [ebp-0x228cd51f]
  41adfb:	cmp    al,0x6b
  41adfd:	scas   al,BYTE PTR es:[edi]
  41adfe:	ret    
  41adff:	call   0x630f:0x411ed6da
  41ae06:	push   ebp
  41ae07:	pop    eax
  41ae08:	loop   0x41ae28
  41ae0a:	imul   edi,ebp,0x91e4d337
  41ae10:	aas    
  41ae11:	mov    bh,0x81
  41ae13:	and    DWORD PTR [esi],ecx
  41ae15:	jae    0x41ae18
  41ae17:	cmp    al,0xf8
  41ae19:	in     al,0x6d
  41ae1b:	sahf   
  41ae1c:	xor    al,dl
  41ae1e:	push   ecx
  41ae1f:	out    dx,eax
  41ae20:	hlt    
  41ae21:	test   eax,0xe5151a2f
  41ae26:	add    ebx,DWORD PTR [ecx+esi*4-0x54]
  41ae2a:	mov    dl,0x8d
  41ae2c:	xchg   ecx,eax
  41ae2d:	adc    eax,0x97c001f7
  41ae32:	jae    0x41ae43
  41ae34:	shl    BYTE PTR [ecx+edi*8-0x7928b189],1
  41ae3b:	in     eax,dx
  41ae3c:	mov    bh,0x79
  41ae3e:	add    BYTE PTR [ecx-0x6925a40],dh
  41ae44:	add    ah,bl
  41ae46:	cmp    al,0xc1
  41ae48:	push   ebx
  41ae49:	inc    esi
  41ae4a:	dec    esp
  41ae4b:	(bad)  
  41ae4c:	push   ecx
  41ae4d:	clc    
  41ae4e:	imul   esp,DWORD PTR [edx+0x72],0x57702ee7
  41ae55:	inc    esp
  41ae56:	push   edi
  41ae57:	stc    
  41ae58:	sar    BYTE PTR [eax-0x4c48a45b],cl
  41ae5e:	clc    
  41ae5f:	jo     0x41aec8
  41ae61:	pop    eax
  41ae62:	dec    ecx
  41ae63:	jmp    0x41adf7
  41ae65:	sbb    al,0xbd
  41ae67:	pop    es
  41ae68:	shl    BYTE PTR [ebx+edi*2-0x36ee6b3e],1
  41ae6f:	xor    eax,0x42bb72ca
  41ae74:	jg     0x41ae5d
  41ae76:	xchg   esi,eax
  41ae77:	jmp    0x41ae99
  41ae79:	je     0x41ae4d
  41ae7b:	xchg   esi,eax
  41ae7c:	sub    ch,dh
  41ae7e:	imul   ebx,DWORD PTR [esi-0x3b],0xc8bf55eb
  41ae85:	loope  0x41aeb5
  41ae87:	mov    al,0x1d
  41ae89:	repnz aam 0x18
  41ae8c:	pusha  
  41ae8d:	(bad)  [ebx]
  41ae8f:	push   ss
  41ae90:	jg     0x41ae35
  41ae92:	(bad)  
  41ae93:	ins    BYTE PTR es:[edi],dx
  41ae94:	(bad)  
  41ae95:	sub    ebp,eax
  41ae97:	or     bl,BYTE PTR [eax-0x7ccf7d94]
  41ae9d:	cmc    
  41ae9e:	push   eax
  41ae9f:	push   ebx
  41aea0:	loop   0x41ae6e
  41aea2:	fsubr  st,st(7)
  41aea4:	test   BYTE PTR [eax+0x5e2bb734],dl
  41aeaa:	sub    dl,dl
  41aeac:	in     eax,dx
  41aead:	call   0xbb912cbd
  41aeb2:	adc    dh,dh
  41aeb4:	sbb    eax,DWORD PTR [edx-0x37]
  41aeb7:	pop    ebx
  41aeb8:	outs   dx,BYTE PTR ds:[esi]
  41aeb9:	add    BYTE PTR [esi+ebp*8+0x44],cl
  41aebd:	fbld   TBYTE PTR [ebp+eax*8-0x257256ca]
  41aec5:	and    al,0x59
  41aec7:	aaa    
  41aec8:	mov    al,0x38
  41aeca:	stos   DWORD PTR es:[edi],eax
  41aecb:	arpl   WORD PTR [edi+0x5a5ae43e],dx
  41aed1:	push   edx
  41aed2:	xchg   esp,eax
  41aed3:	mov    edx,0x93b57103
  41aed8:	mov    eax,ds:0x9508ddeb
  41aedd:	sbb    eax,0xa864c5fb
  41aee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aee3:	dec    esi
  41aee4:	dec    ecx
  41aee5:	jb     0x41aeb9
  41aee7:	dec    ebx
  41aee8:	js     0x41aeed
  41aeea:	or     BYTE PTR [ecx],ah
  41aeec:	cdq    
  41aeed:	aas    
  41aeee:	lock int 0xbc
  41aef1:	adc    esp,edi
  41aef3:	adc    ebp,DWORD PTR [eax+edi*2]
  41aef6:	call   0xa883:0x9312cdef
  41aefd:	pusha  
  41aefe:	or     ah,ch
  41af00:	mov    ch,0x4c
  41af02:	js     0x41ae9e
  41af04:	xchg   BYTE PTR [eax-0x5f827e5f],cl
  41af0a:	mov    cs,WORD PTR [eax-0x75]
  41af0d:	push   0x5a54c0d8
  41af12:	xchg   ebx,eax
  41af13:	xchg   edi,eax
  41af14:	div    DWORD PTR [edi+0x2949d10b]
  41af1a:	stos   BYTE PTR es:[edi],al
  41af1b:	leave  
  41af1c:	or     bl,al
  41af1e:	mov    dl,0x3a
  41af20:	sbb    cl,BYTE PTR [eax+0x35]
  41af23:	jmp    0x2b45b8af
  41af28:	adc    bl,ah
  41af2a:	dec    esi
  41af2b:	dec    eax
  41af2c:	sbb    dl,BYTE PTR [esi]
  41af2e:	dec    edx
  41af2f:	scas   eax,DWORD PTR es:[edi]
  41af30:	aad    0x5a
  41af32:	mov    ds:0xadb9c837,al
  41af37:	les    esi,FWORD PTR [ebx+ebp*1-0x4d]
  41af3b:	dec    ebp
  41af3c:	test   DWORD PTR [eax-0x308fb380],esp
  41af42:	dec    BYTE PTR [eax]
  41af44:	dec    ecx
  41af45:	jae    0x41aeca
  41af47:	add    dh,BYTE PTR [edx]
  41af49:	xchg   edi,esi
  41af4b:	add    al,0x16
  41af4d:	xchg   ebp,eax
  41af4e:	push   ebp
  41af4f:	jecxz  0x41af8f
  41af51:	outs   dx,BYTE PTR ds:[esi]
  41af52:	test   DWORD PTR [edi+0x51ec92c6],ebx
  41af58:	les    edi,FWORD PTR [esp+eax*2-0x39822017]
  41af5f:	xor    dl,cl
  41af61:	icebp  
  41af62:	int3   
  41af63:	scas   al,BYTE PTR es:[edi]
  41af64:	dec    ebx
  41af65:	and    eax,0x1e45e59
  41af6a:	popa   
  41af6b:	pop    esp
  41af6c:	pop    eax
  41af6d:	fucom  st(5)
  41af6f:	sbb    eax,0x742dfa7e
  41af74:	int3   
  41af75:	les    ecx,FWORD PTR [esi+0x6c30eb5a]
  41af7b:	sub    edi,DWORD PTR [edi+0x73]
  41af7e:	cli    
  41af7f:	xchg   ebx,eax
  41af80:	adc    DWORD PTR [eax+0x258b3b3d],edx
  41af86:	std    
  41af87:	rcl    esp,cl
  41af89:	jmp    0x41af64
  41af8b:	iret   
  41af8c:	popf   
  41af8d:	sbb    dl,BYTE PTR [eax-0xb770bcc]
  41af93:	mov    al,0x87
  41af95:	call   DWORD PTR [ecx-0x759d0030]
  41af9b:	jecxz  0x41af9d
  41af9d:	sbb    ah,BYTE PTR [edi-0x6]
  41afa0:	mov    eax,ds:0xc7efb0eb
  41afa5:	push   ss
  41afa6:	ret    
  41afa7:	je     0x41afef
  41afa9:	add    DWORD PTR [edi-0x51],edx
  41afac:	imul   ebx,ebx,0x88f247d1
  41afb2:	clc    
  41afb3:	lds    esp,FWORD PTR [esi-0x2cfd6b8c]
  41afb9:	mov    cl,0x37
  41afbb:	jge    0x41afff
  41afbd:	jmp    0x41af47
  41afbf:	lock and ch,BYTE PTR [di+0x71c5]
  41afc5:	mov    ds:0xed598706,eax
  41afca:	shl    DWORD PTR [eax+0x632cdc64],1
  41afd0:	fcmovbe st,st(7)
  41afd2:	jge    0x41b039
  41afd4:	call   0xa8f2:0x9313b8fa
  41afdb:	test   eax,0xd66043e6
  41afe0:	ds scas eax,DWORD PTR es:[edi]
  41afe2:	mov    ebx,0xc4e0c7d8
  41afe7:	xchg   ebp,eax
  41afe8:	ins    DWORD PTR es:[edi],dx
  41afe9:	xchg   ecx,eax
  41afea:	shl    esi,0x59
  41afed:	xchg   esi,eax
  41afee:	add    BYTE PTR [edi+ebx*4-0x27f61922],dl
  41aff5:	inc    ebp
  41aff6:	fcmovnb st,st(5)
  41aff8:	out    0x14,al
  41affa:	not    BYTE PTR [ebp+eax*4-0x57]
  41affe:	ins    DWORD PTR es:[edi],dx
  41afff:	addr16 or eax,0xe719c6a1
  41b005:	into   
  41b006:	lea    esp,[edx-0x1298dd50]
  41b00c:	jmp    0x41afc9
  41b00e:	add    BYTE PTR [eax],0x48
  41b011:	jbe    0x41afab
  41b013:	sar    BYTE PTR [ecx+eiz*8-0x381e3feb],1
  41b01a:	cmp    dl,BYTE PTR [ebx+esi*8]
  41b01d:	push   0x59941c35
  41b022:	push   edx
  41b023:	adc    DWORD PTR [ebx+0x10],esi
  41b026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b027:	mov    gs,WORD PTR [edx-0x68]
  41b02a:	pop    ebp
  41b02b:	sbb    eax,0xe29ff9a7
  41b030:	imul   esp,DWORD PTR [ecx],0xffffffcf
  41b033:	sbb    DWORD PTR [eax-0x2ed6146],0x3b
  41b03a:	pop    ds
  41b03b:	sub    BYTE PTR [esp+esi*8+0x4ebb971d],ch
  41b042:	stc    
  41b043:	cdq    
  41b044:	xor    BYTE PTR [esi],ah
  41b046:	jmp    0x41afe0
  41b048:	mov    WORD PTR [ebp+0x7a],ss
  41b04b:	inc    ebp
  41b04c:	push   eax
  41b04d:	rcl    BYTE PTR [ecx-0x275b1e05],0x5
  41b054:	xor    DWORD PTR [edx-0x368ace11],ebx
  41b05a:	je     0x41b01e
  41b05c:	imul   edx,DWORD PTR [ebx-0x384d91f8],0x2e5a750f
  41b066:	lds    edi,FWORD PTR [edx]
  41b068:	sub    DWORD PTR [ecx+0x34fd350b],0x33076aca
  41b072:	ins    DWORD PTR es:[edi],dx
  41b073:	repz popa 
  41b075:	jbe    0x41b059
  41b077:	or     ch,BYTE PTR [edx+ebx*8+0x346b69ad]
  41b07e:	mov    bl,0xda
  41b080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b081:	stos   DWORD PTR es:[edi],eax
  41b082:	mov    WORD PTR [edx+0x2f3eef07],?
  41b088:	add    DWORD PTR [esi-0x56],esi
  41b08b:	adc    ecx,DWORD PTR [ebx]
  41b08d:	sub    dh,BYTE PTR [edi]
  41b08f:	xchg   ebx,eax
  41b090:	popa   
  41b091:	xchg   ecx,eax
  41b092:	fsub   st(2),st
  41b094:	ins    BYTE PTR es:[edi],dx
  41b095:	ins    BYTE PTR es:[edi],dx
  41b096:	shl    esp,0x6
  41b099:	fsub   QWORD PTR [eax]
  41b09b:	(bad)  
  41b09c:	rol    BYTE PTR [esi-0x4c79ecd5],0x32
  41b0a3:	or     eax,0x10d595df
  41b0a8:	dec    eax
  41b0a9:	(bad)
  41b0ad:	mov    ch,0xae
  41b0af:	push   edi
  41b0b0:	stos   BYTE PTR es:[edi],al
  41b0b1:	xchg   esi,eax
  41b0b2:	cs mov dh,bh
  41b0b5:	pop    ss
  41b0b6:	and    al,0x60
  41b0b8:	enter  0xa603,0x6f
  41b0bc:	arpl   di,bx
  41b0be:	in     eax,0xcc
  41b0c0:	retf   0xdd9d
  41b0c3:	jp     0x41b0b3
  41b0c5:	call   0x5964:0x5221eff1
  41b0cc:	mov    WORD PTR [edi],gs
  41b0ce:	fsub   st,st(5)
  41b0d0:	mov    ecx,0xe26c8127
  41b0d5:	hlt    
  41b0d6:	jg     0x41b0ab
  41b0d8:	pop    es
  41b0d9:	sbb    ecx,DWORD PTR [edi+0x64]
  41b0dc:	push   edx
  41b0dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0de:	jo     0x41b0a6
  41b0e0:	(bad)  
  41b0e1:	jecxz  0x41b150
  41b0e3:	repz (bad) 
  41b0e5:	shl    BYTE PTR [edx],1
  41b0e7:	popa   
  41b0e8:	mov    ecx,0x96c445b1
  41b0ed:	pop    esi
  41b0ee:	sbb    al,0xd
  41b0f0:	dec    eax
  41b0f1:	adc    esp,eax
  41b0f3:	dec    esp
  41b0f4:	arpl   WORD PTR [ecx-0x34940fee],dx
  41b0fa:	cwde   
  41b0fb:	pop    ecx
  41b0fc:	shr    esp,1
  41b0fe:	lds    edi,FWORD PTR [edx]
  41b100:	call   0x92a0:0xb8efaf43
  41b107:	jnp    0x41b14e
  41b109:	mov    esp,0x522b1865
  41b10e:	out    dx,eax
  41b10f:	inc    esp
  41b110:	cmc    
  41b111:	pop    esp
  41b112:	imul   edi,eax,0xb251e20d
  41b118:	mul    BYTE PTR [esi+0x7b]
  41b11b:	xor    DWORD PTR [ebp+ecx*4-0x2f],esi
  41b11f:	outs   dx,BYTE PTR ds:[esi]
  41b120:	arpl   WORD PTR [eax+edx*1-0x2a],cx
  41b124:	and    bh,BYTE PTR [ebx+0x59]
  41b127:	fwait
  41b128:	clc    
  41b129:	mov    cl,0xdf
  41b12b:	or     BYTE PTR [edi+0x1d],al
  41b12e:	inc    eax
  41b12f:	cmp    eax,0xdff7c506
  41b134:	fnstcw WORD PTR [si]
  41b137:	retf   
  41b138:	faddp  st(7),st
  41b13a:	in     al,dx
  41b13b:	mov    ds:0x3d5b6ebb,al
  41b140:	dec    ebx
  41b141:	inc    ebx
  41b142:	ins    DWORD PTR es:[edi],dx
  41b143:	mov    ?,WORD PTR [ebp+0x759fc765]
  41b149:	retf   0x19c6
  41b14c:	in     eax,dx
  41b14d:	add    BYTE PTR [eax],al
  41b14f:	add    BYTE PTR [eax],al
  41b151:	add    ah,bh
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	ds xchg ebx,eax
  41b160:	clc    
  41b161:	fmul   DWORD PTR [edi-0xcfffed3]
  41b167:	add    al,0x0
  41b169:	add    BYTE PTR [ebp-0x7e6993ff],bl
  41b16f:	ins    BYTE PTR es:[edi],dx
  41b170:	daa    
  41b171:	lahf   
  41b172:	xor    al,0xd2
  41b174:	(bad)  
  41b175:	jne    0x41b1cd
  41b177:	sub    al,0xa2
  41b179:	test   DWORD PTR [ebp-0x21],ecx
  41b17c:	adc    BYTE PTR ds:0xdc730aaa,bh
  41b182:	mov    edi,0x5ae75d6d
  41b187:	inc    edi
  41b188:	and    ebx,esi
  41b18a:	add    BYTE PTR [ebx-0x2d438c57],dh
  41b190:	push   esp
  41b191:	clc    
  41b192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b193:	add    BYTE PTR [ebx+ebp*4+0x4d],bl
  41b197:	sar    BYTE PTR [edx],cl
  41b199:	es out 0x6f,al
  41b19c:	out    dx,eax
  41b19d:	jnp    0x41b133
  41b19f:	hlt    
  41b1a0:	sbb    ebx,ebx
  41b1a2:	out    0xce,al
  41b1a4:	adc    ah,bh
  41b1a6:	pushf  
  41b1a7:	add    DWORD PTR [edx-0x77],eax
  41b1aa:	test   al,0xc6
  41b1ac:	addr16 and ecx,ebp
  41b1af:	rcr    BYTE PTR ss:[eax],0x86
  41b1b3:	push   esi
  41b1b4:	cdq    
  41b1b5:	(bad)  [edi-0x65974b07]
  41b1bb:	pusha  
  41b1bc:	outs   dx,BYTE PTR ds:[esi]
  41b1bd:	bound  ebx,QWORD PTR [edx-0x4b587eb3]
  41b1c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1c4:	dec    ebx
  41b1c5:	fcomp  DWORD PTR [eax+0x541b0572]
  41b1cb:	shl    DWORD PTR [edx+0x34],1
  41b1ce:	std    
  41b1cf:	test   DWORD PTR [edx-0xf],edx
  41b1d2:	cmp    DWORD PTR [ecx+edx*1],edx
  41b1d5:	gs int3 
  41b1d7:	xchg   BYTE PTR [eax+0x9],bl
  41b1da:	inc    eax
  41b1db:	ds jae 0x41b179
  41b1de:	adc    al,0x8e
  41b1e0:	mov    cl,BYTE PTR [ebx-0x65]
  41b1e3:	push   eax
  41b1e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1e5:	jg     0x41b234
  41b1e7:	jae    0x41b20f
  41b1e9:	mov    dh,0xa3
  41b1eb:	pop    esi
  41b1ec:	jecxz  0x41b223
  41b1ee:	xchg   BYTE PTR [eax+eiz*1+0x58ad8224],al
  41b1f5:	inc    edi
  41b1f6:	int3   
  41b1f7:	lods   al,BYTE PTR ds:[esi]
  41b1f8:	or     ah,dh
  41b1fa:	fmul   DWORD PTR [edi]
  41b1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1fe:	pop    ds
  41b1ff:	fs push edi
  41b201:	add    BYTE PTR [esi-0x3d52d59d],bh
  41b207:	xchg   ecx,eax
  41b208:	(bad)  
  41b209:	mov    esi,0xa996adb8
  41b20e:	nop    eax
  41b211:	jae    0x41b1e1
  41b213:	jecxz  0x41b20e
  41b215:	sbb    eax,0xa640748b
  41b21a:	or     ch,bl
  41b21c:	loopne 0x41b20a
  41b21e:	pop    es
  41b21f:	cmp    bh,BYTE PTR [esi+0x46]
  41b222:	stos   DWORD PTR es:[edi],eax
  41b223:	sub    al,0x34
  41b225:	cmc    
  41b226:	mov    dl,0x2e
  41b228:	jp     0x41b28e
  41b22a:	ret    0xcc31
  41b22d:	(bad)  
  41b22e:	arpl   WORD PTR [eax+eiz*4],dx
  41b231:	addr16 loope 0x41b238
  41b234:	imul   ecx,DWORD PTR [edi-0x12],0x4a
  41b238:	aad    0xab
  41b23a:	pop    esi
  41b23b:	fadd   st(4),st
  41b23d:	jp     0x41b29f
  41b23f:	div    BYTE PTR [esi-0x668457e]
  41b245:	sub    eax,0x6420de6d
  41b24a:	sub    BYTE PTR [ecx+0x6a],dl
  41b24d:	repz iret 
  41b24f:	rol    ah,0x4a
  41b252:	(bad)  
  41b254:	sbb    bh,ah
  41b256:	jmp    0x41b1fc
  41b258:	dec    ebx
  41b259:	sub    BYTE PTR [ebx-0x17],ah
  41b25c:	xchg   esi,eax
  41b25d:	or     ah,BYTE PTR [eax-0x74a63074]
  41b263:	xor    eax,0x842559aa
  41b268:	dec    eax
  41b269:	idiv   DWORD PTR [edi]
  41b26b:	sbb    BYTE PTR [edi],ch
  41b26d:	repnz push eax
  41b26f:	and    BYTE PTR [edi],ah
  41b271:	push   esi
  41b272:	retf   
  41b273:	hlt    
  41b274:	stos   DWORD PTR es:[edi],eax
  41b275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b276:	jns    0x41b23e
  41b278:	pusha  
  41b279:	jg     0x41b231
  41b27b:	in     eax,dx
  41b27c:	fsubr  QWORD PTR [ebp-0x77f4196]
  41b282:	shr    BYTE PTR [esi],cl
  41b284:	jo     0x41b26d
  41b286:	out    dx,al
  41b287:	test   bh,bh
  41b289:	xor    esi,DWORD PTR [esi]
  41b28b:	add    al,0x1c
  41b28d:	or     al,0xf6
  41b28f:	les    ebp,FWORD PTR [esi]
  41b291:	or     DWORD PTR [bp+si+0x5f7e],edx
  41b296:	std    
  41b297:	push   0x654b4be3
  41b29c:	cdq    
  41b29d:	js     0x41b228
  41b29f:	mov    al,0x6f
  41b2a1:	add    cl,bl
  41b2a3:	(bad)  
  41b2a4:	xor    al,0x7d
  41b2a6:	lods   eax,DWORD PTR ds:[esi]
  41b2a7:	cdq    
  41b2a8:	addr16 cwde 
  41b2aa:	sbb    ah,BYTE PTR [edx-0x3]
  41b2ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2ae:	test   cl,cl
  41b2b0:	aas    
  41b2b1:	sbb    al,0xcb
  41b2b3:	inc    ebx
  41b2b4:	jmp    0x4288:0x14c13fd3
  41b2bb:	scas   eax,DWORD PTR es:[edi]
  41b2bc:	fst    QWORD PTR [ecx-0x2d1545e8]
  41b2c2:	icebp  
  41b2c3:	scas   al,BYTE PTR es:[edi]
  41b2c4:	icebp  
  41b2c5:	das    
  41b2c6:	enter  0xbbe7,0xb4
  41b2ca:	push   esp
  41b2cb:	sti    
  41b2cc:	fs jle 0x41b331
  41b2cf:	sub    BYTE PTR [eax-0x2b],dl
  41b2d2:	sub    al,0x42
  41b2d4:	les    esp,FWORD PTR [ecx+ebx*1]
  41b2d7:	mov    edi,0x2eed2c2c
  41b2dc:	add    bh,BYTE PTR [ecx+0x6925d90b]
  41b2e2:	sub    eax,0x19965b0b
  41b2e7:	dec    eax
  41b2e8:	push   ebp
  41b2e9:	xor    eax,0xde47b047
  41b2ee:	scas   al,BYTE PTR es:[edi]
  41b2ef:	ret    
  41b2f0:	jbe    0x41b2f8
  41b2f2:	lods   al,BYTE PTR ds:[esi]
  41b2f3:	inc    ebx
  41b2f4:	or     DWORD PTR [edi],esi
  41b2f6:	es stos DWORD PTR es:[edi],eax
  41b2f8:	add    DWORD PTR [edi-0x250a23ac],esi
  41b2fe:	gs ret 0xdb0
  41b302:	call   0x55108e51
  41b307:	leave  
  41b308:	cmc    
  41b309:	arpl   WORD PTR [eax+ecx*2-0x5c6949aa],ax
  41b310:	pop    ss
  41b311:	jle    0x41b2e0
  41b313:	out    dx,al
  41b314:	push   0xaf40b029
  41b319:	iret   
  41b31a:	and    dl,BYTE PTR [edi-0x5c]
  41b31d:	test   cl,bh
  41b31f:	jae    0x41b2f0
  41b321:	mov    esp,0x2883899c
  41b326:	idiv   DWORD PTR [ecx+0x14]
  41b329:	test   eax,ebx
  41b32b:	pop    edi
  41b32c:	imul   ebp,ebx,0x7a
  41b32f:	sub    DWORD PTR [ecx+0x3778c8d5],ecx
  41b335:	jo     0x41b3af
  41b337:	mov    eax,0x43589187
  41b33c:	dec    esi
  41b33d:	loopne 0x41b333
  41b33f:	ss iret 
  41b341:	lock fmul DWORD PTR [edi-0x3c]
  41b345:	lea    esp,[eax-0x64]
  41b348:	push   ss
  41b349:	sbb    BYTE PTR [ebp+0x2d],0xae
  41b34d:	call   0x79457e4c
  41b352:	nop    DWORD PTR es:[ebx-0x4]
  41b357:	adc    ah,0x38
  41b35a:	and    al,0xee
  41b35c:	test   al,0x16
  41b35e:	into   
  41b35f:	xchg   edi,eax
  41b360:	(bad)  
  41b361:	adc    DWORD PTR [ecx-0x54],esp
  41b364:	push   esp
  41b365:	repz loopne 0x41b3a9
  41b368:	imul   ebx,DWORD PTR [ebx+0x4d4b741a],0xffffff81
  41b36f:	out    dx,eax
  41b370:	push   ds
  41b371:	jnp    0x41b3ee
  41b373:	ret    0x89a2
  41b376:	pushf  
  41b377:	scas   al,BYTE PTR es:[edi]
  41b378:	shr    bl,cl
  41b37a:	push   ss
  41b37b:	inc    ecx
  41b37c:	cmp    DWORD PTR [ebx-0x7a],edi
  41b37f:	push   esp
  41b380:	loopne 0x41b3c7
  41b382:	jnp    0x41b3dc
  41b384:	fcom   DWORD PTR ds:0xc398f694
  41b38a:	add    eax,0x438898f8
  41b38f:	mov    cl,0xee
  41b391:	shl    DWORD PTR gs:[ebx+ebp*1+0x43],1
  41b396:	mov    eax,ds:0x6ed24a08
  41b39b:	repnz mov edx,0x74c79d77
  41b3a1:	sbb    ecx,DWORD PTR [ebp*8+0x4cea1c4e]
  41b3a8:	iret   
  41b3a9:	xchg   ebx,eax
  41b3aa:	ja     0x41b385
  41b3ac:	xchg   edx,eax
  41b3ad:	inc    ebp
  41b3ae:	sbb    al,0x8f
  41b3b0:	fld    TBYTE PTR [eax]
  41b3b2:	je     0x41b38f
  41b3b4:	cs xor al,0x18
  41b3b7:	inc    edx
  41b3b8:	jecxz  0x41b3b7
  41b3ba:	sub    ch,dl
  41b3bc:	ss addr16 jne 0x41b3a5
  41b3c0:	push   eax
  41b3c1:	and    esp,esi
  41b3c3:	aas    
  41b3c4:	les    edi,FWORD PTR [edx-0x2c]
  41b3c7:	shr    DWORD PTR [ebx+0x47],0xcd
  41b3cb:	out    dx,al
  41b3cc:	xchg   BYTE PTR [edi+eiz*1],dh
  41b3cf:	ja     0x41b367
  41b3d1:	ret    0xe321
  41b3d4:	les    ebp,FWORD PTR ds:0xe1e196c2
  41b3da:	std    
  41b3db:	fdiv   QWORD PTR [edx+0x64df10ba]
  41b3e1:	mov    ds:0xd4aaee9e,eax
  41b3e6:	jge    0x41b37a
  41b3e8:	lods   al,BYTE PTR ds:[esi]
  41b3e9:	sbb    esp,DWORD PTR ds:[edx-0x42d9e472]
  41b3f0:	push   cs
  41b3f1:	test   bh,0x46
  41b3f4:	push   esp
  41b3f5:	push   ebp
  41b3f6:	mov    esi,0x9288490a
  41b3fb:	cmp    esi,eax
  41b3fd:	aad    0x4c
  41b3ff:	jl     0x41b436
  41b401:	dec    ebp
  41b402:	pop    ebp
  41b403:	fwait
  41b404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b405:	div    DWORD PTR [ebx+0x61]
  41b408:	sahf   
  41b409:	or     ecx,DWORD PTR [eax]
  41b40b:	mov    bh,0x21
  41b40d:	mov    dl,BYTE PTR [esi+0x274cefa7]
  41b413:	cmp    eax,0xb5e131b3
  41b418:	imul   ebx,DWORD PTR [esp+ebp*1],0x856b22d3
  41b41f:	rcl    al,cl
  41b421:	pusha  
  41b422:	jnp    0x41b3e8
  41b424:	mov    BYTE PTR [eax-0x72],al
  41b427:	popa   
  41b428:	push   eax
  41b429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b42a:	cmp    BYTE PTR [edx],cl
  41b42c:	sub    al,0x7f
  41b42e:	xlat   BYTE PTR ds:[ebx]
  41b42f:	pop    ebp
  41b430:	pop    ecx
  41b431:	adc    eax,0x923a6f51
  41b436:	cmp    al,bh
  41b438:	xor    al,0x84
  41b43a:	fmul   DWORD PTR [eax+0x17e2a22]
  41b440:	test   BYTE PTR ds:0xa86c5c10,dl
  41b446:	xor    DWORD PTR [eax],edi
  41b448:	and    al,0x93
  41b44a:	dec    esi
  41b44b:	or     DWORD PTR [edx-0x7e],esp
  41b44e:	mov    ch,0x29
  41b450:	cmp    dh,al
  41b452:	push   ebx
  41b453:	adc    eax,0xd88b7267
  41b458:	xchg   ebp,eax
  41b459:	dec    esi
  41b45a:	push   0x1a
  41b45c:	repz push eax
  41b45e:	push   esi
  41b45f:	mov    fs,WORD PTR ds:0x90969e71
  41b465:	imul   BYTE PTR [esp+eax*4+0x42]
  41b469:	or     al,0x0
  41b46b:	ficom  DWORD PTR [eax+0x40]
  41b46e:	stc    
  41b46f:	in     eax,dx
  41b470:	pop    ebx
  41b471:	js     0x41b452
  41b473:	rcr    DWORD PTR [ebp-0x7c660cd2],1
  41b479:	scas   eax,DWORD PTR es:[edi]
  41b47a:	inc    esi
  41b47b:	mov    al,0x68
  41b47d:	or     BYTE PTR ds:0xc6523cdb,dh
  41b483:	iret   
  41b484:	mov    cl,0xb4
  41b486:	stc    
  41b487:	dec    ebx
  41b488:	xor    eax,0xbcfce8ed
  41b48d:	or     DWORD PTR [edx+eax*2+0x279f4905],edx
  41b494:	cmp    ebp,0xe58d63f9
  41b49a:	pop    esi
  41b49b:	ins    BYTE PTR es:[edi],dx
  41b49c:	mov    al,ds:0xf5a5ccff
  41b4a1:	adc    al,0x33
  41b4a3:	push   edi
  41b4a4:	mov    esp,0xc830f46b
  41b4aa:	mov    ebx,ecx
  41b4ac:	daa    
  41b4ad:	cmp    BYTE PTR [esi],ch
  41b4af:	cmp    al,0xfc
  41b4b1:	ficom  DWORD PTR [esi-0x5ff13b83]
  41b4b7:	test   BYTE PTR [edx],ah
  41b4b9:	pop    ebp
  41b4ba:	sahf   
  41b4bb:	dec    edi
  41b4bc:	daa    
  41b4bd:	mov    edx,DWORD PTR [esi-0x3b]
  41b4c0:	mov    dh,0xe9
  41b4c2:	loopne 0x41b446
  41b4c4:	fist   WORD PTR fs:[ecx-0x7025bbae]
  41b4cb:	inc    ebx
  41b4cc:	out    0xb5,al
  41b4ce:	stc    
  41b4cf:	pop    eax
  41b4d0:	int    0x47
  41b4d2:	mov    edx,0xb02a2efd
  41b4d7:	sub    al,0xc1
  41b4d9:	sub    BYTE PTR [ebp+0x5cd812c1],al
  41b4df:	pushf  
  41b4e0:	icebp  
  41b4e1:	cwde   
  41b4e2:	or     eax,0x4cffbbdc
  41b4e7:	loope  0x41b48c
  41b4e9:	or     al,0xa5
  41b4eb:	xchg   ebx,eax
  41b4ec:	fidiv  DWORD PTR [edx-0x7b4cbc08]
  41b4f2:	call   0xac8b:0x48c9bcb9
  41b4f9:	mov    esp,0x332df910
  41b4fe:	jnp    0x41b4f1
  41b500:	mov    ecx,0xd9d9fdd
  41b505:	stc    
  41b506:	push   es
  41b507:	xchg   esi,ebx
  41b509:	or     al,0x30
  41b50b:	clc    
  41b50c:	jbe    0x41b54c
  41b50e:	enter  0xb963,0x7c
  41b512:	and    al,0x88
  41b514:	adc    BYTE PTR [esp+eiz*2],0xc6
  41b518:	js     0x41b571
  41b51a:	pop    esp
  41b51b:	push   esp
  41b51c:	push   eax
  41b51d:	ror    esi,cl
  41b51f:	daa    
  41b520:	fcomp  QWORD PTR [ebp+esi*8-0x68ff17bc]
  41b527:	sub    al,0xfc
  41b529:	ret    0xf0a6
  41b52c:	add    BYTE PTR [edx+0x1b],dh
  41b52f:	addr16 nop
  41b531:	fimul  WORD PTR [ebx]
  41b533:	pop    edi
  41b534:	xor    esp,DWORD PTR [ebp+0x689aa9e1]
  41b53a:	pusha  
  41b53b:	test   BYTE PTR [esi],dh
  41b53d:	mov    esi,0xef401f78
  41b542:	stc    
  41b543:	call   0x780bd62
  41b548:	icebp  
  41b549:	sar    DWORD PTR [edx+0x29309c34],cl
  41b54f:	inc    eax
  41b550:	je     0x41b5be
  41b552:	and    al,bl
  41b554:	or     edx,DWORD PTR [edi-0x5c]
  41b557:	add    al,0xb3
  41b559:	mov    ebp,0x9affef30
  41b55e:	and    eax,0x69d6d9ec
  41b563:	or     BYTE PTR [esi+ebx*8-0x33],al
  41b567:	hlt    
  41b568:	or     ah,bh
  41b56a:	das    
  41b56b:	push   ss
  41b56c:	xchg   ah,ah
  41b56e:	out    0x80,al
  41b570:	dec    ebx
  41b571:	pusha  
  41b572:	push   es
  41b573:	pop    edx
  41b574:	and    eax,0xee6c0e06
  41b579:	stos   BYTE PTR es:[edi],al
  41b57a:	inc    eax
  41b57b:	xchg   ecx,eax
  41b57c:	inc    edi
  41b57d:	jb     0x41b5ed
  41b57f:	push   0x7643643f
  41b584:	mov    dh,0xc5
  41b586:	pop    edi
  41b587:	ds cld 
  41b589:	jbe    0x41b5b0
  41b58b:	sub    edi,edi
  41b58d:	push   ebx
  41b58e:	les    ecx,FWORD PTR [eax]
  41b590:	inc    DWORD PTR [edx+0x31]
  41b593:	jo     0x41b599
  41b595:	test   al,0xa6
  41b597:	in     al,0xec
  41b599:	inc    ebp
  41b59a:	or     bh,BYTE PTR [eax+0x2f]
  41b59d:	mov    ecx,0x430191cf
  41b5a2:	lods   eax,DWORD PTR ds:[esi]
  41b5a3:	aam    0x9b
  41b5a5:	jmp    0x6606a782
  41b5aa:	mov    cl,0xbf
  41b5ac:	jmp    0xff1f823d
  41b5b1:	xor    esi,esp
  41b5b3:	loop   0x41b561
  41b5b5:	inc    edi
  41b5b6:	out    dx,eax
  41b5b7:	lods   al,BYTE PTR ds:[esi]
  41b5b8:	data16 xchg ah,cl
  41b5bb:	dec    BYTE PTR [esi+eiz*1-0x218fdbe]
  41b5c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5c3:	(bad)  
  41b5c4:	and    BYTE PTR [ebx],ch
  41b5c6:	gs jbe 0x41b60a
  41b5c9:	ins    BYTE PTR es:[edi],dx
  41b5ca:	xchg   esp,eax
  41b5cb:	or     DWORD PTR [ebp+0x72],edx
  41b5ce:	add    eax,0xa6406ec2
  41b5d3:	jnp    0x41b63f
  41b5d5:	data16 fadd DWORD PTR [ebx+eax*4-0x51]
  41b5da:	mov    ebx,DWORD PTR [ebp-0x39]
  41b5dd:	je     0x41b624
  41b5df:	push   ebp
  41b5e0:	hlt    
  41b5e1:	xchg   DWORD PTR [edx-0x361c7e14],esp
  41b5e7:	add    DWORD PTR [esi+0xa],edi
  41b5ea:	int    0x41
  41b5ec:	dec    ebp
  41b5ed:	out    0x1b,eax
  41b5ef:	rcl    BYTE PTR [esi+esi*1],1
  41b5f2:	loop   0x41b5b8
  41b5f4:	push   edx
  41b5f5:	cmp    edi,0xa2741aac
  41b5fb:	inc    esp
  41b5fc:	sbb    al,0xd7
  41b5fe:	push   ecx
  41b5ff:	sub    eax,DWORD PTR [ebx-0x4877a9ba]
  41b605:	dec    ebx
  41b606:	popa   
  41b607:	adc    BYTE PTR [ebx-0x6569e2ea],bh
  41b60d:	or     al,cl
  41b60f:	push   eax
  41b610:	lds    eax,FWORD PTR [ecx]
  41b612:	(bad)  
  41b613:	pop    ss
  41b614:	mov    cl,0xe4
  41b616:	pop    edi
  41b617:	lock pop ebp
  41b619:	lods   al,BYTE PTR ds:[esi]
  41b61a:	sbb    eax,0x5a41bca0
  41b61f:	inc    ebx
  41b620:	call   0xaf4d7df0
  41b625:	enter  0xd3d5,0xf2
  41b629:	test   eax,0x6ce7f6d8
  41b62e:	sub    ah,ah
  41b630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b631:	aam    0xd8
  41b633:	stos   BYTE PTR es:[edi],al
  41b634:	and    ah,ah
  41b636:	cmp    BYTE PTR [esi],al
  41b638:	je     0x41b6b4
  41b63a:	fcomp  DWORD PTR [ebx+0x67]
  41b63d:	rol    DWORD PTR [ebx+ebp*4+0x74],0x92
  41b642:	std    
  41b643:	mov    ah,0x7d
  41b645:	mov    bl,0x67
  41b647:	xor    dh,BYTE PTR [ecx-0x41e3d341]
  41b64d:	push   esi
  41b64e:	lahf   
  41b64f:	dec    ebp
  41b650:	mov    ecx,0x55cd0a11
  41b655:	dec    esp
  41b656:	rcl    esi,cl
  41b658:	or     ah,dh
  41b65a:	stc    
  41b65b:	mov    al,0x13
  41b65d:	add    BYTE PTR [eax],al
  41b65f:	add    BYTE PTR [eax],al
  41b661:	add    dh,al
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	cmc    
  41b66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b670:	icebp  
  41b671:	adc    eax,DWORD PTR [edx-0xcfffece]
  41b677:	add    al,0x0
  41b679:	add    ah,cl
  41b67b:	popf   
  41b67c:	nop
  41b67d:	test   eax,0x4f4cc72f
  41b682:	(bad)  
  41b683:	mov    ds,WORD PTR [esi-0xd]
  41b686:	rol    DWORD PTR [edx+0x65d6e32d],1
  41b68c:	sub    ebx,DWORD PTR [edx-0x55]
  41b68f:	shr    BYTE PTR [esi-0x1ee634ed],cl
  41b695:	jnp    0x41b6ca
  41b697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b698:	test   BYTE PTR [ebp*4+0x3b40ce08],cl
  41b69f:	ins    BYTE PTR es:[edi],dx
  41b6a0:	push   ebx
  41b6a1:	or     ecx,DWORD PTR [esi+ebp*1+0x35ff65d0]
  41b6a8:	(bad)  
  41b6a9:	pop    DWORD PTR [ecx+0x58]
  41b6ac:	sub    al,0xa5
  41b6ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6af:	retf   0xb43f
  41b6b2:	sub    dl,BYTE PTR [ecx-0x8]
  41b6b5:	mov    esi,?
  41b6b7:	(bad)  
  41b6b8:	frstor [ebp-0x5b]
  41b6bb:	es call 0x7029877f
  41b6c1:	lds    ebx,FWORD PTR [esi]
  41b6c3:	sub    al,dl
  41b6c5:	popa   
  41b6c6:	xchg   ecx,eax
  41b6c7:	lahf   
  41b6c8:	mov    esi,0xd4ed6eca
  41b6cd:	test   esp,esi
  41b6cf:	add    esp,esi
  41b6d1:	push   ds
  41b6d2:	jbe    0x41b66a
  41b6d4:	mov    al,ds:0x25f2bf2d
  41b6d9:	sub    ecx,0xffffffab
  41b6dc:	icebp  
  41b6dd:	dec    ebx
  41b6de:	pop    edi
  41b6df:	iret   
  41b6e0:	es push ss
  41b6e2:	in     al,0x80
  41b6e4:	fs daa 
  41b6e6:	pop    eax
  41b6e7:	imul   esi,DWORD PTR [ecx],0x5b
  41b6ea:	sahf   
  41b6eb:	aad    0xa2
  41b6ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6ee:	xor    DWORD PTR ds:0xf706d33b,0x597c7c1
  41b6f8:	in     al,dx
  41b6f9:	cdq    
  41b6fa:	out    0xfe,al
  41b6fc:	jg     0x41b745
  41b6fe:	mov    ds:0x2115b4d1,al
  41b703:	mov    edi,0xb6d907ec
  41b708:	inc    edi
  41b709:	add    BYTE PTR [ecx-0x1e],dh
  41b70c:	sub    DWORD PTR [edx],esp
  41b70e:	pop    edx
  41b70f:	sbb    BYTE PTR [edi-0x75],dh
  41b712:	loopne 0x41b734
  41b714:	mov    ds:0xa71dde87,eax
  41b719:	sbb    bl,BYTE PTR [eax]
  41b71b:	call   0x16dc5d80
  41b720:	cmp    dl,bl
  41b722:	(bad)  
  41b723:	repnz inc esi
  41b725:	jl     0x41b79e
  41b727:	mov    BYTE PTR [edx-0x1dce25de],bh
  41b72d:	stos   BYTE PTR es:[edi],al
  41b72e:	shl    DWORD PTR [ebp+0x26f7537b],cl
  41b734:	outs   dx,BYTE PTR ds:[esi]
  41b735:	clc    
  41b736:	xor    al,0xf7
  41b738:	cdq    
  41b739:	clc    
  41b73a:	fadd   QWORD PTR [edx-0x7bd89975]
  41b740:	hlt    
  41b741:	xchg   BYTE PTR [ecx+eax*2+0x5ed96359],dh
  41b748:	loop   0x41b7bc
  41b74a:	idiv   BYTE PTR [ebx+edi*4]
  41b74d:	dec    ebx
  41b74e:	mov    dh,0x5f
  41b750:	les    esp,FWORD PTR [ebx-0x4e854d47]
  41b756:	mov    ebx,esi
  41b758:	push   ecx
  41b759:	pop    edi
  41b75a:	sub    DWORD PTR [ebx],edi
  41b75c:	pusha  
  41b75d:	(bad)  
  41b75f:	mov    al,0x2f
  41b761:	add    ch,dl
  41b763:	in     al,0xed
  41b765:	jmp    0x10918553
  41b76a:	mov    dh,0xe4
  41b76c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b76d:	js     0x41b733
  41b76f:	cmp    edi,edx
  41b771:	or     BYTE PTR [edx-0xe14feaa],ah
  41b777:	rol    DWORD PTR [ecx],0x5c
  41b77a:	mov    esi,0xa0023626
  41b77f:	add    eax,0xa10c9e24
  41b784:	add    al,0x61
  41b786:	pop    ebp
  41b787:	dec    esp
  41b788:	xchg   edx,eax
  41b789:	stc    
  41b78a:	shl    DWORD PTR [ebx-0x68],cl
  41b78d:	mov    ah,BYTE PTR gs:[ecx]
  41b790:	call   DWORD PTR [ecx+0x4b]
  41b793:	dec    edi
  41b794:	mov    bl,0xcd
  41b796:	and    BYTE PTR [edi-0x2a],ah
  41b799:	loopne 0x41b7d6
  41b79b:	or     ebp,DWORD PTR [ebx+0x3]
  41b79e:	and    BYTE PTR [edi+0x5c1088ed],bh
  41b7a4:	inc    ecx
  41b7a5:	mov    bl,0x27
  41b7a7:	xlat   BYTE PTR ss:[ebx]
  41b7a9:	jb     0x41b7b7
  41b7ab:	xchg   ecx,eax
  41b7ac:	int3   
  41b7ad:	int    0x42
  41b7af:	aaa    
  41b7b0:	std    
  41b7b1:	repnz das 
  41b7b3:	aaa    
  41b7b4:	sub    al,0x9b
  41b7b6:	pop    es
  41b7b7:	inc    eax
  41b7b8:	mov    esp,0x6a8a4876
  41b7bd:	push   esi
  41b7be:	jae    0x41b740
  41b7c0:	mov    dl,0x6f
  41b7c2:	dec    edx
  41b7c3:	(bad)  
  41b7c4:	aam    0xcb
  41b7c6:	sub    edi,DWORD PTR [ebx+0x3a]
  41b7c9:	fisubr WORD PTR [esi-0x714d9aa9]
  41b7cf:	(bad)  
  41b7d0:	sub    DWORD PTR [edi-0x222ce7c1],esi
  41b7d6:	pop    ebx
  41b7d7:	or     eax,0x91a7d3ba
  41b7dc:	or     BYTE PTR [edi+0x7f2966bc],ah
  41b7e2:	jns    0x41b84e
  41b7e4:	sbb    eax,0xa4dc843e
  41b7e9:	and    DWORD PTR [ebx],edi
  41b7eb:	jo     0x41b828
  41b7ed:	push   0x53625f3
  41b7f2:	(bad)  
  41b7f3:	cld    
  41b7f4:	retf   
  41b7f5:	sbb    al,0x93
  41b7f7:	inc    edx
  41b7f8:	xchg   BYTE PTR [edx-0x6cae8612],bh
  41b7fe:	xor    eax,0x29b40f7e
  41b803:	popa   
  41b804:	adc    BYTE PTR [ecx-0x1a],dl
  41b807:	ss jge 0x41b7c0
  41b80a:	shl    DWORD PTR [edi],cl
  41b80c:	mov    dl,BYTE PTR [ecx]
  41b80e:	dec    edi
  41b80f:	test   BYTE PTR [ebp-0x24],al
  41b812:	(bad)  cs:[eax-0x1e]
  41b816:	push   ecx
  41b817:	mov    dl,bl
  41b819:	imul   esp,DWORD PTR [ebx-0x7e],0x5c55f0c3
  41b820:	dec    esp
  41b821:	add    DWORD PTR [edi],0x7aa8b64e
  41b827:	sub    al,0xca
  41b829:	imul   ebx,DWORD PTR [ebp-0x22],0x9eeade
  41b830:	cmp    BYTE PTR [edi-0x3f],0xf9
  41b834:	mov    esi,0x3202e4b5
  41b839:	jle    0x41b87c
  41b83b:	mov    WORD PTR [esi+0x6a201e47],es
  41b841:	test   esp,esi
  41b843:	cwde   
  41b844:	jne    0x41b881
  41b846:	add    cl,BYTE PTR [edx]
  41b848:	jnp    0x41b865
  41b84a:	and    esp,DWORD PTR [ecx-0x6c]
  41b84d:	(bad)  
  41b84e:	neg    DWORD PTR [edi-0x38]
  41b851:	outs   dx,DWORD PTR ds:[esi]
  41b852:	test   dh,ah
  41b854:	push   es
  41b855:	jne    0x41b85f
  41b857:	sbb    DWORD PTR [eax+0x32],0x4b6cbf2f
  41b85e:	cmp    al,0x8d
  41b860:	cmp    bl,BYTE PTR [ebp-0x9b12b9e]
  41b866:	add    eax,0xdeac212e
  41b86b:	xchg   edx,eax
  41b86c:	adc    eax,0xf6a21a49
  41b871:	cmp    DWORD PTR gs:[esi-0x6e0af60f],edx
  41b878:	push   ebp
  41b879:	mov    al,ds:0x746da461
  41b87e:	jp     0x41b88c
  41b880:	(bad)  
  41b881:	pop    ds
  41b882:	sbb    DWORD PTR [ebx],ebp
  41b884:	scas   eax,DWORD PTR es:[edi]
  41b885:	fsubr  QWORD PTR [eax-0x79a53c54]
  41b88b:	mov    bh,0x71
  41b88d:	rcl    DWORD PTR [eax+0x39fb9ac8],cl
  41b893:	lahf   
  41b894:	loope  0x41b905
  41b896:	jbe    0x41b8be
  41b898:	and    al,0x90
  41b89a:	cli    
  41b89b:	jle    0x41b863
  41b89d:	sti    
  41b89e:	cmp    edi,edx
  41b8a0:	jle    0x41b843
  41b8a2:	stos   BYTE PTR es:[edi],al
  41b8a3:	sbb    BYTE PTR [eax],ah
  41b8a5:	addr16 pop edx
  41b8a7:	in     al,0xab
  41b8a9:	mov    dh,0x87
  41b8ab:	test   eax,0x15131da6
  41b8b0:	mov    gs,WORD PTR [ebx]
  41b8b2:	gs test eax,0x1e315967
  41b8b8:	mov    dh,0xb
  41b8ba:	xchg   esi,edi
  41b8bc:	daa    
  41b8bd:	push   0x2f
  41b8bf:	or     ah,BYTE PTR [ecx]
  41b8c1:	cmp    al,0x2e
  41b8c3:	(bad)  
  41b8c5:	jmp    DWORD PTR [edx+eax*1]
  41b8c8:	lods   al,BYTE PTR ds:[esi]
  41b8c9:	inc    esp
  41b8ca:	jo     0x41b94a
  41b8cc:	add    eax,0xf14bb796
  41b8d1:	pop    ss
  41b8d2:	call   0x3692:0x2a5c9fd9
  41b8d9:	outs   dx,BYTE PTR ds:[esi]
  41b8da:	pop    ebp
  41b8db:	jnp    0x41b935
  41b8dd:	retf   
  41b8de:	mov    al,ds:0x794b6ce8
  41b8e3:	lods   al,BYTE PTR ds:[esi]
  41b8e4:	sub    ecx,esp
  41b8e6:	inc    ebx
  41b8e7:	xlat   BYTE PTR ds:[ebx]
  41b8e8:	pop    ds
  41b8e9:	jne    0x41b8e4
  41b8eb:	ss in  eax,0xae
  41b8ee:	mov    ecx,0xe58be77b
  41b8f3:	jmp    0xf9ed:0xcf7075b
  41b8fa:	mov    dl,bl
  41b8fc:	mov    cs,WORD PTR [ecx+eax*4+0x65]
  41b900:	add    DWORD PTR [ecx+edi*2],0x24
  41b904:	ret    0xe82f
  41b907:	mov    esi,0x6c24c22e
  41b90c:	idiv   BYTE PTR [ebp-0x70]
  41b90f:	out    dx,eax
  41b910:	(bad)  
  41b911:	cli    
  41b912:	mov    gs:0xd818b6a3,al
  41b918:	xor    al,BYTE PTR [ebp+0x0]
  41b91b:	jno    0x41b955
  41b91d:	or     edi,ecx
  41b91f:	jns    0x41b8cc
  41b921:	ja     0x41b909
  41b923:	inc    ecx
  41b924:	push   ds
  41b925:	ror    BYTE PTR [edi-0x32fc4b2c],cl
  41b92b:	xchg   DWORD PTR [ecx-0x2e],edx
  41b92e:	loopne 0x41b8de
  41b930:	dec    eax
  41b931:	sub    eax,0xe75459dc
  41b936:	sbb    edi,edi
  41b938:	stc    
  41b939:	inc    edx
  41b93a:	pop    ecx
  41b93b:	pop    esi
  41b93c:	cmp    DWORD PTR [edi-0x39],esi
  41b93f:	leave  
  41b940:	dec    edi
  41b941:	fmul   DWORD PTR [eax]
  41b943:	fwait
  41b944:	addr16 je 0x41b92d
  41b947:	std    
  41b948:	dec    edi
  41b949:	or     eax,DWORD PTR [edi+0x58]
  41b94c:	div    DWORD PTR [ecx+0x4f]
  41b94f:	xchg   esp,eax
  41b950:	inc    esi
  41b951:	sub    BYTE PTR [ebp-0x70bee91d],bh
  41b957:	imul   esp,DWORD PTR [eax+0x73],0x445f2d08
  41b95e:	clc    
  41b95f:	mov    WORD PTR [edi],?
  41b961:	retf   0xf9c5
  41b964:	or     ebp,edx
  41b966:	loope  0x41b952
  41b968:	and    eax,0xf6968d4c
  41b96d:	xchg   esi,eax
  41b96e:	out    dx,al
  41b96f:	leave  
  41b970:	mov    ds:0x6f9ccbc,al
  41b975:	pop    ds
  41b976:	mov    cs,ebp
  41b978:	push   esp
  41b979:	pop    ebp
  41b97a:	dec    ebp
  41b97b:	jmp    0x41b9c7
  41b97d:	cdq    
  41b97e:	inc    edi
  41b97f:	or     BYTE PTR [edi+0x6f183619],al
  41b985:	clc    
  41b986:	xchg   esp,eax
  41b987:	cli    
  41b988:	push   eax
  41b989:	ficomp DWORD PTR [ebp-0x20]
  41b98c:	mov    DWORD PTR [edi-0x63],esp
  41b98f:	dec    ebx
  41b990:	(bad)  
  41b991:	mul    BYTE PTR [ecx+ecx*1]
  41b994:	pop    esi
  41b995:	or     eax,0xffffffaf
  41b998:	mov    dh,0xd6
  41b99a:	pushf  
  41b99b:	inc    edi
  41b99c:	jmp    0x41b962
  41b99e:	(bad)  
  41b99f:	pop    ebp
  41b9a0:	lods   al,BYTE PTR ds:[esi]
  41b9a1:	dec    ebx
  41b9a2:	fiadd  WORD PTR [ebp-0x672d3b89]
  41b9a8:	sub    al,0x32
  41b9aa:	jmp    0xf87d:0x52eb3678
  41b9b1:	icebp  
  41b9b2:	cdq    
  41b9b3:	inc    ebp
  41b9b4:	xor    eax,0x7529ec88
  41b9b9:	(bad)  
  41b9ba:	sub    esp,DWORD PTR gs:[edi-0x778e75a9]
  41b9c1:	inc    esp
  41b9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9c3:	mov    eax,esp
  41b9c5:	push   ebp
  41b9c6:	add    eax,0xac599d2b
  41b9cb:	dec    edi
  41b9cc:	repz jge 0x41b9c9
  41b9cf:	dec    ebp
  41b9d0:	stc    
  41b9d1:	jo     0x41b9ca
  41b9d3:	in     eax,dx
  41b9d4:	pop    ss
  41b9d5:	mov    dl,0xa1
  41b9d7:	xchg   ecx,eax
  41b9d8:	mov    DWORD PTR [si+0x3b],ebp
  41b9dc:	es mov ebx,0xf242d94c
  41b9e2:	icebp  
  41b9e3:	in     al,dx
  41b9e4:	or     ecx,DWORD PTR [eax+edx*8-0x57]
  41b9e8:	xor    bl,BYTE PTR [edi-0x5]
  41b9eb:	scas   al,BYTE PTR es:[edi]
  41b9ec:	cmc    
  41b9ed:	push   esp
  41b9ee:	loope  0x41b970
  41b9f0:	jp     0x41b9fb
  41b9f2:	call   0x56661f95
  41b9f7:	fpatan 
  41b9f9:	ja     0x41ba4f
  41b9fb:	sbb    al,0xa5
  41b9fd:	cmp    esp,DWORD PTR [edx]
  41b9ff:	cmp    cl,BYTE PTR [esp+eax*2+0x79d596cb]
  41ba06:	(bad)  
  41ba07:	sbb    al,0x54
  41ba09:	lock or dh,BYTE PTR [ebx-0x2024cd97]
  41ba10:	mov    al,0xd
  41ba12:	cmp    dh,0x4d
  41ba15:	xlat   BYTE PTR ds:[ebx]
  41ba16:	and    BYTE PTR [edi+0x48],al
  41ba19:	xor    eax,0x7b14f452
  41ba1e:	mov    ah,0x87
  41ba20:	ja     0x41b9f9
  41ba22:	sar    BYTE PTR [edi],1
  41ba24:	les    ebp,FWORD PTR [esi]
  41ba26:	pop    ebx
  41ba27:	xchg   esi,eax
  41ba28:	jle    0x41ba56
  41ba2a:	data16 sbb al,0x26
  41ba2d:	jb     0x41b9cd
  41ba2f:	jg     0x41ba95
  41ba31:	jae    0x41b9ed
  41ba33:	cwde   
  41ba34:	aas    
  41ba35:	push   ebx
  41ba36:	mov    eax,ds:0xcef8be2b
  41ba3b:	into   
  41ba3c:	fs stc 
  41ba3e:	fs daa 
  41ba40:	or     esp,DWORD PTR [ecx]
  41ba42:	nop
  41ba43:	sbb    BYTE PTR [ecx+esi*8],bh
  41ba46:	fs daa 
  41ba48:	ss (bad) 
  41ba4a:	lahf   
  41ba4b:	fs cld 
  41ba4d:	xchg   ebx,eax
  41ba4e:	stc    
  41ba4f:	sub    al,0x8d
  41ba51:	add    al,0xde
  41ba53:	or     DWORD PTR [edx],edi
  41ba55:	mov    ?,WORD PTR [ebx-0x15695580]
  41ba5b:	mov    bh,0xee
  41ba5d:	mov    ebx,0x61f8efd1
  41ba62:	xor    ebx,DWORD PTR [edx]
  41ba64:	loopne 0x41ba59
  41ba66:	test   eax,0xa73e9d
  41ba6b:	call   0xd11d8f73
  41ba70:	and    dl,bh
  41ba72:	dec    edx
  41ba73:	shl    BYTE PTR [ecx+eax*2-0x268e955f],0xea
  41ba7b:	sbb    ah,cl
  41ba7d:	cs pop ecx
  41ba7f:	and    esp,ebp
  41ba81:	inc    esp
  41ba82:	add    DWORD PTR [ebx+ebx*4-0x27],eax
  41ba86:	push   es
  41ba87:	sub    BYTE PTR [edx],bh
  41ba89:	or     DWORD PTR [ecx-0x7b4b5c99],edi
  41ba8f:	test   DWORD PTR [esp+esi*2],eax
  41ba92:	or     BYTE PTR [ebx+0x6c],dh
  41ba95:	leave  
  41ba96:	dec    esi
  41ba97:	shl    bl,cl
  41ba99:	push   edx
  41ba9a:	dec    ecx
  41ba9b:	das    
  41ba9c:	retf   0x6da0
  41ba9f:	scas   eax,DWORD PTR es:[edi]
  41baa0:	adc    eax,0xc0efbed1
  41baa5:	xchg   edi,eax
  41baa6:	mov    ds:0x6445231,al
  41baab:	and    ebx,DWORD PTR [edx+0x1137266e]
  41bab1:	push   ecx
  41bab2:	inc    ecx
  41bab3:	xchg   esp,eax
  41bab4:	and    al,0x70
  41bab6:	adc    DWORD PTR [ebx+0xf7d968],ebp
  41babc:	jecxz  0x41ba74
  41babe:	add    edi,DWORD PTR [ecx]
  41bac0:	test   DWORD PTR [eax+0x9],eax
  41bac3:	data16 stc 
  41bac5:	popa   
  41bac6:	inc    edi
  41bac7:	stos   BYTE PTR es:[edi],al
  41bac8:	gs aad 0xfa
  41bacb:	arpl   WORD PTR [edi+0x3f14a75b],di
  41bad1:	push   ss
  41bad2:	dec    esi
  41bad3:	pop    ebx
  41bad4:	push   eax
  41bad5:	pop    eax
  41bad6:	pop    DWORD PTR [esi]
  41bad8:	mov    cl,0x30
  41bada:	and    eax,0x4c244c45
  41badf:	mov    WORD PTR [ecx-0x1e5bbd92],ds
  41bae5:	sbb    al,0x53
  41bae7:	jge    0x41bb0f
  41bae9:	xor    BYTE PTR [ecx+0x13],ah
  41baec:	fmul   QWORD PTR [ebx-0xa]
  41baef:	gs push ebp
  41baf1:	mov    dh,bl
  41baf3:	adc    dh,ah
  41baf5:	xlat   BYTE PTR ds:[ebx]
  41baf6:	add    dh,BYTE PTR [ecx+0x42d0ba35]
  41bafc:	repnz dec esp
  41bafe:	repnz in al,dx
  41bb00:	test   BYTE PTR [eax],0x4d
  41bb03:	or     esi,esp
  41bb05:	fst    st(0)
  41bb07:	add    al,0x55
  41bb09:	int3   
  41bb0a:	xchg   BYTE PTR [ebp+0x4605c923],cl
  41bb10:	jne    0x41ba9b
  41bb12:	xchg   edi,eax
  41bb13:	xchg   DWORD PTR [esi],ecx
  41bb15:	int3   
  41bb16:	xchg   DWORD PTR [ebx+0x33],eax
  41bb19:	dec    esi
  41bb1a:	push   edx
  41bb1b:	repnz ins BYTE PTR es:[edi],dx
  41bb1d:	push   0x75
  41bb1f:	pusha  
  41bb20:	xchg   DWORD PTR [ebx+0x7c17c2cf],edx
  41bb26:	dec    ebp
  41bb27:	push   ebx
  41bb28:	cmc    
  41bb29:	jmp    esp
  41bb2b:	jmp    0x41bb1b
  41bb2d:	into   
  41bb2e:	mov    ebp,0x706b8a1
  41bb33:	or     al,0x10
  41bb35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb36:	cdq    
  41bb37:	loop   0x41baf5
  41bb39:	or     al,0x99
  41bb3b:	mov    eax,ds:0xb597aa28
  41bb40:	sahf   
  41bb41:	jns    0x41bad6
  41bb43:	push   0x8
  41bb45:	(bad)  
  41bb47:	int3   
  41bb48:	int3   
  41bb49:	popa   
  41bb4a:	mov    eax,ds:0xa03cb7d
  41bb4f:	add    eax,0x430a162f
  41bb54:	idiv   BYTE PTR [ebx-0xeda049d]
  41bb5a:	jns    0x41bb97
  41bb5c:	fimul  DWORD PTR [eax]
  41bb5e:	scas   al,BYTE PTR es:[edi]
  41bb5f:	push   ebp
  41bb60:	ret    
  41bb61:	jnp    0x41bbba
  41bb63:	inc    eax
  41bb64:	xchg   esi,eax
  41bb65:	retf   
  41bb66:	nop
  41bb67:	je     0x41bbe7
  41bb69:	add    al,0xbc
  41bb6b:	inc    edx
  41bb6c:	mov    BYTE PTR [eax],0x0
  41bb6f:	add    BYTE PTR [eax],al
  41bb71:	add    dh,ah
  41bb73:	inc    eax
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0x87442583
  41bb7f:	mov    ebx,0x3775f683
  41bb84:	add    DWORD PTR [eax],eax
  41bb86:	repz add al,0x0
  41bb89:	add    bl,al
  41bb8b:	sahf   
  41bb8c:	push   esp
  41bb8d:	push   ecx
  41bb8e:	or     DWORD PTR ds:0xd1a5449,0x4f
  41bb95:	aas    
  41bb96:	ret    
  41bb97:	sbb    cl,BYTE PTR [edx-0x27]
  41bb9a:	dec    esp
  41bb9b:	sub    al,0x9d
  41bb9d:	mov    al,ds:0x70bc86fa
  41bba2:	bndldx (bad),[ebx+ebp*1]
  41bba6:	sub    dl,BYTE PTR [eax+0xb872984]
  41bbac:	jbe    0x41bc1e
  41bbae:	sar    DWORD PTR [esi+0x2f497de9],0x38
  41bbb5:	scas   al,BYTE PTR es:[edi]
  41bbb6:	sub    eax,edi
  41bbb8:	cdq    
  41bbb9:	push   ecx
  41bbba:	sub    al,0xb4
  41bbbc:	sub    BYTE PTR [ecx-0x3d],bl
  41bbbf:	loopne 0x41bc1c
  41bbc1:	js     0x41bc40
  41bbc3:	ins    BYTE PTR es:[edi],dx
  41bbc4:	mov    edx,0xe72239ac
  41bbc9:	sub    ch,al
  41bbcb:	fwait
  41bbcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbcd:	enter  0xc81f,0x3b
  41bbd1:	cli    
  41bbd2:	nop
  41bbd3:	xchg   edi,eax
  41bbd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbd5:	adc    edi,DWORD PTR [ebp+eax*2+0xa]
  41bbd9:	pop    esi
  41bbda:	sbb    al,0xe0
  41bbdc:	lods   al,BYTE PTR ds:[esi]
  41bbdd:	push   edx
  41bbde:	call   0x8dbe:0xa53649e6
  41bbe5:	je     0x41bbd1
  41bbe7:	pop    edx
  41bbe8:	or     DWORD PTR [ecx-0x62],ebp
  41bbeb:	add    ebx,DWORD PTR [eax+0x44bb3d01]
  41bbf1:	cmp    eax,0x46f467aa
  41bbf6:	push   0x2b
  41bbf8:	add    dx,ax
  41bbfb:	pop    ss
  41bbfc:	mov    bl,0xec
  41bbfe:	jae    0x41bbae
  41bc00:	mov    cs,WORD PTR [ebx-0x2c11e205]
  41bc06:	and    al,0xcd
  41bc08:	(bad)  
  41bc09:	xchg   esp,eax
  41bc0a:	arpl   si,bx
  41bc0c:	fwait
  41bc0d:	mov    DWORD PTR [eax+0x3ba66564],ebp
  41bc13:	push   edi
  41bc14:	cmc    
  41bc15:	push   0xdf76601e
  41bc1a:	mov    bh,0x9f
  41bc1c:	pop    esp
  41bc1d:	fcmovbe st,st(7)
  41bc1f:	in     eax,dx
  41bc20:	inc    ecx
  41bc21:	shl    DWORD PTR [edx+0x37],0xf5
  41bc25:	dec    edx
  41bc26:	mov    ah,0x86
  41bc28:	daa    
  41bc29:	sbb    cl,BYTE PTR [edx]
  41bc2b:	in     eax,0x9e
  41bc2d:	(bad)  
  41bc2f:	in     al,0xa
  41bc31:	xchg   ecx,eax
  41bc32:	or     edx,ebx
  41bc34:	pushf  
  41bc35:	dec    ebx
  41bc36:	jecxz  0x41bc45
  41bc38:	or     al,BYTE PTR [esi-0x11]
  41bc3b:	sbb    BYTE PTR [ebx+0x423bdf9b],0x9c
  41bc42:	into   
  41bc43:	mov    ebx,0x447ba577
  41bc48:	sahf   
  41bc49:	dec    eax
  41bc4a:	aaa    
  41bc4b:	jne    0x41bc04
  41bc4d:	sub    al,0xa3
  41bc4f:	lods   al,BYTE PTR ds:[esi]
  41bc50:	and    BYTE PTR [esi+0x57],0x15
  41bc54:	sti    
  41bc55:	mov    edi,DWORD PTR [eax]
  41bc57:	add    DWORD PTR [eax],0xffffff94
  41bc5a:	popf   
  41bc5b:	xchg   ebp,eax
  41bc5c:	hlt    
  41bc5d:	fs iret 
  41bc5f:	add    BYTE PTR [edi-0x6d480e40],bh
  41bc65:	cmp    al,0x30
  41bc67:	out    0xfd,eax
  41bc69:	dec    eax
  41bc6a:	ds in  al,0xe2
  41bc6d:	push   cs
  41bc6e:	jle    0x41bc91
  41bc70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc71:	add    bh,BYTE PTR [edi-0x29877209]
  41bc77:	jbe    0x41bc9c
  41bc79:	xor    BYTE PTR [ebp-0x2de4c017],bl
  41bc7f:	jp     0x41bc0f
  41bc81:	call   0x2cb4:0xad0fa05e
  41bc88:	test   al,0x3
  41bc8a:	ret    0x67fa
  41bc8d:	jmp    0x41bced
  41bc8f:	fisubr WORD PTR [edi-0x7f7db6e5]
  41bc95:	(bad)  
  41bc96:	(bad)  
  41bc97:	fiadd  DWORD PTR [eax+0x1bcb32b2]
  41bc9d:	iret   
  41bc9e:	mov    cl,0x9b
  41bca0:	repnz inc ebp
  41bca2:	rol    BYTE PTR [ebx+esi*1],cl
  41bca5:	xor    ebx,eax
  41bca7:	imul   esp,DWORD PTR [ecx+0x6a],0x8dc93ed0
  41bcae:	aad    0xbb
  41bcb0:	inc    esi
  41bcb1:	es loop 0x41bcbc
  41bcb4:	das    
  41bcb5:	rol    DWORD PTR [edi],1
  41bcb7:	cmp    edi,eax
  41bcb9:	ret    0xe3d5
  41bcbc:	mov    WORD PTR [eax-0x6e2789b5],ds
  41bcc2:	stos   DWORD PTR es:[edi],eax
  41bcc3:	pop    es
  41bcc4:	data16 je 0x41bca2
  41bcc7:	dec    edx
  41bcc8:	out    0x5c,eax
  41bcca:	jecxz  0x41bcd5
  41bccc:	and    BYTE PTR [eax+0x2f4e8c1b],bh
  41bcd2:	mov    ah,0xad
  41bcd4:	jb     0x41bcce
  41bcd6:	jecxz  0x41bd08
  41bcd8:	retf   0x1f2d
  41bcdb:	fidiv  DWORD PTR [edi]
  41bcdd:	pop    ecx
  41bcde:	xor    al,0xd7
  41bce0:	and    eax,0xedadc02a
  41bce5:	adc    esp,esi
  41bce7:	and    BYTE PTR fs:[edx],ah
  41bcea:	lods   eax,DWORD PTR ds:[esi]
  41bceb:	adc    al,0x2e
  41bced:	and    esi,edx
  41bcef:	mov    cl,0xc5
  41bcf1:	les    edx,FWORD PTR [ebx]
  41bcf3:	inc    ebp
  41bcf4:	xor    DWORD PTR [ebx-0x16],eax
  41bcf7:	cmc    
  41bcf8:	push   ebx
  41bcf9:	xor    BYTE PTR [ebx-0x5f],dl
  41bcfc:	imul   esi,DWORD PTR [ecx],0x119acd3
  41bd02:	and    eax,0x2452e1c3
  41bd07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd08:	in     al,0x7d
  41bd0a:	jae    0x41bca3
  41bd0c:	dec    eax
  41bd0d:	jge    0x41bd50
  41bd0f:	xor    cl,cl
  41bd11:	jne    0x41bd53
  41bd13:	dec    esi
  41bd14:	inc    edi
  41bd15:	out    0xd2,al
  41bd17:	xchg   esi,eax
  41bd18:	repz pop sp
  41bd1b:	dec    edi
  41bd1c:	(bad)  
  41bd1e:	mov    bl,0xe
  41bd20:	pop    ds
  41bd21:	xor    DWORD PTR [edi],0xe
  41bd24:	push   edi
  41bd25:	int    0xa3
  41bd27:	sbb    al,0x95
  41bd29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd2a:	mov    ebp,0x5445588f
  41bd2f:	jmp    0x41bd8c
  41bd31:	mov    eax,0x15314f8a
  41bd36:	neg    DWORD PTR [bp+si-0x3acd]
  41bd3b:	enter  0xdade,0x95
  41bd3f:	shr    DWORD PTR [edx-0x7b],cl
  41bd42:	or     al,BYTE PTR [ebx+ecx*1]
  41bd45:	aad    0x27
  41bd47:	jmp    0x41bd45
  41bd49:	mov    al,ds:0xb86d36b5
  41bd4e:	inc    esi
  41bd4f:	sub    DWORD PTR [ebx-0x786934b1],0x68
  41bd56:	retf   
  41bd57:	mov    eax,0x2aae1f11
  41bd5c:	and    DWORD PTR [ebp+0x31],edi
  41bd5f:	stos   DWORD PTR es:[edi],eax
  41bd60:	fs fs ss sub al,0xec
  41bd65:	lea    ebp,[ebx]
  41bd67:	test   BYTE PTR [ebp+ecx*2+0x14],al
  41bd6b:	push   eax
  41bd6c:	jmp    0x41bd1f
  41bd6e:	in     eax,0x78
  41bd70:	mov    ah,0x9b
  41bd72:	ins    DWORD PTR es:[edi],dx
  41bd73:	(bad)  
  41bd74:	loopne 0x41bd7b
  41bd76:	sub    DWORD PTR [ecx],ebp
  41bd78:	adc    eax,0x1cda8c7
  41bd7d:	pop    es
  41bd7e:	sub    BYTE PTR [esi],al
  41bd80:	in     eax,dx
  41bd81:	fcmove st,st(1)
  41bd83:	stc    
  41bd84:	xor    BYTE PTR [edi+0x58e43216],al
  41bd8a:	ins    BYTE PTR es:[edi],dx
  41bd8b:	fwait
  41bd8c:	nop
  41bd8d:	pusha  
  41bd8e:	xchg   ebp,eax
  41bd8f:	xor    ebp,DWORD PTR [ecx]
  41bd91:	sub    DWORD PTR [eax-0x794cb4fb],ebp
  41bd97:	popf   
  41bd98:	dec    ecx
  41bd99:	mov    ebp,?
  41bd9b:	add    al,0x81
  41bd9d:	push   0xd4ad41a4
  41bda2:	sbb    eax,0xf8479e62
  41bda7:	fmul   DWORD PTR [ebp+0x6]
  41bdaa:	aad    0x84
  41bdac:	jno    0x41be05
  41bdae:	int    0x8c
  41bdb0:	fsub   QWORD PTR [ebx+0x4eb9536b]
  41bdb6:	outs   dx,DWORD PTR ds:[esi]
  41bdb7:	push   0x4e
  41bdb9:	or     BYTE PTR [esi],bl
  41bdbb:	xchg   esp,eax
  41bdbc:	loop   0x41bd9f
  41bdbe:	sub    BYTE PTR [ecx],bl
  41bdc0:	mov    ebp,0x3958630c
  41bdc5:	sub    cl,BYTE PTR [ecx]
  41bdc7:	pop    ds
  41bdc8:	outs   dx,DWORD PTR ds:[esi]
  41bdc9:	jns    0x41be19
  41bdcb:	mov    ds,WORD PTR [ebp+0x23]
  41bdce:	shl    BYTE PTR [edx],0xa
  41bdd1:	lds    esi,FWORD PTR [eax]
  41bdd3:	(bad)  
  41bdd4:	or     DWORD PTR [ebx-0x62],ebx
  41bdd7:	cmp    bh,dh
  41bdd9:	jle    0x41be1f
  41bddb:	cld    
  41bddc:	jg     0x41bd66
  41bdde:	mov    ecx,DWORD PTR ss:[edi+0x52]
  41bde2:	call   0x1b3af341
  41bde7:	bound  ebp,QWORD PTR [ebp+0x36]
  41bdea:	stos   BYTE PTR es:[edi],al
  41bdeb:	ins    DWORD PTR es:[edi],dx
  41bdec:	sub    ecx,DWORD PTR [edx]
  41bdee:	cmp    DWORD PTR [eax+0x7ba54d04],esp
  41bdf4:	fild   WORD PTR [ebx+0x14]
  41bdf7:	ss icebp 
  41bdf9:	std    
  41bdfa:	rol    BYTE PTR [edx+0x0],cl
  41bdfd:	(bad)  
  41bdfe:	in     eax,0x96
  41be00:	and    DWORD PTR [ebx],0xed0ffe91
  41be06:	inc    ebx
  41be07:	pop    eax
  41be08:	(bad)  
  41be09:	cli    
  41be0a:	aad    0xf2
  41be0c:	or     al,0x9
  41be0e:	sti    
  41be0f:	lds    edi,FWORD PTR [edx-0x29]
  41be12:	and    dh,ch
  41be14:	add    dl,BYTE PTR [edi+0x63]
  41be17:	and    ah,bh
  41be19:	popa   
  41be1a:	mov    ?,ecx
  41be1c:	(bad)  
  41be1d:	mov    dh,0xae
  41be1f:	scas   al,BYTE PTR es:[edi]
  41be20:	outs   dx,DWORD PTR ds:[esi]
  41be21:	int3   
  41be22:	ds jmp 0xbccf:0x9fd1543
  41be2a:	mov    ah,0xa5
  41be2c:	fcmovnu st,st(3)
  41be2e:	enter  0xb5a0,0x1f
  41be32:	mov    dl,0x77
  41be34:	add    eax,DWORD PTR [ebx-0x5697af68]
  41be3a:	loope  0x41be9a
  41be3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be3d:	jae    0x41be0a
  41be3f:	mov    dh,0x18
  41be41:	mov    ecx,0x9986b8e7
  41be46:	or     bh,BYTE PTR [edi+esi*8]
  41be49:	jp     0x41be0d
  41be4b:	sbb    ch,BYTE PTR [edx]
  41be4d:	or     eax,0xecc4935a
  41be52:	xchg   ebp,eax
  41be53:	scas   eax,DWORD PTR es:[edi]
  41be54:	cmp    eax,0x4fd5ce7
  41be59:	repnz pop ds
  41be5b:	mov    ds:0xfef8630,eax
  41be60:	mov    dl,0x89
  41be62:	ins    BYTE PTR es:[edi],dx
  41be63:	pop    ebp
  41be64:	addr16 jno 0x41beaa
  41be67:	je     0x41bece
  41be69:	pop    ds
  41be6a:	ret    0x6116
  41be6d:	ins    BYTE PTR es:[edi],dx
  41be6e:	dec    ecx
  41be6f:	sub    eax,0xe3942cd6
  41be74:	(bad)  
  41be75:	(bad)  
  41be77:	imul   eax,DWORD PTR [ebx+0x31db2758],0xffffffdb
  41be7e:	jnp    0x41bec3
  41be80:	add    ch,BYTE PTR [ebp-0x2b28c7ac]
  41be86:	test   eax,0x8b21b3d4
  41be8b:	test   BYTE PTR [ebx],0x44
  41be8e:	push   0x24a24b59
  41be93:	std    
  41be94:	fwait
  41be95:	xchg   ecx,eax
  41be96:	add    edx,DWORD PTR [edi-0x61]
  41be99:	(bad)  
  41be9a:	aad    0x5e
  41be9c:	in     al,0x48
  41be9e:	dec    ecx
  41be9f:	sti    
  41bea0:	aas    
  41bea1:	mov    cl,al
  41bea3:	xchg   edi,eax
  41bea4:	frstor [eax-0x1e3f5ad6]
  41beaa:	(bad)  
  41beab:	mov    ch,0x53
  41bead:	stc    
  41beae:	mov    eax,ds:0x4a191160
  41beb3:	enter  0xd036,0x44
  41beb7:	push   cs
  41beb8:	fstp   QWORD PTR [edi]
  41beba:	pop    ebx
  41bebb:	push   ds
  41bebc:	jg     0x41bed4
  41bebe:	cmp    al,0xfc
  41bec0:	cmp    DWORD PTR [eax],ebp
  41bec2:	pop    esp
  41bec3:	push   edx
  41bec4:	jno    0x41be8a
  41bec6:	in     al,dx
  41bec7:	sub    DWORD PTR [eax-0x41757edd],edi
  41becd:	int    0x19
  41becf:	and    dl,BYTE PTR [ebx+0x19]
  41bed2:	mov    ebp,0x1e99fd0d
  41bed7:	cdq    
  41bed8:	adc    esi,ebp
  41beda:	xor    BYTE PTR [ecx],bl
  41bedc:	leave  
  41bedd:	sbb    DWORD PTR [edi+0x344d61be],esi
  41bee3:	or     ebp,DWORD PTR [esi]
  41bee5:	aam    0x53
  41bee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bee8:	sub    eax,0xe3a83a59
  41beed:	mov    WORD PTR [edx+0x76a7ca48],gs
  41bef3:	lods   eax,DWORD PTR ds:[esi]
  41bef4:	inc    ecx
  41bef5:	cwde   
  41bef6:	inc    eax
  41bef7:	lds    edx,FWORD PTR fs:[esp+ebx*8]
  41befb:	repz jne 0x41bef4
  41befe:	inc    edi
  41beff:	fdivr  QWORD PTR [esi-0x19e9f7ac]
  41bf05:	adc    esi,esi
  41bf07:	out    dx,eax
  41bf08:	fucomp st(1)
  41bf0a:	scas   al,BYTE PTR es:[edi]
  41bf0b:	add    al,0xaf
  41bf0d:	adc    DWORD PTR [ebp+eax*4+0x7fed03b0],ecx
  41bf14:	push   ecx
  41bf15:	icebp  
  41bf16:	xor    al,0x4e
  41bf18:	icebp  
  41bf19:	mov    bl,0x58
  41bf1b:	ror    esp,1
  41bf1d:	cdq    
  41bf1e:	outs   dx,BYTE PTR ds:[esi]
  41bf1f:	push   0xa8e3095c
  41bf24:	and    al,0xcd
  41bf26:	inc    edx
  41bf27:	mov    ch,0x8e
  41bf29:	imul   ecx,edi,0xb76a4968
  41bf2f:	das    
  41bf30:	xor    DWORD PTR [esi-0x36],edi
  41bf33:	push   cs
  41bf34:	xor    ch,BYTE PTR [ebx+0x666d1e20]
  41bf3a:	mov    bh,0x10
  41bf3c:	lss    edx,FWORD PTR [ebx+0x75072be3]
  41bf43:	int3   
  41bf44:	push   ebp
  41bf45:	loope  0x41bf58
  41bf47:	jl     0x41befe
  41bf49:	adc    bh,bl
  41bf4b:	out    0x73,eax
  41bf4d:	cmp    al,0x63
  41bf4f:	push   esp
  41bf50:	jno    0x41bfc9
  41bf52:	gs call 0xc066:0x98641f6a
  41bf5a:	add    cl,BYTE PTR [ecx]
  41bf5c:	and    DWORD PTR fs:[esi+ecx*1-0x69],ebx
  41bf61:	mov    es,WORD PTR [ecx+0x531e3f1d]
  41bf67:	fwait
  41bf68:	sti    
  41bf69:	into   
  41bf6a:	lods   eax,DWORD PTR ds:[esi]
  41bf6b:	test   edx,ebp
  41bf6d:	cwde   
  41bf6e:	push   ss
  41bf6f:	mov    ebp,0xcb5dffe5
  41bf74:	jb     0x41bf3a
  41bf76:	add    eax,esi
  41bf78:	(bad)  
  41bf79:	outs   dx,BYTE PTR ds:[esi]
  41bf7b:	mov    cl,0x44
  41bf7d:	xchg   BYTE PTR [eax-0x3d],bl
  41bf80:	popa   
  41bf81:	je     0x41bfe8
  41bf83:	pop    ecx
  41bf84:	jmp    0x41bff9
  41bf86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf87:	lds    esp,FWORD PTR [esi+0x633f153f]
  41bf8d:	es add al,0x36
  41bf90:	mov    DWORD PTR [ebp+0x2531fe6b],ebx
  41bf96:	xlat   BYTE PTR ds:[ebx]
  41bf97:	les    ebx,FWORD PTR [edi+0x1c38a607]
  41bf9d:	out    0x63,eax
  41bf9f:	dec    esp
  41bfa0:	lods   al,BYTE PTR ds:[esi]
  41bfa1:	mov    ah,0xf4
  41bfa3:	mov    esi,0x2999d80d
  41bfa8:	xchg   edi,eax
  41bfa9:	push   es
  41bfaa:	add    al,0x98
  41bfac:	jmp    0x41bf91
  41bfae:	(bad)  
  41bfaf:	add    eax,0x6db85254
  41bfb4:	mov    edi,0x61993d2d
  41bfb9:	adc    bh,BYTE PTR [edx-0x48c62b8]
  41bfbf:	sahf   
  41bfc0:	xor    al,0xac
  41bfc2:	mov    ch,0x93
  41bfc4:	mov    ds:0x93123b8e,al
  41bfc9:	ret    0xc5f8
  41bfcc:	inc    ebp
  41bfcd:	and    esi,DWORD PTR [ecx]
  41bfcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfd1:	or     eax,0xf3306a6c
  41bfd6:	out    dx,eax
  41bfd7:	pop    ds
  41bfd8:	mov    ds:0x34eb93d4,al
  41bfdd:	rcl    BYTE PTR [ecx],1
  41bfdf:	iret   
  41bfe0:	jmp    0xb1349e43
  41bfe5:	jge    0x41c01c
  41bfe7:	ror    DWORD PTR [ebx],cl
  41bfe9:	ss mov esp,0x3d9a7d8d
  41bfef:	fisttp DWORD PTR ds:0x14e15b80
  41bff5:	daa    
  41bff6:	test   al,0xc0
  41bff8:	jmp    0x41bfa5
  41bffa:	outs   dx,DWORD PTR ds:[esi]
  41bffb:	xchg   ebx,eax
  41bffc:	jecxz  0x41c067
  41bffe:	or     BYTE PTR [edi],cl
  41c000:	mov    eax,0xd74bb60a
  41c005:	aad    0x1
  41c007:	sbb    ebx,ebx
  41c009:	lock gs and eax,0x1d464f16
  41c010:	cdq    
  41c011:	and    esp,ecx
  41c013:	xchg   esi,eax
  41c014:	out    dx,al
  41c015:	xchg   edi,eax
  41c016:	or     al,0x92
  41c018:	test   DWORD PTR [edx*4+0x7298c359],ebp
  41c01f:	neg    BYTE PTR [ecx]
  41c021:	fcom   DWORD PTR [edx-0x6fe7397]
  41c027:	mov    BYTE PTR [edi+ecx*8+0x9],bl
  41c02b:	fistp  DWORD PTR [edi-0x624ac621]
  41c031:	pop    edx
  41c032:	std    
  41c033:	inc    eax
  41c034:	jg     0x41bfd3
  41c036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c037:	mov    dl,0xda
  41c039:	sub    ebp,eax
  41c03b:	mov    esp,cs
  41c03d:	fwait
  41c03e:	aad    0xf6
  41c040:	cs inc edi
  41c042:	out    0xa3,eax
  41c044:	xor    BYTE PTR [ebx],dl
  41c046:	imul   edi,DWORD PTR [ebp-0x2192621d],0xffffffd1
  41c04d:	loope  0x41c038
  41c04f:	rcl    BYTE PTR [esi+esi*2-0x6],0xf5
  41c054:	and    edi,0xffffff8d
  41c057:	jle    0x41c0bf
  41c059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c05a:	dec    eax
  41c05b:	fild   DWORD PTR [eax-0x56fc1a62]
  41c061:	xor    al,0xa3
  41c063:	(bad)  
  41c064:	out    dx,al
  41c065:	das    
  41c066:	call   0x23a7:0xc4441020
  41c06d:	xchg   edx,eax
  41c06e:	xchg   eax,edi
  41c070:	pop    es
  41c071:	or     BYTE PTR [esp+ecx*4],dl
  41c074:	dec    edx
  41c075:	push   ss
  41c076:	fld    TBYTE PTR [edi-0x365f6c64]
  41c07c:	mov    ecx,0x0
  41c081:	add    BYTE PTR [esi-0x10fe18c6],dh
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	sub    eax,0x68fca26d
  41c093:	cmp    al,0x1
  41c095:	add    bl,dh
  41c097:	add    al,0x0
  41c099:	add    BYTE PTR [ebp+0x5c0a0785],al
  41c09f:	in     eax,0x26
  41c0a1:	aad    0x62
  41c0a3:	fdivr  DWORD PTR [ecx+0x38818c38]
  41c0a9:	lahf   
  41c0aa:	mov    WORD PTR ds:0x42999207,es
  41c0b0:	or     al,0x8e
  41c0b2:	mov    ds:0xbc952b19,eax
  41c0b7:	xor    edx,DWORD PTR [edi+0x67]
  41c0ba:	pop    eax
  41c0bb:	lahf   
  41c0bc:	test   BYTE PTR [eax+ebp*1+0x7],bh
  41c0c0:	fsub   QWORD PTR [edi+eiz*8]
  41c0c3:	clc    
  41c0c4:	leave  
  41c0c5:	dec    ebx
  41c0c6:	into   
  41c0c7:	or     al,0x8d
  41c0c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ca:	leave  
  41c0cb:	stos   BYTE PTR es:[edi],al
  41c0cc:	jo     0x41c142
  41c0ce:	not    DWORD PTR [esi+edx*1+0x8]
  41c0d2:	push   esp
  41c0d3:	in     eax,0x10
  41c0d5:	add    BYTE PTR [ecx],0xc0
  41c0d8:	hlt    
  41c0d9:	ds mov bl,0xca
  41c0dc:	push   ebx
  41c0dd:	cmp    bh,BYTE PTR [edx+ebx*4-0x5d]
  41c0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0e2:	cmp    al,BYTE PTR ds:0x894bba19
  41c0e8:	mov    ebx,0x4f6a5463
  41c0ed:	shr    DWORD PTR [edx],cl
  41c0ef:	int3   
  41c0f0:	data16 mov BYTE PTR [ebx-0x3f8dc4a0],dh
  41c0f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0f8:	data16 xchg al,dl
  41c0fb:	sbb    eax,0xf89755f9
  41c100:	rol    BYTE PTR [ecx-0x4555a3f5],1
  41c106:	ins    DWORD PTR es:[edi],dx
  41c107:	add    edi,DWORD PTR [esi]
  41c109:	inc    eax
  41c10a:	pop    edx
  41c10b:	ss mov dl,0x69
  41c10e:	mov    dh,0xb5
  41c110:	mov    esp,0xc671ce47
  41c115:	repnz pop eax
  41c117:	cmc    
  41c118:	dec    esp
  41c119:	daa    
  41c11a:	mov    edx,0x2f9cd537
  41c11f:	xchg   DWORD PTR [ebx-0x4a],ebx
  41c122:	inc    esp
  41c123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c124:	xchg   edi,eax
  41c125:	adc    BYTE PTR [eax],cl
  41c127:	dec    esi
  41c128:	or     eax,0x88a42029
  41c12d:	mov    cl,0xc9
  41c12f:	mov    esi,DWORD PTR [ebx]
  41c131:	js     0x41c156
  41c133:	jge    0x41c1a5
  41c135:	fwait
  41c136:	lahf   
  41c137:	and    esi,DWORD PTR [ecx]
  41c139:	xlat   BYTE PTR ds:[ebx]
  41c13a:	inc    esp
  41c13b:	addr16 aas 
  41c13d:	push   ds
  41c13e:	push   es
  41c13f:	mov    WORD PTR [ebx-0x6fdf09f9],ds
  41c145:	sbb    esi,DWORD PTR [eax]
  41c147:	push   esi
  41c148:	push   esp
  41c149:	sub    bl,BYTE PTR [ecx]
  41c14b:	aas    
  41c14c:	dec    edi
  41c14d:	lea    ebp,[edi+0x57dc7fa0]
  41c153:	(bad)  
  41c154:	push   0x2e9e1e84
  41c159:	in     eax,0xc2
  41c15b:	scas   eax,DWORD PTR es:[edi]
  41c15c:	call   0x7ea2:0x1156d58a
  41c163:	rcl    DWORD PTR [eax],cl
  41c165:	xor    BYTE PTR [ebx],ch
  41c167:	xchg   ebx,eax
  41c168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c169:	arpl   WORD PTR [eax+0x3a5d2b90],dx
  41c16f:	xchg   edi,eax
  41c170:	cdq    
  41c171:	mov    edi,0xccf5f113
  41c176:	in     al,0xc
  41c178:	pop    edi
  41c179:	fidiv  DWORD PTR [edx+esi*4]
  41c17c:	pop    edx
  41c17d:	addr16 loop 0x41c19e
  41c180:	pop    ebx
  41c181:	sub    DWORD PTR [ecx+ebx*4+0x69],eax
  41c185:	dec    edi
  41c186:	jne    0x41c189
  41c188:	fisttp QWORD PTR ds:0x635a4212
  41c18e:	js     0x41c151
  41c190:	psrlq  mm1,QWORD PTR [edi+0x6f]
  41c194:	std    
  41c195:	sahf   
  41c196:	xchg   ecx,eax
  41c197:	push   edi
  41c198:	leave  
  41c199:	and    esi,ebp
  41c19b:	cwde   
  41c19c:	call   0xd062:0x9d5009c4
  41c1a3:	push   cs
  41c1a4:	lods   eax,DWORD PTR ds:[esi]
  41c1a5:	adc    DWORD PTR [edi-0x38],esp
  41c1a8:	mov    al,ds:0x937ae458
  41c1ad:	je     0x41c1eb
  41c1af:	xor    al,0x7a
  41c1b1:	inc    eax
  41c1b2:	sbb    cl,BYTE PTR [eax]
  41c1b4:	dec    ebx
  41c1b5:	or     ch,BYTE PTR [edi-0x47]
  41c1b8:	sbb    BYTE PTR [ebx],dl
  41c1ba:	call   0xe06b:0x9588a32b
  41c1c1:	repz pop eax
  41c1c3:	mov    WORD PTR [esi+0x3cfe21f6],ds
  41c1c9:	jmp    0xaa16aa01
  41c1ce:	add    dh,BYTE PTR [eax-0x76]
  41c1d1:	or     ecx,ebp
  41c1d3:	jl     0x41c225
  41c1d5:	adc    DWORD PTR [edx],esi
  41c1d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1d8:	aam    0x87
  41c1da:	cmp    BYTE PTR [eax],al
  41c1dc:	mov    ebx,ecx
  41c1de:	and    DWORD PTR [ebp-0x66],esp
  41c1e1:	ret    
  41c1e2:	dec    ebp
  41c1e3:	adc    BYTE PTR [ebx+0x7263cb7d],dl
  41c1e9:	and    al,0xcc
  41c1eb:	pop    esi
  41c1ec:	sub    esp,DWORD PTR [edx-0x76]
  41c1ef:	cld    
  41c1f0:	rcl    DWORD PTR [esp+eax*8+0x2f],0xee
  41c1f5:	inc    ebp
  41c1f6:	mov    ebp,0x6ca8d68e
  41c1fb:	retf   0xdcc
  41c1fe:	retf   0xa247
  41c201:	out    0x55,al
  41c203:	popa   
  41c204:	sub    al,0x45
  41c206:	mov    ebp,0xe9d230f6
  41c20b:	add    eax,0x34d01514
  41c210:	fs pusha 
  41c212:	(bad)  
  41c213:	pop    esi
  41c214:	sahf   
  41c215:	mov    ah,0xb8
  41c217:	loope  0x41c1e2
  41c219:	and    ebx,DWORD PTR [esi]
  41c21b:	xchg   edx,eax
  41c21c:	test   eax,0x29c2d897
  41c221:	dec    edx
  41c222:	sahf   
  41c223:	and    DWORD PTR [ebx-0x795c5236],ebp
  41c229:	mov    WORD PTR [ecx-0x36f9e331],ds
  41c22f:	int    0x9
  41c231:	add    BYTE PTR [ebx+0x5c],0x29
  41c235:	push   ecx
  41c236:	inc    ecx
  41c237:	sub    ebx,DWORD PTR [eax]
  41c239:	lahf   
  41c23a:	sub    al,0x6c
  41c23c:	inc    esi
  41c23d:	test   DWORD PTR [esp+eax*1-0x61],edx
  41c241:	cwde   
  41c242:	jp     0x41c285
  41c244:	inc    ecx
  41c245:	ja     0x41c1f8
  41c247:	inc    edi
  41c248:	mov    DWORD PTR [ebx+0x5e],edx
  41c24b:	rol    BYTE PTR [ecx+ebp*1],1
  41c24e:	sbb    al,BYTE PTR [esi-0x71732b99]
  41c254:	lods   al,BYTE PTR ds:[esi]
  41c255:	out    dx,eax
  41c256:	mov    edx,DWORD PTR [ebx+0x1b]
  41c259:	jo     0x41c253
  41c25b:	(bad)  
  41c25c:	fmul   QWORD PTR [esi+0x1d1fd953]
  41c262:	dec    edx
  41c263:	pop    edx
  41c264:	fwait
  41c265:	mov    cl,0x11
  41c267:	push   0x6dbca1e0
  41c26c:	push   esi
  41c26d:	adc    BYTE PTR [edx-0x2],al
  41c270:	sub    al,0x56
  41c272:	(bad)  [ebp-0x60]
  41c275:	dec    edi
  41c276:	add    DWORD PTR [esi+ebx*2-0xc],0x2f46bd54
  41c27e:	push   esi
  41c27f:	adc    eax,0x1bbc7aab
  41c284:	ss popa 
  41c286:	and    al,bl
  41c288:	push   0x8c24c54b
  41c28d:	retf   
  41c28e:	or     bl,ch
  41c290:	das    
  41c291:	and    al,0xda
  41c293:	lds    edi,FWORD PTR [ebp-0x49]
  41c296:	add    DWORD PTR [ecx+edi*8],esp
  41c299:	pop    es
  41c29a:	shr    bh,cl
  41c29c:	test   eax,0xddd87f33
  41c2a1:	inc    edi
  41c2a2:	icebp  
  41c2a3:	xor    ecx,0xd3508789
  41c2a9:	and    eax,DWORD PTR [ebp+0x6a]
  41c2ac:	ret    
  41c2ad:	dec    esi
  41c2ae:	add    DWORD PTR [esi+eax*1-0x12d7fd81],ebp
  41c2b5:	mov    ebp,edx
  41c2b7:	out    dx,al
  41c2b8:	xor    BYTE PTR [esi],ch
  41c2ba:	dec    ebx
  41c2bb:	mov    ch,0x29
  41c2bd:	loope  0x41c27b
  41c2bf:	dec    edi
  41c2c0:	mov    WORD PTR [edi-0xe],?
  41c2c3:	dec    esp
  41c2c4:	sbb    DWORD PTR [ebx],ecx
  41c2c6:	jp     0x41c256
  41c2c8:	mov    eax,edi
  41c2ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2cb:	sbb    BYTE PTR [ebx-0x20402c36],ch
  41c2d1:	mov    ah,0xcd
  41c2d3:	mov    DWORD PTR [ecx],eax
  41c2d5:	lock adc dl,BYTE PTR [eax]
  41c2d8:	mov    edx,0x9b76a3a0
  41c2dd:	aaa    
  41c2de:	mov    ds,WORD PTR [ebx+0x52e9c3ec]
  41c2e4:	retf   
  41c2e5:	repnz outs dx,BYTE PTR ss:[esi]
  41c2e8:	jae    0x41c2d4
  41c2ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2eb:	repz push es
  41c2ed:	out    0x76,al
  41c2ef:	mov    edi,0x3bb6e9a8
  41c2f4:	popf   
  41c2f5:	lods   al,BYTE PTR ds:[esi]
  41c2f6:	std    
  41c2f7:	adc    al,0x70
  41c2f9:	fsubp  st(5),st
  41c2fb:	xchg   ebx,eax
  41c2fc:	pusha  
  41c2fd:	ds aaa 
  41c2ff:	popf   
  41c300:	mov    ah,0xdb
  41c302:	mov    al,ds:0xe6a6624e
  41c307:	or     eax,0x72a39a34
  41c30c:	sub    BYTE PTR [edi],bl
  41c30e:	test   eax,0x6bf9207b
  41c313:	jmp    0x41c30b
  41c315:	sbb    ch,BYTE PTR [edi]
  41c317:	cmp    eax,esi
  41c319:	pop    esp
  41c31a:	cmovo  edi,ebp
  41c31d:	iret   
  41c31e:	xor    DWORD PTR [esp+esi*4],edx
  41c321:	xor    ebp,esi
  41c323:	xor    eax,0x1151b5fd
  41c328:	mov    dl,0xe9
  41c32a:	xchg   esp,eax
  41c32b:	push   eax
  41c32c:	mov    ds:0x188fcca,eax
  41c331:	mov    al,0xf9
  41c333:	mov    eax,cs:0x61a85843
  41c339:	xchg   esi,eax
  41c33a:	mov    DWORD PTR [eax],ebp
  41c33c:	cld    
  41c33d:	aas    
  41c33e:	es stos BYTE PTR es:[edi],al
  41c340:	mov    edi,0x78f3d665
  41c345:	cmp    ch,BYTE PTR [edi+ebx*4]
  41c348:	jmp    0x5c66f52e
  41c34d:	je     0x41c338
  41c34f:	outs   dx,BYTE PTR es:[esi]
  41c351:	out    0x9c,al
  41c353:	cmp    al,0xc
  41c355:	or     eax,0xd7daabf5
  41c35a:	mov    dh,0xe5
  41c35c:	sbb    eax,0x6bd55f88
  41c361:	in     eax,dx
  41c362:	popa   
  41c363:	mov    eax,es:0x726b044
  41c369:	add    al,0x56
  41c36b:	das    
  41c36c:	adc    dl,BYTE PTR [eax]
  41c36e:	or     DWORD PTR [edx-0x4221ece6],esp
  41c374:	mov    eax,ds:0x635f4e37
  41c379:	fisub  DWORD PTR [ebp+0x4771bbce]
  41c37f:	xchg   BYTE PTR [ebp-0xc],bh
  41c382:	add    dh,BYTE PTR [esi]
  41c384:	and    esp,DWORD PTR [ebp-0x3b]
  41c387:	ds push ss
  41c389:	mov    dh,0xba
  41c38b:	adc    DWORD PTR [eax+ecx*1-0xe4d080b],ebx
  41c392:	adc    DWORD PTR [esi-0x3],0x28d4552c
  41c399:	das    
  41c39a:	ret    
  41c39b:	fwait
  41c39c:	dec    ebx
  41c39d:	leave  
  41c39e:	retf   
  41c39f:	dec    esi
  41c3a0:	test   BYTE PTR [edi+0x536ff5c1],0x67
  41c3a7:	mov    dl,0xa6
  41c3a9:	fsubr  st,st(0)
  41c3ab:	icebp  
  41c3ac:	push   ebp
  41c3ad:	or     BYTE PTR [ebp+0x5e],bl
  41c3b0:	shr    DWORD PTR [edi],cl
  41c3b2:	mov    bl,0xa5
  41c3b4:	xor    al,0x56
  41c3b6:	loopne 0x41c376
  41c3b8:	xlat   BYTE PTR ds:[ebx]
  41c3b9:	std    
  41c3ba:	enter  0x6695,0x8a
  41c3be:	aad    0xda
  41c3c0:	inc    ebp
  41c3c1:	out    dx,al
  41c3c2:	cmp    eax,0x5cb197f1
  41c3c7:	mov    gs,WORD PTR [eax+0x1d]
  41c3ca:	in     eax,0xa9
  41c3cc:	push   ebp
  41c3cd:	lahf   
  41c3ce:	adc    ebx,esp
  41c3d0:	push   cs
  41c3d1:	cdq    
  41c3d2:	sub    al,0x9c
  41c3d4:	fld    TBYTE PTR [esi]
  41c3d6:	es push cs
  41c3d8:	jne    0x41c373
  41c3da:	sbb    ecx,edi
  41c3dc:	pusha  
  41c3dd:	leave  
  41c3de:	mov    bl,0x1a
  41c3e0:	push   0x4c70e510
  41c3e5:	pop    ss
  41c3e6:	sub    eax,0x95ec4f86
  41c3eb:	dec    edx
  41c3ec:	jl     0x41c402
  41c3ee:	cmp    ch,al
  41c3f0:	dec    esp
  41c3f1:	retf   0x2b26
  41c3f4:	aam    0x95
  41c3f6:	xchg   ecx,eax
  41c3f7:	lds    eax,FWORD PTR [esi]
  41c3f9:	mov    ds:0x334053a8,eax
  41c3fe:	leave  
  41c3ff:	xchg   ebp,eax
  41c400:	repz inc esi
  41c402:	jmp    0x41c420
  41c404:	push   DWORD PTR ds:0x189c4edf
  41c40a:	inc    esp
  41c40b:	mov    ecx,0x91deafb0
  41c410:	fimul  WORD PTR [ecx-0x2f]
  41c413:	mov    DWORD PTR [eax],esp
  41c415:	in     al,dx
  41c416:	dec    ebp
  41c417:	inc    edi
  41c418:	pop    ebx
  41c419:	mov    DWORD PTR [ebx],ebp
  41c41b:	call   0xeb70:0xb13ff46b
  41c422:	out    0x84,al
  41c424:	(bad)  
  41c425:	popa   
  41c426:	pop    ecx
  41c427:	push   ds
  41c428:	iret   
  41c429:	popa   
  41c42a:	cld    
  41c42b:	mov    dl,0xc9
  41c42d:	fsub   DWORD PTR [esi-0x71]
  41c430:	xlat   BYTE PTR ds:[ebx]
  41c431:	sbb    BYTE PTR [esi],ch
  41c433:	pop    ebx
  41c434:	popa   
  41c435:	dec    ebx
  41c436:	daa    
  41c437:	rcr    BYTE PTR [ebp+ebx*1+0x4a],1
  41c43b:	mov    eax,0x2abe5a76
  41c440:	xchg   ecx,eax
  41c441:	loopne 0x41c42e
  41c443:	push   ss
  41c444:	lahf   
  41c445:	mov    ebx,0xaeae00db
  41c44a:	jg     0x41c42a
  41c44c:	or     edi,DWORD PTR [ebx+ecx*8]
  41c44f:	addr16 inc ebp
  41c451:	fisubr DWORD PTR [eax-0x4b]
  41c454:	xor    DWORD PTR [edi+0x64],ebp
  41c457:	push   ebx
  41c458:	and    al,0xcc
  41c45a:	mov    ebx,0x6f25143
  41c45f:	xchg   edi,eax
  41c460:	ss lahf 
  41c462:	add    DWORD PTR [edx-0x1e],ebx
  41c465:	xchg   edx,eax
  41c466:	fucomp st(1)
  41c468:	imul   edi,ebp,0xa8e77d3
  41c46e:	sub    eax,0x74faa9fc
  41c473:	xor    eax,0x4dc5f9c2
  41c478:	xchg   DWORD PTR ds:0x998bdf84,edx
  41c47e:	pop    eax
  41c47f:	out    dx,al
  41c480:	jae    0x41c422
  41c482:	pushf  
  41c483:	sbb    al,0x1e
  41c485:	dec    ebx
  41c486:	stc    
  41c487:	mov    ecx,0xd8ef55c1
  41c48c:	mov    ds:0x58b899b5,al
  41c491:	add    edi,DWORD PTR [esi+0x65]
  41c494:	adc    BYTE PTR [edi],bl
  41c496:	sahf   
  41c497:	in     al,0xb
  41c499:	ret    0xa94e
  41c49c:	lock clc 
  41c49e:	or     al,0xa8
  41c4a0:	push   0xffffff83
  41c4a2:	imul   ebx,edx,0x51
  41c4a5:	js     0x41c445
  41c4a7:	xor    bl,BYTE PTR [esi+0x68368c49]
  41c4ad:	push   eax
  41c4ae:	int    0xa1
  41c4b0:	scas   al,BYTE PTR es:[edi]
  41c4b1:	cmp    ebp,ebx
  41c4b3:	jecxz  0x41c461
  41c4b5:	fidiv  DWORD PTR [ebx+0x77547f20]
  41c4bb:	sub    ax,cx
  41c4be:	arpl   WORD PTR [ebp+ecx*4-0x428b1fb5],dx
  41c4c5:	mov    edx,0x20b3f4ea
  41c4ca:	cwde   
  41c4cb:	mov    dl,0x73
  41c4cd:	cmp    DWORD PTR [edi],0x5d6b36b
  41c4d3:	push   es
  41c4d4:	cmp    eax,0x5ce16882
  41c4d9:	popf   
  41c4da:	and    dh,BYTE PTR [edi]
  41c4dc:	jno    0x41c533
  41c4de:	dec    edx
  41c4df:	xor    esp,DWORD PTR [ebp+0x72]
  41c4e2:	ficomp DWORD PTR [ebp-0x6d]
  41c4e6:	or     ebp,DWORD PTR [ecx]
  41c4e8:	test   BYTE PTR [edi-0x50],bl
  41c4eb:	and    al,0x66
  41c4ed:	aaa    
  41c4ee:	mov    esp,0x2d4fae44
  41c4f3:	jbe    0x41c54f
  41c4f5:	sti    
  41c4f6:	push   0xffffff90
  41c4f8:	xchg   BYTE PTR [ebp-0x52f38e84],ch
  41c4fe:	in     eax,dx
  41c4ff:	popa   
  41c500:	loopne 0x41c572
  41c502:	fadd   st,st(2)
  41c504:	xchg   ecx,eax
  41c505:	or     DWORD PTR [edi+edi*4],esi
  41c508:	je     0x41c4da
  41c50a:	mov    eax,0xf083691
  41c50f:	(bad)  
  41c510:	rcr    eax,cl
  41c512:	std    
  41c513:	cdq    
  41c514:	fbld   TBYTE PTR [eax]
  41c516:	cs clc 
  41c518:	cmp    BYTE PTR [ecx-0x72],ah
  41c51b:	mov    cl,BYTE PTR ds:0x2aee726b
  41c521:	stos   DWORD PTR es:[edi],eax
  41c522:	adc    BYTE PTR [esi-0x75e627a7],al
  41c528:	xchg   edx,eax
  41c529:	test   BYTE PTR [eax],bl
  41c52b:	cdq    
  41c52c:	cmp    dl,BYTE PTR [eax]
  41c52e:	inc    eax
  41c52f:	add    al,BYTE PTR fs:[edx+0x4a555167]
  41c536:	popa   
  41c537:	inc    esp
  41c538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c539:	push   edx
  41c53a:	icebp  
  41c53b:	out    dx,al
  41c53c:	inc    esp
  41c53d:	mov    al,ds:0x563ef4dc
  41c542:	shr    edx,1
  41c544:	push   edx
  41c545:	faddp  st(1),st
  41c547:	mov    ds:0xa760379,al
  41c54c:	test   BYTE PTR [edx+0x13aa950],0x96
  41c553:	out    0x6,eax
  41c555:	xor    DWORD PTR [ecx+0x76],edi
  41c558:	cmp    ch,BYTE PTR [esi]
  41c55a:	jne    0x41c502
  41c55c:	dec    esp
  41c55d:	jecxz  0x41c59e
  41c55f:	pop    edx
  41c560:	mov    al,ds:0x10adf12e
  41c565:	inc    ebp
  41c566:	push   es
  41c567:	aas    
  41c568:	fsubp  st(5),st
  41c56a:	and    eax,0xe0b69236
  41c56f:	mov    ch,0xdb
  41c571:	adc    ebp,ecx
  41c573:	arpl   bx,bx
  41c575:	repnz adc BYTE PTR [ebp+0x1da07168],bh
  41c57c:	push   ds
  41c57d:	pushf  
  41c57e:	and    BYTE PTR [edi],al
  41c580:	push   ebp
  41c581:	mov    eax,edx
  41c583:	(bad)  
  41c584:	into   
  41c585:	sbb    al,0x74
  41c587:	cmp    eax,0x590d47d9
  41c58c:	inc    ecx
  41c58d:	add    BYTE PTR [eax],al
  41c58f:	add    BYTE PTR [eax],al
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	cmp    ch,bl
  41c5a0:	pop    ebp
  41c5a1:	loop   0x41c5fe
  41c5a3:	inc    ecx
  41c5a4:	add    DWORD PTR [eax],eax
  41c5a6:	repz add al,0x0
  41c5a9:	add    BYTE PTR [edi],cl
  41c5ab:	(bad)  
  41c5ad:	std    
  41c5ae:	(bad)  
  41c5af:	jno    0x41c5d5
  41c5b1:	sub    bh,BYTE PTR [esi]
  41c5b3:	push   ds
  41c5b4:	out    0x85,al
  41c5b6:	gs in  al,0x55
  41c5b9:	jmp    0x60c06623
  41c5be:	popa   
  41c5bf:	ret    0x609a
  41c5c2:	sahf   
  41c5c3:	pusha  
  41c5c4:	pusha  
  41c5c5:	nop
  41c5c6:	cmc    
  41c5c7:	idiv   esp
  41c5c9:	xor    eax,0x5c44f56b
  41c5ce:	ror    cl,1
  41c5d0:	add    cl,BYTE PTR [edi+0x1c0729b0]
  41c5d6:	std    
  41c5d7:	inc    eax
  41c5d8:	in     al,dx
  41c5d9:	scas   eax,DWORD PTR es:[edi]
  41c5da:	cld    
  41c5db:	scas   eax,DWORD PTR es:[edi]
  41c5dc:	push   esi
  41c5dd:	mov    eax,0x25b3b724
  41c5e2:	dec    ecx
  41c5e3:	fild   DWORD PTR [edi]
  41c5e5:	ds mov edi,0x4ccfca92
  41c5eb:	and    cl,BYTE PTR [edx-0x2943f185]
  41c5f1:	icebp  
  41c5f2:	fs aas 
  41c5f4:	xor    ax,0xdc8e
  41c5f8:	mov    WORD PTR [edx+edi*1],?
  41c5fb:	add    al,0x3e
  41c5fd:	(bad)  
  41c5fe:	jnp    0x41c5c5
  41c600:	fistp  QWORD PTR fs:[ebp-0x10]
  41c604:	rcl    al,cl
  41c606:	sub    edx,DWORD PTR [ecx+edx*8-0x2a68aeba]
  41c60d:	stc    
  41c60e:	lea    edi,[edi]
  41c610:	sbb    al,0x9b
  41c612:	popf   
  41c613:	push   eax
  41c614:	adc    eax,0x6364540f
  41c619:	mov    bl,0x9b
  41c61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c61c:	mov    ah,ah
  41c61e:	jbe    0x41c656
  41c620:	push   ebp
  41c621:	xor    DWORD PTR [edx-0x71],edx
  41c624:	lods   al,BYTE PTR ds:[esi]
  41c625:	adc    dl,BYTE PTR [esi]
  41c627:	rcl    WORD PTR ds:0xc3c379c3,0x25
  41c62f:	pop    ss
  41c630:	push   cs
  41c631:	mov    ch,al
  41c633:	xchg   edi,eax
  41c634:	xlat   BYTE PTR ds:[ebx]
  41c635:	data16 repnz cmc 
  41c638:	mov    esi,0x947d6ffc
  41c63d:	push   edi
  41c63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c63f:	test   BYTE PTR [ebp+0x1d],0x73
  41c643:	fsub   st(2),st
  41c645:	inc    esp
  41c646:	push   0x81f2829a
  41c64b:	pop    edx
  41c64c:	out    0xe2,eax
  41c64e:	pushf  
  41c64f:	and    al,0xdc
  41c651:	cmp    bl,ah
  41c653:	adc    ah,BYTE PTR [edx+0x4239c588]
  41c659:	fstp   st(6)
  41c65b:	pop    ss
  41c65c:	retf   0xdedb
  41c65f:	retf   
  41c660:	fisub  WORD PTR [ecx]
  41c662:	xor    BYTE PTR [edi],ah
  41c664:	jmp    0x4192:0x93eb5545
  41c66b:	xor    bh,BYTE PTR [esi]
  41c66d:	and    ch,BYTE PTR [edi-0x21382b88]
  41c673:	cwde   
  41c674:	mov    DWORD PTR [ebx],eax
  41c676:	sahf   
  41c677:	and    DWORD PTR [ebp+0x7e2c83a5],ebx
  41c67d:	rol    ch,0x21
  41c680:	or     BYTE PTR [eax-0x61c6e38b],0x7c
  41c687:	or     BYTE PTR [ecx-0x569ed03e],dh
  41c68d:	in     eax,0xd
  41c68f:	jg     0x41c66b
  41c691:	(bad)
  41c694:	in     al,0x4b
  41c696:	fs xchg ecx,eax
  41c698:	add    ch,al
  41c69a:	das    
  41c69b:	std    
  41c69c:	inc    ecx
  41c69d:	in     eax,0xca
  41c69f:	dec    edx
  41c6a0:	xchg   al,bl
  41c6a2:	mov    edx,0xdbc38fe
  41c6a7:	push   es
  41c6a8:	jns    0x41c67b
  41c6aa:	xlat   BYTE PTR ds:[ebx]
  41c6ab:	shr    DWORD PTR [ebx+0x49],cl
  41c6ae:	retf   0xf974
  41c6b1:	repz add eax,0xc0584036
  41c6b7:	jge    0x41c6d7
  41c6b9:	or     eax,0xd8cf284a
  41c6be:	push   0x94feae8f
  41c6c3:	(bad)  
  41c6c4:	bound  ebp,QWORD PTR ds:0xf49a01c4
  41c6ca:	push   ecx
  41c6cb:	ja     0x41c738
  41c6cd:	inc    ecx
  41c6ce:	pop    ss
  41c6cf:	cmp    DWORD PTR [edx],esi
  41c6d1:	div    DWORD PTR [edx]
  41c6d3:	repnz add al,0xf9
  41c6d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6d7:	sub    ebx,DWORD PTR [esi]
  41c6d9:	add    DWORD PTR [esi+edi*8-0x7b73019],edx
  41c6e0:	add    al,0xb4
  41c6e2:	add    ebp,esp
  41c6e4:	jmp    0x41c74a
  41c6e6:	out    0x3a,al
  41c6e8:	mov    dh,0xe3
  41c6ea:	push   edi
  41c6eb:	ja     0x41c708
  41c6ed:	push   ebp
  41c6ee:	jns    0x41c72e
  41c6f0:	pushf  
  41c6f1:	inc    edx
  41c6f2:	mov    eax,0xe4e0c539
  41c6f7:	daa    
  41c6f8:	int    0xbd
  41c6fa:	mov    ds:0xfa1748d0,eax
  41c6ff:	or     eax,0x53919371
  41c704:	cmc    
  41c705:	pop    esp
  41c706:	mov    edx,0xa23816ed
  41c70b:	and    ah,0x2b
  41c70e:	mov    cl,0x96
  41c710:	mov    bl,0xc5
  41c712:	dec    edi
  41c713:	ffreep st(5)
  41c715:	cld    
  41c716:	out    0xb3,al
  41c718:	mov    esp,DWORD PTR [ebx-0x4a]
  41c71b:	sub    al,0xa0
  41c71d:	rcr    DWORD PTR [ebx],1
  41c71f:	cwde   
  41c720:	ins    DWORD PTR es:[edi],dx
  41c721:	imul   ecx,DWORD PTR [edx-0x7b9870a],0x3906a39d
  41c72b:	lods   eax,DWORD PTR ds:[esi]
  41c72c:	jb     0x41c75a
  41c72e:	adc    cl,BYTE PTR [esi+0x6e896ae3]
  41c734:	pop    ebp
  41c735:	into   
  41c736:	fmul   DWORD PTR [ebx-0x3c5de937]
  41c73c:	dec    esi
  41c73d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73e:	xor    ebp,DWORD PTR [edi-0x1d3ad0ad]
  41c744:	popa   
  41c745:	sbb    esi,esp
  41c747:	pop    ss
  41c748:	xor    al,0x2f
  41c74a:	imul   edi,DWORD PTR [eax],0x30e8ea56
  41c750:	das    
  41c751:	std    
  41c752:	mul    ebx
  41c754:	in     eax,dx
  41c755:	int3   
  41c756:	and    dl,BYTE PTR [ebp-0x26]
  41c759:	outs   dx,BYTE PTR ds:[esi]
  41c75a:	adc    eax,0xe8293e26
  41c75f:	enter  0xe811,0xa4
  41c763:	adc    DWORD PTR [ebp+0x3e],eax
  41c766:	pop    es
  41c767:	dec    ebp
  41c768:	daa    
  41c769:	cld    
  41c76a:	inc    ecx
  41c76b:	adc    al,0x1d
  41c76d:	int    0x48
  41c76f:	push   cs
  41c770:	test   DWORD PTR [esi+0x30ff27c9],edi
  41c776:	pop    edi
  41c777:	test   BYTE PTR [edi-0x52ce6740],dl
  41c77d:	adc    BYTE PTR [eax-0x5313446d],cl
  41c783:	xchg   edx,eax
  41c784:	cmp    al,0x45
  41c786:	mov    ch,0x7e
  41c788:	lds    edi,FWORD PTR [esi+0x7976b97e]
  41c78e:	inc    ecx
  41c78f:	dec    di
  41c791:	and    al,0x22
  41c793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c794:	jae    0x41c73a
  41c796:	fyl2xp1 
  41c798:	mov    dl,BYTE PTR [ebx+0x23]
  41c79b:	add    ch,BYTE PTR [eax]
  41c79d:	bound  edx,QWORD PTR [ebp+0x7ddd9c4b]
  41c7a3:	sub    al,0xb5
  41c7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7a6:	and    DWORD PTR [ebp+0xe636ff6],ebp
  41c7ac:	repz add DWORD PTR [edi+ecx*2-0x13],ecx
  41c7b1:	and    BYTE PTR [edi+0x1ebee0a2],ah
  41c7b7:	mov    cs,WORD PTR [edi*2-0x3e8f6128]
  41c7be:	pop    ss
  41c7bf:	inc    ebp
  41c7c0:	imul   esp,DWORD PTR [eax-0x32],0x9
  41c7c4:	sub    edi,esi
  41c7c6:	pop    eax
  41c7c7:	pop    esp
  41c7c8:	xlat   BYTE PTR ds:[ebx]
  41c7c9:	push   edi
  41c7ca:	sub    eax,0xe16f3c26
  41c7cf:	(bad)  
  41c7d0:	mov    ss,ebp
  41c7d2:	push   edi
  41c7d3:	mov    ds:0x31477b47,eax
  41c7d8:	addr16 (bad) 
  41c7da:	jns    0x41c773
  41c7dc:	call   0x901d8333
  41c7e1:	push   ds
  41c7e2:	xchg   ebp,eax
  41c7e3:	xor    BYTE PTR [ecx],al
  41c7e5:	les    edx,FWORD PTR ds:[edx-0x3]
  41c7e9:	adc    esp,DWORD PTR [edi-0x69]
  41c7ec:	push   esi
  41c7ed:	sub    al,BYTE PTR [edi+0x49]
  41c7f0:	aaa    
  41c7f1:	pop    es
  41c7f2:	dec    edi
  41c7f3:	xchg   DWORD PTR [esi-0x567748f0],ecx
  41c7f9:	ror    BYTE PTR [ecx],0x84
  41c7fc:	loop   0x41c875
  41c7fe:	push   0xffffffcd
  41c800:	and    DWORD PTR [ebx],0xeed6c131
  41c806:	ins    DWORD PTR es:[edi],dx
  41c807:	and    dh,BYTE PTR [esi]
  41c809:	jb     0x41c7bf
  41c80b:	ins    BYTE PTR es:[edi],dx
  41c80c:	mov    esi,DWORD PTR [ebx-0x1a97a5ac]
  41c812:	mov    edi,0x3bc196d6
  41c817:	lock sub BYTE PTR [ebx+0x7bba844d],bl
  41c81e:	sub    cl,BYTE PTR [edx-0x3b]
  41c821:	push   0x60
  41c823:	xor    eax,edi
  41c825:	pop    ebx
  41c826:	cmp    edx,DWORD PTR [esi-0x3]
  41c829:	xchg   edx,eax
  41c82a:	push   0xa4e45342
  41c82f:	mov    ebp,0x98c60547
  41c834:	sahf   
  41c835:	ds pusha 
  41c837:	sub    edi,DWORD PTR [edx]
  41c839:	inc    edi
  41c83a:	cmc    
  41c83b:	mov    DWORD PTR [ecx],ebx
  41c83d:	pop    ebp
  41c83e:	test   eax,0xd53e4615
  41c843:	stos   BYTE PTR es:[edi],al
  41c844:	loope  0x41c7de
  41c846:	add    BYTE PTR [edi-0x4f],bh
  41c849:	rol    BYTE PTR [ebp-0x62509fb7],cl
  41c84f:	add    dl,BYTE PTR [edx+eax*4]
  41c852:	inc    ebx
  41c853:	fs stos DWORD PTR es:[edi],eax
  41c855:	aam    0xf3
  41c857:	fist   DWORD PTR [edi]
  41c859:	iret   
  41c85a:	(bad)  
  41c85b:	cmp    BYTE PTR [ecx],bh
  41c85d:	popa   
  41c85e:	jmp    0x51c8b8da
  41c863:	jmp    0x58687ac
  41c868:	pushf  
  41c869:	sub    eax,0x19f64a62
  41c86e:	inc    ebx
  41c86f:	mov    esp,0x7f533d87
  41c874:	fiadd  WORD PTR [edx+0x1705846d]
  41c87a:	fwait
  41c87b:	mov    dh,0xd7
  41c87d:	dec    esi
  41c87e:	out    0x45,al
  41c880:	adc    bh,0x2b
  41c883:	out    dx,al
  41c884:	dec    ecx
  41c885:	fst    QWORD PTR [ecx]
  41c887:	push   esi
  41c888:	int3   
  41c889:	(bad)  
  41c88a:	sbb    ebx,DWORD PTR [eax+0x10]
  41c88d:	loope  0x41c8c3
  41c88f:	retf   
  41c890:	inc    edi
  41c891:	imul   ebp,DWORD PTR [edi+0x66],0x84e86338
  41c898:	dec    edi
  41c899:	inc    eax
  41c89a:	jmp    0x41c8d1
  41c89c:	std    
  41c89d:	xchg   eax,ecx
  41c89f:	mov    dl,0x71
  41c8a1:	(bad)  
  41c8a3:	jns    0x41c8a4
  41c8a5:	adc    dl,BYTE PTR [ebp-0x3fc4d30a]
  41c8ab:	popa   
  41c8ac:	sub    ecx,DWORD PTR ds:0x360dd183
  41c8b2:	out    dx,al
  41c8b3:	and    BYTE PTR [esi],0xcf
  41c8b6:	mov    ebx,0x6e43a860
  41c8bb:	add    eax,DWORD PTR [ecx+0x4ad8696a]
  41c8c1:	sub    edx,0x47
  41c8c4:	pop    ebx
  41c8c5:	jmp    0xc3ca16c5
  41c8ca:	dec    edi
  41c8cb:	lahf   
  41c8cc:	adc    bl,dl
  41c8ce:	push   esp
  41c8cf:	out    dx,al
  41c8d0:	mov    ebp,0xb360cb7b
  41c8d5:	aad    0x62
  41c8d7:	pop    ebp
  41c8d8:	lock pushf 
  41c8da:	and    edx,DWORD PTR [eax-0x3a05e0c5]
  41c8e0:	dec    esi
  41c8e1:	scas   eax,DWORD PTR es:[edi]
  41c8e2:	dec    esi
  41c8e3:	imul   eax,DWORD PTR [esi+0x198ae5d4],0xa97440e1
  41c8ed:	(bad)  
  41c8ee:	fdivp  st(1),st
  41c8f0:	or     edi,0xffffff94
  41c8f3:	jmp    FWORD PTR [edx]
  41c8f5:	rcr    DWORD PTR [edi-0x78bfb51b],cl
  41c8fb:	xchg   ebx,eax
  41c8fc:	or     eax,0x9f1a118c
  41c901:	push   esp
  41c902:	sub    DWORD PTR [edi-0x33],ebx
  41c905:	xchg   esi,eax
  41c906:	xchg   edi,eax
  41c907:	pop    edx
  41c908:	jae    0x41c90e
  41c90a:	push   0x4548323c
  41c90f:	or     ch,ch
  41c911:	fimul  WORD PTR [edx+ecx*2]
  41c914:	jg     0x41c8c7
  41c916:	ins    BYTE PTR es:[edi],dx
  41c917:	mov    ebx,0x93cf8196
  41c91c:	xchg   edx,eax
  41c91d:	sub    eax,0x5fb65323
  41c922:	or     eax,0x553acd20
  41c927:	xchg   edi,eax
  41c928:	shl    BYTE PTR [ebp-0x6d9c78d],1
  41c92e:	mov    ah,0x6b
  41c930:	inc    esi
  41c931:	xchg   DWORD PTR [edx-0x786aaecd],esp
  41c937:	mov    BYTE PTR [ecx-0x73],cl
  41c93a:	fld    DWORD PTR [ebx+0x3a755fea]
  41c940:	mov    esi,0x99a54ff0
  41c945:	iret   
  41c946:	sar    BYTE PTR [eax+0x2b],0x8c
  41c94a:	call   0x6fe72b3c
  41c94f:	sar    DWORD PTR [edx+0x26b49d59],0xd7
  41c956:	sub    DWORD PTR [edi-0x48],edx
  41c959:	test   DWORD PTR [ecx-0xbc78286],edi
  41c95f:	outs   dx,BYTE PTR ds:[esi]
  41c960:	cwde   
  41c961:	(bad)  
  41c962:	jmp    0x7a1a:0x80592b18
  41c969:	test   DWORD PTR [eax+0x1292af21],0xa880a1b9
  41c973:	sbb    eax,0x93f597ca
  41c978:	fistp  QWORD PTR [eax]
  41c97a:	add    DWORD PTR [edx+ebx*8],eax
  41c97d:	int    0x55
  41c97f:	adc    bh,BYTE PTR [ecx+edx*4]
  41c982:	sahf   
  41c983:	mov    esp,0xaf79a341
  41c988:	sbb    bl,BYTE PTR [ecx+0x4e]
  41c98b:	or     al,0x1b
  41c98d:	sbb    ebx,edx
  41c98f:	push   esi
  41c990:	sbb    ebp,edi
  41c992:	data16 jg 0x41c9f4
  41c995:	pop    ebp
  41c996:	leave  
  41c997:	fild   DWORD PTR [ebx]
  41c999:	pop    es
  41c99a:	dec    edi
  41c99b:	mov    bl,BYTE PTR [edi]
  41c99d:	inc    edi
  41c99e:	mov    ds:0x30053b1b,eax
  41c9a3:	mov    esp,0x824ab73d
  41c9a8:	and    DWORD PTR ds:0x2fd5e678,esi
  41c9ae:	sub    al,0x53
  41c9b0:	js     0x41c982
  41c9b2:	mov    ds:0x52dc68f5,al
  41c9b7:	(bad)  
  41c9b8:	jecxz  0x41ca22
  41c9ba:	sbb    DWORD PTR [ebx+0x20],esp
  41c9bd:	icebp  
  41c9be:	iret   
  41c9bf:	push   ebp
  41c9c0:	and    DWORD PTR [ebp-0x32],esi
  41c9c3:	and    esi,ebx
  41c9c5:	fmulp  st(6),st
  41c9c7:	jl     0x41c996
  41c9c9:	pop    ecx
  41c9ca:	mov    al,bl
  41c9cc:	mov    cl,0x81
  41c9ce:	mov    cl,0xb8
  41c9d0:	sub    ebp,DWORD PTR [ebx+edx*1-0x6a18c4d3]
  41c9d7:	mov    WORD PTR [ecx+edx*2],?
  41c9da:	push   esi
  41c9db:	pop    eax
  41c9dc:	mov    edi,0x797936ca
  41c9e1:	not    DWORD PTR [eax+0x5d]
  41c9e4:	push   ds
  41c9e5:	call   0xbd2667a5
  41c9ea:	test   eax,0xaea1eef8
  41c9ef:	and    DWORD PTR [edi-0x39],eax
  41c9f2:	fwait
  41c9f3:	push   ecx
  41c9f4:	mov    ds:0xe180f939,eax
  41c9f9:	into   
  41c9fa:	ja     0x41c9ee
  41c9fc:	xor    cl,BYTE PTR [ebx+0x4c163018]
  41ca02:	in     al,dx
  41ca03:	aaa    
  41ca04:	jno    0x41ca04
  41ca06:	jns    0x41ca60
  41ca08:	(bad)  
  41ca09:	xor    al,0x48
  41ca0b:	hlt    
  41ca0c:	sbb    al,0xbd
  41ca0e:	mov    dh,0xf3
  41ca10:	inc    eax
  41ca11:	lods   al,BYTE PTR ds:[esi]
  41ca12:	and    eax,0xe6f1aee2
  41ca17:	in     al,dx
  41ca18:	mov    edx,0xb2c20457
  41ca1d:	jg     0x41c9b6
  41ca1f:	(bad)  
  41ca20:	push   esp
  41ca21:	add    eax,0x70b8f00b
  41ca26:	fbld   TBYTE PTR [edx+0x1e]
  41ca29:	jecxz  0x41ca34
  41ca2b:	in     eax,0x45
  41ca2d:	jmp    0xd57e:0x906f1d73
  41ca34:	mov    ecx,0x288b447e
  41ca39:	shl    BYTE PTR [esi-0xe],1
  41ca3c:	and    ecx,ebp
  41ca3e:	fwait
  41ca3f:	in     al,0x76
  41ca41:	mov    al,0x7e
  41ca43:	pusha  
  41ca44:	sbb    al,0x57
  41ca46:	not    BYTE PTR ds:0x72e59cae
  41ca4c:	mov    ds:0xff4dfeb8,al
  41ca51:	rcr    BYTE PTR [edx+ebp*8+0x34],1
  41ca55:	dec    eax
  41ca56:	add    dx,WORD PTR [ebx]
  41ca59:	jne    0x41cad1
  41ca5b:	adc    BYTE PTR [ebx-0x597e83f3],ch
  41ca61:	sar    BYTE PTR [ecx],0x7f
  41ca64:	jp     0x41cab8
  41ca66:	mov    esp,0xb1ce8e02
  41ca6b:	or     eax,0xa86047e3
  41ca70:	add    al,0x5b
  41ca72:	dec    ebp
  41ca73:	sub    ebp,DWORD PTR [ebx+0x2d]
  41ca76:	dec    esp
  41ca77:	clc    
  41ca78:	scas   al,BYTE PTR es:[edi]
  41ca79:	push   edx
  41ca7a:	adc    BYTE PTR [eax-0x34],bl
  41ca7d:	(bad)  
  41ca7e:	pop    edx
  41ca7f:	pop    ds
  41ca80:	cwde   
  41ca81:	mov    ds:0xb0932aa2,eax
  41ca86:	jmp    0x41caed
  41ca88:	(bad)
  41ca8b:	arpl   WORD PTR [ebx-0x6bfd5fec],si
  41ca91:	out    0x3b,eax
  41ca93:	xor    bh,BYTE PTR [ebx]
  41ca95:	xchg   ebp,eax
  41ca96:	jo     0x41caa2
  41ca98:	and    edx,ebp
  41ca9a:	jno    0x41cadd
  41ca9c:	push   cs
  41ca9d:	add    BYTE PTR [eax],al
  41ca9f:	add    BYTE PTR [eax],al
  41caa1:	add    ah,ah
  41caa3:	ds mov esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0x2f]
  41caaf:	in     al,dx
  41cab0:	(bad)
  41cab3:	inc    esi
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	repz add al,0x0
  41cab9:	add    BYTE PTR [edx+0x77],bl
  41cabc:	sub    bl,bl
  41cabe:	inc    ecx
  41cabf:	fs inc esp
  41cac1:	sbb    bh,BYTE PTR [edi]
  41cac3:	ins    DWORD PTR es:[edi],dx
  41cac4:	sti    
  41cac5:	(bad)  [ebx+0x3d6a391b]
  41cacb:	cmp    al,0x91
  41cacd:	call   0x956e6d17
  41cad2:	mov    BYTE PTR [edx+0x55],ah
  41cad5:	mov    ds:0x76db01db,al
  41cada:	sbb    DWORD PTR [edx],ebp
  41cadc:	loop   0x41caa7
  41cade:	cmp    al,0xa5
  41cae0:	sub    DWORD PTR [esi],ecx
  41cae2:	dec    esi
  41cae3:	std    
  41cae4:	jmp    FWORD PTR [ebx-0x52]
  41cae7:	pusha  
  41cae8:	add    esi,DWORD PTR [ebx-0x19]
  41caeb:	sbb    DWORD PTR [edx-0x4b8f7175],esp
  41caf1:	dec    ebx
  41caf2:	push   ss
  41caf3:	push   ebx
  41caf4:	inc    ecx
  41caf5:	rcl    BYTE PTR [ecx+0x646c2dcc],cl
  41cafb:	mov    eax,DWORD PTR [eax+0x5a]
  41cafe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caff:	(bad)  
  41cb00:	xchg   edx,eax
  41cb01:	addr16 sar ah,0x4f
  41cb05:	test   eax,0x6505ebc6
  41cb0a:	cwde   
  41cb0b:	shl    BYTE PTR [ebp+0x4],1
  41cb0e:	cmc    
  41cb0f:	and    BYTE PTR [ecx],bh
  41cb11:	push   ebp
  41cb12:	and    eax,DWORD PTR [ecx+0x47ef597d]
  41cb18:	jo     0x41cb49
  41cb1a:	lods   eax,DWORD PTR ds:[esi]
  41cb1b:	or     al,0x6
  41cb1d:	push   ebx
  41cb1e:	push   es
  41cb1f:	int    0xcd
  41cb21:	ss inc eax
  41cb23:	or     edx,ebx
  41cb25:	jbe    0x41cb53
  41cb27:	pop    ecx
  41cb28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb29:	push   0x7e014545
  41cb2e:	sbb    esp,DWORD PTR [eax+0x7]
  41cb31:	imul   ecx,DWORD PTR [edx+0x80c810e],0x53
  41cb38:	aas    
  41cb39:	enter  0x14bd,0x45
  41cb3d:	dec    esi
  41cb3e:	ror    BYTE PTR [edi],1
  41cb40:	add    al,0x31
  41cb42:	xor    BYTE PTR [esi+0x4ec1e232],0x7b
  41cb49:	cld    
  41cb4a:	popa   
  41cb4b:	gs jp  0x41cafd
  41cb4e:	shr    DWORD PTR [edx],1
  41cb50:	(bad)  
  41cb52:	test   DWORD PTR [ecx],edx
  41cb54:	mov    ch,0x4e
  41cb56:	add    BYTE PTR [ecx],al
  41cb58:	pop    ebx
  41cb59:	cwde   
  41cb5a:	push   edi
  41cb5b:	mov    edi,esp
  41cb5d:	cmc    
  41cb5e:	stos   BYTE PTR es:[edi],al
  41cb5f:	xor    eax,0x400e5ec4
  41cb64:	in     eax,dx
  41cb65:	aaa    
  41cb66:	repnz jmp 0x55b3:0x34180cb6
  41cb6e:	jmp    0x41cb2d
  41cb70:	shl    edi,1
  41cb72:	ins    BYTE PTR es:[edi],dx
  41cb73:	fisubr WORD PTR [ebx+0x9733f94]
  41cb79:	dec    edx
  41cb7a:	retf   
  41cb7b:	and    bh,ch
  41cb7d:	pop    ecx
  41cb7e:	rcl    ah,0x4b
  41cb81:	in     eax,dx
  41cb82:	ffreep st(4)
  41cb84:	retf   0xf8a9
  41cb87:	shl    BYTE PTR [ebx+0x4debc688],1
  41cb8d:	jne    0x41cb63
  41cb8f:	jne    0x41cbcf
  41cb91:	mov    ebx,0xb7f33081
  41cb96:	frstor [eax]
  41cb98:	outs   dx,DWORD PTR ds:[esi]
  41cb99:	inc    ebx
  41cb9a:	jmp    0x41cb73
  41cb9c:	xchg   ecx,eax
  41cb9d:	add    al,0x4b
  41cb9f:	fldenv [edx+0x5f]
  41cba2:	lahf   
  41cba3:	addr16 idiv eax
  41cba6:	inc    ebp
  41cba7:	daa    
  41cba8:	sbb    ebx,ecx
  41cbaa:	les    edi,FWORD PTR [edi]
  41cbac:	jmp    0xc274844e
  41cbb1:	lods   al,BYTE PTR ds:[esi]
  41cbb2:	and    dl,ah
  41cbb4:	jb     0x41cb93
  41cbb6:	inc    edi
  41cbb7:	ret    0x5d5c
  41cbba:	jmp    0x41cb84
  41cbbc:	add    al,0xff
  41cbbe:	mov    dl,0xa
  41cbc0:	dec    esi
  41cbc1:	pop    ebx
  41cbc2:	adc    bl,ch
  41cbc4:	jnp    0x41cbb7
  41cbc6:	dec    edx
  41cbc7:	sar    DWORD PTR [ebp-0x23],1
  41cbca:	mov    al,ds:0xb3bea422
  41cbcf:	add    al,0x5c
  41cbd1:	push   ss
  41cbd2:	call   0x5e119fdb
  41cbd7:	fadd   QWORD PTR [esi]
  41cbd9:	ss nop
  41cbdb:	sbb    edx,DWORD PTR [esi+0x7acee6d9]
  41cbe1:	in     al,dx
  41cbe2:	test   eax,0x6188d60d
  41cbe7:	sar    dl,0x93
  41cbea:	mov    ch,0x20
  41cbec:	sbb    BYTE PTR [esi],cl
  41cbee:	int3   
  41cbef:	popf   
  41cbf0:	push   ebp
  41cbf1:	jns    0x41cbad
  41cbf3:	inc    ebx
  41cbf4:	sub    dl,bh
  41cbf6:	aad    0x6d
  41cbf8:	dec    esi
  41cbf9:	test   al,0x16
  41cbfb:	(bad)  
  41cbfc:	aas    
  41cbfd:	in     eax,dx
  41cbfe:	cdq    
  41cbff:	js     0x41cc7d
  41cc01:	mov    bl,0x63
  41cc03:	ins    BYTE PTR es:[edi],dx
  41cc04:	lods   al,BYTE PTR ds:[esi]
  41cc05:	out    0x5f,al
  41cc07:	stos   BYTE PTR es:[edi],al
  41cc08:	xor    al,0x1e
  41cc0a:	or     al,0xed
  41cc0c:	pop    DWORD PTR [ecx]
  41cc0e:	je     0x41cc1d
  41cc10:	shl    BYTE PTR [edi+0x30],0x1c
  41cc14:	popf   
  41cc15:	cmc    
  41cc16:	je     0x41cc38
  41cc18:	lods   eax,DWORD PTR ds:[esi]
  41cc19:	mov    bh,0x7e
  41cc1b:	iret   
  41cc1c:	popf   
  41cc1d:	aad    0xbf
  41cc1f:	jns    0x41cbbc
  41cc21:	sbb    DWORD PTR [ebp+0x40],edi
  41cc24:	iret   
  41cc25:	out    0xc,al
  41cc27:	push   edi
  41cc28:	jmp    0x41cbe8
  41cc2a:	lods   al,BYTE PTR ds:[esi]
  41cc2b:	mov    al,ds:0xe26a4cd8
  41cc30:	mov    BYTE PTR [esi],bh
  41cc32:	ins    DWORD PTR es:[edi],dx
  41cc33:	add    ecx,edx
  41cc35:	pop    esp
  41cc36:	arpl   WORD PTR [esi],cx
  41cc38:	fwait
  41cc39:	int3   
  41cc3a:	xchg   edx,eax
  41cc3b:	ret    0x7c94
  41cc3e:	and    cl,al
  41cc40:	fs pop ebx
  41cc42:	sbb    eax,0x70ae0575
  41cc47:	pop    ds
  41cc48:	ret    
  41cc49:	ror    DWORD PTR [esp+ecx*8+0x48f14c74],cl
  41cc50:	adc    dh,ch
  41cc52:	jne    0x41cc29
  41cc54:	jns    0x41cc4d
  41cc56:	sub    BYTE PTR [ecx-0x1f],bh
  41cc59:	xchg   edi,eax
  41cc5a:	call   0xd514:0x31aa8fd
  41cc61:	or     ah,BYTE PTR [ebx+0x1ea238a1]
  41cc67:	mov    eax,ds:0x74e62887
  41cc6c:	and    al,0x2d
  41cc6e:	push   cs
  41cc6f:	jecxz  0x41ccbd
  41cc71:	jp     0x41cc9d
  41cc73:	lods   al,BYTE PTR ds:[esi]
  41cc74:	lock jo 0x41ccd0
  41cc77:	and    dl,BYTE PTR [ebp-0x4bab1c80]
  41cc7d:	int3   
  41cc7e:	cmp    eax,DWORD PTR [edx]
  41cc80:	jg     0x41cc4d
  41cc82:	pushf  
  41cc83:	pop    edx
  41cc84:	pop    edi
  41cc85:	shl    DWORD PTR [edx-0x7e],0x7f
  41cc89:	push   ebx
  41cc8a:	clc    
  41cc8b:	jp     0x41cc47
  41cc8d:	xchg   ecx,eax
  41cc8e:	add    BYTE PTR ds:0xcd54492d,dh
  41cc94:	push   0xf3b2bce0
  41cc99:	ret    0x6bc6
  41cc9c:	iret   
  41cc9d:	mov    DWORD PTR [esi-0x4adf1961],0xe7c6b3fe
  41cca7:	das    
  41cca8:	xlat   BYTE PTR ds:[ebx]
  41cca9:	mov    esp,0x3e72bca2
  41ccae:	jl     0x41cceb
  41ccb0:	push   DWORD PTR [edi]
  41ccb2:	dec    ecx
  41ccb3:	pop    ecx
  41ccb4:	int    0x86
  41ccb6:	mov    cl,0xe8
  41ccb8:	push   cs
  41ccb9:	in     al,0x47
  41ccbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccbc:	jae    0x41cd23
  41ccbe:	cmp    BYTE PTR [ebp+0x687b638f],al
  41ccc4:	in     eax,0xbd
  41ccc6:	cmp    edi,DWORD PTR [eax+0x56]
  41ccc9:	repnz clc 
  41cccb:	cmc    
  41cccc:	jge    0x41cd1e
  41ccce:	cwde   
  41cccf:	lods   eax,DWORD PTR ds:[esi]
  41ccd0:	icebp  
  41ccd1:	stc    
  41ccd2:	ficom  DWORD PTR [eax-0x18]
  41ccd5:	xor    BYTE PTR [ebp+esi*8-0x41970bd5],cl
  41ccdc:	xchg   edx,eax
  41ccdd:	mov    dl,0x35
  41ccdf:	mov    ebx,0xf1923a9
  41cce4:	pop    ebx
  41cce5:	test   eax,0x9f4b503f
  41ccea:	gs sub al,0x1d
  41cced:	cld    
  41ccee:	pop    edi
  41ccef:	mov    ebp,0x9df2b69f
  41ccf4:	cmp    cx,WORD PTR [edx-0x6baa4b91]
  41ccfb:	sub    ecx,DWORD PTR [esi]
  41ccfd:	inc    ebp
  41ccfe:	cwde   
  41ccff:	sub    ch,BYTE PTR [esi-0x5d9ac685]
  41cd05:	fs stos DWORD PTR es:[edi],eax
  41cd07:	sbb    DWORD PTR [ebp-0x1f7ba543],ebp
  41cd0d:	call   0x1320:0x2f3ecb85
  41cd14:	inc    ebp
  41cd15:	retf   
  41cd16:	push   eax
  41cd17:	cdq    
  41cd18:	xor    eax,0x1bd387ce
  41cd1d:	mov    fs:0x1d39e0b5,al
  41cd23:	fwait
  41cd24:	ins    BYTE PTR es:[edi],dx
  41cd25:	pop    ebp
  41cd26:	test   eax,0xc246fab2
  41cd2b:	push   ecx
  41cd2c:	jmp    0x87404b57
  41cd31:	dec    ecx
  41cd32:	cmp    eax,0x43f1dab7
  41cd37:	adc    al,0x93
  41cd39:	xchg   esp,eax
  41cd3a:	or     DWORD PTR [eax-0x39],edx
  41cd3d:	cmp    ebx,DWORD PTR [ebp-0x1ed7bcb1]
  41cd43:	jne    0x41cd65
  41cd45:	lods   al,BYTE PTR ds:[esi]
  41cd46:	ds ret 
  41cd48:	(bad)  
  41cd49:	and    al,0x68
  41cd4b:	add    eax,0x208dd081
  41cd50:	stos   DWORD PTR es:[edi],eax
  41cd51:	sahf   
  41cd52:	sbb    bl,dh
  41cd54:	clc    
  41cd55:	xor    al,0xbc
  41cd57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd58:	mov    fs:0xa1812c0a,al
  41cd5e:	pop    esp
  41cd5f:	test   al,0xf9
  41cd61:	ins    BYTE PTR es:[edi],dx
  41cd62:	mov    esi,0x932a42c4
  41cd67:	and    dl,BYTE PTR [eax]
  41cd69:	sbb    al,0xf1
  41cd6b:	cmp    eax,0xdd1c1c7
  41cd70:	jecxz  0x41cd80
  41cd72:	popf   
  41cd73:	lahf   
  41cd74:	mov    cl,0x99
  41cd76:	retf   
  41cd77:	jbe    0x41cde7
  41cd79:	inc    ebx
  41cd7a:	sbb    al,0x82
  41cd7c:	or     bl,0x91
  41cd7f:	es pop ds
  41cd81:	jl     0x41cd08
  41cd83:	or     al,0x8f
  41cd85:	sub    edx,DWORD PTR [edi+0x35]
  41cd88:	push   ebx
  41cd89:	jmp    DWORD PTR [ecx+0x7d1e5457]
  41cd8f:	rol    BYTE PTR [ebx+0x76dc03e6],0x95
  41cd96:	lods   eax,DWORD PTR ds:[esi]
  41cd97:	imul   ebp,DWORD PTR [eax-0x6],0x4a3737a4
  41cd9e:	add    edi,DWORD PTR [edx-0x28f65cc0]
  41cda4:	stc    
  41cda5:	mov    BYTE PTR [edi-0x1d0ab35a],bh
  41cdab:	lock cmp esp,ecx
  41cdae:	xchg   ecx,eax
  41cdaf:	sar    ecx,0x1d
  41cdb2:	inc    ecx
  41cdb3:	push   esi
  41cdb4:	and    DWORD PTR [esi-0x1],edi
  41cdb7:	enter  0x4221,0x6f
  41cdbb:	mov    edx,0xa802bf1c
  41cdc0:	xlat   BYTE PTR ds:[ebx]
  41cdc1:	push   ebx
  41cdc2:	inc    ecx
  41cdc3:	sbb    eax,0x22296645
  41cdc8:	mov    edx,0x2f7905a2
  41cdcd:	(bad)  
  41cdce:	add    ch,0x60
  41cdd1:	out    0x70,eax
  41cdd3:	mov    WORD PTR [edx+eiz*8],es
  41cdd6:	and    DWORD PTR [ecx],0x5152ce1b
  41cddc:	inc    edx
  41cddd:	mov    dl,0xd1
  41cddf:	iret   
  41cde0:	push   ebp
  41cde1:	add    ebx,DWORD PTR [esi]
  41cde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cde4:	scas   eax,DWORD PTR es:[edi]
  41cde5:	rcr    BYTE PTR [edx-0x60],cl
  41cde8:	das    
  41cde9:	sahf   
  41cdea:	lock nop
  41cdec:	leave  
  41cded:	mov    ah,0x83
  41cdef:	xor    al,0xf8
  41cdf1:	in     eax,dx
  41cdf2:	call   0x1fb2:0xe580736a
  41cdf9:	ret    
  41cdfa:	cld    
  41cdfb:	(bad)  
  41cdfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdfd:	and    eax,0x5310b476
  41ce02:	mov    es,WORD PTR [edi]
  41ce04:	mov    ebx,ebp
  41ce06:	xor    bl,bl
  41ce08:	call   0x1837fd8d
  41ce0d:	scas   al,BYTE PTR es:[edi]
  41ce0e:	sub    eax,0xe1189408
  41ce13:	pop    ss
  41ce14:	push   cs
  41ce15:	(bad)  
  41ce16:	fldcw  WORD PTR [ebp+0x4c418b14]
  41ce1c:	add    edi,edx
  41ce1e:	loope  0x41cdf2
  41ce20:	and    esp,DWORD PTR [ecx+ebp*1]
  41ce23:	retf   0x1c8d
  41ce26:	lahf   
  41ce27:	sbb    dh,BYTE PTR [ebx+0xd]
  41ce2a:	scas   eax,DWORD PTR es:[edi]
  41ce2b:	in     eax,dx
  41ce2c:	and    al,0x6c
  41ce2e:	fdiv   st,st(6)
  41ce30:	out    0x41,al
  41ce32:	fist   WORD PTR [ebx+0x4f03ad88]
  41ce38:	push   edi
  41ce39:	mov    cl,0xc3
  41ce3b:	mov    eax,0x4e50f755
  41ce40:	test   BYTE PTR [eax],0xae
  41ce43:	clc    
  41ce44:	stos   DWORD PTR es:[edi],eax
  41ce45:	mov    al,0x3b
  41ce47:	gs ret 
  41ce49:	sahf   
  41ce4a:	pop    esp
  41ce4b:	into   
  41ce4c:	ror    cl,1
  41ce4e:	cdq    
  41ce4f:	cmc    
  41ce50:	and    DWORD PTR [edx-0x1a],esp
  41ce53:	das    
  41ce54:	dec    edx
  41ce55:	fdiv   QWORD PTR [eax+0x2]
  41ce58:	pop    edx
  41ce59:	aad    0xa8
  41ce5b:	sbb    BYTE PTR [ecx],cl
  41ce5d:	or     ch,ch
  41ce5f:	pop    ecx
  41ce60:	outs   dx,DWORD PTR ds:[esi]
  41ce61:	dec    eax
  41ce62:	push   esp
  41ce63:	mov    ?,WORD PTR [ecx-0x31]
  41ce66:	and    ah,bl
  41ce68:	mov    ebp,0xb028ec36
  41ce6d:	inc    ebx
  41ce6e:	aad    0xc8
  41ce70:	stc    
  41ce71:	pop    esp
  41ce72:	sub    DWORD PTR [esi+0x2c3147b0],ecx
  41ce78:	mov    ds:0x2bf9ea3c,eax
  41ce7d:	add    DWORD PTR [ecx],esi
  41ce7f:	icebp  
  41ce80:	sub    al,0x49
  41ce82:	cmp    eax,0x40322928
  41ce87:	ins    DWORD PTR es:[edi],dx
  41ce88:	mov    ds:0x404a415,eax
  41ce8d:	adc    eax,0x75bc7f05
  41ce92:	cmp    al,0xa9
  41ce94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce95:	and    BYTE PTR [ebx+0x3a8cdaa2],dl
  41ce9b:	int    0x5f
  41ce9d:	lds    dx,DWORD PTR ds:0x5b6d1e49
  41cea4:	lock mov WORD PTR [edx+0x24a0544f],ss
  41ceab:	mov    ds:0x1019713d,al
  41ceb0:	pop    edx
  41ceb1:	mov    bh,0x84
  41ceb3:	jge    0x41ce49
  41ceb5:	jnp    0x41cf2f
  41ceb7:	pop    ss
  41ceb8:	adc    al,0x34
  41ceba:	dec    edi
  41cebb:	pop    esp
  41cebc:	jbe    0x41cf33
  41cebe:	enter  0x9c42,0xac
  41cec2:	mov    al,0x2c
  41cec4:	and    bh,BYTE PTR [ebx]
  41cec6:	out    dx,al
  41cec7:	push   ecx
  41cec8:	aaa    
  41cec9:	lock fdiv st,st(2)
  41cecc:	adc    DWORD PTR [edx],0xb251ff4
  41ced2:	mov    dl,0xbc
  41ced5:	(bad)  
  41ced6:	loopne 0x41ced8
  41ced8:	mov    edx,0x6d4c974a
  41cedd:	or     eax,0x88d3c4a5
  41cee2:	xchg   ecx,eax
  41cee3:	inc    esp
  41cee4:	add    DWORD PTR [esi+eiz*1],esi
  41cee7:	sub    eax,DWORD PTR [esi]
  41cee9:	int    0xf9
  41ceeb:	or     DWORD PTR [esi-0x50],esp
  41ceee:	xchg   edx,eax
  41ceef:	push   edi
  41cef0:	into   
  41cef1:	mov    ds:0x8ed3f808,al
  41cef6:	add    eax,0x88dd3bd7
  41cefb:	pushf  
  41cefc:	bound  eax,QWORD PTR [edx]
  41cefe:	mov    ah,0x31
  41cf00:	retf   
  41cf01:	adc    eax,0xde47620c
  41cf06:	mov    ebp,0x46071317
  41cf0b:	cli    
  41cf0c:	in     eax,0xed
  41cf0e:	pop    ebx
  41cf0f:	jno    0x41cf86
  41cf11:	fcom   QWORD PTR [edx+edi*2-0x33]
  41cf15:	shl    BYTE PTR [esi],cl
  41cf17:	jmp    0x41cf73
  41cf19:	in     al,dx
  41cf1a:	out    dx,eax
  41cf1b:	fisub  DWORD PTR [edi]
  41cf1d:	nop
  41cf1e:	or     ecx,DWORD PTR ds:0xc9f95504
  41cf24:	(bad)  
  41cf25:	xchg   edx,eax
  41cf26:	ins    BYTE PTR es:[edi],dx
  41cf27:	cmp    al,0xd4
  41cf29:	jmp    0x1fc1f36a
  41cf2e:	mov    dh,0x81
  41cf30:	mov    ds:0x3003713a,eax
  41cf35:	inc    edi
  41cf36:	xor    al,0xc5
  41cf38:	ins    DWORD PTR es:[edi],dx
  41cf39:	jmp    0x39cd1af7
  41cf3e:	dec    eax
  41cf3f:	sar    edi,cl
  41cf41:	aas    
  41cf42:	sbb    eax,0x8fa249a5
  41cf47:	jmp    0x8b90e1b2
  41cf4c:	cmc    
  41cf4d:	xor    BYTE PTR [ebx],ah
  41cf4f:	dec    ebp
  41cf50:	add    BYTE PTR [ebx+0x72e6e4a5],0x96
  41cf57:	add    eax,0x495174b0
  41cf5c:	push   0xb27c544c
  41cf61:	mov    ah,0xa5
  41cf63:	imul   BYTE PTR [esi-0x29]
  41cf66:	pop    ecx
  41cf67:	mov    DWORD PTR [ecx],edi
  41cf69:	mov    esp,0x53b8ff77
  41cf6e:	xchg   esp,eax
  41cf6f:	xchg   BYTE PTR [ebx-0x3a1cc3ee],al
  41cf75:	pusha  
  41cf76:	mov    ebx,0x790a1eee
  41cf7b:	dec    ebx
  41cf7c:	add    cl,dh
  41cf7e:	(bad)  [ebp+ebx*1+0x11]
  41cf82:	js     0x41cfad
  41cf84:	mov    ds:0x48a4fd36,eax
  41cf89:	imul   esp,edi,0xcc67ce74
  41cf8f:	stos   BYTE PTR es:[edi],al
  41cf90:	sbb    ah,BYTE PTR [esi+0x1cd1be6d]
  41cf96:	retf   
  41cf97:	dec    esi
  41cf98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf99:	cli    
  41cf9a:	out    dx,eax
  41cf9b:	std    
  41cf9c:	and    bh,BYTE PTR [ebp-0x36]
  41cf9f:	retf   
  41cfa0:	push   eax
  41cfa1:	pop    esp
  41cfa2:	push   0x608d0e87
  41cfa7:	jp     0x41cfdf
  41cfa9:	rol    BYTE PTR [eax+edi*1-0x3e],0x0
  41cfae:	add    BYTE PTR [eax],al
  41cfb0:	add    BYTE PTR [eax],al
  41cfb2:	jnp    0x41cf7d
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0x9a70fbc9
  41cfc2:	inc    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	repz add al,0x0
  41cfc9:	add    BYTE PTR [esi],ch
  41cfcb:	inc    ecx
  41cfcc:	sbb    BYTE PTR [ebp+eax*1+0x5b],dl
  41cfd0:	out    0x9b,al
  41cfd2:	mov    esp,0x35c1572d
  41cfd7:	imul   ebp,ebp,0xffffffdb
  41cfda:	lea    ebp,[ecx]
  41cfdc:	push   ss
  41cfdd:	dec    ebx
  41cfde:	mov    bp,0x3238
  41cfe2:	cwde   
  41cfe3:	add    esp,DWORD PTR [ebx+0x62d4f75b]
  41cfe9:	sbb    edx,DWORD PTR [edi]
  41cfeb:	icebp  
  41cfec:	mov    edx,0x71a08c78
  41cff1:	hlt    
  41cff2:	retf   
  41cff3:	mov    eax,ds:0xc30c31ae
  41cff8:	add    DWORD PTR [edi],ebp
  41cffa:	dec    edx
  41cffb:	orps   xmm7,XMMWORD PTR [ebx+eax*8]
  41cfff:	(bad)  
  41d000:	nop
  41d001:	mov    edi,0x15ad5770
  41d006:	mov    dh,0x21
  41d008:	adc    BYTE PTR [eax],bl
  41d00a:	sahf   
  41d00b:	xchg   ebp,eax
  41d00c:	mov    BYTE PTR [edx-0x5771575],ch
  41d012:	stc    
  41d013:	xor    eax,DWORD PTR [esp+edx*1-0x68e5b9bb]
  41d01a:	sub    ah,0x4e
  41d01d:	lea    esi,[edx-0x29]
  41d020:	(bad)  
  41d021:	imul   edi,DWORD PTR [ebx],0xb
  41d024:	cs (bad) 
  41d026:	adc    bl,BYTE PTR [eax-0xb9d38d1]
  41d02c:	sti    
  41d02d:	aad    0x6e
  41d02f:	aam    0xc7
  41d031:	cs pop ebx
  41d033:	xor    al,0xa5
  41d035:	stos   BYTE PTR es:[edi],al
  41d036:	rcl    BYTE PTR [edx],cl
  41d038:	cmc    
  41d039:	scas   eax,DWORD PTR es:[edi]
  41d03a:	repz std 
  41d03c:	push   edi
  41d03d:	cmp    dl,BYTE PTR [ebx]
  41d03f:	das    
  41d040:	cmp    eax,0xce5f32bd
  41d045:	mov    ds:0xd2e30fe,al
  41d04a:	aas    
  41d04b:	daa    
  41d04c:	clc    
  41d04d:	shl    bl,cl
  41d04f:	cli    
  41d050:	inc    esp
  41d051:	jg     0x41d07d
  41d053:	cmp    ecx,DWORD PTR [edi]
  41d055:	jo     0x41cfd7
  41d057:	pop    es
  41d058:	bound  eax,QWORD PTR [edi+0x68]
  41d05b:	loopne 0x41d04b
  41d05d:	mov    ds:0xf79b82e4,al
  41d062:	mov    es,edx
  41d064:	pop    eax
  41d065:	pop    edi
  41d066:	mov    esp,0xb8d9eb03
  41d06b:	xchg   esp,eax
  41d06c:	cmp    ch,BYTE PTR [ebp-0x80]
  41d06f:	stos   BYTE PTR es:[edi],al
  41d070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d071:	mov    ebp,eax
  41d073:	outs   dx,BYTE PTR ds:[esi]
  41d074:	scas   al,BYTE PTR es:[edi]
  41d075:	xor    DWORD PTR [ecx],eax
  41d077:	inc    esi
  41d078:	fst    DWORD PTR [ebx+0x34fd3096]
  41d07e:	stos   BYTE PTR es:[edi],al
  41d07f:	mov    eax,0xeb2d1b35
  41d084:	pop    es
  41d085:	js     0x41d025
  41d087:	jp     0x41d0d6
  41d089:	stc    
  41d08a:	mov    eax,0x99473265
  41d08f:	fsub   DWORD PTR [ebp+0x13]
  41d092:	ror    BYTE PTR [ecx],cl
  41d094:	out    dx,al
  41d095:	mov    cl,0x77
  41d097:	gs dec ebx
  41d099:	cmp    al,0xdd
  41d09b:	out    0xd7,eax
  41d09d:	jl     0x41d0d6
  41d09f:	test   eax,0xf3cd1ea7
  41d0a4:	std    
  41d0a5:	sbb    bl,BYTE PTR ds:0x4f564cce
  41d0ab:	xor    eax,0x9e6b7cee
  41d0b0:	call   0x330c7458
  41d0b5:	gs inc esp
  41d0b7:	iret   
  41d0b8:	and    cl,BYTE PTR [edi+0x32728712]
  41d0be:	(bad)  
  41d0bf:	lods   al,BYTE PTR ds:[esi]
  41d0c0:	psrad  mm4,QWORD PTR [edx+0x7181be1b]
  41d0c7:	neg    DWORD PTR [ecx+0xd]
  41d0ca:	(bad)  
  41d0cc:	inc    edx
  41d0cd:	pop    ebx
  41d0ce:	push   ebx
  41d0cf:	pop    ss
  41d0d0:	or     BYTE PTR [ebx-0x18b403c9],ah
  41d0d6:	(bad)  
  41d0d7:	repnz out dx,al
  41d0d9:	mov    eax,ds:0xf3cd200c
  41d0de:	mov    ds:0xb1fb8e41,eax
  41d0e3:	aas    
  41d0e4:	inc    edi
  41d0e5:	push   ebp
  41d0e6:	sub    DWORD PTR [eax-0x3e],esi
  41d0e9:	cmp    BYTE PTR [eax+0x115986c2],bh
  41d0ef:	bsr    esp,DWORD PTR [ebx+0x4f]
  41d0f3:	sub    bh,BYTE PTR [esp+esi*1-0x2f93fd77]
  41d0fa:	jbe    0x41d151
  41d0fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0fd:	aaa    
  41d0fe:	in     al,dx
  41d0ff:	in     eax,dx
  41d100:	sbb    bh,dh
  41d102:	retf   0x1286
  41d105:	cld    
  41d106:	enter  0x9a07,0x68
  41d10a:	mov    ecx,0xa47faab9
  41d10f:	mov    ecx,DWORD PTR [ebx+0x595f200d]
  41d115:	pop    ds
  41d116:	cmp    bl,BYTE PTR [ebx+0x2d]
  41d119:	cmp    DWORD PTR [esi],0xffffffed
  41d11c:	sub    edx,DWORD PTR [edi-0x5b34e2a3]
  41d122:	jmp    0xa5c1:0x4c96031b
  41d129:	mov    ch,0xc1
  41d12b:	inc    ecx
  41d12c:	les    edx,FWORD PTR [ebp+0x75]
  41d12f:	pop    eax
  41d130:	ins    DWORD PTR es:[edi],dx
  41d131:	jae    0x41d0fd
  41d133:	xchg   esp,eax
  41d134:	push   ds
  41d135:	div    esi
  41d137:	mov    bl,0x7e
  41d139:	push   edx
  41d13a:	test   ebp,esi
  41d13c:	test   BYTE PTR [edi+0x7b26b29f],cl
  41d142:	neg    DWORD PTR [ecx]
  41d144:	jnp    0x41d139
  41d146:	(bad)  
  41d147:	jecxz  0x41d13b
  41d149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d14a:	or     DWORD PTR [ebx+0x11],ecx
  41d14d:	fsubr  QWORD PTR [esi]
  41d14f:	inc    esi
  41d150:	cmp    eax,0xfcddd916
  41d155:	cli    
  41d156:	xor    edx,ecx
  41d158:	scas   al,BYTE PTR es:[edi]
  41d159:	jmp    0x41d15a
  41d15b:	fs pop es
  41d15d:	adc    edx,esi
  41d15f:	or     al,0xc7
  41d161:	pop    edx
  41d162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d163:	push   eax
  41d164:	clc    
  41d165:	in     al,dx
  41d166:	(bad)  
  41d167:	jmp    0x41d1ae
  41d169:	cwde   
  41d16a:	jmp    0x2cc39c55
  41d16f:	loopne 0x41d1bf
  41d171:	inc    esp
  41d172:	fs ins DWORD PTR es:[edi],dx
  41d174:	and    DWORD PTR [esi+0x21],esi
  41d177:	stc    
  41d178:	shr    BYTE PTR [esi-0x2c4c4f6f],cl
  41d17e:	into   
  41d17f:	cld    
  41d180:	xchg   dx,ax
  41d182:	jmp    0xc6ea:0x36e11565
  41d189:	jl     0x41d196
  41d18b:	out    0x3f,al
  41d18d:	mov    al,0xbc
  41d18f:	jb     0x41d1c5
  41d191:	mov    ds:0x192606ee,al
  41d196:	outs   dx,BYTE PTR ds:[esi]
  41d197:	sub    al,BYTE PTR [ecx-0x15f13df8]
  41d19d:	pop    edx
  41d19e:	pop    ds
  41d19f:	sbb    eax,0xb3748761
  41d1a4:	repnz call FWORD PTR [ebp+0x75a2c5aa]
  41d1ab:	and    BYTE PTR [ebx-0xab7bf79],dl
  41d1b1:	mov    dh,0xc
  41d1b3:	aad    0xa
  41d1b5:	aad    0xb7
  41d1b7:	clc    
  41d1b8:	int    0x5b
  41d1ba:	neg    BYTE PTR [edx-0x4ad058ef]
  41d1c0:	cli    
  41d1c1:	push   esp
  41d1c2:	jnp    0x41d20e
  41d1c4:	rcl    dh,cl
  41d1c6:	adc    DWORD PTR [ecx+0x7f25e282],0x48
  41d1cd:	sub    BYTE PTR [ebp+0x1c],al
  41d1d0:	push   edi
  41d1d1:	call   0xa61a500
  41d1d6:	xor    BYTE PTR [ebx+0x54b69e80],al
  41d1dc:	cwde   
  41d1dd:	sbb    dl,bh
  41d1df:	jp     0x41d198
  41d1e1:	cld    
  41d1e2:	fistp  DWORD PTR [edi]
  41d1e4:	mov    dl,0xc
  41d1e6:	pop    eax
  41d1e7:	(bad)  
  41d1e8:	mov    bh,0xb6
  41d1ea:	mov    ah,0x60
  41d1ec:	push   ebx
  41d1ed:	enter  0xc030,0xb2
  41d1f1:	call   0x1097b1c9
  41d1f6:	test   cl,0xc6
  41d1f9:	mov    eax,0xfd3b3acb
  41d1fe:	js     0x41d244
  41d200:	sahf   
  41d201:	stos   DWORD PTR es:[edi],eax
  41d202:	das    
  41d203:	mov    ds:0x1fa7389a,al
  41d208:	test   DWORD PTR [eax-0x4a6d2d2c],ebp
  41d20e:	imul   eax,edx,0xa4763595
  41d214:	dec    ebp
  41d215:	test   BYTE PTR [ebx+0x7c60af48],ah
  41d21b:	outs   dx,BYTE PTR ds:[esi]
  41d21c:	in     eax,0xf6
  41d21e:	inc    eax
  41d21f:	loopne 0x41d1b6
  41d221:	mov    al,ds:0x20d4d20c
  41d226:	pop    esi
  41d227:	xor    DWORD PTR [eax-0x3a],edx
  41d22a:	and    eax,0x1bb53b59
  41d22f:	retf   0xe5a4
  41d232:	sahf   
  41d233:	dec    ebx
  41d234:	jmp    0xeda1:0xfa0a02b4
  41d23b:	stos   DWORD PTR es:[edi],eax
  41d23c:	jb     0x41d2a6
  41d23e:	mov    edi,0x36f62516
  41d243:	adc    BYTE PTR [esi-0x13],0x3f
  41d247:	sub    eax,0x6c595601
  41d24c:	dec    ebx
  41d24d:	xor    edi,DWORD PTR [edi+0x53d3dbcb]
  41d253:	call   0xfef:0x18e74a83
  41d25a:	jmp    0x41d1ee
  41d25c:	push   ecx
  41d25d:	xchg   edx,eax
  41d25e:	pushf  
  41d25f:	es mov edi,0x4c826f47
  41d265:	loopne 0x41d25b
  41d267:	jno    0x41d2bd
  41d269:	mov    ds:0x431c87d4,eax
  41d26e:	pushf  
  41d26f:	xor    eax,0x39840492
  41d274:	mov    dh,dl
  41d276:	jbe    0x41d2e4
  41d278:	adc    eax,0x2f9669b8
  41d27d:	push   esp
  41d27e:	push   ebp
  41d27f:	in     al,dx
  41d280:	shr    cl,cl
  41d282:	adc    eax,0x99e0665e
  41d287:	add    cl,BYTE PTR [esi+0x50]
  41d28a:	shl    DWORD PTR [edi-0x5b],1
  41d28d:	rcr    BYTE PTR [edx],1
  41d28f:	cmp    eax,0x29af8a3c
  41d294:	push   ds
  41d295:	repz xor al,0x45
  41d298:	in     eax,dx
  41d299:	or     bh,BYTE PTR [ebx+0x25ac774f]
  41d29f:	icebp  
  41d2a0:	mov    ebx,DWORD PTR ss:[edx+0x17]
  41d2a4:	out    dx,al
  41d2a5:	loopne 0x41d270
  41d2a7:	add    eax,0x28b20d77
  41d2ac:	pop    ebp
  41d2ad:	aam    0xe4
  41d2af:	dec    ebx
  41d2b0:	repz adc dh,BYTE PTR [edx]
  41d2b3:	fsubr  QWORD PTR [ecx-0x18c91746]
  41d2b9:	xchg   ebp,eax
  41d2ba:	stc    
  41d2bb:	shr    BYTE PTR ds:0xaea46eb9,1
  41d2c1:	imul   edi,DWORD PTR [esi+0x46],0xb996ef43
  41d2c8:	into   
  41d2c9:	push   es
  41d2ca:	clc    
  41d2cb:	addr16 popf 
  41d2cd:	int3   
  41d2ce:	mov    esi,DWORD PTR [esi+0xffd29b0]
  41d2d4:	mov    ebp,0xc81fd31d
  41d2d9:	sbb    DWORD PTR [ebx],edi
  41d2db:	inc    ecx
  41d2dc:	retf   
  41d2dd:	call   0x1e42:0x89495581
  41d2e4:	lahf   
  41d2e5:	mov    BYTE PTR [ecx],cl
  41d2e7:	sub    ah,BYTE PTR [ebx+0x14]
  41d2ea:	inc    ebx
  41d2eb:	pop    ecx
  41d2ec:	push   esp
  41d2ed:	jmp    0xe5c29860
  41d2f2:	dec    ebp
  41d2f3:	js     0x41d27e
  41d2f5:	cmp    BYTE PTR [ebx],bl
  41d2f7:	mov    BYTE PTR [eax+ebx*8-0x2e],bl
  41d2fb:	pop    ss
  41d2fc:	xchg   ebp,eax
  41d2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2fe:	(bad)
  41d301:	mov    ecx,0xb672df08
  41d306:	call   0x93ed:0xb4d4dc8c
  41d30d:	xor    ah,BYTE PTR [edx]
  41d30f:	jnp    0x41d314
  41d311:	mov    bh,0xd7
  41d313:	mov    ebp,0xbfae99d
  41d318:	add    al,al
  41d31a:	jg     0x41d2bb
  41d31c:	test   eax,0x5b9208b
  41d321:	rcr    BYTE PTR [edi-0x2116eaf9],0x4a
  41d328:	js     0x41d2f3
  41d32a:	mov    bh,0xf2
  41d32c:	lock aam 0x3
  41d32f:	sbb    BYTE PTR [edx+0x6f0a87b],al
  41d335:	imul   esi,DWORD PTR [esp+edi*1+0x45],0x62
  41d33a:	sti    
  41d33b:	inc    bx
  41d33d:	sub    DWORD PTR [edi+0x40],eax
  41d340:	mul    BYTE PTR [ebx+0x2d]
  41d343:	push   0xbe2c58bd
  41d348:	mov    edx,0xb69c2f7d
  41d34d:	adc    bl,BYTE PTR [eax-0x3b]
  41d350:	fisubr DWORD PTR [edi+0x4e]
  41d353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d354:	sbb    DWORD PTR [ebp-0x1],0x1ce3f7ff
  41d35b:	mov    cs,WORD PTR ss:[eax+eax*2]
  41d35f:	in     eax,dx
  41d360:	sub    dh,BYTE PTR [edx]
  41d362:	pop    eax
  41d363:	(bad)  
  41d364:	stc    
  41d365:	(bad)
  41d369:	sbb    BYTE PTR [ecx+0x7f787f45],ch
  41d36f:	jnp    0x41d362
  41d371:	jae    0x41d3e1
  41d373:	jns    0x41d3c0
  41d375:	jne    0x41d300
  41d377:	pop    ds
  41d378:	pushf  
  41d379:	loopne 0x41d34e
  41d37b:	sbb    BYTE PTR [edx-0x25],bh
  41d37e:	jnp    0x41d31e
  41d380:	ds mov dh,0x36
  41d383:	aas    
  41d384:	data16 jge 0x41d3f6
  41d387:	or     ebx,esp
  41d389:	mov    ecx,0x1577802a
  41d38e:	ds jo  0x41d408
  41d391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d392:	cmp    esi,DWORD PTR ds:0xd3f35fef
  41d398:	mov    esi,0xb41b67dd
  41d39d:	icebp  
  41d39e:	pop    esp
  41d39f:	and    DWORD PTR [ecx-0x2a],ecx
  41d3a2:	data16 daa 
  41d3a4:	test   eax,0xd60acac9
  41d3a9:	add    DWORD PTR [esi-0x3b6754e1],ecx
  41d3af:	shl    BYTE PTR ds:0xeafeaa33,0xd5
  41d3b6:	jns    0x41d384
  41d3b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3b9:	add    BYTE PTR [edi],0xa5
  41d3bc:	adc    DWORD PTR [edx],esi
  41d3be:	push   0x74
  41d3c0:	and    BYTE PTR [ebx-0x74],bl
  41d3c3:	clc    
  41d3c4:	adc    eax,edi
  41d3c6:	jge    0x41d399
  41d3c8:	outs   dx,BYTE PTR ds:[esi]
  41d3c9:	cmp    al,0xb5
  41d3cb:	shl    eax,1
  41d3cd:	sub    eax,0x8e4300df
  41d3d2:	into   
  41d3d3:	sub    BYTE PTR [ebx-0x30],al
  41d3d6:	or     DWORD PTR [edi-0x414b9bc8],edi
  41d3dc:	cmp    BYTE PTR [ebp-0x63],bl
  41d3df:	mov    eax,DWORD PTR [esi]
  41d3e1:	and    al,0xec
  41d3e3:	mov    ebp,0x6bf392c1
  41d3e8:	sub    DWORD PTR [edx-0x1494e244],esi
  41d3ee:	mov    bl,0x96
  41d3f0:	fst    DWORD PTR [edx+ebp*8-0xc202c60]
  41d3f7:	pushf  
  41d3f8:	push   es
  41d3f9:	cmp    ecx,DWORD PTR [edx+0x56]
  41d3fc:	arpl   WORD PTR [ecx-0x5a0561d6],di
  41d402:	cli    
  41d403:	jmp    0xe089cbf9
  41d408:	sbb    ah,bh
  41d40a:	mov    edx,0x47403760
  41d40f:	test   DWORD PTR [ebx+eax*1],0x3e4edc9c
  41d416:	out    0xf,eax
  41d418:	mov    esi,0x387dbb72
  41d41d:	lods   eax,DWORD PTR ds:[esi]
  41d41e:	add    DWORD PTR [ebp-0x68],edx
  41d421:	lods   eax,DWORD PTR ds:[esi]
  41d422:	mov    dl,0x59
  41d424:	addr16 (bad) 
  41d426:	fistp  DWORD PTR [eax-0x47df41dd]
  41d42c:	cmp    edi,DWORD PTR [edx+0x16]
  41d42f:	sub    bl,BYTE PTR [ebx+0x2198a5a0]
  41d435:	add    al,0x82
  41d437:	loopne 0x41d47c
  41d439:	stc    
  41d43a:	mov    esi,0x8b4d0e00
  41d43f:	sti    
  41d440:	inc    ebp
  41d441:	adc    eax,0x7a58152d
  41d446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d447:	sub    esi,0x32
  41d44a:	mov    eax,ds:0x3baec005
  41d44f:	(bad)  
  41d451:	mov    ds:0xc4483817,eax
  41d456:	and    ch,dl
  41d458:	popa   
  41d459:	fimul  DWORD PTR [eax-0x73]
  41d45c:	xor    eax,edi
  41d45e:	add    al,0xbb
  41d460:	dec    ebp
  41d461:	clc    
  41d462:	xor    ebx,DWORD PTR [edi+0x49f27e93]
  41d468:	loop   0x41d404
  41d46a:	fsub   DWORD PTR [ebx]
  41d46c:	xor    BYTE PTR [edx+0x48],ah
  41d46f:	hlt    
  41d470:	and    edx,edx
  41d472:	xor    esi,DWORD PTR [ecx-0xc]
  41d475:	push   es
  41d476:	and    DWORD PTR [ebp-0x6b175707],edi
  41d47c:	in     eax,0x9c
  41d47e:	call   0xaab21a89
  41d483:	mov    bh,BYTE PTR [eax-0x632c4d36]
  41d489:	inc    eax
  41d48a:	les    eax,FWORD PTR [edx+0x26]
  41d48d:	mov    ch,BYTE PTR [ebp-0x73ded574]
  41d493:	sbb    dh,BYTE PTR [ebx+ebp*8-0x41b12fb6]
  41d49a:	mov    eax,0xaf63d103
  41d49f:	and    al,0x78
  41d4a1:	pusha  
  41d4a2:	lock add bl,dl
  41d4a5:	outs   dx,BYTE PTR ds:[esi]
  41d4a6:	(bad)  
  41d4a7:	not    eax
  41d4a9:	into   
  41d4aa:	adc    DWORD PTR [ebp-0x57f53161],0xe7e4cf75
  41d4b4:	sbb    al,0xa
  41d4b6:	mov    cl,BYTE PTR [ecx+0x44fea476]
  41d4bc:	adc    al,BYTE PTR [eax]
  41d4be:	add    BYTE PTR [eax],al
  41d4c0:	add    BYTE PTR [eax],al
  41d4c2:	loop   0x41d4ce
  41d4c4:	add    DWORD PTR [ecx+0x7bf29be9],edx
  41d4ca:	mov    ebp,0xdc5ff411
  41d4cf:	clc    
  41d4d0:	xor    esp,DWORD PTR [edi+0x34]
  41d4d3:	push   eax
  41d4d4:	add    DWORD PTR [eax],eax
  41d4d6:	repz add al,0x0
  41d4d9:	add    BYTE PTR [eax+0x2a],cl
  41d4dc:	mov    esp,0x9cc2504d
  41d4e1:	or     al,0xdf
  41d4e3:	aad    0x6b
  41d4e5:	jne    0x41d54c
  41d4e7:	mov    ds:0xa587d453,eax
  41d4ec:	sub    esp,DWORD PTR [eax+0x12]
  41d4ef:	mul    BYTE PTR [edi-0x6b]
  41d4f2:	into   
  41d4f3:	loope  0x41d542
  41d4f5:	sub    BYTE PTR [eax-0x39],0xf2
  41d4f9:	ficomp WORD PTR [esi]
  41d4fb:	or     ebx,DWORD PTR [edi-0x68234d42]
  41d501:	sti    
  41d502:	je     0x41d4fa
  41d504:	jp     0x41d4f8
  41d506:	jbe    0x41d4d1
  41d508:	(bad)  
  41d509:	aam    0xa4
  41d50b:	adc    esp,DWORD PTR [ebx+0x1d1b90a]
  41d511:	mov    ecx,0xdd6d26e4
  41d516:	icebp  
  41d517:	imul   ebx,DWORD PTR [esi],0x5e
  41d51a:	into   
  41d51b:	fist   DWORD PTR [ecx-0x35]
  41d51e:	dec    esi
  41d51f:	rol    DWORD PTR [esi+0x10ddf02a],0x22
  41d526:	sbb    al,BYTE PTR [ebp+ebp*8+0x62]
  41d52a:	pop    es
  41d52b:	cmp    esp,ebp
  41d52d:	mov    al,0xe
  41d52f:	sbb    eax,ecx
  41d531:	mov    esi,0xd64742af
  41d536:	out    0x67,al
  41d538:	mov    dl,0xfe
  41d53a:	and    eax,0x1d6395a1
  41d53f:	inc    edi
  41d540:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d542:	push   esi
  41d543:	mov    eax,0xe84ec6fd
  41d548:	dec    edx
  41d549:	inc    esi
  41d54a:	mov    BYTE PTR [eax+0x1b344878],dh
  41d550:	fwait
  41d551:	mov    ch,0x52
  41d553:	mov    ah,0xdc
  41d555:	cmp    esp,ebp
  41d557:	mov    DWORD PTR [ecx-0x9],ebp
  41d55a:	and    esp,DWORD PTR [esi-0x9]
  41d55d:	fsub   DWORD PTR [ecx+0x6b982f26]
  41d563:	rcr    bh,cl
  41d565:	ret    0xbb81
  41d568:	imul   esi,DWORD PTR [edx],0x65b14ce
  41d56e:	(bad)  
  41d56f:	mov    ebx,0x999803fe
  41d574:	jge    0x41d5a4
  41d576:	jmp    0x41d4fc
  41d578:	fs ins DWORD PTR es:[edi],dx
  41d57a:	popa   
  41d57b:	add    eax,0xb3968394
  41d580:	int3   
  41d581:	pushf  
  41d582:	out    dx,al
  41d583:	lock dec ebx
  41d585:	mov    edx,0x5ef77dd7
  41d58a:	sbb    eax,0x9eee0125
  41d58f:	mov    esi,DWORD PTR [edx-0x5c7b312c]
  41d595:	jne    0x41d53c
  41d597:	dec    edx
  41d598:	in     eax,dx
  41d599:	jo     0x41d53a
  41d59b:	pop    ebp
  41d59c:	mov    edx,0xc2b08374
  41d5a1:	pop    ecx
  41d5a2:	int    0x53
  41d5a4:	gs lahf 
  41d5a6:	sahf   
  41d5a7:	cs retf 0x42db
  41d5ab:	and    BYTE PTR es:[ecx+0x6f1e442b],ah
  41d5b2:	in     al,0xdb
  41d5b4:	int3   
  41d5b5:	pop    edi
  41d5b6:	aam    0xc
  41d5b8:	xor    ch,BYTE PTR [eax+0x20dcdb76]
  41d5be:	sbb    edx,DWORD PTR [edi+0xd]
  41d5c1:	mov    ebp,0x829173bc
  41d5c6:	adc    BYTE PTR [eax+eiz*1],0xf1
  41d5ca:	jle    0x41d5fd
  41d5cc:	(bad)  [ebx+0x35dbe6d4]
  41d5d2:	pop    ebp
  41d5d3:	iret   
  41d5d4:	xchg   ebx,eax
  41d5d5:	fnstcw WORD PTR [eax-0x6b056d3f]
  41d5db:	icebp  
  41d5dc:	mov    ecx,0xd61aaa1a
  41d5e1:	jecxz  0x41d58d
  41d5e3:	mov    ebx,ebp
  41d5e5:	loop   0x41d5bc
  41d5e7:	mov    DWORD PTR [ebp+0x668c89e3],ebp
  41d5ed:	jge    0x41d579
  41d5ef:	pushf  
  41d5f0:	test   ebp,edx
  41d5f2:	es pop esi
  41d5f4:	adc    DWORD PTR [ecx-0x14],0x9077ed88
  41d5fb:	or     al,0xce
  41d5fd:	xchg   ebx,eax
  41d5fe:	and    bh,BYTE PTR [esi+0x6c]
  41d601:	ins    DWORD PTR es:[edi],dx
  41d602:	cdq    
  41d603:	dec    eax
  41d604:	fucomip st,st(2)
  41d606:	ror    DWORD PTR [ebx+0x6e],1
  41d609:	jp     0x41d5c4
  41d60b:	inc    esi
  41d60c:	test   al,0xd9
  41d60e:	aam    0x1d
  41d610:	es jp  0x41d626
  41d613:	aaa    
  41d614:	gs adc al,0xb5
  41d617:	fisubr DWORD PTR [edi-0x2]
  41d61a:	in     eax,dx
  41d61b:	add    BYTE PTR [esi],0x4a
  41d61e:	and    cl,al
  41d620:	or     BYTE PTR [edx-0x70],ah
  41d623:	arpl   di,si
  41d625:	push   0xffffff9d
  41d627:	sar    DWORD PTR [edi],0x55
  41d62a:	xchg   ebx,eax
  41d62b:	test   DWORD PTR [ecx-0x17],edx
  41d62e:	xor    BYTE PTR [ecx-0x4705acd8],dh
  41d634:	pop    edi
  41d635:	add    al,0x93
  41d637:	sub    DWORD PTR [eax+0x6bc3e185],0xfffffffd
  41d63e:	aas    
  41d63f:	addr16 mov cl,0x5a
  41d642:	in     ax,dx
  41d644:	ins    BYTE PTR es:[edi],dx
  41d645:	and    DWORD PTR [esi+eiz*1+0x54],ecx
  41d649:	mov    ?,WORD PTR [eax-0x49]
  41d64c:	mov    dl,0x25
  41d64e:	jl     0x41d5da
  41d650:	jb     0x41d6a6
  41d652:	test   DWORD PTR [edx-0x26d00e97],esi
  41d658:	xlat   BYTE PTR gs:[ebx]
  41d65a:	push   ds
  41d65b:	xor    esi,DWORD PTR [ebx+0x78]
  41d65e:	inc    esi
  41d65f:	fisttp QWORD PTR [edi*2-0x7b7a68da]
  41d666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d667:	sub    DWORD PTR [ecx],esp
  41d669:	push   ebp
  41d66a:	repz and al,0xbb
  41d66d:	popa   
  41d66e:	(bad)  
  41d66f:	bound  esi,QWORD PTR ds:0xa6dbb3c0
  41d675:	xchg   edi,eax
  41d676:	mov    bh,0x8d
  41d678:	adc    eax,DWORD PTR [edx]
  41d67a:	rol    BYTE PTR [ebx-0x26],cl
  41d67d:	pop    edi
  41d67e:	add    DWORD PTR [ebx-0x543b52a],0xffffffba
  41d685:	xchg   esp,eax
  41d686:	clc    
  41d687:	dec    eax
  41d688:	jmp    0x75c0e7cb
  41d68d:	inc    edi
  41d68e:	sbb    eax,0xbf7355f
  41d693:	push   es
  41d694:	mov    fs,WORD PTR [ebp-0x6078c708]
  41d69a:	ficom  DWORD PTR [ecx-0x37]
  41d69d:	xchg   esi,eax
  41d69e:	loopne 0x41d63e
  41d6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6a1:	iret   
  41d6a2:	adc    ecx,DWORD PTR [edx+0x1b]
  41d6a5:	ds cmp eax,0xb0bad4ce
  41d6ab:	movzx  ebp,al
  41d6ae:	lods   eax,DWORD PTR ds:[esi]
  41d6af:	mov    dl,0x1a
  41d6b1:	xchg   esi,eax
  41d6b2:	mov    ah,0xf5
  41d6b4:	adc    eax,0xaf7d8665
  41d6b9:	sbb    al,0xe1
  41d6bb:	jge    0x41d6cb
  41d6bd:	in     al,dx
  41d6be:	mov    esi,0x7ccb145d
  41d6c3:	mov    esp,0x21efa40d
  41d6c8:	or     BYTE PTR [ecx+0x692a0276],al
  41d6ce:	add    al,dh
  41d6d0:	add    dh,BYTE PTR [esp+eax*1+0x6d]
  41d6d4:	daa    
  41d6d5:	jle    0x41d661
  41d6d7:	sub    eax,DWORD PTR [edx-0x312a8db7]
  41d6dd:	push   0x1d
  41d6df:	push   ss
  41d6e0:	into   
  41d6e1:	rol    DWORD PTR [ecx-0x43],cl
  41d6e4:	aam    0xd4
  41d6e6:	into   
  41d6e7:	push   es
  41d6e8:	lock in eax,dx
  41d6ea:	adc    eax,0x58f701ab
  41d6ef:	(bad)  
  41d6f0:	bnd jb 0x41d74d
  41d6f3:	inc    ebx
  41d6f4:	hlt    
  41d6f5:	sbb    BYTE PTR [ebp+0x34],cl
  41d6f8:	or     bh,BYTE PTR [esi*8+0x4b29fd84]
  41d6ff:	sub    bl,BYTE PTR [esi+0x26]
  41d702:	imul   edx,DWORD PTR [edx-0x5705b0c1],0x50
  41d709:	add    edx,DWORD PTR [ebp-0x71a97c9b]
  41d70f:	js     0x41d6f8
  41d711:	jp     0x41d74e
  41d713:	addr16 dec esi
  41d715:	sub    eax,0x4ebedd2f
  41d71a:	int3   
  41d71b:	mov    al,ds:0x7d410c5e
  41d720:	inc    esi
  41d721:	bound  esi,QWORD PTR [edx+0x41]
  41d724:	mov    ch,0xd3
  41d726:	mov    ah,0x7c
  41d728:	aad    0x5a
  41d72a:	and    al,0xc0
  41d72c:	sub    bh,dl
  41d72e:	mov    eax,ds:0x5961c88e
  41d733:	nop
  41d734:	or     DWORD PTR [edx+0x53d671ac],ecx
  41d73a:	add    DWORD PTR [ecx-0x6],esp
  41d73d:	push   ebx
  41d73e:	or     ebx,edx
  41d740:	jmp    DWORD PTR [edi+0x35e0bb4b]
  41d746:	xchg   ecx,eax
  41d747:	mov    WORD PTR [ebx-0x27d089b6],ds
  41d74d:	push   esi
  41d74e:	ja     0x41d70e
  41d750:	mov    cl,al
  41d752:	std    
  41d753:	rcl    DWORD PTR [ecx-0x78c4a981],0x56
  41d75a:	les    ebp,FWORD PTR [ecx]
  41d75c:	stos   BYTE PTR es:[edi],al
  41d75d:	stc    
  41d75e:	popf   
  41d75f:	out    dx,al
  41d760:	push   ds
  41d761:	retf   0xe639
  41d764:	arpl   WORD PTR [esi],ax
  41d766:	jle    0x41d7ba
  41d768:	call   0x565f8f58
  41d76d:	cs out 0xd4,eax
  41d770:	lea    edx,[esp+edx*1]
  41d773:	mov    cl,BYTE PTR ds:0x4a9d5bc5
  41d779:	mov    ebp,0xb580a8a9
  41d77e:	test   BYTE PTR [esp+eax*1+0x5e60b667],dl
  41d785:	mov    ah,0x64
  41d787:	adc    DWORD PTR [ebx-0x19],eax
  41d78a:	sbb    al,0x3d
  41d78c:	mov    edi,0x434597fa
  41d791:	adc    cl,al
  41d793:	or     ah,BYTE PTR [ecx-0x99e18d7]
  41d799:	jb     0x41d7a0
  41d79b:	imul   eax,DWORD PTR [ebx+0x2f912c7b],0xfffffff6
  41d7a2:	adc    dh,BYTE PTR [ebp-0x41]
  41d7a5:	or     al,BYTE PTR [eax-0x4d97fc30]
  41d7ab:	dec    esp
  41d7ac:	in     eax,0xaa
  41d7ae:	fldpi  
  41d7b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7b1:	jecxz  0x41d767
  41d7b3:	pop    ss
  41d7b4:	dec    eax
  41d7b5:	mov    edx,0x4fadb8c0
  41d7ba:	mov    ebp,0xe3ae440d
  41d7bf:	add    DWORD PTR [edx],esi
  41d7c1:	mov    ds:0x65081ad5,al
  41d7c6:	sbb    eax,0x155e50b8
  41d7cb:	and    dh,BYTE PTR [esi+0x74bd9e93]
  41d7d1:	jns    0x41d802
  41d7d3:	cwde   
  41d7d4:	call   0x7e4ba394
  41d7d9:	aas    
  41d7da:	mov    bh,0xc6
  41d7dc:	dec    ebx
  41d7dd:	test   ebx,esp
  41d7df:	mov    eax,0xfd73cb4a
  41d7e4:	pop    ds
  41d7e5:	mov    ecx,0x285cd549
  41d7ea:	sbb    BYTE PTR [ebx+ecx*4],bh
  41d7ed:	dec    BYTE PTR [esi]
  41d7ef:	xchg   ebp,eax
  41d7f0:	loopne 0x41d86e
  41d7f2:	ss jl  0x41d864
  41d7f5:	gs (bad) 
  41d7f7:	int3   
  41d7f8:	xchg   esp,eax
  41d7f9:	mov    eax,0x56683eaa
  41d7fe:	jle    0x41d7bc
  41d800:	scas   al,BYTE PTR es:[edi]
  41d801:	iret   
  41d802:	scas   al,BYTE PTR es:[edi]
  41d803:	rcr    al,0xb7
  41d806:	add    BYTE PTR [ecx+0x1dec2611],dh
  41d80c:	(bad)
  41d80f:	lahf   
  41d810:	(bad)  
  41d812:	or     esi,DWORD PTR [ebp+0x4d]
  41d815:	add    ah,BYTE PTR [eax+eax*8-0x5b]
  41d819:	add    al,0xc4
  41d81b:	jle    0x41d7cd
  41d81d:	inc    esp
  41d81e:	aam    0xac
  41d820:	or     DWORD PTR [ebp-0x3c],0xffffffe6
  41d824:	adc    edx,DWORD PTR [esi]
  41d826:	ins    BYTE PTR es:[edi],dx
  41d827:	ja     0x41d7b6
  41d829:	push   ebx
  41d82a:	ss jmp 0x41d7c6
  41d82d:	lock outs dx,BYTE PTR ds:[esi]
  41d82f:	imul   ebp,DWORD PTR [eax+edx*1-0x752e4e4],0xffffff84
  41d837:	scas   al,BYTE PTR es:[edi]
  41d838:	and    dl,bl
  41d83a:	pop    ecx
  41d83b:	xor    ch,BYTE PTR [ecx+0x1be03aa2]
  41d841:	jbe    0x41d8af
  41d843:	retf   0xf892
  41d846:	sti    
  41d847:	mov    ecx,DWORD PTR [edi-0x5b]
  41d84a:	jns    0x41d88c
  41d84c:	sbb    BYTE PTR [edi],dh
  41d84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d84f:	stos   BYTE PTR es:[edi],al
  41d850:	inc    edi
  41d851:	lahf   
  41d852:	adc    dl,bh
  41d854:	push   ebx
  41d855:	push   ss
  41d856:	dec    edx
  41d857:	jp     0x41d872
  41d859:	test   eax,0x75a08492
  41d85e:	pop    esp
  41d85f:	push   ecx
  41d860:	ds cli 
  41d862:	mov    DWORD PTR [ecx],0x3f93f7bc
  41d868:	pop    eax
  41d869:	cwde   
  41d86a:	je     0x41d88f
  41d86c:	xor    al,0x6f
  41d86e:	add    DWORD PTR ds:0x6d8afddc,edi
  41d874:	fdivr  QWORD PTR cs:[edi-0x59]
  41d878:	cdq    
  41d879:	xchg   BYTE PTR [edi+0x5e],dh
  41d87c:	pop    ebx
  41d87d:	xchg   ebp,eax
  41d87e:	clc    
  41d87f:	shr    BYTE PTR [edi+0x7c],cl
  41d882:	leave  
  41d883:	std    
  41d884:	inc    esi
  41d885:	mov    bh,0x76
  41d887:	pop    ebp
  41d888:	adc    dl,al
  41d88a:	jle    0x41d8a6
  41d88c:	int    0xc1
  41d88e:	jle    0x41d866
  41d890:	fwait
  41d891:	sub    al,0xd9
  41d893:	add    BYTE PTR [edx-0x590e666c],cl
  41d899:	xchg   BYTE PTR [edi+edx*1],al
  41d89c:	or     eax,0x91cbfc6c
  41d8a1:	pop    es
  41d8a2:	add    BYTE PTR [ebx+ecx*1],0x65
  41d8a6:	pushf  
  41d8a7:	xchg   ebp,eax
  41d8a8:	or     bh,BYTE PTR [esi]
  41d8aa:	mov    ebp,DWORD PTR [eax-0xe673201]
  41d8b0:	std    
  41d8b1:	cmc    
  41d8b2:	sub    al,0x93
  41d8b4:	and    al,0x9f
  41d8b6:	jo     0x41d8dd
  41d8b8:	loope  0x41d906
  41d8ba:	sti    
  41d8bb:	fiadd  DWORD PTR [esi]
  41d8bd:	cs ja  0x41d857
  41d8c0:	je     0x41d885
  41d8c2:	(bad)  
  41d8c3:	into   
  41d8c4:	outs   dx,BYTE PTR ds:[esi]
  41d8c5:	jecxz  0x41d8a3
  41d8c7:	retf   
  41d8c8:	xlat   BYTE PTR ds:[ebx]
  41d8c9:	sub    al,0x1c
  41d8cb:	dec    ecx
  41d8cc:	xchg   ebp,eax
  41d8cd:	fwait
  41d8ce:	lea    eax,[ecx+0x4253431e]
  41d8d4:	cmp    eax,ebx
  41d8d6:	cmp    ebx,DWORD PTR [ebp-0xb]
  41d8d9:	inc    eax
  41d8da:	inc    esi
  41d8db:	loop   0x41d905
  41d8dd:	jne    0x41d8d4
  41d8df:	xor    esp,edx
  41d8e1:	mov    cs,WORD PTR [edx]
  41d8e3:	sahf   
  41d8e4:	call   0xdc18f55
  41d8e9:	mov    esp,0xefe23047
  41d8ee:	(bad)  [eax]
  41d8f0:	add    dl,BYTE PTR [esp+edi*8-0x41aa8d38]
  41d8f7:	sub    cl,bh
  41d8f9:	push   0xffffff82
  41d8fb:	fsubr  st(5),st
  41d8fd:	jb     0x41d95e
  41d8ff:	sbb    BYTE PTR [ebx-0x1c],cl
  41d902:	imul   esi,DWORD PTR [ebp+0x432b0c73],0xffffff94
  41d909:	push   eax
  41d90a:	push   ebp
  41d90b:	or     al,0xad
  41d90d:	mov    ds:0x26362e2d,eax
  41d912:	xchg   esp,eax
  41d913:	mov    al,0x87
  41d915:	mov    ds:0x782401e0,al
  41d91a:	mov    al,0x9b
  41d91c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d91d:	rcr    DWORD PTR [edi+0x3b1bc6a0],cl
  41d923:	ficomp DWORD PTR [ebx-0x2868c7bd]
  41d929:	daa    
  41d92a:	enter  0x8556,0x89
  41d92e:	inc    edi
  41d92f:	adc    ecx,DWORD PTR [ecx+edi*4-0x55]
  41d933:	sub    al,0x2a
  41d935:	ins    BYTE PTR es:[edi],dx
  41d936:	xchg   esp,eax
  41d937:	push   eax
  41d938:	push   eax
  41d939:	ins    BYTE PTR es:[edi],dx
  41d93a:	xchg   ah,bl
  41d93c:	pop    edi
  41d93d:	xchg   edx,eax
  41d93e:	dec    DWORD PTR [eax+0x24d8cf7b]
  41d944:	aam    0xab
  41d946:	loope  0x41d9bf
  41d948:	sub    al,0xeb
  41d94a:	adc    al,0x5d
  41d94c:	dec    esp
  41d94d:	fmul   st,st(0)
  41d94f:	and    eax,0x261421c9
  41d954:	arpl   si,bx
  41d956:	sub    eax,0x9afe3db6
  41d95b:	inc    edi
  41d95c:	pusha  
  41d95d:	or     al,0xa5
  41d95f:	pop    ecx
  41d960:	gs sub eax,0x3c4618f6
  41d966:	fistp  WORD PTR [ebp-0x5393bd5]
  41d96c:	pop    es
  41d96d:	mov    edi,0xaaba9ad3
  41d972:	dec    esp
  41d973:	lock repz xchg edi,eax
  41d976:	sub    BYTE PTR [eax+0x2bf52589],bh
  41d97c:	push   ebp
  41d97d:	and    al,0xd4
  41d97f:	imul   esi,ebp,0xffffffe0
  41d982:	icebp  
  41d983:	inc    edx
  41d984:	jg     0x41d92d
  41d986:	mov    al,ds:0xd63bbf7c
  41d98b:	fisttp WORD PTR [ebx-0x72]
  41d98e:	(bad)  
  41d98f:	dec    esp
  41d990:	dec    eax
  41d991:	pop    edi
  41d992:	push   ds
  41d993:	cmp    dh,dl
  41d995:	cli    
  41d996:	pop    ebx
  41d997:	jns    0x41d937
  41d999:	push   eax
  41d99a:	imul   edi,DWORD PTR [edx+ebp*8+0x20],0x1e
  41d99f:	xor    DWORD PTR [esp+ebp*8+0x4d996487],eax
  41d9a6:	hlt    
  41d9a7:	pop    esi
  41d9a8:	dec    edi
  41d9a9:	ins    BYTE PTR es:[edi],dx
  41d9aa:	div    BYTE PTR ds:0xbbdda8a8
  41d9b0:	jo     0x41d98c
  41d9b2:	sbb    ch,BYTE PTR [edi+edi*4]
  41d9b5:	push   eax
  41d9b6:	daa    
  41d9b7:	cld    
  41d9b8:	xor    edi,DWORD PTR [ecx+0x5d]
  41d9bb:	xchg   ebp,eax
  41d9bc:	shr    BYTE PTR ds:0x268e95a3,cl
  41d9c2:	cmp    al,0xa
  41d9c4:	stos   DWORD PTR es:[edi],eax
  41d9c5:	je     0x41da02
  41d9c7:	jmp    0x7d:0x983f7408
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	add    BYTE PTR [eax],al
  41d9d2:	pop    esi
  41d9d3:	pop    esi
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	cmp    al,0x7c
  41d9e0:	add    esi,0x27
  41d9e3:	push   ebp
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	repz add al,0x0
  41d9e9:	add    BYTE PTR [eax+0x1fe6f98d],ch
  41d9ef:	cdq    
  41d9f0:	push   es
  41d9f1:	xchg   edx,eax
  41d9f2:	ret    
  41d9f3:	pop    edi
  41d9f4:	push   0xf39d7caf
  41d9f9:	xchg   ebp,eax
  41d9fa:	ficom  WORD PTR [esi]
  41d9fc:	xchg   edi,eax
  41d9fd:	les    esp,FWORD PTR [ebp-0x3e2cb3c]
  41da03:	and    al,BYTE PTR [eax+0x6f856fa3]
  41da09:	lods   al,BYTE PTR ds:[esi]
  41da0a:	pop    es
  41da0b:	aad    0xb3
  41da0d:	iret   
  41da0e:	imul   ebp,DWORD PTR [edi],0xffffffdf
  41da11:	add    DWORD PTR [ebx],esp
  41da13:	(bad)  
  41da14:	call   0x78eb64bb
  41da19:	add    ch,BYTE PTR [edx+ebx*8-0x315e6cb0]
  41da20:	hlt    
  41da21:	sub    DWORD PTR [ebx],ebp
  41da23:	sub    dh,dh
  41da25:	jno    0x41d9e0
  41da27:	sahf   
  41da28:	sbb    DWORD PTR [eax-0x1e],ecx
  41da2b:	dec    edx
  41da2c:	fistp  QWORD PTR [edx+0x1a14f6b6]
  41da32:	adc    al,0xdc
  41da34:	ja     0x41d9c8
  41da36:	push   edx
  41da37:	icebp  
  41da38:	adc    esi,DWORD PTR [ebx+edi*1+0x4c]
  41da3c:	dec    esp
  41da3d:	fld    QWORD PTR [eax-0x2c1b43c0]
  41da43:	fstp   QWORD PTR [edi+0x3c]
  41da46:	jmp    0xcd402905
  41da4b:	call   FWORD PTR [ebp+0x78]
  41da4e:	pop    ss
  41da4f:	pop    ecx
  41da50:	sbb    ebp,DWORD PTR [ecx+0x5db4389f]
  41da56:	inc    ebp
  41da57:	or     eax,0x8b9c8cc1
  41da5c:	mov    ah,0x12
  41da5e:	dec    esp
  41da5f:	stos   BYTE PTR es:[edi],al
  41da60:	add    edi,DWORD PTR [edi]
  41da62:	sar    DWORD PTR [edi*4+0x3765d343],cl
  41da69:	idiv   BYTE PTR [edi]
  41da6b:	addr16 push ds
  41da6d:	sub    ecx,ebp
  41da6f:	xor    al,bh
  41da71:	mov    dh,0x1e
  41da73:	lds    eax,FWORD PTR [edi]
  41da75:	pop    ss
  41da76:	mov    dh,0x2b
  41da78:	scas   al,BYTE PTR es:[edi]
  41da79:	ds mov ah,cl
  41da7c:	mov    al,0x10
  41da7e:	and    al,0x32
  41da81:	sbb    DWORD PTR [esi+0x8],ebx
  41da84:	test   eax,0x8744fb37
  41da89:	sub    eax,0x2f6f1b92
  41da8e:	sar    DWORD PTR [eax+0x4e],cl
  41da91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da92:	sub    eax,0xe1440ffc
  41da97:	lods   al,BYTE PTR ds:[esi]
  41da98:	sti    
  41da99:	dec    ebp
  41da9a:	dec    edi
  41da9b:	add    dh,BYTE PTR [eax-0x5eec1c2a]
  41daa1:	fisub  WORD PTR [ebx-0x7]
  41daa4:	pop    es
  41daa5:	inc    edi
  41daa6:	and    dl,ah
  41daa8:	sbb    BYTE PTR [ecx-0x599222d7],0x6c
  41daaf:	frstor [edi+0x4c]
  41dab2:	out    0xc7,eax
  41dab4:	xchg   ecx,eax
  41dab5:	lock inc eax
  41dab7:	sub    ebx,DWORD PTR [ebx]
  41dab9:	mov    cl,0x59
  41dabb:	mov    dl,0x76
  41dabd:	in     al,dx
  41dabe:	xchg   esi,eax
  41dabf:	scas   eax,DWORD PTR es:[edi]
  41dac0:	push   ebp
  41dac1:	adc    DWORD PTR [ebp-0x694f410f],ecx
  41dac7:	int3   
  41dac8:	into   
  41dac9:	and    dh,bh
  41dacb:	test   ecx,ebp
  41dacd:	inc    ebx
  41dace:	inc    edi
  41dacf:	push   esi
  41dad0:	sar    DWORD PTR [eax+0x6a096384],0xa3
  41dad7:	xchg   ebx,eax
  41dad8:	icebp  
  41dad9:	out    0x5a,eax
  41dadb:	jno    0x41db4a
  41dadd:	ins    DWORD PTR es:[edi],dx
  41dade:	inc    esp
  41dadf:	pop    ebp
  41dae0:	mov    edi,0x9be4f4cb
  41dae5:	cs call 0x94df:0x3f5e6f51
  41daed:	sub    al,0xab
  41daef:	jge    0x41dae0
  41daf1:	sub    eax,DWORD PTR [ebp+0x4d]
  41daf4:	mov    dl,al
  41daf6:	pop    esp
  41daf7:	xor    ecx,DWORD PTR [eax+0x51fd44c4]
  41dafd:	mov    ds:0x80f01588,eax
  41db02:	pop    ebx
  41db03:	rcr    BYTE PTR [eax],0x50
  41db06:	out    0xe3,eax
  41db08:	pop    ebx
  41db09:	xchg   DWORD PTR [esi+esi*8],esi
  41db0c:	(bad)  
  41db0e:	mov    edx,0x6414950a
  41db13:	adc    DWORD PTR [ecx],ebx
  41db15:	xor    esi,DWORD PTR [ebx-0x4f]
  41db18:	adc    eax,0xffed7ebc
  41db1d:	mov    al,ds:0x849e48b2
  41db22:	fistp  DWORD PTR [eax+0xe0c4d34]
  41db28:	jne    0x41db89
  41db2a:	ret    
  41db2b:	add    DWORD PTR [esi],edi
  41db2d:	not    bl
  41db2f:	(bad)  
  41db30:	dec    edx
  41db31:	mov    ebp,0x6e8af81e
  41db36:	out    0xff,eax
  41db38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db39:	call   0xff9dcd7e
  41db3e:	add    DWORD PTR [ebx+0x5e44501e],0x7
  41db45:	mov    ebp,0x93dbf7b2
  41db4a:	push   ds
  41db4b:	std    
  41db4c:	frstor [ecx-0x60f58beb]
  41db52:	scas   eax,DWORD PTR es:[edi]
  41db53:	pop    ebx
  41db54:	ficomp WORD PTR ds:0x885be75c
  41db5a:	imul   ebx,DWORD PTR [edi-0x23],0xffffff80
  41db5e:	adc    BYTE PTR [esi],bl
  41db60:	iret   
  41db61:	dec    edx
  41db62:	mov    ebp,0xbc30358a
  41db67:	sbb    edx,edi
  41db69:	(bad)  
  41db6a:	dec    esp
  41db6b:	cli    
  41db6c:	fs loope 0x41daf5
  41db6f:	adc    al,BYTE PTR [eax+ebx*2]
  41db72:	cmp    eax,0xb451f712
  41db77:	sahf   
  41db78:	pop    edi
  41db79:	xor    eax,0xfe6d8ead
  41db7e:	add    ecx,DWORD PTR [ebx-0x31]
  41db81:	fld    st(2)
  41db83:	les    esi,FWORD PTR [edx+ebx*1]
  41db86:	adc    edx,esp
  41db88:	data16 aad 0x9
  41db8b:	icebp  
  41db8c:	fs add al,0xaf
  41db8f:	add    eax,0x48765fb8
  41db94:	mov    bh,0x33
  41db96:	stc    
  41db97:	mov    bh,0x55
  41db99:	aas    
  41db9a:	mov    es,WORD PTR [edi+esi*2+0x40d46804]
  41dba1:	mov    ds:0x28523741,al
  41dba6:	cdq    
  41dba7:	int3   
  41dba8:	stos   DWORD PTR es:[edi],eax
  41dba9:	sbb    al,0x0
  41dbab:	jbe    0x41dc27
  41dbad:	and    bh,al
  41dbaf:	das    
  41dbb0:	scas   al,BYTE PTR es:[edi]
  41dbb1:	pop    edx
  41dbb2:	cmp    ch,dh
  41dbb4:	adc    ecx,DWORD PTR [eax]
  41dbb6:	lea    ecx,ds:0x163a0920
  41dbbc:	fcmove st,st(0)
  41dbbe:	inc    eax
  41dbbf:	in     al,0xe2
  41dbc1:	jg     0x41db87
  41dbc3:	stc    
  41dbc4:	mov    fs,WORD PTR [ecx-0x26]
  41dbc7:	stos   DWORD PTR es:[edi],eax
  41dbc8:	lea    esi,[ebx+eiz*2+0x5ac654ee]
  41dbcf:	inc    edi
  41dbd0:	add    al,0x7c
  41dbd2:	cli    
  41dbd3:	cmp    bh,BYTE PTR [ebx-0x2070d91]
  41dbd9:	mov    al,0xac
  41dbdb:	stos   BYTE PTR es:[edi],al
  41dbdc:	inc    eax
  41dbdd:	scas   al,BYTE PTR es:[edi]
  41dbde:	in     al,0x93
  41dbe0:	std    
  41dbe1:	ins    BYTE PTR es:[edi],dx
  41dbe2:	aam    0x9c
  41dbe4:	fwait
  41dbe5:	xor    al,0x7c
  41dbe7:	pop    eax
  41dbe8:	xchg   ebp,eax
  41dbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbea:	mov    eax,ds:0xab8c368
  41dbef:	xor    ch,BYTE PTR [ecx+0x4f]
  41dbf2:	jmp    0x41dc1a
  41dbf4:	ret    
  41dbf5:	dec    edi
  41dbf6:	loop   0x41dbff
  41dbf8:	into   
  41dbf9:	repnz inc ebp
  41dbfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbfc:	js     0x41dc0e
  41dbfe:	les    ebp,FWORD PTR [ecx]
  41dc00:	fst    DWORD PTR [ebx]
  41dc02:	jecxz  0x41dc35
  41dc04:	retf   0xa77d
  41dc07:	(bad)  
  41dc08:	mov    dh,dh
  41dc0a:	leave  
  41dc0b:	add    eax,0xe84607ab
  41dc10:	enter  0x146e,0x7b
  41dc14:	fwait
  41dc15:	sbb    DWORD PTR [ebp-0x30],esi
  41dc18:	nop
  41dc19:	mov    ds:0x39323b13,eax
  41dc1e:	sub    al,0x1b
  41dc20:	mov    bh,0xfd
  41dc22:	outs   dx,DWORD PTR ds:[esi]
  41dc23:	outs   dx,DWORD PTR ds:[esi]
  41dc24:	or     DWORD PTR [edi],edi
  41dc26:	js     0x41dc67
  41dc28:	shl    BYTE PTR [edi],cl
  41dc2a:	out    0xc2,al
  41dc2c:	xchg   esp,eax
  41dc2d:	mov    bh,0x98
  41dc2f:	xchg   BYTE PTR [edx],bh
  41dc31:	xor    al,0x1f
  41dc33:	dec    edx
  41dc34:	fs aam 0x14
  41dc37:	push   esi
  41dc38:	dec    ebx
  41dc39:	push   ds
  41dc3a:	imul   BYTE PTR [eax]
  41dc3c:	fs mov ebx,ebp
  41dc3f:	sbb    al,0x3f
  41dc41:	dec    eax
  41dc42:	add    esi,esi
  41dc44:	mov    eax,ds:0xf3e5b9ef
  41dc49:	test   BYTE PTR [esi+0x3d7cd0a1],dh
  41dc4f:	cmp    ecx,DWORD PTR [edi-0x2b231c59]
  41dc55:	jmp    0x41dc7f
  41dc57:	push   ebx
  41dc58:	dec    ecx
  41dc59:	out    0x47,eax
  41dc5b:	call   0x8633f4ec
  41dc60:	push   eax
  41dc61:	pop    ds
  41dc62:	jge    0x41dbe4
  41dc64:	xchg   esp,eax
  41dc65:	aas    
  41dc66:	leave  
  41dc67:	adc    bl,BYTE PTR [esi-0x6c]
  41dc6a:	rcl    BYTE PTR [eax+eax*1],1
  41dc6d:	fs and eax,0x63839d62
  41dc73:	and    ebp,ecx
  41dc75:	inc    eax
  41dc76:	and    al,0xa5
  41dc78:	mov    ds:0x2c1a664e,al
  41dc7d:	test   DWORD PTR [edi],ebp
  41dc7f:	dec    edx
  41dc80:	and    eax,0x966db443
  41dc85:	mov    al,ds:0x3dbaaeb7
  41dc8a:	leave  
  41dc8b:	add    DWORD PTR [esi],edx
  41dc8d:	ins    BYTE PTR es:[edi],dx
  41dc8e:	loopne 0x41dc46
  41dc90:	(bad)  
  41dc91:	pop    ebp
  41dc92:	cwde   
  41dc93:	pushf  
  41dc94:	inc    ecx
  41dc95:	lods   al,BYTE PTR ds:[esi]
  41dc96:	jp     0x41dc8d
  41dc98:	push   ecx
  41dc99:	inc    eax
  41dc9a:	push   eax
  41dc9b:	push   0x53
  41dc9d:	push   ss
  41dc9e:	ins    BYTE PTR es:[edi],dx
  41dc9f:	cmp    cl,BYTE PTR [ecx]
  41dca1:	imul   esi,DWORD PTR [ebx-0x34],0x7c
  41dca5:	in     eax,0xee
  41dca7:	sbb    dl,bh
  41dca9:	iret   
  41dcaa:	in     eax,0xae
  41dcac:	sbb    al,0x21
  41dcae:	mov    DWORD PTR [edx-0x4c92d170],esp
  41dcb4:	not    al
  41dcb6:	sbb    al,0x7f
  41dcb8:	add    eax,0xa7e60386
  41dcbd:	(bad)  [eax-0x65bc29c1]
  41dcc3:	lds    ebp,FWORD PTR [edx-0x1f53b9a8]
  41dcc9:	jb     0x41dced
  41dccb:	in     eax,0x48
  41dccd:	cmp    al,0x48
  41dccf:	in     eax,dx
  41dcd0:	dec    ecx
  41dcd1:	dec    esp
  41dcd2:	jns    0x41dc54
  41dcd4:	cmp    BYTE PTR [eax],ah
  41dcd6:	mov    ebx,0x427182f7
  41dcdb:	or     dh,BYTE PTR [eax]
  41dcdd:	jnp    0x41dd57
  41dcdf:	outs   dx,DWORD PTR fs:[esi]
  41dce1:	jbe    0x41dc8c
  41dce3:	inc    ebp
  41dce4:	xchg   esi,eax
  41dce5:	sub    al,0xef
  41dce7:	addr16 jl 0x41dd3f
  41dcea:	mov    edx,0xcf40365c
  41dcef:	dec    eax
  41dcf0:	cmp    al,0xc9
  41dcf2:	add    BYTE PTR [edi+edx*1],bh
  41dcf5:	imul   ebp,edx,0x50
  41dcf8:	idiv   edi
  41dcfa:	sub    BYTE PTR [eax],dl
  41dcfc:	push   edi
  41dcfd:	std    
  41dcfe:	ds inc esi
  41dd00:	dec    ebx
  41dd01:	bound  ecx,QWORD PTR [eax-0x39e3ac59]
  41dd07:	hlt    
  41dd08:	stos   BYTE PTR es:[edi],al
  41dd09:	in     al,0x49
  41dd0b:	and    al,0xf8
  41dd0d:	lods   al,BYTE PTR ds:[esi]
  41dd0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd0f:	jbe    0x41dd77
  41dd11:	push   0x26
  41dd13:	(bad)  
  41dd14:	into   
  41dd15:	addr16 jno 0x41dd37
  41dd18:	arpl   WORD PTR [esp+edx*4-0x1d],bp
  41dd1c:	cmc    
  41dd1d:	adc    ebx,ebp
  41dd1f:	adc    ecx,0x43
  41dd22:	mov    esp,0xfef3c419
  41dd27:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41dd29:	lods   eax,DWORD PTR ds:[esi]
  41dd2a:	pop    ebp
  41dd2b:	or     DWORD PTR ds:0xdf43442c,ecx
  41dd31:	lds    esi,FWORD PTR [edx-0x7f]
  41dd34:	gs dec edi
  41dd36:	push   cs
  41dd37:	sar    DWORD PTR [edi-0x6a42415c],0x30
  41dd3e:	data16 xlat BYTE PTR ds:[ebx]
  41dd40:	ins    BYTE PTR es:[edi],dx
  41dd41:	popf   
  41dd42:	in     al,dx
  41dd43:	or     cl,al
  41dd45:	fwait
  41dd46:	mov    ebx,0x2527204a
  41dd4b:	mov    ch,0xe5
  41dd4d:	jge    0x41dd43
  41dd4f:	idiv   BYTE PTR [ecx+0x3a6383dd]
  41dd55:	add    DWORD PTR [ecx+0x64],ecx
  41dd58:	fwait
  41dd59:	xchg   ebx,eax
  41dd5a:	jmp    0xc0f5:0x5cad7c33
  41dd61:	pop    edx
  41dd62:	xlat   BYTE PTR ds:[ebx]
  41dd63:	or     BYTE PTR [ebx],0x29
  41dd66:	enter  0xbf7c,0x2f
  41dd6a:	xor    DWORD PTR [ecx],ebp
  41dd6c:	sub    ecx,DWORD PTR [ebx+0x51]
  41dd6f:	adc    ebp,DWORD PTR [eax-0x51]
  41dd72:	push   es
  41dd73:	fbstp  TBYTE PTR [eax-0x3]
  41dd76:	test   BYTE PTR [ebx+0x2ddae25c],0x1b
  41dd7d:	stos   DWORD PTR es:[edi],eax
  41dd7e:	test   DWORD PTR [ecx-0x4c310695],esp
  41dd84:	(bad)  
  41dd85:	retf   0xe60c
  41dd88:	mov    esi,0x10b6de13
  41dd8d:	xor    BYTE PTR [eax],ch
  41dd8f:	stos   DWORD PTR es:[edi],eax
  41dd90:	lods   al,BYTE PTR ds:[esi]
  41dd91:	lahf   
  41dd92:	pop    ds
  41dd93:	in     eax,0xc5
  41dd95:	mov    ecx,0x20f01bd5
  41dd9a:	and    al,0x5a
  41dd9c:	push   eax
  41dd9d:	dec    ecx
  41dd9e:	mov    ch,0x12
  41dda0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dda1:	sub    BYTE PTR [eax],0x18
  41dda4:	lahf   
  41dda5:	sbb    ecx,DWORD PTR [ebx+0x9]
  41dda8:	mov    ds:0xa81ec098,al
  41ddad:	in     al,dx
  41ddae:	mov    al,0xe7
  41ddb0:	mov    bh,0x36
  41ddb2:	cwde   
  41ddb3:	pop    es
  41ddb4:	mov    ds:0x4eb087d7,al
  41ddb9:	lods   al,BYTE PTR ds:[esi]
  41ddba:	cmp    BYTE PTR [esi],ch
  41ddbc:	lods   al,BYTE PTR ds:[esi]
  41ddbd:	mov    esi,esi
  41ddbf:	loope  0x41ddc3
  41ddc1:	add    BYTE PTR [ebx-0x269ef10f],al
  41ddc7:	pop    es
  41ddc8:	or     cl,BYTE PTR [ebp-0x76]
  41ddcb:	fsubr  QWORD PTR [esi]
  41ddcd:	int    0xbb
  41ddcf:	int    0x7a
  41ddd1:	out    0xef,eax
  41ddd3:	pop    ss
  41ddd4:	push   ebx
  41ddd5:	(bad)  
  41ddd6:	call   0x1738b63e
  41dddb:	sub    DWORD PTR [edx-0x2f],ebp
  41ddde:	inc    esp
  41dddf:	or     DWORD PTR [edx-0x7e],ecx
  41dde2:	sub    DWORD PTR [esi+ecx*2-0xb],esp
  41dde6:	sbb    al,bl
  41dde8:	inc    esi
  41dde9:	lods   eax,DWORD PTR ds:[esi]
  41ddea:	cmc    
  41ddeb:	loopne 0x41dded
  41dded:	jns    0x41dde4
  41ddef:	inc    edx
  41ddf0:	push   0x59
  41ddf2:	rol    DWORD PTR ds:0xc52d8f31,0x64
  41ddf9:	aaa    
  41ddfa:	and    eax,0x438546a5
  41ddff:	pop    esi
  41de00:	imul   edx,DWORD PTR [edi+0x60],0x14
  41de04:	or     eax,0x7df24b5e
  41de09:	loop   0x41de77
  41de0b:	xchg   ebx,eax
  41de0c:	not    ebp
  41de0e:	(bad)  
  41de0f:	popa   
  41de10:	arpl   WORD PTR [eax+0x42],bp
  41de13:	jecxz  0x41de7b
  41de15:	sub    BYTE PTR [eax+0x1b],0x51
  41de19:	or     DWORD PTR [esi-0x47],ecx
  41de1c:	mov    cl,0xc1
  41de1e:	retf   0x3c0b
  41de21:	add    eax,0xa52b2fec
  41de26:	xor    dh,BYTE PTR [esp+esi*8]
  41de29:	push   edx
  41de2a:	outs   dx,DWORD PTR ds:[esi]
  41de2b:	hlt    
  41de2c:	fld    DWORD PTR [edi+ebx*8]
  41de2f:	adc    eax,0x6c5d685a
  41de34:	loope  0x41ddd6
  41de36:	(bad)  
  41de37:	mov    edi,0x5b937582
  41de3c:	aam    0xd9
  41de3e:	shl    BYTE PTR [edi*1+0x291f5599],1
  41de45:	cmc    
  41de46:	add    cl,bh
  41de48:	stc    
  41de49:	call   0xfb679b07
  41de4e:	mov    edx,0x14d17d78
  41de53:	and    al,0x9a
  41de55:	xchg   ecx,eax
  41de56:	cmc    
  41de57:	in     eax,dx
  41de58:	cmp    al,0xcf
  41de5a:	push   cs
  41de5b:	mov    ch,0x6
  41de5d:	mov    ebp,0xffb92ebf
  41de62:	ret    0x5027
  41de65:	outs   dx,DWORD PTR ds:[esi]
  41de66:	jg     0x41ddf7
  41de68:	sbb    DWORD PTR [edx+edx*8+0xc],ecx
  41de6c:	add    eax,0x1afa8467
  41de71:	jbe    0x41de55
  41de73:	mov    ds:0xc80ec2e,al
  41de78:	xchg   edi,eax
  41de79:	inc    edx
  41de7a:	mov    cl,0xc7
  41de7c:	xor    cl,bh
  41de7e:	loope  0x41defa
  41de80:	push   0xfffffff7
  41de82:	cmp    BYTE PTR [ecx+0x744ba0f6],dl
  41de88:	inc    edx
  41de89:	pop    es
  41de8a:	lods   eax,DWORD PTR ds:[esi]
  41de8b:	push   0x66dadc36
  41de90:	inc    esi
  41de91:	sbb    ah,dl
  41de93:	in     al,dx
  41de94:	sub    ecx,DWORD PTR [edi]
  41de96:	push   ebx
  41de97:	ins    BYTE PTR es:[edi],dx
  41de98:	mov    ah,BYTE PTR [eax+0x2479ae06]
  41de9e:	aad    0x2
  41dea0:	adc    ebp,DWORD PTR [esi+0x460c334a]
  41dea6:	and    edx,DWORD PTR [ecx]
  41dea8:	xor    ebx,eax
  41deaa:	mov    bl,0x5d
  41deac:	cmc    
  41dead:	push   edi
  41deae:	xlat   BYTE PTR ds:[ebx]
  41deaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deb0:	adc    dl,BYTE PTR [eax]
  41deb2:	sbb    eax,0x1695d5cb
  41deb7:	mov    cl,0x3f
  41deb9:	jne    0x41deba
  41debb:	inc    eax
  41debc:	and    BYTE PTR [edi-0x79],0xae
  41dec0:	adc    ah,ah
  41dec2:	inc    ecx
  41dec3:	and    dl,bl
  41dec5:	jb     0x41deb5
  41dec7:	dec    DWORD PTR [edi]
  41dec9:	leave  
  41deca:	jmp    0xe03b078d
  41decf:	mov    cl,0x96
  41ded1:	cmp    DWORD PTR [ebx],ecx
  41ded3:	xor    bh,al
  41ded5:	inc    esi
  41ded6:	sub    DWORD PTR [edi],edx
  41ded8:	cld    
  41ded9:	push   es
  41deda:	aaa    
  41dedb:	je     0x41dea7
  41dedd:	add    BYTE PTR [eax],al
  41dedf:	add    BYTE PTR [eax],al
  41dee1:	add    cl,ah
  41dee3:	test   BYTE PTR [esi-0x80d1810],al
  41dee9:	xchg   ebp,eax
  41deea:	and    DWORD PTR [eax],eax
  41deec:	cmp    ebx,edx
  41deee:	pop    ebp
  41deef:	add    DWORD PTR [ebx],edi
  41def1:	rcr    BYTE PTR [edx],cl
  41def3:	pop    edx
  41def4:	add    DWORD PTR [eax],eax
  41def6:	repz add al,0x0
  41def9:	add    BYTE PTR [edx+0x588899a2],dh
  41deff:	push   cs
  41df00:	sub    eax,0xf70c5d9
  41df05:	inc    edx
  41df06:	dec    eax
  41df07:	loop   0x41debe
  41df09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df0a:	mov    ecx,0xc5746375
  41df0f:	sti    
  41df10:	lods   al,BYTE PTR ds:[esi]
  41df11:	or     dl,bl
  41df13:	dec    ebx
  41df14:	adc    al,BYTE PTR [edi]
  41df16:	outs   dx,DWORD PTR ds:[esi]
  41df17:	jmp    0xfe81:0x5e733141
  41df1e:	or     ah,dh
  41df20:	or     BYTE PTR [eax],0xd4
  41df23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df24:	retf   
  41df25:	retf   0x3ba0
  41df28:	popf   
  41df29:	addr16 jle 0x41df9c
  41df2c:	add    bl,0x3f
  41df2f:	xor    BYTE PTR [edi+0x11],bh
  41df32:	push   esi
  41df33:	sbb    al,0x7b
  41df35:	sbb    esp,DWORD PTR [ebx-0x68]
  41df38:	mov    bl,0x47
  41df3a:	mov    esi,0x1c82398f
  41df3f:	in     eax,dx
  41df40:	and    dh,al
  41df42:	mov    DWORD PTR [ecx-0x3f],ebx
  41df45:	rol    dh,0xd6
  41df48:	lahf   
  41df49:	or     al,0xc1
  41df4b:	adc    eax,esi
  41df4d:	jg     0x41df24
  41df4f:	inc    esp
  41df50:	jbe    0x41df1b
  41df52:	dec    edx
  41df53:	mov    eax,ds:0x36dc4fb6
  41df58:	mov    ds:0x266b879f,al
  41df5d:	retf   0x3343
  41df60:	sbb    BYTE PTR [ebx+0x77f0ab36],0x3e
  41df67:	adc    eax,0xf4132c4f
  41df6c:	rcl    BYTE PTR [ecx+esi*1-0x66d591de],cl
  41df73:	inc    esi
  41df74:	lea    ebx,[esi+0x5d608b96]
  41df7a:	ins    DWORD PTR es:[edi],dx
  41df7b:	int    0x72
  41df7d:	int3   
  41df7e:	fwait
  41df7f:	sub    BYTE PTR [ebx],0x68
  41df82:	mov    eax,0x9794f041
  41df87:	dec    ebx
  41df88:	outs   dx,BYTE PTR ds:[esi]
  41df89:	arpl   WORD PTR [esi],ax
  41df8b:	inc    edi
  41df8c:	mov    eax,ds:0x36f859f7
  41df91:	jo     0x41dfb9
  41df93:	pop    ds
  41df94:	sti    
  41df95:	dec    edi
  41df96:	or     eax,0xc986d090
  41df9b:	sbb    bl,BYTE PTR es:[ebx]
  41df9e:	jae    0x41df34
  41dfa0:	sub    DWORD PTR [esi-0x46],edx
  41dfa3:	sbb    al,0x67
  41dfa5:	das    
  41dfa6:	std    
  41dfa7:	cdq    
  41dfa8:	es hlt 
  41dfaa:	aas    
  41dfab:	jp     0x41df31
  41dfad:	inc    edi
  41dfae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfaf:	fcmovnbe st,st(7)
  41dfb1:	icebp  
  41dfb2:	jecxz  0x41df5d
  41dfb4:	or     BYTE PTR [ecx+0x2fd78feb],dh
  41dfba:	je     0x41dfb0
  41dfbc:	or     ah,BYTE PTR [edx]
  41dfbe:	call   FWORD PTR [edx-0x69]
  41dfc1:	sub    esi,DWORD PTR [eax+0x15]
  41dfc4:	gs int3 
  41dfc6:	dec    eax
  41dfc7:	dec    esp
  41dfc8:	popf   
  41dfc9:	retf   0x947d
  41dfcc:	fbstp  TBYTE PTR [eax]
  41dfce:	add    ah,BYTE PTR [esi]
  41dfd0:	add    DWORD PTR [eax+0x1a8c2497],ebx
  41dfd6:	xchg   BYTE PTR [esi+0xe],bh
  41dfd9:	fwait
  41dfda:	and    ebp,ecx
  41dfdc:	inc    edi
  41dfdd:	pushf  
  41dfde:	xor    ah,bh
  41dfe0:	jmp    0x53ec129
  41dfe5:	push   ss
  41dfe6:	int    0x64
  41dfe8:	popa   
  41dfe9:	inc    esp
  41dfea:	mov    BYTE PTR [eax-0x7e103812],dh
  41dff0:	dec    eax
  41dff1:	cmp    BYTE PTR [ebx],al
  41dff3:	pop    edx
  41dff4:	dec    esp
  41dff5:	repnz inc ebx
  41dff7:	push   ebx
  41dff8:	les    edi,FWORD PTR fs:[ebx]
  41dffb:	shl    BYTE PTR [edi],cl
  41dffd:	or     ecx,esi
  41dfff:	xor    al,0x80
  41e001:	push   esp
  41e002:	xor    ebp,DWORD PTR [edi-0x38]
  41e005:	test   al,0xcf
  41e007:	fsubr  QWORD PTR [di+0x68]
  41e00b:	aas    
  41e00c:	adc    BYTE PTR [ecx-0x77f8802b],bl
  41e012:	pop    ds
  41e013:	cdq    
  41e014:	fdiv   st(6),st
  41e016:	jle    0x41dfb4
  41e018:	loop   0x41dfe5
  41e01a:	cdq    
  41e01b:	cs fcmovnbe st,st(3)
  41e01e:	mov    ?,WORD PTR [ebp-0x4db53237]
  41e024:	xor    DWORD PTR [ebx-0x692ac07],edx
  41e02a:	sbb    eax,0x3da7e18f
  41e02f:	cmp    ch,BYTE PTR [edi+eiz*1+0x35]
  41e033:	inc    ecx
  41e034:	daa    
  41e035:	stos   BYTE PTR es:[edi],al
  41e036:	jg     0x41dfe4
  41e038:	shr    BYTE PTR [ebx],cl
  41e03a:	mov    al,ds:0xd55e1a0f
  41e03f:	mov    edx,0x88fa538d
  41e044:	cs pop ss
  41e046:	ret    
  41e047:	retf   0xcc2b
  41e04a:	jno    0x41e073
  41e04c:	mov    DWORD PTR [esi+0x21],eax
  41e04f:	or     bl,BYTE PTR [edi-0x5e]
  41e052:	add    DWORD PTR [edi],ebx
  41e054:	or     al,0x9
  41e056:	es pusha 
  41e058:	(bad)  
  41e05a:	adc    BYTE PTR [ecx-0x23113d60],0x83
  41e061:	lods   eax,DWORD PTR ds:[esi]
  41e062:	lods   eax,DWORD PTR ds:[esi]
  41e063:	repnz xchg ecx,eax
  41e065:	pop    ebp
  41e066:	fs add bh,bh
  41e069:	jp     0x41e0b4
  41e06b:	pop    ecx
  41e06c:	fmulp  st(1),st
  41e06e:	push   ds
  41e06f:	jbe    0x41e096
  41e071:	add    al,0xbf
  41e073:	cmp    eax,DWORD PTR [edx]
  41e075:	and    edx,esi
  41e077:	lock xor al,0xa6
  41e07a:	xchg   ebx,eax
  41e07b:	lods   al,BYTE PTR ds:[esi]
  41e07c:	push   cs
  41e07d:	sahf   
  41e07e:	aad    0x98
  41e080:	push   es
  41e081:	shl    DWORD PTR [ebp+0xc],1
  41e084:	pop    esp
  41e085:	in     eax,dx
  41e086:	mov    ecx,0x2f0b39f9
  41e08b:	pop    es
  41e08c:	sbb    DWORD PTR [esi],ebp
  41e08e:	xor    al,0xaa
  41e090:	lahf   
  41e091:	dec    eax
  41e092:	jle    0x41e0c8
  41e094:	sbb    BYTE PTR [edx],dl
  41e096:	test   al,0x9
  41e098:	dec    esp
  41e099:	mov    esi,DWORD PTR [edx+edx*2]
  41e09c:	sbb    DWORD PTR [eax-0x357302e4],0xa0086ffe
  41e0a6:	mov    es,WORD PTR [ecx]
  41e0a8:	int    0x1c
  41e0aa:	or     DWORD PTR [ecx-0x65],0xbcb16c4b
  41e0b1:	xor    eax,0x826d4165
  41e0b6:	std    
  41e0b7:	pop    ecx
  41e0b8:	sahf   
  41e0b9:	push   eax
  41e0ba:	push   esi
  41e0bb:	(bad)  
  41e0bc:	or     al,BYTE PTR [eax]
  41e0be:	dec    DWORD PTR [edi+0x70]
  41e0c1:	test   al,0x95
  41e0c3:	jecxz  0x41e12d
  41e0c5:	fdivr  DWORD PTR ds:[edx+0xebe8015]
  41e0cc:	pop    ds
  41e0cd:	xor    al,0x5a
  41e0cf:	sbb    esi,DWORD PTR [ebx-0x76c4ef36]
  41e0d5:	das    
  41e0d6:	lds    ebx,FWORD PTR [edx-0x6b15715c]
  41e0dc:	sub    ebp,DWORD PTR [ebx]
  41e0de:	popa   
  41e0df:	sub    BYTE PTR [ecx+0x16],al
  41e0e2:	push   es
  41e0e3:	pop    ebp
  41e0e4:	rcr    BYTE PTR [esi-0x11],1
  41e0e7:	xchg   ecx,eax
  41e0e8:	xor    DWORD PTR ds:0x2d738c6c,esp
  41e0ee:	test   DWORD PTR [edx-0x18],eax
  41e0f1:	cmp    esi,esp
  41e0f3:	jbe    0x41e105
  41e0f5:	in     eax,0x17
  41e0f7:	cmp    BYTE PTR es:[edx],al
  41e0fa:	add    DWORD PTR [si],esi
  41e0fd:	dec    edi
  41e0fe:	xchg   esi,eax
  41e0ff:	cmp    DWORD PTR [esi-0x54],0x286ed048
  41e106:	es scas eax,DWORD PTR es:[edi]
  41e108:	enter  0xeaf5,0x80
  41e10c:	push   edi
  41e10d:	test   dl,bl
  41e10f:	mov    al,0x5d
  41e111:	pop    ds
  41e112:	mov    cl,0x8
  41e114:	ror    DWORD PTR [esi-0x33],1
  41e117:	sbb    ah,BYTE PTR [ebx]
  41e119:	and    ecx,esp
  41e11b:	mov    ebp,0xb761ffe9
  41e120:	ja     0x41e13e
  41e122:	bound  esi,QWORD PTR [edi+0x3ec19b0]
  41e128:	inc    edx
  41e129:	scas   eax,DWORD PTR es:[edi]
  41e12a:	and    eax,0xae90892
  41e12f:	call   FWORD PTR [edi+0xf]
  41e132:	mov    ah,0x46
  41e134:	push   cs
  41e135:	sub    dh,dh
  41e137:	push   edx
  41e138:	pushf  
  41e139:	push   cs
  41e13a:	hlt    
  41e13b:	fld    TBYTE PTR [ebx]
  41e13d:	lock cwde 
  41e13f:	ja     0x41e129
  41e141:	mov    cl,0x78
  41e143:	in     eax,dx
  41e144:	dec    ebx
  41e145:	in     al,0xb7
  41e147:	push   0xffffffdc
  41e149:	pop    esi
  41e14a:	pusha  
  41e14b:	rcr    ch,1
  41e14d:	xor    al,0xbf
  41e14f:	pop    es
  41e150:	iret   
  41e151:	cdq    
  41e152:	and    BYTE PTR [ecx-0x1a],bh
  41e155:	(bad)  
  41e156:	fnstcw WORD PTR [eax]
  41e158:	imul   ebp,eax,0xffffff8a
  41e15b:	mov    dl,0xe6
  41e15d:	cmp    BYTE PTR [ebx-0x2e53d17e],bh
  41e163:	jle    0x41e111
  41e165:	cwde   
  41e166:	jno    0x41e15a
  41e168:	or     ch,BYTE PTR [eax]
  41e16a:	dec    ecx
  41e16b:	lea    eax,[edi]
  41e16d:	dec    esi
  41e16e:	scas   al,BYTE PTR es:[edi]
  41e16f:	sub    al,0xab
  41e171:	test   eax,0xbdd00ab2
  41e176:	mov    edx,0x2d737c1b
  41e17b:	add    bh,al
  41e17d:	std    
  41e17e:	mov    ch,BYTE PTR [ecx+0x7b]
  41e181:	xor    eax,0xe02d8e5d
  41e186:	loopne 0x41e204
  41e188:	sub    BYTE PTR [edi+0x60],dl
  41e18b:	in     eax,dx
  41e18c:	jae    0x41e194
  41e18e:	adc    al,0x9e
  41e190:	or     al,0xac
  41e192:	repz push ebp
  41e194:	xchg   DWORD PTR [ecx],edi
  41e196:	add    al,BYTE PTR [ecx-0x32b5879c]
  41e19c:	jmp    0x54bcffbc
  41e1a1:	jb     0x41e20d
  41e1a3:	imul   eax,DWORD PTR [edx-0x70],0xffffffa6
  41e1a7:	inc    edi
  41e1a8:	loopne 0x41e1cc
  41e1aa:	xchg   DWORD PTR [eax-0x1a8ae9b0],edx
  41e1b0:	ss jle 0x41e162
  41e1b3:	add    BYTE PTR [ebp-0x47],ch
  41e1b6:	sub    DWORD PTR ds:0x24123d16,esi
  41e1bc:	or     eax,0x8f7c979
  41e1c1:	loopne 0x41e168
  41e1c3:	aas    
  41e1c4:	sub    dh,ch
  41e1c6:	adc    bl,ah
  41e1c8:	data16 adc al,0x1a
  41e1cb:	rol    BYTE PTR [edx-0x1cba615],cl
  41e1d1:	gs cwde 
  41e1d3:	shl    DWORD PTR [edi],cl
  41e1d5:	aad    0x20
  41e1d7:	mov    ecx,0xf92a597f
  41e1dc:	mov    edi,?
  41e1de:	and    eax,0xfbf4768a
  41e1e3:	scas   eax,DWORD PTR es:[edi]
  41e1e4:	sub    dh,BYTE PTR [ebx+0x49cca6a2]
  41e1ea:	adc    eax,0x3527aab8
  41e1ef:	popa   
  41e1f0:	inc    ecx
  41e1f1:	mov    eax,ds:0x953dbefb
  41e1f6:	push   eax
  41e1f7:	pop    esp
  41e1f8:	idiv   BYTE PTR [esi-0x74]
  41e1fb:	jae    0x41e255
  41e1fd:	or     BYTE PTR ds:0x2f2fb1b2,0xa1
  41e204:	rcl    edi,1
  41e206:	pop    esp
  41e207:	fisttp QWORD PTR [edi]
  41e209:	fisttp DWORD PTR [ebx-0x1e8c9a6b]
  41e20f:	pop    es
  41e210:	mov    DWORD PTR [edi+esi*1],edx
  41e213:	(bad)  
  41e214:	push   ecx
  41e215:	xor    ax,0xa945
  41e219:	inc    ebx
  41e21a:	mov    edx,0x16c88914
  41e21f:	sbb    dl,cl
  41e221:	out    dx,eax
  41e222:	sub    BYTE PTR [edi],cl
  41e224:	mov    edi,0x43ac5d70
  41e229:	sub    cl,BYTE PTR [ebx+ebx*4+0x6c]
  41e22d:	or     al,0x12
  41e22f:	add    BYTE PTR [ebx],0xcd
  41e232:	mov    edi,ecx
  41e234:	sahf   
  41e235:	push   edi
  41e236:	stos   DWORD PTR es:[edi],eax
  41e237:	test   al,0x67
  41e239:	xchg   edx,eax
  41e23a:	retf   0xa2d0
  41e23d:	xlat   BYTE PTR ds:[ebx]
  41e23e:	iret   
  41e23f:	sub    ebx,ebp
  41e241:	icebp  
  41e242:	fidiv  WORD PTR [ebx]
  41e244:	push   ds
  41e245:	les    edi,FWORD PTR [edi]
  41e247:	jge    0x41e24b
  41e249:	inc    esp
  41e24a:	je     0x41e229
  41e24c:	aam    0xd1
  41e24e:	int3   
  41e24f:	push   ebx
  41e250:	bound  eax,QWORD PTR [ebp+0x2f621607]
  41e256:	es jbe 0x41e23e
  41e259:	mov    edx,0x78d201cb
  41e25e:	mov    al,ds:0x8906547c
  41e263:	pusha  
  41e264:	mov    ds:0x909a99a9,al
  41e269:	and    eax,0x622f9b56
  41e26e:	outs   dx,BYTE PTR ds:[esi]
  41e26f:	jb     0x41e257
  41e271:	cdq    
  41e272:	pop    ds
  41e273:	jge    0x41e2e9
  41e275:	ficomp WORD PTR [esi]
  41e277:	in     al,0x5b
  41e279:	outs   dx,BYTE PTR ds:[esi]
  41e27a:	in     eax,0x26
  41e27c:	mov    ecx,0xfb074426
  41e281:	sub    al,0xa9
  41e283:	in     eax,dx
  41e284:	add    ebx,edx
  41e286:	adc    BYTE PTR [esi+0x79],ah
  41e289:	rcl    ebx,0x9c
  41e28c:	fidiv  WORD PTR [edi+0x1d]
  41e28f:	retf   0x34a1
  41e292:	mov    dl,0x98
  41e294:	clc    
  41e295:	mov    esi,0xe644f886
  41e29a:	retf   0x9594
  41e29d:	sub    ebp,DWORD PTR gs:[esp+ebx*1]
  41e2a1:	inc    ecx
  41e2a2:	add    bh,BYTE PTR [edi+0x4b0920ea]
  41e2a8:	out    dx,al
  41e2a9:	xor    al,0xa2
  41e2ac:	or     DWORD PTR [ebx+0x61],esi
  41e2af:	in     eax,dx
  41e2b0:	pop    edx
  41e2b1:	(bad)  
  41e2b2:	jnp    0x41e250
  41e2b4:	dec    eax
  41e2b5:	mov    edx,0x370913c
  41e2ba:	cmc    
  41e2bb:	div    DWORD PTR [ecx+0x3c]
  41e2be:	call   0x11b9:0x382b90ce
  41e2c5:	fld    TBYTE PTR [eax+0x5430c91b]
  41e2cb:	cmp    dl,dl
  41e2cd:	push   ecx
  41e2ce:	int3   
  41e2cf:	or     ax,0x12fb
  41e2d3:	mov    ds:0xd4e44661,eax
  41e2d8:	cmp    BYTE PTR ss:[ebx+0x17],cl
  41e2dc:	dec    eax
  41e2dd:	and    DWORD PTR [esi-0x7401e120],0xd351fdcc
  41e2e7:	lds    ecx,FWORD PTR [eax-0x4d]
  41e2ea:	mov    edi,0xd34e2539
  41e2ef:	int    0xd1
  41e2f1:	lahf   
  41e2f2:	repz xlat BYTE PTR ds:[ebx]
  41e2f4:	call   0x714c:0x7ff6e86d
  41e2fb:	sub    BYTE PTR [edi+0xe98ad69],dl
  41e301:	sahf   
  41e302:	sub    al,0x56
  41e304:	mov    dh,0xcb
  41e306:	test   BYTE PTR [ebx+0xcee1d62],dh
  41e30c:	nop
  41e30d:	mov    esi,0xc086e93b
  41e312:	nop
  41e313:	xchg   esp,eax
  41e314:	lds    ebx,FWORD PTR [esi+0x7dd672a4]
  41e31a:	add    eax,0x8046c721
  41e31f:	mov    bh,al
  41e321:	mov    edx,esi
  41e323:	lods   eax,DWORD PTR ds:[esi]
  41e324:	jbe    0x41e39c
  41e326:	and    DWORD PTR [ebx],0xb5787ab4
  41e32c:	call   0x2dcf:0x76aabcbd
  41e333:	call   0x1f9fafde
  41e338:	imul   edx,esi,0xffffff95
  41e33b:	adc    bh,BYTE PTR [esi-0x2ea34f58]
  41e341:	rol    ecx,1
  41e343:	prefetch BYTE PTR [eax+0x28]
  41e347:	loop   0x41e384
  41e349:	xor    ah,BYTE PTR [ebx]
  41e34b:	mov    esp,0x88b2c598
  41e350:	sub    edi,eax
  41e352:	push   cs
  41e353:	int    0x2d
  41e355:	or     dl,BYTE PTR [eax-0x22]
  41e358:	retf   
  41e359:	and    eax,DWORD PTR [edi]
  41e35b:	fs cmc 
  41e35d:	inc    eax
  41e35e:	stos   BYTE PTR es:[edi],al
  41e35f:	or     DWORD PTR [edx-0x7615b5],ebp
  41e365:	repz dec esi
  41e367:	add    DWORD PTR [ecx-0x3c1d79dc],edx
  41e36d:	test   eax,0xa4ab813
  41e372:	jb     0x41e326
  41e374:	and    eax,0xea6ab587
  41e379:	lods   al,BYTE PTR ds:[esi]
  41e37a:	jl     0x41e3d8
  41e37c:	ror    DWORD PTR [eax+0x9],0xcf
  41e380:	jae    0x41e3f6
  41e382:	inc    eax
  41e383:	inc    ebx
  41e384:	pop    esi
  41e385:	dec    ecx
  41e386:	cmp    ebx,DWORD PTR [edx+eiz*4]
  41e389:	cdq    
  41e38a:	cmp    al,0x7e
  41e38c:	pmuludq mm7,mm4
  41e38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e390:	aaa    
  41e391:	xor    ebx,DWORD PTR [edx]
  41e393:	jg     0x41e3eb
  41e395:	test   DWORD PTR [ebx+ebx*4+0x3ab4613f],0x122abb0c
  41e3a0:	outs   dx,DWORD PTR ds:[esi]
  41e3a1:	dec    eax
  41e3a2:	sar    BYTE PTR [edi],1
  41e3a4:	mov    dl,0xb7
  41e3a6:	jl     0x41e3d1
  41e3a8:	adc    ebp,esi
  41e3aa:	(bad)  
  41e3ab:	push   edi
  41e3ac:	cmp    BYTE PTR [ecx+0x6dafd1b2],0x94
  41e3b3:	sbb    bh,dl
  41e3b5:	(bad)  
  41e3b6:	sub    ah,dh
  41e3b8:	xchg   ebx,eax
  41e3b9:	repz xor al,0x25
  41e3bc:	fisub  WORD PTR [ecx+0x37]
  41e3bf:	arpl   WORD PTR [edx],ax
  41e3c1:	mov    BYTE PTR [ebx],bh
  41e3c3:	push   ss
  41e3c4:	(bad)  [ebp+0x4700568d]
  41e3ca:	gs push edx
  41e3cc:	add    ebx,DWORD PTR [ecx+ebx*4+0x68]
  41e3d0:	ja     0x41e433
  41e3d2:	addr16 popf 
  41e3d4:	inc    ebx
  41e3d5:	mov    al,ds:0xf820b676
  41e3da:	xchg   esp,eax
  41e3db:	ja     0x41e3fd
  41e3dd:	mov    dh,0x35
  41e3df:	fld    DWORD PTR [esi+0x7ca39052]
  41e3e5:	inc    ebp
  41e3e6:	je     0x41e3db
  41e3e8:	push   ebp
  41e3e9:	mov    esp,0x5cc1cd
  41e3ee:	add    BYTE PTR [eax],al
  41e3f0:	add    BYTE PTR [eax],al
  41e3f2:	add    al,0xf8
  41e3f5:	and    eax,edi
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0x76ecfc94
  41e400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e401:	lock or eax,0xf300015f
  41e407:	add    al,0x0
  41e409:	add    BYTE PTR [ecx+ebx*2+0x33],bh
  41e40d:	icebp  
  41e40e:	add    al,0x34
  41e410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e411:	mov    al,ds:0x89941313
  41e416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e417:	push   ss
  41e418:	inc    edi
  41e419:	ror    eax,cl
  41e41b:	inc    edx
  41e41c:	jge    0x41e48a
  41e41e:	sub    edi,DWORD PTR [edi-0x62]
  41e421:	dec    eax
  41e422:	fisubr WORD PTR [ecx+0x51d0eac6]
  41e428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e429:	in     al,0xd1
  41e42b:	pop    eax
  41e42c:	xor    DWORD PTR [esi+ebp*2-0x7fc359da],0x4c
  41e434:	mov    cs,WORD PTR [eax]
  41e436:	dec    ecx
  41e437:	and    eax,0x385400ae
  41e43c:	inc    eax
  41e43d:	jbe    0x41e3e5
  41e43f:	inc    eax
  41e440:	push   ecx
  41e441:	arpl   WORD PTR [edi-0x3e],di
  41e444:	ja     0x41e454
  41e446:	inc    esp
  41e447:	dec    edi
  41e448:	mov    edi,0x777f2399
  41e44d:	sub    BYTE PTR [eax],0xb5
  41e450:	and    ebx,DWORD PTR [eax-0x51]
  41e453:	jno    0x41e473
  41e455:	pop    eax
  41e456:	clc    
  41e457:	sbb    al,bl
  41e459:	inc    ebx
  41e45a:	xchg   ebx,eax
  41e45b:	outs   dx,BYTE PTR ds:[esi]
  41e45c:	jne    0x41e4cf
  41e45e:	push   es
  41e45f:	in     al,0xae
  41e461:	fwait
  41e462:	push   ebx
  41e463:	pop    es
  41e464:	push   edx
  41e465:	idiv   dl
  41e467:	xchg   esp,eax
  41e468:	ret    
  41e469:	mov    es,WORD PTR [edx+0x56]
  41e46c:	sbb    eax,0x206b482f
  41e471:	leave  
  41e472:	imul   ecx,DWORD PTR [edx],0xffffff80
  41e475:	hlt    
  41e476:	cld    
  41e477:	mov    dl,0xf6
  41e479:	pop    ebp
  41e47a:	fidiv  WORD PTR ds:0x739f2236
  41e480:	jg     0x41e43c
  41e482:	xor    eax,0xb30f1e81
  41e487:	xlat   BYTE PTR ds:[ebx]
  41e488:	or     eax,DWORD PTR [ecx+0x68]
  41e48b:	dec    ebp
  41e48c:	mov    ds,WORD PTR [ebp-0x238f41c6]
  41e492:	repnz xor al,0x32
  41e495:	(bad)  
  41e496:	mov    dl,0xf1
  41e498:	mov    ah,0xca
  41e49a:	sub    DWORD PTR [ebx+eiz*1-0x4a1df5d8],ecx
  41e4a1:	jmp    FWORD PTR [esi]
  41e4a3:	pop    edi
  41e4a4:	inc    esp
  41e4a5:	dec    esi
  41e4a6:	aad    0xf5
  41e4a8:	fcomi  st,st(7)
  41e4aa:	jmp    0xf1a0:0x34a10e4e
  41e4b1:	mov    WORD PTR [ecx+0xe7bf0bf],es
  41e4b7:	sti    
  41e4b8:	sar    DWORD PTR [ecx+0x6869e55b],cl
  41e4be:	adc    cl,BYTE PTR [edx]
  41e4c0:	das    
  41e4c1:	and    ch,BYTE PTR [eax]
  41e4c3:	adc    DWORD PTR [esi],0xaf47fa8f
  41e4c9:	jae    0x41e4b2
  41e4cb:	out    dx,al
  41e4cc:	push   ebx
  41e4cd:	dec    esp
  41e4ce:	cld    
  41e4cf:	frstor [ebx+0x302079b]
  41e4d5:	xchg   dx,ax
  41e4d7:	lock shr DWORD PTR [ecx+0x41219f5],1
  41e4de:	hlt    
  41e4df:	out    dx,eax
  41e4e0:	push   ss
  41e4e1:	add    DWORD PTR [ebp+0x44],ecx
  41e4e4:	imul   esp,DWORD PTR [ecx-0x762da4e6],0x5a1765a6
  41e4ee:	mov    dl,BYTE PTR [edx]
  41e4f0:	push   0x91159b5e
  41e4f5:	jmp    0xbeaa:0x362cfbae
  41e4fc:	add    al,0xaf
  41e4fe:	dec    edi
  41e4ff:	(bad)  
  41e500:	in     eax,0x5
  41e502:	jne    0x41e517
  41e504:	fdiv   DWORD PTR ds:0x97c55708
  41e50a:	(bad)  
  41e50b:	rcl    BYTE PTR [esi],1
  41e50d:	pop    ecx
  41e50e:	idiv   DWORD PTR [edi]
  41e510:	repz sub al,bl
  41e513:	mov    ecx,eax
  41e515:	mul    DWORD PTR [edx-0xa]
  41e518:	repz pop eax
  41e51a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e51b:	inc    esp
  41e51c:	pop    ebp
  41e51d:	mov    DWORD PTR [edi-0x52],ebp
  41e520:	mov    dh,0x48
  41e522:	mov    eax,0x308eac24
  41e527:	es cmp BYTE PTR gs:[ebx],cl
  41e52b:	dec    edx
  41e52c:	or     eax,0x114b9a3e
  41e531:	lods   eax,DWORD PTR ds:[esi]
  41e532:	push   ds
  41e533:	sbb    ecx,DWORD PTR [ebx-0x6c]
  41e536:	into   
  41e537:	shl    esi,cl
  41e539:	das    
  41e53a:	inc    edi
  41e53b:	mov    ecx,0x85d643ce
  41e540:	icebp  
  41e541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e542:	mov    eax,0xe9f194ba
  41e547:	ins    DWORD PTR es:[edi],dx
  41e548:	xchg   ecx,eax
  41e549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e54a:	jns    0x41e525
  41e54c:	and    eax,0x70d790be
  41e551:	fyl2x  
  41e553:	xchg   DWORD PTR [ebp+0x39f1cf45],ecx
  41e559:	dec    edx
  41e55a:	mov    dh,0xbc
  41e55c:	push   ecx
  41e55d:	sub    ebx,DWORD PTR [edx+0x27]
  41e560:	popa   
  41e561:	sbb    al,0x4e
  41e563:	xchg   ebx,eax
  41e564:	or     eax,0xabf84a3d
  41e569:	cmp    al,0x65
  41e56b:	mov    ah,0x1c
  41e56d:	clc    
  41e56e:	xor    eax,0x4182f060
  41e573:	(bad)  
  41e574:	out    0xc8,eax
  41e576:	mov    ebx,0x370b963f
  41e57b:	jp     0x41e545
  41e57d:	int3   
  41e57e:	add    DWORD PTR [ebx],0x28
  41e581:	fucomip st,st(6)
  41e583:	xchg   esp,eax
  41e584:	add    ebp,DWORD PTR [di+0x70]
  41e588:	ins    BYTE PTR es:[edi],dx
  41e589:	nop
  41e58a:	mov    edx,esi
  41e58c:	jne    0x41e54d
  41e58e:	rcl    BYTE PTR [ebx+edi*8+0xee5cece],0xf3
  41e596:	adc    bh,ch
  41e598:	jp     0x41e5fc
  41e59a:	adc    BYTE PTR [ebp+0x6254b40],bl
  41e5a0:	add    esp,DWORD PTR [eax+0x15]
  41e5a3:	push   cs
  41e5a4:	aam    0x7
  41e5a6:	dec    ebp
  41e5a7:	rol    BYTE PTR [eax],0x56
  41e5aa:	jae    0x41e5de
  41e5ac:	aaa    
  41e5ad:	ss cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41e5b0:	mov    eax,0x4591dad4
  41e5b5:	(bad)  
  41e5b6:	mov    eax,ds:0x8420b244
  41e5bb:	jnp    0x41e5f8
  41e5bd:	int3   
  41e5be:	dec    edi
  41e5bf:	cwde   
  41e5c0:	ds inc esp
  41e5c2:	sub    ecx,DWORD PTR [edx-0x3d84a974]
  41e5c8:	(bad)  [eax+0x1bb5846c]
  41e5ce:	dec    edi
  41e5cf:	shl    BYTE PTR [eax],1
  41e5d1:	(bad)  
  41e5d3:	(bad)  
  41e5d4:	stc    
  41e5d5:	sahf   
  41e5d6:	test   al,0xb8
  41e5d8:	loop   0x41e563
  41e5da:	xor    al,0x8d
  41e5dc:	in     eax,dx
  41e5dd:	mov    eax,ds:0x736e729f
  41e5e2:	dec    edx
  41e5e3:	aas    
  41e5e4:	sti    
  41e5e5:	je     0x41e57f
  41e5e7:	in     eax,dx
  41e5e8:	xchg   ebx,eax
  41e5e9:	in     eax,0x8b
  41e5eb:	sbb    ebp,ebx
  41e5ed:	rol    BYTE PTR [ecx-0x2095eb5d],cl
  41e5f3:	(bad)  [esi+0x3b]
  41e5f6:	dec    edx
  41e5f7:	mov    esi,0xae68b6d8
  41e5fc:	inc    eax
  41e5fd:	dec    ebx
  41e5fe:	dec    edx
  41e5ff:	rcr    DWORD PTR [ebx],cl
  41e601:	shl    BYTE PTR [edi+0x5f8ea082],0x93
  41e608:	mov    ebx,0x1e9ce86d
  41e60d:	jmp    0x1d04f7c7
  41e612:	popa   
  41e613:	mov    ecx,0xa12fa320
  41e618:	aad    0x76
  41e61a:	pop    esp
  41e61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e61c:	mov    al,0xd6
  41e61e:	dec    ebx
  41e61f:	sbb    DWORD PTR [edx-0x3d],esp
  41e622:	rcl    BYTE PTR [edi-0x284dd487],1
  41e628:	sub    eax,0x9dc72ba2
  41e62d:	mov    ch,0x5c
  41e62f:	fist   DWORD PTR [ecx-0x5ef50672]
  41e635:	imul   edx,DWORD PTR [esp+esi*4],0x61
  41e639:	pop    ebp
  41e63a:	rcr    DWORD PTR [ebp+0x5c],0xee
  41e63e:	mov    edi,0x87238b9a
  41e643:	jbe    0x41e67c
  41e645:	cmp    BYTE PTR [ebp+0x6b],0x62
  41e649:	out    0xd2,al
  41e64b:	add    ecx,DWORD PTR [esi+ecx*1]
  41e64e:	outs   dx,BYTE PTR ds:[esi]
  41e64f:	sub    al,0x6b
  41e651:	pop    edi
  41e652:	repz xor dl,BYTE PTR [esi]
  41e655:	std    
  41e656:	into   
  41e657:	dec    esp
  41e658:	add    esi,ebx
  41e65a:	cvtps2pi mm2,QWORD PTR [edx]
  41e65d:	mov    ebp,0x6aeb35df
  41e662:	sub    eax,0x78a2ef29
  41e667:	rcl    al,cl
  41e669:	icebp  
  41e66a:	outs   dx,BYTE PTR ds:[esi]
  41e66b:	test   eax,edi
  41e66d:	lock (bad) 
  41e66f:	sar    DWORD PTR [ebp+0x5522e775],1
  41e675:	aaa    
  41e676:	rcr    DWORD PTR [eax-0x6500b483],1
  41e67c:	mov    ah,0x9a
  41e67e:	xchg   esp,eax
  41e67f:	cmp    al,0x91
  41e681:	jg     0x41e693
  41e683:	add    ah,BYTE PTR [edi+0x5c3d82c9]
  41e689:	sub    DWORD PTR [ebp+0x2c964c1f],ebp
  41e68f:	cwde   
  41e690:	outs   dx,BYTE PTR ds:[esi]
  41e691:	dec    edx
  41e692:	xchg   BYTE PTR [edx+0x1d],dl
  41e695:	fsubr  st,st(6)
  41e697:	mov    esp,0xb40738c6
  41e69c:	add    eax,0x1eb0fbcc
  41e6a1:	push   cs
  41e6a2:	xor    al,0x57
  41e6a4:	ror    BYTE PTR [esp+eiz*8+0x45735500],1
  41e6ab:	std    
  41e6ac:	push   esi
  41e6ad:	shl    ebp,cl
  41e6af:	dec    edi
  41e6b0:	rol    BYTE PTR [esi+0x6873c340],1
  41e6b6:	sbb    DWORD PTR [ebx-0x7fcd8563],esi
  41e6bc:	cmp    eax,0x5044a51e
  41e6c2:	ret    0xa84b
  41e6c5:	stos   DWORD PTR es:[edi],eax
  41e6c6:	imul   edx,ebx,0x4c
  41e6c9:	lea    esp,[ebx]
  41e6cb:	mov    BYTE PTR [edi],bl
  41e6cd:	xor    eax,0xa76faca4
  41e6d2:	aas    
  41e6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6d4:	cmp    eax,0xe9823f72
  41e6d9:	enter  0x1bbf,0x9a
  41e6dd:	jbe    0x41e74b
  41e6df:	fld    DWORD PTR [ebx-0x50]
  41e6e2:	(bad)  
  41e6e3:	mov    eax,ds:0xe39f7505
  41e6e8:	cmp    cl,ch
  41e6ea:	aaa    
  41e6eb:	loop   0x41e6c7
  41e6ed:	cli    
  41e6ee:	sbb    bh,BYTE PTR [esi+0x7766093e]
  41e6f4:	xchg   ebp,eax
  41e6f5:	xchg   esi,eax
  41e6f6:	jae    0x41e6d3
  41e6f8:	mov    al,0x81
  41e6fa:	dec    edx
  41e6fb:	inc    eax
  41e6fc:	pop    es
  41e6fd:	jne    0x41e748
  41e6ff:	icebp  
  41e700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e701:	les    ebx,FWORD PTR [esp+eax*8]
  41e704:	outs   dx,BYTE PTR ds:[esi]
  41e705:	pop    ss
  41e706:	sub    ebx,DWORD PTR [ebp-0x3010bf23]
  41e70c:	cmp    BYTE PTR [ebp+0x56890b76],ch
  41e712:	les    esi,FWORD PTR [edx]
  41e714:	pop    ebp
  41e715:	adc    BYTE PTR [edi+0x3],ah
  41e718:	dec    esi
  41e719:	std    
  41e71a:	jne    0x41e766
  41e71c:	mov    edx,0xe767bb4e
  41e721:	nop
  41e722:	call   FWORD PTR [ebp-0x2a9e99d6]
  41e728:	fadd   QWORD PTR [esi-0x67]
  41e72b:	mov    ecx,esi
  41e72d:	sbb    dl,dl
  41e72f:	xor    eax,0x23b76154
  41e734:	xchg   ebx,eax
  41e735:	sbb    al,0x35
  41e737:	dec    ebx
  41e738:	pop    ss
  41e739:	fcomp  QWORD PTR [esi]
  41e73b:	call   0x8926:0x53ae40eb
  41e742:	dec    ecx
  41e743:	mov    dl,0x5
  41e745:	aad    0x58
  41e747:	inc    ebx
  41e748:	dec    esi
  41e749:	mov    ebp,0xa3dc84dc
  41e74e:	js     0x41e7c3
  41e750:	in     al,dx
  41e751:	add    ch,bh
  41e753:	xor    al,BYTE PTR [eax]
  41e755:	aam    0x52
  41e757:	dec    eax
  41e758:	xchg   esi,eax
  41e759:	push   edi
  41e75a:	xor    ebx,DWORD PTR [esi+0x52e836e5]
  41e760:	loop   0x41e71f
  41e762:	sar    BYTE PTR [edi+ecx*4-0xf6eef86],1
  41e769:	stc    
  41e76a:	lahf   
  41e76b:	sub    DWORD PTR [esi-0x1d7d8814],ebx
  41e771:	fwait
  41e772:	xor    BYTE PTR [ebx-0x48],ch
  41e775:	lods   eax,DWORD PTR ds:[esi]
  41e776:	ret    0x6b6e
  41e779:	dec    eax
  41e77a:	and    eax,0x8adb57be
  41e77f:	hlt    
  41e780:	(bad)  
  41e781:	lods   eax,DWORD PTR ds:[esi]
  41e782:	adc    al,0x1b
  41e784:	cwde   
  41e785:	xor    DWORD PTR [edi+0x71],ebp
  41e788:	sbb    al,0x83
  41e78a:	and    ebp,DWORD PTR [ebp+0x12d14a87]
  41e790:	dec    ebx
  41e791:	xchg   edi,eax
  41e792:	mov    ebx,0x1666be9
  41e797:	mov    ds:0xafb57d15,al
  41e79c:	jmp    0x41e772
  41e79e:	jecxz  0x41e731
  41e7a0:	or     DWORD PTR [ebx-0x4f],ecx
  41e7a3:	fwait
  41e7a4:	mov    cl,0xd3
  41e7a6:	adc    eax,0x7e5d2031
  41e7ab:	inc    ebx
  41e7ac:	sub    cl,BYTE PTR [eax]
  41e7ae:	push   esp
  41e7af:	jecxz  0x41e7dc
  41e7b1:	jno    0x41e7e0
  41e7b3:	icebp  
  41e7b4:	nop
  41e7b5:	sub    al,0xaf
  41e7b7:	dec    esp
  41e7b8:	mov    bl,0xfb
  41e7ba:	lods   eax,DWORD PTR ds:[esi]
  41e7bb:	data16 sub ah,dl
  41e7be:	sar    DWORD PTR [ecx],0xc9
  41e7c1:	mov    ch,0x76
  41e7c3:	sub    al,0x82
  41e7c5:	jmp    0x41e781
  41e7c7:	mov    fs,WORD PTR [edi-0x274a530c]
  41e7cd:	adc    dl,BYTE PTR [esi+edi*1]
  41e7d0:	jnp    0x41e7cf
  41e7d2:	in     eax,dx
  41e7d3:	push   es
  41e7d4:	add    BYTE PTR [edx],0x44
  41e7d7:	imul   ebx,DWORD PTR [ebx],0x50
  41e7da:	repz xchg esi,eax
  41e7dc:	jmp    0x959b:0xe715237e
  41e7e3:	imul   ebx,DWORD PTR [edx+0x63],0xffffffb4
  41e7e7:	jb     0x41e7e8
  41e7e9:	arpl   WORD PTR [ecx+0x220972ce],si
  41e7ef:	mov    ebp,0xee9750bd
  41e7f4:	test   al,0x7f
  41e7f6:	lods   al,BYTE PTR ds:[esi]
  41e7f7:	rcl    DWORD PTR [edi-0x6102b75f],1
  41e7fd:	add    cl,BYTE PTR [ecx+0x52073302]
  41e803:	dec    esp
  41e804:	mov    esp,0xceeaca8b
  41e809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e80a:	xor    dh,ch
  41e80c:	mov    eax,ds:0x58ffd024
  41e811:	lds    esp,FWORD PTR ds:0x409fd755
  41e817:	mov    ds:0x6d9830a1,al
  41e81c:	inc    edx
  41e81d:	push   edx
  41e81e:	push   cs
  41e81f:	sub    DWORD PTR [eax+0x1a],esp
  41e822:	enter  0xe0bb,0x64
  41e826:	sar    DWORD PTR [edi-0x6d],cl
  41e829:	(bad)  
  41e82a:	pop    ecx
  41e82b:	call   0xd6b2:0x6daf2b2b
  41e832:	shl    BYTE PTR [edi+0x193e3597],0x5a
  41e839:	leave  
  41e83a:	pusha  
  41e83b:	es out dx,eax
  41e83d:	xchg   esp,eax
  41e83e:	gs cwde 
  41e840:	push   eax
  41e841:	mov    eax,ds:0xd0fd021d
  41e846:	dec    ecx
  41e847:	call   0x59ded14a
  41e84c:	inc    esp
  41e84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e84e:	xchg   ebx,eax
  41e84f:	and    eax,DWORD PTR [ebp-0x56fd4976]
  41e855:	cmp    eax,0x6a7a015e
  41e85a:	mov    ebp,0x1a11bf6b
  41e85f:	xor    al,0x50
  41e861:	clc    
  41e862:	mov    al,BYTE PTR [esi+0x10]
  41e865:	xor    eax,0xa3b9cac1
  41e86a:	inc    edx
  41e86b:	ret    0xb44e
  41e86e:	inc    edi
  41e86f:	ret    
  41e870:	mov    bl,0x8a
  41e872:	arpl   WORD PTR [ebx],si
  41e874:	fwait
  41e875:	push   edi
  41e876:	adc    DWORD PTR fs:[ebx+0x19],ebx
  41e87a:	sub    al,0x5d
  41e87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e87d:	dec    ebp
  41e87e:	out    dx,al
  41e87f:	cmp    eax,0x8467a4bd
  41e884:	(bad)  
  41e886:	push   edi
  41e887:	popa   
  41e888:	xchg   DWORD PTR [ecx+edx*8+0x4e],edi
  41e88c:	mov    eax,0x8b71ecb6
  41e891:	cmp    al,0xa0
  41e893:	mov    ecx,edx
  41e895:	jmp    FWORD PTR [edi+0x1de197f]
  41e89b:	or     edi,esi
  41e89d:	add    ah,BYTE PTR [ecx]
  41e89f:	pop    edi
  41e8a0:	sub    al,0xd
  41e8a2:	mov    cl,0x77
  41e8a4:	or     BYTE PTR [edx-0x2d],bh
  41e8a7:	int3   
  41e8a8:	jae    0x41e864
  41e8aa:	inc    ecx
  41e8ab:	jnp    0x41e869
  41e8ad:	sbb    esp,DWORD PTR [ebp-0x60]
  41e8b0:	or     esi,DWORD PTR [ebx+edi*8-0xbebdc0b]
  41e8b7:	cmp    ecx,DWORD PTR [ebx]
  41e8b9:	imul   ecx
  41e8bb:	and    al,0xd6
  41e8bd:	or     al,0xf7
  41e8bf:	(bad)  [ebx+ecx*2+0x6e]
  41e8c3:	pop    ss
  41e8c4:	call   DWORD PTR [edi+0x4d95873d]
  41e8ca:	push   0xffffffd6
  41e8cc:	mov    WORD PTR [edx],?
  41e8ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8cf:	adc    ecx,DWORD PTR [edi]
  41e8d1:	and    DWORD PTR [ecx],esp
  41e8d3:	repz sbb edx,DWORD PTR [ebp+0x26a6e928]
  41e8da:	or     edi,ebx
  41e8dc:	adc    eax,0x986b4caf
  41e8e1:	shr    BYTE PTR [edx],1
  41e8e3:	push   0xffffffd0
  41e8e5:	jns    0x41e8e7
  41e8e7:	xor    ch,ch
  41e8e9:	je     0x41e89f
  41e8eb:	mov    DWORD PTR [edi+0x3e],esp
  41e8ee:	jp     0x41e8d9
  41e8f0:	bound  ebp,QWORD PTR [ecx-0x2d6ce1b0]
  41e8f6:	mov    DWORD PTR [edi-0x67],edx
  41e8f9:	mov    ebx,0x4ca47f
  41e8fe:	add    BYTE PTR [eax],al
  41e900:	add    BYTE PTR [eax],al
  41e902:	jg     0x41e97c
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	cmp    edx,DWORD PTR [esi]
  41e910:	aad    0x52
  41e912:	add    BYTE PTR [ecx+eax*1+0x0],ah
  41e916:	repz add al,0x0
  41e919:	add    BYTE PTR [eax],dl
  41e91b:	das    
  41e91c:	xchg   edx,eax
  41e91d:	(bad)  
  41e91e:	fld1   
  41e920:	xchg   esp,eax
  41e921:	daa    
  41e922:	fst    DWORD PTR [ecx-0x31]
  41e925:	pop    ebp
  41e926:	les    esp,FWORD PTR [edi+0x36]
  41e929:	add    eax,0x27642af4
  41e92e:	or     BYTE PTR [edx+0x26],bh
  41e931:	dec    ecx
  41e932:	leave  
  41e933:	adc    eax,0xe4d6efd3
  41e938:	addr16 pop ecx
  41e93a:	popf   
  41e93b:	(bad)  
  41e93c:	mov    ah,BYTE PTR [esi+eiz*8-0x79]
  41e940:	jp     0x41e93d
  41e942:	jle    0x41e97d
  41e944:	adc    eax,0xf8019dba
  41e949:	test   BYTE PTR [eax+0x6be7e204],al
  41e94f:	int    0xeb
  41e951:	jb     0x41e8fa
  41e953:	jg     0x41e985
  41e955:	out    dx,eax
  41e956:	std    
  41e957:	es cs pop esp
  41e95a:	cmp    al,0x22
  41e95c:	mov    esi,0x2ba80875
  41e961:	sub    BYTE PTR [edx+0x3d4a7747],bh
  41e967:	rcl    DWORD PTR [eax+0x22],cl
  41e96a:	shl    DWORD PTR [ebp+ebp*4+0x2c],cl
  41e96e:	cwde   
  41e96f:	mov    eax,DWORD PTR [eax+0x3b]
  41e972:	mul    BYTE PTR [edi]
  41e974:	jl     0x41e99b
  41e976:	pop    DWORD PTR [edi-0x13]
  41e979:	pop    ebp
  41e97a:	push   ecx
  41e97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e97c:	push   esi
  41e97d:	cld    
  41e97e:	test   eax,0x702d6866
  41e983:	pop    es
  41e984:	fisubr WORD PTR [ecx-0x16d04829]
  41e98a:	in     eax,dx
  41e98b:	mov    al,0x9c
  41e98d:	ret    
  41e98e:	(bad)  
  41e98f:	or     eax,0xcdae7167
  41e994:	cld    
  41e995:	cld    
  41e996:	push   esi
  41e997:	mov    ebp,0x22f40596
  41e99c:	outs   dx,DWORD PTR ds:[esi]
  41e99d:	int    0x9d
  41e99f:	jns    0x41e9d9
  41e9a1:	pop    ebx
  41e9a2:	scas   eax,DWORD PTR es:[edi]
  41e9a3:	inc    ebp
  41e9a4:	lahf   
  41e9a5:	(bad)  
  41e9a6:	push   esp
  41e9a7:	jmp    0x41e94b
  41e9a9:	add    al,0xe0
  41e9ab:	hlt    
  41e9ac:	and    BYTE PTR ds:0x35e79192,ah
  41e9b2:	test   BYTE PTR [ecx],dl
  41e9b4:	es in  al,dx
  41e9b6:	add    eax,0xcc2eae20
  41e9bb:	sbb    eax,0x2b21c0c4
  41e9c0:	nop
  41e9c1:	fmul   QWORD PTR [eax]
  41e9c3:	pop    bp
  41e9c5:	jae    0x41e94b
  41e9c7:	data16 jbe 0x41e97f
  41e9ca:	push   edx
  41e9cb:	(bad)  
  41e9cc:	adc    DWORD PTR [ebp+0x59],esi
  41e9cf:	jle    0x41e9f1
  41e9d1:	imul   DWORD PTR [eax]
  41e9d3:	sbb    bl,al
  41e9d5:	sub    DWORD PTR [ebx-0x10],edx
  41e9d8:	pop    ecx
  41e9d9:	jnp    0x41ea15
  41e9db:	inc    ecx
  41e9dc:	inc    eax
  41e9dd:	pop    edi
  41e9de:	retf   0x5c61
  41e9e1:	(bad)  
  41e9e2:	imul   esp,DWORD PTR [edi],0xffffffff
  41e9e5:	xor    BYTE PTR [eax+0x15],dl
  41e9e8:	arpl   bp,dx
  41e9ea:	loope  0x41ea6a
  41e9ec:	std    
  41e9ed:	push   esi
  41e9ee:	xchg   esi,eax
  41e9ef:	fisttp DWORD PTR [edi-0x13]
  41e9f2:	fisubr DWORD PTR [esi+0x51cf6b5b]
  41e9f8:	and    DWORD PTR [edi],ecx
  41e9fa:	mov    eax,0xd83cfd73
  41e9ff:	or     eax,0x2f76da69
  41ea04:	call   0xbcd3:0x9d41386a
  41ea0b:	mov    al,ds:0xa481d3c9
  41ea10:	sbb    al,0xf7
  41ea12:	sbb    eax,0x9475c71f
  41ea17:	mov    BYTE PTR [eax+0x51],ah
  41ea1a:	mov    dl,0xbe
  41ea1c:	sub    al,0x6f
  41ea1e:	mov    al,0xf7
  41ea20:	scas   al,BYTE PTR es:[edi]
  41ea21:	or     al,BYTE PTR [edx+ecx*1-0x2aa5228b]
  41ea28:	popf   
  41ea29:	inc    edx
  41ea2a:	mov    dh,0xbb
  41ea2c:	mov    bl,0xa1
  41ea2e:	popf   
  41ea2f:	xor    cl,dh
  41ea31:	add    bh,ah
  41ea33:	stos   DWORD PTR es:[edi],eax
  41ea34:	mov    edx,0xc00fa9aa
  41ea39:	lods   eax,DWORD PTR ds:[esi]
  41ea3a:	push   esp
  41ea3b:	adc    ebp,DWORD PTR [edx+ebp*1-0x19]
  41ea3f:	addr16 add dl,ah
  41ea42:	jne    0x41ea32
  41ea44:	xchg   ebp,eax
  41ea45:	out    dx,al
  41ea46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea47:	or     al,0xcc
  41ea49:	ror    BYTE PTR [ebx+0x28],1
  41ea4c:	cmp    edx,DWORD PTR [esp+ecx*1-0x2d]
  41ea50:	sbb    edi,DWORD PTR [ebx+0x34]
  41ea53:	in     al,dx
  41ea54:	cmp    DWORD PTR [eax],eax
  41ea56:	ins    DWORD PTR es:[edi],dx
  41ea57:	cmp    eax,0xd0c9624c
  41ea5c:	dec    edx
  41ea5d:	sbb    esp,DWORD PTR [eax]
  41ea5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea60:	ret    
  41ea61:	pop    ebp
  41ea62:	jnp    0x41ead6
  41ea64:	jne    0x41ea8a
  41ea66:	ret    0x8fa4
  41ea69:	into   
  41ea6a:	lock out dx,eax
  41ea6c:	stc    
  41ea6d:	mov    bl,0xd4
  41ea6f:	pop    ebx
  41ea70:	or     eax,0xe4fb17b7
  41ea75:	xor    dl,BYTE PTR [ecx]
  41ea77:	push   ss
  41ea78:	pop    esi
  41ea79:	mov    ch,0x3d
  41ea7b:	gs add ebp,DWORD PTR cs:[esi+0x21e8b7bb]
  41ea83:	les    ebx,FWORD PTR [edx]
  41ea85:	test   al,0x8
  41ea87:	mov    dl,0x6c
  41ea89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea8a:	pop    ecx
  41ea8b:	dec    esi
  41ea8c:	push   ecx
  41ea8d:	into   
  41ea8e:	xchg   esp,eax
  41ea8f:	pop    ds
  41ea90:	mov    edx,edi
  41ea92:	rcr    BYTE PTR [ebp+0x28],0x6b
  41ea96:	ret    
  41ea97:	push   0x2e
  41ea99:	push   0x4a
  41ea9b:	sar    BYTE PTR [edi+0x42e2ab64],1
  41eaa1:	xchg   ebp,eax
  41eaa2:	(bad)  
  41eaa3:	cmp    al,0xeb
  41eaa5:	scas   eax,DWORD PTR es:[edi]
  41eaa6:	add    al,0x21
  41eaa8:	pushf  
  41eaa9:	vpshlq xmm13,xmm2,[eax-0x3d468d6e]
  41eab2:	inc    edx
  41eab3:	pushf  
  41eab4:	mov    gs,WORD PTR [edx+0x237df228]
  41eaba:	mov    BYTE PTR [ebx],dh
  41eabc:	inc    esp
  41eabd:	loope  0x41ea76
  41eabf:	sbb    ah,BYTE PTR [eax+0x2815ecfb]
  41eac5:	mov    esi,0xdd1b0088
  41eaca:	cmp    dl,BYTE PTR [ebx-0x23]
  41eacd:	xor    BYTE PTR [esi+0x78625037],bh
  41ead3:	nop
  41ead4:	mov    ch,0x7a
  41ead6:	cmp    ebp,edi
  41ead8:	cli    
  41ead9:	loop   0x41ea5d
  41eadb:	fisubr WORD PTR [edi+0x12]
  41eade:	call   0x8b76:0x9e849c83
  41eae5:	pop    edx
  41eae6:	inc    ecx
  41eae7:	pop    ecx
  41eae8:	and    ecx,DWORD PTR [edi+edi*2-0x4d]
  41eaec:	mov    DWORD PTR [ebp-0x6],ebx
  41eaef:	cld    
  41eaf0:	scas   al,BYTE PTR es:[edi]
  41eaf1:	lahf   
  41eaf2:	pop    ds
  41eaf3:	xlat   BYTE PTR ds:[ebx]
  41eaf4:	daa    
  41eaf5:	add    ah,BYTE PTR [eax-0x42443ffc]
  41eafb:	pop    es
  41eafc:	mov    ds:0x3a3c5485,al
  41eb01:	sub    BYTE PTR [ebp+0x1a3a87d3],0xd7
  41eb08:	dec    eax
  41eb09:	pop    eax
  41eb0a:	jle    0x41eb32
  41eb0c:	xchg   edi,eax
  41eb0d:	push   esi
  41eb0e:	std    
  41eb0f:	dec    esp
  41eb10:	mov    edi,0xe6af0ed4
  41eb15:	add    al,0xc6
  41eb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb18:	mov    eax,0x488e1457
  41eb1d:	ins    BYTE PTR es:[edi],dx
  41eb1e:	push   edx
  41eb1f:	ins    DWORD PTR es:[edi],dx
  41eb20:	ret    0x34d1
  41eb23:	cmp    DWORD PTR [eax+eax*4-0x28],edi
  41eb27:	(bad)  
  41eb28:	retf   
  41eb29:	out    0x3e,al
  41eb2b:	sub    esi,DWORD PTR [edx]
  41eb2d:	xchg   BYTE PTR [eax],al
  41eb2f:	xor    BYTE PTR [edx+eiz*8],bl
  41eb32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb33:	mov    al,ds:0x2e3ca2f3
  41eb38:	lea    esi,[ebp-0x5f]
  41eb3b:	dec    esp
  41eb3c:	jle    0x41eb31
  41eb3e:	or     BYTE PTR [esi+0x4],dl
  41eb41:	xor    esp,DWORD PTR [ebp-0x7d]
  41eb44:	pop    ebx
  41eb45:	add    BYTE PTR ds:0x3b78c2bf,bl
  41eb4b:	sahf   
  41eb4c:	xchg   esi,eax
  41eb4d:	cmp    eax,0xb5416cbd
  41eb52:	lds    ebp,FWORD PTR [ecx]
  41eb54:	and    cl,ah
  41eb56:	retf   0x3771
  41eb59:	test   al,0x0
  41eb5b:	adc    eax,0x7d2999c2
  41eb60:	push   edx
  41eb61:	outs   dx,BYTE PTR ds:[esi]
  41eb62:	mov    cl,0xb6
  41eb64:	jl     0x41eb78
  41eb66:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb68:	in     eax,0x5e
  41eb6a:	mov    DWORD PTR [esi-0x35],0x6916989b
  41eb71:	mov    WORD PTR [eax-0x2b],es
  41eb74:	pushf  
  41eb75:	sbb    DWORD PTR [esi-0x210cef0a],eax
  41eb7b:	out    dx,al
  41eb7c:	(bad)  [edx]
  41eb7e:	mov    esi,0x53064f44
  41eb83:	je     0x41ebac
  41eb85:	addr16 int 0xae
  41eb88:	mov    bh,0xcf
  41eb8a:	ret    
  41eb8b:	or     al,0x3c
  41eb8d:	loopne 0x41eb41
  41eb8f:	(bad)  
  41eb90:	pop    esi
  41eb91:	or     eax,DWORD PTR [esp+eax*1-0x3cea4ca2]
  41eb98:	dec    edx
  41eb99:	into   
  41eb9a:	je     0x41eb75
  41eb9c:	mov    ds,WORD PTR [eax-0x57c05965]
  41eba2:	xor    bh,ah
  41eba4:	out    0x1d,al
  41eba6:	mov    bh,BYTE PTR [esi]
  41eba8:	les    edx,FWORD PTR [ecx-0xa884f05]
  41ebae:	fsub   QWORD PTR [eax-0x53]
  41ebb1:	lock std 
  41ebb3:	in     eax,dx
  41ebb4:	jl     0x41eb4b
  41ebb6:	adc    cl,BYTE PTR [ebp-0x39]
  41ebb9:	aaa    
  41ebba:	jmp    0x41ec37
  41ebbc:	adc    BYTE PTR ds:0xf3b693d6,cl
  41ebc2:	and    DWORD PTR [eax+0x4e],edi
  41ebc5:	inc    ebx
  41ebc6:	in     al,dx
  41ebc7:	add    bl,dh
  41ebc9:	xchg   esp,eax
  41ebca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebcb:	add    al,0x70
  41ebcd:	or     cl,0x39
  41ebd0:	inc    edx
  41ebd1:	sbb    ecx,DWORD PTR [ecx]
  41ebd3:	in     eax,dx
  41ebd4:	pop    es
  41ebd5:	dec    ecx
  41ebd6:	mov    ebp,0x61c6ac6f
  41ebdb:	pop    ds
  41ebdc:	sbb    DWORD PTR [edi+0x5c],ebx
  41ebdf:	sahf   
  41ebe0:	retf   
  41ebe1:	mov    dh,0xf
  41ebe3:	xchg   edx,eax
  41ebe4:	inc    eax
  41ebe5:	cmp    ah,0x50
  41ebe8:	test   eax,0x9646bc3e
  41ebed:	repz jle 0x41ec15
  41ebf0:	and    eax,0xf20b5ee3
  41ebf5:	jmp    0xe9cb:0x650b8fce
  41ebfc:	pushf  
  41ebfd:	xchg   edi,eax
  41ebfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebff:	cmc    
  41ec00:	aam    0x14
  41ec02:	xor    BYTE PTR [esi+0x5b],cl
  41ec05:	jecxz  0x41ebc6
  41ec07:	xchg   ebx,eax
  41ec08:	dec    ebx
  41ec09:	lock in ax,dx
  41ec0c:	push   edx
  41ec0d:	jbe    0x41ec2d
  41ec0f:	or     bh,BYTE PTR [esp+edi*8]
  41ec12:	shl    DWORD PTR [ebx],1
  41ec14:	jge    0x41ec6b
  41ec16:	(bad)  [eax-0x1904121d]
  41ec1c:	add    bh,BYTE PTR [esi+0x7bdc6e2]
  41ec22:	adc    esp,edi
  41ec24:	sub    eax,0x940c5016
  41ec29:	out    0x6d,eax
  41ec2b:	mov    eax,DWORD PTR [eax+0x12]
  41ec2e:	inc    eax
  41ec2f:	int    0x2f
  41ec31:	(bad)  
  41ec32:	jmp    0xb09b73ee
  41ec37:	repz sub DWORD PTR [edx+0x1b64b845],ebp
  41ec3e:	and    esp,DWORD PTR [esi-0x31974b0f]
  41ec44:	xor    BYTE PTR [edx-0x4afeab0d],dl
  41ec4a:	cmp    al,BYTE PTR [edi+0xeb56b60]
  41ec50:	mov    esp,0xe91cfca0
  41ec55:	sahf   
  41ec56:	xchg   edx,eax
  41ec57:	mov    ds:0x6b483efc,al
  41ec5c:	and    BYTE PTR [eax+0x3c],bl
  41ec5f:	push   ebp
  41ec60:	fwait
  41ec61:	mov    dl,BYTE PTR [edx-0x54d45cac]
  41ec67:	leave  
  41ec68:	dec    ebx
  41ec69:	mov    ebx,0xb3a18e1a
  41ec6e:	imul   eax,ebp,0xffffffb9
  41ec71:	inc    edi
  41ec72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec73:	leave  
  41ec74:	jne    0x41ecb3
  41ec76:	outs   dx,BYTE PTR ds:[esi]
  41ec77:	loopne 0x41ecd4
  41ec79:	pushf  
  41ec7a:	gs ror ebx,1
  41ec7d:	xchg   esi,eax
  41ec7e:	int    0xa3
  41ec80:	mov    ch,0x9d
  41ec82:	ret    
  41ec83:	aas    
  41ec84:	daa    
  41ec85:	add    DWORD PTR [ebp-0x5b2b761a],ebp
  41ec8b:	cmp    eax,0x3531b2ad
  41ec90:	pusha  
  41ec91:	les    esp,FWORD PTR [edi]
  41ec93:	pop    esi
  41ec94:	inc    edi
  41ec95:	or     DWORD PTR [ebp-0x78f2846e],esp
  41ec9b:	xchg   dl,al
  41ec9d:	jmp    0x2289:0xd19f185e
  41eca4:	mov    cl,0xc7
  41eca6:	or     al,0x64
  41eca8:	cmp    al,0x79
  41ecaa:	cdq    
  41ecab:	test   al,0x29
  41ecad:	jl     0x41ec9f
  41ecaf:	sbb    al,0x4
  41ecb1:	fistp  DWORD PTR [edi+0x47da0ba2]
  41ecb7:	retf   0xc50c
  41ecba:	dec    ebx
  41ecbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecbc:	cmc    
  41ecbd:	xlat   BYTE PTR ds:[ebx]
  41ecbe:	cmp    eax,DWORD PTR [ebp-0x12]
  41ecc1:	or     DWORD PTR [edi],0xedb234b2
  41ecc7:	mov    ecx,0x6d950527
  41eccc:	jge    0x41ecf5
  41ecce:	aam    0xf
  41ecd0:	jns    0x41eced
  41ecd2:	scas   eax,DWORD PTR es:[edi]
  41ecd3:	fstp   DWORD PTR [ecx]
  41ecd5:	shr    BYTE PTR ds:0x6d2c7633,0x3c
  41ecdc:	(bad)  
  41ecdd:	fsubrp st(2),st
  41ecdf:	clc    
  41ece0:	scas   al,BYTE PTR es:[edi]
  41ece1:	xchg   edi,edx
  41ece3:	(bad)  
  41ece5:	dec    edx
  41ece6:	push   ebx
  41ece7:	jns    0x41ecfa
  41ece9:	push   es
  41ecea:	ins    BYTE PTR es:[edi],dx
  41eceb:	stc    
  41ecec:	xlat   BYTE PTR ds:[ebx]
  41eced:	ror    DWORD PTR [eax-0x33],cl
  41ecf0:	retf   0x52de
  41ecf3:	das    
  41ecf4:	ds cwde 
  41ecf6:	xor    bl,0x7d
  41ecf9:	pop    ss
  41ecfa:	xchg   cl,bl
  41ecfc:	jl     0x41ed5a
  41ecfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecff:	xchg   ebp,eax
  41ed00:	mov    eax,ds:0xa66b4f05
  41ed05:	inc    esp
  41ed06:	adc    esp,ecx
  41ed08:	gs mov cl,ch
  41ed0b:	push   ecx
  41ed0c:	icebp  
  41ed0d:	test   al,0x47
  41ed0f:	ss rcr edx,1
  41ed12:	adc    BYTE PTR [eax-0x74fe69f1],al
  41ed18:	int    0xeb
  41ed1a:	bound  esi,QWORD PTR [esi+0x745b4bc2]
  41ed20:	dec    ebx
  41ed21:	dec    esp
  41ed22:	push   esp
  41ed23:	cdq    
  41ed24:	add    dh,BYTE PTR [ebp+0x49]
  41ed27:	or     BYTE PTR [ebx],dl
  41ed29:	(bad)  
  41ed2a:	fnstsw WORD PTR [ebx]
  41ed2c:	mov    eax,ds:0x9fdd5d3
  41ed31:	ins    DWORD PTR es:[edi],dx
  41ed32:	mov    edx,DWORD PTR [ebx-0x60db1dea]
  41ed38:	mov    edi,0xcb030d4a
  41ed3d:	shr    DWORD PTR ds:0xecf011e2,cl
  41ed43:	mov    bl,0x8c
  41ed45:	pop    esp
  41ed46:	fild   QWORD PTR [edx+ebp*1+0x5c]
  41ed4a:	mov    al,ds:0x7a747a78
  41ed4f:	aaa    
  41ed50:	hlt    
  41ed51:	push   ds
  41ed52:	cmp    ebx,ebx
  41ed54:	push   0x62
  41ed56:	sar    DWORD PTR [edi-0x20669900],0x13
  41ed5d:	popf   
  41ed5e:	outs   dx,BYTE PTR ds:[esi]
  41ed5f:	cli    
  41ed60:	ins    BYTE PTR es:[edi],dx
  41ed61:	sub    al,0x10
  41ed63:	jp     0x41ed29
  41ed65:	dec    esp
  41ed66:	jae    0x41ed34
  41ed68:	or     eax,0x26022964
  41ed6d:	sbb    dh,BYTE PTR [esi]
  41ed6f:	fist   WORD PTR [edi+0x63251b0]
  41ed75:	push   DWORD PTR [eax+0x5f]
  41ed78:	in     eax,0xf6
  41ed7a:	(bad)  
  41ed7b:	sbb    eax,0x43778732
  41ed80:	dec    edx
  41ed81:	pcmpeqd mm7,QWORD PTR [ebx+0x273c4360]
  41ed88:	dec    ebp
  41ed89:	div    edi
  41ed8b:	(bad)  
  41ed8c:	fist   DWORD PTR [ebp+0x11]
  41ed8f:	aas    
  41ed90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed91:	fs jmp 0xccfe:0x841b56b7
  41ed99:	pop    edi
  41ed9a:	js     0x41ed34
  41ed9c:	addr16 aas 
  41ed9e:	inc    ecx
  41ed9f:	rcl    DWORD PTR [esi-0x43a4d1],cl
  41eda5:	inc    edi
  41eda6:	aam    0x22
  41eda8:	adc    dh,ch
  41edaa:	call   0x8a9ff49
  41edaf:	push   eax
  41edb0:	mov    eax,0x67d3aa0b
  41edb5:	xchg   BYTE PTR [ebp-0x21],ch
  41edb8:	rcl    BYTE PTR [edx+0x38203006],0xcd
  41edbf:	xlat   BYTE PTR ds:[ebx]
  41edc0:	aad    0xbb
  41edc2:	push   ebp
  41edc3:	dec    ebp
  41edc4:	pop    edx
  41edc5:	sti    
  41edc6:	in     al,0x3d
  41edc8:	es push edx
  41edca:	cmp    eax,ecx
  41edcc:	loopne 0x41edbb
  41edce:	stc    
  41edcf:	pop    eax
  41edd0:	cmp    BYTE PTR [esi+0x65],bl
  41edd3:	je     0x41ed57
  41edd5:	out    dx,eax
  41edd6:	retf   
  41edd7:	sub    bl,BYTE PTR [eax-0x45]
  41edda:	cmp    BYTE PTR [eax],dl
  41eddc:	daa    
  41eddd:	jecxz  0x41ed7d
  41eddf:	jb     0x41ed9a
  41ede1:	scas   al,BYTE PTR es:[edi]
  41ede2:	push   ecx
  41ede3:	push   cs
  41ede4:	pusha  
  41ede5:	dec    esi
  41ede6:	aas    
  41ede7:	pop    es
  41ede8:	loope  0x41ee28
  41edea:	out    dx,eax
  41edeb:	mov    bh,0x50
  41eded:	or     eax,DWORD PTR es:[edx-0x5c]
  41edf1:	cmp    DWORD PTR [edx-0x31],esp
  41edf4:	(bad)  
  41edf5:	and    edi,esp
  41edf7:	jo     0x41ed7b
  41edf9:	inc    ecx
  41edfa:	pop    ebp
  41edfb:	cs pushf 
  41edfd:	icebp  
  41edfe:	call   0x2c1c:0x4600461d
  41ee05:	jb     0x41edf6
  41ee07:	out    dx,eax
  41ee08:	cmp    edi,DWORD PTR [ebx+0xe3b422]
  41ee0e:	add    BYTE PTR [eax],al
  41ee10:	add    BYTE PTR [eax],al
  41ee12:	push   edx
  41ee13:	push   ecx
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	add    ebp,DWORD PTR ds:0x68f32064
  41ee24:	add    DWORD PTR [eax],eax
  41ee26:	repz add al,0x0
  41ee29:	add    BYTE PTR [edi+ecx*8-0xd],al
  41ee2d:	and    BYTE PTR [esp+ebx*1],0x85
  41ee31:	sbb    dh,BYTE PTR [esi+0x2b]
  41ee34:	retf   0xa7ea
  41ee37:	test   al,0x84
  41ee39:	and    DWORD PTR [edi+0x44],0x22
  41ee3d:	fild   WORD PTR [ecx+0xb262387]
  41ee43:	sar    DWORD PTR [eax],1
  41ee45:	inc    ebp
  41ee46:	fisttp DWORD PTR [ebp+0xe]
  41ee49:	dec    BYTE PTR [eax]
  41ee4b:	mov    edi,0x4abce474
  41ee50:	pop    ebx
  41ee51:	cmp    ebp,ebx
  41ee53:	sbb    BYTE PTR [eax-0x48],0x91
  41ee57:	outs   dx,BYTE PTR ds:[esi]
  41ee58:	push   edi
  41ee59:	outs   dx,DWORD PTR ds:[esi]
  41ee5a:	daa    
  41ee5b:	or     BYTE PTR [ebp+0x11],dl
  41ee5e:	adc    DWORD PTR [edx+0x69d2e006],ebp
  41ee64:	jo     0x41edfc
  41ee66:	pop    es
  41ee67:	pusha  
  41ee68:	(bad)  
  41ee6a:	and    al,0x78
  41ee6c:	bnd ss ret 
  41ee6f:	int    0x99
  41ee71:	jne    0x41ee71
  41ee73:	mov    ah,BYTE PTR [esi-0x45254499]
  41ee79:	adc    dl,dh
  41ee7b:	pop    es
  41ee7c:	pop    ebx
  41ee7d:	(bad)  
  41ee7e:	jo     0x41ee21
  41ee80:	ja     0x41eed8
  41ee82:	(bad)  
  41ee83:	xchg   edi,ecx
  41ee85:	call   0x8219:0x1a8b545
  41ee8c:	xchg   esi,eax
  41ee8d:	iret   
  41ee8e:	pop    eax
  41ee8f:	(bad)  
  41ee90:	aas    
  41ee91:	push   ecx
  41ee92:	jb     0x41eec0
  41ee94:	inc    edi
  41ee95:	gs push es
  41ee97:	outs   dx,DWORD PTR ds:[esi]
  41ee98:	xor    eax,DWORD PTR [ecx]
  41ee9a:	or     al,0x84
  41ee9c:	jecxz  0x41eeeb
  41ee9e:	(bad)  
  41ee9f:	cdq    
  41eea0:	add    ch,BYTE PTR [esi]
  41eea2:	adc    ecx,esi
  41eea4:	xlat   BYTE PTR ds:[ebx]
  41eea5:	imul   esi,DWORD PTR [ebx+0x416f9c2b],0x5284f7d3
  41eeaf:	cmp    BYTE PTR [ecx-0x3a4a625f],al
  41eeb5:	sub    DWORD PTR [edi],ecx
  41eeb7:	or     DWORD PTR [edi+0x7d],edi
  41eeba:	int3   
  41eebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eebc:	mov    edx,0x3b01a80c
  41eec1:	ret    
  41eec2:	inc    ebp
  41eec3:	gs in  eax,0x33
  41eec6:	mov    esi,0x2bad10d0
  41eecb:	int3   
  41eecc:	pop    esp
  41eecd:	mov    ds:0xdbcc26cb,eax
  41eed2:	daa    
  41eed3:	push   0xfffffff1
  41eed5:	int    0xd8
  41eed7:	inc    ecx
  41eed8:	dec    ecx
  41eed9:	dec    edi
  41eeda:	mov    ecx,0x39ccb217
  41eedf:	repnz sahf 
  41eee1:	ins    DWORD PTR es:[edi],dx
  41eee2:	and    DWORD PTR [ecx+0x33aa85d2],edi
  41eee8:	cmc    
  41eee9:	rol    DWORD PTR [esi+0x3840c619],0x8d
  41eef0:	pop    edi
  41eef1:	int3   
  41eef2:	inc    edi
  41eef3:	push   edi
  41eef4:	xor    eax,0xd54f1248
  41eef9:	push   eax
  41eefa:	and    eax,0x618fa463
  41eeff:	push   0xf5211cd8
  41ef04:	or     ah,dl
  41ef06:	jo     0x41ef2e
  41ef08:	cmp    al,0xde
  41ef0a:	mov    bh,0xb
  41ef0c:	push   es
  41ef0d:	or     BYTE PTR [edx-0x4d],dh
  41ef10:	daa    
  41ef11:	sbb    eax,0x65d79a1a
  41ef16:	call   0x6229486e
  41ef1b:	ins    DWORD PTR es:[edi],dx
  41ef1c:	adc    ecx,DWORD PTR [ebx+0x1c]
  41ef1f:	fidiv  DWORD PTR [edi-0x24]
  41ef22:	dec    eax
  41ef23:	out    0xf6,eax
  41ef25:	adc    al,0xff
  41ef27:	(bad)  
  41ef29:	push   0xbae99698
  41ef2e:	je     0x41ef83
  41ef30:	mov    WORD PTR [ebp-0xb],?
  41ef33:	call   0x2661:0x7dd1a756
  41ef3a:	not    cl
  41ef3c:	aad    0xc4
  41ef3e:	pop    ds
  41ef3f:	rcl    DWORD PTR [ecx],cl
  41ef41:	pop    esi
  41ef42:	xchg   edi,eax
  41ef43:	out    0x5f,al
  41ef45:	mov    al,ds:0xc917f546
  41ef4a:	test   DWORD PTR [ecx-0x539eb8da],0xe9fec6ea
  41ef54:	adc    edi,DWORD PTR [bp+di]
  41ef57:	fsubr  st(3),st
  41ef59:	and    dh,dl
  41ef5b:	pop    edx
  41ef5c:	cwde   
  41ef5d:	pop    edi
  41ef5e:	loope  0x41ef0f
  41ef60:	repz dec eax
  41ef62:	repnz mov dh,0x89
  41ef65:	xchg   edx,ecx
  41ef67:	daa    
  41ef68:	jmp    0x41efc4
  41ef6a:	cmp    esi,DWORD PTR [edx+eax*1]
  41ef6d:	adc    eax,0xa508e31a
  41ef72:	jno    0x41ef2e
  41ef74:	jnp    0x41ef8d
  41ef76:	sbb    BYTE PTR [ebx+0x2f],al
  41ef79:	dec    ecx
  41ef7a:	xlat   BYTE PTR ds:[ebx]
  41ef7b:	jb     0x41ef42
  41ef7d:	xchg   edx,eax
  41ef7e:	sub    DWORD PTR [ecx-0x3],ebx
  41ef81:	xor    bl,BYTE PTR [ebp-0x7aecedb]
  41ef87:	lock adc ch,BYTE PTR [ebx+0x7a]
  41ef8b:	or     al,0x75
  41ef8d:	fbstp  TBYTE PTR [ebx+0x33]
  41ef90:	pop    ebp
  41ef91:	fmulp  st(0),st
  41ef93:	jb     0x41efb2
  41ef95:	int    0x3d
  41ef97:	out    dx,al
  41ef98:	dec    eax
  41ef99:	ret    0x3539
  41ef9c:	or     al,0xaf
  41ef9e:	mov    DWORD PTR [edx+0x36],ebp
  41efa1:	xchg   esp,eax
  41efa2:	sbb    DWORD PTR [edi-0x6edf3f30],edx
  41efa8:	in     al,0xb5
  41efaa:	mov    ebp,DWORD PTR [ebx+eax*4-0x1219126b]
  41efb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efb2:	ret    0xcf3c
  41efb5:	mov    ebx,0x3b46afd
  41efba:	push   ss
  41efbb:	cmp    BYTE PTR [eax-0x51],al
  41efbe:	jl     0x41ef71
  41efc0:	mov    edx,0x5a723f4d
  41efc5:	jge    0x41eff1
  41efc7:	stos   DWORD PTR es:[edi],eax
  41efc8:	and    DWORD PTR [ecx-0x48e14a2a],edx
  41efce:	cmp    al,0x74
  41efd0:	out    dx,eax
  41efd1:	cmp    esi,DWORD PTR [ecx+0x49]
  41efd4:	add    dl,BYTE PTR [edx]
  41efd6:	xchg   edi,eax
  41efd7:	das    
  41efd8:	ja     0x41f053
  41efda:	enter  0x2a4e,0xb6
  41efde:	sbb    bl,BYTE PTR [edi+0x15522a37]
  41efe4:	aaa    
  41efe5:	mov    cl,0x81
  41efe7:	test   BYTE PTR [edx],bh
  41efe9:	fldcw  WORD PTR [esi+0x21]
  41efec:	mov    ecx,0x6436476
  41eff1:	out    0x40,eax
  41eff3:	add    BYTE PTR [edi-0x32fa547b],ah
  41eff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41effa:	add    edi,DWORD PTR [edi]
  41effc:	sub    ebp,DWORD PTR [ebx]
  41effe:	lods   eax,DWORD PTR ds:[esi]
  41efff:	(bad)
  41f004:	data16 stc 
  41f006:	xor    ecx,DWORD PTR [edx+0x6837cb73]
  41f00c:	rep ins DWORD PTR es:[edi],dx
  41f00e:	fiadd  DWORD PTR [eax*4-0x3d348141]
  41f015:	xchg   edi,eax
  41f016:	xor    BYTE PTR [edi+ecx*1],cl
  41f019:	js     0x41f032
  41f01b:	jb     0x41efae
  41f01d:	pop    ecx
  41f01e:	inc    esp
  41f01f:	add    DWORD PTR ds:0xd521fd49,ebx
  41f025:	gs or  esi,eax
  41f028:	out    dx,eax
  41f029:	xor    eax,0xc2c26661
  41f02e:	nop
  41f02f:	les    eax,FWORD PTR ds:0xcdb16391
  41f035:	cmp    DWORD PTR [ebx-0x4dbed57d],edx
  41f03b:	out    dx,al
  41f03c:	push   ecx
  41f03d:	mov    edi,0x225250bc
  41f042:	push   es
  41f043:	das    
  41f044:	inc    ebp
  41f045:	imul   ebp,eax,0xbc5a0864
  41f04b:	mov    bl,0xd0
  41f04d:	inc    DWORD PTR [esi]
  41f04f:	das    
  41f050:	jns    0x41f051
  41f052:	js     0x41f05a
  41f054:	inc    ecx
  41f055:	aam    0x27
  41f057:	sti    
  41f058:	xchg   edi,eax
  41f059:	jae    0x41f0aa
  41f05b:	add    BYTE PTR [ecx+0x44],cl
  41f05e:	push   ebp
  41f05f:	out    0x1f,eax
  41f061:	das    
  41f062:	arpl   WORD PTR [ebx+0x1b78090c],bp
  41f068:	in     al,0x18
  41f06a:	xchg   DWORD PTR [edi+esi*2],esp
  41f06d:	xchg   edi,eax
  41f06e:	fcmovnu st,st(4)
  41f070:	daa    
  41f071:	pop    es
  41f072:	add    BYTE PTR [ecx-0x379e168b],dl
  41f078:	mov    esp,0xd81c6cdd
  41f07d:	scas   al,BYTE PTR es:[edi]
  41f07e:	inc    ecx
  41f07f:	mov    BYTE PTR [esi+0x6a220af7],0x89
  41f086:	adc    DWORD PTR [ebx+edi*1],edx
  41f089:	mov    dl,0x2d
  41f08b:	jae    0x41f094
  41f08d:	jmp    0xe82d2bc
  41f092:	or     al,0x38
  41f094:	call   0xad0a:0xee5bfade
  41f09b:	mov    bl,0xfb
  41f09d:	setns  BYTE PTR [ecx-0x6851845a]
  41f0a4:	rcl    DWORD PTR [ebx+0x175918e9],0x5f
  41f0ab:	adc    BYTE PTR [edi],bl
  41f0ad:	or     ebx,DWORD PTR [edx+0x7f47f1ce]
  41f0b3:	test   DWORD PTR [ecx+0x13],0xc1fdd9b
  41f0ba:	scas   al,BYTE PTR es:[edi]
  41f0bb:	cmp    BYTE PTR ds:0x40445d0b,ah
  41f0c1:	clc    
  41f0c2:	dec    esp
  41f0c3:	test   eax,0x7e4fbfae
  41f0c8:	fcomp  DWORD PTR [eax+esi*1]
  41f0cb:	and    eax,0x5ab49e69
  41f0d0:	mov    esi,0x9d2ffe5f
  41f0d5:	addr16 call 0x3a12:0xb05ef4bb
  41f0dd:	dec    eax
  41f0de:	and    eax,0x474664e0
  41f0e3:	and    ebp,DWORD PTR [ebx+0x58]
  41f0e6:	iret   
  41f0e7:	or     DWORD PTR [edi+0x4029e237],edx
  41f0ed:	adc    BYTE PTR [ebp+0x5],0x23
  41f0f1:	jg     0x41f165
  41f0f3:	addr16 into 
  41f0f5:	sub    ah,BYTE PTR [ecx-0x4c]
  41f0f8:	aaa    
  41f0f9:	rol    DWORD PTR ds:0x59347102,0xd2
  41f100:	and    dh,BYTE PTR [ecx]
  41f102:	add    ebp,ebx
  41f104:	mov    al,ds:0x1633feb3
  41f109:	pusha  
  41f10a:	push   ebp
  41f10b:	pop    esi
  41f10c:	retf   0xa26a
  41f10f:	dec    ebx
  41f110:	loope  0x41f0d5
  41f112:	inc    edi
  41f113:	or     cl,dl
  41f115:	inc    ebp
  41f116:	enter  0x98d0,0x9a
  41f11a:	int    0x99
  41f11c:	retf   
  41f11d:	sub    cl,bh
  41f11f:	or     DWORD PTR [esi],eax
  41f121:	sti    
  41f122:	into   
  41f123:	push   edx
  41f124:	sub    eax,0x48035b53
  41f129:	mov    eax,0xb3def378
  41f12e:	sub    al,0x99
  41f130:	ret    
  41f131:	inc    ebx
  41f132:	sbb    DWORD PTR [esp+edx*8-0x3e],edi
  41f136:	sbb    BYTE PTR [ebx+0x5f],ah
  41f139:	adc    al,0x30
  41f13b:	pop    es
  41f13c:	xor    eax,ebx
  41f13e:	aad    0x66
  41f140:	mov    al,0x4c
  41f142:	aam    0xf8
  41f144:	(bad)  
  41f145:	popa   
  41f146:	mov    ebp,0xf4c937e8
  41f14b:	add    BYTE PTR [esi+0x33d8426c],bl
  41f151:	aam    0x8
  41f153:	sahf   
  41f154:	inc    esi
  41f155:	cmp    al,0xbb
  41f157:	mov    ch,0xb1
  41f159:	dec    ebx
  41f15a:	fadd   st(1),st
  41f15c:	loope  0x41f134
  41f15e:	cmp    eax,0xbc8b5bc3
  41f163:	adc    DWORD PTR [ebx],eax
  41f165:	dec    edi
  41f166:	ret    
  41f167:	ds std 
  41f169:	popa   
  41f16a:	das    
  41f16b:	pushf  
  41f16c:	jae    0x41f0fa
  41f16e:	jnp    0x41f0f9
  41f170:	add    ebp,eax
  41f172:	ss add eax,esi
  41f175:	mov    eax,0x3e3aab2a
  41f17a:	pop    es
  41f17b:	dec    ebp
  41f17c:	retf   
  41f17d:	xor    dl,BYTE PTR [ebx-0x71]
  41f180:	aam    0xd1
  41f182:	(bad)  
  41f183:	sbb    al,0x6c
  41f185:	sub    ebp,esi
  41f187:	outs   dx,BYTE PTR ds:[esi]
  41f188:	(bad)  
  41f189:	mov    ebp,0x82fcbf92
  41f18e:	sub    DWORD PTR [esi-0x31df7499],0x2
  41f195:	jmp    0xb3b5:0x5d72ca34
  41f19c:	jne    0x41f213
  41f19e:	je     0x41f156
  41f1a0:	sbb    esi,edi
  41f1a2:	xchg   esp,eax
  41f1a3:	icebp  
  41f1a4:	add    al,0x6e
  41f1a6:	fbstp  TBYTE PTR [eax+ecx*2-0x18]
  41f1aa:	pop    ebx
  41f1ab:	data16 lods al,BYTE PTR ds:[esi]
  41f1ad:	pop    ebp
  41f1ae:	or     BYTE PTR [esi+ecx*2+0x3c],dh
  41f1b2:	shr    BYTE PTR [ecx],0x41
  41f1b5:	popf   
  41f1b6:	arpl   bx,dx
  41f1b8:	mov    esi,0xe3177bc0
  41f1bd:	push   esi
  41f1be:	push   ds
  41f1bf:	or     eax,0x6c06689d
  41f1c4:	cmp    DWORD PTR [eax],ecx
  41f1c6:	sub    al,0x5e
  41f1c8:	cdq    
  41f1c9:	stc    
  41f1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1cb:	cdq    
  41f1cc:	repz sub DWORD PTR ds:0x45511f40,0x4c15cfed
  41f1d7:	push   ds
  41f1d8:	sbb    bh,BYTE PTR [edx+eiz*1+0x44]
  41f1dc:	scas   eax,DWORD PTR es:[edi]
  41f1dd:	dec    eax
  41f1de:	inc    edi
  41f1df:	mov    ecx,0x41dccc98
  41f1e4:	data16 sub al,0x79
  41f1e7:	mov    ch,0xed
  41f1e9:	ret    0xba34
  41f1ec:	outs   dx,DWORD PTR ds:[esi]
  41f1ed:	rcl    BYTE PTR [ebx-0x48],cl
  41f1f0:	test   BYTE PTR [eax+ecx*2+0x2],bh
  41f1f4:	pop    edi
  41f1f5:	jne    0x41f1c4
  41f1f7:	push   esi
  41f1f8:	and    DWORD PTR [eax-0x5b],0xe313320b
  41f1ff:	add    DWORD PTR [eax-0x55],edi
  41f202:	ja     0x41f188
  41f204:	push   cs
  41f205:	outs   dx,BYTE PTR ds:[esi]
  41f206:	cdq    
  41f207:	and    ch,BYTE PTR [edi-0x53]
  41f20a:	or     cl,dh
  41f20c:	dec    edx
  41f20d:	in     eax,0xf2
  41f20f:	inc    edx
  41f210:	xchg   DWORD PTR [ebx-0x5f],ebp
  41f213:	mov    esp,0xa7d4ab81
  41f218:	xchg   BYTE PTR [eax],dh
  41f21a:	dec    edx
  41f21b:	es sti 
  41f21d:	stc    
  41f21e:	add    ebp,DWORD PTR [edi]
  41f220:	and    BYTE PTR [ecx-0x42da5e50],bl
  41f226:	xor    al,0xbd
  41f228:	(bad)  
  41f229:	jecxz  0x41f28d
  41f22b:	jno    0x41f1e8
  41f22d:	mov    ecx,0xe6d8d252
  41f233:	add    DWORD PTR [edi-0x52],0x24
  41f237:	pop    es
  41f238:	jmp    0x41f247
  41f23a:	std    
  41f23b:	imul   esi,ecx,0xffffffbf
  41f23e:	stos   DWORD PTR es:[edi],eax
  41f23f:	push   edi
  41f240:	sbb    eax,ebp
  41f242:	mov    eax,ds:0xa32834fc
  41f247:	pop    ds
  41f248:	inc    ebx
  41f249:	fimul  DWORD PTR [ebp+0x34]
  41f24c:	or     ebx,DWORD PTR ds:0x8d427b3
  41f252:	pop    esi
  41f253:	mov    edi,DWORD PTR [edi+0x5d]
  41f256:	sub    esp,edi
  41f258:	cmc    
  41f259:	jmp    0x41f221
  41f25b:	not    DWORD PTR [edi-0x2b7a685f]
  41f261:	and    al,0xa1
  41f263:	rol    BYTE PTR ds:0x3f596cdb,1
  41f269:	or     ecx,DWORD PTR [edx+0x4d81f9c5]
  41f26f:	arpl   WORD PTR [eax+0x3d941579],sp
  41f275:	rcl    al,cl
  41f277:	push   0xd450c177
  41f27c:	jo     0x41f20b
  41f27e:	fsubr  DWORD PTR [esi+0x263690e4]
  41f284:	ret    0x4427
  41f287:	outs   dx,DWORD PTR ds:[esi]
  41f288:	cmp    eax,0xb8e31e61
  41f28d:	aam    0xd8
  41f28f:	retf   0xdff6
  41f292:	pop    ebp
  41f293:	sub    BYTE PTR [ecx+eiz*8],bh
  41f296:	jge    0x41f228
  41f298:	lods   eax,DWORD PTR ds:[esi]
  41f299:	pop    esi
  41f29a:	or     BYTE PTR [ebx+0x242e0e3a],dh
  41f2a0:	fnstcw WORD PTR [ecx-0x5b]
  41f2a3:	ds pusha 
  41f2a5:	pop    ds
  41f2a6:	adc    ah,bh
  41f2a8:	push   cs
  41f2a9:	inc    edx
  41f2aa:	outs   dx,BYTE PTR ds:[esi]
  41f2ab:	cmovg  ecx,ebx
  41f2ae:	xlat   BYTE PTR ds:[ebx]
  41f2af:	pop    cx
  41f2b1:	sbb    al,BYTE PTR [esi]
  41f2b3:	dec    esp
  41f2b4:	pop    ds
  41f2b5:	dec    ebx
  41f2b6:	adc    BYTE PTR [esi+ebx*2+0x2d794618],ah
  41f2bd:	adc    cl,BYTE PTR [eax]
  41f2bf:	push   ebp
  41f2c0:	xchg   ebx,eax
  41f2c1:	cmp    ecx,DWORD PTR [edi]
  41f2c3:	leave  
  41f2c4:	mov    es,WORD PTR [esi+0x54a2114]
  41f2ca:	cmp    DWORD PTR [eax+eiz*4+0x8],ebp
  41f2ce:	sbb    eax,0xfbfb6a10
  41f2d3:	fistp  DWORD PTR [esi-0x27ed75a7]
  41f2d9:	(bad)  
  41f2da:	fcom   QWORD PTR [edi-0x3809cb48]
  41f2e0:	into   
  41f2e1:	jmp    0xdb1c:0x4e5dfa6e
  41f2e8:	and    esi,DWORD PTR [ebx+eax*4+0x2cee5a3f]
  41f2ef:	xchg   esi,eax
  41f2f0:	cmp    al,0xbc
  41f2f2:	push   ss
  41f2f3:	push   eax
  41f2f4:	and    ch,ch
  41f2f6:	fstp   DWORD PTR [eax]
  41f2f8:	mov    ch,BYTE PTR [eax+0x4c]
  41f2fb:	mov    edi,DWORD PTR [edx+0x10]
  41f2fe:	int    0x26
  41f300:	sub    bh,BYTE PTR [ecx+0x27]
  41f303:	and    BYTE PTR [edx],bh
  41f305:	cmovne esi,DWORD PTR [ebx+0x22]
  41f309:	(bad)  
  41f30a:	xor    dh,ch
  41f30c:	cli    
  41f30d:	test   DWORD PTR [edi+0x48],edi
  41f310:	push   eax
  41f311:	sub    eax,0x8508e199
  41f316:	cmp    al,0xce
  41f318:	mov    eax,0x39b09eb2
  41f31d:	add    BYTE PTR [eax],al
  41f31f:	add    BYTE PTR [eax],al
  41f321:	add    BYTE PTR [ebx],ch
  41f323:	mov    eax,ds:0xf6cb1443
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	add    cl,0x21
  41f330:	jnp    0x41f39d
  41f332:	out    0x6d,al
  41f334:	add    DWORD PTR [eax],eax
  41f336:	repz add al,0x0
  41f339:	add    BYTE PTR [eax+0x28],ch
  41f33c:	pushf  
  41f33d:	inc    eax
  41f33e:	dec    eax
  41f33f:	jbe    0x41f3bb
  41f341:	mov    ebx,0x958352af
  41f346:	shl    dh,0xe3
  41f349:	out    0x99,eax
  41f34b:	mov    dl,0x48
  41f34d:	lods   eax,DWORD PTR ds:[esi]
  41f34e:	mov    edx,0x65c7db1f
  41f353:	lds    ecx,FWORD PTR [eax-0x33624636]
  41f359:	fild   QWORD PTR [edi]
  41f35b:	imul   DWORD PTR [eax+ebp*1-0x5d1a8884]
  41f362:	sub    bh,dl
  41f364:	out    dx,al
  41f365:	loop   0x41f31a
  41f367:	mov    BYTE PTR [edi+esi*2],al
  41f36a:	mov    WORD PTR [eax+edi*1+0x14b8ca76],es
  41f371:	iret   
  41f372:	xchg   ebx,eax
  41f373:	mov    ebp,0xbabaa5a7
  41f378:	jbe    0x41f3e2
  41f37a:	in     al,dx
  41f37b:	aaa    
  41f37c:	jo     0x41f3c0
  41f37e:	adc    eax,ebx
  41f380:	sti    
  41f381:	cdq    
  41f382:	nop
  41f383:	adc    eax,0xda8138dd
  41f388:	imul   ebp,edx,0x570ea43b
  41f38e:	jmp    0xd0c1bcc7
  41f393:	sub    al,0xca
  41f395:	dec    ebp
  41f396:	mov    eax,0x580167c4
  41f39b:	sbb    eax,0xa25d205
  41f3a0:	repz sbb bh,0xe3
  41f3a4:	fcomip st,st(5)
  41f3a6:	push   edx
  41f3a7:	jno    0x41f40e
  41f3a9:	loopne 0x41f3c7
  41f3ab:	bound  ebx,QWORD PTR [edx]
  41f3ad:	mov    bl,0x4
  41f3af:	imul   ebx,DWORD PTR [eax+0x5dfbf884],0x581e5d7b
  41f3b9:	jo     0x41f35d
  41f3bb:	xchg   ebx,eax
  41f3bc:	inc    ebx
  41f3bd:	cmp    BYTE PTR [ebx+0x5d4eaed2],cl
  41f3c3:	sbb    bl,BYTE PTR [edx+0x62]
  41f3c6:	or     DWORD PTR [ebx],esi
  41f3c8:	leave  
  41f3c9:	push   ss
  41f3ca:	inc    esp
  41f3cb:	inc    ebx
  41f3cc:	sti    
  41f3cd:	test   edi,edi
  41f3cf:	(bad)  
  41f3d0:	jmp    0x8655a8e2
  41f3d5:	test   DWORD PTR [eax+0xb],edx
  41f3d8:	mov    ebx,ds
  41f3da:	mov    al,ds:0x34de988
  41f3df:	inc    edi
  41f3e0:	fst    QWORD PTR [ecx+0x1]
  41f3e3:	cmp    edx,DWORD PTR [ebx]
  41f3e5:	jg     0x41f402
  41f3e7:	mov    bl,0xb1
  41f3e9:	add    ebp,DWORD PTR [edi+0x21]
  41f3ec:	mov    dl,0x4b
  41f3ee:	gs mov esp,0xf3766c1
  41f3f4:	mov    ch,0x8f
  41f3f6:	ss jbe 0x41f3a3
  41f3f9:	mov    dh,ch
  41f3fb:	jge    0x41f472
  41f3fd:	imul   BYTE PTR [edi-0x5]
  41f400:	hlt    
  41f401:	and    DWORD PTR [ebp-0x2d],eax
  41f404:	pusha  
  41f405:	jne    0x41f397
  41f407:	mov    al,0xc1
  41f409:	cmc    
  41f40a:	cmp    BYTE PTR [edi+0xd6ec0d0],ah
  41f410:	xor    ecx,DWORD PTR [eax]
  41f412:	mov    dl,BYTE PTR [ebp-0x6e]
  41f415:	pop    ecx
  41f416:	popa   
  41f417:	push   esp
  41f418:	and    eax,0x21fab903
  41f41d:	adc    al,0xa0
  41f41f:	push   0xffffffc7
  41f421:	push   ebx
  41f422:	ss cmp al,0x8f
  41f425:	sbb    BYTE PTR [edx+0x24c80e4a],bh
  41f42b:	sbb    eax,0x4b4aa538
  41f430:	xchg   esi,eax
  41f431:	xor    esp,edx
  41f433:	ins    DWORD PTR es:[edi],dx
  41f434:	in     al,0x9f
  41f436:	call   0xcfb441f3
  41f43b:	iret   
  41f43c:	mov    dh,BYTE PTR [ecx]
  41f43e:	sbb    BYTE PTR [eax-0x50],bh
  41f441:	stos   DWORD PTR es:[edi],eax
  41f442:	jae    0x41f3df
  41f444:	xchg   ebp,eax
  41f445:	and    al,0x1a
  41f447:	inc    edi
  41f448:	sbb    DWORD PTR [eax],eax
  41f44a:	cld    
  41f44b:	div    DWORD PTR [eax-0x41e84fcb]
  41f451:	push   edi
  41f452:	fcomi  st,st(3)
  41f454:	mov    bl,0x5a
  41f456:	jecxz  0x41f468
  41f458:	call   0xa20f3b9
  41f45d:	cmp    BYTE PTR [ebx+eiz*4+0x27],0x31
  41f462:	jno    0x41f44c
  41f464:	mov    ebx,0x39da5803
  41f469:	fcomp  QWORD PTR [ebx-0x6508607]
  41f46f:	(bad)  [edx+0x25e04711]
  41f475:	repz push 0xde025ed
  41f47b:	inc    eax
  41f47c:	push   ebx
  41f47d:	leave  
  41f47e:	ds jmp 0x993fc11a
  41f484:	sbb    bl,BYTE PTR [edx+0x59]
  41f487:	ret    
  41f488:	xlat   BYTE PTR ds:[ebx]
  41f489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f48a:	ss aam 0x4f
  41f48d:	lock jo 0x41f4c6
  41f490:	push   ebx
  41f491:	push   ecx
  41f492:	xchg   edi,eax
  41f493:	inc    edx
  41f494:	pop    esp
  41f495:	test   eax,ecx
  41f497:	lods   eax,DWORD PTR ds:[esi]
  41f498:	inc    ebx
  41f499:	xchg   DWORD PTR [ecx+0x685979f1],eax
  41f49f:	cdq    
  41f4a0:	pop    ss
  41f4a1:	dec    eax
  41f4a2:	inc    eax
  41f4a3:	into   
  41f4a4:	pop    esp
  41f4a5:	cld    
  41f4a6:	adc    DWORD PTR [ebp+0x14fc9aa9],ecx
  41f4ac:	icebp  
  41f4ad:	add    bh,BYTE PTR [ecx]
  41f4af:	in     eax,0x3a
  41f4b1:	addr16 jae 0x41f480
  41f4b4:	aad    0xad
  41f4b6:	aaa    
  41f4b7:	cld    
  41f4b8:	cwde   
  41f4b9:	cdq    
  41f4ba:	daa    
  41f4bb:	mov    ebp,0xd671c440
  41f4c0:	int3   
  41f4c1:	sbb    al,0x49
  41f4c3:	add    BYTE PTR [ebx+0x1b],ch
  41f4c6:	or     DWORD PTR [esi],esi
  41f4c8:	inc    ebp
  41f4c9:	int3   
  41f4ca:	xchg   ecx,eax
  41f4cb:	cmp    dl,BYTE PTR [edi]
  41f4cd:	shr    DWORD PTR [edi-0x6],cl
  41f4d0:	cwde   
  41f4d1:	inc    edi
  41f4d2:	cmp    bh,BYTE PTR [eax-0x75b6e3c]
  41f4d8:	sub    BYTE PTR [esi+ebx*4+0x6597df0f],al
  41f4df:	jg     0x41f49a
  41f4e1:	pop    ebp
  41f4e2:	jge    0x41f4e8
  41f4e4:	and    DWORD PTR ds:0x60db0b7e,ebp
  41f4ea:	add    esp,edx
  41f4ec:	dec    eax
  41f4ed:	fs inc eax
  41f4ef:	or     ch,bh
  41f4f1:	jge    0x41f48a
  41f4f3:	push   0x4f
  41f4f5:	(bad)  
  41f4f6:	jmp    0x4a8822d4
  41f4fb:	(bad)  
  41f4fc:	cmc    
  41f4fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4fe:	test   al,0x24
  41f500:	or     eax,0x83bce04
  41f505:	jecxz  0x41f509
  41f507:	mov    esp,0xc31240c4
  41f50c:	mov    ds:0x8a761de6,al
  41f511:	and    bl,ch
  41f513:	pop    esi
  41f514:	jecxz  0x41f562
  41f516:	jb     0x41f49d
  41f518:	add    bh,bl
  41f51a:	inc    eax
  41f51b:	mov    dh,0xed
  41f51d:	lock and al,0xd7
  41f520:	gs scas eax,DWORD PTR es:[edi]
  41f522:	fld    QWORD PTR [edi-0x40f2ceae]
  41f528:	add    DWORD PTR [esi],edi
  41f52a:	jbe    0x41f530
  41f52c:	mov    DWORD PTR [eax],esp
  41f52e:	inc    ecx
  41f52f:	jno    0x41f59d
  41f531:	ret    0x37bc
  41f534:	lods   eax,DWORD PTR ds:[esi]
  41f535:	imul   ebx,DWORD PTR [ebx],0xffffffc8
  41f538:	add    al,0x3d
  41f53b:	aam    0xad
  41f53d:	sar    BYTE PTR [ebx+0x11b27a08],0x65
  41f544:	sar    ebx,0x25
  41f547:	es jb  0x41f518
  41f54a:	and    edi,esi
  41f54c:	enter  0x80a7,0x9d
  41f550:	jmp    0x41f525
  41f552:	enter  0xab1c,0xb5
  41f556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f557:	addr16 cmp eax,0xabf8f97e
  41f55d:	aaa    
  41f55e:	xor    esi,eax
  41f560:	mov    edx,0x841d9004
  41f565:	or     BYTE PTR [ecx+0x4caa2aca],ch
  41f56b:	push   esp
  41f56c:	dec    esi
  41f56d:	jo     0x41f5e1
  41f56f:	lods   eax,DWORD PTR ds:[esi]
  41f570:	inc    eax
  41f571:	and    edi,DWORD PTR [ecx+0xe]
  41f574:	adc    BYTE PTR [eax],bl
  41f576:	sbb    esp,DWORD PTR [edi]
  41f578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f579:	add    edx,eax
  41f57b:	rcl    BYTE PTR [eax+0x30],cl
  41f57e:	xor    al,0x5f
  41f580:	out    0x5,al
  41f582:	jp     0x41f539
  41f584:	cmp    edx,DWORD PTR [edi-0x18]
  41f587:	jae    0x41f565
  41f589:	out    dx,eax
  41f58a:	mov    cl,0x1a
  41f58c:	ret    0x472
  41f58f:	inc    edi
  41f590:	div    dh
  41f592:	mov    ds:0xd7808ada,eax
  41f597:	ja     0x41f599
  41f599:	sub    ch,bh
  41f59b:	inc    esi
  41f59c:	ins    BYTE PTR es:[edi],dx
  41f59d:	aam    0x54
  41f59f:	mov    al,0x14
  41f5a1:	dec    eax
  41f5a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5a3:	mov    bl,BYTE PTR [edx-0x63f58c54]
  41f5a9:	lahf   
  41f5aa:	ffreep st(3)
  41f5ac:	aam    0x12
  41f5ae:	push   edx
  41f5af:	(bad)  
  41f5b0:	and    DWORD PTR [ebx+0x11],eax
  41f5b3:	mov    ebp,0x8667215b
  41f5b8:	ror    BYTE PTR [eax-0x6e8f5846],1
  41f5be:	repnz mov bl,0x4d
  41f5c1:	jmp    0x41f560
  41f5c3:	mov    edi,fs
  41f5c5:	ins    DWORD PTR es:[edi],dx
  41f5c6:	xlat   BYTE PTR ds:[ebx]
  41f5c7:	out    dx,eax
  41f5c8:	sar    BYTE PTR [esi],0x52
  41f5cb:	aaa    
  41f5cc:	cdq    
  41f5cd:	xor    ecx,DWORD PTR [edi-0x3a5a008]
  41f5d3:	fbld   TBYTE PTR [eax-0x75]
  41f5d6:	sti    
  41f5d7:	nop
  41f5d8:	in     eax,0xbf
  41f5da:	(bad)  
  41f5dc:	mov    edx,ebx
  41f5de:	sbb    BYTE PTR ds:0xec4bab67,bl
  41f5e4:	push   ss
  41f5e5:	fs or  al,0xde
  41f5e8:	inc    ecx
  41f5e9:	es push ss
  41f5eb:	sbb    esp,DWORD PTR [ecx+edi*2-0x6cd25764]
  41f5f2:	out    0xe6,al
  41f5f4:	leave  
  41f5f5:	nop
  41f5f6:	cdq    
  41f5f7:	sbb    al,BYTE PTR [ebp+edx*8+0x28]
  41f5fb:	in     eax,0xda
  41f5fd:	jno    0x41f66b
  41f5ff:	jno    0x41f66f
  41f601:	fwait
  41f602:	rcl    dl,0x9d
  41f605:	sbb    ecx,DWORD PTR [esi+0x53d0d8a8]
  41f60b:	jecxz  0x41f65c
  41f60d:	xor    eax,0x31b2c369
  41f612:	lock sub ch,ah
  41f615:	aad    0x7f
  41f617:	arpl   WORD PTR [edi+0x57],bp
  41f61a:	mov    al,0xe2
  41f61c:	lahf   
  41f61d:	lahf   
  41f61e:	fild   WORD PTR [ebx]
  41f620:	xor    eax,0x88481a2f
  41f625:	dec    esi
  41f626:	psrld  mm0,QWORD PTR [ebx+0x30]
  41f62a:	daa    
  41f62b:	xor    eax,0x2b112b48
  41f630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f631:	lods   eax,DWORD PTR ds:[esi]
  41f632:	or     dh,cl
  41f634:	(bad)  
  41f635:	je     0x41f686
  41f637:	sar    DWORD PTR [eax+eiz*8-0x58],cl
  41f63b:	mov    esi,0xfa203065
  41f640:	imul   BYTE PTR [ebp+0x34bb8869]
  41f646:	in     eax,0xa
  41f648:	xor    cl,bl
  41f64a:	dec    eax
  41f64b:	loop   0x41f66d
  41f64d:	sti    
  41f64e:	jp     0x41f69a
  41f650:	add    BYTE PTR [eax+0x55],cl
  41f653:	xchg   ebp,eax
  41f654:	mov    ecx,0x6d7a3daf
  41f659:	out    dx,eax
  41f65a:	sar    BYTE PTR [ebp-0x513d62c],0x6e
  41f661:	ja     0x41f6d8
  41f663:	test   BYTE PTR [edi+0x51],bh
  41f666:	jp     0x41f641
  41f668:	and    bh,BYTE PTR [edi]
  41f66a:	push   cs
  41f66b:	pop    ss
  41f66c:	mov    ebx,0x2b6df053
  41f671:	dec    esi
  41f672:	cmp    dl,BYTE PTR [ebx-0x6e42fd11]
  41f678:	and    BYTE PTR [edi],ch
  41f67a:	ins    BYTE PTR es:[edi],dx
  41f67b:	sti    
  41f67c:	cmp    al,cl
  41f67e:	rol    ch,0xe5
  41f681:	scas   eax,DWORD PTR es:[edi]
  41f682:	sub    eax,DWORD PTR [esi+0x42]
  41f685:	jne    0x41f6ac
  41f687:	fbstp  TBYTE PTR [eax]
  41f689:	or     BYTE PTR [edx+0x71],bh
  41f68c:	cmp    eax,0xe1032f4
  41f691:	mov    eax,ds:0x7b456bbe
  41f696:	cld    
  41f697:	mov    ebx,0x77edc638
  41f69c:	and    al,0xf2
  41f69e:	inc    ebx
  41f69f:	js     0x41f6a0
  41f6a1:	stos   BYTE PTR es:[edi],al
  41f6a2:	or     ch,BYTE PTR [ebx]
  41f6a4:	pop    es
  41f6a5:	loop   0x41f6e5
  41f6a7:	cmp    dh,BYTE PTR [esi]
  41f6a9:	fldcw  WORD PTR [eax]
  41f6ab:	int3   
  41f6ac:	mov    edi,0x96f7288e
  41f6b1:	mov    edx,0xc4003542
  41f6b6:	dec    ebp
  41f6b7:	xchg   ebp,eax
  41f6b8:	xor    BYTE PTR [eax+0x26],0x65
  41f6bc:	jno    0x41f697
  41f6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6bf:	mov    dl,BYTE PTR [edi]
  41f6c1:	icebp  
  41f6c2:	sub    esp,ecx
  41f6c4:	outs   dx,BYTE PTR ds:[esi]
  41f6c5:	jg     0x41f70c
  41f6c7:	mov    edx,0x90d77cc9
  41f6cc:	in     eax,dx
  41f6cd:	push   ebx
  41f6ce:	inc    esp
  41f6cf:	or     eax,0xc1e83a55
  41f6d4:	and    esp,0x5b9b8e48
  41f6da:	mov    eax,0xd0e8e6ff
  41f6df:	mov    edx,DWORD PTR [edx+0x62359b56]
  41f6e5:	sbb    ebx,DWORD PTR [ecx-0x66]
  41f6e8:	push   eax
  41f6e9:	adc    ebp,DWORD PTR [edx-0x27]
  41f6ec:	lock sti 
  41f6ee:	inc    ecx
  41f6ef:	fcmovb st,st(5)
  41f6f1:	fild   WORD PTR [edi]
  41f6f3:	outs   dx,DWORD PTR ds:[esi]
  41f6f4:	xor    eax,0x6a0682ac
  41f6f9:	fld    QWORD PTR [ebx-0x5e]
  41f6fc:	dec    ecx
  41f6fd:	add    ecx,eax
  41f6ff:	cmp    DWORD PTR [esi],ebp
  41f701:	jecxz  0x41f6aa
  41f703:	rol    DWORD PTR [ecx-0x78],1
  41f706:	inc    edx
  41f707:	scas   al,BYTE PTR es:[edi]
  41f708:	ror    ecx,1
  41f70a:	add    BYTE PTR [esi],bl
  41f70c:	jns    0x41f693
  41f70e:	cmp    esp,edi
  41f710:	pop    edi
  41f711:	les    eax,FWORD PTR [edi]
  41f713:	inc    ebp
  41f714:	(bad)  
  41f715:	mov    esi,0x43d0a867
  41f71a:	jecxz  0x41f72a
  41f71c:	jne    0x41f6fe
  41f71e:	ret    0xefe7
  41f721:	sbb    BYTE PTR [edi+0x7f3c2d48],0xf5
  41f728:	loope  0x41f6ea
  41f72a:	mov    edx,DWORD PTR [ecx+0x30]
  41f72d:	into   
  41f72e:	mov    bh,0xec
  41f730:	jmp    0x41f727
  41f732:	fs ret 0x6fd0
  41f736:	addr16 ja 0x41f75c
  41f739:	jnp    0x41f6bb
  41f73b:	fwait
  41f73c:	sub    eax,0x1b9ef2ea
  41f741:	jle    0x41f7ba
  41f743:	adc    eax,0x90a7c324
  41f748:	in     al,0x9a
  41f74a:	loopne 0x41f7a7
  41f74c:	or     ecx,DWORD PTR [edi+eiz*1+0x4919491d]
  41f753:	in     al,0x3b
  41f755:	enter  0x53e,0x5a
  41f759:	xor    bh,BYTE PTR [edx-0x3b37573e]
  41f75f:	mov    eax,ds:0x6feed466
  41f764:	or     DWORD PTR [ebx-0xc],0x3d
  41f768:	jmp    0x18a32721
  41f76d:	inc    ebx
  41f76e:	jae    0x41f724
  41f770:	xor    al,0x4d
  41f772:	jge    0x41f745
  41f774:	lock cmc 
  41f776:	xchg   BYTE PTR ds:[ebx],ch
  41f779:	rcr    DWORD PTR [eax+0x589438af],cl
  41f77f:	and    eax,0x2865c873
  41f784:	(bad)  
  41f785:	aad    0x72
  41f787:	repz adc edx,DWORD PTR [eax+esi*1-0x51d03b87]
  41f78f:	jmp    0x8b8e7be9
  41f794:	adc    DWORD PTR [edx],eax
  41f796:	arpl   si,bp
  41f798:	jl     0x41f736
  41f79a:	nop    ebx
  41f79d:	jns    0x41f728
  41f79f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7a0:	cmp    esi,DWORD PTR [ebp+0x3f8cf89f]
  41f7a6:	sahf   
  41f7a7:	dec    esp
  41f7a8:	xchg   ebp,eax
  41f7a9:	cmp    al,ch
  41f7ab:	mov    bh,0x6
  41f7ad:	adc    eax,0x8ec66c3d
  41f7b2:	sub    DWORD PTR [ebx+ebx*4-0x7137ada9],0x6e
  41f7ba:	and    dh,dl
  41f7bc:	mov    esi,0xc2030dc9
  41f7c1:	out    0x21,eax
  41f7c3:	lods   eax,DWORD PTR ds:[esi]
  41f7c4:	les    esi,FWORD PTR [edx+ecx*2-0x342a02f7]
  41f7cb:	sub    ebx,DWORD PTR [eax]
  41f7cd:	test   DWORD PTR [edx+0x1a2cdeff],edi
  41f7d3:	mov    ebp,0x8d52074c
  41f7d8:	mov    BYTE PTR [ebp-0x77],0xa0
  41f7dc:	xchg   esp,eax
  41f7dd:	inc    ebx
  41f7de:	je     0x41f7ff
  41f7e0:	(bad)  
  41f7e1:	xchg   ebp,eax
  41f7e2:	ins    BYTE PTR es:[edi],dx
  41f7e3:	lds    esi,FWORD PTR [ebx]
  41f7e5:	and    eax,DWORD PTR [esi]
  41f7e7:	(bad)  
  41f7e8:	lock je 0x41f7cd
  41f7eb:	pop    edx
  41f7ec:	call   0xe97d:0xd7fe99fb
  41f7f3:	dec    ebp
  41f7f4:	sbb    ebx,DWORD PTR [ebx]
  41f7f6:	cwde   
  41f7f7:	retf   0xb281
  41f7fa:	xor    eax,0xdd09c667
  41f7ff:	adc    BYTE PTR [bx],0xb9
  41f803:	cs dec esp
  41f805:	into   
  41f806:	sub    DWORD PTR [ebx],0xffffff9d
  41f809:	jl     0x41f7e3
  41f80b:	in     eax,dx
  41f80c:	or     BYTE PTR [eax-0x2f45fbcc],0x98
  41f813:	push   0xffffffe2
  41f815:	aam    0x6c
  41f817:	jle    0x41f864
  41f819:	adc    eax,0x3338a6e1
  41f81e:	sub    DWORD PTR [eax-0x2cd3782b],eax
  41f824:	fbld   TBYTE PTR [ecx+0x11]
  41f827:	add    edi,0xffffff9f
  41f82a:	fidivr WORD PTR [ebx+0xa]
  41f830:	add    BYTE PTR [eax],al
  41f832:	dec    eax
  41f833:	mul    BYTE PTR fs:[eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	(bad)
  41f841:	pop    ds
  41f842:	fnstenv [edx+0x1]
  41f845:	add    bl,dh
  41f847:	add    al,0x0
  41f849:	add    bl,ch
  41f84b:	sbb    al,bl
  41f84d:	add    eax,0x1d38528e
  41f852:	daa    
  41f853:	mov    ebp,0x5c5274c7
  41f858:	cmp    DWORD PTR [ebp-0x66],0x125a915b
  41f85f:	inc    ebx
  41f860:	adc    al,0xd5
  41f862:	shl    DWORD PTR [ebx-0x63a759e4],cl
  41f868:	aas    
  41f869:	pop    ecx
  41f86a:	cmp    BYTE PTR [ebx+0x22],bl
  41f86d:	and    dh,BYTE PTR [ecx+0x4]
  41f870:	push   ebx
  41f871:	push   ebx
  41f872:	jae    0x41f865
  41f874:	ins    BYTE PTR es:[edi],dx
  41f875:	sub    ah,dl
  41f877:	and    al,0xe0
  41f879:	jb     0x41f815
  41f87b:	push   edi
  41f87c:	xchg   esi,eax
  41f87d:	mov    ss,WORD PTR [edi-0x5a]
  41f880:	cmp    al,0xc6
  41f882:	sub    al,0xd8
  41f884:	or     ch,bl
  41f886:	and    al,0x7f
  41f889:	dec    esi
  41f88a:	jae    0x41f810
  41f88c:	inc    edi
  41f88d:	shl    BYTE PTR [eax+esi*4],1
  41f890:	xchg   esi,eax
  41f891:	xor    eax,0xd2084736
  41f896:	dec    DWORD PTR [esi+0x36b3d6fc]
  41f89c:	pop    ds
  41f89d:	xchg   esp,eax
  41f89e:	aad    0x25
  41f8a0:	jg     0x41f909
  41f8a2:	adc    ebx,DWORD PTR [ebp+0x31a49ec4]
  41f8a8:	add    ebp,DWORD PTR [ecx-0x720f90da]
  41f8ae:	mov    dh,0x73
  41f8b0:	mov    al,0xfe
  41f8b2:	inc    ecx
  41f8b3:	inc    esp
  41f8b4:	pop    ecx
  41f8b5:	push   es
  41f8b6:	fldenv [ebp+eiz*4-0x80]
  41f8ba:	int    0x86
  41f8bc:	fcmove st,st(6)
  41f8be:	adc    eax,0x6f2d89ff
  41f8c3:	repz or BYTE PTR [ebp+0x15],bl
  41f8c7:	lahf   
  41f8c8:	pop    edx
  41f8c9:	fs popf 
  41f8cb:	push   cs
  41f8cc:	add    al,0x17
  41f8ce:	xchg   edi,eax
  41f8cf:	xchg   esi,eax
  41f8d0:	test   eax,0x211133aa
  41f8d5:	popa   
  41f8d6:	xchg   esi,eax
  41f8d7:	icebp  
  41f8d8:	in     eax,dx
  41f8d9:	shl    al,1
  41f8db:	shl    BYTE PTR [ebx-0x7116b2f5],0x76
  41f8e2:	mov    ecx,0x9d055c0
  41f8e7:	in     al,0x40
  41f8e9:	xor    bl,0x6f
  41f8ec:	pop    ecx
  41f8ed:	mov    bl,BYTE PTR [esp+eiz*8]
  41f8f0:	jecxz  0x41f962
  41f8f2:	jmp    0xba86:0x50e5735f
  41f8f9:	in     al,0xb8
  41f8fb:	jo     0x41f8e8
  41f8fd:	or     eax,0xee30463
  41f902:	or     edx,DWORD PTR [edi]
  41f904:	imul   ebp,edx,0xffffff80
  41f907:	into   
  41f908:	fisttp DWORD PTR [ebp+0x7091b037]
  41f90e:	ss jnp 0x41f937
  41f911:	(bad)  
  41f912:	pop    si
  41f914:	aas    
  41f915:	fld    st(0)
  41f917:	mov    DWORD PTR [esi+edi*8-0x14],eax
  41f91b:	inc    esp
  41f91c:	addr16 dec ecx
  41f91e:	jle    0x41f997
  41f920:	cwde   
  41f921:	and    esp,DWORD PTR [edi]
  41f923:	sbb    al,0x8d
  41f925:	push   ebp
  41f926:	inc    esp
  41f927:	jae    0x41f8de
  41f929:	push   esp
  41f92a:	xor    edi,DWORD PTR [ecx+eax*4-0x6d]
  41f92e:	mov    ah,0x9f
  41f930:	sub    al,0xde
  41f932:	jns    0x41f9a0
  41f934:	in     al,0xa5
  41f936:	loope  0x41f92b
  41f938:	lods   al,BYTE PTR ds:[esi]
  41f939:	dec    esp
  41f93a:	jo     0x41f937
  41f93c:	push   DWORD PTR [edi]
  41f93e:	movzx  ebx,WORD PTR [ebp-0x7a]
  41f942:	sub    bh,dl
  41f944:	aam    0xc6
  41f946:	sbb    DWORD PTR [eax+edx*2-0x37d816a0],ebp
  41f94d:	push   0x46
  41f94f:	sub    eax,0xb76fa939
  41f954:	adc    dl,BYTE PTR [ebx]
  41f956:	in     eax,dx
  41f957:	adc    eax,0xd6708c6a
  41f95c:	jg     0x41f945
  41f95e:	mov    ah,0xae
  41f960:	mov    edi,0x245d7039
  41f965:	or     DWORD PTR [edx+0xf113176],eax
  41f96b:	neg    edi
  41f96d:	jge    0x41f8f6
  41f96f:	push   es
  41f970:	outs   dx,DWORD PTR ds:[esi]
  41f971:	lods   al,BYTE PTR ds:[esi]
  41f972:	mov    ah,0x53
  41f974:	or     DWORD PTR [esi+0x66],esi
  41f977:	push   0x80dbcde3
  41f97c:	in     eax,0x47
  41f97e:	fst    st(5)
  41f980:	jns    0x41f9fb
  41f982:	jp     0x41f958
  41f984:	scas   eax,DWORD PTR es:[edi]
  41f985:	push   edi
  41f986:	mov    WORD PTR [ebx+0x44],?
  41f989:	xor    DWORD PTR [eax-0x18],esi
  41f98c:	mov    DWORD PTR [ebp+0x2a2022e5],esi
  41f992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f993:	addr16 mov ds:0x22a0,eax
  41f997:	hlt    
  41f998:	add    al,0xd6
  41f99a:	xchg   esi,eax
  41f99b:	inc    esp
  41f99c:	mov    al,ch
  41f99e:	xor    dh,BYTE PTR [ecx+0x7b]
  41f9a1:	xchg   esi,eax
  41f9a2:	popa   
  41f9a3:	jmp    DWORD PTR [edx]
  41f9a5:	or     DWORD PTR [esi],ecx
  41f9a7:	xchg   esi,eax
  41f9a8:	jge    0x41f930
  41f9aa:	mov    al,ah
  41f9ac:	out    dx,eax
  41f9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ae:	cmp    al,0x4b
  41f9b0:	shl    DWORD PTR [ebx],1
  41f9b2:	icebp  
  41f9b3:	inc    ebp
  41f9b4:	mov    al,ds:0xd37f4282
  41f9b9:	sbb    eax,0x6a8de004
  41f9be:	imul   esp,DWORD PTR [ecx+0x28],0xc9a24c1a
  41f9c5:	ss in  al,0x16
  41f9c8:	xchg   esp,eax
  41f9c9:	retf   0xaff0
  41f9cc:	ret    
  41f9cd:	test   al,0x32
  41f9cf:	add    eax,0xe130a972
  41f9d4:	dec    esi
  41f9d5:	aam    0x1c
  41f9d7:	push   eax
  41f9d8:	lea    ebp,[esi+0x3]
  41f9db:	hlt    
  41f9dc:	xor    ah,BYTE PTR [ebx+0x3c7d6eb0]
  41f9e2:	ins    BYTE PTR es:[edi],dx
  41f9e3:	repz push eax
  41f9e5:	lds    esi,FWORD PTR [ecx-0x11dcb0a1]
  41f9eb:	push   cs
  41f9ec:	mov    edi,0xdd8f88eb
  41f9f1:	jae    0x41f9f3
  41f9f3:	cld    
  41f9f4:	or     ch,dl
  41f9f6:	aad    0x96
  41f9f8:	jl     0x41f9af
  41f9fa:	add    dh,BYTE PTR [ecx+0x927bd66]
  41fa00:	data16 das 
  41fa02:	mov    ebx,0xcdcc3867
  41fa07:	retf   
  41fa08:	or     eax,0x54e7fbe1
  41fa0d:	sub    al,0xc0
  41fa0f:	dec    ebx
  41fa10:	xor    DWORD PTR [eax],esi
  41fa12:	add    bh,BYTE PTR [esi]
  41fa14:	call   0x5ee:0xb7701547
  41fa1b:	xchg   ecx,eax
  41fa1c:	in     al,dx
  41fa1d:	pop    es
  41fa1e:	sbb    eax,0x527fdf1a
  41fa23:	loope  0x41f9a5
  41fa25:	nop
  41fa26:	dec    ebx
  41fa27:	pop    eax
  41fa28:	jns    0x41fa32
  41fa2a:	into   
  41fa2b:	sub    DWORD PTR [eax+0x76],ebp
  41fa2e:	hlt    
  41fa2f:	inc    edi
  41fa30:	retf   
  41fa31:	test   al,0x2e
  41fa33:	cld    
  41fa34:	pop    di
  41fa36:	mov    ch,0xe6
  41fa38:	xchg   edi,eax
  41fa39:	and    dl,cl
  41fa3b:	shl    BYTE PTR [edx],cl
  41fa3d:	outs   dx,BYTE PTR ds:[esi]
  41fa3e:	je     0x3b0fc703
  41fa44:	test   al,0xbd
  41fa46:	addr16 pushf 
  41fa48:	sti    
  41fa49:	enter  0x959b,0x33
  41fa4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa4e:	imul   edx,DWORD PTR [edi-0x1f],0xffffffda
  41fa52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa53:	mov    esi,0x57a27a84
  41fa58:	xchg   BYTE PTR [esi+0x2c9ebdbe],ch
  41fa5e:	sub    edx,ebp
  41fa60:	out    dx,al
  41fa61:	and    DWORD PTR [ecx],ebx
  41fa63:	call   0x9e06b95c
  41fa68:	inc    ebp
  41fa69:	mov    fs,WORD PTR [edx+0x40]
  41fa6c:	jno    0x41fa82
  41fa6e:	stos   DWORD PTR es:[edi],eax
  41fa6f:	mov    eax,0xbe5567a2
  41fa74:	rcr    DWORD PTR [edx-0x3c],cl
  41fa77:	ror    ah,1
  41fa79:	pop    esi
  41fa7a:	and    bh,BYTE PTR [ebx+0x58]
  41fa7d:	into   
  41fa7e:	sti    
  41fa7f:	mov    ch,0x83
  41fa81:	jae    0x41fa52
  41fa83:	mul    BYTE PTR [esi+0x6d965161]
  41fa89:	gs mov bh,0x4f
  41fa8c:	pop    es
  41fa8d:	fsub   QWORD PTR [ebx+edi*2+0xf]
  41fa91:	jmp    0x48f3bca0
  41fa96:	loopne 0x41fa79
  41fa98:	xchg   esi,eax
  41fa99:	inc    eax
  41fa9a:	push   0x63310da9
  41fa9f:	mov    al,0x7a
  41faa1:	scas   al,BYTE PTR es:[edi]
  41faa2:	dec    ebx
  41faa3:	call   0xe356:0x6e56c84
  41faaa:	xor    ebx,DWORD PTR [ebx-0x4e]
  41faad:	jne    0x41fac0
  41faaf:	sbb    eax,0x1d74f23c
  41fab4:	shr    dh,cl
  41fab6:	outs   dx,BYTE PTR ds:[esi]
  41fab7:	mov    ebp,0x179a49f1
  41fabc:	add    esp,edx
  41fabe:	retf   
  41fabf:	mov    dh,0xd1
  41fac1:	iret   
  41fac2:	cli    
  41fac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fac4:	icebp  
  41fac5:	int    0xf7
  41fac7:	jecxz  0x41fa69
  41fac9:	loop   0x41fb3d
  41facb:	and    al,0xcd
  41facd:	inc    ebp
  41face:	cmc    
  41facf:	dec    DWORD PTR [ecx+0x68261818]
  41fad5:	lods   al,BYTE PTR ds:[esi]
  41fad6:	hlt    
  41fad7:	clc    
  41fad8:	fs call 0x1ea76fec
  41fade:	add    al,0x3a
  41fae0:	mov    ch,BYTE PTR [ebx-0x59]
  41fae3:	xchg   esi,eax
  41fae4:	clc    
  41fae5:	and    eax,0x27e5f582
  41faea:	xchg   DWORD PTR [ebx+0x10],eax
  41faed:	cmc    
  41faee:	in     al,dx
  41faef:	aam    0x87
  41faf1:	test   al,0xfb
  41faf3:	ins    DWORD PTR es:[edi],dx
  41faf4:	cwde   
  41faf5:	(bad)  
  41faf7:	adc    bl,bl
  41faf9:	or     ebx,DWORD PTR [esi]
  41fafb:	or     BYTE PTR [ebx],ah
  41fafd:	shr    BYTE PTR [edi-0x48],cl
  41fb00:	loop   0x41fb45
  41fb02:	push   0x82d5beb0
  41fb07:	mov    DWORD PTR [ebx+edi*2-0x3e],ecx
  41fb0b:	cmp    esp,DWORD PTR [edx]
  41fb0d:	and    ebp,DWORD PTR [ecx+0x16]
  41fb10:	xor    BYTE PTR [edi-0x23535bd1],al
  41fb16:	mov    ds:0x3d7094f5,al
  41fb1b:	std    
  41fb1c:	fwait
  41fb1d:	xchg   ebx,eax
  41fb1e:	fst    QWORD PTR [eax]
  41fb20:	and    eax,0xcda2f111
  41fb25:	or     ch,BYTE PTR [ebp+eax*8+0x6f]
  41fb29:	sub    DWORD PTR [edx-0xd],esp
  41fb2c:	xchg   DWORD PTR [edi],edi
  41fb2e:	jmp    0x41fb69
  41fb30:	sub    DWORD PTR [edi+0xb],ebp
  41fb33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb34:	adc    al,0x5d
  41fb36:	add    ebx,DWORD PTR [edx-0x7c74a1a]
  41fb3c:	mov    ebx,DWORD PTR [edx+eiz*1]
  41fb3f:	inc    esi
  41fb40:	sub    al,0x1d
  41fb42:	jae    0x41fb90
  41fb44:	sbb    BYTE PTR [edi+0x4b],dl
  41fb47:	clc    
  41fb48:	push   edi
  41fb49:	xor    DWORD PTR [edx-0x36dd0ed6],ebp
  41fb4f:	ret    
  41fb50:	stos   BYTE PTR es:[edi],al
  41fb51:	jmp    0xed4a:0xe0b0873c
  41fb58:	imul   ebp,DWORD PTR [esi-0x6aad0aa6],0x2dc739bb
  41fb62:	hlt    
  41fb63:	push   ecx
  41fb64:	sbb    al,0xef
  41fb66:	mov    cl,0x64
  41fb68:	jmp    0xbf00:0x93f521f5
  41fb6f:	lock out 0xe0,eax
  41fb72:	cld    
  41fb73:	adc    al,0x30
  41fb75:	xor    BYTE PTR [ebx+0x71d2baa4],0x2d
  41fb7c:	add    al,0xf2
  41fb7e:	pop    ebx
  41fb7f:	adc    ebx,DWORD PTR [edi+0x1]
  41fb82:	fbld   TBYTE PTR [ecx-0x416d16da]
  41fb88:	adc    eax,0xfabe9b06
  41fb8d:	outs   dx,DWORD PTR ds:[esi]
  41fb8e:	repz rcl DWORD PTR [ebx],0x93
  41fb92:	dec    ebx
  41fb93:	lahf   
  41fb94:	js     0x41fba1
  41fb96:	pop    edi
  41fb97:	inc    esi
  41fb98:	pop    es
  41fb99:	repnz dec ecx
  41fb9b:	aad    0x27
  41fb9d:	bound  ebx,QWORD PTR [ebp-0x3ca30cee]
  41fba3:	and    eax,ebx
  41fba5:	mov    ebx,0xf0b54020
  41fbaa:	loope  0x41fb8e
  41fbac:	inc    eax
  41fbad:	push   eax
  41fbae:	dec    eax
  41fbaf:	test   DWORD PTR [esi+0x37],esp
  41fbb2:	or     bh,BYTE PTR [edx+0x4d]
  41fbb5:	push   cs
  41fbb6:	cmp    DWORD PTR [ecx+0x79],0xffffff98
  41fbba:	adc    dl,dl
  41fbbc:	push   eax
  41fbbd:	jg     0x41fb83
  41fbbf:	inc    edx
  41fbc0:	pop    ebp
  41fbc1:	stc    
  41fbc2:	xor    edi,DWORD PTR [ecx-0x1f254327]
  41fbc8:	shr    BYTE PTR [ebp+0x6ae17d94],cl
  41fbce:	push   eax
  41fbcf:	loope  0x41fb6c
  41fbd1:	mov    dh,0xcb
  41fbd3:	inc    ebp
  41fbd4:	fsubr  DWORD PTR [ecx+0x6b0fe3b5]
  41fbda:	xor    DWORD PTR [ebx+0x7f],ebx
  41fbdd:	cmp    bh,BYTE PTR [eax+0x58]
  41fbe0:	gs mov cl,0xd3
  41fbe3:	pop    ds
  41fbe4:	mov    al,ds:0x63647d8e
  41fbe9:	aam    0x2f
  41fbeb:	scas   eax,DWORD PTR es:[edi]
  41fbec:	std    
  41fbed:	fst    QWORD PTR [edx+0x14]
  41fbf0:	les    esi,FWORD PTR [ebx-0x2f489967]
  41fbf6:	daa    
  41fbf7:	sub    DWORD PTR [ebx+eax*8],edi
  41fbfa:	jp     0x41fb8d
  41fbfc:	das    
  41fbfd:	ss out dx,al
  41fbff:	shr    BYTE PTR [edx+eax*2+0x6298b02e],0xf0
  41fc07:	(bad)  
  41fc08:	mov    ds:0x5e018cab,al
  41fc0d:	push   es
  41fc0e:	cmp    DWORD PTR [edi],ecx
  41fc10:	xlat   BYTE PTR ds:[ebx]
  41fc11:	data16 cli 
  41fc13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc14:	sub    DWORD PTR [edi-0x40456fbe],ecx
  41fc1a:	mov    cl,0xf8
  41fc1c:	sub    DWORD PTR [edi],ebx
  41fc1e:	jo     0x41fbec
  41fc20:	pop    edi
  41fc21:	mov    ebp,0xdb1011c1
  41fc26:	fiadd  DWORD PTR [esi]
  41fc28:	outs   dx,DWORD PTR ds:[esi]
  41fc29:	add    al,0x82
  41fc2b:	and    eax,0x2215d8ee
  41fc30:	in     eax,0x31
  41fc32:	arpl   WORD PTR [ebp-0x326111e5],ax
  41fc38:	jnp    0x41fc35
  41fc3a:	dec    esp
  41fc3b:	sbb    BYTE PTR [ecx+0x71],cl
  41fc3e:	mov    ds,WORD PTR ds:0x78c2f039
  41fc44:	or     DWORD PTR [ecx-0x6a8e8fb],ecx
  41fc4a:	and    BYTE PTR [esi-0x36e8cf3c],dh
  41fc50:	shr    cl,0x9b
  41fc53:	out    0x62,al
  41fc55:	jno    0x41fc83
  41fc57:	inc    eax
  41fc58:	xchg   DWORD PTR [esi+0x6083a686],eax
  41fc5e:	inc    esp
  41fc5f:	dec    esi
  41fc60:	dec    esi
  41fc61:	outs   dx,DWORD PTR ds:[esi]
  41fc62:	leave  
  41fc63:	int    0x15
  41fc65:	inc    ebp
  41fc66:	fwait
  41fc67:	jmp    FWORD PTR [edx+0x7c66428a]
  41fc6d:	fidivr DWORD PTR [ecx-0x3c]
  41fc70:	mov    bh,0x37
  41fc72:	or     al,0xc4
  41fc74:	mov    cl,0xfb
  41fc76:	imul   ebp,DWORD PTR [edx],0x12
  41fc79:	adc    bh,ah
  41fc7b:	xchg   DWORD PTR [edx+edi*2-0x6be2a263],edx
  41fc82:	jg     0x41fc3d
  41fc84:	jmp    0x41fca4
  41fc86:	and    al,0x42
  41fc88:	shl    DWORD PTR [ebp+0x37220044],0x88
  41fc8f:	xor    DWORD PTR [edi+0x21],esi
  41fc92:	pusha  
  41fc93:	nop
  41fc94:	ins    DWORD PTR es:[edi],dx
  41fc95:	push   edx
  41fc96:	cmp    BYTE PTR [ebx],cl
  41fc98:	inc    esi
  41fc99:	sub    al,0xe8
  41fc9b:	push   eax
  41fc9c:	sbb    al,0x96
  41fc9e:	clc    
  41fc9f:	pop    ebp
  41fca0:	call   0xfd00:0xe432c4b8
  41fca7:	push   edi
  41fca8:	ins    DWORD PTR es:[edi],dx
  41fca9:	stos   DWORD PTR es:[edi],eax
  41fcaa:	mov    ch,0xb2
  41fcac:	shr    ecx,1
  41fcae:	jbe    0x41fd0a
  41fcb0:	test   DWORD PTR [eax],esp
  41fcb2:	mov    cl,0xcb
  41fcb4:	sub    BYTE PTR [ebp-0x1512c3d5],dl
  41fcba:	ins    DWORD PTR es:[edi],dx
  41fcbb:	(bad)  
  41fcbc:	xor    al,0xae
  41fcbe:	clc    
  41fcbf:	xor    al,0xc9
  41fcc1:	sbb    al,0x95
  41fcc3:	rcr    BYTE PTR [esi+0x1f8a3925],0xef
  41fcca:	mov    cl,0xa8
  41fccc:	div    DWORD PTR [edx+0x5f]
  41fccf:	xor    DWORD PTR [ecx],ebp
  41fcd1:	fild   WORD PTR [esi+0x2c]
  41fcd4:	(bad)  ds:0x1823c28f
  41fcda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcdb:	lods   al,BYTE PTR ds:[esi]
  41fcdc:	push   ecx
  41fcdd:	gs xchg ebx,eax
  41fcdf:	out    dx,eax
  41fce0:	pop    ds
  41fce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fce2:	push   eax
  41fce3:	cmp    al,BYTE PTR [esi]
  41fce5:	das    
  41fce6:	loope  0x41fcf2
  41fce8:	push   esi
  41fce9:	fs cld 
  41fceb:	xchg   ebx,eax
  41fcec:	je     0x41fd0c
  41fcee:	jb     0x41fcdd
  41fcf0:	cmovbe edx,ecx
  41fcf3:	ds pop edi
  41fcf5:	xchg   edx,eax
  41fcf6:	xchg   edi,eax
  41fcf7:	cwde   
  41fcf8:	call   0x455a:0x5706c87c
  41fcff:	out    0x5f,eax
  41fd01:	imul   esp,DWORD PTR [esi-0x5d780f39],0x2c
  41fd08:	push   ecx
  41fd09:	push   ebx
  41fd0a:	sub    DWORD PTR [edx-0x754bb021],edx
  41fd10:	pop    eax
  41fd11:	aad    0x2d
  41fd13:	js     0x41fcfa
  41fd15:	dec    dx
  41fd17:	in     al,dx
  41fd18:	xchg   esp,esp
  41fd1a:	rcr    DWORD PTR [edi-0x4f],cl
  41fd1d:	jp     0x41fcc4
  41fd1f:	ds dec ebp
  41fd21:	push   edi
  41fd22:	nop
  41fd23:	outs   dx,DWORD PTR ds:[esi]
  41fd24:	ins    BYTE PTR es:[edi],dx
  41fd25:	jle    0x41fd5d
  41fd27:	imul   ecx,edx,0x5f
  41fd2a:	push   cs
  41fd2b:	xchg   edx,eax
  41fd2c:	test   BYTE PTR [ebx+0x1bcab706],ch
  41fd32:	rcl    eax,0x46
  41fd35:	adc    ch,0x99
  41fd38:	mov    edx,0xee1266bc
  41fd3d:	add    BYTE PTR [eax],al
  41fd3f:	add    BYTE PTR [eax],al
  41fd41:	add    BYTE PTR [edx-0x48ec49e9],ah
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi+0x20cb43dc],dh
  41fd51:	pop    ebp
  41fd52:	int3   
  41fd53:	ja     0x41fd56
  41fd55:	add    bl,dh
  41fd57:	add    al,0x0
  41fd59:	add    BYTE PTR [edx],cl
  41fd5b:	inc    edx
  41fd5c:	mov    esi,0x6684a8be
  41fd61:	out    0x4c,al
  41fd63:	rcl    DWORD PTR [esi],0x37
  41fd66:	pop    ecx
  41fd67:	clc    
  41fd68:	dec    ebp
  41fd69:	shl    BYTE PTR [ebp-0x73],0xfb
  41fd6d:	push   edx
  41fd6e:	xchg   esp,eax
  41fd6f:	rcr    DWORD PTR [ebp+0x6d4cc3be],1
  41fd75:	jo     0x41fd5e
  41fd77:	hlt    
  41fd78:	cmp    bl,ch
  41fd7a:	push   ds
  41fd7b:	mov    al,0x8a
  41fd7d:	test   BYTE PTR [ecx],bl
  41fd7f:	movaps xmm4,XMMWORD PTR [edi]
  41fd82:	imul   ebp,DWORD PTR [esi],0x7c
  41fd85:	lods   eax,DWORD PTR ds:[esi]
  41fd86:	imul   edx,DWORD PTR [esi],0x2c
  41fd89:	jno    0x41fd39
  41fd8b:	outs   dx,BYTE PTR ds:[esi]
  41fd8c:	push   ecx
  41fd8d:	fst    DWORD PTR [eax-0x26]
  41fd90:	cs int 0xfb
  41fd93:	bound  ebx,QWORD PTR [ebx-0x369e1b5b]
  41fd99:	adc    eax,0xd99552f5
  41fd9e:	pop    ds
  41fd9f:	mov    bh,0xc4
  41fda1:	in     al,0x5
  41fda3:	std    
  41fda4:	call   0x66c4:0x73dc72b1
  41fdab:	pop    ecx
  41fdac:	pop    esp
  41fdad:	lea    esp,[esi+0x5]
  41fdb0:	adc    eax,DWORD PTR [eax]
  41fdb2:	add    al,0xbc
  41fdb4:	loopne 0x41fddc
  41fdb6:	rcr    ch,1
  41fdb8:	add    bl,dl
  41fdba:	push   es
  41fdbb:	ins    BYTE PTR es:[edi],dx
  41fdbc:	or     eax,0x99170562
  41fdc1:	test   DWORD PTR [esi+0x5b],edx
  41fdc4:	outs   dx,BYTE PTR ds:[esi]
  41fdc5:	scas   al,BYTE PTR es:[edi]
  41fdc6:	or     bl,BYTE PTR [eax]
  41fdc8:	inc    cx
  41fdca:	jp     0x41fdc5
  41fdcc:	and    ch,0x45
  41fdcf:	xchg   ebp,eax
  41fdd0:	adc    bl,bl
  41fdd2:	cmp    DWORD PTR [edx+0x954bd03],eax
  41fdd8:	add    ecx,DWORD PTR [ecx]
  41fdda:	mov    WORD PTR [eax+0x4aaedaa0],?
  41fde0:	outs   dx,BYTE PTR ds:[esi]
  41fde1:	xchg   ecx,eax
  41fde2:	push   ebx
  41fde3:	inc    edx
  41fde4:	mov    ah,0xb1
  41fde6:	push   ds
  41fde7:	das    
  41fde8:	xchg   ecx,eax
  41fde9:	out    dx,al
  41fdea:	es out 0x5f,eax
  41fded:	mov    bh,0xa2
  41fdef:	ret    0xce45
  41fdf2:	xor    BYTE PTR [edx-0x49],dh
  41fdf5:	xchg   BYTE PTR [ecx+0x3f43d093],cl
  41fdfb:	push   0x70
  41fdfd:	or     dl,ch
  41fdff:	pop    ecx
  41fe00:	mov    ecx,0x22ac09ec
  41fe05:	loop   0x41fe39
  41fe07:	test   eax,0xf43a9b86
  41fe0c:	mov    cl,0x80
  41fe0e:	adc    edi,DWORD PTR [esi]
  41fe10:	adc    DWORD PTR [ebx],0xc94e9cc1
  41fe16:	cli    
  41fe17:	pop    ebx
  41fe18:	add    BYTE PTR [ecx+0x2415f983],0xd4
  41fe1f:	loop   0x41fe47
  41fe21:	inc    edi
  41fe22:	and    ecx,DWORD PTR [esi]
  41fe24:	sub    al,0x9b
  41fe26:	dec    eax
  41fe27:	adc    al,0xb0
  41fe29:	or     BYTE PTR [ecx-0x1caf195],dl
  41fe2f:	adc    DWORD PTR [esi+eiz*4-0x6a],edi
  41fe33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe34:	call   0x1a56:0x3b64ff1
  41fe3b:	xchg   esp,eax
  41fe3c:	jnp    0x41fe04
  41fe3e:	jl     0x41fdc6
  41fe40:	out    0x2a,al
  41fe42:	mov    eax,0x741439b8
  41fe47:	(bad)  [eax+0x62]
  41fe4a:	mov    esi,edi
  41fe4c:	adc    eax,0x55e76de2
  41fe51:	sar    esi,cl
  41fe53:	std    
  41fe54:	xchg   edx,eax
  41fe55:	inc    edi
  41fe56:	or     cl,BYTE PTR [ecx+eax*8-0xb9113c5]
  41fe5d:	xchg   esp,eax
  41fe5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe5f:	pop    ds
  41fe60:	sti    
  41fe61:	sti    
  41fe62:	loop   0x41fecb
  41fe64:	std    
  41fe65:	(bad)  
  41fe66:	sbb    BYTE PTR [edi],cl
  41fe68:	adc    bl,BYTE PTR [esi-0x68]
  41fe6b:	cld    
  41fe6c:	jo     0x41fe64
  41fe6e:	int3   
  41fe6f:	push   ebp
  41fe70:	jg     0x41fe92
  41fe72:	pop    ebx
  41fe73:	out    dx,eax
  41fe74:	mov    ebp,DWORD PTR [ebx+ecx*2-0x74542947]
  41fe7b:	sbb    DWORD PTR [edx],edi
  41fe7d:	leave  
  41fe7e:	dec    edi
  41fe7f:	ins    BYTE PTR es:[edi],dx
  41fe80:	sub    al,0x75
  41fe82:	pop    ecx
  41fe83:	lahf   
  41fe84:	mov    ebp,0xdde89aab
  41fe89:	test   BYTE PTR [ebx+0x4b],bl
  41fe8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe8d:	ds stc 
  41fe8f:	in     eax,0x7c
  41fe91:	lods   al,BYTE PTR ds:[esi]
  41fe92:	retf   
  41fe93:	push   ss
  41fe94:	fcomip st,st(1)
  41fe96:	fcom   DWORD PTR [edx-0x63c542f9]
  41fe9c:	sub    cl,BYTE PTR [edx+eax*4-0x55]
  41fea0:	xor    DWORD PTR [edx-0x7be22416],ebx
  41fea6:	add    edx,ecx
  41fea8:	push   eax
  41fea9:	adc    al,0x93
  41feab:	cli    
  41feac:	mov    eax,0x9d5a7a23
  41feb1:	sub    al,0x3f
  41feb3:	mov    eax,ds:0xe876c3af
  41feb8:	inc    eax
  41feb9:	std    
  41feba:	scas   eax,DWORD PTR es:[edi]
  41febb:	sbb    bl,0x45
  41febe:	jle    0x41ff09
  41fec0:	cmp    bl,dl
  41fec2:	aam    0x2c
  41fec4:	popf   
  41fec5:	or     esi,0xdb6f5769
  41fecb:	sbb    ebp,DWORD PTR [edi+0x54]
  41fece:	inc    edx
  41fecf:	ins    DWORD PTR es:[edi],dx
  41fed0:	jnp    0x41ff33
  41fed2:	xchg   ecx,eax
  41fed3:	in     eax,dx
  41fed4:	mov    ch,0xfc
  41fed6:	xor    al,0xc1
  41fed8:	mov    ch,0xf6
  41feda:	add    edi,DWORD PTR [esi+ebx*2]
  41fedd:	or     bh,al
  41fedf:	aad    0xe9
  41fee1:	pop    esp
  41fee2:	in     eax,dx
  41fee3:	js     0x41fea8
  41fee5:	test   eax,0xf502aa2f
  41feea:	into   
  41feeb:	xchg   esp,eax
  41feec:	sbb    DWORD PTR [ecx+0x3115e00f],edx
  41fef2:	fistp  QWORD PTR [edi+edx*2-0x45]
  41fef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fef7:	es lock scas eax,DWORD PTR es:[edi]
  41fefa:	pushf  
  41fefb:	fist   DWORD PTR [edi-0x6f184e3f]
  41ff01:	inc    ecx
  41ff02:	icebp  
  41ff03:	mov    es,WORD PTR [ebx+0x592ab5e7]
  41ff09:	lds    edx,FWORD PTR [edx+0x649d824]
  41ff0f:	outs   dx,BYTE PTR ds:[esi]
  41ff10:	stc    
  41ff11:	or     al,0xda
  41ff13:	sar    BYTE PTR [edx-0x609cc0d7],1
  41ff19:	pop    ss
  41ff1a:	fisub  WORD PTR [edx]
  41ff1c:	sub    al,0xd9
  41ff1e:	push   0x71652e18
  41ff23:	inc    ebx
  41ff24:	mov    esp,0x86d89322
  41ff29:	xchg   ebp,eax
  41ff2a:	addr16 (bad) 
  41ff2c:	push   eax
  41ff2d:	pop    edx
  41ff2e:	int    0x2e
  41ff30:	cs xor al,0xc9
  41ff33:	xchg   edx,eax
  41ff34:	pop    edx
  41ff35:	jns    0x41ff65
  41ff37:	mov    ebp,0x7840d23d
  41ff3c:	mov    al,0x5b
  41ff3e:	out    dx,eax
  41ff3f:	adc    DWORD PTR [edi+0x734f66fc],esi
  41ff45:	mov    ah,0x1c
  41ff47:	loope  0x41ffa1
  41ff49:	dec    eax
  41ff4a:	adc    eax,0x2a40d3b3
  41ff4f:	xor    eax,0x861efa5b
  41ff54:	fsub   st(7),st
  41ff56:	test   eax,0x9318cb75
  41ff5b:	out    0xb0,al
  41ff5d:	aas    
  41ff5e:	out    dx,al
  41ff5f:	dec    esp
  41ff60:	test   BYTE PTR [edx-0x5fcc4943],cl
  41ff66:	(bad)  
  41ff67:	and    BYTE PTR [edi],bh
  41ff69:	xchg   ebp,eax
  41ff6a:	mov    bl,0x7d
  41ff6c:	inc    ecx
  41ff6d:	out    0x8f,al
  41ff6f:	or     al,0x3b
  41ff71:	push   edi
  41ff72:	fwait
  41ff73:	mov    cl,0x97
  41ff75:	jge    0x41ff0a
  41ff77:	retf   0x329f
  41ff7a:	xchg   BYTE PTR [eax+0x48b500e5],bh
  41ff80:	inc    ebx
  41ff81:	pop    ebx
  41ff82:	sub    esi,DWORD PTR [eax-0x64]
  41ff85:	jge    0x41ffdf
  41ff87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff88:	dec    ecx
  41ff89:	ret    0xa617
  41ff8c:	jne    0x41ff4a
  41ff8e:	mov    ebx,0xeded78e6
  41ff93:	xor    DWORD PTR [ebp-0x3d],0x8655b8fc
  41ff9a:	loopne 0x41ffde
  41ff9c:	inc    eax
  41ff9d:	jmp    0xeee7:0x55a8fca5
  41ffa4:	pop    ds
  41ffa5:	mov    bl,0xa1
  41ffa7:	jo     0x41fff9
  41ffa9:	out    0x66,eax
  41ffab:	aaa    
  41ffac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffad:	lock pop ecx
  41ffaf:	xchg   BYTE PTR [edx+ebx*4-0x16],ch
  41ffb3:	test   DWORD PTR [edi],esp
  41ffb5:	(bad)  
  41ffb6:	or     eax,0x6ede33a1
  41ffbb:	inc    edi
  41ffbc:	push   edx
  41ffbd:	(bad)  
  41ffbe:	jg     0x420024
  41ffc0:	jle    0x41ff86
  41ffc2:	sahf   
  41ffc3:	push   0x50
  41ffc5:	add    edi,DWORD PTR [edi]
  41ffc7:	adc    eax,0x4febaba3
  41ffcc:	sbb    ebx,0x43db6b5c
  41ffd2:	pop    ds
  41ffd3:	jae    0x41ffed
  41ffd5:	out    dx,eax
  41ffd6:	dec    edx
  41ffd7:	cmp    ecx,DWORD PTR [ecx]
  41ffd9:	int3   
  41ffda:	shr    bh,cl
  41ffdc:	fstp   TBYTE PTR [esi-0x2e43c664]
  41ffe2:	sub    edx,esi
  41ffe4:	mov    DWORD PTR [edi+0x72],esp
  41ffe7:	mov    esp,0xb88e81ba
  41ffec:	cmp    DWORD PTR [ebx+0x7f],0xffffffed
  41fff0:	push   edi
  41fff1:	mov    ecx,0xf89f8fc6
  41fff6:	add    bl,BYTE PTR [ebp-0x476e48e9]
  41fffc:	das    
  41fffd:	sub    al,0xb9
  41ffff:	mov    bl,0x66
  420001:	xchg   edx,eax
  420002:	add    DWORD PTR [edi+0x4d9c98b1],0xffffffb9
  420009:	mov    dl,ch
  42000b:	out    dx,al
  42000c:	cld    
  42000d:	xchg   ebp,eax
  42000e:	add    DWORD PTR [ebp+0x1b],edx
  420011:	xchg   ebx,eax
  420012:	jne    0x41ffa9
  420014:	jl     0x420028
  420016:	jns    0x420068
  420018:	ret    0xe848
  42001b:	cld    
  42001c:	xchg   ecx,eax
  42001d:	mov    edx,0x1a4c1c63
  420022:	sbb    eax,0x4300cb6
  420027:	(bad)  
  420028:	or     eax,0xf1078e94
  42002d:	pop    es
  42002e:	ins    DWORD PTR es:[edi],dx
  42002f:	outs   dx,BYTE PTR ds:[esi]
  420030:	mov    ds:0xc2c396ba,eax
  420035:	adc    edi,DWORD PTR [eax-0x18]
  420038:	dec    eax
  420039:	push   esi
  42003a:	ins    BYTE PTR es:[edi],dx
  42003b:	dec    ebp
  42003c:	dec    esi
  42003d:	test   DWORD PTR [edi+0x3b],0x227ca8fa
  420044:	jl     0x42006b
  420046:	and    al,BYTE PTR [esi]
  420048:	daa    
  420049:	pop    esi
  42004a:	adc    al,0xf
  42004c:	add    eax,0x4ad43f72
  420051:	das    
  420052:	jl     0x4200d0
  420054:	jp     0x4200c7
  420056:	push   esp
  420057:	nop
  420058:	adc    cl,cl
  42005a:	push   edi
  42005b:	ins    BYTE PTR es:[edi],dx
  42005c:	cmp    ah,BYTE PTR [edx]
  42005e:	mov    ?,ebp
  420060:	lds    edi,FWORD PTR [esi-0x45]
  420063:	mov    dh,0x3c
  420065:	push   esp
  420066:	ins    DWORD PTR es:[edi],dx
  420067:	xor    BYTE PTR [esi],ch
  420069:	leave  
  42006a:	fnstsw WORD PTR [edx]
  42006c:	inc    edx
  42006d:	mov    WORD PTR [edi+0x5edd2596],ss
  420073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420074:	sbb    DWORD PTR [ecx],ebp
  420076:	js     0x420089
  420078:	mov    esi,0x2b1f9361
  42007d:	cli    
  42007e:	gs jb  0x42009f
  420081:	ins    DWORD PTR es:[edi],dx
  420082:	sub    ebx,DWORD PTR [ebx+0x563c4f0c]
  420088:	and    eax,0x5f675451
  42008d:	sbb    bl,BYTE PTR [edi-0x22d9fea5]
  420093:	cmp    eax,0x70338680
  420098:	mov    esp,0x7c06632d
  42009d:	(bad)  
  4200a0:	adc    eax,0x49040485
  4200a5:	xor    DWORD PTR [eax-0x5],edx
  4200a8:	mov    al,0xd5
  4200aa:	fdivr  QWORD PTR [ecx]
  4200ac:	and    al,0x8c
  4200ae:	add    DWORD PTR [esi-0x26c69369],edi
  4200b4:	scas   al,BYTE PTR es:[edi]
  4200b5:	shl    BYTE PTR [edi],cl
  4200b7:	sbb    BYTE PTR [ebx+ecx*2+0x31e86f3],cl
  4200be:	jle    0x420092
  4200c0:	push   edx
  4200c1:	int    0x75
  4200c3:	enter  0xb8c,0xd9
  4200c7:	retf   
  4200c8:	ror    DWORD PTR [ebx*8-0x7b5ae435],cl
  4200cf:	pop    es
  4200d0:	cmp    al,0x37
  4200d2:	ss mov eax,0xc5059656
  4200d8:	aaa    
  4200d9:	rol    BYTE PTR [ebx],1
  4200db:	sub    ah,BYTE PTR [esi]
  4200dd:	inc    ecx
  4200de:	retf   0x6f56
  4200e1:	fisttp QWORD PTR [eax]
  4200e3:	add    al,0xc2
  4200e5:	mov    ebp,DWORD PTR [ebp-0x76a62d8c]
  4200eb:	scas   eax,DWORD PTR es:[edi]
  4200ec:	sub    DWORD PTR gs:0xf4e94786,ecx
  4200f3:	pop    ecx
  4200f4:	rcr    ebx,1
  4200f6:	mov    ecx,cs
  4200f8:	clc    
  4200f9:	sbb    DWORD PTR [edi],esi
  4200fb:	imul   edi,esi,0xffffffcf
  4200fe:	ins    BYTE PTR es:[edi],dx
  4200ff:	(bad)  [ebx+ecx*1-0x3b]
  420103:	psllw  mm0,QWORD PTR [ebx]
  420106:	ds mov al,0x69
  420109:	mov    bl,BYTE PTR [edx+0x4682c75f]
  42010f:	(bad)  
  420110:	push   ecx
  420111:	clc    
  420112:	mov    ecx,0xb8e1b073
  420117:	ror    DWORD PTR [ecx+0x7420185],cl
  42011d:	mov    eax,ds:0x5aa48a7f
  420122:	and    eax,0xe78d8169
  420127:	(bad)  
  420128:	js     0x42015c
  42012a:	int    0xd1
  42012c:	test   eax,0x8f59a8e0
  420131:	mov    ecx,0x52dbce96
  420136:	ffreep st(4)
  420138:	rcl    DWORD PTR [ebx+0x23ae3d82],cl
  42013e:	or     eax,0x43e93126
  420143:	(bad)  
  420144:	loop   0x42011b
  420146:	push   ss
  420147:	fstp   QWORD PTR [edx+0x3b]
  42014a:	jns    0x42013c
  42014c:	in     eax,0x9e
  42014e:	jp     0x42017e
  420150:	xor    eax,0xe0e71e5c
  420155:	add    edi,DWORD PTR [ebp+0x7ca6107c]
  42015b:	pop    ds
  42015c:	nop
  42015d:	(bad)  
  42015e:	pop    ebx
  42015f:	clc    
  420160:	xchg   edi,eax
  420161:	sub    BYTE PTR es:[ebx-0x6d],bl
  420165:	mov    ah,0xdb
  420167:	pop    edi
  420168:	lods   al,BYTE PTR ds:[esi]
  420169:	xor    esi,DWORD PTR [esi+0x545b9ebf]
  42016f:	cli    
  420170:	pop    edx
  420171:	nop
  420172:	dec    edx
  420173:	(bad)  
  420174:	leave  
  420175:	outs   dx,DWORD PTR ds:[esi]
  420176:	xor    BYTE PTR [esi],0x54
  420179:	jge    0x420138
  42017b:	dec    eax
  42017c:	das    
  42017d:	inc    ebx
  42017e:	imul   eax,ebp,0xca5986ad
  420184:	rcl    DWORD PTR [edx+ebp*4+0xe8a6725],0x4
  42018c:	lock adc al,0xe2
  42018f:	jno    0x42018d
  420191:	mov    WORD PTR [edx+0x15],ss
  420194:	mov    esp,DWORD PTR [ecx-0xb]
  420197:	fs mov ch,dl
  42019a:	cmp    al,0x63
  42019c:	xchg   BYTE PTR [edi],al
  42019e:	sub    al,0xb8
  4201a0:	xor    ah,bl
  4201a2:	arpl   WORD PTR [edx-0x75],bx
  4201a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201a6:	retf   0x3275
  4201a9:	dec    esp
  4201aa:	fs je  0x420152
  4201ad:	ss pushf 
  4201af:	and    esp,eax
  4201b1:	or     eax,0x27188907
  4201b6:	ins    BYTE PTR es:[edi],dx
  4201b7:	or     ebx,DWORD PTR [ecx]
  4201b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ba:	imul   edx,DWORD PTR [edx],0xffffff96
  4201bd:	inc    edx
  4201be:	push   edx
  4201bf:	cs xchg edx,eax
  4201c1:	mov    BYTE PTR [esi+ebp*1+0x6d],al
  4201c5:	daa    
  4201c6:	or     cl,cl
  4201c8:	out    0xe5,eax
  4201ca:	test   BYTE PTR [esi+0x36],dl
  4201cd:	cli    
  4201ce:	daa    
  4201cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201d0:	ret    
  4201d1:	sahf   
  4201d2:	xchg   ebp,eax
  4201d3:	xchg   edx,eax
  4201d4:	popa   
  4201d5:	push   ebp
  4201d6:	sbb    ah,BYTE PTR gs:[ebx-0x34a50a7d]
  4201dd:	push   es
  4201de:	sub    esi,edx
  4201e0:	ret    
  4201e1:	(bad)  
  4201e2:	mov    ch,0x50
  4201e4:	jne    0x42023b
  4201e6:	aas    
  4201e7:	repz mov esi,0x2063c77f
  4201ed:	fisttp DWORD PTR [edx+0x0]
  4201f0:	cs fwait
  4201f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201f3:	(bad)  
  4201f4:	out    dx,eax
  4201f5:	adc    esi,DWORD PTR [esi-0xf]
  4201f8:	jnp    0x4201aa
  4201fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201fb:	add    DWORD PTR [eax+ebx*4+0x4d],edx
  4201ff:	or     al,0x25
  420201:	sub    bl,ch
  420203:	ja     0x420273
  420205:	or     DWORD PTR [esi-0x28656fed],0x99fadde4
  42020f:	dec    edi
  420210:	xchg   edi,eax
  420211:	scas   al,BYTE PTR es:[edi]
  420212:	push   0xec378191
  420217:	out    dx,al
  420218:	bound  edx,QWORD PTR [ecx]
  42021a:	pusha  
  42021b:	mov    dh,0x59
  42021d:	push   ss
  42021e:	sbb    dh,BYTE PTR [esi+ebx*8+0x51a7439]
  420225:	addr16 xchg esi,eax
  420227:	xchg   edx,eax
  420228:	scas   eax,DWORD PTR es:[edi]
  420229:	xor    bh,BYTE PTR [esp+ecx*8]
  42022c:	xor    al,0xd1
  42022e:	jbe    0x42026e
  420230:	sbb    eax,0x5c2de17b
  420235:	test   eax,0xf3ad1c63
  42023a:	push   eax
  42023b:	inc    edi
  42023c:	jmp    0xf999bc7e
  420241:	stos   BYTE PTR es:[edi],al
  420242:	in     al,0x98
  420244:	xchg   esp,eax
  420245:	aas    
  420246:	adc    DWORD PTR [esp+eax*8],ebx
  420249:	mov    gs:0x1088,al
  42024f:	add    BYTE PTR [eax],al
  420251:	add    BYTE PTR [esi+0x57fe4584],dl
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [ebx-0x4f],cl
  420260:	pop    edx
  420261:	inc    esp
  420262:	mov    edi,0xf300017c
  420267:	add    al,0x0
  420269:	add    dl,dl
  42026b:	mov    cl,0xbd
  42026d:	dec    ecx
  42026e:	xchg   edi,eax
  42026f:	push   esi
  420270:	inc    edx
  420271:	jns    0x420222
  420273:	lods   al,BYTE PTR ds:[esi]
  420274:	sar    BYTE PTR [ebx+0x4e],0xb8
  420278:	cmp    eax,0xc95a90f9
  42027d:	jl     0x420235
  42027f:	push   0x59
  420281:	xchg   ecx,eax
  420282:	pop    edi
  420283:	inc    esp
  420284:	fsubr  st(4),st
  420286:	jae    0x4202d6
  420288:	dec    ebp
  420289:	(bad)  
  42028a:	sub    ebp,DWORD PTR fs:[ecx+0x4c]
  42028e:	mov    bl,0x8b
  420290:	je     0x4202a4
  420292:	dec    ebx
  420293:	inc    ecx
  420294:	and    al,0xa1
  420296:	or     BYTE PTR [edx-0x75],0x5f
  42029a:	call   DWORD PTR [edx-0x13]
  42029d:	in     eax,0xc9
  42029f:	xchg   esi,edi
  4202a1:	jp     0x42023e
  4202a3:	fsincos 
  4202a5:	mov    dl,0x9
  4202a7:	inc    ebp
  4202a8:	dec    edx
  4202a9:	sbb    DWORD PTR [ecx-0x20],eax
  4202ac:	mov    ch,0xf2
  4202ae:	pop    ebp
  4202af:	leave  
  4202b0:	frndint 
  4202b2:	cld    
  4202b3:	retf   
  4202b4:	pushf  
  4202b5:	dec    edi
  4202b6:	mov    dl,BYTE PTR [ebp-0x3f]
  4202b9:	cmc    
  4202ba:	push   ebp
  4202bb:	xor    ah,bl
  4202bd:	mov    ebp,0x11781565
  4202c2:	sub    eax,0xa3e02e7b
  4202c7:	call   0x63e8e4c3
  4202cc:	jo     0x420318
  4202ce:	shl    BYTE PTR [ebx+edx*8+0x15],cl
  4202d2:	mov    cl,0xe3
  4202d4:	in     eax,dx
  4202d5:	clc    
  4202d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202d7:	scas   eax,DWORD PTR es:[edi]
  4202d8:	std    
  4202d9:	mov    eax,ds:0xabfe54d0
  4202de:	push   esp
  4202df:	xchg   BYTE PTR ds:[ebp-0x22],bh
  4202e3:	add    esp,DWORD PTR [ecx]
  4202e5:	sbb    DWORD PTR [edx-0x35f270c2],eax
  4202eb:	je     0x4202a9
  4202ed:	in     eax,0x2a
  4202ef:	mov    al,0x2f
  4202f1:	retf   0xd1c0
  4202f4:	mov    edx,0x879f136d
  4202f9:	push   ebp
  4202fa:	ins    DWORD PTR es:[edi],dx
  4202fb:	stos   DWORD PTR es:[edi],eax
  4202fc:	mov    edi,0x3d3cbfb5
  420301:	dec    ebp
  420302:	xchg   esi,eax
  420303:	mov    bl,0xa0
  420305:	jmp    0x420386
  420307:	xchg   ebp,eax
  420308:	xchg   esi,eax
  420309:	dec    esi
  42030a:	cmp    eax,0x7f2be342
  42030f:	nop
  420310:	lods   al,BYTE PTR ds:[esi]
  420311:	sub    bh,0xf0
  420314:	push   esi
  420315:	mov    ah,0x8f
  420317:	outs   dx,DWORD PTR ds:[esi]
  420318:	daa    
  420319:	ja     0x420320
  42031b:	pop    esi
  42031c:	jp     0x4202a6
  42031e:	xor    bl,BYTE PTR [edi+0x52453497]
  420324:	xchg   ebp,eax
  420325:	mov    eax,ds:0x1556a8ee
  42032a:	mov    ebp,0x6e5d160d
  42032f:	cld    
  420330:	outs   dx,BYTE PTR ds:[esi]
  420331:	in     eax,0x75
  420333:	ficomp WORD PTR [edi+edi*1]
  420336:	push   esi
  420337:	sbb    dl,bh
  420339:	fdivp  st(6),st
  42033b:	in     eax,0xd
  42033d:	mov    ds:0x5fa2c4ea,al
  420342:	enter  0xaa70,0xb7
  420346:	xchg   edi,eax
  420347:	dec    eax
  420348:	jmp    0x420302
  42034a:	pop    esp
  42034b:	mov    al,ds:0x8b221498
  420350:	pop    edx
  420351:	inc    ebx
  420352:	leave  
  420353:	mov    WORD PTR [ebx+0x56777943],?
  420359:	or     eax,0xab8528fe
  42035e:	jp     0x4203b3
  420360:	inc    edx
  420361:	pop    es
  420362:	(bad)  
  420363:	rol    cl,1
  420365:	push   eax
  420366:	mov    al,ds:0x80202bfd
  42036b:	in     al,0x1d
  42036d:	lahf   
  42036e:	lea    ebx,[ecx]
  420370:	jns    0x420303
  420372:	or     dl,0x72
  420375:	loopne 0x42034a
  420377:	leave  
  420378:	xor    edi,DWORD PTR [edi+0x6d]
  42037b:	shl    BYTE PTR [eax+esi*1],1
  42037e:	out    0x65,al
  420380:	sub    eax,0x44fa1fad
  420385:	xor    BYTE PTR [eax+0x6ed0c586],cl
  42038b:	sbb    eax,DWORD PTR [esi+0x3be5eb8b]
  420391:	inc    ebp
  420392:	and    ecx,eax
  420394:	mov    ds:0xf5220fbe,al
  420399:	repnz (bad) 
  42039c:	or     dh,BYTE PTR [ebx+0x69]
  42039f:	and    ecx,ebp
  4203a1:	enter  0x24d2,0xd9
  4203a5:	lock adc edx,DWORD PTR [edi+0xaa23f14]
  4203ac:	inc    esp
  4203ad:	mov    dl,0x35
  4203af:	loop   0x42041c
  4203b1:	iret   
  4203b2:	fdivrp st(3),st
  4203b4:	into   
  4203b5:	and    eax,0xfbd28d32
  4203ba:	dec    BYTE PTR [eax+0x5be93cc6]
  4203c0:	xchg   edx,eax
  4203c1:	push   edx
  4203c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c3:	outs   dx,DWORD PTR ds:[esi]
  4203c4:	stos   BYTE PTR es:[edi],al
  4203c5:	push   edi
  4203c6:	psubusw mm5,QWORD PTR [ebp+0x2b]
  4203ca:	sub    al,0x9e
  4203cc:	cmp    cl,0x52
  4203cf:	push   es
  4203d0:	repz repz mov eax,0x6ac45e3a
  4203d7:	adc    DWORD PTR [esi+eax*2],ebx
  4203da:	aam    0x2a
  4203dc:	pop    esp
  4203dd:	ds loop 0x42044f
  4203e0:	adc    ecx,DWORD PTR [ebp+0x36c3a4de]
  4203e6:	mov    ecx,0x148629bc
  4203eb:	sbb    ah,0x51
  4203ee:	sahf   
  4203ef:	retf   0xb43e
  4203f2:	fndisi(8087 only) 
  4203f4:	adc    BYTE PTR [ebx-0x4f508696],bl
  4203fa:	sbb    eax,0x782a025
  4203ff:	mov    ch,BYTE PTR [eax+ebx*2]
  420402:	sahf   
  420403:	xlat   BYTE PTR ds:[ebx]
  420404:	retf   0xf9c5
  420407:	les    edx,FWORD PTR ds:0xd6cdc209
  42040d:	stos   DWORD PTR es:[edi],eax
  42040e:	sbb    eax,0x2176bf
  420413:	icebp  
  420414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420415:	icebp  
  420416:	std    
  420417:	popa   
  420418:	cld    
  420419:	push   ecx
  42041a:	xchg   esp,eax
  42041b:	aam    0xa7
  42041d:	push   ss
  42041e:	aam    0xd1
  420420:	and    eax,0x44edd1a6
  420425:	imul   ebx,DWORD PTR [edx+0x7c198064],0xffffffd4
  42042c:	out    0xf7,al
  42042e:	int    0x5c
  420430:	fdivr  st(1),st
  420432:	scas   eax,DWORD PTR es:[edi]
  420433:	std    
  420434:	iret   
  420435:	pop    ebp
  420436:	xchg   edi,eax
  420437:	adc    dl,BYTE PTR [di]
  42043a:	jns    0x420422
  42043c:	and    eax,0x15bddfb
  420441:	push   esp
  420442:	into   
  420443:	push   eax
  420444:	jns    0x4203dc
  420446:	(bad)
  420449:	jle    0x4204b2
  42044b:	div    BYTE PTR [edx]
  42044d:	cmovl  edx,DWORD PTR [esi+0xf]
  420451:	or     eax,0xc1042633
  420456:	call   0x1fdf:0xb0a6880a
  42045d:	or     cl,BYTE PTR [ebx]
  42045f:	sahf   
  420460:	inc    BYTE PTR [esp+edi*4-0x23091624]
  420467:	sub    ah,BYTE PTR [ebp+0x52]
  42046a:	stos   BYTE PTR es:[edi],al
  42046b:	mov    ecx,0x1dd69585
  420470:	shl    DWORD PTR [edi+0x18b8e096],0xa0
  420477:	mov    eax,ds:0x7a9ba82d
  42047c:	shl    BYTE PTR [edi-0x5652f3de],0x14
  420483:	ret    
  420484:	in     al,dx
  420485:	adc    BYTE PTR [ebp-0x72],dl
  420488:	xchg   edx,eax
  420489:	mov    edi,0x918919b0
  42048e:	test   eax,0x3529013b
  420493:	mov    al,ds:0x886f263a
  420498:	sahf   
  420499:	jecxz  0x420424
  42049b:	inc    esi
  42049c:	xchg   ecx,eax
  42049e:	jne    0x4204ed
  4204a0:	mov    ebp,0x94680edf
  4204a5:	xchg   edx,eax
  4204a6:	arpl   WORD PTR [esi],ax
  4204a8:	xor    eax,0xe4d74b4
  4204ad:	mov    edx,DWORD PTR [ebp*8-0x54650332]
  4204b4:	popf   
  4204b5:	pop    ecx
  4204b6:	adc    eax,0x7c306eec
  4204bb:	or     bl,BYTE PTR [ecx]
  4204bd:	pop    ecx
  4204be:	pop    ecx
  4204bf:	shl    ecx,cl
  4204c1:	sbb    dl,BYTE PTR [edx]
  4204c3:	inc    ebp
  4204c4:	xchg   edx,eax
  4204c5:	mov    eax,ds:0xaa2e8096
  4204ca:	repnz test eax,0xc7b563a0
  4204d0:	popa   
  4204d1:	nop
  4204d2:	data16 jnp 0x42051e
  4204d5:	call   0xf471ee0a
  4204da:	cld    
  4204db:	shl    cl,cl
  4204dd:	pop    esi
  4204de:	data16 ds jle 0x42049e
  4204e2:	int3   
  4204e3:	jl     0x4204f8
  4204e5:	inc    edx
  4204e6:	fbld   TBYTE PTR [ecx]
  4204e8:	leave  
  4204e9:	cli    
  4204ea:	daa    
  4204eb:	imul   DWORD PTR [eax]
  4204ed:	cmp    al,0x69
  4204ef:	dec    ecx
  4204f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204f1:	out    dx,eax
  4204f2:	adc    eax,ebp
  4204f4:	dec    eax
  4204f5:	adc    eax,0xe775451a
  4204fa:	icebp  
  4204fb:	mov    ah,0x47
  4204fd:	js     0x420522
  4204ff:	not    DWORD PTR ss:[ebp-0x7]
  420503:	cmp    esp,DWORD PTR [ebp+0x21d303e2]
  420509:	icebp  
  42050a:	xchg   esi,eax
  42050b:	out    dx,eax
  42050c:	push   ecx
  42050d:	push   ds
  42050e:	inc    esi
  42050f:	fld    QWORD PTR [ebp-0x72]
  420512:	cmp    eax,0xa900f60b
  420517:	add    edx,DWORD PTR [eax+0x26]
  42051a:	(bad)  
  42051c:	jmp    0xe7b9:0x440cf464
  420523:	cld    
  420524:	ins    BYTE PTR es:[edi],dx
  420525:	pop    ecx
  420526:	pop    eax
  420527:	mov    eax,0xbd910631
  42052c:	repnz cdq 
  42052e:	lock shl edx,cl
  420531:	mov    ah,0xc9
  420533:	pop    ss
  420534:	and    al,0x65
  420536:	inc    ebp
  420537:	mov    edi,0x63a968dd
  42053c:	test   eax,0xdcf9dcd9
  420541:	leave  
  420542:	ss or  eax,0xf9d2faeb
  420548:	adc    al,0x71
  42054a:	jecxz  0x4205b7
  42054c:	dec    edx
  42054d:	shr    ebx,cl
  42054f:	fcomp  QWORD PTR [edi-0x23de0f0b]
  420555:	pop    edi
  420556:	jbe    0x420589
  420558:	inc    ebx
  420559:	xchg   ebp,esp
  42055b:	pop    ebp
  42055c:	nop
  42055d:	aam    0xed
  42055f:	(bad)  
  420560:	xor    ecx,eax
  420562:	out    0x9c,al
  420564:	and    eax,0x9cb4b2f2
  420569:	push   edi
  42056a:	das    
  42056b:	jne    0x4205b7
  42056d:	sbb    ebp,DWORD PTR [edx]
  42056f:	mov    esi,0x82a38004
  420574:	inc    ebx
  420575:	retf   0x5e60
  420578:	lds    esi,FWORD PTR [ebx+0xf]
  42057b:	into   
  42057c:	push   edx
  42057d:	xor    BYTE PTR [eax-0x29bd42fa],dh
  420583:	ret    
  420584:	jge    0x420519
  420586:	fs push 0xffffffd8
  420589:	inc    eax
  42058a:	sahf   
  42058b:	jne    0x420584
  42058d:	(bad)  
  42058f:	push   0xc0525755
  420594:	test   eax,0xf9e1d44f
  420599:	lods   al,BYTE PTR ds:[esi]
  42059a:	xor    BYTE PTR [edi-0xd],dh
  42059d:	pop    edx
  42059e:	jg     0x420619
  4205a0:	push   esp
  4205a1:	ins    BYTE PTR es:[edi],dx
  4205a2:	cmc    
  4205a3:	jne    0x420534
  4205a5:	dec    esp
  4205a6:	pop    esp
  4205a7:	hlt    
  4205a8:	dec    edi
  4205a9:	dec    ebp
  4205aa:	xor    dl,BYTE PTR ds:0x9454d8cd
  4205b0:	ins    DWORD PTR es:[edi],dx
  4205b1:	xchg   edi,eax
  4205b2:	mov    cl,0x8e
  4205b4:	cmp    al,0x77
  4205b6:	rcl    BYTE PTR [edx+edx*4-0x73],0x84
  4205bb:	pop    ss
  4205bc:	pop    ebx
  4205bd:	shl    cl,1
  4205bf:	and    DWORD PTR [ecx-0x70a5ff80],eax
  4205c5:	xor    cl,bh
  4205c7:	push   ds
  4205c8:	sbb    eax,0xc3ff706f
  4205cd:	ds js  0x420629
  4205d0:	jge    0x4205da
  4205d2:	ror    DWORD PTR gs:[edx],0xfe
  4205d6:	mov    edx,0x53d57d4f
  4205db:	or     al,0x2
  4205dd:	call   0x2b56:0x1727ad3b
  4205e4:	sub    ecx,DWORD PTR [ebp+eiz*2+0x69db61c6]
  4205eb:	add    DWORD PTR [ebx],0x1276cd4f
  4205f1:	shl    BYTE PTR [esi-0x3b0f683],cl
  4205f7:	outs   dx,BYTE PTR ds:[esi]
  4205f8:	xchg   BYTE PTR [ebx-0x38],dl
  4205fb:	adc    edx,DWORD PTR [ebp+ebx*1+0x13]
  4205ff:	add    ebx,DWORD PTR [ebx-0x4d65a71d]
  420605:	or     bl,ch
  420607:	sub    al,0x79
  42060a:	and    eax,0x10b556a
  42060f:	outs   dx,BYTE PTR ds:[esi]
  420610:	xchg   ebx,eax
  420611:	nop
  420612:	push   es
  420613:	pop    edi
  420614:	push   esp
  420615:	out    0xa4,eax
  420617:	dec    edi
  420618:	jmp    0x4205d4
  42061a:	pop    edx
  42061b:	and    bh,BYTE PTR [eax]
  42061d:	imul   edx,DWORD PTR [ecx-0x4c],0x1d4d1024
  420624:	inc    edx
  420625:	mov    cl,0x1
  420627:	mov    bl,0x34
  420629:	pop    eax
  42062a:	fs adc al,0x9e
  42062d:	dec    esi
  42062e:	xor    DWORD PTR [ebp+0x6d],0x1d
  420632:	repnz pusha 
  420634:	adc    al,0xf2
  420636:	(bad)  [ebx+0x43]
  420639:	out    dx,al
  42063a:	bound  ebx,QWORD PTR [edx+0xfdd5a89]
  420640:	scas   al,BYTE PTR es:[edi]
  420641:	clc    
  420642:	js     0x42062c
  420644:	arpl   WORD PTR [esi+ebp*8],ax
  420647:	mov    bh,0x4a
  420649:	imul   ebp,DWORD PTR [ebx-0x48],0x5
  42064d:	mov    ebx,0xb216371
  420652:	iret   
  420653:	pop    edx
  420654:	mov    al,ds:0xa5eb5b3c
  420659:	adc    BYTE PTR [ebp+0x7b074d3a],dl
  42065f:	ja     0x4206d1
  420661:	mov    esp,0x6a8d2ec6
  420666:	lds    ebp,FWORD PTR [ebp-0x37abecde]
  42066c:	mov    dh,0x23
  42066e:	repz sbb bh,ah
  420671:	cmp    al,0xea
  420673:	in     al,dx
  420674:	inc    ecx
  420675:	push   cs
  420676:	push   ss
  420677:	sbb    ah,al
  420679:	test   al,0x50
  42067b:	or     BYTE PTR [ebx-0x60],ah
  42067e:	loope  0x42065c
  420680:	lds    esp,FWORD PTR [edx+0x59fca224]
  420686:	jns    0x4206df
  420688:	adc    DWORD PTR [ecx-0x33f17551],esi
  42068e:	aam    0x5c
  420690:	add    BYTE PTR [esi-0x3ca8ac47],ch
  420696:	cmc    
  420697:	sbb    al,0x7c
  420699:	hlt    
  42069a:	push   edi
  42069b:	push   eax
  42069c:	jns    0x42064e
  42069e:	icebp  
  42069f:	sbb    al,0xde
  4206a1:	mov    ecx,0x92e40c52
  4206a6:	aam    0x0
  4206a8:	pop    ecx
  4206a9:	es into 
  4206ab:	stc    
  4206ac:	arpl   WORD PTR [ecx],dx
  4206ae:	(bad)  
  4206af:	xchg   esi,eax
  4206b0:	and    cl,BYTE PTR [esi-0x15137a73]
  4206b6:	mov    eax,ds:0xa0dbef10
  4206bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206bc:	push   cs
  4206bd:	jb     0x420681
  4206bf:	outs   dx,BYTE PTR ds:[esi]
  4206c0:	(bad)  
  4206c1:	outs   dx,BYTE PTR ds:[esi]
  4206c2:	mov    DWORD PTR [ebx-0x53],edx
  4206c5:	dec    esp
  4206c6:	mov    eax,0xae7fe6e8
  4206cb:	(bad)  
  4206cc:	adc    eax,0x17c6b5a5
  4206d1:	mov    cl,0xb4
  4206d3:	(bad)  
  4206d5:	inc    eax
  4206d6:	mov    esi,0xff3afc02
  4206db:	retf   0xd0cf
  4206de:	int    0x1d
  4206e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206e1:	pop    edx
  4206e2:	dec    ecx
  4206e3:	or     al,0x6f
  4206e5:	mov    esp,0x6ffb88b
  4206ea:	sar    BYTE PTR [esi+0x783d5dcf],1
  4206f0:	mov    BYTE PTR [eax+ecx*2],dl
  4206f3:	out    dx,al
  4206f4:	jp     0x4206e3
  4206f6:	or     ebp,DWORD PTR [edx+0x1c]
  4206f9:	push   ebp
  4206fa:	iret   
  4206fb:	ret    
  4206fc:	ins    DWORD PTR es:[edi],dx
  4206fd:	xchg   ebx,eax
  4206fe:	mov    edi,0x4e28ab5c
  420703:	inc    eax
  420704:	add    DWORD PTR [eax+0x434c376d],esp
  42070a:	(bad)  
  42070b:	in     eax,0x5d
  42070d:	cdq    
  42070e:	sbb    ebp,DWORD PTR [ecx]
  420710:	xor    al,dl
  420712:	es dec eax
  420714:	pop    ecx
  420715:	test   eax,0x33c0e134
  42071a:	shl    BYTE PTR [ebx],1
  42071c:	push   esp
  42071d:	cmp    ecx,DWORD PTR [esi+0x6c4287af]
  420723:	out    dx,al
  420724:	rcl    DWORD PTR [edi+ecx*8+0x40b9cf34],1
  42072b:	sub    BYTE PTR [ebp+0x2c],ah
  42072e:	mov    bl,0xc2
  420730:	outs   dx,DWORD PTR ds:[esi]
  420731:	fistp  DWORD PTR [ebp-0x80]
  420734:	xchg   esi,eax
  420735:	cmp    ebx,ecx
  420737:	mov    ds:0x327f12f,eax
  42073c:	addr16 cmp al,0x83
  42073f:	adc    ch,BYTE PTR [edi-0x7f]
  420742:	xchg   edx,eax
  420743:	cs pop ebp
  420745:	add    cl,BYTE PTR [ebx-0x3dfb3dfc]
  42074b:	cmp    eax,ebp
  42074d:	pop    edx
  42074e:	sbb    eax,0x160f06d9
  420753:	pop    edx
  420754:	pop    edi
  420755:	xchg   DWORD PTR [eax+0x2d],esi
  420758:	push   edi
  420759:	mov    bh,0xb0
  42075b:	jecxz  0x4206ef
  42075d:	add    BYTE PTR [eax],al
  42075f:	add    BYTE PTR [eax],al
  420761:	add    BYTE PTR [ecx],ah
  420763:	pop    ds
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	mov    ds:0xb21106b1,al
  420773:	add    DWORD PTR [ecx],0x4f300
  420779:	add    cl,bh
  42077b:	sbb    cl,BYTE PTR [eax+0x37]
  42077e:	pop    es
  42077f:	mov    bl,0x8d
  420781:	push   es
  420782:	sahf   
  420783:	cmc    
  420784:	mov    ds:0x3441181a,al
  420789:	mov    ch,0xe
  42078b:	cmp    eax,0xb17f7566
  420790:	push   edx
  420791:	push   ebp
  420792:	jg     0x42071c
  420794:	jns    0x4207ba
  420796:	addr16 push 0x14ea5f77
  42079c:	mov    ebp,ebp
  42079e:	fchs   
  4207a0:	sbb    eax,DWORD PTR [ebx-0x79469254]
  4207a6:	pop    edx
  4207a7:	xchg   edx,eax
  4207a8:	sub    bl,cl
  4207aa:	das    
  4207ab:	lods   eax,DWORD PTR ds:[esi]
  4207ac:	mov    cl,0x74
  4207ae:	xor    bl,BYTE PTR ds:0x1ae72208
  4207b4:	in     al,0xe0
  4207b6:	popa   
  4207b7:	iret   
  4207b8:	ret    0x2d87
  4207bb:	sbb    ah,BYTE PTR [edx+ebx*1-0x1e81ba58]
  4207c2:	add    BYTE PTR [ebp+0xaca26bf],dl
  4207c8:	enter  0x9543,0x3e
  4207cc:	popf   
  4207cd:	mov    WORD PTR [ebx],cs
  4207cf:	cmc    
  4207d0:	sbb    eax,0x59eeb1bb
  4207d5:	push   esi
  4207d6:	std    
  4207d7:	outs   dx,DWORD PTR ds:[esi]
  4207d8:	xor    esi,DWORD PTR [eiz*8-0x1aaddbba]
  4207df:	xlat   BYTE PTR ds:[ebx]
  4207e0:	cmp    ebp,edx
  4207e2:	cwde   
  4207e3:	cmp    BYTE PTR [esi+eiz*4+0x16c275d9],ch
  4207ea:	sub    al,0x46
  4207ec:	sti    
  4207ed:	(bad)
  4207f1:	mov    bl,0xeb
  4207f3:	add    eax,0x4b49d7b9
  4207f8:	lods   eax,DWORD PTR ds:[esi]
  4207f9:	mov    dh,0x4
  4207fb:	push   esi
  4207fc:	adc    DWORD PTR [eax+eiz*1-0x34],0xffffffad
  420801:	and    al,BYTE PTR [ecx]
  420803:	or     BYTE PTR [ebx-0x67],ch
  420806:	push   esi
  420807:	jmp    0x8cdfb748
  42080c:	adc    eax,0xd9e527d8
  420811:	xor    al,bl
  420813:	mov    edx,0x9a9e25c1
  420818:	push   0xffffffd2
  42081a:	mov    ds:0x917e0d72,al
  42081f:	or     ebx,0xffffffff
  420822:	test   eax,0x215075b2
  420827:	ret    0xc713
  42082a:	or     cl,cl
  42082c:	push   esp
  42082d:	scas   al,BYTE PTR es:[edi]
  42082e:	mov    bh,0x66
  420830:	jno    0x4207b9
  420832:	scas   eax,DWORD PTR es:[edi]
  420833:	enter  0x7a9c,0x83
  420837:	mov    bh,0x70
  420839:	loope  0x4208a0
  42083b:	ds jle 0x420888
  42083e:	sbb    al,bl
  420840:	push   ecx
  420841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420842:	iret   
  420843:	xchg   ebx,eax
  420844:	mov    al,0x3c
  420846:	mov    ch,0x65
  420848:	mov    esi,0xa9dd91fd
  42084d:	(bad)  
  42084e:	mov    edx,DWORD PTR [ebx-0x1cfec88b]
  420854:	sub    ecx,ebx
  420856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420857:	ins    DWORD PTR es:[edi],dx
  420858:	scas   al,BYTE PTR es:[edi]
  420859:	int    0x72
  42085b:	xchg   DWORD PTR ds:0xe939b0b3,ecx
  420861:	jmp    0x420830
  420863:	imul   esp,DWORD PTR es:[edi+0x6ac6382b],0xffffffe7
  42086b:	pusha  
  42086c:	and    al,0xdc
  42086e:	mov    ecx,0xb3eb9d73
  420873:	push   cs
  420874:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  420876:	push   edx
  420877:	or     BYTE PTR [eax+edx*2-0x5b],0x3a
  42087c:	and    eax,0xe85e650b
  420881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420882:	adc    ebp,DWORD PTR [esp+eax*4+0x2f06fcce]
  420889:	push   edi
  42088a:	xor    DWORD PTR [ecx+0x2754b4a1],eax
  420890:	ins    BYTE PTR es:[edi],dx
  420891:	mov    sp,0x3abe
  420895:	cmp    ah,dh
  420897:	ror    bl,1
  420899:	dec    esi
  42089a:	(bad)
  42089d:	not    BYTE PTR [eax+eiz*1]
  4208a0:	adc    bh,BYTE PTR [edi-0x5efd3144]
  4208a6:	inc    edx
  4208a7:	and    BYTE PTR [edi],al
  4208a9:	mov    al,ds:0x9dcfbf4
  4208ae:	retf   
  4208af:	sub    ecx,edx
  4208b1:	ret    0x7710
  4208b4:	sbb    DWORD PTR [ebx+0x1e],0xffffff84
  4208b8:	xor    BYTE PTR [ecx-0x4624cdb8],dl
  4208be:	xlat   BYTE PTR ds:[ebx]
  4208bf:	dec    edx
  4208c0:	xor    DWORD PTR [ebx+ebp*2],esi
  4208c3:	or     BYTE PTR [eax],dh
  4208c5:	sbb    BYTE PTR [ecx+0x4c],ch
  4208c8:	pop    ecx
  4208c9:	ja     0x420927
  4208cb:	sub    DWORD PTR [ebx+0x158b64b8],esp
  4208d1:	inc    ebx
  4208d2:	push   ds
  4208d3:	pop    edi
  4208d4:	xor    BYTE PTR [eax+0x70],bh
  4208d7:	xor    ebp,DWORD PTR [ebx]
  4208d9:	cmp    esp,DWORD PTR [ecx+0x7751932c]
  4208df:	test   eax,0x5b69ae16
  4208e4:	lock (bad) 
  4208e6:	adc    al,0xa0
  4208e8:	inc    edi
  4208e9:	cmp    al,0x44
  4208eb:	stos   DWORD PTR es:[edi],eax
  4208ec:	xchg   edx,eax
  4208ed:	fbld   TBYTE PTR [esi+0x3340dae]
  4208f3:	aas    
  4208f4:	jmp    FWORD PTR [esi+0x635cc6c5]
  4208fa:	push   ss
  4208fb:	out    dx,eax
  4208fc:	pop    edx
  4208fd:	mov    ds:0x315a25e4,al
  420902:	scas   al,BYTE PTR es:[edi]
  420903:	push   ss
  420904:	mov    ebp,DWORD PTR ds:0xd4fa3c2
  42090a:	pop    ss
  42090b:	dec    edx
  42090c:	(bad)  
  42090d:	jnp    0x420929
  42090f:	sub    al,0x2f
  420911:	inc    esi
  420912:	sahf   
  420913:	jb     0x4208b0
  420915:	cmp    al,0x51
  420917:	fist   DWORD PTR [edx]
  420919:	pop    ss
  42091a:	imul   ecx,DWORD PTR [edi],0x2316d22e
  420920:	aas    
  420921:	sbb    al,BYTE PTR [esp+edx*4-0x646cd229]
  420928:	addr16 cmp al,0xbb
  42092b:	add    ah,BYTE PTR [esi]
  42092d:	lahf   
  42092e:	sbb    ebx,ebx
  420930:	sahf   
  420931:	add    ch,BYTE PTR [ebp-0x68adfb1]
  420937:	xchg   ebx,eax
  420939:	xor    DWORD PTR [eax],0xd620746e
  42093f:	jbe    0x4209b8
  420941:	push   0xffffffd2
  420943:	xor    BYTE PTR [ecx-0x52b5b03c],dl
  420949:	inc    ecx
  42094a:	clc    
  42094b:	sub    DWORD PTR [esp+esi*8+0x1d],eax
  42094f:	pusha  
  420950:	push   edx
  420951:	call   0x90320822
  420956:	jl     0x42092a
  420958:	and    ecx,ebp
  42095a:	ret    
  42095b:	sub    al,0xe
  42095d:	scas   eax,DWORD PTR es:[edi]
  42095e:	imul   ebx,DWORD PTR [ebx+0x1b],0xffffff99
  420962:	mov    DWORD PTR [ecx-0x29],esi
  420965:	(bad)  
  420967:	xchg   esp,eax
  420968:	push   esi
  420969:	mov    BYTE PTR [edi+0x46],bh
  42096c:	mov    WORD PTR ds:0xf6683680,es
  420972:	pop    esp
  420973:	dec    ecx
  420974:	push   0x85df0709
  420979:	cmp    al,0xe0
  42097b:	push   edx
  42097c:	(bad)  
  42097d:	rol    BYTE PTR [eax],0xc8
  420980:	mov    esp,0xa2d15b6b
  420985:	test   eax,0x2ff61c0a
  42098a:	mov    edx,0x1a2c238f
  42098f:	int3   
  420990:	push   esi
  420991:	std    
  420992:	or     ebx,DWORD PTR [edx+0x46]
  420995:	es pop ds
  420997:	or     DWORD PTR [ecx],esi
  420999:	jp     0x420a00
  42099b:	xor    dl,bh
  42099d:	test   BYTE PTR [ebx],bh
  42099f:	pop    ebp
  4209a0:	cli    
  4209a1:	mov    ds:0xcc66e9b6,eax
  4209a6:	test   bl,dl
  4209a8:	rcl    DWORD PTR [ecx-0x5e4988b2],1
  4209ae:	shl    DWORD PTR [ebp+0x4774d295],0x30
  4209b5:	in     eax,0xe9
  4209b7:	shl    esi,1
  4209b9:	add    cl,al
  4209bb:	inc    eax
  4209bc:	push   esi
  4209bd:	and    bh,BYTE PTR [esi+0x4e]
  4209c0:	mov    ebp,0x4f939283
  4209c5:	das    
  4209c6:	retf   
  4209c7:	out    dx,al
  4209c8:	jbe    0x420a1d
  4209ca:	cli    
  4209cb:	stos   DWORD PTR es:[edi],eax
  4209cc:	mov    ebx,0x793023e4
  4209d1:	pusha  
  4209d2:	enter  0x5b72,0x18
  4209d6:	or     ecx,edi
  4209d8:	add    dl,al
  4209da:	scas   eax,DWORD PTR es:[edi]
  4209db:	cmc    
  4209dc:	mov    edi,0x8e902e87
  4209e1:	and    al,0xb
  4209e3:	inc    DWORD PTR [ecx+0x27]
  4209e6:	adc    al,BYTE PTR [eax+0x45ba935d]
  4209ec:	sbb    dl,ah
  4209ee:	sbb    al,0x2d
  4209f0:	fstp   QWORD PTR [eax-0x1f]
  4209f3:	mov    bh,BYTE PTR [esi+ebx*1+0x57]
  4209f7:	bound  esp,QWORD PTR ds:[ebx+0x73]
  4209fb:	cmp    ch,BYTE PTR [ebx]
  4209fd:	(bad)  
  4209fe:	fdiv   st(7),st
  420a00:	in     al,dx
  420a01:	lea    edi,[eax]
  420a03:	je     0x4209b6
  420a05:	lods   al,BYTE PTR ds:[esi]
  420a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a07:	cmp    BYTE PTR [edi-0x11163677],bh
  420a0d:	cwde   
  420a0e:	cmp    al,0xed
  420a10:	sbb    ax,0xb15f
  420a14:	fild   QWORD PTR [edx+eax*4-0x7badb78d]
  420a1b:	mov    esp,0xf561fcf2
  420a20:	cmp    ebp,DWORD PTR [edi+0x14fd2487]
  420a26:	retf   
  420a27:	call   0x9180be34
  420a2c:	mov    ?,WORD PTR [ebp+edi*8+0x45]
  420a30:	int3   
  420a31:	sbb    ah,BYTE PTR [ecx-0x651ca56d]
  420a37:	cmp    DWORD PTR [eax+ebx*8],edi
  420a3a:	push   es
  420a3b:	inc    ecx
  420a3c:	push   ecx
  420a3d:	(bad)  
  420a3e:	mov    dl,bh
  420a40:	ins    BYTE PTR es:[edi],dx
  420a41:	ds xchg edi,eax
  420a43:	(bad)  
  420a44:	jmp    0xcd3a:0x5677055b
  420a4b:	xchg   ecx,eax
  420a4c:	fisubr WORD PTR [eax+0x3311b4df]
  420a52:	push   ebx
  420a53:	push   edx
  420a54:	(bad)  
  420a56:	xor    bl,dl
  420a58:	inc    eax
  420a59:	aas    
  420a5a:	lods   al,BYTE PTR ds:[esi]
  420a5b:	imul   esp,DWORD PTR [edx-0x4c],0xc4ca87c1
  420a62:	adc    al,BYTE PTR [ecx]
  420a64:	aam    0xe8
  420a66:	jmp    0x1c00a444
  420a6b:	add    dl,dh
  420a6d:	inc    edx
  420a6e:	xor    cl,BYTE PTR [esi+0x606cbb1]
  420a74:	fisttp WORD PTR [esi-0x5d13d1d5]
  420a7a:	mov    DWORD PTR [edx],edi
  420a7c:	(bad)  
  420a7d:	out    0x4e,eax
  420a7f:	into   
  420a80:	ficom  DWORD PTR [ecx]
  420a82:	xchg   DWORD PTR [ebx-0x63df4d52],edx
  420a88:	sub    DWORD PTR [ebx+0x5cca3968],ebp
  420a8e:	or     al,BYTE PTR [edi]
  420a90:	stos   DWORD PTR es:[edi],eax
  420a91:	cdq    
  420a92:	pop    ebp
  420a93:	xchg   esi,eax
  420a94:	jne    0x420a72
  420a96:	pusha  
  420a97:	xchg   esp,eax
  420a98:	jb     0x420af7
  420a9a:	pop    edi
  420a9b:	add    esi,DWORD PTR [ecx-0x196720a1]
  420aa1:	jmp    0x420ac0
  420aa3:	fmul   QWORD PTR [esp+ebp*1+0x3f]
  420aa7:	and    esi,DWORD PTR [ebx+0x34423efe]
  420aad:	sub    BYTE PTR [ecx-0x79ee4aec],bl
  420ab3:	fwait
  420ab4:	(bad)  
  420ab5:	shr    BYTE PTR [ebp-0x2f8d9eb7],1
  420abb:	lods   eax,DWORD PTR ds:[esi]
  420abc:	push   es
  420abd:	dec    ebp
  420abe:	shl    edi,cl
  420ac0:	mov    ch,0xbe
  420ac2:	ins    DWORD PTR es:[edi],dx
  420ac3:	mov    esp,ebx
  420ac5:	mov    eax,ds:0xcae3cb85
  420aca:	xchg   ecx,eax
  420acb:	cmp    al,0xd1
  420acd:	cs dec eax
  420acf:	mov    dh,0xd3
  420ad1:	popa   
  420ad2:	fcmovnu st,st(3)
  420ad4:	inc    eax
  420ad5:	xchg   esp,eax
  420ad6:	gs and eax,0xdf2b6ca
  420adc:	push   edi
  420add:	pop    edx
  420ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420adf:	mov    ds:0x54f43f9b,al
  420ae4:	rol    DWORD PTR [edx+0x54fc75ec],0x76
  420aeb:	les    ebp,FWORD PTR [eax-0x3d30a998]
  420af1:	data16 jbe 0x420b58
  420af4:	shr    DWORD PTR [eax],cl
  420af6:	imul   edx,DWORD PTR [ebx],0xe8fcff55
  420afc:	outs   dx,BYTE PTR ds:[esi]
  420afd:	enter  0x5db5,0x5e
  420b01:	sbb    ecx,DWORD PTR [edx+ebx*2+0x5d]
  420b05:	and    al,0x7a
  420b07:	and    al,0x49
  420b09:	adc    edi,ecx
  420b0b:	sahf   
  420b0c:	lahf   
  420b0d:	pop    eax
  420b0e:	pop    es
  420b0f:	les    ecx,FWORD PTR [ecx-0x50]
  420b12:	xchg   BYTE PTR [ebp-0x719ee375],bh
  420b18:	sbb    eax,0x86da8b99
  420b1d:	mov    eax,0xfb43c64
  420b22:	fs retf 0x3c73
  420b26:	fisubr WORD PTR [edx-0x17]
  420b29:	dec    ah
  420b2b:	mov    ds:0x1888fb9a,eax
  420b30:	add    al,dl
  420b32:	push   esi
  420b33:	imul   ecx,DWORD PTR [ebp+0x75],0x458bd39f
  420b3a:	imul   DWORD PTR [edx+0x6c]
  420b3d:	or     ebp,DWORD PTR [edx]
  420b3f:	cmp    al,0xbc
  420b41:	les    esi,FWORD PTR [ebx-0x69]
  420b44:	xor    bl,BYTE PTR ds:0x19b743f5
  420b4a:	xor    ah,bh
  420b4c:	add    ecx,DWORD PTR [esi+0x1e5891b1]
  420b52:	jge    0x420b7c
  420b54:	loope  0x420bb0
  420b56:	pusha  
  420b57:	push   ebx
  420b58:	lods   al,BYTE PTR ds:[esi]
  420b59:	out    0x21,eax
  420b5b:	xor    ah,0xb
  420b5e:	es cli 
  420b60:	mov    dh,0xd
  420b62:	dec    edx
  420b63:	mov    ebx,0xbea10dea
  420b68:	loopne 0x420b48
  420b6a:	xor    DWORD PTR [edx+0x2dfa274e],ecx
  420b70:	pop    edx
  420b71:	mov    ecx,0xd3e7af7f
  420b76:	xchg   edx,eax
  420b77:	xchg   esi,eax
  420b78:	ja     0x420b5b
  420b7a:	test   DWORD PTR [edi-0x46],eax
  420b7d:	dec    ebp
  420b7e:	lea    edi,[ebx-0x185a175c]
  420b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b85:	int    0xf6
  420b87:	dec    BYTE PTR [ecx+ebp*4+0x4900d2d9]
  420b8e:	mov    ?,ebx
  420b90:	mov    al,ds:0x2f0926a9
  420b95:	add    DWORD PTR [eax-0x52d2d666],esi
  420b9b:	rcl    bh,1
  420b9d:	pusha  
  420b9e:	jno    0x420b6e
  420ba0:	lods   eax,DWORD PTR ds:[esi]
  420ba1:	jmp    0xab5d0dee
  420ba6:	loopne 0x420c0c
  420ba8:	repz jne 0x420b73
  420bab:	out    0x6,al
  420bad:	(bad)  [edi+0x5d174098]
  420bb3:	retf   
  420bb4:	dec    ebp
  420bb5:	push   edx
  420bb6:	in     al,dx
  420bb7:	js     0x420be4
  420bb9:	call   0xbdbe:0x47baf846
  420bc0:	push   cs
  420bc1:	sub    eax,0x92c45d64
  420bc6:	and    eax,0x50ae21a3
  420bcb:	ret    
  420bcc:	in     al,dx
  420bcd:	inc    ebp
  420bce:	pop    edx
  420bcf:	push   ebp
  420bd0:	or     DWORD PTR [esi+eax*1-0x20220701],edx
  420bd7:	xchg   esp,eax
  420bd8:	dec    ebx
  420bd9:	sbb    dh,ah
  420bdb:	mov    DWORD PTR [ebx+edi*1],0xbf6a1f87
  420be2:	pop    ebp
  420be3:	fs mov eax,0x6a7a3647
  420be9:	js     0x420bed
  420beb:	sbb    DWORD PTR [ecx-0x7fe2bdcf],0xffffff9c
  420bf2:	pop    ds
  420bf3:	jp     0x420c72
  420bf5:	arpl   cx,bx
  420bf7:	je     0x420c3c
  420bf9:	adc    BYTE PTR [edx+0x2a],dh
  420bfc:	cli    
  420bfd:	push   esi
  420bfe:	pop    ecx
  420bff:	and    eax,0xbfbb3999
  420c04:	bound  ebx,QWORD PTR [ecx+edi*8]
  420c07:	shl    DWORD PTR [esp+edx*8-0x7a],cl
  420c0b:	pop    ecx
  420c0c:	mov    al,ds:0x650d0597
  420c11:	stos   DWORD PTR es:[edi],eax
  420c12:	add    al,0x23
  420c14:	dec    eax
  420c15:	jmp    0x91a16872
  420c1a:	xchg   ebx,eax
  420c1b:	or     eax,esp
  420c1d:	out    dx,eax
  420c1e:	inc    ebx
  420c1f:	jp     0x420c47
  420c21:	retf   0x4160
  420c24:	into   
  420c25:	or     DWORD PTR [ecx+0x6a6728d3],edi
  420c2b:	push   0x3
  420c2d:	inc    eax
  420c2e:	cli    
  420c2f:	lea    edi,[edx+edi*4-0x7d]
  420c33:	mov    eax,ds:0xcbaba7cf
  420c38:	mov    esp,0xa0f92985
  420c3d:	pop    edx
  420c3e:	push   ecx
  420c3f:	lahf   
  420c40:	cmp    cl,BYTE PTR [edx-0x6094123e]
  420c46:	inc    ebp
  420c47:	test   al,0xfd
  420c49:	(bad)  
  420c4a:	lods   al,BYTE PTR ds:[esi]
  420c4b:	aas    
  420c4c:	pop    ss
  420c4d:	sub    dh,dh
  420c4f:	and    bh,BYTE PTR [edi+0x4bd07d4a]
  420c55:	xor    dl,BYTE PTR [edi-0xb]
  420c58:	dec    ebp
  420c59:	fidivr DWORD PTR [edi]
  420c5b:	add    ecx,DWORD PTR [edx-0x63]
  420c5e:	sub    BYTE PTR [edi+0x50459a50],ch
  420c64:	xchg   ebx,eax
  420c65:	jne    0x420c0b
  420c67:	retf   
  420c68:	push   eax
  420c69:	mov    bh,0x55
  420c6b:	ins    DWORD PTR es:[edi],dx
  420c6c:	and    al,0x0
  420c6e:	add    BYTE PTR [eax],al
  420c70:	add    BYTE PTR [eax],al
  420c72:	add    DWORD PTR [ebp-0x28],edi
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx+0xb0cb857]
  420c80:	dec    ebp
  420c81:	push   edx
  420c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c83:	xchg   BYTE PTR [ecx],al
  420c85:	add    bl,dh
  420c87:	add    al,0x0
  420c89:	add    BYTE PTR [ebp+0x7556e8a6],bl
  420c8f:	clc    
  420c90:	(bad)  
  420c91:	fwait
  420c92:	les    esp,FWORD PTR [eax-0x14356597]
  420c98:	test   al,0xe2
  420c9a:	sub    eax,0x2d866e6e
  420c9f:	cmc    
  420ca0:	ins    BYTE PTR es:[edi],dx
  420ca1:	shl    DWORD PTR [ecx+0x60e2f990],cl
  420ca7:	sar    BYTE PTR [edi-0x79b4b00e],1
  420cad:	rcl    DWORD PTR [eax+0x5dbf05ff],1
  420cb3:	lods   eax,DWORD PTR ds:[esi]
  420cb4:	xchg   esp,eax
  420cb5:	sub    BYTE PTR [edx+edi*2],bl
  420cb8:	dec    esi
  420cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cba:	push   esi
  420cbb:	loopne 0x420c8e
  420cbd:	mov    edx,0x6748629
  420cc2:	xchg   ebx,eax
  420cc3:	gs loopne 0x420cf0
  420cc6:	mov    dl,0x84
  420cc8:	sbb    bh,BYTE PTR [edi+0x1f]
  420ccb:	inc    ebp
  420ccc:	push   edx
  420ccd:	(bad)  
  420cce:	pop    eax
  420ccf:	xchg   edx,eax
  420cd0:	imul   edi,DWORD PTR [esi+0x1dbad565],0x4e79d05a
  420cda:	call   0x8cd9:0x96d183ca
  420ce1:	cmp    eax,0x5ee8e721
  420ce6:	popa   
  420ce7:	icebp  
  420ce8:	(bad)  
  420ce9:	js     0x420d65
  420ceb:	pop    ecx
  420cec:	push   0xcc001a87
  420cf1:	cmp    cl,dh
  420cf3:	rcr    DWORD PTR [ebp+0x61d02937],cl
  420cf9:	jbe    0x420cb8
  420cfb:	daa    
  420cfc:	jg     0x420d43
  420cfe:	sbb    DWORD PTR [eax-0x63],eax
  420d01:	add    BYTE PTR [ecx],0xa5
  420d04:	dec    ebx
  420d05:	add    BYTE PTR ds:0x9485e52c,cl
  420d0b:	sbb    eax,0x496882b2
  420d10:	iret   
  420d11:	sub    eax,0xaaa62feb
  420d16:	in     al,0x82
  420d18:	lahf   
  420d19:	jnp    0x420cf2
  420d1b:	call   0x635f:0x1e236232
  420d22:	test   BYTE PTR [esi-0x7c],al
  420d25:	sbb    DWORD PTR [edi],ebx
  420d27:	out    dx,eax
  420d28:	xchg   edx,eax
  420d29:	pop    ss
  420d2a:	ret    
  420d2b:	mov    ds:0x567834de,eax
  420d30:	(bad)  ss:0x8067e601
  420d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d38:	jbe    0x420cbb
  420d3a:	push   edx
  420d3b:	push   ebp
  420d3c:	cmp    al,0x1c
  420d3e:	push   es
  420d3f:	jle    0x420d8b
  420d41:	int    0x5e
  420d43:	dec    ecx
  420d44:	or     ebx,DWORD PTR [ebp-0x40]
  420d47:	lahf   
  420d48:	lahf   
  420d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d4a:	(bad)  
  420d4b:	and    eax,0x1c747285
  420d50:	inc    ebx
  420d51:	xchg   ebp,eax
  420d52:	mov    dh,0x13
  420d54:	in     eax,0x6c
  420d56:	in     al,0xe
  420d58:	sub    DWORD PTR [eax+0x4d],eax
  420d5b:	mov    edi,0xabb9fbd9
  420d60:	sbb    DWORD PTR [esi],edx
  420d62:	in     eax,0xaf
  420d64:	xor    BYTE PTR [esi],bl
  420d66:	push   0xffffffe2
  420d68:	lds    edx,FWORD PTR [eax+eax*2]
  420d6b:	out    dx,eax
  420d6c:	mov    DWORD PTR [ebp+ecx*8+0x575078f5],esi
  420d73:	mov    ds:0x79c512af,al
  420d78:	enter  0x667d,0x69
  420d7c:	or     eax,0x9c44ebc6
  420d81:	xor    eax,0x3cf9fba0
  420d86:	ins    BYTE PTR es:[edi],dx
  420d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d88:	cmp    DWORD PTR [esi],0x32
  420d8b:	jmp    0x1756:0xe9baac78
  420d92:	mov    ebp,0x44db628f
  420d97:	pop    esi
  420d98:	hlt    
  420d99:	scas   al,BYTE PTR es:[edi]
  420d9a:	push   esi
  420d9b:	mov    cl,0x2d
  420d9d:	mov    esp,0x7c572fab
  420da2:	mov    eax,0x1decfc80
  420da7:	sub    BYTE PTR [esi-0x65864762],al
  420dad:	cmp    DWORD PTR [ebp+esi*2+0x1d],esp
  420db1:	push   esi
  420db2:	mov    edi,0x589f3d1f
  420db7:	sti    
  420db8:	retf   0xac84
  420dbb:	ins    DWORD PTR es:[edi],dx
  420dbc:	adc    DWORD PTR [edi+0x596e05f1],0x799bd47f
  420dc6:	into   
  420dc7:	xchg   esi,eax
  420dc8:	stc    
  420dc9:	mov    esi,0x4b4fdbe0
  420dce:	mov    bh,0x8d
  420dd0:	out    dx,eax
  420dd1:	lahf   
  420dd2:	jo     0x420dd5
  420dd4:	je     0x420d7b
  420dd6:	pop    eax
  420dd7:	ret    
  420dd8:	and    cl,cl
  420dda:	pop    eax
  420ddb:	mov    ecx,0x574f33e0
  420de0:	mov    dl,0x87
  420de2:	sub    al,0x4d
  420de4:	mov    dl,0x43
  420de6:	in     al,0x5d
  420de8:	adc    eax,0x9e31f74
  420ded:	mov    ds:0xe2c2d02e,eax
  420df2:	call   0xe88dbb09
  420df7:	jge    0x420dd8
  420df9:	dec    eax
  420dfa:	jmp    0x420e4b
  420dfc:	add    eax,0x7a614642
  420e01:	inc    ecx
  420e02:	add    al,0x8e
  420e04:	scas   al,BYTE PTR es:[edi]
  420e05:	mov    ah,0x4a
  420e07:	jge    0x420db4
  420e09:	or     edi,DWORD PTR [eax+ebp*1-0x41]
  420e0d:	xor    eax,0x768a85e0
  420e12:	or     ch,BYTE PTR [esi+0x10]
  420e15:	dec    eax
  420e16:	jmp    0x399bbd21
  420e1b:	fst    DWORD PTR ss:[edi+0xd]
  420e1f:	or     ebx,DWORD PTR [ecx-0x19]
  420e22:	mov    edi,0x84981e2f
  420e27:	push   cs
  420e28:	or     eax,0xb8cba735
  420e2d:	cmp    al,0xc8
  420e2f:	mov    esp,0xe476b546
  420e34:	lds    eax,FWORD PTR [eax]
  420e36:	in     eax,0x61
  420e38:	sub    esp,DWORD PTR ds:0x41c4046e
  420e3e:	cmp    bl,BYTE PTR [eax+0x4c]
  420e41:	fiadd  WORD PTR [ecx+0x16]
  420e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e45:	dec    esi
  420e46:	test   BYTE PTR [eax-0x2d],0x7b
  420e4a:	das    
  420e4b:	popf   
  420e4c:	or     edi,DWORD PTR gs:[edx]
  420e4f:	jge    0x420e45
  420e51:	sahf   
  420e52:	lea    ebp,[eax-0xf9499de]
  420e58:	lds    edx,FWORD PTR [eax+0x549cc59f]
  420e5e:	sub    esi,ebx
  420e60:	loopne 0x420e53
  420e62:	fdivrp st(6),st
  420e64:	pop    es
  420e65:	leave  
  420e66:	mov    al,ds:0x7094cb9a
  420e6b:	lahf   
  420e6c:	in     al,0x81
  420e6e:	or     esi,DWORD PTR [ebx-0x52]
  420e71:	mov    ebx,0xe9266eb2
  420e76:	mov    eax,0x7d9a4417
  420e7b:	jmp    0x724b:0xb2872ae5
  420e82:	inc    edi
  420e83:	mov    ds:0xf47062fc,al
  420e88:	lods   eax,DWORD PTR ds:[esi]
  420e89:	mov    ah,0x11
  420e8b:	mov    ss,WORD PTR [esi+eax*4+0x3c]
  420e8f:	pop    ebx
  420e90:	neg    BYTE PTR [eax+edx*2]
  420e93:	pop    ebp
  420e94:	ds add BYTE PTR es:[eax],0x56
  420e99:	out    dx,eax
  420e9a:	pop    ds
  420e9b:	aam    0x3e
  420e9d:	push   edi
  420e9e:	dec    edi
  420e9f:	mov    ecx,0x8321e6ff
  420ea4:	pop    edx
  420ea5:	or     esp,eax
  420ea7:	aad    0xfb
  420ea9:	std    
  420eaa:	add    ah,dl
  420eac:	or     ebp,0x5e
  420eaf:	popa   
  420eb0:	fst    QWORD PTR [ebp-0x23]
  420eb3:	sub    bl,0x34
  420eb6:	jno    0x420f0b
  420eb8:	es out dx,eax
  420eba:	out    0xe7,al
  420ebc:	mov    cl,0x47
  420ebe:	fisttp DWORD PTR ds:0xb8334ac9
  420ec4:	pop    edx
  420ec5:	xor    al,0x70
  420ec7:	ds push ecx
  420ec9:	rcr    DWORD PTR [ecx+esi*2],0x1
  420ecd:	into   
  420ece:	dec    ebp
  420ecf:	ja     0x420e51
  420ed1:	popa   
  420ed2:	fidiv  DWORD PTR [esi]
  420ed4:	cdq    
  420ed5:	inc    edi
  420ed6:	push   edx
  420ed7:	or     BYTE PTR [edi+0x62d50963],bh
  420edd:	enter  0x399d,0x3d
  420ee1:	push   0x15a1ff94
  420ee6:	xchg   ebx,eax
  420ee7:	ss jmp 0xff14:0x73d893d
  420eef:	fincstp 
  420ef1:	ror    bl,cl
  420ef3:	dec    esp
  420ef4:	mov    edi,0x9a951de4
  420ef9:	or     al,BYTE PTR [edx+0x52]
  420efc:	cmp    eax,edi
  420efe:	fcomp  DWORD PTR [ecx+0x3f]
  420f01:	clc    
  420f02:	and    DWORD PTR [edi-0x5e],edx
  420f05:	sub    edi,DWORD PTR [ebx-0x7b]
  420f08:	push   ds
  420f09:	jmp    0x392e226c
  420f0e:	retf   
  420f0f:	inc    ebx
  420f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f11:	pop    ds
  420f12:	das    
  420f13:	xchg   DWORD PTR [edx-0x10],esp
  420f16:	pushf  
  420f17:	dec    edx
  420f18:	leave  
  420f19:	push   esp
  420f1a:	mov    esp,0x3949e453
  420f1f:	mov    eax,0xb1313c75
  420f24:	xchg   esp,eax
  420f25:	shr    DWORD PTR [ebx+0x1f75e101],1
  420f2b:	mov    ah,0xaa
  420f2d:	mov    edx,0xcc3c8946
  420f32:	les    edi,FWORD PTR [ecx-0x7ed722a1]
  420f38:	sbb    dh,0x5c
  420f3b:	mov    ds:0x1253d0bb,eax
  420f40:	jno    0x420f72
  420f42:	adc    al,bh
  420f44:	or     bh,0xf0
  420f47:	pusha  
  420f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f49:	inc    ebx
  420f4a:	inc    esi
  420f4b:	dec    edi
  420f4c:	xor    eax,0x5fb3f1a1
  420f51:	sbb    DWORD PTR [edi],esi
  420f53:	pop    eax
  420f54:	les    eax,FWORD PTR [esi-0x214a0140]
  420f5a:	xor    ecx,DWORD PTR [eax]
  420f5c:	sbb    al,0xbf
  420f5e:	ret    
  420f5f:	mov    dh,0x17
  420f61:	mov    cl,0xb5
  420f63:	fs mov edx,0x632e6545
  420f69:	pop    edi
  420f6a:	ja     0x420f5c
  420f6c:	cld    
  420f6d:	retf   0x4a81
  420f70:	pusha  
  420f71:	sti    
  420f72:	mov    eax,0x6de8f505
  420f77:	lods   eax,DWORD PTR ds:[esi]
  420f78:	and    ch,BYTE PTR [ebp-0x4b]
  420f7b:	mov    al,0xb8
  420f7d:	(bad)  
  420f7e:	mul    DWORD PTR [edi+0x310b1487]
  420f84:	dec    ebp
  420f85:	lea    edx,[edx-0x50]
  420f88:	push   ds
  420f89:	jg     0x420faa
  420f8b:	xchg   edx,eax
  420f8d:	mov    ch,0xa6
  420f8f:	lods   eax,DWORD PTR ds:[esi]
  420f90:	mov    ds:0x60e404cf,al
  420f95:	(bad)  
  420f96:	mov    ah,0xa
  420f98:	int3   
  420f99:	and    al,0x3a
  420f9b:	xchg   edx,eax
  420f9c:	mov    ?,WORD PTR [eax-0x7c956721]
  420fa2:	repz inc edx
  420fa4:	mov    DWORD PTR [ecx+0x48],edi
  420fa7:	mov    ds:0x225ebea,eax
  420fac:	test   DWORD PTR [edi-0x335eb894],edx
  420fb2:	sbb    eax,0x391e1376
  420fb7:	mov    dh,0xdb
  420fb9:	ja     0x420fc7
  420fbb:	jns    0x420fc5
  420fbd:	xchg   esi,eax
  420fbe:	xchg   BYTE PTR [edx+0x6d],dl
  420fc1:	dec    ebx
  420fc2:	sti    
  420fc3:	out    dx,eax
  420fc4:	addr16 loop 0x420fc8
  420fc7:	pop    ds
  420fc8:	xor    edi,DWORD PTR [edi+ebp*1+0xa]
  420fcc:	not    bl
  420fce:	jg     0x420f6f
  420fd0:	mov    esi,0x70999e30
  420fd5:	out    0x87,al
  420fd7:	mov    cl,0x93
  420fd9:	test   DWORD PTR [esi+0x735d53d4],edx
  420fdf:	dec    ecx
  420fe0:	enter  0x4e44,0x91
  420fe4:	mov    ds:0x618d7981,eax
  420fe9:	sbb    ecx,DWORD PTR [eax+0xf2e53d1]
  420fef:	shr    BYTE PTR [ebx-0x2797280a],cl
  420ff5:	jp     0x420fcd
  420ff7:	(bad)  
  420ff8:	(bad)  
  420ff9:	ficom  DWORD PTR [ecx-0x646be210]
  420fff:	mov    edi,0xd906f283
  421004:	repz jle 0x42102f
  421007:	adc    al,0xfa
  421009:	jmp    0x164b:0xea87aa4f
  421010:	push   ds
  421011:	jbe    0x420fa0
  421013:	popf   
  421014:	mov    cl,0x23
  421016:	fmul   QWORD PTR [ebp+0x15]
  421019:	mov    edi,0x343e4ae
  42101e:	jle    0x420fda
  421020:	or     al,BYTE PTR [ecx]
  421022:	sbb    BYTE PTR [edx+edi*2-0x360020ef],ch
  421029:	xor    eax,0xd583f01b
  42102e:	push   ds
  42102f:	es dec ecx
  421031:	jae    0x42106b
  421033:	push   esi
  421034:	xchg   ebx,eax
  421035:	nop
  421036:	stos   DWORD PTR es:[edi],eax
  421037:	(bad)  
  421038:	jecxz  0x42101c
  42103a:	mulps  xmm5,XMMWORD PTR [edi+0x1b125fda]
  421041:	stos   BYTE PTR es:[edi],al
  421042:	fsub   st,st(4)
  421044:	adc    ebx,DWORD PTR [ebp+ebx*1-0x17]
  421048:	or     BYTE PTR [esp+ebx*2+0x3a2b370e],bh
  42104f:	cmp    al,0x87
  421051:	push   ds
  421052:	cmp    cl,BYTE PTR [edi-0x6c7ab676]
  421058:	and    DWORD PTR [eax+ebx*1],esi
  42105b:	ss ins DWORD PTR es:[edi],dx
  42105d:	or     al,0x5
  42105f:	mov    al,0x75
  421061:	retf   0x2bbe
  421064:	jp     0x42102e
  421066:	js     0x4210e3
  421068:	xor    dh,bl
  42106a:	ud2    
  42106c:	push   eax
  42106d:	enter  0x9255,0x5a
  421071:	ret    
  421072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421073:	rcr    BYTE PTR [eax-0x30f542ff],1
  421079:	arpl   WORD PTR ds:0x7833f08d,ax
  42107f:	mov    esi,0xf531f859
  421084:	scas   eax,DWORD PTR es:[edi]
  421085:	cmc    
  421086:	xchg   esp,ebp
  421088:	xchg   esp,eax
  421089:	dec    edi
  42108a:	(bad)  
  42108b:	pop    edi
  42108c:	daa    
  42108d:	call   0x52b7:0xd65a1712
  421094:	(bad)  
  421095:	out    0x33,al
  421097:	jnp    0x421077
  421099:	sbb    ebp,ebx
  42109b:	add    al,0x91
  42109d:	jle    0x421022
  42109f:	test   eax,0xc6d7cca8
  4210a4:	cwde   
  4210a5:	jle    0x4210ed
  4210a7:	imul   eax,ebp,0xffffffe5
  4210aa:	cmp    DWORD PTR [ebx+0x16],0x48
  4210ae:	push   edi
  4210af:	sbb    BYTE PTR [ebp+0x75],ah
  4210b2:	and    bl,BYTE PTR [edi+0x7af23f1d]
  4210b8:	xchg   esp,eax
  4210b9:	rcl    DWORD PTR [eax],1
  4210bb:	push   edx
  4210bc:	dec    ebp
  4210bd:	loop   0x421066
  4210bf:	mov    bh,0x54
  4210c1:	dec    eax
  4210c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210c3:	xor    al,0xdd
  4210c5:	stos   BYTE PTR es:[edi],al
  4210c6:	stos   DWORD PTR es:[edi],eax
  4210c7:	leave  
  4210c8:	mov    edi,DWORD PTR [edi+0x75bcb470]
  4210ce:	push   cs
  4210cf:	lods   al,BYTE PTR ds:[esi]
  4210d0:	out    dx,al
  4210d1:	dec    eax
  4210d2:	out    dx,eax
  4210d3:	inc    ecx
  4210d4:	(bad)  [ebx-0x23f4b810]
  4210da:	jne    0x421133
  4210dc:	or     eax,0x8e0dfdf5
  4210e1:	push   edx
  4210e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210e3:	mov    ebx,0xcfec4173
  4210e8:	add    dh,cl
  4210ea:	push   0x56e372ba
  4210ef:	lfs    ebx,FWORD PTR [esi-0x20c443b2]
  4210f6:	mov    al,0x1a
  4210f8:	jp     0x4210f5
  4210fa:	mov    cl,BYTE PTR [edi]
  4210fc:	pushf  
  4210fd:	pushf  
  4210fe:	ss cld 
  421100:	imul   edx,DWORD PTR [esi+0x1df49e1f],0x13f6fb70
  42110a:	imul   esi,DWORD PTR [edi],0x86dd022e
  421110:	pop    eax
  421111:	cmp    BYTE PTR [esi+0x23],cl
  421114:	push   es
  421115:	enter  0x6dc3,0xe0
  421119:	test   eax,0x7e69e2ca
  42111e:	daa    
  42111f:	jecxz  0x4210b1
  421121:	add    ebx,DWORD PTR [ebp-0x71b2cbf1]
  421127:	mov    dl,BYTE PTR ds:0xc7b24340
  42112d:	sti    
  42112e:	test   DWORD PTR [ecx-0x248f4890],edi
  421134:	pop    es
  421135:	mov    bh,0x2
  421137:	lock jecxz 0x42119d
  42113a:	rol    eax,1
  42113c:	(bad)
  421140:	dec    esi
  421141:	mov    bh,0xec
  421143:	js     0x421121
  421145:	shl    DWORD PTR [ebx-0x1d6bb1d0],1
  42114b:	es gs icebp 
  42114e:	call   0x814d8db5
  421153:	popf   
  421154:	fcmovbe st,st(3)
  421156:	mov    esp,0xc085f047
  42115b:	icebp  
  42115c:	pop    edx
  42115d:	adc    al,BYTE PTR [edx-0x3e]
  421160:	into   
  421161:	pop    es
  421162:	dec    eax
  421163:	aas    
  421164:	mov    ch,0x45
  421166:	test   BYTE PTR [edx],bl
  421168:	outs   dx,BYTE PTR ds:[esi]
  421169:	pop    edx
  42116a:	xchg   BYTE PTR [eax+0x41],bl
  42116d:	xchg   edx,eax
  42116e:	sbb    eax,0xb15452c2
  421173:	mov    bh,0x49
  421175:	imul   esi,DWORD PTR [ebx+0xd11bb99],0xb5fd
  42117f:	add    BYTE PTR [eax],al
  421181:	add    BYTE PTR [edi+0x5b2a13cf],al
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [edi],ch
  42118f:	cdq    
  421190:	mov    al,0x3
  421192:	cwde   
  421193:	mov    eax,DWORD PTR [ecx]
  421195:	add    bl,dh
  421197:	add    al,0x0
  421199:	add    ah,bl
  42119b:	push   ebx
  42119c:	push   0xffffffa6
  42119e:	js     0x421191
  4211a0:	pop    edi
  4211a1:	xchg   esp,eax
  4211a2:	enter  0xadca,0x58
  4211a6:	(bad)  
  4211a7:	jg     0x4211e7
  4211a9:	addr16 xor bh,bh
  4211ac:	inc    edx
  4211ad:	push   esi
  4211ae:	mov    BYTE PTR [ebx+0x296084cf],bh
  4211b4:	fisub  DWORD PTR [eax+ebx*8-0xa669764]
  4211bb:	in     al,0xa5
  4211bd:	jg     0x421175
  4211bf:	in     eax,dx
  4211c0:	ds aam 0xd0
  4211c3:	sub    eax,0xde264a19
  4211c8:	push   es
  4211c9:	loopne 0x421206
  4211cb:	mov    bh,0xaa
  4211cd:	add    al,dl
  4211cf:	pushw  0x69fe
  4211d3:	ficomp DWORD PTR [edi-0x5a]
  4211d6:	or     ebx,ecx
  4211d8:	ds loope 0x42124b
  4211db:	js     0x42121e
  4211dd:	push   ecx
  4211de:	add    al,0x67
  4211e0:	xor    dl,BYTE PTR ds:[edi+0x6e]
  4211e4:	mov    esp,0x54426776
  4211e9:	fiadd  DWORD PTR [edx-0x78fae7ea]
  4211ef:	sahf   
  4211f0:	shr    BYTE PTR [edx-0x6f],0x29
  4211f4:	pop    esi
  4211f5:	rol    BYTE PTR [eax],1
  4211f7:	sub    bh,BYTE PTR ds:0xa4988e93
  4211fd:	repnz sbb BYTE PTR [ebx-0xf40d6d0],ah
  421204:	xchg   ecx,eax
  421205:	imul   ebx,DWORD PTR [esi-0x7a],0x91d22c31
  42120c:	push   edi
  42120d:	adc    al,cl
  42120f:	mov    bh,bl
  421211:	fbstp  TBYTE PTR [eax]
  421213:	cmp    al,0xc4
  421215:	scas   eax,DWORD PTR es:[edi]
  421216:	jl     0x421238
  421218:	aam    0xbd
  42121a:	call   0xfc8e5680
  42121f:	add    al,0x76
  421221:	sar    DWORD PTR [ebx+0x464d5d1c],cl
  421227:	loop   0x421239
  421229:	int    0x69
  42122b:	cdq    
  42122c:	shl    DWORD PTR [edx+ebp*2-0x27aad14],1
  421233:	xlat   BYTE PTR ds:[ebx]
  421234:	shr    BYTE PTR [ebp+0x5a1ff54b],0x58
  42123b:	xchg   esi,eax
  42123c:	repz shl DWORD PTR [ebx],0xcc
  421240:	ins    BYTE PTR es:[edi],dx
  421241:	jecxz  0x421230
  421243:	mov    esi,ds
  421245:	mov    ebp,0x676cd833
  42124a:	jae    0x421275
  42124c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42124d:	push   ebp
  42124e:	or     cl,BYTE PTR [ecx]
  421250:	fimul  WORD PTR [edi+0x73ae874c]
  421256:	sbb    eax,0x118d4642
  42125b:	dec    BYTE PTR [eax-0x67]
  42125e:	cmp    eax,0x21219d5a
  421263:	(bad)  
  421264:	push   edx
  421265:	jmp    0x42121f
  421267:	mov    eax,0x811bbe65
  42126c:	or     BYTE PTR [ecx-0x4b79e859],0xc
  421273:	mov    WORD PTR [ecx],?
  421275:	inc    esi
  421276:	mov    WORD PTR [ecx+0x30d8bec4],?
  42127c:	mov    ss,WORD PTR [eax]
  42127e:	mov    BYTE PTR [edx+eiz*2],bh
  421281:	nop
  421282:	push   edi
  421283:	and    BYTE PTR [esp+eax*4-0x694f3d26],cl
  42128a:	sti    
  42128b:	dec    ebx
  42128c:	arpl   bx,cx
  42128e:	popf   
  42128f:	leave  
  421290:	push   cx
  421292:	data16 js 0x4212a8
  421295:	test   al,0x1e
  421297:	test   DWORD PTR [esi],ecx
  421299:	stos   BYTE PTR es:[edi],al
  42129a:	mov    al,0x67
  42129c:	sti    
  42129d:	fldcw  WORD PTR [edx-0x8]
  4212a0:	add    eax,0x341f3ca1
  4212a5:	daa    
  4212a6:	mov    ds:0xae123818,al
  4212ab:	sbb    DWORD PTR [ebp+0x2e],eax
  4212ae:	jmp    ebx
  4212b0:	cmc    
  4212b1:	pop    ebp
  4212b2:	mov    al,ds:0x590110bb
  4212b7:	mov    ds:0xfc5d7c7b,eax
  4212bc:	xor    ch,dl
  4212be:	repz jmp 0x4212fc
  4212c1:	jmp    0x42127e
  4212c3:	adc    dh,cl
  4212c5:	jge    0x4212b4
  4212c7:	push   eax
  4212c8:	cwde   
  4212c9:	iret   
  4212ca:	sti    
  4212cb:	mov    ecx,0x829d4bcc
  4212d0:	test   eax,0x34aeb9f5
  4212d5:	lea    edx,[edx+esi*2+0x18]
  4212d9:	inc    ecx
  4212da:	call   0x9a576177
  4212df:	sub    DWORD PTR [ecx-0x319e2448],edx
  4212e5:	adc    edx,DWORD PTR [edi+ecx*1+0x4]
  4212e9:	stos   BYTE PTR es:[edi],al
  4212ea:	retf   0xb870
  4212ed:	les    eax,FWORD PTR [ebp-0x54]
  4212f0:	mov    eax,0xd909f412
  4212f5:	enter  0x44c,0xb1
  4212f9:	pop    eax
  4212fa:	dec    ecx
  4212fb:	les    ecx,FWORD PTR [edx+0x56cf0564]
  421301:	mov    ebp,0x7eef298a
  421306:	jnp    0x42132f
  421308:	shl    BYTE PTR [ebp+0x12],cl
  42130b:	sti    
  42130c:	mov    cl,0x5a
  42130e:	mov    edx,0x606fec11
  421313:	jp     0x421347
  421315:	int    0x5f
  421317:	outs   dx,DWORD PTR ds:[esi]
  421318:	dec    ebx
  421319:	and    eax,0xb6823637
  42131e:	fnstsw WORD PTR [edi+0xa]
  421321:	fcmovnbe st,st(2)
  421323:	adc    edi,ebp
  421325:	sar    BYTE PTR ds:0x9376ef04,0x71
  42132c:	push   ds
  42132d:	jbe    0x421356
  42132f:	mov    dl,0xf4
  421331:	aas    
  421332:	repz cdq 
  421334:	sbb    dl,dl
  421336:	or     eax,0xa31fb266
  42133b:	mov    DWORD PTR ds:0xb0aa39d8,ecx
  421341:	and    DWORD PTR [ebx-0x71ca2d74],ebp
  421347:	sub    bl,BYTE PTR [edi-0x73]
  42134a:	out    dx,al
  42134b:	in     al,0xf7
  42134d:	xor    DWORD PTR [ebx+0x7476b92],edi
  421353:	mov    ebp,0xb746496b
  421358:	popa   
  421359:	arpl   WORD PTR [edx],dx
  42135b:	jp     0x4213d4
  42135d:	test   al,0xac
  42135f:	push   ebp
  421360:	push   esp
  421361:	mov    ah,0xc6
  421363:	mov    cl,0x40
  421365:	and    eax,ecx
  421367:	mov    esi,0xb46ea33e
  42136c:	add    ebx,DWORD PTR [edi+0x5b]
  42136f:	paddsb mm5,QWORD PTR [ecx]
  421372:	repnz shl DWORD PTR [eax+0x365e3a8a],0x25
  42137a:	xor    BYTE PTR [edi-0x49],cl
  42137d:	pop    ss
  42137e:	sub    bh,BYTE PTR [edx+0x18]
  421381:	(bad)  
  421382:	in     al,0x39
  421384:	bound  esp,QWORD PTR [eax+0x76]
  421387:	int    0x9c
  421389:	loop   0x4213f1
  42138b:	jl     0x4213a7
  42138d:	push   esi
  42138e:	into   
  42138f:	xor    al,0xe6
  421391:	sbb    ecx,DWORD PTR ds:0x656b8d43
  421397:	adc    BYTE PTR [ebx-0x51],ah
  42139a:	push   ebx
  42139b:	jbe    0x42137f
  42139d:	push   eax
  42139e:	leave  
  42139f:	mov    bh,0x84
  4213a1:	lds    esp,FWORD PTR [eax-0xbafbd1d]
  4213a7:	push   eax
  4213a8:	test   eax,0xffa4f751
  4213ad:	lods   eax,DWORD PTR ds:[esi]
  4213ae:	jle    0x421350
  4213b0:	sbb    DWORD PTR [esi],edx
  4213b2:	sbb    DWORD PTR [eax+0x18],eax
  4213b5:	mov    fs,WORD PTR [esi]
  4213b7:	sub    al,0x5a
  4213b9:	outs   dx,DWORD PTR ds:[esi]
  4213ba:	sbb    dh,BYTE PTR [esi-0x26e15f41]
  4213c0:	je     0x4213ef
  4213c2:	sbb    eax,0x457f0698
  4213c7:	loope  0x4213ae
  4213c9:	(bad)  
  4213ca:	sbb    ecx,DWORD PTR [ecx+0x539e19da]
  4213d0:	push   esi
  4213d1:	shl    BYTE PTR [ebx-0x31],0x14
  4213d5:	dec    edi
  4213d6:	mov    ch,0xa3
  4213d8:	dec    ebp
  4213d9:	mov    DWORD PTR [esi+0x781b9f81],eax
  4213df:	xor    DWORD PTR [ecx-0x6e10f8f],ebx
  4213e5:	sar    DWORD PTR [eax+0x5ca9ab65],1
  4213eb:	test   BYTE PTR [eax-0x12c41662],ah
  4213f1:	scas   eax,DWORD PTR es:[edi]
  4213f2:	addr16 push esp
  4213f4:	cli    
  4213f5:	sub    DWORD PTR [ecx-0x724988f3],ebx
  4213fb:	(bad)  
  4213fc:	sti    
  4213fd:	jle    0x421434
  4213ff:	ret    0x7725
  421402:	cmp    eax,DWORD PTR [eax]
  421404:	(bad)  
  421405:	sar    BYTE PTR [ebp-0x56a81854],cl
  42140b:	push   cs
  42140c:	sbb    dh,dl
  42140e:	loopne 0x421463
  421410:	dec    esi
  421411:	and    bh,bh
  421413:	mov    edi,0x3c0da089
  421418:	scas   al,BYTE PTR es:[edi]
  421419:	leave  
  42141a:	fadd   st(6),st
  42141c:	fadd   DWORD PTR [eax+0x22]
  42141f:	(bad)  
  421420:	xchg   ebp,eax
  421421:	shl    DWORD PTR [ebx+0x9],0x27
  421425:	int    0xaa
  421427:	pop    ebx
  421428:	jg     0x421420
  42142a:	push   edx
  42142b:	fsubr  QWORD PTR [esp+ecx*4-0x2e]
  42142f:	mov    dh,0x53
  421431:	sti    
  421432:	mov    al,ds:0xc92af30b
  421437:	mov    dl,0x7b
  421439:	bound  ecx,QWORD PTR [esi]
  42143b:	xchg   bx,ax
  42143d:	inc    esp
  42143e:	je     0x4214aa
  421440:	and    DWORD PTR [esi+0x3cda08f4],edi
  421446:	call   DWORD PTR [ecx-0x57]
  421449:	(bad)  
  42144b:	imul   DWORD PTR [ebp+0x1dd1b975]
  421451:	and    BYTE PTR [esi-0x3e],bh
  421454:	push   es
  421455:	pop    ss
  421456:	lds    esi,FWORD PTR ds:0xac235195
  42145c:	push   esi
  42145d:	dec    edx
  42145e:	adc    al,0x42
  421460:	dec    ebx
  421461:	es out dx,al
  421463:	aas    
  421464:	pop    esi
  421465:	mov    ds:0xf4829c9c,al
  42146a:	xchg   esp,eax
  42146b:	xchg   ecx,eax
  42146c:	ja     0x42148b
  42146e:	xchg   esi,eax
  42146f:	into   
  421470:	push   esp
  421471:	sub    al,0xd5
  421473:	xor    ch,BYTE PTR [ebx+0x1b]
  421476:	adc    DWORD PTR [esi],edx
  421478:	out    dx,al
  421479:	mov    ecx,0xde6fcde3
  42147e:	sbb    cl,BYTE PTR [ecx-0x25]
  421481:	fcmove st,st(7)
  421483:	add    bh,BYTE PTR [edi]
  421485:	jnp    0x421409
  421487:	inc    ebx
  421488:	inc    ebx
  421489:	xchg   esi,eax
  42148a:	mov    bl,0x7b
  42148c:	sub    DWORD PTR [edx+0x26],0xe308a296
  421493:	jo     0x421434
  421495:	xor    eax,0x675d0b29
  42149a:	push   ebp
  42149b:	inc    edi
  42149c:	repz push ebx
  42149e:	popf   
  42149f:	jne    0x421422
  4214a1:	dec    ecx
  4214a2:	jb     0x4214b4
  4214a4:	loopne 0x4214c6
  4214a6:	je     0x421440
  4214a8:	cmp    bh,BYTE PTR [ebp+0x69]
  4214ab:	inc    eax
  4214ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ad:	dec    ebx
  4214ae:	sbb    DWORD PTR [esp+eiz*2-0x5e13b2cc],eax
  4214b5:	sti    
  4214b6:	mov    ebx,ebp
  4214b8:	das    
  4214b9:	sbb    ebp,DWORD PTR [edi-0xb0ecbbf]
  4214bf:	sub    al,0x12
  4214c1:	out    0x71,eax
  4214c3:	xor    ebp,DWORD PTR [ebx-0x50]
  4214c6:	iret   
  4214c7:	xchg   edx,eax
  4214c8:	shl    dl,0x9f
  4214cb:	stos   BYTE PTR es:[edi],al
  4214cc:	and    al,0xad
  4214ce:	push   es
  4214cf:	gs push eax
  4214d1:	pop    edi
  4214d2:	sub    cl,BYTE PTR [edx+ebx*4+0x14]
  4214d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214d7:	mov    bl,0x80
  4214d9:	dec    ebx
  4214da:	mov    esi,0x1c90da0c
  4214df:	xchg   esi,eax
  4214e0:	jmp    0x780f:0xedafd48f
  4214e7:	icebp  
  4214e8:	xor    ebx,esp
  4214ea:	mov    ecx,0x9b25cbdf
  4214ef:	pop    ds
  4214f0:	(bad)  
  4214f1:	mov    esp,0xbc80d215
  4214f6:	add    BYTE PTR [ebx+0x14],ch
  4214f9:	scas   al,BYTE PTR es:[edi]
  4214fa:	pop    edx
  4214fb:	cli    
  4214fc:	(bad)  
  4214fe:	cwde   
  4214ff:	push   0xffffffe2
  421501:	cmp    eax,0x2417692b
  421506:	sub    edi,DWORD PTR [eax]
  421508:	pop    ecx
  421509:	mov    esp,0x665bad91
  42150e:	adc    BYTE PTR [ecx+0x57],ch
  421511:	lods   eax,DWORD PTR ds:[esi]
  421512:	in     eax,0x18
  421514:	test   eax,ebx
  421516:	and    al,0xe
  421518:	add    ebx,0x17cbdf9
  42151e:	popa   
  42151f:	push   0xfffffff3
  421521:	sbb    BYTE PTR [ebp+eiz*2+0x416da1ff],bh
  421528:	or     eax,0xb4ac998a
  42152d:	mov    ah,0x73
  42152f:	and    dl,BYTE PTR [edx+0x57]
  421532:	out    dx,al
  421533:	and    BYTE PTR [eax],ah
  421535:	imul   edi,DWORD PTR [bp+si+0x18],0x579432dd
  42153d:	fstp   QWORD PTR [edi+ebx*4]
  421540:	push   edi
  421541:	inc    ebp
  421542:	add    al,0xec
  421544:	mov    ebx,0xf6bcbf39
  421549:	les    esp,FWORD PTR [di+0x62]
  42154d:	and    dl,BYTE PTR ds:0x3f842aa6
  421553:	ret    0xf655
  421556:	pop    ebx
  421557:	cwde   
  421558:	into   
  421559:	dec    esi
  42155a:	and    al,0x8d
  42155c:	dec    esp
  42155d:	or     al,0x51
  42155f:	adc    BYTE PTR [edx-0x2efff414],al
  421565:	loop   0x42157f
  421567:	daa    
  421568:	(bad)  
  421569:	(bad)  
  42156a:	rcr    DWORD PTR [edx-0x4e],1
  42156d:	ins    BYTE PTR es:[edi],dx
  42156e:	pop    ss
  42156f:	out    dx,al
  421570:	dec    edx
  421571:	leave  
  421572:	in     eax,0xce
  421574:	arpl   WORD PTR [ecx-0x2b2483e8],bx
  42157a:	mov    esi,0xa17bd7dd
  42157f:	mov    ebx,0x12795ba4
  421584:	js     0x421526
  421586:	mov    DWORD PTR [edi+0x751bc568],esp
  42158c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42158e:	inc    edi
  42158f:	jne    0x421576
  421591:	daa    
  421592:	ss pushf 
  421594:	aam    0xc5
  421596:	jno    0x4215dc
  421598:	imul   eax,eax,0xd
  42159b:	icebp  
  42159c:	cmp    BYTE PTR ss:[edx+0x3e],dl
  4215a0:	pop    ss
  4215a1:	xor    eax,esp
  4215a3:	mov    ebx,0x846248d8
  4215a8:	and    ebp,DWORD PTR [ecx+0x667c5e6]
  4215ae:	mov    DWORD PTR [edi-0x1a],ebx
  4215b1:	add    ah,BYTE PTR [edi]
  4215b3:	stc    
  4215b4:	xchg   edx,eax
  4215b5:	cmp    DWORD PTR [edx-0x7a33e2c8],ecx
  4215bb:	std    
  4215bc:	fcomip st,st(6)
  4215be:	pop    esi
  4215bf:	jmp    0x6eb88261
  4215c4:	lahf   
  4215c5:	xchg   edx,eax
  4215c6:	mov    dh,BYTE PTR [esi]
  4215c8:	je     0x421648
  4215ca:	mov    BYTE PTR [ebx+0x3190cafd],cl
  4215d0:	add    cl,BYTE PTR [ebx-0x25]
  4215d3:	fs retf 0xbb62
  4215d7:	sbb    eax,0x432b512d
  4215dc:	hlt    
  4215dd:	int    0x8e
  4215df:	adc    BYTE PTR [esp+ebx*8+0x76],cl
  4215e3:	test   DWORD PTR [ecx],eax
  4215e5:	mov    eax,0xeba80cca
  4215ea:	xchg   ebx,ebp
  4215ec:	fsub   DWORD PTR [ecx+0x3ef01909]
  4215f2:	xor    al,0x16
  4215f4:	cdq    
  4215f5:	mov    esp,edi
  4215f7:	data16 mov WORD PTR [eax+0x4d],cs
  4215fb:	mov    al,0xa2
  4215fd:	inc    ebx
  4215fe:	imul   eax,edi,0xffffff9c
  421601:	mov    ch,0x8c
  421603:	cdq    
  421604:	jmp    0xb90f:0xdd5b55d6
  42160b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42160c:	ficomp WORD PTR [edi-0x60552023]
  421612:	(bad)  [ecx+0x5f]
  421615:	or     ecx,DWORD PTR [edx-0x253dc1aa]
  42161b:	cmp    al,0x68
  42161d:	fisubr WORD PTR [edi-0x3936e92d]
  421623:	jnp    0x421666
  421625:	xchg   esp,eax
  421626:	jae    0x42162b
  421628:	sub    ebp,DWORD PTR [edx+0x1a4933ad]
  42162e:	es push ecx
  421630:	rcr    DWORD PTR [ecx-0x146b64ad],cl
  421636:	jge    0x42165e
  421638:	icebp  
  421639:	loop   0x4215e0
  42163b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42163c:	or     eax,0x8ac17e2
  421641:	push   ss
  421642:	and    cl,BYTE PTR [esp+edi*2+0x4c55171d]
  421649:	dec    DWORD PTR [ebx+ebx*4]
  42164c:	ficomp WORD PTR [ebx]
  42164e:	in     al,0x65
  421650:	stc    
  421651:	xchg   ebx,eax
  421652:	aam    0x4a
  421654:	test   bh,0xe9
  421657:	fdivr  QWORD PTR [ecx-0x7c]
  42165a:	add    ch,BYTE PTR [edx-0x33a102fa]
  421660:	aam    0xb3
  421662:	out    dx,eax
  421663:	arpl   WORD PTR [ebx+ebx*8],si
  421666:	mov    eax,ds:0x7480d7c3
  42166b:	cs cmp eax,0xc634a9a9
  421671:	fild   WORD PTR [ebx+0x6f]
  421674:	inc    ecx
  421675:	mov    BYTE PTR [eax-0x24],ah
  421678:	xchg   edx,eax
  421679:	sbb    al,0xd4
  42167b:	jb     0x4216c1
  42167d:	pop    esi
  42167e:	fisttp WORD PTR [ecx+0x4d]
  421681:	dec    edi
  421682:	jo     0x42169c
  421684:	addr16 push 0xea167f45
  42168a:	cmp    bh,dh
  42168c:	sti    
  42168d:	add    BYTE PTR [eax],al
  42168f:	add    BYTE PTR [eax],al
  421691:	add    bl,bh
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x411fa2c6
  4216a1:	push   ds
  4216a2:	mov    edx,DWORD PTR [eax+0x4f30001]
  4216a8:	add    BYTE PTR [eax],al
  4216aa:	cmp    BYTE PTR [edx+0x5d],al
  4216ad:	add    al,0x6e
  4216af:	dec    edi
  4216b0:	xor    esi,esp
  4216b2:	add    al,0xe0
  4216b4:	mov    edx,0xe0ee2ea8
  4216b9:	(bad)  
  4216ba:	out    0x6b,al
  4216bc:	loope  0x4216b4
  4216be:	mov    bh,0x9e
  4216c0:	outs   dx,BYTE PTR cs:[esi]
  4216c2:	imul   edx,DWORD PTR [ebp+0x58720c0b],0xed074096
  4216cc:	pop    ebp
  4216cd:	std    
  4216ce:	xchg   esp,eax
  4216cf:	pop    es
  4216d0:	lds    esi,FWORD PTR [ebx-0x29]
  4216d3:	int3   
  4216d4:	hlt    
  4216d5:	push   es
  4216d6:	sbb    al,0x5
  4216d8:	mov    ecx,DWORD PTR [edi+edx*4-0x64]
  4216dc:	lea    eax,[esi]
  4216de:	fdivr  QWORD PTR [edx]
  4216e0:	pop    ebx
  4216e1:	call   0x22e9bf20
  4216e6:	xor    BYTE PTR [ecx*1+0x1fbcbea7],dl
  4216ed:	add    ebx,DWORD PTR [edi]
  4216ef:	fisubr DWORD PTR [edi]
  4216f1:	test   eax,0xdcca454d
  4216f6:	imul   BYTE PTR [esi+ecx*1]
  4216f9:	retf   
  4216fa:	repnz or ecx,eax
  4216fd:	cmp    BYTE PTR [ebx-0x61],bl
  421700:	cmp    dl,cl
  421702:	jnp    0x4216e3
  421704:	mov    edi,DWORD PTR [eax-0x77]
  421707:	or     DWORD PTR [ebx+0x22b0e1f9],esp
  42170d:	push   ecx
  42170e:	shr    BYTE PTR ds:0x7df07b22,1
  421714:	fdivr  QWORD PTR [edi+0x481639aa]
  42171a:	sub    al,0x6e
  42171c:	shl    edx,0xd
  42171f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421720:	jge    0x421705
  421722:	push   edx
  421723:	pop    es
  421724:	hlt    
  421725:	retf   0x1990
  421728:	xchg   ebp,eax
  421729:	dec    esi
  42172a:	jnp    0x421784
  42172c:	fsubrp st(1),st
  42172e:	shr    cl,cl
  421730:	mov    ?,WORD PTR [esi]
  421732:	dec    ecx
  421733:	ss loope 0x421723
  421736:	inc    ecx
  421737:	push   esp
  421738:	shl    BYTE PTR [ecx+0x389be99f],1
  42173e:	fmul   QWORD PTR [ebx+eiz*2]
  421741:	adc    ah,BYTE PTR [eax-0x71]
  421744:	jg     0x4216c8
  421746:	sub    al,0x9f
  421748:	pop    esi
  421749:	es je  0x421756
  42174c:	mov    DWORD PTR [edi+0x724f4095],edi
  421752:	addr16 loopne 0x4216f6
  421755:	adc    eax,0x80908590
  42175a:	mov    BYTE PTR [edi+esi*2+0x46],ch
  42175e:	ret    
  42175f:	cmp    ah,BYTE PTR [esi]
  421761:	fsub   QWORD PTR [ebp+0x69]
  421764:	adc    DWORD PTR [ebx+0x20],eax
  421767:	sub    al,0x97
  421769:	cmp    dl,dh
  42176b:	pop    ss
  42176c:	add    al,0x38
  42176e:	mov    ch,0x37
  421770:	mov    esp,DWORD PTR [eax]
  421772:	mov    eax,gs:0xd428b281
  421778:	repnz or BYTE PTR [edx],0x4e
  42177c:	sbb    BYTE PTR [esi],dh
  42177e:	mov    esi,0x3e29f3fc
  421783:	mov    bh,0x3d
  421785:	pop    es
  421786:	fstp   TBYTE PTR [ecx+0x10]
  421789:	jecxz  0x4217d8
  42178b:	dec    edi
  42178c:	xchg   ebx,eax
  42178d:	sub    DWORD PTR [esi-0x2d],eax
  421790:	lock ss (bad) 
  421793:	daa    
  421794:	rcr    DWORD PTR [eax+0x64],1
  421797:	jmp    0x4217a3
  421799:	in     eax,0x73
  42179b:	out    0x87,al
  42179d:	retf   
  42179e:	mov    ebx,0xe75806a6
  4217a3:	xchg   ecx,eax
  4217a4:	xor    bh,BYTE PTR [eax+eiz*4+0x6a]
  4217a8:	dec    esp
  4217a9:	mov    ecx,0x8dcea2ee
  4217ae:	shl    BYTE PTR [ebp-0x29db6fcf],cl
  4217b4:	mov    ss,ebx
  4217b6:	push   edx
  4217b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217b8:	addr16 inc ecx
  4217ba:	inc    esp
  4217bb:	imul   eax,DWORD PTR [ebp+0x636f9cd4],0xbd35e2b9
  4217c5:	jb     0x42175d
  4217c7:	sub    DWORD PTR [eax+0x93983a8],esi
  4217cd:	pop    ecx
  4217ce:	or     ecx,esi
  4217d0:	add    dl,ch
  4217d2:	rcl    ah,cl
  4217d4:	jno    0x421774
  4217d6:	push   0xffffffda
  4217d8:	and    al,0x11
  4217da:	lock mov al,ds:0x55103325
  4217e0:	or     BYTE PTR [ecx],ch
  4217e2:	dec    eax
  4217e3:	addr16 gs sti 
  4217e6:	inc    esi
  4217e7:	cmp    DWORD PTR [edx+edi*4+0x77],ecx
  4217eb:	dec    ecx
  4217ec:	xchg   ecx,eax
  4217ed:	fs aaa 
  4217ef:	ret    
  4217f0:	popa   
  4217f1:	push   es
  4217f2:	stos   BYTE PTR es:[edi],al
  4217f3:	inc    edx
  4217f4:	pusha  
  4217f5:	jmp    0x4217da
  4217f7:	cmp    al,bh
  4217f9:	outs   dx,BYTE PTR ds:[esi]
  4217fa:	or     edi,DWORD PTR [esi]
  4217fc:	push   ebp
  4217fd:	adc    al,0xa3
  4217ff:	inc    esi
  421800:	and    BYTE PTR [edx+0x16],0x24
  421804:	mov    ds:0xe205cebc,al
  421809:	xor    al,0x5b
  42180b:	xor    al,BYTE PTR [esi-0x78]
  42180e:	pop    ebx
  42180f:	sbb    edx,ebx
  421811:	das    
  421812:	ret    0xf5cd
  421815:	out    dx,eax
  421816:	mov    dl,0x21
  421818:	test   ah,0xdf
  42181b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42181c:	inc    eax
  42181d:	sub    BYTE PTR [eax+0x79],bl
  421820:	jnp    0x4217c4
  421822:	dec    esi
  421823:	addr16 addr16 cwde 
  421826:	xchg   ebp,eax
  421827:	std    
  421828:	idiv   DWORD PTR [ecx+eax*2+0x79f61777]
  42182f:	xor    bl,ah
  421831:	push   0x6b35429d
  421836:	xor    eax,DWORD PTR [edi-0xa]
  421839:	sub    al,0xb2
  42183b:	nop
  42183c:	mov    edx,0xb10550ac
  421841:	push   cs
  421842:	fmulp  st(7),st
  421844:	cmp    cl,dh
  421846:	xchg   esp,eax
  421847:	jb     0x42184c
  421849:	jo     0x42182c
  42184b:	mov    ah,0x2
  42184d:	scas   al,BYTE PTR es:[edi]
  42184e:	and    dh,cl
  421850:	mov    ss,WORD PTR [edi+ebx*2]
  421853:	or     eax,0x552d8b18
  421858:	scas   al,BYTE PTR es:[edi]
  421859:	push   0x64
  42185b:	and    al,0x57
  42185d:	pop    ecx
  42185e:	and    BYTE PTR [ecx-0x47646934],cl
  421864:	add    dl,cl
  421866:	jno    0x4218b1
  421868:	push   ebx
  421869:	xchg   edx,eax
  42186a:	out    dx,eax
  42186b:	in     al,dx
  42186c:	pop    ebp
  42186d:	add    esi,eax
  42186f:	out    dx,al
  421870:	ror    BYTE PTR [ebp+0x7f],1
  421873:	stc    
  421874:	fsubr  st,st(6)
  421876:	ret    0xa162
  421879:	adc    BYTE PTR [eax],dh
  42187b:	push   edi
  42187c:	and    esp,eax
  42187e:	cli    
  42187f:	jns    0x42189d
  421881:	aad    0xc6
  421883:	test   BYTE PTR [esi+0x67b52a36],dh
  421889:	inc    ecx
  42188a:	ins    BYTE PTR es:[edi],dx
  42188b:	lahf   
  42188c:	dec    edx
  42188d:	push   edx
  42188e:	cmp    cl,al
  421890:	cmp    ebp,DWORD PTR [esi+0x60]
  421893:	add    ebx,DWORD PTR [esi+0x250feb9d]
  421899:	adc    al,0xfb
  42189b:	xchg   edi,eax
  42189c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42189d:	cmp    eax,esp
  42189f:	sbb    esp,edx
  4218a1:	ror    DWORD PTR [edx+eax*8],1
  4218a4:	into   
  4218a5:	adc    DWORD PTR [ebp-0x25f73f18],0x2b855677
  4218af:	mov    eax,0xe8b46fc4
  4218b4:	(bad)  [esi-0x32]
  4218b7:	xchg   edi,ebp
  4218b9:	sub    dl,BYTE PTR [ecx]
  4218bb:	xchg   dh,dl
  4218bd:	(bad)  
  4218be:	aas    
  4218bf:	or     eax,0x2223b3a
  4218c4:	loop   0x421910
  4218c6:	in     eax,dx
  4218c7:	(bad)  
  4218c8:	enter  0x5836,0x31
  4218cc:	sbb    DWORD PTR [edx],0xffffffa2
  4218cf:	xchg   esi,eax
  4218d0:	mov    eax,0x7f046add
  4218d5:	or     BYTE PTR [edx+0x75],0x5
  4218d9:	sti    
  4218da:	call   0xb2ee6feb
  4218df:	in     eax,dx
  4218e0:	push   ds
  4218e1:	jp     0x421872
  4218e3:	push   esi
  4218e4:	shr    DWORD PTR [ebx],cl
  4218e6:	add    al,0xde
  4218e8:	(bad)
  4218ec:	lods   eax,DWORD PTR ds:[esi]
  4218ed:	sub    eax,0xd11d4ac0
  4218f2:	xor    eax,0xacf46b5b
  4218f7:	stc    
  4218f8:	mov    ah,cl
  4218fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218fb:	outs   dx,DWORD PTR ds:[esi]
  4218fc:	pop    ds
  4218fd:	(bad)  
  4218ff:	aad    0x41
  421901:	out    0x19,al
  421903:	dec    esi
  421904:	jno    0x42188c
  421906:	mov    edi,0xd6df3d1b
  42190b:	call   0x26b9:0xa21ca543
  421912:	mov    bh,0x35
  421914:	add    BYTE PTR [esi+0x23],cl
  421917:	pushf  
  421918:	add    DWORD PTR fs:[edx],ebx
  42191b:	in     al,0x82
  42191d:	mov    ah,0xe8
  42191f:	jae    0x4218dd
  421921:	test   BYTE PTR [ebx-0x51],cl
  421924:	pop    ebp
  421925:	pop    edi
  421926:	sub    ecx,DWORD PTR [edi+0x43]
  421929:	push   cs
  42192a:	test   ecx,eax
  42192c:	enter  0x89f7,0x83
  421930:	xchg   DWORD PTR cs:[edx],ebp
  421933:	push   edi
  421934:	pusha  
  421935:	mov    ds:0x86f08acc,eax
  42193a:	fs leave 
  42193c:	push   edx
  42193d:	push   ebx
  42193e:	xor    BYTE PTR [eax+esi*8],0x63
  421942:	sbb    eax,0xc6a45e8f
  421947:	inc    edx
  421948:	ret    0x2120
  42194b:	aam    0x81
  42194d:	dec    ebx
  42194e:	adc    al,0x1d
  421950:	lahf   
  421951:	mov    edi,0x211532c
  421956:	jmp    0x870a:0xdd5aadf2
  42195d:	mov    edi,0xd53527b7
  421962:	cs jns 0x42198b
  421965:	test   al,0x95
  421967:	mov    edi,0x9c00aa82
  42196c:	push   ebp
  42196d:	sub    ecx,DWORD PTR [esi+ecx*1]
  421970:	aaa    
  421971:	rcr    edx,0xc0
  421974:	sbb    al,0x5e
  421976:	(bad)  
  421978:	into   
  421979:	cwde   
  42197a:	retf   
  42197b:	gs sbb eax,0xb7a19cc
  421981:	cmp    BYTE PTR [ecx-0x7282baf1],0x71
  421988:	stos   DWORD PTR es:[edi],eax
  421989:	xor    ecx,DWORD PTR fs:[edx-0x358bb47b]
  421990:	cmp    ah,al
  421992:	arpl   dx,dx
  421994:	loope  0x42196b
  421996:	aad    0x8b
  421998:	mov    ecx,0xb5b9cdf1
  42199d:	cmp    bl,BYTE PTR [ecx]
  42199f:	imul   ebp,DWORD PTR [edx+eax*4-0x256ac780],0x5996c718
  4219aa:	xlat   BYTE PTR ds:[ebx]
  4219ab:	ja     0x42195a
  4219ad:	cmp    edx,edi
  4219af:	rol    DWORD PTR [edi+0x72],1
  4219b2:	inc    esi
  4219b3:	(bad)  
  4219b4:	push   esp
  4219b5:	push   esi
  4219b6:	jb     0x421997
  4219b8:	push   ecx
  4219b9:	jae    0x4219d6
  4219bb:	aad    0xbd
  4219bd:	mov    bl,0xf0
  4219bf:	sar    eax,cl
  4219c1:	popf   
  4219c2:	jp     0x421944
  4219c4:	xchg   DWORD PTR [eax+edx*4+0x47],edi
  4219c8:	pop    edi
  4219c9:	jae    0x42197c
  4219cb:	repnz pop ecx
  4219cd:	sar    BYTE PTR [edx-0x20aa28f2],0x86
  4219d4:	or     al,0xe2
  4219d6:	jle    0x79c355a7
  4219dc:	mov    fs,WORD PTR [ecx+0xee53cdd]
  4219e2:	retf   0xda66
  4219e5:	xor    ecx,ecx
  4219e7:	mov    es,WORD PTR [edx]
  4219e9:	stos   BYTE PTR es:[edi],al
  4219ea:	ss mov esp,0xc8167d2d
  4219f0:	lea    edx,[edx]
  4219f2:	leave  
  4219f3:	and    eax,0xab4d6e5d
  4219f8:	pop    esi
  4219f9:	inc    ebx
  4219fa:	sbb    al,0x9d
  4219fc:	or     edx,DWORD PTR [ebp+0x6c6c988d]
  421a02:	sbb    ah,BYTE PTR [ecx-0x545d0be7]
  421a08:	pop    edx
  421a09:	jbe    0x4219c3
  421a0b:	jb     0x42198d
  421a0d:	loop   0x421998
  421a0f:	sbb    DWORD PTR [eax+esi*4+0x69],ebp
  421a13:	sbb    DWORD PTR [ebp+0x66],esp
  421a16:	clc    
  421a17:	and    BYTE PTR [edx+eax*4],al
  421a1a:	mov    al,0xa7
  421a1c:	js     0x4219ad
  421a1e:	sti    
  421a1f:	mov    esi,DWORD PTR [ebp+0x409443c9]
  421a25:	mov    ecx,0x162f4eb5
  421a2a:	cmp    dh,BYTE PTR [ebp+0x5a]
  421a2d:	lock scas al,BYTE PTR es:[edi]
  421a2f:	std    
  421a30:	(bad)  
  421a31:	and    edi,DWORD PTR [edx-0x7f72e46b]
  421a37:	mov    bl,0x28
  421a39:	cld    
  421a3a:	mov    eax,ebx
  421a3c:	or     eax,0xcca00cdf
  421a41:	and    ebx,DWORD PTR [ebp+ebx*2-0x8]
  421a45:	adc    ch,dh
  421a47:	fcmovnu st,st(5)
  421a49:	add    dh,BYTE PTR [edx*2+0x1a5a5b6c]
  421a50:	inc    ebx
  421a51:	in     eax,0x40
  421a53:	and    dh,cl
  421a55:	clc    
  421a56:	ins    BYTE PTR es:[edi],dx
  421a57:	lahf   
  421a58:	adc    eax,0xdfb143cc
  421a5d:	test   DWORD PTR [edi+eax*4+0x7e9eb625],edi
  421a64:	mov    dh,0x3
  421a66:	sub    DWORD PTR [esi+0x20],ebp
  421a69:	icebp  
  421a6a:	sbb    eax,0x870699b2
  421a6f:	dec    ebx
  421a70:	inc    esi
  421a71:	arpl   WORD PTR [edi-0x1da2f0d5],si
  421a77:	dec    eax
  421a78:	xor    ecx,ebp
  421a7a:	jl     0x421a43
  421a7c:	rcl    ecx,1
  421a7e:	ret    
  421a7f:	lahf   
  421a80:	call   0x466b:0x1047e591
  421a87:	dec    ecx
  421a88:	pop    esp
  421a89:	mov    dl,0x92
  421a8b:	inc    eax
  421a8c:	sub    DWORD PTR [edx+eiz*1],esi
  421a8f:	xor    eax,0xda4abadc
  421a94:	add    DWORD PTR [edi],edi
  421a96:	lea    ecx,[esi+0x74]
  421a99:	fucomp st(7)
  421a9b:	fistp  QWORD PTR [ebp-0x5c]
  421a9e:	jbe    0x421b13
  421aa0:	jnp    0x421ac2
  421aa2:	pop    ecx
  421aa3:	jmp    0xc2ef:0x18471f0
  421aaa:	sub    eax,esp
  421aac:	adc    ecx,DWORD PTR [esi]
  421aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aaf:	ss inc esi
  421ab1:	daa    
  421ab2:	inc    esp
  421ab3:	retf   
  421ab4:	pop    es
  421ab5:	mov    dl,0xe9
  421ab7:	push   es
  421ab8:	popa   
  421ab9:	jle    0x421b0f
  421abb:	adc    ah,dh
  421abd:	cdq    
  421abe:	cli    
  421abf:	xchg   ebx,eax
  421ac0:	cmovno edi,esp
  421ac3:	adc    al,0xdd
  421ac5:	hlt    
  421ac6:	ror    ah,1
  421ac8:	icebp  
  421ac9:	pusha  
  421aca:	jmp    0x1e1d:0x199ecbc7
  421ad1:	mov    esi,DWORD PTR [eax]
  421ad3:	push   es
  421ad4:	add    al,0x8f
  421ad6:	out    dx,al
  421ad7:	pusha  
  421ad8:	adc    al,0x7a
  421ada:	(bad)  
  421adb:	cld    
  421adc:	mov    esi,0x24b4edca
  421ae1:	stos   DWORD PTR es:[edi],eax
  421ae2:	add    ebp,DWORD PTR [ebp+edi*2-0x3e]
  421ae6:	repnz mov ah,0x63
  421ae9:	jmp    0x421a87
  421aeb:	cs out 0x7f,eax
  421aee:	pop    si
  421af0:	push   esi
  421af1:	daa    
  421af2:	rcl    DWORD PTR [edi-0x4b],0xac
  421af6:	stos   DWORD PTR es:[edi],eax
  421af7:	xor    BYTE PTR [esi],dl
  421af9:	or     eax,0xc7a3cbd3
  421afe:	push   esi
  421aff:	inc    ebx
  421b00:	or     al,0x83
  421b02:	pop    edi
  421b03:	xchg   BYTE PTR [eax+eax*8+0x15],dl
  421b07:	cmp    eax,0xfdec268b
  421b0c:	loopne 0x421b8a
  421b0e:	or     BYTE PTR [eax],0x7d
  421b11:	mov    eax,ds:0x4703460f
  421b16:	data16 fmul DWORD PTR [esi+0x1]
  421b1a:	inc    eax
  421b1b:	push   0xffffffd8
  421b1d:	push   esi
  421b1e:	dec    edi
  421b1f:	and    BYTE PTR [esi+0x41f818e9],cl
  421b25:	sub    BYTE PTR [edi+ebx*2-0x2b801911],0x92
  421b2d:	ret    
  421b2e:	mov    ah,bl
  421b30:	add    BYTE PTR [ecx+0x756736c1],dl
  421b36:	das    
  421b37:	imul   ebx,DWORD PTR [ebx-0x471fa4d8],0x5634fc8f
  421b41:	pop    es
  421b42:	loopne 0x421b9e
  421b44:	mov    edi,0xff9907b8
  421b49:	ret    0xb05e
  421b4c:	jl     0x421b53
  421b4e:	push   ds
  421b4f:	jge    0x421b19
  421b51:	call   FWORD PTR [edi-0x5c]
  421b54:	loop   0x421b9a
  421b56:	inc    ebx
  421b57:	fs pop ebp
  421b59:	dec    ebp
  421b5a:	shr    BYTE PTR [ebp+0x69],0x21
  421b5e:	cwde   
  421b5f:	cmc    
  421b60:	or     DWORD PTR [edx],0x65
  421b63:	pop    eax
  421b64:	dec    edx
  421b65:	mov    ds:0xb8a95b0f,al
  421b6a:	or     esi,DWORD PTR [eax+0x4d4acd24]
  421b70:	(bad)  [edx]
  421b72:	rcr    BYTE PTR [ecx],1
  421b74:	test   ecx,0x45c0a721
  421b7a:	dec    ecx
  421b7b:	in     al,dx
  421b7c:	and    bl,dh
  421b7e:	mov    al,ds:0xcbd9a4a6
  421b83:	sub    al,0x7e
  421b85:	cli    
  421b86:	cdq    
  421b87:	cmp    BYTE PTR [eax-0x3dfcb506],dl
  421b8d:	dec    esp
  421b8e:	dec    ebp
  421b8f:	push   esi
  421b90:	out    dx,eax
  421b91:	jg     0x421b2d
  421b93:	push   0xffffffd1
  421b95:	aas    
  421b96:	cmp    BYTE PTR [ecx],al
  421b98:	mov    ebp,0x655782ca
  421b9d:	add    BYTE PTR [eax],al
  421b9f:	add    BYTE PTR [eax],al
  421ba1:	add    BYTE PTR [ebx],bl
  421ba3:	mov    esi,0xdaef9aee
  421ba8:	jg     0x421b69
  421baa:	call   0x8b4b:0xa0770da0
  421bb1:	mov    esi,0x1957e
  421bb6:	repz add al,0x0
  421bb9:	add    dh,dh
  421bbb:	mov    edi,0xb8a20810
  421bc0:	inc    esp
  421bc1:	push   eax
  421bc2:	push   edx
  421bc3:	push   ss
  421bc4:	iret   
  421bc5:	retf   0xa870
  421bc8:	pushf  
  421bc9:	ds push ss
  421bcb:	xchg   BYTE PTR [edx+0x1d4d3d97],bh
  421bd1:	das    
  421bd2:	fdiv   QWORD PTR [ebx-0x17dd0013]
  421bd8:	cmp    DWORD PTR [edx],ebx
  421bda:	xchg   edi,eax
  421bdb:	sahf   
  421bdc:	mov    DWORD PTR [esi],ebx
  421bde:	and    eax,0x92580cdd
  421be3:	imul   eax,DWORD PTR [ebp+0x22],0x2
  421be7:	mov    ecx,0x2c4babd9
  421bec:	fstp   st(1)
  421bee:	xor    ebx,DWORD PTR ds:0x79a77c7e
  421bf4:	push   edx
  421bf5:	(bad)  
  421bf7:	fist   DWORD PTR [edx-0x24cd75c3]
  421bfd:	mov    dl,0x8d
  421bff:	sbb    eax,DWORD PTR ds:0x4d0b44cb
  421c05:	pop    ecx
  421c06:	ja     0x421ba4
  421c08:	mov    ds:0x2702ecc6,eax
  421c0d:	add    DWORD PTR [edx-0x33],esi
  421c10:	sbb    ch,BYTE PTR [esi+0x42]
  421c13:	int    0x1
  421c15:	bound  eax,QWORD PTR [eax+0x2f7e5933]
  421c1b:	sub    esi,DWORD PTR [eax+0x70b622d4]
  421c21:	mov    WORD PTR [ebx],?
  421c23:	arpl   WORD PTR [ebx],bp
  421c25:	int3   
  421c26:	mov    esp,0x734e5fa7
  421c2b:	dec    ecx
  421c2c:	sbb    esi,DWORD PTR [esp+eax*1]
  421c2f:	clc    
  421c30:	inc    edx
  421c31:	or     al,0x9b
  421c33:	cmc    
  421c34:	xchg   ecx,eax
  421c35:	pop    ds
  421c36:	(bad)  
  421c38:	(bad)  
  421c39:	test   DWORD PTR [ebx+0x61a32f0a],ebp
  421c3f:	and    dh,BYTE PTR [ebx]
  421c41:	out    0x71,al
  421c43:	aas    
  421c44:	lods   eax,DWORD PTR ds:[esi]
  421c45:	fcomip st,st(7)
  421c47:	in     al,0xad
  421c49:	sub    al,0xe6
  421c4b:	inc    esi
  421c4c:	pop    ecx
  421c4d:	jmp    0xd55b:0xf9725f53
  421c54:	(bad)  
  421c57:	imul   ebx,esp,0xffffffed
  421c5a:	push   es
  421c5b:	les    ebp,FWORD PTR [edx]
  421c5d:	jns    0x421c89
  421c5f:	and    eax,0xfcabd5ba
  421c64:	ss icebp 
  421c66:	lods   eax,DWORD PTR ds:[esi]
  421c67:	xor    eax,0x793dd75a
  421c6c:	out    dx,al
  421c6d:	sahf   
  421c6e:	aad    0x9
  421c70:	and    al,0xd8
  421c72:	add    al,0x38
  421c74:	mov    ch,0x48
  421c76:	jg     0x421c16
  421c78:	es inc edi
  421c7a:	(bad)  
  421c7b:	xlat   BYTE PTR ds:[ebx]
  421c7c:	jb     0x421c58
  421c7e:	sub    DWORD PTR [ecx+eiz*1-0x2e3dee3],edi
  421c85:	pop    edi
  421c86:	dec    ecx
  421c87:	or     eax,0x5b09259c
  421c8c:	ins    BYTE PTR es:[edi],dx
  421c8d:	pop    edi
  421c8e:	or     eax,0xa72606bc
  421c93:	push   ds
  421c94:	or     ch,BYTE PTR [ecx]
  421c96:	adc    DWORD PTR [esi-0x7e],esi
  421c99:	arpl   WORD PTR [eax+0x4f],di
  421c9c:	dec    edx
  421c9d:	rcl    DWORD PTR [esi+0x5352a938],cl
  421ca3:	ret    
  421ca4:	imul   eax,DWORD PTR ds:0x41706ee1,0x8da9a1d
  421cae:	push   esi
  421caf:	cmp    cl,ch
  421cb1:	pop    esp
  421cb2:	lock ds iret 
  421cb5:	inc    eax
  421cb6:	lods   eax,DWORD PTR ds:[esi]
  421cb7:	jmp    DWORD PTR [ebx+0x22cf44e3]
  421cbd:	xchg   ebp,eax
  421cbe:	sti    
  421cbf:	ins    DWORD PTR es:[edi],dx
  421cc0:	fbstp  TBYTE PTR [eax]
  421cc2:	fdiv   st(4),st
  421cc4:	not    DWORD PTR [ecx-0x13]
  421cc7:	xchg   ebx,eax
  421cc8:	jmp    0x421cd0
  421cca:	out    0x4e,al
  421ccc:	push   ecx
  421ccd:	sub    esi,DWORD PTR [ebx-0x77ed2232]
  421cd3:	pop    ebx
  421cd4:	call   0xf18dd7bf
  421cd9:	and    eax,0x838c5c0d
  421cde:	std    
  421cdf:	out    0x61,al
  421ce1:	jp     0x421d0d
  421ce3:	scas   al,BYTE PTR es:[edi]
  421ce4:	test   al,0x5c
  421ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ce7:	dec    DWORD PTR [ebp+0xe7d0d34]
  421ced:	or     esp,DWORD PTR [edi-0x7a]
  421cf0:	sbb    DWORD PTR [esi-0x270f3531],edx
  421cf6:	xor    eax,0x31ed76c7
  421cfb:	mov    al,0xb5
  421cfd:	(bad)
  421d01:	cs jecxz 0x421d80
  421d04:	fs inc edx
  421d06:	das    
  421d07:	xchg   ebx,eax
  421d08:	inc    ecx
  421d09:	push   cs
  421d0a:	int    0x64
  421d0c:	sbb    cl,cl
  421d0e:	inc    edx
  421d0f:	retf   0x86a5
  421d12:	adc    ecx,edx
  421d14:	adc    ecx,DWORD PTR [edi+0x4f465f77]
  421d1a:	(bad)  
  421d1c:	sahf   
  421d1d:	les    eax,FWORD PTR [edi]
  421d1f:	xchg   ecx,eax
  421d20:	stos   BYTE PTR es:[edi],al
  421d21:	fiadd  WORD PTR [ebp-0x6f]
  421d24:	xchg   DWORD PTR [esi-0x4ee2fdea],eax
  421d2a:	and    eax,0x1ffbd8a4
  421d2f:	aas    
  421d30:	jp     0x421d59
  421d32:	in     al,0x0
  421d34:	dec    eax
  421d35:	push   es
  421d36:	popa   
  421d37:	hlt    
  421d38:	sub    bl,bl
  421d3a:	push   ss
  421d3b:	jl     0x421d0d
  421d3d:	add    eax,0x3a2b8ff5
  421d42:	add    DWORD PTR [ecx+0x34ad4a82],ebp
  421d48:	sbb    dh,BYTE PTR [ecx+0xe]
  421d4b:	mov    ds,ebp
  421d4d:	inc    edi
  421d4e:	mov    eax,ecx
  421d50:	xchg   edx,eax
  421d51:	xlat   BYTE PTR ds:[ebx]
  421d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d53:	call   0xd5be:0x37be8d56
  421d5a:	push   edi
  421d5b:	sbb    BYTE PTR [esi-0x27eafc03],al
  421d61:	inc    ebx
  421d62:	pop    ds
  421d63:	sbb    al,0x18
  421d65:	or     bl,BYTE PTR [edx+0x3d]
  421d68:	and    DWORD PTR [ebx+0xa],edi
  421d6b:	je     0x421d02
  421d6d:	data16 mov bh,0x51
  421d70:	mov    ?,WORD PTR [ebx]
  421d72:	sbb    BYTE PTR [edi-0x1b],ah
  421d75:	loope  0x421d42
  421d77:	cld    
  421d78:	cli    
  421d79:	push   ebx
  421d7a:	pop    ecx
  421d7b:	push   esi
  421d7c:	sub    eax,0x6ef70054
  421d81:	push   ds
  421d82:	and    DWORD PTR [ebx-0x23],eax
  421d85:	xchg   dl,bl
  421d87:	push   es
  421d88:	mov    ebx,0x9c66e71b
  421d8d:	stos   DWORD PTR es:[edi],eax
  421d8e:	fdiv   DWORD PTR [edi-0x38f3a06]
  421d94:	jecxz  0x421d60
  421d96:	jp     0x421d32
  421d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d99:	or     bh,BYTE PTR [eax-0xe]
  421d9c:	retf   0x703a
  421d9f:	popf   
  421da0:	jmp    0xd81d:0x68cbeb25
  421da7:	or     al,0xde
  421da9:	sbb    al,0x55
  421dab:	or     esi,ecx
  421dad:	mov    BYTE PTR [eax],al
  421daf:	inc    esp
  421db0:	outs   dx,BYTE PTR ds:[esi]
  421db1:	repz in eax,0xe3
  421db4:	adc    ch,cl
  421db6:	and    al,0x6b
  421db8:	rol    BYTE PTR [esi],1
  421dba:	push   es
  421dbb:	les    eax,FWORD PTR [ecx-0x18]
  421dbe:	mov    al,0x83
  421dc0:	(bad)  
  421dc1:	shl    DWORD PTR ds:[eax+ebp*4+0x70],cl
  421dc6:	push   cs
  421dc7:	pop    edi
  421dc8:	adc    DWORD PTR [edx-0x17ee8df8],esp
  421dce:	repz test al,0x26
  421dd1:	add    al,0xcb
  421dd3:	jmp    0x421de8
  421dd5:	mov    esp,esp
  421dd7:	inc    edi
  421dd8:	mov    ecx,DWORD PTR [ebx-0x7]
  421ddb:	pop    ebx
  421ddc:	inc    edx
  421ddd:	push   0x1641dd95
  421de2:	stos   BYTE PTR es:[edi],al
  421de3:	xchg   edx,eax
  421de4:	leave  
  421de5:	sub    eax,0x20ed63d3
  421dea:	sub    dh,BYTE PTR [ebp+0x74753d78]
  421df0:	xor    BYTE PTR [ebx+0x283717a],dh
  421df6:	xor    BYTE PTR [edx],bh
  421df8:	or     bh,0x5b
  421dfb:	jle    0x421df6
  421dfd:	mov    edi,0xe1546ebc
  421e02:	mov    eax,ds:0xfe7ffdc8
  421e07:	imul   eax,DWORD PTR [ecx-0x53452558],0x16
  421e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e0f:	imul   esp,DWORD PTR [esi],0xe6656ce1
  421e15:	inc    ebp
  421e16:	sub    bh,BYTE PTR [esi-0x13]
  421e19:	jmp    FWORD PTR [ecx+0x2ec2deca]
  421e1f:	push   edx
  421e20:	es mov edi,0x16c84d6b
  421e26:	icebp  
  421e27:	sub    DWORD PTR ds:0x659c39f8,esi
  421e2d:	jb     0x421dcc
  421e2f:	add    bl,BYTE PTR [edi-0x5e]
  421e32:	call   0xee6d:0x1fd9c550
  421e39:	(bad)  
  421e3a:	inc    DWORD PTR [edx-0x5c1786b3]
  421e40:	aam    0xcf
  421e42:	mov    DWORD PTR [eax],eax
  421e44:	daa    
  421e45:	mov    bh,bh
  421e47:	pop    ss
  421e48:	mov    edi,0xf0370c87
  421e4d:	mov    eax,ds:0xe151d5d0
  421e52:	into   
  421e53:	mov    al,0x38
  421e55:	data16 in al,dx
  421e57:	aad    0x48
  421e59:	jge    0x421ebf
  421e5b:	mov    ah,0xfa
  421e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e5e:	jb     0x421e07
  421e60:	mov    al,ds:0x7f72dbe4
  421e65:	ja     0x421e29
  421e67:	cmc    
  421e68:	popf   
  421e69:	popf   
  421e6a:	jmp    0x1be4c22a
  421e6f:	or     BYTE PTR [edx+0x70],cl
  421e72:	add    BYTE PTR [ebx-0x78e19172],dh
  421e78:	add    eax,0xed7477f3
  421e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e7e:	call   0x816b3c15
  421e83:	pop    esi
  421e84:	icebp  
  421e85:	pop    eax
  421e86:	sub    eax,0x355a60c2
  421e8b:	aad    0x1e
  421e8d:	cmp    dl,BYTE PTR [edi+ebp*1+0x5]
  421e91:	mov    dl,0x9b
  421e93:	jmp    0xc541268a
  421e98:	inc    eax
  421e99:	mov    bh,0x2e
  421e9b:	mov    ds:0xf758aacf,eax
  421ea0:	pop    edx
  421ea1:	inc    edx
  421ea2:	sar    DWORD PTR [ecx-0x490fb460],1
  421ea8:	mov    ds:0xa3d3e404,eax
  421ead:	jmp    0x9cb9:0xc876a28e
  421eb4:	scas   al,BYTE PTR es:[edi]
  421eb5:	(bad)  
  421eb7:	jb     0x421ef5
  421eb9:	mov    WORD PTR [edx+0x17],gs
  421ebc:	push   esp
  421ebd:	dec    ebx
  421ebe:	int    0x7a
  421ec0:	add    ebp,ecx
  421ec2:	sub    BYTE PTR [edx],dl
  421ec4:	in     al,dx
  421ec5:	mov    eax,ds:0x61f32e88
  421eca:	jne    0x421eb8
  421ecc:	(bad)  
  421ecd:	in     al,dx
  421ece:	push   edi
  421ecf:	retf   
  421ed0:	imul   esp,esi,0x8726c735
  421ed6:	daa    
  421ed7:	and    edx,esp
  421ed9:	pop    edi
  421eda:	xchg   esp,eax
  421edb:	push   ebx
  421edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421edd:	(bad)  
  421ede:	cmp    al,0x6b
  421ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ee1:	or     al,0x9a
  421ee3:	cdq    
  421ee4:	pop    edx
  421ee5:	fstp   DWORD PTR [ebp-0x1a]
  421ee8:	mov    al,ds:0x3e6ae77b
  421eed:	pop    ebx
  421eee:	xchg   ebp,eax
  421eef:	sti    
  421ef0:	gs je  0x421f5b
  421ef3:	retf   
  421ef4:	mov    ebp,0x7762b947
  421ef9:	repnz (bad) 
  421efb:	sub    DWORD PTR [ecx+0x2946308d],eax
  421f01:	enter  0xc1f0,0x0
  421f05:	sbb    bh,BYTE PTR [ebx+edx*4+0x259fa38c]
  421f0c:	aas    
  421f0d:	stos   DWORD PTR es:[edi],eax
  421f0e:	xor    eax,edi
  421f10:	push   cs
  421f11:	idiv   BYTE PTR [edx-0x6073c714]
  421f17:	sub    dl,bl
  421f19:	inc    esi
  421f1a:	adc    eax,0x61ad90eb
  421f1f:	retf   0x2ac3
  421f22:	fbstp  TBYTE PTR [ebp-0x80]
  421f25:	enter  0x4618,0x15
  421f29:	out    0x9c,al
  421f2b:	xor    al,0x5d
  421f2d:	sbb    BYTE PTR [ecx],ch
  421f2f:	mov    ebx,0x289be64
  421f34:	lods   eax,DWORD PTR ds:[esi]
  421f35:	popf   
  421f36:	idiv   DWORD PTR [edi+ebx*4]
  421f39:	mov    esp,0x80e4a5f5
  421f3e:	jmp    0x8d23055a
  421f43:	lods   eax,DWORD PTR ds:[esi]
  421f44:	xlat   BYTE PTR ds:[ebx]
  421f45:	jo     0x421f4a
  421f47:	lods   eax,DWORD PTR ds:[esi]
  421f48:	xchg   DWORD PTR [ebx+edx*1],ebx
  421f4b:	retf   
  421f4c:	addr16 jnp 0x421ed6
  421f4f:	push   esp
  421f50:	fist   WORD PTR [eax-0x3a]
  421f53:	pop    es
  421f54:	pop    eax
  421f55:	dec    ebp
  421f56:	inc    edi
  421f57:	lahf   
  421f58:	jmp    0x3f0b:0xa349380b
  421f5f:	cs push 0x7fc8baf3
  421f65:	loope  0x421f35
  421f67:	sar    bh,0x1
  421f6a:	aam    0x6d
  421f6c:	pusha  
  421f6d:	xchg   ecx,eax
  421f6e:	(bad)  
  421f6f:	jmp    DWORD PTR [esi+0xd]
  421f72:	or     ebx,DWORD PTR [edi]
  421f74:	mov    WORD PTR [ecx+0x13],cs
  421f77:	mov    ecx,0xecab7db6
  421f7c:	aaa    
  421f7d:	cvtps2pi mm7,QWORD PTR [esi+0x1c]
  421f81:	lods   al,BYTE PTR ds:[esi]
  421f82:	or     BYTE PTR [eax+0x57],0xa3
  421f86:	mov    dl,0x7e
  421f88:	dec    ebx
  421f89:	pop    ss
  421f8a:	xor    dh,BYTE PTR [edx-0x3bc1538]
  421f90:	in     eax,dx
  421f91:	shr    bh,0x65
  421f94:	in     eax,0x81
  421f96:	ins    DWORD PTR es:[edi],dx
  421f97:	xor    ch,BYTE PTR [eax+edx*8]
  421f9a:	gs cmp al,0x86
  421f9d:	pop    edx
  421f9e:	aam    0x7b
  421fa0:	idiv   BYTE PTR [eax+ebp*2-0x4868ebf4]
  421fa7:	es inc ebx
  421fa9:	(bad)  
  421faa:	mov    DWORD PTR [si],ecx
  421fad:	xor    BYTE PTR [edi-0x22d8e8e2],bh
  421fb3:	int    0x97
  421fb5:	ffreep st(0)
  421fb7:	inc    ebp
  421fb8:	dec    ebx
  421fb9:	cli    
  421fba:	in     eax,dx
  421fbb:	mov    edx,0x2cacdfb4
  421fc0:	mov    al,BYTE PTR [ebx-0x76]
  421fc3:	enter  0xf676,0xa8
  421fc7:	jmp    0xabed1404
  421fcc:	fst    DWORD PTR [ecx-0x7d18f9db]
  421fd2:	jo     0x421f7e
  421fd4:	dec    ebx
  421fd5:	sub    BYTE PTR [ecx-0x38b3057],ch
  421fdb:	pop    ds
  421fdc:	in     al,0xc
  421fde:	out    dx,al
  421fdf:	mov    ds:0x766df12,eax
  421fe4:	mov    edi,0xda87c9f2
  421fe9:	jle    0x421fc4
  421feb:	das    
  421fec:	fs dec edi
  421fee:	test   al,0xa0
  421ff0:	ins    BYTE PTR es:[edi],dx
  421ff1:	retf   
  421ff2:	pop    es
  421ff3:	(bad)  
  421ff4:	push   0x6264ad5d
  421ff9:	and    dh,ah
  421ffb:	out    dx,eax
  421ffc:	icebp  
  421ffd:	and    dl,al
  421fff:	sbb    ebx,DWORD PTR [ebx-0x412bc584]
  422005:	push   ebx
  422006:	ds sub eax,0xe90d42b7
  42200c:	mov    esp,0xb885b939
  422011:	lods   al,BYTE PTR ds:[esi]
  422012:	xlat   BYTE PTR ds:[ebx]
  422013:	mov    ds:0xacfd14,eax
  422018:	sub    BYTE PTR [ecx],0x6a
  42201b:	add    al,0x44
  42201d:	xchg   ebx,eax
  42201e:	push   cs
  42201f:	push   0x8f946f3d
  422024:	out    dx,al
  422025:	lahf   
  422026:	pop    ecx
  422027:	push   eax
  422028:	mov    ds:0xfe106ef5,eax
  42202d:	cmp    al,0x3
  42202f:	out    dx,eax
  422030:	sbb    DWORD PTR [edx+0x1a],ebx
  422033:	lahf   
  422034:	push   edi
  422035:	mov    cl,0xcc
  422037:	mov    ds:0xca564b76,eax
  42203c:	sahf   
  42203d:	sbb    BYTE PTR [ecx+0x4aebb7fb],dl
  422043:	xchg   edi,eax
  422044:	jmp    0x42205e
  422046:	je     0x4220c1
  422048:	pop    ds
  422049:	mov    dl,0x38
  42204b:	(bad)  
  42204d:	out    0xaa,eax
  42204f:	(bad)  
  422050:	mov    esi,0xb4784c1e
  422055:	shr    BYTE PTR [ebx-0x3952717f],0xc
  42205c:	addr16 push ecx
  42205e:	push   0xda4df434
  422063:	nop
  422064:	jmp    0xebe9c32c
  422069:	xchg   ebp,eax
  42206a:	or     BYTE PTR [ebx+0x6c67be92],bl
  422070:	jmp    0x5c0:0x53aa67af
  422077:	out    0x66,eax
  422079:	xor    bl,BYTE PTR [ebx+0x1624e521]
  42207f:	fild   QWORD PTR [ecx]
  422081:	mov    al,ds:0xac016d6e
  422086:	or     al,0x74
  422088:	bound  ebp,QWORD PTR [edi-0x7c]
  42208b:	push   edi
  42208c:	xor    ebx,DWORD PTR [ebx]
  42208e:	in     al,0xa3
  422090:	gs inc eax
  422092:	sub    al,0xfc
  422094:	cmp    ch,ch
  422096:	mov    al,0xa2
  422098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42209a:	call   0x67d49e59
  42209f:	xor    al,0xa1
  4220a1:	jne    0x422072
  4220a3:	stos   DWORD PTR es:[edi],eax
  4220a4:	fbstp  TBYTE PTR [ecx-0x23aa030b]
  4220aa:	test   BYTE PTR [eax+0x4],ah
  4220b0:	add    BYTE PTR [eax],al
  4220b2:	cmp    ecx,edi
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	dec    ecx
  4220bf:	or     dh,al
  4220c1:	cwde   
  4220c2:	jno    0x42205e
  4220c4:	add    DWORD PTR [eax],eax
  4220c6:	repz add al,0x0
  4220c9:	add    BYTE PTR [ebx+0x35],cl
  4220cc:	cs xor eax,0x87b4992e
  4220d2:	repz fisub WORD PTR [ebx]
  4220d5:	mov    BYTE PTR [ecx+0x71205011],dl
  4220db:	push   0xc845bb51
  4220e0:	inc    esp
  4220e1:	cmp    edx,DWORD PTR [ecx+edx*4-0x5a83066c]
  4220e8:	pop    ss
  4220e9:	inc    ebp
  4220ea:	(bad)  
  4220ec:	ss mov ecx,ecx
  4220ef:	ror    bh,0x5c
  4220f2:	sub    DWORD PTR [esi-0x19cd219a],0x2823273f
  4220fc:	mov    ds,WORD PTR [edx-0x4a67da22]
  422102:	mov    dh,0xe3
  422104:	imul   ecx,DWORD PTR [esp+edi*4-0x7f75acb5],0xfd746b35
  42210f:	inc    edi
  422110:	sbb    BYTE PTR gs:[ebx+0x723cea08],ch
  422117:	das    
  422118:	xlat   BYTE PTR ds:[ebx]
  422119:	add    edi,DWORD PTR [ecx+0x2a]
  42211c:	jge    0x42215e
  42211e:	(bad)  
  42211f:	inc    bh
  422121:	mov    dh,BYTE PTR [edi]
  422123:	jmp    edx
  422125:	fs gs jge 0x422123
  422129:	pop    eax
  42212a:	jecxz  0x42211e
  42212c:	inc    ebp
  42212d:	inc    ebp
  42212e:	aam    0x74
  422130:	add    DWORD PTR [ebx+0x27],ebx
  422133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422134:	call   0x59ce:0x5f637fc6
  42213b:	pop    ebx
  42213c:	and    ah,bl
  42213e:	or     BYTE PTR [ecx+0x2781979c],al
  422144:	ret    0x4213
  422147:	inc    ebp
  422148:	rcr    eax,0xf4
  42214b:	jns    0x422199
  42214d:	and    ecx,DWORD PTR [eax+ebp*2]
  422150:	push   ecx
  422151:	push   0xa23ad568
  422156:	dec    edx
  422157:	and    ebp,DWORD PTR [esi]
  422159:	in     eax,dx
  42215a:	cmp    ecx,ebx
  42215c:	fcomp  QWORD PTR [edx+edx*1]
  42215f:	sub    BYTE PTR [esi+0x22f23479],dl
  422165:	outs   dx,DWORD PTR ss:[esi]
  422167:	retf   0x2c0c
  42216a:	test   eax,0x981eb804
  42216f:	mov    DWORD PTR [eax-0x3a],edx
  422172:	fisub  WORD PTR [esi+0x43540e0b]
  422178:	pop    ds
  422179:	addr16 sti 
  42217b:	or     BYTE PTR [esi-0x44bbf87a],0xb6
  422182:	push   ecx
  422183:	jne    0x42218b
  422185:	xchg   edi,eax
  422186:	out    0x50,al
  422188:	call   0x6e6f1073
  42218d:	push   ecx
  42218e:	pop    ds
  42218f:	or     BYTE PTR [ebx-0x1a],bl
  422192:	mov    ch,0xd3
  422194:	or     eax,0x159075e5
  422199:	push   ebp
  42219a:	clts   
  42219c:	ror    DWORD PTR [eax-0x6e],cl
  42219f:	push   eax
  4221a0:	sub    dh,dh
  4221a2:	mov    ds:0xc6bec8b2,eax
  4221a7:	cld    
  4221a8:	mov    ecx,0xe345aec4
  4221ad:	cli    
  4221ae:	call   0xa65d7250
  4221b3:	xlat   BYTE PTR ds:[ebx]
  4221b4:	les    edx,FWORD PTR [ebx-0x69]
  4221b7:	int    0x33
  4221b9:	fs jb  0x42218a
  4221bc:	fisttp DWORD PTR [esp+eiz*4-0x18417834]
  4221c3:	mov    esp,DWORD PTR [edx+0x4db967c2]
  4221c9:	jnp    0x422238
  4221cb:	nop
  4221cc:	adc    eax,0xdf13a57b
  4221d1:	mov    edi,0xbba130e7
  4221d6:	dec    cl
  4221d8:	addr16 dec esp
  4221da:	pushf  
  4221db:	push   ecx
  4221dc:	nop
  4221dd:	js     0x422178
  4221df:	xor    eax,0xe1b998da
  4221e4:	dec    DWORD PTR [ecx+0x335b1e72]
  4221ea:	aad    0x1
  4221ec:	sub    DWORD PTR [esp+edi*1],0x1b
  4221f0:	dec    edx
  4221f1:	cvtps2pd xmm4,QWORD PTR [ebx-0xe05d7ca]
  4221f8:	enter  0xd754,0x85
  4221fc:	sbb    al,0xec
  4221fe:	inc    edi
  4221ff:	lahf   
  422200:	aam    0x48
  422202:	cmp    al,0xbe
  422204:	test   al,0xb8
  422206:	mov    al,ds:0x51a4721b
  42220b:	(bad)  
  42220c:	push   ds
  42220d:	jbe    0x422245
  42220f:	in     al,dx
  422210:	stc    
  422211:	or     BYTE PTR ds:0x72c34fb7,0x13
  422218:	in     al,dx
  422219:	cmp    dh,bh
  42221b:	push   esi
  42221c:	adc    DWORD PTR [esp+edx*2-0x5c],esi
  422220:	mov    dh,0x70
  422222:	mov    al,0xdf
  422224:	popa   
  422225:	sub    eax,0xb55d9f5f
  42222a:	add    bl,BYTE PTR [esi]
  42222c:	mul    dh
  42222e:	daa    
  42222f:	fsub   QWORD PTR [eax+eax*2]
  422232:	and    al,0x63
  422234:	ins    BYTE PTR es:[edi],dx
  422235:	jnp    0x4222a8
  422237:	dec    esi
  422238:	mov    ds:0x5c3fc2fd,eax
  42223d:	(bad)  
  42223e:	push   edx
  42223f:	idiv   bl
  422241:	sub    dl,BYTE PTR [edx+ebx*2]
  422244:	les    ebp,FWORD PTR [ebp-0x760474e]
  42224a:	mov    ds:0x97d1d3,al
  42224f:	lock je 0x422259
  422252:	and    eax,0x93890164
  422257:	mul    DWORD PTR [edi+0xf]
  42225a:	shr    BYTE PTR [esi],1
  42225c:	add    al,0x89
  42225e:	in     al,dx
  42225f:	gs xchg edx,eax
  422261:	mov    eax,DWORD PTR [edi]
  422263:	or     BYTE PTR [esi+eiz*8],ah
  422266:	adc    BYTE PTR [ebx],0x73
  422269:	out    0x8,al
  42226b:	ret    0x7cec
  42226e:	aam    0x3a
  422270:	fld    QWORD PTR [esi]
  422272:	out    dx,eax
  422273:	pushf  
  422274:	out    dx,al
  422275:	imul   edx,DWORD PTR [ebp+0x10],0xb9e00538
  42227c:	dec    ebx
  42227d:	mov    al,0x72
  42227f:	in     eax,dx
  422280:	lods   al,BYTE PTR ds:[esi]
  422281:	nop
  422282:	pushf  
  422283:	xchg   DWORD PTR [edi],esp
  422285:	call   0xdb5cfba8
  42228a:	mov    edi,ecx
  42228c:	out    0xdc,eax
  42228e:	fwait
  42228f:	xchg   ecx,eax
  422290:	add    eax,0x383bc043
  422295:	outs   dx,DWORD PTR ds:[esi]
  422296:	add    DWORD PTR [edi-0x5c],ebx
  422299:	xchg   esp,eax
  42229a:	idiv   DWORD PTR [ebx]
  42229c:	lods   eax,DWORD PTR ds:[esi]
  42229d:	dec    edx
  42229e:	sar    esi,cl
  4222a0:	pop    eax
  4222a1:	test   al,0x5b
  4222a3:	inc    edi
  4222a4:	(bad)  
  4222a6:	push   ecx
  4222a7:	xor    edx,DWORD PTR [eax+0x2c41ba4f]
  4222ad:	jne    0x4222ee
  4222af:	xor    al,0x9b
  4222b1:	cmp    bh,dh
  4222b3:	div    DWORD PTR [edx+eax*2]
  4222b6:	jge    0x42228e
  4222b8:	aaa    
  4222b9:	mov    edi,0x5ae55eae
  4222be:	and    bl,BYTE PTR ss:[esi]
  4222c1:	repz sbb al,0xf9
  4222c4:	popf   
  4222c5:	sub    bh,dl
  4222c7:	dec    eax
  4222c8:	inc    esp
  4222c9:	or     al,0x5d
  4222cb:	fdivr  DWORD PTR [edi+0xf]
  4222ce:	jae    0x422328
  4222d0:	aaa    
  4222d1:	pop    ebp
  4222d2:	ds fstp st(6)
  4222d5:	cmp    al,bl
  4222d7:	in     eax,0xc3
  4222d9:	das    
  4222da:	cli    
  4222db:	dec    esi
  4222dc:	jmp    0x2643:0x46e26886
  4222e3:	mov    es,edx
  4222e5:	arpl   WORD PTR [edi],cx
  4222e7:	pop    ds
  4222e8:	(bad)  
  4222e9:	in     eax,dx
  4222ea:	inc    edi
  4222eb:	xchg   edx,eax
  4222ec:	add    edi,edx
  4222ee:	je     0x422290
  4222f0:	xchg   edx,eax
  4222f1:	add    ch,cl
  4222f3:	dec    ebp
  4222f4:	mov    al,0xac
  4222f6:	push   0xffffffc6
  4222f8:	xchg   ebp,eax
  4222f9:	sbb    BYTE PTR [esi],0xd9
  4222fc:	xchg   ah,bh
  4222fe:	cmp    al,0x3e
  422300:	into   
  422301:	pop    edx
  422302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422303:	scas   al,BYTE PTR es:[edi]
  422304:	sar    BYTE PTR [ebx],0x37
  422307:	popf   
  422308:	rcr    BYTE PTR [esi],1
  42230a:	stos   DWORD PTR es:[edi],eax
  42230b:	pop    esp
  42230c:	and    cl,ch
  42230e:	and    eax,0x33f61b65
  422313:	push   es
  422314:	dec    edx
  422315:	mov    cl,dh
  422317:	ret    
  422318:	xchg   edx,eax
  422319:	(bad)  
  42231b:	out    dx,al
  42231c:	adc    al,0xcd
  42231e:	fild   WORD PTR [esi-0x59c37bac]
  422324:	fmul   QWORD PTR [eax+0x30c0d349]
  42232a:	mov    esi,0xb0676e7a
  42232f:	xor    eax,0xed313184
  422334:	lods   al,BYTE PTR ds:[esi]
  422335:	ss sbb al,0x63
  422338:	mov    WORD PTR [ebx+0x2a],gs
  42233b:	adc    ebp,ecx
  42233d:	mov    ebx,0x9da06957
  422342:	in     eax,0x41
  422344:	arpl   WORD PTR [edi],bx
  422346:	les    edi,FWORD PTR [edx-0x64dcf102]
  42234c:	or     esi,edi
  42234e:	(bad)  
  42234f:	push   esi
  422350:	dec    ecx
  422351:	fcmovb st,st(2)
  422353:	retf   0x216e
  422356:	mov    ss,WORD PTR [ecx-0x8e0ff85]
  42235c:	push   es
  42235d:	popf   
  42235e:	lods   eax,DWORD PTR ds:[esi]
  42235f:	xor    edx,edi
  422361:	jl     0x4222e4
  422363:	push   ebp
  422364:	add    bh,BYTE PTR [ecx+0x5b]
  422367:	call   0xd332ce49
  42236c:	adc    BYTE PTR [esp+edx*1],dh
  42236f:	or     esp,DWORD PTR ds:0xfee2aa88
  422375:	or     eax,0x3794b92c
  42237a:	pop    edx
  42237b:	jnp    0x42231e
  42237d:	pop    edi
  42237e:	std    
  42237f:	iret   
  422380:	ja     0x422313
  422382:	std    
  422383:	and    ah,BYTE PTR [edi+0x722750af]
  422389:	fs sbb al,0xae
  42238c:	xor    al,0x2
  42238e:	fyl2xp1 
  422390:	bound  ecx,QWORD PTR [ecx+0x6fe1b277]
  422396:	mov    dh,0x30
  422398:	and    eax,0xd7f54adc
  42239d:	xor    edi,DWORD PTR [eax-0x70]
  4223a0:	scas   al,BYTE PTR es:[edi]
  4223a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223a2:	mov    ebx,0xaed93ab5
  4223a7:	out    dx,al
  4223a8:	inc    edi
  4223a9:	cmovl  eax,ebp
  4223ac:	inc    eax
  4223ad:	aaa    
  4223ae:	sbb    ebx,DWORD PTR [eax]
  4223b0:	dec    esp
  4223b1:	dec    edi
  4223b2:	pop    es
  4223b3:	ins    DWORD PTR es:[edi],dx
  4223b4:	inc    ecx
  4223b5:	std    
  4223b6:	cmp    eax,0x32012580
  4223bb:	mov    dl,0xcc
  4223bd:	dec    ebx
  4223be:	pop    esi
  4223bf:	clc    
  4223c0:	jp     0x4223c7
  4223c2:	cmc    
  4223c3:	xchg   esp,eax
  4223c4:	sti    
  4223c5:	inc    edx
  4223c6:	push   esp
  4223c7:	in     eax,dx
  4223c8:	xchg   esi,eax
  4223c9:	(bad)  
  4223ca:	not    DWORD PTR [ebx+esi*1+0x6d34b9f5]
  4223d1:	or     eax,0xfc0dbcb4
  4223d6:	pop    ds
  4223d7:	adc    eax,0x70ea4e46
  4223dc:	push   eax
  4223dd:	sahf   
  4223de:	add    al,BYTE PTR [edi]
  4223e0:	push   es
  4223e1:	pop    ecx
  4223e2:	stos   BYTE PTR es:[edi],al
  4223e3:	push   edx
  4223e4:	nop
  4223e5:	mov    eax,ds:0x4ea42460
  4223ea:	(bad)  
  4223eb:	jle    0x422412
  4223ed:	jmp    0x66df:0xb8add1d4
  4223f4:	pop    ecx
  4223f5:	xchg   DWORD PTR [ebx+0x37],ecx
  4223f8:	sar    BYTE PTR [ebx+esi*1+0x4d89a873],cl
  4223ff:	xor    dh,BYTE PTR [edx+0x4]
  422402:	push   esi
  422403:	shr    BYTE PTR [ecx*4-0x5950a870],cl
  42240a:	idiv   DWORD PTR [edi]
  42240c:	in     eax,dx
  42240d:	mov    eax,edi
  42240f:	popa   
  422410:	push   ds
  422411:	jmp    0xdac:0x37a4158e
  422418:	xchg   ebx,eax
  422419:	inc    ch
  42241b:	jns    0x422455
  42241d:	test   BYTE PTR [edi+0x30cd1ed8],bh
  422423:	outs   dx,DWORD PTR ds:[esi]
  422424:	sti    
  422425:	nop
  422426:	jbe    0x422443
  422428:	and    eax,0x3e2d9afe
  42242d:	fcomp  QWORD PTR [eax-0x384d3399]
  422433:	mov    ecx,0xbb515d6d
  422438:	aad    0x33
  42243a:	push   esi
  42243b:	xor    bh,BYTE PTR [eax-0x299eb327]
  422441:	retf   
  422442:	pop    ecx
  422443:	stos   BYTE PTR es:[edi],al
  422444:	jo     0x4223f1
  422446:	mov    BYTE PTR [ebx+0x4c],0x53
  42244a:	stos   DWORD PTR es:[edi],eax
  42244b:	mov    ebx,0xf4f6f51a
  422450:	ja     0x422431
  422452:	mov    ch,al
  422454:	push   ecx
  422455:	repnz mov ds:0xe4e0cfea,al
  42245b:	(bad)  
  42245c:	lods   al,BYTE PTR ds:[esi]
  42245d:	or     eax,DWORD PTR ds:0xa45c0d
  422463:	adc    al,0x18
  422465:	aad    0x6e
  422467:	adc    al,0x85
  422469:	jns    0x4224a2
  42246b:	ja     0x4223fc
  42246d:	lods   eax,DWORD PTR ds:[esi]
  42246e:	jbe    0x422447
  422470:	fldcw  WORD PTR [ebp-0x2d60c5f9]
  422476:	pop    esp
  422477:	jns    0x422440
  422479:	scas   al,BYTE PTR es:[edi]
  42247a:	or     ebp,DWORD PTR [esi]
  42247c:	shl    DWORD PTR [ebx+0x54],cl
  42247f:	jle    0x42241d
  422481:	push   ecx
  422482:	add    eax,0xc8318cd8
  422487:	mov    ebp,0x73a86ca
  42248c:	repnz daa 
  42248e:	(bad)  
  422490:	lock cmp ebp,DWORD PTR [ebp-0xd2edba6]
  422497:	out    0x9c,al
  422499:	mov    al,ds:0x6291db
  42249e:	or     eax,0xf35a3023
  4224a3:	outs   dx,BYTE PTR ds:[esi]
  4224a4:	push   0x82bed4d2
  4224a9:	and    ecx,DWORD PTR [ebx+edi*2+0x172c541c]
  4224b0:	pop    ebp
  4224b1:	inc    ebp
  4224b2:	mov    bh,0xc2
  4224b4:	mov    edi,esi
  4224b6:	neg    DWORD PTR [ecx]
  4224b8:	lods   eax,DWORD PTR ds:[esi]
  4224b9:	jmp    0x7484:0x590b72f8
  4224c0:	jae    0x422516
  4224c2:	adc    cl,BYTE PTR [edx-0x5a4d00c4]
  4224c8:	retf   
  4224c9:	and    ebx,DWORD PTR [esi]
  4224cb:	out    dx,al
  4224cc:	xchg   ecx,eax
  4224cd:	jae    0x422545
  4224cf:	faddp  st(3),st
  4224d1:	rcl    BYTE PTR [eax],cl
  4224d3:	jae    0x4224f3
  4224d5:	xor    al,BYTE PTR [edx-0x2d]
  4224d8:	add    edx,DWORD PTR [eax+0x3b]
  4224db:	dec    ecx
  4224dc:	imul   eax,DWORD PTR [eax+0x388ad8e5],0x77
  4224e3:	cmp    eax,0xacb2b9f0
  4224e8:	aas    
  4224e9:	or     al,0x97
  4224eb:	inc    esi
  4224ec:	pop    ds
  4224ed:	jo     0x42249e
  4224ef:	and    eax,0x1232449b
  4224f4:	fnstsw WORD PTR [eax+eax*4+0x69a7d475]
  4224fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fc:	push   0x27d0c92
  422501:	fdivp  st(6),st
  422503:	test   eax,0x2d9f3fb9
  422508:	xor    eax,0x5ff2141
  42250d:	mov    cl,BYTE PTR [edx-0x69c7cb78]
  422513:	mov    ch,0x22
  422515:	jae    0x4224bc
  422517:	mov    esp,0xb865bc91
  42251c:	pop    es
  42251d:	mov    dl,0x15
  42251f:	pop    esi
  422520:	std    
  422521:	inc    esp
  422522:	cmp    eax,0x63c46286
  422527:	fwait
  422528:	sub    BYTE PTR [esi+0x71],0x4b
  42252c:	mov    edi,0x95706a52
  422531:	dec    ebx
  422532:	cdq    
  422533:	shl    DWORD PTR [ecx+0x195c5e93],0x14
  42253a:	fist   WORD PTR [ebx]
  42253c:	jecxz  0x4225a1
  42253e:	out    dx,eax
  42253f:	aaa    
  422540:	ds pop edi
  422542:	fbld   TBYTE PTR ds:0x254cf2fc
  422548:	into   
  422549:	xchg   edx,eax
  42254a:	or     DWORD PTR [ecx+0x4d],esp
  42254d:	aam    0x19
  42254f:	lock xchg edx,eax
  422551:	addr16 leave 
  422553:	sar    BYTE PTR [esi+0x7a506fb1],1
  422559:	lock cmc 
  42255b:	aaa    
  42255c:	ficomp DWORD PTR [ecx+0x6f]
  42255f:	mul    edx
  422561:	inc    esp
  422562:	add    eax,0x56f97332
  422567:	jo     0x422518
  422569:	dec    ebx
  42256a:	scas   eax,DWORD PTR es:[edi]
  42256b:	sti    
  42256c:	adc    BYTE PTR [edi+0x5b8c8435],cl
  422572:	push   cs
  422573:	mov    esp,0xa2ab6f7c
  422578:	pop    ebp
  422579:	inc    esp
  42257a:	arpl   WORD PTR [eax-0x427b60d0],sp
  422580:	mov    ebp,0x6a7b02ba
  422585:	jecxz  0x42258d
  422587:	je     0x422577
  422589:	pop    es
  42258a:	shr    ebx,cl
  42258c:	mov    fs,WORD PTR [esi]
  42258e:	jp     0x422608
  422590:	sahf   
  422591:	clc    
  422592:	add    al,0xee
  422594:	xchg   DWORD PTR [ebp-0x68a965b0],ecx
  42259a:	loopne 0x422551
  42259c:	sbb    BYTE PTR [eax+0x6d],cl
  42259f:	pop    edi
  4225a0:	cmp    edx,eax
  4225a2:	jns    0x422582
  4225a4:	les    edi,FWORD PTR [ebp-0x776e219a]
  4225aa:	adc    edi,DWORD PTR [ebx-0x34]
  4225ad:	inc    eax
  4225ae:	dec    eax
  4225af:	pusha  
  4225b0:	sub    eax,0x6fd35ede
  4225b5:	dec    esi
  4225b6:	out    0xb1,eax
  4225b8:	test   DWORD PTR gs:[ecx],edi
  4225bb:	setb   BYTE PTR [eax]
  4225be:	add    BYTE PTR [eax],al
  4225c0:	add    BYTE PTR [eax],al
  4225c2:	retf   0x6914
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f64:0x75423219
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	repz add al,0x0
  4225d9:	add    BYTE PTR [edx-0x20324f94],dl
  4225df:	xchg   edi,eax
  4225e0:	xchg   edi,eax
  4225e1:	fsubr  DWORD PTR [edx+0x27]
  4225e4:	and    al,0xb0
  4225e6:	fdivr  DWORD PTR [edi-0x1a]
  4225e9:	sahf   
  4225ea:	ins    DWORD PTR es:[edi],dx
  4225eb:	lds    edi,FWORD PTR [edi-0x57]
  4225ee:	iret   
  4225ef:	or     al,bl
  4225f1:	mov    ds:0x39f25e04,eax
  4225f6:	mov    ecx,?
  4225f8:	in     al,dx
  4225f9:	push   esi
  4225fa:	pusha  
  4225fb:	ret    
  4225fc:	not    BYTE PTR ss:[ebx+0x15]
  422600:	jo     0xbc53cb4f
  422606:	jae    0x4225e8
  422608:	ficom  WORD PTR [esi-0x37]
  42260b:	es sub eax,0xd74b9909
  422611:	loopne 0x422687
  422613:	jecxz  0x422668
  422615:	sub    DWORD PTR [ebx+eiz*2-0x4e],eax
  422619:	xchg   edi,eax
  42261a:	js     0x4225af
  42261c:	pusha  
  42261d:	fiadd  DWORD PTR [ebx-0x54924f40]
  422623:	ins    BYTE PTR es:[edi],dx
  422624:	lock xor bl,BYTE PTR [ecx-0x1fe94764]
  42262b:	rcr    DWORD PTR [eax],1
  42262d:	(bad)  
  42262e:	fld    TBYTE PTR [ebx-0x14]
  422631:	dec    DWORD PTR [esp+ecx*4]
  422634:	and    al,0x71
  422636:	pushf  
  422637:	in     al,dx
  422638:	mov    es,esp
  42263a:	inc    edx
  42263b:	and    BYTE PTR [eax],bh
  42263d:	adc    bh,BYTE PTR [edi+0x62]
  422640:	cmc    
  422641:	popa   
  422642:	retf   
  422643:	pop    ebx
  422644:	(bad)  
  422645:	cmp    edi,ebx
  422647:	repz jmp 0x90e1:0x45ca1486
  42264f:	repnz pop es
  422651:	or     ebx,DWORD PTR [ecx+0x5085bb7d]
  422657:	mov    ecx,0xcdad5ea4
  42265c:	sbb    al,0x63
  42265e:	adc    al,0x93
  422660:	mov    ch,dl
  422662:	adc    eax,0x29fdb07d
  422667:	loope  0x42264e
  422669:	sbb    BYTE PTR [ebx+esi*1],bl
  42266c:	push   DWORD PTR [ebx+0x34]
  42266f:	fwait
  422670:	leave  
  422671:	popa   
  422672:	sub    cl,BYTE PTR [ebp-0x4ee5b6cb]
  422678:	dec    eax
  422679:	jns    0x4226e1
  42267b:	sbb    esi,DWORD PTR [ebp+0x14f34702]
  422681:	shr    al,1
  422683:	jg     0x422684
  422685:	sub    BYTE PTR [ebx],ch
  422687:	addr16 xchg esi,eax
  422689:	leave  
  42268a:	dec    edi
  42268b:	int    0x6c
  42268d:	test   BYTE PTR [ecx+0xb],ah
  422690:	test   al,0xf9
  422692:	pop    ebp
  422693:	mov    esi,0xe45bd058
  422698:	retf   0x617e
  42269b:	outs   dx,BYTE PTR ds:[esi]
  42269c:	popa   
  42269d:	xchg   ebx,eax
  42269e:	(bad)  
  42269f:	daa    
  4226a0:	jge    0x422705
  4226a2:	repnz out 0xb0,eax
  4226a5:	call   0x7d16135d
  4226aa:	inc    ecx
  4226ab:	dec    esi
  4226ac:	out    0x30,eax
  4226ae:	pop    eax
  4226af:	jge    0x4226f9
  4226b1:	sbb    al,0x3e
  4226b3:	test   al,0x15
  4226b5:	lods   eax,DWORD PTR ds:[esi]
  4226b6:	mov    edx,DWORD PTR [ebp-0x2460b2bb]
  4226bc:	mov    cl,0xe5
  4226be:	icebp  
  4226bf:	lds    edx,FWORD PTR [ecx-0x28]
  4226c2:	es imul edx,eax,0x44
  4226c6:	inc    esp
  4226c7:	xor    al,0x73
  4226c9:	pop    fs
  4226cb:	out    0x80,eax
  4226cd:	xchg   ecx,eax
  4226ce:	xor    BYTE PTR [esi+0x6c30ee27],bh
  4226d4:	inc    edi
  4226d5:	in     eax,dx
  4226d6:	add    DWORD PTR [eax-0x1b],ebp
  4226d9:	xchg   edx,ebp
  4226db:	sub    eax,ecx
  4226dd:	shl    DWORD PTR [edi-0x2dbbbb3a],cl
  4226e3:	sbb    DWORD PTR [edi*2-0x1846b247],ebp
  4226ea:	inc    edi
  4226eb:	push   cs
  4226ec:	mov    dh,0xe5
  4226ee:	dec    edi
  4226ef:	mov    bl,0xc7
  4226f1:	std    
  4226f2:	xchg   DWORD PTR [ebx-0x68],edi
  4226f5:	pop    edx
  4226f6:	or     al,0x51
  4226f8:	cmp    DWORD PTR [ecx-0x3b],ecx
  4226fb:	or     eax,0x3cea6129
  422700:	mov    bl,dh
  422702:	push   esi
  422703:	push   esp
  422704:	enter  0x5d46,0x25
  422708:	and    esp,ebp
  42270a:	popa   
  42270b:	sub    al,0x75
  42270d:	push   edx
  42270e:	or     esp,ebx
  422710:	xor    edx,DWORD PTR [ebp+0x6b]
  422713:	add    DWORD PTR [ebx-0x139881e9],ebx
  422719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42271a:	xlat   BYTE PTR ds:[ebx]
  42271b:	sbb    dl,BYTE PTR [edx]
  42271d:	int3   
  42271e:	xor    al,0xb8
  422720:	std    
  422721:	aas    
  422722:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  422724:	addr16 std 
  422726:	imul   edi,DWORD PTR [edx+0x3a6381dc],0xffffffc5
  42272d:	mov    ds:0x6c28f47e,al
  422732:	mov    ecx,0x3098ab06
  422737:	jle    0x42279c
  422739:	pop    edx
  42273a:	pop    ss
  42273b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42273c:	sti    
  42273d:	cmp    al,0xbc
  42273f:	idiv   DWORD PTR [edi]
  422741:	int    0x3e
  422743:	(bad)  
  422744:	jecxz  0x4227ab
  422746:	mov    edx,0xbc79c937
  42274b:	aad    0xf1
  42274d:	pop    esp
  42274e:	fimul  WORD PTR [edx]
  422750:	pop    esp
  422751:	mov    DWORD PTR [edx-0x19],edi
  422754:	pop    ss
  422755:	or     BYTE PTR [edx+0x27ac0885],cl
  42275b:	pop    ecx
  42275c:	add    esp,DWORD PTR [edi+eiz*1-0x11]
  422760:	sub    DWORD PTR [ecx-0x3dc0fe8c],esp
  422766:	xchg   edi,eax
  422767:	xlat   BYTE PTR ds:[ebx]
  422768:	pop    esp
  422769:	ja     0x4227bd
  42276b:	adc    DWORD PTR [esi+esi*4-0x1c9ebc43],0x5f6fd8f
  422776:	sbb    ebx,0x9d38935
  42277c:	(bad)  
  42277d:	lds    ebp,FWORD PTR [ebx+edx*8]
  422780:	jp     0x422801
  422782:	mov    al,ds:0x43e9176b
  422787:	data16 idiv BYTE PTR [edx+0x18]
  42278b:	jle    0x4227b3
  42278d:	sbb    ebp,DWORD PTR [ecx]
  42278f:	rol    DWORD PTR [ecx-0x16],0xaf
  422793:	sbb    BYTE PTR [esi+eiz*1+0x2ab7efef],0x11
  42279b:	imul   ebx,DWORD PTR [esi+ebp*1],0x33217507
  4227a2:	cmc    
  4227a3:	js     0x42278a
  4227a5:	mov    ch,bl
  4227a7:	push   ecx
  4227a8:	int3   
  4227a9:	daa    
  4227aa:	(bad)  
  4227ab:	lds    eax,FWORD PTR [eax-0x2e6deee0]
  4227b1:	mov    eax,ds:0x4845012a
  4227b6:	push   esp
  4227b7:	mov    al,ds:0x1017089e
  4227bc:	adc    eax,0x1105dda0
  4227c1:	xchg   edi,eax
  4227c2:	inc    edi
  4227c3:	rol    BYTE PTR [edi+0x379d247e],1
  4227c9:	ret    0x9d55
  4227cc:	std    
  4227cd:	mov    ds:0x9d83f263,eax
  4227d2:	dec    ebp
  4227d3:	mov    edx,0x29d6e312
  4227d8:	push   0x4bbc4c5b
  4227dd:	adc    BYTE PTR [edi+0x16],ah
  4227e0:	inc    BYTE PTR [eax]
  4227e2:	rcr    DWORD PTR [esi+0x7bc08444],0x78
  4227e9:	out    0xa0,al
  4227eb:	xchg   edi,eax
  4227ec:	outs   dx,BYTE PTR ds:[esi]
  4227ed:	std    
  4227ee:	jno    0x4227cc
  4227f0:	sbb    BYTE PTR [ebx],bh
  4227f2:	push   ecx
  4227f3:	scas   eax,DWORD PTR es:[edi]
  4227f4:	cmp    eax,0xc5132e78
  4227f9:	jge    0x4227a0
  4227fb:	(bad)  
  4227fc:	fmul   st,st(7)
  4227fe:	cmc    
  4227ff:	rcr    BYTE PTR [eax],1
  422801:	in     al,0x6d
  422803:	cld    
  422804:	and    al,0xb2
  422806:	nop
  422807:	dec    edx
  422808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422809:	add    ch,ch
  42280b:	sub    eax,0xbddf0817
  422810:	cmp    ebx,0x9bf43f4f
  422816:	repz enter 0x9470,0xad
  42281b:	fs inc edx
  42281d:	jmp    0x30b2:0x1deb3627
  422824:	mov    ch,0x71
  422826:	and    al,0xce
  422828:	nop
  422829:	aaa    
  42282a:	lods   eax,DWORD PTR ds:[esi]
  42282b:	jg     0x4227c1
  42282d:	int    0x3e
  42282f:	sbb    eax,0x8a374688
  422834:	aam    0xf4
  422836:	sbb    BYTE PTR [ecx+0x4ba32645],bh
  42283c:	xchg   edx,eax
  42283d:	jo     0x422853
  42283f:	mov    BYTE PTR ss:[bx+0x37c],ah
  422845:	jo     0x422839
  422847:	and    al,0x89
  422849:	leave  
  42284a:	add    BYTE PTR [edi-0x7027498b],dl
  422850:	mov    ah,0x2
  422852:	gs das 
  422854:	fsubr  QWORD PTR [esi+0x20]
  422857:	sub    cl,BYTE PTR [eax-0x12]
  42285a:	neg    DWORD PTR [ecx-0x7a86993]
  422860:	sub    ecx,0x32
  422863:	push   0xffffffba
  422865:	cli    
  422866:	jne    0x422862
  422868:	jmp    0x8b56:0xfcf0f165
  42286f:	gs add al,0x9f
  422872:	fidiv  WORD PTR [ecx+0x1]
  422875:	mov    DWORD PTR [edx+0x17bc11c5],ebp
  42287b:	adc    DWORD PTR [edx-0x426bf30],ebx
  422881:	xchg   edi,eax
  422882:	sbb    DWORD PTR [edx],ecx
  422884:	or     DWORD PTR [edi-0x33],edi
  422887:	jbe    0x42280b
  422889:	out    dx,eax
  42288a:	cmc    
  42288b:	icebp  
  42288c:	ja     0x42281a
  42288e:	xor    al,0xc0
  422890:	jb     0x4228ba
  422892:	(bad)  
  422893:	loopne 0x422898
  422895:	aad    0x73
  422897:	inc    ecx
  422898:	ret    
  422899:	pop    eax
  42289a:	in     eax,dx
  42289b:	mov    esi,0x245bf3dd
  4228a0:	in     al,dx
  4228a1:	je     0x42287a
  4228a3:	bound  edx,QWORD PTR ds:0x611c7b56
  4228a9:	stos   DWORD PTR es:[edi],eax
  4228aa:	loope  0x422836
  4228ac:	addr16 xchg ecx,eax
  4228ae:	add    ch,cl
  4228b0:	out    dx,al
  4228b1:	pop    edi
  4228b2:	bound  ebx,QWORD PTR [edx+0x4d]
  4228b5:	sar    BYTE PTR [ebx+0x7e4f49d8],cl
  4228bb:	mov    BYTE PTR [ebp+ebx*4+0x3e52ab30],ah
  4228c2:	inc    esp
  4228c3:	add    bl,BYTE PTR [ebp+0x4c]
  4228c6:	push   esi
  4228c7:	into   
  4228c8:	cwde   
  4228c9:	jl     0x4228b1
  4228cb:	fmul   st,st(7)
  4228cd:	daa    
  4228ce:	add    BYTE PTR [ebp+edi*4-0x3753184f],ch
  4228d5:	mov    esi,0x35ba5ace
  4228da:	sub    BYTE PTR [eax+0x3f755612],0x79
  4228e1:	lods   al,BYTE PTR ds:[esi]
  4228e2:	sub    al,0xc5
  4228e4:	mov    ch,0x35
  4228e6:	mov    al,0xc6
  4228e8:	add    ebx,DWORD PTR [edx]
  4228ea:	cs retf 0xecfb
  4228ee:	add    al,0x60
  4228f0:	fadd   st(0),st
  4228f2:	fbld   TBYTE PTR [edi+edi*2]
  4228f5:	hlt    
  4228f6:	fdivr  st(6),st
  4228f8:	lock icebp 
  4228fa:	jb     0x4228b1
  4228fc:	or     eax,0xd1b8c5ca
  422901:	mov    dh,0x24
  422903:	xor    BYTE PTR [ebx+0x29c48ea9],0xe0
  42290a:	xor    al,0x67
  42290c:	not    DWORD PTR [ebp+0x33]
  42290f:	sbb    DWORD PTR [esi+0x66],0x41
  422913:	add    ah,BYTE PTR [eax-0x4a]
  422916:	adc    esp,ebp
  422918:	jle    0x4228a7
  42291a:	push   ecx
  42291b:	shl    BYTE PTR [esi+0x6c],cl
  42291e:	lods   eax,DWORD PTR es:[esi]
  422920:	jbe    0x4228ec
  422922:	cmp    eax,0x837a3fa2
  422927:	ins    DWORD PTR es:[edi],dx
  422928:	cmp    ebx,edx
  42292a:	cmp    esp,DWORD PTR [ecx]
  42292c:	push   ebx
  42292d:	fmul   DWORD PTR [ecx+0x5adfdb3b]
  422933:	js     0x42295b
  422935:	xchg   ebx,eax
  422936:	sti    
  422937:	inc    edx
  422938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422939:	lea    ecx,[ebx-0x138892b1]
  42293f:	xor    eax,0x4f4b5bc4
  422944:	mov    dl,0x0
  422946:	lock and edx,DWORD PTR [edx]
  422949:	or     eax,0x7a26ece5
  42294e:	mov    ecx,0xe05c4baa
  422953:	mov    ch,0xdb
  422955:	sub    bh,BYTE PTR [ebp-0x149ac110]
  42295b:	pop    eax
  42295c:	mov    ecx,0x41322e5c
  422961:	xchg   ch,ah
  422963:	sbb    cl,BYTE PTR [edx]
  422965:	mov    bl,0x9d
  422967:	xor    al,0x39
  422969:	mov    dh,0x98
  42296b:	adc    al,dl
  42296d:	fild   WORD PTR [ecx-0x56]
  422970:	add    eax,0x7eafe77e
  422975:	xchg   BYTE PTR [edi+0x42],al
  422978:	stos   DWORD PTR es:[edi],eax
  422979:	sbb    ah,BYTE PTR gs:[esi]
  42297c:	fst    QWORD PTR ds:0x2cc8c0d3
  422982:	(bad)  
  422983:	lock sbb eax,0x13e96402
  422989:	mov    ebx,0xe3838523
  42298e:	sub    bl,bh
  422990:	sbb    BYTE PTR [ecx-0x61],bh
  422993:	icebp  
  422994:	pop    es
  422995:	(bad)  
  422996:	push   ss
  422997:	dec    eax
  422998:	aam    0x40
  42299a:	dec    ebp
  42299b:	xlat   BYTE PTR ds:[ebx]
  42299c:	loope  0x422933
  42299e:	xor    DWORD PTR [ebp-0x2d005dcd],ebp
  4229a4:	lods   eax,DWORD PTR ds:[esi]
  4229a5:	sub    eax,0x7595a7f2
  4229aa:	fsubr  DWORD PTR [eax]
  4229ac:	sti    
  4229ad:	pop    esp
  4229ae:	sbb    al,0xd4
  4229b0:	push   0xa557ebfe
  4229b5:	xchg   ecx,eax
  4229b6:	lock jecxz 0x4229c3
  4229b9:	inc    edx
  4229ba:	(bad)  
  4229bb:	ins    BYTE PTR es:[edi],dx
  4229bc:	test   esp,esi
  4229be:	push   ds
  4229bf:	xor    BYTE PTR [ecx],dh
  4229c1:	ins    BYTE PTR es:[edi],dx
  4229c2:	cmp    esi,esp
  4229c4:	or     eax,0x1444e320
  4229c9:	(bad)  [ebp+0x4122e781]
  4229cf:	push   esp
  4229d0:	sub    cl,dl
  4229d2:	mov    esi,0xe705d56e
  4229d7:	stos   BYTE PTR es:[edi],al
  4229d8:	cld    
  4229d9:	and    dh,BYTE PTR [ecx-0x5d]
  4229dc:	push   ecx
  4229dd:	and    eax,0x489433b4
  4229e2:	xor    al,0x7a
  4229e4:	rcl    DWORD PTR [ebp+0x2c3372b8],1
  4229ea:	clc    
  4229eb:	xlat   BYTE PTR ds:[ebx]
  4229ec:	inc    ebx
  4229ed:	xor    DWORD PTR [edi+0x24d763a5],0xeb4e3151
  4229f7:	push   ecx
  4229f8:	lock fdivr st,st(4)
  4229fb:	mov    ah,0x8f
  4229fd:	aam    0x8a
  4229ff:	je     0x4229a7
  422a01:	xor    BYTE PTR [esi+eax*1-0x30c7a235],al
  422a08:	mov    ebx,DWORD PTR [esi+0x3df05a82]
  422a0e:	mov    ch,0x62
  422a10:	jmp    0x422a83
  422a12:	pop    ds
  422a13:	inc    ebx
  422a14:	jns    0x422a03
  422a16:	dec    eax
  422a17:	mov    al,ds:0xe0fd56d5
  422a1c:	(bad)  
  422a1e:	fmul   DWORD PTR [ecx+esi*8-0xe]
  422a22:	mov    dl,0x9f
  422a24:	shl    edx,1
  422a26:	mov    bl,0xea
  422a28:	inc    esi
  422a29:	add    ch,ch
  422a2b:	xchg   ebp,eax
  422a2c:	inc    esp
  422a2d:	mov    bl,BYTE PTR [eax-0x6343c625]
  422a33:	into   
  422a34:	adc    edx,esp
  422a36:	in     eax,dx
  422a37:	lahf   
  422a38:	repz mov ss,WORD PTR gs:[eax-0x20a59882]
  422a40:	pop    edx
  422a41:	or     BYTE PTR [ebx+0x61],cl
  422a44:	retf   0x69c3
  422a47:	or     BYTE PTR [esi+0x5b],al
  422a4a:	test   eax,0xca827928
  422a4f:	lods   al,BYTE PTR ds:[si]
  422a51:	xchg   esi,eax
  422a52:	xchg   esi,eax
  422a53:	(bad)  
  422a54:	fcmovbe st,st(3)
  422a56:	or     DWORD PTR [eax-0x44aa2919],edi
  422a5c:	xchg   ecx,eax
  422a5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a5e:	(bad)  
  422a5f:	cmp    ch,bh
  422a61:	push   ebx
  422a62:	shl    BYTE PTR [ecx-0x71],cl
  422a65:	outs   dx,DWORD PTR ds:[esi]
  422a66:	mov    edi,0x6a6e694f
  422a6b:	mov    ds,WORD PTR [eax+0x3a]
  422a6e:	inc    esi
  422a6f:	xchg   DWORD PTR [ebx+ebx*1+0x14329a07],esi
  422a76:	(bad)  [edx+edi*2-0x3763aaf]
  422a7d:	ss push ecx
  422a7f:	daa    
  422a80:	repz test DWORD PTR [esi],esp
  422a83:	pop    eax
  422a84:	test   DWORD PTR [edx],0x53b867a0
  422a8a:	xchg   ebx,eax
  422a8b:	adc    edi,esp
  422a8d:	test   esp,ebp
  422a8f:	out    0x9d,al
  422a91:	test   BYTE PTR [edx-0x8],cl
  422a94:	xlat   BYTE PTR ds:[ebx]
  422a95:	aas    
  422a96:	cmp    esi,DWORD PTR [esi-0x65]
  422a99:	push   ecx
  422a9a:	popf   
  422a9b:	mov    ds:0x8248d529,al
  422aa0:	mov    ebx,0xc41e4746
  422aa5:	lods   al,BYTE PTR ds:[esi]
  422aa6:	dec    edi
  422aa7:	cld    
  422aa8:	scas   eax,DWORD PTR es:[edi]
  422aa9:	jb     0x422a39
  422aab:	adc    al,0x53
  422aad:	test   BYTE PTR [eax-0x2d],dl
  422ab0:	cwde   
  422ab1:	lea    esp,[ecx-0x6a]
  422ab4:	(bad)  
  422ab6:	jne    0x422b22
  422ab8:	lahf   
  422ab9:	jmp    0x7626:0x4dcd8389
  422ac0:	xor    BYTE PTR [ecx+0x61d997b9],cl
  422ac6:	arpl   WORD PTR [eax],di
  422ac8:	mov    al,0x22
  422aca:	stos   BYTE PTR es:[edi],al
  422acb:	pop    ebx
  422acc:	adc    DWORD PTR [eax],eax
  422ace:	add    BYTE PTR [eax],al
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx+0x3b73cff5],bh
  422ae2:	push   edi
  422ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae4:	add    DWORD PTR [eax],eax
  422ae6:	repz add al,0x0
  422ae9:	add    BYTE PTR [ebx+0x5df33557],bl
  422aef:	jmp    0x14d40340
  422af4:	xchg   ebx,eax
  422af5:	pop    ds
  422af6:	or     al,0xf9
  422af8:	lods   eax,DWORD PTR ds:[esi]
  422af9:	imul   edx,ebp,0x72255bb6
  422aff:	xchg   BYTE PTR [esi+0x5f],cl
  422b02:	lahf   
  422b03:	aad    0xd3
  422b05:	shl    BYTE PTR [edi],0xab
  422b08:	push   es
  422b09:	pop    es
  422b0a:	outs   dx,DWORD PTR ds:[esi]
  422b0b:	loope  0x422ada
  422b0d:	icebp  
  422b0e:	test   BYTE PTR [ebp+0x51],ah
  422b11:	mov    ecx,0x62d95d01
  422b16:	lods   eax,DWORD PTR ds:[esi]
  422b17:	int    0x3b
  422b19:	cwde   
  422b1a:	call   FWORD PTR [edi-0x3dd39c9]
  422b20:	mov    bh,BYTE PTR [edi+eiz*1-0x5f]
  422b24:	jbe    0x422b11
  422b26:	aas    
  422b27:	mov    edi,0x6c239d09
  422b2c:	mov    edx,0x79edbd0d
  422b31:	inc    ecx
  422b32:	jno    0x422b32
  422b34:	pop    ecx
  422b35:	jmp    0x422ac2
  422b37:	xchg   ecx,eax
  422b38:	arpl   WORD PTR [esi+0x4a50cd86],ax
  422b3e:	in     al,dx
  422b3f:	or     al,0xf9
  422b41:	lods   eax,DWORD PTR ds:[esi]
  422b42:	jg     0x422adf
  422b44:	out    dx,al
  422b45:	cli    
  422b46:	fcomp  st(6)
  422b48:	jnp    0x422acc
  422b4a:	sub    eax,0xbb91bf96
  422b4f:	test   eax,0x7a53e0a5
  422b54:	ins    BYTE PTR es:[edi],dx
  422b55:	add    DWORD PTR ds:0xb5a42a8c,esi
  422b5b:	inc    edi
  422b5c:	jecxz  0x422aec
  422b5e:	mov    edi,0x1574878c
  422b63:	push   esp
  422b64:	or     dl,BYTE PTR [eax-0x6]
  422b67:	jns    0x422b12
  422b69:	clc    
  422b6a:	clc    
  422b6b:	push   ebp
  422b6c:	dec    eax
  422b6d:	neg    BYTE PTR ss:[eax-0x6a]
  422b71:	std    
  422b72:	jl     0x422bc8
  422b74:	lock (bad) 
  422b76:	mul    DWORD PTR [edx-0x43]
  422b79:	(bad)  
  422b7a:	jno    0x422b7b
  422b7c:	pop    eax
  422b7d:	mov    ch,0x9b
  422b7f:	(bad)  
  422b80:	mov    al,0x20
  422b82:	clc    
  422b83:	sbb    al,0xce
  422b85:	cmp    eax,0xc15c6a0e
  422b8a:	add    al,0xf2
  422b8c:	mov    al,0xbd
  422b8e:	xchg   ecx,eax
  422b8f:	sbb    edx,ecx
  422b91:	sub    al,BYTE PTR [esi-0x2055497a]
  422b97:	inc    ecx
  422b98:	jmp    0xb27fefa7
  422b9d:	mov    dl,0x92
  422b9f:	aad    0x11
  422ba1:	mov    dl,0x62
  422ba3:	mov    edx,0xb56c7b64
  422ba8:	imul   ebx,DWORD PTR [esi-0x54b32c93],0x266249e2
  422bb2:	mov    ebp,0x50b20b87
  422bb7:	leave  
  422bb8:	and    DWORD PTR [ebx],esp
  422bba:	call   0x9859:0xa0676d43
  422bc1:	mov    al,bl
  422bc3:	xchg   edx,eax
  422bc4:	int3   
  422bc5:	dec    ecx
  422bc6:	or     ah,BYTE PTR [ecx-0x67]
  422bc9:	xor    eax,0xd5355b23
  422bce:	jno    0x422bd4
  422bd0:	aam    0x47
  422bd2:	jp     0x422c4b
  422bd4:	jb     0x422c51
  422bd6:	mov    ds:0xd29ff62a,al
  422bdb:	enter  0xae32,0x7f
  422bdf:	adc    DWORD PTR [esp+eiz*8],esi
  422be2:	dec    esp
  422be3:	loope  0x422b79
  422be5:	sbb    al,BYTE PTR [eax+0x57]
  422be8:	push   ebp
  422be9:	(bad)  
  422bea:	(bad)  
  422beb:	outs   dx,BYTE PTR ds:[esi]
  422bec:	sub    DWORD PTR [ebx],ecx
  422bee:	push   ds
  422bef:	cwde   
  422bf0:	retf   
  422bf1:	mov    ebx,ecx
  422bf3:	aas    
  422bf4:	ds ja  0x422bd3
  422bf7:	not    BYTE PTR [esi+0x43]
  422bfa:	icebp  
  422bfb:	adc    al,0x6c
  422bfd:	stos   DWORD PTR es:[edi],eax
  422bfe:	retf   
  422bff:	outs   dx,BYTE PTR ds:[esi]
  422c00:	(bad)  
  422c01:	sub    eax,0x11de7bc7
  422c06:	hlt    
  422c07:	icebp  
  422c08:	jns    0x422ba3
  422c0a:	stos   BYTE PTR es:[edi],al
  422c0b:	dec    edx
  422c0c:	popa   
  422c0d:	push   esi
  422c0e:	hlt    
  422c0f:	push   ebx
  422c10:	sete   al
  422c13:	mov    eax,ds:0xcf7055e8
  422c18:	xchg   ebp,eax
  422c19:	cld    
  422c1a:	dec    ebx
  422c1b:	std    
  422c1c:	outs   dx,BYTE PTR ds:[esi]
  422c1d:	in     eax,0x8f
  422c1f:	jmp    0x422c87
  422c21:	pop    esp
  422c22:	dec    ebp
  422c23:	dec    esp
  422c24:	and    eax,0xfdda2c87
  422c29:	stc    
  422c2a:	and    bl,BYTE PTR [edi]
  422c2c:	not    dh
  422c2e:	std    
  422c2f:	adc    al,0xd3
  422c31:	lea    edi,[edx+0x6b]
  422c34:	mov    ecx,0x873619d1
  422c39:	mov    bl,0xe1
  422c3b:	fiadd  DWORD PTR ds:0xd115e553
  422c41:	add    BYTE PTR [edi],al
  422c43:	popf   
  422c44:	cmc    
  422c45:	ds sbb ah,bh
  422c48:	pop    es
  422c49:	xchg   esp,eax
  422c4a:	xor    edx,ebx
  422c4c:	lods   al,BYTE PTR ds:[esi]
  422c4d:	xchg   DWORD PTR [esi+0x70],esi
  422c50:	cli    
  422c51:	(bad)  
  422c52:	jo     0x422c56
  422c54:	fist   DWORD PTR [edi-0x1]
  422c57:	or     dl,BYTE PTR [ebx+eax*2-0x57]
  422c5b:	imul   ecx,DWORD PTR [ebp+0x37],0x1a1af3b7
  422c62:	int3   
  422c63:	pop    edi
  422c64:	dec    edi
  422c65:	pop    es
  422c66:	add    esi,ebx
  422c68:	mov    dh,ch
  422c6a:	cmp    BYTE PTR [edi],ah
  422c6c:	test   DWORD PTR [ecx],edx
  422c6e:	jp     0x422c74
  422c70:	sub    ax,0xf69b
  422c74:	and    DWORD PTR [eax+0x5fdcb32c],esp
  422c7a:	stos   BYTE PTR es:[edi],al
  422c7b:	push   ebp
  422c7c:	mov    dl,0x3f
  422c7e:	shr    BYTE PTR [ebx+edi*4],1
  422c81:	adc    ebx,DWORD PTR [ecx-0xa5f3036]
  422c87:	gs repnz (bad) 
  422c8a:	sbb    al,0x12
  422c8c:	mov    dh,0x64
  422c8e:	mov    ds:0xfb859e8,eax
  422c93:	cmp    BYTE PTR [ebp+0x5c1eb2c1],cl
  422c99:	adc    BYTE PTR [ebx+0x32],dh
  422c9c:	push   ebp
  422c9d:	jo     0x422cd9
  422c9f:	jecxz  0x422ca4
  422ca1:	das    
  422ca2:	and    ebx,edx
  422ca4:	xor    ch,BYTE PTR [edi+0x16]
  422ca7:	retf   0x69a4
  422caa:	loope  0x422d18
  422cac:	mov    al,0x6e
  422cae:	and    al,0x52
  422cb0:	rol    BYTE PTR fs:[edi-0x4c57c513],0x98
  422cb8:	scas   eax,DWORD PTR es:[edi]
  422cb9:	mov    ebp,0x4764b7a1
  422cbe:	push   ebp
  422cbf:	(bad)  
  422cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cc1:	ins    DWORD PTR es:[edi],dx
  422cc2:	xchg   ebx,eax
  422cc3:	aas    
  422cc4:	pop    edi
  422cc5:	cdq    
  422cc6:	sub    BYTE PTR [esi+0x43],dh
  422cc9:	pop    ecx
  422cca:	daa    
  422ccb:	ror    DWORD PTR [edi+0x12f07017],1
  422cd1:	adc    al,0x63
  422cd3:	mov    al,ds:0x1263cc1d
  422cd8:	mov    DWORD PTR [esi],esi
  422cda:	bound  ebx,QWORD PTR [ecx-0x6a]
  422cdd:	lods   eax,DWORD PTR ds:[esi]
  422cde:	mov    ecx,0x902347d9
  422ce3:	sub    edi,esp
  422ce5:	fiadd  WORD PTR [ebp+0x1c]
  422ce8:	dec    bx
  422cea:	out    dx,al
  422ceb:	(bad)  [edx+0x70fe03c4]
  422cf1:	push   es
  422cf2:	adc    dl,al
  422cf4:	jmp    0xef71371f
  422cf9:	stos   DWORD PTR es:[edi],eax
  422cfa:	cmp    ecx,DWORD PTR [edx+0x625c7d26]
  422d00:	mov    al,ds:0xc11dee08
  422d05:	pop    esp
  422d06:	sbb    eax,0x561e6b7e
  422d0b:	xchg   DWORD PTR [eax+0x5a],edx
  422d0e:	std    
  422d0f:	jg     0x422ca3
  422d11:	pop    edi
  422d12:	and    BYTE PTR ds:0xcdfdee30,ch
  422d18:	push   edx
  422d19:	clc    
  422d1a:	fninit 
  422d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d1d:	ret    0x7736
  422d20:	sbb    DWORD PTR [esp+esi*4+0x5103d426],esi
  422d27:	xchg   ebp,eax
  422d28:	es jb  0x422cbf
  422d2b:	cmp    DWORD PTR [esi],esp
  422d2d:	jg     0x422d67
  422d2f:	loop   0x422cfe
  422d31:	clc    
  422d32:	out    0xf8,al
  422d34:	fcomi  st,st(4)
  422d36:	cmc    
  422d37:	xor    eax,ecx
  422d39:	out    dx,eax
  422d3a:	ja     0x422cbc
  422d3c:	cmp    DWORD PTR [edx+0x33],0x57cb6f5b
  422d43:	cmp    eax,0x878a06b2
  422d49:	repnz lods eax,DWORD PTR ds:[esi]
  422d4b:	scas   eax,DWORD PTR es:[edi]
  422d4c:	pop    ecx
  422d4d:	out    dx,al
  422d4e:	repz jbe 0x422cd8
  422d51:	jnp    0x422dd2
  422d53:	adc    cl,cl
  422d55:	dec    edi
  422d56:	div    dl
  422d58:	jge    0x422d4d
  422d5a:	rol    BYTE PTR [ecx-0x14c4b72e],cl
  422d60:	push   ecx
  422d61:	cdq    
  422d62:	in     al,dx
  422d63:	ss leave 
  422d65:	rcr    DWORD PTR [esi+esi*2+0x6],1
  422d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d6a:	jb     0x422d83
  422d6c:	mov    BYTE PTR [edx],0x7b
  422d6f:	mov    ds:0x821667f6,al
  422d74:	ret    
  422d75:	xchg   ecx,eax
  422d76:	jmp    0x3c46:0xc27d2380
  422d7d:	xor    esi,DWORD PTR fs:[edx+0x40]
  422d81:	scas   al,BYTE PTR es:[edi]
  422d82:	fcomp  DWORD PTR [eax+0x6b65fce7]
  422d88:	sbb    al,bh
  422d8a:	sbb    eax,0xcae383fd
  422d8f:	arpl   si,dx
  422d91:	mov    dl,0xd1
  422d93:	or     bl,cl
  422d95:	xor    edi,DWORD PTR [esi+0x5b]
  422d98:	div    BYTE PTR [edx]
  422d9a:	mov    ebx,0xb2c79894
  422d9f:	jae    0x422daf
  422da1:	xchg   BYTE PTR [ecx],dl
  422da3:	mov    esp,0x15f0dc4d
  422da8:	aad    0x40
  422daa:	and    eax,0xaa873b89
  422daf:	fwait
  422db0:	ins    DWORD PTR es:[edi],dx
  422db1:	loopne 0x422ddf
  422db3:	mov    dl,0xd3
  422db5:	out    0x52,eax
  422db7:	lods   eax,DWORD PTR ds:[esi]
  422db8:	pop    edi
  422db9:	mov    eax,ds:0xf78985b1
  422dbe:	pop    edx
  422dbf:	mov    bl,0x1f
  422dc1:	or     edx,DWORD PTR [ebx+0x6a]
  422dc4:	cld    
  422dc5:	push   edx
  422dc6:	sub    eax,0xccba3afd
  422dcb:	ror    DWORD PTR [ebx+edi*4-0x5f],0xd
  422dd0:	pop    edi
  422dd1:	and    ebx,DWORD PTR gs:[edi-0x14b7200e]
  422dd8:	adc    eax,0x6e59267e
  422ddd:	lods   eax,DWORD PTR ds:[esi]
  422dde:	xor    DWORD PTR [ebp-0x542e8a96],ebx
  422de4:	mov    ds:0x7afb1bff,al
  422de9:	fimul  WORD PTR [ebp-0x1e5e8247]
  422def:	mov    ebx,0xfc5b8926
  422df4:	in     eax,dx
  422df5:	out    dx,eax
  422df6:	jecxz  0x422dbb
  422df8:	dec    eax
  422df9:	jno    0x422e72
  422dfb:	cdq    
  422dfc:	dec    ebp
  422dfd:	mov    ch,0xe5
  422dff:	push   es
  422e00:	jle    0x422dc6
  422e02:	sub    eax,0xd9369576
  422e07:	and    eax,0x7a444764
  422e0c:	(bad)  
  422e0d:	dec    ecx
  422e0e:	stos   DWORD PTR es:[edi],eax
  422e0f:	(bad)  
  422e10:	sbb    cl,BYTE PTR [esi]
  422e12:	fwait
  422e13:	or     dh,dh
  422e15:	inc    ebp
  422e16:	fistp  WORD PTR [eax]
  422e18:	into   
  422e19:	cmp    al,0xeb
  422e1b:	imul   ebx,esp,0xd5eb786c
  422e21:	stos   DWORD PTR es:[edi],eax
  422e22:	mov    dl,0x6f
  422e24:	sbb    ah,bl
  422e26:	fstp   DWORD PTR [edi]
  422e28:	xor    ebp,DWORD PTR [esp+edi*8-0x39]
  422e2c:	pop    es
  422e2d:	inc    edi
  422e2e:	adc    BYTE PTR [edx+0x13a1e652],ch
  422e34:	loope  0x422e48
  422e36:	(bad)  
  422e37:	cmc    
  422e38:	xor    al,0x10
  422e3a:	sbb    cl,bl
  422e3c:	mov    DWORD PTR [esi+edx*2],esp
  422e3f:	jecxz  0x422eb9
  422e41:	adc    esi,DWORD PTR [ebx]
  422e43:	pop    ds
  422e44:	cmp    eax,DWORD PTR [ebp+0x4d]
  422e47:	xchg   esp,eax
  422e48:	mov    ecx,?
  422e4a:	xor    eax,0x34296a1f
  422e4f:	ficomp DWORD PTR [ecx-0x68]
  422e52:	lock mov al,ds:0x968fc9f4
  422e58:	dec    edi
  422e59:	shr    DWORD PTR [edi-0x2f739a4b],cl
  422e5f:	push   ds
  422e60:	mov    esi,0x53fce591
  422e65:	gs aaa 
  422e67:	mov    edi,0x799bb172
  422e6c:	dec    eax
  422e6d:	test   DWORD PTR [edx],edi
  422e6f:	jns    0x422ed1
  422e71:	in     al,dx
  422e72:	(bad)  
  422e73:	jnp    0x422e46
  422e75:	mov    bl,0xc2
  422e77:	nop
  422e78:	inc    ebp
  422e79:	retf   
  422e7a:	or     ah,BYTE PTR [eax]
  422e7c:	out    dx,eax
  422e7d:	inc    esi
  422e7e:	push   edx
  422e7f:	jno    0x422e61
  422e81:	pop    ecx
  422e82:	mov    ds:0xb232cb0e,eax
  422e87:	stos   BYTE PTR es:[edi],al
  422e88:	call   0x4f8f31a9
  422e8d:	(bad)  
  422e8e:	rcl    ebp,cl
  422e90:	or     BYTE PTR [edi-0xe78fa85],cl
  422e96:	dec    esp
  422e97:	mov    cs,WORD PTR [edx-0x59e589bc]
  422e9d:	outs   dx,DWORD PTR ds:[esi]
  422e9e:	xchg   ebx,eax
  422e9f:	into   
  422ea0:	pop    es
  422ea1:	mov    BYTE PTR [edx],0x2f
  422ea4:	inc    esi
  422ea5:	push   esi
  422ea6:	inc    esi
  422ea7:	dec    esp
  422ea8:	cmp    eax,0x7726daa6
  422ead:	xor    dh,dl
  422eaf:	dec    edi
  422eb0:	scas   eax,DWORD PTR es:[edi]
  422eb1:	aad    0xfb
  422eb3:	ins    DWORD PTR es:[edi],dx
  422eb4:	sub    bl,BYTE PTR ds:0x178a00f8
  422eba:	rol    DWORD PTR [ebx],0x4a
  422ebd:	xchg   ecx,eax
  422ebe:	inc    edi
  422ebf:	sbb    al,0xbb
  422ec1:	out    dx,al
  422ec2:	(bad)  
  422ec3:	sub    cl,dl
  422ec5:	sbb    cl,BYTE PTR [esi-0x4e]
  422ec8:	add    BYTE PTR [esi+esi*2-0x3d4860e1],ah
  422ecf:	ret    0xaf2a
  422ed2:	lds    eax,FWORD PTR [edx+esi*1-0x46263a0b]
  422ed9:	(bad)  
  422eda:	out    0x60,eax
  422edc:	pop    esi
  422edd:	ficomp WORD PTR [eax]
  422edf:	xor    DWORD PTR [eax],ebp
  422ee1:	mov    ah,0x94
  422ee3:	push   0xb2a4388b
  422ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ee9:	rdpmc  
  422eeb:	addr16 jp 0x422f46
  422eee:	push   edx
  422eef:	sub    al,0x2a
  422ef1:	imul   ecx,ecx,0x52
  422ef4:	stos   DWORD PTR es:[edi],eax
  422ef5:	int    0xfc
  422ef7:	sbb    al,dh
  422ef9:	sub    edx,DWORD PTR [ebx+0x61a5d31c]
  422eff:	data16 jns 0x422f57
  422f02:	dec    BYTE PTR [edi+0x59]
  422f05:	inc    esp
  422f06:	enter  0xb3b5,0x5b
  422f0a:	xlat   BYTE PTR ds:[ebx]
  422f0b:	xor    dl,BYTE PTR [esi]
  422f0d:	jo     0x422f58
  422f0f:	add    eax,0x90f97af5
  422f14:	(bad)  [ebp-0x7c818bb]
  422f1a:	and    DWORD PTR [edi],ebx
  422f1c:	test   eax,0x59f6751b
  422f21:	cmp    esp,esi
  422f23:	mov    al,ds:0x54ae78d9
  422f28:	cmp    eax,0xb4814aab
  422f2d:	push   ebx
  422f2e:	je     0x422ee9
  422f30:	and    eax,0x37f4bcc6
  422f35:	rcr    DWORD PTR [ebx-0x66a43c33],0xf9
  422f3c:	test   BYTE PTR fs:[ecx-0x339ff389],ah
  422f43:	ins    BYTE PTR es:[edi],dx
  422f44:	inc    ebp
  422f45:	(bad)  
  422f46:	lods   al,BYTE PTR ds:[esi]
  422f47:	push   ebp
  422f48:	clc    
  422f49:	and    BYTE PTR [edi-0x61ef3c21],ch
  422f4f:	jb     0x422f23
  422f51:	rol    DWORD PTR [edi],0x4a
  422f54:	mov    ds:0x1e46e8db,al
  422f59:	inc    ecx
  422f5a:	sar    BYTE PTR [ebp-0x61],1
  422f5d:	and    al,0x40
  422f5f:	mov    dl,BYTE PTR [ecx]
  422f61:	sbb    ah,0xdd
  422f64:	mov    edx,0xbcd796ed
  422f69:	dec    esp
  422f6a:	fsub   DWORD PTR [eax-0x3f1b6e47]
  422f70:	call   0x2c7afc12
  422f75:	cld    
  422f76:	retf   0x4660
  422f79:	dec    ecx
  422f7a:	and    DWORD PTR [ecx+esi*1+0x2afa58a5],edi
  422f81:	(bad)  
  422f82:	jmp    0xa25ec09a
  422f87:	repz cld 
  422f89:	mov    esi,0x998148d6
  422f8f:	push   0x4163996d
  422f94:	xchg   edi,eax
  422f95:	mov    dh,0x56
  422f97:	xor    eax,0xc62fd149
  422f9c:	or     ch,0x45
  422f9f:	jg     0x422f2f
  422fa1:	push   edi
  422fa2:	ds pop es
  422fa4:	gs pusha 
  422fa6:	jle    0x422ff4
  422fa8:	xchg   ecx,eax
  422fa9:	call   DWORD PTR [esi+ebx*2-0x1b]
  422fad:	and    BYTE PTR [esi],ah
  422faf:	add    bl,dh
  422fb1:	pop    ebp
  422fb2:	xor    DWORD PTR [eax+eax*4-0x1d],edx
  422fb6:	pusha  
  422fb7:	push   ebp
  422fb8:	mov    ebp,0xeef81b27
  422fbd:	adc    ebp,DWORD PTR [esi+ecx*2-0x2a6f40bc]
  422fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fc5:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  422fc7:	imul   eax,DWORD PTR [ebx+0x7],0xac90b9a2
  422fce:	rol    eax,0x3f
  422fd1:	xor    BYTE PTR [eax],cl
  422fd3:	push   ss
  422fd4:	ret    0xedd1
  422fd7:	xchg   BYTE PTR [esi+0x16],ch
  422fda:	and    eax,0x6ba7
  422fdf:	add    BYTE PTR [eax],al
  422fe1:	add    BYTE PTR [edi],cl
  422fe3:	pop    ebx
  422fe4:	test   BYTE PTR [esi],dl
  422fe6:	aam    0xdf
  422fe8:	lahf   
  422fe9:	pop    ebx
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    eax,DWORD PTR [ebx+0x5c]
  422ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ff1:	jmp    0x4f3:0x1a94a
  422ff8:	add    BYTE PTR [eax],al
  422ffa:	push   es
  422ffb:	add    al,BYTE PTR [ecx-0x7445bd39]
  423001:	fld    DWORD PTR [ecx+0x5dbb510e]
  423007:	loope  0x42306f
  423009:	(bad)
  42300d:	xlat   BYTE PTR ds:[ebx]
  42300e:	or     DWORD PTR [ecx],0x710b3496
  423014:	cmp    edi,esp
  423016:	xchg   edx,eax
  423017:	mov    DWORD PTR [ebp+0x62],0x78ed3306
  42301e:	call   0xfd0c:0x4978f2e7
  423025:	loopne 0x422fcf
  423027:	std    
  423028:	(bad)  
  423029:	(bad)  
  42302b:	mov    edx,DWORD PTR ds:0x6a445575
  423031:	clc    
  423032:	loope  0x4230ac
  423034:	pop    esi
  423035:	ret    
  423036:	jbe    0x42306a
  423038:	outs   dx,DWORD PTR ds:[esi]
  423039:	fisttp WORD PTR [ecx]
  42303b:	mov    ch,0x10
  42303d:	or     eax,DWORD PTR [edx+0x11b9386d]
  423043:	add    eax,0x4d6fe0d3
  423048:	push   eax
  423049:	xchg   esp,ebx
  42304b:	pop    ss
  42304c:	outs   dx,BYTE PTR ds:[esi]
  42304d:	mov    ?,WORD PTR [edi-0x45096b49]
  423053:	xor    BYTE PTR [edx+eiz*1],dh
  423056:	mov    ah,0x3c
  423058:	test   eax,0x132a96c5
  42305d:	jnp    0x423045
  42305f:	enter  0xf83e,0x7c
  423063:	add    ecx,DWORD PTR [edi+0x6896afa2]
  423069:	jge    0x423020
  42306b:	jecxz  0x42305f
  42306d:	pop    ebx
  42306e:	retf   0xc42c
  423071:	mov    esi,0xd119166a
  423076:	and    BYTE PTR [ebx+0x10c26ea],0xd1
  42307d:	xchg   ebp,eax
  42307e:	cmp    al,0xcb
  423080:	xor    al,0xf4
  423082:	mov    bl,0x11
  423084:	xchg   BYTE PTR [edx+0x3f],dl
  423087:	or     eax,0xc4e519e1
  42308c:	popa   
  42308d:	les    ebp,FWORD PTR [ebx]
  42308f:	xchg   ebp,eax
  423090:	adc    BYTE PTR [ebx+edx*1],0x16
  423094:	sub    bh,BYTE PTR [esi]
  423096:	and    eax,0x21bb5946
  42309b:	pop    esp
  42309c:	add    BYTE PTR [edi+0x70],bh
  42309f:	popf   
  4230a0:	ficom  WORD PTR [ebx+0x5394eae3]
  4230a6:	fst    QWORD PTR [ebp+0x6057fe7c]
  4230ac:	sysret 
  4230ae:	jns    0x423112
  4230b0:	jbe    0x4230d1
  4230b2:	xor    al,0x73
  4230b4:	in     eax,dx
  4230b5:	and    eax,0x710b30a
  4230ba:	aad    0xd1
  4230bc:	or     edx,DWORD PTR [esi-0x14ed9dae]
  4230c2:	mov    edx,0xb5ba55e6
  4230c7:	jp     0x42312f
  4230c9:	or     ch,0x13
  4230cc:	push   esi
  4230cd:	in     eax,0xf8
  4230cf:	cmp    esi,DWORD PTR [ecx]
  4230d1:	cmp    DWORD PTR [ebx+0x385e854],edx
  4230d7:	lahf   
  4230d8:	jge    0x42313d
  4230da:	lods   al,BYTE PTR ds:[esi]
  4230db:	lods   eax,DWORD PTR ds:[esi]
  4230dc:	loop   0x42315b
  4230de:	ltr    WORD PTR [ebx+0x64b7e089]
  4230e5:	dec    ebx
  4230e6:	or     al,0x0
  4230e8:	out    0xac,eax
  4230ea:	ins    DWORD PTR es:[edi],dx
  4230eb:	popa   
  4230ec:	iret   
  4230ed:	mov    bl,0x3
  4230ef:	icebp  
  4230f0:	sbb    bl,dl
  4230f2:	sbb    bl,bh
  4230f4:	loope  0x423114
  4230f6:	sbb    DWORD PTR [edi+0x4701d792],esp
  4230fc:	loope  0x4230d4
  4230fe:	cdq    
  4230ff:	scas   eax,DWORD PTR es:[edi]
  423100:	xchg   ebp,eax
  423101:	aam    0x3d
  423103:	jo     0x4230d7
  423105:	or     BYTE PTR [eax+0x74],bl
  423108:	mov    bh,0xb4
  42310a:	push   ds
  42310b:	ja     0x4230d2
  42310d:	adc    al,0xf8
  42310f:	loopne 0x423103
  423111:	cmp    al,bh
  423113:	inc    ebp
  423114:	enter  0x8c62,0x21
  423118:	mov    dl,BYTE PTR [ebx]
  42311a:	push   ecx
  42311b:	push   edx
  42311c:	lds    esi,FWORD PTR [eax]
  42311e:	jae    0x423193
  423120:	adc    edx,DWORD PTR [ebx+ecx*4]
  423123:	cmp    dh,al
  423125:	inc    ebx
  423126:	pop    esp
  423127:	xchg   edx,eax
  423128:	ret    0xfd24
  42312b:	jl     0x4230da
  42312d:	xor    dh,BYTE PTR ds:0x571f4977
  423133:	mov    eax,ds:0x69afadcb
  423138:	into   
  423139:	aaa    
  42313a:	out    0x60,eax
  42313c:	mov    ds:0x71bdd80d,al
  423141:	adc    al,0x97
  423143:	xor    DWORD PTR [esi+eiz*1-0x2cc72d52],esi
  42314a:	mov    al,ds:0x130af8d2
  42314f:	jecxz  0x42311b
  423151:	call   0x388f:0xe48e251a
  423158:	inc    edi
  423159:	aam    0x67
  42315b:	mov    al,ds:0x579d7f05
  423160:	add    BYTE PTR [eax-0x6b],0x81
  423164:	adc    eax,0x9dff7f6
  423169:	out    dx,eax
  42316a:	stos   DWORD PTR es:[edi],eax
  42316b:	cmp    al,0xdd
  42316d:	push   ebp
  42316e:	jnp    0x423190
  423170:	iret   
  423171:	int    0x12
  423173:	lahf   
  423174:	lds    eax,FWORD PTR [eax]
  423176:	cs jge 0x423138
  423179:	mov    esp,0x2d196687
  42317e:	enter  0x97ac,0x22
  423182:	dec    ebp
  423183:	dec    edx
  423184:	and    al,0xf5
  423186:	mov    ch,0x80
  423188:	adc    eax,0x3f5788b9
  42318d:	jmp    0x4231fc
  42318f:	sbb    BYTE PTR [esi-0x60],cl
  423192:	push   ebx
  423193:	pop    ss
  423194:	mov    esi,0x4f81028c
  423199:	ja     0x42313d
  42319b:	inc    esp
  42319c:	call   0x6f62:0x3c804f15
  4231a3:	lods   eax,DWORD PTR ds:[esi]
  4231a4:	jl     0x423150
  4231a6:	mov    esp,0x2cff6a3b
  4231ab:	in     al,0x83
  4231ad:	rcl    BYTE PTR [esi],1
  4231af:	popf   
  4231b0:	push   esi
  4231b2:	inc    ebx
  4231b3:	call   0x609233a6
  4231b8:	loope  0x4231da
  4231ba:	pop    ecx
  4231bb:	ficomp WORD PTR [ecx+0x74b5351a]
  4231c1:	retf   
  4231c2:	push   DWORD PTR [edi-0x2934c2b3]
  4231c8:	cmp    edx,DWORD PTR [ecx+0x8]
  4231cb:	dec    edx
  4231cc:	mov    bl,0x16
  4231ce:	push   edi
  4231cf:	and    DWORD PTR [eax+edx*4],edx
  4231d2:	neg    DWORD PTR [ebp-0x1952415b]
  4231d8:	add    eax,0xb9f7feef
  4231dd:	aad    0xe5
  4231df:	outs   dx,BYTE PTR ds:[esi]
  4231e0:	in     al,0x9f
  4231e2:	mov    edx,0x98b4433c
  4231e7:	gs aaa 
  4231e9:	ss xor bh,ch
  4231ec:	je     0x42323d
  4231ee:	sar    BYTE PTR [esi],0xec
  4231f1:	cwde   
  4231f2:	stos   DWORD PTR es:[edi],eax
  4231f3:	pusha  
  4231f4:	dec    eax
  4231f5:	add    DWORD PTR [ecx+0x2a],esi
  4231f8:	aad    0x8a
  4231fa:	mov    ch,0x7f
  4231fc:	cmp    BYTE PTR ds:0xc1ebf333,dl
  423202:	mov    eax,0xff411dd8
  423207:	push   esp
  423208:	sbb    BYTE PTR [ebx-0x286e4a69],ah
  42320e:	lods   al,BYTE PTR ds:[esi]
  42320f:	xchg   ebx,eax
  423210:	arpl   WORD PTR ds:0xbffed1cd,di
  423216:	push   ebp
  423217:	imul   ebx,DWORD PTR [edx+0xc],0x5500b2d1
  42321e:	mov    dl,0x38
  423220:	leave  
  423221:	and    al,0xd2
  423223:	dec    ecx
  423224:	cs and bh,0xa9
  423228:	clc    
  423229:	mov    ch,0x96
  42322b:	outs   dx,DWORD PTR ds:[esi]
  42322c:	dec    esi
  42322d:	mov    ds:0x39b5df5,eax
  423232:	mov    ebp,esp
  423234:	(bad)  
  423235:	ins    DWORD PTR es:[edi],dx
  423236:	jmp    0x2a3a:0x79a3182d
  42323d:	sub    BYTE PTR [edi+0x41],dh
  423240:	cmp    DWORD PTR [ebx],ecx
  423242:	dec    edi
  423243:	(bad)  
  423244:	repnz out dx,eax
  423246:	rol    cl,cl
  423248:	stos   DWORD PTR es:[edi],eax
  423249:	addr16 enter 0xb1fe,0x87
  42324e:	out    dx,al
  42324f:	add    al,0xd5
  423251:	sbb    ch,cl
  423253:	add    DWORD PTR [eax+0x61],0x63
  423257:	jae    0x423273
  423259:	sahf   
  42325a:	loopne 0x4232cd
  42325c:	mov    ch,0xb6
  42325e:	jge    0x423220
  423260:	into   
  423261:	xchg   ebx,eax
  423262:	jne    0x4231ff
  423264:	xchg   ebp,eax
  423265:	js     0x42327d
  423267:	xchg   BYTE PTR [edi+0x359ce372],ch
  42326d:	adc    DWORD PTR [edx-0x2f],ebp
  423270:	adc    DWORD PTR [eax],eax
  423272:	popa   
  423273:	fdiv   QWORD PTR [edi+ebp*4-0x610b70d8]
  42327a:	lods   al,BYTE PTR ds:[esi]
  42327b:	in     al,dx
  42327c:	test   BYTE PTR [eax],bl
  42327e:	std    
  42327f:	sub    ecx,DWORD PTR [esi+edx*1-0x5]
  423283:	jbe    0x4232fe
  423285:	mov    dl,0x31
  423287:	call   0xbc70:0xc953b4c9
  42328e:	pop    ebp
  42328f:	push   es
  423290:	inc    edi
  423291:	inc    esi
  423292:	rol    BYTE PTR [edi],1
  423294:	neg    DWORD PTR [ebx+0x23]
  423297:	inc    esp
  423298:	jmp    0xb3d:0xde393734
  42329f:	xchg   edx,eax
  4232a0:	pop    ebp
  4232a1:	(bad)  
  4232a2:	in     eax,dx
  4232a3:	int    0x7b
  4232a5:	inc    edx
  4232a6:	shr    DWORD PTR [edi],cl
  4232a8:	mov    al,ds:0x241f6822
  4232ad:	mov    ds:0x51d75363,al
  4232b2:	call   0xc418:0xdfaad8d3
  4232b9:	push   ds
  4232ba:	dec    edi
  4232bb:	push   esp
  4232bc:	mov    ebx,0x8ff412fe
  4232c1:	call   0x3a81:0x9698842
  4232c8:	xor    BYTE PTR [eax],al
  4232ca:	add    al,0xb2
  4232cc:	and    eax,0x8350ae5
  4232d1:	ret    
  4232d2:	mov    bh,0x55
  4232d4:	lahf   
  4232d5:	call   0x640e:0x7009f510
  4232dc:	push   es
  4232dd:	inc    eax
  4232de:	xchg   esi,eax
  4232df:	stos   DWORD PTR es:[edi],eax
  4232e0:	xchg   DWORD PTR [ecx+0x37c49ab8],ecx
  4232e6:	ss fdivp st(7),st
  4232e9:	inc    ebx
  4232ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232eb:	les    edx,FWORD PTR [eax+0x3888726]
  4232f1:	(bad)  
  4232f2:	loopne 0x423300
  4232f4:	inc    eax
  4232f5:	mov    bl,0x74
  4232f7:	test   al,0x21
  4232f9:	frstpm(287 only) 
  4232fb:	xchg   ebp,eax
  4232fc:	out    dx,al
  4232fd:	lods   eax,DWORD PTR ds:[esi]
  4232fe:	repz stc 
  423300:	fld    DWORD PTR [eax]
  423302:	xchg   ebx,eax
  423303:	pop    ebx
  423304:	mov    cl,0xd2
  423306:	imul   eax,DWORD PTR [ecx-0x78],0xb5247e11
  42330d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42330e:	aam    0x1a
  423310:	pop    esp
  423311:	ds push eax
  423313:	push   edi
  423314:	les    esp,FWORD PTR [ebp+0x1c]
  423317:	jle    0x42337a
  423319:	mov    al,ds:0xaec65f8a
  42331e:	jns    0x4232c3
  423320:	pop    ebp
  423321:	shr    BYTE PTR [esi+0x2f],0x74
  423325:	outs   dx,BYTE PTR ds:[esi]
  423326:	or     al,0xd7
  423328:	icebp  
  423329:	xchg   ebx,eax
  42332a:	jmp    FWORD PTR [edi+0x660fddfb]
  423330:	mov    dl,0x44
  423332:	push   edx
  423333:	sbb    edx,DWORD PTR [ebx+0x40]
  423336:	(bad)  
  423337:	out    0xc,eax
  423339:	mov    al,0x57
  42333b:	in     eax,0x7
  42333d:	dec    edi
  42333e:	out    0xa9,al
  423340:	cmc    
  423341:	popf   
  423342:	jmp    0x4b1a:0xe56f8a6a
  423349:	xor    eax,0x1e93dec7
  42334e:	push   0x4cebe443
  423353:	xchg   ebp,eax
  423354:	jo     0x423323
  423356:	mov    bl,0xe6
  423358:	pop    ss
  423359:	push   es
  42335a:	cmp    eax,DWORD PTR [ebx+0x5b04ed00]
  423360:	and    al,0x83
  423362:	(bad)  
  423363:	js     0x423341
  423365:	std    
  423366:	loopne 0x42330d
  423368:	mov    DWORD PTR [ebx-0x4a],ebx
  42336b:	outs   dx,DWORD PTR ds:[esi]
  42336c:	shr    DWORD PTR [eax-0x2f],1
  42336f:	sbb    DWORD PTR [eax-0x21cdd2af],0xb19629ba
  423379:	gs jmp 0xd38cf19e
  42337f:	lahf   
  423380:	jmp    0x4ec8db5b
  423385:	pop    ss
  423386:	(bad)  fs:[edi+ebx*4-0x2e]
  42338b:	pusha  
  42338c:	push   esp
  42338d:	pop    edi
  42338e:	sbb    esp,ebx
  423390:	stc    
  423391:	outs   dx,DWORD PTR ds:[esi]
  423392:	jle    0x423341
  423394:	sbb    al,0x5e
  423396:	fisttp QWORD PTR [ecx]
  423398:	sub    al,0x9c
  42339a:	xchg   edx,eax
  42339b:	pop    ss
  42339c:	cmp    BYTE PTR [edi-0x6360cb67],0xea
  4233a3:	add    esp,DWORD PTR [esp+edi*1-0xeb9106b]
  4233aa:	inc    eax
  4233ab:	xchg   ecx,eax
  4233ac:	or     al,0xe3
  4233ae:	ins    BYTE PTR es:[edi],dx
  4233af:	call   0x1548:0x5a283be4
  4233b6:	sub    ebx,ebx
  4233b8:	add    DWORD PTR [edx-0x6174e9c5],eax
  4233be:	xchg   ebp,eax
  4233bf:	and    dh,ah
  4233c1:	add    ch,dl
  4233c3:	and    eax,0x4b72d285
  4233c8:	cmp    edi,DWORD PTR [edi-0x7c]
  4233cb:	sub    bl,BYTE PTR [esi-0x57fa1407]
  4233d1:	popa   
  4233d2:	mov    eax,ebp
  4233d4:	xchg   edx,eax
  4233d5:	pop    edx
  4233d6:	jae    0x423432
  4233d8:	xchg   esi,eax
  4233d9:	out    0x92,al
  4233db:	push   esp
  4233dc:	out    0x86,eax
  4233de:	xor    BYTE PTR [ebx],bl
  4233e0:	mov    ds:0x4b3eecb7,al
  4233e5:	inc    edi
  4233e6:	adc    ecx,ecx
  4233e8:	test   eax,0x7b8158b
  4233ed:	ret    
  4233ee:	fnstcw WORD PTR [ebx-0x54]
  4233f1:	ficom  WORD PTR [ebx]
  4233f3:	shl    DWORD PTR [edx],cl
  4233f5:	call   0x461f4f5d
  4233fa:	retf   0x4228
  4233fd:	mov    dl,0xac
  4233ff:	push   0x83e330ab
  423404:	das    
  423405:	clc    
  423406:	ins    DWORD PTR es:[edi],dx
  423407:	mov    ds:0x6f9e80bb,al
  42340c:	cmp    esi,DWORD PTR ds:0xb1f5dcd1
  423412:	sbb    eax,DWORD PTR [eax]
  423414:	sbb    al,BYTE PTR [edi]
  423416:	sub    BYTE PTR [ebp+0x5a],ch
  423419:	fisttp QWORD PTR [ecx+0x3f]
  42341c:	lods   al,BYTE PTR ds:[esi]
  42341d:	outs   dx,DWORD PTR ds:[esi]
  42341e:	or     eax,0x84d48d08
  423423:	cli    
  423424:	inc    ebx
  423425:	xchg   DWORD PTR [eax+edx*2],edx
  423428:	aam    0x39
  42342a:	les    edi,FWORD PTR [eax]
  42342c:	cs dec ebp
  42342e:	ins    DWORD PTR es:[edi],dx
  42342f:	outs   dx,BYTE PTR ds:[esi]
  423430:	lds    esi,FWORD PTR [eax+0x7d]
  423433:	int3   
  423434:	outs   dx,BYTE PTR ds:[esi]
  423435:	js     0x42340a
  423437:	push   ds
  423438:	mov    edx,0xb6b45239
  42343d:	enter  0xeb50,0x5f
  423441:	mov    ch,0x84
  423443:	push   ds
  423444:	in     al,dx
  423445:	lds    ebp,FWORD PTR [ebx]
  423447:	scas   eax,DWORD PTR es:[edi]
  423448:	inc    ebp
  423449:	fcom   QWORD PTR [esi+0x19]
  42344c:	in     al,0x7e
  42344e:	in     al,dx
  42344f:	pop    ss
  423450:	fwait
  423451:	rcl    DWORD PTR [ebx+0x4c],1
  423454:	loopne 0x423400
  423456:	pusha  
  423457:	fs dec esi
  423459:	mov    ebp,0x48f87a91
  42345e:	icebp  
  42345f:	add    edx,edx
  423461:	call   0x4476:0x818b465a
  423468:	setbe  dh
  42346b:	adc    eax,0x9011b971
  423470:	nop
  423471:	xchg   edx,eax
  423472:	retf   0xbbd0
  423475:	xor    eax,0x26d98253
  42347a:	jge    0x423457
  42347c:	fstp   DWORD PTR [ebx-0x3e7976f7]
  423482:	stos   BYTE PTR es:[edi],al
  423483:	das    
  423484:	pop    ss
  423485:	dec    edi
  423486:	repnz std 
  423488:	not    DWORD PTR [esi+0x5d]
  42348b:	retf   0x36d8
  42348e:	jmp    0xcc9c:0xe3bb4ed
  423495:	out    dx,al
  423496:	push   ebp
  423497:	bound  ebp,QWORD PTR [edi]
  423499:	int3   
  42349a:	xor    DWORD PTR [esp+ecx*1+0x7eb16c36],edi
  4234a1:	cmp    DWORD PTR [edx],0x929ba384
  4234a7:	or     BYTE PTR [edx-0x116884e9],bl
  4234ad:	xlat   BYTE PTR ds:[ebx]
  4234ae:	out    dx,eax
  4234af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234b0:	mov    eax,ds:0x5301599e
  4234b5:	jb     0x423514
  4234b7:	cmp    eax,0x31b428fa
  4234bc:	cli    
  4234bd:	mov    ch,0xd7
  4234bf:	cmp    esp,DWORD PTR [ecx-0x32]
  4234c2:	mov    ds:0x3ea72751,eax
  4234c7:	pop    ss
  4234c8:	mov    esp,0xbd39d55e
  4234cd:	arpl   WORD PTR [edi-0x49],dx
  4234d0:	and    eax,0xb151f99c
  4234d5:	inc    eax
  4234d6:	or     bl,BYTE PTR [edi]
  4234d8:	lahf   
  4234d9:	aad    0x3c
  4234db:	add    esi,esi
  4234dd:	and    BYTE PTR [ecx],ch
  4234df:	xor    BYTE PTR [ebx-0x73e13ad4],dl
  4234e5:	sti    
  4234e6:	js     0x4234d7
  4234e8:	and    DWORD PTR ds:0xd6c453,ecx
  4234ee:	add    BYTE PTR [eax],al
  4234f0:	add    BYTE PTR [eax],al
  4234f2:	dec    ecx
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	sub    BYTE PTR [eax],bl
  423500:	pop    gs
  423502:	cmp    eax,0xf30001ae
  423507:	add    al,0x0
  423509:	add    BYTE PTR [edi-0x60a2fdd6],ah
  42350f:	mov    ecx,0x15ee4620
  423514:	or     DWORD PTR [ebx],0x1042f13d
  42351a:	xor    esp,DWORD PTR [edx]
  42351c:	arpl   WORD PTR [edi-0xb],ax
  42351f:	stos   BYTE PTR es:[edi],al
  423520:	fadd   QWORD PTR [edx+0x52]
  423523:	jmp    0x28f2:0xede72e34
  42352a:	xor    al,0xb1
  42352c:	xor    eax,0x562c4713
  423531:	arpl   WORD PTR [eax-0x32],sp
  423534:	int3   
  423535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423536:	pop    ebp
  423537:	out    0xca,eax
  423539:	adc    al,0x67
  42353b:	sub    dl,BYTE PTR [edi+ecx*8-0x34]
  42353f:	dec    ebp
  423540:	and    al,0x8b
  423542:	(bad)  
  423543:	cdq    
  423544:	xchg   esp,eax
  423545:	dec    esi
  423546:	inc    esp
  423547:	inc    edx
  423548:	aad    0xa4
  42354a:	sub    BYTE PTR [ecx+0x569841b8],al
  423550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423551:	pop    ecx
  423552:	inc    ecx
  423553:	cli    
  423554:	jl     0x423530
  423556:	pop    edx
  423557:	ss jecxz 0x4234ee
  42355a:	mov    eax,ds:0x448a00d3
  42355f:	cmp    DWORD PTR [ebp+0x22668ac3],ebx
  423565:	popf   
  423566:	cmp    ebp,ebx
  423568:	cmp    ebp,ecx
  42356a:	clc    
  42356b:	pop    ss
  42356c:	std    
  42356d:	leave  
  42356e:	xchg   DWORD PTR [edi],ebp
  423570:	pop    ecx
  423571:	(bad)  
  423572:	(bad)  
  423573:	clc    
  423574:	or     eax,0x39753432
  423579:	ret    
  42357a:	(bad)  
  42357b:	push   esi
  42357c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42357d:	mov    ch,0x4d
  42357f:	imul   ebp,DWORD PTR [edx+0x7d800716],0x67
  423586:	(bad)  
  423587:	ficomp WORD PTR [esi+0x3]
  42358a:	jnp    0x4235f3
  42358c:	jbe    0x4235c0
  42358e:	mov    dh,0x3
  423590:	mov    bh,BYTE PTR [edi-0x7d2daaf7]
  423596:	neg    DWORD PTR [edi-0x4]
  423599:	push   0x57
  42359b:	xor    bh,BYTE PTR [edx-0x78]
  42359e:	xchg   ecx,eax
  42359f:	stos   BYTE PTR es:[edi],al
  4235a0:	ja     0x4235d0
  4235a2:	sbb    edx,DWORD PTR [ecx-0x4c]
  4235a5:	mov    al,ds:0xe6d11fb2
  4235aa:	mov    ebp,0xf20bfed4
  4235af:	fild   DWORD PTR [edx-0x1c]
  4235b2:	cmp    eax,0x10757196
  4235b7:	fsubr  DWORD PTR [ecx]
  4235b9:	mov    esp,0xdd0ebd4c
  4235be:	push   esp
  4235bf:	arpl   WORD PTR [edx],sp
  4235c1:	xchg   ebp,eax
  4235c2:	inc    ecx
  4235c3:	test   dh,ah
  4235c5:	mov    DWORD PTR ds:0x1b3b6409,0x2c7d040f
  4235cf:	mul    BYTE PTR [ecx-0x6f]
  4235d2:	loopne 0x4235b9
  4235d4:	adc    DWORD PTR [edx-0x18],edx
  4235d7:	and    al,0x84
  4235d9:	xchg   edi,eax
  4235da:	inc    ebx
  4235db:	xor    DWORD PTR [edx+0x33feced0],edx
  4235e1:	int3   
  4235e2:	mov    dh,BYTE PTR [eax-0x63]
  4235e5:	adc    DWORD PTR [eax-0x5136cd0],edi
  4235eb:	fisubr DWORD PTR [ebx+0x5be4e78d]
  4235f1:	or     DWORD PTR [esi],0x743e35
  4235f7:	cmp    ch,BYTE PTR [ebx+0x4b19b824]
  4235fd:	sbb    edi,DWORD PTR [esi]
  4235ff:	test   eax,0xacedd601
  423604:	and    eax,0x97cdbd86
  423609:	scas   eax,DWORD PTR es:[edi]
  42360a:	inc    edi
  42360b:	(bad)  
  42360c:	xor    edi,DWORD PTR [ebx]
  42360e:	jno    0x423608
  423610:	xchg   ecx,eax
  423611:	rcl    dh,cl
  423613:	sbb    ebx,DWORD PTR [ecx]
  423615:	stos   DWORD PTR es:[edi],eax
  423616:	iretw  
  423618:	add    al,0xc0
  42361a:	out    0xa8,eax
  42361c:	les    esp,FWORD PTR [ebx+0x27861655]
  423622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423623:	jecxz  0x423638
  423625:	mov    ebx,0x69500a8d
  42362a:	cmp    ch,BYTE PTR [esi]
  42362c:	rcl    BYTE PTR [ebx-0x2591c68d],cl
  423632:	xor    eax,0x431c89dd
  423637:	push   0x7d
  423639:	jae    0x423675
  42363b:	adc    eax,0xcf624e9
  423640:	xchg   ebx,eax
  423641:	xor    al,0x5d
  423643:	pop    edx
  423644:	add    BYTE PTR [edi-0x62216f1c],bl
  42364a:	leave  
  42364b:	sti    
  42364c:	mov    ecx,0x1edf257e
  423651:	cmp    al,0xab
  423653:	test   eax,0x131bbf6f
  423658:	mov    eax,0x629f3a3d
  42365d:	xlat   BYTE PTR ds:[ebx]
  42365e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42365f:	loopne 0x423697
  423661:	xchg   ecx,eax
  423662:	pop    es
  423663:	xchg   edi,eax
  423664:	mov    ebp,0x1a208408
  423669:	out    dx,eax
  42366a:	ins    BYTE PTR es:[edi],dx
  42366b:	popf   
  42366c:	scas   al,BYTE PTR es:[edi]
  42366d:	pop    ebp
  42366e:	test   eax,0xf6cb1e9d
  423673:	or     dh,BYTE PTR [ebp+edi*4+0x4b]
  423677:	sub    ecx,edx
  423679:	repnz loopne 0x4236a7
  42367c:	lods   al,BYTE PTR ds:[esi]
  42367d:	inc    esi
  42367e:	or     ebx,DWORD PTR ds:0x2d45d3ab
  423684:	mov    bh,0xd6
  423686:	mov    eax,0xa17976b4
  42368b:	cld    
  42368c:	mov    esp,0x28d8c6f1
  423691:	xor    al,0xef
  423693:	or     al,0xae
  423695:	jecxz  0x4236b0
  423697:	cmp    eax,0xdbe5fe2
  42369c:	sbb    eax,0x823f3038
  4236a1:	dec    ebp
  4236a2:	fsubr  DWORD PTR [esi]
  4236a4:	into   
  4236a5:	cmp    dl,dl
  4236a7:	push   ebx
  4236a8:	in     eax,dx
  4236a9:	(bad)  
  4236aa:	punpcklwd mm7,DWORD PTR [eax+ecx*8]
  4236ae:	fcom   QWORD PTR [eax-0x7]
  4236b1:	jmp    0xd17ccac6
  4236b6:	sbb    eax,0x198dd8b3
  4236bb:	xchg   edx,eax
  4236bc:	stos   BYTE PTR es:[edi],al
  4236bd:	jle    0x423717
  4236bf:	fcomp  QWORD PTR [eax-0x27]
  4236c2:	jl     0x423652
  4236c4:	ins    DWORD PTR es:[edi],dx
  4236c5:	sub    dh,BYTE PTR [esi+ecx*2]
  4236c8:	scas   al,BYTE PTR es:[edi]
  4236c9:	pop    esp
  4236ca:	push   edx
  4236cb:	loop   0x4236f1
  4236cd:	mov    bl,0xc4
  4236cf:	jecxz  0x4236a7
  4236d1:	mov    al,ds:0x633727a1
  4236d6:	fcmovu st,st(3)
  4236d8:	sbb    al,0xc0
  4236da:	pop    ss
  4236db:	les    ebp,FWORD PTR [ebp-0x6a]
  4236de:	add    al,0x37
  4236e0:	mov    WORD PTR [eax+0x4d],gs
  4236e3:	xchg   edi,eax
  4236e4:	mov    WORD PTR [edi-0x18a2b301],es
  4236ea:	sbb    edi,DWORD PTR [eax]
  4236ec:	lds    esi,FWORD PTR [edx]
  4236ee:	aaa    
  4236ef:	icebp  
  4236f0:	ret    0xe16b
  4236f3:	je     0x42371e
  4236f5:	rep ins DWORD PTR es:[edi],dx
  4236f7:	adc    edx,esi
  4236f9:	int3   
  4236fa:	sub    BYTE PTR ds:0x6b0ed368,dh
  423700:	add    bh,BYTE PTR [ecx+0x46]
  423703:	not    dh
  423705:	push   ds
  423706:	pop    ss
  423707:	mov    BYTE PTR [edi],al
  423709:	das    
  42370a:	retf   0x9439
  42370d:	xor    DWORD PTR [ecx+ecx*2+0x5c3791b4],esp
  423714:	sbb    eax,0xc154981b
  423719:	mov    eax,ds:0x49f6bbfb
  42371e:	mov    eax,ds:0x2be99701
  423723:	xor    eax,0x7098f951
  423728:	mov    ecx,DWORD PTR ss:[ebx+0x11]
  42372c:	xlat   BYTE PTR ds:[ebx]
  42372d:	xor    DWORD PTR [ecx+esi*2+0x67662711],ecx
  423734:	pop    eax
  423735:	fwait
  423736:	push   edx
  423737:	out    dx,al
  423738:	pop    ecx
  423739:	pop    esi
  42373a:	popf   
  42373b:	aas    
  42373c:	fucomi st,st(0)
  42373e:	and    BYTE PTR [edi],dl
  423740:	loope  0x423790
  423742:	xchg   DWORD PTR [edx+0x21696165],ebp
  423748:	jno    0x4237ac
  42374a:	aam    0x47
  42374c:	dec    ebp
  42374d:	outs   dx,DWORD PTR ds:[esi]
  42374e:	and    edx,DWORD PTR [ecx-0x3561acf]
  423754:	test   DWORD PTR [eax],0x167571a9
  42375a:	out    dx,al
  42375b:	iret   
  42375c:	and    dl,0xd7
  42375f:	adc    al,0xbf
  423761:	cwde   
  423762:	push   ds
  423763:	push   cs
  423764:	jae    0x423785
  423766:	inc    edx
  423767:	xor    al,0x6
  423769:	jb     0x42377e
  42376b:	rol    ecx,1
  42376d:	mov    ebp,0xd1fe2604
  423772:	cmp    eax,DWORD PTR ds:0xfabf0c5c
  423778:	int    0x47
  42377a:	aam    0x80
  42377c:	cli    
  42377d:	cmc    
  42377e:	pop    esp
  42377f:	xor    al,0x4a
  423781:	imul   BYTE PTR [eax]
  423783:	push   0xfac839b0
  423788:	inc    esp
  423789:	fmul   QWORD PTR [eax-0x169d3aff]
  42378f:	push   ebx
  423790:	shl    BYTE PTR [edx+0x32],0xfb
  423794:	xor    ebp,DWORD PTR [esi]
  423796:	pop    DWORD PTR [edx+ebp*4]
  423799:	pop    ss
  42379a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42379b:	adc    BYTE PTR [eax+0x493a7956],ah
  4237a1:	dec    ebx
  4237a2:	mov    WORD PTR ds:[eax-0x7d],?
  4237a6:	mov    esp,0x64819994
  4237ab:	loope  0x4237da
  4237ad:	jecxz  0x423823
  4237af:	cmp    BYTE PTR fs:[edx],0xc8
  4237b3:	rol    DWORD PTR [eax],1
  4237b5:	out    dx,al
  4237b6:	nop
  4237b7:	dec    edi
  4237b8:	(bad)  
  4237b9:	arpl   WORD PTR [edx-0xa4f57c3],di
  4237bf:	aas    
  4237c0:	mov    cl,0x34
  4237c2:	push   es
  4237c3:	xor    DWORD PTR [ecx+0x695e9a62],0x64
  4237ca:	mov    ds:0x86077159,al
  4237cf:	loop   0x423830
  4237d1:	cmp    edi,ecx
  4237d3:	ficomp DWORD PTR [esi+eiz*8+0x69c9dc1b]
  4237da:	and    DWORD PTR [ebx+0x6d],esi
  4237dd:	std    
  4237de:	mov    ch,0xbd
  4237e0:	ja     0x4237e8
  4237e2:	mov    WORD PTR [ebp-0x721a8d6f],?
  4237e8:	loopne 0x423848
  4237ea:	aas    
  4237eb:	xor    dh,BYTE PTR [edi+0x7c7fc2ff]
  4237f1:	fsub   QWORD PTR [ebx]
  4237f3:	imul   esp,DWORD PTR [edx+0x16],0x3e900b8
  4237fa:	push   ds
  4237fb:	in     eax,dx
  4237fc:	mov    ds:0x6a88cb7,eax
  423801:	fldenv [eax]
  423803:	jmp    0x5cb7:0xdaca32c6
  42380a:	jb     0x4237b2
  42380c:	mov    dl,0x52
  42380e:	outs   dx,DWORD PTR ds:[esi]
  42380f:	pop    edx
  423810:	pop    es
  423811:	leave  
  423812:	cld    
  423813:	inc    edi
  423814:	test   DWORD PTR [esi-0x4],0x2e0d98b6
  42381b:	pusha  
  42381c:	or     ch,ah
  42381e:	mov    WORD PTR [ecx],cs
  423820:	cmp    cl,BYTE PTR [ecx+0x1e]
  423823:	mov    edx,0x5ef2803d
  423828:	je     0x4237e9
  42382a:	(bad)
  42382e:	icebp  
  42382f:	cdq    
  423830:	in     al,0x11
  423832:	retf   
  423833:	mov    ch,0xfb
  423835:	sub    BYTE PTR [edx],0x71
  423838:	and    bh,BYTE PTR [edx*8+0x30ed7c56]
  42383f:	dec    edx
  423840:	cdq    
  423841:	ins    BYTE PTR es:[edi],dx
  423842:	xor    al,0xfd
  423844:	inc    ebx
  423845:	fs call 0x843769b1
  42384b:	jo     0x423885
  42384d:	and    BYTE PTR [edi],cl
  42384f:	bswap  edi
  423851:	mov    dl,0x7f
  423853:	lock daa 
  423855:	popf   
  423856:	mov    ebp,gs
  423858:	test   DWORD PTR [eax+0x7d6091d0],eax
  42385e:	jg     0x4237ec
  423860:	jl     0x423814
  423862:	inc    edi
  423863:	sub    cl,BYTE PTR [eax]
  423865:	dec    esi
  423866:	stos   DWORD PTR es:[edi],eax
  423867:	mov    ds:0x9c807b59,eax
  42386c:	imul   edi,DWORD PTR [esi+0x408bb391],0xa44ec4aa
  423876:	jb     0x423850
  423878:	addr16 in eax,dx
  42387a:	js     0x4238fb
  42387c:	mov    edx,DWORD PTR [di]
  42387f:	nop
  423880:	pop    edi
  423881:	adc    al,dl
  423883:	jmp    0x62df:0x709a32a6
  42388a:	jnp    0x42381e
  42388c:	mov    edx,0x8aaba842
  423891:	jnp    0x4238a0
  423893:	fistp  QWORD PTR [edi]
  423895:	(bad)  
  423897:	test   edx,edi
  423899:	jmp    0xc9cc:0x6c138fa2
  4238a0:	rcl    DWORD PTR [ecx],0x3c
  4238a3:	leave  
  4238a4:	adc    ecx,DWORD PTR [esp+edx*1]
  4238a7:	es jecxz 0x423918
  4238aa:	lds    ebp,FWORD PTR [ebx]
  4238ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238ad:	leave  
  4238ae:	in     eax,dx
  4238af:	das    
  4238b0:	sbb    ah,bh
  4238b2:	cmp    edx,DWORD PTR [edx]
  4238b4:	mov    ds:0xf20c5f76,al
  4238b9:	call   0x30019668
  4238be:	mov    eax,0x14287618
  4238c3:	popa   
  4238c4:	mov    edx,0x75595ff
  4238ca:	scas   al,BYTE PTR es:[edi]
  4238cb:	jecxz  0x4238b0
  4238cd:	lods   eax,DWORD PTR ds:[esi]
  4238ce:	test   BYTE PTR [esi],ah
  4238d0:	xchg   ebp,eax
  4238d1:	adc    DWORD PTR [ecx],edx
  4238d3:	frndint 
  4238d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238d6:	cld    
  4238d7:	inc    esi
  4238d8:	push   ss
  4238d9:	iret   
  4238da:	sbb    al,0x3c
  4238dc:	mov    ah,0xf6
  4238de:	(bad)  [edx+0x5da8f273]
  4238e4:	scas   eax,DWORD PTR es:[edi]
  4238e5:	mov    ch,0xbe
  4238e7:	inc    ecx
  4238e8:	test   eax,0x6dbf9b3
  4238ed:	loopne 0x423960
  4238ef:	xor    dh,BYTE PTR [ecx*1+0x190dd281]
  4238f6:	mov    esi,0xd12479d0
  4238fb:	push   ecx
  4238fc:	repnz add ebx,eax
  4238ff:	shl    ch,1
  423901:	loopne 0x42397f
  423903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423904:	ror    bl,0x34
  423907:	and    BYTE PTR [edx],0xa5
  42390a:	and    bl,BYTE PTR [edx-0x327c3bd1]
  423910:	sar    ch,1
  423912:	sub    cl,BYTE PTR [ebp-0x13]
  423915:	xchg   edx,eax
  423916:	rcl    BYTE PTR [esi+0x6f],cl
  423919:	push   esp
  42391a:	xor    dh,dh
  42391c:	fnstcw WORD PTR [edi-0x5a]
  42391f:	mov    dl,0xde
  423921:	sbb    eax,0xdbf1731e
  423926:	add    eax,0x19d98739
  42392b:	inc    esi
  42392c:	xor    bh,BYTE PTR [esi]
  42392e:	sub    cl,BYTE PTR [eax+0x6a3f8e83]
  423934:	inc    esi
  423935:	lea    edi,[edi+0x4b]
  423938:	nop
  423939:	dec    edx
  42393a:	add    al,0x10
  42393c:	dec    ecx
  42393d:	lods   eax,DWORD PTR ds:[esi]
  42393e:	inc    ecx
  42393f:	in     eax,0xf0
  423941:	js     0x4238fc
  423943:	sar    BYTE PTR [ecx-0x27],cl
  423946:	xchg   ecx,eax
  423947:	mov    dl,0xbf
  423949:	mov    WORD PTR [edi+0x491b673],?
  42394f:	mov    eax,0x5b36a21d
  423954:	(bad)  
  423955:	cmp    al,0xf2
  423957:	sub    eax,ebp
  423959:	mov    esp,0xf07803f5
  42395e:	xchg   ebx,eax
  42395f:	pusha  
  423960:	cmc    
  423961:	mov    eax,ds:0x62ad3d6b
  423966:	xchg   edx,eax
  423967:	mov    ds:0xd1ad4689,al
  42396c:	outs   dx,DWORD PTR ds:[esi]
  42396d:	or     ah,ch
  42396f:	ror    DWORD PTR [eax-0x4a],0xa4
  423973:	cmp    DWORD PTR [esi-0x4b],ecx
  423976:	div    DWORD PTR [ecx]
  423978:	fwait
  423979:	imul   ebp,eax,0x5d
  42397c:	or     edi,DWORD PTR [edx-0x401baf05]
  423982:	in     eax,0x51
  423984:	(bad)  
  423985:	loop   0x423945
  423987:	cwde   
  423988:	mov    al,0x17
  42398a:	xor    ecx,ebx
  42398c:	sub    al,0x94
  42398e:	and    DWORD PTR [edi],0xa81b3c60
  423994:	sub    eax,0x2e605112
  423999:	add    edx,esi
  42399b:	push   ss
  42399c:	mov    ecx,0x608188cf
  4239a1:	sbb    dh,ch
  4239a3:	mov    edx,0xb8e92b24
  4239a8:	(bad)  
  4239a9:	jg     0x423949
  4239ab:	jmp    FWORD PTR [eax+0x7c]
  4239ae:	gs int 0x6a
  4239b1:	pop    edx
  4239b2:	sbb    edi,DWORD PTR [ecx-0xad53cfe]
  4239b8:	sbb    dl,BYTE PTR [edi]
  4239ba:	rcr    DWORD PTR [ebx],cl
  4239bc:	(bad)
  4239c0:	bound  ebp,QWORD PTR [ecx+esi*1]
  4239c3:	or     DWORD PTR [ebx-0x56],0x47
  4239c7:	adc    al,0x1d
  4239c9:	sahf   
  4239ca:	pop    esi
  4239cb:	sbb    BYTE PTR [ebx],bh
  4239cd:	imul   ch
  4239cf:	push   0xffffff94
  4239d1:	sbb    eax,0xc9219f98
  4239d6:	xor    BYTE PTR [ecx-0x3c137ab2],dh
  4239dc:	cld    
  4239dd:	mov    bl,0x0
  4239df:	cmp    edx,0x2af3e8de
  4239e5:	(bad)  
  4239e6:	les    edx,FWORD PTR [esi+0x20]
  4239e9:	add    al,0x54
  4239eb:	xor    eax,0x3b2b4933
  4239f0:	jmp    0xf1ee6474
  4239f5:	and    DWORD PTR [ebx+ebp*2-0x40],edx
  4239f9:	xchg   BYTE PTR [edi],dh
  4239fb:	aaa    
  4239fc:	pop    DWORD PTR [eax]
  4239fe:	add    BYTE PTR [eax],al
  423a00:	add    BYTE PTR [eax],al
  423a02:	inc    esi
  423a03:	xchg   edi,eax
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp-0x7a059e50]
  423a12:	xor    BYTE PTR [ebx+0x4f30001],dh
  423a18:	add    BYTE PTR [eax],al
  423a1a:	es push 0x77
  423a1d:	ja     0x4239e2
  423a1f:	jg     0x4239d9
  423a21:	adc    esp,0xf8415c53
  423a27:	sbb    cl,BYTE PTR [ecx]
  423a29:	and    eax,0xe0d918ad
  423a2e:	stos   DWORD PTR es:[edi],eax
  423a2f:	(bad)  
  423a30:	fisub  DWORD PTR [ecx+0x41]
  423a33:	mov    bl,0x25
  423a35:	adc    DWORD PTR [ecx-0x7d],ebp
  423a38:	retf   0x344a
  423a3b:	jne    0x4239e7
  423a3d:	xor    ch,bh
  423a3f:	xchg   BYTE PTR [eax+0x7085ba7e],bh
  423a45:	jnp    0x423a94
  423a47:	popa   
  423a48:	xchg   ecx,eax
  423a49:	in     al,0x3
  423a4b:	or     eax,0xb18c7317
  423a50:	jle    0x423a6f
  423a52:	push   ebx
  423a53:	in     eax,0xf
  423a55:	in     eax,dx
  423a56:	push   eax
  423a57:	pop    edi
  423a58:	maskmovq mm5,(bad)
  423a59:	imul   DWORD PTR [ebx]
  423a5b:	pusha  
  423a5c:	jg     0x423ad2
  423a5e:	rcl    BYTE PTR [edx-0x3b],1
  423a61:	mov    ?,WORD PTR [eax+0x62]
  423a64:	pop    esi
  423a65:	push   0xffffffbf
  423a67:	jp     0x423a9f
  423a69:	mov    ebp,0x3b64e671
  423a6e:	dec    ecx
  423a6f:	xlat   BYTE PTR ds:[ebx]
  423a70:	aaa    
  423a71:	dec    esi
  423a72:	cmp    edi,edx
  423a74:	push   ecx
  423a75:	mov    bl,0xb9
  423a77:	jmp    0x423a8e
  423a79:	mov    ebp,0xc073d2ec
  423a7e:	dec    esp
  423a7f:	(bad)
  423a83:	xor    bl,BYTE PTR [esi+0x576474a5]
  423a89:	mov    eax,ds:0x107696c3
  423a8e:	loopne 0x423a8a
  423a90:	(bad)  
  423a91:	ds cmp eax,esi
  423a94:	jmp    0x423a9b
  423a96:	jbe    0x423af2
  423a98:	lods   eax,DWORD PTR ds:[esi]
  423a99:	cmp    dh,dh
  423a9b:	dec    edi
  423a9c:	xchg   edi,eax
  423a9d:	test   DWORD PTR [edi+0x51],ebp
  423aa0:	mov    eax,0x7d427a53
  423aa5:	mov    edi,0x7012068a
  423aaa:	aas    
  423aab:	dec    ebx
  423aac:	push   esi
  423aad:	add    ebp,DWORD PTR [esi]
  423aaf:	adc    ah,al
  423ab1:	lock xchg bl,ch
  423ab4:	mov    ebx,0xcb1592dc
  423ab9:	std    
  423aba:	dec    BYTE PTR [ebp+0x6fe7ab48]
  423ac0:	push   cs
  423ac1:	mov    WORD PTR [ecx],ds
  423ac3:	inc    ecx
  423ac4:	ret    
  423ac5:	loope  0x423a7b
  423ac7:	sub    al,0x27
  423ac9:	mov    ds:0xf5dcc0b9,eax
  423ace:	push   ecx
  423acf:	xchg   edi,eax
  423ad0:	(bad)  
  423ad1:	in     eax,0xdc
  423ad3:	ror    BYTE PTR [ecx+esi*1-0x54],0x9b
  423ad8:	inc    esp
  423ad9:	inc    esi
  423ada:	mov    eax,0x52524bae
  423adf:	jbe    0x423ae6
  423ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ae2:	xchg   edi,ebx
  423ae4:	idiv   BYTE PTR [eax]
  423ae6:	mov    al,0x90
  423ae8:	mov    ebp,0x4fff5840
  423aed:	sub    ebp,eax
  423aef:	or     DWORD PTR [ecx+0x37],edi
  423af2:	nop
  423af3:	fcmovb st,st(7)
  423af5:	fs enter 0xbc8f,0x63
  423afa:	mov    ch,cl
  423afc:	stc    
  423afd:	cld    
  423afe:	mov    bl,0xd2
  423b00:	imul   ebp,eax,0xffffffca
  423b03:	jge    0x423a89
  423b05:	cli    
  423b06:	adc    ch,bh
  423b08:	push   0x7
  423b0a:	inc    esi
  423b0b:	in     eax,dx
  423b0c:	push   eax
  423b0d:	xchg   DWORD PTR [eax+ecx*4-0x6e],esp
  423b11:	pop    ebp
  423b12:	xchg   esp,eax
  423b13:	out    0x21,al
  423b15:	repnz mov ch,0x9b
  423b18:	jg     0x423b0c
  423b1a:	scas   eax,DWORD PTR es:[edi]
  423b1b:	add    DWORD PTR [edx+0x6f66e80d],edx
  423b21:	fwait
  423b22:	mov    edx,0xebdac7f0
  423b27:	xchg   DWORD PTR [ecx],edi
  423b29:	mov    ecx,DWORD PTR [ecx+0x18]
  423b2c:	cmc    
  423b2d:	(bad)  
  423b2e:	in     al,dx
  423b2f:	les    esi,FWORD PTR [ebx-0x19ffd3ee]
  423b35:	push   0x8343cfb3
  423b3a:	jl     0x423b34
  423b3c:	neg    al
  423b3e:	test   bh,bh
  423b40:	or     BYTE PTR [eax+0x5c00986],ah
  423b46:	push   cs
  423b47:	add    al,0x54
  423b49:	dec    edx
  423b4a:	mov    edx,esi
  423b4c:	mov    dh,0x92
  423b4e:	pop    ss
  423b4f:	dec    ecx
  423b50:	mov    al,0xb9
  423b52:	lea    esp,[edi]
  423b54:	into   
  423b55:	mov    eax,0xb96d056a
  423b5a:	jg     0x423b17
  423b5c:	mov    ds:0xc9451158,al
  423b61:	sbb    DWORD PTR [eax],0xffffffd3
  423b64:	xchg   esp,eax
  423b65:	mov    dl,dl
  423b67:	(bad)  
  423b68:	mov    esp,0xa832b281
  423b6d:	lods   eax,DWORD PTR ds:[esi]
  423b6e:	mov    ebp,0x6271b37
  423b73:	jmp    0x5a9d6c8f
  423b78:	das    
  423b79:	in     eax,0x4a
  423b7b:	or     al,0x88
  423b7d:	aaa    
  423b7e:	cmc    
  423b7f:	(bad)  [esi-0x614eacdc]
  423b85:	jecxz  0x423b48
  423b87:	das    
  423b88:	arpl   WORD PTR [eax+0x60ff255e],di
  423b8e:	repz sbb ah,BYTE PTR [eax]
  423b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b92:	mov    esp,cs
  423b94:	jo     0x423b7f
  423b96:	add    eax,0xbf657277
  423b9b:	dec    esi
  423b9c:	or     ecx,DWORD PTR [eax+0x21e36c44]
  423ba2:	mov    ebx,0xbf77dae1
  423ba7:	int3   
  423ba8:	add    eax,0x41b9ea90
  423bad:	adc    DWORD PTR fs:[edx],0x26
  423bb1:	push   eax
  423bb2:	dec    esp
  423bb3:	push   esp
  423bb4:	cmc    
  423bb5:	not    DWORD PTR [ebx]
  423bb7:	mov    ds:0x885ee168,al
  423bbc:	mov    ebp,0x31b43f76
  423bc1:	mov    dl,0x69
  423bc3:	into   
  423bc4:	inc    ebx
  423bc5:	xor    DWORD PTR [eax-0x56],esi
  423bc8:	gs jo  0x423b9a
  423bcb:	scas   al,BYTE PTR es:[edi]
  423bcc:	stos   DWORD PTR es:[edi],eax
  423bcd:	cdq    
  423bce:	aad    0xc0
  423bd0:	in     eax,dx
  423bd1:	mov    ecx,0x66e8fab0
  423bd6:	je     0x423bd7
  423bd8:	jb     0x423bb1
  423bda:	fld    TBYTE PTR [edi-0x2a24b3fa]
  423be0:	jmp    0x6e22:0xdaac066f
  423be7:	dec    ebx
  423be8:	(bad)  
  423be9:	inc    ebp
  423bea:	sti    
  423beb:	jae    0x423ba0
  423bed:	pop    edi
  423bee:	lahf   
  423bef:	sar    ebx,cl
  423bf1:	xor    al,0xd5
  423bf3:	xor    eax,0x4c3d7c9f
  423bf8:	adc    bh,cl
  423bfa:	outs   dx,DWORD PTR ds:[esi]
  423bfb:	(bad)  
  423bfc:	fwait
  423bfd:	push   ebp
  423bfe:	cmp    dl,dh
  423c00:	mov    dh,0x31
  423c02:	mov    ah,0xf8
  423c04:	sbb    dl,ch
  423c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c07:	sbb    al,0x7c
  423c09:	loop   0x423c67
  423c0b:	or     edi,edx
  423c0d:	cs mov ch,0xf2
  423c10:	xor    DWORD PTR es:[edi],edx
  423c13:	mov    bh,0x93
  423c15:	push   ecx
  423c16:	jmp    0xa3fcc2f2
  423c1b:	pop    edx
  423c1c:	inc    eax
  423c1d:	push   0xe688589
  423c22:	or     ah,BYTE PTR [esi+0xb]
  423c25:	(bad)  
  423c27:	pop    esp
  423c28:	xchg   edx,eax
  423c29:	popa   
  423c2a:	cmp    ah,BYTE PTR [ebx+0x48]
  423c2d:	jl     0x423bbc
  423c2f:	xor    al,0x41
  423c31:	jae    0x423bb9
  423c33:	mov    DWORD PTR [ebx+eax*2-0x6f],ebx
  423c37:	sbb    eax,0x78c016a5
  423c3c:	push   cs
  423c3d:	xor    eax,0xd2aff208
  423c42:	adc    eax,0x64144fa0
  423c47:	cmp    eax,0x9d1d749e
  423c4c:	sub    BYTE PTR [esi],ah
  423c4e:	or     BYTE PTR [esi-0x21a6fa99],0xf6
  423c55:	popa   
  423c56:	push   ecx
  423c57:	cmp    ecx,ecx
  423c59:	sub    eax,0xc5798a4b
  423c5e:	and    bh,BYTE PTR [esi-0x37e578a8]
  423c64:	cwde   
  423c65:	lea    esi,[edx+0x40]
  423c68:	add    bh,cl
  423c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c6b:	bound  eax,QWORD PTR [ebx+0x2]
  423c6e:	cmp    eax,0xf13d43a8
  423c73:	cmp    edi,eax
  423c75:	cmp    DWORD PTR [ecx],esp
  423c77:	add    DWORD PTR [ebp-0xe],edx
  423c7a:	cmc    
  423c7b:	lds    ebp,FWORD PTR fs:[edi-0x78]
  423c7f:	push   ebx
  423c80:	out    dx,al
  423c81:	hlt    
  423c82:	in     eax,0xe2
  423c84:	push   esi
  423c85:	sbb    al,0x81
  423c87:	sub    eax,0xebc5722a
  423c8c:	fidivr WORD PTR [ecx+0x4eef0c03]
  423c92:	jne    0x423d01
  423c94:	mov    ebp,0x966410c
  423c99:	push   esi
  423c9a:	push   ss
  423c9b:	pop    ebx
  423c9c:	test   DWORD PTR [eax-0x39a8514a],ebp
  423ca2:	lods   al,BYTE PTR ds:[esi]
  423ca3:	loope  0x423cef
  423ca5:	jmp    0x1f07eea6
  423caa:	jns    0x423c64
  423cac:	fsub   DWORD PTR [edx+0x4a]
  423caf:	mov    ebp,0xdf192414
  423cb4:	adc    eax,0xb77b17e
  423cb9:	pusha  
  423cba:	add    BYTE PTR [edi-0x37],al
  423cbd:	ja     0x423c58
  423cbf:	dec    edi
  423cc0:	inc    ecx
  423cc1:	mov    edi,0xdf4fba00
  423cc6:	pop    edx
  423cc7:	test   al,0x32
  423cc9:	call   0x39b6fd4
  423cce:	out    dx,eax
  423ccf:	adc    BYTE PTR [edx-0x4631395c],cl
  423cd5:	sub    ecx,edx
  423cd7:	in     al,dx
  423cd8:	and    DWORD PTR [ebx+0x70],ebp
  423cdb:	imul   eax,DWORD PTR [edx-0x7f],0x871dc2ae
  423ce2:	or     edi,esp
  423ce4:	xchg   ecx,eax
  423ce5:	pop    ds
  423ce6:	retf   0x892
  423ce9:	cld    
  423cea:	in     al,dx
  423ceb:	call   0x60d3d7b6
  423cf0:	mov    ah,0x94
  423cf2:	and    BYTE PTR gs:[ebx-0x720006a3],bh
  423cf9:	inc    ebx
  423cfa:	std    
  423cfb:	or     bh,BYTE PTR [ebx+0x18]
  423cfe:	xchg   edi,eax
  423cff:	mov    cl,0x50
  423d01:	scas   eax,DWORD PTR es:[edi]
  423d02:	mov    edx,0x6fc295f3
  423d07:	cli    
  423d08:	add    dh,BYTE PTR [ebp+0x73]
  423d0b:	(bad)  
  423d0c:	in     eax,0x19
  423d0e:	lds    ecx,FWORD PTR [edi+0x1b3603d0]
  423d14:	push   0x712f6f07
  423d19:	pusha  
  423d1a:	dec    edi
  423d1b:	imul   edx,DWORD PTR [ebx],0xffffffc5
  423d1e:	lea    ebx,[ebx]
  423d20:	jb     0x423d4e
  423d22:	inc    esi
  423d23:	mov    cs,WORD PTR [edi]
  423d25:	and    edi,DWORD PTR [edi]
  423d27:	xor    al,0x24
  423d29:	sbb    al,0x15
  423d2b:	fcmovne st,st(0)
  423d2d:	and    BYTE PTR [ebx+0x4c2884b8],ah
  423d33:	outs   dx,BYTE PTR ds:[esi]
  423d34:	in     al,0x17
  423d36:	and    dh,dl
  423d38:	rol    DWORD PTR [esi-0x360fbd9],cl
  423d3e:	push   0x3835ed4a
  423d43:	inc    eax
  423d44:	outs   dx,BYTE PTR ds:[esi]
  423d45:	ins    DWORD PTR es:[edi],dx
  423d46:	call   0x23fa63be
  423d4b:	mov    bl,0x31
  423d4d:	retf   0xa8f
  423d50:	stos   DWORD PTR es:[edi],eax
  423d51:	xchg   ecx,eax
  423d52:	xchg   esi,eax
  423d53:	sahf   
  423d54:	test   al,0x6f
  423d56:	ret    0x53d5
  423d59:	mov    dl,0xe7
  423d5b:	in     al,0x8d
  423d5d:	mov    ebp,DWORD PTR [ebp+0x53]
  423d60:	inc    eax
  423d61:	cmp    ah,BYTE PTR [eax+esi*8+0x45]
  423d65:	jno    0x423d68
  423d67:	test   eax,eax
  423d69:	add    BYTE PTR [esi+0x4a],al
  423d6c:	in     al,dx
  423d6d:	sti    
  423d6e:	(bad)  
  423d6f:	shl    BYTE PTR [esi],0x46
  423d72:	scas   al,BYTE PTR es:[edi]
  423d73:	ret    0x2e3b
  423d76:	mov    eax,0x3035156c
  423d7b:	rol    BYTE PTR [edx],0xb0
  423d7e:	adc    BYTE PTR [eax+0x6a],0x4e
  423d82:	les    esp,FWORD PTR [eax+0x62]
  423d85:	fdivr  DWORD PTR [eax-0xf]
  423d88:	jp     0x423db5
  423d8a:	and    bl,dh
  423d8c:	imul   esi,DWORD PTR [ebp+0x1f],0x59b129b
  423d93:	lods   al,BYTE PTR ds:[esi]
  423d94:	pushf  
  423d95:	rcr    DWORD PTR [esi-0x47],cl
  423d98:	push   es
  423d99:	dec    esi
  423d9a:	dec    esi
  423d9b:	xchg   DWORD PTR [edx],edi
  423d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d9e:	sbb    ebp,DWORD PTR [ebx]
  423da0:	pop    eax
  423da1:	retf   
  423da2:	aas    
  423da3:	pop    esp
  423da4:	push   0x9870d47
  423da9:	pop    DWORD PTR [ebx-0x666e21e1]
  423daf:	dec    eax
  423db0:	in     al,dx
  423db1:	js     0x423d76
  423db3:	test   eax,0x94569426
  423db8:	xor    eax,0x47ea87c
  423dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dbe:	dec    edi
  423dbf:	test   eax,0xcbf3f018
  423dc4:	inc    ecx
  423dc5:	dec    eax
  423dc6:	fs pop edx
  423dc8:	dec    esp
  423dc9:	inc    esp
  423dca:	fcomp  DWORD PTR [edx+0x214491c3]
  423dd0:	arpl   WORD PTR [edx-0x2c],di
  423dd3:	xor    ah,cl
  423dd5:	lock push esi
  423dd7:	out    0xe3,al
  423dd9:	arpl   WORD PTR [ebx-0x6],bx
  423ddc:	dec    edx
  423ddd:	int    0x82
  423ddf:	fwait
  423de0:	mov    eax,ds:0xc4b8d34e
  423de5:	lods   eax,DWORD PTR ds:[esi]
  423de6:	push   edx
  423de7:	gs jecxz 0x423e18
  423dea:	pop    esi
  423deb:	imul   eax,DWORD PTR [eax],0xffffffe9
  423dee:	push   ss
  423def:	xchg   DWORD PTR [esi+ebp*1-0x37f904ac],ebx
  423df6:	jbe    0x423e64
  423df8:	fcom   DWORD PTR [edi-0x329ad494]
  423dfe:	addr16 dec edx
  423e00:	push   eax
  423e01:	mov    ecx,0xcf32d240
  423e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e07:	call   esi
  423e09:	push   edi
  423e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e0b:	dec    esi
  423e0c:	imul   esp,DWORD PTR es:[eax+0x3dafb964],0x8d4184b6
  423e17:	or     al,0xe0
  423e19:	stos   DWORD PTR es:[edi],eax
  423e1a:	sahf   
  423e1b:	xchg   esp,eax
  423e1c:	(bad)  
  423e1d:	mov    edi,0xc5b07281
  423e22:	mov    ds:0x388c557f,eax
  423e27:	pop    es
  423e28:	adc    al,0x5d
  423e2a:	adc    al,0xce
  423e2c:	vshufps xmm6,xmm3,xmm3,0xb7
  423e31:	sbb    DWORD PTR [ecx],esi
  423e33:	xor    BYTE PTR [esi-0x24],0xbd
  423e37:	leave  
  423e38:	dec    ebp
  423e39:	out    dx,eax
  423e3a:	mov    eax,ds:0xe38e4db7
  423e3f:	retf   0x88e2
  423e42:	lahf   
  423e43:	and    eax,0xd3ab65ba
  423e48:	bound  esp,QWORD PTR [eax+0xa]
  423e4b:	push   edx
  423e4c:	dec    ebx
  423e4d:	rol    bl,0xd0
  423e50:	in     eax,0xb4
  423e52:	call   0xe5d0ab30
  423e57:	sbb    BYTE PTR [edi],dl
  423e59:	mov    eax,0xb4678974
  423e5e:	in     al,dx
  423e5f:	inc    ebx
  423e60:	lods   eax,DWORD PTR ds:[esi]
  423e61:	push   ebx
  423e62:	mov    bh,0x49
  423e64:	and    eax,0x33928c4b
  423e69:	sbb    ecx,ecx
  423e6b:	bound  esp,QWORD PTR [esi]
  423e6d:	sahf   
  423e6e:	pop    edi
  423e6f:	mov    BYTE PTR ds:0x320007ad,dl
  423e75:	mov    bh,0xf6
  423e77:	je     0x423e4c
  423e79:	sub    al,0x9c
  423e7b:	and    BYTE PTR [ebx-0xa],bh
  423e7e:	call   0xc5f54137
  423e83:	(bad)  
  423e84:	adc    al,0x3
  423e86:	mov    ebx,0xd3f2667c
  423e8b:	ficom  DWORD PTR ds:[ebp-0x3b]
  423e8f:	jns    0x423e9e
  423e91:	aaa    
  423e92:	mov    al,0x98
  423e94:	xor    eax,0x88479899
  423e99:	mov    DWORD PTR [ebx+0x5428c52f],edi
  423e9f:	sbb    cl,BYTE PTR [eax-0x36]
  423ea2:	imul   edx,DWORD PTR [ebx+ecx*4+0x2c],0xbbe207d0
  423eaa:	aaa    
  423eab:	sbb    DWORD PTR gs:[ebx+0x43b20aba],edx
  423eb2:	mov    edi,0x84f5932d
  423eb7:	adc    al,0x14
  423eb9:	pop    ss
  423eba:	mov    ebp,0xdd9e03dc
  423ebf:	push   0x50d93d84
  423ec4:	aas    
  423ec5:	mov    al,ds:0x71ca1665
  423eca:	jmp    0x423efc
  423ecc:	aam    0xad
  423ece:	inc    esp
  423ecf:	out    0x38,al
  423ed1:	bound  eax,QWORD PTR [eax]
  423ed3:	inc    edx
  423ed4:	adc    bl,BYTE PTR [ebx+ecx*2+0x5e847d5d]
  423edb:	data16 cli 
  423edd:	test   bl,bl
  423edf:	imul   esi,DWORD PTR [ebx+ebx*1],0x6690f4d6
  423ee6:	xchg   esp,eax
  423ee7:	repz hlt 
  423ee9:	inc    ebx
  423eea:	repnz loopne 0x423f67
  423eed:	pop    eax
  423eee:	xlat   BYTE PTR ds:[ebx]
  423eef:	fwait
  423ef0:	mov    ds:0xf5dc1340,eax
  423ef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ef6:	in     al,0x92
  423ef8:	xchg   BYTE PTR [edx],dh
  423efa:	sub    DWORD PTR [edi+0x1c],ecx
  423efd:	rol    DWORD PTR [ebx+ebx*1],cl
  423f00:	and    DWORD PTR gs:[esi+esi*1],esi
  423f04:	cld    
  423f05:	(bad)  
  423f06:	cmp    DWORD PTR [edx*4-0x720fab43],ebx
  423f0d:	add    BYTE PTR [eax],al
  423f0f:	add    BYTE PTR [eax],al
  423f11:	add    dl,dl
  423f13:	clc    
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fcmovu st,st(4)
  423f1f:	hlt    
  423f20:	adc    bh,BYTE PTR [eax]
  423f22:	and    edi,DWORD PTR [eax+0x4f30001]
  423f28:	add    BYTE PTR [eax],al
  423f2a:	or     DWORD PTR [ecx],edx
  423f2c:	cmp    DWORD PTR ds:0x4e7c0c72,0x13
  423f33:	mov    ch,0x69
  423f35:	into   
  423f36:	pop    ss
  423f37:	pop    esi
  423f38:	bound  esi,QWORD PTR [ebx-0x4d650c3c]
  423f3e:	iret   
  423f3f:	xchg   ebx,eax
  423f40:	scas   al,BYTE PTR es:[edi]
  423f41:	or     DWORD PTR ds:0xfe5bf974,esp
  423f47:	cmp    eax,ecx
  423f49:	push   ecx
  423f4a:	ja     0x423f3d
  423f4c:	imul   esi,DWORD PTR [ecx+0x30ac6ed],0x9765cf03
  423f56:	mov    WORD PTR [ebx+0x3f],cs
  423f59:	pop    es
  423f5a:	into   
  423f5b:	push   ebp
  423f5c:	sbb    BYTE PTR [eax],dl
  423f5e:	loopne 0x423f93
  423f60:	or     esp,DWORD PTR [ebx]
  423f62:	stos   DWORD PTR es:[edi],eax
  423f63:	adc    al,0xd
  423f65:	outs   dx,BYTE PTR ds:[esi]
  423f66:	mov    edx,edx
  423f68:	fist   DWORD PTR [ecx+0x72]
  423f6b:	or     al,0xef
  423f6d:	fnsave [ecx]
  423f6f:	and    eax,0x84eb341d
  423f74:	out    dx,al
  423f75:	mov    ebx,0x54e20cb8
  423f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f7b:	push   ecx
  423f7c:	push   ds
  423f7d:	fadd   QWORD PTR [ecx]
  423f7f:	aas    
  423f80:	inc    ecx
  423f81:	idiv   esp
  423f83:	inc    eax
  423f84:	nop
  423f85:	push   es
  423f86:	inc    ebx
  423f87:	mov    eax,ds:0x3ef0983e
  423f8c:	cwde   
  423f8d:	xchg   ebp,eax
  423f8e:	je     0x423f13
  423f90:	pusha  
  423f91:	add    al,cl
  423f93:	bnd ret 
  423f95:	xchg   esp,eax
  423f96:	lds    esp,FWORD PTR [ecx-0x6a]
  423f99:	into   
  423f9a:	clc    
  423f9b:	push   es
  423f9c:	(bad)  
  423f9d:	loopne 0x423fe1
  423f9f:	shl    ecx,1
  423fa1:	into   
  423fa2:	cli    
  423fa3:	mov    edx,0xb31268a1
  423fa8:	in     al,dx
  423fa9:	push   ebp
  423faa:	repnz test edx,ecx
  423fad:	repz cmp BYTE PTR [ecx+eax*4-0x30],bl
  423fb2:	stos   BYTE PTR es:[edi],al
  423fb3:	sbb    BYTE PTR [ecx],al
  423fb5:	or     eax,0x99f25fef
  423fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fbc:	xor    edi,DWORD PTR [esi]
  423fbe:	cmp    al,0xdd
  423fc0:	dec    eax
  423fc1:	test   DWORD PTR [esi+0x51],esi
  423fc4:	clc    
  423fc5:	dec    eax
  423fc6:	loop   0x423fda
  423fc8:	push   esp
  423fc9:	test   BYTE PTR ds:0x248839af,bl
  423fcf:	inc    ebx
  423fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fd1:	add    esi,eax
  423fd3:	nop
  423fd4:	popf   
  423fd5:	rcl    DWORD PTR [ebx],0xf5
  423fd8:	in     eax,0x10
  423fda:	shl    DWORD PTR [ecx-0x5331307e],1
  423fe0:	call   0x583db367
  423fe5:	mov    ah,BYTE PTR es:[esi+0x4b466fa2]
  423fec:	inc    ebx
  423fed:	mov    ebx,0x68349fff
  423ff2:	lds    ebx,FWORD PTR [ecx+edi*1-0x16]
  423ff6:	push   0xfcab58fa
  423ffb:	shl    DWORD PTR [ecx-0x11],cl
  423ffe:	cmp    BYTE PTR [ecx-0x46247efc],ah
  424004:	aas    
  424005:	hlt    
  424006:	aaa    
  424007:	cmp    bl,BYTE PTR [ecx-0x626db70f]
  42400d:	gs pop esp
  42400f:	cmp    eax,DWORD PTR [edi+0xd]
  424012:	retf   
  424013:	xlat   BYTE PTR ds:[ebx]
  424014:	fisttp WORD PTR [esi-0x73c32347]
  42401a:	sbb    esp,ebp
  42401c:	out    dx,al
  42401d:	pop    edx
  42401e:	cmp    al,0xf3
  424020:	ja     0x42404c
  424022:	jmp    0xb7c5:0x9ed1e517
  424029:	scas   eax,DWORD PTR es:[edi]
  42402a:	cld    
  42402b:	addr16 ret 
  42402d:	xor    esi,DWORD PTR ds:0xd64e534f
  424033:	outs   dx,BYTE PTR ds:[esi]
  424034:	and    bh,dl
  424036:	and    DWORD PTR [esi],ebx
  424038:	jp     0x4240b1
  42403a:	in     eax,0xe2
  42403c:	mov    ds:0x757484f,al
  424041:	pop    ss
  424042:	lahf   
  424043:	push   esi
  424044:	aam    0x2c
  424046:	stc    
  424047:	mov    al,ds:0x48c5b838
  42404c:	sub    cl,dh
  42404e:	dec    esp
  42404f:	gs inc ecx
  424051:	add    BYTE PTR [edx+0x43],al
  424054:	jp     0x424008
  424056:	jns    0x424055
  424058:	and    eax,0xc6583fbd
  42405d:	popf   
  42405e:	inc    eax
  42405f:	sub    BYTE PTR [ebx],bl
  424061:	push   cs
  424062:	or     eax,0x69340eb7
  424067:	xchg   ecx,eax
  424068:	or     DWORD PTR [eax-0x3a8d3c96],edi
  42406e:	pop    esp
  42406f:	push   0x76
  424071:	inc    ebx
  424072:	inc    ebx
  424073:	ins    DWORD PTR es:[edi],dx
  424074:	mov    edi,0x79572ca8
  424079:	mov    al,ds:0x56bbcc20
  42407e:	jp     0x424086
  424080:	sbb    DWORD PTR [edx+0x18],ebp
  424083:	jae    0x424045
  424085:	loope  0x424031
  424087:	in     al,0x86
  424089:	jmp    0x7a79ace5
  42408e:	jge    0x424016
  424090:	ins    BYTE PTR es:[edi],dx
  424091:	scas   eax,DWORD PTR es:[edi]
  424092:	ins    BYTE PTR es:[edi],dx
  424093:	in     eax,dx
  424094:	and    edx,DWORD PTR [ebp+eax*4+0x5f]
  424098:	push   cs
  424099:	shl    cl,1
  42409b:	adc    esp,DWORD PTR [eax]
  42409d:	fdivr  QWORD PTR es:[ebp+0x6637ec52]
  4240a4:	mov    edi,0x4ce99b14
  4240a9:	in     al,0x7e
  4240ab:	mov    BYTE PTR [edx-0x7d3c3906],dh
  4240b1:	loop   0x424118
  4240b3:	inc    ebp
  4240b4:	xor    esi,DWORD PTR [ecx+eax*1-0x62259db4]
  4240bb:	rcl    BYTE PTR [esi],cl
  4240bd:	retf   0x6729
  4240c0:	aad    0x59
  4240c2:	add    eax,0x69cc446
  4240c7:	in     eax,0x1a
  4240c9:	inc    ecx
  4240ca:	mov    WORD PTR [ebx+0x34db0f2],fs
  4240d0:	ins    BYTE PTR es:[edi],dx
  4240d1:	data16 mov dl,0x3f
  4240d4:	shl    DWORD PTR ds:0x338f85a5,1
  4240da:	outs   dx,DWORD PTR ds:[esi]
  4240db:	mov    ds:0x8c69eebc,eax
  4240e0:	cld    
  4240e1:	sub    BYTE PTR ds:[ebp-0x27],dh
  4240e5:	mov    esi,0x35bfe248
  4240ea:	sbb    DWORD PTR [ebx],0xffffffaa
  4240ed:	test   al,0x1a
  4240ef:	xchg   edx,eax
  4240f0:	(bad)  [edx]
  4240f2:	mov    ds:0xcd8c34b6,al
  4240f7:	xor    BYTE PTR [ebx-0x6c2e6b9f],0x7c
  4240fe:	ds aad 0xbf
  424101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424102:	or     BYTE PTR [ebx],ah
  424104:	mov    ebp,DWORD PTR [ecx-0x662f3fe2]
  42410a:	add    eax,0x31517fd5
  42410f:	cmp    edx,0xb99b013e
  424115:	repnz in al,dx
  424117:	pop    esi
  424118:	scas   al,BYTE PTR es:[edi]
  424119:	adc    ecx,0x53
  42411c:	pop    ecx
  42411d:	shl    DWORD PTR ds:[edi],cl
  424120:	push   esp
  424121:	int    0xc2
  424123:	dec    ebx
  424124:	enter  0x69d1,0x8d
  424128:	mov    dl,0x8c
  42412a:	adc    al,0xbe
  42412c:	lods   eax,DWORD PTR ds:[esi]
  42412d:	mov    eax,ds:0x50a278f8
  424132:	fstp   DWORD PTR [ecx]
  424134:	push   eax
  424135:	jecxz  0x42413e
  424137:	dec    ebp
  424138:	mov    dl,0xf
  42413a:	cmpxchg8b QWORD PTR [ecx-0x34b09c37]
  424141:	mov    eax,0xfbd0ce12
  424146:	sbb    dl,dl
  424148:	(bad)  
  424149:	xchg   edi,eax
  42414a:	sub    al,0xad
  42414c:	ss add eax,0x1a134824
  424152:	sbb    ebx,DWORD PTR [esi]
  424154:	pop    eax
  424155:	pop    edx
  424156:	call   0x35b:0x5164a0a5
  42415d:	jg     0x424181
  42415f:	jmp    0x9c4ad28b
  424164:	sbb    eax,0x2bb6af94
  424169:	push   edx
  42416a:	repz xchg esp,eax
  42416c:	mul    eax
  42416e:	mov    bh,BYTE PTR [ebx-0x5a49805e]
  424174:	or     ah,ch
  424176:	adc    dl,BYTE PTR [ebx+edx*2+0x65aba1a3]
  42417d:	mov    ecx,0x1a2cf865
  424182:	sbb    BYTE PTR [eax],cl
  424184:	sub    ecx,DWORD PTR [ecx+0x61]
  424187:	dec    ebx
  424188:	fist   WORD PTR [bp+di-0x54]
  42418c:	sub    ebx,DWORD PTR [edi-0x7f70e107]
  424192:	test   eax,esp
  424194:	mov    ebx,0xab6429de
  424199:	inc    ebx
  42419a:	push   0x7c
  42419c:	xor    bl,BYTE PTR [edx]
  42419e:	adc    al,0xb0
  4241a0:	xor    cl,BYTE PTR [edi+0x8f29ccf]
  4241a6:	adc    cl,cl
  4241a8:	retf   0x3a09
  4241ab:	(bad)  
  4241ac:	dec    edi
  4241ad:	addr16 mov eax,0xb61a9d9c
  4241b3:	xor    cl,BYTE PTR [edi+0x76]
  4241b6:	mov    ebp,0xf798c00
  4241bb:	lock cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4241be:	fsubr  st,st(1)
  4241c0:	fidivr DWORD PTR [ebx-0x21]
  4241c3:	scas   al,BYTE PTR es:[edi]
  4241c4:	sahf   
  4241c5:	cld    
  4241c6:	xchg   esi,eax
  4241c7:	gs (bad) 
  4241c9:	cdq    
  4241ca:	jge    0x42417b
  4241cc:	mov    bl,0xe
  4241ce:	mov    esp,0x8727c0c3
  4241d3:	sub    ebx,ebx
  4241d5:	pop    edi
  4241d6:	in     eax,dx
  4241d7:	dec    esp
  4241d8:	add    al,0x6b
  4241da:	sub    bl,0x94
  4241dd:	aad    0x2f
  4241df:	xor    BYTE PTR [edi+0x6],0x77
  4241e3:	pushf  
  4241e4:	mov    eax,ds:0xa137bfdc
  4241e9:	push   esp
  4241ea:	sbb    BYTE PTR [ebx+0x3ae9fc29],al
  4241f0:	sbb    ebx,DWORD PTR [ebp+0x12de28d1]
  4241f6:	outs   dx,BYTE PTR ds:[esi]
  4241f7:	int    0xcd
  4241f9:	arpl   WORD PTR [ecx+0x5d808412],bx
  4241ff:	cmp    BYTE PTR [eax+ebp*8],bh
  424202:	mov    bl,0x57
  424204:	xchg   ecx,eax
  424205:	inc    ebx
  424206:	add    al,0xea
  424208:	add    edi,DWORD PTR [edx+0x3]
  42420b:	in     al,0x94
  42420d:	ffree  st(1)
  42420f:	dec    esi
  424210:	or     DWORD PTR [edx+0x4b],ebx
  424213:	(bad)
  424216:	hlt    
  424217:	inc    ebp
  424218:	adc    ecx,edx
  42421a:	in     al,0x98
  42421c:	pop    edi
  42421d:	sbb    BYTE PTR [eax+0x36f5fff3],dl
  424223:	cmp    ebp,edx
  424225:	shl    DWORD PTR [esi-0x46],cl
  424228:	shl    esi,0xda
  42422b:	out    dx,eax
  42422c:	add    BYTE PTR [esi],al
  42422e:	cmp    DWORD PTR [edi*8+0x685313da],ecx
  424235:	xchg   esp,eax
  424236:	scas   eax,DWORD PTR es:[edi]
  424237:	mov    WORD PTR ds:0x3db7b5d0,?
  42423d:	test   al,0x79
  42423f:	sti    
  424240:	lods   al,BYTE PTR ds:[esi]
  424241:	pop    edi
  424242:	enter  0xc852,0xf4
  424246:	inc    ecx
  424247:	cdq    
  424248:	mov    dh,0xfc
  42424a:	jge    0x424258
  42424c:	fwait
  42424d:	ret    
  42424e:	mov    ecx,0xf1b59802
  424253:	mov    dh,0xf1
  424255:	push   ecx
  424256:	sbb    DWORD PTR [ebp+0x32],0xffffffcd
  42425a:	push   ebx
  42425b:	or     DWORD PTR [eiz*2+0x26cc9872],ebx
  424262:	stos   BYTE PTR es:[edi],al
  424263:	mov    cl,0xe8
  424265:	jns    0x424289
  424267:	aas    
  424268:	ins    DWORD PTR es:[edi],dx
  424269:	arpl   WORD PTR [esi],ax
  42426b:	sbb    BYTE PTR [ebx+0x18],0x7
  42426f:	mov    edi,0xdec75cf3
  424274:	adc    eax,0x9509ddac
  424279:	into   
  42427a:	cmc    
  42427b:	repnz ds sbb eax,0x5733b78b
  424282:	mov    ebp,0x109cf4e3
  424287:	cmp    BYTE PTR [ebp-0x2224d388],bl
  42428d:	(bad)  
  42428e:	scas   eax,DWORD PTR es:[edi]
  42428f:	daa    
  424290:	mov    cl,0xc9
  424292:	rcr    bh,cl
  424294:	add    ch,0xde
  424297:	xchg   edx,eax
  424298:	adc    BYTE PTR [ebx+ebp*8-0x26b72a23],dh
  42429f:	or     edx,DWORD PTR [eax]
  4242a1:	xor    eax,0x5caead46
  4242a6:	inc    esi
  4242a7:	mov    ah,0x1b
  4242a9:	push   esp
  4242aa:	ret    
  4242ab:	fnstsw WORD PTR [edi+0x7d]
  4242ae:	dec    eax
  4242af:	fsubr  DWORD PTR [esi]
  4242b1:	int3   
  4242b2:	test   ebx,0xbf08eae1
  4242b8:	std    
  4242b9:	fdivrp st(4),st
  4242bb:	adc    DWORD PTR [edx-0x2dcbac8],ebx
  4242c1:	fs in  eax,0xee
  4242c4:	jge    0x424255
  4242c6:	xlat   BYTE PTR ds:[ebx]
  4242c7:	lock cdq 
  4242c9:	shl    BYTE PTR [edx],0x8f
  4242cc:	and    ah,BYTE PTR [esi+0x665cd94]
  4242d2:	xchg   edi,eax
  4242d3:	fidivr DWORD PTR [eax-0x10]
  4242d6:	mov    eax,ds:0x6f65b7dc
  4242db:	cmp    eax,0x66ef86c5
  4242e0:	fs ins BYTE PTR es:[edi],dx
  4242e2:	je     0x4242c0
  4242e4:	inc    esp
  4242e5:	cmc    
  4242e6:	mov    cl,0xd9
  4242e8:	cmp    BYTE PTR [edx+edi*4],dh
  4242eb:	inc    esp
  4242ec:	call   edi
  4242ee:	test   al,0x4c
  4242f0:	shl    BYTE PTR [edi],1
  4242f2:	sbb    DWORD PTR [edi],ebx
  4242f4:	fucompp 
  4242f6:	sti    
  4242f7:	iret   
  4242f8:	sbb    BYTE PTR [esi-0x139e5978],0x4f
  4242ff:	push   es
  424300:	lahf   
  424301:	jecxz  0x42435a
  424303:	add    esp,edi
  424305:	fst    QWORD PTR [esi+0x5b]
  424308:	mov    edi,0x274593a0
  42430d:	jle    0x42436c
  42430f:	fsubr  QWORD PTR [ebx]
  424311:	jg     0x424344
  424313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424314:	inc    esi
  424315:	ds ret 
  424317:	push   cs
  424318:	ss adc ah,dl
  42431b:	ja     0x4242a5
  42431d:	cmp    ah,BYTE PTR [eax*2-0x2e741567]
  424324:	or     DWORD PTR [ebx-0x18da37f3],edx
  42432a:	push   esi
  42432b:	pop    ss
  42432c:	(bad)
  42432f:	jmp    0xbd1c:0xbad75efa
  424336:	xor    esi,DWORD PTR [esi-0x8]
  424339:	hlt    
  42433a:	xchg   ecx,eax
  42433b:	mov    dl,0xde
  42433d:	pop    esi
  42433e:	sub    esi,esp
  424340:	push   ebx
  424341:	xor    edx,ebp
  424343:	cmp    DWORD PTR [esi-0x6234ebac],0x34
  42434a:	sti    
  42434b:	clc    
  42434c:	cli    
  42434d:	pop    ss
  42434e:	nop
  42434f:	(bad)  
  424350:	pop    edi
  424351:	das    
  424352:	pop    eax
  424353:	call   0x3ae76760
  424358:	cmp    BYTE PTR [ebx+ecx*2+0x1e024970],ah
  42435f:	xor    eax,0x56ff896
  424364:	loope  0x424323
  424366:	xchg   DWORD PTR [esi-0x80],edi
  424369:	idiv   DWORD PTR [ebx+0x309b6f78]
  42436f:	adc    BYTE PTR ds:0xb2f802dd,ah
  424375:	mov    edi,ebp
  424377:	xchg   ebx,eax
  424378:	cmp    BYTE PTR [ebp+0x71632308],bl
  42437e:	es ret 
  424380:	mov    eax,ds:0x7dc9b7af
  424385:	and    al,ch
  424387:	leave  
  424388:	ret    
  424389:	imul   esi,DWORD PTR [ebx+esi*1+0x4220347f],0x49
  424391:	jae    0x42438e
  424393:	fistp  WORD PTR [eax+0x3b]
  424396:	pushf  
  424397:	pop    es
  424398:	jp     0x4243b6
  42439a:	scas   al,BYTE PTR es:[edi]
  42439b:	js     0x42433a
  42439d:	ins    BYTE PTR es:[edi],dx
  42439e:	test   al,0x57
  4243a0:	jae    0x4243ca
  4243a2:	fstp   QWORD PTR [ebp-0x41]
  4243a5:	pop    eax
  4243a6:	push   esi
  4243a7:	ja     0x4243e0
  4243a9:	dec    edi
  4243aa:	lods   al,BYTE PTR ds:[esi]
  4243ab:	test   DWORD PTR [edi],esp
  4243ad:	int    0x50
  4243af:	in     eax,dx
  4243b0:	pop    edx
  4243b1:	ins    BYTE PTR es:[edi],dx
  4243b2:	aad    0x32
  4243b4:	xor    ecx,DWORD PTR [eax]
  4243b6:	cs out 0xcb,eax
  4243b9:	(bad)  
  4243ba:	xchg   edi,eax
  4243bb:	jb     0x42434a
  4243bd:	pusha  
  4243be:	ss jb  0x424439
  4243c1:	dec    edx
  4243c2:	or     cl,BYTE PTR [ebx-0x4f7364cd]
  4243c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243c9:	iret   
  4243ca:	jno    0x42440a
  4243cc:	jb     0x42444a
  4243ce:	ins    DWORD PTR es:[edi],dx
  4243cf:	mov    ebx,0xe12ce52c
  4243d4:	xor    al,0x9f
  4243d6:	std    
  4243d7:	ret    0xc55d
  4243da:	mov    ecx,0x8791c2de
  4243df:	mov    DWORD PTR [esi],esi
  4243e1:	arpl   WORD PTR [ecx+0xface2e6],di
  4243e7:	(bad)  
  4243e8:	fsubr  st(7),st
  4243ea:	mov    eax,DWORD PTR [edi+edx*1]
  4243ed:	cmc    
  4243ee:	scas   eax,DWORD PTR es:[edi]
  4243ef:	mov    dl,0xe3
  4243f1:	add    BYTE PTR [eax+0x4b],al
  4243f4:	imul   ebp,DWORD PTR fs:[ebx],0x2c8b81bc
  4243fb:	(bad)  
  4243fc:	in     al,dx
  4243fd:	jmp    0xcfbe3f53
  424402:	cmp    eax,0xe4c25a1b
  424407:	jl     0x4243ba
  424409:	mov    ch,0xdf
  42440b:	mov    eax,0x84c39ad7
  424410:	push   ebx
  424411:	dec    edx
  424412:	dec    edi
  424413:	xchg   ecx,eax
  424414:	cmp    eax,DWORD PTR [ebx+0x2b67cc28]
  42441a:	sahf   
  42441b:	adc    edx,ebp
  42441d:	add    BYTE PTR [eax],al
  42441f:	add    BYTE PTR [eax],al
  424421:	add    BYTE PTR [edx+ebx*8],ch
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	mov    edi,0x16c260a0
  424433:	mov    ebp,0x4f30001
  424438:	add    BYTE PTR [eax],al
  42443a:	cmp    ebp,DWORD PTR [ebx-0x2f45abb9]
  424440:	push   ecx
  424441:	or     DWORD PTR [ebx+0x5e],ebp
  424444:	mov    esp,0x58538425
  424449:	push   eax
  42444a:	mov    ds:0x962b5760,al
  42444f:	out    0x25,eax
  424451:	add    eax,0xd8aa864e
  424456:	sar    BYTE PTR [edi+0x64cd81a6],1
  42445c:	add    ecx,eax
  42445e:	and    BYTE PTR [eax-0x4d],bl
  424461:	mov    ah,0xb1
  424463:	das    
  424464:	xchg   edi,eax
  424465:	test   al,0x94
  424467:	(bad)  
  424468:	inc    ebx
  424469:	cli    
  42446a:	dec    ebx
  42446b:	and    DWORD PTR [ecx],edi
  42446d:	xor    al,0xc1
  42446f:	aam    0x8a
  424471:	and    esi,DWORD PTR [esi+0x63872f7b]
  424477:	jge    0x4244e6
  424479:	test   edi,edx
  42447b:	add    al,0xe
  42447d:	sub    esi,0x6488ac7b
  424483:	jo     0x42448f
  424485:	mov    cl,0x48
  424487:	pop    es
  424488:	ja     0x4244d4
  42448a:	pop    ss
  42448b:	mov    ds:0x1a2a76c8,eax
  424490:	fild   WORD PTR [ebp+0x8f06a80]
  424496:	sti    
  424497:	cmp    BYTE PTR [edi],dh
  424499:	cld    
  42449a:	jge    0x424505
  42449c:	inc    esi
  42449d:	rcl    DWORD PTR [eax-0x6c],1
  4244a0:	cmp    DWORD PTR [edi],0xfffffff1
  4244a3:	das    
  4244a4:	inc    eax
  4244a5:	int3   
  4244a6:	dec    ebp
  4244a7:	sbb    al,0xd0
  4244a9:	xchg   BYTE PTR [eiz*2-0x341f20ce],dh
  4244b0:	mov    ah,ch
  4244b2:	ret    
  4244b3:	imul   esp,DWORD PTR [edi+0x2b],0x11f0023f
  4244ba:	jge    0x424475
  4244bc:	aam    0xaa
  4244be:	xchg   edx,eax
  4244bf:	stos   BYTE PTR es:[edi],al
  4244c0:	retf   
  4244c1:	vpunpcklbw xmm6,xmm7,XMMWORD PTR [eax+0x44]
  4244c6:	adc    al,ch
  4244c8:	lods   eax,DWORD PTR ds:[esi]
  4244c9:	gs and ecx,esi
  4244cc:	jns    0x42447b
  4244ce:	(bad)  
  4244d0:	aaa    
  4244d1:	leave  
  4244d2:	(bad)  
  4244d3:	stos   BYTE PTR es:[edi],al
  4244d4:	test   eax,0x2d7d6d22
  4244d9:	enter  0xf80c,0x27
  4244dd:	fcomp  QWORD PTR [ebx-0x1a0cc38c]
  4244e3:	xor    cl,ch
  4244e5:	iret   
  4244e6:	pop    es
  4244e7:	mov    al,ds:0x7e35948a
  4244ec:	stc    
  4244ed:	pop    eax
  4244ee:	js     0x4244e7
  4244f0:	cwde   
  4244f1:	adc    ecx,DWORD PTR [edi]
  4244f3:	cmp    eax,0xd8c1f40
  4244f8:	int    0x69
  4244fa:	pop    ss
  4244fb:	pop    esi
  4244fc:	mov    ebp,0x533f2bda
  424501:	out    0x6,al
  424503:	xchg   esi,eax
  424504:	sbb    BYTE PTR [ebx],dl
  424506:	xchg   ebp,eax
  424507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424508:	cwde   
  424509:	sbb    DWORD PTR [edi+0x63c063d9],0x4533137f
  424513:	cmp    eax,DWORD PTR [ebp+0x86ccdbd]
  424519:	in     eax,0xd4
  42451b:	sub    bh,BYTE PTR [ecx+0x58]
  42451e:	adc    ah,dh
  424520:	cmp    dh,BYTE PTR [esi-0x13]
  424523:	mov    bl,0x98
  424525:	mov    ah,0x2b
  424527:	pop    esi
  424528:	mov    ch,0xd9
  42452a:	leave  
  42452b:	mov    ch,0xc6
  42452d:	xchg   ebp,eax
  42452e:	fdiv   DWORD PTR [esi-0x12113b61]
  424534:	test   al,0x11
  424536:	(bad)  
  424537:	cld    
  424538:	clc    
  424539:	or     eax,0xaf024cba
  42453e:	or     ebp,esp
  424540:	js     0x4245ab
  424542:	push   ebp
  424543:	or     ah,BYTE PTR [esp+edi*2-0x2f]
  424547:	cmp    ah,BYTE PTR [ecx+0x18]
  42454a:	cmc    
  42454b:	cmc    
  42454c:	test   DWORD PTR [ebp-0x38],ebp
  42454f:	fist   DWORD PTR [eax+0x50]
  424552:	mov    bh,0x79
  424554:	in     eax,0xfe
  424556:	jmp    0xda4f:0x378616e
  42455d:	jle    0x424555
  42455f:	mov    al,0x9c
  424561:	psadbw mm6,QWORD PTR [eax-0x31b69a75]
  424568:	or     edx,eax
  42456a:	mov    DWORD PTR [edi+0x22],eax
  42456d:	jle    0x4245ed
  42456f:	arpl   WORD PTR [eax],dx
  424571:	mov    eax,DWORD PTR [edx-0x340118bb]
  424577:	cmp    eax,0xe1e177a1
  42457c:	in     eax,0xb5
  42457e:	add    al,dh
  424580:	jne    0x4245c0
  424582:	fcmovnu st,st(1)
  424584:	mov    edi,0x62eb9b53
  424589:	jp     0x424510
  42458b:	scas   al,BYTE PTR es:[edi]
  42458c:	inc    ebp
  42458d:	sbb    bh,0x22
  424590:	ds clc 
  424592:	sbb    eax,0x73cb0163
  424597:	into   
  424598:	iret   
  424599:	in     eax,dx
  42459a:	stc    
  42459b:	bound  ecx,QWORD PTR [ebp+0x64a5106e]
  4245a1:	push   ss
  4245a2:	adc    eax,DWORD PTR [ebx+0x58]
  4245a5:	xchg   DWORD PTR [ecx-0x79],edi
  4245a8:	xchg   ecx,eax
  4245a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245aa:	sar    edi,0x8d
  4245ad:	(bad)  
  4245ae:	mov    esi,0x3cd2ab55
  4245b3:	fmul   DWORD PTR [edx-0xb]
  4245b6:	mov    ch,0xec
  4245b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245b9:	(bad)  
  4245bb:	lds    esi,FWORD PTR [ebx+0x24]
  4245be:	je     0x424614
  4245c0:	lahf   
  4245c1:	or     al,0xba
  4245c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245c4:	sub    al,0xd4
  4245c6:	jmp    0x4245e0
  4245c8:	pop    ebx
  4245c9:	dec    ebx
  4245ca:	cld    
  4245cb:	daa    
  4245cc:	or     al,0xdc
  4245ce:	cmp    eax,0x6fceaec5
  4245d3:	out    dx,eax
  4245d4:	sub    ch,dh
  4245d6:	adc    eax,0x705cf044
  4245db:	jo     0x424613
  4245dd:	inc    ebx
  4245de:	pusha  
  4245df:	mov    ebx,0x5fee80eb
  4245e4:	or     al,0xd6
  4245e6:	xor    DWORD PTR [ebx+0x61],0xb
  4245ea:	pop    ebx
  4245eb:	sub    eax,0xc587ad9e
  4245f0:	sub    eax,0x6b4b5c4d
  4245f5:	and    DWORD PTR [esp+eax*8-0x5c],ebx
  4245f9:	into   
  4245fa:	inc    ebp
  4245fb:	mov    WORD PTR [esi],cs
  4245fd:	mov    dh,0x93
  4245ff:	push   es
  424600:	add    eax,edx
  424602:	or     eax,0x853e877f
  424607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424608:	leave  
  424609:	push   ss
  42460a:	aam    0x44
  42460c:	jb     0x424636
  42460e:	mov    dl,0x6b
  424610:	out    dx,eax
  424611:	sbb    eax,0xf155e934
  424616:	mov    dh,0x46
  424618:	push   0xacdcaf17
  42461d:	int3   
  42461e:	push   0x4d
  424620:	inc    edi
  424621:	ret    0x4824
  424624:	imul   esp,DWORD PTR [edi+0xc],0x9395012e
  42462b:	pop    edx
  42462c:	in     eax,0xa1
  42462e:	mov    eax,ds:0xf01186b8
  424633:	pop    ebx
  424634:	inc    edi
  424635:	aas    
  424636:	sub    eax,0xddedc6c0
  42463b:	into   
  42463c:	daa    
  42463d:	in     eax,dx
  42463e:	xchg   BYTE PTR [ebx+0x68],ah
  424641:	pop    es
  424642:	sub    al,0x7d
  424644:	jmp    0x72359b85
  424649:	ret    
  42464a:	lahf   
  42464b:	adc    BYTE PTR [edi+0x4],0xb8
  42464f:	out    0x7c,eax
  424651:	or     eax,0x1022617a
  424656:	fwait
  424657:	xchg   ebp,eax
  424658:	cld    
  424659:	add    eax,DWORD PTR [ecx]
  42465b:	loop   0x424644
  42465d:	rol    DWORD PTR [eax-0x29],1
  424660:	cld    
  424661:	fistp  QWORD PTR [ebp+0x27]
  424664:	dec    eax
  424665:	xchg   esp,eax
  424666:	ds aaa 
  424668:	sahf   
  424669:	dec    ebp
  42466a:	stc    
  42466b:	iret   
  42466c:	pop    edx
  42466d:	arpl   WORD PTR [esi],dx
  42466f:	popf   
  424670:	xor    BYTE PTR [ebp-0x23de29a],cl
  424676:	mov    esp,0xa4e27842
  42467b:	jnp    0x42465d
  42467d:	xchg   ebx,eax
  42467e:	sbb    eax,ebp
  424680:	jno    0x424644
  424682:	call   0xb218ee7f
  424687:	or     al,0x3d
  424689:	(bad)  
  42468a:	lahf   
  42468b:	test   eax,0xffe75f39
  424690:	(bad)  
  424691:	dec    ebp
  424692:	test   eax,0x7c56e2
  424697:	and    DWORD PTR [esi-0x1987912d],esp
  42469d:	adc    DWORD PTR [esp+edi*2-0x495c1059],edx
  4246a4:	loop   0x424633
  4246a6:	mov    dh,0x5c
  4246a8:	mov    al,ds:0x47dd0917
  4246ad:	adc    eax,0xee9a831
  4246b2:	pop    edi
  4246b3:	push   ss
  4246b4:	jmp    0x85f5a3bc
  4246b9:	shr    BYTE PTR [esi+0xfd60559],1
  4246bf:	xchg   ebx,eax
  4246c0:	sub    al,0xdc
  4246c2:	hlt    
  4246c3:	test   BYTE PTR [ebx+0x68],bh
  4246c6:	adc    edi,0xfd3c162a
  4246cc:	mov    edi,0x6d707a4c
  4246d1:	push   cs
  4246d2:	jo     0x424686
  4246d4:	xchg   ecx,eax
  4246d5:	inc    ebx
  4246d6:	sub    bh,bl
  4246d8:	mov    esi,0x80b5c769
  4246dd:	ret    
  4246de:	inc    edx
  4246df:	jp     0x4246c0
  4246e1:	jp     0x424701
  4246e3:	push   ecx
  4246e4:	push   esi
  4246e5:	cmp    eax,0x4ac79610
  4246ea:	fidiv  WORD PTR ds:0x8213d3f2
  4246f0:	xor    BYTE PTR [esp+edi*1],cl
  4246f3:	loop   0x42469a
  4246f5:	add    BYTE PTR [ebp-0x74],bl
  4246f8:	push   eax
  4246f9:	in     al,0xdb
  4246fb:	popf   
  4246fc:	or     al,0x3d
  4246fe:	cdq    
  4246ff:	mov    eax,0xd587e5e8
  424704:	inc    esp
  424705:	ss ss push ds
  424708:	cdq    
  424709:	xchg   ebx,edi
  42470b:	into   
  42470c:	mov    dh,0x10
  42470e:	call   FWORD PTR [ecx+0x4e08df62]
  424714:	fisttp DWORD PTR [ebx]
  424716:	mul    eax
  424718:	bound  edi,QWORD PTR [esi-0x59a90c76]
  42471e:	je     0x4246d7
  424720:	fmul   QWORD PTR [ebp+ecx*4-0x2]
  424724:	inc    ecx
  424725:	icebp  
  424726:	xchg   esp,eax
  424727:	push   eax
  424728:	fild   DWORD PTR [ebx+edx*8+0x316533d2]
  42472f:	jmp    0x366d:0x9fb882ec
  424736:	adc    eax,0xcce99526
  42473b:	cmp    ch,BYTE PTR [esi]
  42473d:	aad    0xfd
  42473f:	cdq    
  424740:	and    DWORD PTR [ecx+eax*4+0x2c3b388e],ebp
  424747:	mov    WORD PTR ds:0x4f130349,?
  42474d:	pop    ss
  42474e:	push   esp
  42474f:	test   al,0x99
  424751:	and    ch,BYTE PTR [ebp+0x7e]
  424754:	or     al,0x51
  424756:	loop   0x424759
  424758:	add    ch,dl
  42475a:	lods   eax,DWORD PTR ds:[esi]
  42475b:	jae    0x4247b7
  42475d:	sbb    ch,BYTE PTR [esi]
  42475f:	dec    ebp
  424760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424761:	cmp    BYTE PTR [ebx+0x559405f6],dl
  424767:	mov    ah,0x89
  424769:	adc    al,0x8d
  42476b:	into   
  42476c:	xchg   ebp,eax
  42476d:	mov    bh,BYTE PTR [di+0x12]
  424771:	fxch   st(3)
  424773:	xor    eax,0x1edcabe4
  424778:	in     eax,0xad
  42477a:	in     al,dx
  42477b:	fldenv [ecx-0x19]
  42477e:	or     ch,BYTE PTR [eax-0x38d2e1b3]
  424784:	loopne 0x424754
  424786:	push   0xffffff89
  424788:	aam    0x35
  42478a:	or     eax,DWORD PTR [esi+eax*2-0xd]
  42478e:	shl    ah,1
  424790:	sar    dh,0x66
  424793:	(bad)  
  424794:	lods   eax,DWORD PTR ds:[esi]
  424795:	push   DWORD PTR ds:0xa02bd5eb
  42479b:	jg     0x424744
  42479d:	pop    edi
  42479e:	and    dl,dh
  4247a0:	sti    
  4247a1:	push   ebp
  4247a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247a3:	dec    ebp
  4247a4:	ins    BYTE PTR es:[edi],dx
  4247a5:	sbb    ecx,DWORD PTR es:[esp+eax*1-0x57]
  4247aa:	mov    bh,0xfc
  4247ac:	pushf  
  4247ad:	aad    0x4
  4247af:	or     eax,0x8fce4d47
  4247b4:	pop    esp
  4247b5:	aas    
  4247b6:	or     DWORD PTR [eax+0x73b2212c],edx
  4247bc:	bound  ecx,QWORD PTR [ecx]
  4247be:	jb     0x4247ed
  4247c0:	sbb    BYTE PTR [edx-0x636e9eea],ch
  4247c6:	je     0x424771
  4247c8:	addr16 pop ebx
  4247ca:	popa   
  4247cb:	cmc    
  4247cc:	push   ecx
  4247cd:	jmp    0x424847
  4247cf:	out    0x55,al
  4247d1:	push   es
  4247d2:	popf   
  4247d3:	sbb    dh,BYTE PTR [ebx]
  4247d5:	scas   eax,DWORD PTR es:[edi]
  4247d6:	pop    ds
  4247d7:	pop    edx
  4247d9:	scas   eax,DWORD PTR es:[edi]
  4247da:	jno    0x4247a5
  4247dc:	cmp    eax,0x2f886d33
  4247e1:	sti    
  4247e2:	dec    edi
  4247e3:	add    ebp,edi
  4247e5:	cmp    BYTE PTR [eax+ecx*2-0x5f],dh
  4247e9:	inc    esp
  4247ea:	push   ds
  4247eb:	ror    BYTE PTR [edi+0x7a],cl
  4247ee:	sti    
  4247ef:	scas   al,BYTE PTR es:[edi]
  4247f0:	arpl   WORD PTR ds:0xa6086e04,sp
  4247f6:	cmp    DWORD PTR [eax],ecx
  4247f8:	sub    eax,DWORD PTR [edx]
  4247fa:	rcr    dh,1
  4247fc:	int3   
  4247fd:	out    0x5b,eax
  4247ff:	sbb    bh,BYTE PTR [edi]
  424801:	cmc    
  424802:	nop
  424803:	loope  0x4247a1
  424805:	push   eax
  424806:	mov    BYTE PTR [edx+0x100f47e1],bl
  42480c:	mov    esi,0x8db47595
  424811:	dec    edi
  424812:	inc    ebp
  424813:	mov    ecx,0x220ee021
  424818:	and    BYTE PTR [edx-0x5ccebb6],bh
  42481e:	iret   
  42481f:	push   ecx
  424820:	pushf  
  424821:	cmc    
  424822:	adc    eax,0x7509b791
  424827:	cmp    DWORD PTR [edx+0x22eca430],0xffffffdd
  42482e:	js     0x424814
  424830:	fstp   QWORD PTR [ecx]
  424832:	rcl    DWORD PTR [edx*1-0x67c19f2a],0x9e
  42483a:	loope  0x42485f
  42483c:	push   esi
  42483d:	sbb    eax,0xaa36c165
  424842:	and    esp,DWORD PTR [esp+ecx*8+0x520e62ab]
  424849:	jno    0x4247e4
  42484b:	outs   dx,BYTE PTR ds:[esi]
  42484c:	(bad)  
  42484e:	in     eax,0x3a
  424850:	out    0x19,al
  424852:	add    DWORD PTR [ebx+0x508d244e],ebx
  424858:	int3   
  424859:	je     0x4247fa
  42485b:	(bad)  
  42485c:	fadd   QWORD PTR [edi+0x1e]
  42485f:	sbb    eax,0x5a8af183
  424864:	fnstsw WORD PTR gs:[edi+0x29f08f0d]
  42486b:	(bad)  
  42486c:	test   al,0x9a
  42486e:	jecxz  0x4248cf
  424870:	xchg   eax,ebp
  424872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424873:	bound  esi,QWORD PTR [ebx-0x1]
  424876:	dec    esi
  424877:	or     al,0x25
  424879:	pop    eax
  42487a:	pop    es
  42487b:	outs   dx,DWORD PTR ds:[esi]
  42487c:	sub    al,0x50
  42487e:	xor    al,0xd3
  424880:	mov    bl,0xf5
  424882:	push   ds
  424883:	in     al,0x61
  424885:	cmp    esi,DWORD PTR [ebx+0x5b]
  424888:	jbe    0x424843
  42488a:	in     al,0x9b
  42488c:	dec    eax
  42488d:	add    ch,0x41
  424890:	sub    BYTE PTR [esp+eiz*8],bl
  424893:	fisub  DWORD PTR [eax]
  424895:	mov    ah,0xa3
  424897:	lods   eax,DWORD PTR ds:[esi]
  424898:	sub    BYTE PTR [edi+0x4e],ah
  42489b:	(bad)  
  42489c:	and    al,bh
  42489e:	mov    edx,0xeae6c8b8
  4248a3:	push   0x45a0ad32
  4248a8:	lods   eax,DWORD PTR ds:[esi]
  4248a9:	clc    
  4248aa:	(bad)  
  4248ab:	xchg   esi,eax
  4248ac:	or     al,0xde
  4248ae:	call   0xbd85bb25
  4248b3:	xchg   bl,bl
  4248b5:	mov    cl,0x19
  4248b7:	cmc    
  4248b8:	jge    0x424859
  4248ba:	jbe    0x42491f
  4248bc:	cld    
  4248bd:	push   ds
  4248be:	pop    ebx
  4248bf:	jmp    0x42485b
  4248c1:	pop    ds
  4248c2:	mov    ebx,0xce1c1953
  4248c7:	mov    DWORD PTR [eax-0x61c848df],esp
  4248cd:	mov    edi,ebp
  4248cf:	inc    ecx
  4248d0:	lods   al,BYTE PTR ds:[esi]
  4248d1:	pop    ss
  4248d2:	xchg   DWORD PTR fs:[ebp+0x56],ebp
  4248d6:	mov    edi,0x4f43333d
  4248db:	or     eax,0x1347100f
  4248e0:	(bad)  
  4248e1:	imul   ebx,DWORD PTR [edi-0x17],0xc6a69100
  4248e8:	popf   
  4248e9:	sub    BYTE PTR [eax],ch
  4248eb:	jge    0x4248ef
  4248ed:	outs   dx,DWORD PTR ds:[esi]
  4248ee:	std    
  4248ef:	fsubr  QWORD PTR [edi+esi*2]
  4248f2:	xor    DWORD PTR [edi],esp
  4248f4:	and    DWORD PTR [ebx+0x2d],edx
  4248f7:	pop    ebp
  4248f8:	lds    ebp,FWORD PTR [eax]
  4248fa:	ds fwait
  4248fc:	or     bh,dh
  4248fe:	ins    BYTE PTR es:[edi],dx
  4248ff:	add    al,0x23
  424901:	mov    bl,0xb
  424903:	pop    esi
  424904:	mov    ch,0xb3
  424906:	or     DWORD PTR [edi],ebx
  424908:	out    0xe8,al
  42490a:	adc    al,0x8
  42490c:	aad    0xec
  42490e:	ja     0x424949
  424910:	add    eax,0xfc302d4d
  424915:	pop    es
  424916:	mov    al,0x99
  424918:	imul   ebx,DWORD PTR [esi+0x6],0x2c051e3c
  42491f:	mov    edx,0x5a59d3fb
  424924:	lahf   
  424925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424926:	pusha  
  424927:	inc    edi
  424928:	sub    eax,esi
  42492a:	inc    esp
  42492b:	(bad)  
  42492c:	in     eax,0x0
  42492e:	add    BYTE PTR [eax],al
  424930:	add    BYTE PTR [eax],al
  424932:	adc    ecx,DWORD PTR [ebp-0x104094d7]
  424938:	push   ebx
  424939:	std    
  42493a:	and    ebp,DWORD PTR [ebx-0x25]
  42493d:	(bad)  
  42493e:	jns    0x4248d8
  424940:	push   edi
  424941:	xchg   ecx,eax
  424942:	or     edx,eax
  424944:	add    DWORD PTR [eax],eax
  424946:	repz add al,0x0
  424949:	add    BYTE PTR [edi-0x76],bl
  42494c:	out    dx,eax
  42494d:	es mov bh,0x11
  424950:	(bad)  
  424951:	cmp    BYTE PTR ds:0x2ccb0aa4,ch
  424957:	dec    esp
  424958:	jge    0x42495f
  42495a:	mov    al,0x4b
  42495c:	mov    ah,dl
  42495e:	sub    DWORD PTR [ecx-0x5e],ebx
  424961:	jp     0x424931
  424963:	jge    0x424948
  424965:	add    eax,0xafb90a44
  42496a:	pop    esp
  42496b:	cli    
  42496c:	adc    eax,0x4670fc17
  424971:	pop    ss
  424972:	mov    al,0x58
  424974:	sub    eax,0x59ac03fe
  424979:	pop    ebx
  42497a:	dec    ecx
  42497b:	adc    bh,BYTE PTR [esi]
  42497d:	mov    esp,0x35235d57
  424982:	xor    DWORD PTR [edi],ebx
  424984:	in     al,0x5
  424986:	enter  0x6270,0x64
  42498a:	push   ebx
  42498b:	cs ins DWORD PTR es:[edi],dx
  42498d:	mul    DWORD PTR [ebx-0x5886d539]
  424993:	das    
  424994:	or     al,0x9d
  424996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424997:	(bad)  
  424998:	aam    0x99
  42499a:	adc    DWORD PTR [ebx-0x6],esi
  42499d:	aad    0xae
  42499f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249a0:	mov    eax,0xe21d5a9
  4249a5:	mov    edi,0x52641a26
  4249aa:	dec    ebx
  4249ab:	fwait
  4249ac:	aam    0xc6
  4249ae:	out    0x4b,al
  4249b0:	adc    DWORD PTR [edi+edi*1],ebp
  4249b3:	clc    
  4249b4:	ret    0xbcdb
  4249b7:	jne    0x42499f
  4249b9:	push   eax
  4249ba:	stos   DWORD PTR es:[edi],eax
  4249bb:	push   ebp
  4249bc:	add    esi,esp
  4249be:	nop
  4249bf:	aam    0x90
  4249c1:	adc    DWORD PTR [eax-0x62],eax
  4249c4:	fbstp  TBYTE PTR [ebx]
  4249c6:	mov    esi,0x9c5ab3e5
  4249cb:	xor    eax,0x6d9a52f2
  4249d0:	jp     0x424959
  4249d2:	xchg   BYTE PTR [eax+0x5f],al
  4249d5:	and    BYTE PTR [edx],bh
  4249d7:	imul   ebx,DWORD PTR [ebx-0x1353c18c],0x1b50fbc4
  4249e1:	pop    esi
  4249e2:	outs   dx,BYTE PTR ds:[esi]
  4249e3:	rcr    BYTE PTR [ebx+ebx*2-0x49],1
  4249e7:	pop    edi
  4249e8:	and    al,0x71
  4249ea:	inc    esp
  4249eb:	sbb    DWORD PTR [ebx+edx*2],ebx
  4249ee:	int    0x68
  4249f0:	dec    esi
  4249f1:	iret   
  4249f2:	stos   DWORD PTR es:[edi],eax
  4249f3:	adc    eax,0x1c987c7a
  4249f8:	dec    esi
  4249f9:	mov    esp,0x1ae75ef0
  4249fe:	jbe    0x424a50
  424a00:	dec    esp
  424a01:	cmp    ecx,DWORD PTR [edx-0x2ea1e4ee]
  424a07:	enter  0xc637,0xdd
  424a0b:	ret    
  424a0c:	mov    al,ds:0x8c9f6557
  424a11:	and    eax,0x1a356f36
  424a16:	out    0xc5,al
  424a18:	xchg   DWORD PTR [esi],esi
  424a1a:	jle    0x424a97
  424a1c:	mov    esp,0xb887b92f
  424a21:	inc    eax
  424a22:	mov    al,0x8b
  424a24:	or     ch,BYTE PTR [eax+0x7e]
  424a27:	push   cs
  424a28:	push   ebp
  424a29:	xchg   ebp,eax
  424a2a:	ja     0x4249ee
  424a2c:	xlat   BYTE PTR ds:[ebx]
  424a2d:	inc    esi
  424a2e:	ds jae 0x4249bd
  424a31:	addr16 mov ebp,0x2f53dcc8
  424a37:	loope  0x424a03
  424a39:	shr    al,0x2b
  424a3c:	inc    edx
  424a3d:	rcr    ah,0x57
  424a40:	rol    BYTE PTR [ebx+0x4f],cl
  424a43:	pop    ss
  424a44:	jo     0x424a11
  424a46:	or     al,0x61
  424a48:	mov    bh,0xf6
  424a4a:	aad    0x46
  424a4c:	sahf   
  424a4d:	hlt    
  424a4e:	es retf 
  424a50:	ins    DWORD PTR es:[edi],dx
  424a51:	in     eax,0x16
  424a53:	pop    eax
  424a54:	lock sahf 
  424a56:	or     BYTE PTR [ecx+ecx*8-0x2cdca4e8],bl
  424a5d:	xchg   esi,eax
  424a5e:	cs inc ebp
  424a60:	je     0x424a4d
  424a62:	xchg   BYTE PTR [eax-0x6b],ch
  424a65:	mov    eax,ds:0x7ebfe2aa
  424a6a:	mov    bl,0x39
  424a6c:	retf   
  424a6d:	add    edi,edi
  424a6f:	outs   dx,BYTE PTR ds:[esi]
  424a70:	xor    bl,bh
  424a72:	xchg   ebp,eax
  424a73:	notrack call DWORD PTR [ebx-0x511a6574]
  424a7a:	or     al,BYTE PTR [edx-0x5]
  424a7d:	in     al,dx
  424a7e:	jmp    0x5ccc:0xf4de9508
  424a85:	sub    ebp,DWORD PTR [esi+0x6b]
  424a88:	mov    esp,DWORD PTR [eax]
  424a8a:	cmp    edx,edx
  424a8c:	rcl    BYTE PTR [eax-0x24],0x36
  424a90:	pop    eax
  424a92:	jne    0x424af1
  424a94:	aam    0x8b
  424a96:	or     al,0x43
  424a98:	mov    dl,0x81
  424a9a:	and    BYTE PTR [ebx-0x7f15bb1d],bl
  424aa0:	(bad)  
  424aa1:	sub    ebx,esp
  424aa3:	mov    ah,0x13
  424aa5:	ins    DWORD PTR es:[edi],dx
  424aa6:	ss push esp
  424aa8:	sahf   
  424aa9:	pop    esi
  424aaa:	es shl esi,cl
  424aad:	pop    ds
  424aae:	retf   
  424aaf:	pop    ecx
  424ab0:	push   esi
  424ab1:	cmp    al,0x65
  424ab3:	cmc    
  424ab4:	jbe    0x424a77
  424ab6:	lods   al,BYTE PTR ds:[esi]
  424ab7:	xor    al,0x6f
  424ab9:	jl     0x424ab5
  424abb:	idiv   BYTE PTR [edi-0x542bb4f6]
  424ac1:	mov    bh,0x9f
  424ac3:	push   ss
  424ac4:	iret   
  424ac5:	inc    edx
  424ac6:	inc    esi
  424ac7:	(bad)  
  424ac8:	cmp    al,0x2a
  424aca:	jbe    0x424b3c
  424acc:	and    DWORD PTR [ebx+0x5a4b9138],eax
  424ad2:	shl    DWORD PTR [esi],cl
  424ad4:	call   0x73fc:0xef9d3006
  424adb:	clc    
  424adc:	or     BYTE PTR [ecx+0x13],cl
  424adf:	es mov cl,0x83
  424ae2:	or     DWORD PTR [edi+0x68],ecx
  424ae5:	xor    eax,0x30a05a04
  424aea:	or     DWORD PTR [edi],ebp
  424aec:	fwait
  424aed:	sub    ebp,0x5109b573
  424af3:	out    dx,al
  424af4:	jmp    0x424a7b
  424af6:	in     al,dx
  424af7:	sub    bl,0xac
  424afa:	pop    edi
  424afb:	jle    0x424b10
  424afd:	test   eax,0xab732775
  424b02:	aas    
  424b03:	mov    DWORD PTR [edi-0xdf62fc5],eax
  424b09:	js     0x424b47
  424b0b:	popa   
  424b0c:	aam    0x3c
  424b0e:	mov    ecx,0xa6164700
  424b13:	dec    esi
  424b14:	mov    ecx,0xaf5b3653
  424b19:	in     al,0x82
  424b1b:	xor    edx,DWORD PTR [edx-0x2b7ddbaa]
  424b21:	mov    ds:0x8f12f7ed,eax
  424b26:	imul   edx,DWORD PTR [ebp+0xc652dc7],0x65
  424b2d:	push   ss
  424b2e:	outs   dx,BYTE PTR ds:[esi]
  424b2f:	cmp    DWORD PTR [edi-0x756eeef0],edi
  424b35:	xchg   esp,eax
  424b36:	dec    edi
  424b37:	mov    esp,0xfa3db8b8
  424b3c:	ret    
  424b3d:	rcr    DWORD PTR [ebx+0x37],cl
  424b40:	jg     0x424af5
  424b42:	pop    esi
  424b43:	dec    edx
  424b45:	inc    ebx
  424b46:	mov    ebx,DWORD PTR [eax+0x63]
  424b49:	das    
  424b4a:	lds    eax,FWORD PTR [ebp+0x59]
  424b4d:	stos   BYTE PTR es:[edi],al
  424b4e:	das    
  424b4f:	and    al,0x5c
  424b51:	sub    esp,0x3228e4e0
  424b57:	mov    edx,0x7cd8b3e6
  424b5c:	xchg   ebx,eax
  424b5d:	sub    al,BYTE PTR [edi-0x2f]
  424b60:	jns    0x424b18
  424b62:	cmp    al,0xfc
  424b64:	les    edx,FWORD PTR [ecx-0x3cbbaf11]
  424b6a:	sbb    ecx,DWORD PTR [esi]
  424b6c:	fs out dx,al
  424b6e:	je     0x424be7
  424b70:	mov    cl,0x27
  424b72:	test   BYTE PTR [esi+0x2b],dl
  424b75:	pop    ebp
  424b76:	mov    ds,ebx
  424b78:	xor    ebp,ecx
  424b7a:	or     eax,0x7b03c788
  424b7f:	mov    ecx,0x4f50db86
  424b84:	rol    ch,cl
  424b86:	mov    ds:0x1aa97c7c,eax
  424b8b:	cwde   
  424b8c:	nop
  424b8d:	sub    dh,al
  424b8f:	and    eax,DWORD PTR [ebx+0x36817d58]
  424b95:	mov    bl,0xd
  424b97:	stos   DWORD PTR es:[edi],eax
  424b98:	rcr    bl,0x8e
  424b9b:	or     al,0x2e
  424b9d:	rcl    eax,1
  424b9f:	ja     0x424bf6
  424ba1:	mov    dl,0x3d
  424ba3:	mov    al,ds:0x879f4e8c
  424ba8:	(bad)  
  424baa:	ficom  DWORD PTR [eax-0x29]
  424bad:	or     BYTE PTR [edi+0x2fa68dd3],0x2c
  424bb4:	out    0x31,eax
  424bb6:	scas   eax,DWORD PTR es:[edi]
  424bb7:	rcl    esp,cl
  424bb9:	sbb    eax,0x3b97d9d8
  424bbe:	ror    al,cl
  424bc0:	rol    ebx,cl
  424bc2:	(bad)  
  424bc4:	in     eax,dx
  424bc5:	xor    ah,BYTE PTR [ecx]
  424bc7:	push   es
  424bc8:	pop    eax
  424bc9:	test   ebx,esp
  424bcb:	push   ebp
  424bcc:	or     eax,0x80e3b28c
  424bd1:	ins    BYTE PTR es:[edi],dx
  424bd2:	xchg   BYTE PTR [eax-0x20],bl
  424bd5:	xchg   ebp,eax
  424bd6:	cli    
  424bd7:	lock sar bh,cl
  424bda:	jnp    0x424c39
  424bdc:	add    esi,DWORD PTR [ecx-0x3200b9f]
  424be2:	inc    ecx
  424be3:	stos   BYTE PTR es:[edi],al
  424be4:	daa    
  424be5:	aas    
  424be6:	jmp    0x14dabcc4
  424beb:	and    ch,BYTE PTR [ecx]
  424bed:	(bad)  
  424bee:	xchg   ebp,eax
  424bef:	mov    esi,0xeb5a42cf
  424bf4:	shl    DWORD PTR [ecx+esi*2],1
  424bf7:	push   eax
  424bf8:	inc    edi
  424bf9:	xor    DWORD PTR [ebx+esi*4-0x75],ebp
  424bfd:	enter  0x25b2,0xad
  424c01:	(bad)  
  424c02:	mov    esp,0x5a841b74
  424c07:	add    al,0x7e
  424c09:	lock fadd st(0),st
  424c0c:	mov    ebp,0x4020fd1d
  424c11:	cmc    
  424c12:	clc    
  424c13:	hlt    
  424c14:	push   edi
  424c15:	ja     0x424c06
  424c17:	cmc    
  424c18:	inc    ebx
  424c19:	sub    DWORD PTR [eax+edx*1-0x47a0a754],edi
  424c20:	xor    al,0xb2
  424c23:	fnstenv [ecx]
  424c25:	lahf   
  424c26:	ficom  WORD PTR [ebp-0x21f29537]
  424c2c:	mov    ds:0x9ac26d0a,al
  424c31:	push   0x8e06e04f
  424c36:	dec    ebp
  424c37:	out    dx,eax
  424c38:	ss sti 
  424c3a:	ds icebp 
  424c3c:	inc    eax
  424c3d:	jg     0x424be6
  424c3f:	sub    BYTE PTR [edi-0x3d],ch
  424c42:	mov    dh,ah
  424c44:	or     al,0xc9
  424c46:	ret    0xbd50
  424c49:	clc    
  424c4a:	repnz lods al,BYTE PTR ds:[esi]
  424c4c:	es clc 
  424c4e:	ja     0x424cab
  424c50:	or     BYTE PTR [edi+eax*8-0x5ad51235],bl
  424c57:	jmp    0xcd15:0x6d3045d7
  424c5e:	mov    eax,ds:0xce192d06
  424c63:	adc    al,bl
  424c65:	dec    edi
  424c66:	cmp    cl,bh
  424c68:	add    DWORD PTR [ebp-0x66d1df92],ebp
  424c6e:	mov    bl,BYTE PTR [edi+0xe9da548]
  424c74:	ja     0x424c2f
  424c76:	push   0xffffffda
  424c78:	xor    DWORD PTR [eax+0xa],ecx
  424c7b:	or     al,0xa
  424c7d:	pop    edx
  424c7e:	mov    esp,0x9840278e
  424c83:	pop    edi
  424c84:	and    al,ah
  424c86:	sbb    eax,0x42b2a63f
  424c8b:	jno    0x424c36
  424c8d:	dec    edx
  424c8e:	jle    0x424d00
  424c90:	clc    
  424c91:	sbb    ah,bh
  424c93:	push   esp
  424c94:	test   al,0xf3
  424c96:	push   edi
  424c97:	inc    esp
  424c98:	icebp  
  424c99:	enter  0xa6b9,0x9c
  424c9d:	dec    ebx
  424c9e:	nop
  424c9f:	sbb    ah,BYTE PTR [ebp+0x39]
  424ca2:	push   0x34029d2a
  424ca7:	fs cmp ch,bl
  424caa:	pushf  
  424cab:	retf   0xf73
  424cae:	sbb    al,0xdf
  424cb0:	mov    ebp,0xe43cfad6
  424cb5:	pop    eax
  424cb6:	nop
  424cb7:	lods   eax,DWORD PTR ds:[esi]
  424cb8:	out    dx,eax
  424cb9:	(bad)  
  424cba:	bound  eax,QWORD PTR [ecx-0x553db124]
  424cc0:	or     al,0x67
  424cc2:	pushf  
  424cc3:	pop    eax
  424cc4:	add    al,0x17
  424cc6:	sub    esi,DWORD PTR [ebx+eiz*4+0x1452a55e]
  424ccd:	popf   
  424cce:	int3   
  424ccf:	sbb    edi,0x3dc2b0b9
  424cd5:	inc    esi
  424cd6:	mov    BYTE PTR [edx-0x1d55ce86],dh
  424cdc:	mov    ds:0x5383cc36,al
  424ce1:	mov    ds:0x5156094b,eax
  424ce6:	inc    ebp
  424ce7:	cli    
  424ce8:	aam    0xf6
  424cea:	mov    eax,ds:0x2363ccf0
  424cef:	push   ebx
  424cf0:	gs call 0x381e:0xd47f0073
  424cf8:	into   
  424cf9:	push   eax
  424cfa:	pusha  
  424cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cfc:	cli    
  424cfd:	out    0x2e,eax
  424cff:	xor    al,BYTE PTR [ebp+0x60dd5cff]
  424d05:	rcl    DWORD PTR [edx-0x5b],1
  424d08:	mov    ds:0x23c86cad,eax
  424d0d:	adc    esi,DWORD PTR [eax+0x14]
  424d10:	ins    DWORD PTR es:[edi],dx
  424d11:	and    DWORD PTR [ebx-0xf804802],0x67
  424d18:	pop    ds
  424d19:	cdq    
  424d1a:	mov    bp,WORD PTR [esi+ecx*1+0x52696b5a]
  424d22:	xlat   BYTE PTR ds:[ebx]
  424d23:	mov    esi,0xcc680af4
  424d28:	and    eax,0x55993f6c
  424d2d:	and    BYTE PTR [ecx],ch
  424d2f:	sub    DWORD PTR [ebx+esi*2],edx
  424d32:	xchg   ecx,eax
  424d33:	jecxz  0x424d54
  424d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d36:	mov    BYTE PTR [eax+0x42],cl
  424d39:	std    
  424d3a:	dec    edi
  424d3b:	jmp    0x383a33c9
  424d40:	push   esi
  424d41:	mov    ebp,edi
  424d43:	mov    bl,0x84
  424d45:	mov    ds:0x66dd455,eax
  424d4a:	cmp    ch,cl
  424d4c:	xchg   ebx,eax
  424d4d:	scas   eax,DWORD PTR es:[edi]
  424d4e:	aaa    
  424d4f:	push   ds
  424d50:	mov    dl,ah
  424d52:	push   0x51
  424d54:	push   ds
  424d55:	push   ds
  424d56:	clc    
  424d57:	jne    0x424daf
  424d59:	ror    DWORD PTR [edx-0x33a2a9cd],0x8d
  424d60:	cwde   
  424d61:	adc    al,0x7e
  424d63:	mov    BYTE PTR [ebx+0xa],dh
  424d66:	adc    BYTE PTR [edx+0x11aed963],dh
  424d6c:	push   esp
  424d6d:	adc    dh,BYTE PTR [ebp-0x72]
  424d70:	mov    ecx,eax
  424d72:	lods   eax,DWORD PTR ds:[esi]
  424d73:	xchg   BYTE PTR [ebp-0x4d],bl
  424d76:	add    ah,ch
  424d78:	xchg   edi,eax
  424d79:	out    dx,eax
  424d7a:	ss out dx,al
  424d7c:	test   DWORD PTR [edx-0x45],edx
  424d7f:	ss stos DWORD PTR es:[edi],eax
  424d81:	fwait
  424d82:	adc    al,0xa2
  424d84:	push   edx
  424d85:	(bad)  [edx-0x63]
  424d88:	add    esi,0xffffff9a
  424d8b:	jmp    0x3d91dedd
  424d90:	loop   0x424db9
  424d92:	leave  
  424d93:	aas    
  424d94:	sti    
  424d95:	sar    BYTE PTR [edi],0x2e
  424d98:	dec    esp
  424d99:	or     BYTE PTR [ebx+ecx*2+0x1403aa8e],cl
  424da0:	test   BYTE PTR ds:0x484cd6a5,0xb0
  424da7:	cmp    al,0x84
  424da9:	out    0x7c,al
  424dab:	cmp    eax,0xeadf951e
  424db0:	mov    BYTE PTR [ebx+0x3e],cl
  424db3:	add    al,0xf7
  424db5:	cmp    al,BYTE PTR [esi]
  424db7:	cld    
  424db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424db9:	push   es
  424dba:	aam    0xad
  424dbc:	push   ds
  424dbd:	shl    BYTE PTR [edi-0x61],cl
  424dc0:	lods   al,BYTE PTR ds:[esi]
  424dc1:	push   es
  424dc2:	shl    al,0x50
  424dc5:	icebp  
  424dc6:	imul   DWORD PTR [eax+ecx*1-0x23c5cd32]
  424dcd:	mov    dl,0x68
  424dcf:	pop    ss
  424dd0:	mov    WORD PTR [edx],cs
  424dd2:	dec    esi
  424dd3:	scas   al,BYTE PTR es:[edi]
  424dd4:	mov    ebp,edx
  424dd6:	push   edi
  424dd7:	daa    
  424dd8:	test   al,ch
  424dda:	rol    BYTE PTR [eax],cl
  424ddc:	cmp    BYTE PTR [eax+eiz*2-0x30a567e5],cl
  424de3:	les    ebx,FWORD PTR [edi]
  424de5:	fwait
  424de6:	push   edx
  424de7:	lock jl 0x424de0
  424dea:	out    0x51,al
  424dec:	aad    0x4e
  424dee:	xor    di,WORD PTR [edx]
  424df1:	cmc    
  424df2:	dec    eax
  424df3:	iret   
  424df4:	pushf  
  424df5:	(bad)  
  424df6:	xor    DWORD PTR [ecx-0x5],ebp
  424df9:	out    0xe6,eax
  424dfb:	mov    esi,0xe917fb92
  424e00:	inc    esi
  424e01:	push   0xffffff97
  424e03:	in     al,0x50
  424e05:	mov    ebx,0x764b3d4d
  424e0a:	call   0xc5df:0xa6dda5d6
  424e11:	pop    ebx
  424e12:	push   ss
  424e13:	dec    ebp
  424e14:	jge    0x424e6f
  424e16:	jnp    0x424e66
  424e18:	adc    al,0x1
  424e1a:	test   BYTE PTR [ebp-0x73c36687],cl
  424e20:	sbb    eax,0xbab12e62
  424e25:	pop    ecx
  424e26:	jae    0x424e0b
  424e28:	pop    ss
  424e29:	sti    
  424e2a:	push   edi
  424e2b:	pop    esp
  424e2c:	je     0x424e2d
  424e2e:	into   
  424e2f:	mov    ebp,0x53df5ef4
  424e34:	jg     0x424eb4
  424e36:	mov    dl,0x3c
  424e38:	lea    ebp,[ecx+edi*4+0x7c]
  424e3c:	xor    eax,DWORD PTR [eax]
  424e3e:	add    BYTE PTR [eax],al
  424e40:	add    BYTE PTR [eax],al
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     esp,ebp
  424e4f:	inc    edi
  424e50:	xchg   ebx,eax
  424e51:	cld    
  424e52:	cld    
  424e53:	mov    BYTE PTR [ecx],0x0
  424e56:	repz add al,0x0
  424e59:	add    bl,cl
  424e5b:	clc    
  424e5c:	mov    ah,0x73
  424e5e:	shl    DWORD PTR [ebx-0x4eb20405],0xaf
  424e65:	add    BYTE PTR [ecx-0x4f],al
  424e68:	cmp    BYTE PTR [ecx],al
  424e6a:	jno    0x424ecf
  424e6c:	mov    ss,WORD PTR [ebx+esi*8]
  424e6f:	loop   0x424e37
  424e71:	mov    ebx,0x4da0c30f
  424e76:	icebp  
  424e77:	xchg   ebx,eax
  424e78:	(bad)  
  424e79:	sub    DWORD PTR [ebp+0x52],ebx
  424e7c:	pop    eax
  424e7d:	aas    
  424e7e:	push   esp
  424e7f:	adc    eax,0x168eecf3
  424e84:	mov    BYTE PTR [ebx-0x63],bl
  424e87:	sbb    eax,0x72796ceb
  424e8c:	jo     0x424e9a
  424e8e:	ror    BYTE PTR [eax+0x4f592ab8],0xf5
  424e95:	sub    BYTE PTR [ecx+0x64998d63],0x9
  424e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e9d:	sahf   
  424e9e:	jnp    0x424f04
  424ea0:	enter  0xbcca,0xeb
  424ea4:	repnz es bswap edx
  424ea8:	push   ebx
  424ea9:	shl    DWORD PTR [edx+0x3d],0xff
  424ead:	push   0x19
  424eaf:	sti    
  424eb0:	adc    DWORD PTR [edx+0x70d9921c],ebp
  424eb6:	into   
  424eb7:	or     eax,0xe5e22919
  424ebc:	loopne 0x424f38
  424ebe:	lahf   
  424ebf:	jge    0x424e5b
  424ec1:	and    dh,BYTE PTR [edi+ebp*4+0x71]
  424ec5:	sahf   
  424ec6:	imul   ebx,edx,0xfa47d09d
  424ecc:	push   esi
  424ecd:	xor    al,0x43
  424ecf:	sbb    eax,0xd7df6fb
  424ed4:	retf   0xead6
  424ed7:	in     eax,dx
  424ed8:	sahf   
  424ed9:	jb     0x424ebd
  424edb:	icebp  
  424edc:	mov    ds:0x4d693f9d,al
  424ee1:	sbb    esp,DWORD PTR [eax+0x5a]
  424ee4:	mov    esp,0x162c9f5a
  424ee9:	fisubr DWORD PTR [esi]
  424eeb:	lods   al,BYTE PTR ds:[esi]
  424eec:	(bad)  [edx+eiz*1]
  424eef:	imul   esi,DWORD PTR [ebp-0x7ea2331c],0xffffffa5
  424ef6:	inc    esp
  424ef7:	stc    
  424ef8:	stos   BYTE PTR es:[edi],al
  424ef9:	pushf  
  424efa:	ins    BYTE PTR es:[edi],dx
  424efb:	or     ebp,DWORD PTR [eax-0x21]
  424efe:	mov    edx,0x3c97daa2
  424f03:	pop    ebp
  424f04:	or     BYTE PTR [edi],bl
  424f06:	inc    edi
  424f07:	stos   BYTE PTR es:[edi],al
  424f08:	in     eax,0xad
  424f0a:	rol    BYTE PTR [ebx],1
  424f0c:	das    
  424f0d:	dec    ecx
  424f0e:	int    0xbc
  424f10:	mov    ebp,0xa7cca133
  424f15:	sbb    bh,BYTE PTR [edx-0x8]
  424f18:	sub    BYTE PTR [edi],al
  424f1a:	pop    ecx
  424f1b:	shr    BYTE PTR [eax-0x664ea9fb],0xca
  424f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f23:	gs gs ins BYTE PTR es:[edi],dx
  424f26:	or     bl,BYTE PTR [edx]
  424f28:	clc    
  424f29:	sbb    cl,BYTE PTR ds:0xc50919e5
  424f2f:	push   edi
  424f30:	xchg   ecx,eax
  424f31:	(bad)  ds:0x9042f4e7
  424f37:	jecxz  0x424f7b
  424f39:	(bad)  
  424f3a:	or     al,dh
  424f3c:	push   edx
  424f3d:	pop    esp
  424f3e:	fwait
  424f3f:	les    edx,FWORD PTR [edi+0x3b]
  424f42:	fcomp  DWORD PTR [eax-0xfb97afa]
  424f48:	out    0xe1,al
  424f4a:	cmp    eax,0x8e8efb63
  424f4f:	xlat   BYTE PTR ds:[ebx]
  424f50:	mov    al,0xa
  424f52:	sbb    al,0xf0
  424f54:	push   ebx
  424f55:	ss sub al,0x6d
  424f58:	sub    al,0x5b
  424f5a:	add    DWORD PTR [edx-0x2d86ede7],eax
  424f60:	sub    ecx,0x1464f659
  424f66:	pushf  
  424f67:	mov    bh,0xdf
  424f69:	sbb    al,0xbc
  424f6b:	stos   BYTE PTR es:[edi],al
  424f6c:	jg     0x424f28
  424f6e:	inc    eax
  424f6f:	test   eax,0xad12a712
  424f74:	ss sti 
  424f76:	sbb    ecx,DWORD PTR [esi]
  424f78:	cwde   
  424f79:	das    
  424f7a:	loop   0x424f5c
  424f7c:	dec    esp
  424f7d:	cwde   
  424f7e:	nop
  424f7f:	retf   
  424f80:	inc    ecx
  424f81:	clc    
  424f82:	fisubr DWORD PTR [eax+ebx*8-0x39254745]
  424f89:	test   eax,0xddaa7d3d
  424f8e:	xor    eax,0x277de537
  424f93:	pop    ds
  424f94:	and    al,BYTE PTR [edx+0x61ea252d]
  424f9a:	xor    BYTE PTR [esi-0x1c9ddf89],al
  424fa0:	shl    DWORD PTR [eax+0x6625bd2b],1
  424fa6:	mov    cl,0xdd
  424fa8:	adc    BYTE PTR [esi],0xd0
  424fab:	cmp    DWORD PTR [esi],esp
  424fad:	fs mov ch,0x11
  424fb0:	xor    cl,BYTE PTR [esi+esi*1]
  424fb3:	push   0x72
  424fb5:	dec    esi
  424fb6:	inc    esp
  424fb7:	xor    eax,0xaf73be77
  424fbc:	scas   eax,DWORD PTR es:[edi]
  424fbd:	dec    dx
  424fbf:	out    0x34,eax
  424fc1:	xchg   ebp,eax
  424fc2:	xor    DWORD PTR [ecx-0x6e],edx
  424fc5:	xor    eax,DWORD PTR [esi+0x48d8fb46]
  424fcb:	in     eax,dx
  424fcc:	sub    DWORD PTR [ebx+0x6e4c2b74],ebx
  424fd2:	inc    ebp
  424fd3:	jbe    0x42501a
  424fd5:	scas   eax,DWORD PTR es:[edi]
  424fd6:	inc    ebp
  424fd7:	daa    
  424fd8:	and    BYTE PTR [eax-0x21],dh
  424fdb:	iret   
  424fdc:	mov    dl,0x17
  424fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fdf:	fxtract 
  424fe1:	(bad)  
  424fe2:	sahf   
  424fe3:	mov    ebx,0x615a5229
  424fe8:	mov    dh,0x9d
  424fea:	not    edx
  424fec:	push   ebp
  424fed:	shl    DWORD PTR [ecx+0x4e],cl
  424ff0:	xor    al,0xa5
  424ff2:	pop    ecx
  424ff3:	jl     0x424f89
  424ff5:	ss push es
  424ff7:	in     al,dx
  424ff8:	cmc    
  424ff9:	pop    es
  424ffa:	xchg   ecx,eax
  424ffb:	jecxz  0x425013
  424ffd:	push   cs
  424ffe:	jp     0x42507e
  425000:	and    esi,esi
  425002:	cs sahf 
  425004:	xchg   edi,eax
  425005:	lock xor BYTE PTR [esi],bh
  425008:	repnz les esi,FWORD PTR [eax-0x2f]
  42500c:	in     al,0x8e
  42500e:	dec    esi
  42500f:	xchg   BYTE PTR [ebp-0x3d],bl
  425012:	imul   edx,DWORD PTR [ecx+ebx*2],0xfffffff1
  425016:	cdq    
  425017:	mov    ds:0x3cfa485f,al
  42501c:	cmp    esi,ebp
  42501e:	loop   0x424fd6
  425020:	daa    
  425021:	fstp   DWORD PTR [edx]
  425023:	loop   0x424ffd
  425025:	cmc    
  425026:	sub    DWORD PTR [ecx],0x5b
  425029:	pop    ebp
  42502a:	sbb    ch,BYTE PTR [ecx-0x2c]
  42502d:	sar    DWORD PTR [ecx+0x4ea6d541],cl
  425033:	sub    dh,cl
  425035:	adc    ebp,ebx
  425037:	add    eax,0xd675d6b4
  42503c:	pop    ds
  42503d:	jbe    0x4250a0
  42503f:	loope  0x425099
  425041:	inc    edx
  425042:	int    0x65
  425044:	cmp    BYTE PTR [esp+ebp*2],0xef
  425048:	mov    cl,0x96
  42504a:	or     ebp,DWORD PTR [ebp+0x5b]
  42504d:	es sub eax,0x2b2b9f2b
  425053:	xlat   BYTE PTR ds:[ebx]
  425054:	scas   al,BYTE PTR es:[edi]
  425055:	adc    al,0xa9
  425057:	ins    DWORD PTR es:[edi],dx
  425058:	dec    edi
  425059:	cmp    BYTE PTR ds:0x6fa21ac3,ah
  42505f:	js     0x424feb
  425061:	and    al,0x5e
  425063:	leave  
  425064:	pop    esp
  425065:	das    
  425066:	jo     0x42503a
  425068:	stc    
  425069:	sbb    cl,al
  42506b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42506c:	les    ebp,FWORD PTR [ebx]
  42506e:	push   0x916f125c
  425073:	ins    BYTE PTR es:[edi],dx
  425074:	adc    DWORD PTR [ebx-0x1afa0932],esi
  42507a:	xor    ch,BYTE PTR [edx-0x8]
  42507d:	idiv   BYTE PTR ds:0xbf300787
  425083:	test   eax,0xf364e8f2
  425088:	enter  0x2354,0xc6
  42508c:	sbb    DWORD PTR ds:0x91791ec3,ecx
  425092:	out    dx,eax
  425093:	cmp    DWORD PTR [ebx-0x1fee9cf1],edi
  425099:	push   ds
  42509a:	push   cs
  42509b:	add    dh,dh
  42509d:	pop    ebx
  42509e:	lock mov ah,BYTE PTR [edx+0x4]
  4250a2:	rcl    DWORD PTR [ecx-0x4b640315],cl
  4250a8:	idiv   BYTE PTR [edx+ecx*2+0x1dc00dce]
  4250af:	sti    
  4250b0:	push   dx
  4250b2:	in     eax,dx
  4250b3:	nop
  4250b4:	mov    edx,0x9aa60f81
  4250b9:	test   ebp,edi
  4250bb:	je     0x4250e8
  4250bd:	ss enter 0xb395,0x16
  4250c2:	sbb    ebp,edi
  4250c4:	shl    DWORD PTR [edx],1
  4250c6:	xchg   ebp,eax
  4250c7:	sbb    eax,0x985dd6d3
  4250cc:	leave  
  4250cd:	imul   esi,DWORD PTR [ecx-0x41b5057e],0x9e857bbf
  4250d7:	fisubr DWORD PTR [ecx]
  4250d9:	push   esp
  4250da:	nop
  4250db:	shl    edx,cl
  4250dd:	inc    ecx
  4250de:	inc    esp
  4250df:	les    eax,FWORD PTR [ebx-0x3d]
  4250e2:	aam    0xc9
  4250e4:	stos   BYTE PTR es:[edi],al
  4250e5:	arpl   WORD PTR [edi+ecx*2+0x7b2649c5],si
  4250ec:	cmc    
  4250ed:	inc    esp
  4250ee:	test   al,0x3c
  4250f0:	dec    esp
  4250f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250f2:	mov    WORD PTR [ecx],?
  4250f4:	das    
  4250f5:	(bad)  
  4250f6:	stc    
  4250f7:	jo     0x4250e0
  4250f9:	pminsw mm2,QWORD PTR [edx+0x87815a1]
  425100:	sbb    dh,ch
  425102:	mov    ecx,0x8adc8fe0
  425107:	adc    DWORD PTR [ebp-0x2a12ad32],eax
  42510d:	jbe    0x42509a
  42510f:	sub    eax,0x463f98e3
  425114:	dec    ebp
  425115:	dec    esi
  425116:	mov    dh,0x69
  425118:	xchg   edx,eax
  425119:	or     BYTE PTR [edx],dh
  42511b:	ja     0x4b20db1a
  425121:	jl     0x42516c
  425123:	mov    edx,ebx
  425125:	add    BYTE PTR [edx+0x6a],ah
  425128:	leave  
  425129:	push   cs
  42512a:	fadd   DWORD PTR [ebp-0x45]
  42512d:	repnz stos DWORD PTR es:[edi],eax
  42512f:	push   esp
  425130:	fimul  WORD PTR [eax-0x6d]
  425133:	call   FWORD PTR ds:0x3c02890c
  425139:	adc    BYTE PTR [eax],bl
  42513b:	retf   0x3a60
  42513e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42513f:	sbb    eax,0x201d6f6a
  425144:	mov    ebp,0xb96090a1
  425149:	xor    ch,BYTE PTR [ebx-0x66]
  42514c:	mul    BYTE PTR [edx+0x7a]
  42514f:	pop    ss
  425150:	sbb    BYTE PTR [eax+0x5ec7ef01],cl
  425156:	mov    bl,0x79
  425158:	aad    0x41
  42515a:	lea    edi,[esi]
  42515c:	jnp    0x425140
  42515e:	mov    dh,0x40
  425160:	sbb    esi,DWORD PTR [ecx+0x65fa2ac0]
  425166:	hlt    
  425167:	xchg   esp,edx
  425169:	stos   DWORD PTR es:[edi],eax
  42516a:	xchg   edi,eax
  42516b:	or     eax,0x51c69099
  425170:	ds in  al,0x86
  425173:	xchg   ebp,eax
  425174:	push   es
  425175:	js     0x4251bf
  425177:	push   edi
  425178:	or     BYTE PTR [ebp+0x41719279],bl
  42517e:	out    dx,eax
  42517f:	push   esi
  425180:	pop    edx
  425181:	push   ss
  425182:	push   edx
  425183:	jecxz  0x4251d7
  425185:	mov    bl,0x52
  425187:	in     al,dx
  425188:	mov    bh,0x99
  42518a:	jmp    0x699f:0x509cddff
  425191:	aad    0xd9
  425193:	adc    DWORD PTR [ebx+eiz*8+0x4ea4f873],ecx
  42519a:	out    dx,al
  42519b:	sub    BYTE PTR [edi-0x6200bf0d],ah
  4251a1:	and    al,0xa1
  4251a3:	mov    eax,DWORD PTR [edi-0x16c9a00c]
  4251a9:	and    ebp,edi
  4251ab:	or     al,BYTE PTR [edx]
  4251ad:	test   DWORD PTR [ecx],ebp
  4251af:	xchg   DWORD PTR [eax-0x71],eax
  4251b2:	imul   edx,DWORD PTR [eax+0x5d],0xffffff90
  4251b6:	add    ecx,0xffffff87
  4251b9:	sub    al,ch
  4251bb:	mov    ah,0x7c
  4251bd:	(bad)  
  4251be:	jno    0x425161
  4251c0:	xor    al,0xfd
  4251c2:	repnz cmp cl,0x43
  4251c6:	xchg   esp,eax
  4251c7:	inc    ebx
  4251c8:	sbb    BYTE PTR [edx+0x78],bl
  4251cb:	push   esp
  4251cc:	lock pop ss
  4251ce:	xor    BYTE PTR fs:[edx-0x22],bl
  4251d2:	mov    ebp,0x2edee564
  4251d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251d8:	pop    edi
  4251d9:	jp     0x4251fb
  4251db:	inc    edx
  4251dc:	adc    eax,0x8248a96f
  4251e1:	prefetch BYTE PTR [edx-0x16b0989b]
  4251e8:	dec    esi
  4251e9:	imul   edi,DWORD PTR [ebp+0x5333c34f],0xca50114
  4251f3:	inc    edx
  4251f4:	test   DWORD PTR [ebp-0x66],eax
  4251f7:	sub    ebp,edi
  4251f9:	or     esp,esp
  4251fb:	int3   
  4251fc:	scas   al,BYTE PTR es:[edi]
  4251fd:	call   FWORD PTR [eax+0x2bfcd797]
  425203:	pop    edx
  425204:	les    esi,FWORD PTR [ebp-0x36]
  425207:	sub    bl,BYTE PTR [ecx+0x1842bda1]
  42520d:	sub    eax,0x6682a47a
  425212:	cmp    al,0x41
  425214:	pop    es
  425215:	pop    es
  425216:	xchg   ebp,eax
  425217:	xor    eax,0xbf213550
  42521c:	fnstenv [esi]
  42521e:	(bad)  
  42521f:	fiadd  WORD PTR [edi-0x12]
  425222:	(bad)  
  425223:	jl     0x425275
  425225:	daa    
  425226:	stos   DWORD PTR es:[edi],eax
  425227:	cdq    
  425228:	cdq    
  425229:	xor    eax,0x7e5d60e4
  42522e:	cld    
  42522f:	xor    esp,DWORD PTR [edi-0xc1f343c]
  425235:	sbb    dh,ch
  425237:	dec    ebp
  425238:	mov    BYTE PTR [esi],ch
  42523a:	mov    ah,BYTE PTR [ebx-0x67]
  42523d:	mov    ch,0xe2
  42523f:	ja     0x425244
  425241:	data16 jp 0x42521d
  425244:	xchg   edi,eax
  425245:	xchg   BYTE PTR ds:0x23431895,ch
  42524b:	jns    0x4251d4
  42524d:	stos   DWORD PTR es:[edi],eax
  42524e:	pop    ebp
  42524f:	ja     0x425284
  425251:	ficomp WORD PTR [esi+0x1cb47719]
  425257:	in     eax,0x9a
  425259:	mov    bh,0xc1
  42525b:	jge    0x42523b
  42525d:	popa   
  42525e:	pop    ebx
  42525f:	inc    ebp
  425260:	mov    bl,0xd6
  425262:	into   
  425263:	scas   eax,DWORD PTR es:[edi]
  425264:	mov    esi,0x2085dfba
  425269:	mov    edi,0x9ba2beea
  42526e:	sub    al,0xfe
  425270:	(bad)  
  425271:	fild   DWORD PTR [eax]
  425273:	mov    ?,WORD PTR [ecx+0x50]
  425276:	std    
  425277:	jns    0x425255
  425279:	(bad)  
  42527a:	fidivr WORD PTR [edi]
  42527c:	dec    edi
  42527d:	test   BYTE PTR [edi-0x59b41c39],bl
  425283:	mov    ebx,0xa3a84ce2
  425288:	inc    eax
  425289:	scas   al,BYTE PTR es:[edi]
  42528a:	popa   
  42528b:	sbb    eax,0x3ef3bce8
  425290:	out    dx,eax
  425291:	jle    0x425294
  425293:	mov    al,ds:0x5fa8bfc
  425298:	test   al,0x5f
  42529a:	fmul   st(6),st
  42529c:	lea    eax,[ebx+0x17]
  42529f:	mov    eax,0x3049bc34
  4252a4:	std    
  4252a5:	out    dx,al
  4252a6:	dec    esp
  4252a7:	jne    0x42522b
  4252a9:	push   ebp
  4252aa:	js     0x425310
  4252ac:	jae    0x4252cd
  4252ae:	iret   
  4252af:	clc    
  4252b0:	call   0x63b6:0x70ae9b50
  4252b7:	call   0xa00b9e8a
  4252bc:	out    dx,eax
  4252bd:	or     edi,0xffffff82
  4252c0:	cld    
  4252c1:	pop    ebp
  4252c2:	cmp    ch,ah
  4252c4:	mov    WORD PTR [edx+0x20],es
  4252c7:	pop    es
  4252c8:	(bad)  
  4252c9:	push   edi
  4252ca:	je     0x425266
  4252cc:	rcr    BYTE PTR [edi+0x17b51ab8],1
  4252d2:	xchg   edx,eax
  4252d3:	push   ebx
  4252d4:	adc    al,0xbc
  4252d6:	or     bl,BYTE PTR [edx+edx*4+0x3d]
  4252da:	push   esi
  4252db:	xor    al,0x34
  4252dd:	sbb    eax,0x8a8e24cd
  4252e2:	mov    esp,0xe226aa17
  4252e7:	clc    
  4252e8:	jg     0x42532a
  4252ea:	jg     0x42534a
  4252ec:	loope  0x4252b3
  4252ee:	sbb    BYTE PTR fs:[edx],0xdd
  4252f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252f3:	test   al,0xbc
  4252f5:	loop   0x425371
  4252f7:	ins    BYTE PTR es:[edi],dx
  4252f8:	call   0x1895f72a
  4252fd:	in     al,dx
  4252fe:	test   al,0xd6
  425300:	xchg   ecx,eax
  425301:	outs   dx,BYTE PTR ds:[esi]
  425302:	fsub   DWORD PTR [ebx+0x3c]
  425305:	jecxz  0x4252b4
  425307:	jp     0x425321
  425309:	push   esi
  42530a:	adc    ebx,DWORD PTR [ebx-0x6d]
  42530d:	and    bl,BYTE PTR [eax+edx*2]
  425310:	adc    BYTE PTR [ebx-0x589dfca2],al
  425316:	data16 jp 0x42534a
  425319:	adc    al,0xbd
  42531b:	ja     0x42537f
  42531d:	test   edi,0xe25cdd3c
  425323:	add    BYTE PTR [ebp+0x65f31b50],bh
  425329:	fisttp DWORD PTR [ecx]
  42532b:	jmp    0x425344
  42532d:	mov    ebp,esi
  42532f:	inc    ebp
  425330:	bound  esi,QWORD PTR [esi-0x5dc3e147]
  425336:	push   edx
  425337:	push   es
  425338:	mov    BYTE PTR [ebp-0xb3673f2],dh
  42533e:	js     0x425382
  425340:	sar    BYTE PTR [ebp+0x67],cl
  425343:	cmp    al,0xc5
  425345:	sbb    BYTE PTR [esi+0x10],ah
  425348:	popf   
  425349:	ror    BYTE PTR [esi-0x8],0xe3
  42534d:	add    BYTE PTR [eax],al
  42534f:	add    BYTE PTR [eax],al
  425351:	add    BYTE PTR [ebx-0x11909fab],bl
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	out    dx,al
  42535f:	dec    esp
  425360:	and    esi,DWORD PTR [ebp+0x1cbef]
  425366:	repz add al,0x0
  425369:	add    BYTE PTR [ecx-0x43],dl
  42536c:	and    bh,BYTE PTR [ebx+0xa]
  42536f:	iret   
  425370:	scas   al,BYTE PTR es:[edi]
  425371:	test   eax,0x9350bac6
  425376:	repz sub eax,0xaa38349e
  42537c:	add    DWORD PTR [edi+edx*2],esp
  42537f:	add    eax,0xd3665235
  425384:	cmp    esi,DWORD PTR [eax+0x1de2c420]
  42538a:	jg     0x425385
  42538c:	ins    DWORD PTR es:[edi],dx
  42538d:	loop   0x425393
  42538f:	pop    edi
  425390:	sub    bh,al
  425392:	xchg   ebp,eax
  425393:	mov    esi,0xad770f38
  425398:	idiv   DWORD PTR [ecx+0x33]
  42539b:	push   eax
  42539c:	add    cl,bh
  42539e:	ret    0xfd68
  4253a1:	dec    ebp
  4253a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253a3:	sahf   
  4253a4:	or     BYTE PTR ds:0xc3c18736,ch
  4253aa:	sub    DWORD PTR [eax],ecx
  4253ac:	vpslld ymm1,ymm2,XMMWORD PTR [ebx]
  4253b1:	addr16 add bh,ah
  4253b4:	inc    eax
  4253b5:	mov    edx,0xa6fa8325
  4253ba:	push   eax
  4253bb:	sti    
  4253bc:	daa    
  4253bd:	jp     0x4253ea
  4253bf:	xchg   esp,eax
  4253c0:	daa    
  4253c1:	jbe    0x425367
  4253c3:	and    BYTE PTR [ebx-0x1f],0x26
  4253c7:	stc    
  4253c8:	int    0x10
  4253ca:	shl    al,1
  4253cc:	xor    BYTE PTR ds:0x129ddaea,0xa5
  4253d3:	cld    
  4253d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253d6:	mov    dh,0x53
  4253d8:	add    dl,bl
  4253da:	bound  edx,QWORD PTR [ebx+0x0]
  4253dd:	cmp    cl,ch
  4253df:	push   eax
  4253e0:	add    BYTE PTR [ebx-0x9],0x46
  4253e4:	fistp  QWORD PTR [ecx-0x1b]
  4253e7:	loop   0x42543f
  4253e9:	mov    eax,ds:0xc6da86d2
  4253ee:	sti    
  4253ef:	pop    ecx
  4253f0:	push   esi
  4253f1:	inc    ebp
  4253f2:	mov    al,ds:0x4d0d14ba
  4253f7:	je     0x4253ed
  4253f9:	dec    esi
  4253fa:	or     ebx,DWORD PTR [edx-0x72]
  4253fd:	mov    BYTE PTR ds:0x68675c4e,al
  425403:	je     0x425427
  425405:	lock addr16 dec ebx
  425408:	adc    eax,0xf00a6c20
  42540d:	mov    esp,0x3ca2f64c
  425412:	pop    ebp
  425413:	add    BYTE PTR [ecx+0x46],0x4d
  425417:	lods   eax,DWORD PTR ds:[esi]
  425418:	fcmovnbe st,st(3)
  42541a:	stc    
  42541b:	fcmovne st,st(5)
  42541d:	push   ebp
  42541e:	xchg   ebx,eax
  42541f:	cmp    BYTE PTR gs:[ebp-0x9],0xbe
  425424:	xchg   ebp,esi
  425426:	pop    esp
  425427:	inc    edi
  425428:	(bad)  
  425429:	arpl   di,di
  42542b:	cli    
  42542c:	jne    0x4253e6
  42542e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42542f:	test   eax,0xd832da5c
  425434:	inc    edi
  425436:	mov    dl,0x19
  425438:	loope  0x4253f9
  42543a:	inc    ebp
  42543b:	and    edi,0xf98245ef
  425441:	arpl   WORD PTR [ecx],sp
  425443:	xor    dl,BYTE PTR [eax+0x9]
  425446:	jge    0x4253e8
  425448:	pop    ebx
  425449:	clc    
  42544a:	cmp    edi,esi
  42544c:	data16 scas al,BYTE PTR es:[edi]
  42544e:	add    edi,DWORD PTR [esi]
  425450:	sbb    DWORD PTR [ecx-0x5852a8f9],eax
  425456:	in     eax,dx
  425457:	xor    BYTE PTR [esi],0x45
  42545a:	pusha  
  42545b:	xchg   edx,eax
  42545c:	rcr    esi,cl
  42545e:	mov    DWORD PTR [ecx+0xc],ecx
  425461:	cdq    
  425462:	mul    DWORD PTR [eax]
  425464:	jp     0x4254ae
  425466:	push   edx
  425467:	aam    0x44
  425469:	jg     0x4253ec
  42546b:	add    BYTE PTR [ebp*1-0x3291f9b9],bl
  425472:	or     bh,cl
  425474:	and    BYTE PTR ds:0xa164dfbc,bl
  42547a:	mov    BYTE PTR [ecx+ecx*8-0x49c2b071],dh
  425481:	cld    
  425482:	dec    edi
  425483:	retf   0x3076
  425486:	jne    0x425444
  425488:	or     ah,BYTE PTR ds:0x422b100a
  42548e:	cli    
  42548f:	pushf  
  425490:	repz div DWORD PTR [ecx+0x66711095]
  425497:	pop    gs
  425499:	cmp    cl,cl
  42549b:	xchg   edi,eax
  42549c:	sub    dh,ch
  42549e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42549f:	icebp  
  4254a0:	sub    BYTE PTR ds:[ebx+0x48],ch
  4254a4:	jbe    0x4254a5
  4254a6:	fisttp QWORD PTR [edi-0x5a]
  4254a9:	shr    BYTE PTR [esi+0x71],1
  4254ac:	inc    ecx
  4254ad:	ja     0x42546a
  4254af:	pop    es
  4254b0:	(bad)  
  4254b1:	or     DWORD PTR [ebx+edx*4+0x2d],0x31
  4254b6:	fsub   QWORD PTR [edi-0x4d]
  4254b9:	jns    0x4254f3
  4254bb:	inc    ecx
  4254bc:	(bad)  
  4254be:	ins    BYTE PTR es:[edi],dx
  4254bf:	adc    ebx,DWORD PTR [eax+0x73]
  4254c2:	stc    
  4254c3:	rol    DWORD PTR [ecx+eiz*2+0x30098961],cl
  4254ca:	call   DWORD PTR fs:[ecx-0x25]
  4254ce:	push   0xffffff91
  4254d0:	les    esp,FWORD PTR [ebp-0x550ed684]
  4254d6:	fwait
  4254d7:	ret    
  4254d8:	mov    eax,0x4845bd5c
  4254dd:	fcomp  QWORD PTR [edi+0x73010684]
  4254e3:	imul   BYTE PTR [esi-0x7c]
  4254e6:	jmp    0xaa6c:0x43db6e9d
  4254ed:	jecxz  0x4254c3
  4254ef:	dec    esi
  4254f0:	mov    ds:0xcdaf49f9,eax
  4254f5:	mov    dl,0x7b
  4254f7:	jp     0x4254b2
  4254f9:	xchg   esp,eax
  4254fa:	cdq    
  4254fb:	test   dh,0x45
  4254fe:	lahf   
  4254ff:	outs   dx,BYTE PTR ds:[esi]
  425500:	(bad)  [esi]
  425502:	xor    eax,0x64ab1838
  425507:	jo     0x425530
  425509:	pop    ebx
  42550a:	sbb    al,0x84
  42550c:	fild   QWORD PTR ds:0x4c9f2be7
  425512:	cdq    
  425513:	fdivr  QWORD PTR [ecx+0x565e260]
  425519:	mov    al,0xf8
  42551b:	sub    ebx,DWORD PTR [ebx+0x45]
  42551e:	push   ebp
  42551f:	aam    0xca
  425521:	or     cl,dh
  425523:	push   es
  425524:	cld    
  425525:	push   ebp
  425526:	iret   
  425527:	sbb    DWORD PTR [esi+0x71b56f42],ecx
  42552d:	push   esi
  42552e:	add    edi,esp
  425530:	scas   eax,DWORD PTR es:[edi]
  425531:	or     al,0x1
  425533:	adc    eax,0x5c88135d
  425538:	pop    ebx
  425539:	mov    eax,0x99e64d1c
  42553e:	cli    
  42553f:	mov    edx,0xdaedb83e
  425544:	sahf   
  425545:	hlt    
  425546:	ret    0xee3
  425549:	into   
  42554a:	push   es
  42554b:	fist   WORD PTR [edx-0x15]
  42554e:	pushf  
  42554f:	(bad)
  425552:	push   edi
  425553:	loopne 0x4255b7
  425555:	stc    
  425556:	shl    ebp,cl
  425558:	in     eax,0x84
  42555a:	hlt    
  42555b:	fdivr  DWORD PTR [eax+0x73147400]
  425561:	call   0xc14d901c
  425566:	je     0x4255d3
  425568:	(bad)  
  425569:	ds xchg edi,ebx
  42556c:	lea    eax,ds:0x2e96ff0
  425572:	pop    ebp
  425573:	por    mm0,QWORD PTR [eax-0x5a]
  425577:	xchg   edx,eax
  425578:	loop   0x4255a2
  42557a:	add    al,0xbc
  42557c:	sbb    eax,0xc132d840
  425581:	adc    DWORD PTR [ebx+0xe],edi
  425584:	and    DWORD PTR [esi+0x4d4aa5dc],edi
  42558a:	mov    ds:0x2237874d,al
  42558f:	pop    ds
  425590:	add    bl,BYTE PTR [eax]
  425592:	add    BYTE PTR [esi],dh
  425594:	adc    DWORD PTR [ebp+0x2ecc375d],ebp
  42559a:	sub    DWORD PTR [ecx],edx
  42559c:	dec    ecx
  42559d:	frstor [ebx]
  42559f:	adc    al,0xd9
  4255a1:	div    ebx
  4255a3:	xor    al,0xe4
  4255a5:	mov    dl,0x47
  4255a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255a8:	mov    ebp,DWORD PTR [ebx+0x3d0595e6]
  4255ae:	shr    bl,1
  4255b0:	popf   
  4255b1:	push   esp
  4255b2:	sub    cl,BYTE PTR [eax-0x6c]
  4255b5:	mov    ds:0xc1b3df0,al
  4255ba:	(bad)  
  4255bb:	jno    0x425567
  4255bd:	xchg   ecx,eax
  4255be:	mov    bh,0xbb
  4255c0:	xchg   ecx,eax
  4255c1:	shl    DWORD PTR [edi+0x6f],0x1d
  4255c5:	(bad)  
  4255c6:	jmp    0x6c54:0x8cc57c6c
  4255cd:	js     0x4255f4
  4255cf:	jns    0x42562d
  4255d1:	dec    ebx
  4255d2:	mov    WORD PTR ds:0x253cd490,cs
  4255d8:	jmp    DWORD PTR [esi+0x69d7c316]
  4255de:	push   edx
  4255df:	jg     0x42561c
  4255e1:	sbb    DWORD PTR [esi+0x48944b0d],ebx
  4255e7:	mov    ds:0xdfd63d00,al
  4255ec:	ret    
  4255ed:	push   es
  4255ee:	inc    ecx
  4255ef:	mov    ds:0x3067c5c2,al
  4255f4:	sbb    al,0xfe
  4255f6:	jl     0x425651
  4255f8:	push   0xffffffaf
  4255fa:	scas   eax,DWORD PTR es:[edi]
  4255fb:	adc    al,0x1b
  4255fd:	jle    0x42558f
  4255ff:	or     al,0x20
  425601:	mov    cl,0xc3
  425603:	es ret 
  425605:	pop    ds
  425606:	ins    BYTE PTR es:[edi],dx
  425607:	inc    eax
  425608:	pop    ebp
  425609:	add    al,0x48
  42560b:	sbb    esi,DWORD PTR [ebp-0x3e5af256]
  425611:	enter  0x315f,0xf
  425615:	lods   al,BYTE PTR ds:[esi]
  425616:	dec    ebp
  425617:	mov    WORD PTR [edi+0x7b66bdc6],ss
  42561d:	xor    DWORD PTR [ecx],esi
  42561f:	and    DWORD PTR [ecx+0x67],ebx
  425622:	test   cl,cl
  425624:	jb     0x4255c8
  425626:	ret    
  425627:	repnz enter 0x3497,0x2d
  42562c:	hlt    
  42562d:	ins    BYTE PTR es:[edi],dx
  42562e:	nop
  42562f:	test   BYTE PTR [edi-0x54e0f1d4],dh
  425635:	sub    ebx,esp
  425637:	push   0x236e6a6e
  42563c:	pop    edx
  42563d:	addr16 retf 0x9922
  425641:	retf   0x8e60
  425644:	arpl   WORD PTR [ecx],di
  425646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425647:	fs xchg ebx,eax
  425649:	fdivr  QWORD PTR [ebx+0x34]
  42564c:	ret    
  42564d:	or     al,BYTE PTR [eax+ebp*2-0x1a333335]
  425654:	sub    al,0xab
  425656:	std    
  425657:	mov    ebp,0xcee7f8e0
  42565c:	mov    edx,DWORD PTR [edx+edi*1]
  42565f:	mov    BYTE PTR [ecx+0x23cce272],0xd9
  425666:	mov    al,0x30
  425668:	inc    ebx
  425669:	xchg   ebp,eax
  42566a:	(bad)  
  42566b:	adc    eax,0x646cfbbd
  425670:	shl    BYTE PTR [ebp+0x6f],cl
  425673:	inc    edx
  425674:	pop    ebp
  425675:	in     eax,0x3a
  425677:	push   0xffffff85
  425679:	test   ebp,eax
  42567b:	shl    DWORD PTR [edx],1
  42567d:	mov    ecx,DWORD PTR ds:0x6d36797f
  425683:	dec    eax
  425684:	inc    eax
  425685:	int3   
  425686:	inc    ebp
  425687:	ds push ecx
  425689:	daa    
  42568a:	xchg   ecx,eax
  42568b:	dec    eax
  42568c:	cmp    BYTE PTR [ebx+0x6c],al
  42568f:	pop    ebp
  425690:	inc    eax
  425691:	or     ah,BYTE PTR [ebx+0xfc2db17]
  425697:	xlat   BYTE PTR ds:[ebx]
  425698:	mov    bl,BYTE PTR [edx*8-0x314803b9]
  42569f:	rol    DWORD PTR [ebx+ecx*4+0x59],1
  4256a3:	daa    
  4256a4:	pop    edx
  4256a5:	gs mov ebx,0xd556dcc6
  4256ab:	call   0x914f1ed
  4256b0:	xor    DWORD PTR [edi+0x40742888],edi
  4256b6:	dec    ebx
  4256b7:	push   ecx
  4256b8:	in     al,dx
  4256b9:	test   edi,0x577bae5e
  4256bf:	sub    esi,ebp
  4256c1:	jl     0x425716
  4256c3:	test   eax,0x2b54648b
  4256c8:	inc    esp
  4256c9:	push   eax
  4256ca:	mov    al,0xd5
  4256cc:	cmp    eax,0xffffff8e
  4256cf:	mov    edi,0x7756efd9
  4256d4:	int3   
  4256d5:	mov    ebx,DWORD PTR [esi+0x7]
  4256d8:	inc    edx
  4256d9:	loop   0x425699
  4256db:	or     eax,0x37c21041
  4256e0:	jg     0x42566d
  4256e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256e3:	push   eax
  4256e4:	xchg   esp,eax
  4256e5:	or     DWORD PTR [esi],esi
  4256e7:	pop    ds
  4256e8:	dec    eax
  4256e9:	ins    BYTE PTR es:[edi],dx
  4256ea:	jb     0x42570e
  4256ec:	xchg   esi,eax
  4256ed:	(bad)  
  4256ee:	data16 je 0x4256f0
  4256f1:	xor    ecx,DWORD PTR [esi+0x8336fae]
  4256f7:	ror    BYTE PTR [ecx-0x64f2698a],0x4f
  4256fe:	ret    0x86db
  425701:	xchg   edx,eax
  425702:	add    eax,0xac9a519e
  425707:	cmp    BYTE PTR [ecx+eiz*8+0x7f],bh
  42570b:	inc    edx
  42570c:	pop    esi
  42570d:	out    0xa5,eax
  42570f:	jge    0x42578f
  425711:	xor    eax,ebx
  425713:	(bad)  
  425714:	mov    bh,0x93
  425716:	mov    esi,0x25f77e36
  42571b:	fldenv [esi+0xe]
  42571e:	add    al,0xee
  425720:	hlt    
  425721:	loopne 0x425721
  425723:	neg    bh
  425725:	xchg   BYTE PTR [esi+0x12c8f705],ch
  42572b:	dec    edi
  42572c:	mov    esi,DWORD PTR [edi]
  42572e:	shr    DWORD PTR [ebx],1
  425730:	shl    BYTE PTR [eax],cl
  425732:	mov    eax,esp
  425734:	inc    esp
  425735:	sub    ecx,0xea8ccf31
  42573b:	test   BYTE PTR [edi-0x56],cl
  42573e:	and    al,0x4e
  425740:	inc    DWORD PTR [edi]
  425742:	jle    0x425774
  425744:	mov    ds:0xc0327def,eax
  425749:	mov    bh,0x60
  42574b:	cmp    BYTE PTR ds:0x4f79e0ae,dh
  425751:	dec    esi
  425752:	aaa    
  425753:	or     dh,bl
  425755:	lods   al,BYTE PTR ds:[esi]
  425756:	cld    
  425757:	dec    eax
  425758:	les    eax,FWORD PTR [ecx-0x5f]
  42575b:	push   0x57
  42575d:	cwde   
  42575e:	inc    esi
  42575f:	mov    dh,0xa3
  425761:	jl     0x42577e
  425763:	repnz pusha 
  425765:	sub    BYTE PTR [edi],0x43
  425768:	ss cmc 
  42576a:	mov    eax,ds:0xa1b60f05
  42576f:	mov    esi,0xb214d905
  425774:	xor    BYTE PTR [esi],bl
  425776:	leave  
  425777:	es inc esi
  425779:	mov    DWORD PTR [edx-0x7a7e621e],ebp
  42577f:	pop    ss
  425780:	adc    eax,0xb24fdb83
  425785:	pop    edi
  425786:	push   esi
  425787:	add    DWORD PTR ds:[edi+0x58],esp
  42578b:	xchg   ebp,eax
  42578c:	sbb    ebx,DWORD PTR [ecx-0x73]
  42578f:	mov    ?,WORD PTR [ecx+ecx*4]
  425792:	add    BYTE PTR [edi-0x50],dh
  425795:	ficom  DWORD PTR [ebp+0x1d]
  425798:	mov    ebp,edi
  42579a:	jmp    0x2472:0xf4d77cee
  4257a1:	pop    ecx
  4257a2:	mov    edi,0x14f4f7c7
  4257a7:	scas   al,BYTE PTR es:[edi]
  4257a8:	mov    WORD PTR [esi],gs
  4257aa:	clc    
  4257ab:	jmp    0x9c183bd3
  4257b0:	loopne 0x4257d3
  4257b2:	icebp  
  4257b3:	stc    
  4257b4:	lds    ebx,FWORD PTR [edx+0xe4ff26b]
  4257ba:	stos   DWORD PTR es:[edi],eax
  4257bb:	add    eax,0xca180d22
  4257c0:	inc    ecx
  4257c1:	call   0x961e83af
  4257c6:	fdivr  st(3),st
  4257c9:	pop    ss
  4257ca:	clc    
  4257cb:	js     0x4257b0
  4257cd:	xor    DWORD PTR [ebx+edx*1+0x30a4c1cf],edi
  4257d4:	inc    ebp
  4257d5:	test   BYTE PTR [ebp+edx*2-0x5f],cl
  4257d9:	and    ebx,ebp
  4257db:	xor    eax,0x838ee66e
  4257e0:	std    
  4257e1:	sub    DWORD PTR [ecx-0x35],esp
  4257e4:	or     DWORD PTR [ebp-0x30b8342b],ebp
  4257ea:	xor    al,0x9d
  4257ec:	mov    al,0xe3
  4257ee:	(bad)
  4257f1:	xchg   ecx,eax
  4257f2:	mov    cl,0x72
  4257f4:	xor    DWORD PTR [edx-0x6153267e],esp
  4257fa:	pop    ecx
  4257fb:	ss mov edx,0x4c3514f0
  425802:	add    eax,0xa1f7d215
  425807:	jns    0x425864
  425809:	pop    edi
  42580a:	popa   
  42580b:	cmp    ah,BYTE PTR [eax-0x27]
  42580e:	jo     0x425826
  425810:	cld    
  425811:	cmp    eax,0x3d0dc8b0
  425816:	(bad)  
  425817:	ss xor dh,BYTE PTR es:[edx-0x4f405526]
  42581f:	in     al,dx
  425820:	fldcw  WORD PTR [esi-0x3d]
  425823:	jne    0x42584f
  425825:	jmp    0xa986e6be
  42582a:	jg     0x425839
  42582c:	sbb    edi,ebp
  42582e:	ficom  WORD PTR [ecx]
  425830:	out    dx,eax
  425831:	add    DWORD PTR [edx+ebp*1],edx
  425834:	shr    DWORD PTR [ebx],1
  425836:	cwde   
  425837:	cmp    esp,DWORD PTR [ebx+edi*8-0x39]
  42583b:	sbb    BYTE PTR [edx+0x62f3ea0c],cl
  425841:	inc    esp
  425842:	adc    al,0x6b
  425844:	pop    eax
  425845:	jnp    0x4257f7
  425847:	pop    esp
  425848:	xchg   ebp,eax
  425849:	test   eax,0x7d4bc51c
  42584e:	adc    BYTE PTR [eax+0x2dd028b],bl
  425854:	fldenv [edi-0x23825fb3]
  42585a:	das    
  42585b:	popa   
  42585c:	adc    eax,DWORD PTR [eax]
  42585e:	add    BYTE PTR [eax],al
  425860:	add    BYTE PTR [eax],al
  425862:	add    eax,0xaf44af85
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx+0x7e5d36f8]
  42586f:	pop    eax
  425870:	nop
  425871:	push   edi
  425872:	loop   0x425844
  425874:	add    DWORD PTR [eax],eax
  425876:	repz add al,0x0
  425879:	add    BYTE PTR [ecx+0x6111ff97],ah
  42587f:	sub    eax,0xbef88bb6
  425884:	mov    ecx,0xb1c5d386
  425889:	inc    edi
  42588a:	pop    ecx
  42588b:	pop    es
  42588c:	xor    DWORD PTR [edx+0x7b11046c],0x7d
  425893:	cmc    
  425894:	mov    ?,edx
  425896:	std    
  425897:	adc    bh,BYTE PTR ds:0x12dfc10d
  42589d:	inc    ecx
  42589e:	cmp    ebx,DWORD PTR [esi+0x3a]
  4258a1:	(bad)  
  4258a3:	pop    ds
  4258a4:	push   ds
  4258a5:	popf   
  4258a6:	sysenter 
  4258a8:	jmp    0x4ad5:0x9abf064
  4258af:	loop   0x425892
  4258b1:	ss call 0x28f550e1
  4258b7:	(bad)  
  4258b8:	aam    0xdb
  4258ba:	inc    ebp
  4258bb:	fs das 
  4258bd:	dec    ebx
  4258be:	pop    edx
  4258bf:	adc    DWORD PTR [edi+0x5c8a99cc],ebp
  4258c5:	sub    DWORD PTR [edx-0x22],0xffffffde
  4258c9:	fs jg  0x42589b
  4258cc:	nop
  4258cd:	or     eax,0xf10bfaff
  4258d2:	inc    eax
  4258d3:	daa    
  4258d4:	call   0x9f3:0xe77dbe9d
  4258db:	mov    esp,0x60e11fbe
  4258e0:	push   cs
  4258e1:	loope  0x4258e4
  4258e3:	mov    dl,0x6a
  4258e5:	sbb    edi,DWORD PTR [edi+0x37]
  4258e8:	mov    edx,0xbe9ab23
  4258ed:	call   0x34a3b1c1
  4258f2:	push   es
  4258f3:	nop
  4258f4:	jo     0x4258f7
  4258f6:	mov    BYTE PTR [esi],ah
  4258f8:	icebp  
  4258f9:	cmp    eax,DWORD PTR [edi-0x37ae3a6c]
  4258ff:	mov    BYTE PTR [edi-0x1c],bh
  425902:	pop    ds
  425903:	sub    eax,0xe08ac0b2
  425908:	sbb    ebx,0xffffff80
  42590b:	jp     0x42592d
  42590d:	xor    ebx,0x1257684c
  425913:	mov    edi,gs
  425915:	popa   
  425916:	jne    0x42598f
  425918:	and    DWORD PTR [edi+0x3d2d8c9c],esi
  42591e:	cld    
  42591f:	jmp    0xbccd2517
  425924:	xor    BYTE PTR [ecx+ecx*8],ch
  425927:	mov    BYTE PTR [ebp-0x53],dh
  42592a:	sub    al,0x60
  42592c:	push   ebx
  42592d:	pop    esi
  42592e:	ror    dl,0xe5
  425931:	std    
  425932:	jge    0x425929
  425934:	ret    
  425935:	mov    dh,0xb4
  425937:	pop    esp
  425939:	push   ecx
  42593a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42593b:	mov    gs,ecx
  42593d:	jbe    0x4259ae
  42593f:	enter  0xe919,0xba
  425943:	jnp    0x42590e
  425945:	xchg   cl,ah
  425947:	xlat   BYTE PTR ds:[ebx]
  425948:	cli    
  425949:	inc    esp
  42594a:	rcr    DWORD PTR [edx+0x4c],0xb5
  42594e:	jecxz  0x425929
  425950:	adc    ebp,edx
  425952:	fwait
  425953:	ins    BYTE PTR es:[edi],dx
  425954:	jg     0x425916
  425956:	dec    edx
  425957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425958:	xor    BYTE PTR [edx+eax*1+0x2b],al
  42595c:	dec    eax
  42595d:	pop    ecx
  42595e:	rcr    DWORD PTR [eax],1
  425960:	add    al,0x69
  425962:	mov    edx,0x9f35db9c
  425967:	mov    dl,0xe1
  425969:	test   BYTE PTR [esi+ebp*1-0x80],bh
  42596d:	ss push 0x85fd79c6
  425973:	pop    ebp
  425974:	shl    BYTE PTR [ecx+0x649f7dbc],0xb1
  42597b:	and    al,BYTE PTR [eax+0x6f91b1c0]
  425981:	xchg   esi,eax
  425982:	inc    ebp
  425983:	or     al,cl
  425985:	pop    esi
  425986:	dec    ebp
  425987:	pusha  
  425988:	or     BYTE PTR [eax-0x3f],bl
  42598b:	sbb    BYTE PTR [edi+0x7e],ah
  42598e:	push   0xffffffec
  425990:	jg     0x4259fb
  425992:	cmc    
  425993:	fcom   QWORD PTR [ebx-0x34]
  425996:	les    esp,FWORD PTR [eax]
  425998:	inc    ebp
  425999:	push   ss
  42599a:	nop
  42599b:	push   ds
  42599c:	pop    edi
  42599d:	xor    edx,DWORD PTR [edx+0x7bd92974]
  4259a3:	push   ebp
  4259a4:	jge    0x4259bd
  4259a6:	or     bh,dh
  4259a8:	sub    dh,dl
  4259aa:	inc    ebx
  4259ab:	imul   esi,DWORD PTR ds:0x7982754b,0x52
  4259b2:	rol    DWORD PTR [ecx+0x6b],1
  4259b5:	sub    BYTE PTR [ebx+0x69e0258],dh
  4259bb:	jns    0x425957
  4259bd:	and    eax,0x46fed0a5
  4259c2:	mov    esp,0xe6604f2e
  4259c7:	xchg   DWORD PTR [ebx+0x3c841af9],ebx
  4259cd:	clc    
  4259ce:	fs das 
  4259d0:	dec    edi
  4259d1:	in     eax,dx
  4259d2:	mov    ch,0x9a
  4259d4:	je     0x425966
  4259d6:	daa    
  4259d7:	jns    0x425a4d
  4259d9:	push   cs
  4259da:	retf   
  4259db:	leave  
  4259dc:	daa    
  4259dd:	dec    edx
  4259de:	mov    eax,ds:0x12ca4493
  4259e3:	fst    DWORD PTR [eax]
  4259e5:	pop    edi
  4259e6:	or     eax,0x40c524aa
  4259eb:	clc    
  4259ec:	push   ss
  4259ed:	retf   
  4259ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259ef:	imul   ecx,DWORD PTR [eax+0x7c],0x74e8e644
  4259f6:	cdq    
  4259f7:	fdivr  DWORD PTR [edx]
  4259f9:	aad    0xbb
  4259fb:	jnp    0x4259c6
  4259fd:	mov    esp,0x9b320276
  425a02:	jle    0x4259a4
  425a04:	nop
  425a05:	and    ebx,DWORD PTR [ebp+0x6aec1010]
  425a0b:	push   edx
  425a0c:	sub    DWORD PTR [ebx],ecx
  425a0e:	xor    DWORD PTR [edi-0x4c],0x75
  425a12:	mov    ecx,?
  425a14:	pop    edi
  425a15:	loop   0x4259e7
  425a17:	(bad)  
  425a19:	inc    esp
  425a1a:	es int 0xc1
  425a1d:	scas   eax,DWORD PTR es:[edi]
  425a1e:	shl    DWORD PTR [ebp-0x6c84518c],1
  425a24:	in     al,0xc9
  425a26:	mov    BYTE PTR [edx+0x3d],ch
  425a29:	sbb    eax,0x109add0
  425a2e:	(bad)  
  425a2f:	push   ebp
  425a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a31:	jne    0x425a11
  425a33:	rol    ebp,0x9a
  425a36:	fnstsw WORD PTR [eax-0x76]
  425a39:	xor    ebx,eax
  425a3b:	mov    ds:0xba45855,al
  425a40:	add    cl,BYTE PTR [edi]
  425a42:	js     0x4259cb
  425a44:	cmp    cl,BYTE PTR [eax-0x6e505ca5]
  425a4a:	pop    esp
  425a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a4c:	inc    ebp
  425a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a4f:	int    0xe1
  425a51:	mov    esp,0x62a6f384
  425a56:	das    
  425a57:	scas   eax,DWORD PTR es:[edi]
  425a58:	out    dx,al
  425a59:	in     al,dx
  425a5a:	xchg   ecx,eax
  425a5b:	mov    eax,0x88f5aa86
  425a60:	add    BYTE PTR [eax+0x51],cl
  425a63:	add    BYTE PTR [ebx+0x11],0xe5
  425a67:	or     BYTE PTR [edx],ch
  425a69:	and    ecx,DWORD PTR [esi+0x6f]
  425a6c:	repz inc esp
  425a6e:	or     edi,ecx
  425a70:	sbb    BYTE PTR [esi+0x67],0xc5
  425a74:	aad    0xd
  425a76:	jnp    0x425a4c
  425a78:	add    bl,BYTE PTR ds:0xa8019d46
  425a7e:	(bad)  
  425a7f:	jae    0x425a02
  425a81:	cmp    ebp,DWORD PTR [esi+0x42]
  425a84:	sub    BYTE PTR [edi],ah
  425a86:	mov    al,0xfc
  425a88:	aas    
  425a89:	es push edx
  425a8b:	push   ds
  425a8c:	xor    DWORD PTR [ecx],0xcde3ba43
  425a92:	cli    
  425a93:	lock adc DWORD PTR [ecx-0x6f23c3d6],esi
  425a9a:	and    esi,DWORD PTR [ebx+0x3a]
  425a9d:	add    al,0xd7
  425a9f:	pop    ds
  425aa0:	(bad)  
  425aa1:	mov    ebp,0x6726fa8f
  425aa6:	dec    edi
  425aa7:	xchg   ecx,eax
  425aa8:	cmc    
  425aa9:	push   ss
  425aaa:	sub    al,0xc9
  425aac:	out    0x71,eax
  425aae:	xchg   edx,eax
  425aaf:	fisubr DWORD PTR [eax]
  425ab1:	das    
  425ab2:	dec    ebx
  425ab3:	pop    edi
  425ab4:	imul   ecx,DWORD PTR [ecx+0x380597c7],0xffffffc6
  425abb:	cwde   
  425abc:	add    BYTE PTR [eax+0x78fda5ce],ah
  425ac2:	push   ecx
  425ac3:	loope  0x425b0a
  425ac5:	shl    BYTE PTR [esi+0x2b07ed87],cl
  425acb:	add    edx,DWORD PTR [esi+0x7ce8ba0b]
  425ad1:	pop    eax
  425ad2:	(bad)  
  425ad3:	icebp  
  425ad4:	test   DWORD PTR [esi+0x42],ebx
  425ad7:	jo     0x425b0d
  425ad9:	dec    ecx
  425ada:	push   ecx
  425adb:	(bad)  
  425adc:	loope  0x425b10
  425ade:	test   al,0x55
  425ae0:	pop    ss
  425ae1:	sbb    al,BYTE PTR [ebx+0x31dc723a]
  425ae7:	dec    edx
  425ae8:	nop
  425ae9:	inc    esi
  425aea:	mov    ss,WORD PTR [eax-0x47]
  425aed:	das    
  425aee:	and    edx,DWORD PTR [edi+0x4]
  425af1:	fdivr  QWORD PTR [ecx]
  425af3:	mov    bl,0x7b
  425af5:	jae    0x425b3a
  425af7:	mov    ah,0x1b
  425af9:	inc    esi
  425afa:	cmp    esi,DWORD PTR [eax+ebp*8+0x1447e6aa]
  425b01:	punpckhdq mm7,QWORD PTR [edx-0x58]
  425b05:	pop    es
  425b06:	mov    ss,WORD PTR [ecx-0x671be91]
  425b0c:	lea    ecx,ds:0x422f2c4e
  425b12:	int    0xa
  425b14:	pop    es
  425b15:	pop    es
  425b16:	fist   WORD PTR [esi+0x7697567e]
  425b1c:	test   cl,0x72
  425b1f:	or     dl,BYTE PTR [esi+0x6571292d]
  425b25:	sar    DWORD PTR [ebp-0x3f],0x5d
  425b29:	jae    0x425b7d
  425b2b:	mov    edi,0x635f0705
  425b30:	shr    DWORD PTR [ebx],1
  425b32:	mov    ebx,0x5f8fe69b
  425b37:	mov    edx,0x3f64540c
  425b3c:	ins    BYTE PTR es:[edi],dx
  425b3d:	mov    ah,0x70
  425b3f:	xor    eax,0xfb8e148f
  425b44:	mov    cl,0x1e
  425b46:	xor    dl,BYTE PTR [ecx-0x1b8bb234]
  425b4c:	and    cl,BYTE PTR [edx+0x4e]
  425b4f:	adc    esp,ebp
  425b51:	pop    ebx
  425b52:	div    BYTE PTR [ebx]
  425b54:	(bad)  
  425b55:	aam    0xe2
  425b57:	inc    edi
  425b58:	and    dl,bh
  425b5a:	jg     0x425ae3
  425b5c:	pop    eax
  425b5d:	sub    eax,0x7a6b3d40
  425b62:	xchg   ebx,eax
  425b63:	pop    esi
  425b64:	adc    ebp,DWORD PTR [ebx+0x19]
  425b67:	add    DWORD PTR [ebp-0x9],ecx
  425b6a:	imul   ecx,DWORD PTR ss:0xed33a3ac,0x44d32cfa
  425b75:	mov    ebx,0x85f39398
  425b7a:	cdq    
  425b7b:	pop    DWORD PTR [ebx]
  425b7d:	js     0x425beb
  425b7f:	push   esi
  425b80:	cmp    esi,DWORD PTR [edx]
  425b82:	jno    0x425b82
  425b84:	fmul   QWORD PTR [ebx+0x7a]
  425b87:	mov    esp,DWORD PTR [edi-0x532c148e]
  425b8d:	pop    edx
  425b8e:	ret    
  425b8f:	(bad)  [ecx-0x6dfa3f7f]
  425b95:	repnz xchg esi,eax
  425b97:	cmp    al,0xee
  425b99:	(bad)  
  425b9b:	push   0xf2e2d85b
  425ba0:	mov    ecx,0x586e74fc
  425ba5:	and    al,0x78
  425ba8:	pop    ds
  425ba9:	cmp    ch,BYTE PTR [eax-0x599f6b7b]
  425baf:	xor    al,0x85
  425bb1:	sub    eax,0xaf6b4db0
  425bb6:	cmc    
  425bb7:	jbe    0x425c36
  425bb9:	jmp    0xf5967d6f
  425bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bbf:	xchg   ebp,eax
  425bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425bc1:	cli    
  425bc2:	jnp    0x425bc7
  425bc4:	inc    eax
  425bc5:	retf   0x8d3e
  425bc8:	retf   0x1fd0
  425bcb:	fs or  eax,0x9ee54a1
  425bd1:	int3   
  425bd2:	inc    ebx
  425bd3:	add    al,0x9f
  425bd5:	loopne 0x425b83
  425bd7:	sub    al,0x45
  425bd9:	out    dx,eax
  425bda:	pop    ebp
  425bdb:	push   0x73
  425bdd:	or     eax,0xa8a0ceb
  425be2:	cmp    ebx,DWORD PTR [ecx-0x4]
  425be5:	jg     0x425c44
  425be7:	jecxz  0x425bab
  425be9:	xchg   edx,eax
  425bea:	mov    ebx,0x4c67cc27
  425bef:	daa    
  425bf0:	cwde   
  425bf1:	add    al,0x85
  425bf3:	push   edi
  425bf4:	nop
  425bf5:	mov    al,ds:0xdec56471
  425bfa:	retf   0x91f3
  425bfd:	ds mov dl,cl
  425c00:	cmp    al,0xa6
  425c02:	enter  0xdaf2,0x56
  425c06:	xchg   ebp,eax
  425c07:	ins    BYTE PTR es:[edi],dx
  425c08:	loope  0x425c1d
  425c0a:	stc    
  425c0b:	pop    eax
  425c0c:	arpl   bx,si
  425c0e:	idiv   DWORD PTR [ecx]
  425c10:	xchg   edx,eax
  425c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c12:	inc    ebx
  425c13:	clc    
  425c14:	pop    ecx
  425c15:	xor    dh,ch
  425c17:	jne    0x425bc3
  425c19:	scas   al,BYTE PTR es:[edi]
  425c1a:	mov    ch,0xb9
  425c1c:	mov    BYTE PTR [ebx-0x35],cl
  425c1f:	cmp    al,0x7e
  425c21:	sbb    DWORD PTR [ebp+0x628d689a],ebx
  425c27:	push   ebx
  425c28:	shl    BYTE PTR [edi+0x5f],0xfc
  425c2c:	mov    eax,0xee8fa5c
  425c31:	pop    ebp
  425c32:	out    dx,al
  425c33:	push   esi
  425c34:	jg     0x425c3a
  425c36:	outs   dx,BYTE PTR ds:[esi]
  425c37:	sub    al,0xe0
  425c39:	mov    dl,0x91
  425c3b:	or     al,0x61
  425c3d:	or     al,0xdf
  425c3f:	xlat   BYTE PTR ds:[ebx]
  425c40:	out    dx,eax
  425c41:	jns    0x425bec
  425c43:	sbb    dh,BYTE PTR [ebx+0x58763191]
  425c49:	call   0xfa50:0x4bd0f799
  425c50:	rcr    dl,1
  425c52:	imul   edx
  425c54:	je     0x425c95
  425c56:	push   ebp
  425c57:	inc    esp
  425c58:	fld    QWORD PTR [eax-0x23]
  425c5b:	or     BYTE PTR [eax-0x44],bl
  425c5e:	scas   eax,DWORD PTR es:[edi]
  425c5f:	enter  0xa3d0,0x1
  425c63:	mov    ebx,0x32f5a907
  425c68:	and    dl,BYTE PTR [edi]
  425c6a:	xchg   ebp,eax
  425c6b:	fwait
  425c6c:	call   0x2207461
  425c71:	in     eax,dx
  425c72:	mov    bl,0x7d
  425c74:	adc    ebp,DWORD PTR [edx-0x7c722171]
  425c7a:	enter  0x32cf,0xf5
  425c7e:	retf   
  425c7f:	ret    
  425c80:	lea    esp,[ebx-0x5ef2fe7]
  425c86:	inc    ebx
  425c87:	mov    ch,0x4f
  425c89:	inc    eax
  425c8a:	std    
  425c8b:	xchg   edx,eax
  425c8c:	inc    edi
  425c8d:	rol    BYTE PTR [esi-0x47],0xb6
  425c91:	mov    eax,ds:0x5d3f098f
  425c96:	not    DWORD PTR [eax+0xd]
  425c99:	adc    bh,al
  425c9b:	inc    ebp
  425c9c:	ins    DWORD PTR es:[edi],dx
  425c9d:	sar    DWORD PTR [eax],0x98
  425ca0:	loope  0x425c5b
  425ca2:	leave  
  425ca3:	pop    edx
  425ca4:	mov    al,ds:0xd4034bff
  425ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425caa:	sub    esi,ecx
  425cac:	xchg   edi,eax
  425cad:	test   BYTE PTR [ecx],ah
  425caf:	cs sbb edi,eax
  425cb2:	add    edi,DWORD PTR [esi-0x7d]
  425cb5:	gs pop esi
  425cb7:	mov    al,ds:0x2279ed81
  425cbc:	push   ebx
  425cbd:	xor    esi,esp
  425cbf:	mov    al,0x1d
  425cc1:	jmp    0x19b:0x107f9dc5
  425cc8:	jb     0x425c97
  425cca:	rol    BYTE PTR [ecx],1
  425ccc:	adc    ah,dh
  425cce:	(bad)  
  425ccf:	fst    QWORD PTR [ecx]
  425cd1:	dec    edi
  425cd2:	xchg   edx,eax
  425cd3:	in     eax,0x77
  425cd5:	jo     0x425cd1
  425cd7:	scas   eax,DWORD PTR es:[edi]
  425cd8:	clc    
  425cd9:	cld    
  425cda:	stos   BYTE PTR es:[edi],al
  425cdb:	ds repz jg 0x425d14
  425cdf:	loop   0x425d09
  425ce1:	add    bh,BYTE PTR ds:0x1503853b
  425ce7:	shr    DWORD PTR [ebp-0x6c462bef],0x39
  425cee:	sub    DWORD PTR [eax+0x7fdcbb5f],ebx
  425cf4:	out    0x7,al
  425cf6:	push   ds
  425cf7:	outs   dx,DWORD PTR ds:[esi]
  425cf8:	lods   al,BYTE PTR ds:[esi]
  425cf9:	lods   al,BYTE PTR ds:[esi]
  425cfa:	jmp    DWORD PTR [edx+edi*8+0x521af937]
  425d01:	xchg   esi,eax
  425d02:	cmp    al,dl
  425d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d05:	pop    esp
  425d06:	aad    0x83
  425d08:	inc    edx
  425d09:	push   0x1885220f
  425d0e:	retf   
  425d0f:	pop    ebx
  425d10:	xchg   ebx,eax
  425d11:	cld    
  425d12:	xor    DWORD PTR ds:0xd2a07d24,0x82715885
  425d1c:	shl    DWORD PTR [eax-0x6c6dd4e1],1
  425d22:	adc    DWORD PTR [edx+0x5f6e1e30],eax
  425d28:	hlt    
  425d29:	mov    ch,0x37
  425d2b:	jmp    0x58f2:0x41913a5
  425d32:	lods   al,BYTE PTR ds:[esi]
  425d33:	sbb    edi,edx
  425d35:	pop    es
  425d36:	ins    DWORD PTR es:[edi],dx
  425d37:	or     BYTE PTR [ebp-0xa],bh
  425d3a:	xchg   ebp,eax
  425d3b:	outs   dx,BYTE PTR ds:[esi]
  425d3c:	sbb    DWORD PTR [ebp+0x3813147e],ebx
  425d42:	out    0xfa,eax
  425d44:	pop    eax
  425d45:	xor    DWORD PTR [ecx],ebx
  425d47:	sbb    BYTE PTR [ecx-0x5d],cl
  425d4a:	in     eax,0xf
  425d4c:	push   cs
  425d4d:	mov    dl,0xc3
  425d4f:	dec    eax
  425d50:	push   ebx
  425d51:	aaa    
  425d52:	and    DWORD PTR ds:0xac33e66b,0xffffffa0
  425d59:	loopne 0x425d0f
  425d5b:	pop    edi
  425d5c:	call   0x591fde71
  425d61:	push   edx
  425d62:	aad    0x58
  425d64:	int3   
  425d65:	jno    0x425d9a
  425d67:	xor    cl,BYTE PTR [ebp+0x58]
  425d6a:	clc    
  425d6b:	bound  esi,QWORD PTR [esi+0x0]
  425d71:	add    dh,ch
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [ecx+eax*2-0xc]
  425d80:	sub    BYTE PTR [ecx+0x1d5d5],0xf3
  425d87:	add    al,0x0
  425d89:	add    BYTE PTR [ebx-0x15afba84],dl
  425d8f:	xchg   DWORD PTR [edi-0x5d],ebp
  425d92:	lahf   
  425d93:	mov    eax,ds:0x6754e038
  425d98:	(bad)  [edx]
  425d9a:	inc    eax
  425d9b:	(bad)
  425d9f:	shr    BYTE PTR [esi],1
  425da1:	lahf   
  425da2:	es ds (bad) 
  425da6:	or     dh,al
  425da8:	and    edi,edx
  425daa:	inc    esp
  425dab:	iret   
  425dac:	jg     0x425deb
  425dae:	jno    0x425d32
  425db0:	sbb    bh,BYTE PTR [esi-0x20]
  425db3:	xchg   edi,eax
  425db4:	les    ebx,FWORD PTR [ecx]
  425db6:	dec    ecx
  425db7:	push   es
  425db8:	jl     0x425e1b
  425dba:	xlat   BYTE PTR ds:[ebx]
  425dbb:	add    ecx,DWORD PTR [ecx-0x63df9598]
  425dc1:	sub    DWORD PTR [esp+ebx*8-0x4],esp
  425dc5:	and    DWORD PTR [edi+0x64a5cf3a],0x3e
  425dcc:	ins    DWORD PTR es:[edi],dx
  425dcd:	jge    0x425d75
  425dcf:	pop    ss
  425dd0:	call   0x8c41:0xfa1f9f24
  425dd7:	mov    dh,0x1f
  425dd9:	push   0x48
  425ddb:	in     eax,0xae
  425ddd:	inc    ebx
  425dde:	hlt    
  425ddf:	dec    ecx
  425de0:	xchg   edi,eax
  425de1:	inc    ebp
  425de2:	enter  0xfdc7,0x5c
  425de6:	sub    dh,BYTE PTR ds:0x2c4d339d
  425dec:	sub    edi,ebp
  425dee:	fnstsw WORD PTR [ebp+0x5d]
  425df1:	cmp    BYTE PTR [ebp+eax*1-0x43],ah
  425df5:	call   0x995a2ff5
  425dfa:	mov    ds:0x7d1e38c3,al
  425dff:	pop    es
  425e00:	xchg   esp,eax
  425e01:	into   
  425e02:	push   cs
  425e03:	arpl   WORD PTR [eax+0x69ef6de2],bx
  425e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e0a:	inc    edi
  425e0b:	test   al,0x72
  425e0d:	xchg   esi,eax
  425e0e:	xchg   eax,ebp
  425e10:	inc    ebx
  425e11:	xchg   esi,eax
  425e12:	mov    fs,ecx
  425e14:	mov    cl,0xcb
  425e16:	dec    esp
  425e17:	cmp    bh,BYTE PTR [ebx+0xb84ab16]
  425e1d:	xchg   esi,eax
  425e1e:	sub    eax,0x51ff437b
  425e23:	jle    0x425e2a
  425e25:	aaa    
  425e26:	ins    DWORD PTR es:[edi],dx
  425e27:	push   es
  425e28:	pusha  
  425e29:	sub    bl,ch
  425e2b:	arpl   WORD PTR [ecx-0x56670860],bx
  425e31:	shl    DWORD PTR [esi+0x20],1
  425e34:	into   
  425e35:	sbb    DWORD PTR [esp+ebx*1],esp
  425e38:	and    eax,DWORD PTR [eax-0x68b57969]
  425e3e:	sbb    DWORD PTR [edi],0x8c84e35f
  425e44:	popf   
  425e45:	cld    
  425e46:	rcr    BYTE PTR [edx-0x3e],0xb4
  425e4a:	pop    ds
  425e4b:	dec    esi
  425e4c:	divps  xmm5,XMMWORD PTR [eax+0x64a442cc]
  425e53:	mov    cl,0xef
  425e55:	xlat   BYTE PTR ds:[ebx]
  425e56:	cmp    DWORD PTR [eax-0x65],ecx
  425e59:	push   0xc46027e6
  425e5e:	mov    edi,0x66e736c3
  425e63:	icebp  
  425e64:	enter  0x6e2a,0xaa
  425e68:	adc    eax,0x1b0ece88
  425e6d:	fist   WORD PTR [ebx-0x1bc6aa94]
  425e73:	mov    edx,0x6dfd19d3
  425e78:	pop    esi
  425e79:	mov    edx,0x6796294c
  425e7e:	pop    esi
  425e7f:	xchg   ecx,eax
  425e80:	mov    ah,0x4e
  425e82:	adc    bl,ch
  425e84:	adc    eax,DWORD PTR ds:0x2b5c01c9
  425e8a:	mov    bl,0x2e
  425e8c:	mov    ebx,0x1dbebc56
  425e91:	sub    ebx,DWORD PTR [esi+ebx*2-0xe913c29]
  425e98:	mov    bl,0x41
  425e9a:	shr    DWORD PTR [ebp+0x15],0xf6
  425e9e:	xchg   edi,eax
  425e9f:	test   DWORD PTR [edx+0x1a],eax
  425ea2:	fisttp WORD PTR [edi+ebp*8-0x5d573756]
  425ea9:	leave  
  425eaa:	idiv   esp
  425eac:	xchg   esp,eax
  425ead:	test   al,0x5d
  425eaf:	xchg   ebp,eax
  425eb0:	or     BYTE PTR [edx+0x54],dh
  425eb3:	out    dx,eax
  425eb4:	mov    ah,0xae
  425eb6:	cmp    DWORD PTR [edi+0x6324303a],ebx
  425ebc:	bound  ebx,QWORD PTR [ebp-0x2e]
  425ebf:	xchg   ebx,eax
  425ec0:	and    DWORD PTR [ecx+0x3d],ebx
  425ec3:	adc    BYTE PTR [ecx-0x6d215ca8],dl
  425ec9:	lds    esi,FWORD PTR ds:0xd89d18cf
  425ecf:	cwde   
  425ed0:	mov    edi,0xcfe19e3c
  425ed5:	xchg   esp,eax
  425ed6:	(bad)  
  425ed7:	outs   dx,DWORD PTR ds:[esi]
  425ed8:	(bad)  
  425ed9:	test   al,0xcc
  425edb:	mov    BYTE PTR [esi+esi*8],ch
  425ede:	retf   
  425edf:	pop    es
  425ee0:	push   ds
  425ee1:	xlat   BYTE PTR ds:[ebx]
  425ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ee3:	xor    edi,DWORD PTR [eax-0x2a]
  425ee6:	test   edx,ebx
  425ee8:	bound  ecx,QWORD PTR fs:[edi+0x37a34a1f]
  425eef:	cmp    dl,cl
  425ef1:	(bad)  
  425ef2:	fmul   DWORD PTR [ecx]
  425ef4:	xchg   ebx,eax
  425ef5:	sbb    eax,0xc5542ec8
  425efa:	(bad)  
  425efb:	shl    DWORD PTR [edx+esi*4],1
  425efe:	pop    ds
  425eff:	xchg   BYTE PTR [esi+0x241676be],bl
  425f05:	dec    ebx
  425f06:	ficom  WORD PTR [ecx+0x78]
  425f09:	and    eax,0xcf8b16a3
  425f0e:	rcl    DWORD PTR [edi*2-0x3f37e1f4],cl
  425f15:	pop    ss
  425f16:	xlat   BYTE PTR ds:[bx]
  425f18:	xchg   esi,ebx
  425f1a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f1c:	mov    ds,WORD PTR [ebx]
  425f1e:	scas   eax,DWORD PTR es:[edi]
  425f1f:	lea    esp,[edx-0x5e83b986]
  425f25:	cwde   
  425f26:	pushf  
  425f27:	cli    
  425f28:	adc    BYTE PTR [ecx-0xd],bh
  425f2b:	pop    eax
  425f2c:	pusha  
  425f2d:	xor    bl,cl
  425f2f:	mov    edx,0x956e6601
  425f34:	repnz hlt 
  425f36:	lods   eax,DWORD PTR ds:[esi]
  425f37:	jmp    0x425f89
  425f39:	xchg   dl,ah
  425f3b:	mov    eax,0x270fc4e2
  425f40:	push   cs
  425f41:	shl    BYTE PTR [eax-0x3e],cl
  425f44:	arpl   WORD PTR [ebx-0x3d21202a],bp
  425f4a:	sbb    al,0xa0
  425f4c:	sub    BYTE PTR [edx+edi*1],ch
  425f4f:	ss (bad) 
  425f51:	jbe    0x425fc4
  425f53:	push   edx
  425f54:	out    dx,eax
  425f55:	pop    es
  425f56:	mov    dl,0xf4
  425f58:	cmp    BYTE PTR [edi-0x5dd45146],0x8f
  425f5f:	inc    ebp
  425f60:	xchg   esi,eax
  425f61:	test   eax,0x486da1d
  425f66:	(bad)  
  425f67:	enter  0x7b33,0x3d
  425f6b:	pop    esi
  425f6c:	jo     0x425f98
  425f6e:	and    dh,BYTE PTR [esi]
  425f70:	scas   al,BYTE PTR es:[edi]
  425f71:	out    0x68,eax
  425f73:	jo     0x425feb
  425f75:	out    dx,al
  425f76:	je     0x425f89
  425f78:	cmp    al,0x8f
  425f7a:	lods   al,BYTE PTR ds:[esi]
  425f7b:	jge    0x425f21
  425f7d:	dec    edi
  425f7e:	stos   DWORD PTR es:[edi],eax
  425f7f:	mov    ah,0x68
  425f81:	fs mov bh,0x46
  425f84:	hlt    
  425f85:	jb     0x425fb5
  425f87:	sub    BYTE PTR [edx],dh
  425f89:	fwait
  425f8a:	daa    
  425f8b:	nop
  425f8c:	imul   ecx,esi,0x672c8fdd
  425f92:	hlt    
  425f93:	rep outs dx,BYTE PTR ds:[esi]
  425f95:	lods   al,BYTE PTR ds:[esi]
  425f96:	or     eax,0xfb835471
  425f9b:	out    0xd6,eax
  425f9d:	push   esi
  425f9e:	mov    ebx,0xf2cefcaf
  425fa3:	cmp    eax,0x727f60d7
  425fa8:	xchg   ecx,eax
  425fa9:	sbb    bl,ah
  425fab:	sbb    edi,edi
  425fad:	in     al,0xce
  425faf:	sahf   
  425fb0:	sbb    eax,esp
  425fb2:	push   cs
  425fb3:	add    eax,DWORD PTR [edi+ebx*8-0x7c]
  425fb7:	loopne 0x425f92
  425fb9:	(bad)  
  425fba:	iret   
  425fbb:	push   ecx
  425fbc:	ret    
  425fbd:	cmc    
  425fbe:	jmp    0x426013
  425fc0:	dec    esi
  425fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fc2:	add    eax,ebp
  425fc4:	aad    0x7
  425fc6:	or     esi,esp
  425fc8:	xchg   esp,eax
  425fc9:	or     BYTE PTR [edx],0x5d
  425fcc:	xchg   esp,eax
  425fcd:	das    
  425fce:	or     BYTE PTR [edi],dl
  425fd0:	push   0x6c63449
  425fd5:	sar    ecx,1
  425fd7:	imul   esi,DWORD PTR [ebx+eax*1-0x59],0xffffffd9
  425fdc:	mov    eax,0x79edd762
  425fe1:	cmp    BYTE PTR [eax+0x69],dl
  425fe4:	xchg   esp,eax
  425fe5:	and    eax,0x9f3947ec
  425fea:	jge    0x425fdf
  425fec:	push   edx
  425fed:	inc    ebp
  425fee:	(bad)  
  425fef:	mov    ds:0x20f72508,eax
  425ff4:	je     0x425fe0
  425ff6:	fwait
  425ff7:	mov    ch,0xad
  425ff9:	cmp    DWORD PTR [ecx+eiz*4+0x58],esp
  425ffd:	pop    ebp
  425ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fff:	clc    
  426000:	ins    DWORD PTR es:[edi],dx
  426001:	xor    eax,0xeed5ee00
  426006:	mov    dl,0x19
  426008:	pop    ebp
  426009:	aam    0xec
  42600b:	(bad)  
  42600c:	push   ecx
  42600d:	jl     0x42607b
  42600f:	pmulhw mm4,QWORD PTR [esi-0x66a6db34]
  426016:	ins    DWORD PTR es:[edi],dx
  426017:	jmp    0xdf28:0x366ff2f1
  42601e:	test   DWORD PTR [ebx-0x33ae2a19],edx
  426024:	dec    eax
  426025:	dec    ebx
  426026:	retf   
  426027:	pop    eax
  426028:	or     BYTE PTR [edi-0x297fe3d7],0xdc
  42602f:	popa   
  426030:	inc    esi
  426031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426032:	push   ds
  426033:	ins    BYTE PTR es:[edi],dx
  426034:	test   BYTE PTR [ebp+0x9],dl
  426037:	pop    ds
  426038:	jmp    0xac672cd0
  42603d:	cwde   
  42603e:	sti    
  42603f:	jno    0x426050
  426041:	xor    al,0x28
  426043:	ror    edi,0x3c
  426046:	adc    bl,BYTE PTR [esi+0x76237bd4]
  42604c:	xchg   ebp,eax
  42604d:	xchg   edx,eax
  42604e:	pop    esi
  42604f:	push   ebx
  426050:	xchg   esp,eax
  426051:	sub    WORD PTR [ecx+0x0],si
  426055:	cli    
  426056:	adc    al,0xa1
  426058:	mov    edi,0x90f2d9bb
  42605d:	fsubrp st(7),st
  42605f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426060:	inc    edx
  426061:	push   eax
  426062:	retf   0x9ed0
  426065:	cmp    ah,BYTE PTR [edx]
  426067:	shr    BYTE PTR [edx+0x55],cl
  42606a:	inc    edx
  42606b:	jo     0x4260d8
  42606d:	retf   0x3ff4
  426070:	sub    esi,DWORD PTR [eax-0x7eacd664]
  426076:	arpl   WORD PTR [edx-0xce66cde],cx
  42607c:	(bad)  
  42607d:	out    dx,al
  42607e:	sub    BYTE PTR [ecx],0x36
  426081:	jecxz  0x42607a
  426083:	ins    BYTE PTR es:[edi],dx
  426084:	fs mov edi,0xf91cc2d5
  42608a:	and    DWORD PTR [edx-0x1744ee57],0x31
  426091:	add    eax,0xd120056f
  426097:	jmp    0x26491ee5
  42609c:	cld    
  42609d:	imul   esp,DWORD PTR ss:[edx+0x1a],0xffffffb9
  4260a2:	lock add BYTE PTR [edi+0x76],bh
  4260a6:	aas    
  4260a7:	push   edi
  4260a8:	fild   DWORD PTR [ebx-0x2f]
  4260ab:	mov    ebp,0xc9ee471f
  4260b0:	dec    ecx
  4260b1:	mov    BYTE PTR [ecx+0x6d2bbfd2],ch
  4260b7:	aas    
  4260b8:	bnd jge 0x426067
  4260bb:	sbb    eax,0x4c384716
  4260c0:	ret    
  4260c1:	fadd   DWORD PTR [ebp-0x58]
  4260c4:	fs sub eax,0x4a3de1b0
  4260ca:	sub    BYTE PTR [ebp+0xb],0xeb
  4260ce:	sar    BYTE PTR [ebx+0x4d9bc58],1
  4260d4:	xchg   edx,eax
  4260d5:	push   eax
  4260d6:	outs   dx,BYTE PTR ds:[esi]
  4260d7:	fsub   QWORD PTR [edi+0x12f7c0dc]
  4260dd:	in     eax,dx
  4260de:	add    BYTE PTR [esi+esi*2-0x307e6b4a],0xe1
  4260e6:	aad    0x31
  4260e8:	sti    
  4260e9:	test   DWORD PTR [ebx*4-0x5a582446],edi
  4260f0:	push   cs
  4260f1:	lods   eax,DWORD PTR ds:[esi]
  4260f2:	xlat   BYTE PTR ds:[ebx]
  4260f3:	xlat   BYTE PTR ds:[ebx]
  4260f4:	cld    
  4260f5:	cwde   
  4260f6:	shl    BYTE PTR [ebx+0x48d335e6],0x22
  4260fd:	neg    BYTE PTR [eax+0x44a325f2]
  426103:	sbb    cl,ah
  426105:	jae    0x42616a
  426107:	mov    bh,0xb5
  426109:	pop    esp
  42610a:	stos   DWORD PTR es:[edi],eax
  42610b:	mov    ds:0x9ffa290e,al
  426110:	adc    esp,DWORD PTR [bx+di]
  426113:	jnp    0x42617b
  426115:	sbb    bh,dl
  426117:	out    dx,eax
  426118:	mov    bl,0xbb
  42611a:	hlt    
  42611b:	mov    ds:0xd3a9ea2e,al
  426120:	cwde   
  426121:	clc    
  426122:	pop    edx
  426123:	xlat   BYTE PTR ds:[ebx]
  426124:	mov    DWORD PTR [edi*4+0x54b28011],eax
  42612b:	sbb    ah,BYTE PTR [ebp+0x59f2dff4]
  426131:	cmp    BYTE PTR [edi+0x4362780f],al
  426137:	dec    edx
  426138:	sbb    BYTE PTR [ebx+0x7563125d],al
  42613e:	aaa    
  42613f:	std    
  426140:	hlt    
  426141:	mov    WORD PTR [eax+0x3e3f6e7f],?
  426147:	xchg   DWORD PTR [esi+0x6c],edx
  42614a:	data16 sbb al,0xef
  42614d:	inc    edx
  42614e:	push   edx
  42614f:	jmp    0x4260d6
  426151:	retf   0xc380
  426154:	or     dl,BYTE PTR [edx]
  426156:	(bad)  
  426157:	imul   esp
  426159:	jecxz  0x42617d
  42615b:	fadd   QWORD PTR [esi+eiz*4-0x6f8ed98c]
  426162:	sbb    ebp,ebx
  426164:	push   es
  426165:	aaa    
  426166:	xchg   BYTE PTR [ebp+0x7fdfc60d],dh
  42616c:	jns    0x4261bc
  42616e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42616f:	sbb    DWORD PTR [eax],edx
  426171:	fisttp WORD PTR [ebp-0x66]
  426174:	mov    bh,0xd1
  426176:	fwait
  426177:	xchg   ebx,eax
  426178:	dec    ebx
  426179:	out    0x8c,eax
  42617b:	adc    BYTE PTR [edi],al
  42617d:	ins    BYTE PTR es:[edi],dx
  42617e:	dec    ebx
  42617f:	mov    dh,0x39
  426181:	inc    edx
  426182:	jg     0x4261e8
  426184:	iret   
  426185:	repz adc al,BYTE PTR [edi-0x7e]
  426189:	and    ch,ch
  42618b:	gs jnp 0x426158
  42618e:	xor    edi,DWORD PTR [ebp+0x7b]
  426191:	mov    ebp,0xc9b0fb2f
  426197:	adc    edi,eax
  426199:	xor    esp,edi
  42619b:	dec    edx
  42619c:	sub    DWORD PTR [edi],0x44a7d7b6
  4261a2:	xor    al,0x9c
  4261a4:	ret    0xd934
  4261a7:	lods   al,BYTE PTR ds:[esi]
  4261a8:	inc    ebp
  4261a9:	pop    eax
  4261aa:	sbb    edx,esi
  4261ac:	and    edi,DWORD PTR ds:0xf15d0fd3
  4261b2:	adc    eax,0x11edf0e7
  4261b7:	(bad)  
  4261b8:	sub    eax,0x91d8c13
  4261bd:	add    edx,DWORD PTR [esi+ebx*1]
  4261c0:	je     0x426150
  4261c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261c3:	fadd   QWORD PTR [edx+0x74]
  4261c6:	xor    bh,al
  4261c8:	jno    0x426186
  4261ca:	cmp    DWORD PTR [ecx],0xffffffbc
  4261cd:	lds    esi,FWORD PTR [edi+0x75]
  4261d0:	loopne 0x4261f3
  4261d2:	ficom  DWORD PTR gs:[eax+ebx*8+0x19]
  4261d7:	cmc    
  4261d8:	mov    edx,0xf08da8d4
  4261dd:	and    al,0x83
  4261df:	fimul  DWORD PTR ds:0xf9642965
  4261e5:	mov    esp,0xbc40b8ee
  4261ea:	or     eax,DWORD PTR [eax-0x30bbf6a7]
  4261f0:	(bad)
  4261f3:	(bad)  
  4261f4:	repz scas al,BYTE PTR es:[edi]
  4261f6:	add    al,0x4e
  4261f8:	mov    bl,0x9
  4261fa:	lahf   
  4261fb:	adc    BYTE PTR [ebx+eiz*4-0x6b8ccb46],bh
  426202:	sbb    eax,0x7b935529
  426207:	mov    edi,0xcfc8a192
  42620c:	imul   BYTE PTR [edx]
  42620e:	lahf   
  42620f:	mov    cs,edx
  426211:	dec    ecx
  426212:	repnz hlt 
  426214:	int3   
  426215:	dec    ecx
  426216:	sbb    esp,DWORD PTR [edx+0x2b85cc4f]
  42621c:	in     eax,dx
  42621d:	jmp    0x426295
  42621f:	lods   al,BYTE PTR ds:[esi]
  426220:	int    0xe
  426222:	cmp    dl,cl
  426224:	xchg   edx,eax
  426225:	dec    esp
  426226:	stc    
  426227:	pushf  
  426228:	and    DWORD PTR [edi-0x3e68623c],ebx
  42622e:	xchg   ebx,eax
  42622f:	xchg   esi,eax
  426230:	das    
  426231:	jns    0x426270
  426233:	fsubr  QWORD PTR [edi+edx*1-0x4d7321ee]
  42623a:	test   BYTE PTR [esi+0x67],bl
  42623d:	mov    gs,WORD PTR [eax+0x6b6e0b91]
  426243:	jo     0x4262b9
  426245:	jno    0x426279
  426247:	push   esi
  426248:	add    al,0x66
  42624a:	or     esp,DWORD PTR [eax]
  42624c:	add    al,BYTE PTR [edi+0x64097551]
  426252:	(bad)
  426256:	fisub  WORD PTR [esi]
  426258:	fmul   QWORD PTR [ebx]
  42625a:	mov    ecx,0x552a892d
  42625f:	(bad)  
  426261:	add    eax,0xc5d547d2
  426266:	fimul  WORD PTR [esi-0x49a6d291]
  42626c:	sub    BYTE PTR [edi+0x41e27bab],al
  426272:	sbb    al,BYTE PTR [ebx-0x4fd74f77]
  426278:	punpckhwd mm3,QWORD PTR [esi+0x5bc0]
  42627f:	add    BYTE PTR [eax],al
  426281:	add    BYTE PTR [ecx-0x3d],dh
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	jg     0x426225
  426290:	cmc    
  426291:	mov    al,0xc8
  426293:	fiadd  DWORD PTR [ecx]
  426295:	add    bl,dh
  426297:	add    al,0x0
  426299:	add    BYTE PTR [ebx],ch
  42629b:	xor    al,0x9c
  42629d:	in     al,dx
  42629e:	push   ebp
  42629f:	pop    ss
  4262a0:	jns    0x4262e8
  4262a2:	inc    ecx
  4262a3:	mov    WORD PTR [esp+edx*4+0x44],fs
  4262a7:	aad    0xd8
  4262a9:	xchg   ch,bh
  4262ab:	pop    edi
  4262ac:	fnstsw WORD PTR [esi*1+0x5489ec5a]
  4262b3:	add    bl,ch
  4262b5:	inc    ecx
  4262b6:	cli    
  4262b7:	cwde   
  4262b8:	jmp    0x426330
  4262ba:	mov    ah,0xdd
  4262bc:	repnz mov bl,0x21
  4262bf:	ins    DWORD PTR es:[edi],dx
  4262c0:	adc    BYTE PTR gs:[esi-0x9],dl
  4262c4:	pop    es
  4262c5:	cmp    cl,bh
  4262c7:	cdq    
  4262c8:	add    DWORD PTR [ecx+0x5c],ebx
  4262cb:	pop    ebx
  4262cc:	ror    ch,0xaa
  4262cf:	cmp    BYTE PTR [ebp+0x63],ch
  4262d2:	jecxz  0x426272
  4262d4:	mov    eax,ds:0x2582fb65
  4262d9:	scas   eax,DWORD PTR es:[edi]
  4262da:	mov    al,0x66
  4262dc:	jnp    0x4262dc
  4262de:	retf   
  4262df:	mov    cl,bl
  4262e1:	xor    DWORD PTR [ebx+edi*1-0x3aa199f5],ebp
  4262e8:	sub    al,0x7d
  4262ea:	jno    0x4262cc
  4262ec:	inc    ecx
  4262ed:	cmp    al,0x6
  4262ef:	ins    DWORD PTR es:[edi],dx
  4262f0:	inc    ebx
  4262f1:	pop    edi
  4262f2:	sbb    edi,eax
  4262f4:	(bad)  
  4262f5:	aad    0x30
  4262f7:	into   
  4262f8:	push   ss
  4262f9:	scas   eax,DWORD PTR es:[edi]
  4262fa:	lods   al,BYTE PTR ds:[esi]
  4262fb:	mov    ah,0xe2
  4262fd:	scas   eax,DWORD PTR es:[edi]
  4262fe:	and    ebp,ebx
  426300:	push   cs
  426301:	jns    0x4262c1
  426303:	push   DWORD PTR ss:[esi]
  426306:	call   0x3cf3:0x797d38c4
  42630d:	mov    esp,0x7001b0e6
  426312:	pop    ebp
  426313:	jae    0x4262a5
  426315:	dec    esp
  426316:	pop    edi
  426317:	icebp  
  426318:	or     ebp,edx
  42631a:	sbb    esp,DWORD PTR [edx-0x42]
  42631d:	xchg   ebx,eax
  42631e:	dec    esi
  42631f:	adc    edx,DWORD PTR [ebx+0x3da512d8]
  426325:	ins    DWORD PTR es:[edi],dx
  426326:	call   0x7e8115cf
  42632b:	add    ebp,ebx
  42632d:	inc    ebx
  42632e:	(bad)  
  42632f:	jo     0x426301
  426331:	cmp    eax,0x1fb390d3
  426336:	vsqrtsd xmm1,xmm5,QWORD PTR [ecx+eax*4+0x5d]
  42633c:	repnz xor al,0xcd
  42633f:	xor    DWORD PTR [edx+eiz*8],ebp
  426342:	shl    ecx,cl
  426344:	fadd   DWORD PTR [ecx+edx*4+0x20f888e]
  42634b:	push   cx
  42634d:	pushf  
  42634e:	cs xor eax,0x7da5f191
  426354:	cdq    
  426355:	fldenv [ecx]
  426357:	or     ch,BYTE PTR ds:0xb2afa9b2
  42635d:	pop    edi
  42635e:	dec    edx
  42635f:	in     al,dx
  426360:	icebp  
  426361:	inc    eax
  426362:	sbb    BYTE PTR [esi-0x2d],ch
  426365:	inc    eax
  426366:	and    bl,cl
  426368:	aad    0x51
  42636a:	sbb    DWORD PTR [ebx],edx
  42636c:	and    al,0x26
  42636e:	mov    ds:0xaaecb072,al
  426373:	mov    esi,0x89f1f162
  426378:	push   0xde42068
  42637d:	lods   al,BYTE PTR ds:[esi]
  42637e:	test   eax,0x411d5bc0
  426383:	inc    edx
  426384:	mov    esi,0x95cece42
  426389:	xchg   DWORD PTR [ebp+0x46725f03],esi
  42638f:	adc    al,BYTE PTR [edx]
  426391:	pop    eax
  426392:	adc    eax,0x37c69ef2
  426397:	or     BYTE PTR ds:[esi+0x4e],al
  42639b:	push   ebx
  42639c:	je     0x4263ba
  42639e:	inc    ebx
  42639f:	pop    esi
  4263a0:	dec    esi
  4263a1:	fdivrp st(6),st
  4263a3:	(bad)  
  4263a4:	fwait
  4263a5:	xchg   ebp,eax
  4263a6:	pusha  
  4263a7:	cld    
  4263a8:	xchg   esp,eax
  4263a9:	mov    ebp,esp
  4263ab:	xchg   ebx,ebx
  4263ad:	xlat   BYTE PTR ds:[ebx]
  4263ae:	mov    ah,0x63
  4263b0:	sbb    bh,cl
  4263b2:	leave  
  4263b3:	add    al,0x55
  4263b5:	mov    ah,BYTE PTR [esi-0x43]
  4263b8:	jnp    0x426437
  4263ba:	sahf   
  4263bb:	enter  0x5706,0x3e
  4263bf:	leave  
  4263c0:	fdiv   QWORD PTR [ecx+0x3ffe9e90]
  4263c6:	or     ebp,DWORD PTR [ecx+0x7a899b59]
  4263cc:	inc    ecx
  4263cd:	fcomp  st(2)
  4263cf:	or     BYTE PTR [ebx-0x56],bh
  4263d2:	aad    0x3b
  4263d4:	leave  
  4263d5:	inc    ecx
  4263d6:	mov    bh,0xf1
  4263d8:	xor    eax,0x6e8dabc1
  4263dd:	or     DWORD PTR [ebx],0xfc19ce73
  4263e3:	bnd ja 0x426446
  4263e6:	lea    ebx,[ebp+0x6da67298]
  4263ec:	dec    esp
  4263ed:	xor    eax,DWORD PTR [ecx+0xe]
  4263f0:	shl    DWORD PTR [edi+0x31],cl
  4263f3:	pop    edi
  4263f4:	sub    DWORD PTR [edi+edi*1],esp
  4263f7:	aas    
  4263f8:	push   ecx
  4263f9:	mov    BYTE PTR [esi+ecx*1+0x1e],ch
  4263fd:	xchg   edx,eax
  4263fe:	(bad)  
  4263ff:	xchg   ecx,eax
  426400:	or     eax,0x721d3a99
  426405:	and    esp,DWORD PTR [ebp+0x44]
  426408:	mov    al,al
  42640a:	jae    0x4263a4
  42640c:	mov    ebp,ds
  42640e:	or     al,0x7e
  426410:	push   0x245989cd
  426415:	mov    dh,0x70
  426417:	adc    esi,DWORD PTR [edx-0x18]
  42641a:	je     0x426490
  42641c:	loope  0x4263d5
  42641e:	sub    al,0x4c
  426420:	ins    DWORD PTR es:[edi],dx
  426421:	and    edi,esp
  426423:	test   cl,ah
  426425:	xchg   edx,eax
  426426:	nop
  426427:	mov    dh,0x78
  426429:	stc    
  42642a:	lea    esp,[ecx]
  42642c:	lods   eax,DWORD PTR ds:[esi]
  42642d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42642e:	add    eax,0xe30ffe1
  426433:	imul   esp,DWORD PTR [ebx-0x2a],0x65f46903
  42643a:	or     ebp,ecx
  42643c:	mov    esi,0x9c462655
  426441:	jg     0x4263f3
  426443:	lods   eax,DWORD PTR ds:[esi]
  426444:	pop    ebp
  426445:	mov    eax,0x37216af4
  42644a:	lods   eax,DWORD PTR ds:[esi]
  42644b:	adc    DWORD PTR [ebx+0x57],edi
  42644e:	xor    BYTE PTR [ebx],dh
  426450:	inc    edi
  426451:	nop
  426452:	and    BYTE PTR [eax+0x6d],ch
  426455:	sahf   
  426456:	sub    al,0x33
  426458:	xchg   ecx,eax
  426459:	bound  esi,QWORD PTR [edx+0x21]
  42645c:	fwait
  42645d:	loopne 0x426493
  42645f:	sbb    DWORD PTR [eax-0x733543bf],ecx
  426465:	mov    esi,0xf4be3104
  42646a:	int3   
  42646b:	cli    
  42646c:	jo     0x4264e7
  42646e:	dec    edi
  42646f:	adc    eax,0x86419395
  426474:	shl    DWORD PTR [ebx+edi*4],1
  426477:	jo     0x42644a
  426479:	jns    0x42644b
  42647b:	jo     0x426446
  42647d:	jne    0x42646f
  42647f:	imul   edx,DWORD PTR [ecx],0x73
  426482:	fisttp WORD PTR [edx+0x61]
  426485:	xchg   DWORD PTR [edi+eax*8-0x423717a1],edi
  42648c:	(bad)  
  42648d:	jo     0x42640f
  42648f:	xor    al,0x26
  426491:	scas   al,BYTE PTR es:[edi]
  426492:	xor    eax,0x906f58d9
  426497:	in     al,dx
  426498:	hlt    
  426499:	in     al,0xe8
  42649b:	xchg   ebx,eax
  42649c:	pop    edx
  42649d:	js     0x4264db
  42649f:	cmp    al,0x21
  4264a1:	shl    ebx,1
  4264a3:	mov    ah,0xad
  4264a5:	out    0x8d,eax
  4264a7:	push   cs
  4264a8:	push   ss
  4264a9:	cmp    dl,BYTE PTR [ebx+0x36fcb8b0]
  4264af:	jno    0x4264fa
  4264b1:	xor    ch,0xd4
  4264b4:	out    dx,eax
  4264b5:	cmp    BYTE PTR [edx-0x512eb476],dl
  4264bb:	sub    DWORD PTR [ecx-0x62],ebx
  4264be:	xor    BYTE PTR [edi],al
  4264c0:	xchg   BYTE PTR [eax+0x93e7f7e],bh
  4264c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264c7:	and    ecx,esp
  4264c9:	(bad)  
  4264ca:	dec    ecx
  4264cb:	push   eax
  4264cc:	sub    eax,0xd62320d7
  4264d1:	push   es
  4264d2:	stos   BYTE PTR es:[edi],al
  4264d3:	add    al,0x91
  4264d5:	fsub   st,st(1)
  4264d7:	push   edx
  4264d8:	loope  0x4264e9
  4264da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264db:	add    DWORD PTR [edi-0x61],eax
  4264de:	cli    
  4264df:	rol    BYTE PTR [esi],0x32
  4264e2:	lahf   
  4264e3:	ins    BYTE PTR es:[edi],dx
  4264e4:	lea    edi,[esi+0x43]
  4264e7:	inc    edi
  4264e8:	add    al,0x2b
  4264ea:	jp     0x42647c
  4264ec:	outs   dx,BYTE PTR ds:[esi]
  4264ed:	dec    esp
  4264ee:	in     al,dx
  4264ef:	inc    ebx
  4264f0:	or     ebp,DWORD PTR [ebp+eiz*2-0xcb7b3f6]
  4264f7:	jge    0x426516
  4264f9:	push   0x9cee3b9
  4264fe:	pop    ebp
  4264ff:	(bad)  
  426500:	adc    al,0xee
  426502:	mov    eax,0xc10b7dad
  426507:	add    ah,bl
  426509:	push   esp
  42650a:	or     BYTE PTR [esi+0xf],dl
  42650d:	scas   eax,DWORD PTR es:[edi]
  42650e:	inc    esp
  42650f:	retf   
  426510:	jp     0x4264c6
  426512:	lock fsubp st(2),st
  426515:	lods   al,BYTE PTR ds:[esi]
  426516:	out    0x5d,al
  426518:	cdq    
  426519:	retf   0x45b6
  42651c:	add    bl,dl
  42651e:	call   DWORD PTR [eax-0x3d792a5e]
  426524:	and    BYTE PTR [ebx],ah
  426526:	dec    edi
  426527:	or     eax,0x871d8c1
  42652c:	stc    
  42652d:	test   DWORD PTR [eax+0x23be235e],edx
  426533:	(bad)  
  426534:	jl     0x426563
  426536:	and    DWORD PTR [esi],ebx
  426538:	ret    0xdfd2
  42653b:	rep lods eax,DWORD PTR ds:[esi]
  42653d:	nop
  42653e:	add    DWORD PTR [ebx+0x47fd4463],ebp
  426544:	dec    eax
  426545:	push   es
  426546:	jp     0x4265a0
  426548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426549:	xor    edi,DWORD PTR [edi+0x6b4f340a]
  42654f:	push   esp
  426550:	cmp    al,0x3e
  426552:	fidivr DWORD PTR [ecx]
  426554:	adc    DWORD PTR [edi-0x45],edi
  426557:	adc    DWORD PTR [edi-0x525c1274],edi
  42655d:	xchg   edi,eax
  42655e:	add    BYTE PTR [ebp+0x1f2088ae],al
  426564:	cmc    
  426565:	popf   
  426566:	dec    edi
  426567:	or     BYTE PTR [eax+0x23],0xe6
  42656b:	dec    ebx
  42656c:	xor    ecx,esi
  42656e:	icebp  
  42656f:	and    DWORD PTR [edx+0x4e5b1d8c],esp
  426575:	fcom   DWORD PTR [ecx+0x2aea74bb]
  42657b:	or     al,0x16
  42657d:	test   dh,dl
  42657f:	push   ss
  426580:	mov    BYTE PTR [esi],dh
  426582:	and    cl,dh
  426584:	hlt    
  426585:	retf   0x22d3
  426588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426589:	push   ds
  42658a:	into   
  42658b:	xchg   edi,eax
  42658d:	les    ebp,FWORD PTR [esi-0x4a]
  426590:	pop    ds
  426591:	scas   eax,DWORD PTR es:[edi]
  426592:	xchg   ebx,eax
  426593:	push   esi
  426594:	lock dec esi
  426596:	cli    
  426597:	test   dl,cl
  426599:	fcomp  QWORD PTR [edi-0x38]
  42659c:	loope  0x426575
  42659e:	mov    edx,0xc20f1ce7
  4265a3:	jmp    ebp
  4265a5:	fisub  DWORD PTR [ebx+0x23]
  4265a8:	or     al,BYTE PTR [esi+0x37]
  4265ab:	js     0x42653a
  4265ad:	or     dh,bl
  4265af:	dec    esi
  4265b0:	dec    edi
  4265b1:	inc    esi
  4265b2:	loopne 0x426546
  4265b4:	and    esi,DWORD PTR [ebx+0x1b]
  4265b7:	test   esi,esp
  4265b9:	(bad)  
  4265ba:	jg     0x4265bb
  4265bc:	sub    ecx,DWORD PTR [eax-0x37]
  4265bf:	lods   eax,DWORD PTR ds:[esi]
  4265c0:	pop    edi
  4265c1:	xor    dl,bl
  4265c3:	or     DWORD PTR ds:0x475f4aa8,ecx
  4265c9:	fwait
  4265ca:	dec    ecx
  4265cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265cc:	scas   eax,DWORD PTR es:[edi]
  4265cd:	push   ebp
  4265ce:	xchg   esp,eax
  4265cf:	cdq    
  4265d0:	sbb    DWORD PTR [ebx],esp
  4265d2:	gs sub edi,edx
  4265d5:	pop    ecx
  4265d6:	mov    eax,ds:0x8cd8e448
  4265db:	jecxz  0x4265a2
  4265dd:	ret    0x643a
  4265e0:	xchg   edx,eax
  4265e1:	dec    ebx
  4265e2:	fisub  WORD PTR [eax+edi*2]
  4265e5:	ficomp DWORD PTR [esi-0x76203dab]
  4265eb:	ss push 0x7b5747ef
  4265f1:	push   eax
  4265f2:	inc    ecx
  4265f3:	paddusb mm0,QWORD PTR [edx-0x40]
  4265f7:	dec    esi
  4265f8:	or     al,0xce
  4265fa:	push   edx
  4265fb:	or     BYTE PTR [edi+edx*4],dl
  4265fe:	(bad)  
  4265ff:	fidiv  WORD PTR [esi-0x26]
  426602:	aas    
  426603:	repz mov ecx,0xf0827621
  426609:	mov    bh,0x17
  42660b:	lock jmp 0x9adb:0xc13763b2
  426613:	cmp    bh,BYTE PTR [ebp-0x4000ea36]
  426619:	loop   0x42667c
  42661b:	push   ss
  42661c:	jae    0x4265e3
  42661e:	mov    ecx,0x16751cfa
  426623:	shr    DWORD PTR [edi],cl
  426625:	pop    es
  426626:	mov    bl,0xc
  426628:	fcmovnb st,st(1)
  42662a:	cmp    dl,BYTE PTR [edx+0x64]
  42662d:	mov    bh,0xa
  42662f:	inc    DWORD PTR [ebp-0x5e]
  426632:	adc    ebp,DWORD PTR [ecx-0x6d]
  426635:	iret   
  426636:	and    al,BYTE PTR [ecx-0x19]
  426639:	js     0x4266b5
  42663b:	ins    DWORD PTR es:[edi],dx
  42663c:	mov    ah,0x60
  42663e:	push   esp
  42663f:	test   BYTE PTR [edi],cl
  426641:	cmp    esi,esi
  426643:	enter  0x1eef,0x57
  426647:	inc    esi
  426648:	xor    DWORD PTR [ebp+0x5e],ebp
  42664b:	push   0xffffffd9
  42664d:	fisttp WORD PTR [edi+0x0]
  426650:	push   cs
  426651:	das    
  426652:	push   esi
  426653:	push   ebp
  426654:	mov    ah,ch
  426656:	push   ds
  426657:	add    DWORD PTR [ecx-0x7ecd9ba],eax
  42665d:	push   ds
  42665e:	popa   
  42665f:	pushf  
  426660:	cmp    bh,BYTE PTR [edx+0x1]
  426663:	test   eax,0xf7890fb0
  426668:	sub    eax,0x6214c71f
  42666d:	mov    bl,0x2e
  42666f:	shl    BYTE PTR [edi-0x3383f52d],0x88
  426676:	jno    0x426643
  426678:	sbb    esi,ebp
  42667a:	(bad)  
  42667b:	in     eax,dx
  42667c:	dec    esp
  42667d:	sbb    eax,0x45066f96
  426682:	fbld   TBYTE PTR ds:0x5f3e30e6
  426688:	sti    
  426689:	cmp    edx,DWORD PTR [eax]
  42668b:	into   
  42668c:	inc    edx
  42668d:	call   0x541d:0x8db765b
  426694:	adc    al,0x29
  426696:	add    al,0x1
  426698:	push   ecx
  426699:	ret    0xa853
  42669c:	outs   dx,DWORD PTR ds:[esi]
  42669d:	pop    edi
  42669e:	pop    esp
  42669f:	es retf 
  4266a1:	(bad)  
  4266a2:	mov    ah,0xee
  4266a4:	sbb    edi,DWORD PTR [ebp+0x66]
  4266a7:	popa   
  4266a8:	jns    0x4266ab
  4266aa:	loopne 0x42663e
  4266ac:	xchg   esp,eax
  4266ad:	retf   0x4c9d
  4266b0:	adc    BYTE PTR [esi+0x6c],bh
  4266b3:	call   0x1f92:0xa46b0d19
  4266ba:	jmp    0x337a:0xc54f9448
  4266c1:	ret    0xef25
  4266c4:	fsubr  st(6),st
  4266c6:	xchg   esi,eax
  4266c7:	add    esp,DWORD PTR [eax+ebp*8-0x59]
  4266cb:	xor    bl,BYTE PTR [edi+0x41c32e70]
  4266d1:	scas   al,BYTE PTR es:[edi]
  4266d2:	nop
  4266d3:	fldcw  WORD PTR [ebx-0x5250f921]
  4266d9:	ret    
  4266da:	sbb    edx,DWORD PTR [eax]
  4266dc:	(bad)  
  4266de:	hlt    
  4266df:	aas    
  4266e0:	hlt    
  4266e1:	and    eax,0xf827f4cf
  4266e6:	mov    DWORD PTR [esi],esp
  4266e8:	in     eax,dx
  4266e9:	fisttp QWORD PTR [edi-0x30]
  4266ec:	sbb    eax,0x5873856c
  4266f1:	fwait
  4266f2:	mov    bh,0x98
  4266f4:	in     al,0xbf
  4266f6:	push   esi
  4266f7:	xor    edi,DWORD PTR [ecx-0x3d]
  4266fa:	jns    0x426746
  4266fc:	pop    ebx
  4266fd:	jae    0x4266b1
  4266ff:	push   eax
  426700:	bound  esi,QWORD PTR [edx]
  426702:	or     esi,DWORD PTR [eax+0x6b79c4b6]
  426708:	fwait
  426709:	(bad)  
  42670a:	sub    eax,0x286b1b38
  42670f:	imul   ebx,DWORD PTR [eax+0x223a4f8f],0x62
  426716:	into   
  426717:	pop    ebp
  426718:	mov    WORD PTR [edi+0x25],?
  42671b:	fiadd  WORD PTR [edx-0x473464e1]
  426721:	rcr    BYTE PTR [ebp+0x782deb1a],cl
  426727:	jne    0x426784
  426729:	sub    ch,bh
  42672b:	lahf   
  42672c:	lock sti 
  42672e:	aad    0xc
  426730:	and    al,0xf5
  426732:	jge    0x426730
  426734:	call   0x605b1ec0
  426739:	fs icebp 
  42673b:	pop    edi
  42673c:	into   
  42673d:	out    0x7b,al
  42673f:	push   edx
  426740:	(bad)  
  426741:	adc    ebx,DWORD PTR [edi]
  426743:	dec    ebp
  426744:	fyl2x  
  426746:	xchg   esi,eax
  426747:	add    BYTE PTR ds:0x4f041d2,al
  42674d:	mov    dh,0x95
  42674f:	data16 clc 
  426751:	fs mov bh,0xe8
  426754:	pop    edi
  426755:	jg     0x426711
  426757:	(bad)  
  426758:	lock xchg ebx,eax
  42675a:	or     DWORD PTR [ebp+0x3e],eax
  42675d:	jmp    0x426728
  42675f:	fucom  st(0)
  426761:	popf   
  426762:	xchg   esp,eax
  426763:	gs (bad) 
  426765:	lock mov bl,0x5e
  426768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426769:	std    
  42676a:	es iret 
  42676c:	adc    eax,0x87f92917
  426771:	in     al,dx
  426772:	sub    edx,0x3a
  426775:	scas   al,BYTE PTR es:[edi]
  426776:	rcl    BYTE PTR [edx],cl
  426778:	in     al,dx
  426779:	jne    0x4267e8
  42677b:	in     al,0x3
  42677d:	mov    ebx,0xff5cfe40
  426782:	sbb    eax,0x2928721f
  426787:	xor    bl,ah
  426789:	test   DWORD PTR [edx],ecx
  42678b:	test   al,0xf0
  42678d:	add    BYTE PTR [eax],al
  42678f:	add    BYTE PTR [eax],al
  426791:	add    BYTE PTR [ecx-0x126c16dc],al
  426797:	(bad)  
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	or     al,0x66
  4267a0:	clc    
  4267a1:	add    BYTE PTR [ebx-0xcfffe21],bh
  4267a7:	add    al,0x0
  4267a9:	add    bh,cl
  4267ab:	inc    esp
  4267ac:	jbe    0x426780
  4267ae:	jae    0x426814
  4267b0:	sbb    ebx,DWORD PTR [eax]
  4267b2:	iret   
  4267b3:	mov    esp,0xc5bc460b
  4267b8:	sbb    al,0x3e
  4267ba:	inc    esp
  4267bb:	sub    DWORD PTR [ecx-0x3b],ebp
  4267be:	imul   eax,edx,0xfffffffd
  4267c1:	xchg   DWORD PTR ds:0xc4b4c339,esi
  4267c7:	xchg   DWORD PTR [eax+0x7f],ebx
  4267ca:	fs adc al,0x9d
  4267cd:	push   ebp
  4267ce:	inc    eax
  4267cf:	scas   al,BYTE PTR es:[edi]
  4267d0:	lahf   
  4267d1:	addr16 and dh,al
  4267d4:	jo     0x42678a
  4267d6:	loop   0x42680a
  4267d8:	adc    BYTE PTR [eax+0x1a],dl
  4267db:	mov    ah,0xcb
  4267dd:	sub    DWORD PTR [eax-0x7a],ecx
  4267e0:	repz repz scas eax,DWORD PTR es:[edi]
  4267e3:	bound  esp,QWORD PTR [eax+0x449e76e]
  4267e9:	jae    0x426818
  4267eb:	lahf   
  4267ec:	pop    ecx
  4267ed:	mov    al,0x1a
  4267ef:	loope  0x426860
  4267f1:	cmp    ch,BYTE PTR [ecx]
  4267f3:	pop    ecx
  4267f4:	and    DWORD PTR [ebp-0x3ba75ca4],ebx
  4267fa:	cmp    cl,0x65
  4267fd:	mov    edx,0x276673f9
  426802:	retf   
  426803:	sahf   
  426804:	lods   al,BYTE PTR ds:[esi]
  426805:	out    0x61,al
  426807:	aad    0xdf
  426809:	into   
  42680a:	and    edx,DWORD PTR [ebp-0x3b]
  42680d:	xchg   edx,eax
  42680e:	adc    eax,0x2f91a1cf
  426813:	dec    edx
  426814:	and    esp,DWORD PTR [ebx+0x24]
  426817:	retf   0x2c79
  42681a:	pop    ebx
  42681b:	jmp    0x42681b
  42681d:	push   cs
  42681e:	mov    ds:0xda9e7eed,eax
  426823:	adc    BYTE PTR [esp],ch
  426826:	push   DWORD PTR [ecx]
  426828:	sbb    BYTE PTR [ebx+ecx*2+0xb507635],cl
  42682f:	xor    ch,BYTE PTR [ecx+0x1a]
  426832:	imul   ch
  426834:	stc    
  426835:	mov    ds:0x9a80ce55,al
  42683a:	and    BYTE PTR [ebp+0xf5e7ab1],bh
  426840:	inc    ebx
  426841:	mov    edx,0x8d42c06c
  426846:	outs   dx,BYTE PTR ds:[esi]
  426847:	xchg   edx,eax
  426848:	call   0x8344:0x584fd9d8
  42684f:	fstp   TBYTE PTR [esi-0x63906a72]
  426855:	in     al,0xfb
  426857:	pushf  
  426858:	(bad)  
  426859:	fdiv   DWORD PTR [edx+0xb277331]
  42685f:	inc    edx
  426860:	add    bl,BYTE PTR [edx+esi*2]
  426863:	push   ebx
  426864:	or     dl,BYTE PTR [ebx]
  426866:	mov    eax,DWORD PTR [edi]
  426868:	scas   al,BYTE PTR es:[edi]
  426869:	and    DWORD PTR [ebx+esi*8],esp
  42686c:	outs   dx,DWORD PTR ds:[esi]
  42686d:	in     al,dx
  42686e:	lahf   
  42686f:	push   ebp
  426870:	lahf   
  426871:	inc    edx
  426872:	push   esp
  426873:	push   0x439bf700
  426878:	sub    edi,DWORD PTR [edx+0x11]
  42687b:	and    al,0xdf
  42687d:	mov    bl,0x9c
  42687f:	es pop esi
  426881:	data16 das 
  426883:	hlt    
  426884:	adc    DWORD PTR [edx+0x5fc821b],esi
  42688a:	xchg   edx,eax
  42688b:	vandnps ymm1,ymm2,ymm3
  42688f:	dec    esi
  426890:	pop    ecx
  426891:	outs   dx,DWORD PTR ds:[esi]
  426893:	ins    BYTE PTR es:[edi],dx
  426894:	cld    
  426895:	lock pop ds
  426897:	sub    BYTE PTR [ecx-0x2d7739ff],dl
  42689d:	fwait
  42689e:	sub    DWORD PTR ds:0xa23e116f,ecx
  4268a4:	dec    esp
  4268a5:	adc    ch,0x32
  4268a8:	std    
  4268a9:	stc    
  4268aa:	retf   0xc287
  4268ad:	sub    eax,0x8b6b1c6c
  4268b2:	ins    DWORD PTR es:[edi],dx
  4268b3:	fs mov bh,0x8b
  4268b6:	pop    dx
  4268b8:	shl    BYTE PTR [ebx-0x70d403cf],1
  4268be:	mov    BYTE PTR [ebp+0x236ade4b],cl
  4268c4:	pop    es
  4268c5:	xchg   DWORD PTR [eax-0x4ba2b242],ecx
  4268cb:	and    cl,BYTE PTR [eax-0x74]
  4268ce:	fnstcw WORD PTR [esp+eiz*2+0xb7d09c9]
  4268d5:	ins    DWORD PTR es:[edi],dx
  4268d6:	add    BYTE PTR [ecx],ah
  4268d8:	ds aaa 
  4268da:	and    ah,ch
  4268dc:	jp     0x4268de
  4268de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268df:	xor    eax,DWORD PTR [edx]
  4268e1:	mov    ecx,ebp
  4268e3:	cmp    eax,0x825e64d2
  4268e8:	mov    fs,esp
  4268ea:	shl    BYTE PTR [esp+esi*4+0x234a6d69],0xc1
  4268f2:	mov    ds:0x947c087,al
  4268f7:	and    ah,BYTE PTR [edx]
  4268f9:	jb     0x4268cc
  4268fb:	sub    edi,ebx
  4268fd:	(bad)  
  4268fe:	stos   DWORD PTR es:[edi],eax
  4268ff:	jnp    0x426966
  426901:	ret    
  426902:	fadd   DWORD PTR ds:0xfbf03ddb
  426908:	jns    0x4268e3
  42690a:	jb     0x426895
  42690c:	xor    BYTE PTR [esi-0x44],0x40
  426910:	data16 cld 
  426912:	or     DWORD PTR [eax-0x1a4a8e6c],ebp
  426918:	fs xchg ebx,eax
  42691a:	es in  eax,0xd4
  42691d:	ja     0x426925
  42691f:	push   0xbcf4530d
  426924:	mov    al,ds:0xb3894bab
  426929:	outs   dx,BYTE PTR ds:[esi]
  42692a:	mov    dl,0x72
  42692c:	mov    ds:0xf54613f,al
  426931:	das    
  426932:	(bad)  
  426933:	xor    DWORD PTR [edi+0x4cd16296],esi
  426939:	outs   dx,DWORD PTR ds:[esi]
  42693a:	test   DWORD PTR [esi-0xd],edi
  42693d:	sar    DWORD PTR [eax],0x30
  426940:	mov    WORD PTR [edx+ecx*2],ss
  426943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426944:	pop    esi
  426945:	and    eax,0x12eb8f6b
  42694a:	jno    0x4269a2
  42694c:	ss ret 0xb42f
  426950:	enter  0xb6a4,0xe6
  426954:	fldenv [eax+0x1a1cf32f]
  42695a:	jno    0x4268e6
  42695c:	mul    DWORD PTR [ecx]
  42695e:	adc    al,0x8a
  426960:	dec    ebx
  426961:	or     ebp,DWORD PTR [esi+0x2eb3c881]
  426967:	lahf   
  426968:	imul   esi,DWORD PTR ds:0xc9750851,0x26
  42696f:	adc    eax,0x6ada7543
  426974:	adc    al,0xf0
  426976:	lea    ecx,[ebx-0x1e9e2eeb]
  42697c:	adc    al,0x8d
  42697e:	lods   al,BYTE PTR ds:[esi]
  42697f:	xchg   esp,eax
  426980:	mov    al,ds:0xcbcdc519
  426985:	in     eax,0x4b
  426987:	mov    dl,0xcb
  426989:	and    eax,DWORD PTR [ebx-0x80]
  42698c:	adc    eax,0x22c7b813
  426991:	ret    0x1413
  426994:	mov    eax,ds:0x50653d7b
  426999:	(bad)
  42699e:	pop    ds
  42699f:	gs ds or eax,0xc29ead7f
  4269a6:	out    0x88,al
  4269a8:	xchg   BYTE PTR [ecx+0x4f74fb5a],bh
  4269ae:	(bad)  
  4269af:	addr16 iret 
  4269b1:	es cmp eax,0x479e5223
  4269b7:	push   ebp
  4269b8:	mov    ch,0x86
  4269ba:	push   es
  4269bb:	pushf  
  4269bc:	mov    bl,0x2c
  4269be:	push   0x3b
  4269c0:	xor    eax,DWORD PTR [edx-0x36]
  4269c3:	mov    ch,0x40
  4269c5:	pop    esp
  4269c6:	lock xor al,cl
  4269c9:	and    eax,0x7f36c202
  4269ce:	pop    ebp
  4269cf:	jecxz  0x426960
  4269d1:	pop    ecx
  4269d2:	push   eax
  4269d3:	or     edi,DWORD PTR [ebp+0x30ec14b0]
  4269d9:	pop    ss
  4269da:	xchg   esp,eax
  4269db:	pop    edx
  4269dc:	test   al,0xf6
  4269de:	jmp    0x426a12
  4269e0:	xchg   DWORD PTR [edx+0x78738652],eax
  4269e6:	sahf   
  4269e7:	mov    edx,0xfdc29930
  4269ec:	das    
  4269ed:	popa   
  4269ee:	push   cs
  4269ef:	dec    eax
  4269f0:	dec    esp
  4269f1:	(bad)  
  4269f2:	or     eax,DWORD PTR [edi+0x19a782dc]
  4269f8:	ds push 0xfca27c50
  4269fe:	dec    ebx
  4269ff:	mov    ds:0x68dc4ec0,al
  426a04:	xor    al,0x96
  426a06:	loop   0x426a54
  426a08:	loop   0x4269cc
  426a0a:	jl     0x426a01
  426a0c:	inc    edi
  426a0d:	jns    0x4269c8
  426a0f:	int3   
  426a10:	dec    ebx
  426a11:	and    al,0x4d
  426a13:	mov    eax,ds:0x66a76566
  426a18:	xchg   ebx,eax
  426a19:	daa    
  426a1a:	cdq    
  426a1b:	or     BYTE PTR [edx],dl
  426a1d:	inc    edx
  426a1e:	fsub   st,st(4)
  426a20:	xor    ch,ch
  426a22:	adc    cl,bh
  426a24:	add    DWORD PTR [edi],0x26085537
  426a2a:	stos   DWORD PTR es:[edi],eax
  426a2b:	add    eax,0xe0fcda67
  426a30:	shl    BYTE PTR [ecx-0x30089888],1
  426a36:	in     eax,0xc2
  426a38:	out    0xb7,eax
  426a3a:	jmp    0x426a09
  426a3c:	leave  
  426a3d:	mov    ecx,0xad8a93b6
  426a42:	enter  0x9c5,0xb1
  426a46:	dec    edx
  426a47:	scas   al,BYTE PTR es:[edi]
  426a48:	cmp    BYTE PTR [ebx],bl
  426a4a:	or     cl,BYTE PTR [edi]
  426a4c:	aaa    
  426a4d:	sahf   
  426a4e:	and    ecx,edi
  426a50:	add    ebp,DWORD PTR [ebp-0x1e]
  426a53:	aam    0x5e
  426a55:	retf   0x224c
  426a58:	xchg   DWORD PTR [eax-0x15c94f3b],edi
  426a5e:	out    dx,al
  426a5f:	(bad)  
  426a60:	pop    esi
  426a61:	inc    ecx
  426a62:	rcl    DWORD PTR [ecx-0x1ec2071d],cl
  426a68:	jge    0x426a8d
  426a6a:	mov    bl,0x60
  426a6c:	cdq    
  426a6d:	lds    ebp,FWORD PTR [edi-0x73]
  426a70:	dec    eax
  426a71:	jle    0x4269fb
  426a73:	nop
  426a74:	xor    al,0x4e
  426a76:	push   edi
  426a77:	lods   al,BYTE PTR ds:[esi]
  426a78:	jae    0x426a1e
  426a7a:	pop    edx
  426a7b:	add    al,0x7c
  426a7d:	(bad)  
  426a7e:	out    0xcd,al
  426a80:	into   
  426a81:	and    DWORD PTR [ebp-0x6c],edi
  426a84:	inc    edi
  426a85:	les    esi,FWORD PTR [ecx-0x5]
  426a88:	iret   
  426a89:	push   0xffffffa1
  426a8b:	push   ds
  426a8c:	sbb    DWORD PTR [ecx+ebp*2-0x2],eax
  426a90:	dec    ecx
  426a91:	inc    edx
  426a92:	push   ebp
  426a93:	lods   eax,DWORD PTR ds:[esi]
  426a94:	movhlps xmm1,xmm1
  426a97:	(bad)  
  426a98:	fild   QWORD PTR [esi-0x27e6318b]
  426a9e:	sub    eax,0x9de83dcd
  426aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426aa4:	mov    dh,0x43
  426aa6:	or     eax,0x39a7a54b
  426aab:	add    dh,0xcc
  426aae:	push   edi
  426aaf:	pusha  
  426ab0:	jns    0x426a6e
  426ab2:	mov    ecx,0x23b5b5fa
  426ab7:	scas   al,BYTE PTR es:[edi]
  426ab8:	pop    edi
  426ab9:	mov    ds:0x12dba43d,eax
  426abe:	inc    eax
  426abf:	sbb    ecx,esi
  426ac1:	jns    0x426b2d
  426ac3:	jmp    0xe7b1:0x63b6a9fa
  426aca:	mov    eax,?
  426acc:	jmp    0x18ac:0x7e378c7d
  426ad3:	js     0x426afd
  426ad5:	in     eax,dx
  426ad6:	ss jmp 0xda98:0x215356dd
  426ade:	dec    ecx
  426adf:	push   ecx
  426ae0:	cmp    edi,DWORD PTR [edx+0x3c]
  426ae3:	sbb    al,0xa7
  426ae5:	dec    esp
  426ae6:	ss dec edx
  426ae8:	cli    
  426ae9:	cmp    ah,ah
  426aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426aec:	add    bh,BYTE PTR [ecx-0x4f5da77]
  426af2:	daa    
  426af3:	ja     0x426a7a
  426af5:	mov    bh,0x22
  426af7:	jl     0x426af0
  426af9:	cmc    
  426afa:	cs into 
  426afc:	ins    BYTE PTR es:[edi],dx
  426afd:	retf   
  426afe:	ins    BYTE PTR es:[edi],dx
  426aff:	mov    cl,0x7e
  426b01:	sbb    al,0x80
  426b03:	jle    0x426b4c
  426b05:	sbb    al,0xba
  426b07:	add    eax,0x1e9b9c68
  426b0c:	mov    BYTE PTR [ebx+0x47],0x84
  426b10:	push   edx
  426b11:	mov    ds:0xfd617cf5,al
  426b16:	cdq    
  426b17:	stos   BYTE PTR es:[edi],al
  426b18:	jns    0x426afa
  426b1a:	mov    dl,0x28
  426b1c:	pop    edx
  426b1d:	pushf  
  426b1e:	pop    edx
  426b1f:	cli    
  426b20:	mov    dl,0xa1
  426b22:	push   cs
  426b23:	cmc    
  426b24:	adc    eax,edi
  426b26:	lahf   
  426b27:	sub    al,0x76
  426b29:	std    
  426b2a:	mov    ds:0x37c45230,al
  426b2f:	push   0xb4fd838a
  426b34:	sub    esp,DWORD PTR [esi+0xc]
  426b37:	inc    esp
  426b38:	pusha  
  426b39:	(bad)  
  426b3a:	push   DWORD PTR [eax]
  426b3c:	aas    
  426b3d:	not    DWORD PTR [ebp+eiz*8+0x671cd972]
  426b44:	shr    BYTE PTR [ebp+0xe],1
  426b47:	add    BYTE PTR [eax-0x5d],al
  426b4a:	cmp    ah,ch
  426b4c:	ss cs inc esi
  426b4f:	std    
  426b50:	push   cs
  426b51:	add    BYTE PTR [edi+0x2d75b54d],bh
  426b57:	or     eax,0xe4af9be4
  426b5c:	pusha  
  426b5d:	mov    dh,0xf7
  426b5f:	jb     0x426b58
  426b61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b62:	outs   dx,BYTE PTR ds:[esi]
  426b63:	jb     0x426b6c
  426b65:	inc    edi
  426b66:	sub    al,0x5b
  426b68:	xchg   BYTE PTR [edx-0x5e],dh
  426b6b:	cmc    
  426b6c:	sti    
  426b6d:	or     eax,0xac13b4a2
  426b72:	imul   esi,DWORD PTR [esp+esi*2-0x8284d37],0x7320f2ef
  426b7d:	out    dx,eax
  426b7e:	pusha  
  426b7f:	daa    
  426b80:	imul   BYTE PTR [eax+ebx*4-0x687acee9]
  426b87:	cld    
  426b88:	std    
  426b89:	sub    eax,0xc8219bda
  426b8e:	fidivr DWORD PTR [esi+0x27]
  426b91:	dec    eax
  426b93:	ins    DWORD PTR es:[edi],dx
  426b94:	out    0x4b,al
  426b96:	iret   
  426b97:	push   ebx
  426b98:	jle    0x426be4
  426b9a:	jb     0x426bf3
  426b9c:	cli    
  426b9d:	adc    BYTE PTR [edx+0x4],0x23
  426ba1:	outs   dx,DWORD PTR ds:[esi]
  426ba2:	mov    fs,esi
  426ba4:	adc    DWORD PTR [esi+0x6ebf29a8],ecx
  426baa:	pop    edi
  426bab:	mov    WORD PTR [edi],ds
  426bad:	retf   
  426bae:	push   ebx
  426baf:	xor    bl,dh
  426bb1:	add    BYTE PTR [ecx],ah
  426bb3:	mov    eax,0x3056a7c5
  426bb8:	mov    dl,0x62
  426bba:	stc    
  426bbb:	retf   
  426bbc:	xor    cl,dl
  426bbe:	ins    BYTE PTR es:[edi],dx
  426bbf:	xor    BYTE PTR [ebx+ebx*2],0xed
  426bc3:	sub    al,0x7d
  426bc5:	and    bh,BYTE PTR [edi]
  426bc7:	xchg   esp,eax
  426bc8:	mov    ss,esp
  426bca:	in     eax,0x11
  426bcc:	and    BYTE PTR [eax+0x16d5d159],al
  426bd2:	into   
  426bd3:	jge    0x426b7d
  426bd5:	adc    ch,0xc3
  426bd8:	loop   0x426b78
  426bda:	imul   esp,DWORD PTR [eax+0x5731b489],0xffffffb7
  426be1:	(bad)  
  426be2:	cmp    al,0xfe
  426be4:	imul   DWORD PTR ds:0x94351141
  426bea:	cdq    
  426beb:	mov    bl,0xa8
  426bed:	test   DWORD PTR [edi-0x3a],edx
  426bf0:	push   0xffffff90
  426bf2:	push   ebx
  426bf3:	imul   BYTE PTR [edi]
  426bf5:	sub    bh,BYTE PTR [edx+0x76a76112]
  426bfb:	fisttp QWORD PTR [ebp-0x60]
  426bfe:	push   0xface3fbc
  426c03:	push   esp
  426c04:	jnp    0x426c83
  426c06:	fs daa 
  426c08:	xor    DWORD PTR [esp+ecx*2+0x23c2ab8d],ebp
  426c0f:	add    edi,DWORD PTR [edx+0x5d]
  426c12:	xchg   edi,eax
  426c13:	sbb    BYTE PTR [eiz*2+0x23f7c74],dh
  426c1a:	mov    ah,0x3b
  426c1c:	pop    ecx
  426c1d:	mov    cl,BYTE PTR [esp+ecx*2-0x2]
  426c21:	imul   edx,DWORD PTR [edi+0x156ea96c],0x7d526592
  426c2b:	and    DWORD PTR [edx+0x5da60c7c],esp
  426c31:	gs aas 
  426c33:	jns    0x426c32
  426c35:	ja     0x426c6d
  426c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c38:	dec    edx
  426c39:	not    DWORD PTR [ebx]
  426c3b:	loop   0x426c5a
  426c3d:	add    DWORD PTR [ebp+eax*8+0xe],edx
  426c41:	jns    0x426c97
  426c43:	and    ah,BYTE PTR ds:0xbdc82695
  426c49:	jne    0x426c4d
  426c4b:	push   cs
  426c4c:	rcl    BYTE PTR [esi],cl
  426c4e:	fcomi  st,st(6)
  426c50:	adc    eax,eax
  426c52:	shr    ebx,cl
  426c54:	lea    bp,[eax+0x4d15777e]
  426c5b:	push   ebx
  426c5c:	sbb    al,0x6a
  426c5e:	xchg   edi,eax
  426c5f:	bound  ecx,QWORD PTR [edi+edx*1-0x7d795bfd]
  426c66:	jns    0x426c9b
  426c68:	jae    0x426c13
  426c6a:	mov    eax,ds:0x43f1bdd1
  426c6f:	sub    al,0xe
  426c71:	and    al,0xc7
  426c73:	rcr    BYTE PTR [edi],0x48
  426c76:	add    al,0x63
  426c78:	ss loopne 0x426cae
  426c7b:	addr16 dec esp
  426c7d:	int    0x90
  426c7f:	jp     0x426ce0
  426c81:	data16 int 0xe2
  426c84:	int    0x12
  426c86:	sub    esp,esp
  426c88:	gs out dx,al
  426c8a:	pop    esi
  426c8b:	adc    BYTE PTR [edx],dh
  426c8d:	nop
  426c8e:	push   edx
  426c8f:	jne    0x426c9a
  426c91:	and    DWORD PTR [edx+0x21e80f92],ecx
  426c97:	mov    bl,0xa8
  426c99:	push   0xffffffec
  426c9b:	sub    ecx,ebx
  426c9d:	add    BYTE PTR [eax],al
  426c9f:	add    BYTE PTR [eax],al
  426ca1:	add    BYTE PTR [esi+0x5f451fc0],dl
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx-0x571771f0],cl
  426caf:	aas    
  426cb0:	fs fs scas al,BYTE PTR es:[edi]
  426cb3:	in     al,0x1
  426cb5:	add    bl,dh
  426cb7:	add    al,0x0
  426cb9:	add    dh,cl
  426cbb:	jnp    0x426c62
  426cbd:	inc    ebx
  426cbe:	pop    ds
  426cbf:	test   DWORD PTR [edi+0x254e452c],edx
  426cc5:	add    ebp,esi
  426cc7:	pushf  
  426cc8:	sbb    ebp,DWORD PTR [ecx+0x2f74ae76]
  426cce:	or     ch,ch
  426cd0:	test   DWORD PTR [esi*8+0x5cfd978],esp
  426cd7:	mov    esp,0x24f4de5d
  426cdc:	jo     0x426d3f
  426cde:	add    ebp,DWORD PTR [ebx]
  426ce0:	int    0x80
  426ce2:	stc    
  426ce3:	vpor   xmm4,xmm2,XMMWORD PTR ds:0x1f760fab
  426ceb:	loopne 0x426c7e
  426ced:	sbb    edx,DWORD PTR [esi+0x1b94adaa]
  426cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cf4:	or     edi,DWORD PTR [edx+0x27]
  426cf7:	adc    al,0xab
  426cf9:	loopne 0x426cc1
  426cfb:	loopne 0x426d06
  426cfd:	lods   al,BYTE PTR ds:[esi]
  426cfe:	add    eax,0x8b5dadb1
  426d03:	data16 cmc 
  426d05:	adc    DWORD PTR [ecx+0x53],eax
  426d08:	js     0x426d4d
  426d0a:	js     0x426d2f
  426d0c:	js     0x426d3d
  426d0e:	sbb    dh,bl
  426d10:	dec    edx
  426d11:	retf   
  426d12:	mov    ebx,0x830168d3
  426d17:	rcr    DWORD PTR [ebx],cl
  426d19:	mov    eax,0x89be818e
  426d1e:	rol    BYTE PTR [ebx],cl
  426d20:	jo     0x426ca4
  426d22:	aaa    
  426d23:	xor    dh,dh
  426d25:	push   ss
  426d26:	lea    edx,[esi]
  426d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d29:	lods   al,BYTE PTR ds:[esi]
  426d2a:	call   0xf5e78240
  426d2f:	adc    dh,BYTE PTR [ecx]
  426d31:	ss cs add eax,0x701bebf6
  426d38:	(bad)  
  426d39:	in     eax,0xee
  426d3b:	loope  0x426da5
  426d3d:	pop    eax
  426d3e:	xchg   DWORD PTR [esi],edi
  426d40:	mov    bh,0x20
  426d42:	xor    dl,dh
  426d44:	sbb    DWORD PTR [edx-0x24],edx
  426d47:	std    
  426d48:	int    0x77
  426d4a:	adc    DWORD PTR [esp+eax*1+0x7e8d109e],ebx
  426d51:	push   edi
  426d52:	mov    ?,WORD PTR [edi]
  426d54:	mov    esp,0x6d181818
  426d59:	sti    
  426d5a:	push   esp
  426d5b:	dec    edi
  426d5c:	push   esi
  426d5d:	in     eax,0x6a
  426d5f:	or     ecx,DWORD PTR [ebx]
  426d61:	loope  0x426d47
  426d63:	cs repz dec eax
  426d66:	fwait
  426d67:	iret   
  426d68:	stc    
  426d69:	adc    eax,0xfe2dd24a
  426d6e:	fcomp  QWORD PTR [ecx+0x76]
  426d71:	(bad)  
  426d72:	imul   DWORD PTR [eax-0x53]
  426d75:	pop    DWORD PTR [ecx-0x5f]
  426d78:	sbb    BYTE PTR [esi],ch
  426d7a:	lock fst DWORD PTR [edx+ebx*4-0x14732f0c]
  426d82:	pop    ebx
  426d83:	mov    ebp,0x1b973171
  426d88:	jmp    0x426d20
  426d8a:	or     DWORD PTR [ebx+0x72],esi
  426d8d:	or     DWORD PTR [edx+0x5e],esi
  426d90:	jne    0x426db7
  426d92:	inc    edi
  426d93:	lds    eax,FWORD PTR [edi+0x71]
  426d96:	jmp    FWORD PTR [ecx-0x2519760f]
  426d9c:	in     al,dx
  426d9d:	(bad)  
  426d9e:	push   eax
  426d9f:	(bad)  
  426da0:	ins    DWORD PTR es:[edi],dx
  426da1:	xchg   ecx,eax
  426da2:	xchg   ebx,eax
  426da3:	jnp    0x426de4
  426da5:	ror    BYTE PTR [ebp+0x32],cl
  426da8:	nop
  426da9:	pop    ebx
  426daa:	mov    ch,0xe8
  426dac:	add    edx,eax
  426dae:	gs jnp 0x426e01
  426db1:	adc    eax,0x92ea6c6c
  426db6:	in     eax,dx
  426db7:	push   cs
  426db8:	inc    esp
  426db9:	out    0x66,al
  426dbb:	dec    edi
  426dbc:	lahf   
  426dbd:	mov    ecx,0x6a169b69
  426dc2:	or     eax,0x463283f2
  426dc7:	push   ebx
  426dc8:	adc    al,0x18
  426dca:	and    eax,0x3f1d4060
  426dcf:	pop    ecx
  426dd0:	mov    dl,0xb8
  426dd2:	inc    ebp
  426dd3:	cmp    al,0xce
  426dd5:	or     al,0xde
  426dd7:	xor    al,0x16
  426dd9:	pop    ebp
  426dda:	sbb    ebp,DWORD PTR [ebx]
  426ddc:	hlt    
  426ddd:	cmp    al,0xe
  426ddf:	pushf  
  426de0:	scas   eax,DWORD PTR es:[edi]
  426de1:	icebp  
  426de2:	mov    edi,DWORD PTR [ebx+0x22]
  426de5:	pop    eax
  426de6:	xchg   esi,eax
  426de7:	cmp    DWORD PTR [ecx-0x5e50517a],edi
  426ded:	pop    edi
  426dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426def:	push   0x3d69322a
  426df4:	adc    DWORD PTR [eax+0x8],edi
  426df7:	cmp    DWORD PTR [esi+0x56],0xf0cfa4a7
  426dfe:	ficomp WORD PTR [eax+0x35]
  426e01:	jmp    0xdd1c83b
  426e06:	and    bl,BYTE PTR [edi]
  426e08:	pop    ss
  426e09:	iret   
  426e0a:	rcl    esp,cl
  426e0c:	or     edx,DWORD PTR [edx-0x5462cfe9]
  426e12:	xchg   BYTE PTR [ebp-0x61],dl
  426e15:	inc    ecx
  426e16:	outs   dx,BYTE PTR ds:[esi]
  426e17:	sbb    BYTE PTR [ebx-0x69],ah
  426e1a:	xchg   ecx,eax
  426e1b:	pop    edi
  426e1c:	cdq    
  426e1d:	fwait
  426e1e:	not    BYTE PTR [ebx+0x2]
  426e21:	pop    esp
  426e22:	pop    esi
  426e23:	xchg   eax,ebx
  426e25:	mov    eax,0x3575e74
  426e2a:	adc    al,0x6f
  426e2c:	mov    ebp,0xfbc4733
  426e31:	in     eax,0x47
  426e33:	mov    ebx,0xb0af57a4
  426e38:	stos   BYTE PTR es:[edi],al
  426e39:	push   ebx
  426e3a:	cmp    dl,dh
  426e3c:	mov    WORD PTR [esi-0x7c45d86e],cs
  426e42:	shr    ebx,1
  426e44:	in     eax,0xdf
  426e46:	adc    eax,0xbfc8dcd0
  426e4b:	sbb    al,0xeb
  426e4e:	ret    0x4b2f
  426e51:	inc    edi
  426e52:	adc    dh,BYTE PTR [ebx]
  426e54:	mov    BYTE PTR [edx+0x13],0x8e
  426e58:	(bad)  [ecx+0x6b280b11]
  426e5e:	jo     0x426edf
  426e60:	pop    ecx
  426e61:	adc    ebx,DWORD PTR [ebx]
  426e63:	jecxz  0x426e45
  426e65:	cmp    bl,BYTE PTR [eax]
  426e67:	lahf   
  426e68:	bound  edx,QWORD PTR [eax+0x1ac95045]
  426e6e:	push   cs
  426e6f:	or     DWORD PTR [edx+edx*4+0x65],edi
  426e73:	and    BYTE PTR [eax-0x27e5d72c],bh
  426e79:	push   ecx
  426e7a:	sbb    DWORD PTR [ebp-0xf543356],0xc8768516
  426e84:	test   al,0xd5
  426e86:	mov    esp,0xf7a4ccdb
  426e8b:	je     0x426e6e
  426e8d:	mov    edi,DWORD PTR [edi+edi*8]
  426e90:	dec    esi
  426e91:	sar    dh,0x2
  426e94:	stos   BYTE PTR es:[edi],al
  426e95:	cdq    
  426e96:	cld    
  426e97:	and    ebp,DWORD PTR [ecx-0x4a59ccdf]
  426e9d:	sbb    edi,DWORD PTR [edi-0x71]
  426ea0:	rcr    BYTE PTR [ecx+0x7957a6e2],1
  426ea6:	mov    esp,DWORD PTR [edx+0x13fcdaf0]
  426eac:	cmp    BYTE PTR [ebx],bl
  426eae:	xchg   esp,eax
  426eaf:	inc    ecx
  426eb0:	fimul  WORD PTR [ebx+0x5b03f16]
  426eb6:	dec    eax
  426eb7:	enter  0x2eb9,0x44
  426ebb:	and    ecx,edx
  426ebd:	mov    ah,0x40
  426ebf:	pop    eax
  426ec0:	push   es
  426ec1:	mov    esp,0x63e5fdd3
  426ec6:	sbb    al,0xb3
  426ec8:	mov    eax,0x8f098b84
  426ecd:	fld    st(2)
  426ecf:	mov    al,ds:0xddaa6c5
  426ed4:	xchg   edx,eax
  426ed5:	fs push edi
  426ed7:	push   DWORD PTR [edi+0x40]
  426eda:	mov    ds:0x2b8fe59,al
  426edf:	push   eax
  426ee0:	inc    eax
  426ee1:	xchg   ebp,eax
  426ee2:	mov    ds:0xaa1a2330,eax
  426ee7:	data16 (bad) [ebx]
  426eea:	ficom  WORD PTR [edx+0x3aefd680]
  426ef0:	mov    dl,BYTE PTR [eax+eiz*8+0x60]
  426ef4:	sbb    eax,ebp
  426ef6:	cdq    
  426ef7:	push   esi
  426ef8:	in     eax,0xef
  426efa:	in     eax,dx
  426efb:	mov    esi,0x72eca39f
  426f00:	pushf  
  426f01:	add    al,0x77
  426f03:	stc    
  426f04:	outs   dx,BYTE PTR ds:[esi]
  426f05:	test   DWORD PTR [edi+0x3c],edx
  426f08:	(bad)  
  426f0a:	aaa    
  426f0b:	jl     0x426f47
  426f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f0e:	sub    bh,BYTE PTR [ebp-0x5b473cac]
  426f14:	pop    esi
  426f15:	or     ebx,DWORD PTR [edx-0x61e5208b]
  426f1b:	and    al,0x30
  426f1d:	xchg   ecx,eax
  426f1e:	jbe    0x426f28
  426f20:	cmp    eax,0x9cf0a869
  426f25:	stos   DWORD PTR es:[edi],eax
  426f26:	aas    
  426f27:	push   cs
  426f28:	adc    dh,ch
  426f2a:	push   0xe9b54e8c
  426f2f:	dec    edx
  426f30:	cmc    
  426f31:	lock int 0x47
  426f34:	call   0xcb22798
  426f39:	pop    ecx
  426f3a:	sub    al,0x88
  426f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f3d:	gs arpl bp,di
  426f40:	inc    ebx
  426f41:	ins    BYTE PTR es:[edi],dx
  426f42:	push   edx
  426f43:	jmp    0x54b98c6
  426f48:	mov    bl,0x41
  426f4a:	sbb    eax,0x969b104a
  426f4f:	mov    ds:0x1b0dd94b,al
  426f54:	add    al,0x2e
  426f56:	mov    dl,0xb
  426f58:	fsub   DWORD PTR [edi-0x18]
  426f5b:	(bad)  
  426f5c:	fcmovu st,st(7)
  426f5e:	lods   al,BYTE PTR ds:[si]
  426f60:	bound  esp,QWORD PTR [esi+0x5f836681]
  426f66:	push   cs
  426f67:	pop    eax
  426f68:	push   es
  426f69:	outs   dx,BYTE PTR ds:[esi]
  426f6a:	fdivr  st(1),st
  426f6c:	mov    eax,0xcce7d964
  426f71:	sbb    ebx,DWORD PTR [edi+0x71]
  426f74:	mov    ecx,0x398a0f30
  426f79:	fbld   TBYTE PTR [edx-0x10]
  426f7c:	pop    edi
  426f7d:	sub    eax,0x2d0279ce
  426f82:	lock imul ebx,eax,0xffffffde
  426f86:	retf   0x2312
  426f89:	xchg   edi,eax
  426f8a:	adc    al,0x88
  426f8c:	fcom   QWORD PTR [ebp+edi*1-0x8]
  426f90:	aaa    
  426f91:	psubb  mm0,QWORD PTR [edx-0x146569c6]
  426f98:	jp     0x426f47
  426f9a:	mov    dl,0xcd
  426f9c:	or     BYTE PTR [edi-0x7e],al
  426f9f:	stos   DWORD PTR es:[edi],eax
  426fa0:	mov    WORD PTR [eax],es
  426fa2:	jnp    0x426f89
  426fa4:	(bad)  
  426fa5:	mov    ebp,0x37136610
  426faa:	dec    sp
  426fac:	mov    eax,0x9ef03995
  426fb1:	pop    ebp
  426fb2:	adc    esp,DWORD PTR [ecx-0x12edd891]
  426fb8:	out    dx,al
  426fb9:	sbb    al,0x5e
  426fbb:	inc    ecx
  426fbc:	jnp    0x426fc3
  426fbe:	pop    esp
  426fbf:	xchg   edi,eax
  426fc0:	shl    BYTE PTR [ebp+0x6f],0xba
  426fc4:	inc    esi
  426fc5:	xchg   ecx,eax
  426fc6:	fstp   TBYTE PTR [ebp-0xc]
  426fc9:	mov    ecx,0xf39ed231
  426fce:	push   esp
  426fcf:	fstp   DWORD PTR [edx+0x79fcaf86]
  426fd5:	in     eax,dx
  426fd6:	test   eax,0x1c166b6f
  426fdb:	cmp    BYTE PTR [edi+ebp*2],dh
  426fde:	jmp    esi
  426fe0:	rcr    BYTE PTR [eax+0x639a87c5],0x13
  426fe7:	rol    BYTE PTR [eax-0x8bf4273],1
  426fed:	push   es
  426fee:	in     al,dx
  426fef:	pushf  
  426ff0:	xor    ebp,ebx
  426ff2:	rcl    BYTE PTR [eax-0x28],0x69
  426ff6:	std    
  426ff7:	sbb    DWORD PTR [ebp+0x5429099e],eax
  426ffd:	aaa    
  426ffe:	cdq    
  426fff:	xchg   ebx,eax
  427000:	add    DWORD PTR [ebp+0x3f],esi
  427003:	inc    ebx
  427004:	cmp    BYTE PTR [esi+0x5c15b59b],bh
  42700a:	call   0x897d:0xccc50b9e
  427011:	je     0x426ff3
  427013:	sub    BYTE PTR [edx],0x3d
  427016:	jg     0x42704d
  427018:	mov    BYTE PTR [esi+ebp*8-0x2d],bh
  42701c:	dec    ecx
  42701d:	add    al,0x9e
  42701f:	(bad)  
  427020:	(bad)  
  427021:	pop    esi
  427022:	sbb    al,0x7a
  427024:	mov    dl,0xfb
  427026:	adc    al,0x65
  427028:	and    al,0xa0
  42702a:	pop    eax
  42702b:	add    al,0xf1
  42702d:	cdq    
  42702e:	fild   DWORD PTR [ecx+0x19]
  427031:	test   al,0xd8
  427033:	xor    BYTE PTR [ebp+edx*8+0x35],0x12
  427038:	retf   
  427039:	dec    edx
  42703a:	sbb    esi,DWORD PTR [esi+0x386dc5d4]
  427040:	cli    
  427041:	not    BYTE PTR [eax-0x33]
  427044:	fwait
  427045:	add    bh,ah
  427047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427048:	ja     0x42709f
  42704a:	mov    bh,BYTE PTR [esi]
  42704c:	shl    DWORD PTR [edx],1
  42704e:	std    
  42704f:	dec    ebx
  427050:	test   al,0x39
  427052:	pushf  
  427053:	out    dx,eax
  427054:	jo     0x427003
  427056:	push   ebx
  427057:	pop    ss
  427058:	and    DWORD PTR [edx-0x17871002],ebp
  42705e:	out    0x4a,eax
  427060:	inc    esi
  427061:	fnstsw WORD PTR [edi]
  427063:	fldcw  WORD PTR ss:[ebx-0x5ca4328a]
  42706a:	stos   DWORD PTR es:[edi],eax
  42706b:	dec    edx
  42706c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42706d:	pop    esi
  42706e:	and    dh,dl
  427070:	xchg   ecx,eax
  427071:	out    0xc3,eax
  427073:	es mov ebp,0x9f63a89b
  427079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42707a:	in     al,dx
  42707b:	pop    esp
  42707c:	add    edx,DWORD PTR [ecx]
  42707e:	in     al,dx
  42707f:	pop    edx
  427080:	lahf   
  427081:	cli    
  427082:	jnp    0x4270dc
  427084:	pop    es
  427085:	(bad)
  427088:	inc    edi
  427089:	out    0x60,al
  42708b:	(bad)  
  42708c:	sbb    cl,BYTE PTR [edx+0x3a739a29]
  427092:	cdq    
  427093:	mov    eax,0x8e97567f
  427098:	hlt    
  427099:	int    0x27
  42709b:	mov    ch,0x17
  42709d:	add    al,0x6d
  42709f:	jl     0x4270a0
  4270a1:	lods   al,BYTE PTR ds:[esi]
  4270a2:	mov    edi,DWORD PTR [eax]
  4270a4:	push   ss
  4270a5:	pop    es
  4270a6:	mov    DWORD PTR [esi],edx
  4270a8:	add    DWORD PTR [ecx],0x1fbd29b9
  4270ae:	mov    bl,0x6c
  4270b0:	aad    0x70
  4270b2:	xor    al,0x65
  4270b4:	nop
  4270b5:	int3   
  4270b6:	push   es
  4270b7:	inc    esi
  4270b8:	call   0xc69c:0x793ddfb
  4270bf:	ins    BYTE PTR es:[edi],dx
  4270c0:	pop    edi
  4270c1:	jnp    0x4270bd
  4270c3:	jne    0x4270e7
  4270c5:	fs adc al,0x7f
  4270c8:	mov    esi,?
  4270ca:	ss in  al,dx
  4270cc:	pop    es
  4270cd:	adc    eax,0x3b6dbe47
  4270d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270d3:	fdiv   DWORD PTR [edx+0x19096318]
  4270d9:	iret   
  4270da:	push   0x1b
  4270dc:	jmp    0x756:0x78107ef3
  4270e3:	in     al,0xf4
  4270e5:	sti    
  4270e6:	sbb    DWORD PTR [edx],esp
  4270e8:	sahf   
  4270e9:	xchg   ebx,eax
  4270ea:	push   cs
  4270eb:	sub    BYTE PTR [eax+0x69],ah
  4270ee:	adc    eax,0xc1b18cc5
  4270f3:	(bad)  
  4270f4:	or     BYTE PTR [edi-0x4c],cl
  4270f7:	cmp    BYTE PTR [eax+0x3839e6b5],ch
  4270fd:	mov    eax,ds:0x8906e4f1
  427102:	pop    edi
  427103:	imul   esi,DWORD PTR [ebx+ebp*1+0x15034946],0xf1ba8e35
  42710e:	in     eax,0x3d
  427110:	scas   al,BYTE PTR es:[edi]
  427111:	(bad)
  427115:	cmp    BYTE PTR [esp+ebx*1-0x12b98b66],cl
  42711c:	cmp    bh,BYTE PTR [ebx]
  42711e:	jmp    0x4270bf
  427120:	in     al,dx
  427121:	xor    eax,DWORD PTR [edi-0x51d5abb3]
  427127:	sar    dh,0xae
  42712a:	add    bl,BYTE PTR [ebp-0xe7cbd42]
  427130:	mov    dh,BYTE PTR [eax]
  427132:	sub    eax,DWORD PTR [esi+0x77]
  427135:	scas   al,BYTE PTR es:[edi]
  427136:	sub    al,0x40
  427138:	mov    bl,0x68
  42713a:	jns    0x427116
  42713c:	ins    BYTE PTR es:[edi],dx
  42713d:	test   BYTE PTR [edi+0x7c],cl
  427140:	out    0x14,al
  427142:	out    dx,al
  427143:	shr    DWORD PTR [ebx],cl
  427145:	push   ebp
  427146:	push   ecx
  427147:	and    DWORD PTR [ebp-0x54c19aad],ebx
  42714d:	aaa    
  42714e:	in     eax,0x6d
  427150:	neg    DWORD PTR [edx+0x5b]
  427153:	rol    BYTE PTR ds:0x21ea1663,cl
  427159:	out    0x1b,eax
  42715b:	and    DWORD PTR [ebx],ebp
  42715d:	rol    BYTE PTR [ebx-0x74cd5032],0x3d
  427164:	dec    esp
  427165:	inc    esp
  427166:	push   edx
  427167:	leave  
  427168:	repnz (bad) 
  42716a:	call   DWORD PTR [ebx]
  42716c:	sti    
  42716d:	mov    al,0xb8
  42716f:	das    
  427170:	daa    
  427171:	aaa    
  427172:	add    al,0xfd
  427174:	jbe    0x427133
  427176:	std    
  427177:	arpl   WORD PTR [ecx],sp
  427179:	adc    ah,BYTE PTR [ebx-0x1af51679]
  42717f:	sub    BYTE PTR [esi+0xcdf994e],ch
  427185:	aam    0xf6
  427187:	in     al,0xc0
  427189:	or     al,0x56
  42718b:	enter  0xcf02,0x11
  42718f:	cmp    BYTE PTR [eax],dl
  427191:	cmp    eax,0x3bc18c7f
  427196:	mov    esp,0xc7ad4fc1
  42719b:	or     DWORD PTR [eax+0x6a],0x8e68fc53
  4271a2:	js     0x4271b4
  4271a4:	push   ds
  4271a5:	shl    BYTE PTR [ecx+0x79],cl
  4271a8:	mov    BYTE PTR [ecx+0x8b4fd7],ah
  4271ae:	add    BYTE PTR [eax],al
  4271b0:	add    BYTE PTR [eax],al
  4271b2:	sub    eax,DWORD PTR [edi-0xc021e8b]
  4271b8:	mov    edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	cli    
  4271bf:	shl    BYTE PTR [ebp-0x42],0xa1
  4271c3:	jmp    0x53571c9
  4271c8:	add    BYTE PTR [eax],al
  4271ca:	rcl    WORD PTR [ecx+0x9],cl
  4271ce:	icebp  
  4271cf:	gs cwde 
  4271d1:	push   es
  4271d2:	pop    es
  4271d3:	imul   edx,DWORD PTR [ecx+0x213c2a31],0x611aea9c
  4271dd:	fisttp WORD PTR [ebx]
  4271df:	fmul   st,st(0)
  4271e1:	(bad)  
  4271e3:	(bad)  
  4271e4:	loopne 0x4271cf
  4271e6:	retf   
  4271e7:	adc    ah,BYTE PTR [ecx-0x2ca82f1c]
  4271ed:	iret   
  4271ee:	sti    
  4271ef:	loop   0x4271eb
  4271f1:	rcl    BYTE PTR [ebx+eax*4+0x21331345],0x3
  4271f9:	ds push edi
  4271fb:	jmp    0x8bdd112
  427200:	mov    BYTE PTR [ecx+ebp*4-0x27],dh
  427204:	or     ecx,DWORD PTR [edx]
  427206:	mov    BYTE PTR [eax-0x32],bh
  427209:	cs call 0x3a56e0ea
  42720f:	xchg   ebx,ebx
  427211:	div    ebx
  427213:	test   eax,0xd3796aa8
  427218:	adc    al,0xad
  42721a:	int3   
  42721b:	and    eax,0x4fb10c7d
  427220:	fcmovbe st,st(0)
  427222:	mov    eax,ds:0x17dd1c50
  427227:	scas   al,BYTE PTR es:[edi]
  427228:	jbe    0x4271d3
  42722a:	dec    esp
  42722b:	inc    eax
  42722c:	fs stos BYTE PTR es:[edi],al
  42722e:	pop    DWORD PTR [esi*4-0x4d0cf2f9]
  427235:	push   ss
  427236:	sub    ebp,edi
  427238:	std    
  427239:	call   0x88fb:0x98f27929
  427240:	dec    ecx
  427241:	jecxz  0x42725b
  427243:	in     eax,0xbc
  427245:	sub    cl,bl
  427247:	div    DWORD PTR [esi]
  427249:	sbb    BYTE PTR ds:0x335f1d9a,dh
  42724f:	adc    eax,0xaf838bd9
  427254:	fwait
  427255:	mov    ds:0x4b3e2a27,eax
  42725a:	in     al,dx
  42725b:	pop    esp
  42725c:	or     al,ah
  42725e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42725f:	xchg   ebp,eax
  427260:	mov    ?,WORD PTR [edi]
  427262:	(bad)  
  427263:	fdivr  DWORD PTR [esi]
  427265:	mov    ch,dl
  427267:	ret    
  427268:	mov    al,0x7f
  42726a:	ror    ebp,1
  42726c:	cli    
  42726d:	test   BYTE PTR [ecx+0x45],0x20
  427271:	hlt    
  427272:	or     dl,0x48
  427275:	bound  eax,QWORD PTR [ebp+0x2cbe6853]
  42727b:	sahf   
  42727c:	pop    eax
  42727d:	lods   al,BYTE PTR ds:[esi]
  42727e:	(bad)  
  42727f:	mov    esi,0xb6fd619e
  427284:	pusha  
  427285:	cli    
  427286:	(bad)  
  427287:	pop    ebp
  427288:	xchg   edx,eax
  427289:	pop    es
  42728a:	shr    DWORD PTR [edi+ebp*4],1
  42728d:	pushf  
  42728e:	mov    esp,0x99322b06
  427293:	and    BYTE PTR [edx+0x8acbab9],al
  427299:	int3   
  42729a:	pushf  
  42729b:	sub    DWORD PTR [ecx],ebx
  42729d:	sub    eax,edi
  42729f:	sub    al,0x8f
  4272a1:	lods   al,BYTE PTR ds:[esi]
  4272a2:	adc    al,0x87
  4272a4:	xor    DWORD PTR [ecx+0xdec1446],0xa
  4272ab:	jp     0x427286
  4272ad:	jmp    0x278c643e
  4272b2:	pushf  
  4272b3:	dec    edx
  4272b4:	inc    ecx
  4272b5:	int3   
  4272b6:	inc    esi
  4272b7:	inc    ebx
  4272b8:	rol    BYTE PTR [edi+0x1b7f7b35],0x6a
  4272bf:	pop    ebx
  4272c0:	cmp    DWORD PTR [ecx],0xfd13775
  4272c6:	inc    ebp
  4272c7:	sub    al,0x8d
  4272c9:	push   esi
  4272ca:	daa    
  4272cb:	or     eax,edi
  4272cd:	mov    esp,0x262052fc
  4272d2:	xor    dl,BYTE PTR [ebx]
  4272d4:	xchg   esp,eax
  4272d5:	icebp  
  4272d6:	xchg   esp,eax
  4272d7:	jmp    0x1e2d:0x33e2b24c
  4272de:	mov    ds:0x448487ee,al
  4272e3:	call   0x392b:0xc52d0e00
  4272ea:	pop    edx
  4272eb:	cs and al,0xf0
  4272ee:	sub    BYTE PTR [ebp+0xb],ch
  4272f1:	sub    esp,esp
  4272f3:	hlt    
  4272f4:	inc    edi
  4272f6:	mov    bh,0x17
  4272f8:	packssdw mm0,QWORD PTR [ebp+0x70]
  4272fc:	lods   eax,DWORD PTR ds:[esi]
  4272fd:	fwait
  4272fe:	loope  0x4272a4
  427300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427301:	dec    esp
  427302:	sahf   
  427303:	sahf   
  427304:	repz daa 
  427306:	xor    DWORD PTR [ebx+0x6f],0x64228a7e
  42730d:	cs push ecx
  42730f:	retf   
  427310:	jns    0x4272fd
  427312:	out    dx,eax
  427313:	imul   ebp,DWORD PTR [eax-0x5d],0x8bf9c51b
  42731a:	xor    dl,dh
  42731c:	mov    bh,0xec
  42731e:	mov    edx,0xbddb868
  427323:	mov    ecx,0x4a3e596b
  427328:	cmp    ebp,DWORD PTR [ebx]
  42732a:	xchg   esp,eax
  42732b:	cld    
  42732c:	repnz inc edi
  42732e:	loopne 0x4272e6
  427330:	and    dl,BYTE PTR [edi+0x586d466c]
  427336:	push   ss
  427337:	ror    BYTE PTR [esi],cl
  427339:	mov    al,0x87
  42733b:	push   es
  42733c:	and    DWORD PTR [edx+0x5c6c926f],esp
  427342:	push   es
  427343:	xchg   BYTE PTR [edi+eax*1-0x60],bh
  427347:	in     eax,0xc7
  427349:	into   
  42734a:	int3   
  42734b:	leave  
  42734c:	(bad)  
  42734d:	xchg   esp,eax
  42734e:	pop    ss
  42734f:	ret    
  427350:	int    0xd5
  427352:	out    dx,eax
  427353:	out    0xff,eax
  427355:	jne    0x4272dc
  427357:	xchg   edi,eax
  427358:	rol    BYTE PTR [ebp+0x45],cl
  42735b:	jns    0x4272ef
  42735d:	and    DWORD PTR [ebp-0x6386af5d],esi
  427363:	mov    bh,0x23
  427365:	mov    eax,ds:0x67cad0fe
  42736a:	sub    al,0xc5
  42736c:	out    dx,eax
  42736d:	rcl    BYTE PTR [edx+0x475cadee],0xa9
  427374:	int    0xe6
  427376:	pop    ebx
  427377:	aad    0xed
  427379:	mov    ebp,0x4c6225ab
  42737e:	push   0xdf7ad147
  427383:	int    0x18
  427385:	call   0x95a7:0x2b30e9f8
  42738c:	(bad)  
  42738d:	in     al,0xf4
  42738f:	bound  esi,QWORD PTR [eax+0x23]
  427392:	mov    edx,edi
  427394:	jb     0x427321
  427396:	dec    edi
  427397:	shl    bh,1
  427399:	addr16 pushf 
  42739b:	xor    eax,DWORD PTR [ecx+0x214f21ba]
  4273a1:	or     bl,ah
  4273a3:	mov    edx,0x571d1d2f
  4273a8:	or     eax,0x9c52c7d1
  4273ad:	jg     0x4273c0
  4273af:	sbb    esp,DWORD PTR [edx]
  4273b1:	pop    edx
  4273b2:	jle    0x4273be
  4273b4:	xor    DWORD PTR [ebx+0x379446c0],esp
  4273ba:	ins    DWORD PTR es:[edi],dx
  4273bb:	inc    ebp
  4273bc:	(bad)  
  4273bd:	sbb    esi,DWORD PTR [esp+ebp*4]
  4273c0:	xchg   ebp,eax
  4273c1:	jmp    0x385c04c4
  4273c6:	mov    ecx,DWORD PTR [ebx+0x7a187573]
  4273cc:	jnp    0x427383
  4273ce:	jl     0x42736d
  4273d0:	or     al,0xb3
  4273d2:	jmp    0xf0ca68cf
  4273d7:	daa    
  4273d8:	sub    ecx,DWORD PTR ds:0x8849dfc9
  4273de:	aam    0xa3
  4273e0:	xchg   esi,eax
  4273e1:	test   DWORD PTR [edi+0x3b],ebx
  4273e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273e5:	mov    eax,ds:0x3587e239
  4273ea:	sub    BYTE PTR [edx-0x6a993661],ch
  4273f0:	pop    esi
  4273f1:	dec    eax
  4273f2:	mov    bh,0x64
  4273f4:	jnp    0x4273c3
  4273f6:	out    dx,al
  4273f7:	ins    BYTE PTR es:[edi],dx
  4273f8:	mov    ebp,0xca8bc895
  4273fd:	jae    0x427476
  4273ff:	jno    0x42742f
  427401:	sub    bl,BYTE PTR [ebx]
  427403:	in     eax,0x6c
  427405:	xchg   esp,eax
  427406:	in     eax,dx
  427407:	test   al,0x72
  427409:	repnz aam 0xbc
  42740c:	or     BYTE PTR ds:0x3dce21f2,dh
  427412:	ja     0x427485
  427414:	inc    edx
  427415:	xor    dh,dl
  427417:	mov    edi,0xbed54764
  42741c:	jmp    0x804312c7
  427421:	xor    BYTE PTR [ebx+0x732c0a7a],cl
  427427:	(bad)  [esi-0x31db6383]
  42742d:	cmp    eax,0xf53f475d
  427432:	jae    0x4273fc
  427434:	push   edx
  427435:	adc    eax,0xa91eb7b9
  42743a:	inc    edi
  42743b:	or     edx,esp
  42743d:	fcom   QWORD PTR [eax+0x23]
  427440:	int    0x81
  427442:	sahf   
  427443:	dec    esp
  427444:	and    al,0x48
  427446:	adc    al,0xed
  427448:	xor    eax,0x842b11ad
  42744d:	jae    0x42741c
  42744f:	mov    DWORD PTR [ecx+0x103e49a7],0xdd615afd
  427459:	int3   
  42745a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42745b:	ficomp WORD PTR [ecx]
  42745d:	sbb    esp,ebp
  42745f:	push   0x6ad7f548
  427464:	jne    0x427422
  427466:	mov    dh,0xe1
  427468:	mov    edi,0x37f49b1
  42746d:	add    DWORD PTR [eax],ecx
  42746f:	sub    bl,al
  427471:	dec    ecx
  427472:	cmp    eax,DWORD PTR [eax]
  427474:	sbb    edx,esp
  427476:	dec    ecx
  427477:	in     al,0x17
  427479:	rol    DWORD PTR [esi],0x65
  42747c:	ret    0x3928
  42747f:	popa   
  427480:	sub    eax,DWORD PTR [ebx]
  427482:	jl     0x4274a9
  427484:	add    eax,0x6d938c8
  427489:	stc    
  42748a:	les    esi,FWORD PTR [ebp+0x4541702b]
  427490:	(bad)  
  427491:	scas   eax,DWORD PTR es:[edi]
  427492:	mov    ah,0x62
  427494:	pop    ebx
  427495:	push   edx
  427496:	jp     0x427457
  427498:	push   ss
  427499:	ins    BYTE PTR es:[edi],dx
  42749a:	pushf  
  42749b:	sub    BYTE PTR [ebp+0x2ffd8608],bh
  4274a1:	and    eax,0x8438df85
  4274a6:	jle    0x427462
  4274a8:	out    dx,eax
  4274a9:	scas   eax,DWORD PTR es:[edi]
  4274aa:	pop    esi
  4274ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274ac:	push   ds
  4274ad:	jl     0x42747a
  4274af:	fsub   QWORD PTR [edi]
  4274b1:	push   cs
  4274b2:	mov    edx,0x4e876ce1
  4274b7:	dec    esi
  4274b8:	xchg   edx,eax
  4274b9:	mov    ecx,0xd715b0c7
  4274be:	shr    ebp,1
  4274c0:	xorps  xmm4,XMMWORD PTR [eax]
  4274c3:	lods   eax,DWORD PTR ds:[esi]
  4274c4:	adc    BYTE PTR [esi+0x73],bl
  4274c7:	imul   esi,DWORD PTR [edi],0x9e20e39b
  4274cd:	mov    al,0xbb
  4274cf:	or     edi,DWORD PTR [edx-0x48f5da82]
  4274d5:	add    al,0x28
  4274d7:	out    0xef,eax
  4274d9:	xor    al,0x14
  4274db:	add    esp,DWORD PTR [ebp-0x23b5396]
  4274e1:	ror    DWORD PTR [ebx+edi*2+0x26],0xc3
  4274e6:	push   esi
  4274e7:	in     eax,0x12
  4274e9:	sub    BYTE PTR [ebx+0x2c6bf5c5],0xe1
  4274f0:	mov    bl,ch
  4274f2:	sbb    ebx,ecx
  4274f4:	(bad)
  4274f7:	idiv   DWORD PTR [eax-0x1f]
  4274fa:	and    dh,0x2e
  4274fd:	xlat   BYTE PTR ds:[ebx]
  4274fe:	outs   dx,DWORD PTR ds:[esi]
  4274ff:	xor    bh,dh
  427501:	adc    ebp,0x18
  427504:	push   es
  427505:	push   esp
  427506:	jmp    0xa3f4046a
  42750b:	cld    
  42750c:	and    al,0xf
  42750e:	lahf   
  42750f:	cmp    eax,0x529bb87
  427514:	into   
  427515:	fnstcw WORD PTR [ebp-0x5d]
  427518:	sub    DWORD PTR [edx+0x264dd1b1],edi
  42751e:	pop    ebp
  42751f:	inc    esp
  427520:	outs   dx,DWORD PTR ds:[esi]
  427521:	arpl   WORD PTR [esi],si
  427523:	add    eax,0xd15fe2eb
  427528:	jmp    0x42751b
  42752a:	mov    edx,0xdd90731c
  42752f:	adc    eax,0xe4864fe7
  427534:	mov    BYTE PTR [edi-0x3e3357db],ch
  42753a:	mov    cl,0xc1
  42753c:	aam    0x26
  42753e:	inc    edx
  42753f:	xor    DWORD PTR [ecx+0x29],edx
  427542:	icebp  
  427543:	push   ebx
  427544:	das    
  427545:	test   BYTE PTR [ecx],al
  427547:	popf   
  427548:	push   eax
  427549:	loopne 0x42759a
  42754b:	mov    ch,0xcc
  42754d:	gs or  eax,0x373dc122
  427553:	push   ebp
  427554:	inc    edi
  427555:	push   ecx
  427556:	jns    0x42751d
  427558:	out    dx,al
  427559:	xor    al,0x95
  42755b:	sub    eax,DWORD PTR [edi+eiz*8-0x35]
  42755f:	jns    0x427583
  427561:	add    al,0xc8
  427563:	jne    0x4274ff
  427565:	inc    edi
  427566:	jne    0x4275a1
  427568:	inc    edi
  427569:	xor    DWORD PTR [ebx+0x29],esp
  42756c:	sbb    BYTE PTR [ecx],bh
  42756e:	adc    edi,ecx
  427570:	and    DWORD PTR [esi+0x60cb7c55],ebp
  427576:	mov    esp,0xf2b21c98
  42757b:	or     eax,0xbdc1e64e
  427580:	ins    BYTE PTR es:[edi],dx
  427581:	mov    ds:0x34ac70e5,al
  427586:	(bad)  
  427587:	imul   eax,DWORD PTR [ecx-0x46],0xfffffffb
  42758b:	xchg   edx,eax
  42758c:	lds    ebx,FWORD PTR [ebx-0x37eb355e]
  427592:	sub    ebx,DWORD PTR [edi+0x68]
  427595:	aad    0x0
  427597:	and    al,0xfc
  427599:	inc    esp
  42759a:	sar    BYTE PTR [ecx-0x77dbf390],cl
  4275a0:	add    edx,DWORD PTR [ebx+eax*4-0x2a]
  4275a4:	and    DWORD PTR [ebx],ecx
  4275a6:	jbe    0x4275ca
  4275a8:	inc    ebx
  4275a9:	and    eax,DWORD PTR [ecx-0x27]
  4275ac:	js     0x4275fe
  4275ae:	stos   DWORD PTR es:[edi],eax
  4275af:	rcr    DWORD PTR [esi-0x37dadd7],0x5d
  4275b6:	jp     0x427582
  4275b8:	mov    dl,0x6
  4275ba:	xchg   BYTE PTR [edi+0x3276f073],al
  4275c0:	mov    gs,WORD PTR [esi-0xa20cebf]
  4275c6:	or     BYTE PTR [edx],cl
  4275c8:	add    eax,0x25d6843e
  4275cd:	ins    DWORD PTR es:[edi],dx
  4275ce:	inc    edi
  4275cf:	aaa    
  4275d0:	retf   
  4275d1:	in     al,dx
  4275d2:	dec    ebp
  4275d3:	pop    ebx
  4275d4:	repnz aaa 
  4275d6:	lea    edi,[esi+0x1a]
  4275d9:	je     0x427613
  4275db:	xchg   ecx,eax
  4275dc:	mov    DWORD PTR [edx-0x58],0xc96611c2
  4275e3:	mov    bh,0x65
  4275e5:	popa   
  4275e6:	cmc    
  4275e7:	inc    BYTE PTR [ebp-0x7ce07efd]
  4275ed:	ficom  WORD PTR [ecx+0xe30f1d2]
  4275f3:	ficom  DWORD PTR ss:[edx]
  4275f6:	adc    DWORD PTR [ebx+0x6f],ecx
  4275f9:	mov    ch,0x7b
  4275fb:	jno    0x4275c3
  4275fd:	mov    dl,0xcf
  4275ff:	aad    0xfa
  427601:	cmp    al,0x2b
  427603:	out    0x54,al
  427605:	dec    ebx
  427606:	retf   0x370c
  427609:	call   0xb98dbbe7
  42760e:	or     BYTE PTR [edi],ah
  427610:	sub    DWORD PTR ds:0x2316469c,eax
  427616:	(bad)  
  427617:	rol    DWORD PTR [edi+0x52],1
  42761a:	jmp    0xaa10:0x35930f52
  427621:	fucomi st,st(2)
  427623:	adc    DWORD PTR [ebp-0x2e],ebx
  427626:	jo     0x427639
  427628:	daa    
  427629:	inc    esi
  42762a:	add    eax,0xea694b97
  42762f:	push   ebp
  427630:	bound  ebp,QWORD PTR [eax-0x6d93bc51]
  427636:	fsub   DWORD PTR [esi-0x2a]
  427639:	into   
  42763a:	push   ebx
  42763b:	sub    al,cl
  42763d:	(bad)  
  42763e:	fsub   st(7),st
  427640:	stos   DWORD PTR es:[edi],eax
  427641:	jmp    FWORD PTR [ecx]
  427643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427644:	cwde   
  427645:	mov    esi,0x62307a3f
  42764a:	cmp    bl,0x59
  42764d:	int3   
  42764e:	cs cld 
  427650:	test   al,0x34
  427652:	(bad)  
  427653:	mov    ds:0xdffb48d2,eax
  427658:	(bad)  
  427659:	fidiv  DWORD PTR [ebx-0x5b]
  42765c:	repnz cmp esi,esi
  42765f:	test   BYTE PTR [edi+ecx*4-0x1ec16964],bh
  427666:	stos   DWORD PTR es:[edi],eax
  427667:	pop    eax
  427668:	retf   0xa68d
  42766b:	std    
  42766c:	lea    esi,[edi-0x5]
  42766f:	and    DWORD PTR [ebx],ebx
  427671:	mov    eax,ds:0x38cede55
  427676:	xchg   esp,eax
  427677:	sbb    ch,BYTE PTR [ecx+ecx*2]
  42767a:	data16 div BYTE PTR ds:0x7377f14
  427682:	xor    ch,ch
  427684:	fadd   DWORD PTR [esi+edi*2-0x55c98fbd]
  42768b:	jl     0x4276ba
  42768d:	mov    ch,0x72
  427690:	cmp    BYTE PTR [ebp+0x79],cl
  427693:	push   0xa54889db
  427698:	adc    ecx,DWORD PTR [esi]
  42769a:	cli    
  42769b:	cmp    edx,DWORD PTR [esi+0x77178724]
  4276a1:	sti    
  4276a2:	ret    0x2db5
  4276a5:	mov    cl,0x9f
  4276a7:	or     al,0xe0
  4276a9:	xor    al,0x78
  4276ab:	cmp    DWORD PTR [edx+0x592e0a57],0xea8dd27a
  4276b5:	repz inc ebp
  4276b7:	aaa    
  4276b8:	and    DWORD PTR [ebx-0x6d],ebp
  4276bb:	je     0x4276fc
  4276bd:	add    BYTE PTR [eax],al
  4276bf:	add    BYTE PTR [eax],al
  4276c1:	add    BYTE PTR [edx],cl
  4276c3:	les    esp,FWORD PTR [ecx+0x5ef7eff7]
  4276c9:	std    
  4276ca:	mov    ebp,0xabf91c3b
  4276cf:	test   eax,0xee943768
  4276d4:	add    DWORD PTR [eax],eax
  4276d6:	repz add al,0x0
  4276d9:	add    cl,cl
  4276db:	xor    al,0x45
  4276dd:	pop    ebp
  4276de:	lods   al,BYTE PTR ds:[esi]
  4276df:	push   cs
  4276e0:	mov    BYTE PTR [edi],ah
  4276e2:	mov    esi,0xcec220db
  4276e7:	gs out dx,eax
  4276e9:	rcl    BYTE PTR [edx+eax*4-0x1c6d1a2],cl
  4276f0:	imul   eax,DWORD PTR [esi+eax*1-0x4],0x67
  4276f5:	or     ah,BYTE PTR [edx-0x5eec529e]
  4276fb:	inc    ebp
  4276fc:	mov    eax,0x59c0e3d
  427701:	mov    DWORD PTR [edi-0xa],esp
  427704:	push   edx
  427705:	push   cs
  427706:	mov    al,0x1
  427708:	(bad)  
  427709:	fsub   DWORD PTR [edx]
  42770b:	gs jb  0x4276ce
  42770e:	and    eax,0x8e230762
  427713:	or     esp,edx
  427715:	fild   DWORD PTR [ecx+0x62]
  427718:	xlat   BYTE PTR ds:[ebx]
  427719:	jge    0x427765
  42771b:	dec    edx
  42771c:	imul   edi,DWORD PTR [eax-0x3d1969ae],0x8b3db592
  427726:	(bad)  
  427727:	mov    ebp,0x1e378299
  42772c:	mov    ah,0x7f
  42772e:	ins    BYTE PTR es:[edi],dx
  42772f:	rcr    DWORD PTR [edx],cl
  427731:	jbe    0x42772b
  427733:	inc    ecx
  427734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427735:	lock aad 0xf2
  427738:	std    
  427739:	and    al,0x4f
  42773b:	mov    ecx,0x6a2e9238
  427740:	cmp    dl,BYTE PTR [ecx+0x41]
  427743:	sub    ch,BYTE PTR [eax+0x6c]
  427746:	mov    WORD PTR [edx+edx*2-0x450fed0a],gs
  42774d:	lahf   
  42774e:	adc    eax,0x60babb91
  427753:	mov    WORD PTR [edi+0x146ffa0a],gs
  427759:	int    0x45
  42775b:	push   esp
  42775c:	imul   ebp,DWORD PTR [ebp+0x7440051a],0xdd527401
  427766:	sbb    eax,0xcf3aefbe
  42776b:	aam    0x75
  42776d:	fist   DWORD PTR [ecx+0x77]
  427770:	and    BYTE PTR [ebx-0x2a],cl
  427773:	stos   BYTE PTR es:[edi],al
  427774:	mov    ds:0x5ae47159,eax
  427779:	pop    edx
  42777a:	ja     0x427723
  42777c:	sahf   
  42777d:	and    esi,ebx
  42777f:	sub    eax,0xa868703a
  427784:	xchg   edx,eax
  427785:	sahf   
  427786:	sbb    dl,BYTE PTR [edi+0x7439f0d4]
  42778c:	pop    esp
  42778d:	gs pop ds
  42778f:	ins    DWORD PTR es:[edi],dx
  427790:	ins    DWORD PTR es:[edi],dx
  427791:	adc    al,0x9b
  427793:	outs   dx,DWORD PTR ds:[esi]
  427794:	pop    ecx
  427795:	pop    edi
  427796:	mov    esp,0x1bd8d916
  42779b:	call   DWORD PTR [edx-0x7dc2e457]
  4277a1:	inc    DWORD PTR [edi-0xe6ba93d]
  4277a7:	test   DWORD PTR [edx],ecx
  4277a9:	fisub  DWORD PTR [ebx-0x28]
  4277ac:	xchg   ebp,eax
  4277ad:	cmp    eax,0x26a36254
  4277b2:	cli    
  4277b3:	mov    edx,0x4aaee052
  4277b8:	sub    eax,0x85cbab4a
  4277bd:	add    al,0x8f
  4277bf:	inc    esi
  4277c0:	dec    ebx
  4277c1:	inc    edx
  4277c2:	or     ebx,ebx
  4277c4:	rcr    BYTE PTR [esi+eiz*8-0x20],1
  4277c8:	or     bh,0x33
  4277cb:	jecxz  0x42782d
  4277cd:	dec    edi
  4277ce:	inc    eax
  4277cf:	jl     0x4277ba
  4277d1:	push   eax
  4277d2:	adc    dl,dl
  4277d4:	adc    eax,0x80fbbb30
  4277d9:	mov    al,0xc3
  4277db:	push   edx
  4277dc:	aad    0x8b
  4277de:	pop    ecx
  4277df:	dec    esp
  4277e0:	xor    DWORD PTR [ebx],0xffffff95
  4277e3:	(bad)  [ebx+0x3e]
  4277e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277e7:	aad    0x47
  4277e9:	hlt    
  4277ea:	and    eax,0x9e435d4d
  4277ef:	icebp  
  4277f0:	lods   al,BYTE PTR ds:[esi]
  4277f1:	add    ch,BYTE PTR [edx-0x26]
  4277f4:	mov    ecx,DWORD PTR [ebp+0xf]
  4277f7:	std    
  4277f8:	test   eax,0xcade7e4
  4277fd:	xor    DWORD PTR [ecx+eax*1],edi
  427800:	ins    BYTE PTR es:[edi],dx
  427801:	add    eax,eax
  427803:	push   ebp
  427804:	push   ecx
  427805:	ja     0x4277b9
  427807:	push   edx
  427808:	adc    al,0xd5
  42780a:	adc    dl,BYTE PTR [ebp-0x757545e1]
  427810:	mov    cl,0x6a
  427812:	cs cwde 
  427814:	inc    esi
  427815:	or     dh,BYTE PTR [ecx+0x3b]
  427818:	push   0xffffffdc
  42781a:	mov    ch,0x8b
  42781c:	in     eax,0x5
  42781e:	fs jb  0x427813
  427821:	lock jecxz 0x42784e
  427824:	(bad)  
  427825:	and    eax,DWORD PTR [ecx-0x2c]
  427828:	fs call 0x9cdde9fc
  42782e:	ins    DWORD PTR es:[edi],dx
  42782f:	inc    edi
  427830:	adc    BYTE PTR [ecx-0x56527ca0],cl
  427836:	and    dl,BYTE PTR [esi]
  427838:	bound  esp,QWORD PTR ds:0x68a4789b
  42783e:	out    0x44,eax
  427840:	adc    cl,ah
  427842:	or     al,0xa8
  427844:	into   
  427845:	and    ah,BYTE PTR [edx+0x44]
  427848:	mov    DWORD PTR [bx+0x6474],esi
  42784d:	out    dx,al
  42784e:	pop    ebp
  42784f:	ret    0x813
  427852:	rol    DWORD PTR [ebx+ebx*8],1
  427855:	pop    ecx
  427856:	push   cs
  427857:	hlt    
  427858:	pop    esp
  427859:	xor    DWORD PTR [edi-0x4e25e8d7],ecx
  42785f:	lods   al,BYTE PTR ds:[esi]
  427860:	inc    eax
  427861:	push   ebx
  427862:	fwait
  427863:	sar    BYTE PTR [esp+edx*2+0x48],1
  427867:	mov    es,edx
  427869:	sbb    al,0xf3
  42786b:	test   DWORD PTR [edi-0x6],eax
  42786e:	mul    DWORD PTR ds:[esi-0x25088194]
  427875:	mov    esi,DWORD PTR [eax-0x71bfa638]
  42787b:	mov    cl,0xe0
  42787d:	aad    0x68
  42787f:	jne    0x42783f
  427881:	jmp    0x4278ab
  427883:	mov    edi,0x74b6f1fe
  427888:	fnstsw WORD PTR [ecx+0x6a6dc3ac]
  42788e:	dec    ecx
  42788f:	mov    dh,0x73
  427891:	or     bl,cl
  427893:	popa   
  427894:	xchg   edi,eax
  427895:	jecxz  0x4278d0
  427897:	sti    
  427898:	std    
  427899:	loop   0x427853
  42789b:	pop    edi
  42789c:	cmp    al,0x41
  42789e:	repz jmp 0x427838
  4278a1:	adc    esp,DWORD PTR cs:[eax-0x24639eae]
  4278a8:	outs   dx,BYTE PTR ds:[esi]
  4278a9:	dec    ebp
  4278aa:	xor    ah,BYTE PTR [edi*2+0x62161391]
  4278b1:	iret   
  4278b2:	daa    
  4278b3:	stos   DWORD PTR es:[edi],eax
  4278b4:	pop    eax
  4278b5:	push   ebx
  4278b6:	fidivr WORD PTR [ebx-0x305330e4]
  4278bc:	leave  
  4278bd:	cmp    esp,esi
  4278bf:	sbb    al,BYTE PTR [eax+edx*4-0x397dee3]
  4278c6:	xchg   bh,dh
  4278c8:	and    BYTE PTR [ecx+ebp*4-0x74],cl
  4278cc:	(bad)  
  4278cd:	sar    DWORD PTR ds:0x866cc332,cl
  4278d3:	int    0x78
  4278d5:	mov    eax,0x19a6b1f3
  4278da:	jg     0x427890
  4278dc:	sbb    dh,cl
  4278de:	mov    BYTE PTR [ebx+ecx*1],cl
  4278e1:	mov    ch,0xb7
  4278e3:	into   
  4278e4:	xchg   ecx,eax
  4278e5:	add    ah,BYTE PTR [ebx]
  4278e7:	sbb    edi,esi
  4278e9:	ror    BYTE PTR [edi+0x1c],0x4
  4278ed:	mov    ds,esp
  4278ef:	cmp    BYTE PTR [ecx+ebx*2],0x16
  4278f3:	jno    0x42795e
  4278f5:	push   ds
  4278f6:	pop    ds
  4278f7:	or     eax,0xb2645dc2
  4278fc:	out    dx,al
  4278fd:	iret   
  4278fe:	pop    ebp
  4278ff:	inc    edx
  427900:	fst    DWORD PTR [esi+0x50]
  427903:	retf   0xa527
  427906:	stos   BYTE PTR es:[edi],al
  427907:	push   edi
  427908:	push   ds
  427909:	push   esi
  42790a:	and    DWORD PTR [eax+0x634f080b],edx
  427910:	push   0xffffff9e
  427912:	gs jbe 0x4278fe
  427915:	xchg   BYTE PTR cs:[esi+0x7f68c26d],dh
  42791c:	jmp    0x4278c2
  42791e:	adc    al,0xbd
  427920:	sub    BYTE PTR [ecx-0x13],al
  427923:	enter  0xee4b,0x26
  427927:	loop   0x42791d
  427929:	mov    ds:0x6898bbf4,eax
  42792e:	(bad)  
  42792f:	daa    
  427930:	cmp    al,0x44
  427932:	mov    ch,0x4b
  427934:	shl    BYTE PTR [edi],1
  427936:	test   eax,0x557d82f2
  42793b:	xlat   BYTE PTR ds:[bx]
  42793d:	lods   eax,DWORD PTR ds:[esi]
  42793e:	and    ebx,DWORD PTR gs:[edx]
  427941:	dec    edi
  427942:	imul   ebp,DWORD PTR [ecx+ebp*1+0x37],0x6f
  427947:	cmp    eax,0xb2b20015
  42794c:	fsubr  DWORD PTR gs:[edi+0x319755e2]
  427953:	mov    eax,0xf3d0659d
  427958:	add    BYTE PTR [eax+ebx*2-0x7f3b0246],ch
  42795f:	and    al,0x1
  427961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427962:	pushf  
  427963:	lods   al,BYTE PTR ds:[esi]
  427964:	or     dl,bl
  427966:	outs   dx,BYTE PTR ds:[esi]
  427967:	cwde   
  427968:	ja     0x42797e
  42796a:	add    DWORD PTR [edi],esi
  42796c:	push   ecx
  42796d:	sub    al,0x8f
  42796f:	inc    ebp
  427970:	scas   al,BYTE PTR es:[edi]
  427971:	pop    edi
  427972:	and    dl,BYTE PTR [ebx+0x3a]
  427975:	gs mov bh,0xe6
  427978:	xchg   edx,eax
  427979:	or     DWORD PTR [edi+0x1fc94d8a],ebp
  42797f:	aad    0x69
  427981:	sub    al,0x47
  427983:	dec    esp
  427984:	add    esi,edi
  427986:	stos   DWORD PTR es:[edi],eax
  427987:	mov    ah,cl
  427989:	xchg   DWORD PTR [eax-0xa],esp
  42798c:	sbb    al,0x6c
  42798e:	jmp    0x427911
  427990:	nop
  427991:	sbb    BYTE PTR [ecx-0x10],al
  427994:	es push edx
  427996:	scas   eax,DWORD PTR es:[edi]
  427997:	pop    ebx
  427998:	xchg   edx,eax
  427999:	jne    0x427a06
  42799b:	pop    ebx
  42799c:	xchg   ebx,eax
  42799d:	cmp    dh,BYTE PTR [eax+0x16]
  4279a0:	sub    eax,0x746e0e26
  4279a5:	push   0xffffffda
  4279a7:	(bad)  
  4279a9:	lds    ebp,FWORD PTR [bx+0x4cf2]
  4279ae:	mov    eax,0xee8a7e13
  4279b3:	sbb    ah,BYTE PTR [ebp-0x15]
  4279b6:	and    cl,BYTE PTR [edi+ebx*2]
  4279b9:	pop    DWORD PTR [ebx-0x21]
  4279bc:	js     0x427a34
  4279be:	test   DWORD PTR [esp+eax*4-0x7fe5b20],edx
  4279c5:	not    DWORD PTR [edi-0x24]
  4279c8:	in     al,0x4a
  4279ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279cb:	lods   al,BYTE PTR ds:[esi]
  4279cc:	xor    al,0xbe
  4279ce:	in     eax,dx
  4279cf:	je     0x4279f2
  4279d1:	ror    BYTE PTR [ebx-0x871583],0xf9
  4279d8:	push   ss
  4279d9:	leave  
  4279da:	xor    bh,BYTE PTR [ebx+ebx*8-0x1e]
  4279de:	(bad)  
  4279e0:	leave  
  4279e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279e2:	cs div eax
  4279e5:	and    BYTE PTR [eax+0x61],bl
  4279e8:	jb     0x4279c5
  4279ea:	lea    edi,[edx+0x61]
  4279ed:	jle    0x427a4b
  4279ef:	push   ecx
  4279f0:	retf   
  4279f1:	push   0xffffffdf
  4279f3:	clc    
  4279f4:	push   0x4c
  4279f6:	mov    ah,0x71
  4279f8:	push   ecx
  4279f9:	fdiv   QWORD PTR [ecx]
  4279fb:	xor    DWORD PTR [edx+0x4b],edx
  4279fe:	jb     0x4279ab
  427a00:	mov    ds:0x7314383a,al
  427a05:	sti    
  427a06:	out    0x7e,al
  427a08:	sub    ah,BYTE PTR [ecx]
  427a0a:	shr    bl,1
  427a0c:	neg    bl
  427a0e:	ret    
  427a0f:	or     DWORD PTR [eax+0x1092ee53],0x48365c0b
  427a19:	in     eax,dx
  427a1a:	lahf   
  427a1b:	bound  ebx,QWORD PTR [ecx-0x41b06fc8]
  427a21:	pushf  
  427a22:	or     eax,0x55548f15
  427a27:	jb     0x427a20
  427a29:	in     eax,0x36
  427a2b:	pop    esp
  427a2c:	fdivrp st(0),st
  427a2e:	lock jle 0x427a8a
  427a31:	and    al,0x2e
  427a33:	out    dx,al
  427a34:	xchg   DWORD PTR [esi-0x15],esp
  427a37:	jmp    0xf630284e
  427a3c:	sbb    BYTE PTR [esi-0x8],ah
  427a3f:	mov    DWORD PTR [esi],esp
  427a41:	std    
  427a42:	nop
  427a43:	aaa    
  427a44:	fcomp  QWORD PTR [edx]
  427a46:	dec    ebp
  427a47:	repnz mov ch,0x49
  427a4a:	adc    eax,0x62e20078
  427a4f:	adc    al,BYTE PTR [eax+0x6402b741]
  427a55:	mov    ebx,0x3d0f7932
  427a5a:	add    al,0x1e
  427a5c:	test   eax,0x8c24d2ba
  427a61:	xchg   ebx,eax
  427a62:	loop   0x427abf
  427a64:	bound  ebx,QWORD PTR [eax+ebp*1-0x23]
  427a68:	leave  
  427a69:	mov    bh,0x50
  427a6b:	out    0x8d,al
  427a6d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  427a6f:	pop    esi
  427a70:	push   cs
  427a71:	sbb    eax,0x588e8857
  427a76:	popa   
  427a77:	or     dh,BYTE PTR fs:[edx+0x2]
  427a7b:	and    DWORD PTR [edx-0x54],ecx
  427a7e:	or     al,0x92
  427a80:	inc    ecx
  427a81:	pop    eax
  427a82:	ins    BYTE PTR es:[edi],dx
  427a83:	in     eax,dx
  427a84:	je     0x427aee
  427a86:	ret    
  427a87:	stos   BYTE PTR es:[edi],al
  427a88:	xchg   esp,eax
  427a89:	and    dl,ch
  427a8b:	rcl    BYTE PTR [edi-0x135a9c42],0x80
  427a92:	jbe    0x427ac2
  427a94:	rol    BYTE PTR [edi+0x9c942c2],0xb6
  427a9b:	jmp    0xbda290f4
  427aa0:	sbb    eax,0x9fdcc3c1
  427aa5:	scas   eax,DWORD PTR es:[edi]
  427aa6:	push   0xfffffff6
  427aa8:	pop    edi
  427aa9:	pushf  
  427aaa:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427aac:	bound  ebx,QWORD PTR [ecx]
  427aae:	int3   
  427aaf:	jae    0x427abd
  427ab1:	push   0x7a556e62
  427ab6:	mov    ecx,0x691ebf8c
  427abb:	push   ecx
  427abc:	mov    bl,bh
  427abe:	and    ah,cl
  427ac0:	loop   0x427a94
  427ac2:	pop    edi
  427ac3:	adc    BYTE PTR [edx],dh
  427ac5:	mov    ds,WORD PTR [ebx]
  427ac7:	cmp    eax,0xdf167902
  427acc:	ins    BYTE PTR es:[edi],dx
  427acd:	and    eax,0x6022ba05
  427ad2:	iret   
  427ad3:	stc    
  427ad4:	and    BYTE PTR [edx],bl
  427ad6:	add    ebp,DWORD PTR [eax+0x28]
  427ad9:	jmp    0xf7e1:0x4d8a30e0
  427ae0:	sbb    al,BYTE PTR [ebx-0x76]
  427ae3:	xchg   ecx,eax
  427ae4:	je     0x427b28
  427ae6:	sar    DWORD PTR [esi-0x45],0x16
  427aea:	mov    ebx,?
  427aec:	out    0x1e,eax
  427aee:	sbb    DWORD PTR [esi+0x45],esp
  427af1:	pop    esp
  427af2:	push   ss
  427af3:	pushf  
  427af4:	jo     0x427aac
  427af6:	nop
  427af7:	fild   WORD PTR ds:0x56980b47
  427afd:	pop    es
  427afe:	sub    BYTE PTR ds:0x2e3e1ec2,0x30
  427b05:	cwd    
  427b07:	mov    ebp,0xc45e099d
  427b0c:	jnp    0x427af0
  427b0e:	scas   al,BYTE PTR es:[edi]
  427b0f:	mov    al,0xfc
  427b11:	xchg   edi,eax
  427b12:	test   al,bl
  427b14:	jmp    0xe7f338c3
  427b19:	and    BYTE PTR [edx],bl
  427b1b:	loopne 0x427b1e
  427b1d:	push   cs
  427b1e:	sub    DWORD PTR [ebp+0x768bfc57],edx
  427b24:	(bad)  
  427b25:	cdq    
  427b26:	out    dx,al
  427b27:	loopne 0x427ac2
  427b29:	adc    edx,DWORD PTR [ebx+0x729c5254]
  427b2f:	mulps  xmm2,XMMWORD PTR [esi]
  427b32:	or     eax,0xb68f0945
  427b37:	rcl    BYTE PTR [eax-0x67],1
  427b3a:	xchg   edi,esp
  427b3c:	loop   0x427b2b
  427b3e:	cmp    al,0xb2
  427b40:	rcl    DWORD PTR [esp+esi*4-0x36413b39],1
  427b47:	and    eax,0xb1ad23be
  427b4c:	sti    
  427b4d:	aad    0x4a
  427b4f:	cdq    
  427b50:	out    dx,ax
  427b52:	and    DWORD PTR [ebp+0x595e413e],ebx
  427b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b59:	dec    esi
  427b5a:	mov    bh,0x3b
  427b5c:	retf   
  427b5d:	jo     0x427ae6
  427b5f:	mov    ch,dh
  427b61:	fsub   QWORD PTR [esi-0x2a]
  427b64:	or     eax,0xd657fa0f
  427b69:	mov    edi,DWORD PTR [edx-0x49c16af6]
  427b6f:	xlat   BYTE PTR ds:[ebx]
  427b70:	adc    DWORD PTR [edx+0x194abb3b],esp
  427b76:	xor    bl,cl
  427b78:	mov    ds:0x457af1f6,eax
  427b7d:	ds in  eax,0xcf
  427b80:	cmp    eax,0x95b0f05d
  427b85:	mov    ch,0x49
  427b87:	aas    
  427b88:	mov    BYTE PTR [edx],bl
  427b8a:	sbb    dh,bh
  427b8c:	fld    QWORD PTR [esi-0x4b29a73e]
  427b92:	mov    eax,ds:0x6ab34418
  427b97:	push   esi
  427b98:	push   es
  427b99:	leave  
  427b9a:	mov    ch,0xcf
  427b9c:	sbb    bh,BYTE PTR [ecx+0x30f0f111]
  427ba2:	sti    
  427ba3:	repz adc BYTE PTR ds:0x6a43b654,cl
  427baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bab:	jbe    0x427bfb
  427bad:	loopne 0x427c27
  427baf:	sbb    al,0x3c
  427bb1:	mov    cl,BYTE PTR [esi]
  427bb3:	test   ebp,0xc0501d2f
  427bb9:	sub    esi,edx
  427bbb:	mov    WORD PTR [eax+0x104e515d],fs
  427bc1:	mov    edi,0xbe2cedde
  427bc6:	inc    BYTE PTR [ecx+0x3e]
  427bc9:	xchg   DWORD PTR [ecx+0x4bc2],esi
  427bcf:	add    BYTE PTR [eax],al
  427bd1:	add    BYTE PTR [edi-0xa],dh
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0xc5bbe2d0
  427be0:	test   eax,0x1f3874e
  427be5:	add    bl,dh
  427be7:	add    al,0x0
  427be9:	add    BYTE PTR [ebx-0x54],cl
  427bec:	es xor dl,0x73
  427bf0:	adc    al,0xa5
  427bf2:	mov    bl,0x1b
  427bf4:	mov    cl,0x32
  427bf6:	xchg   BYTE PTR [esi],ch
  427bf8:	xlat   BYTE PTR ds:[ebx]
  427bf9:	mov    dl,0x84
  427bfb:	push   eax
  427bfc:	mov    bh,0xce
  427bfe:	mov    edx,DWORD PTR [ebx]
  427c00:	aas    
  427c01:	lahf   
  427c02:	add    al,0x82
  427c04:	pop    esi
  427c05:	pusha  
  427c06:	es cli 
  427c08:	pushf  
  427c09:	jge    0x427be9
  427c0b:	(bad)  
  427c0c:	mov    al,ds:0x22c541db
  427c11:	cmp    DWORD PTR [edx-0x38],esp
  427c14:	sub    BYTE PTR ds:0x7d0ebb5e,bl
  427c1a:	sbb    eax,0x139f2cc0
  427c1f:	loopne 0x427bca
  427c21:	push   esp
  427c22:	mov    ds:0xc1111403,eax
  427c27:	sar    BYTE PTR [edi+0x40f5ec9e],0xc
  427c2e:	sub    DWORD PTR [esi],esi
  427c30:	inc    esp
  427c31:	dec    edx
  427c32:	js     0x427ca8
  427c34:	jmp    0x815af852
  427c39:	sbb    eax,0x503bf5b0
  427c3e:	rol    BYTE PTR [esi],cl
  427c40:	outs   dx,DWORD PTR ds:[esi]
  427c41:	inc    esp
  427c42:	ret    0x6d79
  427c45:	mov    bl,0x89
  427c47:	(bad)  [eax]
  427c49:	in     al,0xad
  427c4b:	ret    0xe7af
  427c4e:	fcompp 
  427c50:	lahf   
  427c51:	add    ch,BYTE PTR [eax-0x78]
  427c54:	rcl    BYTE PTR [ebp-0x4],cl
  427c57:	and    eax,ebx
  427c59:	mov    eax,ecx
  427c5b:	xchg   esi,eax
  427c5c:	(bad)  
  427c5d:	mov    ebp,0xccef44e5
  427c62:	loop   0x427c60
  427c64:	aas    
  427c65:	mov    eax,0x55744303
  427c6a:	stc    
  427c6b:	cmp    al,0xaa
  427c6d:	xchg   ebx,eax
  427c6e:	aad    0x93
  427c70:	fsub   QWORD PTR [ebx-0x194f6834]
  427c76:	push   edi
  427c77:	imul   eax,DWORD PTR [esi+0x7],0x4fa68e92
  427c7e:	ins    BYTE PTR es:[edi],dx
  427c7f:	dec    ebx
  427c80:	cmp    edx,DWORD PTR [esi+edx*1-0x48545fee]
  427c87:	mov    ds:0x2c44440b,eax
  427c8c:	popa   
  427c8d:	stos   BYTE PTR es:[edi],al
  427c8e:	iret   
  427c8f:	push   ebp
  427c90:	scas   eax,DWORD PTR es:[edi]
  427c91:	aaa    
  427c92:	aam    0x72
  427c94:	lea    edx,[edx-0x2b825d4b]
  427c9a:	inc    ebx
  427c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c9c:	pop    ss
  427c9d:	sbb    al,0xed
  427c9f:	paddsb mm5,mm3
  427ca2:	lahf   
  427ca3:	mov    WORD PTR [edx],ss
  427ca5:	in     eax,dx
  427ca6:	imul   ecx,DWORD PTR [edi],0x33
  427ca9:	sti    
  427caa:	call   0x45085ec2
  427caf:	out    0xbd,al
  427cb1:	dec    esi
  427cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cb3:	mov    bl,0x3c
  427cb5:	iret   
  427cb6:	outs   dx,DWORD PTR ds:[esi]
  427cb7:	cmc    
  427cb8:	lods   eax,DWORD PTR ds:[esi]
  427cb9:	mov    ah,0x47
  427cbb:	add    edx,esi
  427cbd:	(bad)  
  427cbe:	ficomp WORD PTR [ecx]
  427cc0:	and    DWORD PTR [esi],edi
  427cc2:	in     al,0x89
  427cc4:	fst    DWORD PTR [edi+eax*2]
  427cc7:	in     al,dx
  427cc8:	popa   
  427cc9:	or     ah,BYTE PTR [ecx-0x11880729]
  427ccf:	sbb    edi,DWORD PTR [edi+0x73]
  427cd2:	imul   edi,DWORD PTR [edx-0x3],0xffffffaf
  427cd6:	inc    esi
  427cd7:	ja     0x427ca7
  427cd9:	push   0x3e
  427cdb:	mov    esp,0xe21f3490
  427ce0:	mov    bl,BYTE PTR fs:[ecx]
  427ce3:	dec    esp
  427ce4:	push   edx
  427ce5:	add    eax,0x5e179c76
  427cea:	push   edx
  427ceb:	xor    DWORD PTR [esi-0x1a5b0fce],ecx
  427cf1:	in     eax,dx
  427cf2:	inc    ebx
  427cf3:	ins    BYTE PTR es:[edi],dx
  427cf4:	sub    al,BYTE PTR [eax+0x377e4937]
  427cfa:	mov    eax,0xe053b397
  427cff:	icebp  
  427d00:	dec    edi
  427d01:	jg     0x427d08
  427d03:	jnp    0x427ca3
  427d05:	into   
  427d06:	cs loope 0x427d1c
  427d09:	sbb    BYTE PTR [ebp+ebp*4+0xceb0e1c],al
  427d10:	jno    0x427cb0
  427d12:	iret   
  427d13:	aam    0x8f
  427d15:	cmp    al,0x56
  427d17:	sti    
  427d18:	inc    esp
  427d19:	ja     0x427cce
  427d1b:	sub    BYTE PTR [esi-0x6e4c2fe9],0xf
  427d22:	sub    cl,al
  427d24:	xchg   edx,eax
  427d25:	adc    al,cl
  427d27:	outs   dx,DWORD PTR ds:[esi]
  427d28:	push   esp
  427d29:	sbb    al,bl
  427d2b:	sub    eax,DWORD PTR [edi]
  427d2d:	loop   0x427d31
  427d2f:	(bad)  
  427d30:	js     0x427cec
  427d32:	mov    ds:0x48f13e64,eax
  427d37:	pop    ds
  427d38:	mov    cl,0xb9
  427d3a:	dec    esp
  427d3b:	sub    al,0x90
  427d3d:	repnz pop DWORD PTR es:[edi+0x76]
  427d42:	fwait
  427d43:	mov    ds:0x40bf4f24,eax
  427d48:	sbb    ebx,DWORD PTR [ecx+edi*8-0x1e]
  427d4c:	sar    BYTE PTR [edi],1
  427d4e:	xchg   esp,eax
  427d4f:	xlat   BYTE PTR ds:[ebx]
  427d50:	inc    ebp
  427d51:	add    eax,0xc42a933c
  427d56:	dec    eax
  427d57:	mov    bl,0x2d
  427d59:	repz fwait
  427d5b:	xchg   DWORD PTR [ebp+0x68f274d5],ebx
  427d61:	test   eax,0xa0e52937
  427d66:	in     al,dx
  427d67:	popa   
  427d68:	retf   0xd2d8
  427d6b:	fstp   DWORD PTR [edx-0x4f557a88]
  427d71:	add    DWORD PTR [ecx+eiz*2+0x7b815ec4],esi
  427d78:	mov    cl,0x6e
  427d7a:	pop    ecx
  427d7b:	push   esi
  427d7c:	mov    WORD PTR [eax+0x4cb314da],si
  427d83:	mov    ecx,0x4c72bc7
  427d88:	add    al,BYTE PTR [ebx]
  427d8a:	xor    dh,dh
  427d8c:	repnz inc esp
  427d8e:	mov    esi,0x5fb97c47
  427d93:	mov    ch,0x70
  427d95:	mov    esp,0x38ec82d6
  427d9a:	scas   al,BYTE PTR es:[edi]
  427d9b:	pusha  
  427d9c:	mov    dl,0xfd
  427d9e:	shl    edi,0x88
  427da1:	in     al,dx
  427da2:	(bad)  
  427da3:	test   eax,0x112cbf5b
  427da8:	aad    0x61
  427daa:	jge    0x427d5e
  427dac:	test   eax,0x5fc3ac13
  427db1:	jb     0x427dfb
  427db3:	inc    eax
  427db4:	cld    
  427db5:	jb     0x427d50
  427db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427db8:	jecxz  0x427d61
  427dba:	jp     0x427de2
  427dbc:	ins    DWORD PTR es:[edi],dx
  427dbd:	pop    ebx
  427dbe:	stc    
  427dbf:	dec    ebx
  427dc0:	mov    bl,0x4a
  427dc2:	pop    ds
  427dc3:	pop    eax
  427dc4:	js     0x427dcf
  427dc6:	mov    bl,0x5f
  427dc8:	pushf  
  427dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dca:	repnz iret 
  427dcc:	int3   
  427dcd:	push   ds
  427dce:	mov    ch,BYTE PTR ss:[eax-0x70e68fb6]
  427dd5:	sti    
  427dd6:	mov    eax,ds:0x32d9ffbe
  427ddb:	test   DWORD PTR [esi],esp
  427ddd:	fld    TBYTE PTR [edx-0x2e]
  427de0:	jne    0x427e02
  427de2:	sub    BYTE PTR [edi-0x58da380d],al
  427de8:	or     DWORD PTR [eax],ebx
  427dea:	addr16 ss call 0x1423:0x38c013cf
  427df3:	mov    esp,0x224068b3
  427df8:	and    DWORD PTR [ebx+0x52304ea9],edi
  427dfe:	mov    bl,0x52
  427e00:	js     0x427dc6
  427e02:	fwait
  427e03:	lods   eax,DWORD PTR ds:[esi]
  427e04:	push   ecx
  427e05:	xor    edi,DWORD PTR [eax-0x53473f6f]
  427e0b:	(bad)  
  427e0c:	(bad)  
  427e0d:	and    bh,BYTE PTR [edi]
  427e0f:	test   BYTE PTR ds:0x9782315d,0x74
  427e16:	cmp    BYTE PTR [edx],dl
  427e18:	bound  eax,QWORD PTR [eax]
  427e1a:	retf   0xae4a
  427e1d:	jb     0x427e88
  427e1f:	out    0xf1,eax
  427e21:	dec    edx
  427e22:	test   ax,0xd873
  427e26:	push   eax
  427e27:	ins    BYTE PTR es:[edi],dx
  427e28:	cs sti 
  427e2a:	push   0xffffffd0
  427e2c:	push   ds
  427e2d:	push   ss
  427e2e:	in     eax,0x66
  427e30:	xchg   esi,eax
  427e31:	sbb    BYTE PTR [eax],bl
  427e33:	(bad)  
  427e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e35:	add    DWORD PTR [esi],esi
  427e37:	add    BYTE PTR [esi],al
  427e39:	adc    BYTE PTR [edx],ch
  427e3b:	inc    ecx
  427e3c:	stos   BYTE PTR es:[edi],al
  427e3d:	std    
  427e3e:	and    ah,BYTE PTR [ecx]
  427e40:	add    DWORD PTR [eax+0x1],eax
  427e43:	push   ds
  427e44:	pop    es
  427e45:	ret    
  427e46:	(bad)  
  427e47:	cmp    al,0xf
  427e49:	retf   
  427e4a:	mov    ch,0x3
  427e4c:	jns    0x427dde
  427e4e:	loopne 0x427e00
  427e50:	cs scas eax,DWORD PTR es:[edi]
  427e52:	sub    BYTE PTR [edx],dh
  427e54:	(bad)  
  427e55:	test   BYTE PTR [esi+0x4],bl
  427e58:	call   0xf0851d8a
  427e5d:	inc    esp
  427e5e:	data16 out 0x44,al
  427e61:	retf   0xc5f7
  427e64:	mov    esi,0xaa8a6cf1
  427e69:	cmp    esi,esi
  427e6b:	mov    esp,0xfdd34ac3
  427e70:	pop    esp
  427e71:	mov    edx,0xf3d61031
  427e76:	test   eax,0x8a007e47
  427e7b:	cdq    
  427e7c:	lahf   
  427e7d:	adc    ch,BYTE PTR [ebx+0x2dc39615]
  427e83:	mov    ah,BYTE PTR [ebx+ebx*4-0x10]
  427e87:	pop    esi
  427e88:	pushf  
  427e89:	das    
  427e8a:	xor    eax,0x8ef0b848
  427e8f:	in     al,dx
  427e90:	(bad)  [esi+0xe274c0a]
  427e96:	loop   0x427eee
  427e98:	jl     0x427e2a
  427e9a:	(bad)  
  427e9b:	js     0x427e3b
  427e9d:	push   ds
  427e9e:	sar    BYTE PTR [eax+eax*1],1
  427ea1:	jne    0x427eb5
  427ea3:	retf   0x47d7
  427ea6:	pusha  
  427ea7:	jmp    0xa02f:0x556ef041
  427eae:	jmp    0x427e5c
  427eb0:	lods   al,BYTE PTR ds:[esi]
  427eb1:	cmp    ebx,DWORD PTR [edi]
  427eb3:	fs jae 0x427e92
  427eb6:	sbb    DWORD PTR [edi-0x74],edi
  427eb9:	iret   
  427eba:	xchg   ecx,eax
  427ebb:	sub    DWORD PTR [edi+0x41d003dc],edx
  427ec1:	loope  0x427e67
  427ec3:	mov    bl,0x51
  427ec5:	sbb    al,0x88
  427ec7:	or     eax,0xb6c7e59e
  427ecc:	or     esi,ebp
  427ece:	cmp    DWORD PTR [ecx],ebp
  427ed0:	mov    ebx,0x677b9979
  427ed5:	inc    ebx
  427ed6:	jno    0x427ee7
  427ed8:	ficom  DWORD PTR [ebx+0x4a]
  427edb:	aaa    
  427edc:	repnz das 
  427ede:	popf   
  427edf:	mov    ecx,0xc0fdfc94
  427ee4:	jg     0x427e87
  427ee6:	dec    ebx
  427ee7:	mov    bh,0x9a
  427ee9:	aad    0x61
  427eeb:	loopne 0x427e8d
  427eed:	adc    eax,0x74a76f64
  427ef2:	ret    
  427ef3:	ins    DWORD PTR es:[edi],dx
  427ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ef5:	ds dec edx
  427ef7:	dec    ecx
  427ef8:	jne    0x427edc
  427efa:	or     edx,esp
  427efc:	int3   
  427efd:	out    dx,al
  427efe:	cmp    eax,0x41937198
  427f03:	sti    
  427f04:	sti    
  427f05:	push   esp
  427f06:	pop    ebx
  427f07:	call   0x60d:0x5ac8ba88
  427f0e:	psrad  mm1,QWORD PTR [esi-0x7c]
  427f12:	retf   
  427f13:	mov    BYTE PTR gs:[edi-0x50],ah
  427f17:	jl     0x427ec7
  427f19:	into   
  427f1a:	in     al,dx
  427f1b:	stos   DWORD PTR es:[edi],eax
  427f1c:	out    dx,al
  427f1d:	xchg   ebp,eax
  427f1e:	xor    bl,dl
  427f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f21:	aad    0xda
  427f23:	or     BYTE PTR ds:0x4b75c3ab,0x7
  427f2a:	mov    DWORD PTR [eax-0x32238fc4],esi
  427f30:	or     ebx,DWORD PTR [eax]
  427f32:	out    dx,eax
  427f33:	iret   
  427f34:	ret    0xc24b
  427f37:	jle    0x427f21
  427f39:	dec    edx
  427f3a:	adc    BYTE PTR [esi+0x46e5ab59],dh
  427f40:	cmp    BYTE PTR [ecx+0x78],dh
  427f43:	pop    esi
  427f44:	inc    edx
  427f45:	xchg   esi,eax
  427f46:	popa   
  427f47:	in     eax,0xac
  427f49:	cwde   
  427f4a:	stos   BYTE PTR es:[edi],al
  427f4b:	pop    es
  427f4c:	loope  0x427f75
  427f4e:	jg     0x427f73
  427f50:	add    DWORD PTR [edi+0x17],esp
  427f53:	or     DWORD PTR [esi-0x6269b0e8],ecx
  427f59:	rcl    BYTE PTR [esi+0xc],1
  427f5c:	icebp  
  427f5d:	sub    ch,BYTE PTR [ecx+0x1f]
  427f60:	pop    esi
  427f61:	dec    edx
  427f62:	cwde   
  427f63:	neg    DWORD PTR [eax-0x65]
  427f66:	push   0x4b
  427f68:	adc    ebp,0x2875d108
  427f6e:	fnstenv [edx]
  427f70:	dec    esp
  427f71:	adc    al,0xe9
  427f73:	mov    ch,0xa5
  427f75:	out    0x6d,eax
  427f77:	sahf   
  427f78:	popf   
  427f79:	pop    eax
  427f7a:	ret    
  427f7b:	int3   
  427f7c:	aam    0x47
  427f7e:	out    0xf9,al
  427f80:	or     dl,BYTE PTR [esi+0x48]
  427f83:	es push ecx
  427f85:	(bad)  
  427f87:	mov    dl,0xe5
  427f89:	jne    0x427f59
  427f8b:	jbe    0x427f6a
  427f8d:	enter  0xd519,0x3a
  427f91:	shl    BYTE PTR gs:[eax+0x2a641b25],1
  427f98:	and    dl,BYTE PTR [esi]
  427f9a:	icebp  
  427f9b:	and    al,BYTE PTR [edx+0x4ada4f55]
  427fa1:	push   0x18
  427fa3:	lea    esp,[esi-0x29]
  427fa6:	or     bh,BYTE PTR [edi+0x637449a4]
  427fac:	stc    
  427fad:	pop    ecx
  427fae:	shufps xmm4,XMMWORD PTR [edx+0x64],0x77
  427fb3:	(bad)  
  427fb4:	rcl    dl,cl
  427fb6:	dec    ebx
  427fb7:	shr    BYTE PTR [edx],cl
  427fb9:	push   edi
  427fba:	adc    DWORD PTR [ebx+edi*4],edx
  427fbd:	shr    esp,0xb3
  427fc0:	push   DWORD PTR [edi-0x2d]
  427fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fc4:	inc    ecx
  427fc5:	imul   esp,DWORD PTR [ebx],0xd9b3ecb3
  427fcb:	rcr    DWORD PTR [edx+0x12f0c4c8],0x5f
  427fd2:	mov    eax,ds:0x6b25413c
  427fd7:	pop    eax
  427fd8:	enter  0x4e1a,0x4f
  427fdc:	sub    bh,BYTE PTR [esi]
  427fde:	test   eax,0x6d810974
  427fe3:	adc    edx,DWORD PTR [edi+0x2b11ea98]
  427fe9:	mov    ecx,0xe2eb1465
  427fee:	loope  0x427fdb
  427ff0:	inc    esp
  427ff1:	mov    ds:0x69f1e17e,eax
  427ff6:	jae    0x427f9f
  427ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ff9:	xchg   ebp,eax
  427ffa:	mov    WORD PTR ds:0xf4f47829,ss
  428000:	scas   al,BYTE PTR es:[edi]
  428001:	push   esi
  428002:	dec    eax
  428003:	push   ds
  428004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428005:	rcpps  xmm1,XMMWORD PTR [edx]
  428008:	and    BYTE PTR [ebp+ebp*1+0x10f8f1f0],al
  42800f:	clc    
  428010:	daa    
  428011:	jp     0x428058
  428013:	jl     0x428086
  428015:	inc    ecx
  428016:	adc    eax,0xbf95312a
  42801b:	lahf   
  42801c:	sbb    bh,BYTE PTR [eax+0x2]
  42801f:	imul   esi,DWORD PTR [ebx+0x9],0x3f
  428023:	aam    0xe2
  428025:	std    
  428026:	lock pushf 
  428028:	test   eax,0x10be2f55
  42802d:	ds or  ch,cl
  428030:	push   ebp
  428031:	xor    BYTE PTR [edi-0x6cc61613],bh
  428037:	xchg   edi,eax
  428038:	mov    bh,BYTE PTR [edi-0x496917fe]
  42803e:	dec    esi
  42803f:	loop   0x427fd2
  428041:	ins    DWORD PTR es:[edi],dx
  428042:	das    
  428043:	push   esp
  428044:	es sahf 
  428046:	iret   
  428047:	push   ebp
  428048:	and    eax,0xaeb81497
  42804d:	retf   0x1e55
  428050:	nop
  428051:	push   esp
  428052:	ins    BYTE PTR es:[edi],dx
  428053:	aam    0x39
  428055:	mov    ds:0x266d2840,al
  42805a:	fldenv [ecx+0x3a]
  42805d:	(bad)  
  42805e:	jp     0x427ff7
  428060:	sahf   
  428061:	scas   eax,DWORD PTR es:[edi]
  428062:	cs mov ecx,0x9eed175e
  428068:	mov    eax,0xe92a7fd4
  42806d:	clc    
  42806e:	leave  
  42806f:	hlt    
  428070:	stos   BYTE PTR es:[edi],al
  428071:	xchg   ebp,eax
  428072:	stos   DWORD PTR es:[edi],eax
  428073:	shr    DWORD PTR [ecx+0x2a4f3ce7],1
  428079:	push   esp
  42807a:	mov    eax,0x6ef4e69e
  42807f:	xor    DWORD PTR [eax-0x4a],eax
  428082:	daa    
  428083:	adc    DWORD PTR [esi+esi*4-0x6d],eax
  428087:	mov    BYTE PTR [ebx],al
  428089:	push   0x29
  42808b:	cld    
  42808c:	int3   
  42808d:	mov    ?,WORD PTR [ebp-0x4c217f90]
  428093:	cmp    eax,0x2a1087a
  428099:	retf   0x2a21
  42809c:	icebp  
  42809d:	sar    ch,0x6a
  4280a0:	imul   ebx,DWORD PTR [edi+eiz*4-0x58c82f5b],0x24
  4280a8:	cmc    
  4280a9:	frstor [esi-0x25]
  4280ac:	pop    edi
  4280ad:	xchg   edx,eax
  4280ae:	push   ebp
  4280af:	pop    ss
  4280b0:	fs pop esi
  4280b2:	xchg   ebp,eax
  4280b3:	aaa    
  4280b4:	(bad)  
  4280b5:	test   BYTE PTR [edx-0x2e],0x72
  4280b9:	xchg   ecx,eax
  4280ba:	pushf  
  4280bb:	outs   dx,DWORD PTR ds:[esi]
  4280bc:	bound  ebp,QWORD PTR ss:[esi]
  4280bf:	mov    edi,0x5ceb3bca
  4280c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280c5:	lea    ebp,[eax]
  4280c7:	rcl    BYTE PTR [ecx-0x7a1820d2],cl
  4280cd:	ins    BYTE PTR es:[edi],dx
  4280ce:	bound  ebx,QWORD PTR [edx-0x77]
  4280d1:	mov    ch,dh
  4280d3:	test   BYTE PTR [esi-0x22c7c56f],bl
  4280d9:	ss repnz out 0x1b,eax
  4280dd:	add    BYTE PTR [eax],al
  4280df:	add    BYTE PTR [eax],al
  4280e1:	add    dh,al
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x56d89742]
  4280ef:	mov    BYTE PTR [ebp+eax*1+0x7a],bl
  4280f3:	clc    
  4280f4:	add    DWORD PTR [eax],eax
  4280f6:	repz add al,0x0
  4280f9:	add    BYTE PTR [esp+ebx*1+0x1],ch
  4280fd:	test   al,0xb1
  4280ff:	jg     0x42814d
  428101:	mov    ?,esp
  428103:	out    0x36,al
  428105:	mov    ecx,0x65a2fd86
  42810a:	jbe    0x428155
  42810c:	(bad)  
  42810d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42810e:	sub    ebx,DWORD PTR [esi+0x34]
  428111:	add    ch,BYTE PTR [ebp-0x1]
  428114:	cld    
  428115:	pop    ss
  428116:	xor    eax,DWORD PTR [edi-0x22707b57]
  42811c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42811d:	cmc    
  42811e:	out    dx,eax
  42811f:	es dec eax
  428121:	xor    eax,0xd34ca930
  428126:	das    
  428127:	out    0x82,eax
  428129:	es jle 0x4280e2
  42812c:	pop    eax
  42812d:	jb     0x4280dd
  42812f:	jne    0x4281a1
  428131:	push   cs
  428132:	push   esi
  428133:	add    eax,0x8695c1ab
  428138:	out    0x55,al
  42813a:	xchg   ecx,eax
  42813b:	call   0xae9a:0x1dbbf5ce
  428142:	sub    BYTE PTR ss:[edx],dl
  428145:	sahf   
  428146:	pop    ds
  428147:	or     cl,BYTE PTR [edi]
  428149:	sbb    BYTE PTR [esi],0xf5
  42814c:	sbb    al,0x38
  42814e:	adc    DWORD PTR [edi+eiz*1-0x3a],ebx
  428152:	inc    esi
  428153:	repz repnz push es
  428156:	pop    edi
  428157:	aad    0x94
  428159:	jle    0x428136
  42815b:	push   esi
  42815c:	mov    al,0xae
  42815e:	popf   
  42815f:	mov    ah,0x4a
  428161:	retf   0x7397
  428164:	dec    esi
  428165:	mov    esi,0x8cc06cab
  42816a:	push   0x69
  42816c:	(bad)  
  42816e:	popa   
  42816f:	daa    
  428170:	sub    DWORD PTR [edx+0x5c],0x0
  428174:	inc    ebp
  428175:	lahf   
  428176:	pusha  
  428177:	and    DWORD PTR [eax+eiz*1-0x7a],esi
  42817b:	add    ch,ah
  42817d:	mov    ds:0x8315ac8b,eax
  428182:	dec    ebp
  428183:	sbb    ebp,esp
  428185:	sub    ebx,eax
  428187:	adc    al,0x57
  428189:	es js  0x428200
  42818c:	aam    0xc2
  42818e:	pop    edx
  42818f:	inc    ecx
  428190:	scas   al,BYTE PTR es:[edi]
  428191:	and    bl,BYTE PTR [ebx-0x74]
  428194:	stos   DWORD PTR es:[edi],eax
  428195:	xor    eax,0xb5199af4
  42819a:	call   0xe2d2e1ef
  42819f:	xor    DWORD PTR [ecx],esp
  4281a1:	xchg   ecx,eax
  4281a2:	rcr    DWORD PTR [edi+ebx*4+0x63bd0c92],cl
  4281a9:	sub    eax,esp
  4281ab:	pusha  
  4281ac:	pop    ebp
  4281ad:	pusha  
  4281ae:	cmp    BYTE PTR [edi-0x65bfe43d],al
  4281b4:	add    DWORD PTR [ecx+0x59972176],0x73
  4281bb:	cmp    al,0xfb
  4281bd:	push   eax
  4281be:	aad    0x9b
  4281c0:	call   DWORD PTR [edx-0x1d]
  4281c3:	add    DWORD PTR [ecx-0x351ce0ff],edx
  4281c9:	call   0xd658:0xff9daa88
  4281d0:	xchg   esp,eax
  4281d1:	retf   0x6ba1
  4281d4:	sar    DWORD PTR [edx-0x71],cl
  4281d7:	leave  
  4281d8:	mov    al,ds:0xb35be535
  4281dd:	mov    ebp,0x721217f4
  4281e2:	pop    esi
  4281e3:	mov    cl,0x4d
  4281e5:	add    BYTE PTR [ebp+0x64351b3a],bh
  4281eb:	xlat   BYTE PTR ds:[ebx]
  4281ec:	add    eax,eax
  4281ee:	sbb    eax,0xb548a017
  4281f3:	lods   eax,DWORD PTR ds:[esi]
  4281f4:	packsswb mm1,QWORD PTR [edi+0x78]
  4281f8:	inc    ebp
  4281f9:	mov    cl,0x3d
  4281fb:	push   cs
  4281fc:	xlat   BYTE PTR ds:[ebx]
  4281fd:	lahf   
  4281fe:	adc    DWORD PTR [esi],edx
  428200:	repnz pusha 
  428202:	xchg   edi,eax
  428203:	xor    ah,BYTE PTR [eax-0x1d]
  428206:	scas   al,BYTE PTR es:[edi]
  428207:	mov    ebx,0xaa449762
  42820c:	cli    
  42820d:	xchg   ebp,eax
  42820e:	aam    0xf1
  428210:	cwde   
  428211:	xor    al,0x91
  428213:	sub    al,al
  428215:	je     0x428235
  428217:	(bad)  
  428218:	sahf   
  428219:	stos   DWORD PTR es:[edi],eax
  42821a:	inc    edx
  42821b:	(bad)  
  42821c:	mov    bl,0xc6
  42821e:	sbb    DWORD PTR [esi-0x18],0x4f3a0bb1
  428225:	push   ebx
  428226:	(bad)  
  428227:	xchg   edx,eax
  428228:	push   cs
  428229:	xor    al,BYTE PTR [edi]
  42822b:	outs   dx,BYTE PTR ds:[esi]
  42822c:	or     al,0xe1
  42822e:	nop
  42822f:	ss (bad) 
  428231:	jg     0x428237
  428233:	and    al,0x56
  428235:	and    eax,0x47aee457
  42823a:	cmp    ebp,DWORD PTR [esi-0x46]
  42823d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42823e:	dec    eax
  42823f:	or     eax,0x1d05ff76
  428244:	pop    ss
  428245:	xchg   ecx,eax
  428246:	arpl   bp,bx
  428248:	rol    DWORD PTR [ebx+0x631a864c],1
  42824e:	cmp    bh,BYTE PTR [ebx]
  428250:	ret    
  428251:	push   es
  428252:	out    dx,eax
  428253:	push   ecx
  428254:	in     al,0x83
  428256:	cwde   
  428257:	sbb    DWORD PTR [ebx-0x7],edx
  42825a:	and    bx,dx
  42825d:	call   0x825fa3c9
  428262:	fldcw  WORD PTR [eax-0x66]
  428265:	inc    ebx
  428266:	xchg   DWORD PTR [ebx+ebp*1-0x62bba485],eax
  42826d:	pop    ecx
  42826e:	sbb    eax,0xfd41583f
  428273:	into   
  428274:	in     eax,dx
  428275:	sub    BYTE PTR [esi-0x6c642438],ch
  42827b:	not    DWORD PTR [ebx+0x7bdce7ae]
  428281:	dec    edi
  428282:	push   edx
  428283:	jl     0x4282bf
  428285:	outs   dx,BYTE PTR ds:[esi]
  428286:	fsubr  DWORD PTR [ebx+0x62b9c5a6]
  42828c:	pop    ecx
  42828d:	xchg   esp,eax
  42828e:	sbb    cl,BYTE PTR [ebp+0x25e90c95]
  428294:	test   eax,0x2b006848
  428299:	inc    ecx
  42829a:	adc    eax,0x89364fb1
  42829f:	je     0x4282f0
  4282a1:	mov    ds:0xbf2ceea,eax
  4282a6:	mov    bh,0x20
  4282a8:	(bad)  
  4282a9:	leave  
  4282aa:	lds    edi,FWORD PTR [ecx-0x52]
  4282ad:	jae    0x428311
  4282af:	push   ds
  4282b0:	adc    ecx,ebp
  4282b2:	(bad)
  4282b6:	pusha  
  4282b7:	push   esi
  4282b8:	rol    DWORD PTR [ecx+0x29558fb3],cl
  4282be:	cld    
  4282bf:	pop    esp
  4282c0:	push   esp
  4282c1:	mov    esi,0x250c9f48
  4282c6:	bound  eax,QWORD PTR [ecx]
  4282c8:	adc    al,0x5d
  4282ca:	fs nop
  4282cc:	rol    DWORD PTR [ebx],1
  4282ce:	iretw  
  4282d0:	mov    WORD PTR [edi-0xdc4100a],ss
  4282d6:	neg    DWORD PTR [esi]
  4282d8:	jl     0x4282e9
  4282da:	mov    al,0x2f
  4282dc:	jb     0x4282d8
  4282de:	sbb    BYTE PTR [eax+0x198f99ad],0x15
  4282e5:	jecxz  0x4282c5
  4282e7:	ins    BYTE PTR es:[edi],dx
  4282e8:	mov    ecx,0x778a92c6
  4282ed:	(bad)  
  4282ee:	jge    0x4282fd
  4282f0:	ins    DWORD PTR es:[edi],dx
  4282f1:	lods   al,BYTE PTR ds:[esi]
  4282f2:	sar    DWORD PTR [esi-0x3d],cl
  4282f5:	and    al,dl
  4282f7:	push   cs
  4282f8:	clc    
  4282f9:	dec    edx
  4282fa:	pushf  
  4282fb:	fsubr  st,st(1)
  4282fd:	and    DWORD PTR [edi],esi
  4282ff:	mov    esi,0xe5d0fab0
  428304:	adc    ebx,DWORD PTR [ecx]
  428306:	ins    BYTE PTR es:[edi],dx
  428307:	fwait
  428308:	enter  0x3310,0x8c
  42830c:	int    0x3b
  42830e:	enter  0xe29d,0x10
  428312:	xor    al,0x75
  428314:	mov    ecx,DWORD PTR [edi+0x1fb84c67]
  42831a:	popf   
  42831b:	xor    al,0xf0
  42831d:	not    BYTE PTR [ecx-0x32]
  428320:	(bad)  
  428321:	dec    edx
  428322:	mov    dh,0x60
  428324:	jmp    0xdf626397
  428329:	in     eax,0x2e
  42832b:	aad    0x99
  42832d:	jb     0x42830c
  42832f:	xchg   esi,eax
  428330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428331:	pop    es
  428332:	and    al,BYTE PTR [ebx-0x18]
  428335:	inc    ecx
  428336:	adc    bh,ch
  428338:	mov    ds,WORD PTR [esi]
  42833a:	push   ds
  42833b:	mov    ?,WORD PTR [ebp-0xbc39556]
  428341:	mov    edx,0x87ee90ee
  428346:	ins    DWORD PTR es:[edi],dx
  428347:	mov    ecx,0x53fc3e22
  42834c:	fstp   TBYTE PTR [edi]
  42834e:	dec    ecx
  42834f:	mov    edi,DWORD PTR [ebx+0x75]
  428352:	push   ss
  428353:	sbb    al,0x54
  428355:	jecxz  0x4283d5
  428357:	pop    ecx
  428358:	stc    
  428359:	(bad)  
  42835b:	loop   0x4283a4
  42835d:	dec    edx
  42835e:	add    al,0x4c
  428360:	sub    dl,0x40
  428363:	int3   
  428364:	div    ebp
  428366:	mov    bh,0xa6
  428368:	fisub  WORD PTR [esi]
  42836a:	mov    dl,0xb0
  42836c:	popf   
  42836d:	dec    eax
  42836e:	test   eax,0xda1c698d
  428373:	mov    esp,0xfc86f01d
  428378:	or     ah,dl
  42837a:	xchg   ch,ah
  42837c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42837d:	jb     0x4283e1
  42837f:	repz daa 
  428381:	sub    DWORD PTR [eax+0x8],eax
  428384:	sub    eax,0xc179fe9d
  428389:	push   edx
  42838a:	jb     0x4283d2
  42838c:	in     al,0xf5
  42838e:	iret   
  42838f:	push   0x964eb419
  428394:	add    BYTE PTR [edx+ebx*2],0xd7
  428398:	mov    eax,ds:0x5ab5c2c9
  42839d:	cs retf 
  42839f:	push   ebx
  4283a0:	popf   
  4283a1:	push   ebp
  4283a2:	sbb    eax,0x7e05df2b
  4283a7:	add    ebx,ebp
  4283a9:	popf   
  4283aa:	push   ss
  4283ab:	fistp  QWORD PTR [ecx-0xc31195b]
  4283b1:	loop   0x428346
  4283b3:	fsub   st(6),st
  4283b5:	daa    
  4283b6:	call   0x66c9:0x7b5c5105
  4283bd:	or     esp,DWORD PTR [esi]
  4283bf:	xor    eax,0x31f9ab3c
  4283c4:	outs   dx,DWORD PTR ds:[esi]
  4283c5:	sub    DWORD PTR [esi+0x39],0x3a07faae
  4283cc:	data16 (bad) 
  4283ce:	adc    BYTE PTR [edx+0x39],ah
  4283d1:	mov    esi,0x381c63e5
  4283d6:	push   edi
  4283d7:	call   0x1d79714
  4283dc:	add    BYTE PTR [ebx],0xab
  4283df:	icebp  
  4283e0:	dec    eax
  4283e1:	ins    DWORD PTR es:[edi],dx
  4283e2:	das    
  4283e3:	dec    ebx
  4283e4:	add    BYTE PTR [ebx],dl
  4283e6:	movsx  edi,BYTE PTR [esi+0x29577f7]
  4283ed:	(bad)  
  4283ee:	(bad)  
  4283ef:	jge    0x428417
  4283f1:	rcr    BYTE PTR [ecx+edx*4],0xf0
  4283f5:	push   edx
  4283f6:	or     dl,BYTE PTR [eax-0x4e]
  4283f9:	inc    eax
  4283fa:	mov    bl,0x0
  4283fc:	shl    BYTE PTR [ecx],cl
  4283fe:	loop   0x428391
  428400:	jns    0x4283cd
  428402:	inc    esp
  428403:	inc    edi
  428404:	hlt    
  428405:	rcr    BYTE PTR [eax+0x826eb22],cl
  42840b:	pushf  
  42840c:	inc    esp
  42840d:	xchg   DWORD PTR [edx+ebx*8],ecx
  428410:	(bad)  
  428412:	mov    cl,0xa9
  428414:	daa    
  428415:	imul   esp,DWORD PTR [ecx-0x54],0xfffffffe
  428419:	xor    ah,BYTE PTR [edx+eiz*4+0x72cae8bc]
  428420:	(bad)  
  428421:	(bad)  
  428422:	fwait
  428423:	pop    eax
  428424:	push   edx
  428425:	or     eax,0x5d030edf
  42842a:	fsub   DWORD PTR [edx]
  42842c:	cld    
  42842d:	es dec edx
  42842f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428430:	std    
  428431:	cmp    BYTE PTR [ecx+0x794fea4c],ch
  428437:	retf   
  428438:	xchg   ecx,eax
  428439:	mov    al,ds:0xdb3ff7c7
  42843e:	sub    eax,0x933fa805
  428443:	inc    eax
  428444:	stc    
  428445:	xlat   BYTE PTR ds:[ebx]
  428446:	and    eax,0x7c22a614
  42844b:	add    ecx,DWORD PTR [ebp+0x65]
  42844e:	xchg   ecx,eax
  42844f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428450:	inc    esp
  428451:	mov    edx,0x66a6434f
  428456:	xor    ecx,DWORD PTR [ebx+0x4f]
  428459:	ret    
  42845a:	and    al,0xca
  42845c:	fwait
  42845d:	xchg   DWORD PTR [ecx-0x45],ecx
  428460:	push   ss
  428461:	pushf  
  428462:	cmp    dl,al
  428464:	inc    edi
  428465:	push   0x7ba8c26f
  42846a:	dec    edx
  42846b:	out    dx,al
  42846c:	leave  
  42846d:	adc    BYTE PTR [esp+edi*1+0x76d1237c],bh
  428474:	jnp    0x428496
  428476:	jo     0x428470
  428478:	jbe    0x42848e
  42847a:	and    eax,0x57df66ea
  42847f:	call   0xd99617e4
  428484:	leave  
  428485:	fstp   TBYTE PTR [esi+eax*8]
  428488:	ss gs inc esi
  42848b:	popf   
  42848c:	push   es
  42848d:	call   0x9e89a9fd
  428492:	pusha  
  428493:	sbb    al,0xc
  428495:	add    eax,DWORD PTR [eax+0x76]
  428498:	inc    eax
  428499:	mov    dl,0x9b
  42849b:	(bad)  
  42849c:	cwde   
  42849d:	jbe    0x4284f8
  42849f:	adc    al,0xb3
  4284a1:	dec    ebx
  4284a2:	mov    BYTE PTR [edx-0x43],0x89
  4284a6:	push   0xf66eb7ff
  4284ab:	stos   DWORD PTR es:[edi],eax
  4284ac:	test   DWORD PTR [ebx+esi*8],edi
  4284af:	stos   BYTE PTR es:[edi],al
  4284b0:	xor    bl,BYTE PTR ds:0xd174e216
  4284b6:	push   edi
  4284b7:	push   ecx
  4284b8:	inc    esp
  4284b9:	xchg   ebx,esi
  4284bb:	stos   DWORD PTR es:[edi],eax
  4284bc:	aad    0x16
  4284be:	and    eax,0x463f63e4
  4284c3:	hlt    
  4284c4:	xor    eax,eax
  4284c6:	push   cs
  4284c7:	add    DWORD PTR [eax-0x19],0x3ebbd47b
  4284ce:	hlt    
  4284cf:	test   eax,0xe5176e11
  4284d4:	lock test DWORD PTR [esi+0x1a62f5ad],esi
  4284db:	outs   dx,BYTE PTR ds:[esi]
  4284dc:	dec    ecx
  4284dd:	push   eax
  4284de:	sub    DWORD PTR [eax+0x6a],ebx
  4284e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284e2:	fist   WORD PTR [edi]
  4284e4:	loop   0x42851c
  4284e6:	in     eax,0x31
  4284e8:	mov    dl,0xa6
  4284ea:	retf   
  4284eb:	repz xor ecx,DWORD PTR ds:0x17c5c473
  4284f2:	cdq    
  4284f3:	enter  0xe52c,0xcc
  4284f7:	repz xchg esp,eax
  4284f9:	test   al,0x42
  4284fb:	ret    
  4284fc:	xor    eax,0x45389db7
  428501:	fsubr  st(7),st
  428503:	lods   eax,DWORD PTR ds:[esi]
  428504:	repnz ror DWORD PTR [edx-0x22],1
  428508:	jl     0x4284e6
  42850a:	iret   
  42850b:	xchg   DWORD PTR [ecx],ebp
  42850d:	mov    dh,0x48
  42850f:	mov    eax,ds:0x5da962d0
  428514:	sar    ebx,cl
  428516:	xor    ch,0x39
  428519:	cmp    edx,ecx
  42851b:	in     eax,dx
  42851c:	scas   eax,DWORD PTR es:[edi]
  42851d:	adc    edx,DWORD PTR [ecx+0x5d]
  428520:	jp     0x4284ef
  428522:	sbb    al,BYTE PTR [ecx-0x6516c951]
  428528:	outs   dx,DWORD PTR ds:[esi]
  428529:	mov    edx,0x4bdf0132
  42852e:	loope  0x428525
  428530:	push   edx
  428531:	add    DWORD PTR [edi+ebp*2-0x23],edx
  428535:	mov    ds:0xf8de2f2c,eax
  42853a:	pop    esp
  42853b:	dec    esi
  42853c:	mov    eax,0xc80c869f
  428541:	(bad)  
  428542:	mov    al,ds:0xb7962520
  428547:	cmp    al,BYTE PTR [ebx+edx*2-0x53]
  42854b:	sbb    BYTE PTR [eax],0xd2
  42854e:	dec    ecx
  42854f:	in     eax,dx
  428550:	lea    ebx,[ebx-0x17afd927]
  428556:	sti    
  428557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428558:	stc    
  428559:	pop    ebp
  42855a:	inc    edi
  42855b:	jmp    0x9cb18c84
  428560:	xor    ah,cl
  428562:	pop    edi
  428563:	das    
  428564:	pop    ds
  428565:	test   BYTE PTR es:[edx-0x14ba50cb],cl
  42856c:	push   edi
  42856d:	ror    BYTE PTR [ecx+0x79],cl
  428570:	out    dx,eax
  428571:	inc    ebp
  428572:	mov    ecx,DWORD PTR [edx+ebx*1+0x59]
  428576:	les    esp,FWORD PTR [edx-0x2d]
  428579:	mov    al,0xe3
  42857b:	jecxz  0x4285b2
  42857d:	pop    ecx
  42857e:	push   esi
  42857f:	pop    edi
  428580:	jae    0x428549
  428582:	jno    0x4285c5
  428584:	jb     0x42854e
  428586:	mov    al,ds:0x2e326284
  42858b:	test   ebp,edx
  42858d:	into   
  42858e:	cmp    ecx,DWORD PTR [edx+eax*8-0x2c]
  428592:	ret    
  428593:	pusha  
  428594:	pop    esp
  428595:	lds    edi,FWORD PTR [ecx+0x5546c0ef]
  42859b:	dec    edi
  42859c:	sbb    al,0xa7
  42859e:	sub    al,0x2f
  4285a0:	add    al,0xed
  4285a2:	shl    DWORD PTR [edi+0x17531ac7],cl
  4285a8:	cmp    BYTE PTR [ebx],dh
  4285aa:	pop    ebx
  4285ab:	mov    ch,BYTE PTR [ebp-0x5f]
  4285ae:	mov    cl,BYTE PTR [ebx+0x27]
  4285b1:	mov    al,0x8d
  4285b3:	dec    ebx
  4285b4:	push   cs
  4285b5:	xchg   edi,eax
  4285b6:	or     edi,DWORD PTR [esi-0x72be490b]
  4285bc:	stc    
  4285bd:	push   edi
  4285be:	out    dx,eax
  4285bf:	daa    
  4285c0:	adc    edx,DWORD PTR [eax+0x52]
  4285c3:	jmp    0xcc5b:0x90f99641
  4285ca:	inc    esp
  4285cb:	or     ebp,DWORD PTR [eax+0x42]
  4285ce:	add    BYTE PTR [esi+0x5b],0x67
  4285d2:	jmp    0x6615:0x273c3e12
  4285d9:	push   cs
  4285da:	mov    ?,WORD PTR [esi]
  4285dc:	call   0x8c46a43b
  4285e1:	(bad)  
  4285e2:	jnp    0x42856b
  4285e4:	or     dh,BYTE PTR [ebx]
  4285e6:	inc    eax
  4285e7:	in     eax,0x74
  4285e9:	sar    ch,cl
  4285eb:	pop    ds
  4285ec:	test   BYTE PTR [eax],0x0
  4285ef:	add    BYTE PTR [eax],al
  4285f1:	add    BYTE PTR [edx],dl
  4285f3:	adc    BYTE PTR [eax-0x41c16dc2],0xac
  4285fa:	retf   0x4cd7
  4285fd:	ins    BYTE PTR es:[edi],dx
  4285fe:	(bad)
  428602:	ins    DWORD PTR es:[edi],dx
  428603:	std    
  428604:	add    DWORD PTR [eax],eax
  428606:	push   ss
  428607:	add    BYTE PTR [eax],al
  428609:	add    BYTE PTR [ecx+0x31],dl
  42860c:	jecxz  0x4285d0
  42860e:	popa   
  42860f:	mov    dh,0xf7
  428611:	outs   dx,DWORD PTR ds:[esi]
  428612:	loope  0x42864a
  428614:	mov    bl,0x61
  428616:	and    al,0x7b
  428618:	les    esi,FWORD PTR [ebp*1-0x69fca55a]
  42861f:	add    eax,DWORD PTR [eax]
	...
