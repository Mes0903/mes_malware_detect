
95d249d6c319b046adb3b42b6d3fcd751711d1f94ed52db540d098dc5ef6d028.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	mov    ecx,DWORD PTR [ebp+0x10]
   10614:	and    eax,0x7ffffffe
   10619:	xor    eax,DWORD PTR [ebp+0xc]
   1061c:	and    cl,0x1
   1061f:	movzx  ecx,cl
   10622:	shr    eax,1
   10624:	neg    ecx
   10626:	sbb    ecx,ecx
   10628:	and    ecx,0x9908b0df
   1062e:	xor    eax,ecx
   10630:	xor    eax,DWORD PTR [ebp+0x8]
   10633:	pop    ebp
   10634:	ret    0xc
   10637:	int3   
   10638:	int3   
   10639:	int3   
   1063a:	int3   
   1063b:	int3   
   1063c:	mov    edi,edi
   1063e:	push   ebp
   1063f:	mov    ebp,esp
   10641:	mov    eax,DWORD PTR [ebp+0x8]
   10644:	xor    edx,edx
   10646:	inc    edx
   10647:	mov    DWORD PTR [ecx],eax
   10649:	push   esi
   1064a:	mov    eax,DWORD PTR [ecx]
   1064c:	mov    esi,eax
   1064e:	shr    esi,0x1e
   10651:	xor    esi,eax
   10653:	imul   esi,esi,0x6c078965
   10659:	add    ecx,0x4
   1065c:	add    esi,edx
   1065e:	inc    edx
   1065f:	cmp    edx,0x270
   10665:	mov    DWORD PTR [ecx],esi
   10667:	jl     0x1064a
   10669:	pop    esi
   1066a:	pop    ebp
   1066b:	ret    0x4
   1066e:	int3   
   1066f:	int3   
   10670:	int3   
   10671:	int3   
   10672:	int3   
   10673:	int3   
   10674:	mov    edi,edi
   10676:	push   ebp
   10677:	mov    ebp,esp
   10679:	push   ecx
   1067a:	push   ebx
   1067b:	push   esi
   1067c:	push   edi
   1067d:	mov    edi,ecx
   1067f:	mov    esi,edi
   10681:	mov    ebx,0xe3
   10686:	push   DWORD PTR [esi+0x4]
   10689:	mov    ecx,edi
   1068b:	push   DWORD PTR [esi]
   1068d:	dec    ebx
   1068e:	push   DWORD PTR [esi+0x634]
   10694:	call   0x10606
   10699:	mov    DWORD PTR [esi],eax
   1069b:	add    esi,0x4
   1069e:	test   ebx,ebx
   106a0:	jne    0x10686
   106a2:	mov    DWORD PTR [ebp-0x4],0x18c
   106a9:	lea    ebx,[esi+0x4]
   106ac:	push   DWORD PTR [ebx]
   106ae:	mov    ecx,edi
   106b0:	push   DWORD PTR [esi]
   106b2:	push   DWORD PTR [esi-0x38c]
   106b8:	call   0x10606
   106bd:	dec    DWORD PTR [ebp-0x4]
   106c0:	mov    DWORD PTR [esi],eax
   106c2:	mov    esi,ebx
   106c4:	jne    0x106a9
   106c6:	push   DWORD PTR [edi]
   106c8:	mov    ecx,edi
   106ca:	push   DWORD PTR [esi]
   106cc:	push   DWORD PTR [esi-0x38c]
   106d2:	call   0x10606
   106d7:	mov    DWORD PTR [esi],eax
   106d9:	mov    DWORD PTR [edi+0x9c4],0x270
   106e3:	mov    DWORD PTR [edi+0x9c0],edi
   106e9:	pop    edi
   106ea:	pop    esi
   106eb:	pop    ebx
   106ec:	leave  
   106ed:	ret    
   106ee:	int3   
   106ef:	int3   
   106f0:	int3   
   106f1:	int3   
   106f2:	int3   
   106f3:	int3   
   106f4:	mov    edi,edi
   106f6:	push   ebp
   106f7:	mov    ebp,esp
   106f9:	push   esi
   106fa:	push   DWORD PTR [ebp+0x8]
   106fd:	mov    esi,ecx
   106ff:	call   0x1063c
   10704:	mov    ecx,esi
   10706:	call   0x10674
   1070b:	pop    esi
   1070c:	pop    ebp
   1070d:	ret    0x4
   10710:	int3   
   10711:	int3   
   10712:	int3   
   10713:	int3   
   10714:	int3   
   10715:	int3   
   10716:	mov    edi,edi
   10718:	push   esi
   10719:	push   edi
   1071a:	mov    edi,ecx
   1071c:	lea    esi,[edi+0x9c4]
   10722:	cmp    DWORD PTR [esi],0x0
   10725:	jne    0x1072c
   10727:	call   0x10674
   1072c:	dec    DWORD PTR [esi]
   1072e:	lea    eax,[edi+0x9c0]
   10734:	mov    edx,DWORD PTR [eax]
   10736:	mov    ecx,DWORD PTR [edx]
   10738:	add    edx,0x4
   1073b:	mov    DWORD PTR [eax],edx
   1073d:	mov    eax,ecx
   1073f:	shr    eax,0xb
   10742:	xor    ecx,eax
   10744:	mov    eax,ecx
   10746:	and    eax,0xff3a58ad
   1074b:	shl    eax,0x7
   1074e:	xor    ecx,eax
   10750:	mov    eax,ecx
   10752:	and    eax,0xffffdf8c
   10757:	shl    eax,0xf
   1075a:	xor    ecx,eax
   1075c:	mov    eax,ecx
   1075e:	shr    eax,0x12
   10761:	pop    edi
   10762:	xor    eax,ecx
   10764:	pop    esi
   10765:	ret    
   10766:	int3   
   10767:	int3   
   10768:	int3   
   10769:	int3   
   1076a:	int3   
   1076b:	int3   
   1076c:	mov    edi,edi
   1076e:	push   ebp
   1076f:	mov    ebp,esp
   10771:	push   esi
   10772:	mov    esi,DWORD PTR [ebp+0x8]
   10775:	shr    esi,1
   10777:	or     esi,DWORD PTR [ebp+0x8]
   1077a:	push   edi
   1077b:	mov    eax,esi
   1077d:	shr    eax,0x2
   10780:	or     esi,eax
   10782:	mov    eax,esi
   10784:	shr    eax,0x4
   10787:	or     esi,eax
   10789:	mov    eax,esi
   1078b:	shr    eax,0x8
   1078e:	or     esi,eax
   10790:	mov    eax,esi
   10792:	shr    eax,0x10
   10795:	mov    edi,ecx
   10797:	or     esi,eax
   10799:	mov    ecx,edi
   1079b:	call   0x10716
   107a0:	and    eax,esi
   107a2:	cmp    eax,DWORD PTR [ebp+0x8]
   107a5:	ja     0x10799
   107a7:	pop    edi
   107a8:	pop    esi
   107a9:	pop    ebp
   107aa:	ret    0x4
   107ad:	int3   
   107ae:	int3   
   107af:	int3   
   107b0:	int3   
   107b1:	int3   
   107b2:	mov    edi,edi
   107b4:	push   ebp
   107b5:	mov    ebp,esp
   107b7:	sub    esp,0xa04
   107bd:	push   ebx
   107be:	push   esi
   107bf:	mov    esi,DWORD PTR [ebp+0x14]
   107c2:	push   edi
   107c3:	test   esi,esi
   107c5:	jne    0x108a0
   107cb:	xor    ecx,ecx
   107cd:	lea    eax,[ebp-0x3c]
   107d0:	mov    edx,0xff
   107d5:	shl    edx,cl
   107d7:	and    edx,DWORD PTR [ebp+0x8]
   107da:	shr    edx,cl
   107dc:	inc    ecx
   107dd:	inc    ecx
   107de:	mov    DWORD PTR [eax],edx
   107e0:	add    eax,0x4
   107e3:	cmp    ecx,0x14
   107e6:	jne    0x107d0
   107e8:	mov    ebx,DWORD PTR [ebp+0xc]
   107eb:	xor    eax,eax
   107ed:	mov    WORD PTR [ebx],ax
   107f0:	mov    eax,DWORD PTR [ebp-0x3c]
   107f3:	push   0x5
   107f5:	cdq    
   107f6:	pop    ecx
   107f7:	idiv   ecx
   107f9:	mov    DWORD PTR [ebp-0x14],0x1dea6
   10800:	mov    DWORD PTR [ebp-0x10],0x1de9c
   10807:	mov    DWORD PTR [ebp-0xc],0x1de94
   1080e:	mov    DWORD PTR [ebp-0x8],0x1de8a
   10815:	mov    DWORD PTR [ebp-0x4],0x1de80
   1081c:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   10820:	mov    ecx,edx
   10822:	mov    ax,WORD PTR [edx]
   10825:	inc    edx
   10826:	inc    edx
   10827:	test   ax,ax
   1082a:	jne    0x10822
   1082c:	sub    edx,ecx
   1082e:	mov    edi,ebx
   10830:	dec    edi
   10831:	mov    esi,ecx
   10833:	dec    edi
   10834:	mov    ax,WORD PTR [edi+0x2]
   10838:	inc    edi
   10839:	inc    edi
   1083a:	test   ax,ax
   1083d:	jne    0x10834
   1083f:	mov    ecx,edx
   10841:	shr    ecx,0x2
   10844:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10846:	mov    ecx,edx
   10848:	and    ecx,0x3
   1084b:	mov    eax,ebx
   1084d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1084f:	lea    ecx,[eax+0x2]
   10852:	mov    dx,WORD PTR [eax]
   10855:	inc    eax
   10856:	inc    eax
   10857:	test   dx,dx
   1085a:	jne    0x10852
   1085c:	sub    eax,ecx
   1085e:	sar    eax,1
   10860:	mov    ecx,eax
   10862:	mov    eax,DWORD PTR [ebp-0x38]
   10865:	push   0x3
   10867:	cdq    
   10868:	pop    esi
   10869:	idiv   esi
   1086b:	cmp    edx,0xfffffffe
   1086e:	je     0x10954
   10874:	add    edx,0x2
   10877:	lea    esi,[ebp-0x34]
   1087a:	mov    DWORD PTR [ebp+0x8],edx
   1087d:	mov    eax,DWORD PTR [esi]
   1087f:	cdq    
   10880:	push   0x1a
   10882:	pop    edi
   10883:	idiv   edi
   10885:	add    esi,0x4
   10888:	xor    eax,eax
   1088a:	add    edx,0x61
   1088d:	mov    WORD PTR [ebx+ecx*2],dx
   10891:	inc    ecx
   10892:	dec    DWORD PTR [ebp+0x8]
   10895:	mov    WORD PTR [ebx+ecx*2],ax
   10899:	jne    0x1087d
   1089b:	jmp    0x10954
   108a0:	cmp    esi,0x1
   108a3:	je     0x108b0
   108a5:	mov    eax,esi
   108a7:	imul   eax,eax,0xa
   108aa:	add    eax,DWORD PTR [ebp+0x10]
   108ad:	add    DWORD PTR [ebp+0x8],eax
   108b0:	push   DWORD PTR [ebp+0x8]
   108b3:	lea    ecx,[ebp-0xa04]
   108b9:	call   0x106f4
   108be:	lea    eax,[esi-0x1]
   108c1:	cmp    eax,0x5
   108c4:	ja     0x108d5
   108c6:	imul   esi,esi,0x3
   108c9:	add    esi,DWORD PTR [ebp+0x10]
   108cc:	mov    esi,DWORD PTR [esi*4+0x776bc]
   108d3:	jmp    0x108da
   108d5:	mov    esi,0x1de7e
   108da:	mov    ebx,DWORD PTR [ebp+0xc]
   108dd:	xor    eax,eax
   108df:	mov    WORD PTR [ebx],ax
   108e2:	mov    eax,esi
   108e4:	mov    edx,esi
   108e6:	mov    cx,WORD PTR [eax]
   108e9:	inc    eax
   108ea:	inc    eax
   108eb:	test   cx,cx
   108ee:	jne    0x108e6
   108f0:	sub    eax,edx
   108f2:	mov    edi,ebx
   108f4:	dec    edi
   108f5:	dec    edi
   108f6:	mov    cx,WORD PTR [edi+0x2]
   108fa:	inc    edi
   108fb:	inc    edi
   108fc:	test   cx,cx
   108ff:	jne    0x108f6
   10901:	mov    ecx,eax
   10903:	shr    ecx,0x2
   10906:	mov    esi,edx
   10908:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1090a:	mov    ecx,eax
   1090c:	and    ecx,0x3
   1090f:	mov    eax,ebx
   10911:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   10913:	lea    ecx,[eax+0x2]
   10916:	mov    dx,WORD PTR [eax]
   10919:	inc    eax
   1091a:	inc    eax
   1091b:	test   dx,dx
   1091e:	jne    0x10916
   10920:	sub    eax,ecx
   10922:	sar    eax,1
   10924:	push   0x5
   10926:	mov    esi,eax
   10928:	pop    edi
   10929:	push   0x23
   1092b:	lea    ecx,[ebp-0xa04]
   10931:	call   0x1076c
   10936:	cmp    eax,0xa
   10939:	jae    0x10940
   1093b:	add    eax,0x30
   1093e:	jmp    0x10943
   10940:	add    eax,0x57
   10943:	movzx  eax,ax
   10946:	mov    WORD PTR [ebx+esi*2],ax
   1094a:	inc    esi
   1094b:	xor    eax,eax
   1094d:	dec    edi
   1094e:	mov    WORD PTR [ebx+esi*2],ax
   10952:	jne    0x10929
   10954:	pop    edi
   10955:	pop    esi
   10956:	pop    ebx
   10957:	leave  
   10958:	ret    0x10
   1095b:	int3   
   1095c:	int3   
   1095d:	int3   
   1095e:	int3   
   1095f:	int3   
   10960:	mov    edi,edi
   10962:	push   ebp
   10963:	mov    ebp,esp
   10965:	mov    eax,DWORD PTR [ebp+0x8]
   10968:	lea    edx,[eax+0x2]
   1096b:	mov    cx,WORD PTR [eax]
   1096e:	inc    eax
   1096f:	inc    eax
   10970:	test   cx,cx
   10973:	jne    0x1096b
   10975:	sub    eax,edx
   10977:	sar    eax,1
   10979:	pop    ebp
   1097a:	ret    0x4
   1097d:	int3   
   1097e:	int3   
   1097f:	int3   
   10980:	int3   
   10981:	int3   
   10982:	mov    eax,ecx
   10984:	ret    
   10985:	int3   
   10986:	int3   
   10987:	int3   
   10988:	int3   
   10989:	int3   
   1098a:	ret    
   1098b:	int3   
   1098c:	int3   
   1098d:	int3   
   1098e:	int3   
   1098f:	int3   
   10990:	mov    edi,edi
   10992:	push   esi
   10993:	mov    esi,ecx
   10995:	dec    DWORD PTR [esi+0x4]
   10998:	jne    0x109a9
   1099a:	push   DWORD PTR [esi]
   1099c:	call   0x1da56
   109a1:	push   esi
   109a2:	call   0x1da56
   109a7:	pop    ecx
   109a8:	pop    ecx
   109a9:	pop    esi
   109aa:	ret    
   109ab:	int3   
   109ac:	int3   
   109ad:	int3   
   109ae:	int3   
   109af:	int3   
   109b0:	mov    edi,edi
   109b2:	push   ebp
   109b3:	mov    ebp,esp
   109b5:	push   esi
   109b6:	xor    esi,esi
   109b8:	xor    edx,edx
   109ba:	cmp    DWORD PTR [ebp+0xc],esi
   109bd:	je     0x109da
   109bf:	mov    eax,DWORD PTR [ebp+0x8]
   109c2:	mov    ecx,DWORD PTR [ebp+0x10]
   109c5:	mov    cl,BYTE PTR [edx+ecx*1]
   109c8:	add    eax,esi
   109ca:	xor    BYTE PTR [eax],cl
   109cc:	lea    eax,[edx+0x1]
   109cf:	xor    edx,edx
   109d1:	div    DWORD PTR [ebp+0x14]
   109d4:	inc    esi
   109d5:	cmp    esi,DWORD PTR [ebp+0xc]
   109d8:	jne    0x109bf
   109da:	pop    esi
   109db:	pop    ebp
   109dc:	ret    0x10
   109df:	int3   
   109e0:	int3   
   109e1:	int3   
   109e2:	int3   
   109e3:	int3   
   109e4:	mov    edi,edi
   109e6:	push   ebp
   109e7:	mov    ebp,esp
   109e9:	mov    ecx,DWORD PTR [ebp+0x8]
   109ec:	mov    eax,ecx
   109ee:	lea    edx,[eax+0x2]
   109f1:	push   esi
   109f2:	mov    si,WORD PTR [eax]
   109f5:	inc    eax
   109f6:	inc    eax
   109f7:	test   si,si
   109fa:	jne    0x109f2
   109fc:	sub    eax,edx
   109fe:	sar    eax,1
   10a00:	cmp    eax,0xc
   10a03:	jae    0x10a0c
   10a05:	xor    al,al
   10a07:	jmp    0x10ada
   10a0c:	lea    eax,[ecx+eax*2-0x18]
   10a10:	movzx  ecx,WORD PTR [eax]
   10a13:	cmp    cx,0x69
   10a17:	je     0x10a1f
   10a19:	cmp    cx,0x49
   10a1d:	jne    0x10a05
   10a1f:	movzx  ecx,WORD PTR [eax+0x2]
   10a23:	push   0x45
   10a25:	pop    esi
   10a26:	push   0x65
   10a28:	pop    edx
   10a29:	cmp    cx,dx
   10a2c:	je     0x10a33
   10a2e:	cmp    cx,si
   10a31:	jne    0x10a05
   10a33:	movzx  ecx,WORD PTR [eax+0x4]
   10a37:	cmp    cx,0x78
   10a3b:	je     0x10a43
   10a3d:	cmp    cx,0x58
   10a41:	jne    0x10a05
   10a43:	movzx  ecx,WORD PTR [eax+0x6]
   10a47:	cmp    cx,0x70
   10a4b:	je     0x10a53
   10a4d:	cmp    cx,0x50
   10a51:	jne    0x10a05
   10a53:	movzx  ecx,WORD PTR [eax+0x8]
   10a57:	cmp    cx,0x6c
   10a5b:	je     0x10a63
   10a5d:	cmp    cx,0x4c
   10a61:	jne    0x10a05
   10a63:	movzx  ecx,WORD PTR [eax+0xa]
   10a67:	cmp    cx,0x6f
   10a6b:	je     0x10a73
   10a6d:	cmp    cx,0x4f
   10a71:	jne    0x10a05
   10a73:	movzx  ecx,WORD PTR [eax+0xc]
   10a77:	cmp    cx,0x72
   10a7b:	je     0x10a83
   10a7d:	cmp    cx,0x52
   10a81:	jne    0x10a05
   10a83:	movzx  ecx,WORD PTR [eax+0xe]
   10a87:	cmp    cx,dx
   10a8a:	je     0x10a95
   10a8c:	cmp    cx,si
   10a8f:	jne    0x10a05
   10a95:	cmp    WORD PTR [eax+0x10],0x2e
   10a9a:	jne    0x10a05
   10aa0:	movzx  ecx,WORD PTR [eax+0x12]
   10aa4:	cmp    cx,dx
   10aa7:	je     0x10ab2
   10aa9:	cmp    cx,si
   10aac:	jne    0x10a05
   10ab2:	movzx  ecx,WORD PTR [eax+0x14]
   10ab6:	cmp    cx,0x78
   10aba:	je     0x10ac6
   10abc:	cmp    cx,0x58
   10ac0:	jne    0x10a05
   10ac6:	movzx  eax,WORD PTR [eax+0x16]
   10aca:	cmp    ax,dx
   10acd:	je     0x10ad8
   10acf:	cmp    ax,si
   10ad2:	jne    0x10a05
   10ad8:	mov    al,0x1
   10ada:	pop    esi
   10adb:	pop    ebp
   10adc:	ret    0x4
   10adf:	int3   
   10ae0:	int3   
   10ae1:	int3   
   10ae2:	int3   
   10ae3:	int3   
   10ae4:	mov    edi,edi
   10ae6:	push   ebp
   10ae7:	mov    ebp,esp
   10ae9:	mov    ecx,DWORD PTR [ebp+0x8]
   10aec:	mov    eax,ecx
   10aee:	lea    edx,[eax+0x2]
   10af1:	push   esi
   10af2:	mov    si,WORD PTR [eax]
   10af5:	inc    eax
   10af6:	inc    eax
   10af7:	test   si,si
   10afa:	jne    0x10af2
   10afc:	sub    eax,edx
   10afe:	sar    eax,1
   10b00:	pop    esi
   10b01:	cmp    eax,0xb
   10b04:	jae    0x10b0d
   10b06:	xor    al,al
   10b08:	jmp    0x10bc9
   10b0d:	lea    eax,[ecx+eax*2-0x16]
   10b11:	movzx  ecx,WORD PTR [eax]
   10b14:	cmp    cx,0x66
   10b18:	je     0x10b20
   10b1a:	cmp    cx,0x46
   10b1e:	jne    0x10b06
   10b20:	movzx  ecx,WORD PTR [eax+0x2]
   10b24:	cmp    cx,0x69
   10b28:	je     0x10b30
   10b2a:	cmp    cx,0x49
   10b2e:	jne    0x10b06
   10b30:	movzx  ecx,WORD PTR [eax+0x4]
   10b34:	cmp    cx,0x72
   10b38:	je     0x10b40
   10b3a:	cmp    cx,0x52
   10b3e:	jne    0x10b06
   10b40:	movzx  ecx,WORD PTR [eax+0x6]
   10b44:	cmp    cx,0x65
   10b48:	je     0x10b50
   10b4a:	cmp    cx,0x45
   10b4e:	jne    0x10b06
   10b50:	movzx  ecx,WORD PTR [eax+0x8]
   10b54:	cmp    cx,0x66
   10b58:	je     0x10b60
   10b5a:	cmp    cx,0x46
   10b5e:	jne    0x10b06
   10b60:	movzx  ecx,WORD PTR [eax+0xa]
   10b64:	cmp    cx,0x6f
   10b68:	je     0x10b70
   10b6a:	cmp    cx,0x4f
   10b6e:	jne    0x10b06
   10b70:	movzx  ecx,WORD PTR [eax+0xc]
   10b74:	cmp    cx,0x78
   10b78:	je     0x10b80
   10b7a:	cmp    cx,0x58
   10b7e:	jne    0x10b06
   10b80:	cmp    WORD PTR [eax+0xe],0x2e
   10b85:	jne    0x10b06
   10b8b:	movzx  ecx,WORD PTR [eax+0x10]
   10b8f:	cmp    cx,0x65
   10b93:	je     0x10b9f
   10b95:	cmp    cx,0x45
   10b99:	jne    0x10b06
   10b9f:	movzx  ecx,WORD PTR [eax+0x12]
   10ba3:	cmp    cx,0x78
   10ba7:	je     0x10bb3
   10ba9:	cmp    cx,0x58
   10bad:	jne    0x10b06
   10bb3:	movzx  eax,WORD PTR [eax+0x14]
   10bb7:	cmp    ax,0x65
   10bbb:	je     0x10bc7
   10bbd:	cmp    ax,0x45
   10bc1:	jne    0x10b06
   10bc7:	mov    al,0x1
   10bc9:	pop    ebp
   10bca:	ret    0x4
   10bcd:	int3   
   10bce:	int3   
   10bcf:	int3   
   10bd0:	int3   
   10bd1:	int3   
   10bd2:	mov    edi,edi
   10bd4:	push   ebp
   10bd5:	mov    ebp,esp
   10bd7:	mov    ecx,DWORD PTR [ebp+0x8]
   10bda:	mov    eax,ecx
   10bdc:	lea    edx,[eax+0x2]
   10bdf:	push   esi
   10be0:	mov    si,WORD PTR [eax]
   10be3:	inc    eax
   10be4:	inc    eax
   10be5:	test   si,si
   10be8:	jne    0x10be0
   10bea:	sub    eax,edx
   10bec:	sar    eax,1
   10bee:	pop    esi
   10bef:	cmp    eax,0xa
   10bf2:	jae    0x10bfb
   10bf4:	xor    al,al
   10bf6:	jmp    0x10ca3
   10bfb:	lea    eax,[ecx+eax*2-0x14]
   10bff:	movzx  ecx,WORD PTR [eax]
   10c02:	cmp    cx,0x63
   10c06:	je     0x10c0e
   10c08:	cmp    cx,0x43
   10c0c:	jne    0x10bf4
   10c0e:	movzx  ecx,WORD PTR [eax+0x2]
   10c12:	cmp    cx,0x68
   10c16:	je     0x10c1e
   10c18:	cmp    cx,0x48
   10c1c:	jne    0x10bf4
   10c1e:	movzx  ecx,WORD PTR [eax+0x4]
   10c22:	cmp    cx,0x72
   10c26:	je     0x10c2e
   10c28:	cmp    cx,0x52
   10c2c:	jne    0x10bf4
   10c2e:	movzx  ecx,WORD PTR [eax+0x6]
   10c32:	cmp    cx,0x6f
   10c36:	je     0x10c3e
   10c38:	cmp    cx,0x4f
   10c3c:	jne    0x10bf4
   10c3e:	movzx  ecx,WORD PTR [eax+0x8]
   10c42:	cmp    cx,0x6d
   10c46:	je     0x10c4e
   10c48:	cmp    cx,0x4d
   10c4c:	jne    0x10bf4
   10c4e:	movzx  ecx,WORD PTR [eax+0xa]
   10c52:	cmp    cx,0x65
   10c56:	je     0x10c5e
   10c58:	cmp    cx,0x45
   10c5c:	jne    0x10bf4
   10c5e:	cmp    WORD PTR [eax+0xc],0x2e
   10c63:	jne    0x10bf4
   10c65:	movzx  ecx,WORD PTR [eax+0xe]
   10c69:	cmp    cx,0x65
   10c6d:	je     0x10c79
   10c6f:	cmp    cx,0x45
   10c73:	jne    0x10bf4
   10c79:	movzx  ecx,WORD PTR [eax+0x10]
   10c7d:	cmp    cx,0x78
   10c81:	je     0x10c8d
   10c83:	cmp    cx,0x58
   10c87:	jne    0x10bf4
   10c8d:	movzx  eax,WORD PTR [eax+0x12]
   10c91:	cmp    ax,0x65
   10c95:	je     0x10ca1
   10c97:	cmp    ax,0x45
   10c9b:	jne    0x10bf4
   10ca1:	mov    al,0x1
   10ca3:	pop    ebp
   10ca4:	ret    0x4
   10ca7:	int3   
   10ca8:	int3   
   10ca9:	int3   
   10caa:	int3   
   10cab:	int3   
   10cac:	mov    edi,edi
   10cae:	push   ebp
   10caf:	mov    ebp,esp
   10cb1:	mov    ecx,DWORD PTR [ebp+0x8]
   10cb4:	mov    eax,ecx
   10cb6:	lea    edx,[eax+0x2]
   10cb9:	push   esi
   10cba:	mov    si,WORD PTR [eax]
   10cbd:	inc    eax
   10cbe:	inc    eax
   10cbf:	test   si,si
   10cc2:	jne    0x10cba
   10cc4:	sub    eax,edx
   10cc6:	sar    eax,1
   10cc8:	pop    esi
   10cc9:	cmp    eax,0x9
   10ccc:	jae    0x10cd5
   10cce:	xor    al,al
   10cd0:	jmp    0x10d69
   10cd5:	lea    eax,[ecx+eax*2-0x12]
   10cd9:	movzx  ecx,WORD PTR [eax]
   10cdc:	cmp    cx,0x6d
   10ce0:	je     0x10ce8
   10ce2:	cmp    cx,0x4d
   10ce6:	jne    0x10cce
   10ce8:	movzx  ecx,WORD PTR [eax+0x2]
   10cec:	cmp    cx,0x73
   10cf0:	je     0x10cf8
   10cf2:	cmp    cx,0x53
   10cf6:	jne    0x10cce
   10cf8:	movzx  ecx,WORD PTR [eax+0x4]
   10cfc:	cmp    cx,0x68
   10d00:	je     0x10d08
   10d02:	cmp    cx,0x48
   10d06:	jne    0x10cce
   10d08:	movzx  ecx,WORD PTR [eax+0x6]
   10d0c:	cmp    cx,0x74
   10d10:	je     0x10d18
   10d12:	cmp    cx,0x54
   10d16:	jne    0x10cce
   10d18:	movzx  ecx,WORD PTR [eax+0x8]
   10d1c:	cmp    cx,0x61
   10d20:	je     0x10d28
   10d22:	cmp    cx,0x41
   10d26:	jne    0x10cce
   10d28:	cmp    WORD PTR [eax+0xa],0x2e
   10d2d:	jne    0x10cce
   10d2f:	movzx  ecx,WORD PTR [eax+0xc]
   10d33:	cmp    cx,0x65
   10d37:	je     0x10d3f
   10d39:	cmp    cx,0x45
   10d3d:	jne    0x10cce
   10d3f:	movzx  ecx,WORD PTR [eax+0xe]
   10d43:	cmp    cx,0x78
   10d47:	je     0x10d53
   10d49:	cmp    cx,0x58
   10d4d:	jne    0x10cce
   10d53:	movzx  eax,WORD PTR [eax+0x10]
   10d57:	cmp    ax,0x65
   10d5b:	je     0x10d67
   10d5d:	cmp    ax,0x45
   10d61:	jne    0x10cce
   10d67:	mov    al,0x1
   10d69:	pop    ebp
   10d6a:	ret    0x4
   10d6d:	int3   
   10d6e:	int3   
   10d6f:	int3   
   10d70:	int3   
   10d71:	int3   
   10d72:	mov    edi,edi
   10d74:	push   ebp
   10d75:	mov    ebp,esp
   10d77:	push   esi
   10d78:	mov    esi,DWORD PTR [ebp+0x8]
   10d7b:	push   esi
   10d7c:	call   0x109e4
   10d81:	test   al,al
   10d83:	je     0x10d8a
   10d85:	xor    eax,eax
   10d87:	inc    eax
   10d88:	jmp    0x10db7
   10d8a:	push   esi
   10d8b:	call   0x10ae4
   10d90:	test   al,al
   10d92:	je     0x10d99
   10d94:	push   0x2
   10d96:	pop    eax
   10d97:	jmp    0x10db7
   10d99:	push   esi
   10d9a:	call   0x10bd2
   10d9f:	test   al,al
   10da1:	je     0x10da7
   10da3:	push   0x3
   10da5:	jmp    0x10d96
   10da7:	push   esi
   10da8:	call   0x10cac
   10dad:	movzx  eax,al
   10db0:	neg    eax
   10db2:	sbb    eax,eax
   10db4:	and    eax,0x4
   10db7:	pop    esi
   10db8:	pop    ebp
   10db9:	ret    0x4
   10dbc:	int3   
   10dbd:	int3   
   10dbe:	int3   
   10dbf:	int3   
   10dc0:	int3   
   10dc1:	int3   
   10dc2:	mov    edi,edi
   10dc4:	push   ebp
   10dc5:	mov    ebp,esp
   10dc7:	sub    esp,0x10
   10dca:	push   esi
   10dcb:	push   edi
   10dcc:	xor    eax,eax
   10dce:	mov    WORD PTR [ebp-0x8],ax
   10dd2:	lea    edi,[ebp-0x6]
   10dd5:	stos   DWORD PTR es:[edi],eax
   10dd6:	stos   WORD PTR es:[edi],ax
   10dd8:	mov    eax,DWORD PTR [ebp+0xc]
   10ddb:	mov    DWORD PTR [ebp-0x4],eax
   10dde:	lea    ecx,[eax+0x2]
   10de1:	mov    dx,WORD PTR [eax]
   10de4:	inc    eax
   10de5:	inc    eax
   10de6:	test   dx,dx
   10de9:	jne    0x10de1
   10deb:	mov    esi,DWORD PTR [ebp+0x8]
   10dee:	movzx  edx,WORD PTR [esi]
   10df1:	sub    eax,ecx
   10df3:	sar    eax,1
   10df5:	lea    ecx,[eax+eax*1]
   10df8:	mov    WORD PTR [ebp-0x8],cx
   10dfc:	mov    WORD PTR [ebp-0x6],cx
   10e00:	cmp    dx,cx
   10e03:	jb     0x10e42
   10e05:	xor    eax,eax
   10e07:	lea    edi,[ebp-0xe]
   10e0a:	stos   DWORD PTR es:[edi],eax
   10e0b:	stos   WORD PTR es:[edi],ax
   10e0d:	mov    WORD PTR [ebp-0x10],cx
   10e11:	mov    WORD PTR [ebp-0xe],cx
   10e15:	movzx  eax,dx
   10e18:	movzx  ecx,cx
   10e1b:	sub    eax,ecx
   10e1d:	mov    ecx,DWORD PTR [esi+0x4]
   10e20:	cdq    
   10e21:	sub    eax,edx
   10e23:	sar    eax,1
   10e25:	lea    eax,[ecx+eax*2]
   10e28:	mov    DWORD PTR [ebp-0xc],eax
   10e2b:	push   0x1
   10e2d:	lea    eax,[ebp-0x8]
   10e30:	push   eax
   10e31:	lea    eax,[ebp-0x10]
   10e34:	push   eax
   10e35:	call   DWORD PTR ds:0x1f018
   10e3b:	neg    eax
   10e3d:	sbb    eax,eax
   10e3f:	inc    eax
   10e40:	jmp    0x10e44
   10e42:	xor    al,al
   10e44:	pop    edi
   10e45:	pop    esi
   10e46:	leave  
   10e47:	ret    0x8
   10e4a:	int3   
   10e4b:	int3   
   10e4c:	int3   
   10e4d:	int3   
   10e4e:	int3   
   10e4f:	int3   
   10e50:	mov    edi,edi
   10e52:	push   ebp
   10e53:	mov    ebp,esp
   10e55:	push   ebx
   10e56:	xor    eax,eax
   10e58:	push   eax
   10e59:	push   eax
   10e5a:	push   eax
   10e5b:	push   eax
   10e5c:	mov    ebx,0x7772c
   10e61:	push   ebx
   10e62:	call   DWORD PTR ds:0x1f020
   10e68:	test   eax,eax
   10e6a:	jge    0x10e70
   10e6c:	xor    al,al
   10e6e:	jmp    0x10e93
   10e70:	push   esi
   10e71:	mov    esi,DWORD PTR [ebp+0x8]
   10e74:	push   edi
   10e75:	imul   esi,esi,0x14
   10e78:	mov    edi,DWORD PTR [ebp+0xc]
   10e7b:	push   0x5
   10e7d:	pop    ecx
   10e7e:	push   0x0
   10e80:	add    esi,0x7817c
   10e86:	push   ebx
   10e87:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10e89:	call   DWORD PTR ds:0x1f01c
   10e8f:	pop    edi
   10e90:	mov    al,0x1
   10e92:	pop    esi
   10e93:	pop    ebx
   10e94:	pop    ebp
   10e95:	ret    0x8
   10e98:	int3   
   10e99:	int3   
   10e9a:	int3   
   10e9b:	int3   
   10e9c:	int3   
   10e9d:	int3   
   10e9e:	mov    edi,edi
   10ea0:	push   ebp
   10ea1:	mov    ebp,esp
   10ea3:	push   ebx
   10ea4:	xor    eax,eax
   10ea6:	push   eax
   10ea7:	push   eax
   10ea8:	push   eax
   10ea9:	push   eax
   10eaa:	mov    ebx,0x7772c
   10eaf:	push   ebx
   10eb0:	call   DWORD PTR ds:0x1f020
   10eb6:	test   eax,eax
   10eb8:	jl     0x10edb
   10eba:	push   esi
   10ebb:	mov    esi,DWORD PTR [ebp+0xc]
   10ebe:	push   edi
   10ebf:	mov    edi,DWORD PTR [ebp+0x8]
   10ec2:	imul   edi,edi,0x14
   10ec5:	push   0x5
   10ec7:	pop    ecx
   10ec8:	push   0x0
   10eca:	add    edi,0x7817c
   10ed0:	push   ebx
   10ed1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10ed3:	call   DWORD PTR ds:0x1f01c
   10ed9:	pop    edi
   10eda:	pop    esi
   10edb:	pop    ebx
   10edc:	pop    ebp
   10edd:	ret    0x8
   10ee0:	int3   
   10ee1:	int3   
   10ee2:	int3   
   10ee3:	int3   
   10ee4:	int3   
   10ee5:	int3   
   10ee6:	mov    edi,edi
   10ee8:	push   ebp
   10ee9:	mov    ebp,esp
   10eeb:	sub    esp,0x14
   10eee:	and    DWORD PTR [ebp-0x14],0x0
   10ef2:	push   edi
   10ef3:	xor    eax,eax
   10ef5:	lea    edi,[ebp-0x10]
   10ef8:	stos   DWORD PTR es:[edi],eax
   10ef9:	stos   DWORD PTR es:[edi],eax
   10efa:	stos   DWORD PTR es:[edi],eax
   10efb:	stos   DWORD PTR es:[edi],eax
   10efc:	lea    eax,[ebp-0x14]
   10eff:	push   eax
   10f00:	push   DWORD PTR [ebp+0x8]
   10f03:	call   0x10e9e
   10f08:	pop    edi
   10f09:	leave  
   10f0a:	ret    0x4
   10f0d:	int3   
   10f0e:	int3   
   10f0f:	int3   
   10f10:	int3   
   10f11:	int3   
   10f12:	mov    edi,edi
   10f14:	push   ebp
   10f15:	mov    ebp,esp
   10f17:	push   ebx
   10f18:	xor    eax,eax
   10f1a:	push   eax
   10f1b:	push   eax
   10f1c:	push   eax
   10f1d:	push   eax
   10f1e:	mov    ebx,0x780b8
   10f23:	push   ebx
   10f24:	call   DWORD PTR ds:0x1f020
   10f2a:	test   eax,eax
   10f2c:	jl     0x10f48
   10f2e:	push   esi
   10f2f:	mov    esi,DWORD PTR [ebp+0x8]
   10f32:	push   edi
   10f33:	push   0x40
   10f35:	pop    ecx
   10f36:	push   0x0
   10f38:	mov    edi,0x781a8
   10f3d:	push   ebx
   10f3e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f40:	call   DWORD PTR ds:0x1f01c
   10f46:	pop    edi
   10f47:	pop    esi
   10f48:	pop    ebx
   10f49:	pop    ebp
   10f4a:	ret    0x4
   10f4d:	int3   
   10f4e:	int3   
   10f4f:	int3   
   10f50:	int3   
   10f51:	int3   
   10f52:	mov    edi,edi
   10f54:	push   ebp
   10f55:	mov    ebp,esp
   10f57:	push   ebx
   10f58:	xor    eax,eax
   10f5a:	push   eax
   10f5b:	push   eax
   10f5c:	push   eax
   10f5d:	push   eax
   10f5e:	mov    ebx,0x780b8
   10f63:	push   ebx
   10f64:	call   DWORD PTR ds:0x1f020
   10f6a:	test   eax,eax
   10f6c:	jge    0x10f72
   10f6e:	xor    al,al
   10f70:	jmp    0x10f98
   10f72:	push   esi
   10f73:	push   edi
   10f74:	mov    edi,DWORD PTR [ebp+0x8]
   10f77:	push   0x40
   10f79:	pop    ecx
   10f7a:	push   0x0
   10f7c:	mov    esi,0x781a8
   10f81:	push   ebx
   10f82:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f84:	call   DWORD PTR ds:0x1f01c
   10f8a:	xor    eax,eax
   10f8c:	cmp    WORD PTR ds:0x781a8,ax
   10f93:	pop    edi
   10f94:	setne  al
   10f97:	pop    esi
   10f98:	pop    ebx
   10f99:	pop    ebp
   10f9a:	ret    0x4
   10f9d:	int3   
   10f9e:	int3   
   10f9f:	int3   
   10fa0:	int3   
   10fa1:	int3   
   10fa2:	mov    edi,edi
   10fa4:	push   ebp
   10fa5:	mov    ebp,esp
   10fa7:	push   ebx
   10fa8:	mov    ebx,DWORD PTR [ebp+0x8]
   10fab:	cmp    ebx,0x40
   10fae:	ja     0x10fdb
   10fb0:	push   esi
   10fb1:	push   edi
   10fb2:	xor    edi,edi
   10fb4:	push   edi
   10fb5:	push   edi
   10fb6:	push   edi
   10fb7:	push   edi
   10fb8:	mov    esi,0x780f4
   10fbd:	push   esi
   10fbe:	call   DWORD PTR ds:0x1f020
   10fc4:	test   eax,eax
   10fc6:	jl     0x10fd9
   10fc8:	push   edi
   10fc9:	lea    eax,[ebx*4+0x777b8]
   10fd0:	inc    DWORD PTR [eax]
   10fd2:	push   esi
   10fd3:	call   DWORD PTR ds:0x1f01c
   10fd9:	pop    edi
   10fda:	pop    esi
   10fdb:	pop    ebx
   10fdc:	pop    ebp
   10fdd:	ret    0x4
   10fe0:	int3   
   10fe1:	int3   
   10fe2:	int3   
   10fe3:	int3   
   10fe4:	int3   
   10fe5:	int3   
   10fe6:	mov    edi,edi
   10fe8:	push   ebp
   10fe9:	mov    ebp,esp
   10feb:	push   ebx
   10fec:	push   esi
   10fed:	push   edi
   10fee:	mov    edi,DWORD PTR [ebp+0x8]
   10ff1:	cmp    edi,0x40
   10ff4:	ja     0x1101f
   10ff6:	xor    ebx,ebx
   10ff8:	push   ebx
   10ff9:	push   ebx
   10ffa:	push   ebx
   10ffb:	push   ebx
   10ffc:	mov    esi,0x780f4
   11001:	push   esi
   11002:	call   DWORD PTR ds:0x1f020
   11008:	test   eax,eax
   1100a:	jl     0x1101f
   1100c:	mov    edi,DWORD PTR [edi*4+0x777b8]
   11013:	push   ebx
   11014:	push   esi
   11015:	call   DWORD PTR ds:0x1f01c
   1101b:	mov    eax,edi
   1101d:	jmp    0x11021
   1101f:	xor    eax,eax
   11021:	pop    edi
   11022:	pop    esi
   11023:	pop    ebx
   11024:	pop    ebp
   11025:	ret    0x4
   11028:	int3   
   11029:	int3   
   1102a:	int3   
   1102b:	int3   
   1102c:	int3   
   1102d:	int3   
   1102e:	mov    edi,edi
   11030:	push   ebp
   11031:	mov    ebp,esp
   11033:	mov    eax,DWORD PTR [ebp+0x8]
   11036:	mov    edx,DWORD PTR [ebp+0xc]
   11039:	push   esi
   1103a:	xor    esi,esi
   1103c:	jmp    0x11061
   1103e:	mov    ecx,eax
   11040:	and    ecx,0x1
   11043:	or     ecx,esi
   11045:	push   esi
   11046:	jne    0x11053
   11048:	push   0x2
   1104a:	push   edx
   1104b:	push   eax
   1104c:	call   0x1dac0
   11051:	jmp    0x11061
   11053:	push   0x3
   11055:	push   edx
   11056:	push   eax
   11057:	call   0x1dab4
   1105c:	add    eax,0x1
   1105f:	adc    edx,esi
   11061:	cmp    eax,0x4
   11064:	jne    0x1103e
   11066:	cmp    edx,esi
   11068:	jne    0x1103e
   1106a:	pop    esi
   1106b:	pop    ebp
   1106c:	ret    0x8
   1106f:	int3   
   11070:	int3   
   11071:	int3   
   11072:	int3   
   11073:	int3   
   11074:	mov    edi,edi
   11076:	push   ebp
   11077:	mov    ebp,esp
   11079:	mov    eax,DWORD PTR [ebp+0x8]
   1107c:	mov    edx,DWORD PTR ds:0x782b0
   11082:	jmp    0x11086
   11084:	mov    eax,ecx
   11086:	mov    ecx,DWORD PTR [eax+0x8]
   11089:	cmp    ecx,edx
   1108b:	jne    0x11084
   1108d:	pop    ebp
   1108e:	ret    0x4
   11091:	int3   
   11092:	int3   
   11093:	int3   
   11094:	int3   
   11095:	int3   
   11096:	mov    edi,edi
   11098:	push   ebp
   11099:	mov    ebp,esp
   1109b:	mov    eax,DWORD PTR [ebp+0x8]
   1109e:	mov    edx,DWORD PTR ds:0x782b0
   110a4:	jmp    0x110a8
   110a6:	mov    eax,ecx
   110a8:	mov    ecx,DWORD PTR [eax]
   110aa:	cmp    ecx,edx
   110ac:	jne    0x110a6
   110ae:	pop    ebp
   110af:	ret    0x4
   110b2:	int3   
   110b3:	int3   
   110b4:	int3   
   110b5:	int3   
   110b6:	int3   
   110b7:	int3   
   110b8:	mov    edi,edi
   110ba:	push   ebp
   110bb:	mov    ebp,esp
   110bd:	mov    eax,DWORD PTR [ebp+0x8]
   110c0:	mov    edx,DWORD PTR ds:0x782b4
   110c6:	jmp    0x110ca
   110c8:	mov    eax,ecx
   110ca:	mov    ecx,DWORD PTR [eax+0x8]
   110cd:	cmp    ecx,edx
   110cf:	jne    0x110c8
   110d1:	pop    ebp
   110d2:	ret    0x4
   110d5:	int3   
   110d6:	int3   
   110d7:	int3   
   110d8:	int3   
   110d9:	int3   
   110da:	mov    edi,edi
   110dc:	push   ebp
   110dd:	mov    ebp,esp
   110df:	mov    eax,DWORD PTR [ebp+0x8]
   110e2:	mov    edx,DWORD PTR ds:0x782b4
   110e8:	jmp    0x110ec
   110ea:	mov    eax,ecx
   110ec:	mov    ecx,DWORD PTR [eax]
   110ee:	cmp    ecx,edx
   110f0:	jne    0x110ea
   110f2:	pop    ebp
   110f3:	ret    0x4
   110f6:	int3   
   110f7:	int3   
   110f8:	int3   
   110f9:	int3   
   110fa:	int3   
   110fb:	int3   
   110fc:	mov    edi,edi
   110fe:	push   ebp
   110ff:	mov    ebp,esp
   11101:	mov    eax,DWORD PTR [ebp+0x8]
   11104:	mov    edx,DWORD PTR ds:0x782b8
   1110a:	jmp    0x1110e
   1110c:	mov    eax,ecx
   1110e:	mov    ecx,DWORD PTR [eax+0x8]
   11111:	cmp    ecx,edx
   11113:	jne    0x1110c
   11115:	pop    ebp
   11116:	ret    0x4
   11119:	int3   
   1111a:	int3   
   1111b:	int3   
   1111c:	int3   
   1111d:	int3   
   1111e:	mov    edi,edi
   11120:	push   ebp
   11121:	mov    ebp,esp
   11123:	mov    eax,DWORD PTR [ebp+0x8]
   11126:	mov    edx,DWORD PTR ds:0x782b8
   1112c:	jmp    0x11130
   1112e:	mov    eax,ecx
   11130:	mov    ecx,DWORD PTR [eax]
   11132:	cmp    ecx,edx
   11134:	jne    0x1112e
   11136:	pop    ebp
   11137:	ret    0x4
   1113a:	int3   
   1113b:	int3   
   1113c:	int3   
   1113d:	int3   
   1113e:	int3   
   1113f:	int3   
   11140:	mov    edi,edi
   11142:	push   esi
   11143:	mov    esi,ecx
   11145:	mov    ecx,DWORD PTR [esi]
   11147:	cmp    DWORD PTR [ecx+0x14],0x0
   1114b:	jne    0x1115a
   1114d:	mov    eax,DWORD PTR [ecx+0x4]
   11150:	cmp    DWORD PTR [eax+0x4],ecx
   11153:	jne    0x1115a
   11155:	mov    eax,DWORD PTR [ecx+0x8]
   11158:	jmp    0x11177
   1115a:	mov    eax,DWORD PTR [ecx]
   1115c:	cmp    eax,DWORD PTR ds:0x782b0
   11162:	je     0x11170
   11164:	push   eax
   11165:	call   0x11074
   1116a:	jmp    0x11177
   1116c:	mov    DWORD PTR [esi],eax
   1116e:	mov    ecx,eax
   11170:	mov    eax,DWORD PTR [ecx+0x4]
   11173:	cmp    ecx,DWORD PTR [eax]
   11175:	je     0x1116c
   11177:	mov    DWORD PTR [esi],eax
   11179:	pop    esi
   1117a:	ret    
   1117b:	int3   
   1117c:	int3   
   1117d:	int3   
   1117e:	int3   
   1117f:	int3   
   11180:	mov    edi,edi
   11182:	push   esi
   11183:	mov    esi,ecx
   11185:	mov    ecx,DWORD PTR [esi]
   11187:	mov    eax,DWORD PTR [ecx+0x8]
   1118a:	cmp    eax,DWORD PTR ds:0x782b0
   11190:	je     0x1119e
   11192:	push   eax
   11193:	call   0x11096
   11198:	jmp    0x111ad
   1119a:	mov    DWORD PTR [esi],eax
   1119c:	mov    ecx,eax
   1119e:	mov    eax,DWORD PTR [ecx+0x4]
   111a1:	cmp    ecx,DWORD PTR [eax+0x8]
   111a4:	je     0x1119a
   111a6:	mov    ecx,DWORD PTR [esi]
   111a8:	cmp    DWORD PTR [ecx+0x8],eax
   111ab:	je     0x111af
   111ad:	mov    DWORD PTR [esi],eax
   111af:	pop    esi
   111b0:	ret    
   111b1:	int3   
   111b2:	int3   
   111b3:	int3   
   111b4:	int3   
   111b5:	int3   
   111b6:	mov    edi,edi
   111b8:	push   ebp
   111b9:	mov    ebp,esp
   111bb:	mov    edx,DWORD PTR [ebp+0x8]
   111be:	mov    eax,DWORD PTR [edx+0x8]
   111c1:	push   esi
   111c2:	mov    esi,DWORD PTR [eax]
   111c4:	mov    DWORD PTR [edx+0x8],esi
   111c7:	mov    esi,DWORD PTR [eax]
   111c9:	cmp    esi,DWORD PTR ds:0x782bc
   111cf:	je     0x111d4
   111d1:	mov    DWORD PTR [esi+0x4],edx
   111d4:	mov    esi,DWORD PTR [edx+0x4]
   111d7:	mov    DWORD PTR [eax+0x4],esi
   111da:	mov    ecx,DWORD PTR [ecx+0x4]
   111dd:	pop    esi
   111de:	cmp    edx,DWORD PTR [ecx+0x4]
   111e1:	jne    0x111e8
   111e3:	mov    DWORD PTR [ecx+0x4],eax
   111e6:	jmp    0x111f6
   111e8:	mov    ecx,DWORD PTR [edx+0x4]
   111eb:	cmp    edx,DWORD PTR [ecx]
   111ed:	jne    0x111f3
   111ef:	mov    DWORD PTR [ecx],eax
   111f1:	jmp    0x111f6
   111f3:	mov    DWORD PTR [ecx+0x8],eax
   111f6:	mov    DWORD PTR [eax],edx
   111f8:	mov    DWORD PTR [edx+0x4],eax
   111fb:	pop    ebp
   111fc:	ret    0x4
   111ff:	int3   
   11200:	int3   
   11201:	int3   
   11202:	int3   
   11203:	int3   
   11204:	mov    edi,edi
   11206:	push   ebp
   11207:	mov    ebp,esp
   11209:	mov    eax,DWORD PTR [ebp+0x8]
   1120c:	mov    edx,DWORD PTR ds:0x782bc
   11212:	jmp    0x11216
   11214:	mov    eax,ecx
   11216:	mov    ecx,DWORD PTR [eax+0x8]
   11219:	cmp    ecx,edx
   1121b:	jne    0x11214
   1121d:	pop    ebp
   1121e:	ret    0x4
   11221:	int3   
   11222:	int3   
   11223:	int3   
   11224:	int3   
   11225:	int3   
   11226:	mov    edi,edi
   11228:	push   ebp
   11229:	mov    ebp,esp
   1122b:	mov    edx,DWORD PTR [ebp+0x8]
   1122e:	mov    eax,DWORD PTR [edx]
   11230:	push   esi
   11231:	mov    esi,DWORD PTR [eax+0x8]
   11234:	mov    DWORD PTR [edx],esi
   11236:	mov    esi,DWORD PTR [eax+0x8]
   11239:	cmp    esi,DWORD PTR ds:0x782bc
   1123f:	je     0x11244
   11241:	mov    DWORD PTR [esi+0x4],edx
   11244:	mov    esi,DWORD PTR [edx+0x4]
   11247:	mov    DWORD PTR [eax+0x4],esi
   1124a:	mov    ecx,DWORD PTR [ecx+0x4]
   1124d:	pop    esi
   1124e:	cmp    edx,DWORD PTR [ecx+0x4]
   11251:	jne    0x11258
   11253:	mov    DWORD PTR [ecx+0x4],eax
   11256:	jmp    0x11267
   11258:	mov    ecx,DWORD PTR [edx+0x4]
   1125b:	cmp    edx,DWORD PTR [ecx+0x8]
   1125e:	jne    0x11265
   11260:	mov    DWORD PTR [ecx+0x8],eax
   11263:	jmp    0x11267
   11265:	mov    DWORD PTR [ecx],eax
   11267:	mov    DWORD PTR [eax+0x8],edx
   1126a:	mov    DWORD PTR [edx+0x4],eax
   1126d:	pop    ebp
   1126e:	ret    0x4
   11271:	int3   
   11272:	int3   
   11273:	int3   
   11274:	int3   
   11275:	int3   
   11276:	mov    edi,edi
   11278:	push   esi
   11279:	mov    esi,ecx
   1127b:	mov    ecx,DWORD PTR [esi]
   1127d:	cmp    DWORD PTR [ecx+0x58],0x0
   11281:	jne    0x11290
   11283:	mov    eax,DWORD PTR [ecx+0x4]
   11286:	cmp    DWORD PTR [eax+0x4],ecx
   11289:	jne    0x11290
   1128b:	mov    eax,DWORD PTR [ecx+0x8]
   1128e:	jmp    0x112ad
   11290:	mov    eax,DWORD PTR [ecx]
   11292:	cmp    eax,DWORD PTR ds:0x782bc
   11298:	je     0x112a6
   1129a:	push   eax
   1129b:	call   0x11204
   112a0:	jmp    0x112ad
   112a2:	mov    DWORD PTR [esi],eax
   112a4:	mov    ecx,eax
   112a6:	mov    eax,DWORD PTR [ecx+0x4]
   112a9:	cmp    ecx,DWORD PTR [eax]
   112ab:	je     0x112a2
   112ad:	mov    DWORD PTR [esi],eax
   112af:	pop    esi
   112b0:	ret    
   112b1:	int3   
   112b2:	int3   
   112b3:	int3   
   112b4:	int3   
   112b5:	int3   
   112b6:	mov    edi,edi
   112b8:	push   ebp
   112b9:	mov    ebp,esp
   112bb:	mov    eax,DWORD PTR [ebp+0x8]
   112be:	mov    edx,DWORD PTR ds:0x782c0
   112c4:	jmp    0x112c8
   112c6:	mov    eax,ecx
   112c8:	mov    ecx,DWORD PTR [eax+0x8]
   112cb:	cmp    ecx,edx
   112cd:	jne    0x112c6
   112cf:	pop    ebp
   112d0:	ret    0x4
   112d3:	int3   
   112d4:	int3   
   112d5:	int3   
   112d6:	int3   
   112d7:	int3   
   112d8:	mov    edi,edi
   112da:	push   ebp
   112db:	mov    ebp,esp
   112dd:	mov    eax,DWORD PTR [ebp+0x8]
   112e0:	mov    edx,DWORD PTR ds:0x782c0
   112e6:	jmp    0x112ea
   112e8:	mov    eax,ecx
   112ea:	mov    ecx,DWORD PTR [eax]
   112ec:	cmp    ecx,edx
   112ee:	jne    0x112e8
   112f0:	pop    ebp
   112f1:	ret    0x4
   112f4:	int3   
   112f5:	int3   
   112f6:	int3   
   112f7:	int3   
   112f8:	int3   
   112f9:	int3   
   112fa:	mov    edi,edi
   112fc:	push   esi
   112fd:	mov    esi,ecx
   112ff:	mov    ecx,DWORD PTR [esi]
   11301:	cmp    DWORD PTR [ecx+0x1c],0x0
   11305:	jne    0x11314
   11307:	mov    eax,DWORD PTR [ecx+0x4]
   1130a:	cmp    DWORD PTR [eax+0x4],ecx
   1130d:	jne    0x11314
   1130f:	mov    eax,DWORD PTR [ecx+0x8]
   11312:	jmp    0x11331
   11314:	mov    eax,DWORD PTR [ecx]
   11316:	cmp    eax,DWORD PTR ds:0x782c0
   1131c:	je     0x1132a
   1131e:	push   eax
   1131f:	call   0x112b6
   11324:	jmp    0x11331
   11326:	mov    DWORD PTR [esi],eax
   11328:	mov    ecx,eax
   1132a:	mov    eax,DWORD PTR [ecx+0x4]
   1132d:	cmp    ecx,DWORD PTR [eax]
   1132f:	je     0x11326
   11331:	mov    DWORD PTR [esi],eax
   11333:	pop    esi
   11334:	ret    
   11335:	int3   
   11336:	int3   
   11337:	int3   
   11338:	int3   
   11339:	int3   
   1133a:	mov    edi,edi
   1133c:	push   ebp
   1133d:	mov    ebp,esp
   1133f:	mov    eax,DWORD PTR [ebp+0x8]
   11342:	mov    edx,DWORD PTR ds:0x782c4
   11348:	jmp    0x1134c
   1134a:	mov    eax,ecx
   1134c:	mov    ecx,DWORD PTR [eax+0x8]
   1134f:	cmp    ecx,edx
   11351:	jne    0x1134a
   11353:	pop    ebp
   11354:	ret    0x4
   11357:	int3   
   11358:	int3   
   11359:	int3   
   1135a:	int3   
   1135b:	int3   
   1135c:	mov    edi,edi
   1135e:	push   ebp
   1135f:	mov    ebp,esp
   11361:	mov    eax,DWORD PTR [ebp+0x8]
   11364:	mov    edx,DWORD PTR ds:0x782c4
   1136a:	jmp    0x1136e
   1136c:	mov    eax,ecx
   1136e:	mov    ecx,DWORD PTR [eax]
   11370:	cmp    ecx,edx
   11372:	jne    0x1136c
   11374:	pop    ebp
   11375:	ret    0x4
   11378:	int3   
   11379:	int3   
   1137a:	int3   
   1137b:	int3   
   1137c:	int3   
   1137d:	int3   
   1137e:	mov    edi,edi
   11380:	push   esi
   11381:	mov    esi,ecx
   11383:	mov    ecx,DWORD PTR [esi]
   11385:	cmp    DWORD PTR [ecx+0x14],0x0
   11389:	jne    0x11398
   1138b:	mov    eax,DWORD PTR [ecx+0x4]
   1138e:	cmp    DWORD PTR [eax+0x4],ecx
   11391:	jne    0x11398
   11393:	mov    eax,DWORD PTR [ecx+0x8]
   11396:	jmp    0x113b5
   11398:	mov    eax,DWORD PTR [ecx]
   1139a:	cmp    eax,DWORD PTR ds:0x782c4
   113a0:	je     0x113ae
   113a2:	push   eax
   113a3:	call   0x1133a
   113a8:	jmp    0x113b5
   113aa:	mov    DWORD PTR [esi],eax
   113ac:	mov    ecx,eax
   113ae:	mov    eax,DWORD PTR [ecx+0x4]
   113b1:	cmp    ecx,DWORD PTR [eax]
   113b3:	je     0x113aa
   113b5:	mov    DWORD PTR [esi],eax
   113b7:	pop    esi
   113b8:	ret    
   113b9:	int3   
   113ba:	int3   
   113bb:	int3   
   113bc:	int3   
   113bd:	int3   
   113be:	mov    edi,edi
   113c0:	push   esi
   113c1:	mov    esi,ecx
   113c3:	mov    ecx,DWORD PTR [esi]
   113c5:	cmp    DWORD PTR [ecx+0x60],0x0
   113c9:	jne    0x113d8
   113cb:	mov    eax,DWORD PTR [ecx+0x4]
   113ce:	cmp    DWORD PTR [eax+0x4],ecx
   113d1:	jne    0x113d8
   113d3:	mov    eax,DWORD PTR [ecx+0x8]
   113d6:	jmp    0x113f5
   113d8:	mov    eax,DWORD PTR [ecx]
   113da:	cmp    eax,DWORD PTR ds:0x782b8
   113e0:	je     0x113ee
   113e2:	push   eax
   113e3:	call   0x110fc
   113e8:	jmp    0x113f5
   113ea:	mov    DWORD PTR [esi],eax
   113ec:	mov    ecx,eax
   113ee:	mov    eax,DWORD PTR [ecx+0x4]
   113f1:	cmp    ecx,DWORD PTR [eax]
   113f3:	je     0x113ea
   113f5:	mov    DWORD PTR [esi],eax
   113f7:	pop    esi
   113f8:	ret    
   113f9:	int3   
   113fa:	int3   
   113fb:	int3   
   113fc:	int3   
   113fd:	int3   
   113fe:	mov    edi,edi
   11400:	push   esi
   11401:	mov    esi,ecx
   11403:	mov    ecx,DWORD PTR [esi]
   11405:	mov    eax,DWORD PTR [ecx+0x8]
   11408:	cmp    eax,DWORD PTR ds:0x782c0
   1140e:	je     0x1141c
   11410:	push   eax
   11411:	call   0x112d8
   11416:	jmp    0x1142b
   11418:	mov    DWORD PTR [esi],eax
   1141a:	mov    ecx,eax
   1141c:	mov    eax,DWORD PTR [ecx+0x4]
   1141f:	cmp    ecx,DWORD PTR [eax+0x8]
   11422:	je     0x11418
   11424:	mov    ecx,DWORD PTR [esi]
   11426:	cmp    DWORD PTR [ecx+0x8],eax
   11429:	je     0x1142d
   1142b:	mov    DWORD PTR [esi],eax
   1142d:	pop    esi
   1142e:	ret    
   1142f:	int3   
   11430:	int3   
   11431:	int3   
   11432:	int3   
   11433:	int3   
   11434:	mov    edi,edi
   11436:	push   esi
   11437:	mov    esi,ecx
   11439:	mov    ecx,DWORD PTR [esi]
   1143b:	mov    eax,DWORD PTR [ecx+0x8]
   1143e:	cmp    eax,DWORD PTR ds:0x782c4
   11444:	je     0x11452
   11446:	push   eax
   11447:	call   0x1135c
   1144c:	jmp    0x11461
   1144e:	mov    DWORD PTR [esi],eax
   11450:	mov    ecx,eax
   11452:	mov    eax,DWORD PTR [ecx+0x4]
   11455:	cmp    ecx,DWORD PTR [eax+0x8]
   11458:	je     0x1144e
   1145a:	mov    ecx,DWORD PTR [esi]
   1145c:	cmp    DWORD PTR [ecx+0x8],eax
   1145f:	je     0x11463
   11461:	mov    DWORD PTR [esi],eax
   11463:	pop    esi
   11464:	ret    
   11465:	int3   
   11466:	int3   
   11467:	int3   
   11468:	int3   
   11469:	int3   
   1146a:	mov    edi,edi
   1146c:	push   ebp
   1146d:	mov    ebp,esp
   1146f:	mov    eax,DWORD PTR [ebp+0x8]
   11472:	mov    edx,DWORD PTR ds:0x782cc
   11478:	jmp    0x1147c
   1147a:	mov    eax,ecx
   1147c:	mov    ecx,DWORD PTR [eax+0x8]
   1147f:	cmp    ecx,edx
   11481:	jne    0x1147a
   11483:	pop    ebp
   11484:	ret    0x4
   11487:	int3   
   11488:	int3   
   11489:	int3   
   1148a:	int3   
   1148b:	int3   
   1148c:	mov    edi,edi
   1148e:	push   ebp
   1148f:	mov    ebp,esp
   11491:	push   ecx
   11492:	push   ecx
   11493:	mov    eax,DWORD PTR [ebp+0x8]
   11496:	mov    DWORD PTR [ebp-0x4],eax
   11499:	lea    ecx,[eax+0x2]
   1149c:	mov    dx,WORD PTR [eax]
   1149f:	inc    eax
   114a0:	inc    eax
   114a1:	test   dx,dx
   114a4:	jne    0x1149c
   114a6:	sub    eax,ecx
   114a8:	sar    eax,1
   114aa:	add    eax,eax
   114ac:	mov    WORD PTR [ebp-0x8],ax
   114b0:	mov    WORD PTR [ebp-0x6],ax
   114b4:	lea    eax,[ebp-0x8]
   114b7:	push   eax
   114b8:	call   DWORD PTR ds:0x1f02c
   114be:	leave  
   114bf:	ret    0x4
   114c2:	int3   
   114c3:	int3   
   114c4:	int3   
   114c5:	int3   
   114c6:	int3   
   114c7:	int3   
   114c8:	mov    edi,edi
   114ca:	push   ebp
   114cb:	mov    ebp,esp
   114cd:	mov    eax,DWORD PTR [ebp+0x8]
   114d0:	test   eax,eax
   114d2:	je     0x114e1
   114d4:	mov    ecx,DWORD PTR [ebp+0xc]
   114d7:	mov    edx,DWORD PTR [ecx]
   114d9:	mov    DWORD PTR [eax],edx
   114db:	mov    ecx,DWORD PTR [ecx+0x4]
   114de:	mov    DWORD PTR [eax+0x4],ecx
   114e1:	pop    ebp
   114e2:	ret    0x8
   114e5:	int3   
   114e6:	int3   
   114e7:	int3   
   114e8:	int3   
   114e9:	int3   
   114ea:	mov    edi,edi
   114ec:	push   ebp
   114ed:	mov    ebp,esp
   114ef:	push   esi
   114f0:	mov    esi,ecx
   114f2:	call   0x129b4
   114f7:	test   BYTE PTR [ebp+0x8],0x1
   114fb:	je     0x11504
   114fd:	push   esi
   114fe:	call   0x1da56
   11503:	pop    ecx
   11504:	mov    eax,esi
   11506:	pop    esi
   11507:	pop    ebp
   11508:	ret    0x4
   1150b:	int3   
   1150c:	int3   
   1150d:	int3   
   1150e:	int3   
   1150f:	int3   
   11510:	test   BYTE PTR ds:0x782d4,0x1
   11517:	jne    0x1152f
   11519:	or     DWORD PTR ds:0x782d4,0x1
   11520:	push   0x1df4c
   11525:	call   0x1148c
   1152a:	mov    ds:0x782d0,eax
   1152f:	mov    eax,ds:0x782d0
   11534:	ret    
   11535:	int3   
   11536:	int3   
   11537:	int3   
   11538:	int3   
   11539:	int3   
   1153a:	test   BYTE PTR ds:0x782dc,0x1
   11541:	jne    0x11559
   11543:	or     DWORD PTR ds:0x782dc,0x1
   1154a:	push   0x1df68
   1154f:	call   0x1148c
   11554:	mov    ds:0x782d8,eax
   11559:	mov    eax,ds:0x782d8
   1155e:	ret    
   1155f:	int3   
   11560:	int3   
   11561:	int3   
   11562:	int3   
   11563:	int3   
   11564:	test   BYTE PTR ds:0x782e4,0x1
   1156b:	jne    0x11583
   1156d:	or     DWORD PTR ds:0x782e4,0x1
   11574:	push   0x1dfa0
   11579:	call   0x1148c
   1157e:	mov    ds:0x782e0,eax
   11583:	mov    eax,ds:0x782e0
   11588:	ret    
   11589:	int3   
   1158a:	int3   
   1158b:	int3   
   1158c:	int3   
   1158d:	int3   
   1158e:	test   BYTE PTR ds:0x782ec,0x1
   11595:	jne    0x115ad
   11597:	or     DWORD PTR ds:0x782ec,0x1
   1159e:	push   0x1dfc2
   115a3:	call   0x1148c
   115a8:	mov    ds:0x782e8,eax
   115ad:	mov    eax,ds:0x782e8
   115b2:	ret    
   115b3:	int3   
   115b4:	int3   
   115b5:	int3   
   115b6:	int3   
   115b7:	int3   
   115b8:	test   BYTE PTR ds:0x782f4,0x1
   115bf:	jne    0x115d7
   115c1:	or     DWORD PTR ds:0x782f4,0x1
   115c8:	push   0x1e002
   115cd:	call   0x1148c
   115d2:	mov    ds:0x782f0,eax
   115d7:	mov    eax,ds:0x782f0
   115dc:	ret    
   115dd:	int3   
   115de:	int3   
   115df:	int3   
   115e0:	int3   
   115e1:	int3   
   115e2:	test   BYTE PTR ds:0x782fc,0x1
   115e9:	jne    0x11601
   115eb:	or     DWORD PTR ds:0x782fc,0x1
   115f2:	push   0x1e018
   115f7:	call   0x1148c
   115fc:	mov    ds:0x782f8,eax
   11601:	mov    eax,ds:0x782f8
   11606:	ret    
   11607:	int3   
   11608:	int3   
   11609:	int3   
   1160a:	int3   
   1160b:	int3   
   1160c:	test   BYTE PTR ds:0x78304,0x1
   11613:	jne    0x1162b
   11615:	or     DWORD PTR ds:0x78304,0x1
   1161c:	push   0x1e04c
   11621:	call   0x1148c
   11626:	mov    ds:0x78300,eax
   1162b:	mov    eax,ds:0x78300
   11630:	ret    
   11631:	int3   
   11632:	int3   
   11633:	int3   
   11634:	int3   
   11635:	int3   
   11636:	test   BYTE PTR ds:0x7830c,0x1
   1163d:	jne    0x11655
   1163f:	or     DWORD PTR ds:0x7830c,0x1
   11646:	push   0x1e07e
   1164b:	call   0x1148c
   11650:	mov    ds:0x78308,eax
   11655:	mov    eax,ds:0x78308
   1165a:	ret    
   1165b:	int3   
   1165c:	int3   
   1165d:	int3   
   1165e:	int3   
   1165f:	int3   
   11660:	test   BYTE PTR ds:0x78314,0x1
   11667:	jne    0x1167f
   11669:	or     DWORD PTR ds:0x78314,0x1
   11670:	push   0x1e092
   11675:	call   0x1148c
   1167a:	mov    ds:0x78310,eax
   1167f:	mov    eax,ds:0x78310
   11684:	ret    
   11685:	int3   
   11686:	int3   
   11687:	int3   
   11688:	int3   
   11689:	int3   
   1168a:	test   BYTE PTR ds:0x7831c,0x1
   11691:	jne    0x116a9
   11693:	or     DWORD PTR ds:0x7831c,0x1
   1169a:	push   0x1e0aa
   1169f:	call   0x1148c
   116a4:	mov    ds:0x78318,eax
   116a9:	mov    eax,ds:0x78318
   116ae:	ret    
   116af:	int3   
   116b0:	int3   
   116b1:	int3   
   116b2:	int3   
   116b3:	int3   
   116b4:	test   BYTE PTR ds:0x78324,0x1
   116bb:	jne    0x116d3
   116bd:	or     DWORD PTR ds:0x78324,0x1
   116c4:	push   0x1e0c6
   116c9:	call   0x1148c
   116ce:	mov    ds:0x78320,eax
   116d3:	mov    eax,ds:0x78320
   116d8:	ret    
   116d9:	int3   
   116da:	int3   
   116db:	int3   
   116dc:	int3   
   116dd:	int3   
   116de:	test   BYTE PTR ds:0x7832c,0x1
   116e5:	jne    0x116fd
   116e7:	or     DWORD PTR ds:0x7832c,0x1
   116ee:	push   0x1e100
   116f3:	call   0x1148c
   116f8:	mov    ds:0x78328,eax
   116fd:	mov    eax,ds:0x78328
   11702:	ret    
   11703:	int3   
   11704:	int3   
   11705:	int3   
   11706:	int3   
   11707:	int3   
   11708:	test   BYTE PTR ds:0x78334,0x1
   1170f:	jne    0x11727
   11711:	or     DWORD PTR ds:0x78334,0x1
   11718:	push   0x1e11a
   1171d:	call   0x1148c
   11722:	mov    ds:0x78330,eax
   11727:	mov    eax,ds:0x78330
   1172c:	ret    
   1172d:	int3   
   1172e:	int3   
   1172f:	int3   
   11730:	int3   
   11731:	int3   
   11732:	test   BYTE PTR ds:0x7833c,0x1
   11739:	jne    0x11751
   1173b:	or     DWORD PTR ds:0x7833c,0x1
   11742:	push   0x1e13c
   11747:	call   0x1148c
   1174c:	mov    ds:0x78338,eax
   11751:	mov    eax,ds:0x78338
   11756:	ret    
   11757:	int3   
   11758:	int3   
   11759:	int3   
   1175a:	int3   
   1175b:	int3   
   1175c:	test   BYTE PTR ds:0x78344,0x1
   11763:	jne    0x1177b
   11765:	or     DWORD PTR ds:0x78344,0x1
   1176c:	push   0x1e176
   11771:	call   0x1148c
   11776:	mov    ds:0x78340,eax
   1177b:	mov    eax,ds:0x78340
   11780:	ret    
   11781:	int3   
   11782:	int3   
   11783:	int3   
   11784:	int3   
   11785:	int3   
   11786:	test   BYTE PTR ds:0x7834c,0x1
   1178d:	jne    0x117a5
   1178f:	or     DWORD PTR ds:0x7834c,0x1
   11796:	push   0x1e19c
   1179b:	call   0x1148c
   117a0:	mov    ds:0x78348,eax
   117a5:	mov    eax,ds:0x78348
   117aa:	ret    
   117ab:	int3   
   117ac:	int3   
   117ad:	int3   
   117ae:	int3   
   117af:	int3   
   117b0:	test   BYTE PTR ds:0x78354,0x1
   117b7:	jne    0x117cf
   117b9:	or     DWORD PTR ds:0x78354,0x1
   117c0:	push   0x1e1cc
   117c5:	call   0x1148c
   117ca:	mov    ds:0x78350,eax
   117cf:	mov    eax,ds:0x78350
   117d4:	ret    
   117d5:	int3   
   117d6:	int3   
   117d7:	int3   
   117d8:	int3   
   117d9:	int3   
   117da:	test   BYTE PTR ds:0x7835c,0x1
   117e1:	jne    0x117f9
   117e3:	or     DWORD PTR ds:0x7835c,0x1
   117ea:	push   0x1e1fe
   117ef:	call   0x1148c
   117f4:	mov    ds:0x78358,eax
   117f9:	mov    eax,ds:0x78358
   117fe:	ret    
   117ff:	int3   
   11800:	int3   
   11801:	int3   
   11802:	int3   
   11803:	int3   
   11804:	test   BYTE PTR ds:0x78364,0x1
   1180b:	jne    0x11823
   1180d:	or     DWORD PTR ds:0x78364,0x1
   11814:	push   0x1e20e
   11819:	call   0x1148c
   1181e:	mov    ds:0x78360,eax
   11823:	mov    eax,ds:0x78360
   11828:	ret    
   11829:	int3   
   1182a:	int3   
   1182b:	int3   
   1182c:	int3   
   1182d:	int3   
   1182e:	test   BYTE PTR ds:0x7836c,0x1
   11835:	jne    0x1184d
   11837:	or     DWORD PTR ds:0x7836c,0x1
   1183e:	push   0x1e22a
   11843:	call   0x1148c
   11848:	mov    ds:0x78368,eax
   1184d:	mov    eax,ds:0x78368
   11852:	ret    
   11853:	int3   
   11854:	int3   
   11855:	int3   
   11856:	int3   
   11857:	int3   
   11858:	test   BYTE PTR ds:0x78374,0x1
   1185f:	jne    0x11877
   11861:	or     DWORD PTR ds:0x78374,0x1
   11868:	push   0x1e23e
   1186d:	call   0x1148c
   11872:	mov    ds:0x78370,eax
   11877:	mov    eax,ds:0x78370
   1187c:	ret    
   1187d:	int3   
   1187e:	int3   
   1187f:	int3   
   11880:	int3   
   11881:	int3   
   11882:	test   BYTE PTR ds:0x7837c,0x1
   11889:	jne    0x118a1
   1188b:	or     DWORD PTR ds:0x7837c,0x1
   11892:	push   0x1e25c
   11897:	call   0x1148c
   1189c:	mov    ds:0x78378,eax
   118a1:	mov    eax,ds:0x78378
   118a6:	ret    
   118a7:	int3   
   118a8:	int3   
   118a9:	int3   
   118aa:	int3   
   118ab:	int3   
   118ac:	test   BYTE PTR ds:0x78384,0x1
   118b3:	jne    0x118cb
   118b5:	or     DWORD PTR ds:0x78384,0x1
   118bc:	push   0x1e276
   118c1:	call   0x1148c
   118c6:	mov    ds:0x78380,eax
   118cb:	mov    eax,ds:0x78380
   118d0:	ret    
   118d1:	int3   
   118d2:	int3   
   118d3:	int3   
   118d4:	int3   
   118d5:	int3   
   118d6:	test   BYTE PTR ds:0x7838c,0x1
   118dd:	jne    0x118f5
   118df:	or     DWORD PTR ds:0x7838c,0x1
   118e6:	push   0x1e28e
   118eb:	call   0x1148c
   118f0:	mov    ds:0x78388,eax
   118f5:	mov    eax,ds:0x78388
   118fa:	ret    
   118fb:	int3   
   118fc:	int3   
   118fd:	int3   
   118fe:	int3   
   118ff:	int3   
   11900:	test   BYTE PTR ds:0x78394,0x1
   11907:	jne    0x1191f
   11909:	or     DWORD PTR ds:0x78394,0x1
   11910:	push   0x1e2ac
   11915:	call   0x1148c
   1191a:	mov    ds:0x78390,eax
   1191f:	mov    eax,ds:0x78390
   11924:	ret    
   11925:	int3   
   11926:	int3   
   11927:	int3   
   11928:	int3   
   11929:	int3   
   1192a:	test   BYTE PTR ds:0x7839c,0x1
   11931:	jne    0x11949
   11933:	or     DWORD PTR ds:0x7839c,0x1
   1193a:	push   0x1e2cc
   1193f:	call   0x1148c
   11944:	mov    ds:0x78398,eax
   11949:	mov    eax,ds:0x78398
   1194e:	ret    
   1194f:	int3   
   11950:	int3   
   11951:	int3   
   11952:	int3   
   11953:	int3   
   11954:	test   BYTE PTR ds:0x783a4,0x1
   1195b:	jne    0x11973
   1195d:	or     DWORD PTR ds:0x783a4,0x1
   11964:	push   0x1e2ec
   11969:	call   0x1148c
   1196e:	mov    ds:0x783a0,eax
   11973:	mov    eax,ds:0x783a0
   11978:	ret    
   11979:	int3   
   1197a:	int3   
   1197b:	int3   
   1197c:	int3   
   1197d:	int3   
   1197e:	test   BYTE PTR ds:0x783ac,0x1
   11985:	jne    0x1199d
   11987:	or     DWORD PTR ds:0x783ac,0x1
   1198e:	push   0x1e30c
   11993:	call   0x1148c
   11998:	mov    ds:0x783a8,eax
   1199d:	mov    eax,ds:0x783a8
   119a2:	ret    
   119a3:	int3   
   119a4:	int3   
   119a5:	int3   
   119a6:	int3   
   119a7:	int3   
   119a8:	test   BYTE PTR ds:0x783b4,0x1
   119af:	jne    0x119c7
   119b1:	or     DWORD PTR ds:0x783b4,0x1
   119b8:	push   0x1e322
   119bd:	call   0x1148c
   119c2:	mov    ds:0x783b0,eax
   119c7:	mov    eax,ds:0x783b0
   119cc:	ret    
   119cd:	int3   
   119ce:	int3   
   119cf:	int3   
   119d0:	int3   
   119d1:	int3   
   119d2:	test   BYTE PTR ds:0x783bc,0x1
   119d9:	jne    0x119f1
   119db:	or     DWORD PTR ds:0x783bc,0x1
   119e2:	push   0x1e34c
   119e7:	call   0x1148c
   119ec:	mov    ds:0x783b8,eax
   119f1:	mov    eax,ds:0x783b8
   119f6:	ret    
   119f7:	int3   
   119f8:	int3   
   119f9:	int3   
   119fa:	int3   
   119fb:	int3   
   119fc:	test   BYTE PTR ds:0x783c4,0x1
   11a03:	jne    0x11a1b
   11a05:	or     DWORD PTR ds:0x783c4,0x1
   11a0c:	push   0x1e364
   11a11:	call   0x1148c
   11a16:	mov    ds:0x783c0,eax
   11a1b:	mov    eax,ds:0x783c0
   11a20:	ret    
   11a21:	int3   
   11a22:	int3   
   11a23:	int3   
   11a24:	int3   
   11a25:	int3   
   11a26:	test   BYTE PTR ds:0x783cc,0x1
   11a2d:	jne    0x11a45
   11a2f:	or     DWORD PTR ds:0x783cc,0x1
   11a36:	push   0x1e392
   11a3b:	call   0x1148c
   11a40:	mov    ds:0x783c8,eax
   11a45:	mov    eax,ds:0x783c8
   11a4a:	ret    
   11a4b:	int3   
   11a4c:	int3   
   11a4d:	int3   
   11a4e:	int3   
   11a4f:	int3   
   11a50:	test   BYTE PTR ds:0x783d4,0x1
   11a57:	jne    0x11a6f
   11a59:	or     DWORD PTR ds:0x783d4,0x1
   11a60:	push   0x1e3bc
   11a65:	call   0x1148c
   11a6a:	mov    ds:0x783d0,eax
   11a6f:	mov    eax,ds:0x783d0
   11a74:	ret    
   11a75:	int3   
   11a76:	int3   
   11a77:	int3   
   11a78:	int3   
   11a79:	int3   
   11a7a:	test   BYTE PTR ds:0x783dc,0x1
   11a81:	jne    0x11a99
   11a83:	or     DWORD PTR ds:0x783dc,0x1
   11a8a:	push   0x1e3da
   11a8f:	call   0x1148c
   11a94:	mov    ds:0x783d8,eax
   11a99:	mov    eax,ds:0x783d8
   11a9e:	ret    
   11a9f:	int3   
   11aa0:	int3   
   11aa1:	int3   
   11aa2:	int3   
   11aa3:	int3   
   11aa4:	test   BYTE PTR ds:0x783e4,0x1
   11aab:	jne    0x11ac3
   11aad:	or     DWORD PTR ds:0x783e4,0x1
   11ab4:	push   0x1e408
   11ab9:	call   0x1148c
   11abe:	mov    ds:0x783e0,eax
   11ac3:	mov    eax,ds:0x783e0
   11ac8:	ret    
   11ac9:	int3   
   11aca:	int3   
   11acb:	int3   
   11acc:	int3   
   11acd:	int3   
   11ace:	test   BYTE PTR ds:0x783ec,0x1
   11ad5:	jne    0x11aed
   11ad7:	or     DWORD PTR ds:0x783ec,0x1
   11ade:	push   0x1e42e
   11ae3:	call   0x1148c
   11ae8:	mov    ds:0x783e8,eax
   11aed:	mov    eax,ds:0x783e8
   11af2:	ret    
   11af3:	int3   
   11af4:	int3   
   11af5:	int3   
   11af6:	int3   
   11af7:	int3   
   11af8:	test   BYTE PTR ds:0x783f4,0x1
   11aff:	jne    0x11b17
   11b01:	or     DWORD PTR ds:0x783f4,0x1
   11b08:	push   0x1e44e
   11b0d:	call   0x1148c
   11b12:	mov    ds:0x783f0,eax
   11b17:	mov    eax,ds:0x783f0
   11b1c:	ret    
   11b1d:	int3   
   11b1e:	int3   
   11b1f:	int3   
   11b20:	int3   
   11b21:	int3   
   11b22:	test   BYTE PTR ds:0x783fc,0x1
   11b29:	jne    0x11b41
   11b2b:	or     DWORD PTR ds:0x783fc,0x1
   11b32:	push   0x1e478
   11b37:	call   0x1148c
   11b3c:	mov    ds:0x783f8,eax
   11b41:	mov    eax,ds:0x783f8
   11b46:	ret    
   11b47:	int3   
   11b48:	int3   
   11b49:	int3   
   11b4a:	int3   
   11b4b:	int3   
   11b4c:	test   BYTE PTR ds:0x78404,0x1
   11b53:	jne    0x11b6b
   11b55:	or     DWORD PTR ds:0x78404,0x1
   11b5c:	push   0x1e49c
   11b61:	call   0x1148c
   11b66:	mov    ds:0x78400,eax
   11b6b:	mov    eax,ds:0x78400
   11b70:	ret    
   11b71:	int3   
   11b72:	int3   
   11b73:	int3   
   11b74:	int3   
   11b75:	int3   
   11b76:	test   BYTE PTR ds:0x7840c,0x1
   11b7d:	jne    0x11b95
   11b7f:	or     DWORD PTR ds:0x7840c,0x1
   11b86:	push   0x1e4d2
   11b8b:	call   0x1148c
   11b90:	mov    ds:0x78408,eax
   11b95:	mov    eax,ds:0x78408
   11b9a:	ret    
   11b9b:	int3   
   11b9c:	int3   
   11b9d:	int3   
   11b9e:	int3   
   11b9f:	int3   
   11ba0:	call   0x11510
   11ba5:	test   eax,eax
   11ba7:	jne    0x11bac
   11ba9:	xor    eax,eax
   11bab:	ret    
   11bac:	call   0x1153a
   11bb1:	test   eax,eax
   11bb3:	je     0x11ba9
   11bb5:	call   0x11564
   11bba:	test   eax,eax
   11bbc:	je     0x11ba9
   11bbe:	call   0x1158e
   11bc3:	test   eax,eax
   11bc5:	je     0x11ba9
   11bc7:	call   0x115b8
   11bcc:	test   eax,eax
   11bce:	je     0x11ba9
   11bd0:	call   0x115e2
   11bd5:	test   eax,eax
   11bd7:	je     0x11ba9
   11bd9:	call   0x1160c
   11bde:	test   eax,eax
   11be0:	je     0x11ba9
   11be2:	call   0x11636
   11be7:	test   eax,eax
   11be9:	je     0x11ba9
   11beb:	call   0x11660
   11bf0:	test   eax,eax
   11bf2:	je     0x11ba9
   11bf4:	call   0x1168a
   11bf9:	test   eax,eax
   11bfb:	je     0x11ba9
   11bfd:	call   0x116b4
   11c02:	test   eax,eax
   11c04:	je     0x11ba9
   11c06:	call   0x116de
   11c0b:	test   eax,eax
   11c0d:	je     0x11ba9
   11c0f:	call   0x11708
   11c14:	test   eax,eax
   11c16:	je     0x11ba9
   11c18:	call   0x11732
   11c1d:	test   eax,eax
   11c1f:	je     0x11ba9
   11c21:	call   0x1175c
   11c26:	test   eax,eax
   11c28:	je     0x11ba9
   11c2e:	call   0x11786
   11c33:	test   eax,eax
   11c35:	je     0x11ba9
   11c3b:	call   0x117b0
   11c40:	test   eax,eax
   11c42:	je     0x11ba9
   11c48:	call   0x117da
   11c4d:	test   eax,eax
   11c4f:	je     0x11ba9
   11c55:	call   0x11804
   11c5a:	test   eax,eax
   11c5c:	je     0x11ba9
   11c62:	call   0x1182e
   11c67:	test   eax,eax
   11c69:	je     0x11ba9
   11c6f:	call   0x11858
   11c74:	test   eax,eax
   11c76:	je     0x11ba9
   11c7c:	call   0x11882
   11c81:	test   eax,eax
   11c83:	je     0x11ba9
   11c89:	call   0x118ac
   11c8e:	test   eax,eax
   11c90:	je     0x11ba9
   11c96:	call   0x118d6
   11c9b:	test   eax,eax
   11c9d:	je     0x11ba9
   11ca3:	call   0x11900
   11ca8:	test   eax,eax
   11caa:	je     0x11ba9
   11cb0:	call   0x1192a
   11cb5:	test   eax,eax
   11cb7:	je     0x11ba9
   11cbd:	call   0x11954
   11cc2:	test   eax,eax
   11cc4:	je     0x11ba9
   11cca:	call   0x1197e
   11ccf:	test   eax,eax
   11cd1:	je     0x11ba9
   11cd7:	call   0x119a8
   11cdc:	test   eax,eax
   11cde:	je     0x11ba9
   11ce4:	call   0x119d2
   11ce9:	test   eax,eax
   11ceb:	je     0x11ba9
   11cf1:	call   0x119fc
   11cf6:	test   eax,eax
   11cf8:	je     0x11ba9
   11cfe:	call   0x11a26
   11d03:	test   eax,eax
   11d05:	je     0x11ba9
   11d0b:	call   0x11a50
   11d10:	test   eax,eax
   11d12:	je     0x11ba9
   11d18:	call   0x11a7a
   11d1d:	test   eax,eax
   11d1f:	je     0x11ba9
   11d25:	call   0x11aa4
   11d2a:	test   eax,eax
   11d2c:	je     0x11ba9
   11d32:	call   0x11ace
   11d37:	test   eax,eax
   11d39:	je     0x11ba9
   11d3f:	call   0x11af8
   11d44:	test   eax,eax
   11d46:	je     0x11ba9
   11d4c:	call   0x11b22
   11d51:	test   eax,eax
   11d53:	je     0x11ba9
   11d59:	call   0x11b4c
   11d5e:	test   eax,eax
   11d60:	je     0x11ba9
   11d66:	call   0x11b76
   11d6b:	neg    eax
   11d6d:	sbb    eax,eax
   11d6f:	neg    eax
   11d71:	ret    
   11d72:	int3   
   11d73:	int3   
   11d74:	int3   
   11d75:	int3   
   11d76:	int3   
   11d77:	int3   
   11d78:	mov    edi,edi
   11d7a:	push   ebp
   11d7b:	mov    ebp,esp
   11d7d:	push   esi
   11d7e:	push   0x20
   11d80:	push   0x61737973
   11d85:	push   DWORD PTR [ebp+0x8]
   11d88:	push   0x1
   11d8a:	call   DWORD PTR ds:0x1f060
   11d90:	mov    esi,eax
   11d92:	test   esi,esi
   11d94:	jne    0x11da2
   11d96:	push   0xc000009a
   11d9b:	call   0x11804
   11da0:	call   eax
   11da2:	mov    eax,esi
   11da4:	pop    esi
   11da5:	pop    ebp
   11da6:	ret    
   11da7:	int3   
   11da8:	int3   
   11da9:	int3   
   11daa:	int3   
   11dab:	int3   
   11dac:	mov    edi,edi
   11dae:	push   esi
   11daf:	mov    esi,ecx
   11db1:	push   DWORD PTR [esi+0x38]
   11db4:	call   0x1da56
   11db9:	push   DWORD PTR [esi+0x18]
   11dbc:	call   0x1da56
   11dc1:	push   DWORD PTR [esi+0x10]
   11dc4:	call   0x1da56
   11dc9:	push   DWORD PTR [esi+0x8]
   11dcc:	call   0x1da56
   11dd1:	push   DWORD PTR [esi]
   11dd3:	call   0x1da56
   11dd8:	add    esp,0x14
   11ddb:	pop    esi
   11ddc:	ret    
   11ddd:	int3   
   11dde:	int3   
   11ddf:	int3   
   11de0:	int3   
   11de1:	int3   
   11de2:	mov    edi,edi
   11de4:	push   ebp
   11de5:	mov    ebp,esp
   11de7:	mov    eax,ecx
   11de9:	mov    ecx,DWORD PTR [ebp+0x8]
   11dec:	mov    edx,DWORD PTR [ecx]
   11dee:	test   edx,edx
   11df0:	je     0x11df9
   11df2:	mov    DWORD PTR [eax],edx
   11df4:	inc    DWORD PTR [edx+0x4]
   11df7:	jmp    0x11dfc
   11df9:	and    DWORD PTR [eax],0x0
   11dfc:	pop    ebp
   11dfd:	ret    0x4
   11e00:	int3   
   11e01:	int3   
   11e02:	int3   
   11e03:	int3   
   11e04:	int3   
   11e05:	int3   
   11e06:	mov    edi,edi
   11e08:	push   ebp
   11e09:	mov    ebp,esp
   11e0b:	push   esi
   11e0c:	mov    esi,ecx
   11e0e:	mov    ecx,DWORD PTR [esi]
   11e10:	test   ecx,ecx
   11e12:	je     0x11e19
   11e14:	call   0x10990
   11e19:	mov    eax,DWORD PTR [ebp+0x8]
   11e1c:	mov    eax,DWORD PTR [eax]
   11e1e:	mov    DWORD PTR [esi],eax
   11e20:	inc    DWORD PTR [eax+0x4]
   11e23:	mov    eax,esi
   11e25:	pop    esi
   11e26:	pop    ebp
   11e27:	ret    0x4
   11e2a:	int3   
   11e2b:	int3   
   11e2c:	int3   
   11e2d:	int3   
   11e2e:	int3   
   11e2f:	int3   
   11e30:	mov    edi,edi
   11e32:	push   ebp
   11e33:	mov    ebp,esp
   11e35:	push   ebx
   11e36:	push   esi
   11e37:	push   edi
   11e38:	mov    edi,DWORD PTR [ebp+0xc]
   11e3b:	mov    esi,ecx
   11e3d:	and    DWORD PTR [esi+0x4],0x0
   11e41:	lea    eax,[edi+0x1]
   11e44:	push   eax
   11e45:	mov    DWORD PTR [esi+0x8],edi
   11e48:	call   0x11d78
   11e4d:	push   edi
   11e4e:	push   DWORD PTR [ebp+0x8]
   11e51:	mov    ebx,eax
   11e53:	push   ebx
   11e54:	call   0x1dad8
   11e59:	add    esp,0x10
   11e5c:	inc    DWORD PTR [esi+0x4]
   11e5f:	pop    edi
   11e60:	mov    DWORD PTR [esi],ebx
   11e62:	mov    eax,esi
   11e64:	pop    esi
   11e65:	pop    ebx
   11e66:	pop    ebp
   11e67:	ret    0x8
   11e6a:	int3   
   11e6b:	int3   
   11e6c:	int3   
   11e6d:	int3   
   11e6e:	int3   
   11e6f:	int3   
   11e70:	mov    edi,edi
   11e72:	push   ebp
   11e73:	mov    ebp,esp
   11e75:	push   ecx
   11e76:	push   edi
   11e77:	lea    eax,[ebp-0x4]
   11e7a:	push   eax
   11e7b:	xor    edi,edi
   11e7d:	push   edi
   11e7e:	push   edi
   11e7f:	push   0x1b
   11e81:	push   DWORD PTR [ebp+0x8]
   11e84:	call   0x115e2
   11e89:	call   eax
   11e8b:	cmp    eax,0xc0000004
   11e90:	jne    0x11ef8
   11e92:	mov    ecx,DWORD PTR [ebp-0x4]
   11e95:	push   ebx
   11e96:	mov    ebx,DWORD PTR [ebp+0xc]
   11e99:	movzx  edx,WORD PTR [ebx+0x2]
   11e9d:	lea    eax,[ecx-0x8]
   11ea0:	cmp    edx,eax
   11ea2:	jae    0x11eae
   11ea4:	mov    WORD PTR [ebx],ax
   11ea7:	mov    eax,0x80000005
   11eac:	jmp    0x11ef7
   11eae:	push   esi
   11eaf:	push   0x20736649
   11eb4:	push   ecx
   11eb5:	push   edi
   11eb6:	call   DWORD PTR ds:0x1f028
   11ebc:	mov    esi,eax
   11ebe:	cmp    esi,edi
   11ec0:	jne    0x11ec9
   11ec2:	mov    eax,0xc000009a
   11ec7:	jmp    0x11ef6
   11ec9:	lea    eax,[ebp-0x4]
   11ecc:	push   eax
   11ecd:	push   DWORD PTR [ebp-0x4]
   11ed0:	push   esi
   11ed1:	push   0x1b
   11ed3:	push   DWORD PTR [ebp+0x8]
   11ed6:	call   0x115e2
   11edb:	call   eax
   11edd:	mov    edi,eax
   11edf:	test   edi,edi
   11ee1:	jl     0x11eeb
   11ee3:	push   esi
   11ee4:	push   ebx
   11ee5:	call   DWORD PTR ds:0x1f034
   11eeb:	push   0x0
   11eed:	push   esi
   11eee:	call   DWORD PTR ds:0x1f014
   11ef4:	mov    eax,edi
   11ef6:	pop    esi
   11ef7:	pop    ebx
   11ef8:	pop    edi
   11ef9:	leave  
   11efa:	ret    0x8
   11efd:	int3   
   11efe:	int3   
   11eff:	int3   
   11f00:	int3   
   11f01:	int3   
   11f02:	mov    edi,edi
   11f04:	push   ebp
   11f05:	mov    ebp,esp
   11f07:	sub    esp,0x18
   11f0a:	push   0x0
   11f0c:	push   0x18
   11f0e:	lea    eax,[ebp-0x18]
   11f11:	push   eax
   11f12:	push   0x0
   11f14:	push   DWORD PTR [ebp+0x8]
   11f17:	call   0x115e2
   11f1c:	call   eax
   11f1e:	test   eax,eax
   11f20:	jl     0x11f27
   11f22:	mov    eax,DWORD PTR [ebp-0x8]
   11f25:	jmp    0x11f29
   11f27:	xor    eax,eax
   11f29:	leave  
   11f2a:	ret    0x4
   11f2d:	int3   
   11f2e:	int3   
   11f2f:	int3   
   11f30:	int3   
   11f31:	int3   
   11f32:	mov    edi,edi
   11f34:	push   ebp
   11f35:	mov    ebp,esp
   11f37:	mov    ecx,DWORD PTR ds:0x781a4
   11f3d:	sub    esp,0x38
   11f40:	push   esi
   11f41:	xor    esi,esi
   11f43:	cmp    ecx,esi
   11f45:	jne    0x11f4f
   11f47:	or     eax,0xffffffff
   11f4a:	jmp    0x12036
   11f4f:	push   edi
   11f50:	xor    eax,eax
   11f52:	mov    DWORD PTR [ebp-0x20],esi
   11f55:	lea    edi,[ebp-0x1c]
   11f58:	stos   DWORD PTR es:[edi],eax
   11f59:	lea    eax,[ebp-0x18]
   11f5c:	push   eax
   11f5d:	lea    eax,[ebp-0x38]
   11f60:	push   eax
   11f61:	push   0x400
   11f66:	lea    eax,[ebp-0x10]
   11f69:	push   eax
   11f6a:	mov    DWORD PTR [ebp-0x4],esi
   11f6d:	mov    DWORD PTR [ebp-0x38],0x18
   11f74:	mov    DWORD PTR [ebp-0x34],esi
   11f77:	mov    DWORD PTR [ebp-0x2c],esi
   11f7a:	mov    DWORD PTR [ebp-0x30],esi
   11f7d:	mov    DWORD PTR [ebp-0x28],esi
   11f80:	mov    DWORD PTR [ebp-0x24],esi
   11f83:	mov    DWORD PTR [ebp-0x18],ecx
   11f86:	mov    DWORD PTR [ebp-0x14],esi
   11f89:	call   0x11510
   11f8e:	call   eax
   11f90:	mov    edi,eax
   11f92:	cmp    edi,esi
   11f94:	jl     0x12033
   11f9a:	lea    eax,[ebp-0xc]
   11f9d:	push   eax
   11f9e:	push   0x8
   11fa0:	push   DWORD PTR [ebp-0x10]
   11fa3:	call   0x1175c
   11fa8:	call   eax
   11faa:	mov    edi,eax
   11fac:	cmp    edi,esi
   11fae:	jl     0x12029
   11fb0:	lea    eax,[ebp-0x4]
   11fb3:	push   eax
   11fb4:	push   0x1
   11fb6:	push   esi
   11fb7:	push   esi
   11fb8:	push   0x1
   11fba:	push   DWORD PTR [ebp-0xc]
   11fbd:	call   0x11564
   11fc2:	call   eax
   11fc4:	mov    edi,eax
   11fc6:	cmp    edi,esi
   11fc8:	jl     0x1201f
   11fca:	mov    eax,DWORD PTR [ebp+0x8]
   11fcd:	mov    DWORD PTR [ebp-0x18],eax
   11fd0:	lea    eax,[ebp-0x18]
   11fd3:	push   eax
   11fd4:	lea    eax,[ebp-0x38]
   11fd7:	push   eax
   11fd8:	push   0x200
   11fdd:	lea    eax,[ebp-0x8]
   11fe0:	push   eax
   11fe1:	call   0x11510
   11fe6:	call   eax
   11fe8:	mov    edi,eax
   11fea:	cmp    edi,esi
   11fec:	jl     0x12015
   11fee:	mov    eax,DWORD PTR [ebp-0x4]
   11ff1:	push   0x8
   11ff3:	mov    DWORD PTR [ebp-0x20],eax
   11ff6:	lea    eax,[ebp-0x20]
   11ff9:	push   eax
   11ffa:	push   0x9
   11ffc:	push   DWORD PTR [ebp-0x8]
   11fff:	mov    DWORD PTR [ebp-0x1c],esi
   12002:	call   0x11786
   12007:	call   eax
   12009:	push   DWORD PTR [ebp-0x8]
   1200c:	mov    edi,eax
   1200e:	call   0x117da
   12013:	call   eax
   12015:	push   DWORD PTR [ebp-0x4]
   12018:	call   0x117da
   1201d:	call   eax
   1201f:	push   DWORD PTR [ebp-0xc]
   12022:	call   0x117da
   12027:	call   eax
   12029:	push   DWORD PTR [ebp-0x10]
   1202c:	call   0x117da
   12031:	call   eax
   12033:	mov    eax,edi
   12035:	pop    edi
   12036:	pop    esi
   12037:	leave  
   12038:	ret    0x4
   1203b:	int3   
   1203c:	int3   
   1203d:	int3   
   1203e:	int3   
   1203f:	int3   
   12040:	mov    edi,edi
   12042:	push   ebp
   12043:	mov    ebp,esp
   12045:	sub    esp,0x43c
   1204b:	mov    eax,ds:0x7771c
   12050:	xor    eax,ebp
   12052:	mov    DWORD PTR [ebp-0x4],eax
   12055:	mov    eax,DWORD PTR [ebp+0xc]
   12058:	push   ebx
   12059:	push   esi
   1205a:	mov    esi,DWORD PTR [ebp+0x8]
   1205d:	push   edi
   1205e:	xor    ebx,ebx
   12060:	push   0x3ff
   12065:	mov    DWORD PTR [ebp-0x418],eax
   1206b:	lea    eax,[ebp-0x403]
   12071:	push   ebx
   12072:	push   eax
   12073:	mov    DWORD PTR [ebp-0x424],esi
   12079:	mov    BYTE PTR [ebp-0x404],bl
   1207f:	call   0x1dacc
   12084:	add    esp,0xc
   12087:	lea    eax,[ebp-0x410]
   1208d:	push   eax
   1208e:	push   0x400
   12093:	lea    eax,[ebp-0x404]
   12099:	push   eax
   1209a:	push   ebx
   1209b:	push   ebx
   1209c:	push   esi
   1209d:	jmp    0x1224c
   120a2:	cmp    eax,ebx
   120a4:	jl     0x1226e
   120aa:	mov    eax,DWORD PTR [ebp-0x418]
   120b0:	lea    edx,[eax+0x2]
   120b3:	mov    cx,WORD PTR [eax]
   120b6:	inc    eax
   120b7:	inc    eax
   120b8:	cmp    cx,bx
   120bb:	jne    0x120b3
   120bd:	mov    ecx,DWORD PTR [ebp-0x3f8]
   120c3:	sub    eax,edx
   120c5:	shr    ecx,1
   120c7:	sar    eax,1
   120c9:	lea    esi,[ecx+eax*1+0x2]
   120cd:	xor    ecx,ecx
   120cf:	push   0x2
   120d1:	pop    edx
   120d2:	mov    eax,esi
   120d4:	mul    edx
   120d6:	seto   cl
   120d9:	neg    ecx
   120db:	or     ecx,eax
   120dd:	push   ecx
   120de:	call   0x11d78
   120e3:	mov    edi,eax
   120e5:	lea    eax,[esi+esi*1]
   120e8:	push   eax
   120e9:	push   ebx
   120ea:	push   edi
   120eb:	mov    DWORD PTR [ebp-0x40c],edi
   120f1:	call   0x1dacc
   120f6:	mov    eax,DWORD PTR [ebp-0x418]
   120fc:	add    esp,0x10
   120ff:	mov    ecx,eax
   12101:	mov    dx,WORD PTR [eax]
   12104:	inc    eax
   12105:	inc    eax
   12106:	cmp    dx,bx
   12109:	jne    0x12101
   1210b:	sub    eax,ecx
   1210d:	dec    edi
   1210e:	mov    esi,ecx
   12110:	dec    edi
   12111:	mov    cx,WORD PTR [edi+0x2]
   12115:	inc    edi
   12116:	inc    edi
   12117:	cmp    cx,bx
   1211a:	jne    0x12111
   1211c:	mov    ecx,eax
   1211e:	shr    ecx,0x2
   12121:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12123:	mov    ecx,eax
   12125:	and    ecx,0x3
   12128:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1212a:	mov    edi,DWORD PTR [ebp-0x40c]
   12130:	dec    edi
   12131:	dec    edi
   12132:	mov    ax,WORD PTR [edi+0x2]
   12136:	inc    edi
   12137:	inc    edi
   12138:	cmp    ax,bx
   1213b:	jne    0x12132
   1213d:	mov    esi,0x1de7a
   12142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12143:	mov    eax,DWORD PTR [ebp-0x3f8]
   12149:	shr    eax,1
   1214b:	push   eax
   1214c:	lea    eax,[ebp-0x3f4]
   12152:	push   eax
   12153:	push   DWORD PTR [ebp-0x40c]
   12159:	call   0x1dae4
   1215e:	mov    esi,DWORD PTR [ebp-0x40c]
   12164:	mov    eax,esi
   12166:	add    esp,0xc
   12169:	mov    DWORD PTR [ebp-0x41c],esi
   1216f:	lea    edx,[eax+0x2]
   12172:	mov    cx,WORD PTR [eax]
   12175:	inc    eax
   12176:	inc    eax
   12177:	cmp    cx,bx
   1217a:	jne    0x12172
   1217c:	sub    eax,edx
   1217e:	sar    eax,1
   12180:	add    eax,eax
   12182:	mov    WORD PTR [ebp-0x41e],ax
   12189:	mov    WORD PTR [ebp-0x420],ax
   12190:	lea    eax,[ebp-0x420]
   12196:	mov    DWORD PTR [ebp-0x434],eax
   1219c:	lea    eax,[ebp-0x43c]
   121a2:	push   eax
   121a3:	push   0xf003f
   121a8:	lea    eax,[ebp-0x414]
   121ae:	push   eax
   121af:	mov    DWORD PTR [ebp-0x43c],0x18
   121b9:	mov    DWORD PTR [ebp-0x438],ebx
   121bf:	mov    DWORD PTR [ebp-0x430],0x40
   121c9:	mov    DWORD PTR [ebp-0x42c],ebx
   121cf:	mov    DWORD PTR [ebp-0x428],ebx
   121d5:	call   0x11636
   121da:	call   eax
   121dc:	push   esi
   121dd:	test   eax,eax
   121df:	jl     0x12268
   121e5:	push   DWORD PTR [ebp-0x414]
   121eb:	call   0x12040
   121f0:	push   esi
   121f1:	mov    BYTE PTR [ebp-0x405],al
   121f7:	call   0x1da56
   121fc:	pop    ecx
   121fd:	push   DWORD PTR [ebp-0x414]
   12203:	call   0x11660
   12208:	call   eax
   1220a:	test   eax,eax
   1220c:	jl     0x1226e
   1220e:	cmp    BYTE PTR [ebp-0x405],bl
   12214:	je     0x1226e
   12216:	push   0x3ff
   1221b:	lea    eax,[ebp-0x403]
   12221:	push   ebx
   12222:	push   eax
   12223:	mov    BYTE PTR [ebp-0x404],bl
   12229:	call   0x1dacc
   1222e:	add    esp,0xc
   12231:	lea    eax,[ebp-0x410]
   12237:	push   eax
   12238:	push   0x400
   1223d:	lea    eax,[ebp-0x404]
   12243:	push   eax
   12244:	push   ebx
   12245:	push   ebx
   12246:	push   DWORD PTR [ebp-0x424]
   1224c:	mov    DWORD PTR [ebp-0x410],ebx
   12252:	call   0x11858
   12257:	call   eax
   12259:	cmp    eax,0x8000001a
   1225e:	jne    0x120a2
   12264:	mov    al,0x1
   12266:	jmp    0x12270
   12268:	call   0x1da56
   1226d:	pop    ecx
   1226e:	xor    al,al
   12270:	mov    ecx,DWORD PTR [ebp-0x4]
   12273:	pop    edi
   12274:	pop    esi
   12275:	xor    ecx,ebp
   12277:	pop    ebx
   12278:	call   0x1da73
   1227d:	leave  
   1227e:	ret    0x8
   12281:	int3   
   12282:	int3   
   12283:	int3   
   12284:	int3   
   12285:	int3   
   12286:	mov    eax,ds:0x78124
   1228b:	test   eax,eax
   1228d:	je     0x1229e
   1228f:	push   eax
   12290:	call   0x118d6
   12295:	call   eax
   12297:	and    DWORD PTR ds:0x78124,0x0
   1229e:	ret    
   1229f:	int3   
   122a0:	int3   
   122a1:	int3   
   122a2:	int3   
   122a3:	int3   
   122a4:	push   0x28
   122a6:	push   0x77238
   122ab:	call   0x1db08
   122b0:	xor    eax,eax
   122b2:	mov    DWORD PTR [ebp-0x28],eax
   122b5:	mov    DWORD PTR [ebp-0x2c],eax
   122b8:	mov    ebx,DWORD PTR [ebp+0x8]
   122bb:	cmp    ebx,eax
   122bd:	jne    0x122c6
   122bf:	xor    eax,eax
   122c1:	jmp    0x123a3
   122c6:	mov    DWORD PTR [ebp-0x4],eax
   122c9:	lea    ecx,[ebp-0x2c]
   122cc:	push   ecx
   122cd:	push   eax
   122ce:	push   0x1
   122d0:	push   ebx
   122d1:	call   0x11732
   122d6:	call   eax
   122d8:	mov    edx,eax
   122da:	sub    edx,ebx
   122dc:	mov    DWORD PTR [ebp-0x38],edx
   122df:	mov    esi,DWORD PTR [eax+0x1c]
   122e2:	add    esi,ebx
   122e4:	mov    edi,DWORD PTR [eax+0x24]
   122e7:	add    edi,ebx
   122e9:	mov    ecx,DWORD PTR [eax+0x20]
   122ec:	add    ecx,ebx
   122ee:	and    DWORD PTR [ebp-0x20],0x0
   122f2:	mov    ebx,DWORD PTR [ebp-0x20]
   122f5:	cmp    ebx,DWORD PTR [eax+0x18]
   122f8:	jae    0x1238b
   122fe:	movsx  ebx,WORD PTR [edi+ebx*2]
   12302:	cmp    ebx,DWORD PTR [eax+0x14]
   12305:	jae    0x1237f
   12307:	lea    ebx,[esi+ebx*4]
   1230a:	mov    DWORD PTR [ebp-0x34],ebx
   1230d:	cmp    DWORD PTR [ebx],edx
   1230f:	jb     0x1231d
   12311:	mov    ebx,DWORD PTR [ebp-0x2c]
   12314:	add    edx,ebx
   12316:	mov    ebx,DWORD PTR [ebp-0x34]
   12319:	cmp    DWORD PTR [ebx],edx
   1231b:	jb     0x12374
   1231d:	mov    edx,DWORD PTR [ebp+0xc]
   12320:	mov    DWORD PTR [ebp-0x30],edx
   12323:	mov    edx,DWORD PTR [ebp-0x20]
   12326:	mov    edx,DWORD PTR [ecx+edx*4]
   12329:	add    edx,DWORD PTR [ebp+0x8]
   1232c:	mov    DWORD PTR [ebp-0x24],edx
   1232f:	mov    dl,BYTE PTR [edx]
   12331:	mov    ebx,DWORD PTR [ebp-0x30]
   12334:	cmp    dl,BYTE PTR [ebx]
   12336:	jne    0x12361
   12338:	test   dl,dl
   1233a:	je     0x1235d
   1233c:	mov    edx,DWORD PTR [ebp-0x24]
   1233f:	mov    dl,BYTE PTR [edx+0x1]
   12342:	mov    BYTE PTR [ebp-0x19],dl
   12345:	cmp    dl,BYTE PTR [ebx+0x1]
   12348:	jne    0x12361
   1234a:	mov    edx,DWORD PTR [ebp-0x24]
   1234d:	inc    edx
   1234e:	inc    edx
   1234f:	mov    DWORD PTR [ebp-0x24],edx
   12352:	inc    ebx
   12353:	inc    ebx
   12354:	mov    DWORD PTR [ebp-0x30],ebx
   12357:	cmp    BYTE PTR [ebp-0x19],0x0
   1235b:	jne    0x1232f
   1235d:	xor    edx,edx
   1235f:	jmp    0x12366
   12361:	sbb    edx,edx
   12363:	sbb    edx,0xffffffff
   12366:	test   edx,edx
   12368:	jne    0x12374
   1236a:	mov    eax,DWORD PTR [ebp-0x34]
   1236d:	mov    eax,DWORD PTR [eax]
   1236f:	add    eax,DWORD PTR [ebp+0x8]
   12372:	jmp    0x12399
   12374:	inc    DWORD PTR [ebp-0x20]
   12377:	mov    edx,DWORD PTR [ebp-0x38]
   1237a:	jmp    0x122f2
   1237f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   12386:	jmp    0x122bf
   1238b:	mov    eax,DWORD PTR [ebp-0x28]
   1238e:	jmp    0x1239c
   12390:	xor    eax,eax
   12392:	inc    eax
   12393:	ret    
   12394:	mov    esp,DWORD PTR [ebp-0x18]
   12397:	xor    eax,eax
   12399:	mov    DWORD PTR [ebp-0x28],eax
   1239c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   123a3:	call   0x1db4d
   123a8:	ret    0x8
   123ab:	int3   
   123ac:	int3   
   123ad:	int3   
   123ae:	int3   
   123af:	int3   
   123b0:	mov    edi,edi
   123b2:	push   ebp
   123b3:	mov    ebp,esp
   123b5:	sub    esp,0x48
   123b8:	mov    eax,DWORD PTR [ebp+0xc]
   123bb:	mov    eax,DWORD PTR [eax]
   123bd:	push   edi
   123be:	mov    DWORD PTR [ebp-0x30],eax
   123c1:	lea    eax,[ebp-0x30]
   123c4:	push   eax
   123c5:	lea    eax,[ebp-0x48]
   123c8:	push   eax
   123c9:	xor    edi,edi
   123cb:	push   0x1f0fff
   123d0:	lea    eax,[ebp-0x10]
   123d3:	push   eax
   123d4:	mov    DWORD PTR [ebp-0x48],0x18
   123db:	mov    DWORD PTR [ebp-0x44],edi
   123de:	mov    DWORD PTR [ebp-0x3c],0x200
   123e5:	mov    DWORD PTR [ebp-0x40],edi
   123e8:	mov    DWORD PTR [ebp-0x38],edi
   123eb:	mov    DWORD PTR [ebp-0x34],edi
   123ee:	mov    DWORD PTR [ebp-0x2c],edi
   123f1:	mov    DWORD PTR [ebp-0x10],edi
   123f4:	call   0x11510
   123f9:	call   eax
   123fb:	test   eax,eax
   123fd:	jl     0x12751
   12403:	push   ebx
   12404:	push   esi
   12405:	mov    esi,DWORD PTR ds:0x1f03c
   1240b:	push   0x40
   1240d:	mov    ebx,0x1000
   12412:	push   ebx
   12413:	lea    eax,[ebp-0x14]
   12416:	push   eax
   12417:	push   edi
   12418:	lea    eax,[ebp-0xc]
   1241b:	push   eax
   1241c:	push   DWORD PTR [ebp-0x10]
   1241f:	mov    DWORD PTR [ebp-0xc],edi
   12422:	mov    DWORD PTR [ebp-0x14],0x400
   12429:	call   esi
   1242b:	test   eax,eax
   1242d:	jl     0x12438
   1242f:	mov    eax,DWORD PTR [ebp-0xc]
   12432:	mov    ecx,DWORD PTR [ebp+0xc]
   12435:	mov    DWORD PTR [ecx+0x8],eax
   12438:	push   0x4
   1243a:	push   ebx
   1243b:	lea    eax,[ebp-0x14]
   1243e:	push   eax
   1243f:	push   edi
   12440:	lea    eax,[ebp-0x18]
   12443:	push   eax
   12444:	push   DWORD PTR [ebp-0x10]
   12447:	mov    DWORD PTR [ebp-0x18],edi
   1244a:	mov    DWORD PTR [ebp-0x14],0x400
   12451:	call   esi
   12453:	test   eax,eax
   12455:	jl     0x12460
   12457:	mov    eax,DWORD PTR [ebp-0x18]
   1245a:	mov    ecx,DWORD PTR [ebp+0xc]
   1245d:	mov    DWORD PTR [ecx+0xc],eax
   12460:	lea    eax,[ebp-0x24]
   12463:	push   eax
   12464:	push   DWORD PTR [ebp-0x30]
   12467:	call   0x11b4c
   1246c:	call   eax
   1246e:	test   eax,eax
   12470:	jl     0x1274f
   12476:	push   DWORD PTR [ebp-0x24]
   12479:	call   0x1192a
   1247e:	call   eax
   12480:	mov    eax,DWORD PTR [ebp-0xc]
   12483:	mov    DWORD PTR [ebp-0x20],edi
   12486:	cmp    eax,edi
   12488:	je     0x12735
   1248e:	mov    esi,DWORD PTR [ebp-0x18]
   12491:	cmp    esi,edi
   12493:	je     0x126a2
   12499:	push   0x214
   1249e:	push   edi
   1249f:	push   esi
   124a0:	mov    DWORD PTR [ebp-0x4],eax
   124a3:	call   0x1dacc
   124a8:	mov    eax,DWORD PTR [ebp-0x4]
   124ab:	add    esp,0xc
   124ae:	push   0x60
   124b0:	lea    ebx,[esi+0xc]
   124b3:	push   eax
   124b4:	mov    DWORD PTR [ebx],edi
   124b6:	mov    DWORD PTR [esi],edi
   124b8:	mov    DWORD PTR [ebp-0x20],eax
   124bb:	call   0x19836
   124c0:	push   0x68
   124c2:	push   eax
   124c3:	call   0x19836
   124c8:	push   ebx
   124c9:	push   eax
   124ca:	call   0x1984e
   124cf:	push   0x6a
   124d1:	pop    ebx
   124d2:	push   ebx
   124d3:	push   eax
   124d4:	call   0x19836
   124d9:	push   edi
   124da:	push   eax
   124db:	call   0x19836
   124e0:	push   ebx
   124e1:	push   eax
   124e2:	call   0x19836
   124e7:	push   edi
   124e8:	push   eax
   124e9:	call   0x19836
   124ee:	push   0x68
   124f0:	push   eax
   124f1:	call   0x19836
   124f6:	push   edi
   124f7:	push   eax
   124f8:	mov    DWORD PTR [ebp-0x28],eax
   124fb:	call   0x1984e
   12500:	push   ebx
   12501:	push   eax
   12502:	call   0x19836
   12507:	push   edi
   12508:	push   eax
   12509:	call   0x19836
   1250e:	push   ebx
   1250f:	push   eax
   12510:	call   0x19836
   12515:	push   edi
   12516:	push   eax
   12517:	call   0x19836
   1251c:	push   0xb8
   12521:	push   eax
   12522:	call   0x19836
   12527:	push   DWORD PTR ds:0x78170
   1252d:	push   eax
   1252e:	call   0x1984e
   12533:	mov    ebx,0xc00b
   12538:	push   ebx
   12539:	push   eax
   1253a:	call   0x19868
   1253f:	push   0x74
   12541:	push   eax
   12542:	call   0x19836
   12547:	push   0x9
   12549:	push   eax
   1254a:	call   0x19836
   1254f:	mov    edi,0xd0ff
   12554:	push   edi
   12555:	push   eax
   12556:	call   0x19868
   1255b:	push   0xb9
   12560:	push   eax
   12561:	call   0x19836
   12566:	lea    ecx,[esi+0x10]
   12569:	push   ecx
   1256a:	push   eax
   1256b:	call   0x1984e
   12570:	push   0x189
   12575:	push   eax
   12576:	call   0x19868
   1257b:	push   0x61
   1257d:	push   eax
   1257e:	call   0x19836
   12583:	and    DWORD PTR [ebp-0x8],0x0
   12587:	mov    DWORD PTR [ebp-0x4],eax
   1258a:	mov    eax,DWORD PTR [ebp+0x8]
   1258d:	mov    DWORD PTR [ebp-0x1c],eax
   12590:	push   0x0
   12592:	push   DWORD PTR [ebp-0x1c]
   12595:	push   DWORD PTR [ebp-0x4]
   12598:	call   0x19fe8
   1259d:	mov    ecx,eax
   1259f:	sub    ecx,DWORD PTR [ebp-0x1c]
   125a2:	mov    DWORD PTR [ebp-0x1c],eax
   125a5:	add    DWORD PTR [ebp-0x8],ecx
   125a8:	add    DWORD PTR [ebp-0x4],ecx
   125ab:	cmp    DWORD PTR [ebp-0x8],0x5
   125af:	jb     0x12590
   125b1:	mov    ecx,DWORD PTR [ebp+0x8]
   125b4:	push   DWORD PTR [ebp-0x4]
   125b7:	mov    eax,DWORD PTR [ebp-0x8]
   125ba:	add    eax,ecx
   125bc:	push   eax
   125bd:	call   0x198ac
   125c2:	push   eax
   125c3:	push   DWORD PTR [ebp-0x28]
   125c6:	mov    DWORD PTR [ebp-0x4],eax
   125c9:	call   0x1984e
   125ce:	mov    eax,DWORD PTR [ebp-0x4]
   125d1:	push   0xeb
   125d6:	push   eax
   125d7:	mov    DWORD PTR [esi],eax
   125d9:	call   0x19836
   125de:	push   0x0
   125e0:	push   eax
   125e1:	mov    DWORD PTR [esi+0x4],eax
   125e4:	call   0x19836
   125e9:	push   0x68
   125eb:	push   eax
   125ec:	call   0x19836
   125f1:	push   0x3e8
   125f6:	push   eax
   125f7:	call   0x1984e
   125fc:	push   0xb8
   12601:	push   eax
   12602:	call   0x19836
   12607:	push   DWORD PTR ds:0x78174
   1260d:	push   eax
   1260e:	call   0x1984e
   12613:	push   ebx
   12614:	push   eax
   12615:	call   0x19868
   1261a:	push   0x74
   1261c:	push   eax
   1261d:	call   0x19836
   12622:	push   0x2
   12624:	push   eax
   12625:	call   0x19836
   1262a:	push   edi
   1262b:	push   eax
   1262c:	call   0x19868
   12631:	push   eax
   12632:	push   DWORD PTR [esi]
   12634:	call   0x198ac
   12639:	mov    cl,al
   1263b:	sub    cl,BYTE PTR [esi+0x4]
   1263e:	push   0x68
   12640:	dec    cl
   12642:	push   eax
   12643:	mov    BYTE PTR [esi+0x8],cl
   12646:	call   0x19836
   1264b:	add    esi,0x14
   1264e:	push   esi
   1264f:	push   eax
   12650:	call   0x1984e
   12655:	push   0xb8
   1265a:	push   eax
   1265b:	call   0x19836
   12660:	push   DWORD PTR ds:0x78168
   12666:	push   eax
   12667:	call   0x1984e
   1266c:	push   ebx
   1266d:	push   eax
   1266e:	call   0x19868
   12673:	push   0x74
   12675:	push   eax
   12676:	call   0x19836
   1267b:	push   0x2
   1267d:	push   eax
   1267e:	call   0x19836
   12683:	push   edi
   12684:	push   eax
   12685:	call   0x19868
   1268a:	push   0xc2
   1268f:	push   eax
   12690:	call   0x19836
   12695:	push   0x4
   12697:	push   eax
   12698:	call   0x19868
   1269d:	mov    eax,DWORD PTR [ebp-0xc]
   126a0:	xor    edi,edi
   126a2:	cmp    eax,edi
   126a4:	je     0x12735
   126aa:	add    eax,0x400
   126af:	lea    esi,[eax-0xc]
   126b2:	lea    ecx,[eax-0x8]
   126b5:	push   esi
   126b6:	lea    ebx,[eax-0x4]
   126b9:	lea    edx,[eax-0x10]
   126bc:	push   0x40
   126be:	add    eax,0xffffffe8
   126c1:	push   ecx
   126c2:	mov    DWORD PTR [ebp-0x1c],eax
   126c5:	mov    eax,DWORD PTR [ebp+0x8]
   126c8:	mov    DWORD PTR [ebx],eax
   126ca:	push   ebx
   126cb:	mov    DWORD PTR [ecx],0x5
   126d1:	push   0xffffffff
   126d3:	mov    DWORD PTR [ebp-0x8],ecx
   126d6:	mov    DWORD PTR [ebp-0x28],edx
   126d9:	mov    DWORD PTR [esi],edi
   126db:	call   DWORD PTR ds:0x780e4
   126e1:	test   eax,eax
   126e3:	jl     0x12735
   126e5:	mov    eax,DWORD PTR [ebp-0x20]
   126e8:	sub    eax,DWORD PTR [ebp+0x8]
   126eb:	sub    eax,0x5
   126ee:	push   eax
   126ef:	mov    eax,DWORD PTR [ebp-0x1c]
   126f2:	inc    eax
   126f3:	push   eax
   126f4:	call   0x1984e
   126f9:	push   0xe9
   126fe:	push   DWORD PTR [ebp-0x1c]
   12701:	call   0x19836
   12706:	mov    eax,DWORD PTR [ebp-0x28]
   12709:	push   eax
   1270a:	push   0x5
   1270c:	push   DWORD PTR [ebp-0x1c]
   1270f:	mov    DWORD PTR [eax],edi
   12711:	push   DWORD PTR [ebp+0x8]
   12714:	push   0xffffffff
   12716:	call   DWORD PTR ds:0x780d8
   1271c:	mov    eax,DWORD PTR [ebp+0xc]
   1271f:	mov    BYTE PTR [eax+0x10],0x1
   12723:	lea    eax,[ebp-0x20]
   12726:	push   eax
   12727:	push   DWORD PTR [esi]
   12729:	push   DWORD PTR [ebp-0x8]
   1272c:	push   ebx
   1272d:	push   0xffffffff
   1272f:	call   DWORD PTR ds:0x780e4
   12735:	call   0x11900
   1273a:	call   eax
   1273c:	mov    ecx,DWORD PTR [ebp-0x24]
   1273f:	call   DWORD PTR ds:0x1f05c
   12745:	push   DWORD PTR [ebp-0x10]
   12748:	call   0x117da
   1274d:	call   eax
   1274f:	pop    esi
   12750:	pop    ebx
   12751:	pop    edi
   12752:	leave  
   12753:	ret    0x8
   12756:	int3   
   12757:	int3   
   12758:	int3   
   12759:	int3   
   1275a:	int3   
   1275b:	int3   
   1275c:	mov    edi,edi
   1275e:	push   ebp
   1275f:	mov    ebp,esp
   12761:	sub    esp,0x18
   12764:	and    DWORD PTR [ebp-0x18],0x0
   12768:	push   edi
   12769:	xor    eax,eax
   1276b:	lea    edi,[ebp-0x14]
   1276e:	stos   DWORD PTR es:[edi],eax
   1276f:	stos   DWORD PTR es:[edi],eax
   12770:	stos   DWORD PTR es:[edi],eax
   12771:	stos   DWORD PTR es:[edi],eax
   12772:	lea    eax,[ebp-0x18]
   12775:	push   eax
   12776:	push   0x1
   12778:	call   0x10e50
   1277d:	pop    edi
   1277e:	test   al,al
   12780:	je     0x127d7
   12782:	cmp    DWORD PTR [ebp-0x18],0x0
   12786:	je     0x127d7
   12788:	lea    eax,[ebp-0x4]
   1278b:	push   eax
   1278c:	push   DWORD PTR [ebp-0x18]
   1278f:	call   0x11b4c
   12794:	call   eax
   12796:	test   eax,eax
   12798:	jl     0x127d7
   1279a:	push   esi
   1279b:	push   DWORD PTR [ebp-0x4]
   1279e:	call   0x1192a
   127a3:	call   eax
   127a5:	mov    esi,DWORD PTR [ebp-0xc]
   127a8:	mov    eax,DWORD PTR [ebp+0x8]
   127ab:	lea    edx,[esi+0x14]
   127ae:	sub    edx,eax
   127b0:	movzx  ecx,WORD PTR [eax]
   127b3:	mov    WORD PTR [edx+eax*1],cx
   127b7:	inc    eax
   127b8:	inc    eax
   127b9:	test   cx,cx
   127bc:	jne    0x127b0
   127be:	mov    eax,DWORD PTR [esi+0x4]
   127c1:	mov    cl,BYTE PTR [esi+0x8]
   127c4:	mov    BYTE PTR [eax],cl
   127c6:	call   0x11900
   127cb:	call   eax
   127cd:	mov    ecx,DWORD PTR [ebp-0x4]
   127d0:	call   DWORD PTR ds:0x1f05c
   127d6:	pop    esi
   127d7:	leave  
   127d8:	ret    0x4
   127db:	int3   
   127dc:	int3   
   127dd:	int3   
   127de:	int3   
   127df:	int3   
   127e0:	mov    edi,edi
   127e2:	push   ebp
   127e3:	mov    ebp,esp
   127e5:	push   ecx
   127e6:	and    DWORD PTR [ebp-0x4],0x0
   127ea:	push   ebx
   127eb:	push   esi
   127ec:	push   edi
   127ed:	mov    esi,0x1000
   127f2:	push   0x20736649
   127f7:	push   esi
   127f8:	push   0x0
   127fa:	call   DWORD PTR ds:0x1f028
   12800:	mov    edi,eax
   12802:	test   edi,edi
   12804:	je     0x12838
   12806:	lea    eax,[ebp-0x4]
   12809:	push   eax
   1280a:	push   esi
   1280b:	push   edi
   1280c:	push   DWORD PTR [ebp+0x8]
   1280f:	call   0x1160c
   12814:	call   eax
   12816:	mov    ebx,eax
   12818:	cmp    ebx,0xc0000004
   1281e:	jne    0x1282b
   12820:	push   0x0
   12822:	push   edi
   12823:	call   DWORD PTR ds:0x1f014
   12829:	add    esi,esi
   1282b:	test   ebx,ebx
   1282d:	jne    0x127f2
   1282f:	mov    eax,edi
   12831:	pop    edi
   12832:	pop    esi
   12833:	pop    ebx
   12834:	leave  
   12835:	ret    0x4
   12838:	xor    eax,eax
   1283a:	jmp    0x12831
   1283c:	int3   
   1283d:	int3   
   1283e:	int3   
   1283f:	int3   
   12840:	int3   
   12841:	int3   
   12842:	push   0x0
   12844:	push   0x780f4
   12849:	call   0x11b22
   1284e:	call   eax
   12850:	push   0x100
   12855:	push   0x0
   12857:	push   0x777b8
   1285c:	call   0x1dacc
   12861:	add    esp,0xc
   12864:	ret    
   12865:	int3   
   12866:	int3   
   12867:	int3   
   12868:	int3   
   12869:	int3   
   1286a:	mov    edi,edi
   1286c:	push   ebp
   1286d:	mov    ebp,esp
   1286f:	push   esi
   12870:	mov    esi,DWORD PTR [ebp+0x8]
   12873:	push   edi
   12874:	push   DWORD PTR [esi]
   12876:	call   0x11d78
   1287b:	push   DWORD PTR [esi]
   1287d:	mov    edi,eax
   1287f:	push   esi
   12880:	push   edi
   12881:	call   0x1dad8
   12886:	add    esp,0x10
   12889:	mov    eax,edi
   1288b:	pop    edi
   1288c:	pop    esi
   1288d:	pop    ebp
   1288e:	ret    0x4
   12891:	int3   
   12892:	int3   
   12893:	int3   
   12894:	int3   
   12895:	int3   
   12896:	mov    edi,edi
   12898:	push   ebp
   12899:	mov    ebp,esp
   1289b:	push   ebx
   1289c:	push   esi
   1289d:	push   edi
   1289e:	mov    edi,DWORD PTR [ebp+0x8]
   128a1:	mov    eax,DWORD PTR [edi+0x4]
   128a4:	mov    esi,ecx
   128a6:	mov    ebx,DWORD PTR [esi]
   128a8:	mov    DWORD PTR [esi+0x4],eax
   128ab:	inc    eax
   128ac:	push   eax
   128ad:	call   0x11d78
   128b2:	push   DWORD PTR [esi+0x4]
   128b5:	mov    DWORD PTR [esi],eax
   128b7:	push   DWORD PTR [edi]
   128b9:	push   eax
   128ba:	call   0x1dad8
   128bf:	mov    eax,DWORD PTR [esi+0x4]
   128c2:	mov    ecx,DWORD PTR [esi]
   128c4:	push   ebx
   128c5:	mov    BYTE PTR [eax+ecx*1],0x0
   128c9:	call   0x1da56
   128ce:	add    esp,0x14
   128d1:	pop    edi
   128d2:	mov    eax,esi
   128d4:	pop    esi
   128d5:	pop    ebx
   128d6:	pop    ebp
   128d7:	ret    0x4
   128da:	int3   
   128db:	int3   
   128dc:	int3   
   128dd:	int3   
   128de:	int3   
   128df:	int3   
   128e0:	mov    edi,edi
   128e2:	push   esi
   128e3:	push   edi
   128e4:	push   0x20736649
   128e9:	push   0x20
   128eb:	push   0x0
   128ed:	mov    esi,ecx
   128ef:	call   DWORD PTR ds:0x1f028
   128f5:	push   0x0
   128f7:	mov    edi,eax
   128f9:	push   0x1
   128fb:	mov    ecx,esi
   128fd:	mov    DWORD PTR [esi],edi
   128ff:	call   0x1102e
   12904:	mov    DWORD PTR [esi+0x8],eax
   12907:	mov    DWORD PTR [esi+0xc],edx
   1290a:	test   edi,edi
   1290c:	jne    0x1291a
   1290e:	push   0xc000009a
   12913:	call   0x11804
   12918:	call   eax
   1291a:	pop    edi
   1291b:	mov    eax,esi
   1291d:	pop    esi
   1291e:	ret    
   1291f:	int3   
   12920:	int3   
   12921:	int3   
   12922:	int3   
   12923:	int3   
   12924:	mov    edi,edi
   12926:	push   ebp
   12927:	mov    ebp,esp
   12929:	push   esi
   1292a:	push   edi
   1292b:	mov    edi,DWORD PTR [ebp+0x8]
   1292e:	push   edi
   1292f:	mov    esi,ecx
   12931:	call   0x12896
   12936:	lea    eax,[edi+0x8]
   12939:	push   eax
   1293a:	lea    ecx,[esi+0x8]
   1293d:	call   0x12896
   12942:	lea    eax,[edi+0x10]
   12945:	push   eax
   12946:	lea    ecx,[esi+0x10]
   12949:	call   0x12896
   1294e:	lea    eax,[edi+0x18]
   12951:	push   eax
   12952:	lea    ecx,[esi+0x18]
   12955:	call   0x12896
   1295a:	mov    eax,DWORD PTR [edi+0x20]
   1295d:	mov    DWORD PTR [esi+0x20],eax
   12960:	mov    eax,DWORD PTR [edi+0x24]
   12963:	mov    DWORD PTR [esi+0x24],eax
   12966:	mov    eax,DWORD PTR [edi+0x28]
   12969:	mov    DWORD PTR [esi+0x28],eax
   1296c:	mov    eax,DWORD PTR [edi+0x2c]
   1296f:	mov    DWORD PTR [esi+0x2c],eax
   12972:	mov    eax,DWORD PTR [edi+0x30]
   12975:	mov    DWORD PTR [esi+0x30],eax
   12978:	mov    eax,DWORD PTR [edi+0x34]
   1297b:	add    edi,0x38
   1297e:	push   edi
   1297f:	lea    ecx,[esi+0x38]
   12982:	mov    DWORD PTR [esi+0x34],eax
   12985:	call   0x12896
   1298a:	pop    edi
   1298b:	mov    eax,esi
   1298d:	pop    esi
   1298e:	pop    ebp
   1298f:	ret    0x4
   12992:	int3   
   12993:	int3   
   12994:	int3   
   12995:	int3   
   12996:	int3   
   12997:	int3   
   12998:	mov    edi,edi
   1299a:	push   esi
   1299b:	mov    esi,ecx
   1299d:	lea    ecx,[esi+0x8]
   129a0:	call   0x11dac
   129a5:	push   DWORD PTR [esi]
   129a7:	call   0x1da56
   129ac:	pop    ecx
   129ad:	pop    esi
   129ae:	ret    
   129af:	int3   
   129b0:	int3   
   129b1:	int3   
   129b2:	int3   
   129b3:	int3   
   129b4:	mov    edi,edi
   129b6:	push   esi
   129b7:	mov    esi,ecx
   129b9:	push   DWORD PTR [esi+0x8]
   129bc:	call   0x1da56
   129c1:	push   DWORD PTR [esi]
   129c3:	call   0x1da56
   129c8:	pop    ecx
   129c9:	pop    ecx
   129ca:	pop    esi
   129cb:	ret    
   129cc:	int3   
   129cd:	int3   
   129ce:	int3   
   129cf:	int3   
   129d0:	int3   
   129d1:	int3   
   129d2:	mov    edi,edi
   129d4:	push   ebp
   129d5:	mov    ebp,esp
   129d7:	push   esi
   129d8:	mov    esi,DWORD PTR [ebp+0xc]
   129db:	push   edi
   129dc:	mov    edi,ecx
   129de:	cmp    esi,0xffffffff
   129e1:	jne    0x129f2
   129e3:	mov    esi,DWORD PTR [ebp+0x8]
   129e6:	lea    ecx,[esi+0x1]
   129e9:	mov    al,BYTE PTR [esi]
   129eb:	inc    esi
   129ec:	test   al,al
   129ee:	jne    0x129e9
   129f0:	sub    esi,ecx
   129f2:	lea    eax,[esi+0x1]
   129f5:	push   eax
   129f6:	call   0x11d78
   129fb:	pop    ecx
   129fc:	mov    DWORD PTR [edi],eax
   129fe:	test   eax,eax
   12a00:	jne    0x12a0d
   12a02:	push   0xc000009a
   12a07:	call   DWORD PTR ds:0x1f040
   12a0d:	mov    eax,DWORD PTR [edi]
   12a0f:	push   esi
   12a10:	push   DWORD PTR [ebp+0x8]
   12a13:	mov    BYTE PTR [esi+eax*1],0x0
   12a17:	push   DWORD PTR [edi]
   12a19:	call   0x1dad8
   12a1e:	add    esp,0xc
   12a21:	mov    DWORD PTR [edi+0x4],esi
   12a24:	pop    edi
   12a25:	pop    esi
   12a26:	pop    ebp
   12a27:	ret    0x8
   12a2a:	int3   
   12a2b:	int3   
   12a2c:	int3   
   12a2d:	int3   
   12a2e:	int3   
   12a2f:	int3   
   12a30:	mov    edi,edi
   12a32:	push   ebp
   12a33:	mov    ebp,esp
   12a35:	push   ebx
   12a36:	push   esi
   12a37:	push   edi
   12a38:	mov    edi,DWORD PTR [ebp+0x8]
   12a3b:	mov    eax,DWORD PTR [edi+0x4]
   12a3e:	mov    esi,ecx
   12a40:	mov    ebx,DWORD PTR [esi]
   12a42:	mov    DWORD PTR [esi+0x4],eax
   12a45:	xor    ecx,ecx
   12a47:	push   0x2
   12a49:	inc    eax
   12a4a:	pop    edx
   12a4b:	mul    edx
   12a4d:	seto   cl
   12a50:	neg    ecx
   12a52:	or     ecx,eax
   12a54:	push   ecx
   12a55:	call   0x11d78
   12a5a:	mov    ecx,DWORD PTR [esi+0x4]
   12a5d:	add    ecx,ecx
   12a5f:	push   ecx
   12a60:	mov    DWORD PTR [esi],eax
   12a62:	push   DWORD PTR [edi]
   12a64:	push   eax
   12a65:	call   0x1dad8
   12a6a:	mov    eax,DWORD PTR [esi+0x4]
   12a6d:	mov    ecx,DWORD PTR [esi]
   12a6f:	xor    edx,edx
   12a71:	push   ebx
   12a72:	mov    WORD PTR [ecx+eax*2],dx
   12a76:	call   0x1da56
   12a7b:	add    esp,0x14
   12a7e:	pop    edi
   12a7f:	mov    eax,esi
   12a81:	pop    esi
   12a82:	pop    ebx
   12a83:	pop    ebp
   12a84:	ret    0x4
   12a87:	int3   
   12a88:	int3   
   12a89:	int3   
   12a8a:	int3   
   12a8b:	int3   
   12a8c:	mov    edi,edi
   12a8e:	push   ebp
   12a8f:	mov    ebp,esp
   12a91:	mov    eax,DWORD PTR [ebp+0x8]
   12a94:	mov    eax,DWORD PTR [eax]
   12a96:	push   esi
   12a97:	push   DWORD PTR [ebp+0xc]
   12a9a:	mov    esi,ecx
   12a9c:	lea    ecx,[esi+0x4]
   12a9f:	mov    DWORD PTR [esi],eax
   12aa1:	call   0x11de2
   12aa6:	mov    eax,esi
   12aa8:	pop    esi
   12aa9:	pop    ebp
   12aaa:	ret    0x8
   12aad:	int3   
   12aae:	int3   
   12aaf:	int3   
   12ab0:	int3   
   12ab1:	int3   
   12ab2:	mov    edi,edi
   12ab4:	push   ebp
   12ab5:	mov    ebp,esp
   12ab7:	push   esi
   12ab8:	push   edi
   12ab9:	mov    edi,DWORD PTR [ebp+0xc]
   12abc:	mov    esi,ecx
   12abe:	cmp    edi,0xffffffff
   12ac1:	jne    0x12acd
   12ac3:	push   DWORD PTR [ebp+0x8]
   12ac6:	call   0x10960
   12acb:	mov    edi,eax
   12acd:	xor    ecx,ecx
   12acf:	push   0x2
   12ad1:	pop    edx
   12ad2:	lea    eax,[edi+0x1]
   12ad5:	mul    edx
   12ad7:	seto   cl
   12ada:	neg    ecx
   12adc:	or     ecx,eax
   12ade:	push   ecx
   12adf:	call   0x11d78
   12ae4:	pop    ecx
   12ae5:	mov    DWORD PTR [esi],eax
   12ae7:	test   eax,eax
   12ae9:	jne    0x12af6
   12aeb:	push   0xc000009a
   12af0:	call   DWORD PTR ds:0x1f040
   12af6:	mov    ecx,DWORD PTR [esi]
   12af8:	lea    eax,[edi+edi*1]
   12afb:	push   eax
   12afc:	push   DWORD PTR [ebp+0x8]
   12aff:	xor    edx,edx
   12b01:	mov    WORD PTR [eax+ecx*1],dx
   12b05:	push   DWORD PTR [esi]
   12b07:	call   0x1dad8
   12b0c:	add    esp,0xc
   12b0f:	mov    DWORD PTR [esi+0x4],edi
   12b12:	pop    edi
   12b13:	pop    esi
   12b14:	pop    ebp
   12b15:	ret    0x8
   12b18:	int3   
   12b19:	int3   
   12b1a:	int3   
   12b1b:	int3   
   12b1c:	int3   
   12b1d:	int3   
   12b1e:	mov    edi,edi
   12b20:	push   ebp
   12b21:	mov    ebp,esp
   12b23:	mov    eax,DWORD PTR [ebp+0x8]
   12b26:	mov    edx,DWORD PTR ds:0x782bc
   12b2c:	jmp    0x12b30
   12b2e:	mov    eax,ecx
   12b30:	mov    ecx,DWORD PTR [eax]
   12b32:	cmp    ecx,edx
   12b34:	jne    0x12b2e
   12b36:	pop    ebp
   12b37:	ret    0x4
   12b3a:	int3   
   12b3b:	int3   
   12b3c:	int3   
   12b3d:	int3   
   12b3e:	int3   
   12b3f:	int3   
   12b40:	mov    edi,edi
   12b42:	push   ebp
   12b43:	mov    ebp,esp
   12b45:	mov    eax,DWORD PTR [ecx+0x4]
   12b48:	mov    ecx,DWORD PTR [eax+0x4]
   12b4b:	mov    edx,DWORD PTR ds:0x782b0
   12b51:	cmp    ecx,edx
   12b53:	je     0x12b6e
   12b55:	push   esi
   12b56:	mov    esi,DWORD PTR [ebp+0x8]
   12b59:	mov    esi,DWORD PTR [esi]
   12b5b:	cmp    DWORD PTR [ecx+0xc],esi
   12b5e:	jae    0x12b65
   12b60:	mov    ecx,DWORD PTR [ecx+0x8]
   12b63:	jmp    0x12b69
   12b65:	mov    eax,ecx
   12b67:	mov    ecx,DWORD PTR [ecx]
   12b69:	cmp    ecx,edx
   12b6b:	jne    0x12b5b
   12b6d:	pop    esi
   12b6e:	pop    ebp
   12b6f:	ret    0x4
   12b72:	int3   
   12b73:	int3   
   12b74:	int3   
   12b75:	int3   
   12b76:	int3   
   12b77:	int3   
   12b78:	mov    edi,edi
   12b7a:	push   ebp
   12b7b:	mov    ebp,esp
   12b7d:	mov    edx,DWORD PTR [ebp+0x8]
   12b80:	mov    eax,DWORD PTR [edx+0x8]
   12b83:	push   esi
   12b84:	mov    esi,DWORD PTR [eax]
   12b86:	mov    DWORD PTR [edx+0x8],esi
   12b89:	mov    esi,DWORD PTR [eax]
   12b8b:	cmp    esi,DWORD PTR ds:0x782b0
   12b91:	je     0x12b96
   12b93:	mov    DWORD PTR [esi+0x4],edx
   12b96:	mov    esi,DWORD PTR [edx+0x4]
   12b99:	mov    DWORD PTR [eax+0x4],esi
   12b9c:	mov    ecx,DWORD PTR [ecx+0x4]
   12b9f:	pop    esi
   12ba0:	cmp    edx,DWORD PTR [ecx+0x4]
   12ba3:	jne    0x12baa
   12ba5:	mov    DWORD PTR [ecx+0x4],eax
   12ba8:	jmp    0x12bb8
   12baa:	mov    ecx,DWORD PTR [edx+0x4]
   12bad:	cmp    edx,DWORD PTR [ecx]
   12baf:	jne    0x12bb5
   12bb1:	mov    DWORD PTR [ecx],eax
   12bb3:	jmp    0x12bb8
   12bb5:	mov    DWORD PTR [ecx+0x8],eax
   12bb8:	mov    DWORD PTR [eax],edx
   12bba:	mov    DWORD PTR [edx+0x4],eax
   12bbd:	pop    ebp
   12bbe:	ret    0x4
   12bc1:	int3   
   12bc2:	int3   
   12bc3:	int3   
   12bc4:	int3   
   12bc5:	int3   
   12bc6:	mov    edi,edi
   12bc8:	push   ebp
   12bc9:	mov    ebp,esp
   12bcb:	mov    edx,DWORD PTR [ebp+0x8]
   12bce:	mov    eax,DWORD PTR [edx]
   12bd0:	push   esi
   12bd1:	mov    esi,DWORD PTR [eax+0x8]
   12bd4:	mov    DWORD PTR [edx],esi
   12bd6:	mov    esi,DWORD PTR [eax+0x8]
   12bd9:	cmp    esi,DWORD PTR ds:0x782b0
   12bdf:	je     0x12be4
   12be1:	mov    DWORD PTR [esi+0x4],edx
   12be4:	mov    esi,DWORD PTR [edx+0x4]
   12be7:	mov    DWORD PTR [eax+0x4],esi
   12bea:	mov    ecx,DWORD PTR [ecx+0x4]
   12bed:	pop    esi
   12bee:	cmp    edx,DWORD PTR [ecx+0x4]
   12bf1:	jne    0x12bf8
   12bf3:	mov    DWORD PTR [ecx+0x4],eax
   12bf6:	jmp    0x12c07
   12bf8:	mov    ecx,DWORD PTR [edx+0x4]
   12bfb:	cmp    edx,DWORD PTR [ecx+0x8]
   12bfe:	jne    0x12c05
   12c00:	mov    DWORD PTR [ecx+0x8],eax
   12c03:	jmp    0x12c07
   12c05:	mov    DWORD PTR [ecx],eax
   12c07:	mov    DWORD PTR [eax+0x8],edx
   12c0a:	mov    DWORD PTR [edx+0x4],eax
   12c0d:	pop    ebp
   12c0e:	ret    0x4
   12c11:	int3   
   12c12:	int3   
   12c13:	int3   
   12c14:	int3   
   12c15:	int3   
   12c16:	mov    edi,edi
   12c18:	push   ebp
   12c19:	mov    ebp,esp
   12c1b:	mov    eax,DWORD PTR [ecx+0x4]
   12c1e:	push   esi
   12c1f:	mov    esi,DWORD PTR [eax+0x4]
   12c22:	push   edi
   12c23:	mov    edi,eax
   12c25:	jmp    0x12c40
   12c27:	push   DWORD PTR [ebp+0x8]
   12c2a:	lea    eax,[esi+0x10]
   12c2d:	push   eax
   12c2e:	call   0x197f6
   12c33:	test   al,al
   12c35:	je     0x12c3c
   12c37:	mov    esi,DWORD PTR [esi+0x8]
   12c3a:	jmp    0x12c40
   12c3c:	mov    edi,esi
   12c3e:	mov    esi,DWORD PTR [esi]
   12c40:	cmp    esi,DWORD PTR ds:0x782bc
   12c46:	jne    0x12c27
   12c48:	mov    eax,edi
   12c4a:	pop    edi
   12c4b:	pop    esi
   12c4c:	pop    ebp
   12c4d:	ret    0x4
   12c50:	int3   
   12c51:	int3   
   12c52:	int3   
   12c53:	int3   
   12c54:	int3   
   12c55:	int3   
   12c56:	mov    edi,edi
   12c58:	push   ebp
   12c59:	mov    ebp,esp
   12c5b:	mov    eax,DWORD PTR [ecx+0x4]
   12c5e:	push   esi
   12c5f:	mov    esi,DWORD PTR [eax+0x4]
   12c62:	push   edi
   12c63:	mov    edi,eax
   12c65:	jmp    0x12c80
   12c67:	push   DWORD PTR [ebp+0x8]
   12c6a:	lea    eax,[esi+0xc]
   12c6d:	push   eax
   12c6e:	call   0x197f6
   12c73:	test   al,al
   12c75:	je     0x12c7c
   12c77:	mov    esi,DWORD PTR [esi+0x8]
   12c7a:	jmp    0x12c80
   12c7c:	mov    edi,esi
   12c7e:	mov    esi,DWORD PTR [esi]
   12c80:	cmp    esi,DWORD PTR ds:0x782c0
   12c86:	jne    0x12c67
   12c88:	mov    eax,edi
   12c8a:	pop    edi
   12c8b:	pop    esi
   12c8c:	pop    ebp
   12c8d:	ret    0x4
   12c90:	int3   
   12c91:	int3   
   12c92:	int3   
   12c93:	int3   
   12c94:	int3   
   12c95:	int3   
   12c96:	mov    edi,edi
   12c98:	push   ebp
   12c99:	mov    ebp,esp
   12c9b:	mov    eax,DWORD PTR [ecx+0x4]
   12c9e:	mov    ecx,DWORD PTR [eax+0x4]
   12ca1:	mov    edx,DWORD PTR ds:0x782c4
   12ca7:	cmp    ecx,edx
   12ca9:	je     0x12cc4
   12cab:	push   esi
   12cac:	mov    esi,DWORD PTR [ebp+0x8]
   12caf:	mov    esi,DWORD PTR [esi]
   12cb1:	cmp    DWORD PTR [ecx+0xc],esi
   12cb4:	jge    0x12cbb
   12cb6:	mov    ecx,DWORD PTR [ecx+0x8]
   12cb9:	jmp    0x12cbf
   12cbb:	mov    eax,ecx
   12cbd:	mov    ecx,DWORD PTR [ecx]
   12cbf:	cmp    ecx,edx
   12cc1:	jne    0x12cb1
   12cc3:	pop    esi
   12cc4:	pop    ebp
   12cc5:	ret    0x4
   12cc8:	int3   
   12cc9:	int3   
   12cca:	int3   
   12ccb:	int3   
   12ccc:	int3   
   12ccd:	int3   
   12cce:	mov    edi,edi
   12cd0:	push   esi
   12cd1:	mov    esi,ecx
   12cd3:	mov    ecx,DWORD PTR [esi]
   12cd5:	mov    eax,DWORD PTR [ecx+0x8]
   12cd8:	cmp    eax,DWORD PTR ds:0x782b8
   12cde:	je     0x12cec
   12ce0:	push   eax
   12ce1:	call   0x1111e
   12ce6:	jmp    0x12cfb
   12ce8:	mov    DWORD PTR [esi],eax
   12cea:	mov    ecx,eax
   12cec:	mov    eax,DWORD PTR [ecx+0x4]
   12cef:	cmp    ecx,DWORD PTR [eax+0x8]
   12cf2:	je     0x12ce8
   12cf4:	mov    ecx,DWORD PTR [esi]
   12cf6:	cmp    DWORD PTR [ecx+0x8],eax
   12cf9:	je     0x12cfd
   12cfb:	mov    DWORD PTR [esi],eax
   12cfd:	pop    esi
   12cfe:	ret    
   12cff:	int3   
   12d00:	int3   
   12d01:	int3   
   12d02:	int3   
   12d03:	int3   
   12d04:	mov    edi,edi
   12d06:	push   esi
   12d07:	mov    esi,ecx
   12d09:	mov    ecx,DWORD PTR [esi]
   12d0b:	cmp    DWORD PTR [ecx+0x10],0x0
   12d0f:	jne    0x12d1e
   12d11:	mov    eax,DWORD PTR [ecx+0x4]
   12d14:	cmp    DWORD PTR [eax+0x4],ecx
   12d17:	jne    0x12d1e
   12d19:	mov    eax,DWORD PTR [ecx+0x8]
   12d1c:	jmp    0x12d3b
   12d1e:	mov    eax,DWORD PTR [ecx]
   12d20:	cmp    eax,DWORD PTR ds:0x782b4
   12d26:	je     0x12d34
   12d28:	push   eax
   12d29:	call   0x110b8
   12d2e:	jmp    0x12d3b
   12d30:	mov    DWORD PTR [esi],eax
   12d32:	mov    ecx,eax
   12d34:	mov    eax,DWORD PTR [ecx+0x4]
   12d37:	cmp    ecx,DWORD PTR [eax]
   12d39:	je     0x12d30
   12d3b:	mov    DWORD PTR [esi],eax
   12d3d:	pop    esi
   12d3e:	ret    
   12d3f:	int3   
   12d40:	int3   
   12d41:	int3   
   12d42:	int3   
   12d43:	int3   
   12d44:	mov    edi,edi
   12d46:	push   esi
   12d47:	mov    esi,ecx
   12d49:	mov    ecx,DWORD PTR [esi]
   12d4b:	mov    eax,DWORD PTR [ecx+0x8]
   12d4e:	cmp    eax,DWORD PTR ds:0x782b4
   12d54:	je     0x12d62
   12d56:	push   eax
   12d57:	call   0x110da
   12d5c:	jmp    0x12d71
   12d5e:	mov    DWORD PTR [esi],eax
   12d60:	mov    ecx,eax
   12d62:	mov    eax,DWORD PTR [ecx+0x4]
   12d65:	cmp    ecx,DWORD PTR [eax+0x8]
   12d68:	je     0x12d5e
   12d6a:	mov    ecx,DWORD PTR [esi]
   12d6c:	cmp    DWORD PTR [ecx+0x8],eax
   12d6f:	je     0x12d73
   12d71:	mov    DWORD PTR [esi],eax
   12d73:	pop    esi
   12d74:	ret    
   12d75:	int3   
   12d76:	int3   
   12d77:	int3   
   12d78:	int3   
   12d79:	int3   
   12d7a:	mov    edi,edi
   12d7c:	push   ebp
   12d7d:	mov    ebp,esp
   12d7f:	mov    edx,DWORD PTR [ebp+0x8]
   12d82:	mov    eax,DWORD PTR [edx+0x8]
   12d85:	push   esi
   12d86:	mov    esi,DWORD PTR [eax]
   12d88:	mov    DWORD PTR [edx+0x8],esi
   12d8b:	mov    esi,DWORD PTR [eax]
   12d8d:	cmp    esi,DWORD PTR ds:0x782b4
   12d93:	je     0x12d98
   12d95:	mov    DWORD PTR [esi+0x4],edx
   12d98:	mov    esi,DWORD PTR [edx+0x4]
   12d9b:	mov    DWORD PTR [eax+0x4],esi
   12d9e:	mov    ecx,DWORD PTR [ecx+0x4]
   12da1:	pop    esi
   12da2:	cmp    edx,DWORD PTR [ecx+0x4]
   12da5:	jne    0x12dac
   12da7:	mov    DWORD PTR [ecx+0x4],eax
   12daa:	jmp    0x12dba
   12dac:	mov    ecx,DWORD PTR [edx+0x4]
   12daf:	cmp    edx,DWORD PTR [ecx]
   12db1:	jne    0x12db7
   12db3:	mov    DWORD PTR [ecx],eax
   12db5:	jmp    0x12dba
   12db7:	mov    DWORD PTR [ecx+0x8],eax
   12dba:	mov    DWORD PTR [eax],edx
   12dbc:	mov    DWORD PTR [edx+0x4],eax
   12dbf:	pop    ebp
   12dc0:	ret    0x4
   12dc3:	int3   
   12dc4:	int3   
   12dc5:	int3   
   12dc6:	int3   
   12dc7:	int3   
   12dc8:	mov    edi,edi
   12dca:	push   ebp
   12dcb:	mov    ebp,esp
   12dcd:	mov    edx,DWORD PTR [ebp+0x8]
   12dd0:	mov    eax,DWORD PTR [edx]
   12dd2:	push   esi
   12dd3:	mov    esi,DWORD PTR [eax+0x8]
   12dd6:	mov    DWORD PTR [edx],esi
   12dd8:	mov    esi,DWORD PTR [eax+0x8]
   12ddb:	cmp    esi,DWORD PTR ds:0x782b4
   12de1:	je     0x12de6
   12de3:	mov    DWORD PTR [esi+0x4],edx
   12de6:	mov    esi,DWORD PTR [edx+0x4]
   12de9:	mov    DWORD PTR [eax+0x4],esi
   12dec:	mov    ecx,DWORD PTR [ecx+0x4]
   12def:	pop    esi
   12df0:	cmp    edx,DWORD PTR [ecx+0x4]
   12df3:	jne    0x12dfa
   12df5:	mov    DWORD PTR [ecx+0x4],eax
   12df8:	jmp    0x12e09
   12dfa:	mov    ecx,DWORD PTR [edx+0x4]
   12dfd:	cmp    edx,DWORD PTR [ecx+0x8]
   12e00:	jne    0x12e07
   12e02:	mov    DWORD PTR [ecx+0x8],eax
   12e05:	jmp    0x12e09
   12e07:	mov    DWORD PTR [ecx],eax
   12e09:	mov    DWORD PTR [eax+0x8],edx
   12e0c:	mov    DWORD PTR [edx+0x4],eax
   12e0f:	pop    ebp
   12e10:	ret    0x4
   12e13:	int3   
   12e14:	int3   
   12e15:	int3   
   12e16:	int3   
   12e17:	int3   
   12e18:	mov    edi,edi
   12e1a:	push   ebp
   12e1b:	mov    ebp,esp
   12e1d:	mov    eax,DWORD PTR [ecx+0x4]
   12e20:	push   esi
   12e21:	mov    esi,DWORD PTR [eax+0x4]
   12e24:	push   edi
   12e25:	mov    edi,eax
   12e27:	jmp    0x12e42
   12e29:	push   DWORD PTR [ebp+0x8]
   12e2c:	lea    eax,[esi+0x10]
   12e2f:	push   eax
   12e30:	call   0x197f6
   12e35:	test   al,al
   12e37:	je     0x12e3e
   12e39:	mov    esi,DWORD PTR [esi+0x8]
   12e3c:	jmp    0x12e42
   12e3e:	mov    edi,esi
   12e40:	mov    esi,DWORD PTR [esi]
   12e42:	cmp    esi,DWORD PTR ds:0x782b8
   12e48:	jne    0x12e29
   12e4a:	mov    eax,edi
   12e4c:	pop    edi
   12e4d:	pop    esi
   12e4e:	pop    ebp
   12e4f:	ret    0x4
   12e52:	int3   
   12e53:	int3   
   12e54:	int3   
   12e55:	int3   
   12e56:	int3   
   12e57:	int3   
   12e58:	mov    edi,edi
   12e5a:	push   ebp
   12e5b:	mov    ebp,esp
   12e5d:	mov    edx,DWORD PTR [ebp+0x8]
   12e60:	mov    eax,DWORD PTR [edx+0x8]
   12e63:	push   esi
   12e64:	mov    esi,DWORD PTR [eax]
   12e66:	mov    DWORD PTR [edx+0x8],esi
   12e69:	mov    esi,DWORD PTR [eax]
   12e6b:	cmp    esi,DWORD PTR ds:0x782b8
   12e71:	je     0x12e76
   12e73:	mov    DWORD PTR [esi+0x4],edx
   12e76:	mov    esi,DWORD PTR [edx+0x4]
   12e79:	mov    DWORD PTR [eax+0x4],esi
   12e7c:	mov    ecx,DWORD PTR [ecx+0x4]
   12e7f:	pop    esi
   12e80:	cmp    edx,DWORD PTR [ecx+0x4]
   12e83:	jne    0x12e8a
   12e85:	mov    DWORD PTR [ecx+0x4],eax
   12e88:	jmp    0x12e98
   12e8a:	mov    ecx,DWORD PTR [edx+0x4]
   12e8d:	cmp    edx,DWORD PTR [ecx]
   12e8f:	jne    0x12e95
   12e91:	mov    DWORD PTR [ecx],eax
   12e93:	jmp    0x12e98
   12e95:	mov    DWORD PTR [ecx+0x8],eax
   12e98:	mov    DWORD PTR [eax],edx
   12e9a:	mov    DWORD PTR [edx+0x4],eax
   12e9d:	pop    ebp
   12e9e:	ret    0x4
   12ea1:	int3   
   12ea2:	int3   
   12ea3:	int3   
   12ea4:	int3   
   12ea5:	int3   
   12ea6:	mov    edi,edi
   12ea8:	push   ebp
   12ea9:	mov    ebp,esp
   12eab:	mov    edx,DWORD PTR [ebp+0x8]
   12eae:	mov    eax,DWORD PTR [edx]
   12eb0:	push   esi
   12eb1:	mov    esi,DWORD PTR [eax+0x8]
   12eb4:	mov    DWORD PTR [edx],esi
   12eb6:	mov    esi,DWORD PTR [eax+0x8]
   12eb9:	cmp    esi,DWORD PTR ds:0x782b8
   12ebf:	je     0x12ec4
   12ec1:	mov    DWORD PTR [esi+0x4],edx
   12ec4:	mov    esi,DWORD PTR [edx+0x4]
   12ec7:	mov    DWORD PTR [eax+0x4],esi
   12eca:	mov    ecx,DWORD PTR [ecx+0x4]
   12ecd:	pop    esi
   12ece:	cmp    edx,DWORD PTR [ecx+0x4]
   12ed1:	jne    0x12ed8
   12ed3:	mov    DWORD PTR [ecx+0x4],eax
   12ed6:	jmp    0x12ee7
   12ed8:	mov    ecx,DWORD PTR [edx+0x4]
   12edb:	cmp    edx,DWORD PTR [ecx+0x8]
   12ede:	jne    0x12ee5
   12ee0:	mov    DWORD PTR [ecx+0x8],eax
   12ee3:	jmp    0x12ee7
   12ee5:	mov    DWORD PTR [ecx],eax
   12ee7:	mov    DWORD PTR [eax+0x8],edx
   12eea:	mov    DWORD PTR [edx+0x4],eax
   12eed:	pop    ebp
   12eee:	ret    0x4
   12ef1:	int3   
   12ef2:	int3   
   12ef3:	int3   
   12ef4:	int3   
   12ef5:	int3   
   12ef6:	mov    edi,edi
   12ef8:	push   ebp
   12ef9:	mov    ebp,esp
   12efb:	mov    eax,DWORD PTR [ecx+0x4]
   12efe:	mov    ecx,DWORD PTR [eax+0x4]
   12f01:	mov    edx,DWORD PTR ds:0x782b0
   12f07:	cmp    ecx,edx
   12f09:	je     0x12f24
   12f0b:	push   esi
   12f0c:	mov    esi,DWORD PTR [ebp+0x8]
   12f0f:	mov    esi,DWORD PTR [esi]
   12f11:	cmp    esi,DWORD PTR [ecx+0xc]
   12f14:	jae    0x12f1c
   12f16:	mov    eax,ecx
   12f18:	mov    ecx,DWORD PTR [ecx]
   12f1a:	jmp    0x12f1f
   12f1c:	mov    ecx,DWORD PTR [ecx+0x8]
   12f1f:	cmp    ecx,edx
   12f21:	jne    0x12f11
   12f23:	pop    esi
   12f24:	pop    ebp
   12f25:	ret    0x4
   12f28:	int3   
   12f29:	int3   
   12f2a:	int3   
   12f2b:	int3   
   12f2c:	int3   
   12f2d:	int3   
   12f2e:	mov    edi,edi
   12f30:	push   ebp
   12f31:	mov    ebp,esp
   12f33:	mov    eax,DWORD PTR [ecx+0x4]
   12f36:	push   esi
   12f37:	mov    esi,DWORD PTR [eax+0x4]
   12f3a:	push   edi
   12f3b:	mov    edi,eax
   12f3d:	jmp    0x12f58
   12f3f:	lea    eax,[esi+0x10]
   12f42:	push   eax
   12f43:	push   DWORD PTR [ebp+0x8]
   12f46:	call   0x197f6
   12f4b:	test   al,al
   12f4d:	je     0x12f55
   12f4f:	mov    edi,esi
   12f51:	mov    esi,DWORD PTR [esi]
   12f53:	jmp    0x12f58
   12f55:	mov    esi,DWORD PTR [esi+0x8]
   12f58:	cmp    esi,DWORD PTR ds:0x782bc
   12f5e:	jne    0x12f3f
   12f60:	mov    eax,edi
   12f62:	pop    edi
   12f63:	pop    esi
   12f64:	pop    ebp
   12f65:	ret    0x4
   12f68:	int3   
   12f69:	int3   
   12f6a:	int3   
   12f6b:	int3   
   12f6c:	int3   
   12f6d:	int3   
   12f6e:	mov    edi,edi
   12f70:	push   ebp
   12f71:	mov    ebp,esp
   12f73:	mov    edx,DWORD PTR [ebp+0x8]
   12f76:	mov    eax,DWORD PTR [edx+0x8]
   12f79:	push   esi
   12f7a:	mov    esi,DWORD PTR [eax]
   12f7c:	mov    DWORD PTR [edx+0x8],esi
   12f7f:	mov    esi,DWORD PTR [eax]
   12f81:	cmp    esi,DWORD PTR ds:0x782c0
   12f87:	je     0x12f8c
   12f89:	mov    DWORD PTR [esi+0x4],edx
   12f8c:	mov    esi,DWORD PTR [edx+0x4]
   12f8f:	mov    DWORD PTR [eax+0x4],esi
   12f92:	mov    ecx,DWORD PTR [ecx+0x4]
   12f95:	pop    esi
   12f96:	cmp    edx,DWORD PTR [ecx+0x4]
   12f99:	jne    0x12fa0
   12f9b:	mov    DWORD PTR [ecx+0x4],eax
   12f9e:	jmp    0x12fae
   12fa0:	mov    ecx,DWORD PTR [edx+0x4]
   12fa3:	cmp    edx,DWORD PTR [ecx]
   12fa5:	jne    0x12fab
   12fa7:	mov    DWORD PTR [ecx],eax
   12fa9:	jmp    0x12fae
   12fab:	mov    DWORD PTR [ecx+0x8],eax
   12fae:	mov    DWORD PTR [eax],edx
   12fb0:	mov    DWORD PTR [edx+0x4],eax
   12fb3:	pop    ebp
   12fb4:	ret    0x4
   12fb7:	int3   
   12fb8:	int3   
   12fb9:	int3   
   12fba:	int3   
   12fbb:	int3   
   12fbc:	mov    edi,edi
   12fbe:	push   ebp
   12fbf:	mov    ebp,esp
   12fc1:	mov    edx,DWORD PTR [ebp+0x8]
   12fc4:	mov    eax,DWORD PTR [edx]
   12fc6:	push   esi
   12fc7:	mov    esi,DWORD PTR [eax+0x8]
   12fca:	mov    DWORD PTR [edx],esi
   12fcc:	mov    esi,DWORD PTR [eax+0x8]
   12fcf:	cmp    esi,DWORD PTR ds:0x782c0
   12fd5:	je     0x12fda
   12fd7:	mov    DWORD PTR [esi+0x4],edx
   12fda:	mov    esi,DWORD PTR [edx+0x4]
   12fdd:	mov    DWORD PTR [eax+0x4],esi
   12fe0:	mov    ecx,DWORD PTR [ecx+0x4]
   12fe3:	pop    esi
   12fe4:	cmp    edx,DWORD PTR [ecx+0x4]
   12fe7:	jne    0x12fee
   12fe9:	mov    DWORD PTR [ecx+0x4],eax
   12fec:	jmp    0x12ffd
   12fee:	mov    ecx,DWORD PTR [edx+0x4]
   12ff1:	cmp    edx,DWORD PTR [ecx+0x8]
   12ff4:	jne    0x12ffb
   12ff6:	mov    DWORD PTR [ecx+0x8],eax
   12ff9:	jmp    0x12ffd
   12ffb:	mov    DWORD PTR [ecx],eax
   12ffd:	mov    DWORD PTR [eax+0x8],edx
   13000:	mov    DWORD PTR [edx+0x4],eax
   13003:	pop    ebp
   13004:	ret    0x4
   13007:	int3   
   13008:	int3   
   13009:	int3   
   1300a:	int3   
   1300b:	int3   
   1300c:	mov    edi,edi
   1300e:	push   ebp
   1300f:	mov    ebp,esp
   13011:	mov    eax,DWORD PTR [ecx+0x4]
   13014:	push   esi
   13015:	mov    esi,DWORD PTR [eax+0x4]
   13018:	push   edi
   13019:	mov    edi,eax
   1301b:	jmp    0x13036
   1301d:	lea    eax,[esi+0xc]
   13020:	push   eax
   13021:	push   DWORD PTR [ebp+0x8]
   13024:	call   0x197f6
   13029:	test   al,al
   1302b:	je     0x13033
   1302d:	mov    edi,esi
   1302f:	mov    esi,DWORD PTR [esi]
   13031:	jmp    0x13036
   13033:	mov    esi,DWORD PTR [esi+0x8]
   13036:	cmp    esi,DWORD PTR ds:0x782c0
   1303c:	jne    0x1301d
   1303e:	mov    eax,edi
   13040:	pop    edi
   13041:	pop    esi
   13042:	pop    ebp
   13043:	ret    0x4
   13046:	int3   
   13047:	int3   
   13048:	int3   
   13049:	int3   
   1304a:	int3   
   1304b:	int3   
   1304c:	mov    edi,edi
   1304e:	push   ebp
   1304f:	mov    ebp,esp
   13051:	mov    edx,DWORD PTR [ebp+0x8]
   13054:	mov    eax,DWORD PTR [edx+0x8]
   13057:	push   esi
   13058:	mov    esi,DWORD PTR [eax]
   1305a:	mov    DWORD PTR [edx+0x8],esi
   1305d:	mov    esi,DWORD PTR [eax]
   1305f:	cmp    esi,DWORD PTR ds:0x782c4
   13065:	je     0x1306a
   13067:	mov    DWORD PTR [esi+0x4],edx
   1306a:	mov    esi,DWORD PTR [edx+0x4]
   1306d:	mov    DWORD PTR [eax+0x4],esi
   13070:	mov    ecx,DWORD PTR [ecx+0x4]
   13073:	pop    esi
   13074:	cmp    edx,DWORD PTR [ecx+0x4]
   13077:	jne    0x1307e
   13079:	mov    DWORD PTR [ecx+0x4],eax
   1307c:	jmp    0x1308c
   1307e:	mov    ecx,DWORD PTR [edx+0x4]
   13081:	cmp    edx,DWORD PTR [ecx]
   13083:	jne    0x13089
   13085:	mov    DWORD PTR [ecx],eax
   13087:	jmp    0x1308c
   13089:	mov    DWORD PTR [ecx+0x8],eax
   1308c:	mov    DWORD PTR [eax],edx
   1308e:	mov    DWORD PTR [edx+0x4],eax
   13091:	pop    ebp
   13092:	ret    0x4
   13095:	int3   
   13096:	int3   
   13097:	int3   
   13098:	int3   
   13099:	int3   
   1309a:	mov    edi,edi
   1309c:	push   ebp
   1309d:	mov    ebp,esp
   1309f:	mov    edx,DWORD PTR [ebp+0x8]
   130a2:	mov    eax,DWORD PTR [edx]
   130a4:	push   esi
   130a5:	mov    esi,DWORD PTR [eax+0x8]
   130a8:	mov    DWORD PTR [edx],esi
   130aa:	mov    esi,DWORD PTR [eax+0x8]
   130ad:	cmp    esi,DWORD PTR ds:0x782c4
   130b3:	je     0x130b8
   130b5:	mov    DWORD PTR [esi+0x4],edx
   130b8:	mov    esi,DWORD PTR [edx+0x4]
   130bb:	mov    DWORD PTR [eax+0x4],esi
   130be:	mov    ecx,DWORD PTR [ecx+0x4]
   130c1:	pop    esi
   130c2:	cmp    edx,DWORD PTR [ecx+0x4]
   130c5:	jne    0x130cc
   130c7:	mov    DWORD PTR [ecx+0x4],eax
   130ca:	jmp    0x130db
   130cc:	mov    ecx,DWORD PTR [edx+0x4]
   130cf:	cmp    edx,DWORD PTR [ecx+0x8]
   130d2:	jne    0x130d9
   130d4:	mov    DWORD PTR [ecx+0x8],eax
   130d7:	jmp    0x130db
   130d9:	mov    DWORD PTR [ecx],eax
   130db:	mov    DWORD PTR [eax+0x8],edx
   130de:	mov    DWORD PTR [edx+0x4],eax
   130e1:	pop    ebp
   130e2:	ret    0x4
   130e5:	int3   
   130e6:	int3   
   130e7:	int3   
   130e8:	int3   
   130e9:	int3   
   130ea:	mov    edi,edi
   130ec:	push   ebp
   130ed:	mov    ebp,esp
   130ef:	mov    eax,DWORD PTR [ecx+0x4]
   130f2:	mov    ecx,DWORD PTR [eax+0x4]
   130f5:	mov    edx,DWORD PTR ds:0x782c4
   130fb:	cmp    ecx,edx
   130fd:	je     0x13118
   130ff:	push   esi
   13100:	mov    esi,DWORD PTR [ebp+0x8]
   13103:	mov    esi,DWORD PTR [esi]
   13105:	cmp    esi,DWORD PTR [ecx+0xc]
   13108:	jge    0x13110
   1310a:	mov    eax,ecx
   1310c:	mov    ecx,DWORD PTR [ecx]
   1310e:	jmp    0x13113
   13110:	mov    ecx,DWORD PTR [ecx+0x8]
   13113:	cmp    ecx,edx
   13115:	jne    0x13105
   13117:	pop    esi
   13118:	pop    ebp
   13119:	ret    0x4
   1311c:	int3   
   1311d:	int3   
   1311e:	int3   
   1311f:	int3   
   13120:	int3   
   13121:	int3   
   13122:	mov    edi,edi
   13124:	push   ebp
   13125:	mov    ebp,esp
   13127:	mov    eax,DWORD PTR [ecx+0x4]
   1312a:	push   esi
   1312b:	mov    esi,DWORD PTR [eax+0x4]
   1312e:	push   edi
   1312f:	mov    edi,eax
   13131:	jmp    0x1314c
   13133:	push   DWORD PTR [ebp+0x8]
   13136:	lea    eax,[esi+0xc]
   13139:	push   eax
   1313a:	call   0x19826
   1313f:	test   al,al
   13141:	je     0x13148
   13143:	mov    esi,DWORD PTR [esi+0x8]
   13146:	jmp    0x1314c
   13148:	mov    edi,esi
   1314a:	mov    esi,DWORD PTR [esi]
   1314c:	cmp    esi,DWORD PTR ds:0x782cc
   13152:	jne    0x13133
   13154:	mov    eax,edi
   13156:	pop    edi
   13157:	pop    esi
   13158:	pop    ebp
   13159:	ret    0x4
   1315c:	int3   
   1315d:	int3   
   1315e:	int3   
   1315f:	int3   
   13160:	int3   
   13161:	int3   
   13162:	mov    edi,edi
   13164:	push   ebp
   13165:	mov    ebp,esp
   13167:	mov    edx,DWORD PTR [ebp+0x8]
   1316a:	mov    eax,DWORD PTR [edx+0x8]
   1316d:	push   esi
   1316e:	mov    esi,DWORD PTR [eax]
   13170:	mov    DWORD PTR [edx+0x8],esi
   13173:	mov    esi,DWORD PTR [eax]
   13175:	cmp    esi,DWORD PTR ds:0x782cc
   1317b:	je     0x13180
   1317d:	mov    DWORD PTR [esi+0x4],edx
   13180:	mov    esi,DWORD PTR [edx+0x4]
   13183:	mov    DWORD PTR [eax+0x4],esi
   13186:	mov    ecx,DWORD PTR [ecx+0x4]
   13189:	pop    esi
   1318a:	cmp    edx,DWORD PTR [ecx+0x4]
   1318d:	jne    0x13194
   1318f:	mov    DWORD PTR [ecx+0x4],eax
   13192:	jmp    0x131a2
   13194:	mov    ecx,DWORD PTR [edx+0x4]
   13197:	cmp    edx,DWORD PTR [ecx]
   13199:	jne    0x1319f
   1319b:	mov    DWORD PTR [ecx],eax
   1319d:	jmp    0x131a2
   1319f:	mov    DWORD PTR [ecx+0x8],eax
   131a2:	mov    DWORD PTR [eax],edx
   131a4:	mov    DWORD PTR [edx+0x4],eax
   131a7:	pop    ebp
   131a8:	ret    0x4
   131ab:	int3   
   131ac:	int3   
   131ad:	int3   
   131ae:	int3   
   131af:	int3   
   131b0:	mov    edi,edi
   131b2:	push   ebp
   131b3:	mov    ebp,esp
   131b5:	mov    edx,DWORD PTR [ebp+0x8]
   131b8:	mov    eax,DWORD PTR [edx]
   131ba:	push   esi
   131bb:	mov    esi,DWORD PTR [eax+0x8]
   131be:	mov    DWORD PTR [edx],esi
   131c0:	mov    esi,DWORD PTR [eax+0x8]
   131c3:	cmp    esi,DWORD PTR ds:0x782cc
   131c9:	je     0x131ce
   131cb:	mov    DWORD PTR [esi+0x4],edx
   131ce:	mov    esi,DWORD PTR [edx+0x4]
   131d1:	mov    DWORD PTR [eax+0x4],esi
   131d4:	mov    ecx,DWORD PTR [ecx+0x4]
   131d7:	pop    esi
   131d8:	cmp    edx,DWORD PTR [ecx+0x4]
   131db:	jne    0x131e2
   131dd:	mov    DWORD PTR [ecx+0x4],eax
   131e0:	jmp    0x131f1
   131e2:	mov    ecx,DWORD PTR [edx+0x4]
   131e5:	cmp    edx,DWORD PTR [ecx+0x8]
   131e8:	jne    0x131ef
   131ea:	mov    DWORD PTR [ecx+0x8],eax
   131ed:	jmp    0x131f1
   131ef:	mov    DWORD PTR [ecx],eax
   131f1:	mov    DWORD PTR [eax+0x8],edx
   131f4:	mov    DWORD PTR [edx+0x4],eax
   131f7:	pop    ebp
   131f8:	ret    0x4
   131fb:	int3   
   131fc:	int3   
   131fd:	int3   
   131fe:	int3   
   131ff:	int3   
   13200:	mov    edi,edi
   13202:	push   esi
   13203:	mov    esi,ecx
   13205:	mov    ecx,DWORD PTR [esi]
   13207:	cmp    DWORD PTR [ecx+0x1c],0x0
   1320b:	jne    0x1321a
   1320d:	mov    eax,DWORD PTR [ecx+0x4]
   13210:	cmp    DWORD PTR [eax+0x4],ecx
   13213:	jne    0x1321a
   13215:	mov    eax,DWORD PTR [ecx+0x8]
   13218:	jmp    0x13237
   1321a:	mov    eax,DWORD PTR [ecx]
   1321c:	cmp    eax,DWORD PTR ds:0x782cc
   13222:	je     0x13230
   13224:	push   eax
   13225:	call   0x1146a
   1322a:	jmp    0x13237
   1322c:	mov    DWORD PTR [esi],eax
   1322e:	mov    ecx,eax
   13230:	mov    eax,DWORD PTR [ecx+0x4]
   13233:	cmp    ecx,DWORD PTR [eax]
   13235:	je     0x1322c
   13237:	mov    DWORD PTR [esi],eax
   13239:	pop    esi
   1323a:	ret    
   1323b:	int3   
   1323c:	int3   
   1323d:	int3   
   1323e:	int3   
   1323f:	int3   
   13240:	mov    edi,edi
   13242:	push   ebp
   13243:	mov    ebp,esp
   13245:	mov    eax,DWORD PTR [ecx+0x4]
   13248:	mov    ecx,DWORD PTR [eax+0x4]
   1324b:	mov    edx,DWORD PTR ds:0x782b4
   13251:	cmp    ecx,edx
   13253:	je     0x1326e
   13255:	push   esi
   13256:	mov    esi,DWORD PTR [ebp+0x8]
   13259:	mov    esi,DWORD PTR [esi]
   1325b:	cmp    DWORD PTR [ecx+0xc],esi
   1325e:	jae    0x13265
   13260:	mov    ecx,DWORD PTR [ecx+0x8]
   13263:	jmp    0x13269
   13265:	mov    eax,ecx
   13267:	mov    ecx,DWORD PTR [ecx]
   13269:	cmp    ecx,edx
   1326b:	jne    0x1325b
   1326d:	pop    esi
   1326e:	pop    ebp
   1326f:	ret    0x4
   13272:	int3   
   13273:	int3   
   13274:	int3   
   13275:	int3   
   13276:	int3   
   13277:	int3   
   13278:	mov    edi,edi
   1327a:	push   ebp
   1327b:	mov    ebp,esp
   1327d:	mov    eax,DWORD PTR [ecx+0x4]
   13280:	mov    ecx,DWORD PTR [eax+0x4]
   13283:	mov    edx,DWORD PTR ds:0x782b4
   13289:	cmp    ecx,edx
   1328b:	je     0x132a6
   1328d:	push   esi
   1328e:	mov    esi,DWORD PTR [ebp+0x8]
   13291:	mov    esi,DWORD PTR [esi]
   13293:	cmp    esi,DWORD PTR [ecx+0xc]
   13296:	jae    0x1329e
   13298:	mov    eax,ecx
   1329a:	mov    ecx,DWORD PTR [ecx]
   1329c:	jmp    0x132a1
   1329e:	mov    ecx,DWORD PTR [ecx+0x8]
   132a1:	cmp    ecx,edx
   132a3:	jne    0x13293
   132a5:	pop    esi
   132a6:	pop    ebp
   132a7:	ret    0x4
   132aa:	int3   
   132ab:	int3   
   132ac:	int3   
   132ad:	int3   
   132ae:	int3   
   132af:	int3   
   132b0:	mov    edi,edi
   132b2:	push   ebp
   132b3:	mov    ebp,esp
   132b5:	cmp    DWORD PTR [ebp+0x8],0x0
   132b9:	jge    0x132bf
   132bb:	and    DWORD PTR [ebp+0x8],0x0
   132bf:	push   DWORD PTR [ebp+0x8]
   132c2:	call   0x11d78
   132c7:	pop    ecx
   132c8:	pop    ebp
   132c9:	ret    0x8
   132cc:	int3   
   132cd:	int3   
   132ce:	int3   
   132cf:	int3   
   132d0:	int3   
   132d1:	int3   
   132d2:	mov    edi,edi
   132d4:	push   ebp
   132d5:	mov    ebp,esp
   132d7:	mov    ecx,DWORD PTR [ebp+0x8]
   132da:	push   0x0
   132dc:	call   0x114ea
   132e1:	pop    ebp
   132e2:	ret    0x4
   132e5:	int3   
   132e6:	int3   
   132e7:	int3   
   132e8:	int3   
   132e9:	int3   
   132ea:	mov    edi,edi
   132ec:	push   ebp
   132ed:	mov    ebp,esp
   132ef:	push   esi
   132f0:	mov    esi,ecx
   132f2:	call   0x12998
   132f7:	test   BYTE PTR [ebp+0x8],0x1
   132fb:	je     0x13304
   132fd:	push   esi
   132fe:	call   0x1da56
   13303:	pop    ecx
   13304:	mov    eax,esi
   13306:	pop    esi
   13307:	pop    ebp
   13308:	ret    0x4
   1330b:	int3   
   1330c:	int3   
   1330d:	int3   
   1330e:	int3   
   1330f:	int3   
   13310:	mov    edi,edi
   13312:	push   ebp
   13313:	mov    ebp,esp
   13315:	mov    eax,DWORD PTR [ebp+0x8]
   13318:	push   esi
   13319:	mov    esi,ecx
   1331b:	mov    ecx,DWORD PTR [eax]
   1331d:	add    eax,0x4
   13320:	mov    DWORD PTR [esi],ecx
   13322:	push   eax
   13323:	lea    ecx,[esi+0x4]
   13326:	call   0x11de2
   1332b:	mov    eax,esi
   1332d:	pop    esi
   1332e:	pop    ebp
   1332f:	ret    0x4
   13332:	int3   
   13333:	int3   
   13334:	int3   
   13335:	int3   
   13336:	int3   
   13337:	int3   
   13338:	mov    edi,edi
   1333a:	push   ebp
   1333b:	mov    ebp,esp
   1333d:	push   esi
   1333e:	mov    esi,ecx
   13340:	mov    ecx,DWORD PTR [esi+0x4]
   13343:	test   ecx,ecx
   13345:	je     0x1334c
   13347:	call   0x10990
   1334c:	test   BYTE PTR [ebp+0x8],0x1
   13350:	je     0x13359
   13352:	push   esi
   13353:	call   0x1da56
   13358:	pop    ecx
   13359:	mov    eax,esi
   1335b:	pop    esi
   1335c:	pop    ebp
   1335d:	ret    0x4
   13360:	int3   
   13361:	int3   
   13362:	int3   
   13363:	int3   
   13364:	int3   
   13365:	int3   
   13366:	mov    edi,edi
   13368:	push   ebp
   13369:	mov    ebp,esp
   1336b:	push   edi
   1336c:	mov    edi,DWORD PTR [ebp+0xc]
   1336f:	cmp    DWORD PTR [ebp+0x8],edi
   13372:	je     0x13388
   13374:	push   esi
   13375:	mov    esi,DWORD PTR [ebp+0x10]
   13378:	inc    DWORD PTR [esi]
   1337a:	lea    ecx,[ebp+0x8]
   1337d:	call   0x11180
   13382:	cmp    DWORD PTR [ebp+0x8],edi
   13385:	jne    0x13378
   13387:	pop    esi
   13388:	pop    edi
   13389:	pop    ebp
   1338a:	ret    
   1338b:	int3   
   1338c:	int3   
   1338d:	int3   
   1338e:	int3   
   1338f:	int3   
   13390:	mov    edi,edi
   13392:	push   ebp
   13393:	mov    ebp,esp
   13395:	push   edi
   13396:	mov    edi,DWORD PTR [ebp+0xc]
   13399:	cmp    DWORD PTR [ebp+0x8],edi
   1339c:	je     0x133b2
   1339e:	push   esi
   1339f:	mov    esi,DWORD PTR [ebp+0x10]
   133a2:	inc    DWORD PTR [esi]
   133a4:	lea    ecx,[ebp+0x8]
   133a7:	call   0x113fe
   133ac:	cmp    DWORD PTR [ebp+0x8],edi
   133af:	jne    0x133a2
   133b1:	pop    esi
   133b2:	pop    edi
   133b3:	pop    ebp
   133b4:	ret    
   133b5:	int3   
   133b6:	int3   
   133b7:	int3   
   133b8:	int3   
   133b9:	int3   
   133ba:	mov    edi,edi
   133bc:	push   ebp
   133bd:	mov    ebp,esp
   133bf:	push   edi
   133c0:	mov    edi,DWORD PTR [ebp+0xc]
   133c3:	cmp    DWORD PTR [ebp+0x8],edi
   133c6:	je     0x133dc
   133c8:	push   esi
   133c9:	mov    esi,DWORD PTR [ebp+0x10]
   133cc:	inc    DWORD PTR [esi]
   133ce:	lea    ecx,[ebp+0x8]
   133d1:	call   0x11434
   133d6:	cmp    DWORD PTR [ebp+0x8],edi
   133d9:	jne    0x133cc
   133db:	pop    esi
   133dc:	pop    edi
   133dd:	pop    ebp
   133de:	ret    
   133df:	int3   
   133e0:	int3   
   133e1:	int3   
   133e2:	int3   
   133e3:	int3   
   133e4:	mov    edi,edi
   133e6:	push   ebp
   133e7:	mov    ebp,esp
   133e9:	push   edi
   133ea:	mov    edi,DWORD PTR [ebp+0xc]
   133ed:	cmp    DWORD PTR [ebp+0x8],edi
   133f0:	je     0x13406
   133f2:	push   esi
   133f3:	mov    esi,DWORD PTR [ebp+0x10]
   133f6:	inc    DWORD PTR [esi]
   133f8:	lea    ecx,[ebp+0x8]
   133fb:	call   0x12d44
   13400:	cmp    DWORD PTR [ebp+0x8],edi
   13403:	jne    0x133f6
   13405:	pop    esi
   13406:	pop    edi
   13407:	pop    ebp
   13408:	ret    
   13409:	int3   
   1340a:	int3   
   1340b:	int3   
   1340c:	int3   
   1340d:	int3   
   1340e:	mov    edi,edi
   13410:	push   ebp
   13411:	mov    ebp,esp
   13413:	push   esi
   13414:	push   0xc
   13416:	mov    esi,ecx
   13418:	call   0x11d78
   1341d:	pop    ecx
   1341e:	test   eax,eax
   13420:	je     0x13431
   13422:	push   DWORD PTR [ebp+0xc]
   13425:	mov    ecx,eax
   13427:	push   DWORD PTR [ebp+0x8]
   1342a:	call   0x11e30
   1342f:	jmp    0x13433
   13431:	xor    eax,eax
   13433:	mov    DWORD PTR [esi],eax
   13435:	mov    eax,esi
   13437:	pop    esi
   13438:	pop    ebp
   13439:	ret    0x8
   1343c:	int3   
   1343d:	int3   
   1343e:	int3   
   1343f:	int3   
   13440:	int3   
   13441:	int3   
   13442:	mov    edi,edi
   13444:	push   ebp
   13445:	mov    ebp,esp
   13447:	sub    esp,0x18
   1344a:	lea    eax,[ebp-0x18]
   1344d:	push   eax
   1344e:	push   DWORD PTR [ebp+0x8]
   13451:	call   0x10e50
   13456:	test   al,al
   13458:	je     0x134c6
   1345a:	lea    eax,[ebp-0x4]
   1345d:	push   eax
   1345e:	push   DWORD PTR [ebp+0xc]
   13461:	call   0x11b4c
   13466:	call   eax
   13468:	test   eax,eax
   1346a:	jl     0x134c6
   1346c:	push   esi
   1346d:	push   0x5
   1346f:	call   0x127e0
   13474:	mov    esi,eax
   13476:	test   esi,esi
   13478:	je     0x134c5
   1347a:	mov    edx,DWORD PTR [ebp+0x10]
   1347d:	cmp    DWORD PTR [esi+0x44],edx
   13480:	je     0x1348f
   13482:	mov    ecx,DWORD PTR [eax]
   13484:	test   ecx,ecx
   13486:	je     0x134b3
   13488:	add    eax,ecx
   1348a:	cmp    DWORD PTR [eax+0x44],edx
   1348d:	jne    0x13482
   1348f:	cmp    DWORD PTR [eax+0x4],0x0
   13493:	je     0x134b3
   13495:	mov    ecx,DWORD PTR [eax+0xd8]
   1349b:	mov    eax,DWORD PTR [eax+0xdc]
   134a1:	mov    DWORD PTR [ebp-0x14],eax
   134a4:	lea    eax,[ebp-0x18]
   134a7:	push   eax
   134a8:	push   DWORD PTR [ebp+0x8]
   134ab:	mov    DWORD PTR [ebp-0x18],ecx
   134ae:	call   0x10e9e
   134b3:	mov    ecx,DWORD PTR [ebp-0x4]
   134b6:	call   DWORD PTR ds:0x1f05c
   134bc:	push   0x0
   134be:	push   esi
   134bf:	call   DWORD PTR ds:0x1f014
   134c5:	pop    esi
   134c6:	leave  
   134c7:	ret    0x10
   134ca:	int3   
   134cb:	int3   
   134cc:	int3   
   134cd:	int3   
   134ce:	int3   
   134cf:	int3   
   134d0:	mov    edi,edi
   134d2:	push   ebp
   134d3:	mov    ebp,esp
   134d5:	push   esi
   134d6:	push   DWORD PTR [ebp+0xc]
   134d9:	mov    esi,ecx
   134db:	push   DWORD PTR [ebp+0x8]
   134de:	call   0x129d2
   134e3:	mov    eax,esi
   134e5:	pop    esi
   134e6:	pop    ebp
   134e7:	ret    0x8
   134ea:	int3   
   134eb:	int3   
   134ec:	int3   
   134ed:	int3   
   134ee:	int3   
   134ef:	int3   
   134f0:	mov    edi,edi
   134f2:	push   ebp
   134f3:	mov    ebp,esp
   134f5:	mov    eax,DWORD PTR [ebp+0x8]
   134f8:	push   esi
   134f9:	push   DWORD PTR [eax+0x4]
   134fc:	mov    esi,ecx
   134fe:	push   DWORD PTR [eax]
   13500:	call   0x129d2
   13505:	mov    eax,esi
   13507:	pop    esi
   13508:	pop    ebp
   13509:	ret    0x4
   1350c:	int3   
   1350d:	int3   
   1350e:	int3   
   1350f:	int3   
   13510:	int3   
   13511:	int3   
   13512:	mov    edi,edi
   13514:	push   ebp
   13515:	mov    ebp,esp
   13517:	push   esi
   13518:	push   DWORD PTR [ebp+0xc]
   1351b:	mov    esi,ecx
   1351d:	push   DWORD PTR [ebp+0x8]
   13520:	call   0x12ab2
   13525:	mov    eax,esi
   13527:	pop    esi
   13528:	pop    ebp
   13529:	ret    0x8
   1352c:	int3   
   1352d:	int3   
   1352e:	int3   
   1352f:	int3   
   13530:	int3   
   13531:	int3   
   13532:	mov    edi,edi
   13534:	push   ebp
   13535:	mov    ebp,esp
   13537:	mov    eax,DWORD PTR [ebp+0x8]
   1353a:	push   esi
   1353b:	push   DWORD PTR [eax+0x4]
   1353e:	mov    esi,ecx
   13540:	push   DWORD PTR [eax]
   13542:	call   0x12ab2
   13547:	mov    eax,esi
   13549:	pop    esi
   1354a:	pop    ebp
   1354b:	ret    0x4
   1354e:	int3   
   1354f:	int3   
   13550:	int3   
   13551:	int3   
   13552:	int3   
   13553:	int3   
   13554:	mov    edi,edi
   13556:	push   ebp
   13557:	mov    ebp,esp
   13559:	push   esi
   1355a:	mov    esi,DWORD PTR [ebp+0x8]
   1355d:	lea    eax,[ebp+0xc]
   13560:	push   eax
   13561:	mov    ecx,esi
   13563:	call   0x13532
   13568:	xor    ecx,ecx
   1356a:	inc    ecx
   1356b:	cmp    DWORD PTR [esi+0x4],ecx
   1356e:	jbe    0x13582
   13570:	mov    eax,DWORD PTR [esi]
   13572:	lea    eax,[eax+ecx*2]
   13575:	mov    dx,WORD PTR [eax-0x2]
   13579:	xor    WORD PTR [eax],dx
   1357c:	inc    ecx
   1357d:	cmp    ecx,DWORD PTR [esi+0x4]
   13580:	jb     0x13570
   13582:	push   DWORD PTR [ebp+0xc]
   13585:	call   0x1da56
   1358a:	pop    ecx
   1358b:	mov    eax,esi
   1358d:	pop    esi
   1358e:	pop    ebp
   1358f:	ret    0xc
   13592:	int3   
   13593:	int3   
   13594:	int3   
   13595:	int3   
   13596:	int3   
   13597:	int3   
   13598:	mov    edi,edi
   1359a:	push   ebp
   1359b:	mov    ebp,esp
   1359d:	push   esi
   1359e:	mov    esi,DWORD PTR [ebp+0x8]
   135a1:	lea    eax,[ebp+0xc]
   135a4:	push   eax
   135a5:	mov    ecx,esi
   135a7:	call   0x134f0
   135ac:	xor    ecx,ecx
   135ae:	inc    ecx
   135af:	cmp    DWORD PTR [esi+0x4],ecx
   135b2:	jbe    0x135c3
   135b4:	mov    eax,DWORD PTR [esi]
   135b6:	add    eax,ecx
   135b8:	mov    dl,BYTE PTR [eax-0x1]
   135bb:	xor    BYTE PTR [eax],dl
   135bd:	inc    ecx
   135be:	cmp    ecx,DWORD PTR [esi+0x4]
   135c1:	jb     0x135b4
   135c3:	push   DWORD PTR [ebp+0xc]
   135c6:	call   0x1da56
   135cb:	pop    ecx
   135cc:	mov    eax,esi
   135ce:	pop    esi
   135cf:	pop    ebp
   135d0:	ret    0xc
   135d3:	int3   
   135d4:	int3   
   135d5:	int3   
   135d6:	int3   
   135d7:	int3   
   135d8:	mov    edi,edi
   135da:	push   esi
   135db:	mov    esi,ecx
   135dd:	mov    ecx,DWORD PTR [esi]
   135df:	mov    eax,DWORD PTR [ecx+0x8]
   135e2:	cmp    eax,DWORD PTR ds:0x782bc
   135e8:	je     0x135f6
   135ea:	push   eax
   135eb:	call   0x12b1e
   135f0:	jmp    0x13605
   135f2:	mov    DWORD PTR [esi],eax
   135f4:	mov    ecx,eax
   135f6:	mov    eax,DWORD PTR [ecx+0x4]
   135f9:	cmp    ecx,DWORD PTR [eax+0x8]
   135fc:	je     0x135f2
   135fe:	mov    ecx,DWORD PTR [esi]
   13600:	cmp    DWORD PTR [ecx+0x8],eax
   13603:	je     0x13607
   13605:	mov    DWORD PTR [esi],eax
   13607:	pop    esi
   13608:	ret    
   13609:	int3   
   1360a:	int3   
   1360b:	int3   
   1360c:	int3   
   1360d:	int3   
   1360e:	mov    edi,edi
   13610:	push   ebp
   13611:	mov    ebp,esp
   13613:	push   esi
   13614:	push   edi
   13615:	mov    edi,DWORD PTR [ebp+0x8]
   13618:	push   edi
   13619:	mov    esi,ecx
   1361b:	call   0x134f0
   13620:	lea    eax,[edi+0x8]
   13623:	push   eax
   13624:	lea    ecx,[esi+0x8]
   13627:	call   0x134f0
   1362c:	lea    eax,[edi+0x10]
   1362f:	push   eax
   13630:	lea    ecx,[esi+0x10]
   13633:	call   0x134f0
   13638:	lea    eax,[edi+0x18]
   1363b:	push   eax
   1363c:	lea    ecx,[esi+0x18]
   1363f:	call   0x134f0
   13644:	mov    eax,DWORD PTR [edi+0x20]
   13647:	mov    DWORD PTR [esi+0x20],eax
   1364a:	mov    eax,DWORD PTR [edi+0x24]
   1364d:	mov    DWORD PTR [esi+0x24],eax
   13650:	mov    eax,DWORD PTR [edi+0x28]
   13653:	mov    DWORD PTR [esi+0x28],eax
   13656:	mov    eax,DWORD PTR [edi+0x2c]
   13659:	mov    DWORD PTR [esi+0x2c],eax
   1365c:	mov    eax,DWORD PTR [edi+0x30]
   1365f:	mov    DWORD PTR [esi+0x30],eax
   13662:	mov    eax,DWORD PTR [edi+0x34]
   13665:	add    edi,0x38
   13668:	push   edi
   13669:	lea    ecx,[esi+0x38]
   1366c:	mov    DWORD PTR [esi+0x34],eax
   1366f:	call   0x134f0
   13674:	pop    edi
   13675:	mov    eax,esi
   13677:	pop    esi
   13678:	pop    ebp
   13679:	ret    0x4
   1367c:	int3   
   1367d:	int3   
   1367e:	int3   
   1367f:	int3   
   13680:	int3   
   13681:	int3   
   13682:	mov    edi,edi
   13684:	push   ebp
   13685:	mov    ebp,esp
   13687:	push   ebx
   13688:	push   esi
   13689:	push   edi
   1368a:	mov    edi,DWORD PTR [ebp+0x8]
   1368d:	mov    ebx,ecx
   1368f:	mov    esi,edi
   13691:	cmp    edi,DWORD PTR ds:0x782b0
   13697:	je     0x136b6
   13699:	push   DWORD PTR [esi+0x8]
   1369c:	mov    ecx,ebx
   1369e:	call   0x13682
   136a3:	mov    esi,DWORD PTR [esi]
   136a5:	push   edi
   136a6:	call   0x1da56
   136ab:	pop    ecx
   136ac:	mov    edi,esi
   136ae:	cmp    esi,DWORD PTR ds:0x782b0
   136b4:	jne    0x13699
   136b6:	pop    edi
   136b7:	pop    esi
   136b8:	pop    ebx
   136b9:	pop    ebp
   136ba:	ret    0x4
   136bd:	int3   
   136be:	int3   
   136bf:	int3   
   136c0:	int3   
   136c1:	int3   
   136c2:	mov    edi,edi
   136c4:	push   ebp
   136c5:	mov    ebp,esp
   136c7:	push   ebx
   136c8:	push   esi
   136c9:	push   edi
   136ca:	mov    edi,DWORD PTR [ebp+0x8]
   136cd:	mov    ebx,ecx
   136cf:	mov    esi,edi
   136d1:	cmp    edi,DWORD PTR ds:0x782b4
   136d7:	je     0x136f6
   136d9:	push   DWORD PTR [esi+0x8]
   136dc:	mov    ecx,ebx
   136de:	call   0x136c2
   136e3:	mov    esi,DWORD PTR [esi]
   136e5:	push   edi
   136e6:	call   0x1da56
   136eb:	pop    ecx
   136ec:	mov    edi,esi
   136ee:	cmp    esi,DWORD PTR ds:0x782b4
   136f4:	jne    0x136d9
   136f6:	pop    edi
   136f7:	pop    esi
   136f8:	pop    ebx
   136f9:	pop    ebp
   136fa:	ret    0x4
   136fd:	int3   
   136fe:	int3   
   136ff:	int3   
   13700:	int3   
   13701:	int3   
   13702:	mov    edi,edi
   13704:	push   ebp
   13705:	mov    ebp,esp
   13707:	push   esi
   13708:	push   edi
   13709:	mov    edi,DWORD PTR [ebp+0x8]
   1370c:	push   edi
   1370d:	mov    esi,ecx
   1370f:	call   0x13532
   13714:	add    edi,0x8
   13717:	push   edi
   13718:	lea    ecx,[esi+0x8]
   1371b:	call   0x13532
   13720:	pop    edi
   13721:	mov    eax,esi
   13723:	pop    esi
   13724:	pop    ebp
   13725:	ret    0x4
   13728:	int3   
   13729:	int3   
   1372a:	int3   
   1372b:	int3   
   1372c:	int3   
   1372d:	int3   
   1372e:	mov    edi,edi
   13730:	push   ebp
   13731:	mov    ebp,esp
   13733:	push   esi
   13734:	push   edi
   13735:	mov    edi,DWORD PTR [ebp+0x8]
   13738:	push   edi
   13739:	mov    esi,ecx
   1373b:	call   0x134f0
   13740:	add    edi,0x8
   13743:	push   edi
   13744:	lea    ecx,[esi+0x8]
   13747:	call   0x134f0
   1374c:	pop    edi
   1374d:	mov    eax,esi
   1374f:	pop    esi
   13750:	pop    ebp
   13751:	ret    0x4
   13754:	int3   
   13755:	int3   
   13756:	int3   
   13757:	int3   
   13758:	int3   
   13759:	int3   
   1375a:	mov    edi,edi
   1375c:	push   ebp
   1375d:	mov    ebp,esp
   1375f:	push   ecx
   13760:	push   DWORD PTR [ebp-0x4]
   13763:	push   DWORD PTR [ebp+0x10]
   13766:	push   DWORD PTR [ebp+0xc]
   13769:	push   DWORD PTR [ebp+0x8]
   1376c:	call   0x13366
   13771:	add    esp,0x10
   13774:	leave  
   13775:	ret    
   13776:	int3   
   13777:	int3   
   13778:	int3   
   13779:	int3   
   1377a:	int3   
   1377b:	int3   
   1377c:	mov    edi,edi
   1377e:	push   ebp
   1377f:	mov    ebp,esp
   13781:	push   ecx
   13782:	push   DWORD PTR [ebp-0x4]
   13785:	push   DWORD PTR [ebp+0x10]
   13788:	push   DWORD PTR [ebp+0xc]
   1378b:	push   DWORD PTR [ebp+0x8]
   1378e:	call   0x13390
   13793:	add    esp,0x10
   13796:	leave  
   13797:	ret    
   13798:	int3   
   13799:	int3   
   1379a:	int3   
   1379b:	int3   
   1379c:	int3   
   1379d:	int3   
   1379e:	mov    edi,edi
   137a0:	push   ebp
   137a1:	mov    ebp,esp
   137a3:	push   ecx
   137a4:	push   DWORD PTR [ebp-0x4]
   137a7:	push   DWORD PTR [ebp+0x10]
   137aa:	push   DWORD PTR [ebp+0xc]
   137ad:	push   DWORD PTR [ebp+0x8]
   137b0:	call   0x133ba
   137b5:	add    esp,0x10
   137b8:	leave  
   137b9:	ret    
   137ba:	int3   
   137bb:	int3   
   137bc:	int3   
   137bd:	int3   
   137be:	int3   
   137bf:	int3   
   137c0:	mov    edi,edi
   137c2:	push   ebp
   137c3:	mov    ebp,esp
   137c5:	push   ecx
   137c6:	push   DWORD PTR [ebp-0x4]
   137c9:	push   DWORD PTR [ebp+0x10]
   137cc:	push   DWORD PTR [ebp+0xc]
   137cf:	push   DWORD PTR [ebp+0x8]
   137d2:	call   0x133e4
   137d7:	add    esp,0x10
   137da:	leave  
   137db:	ret    
   137dc:	int3   
   137dd:	int3   
   137de:	int3   
   137df:	int3   
   137e0:	int3   
   137e1:	int3   
   137e2:	mov    edi,edi
   137e4:	push   ebp
   137e5:	mov    ebp,esp
   137e7:	mov    ecx,DWORD PTR [ebp+0x8]
   137ea:	push   0x0
   137ec:	call   0x132ea
   137f1:	pop    ebp
   137f2:	ret    0x4
   137f5:	int3   
   137f6:	int3   
   137f7:	int3   
   137f8:	int3   
   137f9:	int3   
   137fa:	mov    edi,edi
   137fc:	push   ebp
   137fd:	mov    ebp,esp
   137ff:	mov    ecx,DWORD PTR [ebp+0x8]
   13802:	test   ecx,ecx
   13804:	je     0x1380e
   13806:	push   DWORD PTR [ebp+0xc]
   13809:	call   0x13310
   1380e:	pop    ebp
   1380f:	ret    0x8
   13812:	int3   
   13813:	int3   
   13814:	int3   
   13815:	int3   
   13816:	int3   
   13817:	int3   
   13818:	mov    edi,edi
   1381a:	push   ebp
   1381b:	mov    ebp,esp
   1381d:	mov    ecx,DWORD PTR [ebp+0x8]
   13820:	push   0x0
   13822:	call   0x13338
   13827:	pop    ebp
   13828:	ret    0x4
   1382b:	int3   
   1382c:	int3   
   1382d:	int3   
   1382e:	int3   
   1382f:	int3   
   13830:	mov    edi,edi
   13832:	push   ebp
   13833:	mov    ebp,esp
   13835:	push   esi
   13836:	push   edi
   13837:	mov    edi,DWORD PTR [ebp+0x8]
   1383a:	push   edi
   1383b:	mov    esi,ecx
   1383d:	call   0x1360e
   13842:	mov    eax,DWORD PTR [edi+0x40]
   13845:	mov    DWORD PTR [esi+0x40],eax
   13848:	pop    edi
   13849:	mov    eax,esi
   1384b:	pop    esi
   1384c:	pop    ebp
   1384d:	ret    0x4
   13850:	int3   
   13851:	int3   
   13852:	int3   
   13853:	int3   
   13854:	int3   
   13855:	int3   
   13856:	mov    edi,edi
   13858:	push   ebp
   13859:	mov    ebp,esp
   1385b:	push   esi
   1385c:	push   edi
   1385d:	mov    edi,DWORD PTR [ebp+0x8]
   13860:	push   edi
   13861:	mov    esi,ecx
   13863:	call   0x134f0
   13868:	add    edi,0x8
   1386b:	push   edi
   1386c:	lea    ecx,[esi+0x8]
   1386f:	call   0x1360e
   13874:	pop    edi
   13875:	mov    eax,esi
   13877:	pop    esi
   13878:	pop    ebp
   13879:	ret    0x4
   1387c:	int3   
   1387d:	int3   
   1387e:	int3   
   1387f:	int3   
   13880:	int3   
   13881:	int3   
   13882:	mov    edi,edi
   13884:	push   ebp
   13885:	mov    ebp,esp
   13887:	push   esi
   13888:	push   DWORD PTR [ebp+0x8]
   1388b:	mov    esi,ecx
   1388d:	call   0x134f0
   13892:	push   DWORD PTR [ebp+0xc]
   13895:	lea    ecx,[esi+0x8]
   13898:	call   0x13830
   1389d:	mov    eax,esi
   1389f:	pop    esi
   138a0:	pop    ebp
   138a1:	ret    0x8
   138a4:	int3   
   138a5:	int3   
   138a6:	int3   
   138a7:	int3   
   138a8:	int3   
   138a9:	int3   
   138aa:	mov    edi,edi
   138ac:	push   ebp
   138ad:	mov    ebp,esp
   138af:	push   esi
   138b0:	push   DWORD PTR [ebp+0x8]
   138b3:	mov    esi,ecx
   138b5:	call   0x13532
   138ba:	push   DWORD PTR [ebp+0xc]
   138bd:	lea    ecx,[esi+0x8]
   138c0:	call   0x13532
   138c5:	mov    eax,esi
   138c7:	pop    esi
   138c8:	pop    ebp
   138c9:	ret    0x8
   138cc:	int3   
   138cd:	int3   
   138ce:	int3   
   138cf:	int3   
   138d0:	int3   
   138d1:	int3   
   138d2:	mov    edi,edi
   138d4:	push   ebp
   138d5:	mov    ebp,esp
   138d7:	push   esi
   138d8:	push   DWORD PTR [ebp+0x8]
   138db:	mov    esi,ecx
   138dd:	call   0x134f0
   138e2:	push   DWORD PTR [ebp+0xc]
   138e5:	lea    ecx,[esi+0x8]
   138e8:	call   0x134f0
   138ed:	mov    eax,esi
   138ef:	pop    esi
   138f0:	pop    ebp
   138f1:	ret    0x8
   138f4:	int3   
   138f5:	int3   
   138f6:	int3   
   138f7:	int3   
   138f8:	int3   
   138f9:	int3   
   138fa:	mov    edi,edi
   138fc:	push   esi
   138fd:	push   edi
   138fe:	push   0xffffffff
   13900:	mov    edi,0x1df18
   13905:	push   edi
   13906:	mov    esi,ecx
   13908:	call   0x129d2
   1390d:	push   0xffffffff
   1390f:	push   edi
   13910:	lea    ecx,[esi+0x8]
   13913:	call   0x129d2
   13918:	push   0xffffffff
   1391a:	push   edi
   1391b:	lea    ecx,[esi+0x10]
   1391e:	call   0x129d2
   13923:	push   0xffffffff
   13925:	push   edi
   13926:	lea    ecx,[esi+0x18]
   13929:	call   0x129d2
   1392e:	push   0xffffffff
   13930:	push   edi
   13931:	lea    ecx,[esi+0x38]
   13934:	call   0x129d2
   13939:	xor    eax,eax
   1393b:	mov    DWORD PTR [esi+0x24],eax
   1393e:	mov    DWORD PTR [esi+0x20],eax
   13941:	mov    DWORD PTR [esi+0x30],eax
   13944:	mov    DWORD PTR [esi+0x34],eax
   13947:	pop    edi
   13948:	mov    eax,esi
   1394a:	pop    esi
   1394b:	ret    
   1394c:	int3   
   1394d:	int3   
   1394e:	int3   
   1394f:	int3   
   13950:	int3   
   13951:	int3   
   13952:	mov    edi,edi
   13954:	push   ebp
   13955:	mov    ebp,esp
   13957:	push   esi
   13958:	push   DWORD PTR [ebp+0x8]
   1395b:	mov    esi,ecx
   1395d:	call   0x134f0
   13962:	push   0xffffffff
   13964:	push   0x1df18
   13969:	lea    ecx,[esi+0x8]
   1396c:	call   0x129d2
   13971:	push   DWORD PTR [ebp+0xc]
   13974:	lea    ecx,[esi+0x10]
   13977:	call   0x134f0
   1397c:	push   DWORD PTR [ebp+0x10]
   1397f:	lea    ecx,[esi+0x18]
   13982:	call   0x134f0
   13987:	mov    eax,DWORD PTR [ebp+0x18]
   1398a:	push   DWORD PTR [ebp+0x14]
   1398d:	mov    DWORD PTR [esi+0x20],eax
   13990:	mov    eax,DWORD PTR [ebp+0x1c]
   13993:	lea    ecx,[esi+0x38]
   13996:	mov    DWORD PTR [esi+0x24],eax
   13999:	call   0x134f0
   1399e:	and    DWORD PTR [esi+0x30],0x0
   139a2:	and    DWORD PTR [esi+0x34],0x0
   139a6:	mov    eax,DWORD PTR [ebp+0x20]
   139a9:	mov    ecx,DWORD PTR [eax]
   139ab:	mov    DWORD PTR [esi+0x28],ecx
   139ae:	mov    eax,DWORD PTR [eax+0x4]
   139b1:	mov    DWORD PTR [esi+0x2c],eax
   139b4:	mov    eax,esi
   139b6:	pop    esi
   139b7:	pop    ebp
   139b8:	ret    0x1c
   139bb:	int3   
   139bc:	int3   
   139bd:	int3   
   139be:	int3   
   139bf:	int3   
   139c0:	mov    edi,edi
   139c2:	push   ebp
   139c3:	mov    ebp,esp
   139c5:	push   ecx
   139c6:	push   esi
   139c7:	push   edi
   139c8:	mov    edi,DWORD PTR [ebp+0xc]
   139cb:	push   edi
   139cc:	mov    esi,ecx
   139ce:	call   0x12b40
   139d3:	mov    esi,DWORD PTR [esi+0x4]
   139d6:	mov    DWORD PTR [ebp+0xc],eax
   139d9:	cmp    eax,esi
   139db:	je     0x139e9
   139dd:	mov    ecx,DWORD PTR [edi]
   139df:	cmp    ecx,DWORD PTR [eax+0xc]
   139e2:	jb     0x139e9
   139e4:	lea    eax,[ebp+0xc]
   139e7:	jmp    0x139ef
   139e9:	mov    DWORD PTR [ebp-0x4],esi
   139ec:	lea    eax,[ebp-0x4]
   139ef:	mov    ecx,DWORD PTR [eax]
   139f1:	mov    eax,DWORD PTR [ebp+0x8]
   139f4:	pop    edi
   139f5:	mov    DWORD PTR [eax],ecx
   139f7:	pop    esi
   139f8:	leave  
   139f9:	ret    0x8
   139fc:	int3   
   139fd:	int3   
   139fe:	int3   
   139ff:	int3   
   13a00:	int3   
   13a01:	int3   
   13a02:	mov    edi,edi
   13a04:	push   ebp
   13a05:	mov    ebp,esp
   13a07:	push   ecx
   13a08:	push   esi
   13a09:	push   DWORD PTR [ebp+0xc]
   13a0c:	mov    esi,ecx
   13a0e:	call   0x12c16
   13a13:	mov    DWORD PTR [ebp-0x4],eax
   13a16:	cmp    eax,DWORD PTR [esi+0x4]
   13a19:	je     0x13a30
   13a1b:	add    eax,0x10
   13a1e:	push   eax
   13a1f:	push   DWORD PTR [ebp+0xc]
   13a22:	call   0x197f6
   13a27:	test   al,al
   13a29:	jne    0x13a30
   13a2b:	lea    eax,[ebp-0x4]
   13a2e:	jmp    0x13a39
   13a30:	mov    eax,DWORD PTR [esi+0x4]
   13a33:	mov    DWORD PTR [ebp+0xc],eax
   13a36:	lea    eax,[ebp+0xc]
   13a39:	mov    ecx,DWORD PTR [eax]
   13a3b:	mov    eax,DWORD PTR [ebp+0x8]
   13a3e:	mov    DWORD PTR [eax],ecx
   13a40:	pop    esi
   13a41:	leave  
   13a42:	ret    0x8
   13a45:	int3   
   13a46:	int3   
   13a47:	int3   
   13a48:	int3   
   13a49:	int3   
   13a4a:	mov    edi,edi
   13a4c:	push   ebp
   13a4d:	mov    ebp,esp
   13a4f:	push   esi
   13a50:	push   DWORD PTR [ebp+0x8]
   13a53:	mov    esi,ecx
   13a55:	call   0x134f0
   13a5a:	push   DWORD PTR [ebp+0xc]
   13a5d:	lea    ecx,[esi+0x8]
   13a60:	call   0x1360e
   13a65:	mov    eax,esi
   13a67:	pop    esi
   13a68:	pop    ebp
   13a69:	ret    0x8
   13a6c:	int3   
   13a6d:	int3   
   13a6e:	int3   
   13a6f:	int3   
   13a70:	int3   
   13a71:	int3   
   13a72:	mov    edi,edi
   13a74:	push   ebp
   13a75:	mov    ebp,esp
   13a77:	push   ecx
   13a78:	push   esi
   13a79:	push   DWORD PTR [ebp+0xc]
   13a7c:	mov    esi,ecx
   13a7e:	call   0x12c56
   13a83:	mov    DWORD PTR [ebp-0x4],eax
   13a86:	cmp    eax,DWORD PTR [esi+0x4]
   13a89:	je     0x13aa0
   13a8b:	add    eax,0xc
   13a8e:	push   eax
   13a8f:	push   DWORD PTR [ebp+0xc]
   13a92:	call   0x197f6
   13a97:	test   al,al
   13a99:	jne    0x13aa0
   13a9b:	lea    eax,[ebp-0x4]
   13a9e:	jmp    0x13aa9
   13aa0:	mov    eax,DWORD PTR [esi+0x4]
   13aa3:	mov    DWORD PTR [ebp+0xc],eax
   13aa6:	lea    eax,[ebp+0xc]
   13aa9:	mov    ecx,DWORD PTR [eax]
   13aab:	mov    eax,DWORD PTR [ebp+0x8]
   13aae:	mov    DWORD PTR [eax],ecx
   13ab0:	pop    esi
   13ab1:	leave  
   13ab2:	ret    0x8
   13ab5:	int3   
   13ab6:	int3   
   13ab7:	int3   
   13ab8:	int3   
   13ab9:	int3   
   13aba:	mov    edi,edi
   13abc:	push   ebp
   13abd:	mov    ebp,esp
   13abf:	push   ecx
   13ac0:	push   esi
   13ac1:	push   edi
   13ac2:	mov    edi,DWORD PTR [ebp+0xc]
   13ac5:	push   edi
   13ac6:	mov    esi,ecx
   13ac8:	call   0x12c96
   13acd:	mov    esi,DWORD PTR [esi+0x4]
   13ad0:	mov    DWORD PTR [ebp+0xc],eax
   13ad3:	cmp    eax,esi
   13ad5:	je     0x13ae3
   13ad7:	mov    ecx,DWORD PTR [edi]
   13ad9:	cmp    ecx,DWORD PTR [eax+0xc]
   13adc:	jl     0x13ae3
   13ade:	lea    eax,[ebp+0xc]
   13ae1:	jmp    0x13ae9
   13ae3:	mov    DWORD PTR [ebp-0x4],esi
   13ae6:	lea    eax,[ebp-0x4]
   13ae9:	mov    ecx,DWORD PTR [eax]
   13aeb:	mov    eax,DWORD PTR [ebp+0x8]
   13aee:	pop    edi
   13aef:	mov    DWORD PTR [eax],ecx
   13af1:	pop    esi
   13af2:	leave  
   13af3:	ret    0x8
   13af6:	int3   
   13af7:	int3   
   13af8:	int3   
   13af9:	int3   
   13afa:	int3   
   13afb:	int3   
   13afc:	mov    edi,edi
   13afe:	push   ebp
   13aff:	mov    ebp,esp
   13b01:	push   ecx
   13b02:	mov    eax,DWORD PTR [ecx]
   13b04:	lea    ecx,[ebp-0x4]
   13b07:	mov    DWORD PTR [ebp-0x4],eax
   13b0a:	call   0x12d04
   13b0f:	mov    eax,DWORD PTR [ebp-0x4]
   13b12:	add    eax,0xc
   13b15:	leave  
   13b16:	ret    
   13b17:	int3   
   13b18:	int3   
   13b19:	int3   
   13b1a:	int3   
   13b1b:	int3   
   13b1c:	mov    edi,edi
   13b1e:	push   ebp
   13b1f:	mov    ebp,esp
   13b21:	push   ecx
   13b22:	push   esi
   13b23:	push   DWORD PTR [ebp+0xc]
   13b26:	mov    esi,ecx
   13b28:	call   0x12e18
   13b2d:	mov    DWORD PTR [ebp-0x4],eax
   13b30:	cmp    eax,DWORD PTR [esi+0x4]
   13b33:	je     0x13b4a
   13b35:	add    eax,0x10
   13b38:	push   eax
   13b39:	push   DWORD PTR [ebp+0xc]
   13b3c:	call   0x197f6
   13b41:	test   al,al
   13b43:	jne    0x13b4a
   13b45:	lea    eax,[ebp-0x4]
   13b48:	jmp    0x13b53
   13b4a:	mov    eax,DWORD PTR [esi+0x4]
   13b4d:	mov    DWORD PTR [ebp+0xc],eax
   13b50:	lea    eax,[ebp+0xc]
   13b53:	mov    ecx,DWORD PTR [eax]
   13b55:	mov    eax,DWORD PTR [ebp+0x8]
   13b58:	mov    DWORD PTR [eax],ecx
   13b5a:	pop    esi
   13b5b:	leave  
   13b5c:	ret    0x8
   13b5f:	int3   
   13b60:	int3   
   13b61:	int3   
   13b62:	int3   
   13b63:	int3   
   13b64:	mov    edi,edi
   13b66:	push   ebp
   13b67:	mov    ebp,esp
   13b69:	push   ecx
   13b6a:	push   ecx
   13b6b:	push   ebx
   13b6c:	push   esi
   13b6d:	mov    DWORD PTR [ebp-0x4],ecx
   13b70:	push   edi
   13b71:	mov    edi,DWORD PTR [ebp+0xc]
   13b74:	lea    ecx,[ebp+0xc]
   13b77:	call   0x11180
   13b7c:	mov    esi,DWORD PTR [edi]
   13b7e:	mov    eax,ds:0x782b0
   13b83:	mov    ebx,edi
   13b85:	mov    DWORD PTR [ebp-0x8],esi
   13b88:	cmp    esi,eax
   13b8a:	jne    0x13ba8
   13b8c:	mov    esi,DWORD PTR [edi+0x8]
   13b8f:	mov    eax,DWORD PTR [ebx+0x4]
   13b92:	mov    ecx,DWORD PTR [ebp-0x4]
   13b95:	mov    DWORD PTR [esi+0x4],eax
   13b98:	mov    eax,DWORD PTR [ecx+0x4]
   13b9b:	cmp    DWORD PTR [eax+0x4],edi
   13b9e:	jne    0x13c1d
   13ba0:	mov    DWORD PTR [eax+0x4],esi
   13ba3:	jmp    0x13c2b
   13ba8:	mov    ecx,DWORD PTR [edi+0x8]
   13bab:	cmp    ecx,eax
   13bad:	je     0x13b8f
   13baf:	push   ecx
   13bb0:	call   0x11096
   13bb5:	mov    ebx,eax
   13bb7:	mov    esi,DWORD PTR [ebx+0x8]
   13bba:	cmp    ebx,edi
   13bbc:	je     0x13b8f
   13bbe:	mov    eax,DWORD PTR [ebp-0x8]
   13bc1:	mov    DWORD PTR [eax+0x4],ebx
   13bc4:	mov    eax,DWORD PTR [edi]
   13bc6:	mov    DWORD PTR [ebx],eax
   13bc8:	cmp    ebx,DWORD PTR [edi+0x8]
   13bcb:	jne    0x13bd2
   13bcd:	mov    DWORD PTR [esi+0x4],ebx
   13bd0:	jmp    0x13be9
   13bd2:	mov    eax,DWORD PTR [ebx+0x4]
   13bd5:	mov    DWORD PTR [esi+0x4],eax
   13bd8:	mov    eax,DWORD PTR [ebx+0x4]
   13bdb:	mov    DWORD PTR [eax],esi
   13bdd:	mov    eax,DWORD PTR [edi+0x8]
   13be0:	mov    DWORD PTR [ebx+0x8],eax
   13be3:	mov    eax,DWORD PTR [edi+0x8]
   13be6:	mov    DWORD PTR [eax+0x4],ebx
   13be9:	mov    eax,DWORD PTR [ebp-0x4]
   13bec:	mov    eax,DWORD PTR [eax+0x4]
   13bef:	cmp    DWORD PTR [eax+0x4],edi
   13bf2:	jne    0x13bf9
   13bf4:	mov    DWORD PTR [eax+0x4],ebx
   13bf7:	jmp    0x13c07
   13bf9:	mov    eax,DWORD PTR [edi+0x4]
   13bfc:	cmp    DWORD PTR [eax],edi
   13bfe:	jne    0x13c04
   13c00:	mov    DWORD PTR [eax],ebx
   13c02:	jmp    0x13c07
   13c04:	mov    DWORD PTR [eax+0x8],ebx
   13c07:	mov    eax,DWORD PTR [edi+0x4]
   13c0a:	mov    DWORD PTR [ebx+0x4],eax
   13c0d:	mov    eax,DWORD PTR [ebx+0x14]
   13c10:	mov    ecx,DWORD PTR [edi+0x14]
   13c13:	mov    DWORD PTR [ebx+0x14],ecx
   13c16:	mov    DWORD PTR [edi+0x14],eax
   13c19:	mov    ebx,edi
   13c1b:	jmp    0x13c7e
   13c1d:	mov    eax,DWORD PTR [edi+0x4]
   13c20:	cmp    DWORD PTR [eax],edi
   13c22:	jne    0x13c28
   13c24:	mov    DWORD PTR [eax],esi
   13c26:	jmp    0x13c2b
   13c28:	mov    DWORD PTR [eax+0x8],esi
   13c2b:	mov    eax,DWORD PTR [ecx+0x4]
   13c2e:	mov    DWORD PTR [ebp-0x8],eax
   13c31:	cmp    DWORD PTR [eax],edi
   13c33:	jne    0x13c55
   13c35:	mov    edx,DWORD PTR [edi+0x8]
   13c38:	cmp    edx,DWORD PTR ds:0x782b0
   13c3e:	jne    0x13c47
   13c40:	mov    edx,DWORD PTR [edi+0x4]
   13c43:	mov    DWORD PTR [eax],edx
   13c45:	jmp    0x13c55
   13c47:	push   esi
   13c48:	call   0x11096
   13c4d:	mov    ecx,DWORD PTR [ebp-0x8]
   13c50:	mov    DWORD PTR [ecx],eax
   13c52:	mov    ecx,DWORD PTR [ebp-0x4]
   13c55:	mov    eax,DWORD PTR [ecx+0x4]
   13c58:	mov    DWORD PTR [ebp-0x8],eax
   13c5b:	cmp    DWORD PTR [eax+0x8],edi
   13c5e:	jne    0x13c7e
   13c60:	mov    ecx,DWORD PTR [edi]
   13c62:	cmp    ecx,DWORD PTR ds:0x782b0
   13c68:	jne    0x13c72
   13c6a:	mov    ecx,DWORD PTR [edi+0x4]
   13c6d:	mov    DWORD PTR [eax+0x8],ecx
   13c70:	jmp    0x13c7e
   13c72:	push   esi
   13c73:	call   0x11074
   13c78:	mov    ecx,DWORD PTR [ebp-0x8]
   13c7b:	mov    DWORD PTR [ecx+0x8],eax
   13c7e:	xor    edi,edi
   13c80:	inc    edi
   13c81:	cmp    DWORD PTR [ebx+0x14],edi
   13c84:	jne    0x13d9b
   13c8a:	jmp    0x13d49
   13c8f:	cmp    DWORD PTR [esi+0x14],edi
   13c92:	jne    0x13d98
   13c98:	mov    eax,DWORD PTR [esi+0x4]
   13c9b:	cmp    esi,DWORD PTR [eax]
   13c9d:	jne    0x13d14
   13c9f:	mov    eax,DWORD PTR [eax+0x8]
   13ca2:	cmp    DWORD PTR [eax+0x14],0x0
   13ca6:	jne    0x13cc0
   13ca8:	mov    DWORD PTR [eax+0x14],edi
   13cab:	mov    eax,DWORD PTR [esi+0x4]
   13cae:	and    DWORD PTR [eax+0x14],0x0
   13cb2:	push   DWORD PTR [esi+0x4]
   13cb5:	call   0x12b78
   13cba:	mov    eax,DWORD PTR [esi+0x4]
   13cbd:	mov    eax,DWORD PTR [eax+0x8]
   13cc0:	mov    ecx,DWORD PTR [eax]
   13cc2:	cmp    DWORD PTR [ecx+0x14],edi
   13cc5:	jne    0x13ccf
   13cc7:	mov    ecx,DWORD PTR [eax+0x8]
   13cca:	cmp    DWORD PTR [ecx+0x14],edi
   13ccd:	je     0x13d42
   13ccf:	mov    ecx,DWORD PTR [eax+0x8]
   13cd2:	cmp    DWORD PTR [ecx+0x14],edi
   13cd5:	jne    0x13cef
   13cd7:	mov    ecx,DWORD PTR [eax]
   13cd9:	mov    DWORD PTR [ecx+0x14],edi
   13cdc:	mov    ecx,DWORD PTR [ebp-0x4]
   13cdf:	and    DWORD PTR [eax+0x14],0x0
   13ce3:	push   eax
   13ce4:	call   0x12bc6
   13ce9:	mov    eax,DWORD PTR [esi+0x4]
   13cec:	mov    eax,DWORD PTR [eax+0x8]
   13cef:	mov    ecx,DWORD PTR [esi+0x4]
   13cf2:	mov    ecx,DWORD PTR [ecx+0x14]
   13cf5:	mov    DWORD PTR [eax+0x14],ecx
   13cf8:	mov    ecx,DWORD PTR [esi+0x4]
   13cfb:	mov    DWORD PTR [ecx+0x14],edi
   13cfe:	mov    eax,DWORD PTR [eax+0x8]
   13d01:	mov    ecx,DWORD PTR [ebp-0x4]
   13d04:	mov    DWORD PTR [eax+0x14],edi
   13d07:	push   DWORD PTR [esi+0x4]
   13d0a:	call   0x12b78
   13d0f:	jmp    0x13d98
   13d14:	mov    eax,DWORD PTR [eax]
   13d16:	cmp    DWORD PTR [eax+0x14],0x0
   13d1a:	jne    0x13d33
   13d1c:	mov    DWORD PTR [eax+0x14],edi
   13d1f:	mov    eax,DWORD PTR [esi+0x4]
   13d22:	and    DWORD PTR [eax+0x14],0x0
   13d26:	push   DWORD PTR [esi+0x4]
   13d29:	call   0x12bc6
   13d2e:	mov    eax,DWORD PTR [esi+0x4]
   13d31:	mov    eax,DWORD PTR [eax]
   13d33:	mov    ecx,DWORD PTR [eax+0x8]
   13d36:	cmp    DWORD PTR [ecx+0x14],edi
   13d39:	jne    0x13d5a
   13d3b:	mov    ecx,DWORD PTR [eax]
   13d3d:	cmp    DWORD PTR [ecx+0x14],edi
   13d40:	jne    0x13d5a
   13d42:	and    DWORD PTR [eax+0x14],0x0
   13d46:	mov    esi,DWORD PTR [esi+0x4]
   13d49:	mov    ecx,DWORD PTR [ebp-0x4]
   13d4c:	mov    eax,DWORD PTR [ecx+0x4]
   13d4f:	cmp    esi,DWORD PTR [eax+0x4]
   13d52:	jne    0x13c8f
   13d58:	jmp    0x13d98
   13d5a:	mov    ecx,DWORD PTR [eax]
   13d5c:	cmp    DWORD PTR [ecx+0x14],edi
   13d5f:	jne    0x13d79
   13d61:	mov    ecx,DWORD PTR [eax+0x8]
   13d64:	mov    DWORD PTR [ecx+0x14],edi
   13d67:	mov    ecx,DWORD PTR [ebp-0x4]
   13d6a:	and    DWORD PTR [eax+0x14],0x0
   13d6e:	push   eax
   13d6f:	call   0x12b78
   13d74:	mov    eax,DWORD PTR [esi+0x4]
   13d77:	mov    eax,DWORD PTR [eax]
   13d79:	mov    ecx,DWORD PTR [esi+0x4]
   13d7c:	mov    ecx,DWORD PTR [ecx+0x14]
   13d7f:	mov    DWORD PTR [eax+0x14],ecx
   13d82:	mov    ecx,DWORD PTR [esi+0x4]
   13d85:	mov    DWORD PTR [ecx+0x14],edi
   13d88:	mov    eax,DWORD PTR [eax]
   13d8a:	mov    ecx,DWORD PTR [ebp-0x4]
   13d8d:	mov    DWORD PTR [eax+0x14],edi
   13d90:	push   DWORD PTR [esi+0x4]
   13d93:	call   0x12bc6
   13d98:	mov    DWORD PTR [esi+0x14],edi
   13d9b:	push   ebx
   13d9c:	call   0x1da56
   13da1:	mov    eax,DWORD PTR [ebp-0x4]
   13da4:	dec    DWORD PTR [eax+0xc]
   13da7:	mov    eax,DWORD PTR [ebp+0x8]
   13daa:	pop    ecx
   13dab:	mov    ecx,DWORD PTR [ebp+0xc]
   13dae:	pop    edi
   13daf:	pop    esi
   13db0:	mov    DWORD PTR [eax],ecx
   13db2:	pop    ebx
   13db3:	leave  
   13db4:	ret    0x8
   13db7:	int3   
   13db8:	int3   
   13db9:	int3   
   13dba:	int3   
   13dbb:	int3   
   13dbc:	mov    edi,edi
   13dbe:	push   ebp
   13dbf:	mov    ebp,esp
   13dc1:	push   esi
   13dc2:	push   edi
   13dc3:	push   DWORD PTR [ebp+0xc]
   13dc6:	mov    edi,ecx
   13dc8:	call   0x12ef6
   13dcd:	push   DWORD PTR [ebp+0xc]
   13dd0:	mov    ecx,edi
   13dd2:	mov    esi,eax
   13dd4:	call   0x12b40
   13dd9:	mov    ecx,DWORD PTR [ebp+0x8]
   13ddc:	pop    edi
   13ddd:	mov    DWORD PTR [ecx],eax
   13ddf:	mov    DWORD PTR [ecx+0x4],esi
   13de2:	mov    eax,ecx
   13de4:	pop    esi
   13de5:	pop    ebp
   13de6:	ret    0x8
   13de9:	int3   
   13dea:	int3   
   13deb:	int3   
   13dec:	int3   
   13ded:	int3   
   13dee:	mov    edi,edi
   13df0:	push   ebp
   13df1:	mov    ebp,esp
   13df3:	push   esi
   13df4:	push   edi
   13df5:	push   DWORD PTR [ebp+0xc]
   13df8:	mov    edi,ecx
   13dfa:	call   0x12f2e
   13dff:	push   DWORD PTR [ebp+0xc]
   13e02:	mov    ecx,edi
   13e04:	mov    esi,eax
   13e06:	call   0x12c16
   13e0b:	mov    ecx,DWORD PTR [ebp+0x8]
   13e0e:	pop    edi
   13e0f:	mov    DWORD PTR [ecx],eax
   13e11:	mov    DWORD PTR [ecx+0x4],esi
   13e14:	mov    eax,ecx
   13e16:	pop    esi
   13e17:	pop    ebp
   13e18:	ret    0x8
   13e1b:	int3   
   13e1c:	int3   
   13e1d:	int3   
   13e1e:	int3   
   13e1f:	int3   
   13e20:	mov    edi,edi
   13e22:	push   ebp
   13e23:	mov    ebp,esp
   13e25:	push   esi
   13e26:	push   edi
   13e27:	push   DWORD PTR [ebp+0xc]
   13e2a:	mov    edi,ecx
   13e2c:	call   0x1300c
   13e31:	push   DWORD PTR [ebp+0xc]
   13e34:	mov    ecx,edi
   13e36:	mov    esi,eax
   13e38:	call   0x12c56
   13e3d:	mov    ecx,DWORD PTR [ebp+0x8]
   13e40:	pop    edi
   13e41:	mov    DWORD PTR [ecx],eax
   13e43:	mov    DWORD PTR [ecx+0x4],esi
   13e46:	mov    eax,ecx
   13e48:	pop    esi
   13e49:	pop    ebp
   13e4a:	ret    0x8
   13e4d:	int3   
   13e4e:	int3   
   13e4f:	int3   
   13e50:	int3   
   13e51:	int3   
   13e52:	mov    edi,edi
   13e54:	push   ebp
   13e55:	mov    ebp,esp
   13e57:	push   esi
   13e58:	push   edi
   13e59:	push   DWORD PTR [ebp+0xc]
   13e5c:	mov    edi,ecx
   13e5e:	call   0x130ea
   13e63:	push   DWORD PTR [ebp+0xc]
   13e66:	mov    ecx,edi
   13e68:	mov    esi,eax
   13e6a:	call   0x12c96
   13e6f:	mov    ecx,DWORD PTR [ebp+0x8]
   13e72:	pop    edi
   13e73:	mov    DWORD PTR [ecx],eax
   13e75:	mov    DWORD PTR [ecx+0x4],esi
   13e78:	mov    eax,ecx
   13e7a:	pop    esi
   13e7b:	pop    ebp
   13e7c:	ret    0x8
   13e7f:	int3   
   13e80:	int3   
   13e81:	int3   
   13e82:	int3   
   13e83:	int3   
   13e84:	mov    edi,edi
   13e86:	push   ebp
   13e87:	mov    ebp,esp
   13e89:	push   ecx
   13e8a:	push   esi
   13e8b:	push   DWORD PTR [ebp+0xc]
   13e8e:	mov    esi,ecx
   13e90:	call   0x13122
   13e95:	mov    DWORD PTR [ebp-0x4],eax
   13e98:	cmp    eax,DWORD PTR [esi+0x4]
   13e9b:	je     0x13eb2
   13e9d:	add    eax,0xc
   13ea0:	push   eax
   13ea1:	push   DWORD PTR [ebp+0xc]
   13ea4:	call   0x19826
   13ea9:	test   al,al
   13eab:	jne    0x13eb2
   13ead:	lea    eax,[ebp-0x4]
   13eb0:	jmp    0x13ebb
   13eb2:	mov    eax,DWORD PTR [esi+0x4]
   13eb5:	mov    DWORD PTR [ebp+0xc],eax
   13eb8:	lea    eax,[ebp+0xc]
   13ebb:	mov    ecx,DWORD PTR [eax]
   13ebd:	mov    eax,DWORD PTR [ebp+0x8]
   13ec0:	mov    DWORD PTR [eax],ecx
   13ec2:	pop    esi
   13ec3:	leave  
   13ec4:	ret    0x8
   13ec7:	int3   
   13ec8:	int3   
   13ec9:	int3   
   13eca:	int3   
   13ecb:	int3   
   13ecc:	mov    edi,edi
   13ece:	push   ebp
   13ecf:	mov    ebp,esp
   13ed1:	push   ecx
   13ed2:	push   ecx
   13ed3:	push   ebx
   13ed4:	push   esi
   13ed5:	mov    DWORD PTR [ebp-0x4],ecx
   13ed8:	push   edi
   13ed9:	mov    edi,DWORD PTR [ebp+0xc]
   13edc:	lea    ecx,[ebp+0xc]
   13edf:	call   0x12d44
   13ee4:	mov    esi,DWORD PTR [edi]
   13ee6:	mov    eax,ds:0x782b4
   13eeb:	mov    ebx,edi
   13eed:	mov    DWORD PTR [ebp-0x8],esi
   13ef0:	cmp    esi,eax
   13ef2:	jne    0x13f10
   13ef4:	mov    esi,DWORD PTR [edi+0x8]
   13ef7:	mov    eax,DWORD PTR [ebx+0x4]
   13efa:	mov    ecx,DWORD PTR [ebp-0x4]
   13efd:	mov    DWORD PTR [esi+0x4],eax
   13f00:	mov    eax,DWORD PTR [ecx+0x4]
   13f03:	cmp    DWORD PTR [eax+0x4],edi
   13f06:	jne    0x13f85
   13f08:	mov    DWORD PTR [eax+0x4],esi
   13f0b:	jmp    0x13f93
   13f10:	mov    ecx,DWORD PTR [edi+0x8]
   13f13:	cmp    ecx,eax
   13f15:	je     0x13ef7
   13f17:	push   ecx
   13f18:	call   0x110da
   13f1d:	mov    ebx,eax
   13f1f:	mov    esi,DWORD PTR [ebx+0x8]
   13f22:	cmp    ebx,edi
   13f24:	je     0x13ef7
   13f26:	mov    eax,DWORD PTR [ebp-0x8]
   13f29:	mov    DWORD PTR [eax+0x4],ebx
   13f2c:	mov    eax,DWORD PTR [edi]
   13f2e:	mov    DWORD PTR [ebx],eax
   13f30:	cmp    ebx,DWORD PTR [edi+0x8]
   13f33:	jne    0x13f3a
   13f35:	mov    DWORD PTR [esi+0x4],ebx
   13f38:	jmp    0x13f51
   13f3a:	mov    eax,DWORD PTR [ebx+0x4]
   13f3d:	mov    DWORD PTR [esi+0x4],eax
   13f40:	mov    eax,DWORD PTR [ebx+0x4]
   13f43:	mov    DWORD PTR [eax],esi
   13f45:	mov    eax,DWORD PTR [edi+0x8]
   13f48:	mov    DWORD PTR [ebx+0x8],eax
   13f4b:	mov    eax,DWORD PTR [edi+0x8]
   13f4e:	mov    DWORD PTR [eax+0x4],ebx
   13f51:	mov    eax,DWORD PTR [ebp-0x4]
   13f54:	mov    eax,DWORD PTR [eax+0x4]
   13f57:	cmp    DWORD PTR [eax+0x4],edi
   13f5a:	jne    0x13f61
   13f5c:	mov    DWORD PTR [eax+0x4],ebx
   13f5f:	jmp    0x13f6f
   13f61:	mov    eax,DWORD PTR [edi+0x4]
   13f64:	cmp    DWORD PTR [eax],edi
   13f66:	jne    0x13f6c
   13f68:	mov    DWORD PTR [eax],ebx
   13f6a:	jmp    0x13f6f
   13f6c:	mov    DWORD PTR [eax+0x8],ebx
   13f6f:	mov    eax,DWORD PTR [edi+0x4]
   13f72:	mov    DWORD PTR [ebx+0x4],eax
   13f75:	mov    eax,DWORD PTR [ebx+0x10]
   13f78:	mov    ecx,DWORD PTR [edi+0x10]
   13f7b:	mov    DWORD PTR [ebx+0x10],ecx
   13f7e:	mov    DWORD PTR [edi+0x10],eax
   13f81:	mov    ebx,edi
   13f83:	jmp    0x13fe6
   13f85:	mov    eax,DWORD PTR [edi+0x4]
   13f88:	cmp    DWORD PTR [eax],edi
   13f8a:	jne    0x13f90
   13f8c:	mov    DWORD PTR [eax],esi
   13f8e:	jmp    0x13f93
   13f90:	mov    DWORD PTR [eax+0x8],esi
   13f93:	mov    eax,DWORD PTR [ecx+0x4]
   13f96:	mov    DWORD PTR [ebp-0x8],eax
   13f99:	cmp    DWORD PTR [eax],edi
   13f9b:	jne    0x13fbd
   13f9d:	mov    edx,DWORD PTR [edi+0x8]
   13fa0:	cmp    edx,DWORD PTR ds:0x782b4
   13fa6:	jne    0x13faf
   13fa8:	mov    edx,DWORD PTR [edi+0x4]
   13fab:	mov    DWORD PTR [eax],edx
   13fad:	jmp    0x13fbd
   13faf:	push   esi
   13fb0:	call   0x110da
   13fb5:	mov    ecx,DWORD PTR [ebp-0x8]
   13fb8:	mov    DWORD PTR [ecx],eax
   13fba:	mov    ecx,DWORD PTR [ebp-0x4]
   13fbd:	mov    eax,DWORD PTR [ecx+0x4]
   13fc0:	mov    DWORD PTR [ebp-0x8],eax
   13fc3:	cmp    DWORD PTR [eax+0x8],edi
   13fc6:	jne    0x13fe6
   13fc8:	mov    ecx,DWORD PTR [edi]
   13fca:	cmp    ecx,DWORD PTR ds:0x782b4
   13fd0:	jne    0x13fda
   13fd2:	mov    ecx,DWORD PTR [edi+0x4]
   13fd5:	mov    DWORD PTR [eax+0x8],ecx
   13fd8:	jmp    0x13fe6
   13fda:	push   esi
   13fdb:	call   0x110b8
   13fe0:	mov    ecx,DWORD PTR [ebp-0x8]
   13fe3:	mov    DWORD PTR [ecx+0x8],eax
   13fe6:	xor    edi,edi
   13fe8:	inc    edi
   13fe9:	cmp    DWORD PTR [ebx+0x10],edi
   13fec:	jne    0x14103
   13ff2:	jmp    0x140b1
   13ff7:	cmp    DWORD PTR [esi+0x10],edi
   13ffa:	jne    0x14100
   14000:	mov    eax,DWORD PTR [esi+0x4]
   14003:	cmp    esi,DWORD PTR [eax]
   14005:	jne    0x1407c
   14007:	mov    eax,DWORD PTR [eax+0x8]
   1400a:	cmp    DWORD PTR [eax+0x10],0x0
   1400e:	jne    0x14028
   14010:	mov    DWORD PTR [eax+0x10],edi
   14013:	mov    eax,DWORD PTR [esi+0x4]
   14016:	and    DWORD PTR [eax+0x10],0x0
   1401a:	push   DWORD PTR [esi+0x4]
   1401d:	call   0x12d7a
   14022:	mov    eax,DWORD PTR [esi+0x4]
   14025:	mov    eax,DWORD PTR [eax+0x8]
   14028:	mov    ecx,DWORD PTR [eax]
   1402a:	cmp    DWORD PTR [ecx+0x10],edi
   1402d:	jne    0x14037
   1402f:	mov    ecx,DWORD PTR [eax+0x8]
   14032:	cmp    DWORD PTR [ecx+0x10],edi
   14035:	je     0x140aa
   14037:	mov    ecx,DWORD PTR [eax+0x8]
   1403a:	cmp    DWORD PTR [ecx+0x10],edi
   1403d:	jne    0x14057
   1403f:	mov    ecx,DWORD PTR [eax]
   14041:	mov    DWORD PTR [ecx+0x10],edi
   14044:	mov    ecx,DWORD PTR [ebp-0x4]
   14047:	and    DWORD PTR [eax+0x10],0x0
   1404b:	push   eax
   1404c:	call   0x12dc8
   14051:	mov    eax,DWORD PTR [esi+0x4]
   14054:	mov    eax,DWORD PTR [eax+0x8]
   14057:	mov    ecx,DWORD PTR [esi+0x4]
   1405a:	mov    ecx,DWORD PTR [ecx+0x10]
   1405d:	mov    DWORD PTR [eax+0x10],ecx
   14060:	mov    ecx,DWORD PTR [esi+0x4]
   14063:	mov    DWORD PTR [ecx+0x10],edi
   14066:	mov    eax,DWORD PTR [eax+0x8]
   14069:	mov    ecx,DWORD PTR [ebp-0x4]
   1406c:	mov    DWORD PTR [eax+0x10],edi
   1406f:	push   DWORD PTR [esi+0x4]
   14072:	call   0x12d7a
   14077:	jmp    0x14100
   1407c:	mov    eax,DWORD PTR [eax]
   1407e:	cmp    DWORD PTR [eax+0x10],0x0
   14082:	jne    0x1409b
   14084:	mov    DWORD PTR [eax+0x10],edi
   14087:	mov    eax,DWORD PTR [esi+0x4]
   1408a:	and    DWORD PTR [eax+0x10],0x0
   1408e:	push   DWORD PTR [esi+0x4]
   14091:	call   0x12dc8
   14096:	mov    eax,DWORD PTR [esi+0x4]
   14099:	mov    eax,DWORD PTR [eax]
   1409b:	mov    ecx,DWORD PTR [eax+0x8]
   1409e:	cmp    DWORD PTR [ecx+0x10],edi
   140a1:	jne    0x140c2
   140a3:	mov    ecx,DWORD PTR [eax]
   140a5:	cmp    DWORD PTR [ecx+0x10],edi
   140a8:	jne    0x140c2
   140aa:	and    DWORD PTR [eax+0x10],0x0
   140ae:	mov    esi,DWORD PTR [esi+0x4]
   140b1:	mov    ecx,DWORD PTR [ebp-0x4]
   140b4:	mov    eax,DWORD PTR [ecx+0x4]
   140b7:	cmp    esi,DWORD PTR [eax+0x4]
   140ba:	jne    0x13ff7
   140c0:	jmp    0x14100
   140c2:	mov    ecx,DWORD PTR [eax]
   140c4:	cmp    DWORD PTR [ecx+0x10],edi
   140c7:	jne    0x140e1
   140c9:	mov    ecx,DWORD PTR [eax+0x8]
   140cc:	mov    DWORD PTR [ecx+0x10],edi
   140cf:	mov    ecx,DWORD PTR [ebp-0x4]
   140d2:	and    DWORD PTR [eax+0x10],0x0
   140d6:	push   eax
   140d7:	call   0x12d7a
   140dc:	mov    eax,DWORD PTR [esi+0x4]
   140df:	mov    eax,DWORD PTR [eax]
   140e1:	mov    ecx,DWORD PTR [esi+0x4]
   140e4:	mov    ecx,DWORD PTR [ecx+0x10]
   140e7:	mov    DWORD PTR [eax+0x10],ecx
   140ea:	mov    ecx,DWORD PTR [esi+0x4]
   140ed:	mov    DWORD PTR [ecx+0x10],edi
   140f0:	mov    eax,DWORD PTR [eax]
   140f2:	mov    ecx,DWORD PTR [ebp-0x4]
   140f5:	mov    DWORD PTR [eax+0x10],edi
   140f8:	push   DWORD PTR [esi+0x4]
   140fb:	call   0x12dc8
   14100:	mov    DWORD PTR [esi+0x10],edi
   14103:	push   ebx
   14104:	call   0x1da56
   14109:	mov    eax,DWORD PTR [ebp-0x4]
   1410c:	dec    DWORD PTR [eax+0xc]
   1410f:	mov    eax,DWORD PTR [ebp+0x8]
   14112:	pop    ecx
   14113:	mov    ecx,DWORD PTR [ebp+0xc]
   14116:	pop    edi
   14117:	pop    esi
   14118:	mov    DWORD PTR [eax],ecx
   1411a:	pop    ebx
   1411b:	leave  
   1411c:	ret    0x8
   1411f:	int3   
   14120:	int3   
   14121:	int3   
   14122:	int3   
   14123:	int3   
   14124:	mov    edi,edi
   14126:	push   ebp
   14127:	mov    ebp,esp
   14129:	push   esi
   1412a:	push   edi
   1412b:	push   DWORD PTR [ebp+0xc]
   1412e:	mov    edi,ecx
   14130:	call   0x13278
   14135:	push   DWORD PTR [ebp+0xc]
   14138:	mov    ecx,edi
   1413a:	mov    esi,eax
   1413c:	call   0x13240
   14141:	mov    ecx,DWORD PTR [ebp+0x8]
   14144:	pop    edi
   14145:	mov    DWORD PTR [ecx],eax
   14147:	mov    DWORD PTR [ecx+0x4],esi
   1414a:	mov    eax,ecx
   1414c:	pop    esi
   1414d:	pop    ebp
   1414e:	ret    0x8
   14151:	int3   
   14152:	int3   
   14153:	int3   
   14154:	int3   
   14155:	int3   
   14156:	mov    edi,edi
   14158:	push   ebp
   14159:	mov    ebp,esp
   1415b:	push   0x0
   1415d:	push   0x18
   1415f:	call   0x132b0
   14164:	mov    ecx,DWORD PTR [ebp+0x8]
   14167:	mov    DWORD PTR [eax+0x4],ecx
   1416a:	mov    ecx,DWORD PTR [ebp+0xc]
   1416d:	mov    DWORD PTR [eax+0x14],ecx
   14170:	pop    ebp
   14171:	ret    0x8
   14174:	int3   
   14175:	int3   
   14176:	int3   
   14177:	int3   
   14178:	int3   
   14179:	int3   
   1417a:	mov    edi,edi
   1417c:	push   ebp
   1417d:	mov    ebp,esp
   1417f:	push   0x0
   14181:	push   0x60
   14183:	call   0x132b0
   14188:	mov    ecx,DWORD PTR [ebp+0x8]
   1418b:	mov    DWORD PTR [eax+0x4],ecx
   1418e:	mov    ecx,DWORD PTR [ebp+0xc]
   14191:	mov    DWORD PTR [eax+0x58],ecx
   14194:	pop    ebp
   14195:	ret    0x8
   14198:	int3   
   14199:	int3   
   1419a:	int3   
   1419b:	int3   
   1419c:	int3   
   1419d:	int3   
   1419e:	mov    edi,edi
   141a0:	push   ebp
   141a1:	mov    ebp,esp
   141a3:	push   ecx
   141a4:	push   ecx
   141a5:	push   ebx
   141a6:	push   esi
   141a7:	mov    DWORD PTR [ebp-0x4],ecx
   141aa:	push   edi
   141ab:	mov    edi,DWORD PTR [ebp+0xc]
   141ae:	lea    ecx,[ebp+0xc]
   141b1:	call   0x113fe
   141b6:	mov    esi,DWORD PTR [edi]
   141b8:	mov    eax,ds:0x782c0
   141bd:	mov    ebx,edi
   141bf:	mov    DWORD PTR [ebp-0x8],esi
   141c2:	cmp    esi,eax
   141c4:	jne    0x141e2
   141c6:	mov    esi,DWORD PTR [edi+0x8]
   141c9:	mov    eax,DWORD PTR [ebx+0x4]
   141cc:	mov    ecx,DWORD PTR [ebp-0x4]
   141cf:	mov    DWORD PTR [esi+0x4],eax
   141d2:	mov    eax,DWORD PTR [ecx+0x4]
   141d5:	cmp    DWORD PTR [eax+0x4],edi
   141d8:	jne    0x14257
   141da:	mov    DWORD PTR [eax+0x4],esi
   141dd:	jmp    0x14265
   141e2:	mov    ecx,DWORD PTR [edi+0x8]
   141e5:	cmp    ecx,eax
   141e7:	je     0x141c9
   141e9:	push   ecx
   141ea:	call   0x112d8
   141ef:	mov    ebx,eax
   141f1:	mov    esi,DWORD PTR [ebx+0x8]
   141f4:	cmp    ebx,edi
   141f6:	je     0x141c9
   141f8:	mov    eax,DWORD PTR [ebp-0x8]
   141fb:	mov    DWORD PTR [eax+0x4],ebx
   141fe:	mov    eax,DWORD PTR [edi]
   14200:	mov    DWORD PTR [ebx],eax
   14202:	cmp    ebx,DWORD PTR [edi+0x8]
   14205:	jne    0x1420c
   14207:	mov    DWORD PTR [esi+0x4],ebx
   1420a:	jmp    0x14223
   1420c:	mov    eax,DWORD PTR [ebx+0x4]
   1420f:	mov    DWORD PTR [esi+0x4],eax
   14212:	mov    eax,DWORD PTR [ebx+0x4]
   14215:	mov    DWORD PTR [eax],esi
   14217:	mov    eax,DWORD PTR [edi+0x8]
   1421a:	mov    DWORD PTR [ebx+0x8],eax
   1421d:	mov    eax,DWORD PTR [edi+0x8]
   14220:	mov    DWORD PTR [eax+0x4],ebx
   14223:	mov    eax,DWORD PTR [ebp-0x4]
   14226:	mov    eax,DWORD PTR [eax+0x4]
   14229:	cmp    DWORD PTR [eax+0x4],edi
   1422c:	jne    0x14233
   1422e:	mov    DWORD PTR [eax+0x4],ebx
   14231:	jmp    0x14241
   14233:	mov    eax,DWORD PTR [edi+0x4]
   14236:	cmp    DWORD PTR [eax],edi
   14238:	jne    0x1423e
   1423a:	mov    DWORD PTR [eax],ebx
   1423c:	jmp    0x14241
   1423e:	mov    DWORD PTR [eax+0x8],ebx
   14241:	mov    eax,DWORD PTR [edi+0x4]
   14244:	mov    DWORD PTR [ebx+0x4],eax
   14247:	mov    eax,DWORD PTR [ebx+0x1c]
   1424a:	mov    ecx,DWORD PTR [edi+0x1c]
   1424d:	mov    DWORD PTR [ebx+0x1c],ecx
   14250:	mov    DWORD PTR [edi+0x1c],eax
   14253:	mov    ebx,edi
   14255:	jmp    0x142b8
   14257:	mov    eax,DWORD PTR [edi+0x4]
   1425a:	cmp    DWORD PTR [eax],edi
   1425c:	jne    0x14262
   1425e:	mov    DWORD PTR [eax],esi
   14260:	jmp    0x14265
   14262:	mov    DWORD PTR [eax+0x8],esi
   14265:	mov    eax,DWORD PTR [ecx+0x4]
   14268:	mov    DWORD PTR [ebp-0x8],eax
   1426b:	cmp    DWORD PTR [eax],edi
   1426d:	jne    0x1428f
   1426f:	mov    edx,DWORD PTR [edi+0x8]
   14272:	cmp    edx,DWORD PTR ds:0x782c0
   14278:	jne    0x14281
   1427a:	mov    edx,DWORD PTR [edi+0x4]
   1427d:	mov    DWORD PTR [eax],edx
   1427f:	jmp    0x1428f
   14281:	push   esi
   14282:	call   0x112d8
   14287:	mov    ecx,DWORD PTR [ebp-0x8]
   1428a:	mov    DWORD PTR [ecx],eax
   1428c:	mov    ecx,DWORD PTR [ebp-0x4]
   1428f:	mov    eax,DWORD PTR [ecx+0x4]
   14292:	mov    DWORD PTR [ebp-0x8],eax
   14295:	cmp    DWORD PTR [eax+0x8],edi
   14298:	jne    0x142b8
   1429a:	mov    ecx,DWORD PTR [edi]
   1429c:	cmp    ecx,DWORD PTR ds:0x782c0
   142a2:	jne    0x142ac
   142a4:	mov    ecx,DWORD PTR [edi+0x4]
   142a7:	mov    DWORD PTR [eax+0x8],ecx
   142aa:	jmp    0x142b8
   142ac:	push   esi
   142ad:	call   0x112b6
   142b2:	mov    ecx,DWORD PTR [ebp-0x8]
   142b5:	mov    DWORD PTR [ecx+0x8],eax
   142b8:	xor    edi,edi
   142ba:	inc    edi
   142bb:	cmp    DWORD PTR [ebx+0x1c],edi
   142be:	jne    0x143d5
   142c4:	jmp    0x14383
   142c9:	cmp    DWORD PTR [esi+0x1c],edi
   142cc:	jne    0x143d2
   142d2:	mov    eax,DWORD PTR [esi+0x4]
   142d5:	cmp    esi,DWORD PTR [eax]
   142d7:	jne    0x1434e
   142d9:	mov    eax,DWORD PTR [eax+0x8]
   142dc:	cmp    DWORD PTR [eax+0x1c],0x0
   142e0:	jne    0x142fa
   142e2:	mov    DWORD PTR [eax+0x1c],edi
   142e5:	mov    eax,DWORD PTR [esi+0x4]
   142e8:	and    DWORD PTR [eax+0x1c],0x0
   142ec:	push   DWORD PTR [esi+0x4]
   142ef:	call   0x12f6e
   142f4:	mov    eax,DWORD PTR [esi+0x4]
   142f7:	mov    eax,DWORD PTR [eax+0x8]
   142fa:	mov    ecx,DWORD PTR [eax]
   142fc:	cmp    DWORD PTR [ecx+0x1c],edi
   142ff:	jne    0x14309
   14301:	mov    ecx,DWORD PTR [eax+0x8]
   14304:	cmp    DWORD PTR [ecx+0x1c],edi
   14307:	je     0x1437c
   14309:	mov    ecx,DWORD PTR [eax+0x8]
   1430c:	cmp    DWORD PTR [ecx+0x1c],edi
   1430f:	jne    0x14329
   14311:	mov    ecx,DWORD PTR [eax]
   14313:	mov    DWORD PTR [ecx+0x1c],edi
   14316:	mov    ecx,DWORD PTR [ebp-0x4]
   14319:	and    DWORD PTR [eax+0x1c],0x0
   1431d:	push   eax
   1431e:	call   0x12fbc
   14323:	mov    eax,DWORD PTR [esi+0x4]
   14326:	mov    eax,DWORD PTR [eax+0x8]
   14329:	mov    ecx,DWORD PTR [esi+0x4]
   1432c:	mov    ecx,DWORD PTR [ecx+0x1c]
   1432f:	mov    DWORD PTR [eax+0x1c],ecx
   14332:	mov    ecx,DWORD PTR [esi+0x4]
   14335:	mov    DWORD PTR [ecx+0x1c],edi
   14338:	mov    eax,DWORD PTR [eax+0x8]
   1433b:	mov    ecx,DWORD PTR [ebp-0x4]
   1433e:	mov    DWORD PTR [eax+0x1c],edi
   14341:	push   DWORD PTR [esi+0x4]
   14344:	call   0x12f6e
   14349:	jmp    0x143d2
   1434e:	mov    eax,DWORD PTR [eax]
   14350:	cmp    DWORD PTR [eax+0x1c],0x0
   14354:	jne    0x1436d
   14356:	mov    DWORD PTR [eax+0x1c],edi
   14359:	mov    eax,DWORD PTR [esi+0x4]
   1435c:	and    DWORD PTR [eax+0x1c],0x0
   14360:	push   DWORD PTR [esi+0x4]
   14363:	call   0x12fbc
   14368:	mov    eax,DWORD PTR [esi+0x4]
   1436b:	mov    eax,DWORD PTR [eax]
   1436d:	mov    ecx,DWORD PTR [eax+0x8]
   14370:	cmp    DWORD PTR [ecx+0x1c],edi
   14373:	jne    0x14394
   14375:	mov    ecx,DWORD PTR [eax]
   14377:	cmp    DWORD PTR [ecx+0x1c],edi
   1437a:	jne    0x14394
   1437c:	and    DWORD PTR [eax+0x1c],0x0
   14380:	mov    esi,DWORD PTR [esi+0x4]
   14383:	mov    ecx,DWORD PTR [ebp-0x4]
   14386:	mov    eax,DWORD PTR [ecx+0x4]
   14389:	cmp    esi,DWORD PTR [eax+0x4]
   1438c:	jne    0x142c9
   14392:	jmp    0x143d2
   14394:	mov    ecx,DWORD PTR [eax]
   14396:	cmp    DWORD PTR [ecx+0x1c],edi
   14399:	jne    0x143b3
   1439b:	mov    ecx,DWORD PTR [eax+0x8]
   1439e:	mov    DWORD PTR [ecx+0x1c],edi
   143a1:	mov    ecx,DWORD PTR [ebp-0x4]
   143a4:	and    DWORD PTR [eax+0x1c],0x0
   143a8:	push   eax
   143a9:	call   0x12f6e
   143ae:	mov    eax,DWORD PTR [esi+0x4]
   143b1:	mov    eax,DWORD PTR [eax]
   143b3:	mov    ecx,DWORD PTR [esi+0x4]
   143b6:	mov    ecx,DWORD PTR [ecx+0x1c]
   143b9:	mov    DWORD PTR [eax+0x1c],ecx
   143bc:	mov    ecx,DWORD PTR [esi+0x4]
   143bf:	mov    DWORD PTR [ecx+0x1c],edi
   143c2:	mov    eax,DWORD PTR [eax]
   143c4:	mov    ecx,DWORD PTR [ebp-0x4]
   143c7:	mov    DWORD PTR [eax+0x1c],edi
   143ca:	push   DWORD PTR [esi+0x4]
   143cd:	call   0x12fbc
   143d2:	mov    DWORD PTR [esi+0x1c],edi
   143d5:	lea    eax,[ebx+0xc]
   143d8:	push   eax
   143d9:	call   0x132d2
   143de:	push   ebx
   143df:	call   0x1da56
   143e4:	mov    eax,DWORD PTR [ebp-0x4]
   143e7:	dec    DWORD PTR [eax+0xc]
   143ea:	mov    eax,DWORD PTR [ebp+0x8]
   143ed:	pop    ecx
   143ee:	mov    ecx,DWORD PTR [ebp+0xc]
   143f1:	pop    edi
   143f2:	pop    esi
   143f3:	mov    DWORD PTR [eax],ecx
   143f5:	pop    ebx
   143f6:	leave  
   143f7:	ret    0x8
   143fa:	int3   
   143fb:	int3   
   143fc:	int3   
   143fd:	int3   
   143fe:	int3   
   143ff:	int3   
   14400:	mov    edi,edi
   14402:	push   ebp
   14403:	mov    ebp,esp
   14405:	push   ebx
   14406:	push   esi
   14407:	push   edi
   14408:	mov    edi,DWORD PTR [ebp+0x8]
   1440b:	mov    ebx,ecx
   1440d:	mov    esi,edi
   1440f:	cmp    edi,DWORD PTR ds:0x782c0
   14415:	je     0x1443d
   14417:	push   DWORD PTR [esi+0x8]
   1441a:	mov    ecx,ebx
   1441c:	call   0x14400
   14421:	mov    esi,DWORD PTR [esi]
   14423:	lea    eax,[edi+0xc]
   14426:	push   eax
   14427:	call   0x132d2
   1442c:	push   edi
   1442d:	call   0x1da56
   14432:	pop    ecx
   14433:	mov    edi,esi
   14435:	cmp    esi,DWORD PTR ds:0x782c0
   1443b:	jne    0x14417
   1443d:	pop    edi
   1443e:	pop    esi
   1443f:	pop    ebx
   14440:	pop    ebp
   14441:	ret    0x4
   14444:	int3   
   14445:	int3   
   14446:	int3   
   14447:	int3   
   14448:	int3   
   14449:	int3   
   1444a:	mov    edi,edi
   1444c:	push   ebp
   1444d:	mov    ebp,esp
   1444f:	push   0x0
   14451:	push   0x14
   14453:	call   0x132b0
   14458:	mov    ecx,DWORD PTR [ebp+0x8]
   1445b:	mov    DWORD PTR [eax+0x4],ecx
   1445e:	mov    ecx,DWORD PTR [ebp+0xc]
   14461:	mov    DWORD PTR [eax+0x10],ecx
   14464:	pop    ebp
   14465:	ret    0x8
   14468:	int3   
   14469:	int3   
   1446a:	int3   
   1446b:	int3   
   1446c:	int3   
   1446d:	int3   
   1446e:	mov    edi,edi
   14470:	push   ebp
   14471:	mov    ebp,esp
   14473:	push   0x0
   14475:	push   0x68
   14477:	call   0x132b0
   1447c:	mov    ecx,DWORD PTR [ebp+0x8]
   1447f:	mov    DWORD PTR [eax+0x4],ecx
   14482:	mov    ecx,DWORD PTR [ebp+0xc]
   14485:	mov    DWORD PTR [eax+0x60],ecx
   14488:	pop    ebp
   14489:	ret    0x8
   1448c:	int3   
   1448d:	int3   
   1448e:	int3   
   1448f:	int3   
   14490:	int3   
   14491:	int3   
   14492:	mov    edi,edi
   14494:	push   ebp
   14495:	mov    ebp,esp
   14497:	push   0x0
   14499:	push   0x20
   1449b:	call   0x132b0
   144a0:	mov    ecx,DWORD PTR [ebp+0x8]
   144a3:	mov    DWORD PTR [eax+0x4],ecx
   144a6:	mov    ecx,DWORD PTR [ebp+0xc]
   144a9:	mov    DWORD PTR [eax+0x1c],ecx
   144ac:	pop    ebp
   144ad:	ret    0x8
   144b0:	int3   
   144b1:	int3   
   144b2:	int3   
   144b3:	int3   
   144b4:	int3   
   144b5:	int3   
   144b6:	mov    edi,edi
   144b8:	push   ebp
   144b9:	mov    ebp,esp
   144bb:	push   esi
   144bc:	push   edi
   144bd:	mov    edi,DWORD PTR [ebp+0x8]
   144c0:	push   edi
   144c1:	mov    esi,ecx
   144c3:	call   0x134f0
   144c8:	add    edi,0x8
   144cb:	push   edi
   144cc:	lea    ecx,[esi+0x8]
   144cf:	call   0x13830
   144d4:	pop    edi
   144d5:	mov    eax,esi
   144d7:	pop    esi
   144d8:	pop    ebp
   144d9:	ret    0x4
   144dc:	int3   
   144dd:	int3   
   144de:	int3   
   144df:	int3   
   144e0:	int3   
   144e1:	int3   
   144e2:	mov    edi,edi
   144e4:	push   ebp
   144e5:	mov    ebp,esp
   144e7:	mov    ecx,DWORD PTR [ebp+0x8]
   144ea:	test   ecx,ecx
   144ec:	je     0x144f6
   144ee:	push   DWORD PTR [ebp+0xc]
   144f1:	call   0x144b6
   144f6:	pop    ebp
   144f7:	ret    0x8
   144fa:	int3   
   144fb:	int3   
   144fc:	int3   
   144fd:	int3   
   144fe:	int3   
   144ff:	int3   
   14500:	mov    edi,edi
   14502:	push   ebp
   14503:	mov    ebp,esp
   14505:	mov    ecx,DWORD PTR [ebp+0x8]
   14508:	test   ecx,ecx
   1450a:	je     0x14514
   1450c:	push   DWORD PTR [ebp+0xc]
   1450f:	call   0x13856
   14514:	pop    ebp
   14515:	ret    0x8
   14518:	int3   
   14519:	int3   
   1451a:	int3   
   1451b:	int3   
   1451c:	int3   
   1451d:	int3   
   1451e:	mov    edi,edi
   14520:	push   ebp
   14521:	mov    ebp,esp
   14523:	mov    ecx,DWORD PTR [ebp+0x8]
   14526:	test   ecx,ecx
   14528:	je     0x14532
   1452a:	push   DWORD PTR [ebp+0xc]
   1452d:	call   0x1372e
   14532:	pop    ebp
   14533:	ret    0x8
   14536:	int3   
   14537:	int3   
   14538:	int3   
   14539:	int3   
   1453a:	int3   
   1453b:	int3   
   1453c:	mov    edi,edi
   1453e:	push   ebp
   1453f:	mov    ebp,esp
   14541:	mov    ecx,DWORD PTR [ebp+0x8]
   14544:	test   ecx,ecx
   14546:	je     0x14550
   14548:	push   DWORD PTR [ebp+0xc]
   1454b:	call   0x13702
   14550:	pop    ebp
   14551:	ret    0x8
   14554:	int3   
   14555:	int3   
   14556:	int3   
   14557:	int3   
   14558:	int3   
   14559:	int3   
   1455a:	mov    edi,edi
   1455c:	push   ebp
   1455d:	mov    ebp,esp
   1455f:	push   ecx
   14560:	mov    eax,ds:0x782b4
   14565:	push   ebx
   14566:	mov    ebx,DWORD PTR [ebp+0xc]
   14569:	push   esi
   1456a:	mov    esi,DWORD PTR [ebp+0x8]
   1456d:	mov    DWORD PTR [ebp-0x4],ecx
   14570:	mov    DWORD PTR [ebp+0x8],esi
   14573:	cmp    esi,eax
   14575:	je     0x145ba
   14577:	push   edi
   14578:	push   DWORD PTR [esi+0x10]
   1457b:	mov    ecx,DWORD PTR [ebp-0x4]
   1457e:	push   ebx
   1457f:	call   0x1444a
   14584:	mov    edi,eax
   14586:	cmp    DWORD PTR [ebp+0x8],esi
   14589:	jne    0x1458e
   1458b:	mov    DWORD PTR [ebp+0x8],edi
   1458e:	mov    ecx,DWORD PTR [ebp-0x4]
   14591:	push   edi
   14592:	push   DWORD PTR [esi+0x8]
   14595:	call   0x1455a
   1459a:	mov    DWORD PTR [edi+0x8],eax
   1459d:	lea    eax,[esi+0xc]
   145a0:	push   eax
   145a1:	lea    eax,[edi+0xc]
   145a4:	push   eax
   145a5:	call   0x1a3d0
   145aa:	mov    DWORD PTR [ebx],edi
   145ac:	mov    esi,DWORD PTR [esi]
   145ae:	mov    eax,ds:0x782b4
   145b3:	mov    ebx,edi
   145b5:	cmp    esi,eax
   145b7:	jne    0x14578
   145b9:	pop    edi
   145ba:	mov    DWORD PTR [ebx],eax
   145bc:	mov    eax,DWORD PTR [ebp+0x8]
   145bf:	pop    esi
   145c0:	pop    ebx
   145c1:	leave  
   145c2:	ret    0x8
   145c5:	int3   
   145c6:	int3   
   145c7:	int3   
   145c8:	int3   
   145c9:	int3   
   145ca:	mov    edi,edi
   145cc:	push   ebp
   145cd:	mov    ebp,esp
   145cf:	push   edi
   145d0:	mov    edi,DWORD PTR [ebp+0xc]
   145d3:	cmp    DWORD PTR [ebp+0x8],edi
   145d6:	je     0x145ec
   145d8:	push   esi
   145d9:	mov    esi,DWORD PTR [ebp+0x10]
   145dc:	inc    DWORD PTR [esi]
   145de:	lea    ecx,[ebp+0x8]
   145e1:	call   0x135d8
   145e6:	cmp    DWORD PTR [ebp+0x8],edi
   145e9:	jne    0x145dc
   145eb:	pop    esi
   145ec:	pop    edi
   145ed:	pop    ebp
   145ee:	ret    
   145ef:	int3   
   145f0:	int3   
   145f1:	int3   
   145f2:	int3   
   145f3:	int3   
   145f4:	mov    edi,edi
   145f6:	push   ebp
   145f7:	mov    ebp,esp
   145f9:	push   DWORD PTR [ebp+0xc]
   145fc:	push   DWORD PTR [ebp+0x8]
   145ff:	call   0x13a72
   14604:	mov    eax,DWORD PTR [ebp+0x8]
   14607:	pop    ebp
   14608:	ret    0x8
   1460b:	int3   
   1460c:	int3   
   1460d:	int3   
   1460e:	int3   
   1460f:	int3   
   14610:	mov    edi,edi
   14612:	push   ebp
   14613:	mov    ebp,esp
   14615:	push   ecx
   14616:	push   esi
   14617:	mov    esi,ecx
   14619:	cmp    DWORD PTR [esi+0xc],0x0
   1461d:	mov    ecx,DWORD PTR [ebp+0xc]
   14620:	je     0x1465a
   14622:	mov    eax,DWORD PTR [esi+0x4]
   14625:	cmp    ecx,DWORD PTR [eax]
   14627:	jne    0x1465a
   14629:	cmp    DWORD PTR [ebp+0x10],eax
   1462c:	jne    0x1465a
   1462e:	push   DWORD PTR [eax+0x4]
   14631:	mov    ecx,esi
   14633:	call   0x13682
   14638:	mov    ecx,DWORD PTR ds:0x782b0
   1463e:	mov    eax,DWORD PTR [esi+0x4]
   14641:	mov    DWORD PTR [eax+0x4],ecx
   14644:	mov    eax,DWORD PTR [esi+0x4]
   14647:	and    DWORD PTR [esi+0xc],0x0
   1464b:	mov    DWORD PTR [eax],eax
   1464d:	mov    eax,DWORD PTR [esi+0x4]
   14650:	mov    DWORD PTR [eax+0x8],eax
   14653:	mov    eax,DWORD PTR [esi+0x4]
   14656:	mov    ecx,DWORD PTR [eax]
   14658:	jmp    0x1467f
   1465a:	cmp    ecx,DWORD PTR [ebp+0x10]
   1465d:	je     0x1467f
   1465f:	push   edi
   14660:	mov    edi,ecx
   14662:	lea    ecx,[ebp+0xc]
   14665:	call   0x11180
   1466a:	push   edi
   1466b:	lea    eax,[ebp-0x4]
   1466e:	push   eax
   1466f:	mov    ecx,esi
   14671:	call   0x13b64
   14676:	mov    ecx,DWORD PTR [ebp+0xc]
   14679:	cmp    ecx,DWORD PTR [ebp+0x10]
   1467c:	jne    0x14660
   1467e:	pop    edi
   1467f:	mov    eax,DWORD PTR [ebp+0x8]
   14682:	mov    DWORD PTR [eax],ecx
   14684:	pop    esi
   14685:	leave  
   14686:	ret    0xc
   14689:	int3   
   1468a:	int3   
   1468b:	int3   
   1468c:	int3   
   1468d:	int3   
   1468e:	mov    edi,edi
   14690:	push   ebp
   14691:	mov    ebp,esp
   14693:	push   ecx
   14694:	push   ecx
   14695:	push   esi
   14696:	push   DWORD PTR [ebp+0x8]
   14699:	lea    eax,[ebp-0x8]
   1469c:	push   eax
   1469d:	mov    esi,ecx
   1469f:	call   0x13dbc
   146a4:	and    DWORD PTR [ebp+0x8],0x0
   146a8:	lea    eax,[ebp+0x8]
   146ab:	push   eax
   146ac:	push   DWORD PTR [ebp-0x4]
   146af:	push   DWORD PTR [ebp-0x8]
   146b2:	call   0x1375a
   146b7:	add    esp,0xc
   146ba:	push   DWORD PTR [ebp-0x4]
   146bd:	lea    eax,[ebp-0x4]
   146c0:	push   DWORD PTR [ebp-0x8]
   146c3:	mov    ecx,esi
   146c5:	push   eax
   146c6:	call   0x14610
   146cb:	mov    eax,DWORD PTR [ebp+0x8]
   146ce:	pop    esi
   146cf:	leave  
   146d0:	ret    0x4
   146d3:	int3   
   146d4:	int3   
   146d5:	int3   
   146d6:	int3   
   146d7:	int3   
   146d8:	mov    edi,edi
   146da:	push   ebp
   146db:	mov    ebp,esp
   146dd:	push   ecx
   146de:	push   esi
   146df:	mov    esi,ecx
   146e1:	cmp    DWORD PTR [esi+0xc],0x0
   146e5:	mov    ecx,DWORD PTR [ebp+0xc]
   146e8:	je     0x14722
   146ea:	mov    eax,DWORD PTR [esi+0x4]
   146ed:	cmp    ecx,DWORD PTR [eax]
   146ef:	jne    0x14722
   146f1:	cmp    DWORD PTR [ebp+0x10],eax
   146f4:	jne    0x14722
   146f6:	push   DWORD PTR [eax+0x4]
   146f9:	mov    ecx,esi
   146fb:	call   0x136c2
   14700:	mov    ecx,DWORD PTR ds:0x782b4
   14706:	mov    eax,DWORD PTR [esi+0x4]
   14709:	mov    DWORD PTR [eax+0x4],ecx
   1470c:	mov    eax,DWORD PTR [esi+0x4]
   1470f:	and    DWORD PTR [esi+0xc],0x0
   14713:	mov    DWORD PTR [eax],eax
   14715:	mov    eax,DWORD PTR [esi+0x4]
   14718:	mov    DWORD PTR [eax+0x8],eax
   1471b:	mov    eax,DWORD PTR [esi+0x4]
   1471e:	mov    ecx,DWORD PTR [eax]
   14720:	jmp    0x14747
   14722:	cmp    ecx,DWORD PTR [ebp+0x10]
   14725:	je     0x14747
   14727:	push   edi
   14728:	mov    edi,ecx
   1472a:	lea    ecx,[ebp+0xc]
   1472d:	call   0x12d44
   14732:	push   edi
   14733:	lea    eax,[ebp-0x4]
   14736:	push   eax
   14737:	mov    ecx,esi
   14739:	call   0x13ecc
   1473e:	mov    ecx,DWORD PTR [ebp+0xc]
   14741:	cmp    ecx,DWORD PTR [ebp+0x10]
   14744:	jne    0x14728
   14746:	pop    edi
   14747:	mov    eax,DWORD PTR [ebp+0x8]
   1474a:	mov    DWORD PTR [eax],ecx
   1474c:	pop    esi
   1474d:	leave  
   1474e:	ret    0xc
   14751:	int3   
   14752:	int3   
   14753:	int3   
   14754:	int3   
   14755:	int3   
   14756:	mov    edi,edi
   14758:	push   ebp
   14759:	mov    ebp,esp
   1475b:	push   ecx
   1475c:	push   ecx
   1475d:	push   esi
   1475e:	push   DWORD PTR [ebp+0x8]
   14761:	lea    eax,[ebp-0x8]
   14764:	push   eax
   14765:	mov    esi,ecx
   14767:	call   0x14124
   1476c:	and    DWORD PTR [ebp+0x8],0x0
   14770:	lea    eax,[ebp+0x8]
   14773:	push   eax
   14774:	push   DWORD PTR [ebp-0x4]
   14777:	push   DWORD PTR [ebp-0x8]
   1477a:	call   0x137c0
   1477f:	add    esp,0xc
   14782:	push   DWORD PTR [ebp-0x4]
   14785:	lea    eax,[ebp-0x4]
   14788:	push   DWORD PTR [ebp-0x8]
   1478b:	mov    ecx,esi
   1478d:	push   eax
   1478e:	call   0x146d8
   14793:	mov    eax,DWORD PTR [ebp+0x8]
   14796:	pop    esi
   14797:	leave  
   14798:	ret    0x4
   1479b:	int3   
   1479c:	int3   
   1479d:	int3   
   1479e:	int3   
   1479f:	int3   
   147a0:	mov    edi,edi
   147a2:	push   esi
   147a3:	push   edi
   147a4:	push   0x1
   147a6:	xor    edi,edi
   147a8:	push   edi
   147a9:	mov    esi,ecx
   147ab:	call   0x14156
   147b0:	cmp    DWORD PTR ds:0x782b0,edi
   147b6:	jne    0x147cd
   147b8:	mov    ecx,eax
   147ba:	mov    DWORD PTR ds:0x782b0,ecx
   147c0:	mov    DWORD PTR [ecx],edi
   147c2:	mov    ecx,DWORD PTR ds:0x782b0
   147c8:	xor    eax,eax
   147ca:	mov    DWORD PTR [ecx+0x8],edi
   147cd:	inc    DWORD PTR ds:0x78410
   147d3:	cmp    eax,edi
   147d5:	je     0x147de
   147d7:	push   eax
   147d8:	call   0x1da56
   147dd:	pop    ecx
   147de:	push   edi
   147df:	push   DWORD PTR ds:0x782b0
   147e5:	mov    ecx,esi
   147e7:	call   0x14156
   147ec:	mov    DWORD PTR [esi+0xc],edi
   147ef:	mov    DWORD PTR [esi+0x4],eax
   147f2:	mov    DWORD PTR [eax],eax
   147f4:	mov    esi,DWORD PTR [esi+0x4]
   147f7:	pop    edi
   147f8:	mov    DWORD PTR [esi+0x8],esi
   147fb:	pop    esi
   147fc:	ret    
   147fd:	int3   
   147fe:	int3   
   147ff:	int3   
   14800:	int3   
   14801:	int3   
   14802:	mov    edi,edi
   14804:	push   esi
   14805:	push   edi
   14806:	push   0x1
   14808:	xor    edi,edi
   1480a:	push   edi
   1480b:	mov    esi,ecx
   1480d:	call   0x1417a
   14812:	cmp    DWORD PTR ds:0x782bc,edi
   14818:	jne    0x1482f
   1481a:	mov    ecx,eax
   1481c:	mov    DWORD PTR ds:0x782bc,ecx
   14822:	mov    DWORD PTR [ecx],edi
   14824:	mov    ecx,DWORD PTR ds:0x782bc
   1482a:	xor    eax,eax
   1482c:	mov    DWORD PTR [ecx+0x8],edi
   1482f:	inc    DWORD PTR ds:0x78414
   14835:	cmp    eax,edi
   14837:	je     0x14840
   14839:	push   eax
   1483a:	call   0x1da56
   1483f:	pop    ecx
   14840:	push   edi
   14841:	push   DWORD PTR ds:0x782bc
   14847:	mov    ecx,esi
   14849:	call   0x1417a
   1484e:	mov    DWORD PTR [esi+0xc],edi
   14851:	mov    DWORD PTR [esi+0x4],eax
   14854:	mov    DWORD PTR [eax],eax
   14856:	mov    esi,DWORD PTR [esi+0x4]
   14859:	pop    edi
   1485a:	mov    DWORD PTR [esi+0x8],esi
   1485d:	pop    esi
   1485e:	ret    
   1485f:	int3   
   14860:	int3   
   14861:	int3   
   14862:	int3   
   14863:	int3   
   14864:	mov    edi,edi
   14866:	push   ebp
   14867:	mov    ebp,esp
   14869:	push   ecx
   1486a:	push   esi
   1486b:	mov    esi,ecx
   1486d:	cmp    DWORD PTR [esi+0xc],0x0
   14871:	mov    ecx,DWORD PTR [ebp+0xc]
   14874:	je     0x148ae
   14876:	mov    eax,DWORD PTR [esi+0x4]
   14879:	cmp    ecx,DWORD PTR [eax]
   1487b:	jne    0x148ae
   1487d:	cmp    DWORD PTR [ebp+0x10],eax
   14880:	jne    0x148ae
   14882:	push   DWORD PTR [eax+0x4]
   14885:	mov    ecx,esi
   14887:	call   0x14400
   1488c:	mov    ecx,DWORD PTR ds:0x782c0
   14892:	mov    eax,DWORD PTR [esi+0x4]
   14895:	mov    DWORD PTR [eax+0x4],ecx
   14898:	mov    eax,DWORD PTR [esi+0x4]
   1489b:	and    DWORD PTR [esi+0xc],0x0
   1489f:	mov    DWORD PTR [eax],eax
   148a1:	mov    eax,DWORD PTR [esi+0x4]
   148a4:	mov    DWORD PTR [eax+0x8],eax
   148a7:	mov    eax,DWORD PTR [esi+0x4]
   148aa:	mov    ecx,DWORD PTR [eax]
   148ac:	jmp    0x148d3
   148ae:	cmp    ecx,DWORD PTR [ebp+0x10]
   148b1:	je     0x148d3
   148b3:	push   edi
   148b4:	mov    edi,ecx
   148b6:	lea    ecx,[ebp+0xc]
   148b9:	call   0x113fe
   148be:	push   edi
   148bf:	lea    eax,[ebp-0x4]
   148c2:	push   eax
   148c3:	mov    ecx,esi
   148c5:	call   0x1419e
   148ca:	mov    ecx,DWORD PTR [ebp+0xc]
   148cd:	cmp    ecx,DWORD PTR [ebp+0x10]
   148d0:	jne    0x148b4
   148d2:	pop    edi
   148d3:	mov    eax,DWORD PTR [ebp+0x8]
   148d6:	mov    DWORD PTR [eax],ecx
   148d8:	pop    esi
   148d9:	leave  
   148da:	ret    0xc
   148dd:	int3   
   148de:	int3   
   148df:	int3   
   148e0:	int3   
   148e1:	int3   
   148e2:	mov    edi,edi
   148e4:	push   esi
   148e5:	push   edi
   148e6:	push   0x1
   148e8:	xor    edi,edi
   148ea:	push   edi
   148eb:	mov    esi,ecx
   148ed:	call   0x14492
   148f2:	cmp    DWORD PTR ds:0x782c0,edi
   148f8:	jne    0x1490f
   148fa:	mov    ecx,eax
   148fc:	mov    DWORD PTR ds:0x782c0,ecx
   14902:	mov    DWORD PTR [ecx],edi
   14904:	mov    ecx,DWORD PTR ds:0x782c0
   1490a:	xor    eax,eax
   1490c:	mov    DWORD PTR [ecx+0x8],edi
   1490f:	inc    DWORD PTR ds:0x78418
   14915:	cmp    eax,edi
   14917:	je     0x14920
   14919:	push   eax
   1491a:	call   0x1da56
   1491f:	pop    ecx
   14920:	push   edi
   14921:	push   DWORD PTR ds:0x782c0
   14927:	mov    ecx,esi
   14929:	call   0x14492
   1492e:	mov    DWORD PTR [esi+0xc],edi
   14931:	mov    DWORD PTR [esi+0x4],eax
   14934:	mov    DWORD PTR [eax],eax
   14936:	mov    esi,DWORD PTR [esi+0x4]
   14939:	pop    edi
   1493a:	mov    DWORD PTR [esi+0x8],esi
   1493d:	pop    esi
   1493e:	ret    
   1493f:	int3   
   14940:	int3   
   14941:	int3   
   14942:	int3   
   14943:	int3   
   14944:	mov    edi,edi
   14946:	push   esi
   14947:	push   edi
   14948:	push   0x1
   1494a:	xor    edi,edi
   1494c:	push   edi
   1494d:	mov    esi,ecx
   1494f:	call   0x14156
   14954:	cmp    DWORD PTR ds:0x782c4,edi
   1495a:	jne    0x14971
   1495c:	mov    ecx,eax
   1495e:	mov    DWORD PTR ds:0x782c4,ecx
   14964:	mov    DWORD PTR [ecx],edi
   14966:	mov    ecx,DWORD PTR ds:0x782c4
   1496c:	xor    eax,eax
   1496e:	mov    DWORD PTR [ecx+0x8],edi
   14971:	inc    DWORD PTR ds:0x7841c
   14977:	cmp    eax,edi
   14979:	je     0x14982
   1497b:	push   eax
   1497c:	call   0x1da56
   14981:	pop    ecx
   14982:	push   edi
   14983:	push   DWORD PTR ds:0x782c4
   14989:	mov    ecx,esi
   1498b:	call   0x14156
   14990:	mov    DWORD PTR [esi+0xc],edi
   14993:	mov    DWORD PTR [esi+0x4],eax
   14996:	mov    DWORD PTR [eax],eax
   14998:	mov    esi,DWORD PTR [esi+0x4]
   1499b:	pop    edi
   1499c:	mov    DWORD PTR [esi+0x8],esi
   1499f:	pop    esi
   149a0:	ret    
   149a1:	int3   
   149a2:	int3   
   149a3:	int3   
   149a4:	int3   
   149a5:	int3   
   149a6:	mov    edi,edi
   149a8:	push   esi
   149a9:	push   edi
   149aa:	push   0x1
   149ac:	xor    edi,edi
   149ae:	push   edi
   149af:	mov    esi,ecx
   149b1:	call   0x1444a
   149b6:	cmp    DWORD PTR ds:0x782b4,edi
   149bc:	jne    0x149d3
   149be:	mov    ecx,eax
   149c0:	mov    DWORD PTR ds:0x782b4,ecx
   149c6:	mov    DWORD PTR [ecx],edi
   149c8:	mov    ecx,DWORD PTR ds:0x782b4
   149ce:	xor    eax,eax
   149d0:	mov    DWORD PTR [ecx+0x8],edi
   149d3:	inc    DWORD PTR ds:0x78420
   149d9:	cmp    eax,edi
   149db:	je     0x149e4
   149dd:	push   eax
   149de:	call   0x1da56
   149e3:	pop    ecx
   149e4:	push   edi
   149e5:	push   DWORD PTR ds:0x782b4
   149eb:	mov    ecx,esi
   149ed:	call   0x1444a
   149f2:	mov    DWORD PTR [esi+0xc],edi
   149f5:	mov    DWORD PTR [esi+0x4],eax
   149f8:	mov    DWORD PTR [eax],eax
   149fa:	mov    esi,DWORD PTR [esi+0x4]
   149fd:	pop    edi
   149fe:	mov    DWORD PTR [esi+0x8],esi
   14a01:	pop    esi
   14a02:	ret    
   14a03:	int3   
   14a04:	int3   
   14a05:	int3   
   14a06:	int3   
   14a07:	int3   
   14a08:	mov    edi,edi
   14a0a:	push   ebp
   14a0b:	mov    ebp,esp
   14a0d:	push   ebx
   14a0e:	push   esi
   14a0f:	mov    esi,DWORD PTR [ebp+0x10]
   14a12:	push   edi
   14a13:	push   0x0
   14a15:	push   esi
   14a16:	mov    edi,ecx
   14a18:	call   0x1444a
   14a1d:	push   DWORD PTR [ebp+0x14]
   14a20:	mov    ebx,eax
   14a22:	mov    eax,ds:0x782b4
   14a27:	mov    DWORD PTR [ebx],eax
   14a29:	mov    eax,ds:0x782b4
   14a2e:	mov    DWORD PTR [ebx+0x8],eax
   14a31:	lea    eax,[ebx+0xc]
   14a34:	push   eax
   14a35:	call   0x1a3d0
   14a3a:	inc    DWORD PTR [edi+0xc]
   14a3d:	cmp    esi,DWORD PTR [edi+0x4]
   14a40:	je     0x14a64
   14a42:	mov    eax,DWORD PTR [ebp+0xc]
   14a45:	cmp    eax,DWORD PTR ds:0x782b4
   14a4b:	jne    0x14a64
   14a4d:	mov    eax,DWORD PTR [ebp+0x14]
   14a50:	mov    eax,DWORD PTR [eax]
   14a52:	cmp    eax,DWORD PTR [esi+0xc]
   14a55:	jb     0x14a64
   14a57:	mov    DWORD PTR [esi+0x8],ebx
   14a5a:	mov    eax,DWORD PTR [edi+0x4]
   14a5d:	cmp    esi,DWORD PTR [eax+0x8]
   14a60:	jne    0x14a7e
   14a62:	jmp    0x14a73
   14a64:	mov    DWORD PTR [esi],ebx
   14a66:	mov    eax,DWORD PTR [edi+0x4]
   14a69:	cmp    esi,eax
   14a6b:	jne    0x14a78
   14a6d:	mov    DWORD PTR [eax+0x4],ebx
   14a70:	mov    eax,DWORD PTR [edi+0x4]
   14a73:	mov    DWORD PTR [eax+0x8],ebx
   14a76:	jmp    0x14a7e
   14a78:	cmp    esi,DWORD PTR [eax]
   14a7a:	jne    0x14a7e
   14a7c:	mov    DWORD PTR [eax],ebx
   14a7e:	mov    eax,DWORD PTR [edi+0x4]
   14a81:	mov    esi,ebx
   14a83:	cmp    ebx,DWORD PTR [eax+0x4]
   14a86:	je     0x14b3a
   14a8c:	mov    eax,DWORD PTR [esi+0x4]
   14a8f:	xor    edx,edx
   14a91:	cmp    DWORD PTR [eax+0x10],edx
   14a94:	jne    0x14b3a
   14a9a:	mov    ecx,DWORD PTR [eax+0x4]
   14a9d:	cmp    eax,DWORD PTR [ecx]
   14a9f:	jne    0x14adb
   14aa1:	mov    ecx,DWORD PTR [ecx+0x8]
   14aa4:	cmp    DWORD PTR [ecx+0x10],edx
   14aa7:	je     0x14ae2
   14aa9:	cmp    esi,DWORD PTR [eax+0x8]
   14aac:	jne    0x14ab8
   14aae:	mov    esi,eax
   14ab0:	push   esi
   14ab1:	mov    ecx,edi
   14ab3:	call   0x12d7a
   14ab8:	mov    eax,DWORD PTR [esi+0x4]
   14abb:	mov    DWORD PTR [eax+0x10],0x1
   14ac2:	mov    eax,DWORD PTR [esi+0x4]
   14ac5:	mov    eax,DWORD PTR [eax+0x4]
   14ac8:	and    DWORD PTR [eax+0x10],0x0
   14acc:	mov    eax,DWORD PTR [esi+0x4]
   14acf:	push   DWORD PTR [eax+0x4]
   14ad2:	mov    ecx,edi
   14ad4:	call   0x12dc8
   14ad9:	jmp    0x14b2e
   14adb:	mov    ecx,DWORD PTR [ecx]
   14add:	cmp    DWORD PTR [ecx+0x10],edx
   14ae0:	jne    0x14aff
   14ae2:	mov    edx,eax
   14ae4:	xor    eax,eax
   14ae6:	inc    eax
   14ae7:	mov    DWORD PTR [edx+0x10],eax
   14aea:	mov    DWORD PTR [ecx+0x10],eax
   14aed:	mov    eax,DWORD PTR [esi+0x4]
   14af0:	mov    eax,DWORD PTR [eax+0x4]
   14af3:	and    DWORD PTR [eax+0x10],0x0
   14af7:	mov    eax,DWORD PTR [esi+0x4]
   14afa:	mov    esi,DWORD PTR [eax+0x4]
   14afd:	jmp    0x14b2e
   14aff:	cmp    esi,DWORD PTR [eax]
   14b01:	jne    0x14b0d
   14b03:	mov    esi,eax
   14b05:	push   esi
   14b06:	mov    ecx,edi
   14b08:	call   0x12dc8
   14b0d:	mov    eax,DWORD PTR [esi+0x4]
   14b10:	mov    DWORD PTR [eax+0x10],0x1
   14b17:	mov    eax,DWORD PTR [esi+0x4]
   14b1a:	mov    eax,DWORD PTR [eax+0x4]
   14b1d:	and    DWORD PTR [eax+0x10],0x0
   14b21:	mov    eax,DWORD PTR [esi+0x4]
   14b24:	push   DWORD PTR [eax+0x4]
   14b27:	mov    ecx,edi
   14b29:	call   0x12d7a
   14b2e:	mov    eax,DWORD PTR [edi+0x4]
   14b31:	cmp    esi,DWORD PTR [eax+0x4]
   14b34:	jne    0x14a8c
   14b3a:	mov    eax,DWORD PTR [edi+0x4]
   14b3d:	mov    eax,DWORD PTR [eax+0x4]
   14b40:	pop    edi
   14b41:	mov    DWORD PTR [eax+0x10],0x1
   14b48:	mov    eax,DWORD PTR [ebp+0x8]
   14b4b:	pop    esi
   14b4c:	mov    DWORD PTR [eax],ebx
   14b4e:	pop    ebx
   14b4f:	pop    ebp
   14b50:	ret    0x10
   14b53:	int3   
   14b54:	int3   
   14b55:	int3   
   14b56:	int3   
   14b57:	int3   
   14b58:	mov    edi,edi
   14b5a:	push   ebp
   14b5b:	mov    ebp,esp
   14b5d:	push   ecx
   14b5e:	push   ecx
   14b5f:	push   ebx
   14b60:	push   esi
   14b61:	mov    DWORD PTR [ebp-0x4],ecx
   14b64:	push   edi
   14b65:	mov    edi,DWORD PTR [ebp+0xc]
   14b68:	lea    ecx,[ebp+0xc]
   14b6b:	call   0x12cce
   14b70:	mov    esi,DWORD PTR [edi]
   14b72:	mov    eax,ds:0x782b8
   14b77:	mov    ebx,edi
   14b79:	mov    DWORD PTR [ebp-0x8],esi
   14b7c:	cmp    esi,eax
   14b7e:	jne    0x14b9c
   14b80:	mov    esi,DWORD PTR [edi+0x8]
   14b83:	mov    eax,DWORD PTR [ebx+0x4]
   14b86:	mov    ecx,DWORD PTR [ebp-0x4]
   14b89:	mov    DWORD PTR [esi+0x4],eax
   14b8c:	mov    eax,DWORD PTR [ecx+0x4]
   14b8f:	cmp    DWORD PTR [eax+0x4],edi
   14b92:	jne    0x14c11
   14b94:	mov    DWORD PTR [eax+0x4],esi
   14b97:	jmp    0x14c1f
   14b9c:	mov    ecx,DWORD PTR [edi+0x8]
   14b9f:	cmp    ecx,eax
   14ba1:	je     0x14b83
   14ba3:	push   ecx
   14ba4:	call   0x1111e
   14ba9:	mov    ebx,eax
   14bab:	mov    esi,DWORD PTR [ebx+0x8]
   14bae:	cmp    ebx,edi
   14bb0:	je     0x14b83
   14bb2:	mov    eax,DWORD PTR [ebp-0x8]
   14bb5:	mov    DWORD PTR [eax+0x4],ebx
   14bb8:	mov    eax,DWORD PTR [edi]
   14bba:	mov    DWORD PTR [ebx],eax
   14bbc:	cmp    ebx,DWORD PTR [edi+0x8]
   14bbf:	jne    0x14bc6
   14bc1:	mov    DWORD PTR [esi+0x4],ebx
   14bc4:	jmp    0x14bdd
   14bc6:	mov    eax,DWORD PTR [ebx+0x4]
   14bc9:	mov    DWORD PTR [esi+0x4],eax
   14bcc:	mov    eax,DWORD PTR [ebx+0x4]
   14bcf:	mov    DWORD PTR [eax],esi
   14bd1:	mov    eax,DWORD PTR [edi+0x8]
   14bd4:	mov    DWORD PTR [ebx+0x8],eax
   14bd7:	mov    eax,DWORD PTR [edi+0x8]
   14bda:	mov    DWORD PTR [eax+0x4],ebx
   14bdd:	mov    eax,DWORD PTR [ebp-0x4]
   14be0:	mov    eax,DWORD PTR [eax+0x4]
   14be3:	cmp    DWORD PTR [eax+0x4],edi
   14be6:	jne    0x14bed
   14be8:	mov    DWORD PTR [eax+0x4],ebx
   14beb:	jmp    0x14bfb
   14bed:	mov    eax,DWORD PTR [edi+0x4]
   14bf0:	cmp    DWORD PTR [eax],edi
   14bf2:	jne    0x14bf8
   14bf4:	mov    DWORD PTR [eax],ebx
   14bf6:	jmp    0x14bfb
   14bf8:	mov    DWORD PTR [eax+0x8],ebx
   14bfb:	mov    eax,DWORD PTR [edi+0x4]
   14bfe:	mov    DWORD PTR [ebx+0x4],eax
   14c01:	mov    eax,DWORD PTR [ebx+0x60]
   14c04:	mov    ecx,DWORD PTR [edi+0x60]
   14c07:	mov    DWORD PTR [ebx+0x60],ecx
   14c0a:	mov    DWORD PTR [edi+0x60],eax
   14c0d:	mov    ebx,edi
   14c0f:	jmp    0x14c72
   14c11:	mov    eax,DWORD PTR [edi+0x4]
   14c14:	cmp    DWORD PTR [eax],edi
   14c16:	jne    0x14c1c
   14c18:	mov    DWORD PTR [eax],esi
   14c1a:	jmp    0x14c1f
   14c1c:	mov    DWORD PTR [eax+0x8],esi
   14c1f:	mov    eax,DWORD PTR [ecx+0x4]
   14c22:	mov    DWORD PTR [ebp-0x8],eax
   14c25:	cmp    DWORD PTR [eax],edi
   14c27:	jne    0x14c49
   14c29:	mov    edx,DWORD PTR [edi+0x8]
   14c2c:	cmp    edx,DWORD PTR ds:0x782b8
   14c32:	jne    0x14c3b
   14c34:	mov    edx,DWORD PTR [edi+0x4]
   14c37:	mov    DWORD PTR [eax],edx
   14c39:	jmp    0x14c49
   14c3b:	push   esi
   14c3c:	call   0x1111e
   14c41:	mov    ecx,DWORD PTR [ebp-0x8]
   14c44:	mov    DWORD PTR [ecx],eax
   14c46:	mov    ecx,DWORD PTR [ebp-0x4]
   14c49:	mov    eax,DWORD PTR [ecx+0x4]
   14c4c:	mov    DWORD PTR [ebp-0x8],eax
   14c4f:	cmp    DWORD PTR [eax+0x8],edi
   14c52:	jne    0x14c72
   14c54:	mov    ecx,DWORD PTR [edi]
   14c56:	cmp    ecx,DWORD PTR ds:0x782b8
   14c5c:	jne    0x14c66
   14c5e:	mov    ecx,DWORD PTR [edi+0x4]
   14c61:	mov    DWORD PTR [eax+0x8],ecx
   14c64:	jmp    0x14c72
   14c66:	push   esi
   14c67:	call   0x110fc
   14c6c:	mov    ecx,DWORD PTR [ebp-0x8]
   14c6f:	mov    DWORD PTR [ecx+0x8],eax
   14c72:	xor    edi,edi
   14c74:	inc    edi
   14c75:	cmp    DWORD PTR [ebx+0x60],edi
   14c78:	jne    0x14d8f
   14c7e:	jmp    0x14d3d
   14c83:	cmp    DWORD PTR [esi+0x60],edi
   14c86:	jne    0x14d8c
   14c8c:	mov    eax,DWORD PTR [esi+0x4]
   14c8f:	cmp    esi,DWORD PTR [eax]
   14c91:	jne    0x14d08
   14c93:	mov    eax,DWORD PTR [eax+0x8]
   14c96:	cmp    DWORD PTR [eax+0x60],0x0
   14c9a:	jne    0x14cb4
   14c9c:	mov    DWORD PTR [eax+0x60],edi
   14c9f:	mov    eax,DWORD PTR [esi+0x4]
   14ca2:	and    DWORD PTR [eax+0x60],0x0
   14ca6:	push   DWORD PTR [esi+0x4]
   14ca9:	call   0x12e58
   14cae:	mov    eax,DWORD PTR [esi+0x4]
   14cb1:	mov    eax,DWORD PTR [eax+0x8]
   14cb4:	mov    ecx,DWORD PTR [eax]
   14cb6:	cmp    DWORD PTR [ecx+0x60],edi
   14cb9:	jne    0x14cc3
   14cbb:	mov    ecx,DWORD PTR [eax+0x8]
   14cbe:	cmp    DWORD PTR [ecx+0x60],edi
   14cc1:	je     0x14d36
   14cc3:	mov    ecx,DWORD PTR [eax+0x8]
   14cc6:	cmp    DWORD PTR [ecx+0x60],edi
   14cc9:	jne    0x14ce3
   14ccb:	mov    ecx,DWORD PTR [eax]
   14ccd:	mov    DWORD PTR [ecx+0x60],edi
   14cd0:	mov    ecx,DWORD PTR [ebp-0x4]
   14cd3:	and    DWORD PTR [eax+0x60],0x0
   14cd7:	push   eax
   14cd8:	call   0x12ea6
   14cdd:	mov    eax,DWORD PTR [esi+0x4]
   14ce0:	mov    eax,DWORD PTR [eax+0x8]
   14ce3:	mov    ecx,DWORD PTR [esi+0x4]
   14ce6:	mov    ecx,DWORD PTR [ecx+0x60]
   14ce9:	mov    DWORD PTR [eax+0x60],ecx
   14cec:	mov    ecx,DWORD PTR [esi+0x4]
   14cef:	mov    DWORD PTR [ecx+0x60],edi
   14cf2:	mov    eax,DWORD PTR [eax+0x8]
   14cf5:	mov    ecx,DWORD PTR [ebp-0x4]
   14cf8:	mov    DWORD PTR [eax+0x60],edi
   14cfb:	push   DWORD PTR [esi+0x4]
   14cfe:	call   0x12e58
   14d03:	jmp    0x14d8c
   14d08:	mov    eax,DWORD PTR [eax]
   14d0a:	cmp    DWORD PTR [eax+0x60],0x0
   14d0e:	jne    0x14d27
   14d10:	mov    DWORD PTR [eax+0x60],edi
   14d13:	mov    eax,DWORD PTR [esi+0x4]
   14d16:	and    DWORD PTR [eax+0x60],0x0
   14d1a:	push   DWORD PTR [esi+0x4]
   14d1d:	call   0x12ea6
   14d22:	mov    eax,DWORD PTR [esi+0x4]
   14d25:	mov    eax,DWORD PTR [eax]
   14d27:	mov    ecx,DWORD PTR [eax+0x8]
   14d2a:	cmp    DWORD PTR [ecx+0x60],edi
   14d2d:	jne    0x14d4e
   14d2f:	mov    ecx,DWORD PTR [eax]
   14d31:	cmp    DWORD PTR [ecx+0x60],edi
   14d34:	jne    0x14d4e
   14d36:	and    DWORD PTR [eax+0x60],0x0
   14d3a:	mov    esi,DWORD PTR [esi+0x4]
   14d3d:	mov    ecx,DWORD PTR [ebp-0x4]
   14d40:	mov    eax,DWORD PTR [ecx+0x4]
   14d43:	cmp    esi,DWORD PTR [eax+0x4]
   14d46:	jne    0x14c83
   14d4c:	jmp    0x14d8c
   14d4e:	mov    ecx,DWORD PTR [eax]
   14d50:	cmp    DWORD PTR [ecx+0x60],edi
   14d53:	jne    0x14d6d
   14d55:	mov    ecx,DWORD PTR [eax+0x8]
   14d58:	mov    DWORD PTR [ecx+0x60],edi
   14d5b:	mov    ecx,DWORD PTR [ebp-0x4]
   14d5e:	and    DWORD PTR [eax+0x60],0x0
   14d62:	push   eax
   14d63:	call   0x12e58
   14d68:	mov    eax,DWORD PTR [esi+0x4]
   14d6b:	mov    eax,DWORD PTR [eax]
   14d6d:	mov    ecx,DWORD PTR [esi+0x4]
   14d70:	mov    ecx,DWORD PTR [ecx+0x60]
   14d73:	mov    DWORD PTR [eax+0x60],ecx
   14d76:	mov    ecx,DWORD PTR [esi+0x4]
   14d79:	mov    DWORD PTR [ecx+0x60],edi
   14d7c:	mov    eax,DWORD PTR [eax]
   14d7e:	mov    ecx,DWORD PTR [ebp-0x4]
   14d81:	mov    DWORD PTR [eax+0x60],edi
   14d84:	push   DWORD PTR [esi+0x4]
   14d87:	call   0x12ea6
   14d8c:	mov    DWORD PTR [esi+0x60],edi
   14d8f:	lea    eax,[ebx+0x10]
   14d92:	push   eax
   14d93:	call   0x137e2
   14d98:	push   ebx
   14d99:	call   0x1da56
   14d9e:	mov    eax,DWORD PTR [ebp-0x4]
   14da1:	dec    DWORD PTR [eax+0xc]
   14da4:	mov    eax,DWORD PTR [ebp+0x8]
   14da7:	pop    ecx
   14da8:	mov    ecx,DWORD PTR [ebp+0xc]
   14dab:	pop    edi
   14dac:	pop    esi
   14dad:	mov    DWORD PTR [eax],ecx
   14daf:	pop    ebx
   14db0:	leave  
   14db1:	ret    0x8
   14db4:	int3   
   14db5:	int3   
   14db6:	int3   
   14db7:	int3   
   14db8:	int3   
   14db9:	int3   
   14dba:	mov    edi,edi
   14dbc:	push   ebp
   14dbd:	mov    ebp,esp
   14dbf:	push   ebx
   14dc0:	push   esi
   14dc1:	push   edi
   14dc2:	mov    edi,DWORD PTR [ebp+0x8]
   14dc5:	mov    ebx,ecx
   14dc7:	mov    esi,edi
   14dc9:	cmp    edi,DWORD PTR ds:0x782b8
   14dcf:	je     0x14df7
   14dd1:	push   DWORD PTR [esi+0x8]
   14dd4:	mov    ecx,ebx
   14dd6:	call   0x14dba
   14ddb:	mov    esi,DWORD PTR [esi]
   14ddd:	lea    eax,[edi+0x10]
   14de0:	push   eax
   14de1:	call   0x137e2
   14de6:	push   edi
   14de7:	call   0x1da56
   14dec:	pop    ecx
   14ded:	mov    edi,esi
   14def:	cmp    esi,DWORD PTR ds:0x782b8
   14df5:	jne    0x14dd1
   14df7:	pop    edi
   14df8:	pop    esi
   14df9:	pop    ebx
   14dfa:	pop    ebp
   14dfb:	ret    0x4
   14dfe:	int3   
   14dff:	int3   
   14e00:	int3   
   14e01:	int3   
   14e02:	int3   
   14e03:	int3   
   14e04:	mov    edi,edi
   14e06:	push   esi
   14e07:	push   edi
   14e08:	push   0x1
   14e0a:	xor    edi,edi
   14e0c:	push   edi
   14e0d:	mov    esi,ecx
   14e0f:	call   0x1446e
   14e14:	cmp    DWORD PTR ds:0x782b8,edi
   14e1a:	jne    0x14e31
   14e1c:	mov    ecx,eax
   14e1e:	mov    DWORD PTR ds:0x782b8,ecx
   14e24:	mov    DWORD PTR [ecx],edi
   14e26:	mov    ecx,DWORD PTR ds:0x782b8
   14e2c:	xor    eax,eax
   14e2e:	mov    DWORD PTR [ecx+0x8],edi
   14e31:	inc    DWORD PTR ds:0x78424
   14e37:	cmp    eax,edi
   14e39:	je     0x14e42
   14e3b:	push   eax
   14e3c:	call   0x1da56
   14e41:	pop    ecx
   14e42:	push   edi
   14e43:	push   DWORD PTR ds:0x782b8
   14e49:	mov    ecx,esi
   14e4b:	call   0x1446e
   14e50:	mov    DWORD PTR [esi+0xc],edi
   14e53:	mov    DWORD PTR [esi+0x4],eax
   14e56:	mov    DWORD PTR [eax],eax
   14e58:	mov    esi,DWORD PTR [esi+0x4]
   14e5b:	pop    edi
   14e5c:	mov    DWORD PTR [esi+0x8],esi
   14e5f:	pop    esi
   14e60:	ret    
   14e61:	int3   
   14e62:	int3   
   14e63:	int3   
   14e64:	int3   
   14e65:	int3   
   14e66:	mov    edi,edi
   14e68:	push   ebp
   14e69:	mov    ebp,esp
   14e6b:	push   ebx
   14e6c:	push   esi
   14e6d:	mov    esi,DWORD PTR [ebp+0x10]
   14e70:	push   edi
   14e71:	push   0x0
   14e73:	push   esi
   14e74:	mov    edi,ecx
   14e76:	call   0x14156
   14e7b:	push   DWORD PTR [ebp+0x14]
   14e7e:	mov    ebx,eax
   14e80:	mov    eax,ds:0x782b0
   14e85:	mov    DWORD PTR [ebx],eax
   14e87:	mov    eax,ds:0x782b0
   14e8c:	mov    DWORD PTR [ebx+0x8],eax
   14e8f:	lea    eax,[ebx+0xc]
   14e92:	push   eax
   14e93:	call   0x114c8
   14e98:	inc    DWORD PTR [edi+0xc]
   14e9b:	cmp    esi,DWORD PTR [edi+0x4]
   14e9e:	je     0x14ec2
   14ea0:	mov    eax,DWORD PTR [ebp+0xc]
   14ea3:	cmp    eax,DWORD PTR ds:0x782b0
   14ea9:	jne    0x14ec2
   14eab:	mov    eax,DWORD PTR [ebp+0x14]
   14eae:	mov    eax,DWORD PTR [eax]
   14eb0:	cmp    eax,DWORD PTR [esi+0xc]
   14eb3:	jb     0x14ec2
   14eb5:	mov    DWORD PTR [esi+0x8],ebx
   14eb8:	mov    eax,DWORD PTR [edi+0x4]
   14ebb:	cmp    esi,DWORD PTR [eax+0x8]
   14ebe:	jne    0x14edc
   14ec0:	jmp    0x14ed1
   14ec2:	mov    DWORD PTR [esi],ebx
   14ec4:	mov    eax,DWORD PTR [edi+0x4]
   14ec7:	cmp    esi,eax
   14ec9:	jne    0x14ed6
   14ecb:	mov    DWORD PTR [eax+0x4],ebx
   14ece:	mov    eax,DWORD PTR [edi+0x4]
   14ed1:	mov    DWORD PTR [eax+0x8],ebx
   14ed4:	jmp    0x14edc
   14ed6:	cmp    esi,DWORD PTR [eax]
   14ed8:	jne    0x14edc
   14eda:	mov    DWORD PTR [eax],ebx
   14edc:	mov    eax,DWORD PTR [edi+0x4]
   14edf:	mov    esi,ebx
   14ee1:	cmp    ebx,DWORD PTR [eax+0x4]
   14ee4:	je     0x14f98
   14eea:	mov    eax,DWORD PTR [esi+0x4]
   14eed:	xor    edx,edx
   14eef:	cmp    DWORD PTR [eax+0x14],edx
   14ef2:	jne    0x14f98
   14ef8:	mov    ecx,DWORD PTR [eax+0x4]
   14efb:	cmp    eax,DWORD PTR [ecx]
   14efd:	jne    0x14f39
   14eff:	mov    ecx,DWORD PTR [ecx+0x8]
   14f02:	cmp    DWORD PTR [ecx+0x14],edx
   14f05:	je     0x14f40
   14f07:	cmp    esi,DWORD PTR [eax+0x8]
   14f0a:	jne    0x14f16
   14f0c:	mov    esi,eax
   14f0e:	push   esi
   14f0f:	mov    ecx,edi
   14f11:	call   0x12b78
   14f16:	mov    eax,DWORD PTR [esi+0x4]
   14f19:	mov    DWORD PTR [eax+0x14],0x1
   14f20:	mov    eax,DWORD PTR [esi+0x4]
   14f23:	mov    eax,DWORD PTR [eax+0x4]
   14f26:	and    DWORD PTR [eax+0x14],0x0
   14f2a:	mov    eax,DWORD PTR [esi+0x4]
   14f2d:	push   DWORD PTR [eax+0x4]
   14f30:	mov    ecx,edi
   14f32:	call   0x12bc6
   14f37:	jmp    0x14f8c
   14f39:	mov    ecx,DWORD PTR [ecx]
   14f3b:	cmp    DWORD PTR [ecx+0x14],edx
   14f3e:	jne    0x14f5d
   14f40:	mov    edx,eax
   14f42:	xor    eax,eax
   14f44:	inc    eax
   14f45:	mov    DWORD PTR [edx+0x14],eax
   14f48:	mov    DWORD PTR [ecx+0x14],eax
   14f4b:	mov    eax,DWORD PTR [esi+0x4]
   14f4e:	mov    eax,DWORD PTR [eax+0x4]
   14f51:	and    DWORD PTR [eax+0x14],0x0
   14f55:	mov    eax,DWORD PTR [esi+0x4]
   14f58:	mov    esi,DWORD PTR [eax+0x4]
   14f5b:	jmp    0x14f8c
   14f5d:	cmp    esi,DWORD PTR [eax]
   14f5f:	jne    0x14f6b
   14f61:	mov    esi,eax
   14f63:	push   esi
   14f64:	mov    ecx,edi
   14f66:	call   0x12bc6
   14f6b:	mov    eax,DWORD PTR [esi+0x4]
   14f6e:	mov    DWORD PTR [eax+0x14],0x1
   14f75:	mov    eax,DWORD PTR [esi+0x4]
   14f78:	mov    eax,DWORD PTR [eax+0x4]
   14f7b:	and    DWORD PTR [eax+0x14],0x0
   14f7f:	mov    eax,DWORD PTR [esi+0x4]
   14f82:	push   DWORD PTR [eax+0x4]
   14f85:	mov    ecx,edi
   14f87:	call   0x12b78
   14f8c:	mov    eax,DWORD PTR [edi+0x4]
   14f8f:	cmp    esi,DWORD PTR [eax+0x4]
   14f92:	jne    0x14eea
   14f98:	mov    eax,DWORD PTR [edi+0x4]
   14f9b:	mov    eax,DWORD PTR [eax+0x4]
   14f9e:	pop    edi
   14f9f:	mov    DWORD PTR [eax+0x14],0x1
   14fa6:	mov    eax,DWORD PTR [ebp+0x8]
   14fa9:	pop    esi
   14faa:	mov    DWORD PTR [eax],ebx
   14fac:	pop    ebx
   14fad:	pop    ebp
   14fae:	ret    0x10
   14fb1:	int3   
   14fb2:	int3   
   14fb3:	int3   
   14fb4:	int3   
   14fb5:	int3   
   14fb6:	mov    edi,edi
   14fb8:	push   ebp
   14fb9:	mov    ebp,esp
   14fbb:	push   ecx
   14fbc:	push   ecx
   14fbd:	push   ebx
   14fbe:	push   esi
   14fbf:	mov    DWORD PTR [ebp-0x4],ecx
   14fc2:	push   edi
   14fc3:	mov    edi,DWORD PTR [ebp+0xc]
   14fc6:	lea    ecx,[ebp+0xc]
   14fc9:	call   0x135d8
   14fce:	mov    esi,DWORD PTR [edi]
   14fd0:	mov    eax,ds:0x782bc
   14fd5:	mov    ebx,edi
   14fd7:	mov    DWORD PTR [ebp-0x8],esi
   14fda:	cmp    esi,eax
   14fdc:	jne    0x14ffa
   14fde:	mov    esi,DWORD PTR [edi+0x8]
   14fe1:	mov    eax,DWORD PTR [ebx+0x4]
   14fe4:	mov    ecx,DWORD PTR [ebp-0x4]
   14fe7:	mov    DWORD PTR [esi+0x4],eax
   14fea:	mov    eax,DWORD PTR [ecx+0x4]
   14fed:	cmp    DWORD PTR [eax+0x4],edi
   14ff0:	jne    0x1506f
   14ff2:	mov    DWORD PTR [eax+0x4],esi
   14ff5:	jmp    0x1507d
   14ffa:	mov    ecx,DWORD PTR [edi+0x8]
   14ffd:	cmp    ecx,eax
   14fff:	je     0x14fe1
   15001:	push   ecx
   15002:	call   0x12b1e
   15007:	mov    ebx,eax
   15009:	mov    esi,DWORD PTR [ebx+0x8]
   1500c:	cmp    ebx,edi
   1500e:	je     0x14fe1
   15010:	mov    eax,DWORD PTR [ebp-0x8]
   15013:	mov    DWORD PTR [eax+0x4],ebx
   15016:	mov    eax,DWORD PTR [edi]
   15018:	mov    DWORD PTR [ebx],eax
   1501a:	cmp    ebx,DWORD PTR [edi+0x8]
   1501d:	jne    0x15024
   1501f:	mov    DWORD PTR [esi+0x4],ebx
   15022:	jmp    0x1503b
   15024:	mov    eax,DWORD PTR [ebx+0x4]
   15027:	mov    DWORD PTR [esi+0x4],eax
   1502a:	mov    eax,DWORD PTR [ebx+0x4]
   1502d:	mov    DWORD PTR [eax],esi
   1502f:	mov    eax,DWORD PTR [edi+0x8]
   15032:	mov    DWORD PTR [ebx+0x8],eax
   15035:	mov    eax,DWORD PTR [edi+0x8]
   15038:	mov    DWORD PTR [eax+0x4],ebx
   1503b:	mov    eax,DWORD PTR [ebp-0x4]
   1503e:	mov    eax,DWORD PTR [eax+0x4]
   15041:	cmp    DWORD PTR [eax+0x4],edi
   15044:	jne    0x1504b
   15046:	mov    DWORD PTR [eax+0x4],ebx
   15049:	jmp    0x15059
   1504b:	mov    eax,DWORD PTR [edi+0x4]
   1504e:	cmp    DWORD PTR [eax],edi
   15050:	jne    0x15056
   15052:	mov    DWORD PTR [eax],ebx
   15054:	jmp    0x15059
   15056:	mov    DWORD PTR [eax+0x8],ebx
   15059:	mov    eax,DWORD PTR [edi+0x4]
   1505c:	mov    DWORD PTR [ebx+0x4],eax
   1505f:	mov    eax,DWORD PTR [ebx+0x58]
   15062:	mov    ecx,DWORD PTR [edi+0x58]
   15065:	mov    DWORD PTR [ebx+0x58],ecx
   15068:	mov    DWORD PTR [edi+0x58],eax
   1506b:	mov    ebx,edi
   1506d:	jmp    0x150d0
   1506f:	mov    eax,DWORD PTR [edi+0x4]
   15072:	cmp    DWORD PTR [eax],edi
   15074:	jne    0x1507a
   15076:	mov    DWORD PTR [eax],esi
   15078:	jmp    0x1507d
   1507a:	mov    DWORD PTR [eax+0x8],esi
   1507d:	mov    eax,DWORD PTR [ecx+0x4]
   15080:	mov    DWORD PTR [ebp-0x8],eax
   15083:	cmp    DWORD PTR [eax],edi
   15085:	jne    0x150a7
   15087:	mov    edx,DWORD PTR [edi+0x8]
   1508a:	cmp    edx,DWORD PTR ds:0x782bc
   15090:	jne    0x15099
   15092:	mov    edx,DWORD PTR [edi+0x4]
   15095:	mov    DWORD PTR [eax],edx
   15097:	jmp    0x150a7
   15099:	push   esi
   1509a:	call   0x12b1e
   1509f:	mov    ecx,DWORD PTR [ebp-0x8]
   150a2:	mov    DWORD PTR [ecx],eax
   150a4:	mov    ecx,DWORD PTR [ebp-0x4]
   150a7:	mov    eax,DWORD PTR [ecx+0x4]
   150aa:	mov    DWORD PTR [ebp-0x8],eax
   150ad:	cmp    DWORD PTR [eax+0x8],edi
   150b0:	jne    0x150d0
   150b2:	mov    ecx,DWORD PTR [edi]
   150b4:	cmp    ecx,DWORD PTR ds:0x782bc
   150ba:	jne    0x150c4
   150bc:	mov    ecx,DWORD PTR [edi+0x4]
   150bf:	mov    DWORD PTR [eax+0x8],ecx
   150c2:	jmp    0x150d0
   150c4:	push   esi
   150c5:	call   0x11204
   150ca:	mov    ecx,DWORD PTR [ebp-0x8]
   150cd:	mov    DWORD PTR [ecx+0x8],eax
   150d0:	xor    edi,edi
   150d2:	inc    edi
   150d3:	cmp    DWORD PTR [ebx+0x58],edi
   150d6:	jne    0x151ed
   150dc:	jmp    0x1519b
   150e1:	cmp    DWORD PTR [esi+0x58],edi
   150e4:	jne    0x151ea
   150ea:	mov    eax,DWORD PTR [esi+0x4]
   150ed:	cmp    esi,DWORD PTR [eax]
   150ef:	jne    0x15166
   150f1:	mov    eax,DWORD PTR [eax+0x8]
   150f4:	cmp    DWORD PTR [eax+0x58],0x0
   150f8:	jne    0x15112
   150fa:	mov    DWORD PTR [eax+0x58],edi
   150fd:	mov    eax,DWORD PTR [esi+0x4]
   15100:	and    DWORD PTR [eax+0x58],0x0
   15104:	push   DWORD PTR [esi+0x4]
   15107:	call   0x111b6
   1510c:	mov    eax,DWORD PTR [esi+0x4]
   1510f:	mov    eax,DWORD PTR [eax+0x8]
   15112:	mov    ecx,DWORD PTR [eax]
   15114:	cmp    DWORD PTR [ecx+0x58],edi
   15117:	jne    0x15121
   15119:	mov    ecx,DWORD PTR [eax+0x8]
   1511c:	cmp    DWORD PTR [ecx+0x58],edi
   1511f:	je     0x15194
   15121:	mov    ecx,DWORD PTR [eax+0x8]
   15124:	cmp    DWORD PTR [ecx+0x58],edi
   15127:	jne    0x15141
   15129:	mov    ecx,DWORD PTR [eax]
   1512b:	mov    DWORD PTR [ecx+0x58],edi
   1512e:	mov    ecx,DWORD PTR [ebp-0x4]
   15131:	and    DWORD PTR [eax+0x58],0x0
   15135:	push   eax
   15136:	call   0x11226
   1513b:	mov    eax,DWORD PTR [esi+0x4]
   1513e:	mov    eax,DWORD PTR [eax+0x8]
   15141:	mov    ecx,DWORD PTR [esi+0x4]
   15144:	mov    ecx,DWORD PTR [ecx+0x58]
   15147:	mov    DWORD PTR [eax+0x58],ecx
   1514a:	mov    ecx,DWORD PTR [esi+0x4]
   1514d:	mov    DWORD PTR [ecx+0x58],edi
   15150:	mov    eax,DWORD PTR [eax+0x8]
   15153:	mov    ecx,DWORD PTR [ebp-0x4]
   15156:	mov    DWORD PTR [eax+0x58],edi
   15159:	push   DWORD PTR [esi+0x4]
   1515c:	call   0x111b6
   15161:	jmp    0x151ea
   15166:	mov    eax,DWORD PTR [eax]
   15168:	cmp    DWORD PTR [eax+0x58],0x0
   1516c:	jne    0x15185
   1516e:	mov    DWORD PTR [eax+0x58],edi
   15171:	mov    eax,DWORD PTR [esi+0x4]
   15174:	and    DWORD PTR [eax+0x58],0x0
   15178:	push   DWORD PTR [esi+0x4]
   1517b:	call   0x11226
   15180:	mov    eax,DWORD PTR [esi+0x4]
   15183:	mov    eax,DWORD PTR [eax]
   15185:	mov    ecx,DWORD PTR [eax+0x8]
   15188:	cmp    DWORD PTR [ecx+0x58],edi
   1518b:	jne    0x151ac
   1518d:	mov    ecx,DWORD PTR [eax]
   1518f:	cmp    DWORD PTR [ecx+0x58],edi
   15192:	jne    0x151ac
   15194:	and    DWORD PTR [eax+0x58],0x0
   15198:	mov    esi,DWORD PTR [esi+0x4]
   1519b:	mov    ecx,DWORD PTR [ebp-0x4]
   1519e:	mov    eax,DWORD PTR [ecx+0x4]
   151a1:	cmp    esi,DWORD PTR [eax+0x4]
   151a4:	jne    0x150e1
   151aa:	jmp    0x151ea
   151ac:	mov    ecx,DWORD PTR [eax]
   151ae:	cmp    DWORD PTR [ecx+0x58],edi
   151b1:	jne    0x151cb
   151b3:	mov    ecx,DWORD PTR [eax+0x8]
   151b6:	mov    DWORD PTR [ecx+0x58],edi
   151b9:	mov    ecx,DWORD PTR [ebp-0x4]
   151bc:	and    DWORD PTR [eax+0x58],0x0
   151c0:	push   eax
   151c1:	call   0x111b6
   151c6:	mov    eax,DWORD PTR [esi+0x4]
   151c9:	mov    eax,DWORD PTR [eax]
   151cb:	mov    ecx,DWORD PTR [esi+0x4]
   151ce:	mov    ecx,DWORD PTR [ecx+0x58]
   151d1:	mov    DWORD PTR [eax+0x58],ecx
   151d4:	mov    ecx,DWORD PTR [esi+0x4]
   151d7:	mov    DWORD PTR [ecx+0x58],edi
   151da:	mov    eax,DWORD PTR [eax]
   151dc:	mov    ecx,DWORD PTR [ebp-0x4]
   151df:	mov    DWORD PTR [eax+0x58],edi
   151e2:	push   DWORD PTR [esi+0x4]
   151e5:	call   0x11226
   151ea:	mov    DWORD PTR [esi+0x58],edi
   151ed:	lea    eax,[ebx+0x10]
   151f0:	push   eax
   151f1:	call   0x137e2
   151f6:	push   ebx
   151f7:	call   0x1da56
   151fc:	mov    eax,DWORD PTR [ebp-0x4]
   151ff:	dec    DWORD PTR [eax+0xc]
   15202:	mov    eax,DWORD PTR [ebp+0x8]
   15205:	pop    ecx
   15206:	mov    ecx,DWORD PTR [ebp+0xc]
   15209:	pop    edi
   1520a:	pop    esi
   1520b:	mov    DWORD PTR [eax],ecx
   1520d:	pop    ebx
   1520e:	leave  
   1520f:	ret    0x8
   15212:	int3   
   15213:	int3   
   15214:	int3   
   15215:	int3   
   15216:	int3   
   15217:	int3   
   15218:	mov    edi,edi
   1521a:	push   ebp
   1521b:	mov    ebp,esp
   1521d:	push   ebx
   1521e:	push   esi
   1521f:	push   edi
   15220:	mov    edi,DWORD PTR [ebp+0x8]
   15223:	mov    ebx,ecx
   15225:	mov    esi,edi
   15227:	cmp    edi,DWORD PTR ds:0x782bc
   1522d:	je     0x15255
   1522f:	push   DWORD PTR [esi+0x8]
   15232:	mov    ecx,ebx
   15234:	call   0x15218
   15239:	mov    esi,DWORD PTR [esi]
   1523b:	lea    eax,[edi+0x10]
   1523e:	push   eax
   1523f:	call   0x137e2
   15244:	push   edi
   15245:	call   0x1da56
   1524a:	pop    ecx
   1524b:	mov    edi,esi
   1524d:	cmp    esi,DWORD PTR ds:0x782bc
   15253:	jne    0x1522f
   15255:	pop    edi
   15256:	pop    esi
   15257:	pop    ebx
   15258:	pop    ebp
   15259:	ret    0x4
   1525c:	int3   
   1525d:	int3   
   1525e:	int3   
   1525f:	int3   
   15260:	int3   
   15261:	int3   
   15262:	mov    edi,edi
   15264:	push   ebp
   15265:	mov    ebp,esp
   15267:	push   ecx
   15268:	push   ecx
   15269:	push   ebx
   1526a:	push   esi
   1526b:	mov    DWORD PTR [ebp-0x4],ecx
   1526e:	push   edi
   1526f:	mov    edi,DWORD PTR [ebp+0xc]
   15272:	lea    ecx,[ebp+0xc]
   15275:	call   0x11434
   1527a:	mov    esi,DWORD PTR [edi]
   1527c:	mov    eax,ds:0x782c4
   15281:	mov    ebx,edi
   15283:	mov    DWORD PTR [ebp-0x8],esi
   15286:	cmp    esi,eax
   15288:	jne    0x152a6
   1528a:	mov    esi,DWORD PTR [edi+0x8]
   1528d:	mov    eax,DWORD PTR [ebx+0x4]
   15290:	mov    ecx,DWORD PTR [ebp-0x4]
   15293:	mov    DWORD PTR [esi+0x4],eax
   15296:	mov    eax,DWORD PTR [ecx+0x4]
   15299:	cmp    DWORD PTR [eax+0x4],edi
   1529c:	jne    0x1531b
   1529e:	mov    DWORD PTR [eax+0x4],esi
   152a1:	jmp    0x15329
   152a6:	mov    ecx,DWORD PTR [edi+0x8]
   152a9:	cmp    ecx,eax
   152ab:	je     0x1528d
   152ad:	push   ecx
   152ae:	call   0x1135c
   152b3:	mov    ebx,eax
   152b5:	mov    esi,DWORD PTR [ebx+0x8]
   152b8:	cmp    ebx,edi
   152ba:	je     0x1528d
   152bc:	mov    eax,DWORD PTR [ebp-0x8]
   152bf:	mov    DWORD PTR [eax+0x4],ebx
   152c2:	mov    eax,DWORD PTR [edi]
   152c4:	mov    DWORD PTR [ebx],eax
   152c6:	cmp    ebx,DWORD PTR [edi+0x8]
   152c9:	jne    0x152d0
   152cb:	mov    DWORD PTR [esi+0x4],ebx
   152ce:	jmp    0x152e7
   152d0:	mov    eax,DWORD PTR [ebx+0x4]
   152d3:	mov    DWORD PTR [esi+0x4],eax
   152d6:	mov    eax,DWORD PTR [ebx+0x4]
   152d9:	mov    DWORD PTR [eax],esi
   152db:	mov    eax,DWORD PTR [edi+0x8]
   152de:	mov    DWORD PTR [ebx+0x8],eax
   152e1:	mov    eax,DWORD PTR [edi+0x8]
   152e4:	mov    DWORD PTR [eax+0x4],ebx
   152e7:	mov    eax,DWORD PTR [ebp-0x4]
   152ea:	mov    eax,DWORD PTR [eax+0x4]
   152ed:	cmp    DWORD PTR [eax+0x4],edi
   152f0:	jne    0x152f7
   152f2:	mov    DWORD PTR [eax+0x4],ebx
   152f5:	jmp    0x15305
   152f7:	mov    eax,DWORD PTR [edi+0x4]
   152fa:	cmp    DWORD PTR [eax],edi
   152fc:	jne    0x15302
   152fe:	mov    DWORD PTR [eax],ebx
   15300:	jmp    0x15305
   15302:	mov    DWORD PTR [eax+0x8],ebx
   15305:	mov    eax,DWORD PTR [edi+0x4]
   15308:	mov    DWORD PTR [ebx+0x4],eax
   1530b:	mov    eax,DWORD PTR [ebx+0x14]
   1530e:	mov    ecx,DWORD PTR [edi+0x14]
   15311:	mov    DWORD PTR [ebx+0x14],ecx
   15314:	mov    DWORD PTR [edi+0x14],eax
   15317:	mov    ebx,edi
   15319:	jmp    0x1537c
   1531b:	mov    eax,DWORD PTR [edi+0x4]
   1531e:	cmp    DWORD PTR [eax],edi
   15320:	jne    0x15326
   15322:	mov    DWORD PTR [eax],esi
   15324:	jmp    0x15329
   15326:	mov    DWORD PTR [eax+0x8],esi
   15329:	mov    eax,DWORD PTR [ecx+0x4]
   1532c:	mov    DWORD PTR [ebp-0x8],eax
   1532f:	cmp    DWORD PTR [eax],edi
   15331:	jne    0x15353
   15333:	mov    edx,DWORD PTR [edi+0x8]
   15336:	cmp    edx,DWORD PTR ds:0x782c4
   1533c:	jne    0x15345
   1533e:	mov    edx,DWORD PTR [edi+0x4]
   15341:	mov    DWORD PTR [eax],edx
   15343:	jmp    0x15353
   15345:	push   esi
   15346:	call   0x1135c
   1534b:	mov    ecx,DWORD PTR [ebp-0x8]
   1534e:	mov    DWORD PTR [ecx],eax
   15350:	mov    ecx,DWORD PTR [ebp-0x4]
   15353:	mov    eax,DWORD PTR [ecx+0x4]
   15356:	mov    DWORD PTR [ebp-0x8],eax
   15359:	cmp    DWORD PTR [eax+0x8],edi
   1535c:	jne    0x1537c
   1535e:	mov    ecx,DWORD PTR [edi]
   15360:	cmp    ecx,DWORD PTR ds:0x782c4
   15366:	jne    0x15370
   15368:	mov    ecx,DWORD PTR [edi+0x4]
   1536b:	mov    DWORD PTR [eax+0x8],ecx
   1536e:	jmp    0x1537c
   15370:	push   esi
   15371:	call   0x1133a
   15376:	mov    ecx,DWORD PTR [ebp-0x8]
   15379:	mov    DWORD PTR [ecx+0x8],eax
   1537c:	xor    edi,edi
   1537e:	inc    edi
   1537f:	cmp    DWORD PTR [ebx+0x14],edi
   15382:	jne    0x15499
   15388:	jmp    0x15447
   1538d:	cmp    DWORD PTR [esi+0x14],edi
   15390:	jne    0x15496
   15396:	mov    eax,DWORD PTR [esi+0x4]
   15399:	cmp    esi,DWORD PTR [eax]
   1539b:	jne    0x15412
   1539d:	mov    eax,DWORD PTR [eax+0x8]
   153a0:	cmp    DWORD PTR [eax+0x14],0x0
   153a4:	jne    0x153be
   153a6:	mov    DWORD PTR [eax+0x14],edi
   153a9:	mov    eax,DWORD PTR [esi+0x4]
   153ac:	and    DWORD PTR [eax+0x14],0x0
   153b0:	push   DWORD PTR [esi+0x4]
   153b3:	call   0x1304c
   153b8:	mov    eax,DWORD PTR [esi+0x4]
   153bb:	mov    eax,DWORD PTR [eax+0x8]
   153be:	mov    ecx,DWORD PTR [eax]
   153c0:	cmp    DWORD PTR [ecx+0x14],edi
   153c3:	jne    0x153cd
   153c5:	mov    ecx,DWORD PTR [eax+0x8]
   153c8:	cmp    DWORD PTR [ecx+0x14],edi
   153cb:	je     0x15440
   153cd:	mov    ecx,DWORD PTR [eax+0x8]
   153d0:	cmp    DWORD PTR [ecx+0x14],edi
   153d3:	jne    0x153ed
   153d5:	mov    ecx,DWORD PTR [eax]
   153d7:	mov    DWORD PTR [ecx+0x14],edi
   153da:	mov    ecx,DWORD PTR [ebp-0x4]
   153dd:	and    DWORD PTR [eax+0x14],0x0
   153e1:	push   eax
   153e2:	call   0x1309a
   153e7:	mov    eax,DWORD PTR [esi+0x4]
   153ea:	mov    eax,DWORD PTR [eax+0x8]
   153ed:	mov    ecx,DWORD PTR [esi+0x4]
   153f0:	mov    ecx,DWORD PTR [ecx+0x14]
   153f3:	mov    DWORD PTR [eax+0x14],ecx
   153f6:	mov    ecx,DWORD PTR [esi+0x4]
   153f9:	mov    DWORD PTR [ecx+0x14],edi
   153fc:	mov    eax,DWORD PTR [eax+0x8]
   153ff:	mov    ecx,DWORD PTR [ebp-0x4]
   15402:	mov    DWORD PTR [eax+0x14],edi
   15405:	push   DWORD PTR [esi+0x4]
   15408:	call   0x1304c
   1540d:	jmp    0x15496
   15412:	mov    eax,DWORD PTR [eax]
   15414:	cmp    DWORD PTR [eax+0x14],0x0
   15418:	jne    0x15431
   1541a:	mov    DWORD PTR [eax+0x14],edi
   1541d:	mov    eax,DWORD PTR [esi+0x4]
   15420:	and    DWORD PTR [eax+0x14],0x0
   15424:	push   DWORD PTR [esi+0x4]
   15427:	call   0x1309a
   1542c:	mov    eax,DWORD PTR [esi+0x4]
   1542f:	mov    eax,DWORD PTR [eax]
   15431:	mov    ecx,DWORD PTR [eax+0x8]
   15434:	cmp    DWORD PTR [ecx+0x14],edi
   15437:	jne    0x15458
   15439:	mov    ecx,DWORD PTR [eax]
   1543b:	cmp    DWORD PTR [ecx+0x14],edi
   1543e:	jne    0x15458
   15440:	and    DWORD PTR [eax+0x14],0x0
   15444:	mov    esi,DWORD PTR [esi+0x4]
   15447:	mov    ecx,DWORD PTR [ebp-0x4]
   1544a:	mov    eax,DWORD PTR [ecx+0x4]
   1544d:	cmp    esi,DWORD PTR [eax+0x4]
   15450:	jne    0x1538d
   15456:	jmp    0x15496
   15458:	mov    ecx,DWORD PTR [eax]
   1545a:	cmp    DWORD PTR [ecx+0x14],edi
   1545d:	jne    0x15477
   1545f:	mov    ecx,DWORD PTR [eax+0x8]
   15462:	mov    DWORD PTR [ecx+0x14],edi
   15465:	mov    ecx,DWORD PTR [ebp-0x4]
   15468:	and    DWORD PTR [eax+0x14],0x0
   1546c:	push   eax
   1546d:	call   0x1304c
   15472:	mov    eax,DWORD PTR [esi+0x4]
   15475:	mov    eax,DWORD PTR [eax]
   15477:	mov    ecx,DWORD PTR [esi+0x4]
   1547a:	mov    ecx,DWORD PTR [ecx+0x14]
   1547d:	mov    DWORD PTR [eax+0x14],ecx
   15480:	mov    ecx,DWORD PTR [esi+0x4]
   15483:	mov    DWORD PTR [ecx+0x14],edi
   15486:	mov    eax,DWORD PTR [eax]
   15488:	mov    ecx,DWORD PTR [ebp-0x4]
   1548b:	mov    DWORD PTR [eax+0x14],edi
   1548e:	push   DWORD PTR [esi+0x4]
   15491:	call   0x1309a
   15496:	mov    DWORD PTR [esi+0x14],edi
   15499:	lea    eax,[ebx+0xc]
   1549c:	push   eax
   1549d:	call   0x13818
   154a2:	push   ebx
   154a3:	call   0x1da56
   154a8:	mov    eax,DWORD PTR [ebp-0x4]
   154ab:	dec    DWORD PTR [eax+0xc]
   154ae:	mov    eax,DWORD PTR [ebp+0x8]
   154b1:	pop    ecx
   154b2:	mov    ecx,DWORD PTR [ebp+0xc]
   154b5:	pop    edi
   154b6:	pop    esi
   154b7:	mov    DWORD PTR [eax],ecx
   154b9:	pop    ebx
   154ba:	leave  
   154bb:	ret    0x8
   154be:	int3   
   154bf:	int3   
   154c0:	int3   
   154c1:	int3   
   154c2:	int3   
   154c3:	int3   
   154c4:	mov    edi,edi
   154c6:	push   ebp
   154c7:	mov    ebp,esp
   154c9:	push   ebx
   154ca:	push   esi
   154cb:	push   edi
   154cc:	mov    edi,DWORD PTR [ebp+0x8]
   154cf:	mov    ebx,ecx
   154d1:	mov    esi,edi
   154d3:	cmp    edi,DWORD PTR ds:0x782c4
   154d9:	je     0x15501
   154db:	push   DWORD PTR [esi+0x8]
   154de:	mov    ecx,ebx
   154e0:	call   0x154c4
   154e5:	mov    esi,DWORD PTR [esi]
   154e7:	lea    eax,[edi+0xc]
   154ea:	push   eax
   154eb:	call   0x13818
   154f0:	push   edi
   154f1:	call   0x1da56
   154f6:	pop    ecx
   154f7:	mov    edi,esi
   154f9:	cmp    esi,DWORD PTR ds:0x782c4
   154ff:	jne    0x154db
   15501:	pop    edi
   15502:	pop    esi
   15503:	pop    ebx
   15504:	pop    ebp
   15505:	ret    0x4
   15508:	int3   
   15509:	int3   
   1550a:	int3   
   1550b:	int3   
   1550c:	int3   
   1550d:	int3   
   1550e:	mov    edi,edi
   15510:	push   ebp
   15511:	mov    ebp,esp
   15513:	push   ebx
   15514:	push   esi
   15515:	mov    esi,DWORD PTR [ebp+0x10]
   15518:	push   edi
   15519:	push   0x0
   1551b:	push   esi
   1551c:	mov    edi,ecx
   1551e:	call   0x14156
   15523:	push   DWORD PTR [ebp+0x14]
   15526:	mov    ebx,eax
   15528:	mov    eax,ds:0x782c4
   1552d:	mov    DWORD PTR [ebx],eax
   1552f:	mov    eax,ds:0x782c4
   15534:	mov    DWORD PTR [ebx+0x8],eax
   15537:	lea    eax,[ebx+0xc]
   1553a:	push   eax
   1553b:	call   0x137fa
   15540:	inc    DWORD PTR [edi+0xc]
   15543:	cmp    esi,DWORD PTR [edi+0x4]
   15546:	je     0x1556a
   15548:	mov    eax,DWORD PTR [ebp+0xc]
   1554b:	cmp    eax,DWORD PTR ds:0x782c4
   15551:	jne    0x1556a
   15553:	mov    eax,DWORD PTR [ebp+0x14]
   15556:	mov    eax,DWORD PTR [eax]
   15558:	cmp    eax,DWORD PTR [esi+0xc]
   1555b:	jl     0x1556a
   1555d:	mov    DWORD PTR [esi+0x8],ebx
   15560:	mov    eax,DWORD PTR [edi+0x4]
   15563:	cmp    esi,DWORD PTR [eax+0x8]
   15566:	jne    0x15584
   15568:	jmp    0x15579
   1556a:	mov    DWORD PTR [esi],ebx
   1556c:	mov    eax,DWORD PTR [edi+0x4]
   1556f:	cmp    esi,eax
   15571:	jne    0x1557e
   15573:	mov    DWORD PTR [eax+0x4],ebx
   15576:	mov    eax,DWORD PTR [edi+0x4]
   15579:	mov    DWORD PTR [eax+0x8],ebx
   1557c:	jmp    0x15584
   1557e:	cmp    esi,DWORD PTR [eax]
   15580:	jne    0x15584
   15582:	mov    DWORD PTR [eax],ebx
   15584:	mov    eax,DWORD PTR [edi+0x4]
   15587:	mov    esi,ebx
   15589:	cmp    ebx,DWORD PTR [eax+0x4]
   1558c:	je     0x15640
   15592:	mov    eax,DWORD PTR [esi+0x4]
   15595:	xor    edx,edx
   15597:	cmp    DWORD PTR [eax+0x14],edx
   1559a:	jne    0x15640
   155a0:	mov    ecx,DWORD PTR [eax+0x4]
   155a3:	cmp    eax,DWORD PTR [ecx]
   155a5:	jne    0x155e1
   155a7:	mov    ecx,DWORD PTR [ecx+0x8]
   155aa:	cmp    DWORD PTR [ecx+0x14],edx
   155ad:	je     0x155e8
   155af:	cmp    esi,DWORD PTR [eax+0x8]
   155b2:	jne    0x155be
   155b4:	mov    esi,eax
   155b6:	push   esi
   155b7:	mov    ecx,edi
   155b9:	call   0x1304c
   155be:	mov    eax,DWORD PTR [esi+0x4]
   155c1:	mov    DWORD PTR [eax+0x14],0x1
   155c8:	mov    eax,DWORD PTR [esi+0x4]
   155cb:	mov    eax,DWORD PTR [eax+0x4]
   155ce:	and    DWORD PTR [eax+0x14],0x0
   155d2:	mov    eax,DWORD PTR [esi+0x4]
   155d5:	push   DWORD PTR [eax+0x4]
   155d8:	mov    ecx,edi
   155da:	call   0x1309a
   155df:	jmp    0x15634
   155e1:	mov    ecx,DWORD PTR [ecx]
   155e3:	cmp    DWORD PTR [ecx+0x14],edx
   155e6:	jne    0x15605
   155e8:	mov    edx,eax
   155ea:	xor    eax,eax
   155ec:	inc    eax
   155ed:	mov    DWORD PTR [edx+0x14],eax
   155f0:	mov    DWORD PTR [ecx+0x14],eax
   155f3:	mov    eax,DWORD PTR [esi+0x4]
   155f6:	mov    eax,DWORD PTR [eax+0x4]
   155f9:	and    DWORD PTR [eax+0x14],0x0
   155fd:	mov    eax,DWORD PTR [esi+0x4]
   15600:	mov    esi,DWORD PTR [eax+0x4]
   15603:	jmp    0x15634
   15605:	cmp    esi,DWORD PTR [eax]
   15607:	jne    0x15613
   15609:	mov    esi,eax
   1560b:	push   esi
   1560c:	mov    ecx,edi
   1560e:	call   0x1309a
   15613:	mov    eax,DWORD PTR [esi+0x4]
   15616:	mov    DWORD PTR [eax+0x14],0x1
   1561d:	mov    eax,DWORD PTR [esi+0x4]
   15620:	mov    eax,DWORD PTR [eax+0x4]
   15623:	and    DWORD PTR [eax+0x14],0x0
   15627:	mov    eax,DWORD PTR [esi+0x4]
   1562a:	push   DWORD PTR [eax+0x4]
   1562d:	mov    ecx,edi
   1562f:	call   0x1304c
   15634:	mov    eax,DWORD PTR [edi+0x4]
   15637:	cmp    esi,DWORD PTR [eax+0x4]
   1563a:	jne    0x15592
   15640:	mov    eax,DWORD PTR [edi+0x4]
   15643:	mov    eax,DWORD PTR [eax+0x4]
   15646:	pop    edi
   15647:	mov    DWORD PTR [eax+0x14],0x1
   1564e:	mov    eax,DWORD PTR [ebp+0x8]
   15651:	pop    esi
   15652:	mov    DWORD PTR [eax],ebx
   15654:	pop    ebx
   15655:	pop    ebp
   15656:	ret    0x10
   15659:	int3   
   1565a:	int3   
   1565b:	int3   
   1565c:	int3   
   1565d:	int3   
   1565e:	mov    edi,edi
   15660:	push   esi
   15661:	push   edi
   15662:	push   0x1
   15664:	xor    edi,edi
   15666:	push   edi
   15667:	mov    esi,ecx
   15669:	call   0x1446e
   1566e:	cmp    DWORD PTR ds:0x782c8,edi
   15674:	jne    0x1568b
   15676:	mov    ecx,eax
   15678:	mov    DWORD PTR ds:0x782c8,ecx
   1567e:	mov    DWORD PTR [ecx],edi
   15680:	mov    ecx,DWORD PTR ds:0x782c8
   15686:	xor    eax,eax
   15688:	mov    DWORD PTR [ecx+0x8],edi
   1568b:	inc    DWORD PTR ds:0x78428
   15691:	cmp    eax,edi
   15693:	je     0x1569c
   15695:	push   eax
   15696:	call   0x1da56
   1569b:	pop    ecx
   1569c:	push   edi
   1569d:	push   DWORD PTR ds:0x782c8
   156a3:	mov    ecx,esi
   156a5:	call   0x1446e
   156aa:	mov    DWORD PTR [esi+0xc],edi
   156ad:	mov    DWORD PTR [esi+0x4],eax
   156b0:	mov    DWORD PTR [eax],eax
   156b2:	mov    esi,DWORD PTR [esi+0x4]
   156b5:	pop    edi
   156b6:	mov    DWORD PTR [esi+0x8],esi
   156b9:	pop    esi
   156ba:	ret    
   156bb:	int3   
   156bc:	int3   
   156bd:	int3   
   156be:	int3   
   156bf:	int3   
   156c0:	mov    edi,edi
   156c2:	push   ebp
   156c3:	mov    ebp,esp
   156c5:	push   ecx
   156c6:	push   DWORD PTR [ebp-0x4]
   156c9:	push   DWORD PTR [ebp+0x10]
   156cc:	push   DWORD PTR [ebp+0xc]
   156cf:	push   DWORD PTR [ebp+0x8]
   156d2:	call   0x145ca
   156d7:	add    esp,0x10
   156da:	leave  
   156db:	ret    
   156dc:	int3   
   156dd:	int3   
   156de:	int3   
   156df:	int3   
   156e0:	int3   
   156e1:	int3   
   156e2:	mov    edi,edi
   156e4:	push   ebp
   156e5:	mov    ebp,esp
   156e7:	push   ebx
   156e8:	mov    ebx,DWORD PTR [ebp+0x8]
   156eb:	mov    eax,DWORD PTR [ebx+0x4]
   156ee:	push   esi
   156ef:	push   edi
   156f0:	mov    esi,ecx
   156f2:	mov    edi,DWORD PTR [esi+0x4]
   156f5:	add    eax,0x4
   156f8:	push   edi
   156f9:	push   DWORD PTR [eax]
   156fb:	call   0x1455a
   15700:	mov    DWORD PTR [edi+0x4],eax
   15703:	mov    eax,DWORD PTR [ebx+0xc]
   15706:	mov    edi,DWORD PTR [esi+0x4]
   15709:	mov    DWORD PTR [esi+0xc],eax
   1570c:	mov    eax,DWORD PTR [edi+0x4]
   1570f:	cmp    eax,DWORD PTR ds:0x782b4
   15715:	je     0x1572f
   15717:	push   eax
   15718:	call   0x110da
   1571d:	mov    DWORD PTR [edi],eax
   1571f:	mov    esi,DWORD PTR [esi+0x4]
   15722:	push   DWORD PTR [esi+0x4]
   15725:	call   0x110b8
   1572a:	mov    DWORD PTR [esi+0x8],eax
   1572d:	jmp    0x15737
   1572f:	mov    DWORD PTR [edi],edi
   15731:	mov    esi,DWORD PTR [esi+0x4]
   15734:	mov    DWORD PTR [esi+0x8],esi
   15737:	pop    edi
   15738:	pop    esi
   15739:	pop    ebx
   1573a:	pop    ebp
   1573b:	ret    0x4
   1573e:	int3   
   1573f:	int3   
   15740:	int3   
   15741:	int3   
   15742:	int3   
   15743:	int3   
   15744:	mov    edi,edi
   15746:	push   ebp
   15747:	mov    ebp,esp
   15749:	push   ecx
   1574a:	push   ebx
   1574b:	push   esi
   1574c:	push   edi
   1574d:	xor    edi,edi
   1574f:	push   edi
   15750:	push   edi
   15751:	push   edi
   15752:	mov    esi,ecx
   15754:	mov    eax,DWORD PTR [esi+0x10]
   15757:	push   edi
   15758:	push   eax
   15759:	xor    ebx,ebx
   1575b:	call   DWORD PTR ds:0x1f020
   15761:	test   eax,eax
   15763:	jge    0x15769
   15765:	xor    eax,eax
   15767:	jmp    0x1578f
   15769:	lea    eax,[ebp+0x8]
   1576c:	push   eax
   1576d:	lea    eax,[ebp-0x4]
   15770:	push   eax
   15771:	mov    ecx,esi
   15773:	call   0x139c0
   15778:	mov    eax,DWORD PTR [ebp-0x4]
   1577b:	cmp    eax,DWORD PTR [esi+0x4]
   1577e:	je     0x15783
   15780:	mov    ebx,DWORD PTR [eax+0x10]
   15783:	push   edi
   15784:	push   DWORD PTR [esi+0x10]
   15787:	call   DWORD PTR ds:0x1f01c
   1578d:	mov    eax,ebx
   1578f:	pop    edi
   15790:	pop    esi
   15791:	pop    ebx
   15792:	leave  
   15793:	ret    0x4
   15796:	int3   
   15797:	int3   
   15798:	int3   
   15799:	int3   
   1579a:	int3   
   1579b:	int3   
   1579c:	push   0x10
   1579e:	push   0x77258
   157a3:	call   0x1db08
   157a8:	xor    ebx,ebx
   157aa:	push   ebx
   157ab:	push   ebx
   157ac:	push   ebx
   157ad:	push   ebx
   157ae:	push   0x77758
   157b3:	call   DWORD PTR ds:0x1f020
   157b9:	cmp    eax,ebx
   157bb:	jl     0x15878
   157c1:	mov    DWORD PTR [ebp-0x4],ebx
   157c4:	push   0xffffffff
   157c6:	push   0x1df18
   157cb:	lea    ecx,[ebp-0x20]
   157ce:	call   0x129d2
   157d3:	mov    esi,DWORD PTR [ebp+0x8]
   157d6:	push   esi
   157d7:	lea    eax,[ebp+0x8]
   157da:	push   eax
   157db:	mov    ecx,DWORD PTR ds:0x77728
   157e1:	call   0x145f4
   157e6:	mov    eax,ds:0x77728
   157eb:	mov    eax,DWORD PTR [eax+0x4]
   157ee:	mov    ecx,DWORD PTR [ebp+0x8]
   157f1:	cmp    ecx,eax
   157f3:	je     0x15801
   157f5:	add    ecx,0x14
   157f8:	push   ecx
   157f9:	lea    ecx,[ebp-0x20]
   157fc:	call   0x12896
   15801:	mov    edx,DWORD PTR [esi+0x4]
   15804:	mov    eax,DWORD PTR [ebp-0x1c]
   15807:	lea    ecx,[eax+edx*1+0x2]
   1580b:	mov    eax,DWORD PTR [ebp+0xc]
   1580e:	cmp    ecx,DWORD PTR [eax]
   15810:	jbe    0x1581d
   15812:	mov    DWORD PTR [eax],ecx
   15814:	mov    DWORD PTR [eax+0x8],0x2
   1581b:	jmp    0x15840
   1581d:	mov    DWORD PTR [eax+0x8],ebx
   15820:	mov    esi,DWORD PTR [esi]
   15822:	lea    edi,[eax+0xc]
   15825:	mov    cl,BYTE PTR [esi]
   15827:	mov    BYTE PTR [edi],cl
   15829:	inc    esi
   1582a:	inc    edi
   1582b:	cmp    cl,bl
   1582d:	jne    0x15825
   1582f:	mov    esi,DWORD PTR [ebp-0x20]
   15832:	lea    eax,[edx+eax*1+0xd]
   15836:	mov    cl,BYTE PTR [esi]
   15838:	mov    BYTE PTR [eax],cl
   1583a:	inc    esi
   1583b:	inc    eax
   1583c:	cmp    cl,bl
   1583e:	jne    0x15836
   15840:	push   DWORD PTR [ebp-0x20]
   15843:	call   0x1da56
   15848:	pop    ecx
   15849:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15850:	jmp    0x1586c
   15852:	xor    eax,eax
   15854:	inc    eax
   15855:	ret    
   15856:	mov    esp,DWORD PTR [ebp-0x18]
   15859:	mov    eax,DWORD PTR [ebp+0xc]
   1585c:	mov    DWORD PTR [eax+0x8],0x4
   15863:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1586a:	xor    ebx,ebx
   1586c:	push   ebx
   1586d:	push   0x77758
   15872:	call   DWORD PTR ds:0x1f01c
   15878:	call   0x1db4d
   1587d:	ret    0x8
   15880:	int3   
   15881:	int3   
   15882:	int3   
   15883:	int3   
   15884:	int3   
   15885:	int3   
   15886:	push   0xc
   15888:	push   0x77278
   1588d:	call   0x1db08
   15892:	xor    edi,edi
   15894:	push   edi
   15895:	push   edi
   15896:	push   edi
   15897:	push   edi
   15898:	push   0x77758
   1589d:	call   DWORD PTR ds:0x1f020
   158a3:	cmp    eax,edi
   158a5:	jl     0x15954
   158ab:	mov    DWORD PTR [ebp-0x4],edi
   158ae:	lea    eax,[ebp+0x8]
   158b1:	push   eax
   158b2:	lea    eax,[ebp-0x1c]
   158b5:	push   eax
   158b6:	mov    esi,DWORD PTR ds:0x777b4
   158bc:	mov    ecx,esi
   158be:	call   0x13aba
   158c3:	mov    esi,DWORD PTR [esi+0x4]
   158c6:	mov    ecx,DWORD PTR [ebp-0x1c]
   158c9:	cmp    ecx,esi
   158cb:	jne    0x158d9
   158cd:	mov    eax,DWORD PTR [ebp+0xc]
   158d0:	mov    DWORD PTR [eax+0x8],0x1
   158d7:	jmp    0x15925
   158d9:	mov    eax,DWORD PTR [ecx+0x10]
   158dc:	cmp    eax,edi
   158de:	jne    0x158e4
   158e0:	xor    edx,edx
   158e2:	jmp    0x158e7
   158e4:	mov    edx,DWORD PTR [eax+0x8]
   158e7:	mov    eax,DWORD PTR [ebp+0xc]
   158ea:	cmp    edx,DWORD PTR [eax]
   158ec:	jbe    0x158f9
   158ee:	mov    DWORD PTR [eax],edx
   158f0:	mov    DWORD PTR [eax+0x8],0x2
   158f7:	jmp    0x15925
   158f9:	mov    DWORD PTR [eax+0x8],edi
   158fc:	mov    edx,DWORD PTR [ecx+0x10]
   158ff:	cmp    edx,edi
   15901:	jne    0x15907
   15903:	xor    edx,edx
   15905:	jmp    0x1590a
   15907:	mov    edx,DWORD PTR [edx+0x8]
   1590a:	mov    ecx,DWORD PTR [ecx+0x10]
   1590d:	cmp    ecx,edi
   1590f:	jne    0x15915
   15911:	xor    ecx,ecx
   15913:	jmp    0x15917
   15915:	mov    ecx,DWORD PTR [ecx]
   15917:	push   edx
   15918:	push   ecx
   15919:	add    eax,0xc
   1591c:	push   eax
   1591d:	call   0x1dad8
   15922:	add    esp,0xc
   15925:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1592c:	jmp    0x15948
   1592e:	xor    eax,eax
   15930:	inc    eax
   15931:	ret    
   15932:	mov    esp,DWORD PTR [ebp-0x18]
   15935:	mov    eax,DWORD PTR [ebp+0xc]
   15938:	mov    DWORD PTR [eax+0x8],0x4
   1593f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15946:	xor    edi,edi
   15948:	push   edi
   15949:	push   0x77758
   1594e:	call   DWORD PTR ds:0x1f01c
   15954:	call   0x1db4d
   15959:	ret    0x8
   1595c:	int3   
   1595d:	int3   
   1595e:	int3   
   1595f:	int3   
   15960:	int3   
   15961:	int3   
   15962:	mov    edi,edi
   15964:	push   ebp
   15965:	mov    ebp,esp
   15967:	push   ebx
   15968:	push   esi
   15969:	push   DWORD PTR [ebp+0x8]
   1596c:	mov    esi,ecx
   1596e:	lea    eax,[ebp+0x8]
   15971:	push   eax
   15972:	lea    ecx,[esi+0x4]
   15975:	xor    bl,bl
   15977:	call   0x13b1c
   1597c:	mov    eax,DWORD PTR [ebp+0x8]
   1597f:	cmp    eax,DWORD PTR [esi+0x8]
   15982:	je     0x15992
   15984:	mov    ecx,DWORD PTR [ebp+0xc]
   15987:	add    eax,0x18
   1598a:	push   eax
   1598b:	call   0x12924
   15990:	inc    bl
   15992:	pop    esi
   15993:	mov    al,bl
   15995:	pop    ebx
   15996:	pop    ebp
   15997:	ret    0x8
   1599a:	int3   
   1599b:	int3   
   1599c:	int3   
   1599d:	int3   
   1599e:	int3   
   1599f:	int3   
   159a0:	mov    edi,edi
   159a2:	push   ebp
   159a3:	mov    ebp,esp
   159a5:	push   ecx
   159a6:	push   esi
   159a7:	mov    esi,ecx
   159a9:	mov    eax,DWORD PTR [esi+0x4]
   159ac:	mov    ecx,DWORD PTR [eax]
   159ae:	push   eax
   159af:	push   ecx
   159b0:	lea    eax,[ebp-0x4]
   159b3:	push   eax
   159b4:	mov    ecx,esi
   159b6:	call   0x146d8
   159bb:	push   DWORD PTR [esi+0x4]
   159be:	call   0x1da56
   159c3:	xor    eax,eax
   159c5:	mov    DWORD PTR [esi+0x4],eax
   159c8:	mov    DWORD PTR [esi+0xc],eax
   159cb:	dec    DWORD PTR ds:0x78420
   159d1:	pop    ecx
   159d2:	pop    esi
   159d3:	jne    0x159eb
   159d5:	mov    ecx,DWORD PTR ds:0x782b4
   159db:	mov    ds:0x782b4,eax
   159e0:	cmp    ecx,eax
   159e2:	je     0x159eb
   159e4:	push   ecx
   159e5:	call   0x1da56
   159ea:	pop    ecx
   159eb:	leave  
   159ec:	ret    
   159ed:	int3   
   159ee:	int3   
   159ef:	int3   
   159f0:	int3   
   159f1:	int3   
   159f2:	mov    edi,edi
   159f4:	push   ebp
   159f5:	mov    ebp,esp
   159f7:	push   ecx
   159f8:	push   ecx
   159f9:	push   DWORD PTR [ebp+0x8]
   159fc:	lea    eax,[ebp-0x8]
   159ff:	push   eax
   15a00:	call   0x13dee
   15a05:	and    DWORD PTR [ebp+0x8],0x0
   15a09:	lea    eax,[ebp+0x8]
   15a0c:	push   eax
   15a0d:	push   DWORD PTR [ebp-0x4]
   15a10:	push   DWORD PTR [ebp-0x8]
   15a13:	call   0x156c0
   15a18:	mov    eax,DWORD PTR [ebp+0x8]
   15a1b:	add    esp,0xc
   15a1e:	leave  
   15a1f:	ret    0x4
   15a22:	int3   
   15a23:	int3   
   15a24:	int3   
   15a25:	int3   
   15a26:	int3   
   15a27:	int3   
   15a28:	mov    edi,edi
   15a2a:	push   ebp
   15a2b:	mov    ebp,esp
   15a2d:	push   ecx
   15a2e:	push   ecx
   15a2f:	push   esi
   15a30:	push   DWORD PTR [ebp+0x8]
   15a33:	lea    eax,[ebp-0x8]
   15a36:	push   eax
   15a37:	mov    esi,ecx
   15a39:	call   0x13e20
   15a3e:	and    DWORD PTR [ebp+0x8],0x0
   15a42:	lea    eax,[ebp+0x8]
   15a45:	push   eax
   15a46:	push   DWORD PTR [ebp-0x4]
   15a49:	push   DWORD PTR [ebp-0x8]
   15a4c:	call   0x1377c
   15a51:	add    esp,0xc
   15a54:	push   DWORD PTR [ebp-0x4]
   15a57:	lea    eax,[ebp-0x4]
   15a5a:	push   DWORD PTR [ebp-0x8]
   15a5d:	mov    ecx,esi
   15a5f:	push   eax
   15a60:	call   0x14864
   15a65:	mov    eax,DWORD PTR [ebp+0x8]
   15a68:	pop    esi
   15a69:	leave  
   15a6a:	ret    0x4
   15a6d:	int3   
   15a6e:	int3   
   15a6f:	int3   
   15a70:	int3   
   15a71:	int3   
   15a72:	mov    edi,edi
   15a74:	push   ebp
   15a75:	mov    ebp,esp
   15a77:	push   ecx
   15a78:	push   ebx
   15a79:	push   esi
   15a7a:	push   edi
   15a7b:	mov    edi,ecx
   15a7d:	mov    eax,DWORD PTR [edi+0x4]
   15a80:	mov    esi,DWORD PTR [eax+0x4]
   15a83:	mov    ebx,eax
   15a85:	mov    eax,ds:0x782b4
   15a8a:	mov    dl,0x1
   15a8c:	cmp    esi,eax
   15a8e:	je     0x15aac
   15a90:	mov    ecx,DWORD PTR [ebp+0xc]
   15a93:	mov    ecx,DWORD PTR [ecx]
   15a95:	cmp    ecx,DWORD PTR [esi+0xc]
   15a98:	mov    ebx,esi
   15a9a:	setb   dl
   15a9d:	test   dl,dl
   15a9f:	je     0x15aa5
   15aa1:	mov    esi,DWORD PTR [esi]
   15aa3:	jmp    0x15aa8
   15aa5:	mov    esi,DWORD PTR [esi+0x8]
   15aa8:	cmp    esi,eax
   15aaa:	jne    0x15a95
   15aac:	cmp    BYTE PTR [edi+0x8],0x0
   15ab0:	je     0x15acd
   15ab2:	push   DWORD PTR [ebp+0xc]
   15ab5:	push   ebx
   15ab6:	push   esi
   15ab7:	lea    eax,[ebp+0xc]
   15aba:	push   eax
   15abb:	mov    ecx,edi
   15abd:	call   0x14a08
   15ac2:	mov    ecx,DWORD PTR [eax]
   15ac4:	mov    eax,DWORD PTR [ebp+0x8]
   15ac7:	mov    BYTE PTR [eax+0x4],0x1
   15acb:	jmp    0x15afc
   15acd:	mov    ecx,ebx
   15acf:	mov    DWORD PTR [ebp-0x4],ecx
   15ad2:	test   dl,dl
   15ad4:	je     0x15ae8
   15ad6:	mov    eax,DWORD PTR [edi+0x4]
   15ad9:	cmp    ebx,DWORD PTR [eax]
   15adb:	je     0x15ab2
   15add:	lea    ecx,[ebp-0x4]
   15ae0:	call   0x12d04
   15ae5:	mov    ecx,DWORD PTR [ebp-0x4]
   15ae8:	mov    edx,DWORD PTR [ecx+0xc]
   15aeb:	mov    eax,DWORD PTR [ebp+0xc]
   15aee:	cmp    edx,DWORD PTR [eax]
   15af0:	jae    0x15af5
   15af2:	push   eax
   15af3:	jmp    0x15ab5
   15af5:	mov    eax,DWORD PTR [ebp+0x8]
   15af8:	mov    BYTE PTR [eax+0x4],0x0
   15afc:	pop    edi
   15afd:	pop    esi
   15afe:	mov    DWORD PTR [eax],ecx
   15b00:	pop    ebx
   15b01:	leave  
   15b02:	ret    0x8
   15b05:	int3   
   15b06:	int3   
   15b07:	int3   
   15b08:	int3   
   15b09:	int3   
   15b0a:	mov    edi,edi
   15b0c:	push   ebp
   15b0d:	mov    ebp,esp
   15b0f:	push   ecx
   15b10:	push   esi
   15b11:	mov    esi,ecx
   15b13:	cmp    DWORD PTR [esi+0xc],0x0
   15b17:	mov    ecx,DWORD PTR [ebp+0xc]
   15b1a:	je     0x15b54
   15b1c:	mov    eax,DWORD PTR [esi+0x4]
   15b1f:	cmp    ecx,DWORD PTR [eax]
   15b21:	jne    0x15b54
   15b23:	cmp    DWORD PTR [ebp+0x10],eax
   15b26:	jne    0x15b54
   15b28:	push   DWORD PTR [eax+0x4]
   15b2b:	mov    ecx,esi
   15b2d:	call   0x14dba
   15b32:	mov    ecx,DWORD PTR ds:0x782b8
   15b38:	mov    eax,DWORD PTR [esi+0x4]
   15b3b:	mov    DWORD PTR [eax+0x4],ecx
   15b3e:	mov    eax,DWORD PTR [esi+0x4]
   15b41:	and    DWORD PTR [esi+0xc],0x0
   15b45:	mov    DWORD PTR [eax],eax
   15b47:	mov    eax,DWORD PTR [esi+0x4]
   15b4a:	mov    DWORD PTR [eax+0x8],eax
   15b4d:	mov    eax,DWORD PTR [esi+0x4]
   15b50:	mov    ecx,DWORD PTR [eax]
   15b52:	jmp    0x15b79
   15b54:	cmp    ecx,DWORD PTR [ebp+0x10]
   15b57:	je     0x15b79
   15b59:	push   edi
   15b5a:	mov    edi,ecx
   15b5c:	lea    ecx,[ebp+0xc]
   15b5f:	call   0x12cce
   15b64:	push   edi
   15b65:	lea    eax,[ebp-0x4]
   15b68:	push   eax
   15b69:	mov    ecx,esi
   15b6b:	call   0x14b58
   15b70:	mov    ecx,DWORD PTR [ebp+0xc]
   15b73:	cmp    ecx,DWORD PTR [ebp+0x10]
   15b76:	jne    0x15b5a
   15b78:	pop    edi
   15b79:	mov    eax,DWORD PTR [ebp+0x8]
   15b7c:	mov    DWORD PTR [eax],ecx
   15b7e:	pop    esi
   15b7f:	leave  
   15b80:	ret    0xc
   15b83:	int3   
   15b84:	int3   
   15b85:	int3   
   15b86:	int3   
   15b87:	int3   
   15b88:	mov    edi,edi
   15b8a:	push   ebp
   15b8b:	mov    ebp,esp
   15b8d:	push   ecx
   15b8e:	push   ebx
   15b8f:	push   esi
   15b90:	push   edi
   15b91:	mov    edi,ecx
   15b93:	mov    eax,DWORD PTR [edi+0x4]
   15b96:	mov    esi,DWORD PTR [eax+0x4]
   15b99:	mov    ebx,eax
   15b9b:	mov    eax,ds:0x782b0
   15ba0:	mov    dl,0x1
   15ba2:	cmp    esi,eax
   15ba4:	je     0x15bc2
   15ba6:	mov    ecx,DWORD PTR [ebp+0xc]
   15ba9:	mov    ecx,DWORD PTR [ecx]
   15bab:	cmp    ecx,DWORD PTR [esi+0xc]
   15bae:	mov    ebx,esi
   15bb0:	setb   dl
   15bb3:	test   dl,dl
   15bb5:	je     0x15bbb
   15bb7:	mov    esi,DWORD PTR [esi]
   15bb9:	jmp    0x15bbe
   15bbb:	mov    esi,DWORD PTR [esi+0x8]
   15bbe:	cmp    esi,eax
   15bc0:	jne    0x15bab
   15bc2:	cmp    BYTE PTR [edi+0x8],0x0
   15bc6:	je     0x15be3
   15bc8:	push   DWORD PTR [ebp+0xc]
   15bcb:	push   ebx
   15bcc:	push   esi
   15bcd:	lea    eax,[ebp+0xc]
   15bd0:	push   eax
   15bd1:	mov    ecx,edi
   15bd3:	call   0x14e66
   15bd8:	mov    ecx,DWORD PTR [eax]
   15bda:	mov    eax,DWORD PTR [ebp+0x8]
   15bdd:	mov    BYTE PTR [eax+0x4],0x1
   15be1:	jmp    0x15c12
   15be3:	mov    ecx,ebx
   15be5:	mov    DWORD PTR [ebp-0x4],ecx
   15be8:	test   dl,dl
   15bea:	je     0x15bfe
   15bec:	mov    eax,DWORD PTR [edi+0x4]
   15bef:	cmp    ebx,DWORD PTR [eax]
   15bf1:	je     0x15bc8
   15bf3:	lea    ecx,[ebp-0x4]
   15bf6:	call   0x11140
   15bfb:	mov    ecx,DWORD PTR [ebp-0x4]
   15bfe:	mov    edx,DWORD PTR [ecx+0xc]
   15c01:	mov    eax,DWORD PTR [ebp+0xc]
   15c04:	cmp    edx,DWORD PTR [eax]
   15c06:	jae    0x15c0b
   15c08:	push   eax
   15c09:	jmp    0x15bcb
   15c0b:	mov    eax,DWORD PTR [ebp+0x8]
   15c0e:	mov    BYTE PTR [eax+0x4],0x0
   15c12:	pop    edi
   15c13:	pop    esi
   15c14:	mov    DWORD PTR [eax],ecx
   15c16:	pop    ebx
   15c17:	leave  
   15c18:	ret    0x8
   15c1b:	int3   
   15c1c:	int3   
   15c1d:	int3   
   15c1e:	int3   
   15c1f:	int3   
   15c20:	mov    edi,edi
   15c22:	push   ebp
   15c23:	mov    ebp,esp
   15c25:	push   ecx
   15c26:	push   esi
   15c27:	mov    esi,ecx
   15c29:	cmp    DWORD PTR [esi+0xc],0x0
   15c2d:	mov    ecx,DWORD PTR [ebp+0xc]
   15c30:	je     0x15c6a
   15c32:	mov    eax,DWORD PTR [esi+0x4]
   15c35:	cmp    ecx,DWORD PTR [eax]
   15c37:	jne    0x15c6a
   15c39:	cmp    DWORD PTR [ebp+0x10],eax
   15c3c:	jne    0x15c6a
   15c3e:	push   DWORD PTR [eax+0x4]
   15c41:	mov    ecx,esi
   15c43:	call   0x15218
   15c48:	mov    ecx,DWORD PTR ds:0x782bc
   15c4e:	mov    eax,DWORD PTR [esi+0x4]
   15c51:	mov    DWORD PTR [eax+0x4],ecx
   15c54:	mov    eax,DWORD PTR [esi+0x4]
   15c57:	and    DWORD PTR [esi+0xc],0x0
   15c5b:	mov    DWORD PTR [eax],eax
   15c5d:	mov    eax,DWORD PTR [esi+0x4]
   15c60:	mov    DWORD PTR [eax+0x8],eax
   15c63:	mov    eax,DWORD PTR [esi+0x4]
   15c66:	mov    ecx,DWORD PTR [eax]
   15c68:	jmp    0x15c8f
   15c6a:	cmp    ecx,DWORD PTR [ebp+0x10]
   15c6d:	je     0x15c8f
   15c6f:	push   edi
   15c70:	mov    edi,ecx
   15c72:	lea    ecx,[ebp+0xc]
   15c75:	call   0x135d8
   15c7a:	push   edi
   15c7b:	lea    eax,[ebp-0x4]
   15c7e:	push   eax
   15c7f:	mov    ecx,esi
   15c81:	call   0x14fb6
   15c86:	mov    ecx,DWORD PTR [ebp+0xc]
   15c89:	cmp    ecx,DWORD PTR [ebp+0x10]
   15c8c:	jne    0x15c70
   15c8e:	pop    edi
   15c8f:	mov    eax,DWORD PTR [ebp+0x8]
   15c92:	mov    DWORD PTR [eax],ecx
   15c94:	pop    esi
   15c95:	leave  
   15c96:	ret    0xc
   15c99:	int3   
   15c9a:	int3   
   15c9b:	int3   
   15c9c:	int3   
   15c9d:	int3   
   15c9e:	mov    edi,edi
   15ca0:	push   ebp
   15ca1:	mov    ebp,esp
   15ca3:	push   ecx
   15ca4:	push   ebx
   15ca5:	push   esi
   15ca6:	push   edi
   15ca7:	mov    edi,ecx
   15ca9:	mov    eax,DWORD PTR [edi+0x4]
   15cac:	mov    esi,DWORD PTR [eax+0x4]
   15caf:	mov    ebx,eax
   15cb1:	mov    eax,ds:0x782c4
   15cb6:	mov    dl,0x1
   15cb8:	cmp    esi,eax
   15cba:	je     0x15cd8
   15cbc:	mov    ecx,DWORD PTR [ebp+0xc]
   15cbf:	mov    ecx,DWORD PTR [ecx]
   15cc1:	cmp    ecx,DWORD PTR [esi+0xc]
   15cc4:	mov    ebx,esi
   15cc6:	setl   dl
   15cc9:	test   dl,dl
   15ccb:	je     0x15cd1
   15ccd:	mov    esi,DWORD PTR [esi]
   15ccf:	jmp    0x15cd4
   15cd1:	mov    esi,DWORD PTR [esi+0x8]
   15cd4:	cmp    esi,eax
   15cd6:	jne    0x15cc1
   15cd8:	cmp    BYTE PTR [edi+0x8],0x0
   15cdc:	je     0x15cf9
   15cde:	push   DWORD PTR [ebp+0xc]
   15ce1:	push   ebx
   15ce2:	push   esi
   15ce3:	lea    eax,[ebp+0xc]
   15ce6:	push   eax
   15ce7:	mov    ecx,edi
   15ce9:	call   0x1550e
   15cee:	mov    ecx,DWORD PTR [eax]
   15cf0:	mov    eax,DWORD PTR [ebp+0x8]
   15cf3:	mov    BYTE PTR [eax+0x4],0x1
   15cf7:	jmp    0x15d28
   15cf9:	mov    ecx,ebx
   15cfb:	mov    DWORD PTR [ebp-0x4],ecx
   15cfe:	test   dl,dl
   15d00:	je     0x15d14
   15d02:	mov    eax,DWORD PTR [edi+0x4]
   15d05:	cmp    ebx,DWORD PTR [eax]
   15d07:	je     0x15cde
   15d09:	lea    ecx,[ebp-0x4]
   15d0c:	call   0x1137e
   15d11:	mov    ecx,DWORD PTR [ebp-0x4]
   15d14:	mov    edx,DWORD PTR [ecx+0xc]
   15d17:	mov    eax,DWORD PTR [ebp+0xc]
   15d1a:	cmp    edx,DWORD PTR [eax]
   15d1c:	jge    0x15d21
   15d1e:	push   eax
   15d1f:	jmp    0x15ce1
   15d21:	mov    eax,DWORD PTR [ebp+0x8]
   15d24:	mov    BYTE PTR [eax+0x4],0x0
   15d28:	pop    edi
   15d29:	pop    esi
   15d2a:	mov    DWORD PTR [eax],ecx
   15d2c:	pop    ebx
   15d2d:	leave  
   15d2e:	ret    0x8
   15d31:	int3   
   15d32:	int3   
   15d33:	int3   
   15d34:	int3   
   15d35:	int3   
   15d36:	mov    edi,edi
   15d38:	push   ebp
   15d39:	mov    ebp,esp
   15d3b:	push   ecx
   15d3c:	push   esi
   15d3d:	mov    esi,ecx
   15d3f:	cmp    DWORD PTR [esi+0xc],0x0
   15d43:	mov    ecx,DWORD PTR [ebp+0xc]
   15d46:	je     0x15d80
   15d48:	mov    eax,DWORD PTR [esi+0x4]
   15d4b:	cmp    ecx,DWORD PTR [eax]
   15d4d:	jne    0x15d80
   15d4f:	cmp    DWORD PTR [ebp+0x10],eax
   15d52:	jne    0x15d80
   15d54:	push   DWORD PTR [eax+0x4]
   15d57:	mov    ecx,esi
   15d59:	call   0x154c4
   15d5e:	mov    ecx,DWORD PTR ds:0x782c4
   15d64:	mov    eax,DWORD PTR [esi+0x4]
   15d67:	mov    DWORD PTR [eax+0x4],ecx
   15d6a:	mov    eax,DWORD PTR [esi+0x4]
   15d6d:	and    DWORD PTR [esi+0xc],0x0
   15d71:	mov    DWORD PTR [eax],eax
   15d73:	mov    eax,DWORD PTR [esi+0x4]
   15d76:	mov    DWORD PTR [eax+0x8],eax
   15d79:	mov    eax,DWORD PTR [esi+0x4]
   15d7c:	mov    ecx,DWORD PTR [eax]
   15d7e:	jmp    0x15da5
   15d80:	cmp    ecx,DWORD PTR [ebp+0x10]
   15d83:	je     0x15da5
   15d85:	push   edi
   15d86:	mov    edi,ecx
   15d88:	lea    ecx,[ebp+0xc]
   15d8b:	call   0x11434
   15d90:	push   edi
   15d91:	lea    eax,[ebp-0x4]
   15d94:	push   eax
   15d95:	mov    ecx,esi
   15d97:	call   0x15262
   15d9c:	mov    ecx,DWORD PTR [ebp+0xc]
   15d9f:	cmp    ecx,DWORD PTR [ebp+0x10]
   15da2:	jne    0x15d86
   15da4:	pop    edi
   15da5:	mov    eax,DWORD PTR [ebp+0x8]
   15da8:	mov    DWORD PTR [eax],ecx
   15daa:	pop    esi
   15dab:	leave  
   15dac:	ret    0xc
   15daf:	int3   
   15db0:	int3   
   15db1:	int3   
   15db2:	int3   
   15db3:	int3   
   15db4:	mov    edi,edi
   15db6:	push   ebp
   15db7:	mov    ebp,esp
   15db9:	push   ebx
   15dba:	push   esi
   15dbb:	mov    esi,DWORD PTR [ebp+0x10]
   15dbe:	push   edi
   15dbf:	push   0x0
   15dc1:	push   esi
   15dc2:	mov    edi,ecx
   15dc4:	call   0x1446e
   15dc9:	push   DWORD PTR [ebp+0x14]
   15dcc:	mov    ebx,eax
   15dce:	mov    eax,ds:0x782b8
   15dd3:	mov    DWORD PTR [ebx],eax
   15dd5:	mov    eax,ds:0x782b8
   15dda:	mov    DWORD PTR [ebx+0x8],eax
   15ddd:	lea    eax,[ebx+0x10]
   15de0:	push   eax
   15de1:	call   0x144e2
   15de6:	inc    DWORD PTR [edi+0xc]
   15de9:	cmp    esi,DWORD PTR [edi+0x4]
   15dec:	je     0x15e16
   15dee:	mov    eax,DWORD PTR [ebp+0xc]
   15df1:	cmp    eax,DWORD PTR ds:0x782b8
   15df7:	jne    0x15e16
   15df9:	lea    eax,[esi+0x10]
   15dfc:	push   eax
   15dfd:	push   DWORD PTR [ebp+0x14]
   15e00:	call   0x197f6
   15e05:	test   al,al
   15e07:	jne    0x15e16
   15e09:	mov    DWORD PTR [esi+0x8],ebx
   15e0c:	mov    eax,DWORD PTR [edi+0x4]
   15e0f:	cmp    esi,DWORD PTR [eax+0x8]
   15e12:	jne    0x15e30
   15e14:	jmp    0x15e25
   15e16:	mov    DWORD PTR [esi],ebx
   15e18:	mov    eax,DWORD PTR [edi+0x4]
   15e1b:	cmp    esi,eax
   15e1d:	jne    0x15e2a
   15e1f:	mov    DWORD PTR [eax+0x4],ebx
   15e22:	mov    eax,DWORD PTR [edi+0x4]
   15e25:	mov    DWORD PTR [eax+0x8],ebx
   15e28:	jmp    0x15e30
   15e2a:	cmp    esi,DWORD PTR [eax]
   15e2c:	jne    0x15e30
   15e2e:	mov    DWORD PTR [eax],ebx
   15e30:	mov    eax,DWORD PTR [edi+0x4]
   15e33:	mov    esi,ebx
   15e35:	cmp    ebx,DWORD PTR [eax+0x4]
   15e38:	je     0x15eec
   15e3e:	mov    eax,DWORD PTR [esi+0x4]
   15e41:	xor    edx,edx
   15e43:	cmp    DWORD PTR [eax+0x60],edx
   15e46:	jne    0x15eec
   15e4c:	mov    ecx,DWORD PTR [eax+0x4]
   15e4f:	cmp    eax,DWORD PTR [ecx]
   15e51:	jne    0x15e8d
   15e53:	mov    ecx,DWORD PTR [ecx+0x8]
   15e56:	cmp    DWORD PTR [ecx+0x60],edx
   15e59:	je     0x15e94
   15e5b:	cmp    esi,DWORD PTR [eax+0x8]
   15e5e:	jne    0x15e6a
   15e60:	mov    esi,eax
   15e62:	push   esi
   15e63:	mov    ecx,edi
   15e65:	call   0x12e58
   15e6a:	mov    eax,DWORD PTR [esi+0x4]
   15e6d:	mov    DWORD PTR [eax+0x60],0x1
   15e74:	mov    eax,DWORD PTR [esi+0x4]
   15e77:	mov    eax,DWORD PTR [eax+0x4]
   15e7a:	and    DWORD PTR [eax+0x60],0x0
   15e7e:	mov    eax,DWORD PTR [esi+0x4]
   15e81:	push   DWORD PTR [eax+0x4]
   15e84:	mov    ecx,edi
   15e86:	call   0x12ea6
   15e8b:	jmp    0x15ee0
   15e8d:	mov    ecx,DWORD PTR [ecx]
   15e8f:	cmp    DWORD PTR [ecx+0x60],edx
   15e92:	jne    0x15eb1
   15e94:	mov    edx,eax
   15e96:	xor    eax,eax
   15e98:	inc    eax
   15e99:	mov    DWORD PTR [edx+0x60],eax
   15e9c:	mov    DWORD PTR [ecx+0x60],eax
   15e9f:	mov    eax,DWORD PTR [esi+0x4]
   15ea2:	mov    eax,DWORD PTR [eax+0x4]
   15ea5:	and    DWORD PTR [eax+0x60],0x0
   15ea9:	mov    eax,DWORD PTR [esi+0x4]
   15eac:	mov    esi,DWORD PTR [eax+0x4]
   15eaf:	jmp    0x15ee0
   15eb1:	cmp    esi,DWORD PTR [eax]
   15eb3:	jne    0x15ebf
   15eb5:	mov    esi,eax
   15eb7:	push   esi
   15eb8:	mov    ecx,edi
   15eba:	call   0x12ea6
   15ebf:	mov    eax,DWORD PTR [esi+0x4]
   15ec2:	mov    DWORD PTR [eax+0x60],0x1
   15ec9:	mov    eax,DWORD PTR [esi+0x4]
   15ecc:	mov    eax,DWORD PTR [eax+0x4]
   15ecf:	and    DWORD PTR [eax+0x60],0x0
   15ed3:	mov    eax,DWORD PTR [esi+0x4]
   15ed6:	push   DWORD PTR [eax+0x4]
   15ed9:	mov    ecx,edi
   15edb:	call   0x12e58
   15ee0:	mov    eax,DWORD PTR [edi+0x4]
   15ee3:	cmp    esi,DWORD PTR [eax+0x4]
   15ee6:	jne    0x15e3e
   15eec:	mov    eax,DWORD PTR [edi+0x4]
   15eef:	mov    eax,DWORD PTR [eax+0x4]
   15ef2:	pop    edi
   15ef3:	mov    DWORD PTR [eax+0x60],0x1
   15efa:	mov    eax,DWORD PTR [ebp+0x8]
   15efd:	pop    esi
   15efe:	mov    DWORD PTR [eax],ebx
   15f00:	pop    ebx
   15f01:	pop    ebp
   15f02:	ret    0x10
   15f05:	int3   
   15f06:	int3   
   15f07:	int3   
   15f08:	int3   
   15f09:	int3   
   15f0a:	mov    edi,edi
   15f0c:	push   ebp
   15f0d:	mov    ebp,esp
   15f0f:	push   ebx
   15f10:	push   esi
   15f11:	mov    esi,DWORD PTR [ebp+0x10]
   15f14:	push   edi
   15f15:	push   0x0
   15f17:	push   esi
   15f18:	mov    edi,ecx
   15f1a:	call   0x1417a
   15f1f:	push   DWORD PTR [ebp+0x14]
   15f22:	mov    ebx,eax
   15f24:	mov    eax,ds:0x782bc
   15f29:	mov    DWORD PTR [ebx],eax
   15f2b:	mov    eax,ds:0x782bc
   15f30:	mov    DWORD PTR [ebx+0x8],eax
   15f33:	lea    eax,[ebx+0x10]
   15f36:	push   eax
   15f37:	call   0x14500
   15f3c:	inc    DWORD PTR [edi+0xc]
   15f3f:	cmp    esi,DWORD PTR [edi+0x4]
   15f42:	je     0x15f6c
   15f44:	mov    eax,DWORD PTR [ebp+0xc]
   15f47:	cmp    eax,DWORD PTR ds:0x782bc
   15f4d:	jne    0x15f6c
   15f4f:	lea    eax,[esi+0x10]
   15f52:	push   eax
   15f53:	push   DWORD PTR [ebp+0x14]
   15f56:	call   0x197f6
   15f5b:	test   al,al
   15f5d:	jne    0x15f6c
   15f5f:	mov    DWORD PTR [esi+0x8],ebx
   15f62:	mov    eax,DWORD PTR [edi+0x4]
   15f65:	cmp    esi,DWORD PTR [eax+0x8]
   15f68:	jne    0x15f86
   15f6a:	jmp    0x15f7b
   15f6c:	mov    DWORD PTR [esi],ebx
   15f6e:	mov    eax,DWORD PTR [edi+0x4]
   15f71:	cmp    esi,eax
   15f73:	jne    0x15f80
   15f75:	mov    DWORD PTR [eax+0x4],ebx
   15f78:	mov    eax,DWORD PTR [edi+0x4]
   15f7b:	mov    DWORD PTR [eax+0x8],ebx
   15f7e:	jmp    0x15f86
   15f80:	cmp    esi,DWORD PTR [eax]
   15f82:	jne    0x15f86
   15f84:	mov    DWORD PTR [eax],ebx
   15f86:	mov    eax,DWORD PTR [edi+0x4]
   15f89:	mov    esi,ebx
   15f8b:	cmp    ebx,DWORD PTR [eax+0x4]
   15f8e:	je     0x16042
   15f94:	mov    eax,DWORD PTR [esi+0x4]
   15f97:	xor    edx,edx
   15f99:	cmp    DWORD PTR [eax+0x58],edx
   15f9c:	jne    0x16042
   15fa2:	mov    ecx,DWORD PTR [eax+0x4]
   15fa5:	cmp    eax,DWORD PTR [ecx]
   15fa7:	jne    0x15fe3
   15fa9:	mov    ecx,DWORD PTR [ecx+0x8]
   15fac:	cmp    DWORD PTR [ecx+0x58],edx
   15faf:	je     0x15fea
   15fb1:	cmp    esi,DWORD PTR [eax+0x8]
   15fb4:	jne    0x15fc0
   15fb6:	mov    esi,eax
   15fb8:	push   esi
   15fb9:	mov    ecx,edi
   15fbb:	call   0x111b6
   15fc0:	mov    eax,DWORD PTR [esi+0x4]
   15fc3:	mov    DWORD PTR [eax+0x58],0x1
   15fca:	mov    eax,DWORD PTR [esi+0x4]
   15fcd:	mov    eax,DWORD PTR [eax+0x4]
   15fd0:	and    DWORD PTR [eax+0x58],0x0
   15fd4:	mov    eax,DWORD PTR [esi+0x4]
   15fd7:	push   DWORD PTR [eax+0x4]
   15fda:	mov    ecx,edi
   15fdc:	call   0x11226
   15fe1:	jmp    0x16036
   15fe3:	mov    ecx,DWORD PTR [ecx]
   15fe5:	cmp    DWORD PTR [ecx+0x58],edx
   15fe8:	jne    0x16007
   15fea:	mov    edx,eax
   15fec:	xor    eax,eax
   15fee:	inc    eax
   15fef:	mov    DWORD PTR [edx+0x58],eax
   15ff2:	mov    DWORD PTR [ecx+0x58],eax
   15ff5:	mov    eax,DWORD PTR [esi+0x4]
   15ff8:	mov    eax,DWORD PTR [eax+0x4]
   15ffb:	and    DWORD PTR [eax+0x58],0x0
   15fff:	mov    eax,DWORD PTR [esi+0x4]
   16002:	mov    esi,DWORD PTR [eax+0x4]
   16005:	jmp    0x16036
   16007:	cmp    esi,DWORD PTR [eax]
   16009:	jne    0x16015
   1600b:	mov    esi,eax
   1600d:	push   esi
   1600e:	mov    ecx,edi
   16010:	call   0x11226
   16015:	mov    eax,DWORD PTR [esi+0x4]
   16018:	mov    DWORD PTR [eax+0x58],0x1
   1601f:	mov    eax,DWORD PTR [esi+0x4]
   16022:	mov    eax,DWORD PTR [eax+0x4]
   16025:	and    DWORD PTR [eax+0x58],0x0
   16029:	mov    eax,DWORD PTR [esi+0x4]
   1602c:	push   DWORD PTR [eax+0x4]
   1602f:	mov    ecx,edi
   16031:	call   0x111b6
   16036:	mov    eax,DWORD PTR [edi+0x4]
   16039:	cmp    esi,DWORD PTR [eax+0x4]
   1603c:	jne    0x15f94
   16042:	mov    eax,DWORD PTR [edi+0x4]
   16045:	mov    eax,DWORD PTR [eax+0x4]
   16048:	pop    edi
   16049:	mov    DWORD PTR [eax+0x58],0x1
   16050:	mov    eax,DWORD PTR [ebp+0x8]
   16053:	pop    esi
   16054:	mov    DWORD PTR [eax],ebx
   16056:	pop    ebx
   16057:	pop    ebp
   16058:	ret    0x10
   1605b:	int3   
   1605c:	int3   
   1605d:	int3   
   1605e:	int3   
   1605f:	int3   
   16060:	mov    edi,edi
   16062:	push   ebp
   16063:	mov    ebp,esp
   16065:	push   ebx
   16066:	push   esi
   16067:	mov    esi,DWORD PTR [ebp+0x10]
   1606a:	push   edi
   1606b:	push   0x0
   1606d:	push   esi
   1606e:	mov    edi,ecx
   16070:	call   0x14492
   16075:	push   DWORD PTR [ebp+0x14]
   16078:	mov    ebx,eax
   1607a:	mov    eax,ds:0x782c0
   1607f:	mov    DWORD PTR [ebx],eax
   16081:	mov    eax,ds:0x782c0
   16086:	mov    DWORD PTR [ebx+0x8],eax
   16089:	lea    eax,[ebx+0xc]
   1608c:	push   eax
   1608d:	call   0x1451e
   16092:	inc    DWORD PTR [edi+0xc]
   16095:	cmp    esi,DWORD PTR [edi+0x4]
   16098:	je     0x160c2
   1609a:	mov    eax,DWORD PTR [ebp+0xc]
   1609d:	cmp    eax,DWORD PTR ds:0x782c0
   160a3:	jne    0x160c2
   160a5:	lea    eax,[esi+0xc]
   160a8:	push   eax
   160a9:	push   DWORD PTR [ebp+0x14]
   160ac:	call   0x197f6
   160b1:	test   al,al
   160b3:	jne    0x160c2
   160b5:	mov    DWORD PTR [esi+0x8],ebx
   160b8:	mov    eax,DWORD PTR [edi+0x4]
   160bb:	cmp    esi,DWORD PTR [eax+0x8]
   160be:	jne    0x160dc
   160c0:	jmp    0x160d1
   160c2:	mov    DWORD PTR [esi],ebx
   160c4:	mov    eax,DWORD PTR [edi+0x4]
   160c7:	cmp    esi,eax
   160c9:	jne    0x160d6
   160cb:	mov    DWORD PTR [eax+0x4],ebx
   160ce:	mov    eax,DWORD PTR [edi+0x4]
   160d1:	mov    DWORD PTR [eax+0x8],ebx
   160d4:	jmp    0x160dc
   160d6:	cmp    esi,DWORD PTR [eax]
   160d8:	jne    0x160dc
   160da:	mov    DWORD PTR [eax],ebx
   160dc:	mov    eax,DWORD PTR [edi+0x4]
   160df:	mov    esi,ebx
   160e1:	cmp    ebx,DWORD PTR [eax+0x4]
   160e4:	je     0x16198
   160ea:	mov    eax,DWORD PTR [esi+0x4]
   160ed:	xor    edx,edx
   160ef:	cmp    DWORD PTR [eax+0x1c],edx
   160f2:	jne    0x16198
   160f8:	mov    ecx,DWORD PTR [eax+0x4]
   160fb:	cmp    eax,DWORD PTR [ecx]
   160fd:	jne    0x16139
   160ff:	mov    ecx,DWORD PTR [ecx+0x8]
   16102:	cmp    DWORD PTR [ecx+0x1c],edx
   16105:	je     0x16140
   16107:	cmp    esi,DWORD PTR [eax+0x8]
   1610a:	jne    0x16116
   1610c:	mov    esi,eax
   1610e:	push   esi
   1610f:	mov    ecx,edi
   16111:	call   0x12f6e
   16116:	mov    eax,DWORD PTR [esi+0x4]
   16119:	mov    DWORD PTR [eax+0x1c],0x1
   16120:	mov    eax,DWORD PTR [esi+0x4]
   16123:	mov    eax,DWORD PTR [eax+0x4]
   16126:	and    DWORD PTR [eax+0x1c],0x0
   1612a:	mov    eax,DWORD PTR [esi+0x4]
   1612d:	push   DWORD PTR [eax+0x4]
   16130:	mov    ecx,edi
   16132:	call   0x12fbc
   16137:	jmp    0x1618c
   16139:	mov    ecx,DWORD PTR [ecx]
   1613b:	cmp    DWORD PTR [ecx+0x1c],edx
   1613e:	jne    0x1615d
   16140:	mov    edx,eax
   16142:	xor    eax,eax
   16144:	inc    eax
   16145:	mov    DWORD PTR [edx+0x1c],eax
   16148:	mov    DWORD PTR [ecx+0x1c],eax
   1614b:	mov    eax,DWORD PTR [esi+0x4]
   1614e:	mov    eax,DWORD PTR [eax+0x4]
   16151:	and    DWORD PTR [eax+0x1c],0x0
   16155:	mov    eax,DWORD PTR [esi+0x4]
   16158:	mov    esi,DWORD PTR [eax+0x4]
   1615b:	jmp    0x1618c
   1615d:	cmp    esi,DWORD PTR [eax]
   1615f:	jne    0x1616b
   16161:	mov    esi,eax
   16163:	push   esi
   16164:	mov    ecx,edi
   16166:	call   0x12fbc
   1616b:	mov    eax,DWORD PTR [esi+0x4]
   1616e:	mov    DWORD PTR [eax+0x1c],0x1
   16175:	mov    eax,DWORD PTR [esi+0x4]
   16178:	mov    eax,DWORD PTR [eax+0x4]
   1617b:	and    DWORD PTR [eax+0x1c],0x0
   1617f:	mov    eax,DWORD PTR [esi+0x4]
   16182:	push   DWORD PTR [eax+0x4]
   16185:	mov    ecx,edi
   16187:	call   0x12f6e
   1618c:	mov    eax,DWORD PTR [edi+0x4]
   1618f:	cmp    esi,DWORD PTR [eax+0x4]
   16192:	jne    0x160ea
   16198:	mov    eax,DWORD PTR [edi+0x4]
   1619b:	mov    eax,DWORD PTR [eax+0x4]
   1619e:	pop    edi
   1619f:	mov    DWORD PTR [eax+0x1c],0x1
   161a6:	mov    eax,DWORD PTR [ebp+0x8]
   161a9:	pop    esi
   161aa:	mov    DWORD PTR [eax],ebx
   161ac:	pop    ebx
   161ad:	pop    ebp
   161ae:	ret    0x10
   161b1:	int3   
   161b2:	int3   
   161b3:	int3   
   161b4:	int3   
   161b5:	int3   
   161b6:	mov    edi,edi
   161b8:	push   ebp
   161b9:	mov    ebp,esp
   161bb:	push   ebx
   161bc:	push   esi
   161bd:	mov    esi,DWORD PTR [ebp+0x10]
   161c0:	push   edi
   161c1:	push   0x0
   161c3:	push   esi
   161c4:	mov    edi,ecx
   161c6:	call   0x14492
   161cb:	push   DWORD PTR [ebp+0x14]
   161ce:	mov    ebx,eax
   161d0:	mov    eax,ds:0x782cc
   161d5:	mov    DWORD PTR [ebx],eax
   161d7:	mov    eax,ds:0x782cc
   161dc:	mov    DWORD PTR [ebx+0x8],eax
   161df:	lea    eax,[ebx+0xc]
   161e2:	push   eax
   161e3:	call   0x1453c
   161e8:	inc    DWORD PTR [edi+0xc]
   161eb:	cmp    esi,DWORD PTR [edi+0x4]
   161ee:	je     0x16218
   161f0:	mov    eax,DWORD PTR [ebp+0xc]
   161f3:	cmp    eax,DWORD PTR ds:0x782cc
   161f9:	jne    0x16218
   161fb:	lea    eax,[esi+0xc]
   161fe:	push   eax
   161ff:	push   DWORD PTR [ebp+0x14]
   16202:	call   0x19826
   16207:	test   al,al
   16209:	jne    0x16218
   1620b:	mov    DWORD PTR [esi+0x8],ebx
   1620e:	mov    eax,DWORD PTR [edi+0x4]
   16211:	cmp    esi,DWORD PTR [eax+0x8]
   16214:	jne    0x16232
   16216:	jmp    0x16227
   16218:	mov    DWORD PTR [esi],ebx
   1621a:	mov    eax,DWORD PTR [edi+0x4]
   1621d:	cmp    esi,eax
   1621f:	jne    0x1622c
   16221:	mov    DWORD PTR [eax+0x4],ebx
   16224:	mov    eax,DWORD PTR [edi+0x4]
   16227:	mov    DWORD PTR [eax+0x8],ebx
   1622a:	jmp    0x16232
   1622c:	cmp    esi,DWORD PTR [eax]
   1622e:	jne    0x16232
   16230:	mov    DWORD PTR [eax],ebx
   16232:	mov    eax,DWORD PTR [edi+0x4]
   16235:	mov    esi,ebx
   16237:	cmp    ebx,DWORD PTR [eax+0x4]
   1623a:	je     0x162ee
   16240:	mov    eax,DWORD PTR [esi+0x4]
   16243:	xor    edx,edx
   16245:	cmp    DWORD PTR [eax+0x1c],edx
   16248:	jne    0x162ee
   1624e:	mov    ecx,DWORD PTR [eax+0x4]
   16251:	cmp    eax,DWORD PTR [ecx]
   16253:	jne    0x1628f
   16255:	mov    ecx,DWORD PTR [ecx+0x8]
   16258:	cmp    DWORD PTR [ecx+0x1c],edx
   1625b:	je     0x16296
   1625d:	cmp    esi,DWORD PTR [eax+0x8]
   16260:	jne    0x1626c
   16262:	mov    esi,eax
   16264:	push   esi
   16265:	mov    ecx,edi
   16267:	call   0x13162
   1626c:	mov    eax,DWORD PTR [esi+0x4]
   1626f:	mov    DWORD PTR [eax+0x1c],0x1
   16276:	mov    eax,DWORD PTR [esi+0x4]
   16279:	mov    eax,DWORD PTR [eax+0x4]
   1627c:	and    DWORD PTR [eax+0x1c],0x0
   16280:	mov    eax,DWORD PTR [esi+0x4]
   16283:	push   DWORD PTR [eax+0x4]
   16286:	mov    ecx,edi
   16288:	call   0x131b0
   1628d:	jmp    0x162e2
   1628f:	mov    ecx,DWORD PTR [ecx]
   16291:	cmp    DWORD PTR [ecx+0x1c],edx
   16294:	jne    0x162b3
   16296:	mov    edx,eax
   16298:	xor    eax,eax
   1629a:	inc    eax
   1629b:	mov    DWORD PTR [edx+0x1c],eax
   1629e:	mov    DWORD PTR [ecx+0x1c],eax
   162a1:	mov    eax,DWORD PTR [esi+0x4]
   162a4:	mov    eax,DWORD PTR [eax+0x4]
   162a7:	and    DWORD PTR [eax+0x1c],0x0
   162ab:	mov    eax,DWORD PTR [esi+0x4]
   162ae:	mov    esi,DWORD PTR [eax+0x4]
   162b1:	jmp    0x162e2
   162b3:	cmp    esi,DWORD PTR [eax]
   162b5:	jne    0x162c1
   162b7:	mov    esi,eax
   162b9:	push   esi
   162ba:	mov    ecx,edi
   162bc:	call   0x131b0
   162c1:	mov    eax,DWORD PTR [esi+0x4]
   162c4:	mov    DWORD PTR [eax+0x1c],0x1
   162cb:	mov    eax,DWORD PTR [esi+0x4]
   162ce:	mov    eax,DWORD PTR [eax+0x4]
   162d1:	and    DWORD PTR [eax+0x1c],0x0
   162d5:	mov    eax,DWORD PTR [esi+0x4]
   162d8:	push   DWORD PTR [eax+0x4]
   162db:	mov    ecx,edi
   162dd:	call   0x13162
   162e2:	mov    eax,DWORD PTR [edi+0x4]
   162e5:	cmp    esi,DWORD PTR [eax+0x4]
   162e8:	jne    0x16240
   162ee:	mov    eax,DWORD PTR [edi+0x4]
   162f1:	mov    eax,DWORD PTR [eax+0x4]
   162f4:	pop    edi
   162f5:	mov    DWORD PTR [eax+0x1c],0x1
   162fc:	mov    eax,DWORD PTR [ebp+0x8]
   162ff:	pop    esi
   16300:	mov    DWORD PTR [eax],ebx
   16302:	pop    ebx
   16303:	pop    ebp
   16304:	ret    0x10
   16307:	int3   
   16308:	int3   
   16309:	int3   
   1630a:	int3   
   1630b:	int3   
   1630c:	mov    edi,edi
   1630e:	push   ebp
   1630f:	mov    ebp,esp
   16311:	push   esi
   16312:	push   edi
   16313:	mov    edi,DWORD PTR [ebp+0x8]
   16316:	mov    al,BYTE PTR [edi+0x8]
   16319:	mov    esi,ecx
   1631b:	mov    BYTE PTR [esi+0x8],al
   1631e:	call   0x149a6
   16323:	push   edi
   16324:	mov    ecx,esi
   16326:	call   0x156e2
   1632b:	pop    edi
   1632c:	mov    eax,esi
   1632e:	pop    esi
   1632f:	pop    ebp
   16330:	ret    0x4
   16333:	int3   
   16334:	int3   
   16335:	int3   
   16336:	int3   
   16337:	int3   
   16338:	mov    edi,edi
   1633a:	push   ebp
   1633b:	mov    ebp,esp
   1633d:	push   ecx
   1633e:	push   esi
   1633f:	mov    esi,ecx
   16341:	cmp    esi,DWORD PTR [ebp+0x8]
   16344:	je     0x16362
   16346:	mov    eax,DWORD PTR [esi+0x4]
   16349:	mov    ecx,DWORD PTR [eax]
   1634b:	push   eax
   1634c:	push   ecx
   1634d:	lea    eax,[ebp-0x4]
   16350:	push   eax
   16351:	mov    ecx,esi
   16353:	call   0x146d8
   16358:	push   DWORD PTR [ebp+0x8]
   1635b:	mov    ecx,esi
   1635d:	call   0x156e2
   16362:	mov    eax,esi
   16364:	pop    esi
   16365:	leave  
   16366:	ret    0x4
   16369:	int3   
   1636a:	int3   
   1636b:	int3   
   1636c:	int3   
   1636d:	int3   
   1636e:	mov    edi,edi
   16370:	push   ebp
   16371:	mov    ebp,esp
   16373:	push   esi
   16374:	push   edi
   16375:	xor    edi,edi
   16377:	push   edi
   16378:	push   edi
   16379:	push   edi
   1637a:	mov    esi,ecx
   1637c:	mov    eax,DWORD PTR [esi+0x10]
   1637f:	push   edi
   16380:	push   eax
   16381:	call   DWORD PTR ds:0x1f020
   16387:	test   eax,eax
   16389:	jl     0x163a0
   1638b:	lea    eax,[ebp+0x8]
   1638e:	push   eax
   1638f:	mov    ecx,esi
   16391:	call   0x1468e
   16396:	push   edi
   16397:	push   DWORD PTR [esi+0x10]
   1639a:	call   DWORD PTR ds:0x1f01c
   163a0:	pop    edi
   163a1:	pop    esi
   163a2:	pop    ebp
   163a3:	ret    0x4
   163a6:	int3   
   163a7:	int3   
   163a8:	int3   
   163a9:	int3   
   163aa:	int3   
   163ab:	int3   
   163ac:	mov    edi,edi
   163ae:	push   ebp
   163af:	mov    ebp,esp
   163b1:	sub    esp,0x40
   163b4:	test   BYTE PTR [ebp+0x8],0x20
   163b8:	je     0x1644f
   163be:	push   ebx
   163bf:	lea    ecx,[ebp-0x40]
   163c2:	call   0x138fa
   163c7:	mov    ecx,DWORD PTR ds:0x780e8
   163cd:	lea    eax,[ebp-0x40]
   163d0:	push   eax
   163d1:	push   DWORD PTR [ebp+0xc]
   163d4:	call   0x15962
   163d9:	test   al,al
   163db:	je     0x1644b
   163dd:	mov    ecx,DWORD PTR [ebp+0x10]
   163e0:	lea    eax,[ebp-0x38]
   163e3:	push   eax
   163e4:	call   0x12896
   163e9:	mov    ecx,DWORD PTR [ebp+0x14]
   163ec:	lea    eax,[ebp-0x30]
   163ef:	push   eax
   163f0:	call   0x12896
   163f5:	mov    ecx,DWORD PTR [ebp+0x18]
   163f8:	lea    eax,[ebp-0x28]
   163fb:	push   eax
   163fc:	call   0x12896
   16401:	mov    eax,DWORD PTR [ebp+0x20]
   16404:	mov    ecx,DWORD PTR [ebp-0x20]
   16407:	mov    DWORD PTR [eax],ecx
   16409:	mov    ecx,DWORD PTR [ebp+0x1c]
   1640c:	lea    eax,[ebp-0x8]
   1640f:	push   eax
   16410:	call   0x12896
   16415:	mov    eax,DWORD PTR [ebp+0x28]
   16418:	mov    ecx,DWORD PTR [ebp-0x18]
   1641b:	mov    DWORD PTR [eax],ecx
   1641d:	mov    ecx,DWORD PTR [ebp-0x14]
   16420:	mov    DWORD PTR [eax+0x4],ecx
   16423:	mov    eax,DWORD PTR [ebp+0x2c]
   16426:	mov    ecx,DWORD PTR [ebp-0x10]
   16429:	mov    DWORD PTR [eax],ecx
   1642b:	mov    ecx,DWORD PTR [ebp-0xc]
   1642e:	mov    DWORD PTR [eax+0x4],ecx
   16431:	mov    eax,DWORD PTR [ebp+0x24]
   16434:	mov    ecx,DWORD PTR [ebp-0x1c]
   16437:	mov    DWORD PTR [eax],ecx
   16439:	mov    bl,0x1
   1643b:	lea    ecx,[ebp-0x40]
   1643e:	call   0x11dac
   16443:	mov    al,bl
   16445:	pop    ebx
   16446:	jmp    0x164d2
   1644b:	xor    bl,bl
   1644d:	jmp    0x1643b
   1644f:	mov    ecx,DWORD PTR ds:0x780e0
   16455:	push   esi
   16456:	push   DWORD PTR [ebp+0xc]
   16459:	lea    eax,[ebp+0xc]
   1645c:	push   eax
   1645d:	call   0x13a02
   16462:	mov    esi,DWORD PTR [ebp+0xc]
   16465:	mov    eax,ds:0x780e0
   1646a:	cmp    esi,DWORD PTR [eax+0x4]
   1646d:	jne    0x16473
   1646f:	xor    al,al
   16471:	jmp    0x164d1
   16473:	mov    ecx,DWORD PTR [ebp+0x10]
   16476:	lea    eax,[esi+0x20]
   16479:	push   eax
   1647a:	call   0x12896
   1647f:	mov    ecx,DWORD PTR [ebp+0x14]
   16482:	lea    eax,[esi+0x28]
   16485:	push   eax
   16486:	call   0x12896
   1648b:	mov    ecx,DWORD PTR [ebp+0x18]
   1648e:	lea    eax,[esi+0x30]
   16491:	push   eax
   16492:	call   0x12896
   16497:	mov    ecx,DWORD PTR [ebp+0x1c]
   1649a:	lea    eax,[esi+0x50]
   1649d:	push   eax
   1649e:	call   0x12896
   164a3:	mov    eax,DWORD PTR [esi+0x38]
   164a6:	mov    ecx,DWORD PTR [ebp+0x20]
   164a9:	mov    DWORD PTR [ecx],eax
   164ab:	mov    ecx,DWORD PTR [esi+0x40]
   164ae:	mov    eax,DWORD PTR [ebp+0x28]
   164b1:	mov    DWORD PTR [eax],ecx
   164b3:	mov    ecx,DWORD PTR [esi+0x44]
   164b6:	mov    DWORD PTR [eax+0x4],ecx
   164b9:	mov    ecx,DWORD PTR [esi+0x48]
   164bc:	mov    eax,DWORD PTR [ebp+0x2c]
   164bf:	mov    DWORD PTR [eax],ecx
   164c1:	mov    ecx,DWORD PTR [esi+0x4c]
   164c4:	mov    DWORD PTR [eax+0x4],ecx
   164c7:	mov    eax,DWORD PTR [esi+0x3c]
   164ca:	mov    ecx,DWORD PTR [ebp+0x24]
   164cd:	mov    DWORD PTR [ecx],eax
   164cf:	mov    al,0x1
   164d1:	pop    esi
   164d2:	leave  
   164d3:	ret    0x28
   164d6:	int3   
   164d7:	int3   
   164d8:	int3   
   164d9:	int3   
   164da:	int3   
   164db:	int3   
   164dc:	push   0x44
   164de:	push   0x77298
   164e3:	call   0x1db08
   164e8:	xor    esi,esi
   164ea:	push   esi
   164eb:	push   esi
   164ec:	push   esi
   164ed:	push   esi
   164ee:	push   0x77758
   164f3:	call   DWORD PTR ds:0x1f020
   164f9:	cmp    eax,esi
   164fb:	jl     0x1667d
   16501:	mov    DWORD PTR [ebp-0x4],esi
   16504:	or     edi,0xffffffff
   16507:	push   edi
   16508:	mov    esi,0x1df18
   1650d:	push   esi
   1650e:	lea    ecx,[ebp-0x44]
   16511:	call   0x129d2
   16516:	push   edi
   16517:	push   esi
   16518:	lea    ecx,[ebp-0x3c]
   1651b:	call   0x129d2
   16520:	push   edi
   16521:	push   esi
   16522:	lea    ecx,[ebp-0x34]
   16525:	call   0x129d2
   1652a:	push   edi
   1652b:	push   esi
   1652c:	lea    ecx,[ebp-0x2c]
   1652f:	call   0x129d2
   16534:	lea    eax,[ebp-0x54]
   16537:	push   eax
   16538:	lea    eax,[ebp-0x4c]
   1653b:	push   eax
   1653c:	lea    eax,[ebp-0x20]
   1653f:	push   eax
   16540:	lea    eax,[ebp-0x1c]
   16543:	push   eax
   16544:	lea    eax,[ebp-0x2c]
   16547:	push   eax
   16548:	lea    eax,[ebp-0x34]
   1654b:	push   eax
   1654c:	lea    eax,[ebp-0x3c]
   1654f:	push   eax
   16550:	lea    eax,[ebp-0x44]
   16553:	push   eax
   16554:	mov    edi,DWORD PTR [ebp+0x8]
   16557:	push   edi
   16558:	mov    esi,DWORD PTR [ebp+0xc]
   1655b:	push   DWORD PTR [esi+0x4]
   1655e:	call   0x163ac
   16563:	test   al,al
   16565:	jne    0x16573
   16567:	mov    DWORD PTR [esi+0x8],0x1
   1656e:	jmp    0x16633
   16573:	mov    ecx,DWORD PTR [edi+0x4]
   16576:	mov    eax,DWORD PTR [ebp-0x40]
   16579:	lea    edx,[eax+ecx*1+0x2]
   1657d:	mov    eax,DWORD PTR [ebp-0x38]
   16580:	lea    edi,[eax+edx*1+0x1]
   16584:	mov    eax,DWORD PTR [ebp-0x30]
   16587:	lea    eax,[eax+edi*1+0x1]
   1658b:	mov    DWORD PTR [ebp-0x24],eax
   1658e:	mov    ebx,DWORD PTR [ebp-0x28]
   16591:	lea    eax,[ebx+eax*1+0x1]
   16595:	cmp    eax,DWORD PTR [esi]
   16597:	jbe    0x165a7
   16599:	mov    DWORD PTR [esi],eax
   1659b:	mov    DWORD PTR [esi+0x8],0x2
   165a2:	jmp    0x16633
   165a7:	and    DWORD PTR [esi+0x8],0x0
   165ab:	mov    eax,DWORD PTR [ebp-0x1c]
   165ae:	mov    DWORD PTR [esi+0xc],eax
   165b1:	mov    eax,DWORD PTR [ebp-0x4c]
   165b4:	mov    DWORD PTR [esi+0x18],eax
   165b7:	mov    eax,DWORD PTR [ebp-0x48]
   165ba:	mov    DWORD PTR [esi+0x1c],eax
   165bd:	mov    eax,DWORD PTR [ebp-0x54]
   165c0:	mov    DWORD PTR [esi+0x20],eax
   165c3:	mov    eax,DWORD PTR [ebp-0x50]
   165c6:	mov    DWORD PTR [esi+0x24],eax
   165c9:	mov    eax,DWORD PTR [ebp-0x20]
   165cc:	mov    DWORD PTR [esi+0x10],eax
   165cf:	mov    eax,DWORD PTR [ebp+0x8]
   165d2:	mov    eax,DWORD PTR [eax]
   165d4:	mov    DWORD PTR [ebp-0x1c],eax
   165d7:	lea    eax,[esi+0x28]
   165da:	mov    ebx,DWORD PTR [ebp-0x1c]
   165dd:	mov    bl,BYTE PTR [ebx]
   165df:	mov    BYTE PTR [ebp+0xb],bl
   165e2:	mov    BYTE PTR [eax],bl
   165e4:	inc    DWORD PTR [ebp-0x1c]
   165e7:	inc    eax
   165e8:	test   bl,bl
   165ea:	jne    0x165da
   165ec:	mov    ebx,DWORD PTR [ebp-0x44]
   165ef:	lea    ecx,[ecx+esi*1+0x29]
   165f3:	mov    al,BYTE PTR [ebx]
   165f5:	mov    BYTE PTR [ecx],al
   165f7:	inc    ebx
   165f8:	inc    ecx
   165f9:	test   al,al
   165fb:	jne    0x165f3
   165fd:	mov    ecx,DWORD PTR [ebp-0x3c]
   16600:	lea    edx,[edx+esi*1+0x28]
   16604:	mov    al,BYTE PTR [ecx]
   16606:	mov    BYTE PTR [edx],al
   16608:	inc    ecx
   16609:	inc    edx
   1660a:	test   al,al
   1660c:	jne    0x16604
   1660e:	mov    ecx,DWORD PTR [ebp-0x34]
   16611:	lea    edi,[edi+esi*1+0x28]
   16615:	mov    al,BYTE PTR [ecx]
   16617:	mov    BYTE PTR [edi],al
   16619:	inc    ecx
   1661a:	inc    edi
   1661b:	test   al,al
   1661d:	jne    0x16615
   1661f:	mov    ecx,DWORD PTR [ebp-0x2c]
   16622:	mov    eax,DWORD PTR [ebp-0x24]
   16625:	lea    esi,[eax+esi*1+0x28]
   16629:	mov    al,BYTE PTR [ecx]
   1662b:	mov    BYTE PTR [esi],al
   1662d:	inc    ecx
   1662e:	inc    esi
   1662f:	test   al,al
   16631:	jne    0x16629
   16633:	push   DWORD PTR [ebp-0x2c]
   16636:	call   0x1da56
   1663b:	push   DWORD PTR [ebp-0x34]
   1663e:	call   0x1da56
   16643:	push   DWORD PTR [ebp-0x3c]
   16646:	call   0x1da56
   1664b:	push   DWORD PTR [ebp-0x44]
   1664e:	call   0x1da56
   16653:	add    esp,0x10
   16656:	jmp    0x16669
   16658:	xor    eax,eax
   1665a:	inc    eax
   1665b:	ret    
   1665c:	mov    esp,DWORD PTR [ebp-0x18]
   1665f:	mov    eax,DWORD PTR [ebp+0xc]
   16662:	mov    DWORD PTR [eax+0x8],0x4
   16669:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16670:	push   0x0
   16672:	push   0x77758
   16677:	call   DWORD PTR ds:0x1f01c
   1667d:	call   0x1db4d
   16682:	ret    0x8
   16685:	int3   
   16686:	int3   
   16687:	int3   
   16688:	int3   
   16689:	int3   
   1668a:	mov    edi,edi
   1668c:	push   esi
   1668d:	mov    esi,ecx
   1668f:	mov    BYTE PTR [esi+0x8],0x0
   16693:	call   0x148e2
   16698:	mov    eax,esi
   1669a:	pop    esi
   1669b:	ret    0x8
   1669e:	int3   
   1669f:	int3   
   166a0:	int3   
   166a1:	int3   
   166a2:	int3   
   166a3:	int3   
   166a4:	mov    edi,edi
   166a6:	push   ebp
   166a7:	mov    ebp,esp
   166a9:	push   ecx
   166aa:	push   ecx
   166ab:	push   DWORD PTR [ebp+0xc]
   166ae:	lea    eax,[ebp-0x8]
   166b1:	push   eax
   166b2:	call   0x15a72
   166b7:	mov    eax,DWORD PTR [ebp+0x8]
   166ba:	mov    ecx,DWORD PTR [ebp-0x8]
   166bd:	mov    DWORD PTR [eax],ecx
   166bf:	mov    cl,BYTE PTR [ebp-0x4]
   166c2:	mov    BYTE PTR [eax+0x4],cl
   166c5:	leave  
   166c6:	ret    0x8
   166c9:	int3   
   166ca:	int3   
   166cb:	int3   
   166cc:	int3   
   166cd:	int3   
   166ce:	mov    edi,edi
   166d0:	push   ebp
   166d1:	mov    ebp,esp
   166d3:	push   ecx
   166d4:	push   esi
   166d5:	mov    esi,ecx
   166d7:	mov    eax,DWORD PTR [esi+0x4]
   166da:	mov    ecx,DWORD PTR [eax]
   166dc:	push   eax
   166dd:	push   ecx
   166de:	lea    eax,[ebp-0x4]
   166e1:	push   eax
   166e2:	mov    ecx,esi
   166e4:	call   0x15b0a
   166e9:	push   DWORD PTR [esi+0x4]
   166ec:	call   0x1da56
   166f1:	xor    eax,eax
   166f3:	mov    DWORD PTR [esi+0x4],eax
   166f6:	mov    DWORD PTR [esi+0xc],eax
   166f9:	dec    DWORD PTR ds:0x78424
   166ff:	pop    ecx
   16700:	pop    esi
   16701:	jne    0x16719
   16703:	mov    ecx,DWORD PTR ds:0x782b8
   16709:	mov    ds:0x782b8,eax
   1670e:	cmp    ecx,eax
   16710:	je     0x16719
   16712:	push   ecx
   16713:	call   0x1da56
   16718:	pop    ecx
   16719:	leave  
   1671a:	ret    
   1671b:	int3   
   1671c:	int3   
   1671d:	int3   
   1671e:	int3   
   1671f:	int3   
   16720:	mov    edi,edi
   16722:	push   ebp
   16723:	mov    ebp,esp
   16725:	push   ecx
   16726:	push   ecx
   16727:	push   DWORD PTR [ebp+0xc]
   1672a:	lea    eax,[ebp-0x8]
   1672d:	push   eax
   1672e:	call   0x15b88
   16733:	mov    eax,DWORD PTR [ebp+0x8]
   16736:	mov    ecx,DWORD PTR [ebp-0x8]
   16739:	mov    DWORD PTR [eax],ecx
   1673b:	mov    cl,BYTE PTR [ebp-0x4]
   1673e:	mov    BYTE PTR [eax+0x4],cl
   16741:	leave  
   16742:	ret    0x8
   16745:	int3   
   16746:	int3   
   16747:	int3   
   16748:	int3   
   16749:	int3   
   1674a:	mov    edi,edi
   1674c:	push   ebp
   1674d:	mov    ebp,esp
   1674f:	push   ecx
   16750:	mov    eax,DWORD PTR [ecx+0x4]
   16753:	mov    edx,DWORD PTR [eax]
   16755:	push   eax
   16756:	push   edx
   16757:	lea    eax,[ebp-0x4]
   1675a:	push   eax
   1675b:	call   0x15c20
   16760:	leave  
   16761:	ret    
   16762:	int3   
   16763:	int3   
   16764:	int3   
   16765:	int3   
   16766:	int3   
   16767:	int3   
   16768:	mov    edi,edi
   1676a:	push   ebp
   1676b:	mov    ebp,esp
   1676d:	push   ecx
   1676e:	push   ecx
   1676f:	push   DWORD PTR [ebp+0xc]
   16772:	lea    eax,[ebp-0x8]
   16775:	push   eax
   16776:	call   0x15c9e
   1677b:	mov    eax,DWORD PTR [ebp+0x8]
   1677e:	mov    ecx,DWORD PTR [ebp-0x8]
   16781:	mov    DWORD PTR [eax],ecx
   16783:	mov    cl,BYTE PTR [ebp-0x4]
   16786:	mov    BYTE PTR [eax+0x4],cl
   16789:	leave  
   1678a:	ret    0x8
   1678d:	int3   
   1678e:	int3   
   1678f:	int3   
   16790:	int3   
   16791:	int3   
   16792:	mov    edi,edi
   16794:	push   ebp
   16795:	mov    ebp,esp
   16797:	push   ecx
   16798:	push   ecx
   16799:	push   esi
   1679a:	push   DWORD PTR [ebp+0x8]
   1679d:	lea    eax,[ebp-0x8]
   167a0:	push   eax
   167a1:	mov    esi,ecx
   167a3:	call   0x13e52
   167a8:	and    DWORD PTR [ebp+0x8],0x0
   167ac:	lea    eax,[ebp+0x8]
   167af:	push   eax
   167b0:	push   DWORD PTR [ebp-0x4]
   167b3:	push   DWORD PTR [ebp-0x8]
   167b6:	call   0x1379e
   167bb:	add    esp,0xc
   167be:	push   DWORD PTR [ebp-0x4]
   167c1:	lea    eax,[ebp-0x4]
   167c4:	push   DWORD PTR [ebp-0x8]
   167c7:	mov    ecx,esi
   167c9:	push   eax
   167ca:	call   0x15d36
   167cf:	mov    eax,DWORD PTR [ebp+0x8]
   167d2:	pop    esi
   167d3:	leave  
   167d4:	ret    0x4
   167d7:	int3   
   167d8:	int3   
   167d9:	int3   
   167da:	int3   
   167db:	int3   
   167dc:	mov    edi,edi
   167de:	push   ebp
   167df:	mov    ebp,esp
   167e1:	push   ecx
   167e2:	mov    eax,DWORD PTR [ecx+0x4]
   167e5:	mov    edx,DWORD PTR [eax]
   167e7:	push   eax
   167e8:	push   edx
   167e9:	lea    eax,[ebp-0x4]
   167ec:	push   eax
   167ed:	call   0x15d36
   167f2:	leave  
   167f3:	ret    
   167f4:	int3   
   167f5:	int3   
   167f6:	int3   
   167f7:	int3   
   167f8:	int3   
   167f9:	int3   
   167fa:	mov    edi,edi
   167fc:	push   ebp
   167fd:	mov    ebp,esp
   167ff:	push   ecx
   16800:	push   ebx
   16801:	push   esi
   16802:	push   edi
   16803:	mov    edi,ecx
   16805:	mov    eax,DWORD PTR [edi+0x4]
   16808:	mov    esi,DWORD PTR [eax+0x4]
   1680b:	mov    ebx,eax
   1680d:	mov    al,0x1
   1680f:	jmp    0x1682a
   16811:	lea    eax,[esi+0x10]
   16814:	push   eax
   16815:	push   DWORD PTR [ebp+0xc]
   16818:	mov    ebx,esi
   1681a:	call   0x197f6
   1681f:	test   al,al
   16821:	je     0x16827
   16823:	mov    esi,DWORD PTR [esi]
   16825:	jmp    0x1682a
   16827:	mov    esi,DWORD PTR [esi+0x8]
   1682a:	cmp    esi,DWORD PTR ds:0x782b8
   16830:	jne    0x16811
   16832:	cmp    BYTE PTR [edi+0x8],0x0
   16836:	je     0x16853
   16838:	push   DWORD PTR [ebp+0xc]
   1683b:	lea    eax,[ebp+0xc]
   1683e:	push   ebx
   1683f:	push   esi
   16840:	push   eax
   16841:	mov    ecx,edi
   16843:	call   0x15db4
   16848:	mov    ecx,DWORD PTR [eax]
   1684a:	mov    eax,DWORD PTR [ebp+0x8]
   1684d:	mov    BYTE PTR [eax+0x4],0x1
   16851:	jmp    0x16886
   16853:	mov    DWORD PTR [ebp-0x4],ebx
   16856:	test   al,al
   16858:	je     0x16869
   1685a:	mov    eax,DWORD PTR [edi+0x4]
   1685d:	cmp    ebx,DWORD PTR [eax]
   1685f:	je     0x16838
   16861:	lea    ecx,[ebp-0x4]
   16864:	call   0x113be
   16869:	push   DWORD PTR [ebp+0xc]
   1686c:	mov    eax,DWORD PTR [ebp-0x4]
   1686f:	add    eax,0x10
   16872:	push   eax
   16873:	call   0x197f6
   16878:	test   al,al
   1687a:	jne    0x16838
   1687c:	mov    eax,DWORD PTR [ebp+0x8]
   1687f:	mov    ecx,DWORD PTR [ebp-0x4]
   16882:	mov    BYTE PTR [eax+0x4],0x0
   16886:	pop    edi
   16887:	pop    esi
   16888:	mov    DWORD PTR [eax],ecx
   1688a:	pop    ebx
   1688b:	leave  
   1688c:	ret    0x8
   1688f:	int3   
   16890:	int3   
   16891:	int3   
   16892:	int3   
   16893:	int3   
   16894:	mov    edi,edi
   16896:	push   ebp
   16897:	mov    ebp,esp
   16899:	push   ecx
   1689a:	push   ebx
   1689b:	push   esi
   1689c:	push   edi
   1689d:	mov    edi,ecx
   1689f:	mov    eax,DWORD PTR [edi+0x4]
   168a2:	mov    esi,DWORD PTR [eax+0x4]
   168a5:	mov    ebx,eax
   168a7:	mov    al,0x1
   168a9:	jmp    0x168c4
   168ab:	lea    eax,[esi+0x10]
   168ae:	push   eax
   168af:	push   DWORD PTR [ebp+0xc]
   168b2:	mov    ebx,esi
   168b4:	call   0x197f6
   168b9:	test   al,al
   168bb:	je     0x168c1
   168bd:	mov    esi,DWORD PTR [esi]
   168bf:	jmp    0x168c4
   168c1:	mov    esi,DWORD PTR [esi+0x8]
   168c4:	cmp    esi,DWORD PTR ds:0x782bc
   168ca:	jne    0x168ab
   168cc:	cmp    BYTE PTR [edi+0x8],0x0
   168d0:	je     0x168ed
   168d2:	push   DWORD PTR [ebp+0xc]
   168d5:	lea    eax,[ebp+0xc]
   168d8:	push   ebx
   168d9:	push   esi
   168da:	push   eax
   168db:	mov    ecx,edi
   168dd:	call   0x15f0a
   168e2:	mov    ecx,DWORD PTR [eax]
   168e4:	mov    eax,DWORD PTR [ebp+0x8]
   168e7:	mov    BYTE PTR [eax+0x4],0x1
   168eb:	jmp    0x16920
   168ed:	mov    DWORD PTR [ebp-0x4],ebx
   168f0:	test   al,al
   168f2:	je     0x16903
   168f4:	mov    eax,DWORD PTR [edi+0x4]
   168f7:	cmp    ebx,DWORD PTR [eax]
   168f9:	je     0x168d2
   168fb:	lea    ecx,[ebp-0x4]
   168fe:	call   0x11276
   16903:	push   DWORD PTR [ebp+0xc]
   16906:	mov    eax,DWORD PTR [ebp-0x4]
   16909:	add    eax,0x10
   1690c:	push   eax
   1690d:	call   0x197f6
   16912:	test   al,al
   16914:	jne    0x168d2
   16916:	mov    eax,DWORD PTR [ebp+0x8]
   16919:	mov    ecx,DWORD PTR [ebp-0x4]
   1691c:	mov    BYTE PTR [eax+0x4],0x0
   16920:	pop    edi
   16921:	pop    esi
   16922:	mov    DWORD PTR [eax],ecx
   16924:	pop    ebx
   16925:	leave  
   16926:	ret    0x8
   16929:	int3   
   1692a:	int3   
   1692b:	int3   
   1692c:	int3   
   1692d:	int3   
   1692e:	mov    edi,edi
   16930:	push   ebp
   16931:	mov    ebp,esp
   16933:	push   ecx
   16934:	push   ebx
   16935:	push   esi
   16936:	push   edi
   16937:	mov    edi,ecx
   16939:	mov    eax,DWORD PTR [edi+0x4]
   1693c:	mov    esi,DWORD PTR [eax+0x4]
   1693f:	mov    ebx,eax
   16941:	mov    al,0x1
   16943:	jmp    0x1695e
   16945:	lea    eax,[esi+0xc]
   16948:	push   eax
   16949:	push   DWORD PTR [ebp+0xc]
   1694c:	mov    ebx,esi
   1694e:	call   0x197f6
   16953:	test   al,al
   16955:	je     0x1695b
   16957:	mov    esi,DWORD PTR [esi]
   16959:	jmp    0x1695e
   1695b:	mov    esi,DWORD PTR [esi+0x8]
   1695e:	cmp    esi,DWORD PTR ds:0x782c0
   16964:	jne    0x16945
   16966:	cmp    BYTE PTR [edi+0x8],0x0
   1696a:	je     0x16987
   1696c:	push   DWORD PTR [ebp+0xc]
   1696f:	lea    eax,[ebp+0xc]
   16972:	push   ebx
   16973:	push   esi
   16974:	push   eax
   16975:	mov    ecx,edi
   16977:	call   0x16060
   1697c:	mov    ecx,DWORD PTR [eax]
   1697e:	mov    eax,DWORD PTR [ebp+0x8]
   16981:	mov    BYTE PTR [eax+0x4],0x1
   16985:	jmp    0x169ba
   16987:	mov    DWORD PTR [ebp-0x4],ebx
   1698a:	test   al,al
   1698c:	je     0x1699d
   1698e:	mov    eax,DWORD PTR [edi+0x4]
   16991:	cmp    ebx,DWORD PTR [eax]
   16993:	je     0x1696c
   16995:	lea    ecx,[ebp-0x4]
   16998:	call   0x112fa
   1699d:	push   DWORD PTR [ebp+0xc]
   169a0:	mov    eax,DWORD PTR [ebp-0x4]
   169a3:	add    eax,0xc
   169a6:	push   eax
   169a7:	call   0x197f6
   169ac:	test   al,al
   169ae:	jne    0x1696c
   169b0:	mov    eax,DWORD PTR [ebp+0x8]
   169b3:	mov    ecx,DWORD PTR [ebp-0x4]
   169b6:	mov    BYTE PTR [eax+0x4],0x0
   169ba:	pop    edi
   169bb:	pop    esi
   169bc:	mov    DWORD PTR [eax],ecx
   169be:	pop    ebx
   169bf:	leave  
   169c0:	ret    0x8
   169c3:	int3   
   169c4:	int3   
   169c5:	int3   
   169c6:	int3   
   169c7:	int3   
   169c8:	mov    edi,edi
   169ca:	push   ebp
   169cb:	mov    ebp,esp
   169cd:	push   ecx
   169ce:	push   ebx
   169cf:	push   esi
   169d0:	push   edi
   169d1:	mov    edi,ecx
   169d3:	mov    eax,DWORD PTR [edi+0x4]
   169d6:	mov    esi,DWORD PTR [eax+0x4]
   169d9:	mov    ebx,eax
   169db:	mov    al,0x1
   169dd:	jmp    0x169f8
   169df:	lea    eax,[esi+0xc]
   169e2:	push   eax
   169e3:	push   DWORD PTR [ebp+0xc]
   169e6:	mov    ebx,esi
   169e8:	call   0x19826
   169ed:	test   al,al
   169ef:	je     0x169f5
   169f1:	mov    esi,DWORD PTR [esi]
   169f3:	jmp    0x169f8
   169f5:	mov    esi,DWORD PTR [esi+0x8]
   169f8:	cmp    esi,DWORD PTR ds:0x782cc
   169fe:	jne    0x169df
   16a00:	cmp    BYTE PTR [edi+0x8],0x0
   16a04:	je     0x16a21
   16a06:	push   DWORD PTR [ebp+0xc]
   16a09:	lea    eax,[ebp+0xc]
   16a0c:	push   ebx
   16a0d:	push   esi
   16a0e:	push   eax
   16a0f:	mov    ecx,edi
   16a11:	call   0x161b6
   16a16:	mov    ecx,DWORD PTR [eax]
   16a18:	mov    eax,DWORD PTR [ebp+0x8]
   16a1b:	mov    BYTE PTR [eax+0x4],0x1
   16a1f:	jmp    0x16a54
   16a21:	mov    DWORD PTR [ebp-0x4],ebx
   16a24:	test   al,al
   16a26:	je     0x16a37
   16a28:	mov    eax,DWORD PTR [edi+0x4]
   16a2b:	cmp    ebx,DWORD PTR [eax]
   16a2d:	je     0x16a06
   16a2f:	lea    ecx,[ebp-0x4]
   16a32:	call   0x13200
   16a37:	push   DWORD PTR [ebp+0xc]
   16a3a:	mov    eax,DWORD PTR [ebp-0x4]
   16a3d:	add    eax,0xc
   16a40:	push   eax
   16a41:	call   0x19826
   16a46:	test   al,al
   16a48:	jne    0x16a06
   16a4a:	mov    eax,DWORD PTR [ebp+0x8]
   16a4d:	mov    ecx,DWORD PTR [ebp-0x4]
   16a50:	mov    BYTE PTR [eax+0x4],0x0
   16a54:	pop    edi
   16a55:	pop    esi
   16a56:	mov    DWORD PTR [eax],ecx
   16a58:	pop    ebx
   16a59:	leave  
   16a5a:	ret    0x8
   16a5d:	int3   
   16a5e:	int3   
   16a5f:	int3   
   16a60:	int3   
   16a61:	int3   
   16a62:	mov    edi,edi
   16a64:	push   ebp
   16a65:	mov    ebp,esp
   16a67:	sub    esp,0x10
   16a6a:	push   DWORD PTR [ebp+0x8]
   16a6d:	lea    ecx,[ebp-0x10]
   16a70:	call   0x1630c
   16a75:	push   DWORD PTR [ebp+0xc]
   16a78:	mov    ecx,DWORD PTR [ebp+0x8]
   16a7b:	call   0x16338
   16a80:	mov    ecx,DWORD PTR [ebp+0xc]
   16a83:	lea    eax,[ebp-0x10]
   16a86:	push   eax
   16a87:	call   0x16338
   16a8c:	lea    ecx,[ebp-0x10]
   16a8f:	call   0x159a0
   16a94:	leave  
   16a95:	ret    0x8
   16a98:	int3   
   16a99:	int3   
   16a9a:	int3   
   16a9b:	int3   
   16a9c:	int3   
   16a9d:	int3   
   16a9e:	mov    edi,edi
   16aa0:	push   esi
   16aa1:	mov    esi,ecx
   16aa3:	push   edi
   16aa4:	mov    BYTE PTR [esi+0x8],0x0
   16aa8:	call   0x147a0
   16aad:	lea    edi,[esi+0x10]
   16ab0:	mov    ecx,edi
   16ab2:	call   0x128e0
   16ab7:	mov    edi,DWORD PTR [edi]
   16ab9:	push   0x0
   16abb:	push   edi
   16abc:	call   0x11b22
   16ac1:	call   eax
   16ac3:	pop    edi
   16ac4:	mov    eax,esi
   16ac6:	pop    esi
   16ac7:	ret    
   16ac8:	int3   
   16ac9:	int3   
   16aca:	int3   
   16acb:	int3   
   16acc:	int3   
   16acd:	int3   
   16ace:	mov    edi,edi
   16ad0:	push   ebp
   16ad1:	mov    ebp,esp
   16ad3:	sub    esp,0x10
   16ad6:	mov    eax,DWORD PTR [ebp+0x8]
   16ad9:	mov    eax,DWORD PTR [eax]
   16adb:	and    DWORD PTR [ebp-0x4],0x0
   16adf:	mov    DWORD PTR [ebp-0x8],eax
   16ae2:	lea    eax,[ebp-0x8]
   16ae5:	push   eax
   16ae6:	lea    eax,[ebp-0x10]
   16ae9:	push   eax
   16aea:	call   0x16720
   16aef:	mov    eax,DWORD PTR [eax]
   16af1:	add    eax,0x10
   16af4:	leave  
   16af5:	ret    0x4
   16af8:	int3   
   16af9:	int3   
   16afa:	int3   
   16afb:	int3   
   16afc:	int3   
   16afd:	int3   
   16afe:	mov    edi,edi
   16b00:	push   esi
   16b01:	mov    esi,ecx
   16b03:	mov    BYTE PTR [esi+0x8],0x0
   16b07:	call   0x14802
   16b0c:	mov    eax,esi
   16b0e:	pop    esi
   16b0f:	ret    0x8
   16b12:	int3   
   16b13:	int3   
   16b14:	int3   
   16b15:	int3   
   16b16:	int3   
   16b17:	int3   
   16b18:	mov    edi,edi
   16b1a:	push   esi
   16b1b:	mov    esi,ecx
   16b1d:	mov    BYTE PTR [esi+0x8],0x0
   16b21:	call   0x14944
   16b26:	mov    eax,esi
   16b28:	pop    esi
   16b29:	ret    0x8
   16b2c:	int3   
   16b2d:	int3   
   16b2e:	int3   
   16b2f:	int3   
   16b30:	int3   
   16b31:	int3   
   16b32:	mov    edi,edi
   16b34:	push   ebp
   16b35:	mov    ebp,esp
   16b37:	sub    esp,0x14
   16b3a:	and    DWORD PTR [ebp-0x4],0x0
   16b3e:	push   esi
   16b3f:	lea    eax,[ebp-0x4]
   16b42:	push   eax
   16b43:	push   DWORD PTR [ebp+0x8]
   16b46:	mov    esi,ecx
   16b48:	lea    ecx,[ebp-0xc]
   16b4b:	call   0x12a8c
   16b50:	push   eax
   16b51:	lea    eax,[ebp-0x14]
   16b54:	push   eax
   16b55:	mov    ecx,esi
   16b57:	call   0x16768
   16b5c:	mov    ecx,DWORD PTR [ebp-0x8]
   16b5f:	mov    esi,DWORD PTR [eax]
   16b61:	test   ecx,ecx
   16b63:	je     0x16b6a
   16b65:	call   0x10990
   16b6a:	lea    eax,[esi+0x10]
   16b6d:	pop    esi
   16b6e:	leave  
   16b6f:	ret    0x4
   16b72:	int3   
   16b73:	int3   
   16b74:	int3   
   16b75:	int3   
   16b76:	int3   
   16b77:	int3   
   16b78:	mov    edi,edi
   16b7a:	push   ebp
   16b7b:	mov    ebp,esp
   16b7d:	push   ecx
   16b7e:	push   ecx
   16b7f:	push   DWORD PTR [ebp+0xc]
   16b82:	lea    eax,[ebp-0x8]
   16b85:	push   eax
   16b86:	call   0x167fa
   16b8b:	mov    eax,DWORD PTR [ebp+0x8]
   16b8e:	mov    ecx,DWORD PTR [ebp-0x8]
   16b91:	mov    DWORD PTR [eax],ecx
   16b93:	mov    cl,BYTE PTR [ebp-0x4]
   16b96:	mov    BYTE PTR [eax+0x4],cl
   16b99:	leave  
   16b9a:	ret    0x8
   16b9d:	int3   
   16b9e:	int3   
   16b9f:	int3   
   16ba0:	int3   
   16ba1:	int3   
   16ba2:	mov    edi,edi
   16ba4:	push   ebp
   16ba5:	mov    ebp,esp
   16ba7:	push   ecx
   16ba8:	push   ecx
   16ba9:	push   DWORD PTR [ebp+0xc]
   16bac:	lea    eax,[ebp-0x8]
   16baf:	push   eax
   16bb0:	call   0x16894
   16bb5:	mov    eax,DWORD PTR [ebp+0x8]
   16bb8:	mov    ecx,DWORD PTR [ebp-0x8]
   16bbb:	mov    DWORD PTR [eax],ecx
   16bbd:	mov    cl,BYTE PTR [ebp-0x4]
   16bc0:	mov    BYTE PTR [eax+0x4],cl
   16bc3:	leave  
   16bc4:	ret    0x8
   16bc7:	int3   
   16bc8:	int3   
   16bc9:	int3   
   16bca:	int3   
   16bcb:	int3   
   16bcc:	mov    edi,edi
   16bce:	push   ebp
   16bcf:	mov    ebp,esp
   16bd1:	push   ecx
   16bd2:	push   ecx
   16bd3:	push   DWORD PTR [ebp+0xc]
   16bd6:	lea    eax,[ebp-0x8]
   16bd9:	push   eax
   16bda:	call   0x1692e
   16bdf:	mov    eax,DWORD PTR [ebp+0x8]
   16be2:	mov    ecx,DWORD PTR [ebp-0x8]
   16be5:	mov    DWORD PTR [eax],ecx
   16be7:	mov    cl,BYTE PTR [ebp-0x4]
   16bea:	mov    BYTE PTR [eax+0x4],cl
   16bed:	leave  
   16bee:	ret    0x8
   16bf1:	int3   
   16bf2:	int3   
   16bf3:	int3   
   16bf4:	int3   
   16bf5:	int3   
   16bf6:	mov    edi,edi
   16bf8:	push   ebp
   16bf9:	mov    ebp,esp
   16bfb:	push   ecx
   16bfc:	push   ecx
   16bfd:	push   DWORD PTR [ebp+0xc]
   16c00:	lea    eax,[ebp-0x8]
   16c03:	push   eax
   16c04:	call   0x169c8
   16c09:	mov    eax,DWORD PTR [ebp+0x8]
   16c0c:	mov    ecx,DWORD PTR [ebp-0x8]
   16c0f:	mov    DWORD PTR [eax],ecx
   16c11:	mov    cl,BYTE PTR [ebp-0x4]
   16c14:	mov    BYTE PTR [eax+0x4],cl
   16c17:	leave  
   16c18:	ret    0x8
   16c1b:	int3   
   16c1c:	int3   
   16c1d:	int3   
   16c1e:	int3   
   16c1f:	int3   
   16c20:	mov    edi,edi
   16c22:	push   ebp
   16c23:	mov    ebp,esp
   16c25:	push   esi
   16c26:	push   edi
   16c27:	xor    edi,edi
   16c29:	push   edi
   16c2a:	push   edi
   16c2b:	push   edi
   16c2c:	mov    esi,ecx
   16c2e:	mov    eax,DWORD PTR [esi+0x10]
   16c31:	push   edi
   16c32:	push   eax
   16c33:	call   DWORD PTR ds:0x1f020
   16c39:	test   eax,eax
   16c3b:	jl     0x16c57
   16c3d:	lea    eax,[ebp+0x8]
   16c40:	push   eax
   16c41:	mov    ecx,esi
   16c43:	call   0x16ace
   16c48:	mov    ecx,DWORD PTR [ebp+0xc]
   16c4b:	push   edi
   16c4c:	mov    DWORD PTR [eax],ecx
   16c4e:	push   DWORD PTR [esi+0x10]
   16c51:	call   DWORD PTR ds:0x1f01c
   16c57:	pop    edi
   16c58:	pop    esi
   16c59:	pop    ebp
   16c5a:	ret    0x8
   16c5d:	int3   
   16c5e:	int3   
   16c5f:	int3   
   16c60:	int3   
   16c61:	int3   
   16c62:	push   0xc
   16c64:	push   0x772b8
   16c69:	call   0x1db08
   16c6e:	xor    edi,edi
   16c70:	push   edi
   16c71:	push   edi
   16c72:	push   edi
   16c73:	push   edi
   16c74:	push   0x77758
   16c79:	call   DWORD PTR ds:0x1f020
   16c7f:	cmp    eax,edi
   16c81:	jge    0x16c8f
   16c83:	mov    eax,DWORD PTR [ebp+0x8]
   16c86:	mov    DWORD PTR [eax+0x8],0x4
   16c8d:	jmp    0x16d05
   16c8f:	mov    DWORD PTR [ebp-0x4],edi
   16c92:	mov    esi,DWORD PTR [ebp+0x8]
   16c95:	lea    eax,[esi+0x4]
   16c98:	mov    ecx,DWORD PTR ds:0x777b4
   16c9e:	push   eax
   16c9f:	cmp    DWORD PTR [esi],edi
   16ca1:	jbe    0x16cce
   16ca3:	call   0x16b32
   16ca8:	mov    ebx,eax
   16caa:	push   DWORD PTR [esi]
   16cac:	lea    eax,[esi+0xc]
   16caf:	push   eax
   16cb0:	lea    ecx,[ebp-0x1c]
   16cb3:	call   0x1340e
   16cb8:	push   eax
   16cb9:	mov    ecx,ebx
   16cbb:	call   0x11e06
   16cc0:	mov    ecx,DWORD PTR [ebp-0x1c]
   16cc3:	cmp    ecx,edi
   16cc5:	je     0x16cd3
   16cc7:	call   0x10990
   16ccc:	jmp    0x16cd3
   16cce:	call   0x16792
   16cd3:	mov    DWORD PTR [esi+0x8],edi
   16cd6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16cdd:	jmp    0x16cf9
   16cdf:	xor    eax,eax
   16ce1:	inc    eax
   16ce2:	ret    
   16ce3:	mov    esp,DWORD PTR [ebp-0x18]
   16ce6:	mov    eax,DWORD PTR [ebp+0x8]
   16ce9:	mov    DWORD PTR [eax+0x8],0x4
   16cf0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16cf7:	xor    edi,edi
   16cf9:	push   edi
   16cfa:	push   0x77758
   16cff:	call   DWORD PTR ds:0x1f01c
   16d05:	call   0x1db4d
   16d0a:	ret    0x4
   16d0d:	int3   
   16d0e:	int3   
   16d0f:	int3   
   16d10:	int3   
   16d11:	int3   
   16d12:	mov    edi,edi
   16d14:	push   ebp
   16d15:	mov    ebp,esp
   16d17:	sub    esp,0x10
   16d1a:	and    DWORD PTR [ebp-0xc],0x0
   16d1e:	xor    ecx,ecx
   16d20:	mov    DWORD PTR [ebp-0x10],0x1
   16d27:	xor    eax,eax
   16d29:	mov    dl,BYTE PTR [eax+0x73638]
   16d2f:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   16d33:	inc    ecx
   16d34:	inc    eax
   16d35:	and    eax,0xf
   16d38:	cmp    ecx,0x8
   16d3b:	jne    0x16d29
   16d3d:	push   ecx
   16d3e:	lea    eax,[ebp-0x10]
   16d41:	push   eax
   16d42:	lea    ecx,[ebp-0x8]
   16d45:	mov    DWORD PTR [ebp-0x4],0x2
   16d4c:	call   0x1340e
   16d51:	mov    ecx,DWORD PTR ds:0x777b4
   16d57:	push   eax
   16d58:	lea    eax,[ebp-0x4]
   16d5b:	push   eax
   16d5c:	call   0x16b32
   16d61:	mov    ecx,eax
   16d63:	call   0x11e06
   16d68:	mov    ecx,DWORD PTR [ebp-0x8]
   16d6b:	test   ecx,ecx
   16d6d:	je     0x16d74
   16d6f:	call   0x10990
   16d74:	leave  
   16d75:	ret    
   16d76:	int3   
   16d77:	int3   
   16d78:	int3   
   16d79:	int3   
   16d7a:	int3   
   16d7b:	int3   
   16d7c:	mov    edi,edi
   16d7e:	push   ebp
   16d7f:	mov    ebp,esp
   16d81:	push   esi
   16d82:	mov    esi,ecx
   16d84:	lea    ecx,[esi+0x4]
   16d87:	mov    DWORD PTR [esi],0x73648
   16d8d:	mov    BYTE PTR [ecx+0x8],0x0
   16d91:	call   0x14e04
   16d96:	lea    ecx,[esi+0x14]
   16d99:	mov    BYTE PTR [ecx+0x8],0x0
   16d9d:	call   0x149a6
   16da2:	mov    eax,DWORD PTR [ebp+0x8]
   16da5:	mov    DWORD PTR [esi+0x24],eax
   16da8:	mov    eax,DWORD PTR [ebp+0xc]
   16dab:	mov    DWORD PTR [esi+0x28],eax
   16dae:	mov    eax,esi
   16db0:	pop    esi
   16db1:	pop    ebp
   16db2:	ret    0x8
   16db5:	int3   
   16db6:	int3   
   16db7:	int3   
   16db8:	int3   
   16db9:	int3   
   16dba:	mov    edi,edi
   16dbc:	push   esi
   16dbd:	mov    esi,ecx
   16dbf:	lea    ecx,[esi+0x14]
   16dc2:	mov    DWORD PTR [esi],0x73648
   16dc8:	call   0x159a0
   16dcd:	lea    ecx,[esi+0x4]
   16dd0:	pop    esi
   16dd1:	jmp    0x166ce
   16dd6:	int3   
   16dd7:	int3   
   16dd8:	int3   
   16dd9:	int3   
   16dda:	int3   
   16ddb:	int3   
   16ddc:	mov    edi,edi
   16dde:	push   ebp
   16ddf:	mov    ebp,esp
   16de1:	sub    esp,0x38
   16de4:	push   esi
   16de5:	call   0x1a202
   16dea:	test   al,al
   16dec:	jne    0x16df6
   16dee:	mov    eax,DWORD PTR [ebp+0x8]
   16df1:	jmp    0x16ec7
   16df6:	push   DWORD PTR [ebp+0xc]
   16df9:	lea    ecx,[ebp-0x8]
   16dfc:	push   DWORD PTR [ebp+0x8]
   16dff:	call   0x13512
   16e04:	mov    ecx,DWORD PTR ds:0x78450
   16e0a:	lea    eax,[ebp-0x8]
   16e0d:	push   eax
   16e0e:	lea    eax,[ebp+0xc]
   16e11:	push   eax
   16e12:	call   0x13e84
   16e17:	mov    esi,DWORD PTR [ebp+0xc]
   16e1a:	mov    eax,ds:0x78450
   16e1f:	cmp    esi,DWORD PTR [eax+0x4]
   16e22:	jne    0x16e82
   16e24:	push   ecx
   16e25:	push   ecx
   16e26:	lea    eax,[ebp-0x8]
   16e29:	mov    ecx,esp
   16e2b:	push   eax
   16e2c:	call   0x13532
   16e31:	lea    eax,[ebp-0x10]
   16e34:	push   eax
   16e35:	call   0x13554
   16e3a:	lea    eax,[ebp-0x10]
   16e3d:	push   eax
   16e3e:	lea    eax,[ebp-0x8]
   16e41:	push   eax
   16e42:	lea    ecx,[ebp-0x38]
   16e45:	call   0x138aa
   16e4a:	lea    eax,[ebp-0x38]
   16e4d:	push   eax
   16e4e:	lea    ecx,[ebp-0x28]
   16e51:	call   0x13702
   16e56:	mov    ecx,DWORD PTR ds:0x78450
   16e5c:	lea    eax,[ebp-0x28]
   16e5f:	push   eax
   16e60:	lea    eax,[ebp-0x18]
   16e63:	push   eax
   16e64:	call   0x16bf6
   16e69:	lea    ecx,[ebp-0x28]
   16e6c:	call   0x129b4
   16e71:	lea    ecx,[ebp-0x38]
   16e74:	call   0x129b4
   16e79:	push   DWORD PTR [ebp-0x10]
   16e7c:	call   0x1da56
   16e81:	pop    ecx
   16e82:	mov    eax,DWORD PTR [ebp+0x10]
   16e85:	movzx  eax,BYTE PTR [eax]
   16e88:	cmp    eax,0x100
   16e8d:	jge    0x16ea5
   16e8f:	mov    ecx,DWORD PTR ds:0x78450
   16e95:	lea    eax,[ebp-0x8]
   16e98:	push   eax
   16e99:	lea    eax,[ebp+0xc]
   16e9c:	push   eax
   16e9d:	call   0x13e84
   16ea2:	mov    esi,DWORD PTR [ebp+0xc]
   16ea5:	mov    eax,ds:0x78450
   16eaa:	cmp    esi,DWORD PTR [eax+0x4]
   16ead:	je     0x16eb4
   16eaf:	mov    esi,DWORD PTR [esi+0x14]
   16eb2:	jmp    0x16eb7
   16eb4:	mov    esi,DWORD PTR [ebp+0x8]
   16eb7:	call   0x1a21e
   16ebc:	push   DWORD PTR [ebp-0x8]
   16ebf:	call   0x1da56
   16ec4:	pop    ecx
   16ec5:	mov    eax,esi
   16ec7:	pop    esi
   16ec8:	leave  
   16ec9:	ret    0xc
   16ecc:	int3   
   16ecd:	int3   
   16ece:	int3   
   16ecf:	int3   
   16ed0:	int3   
   16ed1:	int3   
   16ed2:	mov    edi,edi
   16ed4:	push   ebp
   16ed5:	mov    ebp,esp
   16ed7:	sub    esp,0x38
   16eda:	push   esi
   16edb:	call   0x1a202
   16ee0:	test   al,al
   16ee2:	jne    0x16eec
   16ee4:	mov    eax,DWORD PTR [ebp+0x8]
   16ee7:	jmp    0x16fbd
   16eec:	push   DWORD PTR [ebp+0xc]
   16eef:	lea    ecx,[ebp-0x8]
   16ef2:	push   DWORD PTR [ebp+0x8]
   16ef5:	call   0x134d0
   16efa:	mov    ecx,DWORD PTR ds:0x78454
   16f00:	lea    eax,[ebp-0x8]
   16f03:	push   eax
   16f04:	lea    eax,[ebp+0xc]
   16f07:	push   eax
   16f08:	call   0x13a72
   16f0d:	mov    esi,DWORD PTR [ebp+0xc]
   16f10:	mov    eax,ds:0x78454
   16f15:	cmp    esi,DWORD PTR [eax+0x4]
   16f18:	jne    0x16f78
   16f1a:	push   ecx
   16f1b:	push   ecx
   16f1c:	lea    eax,[ebp-0x8]
   16f1f:	mov    ecx,esp
   16f21:	push   eax
   16f22:	call   0x134f0
   16f27:	lea    eax,[ebp-0x10]
   16f2a:	push   eax
   16f2b:	call   0x13598
   16f30:	lea    eax,[ebp-0x10]
   16f33:	push   eax
   16f34:	lea    eax,[ebp-0x8]
   16f37:	push   eax
   16f38:	lea    ecx,[ebp-0x38]
   16f3b:	call   0x138d2
   16f40:	lea    eax,[ebp-0x38]
   16f43:	push   eax
   16f44:	lea    ecx,[ebp-0x28]
   16f47:	call   0x1372e
   16f4c:	mov    ecx,DWORD PTR ds:0x78454
   16f52:	lea    eax,[ebp-0x28]
   16f55:	push   eax
   16f56:	lea    eax,[ebp-0x18]
   16f59:	push   eax
   16f5a:	call   0x16bcc
   16f5f:	lea    ecx,[ebp-0x28]
   16f62:	call   0x129b4
   16f67:	lea    ecx,[ebp-0x38]
   16f6a:	call   0x129b4
   16f6f:	push   DWORD PTR [ebp-0x10]
   16f72:	call   0x1da56
   16f77:	pop    ecx
   16f78:	mov    eax,DWORD PTR [ebp+0x10]
   16f7b:	movzx  eax,BYTE PTR [eax]
   16f7e:	cmp    eax,0x100
   16f83:	jge    0x16f9b
   16f85:	mov    ecx,DWORD PTR ds:0x78454
   16f8b:	lea    eax,[ebp-0x8]
   16f8e:	push   eax
   16f8f:	lea    eax,[ebp+0xc]
   16f92:	push   eax
   16f93:	call   0x13a72
   16f98:	mov    esi,DWORD PTR [ebp+0xc]
   16f9b:	mov    eax,ds:0x78454
   16fa0:	cmp    esi,DWORD PTR [eax+0x4]
   16fa3:	je     0x16faa
   16fa5:	mov    esi,DWORD PTR [esi+0x14]
   16fa8:	jmp    0x16fad
   16faa:	mov    esi,DWORD PTR [ebp+0x8]
   16fad:	call   0x1a21e
   16fb2:	push   DWORD PTR [ebp-0x8]
   16fb5:	call   0x1da56
   16fba:	pop    ecx
   16fbb:	mov    eax,esi
   16fbd:	pop    esi
   16fbe:	leave  
   16fbf:	ret    0xc
   16fc2:	int3   
   16fc3:	int3   
   16fc4:	int3   
   16fc5:	int3   
   16fc6:	int3   
   16fc7:	int3   
   16fc8:	mov    edi,edi
   16fca:	push   ebp
   16fcb:	mov    ebp,esp
   16fcd:	sub    esp,0x90
   16fd3:	push   esi
   16fd4:	mov    esi,ecx
   16fd6:	lea    ecx,[ebp-0x48]
   16fd9:	call   0x138fa
   16fde:	push   eax
   16fdf:	push   DWORD PTR [ebp+0x8]
   16fe2:	lea    ecx,[ebp-0x90]
   16fe8:	call   0x13a4a
   16fed:	push   eax
   16fee:	lea    eax,[ebp-0x8]
   16ff1:	push   eax
   16ff2:	mov    ecx,esi
   16ff4:	call   0x16ba2
   16ff9:	mov    esi,DWORD PTR [eax]
   16ffb:	lea    ecx,[ebp-0x90]
   17001:	call   0x12998
   17006:	lea    ecx,[ebp-0x48]
   17009:	call   0x11dac
   1700e:	lea    eax,[esi+0x18]
   17011:	pop    esi
   17012:	leave  
   17013:	ret    0x4
   17016:	int3   
   17017:	int3   
   17018:	int3   
   17019:	int3   
   1701a:	int3   
   1701b:	int3   
   1701c:	mov    edi,edi
   1701e:	push   ebp
   1701f:	mov    ebp,esp
   17021:	sub    esp,0x20
   17024:	push   esi
   17025:	push   0xffffffff
   17027:	mov    esi,ecx
   17029:	push   0x1df18
   1702e:	lea    ecx,[ebp-0x8]
   17031:	call   0x129d2
   17036:	lea    eax,[ebp-0x8]
   17039:	push   eax
   1703a:	push   DWORD PTR [ebp+0x8]
   1703d:	lea    ecx,[ebp-0x20]
   17040:	call   0x138d2
   17045:	push   eax
   17046:	lea    eax,[ebp-0x10]
   17049:	push   eax
   1704a:	mov    ecx,esi
   1704c:	call   0x16bcc
   17051:	mov    esi,DWORD PTR [eax]
   17053:	lea    ecx,[ebp-0x20]
   17056:	call   0x129b4
   1705b:	push   DWORD PTR [ebp-0x8]
   1705e:	call   0x1da56
   17063:	pop    ecx
   17064:	lea    eax,[esi+0x14]
   17067:	pop    esi
   17068:	leave  
   17069:	ret    0x4
   1706c:	int3   
   1706d:	int3   
   1706e:	int3   
   1706f:	int3   
   17070:	int3   
   17071:	int3   
   17072:	mov    edi,edi
   17074:	push   ebp
   17075:	mov    ebp,esp
   17077:	push   esi
   17078:	mov    esi,ecx
   1707a:	call   0x16dba
   1707f:	test   BYTE PTR [ebp+0x8],0x1
   17083:	je     0x1708c
   17085:	push   esi
   17086:	call   0x1da56
   1708b:	pop    ecx
   1708c:	mov    eax,esi
   1708e:	pop    esi
   1708f:	pop    ebp
   17090:	ret    0x4
   17093:	int3   
   17094:	int3   
   17095:	int3   
   17096:	int3   
   17097:	int3   
   17098:	mov    edi,edi
   1709a:	push   ebp
   1709b:	mov    ebp,esp
   1709d:	sub    esp,0x20
   170a0:	push   esi
   170a1:	mov    esi,ecx
   170a3:	mov    eax,DWORD PTR [esi+0x24]
   170a6:	mov    ecx,DWORD PTR [esi+0x28]
   170a9:	add    ecx,eax
   170ab:	cmp    DWORD PTR [esi+0x10],ecx
   170ae:	jbe    0x17141
   170b4:	mov    ecx,DWORD PTR [esi+0x18]
   170b7:	mov    ecx,DWORD PTR [ecx]
   170b9:	push   edi
   170ba:	mov    DWORD PTR [ebp-0x4],ecx
   170bd:	test   eax,eax
   170bf:	je     0x170ce
   170c1:	mov    edi,eax
   170c3:	lea    ecx,[ebp-0x4]
   170c6:	call   0x12d44
   170cb:	dec    edi
   170cc:	jne    0x170c3
   170ce:	mov    eax,DWORD PTR [ebp-0x4]
   170d1:	mov    edi,DWORD PTR [eax+0xc]
   170d4:	lea    ecx,[ebp-0x20]
   170d7:	mov    BYTE PTR [ebp-0x18],0x0
   170db:	call   0x149a6
   170e0:	mov    eax,DWORD PTR [esi+0x8]
   170e3:	mov    ecx,DWORD PTR [eax]
   170e5:	mov    DWORD PTR [ebp-0x4],ecx
   170e8:	cmp    ecx,eax
   170ea:	je     0x1712b
   170ec:	lea    edx,[ecx+0x58]
   170ef:	mov    eax,DWORD PTR [edx]
   170f1:	cmp    eax,edi
   170f3:	jae    0x1710a
   170f5:	push   ecx
   170f6:	lea    eax,[ebp-0x8]
   170f9:	push   eax
   170fa:	lea    ecx,[esi+0x4]
   170fd:	call   0x14b58
   17102:	mov    ecx,DWORD PTR [ebp-0x8]
   17105:	mov    DWORD PTR [ebp-0x4],ecx
   17108:	jmp    0x17126
   1710a:	sub    eax,edi
   1710c:	mov    DWORD PTR [edx],eax
   1710e:	push   edx
   1710f:	lea    eax,[ebp-0x10]
   17112:	push   eax
   17113:	lea    ecx,[ebp-0x20]
   17116:	call   0x166a4
   1711b:	lea    ecx,[ebp-0x4]
   1711e:	call   0x12cce
   17123:	mov    ecx,DWORD PTR [ebp-0x4]
   17126:	cmp    ecx,DWORD PTR [esi+0x8]
   17129:	jne    0x170ec
   1712b:	lea    eax,[ebp-0x20]
   1712e:	push   eax
   1712f:	add    esi,0x14
   17132:	push   esi
   17133:	call   0x16a62
   17138:	lea    ecx,[ebp-0x20]
   1713b:	call   0x159a0
   17140:	pop    edi
   17141:	pop    esi
   17142:	leave  
   17143:	ret    
   17144:	int3   
   17145:	int3   
   17146:	int3   
   17147:	int3   
   17148:	int3   
   17149:	int3   
   1714a:	mov    edi,edi
   1714c:	push   ebp
   1714d:	mov    ebp,esp
   1714f:	sub    esp,0x20
   17152:	push   esi
   17153:	push   0xffffffff
   17155:	mov    esi,ecx
   17157:	push   0x1de7e
   1715c:	lea    ecx,[ebp-0x8]
   1715f:	call   0x12ab2
   17164:	lea    eax,[ebp-0x8]
   17167:	push   eax
   17168:	push   DWORD PTR [ebp+0x8]
   1716b:	lea    ecx,[ebp-0x20]
   1716e:	call   0x138aa
   17173:	push   eax
   17174:	lea    eax,[ebp-0x10]
   17177:	push   eax
   17178:	mov    ecx,esi
   1717a:	call   0x16bf6
   1717f:	mov    esi,DWORD PTR [eax]
   17181:	lea    ecx,[ebp-0x20]
   17184:	call   0x129b4
   17189:	push   DWORD PTR [ebp-0x8]
   1718c:	call   0x1da56
   17191:	pop    ecx
   17192:	lea    eax,[esi+0x14]
   17195:	pop    esi
   17196:	leave  
   17197:	ret    0x4
   1719a:	int3   
   1719b:	int3   
   1719c:	int3   
   1719d:	int3   
   1719e:	int3   
   1719f:	int3   
   171a0:	mov    edi,edi
   171a2:	push   ebp
   171a3:	mov    ebp,esp
   171a5:	push   esi
   171a6:	push   DWORD PTR [ebp+0xc]
   171a9:	mov    esi,ecx
   171ab:	push   DWORD PTR [ebp+0x8]
   171ae:	call   0x16d7c
   171b3:	mov    eax,esi
   171b5:	pop    esi
   171b6:	pop    ebp
   171b7:	ret    0x8
   171ba:	int3   
   171bb:	int3   
   171bc:	int3   
   171bd:	int3   
   171be:	int3   
   171bf:	int3   
   171c0:	mov    edi,edi
   171c2:	push   ebp
   171c3:	mov    ebp,esp
   171c5:	sub    esp,0x838
   171cb:	mov    eax,ds:0x7771c
   171d0:	xor    eax,ebp
   171d2:	mov    DWORD PTR [ebp-0x4],eax
   171d5:	mov    eax,DWORD PTR [ebp+0x8]
   171d8:	push   ebx
   171d9:	push   esi
   171da:	push   edi
   171db:	mov    DWORD PTR [ebp-0x808],eax
   171e1:	xor    eax,eax
   171e3:	push   0x7fe
   171e8:	mov    WORD PTR [ebp-0x804],ax
   171ef:	xor    ebx,ebx
   171f1:	lea    eax,[ebp-0x802]
   171f7:	push   ebx
   171f8:	push   eax
   171f9:	call   0x1dacc
   171fe:	mov    eax,0x778b8
   17203:	add    esp,0xc
   17206:	mov    edx,eax
   17208:	mov    cx,WORD PTR [eax]
   1720b:	inc    eax
   1720c:	inc    eax
   1720d:	cmp    cx,bx
   17210:	jne    0x17208
   17212:	sub    eax,edx
   17214:	lea    edi,[ebp-0x804]
   1721a:	dec    edi
   1721b:	dec    edi
   1721c:	mov    cx,WORD PTR [edi+0x2]
   17220:	inc    edi
   17221:	inc    edi
   17222:	cmp    cx,bx
   17225:	jne    0x1721c
   17227:	mov    ecx,eax
   17229:	shr    ecx,0x2
   1722c:	mov    esi,edx
   1722e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17230:	mov    ecx,eax
   17232:	mov    eax,DWORD PTR [ebp-0x808]
   17238:	and    ecx,0x3
   1723b:	add    eax,0x400
   17240:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17242:	mov    edx,eax
   17244:	mov    cx,WORD PTR [eax]
   17247:	inc    eax
   17248:	inc    eax
   17249:	cmp    cx,bx
   1724c:	jne    0x17244
   1724e:	sub    eax,edx
   17250:	lea    edi,[ebp-0x804]
   17256:	dec    edi
   17257:	dec    edi
   17258:	mov    cx,WORD PTR [edi+0x2]
   1725c:	inc    edi
   1725d:	inc    edi
   1725e:	cmp    cx,bx
   17261:	jne    0x17258
   17263:	mov    ecx,eax
   17265:	shr    ecx,0x2
   17268:	mov    esi,edx
   1726a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1726c:	mov    ecx,eax
   1726e:	and    ecx,0x3
   17271:	lea    eax,[ebp-0x804]
   17277:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17279:	mov    DWORD PTR [ebp-0x818],eax
   1727f:	lea    ecx,[eax+0x2]
   17282:	mov    dx,WORD PTR [eax]
   17285:	inc    eax
   17286:	inc    eax
   17287:	cmp    dx,bx
   1728a:	jne    0x17282
   1728c:	sub    eax,ecx
   1728e:	sar    eax,1
   17290:	add    eax,eax
   17292:	mov    WORD PTR [ebp-0x81a],ax
   17299:	mov    WORD PTR [ebp-0x81c],ax
   172a0:	lea    eax,[ebp-0x81c]
   172a6:	mov    DWORD PTR [ebp-0x82c],eax
   172ac:	lea    eax,[ebp-0x838]
   172b2:	push   eax
   172b3:	xor    edi,edi
   172b5:	inc    edi
   172b6:	push   edi
   172b7:	push   ebx
   172b8:	push   ebx
   172b9:	lea    eax,[ebp-0x834]
   172bf:	push   eax
   172c0:	push   0xf003f
   172c5:	lea    eax,[ebp-0x80c]
   172cb:	push   eax
   172cc:	mov    DWORD PTR [ebp-0x834],0x18
   172d6:	mov    DWORD PTR [ebp-0x830],ebx
   172dc:	mov    DWORD PTR [ebp-0x828],0x40
   172e6:	mov    DWORD PTR [ebp-0x824],ebx
   172ec:	mov    DWORD PTR [ebp-0x820],ebx
   172f2:	call   0x118ac
   172f7:	call   eax
   172f9:	test   eax,eax
   172fb:	jl     0x1748b
   17301:	push   0x1e596
   17306:	push   0x9
   17308:	push   0x1e582
   1730d:	call   0x16ddc
   17312:	mov    DWORD PTR [ebp-0x810],eax
   17318:	lea    edx,[eax+0x2]
   1731b:	mov    cx,WORD PTR [eax]
   1731e:	inc    eax
   1731f:	inc    eax
   17320:	cmp    cx,bx
   17323:	jne    0x1731b
   17325:	sub    eax,edx
   17327:	sar    eax,1
   17329:	add    eax,eax
   1732b:	mov    WORD PTR [ebp-0x812],ax
   17332:	mov    WORD PTR [ebp-0x814],ax
   17339:	mov    eax,DWORD PTR [ebp-0x808]
   1733f:	lea    ecx,[eax+0x2]
   17342:	mov    dx,WORD PTR [eax]
   17345:	inc    eax
   17346:	inc    eax
   17347:	cmp    dx,bx
   1734a:	jne    0x17342
   1734c:	sub    eax,ecx
   1734e:	sar    eax,1
   17350:	inc    eax
   17351:	movzx  eax,ax
   17354:	add    eax,eax
   17356:	push   eax
   17357:	push   DWORD PTR [ebp-0x808]
   1735d:	lea    eax,[ebp-0x814]
   17363:	push   edi
   17364:	push   ebx
   17365:	push   eax
   17366:	push   DWORD PTR [ebp-0x80c]
   1736c:	call   0x1168a
   17371:	call   eax
   17373:	test   eax,eax
   17375:	jl     0x1748b
   1737b:	push   0x1e54e
   17380:	push   0x5
   17382:	push   0x1e542
   17387:	mov    DWORD PTR [ebp-0x808],0x3
   17391:	call   0x16ddc
   17396:	mov    DWORD PTR [ebp-0x810],eax
   1739c:	lea    edx,[eax+0x2]
   1739f:	mov    cx,WORD PTR [eax]
   173a2:	inc    eax
   173a3:	inc    eax
   173a4:	cmp    cx,bx
   173a7:	jne    0x1739f
   173a9:	sub    eax,edx
   173ab:	push   0x4
   173ad:	sar    eax,1
   173af:	pop    esi
   173b0:	add    eax,eax
   173b2:	push   esi
   173b3:	mov    WORD PTR [ebp-0x812],ax
   173ba:	mov    WORD PTR [ebp-0x814],ax
   173c1:	lea    eax,[ebp-0x808]
   173c7:	push   eax
   173c8:	push   esi
   173c9:	push   ebx
   173ca:	lea    eax,[ebp-0x814]
   173d0:	push   eax
   173d1:	push   DWORD PTR [ebp-0x80c]
   173d7:	call   0x1168a
   173dc:	call   eax
   173de:	test   eax,eax
   173e0:	jl     0x1748b
   173e6:	push   0x1e502
   173eb:	push   esi
   173ec:	push   0x1e4f8
   173f1:	mov    DWORD PTR [ebp-0x808],edi
   173f7:	call   0x16ddc
   173fc:	mov    DWORD PTR [ebp-0x810],eax
   17402:	lea    ecx,[eax+0x2]
   17405:	mov    dx,WORD PTR [eax]
   17408:	inc    eax
   17409:	inc    eax
   1740a:	cmp    dx,bx
   1740d:	jne    0x17405
   1740f:	sub    eax,ecx
   17411:	sar    eax,1
   17413:	add    eax,eax
   17415:	push   esi
   17416:	mov    WORD PTR [ebp-0x812],ax
   1741d:	mov    WORD PTR [ebp-0x814],ax
   17424:	lea    eax,[ebp-0x808]
   1742a:	push   eax
   1742b:	push   esi
   1742c:	push   ebx
   1742d:	lea    eax,[ebp-0x814]
   17433:	push   eax
   17434:	push   DWORD PTR [ebp-0x80c]
   1743a:	call   0x1168a
   1743f:	call   eax
   17441:	test   eax,eax
   17443:	jl     0x1748b
   17445:	lea    eax,[ebp-0x81c]
   1744b:	push   eax
   1744c:	call   0x11882
   17451:	call   eax
   17453:	test   eax,eax
   17455:	jl     0x1748b
   17457:	lea    eax,[ebp-0x804]
   1745d:	push   eax
   1745e:	push   DWORD PTR [ebp-0x80c]
   17464:	call   0x12040
   17469:	test   al,al
   1746b:	je     0x1747e
   1746d:	push   DWORD PTR [ebp-0x80c]
   17473:	call   0x11660
   17478:	call   eax
   1747a:	test   eax,eax
   1747c:	jl     0x1748b
   1747e:	push   DWORD PTR [ebp-0x80c]
   17484:	call   0x117da
   17489:	call   eax
   1748b:	mov    ecx,DWORD PTR [ebp-0x4]
   1748e:	pop    edi
   1748f:	pop    esi
   17490:	xor    ecx,ebp
   17492:	pop    ebx
   17493:	call   0x1da73
   17498:	leave  
   17499:	ret    0x4
   1749c:	int3   
   1749d:	int3   
   1749e:	int3   
   1749f:	int3   
   174a0:	int3   
   174a1:	int3   
   174a2:	mov    edi,edi
   174a4:	push   ebp
   174a5:	mov    ebp,esp
   174a7:	sub    esp,0x44
   174aa:	mov    eax,DWORD PTR [ebp+0xc]
   174ad:	mov    eax,DWORD PTR [eax]
   174af:	push   esi
   174b0:	mov    DWORD PTR [ebp-0x2c],eax
   174b3:	lea    eax,[ebp-0x2c]
   174b6:	push   eax
   174b7:	lea    eax,[ebp-0x44]
   174ba:	push   eax
   174bb:	xor    esi,esi
   174bd:	push   0x1f0fff
   174c2:	lea    eax,[ebp-0x10]
   174c5:	push   eax
   174c6:	mov    DWORD PTR [ebp-0x44],0x18
   174cd:	mov    DWORD PTR [ebp-0x40],esi
   174d0:	mov    DWORD PTR [ebp-0x38],0x200
   174d7:	mov    DWORD PTR [ebp-0x3c],esi
   174da:	mov    DWORD PTR [ebp-0x34],esi
   174dd:	mov    DWORD PTR [ebp-0x30],esi
   174e0:	mov    DWORD PTR [ebp-0x28],esi
   174e3:	mov    DWORD PTR [ebp-0x10],esi
   174e6:	call   0x11510
   174eb:	call   eax
   174ed:	test   eax,eax
   174ef:	jl     0x17760
   174f5:	push   ebx
   174f6:	push   edi
   174f7:	push   0x40
   174f9:	mov    edi,0x1000
   174fe:	push   edi
   174ff:	lea    eax,[ebp-0x14]
   17502:	push   eax
   17503:	push   esi
   17504:	lea    eax,[ebp-0x8]
   17507:	push   eax
   17508:	push   DWORD PTR [ebp-0x10]
   1750b:	mov    DWORD PTR [ebp-0x8],esi
   1750e:	mov    esi,DWORD PTR ds:0x1f03c
   17514:	mov    ebx,0x400
   17519:	mov    DWORD PTR [ebp-0x14],ebx
   1751c:	call   esi
   1751e:	test   eax,eax
   17520:	jl     0x1752b
   17522:	mov    eax,DWORD PTR [ebp-0x8]
   17525:	mov    ecx,DWORD PTR [ebp+0xc]
   17528:	mov    DWORD PTR [ecx+0x8],eax
   1752b:	and    DWORD PTR [ebp-0x18],0x0
   1752f:	push   0x4
   17531:	push   edi
   17532:	lea    eax,[ebp-0x14]
   17535:	push   eax
   17536:	push   0x0
   17538:	lea    eax,[ebp-0x18]
   1753b:	push   eax
   1753c:	push   DWORD PTR [ebp-0x10]
   1753f:	mov    DWORD PTR [ebp-0x14],ebx
   17542:	call   esi
   17544:	test   eax,eax
   17546:	jl     0x17551
   17548:	mov    eax,DWORD PTR [ebp-0x18]
   1754b:	mov    ecx,DWORD PTR [ebp+0xc]
   1754e:	mov    DWORD PTR [ecx+0xc],eax
   17551:	lea    eax,[ebp-0x1c]
   17554:	push   eax
   17555:	push   DWORD PTR [ebp-0x2c]
   17558:	call   0x11b4c
   1755d:	call   eax
   1755f:	test   eax,eax
   17561:	jl     0x1775e
   17567:	push   DWORD PTR [ebp-0x1c]
   1756a:	call   0x1192a
   1756f:	call   eax
   17571:	mov    ebx,DWORD PTR [ebp-0x8]
   17574:	and    DWORD PTR [ebp-0x4],0x0
   17578:	test   ebx,ebx
   1757a:	je     0x17744
   17580:	mov    edi,DWORD PTR [ebp-0x18]
   17583:	push   0x40
   17585:	push   0x77608
   1758a:	push   edi
   1758b:	mov    DWORD PTR [ebp-0xc],edi
   1758e:	call   0x19884
   17593:	push   0x1e5ca
   17598:	push   0x4
   1759a:	push   0x1e5c0
   1759f:	call   0x16ddc
   175a4:	mov    esi,eax
   175a6:	mov    cx,WORD PTR [eax]
   175a9:	inc    eax
   175aa:	inc    eax
   175ab:	test   cx,cx
   175ae:	jne    0x175a6
   175b0:	sub    eax,esi
   175b2:	dec    edi
   175b3:	dec    edi
   175b4:	mov    cx,WORD PTR [edi+0x2]
   175b8:	inc    edi
   175b9:	inc    edi
   175ba:	test   cx,cx
   175bd:	jne    0x175b4
   175bf:	mov    ecx,eax
   175c1:	shr    ecx,0x2
   175c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   175c6:	mov    ecx,eax
   175c8:	push   0x60
   175ca:	and    ecx,0x3
   175cd:	push   ebx
   175ce:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   175d0:	mov    DWORD PTR [ebp-0x20],ebx
   175d3:	call   0x19836
   175d8:	push   0x68
   175da:	push   eax
   175db:	call   0x19836
   175e0:	push   DWORD PTR [ebp-0xc]
   175e3:	push   eax
   175e4:	call   0x1984e
   175e9:	push   0xb8
   175ee:	push   eax
   175ef:	call   0x19836
   175f4:	push   DWORD PTR ds:0x78168
   175fa:	push   eax
   175fb:	call   0x1984e
   17600:	push   0xc00b
   17605:	push   eax
   17606:	call   0x19868
   1760b:	push   0x74
   1760d:	push   eax
   1760e:	call   0x19836
   17613:	push   0x2
   17615:	push   eax
   17616:	call   0x19836
   1761b:	push   0xd0ff
   17620:	push   eax
   17621:	call   0x19868
   17626:	push   0x61
   17628:	push   eax
   17629:	call   0x19836
   1762e:	mov    ebx,DWORD PTR [ebp+0x8]
   17631:	mov    edi,eax
   17633:	mov    esi,ebx
   17635:	push   0x0
   17637:	push   esi
   17638:	push   edi
   17639:	call   0x19fe8
   1763e:	mov    ecx,eax
   17640:	sub    ecx,esi
   17642:	add    DWORD PTR [ebp-0x4],ecx
   17645:	add    edi,ecx
   17647:	cmp    DWORD PTR [ebp-0x4],0x5
   1764b:	mov    esi,eax
   1764d:	jb     0x17635
   1764f:	mov    eax,DWORD PTR [ebp-0x4]
   17652:	push   edi
   17653:	add    eax,ebx
   17655:	push   eax
   17656:	call   0x198ac
   1765b:	mov    eax,DWORD PTR [ebp-0x8]
   1765e:	test   eax,eax
   17660:	je     0x17744
   17666:	add    eax,0x400
   1766b:	lea    ecx,[eax-0x10]
   1766e:	mov    DWORD PTR [ebp-0x24],ecx
   17671:	mov    ecx,DWORD PTR [ebp-0x4]
   17674:	lea    esi,[eax-0xc]
   17677:	push   esi
   17678:	lea    edi,[eax-0x4]
   1767b:	lea    ebx,[eax-0x8]
   1767e:	shr    ecx,0x2
   17681:	lea    ecx,[ecx*4+0x14]
   17688:	push   0x40
   1768a:	sub    eax,ecx
   1768c:	push   ebx
   1768d:	mov    DWORD PTR [ebp-0xc],eax
   17690:	mov    eax,DWORD PTR [ebp+0x8]
   17693:	mov    DWORD PTR [edi],eax
   17695:	push   edi
   17696:	mov    DWORD PTR [ebx],0x5
   1769c:	and    DWORD PTR [esi],0x0
   1769f:	push   0xffffffff
   176a1:	call   DWORD PTR ds:0x780e4
   176a7:	test   eax,eax
   176a9:	jl     0x1770e
   176ab:	push   DWORD PTR [ebp-0x4]
   176ae:	push   0x90
   176b3:	push   DWORD PTR [ebp-0xc]
   176b6:	call   0x1dacc
   176bb:	mov    eax,DWORD PTR [ebp-0x20]
   176be:	sub    eax,DWORD PTR [ebp+0x8]
   176c1:	add    esp,0xc
   176c4:	sub    eax,0x5
   176c7:	push   eax
   176c8:	mov    eax,DWORD PTR [ebp-0xc]
   176cb:	inc    eax
   176cc:	push   eax
   176cd:	call   0x1984e
   176d2:	push   0xe9
   176d7:	push   DWORD PTR [ebp-0xc]
   176da:	call   0x19836
   176df:	mov    eax,DWORD PTR [ebp-0x24]
   176e2:	and    DWORD PTR [eax],0x0
   176e5:	push   eax
   176e6:	push   DWORD PTR [ebp-0x4]
   176e9:	push   DWORD PTR [ebp-0xc]
   176ec:	push   DWORD PTR [ebp+0x8]
   176ef:	push   0xffffffff
   176f1:	call   DWORD PTR ds:0x780d8
   176f7:	mov    eax,DWORD PTR [ebp+0xc]
   176fa:	mov    BYTE PTR [eax+0x10],0x1
   176fe:	lea    eax,[ebp-0x20]
   17701:	push   eax
   17702:	push   DWORD PTR [esi]
   17704:	push   ebx
   17705:	push   edi
   17706:	push   0xffffffff
   17708:	call   DWORD PTR ds:0x780e4
   1770e:	mov    esi,DWORD PTR [ebp-0x8]
   17711:	test   esi,esi
   17713:	je     0x17744
   17715:	lea    eax,[esi+0x400]
   1771b:	lea    ecx,[eax-0x4]
   1771e:	lea    edx,[eax-0x8]
   17721:	add    eax,0xfffffff4
   17724:	push   eax
   17725:	push   0x20
   17727:	push   edx
   17728:	mov    DWORD PTR [ecx],esi
   1772a:	push   ecx
   1772b:	mov    DWORD PTR [edx],0x400
   17731:	and    DWORD PTR [eax],0x0
   17734:	push   0xffffffff
   17736:	call   DWORD PTR ds:0x780e4
   1773c:	test   eax,eax
   1773e:	jge    0x17744
   17740:	and    DWORD PTR [ebp-0x8],0x0
   17744:	call   0x11900
   17749:	call   eax
   1774b:	mov    ecx,DWORD PTR [ebp-0x1c]
   1774e:	call   DWORD PTR ds:0x1f05c
   17754:	push   DWORD PTR [ebp-0x10]
   17757:	call   0x117da
   1775c:	call   eax
   1775e:	pop    edi
   1775f:	pop    ebx
   17760:	pop    esi
   17761:	leave  
   17762:	ret    0x8
   17765:	int3   
   17766:	int3   
   17767:	int3   
   17768:	int3   
   17769:	int3   
   1776a:	mov    edi,edi
   1776c:	push   ebp
   1776d:	mov    ebp,esp
   1776f:	cmp    DWORD PTR ds:0x78168,0x0
   17776:	push   esi
   17777:	mov    esi,DWORD PTR [ebp+0x10]
   1777a:	jne    0x17845
   17780:	push   0x1e7a8
   17785:	push   0xc
   17787:	push   0x1e78e
   1778c:	call   0x16ddc
   17791:	push   eax
   17792:	push   DWORD PTR [ebp+0x8]
   17795:	call   0x10dc2
   1779a:	test   al,al
   1779c:	je     0x17845
   177a2:	mov    eax,DWORD PTR [esi+0x4]
   177a5:	push   0x1e756
   177aa:	push   0xc
   177ac:	push   0x1e748
   177b1:	mov    ds:0x78160,eax
   177b6:	call   0x16ed2
   177bb:	push   eax
   177bc:	push   DWORD PTR [esi+0x4]
   177bf:	call   0x122a4
   177c4:	push   0x1e712
   177c9:	push   0xc
   177cb:	push   0x1e704
   177d0:	mov    ds:0x78168,eax
   177d5:	call   0x16ed2
   177da:	push   eax
   177db:	push   DWORD PTR [esi+0x4]
   177de:	call   0x122a4
   177e3:	push   0x1e6d6
   177e8:	push   0xc
   177ea:	push   0x1e6c8
   177ef:	mov    ds:0x7816c,eax
   177f4:	call   0x16ed2
   177f9:	push   eax
   177fa:	push   DWORD PTR [esi+0x4]
   177fd:	call   0x122a4
   17802:	push   0x1e69c
   17807:	push   0x5
   17809:	push   0x1e696
   1780e:	mov    ds:0x78170,eax
   17813:	call   0x16ed2
   17818:	push   eax
   17819:	push   DWORD PTR [esi+0x4]
   1781c:	call   0x122a4
   17821:	push   0x1e658
   17826:	push   0x4
   17828:	push   0x1e652
   1782d:	mov    ds:0x78174,eax
   17832:	call   0x16ed2
   17837:	push   eax
   17838:	push   DWORD PTR [esi+0x4]
   1783b:	call   0x122a4
   17840:	mov    ds:0x78178,eax
   17845:	cmp    DWORD PTR ds:0x78164,0x0
   1784c:	jne    0x17874
   1784e:	push   0x1e61e
   17853:	push   0x9
   17855:	push   0x1e60a
   1785a:	call   0x16ddc
   1785f:	push   eax
   17860:	push   DWORD PTR [ebp+0x8]
   17863:	call   0x10dc2
   17868:	test   al,al
   1786a:	je     0x17874
   1786c:	mov    eax,DWORD PTR [esi+0x4]
   1786f:	mov    ds:0x78164,eax
   17874:	pop    esi
   17875:	pop    ebp
   17876:	ret    0xc
   17879:	int3   
   1787a:	int3   
   1787b:	int3   
   1787c:	int3   
   1787d:	int3   
   1787e:	mov    edi,edi
   17880:	push   ebp
   17881:	mov    ebp,esp
   17883:	sub    esp,0x4c
   17886:	push   ebx
   17887:	push   esi
   17888:	push   edi
   17889:	push   DWORD PTR [ebp+0xc]
   1788c:	push   DWORD PTR [ebp+0x8]
   1788f:	call   DWORD PTR ds:0x780f0
   17895:	mov    DWORD PTR [ebp-0x8],eax
   17898:	xor    eax,eax
   1789a:	xor    ebx,ebx
   1789c:	mov    DWORD PTR [ebp-0x30],ebx
   1789f:	lea    edi,[ebp-0x2c]
   178a2:	stos   DWORD PTR es:[edi],eax
   178a3:	stos   DWORD PTR es:[edi],eax
   178a4:	stos   DWORD PTR es:[edi],eax
   178a5:	stos   DWORD PTR es:[edi],eax
   178a6:	xor    eax,eax
   178a8:	mov    DWORD PTR [ebp-0x1c],ebx
   178ab:	lea    edi,[ebp-0x18]
   178ae:	stos   DWORD PTR es:[edi],eax
   178af:	stos   DWORD PTR es:[edi],eax
   178b0:	stos   DWORD PTR es:[edi],eax
   178b1:	stos   DWORD PTR es:[edi],eax
   178b2:	lea    eax,[ebp-0x30]
   178b5:	push   eax
   178b6:	push   ebx
   178b7:	call   0x10e50
   178bc:	mov    BYTE PTR [ebp+0xf],al
   178bf:	lea    eax,[ebp-0x1c]
   178c2:	push   eax
   178c3:	push   0x1
   178c5:	call   0x10e50
   178ca:	mov    BYTE PTR [ebp-0x1],al
   178cd:	cmp    BYTE PTR [ebp+0xf],bl
   178d0:	je     0x17931
   178d2:	mov    esi,DWORD PTR [ebp-0x30]
   178d5:	cmp    esi,ebx
   178d7:	je     0x17931
   178d9:	push   0x6
   178db:	pop    ecx
   178dc:	push   ebx
   178dd:	xor    eax,eax
   178df:	mov    DWORD PTR [ebp-0x4c],ebx
   178e2:	lea    edi,[ebp-0x48]
   178e5:	push   0x1c
   178e7:	rep stos DWORD PTR es:[edi],eax
   178e9:	lea    eax,[ebp-0x4c]
   178ec:	push   eax
   178ed:	push   ebx
   178ee:	push   DWORD PTR [ebp+0x8]
   178f1:	call   0x117b0
   178f6:	call   eax
   178f8:	cmp    DWORD PTR [ebp-0x44],esi
   178fb:	jne    0x17931
   178fd:	push   ebx
   178fe:	push   0x4
   17900:	lea    eax,[ebp+0xc]
   17903:	push   eax
   17904:	push   0x9
   17906:	push   DWORD PTR [ebp+0x8]
   17909:	mov    DWORD PTR [ebp+0xc],ebx
   1790c:	call   0x117b0
   17911:	call   eax
   17913:	test   eax,eax
   17915:	jge    0x1791a
   17917:	mov    DWORD PTR [ebp+0xc],ebx
   1791a:	cmp    DWORD PTR [ebp+0xc],ebx
   1791d:	je     0x17931
   1791f:	lea    eax,[ebp-0x30]
   17922:	push   eax
   17923:	push   DWORD PTR [ebp+0xc]
   17926:	call   0x174a2
   1792b:	push   ebx
   1792c:	call   0x10ee6
   17931:	cmp    BYTE PTR [ebp-0x1],bl
   17934:	je     0x1799f
   17936:	mov    esi,DWORD PTR [ebp-0x1c]
   17939:	cmp    esi,ebx
   1793b:	je     0x1799f
   1793d:	cmp    BYTE PTR [ebp-0xc],bl
   17940:	jne    0x1799f
   17942:	push   0x6
   17944:	pop    ecx
   17945:	push   ebx
   17946:	xor    eax,eax
   17948:	mov    DWORD PTR [ebp-0x4c],ebx
   1794b:	lea    edi,[ebp-0x48]
   1794e:	push   0x1c
   17950:	rep stos DWORD PTR es:[edi],eax
   17952:	lea    eax,[ebp-0x4c]
   17955:	push   eax
   17956:	push   ebx
   17957:	push   DWORD PTR [ebp+0x8]
   1795a:	call   0x117b0
   1795f:	call   eax
   17961:	cmp    DWORD PTR [ebp-0x44],esi
   17964:	jne    0x1799f
   17966:	push   ebx
   17967:	push   0x4
   17969:	lea    eax,[ebp+0xc]
   1796c:	push   eax
   1796d:	push   0x9
   1796f:	push   DWORD PTR [ebp+0x8]
   17972:	mov    DWORD PTR [ebp+0xc],ebx
   17975:	call   0x117b0
   1797a:	call   eax
   1797c:	test   eax,eax
   1797e:	jge    0x17983
   17980:	mov    DWORD PTR [ebp+0xc],ebx
   17983:	cmp    DWORD PTR [ebp+0xc],ebx
   17986:	je     0x1799f
   17988:	lea    eax,[ebp-0x1c]
   1798b:	push   eax
   1798c:	push   DWORD PTR [ebp+0xc]
   1798f:	call   0x123b0
   17994:	lea    eax,[ebp-0x1c]
   17997:	push   eax
   17998:	push   0x1
   1799a:	call   0x10e9e
   1799f:	mov    eax,DWORD PTR [ebp-0x8]
   179a2:	pop    edi
   179a3:	pop    esi
   179a4:	pop    ebx
   179a5:	leave  
   179a6:	ret    0x8
   179a9:	int3   
   179aa:	int3   
   179ab:	int3   
   179ac:	int3   
   179ad:	int3   
   179ae:	push   0x24
   179b0:	push   0x772d8
   179b5:	call   0x1db08
   179ba:	xor    ebx,ebx
   179bc:	push   ebx
   179bd:	push   ebx
   179be:	push   ebx
   179bf:	push   ebx
   179c0:	push   0x77758
   179c5:	call   DWORD PTR ds:0x1f020
   179cb:	cmp    eax,ebx
   179cd:	jge    0x179de
   179cf:	mov    eax,DWORD PTR [ebp+0x8]
   179d2:	mov    DWORD PTR [eax+0x8],0x4
   179d9:	jmp    0x17a96
   179de:	mov    DWORD PTR [ebp-0x4],ebx
   179e1:	push   0xffffffff
   179e3:	mov    esi,DWORD PTR [ebp+0x8]
   179e6:	lea    eax,[esi+0xc]
   179e9:	push   eax
   179ea:	lea    ecx,[ebp-0x24]
   179ed:	call   0x134d0
   179f2:	push   0xffffffff
   179f4:	mov    eax,DWORD PTR [ebp-0x20]
   179f7:	lea    eax,[eax+esi*1+0xd]
   179fb:	push   eax
   179fc:	lea    ecx,[ebp-0x2c]
   179ff:	call   0x134d0
   17a04:	push   0xffffffff
   17a06:	push   0x1df18
   17a0b:	lea    ecx,[ebp-0x34]
   17a0e:	call   0x129d2
   17a13:	lea    eax,[ebp-0x34]
   17a16:	push   eax
   17a17:	lea    eax,[ebp-0x2c]
   17a1a:	push   eax
   17a1b:	call   0x19806
   17a20:	mov    BYTE PTR [ebp-0x19],al
   17a23:	push   DWORD PTR [ebp-0x34]
   17a26:	call   0x1da56
   17a2b:	pop    ecx
   17a2c:	lea    eax,[ebp-0x24]
   17a2f:	mov    ecx,DWORD PTR ds:0x77728
   17a35:	push   eax
   17a36:	cmp    BYTE PTR [ebp-0x19],bl
   17a39:	je     0x17a42
   17a3b:	call   0x15a28
   17a40:	jmp    0x17a52
   17a42:	call   0x1701c
   17a47:	lea    ecx,[ebp-0x2c]
   17a4a:	push   ecx
   17a4b:	mov    ecx,eax
   17a4d:	call   0x12896
   17a52:	mov    DWORD PTR [esi+0x8],ebx
   17a55:	push   DWORD PTR [ebp-0x2c]
   17a58:	call   0x1da56
   17a5d:	push   DWORD PTR [ebp-0x24]
   17a60:	call   0x1da56
   17a65:	pop    ecx
   17a66:	pop    ecx
   17a67:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a6e:	jmp    0x17a8a
   17a70:	xor    eax,eax
   17a72:	inc    eax
   17a73:	ret    
   17a74:	mov    esp,DWORD PTR [ebp-0x18]
   17a77:	mov    eax,DWORD PTR [ebp+0x8]
   17a7a:	mov    DWORD PTR [eax+0x8],0x4
   17a81:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a88:	xor    ebx,ebx
   17a8a:	push   ebx
   17a8b:	push   0x77758
   17a90:	call   DWORD PTR ds:0x1f01c
   17a96:	call   0x1db4d
   17a9b:	ret    0x4
   17a9e:	int3   
   17a9f:	int3   
   17aa0:	int3   
   17aa1:	int3   
   17aa2:	int3   
   17aa3:	int3   
   17aa4:	push   0x848
   17aa9:	push   0x772f8
   17aae:	call   0x1de10
   17ab3:	xor    ebx,ebx
   17ab5:	mov    BYTE PTR [ebp-0x81d],bl
   17abb:	xor    eax,eax
   17abd:	mov    WORD PTR [ebp-0x81c],ax
   17ac4:	push   0x7fe
   17ac9:	push   ebx
   17aca:	lea    eax,[ebp-0x81a]
   17ad0:	push   eax
   17ad1:	call   0x1dacc
   17ad6:	add    esp,0xc
   17ad9:	push   0x1e84e
   17ade:	push   0x15
   17ae0:	push   0x1e822
   17ae5:	call   0x16ddc
   17aea:	mov    edx,eax
   17aec:	mov    cx,WORD PTR [eax]
   17aef:	inc    eax
   17af0:	inc    eax
   17af1:	cmp    cx,bx
   17af4:	jne    0x17aec
   17af6:	sub    eax,edx
   17af8:	lea    edi,[ebp-0x81c]
   17afe:	dec    edi
   17aff:	dec    edi
   17b00:	mov    cx,WORD PTR [edi+0x2]
   17b04:	inc    edi
   17b05:	inc    edi
   17b06:	cmp    cx,bx
   17b09:	jne    0x17b00
   17b0b:	mov    ecx,eax
   17b0d:	mov    esi,edx
   17b0f:	shr    ecx,0x2
   17b12:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b14:	mov    ecx,eax
   17b16:	and    ecx,0x3
   17b19:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b1b:	mov    eax,0x77608
   17b20:	mov    edx,eax
   17b22:	mov    cx,WORD PTR [eax]
   17b25:	inc    eax
   17b26:	inc    eax
   17b27:	cmp    cx,bx
   17b2a:	jne    0x17b22
   17b2c:	sub    eax,edx
   17b2e:	lea    edi,[ebp-0x81c]
   17b34:	dec    edi
   17b35:	dec    edi
   17b36:	mov    cx,WORD PTR [edi+0x2]
   17b3a:	inc    edi
   17b3b:	inc    edi
   17b3c:	cmp    cx,bx
   17b3f:	jne    0x17b36
   17b41:	mov    ecx,eax
   17b43:	mov    esi,edx
   17b45:	shr    ecx,0x2
   17b48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b4a:	mov    ecx,eax
   17b4c:	and    ecx,0x3
   17b4f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b51:	push   0x1e7e8
   17b56:	push   0x4
   17b58:	push   0x1e5c0
   17b5d:	call   0x16ddc
   17b62:	mov    edx,eax
   17b64:	mov    cx,WORD PTR [eax]
   17b67:	inc    eax
   17b68:	inc    eax
   17b69:	cmp    cx,bx
   17b6c:	jne    0x17b64
   17b6e:	sub    eax,edx
   17b70:	lea    edi,[ebp-0x81c]
   17b76:	dec    edi
   17b77:	dec    edi
   17b78:	mov    cx,WORD PTR [edi+0x2]
   17b7c:	inc    edi
   17b7d:	inc    edi
   17b7e:	cmp    cx,bx
   17b81:	jne    0x17b78
   17b83:	mov    ecx,eax
   17b85:	mov    esi,edx
   17b87:	shr    ecx,0x2
   17b8a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b8c:	mov    ecx,eax
   17b8e:	and    ecx,0x3
   17b91:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b93:	lea    eax,[ebp-0x81c]
   17b99:	push   eax
   17b9a:	lea    eax,[ebp-0x858]
   17ba0:	push   eax
   17ba1:	call   DWORD PTR ds:0x1f008
   17ba7:	mov    DWORD PTR [ebp-0x824],ebx
   17bad:	xor    eax,eax
   17baf:	lea    edi,[ebp-0x84c]
   17bb5:	stos   DWORD PTR es:[edi],eax
   17bb6:	stos   DWORD PTR es:[edi],eax
   17bb7:	stos   DWORD PTR es:[edi],eax
   17bb8:	stos   DWORD PTR es:[edi],eax
   17bb9:	stos   DWORD PTR es:[edi],eax
   17bba:	mov    DWORD PTR [ebp-0x830],ebx
   17bc0:	xor    eax,eax
   17bc2:	lea    edi,[ebp-0x82c]
   17bc8:	stos   DWORD PTR es:[edi],eax
   17bc9:	mov    DWORD PTR [ebp-0x850],0x18
   17bd3:	mov    DWORD PTR [ebp-0x84c],ebx
   17bd9:	mov    DWORD PTR [ebp-0x844],0x240
   17be3:	lea    eax,[ebp-0x858]
   17be9:	mov    DWORD PTR [ebp-0x848],eax
   17bef:	mov    DWORD PTR [ebp-0x840],ebx
   17bf5:	mov    DWORD PTR [ebp-0x83c],ebx
   17bfb:	push   ebx
   17bfc:	push   ebx
   17bfd:	push   0x60
   17bff:	push   0x1
   17c01:	push   ebx
   17c02:	push   0x80
   17c07:	push   ebx
   17c08:	lea    eax,[ebp-0x830]
   17c0e:	push   eax
   17c0f:	lea    eax,[ebp-0x850]
   17c15:	push   eax
   17c16:	push   0x100001
   17c1b:	lea    eax,[ebp-0x824]
   17c21:	push   eax
   17c22:	call   0x116de
   17c27:	call   eax
   17c29:	cmp    eax,ebx
   17c2b:	jge    0x17c34
   17c2d:	xor    al,al
   17c2f:	jmp    0x17cca
   17c34:	mov    DWORD PTR [ebp-0x4],ebx
   17c37:	mov    esi,DWORD PTR [ebp+0xc]
   17c3a:	mov    eax,0x10000
   17c3f:	cmp    esi,eax
   17c41:	jbe    0x17c45
   17c43:	mov    esi,eax
   17c45:	push   esi
   17c46:	call   0x11d78
   17c4b:	pop    ecx
   17c4c:	mov    DWORD PTR [ebp-0x828],eax
   17c52:	mov    DWORD PTR [ebp-0x838],ebx
   17c58:	xor    eax,eax
   17c5a:	lea    edi,[ebp-0x834]
   17c60:	stos   DWORD PTR es:[edi],eax
   17c61:	push   ebx
   17c62:	lea    eax,[ebp-0x838]
   17c68:	push   eax
   17c69:	push   esi
   17c6a:	push   DWORD PTR [ebp-0x828]
   17c70:	lea    eax,[ebp-0x830]
   17c76:	push   eax
   17c77:	push   ebx
   17c78:	push   ebx
   17c79:	push   ebx
   17c7a:	push   DWORD PTR [ebp-0x824]
   17c80:	call   0x1197e
   17c85:	call   eax
   17c87:	cmp    eax,ebx
   17c89:	jl     0x17cb0
   17c8b:	mov    ecx,DWORD PTR [ebp-0x82c]
   17c91:	mov    edi,DWORD PTR [ebp+0x8]
   17c94:	mov    esi,DWORD PTR [ebp-0x828]
   17c9a:	xor    eax,eax
   17c9c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17c9e:	sete   al
   17ca1:	mov    BYTE PTR [ebp-0x81d],al
   17ca7:	jmp    0x17cb0
   17ca9:	xor    eax,eax
   17cab:	inc    eax
   17cac:	ret    
   17cad:	mov    esp,DWORD PTR [ebp-0x18]
   17cb0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17cb7:	push   DWORD PTR [ebp-0x824]
   17cbd:	call   0x117da
   17cc2:	call   eax
   17cc4:	mov    al,BYTE PTR [ebp-0x81d]
   17cca:	call   0x1de58
   17ccf:	ret    0x8
   17cd2:	int3   
   17cd3:	int3   
   17cd4:	int3   
   17cd5:	int3   
   17cd6:	int3   
   17cd7:	int3   
   17cd8:	push   0x874
   17cdd:	push   0x77318
   17ce2:	call   0x1de10
   17ce7:	mov    eax,DWORD PTR [ebp+0x8]
   17cea:	mov    DWORD PTR [ebp-0x830],eax
   17cf0:	xor    ebx,ebx
   17cf2:	mov    BYTE PTR [ebp-0x81d],bl
   17cf8:	xor    eax,eax
   17cfa:	mov    WORD PTR [ebp-0x81c],ax
   17d01:	push   0x7fe
   17d06:	push   ebx
   17d07:	lea    eax,[ebp-0x81a]
   17d0d:	push   eax
   17d0e:	call   0x1dacc
   17d13:	add    esp,0xc
   17d16:	push   0x1e8ae
   17d1b:	push   0x15
   17d1d:	push   0x1e822
   17d22:	call   0x16ddc
   17d27:	mov    edx,eax
   17d29:	mov    cx,WORD PTR [eax]
   17d2c:	inc    eax
   17d2d:	inc    eax
   17d2e:	cmp    cx,bx
   17d31:	jne    0x17d29
   17d33:	sub    eax,edx
   17d35:	lea    edi,[ebp-0x81c]
   17d3b:	dec    edi
   17d3c:	dec    edi
   17d3d:	mov    cx,WORD PTR [edi+0x2]
   17d41:	inc    edi
   17d42:	inc    edi
   17d43:	cmp    cx,bx
   17d46:	jne    0x17d3d
   17d48:	mov    ecx,eax
   17d4a:	mov    esi,edx
   17d4c:	shr    ecx,0x2
   17d4f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d51:	mov    ecx,eax
   17d53:	and    ecx,0x3
   17d56:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d58:	mov    eax,0x77608
   17d5d:	mov    edx,eax
   17d5f:	mov    cx,WORD PTR [eax]
   17d62:	inc    eax
   17d63:	inc    eax
   17d64:	cmp    cx,bx
   17d67:	jne    0x17d5f
   17d69:	sub    eax,edx
   17d6b:	lea    edi,[ebp-0x81c]
   17d71:	dec    edi
   17d72:	dec    edi
   17d73:	mov    cx,WORD PTR [edi+0x2]
   17d77:	inc    edi
   17d78:	inc    edi
   17d79:	cmp    cx,bx
   17d7c:	jne    0x17d73
   17d7e:	mov    ecx,eax
   17d80:	mov    esi,edx
   17d82:	shr    ecx,0x2
   17d85:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d87:	mov    ecx,eax
   17d89:	and    ecx,0x3
   17d8c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d8e:	push   0x1e88a
   17d93:	push   0x4
   17d95:	push   0x1e5c0
   17d9a:	call   0x16ddc
   17d9f:	mov    edx,eax
   17da1:	mov    cx,WORD PTR [eax]
   17da4:	inc    eax
   17da5:	inc    eax
   17da6:	cmp    cx,bx
   17da9:	jne    0x17da1
   17dab:	sub    eax,edx
   17dad:	lea    edi,[ebp-0x81c]
   17db3:	dec    edi
   17db4:	dec    edi
   17db5:	mov    cx,WORD PTR [edi+0x2]
   17db9:	inc    edi
   17dba:	inc    edi
   17dbb:	cmp    cx,bx
   17dbe:	jne    0x17db5
   17dc0:	mov    ecx,eax
   17dc2:	mov    esi,edx
   17dc4:	shr    ecx,0x2
   17dc7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17dc9:	mov    ecx,eax
   17dcb:	and    ecx,0x3
   17dce:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17dd0:	lea    eax,[ebp-0x81c]
   17dd6:	push   eax
   17dd7:	lea    eax,[ebp-0x884]
   17ddd:	push   eax
   17dde:	call   DWORD PTR ds:0x1f008
   17de4:	mov    DWORD PTR [ebp-0x824],ebx
   17dea:	xor    eax,eax
   17dec:	lea    edi,[ebp-0x850]
   17df2:	stos   DWORD PTR es:[edi],eax
   17df3:	stos   DWORD PTR es:[edi],eax
   17df4:	stos   DWORD PTR es:[edi],eax
   17df5:	stos   DWORD PTR es:[edi],eax
   17df6:	stos   DWORD PTR es:[edi],eax
   17df7:	mov    DWORD PTR [ebp-0x82c],ebx
   17dfd:	xor    eax,eax
   17dff:	lea    edi,[ebp-0x828]
   17e05:	stos   DWORD PTR es:[edi],eax
   17e06:	mov    DWORD PTR [ebp-0x854],0x18
   17e10:	mov    DWORD PTR [ebp-0x850],ebx
   17e16:	mov    DWORD PTR [ebp-0x848],0x240
   17e20:	lea    eax,[ebp-0x884]
   17e26:	mov    DWORD PTR [ebp-0x84c],eax
   17e2c:	mov    DWORD PTR [ebp-0x844],ebx
   17e32:	mov    DWORD PTR [ebp-0x840],ebx
   17e38:	push   ebx
   17e39:	push   ebx
   17e3a:	push   0x60
   17e3c:	push   ebx
   17e3d:	push   ebx
   17e3e:	push   0x80
   17e43:	push   ebx
   17e44:	lea    eax,[ebp-0x82c]
   17e4a:	push   eax
   17e4b:	lea    eax,[ebp-0x854]
   17e51:	push   eax
   17e52:	push   0x100002
   17e57:	lea    eax,[ebp-0x824]
   17e5d:	push   eax
   17e5e:	call   0x116de
   17e63:	call   eax
   17e65:	cmp    eax,ebx
   17e67:	jge    0x17e70
   17e69:	xor    al,al
   17e6b:	jmp    0x17f76
   17e70:	mov    DWORD PTR [ebp-0x4],ebx
   17e73:	xor    eax,eax
   17e75:	lea    edi,[ebp-0x82c]
   17e7b:	stos   DWORD PTR es:[edi],eax
   17e7c:	stos   DWORD PTR es:[edi],eax
   17e7d:	xor    edi,edi
   17e7f:	mov    esi,0x10000
   17e84:	mov    DWORD PTR [ebp-0x834],edi
   17e8a:	mov    eax,DWORD PTR [ebp+0xc]
   17e8d:	cmp    edi,eax
   17e8f:	jae    0x17eda
   17e91:	mov    DWORD PTR [ebp-0x83c],ebx
   17e97:	mov    DWORD PTR [ebp-0x83c],edi
   17e9d:	mov    DWORD PTR [ebp-0x838],ebx
   17ea3:	sub    eax,edi
   17ea5:	cmp    eax,esi
   17ea7:	jb     0x17eab
   17ea9:	mov    eax,esi
   17eab:	push   ebx
   17eac:	push   ebx
   17ead:	push   eax
   17eae:	mov    eax,DWORD PTR [ebp-0x830]
   17eb4:	add    eax,edi
   17eb6:	push   eax
   17eb7:	lea    eax,[ebp-0x82c]
   17ebd:	push   eax
   17ebe:	push   ebx
   17ebf:	push   ebx
   17ec0:	push   ebx
   17ec1:	push   DWORD PTR [ebp-0x824]
   17ec7:	call   0x119d2
   17ecc:	call   eax
   17ece:	cmp    eax,ebx
   17ed0:	jl     0x17f5c
   17ed6:	add    edi,esi
   17ed8:	jmp    0x17e84
   17eda:	mov    BYTE PTR [ebp-0x81d],0x1
   17ee1:	mov    DWORD PTR [ebp-0x87c],ebx
   17ee7:	push   0x9
   17ee9:	pop    ecx
   17eea:	xor    eax,eax
   17eec:	lea    edi,[ebp-0x878]
   17ef2:	rep stos DWORD PTR es:[edi],eax
   17ef4:	mov    eax,DWORD PTR [ebp+0x10]
   17ef7:	mov    DWORD PTR [ebp-0x86c],eax
   17efd:	mov    ecx,DWORD PTR [ebp+0x14]
   17f00:	mov    DWORD PTR [ebp-0x868],ecx
   17f06:	mov    DWORD PTR [ebp-0x874],eax
   17f0c:	mov    DWORD PTR [ebp-0x870],ecx
   17f12:	mov    DWORD PTR [ebp-0x864],eax
   17f18:	mov    DWORD PTR [ebp-0x860],ecx
   17f1e:	mov    DWORD PTR [ebp-0x87c],eax
   17f24:	mov    DWORD PTR [ebp-0x878],ecx
   17f2a:	mov    DWORD PTR [ebp-0x85c],0x80
   17f34:	push   0x4
   17f36:	push   0x28
   17f38:	lea    eax,[ebp-0x87c]
   17f3e:	push   eax
   17f3f:	lea    eax,[ebp-0x82c]
   17f45:	push   eax
   17f46:	push   DWORD PTR [ebp-0x824]
   17f4c:	call   0x119a8
   17f51:	call   eax
   17f53:	jmp    0x17f5c
   17f55:	xor    eax,eax
   17f57:	inc    eax
   17f58:	ret    
   17f59:	mov    esp,DWORD PTR [ebp-0x18]
   17f5c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17f63:	push   DWORD PTR [ebp-0x824]
   17f69:	call   0x117da
   17f6e:	call   eax
   17f70:	mov    al,BYTE PTR [ebp-0x81d]
   17f76:	call   0x1de58
   17f7b:	ret    0x10
   17f7e:	int3   
   17f7f:	int3   
   17f80:	int3   
   17f81:	int3   
   17f82:	int3   
   17f83:	int3   
   17f84:	push   0x874
   17f89:	push   0x77338
   17f8e:	call   0x1de10
   17f93:	xor    ebx,ebx
   17f95:	mov    BYTE PTR [ebp-0x81d],bl
   17f9b:	mov    BYTE PTR [ebp-0x81e],bl
   17fa1:	mov    DWORD PTR [ebp-0x828],ebx
   17fa7:	mov    DWORD PTR [ebp-0x824],ebx
   17fad:	xor    eax,eax
   17faf:	mov    WORD PTR [ebp-0x81c],ax
   17fb6:	push   0x7fe
   17fbb:	push   ebx
   17fbc:	lea    eax,[ebp-0x81a]
   17fc2:	push   eax
   17fc3:	call   0x1dacc
   17fc8:	add    esp,0xc
   17fcb:	push   0x1e95a
   17fd0:	push   0x1d
   17fd2:	push   0x1e91e
   17fd7:	call   0x16ddc
   17fdc:	mov    edx,eax
   17fde:	mov    cx,WORD PTR [eax]
   17fe1:	inc    eax
   17fe2:	inc    eax
   17fe3:	cmp    cx,bx
   17fe6:	jne    0x17fde
   17fe8:	sub    eax,edx
   17fea:	lea    edi,[ebp-0x81c]
   17ff0:	dec    edi
   17ff1:	dec    edi
   17ff2:	mov    cx,WORD PTR [edi+0x2]
   17ff6:	inc    edi
   17ff7:	inc    edi
   17ff8:	cmp    cx,bx
   17ffb:	jne    0x17ff2
   17ffd:	mov    ecx,eax
   17fff:	mov    esi,edx
   18001:	shr    ecx,0x2
   18004:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18006:	mov    ecx,eax
   18008:	and    ecx,0x3
   1800b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1800d:	mov    eax,0x77648
   18012:	mov    edx,eax
   18014:	mov    cx,WORD PTR [eax]
   18017:	inc    eax
   18018:	inc    eax
   18019:	cmp    cx,bx
   1801c:	jne    0x18014
   1801e:	sub    eax,edx
   18020:	lea    edi,[ebp-0x81c]
   18026:	dec    edi
   18027:	dec    edi
   18028:	mov    cx,WORD PTR [edi+0x2]
   1802c:	inc    edi
   1802d:	inc    edi
   1802e:	cmp    cx,bx
   18031:	jne    0x18028
   18033:	mov    ecx,eax
   18035:	mov    esi,edx
   18037:	shr    ecx,0x2
   1803a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1803c:	mov    ecx,eax
   1803e:	and    ecx,0x3
   18041:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18043:	push   0x1e8ee
   18048:	push   0x4
   1804a:	push   0x1e8e4
   1804f:	call   0x16ddc
   18054:	mov    edx,eax
   18056:	mov    cx,WORD PTR [eax]
   18059:	inc    eax
   1805a:	inc    eax
   1805b:	cmp    cx,bx
   1805e:	jne    0x18056
   18060:	sub    eax,edx
   18062:	lea    edi,[ebp-0x81c]
   18068:	dec    edi
   18069:	dec    edi
   1806a:	mov    cx,WORD PTR [edi+0x2]
   1806e:	inc    edi
   1806f:	inc    edi
   18070:	cmp    cx,bx
   18073:	jne    0x1806a
   18075:	mov    ecx,eax
   18077:	mov    esi,edx
   18079:	shr    ecx,0x2
   1807c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1807e:	mov    ecx,eax
   18080:	and    ecx,0x3
   18083:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18085:	lea    eax,[ebp-0x81c]
   1808b:	push   eax
   1808c:	lea    eax,[ebp-0x85c]
   18092:	push   eax
   18093:	call   DWORD PTR ds:0x1f008
   18099:	xor    eax,eax
   1809b:	lea    edi,[ebp-0x850]
   180a1:	stos   DWORD PTR es:[edi],eax
   180a2:	stos   DWORD PTR es:[edi],eax
   180a3:	stos   DWORD PTR es:[edi],eax
   180a4:	stos   DWORD PTR es:[edi],eax
   180a5:	stos   DWORD PTR es:[edi],eax
   180a6:	mov    DWORD PTR [ebp-0x834],ebx
   180ac:	xor    eax,eax
   180ae:	lea    edi,[ebp-0x830]
   180b4:	stos   DWORD PTR es:[edi],eax
   180b5:	mov    DWORD PTR [ebp-0x82c],ebx
   180bb:	mov    DWORD PTR [ebp-0x854],0x18
   180c5:	mov    DWORD PTR [ebp-0x850],ebx
   180cb:	mov    DWORD PTR [ebp-0x848],0x240
   180d5:	lea    eax,[ebp-0x85c]
   180db:	mov    DWORD PTR [ebp-0x84c],eax
   180e1:	mov    DWORD PTR [ebp-0x844],ebx
   180e7:	mov    DWORD PTR [ebp-0x840],ebx
   180ed:	push   ebx
   180ee:	push   ebx
   180ef:	push   ebx
   180f0:	push   0x1
   180f2:	push   0x7
   180f4:	push   ebx
   180f5:	push   ebx
   180f6:	lea    eax,[ebp-0x834]
   180fc:	push   eax
   180fd:	lea    eax,[ebp-0x854]
   18103:	push   eax
   18104:	push   0x89
   18109:	lea    eax,[ebp-0x82c]
   1810f:	push   eax
   18110:	call   0x116de
   18115:	call   eax
   18117:	cmp    eax,ebx
   18119:	jge    0x18122
   1811b:	xor    al,al
   1811d:	jmp    0x18242
   18122:	mov    DWORD PTR [ebp-0x884],ebx
   18128:	push   0x9
   1812a:	pop    ecx
   1812b:	xor    eax,eax
   1812d:	lea    edi,[ebp-0x880]
   18133:	rep stos DWORD PTR es:[edi],eax
   18135:	mov    DWORD PTR [ebp-0x4],ebx
   18138:	push   0x4
   1813a:	push   0x28
   1813c:	lea    eax,[ebp-0x884]
   18142:	push   eax
   18143:	lea    eax,[ebp-0x834]
   18149:	push   eax
   1814a:	push   DWORD PTR [ebp-0x82c]
   18150:	call   0x119fc
   18155:	call   eax
   18157:	cmp    eax,ebx
   18159:	jl     0x181d7
   1815b:	mov    esi,0x54570
   18160:	push   esi
   18161:	call   0x11d78
   18166:	mov    edi,eax
   18168:	push   esi
   18169:	push   0x1f0a0
   1816e:	push   edi
   1816f:	call   0x1dad8
   18174:	add    esp,0x10
   18177:	push   0x25
   18179:	push   0x73610
   1817e:	push   esi
   1817f:	push   edi
   18180:	call   0x109b0
   18185:	lea    eax,[ebp-0x828]
   1818b:	push   eax
   1818c:	push   esi
   1818d:	push   edi
   1818e:	lea    eax,[ebp-0x83c]
   18194:	push   eax
   18195:	call   0x1a078
   1819a:	mov    BYTE PTR [ebp-0x83c],bl
   181a0:	mov    eax,DWORD PTR [ebp-0x838]
   181a6:	mov    DWORD PTR [ebp-0x824],eax
   181ac:	cmp    eax,ebx
   181ae:	je     0x181c9
   181b0:	push   DWORD PTR [ebp-0x828]
   181b6:	push   eax
   181b7:	call   0x17aa4
   181bc:	test   al,al
   181be:	je     0x181c9
   181c0:	mov    BYTE PTR [ebp-0x81d],0x1
   181c7:	jmp    0x181d7
   181c9:	mov    BYTE PTR [ebp-0x81d],0x1
   181d0:	mov    BYTE PTR [ebp-0x81e],0x1
   181d7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181de:	jmp    0x181f0
   181e0:	xor    eax,eax
   181e2:	inc    eax
   181e3:	ret    
   181e4:	mov    esp,DWORD PTR [ebp-0x18]
   181e7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181ee:	xor    ebx,ebx
   181f0:	push   DWORD PTR [ebp-0x82c]
   181f6:	call   0x117da
   181fb:	call   eax
   181fd:	cmp    BYTE PTR [ebp-0x81e],bl
   18203:	je     0x18228
   18205:	push   DWORD PTR [ebp-0x880]
   1820b:	push   DWORD PTR [ebp-0x884]
   18211:	push   DWORD PTR [ebp-0x828]
   18217:	push   DWORD PTR [ebp-0x824]
   1821d:	call   0x17cd8
   18222:	mov    BYTE PTR [ebp-0x81d],al
   18228:	cmp    DWORD PTR [ebp-0x824],ebx
   1822e:	je     0x1823c
   18230:	push   DWORD PTR [ebp-0x824]
   18236:	call   0x1da56
   1823b:	pop    ecx
   1823c:	mov    al,BYTE PTR [ebp-0x81d]
   18242:	call   0x1de58
   18247:	ret    
   18248:	int3   
   18249:	int3   
   1824a:	int3   
   1824b:	int3   
   1824c:	int3   
   1824d:	int3   
   1824e:	mov    edi,edi
   18250:	push   ebp
   18251:	mov    ebp,esp
   18253:	sub    esp,0xbc
   18259:	mov    eax,ds:0x7771c
   1825e:	xor    eax,ebp
   18260:	mov    DWORD PTR [ebp-0x4],eax
   18263:	push   ebx
   18264:	push   edi
   18265:	push   0x1e994
   1826a:	push   0xb
   1826c:	push   0x1e97c
   18271:	call   0x16ddc
   18276:	push   eax
   18277:	lea    eax,[ebp-0xbc]
   1827d:	push   eax
   1827e:	call   DWORD PTR ds:0x1f008
   18284:	xor    eax,eax
   18286:	lea    edi,[ebp-0xb0]
   1828c:	stos   DWORD PTR es:[edi],eax
   1828d:	stos   DWORD PTR es:[edi],eax
   1828e:	stos   DWORD PTR es:[edi],eax
   1828f:	stos   DWORD PTR es:[edi],eax
   18290:	xor    ebx,ebx
   18292:	push   ebx
   18293:	stos   DWORD PTR es:[edi],eax
   18294:	push   ebx
   18295:	push   ebx
   18296:	push   0x1
   18298:	xor    eax,eax
   1829a:	push   0x7
   1829c:	push   ebx
   1829d:	mov    DWORD PTR [ebp-0x94],ebx
   182a3:	lea    edi,[ebp-0x90]
   182a9:	stos   DWORD PTR es:[edi],eax
   182aa:	lea    eax,[ebp-0xbc]
   182b0:	mov    DWORD PTR [ebp-0xac],eax
   182b6:	push   ebx
   182b7:	lea    eax,[ebp-0x94]
   182bd:	push   eax
   182be:	lea    eax,[ebp-0xb4]
   182c4:	push   eax
   182c5:	push   0x89
   182ca:	lea    eax,[ebp-0x8c]
   182d0:	push   eax
   182d1:	mov    DWORD PTR [ebp-0x8c],ebx
   182d7:	mov    DWORD PTR [ebp-0xb4],0x18
   182e1:	mov    DWORD PTR [ebp-0xb0],ebx
   182e7:	mov    DWORD PTR [ebp-0xa8],0x240
   182f1:	mov    DWORD PTR [ebp-0xa4],ebx
   182f7:	mov    DWORD PTR [ebp-0xa0],ebx
   182fd:	call   0x116de
   18302:	call   eax
   18304:	test   eax,eax
   18306:	jge    0x1830f
   18308:	xor    al,al
   1830a:	jmp    0x183cb
   1830f:	push   esi
   18310:	mov    esi,0x20c
   18315:	push   esi
   18316:	call   0x11d78
   1831b:	pop    ecx
   1831c:	push   0x1
   1831e:	mov    edi,eax
   18320:	push   esi
   18321:	push   edi
   18322:	lea    eax,[ebp-0x94]
   18328:	push   eax
   18329:	push   DWORD PTR [ebp-0x8c]
   1832f:	cmp    edi,ebx
   18331:	setne  BYTE PTR [ebp-0x9c]
   18338:	call   0x116b4
   1833d:	call   eax
   1833f:	push   DWORD PTR [ebp-0x8c]
   18345:	mov    esi,eax
   18347:	call   0x117da
   1834c:	call   eax
   1834e:	cmp    esi,ebx
   18350:	pop    esi
   18351:	jge    0x18364
   18353:	cmp    BYTE PTR [ebp-0x9c],bl
   18359:	je     0x18308
   1835b:	push   edi
   1835c:	call   0x1da56
   18361:	pop    ecx
   18362:	jmp    0x18308
   18364:	push   0x6
   18366:	push   0x1
   18368:	lea    eax,[ebp-0x84]
   1836e:	push   eax
   1836f:	push   DWORD PTR [edi+0x8]
   18372:	call   0x107b2
   18377:	mov    ecx,0x77608
   1837c:	lea    eax,[ebp-0x84]
   18382:	mov    dx,WORD PTR [eax]
   18385:	cmp    dx,WORD PTR [ecx]
   18388:	jne    0x183a8
   1838a:	cmp    dx,bx
   1838d:	je     0x183a4
   1838f:	mov    dx,WORD PTR [eax+0x2]
   18393:	cmp    dx,WORD PTR [ecx+0x2]
   18397:	jne    0x183a8
   18399:	add    eax,0x4
   1839c:	add    ecx,0x4
   1839f:	cmp    dx,bx
   183a2:	jne    0x18382
   183a4:	xor    eax,eax
   183a6:	jmp    0x183ad
   183a8:	sbb    eax,eax
   183aa:	sbb    eax,0xffffffff
   183ad:	cmp    eax,ebx
   183af:	sete   BYTE PTR [ebp-0x85]
   183b6:	cmp    BYTE PTR [ebp-0x9c],bl
   183bc:	je     0x183c5
   183be:	push   edi
   183bf:	call   0x1da56
   183c4:	pop    ecx
   183c5:	mov    al,BYTE PTR [ebp-0x85]
   183cb:	mov    ecx,DWORD PTR [ebp-0x4]
   183ce:	pop    edi
   183cf:	xor    ecx,ebp
   183d1:	pop    ebx
   183d2:	call   0x1da73
   183d7:	leave  
   183d8:	ret    
   183d9:	int3   
   183da:	int3   
   183db:	int3   
   183dc:	int3   
   183dd:	int3   
   183de:	call   0x1a294
   183e3:	push   0x1ea22
   183e8:	push   0x34
   183ea:	push   0x1e9b8
   183ef:	call   0x16ddc
   183f4:	mov    edx,0x778b8
   183f9:	movzx  ecx,WORD PTR [eax]
   183fc:	inc    eax
   183fd:	mov    WORD PTR [edx],cx
   18400:	inc    eax
   18401:	inc    edx
   18402:	inc    edx
   18403:	test   cx,cx
   18406:	jne    0x183f9
   18408:	ret    
   18409:	int3   
   1840a:	int3   
   1840b:	int3   
   1840c:	int3   
   1840d:	int3   
   1840e:	mov    edi,edi
   18410:	push   ebp
   18411:	mov    ebp,esp
   18413:	sub    esp,0xf4
   18419:	push   ebx
   1841a:	push   esi
   1841b:	push   edi
   1841c:	mov    esi,ecx
   1841e:	call   0x17098
   18423:	push   DWORD PTR [ebp+0x8]
   18426:	lea    eax,[ebp-0x4]
   18429:	lea    edi,[esi+0x4]
   1842c:	push   eax
   1842d:	mov    ecx,edi
   1842f:	call   0x13b1c
   18434:	mov    ebx,DWORD PTR [ebp-0x4]
   18437:	cmp    ebx,DWORD PTR [esi+0x8]
   1843a:	je     0x18485
   1843c:	mov    eax,DWORD PTR [esi+0x18]
   1843f:	lea    ecx,[ebp+0x8]
   18442:	mov    DWORD PTR [ebp+0x8],eax
   18445:	call   0x13afc
   1844a:	mov    edi,DWORD PTR [eax]
   1844c:	lea    eax,[ebx+0x58]
   1844f:	add    esi,0x14
   18452:	inc    edi
   18453:	push   eax
   18454:	mov    ecx,esi
   18456:	mov    DWORD PTR [ebp+0x8],edi
   18459:	mov    DWORD PTR [ebp-0x4],eax
   1845c:	call   0x14756
   18461:	lea    eax,[ebp+0x8]
   18464:	push   eax
   18465:	lea    eax,[ebp-0xc]
   18468:	push   eax
   18469:	mov    ecx,esi
   1846b:	call   0x166a4
   18470:	push   DWORD PTR [ebp+0xc]
   18473:	lea    ecx,[ebx+0x18]
   18476:	call   0x12924
   1847b:	mov    eax,DWORD PTR [ebp-0x4]
   1847e:	mov    DWORD PTR [eax],edi
   18480:	jmp    0x1851a
   18485:	lea    ecx,[ebp-0x54]
   18488:	call   0x138fa
   1848d:	xor    eax,eax
   1848f:	cmp    DWORD PTR [esi+0x20],eax
   18492:	je     0x184a5
   18494:	mov    eax,DWORD PTR [esi+0x18]
   18497:	lea    ecx,[ebp-0x4]
   1849a:	mov    DWORD PTR [ebp-0x4],eax
   1849d:	call   0x13afc
   184a2:	mov    eax,DWORD PTR [eax]
   184a4:	inc    eax
   184a5:	push   DWORD PTR [ebp+0xc]
   184a8:	lea    ecx,[ebp-0x54]
   184ab:	mov    DWORD PTR [ebp-0x4],eax
   184ae:	mov    DWORD PTR [ebp-0x14],eax
   184b1:	call   0x12924
   184b6:	lea    eax,[ebp-0x54]
   184b9:	push   eax
   184ba:	push   DWORD PTR [ebp+0x8]
   184bd:	lea    ecx,[ebp-0xf4]
   184c3:	call   0x13882
   184c8:	lea    eax,[ebp-0xf4]
   184ce:	push   eax
   184cf:	lea    ecx,[ebp-0xa4]
   184d5:	call   0x144b6
   184da:	lea    eax,[ebp-0xa4]
   184e0:	push   eax
   184e1:	lea    eax,[ebp-0xc]
   184e4:	push   eax
   184e5:	mov    ecx,edi
   184e7:	call   0x16b78
   184ec:	lea    ecx,[ebp-0xa4]
   184f2:	call   0x12998
   184f7:	lea    ecx,[ebp-0xf4]
   184fd:	call   0x12998
   18502:	lea    eax,[ebp-0x4]
   18505:	push   eax
   18506:	lea    eax,[ebp-0xc]
   18509:	push   eax
   1850a:	lea    ecx,[esi+0x14]
   1850d:	call   0x166a4
   18512:	lea    ecx,[ebp-0x54]
   18515:	call   0x11dac
   1851a:	pop    edi
   1851b:	pop    esi
   1851c:	pop    ebx
   1851d:	leave  
   1851e:	ret    0x8
   18521:	int3   
   18522:	int3   
   18523:	int3   
   18524:	int3   
   18525:	int3   
   18526:	mov    edi,edi
   18528:	push   ebp
   18529:	mov    ebp,esp
   1852b:	sub    esp,0x10
   1852e:	call   0x1a202
   18533:	test   al,al
   18535:	jne    0x1853f
   18537:	mov    eax,DWORD PTR [ebp+0x8]
   1853a:	jmp    0x185d3
   1853f:	push   esi
   18540:	mov    esi,DWORD PTR [ebp+0x8]
   18543:	push   0xffffffff
   18545:	push   esi
   18546:	lea    ecx,[ebp-0x8]
   18549:	call   0x12ab2
   1854e:	mov    ecx,DWORD PTR ds:0x78450
   18554:	lea    eax,[ebp-0x8]
   18557:	push   eax
   18558:	lea    eax,[ebp+0x8]
   1855b:	push   eax
   1855c:	call   0x13e84
   18561:	mov    eax,DWORD PTR [ebp+0x8]
   18564:	mov    ecx,DWORD PTR ds:0x78450
   1856a:	cmp    eax,DWORD PTR [ecx+0x4]
   1856d:	jne    0x1859e
   1856f:	lea    eax,[ebp-0x8]
   18572:	push   eax
   18573:	lea    ecx,[ebp-0x10]
   18576:	call   0x13532
   1857b:	mov    ecx,DWORD PTR ds:0x78450
   18581:	lea    eax,[ebp-0x10]
   18584:	push   eax
   18585:	lea    eax,[ebp-0x8]
   18588:	push   eax
   18589:	call   0x1714a
   1858e:	mov    ecx,eax
   18590:	call   0x12a30
   18595:	push   DWORD PTR [ebp-0x10]
   18598:	call   0x1da56
   1859d:	pop    ecx
   1859e:	mov    ecx,DWORD PTR ds:0x78450
   185a4:	lea    eax,[ebp-0x8]
   185a7:	push   eax
   185a8:	lea    eax,[ebp+0x8]
   185ab:	push   eax
   185ac:	call   0x13e84
   185b1:	mov    eax,DWORD PTR [ebp+0x8]
   185b4:	mov    ecx,DWORD PTR ds:0x78450
   185ba:	cmp    eax,DWORD PTR [ecx+0x4]
   185bd:	je     0x185c2
   185bf:	mov    esi,DWORD PTR [eax+0x14]
   185c2:	call   0x1a21e
   185c7:	push   DWORD PTR [ebp-0x8]
   185ca:	call   0x1da56
   185cf:	pop    ecx
   185d0:	mov    eax,esi
   185d2:	pop    esi
   185d3:	leave  
   185d4:	ret    0x4
   185d7:	int3   
   185d8:	int3   
   185d9:	int3   
   185da:	int3   
   185db:	int3   
   185dc:	push   0x33c
   185e1:	push   0x77358
   185e6:	call   0x1de10
   185eb:	mov    esi,DWORD PTR [ebp+0xc]
   185ee:	mov    DWORD PTR [ebp-0x32c],esi
   185f4:	call   DWORD PTR ds:0x1f000
   185fa:	xor    ebx,ebx
   185fc:	cmp    BYTE PTR [ebp+0x10],bl
   185ff:	jne    0x1863d
   18601:	push   esi
   18602:	mov    ecx,DWORD PTR ds:0x77750
   18608:	call   0x15744
   1860d:	mov    edi,eax
   1860f:	push   esi
   18610:	mov    ecx,DWORD PTR ds:0x77750
   18616:	call   0x1636e
   1861b:	mov    eax,edi
   1861d:	dec    eax
   1861e:	je     0x18632
   18620:	dec    eax
   18621:	je     0x1862e
   18623:	dec    eax
   18624:	jne    0x18818
   1862a:	push   0xa
   1862c:	jmp    0x18633
   1862e:	push   0x2
   18630:	jmp    0x18633
   18632:	push   ebx
   18633:	call   0x10fa2
   18638:	jmp    0x18818
   1863d:	mov    DWORD PTR [ebp-0x320],ebx
   18643:	xor    eax,eax
   18645:	lea    edi,[ebp-0x326]
   1864b:	stos   DWORD PTR es:[edi],eax
   1864c:	stos   WORD PTR es:[edi],ax
   1864e:	xor    eax,eax
   18650:	mov    WORD PTR [ebp-0x21c],ax
   18657:	push   0x1fc
   1865c:	push   ebx
   1865d:	lea    eax,[ebp-0x21a]
   18663:	push   eax
   18664:	call   0x1dacc
   18669:	add    esp,0xc
   1866c:	lea    eax,[ebp-0x21c]
   18672:	mov    DWORD PTR [ebp-0x324],eax
   18678:	xor    eax,eax
   1867a:	mov    WORD PTR [ebp-0x328],ax
   18681:	mov    eax,0x1fe
   18686:	mov    WORD PTR [ebp-0x326],ax
   1868d:	mov    DWORD PTR [ebp-0x34c],0x18
   18697:	mov    DWORD PTR [ebp-0x348],ebx
   1869d:	mov    DWORD PTR [ebp-0x340],0x200
   186a7:	mov    DWORD PTR [ebp-0x344],ebx
   186ad:	mov    DWORD PTR [ebp-0x33c],ebx
   186b3:	mov    DWORD PTR [ebp-0x338],ebx
   186b9:	mov    DWORD PTR [ebp-0x334],esi
   186bf:	mov    DWORD PTR [ebp-0x330],ebx
   186c5:	lea    eax,[ebp-0x334]
   186cb:	push   eax
   186cc:	lea    eax,[ebp-0x34c]
   186d2:	push   eax
   186d3:	push   0x1f0fff
   186d8:	lea    eax,[ebp-0x320]
   186de:	push   eax
   186df:	call   0x11510
   186e4:	call   eax
   186e6:	test   eax,eax
   186e8:	jl     0x18818
   186ee:	lea    eax,[ebp-0x328]
   186f4:	push   eax
   186f5:	push   DWORD PTR [ebp-0x320]
   186fb:	call   0x11e70
   18700:	cmp    eax,ebx
   18702:	jl     0x1880b
   18708:	movzx  eax,WORD PTR [ebp-0x328]
   1870f:	shr    eax,1
   18711:	xor    ecx,ecx
   18713:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   1871b:	push   DWORD PTR [ebp-0x320]
   18721:	call   0x11f02
   18726:	lea    eax,[ebp-0x21c]
   1872c:	push   eax
   1872d:	call   0x10d72
   18732:	cmp    eax,ebx
   18734:	je     0x18759
   18736:	push   eax
   18737:	push   esi
   18738:	mov    ecx,DWORD PTR ds:0x77750
   1873e:	call   0x16c20
   18743:	push   DWORD PTR [ebp-0x320]
   18749:	push   DWORD PTR [ebp-0x320]
   1874f:	call   0x11f02
   18754:	push   eax
   18755:	push   esi
   18756:	push   ebx
   18757:	jmp    0x187d7
   18759:	push   0x1ea74
   1875e:	push   0x9
   18760:	push   0x1ea60
   18765:	call   0x16ddc
   1876a:	push   eax
   1876b:	lea    eax,[ebp-0x328]
   18771:	push   eax
   18772:	call   0x10dc2
   18777:	test   al,al
   18779:	je     0x187de
   1877b:	cmp    DWORD PTR ds:0x7842c,ebx
   18781:	jne    0x187b4
   18783:	mov    DWORD PTR ds:0x7842c,0x1
   1878d:	mov    DWORD PTR [ebp-0x4],ebx
   18790:	call   0x17f84
   18795:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1879c:	jmp    0x187b4
   1879e:	xor    eax,eax
   187a0:	inc    eax
   187a1:	ret    
   187a2:	mov    esp,DWORD PTR [ebp-0x18]
   187a5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   187ac:	xor    ebx,ebx
   187ae:	mov    esi,DWORD PTR [ebp-0x32c]
   187b4:	cmp    DWORD PTR ds:0x781a4,ebx
   187ba:	jne    0x187c2
   187bc:	mov    DWORD PTR ds:0x781a4,esi
   187c2:	push   DWORD PTR [ebp-0x320]
   187c8:	push   DWORD PTR [ebp-0x320]
   187ce:	call   0x11f02
   187d3:	push   eax
   187d4:	push   esi
   187d5:	push   0x1
   187d7:	call   0x13442
   187dc:	jmp    0x1880b
   187de:	lea    eax,[ebp-0x31c]
   187e4:	push   eax
   187e5:	call   0x10f52
   187ea:	test   al,al
   187ec:	je     0x1880b
   187ee:	lea    eax,[ebp-0x31c]
   187f4:	push   eax
   187f5:	lea    eax,[ebp-0x328]
   187fb:	push   eax
   187fc:	call   0x10dc2
   18801:	test   al,al
   18803:	je     0x1880b
   18805:	push   esi
   18806:	call   0x11f32
   1880b:	push   DWORD PTR [ebp-0x320]
   18811:	call   0x117da
   18816:	call   eax
   18818:	call   0x1de58
   1881d:	ret    0xc
   18820:	int3   
   18821:	int3   
   18822:	int3   
   18823:	int3   
   18824:	int3   
   18825:	int3   
   18826:	mov    edi,edi
   18828:	push   ebp
   18829:	mov    ebp,esp
   1882b:	push   ecx
   1882c:	cli    
   1882d:	mov    eax,cr0
   18830:	mov    DWORD PTR [ebp-0x4],eax
   18833:	and    eax,0xfffeffff
   18838:	mov    cr0,eax
   1883b:	push   0x1787e
   18840:	push   DWORD PTR ds:0x780ec
   18846:	call   0x198ce
   1884b:	push   0x0
   1884d:	push   0x185dc
   18852:	mov    ds:0x780f0,eax
   18857:	call   0x1158e
   1885c:	call   eax
   1885e:	push   0x1776a
   18863:	call   0x1153a
   18868:	call   eax
   1886a:	mov    eax,DWORD PTR [ebp-0x4]
   1886d:	mov    cr0,eax
   18870:	sti    
   18871:	leave  
   18872:	ret    
   18873:	int3   
   18874:	int3   
   18875:	int3   
   18876:	int3   
   18877:	int3   
   18878:	mov    edi,edi
   1887a:	push   ebp
   1887b:	mov    ebp,esp
   1887d:	sub    esp,0x40
   18880:	push   ebx
   18881:	mov    ebx,DWORD PTR [ebp+0x8]
   18884:	push   esi
   18885:	test   bl,0x20
   18888:	je     0x188c5
   1888a:	push   DWORD PTR [ebp+0x28]
   1888d:	mov    esi,DWORD PTR ds:0x780e8
   18893:	push   DWORD PTR [ebp+0x24]
   18896:	lea    ecx,[ebp-0x40]
   18899:	push   DWORD PTR [ebp+0x20]
   1889c:	push   DWORD PTR [ebp+0x1c]
   1889f:	push   DWORD PTR [ebp+0x18]
   188a2:	push   DWORD PTR [ebp+0x14]
   188a5:	push   DWORD PTR [ebp+0xc]
   188a8:	call   0x13952
   188ad:	push   eax
   188ae:	push   DWORD PTR [ebp+0xc]
   188b1:	mov    ecx,esi
   188b3:	call   0x1840e
   188b8:	lea    ecx,[ebp-0x40]
   188bb:	call   0x11dac
   188c0:	jmp    0x189f9
   188c5:	push   DWORD PTR [ebp+0xc]
   188c8:	mov    ecx,DWORD PTR ds:0x780e0
   188ce:	call   0x159f2
   188d3:	test   eax,eax
   188d5:	jne    0x188e3
   188d7:	test   bl,0x1
   188da:	jne    0x188e3
   188dc:	xor    al,al
   188de:	jmp    0x189fb
   188e3:	push   DWORD PTR [ebp+0xc]
   188e6:	mov    ecx,DWORD PTR ds:0x780e0
   188ec:	call   0x16fc8
   188f1:	mov    esi,eax
   188f3:	test   bl,0x1
   188f6:	je     0x1892f
   188f8:	mov    eax,DWORD PTR [ebp+0x20]
   188fb:	push   DWORD PTR [ebp+0xc]
   188fe:	mov    ecx,esi
   18900:	mov    DWORD PTR [esi+0x20],eax
   18903:	call   0x12896
   18908:	push   DWORD PTR [ebp+0x10]
   1890b:	lea    ecx,[esi+0x8]
   1890e:	call   0x12896
   18913:	push   DWORD PTR [ebp+0x14]
   18916:	lea    ecx,[esi+0x10]
   18919:	call   0x12896
   1891e:	push   DWORD PTR [ebp+0x18]
   18921:	lea    ecx,[esi+0x18]
   18924:	call   0x12896
   18929:	mov    eax,DWORD PTR [ebp+0x24]
   1892c:	mov    DWORD PTR [esi+0x24],eax
   1892f:	mov    DWORD PTR [ebp+0x20],ebx
   18932:	and    DWORD PTR [ebp+0x20],0x2
   18936:	je     0x18946
   18938:	mov    eax,DWORD PTR [ebp+0x28]
   1893b:	mov    ecx,DWORD PTR [eax]
   1893d:	mov    DWORD PTR [esi+0x28],ecx
   18940:	mov    eax,DWORD PTR [eax+0x4]
   18943:	mov    DWORD PTR [esi+0x2c],eax
   18946:	mov    DWORD PTR [ebp+0x14],ebx
   18949:	and    DWORD PTR [ebp+0x14],0x4
   1894d:	je     0x1895d
   1894f:	mov    eax,DWORD PTR [ebp+0x2c]
   18952:	mov    ecx,DWORD PTR [eax]
   18954:	mov    DWORD PTR [esi+0x30],ecx
   18957:	mov    eax,DWORD PTR [eax+0x4]
   1895a:	mov    DWORD PTR [esi+0x34],eax
   1895d:	test   bl,0x10
   18960:	je     0x189f9
   18966:	cmp    DWORD PTR [esi+0xc],0x0
   1896a:	jbe    0x189f9
   18970:	mov    eax,ds:0x780e0
   18975:	mov    eax,DWORD PTR [eax+0x4]
   18978:	push   edi
   18979:	mov    edi,DWORD PTR [eax]
   1897b:	mov    DWORD PTR [ebp+0x18],edi
   1897e:	cmp    edi,eax
   18980:	je     0x189f8
   18982:	push   DWORD PTR [ebp+0xc]
   18985:	lea    ebx,[edi+0x10]
   18988:	push   ebx
   18989:	call   0x19816
   1898e:	test   al,al
   18990:	je     0x189e3
   18992:	lea    eax,[esi+0x8]
   18995:	push   eax
   18996:	add    edi,0x20
   18999:	push   edi
   1899a:	call   0x19806
   1899f:	test   al,al
   189a1:	je     0x189e3
   189a3:	cmp    DWORD PTR [ebp+0x20],0x0
   189a7:	je     0x189c3
   189a9:	mov    ecx,DWORD PTR ds:0x780e0
   189af:	push   ebx
   189b0:	call   0x16fc8
   189b5:	mov    ecx,DWORD PTR [ebp+0x28]
   189b8:	mov    edx,DWORD PTR [ecx]
   189ba:	mov    DWORD PTR [eax+0x28],edx
   189bd:	mov    ecx,DWORD PTR [ecx+0x4]
   189c0:	mov    DWORD PTR [eax+0x2c],ecx
   189c3:	cmp    DWORD PTR [ebp+0x14],0x0
   189c7:	je     0x189e3
   189c9:	mov    ecx,DWORD PTR ds:0x780e0
   189cf:	push   ebx
   189d0:	call   0x16fc8
   189d5:	mov    ecx,DWORD PTR [ebp+0x2c]
   189d8:	mov    edx,DWORD PTR [ecx]
   189da:	mov    DWORD PTR [eax+0x30],edx
   189dd:	mov    ecx,DWORD PTR [ecx+0x4]
   189e0:	mov    DWORD PTR [eax+0x34],ecx
   189e3:	lea    ecx,[ebp+0x18]
   189e6:	call   0x135d8
   189eb:	mov    edi,DWORD PTR [ebp+0x18]
   189ee:	mov    eax,ds:0x780e0
   189f3:	cmp    edi,DWORD PTR [eax+0x4]
   189f6:	jne    0x18982
   189f8:	pop    edi
   189f9:	mov    al,0x1
   189fb:	pop    esi
   189fc:	pop    ebx
   189fd:	leave  
   189fe:	ret    0x28
   18a01:	int3   
   18a02:	int3   
   18a03:	int3   
   18a04:	int3   
   18a05:	int3   
   18a06:	push   0x40
   18a08:	push   0x77378
   18a0d:	call   0x1db08
   18a12:	xor    esi,esi
   18a14:	push   esi
   18a15:	push   esi
   18a16:	push   esi
   18a17:	push   esi
   18a18:	push   0x77758
   18a1d:	call   DWORD PTR ds:0x1f020
   18a23:	cmp    eax,esi
   18a25:	jge    0x18a36
   18a27:	mov    eax,DWORD PTR [ebp+0x8]
   18a2a:	mov    DWORD PTR [eax+0x8],0x4
   18a31:	jmp    0x18b3d
   18a36:	mov    DWORD PTR [ebp-0x4],esi
   18a39:	or     ebx,0xffffffff
   18a3c:	push   ebx
   18a3d:	mov    esi,DWORD PTR [ebp+0x8]
   18a40:	lea    eax,[esi+0x28]
   18a43:	push   eax
   18a44:	lea    ecx,[ebp-0x38]
   18a47:	call   0x134d0
   18a4c:	mov    edi,DWORD PTR [ebp-0x34]
   18a4f:	inc    edi
   18a50:	push   ebx
   18a51:	lea    eax,[edi+esi*1+0x28]
   18a55:	push   eax
   18a56:	lea    ecx,[ebp-0x30]
   18a59:	call   0x134d0
   18a5e:	mov    eax,DWORD PTR [ebp-0x2c]
   18a61:	lea    edi,[edi+eax*1+0x1]
   18a65:	push   ebx
   18a66:	lea    eax,[edi+esi*1+0x28]
   18a6a:	push   eax
   18a6b:	lea    ecx,[ebp-0x28]
   18a6e:	call   0x134d0
   18a73:	mov    eax,DWORD PTR [ebp-0x24]
   18a76:	lea    edi,[edi+eax*1+0x1]
   18a7a:	push   ebx
   18a7b:	lea    eax,[edi+esi*1+0x28]
   18a7f:	push   eax
   18a80:	lea    ecx,[ebp-0x20]
   18a83:	call   0x134d0
   18a88:	mov    eax,DWORD PTR [ebp-0x1c]
   18a8b:	lea    eax,[edi+eax*1+0x1]
   18a8f:	push   ebx
   18a90:	lea    eax,[eax+esi*1+0x28]
   18a94:	push   eax
   18a95:	lea    ecx,[ebp-0x50]
   18a98:	call   0x134d0
   18a9d:	mov    eax,DWORD PTR [esi+0xc]
   18aa0:	mov    ecx,DWORD PTR [esi+0x18]
   18aa3:	mov    DWORD PTR [ebp-0x48],ecx
   18aa6:	mov    ecx,DWORD PTR [esi+0x1c]
   18aa9:	mov    DWORD PTR [ebp-0x44],ecx
   18aac:	mov    ecx,DWORD PTR [esi+0x20]
   18aaf:	mov    DWORD PTR [ebp-0x40],ecx
   18ab2:	mov    ecx,DWORD PTR [esi+0x24]
   18ab5:	mov    DWORD PTR [ebp-0x3c],ecx
   18ab8:	mov    ecx,DWORD PTR [esi+0x10]
   18abb:	lea    edx,[ebp-0x40]
   18abe:	push   edx
   18abf:	lea    edx,[ebp-0x48]
   18ac2:	push   edx
   18ac3:	push   ecx
   18ac4:	push   eax
   18ac5:	lea    eax,[ebp-0x50]
   18ac8:	push   eax
   18ac9:	lea    eax,[ebp-0x20]
   18acc:	push   eax
   18acd:	lea    eax,[ebp-0x28]
   18ad0:	push   eax
   18ad1:	lea    eax,[ebp-0x30]
   18ad4:	push   eax
   18ad5:	lea    eax,[ebp-0x38]
   18ad8:	push   eax
   18ad9:	push   DWORD PTR [esi+0x4]
   18adc:	call   0x18878
   18ae1:	xor    ecx,ecx
   18ae3:	test   al,al
   18ae5:	sete   cl
   18ae8:	mov    DWORD PTR [esi+0x8],ecx
   18aeb:	push   DWORD PTR [ebp-0x50]
   18aee:	call   0x1da56
   18af3:	push   DWORD PTR [ebp-0x20]
   18af6:	call   0x1da56
   18afb:	push   DWORD PTR [ebp-0x28]
   18afe:	call   0x1da56
   18b03:	push   DWORD PTR [ebp-0x30]
   18b06:	call   0x1da56
   18b0b:	push   DWORD PTR [ebp-0x38]
   18b0e:	call   0x1da56
   18b13:	add    esp,0x14
   18b16:	jmp    0x18b29
   18b18:	xor    eax,eax
   18b1a:	inc    eax
   18b1b:	ret    
   18b1c:	mov    esp,DWORD PTR [ebp-0x18]
   18b1f:	mov    eax,DWORD PTR [ebp+0x8]
   18b22:	mov    DWORD PTR [eax+0x8],0x4
   18b29:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18b30:	push   0x0
   18b32:	push   0x77758
   18b37:	call   DWORD PTR ds:0x1f01c
   18b3d:	call   0x1db4d
   18b42:	ret    0x4
   18b45:	int3   
   18b46:	int3   
   18b47:	int3   
   18b48:	int3   
   18b49:	int3   
   18b4a:	push   0x2c
   18b4c:	push   0x77398
   18b51:	call   0x1db08
   18b56:	xor    edi,edi
   18b58:	mov    DWORD PTR [ebp-0x24],edi
   18b5b:	mov    ebx,DWORD PTR [ebp+0xc]
   18b5e:	mov    DWORD PTR [ebx+0x18],edi
   18b61:	mov    DWORD PTR [ebx+0x1c],edi
   18b64:	mov    eax,DWORD PTR [ebx+0x60]
   18b67:	cmp    BYTE PTR [eax],0xe
   18b6a:	jne    0x1900a
   18b70:	mov    eax,DWORD PTR [eax+0xc]
   18b73:	mov    DWORD PTR [ebx+0x1c],0x84c
   18b7a:	mov    ecx,0x22c068
   18b7f:	cmp    eax,ecx
   18b81:	ja     0x18ebb
   18b87:	je     0x18eac
   18b8d:	add    ecx,0xffffffd0
   18b90:	cmp    eax,ecx
   18b92:	ja     0x18caf
   18b98:	je     0x18c96
   18b9e:	sub    eax,0x22c020
   18ba3:	je     0x18c60
   18ba9:	push   0x4
   18bab:	pop    esi
   18bac:	sub    eax,esi
   18bae:	je     0x18c2a
   18bb0:	sub    eax,esi
   18bb2:	je     0x18c0f
   18bb4:	sub    eax,esi
   18bb6:	je     0x18c02
   18bb8:	sub    eax,esi
   18bba:	je     0x18bd1
   18bbc:	sub    eax,esi
   18bbe:	jne    0x18faa
   18bc4:	push   DWORD PTR [ebx+0xc]
   18bc7:	call   0x16c62
   18bcc:	jmp    0x19007
   18bd1:	mov    esi,DWORD PTR [ebx+0xc]
   18bd4:	mov    eax,DWORD PTR [esi]
   18bd6:	add    eax,0x28
   18bd9:	mov    DWORD PTR [ebx+0x1c],eax
   18bdc:	push   0xffffffff
   18bde:	lea    eax,[esi+0x28]
   18be1:	push   eax
   18be2:	lea    ecx,[ebp-0x34]
   18be5:	call   0x129d2
   18bea:	push   esi
   18beb:	lea    eax,[ebp-0x34]
   18bee:	push   eax
   18bef:	call   0x164dc
   18bf4:	push   DWORD PTR [ebp-0x34]
   18bf7:	call   0x1da56
   18bfc:	pop    ecx
   18bfd:	jmp    0x1900a
   18c02:	push   DWORD PTR [ebx+0xc]
   18c05:	call   0x18a06
   18c0a:	jmp    0x19007
   18c0f:	mov    ecx,DWORD PTR ds:0x780e0
   18c15:	call   0x1674a
   18c1a:	mov    ecx,DWORD PTR ds:0x777b4
   18c20:	call   0x167dc
   18c25:	jmp    0x1900a
   18c2a:	mov    eax,DWORD PTR [ebx+0xc]
   18c2d:	mov    DWORD PTR [ebx+0x1c],0x10
   18c34:	mov    ecx,DWORD PTR [eax]
   18c36:	cmp    ecx,edi
   18c38:	jl     0x1900a
   18c3e:	cmp    ecx,0x6
   18c41:	jge    0x1900a
   18c47:	mov    edx,DWORD PTR [eax+0x8]
   18c4a:	mov    DWORD PTR [ecx*8+0x78130],edx
   18c51:	mov    eax,DWORD PTR [eax+0xc]
   18c54:	mov    DWORD PTR [ecx*8+0x78134],eax
   18c5b:	jmp    0x1900a
   18c60:	mov    eax,DWORD PTR [ebx+0xc]
   18c63:	mov    DWORD PTR [ebx+0x1c],0x10
   18c6a:	mov    ecx,DWORD PTR [eax]
   18c6c:	cmp    ecx,edi
   18c6e:	jl     0x1900a
   18c74:	cmp    ecx,0x6
   18c77:	jge    0x1900a
   18c7d:	mov    edx,DWORD PTR [ecx*8+0x78130]
   18c84:	mov    DWORD PTR [eax+0x8],edx
   18c87:	mov    ecx,DWORD PTR [ecx*8+0x78134]
   18c8e:	mov    DWORD PTR [eax+0xc],ecx
   18c91:	jmp    0x1900a
   18c96:	mov    eax,DWORD PTR [ebx+0xc]
   18c99:	mov    ecx,DWORD PTR [eax]
   18c9b:	add    ecx,0xc
   18c9e:	mov    DWORD PTR [ebx+0x1c],ecx
   18ca1:	push   eax
   18ca2:	push   DWORD PTR [eax+0x4]
   18ca5:	call   0x15886
   18caa:	jmp    0x1900a
   18caf:	sub    eax,0x22c03c
   18cb4:	je     0x18e28
   18cba:	sub    eax,0x10
   18cbd:	je     0x18e1e
   18cc3:	push   0x4
   18cc5:	pop    esi
   18cc6:	sub    eax,esi
   18cc8:	je     0x18d1e
   18cca:	sub    eax,0xc
   18ccd:	je     0x18d06
   18ccf:	sub    eax,esi
   18cd1:	je     0x18ce8
   18cd3:	sub    eax,esi
   18cd5:	jne    0x18faa
   18cdb:	push   DWORD PTR [ebx+0xc]
   18cde:	call   0x1275c
   18ce3:	jmp    0x19007
   18ce8:	mov    DWORD PTR [ebx+0x1c],0x8
   18cef:	mov    ebx,DWORD PTR [ebx+0xc]
   18cf2:	mov    eax,ds:0x78114
   18cf7:	mov    DWORD PTR [ebx],eax
   18cf9:	mov    eax,ds:0x78118
   18cfe:	mov    DWORD PTR [ebx+0x4],eax
   18d01:	jmp    0x1900a
   18d06:	mov    eax,DWORD PTR [ebx+0xc]
   18d09:	mov    ecx,DWORD PTR [eax]
   18d0b:	mov    DWORD PTR ds:0x78114,ecx
   18d11:	mov    eax,DWORD PTR [eax+0x4]
   18d14:	mov    ds:0x78118,eax
   18d19:	jmp    0x19007
   18d1e:	mov    DWORD PTR [ebx+0x1c],edi
   18d21:	mov    esi,DWORD PTR [ebx+0xc]
   18d24:	mov    DWORD PTR [ebp-0x20],esi
   18d27:	push   0xffffffff
   18d29:	push   0x1df18
   18d2e:	lea    ecx,[ebp-0x2c]
   18d31:	call   0x129d2
   18d36:	xor    edi,edi
   18d38:	inc    edi
   18d39:	mov    DWORD PTR [esi+0x8],edi
   18d3c:	xor    eax,eax
   18d3e:	push   eax
   18d3f:	push   eax
   18d40:	push   eax
   18d41:	push   eax
   18d42:	push   0x77758
   18d47:	call   DWORD PTR ds:0x1f020
   18d4d:	test   eax,eax
   18d4f:	jge    0x18d59
   18d51:	push   DWORD PTR [ebp-0x2c]
   18d54:	jmp    0x18bf7
   18d59:	and    DWORD PTR [ebp-0x4],0x0
   18d5d:	mov    DWORD PTR [ebp-0x4],edi
   18d60:	mov    eax,DWORD PTR [esi]
   18d62:	add    eax,0x28
   18d65:	mov    DWORD PTR [ebx+0x1c],eax
   18d68:	mov    eax,ds:0x780e0
   18d6d:	mov    ebx,DWORD PTR [eax+0x4]
   18d70:	mov    eax,DWORD PTR [ebx]
   18d72:	mov    DWORD PTR [ebp+0xc],eax
   18d75:	and    DWORD PTR [ebp-0x1c],0x0
   18d79:	mov    edi,DWORD PTR [esi+0x28]
   18d7c:	cmp    DWORD PTR [ebp-0x1c],edi
   18d7f:	jge    0x18d93
   18d81:	cmp    DWORD PTR [ebp+0xc],ebx
   18d84:	je     0x18d93
   18d86:	lea    ecx,[ebp+0xc]
   18d89:	call   0x135d8
   18d8e:	inc    DWORD PTR [ebp-0x1c]
   18d91:	jmp    0x18d7c
   18d93:	mov    eax,DWORD PTR [ebp+0xc]
   18d96:	cmp    eax,ebx
   18d98:	je     0x18dac
   18d9a:	and    DWORD PTR [esi+0x8],0x0
   18d9e:	add    eax,0x10
   18da1:	push   eax
   18da2:	lea    ecx,[ebp-0x2c]
   18da5:	call   0x12896
   18daa:	jmp    0x18db3
   18dac:	mov    DWORD PTR [esi+0x8],0x1
   18db3:	and    DWORD PTR [esi+0x4],0x0
   18db7:	and    DWORD PTR [ebp-0x4],0x0
   18dbb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18dc2:	call   0x18e10
   18dc7:	cmp    DWORD PTR [esi+0x8],0x0
   18dcb:	jne    0x18d51
   18dcd:	push   esi
   18dce:	lea    eax,[ebp-0x2c]
   18dd1:	push   eax
   18dd2:	call   0x164dc
   18dd7:	jmp    0x18d51
   18ddc:	xor    eax,eax
   18dde:	inc    eax
   18ddf:	ret    
   18de0:	mov    esp,DWORD PTR [ebp-0x18]
   18de3:	mov    eax,DWORD PTR [ebp-0x20]
   18de6:	mov    DWORD PTR [eax+0x8],0x4
   18ded:	push   DWORD PTR [ebp-0x2c]
   18df0:	call   0x1da56
   18df5:	push   0xfffffffe
   18df7:	lea    eax,[ebp-0x10]
   18dfa:	push   eax
   18dfb:	push   0x7771c
   18e00:	call   0x1dccc
   18e05:	add    esp,0x10
   18e08:	jmp    0x1900a
   18e0d:	mov    esi,DWORD PTR [ebp-0x20]
   18e10:	push   0x0
   18e12:	push   0x77758
   18e17:	call   DWORD PTR ds:0x1f01c
   18e1d:	ret    
   18e1e:	call   0x12286
   18e23:	jmp    0x1900a
   18e28:	mov    eax,DWORD PTR [ebx+0xc]
   18e2b:	mov    ecx,DWORD PTR ds:0x77604
   18e31:	mov    esi,eax
   18e33:	sub    esi,ecx
   18e35:	push   0x2
   18e37:	pop    edi
   18e38:	movzx  edx,WORD PTR [ecx]
   18e3b:	mov    WORD PTR [esi+ecx*1],dx
   18e3f:	add    ecx,edi
   18e41:	test   dx,dx
   18e44:	jne    0x18e38
   18e46:	mov    ecx,0x77648
   18e4b:	lea    esi,[eax+0x50]
   18e4e:	sub    esi,ecx
   18e50:	movzx  edx,WORD PTR [ecx]
   18e53:	mov    WORD PTR [esi+ecx*1],dx
   18e57:	add    ecx,edi
   18e59:	test   dx,dx
   18e5c:	jne    0x18e50
   18e5e:	mov    ecx,0x77608
   18e63:	lea    esi,[eax+0x90]
   18e69:	sub    esi,ecx
   18e6b:	movzx  edx,WORD PTR [ecx]
   18e6e:	mov    WORD PTR [esi+ecx*1],dx
   18e72:	add    ecx,edi
   18e74:	test   dx,dx
   18e77:	jne    0x18e6b
   18e79:	mov    ecx,0x77688
   18e7e:	lea    esi,[eax+0xd0]
   18e84:	sub    esi,ecx
   18e86:	movzx  edx,WORD PTR [ecx]
   18e89:	mov    WORD PTR [esi+ecx*1],dx
   18e8d:	add    ecx,edi
   18e8f:	test   dx,dx
   18e92:	jne    0x18e86
   18e94:	lea    edi,[eax+0x40]
   18e97:	mov    esi,0x73638
   18e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18ea0:	mov    DWORD PTR [ebx+0x1c],0x110
   18ea7:	jmp    0x1900a
   18eac:	mov    eax,DWORD PTR [ebx+0xc]
   18eaf:	push   DWORD PTR [eax]
   18eb1:	call   0x10fa2
   18eb6:	jmp    0x19007
   18ebb:	mov    ecx,0x22c088
   18ec0:	cmp    eax,ecx
   18ec2:	ja     0x18f8c
   18ec8:	je     0x18f61
   18ece:	sub    eax,0x22c06c
   18ed3:	je     0x18f49
   18ed5:	push   0x4
   18ed7:	pop    esi
   18ed8:	sub    eax,esi
   18eda:	je     0x18f3c
   18edc:	push   0x8
   18ede:	pop    ecx
   18edf:	sub    eax,ecx
   18ee1:	je     0x18f2f
   18ee3:	sub    eax,esi
   18ee5:	je     0x18f17
   18ee7:	sub    eax,esi
   18ee9:	je     0x18f00
   18eeb:	sub    eax,esi
   18eed:	jne    0x18faa
   18ef3:	push   DWORD PTR [ebx+0xc]
   18ef6:	call   0x179ae
   18efb:	jmp    0x19007
   18f00:	mov    DWORD PTR [ebx+0x1c],ecx
   18f03:	mov    ebx,DWORD PTR [ebx+0xc]
   18f06:	mov    eax,ds:0x7811c
   18f0b:	mov    DWORD PTR [ebx],eax
   18f0d:	mov    eax,ds:0x78120
   18f12:	jmp    0x18cfe
   18f17:	mov    eax,DWORD PTR [ebx+0xc]
   18f1a:	mov    ecx,DWORD PTR [eax]
   18f1c:	mov    DWORD PTR ds:0x7811c,ecx
   18f22:	mov    eax,DWORD PTR [eax+0x4]
   18f25:	mov    ds:0x78120,eax
   18f2a:	jmp    0x19007
   18f2f:	push   DWORD PTR [ebx+0xc]
   18f32:	call   0x171c0
   18f37:	jmp    0x19007
   18f3c:	push   DWORD PTR [ebx+0xc]
   18f3f:	call   0x10f12
   18f44:	jmp    0x19007
   18f49:	mov    esi,DWORD PTR [ebx+0xc]
   18f4c:	push   DWORD PTR [esi]
   18f4e:	call   0x10fe6
   18f53:	mov    DWORD PTR [esi],eax
   18f55:	mov    DWORD PTR [ebx+0x1c],0x4
   18f5c:	jmp    0x1900a
   18f61:	mov    esi,DWORD PTR [ebx+0xc]
   18f64:	mov    eax,DWORD PTR [esi]
   18f66:	add    eax,0xc
   18f69:	mov    DWORD PTR [ebx+0x1c],eax
   18f6c:	push   0xffffffff
   18f6e:	lea    eax,[esi+0xc]
   18f71:	push   eax
   18f72:	lea    ecx,[ebp-0x3c]
   18f75:	call   0x129d2
   18f7a:	push   esi
   18f7b:	lea    eax,[ebp-0x3c]
   18f7e:	push   eax
   18f7f:	call   0x1579c
   18f84:	push   DWORD PTR [ebp-0x3c]
   18f87:	jmp    0x18bf7
   18f8c:	sub    eax,0x22c08c
   18f91:	je     0x18ff9
   18f93:	push   0x4
   18f95:	pop    esi
   18f96:	sub    eax,esi
   18f98:	je     0x18fe5
   18f9a:	sub    eax,esi
   18f9c:	je     0x18fde
   18f9e:	sub    eax,esi
   18fa0:	je     0x18fca
   18fa2:	sub    eax,esi
   18fa4:	je     0x18fc0
   18fa6:	sub    eax,esi
   18fa8:	je     0x18fb3
   18faa:	mov    DWORD PTR [ebp-0x24],0xc0000010
   18fb1:	jmp    0x19007
   18fb3:	push   DWORD PTR [ebx+0xc]
   18fb6:	call   0x1aab4
   18fbb:	mov    DWORD PTR [ebx+0x1c],esi
   18fbe:	jmp    0x1900a
   18fc0:	push   DWORD PTR [ebx+0xc]
   18fc3:	call   0x1b53a
   18fc8:	jmp    0x19007
   18fca:	mov    eax,DWORD PTR [ebx+0xc]
   18fcd:	mov    ecx,DWORD PTR [eax+0x4]
   18fd0:	add    ecx,0x8
   18fd3:	mov    DWORD PTR [ebx+0x1c],ecx
   18fd6:	push   eax
   18fd7:	call   0x1b808
   18fdc:	jmp    0x1900a
   18fde:	call   0x1b44a
   18fe3:	jmp    0x19007
   18fe5:	mov    eax,DWORD PTR [ebx+0xc]
   18fe8:	mov    ecx,DWORD PTR [eax+0x4]
   18feb:	add    ecx,0x8
   18fee:	mov    DWORD PTR [ebx+0x1c],ecx
   18ff1:	push   eax
   18ff2:	call   0x1a894
   18ff7:	jmp    0x1900a
   18ff9:	push   DWORD PTR [ebx+0xc]
   18ffc:	call   0x1286a
   19001:	push   eax
   19002:	call   0x1b66c
   19007:	mov    DWORD PTR [ebx+0x1c],edi
   1900a:	mov    eax,DWORD PTR [ebp-0x24]
   1900d:	call   0x1db4d
   19012:	ret    0x8
   19015:	int3   
   19016:	int3   
   19017:	int3   
   19018:	int3   
   19019:	int3   
   1901a:	mov    edi,edi
   1901c:	push   ebp
   1901d:	mov    ebp,esp
   1901f:	push   esi
   19020:	mov    esi,ecx
   19022:	mov    BYTE PTR [esi+0x8],0x0
   19026:	call   0x1565e
   1902b:	lea    ecx,[esi+0x10]
   1902e:	mov    BYTE PTR [ecx+0x8],0x0
   19032:	call   0x149a6
   19037:	mov    eax,DWORD PTR [ebp+0x8]
   1903a:	mov    DWORD PTR [esi+0x20],eax
   1903d:	mov    eax,DWORD PTR [ebp+0xc]
   19040:	mov    DWORD PTR [esi+0x24],eax
   19043:	mov    eax,esi
   19045:	pop    esi
   19046:	pop    ebp
   19047:	ret    0x8
   1904a:	int3   
   1904b:	int3   
   1904c:	int3   
   1904d:	int3   
   1904e:	int3   
   1904f:	int3   
   19050:	push   0xc
   19052:	push   0x773c0
   19057:	call   0x1db08
   1905c:	and    DWORD PTR [ebp-0x4],0x0
   19060:	push   DWORD PTR [ebp+0xc]
   19063:	push   DWORD PTR [ebp+0x8]
   19066:	call   0x18b4a
   1906b:	mov    esi,eax
   1906d:	jmp    0x19082
   1906f:	xor    eax,eax
   19071:	inc    eax
   19072:	ret    
   19073:	mov    esp,DWORD PTR [ebp-0x18]
   19076:	push   0xd
   19078:	call   0x10fa2
   1907d:	mov    esi,0xc0000001
   19082:	mov    DWORD PTR [ebp-0x1c],esi
   19085:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1908c:	cmp    esi,0x103
   19092:	je     0x190a2
   19094:	mov    ecx,DWORD PTR [ebp+0xc]
   19097:	mov    DWORD PTR [ecx+0x18],esi
   1909a:	xor    dl,dl
   1909c:	call   DWORD PTR ds:0x1f044
   190a2:	mov    eax,esi
   190a4:	call   0x1db4d
   190a9:	ret    0x8
   190ac:	int3   
   190ad:	int3   
   190ae:	int3   
   190af:	int3   
   190b0:	int3   
   190b1:	int3   
   190b2:	push   0x854
   190b7:	push   0x773e0
   190bc:	call   0x1de10
   190c1:	mov    esi,DWORD PTR [ebp+0x8]
   190c4:	mov    DWORD PTR [ebp-0x830],esi
   190ca:	mov    edi,DWORD PTR [ebp+0xc]
   190cd:	call   0x183de
   190d2:	call   0x11ba0
   190d7:	test   eax,eax
   190d9:	je     0x196dd
   190df:	xor    ebx,ebx
   190e1:	mov    DWORD PTR [ebp-0x834],ebx
   190e7:	call   0x1824e
   190ec:	cmp    al,bl
   190ee:	jne    0x1930e
   190f4:	mov    DWORD PTR [ebp-0x4],ebx
   190f7:	push   ebx
   190f8:	push   0x780b8
   190fd:	call   0x11b22
   19102:	call   eax
   19104:	push   0x10
   19106:	call   0x11d78
   1910b:	pop    ecx
   1910c:	cmp    eax,ebx
   1910e:	je     0x19127
   19110:	lea    ecx,[ebp-0x81d]
   19116:	push   ecx
   19117:	lea    ecx,[ebp-0x81d]
   1911d:	push   ecx
   1911e:	mov    ecx,eax
   19120:	call   0x16afe
   19125:	jmp    0x19129
   19127:	xor    eax,eax
   19129:	mov    ecx,eax
   1912b:	mov    DWORD PTR ds:0x780e0,ecx
   19131:	call   0x1674a
   19136:	push   edi
   19137:	push   0x1ecee
   1913c:	lea    eax,[ebp-0x41c]
   19142:	push   eax
   19143:	call   0x1dafc
   19148:	add    esp,0xc
   1914b:	push   0xffffffff
   1914d:	lea    eax,[ebp-0x41c]
   19153:	push   eax
   19154:	lea    ecx,[ebp-0x828]
   1915a:	call   0x129d2
   1915f:	lea    eax,[ebp-0x828]
   19165:	push   eax
   19166:	mov    ecx,DWORD PTR ds:0x780e0
   1916c:	call   0x16fc8
   19171:	mov    edi,eax
   19173:	push   DWORD PTR [ebp-0x828]
   19179:	call   0x1da56
   1917e:	pop    ecx
   1917f:	lea    eax,[ebp-0x83c]
   19185:	push   eax
   19186:	call   DWORD PTR ds:0x1f04c
   1918c:	push   ebx
   1918d:	push   0x989680
   19192:	push   DWORD PTR [ebp-0x838]
   19198:	push   DWORD PTR [ebp-0x83c]
   1919e:	call   0x1dac0
   191a3:	inc    eax
   191a4:	mov    DWORD PTR [edi+0x20],eax
   191a7:	cmp    eax,ebx
   191a9:	jge    0x191b2
   191ab:	mov    DWORD PTR [edi+0x20],0x1
   191b2:	push   0xffffffff
   191b4:	push   0x1ecc0
   191b9:	push   0x4
   191bb:	push   0x1ecba
   191c0:	call   0x16ed2
   191c5:	push   eax
   191c6:	lea    ecx,[ebp-0x828]
   191cc:	call   0x134d0
   191d1:	lea    eax,[ebp-0x828]
   191d7:	push   eax
   191d8:	mov    ecx,edi
   191da:	call   0x12896
   191df:	push   DWORD PTR [ebp-0x828]
   191e5:	call   0x1da56
   191ea:	mov    DWORD PTR [esp],0x1ec96
   191f1:	push   0x4
   191f3:	push   0x1ec8c
   191f8:	call   0x16ddc
   191fd:	mov    DWORD PTR [ebp-0x824],eax
   19203:	lea    ecx,[eax+0x2]
   19206:	mov    dx,WORD PTR [eax]
   19209:	inc    eax
   1920a:	inc    eax
   1920b:	cmp    dx,bx
   1920e:	jne    0x19206
   19210:	sub    eax,ecx
   19212:	sar    eax,1
   19214:	add    eax,eax
   19216:	mov    WORD PTR [ebp-0x826],ax
   1921d:	mov    WORD PTR [ebp-0x828],ax
   19224:	mov    DWORD PTR [ebp-0x854],0x18
   1922e:	mov    DWORD PTR [ebp-0x850],ebx
   19234:	mov    DWORD PTR [ebp-0x848],0x40
   1923e:	lea    eax,[ebp-0x828]
   19244:	mov    DWORD PTR [ebp-0x84c],eax
   1924a:	mov    DWORD PTR [ebp-0x844],ebx
   19250:	mov    DWORD PTR [ebp-0x840],ebx
   19256:	mov    eax,DWORD PTR [ebp-0x824]
   1925c:	lea    ecx,[eax+0x2]
   1925f:	mov    dx,WORD PTR [eax]
   19262:	inc    eax
   19263:	inc    eax
   19264:	cmp    dx,bx
   19267:	jne    0x1925f
   19269:	sub    eax,ecx
   1926b:	sar    eax,1
   1926d:	mov    DWORD PTR [ebp-0x834],eax
   19273:	push   0xffffffff
   19275:	push   0x1ec66
   1927a:	push   0x8
   1927c:	push   0x1ec5c
   19281:	call   0x16ed2
   19286:	push   eax
   19287:	lea    ecx,[ebp-0x828]
   1928d:	call   0x134d0
   19292:	lea    ecx,[edi+0x8]
   19295:	lea    eax,[ebp-0x828]
   1929b:	push   eax
   1929c:	call   0x12896
   192a1:	push   DWORD PTR [ebp-0x828]
   192a7:	call   0x1da56
   192ac:	pop    ecx
   192ad:	push   0xffffffff
   192af:	push   0x1df18
   192b4:	lea    ecx,[ebp-0x828]
   192ba:	call   0x129d2
   192bf:	lea    eax,[ebp-0x828]
   192c5:	push   eax
   192c6:	lea    ecx,[edi+0x10]
   192c9:	call   0x12896
   192ce:	push   DWORD PTR [ebp-0x828]
   192d4:	call   0x1da56
   192d9:	pop    ecx
   192da:	lea    eax,[edi+0x8]
   192dd:	push   eax
   192de:	lea    ecx,[edi+0x18]
   192e1:	call   0x12896
   192e6:	mov    eax,DWORD PTR [edi+0x20]
   192e9:	or     DWORD PTR [ebp-0x834],eax
   192ef:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192f6:	jmp    0x1930e
   192f8:	xor    eax,eax
   192fa:	inc    eax
   192fb:	ret    
   192fc:	mov    esp,DWORD PTR [ebp-0x18]
   192ff:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19306:	xor    ebx,ebx
   19308:	mov    esi,DWORD PTR [ebp-0x830]
   1930e:	cmp    DWORD PTR [ebp-0x834],ebx
   19314:	jne    0x196dd
   1931a:	xor    eax,eax
   1931c:	lea    edi,[ebp-0x844]
   19322:	stos   DWORD PTR es:[edi],eax
   19323:	stos   DWORD PTR es:[edi],eax
   19324:	mov    DWORD PTR [ebp-0x848],0xc
   1932e:	mov    DWORD PTR [ebp-0x844],0x2
   19338:	mov    BYTE PTR [ebp-0x840],bl
   1933e:	mov    BYTE PTR [ebp-0x83f],bl
   19344:	push   0x77778
   19349:	push   ebx
   1934a:	lea    eax,[ebp-0x848]
   19350:	push   eax
   19351:	call   0x11b76
   19356:	call   eax
   19358:	push   eax
   19359:	call   0x11a7a
   1935e:	call   eax
   19360:	push   0x10
   19362:	call   0x11d78
   19367:	pop    ecx
   19368:	cmp    eax,ebx
   1936a:	je     0x19388
   1936c:	lea    ecx,[ebp-0x81d]
   19372:	push   ecx
   19373:	lea    ecx,[ebp-0x81d]
   19379:	push   ecx
   1937a:	mov    ecx,eax
   1937c:	call   0x16afe
   19381:	mov    ds:0x780e0,eax
   19386:	jmp    0x1938e
   19388:	mov    DWORD PTR ds:0x780e0,ebx
   1938e:	push   0x2c
   19390:	call   0x11d78
   19395:	pop    ecx
   19396:	cmp    eax,ebx
   19398:	je     0x193af
   1939a:	push   0x5dc
   1939f:	push   0x14
   193a1:	mov    ecx,eax
   193a3:	call   0x171a0
   193a8:	mov    ds:0x780e8,eax
   193ad:	jmp    0x193b5
   193af:	mov    DWORD PTR ds:0x780e8,ebx
   193b5:	push   0x10
   193b7:	call   0x11d78
   193bc:	pop    ecx
   193bd:	cmp    eax,ebx
   193bf:	je     0x193dd
   193c1:	lea    ecx,[ebp-0x81d]
   193c7:	push   ecx
   193c8:	lea    ecx,[ebp-0x81d]
   193ce:	push   ecx
   193cf:	mov    ecx,eax
   193d1:	call   0x1668a
   193d6:	mov    ds:0x77728,eax
   193db:	jmp    0x193e3
   193dd:	mov    DWORD PTR ds:0x77728,ebx
   193e3:	push   0x10
   193e5:	call   0x11d78
   193ea:	pop    ecx
   193eb:	cmp    eax,ebx
   193ed:	je     0x1940b
   193ef:	lea    ecx,[ebp-0x81d]
   193f5:	push   ecx
   193f6:	lea    ecx,[ebp-0x81d]
   193fc:	push   ecx
   193fd:	mov    ecx,eax
   193ff:	call   0x16b18
   19404:	mov    ds:0x777b4,eax
   19409:	jmp    0x19411
   1940b:	mov    DWORD PTR ds:0x777b4,ebx
   19411:	push   0x28
   19413:	call   0x11d78
   19418:	pop    ecx
   19419:	cmp    eax,ebx
   1941b:	je     0x19432
   1941d:	push   0x3e8
   19422:	push   0x14
   19424:	mov    ecx,eax
   19426:	call   0x1901a
   1942b:	mov    ds:0x77754,eax
   19430:	jmp    0x19438
   19432:	mov    DWORD PTR ds:0x77754,ebx
   19438:	push   0x20
   1943a:	call   0x11d78
   1943f:	pop    ecx
   19440:	cmp    eax,ebx
   19442:	je     0x19452
   19444:	mov    ecx,eax
   19446:	call   0x16a9e
   1944b:	mov    ds:0x77750,eax
   19450:	jmp    0x19458
   19452:	mov    DWORD PTR ds:0x77750,ebx
   19458:	call   0x12842
   1945d:	call   0x1b5d4
   19462:	call   0x16d12
   19467:	push   0x1ec4c
   1946c:	call   0x18526
   19471:	push   eax
   19472:	push   0x1ec20
   19477:	push   0xa
   19479:	push   0x1ec0a
   1947e:	call   0x16ddc
   19483:	push   eax
   19484:	lea    eax,[ebp-0x41c]
   1948a:	push   eax
   1948b:	call   0x1daf0
   19490:	add    esp,0xc
   19493:	lea    eax,[ebp-0x41c]
   19499:	push   eax
   1949a:	lea    eax,[ebp-0x85c]
   194a0:	push   eax
   194a1:	mov    edi,DWORD PTR ds:0x1f008
   194a7:	call   edi
   194a9:	push   0x1ec4c
   194ae:	call   0x18526
   194b3:	push   eax
   194b4:	push   0x1ebe2
   194b9:	push   0xe
   194bb:	push   0x1ebc4
   194c0:	call   0x16ddc
   194c5:	push   eax
   194c6:	lea    eax,[ebp-0x81c]
   194cc:	push   eax
   194cd:	call   0x1daf0
   194d2:	add    esp,0xc
   194d5:	lea    eax,[ebp-0x81c]
   194db:	push   eax
   194dc:	lea    eax,[ebp-0x864]
   194e2:	push   eax
   194e3:	call   edi
   194e5:	push   0x78124
   194ea:	push   ebx
   194eb:	push   0x100
   194f0:	push   0x22
   194f2:	lea    eax,[ebp-0x85c]
   194f8:	push   eax
   194f9:	push   ebx
   194fa:	push   esi
   194fb:	call   0x11a50
   19500:	call   eax
   19502:	cmp    eax,ebx
   19504:	jl     0x196df
   1950a:	mov    eax,0x19050
   1950f:	mov    DWORD PTR [esi+0x94],eax
   19515:	mov    DWORD PTR [esi+0x90],eax
   1951b:	mov    DWORD PTR [esi+0xa4],eax
   19521:	mov    DWORD PTR [esi+0x70],eax
   19524:	mov    DWORD PTR [esi+0x48],eax
   19527:	mov    DWORD PTR [esi+0x44],eax
   1952a:	mov    DWORD PTR [esi+0x40],eax
   1952d:	mov    DWORD PTR [esi+0x38],eax
   19530:	mov    eax,ds:0x78124
   19535:	or     DWORD PTR [eax+0x1c],0x4
   19539:	lea    eax,[ebp-0x85c]
   1953f:	push   eax
   19540:	lea    eax,[ebp-0x864]
   19546:	push   eax
   19547:	call   0x11a26
   1954c:	call   eax
   1954e:	mov    DWORD PTR [ebp-0x830],eax
   19554:	cmp    eax,ebx
   19556:	jge    0x1956d
   19558:	push   DWORD PTR [esi+0x4]
   1955b:	call   0x118d6
   19560:	call   eax
   19562:	mov    eax,DWORD PTR [ebp-0x830]
   19568:	jmp    0x196df
   1956d:	push   ebx
   1956e:	push   0x780b8
   19573:	call   0x11b22
   19578:	call   eax
   1957a:	push   ebx
   1957b:	push   0x77758
   19580:	call   0x11b22
   19585:	call   eax
   19587:	push   ebx
   19588:	push   0x7772c
   1958d:	call   0x11b22
   19592:	call   eax
   19594:	push   0x8000000
   19599:	push   0x1eb88
   1959e:	push   0x9
   195a0:	push   0x1e7de
   195a5:	call   0x16ed2
   195aa:	push   eax
   195ab:	lea    eax,[ebp-0x82c]
   195b1:	push   eax
   195b2:	call   0x19b18
   195b7:	push   DWORD PTR [ebp-0x82c]
   195bd:	call   0x11708
   195c2:	call   eax
   195c4:	mov    DWORD PTR [ebp-0x838],eax
   195ca:	push   ebx
   195cb:	push   0x1eb62
   195d0:	push   0x16
   195d2:	push   0x1eb4a
   195d7:	call   0x16ed2
   195dc:	push   eax
   195dd:	push   DWORD PTR [ebp-0x82c]
   195e3:	call   0x199fe
   195e8:	push   eax
   195e9:	push   DWORD PTR [ebp-0x838]
   195ef:	call   0x199a4
   195f4:	mov    edi,eax
   195f6:	add    edi,DWORD PTR [ebp-0x82c]
   195fc:	mov    esi,0x1df1a
   19601:	push   esi
   19602:	call   0x1148c
   19607:	mov    DWORD PTR [ebp-0x824],eax
   1960d:	push   edi
   1960e:	call   0x1994c
   19613:	mov    ecx,DWORD PTR [ebp-0x824]
   19619:	mov    ecx,DWORD PTR [ecx]
   1961b:	mov    eax,DWORD PTR [ecx+eax*4]
   1961e:	mov    ds:0x780e4,eax
   19623:	push   ebx
   19624:	push   0x1eb10
   19629:	push   0x14
   1962b:	push   0x1eafa
   19630:	call   0x16ed2
   19635:	push   eax
   19636:	push   DWORD PTR [ebp-0x82c]
   1963c:	call   0x199fe
   19641:	push   eax
   19642:	push   DWORD PTR [ebp-0x838]
   19648:	call   0x199a4
   1964d:	mov    edi,eax
   1964f:	add    edi,DWORD PTR [ebp-0x82c]
   19655:	push   esi
   19656:	call   0x1148c
   1965b:	mov    DWORD PTR [ebp-0x824],eax
   19661:	push   edi
   19662:	call   0x1994c
   19667:	mov    ecx,DWORD PTR [ebp-0x824]
   1966d:	mov    ecx,DWORD PTR [ecx]
   1966f:	mov    eax,DWORD PTR [ecx+eax*4]
   19672:	mov    ds:0x780d8,eax
   19677:	push   ebx
   19678:	push   0x1eabc
   1967d:	push   0xe
   1967f:	push   0x1eaac
   19684:	call   0x16ed2
   19689:	push   eax
   1968a:	push   DWORD PTR [ebp-0x82c]
   19690:	call   0x199fe
   19695:	push   eax
   19696:	push   DWORD PTR [ebp-0x838]
   1969c:	call   0x199a4
   196a1:	mov    edi,eax
   196a3:	add    edi,DWORD PTR [ebp-0x82c]
   196a9:	push   esi
   196aa:	call   0x1148c
   196af:	mov    esi,eax
   196b1:	push   edi
   196b2:	call   0x1994c
   196b7:	mov    ecx,DWORD PTR [esi]
   196b9:	mov    eax,DWORD PTR [ecx+eax*4]
   196bc:	mov    ds:0x780ec,eax
   196c1:	push   DWORD PTR [ebp-0x82c]
   196c7:	call   0x19c66
   196cc:	call   0x18826
   196d1:	mov    BYTE PTR ds:0x78128,0x1
   196d8:	jmp    0x19562
   196dd:	xor    eax,eax
   196df:	call   0x1de58
   196e4:	ret    0x8
   196e7:	int3   
   196e8:	int3   
   196e9:	int3   
   196ea:	int3   
   196eb:	int3   
   196ec:	mov    edi,edi
   196ee:	push   ebp
   196ef:	mov    ebp,esp
   196f1:	push   ecx
   196f2:	mov    ecx,DWORD PTR [ebp+0x8]
   196f5:	mov    eax,DWORD PTR [ecx+0x4]
   196f8:	mov    edx,DWORD PTR [ebp+0xc]
   196fb:	push   ebx
   196fc:	mov    ebx,DWORD PTR [edx+0x4]
   196ff:	push   esi
   19700:	push   edi
   19701:	mov    DWORD PTR [ebp-0x4],eax
   19704:	mov    DWORD PTR [ebp+0x8],eax
   19707:	cmp    eax,ebx
   19709:	jbe    0x1970e
   1970b:	mov    DWORD PTR [ebp+0x8],ebx
   1970e:	xor    eax,eax
   19710:	cmp    DWORD PTR [ebp+0x8],eax
   19713:	jbe    0x1972b
   19715:	mov    esi,DWORD PTR [ecx]
   19717:	mov    edi,DWORD PTR [edx]
   19719:	mov    cl,BYTE PTR [esi+eax*1]
   1971c:	mov    dl,BYTE PTR [edi+eax*1]
   1971f:	cmp    cl,dl
   19721:	jl     0x19738
   19723:	jg     0x1973c
   19725:	inc    eax
   19726:	cmp    eax,DWORD PTR [ebp+0x8]
   19729:	jb     0x19719
   1972b:	cmp    DWORD PTR [ebp-0x4],ebx
   1972e:	setb   al
   19731:	pop    edi
   19732:	pop    esi
   19733:	pop    ebx
   19734:	leave  
   19735:	ret    0x8
   19738:	mov    al,0x1
   1973a:	jmp    0x19731
   1973c:	xor    al,al
   1973e:	jmp    0x19731
   19740:	int3   
   19741:	int3   
   19742:	int3   
   19743:	int3   
   19744:	int3   
   19745:	int3   
   19746:	mov    edi,edi
   19748:	push   ebp
   19749:	mov    ebp,esp
   1974b:	mov    eax,DWORD PTR [ebp+0x8]
   1974e:	mov    ecx,DWORD PTR [eax+0x4]
   19751:	mov    edx,DWORD PTR [ebp+0xc]
   19754:	cmp    ecx,DWORD PTR [edx+0x4]
   19757:	je     0x1975d
   19759:	xor    al,al
   1975b:	jmp    0x1976c
   1975d:	push   esi
   1975e:	mov    esi,DWORD PTR [eax]
   19760:	push   edi
   19761:	mov    edi,DWORD PTR [edx]
   19763:	xor    eax,eax
   19765:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   19767:	pop    edi
   19768:	sete   al
   1976b:	pop    esi
   1976c:	pop    ebp
   1976d:	ret    0x8
   19770:	int3   
   19771:	int3   
   19772:	int3   
   19773:	int3   
   19774:	int3   
   19775:	int3   
   19776:	mov    edi,edi
   19778:	push   ebp
   19779:	mov    ebp,esp
   1977b:	push   DWORD PTR [ebp+0xc]
   1977e:	push   DWORD PTR [ebp+0x8]
   19781:	call   0x19746
   19786:	xor    ecx,ecx
   19788:	test   al,al
   1978a:	sete   cl
   1978d:	mov    al,cl
   1978f:	pop    ebp
   19790:	ret    0x8
   19793:	int3   
   19794:	int3   
   19795:	int3   
   19796:	int3   
   19797:	int3   
   19798:	mov    edi,edi
   1979a:	push   ebp
   1979b:	mov    ebp,esp
   1979d:	push   ecx
   1979e:	mov    ecx,DWORD PTR [ebp+0x8]
   197a1:	mov    eax,DWORD PTR [ebp+0xc]
   197a4:	push   ebx
   197a5:	mov    ebx,DWORD PTR [eax+0x4]
   197a8:	push   esi
   197a9:	push   edi
   197aa:	mov    edi,DWORD PTR [ecx+0x4]
   197ad:	mov    DWORD PTR [ebp-0x4],edi
   197b0:	cmp    edi,ebx
   197b2:	jbe    0x197b6
   197b4:	mov    edi,ebx
   197b6:	and    DWORD PTR [ebp+0x8],0x0
   197ba:	test   edi,edi
   197bc:	jbe    0x197dc
   197be:	mov    eax,DWORD PTR [eax]
   197c0:	mov    ecx,DWORD PTR [ecx]
   197c2:	sub    ecx,eax
   197c4:	movzx  edx,WORD PTR [ecx+eax*1]
   197c8:	movzx  esi,WORD PTR [eax]
   197cb:	cmp    dx,si
   197ce:	jb     0x197e9
   197d0:	ja     0x197ed
   197d2:	inc    DWORD PTR [ebp+0x8]
   197d5:	inc    eax
   197d6:	inc    eax
   197d7:	cmp    DWORD PTR [ebp+0x8],edi
   197da:	jb     0x197c4
   197dc:	cmp    DWORD PTR [ebp-0x4],ebx
   197df:	setb   al
   197e2:	pop    edi
   197e3:	pop    esi
   197e4:	pop    ebx
   197e5:	leave  
   197e6:	ret    0x8
   197e9:	mov    al,0x1
   197eb:	jmp    0x197e2
   197ed:	xor    al,al
   197ef:	jmp    0x197e2
   197f1:	int3   
   197f2:	int3   
   197f3:	int3   
   197f4:	int3   
   197f5:	int3   
   197f6:	mov    edi,edi
   197f8:	push   ebp
   197f9:	mov    ebp,esp
   197fb:	pop    ebp
   197fc:	jmp    0x196ec
   19801:	int3   
   19802:	int3   
   19803:	int3   
   19804:	int3   
   19805:	int3   
   19806:	mov    edi,edi
   19808:	push   ebp
   19809:	mov    ebp,esp
   1980b:	pop    ebp
   1980c:	jmp    0x19746
   19811:	int3   
   19812:	int3   
   19813:	int3   
   19814:	int3   
   19815:	int3   
   19816:	mov    edi,edi
   19818:	push   ebp
   19819:	mov    ebp,esp
   1981b:	pop    ebp
   1981c:	jmp    0x19776
   19821:	int3   
   19822:	int3   
   19823:	int3   
   19824:	int3   
   19825:	int3   
   19826:	mov    edi,edi
   19828:	push   ebp
   19829:	mov    ebp,esp
   1982b:	pop    ebp
   1982c:	jmp    0x19798
   19831:	int3   
   19832:	int3   
   19833:	int3   
   19834:	int3   
   19835:	int3   
   19836:	mov    edi,edi
   19838:	push   ebp
   19839:	mov    ebp,esp
   1983b:	mov    eax,DWORD PTR [ebp+0x8]
   1983e:	mov    cl,BYTE PTR [ebp+0xc]
   19841:	mov    BYTE PTR [eax],cl
   19843:	inc    eax
   19844:	pop    ebp
   19845:	ret    0x8
   19848:	int3   
   19849:	int3   
   1984a:	int3   
   1984b:	int3   
   1984c:	int3   
   1984d:	int3   
   1984e:	mov    edi,edi
   19850:	push   ebp
   19851:	mov    ebp,esp
   19853:	mov    eax,DWORD PTR [ebp+0x8]
   19856:	mov    ecx,DWORD PTR [ebp+0xc]
   19859:	mov    DWORD PTR [eax],ecx
   1985b:	add    eax,0x4
   1985e:	pop    ebp
   1985f:	ret    0x8
   19862:	int3   
   19863:	int3   
   19864:	int3   
   19865:	int3   
   19866:	int3   
   19867:	int3   
   19868:	mov    edi,edi
   1986a:	push   ebp
   1986b:	mov    ebp,esp
   1986d:	mov    eax,DWORD PTR [ebp+0x8]
   19870:	mov    cx,WORD PTR [ebp+0xc]
   19874:	mov    WORD PTR [eax],cx
   19877:	add    eax,0x2
   1987a:	pop    ebp
   1987b:	ret    0x8
   1987e:	int3   
   1987f:	int3   
   19880:	int3   
   19881:	int3   
   19882:	int3   
   19883:	int3   
   19884:	mov    edi,edi
   19886:	push   ebp
   19887:	mov    ebp,esp
   19889:	push   esi
   1988a:	mov    esi,DWORD PTR [ebp+0x10]
   1988d:	push   edi
   1988e:	mov    edi,DWORD PTR [ebp+0x8]
   19891:	push   esi
   19892:	push   DWORD PTR [ebp+0xc]
   19895:	push   edi
   19896:	call   0x1dad8
   1989b:	add    esp,0xc
   1989e:	lea    eax,[edi+esi*1]
   198a1:	pop    edi
   198a2:	pop    esi
   198a3:	pop    ebp
   198a4:	ret    0xc
   198a7:	int3   
   198a8:	int3   
   198a9:	int3   
   198aa:	int3   
   198ab:	int3   
   198ac:	mov    edi,edi
   198ae:	push   ebp
   198af:	mov    ebp,esp
   198b1:	mov    eax,DWORD PTR [ebp+0xc]
   198b4:	mov    ecx,DWORD PTR [ebp+0x8]
   198b7:	sub    ecx,eax
   198b9:	sub    ecx,0x5
   198bc:	mov    DWORD PTR [eax+0x1],ecx
   198bf:	mov    BYTE PTR [eax],0xe9
   198c2:	add    eax,0x5
   198c5:	pop    ebp
   198c6:	ret    0x8
   198c9:	int3   
   198ca:	int3   
   198cb:	int3   
   198cc:	int3   
   198cd:	int3   
   198ce:	mov    edi,edi
   198d0:	push   ebp
   198d1:	mov    ebp,esp
   198d3:	push   ecx
   198d4:	push   ebx
   198d5:	mov    ebx,DWORD PTR [ebp+0x8]
   198d8:	and    DWORD PTR [ebp+0x8],0x0
   198dc:	push   edi
   198dd:	mov    edi,ebx
   198df:	test   ebx,ebx
   198e1:	jne    0x198e7
   198e3:	xor    eax,eax
   198e5:	jmp    0x19941
   198e7:	push   esi
   198e8:	push   0x20736649
   198ed:	push   0x80
   198f2:	push   0x0
   198f4:	call   DWORD PTR ds:0x1f028
   198fa:	mov    esi,eax
   198fc:	mov    DWORD PTR [ebp-0x4],esi
   198ff:	push   0x0
   19901:	push   edi
   19902:	push   esi
   19903:	call   0x19fe8
   19908:	mov    ecx,eax
   1990a:	sub    ecx,edi
   1990c:	add    DWORD PTR [ebp+0x8],ecx
   1990f:	add    esi,ecx
   19911:	cmp    DWORD PTR [ebp+0x8],0x5
   19915:	mov    edi,eax
   19917:	jb     0x198ff
   19919:	push   DWORD PTR [ebp+0x8]
   1991c:	push   0x90
   19921:	push   ebx
   19922:	call   0x1dacc
   19927:	add    esp,0xc
   1992a:	push   esi
   1992b:	lea    eax,[ebx+0x5]
   1992e:	push   eax
   1992f:	call   0x198ac
   19934:	push   ebx
   19935:	push   DWORD PTR [ebp+0xc]
   19938:	call   0x198ac
   1993d:	mov    eax,DWORD PTR [ebp-0x4]
   19940:	pop    esi
   19941:	pop    edi
   19942:	pop    ebx
   19943:	leave  
   19944:	ret    0x8
   19947:	int3   
   19948:	int3   
   19949:	int3   
   1994a:	int3   
   1994b:	int3   
   1994c:	mov    edi,edi
   1994e:	push   ebp
   1994f:	mov    ebp,esp
   19951:	mov    eax,DWORD PTR [ebp+0x8]
   19954:	mov    eax,DWORD PTR [eax+0x1]
   19957:	pop    ebp
   19958:	ret    0x4
   1995b:	int3   
   1995c:	int3   
   1995d:	int3   
   1995e:	int3   
   1995f:	int3   
   19960:	mov    edi,edi
   19962:	push   ebp
   19963:	mov    ebp,esp
   19965:	mov    ecx,DWORD PTR [ebp+0x8]
   19968:	movzx  eax,WORD PTR [ecx+0x14]
   1996c:	lea    eax,[eax+ecx*1+0x18]
   19970:	movzx  ecx,WORD PTR [ecx+0x6]
   19974:	push   esi
   19975:	xor    esi,esi
   19977:	push   edi
   19978:	test   ecx,ecx
   1997a:	jbe    0x19996
   1997c:	mov    edx,DWORD PTR [eax+0xc]
   1997f:	cmp    DWORD PTR [ebp+0xc],edx
   19982:	jb     0x1998e
   19984:	mov    edi,DWORD PTR [eax+0x8]
   19987:	add    edi,edx
   19989:	cmp    DWORD PTR [ebp+0xc],edi
   1998c:	jb     0x19998
   1998e:	add    eax,0x28
   19991:	inc    esi
   19992:	cmp    esi,ecx
   19994:	jb     0x1997c
   19996:	xor    eax,eax
   19998:	pop    edi
   19999:	pop    esi
   1999a:	pop    ebp
   1999b:	ret    0x8
   1999e:	int3   
   1999f:	int3   
   199a0:	int3   
   199a1:	int3   
   199a2:	int3   
   199a3:	int3   
   199a4:	mov    edi,edi
   199a6:	push   ebp
   199a7:	mov    ebp,esp
   199a9:	push   esi
   199aa:	push   DWORD PTR [ebp+0xc]
   199ad:	mov    esi,DWORD PTR [ebp+0x8]
   199b0:	push   esi
   199b1:	call   0x19960
   199b6:	mov    ecx,eax
   199b8:	test   ecx,ecx
   199ba:	je     0x199cd
   199bc:	mov    eax,DWORD PTR [esi+0x3c]
   199bf:	dec    eax
   199c0:	not    eax
   199c2:	and    eax,DWORD PTR [ecx+0x14]
   199c5:	sub    eax,DWORD PTR [ecx+0xc]
   199c8:	add    eax,DWORD PTR [ebp+0xc]
   199cb:	jmp    0x199d0
   199cd:	mov    eax,DWORD PTR [ebp+0xc]
   199d0:	pop    esi
   199d1:	pop    ebp
   199d2:	ret    0x8
   199d5:	int3   
   199d6:	int3   
   199d7:	int3   
   199d8:	int3   
   199d9:	int3   
   199da:	mov    edi,edi
   199dc:	push   ebp
   199dd:	mov    ebp,esp
   199df:	cmp    DWORD PTR [ebp+0x10],0x0
   199e3:	je     0x199ea
   199e5:	mov    eax,DWORD PTR [ebp+0xc]
   199e8:	jmp    0x199f5
   199ea:	push   DWORD PTR [ebp+0xc]
   199ed:	push   DWORD PTR [ebp+0x8]
   199f0:	call   0x199a4
   199f5:	pop    ebp
   199f6:	ret    0xc
   199f9:	int3   
   199fa:	int3   
   199fb:	int3   
   199fc:	int3   
   199fd:	int3   
   199fe:	mov    edi,edi
   19a00:	push   ebp
   19a01:	mov    ebp,esp
   19a03:	sub    esp,0x1c
   19a06:	push   ebx
   19a07:	push   esi
   19a08:	mov    esi,DWORD PTR [ebp+0x8]
   19a0b:	push   edi
   19a0c:	push   esi
   19a0d:	call   0x11708
   19a12:	call   eax
   19a14:	mov    ebx,eax
   19a16:	lea    eax,[ebp-0x14]
   19a19:	push   eax
   19a1a:	push   0x0
   19a1c:	push   0x0
   19a1e:	push   esi
   19a1f:	mov    DWORD PTR [ebp-0x4],ebx
   19a22:	call   0x11732
   19a27:	call   eax
   19a29:	mov    edi,eax
   19a2b:	mov    eax,DWORD PTR [ebx+0x50]
   19a2e:	mov    ecx,edi
   19a30:	sub    ecx,esi
   19a32:	cmp    eax,ecx
   19a34:	jb     0x19a85
   19a36:	mov    ecx,DWORD PTR [ebp-0x14]
   19a39:	sub    ecx,esi
   19a3b:	add    ecx,edi
   19a3d:	cmp    eax,ecx
   19a3f:	jb     0x19a85
   19a41:	push   DWORD PTR [ebp+0x10]
   19a44:	push   DWORD PTR [edi+0x20]
   19a47:	push   ebx
   19a48:	call   0x199da
   19a4d:	push   DWORD PTR [ebp+0x10]
   19a50:	mov    ebx,eax
   19a52:	push   DWORD PTR [edi+0x1c]
   19a55:	add    ebx,esi
   19a57:	push   DWORD PTR [ebp-0x4]
   19a5a:	call   0x199da
   19a5f:	push   DWORD PTR [ebp+0x10]
   19a62:	add    eax,esi
   19a64:	push   DWORD PTR [edi+0x24]
   19a67:	mov    DWORD PTR [ebp-0x1c],eax
   19a6a:	push   DWORD PTR [ebp-0x4]
   19a6d:	call   0x199da
   19a72:	and    DWORD PTR [ebp-0xc],0x0
   19a76:	add    eax,esi
   19a78:	mov    esi,DWORD PTR [edi+0x18]
   19a7b:	mov    DWORD PTR [ebp-0x18],eax
   19a7e:	mov    DWORD PTR [ebp-0x8],esi
   19a81:	test   esi,esi
   19a83:	jg     0x19a91
   19a85:	xor    eax,eax
   19a87:	pop    edi
   19a88:	pop    esi
   19a89:	pop    ebx
   19a8a:	leave  
   19a8b:	ret    0xc
   19a8e:	mov    esi,DWORD PTR [ebp-0x8]
   19a91:	mov    eax,DWORD PTR [ebp-0xc]
   19a94:	push   DWORD PTR [ebp+0x10]
   19a97:	add    esi,eax
   19a99:	mov    eax,DWORD PTR [ebp+0xc]
   19a9c:	sar    esi,1
   19a9e:	push   DWORD PTR [ebx+esi*4]
   19aa1:	mov    DWORD PTR [ebp-0x10],eax
   19aa4:	push   DWORD PTR [ebp-0x4]
   19aa7:	call   0x199da
   19aac:	add    eax,DWORD PTR [ebp+0x8]
   19aaf:	mov    cl,BYTE PTR [eax]
   19ab1:	mov    edx,DWORD PTR [ebp-0x10]
   19ab4:	cmp    cl,BYTE PTR [edx]
   19ab6:	jne    0x19ad3
   19ab8:	test   cl,cl
   19aba:	je     0x19acf
   19abc:	mov    cl,BYTE PTR [eax+0x1]
   19abf:	cmp    cl,BYTE PTR [edx+0x1]
   19ac2:	jne    0x19ad3
   19ac4:	inc    eax
   19ac5:	inc    eax
   19ac6:	inc    edx
   19ac7:	inc    edx
   19ac8:	mov    DWORD PTR [ebp-0x10],edx
   19acb:	test   cl,cl
   19acd:	jne    0x19aaf
   19acf:	xor    eax,eax
   19ad1:	jmp    0x19ad8
   19ad3:	sbb    eax,eax
   19ad5:	sbb    eax,0xffffffff
   19ad8:	test   eax,eax
   19ada:	je     0x19af1
   19adc:	jge    0x19ae4
   19ade:	inc    esi
   19adf:	mov    DWORD PTR [ebp-0xc],esi
   19ae2:	jmp    0x19ae7
   19ae4:	mov    DWORD PTR [ebp-0x8],esi
   19ae7:	mov    eax,DWORD PTR [ebp-0x8]
   19aea:	cmp    DWORD PTR [ebp-0xc],eax
   19aed:	jl     0x19a8e
   19aef:	jmp    0x19a85
   19af1:	mov    eax,DWORD PTR [ebp-0x18]
   19af4:	movzx  eax,WORD PTR [eax+esi*2]
   19af8:	mov    ecx,DWORD PTR [ebp-0x1c]
   19afb:	mov    ecx,DWORD PTR [ecx+eax*4]
   19afe:	mov    eax,ecx
   19b00:	sub    eax,edi
   19b02:	add    eax,DWORD PTR [ebp+0x8]
   19b05:	cmp    eax,DWORD PTR [ebp-0x14]
   19b08:	sbb    eax,eax
   19b0a:	not    eax
   19b0c:	and    eax,ecx
   19b0e:	jmp    0x19a87
   19b13:	int3   
   19b14:	int3   
   19b15:	int3   
   19b16:	int3   
   19b17:	int3   
   19b18:	mov    edi,edi
   19b1a:	push   ebp
   19b1b:	mov    ebp,esp
   19b1d:	sub    esp,0x814
   19b23:	mov    eax,ds:0x7771c
   19b28:	xor    eax,ebp
   19b2a:	mov    DWORD PTR [ebp-0x4],eax
   19b2d:	mov    ecx,DWORD PTR [ebp+0xc]
   19b30:	push   ebx
   19b31:	mov    ebx,DWORD PTR [ebp+0x8]
   19b34:	push   esi
   19b35:	push   edi
   19b36:	xor    esi,esi
   19b38:	xor    eax,eax
   19b3a:	push   ecx
   19b3b:	mov    DWORD PTR [ebp-0x7ec],esi
   19b41:	lea    edi,[ebp-0x7e8]
   19b47:	stos   DWORD PTR es:[edi],eax
   19b48:	lea    eax,[ebp-0x7d4]
   19b4e:	push   0x1ecf2
   19b53:	push   eax
   19b54:	mov    DWORD PTR [ebp-0x7d8],esi
   19b5a:	mov    DWORD PTR [ebp-0x7e4],esi
   19b60:	call   DWORD PTR ds:0x1f048
   19b66:	add    esp,0xc
   19b69:	lea    eax,[ebp-0x7d4]
   19b6f:	push   eax
   19b70:	lea    eax,[ebp-0x80c]
   19b76:	push   eax
   19b77:	call   DWORD PTR ds:0x1f008
   19b7d:	push   0x10
   19b7f:	lea    eax,[ebp-0x80c]
   19b85:	mov    DWORD PTR [ebp-0x7fc],eax
   19b8b:	push   0x1
   19b8d:	lea    eax,[ebp-0x814]
   19b93:	push   eax
   19b94:	lea    eax,[ebp-0x804]
   19b9a:	push   eax
   19b9b:	push   0x80100000
   19ba0:	lea    eax,[ebp-0x7dc]
   19ba6:	push   eax
   19ba7:	mov    DWORD PTR [ebp-0x804],0x18
   19bb1:	mov    DWORD PTR [ebp-0x800],esi
   19bb7:	mov    DWORD PTR [ebp-0x7f8],esi
   19bbd:	mov    DWORD PTR [ebp-0x7f4],esi
   19bc3:	mov    DWORD PTR [ebp-0x7f0],esi
   19bc9:	call   0x115b8
   19bce:	call   eax
   19bd0:	cmp    eax,esi
   19bd2:	jl     0x19c50
   19bd4:	push   DWORD PTR [ebp-0x7dc]
   19bda:	lea    eax,[ebp-0x7ec]
   19be0:	push   DWORD PTR [ebp+0x10]
   19be3:	push   0x2
   19be5:	push   eax
   19be6:	push   esi
   19be7:	push   0x4
   19be9:	lea    eax,[ebp-0x7e0]
   19bef:	push   eax
   19bf0:	call   0x11ace
   19bf5:	call   eax
   19bf7:	push   DWORD PTR [ebp-0x7dc]
   19bfd:	mov    edi,eax
   19bff:	call   0x117da
   19c04:	call   eax
   19c06:	cmp    edi,esi
   19c08:	jge    0x19c0e
   19c0a:	mov    eax,edi
   19c0c:	jmp    0x19c50
   19c0e:	push   0x2
   19c10:	push   esi
   19c11:	push   0x2
   19c13:	lea    eax,[ebp-0x7e4]
   19c19:	push   eax
   19c1a:	push   esi
   19c1b:	push   esi
   19c1c:	push   esi
   19c1d:	lea    eax,[ebp-0x7d8]
   19c23:	push   eax
   19c24:	push   0xffffffff
   19c26:	push   DWORD PTR [ebp-0x7e0]
   19c2c:	call   0x11aa4
   19c31:	call   eax
   19c33:	push   DWORD PTR [ebp-0x7e0]
   19c39:	mov    edi,eax
   19c3b:	call   0x117da
   19c40:	call   eax
   19c42:	cmp    edi,esi
   19c44:	jl     0x19c0a
   19c46:	mov    eax,DWORD PTR [ebp-0x7d8]
   19c4c:	mov    DWORD PTR [ebx],eax
   19c4e:	xor    eax,eax
   19c50:	mov    ecx,DWORD PTR [ebp-0x4]
   19c53:	pop    edi
   19c54:	pop    esi
   19c55:	xor    ecx,ebp
   19c57:	pop    ebx
   19c58:	call   0x1da73
   19c5d:	leave  
   19c5e:	ret    0xc
   19c61:	int3   
   19c62:	int3   
   19c63:	int3   
   19c64:	int3   
   19c65:	int3   
   19c66:	mov    edi,edi
   19c68:	push   ebp
   19c69:	mov    ebp,esp
   19c6b:	push   DWORD PTR [ebp+0x8]
   19c6e:	push   0xffffffff
   19c70:	call   0x11af8
   19c75:	call   eax
   19c77:	pop    ebp
   19c78:	ret    0x4
   19c7b:	int3   
   19c7c:	int3   
   19c7d:	int3   
   19c7e:	int3   
   19c7f:	int3   
   19c80:	mov    edi,edi
   19c82:	push   ebp
   19c83:	mov    ebp,esp
   19c85:	push   esi
   19c86:	mov    esi,DWORD PTR [ebp+0x8]
   19c89:	test   esi,esi
   19c8b:	jne    0x19c90
   19c8d:	lea    esi,[ecx+0x18]
   19c90:	mov    edx,DWORD PTR [ebp+0xc]
   19c93:	test   edx,edx
   19c95:	jne    0x19c9b
   19c97:	xor    eax,eax
   19c99:	jmp    0x19cab
   19c9b:	movzx  eax,BYTE PTR [edx]
   19c9e:	push   edx
   19c9f:	lea    eax,[eax*8+0x73750]
   19ca6:	push   esi
   19ca7:	push   eax
   19ca8:	call   DWORD PTR [eax+0x4]
   19cab:	pop    esi
   19cac:	pop    ebp
   19cad:	ret    0x8
   19cb0:	int3   
   19cb1:	int3   
   19cb2:	int3   
   19cb3:	int3   
   19cb4:	int3   
   19cb5:	int3   
   19cb6:	mov    edi,edi
   19cb8:	push   ebp
   19cb9:	mov    ebp,esp
   19cbb:	mov    eax,DWORD PTR [ebp+0x14]
   19cbe:	push   ebx
   19cbf:	mov    ebx,DWORD PTR [ebp+0x8]
   19cc2:	push   esi
   19cc3:	mov    esi,DWORD PTR [ebp+0x10]
   19cc6:	sub    esi,eax
   19cc8:	push   edi
   19cc9:	lea    edi,[ebx+eax*1]
   19ccc:	mov    eax,esi
   19cce:	xor    edx,edx
   19cd0:	dec    eax
   19cd1:	je     0x19cf2
   19cd3:	dec    eax
   19cd4:	je     0x19ce4
   19cd6:	dec    eax
   19cd7:	dec    eax
   19cd8:	jne    0x19cfe
   19cda:	mov    eax,DWORD PTR [ecx+0xc]
   19cdd:	mov    edx,DWORD PTR [edi]
   19cdf:	and    DWORD PTR [eax],0x0
   19ce2:	jmp    0x19cfe
   19ce4:	mov    eax,DWORD PTR [ecx+0xc]
   19ce7:	movsx  edx,WORD PTR [edi]
   19cea:	mov    DWORD PTR [eax],0x2
   19cf0:	jmp    0x19cfe
   19cf2:	mov    eax,DWORD PTR [ecx+0xc]
   19cf5:	movsx  edx,BYTE PTR [edi]
   19cf8:	mov    DWORD PTR [eax],0x3
   19cfe:	mov    ecx,DWORD PTR [ebp+0xc]
   19d01:	lea    eax,[edx+ecx*1]
   19d04:	add    eax,DWORD PTR [ebp+0x10]
   19d07:	sub    edx,ebx
   19d09:	add    edx,ecx
   19d0b:	dec    esi
   19d0c:	je     0x19d1e
   19d0e:	dec    esi
   19d0f:	je     0x19d19
   19d11:	dec    esi
   19d12:	dec    esi
   19d13:	jne    0x19d20
   19d15:	mov    DWORD PTR [edi],edx
   19d17:	jmp    0x19d20
   19d19:	mov    WORD PTR [edi],dx
   19d1c:	jmp    0x19d20
   19d1e:	mov    BYTE PTR [edi],dl
   19d20:	pop    edi
   19d21:	pop    esi
   19d22:	pop    ebx
   19d23:	pop    ebp
   19d24:	ret    0x10
   19d27:	int3   
   19d28:	int3   
   19d29:	int3   
   19d2a:	int3   
   19d2b:	int3   
   19d2c:	mov    edi,edi
   19d2e:	push   ebp
   19d2f:	mov    ebp,esp
   19d31:	mov    eax,DWORD PTR [ebp+0x10]
   19d34:	inc    eax
   19d35:	pop    ebp
   19d36:	ret    0xc
   19d39:	int3   
   19d3a:	int3   
   19d3b:	int3   
   19d3c:	int3   
   19d3d:	int3   
   19d3e:	mov    edi,edi
   19d40:	push   ebp
   19d41:	mov    ebp,esp
   19d43:	mov    eax,ecx
   19d45:	mov    ecx,DWORD PTR [ebp+0x8]
   19d48:	and    DWORD PTR [eax],0x0
   19d4b:	and    DWORD PTR [eax+0x4],0x0
   19d4f:	test   ecx,ecx
   19d51:	jne    0x19d56
   19d53:	lea    ecx,[eax+0x14]
   19d56:	mov    edx,DWORD PTR [ebp+0xc]
   19d59:	mov    DWORD PTR [eax+0x8],ecx
   19d5c:	test   edx,edx
   19d5e:	jne    0x19d63
   19d60:	lea    edx,[eax+0x10]
   19d63:	mov    DWORD PTR [eax+0xc],edx
   19d66:	and    DWORD PTR [ecx],0x0
   19d69:	mov    ecx,DWORD PTR [eax+0xc]
   19d6c:	and    DWORD PTR [ecx],0x0
   19d6f:	pop    ebp
   19d70:	ret    0x8
   19d73:	int3   
   19d74:	int3   
   19d75:	int3   
   19d76:	int3   
   19d77:	int3   
   19d78:	mov    edi,edi
   19d7a:	push   ebp
   19d7b:	mov    ebp,esp
   19d7d:	push   ecx
   19d7e:	mov    eax,DWORD PTR [ebp+0x8]
   19d81:	mov    eax,DWORD PTR [eax]
   19d83:	push   ebx
   19d84:	push   esi
   19d85:	push   edi
   19d86:	mov    DWORD PTR [ebp-0x4],ecx
   19d89:	mov    esi,eax
   19d8b:	test   eax,0x200000
   19d90:	je     0x19d9d
   19d92:	cmp    DWORD PTR [ecx+0x4],0x0
   19d96:	je     0x19da2
   19d98:	shr    esi,0xb
   19d9b:	jmp    0x19da5
   19d9d:	cmp    DWORD PTR [ecx],0x0
   19da0:	jmp    0x19d96
   19da2:	shr    esi,0x8
   19da5:	mov    ebx,DWORD PTR [ebp+0x10]
   19da8:	and    esi,0x7
   19dab:	shr    eax,0xe
   19dae:	and    eax,0x7
   19db1:	mov    edi,esi
   19db3:	jbe    0x19def
   19db5:	add    eax,ebx
   19db7:	mov    cl,BYTE PTR [eax]
   19db9:	movzx  edx,cl
   19dbc:	mov    dl,BYTE PTR [edx+0x73650]
   19dc2:	test   dl,0x10
   19dc5:	je     0x19de7
   19dc7:	mov    al,BYTE PTR [eax+0x1]
   19dca:	and    al,0x7
   19dcc:	cmp    al,0x5
   19dce:	jne    0x19de7
   19dd0:	and    cl,0xc0
   19dd3:	je     0x19de4
   19dd5:	cmp    cl,0x40
   19dd8:	jne    0x19ddf
   19dda:	lea    edi,[esi+0x1]
   19ddd:	jmp    0x19de7
   19ddf:	cmp    cl,0x80
   19de2:	jne    0x19de7
   19de4:	lea    edi,[esi+0x4]
   19de7:	movzx  eax,dl
   19dea:	and    eax,0xf
   19ded:	add    edi,eax
   19def:	push   edi
   19df0:	push   ebx
   19df1:	push   DWORD PTR [ebp+0xc]
   19df4:	call   0x1dad8
   19df9:	mov    ecx,DWORD PTR [ebp+0x8]
   19dfc:	mov    eax,DWORD PTR [ecx]
   19dfe:	shl    eax,0xc
   19e01:	sar    eax,0x1d
   19e04:	add    esp,0xc
   19e07:	test   eax,eax
   19e09:	je     0x19e25
   19e0b:	push   eax
   19e0c:	push   esi
   19e0d:	mov    esi,DWORD PTR [ebp-0x4]
   19e10:	push   ebx
   19e11:	push   DWORD PTR [ebp+0xc]
   19e14:	mov    ecx,esi
   19e16:	call   0x19cb6
   19e1b:	mov    ecx,DWORD PTR [esi+0x8]
   19e1e:	mov    DWORD PTR [ecx],eax
   19e20:	mov    ecx,DWORD PTR [ebp+0x8]
   19e23:	jmp    0x19e28
   19e25:	mov    esi,DWORD PTR [ebp-0x4]
   19e28:	test   DWORD PTR [ecx],0x400000
   19e2e:	je     0x19e35
   19e30:	mov    eax,DWORD PTR [esi+0xc]
   19e33:	neg    DWORD PTR [eax]
   19e35:	test   DWORD PTR [ecx],0x100000
   19e3b:	je     0x19e43
   19e3d:	mov    eax,DWORD PTR [esi+0x8]
   19e40:	or     DWORD PTR [eax],0xffffffff
   19e43:	lea    eax,[edi+ebx*1]
   19e46:	pop    edi
   19e47:	pop    esi
   19e48:	pop    ebx
   19e49:	leave  
   19e4a:	ret    0xc
   19e4d:	int3   
   19e4e:	int3   
   19e4f:	int3   
   19e50:	int3   
   19e51:	int3   
   19e52:	mov    edi,edi
   19e54:	push   ebp
   19e55:	mov    ebp,esp
   19e57:	push   ebx
   19e58:	push   esi
   19e59:	mov    esi,DWORD PTR [ebp+0x10]
   19e5c:	push   edi
   19e5d:	mov    edi,DWORD PTR [ebp+0xc]
   19e60:	push   esi
   19e61:	push   edi
   19e62:	push   DWORD PTR [ebp+0x8]
   19e65:	mov    ebx,ecx
   19e67:	call   0x19d78
   19e6c:	lea    eax,[esi+0x1]
   19e6f:	movzx  edx,BYTE PTR [eax]
   19e72:	push   eax
   19e73:	inc    edi
   19e74:	lea    edx,[edx*8+0x73750]
   19e7b:	push   edi
   19e7c:	push   edx
   19e7d:	mov    ecx,ebx
   19e7f:	call   DWORD PTR [edx+0x4]
   19e82:	pop    edi
   19e83:	pop    esi
   19e84:	pop    ebx
   19e85:	pop    ebp
   19e86:	ret    0xc
   19e89:	int3   
   19e8a:	int3   
   19e8b:	int3   
   19e8c:	int3   
   19e8d:	int3   
   19e8e:	mov    edi,edi
   19e90:	push   ebp
   19e91:	mov    ebp,esp
   19e93:	push   ebx
   19e94:	push   esi
   19e95:	mov    esi,DWORD PTR [ebp+0x10]
   19e98:	push   edi
   19e99:	mov    edi,DWORD PTR [ebp+0xc]
   19e9c:	push   esi
   19e9d:	push   edi
   19e9e:	push   DWORD PTR [ebp+0x8]
   19ea1:	mov    ebx,ecx
   19ea3:	call   0x19d78
   19ea8:	lea    eax,[esi+0x1]
   19eab:	movzx  edx,BYTE PTR [eax]
   19eae:	push   eax
   19eaf:	inc    edi
   19eb0:	lea    edx,[edx*8+0x73f58]
   19eb7:	push   edi
   19eb8:	push   edx
   19eb9:	mov    ecx,ebx
   19ebb:	call   DWORD PTR [edx+0x4]
   19ebe:	pop    edi
   19ebf:	pop    esi
   19ec0:	pop    ebx
   19ec1:	pop    ebp
   19ec2:	ret    0xc
   19ec5:	int3   
   19ec6:	int3   
   19ec7:	int3   
   19ec8:	int3   
   19ec9:	int3   
   19eca:	mov    edi,edi
   19ecc:	push   ebp
   19ecd:	mov    ebp,esp
   19ecf:	mov    DWORD PTR [ecx],0x1
   19ed5:	pop    ebp
   19ed6:	jmp    0x19e52
   19edb:	int3   
   19edc:	int3   
   19edd:	int3   
   19ede:	int3   
   19edf:	int3   
   19ee0:	mov    edi,edi
   19ee2:	push   ebp
   19ee3:	mov    ebp,esp
   19ee5:	mov    DWORD PTR [ecx+0x4],0x1
   19eec:	pop    ebp
   19eed:	jmp    0x19e52
   19ef2:	int3   
   19ef3:	int3   
   19ef4:	int3   
   19ef5:	int3   
   19ef6:	int3   
   19ef7:	int3   
   19ef8:	mov    edi,edi
   19efa:	push   ebp
   19efb:	mov    ebp,esp
   19efd:	mov    eax,DWORD PTR [ebp+0x10]
   19f00:	sub    esp,0x10
   19f03:	test   BYTE PTR [eax+0x1],0x38
   19f07:	push   eax
   19f08:	push   DWORD PTR [ebp+0xc]
   19f0b:	jne    0x19f20
   19f0d:	mov    DWORD PTR [ebp-0x8],0x5bf6
   19f14:	mov    DWORD PTR [ebp-0x4],0x19d78
   19f1b:	lea    eax,[ebp-0x8]
   19f1e:	jmp    0x19f31
   19f20:	mov    DWORD PTR [ebp-0x10],0x52f6
   19f27:	mov    DWORD PTR [ebp-0xc],0x19d78
   19f2e:	lea    eax,[ebp-0x10]
   19f31:	push   eax
   19f32:	call   0x19d78
   19f37:	leave  
   19f38:	ret    0xc
   19f3b:	int3   
   19f3c:	int3   
   19f3d:	int3   
   19f3e:	int3   
   19f3f:	int3   
   19f40:	mov    edi,edi
   19f42:	push   ebp
   19f43:	mov    ebp,esp
   19f45:	mov    eax,DWORD PTR [ebp+0x10]
   19f48:	sub    esp,0x10
   19f4b:	test   BYTE PTR [eax+0x1],0x38
   19f4f:	push   eax
   19f50:	push   DWORD PTR [ebp+0xc]
   19f53:	jne    0x19f68
   19f55:	mov    DWORD PTR [ebp-0x8],0x66f7
   19f5c:	mov    DWORD PTR [ebp-0x4],0x19d78
   19f63:	lea    eax,[ebp-0x8]
   19f66:	jmp    0x19f79
   19f68:	mov    DWORD PTR [ebp-0x10],0x52f7
   19f6f:	mov    DWORD PTR [ebp-0xc],0x19d78
   19f76:	lea    eax,[ebp-0x10]
   19f79:	push   eax
   19f7a:	call   0x19d78
   19f7f:	leave  
   19f80:	ret    0xc
   19f83:	int3   
   19f84:	int3   
   19f85:	int3   
   19f86:	int3   
   19f87:	int3   
   19f88:	mov    edi,edi
   19f8a:	push   ebp
   19f8b:	mov    ebp,esp
   19f8d:	push   ecx
   19f8e:	push   ecx
   19f8f:	mov    edx,DWORD PTR [ebp+0x10]
   19f92:	mov    al,BYTE PTR [edx+0x1]
   19f95:	cmp    al,0x15
   19f97:	je     0x19fb7
   19f99:	cmp    al,0x25
   19f9b:	je     0x19fb7
   19f9d:	and    al,0x38
   19f9f:	cmp    al,0x10
   19fa1:	je     0x19faf
   19fa3:	cmp    al,0x18
   19fa5:	je     0x19faf
   19fa7:	cmp    al,0x20
   19fa9:	je     0x19faf
   19fab:	cmp    al,0x28
   19fad:	jne    0x19fc3
   19faf:	mov    eax,DWORD PTR [ecx+0x8]
   19fb2:	or     DWORD PTR [eax],0xffffffff
   19fb5:	jmp    0x19fc3
   19fb7:	mov    eax,DWORD PTR [edx+0x2]
   19fba:	mov    eax,DWORD PTR [eax]
   19fbc:	push   esi
   19fbd:	mov    esi,DWORD PTR [ecx+0x8]
   19fc0:	mov    DWORD PTR [esi],eax
   19fc2:	pop    esi
   19fc3:	push   edx
   19fc4:	push   DWORD PTR [ebp+0xc]
   19fc7:	lea    eax,[ebp-0x8]
   19fca:	push   eax
   19fcb:	mov    DWORD PTR [ebp-0x8],0x52ff
   19fd2:	mov    DWORD PTR [ebp-0x4],0x19d78
   19fd9:	call   0x19d78
   19fde:	leave  
   19fdf:	ret    0xc
   19fe2:	int3   
   19fe3:	int3   
   19fe4:	int3   
   19fe5:	int3   
   19fe6:	int3   
   19fe7:	int3   
   19fe8:	mov    edi,edi
   19fea:	push   ebp
   19feb:	mov    ebp,esp
   19fed:	sub    esp,0x5c
   19ff0:	mov    eax,ds:0x7771c
   19ff5:	xor    eax,ebp
   19ff7:	mov    DWORD PTR [ebp-0x4],eax
   19ffa:	mov    eax,DWORD PTR [ebp+0x10]
   19ffd:	push   esi
   19ffe:	mov    esi,DWORD PTR [ebp+0x8]
   1a001:	push   edi
   1a002:	mov    edi,DWORD PTR [ebp+0xc]
   1a005:	push   0x0
   1a007:	push   eax
   1a008:	lea    ecx,[ebp-0x5c]
   1a00b:	call   0x19d3e
   1a010:	push   edi
   1a011:	push   esi
   1a012:	lea    ecx,[ebp-0x5c]
   1a015:	call   0x19c80
   1a01a:	mov    ecx,DWORD PTR [ebp-0x4]
   1a01d:	pop    edi
   1a01e:	xor    ecx,ebp
   1a020:	pop    esi
   1a021:	call   0x1da73
   1a026:	leave  
   1a027:	ret    0xc
   1a02a:	int3   
   1a02b:	int3   
   1a02c:	int3   
   1a02d:	int3   
   1a02e:	int3   
   1a02f:	int3   
   1a030:	mov    edi,edi
   1a032:	push   ebp
   1a033:	mov    ebp,esp
   1a035:	push   esi
   1a036:	mov    esi,DWORD PTR [ebp+0x8]
   1a039:	push   edi
   1a03a:	mov    edi,ecx
   1a03c:	cmp    edi,esi
   1a03e:	je     0x1a06b
   1a040:	mov    eax,DWORD PTR [edi+0x4]
   1a043:	cmp    eax,DWORD PTR [esi+0x4]
   1a046:	je     0x1a05a
   1a048:	cmp    BYTE PTR [edi],0x0
   1a04b:	je     0x1a054
   1a04d:	push   eax
   1a04e:	call   0x1da56
   1a053:	pop    ecx
   1a054:	mov    al,BYTE PTR [esi]
   1a056:	mov    BYTE PTR [edi],al
   1a058:	jmp    0x1a062
   1a05a:	cmp    BYTE PTR [esi],0x0
   1a05d:	je     0x1a062
   1a05f:	mov    BYTE PTR [edi],0x1
   1a062:	mov    eax,DWORD PTR [esi+0x4]
   1a065:	mov    BYTE PTR [esi],0x0
   1a068:	mov    DWORD PTR [edi+0x4],eax
   1a06b:	mov    eax,edi
   1a06d:	pop    edi
   1a06e:	pop    esi
   1a06f:	pop    ebp
   1a070:	ret    0x4
   1a073:	int3   
   1a074:	int3   
   1a075:	int3   
   1a076:	int3   
   1a077:	int3   
   1a078:	mov    edi,edi
   1a07a:	push   ebp
   1a07b:	mov    ebp,esp
   1a07d:	sub    esp,0x50
   1a080:	push   ebx
   1a081:	push   esi
   1a082:	push   edi
   1a083:	mov    edi,0x4000
   1a088:	push   edi
   1a089:	call   0x11d78
   1a08e:	pop    ecx
   1a08f:	xor    ebx,ebx
   1a091:	push   0x38
   1a093:	push   0x1ed22
   1a098:	cmp    eax,ebx
   1a09a:	mov    DWORD PTR [ebp-0x4],eax
   1a09d:	mov    DWORD PTR [ebp-0xc],eax
   1a0a0:	push   0x2f
   1a0a2:	lea    eax,[ebp-0x50]
   1a0a5:	setne  BYTE PTR [ebp-0x10]
   1a0a9:	push   eax
   1a0aa:	xor    esi,esi
   1a0ac:	mov    DWORD PTR [ebp-0x30],ebx
   1a0af:	mov    DWORD PTR [ebp-0x2c],ebx
   1a0b2:	mov    DWORD PTR [ebp-0x28],ebx
   1a0b5:	mov    DWORD PTR [ebp-0x4c],ebx
   1a0b8:	mov    DWORD PTR [ebp-0x50],ebx
   1a0bb:	call   0x1b94a
   1a0c0:	test   eax,eax
   1a0c2:	je     0x1a0e1
   1a0c4:	mov    esi,DWORD PTR [ebp+0x8]
   1a0c7:	mov    BYTE PTR [esi],bl
   1a0c9:	mov    DWORD PTR [esi+0x4],ebx
   1a0cc:	cmp    BYTE PTR [ebp-0x10],bl
   1a0cf:	je     0x1a0da
   1a0d1:	push   DWORD PTR [ebp-0x4]
   1a0d4:	call   0x1da56
   1a0d9:	pop    ecx
   1a0da:	mov    eax,esi
   1a0dc:	jmp    0x1a1f6
   1a0e1:	mov    eax,DWORD PTR [ebp+0x10]
   1a0e4:	mov    DWORD PTR [ebp-0x4c],eax
   1a0e7:	mov    eax,DWORD PTR [ebp+0xc]
   1a0ea:	mov    DWORD PTR [ebp-0x50],eax
   1a0ed:	mov    eax,DWORD PTR [ebp-0xc]
   1a0f0:	add    eax,esi
   1a0f2:	mov    DWORD PTR [ebp-0x44],eax
   1a0f5:	push   0x4
   1a0f7:	lea    eax,[ebp-0x50]
   1a0fa:	push   eax
   1a0fb:	mov    DWORD PTR [ebp-0x40],edi
   1a0fe:	call   0x1bade
   1a103:	cmp    eax,0xfffffffc
   1a106:	mov    DWORD PTR [ebp+0x10],eax
   1a109:	jl     0x1a11d
   1a10b:	cmp    eax,0xfffffffd
   1a10e:	jle    0x1a1a6
   1a114:	cmp    eax,0x2
   1a117:	je     0x1a1a6
   1a11d:	mov    eax,edi
   1a11f:	sub    eax,DWORD PTR [ebp-0x40]
   1a122:	add    esi,eax
   1a124:	cmp    DWORD PTR [ebp-0x40],ebx
   1a127:	jne    0x1a190
   1a129:	mov    al,BYTE PTR [ebp-0x10]
   1a12c:	mov    BYTE PTR [ebp-0x18],al
   1a12f:	mov    eax,DWORD PTR [ebp-0xc]
   1a132:	mov    DWORD PTR [ebp-0x14],eax
   1a135:	lea    eax,[esi+0x4000]
   1a13b:	push   eax
   1a13c:	mov    BYTE PTR [ebp-0x10],bl
   1a13f:	call   0x11d78
   1a144:	pop    ecx
   1a145:	cmp    eax,ebx
   1a147:	setne  cl
   1a14a:	mov    DWORD PTR [ebp-0x4],eax
   1a14d:	lea    eax,[ebp-0x8]
   1a150:	mov    BYTE PTR [ebp-0x8],cl
   1a153:	push   eax
   1a154:	lea    ecx,[ebp-0x10]
   1a157:	call   0x1a030
   1a15c:	cmp    BYTE PTR [ebp-0x8],bl
   1a15f:	je     0x1a16a
   1a161:	push   DWORD PTR [ebp-0x4]
   1a164:	call   0x1da56
   1a169:	pop    ecx
   1a16a:	push   esi
   1a16b:	push   DWORD PTR [ebp-0x14]
   1a16e:	push   DWORD PTR [ebp-0xc]
   1a171:	call   0x1dad8
   1a176:	add    esp,0xc
   1a179:	cmp    BYTE PTR [ebp-0x18],bl
   1a17c:	je     0x1a187
   1a17e:	push   DWORD PTR [ebp-0x14]
   1a181:	call   0x1da56
   1a186:	pop    ecx
   1a187:	cmp    DWORD PTR [ebp-0x40],ebx
   1a18a:	je     0x1a0ed
   1a190:	lea    eax,[ebp-0x50]
   1a193:	push   eax
   1a194:	call   0x1ccfc
   1a199:	cmp    DWORD PTR [ebp+0x10],0x1
   1a19d:	jne    0x1a1c8
   1a19f:	mov    eax,DWORD PTR [ebp+0x14]
   1a1a2:	mov    DWORD PTR [eax],esi
   1a1a4:	jmp    0x1a1e8
   1a1a6:	lea    eax,[ebp-0x50]
   1a1a9:	push   eax
   1a1aa:	call   0x1ccfc
   1a1af:	mov    esi,DWORD PTR [ebp+0x8]
   1a1b2:	mov    BYTE PTR [esi],bl
   1a1b4:	mov    DWORD PTR [esi+0x4],ebx
   1a1b7:	cmp    BYTE PTR [ebp-0x10],bl
   1a1ba:	je     0x1a0da
   1a1c0:	push   DWORD PTR [ebp-0xc]
   1a1c3:	jmp    0x1a0d4
   1a1c8:	lea    eax,[ebp-0x18]
   1a1cb:	push   eax
   1a1cc:	lea    ecx,[ebp-0x10]
   1a1cf:	mov    BYTE PTR [ebp-0x18],bl
   1a1d2:	mov    DWORD PTR [ebp-0x14],ebx
   1a1d5:	call   0x1a030
   1a1da:	cmp    BYTE PTR [ebp-0x18],bl
   1a1dd:	je     0x1a1e8
   1a1df:	push   DWORD PTR [ebp-0x14]
   1a1e2:	call   0x1da56
   1a1e7:	pop    ecx
   1a1e8:	mov    eax,DWORD PTR [ebp+0x8]
   1a1eb:	mov    cl,BYTE PTR [ebp-0x10]
   1a1ee:	mov    BYTE PTR [eax],cl
   1a1f0:	mov    ecx,DWORD PTR [ebp-0xc]
   1a1f3:	mov    DWORD PTR [eax+0x4],ecx
   1a1f6:	pop    edi
   1a1f7:	pop    esi
   1a1f8:	pop    ebx
   1a1f9:	leave  
   1a1fa:	ret    0x10
   1a1fd:	int3   
   1a1fe:	int3   
   1a1ff:	int3   
   1a200:	int3   
   1a201:	int3   
   1a202:	xor    eax,eax
   1a204:	push   eax
   1a205:	push   eax
   1a206:	push   eax
   1a207:	push   eax
   1a208:	push   0x78430
   1a20d:	call   DWORD PTR ds:0x1f020
   1a213:	test   eax,eax
   1a215:	setge  al
   1a218:	ret    
   1a219:	int3   
   1a21a:	int3   
   1a21b:	int3   
   1a21c:	int3   
   1a21d:	int3   
   1a21e:	push   0x0
   1a220:	push   0x78430
   1a225:	call   DWORD PTR ds:0x1f01c
   1a22b:	ret    
   1a22c:	int3   
   1a22d:	int3   
   1a22e:	int3   
   1a22f:	int3   
   1a230:	int3   
   1a231:	int3   
   1a232:	mov    edi,edi
   1a234:	push   esi
   1a235:	push   edi
   1a236:	push   0x1
   1a238:	xor    edi,edi
   1a23a:	push   edi
   1a23b:	mov    esi,ecx
   1a23d:	call   0x14492
   1a242:	cmp    DWORD PTR ds:0x782cc,edi
   1a248:	jne    0x1a25f
   1a24a:	mov    ecx,eax
   1a24c:	mov    DWORD PTR ds:0x782cc,ecx
   1a252:	mov    DWORD PTR [ecx],edi
   1a254:	mov    ecx,DWORD PTR ds:0x782cc
   1a25a:	xor    eax,eax
   1a25c:	mov    DWORD PTR [ecx+0x8],edi
   1a25f:	inc    DWORD PTR ds:0x78458
   1a265:	cmp    eax,edi
   1a267:	je     0x1a270
   1a269:	push   eax
   1a26a:	call   0x1da56
   1a26f:	pop    ecx
   1a270:	push   edi
   1a271:	push   DWORD PTR ds:0x782cc
   1a277:	mov    ecx,esi
   1a279:	call   0x14492
   1a27e:	mov    DWORD PTR [esi+0xc],edi
   1a281:	mov    DWORD PTR [esi+0x4],eax
   1a284:	mov    DWORD PTR [eax],eax
   1a286:	mov    esi,DWORD PTR [esi+0x4]
   1a289:	pop    edi
   1a28a:	mov    DWORD PTR [esi+0x8],esi
   1a28d:	pop    esi
   1a28e:	ret    
   1a28f:	int3   
   1a290:	int3   
   1a291:	int3   
   1a292:	int3   
   1a293:	int3   
   1a294:	mov    edi,edi
   1a296:	push   ebx
   1a297:	push   esi
   1a298:	xor    ebx,ebx
   1a29a:	push   ebx
   1a29b:	push   0x78430
   1a2a0:	call   0x11b22
   1a2a5:	call   eax
   1a2a7:	push   0x10
   1a2a9:	call   0x11d78
   1a2ae:	mov    esi,eax
   1a2b0:	pop    ecx
   1a2b1:	cmp    esi,ebx
   1a2b3:	je     0x1a2c7
   1a2b5:	mov    ecx,esi
   1a2b7:	mov    BYTE PTR [esi+0x8],bl
   1a2ba:	call   0x1a232
   1a2bf:	mov    DWORD PTR ds:0x78450,esi
   1a2c5:	jmp    0x1a2cd
   1a2c7:	mov    DWORD PTR ds:0x78450,ebx
   1a2cd:	push   0x10
   1a2cf:	call   0x11d78
   1a2d4:	mov    esi,eax
   1a2d6:	pop    ecx
   1a2d7:	cmp    esi,ebx
   1a2d9:	je     0x1a2ed
   1a2db:	mov    ecx,esi
   1a2dd:	mov    BYTE PTR [esi+0x8],bl
   1a2e0:	call   0x148e2
   1a2e5:	mov    DWORD PTR ds:0x78454,esi
   1a2eb:	jmp    0x1a2f3
   1a2ed:	mov    DWORD PTR ds:0x78454,ebx
   1a2f3:	pop    esi
   1a2f4:	pop    ebx
   1a2f5:	ret    
   1a2f6:	int3   
   1a2f7:	int3   
   1a2f8:	int3   
   1a2f9:	int3   
   1a2fa:	int3   
   1a2fb:	int3   
   1a2fc:	mov    eax,ecx
   1a2fe:	add    DWORD PTR [eax+0x8],0x4
   1a302:	mov    ecx,DWORD PTR [eax+0x8]
   1a305:	cmp    ecx,DWORD PTR [eax+0x4]
   1a308:	jne    0x1a323
   1a30a:	add    DWORD PTR [eax+0xc],0x4
   1a30e:	mov    ecx,DWORD PTR [eax+0xc]
   1a311:	mov    ecx,DWORD PTR [ecx]
   1a313:	mov    DWORD PTR [eax],ecx
   1a315:	add    ecx,0x1000
   1a31b:	mov    DWORD PTR [eax+0x4],ecx
   1a31e:	mov    ecx,DWORD PTR [eax]
   1a320:	mov    DWORD PTR [eax+0x8],ecx
   1a323:	ret    
   1a324:	int3   
   1a325:	int3   
   1a326:	int3   
   1a327:	int3   
   1a328:	int3   
   1a329:	int3   
   1a32a:	mov    edi,edi
   1a32c:	push   ebp
   1a32d:	mov    ebp,esp
   1a32f:	mov    eax,ecx
   1a331:	mov    ecx,DWORD PTR [ebp+0xc]
   1a334:	mov    edx,DWORD PTR [ecx]
   1a336:	mov    DWORD PTR [eax],edx
   1a338:	mov    edx,DWORD PTR [ecx]
   1a33a:	add    edx,0x1000
   1a340:	mov    DWORD PTR [eax+0x4],edx
   1a343:	mov    edx,DWORD PTR [ebp+0x8]
   1a346:	mov    DWORD PTR [eax+0x8],edx
   1a349:	mov    DWORD PTR [eax+0xc],ecx
   1a34c:	pop    ebp
   1a34d:	ret    0x8
   1a350:	int3   
   1a351:	int3   
   1a352:	int3   
   1a353:	int3   
   1a354:	int3   
   1a355:	int3   
   1a356:	mov    edi,edi
   1a358:	push   ebp
   1a359:	mov    ebp,esp
   1a35b:	mov    eax,DWORD PTR [ebp+0x8]
   1a35e:	mov    edx,DWORD PTR ds:0x7848c
   1a364:	jmp    0x1a368
   1a366:	mov    eax,ecx
   1a368:	mov    ecx,DWORD PTR [eax+0x8]
   1a36b:	cmp    ecx,edx
   1a36d:	jne    0x1a366
   1a36f:	pop    ebp
   1a370:	ret    0x4
   1a373:	int3   
   1a374:	int3   
   1a375:	int3   
   1a376:	int3   
   1a377:	int3   
   1a378:	mov    edi,edi
   1a37a:	push   ebp
   1a37b:	mov    ebp,esp
   1a37d:	mov    eax,DWORD PTR [ebp+0x8]
   1a380:	mov    edx,DWORD PTR ds:0x7848c
   1a386:	jmp    0x1a38a
   1a388:	mov    eax,ecx
   1a38a:	mov    ecx,DWORD PTR [eax]
   1a38c:	cmp    ecx,edx
   1a38e:	jne    0x1a388
   1a390:	pop    ebp
   1a391:	ret    0x4
   1a394:	int3   
   1a395:	int3   
   1a396:	int3   
   1a397:	int3   
   1a398:	int3   
   1a399:	int3   
   1a39a:	mov    edi,edi
   1a39c:	push   esi
   1a39d:	mov    esi,ecx
   1a39f:	mov    ecx,DWORD PTR [esi]
   1a3a1:	mov    eax,DWORD PTR [ecx+0x8]
   1a3a4:	cmp    eax,DWORD PTR ds:0x7848c
   1a3aa:	je     0x1a3b8
   1a3ac:	push   eax
   1a3ad:	call   0x1a378
   1a3b2:	jmp    0x1a3c7
   1a3b4:	mov    DWORD PTR [esi],eax
   1a3b6:	mov    ecx,eax
   1a3b8:	mov    eax,DWORD PTR [ecx+0x4]
   1a3bb:	cmp    ecx,DWORD PTR [eax+0x8]
   1a3be:	je     0x1a3b4
   1a3c0:	mov    ecx,DWORD PTR [esi]
   1a3c2:	cmp    DWORD PTR [ecx+0x8],eax
   1a3c5:	je     0x1a3c9
   1a3c7:	mov    DWORD PTR [esi],eax
   1a3c9:	pop    esi
   1a3ca:	ret    
   1a3cb:	int3   
   1a3cc:	int3   
   1a3cd:	int3   
   1a3ce:	int3   
   1a3cf:	int3   
   1a3d0:	mov    edi,edi
   1a3d2:	push   ebp
   1a3d3:	mov    ebp,esp
   1a3d5:	mov    eax,DWORD PTR [ebp+0x8]
   1a3d8:	test   eax,eax
   1a3da:	je     0x1a3e3
   1a3dc:	mov    ecx,DWORD PTR [ebp+0xc]
   1a3df:	mov    ecx,DWORD PTR [ecx]
   1a3e1:	mov    DWORD PTR [eax],ecx
   1a3e3:	pop    ebp
   1a3e4:	ret    0x8
   1a3e7:	int3   
   1a3e8:	int3   
   1a3e9:	int3   
   1a3ea:	int3   
   1a3eb:	int3   
   1a3ec:	mov    edi,edi
   1a3ee:	push   ebp
   1a3ef:	mov    ebp,esp
   1a3f1:	mov    eax,DWORD PTR [ebp+0x8]
   1a3f4:	jmp    0x1a404
   1a3f6:	mov    ecx,DWORD PTR [eax]
   1a3f8:	mov    edx,DWORD PTR [ebp+0x10]
   1a3fb:	add    DWORD PTR [ebp+0x10],0x4
   1a3ff:	mov    DWORD PTR [edx],ecx
   1a401:	add    eax,0x4
   1a404:	cmp    eax,DWORD PTR [ebp+0xc]
   1a407:	jne    0x1a3f6
   1a409:	mov    eax,DWORD PTR [ebp+0x10]
   1a40c:	pop    ebp
   1a40d:	ret    0xc
   1a410:	int3   
   1a411:	int3   
   1a412:	int3   
   1a413:	int3   
   1a414:	int3   
   1a415:	int3   
   1a416:	mov    edi,edi
   1a418:	push   ebp
   1a419:	mov    ebp,esp
   1a41b:	mov    eax,DWORD PTR [ebp+0x8]
   1a41e:	test   eax,eax
   1a420:	jge    0x1a424
   1a422:	xor    eax,eax
   1a424:	shl    eax,0x2
   1a427:	push   eax
   1a428:	call   0x11d78
   1a42d:	pop    ecx
   1a42e:	pop    ebp
   1a42f:	ret    0x8
   1a432:	int3   
   1a433:	int3   
   1a434:	int3   
   1a435:	int3   
   1a436:	int3   
   1a437:	int3   
   1a438:	mov    edi,edi
   1a43a:	push   ebp
   1a43b:	mov    ebp,esp
   1a43d:	push   esi
   1a43e:	mov    esi,ecx
   1a440:	push   DWORD PTR [esi]
   1a442:	call   0x1da56
   1a447:	test   BYTE PTR [ebp+0x8],0x1
   1a44b:	pop    ecx
   1a44c:	je     0x1a455
   1a44e:	push   esi
   1a44f:	call   0x1da56
   1a454:	pop    ecx
   1a455:	mov    eax,esi
   1a457:	pop    esi
   1a458:	pop    ebp
   1a459:	ret    0x4
   1a45c:	int3   
   1a45d:	int3   
   1a45e:	int3   
   1a45f:	int3   
   1a460:	int3   
   1a461:	int3   
   1a462:	mov    edi,edi
   1a464:	push   ebp
   1a465:	mov    ebp,esp
   1a467:	mov    eax,ds:0x78484
   1a46c:	sub    esp,0x20
   1a46f:	push   ebx
   1a470:	push   esi
   1a471:	push   edi
   1a472:	lea    esi,[eax+0x4]
   1a475:	lea    edi,[ebp-0x10]
   1a478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a47b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a47c:	lea    ebx,[eax+0x14]
   1a47f:	jmp    0x1a49d
   1a481:	mov    eax,DWORD PTR [eax]
   1a483:	mov    ecx,DWORD PTR [eax+0x8]
   1a486:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a489:	jne    0x1a495
   1a48b:	cmp    BYTE PTR [eax+0x24],0x0
   1a48f:	jne    0x1a4ae
   1a491:	mov    BYTE PTR [eax+0x24],0x1
   1a495:	lea    ecx,[ebp-0x10]
   1a498:	call   0x1a2fc
   1a49d:	mov    eax,DWORD PTR [ebp-0x8]
   1a4a0:	lea    edi,[ebp-0x20]
   1a4a3:	mov    esi,ebx
   1a4a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4a9:	cmp    eax,DWORD PTR [ebp-0x18]
   1a4ac:	jne    0x1a481
   1a4ae:	pop    edi
   1a4af:	pop    esi
   1a4b0:	pop    ebx
   1a4b1:	leave  
   1a4b2:	ret    0x4
   1a4b5:	int3   
   1a4b6:	int3   
   1a4b7:	int3   
   1a4b8:	int3   
   1a4b9:	int3   
   1a4ba:	mov    eax,ecx
   1a4bc:	xor    ecx,ecx
   1a4be:	mov    DWORD PTR [eax+0x4],ecx
   1a4c1:	mov    DWORD PTR [eax+0x8],ecx
   1a4c4:	mov    DWORD PTR [eax+0xc],ecx
   1a4c7:	mov    DWORD PTR [eax+0x10],ecx
   1a4ca:	mov    DWORD PTR [eax+0x14],ecx
   1a4cd:	mov    DWORD PTR [eax+0x18],ecx
   1a4d0:	mov    DWORD PTR [eax+0x1c],ecx
   1a4d3:	mov    DWORD PTR [eax+0x20],ecx
   1a4d6:	mov    DWORD PTR [eax+0x24],ecx
   1a4d9:	mov    DWORD PTR [eax+0x28],ecx
   1a4dc:	mov    DWORD PTR [eax+0x2c],ecx
   1a4df:	ret    0x4
   1a4e2:	int3   
   1a4e3:	int3   
   1a4e4:	int3   
   1a4e5:	int3   
   1a4e6:	int3   
   1a4e7:	int3   
   1a4e8:	mov    edi,edi
   1a4ea:	push   ebp
   1a4eb:	mov    ebp,esp
   1a4ed:	sub    esp,0x10
   1a4f0:	push   esi
   1a4f1:	push   edi
   1a4f2:	lea    esi,[ecx+0x4]
   1a4f5:	lea    edi,[ebp-0x10]
   1a4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4fc:	mov    eax,DWORD PTR [ebp-0x8]
   1a4ff:	pop    edi
   1a500:	pop    esi
   1a501:	leave  
   1a502:	ret    
   1a503:	int3   
   1a504:	int3   
   1a505:	int3   
   1a506:	int3   
   1a507:	int3   
   1a508:	mov    edi,edi
   1a50a:	push   ebp
   1a50b:	mov    ebp,esp
   1a50d:	mov    edx,DWORD PTR [ebp+0x8]
   1a510:	mov    eax,DWORD PTR [edx+0x8]
   1a513:	push   esi
   1a514:	mov    esi,DWORD PTR [eax]
   1a516:	mov    DWORD PTR [edx+0x8],esi
   1a519:	mov    esi,DWORD PTR [eax]
   1a51b:	cmp    esi,DWORD PTR ds:0x7848c
   1a521:	je     0x1a526
   1a523:	mov    DWORD PTR [esi+0x4],edx
   1a526:	mov    esi,DWORD PTR [edx+0x4]
   1a529:	mov    DWORD PTR [eax+0x4],esi
   1a52c:	mov    ecx,DWORD PTR [ecx+0x4]
   1a52f:	pop    esi
   1a530:	cmp    edx,DWORD PTR [ecx+0x4]
   1a533:	jne    0x1a53a
   1a535:	mov    DWORD PTR [ecx+0x4],eax
   1a538:	jmp    0x1a548
   1a53a:	mov    ecx,DWORD PTR [edx+0x4]
   1a53d:	cmp    edx,DWORD PTR [ecx]
   1a53f:	jne    0x1a545
   1a541:	mov    DWORD PTR [ecx],eax
   1a543:	jmp    0x1a548
   1a545:	mov    DWORD PTR [ecx+0x8],eax
   1a548:	mov    DWORD PTR [eax],edx
   1a54a:	mov    DWORD PTR [edx+0x4],eax
   1a54d:	pop    ebp
   1a54e:	ret    0x4
   1a551:	int3   
   1a552:	int3   
   1a553:	int3   
   1a554:	int3   
   1a555:	int3   
   1a556:	mov    edi,edi
   1a558:	push   ebp
   1a559:	mov    ebp,esp
   1a55b:	mov    edx,DWORD PTR [ebp+0x8]
   1a55e:	mov    eax,DWORD PTR [edx]
   1a560:	push   esi
   1a561:	mov    esi,DWORD PTR [eax+0x8]
   1a564:	mov    DWORD PTR [edx],esi
   1a566:	mov    esi,DWORD PTR [eax+0x8]
   1a569:	cmp    esi,DWORD PTR ds:0x7848c
   1a56f:	je     0x1a574
   1a571:	mov    DWORD PTR [esi+0x4],edx
   1a574:	mov    esi,DWORD PTR [edx+0x4]
   1a577:	mov    DWORD PTR [eax+0x4],esi
   1a57a:	mov    ecx,DWORD PTR [ecx+0x4]
   1a57d:	pop    esi
   1a57e:	cmp    edx,DWORD PTR [ecx+0x4]
   1a581:	jne    0x1a588
   1a583:	mov    DWORD PTR [ecx+0x4],eax
   1a586:	jmp    0x1a597
   1a588:	mov    ecx,DWORD PTR [edx+0x4]
   1a58b:	cmp    edx,DWORD PTR [ecx+0x8]
   1a58e:	jne    0x1a595
   1a590:	mov    DWORD PTR [ecx+0x8],eax
   1a593:	jmp    0x1a597
   1a595:	mov    DWORD PTR [ecx],eax
   1a597:	mov    DWORD PTR [eax+0x8],edx
   1a59a:	mov    DWORD PTR [edx+0x4],eax
   1a59d:	pop    ebp
   1a59e:	ret    0x4
   1a5a1:	int3   
   1a5a2:	int3   
   1a5a3:	int3   
   1a5a4:	int3   
   1a5a5:	int3   
   1a5a6:	mov    edi,edi
   1a5a8:	push   esi
   1a5a9:	mov    esi,ecx
   1a5ab:	mov    ecx,DWORD PTR [esi]
   1a5ad:	cmp    DWORD PTR [ecx+0x14],0x0
   1a5b1:	jne    0x1a5c0
   1a5b3:	mov    eax,DWORD PTR [ecx+0x4]
   1a5b6:	cmp    DWORD PTR [eax+0x4],ecx
   1a5b9:	jne    0x1a5c0
   1a5bb:	mov    eax,DWORD PTR [ecx+0x8]
   1a5be:	jmp    0x1a5dd
   1a5c0:	mov    eax,DWORD PTR [ecx]
   1a5c2:	cmp    eax,DWORD PTR ds:0x7848c
   1a5c8:	je     0x1a5d6
   1a5ca:	push   eax
   1a5cb:	call   0x1a356
   1a5d0:	jmp    0x1a5dd
   1a5d2:	mov    DWORD PTR [esi],eax
   1a5d4:	mov    ecx,eax
   1a5d6:	mov    eax,DWORD PTR [ecx+0x4]
   1a5d9:	cmp    ecx,DWORD PTR [eax]
   1a5db:	je     0x1a5d2
   1a5dd:	mov    DWORD PTR [esi],eax
   1a5df:	pop    esi
   1a5e0:	ret    
   1a5e1:	int3   
   1a5e2:	int3   
   1a5e3:	int3   
   1a5e4:	int3   
   1a5e5:	int3   
   1a5e6:	mov    edi,edi
   1a5e8:	push   ebp
   1a5e9:	mov    ebp,esp
   1a5eb:	mov    eax,DWORD PTR [ecx+0x4]
   1a5ee:	push   esi
   1a5ef:	mov    esi,DWORD PTR [eax+0x4]
   1a5f2:	push   edi
   1a5f3:	mov    edi,eax
   1a5f5:	jmp    0x1a610
   1a5f7:	push   DWORD PTR [ebp+0x8]
   1a5fa:	lea    eax,[esi+0xc]
   1a5fd:	push   eax
   1a5fe:	call   0x197f6
   1a603:	test   al,al
   1a605:	je     0x1a60c
   1a607:	mov    esi,DWORD PTR [esi+0x8]
   1a60a:	jmp    0x1a610
   1a60c:	mov    edi,esi
   1a60e:	mov    esi,DWORD PTR [esi]
   1a610:	cmp    esi,DWORD PTR ds:0x7848c
   1a616:	jne    0x1a5f7
   1a618:	mov    eax,edi
   1a61a:	pop    edi
   1a61b:	pop    esi
   1a61c:	pop    ebp
   1a61d:	ret    0x4
   1a620:	int3   
   1a621:	int3   
   1a622:	int3   
   1a623:	int3   
   1a624:	int3   
   1a625:	int3   
   1a626:	mov    edi,edi
   1a628:	push   ebp
   1a629:	mov    ebp,esp
   1a62b:	mov    eax,DWORD PTR [ecx+0x4]
   1a62e:	push   esi
   1a62f:	mov    esi,DWORD PTR [eax+0x4]
   1a632:	push   edi
   1a633:	mov    edi,eax
   1a635:	jmp    0x1a650
   1a637:	lea    eax,[esi+0xc]
   1a63a:	push   eax
   1a63b:	push   DWORD PTR [ebp+0x8]
   1a63e:	call   0x197f6
   1a643:	test   al,al
   1a645:	je     0x1a64d
   1a647:	mov    edi,esi
   1a649:	mov    esi,DWORD PTR [esi]
   1a64b:	jmp    0x1a650
   1a64d:	mov    esi,DWORD PTR [esi+0x8]
   1a650:	cmp    esi,DWORD PTR ds:0x7848c
   1a656:	jne    0x1a637
   1a658:	mov    eax,edi
   1a65a:	pop    edi
   1a65b:	pop    esi
   1a65c:	pop    ebp
   1a65d:	ret    0x4
   1a660:	int3   
   1a661:	int3   
   1a662:	int3   
   1a663:	int3   
   1a664:	int3   
   1a665:	int3   
   1a666:	mov    edi,edi
   1a668:	push   ebp
   1a669:	mov    ebp,esp
   1a66b:	mov    ecx,DWORD PTR [ebp+0x8]
   1a66e:	test   ecx,ecx
   1a670:	je     0x1a67a
   1a672:	push   DWORD PTR [ebp+0xc]
   1a675:	call   0x134f0
   1a67a:	pop    ebp
   1a67b:	ret    0x8
   1a67e:	int3   
   1a67f:	int3   
   1a680:	int3   
   1a681:	int3   
   1a682:	int3   
   1a683:	int3   
   1a684:	mov    edi,edi
   1a686:	push   ebp
   1a687:	mov    ebp,esp
   1a689:	mov    ecx,DWORD PTR [ebp+0x8]
   1a68c:	push   0x0
   1a68e:	call   0x1a438
   1a693:	pop    ebp
   1a694:	ret    0x4
   1a697:	int3   
   1a698:	int3   
   1a699:	int3   
   1a69a:	int3   
   1a69b:	int3   
   1a69c:	mov    edi,edi
   1a69e:	push   ebp
   1a69f:	mov    ebp,esp
   1a6a1:	push   edi
   1a6a2:	mov    edi,DWORD PTR [ebp+0xc]
   1a6a5:	cmp    DWORD PTR [ebp+0x8],edi
   1a6a8:	je     0x1a6be
   1a6aa:	push   esi
   1a6ab:	mov    esi,DWORD PTR [ebp+0x10]
   1a6ae:	inc    DWORD PTR [esi]
   1a6b0:	lea    ecx,[ebp+0x8]
   1a6b3:	call   0x1a39a
   1a6b8:	cmp    DWORD PTR [ebp+0x8],edi
   1a6bb:	jne    0x1a6ae
   1a6bd:	pop    esi
   1a6be:	pop    edi
   1a6bf:	pop    ebp
   1a6c0:	ret    
   1a6c1:	int3   
   1a6c2:	int3   
   1a6c3:	int3   
   1a6c4:	int3   
   1a6c5:	int3   
   1a6c6:	mov    edi,edi
   1a6c8:	push   ebp
   1a6c9:	mov    ebp,esp
   1a6cb:	mov    eax,DWORD PTR [ebp+0xc]
   1a6ce:	mov    ecx,DWORD PTR [eax+0x34]
   1a6d1:	lea    eax,[ecx+eax*1+0x40]
   1a6d5:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6d8:	push   0xffffffff
   1a6da:	push   eax
   1a6db:	call   0x134d0
   1a6e0:	mov    eax,DWORD PTR [ebp+0x8]
   1a6e3:	pop    ebp
   1a6e4:	ret    0x8
   1a6e7:	int3   
   1a6e8:	int3   
   1a6e9:	int3   
   1a6ea:	int3   
   1a6eb:	int3   
   1a6ec:	mov    edi,edi
   1a6ee:	push   ebp
   1a6ef:	mov    ebp,esp
   1a6f1:	mov    eax,DWORD PTR [ebp+0xc]
   1a6f4:	mov    ecx,DWORD PTR [eax+0x38]
   1a6f7:	lea    eax,[ecx+eax*1+0x40]
   1a6fb:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6fe:	push   0xffffffff
   1a700:	push   eax
   1a701:	call   0x134d0
   1a706:	mov    eax,DWORD PTR [ebp+0x8]
   1a709:	pop    ebp
   1a70a:	ret    0x8
   1a70d:	int3   
   1a70e:	int3   
   1a70f:	int3   
   1a710:	int3   
   1a711:	int3   
   1a712:	mov    edi,edi
   1a714:	push   ebp
   1a715:	mov    ebp,esp
   1a717:	mov    eax,DWORD PTR [ebp+0xc]
   1a71a:	mov    ecx,DWORD PTR [eax+0x3c]
   1a71d:	lea    eax,[ecx+eax*1+0x40]
   1a721:	mov    ecx,DWORD PTR [ebp+0x8]
   1a724:	push   0xffffffff
   1a726:	push   eax
   1a727:	call   0x134d0
   1a72c:	mov    eax,DWORD PTR [ebp+0x8]
   1a72f:	pop    ebp
   1a730:	ret    0x8
   1a733:	int3   
   1a734:	int3   
   1a735:	int3   
   1a736:	int3   
   1a737:	int3   
   1a738:	mov    edi,edi
   1a73a:	push   ebp
   1a73b:	mov    ebp,esp
   1a73d:	sub    esp,0x1c
   1a740:	mov    eax,ds:0x78484
   1a745:	and    DWORD PTR [ebp-0x4],0x0
   1a749:	push   ebx
   1a74a:	mov    ebx,DWORD PTR [ebp+0x8]
   1a74d:	push   esi
   1a74e:	push   edi
   1a74f:	lea    esi,[eax+0x4]
   1a752:	mov    edi,ebx
   1a754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a758:	lea    esi,[eax+0x14]
   1a75b:	jmp    0x1a7b8
   1a75d:	push   DWORD PTR [ebp+0xc]
   1a760:	mov    eax,DWORD PTR [ebx+0x8]
   1a763:	push   DWORD PTR [eax]
   1a765:	or     DWORD PTR [ebp-0x4],0x1
   1a769:	lea    eax,[ebp-0xc]
   1a76c:	push   eax
   1a76d:	call   0x1a712
   1a772:	push   eax
   1a773:	call   0x19806
   1a778:	test   al,al
   1a77a:	je     0x1a78b
   1a77c:	mov    eax,DWORD PTR [ebx+0x8]
   1a77f:	mov    eax,DWORD PTR [eax]
   1a781:	cmp    BYTE PTR [eax+0x1c],0x0
   1a785:	mov    BYTE PTR [ebp+0xb],0x1
   1a789:	jne    0x1a78f
   1a78b:	mov    BYTE PTR [ebp+0xb],0x0
   1a78f:	test   BYTE PTR [ebp-0x4],0x1
   1a793:	je     0x1a7a2
   1a795:	push   DWORD PTR [ebp-0xc]
   1a798:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a79c:	call   0x1da56
   1a7a1:	pop    ecx
   1a7a2:	cmp    BYTE PTR [ebp+0xb],0x0
   1a7a6:	jne    0x1a7c7
   1a7a8:	mov    ecx,ebx
   1a7aa:	call   0x1a2fc
   1a7af:	mov    esi,DWORD PTR ds:0x78484
   1a7b5:	add    esi,0x14
   1a7b8:	mov    eax,DWORD PTR [ebx+0x8]
   1a7bb:	lea    edi,[ebp-0x1c]
   1a7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7c2:	cmp    eax,DWORD PTR [ebp-0x14]
   1a7c5:	jne    0x1a75d
   1a7c7:	pop    edi
   1a7c8:	pop    esi
   1a7c9:	mov    eax,ebx
   1a7cb:	pop    ebx
   1a7cc:	leave  
   1a7cd:	ret    0x8
   1a7d0:	int3   
   1a7d1:	int3   
   1a7d2:	int3   
   1a7d3:	int3   
   1a7d4:	int3   
   1a7d5:	int3   
   1a7d6:	mov    edi,edi
   1a7d8:	push   ebp
   1a7d9:	mov    ebp,esp
   1a7db:	sub    esp,0x28
   1a7de:	mov    eax,DWORD PTR [ebp+0x8]
   1a7e1:	push   ebx
   1a7e2:	push   esi
   1a7e3:	push   edi
   1a7e4:	lea    esi,[eax+0x4]
   1a7e7:	mov    DWORD PTR [ebp-0x8],esi
   1a7ea:	lea    edi,[ebp-0x18]
   1a7ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7ef:	and    DWORD PTR [ebp-0x4],0x0
   1a7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7f5:	lea    ecx,[eax+0x14]
   1a7f8:	mov    eax,DWORD PTR [ebp-0x10]
   1a7fb:	mov    esi,ecx
   1a7fd:	lea    edi,[ebp-0x28]
   1a800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a803:	push   0x4
   1a805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a806:	pop    ebx
   1a807:	mov    DWORD PTR [ebp+0x8],ecx
   1a80a:	cmp    eax,DWORD PTR [ebp-0x20]
   1a80d:	je     0x1a82f
   1a80f:	mov    esi,ecx
   1a811:	lea    edi,[ebp-0x28]
   1a814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a818:	mov    eax,DWORD PTR [eax]
   1a81a:	add    ebx,DWORD PTR [eax]
   1a81c:	inc    DWORD PTR [ebp-0x4]
   1a81f:	lea    ecx,[ebp-0x18]
   1a822:	call   0x1a2fc
   1a827:	mov    eax,DWORD PTR [ebp-0x10]
   1a82a:	cmp    eax,DWORD PTR [ebp-0x20]
   1a82d:	jne    0x1a818
   1a82f:	mov    eax,DWORD PTR [ebp+0xc]
   1a832:	cmp    ebx,DWORD PTR [eax+0x4]
   1a835:	mov    DWORD PTR [eax+0x4],ebx
   1a838:	jbe    0x1a842
   1a83a:	mov    DWORD PTR [eax],0x1
   1a840:	jmp    0x1a888
   1a842:	and    DWORD PTR [eax],0x0
   1a845:	mov    esi,DWORD PTR [ebp-0x8]
   1a848:	lea    ebx,[eax+0x8]
   1a84b:	mov    eax,DWORD PTR [ebp-0x4]
   1a84e:	mov    DWORD PTR [ebx],eax
   1a850:	lea    edi,[ebp-0x28]
   1a853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a856:	add    ebx,0x4
   1a859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a85a:	jmp    0x1a876
   1a85c:	mov    eax,DWORD PTR [esi]
   1a85e:	push   DWORD PTR [eax]
   1a860:	push   eax
   1a861:	push   ebx
   1a862:	call   0x1dad8
   1a867:	mov    eax,DWORD PTR [esi]
   1a869:	add    ebx,DWORD PTR [eax]
   1a86b:	add    esp,0xc
   1a86e:	lea    ecx,[ebp-0x28]
   1a871:	call   0x1a2fc
   1a876:	mov    esi,DWORD PTR [ebp+0x8]
   1a879:	lea    edi,[ebp-0x18]
   1a87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a87f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a880:	mov    esi,DWORD PTR [ebp-0x20]
   1a883:	cmp    esi,DWORD PTR [ebp-0x10]
   1a886:	jne    0x1a85c
   1a888:	pop    edi
   1a889:	pop    esi
   1a88a:	pop    ebx
   1a88b:	leave  
   1a88c:	ret    0x8
   1a88f:	int3   
   1a890:	int3   
   1a891:	int3   
   1a892:	int3   
   1a893:	int3   
   1a894:	push   0x8
   1a896:	push   0x77400
   1a89b:	call   0x1db08
   1a8a0:	xor    esi,esi
   1a8a2:	push   esi
   1a8a3:	push   esi
   1a8a4:	push   esi
   1a8a5:	push   esi
   1a8a6:	push   0x7845c
   1a8ab:	call   DWORD PTR ds:0x1f020
   1a8b1:	cmp    eax,esi
   1a8b3:	jl     0x1a8f4
   1a8b5:	mov    DWORD PTR [ebp-0x4],esi
   1a8b8:	push   DWORD PTR [ebp+0x8]
   1a8bb:	push   DWORD PTR ds:0x78484
   1a8c1:	call   0x1a7d6
   1a8c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a8cd:	jmp    0x1a8e8
   1a8cf:	xor    eax,eax
   1a8d1:	inc    eax
   1a8d2:	ret    
   1a8d3:	mov    esp,DWORD PTR [ebp-0x18]
   1a8d6:	mov    eax,DWORD PTR [ebp+0x8]
   1a8d9:	mov    DWORD PTR [eax],0x2
   1a8df:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a8e6:	xor    esi,esi
   1a8e8:	push   esi
   1a8e9:	push   0x7845c
   1a8ee:	call   DWORD PTR ds:0x1f01c
   1a8f4:	call   0x1db4d
   1a8f9:	ret    0x4
   1a8fc:	int3   
   1a8fd:	int3   
   1a8fe:	int3   
   1a8ff:	int3   
   1a900:	int3   
   1a901:	int3   
   1a902:	mov    edi,edi
   1a904:	push   ebp
   1a905:	mov    ebp,esp
   1a907:	sub    esp,0x10
   1a90a:	push   ebx
   1a90b:	mov    ebx,ecx
   1a90d:	mov    eax,DWORD PTR [ebx+0x10]
   1a910:	push   esi
   1a911:	lea    ecx,[eax+0x4]
   1a914:	push   edi
   1a915:	mov    DWORD PTR [ebx+0x10],ecx
   1a918:	push   DWORD PTR [eax]
   1a91a:	call   0x1da56
   1a91f:	xor    eax,eax
   1a921:	pop    ecx
   1a922:	cmp    DWORD PTR [ebx+0x2c],eax
   1a925:	jne    0x1a952
   1a927:	mov    DWORD PTR [ebp-0x10],eax
   1a92a:	mov    DWORD PTR [ebp-0xc],eax
   1a92d:	mov    DWORD PTR [ebp-0x8],eax
   1a930:	mov    DWORD PTR [ebp-0x4],eax
   1a933:	lea    edi,[ebx+0x4]
   1a936:	lea    esi,[ebp-0x10]
   1a939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a93a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a93b:	push   DWORD PTR [ebx+0x24]
   1a93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a93f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a940:	lea    edi,[ebx+0x14]
   1a943:	lea    esi,[ebp-0x10]
   1a946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a94a:	call   0x1da56
   1a94f:	pop    ecx
   1a950:	jmp    0x1a969
   1a952:	mov    eax,DWORD PTR [ebx+0x10]
   1a955:	push   eax
   1a956:	push   DWORD PTR [eax]
   1a958:	lea    ecx,[ebp-0x10]
   1a95b:	call   0x1a32a
   1a960:	lea    edi,[ebx+0x4]
   1a963:	mov    esi,eax
   1a965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a969:	pop    edi
   1a96a:	pop    esi
   1a96b:	pop    ebx
   1a96c:	leave  
   1a96d:	ret    
   1a96e:	int3   
   1a96f:	int3   
   1a970:	int3   
   1a971:	int3   
   1a972:	int3   
   1a973:	int3   
   1a974:	mov    edi,edi
   1a976:	push   ebp
   1a977:	mov    ebp,esp
   1a979:	mov    eax,DWORD PTR [ebp+0xc]
   1a97c:	push   esi
   1a97d:	mov    esi,ecx
   1a97f:	mov    ecx,DWORD PTR [eax]
   1a981:	mov    DWORD PTR [ebp+0xc],ecx
   1a984:	mov    ecx,DWORD PTR [eax+0x4]
   1a987:	mov    edx,DWORD PTR [eax]
   1a989:	mov    DWORD PTR [ecx],edx
   1a98b:	mov    ecx,DWORD PTR [eax]
   1a98d:	mov    edx,DWORD PTR [eax+0x4]
   1a990:	push   eax
   1a991:	mov    DWORD PTR [ecx+0x4],edx
   1a994:	call   0x1da56
   1a999:	mov    eax,DWORD PTR [ebp+0x8]
   1a99c:	dec    DWORD PTR [esi+0x8]
   1a99f:	pop    ecx
   1a9a0:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9a3:	mov    DWORD PTR [eax],ecx
   1a9a5:	pop    esi
   1a9a6:	pop    ebp
   1a9a7:	ret    0x8
   1a9aa:	int3   
   1a9ab:	int3   
   1a9ac:	int3   
   1a9ad:	int3   
   1a9ae:	int3   
   1a9af:	int3   
   1a9b0:	mov    edi,edi
   1a9b2:	push   ebp
   1a9b3:	mov    ebp,esp
   1a9b5:	push   ecx
   1a9b6:	push   esi
   1a9b7:	mov    esi,ecx
   1a9b9:	jmp    0x1a9ce
   1a9bb:	mov    eax,ecx
   1a9bd:	mov    ecx,DWORD PTR [ecx]
   1a9bf:	push   eax
   1a9c0:	lea    eax,[ebp-0x4]
   1a9c3:	mov    DWORD PTR [ebp+0xc],ecx
   1a9c6:	push   eax
   1a9c7:	mov    ecx,esi
   1a9c9:	call   0x1a974
   1a9ce:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9d1:	cmp    ecx,DWORD PTR [ebp+0x10]
   1a9d4:	jne    0x1a9bb
   1a9d6:	mov    eax,DWORD PTR [ebp+0x8]
   1a9d9:	mov    DWORD PTR [eax],ecx
   1a9db:	pop    esi
   1a9dc:	leave  
   1a9dd:	ret    0xc
   1a9e0:	int3   
   1a9e1:	int3   
   1a9e2:	int3   
   1a9e3:	int3   
   1a9e4:	int3   
   1a9e5:	int3   
   1a9e6:	mov    edi,edi
   1a9e8:	push   ebp
   1a9e9:	mov    ebp,esp
   1a9eb:	push   0x0
   1a9ed:	push   0xc
   1a9ef:	call   0x132b0
   1a9f4:	mov    ecx,DWORD PTR [ebp+0x8]
   1a9f7:	test   ecx,ecx
   1a9f9:	jne    0x1a9fd
   1a9fb:	mov    ecx,eax
   1a9fd:	mov    DWORD PTR [eax],ecx
   1a9ff:	mov    ecx,DWORD PTR [ebp+0xc]
   1aa02:	test   ecx,ecx
   1aa04:	jne    0x1aa08
   1aa06:	mov    ecx,eax
   1aa08:	mov    DWORD PTR [eax+0x4],ecx
   1aa0b:	pop    ebp
   1aa0c:	ret    0x8
   1aa0f:	int3   
   1aa10:	int3   
   1aa11:	int3   
   1aa12:	int3   
   1aa13:	int3   
   1aa14:	mov    edi,edi
   1aa16:	push   esi
   1aa17:	mov    esi,ecx
   1aa19:	mov    eax,DWORD PTR [esi+0x28]
   1aa1c:	shl    eax,0x2
   1aa1f:	push   0x0
   1aa21:	push   eax
   1aa22:	call   0x132b0
   1aa27:	mov    DWORD PTR [esi+0x24],eax
   1aa2a:	pop    esi
   1aa2b:	ret    
   1aa2c:	int3   
   1aa2d:	int3   
   1aa2e:	int3   
   1aa2f:	int3   
   1aa30:	int3   
   1aa31:	int3   
   1aa32:	mov    edi,edi
   1aa34:	push   ebp
   1aa35:	mov    ebp,esp
   1aa37:	push   ebx
   1aa38:	push   esi
   1aa39:	push   edi
   1aa3a:	mov    edi,DWORD PTR [ebp+0x8]
   1aa3d:	mov    eax,0xfffffff
   1aa42:	mov    esi,ecx
   1aa44:	cmp    edi,eax
   1aa46:	jbe    0x1aa4a
   1aa48:	mov    edi,eax
   1aa4a:	mov    eax,edi
   1aa4c:	push   0x0
   1aa4e:	shl    eax,0x2
   1aa51:	push   eax
   1aa52:	call   0x132b0
   1aa57:	mov    ebx,eax
   1aa59:	mov    eax,edi
   1aa5b:	shr    eax,0x2
   1aa5e:	lea    eax,[ebx+eax*4]
   1aa61:	push   eax
   1aa62:	mov    DWORD PTR [ebp+0x8],eax
   1aa65:	mov    eax,DWORD PTR [esi+0x20]
   1aa68:	add    eax,0x4
   1aa6b:	push   eax
   1aa6c:	push   DWORD PTR [esi+0x10]
   1aa6f:	call   0x1a3ec
   1aa74:	push   DWORD PTR [esi+0x24]
   1aa77:	call   0x1da56
   1aa7c:	mov    eax,DWORD PTR [ebp+0x8]
   1aa7f:	pop    ecx
   1aa80:	mov    DWORD PTR [esi+0x28],edi
   1aa83:	pop    edi
   1aa84:	mov    DWORD PTR [esi+0x24],ebx
   1aa87:	pop    esi
   1aa88:	pop    ebx
   1aa89:	pop    ebp
   1aa8a:	ret    0x4
   1aa8d:	int3   
   1aa8e:	int3   
   1aa8f:	int3   
   1aa90:	int3   
   1aa91:	int3   
   1aa92:	mov    edi,edi
   1aa94:	push   ebp
   1aa95:	mov    ebp,esp
   1aa97:	push   ecx
   1aa98:	push   DWORD PTR [ebp-0x4]
   1aa9b:	push   DWORD PTR [ebp+0x10]
   1aa9e:	push   DWORD PTR [ebp+0xc]
   1aaa1:	push   DWORD PTR [ebp+0x8]
   1aaa4:	call   0x1a69c
   1aaa9:	add    esp,0x10
   1aaac:	leave  
   1aaad:	ret    
   1aaae:	int3   
   1aaaf:	int3   
   1aab0:	int3   
   1aab1:	int3   
   1aab2:	int3   
   1aab3:	int3   
   1aab4:	mov    edi,edi
   1aab6:	push   ebp
   1aab7:	mov    ebp,esp
   1aab9:	sub    esp,0x28
   1aabc:	push   ebx
   1aabd:	mov    ebx,DWORD PTR [ebp+0x8]
   1aac0:	push   esi
   1aac1:	push   edi
   1aac2:	push   0xffffffff
   1aac4:	push   ebx
   1aac5:	lea    ecx,[ebp-0x8]
   1aac8:	call   0x129d2
   1aacd:	and    DWORD PTR [ebx],0x0
   1aad0:	lea    eax,[ebp-0x8]
   1aad3:	push   eax
   1aad4:	lea    eax,[ebp-0x18]
   1aad7:	push   eax
   1aad8:	call   0x1a738
   1aadd:	mov    esi,DWORD PTR ds:0x78484
   1aae3:	mov    eax,DWORD PTR [ebp-0x10]
   1aae6:	push   DWORD PTR [ebp-0x8]
   1aae9:	add    esi,0x14
   1aaec:	lea    edi,[ebp-0x28]
   1aaef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aaf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aaf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aaf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aaf3:	cmp    eax,DWORD PTR [ebp-0x20]
   1aaf6:	je     0x1ab00
   1aaf8:	mov    eax,DWORD PTR [eax]
   1aafa:	mov    eax,DWORD PTR [eax+0x20]
   1aafd:	inc    eax
   1aafe:	mov    DWORD PTR [ebx],eax
   1ab00:	call   0x1da56
   1ab05:	pop    ecx
   1ab06:	pop    edi
   1ab07:	pop    esi
   1ab08:	pop    ebx
   1ab09:	leave  
   1ab0a:	ret    0x4
   1ab0d:	int3   
   1ab0e:	int3   
   1ab0f:	int3   
   1ab10:	int3   
   1ab11:	int3   
   1ab12:	add    DWORD PTR [ecx+0xc],0x4
   1ab16:	dec    DWORD PTR [ecx+0x2c]
   1ab19:	mov    eax,DWORD PTR [ecx+0xc]
   1ab1c:	je     0x1ab23
   1ab1e:	cmp    eax,DWORD PTR [ecx+0x8]
   1ab21:	jne    0x1ab28
   1ab23:	jmp    0x1a902
   1ab28:	ret    
   1ab29:	int3   
   1ab2a:	int3   
   1ab2b:	int3   
   1ab2c:	int3   
   1ab2d:	int3   
   1ab2e:	mov    edi,edi
   1ab30:	push   esi
   1ab31:	push   0x0
   1ab33:	push   0xc
   1ab35:	mov    esi,ecx
   1ab37:	call   0x132b0
   1ab3c:	mov    DWORD PTR [eax],eax
   1ab3e:	mov    DWORD PTR [eax+0x4],eax
   1ab41:	and    DWORD PTR [esi+0x8],0x0
   1ab45:	mov    DWORD PTR [esi+0x4],eax
   1ab48:	mov    eax,esi
   1ab4a:	pop    esi
   1ab4b:	ret    0x4
   1ab4e:	int3   
   1ab4f:	int3   
   1ab50:	int3   
   1ab51:	int3   
   1ab52:	int3   
   1ab53:	int3   
   1ab54:	mov    edi,edi
   1ab56:	push   ebp
   1ab57:	mov    ebp,esp
   1ab59:	push   ecx
   1ab5a:	push   esi
   1ab5b:	mov    esi,ecx
   1ab5d:	mov    eax,DWORD PTR [esi+0x4]
   1ab60:	mov    ecx,DWORD PTR [eax]
   1ab62:	push   eax
   1ab63:	push   ecx
   1ab64:	lea    eax,[ebp-0x4]
   1ab67:	push   eax
   1ab68:	mov    ecx,esi
   1ab6a:	call   0x1a9b0
   1ab6f:	push   DWORD PTR [esi+0x4]
   1ab72:	call   0x1da56
   1ab77:	and    DWORD PTR [esi+0x4],0x0
   1ab7b:	and    DWORD PTR [esi+0x8],0x0
   1ab7f:	pop    ecx
   1ab80:	pop    esi
   1ab81:	leave  
   1ab82:	ret    
   1ab83:	int3   
   1ab84:	int3   
   1ab85:	int3   
   1ab86:	int3   
   1ab87:	int3   
   1ab88:	mov    edi,edi
   1ab8a:	push   ebp
   1ab8b:	mov    ebp,esp
   1ab8d:	push   ecx
   1ab8e:	mov    eax,DWORD PTR [ecx+0x4]
   1ab91:	push   DWORD PTR [eax]
   1ab93:	lea    eax,[ebp-0x4]
   1ab96:	push   eax
   1ab97:	call   0x1a974
   1ab9c:	leave  
   1ab9d:	ret    
   1ab9e:	int3   
   1ab9f:	int3   
   1aba0:	int3   
   1aba1:	int3   
   1aba2:	int3   
   1aba3:	int3   
   1aba4:	mov    edi,edi
   1aba6:	push   ebp
   1aba7:	mov    ebp,esp
   1aba9:	sub    esp,0x18
   1abac:	push   ebx
   1abad:	push   esi
   1abae:	push   edi
   1abaf:	push   0x0
   1abb1:	push   0x400
   1abb6:	mov    ebx,ecx
   1abb8:	call   0x1a416
   1abbd:	cmp    DWORD PTR [ebx+0x2c],0x0
   1abc1:	mov    esi,eax
   1abc3:	mov    DWORD PTR [ebp-0x8],esi
   1abc6:	jne    0x1abfd
   1abc8:	mov    ecx,ebx
   1abca:	mov    DWORD PTR [ebx+0x28],0x2
   1abd1:	call   0x1aa14
   1abd6:	mov    eax,DWORD PTR [ebx+0x24]
   1abd9:	mov    DWORD PTR [eax+0x4],esi
   1abdc:	mov    eax,DWORD PTR [ebx+0x24]
   1abdf:	add    eax,0x4
   1abe2:	push   eax
   1abe3:	add    esi,0x800
   1abe9:	push   esi
   1abea:	lea    ecx,[ebp-0x18]
   1abed:	call   0x1a32a
   1abf2:	lea    edi,[ebx+0x4]
   1abf5:	mov    esi,eax
   1abf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abfb:	jmp    0x1ac5b
   1abfd:	mov    ecx,DWORD PTR [ebx+0x28]
   1ac00:	mov    edx,DWORD PTR [ebx+0x24]
   1ac03:	mov    eax,DWORD PTR [ebx+0x20]
   1ac06:	lea    ecx,[edx+ecx*4-0x4]
   1ac0a:	cmp    eax,ecx
   1ac0c:	jae    0x1ac1c
   1ac0e:	add    eax,0x4
   1ac11:	mov    DWORD PTR [ebx+0x20],eax
   1ac14:	mov    DWORD PTR [eax],esi
   1ac16:	push   DWORD PTR [ebx+0x20]
   1ac19:	push   esi
   1ac1a:	jmp    0x1ac53
   1ac1c:	sub    eax,DWORD PTR [ebx+0x10]
   1ac1f:	mov    ecx,ebx
   1ac21:	sar    eax,0x2
   1ac24:	inc    eax
   1ac25:	mov    edi,eax
   1ac27:	lea    eax,[edi+edi*1]
   1ac2a:	push   eax
   1ac2b:	call   0x1aa32
   1ac30:	lea    ecx,[eax+edi*4]
   1ac33:	mov    DWORD PTR [ecx],esi
   1ac35:	push   eax
   1ac36:	push   DWORD PTR [ebx+0xc]
   1ac39:	mov    DWORD PTR [ebp-0x4],ecx
   1ac3c:	lea    ecx,[ebp-0x18]
   1ac3f:	call   0x1a32a
   1ac44:	push   DWORD PTR [ebp-0x4]
   1ac47:	lea    edi,[ebx+0x4]
   1ac4a:	push   DWORD PTR [ebp-0x8]
   1ac4d:	mov    esi,eax
   1ac4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac53:	lea    ecx,[ebp-0x18]
   1ac56:	call   0x1a32a
   1ac5b:	lea    edi,[ebx+0x14]
   1ac5e:	mov    esi,eax
   1ac60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac64:	pop    edi
   1ac65:	pop    esi
   1ac66:	pop    ebx
   1ac67:	leave  
   1ac68:	ret    
   1ac69:	int3   
   1ac6a:	int3   
   1ac6b:	int3   
   1ac6c:	int3   
   1ac6d:	int3   
   1ac6e:	mov    edi,edi
   1ac70:	push   ebp
   1ac71:	mov    ebp,esp
   1ac73:	mov    eax,DWORD PTR [ebp+0xc]
   1ac76:	push   ebx
   1ac77:	push   esi
   1ac78:	push   edi
   1ac79:	lea    edi,[eax+0x4]
   1ac7c:	push   DWORD PTR [edi]
   1ac7e:	mov    ebx,ecx
   1ac80:	push   eax
   1ac81:	call   0x1a9e6
   1ac86:	push   DWORD PTR [ebp+0x10]
   1ac89:	mov    esi,eax
   1ac8b:	mov    DWORD PTR [edi],esi
   1ac8d:	mov    eax,DWORD PTR [esi+0x4]
   1ac90:	mov    DWORD PTR [eax],esi
   1ac92:	lea    eax,[esi+0x8]
   1ac95:	push   eax
   1ac96:	call   0x1a3d0
   1ac9b:	mov    eax,DWORD PTR [ebp+0x8]
   1ac9e:	inc    DWORD PTR [ebx+0x8]
   1aca1:	pop    edi
   1aca2:	mov    DWORD PTR [eax],esi
   1aca4:	pop    esi
   1aca5:	pop    ebx
   1aca6:	pop    ebp
   1aca7:	ret    0xc
   1acaa:	int3   
   1acab:	int3   
   1acac:	int3   
   1acad:	int3   
   1acae:	int3   
   1acaf:	int3   
   1acb0:	mov    edi,edi
   1acb2:	push   ebp
   1acb3:	mov    ebp,esp
   1acb5:	push   ecx
   1acb6:	mov    eax,DWORD PTR [ebp+0xc]
   1acb9:	push   esi
   1acba:	mov    esi,ecx
   1acbc:	jmp    0x1acd8
   1acbe:	add    eax,0x8
   1acc1:	push   eax
   1acc2:	push   DWORD PTR [ebp+0x8]
   1acc5:	lea    eax,[ebp-0x4]
   1acc8:	push   eax
   1acc9:	mov    ecx,esi
   1accb:	call   0x1ac6e
   1acd0:	mov    eax,DWORD PTR [ebp+0xc]
   1acd3:	mov    eax,DWORD PTR [eax]
   1acd5:	mov    DWORD PTR [ebp+0xc],eax
   1acd8:	cmp    eax,DWORD PTR [ebp+0x10]
   1acdb:	jne    0x1acbe
   1acdd:	pop    esi
   1acde:	leave  
   1acdf:	ret    0xc
   1ace2:	int3   
   1ace3:	int3   
   1ace4:	int3   
   1ace5:	int3   
   1ace6:	int3   
   1ace7:	int3   
   1ace8:	mov    edi,edi
   1acea:	push   ebp
   1aceb:	mov    ebp,esp
   1aced:	push   esi
   1acee:	push   edi
   1acef:	push   DWORD PTR [ebp+0xc]
   1acf2:	mov    edi,ecx
   1acf4:	call   0x1a626
   1acf9:	push   DWORD PTR [ebp+0xc]
   1acfc:	mov    ecx,edi
   1acfe:	mov    esi,eax
   1ad00:	call   0x1a5e6
   1ad05:	mov    ecx,DWORD PTR [ebp+0x8]
   1ad08:	pop    edi
   1ad09:	mov    DWORD PTR [ecx],eax
   1ad0b:	mov    DWORD PTR [ecx+0x4],esi
   1ad0e:	mov    eax,ecx
   1ad10:	pop    esi
   1ad11:	pop    ebp
   1ad12:	ret    0x8
   1ad15:	int3   
   1ad16:	int3   
   1ad17:	int3   
   1ad18:	int3   
   1ad19:	int3   
   1ad1a:	mov    edi,edi
   1ad1c:	push   ebp
   1ad1d:	mov    ebp,esp
   1ad1f:	push   ecx
   1ad20:	push   ebx
   1ad21:	push   esi
   1ad22:	push   edi
   1ad23:	push   0x1
   1ad25:	xor    edi,edi
   1ad27:	push   edi
   1ad28:	mov    esi,ecx
   1ad2a:	call   0x14156
   1ad2f:	lea    ecx,[ebp-0x1]
   1ad32:	mov    ebx,eax
   1ad34:	call   DWORD PTR ds:0x7722c
   1ad3a:	cmp    DWORD PTR ds:0x7848c,edi
   1ad40:	jne    0x1ad55
   1ad42:	mov    eax,ebx
   1ad44:	mov    ds:0x7848c,eax
   1ad49:	mov    DWORD PTR [eax],edi
   1ad4b:	mov    eax,ds:0x7848c
   1ad50:	xor    ebx,ebx
   1ad52:	mov    DWORD PTR [eax+0x8],edi
   1ad55:	inc    DWORD PTR ds:0x78490
   1ad5b:	lea    ecx,[ebp-0x1]
   1ad5e:	call   DWORD PTR ds:0x77228
   1ad64:	cmp    ebx,edi
   1ad66:	je     0x1ad6f
   1ad68:	push   ebx
   1ad69:	call   0x1da56
   1ad6e:	pop    ecx
   1ad6f:	push   edi
   1ad70:	push   DWORD PTR ds:0x7848c
   1ad76:	mov    ecx,esi
   1ad78:	call   0x14156
   1ad7d:	mov    DWORD PTR [esi+0xc],edi
   1ad80:	mov    DWORD PTR [esi+0x4],eax
   1ad83:	mov    DWORD PTR [eax],eax
   1ad85:	mov    esi,DWORD PTR [esi+0x4]
   1ad88:	pop    edi
   1ad89:	mov    DWORD PTR [esi+0x8],esi
   1ad8c:	pop    esi
   1ad8d:	pop    ebx
   1ad8e:	leave  
   1ad8f:	ret    
   1ad90:	int3   
   1ad91:	int3   
   1ad92:	int3   
   1ad93:	int3   
   1ad94:	int3   
   1ad95:	int3   
   1ad96:	mov    edi,edi
   1ad98:	push   ebp
   1ad99:	mov    ebp,esp
   1ad9b:	push   ebx
   1ad9c:	push   esi
   1ad9d:	mov    esi,DWORD PTR [ebp+0x10]
   1ada0:	push   edi
   1ada1:	push   0x0
   1ada3:	push   esi
   1ada4:	mov    edi,ecx
   1ada6:	call   0x14156
   1adab:	push   DWORD PTR [ebp+0x14]
   1adae:	mov    ebx,eax
   1adb0:	mov    eax,ds:0x7848c
   1adb5:	mov    DWORD PTR [ebx],eax
   1adb7:	mov    eax,ds:0x7848c
   1adbc:	mov    DWORD PTR [ebx+0x8],eax
   1adbf:	lea    eax,[ebx+0xc]
   1adc2:	push   eax
   1adc3:	call   0x1a666
   1adc8:	inc    DWORD PTR [edi+0xc]
   1adcb:	cmp    esi,DWORD PTR [edi+0x4]
   1adce:	je     0x1adf8
   1add0:	mov    eax,DWORD PTR [ebp+0xc]
   1add3:	cmp    eax,DWORD PTR ds:0x7848c
   1add9:	jne    0x1adf8
   1addb:	lea    eax,[esi+0xc]
   1adde:	push   eax
   1addf:	push   DWORD PTR [ebp+0x14]
   1ade2:	call   0x197f6
   1ade7:	test   al,al
   1ade9:	jne    0x1adf8
   1adeb:	mov    DWORD PTR [esi+0x8],ebx
   1adee:	mov    eax,DWORD PTR [edi+0x4]
   1adf1:	cmp    esi,DWORD PTR [eax+0x8]
   1adf4:	jne    0x1ae12
   1adf6:	jmp    0x1ae07
   1adf8:	mov    DWORD PTR [esi],ebx
   1adfa:	mov    eax,DWORD PTR [edi+0x4]
   1adfd:	cmp    esi,eax
   1adff:	jne    0x1ae0c
   1ae01:	mov    DWORD PTR [eax+0x4],ebx
   1ae04:	mov    eax,DWORD PTR [edi+0x4]
   1ae07:	mov    DWORD PTR [eax+0x8],ebx
   1ae0a:	jmp    0x1ae12
   1ae0c:	cmp    esi,DWORD PTR [eax]
   1ae0e:	jne    0x1ae12
   1ae10:	mov    DWORD PTR [eax],ebx
   1ae12:	mov    eax,DWORD PTR [edi+0x4]
   1ae15:	mov    esi,ebx
   1ae17:	cmp    ebx,DWORD PTR [eax+0x4]
   1ae1a:	je     0x1aece
   1ae20:	mov    eax,DWORD PTR [esi+0x4]
   1ae23:	xor    edx,edx
   1ae25:	cmp    DWORD PTR [eax+0x14],edx
   1ae28:	jne    0x1aece
   1ae2e:	mov    ecx,DWORD PTR [eax+0x4]
   1ae31:	cmp    eax,DWORD PTR [ecx]
   1ae33:	jne    0x1ae6f
   1ae35:	mov    ecx,DWORD PTR [ecx+0x8]
   1ae38:	cmp    DWORD PTR [ecx+0x14],edx
   1ae3b:	je     0x1ae76
   1ae3d:	cmp    esi,DWORD PTR [eax+0x8]
   1ae40:	jne    0x1ae4c
   1ae42:	mov    esi,eax
   1ae44:	push   esi
   1ae45:	mov    ecx,edi
   1ae47:	call   0x1a508
   1ae4c:	mov    eax,DWORD PTR [esi+0x4]
   1ae4f:	mov    DWORD PTR [eax+0x14],0x1
   1ae56:	mov    eax,DWORD PTR [esi+0x4]
   1ae59:	mov    eax,DWORD PTR [eax+0x4]
   1ae5c:	and    DWORD PTR [eax+0x14],0x0
   1ae60:	mov    eax,DWORD PTR [esi+0x4]
   1ae63:	push   DWORD PTR [eax+0x4]
   1ae66:	mov    ecx,edi
   1ae68:	call   0x1a556
   1ae6d:	jmp    0x1aec2
   1ae6f:	mov    ecx,DWORD PTR [ecx]
   1ae71:	cmp    DWORD PTR [ecx+0x14],edx
   1ae74:	jne    0x1ae93
   1ae76:	mov    edx,eax
   1ae78:	xor    eax,eax
   1ae7a:	inc    eax
   1ae7b:	mov    DWORD PTR [edx+0x14],eax
   1ae7e:	mov    DWORD PTR [ecx+0x14],eax
   1ae81:	mov    eax,DWORD PTR [esi+0x4]
   1ae84:	mov    eax,DWORD PTR [eax+0x4]
   1ae87:	and    DWORD PTR [eax+0x14],0x0
   1ae8b:	mov    eax,DWORD PTR [esi+0x4]
   1ae8e:	mov    esi,DWORD PTR [eax+0x4]
   1ae91:	jmp    0x1aec2
   1ae93:	cmp    esi,DWORD PTR [eax]
   1ae95:	jne    0x1aea1
   1ae97:	mov    esi,eax
   1ae99:	push   esi
   1ae9a:	mov    ecx,edi
   1ae9c:	call   0x1a556
   1aea1:	mov    eax,DWORD PTR [esi+0x4]
   1aea4:	mov    DWORD PTR [eax+0x14],0x1
   1aeab:	mov    eax,DWORD PTR [esi+0x4]
   1aeae:	mov    eax,DWORD PTR [eax+0x4]
   1aeb1:	and    DWORD PTR [eax+0x14],0x0
   1aeb5:	mov    eax,DWORD PTR [esi+0x4]
   1aeb8:	push   DWORD PTR [eax+0x4]
   1aebb:	mov    ecx,edi
   1aebd:	call   0x1a508
   1aec2:	mov    eax,DWORD PTR [edi+0x4]
   1aec5:	cmp    esi,DWORD PTR [eax+0x4]
   1aec8:	jne    0x1ae20
   1aece:	mov    eax,DWORD PTR [edi+0x4]
   1aed1:	mov    eax,DWORD PTR [eax+0x4]
   1aed4:	pop    edi
   1aed5:	mov    DWORD PTR [eax+0x14],0x1
   1aedc:	mov    eax,DWORD PTR [ebp+0x8]
   1aedf:	pop    esi
   1aee0:	mov    DWORD PTR [eax],ebx
   1aee2:	pop    ebx
   1aee3:	pop    ebp
   1aee4:	ret    0x10
   1aee7:	int3   
   1aee8:	int3   
   1aee9:	int3   
   1aeea:	int3   
   1aeeb:	int3   
   1aeec:	mov    edi,edi
   1aeee:	push   ebp
   1aeef:	mov    ebp,esp
   1aef1:	sub    esp,0x10
   1aef4:	push   ebx
   1aef5:	push   esi
   1aef6:	mov    DWORD PTR [ebp-0xc],ecx
   1aef9:	push   edi
   1aefa:	mov    edi,DWORD PTR [ebp+0xc]
   1aefd:	lea    ecx,[ebp+0xc]
   1af00:	call   0x1a39a
   1af05:	mov    esi,DWORD PTR [edi]
   1af07:	mov    eax,ds:0x7848c
   1af0c:	lea    ebx,[edi+0x8]
   1af0f:	mov    DWORD PTR [ebp-0x8],edi
   1af12:	mov    DWORD PTR [ebp-0x10],ebx
   1af15:	cmp    esi,eax
   1af17:	jne    0x1af1d
   1af19:	mov    esi,DWORD PTR [ebx]
   1af1b:	jmp    0x1af34
   1af1d:	mov    ecx,DWORD PTR [ebx]
   1af1f:	cmp    ecx,eax
   1af21:	je     0x1af34
   1af23:	push   ecx
   1af24:	call   0x1a378
   1af29:	mov    DWORD PTR [ebp-0x8],eax
   1af2c:	add    eax,0x8
   1af2f:	mov    esi,DWORD PTR [eax]
   1af31:	mov    DWORD PTR [ebp-0x10],eax
   1af34:	lea    ecx,[ebp-0x1]
   1af37:	call   DWORD PTR ds:0x7722c
   1af3d:	mov    eax,DWORD PTR [ebp-0x8]
   1af40:	cmp    eax,edi
   1af42:	je     0x1afa4
   1af44:	mov    ecx,DWORD PTR [edi]
   1af46:	mov    DWORD PTR [ecx+0x4],eax
   1af49:	mov    ecx,DWORD PTR [edi]
   1af4b:	mov    DWORD PTR [eax],ecx
   1af4d:	cmp    eax,DWORD PTR [ebx]
   1af4f:	jne    0x1af56
   1af51:	mov    DWORD PTR [esi+0x4],eax
   1af54:	jmp    0x1af6d
   1af56:	mov    ecx,DWORD PTR [eax+0x4]
   1af59:	mov    edx,DWORD PTR [ebp-0x10]
   1af5c:	mov    DWORD PTR [esi+0x4],ecx
   1af5f:	mov    ecx,DWORD PTR [eax+0x4]
   1af62:	mov    DWORD PTR [ecx],esi
   1af64:	mov    ecx,DWORD PTR [ebx]
   1af66:	mov    DWORD PTR [edx],ecx
   1af68:	mov    ecx,DWORD PTR [ebx]
   1af6a:	mov    DWORD PTR [ecx+0x4],eax
   1af6d:	mov    ebx,DWORD PTR [ebp-0xc]
   1af70:	mov    ecx,DWORD PTR [ebx+0x4]
   1af73:	cmp    DWORD PTR [ecx+0x4],edi
   1af76:	jne    0x1af7d
   1af78:	mov    DWORD PTR [ecx+0x4],eax
   1af7b:	jmp    0x1af8b
   1af7d:	mov    ecx,DWORD PTR [edi+0x4]
   1af80:	cmp    DWORD PTR [ecx],edi
   1af82:	jne    0x1af88
   1af84:	mov    DWORD PTR [ecx],eax
   1af86:	jmp    0x1af8b
   1af88:	mov    DWORD PTR [ecx+0x8],eax
   1af8b:	mov    ecx,DWORD PTR [edi+0x4]
   1af8e:	mov    DWORD PTR [eax+0x4],ecx
   1af91:	mov    ecx,DWORD PTR [eax+0x14]
   1af94:	mov    edx,DWORD PTR [edi+0x14]
   1af97:	mov    DWORD PTR [eax+0x14],edx
   1af9a:	mov    DWORD PTR [edi+0x14],ecx
   1af9d:	mov    DWORD PTR [ebp-0x8],edi
   1afa0:	mov    eax,edi
   1afa2:	jmp    0x1b01d
   1afa4:	mov    ecx,DWORD PTR [eax+0x4]
   1afa7:	mov    edx,DWORD PTR [ebp-0xc]
   1afaa:	mov    DWORD PTR [esi+0x4],ecx
   1afad:	mov    ecx,DWORD PTR [edx+0x4]
   1afb0:	cmp    DWORD PTR [ecx+0x4],edi
   1afb3:	jne    0x1afba
   1afb5:	mov    DWORD PTR [ecx+0x4],esi
   1afb8:	jmp    0x1afc8
   1afba:	mov    ecx,DWORD PTR [edi+0x4]
   1afbd:	cmp    DWORD PTR [ecx],edi
   1afbf:	jne    0x1afc5
   1afc1:	mov    DWORD PTR [ecx],esi
   1afc3:	jmp    0x1afc8
   1afc5:	mov    DWORD PTR [ecx+0x8],esi
   1afc8:	mov    ecx,DWORD PTR [edx+0x4]
   1afcb:	mov    DWORD PTR [ebp-0x10],ecx
   1afce:	cmp    DWORD PTR [ecx],edi
   1afd0:	jne    0x1aff4
   1afd2:	mov    ebx,DWORD PTR [ebx]
   1afd4:	cmp    ebx,DWORD PTR ds:0x7848c
   1afda:	jne    0x1afe3
   1afdc:	mov    ebx,DWORD PTR [edi+0x4]
   1afdf:	mov    DWORD PTR [ecx],ebx
   1afe1:	jmp    0x1aff4
   1afe3:	push   esi
   1afe4:	call   0x1a378
   1afe9:	mov    ecx,DWORD PTR [ebp-0x10]
   1afec:	mov    edx,DWORD PTR [ebp-0xc]
   1afef:	mov    DWORD PTR [ecx],eax
   1aff1:	mov    eax,DWORD PTR [ebp-0x8]
   1aff4:	mov    ebx,DWORD PTR [edx+0x4]
   1aff7:	cmp    DWORD PTR [ebx+0x8],edi
   1affa:	jne    0x1b01a
   1affc:	mov    ecx,DWORD PTR [edi]
   1affe:	cmp    ecx,DWORD PTR ds:0x7848c
   1b004:	jne    0x1b00e
   1b006:	mov    ecx,DWORD PTR [edi+0x4]
   1b009:	mov    DWORD PTR [ebx+0x8],ecx
   1b00c:	jmp    0x1b01a
   1b00e:	push   esi
   1b00f:	call   0x1a356
   1b014:	mov    DWORD PTR [ebx+0x8],eax
   1b017:	mov    eax,DWORD PTR [ebp-0x8]
   1b01a:	mov    ebx,DWORD PTR [ebp-0xc]
   1b01d:	xor    edi,edi
   1b01f:	inc    edi
   1b020:	cmp    DWORD PTR [eax+0x14],edi
   1b023:	jne    0x1b137
   1b029:	jmp    0x1b0ea
   1b02e:	cmp    DWORD PTR [esi+0x14],edi
   1b031:	jne    0x1b134
   1b037:	mov    eax,DWORD PTR [esi+0x4]
   1b03a:	cmp    esi,DWORD PTR [eax]
   1b03c:	jne    0x1b0b3
   1b03e:	mov    eax,DWORD PTR [eax+0x8]
   1b041:	cmp    DWORD PTR [eax+0x14],0x0
   1b045:	jne    0x1b061
   1b047:	mov    DWORD PTR [eax+0x14],edi
   1b04a:	mov    eax,DWORD PTR [esi+0x4]
   1b04d:	and    DWORD PTR [eax+0x14],0x0
   1b051:	push   DWORD PTR [esi+0x4]
   1b054:	mov    ecx,ebx
   1b056:	call   0x1a508
   1b05b:	mov    eax,DWORD PTR [esi+0x4]
   1b05e:	mov    eax,DWORD PTR [eax+0x8]
   1b061:	mov    ecx,DWORD PTR [eax]
   1b063:	cmp    DWORD PTR [ecx+0x14],edi
   1b066:	jne    0x1b070
   1b068:	mov    ecx,DWORD PTR [eax+0x8]
   1b06b:	cmp    DWORD PTR [ecx+0x14],edi
   1b06e:	je     0x1b0e3
   1b070:	mov    ecx,DWORD PTR [eax+0x8]
   1b073:	cmp    DWORD PTR [ecx+0x14],edi
   1b076:	jne    0x1b08f
   1b078:	mov    ecx,DWORD PTR [eax]
   1b07a:	mov    DWORD PTR [ecx+0x14],edi
   1b07d:	and    DWORD PTR [eax+0x14],0x0
   1b081:	push   eax
   1b082:	mov    ecx,ebx
   1b084:	call   0x1a556
   1b089:	mov    eax,DWORD PTR [esi+0x4]
   1b08c:	mov    eax,DWORD PTR [eax+0x8]
   1b08f:	mov    ecx,DWORD PTR [esi+0x4]
   1b092:	mov    ecx,DWORD PTR [ecx+0x14]
   1b095:	mov    DWORD PTR [eax+0x14],ecx
   1b098:	mov    ecx,DWORD PTR [esi+0x4]
   1b09b:	mov    DWORD PTR [ecx+0x14],edi
   1b09e:	mov    eax,DWORD PTR [eax+0x8]
   1b0a1:	mov    DWORD PTR [eax+0x14],edi
   1b0a4:	push   DWORD PTR [esi+0x4]
   1b0a7:	mov    ecx,ebx
   1b0a9:	call   0x1a508
   1b0ae:	jmp    0x1b134
   1b0b3:	mov    eax,DWORD PTR [eax]
   1b0b5:	cmp    DWORD PTR [eax+0x14],0x0
   1b0b9:	jne    0x1b0d4
   1b0bb:	mov    DWORD PTR [eax+0x14],edi
   1b0be:	mov    eax,DWORD PTR [esi+0x4]
   1b0c1:	and    DWORD PTR [eax+0x14],0x0
   1b0c5:	push   DWORD PTR [esi+0x4]
   1b0c8:	mov    ecx,ebx
   1b0ca:	call   0x1a556
   1b0cf:	mov    eax,DWORD PTR [esi+0x4]
   1b0d2:	mov    eax,DWORD PTR [eax]
   1b0d4:	mov    ecx,DWORD PTR [eax+0x8]
   1b0d7:	cmp    DWORD PTR [ecx+0x14],edi
   1b0da:	jne    0x1b0f8
   1b0dc:	mov    ecx,DWORD PTR [eax]
   1b0de:	cmp    DWORD PTR [ecx+0x14],edi
   1b0e1:	jne    0x1b0f8
   1b0e3:	and    DWORD PTR [eax+0x14],0x0
   1b0e7:	mov    esi,DWORD PTR [esi+0x4]
   1b0ea:	mov    eax,DWORD PTR [ebx+0x4]
   1b0ed:	cmp    esi,DWORD PTR [eax+0x4]
   1b0f0:	jne    0x1b02e
   1b0f6:	jmp    0x1b134
   1b0f8:	mov    ecx,DWORD PTR [eax]
   1b0fa:	cmp    DWORD PTR [ecx+0x14],edi
   1b0fd:	jne    0x1b116
   1b0ff:	mov    ecx,DWORD PTR [eax+0x8]
   1b102:	mov    DWORD PTR [ecx+0x14],edi
   1b105:	and    DWORD PTR [eax+0x14],0x0
   1b109:	push   eax
   1b10a:	mov    ecx,ebx
   1b10c:	call   0x1a508
   1b111:	mov    eax,DWORD PTR [esi+0x4]
   1b114:	mov    eax,DWORD PTR [eax]
   1b116:	mov    ecx,DWORD PTR [esi+0x4]
   1b119:	mov    ecx,DWORD PTR [ecx+0x14]
   1b11c:	mov    DWORD PTR [eax+0x14],ecx
   1b11f:	mov    ecx,DWORD PTR [esi+0x4]
   1b122:	mov    DWORD PTR [ecx+0x14],edi
   1b125:	mov    eax,DWORD PTR [eax]
   1b127:	mov    DWORD PTR [eax+0x14],edi
   1b12a:	push   DWORD PTR [esi+0x4]
   1b12d:	mov    ecx,ebx
   1b12f:	call   0x1a556
   1b134:	mov    DWORD PTR [esi+0x14],edi
   1b137:	lea    ecx,[ebp-0x1]
   1b13a:	call   DWORD PTR ds:0x77228
   1b140:	mov    esi,DWORD PTR [ebp-0x8]
   1b143:	lea    eax,[esi+0xc]
   1b146:	push   eax
   1b147:	call   0x1a684
   1b14c:	push   esi
   1b14d:	call   0x1da56
   1b152:	mov    eax,DWORD PTR [ebp+0x8]
   1b155:	dec    DWORD PTR [ebx+0xc]
   1b158:	pop    ecx
   1b159:	mov    ecx,DWORD PTR [ebp+0xc]
   1b15c:	pop    edi
   1b15d:	pop    esi
   1b15e:	mov    DWORD PTR [eax],ecx
   1b160:	pop    ebx
   1b161:	leave  
   1b162:	ret    0x8
   1b165:	int3   
   1b166:	int3   
   1b167:	int3   
   1b168:	int3   
   1b169:	int3   
   1b16a:	mov    edi,edi
   1b16c:	push   ebp
   1b16d:	mov    ebp,esp
   1b16f:	push   ebx
   1b170:	push   esi
   1b171:	push   edi
   1b172:	mov    edi,DWORD PTR [ebp+0x8]
   1b175:	mov    ebx,ecx
   1b177:	mov    esi,edi
   1b179:	cmp    edi,DWORD PTR ds:0x7848c
   1b17f:	je     0x1b1a7
   1b181:	push   DWORD PTR [esi+0x8]
   1b184:	mov    ecx,ebx
   1b186:	call   0x1b16a
   1b18b:	mov    esi,DWORD PTR [esi]
   1b18d:	lea    eax,[edi+0xc]
   1b190:	push   eax
   1b191:	call   0x1a684
   1b196:	push   edi
   1b197:	call   0x1da56
   1b19c:	pop    ecx
   1b19d:	mov    edi,esi
   1b19f:	cmp    esi,DWORD PTR ds:0x7848c
   1b1a5:	jne    0x1b181
   1b1a7:	pop    edi
   1b1a8:	pop    esi
   1b1a9:	pop    ebx
   1b1aa:	pop    ebp
   1b1ab:	ret    0x4
   1b1ae:	int3   
   1b1af:	int3   
   1b1b0:	int3   
   1b1b1:	int3   
   1b1b2:	int3   
   1b1b3:	int3   
   1b1b4:	mov    edi,edi
   1b1b6:	push   esi
   1b1b7:	mov    esi,ecx
   1b1b9:	jmp    0x1b1c2
   1b1bb:	mov    ecx,esi
   1b1bd:	call   0x1ab12
   1b1c2:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1c6:	jne    0x1b1bb
   1b1c8:	pop    esi
   1b1c9:	ret    
   1b1ca:	int3   
   1b1cb:	int3   
   1b1cc:	int3   
   1b1cd:	int3   
   1b1ce:	int3   
   1b1cf:	int3   
   1b1d0:	mov    edi,edi
   1b1d2:	push   ebp
   1b1d3:	mov    ebp,esp
   1b1d5:	push   esi
   1b1d6:	mov    esi,ecx
   1b1d8:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1dc:	je     0x1b204
   1b1de:	mov    ecx,DWORD PTR [esi+0x1c]
   1b1e1:	mov    edx,DWORD PTR [esi+0x18]
   1b1e4:	cmp    ecx,edx
   1b1e6:	je     0x1b204
   1b1e8:	push   DWORD PTR [ebp+0x8]
   1b1eb:	lea    eax,[ecx+0x4]
   1b1ee:	mov    DWORD PTR [esi+0x1c],eax
   1b1f1:	push   ecx
   1b1f2:	cmp    eax,edx
   1b1f4:	jne    0x1b218
   1b1f6:	call   0x1a3d0
   1b1fb:	mov    ecx,esi
   1b1fd:	call   0x1aba4
   1b202:	jmp    0x1b21d
   1b204:	mov    ecx,esi
   1b206:	call   0x1aba4
   1b20b:	mov    eax,DWORD PTR [esi+0x1c]
   1b20e:	push   DWORD PTR [ebp+0x8]
   1b211:	lea    ecx,[eax+0x4]
   1b214:	mov    DWORD PTR [esi+0x1c],ecx
   1b217:	push   eax
   1b218:	call   0x1a3d0
   1b21d:	inc    DWORD PTR [esi+0x2c]
   1b220:	pop    esi
   1b221:	pop    ebp
   1b222:	ret    0x4
   1b225:	int3   
   1b226:	int3   
   1b227:	int3   
   1b228:	int3   
   1b229:	int3   
   1b22a:	mov    edi,edi
   1b22c:	push   ebp
   1b22d:	mov    ebp,esp
   1b22f:	push   esi
   1b230:	push   0x0
   1b232:	push   0xc
   1b234:	mov    esi,ecx
   1b236:	call   0x132b0
   1b23b:	mov    ecx,DWORD PTR [ebp+0x8]
   1b23e:	mov    DWORD PTR [eax],eax
   1b240:	mov    DWORD PTR [eax+0x4],eax
   1b243:	and    DWORD PTR [esi+0x8],0x0
   1b247:	mov    DWORD PTR [esi+0x4],eax
   1b24a:	mov    ecx,DWORD PTR [ecx+0x4]
   1b24d:	mov    edx,DWORD PTR [ecx]
   1b24f:	mov    eax,DWORD PTR [eax]
   1b251:	push   ecx
   1b252:	push   edx
   1b253:	push   eax
   1b254:	mov    ecx,esi
   1b256:	call   0x1acb0
   1b25b:	mov    eax,esi
   1b25d:	pop    esi
   1b25e:	pop    ebp
   1b25f:	ret    0x4
   1b262:	int3   
   1b263:	int3   
   1b264:	int3   
   1b265:	int3   
   1b266:	int3   
   1b267:	int3   
   1b268:	mov    edi,edi
   1b26a:	push   ebp
   1b26b:	mov    ebp,esp
   1b26d:	push   ecx
   1b26e:	mov    edx,DWORD PTR [ebp+0x8]
   1b271:	mov    DWORD PTR [ebp-0x4],ecx
   1b274:	cmp    ecx,edx
   1b276:	je     0x1b2b5
   1b278:	push   ebx
   1b279:	mov    ebx,DWORD PTR [edx+0x4]
   1b27c:	push   esi
   1b27d:	mov    esi,DWORD PTR [ecx+0x4]
   1b280:	mov    eax,DWORD PTR [esi]
   1b282:	push   edi
   1b283:	mov    edi,DWORD PTR [ebx]
   1b285:	jmp    0x1b295
   1b287:	cmp    edi,ebx
   1b289:	je     0x1b299
   1b28b:	mov    edx,DWORD PTR [edi+0x8]
   1b28e:	mov    DWORD PTR [eax+0x8],edx
   1b291:	mov    eax,DWORD PTR [eax]
   1b293:	mov    edi,DWORD PTR [edi]
   1b295:	cmp    eax,esi
   1b297:	jne    0x1b287
   1b299:	push   esi
   1b29a:	push   eax
   1b29b:	lea    eax,[ebp+0x8]
   1b29e:	push   eax
   1b29f:	call   0x1a9b0
   1b2a4:	mov    ecx,DWORD PTR [ebp-0x4]
   1b2a7:	push   ebx
   1b2a8:	push   edi
   1b2a9:	push   esi
   1b2aa:	call   0x1acb0
   1b2af:	mov    ecx,DWORD PTR [ebp-0x4]
   1b2b2:	pop    edi
   1b2b3:	pop    esi
   1b2b4:	pop    ebx
   1b2b5:	mov    eax,ecx
   1b2b7:	leave  
   1b2b8:	ret    0x4
   1b2bb:	int3   
   1b2bc:	int3   
   1b2bd:	int3   
   1b2be:	int3   
   1b2bf:	int3   
   1b2c0:	mov    edi,edi
   1b2c2:	push   ebp
   1b2c3:	mov    ebp,esp
   1b2c5:	push   DWORD PTR [ebp+0x8]
   1b2c8:	mov    eax,DWORD PTR [ecx+0x4]
   1b2cb:	push   eax
   1b2cc:	lea    eax,[ebp+0x8]
   1b2cf:	push   eax
   1b2d0:	call   0x1ac6e
   1b2d5:	pop    ebp
   1b2d6:	ret    0x4
   1b2d9:	int3   
   1b2da:	int3   
   1b2db:	int3   
   1b2dc:	int3   
   1b2dd:	int3   
   1b2de:	mov    edi,edi
   1b2e0:	push   ebp
   1b2e1:	mov    ebp,esp
   1b2e3:	push   ecx
   1b2e4:	push   ebx
   1b2e5:	push   esi
   1b2e6:	push   edi
   1b2e7:	mov    edi,ecx
   1b2e9:	mov    eax,DWORD PTR [edi+0x4]
   1b2ec:	mov    esi,DWORD PTR [eax+0x4]
   1b2ef:	mov    ebx,eax
   1b2f1:	mov    al,0x1
   1b2f3:	jmp    0x1b30e
   1b2f5:	lea    eax,[esi+0xc]
   1b2f8:	push   eax
   1b2f9:	push   DWORD PTR [ebp+0xc]
   1b2fc:	mov    ebx,esi
   1b2fe:	call   0x197f6
   1b303:	test   al,al
   1b305:	je     0x1b30b
   1b307:	mov    esi,DWORD PTR [esi]
   1b309:	jmp    0x1b30e
   1b30b:	mov    esi,DWORD PTR [esi+0x8]
   1b30e:	cmp    esi,DWORD PTR ds:0x7848c
   1b314:	jne    0x1b2f5
   1b316:	cmp    BYTE PTR [edi+0x8],0x0
   1b31a:	je     0x1b337
   1b31c:	push   DWORD PTR [ebp+0xc]
   1b31f:	lea    eax,[ebp+0xc]
   1b322:	push   ebx
   1b323:	push   esi
   1b324:	push   eax
   1b325:	mov    ecx,edi
   1b327:	call   0x1ad96
   1b32c:	mov    ecx,DWORD PTR [eax]
   1b32e:	mov    eax,DWORD PTR [ebp+0x8]
   1b331:	mov    BYTE PTR [eax+0x4],0x1
   1b335:	jmp    0x1b36a
   1b337:	mov    DWORD PTR [ebp-0x4],ebx
   1b33a:	test   al,al
   1b33c:	je     0x1b34d
   1b33e:	mov    eax,DWORD PTR [edi+0x4]
   1b341:	cmp    ebx,DWORD PTR [eax]
   1b343:	je     0x1b31c
   1b345:	lea    ecx,[ebp-0x4]
   1b348:	call   0x1a5a6
   1b34d:	push   DWORD PTR [ebp+0xc]
   1b350:	mov    eax,DWORD PTR [ebp-0x4]
   1b353:	add    eax,0xc
   1b356:	push   eax
   1b357:	call   0x197f6
   1b35c:	test   al,al
   1b35e:	jne    0x1b31c
   1b360:	mov    eax,DWORD PTR [ebp+0x8]
   1b363:	mov    ecx,DWORD PTR [ebp-0x4]
   1b366:	mov    BYTE PTR [eax+0x4],0x0
   1b36a:	pop    edi
   1b36b:	pop    esi
   1b36c:	mov    DWORD PTR [eax],ecx
   1b36e:	pop    ebx
   1b36f:	leave  
   1b370:	ret    0x8
   1b373:	int3   
   1b374:	int3   
   1b375:	int3   
   1b376:	int3   
   1b377:	int3   
   1b378:	mov    edi,edi
   1b37a:	push   ebp
   1b37b:	mov    ebp,esp
   1b37d:	push   ecx
   1b37e:	push   ecx
   1b37f:	push   DWORD PTR [ebp+0x8]
   1b382:	lea    eax,[ebp-0x8]
   1b385:	push   eax
   1b386:	call   0x1ace8
   1b38b:	and    DWORD PTR [ebp+0x8],0x0
   1b38f:	lea    eax,[ebp+0x8]
   1b392:	push   eax
   1b393:	push   DWORD PTR [ebp-0x4]
   1b396:	push   DWORD PTR [ebp-0x8]
   1b399:	call   0x1aa92
   1b39e:	mov    eax,DWORD PTR [ebp+0x8]
   1b3a1:	add    esp,0xc
   1b3a4:	leave  
   1b3a5:	ret    0x4
   1b3a8:	int3   
   1b3a9:	int3   
   1b3aa:	int3   
   1b3ab:	int3   
   1b3ac:	int3   
   1b3ad:	int3   
   1b3ae:	mov    edi,edi
   1b3b0:	push   ebp
   1b3b1:	mov    ebp,esp
   1b3b3:	push   ecx
   1b3b4:	push   esi
   1b3b5:	mov    esi,ecx
   1b3b7:	cmp    DWORD PTR [esi+0xc],0x0
   1b3bb:	mov    ecx,DWORD PTR [ebp+0xc]
   1b3be:	je     0x1b3f8
   1b3c0:	mov    eax,DWORD PTR [esi+0x4]
   1b3c3:	cmp    ecx,DWORD PTR [eax]
   1b3c5:	jne    0x1b3f8
   1b3c7:	cmp    DWORD PTR [ebp+0x10],eax
   1b3ca:	jne    0x1b3f8
   1b3cc:	push   DWORD PTR [eax+0x4]
   1b3cf:	mov    ecx,esi
   1b3d1:	call   0x1b16a
   1b3d6:	mov    ecx,DWORD PTR ds:0x7848c
   1b3dc:	mov    eax,DWORD PTR [esi+0x4]
   1b3df:	mov    DWORD PTR [eax+0x4],ecx
   1b3e2:	mov    eax,DWORD PTR [esi+0x4]
   1b3e5:	and    DWORD PTR [esi+0xc],0x0
   1b3e9:	mov    DWORD PTR [eax],eax
   1b3eb:	mov    eax,DWORD PTR [esi+0x4]
   1b3ee:	mov    DWORD PTR [eax+0x8],eax
   1b3f1:	mov    eax,DWORD PTR [esi+0x4]
   1b3f4:	mov    ecx,DWORD PTR [eax]
   1b3f6:	jmp    0x1b41d
   1b3f8:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3fb:	je     0x1b41d
   1b3fd:	push   edi
   1b3fe:	mov    edi,ecx
   1b400:	lea    ecx,[ebp+0xc]
   1b403:	call   0x1a39a
   1b408:	push   edi
   1b409:	lea    eax,[ebp-0x4]
   1b40c:	push   eax
   1b40d:	mov    ecx,esi
   1b40f:	call   0x1aeec
   1b414:	mov    ecx,DWORD PTR [ebp+0xc]
   1b417:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b41a:	jne    0x1b3fe
   1b41c:	pop    edi
   1b41d:	mov    eax,DWORD PTR [ebp+0x8]
   1b420:	mov    DWORD PTR [eax],ecx
   1b422:	pop    esi
   1b423:	leave  
   1b424:	ret    0xc
   1b427:	int3   
   1b428:	int3   
   1b429:	int3   
   1b42a:	int3   
   1b42b:	int3   
   1b42c:	mov    edi,edi
   1b42e:	push   ebp
   1b42f:	mov    ebp,esp
   1b431:	push   esi
   1b432:	push   DWORD PTR [ebp+0x8]
   1b435:	mov    esi,ecx
   1b437:	mov    ecx,DWORD PTR [esi]
   1b439:	call   0x1b1d0
   1b43e:	mov    eax,esi
   1b440:	pop    esi
   1b441:	pop    ebp
   1b442:	ret    0x4
   1b445:	int3   
   1b446:	int3   
   1b447:	int3   
   1b448:	int3   
   1b449:	int3   
   1b44a:	mov    edi,edi
   1b44c:	push   ebp
   1b44d:	mov    ebp,esp
   1b44f:	push   ecx
   1b450:	push   esi
   1b451:	push   edi
   1b452:	xor    edi,edi
   1b454:	push   edi
   1b455:	push   edi
   1b456:	push   edi
   1b457:	push   edi
   1b458:	mov    esi,0x7845c
   1b45d:	push   esi
   1b45e:	call   DWORD PTR ds:0x1f020
   1b464:	test   eax,eax
   1b466:	jl     0x1b48a
   1b468:	mov    eax,ds:0x78488
   1b46d:	mov    ecx,DWORD PTR ds:0x78480
   1b473:	add    eax,0x9
   1b476:	mov    DWORD PTR [ebp-0x4],eax
   1b479:	lea    eax,[ebp-0x4]
   1b47c:	push   eax
   1b47d:	call   0x1b2c0
   1b482:	push   edi
   1b483:	push   esi
   1b484:	call   DWORD PTR ds:0x1f01c
   1b48a:	pop    edi
   1b48b:	pop    esi
   1b48c:	leave  
   1b48d:	ret    
   1b48e:	int3   
   1b48f:	int3   
   1b490:	int3   
   1b491:	int3   
   1b492:	int3   
   1b493:	int3   
   1b494:	mov    edi,edi
   1b496:	push   ebp
   1b497:	mov    ebp,esp
   1b499:	push   ecx
   1b49a:	push   ecx
   1b49b:	push   DWORD PTR [ebp+0xc]
   1b49e:	lea    eax,[ebp-0x8]
   1b4a1:	push   eax
   1b4a2:	call   0x1b2de
   1b4a7:	mov    eax,DWORD PTR [ebp+0x8]
   1b4aa:	mov    ecx,DWORD PTR [ebp-0x8]
   1b4ad:	mov    DWORD PTR [eax],ecx
   1b4af:	mov    cl,BYTE PTR [ebp-0x4]
   1b4b2:	mov    BYTE PTR [eax+0x4],cl
   1b4b5:	leave  
   1b4b6:	ret    0x8
   1b4b9:	int3   
   1b4ba:	int3   
   1b4bb:	int3   
   1b4bc:	int3   
   1b4bd:	int3   
   1b4be:	mov    edi,edi
   1b4c0:	push   ebp
   1b4c1:	mov    ebp,esp
   1b4c3:	push   ecx
   1b4c4:	push   ecx
   1b4c5:	push   esi
   1b4c6:	push   DWORD PTR [ebp+0x8]
   1b4c9:	lea    eax,[ebp-0x8]
   1b4cc:	push   eax
   1b4cd:	mov    esi,ecx
   1b4cf:	call   0x1ace8
   1b4d4:	and    DWORD PTR [ebp+0x8],0x0
   1b4d8:	lea    eax,[ebp+0x8]
   1b4db:	push   eax
   1b4dc:	push   DWORD PTR [ebp-0x4]
   1b4df:	push   DWORD PTR [ebp-0x8]
   1b4e2:	call   0x1aa92
   1b4e7:	add    esp,0xc
   1b4ea:	push   DWORD PTR [ebp-0x4]
   1b4ed:	lea    eax,[ebp-0x4]
   1b4f0:	push   DWORD PTR [ebp-0x8]
   1b4f3:	mov    ecx,esi
   1b4f5:	push   eax
   1b4f6:	call   0x1b3ae
   1b4fb:	mov    eax,DWORD PTR [ebp+0x8]
   1b4fe:	pop    esi
   1b4ff:	leave  
   1b500:	ret    0x4
   1b503:	int3   
   1b504:	int3   
   1b505:	int3   
   1b506:	int3   
   1b507:	int3   
   1b508:	mov    edi,edi
   1b50a:	push   ebp
   1b50b:	mov    ebp,esp
   1b50d:	jmp    0x1b520
   1b50f:	push   eax
   1b510:	lea    ecx,[ebp+0x2c]
   1b513:	call   0x1b42c
   1b518:	lea    ecx,[ebp+0xc]
   1b51b:	call   0x1a2fc
   1b520:	mov    eax,DWORD PTR [ebp+0x14]
   1b523:	cmp    eax,DWORD PTR [ebp+0x24]
   1b526:	jne    0x1b50f
   1b528:	mov    eax,DWORD PTR [ebp+0x8]
   1b52b:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b52e:	mov    DWORD PTR [eax],ecx
   1b530:	pop    ebp
   1b531:	ret    0x28
   1b534:	int3   
   1b535:	int3   
   1b536:	int3   
   1b537:	int3   
   1b538:	int3   
   1b539:	int3   
   1b53a:	mov    edi,edi
   1b53c:	push   ebp
   1b53d:	mov    ebp,esp
   1b53f:	sub    esp,0x10
   1b542:	push   0xffffffff
   1b544:	push   DWORD PTR [ebp+0x8]
   1b547:	lea    ecx,[ebp-0x8]
   1b54a:	call   0x129d2
   1b54f:	mov    ecx,DWORD PTR ds:0x7847c
   1b555:	lea    eax,[ebp-0x8]
   1b558:	push   eax
   1b559:	lea    eax,[ebp-0x10]
   1b55c:	push   eax
   1b55d:	call   0x1b494
   1b562:	push   DWORD PTR [ebp-0x8]
   1b565:	call   0x1da56
   1b56a:	pop    ecx
   1b56b:	leave  
   1b56c:	ret    0x4
   1b56f:	int3   
   1b570:	int3   
   1b571:	int3   
   1b572:	int3   
   1b573:	int3   
   1b574:	mov    edi,edi
   1b576:	push   ebp
   1b577:	mov    ebp,esp
   1b579:	xor    eax,eax
   1b57b:	push   ebx
   1b57c:	push   esi
   1b57d:	push   edi
   1b57e:	mov    ebx,ecx
   1b580:	mov    DWORD PTR [ebx+0x4],eax
   1b583:	mov    DWORD PTR [ebx+0x8],eax
   1b586:	mov    DWORD PTR [ebx+0xc],eax
   1b589:	mov    DWORD PTR [ebx+0x10],eax
   1b58c:	mov    DWORD PTR [ebx+0x14],eax
   1b58f:	mov    DWORD PTR [ebx+0x18],eax
   1b592:	mov    DWORD PTR [ebx+0x1c],eax
   1b595:	mov    DWORD PTR [ebx+0x20],eax
   1b598:	mov    DWORD PTR [ebx+0x24],eax
   1b59b:	mov    DWORD PTR [ebx+0x28],eax
   1b59e:	mov    DWORD PTR [ebx+0x2c],eax
   1b5a1:	mov    eax,DWORD PTR [ebp+0x8]
   1b5a4:	push   ebx
   1b5a5:	sub    esp,0x10
   1b5a8:	mov    edi,esp
   1b5aa:	lea    esi,[eax+0x14]
   1b5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5b1:	sub    esp,0x10
   1b5b4:	lea    esi,[eax+0x4]
   1b5b7:	mov    edi,esp
   1b5b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5bc:	lea    eax,[ebp+0x8]
   1b5bf:	push   eax
   1b5c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5c1:	call   0x1b508
   1b5c6:	pop    edi
   1b5c7:	pop    esi
   1b5c8:	mov    eax,ebx
   1b5ca:	pop    ebx
   1b5cb:	pop    ebp
   1b5cc:	ret    0x4
   1b5cf:	int3   
   1b5d0:	int3   
   1b5d1:	int3   
   1b5d2:	int3   
   1b5d3:	int3   
   1b5d4:	mov    edi,edi
   1b5d6:	push   ebp
   1b5d7:	mov    ebp,esp
   1b5d9:	push   ecx
   1b5da:	push   ebx
   1b5db:	push   0x30
   1b5dd:	call   0x11d78
   1b5e2:	xor    ebx,ebx
   1b5e4:	pop    ecx
   1b5e5:	cmp    eax,ebx
   1b5e7:	je     0x1b5fb
   1b5e9:	lea    ecx,[ebp-0x1]
   1b5ec:	push   ecx
   1b5ed:	mov    ecx,eax
   1b5ef:	call   0x1a4ba
   1b5f4:	mov    ds:0x78484,eax
   1b5f9:	jmp    0x1b601
   1b5fb:	mov    DWORD PTR ds:0x78484,ebx
   1b601:	push   esi
   1b602:	push   0x10
   1b604:	call   0x11d78
   1b609:	mov    esi,eax
   1b60b:	pop    ecx
   1b60c:	cmp    esi,ebx
   1b60e:	je     0x1b622
   1b610:	mov    ecx,esi
   1b612:	mov    BYTE PTR [esi+0x8],bl
   1b615:	call   0x1ad1a
   1b61a:	mov    DWORD PTR ds:0x7847c,esi
   1b620:	jmp    0x1b628
   1b622:	mov    DWORD PTR ds:0x7847c,ebx
   1b628:	push   0xc
   1b62a:	call   0x11d78
   1b62f:	pop    ecx
   1b630:	pop    esi
   1b631:	cmp    eax,ebx
   1b633:	je     0x1b647
   1b635:	lea    ecx,[ebp-0x1]
   1b638:	push   ecx
   1b639:	mov    ecx,eax
   1b63b:	call   0x1ab2e
   1b640:	mov    ds:0x78480,eax
   1b645:	jmp    0x1b64d
   1b647:	mov    DWORD PTR ds:0x78480,ebx
   1b64d:	push   ebx
   1b64e:	push   0x7845c
   1b653:	call   0x11b22
   1b658:	call   eax
   1b65a:	mov    DWORD PTR ds:0x78488,0x1
   1b664:	pop    ebx
   1b665:	leave  
   1b666:	ret    
   1b667:	int3   
   1b668:	int3   
   1b669:	int3   
   1b66a:	int3   
   1b66b:	int3   
   1b66c:	push   0x3c
   1b66e:	push   0x77420
   1b673:	call   0x1db08
   1b678:	xor    esi,esi
   1b67a:	push   esi
   1b67b:	push   esi
   1b67c:	push   esi
   1b67d:	push   esi
   1b67e:	push   0x7845c
   1b683:	call   DWORD PTR ds:0x1f020
   1b689:	cmp    eax,esi
   1b68b:	jl     0x1b7fb
   1b691:	mov    DWORD PTR [ebp-0x4],esi
   1b694:	mov    edi,DWORD PTR [ebp+0x8]
   1b697:	push   edi
   1b698:	lea    eax,[ebp-0x24]
   1b69b:	push   eax
   1b69c:	call   0x1a6c6
   1b6a1:	cmp    DWORD PTR [eax+0x4],esi
   1b6a4:	setne  BYTE PTR [ebp-0x19]
   1b6a8:	push   DWORD PTR [ebp-0x24]
   1b6ab:	call   0x1da56
   1b6b0:	pop    ecx
   1b6b1:	push   edi
   1b6b2:	lea    eax,[ebp-0x2c]
   1b6b5:	push   eax
   1b6b6:	call   0x1a6ec
   1b6bb:	xor    al,al
   1b6bd:	cmp    DWORD PTR [edi+0x14],esi
   1b6c0:	jne    0x1b6d6
   1b6c2:	lea    eax,[ebp-0x2c]
   1b6c5:	push   eax
   1b6c6:	mov    ecx,DWORD PTR ds:0x7847c
   1b6cc:	call   0x1b378
   1b6d1:	test   eax,eax
   1b6d3:	setne  al
   1b6d6:	test   al,al
   1b6d8:	je     0x1b6e9
   1b6da:	lea    eax,[ebp-0x2c]
   1b6dd:	push   eax
   1b6de:	mov    ecx,DWORD PTR ds:0x7847c
   1b6e4:	call   0x1b4be
   1b6e9:	mov    ebx,DWORD PTR ds:0x78484
   1b6ef:	cmp    DWORD PTR [ebx+0x2c],esi
   1b6f2:	jbe    0x1b752
   1b6f4:	mov    eax,ds:0x7811c
   1b6f9:	mov    DWORD PTR [ebp-0x20],eax
   1b6fc:	cmp    eax,esi
   1b6fe:	ja     0x1b707
   1b700:	mov    DWORD PTR [ebp-0x20],0x1
   1b707:	mov    eax,DWORD PTR [ebp-0x20]
   1b70a:	cmp    DWORD PTR [ebx+0x2c],eax
   1b70d:	jb     0x1b752
   1b70f:	lea    esi,[ebx+0x4]
   1b712:	lea    edi,[ebp-0x3c]
   1b715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b719:	mov    eax,DWORD PTR [ebp-0x34]
   1b71c:	mov    eax,DWORD PTR [eax]
   1b71e:	mov    eax,DWORD PTR [eax+0xc]
   1b721:	xor    ecx,ecx
   1b723:	add    eax,0x9c40
   1b728:	push   ecx
   1b729:	pop    esi
   1b72a:	adc    ecx,esi
   1b72c:	mov    edx,DWORD PTR [ebp+0x8]
   1b72f:	mov    edx,DWORD PTR [edx+0xc]
   1b732:	cmp    ecx,esi
   1b734:	ja     0x1b752
   1b736:	jb     0x1b73c
   1b738:	cmp    eax,edx
   1b73a:	jae    0x1b752
   1b73c:	mov    ecx,ebx
   1b73e:	call   0x1a4e8
   1b743:	mov    ecx,ebx
   1b745:	call   0x1ab12
   1b74a:	mov    ebx,DWORD PTR ds:0x78484
   1b750:	jmp    0x1b707
   1b752:	push   DWORD PTR [ebp+0x8]
   1b755:	lea    eax,[ebp-0x24]
   1b758:	push   eax
   1b759:	call   0x1a6ec
   1b75e:	push   eax
   1b75f:	lea    eax,[ebp-0x3c]
   1b762:	push   eax
   1b763:	call   0x1a738
   1b768:	push   DWORD PTR [ebp-0x24]
   1b76b:	call   0x1da56
   1b770:	pop    ecx
   1b771:	mov    ebx,DWORD PTR ds:0x78484
   1b777:	lea    esi,[ebx+0x14]
   1b77a:	lea    edi,[ebp-0x4c]
   1b77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b77e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b781:	mov    esi,DWORD PTR [ebp-0x34]
   1b784:	cmp    esi,DWORD PTR [ebp-0x44]
   1b787:	je     0x1b7bb
   1b789:	mov    eax,DWORD PTR [esi]
   1b78b:	mov    BYTE PTR [eax+0x1c],0x0
   1b78f:	mov    eax,DWORD PTR [esi]
   1b791:	cmp    BYTE PTR [eax+0x24],0x0
   1b795:	jne    0x1b7a5
   1b797:	mov    BYTE PTR [eax+0x24],0x1
   1b79b:	mov    eax,DWORD PTR [esi]
   1b79d:	push   DWORD PTR [eax+0x8]
   1b7a0:	call   0x1a462
   1b7a5:	mov    eax,DWORD PTR [esi]
   1b7a7:	mov    ecx,DWORD PTR [eax+0x8]
   1b7aa:	mov    eax,DWORD PTR [ebp+0x8]
   1b7ad:	mov    DWORD PTR [eax+0x8],ecx
   1b7b0:	mov    ecx,DWORD PTR [esi]
   1b7b2:	mov    ecx,DWORD PTR [ecx+0x20]
   1b7b5:	inc    ecx
   1b7b6:	mov    DWORD PTR [eax+0x20],ecx
   1b7b9:	jmp    0x1b7be
   1b7bb:	mov    eax,DWORD PTR [ebp+0x8]
   1b7be:	mov    cl,BYTE PTR [ebp-0x19]
   1b7c1:	mov    BYTE PTR [eax+0x1c],cl
   1b7c4:	lea    eax,[ebp+0x8]
   1b7c7:	push   eax
   1b7c8:	mov    ecx,ebx
   1b7ca:	call   0x1b1d0
   1b7cf:	inc    DWORD PTR ds:0x78488
   1b7d5:	push   DWORD PTR [ebp-0x2c]
   1b7d8:	call   0x1da56
   1b7dd:	pop    ecx
   1b7de:	jmp    0x1b7e7
   1b7e0:	xor    eax,eax
   1b7e2:	inc    eax
   1b7e3:	ret    
   1b7e4:	mov    esp,DWORD PTR [ebp-0x18]
   1b7e7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b7ee:	push   0x0
   1b7f0:	push   0x7845c
   1b7f5:	call   DWORD PTR ds:0x1f01c
   1b7fb:	call   0x1db4d
   1b800:	ret    0x4
   1b803:	int3   
   1b804:	int3   
   1b805:	int3   
   1b806:	int3   
   1b807:	int3   
   1b808:	push   0x48
   1b80a:	push   0x77440
   1b80f:	call   0x1db08
   1b814:	xor    ebx,ebx
   1b816:	push   ebx
   1b817:	push   ebx
   1b818:	push   ebx
   1b819:	push   ebx
   1b81a:	push   0x7845c
   1b81f:	call   DWORD PTR ds:0x1f020
   1b825:	cmp    eax,ebx
   1b827:	jl     0x1b8d5
   1b82d:	mov    DWORD PTR [ebp-0x4],ebx
   1b830:	push   DWORD PTR ds:0x78480
   1b836:	lea    ecx,[ebp-0x28]
   1b839:	call   0x1b22a
   1b83e:	mov    BYTE PTR [ebp-0x19],bl
   1b841:	cmp    DWORD PTR [ebp-0x20],ebx
   1b844:	je     0x1b864
   1b846:	mov    eax,DWORD PTR [ebp-0x24]
   1b849:	mov    eax,DWORD PTR [eax]
   1b84b:	mov    eax,DWORD PTR [eax+0x8]
   1b84e:	cmp    eax,DWORD PTR ds:0x78488
   1b854:	ja     0x1b864
   1b856:	mov    BYTE PTR [ebp-0x19],0x1
   1b85a:	lea    ecx,[ebp-0x28]
   1b85d:	call   0x1ab88
   1b862:	jmp    0x1b841
   1b864:	cmp    BYTE PTR [ebp-0x19],bl
   1b867:	je     0x1b89f
   1b869:	push   DWORD PTR ds:0x78484
   1b86f:	lea    ecx,[ebp-0x58]
   1b872:	call   0x1b574
   1b877:	mov    esi,DWORD PTR [ebp+0x8]
   1b87a:	push   esi
   1b87b:	lea    eax,[ebp-0x58]
   1b87e:	push   eax
   1b87f:	call   0x1a7d6
   1b884:	cmp    DWORD PTR [esi],ebx
   1b886:	jne    0x1b897
   1b888:	lea    eax,[ebp-0x28]
   1b88b:	push   eax
   1b88c:	mov    ecx,DWORD PTR ds:0x78480
   1b892:	call   0x1b268
   1b897:	lea    ecx,[ebp-0x58]
   1b89a:	call   0x1b1b4
   1b89f:	lea    ecx,[ebp-0x28]
   1b8a2:	call   0x1ab54
   1b8a7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b8ae:	jmp    0x1b8c9
   1b8b0:	xor    eax,eax
   1b8b2:	inc    eax
   1b8b3:	ret    
   1b8b4:	mov    esp,DWORD PTR [ebp-0x18]
   1b8b7:	mov    eax,DWORD PTR [ebp+0x8]
   1b8ba:	mov    DWORD PTR [eax],0x2
   1b8c0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b8c7:	xor    ebx,ebx
   1b8c9:	push   ebx
   1b8ca:	push   0x7845c
   1b8cf:	call   DWORD PTR ds:0x1f01c
   1b8d5:	call   0x1db4d
   1b8da:	ret    0x4
   1b8dd:	int3   
   1b8de:	int3   
   1b8df:	int3   
   1b8e0:	int3   
   1b8e1:	int3   
   1b8e2:	mov    edi,edi
   1b8e4:	push   ebp
   1b8e5:	mov    ebp,esp
   1b8e7:	mov    ecx,DWORD PTR [ebp+0x8]
   1b8ea:	xor    edx,edx
   1b8ec:	cmp    ecx,edx
   1b8ee:	je     0x1b93e
   1b8f0:	mov    eax,DWORD PTR [ecx+0x1c]
   1b8f3:	cmp    eax,edx
   1b8f5:	je     0x1b93e
   1b8f7:	mov    DWORD PTR [eax+0x1c],edx
   1b8fa:	mov    DWORD PTR [ecx+0x14],edx
   1b8fd:	mov    DWORD PTR [ecx+0x8],edx
   1b900:	mov    DWORD PTR [ecx+0x18],edx
   1b903:	mov    DWORD PTR [ecx+0x30],0x1
   1b90a:	lea    ecx,[eax+0x530]
   1b910:	mov    DWORD PTR [eax],edx
   1b912:	mov    DWORD PTR [eax+0x4],edx
   1b915:	mov    DWORD PTR [eax+0xc],edx
   1b918:	mov    DWORD PTR [eax+0x14],0x8000
   1b91f:	mov    DWORD PTR [eax+0x20],edx
   1b922:	mov    DWORD PTR [eax+0x28],edx
   1b925:	mov    DWORD PTR [eax+0x2c],edx
   1b928:	mov    DWORD PTR [eax+0x30],edx
   1b92b:	mov    DWORD PTR [eax+0x38],edx
   1b92e:	mov    DWORD PTR [eax+0x3c],edx
   1b931:	mov    DWORD PTR [eax+0x6c],ecx
   1b934:	mov    DWORD PTR [eax+0x50],ecx
   1b937:	mov    DWORD PTR [eax+0x4c],ecx
   1b93a:	xor    eax,eax
   1b93c:	jmp    0x1b941
   1b93e:	push   0xfffffffe
   1b940:	pop    eax
   1b941:	pop    ebp
   1b942:	ret    0x4
   1b945:	int3   
   1b946:	int3   
   1b947:	int3   
   1b948:	int3   
   1b949:	int3   
   1b94a:	mov    edi,edi
   1b94c:	push   ebp
   1b94d:	mov    ebp,esp
   1b94f:	mov    eax,DWORD PTR [ebp+0x10]
   1b952:	push   esi
   1b953:	push   edi
   1b954:	xor    edi,edi
   1b956:	cmp    eax,edi
   1b958:	je     0x1b9f3
   1b95e:	cmp    BYTE PTR [eax],0x31
   1b961:	jne    0x1b9f3
   1b967:	cmp    DWORD PTR [ebp+0x14],0x38
   1b96b:	jne    0x1b9f3
   1b971:	mov    esi,DWORD PTR [ebp+0x8]
   1b974:	cmp    esi,edi
   1b976:	jne    0x1b97c
   1b978:	push   0xfffffffe
   1b97a:	jmp    0x1b9f5
   1b97c:	mov    DWORD PTR [esi+0x18],edi
   1b97f:	cmp    DWORD PTR [esi+0x20],edi
   1b982:	jne    0x1b98e
   1b984:	mov    DWORD PTR [esi+0x20],0x1cd42
   1b98b:	mov    DWORD PTR [esi+0x28],edi
   1b98e:	cmp    DWORD PTR [esi+0x24],edi
   1b991:	jne    0x1b99a
   1b993:	mov    DWORD PTR [esi+0x24],0x1cd5e
   1b99a:	push   0x2530
   1b99f:	push   0x1
   1b9a1:	push   DWORD PTR [esi+0x28]
   1b9a4:	call   DWORD PTR [esi+0x20]
   1b9a7:	cmp    eax,edi
   1b9a9:	jne    0x1b9af
   1b9ab:	push   0xfffffffc
   1b9ad:	jmp    0x1b9f5
   1b9af:	mov    ecx,DWORD PTR [ebp+0xc]
   1b9b2:	cmp    ecx,edi
   1b9b4:	mov    DWORD PTR [esi+0x1c],eax
   1b9b7:	jge    0x1b9c0
   1b9b9:	mov    DWORD PTR [eax+0x8],edi
   1b9bc:	neg    ecx
   1b9be:	jmp    0x1b9d1
   1b9c0:	mov    edx,ecx
   1b9c2:	sar    edx,0x4
   1b9c5:	inc    edx
   1b9c6:	cmp    ecx,0x30
   1b9c9:	mov    DWORD PTR [eax+0x8],edx
   1b9cc:	jge    0x1b9d1
   1b9ce:	and    ecx,0xf
   1b9d1:	lea    edx,[ecx-0x8]
   1b9d4:	cmp    edx,0x7
   1b9d7:	ja     0x1b9e7
   1b9d9:	push   esi
   1b9da:	mov    DWORD PTR [eax+0x24],ecx
   1b9dd:	mov    DWORD PTR [eax+0x34],edi
   1b9e0:	call   0x1b8e2
   1b9e5:	jmp    0x1b9f6
   1b9e7:	push   eax
   1b9e8:	push   DWORD PTR [esi+0x28]
   1b9eb:	call   DWORD PTR [esi+0x24]
   1b9ee:	mov    DWORD PTR [esi+0x1c],edi
   1b9f1:	jmp    0x1b978
   1b9f3:	push   0xfffffffa
   1b9f5:	pop    eax
   1b9f6:	pop    edi
   1b9f7:	pop    esi
   1b9f8:	pop    ebp
   1b9f9:	ret    0x10
   1b9fc:	int3   
   1b9fd:	int3   
   1b9fe:	int3   
   1b9ff:	int3   
   1ba00:	int3   
   1ba01:	int3   
   1ba02:	mov    edi,edi
   1ba04:	push   ebp
   1ba05:	mov    ebp,esp
   1ba07:	push   ecx
   1ba08:	push   ebx
   1ba09:	push   esi
   1ba0a:	mov    esi,DWORD PTR [edi+0x1c]
   1ba0d:	cmp    DWORD PTR [esi+0x34],0x0
   1ba11:	mov    ebx,eax
   1ba13:	jne    0x1ba33
   1ba15:	mov    ecx,DWORD PTR [esi+0x24]
   1ba18:	xor    eax,eax
   1ba1a:	inc    eax
   1ba1b:	shl    eax,cl
   1ba1d:	push   0x1
   1ba1f:	push   eax
   1ba20:	push   DWORD PTR [edi+0x28]
   1ba23:	call   DWORD PTR [edi+0x20]
   1ba26:	mov    DWORD PTR [esi+0x34],eax
   1ba29:	test   eax,eax
   1ba2b:	jne    0x1ba33
   1ba2d:	inc    eax
   1ba2e:	jmp    0x1bad5
   1ba33:	xor    eax,eax
   1ba35:	cmp    DWORD PTR [esi+0x28],eax
   1ba38:	jne    0x1ba4b
   1ba3a:	mov    ecx,DWORD PTR [esi+0x24]
   1ba3d:	xor    edx,edx
   1ba3f:	inc    edx
   1ba40:	shl    edx,cl
   1ba42:	mov    DWORD PTR [esi+0x30],eax
   1ba45:	mov    DWORD PTR [esi+0x2c],eax
   1ba48:	mov    DWORD PTR [esi+0x28],edx
   1ba4b:	sub    ebx,DWORD PTR [edi+0x10]
   1ba4e:	mov    eax,DWORD PTR [esi+0x28]
   1ba51:	cmp    ebx,eax
   1ba53:	jb     0x1ba6d
   1ba55:	mov    ecx,DWORD PTR [edi+0xc]
   1ba58:	push   eax
   1ba59:	sub    ecx,eax
   1ba5b:	push   ecx
   1ba5c:	push   DWORD PTR [esi+0x34]
   1ba5f:	call   0x1dad8
   1ba64:	add    esp,0xc
   1ba67:	and    DWORD PTR [esi+0x30],0x0
   1ba6b:	jmp    0x1baae
   1ba6d:	sub    eax,DWORD PTR [esi+0x30]
   1ba70:	mov    DWORD PTR [ebp-0x4],eax
   1ba73:	cmp    eax,ebx
   1ba75:	jbe    0x1ba7a
   1ba77:	mov    DWORD PTR [ebp-0x4],ebx
   1ba7a:	mov    eax,DWORD PTR [edi+0xc]
   1ba7d:	push   DWORD PTR [ebp-0x4]
   1ba80:	sub    eax,ebx
   1ba82:	push   eax
   1ba83:	mov    eax,DWORD PTR [esi+0x34]
   1ba86:	add    eax,DWORD PTR [esi+0x30]
   1ba89:	push   eax
   1ba8a:	call   0x1dad8
   1ba8f:	mov    eax,DWORD PTR [ebp-0x4]
   1ba92:	add    esp,0xc
   1ba95:	sub    ebx,eax
   1ba97:	je     0x1bab6
   1ba99:	mov    eax,DWORD PTR [edi+0xc]
   1ba9c:	push   ebx
   1ba9d:	sub    eax,ebx
   1ba9f:	push   eax
   1baa0:	push   DWORD PTR [esi+0x34]
   1baa3:	call   0x1dad8
   1baa8:	add    esp,0xc
   1baab:	mov    DWORD PTR [esi+0x30],ebx
   1baae:	mov    eax,DWORD PTR [esi+0x28]
   1bab1:	mov    DWORD PTR [esi+0x2c],eax
   1bab4:	jmp    0x1bad3
   1bab6:	add    DWORD PTR [esi+0x30],eax
   1bab9:	mov    ecx,DWORD PTR [esi+0x30]
   1babc:	mov    edx,DWORD PTR [esi+0x28]
   1babf:	cmp    ecx,edx
   1bac1:	jne    0x1bac7
   1bac3:	and    DWORD PTR [esi+0x30],0x0
   1bac7:	mov    ecx,DWORD PTR [esi+0x2c]
   1baca:	cmp    ecx,edx
   1bacc:	jae    0x1bad3
   1bace:	add    ecx,eax
   1bad0:	mov    DWORD PTR [esi+0x2c],ecx
   1bad3:	xor    eax,eax
   1bad5:	pop    esi
   1bad6:	pop    ebx
   1bad7:	leave  
   1bad8:	ret    
   1bad9:	int3   
   1bada:	int3   
   1badb:	int3   
   1badc:	int3   
   1badd:	int3   
   1bade:	mov    edi,edi
   1bae0:	push   ebp
   1bae1:	mov    ebp,esp
   1bae3:	mov    edx,DWORD PTR [ebp+0x8]
   1bae6:	sub    esp,0x2c
   1bae9:	push   ebx
   1baea:	xor    eax,eax
   1baec:	push   esi
   1baed:	push   edi
   1baee:	cmp    edx,eax
   1baf0:	je     0x1bb40
   1baf2:	mov    esi,DWORD PTR [edx+0x1c]
   1baf5:	cmp    esi,eax
   1baf7:	je     0x1bb40
   1baf9:	cmp    DWORD PTR [edx+0xc],eax
   1bafc:	je     0x1bb40
   1bafe:	cmp    DWORD PTR [edx],eax
   1bb00:	jne    0x1bb07
   1bb02:	cmp    DWORD PTR [edx+0x4],eax
   1bb05:	jne    0x1bb40
   1bb07:	cmp    DWORD PTR [esi],0xb
   1bb0a:	jne    0x1bb12
   1bb0c:	mov    DWORD PTR [esi],0xc
   1bb12:	mov    eax,DWORD PTR [edx+0xc]
   1bb15:	mov    ecx,DWORD PTR [edx+0x10]
   1bb18:	and    DWORD PTR [ebp-0x24],0x0
   1bb1c:	mov    ebx,DWORD PTR [esi+0x38]
   1bb1f:	mov    edi,DWORD PTR [esi+0x3c]
   1bb22:	mov    DWORD PTR [ebp-0x18],eax
   1bb25:	mov    eax,DWORD PTR [edx]
   1bb27:	mov    DWORD PTR [ebp-0x4],eax
   1bb2a:	mov    eax,DWORD PTR [edx+0x4]
   1bb2d:	mov    DWORD PTR [ebp-0x8],eax
   1bb30:	mov    DWORD PTR [ebp-0x2c],eax
   1bb33:	mov    eax,DWORD PTR [esi]
   1bb35:	mov    DWORD PTR [ebp-0x10],ecx
   1bb38:	mov    DWORD PTR [ebp-0x1c],ecx
   1bb3b:	cmp    eax,0x1c
   1bb3e:	jbe    0x1bb4d
   1bb40:	push   0xfffffffe
   1bb42:	pop    eax
   1bb43:	pop    edi
   1bb44:	pop    esi
   1bb45:	pop    ebx
   1bb46:	leave  
   1bb47:	ret    0x8
   1bb4a:	mov    edx,DWORD PTR [ebp+0x8]
   1bb4d:	jmp    DWORD PTR [eax*4+0x1cc82]
   1bb54:	mov    eax,DWORD PTR [esi+0x8]
   1bb57:	test   eax,eax
   1bb59:	jne    0x1bb85
   1bb5b:	mov    DWORD PTR [esi],0xc
   1bb61:	jmp    0x1cb53
   1bb66:	cmp    DWORD PTR [ebp-0x8],0x0
   1bb6a:	je     0x1cba1
   1bb70:	mov    ecx,DWORD PTR [ebp-0x4]
   1bb73:	movzx  edx,BYTE PTR [ecx]
   1bb76:	dec    DWORD PTR [ebp-0x8]
   1bb79:	mov    ecx,edi
   1bb7b:	shl    edx,cl
   1bb7d:	add    ebx,edx
   1bb7f:	inc    DWORD PTR [ebp-0x4]
   1bb82:	add    edi,0x8
   1bb85:	cmp    edi,0x10
   1bb88:	jb     0x1bb66
   1bb8a:	test   al,0x2
   1bb8c:	je     0x1bbc9
   1bb8e:	cmp    ebx,0x8b1f
   1bb94:	jne    0x1bbc9
   1bb96:	xor    edi,edi
   1bb98:	push   edi
   1bb99:	push   edi
   1bb9a:	push   edi
   1bb9b:	call   0x1da04
   1bba0:	mov    DWORD PTR [esi+0x18],eax
   1bba3:	push   0x2
   1bba5:	lea    eax,[ebp-0x14]
   1bba8:	push   eax
   1bba9:	mov    BYTE PTR [ebp-0x14],0x1f
   1bbad:	mov    BYTE PTR [ebp-0x13],0x8b
   1bbb1:	push   DWORD PTR [esi+0x18]
   1bbb4:	call   0x1da04
   1bbb9:	mov    DWORD PTR [esi+0x18],eax
   1bbbc:	xor    ebx,ebx
   1bbbe:	mov    DWORD PTR [esi],0x1
   1bbc4:	jmp    0x1cb53
   1bbc9:	mov    eax,DWORD PTR [esi+0x20]
   1bbcc:	and    DWORD PTR [esi+0x10],0x0
   1bbd0:	test   eax,eax
   1bbd2:	je     0x1bbd8
   1bbd4:	or     DWORD PTR [eax+0x30],0xffffffff
   1bbd8:	test   BYTE PTR [esi+0x8],0x1
   1bbdc:	je     0x1bc62
   1bbe2:	movzx  eax,bl
   1bbe5:	shl    eax,0x8
   1bbe8:	mov    ecx,ebx
   1bbea:	shr    ecx,0x8
   1bbed:	add    eax,ecx
   1bbef:	push   0x1f
   1bbf1:	xor    edx,edx
   1bbf3:	pop    ecx
   1bbf4:	div    ecx
   1bbf6:	test   edx,edx
   1bbf8:	jne    0x1bc62
   1bbfa:	mov    eax,ebx
   1bbfc:	and    al,0xf
   1bbfe:	cmp    al,0x8
   1bc00:	je     0x1bc11
   1bc02:	mov    eax,DWORD PTR [ebp+0x8]
   1bc05:	mov    DWORD PTR [eax+0x18],0x1eebc
   1bc0c:	jmp    0x1cb4d
   1bc11:	shr    ebx,0x4
   1bc14:	mov    ecx,ebx
   1bc16:	and    ecx,0xf
   1bc19:	add    ecx,0x8
   1bc1c:	sub    edi,0x4
   1bc1f:	cmp    ecx,DWORD PTR [esi+0x24]
   1bc22:	jbe    0x1bc33
   1bc24:	mov    eax,DWORD PTR [ebp+0x8]
   1bc27:	mov    DWORD PTR [eax+0x18],0x1eea8
   1bc2e:	jmp    0x1cb4d
   1bc33:	xor    eax,eax
   1bc35:	xor    edi,edi
   1bc37:	inc    eax
   1bc38:	push   edi
   1bc39:	shl    eax,cl
   1bc3b:	push   edi
   1bc3c:	push   edi
   1bc3d:	mov    DWORD PTR [esi+0x14],eax
   1bc40:	call   0x1d562
   1bc45:	mov    ecx,DWORD PTR [ebp+0x8]
   1bc48:	shr    ebx,0x8
   1bc4b:	not    ebx
   1bc4d:	and    ebx,0x2
   1bc50:	or     ebx,0x9
   1bc53:	mov    DWORD PTR [esi+0x18],eax
   1bc56:	mov    DWORD PTR [ecx+0x30],eax
   1bc59:	mov    DWORD PTR [esi],ebx
   1bc5b:	xor    ebx,ebx
   1bc5d:	jmp    0x1cb53
   1bc62:	mov    eax,DWORD PTR [ebp+0x8]
   1bc65:	mov    DWORD PTR [eax+0x18],0x1ee90
   1bc6c:	jmp    0x1cb4d
   1bc71:	cmp    edi,0x10
   1bc74:	jae    0x1bc9d
   1bc76:	cmp    DWORD PTR [ebp-0x8],0x0
   1bc7a:	je     0x1cba1
   1bc80:	mov    eax,DWORD PTR [ebp-0x4]
   1bc83:	movzx  eax,BYTE PTR [eax]
   1bc86:	dec    DWORD PTR [ebp-0x8]
   1bc89:	mov    ecx,edi
   1bc8b:	shl    eax,cl
   1bc8d:	add    edi,0x8
   1bc90:	add    ebx,eax
   1bc92:	inc    DWORD PTR [ebp-0x4]
   1bc95:	cmp    edi,0x10
   1bc98:	jb     0x1bc76
   1bc9a:	mov    edx,DWORD PTR [ebp+0x8]
   1bc9d:	mov    DWORD PTR [esi+0x10],ebx
   1bca0:	cmp    bl,0x8
   1bca3:	je     0x1bcb1
   1bca5:	mov    DWORD PTR [edx+0x18],0x1eebc
   1bcac:	jmp    0x1cb4d
   1bcb1:	test   ebx,0xe000
   1bcb7:	je     0x1bcc5
   1bcb9:	mov    DWORD PTR [edx+0x18],0x1ee76
   1bcc0:	jmp    0x1cb4d
   1bcc5:	mov    eax,DWORD PTR [esi+0x20]
   1bcc8:	test   eax,eax
   1bcca:	je     0x1bcd6
   1bccc:	mov    ecx,ebx
   1bcce:	shr    ecx,0x8
   1bcd1:	and    ecx,0x1
   1bcd4:	mov    DWORD PTR [eax],ecx
   1bcd6:	test   DWORD PTR [esi+0x10],0x200
   1bcdd:	je     0x1bcfc
   1bcdf:	mov    BYTE PTR [ebp-0x14],bl
   1bce2:	push   0x2
   1bce4:	lea    eax,[ebp-0x14]
   1bce7:	shr    ebx,0x8
   1bcea:	push   eax
   1bceb:	mov    BYTE PTR [ebp-0x13],bl
   1bcee:	push   DWORD PTR [esi+0x18]
   1bcf1:	call   0x1da04
   1bcf6:	mov    edx,DWORD PTR [ebp+0x8]
   1bcf9:	mov    DWORD PTR [esi+0x18],eax
   1bcfc:	xor    ebx,ebx
   1bcfe:	xor    edi,edi
   1bd00:	mov    DWORD PTR [esi],0x2
   1bd06:	cmp    edi,0x20
   1bd09:	jae    0x1bd32
   1bd0b:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd0f:	je     0x1cba1
   1bd15:	mov    eax,DWORD PTR [ebp-0x4]
   1bd18:	movzx  eax,BYTE PTR [eax]
   1bd1b:	dec    DWORD PTR [ebp-0x8]
   1bd1e:	mov    ecx,edi
   1bd20:	shl    eax,cl
   1bd22:	add    edi,0x8
   1bd25:	add    ebx,eax
   1bd27:	inc    DWORD PTR [ebp-0x4]
   1bd2a:	cmp    edi,0x20
   1bd2d:	jb     0x1bd0b
   1bd2f:	mov    edx,DWORD PTR [ebp+0x8]
   1bd32:	mov    eax,DWORD PTR [esi+0x20]
   1bd35:	test   eax,eax
   1bd37:	je     0x1bd3c
   1bd39:	mov    DWORD PTR [eax+0x4],ebx
   1bd3c:	test   DWORD PTR [esi+0x10],0x200
   1bd43:	je     0x1bd72
   1bd45:	mov    eax,ebx
   1bd47:	shr    eax,0x8
   1bd4a:	mov    BYTE PTR [ebp-0x13],al
   1bd4d:	mov    eax,ebx
   1bd4f:	shr    eax,0x10
   1bd52:	mov    BYTE PTR [ebp-0x12],al
   1bd55:	mov    BYTE PTR [ebp-0x14],bl
   1bd58:	push   0x4
   1bd5a:	lea    eax,[ebp-0x14]
   1bd5d:	shr    ebx,0x18
   1bd60:	push   eax
   1bd61:	mov    BYTE PTR [ebp-0x11],bl
   1bd64:	push   DWORD PTR [esi+0x18]
   1bd67:	call   0x1da04
   1bd6c:	mov    edx,DWORD PTR [ebp+0x8]
   1bd6f:	mov    DWORD PTR [esi+0x18],eax
   1bd72:	xor    ebx,ebx
   1bd74:	xor    edi,edi
   1bd76:	mov    DWORD PTR [esi],0x3
   1bd7c:	cmp    edi,0x10
   1bd7f:	jae    0x1bda8
   1bd81:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd85:	je     0x1cba1
   1bd8b:	mov    eax,DWORD PTR [ebp-0x4]
   1bd8e:	movzx  eax,BYTE PTR [eax]
   1bd91:	dec    DWORD PTR [ebp-0x8]
   1bd94:	mov    ecx,edi
   1bd96:	shl    eax,cl
   1bd98:	add    edi,0x8
   1bd9b:	add    ebx,eax
   1bd9d:	inc    DWORD PTR [ebp-0x4]
   1bda0:	cmp    edi,0x10
   1bda3:	jb     0x1bd81
   1bda5:	mov    edx,DWORD PTR [ebp+0x8]
   1bda8:	mov    eax,DWORD PTR [esi+0x20]
   1bdab:	test   eax,eax
   1bdad:	je     0x1bdc5
   1bdaf:	mov    ecx,ebx
   1bdb1:	and    ecx,0xff
   1bdb7:	mov    DWORD PTR [eax+0x8],ecx
   1bdba:	mov    ecx,DWORD PTR [esi+0x20]
   1bdbd:	mov    eax,ebx
   1bdbf:	shr    eax,0x8
   1bdc2:	mov    DWORD PTR [ecx+0xc],eax
   1bdc5:	test   DWORD PTR [esi+0x10],0x200
   1bdcc:	je     0x1bdeb
   1bdce:	mov    BYTE PTR [ebp-0x14],bl
   1bdd1:	push   0x2
   1bdd3:	lea    eax,[ebp-0x14]
   1bdd6:	shr    ebx,0x8
   1bdd9:	push   eax
   1bdda:	mov    BYTE PTR [ebp-0x13],bl
   1bddd:	push   DWORD PTR [esi+0x18]
   1bde0:	call   0x1da04
   1bde5:	mov    edx,DWORD PTR [ebp+0x8]
   1bde8:	mov    DWORD PTR [esi+0x18],eax
   1bdeb:	xor    ebx,ebx
   1bded:	xor    edi,edi
   1bdef:	mov    DWORD PTR [esi],0x4
   1bdf5:	test   DWORD PTR [esi+0x10],0x400
   1bdfc:	je     0x1be63
   1bdfe:	cmp    edi,0x10
   1be01:	jae    0x1be2a
   1be03:	cmp    DWORD PTR [ebp-0x8],0x0
   1be07:	je     0x1cba1
   1be0d:	mov    eax,DWORD PTR [ebp-0x4]
   1be10:	movzx  eax,BYTE PTR [eax]
   1be13:	dec    DWORD PTR [ebp-0x8]
   1be16:	mov    ecx,edi
   1be18:	shl    eax,cl
   1be1a:	add    edi,0x8
   1be1d:	add    ebx,eax
   1be1f:	inc    DWORD PTR [ebp-0x4]
   1be22:	cmp    edi,0x10
   1be25:	jb     0x1be03
   1be27:	mov    edx,DWORD PTR [ebp+0x8]
   1be2a:	mov    eax,DWORD PTR [esi+0x20]
   1be2d:	mov    DWORD PTR [esi+0x40],ebx
   1be30:	test   eax,eax
   1be32:	je     0x1be37
   1be34:	mov    DWORD PTR [eax+0x14],ebx
   1be37:	test   DWORD PTR [esi+0x10],0x200
   1be3e:	je     0x1be5d
   1be40:	mov    BYTE PTR [ebp-0x14],bl
   1be43:	push   0x2
   1be45:	lea    eax,[ebp-0x14]
   1be48:	shr    ebx,0x8
   1be4b:	push   eax
   1be4c:	mov    BYTE PTR [ebp-0x13],bl
   1be4f:	push   DWORD PTR [esi+0x18]
   1be52:	call   0x1da04
   1be57:	mov    edx,DWORD PTR [ebp+0x8]
   1be5a:	mov    DWORD PTR [esi+0x18],eax
   1be5d:	xor    ebx,ebx
   1be5f:	xor    edi,edi
   1be61:	jmp    0x1be6e
   1be63:	mov    eax,DWORD PTR [esi+0x20]
   1be66:	test   eax,eax
   1be68:	je     0x1be6e
   1be6a:	and    DWORD PTR [eax+0x10],0x0
   1be6e:	mov    DWORD PTR [esi],0x5
   1be74:	test   DWORD PTR [esi+0x10],0x400
   1be7b:	je     0x1bf05
   1be81:	mov    edx,DWORD PTR [esi+0x40]
   1be84:	mov    eax,DWORD PTR [ebp-0x8]
   1be87:	mov    DWORD PTR [ebp-0xc],edx
   1be8a:	cmp    edx,eax
   1be8c:	jbe    0x1be91
   1be8e:	mov    DWORD PTR [ebp-0xc],eax
   1be91:	cmp    DWORD PTR [ebp-0xc],0x0
   1be95:	je     0x1bef8
   1be97:	mov    ecx,DWORD PTR [esi+0x20]
   1be9a:	test   ecx,ecx
   1be9c:	je     0x1bed2
   1be9e:	mov    eax,DWORD PTR [ecx+0x10]
   1bea1:	mov    DWORD PTR [ebp-0x28],eax
   1bea4:	test   eax,eax
   1bea6:	je     0x1bed2
   1bea8:	mov    eax,DWORD PTR [ecx+0x14]
   1beab:	mov    ecx,DWORD PTR [ecx+0x18]
   1beae:	sub    eax,edx
   1beb0:	mov    edx,DWORD PTR [ebp-0xc]
   1beb3:	add    edx,eax
   1beb5:	cmp    edx,ecx
   1beb7:	jbe    0x1bebd
   1beb9:	sub    ecx,eax
   1bebb:	jmp    0x1bec0
   1bebd:	mov    ecx,DWORD PTR [ebp-0xc]
   1bec0:	push   ecx
   1bec1:	mov    ecx,DWORD PTR [ebp-0x28]
   1bec4:	push   DWORD PTR [ebp-0x4]
   1bec7:	add    ecx,eax
   1bec9:	push   ecx
   1beca:	call   0x1dad8
   1becf:	add    esp,0xc
   1bed2:	test   DWORD PTR [esi+0x10],0x200
   1bed9:	je     0x1beec
   1bedb:	push   DWORD PTR [ebp-0xc]
   1bede:	push   DWORD PTR [ebp-0x4]
   1bee1:	push   DWORD PTR [esi+0x18]
   1bee4:	call   0x1da04
   1bee9:	mov    DWORD PTR [esi+0x18],eax
   1beec:	mov    eax,DWORD PTR [ebp-0xc]
   1beef:	sub    DWORD PTR [ebp-0x8],eax
   1bef2:	add    DWORD PTR [ebp-0x4],eax
   1bef5:	sub    DWORD PTR [esi+0x40],eax
   1bef8:	cmp    DWORD PTR [esi+0x40],0x0
   1befc:	jne    0x1cba1
   1bf02:	mov    edx,DWORD PTR [ebp+0x8]
   1bf05:	and    DWORD PTR [esi+0x40],0x0
   1bf09:	mov    DWORD PTR [esi],0x6
   1bf0f:	test   DWORD PTR [esi+0x10],0x800
   1bf16:	je     0x1bf93
   1bf18:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf1c:	je     0x1cba1
   1bf22:	xor    ecx,ecx
   1bf24:	mov    eax,DWORD PTR [ebp-0x4]
   1bf27:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bf2b:	inc    ecx
   1bf2c:	mov    DWORD PTR [ebp-0xc],ecx
   1bf2f:	mov    ecx,DWORD PTR [esi+0x20]
   1bf32:	mov    DWORD PTR [ebp-0x20],eax
   1bf35:	test   ecx,ecx
   1bf37:	je     0x1bf54
   1bf39:	mov    edx,DWORD PTR [ecx+0x1c]
   1bf3c:	mov    DWORD PTR [ebp-0x28],edx
   1bf3f:	test   edx,edx
   1bf41:	je     0x1bf54
   1bf43:	mov    edx,DWORD PTR [esi+0x40]
   1bf46:	cmp    edx,DWORD PTR [ecx+0x20]
   1bf49:	jae    0x1bf54
   1bf4b:	mov    ecx,DWORD PTR [ebp-0x28]
   1bf4e:	mov    BYTE PTR [ecx+edx*1],al
   1bf51:	inc    DWORD PTR [esi+0x40]
   1bf54:	test   eax,eax
   1bf56:	je     0x1bf60
   1bf58:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf5b:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bf5e:	jb     0x1bf24
   1bf60:	test   DWORD PTR [esi+0x10],0x200
   1bf67:	je     0x1bf7d
   1bf69:	push   DWORD PTR [ebp-0xc]
   1bf6c:	push   DWORD PTR [ebp-0x4]
   1bf6f:	push   DWORD PTR [esi+0x18]
   1bf72:	call   0x1da04
   1bf77:	mov    DWORD PTR [esi+0x18],eax
   1bf7a:	mov    eax,DWORD PTR [ebp-0x20]
   1bf7d:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf80:	sub    DWORD PTR [ebp-0x8],ecx
   1bf83:	add    DWORD PTR [ebp-0x4],ecx
   1bf86:	test   eax,eax
   1bf88:	jne    0x1cba1
   1bf8e:	mov    edx,DWORD PTR [ebp+0x8]
   1bf91:	jmp    0x1bf9e
   1bf93:	mov    eax,DWORD PTR [esi+0x20]
   1bf96:	test   eax,eax
   1bf98:	je     0x1bf9e
   1bf9a:	and    DWORD PTR [eax+0x1c],0x0
   1bf9e:	and    DWORD PTR [esi+0x40],0x0
   1bfa2:	mov    DWORD PTR [esi],0x7
   1bfa8:	test   DWORD PTR [esi+0x10],0x1000
   1bfaf:	je     0x1c02c
   1bfb1:	cmp    DWORD PTR [ebp-0x8],0x0
   1bfb5:	je     0x1cba1
   1bfbb:	xor    ecx,ecx
   1bfbd:	mov    eax,DWORD PTR [ebp-0x4]
   1bfc0:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bfc4:	inc    ecx
   1bfc5:	mov    DWORD PTR [ebp-0xc],ecx
   1bfc8:	mov    ecx,DWORD PTR [esi+0x20]
   1bfcb:	mov    DWORD PTR [ebp-0x20],eax
   1bfce:	test   ecx,ecx
   1bfd0:	je     0x1bfed
   1bfd2:	mov    edx,DWORD PTR [ecx+0x24]
   1bfd5:	mov    DWORD PTR [ebp-0x28],edx
   1bfd8:	test   edx,edx
   1bfda:	je     0x1bfed
   1bfdc:	mov    edx,DWORD PTR [esi+0x40]
   1bfdf:	cmp    edx,DWORD PTR [ecx+0x28]
   1bfe2:	jae    0x1bfed
   1bfe4:	mov    ecx,DWORD PTR [ebp-0x28]
   1bfe7:	mov    BYTE PTR [ecx+edx*1],al
   1bfea:	inc    DWORD PTR [esi+0x40]
   1bfed:	test   eax,eax
   1bfef:	je     0x1bff9
   1bff1:	mov    ecx,DWORD PTR [ebp-0xc]
   1bff4:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bff7:	jb     0x1bfbd
   1bff9:	test   DWORD PTR [esi+0x10],0x200
   1c000:	je     0x1c016
   1c002:	push   DWORD PTR [ebp-0xc]
   1c005:	push   DWORD PTR [ebp-0x4]
   1c008:	push   DWORD PTR [esi+0x18]
   1c00b:	call   0x1da04
   1c010:	mov    DWORD PTR [esi+0x18],eax
   1c013:	mov    eax,DWORD PTR [ebp-0x20]
   1c016:	mov    ecx,DWORD PTR [ebp-0xc]
   1c019:	sub    DWORD PTR [ebp-0x8],ecx
   1c01c:	add    DWORD PTR [ebp-0x4],ecx
   1c01f:	test   eax,eax
   1c021:	jne    0x1cba1
   1c027:	mov    edx,DWORD PTR [ebp+0x8]
   1c02a:	jmp    0x1c037
   1c02c:	mov    eax,DWORD PTR [esi+0x20]
   1c02f:	test   eax,eax
   1c031:	je     0x1c037
   1c033:	and    DWORD PTR [eax+0x24],0x0
   1c037:	mov    DWORD PTR [esi],0x8
   1c03d:	test   DWORD PTR [esi+0x10],0x200
   1c044:	je     0x1c08a
   1c046:	cmp    edi,0x10
   1c049:	jae    0x1c072
   1c04b:	cmp    DWORD PTR [ebp-0x8],0x0
   1c04f:	je     0x1cba1
   1c055:	mov    eax,DWORD PTR [ebp-0x4]
   1c058:	movzx  eax,BYTE PTR [eax]
   1c05b:	dec    DWORD PTR [ebp-0x8]
   1c05e:	mov    ecx,edi
   1c060:	shl    eax,cl
   1c062:	add    edi,0x8
   1c065:	add    ebx,eax
   1c067:	inc    DWORD PTR [ebp-0x4]
   1c06a:	cmp    edi,0x10
   1c06d:	jb     0x1c04b
   1c06f:	mov    edx,DWORD PTR [ebp+0x8]
   1c072:	movzx  eax,WORD PTR [esi+0x18]
   1c076:	cmp    ebx,eax
   1c078:	je     0x1c086
   1c07a:	mov    DWORD PTR [edx+0x18],0x1ee62
   1c081:	jmp    0x1cb4d
   1c086:	xor    ebx,ebx
   1c088:	xor    edi,edi
   1c08a:	mov    eax,DWORD PTR [esi+0x20]
   1c08d:	test   eax,eax
   1c08f:	je     0x1c0a5
   1c091:	mov    edx,DWORD PTR [esi+0x10]
   1c094:	xor    ecx,ecx
   1c096:	inc    ecx
   1c097:	sar    edx,0x9
   1c09a:	and    edx,ecx
   1c09c:	mov    DWORD PTR [eax+0x2c],edx
   1c09f:	mov    eax,DWORD PTR [esi+0x20]
   1c0a2:	mov    DWORD PTR [eax+0x30],ecx
   1c0a5:	xor    eax,eax
   1c0a7:	push   eax
   1c0a8:	push   eax
   1c0a9:	push   eax
   1c0aa:	call   0x1da04
   1c0af:	mov    ecx,DWORD PTR [ebp+0x8]
   1c0b2:	mov    DWORD PTR [esi+0x18],eax
   1c0b5:	mov    DWORD PTR [ecx+0x30],eax
   1c0b8:	jmp    0x1c7b6
   1c0bd:	cmp    edi,0x20
   1c0c0:	jae    0x1c0e9
   1c0c2:	cmp    DWORD PTR [ebp-0x8],0x0
   1c0c6:	je     0x1cba1
   1c0cc:	mov    eax,DWORD PTR [ebp-0x4]
   1c0cf:	movzx  eax,BYTE PTR [eax]
   1c0d2:	dec    DWORD PTR [ebp-0x8]
   1c0d5:	mov    ecx,edi
   1c0d7:	shl    eax,cl
   1c0d9:	add    edi,0x8
   1c0dc:	add    ebx,eax
   1c0de:	inc    DWORD PTR [ebp-0x4]
   1c0e1:	cmp    edi,0x20
   1c0e4:	jb     0x1c0c2
   1c0e6:	mov    edx,DWORD PTR [ebp+0x8]
   1c0e9:	mov    ecx,ebx
   1c0eb:	mov    eax,0xff00
   1c0f0:	and    ecx,eax
   1c0f2:	mov    edi,ebx
   1c0f4:	shl    edi,0x10
   1c0f7:	add    ecx,edi
   1c0f9:	mov    edi,ebx
   1c0fb:	shr    edi,0x8
   1c0fe:	and    edi,eax
   1c100:	shl    ecx,0x8
   1c103:	shr    ebx,0x18
   1c106:	add    ecx,edi
   1c108:	lea    eax,[ecx+ebx*1]
   1c10b:	mov    DWORD PTR [esi+0x18],eax
   1c10e:	mov    DWORD PTR [edx+0x30],eax
   1c111:	xor    ebx,ebx
   1c113:	xor    edi,edi
   1c115:	mov    DWORD PTR [esi],0xa
   1c11b:	cmp    DWORD PTR [esi+0xc],0x0
   1c11f:	je     0x1cb63
   1c125:	xor    eax,eax
   1c127:	push   eax
   1c128:	push   eax
   1c129:	push   eax
   1c12a:	call   0x1d562
   1c12f:	mov    ecx,DWORD PTR [ebp+0x8]
   1c132:	mov    DWORD PTR [esi+0x18],eax
   1c135:	mov    DWORD PTR [ecx+0x30],eax
   1c138:	mov    DWORD PTR [esi],0xb
   1c13e:	cmp    DWORD PTR [ebp+0xc],0x5
   1c142:	je     0x1cba1
   1c148:	mov    edx,DWORD PTR [ebp+0x8]
   1c14b:	cmp    DWORD PTR [esi+0x4],0x0
   1c14f:	je     0x1c165
   1c151:	mov    ecx,edi
   1c153:	and    ecx,0x7
   1c156:	shr    ebx,cl
   1c158:	sub    edi,ecx
   1c15a:	mov    DWORD PTR [esi],0x18
   1c160:	jmp    0x1cb53
   1c165:	cmp    edi,0x3
   1c168:	jae    0x1c191
   1c16a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c16e:	je     0x1cba1
   1c174:	mov    eax,DWORD PTR [ebp-0x4]
   1c177:	movzx  eax,BYTE PTR [eax]
   1c17a:	dec    DWORD PTR [ebp-0x8]
   1c17d:	mov    ecx,edi
   1c17f:	shl    eax,cl
   1c181:	add    edi,0x8
   1c184:	add    ebx,eax
   1c186:	inc    DWORD PTR [ebp-0x4]
   1c189:	cmp    edi,0x3
   1c18c:	jb     0x1c16a
   1c18e:	mov    edx,DWORD PTR [ebp+0x8]
   1c191:	mov    eax,ebx
   1c193:	and    eax,0x1
   1c196:	shr    ebx,1
   1c198:	mov    DWORD PTR [esi+0x4],eax
   1c19b:	mov    eax,ebx
   1c19d:	and    eax,0x3
   1c1a0:	dec    edi
   1c1a1:	sub    eax,0x0
   1c1a4:	je     0x1c1ea
   1c1a6:	dec    eax
   1c1a7:	je     0x1c1c6
   1c1a9:	dec    eax
   1c1aa:	je     0x1c1be
   1c1ac:	dec    eax
   1c1ad:	jne    0x1c1f0
   1c1af:	mov    DWORD PTR [edx+0x18],0x1ee4e
   1c1b6:	mov    DWORD PTR [esi],0x1b
   1c1bc:	jmp    0x1c1f0
   1c1be:	mov    DWORD PTR [esi],0xf
   1c1c4:	jmp    0x1c1f0
   1c1c6:	mov    DWORD PTR [esi+0x4c],0x74760
   1c1cd:	mov    DWORD PTR [esi+0x54],0x9
   1c1d4:	mov    DWORD PTR [esi+0x50],0x74f60
   1c1db:	mov    DWORD PTR [esi+0x58],0x5
   1c1e2:	mov    DWORD PTR [esi],0x12
   1c1e8:	jmp    0x1c1f0
   1c1ea:	mov    DWORD PTR [esi],0xd
   1c1f0:	shr    ebx,0x2
   1c1f3:	dec    edi
   1c1f4:	dec    edi
   1c1f5:	jmp    0x1cb53
   1c1fa:	mov    ecx,edi
   1c1fc:	and    ecx,0x7
   1c1ff:	sub    edi,ecx
   1c201:	shr    ebx,cl
   1c203:	cmp    edi,0x20
   1c206:	jae    0x1c22f
   1c208:	cmp    DWORD PTR [ebp-0x8],0x0
   1c20c:	je     0x1cba1
   1c212:	mov    eax,DWORD PTR [ebp-0x4]
   1c215:	movzx  eax,BYTE PTR [eax]
   1c218:	dec    DWORD PTR [ebp-0x8]
   1c21b:	mov    ecx,edi
   1c21d:	shl    eax,cl
   1c21f:	add    edi,0x8
   1c222:	add    ebx,eax
   1c224:	inc    DWORD PTR [ebp-0x4]
   1c227:	cmp    edi,0x20
   1c22a:	jb     0x1c208
   1c22c:	mov    edx,DWORD PTR [ebp+0x8]
   1c22f:	mov    ecx,ebx
   1c231:	mov    eax,ebx
   1c233:	not    ecx
   1c235:	and    eax,0xffff
   1c23a:	shr    ecx,0x10
   1c23d:	cmp    eax,ecx
   1c23f:	je     0x1c24d
   1c241:	mov    DWORD PTR [edx+0x18],0x1ee30
   1c248:	jmp    0x1cb4d
   1c24d:	xor    ebx,ebx
   1c24f:	mov    DWORD PTR [esi+0x40],eax
   1c252:	xor    edi,edi
   1c254:	mov    DWORD PTR [esi],0xe
   1c25a:	mov    eax,DWORD PTR [esi+0x40]
   1c25d:	mov    DWORD PTR [ebp-0xc],eax
   1c260:	test   eax,eax
   1c262:	je     0x1c7b6
   1c268:	mov    eax,DWORD PTR [ebp-0x8]
   1c26b:	cmp    DWORD PTR [ebp-0xc],eax
   1c26e:	jbe    0x1c273
   1c270:	mov    DWORD PTR [ebp-0xc],eax
   1c273:	mov    eax,DWORD PTR [ebp-0x10]
   1c276:	cmp    DWORD PTR [ebp-0xc],eax
   1c279:	jbe    0x1c27e
   1c27b:	mov    DWORD PTR [ebp-0xc],eax
   1c27e:	cmp    DWORD PTR [ebp-0xc],0x0
   1c282:	je     0x1cba1
   1c288:	push   DWORD PTR [ebp-0xc]
   1c28b:	push   DWORD PTR [ebp-0x4]
   1c28e:	push   DWORD PTR [ebp-0x18]
   1c291:	call   0x1dad8
   1c296:	mov    eax,DWORD PTR [ebp-0xc]
   1c299:	sub    DWORD PTR [ebp-0x8],eax
   1c29c:	add    DWORD PTR [ebp-0x4],eax
   1c29f:	sub    DWORD PTR [ebp-0x10],eax
   1c2a2:	add    DWORD PTR [ebp-0x18],eax
   1c2a5:	add    esp,0xc
   1c2a8:	sub    DWORD PTR [esi+0x40],eax
   1c2ab:	jmp    0x1cb53
   1c2b0:	cmp    edi,0xe
   1c2b3:	jae    0x1c2dc
   1c2b5:	cmp    DWORD PTR [ebp-0x8],0x0
   1c2b9:	je     0x1cba1
   1c2bf:	mov    eax,DWORD PTR [ebp-0x4]
   1c2c2:	movzx  eax,BYTE PTR [eax]
   1c2c5:	dec    DWORD PTR [ebp-0x8]
   1c2c8:	mov    ecx,edi
   1c2ca:	shl    eax,cl
   1c2cc:	add    edi,0x8
   1c2cf:	add    ebx,eax
   1c2d1:	inc    DWORD PTR [ebp-0x4]
   1c2d4:	cmp    edi,0xe
   1c2d7:	jb     0x1c2b5
   1c2d9:	mov    edx,DWORD PTR [ebp+0x8]
   1c2dc:	mov    eax,ebx
   1c2de:	and    eax,0x1f
   1c2e1:	add    eax,0x101
   1c2e6:	mov    DWORD PTR [esi+0x60],eax
   1c2e9:	shr    ebx,0x5
   1c2ec:	mov    eax,ebx
   1c2ee:	and    eax,0x1f
   1c2f1:	inc    eax
   1c2f2:	shr    ebx,0x5
   1c2f5:	mov    DWORD PTR [esi+0x64],eax
   1c2f8:	mov    eax,ebx
   1c2fa:	and    eax,0xf
   1c2fd:	add    eax,0x4
   1c300:	shr    ebx,0x4
   1c303:	sub    edi,0xe
   1c306:	cmp    DWORD PTR [esi+0x60],0x11e
   1c30d:	mov    DWORD PTR [esi+0x5c],eax
   1c310:	ja     0x1c324
   1c312:	cmp    DWORD PTR [esi+0x64],0x1e
   1c316:	ja     0x1c324
   1c318:	and    DWORD PTR [esi+0x68],0x0
   1c31c:	mov    DWORD PTR [esi],0x10
   1c322:	jmp    0x1c372
   1c324:	mov    DWORD PTR [edx+0x18],0x1ee0c
   1c32b:	jmp    0x1cb4d
   1c330:	cmp    DWORD PTR [ebp-0x8],0x0
   1c334:	je     0x1cba1
   1c33a:	mov    eax,DWORD PTR [ebp-0x4]
   1c33d:	movzx  eax,BYTE PTR [eax]
   1c340:	dec    DWORD PTR [ebp-0x8]
   1c343:	mov    ecx,edi
   1c345:	shl    eax,cl
   1c347:	add    ebx,eax
   1c349:	inc    DWORD PTR [ebp-0x4]
   1c34c:	add    edi,0x8
   1c34f:	cmp    edi,0x3
   1c352:	jb     0x1c330
   1c354:	mov    ecx,DWORD PTR [esi+0x68]
   1c357:	movzx  ecx,WORD PTR [ecx*2+0x74fe0]
   1c35f:	mov    eax,ebx
   1c361:	and    eax,0x7
   1c364:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c369:	inc    DWORD PTR [esi+0x68]
   1c36c:	shr    ebx,0x3
   1c36f:	sub    edi,0x3
   1c372:	mov    eax,DWORD PTR [esi+0x68]
   1c375:	cmp    eax,DWORD PTR [esi+0x5c]
   1c378:	jb     0x1c34f
   1c37a:	jmp    0x1c391
   1c37c:	mov    eax,DWORD PTR [esi+0x68]
   1c37f:	movzx  eax,WORD PTR [eax*2+0x74fe0]
   1c387:	xor    ecx,ecx
   1c389:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c38e:	inc    DWORD PTR [esi+0x68]
   1c391:	cmp    DWORD PTR [esi+0x68],0x13
   1c395:	jb     0x1c37c
   1c397:	lea    eax,[esi+0x530]
   1c39d:	lea    ecx,[esi+0x6c]
   1c3a0:	mov    DWORD PTR [ecx],eax
   1c3a2:	mov    DWORD PTR [esi+0x4c],eax
   1c3a5:	lea    edx,[esi+0x2f0]
   1c3ab:	push   edx
   1c3ac:	lea    eax,[esi+0x54]
   1c3af:	push   eax
   1c3b0:	push   ecx
   1c3b1:	mov    DWORD PTR [eax],0x7
   1c3b7:	push   0x13
   1c3b9:	lea    eax,[esi+0x70]
   1c3bc:	push   eax
   1c3bd:	push   0x0
   1c3bf:	call   0x1d15c
   1c3c4:	mov    DWORD PTR [ebp-0x24],eax
   1c3c7:	test   eax,eax
   1c3c9:	je     0x1c3da
   1c3cb:	mov    eax,DWORD PTR [ebp+0x8]
   1c3ce:	mov    DWORD PTR [eax+0x18],0x1edf2
   1c3d5:	jmp    0x1cb4d
   1c3da:	and    DWORD PTR [esi+0x68],0x0
   1c3de:	mov    DWORD PTR [esi],0x11
   1c3e4:	jmp    0x1c5e0
   1c3e9:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3ed:	je     0x1cba1
   1c3f3:	mov    eax,DWORD PTR [ebp-0x4]
   1c3f6:	movzx  eax,BYTE PTR [eax]
   1c3f9:	dec    DWORD PTR [ebp-0x8]
   1c3fc:	mov    ecx,edi
   1c3fe:	shl    eax,cl
   1c400:	add    ebx,eax
   1c402:	inc    DWORD PTR [ebp-0x4]
   1c405:	add    edi,0x8
   1c408:	mov    ecx,DWORD PTR [esi+0x54]
   1c40b:	xor    eax,eax
   1c40d:	inc    eax
   1c40e:	shl    eax,cl
   1c410:	mov    ecx,DWORD PTR [esi+0x4c]
   1c413:	dec    eax
   1c414:	and    eax,ebx
   1c416:	mov    eax,DWORD PTR [ecx+eax*4]
   1c419:	mov    ecx,eax
   1c41b:	shr    ecx,0x8
   1c41e:	movzx  ecx,cl
   1c421:	mov    DWORD PTR [ebp-0x20],eax
   1c424:	cmp    ecx,edi
   1c426:	ja     0x1c3e9
   1c428:	mov    ecx,eax
   1c42a:	shr    ecx,0x10
   1c42d:	cmp    cx,0x10
   1c431:	jae    0x1c47e
   1c433:	mov    ecx,eax
   1c435:	shr    ecx,0x8
   1c438:	movzx  ecx,cl
   1c43b:	jmp    0x1c45f
   1c43d:	cmp    DWORD PTR [ebp-0x8],0x0
   1c441:	je     0x1cba1
   1c447:	mov    ecx,DWORD PTR [ebp-0x4]
   1c44a:	movzx  edx,BYTE PTR [ecx]
   1c44d:	dec    DWORD PTR [ebp-0x8]
   1c450:	mov    ecx,edi
   1c452:	shl    edx,cl
   1c454:	movzx  ecx,ah
   1c457:	add    ebx,edx
   1c459:	inc    DWORD PTR [ebp-0x4]
   1c45c:	add    edi,0x8
   1c45f:	cmp    edi,ecx
   1c461:	jb     0x1c43d
   1c463:	movzx  ecx,ah
   1c466:	mov    eax,DWORD PTR [esi+0x68]
   1c469:	shr    ebx,cl
   1c46b:	sub    edi,ecx
   1c46d:	mov    cx,WORD PTR [ebp-0x1e]
   1c471:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c476:	inc    DWORD PTR [esi+0x68]
   1c479:	jmp    0x1c5e0
   1c47e:	cmp    WORD PTR [ebp-0x1e],0x10
   1c483:	jne    0x1c4db
   1c485:	movzx  eax,ah
   1c488:	jmp    0x1c4a9
   1c48a:	cmp    DWORD PTR [ebp-0x8],0x0
   1c48e:	je     0x1cba1
   1c494:	mov    ecx,DWORD PTR [ebp-0x4]
   1c497:	movzx  edx,BYTE PTR [ecx]
   1c49a:	dec    DWORD PTR [ebp-0x8]
   1c49d:	mov    ecx,edi
   1c49f:	shl    edx,cl
   1c4a1:	add    ebx,edx
   1c4a3:	inc    DWORD PTR [ebp-0x4]
   1c4a6:	add    edi,0x8
   1c4a9:	lea    ecx,[eax+0x2]
   1c4ac:	cmp    edi,ecx
   1c4ae:	jb     0x1c48a
   1c4b0:	mov    ecx,eax
   1c4b2:	sub    edi,eax
   1c4b4:	mov    eax,DWORD PTR [esi+0x68]
   1c4b7:	shr    ebx,cl
   1c4b9:	test   eax,eax
   1c4bb:	je     0x1c5f1
   1c4c1:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c4c6:	mov    DWORD PTR [ebp-0x20],eax
   1c4c9:	mov    eax,ebx
   1c4cb:	and    eax,0x3
   1c4ce:	add    eax,0x3
   1c4d1:	shr    ebx,0x2
   1c4d4:	dec    edi
   1c4d5:	dec    edi
   1c4d6:	jmp    0x1c560
   1c4db:	cmp    WORD PTR [ebp-0x1e],0x11
   1c4e0:	movzx  edx,ah
   1c4e3:	jne    0x1c53f
   1c4e5:	jmp    0x1c506
   1c4e7:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4eb:	je     0x1cba1
   1c4f1:	mov    eax,DWORD PTR [ebp-0x4]
   1c4f4:	movzx  eax,BYTE PTR [eax]
   1c4f7:	dec    DWORD PTR [ebp-0x8]
   1c4fa:	mov    ecx,edi
   1c4fc:	shl    eax,cl
   1c4fe:	add    ebx,eax
   1c500:	inc    DWORD PTR [ebp-0x4]
   1c503:	add    edi,0x8
   1c506:	lea    eax,[edx+0x3]
   1c509:	cmp    edi,eax
   1c50b:	jb     0x1c4e7
   1c50d:	mov    ecx,edx
   1c50f:	shr    ebx,cl
   1c511:	push   0xfffffffd
   1c513:	mov    eax,ebx
   1c515:	and    eax,0x7
   1c518:	add    eax,0x3
   1c51b:	shr    ebx,0x3
   1c51e:	jmp    0x1c557
   1c520:	cmp    DWORD PTR [ebp-0x8],0x0
   1c524:	je     0x1cba1
   1c52a:	mov    eax,DWORD PTR [ebp-0x4]
   1c52d:	movzx  eax,BYTE PTR [eax]
   1c530:	dec    DWORD PTR [ebp-0x8]
   1c533:	mov    ecx,edi
   1c535:	shl    eax,cl
   1c537:	add    ebx,eax
   1c539:	inc    DWORD PTR [ebp-0x4]
   1c53c:	add    edi,0x8
   1c53f:	lea    eax,[edx+0x7]
   1c542:	cmp    edi,eax
   1c544:	jb     0x1c520
   1c546:	mov    ecx,edx
   1c548:	shr    ebx,cl
   1c54a:	push   0xfffffff9
   1c54c:	mov    eax,ebx
   1c54e:	and    eax,0x7f
   1c551:	add    eax,0xb
   1c554:	shr    ebx,0x7
   1c557:	and    DWORD PTR [ebp-0x20],0x0
   1c55b:	pop    ecx
   1c55c:	sub    ecx,edx
   1c55e:	add    edi,ecx
   1c560:	mov    ecx,DWORD PTR [esi+0x64]
   1c563:	mov    edx,DWORD PTR [esi+0x68]
   1c566:	add    ecx,DWORD PTR [esi+0x60]
   1c569:	add    edx,eax
   1c56b:	cmp    edx,ecx
   1c56d:	jbe    0x1c5dc
   1c56f:	mov    eax,DWORD PTR [ebp+0x8]
   1c572:	mov    DWORD PTR [eax+0x18],0x1edd8
   1c579:	mov    DWORD PTR [esi],0x1b
   1c57f:	cmp    DWORD PTR [esi],0x1b
   1c582:	je     0x1cb53
   1c588:	lea    eax,[esi+0x530]
   1c58e:	lea    ecx,[esi+0x6c]
   1c591:	mov    DWORD PTR [ecx],eax
   1c593:	mov    DWORD PTR [esi+0x4c],eax
   1c596:	lea    edx,[esi+0x2f0]
   1c59c:	push   edx
   1c59d:	lea    eax,[esi+0x54]
   1c5a0:	push   eax
   1c5a1:	push   ecx
   1c5a2:	push   DWORD PTR [esi+0x60]
   1c5a5:	mov    DWORD PTR [eax],0x9
   1c5ab:	lea    eax,[esi+0x70]
   1c5ae:	push   eax
   1c5af:	push   0x1
   1c5b1:	call   0x1d15c
   1c5b6:	mov    DWORD PTR [ebp-0x24],eax
   1c5b9:	test   eax,eax
   1c5bb:	je     0x1c600
   1c5bd:	mov    eax,DWORD PTR [ebp+0x8]
   1c5c0:	mov    DWORD PTR [eax+0x18],0x1edbc
   1c5c7:	jmp    0x1cb4d
   1c5cc:	mov    ecx,DWORD PTR [esi+0x68]
   1c5cf:	mov    dx,WORD PTR [ebp-0x20]
   1c5d3:	dec    eax
   1c5d4:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c5d9:	inc    DWORD PTR [esi+0x68]
   1c5dc:	test   eax,eax
   1c5de:	jne    0x1c5cc
   1c5e0:	mov    eax,DWORD PTR [esi+0x64]
   1c5e3:	add    eax,DWORD PTR [esi+0x60]
   1c5e6:	cmp    DWORD PTR [esi+0x68],eax
   1c5e9:	jb     0x1c408
   1c5ef:	jmp    0x1c57f
   1c5f1:	mov    eax,DWORD PTR [ebp+0x8]
   1c5f4:	mov    DWORD PTR [eax+0x18],0x1edd8
   1c5fb:	jmp    0x1cb4d
   1c600:	lea    ecx,[esi+0x6c]
   1c603:	mov    eax,DWORD PTR [ecx]
   1c605:	mov    DWORD PTR [esi+0x50],eax
   1c608:	lea    edx,[esi+0x2f0]
   1c60e:	push   edx
   1c60f:	lea    eax,[esi+0x58]
   1c612:	push   eax
   1c613:	push   ecx
   1c614:	push   DWORD PTR [esi+0x64]
   1c617:	mov    DWORD PTR [eax],0x6
   1c61d:	mov    eax,DWORD PTR [esi+0x60]
   1c620:	lea    eax,[esi+eax*2+0x70]
   1c624:	push   eax
   1c625:	push   0x2
   1c627:	call   0x1d15c
   1c62c:	mov    DWORD PTR [ebp-0x24],eax
   1c62f:	test   eax,eax
   1c631:	je     0x1c642
   1c633:	mov    eax,DWORD PTR [ebp+0x8]
   1c636:	mov    DWORD PTR [eax+0x18],0x1eda6
   1c63d:	jmp    0x1cb4d
   1c642:	mov    DWORD PTR [esi],0x12
   1c648:	cmp    DWORD PTR [ebp-0x8],0x6
   1c64c:	jb     0x1c6a5
   1c64e:	cmp    DWORD PTR [ebp-0x10],0x102
   1c655:	jb     0x1c6a5
   1c657:	mov    eax,DWORD PTR [ebp+0x8]
   1c65a:	mov    ecx,DWORD PTR [ebp-0x18]
   1c65d:	push   DWORD PTR [ebp-0x1c]
   1c660:	mov    DWORD PTR [eax+0xc],ecx
   1c663:	mov    ecx,DWORD PTR [ebp-0x10]
   1c666:	mov    DWORD PTR [eax+0x10],ecx
   1c669:	mov    ecx,DWORD PTR [ebp-0x4]
   1c66c:	mov    DWORD PTR [eax],ecx
   1c66e:	mov    ecx,DWORD PTR [ebp-0x8]
   1c671:	mov    DWORD PTR [eax+0x4],ecx
   1c674:	push   eax
   1c675:	mov    DWORD PTR [esi+0x38],ebx
   1c678:	mov    DWORD PTR [esi+0x3c],edi
   1c67b:	call   0x1cd76
   1c680:	mov    eax,DWORD PTR [ebp+0x8]
   1c683:	mov    ecx,DWORD PTR [eax+0xc]
   1c686:	mov    ebx,DWORD PTR [esi+0x38]
   1c689:	mov    edi,DWORD PTR [esi+0x3c]
   1c68c:	mov    DWORD PTR [ebp-0x18],ecx
   1c68f:	mov    ecx,DWORD PTR [eax+0x10]
   1c692:	mov    DWORD PTR [ebp-0x10],ecx
   1c695:	mov    ecx,DWORD PTR [eax]
   1c697:	mov    eax,DWORD PTR [eax+0x4]
   1c69a:	mov    DWORD PTR [ebp-0x4],ecx
   1c69d:	mov    DWORD PTR [ebp-0x8],eax
   1c6a0:	jmp    0x1cb53
   1c6a5:	mov    ecx,DWORD PTR [esi+0x54]
   1c6a8:	mov    eax,DWORD PTR [esi+0x4c]
   1c6ab:	xor    edx,edx
   1c6ad:	inc    edx
   1c6ae:	shl    edx,cl
   1c6b0:	dec    edx
   1c6b1:	and    edx,ebx
   1c6b3:	mov    eax,DWORD PTR [eax+edx*4]
   1c6b6:	jmp    0x1c6e8
   1c6b8:	cmp    DWORD PTR [ebp-0x8],0x0
   1c6bc:	je     0x1cba1
   1c6c2:	mov    eax,DWORD PTR [ebp-0x4]
   1c6c5:	movzx  eax,BYTE PTR [eax]
   1c6c8:	dec    DWORD PTR [ebp-0x8]
   1c6cb:	mov    ecx,edi
   1c6cd:	shl    eax,cl
   1c6cf:	mov    ecx,DWORD PTR [esi+0x54]
   1c6d2:	add    edi,0x8
   1c6d5:	add    ebx,eax
   1c6d7:	inc    DWORD PTR [ebp-0x4]
   1c6da:	xor    eax,eax
   1c6dc:	inc    eax
   1c6dd:	shl    eax,cl
   1c6df:	mov    ecx,DWORD PTR [esi+0x4c]
   1c6e2:	dec    eax
   1c6e3:	and    eax,ebx
   1c6e5:	mov    eax,DWORD PTR [ecx+eax*4]
   1c6e8:	mov    ecx,eax
   1c6ea:	shr    ecx,0x8
   1c6ed:	movzx  ecx,cl
   1c6f0:	cmp    ecx,edi
   1c6f2:	ja     0x1c6b8
   1c6f4:	test   al,al
   1c6f6:	je     0x1c78f
   1c6fc:	test   al,0xf0
   1c6fe:	jne    0x1c78f
   1c704:	mov    DWORD PTR [ebp-0xc],eax
   1c707:	shr    DWORD PTR [ebp-0xc],0x8
   1c70b:	movzx  edx,BYTE PTR [ebp-0xc]
   1c70f:	mov    DWORD PTR [ebp-0x28],edx
   1c712:	movzx  ecx,al
   1c715:	add    ecx,edx
   1c717:	xor    edx,edx
   1c719:	inc    edx
   1c71a:	shl    edx,cl
   1c71c:	mov    ecx,DWORD PTR [ebp-0x28]
   1c71f:	mov    DWORD PTR [ebp-0x20],eax
   1c722:	shr    eax,0x10
   1c725:	dec    edx
   1c726:	and    edx,ebx
   1c728:	shr    edx,cl
   1c72a:	add    edx,eax
   1c72c:	mov    eax,DWORD PTR [esi+0x4c]
   1c72f:	mov    eax,DWORD PTR [eax+edx*4]
   1c732:	movzx  edx,BYTE PTR [ebp-0xc]
   1c736:	jmp    0x1c779
   1c738:	cmp    DWORD PTR [ebp-0x8],0x0
   1c73c:	je     0x1cba1
   1c742:	mov    eax,DWORD PTR [ebp-0x4]
   1c745:	movzx  eax,BYTE PTR [eax]
   1c748:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c74c:	dec    DWORD PTR [ebp-0x8]
   1c74f:	mov    ecx,edi
   1c751:	shl    eax,cl
   1c753:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c757:	add    ebx,eax
   1c759:	inc    DWORD PTR [ebp-0x4]
   1c75c:	xor    eax,eax
   1c75e:	add    ecx,edx
   1c760:	inc    eax
   1c761:	shl    eax,cl
   1c763:	add    edi,0x8
   1c766:	mov    ecx,edx
   1c768:	dec    eax
   1c769:	and    eax,ebx
   1c76b:	shr    eax,cl
   1c76d:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c771:	add    eax,ecx
   1c773:	mov    ecx,DWORD PTR [esi+0x4c]
   1c776:	mov    eax,DWORD PTR [ecx+eax*4]
   1c779:	mov    ecx,eax
   1c77b:	shr    ecx,0x8
   1c77e:	movzx  ecx,cl
   1c781:	add    ecx,edx
   1c783:	cmp    ecx,edi
   1c785:	ja     0x1c738
   1c787:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c78b:	shr    ebx,cl
   1c78d:	sub    edi,ecx
   1c78f:	mov    ecx,eax
   1c791:	shr    ecx,0x8
   1c794:	movzx  ecx,cl
   1c797:	shr    ebx,cl
   1c799:	sub    edi,ecx
   1c79b:	mov    ecx,eax
   1c79d:	shr    ecx,0x10
   1c7a0:	mov    DWORD PTR [esi+0x40],ecx
   1c7a3:	test   al,al
   1c7a5:	jne    0x1c7b2
   1c7a7:	mov    DWORD PTR [esi],0x17
   1c7ad:	jmp    0x1cb53
   1c7b2:	test   al,0x20
   1c7b4:	je     0x1c7c1
   1c7b6:	mov    DWORD PTR [esi],0xb
   1c7bc:	jmp    0x1cb53
   1c7c1:	test   al,0x40
   1c7c3:	je     0x1c7d4
   1c7c5:	mov    eax,DWORD PTR [ebp+0x8]
   1c7c8:	mov    DWORD PTR [eax+0x18],0x1ed8a
   1c7cf:	jmp    0x1cb4d
   1c7d4:	movzx  eax,al
   1c7d7:	and    eax,0xf
   1c7da:	mov    DWORD PTR [esi+0x48],eax
   1c7dd:	mov    DWORD PTR [esi],0x13
   1c7e3:	mov    eax,DWORD PTR [esi+0x48]
   1c7e6:	test   eax,eax
   1c7e8:	je     0x1c823
   1c7ea:	cmp    edi,eax
   1c7ec:	jae    0x1c812
   1c7ee:	cmp    DWORD PTR [ebp-0x8],0x0
   1c7f2:	je     0x1cba1
   1c7f8:	mov    ecx,DWORD PTR [ebp-0x4]
   1c7fb:	movzx  edx,BYTE PTR [ecx]
   1c7fe:	dec    DWORD PTR [ebp-0x8]
   1c801:	mov    ecx,edi
   1c803:	shl    edx,cl
   1c805:	add    edi,0x8
   1c808:	add    ebx,edx
   1c80a:	inc    DWORD PTR [ebp-0x4]
   1c80d:	cmp    edi,DWORD PTR [esi+0x48]
   1c810:	jb     0x1c7ee
   1c812:	xor    edx,edx
   1c814:	inc    edx
   1c815:	mov    ecx,eax
   1c817:	shl    edx,cl
   1c819:	dec    edx
   1c81a:	and    edx,ebx
   1c81c:	add    DWORD PTR [esi+0x40],edx
   1c81f:	shr    ebx,cl
   1c821:	sub    edi,eax
   1c823:	mov    DWORD PTR [esi],0x14
   1c829:	mov    ecx,DWORD PTR [esi+0x58]
   1c82c:	mov    eax,DWORD PTR [esi+0x50]
   1c82f:	xor    edx,edx
   1c831:	inc    edx
   1c832:	shl    edx,cl
   1c834:	dec    edx
   1c835:	and    edx,ebx
   1c837:	mov    eax,DWORD PTR [eax+edx*4]
   1c83a:	jmp    0x1c86c
   1c83c:	cmp    DWORD PTR [ebp-0x8],0x0
   1c840:	je     0x1cba1
   1c846:	mov    eax,DWORD PTR [ebp-0x4]
   1c849:	movzx  eax,BYTE PTR [eax]
   1c84c:	dec    DWORD PTR [ebp-0x8]
   1c84f:	mov    ecx,edi
   1c851:	shl    eax,cl
   1c853:	mov    ecx,DWORD PTR [esi+0x58]
   1c856:	add    edi,0x8
   1c859:	add    ebx,eax
   1c85b:	inc    DWORD PTR [ebp-0x4]
   1c85e:	xor    eax,eax
   1c860:	inc    eax
   1c861:	shl    eax,cl
   1c863:	mov    ecx,DWORD PTR [esi+0x50]
   1c866:	dec    eax
   1c867:	and    eax,ebx
   1c869:	mov    eax,DWORD PTR [ecx+eax*4]
   1c86c:	mov    ecx,eax
   1c86e:	shr    ecx,0x8
   1c871:	movzx  ecx,cl
   1c874:	cmp    ecx,edi
   1c876:	ja     0x1c83c
   1c878:	test   al,0xf0
   1c87a:	jne    0x1c90b
   1c880:	mov    DWORD PTR [ebp-0xc],eax
   1c883:	shr    DWORD PTR [ebp-0xc],0x8
   1c887:	movzx  edx,BYTE PTR [ebp-0xc]
   1c88b:	mov    DWORD PTR [ebp-0x28],edx
   1c88e:	movzx  ecx,al
   1c891:	add    ecx,edx
   1c893:	xor    edx,edx
   1c895:	inc    edx
   1c896:	shl    edx,cl
   1c898:	mov    ecx,DWORD PTR [ebp-0x28]
   1c89b:	mov    DWORD PTR [ebp-0x20],eax
   1c89e:	shr    eax,0x10
   1c8a1:	dec    edx
   1c8a2:	and    edx,ebx
   1c8a4:	shr    edx,cl
   1c8a6:	add    edx,eax
   1c8a8:	mov    eax,DWORD PTR [esi+0x50]
   1c8ab:	mov    eax,DWORD PTR [eax+edx*4]
   1c8ae:	movzx  edx,BYTE PTR [ebp-0xc]
   1c8b2:	jmp    0x1c8f5
   1c8b4:	cmp    DWORD PTR [ebp-0x8],0x0
   1c8b8:	je     0x1cba1
   1c8be:	mov    eax,DWORD PTR [ebp-0x4]
   1c8c1:	movzx  eax,BYTE PTR [eax]
   1c8c4:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c8c8:	dec    DWORD PTR [ebp-0x8]
   1c8cb:	mov    ecx,edi
   1c8cd:	shl    eax,cl
   1c8cf:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c8d3:	add    ebx,eax
   1c8d5:	inc    DWORD PTR [ebp-0x4]
   1c8d8:	xor    eax,eax
   1c8da:	add    ecx,edx
   1c8dc:	inc    eax
   1c8dd:	shl    eax,cl
   1c8df:	add    edi,0x8
   1c8e2:	mov    ecx,edx
   1c8e4:	dec    eax
   1c8e5:	and    eax,ebx
   1c8e7:	shr    eax,cl
   1c8e9:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c8ed:	add    eax,ecx
   1c8ef:	mov    ecx,DWORD PTR [esi+0x50]
   1c8f2:	mov    eax,DWORD PTR [ecx+eax*4]
   1c8f5:	mov    ecx,eax
   1c8f7:	shr    ecx,0x8
   1c8fa:	movzx  ecx,cl
   1c8fd:	add    ecx,edx
   1c8ff:	cmp    ecx,edi
   1c901:	ja     0x1c8b4
   1c903:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c907:	shr    ebx,cl
   1c909:	sub    edi,ecx
   1c90b:	mov    ecx,eax
   1c90d:	shr    ecx,0x8
   1c910:	movzx  ecx,cl
   1c913:	shr    ebx,cl
   1c915:	sub    edi,ecx
   1c917:	test   al,0x40
   1c919:	je     0x1c92a
   1c91b:	mov    eax,DWORD PTR [ebp+0x8]
   1c91e:	mov    DWORD PTR [eax+0x18],0x1ed74
   1c925:	jmp    0x1cb4d
   1c92a:	mov    edx,DWORD PTR [ebp+0x8]
   1c92d:	mov    ecx,eax
   1c92f:	movzx  eax,al
   1c932:	shr    ecx,0x10
   1c935:	and    eax,0xf
   1c938:	mov    DWORD PTR [esi+0x44],ecx
   1c93b:	mov    DWORD PTR [esi+0x48],eax
   1c93e:	mov    DWORD PTR [esi],0x15
   1c944:	mov    eax,DWORD PTR [esi+0x48]
   1c947:	test   eax,eax
   1c949:	je     0x1c988
   1c94b:	cmp    edi,eax
   1c94d:	jae    0x1c976
   1c94f:	cmp    DWORD PTR [ebp-0x8],0x0
   1c953:	je     0x1cba1
   1c959:	mov    eax,DWORD PTR [ebp-0x4]
   1c95c:	movzx  eax,BYTE PTR [eax]
   1c95f:	dec    DWORD PTR [ebp-0x8]
   1c962:	mov    ecx,edi
   1c964:	shl    eax,cl
   1c966:	add    edi,0x8
   1c969:	add    ebx,eax
   1c96b:	inc    DWORD PTR [ebp-0x4]
   1c96e:	cmp    edi,DWORD PTR [esi+0x48]
   1c971:	jb     0x1c94f
   1c973:	mov    edx,DWORD PTR [ebp+0x8]
   1c976:	mov    ecx,DWORD PTR [esi+0x48]
   1c979:	xor    eax,eax
   1c97b:	inc    eax
   1c97c:	shl    eax,cl
   1c97e:	dec    eax
   1c97f:	and    eax,ebx
   1c981:	add    DWORD PTR [esi+0x44],eax
   1c984:	shr    ebx,cl
   1c986:	sub    edi,ecx
   1c988:	mov    eax,DWORD PTR [esi+0x2c]
   1c98b:	sub    eax,DWORD PTR [ebp-0x10]
   1c98e:	add    eax,DWORD PTR [ebp-0x1c]
   1c991:	cmp    DWORD PTR [esi+0x44],eax
   1c994:	jbe    0x1c9a2
   1c996:	mov    DWORD PTR [edx+0x18],0x1ed56
   1c99d:	jmp    0x1cb4d
   1c9a2:	mov    DWORD PTR [esi],0x16
   1c9a8:	cmp    DWORD PTR [ebp-0x10],0x0
   1c9ac:	je     0x1cba1
   1c9b2:	mov    eax,DWORD PTR [ebp-0x1c]
   1c9b5:	sub    eax,DWORD PTR [ebp-0x10]
   1c9b8:	mov    ecx,DWORD PTR [esi+0x44]
   1c9bb:	cmp    ecx,eax
   1c9bd:	jbe    0x1c9ec
   1c9bf:	sub    ecx,eax
   1c9c1:	mov    eax,DWORD PTR [esi+0x34]
   1c9c4:	mov    DWORD PTR [ebp-0xc],ecx
   1c9c7:	mov    ecx,DWORD PTR [esi+0x30]
   1c9ca:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9cd:	jbe    0x1c9da
   1c9cf:	add    eax,DWORD PTR [esi+0x28]
   1c9d2:	sub    DWORD PTR [ebp-0xc],ecx
   1c9d5:	sub    eax,DWORD PTR [ebp-0xc]
   1c9d8:	jmp    0x1c9df
   1c9da:	sub    eax,DWORD PTR [ebp-0xc]
   1c9dd:	add    eax,ecx
   1c9df:	mov    ecx,DWORD PTR [esi+0x40]
   1c9e2:	mov    DWORD PTR [ebp-0x28],ecx
   1c9e5:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9e8:	jbe    0x1c9fa
   1c9ea:	jmp    0x1c9f7
   1c9ec:	mov    eax,DWORD PTR [ebp-0x18]
   1c9ef:	sub    eax,ecx
   1c9f1:	mov    ecx,DWORD PTR [esi+0x40]
   1c9f4:	mov    DWORD PTR [ebp-0x28],ecx
   1c9f7:	mov    DWORD PTR [ebp-0xc],ecx
   1c9fa:	mov    ecx,DWORD PTR [ebp-0x10]
   1c9fd:	cmp    DWORD PTR [ebp-0xc],ecx
   1ca00:	jbe    0x1ca05
   1ca02:	mov    DWORD PTR [ebp-0xc],ecx
   1ca05:	sub    ecx,DWORD PTR [ebp-0xc]
   1ca08:	mov    DWORD PTR [ebp-0x10],ecx
   1ca0b:	mov    ecx,DWORD PTR [ebp-0x28]
   1ca0e:	sub    ecx,DWORD PTR [ebp-0xc]
   1ca11:	mov    DWORD PTR [esi+0x40],ecx
   1ca14:	mov    edx,DWORD PTR [ebp-0x18]
   1ca17:	mov    cl,BYTE PTR [eax]
   1ca19:	inc    DWORD PTR [ebp-0x18]
   1ca1c:	inc    eax
   1ca1d:	dec    DWORD PTR [ebp-0xc]
   1ca20:	mov    BYTE PTR [edx],cl
   1ca22:	jne    0x1ca14
   1ca24:	cmp    DWORD PTR [esi+0x40],0x0
   1ca28:	jne    0x1cb53
   1ca2e:	jmp    0x1ca48
   1ca30:	cmp    DWORD PTR [ebp-0x10],0x0
   1ca34:	je     0x1cba1
   1ca3a:	mov    ecx,DWORD PTR [ebp-0x18]
   1ca3d:	mov    al,BYTE PTR [esi+0x40]
   1ca40:	inc    DWORD PTR [ebp-0x18]
   1ca43:	dec    DWORD PTR [ebp-0x10]
   1ca46:	mov    BYTE PTR [ecx],al
   1ca48:	mov    DWORD PTR [esi],0x12
   1ca4e:	jmp    0x1cb53
   1ca53:	cmp    DWORD PTR [esi+0x8],0x0
   1ca57:	je     0x1cb07
   1ca5d:	cmp    edi,0x20
   1ca60:	jae    0x1ca89
   1ca62:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca66:	je     0x1cba1
   1ca6c:	mov    eax,DWORD PTR [ebp-0x4]
   1ca6f:	movzx  eax,BYTE PTR [eax]
   1ca72:	dec    DWORD PTR [ebp-0x8]
   1ca75:	mov    ecx,edi
   1ca77:	shl    eax,cl
   1ca79:	add    edi,0x8
   1ca7c:	add    ebx,eax
   1ca7e:	inc    DWORD PTR [ebp-0x4]
   1ca81:	cmp    edi,0x20
   1ca84:	jb     0x1ca62
   1ca86:	mov    edx,DWORD PTR [ebp+0x8]
   1ca89:	mov    eax,DWORD PTR [ebp-0x1c]
   1ca8c:	sub    eax,DWORD PTR [ebp-0x10]
   1ca8f:	add    DWORD PTR [edx+0x14],eax
   1ca92:	add    DWORD PTR [esi+0x1c],eax
   1ca95:	mov    DWORD PTR [ebp-0x1c],eax
   1ca98:	test   eax,eax
   1ca9a:	je     0x1cac4
   1ca9c:	push   eax
   1ca9d:	mov    eax,DWORD PTR [ebp-0x18]
   1caa0:	sub    eax,DWORD PTR [ebp-0x1c]
   1caa3:	cmp    DWORD PTR [esi+0x10],0x0
   1caa7:	push   eax
   1caa8:	push   DWORD PTR [esi+0x18]
   1caab:	je     0x1cab4
   1caad:	call   0x1da04
   1cab2:	jmp    0x1cab9
   1cab4:	call   0x1d562
   1cab9:	mov    ecx,DWORD PTR [ebp+0x8]
   1cabc:	mov    DWORD PTR [esi+0x18],eax
   1cabf:	mov    DWORD PTR [ecx+0x30],eax
   1cac2:	mov    edx,ecx
   1cac4:	cmp    DWORD PTR [esi+0x10],0x0
   1cac8:	mov    eax,DWORD PTR [ebp-0x10]
   1cacb:	mov    DWORD PTR [ebp-0x1c],eax
   1cace:	mov    eax,ebx
   1cad0:	jne    0x1caf5
   1cad2:	and    eax,0xff00
   1cad7:	mov    ecx,ebx
   1cad9:	shl    ecx,0x10
   1cadc:	add    eax,ecx
   1cade:	mov    ecx,ebx
   1cae0:	shr    ecx,0x8
   1cae3:	and    ecx,0xff00
   1cae9:	shl    eax,0x8
   1caec:	add    eax,ecx
   1caee:	mov    ecx,ebx
   1caf0:	shr    ecx,0x18
   1caf3:	add    eax,ecx
   1caf5:	cmp    eax,DWORD PTR [esi+0x18]
   1caf8:	je     0x1cb03
   1cafa:	mov    DWORD PTR [edx+0x18],0x1ed40
   1cb01:	jmp    0x1cb4d
   1cb03:	xor    ebx,ebx
   1cb05:	xor    edi,edi
   1cb07:	mov    DWORD PTR [esi],0x19
   1cb0d:	cmp    DWORD PTR [esi+0x8],0x0
   1cb11:	je     0x1cb8b
   1cb13:	cmp    DWORD PTR [esi+0x10],0x0
   1cb17:	je     0x1cb8b
   1cb19:	cmp    edi,0x20
   1cb1c:	jae    0x1cb41
   1cb1e:	cmp    DWORD PTR [ebp-0x8],0x0
   1cb22:	je     0x1cba1
   1cb24:	mov    eax,DWORD PTR [ebp-0x4]
   1cb27:	movzx  eax,BYTE PTR [eax]
   1cb2a:	dec    DWORD PTR [ebp-0x8]
   1cb2d:	mov    ecx,edi
   1cb2f:	shl    eax,cl
   1cb31:	add    edi,0x8
   1cb34:	add    ebx,eax
   1cb36:	inc    DWORD PTR [ebp-0x4]
   1cb39:	cmp    edi,0x20
   1cb3c:	jb     0x1cb1e
   1cb3e:	mov    edx,DWORD PTR [ebp+0x8]
   1cb41:	cmp    ebx,DWORD PTR [esi+0x1c]
   1cb44:	je     0x1cb87
   1cb46:	mov    DWORD PTR [edx+0x18],0x1ed28
   1cb4d:	mov    DWORD PTR [esi],0x1b
   1cb53:	mov    eax,DWORD PTR [esi]
   1cb55:	cmp    eax,0x1c
   1cb58:	jbe    0x1bb4a
   1cb5e:	jmp    0x1bb40
   1cb63:	mov    eax,DWORD PTR [ebp-0x18]
   1cb66:	mov    DWORD PTR [edx+0xc],eax
   1cb69:	mov    eax,DWORD PTR [ebp-0x10]
   1cb6c:	mov    DWORD PTR [edx+0x10],eax
   1cb6f:	mov    eax,DWORD PTR [ebp-0x4]
   1cb72:	mov    DWORD PTR [edx],eax
   1cb74:	mov    eax,DWORD PTR [ebp-0x8]
   1cb77:	mov    DWORD PTR [edx+0x4],eax
   1cb7a:	mov    DWORD PTR [esi+0x38],ebx
   1cb7d:	mov    DWORD PTR [esi+0x3c],edi
   1cb80:	push   0x2
   1cb82:	jmp    0x1bb42
   1cb87:	xor    ebx,ebx
   1cb89:	xor    edi,edi
   1cb8b:	mov    DWORD PTR [esi],0x1a
   1cb91:	mov    DWORD PTR [ebp-0x24],0x1
   1cb98:	jmp    0x1cba1
   1cb9a:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cba1:	mov    eax,DWORD PTR [ebp+0x8]
   1cba4:	mov    ecx,DWORD PTR [ebp-0x18]
   1cba7:	mov    DWORD PTR [eax+0xc],ecx
   1cbaa:	mov    ecx,DWORD PTR [ebp-0x10]
   1cbad:	mov    DWORD PTR [eax+0x10],ecx
   1cbb0:	mov    ecx,DWORD PTR [ebp-0x4]
   1cbb3:	mov    DWORD PTR [eax],ecx
   1cbb5:	mov    ecx,DWORD PTR [ebp-0x8]
   1cbb8:	mov    DWORD PTR [eax+0x4],ecx
   1cbbb:	cmp    DWORD PTR [esi+0x28],0x0
   1cbbf:	mov    DWORD PTR [esi+0x38],ebx
   1cbc2:	mov    DWORD PTR [esi+0x3c],edi
   1cbc5:	jne    0x1cbd7
   1cbc7:	cmp    DWORD PTR [esi],0x18
   1cbca:	jge    0x1cbf3
   1cbcc:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbcf:	mov    ecx,DWORD PTR [ebp+0x8]
   1cbd2:	cmp    eax,DWORD PTR [ecx+0x10]
   1cbd5:	je     0x1cbf3
   1cbd7:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbda:	mov    edi,DWORD PTR [ebp+0x8]
   1cbdd:	call   0x1ba02
   1cbe2:	test   eax,eax
   1cbe4:	je     0x1cbf3
   1cbe6:	mov    DWORD PTR [esi],0x1c
   1cbec:	push   0xfffffffc
   1cbee:	jmp    0x1bb42
   1cbf3:	mov    edi,DWORD PTR [ebp+0x8]
   1cbf6:	mov    eax,DWORD PTR [ebp-0x2c]
   1cbf9:	sub    eax,DWORD PTR [edi+0x4]
   1cbfc:	mov    ebx,DWORD PTR [ebp-0x1c]
   1cbff:	sub    ebx,DWORD PTR [edi+0x10]
   1cc02:	add    DWORD PTR [edi+0x8],eax
   1cc05:	add    DWORD PTR [edi+0x14],ebx
   1cc08:	add    DWORD PTR [esi+0x1c],ebx
   1cc0b:	cmp    DWORD PTR [esi+0x8],0x0
   1cc0f:	mov    DWORD PTR [ebp-0x2c],eax
   1cc12:	je     0x1cc3d
   1cc14:	test   ebx,ebx
   1cc16:	je     0x1cc3d
   1cc18:	mov    eax,DWORD PTR [edi+0xc]
   1cc1b:	push   ebx
   1cc1c:	sub    eax,ebx
   1cc1e:	cmp    DWORD PTR [esi+0x10],0x0
   1cc22:	push   eax
   1cc23:	push   DWORD PTR [esi+0x18]
   1cc26:	je     0x1cc2f
   1cc28:	call   0x1da04
   1cc2d:	jmp    0x1cc34
   1cc2f:	call   0x1d562
   1cc34:	mov    DWORD PTR [esi+0x18],eax
   1cc37:	mov    DWORD PTR [edi+0x30],eax
   1cc3a:	mov    eax,DWORD PTR [ebp-0x2c]
   1cc3d:	cmp    DWORD PTR [esi],0xb
   1cc40:	jne    0x1cc49
   1cc42:	mov    ecx,0x80
   1cc47:	jmp    0x1cc4b
   1cc49:	xor    ecx,ecx
   1cc4b:	mov    edx,DWORD PTR [esi+0x4]
   1cc4e:	neg    edx
   1cc50:	sbb    edx,edx
   1cc52:	and    edx,0x40
   1cc55:	add    edx,ecx
   1cc57:	add    edx,DWORD PTR [esi+0x3c]
   1cc5a:	mov    DWORD PTR [edi+0x2c],edx
   1cc5d:	test   eax,eax
   1cc5f:	jne    0x1cc65
   1cc61:	test   ebx,ebx
   1cc63:	je     0x1cc6b
   1cc65:	cmp    DWORD PTR [ebp+0xc],0x4
   1cc69:	jne    0x1cc78
   1cc6b:	cmp    DWORD PTR [ebp-0x24],0x0
   1cc6f:	jne    0x1cc78
   1cc71:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1cc78:	mov    eax,DWORD PTR [ebp-0x24]
   1cc7b:	jmp    0x1bb43
   1cc80:	mov    edi,edi
   1cc82:	push   esp
   1cc83:	mov    ebx,0xbc710001
   1cc88:	add    DWORD PTR [eax],eax
   1cc8a:	push   es
   1cc8b:	mov    ebp,0xbd7c0001
   1cc90:	add    DWORD PTR [eax],eax
   1cc92:	cmc    
   1cc93:	mov    ebp,0xbe740001
   1cc98:	add    DWORD PTR [eax],eax
   1cc9a:	movsx  eax,WORD PTR [ecx]
   1cc9d:	add    BYTE PTR [eax+0x3d0001bf],ch
   1cca3:	rol    BYTE PTR [ecx],0x0
   1cca6:	mov    ebp,0x1b0001c0
   1ccab:	rol    DWORD PTR [ecx],0x0
   1ccae:	rol    DWORD PTR ds:[ecx],0x0
   1ccb2:	dec    ebx
   1ccb3:	rol    DWORD PTR [ecx],0x0
   1ccb6:	cli    
   1ccb7:	rol    DWORD PTR [ecx],0x0
   1ccba:	pop    edx
   1ccbb:	ret    0x1
   1ccbe:	mov    al,0xc2
   1ccc0:	add    DWORD PTR [eax],eax
   1ccc2:	jb     0x1cc87
   1ccc4:	add    DWORD PTR [eax],eax
   1ccc6:	loopne 0x1cc8d
   1ccc8:	add    DWORD PTR [eax],eax
   1ccca:	dec    eax
   1cccb:	mov    BYTE PTR [ecx],0x0
   1ccce:	jecxz  0x1cc97
   1ccd0:	add    DWORD PTR [eax],eax
   1ccd2:	sub    eax,ecx
   1ccd4:	add    DWORD PTR [eax],eax
   1ccd6:	inc    esp
   1ccd7:	leave  
   1ccd8:	add    DWORD PTR [eax],eax
   1ccda:	test   al,0xc9
   1ccdc:	add    DWORD PTR [eax],eax
   1ccde:	xor    dl,cl
   1cce0:	add    DWORD PTR [eax],eax
   1cce2:	push   ebx
   1cce3:	retf   0x1
   1cce6:	or     eax,0x910001cb
   1cceb:	retf   
   1ccec:	add    DWORD PTR [eax],eax
   1ccee:	call   0x1cb:0xec0001cb
   1ccf5:	add    ah,cl
   1ccf7:	int3   
   1ccf8:	int3   
   1ccf9:	int3   
   1ccfa:	int3   
   1ccfb:	int3   
   1ccfc:	mov    edi,edi
   1ccfe:	push   ebp
   1ccff:	mov    ebp,esp
   1cd01:	push   esi
   1cd02:	mov    esi,DWORD PTR [ebp+0x8]
   1cd05:	test   esi,esi
   1cd07:	je     0x1cd35
   1cd09:	mov    eax,DWORD PTR [esi+0x1c]
   1cd0c:	test   eax,eax
   1cd0e:	je     0x1cd35
   1cd10:	mov    ecx,DWORD PTR [esi+0x24]
   1cd13:	test   ecx,ecx
   1cd15:	je     0x1cd35
   1cd17:	mov    eax,DWORD PTR [eax+0x34]
   1cd1a:	test   eax,eax
   1cd1c:	je     0x1cd24
   1cd1e:	push   eax
   1cd1f:	push   DWORD PTR [esi+0x28]
   1cd22:	call   ecx
   1cd24:	push   DWORD PTR [esi+0x1c]
   1cd27:	push   DWORD PTR [esi+0x28]
   1cd2a:	call   DWORD PTR [esi+0x24]
   1cd2d:	and    DWORD PTR [esi+0x1c],0x0
   1cd31:	xor    eax,eax
   1cd33:	jmp    0x1cd38
   1cd35:	push   0xfffffffe
   1cd37:	pop    eax
   1cd38:	pop    esi
   1cd39:	pop    ebp
   1cd3a:	ret    0x4
   1cd3d:	int3   
   1cd3e:	int3   
   1cd3f:	int3   
   1cd40:	int3   
   1cd41:	int3   
   1cd42:	mov    edi,edi
   1cd44:	push   ebp
   1cd45:	mov    ebp,esp
   1cd47:	mov    eax,DWORD PTR [ebp+0xc]
   1cd4a:	imul   eax,DWORD PTR [ebp+0x10]
   1cd4e:	push   eax
   1cd4f:	call   0x1da28
   1cd54:	pop    ecx
   1cd55:	pop    ebp
   1cd56:	ret    0xc
   1cd59:	int3   
   1cd5a:	int3   
   1cd5b:	int3   
   1cd5c:	int3   
   1cd5d:	int3   
   1cd5e:	mov    edi,edi
   1cd60:	push   ebp
   1cd61:	mov    ebp,esp
   1cd63:	push   DWORD PTR [ebp+0xc]
   1cd66:	call   0x1da56
   1cd6b:	pop    ecx
   1cd6c:	pop    ebp
   1cd6d:	ret    0x8
   1cd70:	int3   
   1cd71:	int3   
   1cd72:	int3   
   1cd73:	int3   
   1cd74:	int3   
   1cd75:	int3   
   1cd76:	mov    edi,edi
   1cd78:	push   ebp
   1cd79:	mov    ebp,esp
   1cd7b:	sub    esp,0x40
   1cd7e:	mov    eax,DWORD PTR [ebp+0x8]
   1cd81:	mov    ecx,DWORD PTR [eax+0x4]
   1cd84:	mov    edx,DWORD PTR [eax+0x10]
   1cd87:	push   ebx
   1cd88:	mov    ebx,DWORD PTR [eax]
   1cd8a:	dec    ebx
   1cd8b:	lea    ecx,[ecx+ebx*1-0x5]
   1cd8f:	mov    DWORD PTR [ebp-0x2c],ecx
   1cd92:	mov    ecx,edx
   1cd94:	sub    ecx,DWORD PTR [ebp+0xc]
   1cd97:	push   esi
   1cd98:	mov    esi,DWORD PTR [eax+0x1c]
   1cd9b:	push   edi
   1cd9c:	mov    edi,DWORD PTR [eax+0xc]
   1cd9f:	dec    edi
   1cda0:	add    ecx,edi
   1cda2:	mov    DWORD PTR [ebp-0x3c],ecx
   1cda5:	lea    ecx,[edx+edi*1-0x101]
   1cdac:	mov    DWORD PTR [ebp-0x30],ecx
   1cdaf:	mov    ecx,DWORD PTR [esi+0x28]
   1cdb2:	mov    DWORD PTR [ebp-0x24],ecx
   1cdb5:	mov    ecx,DWORD PTR [esi+0x2c]
   1cdb8:	mov    DWORD PTR [ebp-0x40],ecx
   1cdbb:	mov    ecx,DWORD PTR [esi+0x30]
   1cdbe:	mov    DWORD PTR [ebp-0x18],ecx
   1cdc1:	mov    ecx,DWORD PTR [esi+0x34]
   1cdc4:	mov    DWORD PTR [ebp-0x28],ecx
   1cdc7:	mov    ecx,DWORD PTR [esi+0x38]
   1cdca:	mov    DWORD PTR [ebp-0x4],ecx
   1cdcd:	mov    ecx,DWORD PTR [esi+0x3c]
   1cdd0:	mov    DWORD PTR [ebp+0xc],ecx
   1cdd3:	mov    ecx,DWORD PTR [esi+0x4c]
   1cdd6:	xor    edx,edx
   1cdd8:	mov    DWORD PTR [ebp-0x1c],ecx
   1cddb:	mov    ecx,DWORD PTR [esi+0x50]
   1cdde:	inc    edx
   1cddf:	mov    DWORD PTR [ebp-0x20],ecx
   1cde2:	mov    ecx,DWORD PTR [esi+0x54]
   1cde5:	shl    edx,cl
   1cde7:	mov    ecx,DWORD PTR [esi+0x58]
   1cdea:	dec    edx
   1cdeb:	mov    DWORD PTR [ebp-0x34],edx
   1cdee:	xor    edx,edx
   1cdf0:	inc    edx
   1cdf1:	shl    edx,cl
   1cdf3:	dec    edx
   1cdf4:	mov    DWORD PTR [ebp-0x38],edx
   1cdf7:	mov    ecx,DWORD PTR [ebp+0xc]
   1cdfa:	cmp    ecx,0xf
   1cdfd:	jae    0x1ce1c
   1cdff:	add    DWORD PTR [ebp+0xc],0x8
   1ce03:	inc    ebx
   1ce04:	movzx  edx,BYTE PTR [ebx]
   1ce07:	shl    edx,cl
   1ce09:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce0c:	add    DWORD PTR [ebp-0x4],edx
   1ce0f:	inc    ebx
   1ce10:	movzx  edx,BYTE PTR [ebx]
   1ce13:	shl    edx,cl
   1ce15:	add    DWORD PTR [ebp-0x4],edx
   1ce18:	add    DWORD PTR [ebp+0xc],0x8
   1ce1c:	mov    ecx,DWORD PTR [ebp-0x34]
   1ce1f:	and    ecx,DWORD PTR [ebp-0x4]
   1ce22:	mov    edx,DWORD PTR [ebp-0x1c]
   1ce25:	mov    ecx,DWORD PTR [edx+ecx*4]
   1ce28:	mov    DWORD PTR [ebp-0x10],ecx
   1ce2b:	mov    edx,DWORD PTR [ebp-0x10]
   1ce2e:	shr    ecx,0x8
   1ce31:	movzx  ecx,cl
   1ce34:	shr    DWORD PTR [ebp-0x4],cl
   1ce37:	sub    DWORD PTR [ebp+0xc],ecx
   1ce3a:	mov    DWORD PTR [ebp-0x8],ecx
   1ce3d:	movzx  ecx,dl
   1ce40:	mov    DWORD PTR [ebp-0x8],ecx
   1ce43:	test   ecx,ecx
   1ce45:	je     0x1ce8e
   1ce47:	mov    ecx,DWORD PTR [ebp-0x8]
   1ce4a:	test   cl,0x10
   1ce4d:	jne    0x1ce99
   1ce4f:	test   cl,0x40
   1ce52:	jne    0x1d0e8
   1ce58:	xor    edx,edx
   1ce5a:	inc    edx
   1ce5b:	shl    edx,cl
   1ce5d:	mov    ecx,DWORD PTR [ebp-0x10]
   1ce60:	shr    ecx,0x10
   1ce63:	dec    edx
   1ce64:	and    edx,DWORD PTR [ebp-0x4]
   1ce67:	add    edx,ecx
   1ce69:	mov    ecx,DWORD PTR [ebp-0x1c]
   1ce6c:	mov    ecx,DWORD PTR [ecx+edx*4]
   1ce6f:	mov    DWORD PTR [ebp-0x10],ecx
   1ce72:	mov    edx,DWORD PTR [ebp-0x10]
   1ce75:	shr    ecx,0x8
   1ce78:	movzx  ecx,cl
   1ce7b:	shr    DWORD PTR [ebp-0x4],cl
   1ce7e:	sub    DWORD PTR [ebp+0xc],ecx
   1ce81:	mov    DWORD PTR [ebp-0x8],ecx
   1ce84:	movzx  ecx,dl
   1ce87:	mov    DWORD PTR [ebp-0x8],ecx
   1ce8a:	test   ecx,ecx
   1ce8c:	jne    0x1ce47
   1ce8e:	inc    edi
   1ce8f:	shr    edx,0x10
   1ce92:	mov    BYTE PTR [edi],dl
   1ce94:	jmp    0x1d0c6
   1ce99:	shr    edx,0x10
   1ce9c:	and    ecx,0xf
   1ce9f:	mov    DWORD PTR [ebp-0xc],edx
   1cea2:	mov    DWORD PTR [ebp-0x8],ecx
   1cea5:	je     0x1ced1
   1cea7:	mov    ecx,DWORD PTR [ebp+0xc]
   1ceaa:	cmp    ecx,DWORD PTR [ebp-0x8]
   1cead:	jae    0x1cebc
   1ceaf:	inc    ebx
   1ceb0:	movzx  edx,BYTE PTR [ebx]
   1ceb3:	shl    edx,cl
   1ceb5:	add    DWORD PTR [ebp-0x4],edx
   1ceb8:	add    DWORD PTR [ebp+0xc],0x8
   1cebc:	mov    ecx,DWORD PTR [ebp-0x8]
   1cebf:	xor    edx,edx
   1cec1:	inc    edx
   1cec2:	shl    edx,cl
   1cec4:	dec    edx
   1cec5:	and    edx,DWORD PTR [ebp-0x4]
   1cec8:	shr    DWORD PTR [ebp-0x4],cl
   1cecb:	add    DWORD PTR [ebp-0xc],edx
   1cece:	sub    DWORD PTR [ebp+0xc],ecx
   1ced1:	mov    ecx,DWORD PTR [ebp+0xc]
   1ced4:	cmp    ecx,0xf
   1ced7:	jae    0x1cef6
   1ced9:	add    DWORD PTR [ebp+0xc],0x8
   1cedd:	inc    ebx
   1cede:	movzx  edx,BYTE PTR [ebx]
   1cee1:	shl    edx,cl
   1cee3:	mov    ecx,DWORD PTR [ebp+0xc]
   1cee6:	add    DWORD PTR [ebp-0x4],edx
   1cee9:	inc    ebx
   1ceea:	movzx  edx,BYTE PTR [ebx]
   1ceed:	shl    edx,cl
   1ceef:	add    DWORD PTR [ebp-0x4],edx
   1cef2:	add    DWORD PTR [ebp+0xc],0x8
   1cef6:	mov    ecx,DWORD PTR [ebp-0x38]
   1cef9:	and    ecx,DWORD PTR [ebp-0x4]
   1cefc:	mov    edx,DWORD PTR [ebp-0x20]
   1ceff:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cf02:	jmp    0x1cf22
   1cf04:	test   cl,0x40
   1cf07:	jne    0x1d0df
   1cf0d:	xor    edx,edx
   1cf0f:	inc    edx
   1cf10:	shl    edx,cl
   1cf12:	movzx  ecx,WORD PTR [ebp-0xe]
   1cf16:	dec    edx
   1cf17:	and    edx,DWORD PTR [ebp-0x4]
   1cf1a:	add    edx,ecx
   1cf1c:	mov    ecx,DWORD PTR [ebp-0x20]
   1cf1f:	mov    ecx,DWORD PTR [ecx+edx*4]
   1cf22:	mov    DWORD PTR [ebp-0x10],ecx
   1cf25:	mov    edx,DWORD PTR [ebp-0x10]
   1cf28:	shr    ecx,0x8
   1cf2b:	movzx  ecx,cl
   1cf2e:	shr    DWORD PTR [ebp-0x4],cl
   1cf31:	sub    DWORD PTR [ebp+0xc],ecx
   1cf34:	mov    DWORD PTR [ebp-0x8],ecx
   1cf37:	movzx  ecx,dl
   1cf3a:	test   cl,0x10
   1cf3d:	je     0x1cf04
   1cf3f:	and    ecx,0xf
   1cf42:	shr    edx,0x10
   1cf45:	mov    DWORD PTR [ebp-0x14],edx
   1cf48:	mov    DWORD PTR [ebp-0x8],ecx
   1cf4b:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf4e:	jae    0x1cf7b
   1cf50:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf53:	add    DWORD PTR [ebp+0xc],0x8
   1cf57:	inc    ebx
   1cf58:	movzx  edx,BYTE PTR [ebx]
   1cf5b:	shl    edx,cl
   1cf5d:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf60:	add    DWORD PTR [ebp-0x4],edx
   1cf63:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf66:	jae    0x1cf7b
   1cf68:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf6b:	inc    ebx
   1cf6c:	movzx  edx,BYTE PTR [ebx]
   1cf6f:	shl    edx,cl
   1cf71:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf74:	add    DWORD PTR [ebp-0x4],edx
   1cf77:	add    DWORD PTR [ebp+0xc],0x8
   1cf7b:	xor    edx,edx
   1cf7d:	inc    edx
   1cf7e:	shl    edx,cl
   1cf80:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf83:	sub    DWORD PTR [ebp+0xc],ecx
   1cf86:	dec    edx
   1cf87:	and    edx,DWORD PTR [ebp-0x4]
   1cf8a:	shr    DWORD PTR [ebp-0x4],cl
   1cf8d:	add    DWORD PTR [ebp-0x14],edx
   1cf90:	mov    edx,DWORD PTR [ebp-0x14]
   1cf93:	mov    ecx,edi
   1cf95:	sub    ecx,DWORD PTR [ebp-0x3c]
   1cf98:	cmp    edx,ecx
   1cf9a:	jbe    0x1d08e
   1cfa0:	sub    edx,ecx
   1cfa2:	mov    DWORD PTR [ebp-0x8],edx
   1cfa5:	cmp    edx,DWORD PTR [ebp-0x40]
   1cfa8:	ja     0x1d0d6
   1cfae:	mov    ecx,DWORD PTR [ebp-0x28]
   1cfb1:	dec    ecx
   1cfb2:	mov    DWORD PTR [ebp-0x10],ecx
   1cfb5:	mov    ecx,DWORD PTR [ebp-0x18]
   1cfb8:	test   ecx,ecx
   1cfba:	jne    0x1cfe2
   1cfbc:	mov    ecx,DWORD PTR [ebp-0x24]
   1cfbf:	sub    ecx,edx
   1cfc1:	add    DWORD PTR [ebp-0x10],ecx
   1cfc4:	mov    ecx,edx
   1cfc6:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfc9:	jae    0x1d057
   1cfcf:	sub    DWORD PTR [ebp-0xc],ecx
   1cfd2:	mov    ecx,DWORD PTR [ebp-0x10]
   1cfd5:	inc    ecx
   1cfd6:	mov    dl,BYTE PTR [ecx]
   1cfd8:	inc    edi
   1cfd9:	dec    DWORD PTR [ebp-0x8]
   1cfdc:	mov    BYTE PTR [edi],dl
   1cfde:	jne    0x1cfd5
   1cfe0:	jmp    0x1d02d
   1cfe2:	cmp    ecx,edx
   1cfe4:	jae    0x1d037
   1cfe6:	sub    ecx,edx
   1cfe8:	add    ecx,DWORD PTR [ebp-0x24]
   1cfeb:	add    DWORD PTR [ebp-0x10],ecx
   1cfee:	mov    ecx,DWORD PTR [ebp-0x8]
   1cff1:	sub    ecx,DWORD PTR [ebp-0x18]
   1cff4:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cff7:	jae    0x1d057
   1cff9:	sub    DWORD PTR [ebp-0xc],ecx
   1cffc:	inc    DWORD PTR [ebp-0x10]
   1cfff:	mov    edx,DWORD PTR [ebp-0x10]
   1d002:	mov    dl,BYTE PTR [edx]
   1d004:	inc    edi
   1d005:	dec    ecx
   1d006:	mov    BYTE PTR [edi],dl
   1d008:	jne    0x1cffc
   1d00a:	mov    ecx,DWORD PTR [ebp-0x28]
   1d00d:	dec    ecx
   1d00e:	mov    DWORD PTR [ebp-0x10],ecx
   1d011:	mov    ecx,DWORD PTR [ebp-0x18]
   1d014:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d017:	jae    0x1d057
   1d019:	sub    DWORD PTR [ebp-0xc],ecx
   1d01c:	mov    DWORD PTR [ebp-0x8],ecx
   1d01f:	mov    ecx,DWORD PTR [ebp-0x10]
   1d022:	inc    ecx
   1d023:	mov    dl,BYTE PTR [ecx]
   1d025:	inc    edi
   1d026:	dec    DWORD PTR [ebp-0x8]
   1d029:	mov    BYTE PTR [edi],dl
   1d02b:	jne    0x1d022
   1d02d:	mov    ecx,edi
   1d02f:	sub    ecx,DWORD PTR [ebp-0x14]
   1d032:	mov    DWORD PTR [ebp-0x10],ecx
   1d035:	jmp    0x1d05a
   1d037:	sub    ecx,edx
   1d039:	add    DWORD PTR [ebp-0x10],ecx
   1d03c:	mov    ecx,DWORD PTR [ebp-0x8]
   1d03f:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d042:	jae    0x1d057
   1d044:	sub    DWORD PTR [ebp-0xc],ecx
   1d047:	mov    ecx,DWORD PTR [ebp-0x10]
   1d04a:	inc    ecx
   1d04b:	mov    dl,BYTE PTR [ecx]
   1d04d:	inc    edi
   1d04e:	dec    DWORD PTR [ebp-0x8]
   1d051:	mov    BYTE PTR [edi],dl
   1d053:	jne    0x1d04a
   1d055:	jmp    0x1d02d
   1d057:	mov    ecx,DWORD PTR [ebp-0x10]
   1d05a:	mov    edx,DWORD PTR [ebp-0xc]
   1d05d:	cmp    edx,0x2
   1d060:	jbe    0x1d0ae
   1d062:	lea    eax,[edx-0x3]
   1d065:	push   0x3
   1d067:	xor    edx,edx
   1d069:	pop    ecx
   1d06a:	div    ecx
   1d06c:	mov    ecx,DWORD PTR [ebp-0x10]
   1d06f:	inc    eax
   1d070:	sub    DWORD PTR [ebp-0xc],0x3
   1d074:	inc    ecx
   1d075:	mov    dl,BYTE PTR [ecx]
   1d077:	inc    edi
   1d078:	mov    BYTE PTR [edi],dl
   1d07a:	inc    ecx
   1d07b:	mov    dl,BYTE PTR [ecx]
   1d07d:	inc    edi
   1d07e:	inc    ecx
   1d07f:	mov    BYTE PTR [edi],dl
   1d081:	mov    dl,BYTE PTR [ecx]
   1d083:	inc    edi
   1d084:	dec    eax
   1d085:	mov    BYTE PTR [edi],dl
   1d087:	jne    0x1d070
   1d089:	mov    eax,DWORD PTR [ebp+0x8]
   1d08c:	jmp    0x1d0ae
   1d08e:	mov    ecx,edi
   1d090:	sub    ecx,edx
   1d092:	sub    DWORD PTR [ebp-0xc],0x3
   1d096:	inc    ecx
   1d097:	mov    dl,BYTE PTR [ecx]
   1d099:	inc    edi
   1d09a:	mov    BYTE PTR [edi],dl
   1d09c:	inc    ecx
   1d09d:	mov    dl,BYTE PTR [ecx]
   1d09f:	inc    edi
   1d0a0:	inc    ecx
   1d0a1:	mov    BYTE PTR [edi],dl
   1d0a3:	mov    dl,BYTE PTR [ecx]
   1d0a5:	inc    edi
   1d0a6:	cmp    DWORD PTR [ebp-0xc],0x2
   1d0aa:	mov    BYTE PTR [edi],dl
   1d0ac:	ja     0x1d092
   1d0ae:	cmp    DWORD PTR [ebp-0xc],0x0
   1d0b2:	je     0x1d0c6
   1d0b4:	inc    ecx
   1d0b5:	mov    dl,BYTE PTR [ecx]
   1d0b7:	inc    edi
   1d0b8:	cmp    DWORD PTR [ebp-0xc],0x1
   1d0bc:	mov    BYTE PTR [edi],dl
   1d0be:	jbe    0x1d0c6
   1d0c0:	mov    cl,BYTE PTR [ecx+0x1]
   1d0c3:	inc    edi
   1d0c4:	mov    BYTE PTR [edi],cl
   1d0c6:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d0c9:	jae    0x1d102
   1d0cb:	cmp    edi,DWORD PTR [ebp-0x30]
   1d0ce:	jb     0x1cdf7
   1d0d4:	jmp    0x1d102
   1d0d6:	mov    DWORD PTR [eax+0x18],0x1ed56
   1d0dd:	jmp    0x1d0fc
   1d0df:	mov    DWORD PTR [eax+0x18],0x1ed74
   1d0e6:	jmp    0x1d0fc
   1d0e8:	test   cl,0x20
   1d0eb:	je     0x1d0f5
   1d0ed:	mov    DWORD PTR [esi],0xb
   1d0f3:	jmp    0x1d102
   1d0f5:	mov    DWORD PTR [eax+0x18],0x1ed8a
   1d0fc:	mov    DWORD PTR [esi],0x1b
   1d102:	mov    ecx,DWORD PTR [ebp+0xc]
   1d105:	shr    ecx,0x3
   1d108:	sub    ebx,ecx
   1d10a:	shl    ecx,0x3
   1d10d:	sub    DWORD PTR [ebp+0xc],ecx
   1d110:	xor    ecx,ecx
   1d112:	inc    ecx
   1d113:	mov    edx,ecx
   1d115:	mov    ecx,DWORD PTR [ebp+0xc]
   1d118:	shl    edx,cl
   1d11a:	dec    edx
   1d11b:	mov    ecx,edx
   1d11d:	mov    edx,DWORD PTR [ebp-0x4]
   1d120:	and    edx,ecx
   1d122:	lea    ecx,[ebx+0x1]
   1d125:	mov    DWORD PTR [eax],ecx
   1d127:	lea    ecx,[edi+0x1]
   1d12a:	mov    DWORD PTR [eax+0xc],ecx
   1d12d:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d130:	sub    ecx,ebx
   1d132:	add    ecx,0x5
   1d135:	mov    DWORD PTR [eax+0x4],ecx
   1d138:	mov    ecx,DWORD PTR [ebp-0x30]
   1d13b:	sub    ecx,edi
   1d13d:	add    ecx,0x101
   1d143:	mov    DWORD PTR [eax+0x10],ecx
   1d146:	mov    eax,DWORD PTR [ebp+0xc]
   1d149:	pop    edi
   1d14a:	mov    DWORD PTR [esi+0x38],edx
   1d14d:	mov    DWORD PTR [esi+0x3c],eax
   1d150:	pop    esi
   1d151:	pop    ebx
   1d152:	leave  
   1d153:	ret    0x8
   1d156:	int3   
   1d157:	int3   
   1d158:	int3   
   1d159:	int3   
   1d15a:	int3   
   1d15b:	int3   
   1d15c:	mov    edi,edi
   1d15e:	push   ebp
   1d15f:	mov    ebp,esp
   1d161:	sub    esp,0x90
   1d167:	mov    eax,ds:0x7771c
   1d16c:	xor    eax,ebp
   1d16e:	mov    DWORD PTR [ebp-0x4],eax
   1d171:	mov    eax,DWORD PTR [ebp+0xc]
   1d174:	mov    edx,DWORD PTR [ebp+0x18]
   1d177:	mov    DWORD PTR [ebp-0x7c],eax
   1d17a:	mov    eax,DWORD PTR [ebp+0x1c]
   1d17d:	push   ebx
   1d17e:	mov    DWORD PTR [ebp-0x4c],eax
   1d181:	xor    eax,eax
   1d183:	push   esi
   1d184:	mov    esi,DWORD PTR [ebp+0x14]
   1d187:	movzx  ebx,ax
   1d18a:	push   edi
   1d18b:	mov    eax,ebx
   1d18d:	shl    ebx,0x10
   1d190:	push   0x8
   1d192:	or     eax,ebx
   1d194:	pop    ecx
   1d195:	lea    edi,[ebp-0x24]
   1d198:	rep stos DWORD PTR es:[edi],eax
   1d19a:	xor    edi,edi
   1d19c:	xor    ecx,ecx
   1d19e:	mov    DWORD PTR [ebp-0x90],edx
   1d1a4:	cmp    DWORD PTR [ebp+0x10],edi
   1d1a7:	jbe    0x1d1bd
   1d1a9:	mov    eax,DWORD PTR [ebp-0x7c]
   1d1ac:	movzx  eax,WORD PTR [eax+ecx*2]
   1d1b0:	lea    eax,[ebp+eax*2-0x24]
   1d1b4:	inc    WORD PTR [eax]
   1d1b7:	inc    ecx
   1d1b8:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d1bb:	jb     0x1d1a9
   1d1bd:	mov    ecx,DWORD PTR [edx]
   1d1bf:	push   0xf
   1d1c1:	pop    eax
   1d1c2:	mov    DWORD PTR [ebp-0x54],ecx
   1d1c5:	mov    DWORD PTR [ebp-0x60],eax
   1d1c8:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d1cd:	jne    0x1d1d8
   1d1cf:	dec    eax
   1d1d0:	mov    DWORD PTR [ebp-0x60],eax
   1d1d3:	cmp    eax,0x1
   1d1d6:	jae    0x1d1c8
   1d1d8:	cmp    ecx,eax
   1d1da:	jbe    0x1d1df
   1d1dc:	mov    DWORD PTR [ebp-0x54],eax
   1d1df:	cmp    eax,edi
   1d1e1:	jne    0x1d20d
   1d1e3:	mov    ecx,DWORD PTR [esi]
   1d1e5:	xor    eax,eax
   1d1e7:	mov    BYTE PTR [ebp-0x48],0x40
   1d1eb:	mov    BYTE PTR [ebp-0x47],0x1
   1d1ef:	mov    WORD PTR [ebp-0x46],ax
   1d1f3:	mov    eax,DWORD PTR [ebp-0x48]
   1d1f6:	mov    DWORD PTR [ecx],eax
   1d1f8:	add    DWORD PTR [esi],0x4
   1d1fb:	mov    ecx,DWORD PTR [esi]
   1d1fd:	mov    DWORD PTR [ecx],eax
   1d1ff:	add    DWORD PTR [esi],0x4
   1d202:	mov    DWORD PTR [edx],0x1
   1d208:	jmp    0x1d549
   1d20d:	xor    ecx,ecx
   1d20f:	inc    ecx
   1d210:	mov    edx,ecx
   1d212:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d217:	jne    0x1d21f
   1d219:	inc    edx
   1d21a:	cmp    edx,0xf
   1d21d:	jbe    0x1d212
   1d21f:	cmp    DWORD PTR [ebp-0x54],edx
   1d222:	jae    0x1d227
   1d224:	mov    DWORD PTR [ebp-0x54],edx
   1d227:	mov    edi,ecx
   1d229:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d22e:	add    edi,edi
   1d230:	sub    edi,ebx
   1d232:	js     0x1d2be
   1d238:	inc    ecx
   1d239:	cmp    ecx,0xf
   1d23c:	jbe    0x1d229
   1d23e:	xor    ebx,ebx
   1d240:	cmp    edi,ebx
   1d242:	jle    0x1d24e
   1d244:	cmp    DWORD PTR [ebp+0x8],ebx
   1d247:	je     0x1d2be
   1d249:	cmp    eax,0x1
   1d24c:	jne    0x1d2be
   1d24e:	xor    eax,eax
   1d250:	push   0x2
   1d252:	mov    WORD PTR [ebp-0x42],ax
   1d256:	pop    ecx
   1d257:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d25c:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d261:	inc    ecx
   1d262:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d267:	inc    ecx
   1d268:	cmp    ecx,0x1e
   1d26b:	jb     0x1d257
   1d26d:	mov    eax,DWORD PTR [ebp-0x4c]
   1d270:	xor    edi,edi
   1d272:	cmp    DWORD PTR [ebp+0x10],ebx
   1d275:	jbe    0x1d2a0
   1d277:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d27a:	lea    ecx,[ecx+edi*2]
   1d27d:	cmp    WORD PTR [ecx],bx
   1d280:	je     0x1d29a
   1d282:	movzx  ebx,WORD PTR [ecx]
   1d285:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d28a:	mov    WORD PTR [eax+ebx*2],di
   1d28e:	movzx  ecx,WORD PTR [ecx]
   1d291:	lea    ecx,[ebp+ecx*2-0x44]
   1d295:	inc    WORD PTR [ecx]
   1d298:	xor    ebx,ebx
   1d29a:	inc    edi
   1d29b:	cmp    edi,DWORD PTR [ebp+0x10]
   1d29e:	jb     0x1d277
   1d2a0:	mov    ecx,DWORD PTR [ebp+0x8]
   1d2a3:	sub    ecx,ebx
   1d2a5:	je     0x1d2e8
   1d2a7:	dec    ecx
   1d2a8:	je     0x1d2c6
   1d2aa:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d2ae:	mov    DWORD PTR [ebp-0x6c],0x75160
   1d2b5:	mov    DWORD PTR [ebp-0x78],0x751a0
   1d2bc:	jmp    0x1d2f5
   1d2be:	or     eax,0xffffffff
   1d2c1:	jmp    0x1d54b
   1d2c6:	mov    ecx,0x202
   1d2cb:	mov    edi,0x750e0
   1d2d0:	sub    edi,ecx
   1d2d2:	mov    DWORD PTR [ebp-0x6c],edi
   1d2d5:	mov    edi,0x75120
   1d2da:	sub    edi,ecx
   1d2dc:	mov    DWORD PTR [ebp-0x78],edi
   1d2df:	mov    DWORD PTR [ebp-0x68],0x100
   1d2e6:	jmp    0x1d2f5
   1d2e8:	mov    DWORD PTR [ebp-0x78],eax
   1d2eb:	mov    DWORD PTR [ebp-0x6c],eax
   1d2ee:	mov    DWORD PTR [ebp-0x68],0x13
   1d2f5:	mov    ecx,DWORD PTR [ebp-0x54]
   1d2f8:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d2fc:	mov    edi,DWORD PTR [esi]
   1d2fe:	mov    eax,edx
   1d300:	xor    edx,edx
   1d302:	inc    edx
   1d303:	shl    edx,cl
   1d305:	cmp    DWORD PTR [ebp+0x8],0x1
   1d309:	mov    DWORD PTR [ebp-0x5c],ebx
   1d30c:	mov    DWORD PTR [ebp-0x84],eax
   1d312:	lea    ecx,[edx-0x1]
   1d315:	mov    DWORD PTR [ebp-0x50],ebx
   1d318:	mov    DWORD PTR [ebp-0x80],edx
   1d31b:	mov    DWORD PTR [ebp-0x64],edx
   1d31e:	mov    DWORD PTR [ebp-0x88],ecx
   1d324:	jne    0x1d336
   1d326:	cmp    edx,0x5b0
   1d32c:	jb     0x1d336
   1d32e:	xor    eax,eax
   1d330:	inc    eax
   1d331:	jmp    0x1d54b
   1d336:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d339:	mov    DWORD PTR [ebp-0x58],ecx
   1d33c:	mov    cl,al
   1d33e:	sub    cl,BYTE PTR [ebp-0x50]
   1d341:	mov    BYTE PTR [ebp-0x47],cl
   1d344:	mov    ecx,DWORD PTR [ebp-0x58]
   1d347:	movzx  edx,WORD PTR [ecx]
   1d34a:	movzx  ecx,dx
   1d34d:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d350:	jge    0x1d35c
   1d352:	mov    BYTE PTR [ebp-0x48],0x0
   1d356:	mov    WORD PTR [ebp-0x46],dx
   1d35a:	jmp    0x1d382
   1d35c:	jle    0x1d378
   1d35e:	mov    ecx,DWORD PTR [ebp-0x58]
   1d361:	movzx  ecx,WORD PTR [ecx]
   1d364:	mov    edx,DWORD PTR [ebp-0x78]
   1d367:	add    ecx,ecx
   1d369:	mov    dl,BYTE PTR [ecx+edx*1]
   1d36c:	mov    BYTE PTR [ebp-0x48],dl
   1d36f:	mov    edx,DWORD PTR [ebp-0x6c]
   1d372:	mov    cx,WORD PTR [ecx+edx*1]
   1d376:	jmp    0x1d37e
   1d378:	mov    BYTE PTR [ebp-0x48],0x60
   1d37c:	xor    ecx,ecx
   1d37e:	mov    WORD PTR [ebp-0x46],cx
   1d382:	xor    edx,edx
   1d384:	mov    ecx,eax
   1d386:	sub    ecx,DWORD PTR [ebp-0x50]
   1d389:	inc    edx
   1d38a:	shl    edx,cl
   1d38c:	mov    ecx,DWORD PTR [ebp-0x80]
   1d38f:	mov    DWORD PTR [ebp-0x4c],ecx
   1d392:	mov    DWORD PTR [ebp-0x70],ecx
   1d395:	mov    ecx,DWORD PTR [ebp-0x50]
   1d398:	shr    ebx,cl
   1d39a:	add    ebx,DWORD PTR [ebp-0x4c]
   1d39d:	lea    ecx,[edi+ebx*4]
   1d3a0:	sub    DWORD PTR [ebp-0x4c],edx
   1d3a3:	mov    ebx,edx
   1d3a5:	shl    ebx,0x2
   1d3a8:	sub    ecx,ebx
   1d3aa:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d3ae:	mov    ebx,DWORD PTR [ebp-0x48]
   1d3b1:	mov    DWORD PTR [ecx],ebx
   1d3b3:	jne    0x1d3a0
   1d3b5:	xor    edx,edx
   1d3b7:	lea    ecx,[eax-0x1]
   1d3ba:	inc    edx
   1d3bb:	shl    edx,cl
   1d3bd:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d3c0:	jmp    0x1d3c4
   1d3c2:	shr    edx,1
   1d3c4:	test   ecx,edx
   1d3c6:	jne    0x1d3c2
   1d3c8:	test   edx,edx
   1d3ca:	je     0x1d3d5
   1d3cc:	lea    ebx,[edx-0x1]
   1d3cf:	and    ebx,ecx
   1d3d1:	add    ebx,edx
   1d3d3:	jmp    0x1d3d7
   1d3d5:	xor    ebx,ebx
   1d3d7:	add    DWORD PTR [ebp-0x58],0x2
   1d3db:	lea    ecx,[ebp+eax*2-0x24]
   1d3df:	mov    edx,0xffff
   1d3e4:	add    WORD PTR [ecx],dx
   1d3e7:	movzx  ecx,WORD PTR [ecx]
   1d3ea:	mov    DWORD PTR [ebp-0x5c],ebx
   1d3ed:	test   cx,cx
   1d3f0:	jne    0x1d40e
   1d3f2:	cmp    eax,DWORD PTR [ebp-0x60]
   1d3f5:	je     0x1d4d1
   1d3fb:	mov    eax,DWORD PTR [ebp-0x58]
   1d3fe:	movzx  eax,WORD PTR [eax]
   1d401:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d404:	movzx  eax,WORD PTR [ecx+eax*2]
   1d408:	mov    DWORD PTR [ebp-0x84],eax
   1d40e:	mov    edx,DWORD PTR [ebp-0x54]
   1d411:	cmp    eax,edx
   1d413:	jbe    0x1d33c
   1d419:	mov    ecx,DWORD PTR [ebp-0x88]
   1d41f:	and    ecx,ebx
   1d421:	mov    DWORD PTR [ebp-0x8c],ecx
   1d427:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d42a:	je     0x1d33c
   1d430:	cmp    DWORD PTR [ebp-0x50],0x0
   1d434:	jne    0x1d439
   1d436:	mov    DWORD PTR [ebp-0x50],edx
   1d439:	mov    ecx,DWORD PTR [ebp-0x70]
   1d43c:	lea    edi,[edi+ecx*4]
   1d43f:	mov    ecx,eax
   1d441:	mov    eax,DWORD PTR [ebp-0x50]
   1d444:	xor    edx,edx
   1d446:	sub    ecx,eax
   1d448:	inc    edx
   1d449:	add    eax,ecx
   1d44b:	shl    edx,cl
   1d44d:	cmp    eax,DWORD PTR [ebp-0x60]
   1d450:	jae    0x1d47a
   1d452:	mov    DWORD PTR [ebp-0x4c],eax
   1d455:	lea    eax,[ebp+eax*2-0x24]
   1d459:	jmp    0x1d45e
   1d45b:	mov    eax,DWORD PTR [ebp-0x70]
   1d45e:	movzx  ebx,WORD PTR [eax]
   1d461:	sub    edx,ebx
   1d463:	test   edx,edx
   1d465:	jle    0x1d47a
   1d467:	inc    ecx
   1d468:	inc    DWORD PTR [ebp-0x4c]
   1d46b:	inc    eax
   1d46c:	inc    eax
   1d46d:	mov    DWORD PTR [ebp-0x70],eax
   1d470:	mov    eax,DWORD PTR [ebp-0x4c]
   1d473:	add    edx,edx
   1d475:	cmp    eax,DWORD PTR [ebp-0x60]
   1d478:	jb     0x1d45b
   1d47a:	xor    eax,eax
   1d47c:	inc    eax
   1d47d:	mov    edx,eax
   1d47f:	shl    edx,cl
   1d481:	add    DWORD PTR [ebp-0x64],edx
   1d484:	mov    DWORD PTR [ebp-0x80],edx
   1d487:	cmp    DWORD PTR [ebp+0x8],eax
   1d48a:	jne    0x1d499
   1d48c:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d493:	jae    0x1d54b
   1d499:	mov    eax,DWORD PTR [ebp-0x8c]
   1d49f:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d4a2:	mov    edx,eax
   1d4a4:	mov    DWORD PTR [ebp-0x74],eax
   1d4a7:	mov    eax,DWORD PTR [esi]
   1d4a9:	shl    edx,0x2
   1d4ac:	mov    BYTE PTR [edx+eax*1],cl
   1d4af:	mov    eax,DWORD PTR [esi]
   1d4b1:	mov    cl,BYTE PTR [ebp-0x54]
   1d4b4:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d4b8:	mov    eax,DWORD PTR [esi]
   1d4ba:	mov    ecx,edi
   1d4bc:	sub    ecx,eax
   1d4be:	sar    ecx,0x2
   1d4c1:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d4c6:	mov    eax,DWORD PTR [ebp-0x84]
   1d4cc:	jmp    0x1d33c
   1d4d1:	mov    cl,al
   1d4d3:	sub    cl,BYTE PTR [ebp-0x50]
   1d4d6:	mov    BYTE PTR [ebp-0x48],0x40
   1d4da:	mov    BYTE PTR [ebp-0x47],cl
   1d4dd:	xor    ecx,ecx
   1d4df:	mov    WORD PTR [ebp-0x46],cx
   1d4e3:	jmp    0x1d532
   1d4e5:	cmp    DWORD PTR [ebp-0x50],0x0
   1d4e9:	je     0x1d504
   1d4eb:	mov    ecx,DWORD PTR [ebp-0x88]
   1d4f1:	and    ecx,ebx
   1d4f3:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d4f6:	je     0x1d504
   1d4f8:	mov    eax,DWORD PTR [ebp-0x54]
   1d4fb:	and    DWORD PTR [ebp-0x50],0x0
   1d4ff:	mov    edi,DWORD PTR [esi]
   1d501:	mov    BYTE PTR [ebp-0x47],al
   1d504:	mov    ecx,DWORD PTR [ebp-0x50]
   1d507:	mov    edx,ebx
   1d509:	shr    edx,cl
   1d50b:	mov    ecx,DWORD PTR [ebp-0x48]
   1d50e:	mov    DWORD PTR [edi+edx*4],ecx
   1d511:	xor    edx,edx
   1d513:	lea    ecx,[eax-0x1]
   1d516:	inc    edx
   1d517:	shl    edx,cl
   1d519:	jmp    0x1d51d
   1d51b:	shr    edx,1
   1d51d:	test   ebx,edx
   1d51f:	jne    0x1d51b
   1d521:	test   edx,edx
   1d523:	je     0x1d530
   1d525:	lea    ecx,[edx-0x1]
   1d528:	and    ecx,ebx
   1d52a:	add    ecx,edx
   1d52c:	mov    ebx,ecx
   1d52e:	jmp    0x1d532
   1d530:	xor    ebx,ebx
   1d532:	test   ebx,ebx
   1d534:	jne    0x1d4e5
   1d536:	mov    eax,DWORD PTR [ebp-0x64]
   1d539:	mov    ecx,DWORD PTR [ebp-0x54]
   1d53c:	shl    eax,0x2
   1d53f:	add    DWORD PTR [esi],eax
   1d541:	mov    eax,DWORD PTR [ebp-0x90]
   1d547:	mov    DWORD PTR [eax],ecx
   1d549:	xor    eax,eax
   1d54b:	mov    ecx,DWORD PTR [ebp-0x4]
   1d54e:	pop    edi
   1d54f:	pop    esi
   1d550:	xor    ecx,ebp
   1d552:	pop    ebx
   1d553:	call   0x1da73
   1d558:	leave  
   1d559:	ret    0x18
   1d55c:	int3   
   1d55d:	int3   
   1d55e:	int3   
   1d55f:	int3   
   1d560:	int3   
   1d561:	int3   
   1d562:	mov    edi,edi
   1d564:	push   ebp
   1d565:	mov    ebp,esp
   1d567:	push   ebx
   1d568:	mov    ebx,DWORD PTR [ebp+0x10]
   1d56b:	push   esi
   1d56c:	mov    esi,DWORD PTR [ebp+0x8]
   1d56f:	push   edi
   1d570:	xor    eax,eax
   1d572:	mov    edi,esi
   1d574:	inc    eax
   1d575:	shr    edi,0x10
   1d578:	and    esi,0xffff
   1d57e:	cmp    ebx,eax
   1d580:	jne    0x1d5a6
   1d582:	mov    eax,DWORD PTR [ebp+0xc]
   1d585:	movzx  eax,BYTE PTR [eax]
   1d588:	add    esi,eax
   1d58a:	mov    eax,0xfff1
   1d58f:	cmp    esi,eax
   1d591:	jb     0x1d595
   1d593:	sub    esi,eax
   1d595:	add    edi,esi
   1d597:	cmp    edi,eax
   1d599:	jb     0x1d778
   1d59f:	sub    edi,eax
   1d5a1:	jmp    0x1d778
   1d5a6:	mov    ecx,DWORD PTR [ebp+0xc]
   1d5a9:	test   ecx,ecx
   1d5ab:	je     0x1d77f
   1d5b1:	cmp    ebx,0x10
   1d5b4:	jb     0x1d73b
   1d5ba:	cmp    ebx,0x15b0
   1d5c0:	jb     0x1d68e
   1d5c6:	mov    eax,ebx
   1d5c8:	mov    ebx,0x15b0
   1d5cd:	xor    edx,edx
   1d5cf:	div    ebx
   1d5d1:	mov    ebx,DWORD PTR [ebp+0x10]
   1d5d4:	mov    DWORD PTR [ebp+0xc],eax
   1d5d7:	sub    ebx,0x15b0
   1d5dd:	mov    eax,0x15b
   1d5e2:	movzx  edx,BYTE PTR [ecx]
   1d5e5:	add    esi,edx
   1d5e7:	movzx  edx,BYTE PTR [ecx+0x1]
   1d5eb:	add    edi,esi
   1d5ed:	add    esi,edx
   1d5ef:	movzx  edx,BYTE PTR [ecx+0x2]
   1d5f3:	add    edi,esi
   1d5f5:	add    esi,edx
   1d5f7:	movzx  edx,BYTE PTR [ecx+0x3]
   1d5fb:	add    edi,esi
   1d5fd:	add    esi,edx
   1d5ff:	movzx  edx,BYTE PTR [ecx+0x4]
   1d603:	add    edi,esi
   1d605:	add    esi,edx
   1d607:	movzx  edx,BYTE PTR [ecx+0x5]
   1d60b:	add    edi,esi
   1d60d:	add    esi,edx
   1d60f:	movzx  edx,BYTE PTR [ecx+0x6]
   1d613:	add    edi,esi
   1d615:	add    esi,edx
   1d617:	movzx  edx,BYTE PTR [ecx+0x7]
   1d61b:	add    edi,esi
   1d61d:	add    esi,edx
   1d61f:	movzx  edx,BYTE PTR [ecx+0x8]
   1d623:	add    edi,esi
   1d625:	add    esi,edx
   1d627:	movzx  edx,BYTE PTR [ecx+0x9]
   1d62b:	add    edi,esi
   1d62d:	add    esi,edx
   1d62f:	movzx  edx,BYTE PTR [ecx+0xa]
   1d633:	add    edi,esi
   1d635:	add    esi,edx
   1d637:	movzx  edx,BYTE PTR [ecx+0xb]
   1d63b:	add    edi,esi
   1d63d:	add    esi,edx
   1d63f:	movzx  edx,BYTE PTR [ecx+0xc]
   1d643:	add    edi,esi
   1d645:	add    esi,edx
   1d647:	movzx  edx,BYTE PTR [ecx+0xd]
   1d64b:	add    edi,esi
   1d64d:	add    esi,edx
   1d64f:	movzx  edx,BYTE PTR [ecx+0xe]
   1d653:	add    edi,esi
   1d655:	add    esi,edx
   1d657:	movzx  edx,BYTE PTR [ecx+0xf]
   1d65b:	add    edi,esi
   1d65d:	add    esi,edx
   1d65f:	add    edi,esi
   1d661:	add    ecx,0x10
   1d664:	dec    eax
   1d665:	jne    0x1d5e2
   1d66b:	mov    eax,esi
   1d66d:	xor    edx,edx
   1d66f:	mov    esi,0xfff1
   1d674:	div    esi
   1d676:	mov    eax,edi
   1d678:	mov    edi,0xfff1
   1d67d:	mov    esi,edx
   1d67f:	xor    edx,edx
   1d681:	div    edi
   1d683:	dec    DWORD PTR [ebp+0xc]
   1d686:	mov    edi,edx
   1d688:	jne    0x1d5d7
   1d68e:	test   ebx,ebx
   1d690:	je     0x1d778
   1d696:	cmp    ebx,0x10
   1d699:	jb     0x1d75d
   1d69f:	mov    eax,ebx
   1d6a1:	shr    eax,0x4
   1d6a4:	movzx  edx,BYTE PTR [ecx]
   1d6a7:	add    esi,edx
   1d6a9:	movzx  edx,BYTE PTR [ecx+0x1]
   1d6ad:	add    edi,esi
   1d6af:	add    esi,edx
   1d6b1:	movzx  edx,BYTE PTR [ecx+0x2]
   1d6b5:	add    edi,esi
   1d6b7:	add    esi,edx
   1d6b9:	movzx  edx,BYTE PTR [ecx+0x3]
   1d6bd:	add    edi,esi
   1d6bf:	add    esi,edx
   1d6c1:	movzx  edx,BYTE PTR [ecx+0x4]
   1d6c5:	add    edi,esi
   1d6c7:	add    esi,edx
   1d6c9:	movzx  edx,BYTE PTR [ecx+0x5]
   1d6cd:	add    edi,esi
   1d6cf:	add    esi,edx
   1d6d1:	movzx  edx,BYTE PTR [ecx+0x6]
   1d6d5:	add    edi,esi
   1d6d7:	add    esi,edx
   1d6d9:	movzx  edx,BYTE PTR [ecx+0x7]
   1d6dd:	add    edi,esi
   1d6df:	add    esi,edx
   1d6e1:	movzx  edx,BYTE PTR [ecx+0x8]
   1d6e5:	add    edi,esi
   1d6e7:	add    esi,edx
   1d6e9:	movzx  edx,BYTE PTR [ecx+0x9]
   1d6ed:	add    edi,esi
   1d6ef:	add    esi,edx
   1d6f1:	movzx  edx,BYTE PTR [ecx+0xa]
   1d6f5:	add    edi,esi
   1d6f7:	add    esi,edx
   1d6f9:	movzx  edx,BYTE PTR [ecx+0xb]
   1d6fd:	add    edi,esi
   1d6ff:	add    esi,edx
   1d701:	movzx  edx,BYTE PTR [ecx+0xc]
   1d705:	add    edi,esi
   1d707:	add    esi,edx
   1d709:	movzx  edx,BYTE PTR [ecx+0xd]
   1d70d:	add    edi,esi
   1d70f:	add    esi,edx
   1d711:	movzx  edx,BYTE PTR [ecx+0xe]
   1d715:	add    edi,esi
   1d717:	add    esi,edx
   1d719:	movzx  edx,BYTE PTR [ecx+0xf]
   1d71d:	add    edi,esi
   1d71f:	add    esi,edx
   1d721:	sub    ebx,0x10
   1d724:	add    edi,esi
   1d726:	add    ecx,0x10
   1d729:	dec    eax
   1d72a:	jne    0x1d6a4
   1d730:	jmp    0x1d75d
   1d732:	movzx  eax,BYTE PTR [ecx]
   1d735:	dec    ebx
   1d736:	add    esi,eax
   1d738:	inc    ecx
   1d739:	add    edi,esi
   1d73b:	test   ebx,ebx
   1d73d:	jne    0x1d732
   1d73f:	mov    ecx,0xfff1
   1d744:	cmp    esi,ecx
   1d746:	jb     0x1d74a
   1d748:	sub    esi,ecx
   1d74a:	mov    eax,edi
   1d74c:	xor    edx,edx
   1d74e:	div    ecx
   1d750:	mov    eax,edx
   1d752:	jmp    0x1d77a
   1d754:	movzx  eax,BYTE PTR [ecx]
   1d757:	dec    ebx
   1d758:	add    esi,eax
   1d75a:	inc    ecx
   1d75b:	add    edi,esi
   1d75d:	test   ebx,ebx
   1d75f:	jne    0x1d754
   1d761:	mov    eax,esi
   1d763:	mov    ecx,0xfff1
   1d768:	xor    edx,edx
   1d76a:	mov    esi,ecx
   1d76c:	div    esi
   1d76e:	mov    eax,edi
   1d770:	mov    esi,edx
   1d772:	xor    edx,edx
   1d774:	div    ecx
   1d776:	mov    edi,edx
   1d778:	mov    eax,edi
   1d77a:	shl    eax,0x10
   1d77d:	or     eax,esi
   1d77f:	pop    edi
   1d780:	pop    esi
   1d781:	pop    ebx
   1d782:	pop    ebp
   1d783:	ret    0xc
   1d786:	int3   
   1d787:	int3   
   1d788:	int3   
   1d789:	int3   
   1d78a:	int3   
   1d78b:	int3   
   1d78c:	mov    edi,edi
   1d78e:	push   ebp
   1d78f:	mov    ebp,esp
   1d791:	push   ecx
   1d792:	cmp    DWORD PTR [ebp+0x8],0x0
   1d796:	push   esi
   1d797:	not    eax
   1d799:	mov    ecx,0xff
   1d79e:	je     0x1d7bc
   1d7a0:	test   dl,0x3
   1d7a3:	je     0x1d7bc
   1d7a5:	movzx  esi,BYTE PTR [edx]
   1d7a8:	xor    esi,eax
   1d7aa:	and    esi,ecx
   1d7ac:	shr    eax,0x8
   1d7af:	xor    eax,DWORD PTR [esi*4+0x751e0]
   1d7b6:	inc    edx
   1d7b7:	dec    DWORD PTR [ebp+0x8]
   1d7ba:	jne    0x1d7a0
   1d7bc:	cmp    DWORD PTR [ebp+0x8],0x20
   1d7c0:	push   ebx
   1d7c1:	push   edi
   1d7c2:	push   0x4
   1d7c4:	mov    esi,edx
   1d7c6:	pop    edi
   1d7c7:	jb     0x1d98b
   1d7cd:	mov    edx,DWORD PTR [ebp+0x8]
   1d7d0:	shr    edx,0x5
   1d7d3:	mov    DWORD PTR [ebp-0x4],edx
   1d7d6:	xor    eax,DWORD PTR [esi]
   1d7d8:	add    esi,edi
   1d7da:	mov    edx,eax
   1d7dc:	shr    edx,0x10
   1d7df:	mov    ebx,eax
   1d7e1:	shr    ebx,0x8
   1d7e4:	and    edx,ecx
   1d7e6:	mov    edx,DWORD PTR [edx*4+0x755e0]
   1d7ed:	and    ebx,ecx
   1d7ef:	xor    edx,DWORD PTR [ebx*4+0x759e0]
   1d7f6:	mov    ebx,eax
   1d7f8:	shr    ebx,0x18
   1d7fb:	xor    edx,DWORD PTR [ebx*4+0x751e0]
   1d802:	and    eax,ecx
   1d804:	xor    edx,DWORD PTR [eax*4+0x75de0]
   1d80b:	xor    edx,DWORD PTR [esi]
   1d80d:	add    esi,edi
   1d80f:	mov    eax,edx
   1d811:	shr    eax,0x10
   1d814:	mov    ebx,edx
   1d816:	shr    ebx,0x8
   1d819:	and    eax,ecx
   1d81b:	mov    eax,DWORD PTR [eax*4+0x755e0]
   1d822:	and    ebx,ecx
   1d824:	xor    eax,DWORD PTR [ebx*4+0x759e0]
   1d82b:	mov    ebx,edx
   1d82d:	shr    ebx,0x18
   1d830:	xor    eax,DWORD PTR [ebx*4+0x751e0]
   1d837:	and    edx,ecx
   1d839:	xor    eax,DWORD PTR [edx*4+0x75de0]
   1d840:	xor    eax,DWORD PTR [esi]
   1d842:	add    esi,edi
   1d844:	mov    edx,eax
   1d846:	shr    edx,0x10
   1d849:	mov    ebx,eax
   1d84b:	and    edx,ecx
   1d84d:	mov    edx,DWORD PTR [edx*4+0x755e0]
   1d854:	shr    ebx,0x8
   1d857:	and    ebx,ecx
   1d859:	xor    edx,DWORD PTR [ebx*4+0x759e0]
   1d860:	mov    ebx,eax
   1d862:	shr    ebx,0x18
   1d865:	xor    edx,DWORD PTR [ebx*4+0x751e0]
   1d86c:	and    eax,ecx
   1d86e:	xor    edx,DWORD PTR [eax*4+0x75de0]
   1d875:	xor    edx,DWORD PTR [esi]
   1d877:	add    esi,edi
   1d879:	mov    eax,edx
   1d87b:	shr    eax,0x10
   1d87e:	mov    ebx,edx
   1d880:	shr    ebx,0x8
   1d883:	and    eax,ecx
   1d885:	mov    eax,DWORD PTR [eax*4+0x755e0]
   1d88c:	and    ebx,ecx
   1d88e:	xor    eax,DWORD PTR [ebx*4+0x759e0]
   1d895:	mov    ebx,edx
   1d897:	shr    ebx,0x18
   1d89a:	xor    eax,DWORD PTR [ebx*4+0x751e0]
   1d8a1:	and    edx,ecx
   1d8a3:	xor    eax,DWORD PTR [edx*4+0x75de0]
   1d8aa:	xor    eax,DWORD PTR [esi]
   1d8ac:	add    esi,edi
   1d8ae:	mov    edx,eax
   1d8b0:	shr    edx,0x10
   1d8b3:	mov    ebx,eax
   1d8b5:	and    edx,ecx
   1d8b7:	mov    edx,DWORD PTR [edx*4+0x755e0]
   1d8be:	shr    ebx,0x8
   1d8c1:	and    ebx,ecx
   1d8c3:	xor    edx,DWORD PTR [ebx*4+0x759e0]
   1d8ca:	mov    ebx,eax
   1d8cc:	shr    ebx,0x18
   1d8cf:	xor    edx,DWORD PTR [ebx*4+0x751e0]
   1d8d6:	and    eax,ecx
   1d8d8:	xor    edx,DWORD PTR [eax*4+0x75de0]
   1d8df:	xor    edx,DWORD PTR [esi]
   1d8e1:	add    esi,edi
   1d8e3:	mov    eax,edx
   1d8e5:	shr    eax,0x10
   1d8e8:	and    eax,ecx
   1d8ea:	mov    ebx,edx
   1d8ec:	mov    eax,DWORD PTR [eax*4+0x755e0]
   1d8f3:	shr    ebx,0x8
   1d8f6:	and    ebx,ecx
   1d8f8:	xor    eax,DWORD PTR [ebx*4+0x759e0]
   1d8ff:	mov    ebx,edx
   1d901:	shr    ebx,0x18
   1d904:	xor    eax,DWORD PTR [ebx*4+0x751e0]
   1d90b:	and    edx,ecx
   1d90d:	xor    eax,DWORD PTR [edx*4+0x75de0]
   1d914:	sub    DWORD PTR [ebp+0x8],0x20
   1d918:	xor    eax,DWORD PTR [esi]
   1d91a:	add    esi,edi
   1d91c:	mov    edx,eax
   1d91e:	mov    ebx,eax
   1d920:	shr    edx,0x10
   1d923:	shr    ebx,0x8
   1d926:	and    edx,ecx
   1d928:	mov    edx,DWORD PTR [edx*4+0x755e0]
   1d92f:	and    ebx,ecx
   1d931:	xor    edx,DWORD PTR [ebx*4+0x759e0]
   1d938:	mov    ebx,eax
   1d93a:	shr    ebx,0x18
   1d93d:	xor    edx,DWORD PTR [ebx*4+0x751e0]
   1d944:	and    eax,ecx
   1d946:	xor    edx,DWORD PTR [eax*4+0x75de0]
   1d94d:	xor    edx,DWORD PTR [esi]
   1d94f:	add    esi,edi
   1d951:	mov    eax,edx
   1d953:	shr    eax,0x10
   1d956:	and    eax,ecx
   1d958:	mov    eax,DWORD PTR [eax*4+0x755e0]
   1d95f:	mov    ebx,edx
   1d961:	shr    ebx,0x8
   1d964:	and    ebx,ecx
   1d966:	xor    eax,DWORD PTR [ebx*4+0x759e0]
   1d96d:	mov    ebx,edx
   1d96f:	shr    ebx,0x18
   1d972:	xor    eax,DWORD PTR [ebx*4+0x751e0]
   1d979:	and    edx,ecx
   1d97b:	xor    eax,DWORD PTR [edx*4+0x75de0]
   1d982:	dec    DWORD PTR [ebp-0x4]
   1d985:	jne    0x1d7d6
   1d98b:	cmp    DWORD PTR [ebp+0x8],edi
   1d98e:	jb     0x1d9d8
   1d990:	mov    edx,DWORD PTR [ebp+0x8]
   1d993:	shr    edx,0x2
   1d996:	mov    DWORD PTR [ebp-0x4],edx
   1d999:	xor    eax,DWORD PTR [esi]
   1d99b:	sub    DWORD PTR [ebp+0x8],edi
   1d99e:	mov    edx,eax
   1d9a0:	shr    edx,0x10
   1d9a3:	and    edx,ecx
   1d9a5:	mov    edx,DWORD PTR [edx*4+0x755e0]
   1d9ac:	mov    ebx,eax
   1d9ae:	shr    ebx,0x8
   1d9b1:	and    ebx,ecx
   1d9b3:	xor    edx,DWORD PTR [ebx*4+0x759e0]
   1d9ba:	mov    ebx,eax
   1d9bc:	shr    ebx,0x18
   1d9bf:	xor    edx,DWORD PTR [ebx*4+0x751e0]
   1d9c6:	and    eax,ecx
   1d9c8:	xor    edx,DWORD PTR [eax*4+0x75de0]
   1d9cf:	add    esi,edi
   1d9d1:	dec    DWORD PTR [ebp-0x4]
   1d9d4:	mov    eax,edx
   1d9d6:	jne    0x1d999
   1d9d8:	cmp    DWORD PTR [ebp+0x8],0x0
   1d9dc:	pop    edi
   1d9dd:	pop    ebx
   1d9de:	je     0x1d9f7
   1d9e0:	movzx  edx,BYTE PTR [esi]
   1d9e3:	xor    edx,eax
   1d9e5:	and    edx,ecx
   1d9e7:	shr    eax,0x8
   1d9ea:	xor    eax,DWORD PTR [edx*4+0x751e0]
   1d9f1:	inc    esi
   1d9f2:	dec    DWORD PTR [ebp+0x8]
   1d9f5:	jne    0x1d9e0
   1d9f7:	not    eax
   1d9f9:	pop    esi
   1d9fa:	leave  
   1d9fb:	ret    0x4
   1d9fe:	int3   
   1d9ff:	int3   
   1da00:	int3   
   1da01:	int3   
   1da02:	int3   
   1da03:	int3   
   1da04:	mov    edi,edi
   1da06:	push   ebp
   1da07:	mov    ebp,esp
   1da09:	mov    edx,DWORD PTR [ebp+0xc]
   1da0c:	test   edx,edx
   1da0e:	jne    0x1da14
   1da10:	xor    eax,eax
   1da12:	jmp    0x1da1f
   1da14:	push   DWORD PTR [ebp+0x10]
   1da17:	mov    eax,DWORD PTR [ebp+0x8]
   1da1a:	call   0x1d78c
   1da1f:	pop    ebp
   1da20:	ret    0xc
   1da23:	int3   
   1da24:	int3   
   1da25:	int3   
   1da26:	int3   
   1da27:	int3   
   1da28:	mov    edi,edi
   1da2a:	push   ebp
   1da2b:	mov    ebp,esp
   1da2d:	push   0x20
   1da2f:	push   0x61737973
   1da34:	push   DWORD PTR [ebp+0x8]
   1da37:	push   0x1
   1da39:	call   DWORD PTR ds:0x1f060
   1da3f:	test   eax,eax
   1da41:	jne    0x1da4e
   1da43:	push   0xc000009a
   1da48:	call   DWORD PTR ds:0x1f040
   1da4e:	pop    ebp
   1da4f:	ret    
   1da50:	int3   
   1da51:	int3   
   1da52:	int3   
   1da53:	int3   
   1da54:	int3   
   1da55:	int3   
   1da56:	mov    edi,edi
   1da58:	push   ebp
   1da59:	mov    ebp,esp
   1da5b:	cmp    DWORD PTR [ebp+0x8],0x0
   1da5f:	je     0x1da6c
   1da61:	push   0x0
   1da63:	push   DWORD PTR [ebp+0x8]
   1da66:	call   DWORD PTR ds:0x1f014
   1da6c:	pop    ebp
   1da6d:	ret    
   1da6e:	int3   
   1da6f:	int3   
   1da70:	int3   
   1da71:	int3   
   1da72:	int3   
   1da73:	cmp    ecx,DWORD PTR ds:0x7771c
   1da79:	jne    0x1da7e
   1da7b:	ret    0x0
   1da7e:	jmp    0x1da88
   1da83:	int3   
   1da84:	int3   
   1da85:	int3   
   1da86:	int3   
   1da87:	int3   
   1da88:	mov    edi,edi
   1da8a:	push   ebp
   1da8b:	mov    ebp,esp
   1da8d:	push   ecx
   1da8e:	mov    DWORD PTR [ebp-0x4],ecx
   1da91:	push   0x0
   1da93:	push   DWORD PTR ds:0x77720
   1da99:	push   DWORD PTR ds:0x7771c
   1da9f:	push   DWORD PTR [ebp-0x4]
   1daa2:	push   0xf7
   1daa7:	call   DWORD PTR ds:0x1f058
   1daad:	int3   
   1daae:	int3   
   1daaf:	int3   
   1dab0:	int3   
   1dab1:	int3   
   1dab2:	int3   
   1dab3:	int3   
   1dab4:	jmp    DWORD PTR ds:0x1f00c
   1daba:	int3   
   1dabb:	int3   
   1dabc:	int3   
   1dabd:	int3   
   1dabe:	int3   
   1dabf:	int3   
   1dac0:	jmp    DWORD PTR ds:0x1f010
   1dac6:	int3   
   1dac7:	int3   
   1dac8:	int3   
   1dac9:	int3   
   1daca:	int3   
   1dacb:	int3   
   1dacc:	jmp    DWORD PTR ds:0x1f024
   1dad2:	int3   
   1dad3:	int3   
   1dad4:	int3   
   1dad5:	int3   
   1dad6:	int3   
   1dad7:	int3   
   1dad8:	jmp    DWORD PTR ds:0x1f030
   1dade:	int3   
   1dadf:	int3   
   1dae0:	int3   
   1dae1:	int3   
   1dae2:	int3   
   1dae3:	int3   
   1dae4:	jmp    DWORD PTR ds:0x1f038
   1daea:	int3   
   1daeb:	int3   
   1daec:	int3   
   1daed:	int3   
   1daee:	int3   
   1daef:	int3   
   1daf0:	jmp    DWORD PTR ds:0x1f048
   1daf6:	int3   
   1daf7:	int3   
   1daf8:	int3   
   1daf9:	int3   
   1dafa:	int3   
   1dafb:	int3   
   1dafc:	jmp    DWORD PTR ds:0x1f050
   1db02:	int3   
   1db03:	int3   
   1db04:	int3   
   1db05:	int3   
   1db06:	int3   
   1db07:	int3   
   1db08:	push   0x1db70
   1db0d:	push   DWORD PTR fs:0x0
   1db14:	mov    eax,DWORD PTR [esp+0x10]
   1db18:	mov    DWORD PTR [esp+0x10],ebp
   1db1c:	lea    ebp,[esp+0x10]
   1db20:	sub    esp,eax
   1db22:	push   ebx
   1db23:	push   esi
   1db24:	push   edi
   1db25:	mov    eax,ds:0x7771c
   1db2a:	xor    DWORD PTR [ebp-0x4],eax
   1db2d:	xor    eax,ebp
   1db2f:	push   eax
   1db30:	mov    DWORD PTR [ebp-0x18],esp
   1db33:	push   DWORD PTR [ebp-0x8]
   1db36:	mov    eax,DWORD PTR [ebp-0x4]
   1db39:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1db40:	mov    DWORD PTR [ebp-0x8],eax
   1db43:	lea    eax,[ebp-0x10]
   1db46:	mov    fs:0x0,eax
   1db4c:	ret    
   1db4d:	mov    ecx,DWORD PTR [ebp-0x10]
   1db50:	mov    DWORD PTR fs:0x0,ecx
   1db57:	pop    ecx
   1db58:	pop    edi
   1db59:	pop    edi
   1db5a:	pop    esi
   1db5b:	pop    ebx
   1db5c:	mov    esp,ebp
   1db5e:	pop    ebp
   1db5f:	push   ecx
   1db60:	ret    
   1db61:	int3   
   1db62:	int3   
   1db63:	int3   
   1db64:	int3   
   1db65:	int3   
   1db66:	int3   
   1db67:	int3   
   1db68:	int3   
   1db69:	int3   
   1db6a:	int3   
   1db6b:	int3   
   1db6c:	int3   
   1db6d:	int3   
   1db6e:	int3   
   1db6f:	int3   
   1db70:	mov    edi,edi
   1db72:	push   ebp
   1db73:	mov    ebp,esp
   1db75:	sub    esp,0x14
   1db78:	push   ebx
   1db79:	mov    ebx,DWORD PTR [ebp+0xc]
   1db7c:	push   esi
   1db7d:	mov    esi,DWORD PTR [ebx+0x8]
   1db80:	xor    esi,DWORD PTR ds:0x7771c
   1db86:	push   edi
   1db87:	mov    eax,DWORD PTR [esi]
   1db89:	mov    BYTE PTR [ebp-0x1],0x0
   1db8d:	mov    DWORD PTR [ebp-0x8],0x1
   1db94:	lea    edi,[ebx+0x10]
   1db97:	cmp    eax,0xfffffffe
   1db9a:	je     0x1dba9
   1db9c:	mov    ecx,DWORD PTR [esi+0x4]
   1db9f:	add    ecx,edi
   1dba1:	xor    ecx,DWORD PTR [eax+edi*1]
   1dba4:	call   0x1da73
   1dba9:	mov    ecx,DWORD PTR [esi+0xc]
   1dbac:	mov    eax,DWORD PTR [esi+0x8]
   1dbaf:	add    ecx,edi
   1dbb1:	xor    ecx,DWORD PTR [eax+edi*1]
   1dbb4:	call   0x1da73
   1dbb9:	mov    eax,DWORD PTR [ebp+0x8]
   1dbbc:	test   BYTE PTR [eax+0x4],0x66
   1dbc0:	jne    0x1dca8
   1dbc6:	mov    ecx,DWORD PTR [ebp+0x10]
   1dbc9:	lea    edx,[ebp-0x14]
   1dbcc:	mov    DWORD PTR [ebx-0x4],edx
   1dbcf:	mov    ebx,DWORD PTR [ebx+0xc]
   1dbd2:	mov    DWORD PTR [ebp-0x14],eax
   1dbd5:	mov    DWORD PTR [ebp-0x10],ecx
   1dbd8:	cmp    ebx,0xfffffffe
   1dbdb:	je     0x1dc3c
   1dbdd:	lea    ecx,[ecx+0x0]
   1dbe0:	lea    eax,[ebx+ebx*2]
   1dbe3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1dbe7:	lea    eax,[esi+eax*4+0x10]
   1dbeb:	mov    DWORD PTR [ebp-0xc],eax
   1dbee:	mov    eax,DWORD PTR [eax]
   1dbf0:	mov    DWORD PTR [ebp+0x8],eax
   1dbf3:	test   ecx,ecx
   1dbf5:	je     0x1dc0b
   1dbf7:	mov    edx,edi
   1dbf9:	call   0x1ddb1
   1dbfe:	mov    BYTE PTR [ebp-0x1],0x1
   1dc02:	test   eax,eax
   1dc04:	jl     0x1dc46
   1dc06:	jg     0x1dc4f
   1dc08:	mov    eax,DWORD PTR [ebp+0x8]
   1dc0b:	mov    ebx,eax
   1dc0d:	cmp    eax,0xfffffffe
   1dc10:	jne    0x1dbe0
   1dc12:	cmp    BYTE PTR [ebp-0x1],0x0
   1dc16:	je     0x1dc3c
   1dc18:	mov    eax,DWORD PTR [esi]
   1dc1a:	cmp    eax,0xfffffffe
   1dc1d:	je     0x1dc2c
   1dc1f:	mov    ecx,DWORD PTR [esi+0x4]
   1dc22:	add    ecx,edi
   1dc24:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc27:	call   0x1da73
   1dc2c:	mov    ecx,DWORD PTR [esi+0xc]
   1dc2f:	mov    edx,DWORD PTR [esi+0x8]
   1dc32:	add    ecx,edi
   1dc34:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc37:	call   0x1da73
   1dc3c:	mov    eax,DWORD PTR [ebp-0x8]
   1dc3f:	pop    edi
   1dc40:	pop    esi
   1dc41:	pop    ebx
   1dc42:	mov    esp,ebp
   1dc44:	pop    ebp
   1dc45:	ret    
   1dc46:	mov    DWORD PTR [ebp-0x8],0x0
   1dc4d:	jmp    0x1dc18
   1dc4f:	mov    ecx,DWORD PTR [ebp+0xc]
   1dc52:	call   0x1ddda
   1dc57:	mov    eax,DWORD PTR [ebp+0xc]
   1dc5a:	cmp    DWORD PTR [eax+0xc],ebx
   1dc5d:	je     0x1dc71
   1dc5f:	push   0x7771c
   1dc64:	push   edi
   1dc65:	mov    edx,ebx
   1dc67:	mov    ecx,eax
   1dc69:	call   0x1ddf4
   1dc6e:	mov    eax,DWORD PTR [ebp+0xc]
   1dc71:	mov    ecx,DWORD PTR [ebp+0x8]
   1dc74:	mov    DWORD PTR [eax+0xc],ecx
   1dc77:	mov    eax,DWORD PTR [esi]
   1dc79:	cmp    eax,0xfffffffe
   1dc7c:	je     0x1dc8b
   1dc7e:	mov    ecx,DWORD PTR [esi+0x4]
   1dc81:	add    ecx,edi
   1dc83:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc86:	call   0x1da73
   1dc8b:	mov    ecx,DWORD PTR [esi+0xc]
   1dc8e:	mov    edx,DWORD PTR [esi+0x8]
   1dc91:	add    ecx,edi
   1dc93:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc96:	call   0x1da73
   1dc9b:	mov    eax,DWORD PTR [ebp-0xc]
   1dc9e:	mov    ecx,DWORD PTR [eax+0x8]
   1dca1:	mov    edx,edi
   1dca3:	call   0x1ddc8
   1dca8:	mov    edx,0xfffffffe
   1dcad:	cmp    DWORD PTR [ebx+0xc],edx
   1dcb0:	je     0x1dc3c
   1dcb2:	push   0x7771c
   1dcb7:	push   edi
   1dcb8:	mov    ecx,ebx
   1dcba:	call   0x1ddf4
   1dcbf:	jmp    0x1dc18
   1dcc4:	int3   
   1dcc5:	int3   
   1dcc6:	int3   
   1dcc7:	int3   
   1dcc8:	int3   
   1dcc9:	int3   
   1dcca:	int3   
   1dccb:	int3   
   1dccc:	push   ebx
   1dccd:	push   esi
   1dcce:	push   edi
   1dccf:	mov    edx,DWORD PTR [esp+0x10]
   1dcd3:	mov    eax,DWORD PTR [esp+0x14]
   1dcd7:	mov    ecx,DWORD PTR [esp+0x18]
   1dcdb:	push   ebp
   1dcdc:	push   edx
   1dcdd:	push   eax
   1dcde:	push   ecx
   1dcdf:	push   ecx
   1dce0:	push   0x1dd4f
   1dce5:	push   DWORD PTR fs:0x0
   1dcec:	mov    eax,ds:0x7771c
   1dcf1:	xor    eax,esp
   1dcf3:	mov    DWORD PTR [esp+0x8],eax
   1dcf7:	mov    DWORD PTR fs:0x0,esp
   1dcfe:	mov    eax,DWORD PTR [esp+0x30]
   1dd02:	mov    ebx,DWORD PTR [eax+0x8]
   1dd05:	mov    ecx,DWORD PTR [esp+0x2c]
   1dd09:	xor    ebx,DWORD PTR [ecx]
   1dd0b:	mov    esi,DWORD PTR [eax+0xc]
   1dd0e:	cmp    esi,0xfffffffe
   1dd11:	je     0x1dd41
   1dd13:	mov    edx,DWORD PTR [esp+0x34]
   1dd17:	cmp    edx,0xfffffffe
   1dd1a:	je     0x1dd20
   1dd1c:	cmp    esi,edx
   1dd1e:	jbe    0x1dd41
   1dd20:	lea    esi,[esi+esi*2]
   1dd23:	lea    ebx,[ebx+esi*4+0x10]
   1dd27:	mov    ecx,DWORD PTR [ebx]
   1dd29:	mov    DWORD PTR [eax+0xc],ecx
   1dd2c:	cmp    DWORD PTR [ebx+0x4],0x0
   1dd30:	jne    0x1dcfe
   1dd32:	mov    ecx,0x1
   1dd37:	mov    eax,DWORD PTR [ebx+0x8]
   1dd3a:	call   0x1de6c
   1dd3f:	jmp    0x1dcfe
   1dd41:	pop    DWORD PTR fs:0x0
   1dd48:	add    esp,0x18
   1dd4b:	pop    edi
   1dd4c:	pop    esi
   1dd4d:	pop    ebx
   1dd4e:	ret    
   1dd4f:	mov    ecx,DWORD PTR [esp+0x4]
   1dd53:	test   DWORD PTR [ecx+0x4],0x6
   1dd5a:	mov    eax,0x1
   1dd5f:	je     0x1dd94
   1dd61:	mov    eax,DWORD PTR [esp+0x8]
   1dd65:	mov    ecx,DWORD PTR [eax+0x8]
   1dd68:	xor    ecx,eax
   1dd6a:	call   0x1da73
   1dd6f:	push   ebp
   1dd70:	mov    ebp,DWORD PTR [eax+0x18]
   1dd73:	push   DWORD PTR [eax+0xc]
   1dd76:	push   DWORD PTR [eax+0x10]
   1dd79:	push   DWORD PTR [eax+0x14]
   1dd7c:	call   0x1dccc
   1dd81:	add    esp,0xc
   1dd84:	pop    ebp
   1dd85:	mov    eax,DWORD PTR [esp+0x8]
   1dd89:	mov    edx,DWORD PTR [esp+0x10]
   1dd8d:	mov    DWORD PTR [edx],eax
   1dd8f:	mov    eax,0x3
   1dd94:	ret    
   1dd95:	push   ebp
   1dd96:	mov    ecx,DWORD PTR [esp+0x8]
   1dd9a:	mov    ebp,DWORD PTR [ecx]
   1dd9c:	push   DWORD PTR [ecx+0x1c]
   1dd9f:	push   DWORD PTR [ecx+0x18]
   1dda2:	push   DWORD PTR [ecx+0x28]
   1dda5:	call   0x1dccc
   1ddaa:	add    esp,0xc
   1ddad:	pop    ebp
   1ddae:	ret    0x4
   1ddb1:	push   ebp
   1ddb2:	push   esi
   1ddb3:	push   edi
   1ddb4:	push   ebx
   1ddb5:	mov    ebp,edx
   1ddb7:	xor    eax,eax
   1ddb9:	xor    ebx,ebx
   1ddbb:	xor    edx,edx
   1ddbd:	xor    esi,esi
   1ddbf:	xor    edi,edi
   1ddc1:	call   ecx
   1ddc3:	pop    ebx
   1ddc4:	pop    edi
   1ddc5:	pop    esi
   1ddc6:	pop    ebp
   1ddc7:	ret    
   1ddc8:	mov    ebp,edx
   1ddca:	mov    esi,ecx
   1ddcc:	mov    eax,ecx
   1ddce:	xor    eax,eax
   1ddd0:	xor    ebx,ebx
   1ddd2:	xor    ecx,ecx
   1ddd4:	xor    edx,edx
   1ddd6:	xor    edi,edi
   1ddd8:	jmp    esi
   1ddda:	push   ebp
   1dddb:	mov    ebp,esp
   1dddd:	push   ebx
   1ddde:	push   esi
   1dddf:	push   edi
   1dde0:	push   0x0
   1dde2:	push   0x0
   1dde4:	push   0x1ddef
   1dde9:	push   ecx
   1ddea:	call   0x1de74
   1ddef:	pop    edi
   1ddf0:	pop    esi
   1ddf1:	pop    ebx
   1ddf2:	pop    ebp
   1ddf3:	ret    
   1ddf4:	push   ebp
   1ddf5:	mov    ebp,DWORD PTR [esp+0x8]
   1ddf9:	push   edx
   1ddfa:	push   ecx
   1ddfb:	push   DWORD PTR [esp+0x14]
   1ddff:	call   0x1dccc
   1de04:	add    esp,0xc
   1de07:	pop    ebp
   1de08:	ret    0x8
   1de0b:	int3   
   1de0c:	int3   
   1de0d:	int3   
   1de0e:	int3   
   1de0f:	int3   
   1de10:	push   0x1db70
   1de15:	push   DWORD PTR fs:0x0
   1de1c:	mov    eax,DWORD PTR [esp+0x10]
   1de20:	mov    DWORD PTR [esp+0x10],ebp
   1de24:	lea    ebp,[esp+0x10]
   1de28:	sub    esp,eax
   1de2a:	push   ebx
   1de2b:	push   esi
   1de2c:	push   edi
   1de2d:	mov    eax,ds:0x7771c
   1de32:	xor    DWORD PTR [ebp-0x4],eax
   1de35:	xor    eax,ebp
   1de37:	mov    DWORD PTR [ebp-0x1c],eax
   1de3a:	push   eax
   1de3b:	mov    DWORD PTR [ebp-0x18],esp
   1de3e:	push   DWORD PTR [ebp-0x8]
   1de41:	mov    eax,DWORD PTR [ebp-0x4]
   1de44:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1de4b:	mov    DWORD PTR [ebp-0x8],eax
   1de4e:	lea    eax,[ebp-0x10]
   1de51:	mov    fs:0x0,eax
   1de57:	ret    
   1de58:	mov    ecx,DWORD PTR [ebp-0x1c]
   1de5b:	xor    ecx,ebp
   1de5d:	call   0x1da73
   1de62:	jmp    0x1db4d
   1de67:	int3   
   1de68:	int3   
   1de69:	int3   
   1de6a:	int3   
   1de6b:	int3   
   1de6c:	call   eax
   1de6e:	ret    
   1de6f:	int3   
   1de70:	int3   
   1de71:	int3   
   1de72:	int3   
   1de73:	int3   
   1de74:	jmp    DWORD PTR ds:0x1f064
   1de7a:	pop    esp
   1de7b:	add    BYTE PTR [eax],al
   1de7d:	add    BYTE PTR [eax],al
   1de7f:	add    BYTE PTR [ebx+0x0],ch
   1de82:	bound  eax,QWORD PTR [eax]
   1de84:	add    BYTE PTR fs:[ecx+0x0],dh
   1de88:	add    BYTE PTR [eax],al
   1de8a:	add    BYTE PTR fs:[ebx],dh
   1de8d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1de91:	add    BYTE PTR [eax],al
   1de93:	add    BYTE PTR [esi+0x0],ch
   1de96:	je     0x1de98
   1de98:	outs   dx,BYTE PTR ds:[esi]
   1de99:	add    BYTE PTR [eax],al
   1de9b:	add    BYTE PTR [ebx+0x0],dh
   1de9e:	jns    0x1dea0
   1dea0:	jae    0x1dea2
   1dea2:	popa   
   1dea3:	add    BYTE PTR [eax],al
   1dea5:	add    BYTE PTR [edi+0x0],dh
   1dea8:	imul   eax,DWORD PTR [eax],0x65006e
   1deae:	add    BYTE PTR [eax],al
   1deb0:	jo     0x1deb2
   1deb2:	arpl   WORD PTR [eax],ax
   1deb4:	imul   eax,DWORD PTR [eax],0x6d0000
   1deba:	jae    0x1debc
   1debc:	jb     0x1debe
   1debe:	add    BYTE PTR [eax],al
   1dec0:	je     0x1dec2
   1dec2:	ins    DWORD PTR es:[edi],dx
   1dec3:	add    BYTE PTR [eax+0x0],dh
   1dec6:	add    BYTE PTR [eax],al
   1dec8:	jne    0x1deca
   1deca:	jae    0x1decc
   1decc:	bound  eax,QWORD PTR [eax]
   1dece:	add    BYTE PTR [eax],al
   1ded0:	outs   dx,DWORD PTR ds:[esi]
   1ded1:	add    BYTE PTR [eax+eax*1+0x65],ch
   1ded5:	add    BYTE PTR [eax],al
   1ded7:	add    BYTE PTR [ecx+0x0],ah
   1deda:	imul   eax,DWORD PTR [eax],0x70
   1dee0:	push   0x0
   1dee2:	popa   
   1dee3:	add    BYTE PTR [ecx+0x0],bh
   1dee6:	add    BYTE PTR [eax],al
   1dee8:	jbe    0x1deea
   1deea:	add    BYTE PTR gs:[edx+0x0],dh
   1deee:	add    BYTE PTR [eax],al
   1def0:	jae    0x1def2
   1def2:	popa   
   1def3:	add    BYTE PTR [ecx+0x0],ch
   1def6:	add    BYTE PTR [eax],al
   1def8:	ins    BYTE PTR es:[edi],dx
   1def9:	add    BYTE PTR [ecx+0x0],ah
   1defc:	arpl   WORD PTR [eax],ax
   1defe:	add    BYTE PTR [eax],al
   1df00:	push   0x0
   1df02:	jo     0x1df04
   1df04:	add    BYTE PTR [bx+si],al
   1df07:	add    BYTE PTR [eax+0x0],ch
   1df0a:	imul   eax,DWORD PTR [eax],0x64
   1df10:	jo     0x1df12
   1df12:	outs   dx,BYTE PTR ds:[esi]
   1df13:	add    BYTE PTR [edi+0x0],ah
   1df16:	add    BYTE PTR [eax],al
   1df18:	add    ah,cl
   1df1a:	dec    ebx
   1df1b:	add    BYTE PTR [ebp+0x0],ah
   1df1e:	push   ebx
   1df1f:	add    BYTE PTR [ebp+0x0],ah
   1df22:	jb     0x1df24
   1df24:	jbe    0x1df26
   1df26:	imul   eax,DWORD PTR [eax],0x650063
   1df2c:	inc    esp
   1df2d:	add    BYTE PTR [ebp+0x0],ah
   1df30:	jae    0x1df32
   1df32:	arpl   WORD PTR [eax],ax
   1df34:	jb     0x1df36
   1df36:	imul   eax,DWORD PTR [eax],0x740070
   1df3c:	outs   dx,DWORD PTR ds:[esi]
   1df3d:	add    BYTE PTR [edx+0x0],dh
   1df40:	push   esp
   1df41:	add    BYTE PTR [ecx+0x0],ah
   1df44:	bound  eax,QWORD PTR [eax]
   1df46:	ins    BYTE PTR es:[edi],dx
   1df47:	add    BYTE PTR [ebp+0x0],ah
   1df4a:	add    BYTE PTR [eax],al
   1df4c:	pop    edx
   1df4d:	add    BYTE PTR [edi+0x0],dh
   1df50:	dec    edi
   1df51:	add    BYTE PTR [eax+0x0],dh
   1df54:	add    BYTE PTR gs:[esi+0x0],ch
   1df58:	push   eax
   1df59:	add    BYTE PTR [edx+0x0],dh
   1df5c:	outs   dx,DWORD PTR ds:[esi]
   1df5d:	add    BYTE PTR [ebx+0x0],ah
   1df60:	add    BYTE PTR gs:[ebx+0x0],dh
   1df64:	jae    0x1df66
   1df66:	add    BYTE PTR [eax],al
   1df68:	push   eax
   1df69:	add    BYTE PTR [ebx+0x0],dh
   1df6c:	push   ebx
   1df6d:	add    BYTE PTR [ebp+0x0],ah
   1df70:	je     0x1df72
   1df72:	dec    esp
   1df73:	add    BYTE PTR [edi+0x0],ch
   1df76:	popa   
   1df77:	add    BYTE PTR [eax+eax*1+0x49],ah
   1df7b:	add    BYTE PTR [ebp+0x0],ch
   1df7e:	popa   
   1df7f:	add    BYTE PTR [edi+0x0],ah
   1df82:	add    BYTE PTR gs:[esi+0x0],cl
   1df86:	outs   dx,DWORD PTR ds:[esi]
   1df87:	add    BYTE PTR [eax+eax*1+0x69],dh
   1df8b:	add    BYTE PTR [esi+0x0],ah
   1df8e:	jns    0x1df90
   1df90:	push   edx
   1df91:	add    BYTE PTR [edi+0x0],ch
   1df94:	jne    0x1df96
   1df96:	je     0x1df98
   1df98:	imul   eax,DWORD PTR [eax],0x65006e
   1df9e:	add    BYTE PTR [eax],al
   1dfa0:	pop    edx
   1dfa1:	add    BYTE PTR [edi+0x0],dh
   1dfa4:	inc    esp
   1dfa5:	add    BYTE PTR [ebp+0x0],dh
   1dfa8:	jo     0x1dfaa
   1dfaa:	ins    BYTE PTR es:[edi],dx
   1dfab:	add    BYTE PTR [ecx+0x0],ch
   1dfae:	arpl   WORD PTR [eax],ax
   1dfb0:	popa   
   1dfb1:	add    BYTE PTR [eax+eax*1+0x65],dh
   1dfb5:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1dfb9:	add    BYTE PTR [ebx+0x0],ch
   1dfbc:	add    BYTE PTR gs:[esi+0x0],ch
   1dfc0:	add    BYTE PTR [eax],al
   1dfc2:	push   eax
   1dfc3:	add    BYTE PTR [ebx+0x0],dh
   1dfc6:	push   ebx
   1dfc7:	add    BYTE PTR [ebp+0x0],ah
   1dfca:	je     0x1dfcc
   1dfcc:	inc    ebx
   1dfcd:	add    BYTE PTR [edx+0x0],dh
   1dfd0:	add    BYTE PTR gs:[ecx+0x0],ah
   1dfd4:	je     0x1dfd6
   1dfd6:	add    BYTE PTR gs:[eax+0x0],dl
   1dfda:	jb     0x1dfdc
   1dfdc:	outs   dx,DWORD PTR ds:[esi]
   1dfdd:	add    BYTE PTR [ebx+0x0],ah
   1dfe0:	add    BYTE PTR gs:[ebx+0x0],dh
   1dfe4:	jae    0x1dfe6
   1dfe6:	dec    esi
   1dfe7:	add    BYTE PTR [edi+0x0],ch
   1dfea:	je     0x1dfec
   1dfec:	imul   eax,DWORD PTR [eax],0x790066
   1dff2:	push   edx
   1dff3:	add    BYTE PTR [edi+0x0],ch
   1dff6:	jne    0x1dff8
   1dff8:	je     0x1dffa
   1dffa:	imul   eax,DWORD PTR [eax],0x65006e
   1e000:	add    BYTE PTR [eax],al
   1e002:	pop    edx
   1e003:	add    BYTE PTR [edi+0x0],dh
   1e006:	dec    edi
   1e007:	add    BYTE PTR [eax+0x0],dh
   1e00a:	add    BYTE PTR gs:[esi+0x0],ch
   1e00e:	inc    esi
   1e00f:	add    BYTE PTR [ecx+0x0],ch
   1e012:	ins    BYTE PTR es:[edi],dx
   1e013:	add    BYTE PTR [ebp+0x0],ah
   1e016:	add    BYTE PTR [eax],al
   1e018:	pop    edx
   1e019:	add    BYTE PTR [edi+0x0],dh
   1e01c:	push   ecx
   1e01d:	add    BYTE PTR [ebp+0x0],dh
   1e020:	add    BYTE PTR gs:[edx+0x0],dh
   1e024:	jns    0x1e026
   1e026:	dec    ecx
   1e027:	add    BYTE PTR [esi+0x0],ch
   1e02a:	data16 add BYTE PTR [edi+0x0],ch
   1e02e:	jb     0x1e030
   1e030:	ins    DWORD PTR es:[edi],dx
   1e031:	add    BYTE PTR [ecx+0x0],ah
   1e034:	je     0x1e036
   1e036:	imul   eax,DWORD PTR [eax],0x6e006f
   1e03c:	push   eax
   1e03d:	add    BYTE PTR [edx+0x0],dh
   1e040:	outs   dx,DWORD PTR ds:[esi]
   1e041:	add    BYTE PTR [ebx+0x0],ah
   1e044:	add    BYTE PTR gs:[ebx+0x0],dh
   1e048:	jae    0x1e04a
   1e04a:	add    BYTE PTR [eax],al
   1e04c:	pop    edx
   1e04d:	add    BYTE PTR [edi+0x0],dh
   1e050:	push   ecx
   1e051:	add    BYTE PTR [ebp+0x0],dh
   1e054:	add    BYTE PTR gs:[edx+0x0],dh
   1e058:	jns    0x1e05a
   1e05a:	push   ebx
   1e05b:	add    BYTE PTR [ecx+0x0],bh
   1e05e:	jae    0x1e060
   1e060:	je     0x1e062
   1e062:	add    BYTE PTR gs:[ebp+0x0],ch
   1e066:	dec    ecx
   1e067:	add    BYTE PTR [esi+0x0],ch
   1e06a:	data16 add BYTE PTR [edi+0x0],ch
   1e06e:	jb     0x1e070
   1e070:	ins    DWORD PTR es:[edi],dx
   1e071:	add    BYTE PTR [ecx+0x0],ah
   1e074:	je     0x1e076
   1e076:	imul   eax,DWORD PTR [eax],0x6e006f
   1e07c:	add    BYTE PTR [eax],al
   1e07e:	pop    edx
   1e07f:	add    BYTE PTR [edi+0x0],dh
   1e082:	dec    edi
   1e083:	add    BYTE PTR [eax+0x0],dh
   1e086:	add    BYTE PTR gs:[esi+0x0],ch
   1e08a:	dec    ebx
   1e08b:	add    BYTE PTR [ebp+0x0],ah
   1e08e:	jns    0x1e090
   1e090:	add    BYTE PTR [eax],al
   1e092:	pop    edx
   1e093:	add    BYTE PTR [edi+0x0],dh
   1e096:	inc    esp
   1e097:	add    BYTE PTR [ebp+0x0],ah
   1e09a:	ins    BYTE PTR es:[edi],dx
   1e09b:	add    BYTE PTR [ebp+0x0],ah
   1e09e:	je     0x1e0a0
   1e0a0:	add    BYTE PTR gs:[ebx+0x0],cl
   1e0a4:	add    BYTE PTR gs:[ecx+0x0],bh
   1e0a8:	add    BYTE PTR [eax],al
   1e0aa:	pop    edx
   1e0ab:	add    BYTE PTR [edi+0x0],dh
   1e0ae:	push   ebx
   1e0af:	add    BYTE PTR [ebp+0x0],ah
   1e0b2:	je     0x1e0b4
   1e0b4:	push   esi
   1e0b5:	add    BYTE PTR [ecx+0x0],ah
   1e0b8:	ins    BYTE PTR es:[edi],dx
   1e0b9:	add    BYTE PTR [ebp+0x0],dh
   1e0bc:	add    BYTE PTR gs:[ebx+0x0],cl
   1e0c0:	add    BYTE PTR gs:[ecx+0x0],bh
   1e0c4:	add    BYTE PTR [eax],al
   1e0c6:	pop    edx
   1e0c7:	add    BYTE PTR [edi+0x0],dh
   1e0ca:	push   ecx
   1e0cb:	add    BYTE PTR [ebp+0x0],dh
   1e0ce:	add    BYTE PTR gs:[edx+0x0],dh
   1e0d2:	jns    0x1e0d4
   1e0d4:	push   esi
   1e0d5:	add    BYTE PTR [edi+0x0],ch
   1e0d8:	ins    BYTE PTR es:[edi],dx
   1e0d9:	add    BYTE PTR [ebp+0x0],dh
   1e0dc:	ins    DWORD PTR es:[edi],dx
   1e0dd:	add    BYTE PTR [ebp+0x0],ah
   1e0e0:	dec    ecx
   1e0e1:	add    BYTE PTR [esi+0x0],ch
   1e0e4:	data16 add BYTE PTR [edi+0x0],ch
   1e0e8:	jb     0x1e0ea
   1e0ea:	ins    DWORD PTR es:[edi],dx
   1e0eb:	add    BYTE PTR [ecx+0x0],ah
   1e0ee:	je     0x1e0f0
   1e0f0:	imul   eax,DWORD PTR [eax],0x6e006f
   1e0f6:	inc    esi
   1e0f7:	add    BYTE PTR [ecx+0x0],ch
   1e0fa:	ins    BYTE PTR es:[edi],dx
   1e0fb:	add    BYTE PTR [ebp+0x0],ah
   1e0fe:	add    BYTE PTR [eax],al
   1e100:	pop    edx
   1e101:	add    BYTE PTR [edi+0x0],dh
   1e104:	inc    ebx
   1e105:	add    BYTE PTR [edx+0x0],dh
   1e108:	add    BYTE PTR gs:[ecx+0x0],ah
   1e10c:	je     0x1e10e
   1e10e:	add    BYTE PTR gs:[esi+0x0],al
   1e112:	imul   eax,DWORD PTR [eax],0x65006c
   1e118:	add    BYTE PTR [eax],al
   1e11a:	push   edx
   1e11b:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e11f:	add    BYTE PTR [ecx+0x0],cl
   1e122:	ins    DWORD PTR es:[edi],dx
   1e123:	add    BYTE PTR [ecx+0x0],ah
   1e126:	add    BYTE PTR [di+0x0],ah
   1e12a:	dec    esi
   1e12b:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e12f:	add    BYTE PTR [ebp+0x0],ah
   1e132:	popa   
   1e133:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e137:	add    BYTE PTR [edx+0x0],dh
   1e13a:	add    BYTE PTR [eax],al
   1e13c:	push   edx
   1e13d:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e141:	add    BYTE PTR [ecx+0x0],cl
   1e144:	ins    DWORD PTR es:[edi],dx
   1e145:	add    BYTE PTR [ecx+0x0],ah
   1e148:	add    BYTE PTR [di+0x0],ah
   1e14c:	inc    esp
   1e14d:	add    BYTE PTR [ecx+0x0],ch
   1e150:	jb     0x1e152
   1e152:	add    BYTE PTR gs:[ebx+0x0],ah
   1e156:	je     0x1e158
   1e158:	outs   dx,DWORD PTR ds:[esi]
   1e159:	add    BYTE PTR [edx+0x0],dh
   1e15c:	jns    0x1e15e
   1e15e:	inc    ebp
   1e15f:	add    BYTE PTR [esi+0x0],ch
   1e162:	je     0x1e164
   1e164:	jb     0x1e166
   1e166:	jns    0x1e168
   1e168:	push   esp
   1e169:	add    BYTE PTR [edi+0x0],ch
   1e16c:	inc    esp
   1e16d:	add    BYTE PTR [ecx+0x0],ah
   1e170:	je     0x1e172
   1e172:	popa   
   1e173:	add    BYTE PTR [eax],al
   1e175:	add    BYTE PTR [edx+0x0],bl
   1e178:	ja     0x1e17a
   1e17a:	dec    edi
   1e17b:	add    BYTE PTR [eax+0x0],dh
   1e17e:	add    BYTE PTR gs:[esi+0x0],ch
   1e182:	push   eax
   1e183:	add    BYTE PTR [edx+0x0],dh
   1e186:	outs   dx,DWORD PTR ds:[esi]
   1e187:	add    BYTE PTR [ebx+0x0],ah
   1e18a:	add    BYTE PTR gs:[ebx+0x0],dh
   1e18e:	jae    0x1e190
   1e190:	push   esp
   1e191:	add    BYTE PTR [edi+0x0],ch
   1e194:	imul   eax,DWORD PTR [eax],0x65
   1e197:	add    BYTE PTR [esi+0x0],ch
   1e19a:	add    BYTE PTR [eax],al
   1e19c:	pop    edx
   1e19d:	add    BYTE PTR [edi+0x0],dh
   1e1a0:	push   ebx
   1e1a1:	add    BYTE PTR [ebp+0x0],ah
   1e1a4:	je     0x1e1a6
   1e1a6:	dec    ecx
   1e1a7:	add    BYTE PTR [esi+0x0],ch
   1e1aa:	data16 add BYTE PTR [edi+0x0],ch
   1e1ae:	jb     0x1e1b0
   1e1b0:	ins    DWORD PTR es:[edi],dx
   1e1b1:	add    BYTE PTR [ecx+0x0],ah
   1e1b4:	je     0x1e1b6
   1e1b6:	imul   eax,DWORD PTR [eax],0x6e006f
   1e1bc:	push   eax
   1e1bd:	add    BYTE PTR [edx+0x0],dh
   1e1c0:	outs   dx,DWORD PTR ds:[esi]
   1e1c1:	add    BYTE PTR [ebx+0x0],ah
   1e1c4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e1c8:	jae    0x1e1ca
   1e1ca:	add    BYTE PTR [eax],al
   1e1cc:	pop    edx
   1e1cd:	add    BYTE PTR [edi+0x0],dh
   1e1d0:	push   ecx
   1e1d1:	add    BYTE PTR [ebp+0x0],dh
   1e1d4:	add    BYTE PTR gs:[edx+0x0],dh
   1e1d8:	jns    0x1e1da
   1e1da:	dec    ecx
   1e1db:	add    BYTE PTR [esi+0x0],ch
   1e1de:	data16 add BYTE PTR [edi+0x0],ch
   1e1e2:	jb     0x1e1e4
   1e1e4:	ins    DWORD PTR es:[edi],dx
   1e1e5:	add    BYTE PTR [ecx+0x0],ah
   1e1e8:	je     0x1e1ea
   1e1ea:	imul   eax,DWORD PTR [eax],0x6e006f
   1e1f0:	push   esp
   1e1f1:	add    BYTE PTR [eax+0x0],ch
   1e1f4:	jb     0x1e1f6
   1e1f6:	add    BYTE PTR gs:[ecx+0x0],ah
   1e1fa:	add    BYTE PTR fs:[eax],al
   1e1fd:	add    BYTE PTR [edx+0x0],bl
   1e200:	ja     0x1e202
   1e202:	inc    ebx
   1e203:	add    BYTE PTR [eax+eax*1+0x6f],ch
   1e207:	add    BYTE PTR [ebx+0x0],dh
   1e20a:	add    BYTE PTR gs:[eax],al
   1e20d:	add    BYTE PTR [ebp+0x0],al
   1e210:	js     0x1e212
   1e212:	push   edx
   1e213:	add    BYTE PTR [ecx+0x0],ah
   1e216:	imul   eax,DWORD PTR [eax],0x650073
   1e21c:	push   ebx
   1e21d:	add    BYTE PTR [eax+eax*1+0x61],dh
   1e221:	add    BYTE PTR [eax+eax*1+0x75],dh
   1e225:	add    BYTE PTR [ebx+0x0],dh
   1e228:	add    BYTE PTR [eax],al
   1e22a:	push   edx
   1e22b:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e22f:	add    BYTE PTR [ecx+0x0],al
   1e232:	jae    0x1e234
   1e234:	jae    0x1e236
   1e236:	add    BYTE PTR gs:[edx+0x0],dh
   1e23a:	je     0x1e23c
   1e23c:	add    BYTE PTR [eax],al
   1e23e:	pop    edx
   1e23f:	add    BYTE PTR [edi+0x0],dh
   1e242:	inc    ebp
   1e243:	add    BYTE PTR [esi+0x0],ch
   1e246:	jne    0x1e248
   1e248:	ins    DWORD PTR es:[edi],dx
   1e249:	add    BYTE PTR [ebp+0x0],ah
   1e24c:	jb     0x1e24e
   1e24e:	popa   
   1e24f:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e253:	add    BYTE PTR [ebx+0x0],cl
   1e256:	add    BYTE PTR gs:[ecx+0x0],bh
   1e25a:	add    BYTE PTR [eax],al
   1e25c:	pop    edx
   1e25d:	add    BYTE PTR [edi+0x0],dh
   1e260:	dec    esp
   1e261:	add    BYTE PTR [edi+0x0],ch
   1e264:	popa   
   1e265:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e269:	add    BYTE PTR [edx+0x0],dh
   1e26c:	imul   eax,DWORD PTR [eax],0x650076
   1e272:	jb     0x1e274
   1e274:	add    BYTE PTR [eax],al
   1e276:	pop    edx
   1e277:	add    BYTE PTR [edi+0x0],dh
   1e27a:	inc    ebx
   1e27b:	add    BYTE PTR [edx+0x0],dh
   1e27e:	add    BYTE PTR gs:[ecx+0x0],ah
   1e282:	je     0x1e284
   1e284:	add    BYTE PTR gs:[ebx+0x0],cl
   1e288:	add    BYTE PTR gs:[ecx+0x0],bh
   1e28c:	add    BYTE PTR [eax],al
   1e28e:	dec    ecx
   1e28f:	add    BYTE PTR [edi+0x0],ch
   1e292:	inc    esp
   1e293:	add    BYTE PTR [ebp+0x0],ah
   1e296:	ins    BYTE PTR es:[edi],dx
   1e297:	add    BYTE PTR [ebp+0x0],ah
   1e29a:	je     0x1e29c
   1e29c:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e2a1:	add    BYTE PTR [esi+0x0],dh
   1e2a4:	imul   eax,DWORD PTR [eax],0x650063
   1e2aa:	add    BYTE PTR [eax],al
   1e2ac:	dec    ebx
   1e2ad:	add    BYTE PTR [ebp+0x0],ah
   1e2b0:	inc    esp
   1e2b1:	add    BYTE PTR [ebp+0x0],ah
   1e2b4:	je     0x1e2b6
   1e2b6:	popa   
   1e2b7:	add    BYTE PTR [ebx+0x0],ah
   1e2ba:	push   0x72005000
   1e2bf:	add    BYTE PTR [edi+0x0],ch
   1e2c2:	arpl   WORD PTR [eax],ax
   1e2c4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e2c8:	jae    0x1e2ca
   1e2ca:	add    BYTE PTR [eax],al
   1e2cc:	dec    ebx
   1e2cd:	add    BYTE PTR [ebp+0x0],ah
   1e2d0:	inc    ecx
   1e2d1:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e2d5:	add    BYTE PTR [ecx+0x0],ah
   1e2d8:	arpl   WORD PTR [eax],ax
   1e2da:	push   0x72005000
   1e2df:	add    BYTE PTR [edi+0x0],ch
   1e2e2:	arpl   WORD PTR [eax],ax
   1e2e4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e2e8:	jae    0x1e2ea
   1e2ea:	add    BYTE PTR [eax],al
   1e2ec:	pop    edx
   1e2ed:	add    BYTE PTR [edi+0x0],dh
   1e2f0:	push   ecx
   1e2f1:	add    BYTE PTR [ebp+0x0],dh
   1e2f4:	add    BYTE PTR gs:[edx+0x0],dh
   1e2f8:	jns    0x1e2fa
   1e2fa:	push   esi
   1e2fb:	add    BYTE PTR [ecx+0x0],ah
   1e2fe:	ins    BYTE PTR es:[edi],dx
   1e2ff:	add    BYTE PTR [ebp+0x0],dh
   1e302:	add    BYTE PTR gs:[ebx+0x0],cl
   1e306:	add    BYTE PTR gs:[ecx+0x0],bh
   1e30a:	add    BYTE PTR [eax],al
   1e30c:	pop    edx
   1e30d:	add    BYTE PTR [edi+0x0],dh
   1e310:	push   edx
   1e311:	add    BYTE PTR [ebp+0x0],ah
   1e314:	popa   
   1e315:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e319:	add    BYTE PTR [ecx+0x0],ch
   1e31c:	ins    BYTE PTR es:[edi],dx
   1e31d:	add    BYTE PTR [ebp+0x0],ah
   1e320:	add    BYTE PTR [eax],al
   1e322:	pop    edx
   1e323:	add    BYTE PTR [edi+0x0],dh
   1e326:	push   ebx
   1e327:	add    BYTE PTR [ebp+0x0],ah
   1e32a:	je     0x1e32c
   1e32c:	dec    ecx
   1e32d:	add    BYTE PTR [esi+0x0],ch
   1e330:	data16 add BYTE PTR [edi+0x0],ch
   1e334:	jb     0x1e336
   1e336:	ins    DWORD PTR es:[edi],dx
   1e337:	add    BYTE PTR [ecx+0x0],ah
   1e33a:	je     0x1e33c
   1e33c:	imul   eax,DWORD PTR [eax],0x6e006f
   1e342:	inc    esi
   1e343:	add    BYTE PTR [ecx+0x0],ch
   1e346:	ins    BYTE PTR es:[edi],dx
   1e347:	add    BYTE PTR [ebp+0x0],ah
   1e34a:	add    BYTE PTR [eax],al
   1e34c:	pop    edx
   1e34d:	add    BYTE PTR [edi+0x0],dh
   1e350:	push   edi
   1e351:	add    BYTE PTR [edx+0x0],dh
   1e354:	imul   eax,DWORD PTR [eax],0x650074
   1e35a:	inc    esi
   1e35b:	add    BYTE PTR [ecx+0x0],ch
   1e35e:	ins    BYTE PTR es:[edi],dx
   1e35f:	add    BYTE PTR [ebp+0x0],ah
   1e362:	add    BYTE PTR [eax],al
   1e364:	pop    edx
   1e365:	add    BYTE PTR [edi+0x0],dh
   1e368:	push   ecx
   1e369:	add    BYTE PTR [ebp+0x0],dh
   1e36c:	add    BYTE PTR gs:[edx+0x0],dh
   1e370:	jns    0x1e372
   1e372:	dec    ecx
   1e373:	add    BYTE PTR [esi+0x0],ch
   1e376:	data16 add BYTE PTR [edi+0x0],ch
   1e37a:	jb     0x1e37c
   1e37c:	ins    DWORD PTR es:[edi],dx
   1e37d:	add    BYTE PTR [ecx+0x0],ah
   1e380:	je     0x1e382
   1e382:	imul   eax,DWORD PTR [eax],0x6e006f
   1e388:	inc    esi
   1e389:	add    BYTE PTR [ecx+0x0],ch
   1e38c:	ins    BYTE PTR es:[edi],dx
   1e38d:	add    BYTE PTR [ebp+0x0],ah
   1e390:	add    BYTE PTR [eax],al
   1e392:	dec    ecx
   1e393:	add    BYTE PTR [edi+0x0],ch
   1e396:	inc    ebx
   1e397:	add    BYTE PTR [edx+0x0],dh
   1e39a:	add    BYTE PTR gs:[ecx+0x0],ah
   1e39e:	je     0x1e3a0
   1e3a0:	add    BYTE PTR gs:[ebx+0x0],dl
   1e3a4:	jns    0x1e3a6
   1e3a6:	ins    DWORD PTR es:[edi],dx
   1e3a7:	add    BYTE PTR [edx+0x0],ah
   1e3aa:	outs   dx,DWORD PTR ds:[esi]
   1e3ab:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e3af:	add    BYTE PTR [ebx+0x0],ah
   1e3b2:	dec    esp
   1e3b3:	add    BYTE PTR [ecx+0x0],ch
   1e3b6:	outs   dx,BYTE PTR ds:[esi]
   1e3b7:	add    BYTE PTR [ebx+0x0],ch
   1e3ba:	add    BYTE PTR [eax],al
   1e3bc:	dec    ecx
   1e3bd:	add    BYTE PTR [edi+0x0],ch
   1e3c0:	inc    ebx
   1e3c1:	add    BYTE PTR [edx+0x0],dh
   1e3c4:	add    BYTE PTR gs:[ecx+0x0],ah
   1e3c8:	je     0x1e3ca
   1e3ca:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e3cf:	add    BYTE PTR [esi+0x0],dh
   1e3d2:	imul   eax,DWORD PTR [eax],0x650063
   1e3d8:	add    BYTE PTR [eax],al
   1e3da:	push   ebx
   1e3db:	add    BYTE PTR [ebp+0x0],ah
   1e3de:	inc    ebx
   1e3df:	add    BYTE PTR [edx+0x0],dh
   1e3e2:	add    BYTE PTR gs:[ecx+0x0],ah
   1e3e6:	je     0x1e3e8
   1e3e8:	add    BYTE PTR gs:[ebx+0x0],al
   1e3ec:	ins    BYTE PTR es:[edi],dx
   1e3ed:	add    BYTE PTR [ecx+0x0],ch
   1e3f0:	add    BYTE PTR gs:[esi+0x0],ch
   1e3f4:	je     0x1e3f6
   1e3f6:	push   ebx
   1e3f7:	add    BYTE PTR [ebp+0x0],ah
   1e3fa:	arpl   WORD PTR [eax],ax
   1e3fc:	jne    0x1e3fe
   1e3fe:	jb     0x1e400
   1e400:	imul   eax,DWORD PTR [eax],0x790074
   1e406:	add    BYTE PTR [eax],al
   1e408:	pop    edx
   1e409:	add    BYTE PTR [edi+0x0],dh
   1e40c:	dec    ebp
   1e40d:	add    BYTE PTR [ecx+0x0],ah
   1e410:	jo     0x1e412
   1e412:	push   esi
   1e413:	add    BYTE PTR [ecx+0x0],ch
   1e416:	add    BYTE PTR gs:[edi+0x0],dh
   1e41a:	dec    edi
   1e41b:	add    BYTE PTR [esi+0x0],ah
   1e41e:	push   ebx
   1e41f:	add    BYTE PTR [ebp+0x0],ah
   1e422:	arpl   WORD PTR [eax],ax
   1e424:	je     0x1e426
   1e426:	imul   eax,DWORD PTR [eax],0x6e006f
   1e42c:	add    BYTE PTR [eax],al
   1e42e:	pop    edx
   1e42f:	add    BYTE PTR [edi+0x0],dh
   1e432:	inc    ebx
   1e433:	add    BYTE PTR [edx+0x0],dh
   1e436:	add    BYTE PTR gs:[ecx+0x0],ah
   1e43a:	je     0x1e43c
   1e43c:	add    BYTE PTR gs:[ebx+0x0],dl
   1e440:	add    BYTE PTR gs:[ebx+0x0],ah
   1e444:	je     0x1e446
   1e446:	imul   eax,DWORD PTR [eax],0x6e006f
   1e44c:	add    BYTE PTR [eax],al
   1e44e:	pop    edx
   1e44f:	add    BYTE PTR [edi+0x0],dh
   1e452:	push   ebp
   1e453:	add    BYTE PTR [esi+0x0],ch
   1e456:	ins    DWORD PTR es:[edi],dx
   1e457:	add    BYTE PTR [ecx+0x0],ah
   1e45a:	jo     0x1e45c
   1e45c:	push   esi
   1e45d:	add    BYTE PTR [ecx+0x0],ch
   1e460:	add    BYTE PTR gs:[edi+0x0],dh
   1e464:	dec    edi
   1e465:	add    BYTE PTR [esi+0x0],ah
   1e468:	push   ebx
   1e469:	add    BYTE PTR [ebp+0x0],ah
   1e46c:	arpl   WORD PTR [eax],ax
   1e46e:	je     0x1e470
   1e470:	imul   eax,DWORD PTR [eax],0x6e006f
   1e476:	add    BYTE PTR [eax],al
   1e478:	dec    ebx
   1e479:	add    BYTE PTR [ebp+0x0],ah
   1e47c:	dec    ecx
   1e47d:	add    BYTE PTR [esi+0x0],ch
   1e480:	imul   eax,DWORD PTR [eax],0x690074
   1e486:	popa   
   1e487:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e48b:	add    BYTE PTR [edx+0x0],bh
   1e48e:	add    BYTE PTR gs:[ebp+0x0],cl
   1e492:	jne    0x1e494
   1e494:	je     0x1e496
   1e496:	add    BYTE PTR gs:[eax+0x0],bh
   1e49a:	add    BYTE PTR [eax],al
   1e49c:	push   eax
   1e49d:	add    BYTE PTR [ebx+0x0],dh
   1e4a0:	dec    esp
   1e4a1:	add    BYTE PTR [edi+0x0],ch
   1e4a4:	outs   dx,DWORD PTR ds:[esi]
   1e4a5:	add    BYTE PTR [ebx+0x0],ch
   1e4a8:	jne    0x1e4aa
   1e4aa:	jo     0x1e4ac
   1e4ac:	push   eax
   1e4ad:	add    BYTE PTR [edx+0x0],dh
   1e4b0:	outs   dx,DWORD PTR ds:[esi]
   1e4b1:	add    BYTE PTR [ebx+0x0],ah
   1e4b4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e4b8:	jae    0x1e4ba
   1e4ba:	inc    edx
   1e4bb:	add    BYTE PTR [ecx+0x0],bh
   1e4be:	push   eax
   1e4bf:	add    BYTE PTR [edx+0x0],dh
   1e4c2:	outs   dx,DWORD PTR ds:[esi]
   1e4c3:	add    BYTE PTR [ebx+0x0],ah
   1e4c6:	add    BYTE PTR gs:[ebx+0x0],dh
   1e4ca:	jae    0x1e4cc
   1e4cc:	dec    ecx
   1e4cd:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e4d1:	add    BYTE PTR [ebx+0x0],cl
   1e4d4:	add    BYTE PTR gs:[edi+0x0],al
   1e4d8:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e4dd:	add    BYTE PTR [ebp+0x0],dh
   1e4e0:	jb     0x1e4e2
   1e4e2:	jb     0x1e4e4
   1e4e4:	add    BYTE PTR gs:[esi+0x0],ch
   1e4e8:	je     0x1e4ea
   1e4ea:	push   esp
   1e4eb:	add    BYTE PTR [eax+0x0],ch
   1e4ee:	jb     0x1e4f0
   1e4f0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e4f4:	add    BYTE PTR fs:[eax],al
   1e4f7:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e4fb:	add    BYTE PTR [ecx],cl
   1e4fd:	add    BYTE PTR ds:0xd0000000,dl
   1e503:	fcomp  DWORD PTR [esi-0x7c]
   1e506:	jg     0x1e492
   1e508:	lock inc edx
   1e50a:	in     eax,0x1c
   1e50c:	mov    dh,0xd7
   1e50e:	pop    ds
   1e50f:	pop    eax
   1e510:	push   ebp
   1e511:	repnz in eax,dx
   1e513:	rcl    DWORD PTR [edi-0x53],0xfe
   1e517:	ins    BYTE PTR es:[edi],dx
   1e518:	repz fwait
   1e51a:	mov    al,0x59
   1e51c:	adc    eax,DWORD PTR fs:0x515365d4
   1e523:	adc    bh,BYTE PTR [ecx]
   1e525:	sbb    eax,0xf203a45c
   1e52a:	cmp    ch,BYTE PTR [eax+0x78]
   1e52d:	mov    ah,cl
   1e52f:	lock sub esi,DWORD PTR [esp+edi*2]
   1e533:	pusha  
   1e534:	cli    
   1e535:	xchg   DWORD PTR [edi],ecx
   1e537:	enter  0xde33,0xf3
   1e53b:	inc    ebx
   1e53d:	shl    BYTE PTR ss:[edx],0x0
   1e541:	int3   
   1e542:	push   ebx
   1e543:	add    BYTE PTR [edi],ah
   1e545:	add    BYTE PTR ds:0x6001300,dl
   1e54b:	add    BYTE PTR [eax],al
   1e54d:	add    BYTE PTR [ebx-0x626f87ea],dl
   1e553:	loopne 0x1e5ae
   1e555:	mov    bh,0x33
   1e557:	jnp    0x1e5d7
   1e559:	dec    eax
   1e55a:	push   ss
   1e55b:	sbb    al,BYTE PTR [eax]
   1e55d:	mov    ecx,0x6dcabff6
   1e562:	test   BYTE PTR ds:0x56b66983,ah
   1e568:	adc    al,0xf1
   1e56a:	test   edx,ebx
   1e56c:	ss pop ss
   1e56e:	sbb    cl,BYTE PTR [eax]
   1e570:	jb     0x1e552
   1e572:	sbb    al,0xd0
   1e574:	push   ebp
   1e575:	xor    cl,BYTE PTR [ecx]
   1e577:	jg     0x1e4fb
   1e579:	pop    eax
   1e57a:	rep lods al,BYTE PTR ds:[esi]
   1e57c:	arpl   WORD PTR [edx],sp
   1e57e:	jmp    0x2400:0x49000d2b
   1e585:	add    BYTE PTR [eax+eax*1],cl
   1e588:	push   es
   1e589:	add    BYTE PTR [edx],al
   1e58b:	add    BYTE PTR ds:0x15003100,dh
   1e591:	add    BYTE PTR [eax+eax*1],bl
   1e594:	add    BYTE PTR [eax],al
   1e596:	mov    al,ds:0x2a3304a7
   1e59b:	data16 into 
   1e59d:	adc    al,0xc7
   1e59f:	cmp    BYTE PTR ss:[ebp+0x3f5b5da0],ch
   1e5a6:	fidivr DWORD PTR [ebp-0x4f]
   1e5a9:	xchg   edx,eax
   1e5aa:	mov    ?,WORD PTR [edi]
   1e5ac:	mov    ds,edi
   1e5ae:	(bad)  
   1e5af:	idiv   BYTE PTR ds:0xa4c6bbe7
   1e5b5:	pushf  
   1e5b6:	sbb    esi,DWORD PTR ds:[edx+0x2a]
   1e5ba:	push   ss
   1e5bb:	lods   al,BYTE PTR ds:[esi]
   1e5bc:	sub    eax,0x2e00a550
   1e5c1:	add    BYTE PTR [edx+0x0],cl
   1e5c4:	or     BYTE PTR [eax],al
   1e5c6:	add    BYTE PTR [eax],al
   1e5c8:	add    BYTE PTR [eax],al
   1e5ca:	adc    al,0x70
   1e5cc:	scas   eax,DWORD PTR es:[edi]
   1e5cd:	lds    ebp,FWORD PTR [edi-0x1de36c01]
   1e5d3:	or     DWORD PTR [eax+0x13a2fb1e],eax
   1e5d9:	adc    eax,0xe59af7aa
   1e5de:	xchg   ebp,eax
   1e5df:	sti    
   1e5e0:	shl    DWORD PTR [ebp+0x59bdf72e],cl
   1e5e6:	cmp    BYTE PTR [esi+0x65],0x65
   1e5ea:	rcr    ah,1
   1e5ec:	inc    ebp
   1e5ed:	shr    cl,0xa4
   1e5f0:	push   edi
   1e5f1:	xor    al,0x87
   1e5f3:	adc    al,0x2c
   1e5f5:	rcl    DWORD PTR [ebx-0x66afcf08],1
   1e5fb:	pop    edi
   1e5fc:	mov    edx,0xae76ca0e
   1e601:	pop    ebp
   1e602:	(bad)  
   1e603:	adc    dx,WORD PTR [esi-0x22]
   1e607:	push   edx
   1e608:	and    BYTE PTR [eax],al
   1e60a:	outs   dx,BYTE PTR ds:[esi]
   1e60b:	add    BYTE PTR [edx],bl
   1e60d:	add    BYTE PTR [eax],dl
   1e60f:	add    BYTE PTR [eax],cl
   1e611:	add    BYTE PTR [eax],al
   1e613:	add    BYTE PTR [edx+0x0],al
   1e616:	dec    edx
   1e617:	add    BYTE PTR [eax],cl
   1e619:	add    BYTE PTR [eax],al
   1e61b:	add    BYTE PTR [eax],al
   1e61d:	add    bh,cl
   1e61f:	jbe    0x1e5d4
   1e621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e622:	int3   
   1e623:	mov    bh,0xe1
   1e625:	(bad)  
   1e626:	dec    edi
   1e627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e628:	fst    st(5)
   1e62a:	into   
   1e62b:	fmul   DWORD PTR [ebp*4-0x3269465]
   1e632:	mov    ebp,DWORD PTR [edi+0x52f493e9]
   1e638:	lods   eax,DWORD PTR ds:[esi]
   1e639:	mov    ebx,0x2b19ddca
   1e63e:	push   esp
   1e63f:	int    0xd3
   1e641:	mov    eax,ds:0x3f56ecc3
   1e646:	push   cs
   1e647:	mov    ebp,0x9c748721
   1e64c:	sbb    al,0x7b
   1e64e:	inc    ebx
   1e64f:	add    edx,esp
   1e651:	add    BYTE PTR [edx+0x27],al
   1e654:	add    BYTE PTR ds:0x8305cc00,dl
   1e65a:	xchg   DWORD PTR es:0xaa3efe86,edi
   1e661:	ret    
   1e662:	mov    bl,BYTE PTR [ebx]
   1e664:	or     ebx,edi
   1e666:	adc    al,0xf7
   1e668:	inc    esi
   1e669:	nop
   1e66a:	in     al,dx
   1e66b:	(bad)  
   1e66c:	ret    
   1e66d:	or     al,0x4d
   1e66f:	ins    BYTE PTR es:[edi],dx
   1e670:	sub    edi,ebx
   1e672:	inc    ebp
   1e673:	dec    eax
   1e674:	push   ebx
   1e675:	test   DWORD PTR [ebx+0x38],esi
   1e678:	out    0x1c,al
   1e67a:	jmp    0x1e6be
   1e67c:	out    dx,eax
   1e67d:	(bad)
   1e680:	pop    edx
   1e681:	arpl   WORD PTR [esi+0x28],bp
   1e684:	ins    DWORD PTR es:[edi],dx
   1e685:	mov    esp,DWORD PTR [eax+eiz*1-0x744660cc]
   1e68c:	cmp    al,BYTE PTR [ebx+0x6b830ce6]
   1e692:	mov    ch,0x28
   1e694:	add    ah,cl
   1e696:	push   ebx
   1e697:	aas    
   1e698:	or     DWORD PTR [eax],eax
   1e69a:	adc    eax,0xef47ea00
   1e69f:	mov    ah,0x37
   1e6a1:	sub    dl,BYTE PTR [esi-0x7b]
   1e6a4:	in     eax,dx
   1e6a5:	sbb    al,0x35
   1e6a7:	mov    dh,0xbf
   1e6a9:	lea    ebp,[eax+eax*4]
   1e6ac:	dec    eax
   1e6ad:	outs   dx,BYTE PTR ds:[esi]
   1e6ae:	mov    eax,ds:0x8520fded
   1e6b3:	sub    al,0x21
   1e6b5:	das    
   1e6b6:	ja     0x1e717
   1e6b8:	mov    ch,0xc7
   1e6ba:	adc    al,0x80
   1e6bc:	test   al,0x8
   1e6be:	fadd   DWORD PTR [ecx-0x1c632284]
   1e6c4:	sbb    BYTE PTR [ecx],dl
   1e6c6:	add    BYTE PTR cs:[ebx+0x31],al
   1e6ca:	pop    ss
   1e6cb:	add    al,0x15
   1e6cd:	adc    DWORD PTR [ecx],esi
   1e6cf:	cmp    al,0x1a
   1e6d1:	pop    ss
   1e6d2:	add    al,0x5
   1e6d4:	add    ah,cl
   1e6d6:	inc    ebx
   1e6d7:	mov    ebp,0x8bc6197b
   1e6dc:	fdivp  st(1),st
   1e6de:	call   0xfa78:0x1d550714
   1e6e5:	cli    
   1e6e6:	mov    BYTE PTR [ecx],dh
   1e6e8:	bound  esi,QWORD PTR [ebx+eiz*4-0x3de821]
   1e6ef:	and    al,0x94
   1e6f1:	or     al,0xe7
   1e6f3:	jl     0x1e722
   1e6f5:	jns    0x1e712
   1e6f7:	xlat   BYTE PTR ds:[ebx]
   1e6f8:	jb     0x1e6de
   1e6fa:	fistp  QWORD PTR [ecx-0x2681fe51]
   1e700:	lods   al,BYTE PTR ds:[esi]
   1e701:	ret    
   1e702:	add    ah,cl
   1e704:	dec    esp
   1e705:	and    ecx,DWORD PTR [esi]
   1e707:	add    eax,0x100b2528
   1e70c:	adc    edx,DWORD PTR [ebx]
   1e70e:	or     edi,DWORD PTR [eax]
   1e710:	add    ah,cl
   1e712:	in     al,dx
   1e713:	pop    ss
   1e714:	ss int3 
   1e716:	enter  0x634f,0xaf
   1e71a:	jns    0x1e6a0
   1e71c:	arpl   cx,dx
   1e71e:	(bad)  
   1e720:	shr    DWORD PTR [eax-0x4f],0xad
   1e724:	shl    BYTE PTR [edi+0x2bf9cca0],1
   1e72a:	add    dl,al
   1e72c:	lock push esp
   1e72e:	ror    DWORD PTR [eax-0x1b7e7ac9],0xe1
   1e735:	cli    
   1e736:	imul   ecx,DWORD PTR [eax+ebx*2],0xffffff8c
   1e73a:	out    dx,al
   1e73b:	jb     0x1e71e
   1e73d:	cmp    esi,esp
   1e73f:	xchg   BYTE PTR [eax-0x30f44e76],ah
   1e745:	addr16 add ah,cl
   1e748:	dec    esp
   1e749:	and    ecx,DWORD PTR [esi]
   1e74b:	add    eax,0x100b2528
   1e750:	adc    edx,DWORD PTR [ebx]
   1e752:	or     ebp,DWORD PTR [esi]
   1e754:	add    ah,cl
   1e756:	outs   dx,BYTE PTR ds:[esi]
   1e757:	imul   ecx,ebx,0xffffffdc
   1e75a:	lahf   
   1e75b:	and    dh,BYTE PTR [edx]
   1e75d:	or     DWORD PTR [esi+eax*2+0x43],ebx
   1e761:	ret    0x6edd
   1e764:	pop    ds
   1e765:	imul   BYTE PTR [edx-0x5e]
   1e768:	fsubr  QWORD PTR [ebx]
   1e76a:	les    esp,FWORD PTR [ecx+0x1e8c145b]
   1e770:	aaa    
   1e771:	push   edi
   1e772:	call   0x3072:0xc6ca2a4c
   1e779:	and    al,0xd9
   1e77b:	daa    
   1e77c:	pusha  
   1e77d:	loop   0x1e74d
   1e77f:	shl    DWORD PTR [edx],0xf1
   1e782:	inc    edx
   1e783:	call   0x9f72540
   1e788:	cmovns esi,DWORD PTR [esi-0x71]
   1e78c:	add    ah,cl
   1e78e:	imul   eax,DWORD PTR [eax],0xe
   1e791:	add    BYTE PTR [edi],dl
   1e793:	add    BYTE PTR [eax+eax*1],bl
   1e796:	or     eax,DWORD PTR [eax]
   1e798:	or     DWORD PTR [eax],eax
   1e79a:	pop    edi
   1e79b:	add    BYTE PTR [ecx],al
   1e79d:	add    BYTE PTR [eax+eax*1],bl
   1e7a0:	dec    edx
   1e7a1:	add    BYTE PTR [eax],cl
   1e7a3:	add    BYTE PTR [eax],al
   1e7a5:	add    BYTE PTR [eax],al
   1e7a7:	add    BYTE PTR [ecx],bh
   1e7a9:	mov    ebp,0x3e89e296
   1e7ae:	and    edi,esp
   1e7b0:	sbb    bh,BYTE PTR [ebx]
   1e7b2:	push   edi
   1e7b3:	mov    ah,0x66
   1e7b5:	and    ebp,ebx
   1e7b7:	xor    BYTE PTR [edx-0x3d],dh
   1e7ba:	jae    0x1e80b
   1e7bc:	call   0x277c9e16
   1e7c1:	daa    
   1e7c2:	push   0xffffff85
   1e7c4:	mov    bh,0xef
   1e7c6:	int3   
   1e7c7:	cmp    eax,0xa213cc44
   1e7cc:	push   ds
   1e7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e7ce:	adc    esp,DWORD PTR [eax-0x3b1abf1d]
   1e7d4:	mov    dl,0x6
   1e7d6:	push   ds
   1e7d7:	push   ecx
   1e7d8:	mov    ds:0x3baa55,al
   1e7dd:	int3   
   1e7de:	outs   dx,BYTE PTR ds:[esi]
   1e7df:	sbb    dl,BYTE PTR [eax]
   1e7e1:	or     BYTE PTR [eax],al
   1e7e3:	inc    edx
   1e7e4:	dec    edx
   1e7e5:	or     BYTE PTR [eax],al
   1e7e7:	add    BYTE PTR [edx+0x75a5184d],cl
   1e7ed:	sar    BYTE PTR [ebp-0x3e139123],0x94
   1e7f4:	push   eax
   1e7f5:	mov    gs,WORD PTR [ebp+0x485ac203]
   1e7fb:	xchg   BYTE PTR [ebx+0x28],dl
   1e7fe:	sub    eax,0x56e17cad
   1e803:	xchg   ebp,eax
   1e804:	or     ebx,DWORD PTR [edi]
   1e806:	push   ds
   1e807:	call   0x4726:0x416f0c53
   1e80e:	into   
   1e80f:	sahf   
   1e810:	sbb    bh,BYTE PTR [edx+ecx*8-0x69]
   1e814:	or     BYTE PTR [edi-0x7456a49a],al
   1e81a:	aad    0xc6
   1e81c:	aam    0xb9
   1e81e:	ins    DWORD PTR es:[edi],dx
   1e81f:	adc    ebp,DWORD PTR [eax+eax*1+0x5c]
   1e823:	add    BYTE PTR [edi],cl
   1e825:	add    BYTE PTR [edx],ch
   1e827:	add    BYTE PTR [edx],cl
   1e829:	add    BYTE PTR [edi],al
   1e82b:	add    BYTE PTR [ecx],dl
   1e82d:	add    BYTE PTR [eax],cl
   1e82f:	add    BYTE PTR [edi],bh
   1e831:	add    BYTE PTR ds:0x1b000000,bh
   1e837:	add    BYTE PTR [eax],ch
   1e839:	add    BYTE PTR [edi],ch
   1e83b:	add    BYTE PTR [edx],cl
   1e83d:	add    BYTE PTR [edx],cl
   1e83f:	add    BYTE PTR [edi],al
   1e841:	add    BYTE PTR [ecx],dl
   1e843:	add    BYTE PTR [eax],cl
   1e845:	add    BYTE PTR [esi+0x0],bl
   1e848:	add    DWORD PTR [eax],eax
   1e84a:	outs   dx,BYTE PTR ds:[esi]
   1e84b:	add    BYTE PTR [eax],al
   1e84d:	add    BYTE PTR [ebx-0x8884d0],dh
   1e853:	cs mov ebx,0x855fde80
   1e859:	dec    esi
   1e85a:	test   ecx,0xf112cfee
   1e860:	cdq    
   1e861:	popa   
   1e862:	sti    
   1e863:	aam    0x92
   1e865:	shl    DWORD PTR [ecx+0x501b7848],cl
   1e86b:	aas    
   1e86c:	(bad)  
   1e86e:	imul   ebp,esi,0x8ec52b94
   1e874:	mov    eax,ds:0x6565d943
   1e879:	ins    DWORD PTR es:[edi],dx
   1e87a:	ret    
   1e87b:	inc    edi
   1e87c:	in     eax,0xb1
   1e87e:	jne    0x1e849
   1e880:	jno    0x1e887
   1e882:	mov    ecx,0x2c398580
   1e887:	stos   BYTE PTR es:[edi],al
   1e888:	imul   eax,DWORD PTR [eax],0xc0b8603b
   1e88e:	cdq    
   1e88f:	fwait
   1e890:	mov    dl,0xfd
   1e892:	ja     0x1e8c6
   1e894:	mov    ecx,0x8d1a134c
   1e899:	xchg   edi,eax
   1e89a:	rcl    ebp,0xb2
   1e89d:	sbb    al,0x13
   1e89f:	push   0xd434794f
   1e8a4:	and    bl,BYTE PTR [ebx]
   1e8a6:	mov    ecx,0xba695366
   1e8ab:	ja     0x1e921
   1e8ad:	add    BYTE PTR [ecx],ch
   1e8af:	dec    edi
   1e8b0:	cmc    
   1e8b1:	and    bl,BYTE PTR [esi-0x51]
   1e8b4:	sub    al,BYTE PTR [edx-0x56]
   1e8b7:	xchg   esi,eax
   1e8b8:	test   ch,cl
   1e8ba:	retf   
   1e8bb:	mov    eax,0xb3e68ae4
   1e8c0:	sbb    al,0x76
   1e8c2:	(bad)  
   1e8c3:	iret   
   1e8c4:	ret    0x14c9
   1e8c7:	test   eax,0xe5fefd89
   1e8cc:	cld    
   1e8cd:	jmp    0x1e900
   1e8cf:	shl    BYTE PTR [ebx-0x367bac3b],cl
   1e8d5:	cmp    DWORD PTR [ebx],ebp
   1e8d7:	(bad)  
   1e8d8:	xor    al,0x58
   1e8da:	xor    al,bh
   1e8dc:	mov    ds:0x38e80fe2,eax
   1e8e1:	mov    ecx,0x2e0005
   1e8e6:	pop    ebp
   1e8e7:	add    BYTE PTR [edx],cl
   1e8e9:	add    BYTE PTR [edx],cl
   1e8eb:	add    BYTE PTR [eax],al
   1e8ed:	add    BYTE PTR [edx-0x37],dl
   1e8f0:	jp     0x1e8a2
   1e8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e8f3:	mov    eax,ds:0x753b3ce8
   1e8f8:	mov    al,ds:0x40891974
   1e8fd:	imul   esp,edx,0xffffffd7
   1e900:	(bad)  
   1e901:	jmp    0xaebd:0x74d91128
   1e908:	hlt    
   1e909:	retf   
   1e90a:	or     esi,ebx
   1e90c:	stc    
   1e90d:	sub    BYTE PTR [ebx-0x7fa9c72c],ch
   1e913:	lahf   
   1e914:	adc    al,0xc4
   1e916:	ins    DWORD PTR es:[edi],dx
   1e917:	test   eax,0xfd0659da
   1e91c:	sub    al,0x0
   1e91e:	pop    esp
   1e91f:	add    BYTE PTR [edi],cl
   1e921:	add    BYTE PTR [edx],ch
   1e923:	add    BYTE PTR [edx],cl
   1e925:	add    BYTE PTR [edi],al
   1e927:	add    BYTE PTR [ecx],dl
   1e929:	add    BYTE PTR [eax],cl
   1e92b:	add    BYTE PTR [edi],bh
   1e92d:	add    BYTE PTR ds:0x1b000000,bh
   1e933:	add    BYTE PTR [eax],ch
   1e935:	add    BYTE PTR [edi],ch
   1e937:	add    BYTE PTR [edx],cl
   1e939:	add    BYTE PTR [edx],cl
   1e93b:	add    BYTE PTR [edi],al
   1e93d:	add    BYTE PTR [ecx],dl
   1e93f:	add    BYTE PTR [eax],cl
   1e941:	add    BYTE PTR [esi+0x0],bl
   1e944:	add    DWORD PTR [eax],eax
   1e946:	outs   dx,BYTE PTR ds:[esi]
   1e947:	add    BYTE PTR [eax],bh
   1e949:	add    BYTE PTR [esi],dl
   1e94b:	add    BYTE PTR [ebx],bl
   1e94d:	add    BYTE PTR [edi],bl
   1e94f:	add    BYTE PTR [ebx],dl
   1e951:	add    BYTE PTR [edi],dl
   1e953:	add    BYTE PTR [ecx],al
   1e955:	add    BYTE PTR [edi],ch
   1e957:	add    BYTE PTR [eax],al
   1e959:	add    BYTE PTR [ebx+edi*2-0x7e165094],ch
   1e960:	xchg   edi,eax
   1e961:	xlat   BYTE PTR ds:[ebx]
   1e962:	xchg   esp,eax
   1e963:	pop    ss
   1e964:	call   0x3b3d:0x2dd63eb7
   1e96b:	les    ebx,FWORD PTR [edi+0x1109417d]
   1e971:	shl    edx,cl
   1e973:	test   eax,0xa980dda8
   1e978:	cmp    DWORD PTR [ecx+esi*2+0x0],esp
   1e97c:	pop    esp
   1e97d:	add    BYTE PTR [edi],cl
   1e97f:	add    BYTE PTR [edx],ch
   1e981:	add    BYTE PTR [edx],cl
   1e983:	add    BYTE PTR [edi],al
   1e985:	add    BYTE PTR [ecx],dl
   1e987:	add    BYTE PTR [eax],cl
   1e989:	add    BYTE PTR [edi],bh
   1e98b:	add    BYTE PTR ds:0x1b000000,bh
   1e991:	add    BYTE PTR [eax],al
   1e993:	add    BYTE PTR [esi+0x3fe68fa2],al
   1e999:	test   eax,0x92ea5470
   1e99e:	push   edx
   1e99f:	int3   
   1e9a0:	ret    
   1e9a1:	push   ebp
   1e9a2:	mov    esp,0x415225a1
   1e9a7:	push   cs
   1e9a8:	sbb    eax,0x487e4793
   1e9ad:	dec    edx
   1e9ae:	test   al,0xc8
   1e9b0:	lahf   
   1e9b1:	mov    al,0xe9
   1e9b3:	sbb    ecx,DWORD PTR [ecx+0x5c004921]
   1e9b9:	add    BYTE PTR [esi],cl
   1e9bb:	add    BYTE PTR [edi],dh
   1e9bd:	add    BYTE PTR [edx],al
   1e9bf:	add    BYTE PTR [esi],cl
   1e9c1:	add    BYTE PTR [edx],bl
   1e9c3:	add    BYTE PTR [edi],al
   1e9c5:	add    BYTE PTR [esi],al
   1e9c7:	add    BYTE PTR [ebx],cl
   1e9c9:	add    BYTE PTR ds:0x2c001100,ah
   1e9cf:	add    BYTE PTR [edx],al
   1e9d1:	add    BYTE PTR [ebx],cl
   1e9d3:	add    BYTE PTR [ecx],al
   1e9d5:	add    BYTE PTR [edi],al
   1e9d7:	add    BYTE PTR [ebx],cl
   1e9d9:	add    BYTE PTR [ecx],bh
   1e9db:	add    BYTE PTR [edi],cl
   1e9dd:	add    BYTE PTR [edx],cl
   1e9df:	add    BYTE PTR [edx],cl
   1e9e1:	add    BYTE PTR [edi],al
   1e9e3:	add    BYTE PTR [ecx],dl
   1e9e5:	add    BYTE PTR [eax],cl
   1e9e7:	add    BYTE PTR [ecx],dl
   1e9e9:	add    BYTE PTR [edi],bl
   1e9eb:	add    BYTE PTR [esi],dh
   1e9ed:	add    BYTE PTR [edi],al
   1e9ef:	add    BYTE PTR [eax],al
   1e9f1:	add    BYTE PTR [edi],dl
   1e9f3:	add    BYTE PTR [ebx],cl
   1e9f5:	add    BYTE PTR [edx],bl
   1e9f7:	add    BYTE PTR [edi],dh
   1e9f9:	add    BYTE PTR [eax+eax*1],ch
   1e9fc:	add    DWORD PTR [eax],eax
   1e9fe:	sbb    al,BYTE PTR [eax]
   1ea00:	push   es
   1ea01:	add    BYTE PTR ds:0x3f000300,bl
   1ea07:	add    BYTE PTR [esi],dh
   1ea09:	add    BYTE PTR [ecx],dl
   1ea0b:	add    BYTE PTR [eax],ch
   1ea0d:	add    BYTE PTR [edi],cl
   1ea0f:	add    BYTE PTR [esi],dh
   1ea11:	add    BYTE PTR [edi],dl
   1ea13:	add    BYTE PTR [eax+eax*1],al
   1ea16:	pop    ds
   1ea17:	add    BYTE PTR [edx],cl
   1ea19:	add    BYTE PTR [esi],al
   1ea1b:	add    BYTE PTR [esi],dl
   1ea1d:	add    BYTE PTR [edi],ch
   1ea1f:	add    BYTE PTR [eax],al
   1ea21:	add    bh,ah
   1ea23:	mov    al,0xf7
   1ea25:	jp     0x1ea36
   1ea27:	cdq    
   1ea28:	add    esi,DWORD PTR [ebp-0x2fc01f74]
   1ea2e:	cmp    DWORD PTR [ebx-0x27],ebx
   1ea31:	(bad)  
   1ea32:	mov    ecx,0x3cbd603d
   1ea37:	push   ss
   1ea38:	out    dx,eax
   1ea39:	jg     0x1e9fe
   1ea3b:	sbb    cl,dl
   1ea3d:	jp     0x1ea1f
   1ea3f:	xor    al,0x92
   1ea41:	lods   al,BYTE PTR ds:[esi]
   1ea42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1ea43:	out    0xd6,eax
   1ea45:	aaa    
   1ea46:	nop
   1ea47:	aas    
   1ea48:	inc    eax
   1ea49:	xchg   edi,eax
   1ea4a:	js     0x1ea00
   1ea4c:	xchg   esp,eax
   1ea4d:	sub    eax,0x93ba0e63
   1ea52:	pop    ebp
   1ea53:	loopne 0x1e9f2
   1ea55:	mov    ch,0xb4
   1ea57:	cmp    eax,0xdb72e2c5
   1ea5c:	addr16 cmp eax,0x6c0081
   1ea62:	pop    ds
   1ea63:	add    BYTE PTR [edx],dl
   1ea65:	add    BYTE PTR [edx],dl
   1ea67:	add    BYTE PTR [eax],al
   1ea69:	add    BYTE PTR [ebp+0x0],bl
   1ea6c:	dec    ebx
   1ea6d:	add    BYTE PTR ds:0x1d00,bl
   1ea73:	add    BYTE PTR [ecx-0x1e81fdbe],ah
   1ea79:	pop    ecx
   1ea7a:	and    eax,0x1c636233
   1ea7f:	clc    
   1ea80:	xor    al,0xeb
   1ea82:	sbb    edi,0x2373cbcd
   1ea88:	in     eax,dx
   1ea89:	neg    BYTE PTR [ecx]
   1ea8b:	jmp    0x242a:0x491dfb54
   1ea92:	scas   al,BYTE PTR es:[edi]
   1ea93:	sub    edx,DWORD PTR [edx+0x4a]
   1ea96:	(bad)  
   1ea97:	fcmovb st,st(6)
   1ea99:	dec    ebp
   1ea9a:	mov    eax,ds:0xe3cc012d
   1ea9f:	add    ebx,ecx
   1eaa1:	clc    
   1eaa2:	loop   0x1ea4f
   1eaa4:	mov    al,0xfd
   1eaa6:	mov    ah,0x1e
   1eaa8:	adc    BYTE PTR [eax+eax*1+0x252d5acc],dh
   1eaaf:	aaa    
   1eab0:	push   ss
   1eab1:	push   es
   1eab2:	sbb    BYTE PTR [eax],cl
   1eab4:	xor    DWORD PTR [edx+ebx*1],edi
   1eab7:	pop    ss
   1eab8:	add    al,0x5
   1eaba:	add    ah,cl
   1eabc:	loop   0x1eb22
   1eabe:	ficomp DWORD PTR [edi+esi*1-0x12]
   1eac2:	(bad)  
   1eac4:	loop   0x1eae3
   1eac6:	sbb    DWORD PTR [eax+0x2d],esi
   1eac9:	inc    edx
   1eaca:	leave  
   1eacb:	push   esp
   1eacc:	xor    eax,0x38c52942
   1ead1:	inc    edi
   1ead2:	jl     0x1ea9e
   1ead4:	fild   WORD PTR [ebp+0x3e]
   1ead7:	mov    esp,0x133e1bf7
   1eadc:	mov    bh,0xc0
   1eade:	pushf  
   1eadf:	inc    eax
   1eae0:	je     0x1eb0b
   1eae2:	(bad)  
   1eae3:	stc    
   1eae4:	mov    cs,eax
   1eae6:	call   FWORD PTR [ebp+0x18]
   1eae9:	xor    al,0xa6
   1eaeb:	mov    ?,WORD PTR [bx+si-0x24]
   1eaef:	lds    eax,FWORD PTR [ecx]
   1eaf1:	aas    
   1eaf2:	(bad)  
   1eaf4:	cs dec ebp
   1eaf6:	call   0x4e01f86f
   1eafb:	cmp    ah,BYTE PTR [ebx]
   1eafd:	and    eax,0x33111d1b
   1eb02:	aas    
   1eb03:	sbb    eax,DWORD PTR [esi]
   1eb05:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eb0c:	sbb    eax,0x1ccc000b
   1eb11:	scas   al,BYTE PTR es:[edi]
   1eb12:	mov    BYTE PTR [edi-0x3aef7e18],dl
   1eb18:	mov    edx,0x51093237
   1eb1d:	adc    BYTE PTR [edx],0xdd
   1eb20:	xchg   esi,eax
   1eb21:	ins    BYTE PTR es:[edi],dx
   1eb22:	ins    BYTE PTR es:[edi],dx
   1eb23:	and    DWORD PTR [ebx+eiz*1],edx
   1eb26:	push   esp
   1eb27:	xchg   edx,eax
   1eb28:	sar    DWORD PTR [edi-0x2e394a3f],0x3b
   1eb2f:	int3   
   1eb30:	xor    DWORD PTR [esi+ebp*2],ebx
   1eb33:	cdq    
   1eb34:	rol    BYTE PTR [ebx+0x55e461a0],0x40
   1eb3b:	dec    ecx
   1eb3c:	add    DWORD PTR [edi-0x67],ebp
   1eb3f:	and    al,0x97
   1eb41:	jns    0x1eb5a
   1eb43:	outs   dx,DWORD PTR ds:[esi]
   1eb44:	enter  0xbb6,0xec
   1eb48:	add    ah,cl
   1eb4a:	pop    edx
   1eb4b:	sub    eax,0x1b1d2227
   1eb50:	adc    DWORD PTR [esi],eax
   1eb52:	pop    ss
   1eb53:	and    bh,BYTE PTR [edi]
   1eb55:	sbb    eax,DWORD PTR [esi]
   1eb57:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eb5e:	sbb    eax,0x1dcc000b
   1eb63:	sub    eax,0x52926d94
   1eb68:	fcomp  DWORD PTR [ecx+0x1b4722f6]
   1eb6e:	enter  0x765f,0xf8
   1eb72:	xor    eax,0x8432583b
   1eb77:	(bad)  
   1eb78:	xchg   esp,eax
   1eb79:	clc    
   1eb7a:	retf   0x5370
   1eb7d:	inc    esp
   1eb7e:	pop    esp
   1eb7f:	scas   eax,DWORD PTR es:[edi]
   1eb80:	ins    BYTE PTR es:[edi],dx
   1eb81:	xor    eax,0xd262b4bb
   1eb86:	rol    BYTE PTR [eax],cl
   1eb88:	push   ebp
   1eb89:	push   esi
   1eb8a:	cld    
   1eb8b:	int    0xa6
   1eb8d:	adc    al,0xa8
   1eb90:	ret    
   1eb91:	ja     0x1ebd4
   1eb93:	push   ebp
   1eb94:	loope  0x1eb8f
   1eb96:	cmp    al,ch
   1eb98:	pushf  
   1eb99:	dec    ebp
   1eb9a:	int3   
   1eb9b:	xor    dl,0xe3
   1eb9e:	int3   
   1eb9f:	mov    esi,0x8b9bf6ff
   1eba4:	fwait
   1eba5:	mov    edi,0x438cfc69
   1ebaa:	mov    eax,0xa858082e
   1ebaf:	push   es
   1ebb0:	fimul  DWORD PTR [edi+esi*1-0x16fb5]
   1ebb7:	xchg   BYTE PTR [eax+0x6e],bl
   1ebba:	push   esi
   1ebbb:	outs   dx,DWORD PTR ds:[esi]
   1ebbc:	add    BYTE PTR [ebp+0x2f],dh
   1ebbf:	ins    BYTE PTR es:[edi],dx
   1ebc0:	cmp    al,0x4a
   1ebc2:	add    ah,cl
   1ebc4:	pop    esp
   1ebc5:	add    BYTE PTR [eax],bl
   1ebc7:	add    BYTE PTR [ebx],ch
   1ebc9:	add    BYTE PTR [eax+eax*1],bl
   1ebcc:	aaa    
   1ebcd:	add    BYTE PTR [ecx],ah
   1ebcf:	add    BYTE PTR [ebx],dl
   1ebd1:	add    BYTE PTR [edi],bl
   1ebd3:	add    BYTE PTR [edx],cl
   1ebd5:	add    BYTE PTR [esi],al
   1ebd7:	add    BYTE PTR [esi],dl
   1ebd9:	add    BYTE PTR [edi],ch
   1ebdb:	add    BYTE PTR [ecx+0x0],bh
   1ebde:	push   esi
   1ebdf:	add    BYTE PTR [eax],al
   1ebe1:	add    dh,cl
   1ebe3:	add    esi,DWORD PTR [eax]
   1ebe5:	sbb    eax,0x48ebbf31
   1ebea:	adc    eax,0x470f995a
   1ebef:	and    cl,BYTE PTR [esi-0x411b64a1]
   1ebf5:	iret   
   1ebf6:	xchg   ebp,edx
   1ebf8:	addr16 ja 0x1ec66
   1ebfb:	clc    
   1ebfc:	lods   al,BYTE PTR ds:[esi]
   1ebfd:	test   DWORD PTR [ebp-0x53],ebp
   1ec00:	jnp    0x1ec12
   1ec02:	cmp    al,0x6b
   1ec04:	leave  
   1ec05:	pop    es
   1ec06:	fs je  0x1ec09
   1ec09:	int3   
   1ec0a:	pop    esp
   1ec0b:	add    BYTE PTR [eax],bl
   1ec0d:	add    BYTE PTR [ecx],ah
   1ec0f:	add    BYTE PTR [ebx],dl
   1ec11:	add    BYTE PTR [edi],bl
   1ec13:	add    BYTE PTR [edx],cl
   1ec15:	add    BYTE PTR [esi],al
   1ec17:	add    BYTE PTR [ecx],bh
   1ec19:	add    BYTE PTR [ecx+0x0],bh
   1ec1c:	push   esi
   1ec1d:	add    BYTE PTR [eax],al
   1ec1f:	add    BYTE PTR [edi+0x22f7c769],ch
   1ec25:	clc    
   1ec26:	mov    ecx,0xe8e01eec
   1ec2b:	test   BYTE PTR [edx+0x49bf05b1],cl
   1ec31:	or     ch,cl
   1ec33:	mov    DWORD PTR [edi],ebx
   1ec35:	jecxz  0x1ec6c
   1ec37:	or     esp,DWORD PTR [edi-0x6f28c67b]
   1ec3d:	inc    edx
   1ec3e:	mov    edi,0x4f8172a0
   1ec43:	mov    WORD PTR cs:[eax+0x43638f05],fs
   1ec4a:	repnz add BYTE PTR [ebx+0x0],dl
   1ec4e:	jns    0x1ec50
   1ec50:	jae    0x1ec52
   1ec52:	inc    ebp
   1ec53:	add    BYTE PTR [esi+0x0],dh
   1ec56:	je     0x1ec58
   1ec58:	inc    ebx
   1ec59:	add    BYTE PTR [eax],al
   1ec5b:	add    BYTE PTR [eax+ebx*1+0x21],bl
   1ec5f:	adc    ebx,DWORD PTR [edi]
   1ec61:	or     al,BYTE PTR [esi]
   1ec63:	cmp    DWORD PTR [eax],eax
   1ec65:	int3   
   1ec66:	cmp    dl,dh
   1ec68:	mov    dl,0xa6
   1ec6a:	jb     0x1ecd5
   1ec6c:	jno    0x1ec6b
   1ec6e:	popf   
   1ec6f:	xchg   ebp,eax
   1ec70:	push   esi
   1ec71:	jge    0x1ecbb
   1ec73:	add    DWORD PTR [eax-0x3e],edx
   1ec76:	mov    ebx,0xee150d52
   1ec7b:	sub    BYTE PTR [eax-0x14],al
   1ec7e:	cmp    ebp,DWORD PTR [ebp+esi*2+0x23]
   1ec82:	fistp  QWORD PTR fs:[ecx]
   1ec85:	jo     0x1ec1c
   1ec87:	adc    al,0x18
   1ec89:	loopne 0x1ec73
   1ec8b:	add    BYTE PTR [eax+eax*1+0x0],bl
   1ec8f:	add    BYTE PTR [edx+0x0],dh
   1ec92:	jb     0x1ec94
   1ec94:	add    BYTE PTR [eax],al
   1ec96:	pusha  
   1ec97:	add    BYTE PTR [esi],bh
   1ec99:	or     DWORD PTR [edi-0x23],esi
   1ec9c:	pop    eax
   1ec9d:	inc    esi
   1ec9e:	pop    ebp
   1ec9f:	or     cl,BYTE PTR [ebx]
   1eca1:	and    bl,BYTE PTR [ebp-0x65]
   1eca4:	inc    eax
   1eca5:	mov    WORD PTR [ecx+0x52],?
   1eca8:	das    
   1eca9:	jnp    0x16abffc5
   1ecaf:	call   0xad2e5bb8
   1ecb4:	cmp    ch,BYTE PTR [ebx]
   1ecb6:	into   
   1ecb7:	stos   DWORD PTR es:[edi],eax
   1ecb8:	rol    DWORD PTR [eax],1
   1ecba:	pop    esp
   1ecbb:	add    BYTE PTR [ebx+0x63],ah
   1ecbe:	add    ah,cl
   1ecc0:	test   eax,0xe997afd3
   1ecc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1ecc6:	mov    bh,dh
   1ecc8:	daa    
   1ecc9:	loop   0x1ec77
   1eccb:	push   ebp
   1eccc:	add    DWORD PTR [ebx+0x2b88a861],edi
   1ecd2:	ret    
   1ecd3:	idiv   ebx
   1ecd5:	call   0x836da842
   1ecda:	clc    
   1ecdb:	adc    esp,DWORD PTR [esi+0x19]
   1ecde:	push   edi
   1ecdf:	dec    ebx
   1ece0:	fstp   TBYTE PTR [ebp+0x2a164b31]
   1ece6:	mov    esi,0x8c91cf7e
   1eceb:	mov    al,0x0
   1eced:	int3   
   1ecee:	and    eax,0x5ccc0053
   1ecf3:	add    BYTE PTR [ebx+0x0],dh
   1ecf6:	jns    0x1ecf8
   1ecf8:	jae    0x1ecfa
   1ecfa:	je     0x1ecfc
   1ecfc:	add    BYTE PTR gs:[ebp+0x0],ch
   1ed00:	jb     0x1ed02
   1ed02:	outs   dx,DWORD PTR ds:[esi]
   1ed03:	add    BYTE PTR [edi+0x0],ch
   1ed06:	je     0x1ed08
   1ed08:	pop    esp
   1ed09:	add    BYTE PTR [ebx+0x0],dh
   1ed0c:	jns    0x1ed0e
   1ed0e:	jae    0x1ed10
   1ed10:	je     0x1ed12
   1ed12:	add    BYTE PTR gs:[ebp+0x0],ch
   1ed16:	xor    eax,DWORD PTR [eax]
   1ed18:	xor    al,BYTE PTR [eax]
   1ed1a:	pop    esp
   1ed1b:	add    BYTE PTR ds:0x5300,ah
   1ed21:	add    BYTE PTR [ecx],dh
   1ed23:	xor    ch,BYTE PTR cs:[esi]
   1ed26:	xor    eax,DWORD PTR [eax]
   1ed28:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ed2f:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1ed33:	outs   dx,BYTE PTR gs:[esi]
   1ed35:	addr16 je 0x1eda0
   1ed38:	and    BYTE PTR [ebx+0x68],ah
   1ed3b:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ed3f:	int3   
   1ed40:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ed47:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1ed4b:	popa   
   1ed4c:	je     0x1edaf
   1ed4e:	and    BYTE PTR [ebx+0x68],ah
   1ed51:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ed55:	int3   
   1ed56:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed5d:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ed61:	je     0x1edc4
   1ed63:	outs   dx,BYTE PTR ds:[esi]
   1ed64:	arpl   WORD PTR [ebp+0x20],sp
   1ed67:	je     0x1edd8
   1ed69:	outs   dx,DWORD PTR ds:[esi]
   1ed6a:	and    BYTE PTR [esi+0x61],ah
   1ed6d:	jb     0x1ed8f
   1ed6f:	bound  esp,QWORD PTR [ecx+0x63]
   1ed72:	imul   eax,DWORD PTR [eax],0x69
   1ed75:	outs   dx,BYTE PTR ds:[esi]
   1ed76:	jbe    0x1edd9
   1ed78:	ins    BYTE PTR es:[edi],dx
   1ed79:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ed81:	outs   dx,BYTE PTR ds:[esi]
   1ed82:	arpl   WORD PTR [ebp+0x20],sp
   1ed85:	arpl   WORD PTR [edi+0x64],bp
   1ed88:	add    BYTE PTR gs:[ecx+0x6e],ch
   1ed8c:	jbe    0x1edef
   1ed8e:	ins    BYTE PTR es:[edi],dx
   1ed8f:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1ed97:	popa   
   1ed98:	ins    BYTE PTR es:[edi],dx
   1ed99:	das    
   1ed9a:	ins    BYTE PTR es:[edi],dx
   1ed9b:	outs   dx,BYTE PTR gs:[esi]
   1ed9d:	addr16 je 0x1ee08
   1eda0:	and    BYTE PTR [ebx+0x6f],ah
   1eda3:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1eda8:	jbe    0x1ee0b
   1edaa:	ins    BYTE PTR es:[edi],dx
   1edab:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1edb3:	outs   dx,BYTE PTR ds:[esi]
   1edb4:	arpl   WORD PTR [ebp+0x73],sp
   1edb7:	and    BYTE PTR [ebx+0x65],dh
   1edba:	je     0x1edbc
   1edbc:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1edc3:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1edc7:	gs jb  0x1ee2b
   1edca:	ins    BYTE PTR es:[edi],dx
   1edcb:	das    
   1edcc:	ins    BYTE PTR es:[edi],dx
   1edcd:	outs   dx,BYTE PTR gs:[esi]
   1edcf:	addr16 je 0x1ee3a
   1edd2:	jae    0x1edf4
   1edd4:	jae    0x1ee3b
   1edd6:	je     0x1edd8
   1edd8:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1eddf:	and    BYTE PTR [edx+0x69],ah
   1ede2:	je     0x1ee04
   1ede4:	ins    BYTE PTR es:[edi],dx
   1ede5:	outs   dx,BYTE PTR gs:[esi]
   1ede7:	addr16 je 0x1ee52
   1edea:	and    BYTE PTR [edx+0x65],dh
   1eded:	jo     0x1ee54
   1edef:	popa   
   1edf0:	je     0x1edf2
   1edf2:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1edf9:	and    BYTE PTR [ebx+0x6f],ah
   1edfc:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1ee02:	addr16 je 0x1ee6d
   1ee05:	jae    0x1ee27
   1ee07:	jae    0x1ee6e
   1ee09:	je     0x1ee0b
   1ee0b:	int3   
   1ee0c:	je     0x1ee7d
   1ee0e:	outs   dx,DWORD PTR ds:[esi]
   1ee0f:	and    BYTE PTR [ebp+0x61],ch
   1ee12:	outs   dx,BYTE PTR ds:[esi]
   1ee13:	jns    0x1ee35
   1ee15:	ins    BYTE PTR es:[edi],dx
   1ee16:	outs   dx,BYTE PTR gs:[esi]
   1ee18:	addr16 je 0x1ee83
   1ee1b:	and    BYTE PTR [edi+0x72],ch
   1ee1e:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ee22:	je     0x1ee85
   1ee24:	outs   dx,BYTE PTR ds:[esi]
   1ee25:	arpl   WORD PTR [ebp+0x20],sp
   1ee28:	jae    0x1eea3
   1ee2a:	ins    DWORD PTR es:[edi],dx
   1ee2b:	bound  ebp,QWORD PTR [edi+0x6c]
   1ee2e:	jae    0x1ee30
   1ee30:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ee37:	and    BYTE PTR [ebx+0x74],dh
   1ee3a:	outs   dx,DWORD PTR ds:[esi]
   1ee3b:	jb     0x1eea2
   1ee3d:	and    BYTE PTR fs:[edx+0x6c],ah
   1ee41:	outs   dx,DWORD PTR ds:[esi]
   1ee42:	arpl   WORD PTR [ebx+0x20],bp
   1ee45:	ins    BYTE PTR es:[edi],dx
   1ee46:	outs   dx,BYTE PTR gs:[esi]
   1ee48:	addr16 je 0x1eeb3
   1ee4b:	jae    0x1ee4d
   1ee4d:	int3   
   1ee4e:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ee55:	and    BYTE PTR [edx+0x6c],ah
   1ee58:	outs   dx,DWORD PTR ds:[esi]
   1ee59:	arpl   WORD PTR [ebx+0x20],bp
   1ee5c:	je     0x1eed7
   1ee5e:	jo     0x1eec5
   1ee60:	add    ah,cl
   1ee62:	push   0x65646165
   1ee67:	jb     0x1ee89
   1ee69:	arpl   WORD PTR [edx+0x63],si
   1ee6c:	and    BYTE PTR [ebp+0x69],ch
   1ee6f:	jae    0x1eede
   1ee71:	popa   
   1ee72:	je     0x1eed7
   1ee74:	push   0x6b6e7500
   1ee79:	outs   dx,BYTE PTR ds:[esi]
   1ee7a:	outs   dx,DWORD PTR ds:[esi]
   1ee7b:	ja     0x1eeeb
   1ee7d:	and    BYTE PTR [eax+0x65],ch
   1ee80:	popa   
   1ee81:	fs gs jb 0x1eea5
   1ee85:	data16 ins BYTE PTR es:[edi],dx
   1ee87:	popa   
   1ee88:	addr16 jae 0x1eeab
   1ee8b:	jae    0x1eef2
   1ee8d:	je     0x1ee8f
   1ee8f:	int3   
   1ee90:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ee97:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1ee9b:	gs popa 
   1ee9d:	fs gs jb 0x1eec1
   1eea1:	arpl   WORD PTR [eax+0x65],bp
   1eea4:	arpl   WORD PTR [ebx+0x0],bp
   1eea7:	int3   
   1eea8:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1eeaf:	and    BYTE PTR [edi+0x69],dh
   1eeb2:	outs   dx,BYTE PTR ds:[esi]
   1eeb3:	outs   dx,DWORD PTR fs:[esi]
   1eeb5:	ja     0x1eed7
   1eeb7:	jae    0x1ef22
   1eeb9:	jp     0x1ef20
   1eebb:	add    BYTE PTR [ebp+0x6e],dh
   1eebe:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1eec2:	outs   dx,BYTE PTR ds:[esi]
   1eec3:	and    BYTE PTR [ebx+0x6f],ah
   1eec6:	ins    DWORD PTR es:[edi],dx
   1eec7:	jo     0x1ef3b
   1eec9:	gs jae 0x1ef3f
   1eecc:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1eed3:	.byte 0x68
   1eed4:	outs   dx,DWORD PTR ds:[esi]
   1eed5:	fs
	...

Disassembly of section INIT:

00078600 <INIT>:
   78600:	add    BYTE PTR [eax],al
   78602:	add    BYTE PTR [eax],al
   78604:	add    BYTE PTR [ecx+0x7771c],ah
   7860a:	mov    ecx,0xbb40e64e
   7860f:	test   eax,eax
   78611:	je     0x78617
   78613:	cmp    eax,ecx
   78615:	jne    0x78631
   78617:	mov    eax,ds:0x1f054
   7861c:	mov    eax,DWORD PTR [eax]
   7861e:	xor    eax,0x7771c
   78623:	mov    ds:0x7771c,eax
   78628:	jne    0x78631
   7862a:	mov    eax,ecx
   7862c:	mov    ds:0x7771c,eax
   78631:	not    eax
   78633:	mov    ds:0x77720,eax
   78638:	ret    
   78639:	aaa    
   7863a:	ficomp DWORD PTR [edx-0x74ac60]
   78640:	push   ebp
   78641:	mov    ebp,esp
   78643:	call   0x78605
   78648:	pop    ebp
   78649:	jmp    0x190b2
   7864e:	int3   
   7864f:	int3   
   78650:	xchg   esp,eax
   78651:	xchg   BYTE PTR [esi],al
	...
   7865b:	add    BYTE PTR [esi+0x8000688],ah
   78661:	lock add BYTE PTR [eax],al
   78664:	mov    WORD PTR [esi+0x6],es
   7866a:	add    BYTE PTR [eax],al
   7866c:	add    BYTE PTR [eax],al
   7866e:	add    BYTE PTR [eax],al
   78670:	enter  0x688,0x0
   78674:	add    al,dh
	...
   7868a:	add    BYTE PTR [eax],al
   7868c:	mov    ah,0x88
   7868e:	push   es
   7868f:	add    BYTE PTR [eax],al
   78691:	add    BYTE PTR [eax],al
   78693:	add    BYTE PTR [eax],dl
   78695:	xchg   DWORD PTR [esi],eax
   78697:	add    BYTE PTR [eax],ch
   78699:	xchg   DWORD PTR [esi],eax
   7869b:	add    BYTE PTR [edx],dh
   7869d:	xchg   DWORD PTR [esi],eax
   7869f:	add    BYTE PTR [edi+eax*4],bh
   786a2:	push   es
   786a3:	add    BYTE PTR [eax-0x79],dl
   786a6:	push   es
   786a7:	add    BYTE PTR [edx-0x79],ch
   786aa:	push   es
   786ab:	add    BYTE PTR [edi+eax*4+0x6],bh
   786af:	add    BYTE PTR [edi+eax*4-0x7861fffa],dl
   786b6:	push   es
   786b7:	add    BYTE PTR [esi-0xdfff979],dh
   786bd:	xchg   DWORD PTR [esi],eax
   786bf:	add    ah,bh
   786c1:	xchg   DWORD PTR [esi],eax
   786c3:	add    BYTE PTR [eax+ecx*4],dl
   786c6:	push   es
   786c7:	add    BYTE PTR [esi],bl
   786c9:	mov    BYTE PTR [esi],al
   786cb:	add    BYTE PTR [eax],bh
   786cd:	mov    BYTE PTR [esi],al
   786cf:	add    BYTE PTR [eax-0x78],cl
   786d2:	push   es
   786d3:	add    BYTE PTR [esi-0x78],bl
   786d6:	push   es
   786d7:	add    BYTE PTR [edx-0x78],ch
   786da:	push   es
   786db:	add    BYTE PTR [esi-0x78],bh
   786de:	push   es
   786df:	add    BYTE PTR [eax-0x69fff978],cl
   786e5:	mov    BYTE PTR [esi],al
   786e7:	add    al,bh
   786e9:	xchg   BYTE PTR [esi],al
   786eb:	add    dl,dl
   786ed:	xchg   DWORD PTR [esi],eax
   786ef:	add    al,dl
   786f1:	mov    BYTE PTR [esi],al
   786f3:	add    BYTE PTR [eax],al
   786f5:	add    BYTE PTR [eax],al
   786f7:	add    BYTE PTR [eax],dh
   786f9:	add    ecx,DWORD PTR [edi+0x62]
   786fc:	inc    sp
   786fe:	gs jb  0x78766
   78701:	data16 gs jb 0x7876a
   78705:	outs   dx,BYTE PTR ds:[esi]
   78706:	arpl   WORD PTR [ebp+0x4f],sp
   78709:	bound  ebp,QWORD PTR [edx+0x65]
   7870c:	arpl   WORD PTR [eax+eax*1+0x0],si
   78710:	sbb    eax,0x6c745204
   78715:	dec    ecx
   78716:	outs   dx,BYTE PTR ds:[esi]
   78717:	imul   esi,DWORD PTR [ebp+edx*2+0x6e],0x646f6369
   7871f:	gs push ebx
   78721:	je     0x78795
   78723:	imul   ebp,DWORD PTR [esi+0x67],0x57b0000
   7872a:	pop    edi
   7872b:	popa   
   7872c:	ins    BYTE PTR es:[edi],dx
   7872d:	ins    BYTE PTR es:[edi],dx
   7872e:	ins    DWORD PTR es:[edi],dx
   7872f:	jne    0x7879d
   78731:	add    BYTE PTR [ecx+0x5],bh
   78734:	pop    edi
   78735:	popa   
   78736:	ins    BYTE PTR es:[edi],dx
   78737:	ins    BYTE PTR es:[edi],dx
   78738:	imul   esi,DWORD PTR fs:[esi+0x0],0x7845004e
   78740:	inc    esi
   78741:	jb     0x787a8
   78743:	gs push eax
   78745:	outs   dx,DWORD PTR ds:[esi]
   78746:	outs   dx,DWORD PTR ds:[esi]
   78747:	ins    BYTE PTR es:[edi],dx
   78748:	push   edi
   78749:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xbd006761
   78751:	add    edx,DWORD PTR [edx+0x74]
   78754:	ins    BYTE PTR es:[edi],dx
   78755:	inc    ebx
   78756:	outs   dx,DWORD PTR ds:[esi]
   78757:	ins    DWORD PTR es:[edi],dx
   78758:	jo     0x787bb
   7875a:	jb     0x787c1
   7875c:	push   ebp
   7875d:	outs   dx,BYTE PTR ds:[esi]
   7875e:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   78765:	jb     0x787d0
   78767:	outs   dx,BYTE PTR ds:[esi]
   78768:	add    BYTE PTR [bp+si+0x2],al
   7876c:	dec    ebx
   7876d:	gs push edx
   7876f:	gs ins BYTE PTR es:[edi],dx
   78771:	gs popa 
   78773:	jae    0x787da
   78775:	dec    ebp
   78776:	jne    0x787ec
   78778:	gs js  0x7877b
   7877b:	add    BYTE PTR [ebp+0x2],ch
   7877e:	dec    ebx
   7877f:	gs push edi
   78781:	popa   
   78782:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   7878a:	ins    BYTE PTR es:[di],dx
   7878c:	gs dec edi
   7878e:	bound  ebp,QWORD PTR [edx+0x65]
   78791:	arpl   WORD PTR [eax+eax*1-0x57],si
   78795:	add    eax,0x736d656d
   7879a:	gs je  0x7879d
   7879d:	add    BYTE PTR [ecx+0x0],al
   787a0:	inc    ebp
   787a1:	js     0x787e4
   787a3:	ins    BYTE PTR es:[edi],dx
   787a4:	ins    BYTE PTR es:[edi],dx
   787a5:	outs   dx,DWORD PTR ds:[esi]
   787a6:	arpl   WORD PTR [ecx+0x74],sp
   787a9:	gs push eax
   787ab:	outs   dx,DWORD PTR ds:[esi]
   787ac:	outs   dx,DWORD PTR ds:[esi]
   787ad:	ins    BYTE PTR es:[edi],dx
   787ae:	push   edi
   787af:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xa1006761
   787b7:	add    cl,BYTE PTR [ebp+0x6d]
   787ba:	inc    edi
   787bb:	gs je  0x78811
   787be:	jns    0x78833
   787c0:	je     0x78827
   787c2:	ins    DWORD PTR es:[edi],dx
   787c3:	push   edx
   787c4:	outs   dx,DWORD PTR ds:[esi]
   787c5:	jne    0x7883b
   787c7:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   787ce:	gs jae 0x78844
   787d1:	add    BYTE PTR [edx+0x0],al
   787d4:	inc    ebp
   787d5:	js     0x78818
   787d7:	ins    BYTE PTR es:[edi],dx
   787d8:	ins    BYTE PTR es:[edi],dx
   787d9:	outs   dx,DWORD PTR ds:[esi]
   787da:	arpl   WORD PTR [ecx+0x74],sp
   787dd:	gs push eax
   787df:	outs   dx,DWORD PTR ds:[esi]
   787e0:	outs   dx,DWORD PTR ds:[esi]
   787e1:	ins    BYTE PTR es:[edi],dx
   787e2:	push   edi
   787e3:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   787eb:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   787f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   787f3:	add    eax,0x636d656d
   787f8:	jo     0x78873
   787fa:	add    BYTE PTR [eax],al
   787fc:	mov    DWORD PTR [ebx],0x436c7452
   78802:	outs   dx,DWORD PTR ds:[esi]
   78803:	jo     0x7887e
   78805:	push   ebp
   78806:	outs   dx,BYTE PTR ds:[esi]
   78807:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7880e:	jb     0x78879
   78810:	outs   dx,BYTE PTR ds:[esi]
   78811:	add    BYTE PTR [bx+si],al
   78814:	mov    DWORD PTR ds:0x6e736377,0x746163
   7881e:	push   es
   7881f:	add    eax,0x6c41775a
   78824:	ins    BYTE PTR es:[edi],dx
   78825:	outs   dx,DWORD PTR ds:[esi]
   78826:	arpl   WORD PTR [ecx+0x74],sp
   78829:	gs push esi
   7882b:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   78832:	gs ins DWORD PTR es:[edi],dx
   78834:	outs   dx,DWORD PTR ds:[esi]
   78835:	jb     0x788b0
   78837:	add    BYTE PTR [ebp+0x0],dh
   7883a:	inc    ebp
   7883b:	js     0x7888f
   7883d:	popa   
   7883e:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   78845:	jne    0x788ba
   78847:	add    bl,ah
   78849:	add    DWORD PTR [ecx+0x6f],ecx
   7884c:	inc    bx
   7884e:	outs   dx,DWORD PTR ds:[esi]
   7884f:	ins    DWORD PTR es:[edi],dx
   78850:	jo     0x788be
   78852:	gs je  0x788ba
   78855:	push   edx
   78856:	gs jno 0x788ce
   78859:	gs jae 0x788d0
   7885c:	add    BYTE PTR [eax],al
   7885e:	mov    ecx,0x70777305
   78863:	jb     0x788ce
   78865:	outs   dx,BYTE PTR ds:[esi]
   78866:	je     0x788ce
   78868:	add    BYTE PTR [eax],al
   7886a:	xor    eax,DWORD PTR [edx]
   7886c:	dec    ebx
   7886d:	gs push ecx
   7886f:	jne    0x788d6
   78871:	jb     0x788ec
   78873:	push   ebx
   78874:	jns    0x788e9
   78876:	je     0x788dd
   78878:	ins    DWORD PTR es:[edi],dx
   78879:	push   esp
   7887a:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   78881:	jo     0x788f5
   78883:	imul   ebp,DWORD PTR [esi+0x74],0x2660066
   7888a:	dec    ebx
   7888b:	gs push esp
   7888d:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   78894:	je     0x78896
   78896:	test   BYTE PTR [ecx],0x4b
   78899:	gs inc edx
   7889b:	jne    0x78904
   7889d:	inc    ebx
   7889e:	push   0x456b6365
   788a3:	js     0x788a5
   788a5:	add    BYTE PTR [esi+0x74],ch
   788a8:	outs   dx,DWORD PTR ds:[esi]
   788a9:	jae    0x78916
   788ab:	jb     0x7891b
   788ad:	ins    BYTE PTR es:[edi],dx
   788ae:	cs gs js 0x78917
   788b2:	add    BYTE PTR [eax],al
   788b4:	inc    eax
   788b5:	add    BYTE PTR [ebx+0x65],cl
   788b8:	inc    edi
   788b9:	gs je  0x788ff
   788bc:	jne    0x78930
   788be:	jb     0x78925
   788c0:	outs   dx,BYTE PTR ds:[esi]
   788c1:	je     0x7890c
   788c3:	jb     0x78936
   788c5:	ins    BYTE PTR es:[edi],dx
   788c6:	add    BYTE PTR [eax],al
   788c8:	dec    eax
   788c9:	inc    ecx
   788ca:	dec    esp
   788cb:	cs fs ins BYTE PTR es:[edi],dx
   788ce:	ins    BYTE PTR es:[edi],dx
   788cf:	add    BYTE PTR [eax+0x6c745204],ah
   788d5:	push   ebp
   788d6:	outs   dx,BYTE PTR ds:[esi]
   788d7:	ja     0x78942
   788d9:	outs   dx,BYTE PTR ds:[esi]
   788da:	fs
	...
