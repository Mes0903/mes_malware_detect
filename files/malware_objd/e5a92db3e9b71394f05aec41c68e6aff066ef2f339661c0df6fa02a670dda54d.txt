
e5a92db3e9b71394f05aec41c68e6aff066ef2f339661c0df6fa02a670dda54d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0x1a55e01a
  402b89:	bswap  ebx
  402b8b:	mov    ?,WORD PTR [edx+0x7a]
  402b8e:	jp     0x402c0a
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0x52],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x1f42f8bf
  402c38:	pop    ds
  402c39:	ins    BYTE PTR es:[edi],dx
  402c3a:	stc    
  402c3b:	jecxz  0x402c67
  402c3d:	xor    eax,0xb8f63861
  402c42:	fld    QWORD PTR [ebp-0x355f7e1f]
  402c48:	inc    esp
  402c49:	repnz adc al,0x1e
  402c4c:	cmp    ch,bh
  402c4e:	es jbe 0x402c9e
  402c51:	arpl   WORD PTR [edx+0x0],cx
  402c54:	pop    ebp
  402c55:	cmc    
  402c56:	adc    BYTE PTR [ecx+0x58],bl
  402c59:	push   ds
  402c5a:	mov    BYTE PTR [ebx+0x5b0a2000],bh
  402c60:	push   ecx
  402c61:	out    dx,al
  402c62:	or     BYTE PTR [ecx+0x6b],bl
  402c65:	fsub   QWORD PTR [ecx]
  402c67:	mov    ds:0x489d6227,ax
  402c6d:	xchg   edx,eax
  402c6e:	lods   eax,DWORD PTR ds:[esi]
  402c6f:	lds    ebp,FWORD PTR [ebp-0x3c0c965b]
  402c75:	sbb    BYTE PTR [eax+ebp*8],dl
  402c78:	cmc    
  402c79:	imul   ecx,DWORD PTR [esi-0x6f99f062],0xffffff96
  402c80:	push   edi
  402c81:	inc    ebx
  402c82:	iret   
  402c83:	je     0x402ccb
  402c85:	fiadd  WORD PTR [eax+0x3]
  402c88:	mov    ah,bl
  402c8a:	xlat   BYTE PTR ds:[ebx]
  402c8b:	clc    
  402c8c:	cmp    BYTE PTR gs:[ebp-0x5d],dl
  402c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c91:	js     0x402cd7
  402c93:	and    ebx,DWORD PTR [esi-0x4287f25a]
  402c99:	leave  
  402c9a:	mov    esp,0x8e2079a7
  402c9f:	mov    ebp,0xdb8ec08b
  402ca4:	test   al,ch
  402ca6:	dec    edi
  402ca7:	daa    
  402ca8:	test   bh,ch
  402caa:	inc    ebx
  402cab:	mov    ds:0x642cc239,al
  402cb0:	jae    0x402d08
  402cb2:	ds jo  0x402d2a
  402cb5:	es dec edx
  402cb7:	loopne 0x402cbe
  402cb9:	outs   dx,DWORD PTR ds:[esi]
  402cba:	js     0x402c95
  402cbc:	push   cs
  402cbd:	pushf  
  402cbe:	stos   BYTE PTR es:[edi],al
  402cbf:	pusha  
  402cc0:	aad    0xf3
  402cc2:	add    DWORD PTR [edi],0x363ef7a5
  402cc8:	jmp    0x88aa4418
  402ccd:	push   0x38
  402ccf:	push   0x5ed45d47
  402cd4:	push   es
  402cd5:	std    
  402cd6:	ins    DWORD PTR es:[edi],dx
  402cd7:	cli    
  402cd8:	fisttp DWORD PTR [ebx]
  402cda:	inc    ebp
  402cdb:	loope  0x402cf1
  402cdd:	pop    esp
  402cde:	adc    ch,BYTE PTR [esp+edx*4-0x20]
  402ce2:	addr16 ds jns 0x402c99
  402ce6:	sbb    esp,DWORD PTR [edi+0xba1056e]
  402cec:	ds rcr eax,0x89
  402cf0:	and    eax,0x953557f4
  402cf5:	ret    0xf29d
  402cf8:	mov    edx,0xc4434fab
  402cfd:	sub    ch,BYTE PTR [edx]
  402cff:	cli    
  402d00:	dec    esp
  402d01:	adc    edx,ecx
  402d03:	jge    0x402cee
  402d05:	ret    
  402d06:	jbe    0x402cfa
  402d08:	inc    edi
  402d09:	ret    0x695
  402d0c:	je     0x402d71
  402d0e:	xor    BYTE PTR [eax+0x2322a9ea],dl
  402d14:	push   ebp
  402d15:	sbb    BYTE PTR [eax],0x65
  402d18:	or     al,0xcc
  402d1a:	fdivr  DWORD PTR gs:[ebx+ecx*4]
  402d1e:	cmp    DWORD PTR [edi+esi*2],0x20
  402d22:	sahf   
  402d23:	cmc    
  402d24:	cwde   
  402d25:	lock cmc 
  402d27:	dec    edi
  402d28:	fild   WORD PTR [esi+0x67]
  402d2b:	jnp    0x402cb9
  402d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d2e:	and    eax,0xa7ebbfc4
  402d33:	push   0xa06eeedd
  402d38:	fidiv  DWORD PTR [edx*8-0x21646b7d]
  402d3f:	adc    BYTE PTR [edi-0x6],ah
  402d42:	loop   0x402db9
  402d44:	sub    cl,BYTE PTR [ecx-0x59]
  402d47:	mov    DWORD PTR [edi*4-0xd88180f],ebp
  402d4e:	push   ecx
  402d4f:	stos   DWORD PTR es:[edi],eax
  402d50:	jl     0x402d3e
  402d52:	fdiv   DWORD PTR [ebp+0x7fbd11d1]
  402d58:	mov    ebp,0x10d03098
  402d5d:	ss push ebp
  402d5f:	and    al,0x9
  402d61:	mov    edi,0x2b8e6f00
  402d66:	lods   al,BYTE PTR ds:[esi]
  402d67:	dec    ecx
  402d68:	leave  
  402d69:	and    eax,0x45081635
  402d6e:	mov    ebp,0xde750110
  402d73:	xchg   edi,eax
  402d74:	mov    BYTE PTR [ecx+ecx*8-0x1cab3db6],cl
  402d7b:	lds    ecx,FWORD PTR [esi+0x62]
  402d7e:	std    
  402d7f:	add    eax,0x39aa48ef
  402d84:	pop    es
  402d85:	fmul   st(7),st
  402d87:	sub    esi,ecx
  402d89:	fmulp  st(5),st
  402d8b:	test   al,0xff
  402d8d:	stos   DWORD PTR es:[edi],eax
  402d8e:	pop    eax
  402d8f:	aam    0xf8
  402d91:	fbld   TBYTE PTR [eax]
  402d93:	sbb    cl,0x1b
  402d96:	xor    BYTE PTR [ecx],bl
  402d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d9a:	or     DWORD PTR [ebp+0x35],eax
  402d9d:	fimul  WORD PTR [ecx+0x34]
  402da0:	mov    WORD PTR [edx-0x6d],?
  402da3:	mov    ah,0x94
  402da5:	or     esi,esi
  402da7:	pop    esp
  402da8:	pusha  
  402da9:	xor    esi,DWORD PTR [edi]
  402dab:	or     bl,BYTE PTR [edx]
  402dad:	mov    ch,0xda
  402daf:	dec    esp
  402db0:	test   edi,esp
  402db2:	inc    dh
  402db4:	mov    ebp,0xcf962a47
  402db9:	ja     0x402d75
  402dbb:	and    ecx,DWORD PTR [ebp-0x66de278c]
  402dc1:	fdivr  QWORD PTR [edi*8-0x239fff03]
  402dc8:	sub    esi,edx
  402dca:	or     DWORD PTR [ecx+0x58a6840d],ebp
  402dd0:	and    eax,0x21b2e1b9
  402dd5:	push   cs
  402dd6:	jg     0x402e04
  402dd8:	in     al,0xae
  402dda:	lock xchg edx,eax
  402ddc:	test   esp,0x328ebcb
  402de2:	xchg   edx,eax
  402de3:	nop
  402de4:	adc    ebx,DWORD PTR [ecx+edi*1-0x7ed6d65]
  402deb:	xor    cl,dl
  402ded:	aas    
  402dee:	adc    eax,0x9cc9589d
  402df3:	xchg   edi,eax
  402df4:	push   edi
  402df5:	jecxz  0x402e0f
  402df7:	das    
  402df8:	fcom   QWORD PTR [edx]
  402dfa:	sti    
  402dfb:	shl    BYTE PTR [ecx],cl
  402dfd:	xchg   edi,eax
  402dfe:	mov    ebp,0x5c38c85
  402e03:	cmp    esp,esi
  402e05:	cli    
  402e06:	dec    ebp
  402e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e08:	add    eax,0xda6d67ce
  402e0d:	div    bl
  402e0f:	in     eax,dx
  402e10:	repz sub ch,BYTE PTR [esi]
  402e13:	imul   esp,ebp,0xd58c30a6
  402e19:	fmul   st(3),st
  402e1b:	pop    ebp
  402e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e1d:	inc    edi
  402e1e:	pop    esp
  402e1f:	mov    edx,0x9237588a
  402e24:	ret    
  402e25:	loopne 0x402e26
  402e27:	jge    0x402e4f
  402e29:	push   ebx
  402e2a:	popa   
  402e2b:	ins    BYTE PTR es:[edi],dx
  402e2c:	or     BYTE PTR [ebx],ah
  402e2e:	xchg   DWORD PTR [eax-0x72],edx
  402e31:	hlt    
  402e32:	inc    esp
  402e33:	add    dl,BYTE PTR [ebx]
  402e35:	loope  0x402e04
  402e37:	jo     0x402e3c
  402e39:	(bad)  
  402e3a:	mov    esp,0xf7a29ff8
  402e3f:	adc    al,0xf1
  402e41:	pop    ds
  402e42:	icebp  
  402e43:	sbb    BYTE PTR [ecx-0x7f978dc0],al
  402e49:	shl    DWORD PTR [ebx-0x66],1
  402e4c:	mov    ah,0x17
  402e4e:	sbb    DWORD PTR [eax+0x6f],ebp
  402e51:	cli    
  402e52:	push   eax
  402e53:	and    BYTE PTR [ebp+0x491dd4d2],cl
  402e59:	les    ebx,FWORD PTR [eax-0x75]
  402e5c:	dec    ebx
  402e5d:	pop    ebp
  402e5e:	ror    BYTE PTR [esi+0x3f62b4e0],0xbf
  402e65:	pop    ds
  402e66:	aad    0xb0
  402e68:	cmp    esp,DWORD PTR [esi]
  402e6a:	stos   BYTE PTR es:[edi],al
  402e6b:	adc    dh,BYTE PTR [edx]
  402e6d:	out    0x1b,eax
  402e6f:	inc    ebp
  402e70:	inc    ecx
  402e71:	adc    cl,al
  402e73:	mov    ds:0x7c19686e,al
  402e78:	test   al,0x7b
  402e7a:	movhps xmm7,QWORD PTR [edi]
  402e7d:	cdq    
  402e7e:	mov    BYTE PTR [esi+0x7d8391df],0xe6
  402e85:	sbb    BYTE PTR [edx-0x69],0xcc
  402e89:	push   0xffffffd1
  402e8b:	xchg   ebx,eax
  402e8c:	sbb    DWORD PTR [esi+0x73],0x721e7d3a
  402e93:	shl    DWORD PTR [ebp-0x715b78f7],1
  402e99:	bnd jb 0x402e24
  402e9c:	pop    ebx
  402e9d:	xchg   BYTE PTR [esi+edi*4+0x29],bh
  402ea1:	gs push 0x6a
  402ea4:	sub    al,0x1a
  402ea6:	aas    
  402ea7:	mov    eax,ds:0x5a804045
  402eac:	add    DWORD PTR ss:[eax+0x3f],edx
  402eb0:	call   0xef54:0x4440a3e3
  402eb7:	std    
  402eb8:	jp     0x402e7c
  402eba:	icebp  
  402ebb:	stos   BYTE PTR es:[edi],al
  402ebc:	sub    eax,0x1dba8ad0
  402ec1:	sub    DWORD PTR [ecx+ecx*8-0x12],0x55
  402ec6:	stos   BYTE PTR es:[edi],al
  402ec7:	pop    ds
  402ec8:	jl     0x402e5e
  402eca:	stos   DWORD PTR es:[edi],eax
  402ecb:	push   edx
  402ecc:	cdq    
  402ecd:	(bad)  
  402ece:	shl    ah,1
  402ed0:	xor    bl,BYTE PTR [ebp-0x5913c4ce]
  402ed6:	mov    eax,ds:0xb647ecf4
  402edb:	dec    ecx
  402edc:	js     0x402ee2
  402ede:	push   esp
  402edf:	mov    bl,0xaa
  402ee1:	or     eax,0xe12022f5
  402ee6:	mov    eax,ds:0x9c12c0c7
  402eeb:	mov    dl,0x27
  402eed:	inc    edi
  402eee:	mov    ecx,0xc77a80e4
  402ef3:	xlat   BYTE PTR ds:[ebx]
  402ef4:	stos   DWORD PTR es:[edi],eax
  402ef5:	sbb    DWORD PTR [ebp+0x50],ebx
  402ef8:	cmp    eax,0xa9049fba
  402efd:	dec    esi
  402efe:	out    0xbe,eax
  402f00:	jge    0x402ec0
  402f02:	in     al,dx
  402f03:	popf   
  402f04:	jo     0x402e91
  402f06:	mov    dh,0xb
  402f08:	ins    BYTE PTR es:[edi],dx
  402f09:	enter  0x8f4f,0xcf
  402f0d:	inc    eax
  402f0e:	jecxz  0x402f8c
  402f10:	adc    ch,BYTE PTR [edi]
  402f12:	daa    
  402f13:	jp     0x402f87
  402f15:	mov    al,ds:0xf317595b
  402f1a:	sub    al,al
  402f1c:	popa   
  402f1d:	xlat   BYTE PTR ds:[ebx]
  402f1e:	jnp    0x402f6e
  402f20:	jmp    0x402f24
  402f22:	push   esp
  402f23:	aam    0x10
  402f25:	aad    0x2e
  402f27:	pop    eax
  402f28:	daa    
  402f29:	(bad)  
  402f2a:	push   ss
  402f2b:	sti    
  402f2c:	and    al,0x4b
  402f2e:	rcl    ecx,1
  402f30:	jp     0x402f5c
  402f32:	push   edi
  402f33:	das    
  402f34:	adc    BYTE PTR ds:[ecx+0x5cde6a3c],al
  402f3b:	add    cl,BYTE PTR [esi-0x29]
  402f3e:	(bad)  
  402f3f:	enter  0x5d11,0xe3
  402f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f44:	dec    ecx
  402f45:	adc    DWORD PTR [edx],0x3d054cc7
  402f4b:	sahf   
  402f4c:	imul   edi,esi,0xd53242cb
  402f52:	mov    ebx,0xf1c93fb2
  402f57:	push   cs
  402f58:	popa   
  402f59:	and    al,0x3b
  402f5b:	dec    ebx
  402f5c:	cld    
  402f5d:	daa    
  402f5e:	dec    ecx
  402f5f:	pop    edi
  402f60:	popf   
  402f61:	movq   QWORD PTR [ecx],mm2
  402f64:	es dec eax
  402f66:	and    DWORD PTR [ecx-0x51048dbe],eax
  402f6c:	gs mov edx,0x97d29167
  402f72:	cmp    ebx,eax
  402f74:	add    ch,0xdb
  402f77:	loope  0x402f42
  402f79:	nop
  402f7a:	loop   0x402ff0
  402f7c:	mov    eax,ds:0x42671cf7
  402f81:	iret   
  402f82:	inc    ch
  402f84:	loope  0x402ff3
  402f86:	mov    bh,0xd2
  402f88:	push   ds
  402f89:	dec    ebx
  402f8a:	mov    al,0xbb
  402f8c:	pop    ebp
  402f8d:	sar    DWORD PTR [esi-0x23ebdf8d],0x25
  402f94:	jle    0x402f79
  402f96:	mov    BYTE PTR [eax+0x23],dl
  402f99:	dec    DWORD PTR [edx+0x7d]
  402f9c:	jae    0x403010
  402f9e:	test   al,0xf2
  402fa0:	mov    DWORD PTR [ecx],0xa3919b04
  402fa6:	fdiv   QWORD PTR [edi+0xa]
  402fa9:	dec    esp
  402faa:	idiv   BYTE PTR [ebx]
  402fac:	push   esi
  402fad:	xchg   esi,eax
  402fae:	jbe    0x403023
  402fb0:	enter  0xeb6f,0xf6
  402fb4:	jl     0x402f3c
  402fb6:	into   
  402fb7:	inc    ecx
  402fb8:	std    
  402fb9:	dec    ecx
  402fba:	mov    dl,0x74
  402fbc:	imul   eax,DWORD PTR [ebp+0x24],0xfffffff4
  402fc0:	fist   DWORD PTR [edx+eiz*4+0x1d]
  402fc4:	call   0x7ac94044
  402fc9:	aas    
  402fca:	sar    DWORD PTR [edi],1
  402fcc:	pop    ebp
  402fcd:	xchg   ebx,eax
  402fce:	add    al,0xb2
  402fd0:	(bad)  
  402fd1:	out    dx,al
  402fd2:	sub    eax,0x1821ba94
  402fd7:	mov    esi,0x99495af5
  402fdc:	push   ss
  402fdd:	mov    DWORD PTR [edi-0x11],ecx
  402fe0:	jns    0x40305e
  402fe2:	xor    BYTE PTR [edi+eiz*8],0xd2
  402fe6:	mov    ds:0x4f45e12e,al
  402feb:	seto   BYTE PTR [ecx+0x17]
  402fef:	jmp    0x73935ad2
  402ff4:	aaa    
  402ff5:	mov    ch,ah
  402ff7:	out    0xa7,eax
  402ff9:	dec    esp
  402ffa:	stos   DWORD PTR es:[edi],eax
  402ffb:	cs inc esp
  402ffd:	or     eax,0x3e1d3c71
  403002:	hlt    
  403003:	adc    DWORD PTR [esi-0x73f99e0],edx
  403009:	xor    ebp,DWORD PTR [ebp+0x4b]
  40300c:	cmp    eax,0x7b2190f
  403011:	sahf   
  403012:	xor    bh,BYTE PTR [edx]
  403014:	sub    BYTE PTR [edi-0x66],dh
  403017:	jns    0x402fb0
  403019:	int3   
  40301a:	out    dx,al
  40301b:	es dec esi
  40301d:	inc    esp
  40301e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40301f:	sbb    bl,BYTE PTR [ebx-0x50]
  403022:	fndisi(8087 only) 
  403024:	enter  0x2978,0xc3
  403028:	stc    
  403029:	out    0xc7,eax
  40302b:	add    ch,al
  40302d:	aad    0xc5
  40302f:	dec    edi
  403030:	(bad)  
  403031:	inc    ecx
  403032:	cmc    
  403033:	fldenv [eax-0x6c]
  403036:	xor    eax,0x47a1ffb3
  40303b:	dec    ebp
  40303c:	jnp    0x403010
  40303e:	(bad)  
  40303f:	mov    ds:0xed1c000c,al
  403044:	push   0xffffffd7
  403046:	add    ebp,ebx
  403048:	(bad)  
  403049:	cs js  0x40300c
  40304c:	jle    0x403069
  40304e:	adc    BYTE PTR [ebx],0x57
  403051:	pop    eax
  403052:	cmp    ebx,edi
  403054:	xor    bh,BYTE PTR [eax-0x19]
  403057:	gs retf 
  403059:	out    dx,al
  40305a:	jbe    0x4030bb
  40305c:	dec    esi
  40305d:	sti    
  40305e:	(bad)  
  40305f:	test   al,0x7f
  403061:	jbe    0x403039
  403063:	ds das 
  403065:	jmp    0x403071
  403067:	je     0x403043
  403069:	test   BYTE PTR [eax],ch
  40306b:	retf   
  40306c:	mov    ch,0x9f
  40306e:	jbe    0x403099
  403070:	xor    DWORD PTR [ecx],edi
  403072:	or     eax,ebx
  403074:	lahf   
  403075:	retf   
  403076:	cmp    DWORD PTR [edi-0x34],edx
  403079:	xchg   edx,eax
  40307a:	and    edi,esi
  40307c:	push   edx
  40307d:	mov    ch,dl
  40307f:	mul    esi
  403081:	pop    edi
  403082:	rcl    ecx,0x89
  403085:	or     al,0x20
  403087:	inc    eax
  403088:	test   DWORD PTR [esi+0x4780e161],esp
  40308e:	push   ebp
  40308f:	shl    ecx,cl
  403091:	jb     0x403073
  403093:	rcl    DWORD PTR [ecx],1
  403095:	shl    BYTE PTR [ecx],0x1c
  403098:	cwde   
  403099:	retf   
  40309a:	mov    al,ds:0x63454f40
  40309f:	popa   
  4030a0:	and    eax,0x528688b7
  4030a5:	mov    DWORD PTR [ebx-0x1f],0x60334eca
  4030ac:	mov    cl,0x8f
  4030ae:	mov    eax,gs
  4030b0:	jnp    0x4030d2
  4030b2:	inc    esp
  4030b3:	xor    eax,0x9a4b6869
  4030b8:	xchg   ebx,eax
  4030b9:	cld    
  4030ba:	loopne 0x4030c0
  4030bc:	(bad)  
  4030bd:	out    0xd,al
  4030bf:	cld    
  4030c0:	scas   al,BYTE PTR es:[edi]
  4030c1:	pop    DWORD PTR [edx+0x7431e53c]
  4030c7:	xor    BYTE PTR [ebp+0x4b7225ef],ch
  4030cd:	xor    eax,0x2efabbac
  4030d2:	sbb    ah,BYTE PTR cs:[eax+esi*1+0x59daabe]
  4030da:	(bad)  
  4030db:	mov    edi,0xd4fc36c9
  4030e0:	aas    
  4030e1:	idiv   edx
  4030e3:	mov    ebx,0xdd76c6fc
  4030e8:	dec    esi
  4030e9:	inc    eax
  4030ea:	inc    ebp
  4030eb:	call   0x62958880
  4030f0:	leave  
  4030f1:	mov    al,ds:0xab8d60e0
  4030f6:	pop    es
  4030f7:	jno    0x40308c
  4030f9:	or     bl,BYTE PTR [bp-0x6e]
  4030fd:	in     al,dx
  4030fe:	cmp    esi,DWORD PTR [eax-0xba91c93]
  403104:	add    al,0x11
  403106:	test   BYTE PTR [ecx+0x7b],dh
  403109:	repz xchg edi,eax
  40310b:	popf   
  40310c:	xchg   ecx,eax
  40310d:	push   ss
  40310e:	fstp   DWORD PTR ds:0xe2133cbf
  403114:	or     bh,BYTE PTR [ebx]
  403116:	push   esp
  403117:	xchg   ebp,eax
  403118:	jl     0x4030ce
  40311a:	in     al,0xc3
  40311c:	mov    DWORD PTR [ebp-0x24c48b36],ebx
  403122:	adc    eax,0x5fbf2625
  403127:	push   edx
  403128:	dec    eax
  403129:	lds    ebp,FWORD PTR [ecx-0x6d]
  40312c:	cdq    
  40312d:	pop    ecx
  40312e:	dec    eax
  40312f:	iret   
  403130:	lods   al,BYTE PTR ds:[esi]
  403131:	adc    esp,DWORD PTR [edi+0x5ba63071]
  403137:	fisttp DWORD PTR [ecx+0x0]
  40313a:	cmp    BYTE PTR [ecx],cl
  40313c:	xchg   ebp,eax
  40313d:	cmp    al,0xb0
  40313f:	sub    eax,0x69df9706
  403144:	mov    dl,0x0
  403146:	inc    eax
  403147:	in     eax,dx
  403148:	loop   0x403125
  40314a:	ja     0x4031b3
  40314c:	xchg   edx,eax
  40314d:	xor    DWORD PTR [esi+0x4652cdb3],eax
  403153:	inc    edi
  403154:	loop   0x403193
  403156:	pop    edx
  403157:	xchg   ebx,eax
  403158:	(bad)  
  403159:	ret    0x9915
  40315c:	test   eax,0x61e7b499
  403161:	scas   al,BYTE PTR es:[edi]
  403162:	push   0x51
  403164:	sbb    al,0xeb
  403166:	popa   
  403167:	mov    eax,ds:0x4220b7df
  40316c:	and    eax,0xdc86a6b3
  403171:	ss (bad) 
  403173:	sub    edx,edx
  403175:	xchg   edx,eax
  403176:	mov    bh,0x4d
  403178:	outs   dx,BYTE PTR ds:[esi]
  403179:	cmp    eax,0x2b4ce76
  40317e:	mov    dl,0xd2
  403180:	(bad)  
  403181:	rol    ch,1
  403183:	xor    al,0x2b
  403185:	(bad)  
  403186:	std    
  403187:	in     eax,dx
  403188:	xchg   edx,eax
  403189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40318a:	mov    DWORD PTR [edi+0x1d37a6f6],edx
  403190:	cdq    
  403191:	sub    esi,DWORD PTR [esi]
  403193:	and    DWORD PTR [ebp-0x6],ebp
  403196:	(bad)  
  403198:	rcl    DWORD PTR [ebx],cl
  40319a:	clc    
  40319b:	lods   eax,DWORD PTR ds:[esi]
  40319c:	fld    DWORD PTR [edx]
  40319e:	in     al,dx
  40319f:	jl     0x4031cd
  4031a1:	cwde   
  4031a2:	int3   
  4031a3:	jo     0x4031d4
  4031a5:	sbb    DWORD PTR [edx+0x65],ecx
  4031a8:	test   al,0xbc
  4031aa:	xchg   ecx,eax
  4031ab:	jl     0x40317c
  4031ad:	mov    bh,0x87
  4031af:	dec    esp
  4031b0:	enter  0xa91e,0x1
  4031b4:	and    ebp,edi
  4031b6:	ror    DWORD PTR [ecx+0xe],1
  4031b9:	aaa    
  4031ba:	in     eax,0xd5
  4031bc:	push   ds
  4031bd:	mov    dl,0xfc
  4031bf:	mov    ebx,0xc6fba93a
  4031c4:	mov    edi,0xb7392f9c
  4031c9:	inc    edi
  4031ca:	(bad)  
  4031cc:	repnz inc ecx
  4031ce:	test   bh,al
  4031d0:	xchg   ecx,eax
  4031d1:	outs   dx,DWORD PTR ds:[esi]
  4031d2:	outs   dx,DWORD PTR ds:[esi]
  4031d3:	pop    esp
  4031d4:	pushf  
  4031d5:	mov    al,BYTE PTR [eax-0x7f32417a]
  4031db:	sti    
  4031dc:	jp     0x403231
  4031de:	jmp    0x67203074
  4031e3:	adc    DWORD PTR [edi],esi
  4031e5:	cld    
  4031e6:	add    eax,0x5d11e923
  4031eb:	push   cs
  4031ec:	enter  0x400b,0x5b
  4031f0:	mov    edi,0xf1bf500c
  4031f5:	mov    BYTE PTR [eax-0x40],bh
  4031f8:	shl    BYTE PTR [edi],cl
  4031fa:	mov    DWORD PTR [ecx+0x44e3eecf],esp
  403200:	jno    0x4031bd
  403202:	inc    ebx
  403203:	inc    ebx
  403204:	inc    edi
  403205:	adc    al,0xb2
  403207:	lahf   
  403208:	sub    eax,0xd2a43aeb
  40320d:	pop    ds
  40320e:	xor    al,0xc0
  403210:	hlt    
  403211:	adc    al,0xcf
  403213:	push   eax
  403214:	lods   eax,DWORD PTR ds:[esi]
  403215:	mov    ss,esp
  403217:	or     al,0x52
  403219:	pop    eax
  40321a:	retf   0x452e
  40321d:	pushf  
  40321e:	fldenv [edx+0x78]
  403221:	iret   
  403222:	push   ss
  403223:	iret   
  403224:	cmp    al,0xf4
  403226:	mov    ch,0x81
  403228:	(bad)  
  403229:	or     eax,0x418f4a2d
  40322e:	je     0x403248
  403230:	sbb    al,0x19
  403232:	cdq    
  403233:	in     al,0xc3
  403235:	out    dx,al
  403236:	sbb    eax,DWORD PTR [ebp-0x38b3173b]
  40323c:	(bad)  
  40323e:	ja     0x4032bf
  403240:	mov    esi,0x791aee4f
  403245:	inc    esi
  403246:	jne    0x403291
  403248:	mov    esp,0x197ce2a0
  40324d:	cwde   
  40324e:	dec    edi
  40324f:	add    eax,0x9521a9f4
  403254:	neg    DWORD PTR ds:0x22a9f1cd
  40325a:	push   esp
  40325b:	jmp    0x79b34d03
  403260:	mov    ds:0x997451f6,al
  403265:	push   cs
  403266:	dec    ecx
  403267:	mov    al,0xd1
  403269:	add    BYTE PTR [ecx+0x7068328e],ah
  40326f:	push   cs
  403270:	dec    ebx
  403271:	sbb    DWORD PTR [esi+0x46],0x9958b637
  403278:	xchg   BYTE PTR [ecx+0x3eb4f9bd],al
  40327e:	pop    es
  40327f:	ja     0x403209
  403281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403282:	or     al,0xe9
  403284:	cmp    dl,bh
  403286:	xor    al,0xf
  403288:	sub    al,0x3c
  40328a:	sub    eax,0x54d8d30d
  40328f:	mov    DWORD PTR [eax+0x6fbd7ba2],esi
  403295:	aaa    
  403296:	pop    esp
  403297:	mov    ds:0x13020770,eax
  40329c:	jno    0x4032e7
  40329e:	sbb    ch,al
  4032a0:	hlt    
  4032a1:	test   BYTE PTR ds:0xec417257,0xdd
  4032a8:	xor    BYTE PTR [ebx+0x1],ch
  4032ab:	lods   al,BYTE PTR ds:[esi]
  4032ac:	outs   dx,BYTE PTR ds:[esi]
  4032ad:	adc    BYTE PTR [ebx+eiz*2+0x3e700b2a],cl
  4032b4:	addr16 jae 0x403314
  4032b7:	cmp    DWORD PTR [edi],ecx
  4032b9:	dec    esp
  4032ba:	sbb    edi,ecx
  4032bc:	or     bh,BYTE PTR [ecx-0x4f9f0f3a]
  4032c2:	arpl   WORD PTR [ecx],di
  4032c4:	xchg   edi,eax
  4032c5:	pop    esi
  4032c6:	outs   dx,DWORD PTR ds:[esi]
  4032c7:	in     al,0x2d
  4032c9:	leave  
  4032ca:	pop    edi
  4032cb:	push   cs
  4032cc:	pop    edi
  4032cd:	mov    al,0x46
  4032cf:	pusha  
  4032d0:	lahf   
  4032d1:	dec    edi
  4032d2:	cmp    BYTE PTR [bp+si-0x55],cl
  4032d6:	repnz imul esp,DWORD PTR [ebp+0x3b],0x6e6fc304
  4032de:	cli    
  4032df:	ja     0x40333c
  4032e1:	sub    eax,ebx
  4032e3:	cwde   
  4032e4:	fwait
  4032e5:	pop    es
  4032e6:	ror    DWORD PTR [ebx-0x7fea8c10],cl
  4032ec:	sbb    al,0x64
  4032ee:	imul   eax,DWORD PTR [ebx+0x63fe163c],0x6ecd466b
  4032f8:	mov    dl,BYTE PTR [eax+0x46]
  4032fb:	xor    esi,edi
  4032fd:	pop    ebx
  4032fe:	inc    ebp
  4032ff:	and    al,0xc9
  403301:	jae    0x4032f4
  403303:	adc    BYTE PTR [edx-0x2],bh
  403306:	arpl   WORD PTR [ecx-0x675c530],sp
  40330c:	popf   
  40330d:	scas   eax,DWORD PTR es:[edi]
  40330e:	mov    es,esp
  403310:	mov    WORD PTR [ecx+ecx*1-0x143f18f],ss
  403317:	inc    DWORD PTR ds:[ebx-0x51073af6]
  40331e:	inc    eax
  40331f:	push   cs
  403320:	or     DWORD PTR [eax-0xb055902],0x54
  403327:	xchg   dl,al
  403329:	mov    ?,edx
  40332b:	xchg   edi,eax
  40332c:	arpl   WORD PTR [ebp-0x1e9af54b],bx
  403332:	xchg   edx,eax
  403333:	int    0x3b
  403335:	int    0xbe
  403337:	pop    ecx
  403338:	add    al,0xfd
  40333a:	popf   
  40333b:	push   ecx
  40333c:	inc    ecx
  40333d:	pop    esp
  40333e:	add    ecx,DWORD PTR [edi]
  403340:	loope  0x403312
  403342:	lea    ecx,[ebx]
  403344:	outs   dx,BYTE PTR ds:[esi]
  403345:	nop
  403346:	das    
  403347:	lods   al,BYTE PTR ds:[esi]
  403348:	sub    al,0xb
  40334a:	mov    edi,DWORD PTR [ebp+0x742a112]
  403350:	repz stc 
  403352:	dec    eax
  403353:	ins    BYTE PTR es:[edi],dx
  403354:	jne    0x403329
  403356:	cmp    eax,0xafefed00
  40335b:	jmp    0x40333f
  40335d:	or     al,0x2f
  40335f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403360:	push   0xffffffb2
  403362:	xchg   ecx,eax
  403363:	inc    ebp
  403364:	push   0xb98ef488
  403369:	sar    BYTE PTR [ebx-0x4],cl
  40336c:	ret    
  40336d:	out    dx,eax
  40336e:	ret    0x4fd1
  403371:	xor    DWORD PTR [ebx],ebx
  403373:	sbb    bh,BYTE PTR [edx+esi*2+0x6d636ad4]
  40337a:	mov    esi,0x88ca0e1d
  40337f:	in     al,0xbd
  403381:	push   ebx
  403382:	and    BYTE PTR [ebx],bl
  403384:	or     ch,bl
  403386:	(bad)  
  403387:	sub    dl,BYTE PTR [ecx*2+0x7f6e7894]
  40338e:	mov    ecx,0x1aa4577d
  403393:	adc    bh,BYTE PTR [ecx+0x246f06f3]
  403399:	mov    ah,0xdf
  40339b:	sahf   
  40339c:	dec    ebx
  40339d:	test   DWORD PTR [ebp-0x23c14e8a],ecx
  4033a3:	mov    ch,0x8d
  4033a5:	adc    eax,0xf34d415
  4033aa:	mov    bl,0xa
  4033ac:	cmc    
  4033ad:	js     0x403410
  4033af:	inc    esp
  4033b0:	test   al,0x5f
  4033b2:	fnstenv [esi]
  4033b4:	sbb    esp,esi
  4033b6:	pop    eax
  4033b7:	cld    
  4033b8:	aaa    
  4033b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ba:	dec    edi
  4033bb:	jp     0x40341e
  4033bd:	sahf   
  4033be:	cmp    al,0x31
  4033c0:	repnz xor ecx,DWORD PTR [ebx]
  4033c3:	test   DWORD PTR ds:0x818a6469,ebp
  4033c9:	stos   BYTE PTR es:[edi],al
  4033ca:	jmp    0x65ea4f46
  4033cf:	aad    0xe1
  4033d1:	and    BYTE PTR [edi],ch
  4033d3:	and    ah,BYTE PTR [ebp-0x66]
  4033d6:	push   edi
  4033d7:	stos   DWORD PTR es:[edi],eax
  4033d8:	mov    dl,0x90
  4033da:	jmp    0x403402
  4033dc:	and    ebp,eax
  4033de:	mov    ds:0x5e6b1c76,eax
  4033e3:	and    ch,bl
  4033e5:	pop    ds
  4033e6:	lahf   
  4033e7:	sub    BYTE PTR gs:[esi+ecx*4+0x2c],bh
  4033ec:	in     al,dx
  4033ed:	addr16 retf 
  4033ef:	fbld   TBYTE PTR [ebp+0x26]
  4033f2:	add    dl,BYTE PTR [esi+0x5]
  4033f5:	and    al,0xab
  4033f7:	adc    esi,DWORD PTR [esi+0x65a019ec]
  4033fd:	cli    
  4033fe:	pop    ds
  4033ff:	sub    BYTE PTR ds:0x5d7968ae,0xa9
  403406:	or     DWORD PTR [ecx-0x54],ebx
  403409:	sbb    DWORD PTR [esi+0x2b],esp
  40340c:	bound  edi,QWORD PTR [ebp+0x70]
  40340f:	aad    0x6a
  403411:	jp     0x4033a6
  403413:	cmp    DWORD PTR [ecx-0x299bc0e0],eax
  403419:	lahf   
  40341a:	call   0x9305e875
  40341f:	lahf   
  403420:	inc    ebp
  403421:	jmp    0x5fdfc41a
  403426:	data16 mov WORD PTR [ecx+0x181bc8f],?
  40342d:	pusha  
  40342e:	jmp    0x40343f
  403430:	lea    edi,[ecx-0x1366e28b]
  403436:	shr    DWORD PTR [ecx+eax*1],1
  403439:	das    
  40343a:	xor    dh,BYTE PTR [edx-0x6]
  40343d:	sbb    DWORD PTR [edx+0x65],edi
  403440:	add    DWORD PTR [eax],edx
  403442:	inc    esp
  403443:	lahf   
  403444:	pop    ss
  403445:	jae    0x40345c
  403447:	frstor ss:[esi+0x76]
  40344b:	jne    0x4033e9
  40344d:	iret   
  40344e:	mov    eax,0xe3df8ef3
  403453:	das    
  403454:	xor    DWORD PTR [edx+0x3e3d784d],0xffffffa9
  40345b:	test   DWORD PTR [ebp+0x5ea8664a],eax
  403461:	cs push ds
  403463:	into   
  403464:	jge    0x4034c4
  403466:	(bad)  [edx-0x65]
  403469:	fimul  WORD PTR [esi-0x7fcbd830]
  40346f:	jnp    0x403455
  403471:	lahf   
  403472:	mov    ecx,0xd5998c45
  403477:	lock or dh,BYTE PTR [ecx-0xa]
  40347b:	mov    al,0x4d
  40347d:	xor    BYTE PTR ds:0x2769a3e8,cl
  403483:	sti    
  403484:	fmul   QWORD PTR [edx-0x1b8e83ba]
  40348a:	out    dx,al
  40348b:	fnsave [ebx]
  40348d:	inc    esp
  40348e:	(bad)  
  40348f:	sub    eax,0x9f1008d1
  403494:	push   ds
  403495:	pop    ss
  403496:	(bad)  
  403497:	icebp  
  403498:	out    dx,al
  403499:	aas    
  40349a:	sub    bh,BYTE PTR [edx]
  40349c:	bound  edi,QWORD PTR [ebx]
  40349e:	cmp    eax,0x929863ed
  4034a3:	dec    ebx
  4034a4:	ret    
  4034a5:	dec    ecx
  4034a6:	push   ss
  4034a7:	jae    0x403509
  4034a9:	aas    
  4034aa:	scas   eax,DWORD PTR es:[edi]
  4034ab:	(bad)  
  4034ac:	pop    ecx
  4034ad:	push   es
  4034ae:	ror    dl,0x92
  4034b1:	mov    bh,0xf9
  4034b3:	retf   
  4034b4:	mov    ebx,0xdf1e5219
  4034b9:	ret    0x1a3d
  4034bc:	add    DWORD PTR [esi-0x190ccb2c],0x5e988e0e
  4034c6:	int    0xb1
  4034c8:	fcomp  QWORD PTR [ecx+0x1283f97e]
  4034ce:	ins    BYTE PTR es:[edi],dx
  4034cf:	shl    dl,cl
  4034d1:	stos   DWORD PTR es:[edi],eax
  4034d2:	adc    eax,0x32cdfb13
  4034d7:	xchg   esp,eax
  4034d8:	jmp    0xa4de389c
  4034dd:	(bad)  
  4034df:	sar    esi,1
  4034e1:	add    bh,BYTE PTR [ebx]
  4034e3:	sar    DWORD PTR [ebx+0x45c92819],1
  4034e9:	inc    edi
  4034ea:	push   ebx
  4034eb:	xor    BYTE PTR [edx-0x51],bh
  4034ee:	in     al,dx
  4034ef:	jle    0x4034c6
  4034f1:	shr    bl,0x7a
  4034f4:	and    al,0x1
  4034f6:	sub    DWORD PTR [eax+ebp*8+0x77],esi
  4034fa:	push   esi
  4034fb:	rol    BYTE PTR [edi-0x2e],0x26
  4034ff:	pop    esp
  403500:	sub    ch,BYTE PTR [esi+0x68]
  403503:	pop    ebx
  403504:	rep ins BYTE PTR es:[edi],dx
  403506:	arpl   WORD PTR [ebp+0x1cad95e2],sp
  40350c:	pop    eax
  40350d:	fnstcw WORD PTR [edi+ecx*2-0x4728e988]
  403514:	xchg   ecx,eax
  403515:	scas   eax,DWORD PTR es:[edi]
  403516:	outs   dx,DWORD PTR ds:[esi]
  403517:	clc    
  403518:	jb     0x40355d
  40351a:	cld    
  40351b:	call   0xa4a4:0x5da84fd3
  403522:	imul   edx,edi,0x50
  403525:	jnp    0x403501
  403527:	ret    0x95cc
  40352a:	xor    edi,edx
  40352c:	imul   DWORD PTR [esi+0xb]
  40352f:	mov    dh,0x17
  403531:	test   ebx,ebx
  403533:	daa    
  403534:	mov    edi,0x3d1a0618
  403539:	repz or eax,0x7b0e6dc5
  40353f:	mov    eax,ds:0xc8908c7c
  403544:	push   ebx
  403545:	mov    al,0x80
  403547:	jno    0x4034e3
  403549:	sub    al,0x13
  40354b:	outs   dx,BYTE PTR ds:[esi]
  40354c:	out    dx,eax
  40354d:	push   ss
  40354e:	mov    eax,0x8528c087
  403554:	inc    ecx
  403555:	mov    esi,0xfbc35e6d
  40355a:	jb     0x40359e
  40355c:	mov    ebp,0x51bcafd8
  403561:	lea    esp,[edi]
  403563:	jne    0x403531
  403565:	mov    ebx,0xe2ccee1f
  40356a:	sub    eax,0x3e59f515
  40356f:	xchg   edx,eax
  403570:	and    DWORD PTR [edi],eax
  403572:	add    ebp,eax
  403574:	call   0x4461:0xffecb803
  40357b:	pop    ecx
  40357c:	push   0xfffffff0
  40357e:	sbb    DWORD PTR [edx+0xaa90787],ebp
  403584:	and    ch,BYTE PTR [esi-0x36]
  403587:	in     al,0xd5
  403589:	adc    cl,BYTE PTR ds:0xb9b39baa
  40358f:	push   ecx
  403590:	inc    ecx
  403591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403592:	popf   
  403593:	cmp    BYTE PTR [esi],dl
  403595:	mov    WORD PTR [edx-0x5507ed36],gs
  40359b:	add    al,0x97
  40359d:	sbb    ebp,DWORD PTR [eax-0x41]
  4035a0:	sub    bh,BYTE PTR [ebx+eiz*4+0x4adb1769]
  4035a7:	mov    ecx,esi
  4035a9:	scas   al,BYTE PTR es:[edi]
  4035aa:	fucom  st(2)
  4035ac:	stc    
  4035ad:	inc    eax
  4035ae:	mov    DWORD PTR [esi-0x7d],eax
  4035b1:	sbb    bh,BYTE PTR [ecx+0x4ad33405]
  4035b7:	sub    eax,0x10a58c57
  4035bc:	sub    cl,BYTE PTR [edi-0x2e]
  4035bf:	(bad)  
  4035c0:	loopne 0x40362c
  4035c2:	mov    ecx,0x2ef06615
  4035c7:	jne    0x40363a
  4035c9:	or     dh,BYTE PTR [ebx]
  4035cb:	repnz xchg ebp,eax
  4035cd:	add    DWORD PTR [edi+0x514cd837],edi
  4035d3:	pop    edi
  4035d4:	inc    ecx
  4035d5:	(bad)  
  4035d6:	imul   ebx,DWORD PTR [eax-0x27d0121a],0x21
  4035dd:	mov    DWORD PTR [ebp-0x56],0xe02c2308
  4035e4:	ror    BYTE PTR [ebx+0x15],0xed
  4035e8:	pop    esi
  4035e9:	repz pop es
  4035eb:	(bad)  
  4035ec:	xchg   ebp,eax
  4035ed:	pop    eax
  4035ee:	(bad)  
  4035ef:	cmp    DWORD PTR [esi-0x7b],edi
  4035f2:	push   es
  4035f3:	int3   
  4035f4:	std    
  4035f5:	xor    dl,ah
  4035f7:	nop
  4035f8:	or     ecx,DWORD PTR [ebp+0x31eaad4f]
  4035fe:	or     bh,BYTE PTR [edi+ecx*8+0x44]
  403602:	ja     0x40364d
  403604:	stos   BYTE PTR es:[edi],al
  403605:	pushf  
  403606:	lods   eax,DWORD PTR ds:[esi]
  403607:	ror    eax,cl
  403609:	rol    dl,1
  40360b:	jne    0x4035dc
  40360d:	mov    edx,0xe5f435e4
  403612:	push   cs
  403613:	scas   al,BYTE PTR es:[edi]
  403614:	dec    ebp
  403615:	push   ds
  403616:	mov    al,ds:0xa80c8b5b
  40361b:	dec    esi
  40361c:	cwde   
  40361d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40361e:	add    eax,0xd7dda91f
  403623:	jnp    0x40366d
  403625:	jmp    0x403621
  403627:	outs   dx,DWORD PTR ds:[esi]
  403628:	jb     0x403635
  40362a:	out    0xda,al
  40362c:	arpl   WORD PTR [edx],sp
  40362e:	icebp  
  40362f:	xor    ch,BYTE PTR [ebx+0x18976656]
  403635:	clc    
  403636:	lods   eax,DWORD PTR ds:[esi]
  403638:	or     DWORD PTR [ecx-0x2183f31e],eax
  40363e:	jge    0x40360c
  403640:	mov    ah,0xe1
  403642:	xor    BYTE PTR [ecx+eax*2],ah
  403645:	gs sbb al,0xa2
  403648:	call   ebx
  40364a:	je     0x403665
  40364c:	mov    esi,0x98682358
  403651:	aam    0x58
  403653:	enter  0x7fce,0xb3
  403657:	sub    bh,0x24
  40365a:	ins    DWORD PTR es:[edi],dx
  40365b:	outs   dx,DWORD PTR ds:[esi]
  40365c:	aas    
  40365d:	dec    esi
  40365e:	xchg   BYTE PTR [edx+0x28],cl
  403661:	and    DWORD PTR [esi],0x4d
  403664:	xor    al,0xe2
  403666:	(bad)  
  403667:	mov    ebp,0xb0d65613
  40366c:	or     edi,DWORD PTR [eax-0x65e996c6]
  403672:	mov    ch,0x2
  403674:	jmp    0x4787:0x640dc42a
  40367b:	retf   0x33e3
  40367e:	and    bl,cl
  403680:	popf   
  403681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403682:	lds    esp,FWORD PTR [eax-0x2a5c7f8e]
  403688:	mov    dh,0xf5
  40368a:	cmc    
  40368b:	in     al,dx
  40368c:	cli    
  40368d:	jmp    0x25797c80
  403692:	xchg   DWORD PTR [ebp+edi*2+0x27],ebp
  403696:	(bad)  
  403697:	cmc    
  403698:	mov    dl,0xd5
  40369a:	fwait
  40369b:	sub    DWORD PTR [ebp+0x4dbf1e7d],edi
  4036a1:	inc    esp
  4036a2:	clc    
  4036a3:	lahf   
  4036a4:	jmp    0x7b4d:0x1f45
  4036aa:	das    
  4036ab:	sbb    bh,BYTE PTR [esi]
  4036ad:	outs   dx,DWORD PTR ds:[esi]
  4036ae:	gs mov ebp,0xc2b0d873
  4036b4:	pop    edi
  4036b5:	push   ebx
  4036b6:	call   0x6532:0x88991365
  4036bd:	daa    
  4036be:	jae    0x4036d7
  4036c0:	push   ecx
  4036c1:	mov    dh,0xd8
  4036c3:	dec    esi
  4036c4:	sbb    al,0xfe
  4036c6:	and    al,0xfd
  4036c8:	arpl   ax,sp
  4036ca:	inc    eax
  4036cb:	and    BYTE PTR [edx],0x74
  4036ce:	pop    esp
  4036cf:	cdq    
  4036d0:	dec    eax
  4036d1:	adc    dh,ah
  4036d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036d4:	mov    ebp,0xd0700df4
  4036d9:	adc    edi,ebp
  4036db:	push   edx
  4036dc:	leave  
  4036dd:	bound  ebx,QWORD PTR [ebp-0x49]
  4036e0:	nop
  4036e1:	pop    ecx
  4036e2:	pop    edi
  4036e3:	ds mov ebx,0xc71d8f33
  4036e9:	adc    eax,0x72afb5bb
  4036ee:	aam    0x95
  4036f0:	hlt    
  4036f1:	jb     0x403718
  4036f3:	jne    0x40367f
  4036f5:	mov    cl,0x3f
  4036f7:	aas    
  4036f8:	pop    ebx
  4036f9:	push   es
  4036fa:	adc    esi,DWORD PTR [edi]
  4036fc:	adc    DWORD PTR [ecx+0x69e578c0],eax
  403702:	push   0xffffffb8
  403704:	push   DWORD PTR [ecx+edi*4]
  403707:	pop    edi
  403708:	xor    ebp,DWORD PTR [edi+0x4]
  40370b:	fsubr  QWORD PTR [ecx]
  40370d:	sbb    al,al
  40370f:	xor    esp,DWORD PTR [ebp-0x33835eb3]
  403715:	gs mov ebx,ecx
  403718:	adc    eax,0xa5da486d
  40371d:	ss sbb eax,0x3daf19ad
  403723:	fisubr WORD PTR [ecx-0x16]
  403726:	scas   eax,DWORD PTR es:[edi]
  403727:	stc    
  403728:	mov    edx,cs
  40372a:	mov    DWORD PTR [esi+ebp*2],esp
  40372d:	xchg   ecx,eax
  40372e:	aas    
  40372f:	stc    
  403730:	pop    DWORD PTR [ebp-0x65]
  403733:	push   esp
  403734:	aad    0xa
  403736:	je     0x40373b
  403738:	jg     0x4036cc
  40373a:	int3   
  40373b:	cld    
  40373c:	cdq    
  40373d:	js     0x403795
  40373f:	lds    ebp,FWORD PTR [ebp+ebx*2-0x6bd39257]
  403746:	mov    edx,0xcfc9f921
  40374b:	mov    edx,0xf90d2c97
  403750:	sbb    DWORD PTR [esi+0x3f],ebx
  403753:	iret   
  403754:	pop    esi
  403755:	aam    0x70
  403757:	nop
  403758:	fld    TBYTE PTR [ecx-0x5c]
  40375b:	mov    ds:0xbc68db40,eax
  403760:	clc    
  403761:	neg    BYTE PTR [eax+0x3f]
  403764:	loop   0x4036fe
  403766:	jle    0x4036fe
  403768:	xchg   ecx,eax
  403769:	push   eax
  40376a:	and    eax,0xb22336f3
  40376f:	enter  0x49df,0xe8
  403773:	push   ecx
  403774:	inc    esp
  403775:	outs   dx,BYTE PTR ds:[esi]
  403776:	mov    esi,0xc5c9afb5
  40377b:	xor    al,0xa
  40377d:	shl    DWORD PTR [ebx],1
  40377f:	int3   
  403780:	add    bh,BYTE PTR [ebx+0x68da4aec]
  403786:	mov    dx,0x5d81
  40378a:	loopne 0x40378b
  40378c:	jno    0x4037d4
  40378e:	in     eax,0xba
  403790:	pop    ds
  403791:	mov    ds:0x1cf4a35d,al
  403796:	aaa    
  403797:	mov    dh,BYTE PTR [esi]
  403799:	cmp    edi,edi
  40379b:	outs   dx,DWORD PTR ds:[esi]
  40379c:	jbe    0x4037fb
  40379e:	(bad)  [ebx+0x66af6c9e]
  4037a4:	imul   ebp,DWORD PTR [edx+0x58],0x34
  4037a8:	or     eax,0x395eeb27
  4037ad:	jne    0x4037a1
  4037af:	jge    0x40379c
  4037b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037b2:	jg     0x403770
  4037b4:	shl    BYTE PTR ds:0xa3e628f8,0x49
  4037bb:	xor    bl,BYTE PTR [eax-0x6602e74c]
  4037c1:	cli    
  4037c2:	sbb    DWORD PTR [ebp+edx*4+0x32],ecx
  4037c6:	add    DWORD PTR [edi+0x65b629de],ebp
  4037cc:	xor    al,0xd8
  4037ce:	(bad)  
  4037cf:	mov    ecx,0xa8e785d2
  4037d4:	cdq    
  4037d5:	ins    BYTE PTR es:[edi],dx
  4037d6:	jae    0x403856
  4037d8:	(bad)  
  4037d9:	mov    bl,0x14
  4037db:	rol    BYTE PTR [eax+esi*4],1
  4037de:	ret    0xdc80
  4037e1:	outs   dx,BYTE PTR ds:[esi]
  4037e2:	daa    
  4037e3:	daa    
  4037e4:	hlt    
  4037e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037e6:	adc    bh,BYTE PTR [eax-0x70]
  4037e9:	xlat   BYTE PTR ds:[ebx]
  4037ea:	mov    ch,0x2d
  4037ec:	(bad)  
  4037ed:	cdq    
  4037ee:	push   ss
  4037ef:	add    eax,0x4a3c4eba
  4037f4:	xchg   esi,eax
  4037f5:	int    0x8b
  4037f7:	leave  
  4037f8:	fwait
  4037f9:	push   esi
  4037fa:	arpl   WORD PTR [eax+0x30ec6afc],ax
  403800:	push   0xb5a3a562
  403805:	enter  0x54fd,0xec
  403809:	retf   0x4b89
  40380c:	(bad)  
  40380d:	mov    ebp,0x3906e9eb
  403812:	xlat   BYTE PTR ds:[ebx]
  403813:	mov    ebx,0xf6bd9344
  403818:	push   esi
  403819:	and    bh,dl
  40381b:	scas   al,BYTE PTR es:[edi]
  40381c:	das    
  40381d:	dec    esi
  40381e:	into   
  40381f:	popf   
  403820:	and    bh,BYTE PTR [edx+ebx*8]
  403823:	xchg   esi,eax
  403824:	push   0x2d
  403826:	mov    eax,ds:0x8f4b428c
  40382b:	mov    edx,0xd8b523e5
  403830:	call   0x9824:0x4e9852a8
  403837:	add    dh,BYTE PTR [edi]
  403839:	mov    WORD PTR [edi+0x26],ds
  40383c:	fild   DWORD PTR [esi]
  40383e:	or     esp,DWORD PTR [edi]
  403840:	xchg   ecx,edx
  403842:	aad    0x59
  403844:	lock push edx
  403846:	loopne 0x403869
  403848:	js     0x4037d2
  40384a:	in     al,0x3e
  40384c:	xchg   ebp,eax
  40384d:	jg     0x4038c1
  40384f:	mov    ?,ebp
  403851:	xchg   esp,eax
  403852:	mov    al,0x27
  403854:	lods   eax,DWORD PTR ds:[esi]
  403855:	inc    edx
  403856:	aaa    
  403857:	cmc    
  403858:	(bad)
  40385b:	push   esi
  40385c:	or     DWORD PTR [edx+0x1ca91f2d],ecx
  403862:	fisub  WORD PTR [eax-0x74]
  403865:	push   edi
  403866:	in     eax,0x36
  403868:	sbb    DWORD PTR [esi],esp
  40386a:	inc    edi
  40386b:	push   edi
  40386c:	mov    dl,bl
  40386e:	repnz in al,0x1b
  403871:	cwde   
  403872:	mov    ah,0x2a
  403874:	call   0x1d6603e9
  403879:	repz sub BYTE PTR [ecx-0x65db744a],bh
  403880:	dec    edi
  403881:	cdq    
  403882:	mov    ss,WORD PTR [ebp+eiz*4-0x71ae6502]
  403889:	dec    edi
  40388a:	mov    edx,0x2c5dc2f
  40388f:	pop    ecx
  403890:	es out dx,al
  403892:	and    esp,ecx
  403894:	leave  
  403895:	inc    ebx
  403896:	jge    0x4038bf
  403898:	ins    BYTE PTR es:[edi],dx
  403899:	addr16 add bl,ch
  40389c:	jne    0x4038ff
  40389e:	push   ebx
  40389f:	sti    
  4038a0:	xor    ch,bh
  4038a2:	sbb    eax,0xe83c6ccb
  4038a7:	mov    ?,WORD PTR [ecx+eax*2-0x71a95bab]
  4038ae:	sbb    eax,0xaf8baaf6
  4038b3:	int3   
  4038b4:	loop   0x40383a
  4038b6:	sub    al,0x6a
  4038b8:	cli    
  4038b9:	out    dx,al
  4038ba:	mov    eax,ds:0x62fc8e61
  4038bf:	jp     0x4038b2
  4038c1:	xor    eax,0xd8e85261
  4038c6:	(bad)  
  4038c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038c8:	jg     0x4038ee
  4038ca:	xor    DWORD PTR [edx+0x7dcebb95],eax
  4038d0:	(bad)  
  4038d1:	mov    ecx,0x852f69dc
  4038d6:	ret    
  4038d7:	push   esp
  4038d8:	xchg   esi,eax
  4038d9:	fdiv   QWORD PTR [edi-0x55f76792]
  4038df:	adc    al,0x1b
  4038e1:	dec    esp
  4038e2:	pop    esi
  4038e3:	sbb    al,0xb8
  4038e5:	into   
  4038e6:	pusha  
  4038e7:	xchg   esi,eax
  4038e8:	sar    BYTE PTR ds:0xc57a00ca,cl
  4038ee:	hlt    
  4038ef:	data16 cmp al,0xc2
  4038f2:	or     al,0x7d
  4038f4:	or     al,0xfa
  4038f6:	cmp    dl,bl
  4038f8:	repz pop ss
  4038fa:	push   esp
  4038fb:	fisub  DWORD PTR cs:[ebp+eax*1-0x39]
  403900:	sub    eax,0xf82c9e54
  403905:	ret    0xad4f
  403908:	xchg   esi,eax
  403909:	adc    dl,ch
  40390b:	test   esp,edx
  40390d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40390e:	inc    edx
  40390f:	jg     0x403914
  403911:	mov    ebp,cs
  403913:	sbb    eax,0x557cf083
  403918:	jg     0x40390a
  40391a:	stos   DWORD PTR es:[edi],eax
  40391b:	lea    edx,[edx-0x21]
  40391e:	ds push esi
  403920:	cld    
  403921:	add    ah,0xf9
  403924:	loope  0x403918
  403926:	xor    eax,0x63216b12
  40392b:	test   al,0xac
  40392e:	iret   
  40392f:	add    al,0x1a
  403931:	enter  0x1471,0xc5
  403935:	dec    ecx
  403936:	pop    edx
  403937:	bnd jg 0x40396b
  40393a:	sub    DWORD PTR [ebp-0x276a28f1],esp
  403940:	scas   eax,DWORD PTR es:[edi]
  403941:	inc    edx
  403942:	push   0xebca737b
  403947:	pop    ss
  403948:	loop   0x403962
  40394a:	pop    ss
  40394b:	xor    bh,BYTE PTR [eax]
  40394d:	sub    al,BYTE PTR [eax+0x12]
  403950:	fcmovu st,st(5)
  403952:	adc    DWORD PTR [esi-0x2d686fbb],ebp
  403958:	fdivr  QWORD PTR [eax-0x63]
  40395b:	and    bl,BYTE PTR [ebx]
  40395d:	sbb    DWORD PTR [ebx+0x5d],ebp
  403960:	stos   BYTE PTR es:[edi],al
  403961:	or     BYTE PTR [edx],al
  403963:	rol    BYTE PTR ds:0x3e051320,cl
  403969:	call   0x960c:0x56be138e
  403970:	test   eax,0xd3d9d3ab
  403975:	ret    0x1149
  403978:	fs es ret 0x1196
  40397d:	icebp  
  40397e:	retf   
  40397f:	inc    esi
  403980:	call   0xc7cb7e6d
  403985:	bound  edi,QWORD PTR [esi]
  403987:	(bad)  
  403988:	xor    al,0xe5
  40398a:	repnz xor DWORD PTR gs:[edi],0xffffffdf
  40398f:	cmc    
  403990:	outs   dx,DWORD PTR ds:[esi]
  403991:	imul   esp,DWORD PTR [edi+ebp*4],0x43
  403995:	test   BYTE PTR [eax],al
  403997:	sahf   
  403998:	fdiv   QWORD PTR [ebx]
  40399a:	arpl   WORD PTR [edi],cx
  40399c:	push   edi
  40399d:	or     bl,al
  40399f:	mov    fs,WORD PTR [ebx]
  4039a1:	loope  0x403937
  4039a3:	pop    edi
  4039a4:	mov    ?,WORD PTR [edx+0x78eda0c2]
  4039aa:	adc    cl,BYTE PTR [ecx+0x75]
  4039ad:	shl    DWORD PTR [eax+esi*2+0x53918470],cl
  4039b4:	retf   0x67d9
  4039b7:	aam    0x1
  4039b9:	or     ebx,DWORD PTR [ecx]
  4039bb:	pop    es
  4039bc:	cmp    eax,0x8a42f07d
  4039c1:	pop    esi
  4039c2:	add    BYTE PTR [ecx],bh
  4039c4:	jle    0x403947
  4039c6:	cld    
  4039c7:	inc    ecx
  4039c8:	push   edx
  4039c9:	and    BYTE PTR [eax],ch
  4039cb:	inc    edx
  4039cc:	jns    0x4039e3
  4039ce:	cmp    bh,BYTE PTR [esi-0x89c1c0f]
  4039d4:	sbb    BYTE PTR [edx+esi*1-0x42b608a4],cl
  4039db:	int    0xda
  4039dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039de:	fs pushf 
  4039e0:	cmp    BYTE PTR [edx],bl
  4039e2:	push   es
  4039e3:	mov    ch,0xba
  4039e5:	mov    ?,WORD PTR [ebx+esi*4+0x60c2b537]
  4039ec:	cli    
  4039ed:	jl     0x403a11
  4039ef:	push   0x2
  4039f1:	adc    DWORD PTR [edx+0x15],0x73
  4039f5:	cmp    eax,0x6f51f043
  4039fa:	sub    al,0x8
  4039fc:	sbb    BYTE PTR [ecx-0x7e190d16],ah
  403a02:	test   eax,ecx
  403a04:	out    dx,eax
  403a05:	xchg   ecx,eax
  403a06:	es sbb eax,0xdf216d59
  403a0c:	clc    
  403a0d:	int3   
  403a0e:	pop    esp
  403a0f:	add    al,0x21
  403a11:	xchg   ebp,eax
  403a12:	test   edx,ecx
  403a14:	jmp    0xba7d82ea
  403a19:	or     edi,DWORD PTR [esi]
  403a1b:	or     eax,0x2426464e
  403a20:	repnz mov edx,0x8fcb4f4f
  403a26:	push   es
  403a27:	test   BYTE PTR [edi],0xb6
  403a2a:	push   es
  403a2b:	rcl    BYTE PTR [edx],cl
  403a2d:	jl     0x4039f7
  403a2f:	xlat   BYTE PTR ds:[ebx]
  403a30:	mul    BYTE PTR ds:0xbfd9f06c
  403a36:	sbb    bh,BYTE PTR [eax-0x7]
  403a39:	and    DWORD PTR [edi-0x523a95c8],ebx
  403a3f:	mov    dh,0x1f
  403a41:	iret   
  403a42:	add    esi,0xffffffe7
  403a45:	xchg   edx,eax
  403a46:	sub    eax,0xc31c80ce
  403a4b:	sbb    al,0xfc
  403a4d:	(bad)  
  403a4e:	and    ebp,DWORD PTR [ecx]
  403a50:	mov    WORD PTR [edx-0x13133823],?
  403a56:	cmp    BYTE PTR [ecx+0x508358cc],bl
  403a5c:	int    0x64
  403a5e:	push   ss
  403a5f:	ror    BYTE PTR [ecx],0xb7
  403a62:	imul   esp,DWORD PTR [ebp-0x49ac9286],0x2d857d8e
  403a6c:	jmp    DWORD PTR [edi]
  403a6e:	mov    dl,0xc2
  403a70:	pop    ds
  403a71:	fidiv  WORD PTR [edx+0x69]
  403a74:	mov    BYTE PTR [eax],cl
  403a76:	ins    DWORD PTR es:[edi],dx
  403a77:	ins    BYTE PTR es:[edi],dx
  403a78:	test   al,0x3
  403a7a:	les    edx,FWORD PTR [eax+esi*1-0xba50d0]
  403a81:	push   ecx
  403a82:	prefetcht0 BYTE PTR [ebx-0x4c3909aa]
  403a89:	mov    BYTE PTR [esi-0x2e],bl
  403a8c:	add    eax,0xd748e450
  403a91:	mov    eax,0xc159e585
  403a96:	mov    al,0x1f
  403a98:	stos   DWORD PTR es:[edi],eax
  403a99:	std    
  403a9a:	adc    BYTE PTR [ebx],0x42
  403a9d:	mov    esp,0x11b91713
  403aa2:	retf   0x6db3
  403aa5:	cwde   
  403aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aa7:	pop    ss
  403aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403aa9:	and    al,0x56
  403aab:	cmp    bh,BYTE PTR [ebx-0x578daa61]
  403ab1:	popf   
  403ab2:	xchg   esi,eax
  403ab3:	lahf   
  403ab4:	cmp    al,0xbf
  403ab6:	jns    0x403b28
  403ab8:	inc    edi
  403ab9:	scas   eax,DWORD PTR es:[edi]
  403aba:	mov    edx,0x751c1fd0
  403abf:	(bad)  
  403ac0:	xor    DWORD PTR [esp+ebx*2+0x2242704a],ecx
  403ac7:	pop    eax
  403ac8:	inc    edi
  403ac9:	mov    ecx,0xb499fe67
  403ace:	jno    0x403add
  403ad0:	leave  
  403ad1:	adc    dl,al
  403ad3:	push   ds
  403ad4:	(bad)  
  403ad5:	xor    eax,0x77f7eb9e
  403ada:	cwde   
  403adb:	adc    BYTE PTR [eax+0x52],bl
  403ade:	and    eax,0x4854cec1
  403ae3:	push   ebx
  403ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ae5:	mov    WORD PTR [esi-0x20df3f29],ss
  403aeb:	out    dx,al
  403aec:	mov    ecx,0x2d498bd6
  403af1:	test   eax,0xaa49806b
  403af6:	push   esp
  403af7:	aaa    
  403af8:	mov    dl,0x9e
  403afa:	inc    eax
  403afb:	or     BYTE PTR [ecx-0x53],al
  403afe:	iret   
  403aff:	ss aaa 
  403b01:	mov    BYTE PTR [eax+0x4674daef],ch
  403b07:	jb     0x403b46
  403b09:	test   eax,0xd757ecf7
  403b0e:	(bad)  
  403b0f:	jne    0x403b09
  403b11:	into   
  403b12:	inc    ebp
  403b13:	jbe    0x403aed
  403b15:	daa    
  403b16:	or     BYTE PTR [ebp+0x6afe24c2],cl
  403b1c:	ror    bh,0x5e
  403b1f:	sbb    cl,BYTE PTR [esi]
  403b21:	outs   dx,BYTE PTR ds:[esi]
  403b22:	jae    0x403b2d
  403b24:	inc    ebx
  403b25:	mov    bl,0x72
  403b27:	mov    cl,0x2f
  403b29:	dec    esi
  403b2a:	pushf  
  403b2b:	sub    ch,BYTE PTR [esi+edx*4]
  403b2e:	sub    ah,BYTE PTR [ebx-0x3ece0011]
  403b34:	xchg   ecx,eax
  403b35:	fst    QWORD PTR [ebx]
  403b37:	xor    al,0xd5
  403b39:	sbb    BYTE PTR [esi],dl
  403b3b:	add    BYTE PTR [eax-0x4c858815],ah
  403b41:	xchg   BYTE PTR [edi-0x75],cl
  403b44:	adc    al,0x66
  403b46:	mov    cl,0x7c
  403b48:	jmp    0x876f:0x9475acfa
  403b4f:	sub    al,0x5d
  403b51:	dec    edx
  403b52:	inc    ebx
  403b53:	and    edx,DWORD PTR [edi+ecx*4]
  403b56:	sbb    eax,0x11282114
  403b5b:	adc    ebp,edi
  403b5d:	ret    
  403b5e:	xchg   ebx,eax
  403b5f:	shl    bl,0xed
  403b62:	nop
  403b63:	test   eax,ecx
  403b65:	sub    ecx,DWORD PTR [edi+0x35]
  403b68:	inc    eax
  403b69:	jmp    0x7fa04f6e
  403b6e:	fdiv   st(0),st
  403b70:	lahf   
  403b71:	mov    ebx,DWORD PTR ds:0x1285188d
  403b77:	push   esp
  403b78:	rcr    DWORD PTR [edi-0x36],0x2e
  403b7c:	add    edx,DWORD PTR [ecx]
  403b7e:	fsub   DWORD PTR [ebp-0x2ef786f9]
  403b84:	dec    ebx
  403b85:	(bad)  
  403b86:	xchg   edx,eax
  403b87:	cmp    ah,BYTE PTR [edi+0x78]
  403b8a:	pop    ecx
  403b8b:	jmp    0x403b39
  403b8d:	fwait
  403b8e:	lods   al,BYTE PTR ds:[esi]
  403b8f:	nop
  403b90:	jae    0x403b1f
  403b92:	adc    al,0x6c
  403b94:	or     ecx,ebp
  403b96:	cdq    
  403b97:	outs   dx,BYTE PTR ds:[esi]
  403b98:	or     al,0x8d
  403b9a:	inc    ecx
  403b9b:	jno    0x403b4b
  403b9d:	or     eax,0xf502ee7b
  403ba2:	push   esp
  403ba3:	xor    ecx,ecx
  403ba5:	adc    esp,esp
  403ba7:	push   ds
  403ba8:	mov    ch,0x58
  403baa:	push   edx
  403bab:	add    BYTE PTR [esi+0x40e5c49c],ch
  403bb1:	scas   al,BYTE PTR es:[edi]
  403bb2:	mov    bh,BYTE PTR ds:0x1c5dc371
  403bb8:	push   esi
  403bb9:	and    ah,BYTE PTR [ebx-0x6c]
  403bbc:	dec    edi
  403bbd:	(bad)  
  403bbe:	aam    0x84
  403bc0:	pop    ebp
  403bc1:	dec    ebx
  403bc2:	push   0xfffffffe
  403bc4:	push   ebx
  403bc5:	push   edi
  403bc6:	sub    bh,BYTE PTR [esi]
  403bc8:	not    DWORD PTR [edi-0x204c2252]
  403bce:	sub    cl,BYTE PTR gs:[esi-0x29]
  403bd2:	in     eax,dx
  403bd3:	jb     0x403c4f
  403bd5:	out    0xf9,al
  403bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bd8:	sub    DWORD PTR [esi],eax
  403bda:	xor    ah,BYTE PTR [esi-0x42]
  403bdd:	push   0xffffffcf
  403bdf:	dec    edi
  403be0:	stos   BYTE PTR es:[edi],al
  403be1:	xor    BYTE PTR [eax+ebx*1-0x69c29fa3],cl
  403be8:	fnstcw WORD PTR [esi+eax*8+0x45]
  403bec:	cmp    bh,BYTE PTR [edx+eiz*4+0x6c]
  403bf0:	fistp  DWORD PTR [edi+0x75]
  403bf3:	push   es
  403bf4:	push   cs
  403bf5:	(bad)
  403bf8:	dec    ebx
  403bf9:	into   
  403bfa:	sbb    BYTE PTR ds:0x7466e402,ch
  403c00:	rol    BYTE PTR [esi+0x6ff2870a],1
  403c06:	mov    eax,ds:0x90fe22f8
  403c0b:	int3   
  403c0c:	cmp    dl,cl
  403c0e:	add    bh,BYTE PTR ds:0x134d7d9e
  403c14:	mov    ah,BYTE PTR [ebx-0x54]
  403c17:	lods   al,BYTE PTR ds:[esi]
  403c18:	pop    esp
  403c19:	mov    ecx,0xf99a2435
  403c1e:	mov    esi,0x6e7d6e0a
  403c23:	rcr    DWORD PTR [esi-0x78],1
  403c26:	sti    
  403c27:	popa   
  403c28:	pusha  
  403c29:	jo     0x403c66
  403c2b:	push   edx
  403c2c:	mov    dl,BYTE PTR cs:[esi-0x4d201c8]
  403c33:	out    0x97,al
  403c35:	daa    
  403c36:	dec    eax
  403c37:	push   0x6b
  403c39:	cmp    DWORD PTR cs:[edi-0x26],edx
  403c3d:	stc    
  403c3e:	ins    DWORD PTR es:[edi],dx
  403c3f:	jb     0x403c06
  403c41:	mov    cl,0xc9
  403c43:	mov    ah,0xed
  403c45:	sbb    BYTE PTR [edi+0x5b1b2ccd],ah
  403c4b:	adc    DWORD PTR ds:0x290f94bc,0xf
  403c52:	jae    0x403c1b
  403c54:	push   0xbbeb5b39
  403c59:	(bad)  
  403c5a:	arpl   WORD PTR [edi-0x1d],si
  403c5d:	sbb    eax,0xdb2875a6
  403c62:	push   es
  403c63:	pop    es
  403c64:	bnd jno 0x403c9c
  403c67:	sub    DWORD PTR [ecx+esi*2+0x5744cddc],esp
  403c6e:	jno    0x403bf6
  403c70:	(bad)  
  403c71:	dec    esp
  403c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c73:	test   al,0xb9
  403c75:	test   al,0x23
  403c77:	in     al,dx
  403c78:	repz sbb DWORD PTR [eiz*4-0x3a89904d],ebp
  403c80:	sub    BYTE PTR [ebp+ebp*8-0x30],0xb0
  403c85:	xor    BYTE PTR [edx],0xc7
  403c88:	fcmovnu st,st(3)
  403c8a:	enter  0x704c,0xa8
  403c8e:	fprem  
  403c90:	push   0xab2a1c40
  403c95:	out    dx,al
  403c96:	(bad)  [edx]
  403c98:	js     0x403ca9
  403c9a:	jmp    0x3748f118
  403c9f:	int    0xd7
  403ca1:	jmp    0x9819cb6a
  403ca6:	push   ss
  403ca7:	xlat   BYTE PTR ds:[ebx]
  403ca8:	push   edx
  403ca9:	jle    0x403c91
  403cab:	leave  
  403cac:	add    BYTE PTR [edi],al
  403cae:	retf   0x5b7a
  403cb1:	ins    DWORD PTR es:[edi],dx
  403cb2:	jbe    0x403cee
  403cb4:	mov    ds:0x1ab18269,eax
  403cb9:	jl     0x403c43
  403cbb:	pop    edi
  403cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cbd:	test   DWORD PTR [ebx],ecx
  403cbf:	inc    esi
  403cc0:	push   esi
  403cc1:	popa   
  403cc2:	and    eax,0xda8b5628
  403cc7:	stos   DWORD PTR es:[edi],eax
  403cc8:	das    
  403cc9:	mov    al,ds:0xce0ab240
  403cce:	adc    al,bh
  403cd0:	mov    al,0x23
  403cd2:	cld    
  403cd3:	stos   BYTE PTR es:[edi],al
  403cd4:	pusha  
  403cd5:	xchg   BYTE PTR [edi+0x578c3485],ch
  403cdb:	or     esp,DWORD PTR [eax+0x2d]
  403cde:	sti    
  403cdf:	or     BYTE PTR [edi],bh
  403ce1:	hlt    
  403ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ce3:	xor    esp,DWORD PTR [ebx-0x49]
  403ce6:	popf   
  403ce7:	or     ebx,ebp
  403ce9:	pop    edi
  403cea:	xchg   edx,eax
  403ceb:	popf   
  403cec:	xor    edx,DWORD PTR [eax-0x31f33828]
  403cf2:	push   es
  403cf3:	xchg   ebx,eax
  403cf4:	test   BYTE PTR [esi],0x2b
  403cf7:	xor    al,0x6f
  403cf9:	pop    ss
  403cfa:	enter  0x7009,0xc7
  403cfe:	test   BYTE PTR fs:[edi],cl
  403d01:	stos   DWORD PTR es:[edi],eax
  403d02:	sbb    DWORD PTR ds:[edx+edx*4],ebx
  403d06:	adc    eax,DWORD PTR [ebx-0x7c]
  403d09:	xor    esi,DWORD PTR [ebx]
  403d0b:	fld    st(6)
  403d0d:	dec    edi
  403d0e:	sub    ebp,edx
  403d10:	and    al,0x76
  403d12:	(bad)  
  403d13:	test   eax,0x33cbbca
  403d18:	into   
  403d19:	mov    bl,0xc
  403d1b:	arpl   di,bx
  403d1d:	fisttp DWORD PTR [ebx]
  403d1f:	loope  0x403caa
  403d21:	mov    dl,0x7c
  403d23:	test   al,dh
  403d25:	fs inc ebp
  403d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d28:	xor    al,0xdc
  403d2a:	ja     0x403d6f
  403d2c:	enter  0xfed0,0x81
  403d30:	bound  eax,QWORD PTR [esi+0x56]
  403d33:	repnz test DWORD PTR [edx-0x59],esi
  403d37:	dec    ebx
  403d38:	xchg   ebp,eax
  403d39:	ret    
  403d3a:	je     0x403d9e
  403d3c:	jg     0x403d4d
  403d3e:	xchg   edi,eax
  403d3f:	call   0x92861055
  403d44:	push   es
  403d45:	mov    dl,0x1a
  403d47:	clc    
  403d48:	int    0x56
  403d4a:	mov    eax,0x9ba75cd
  403d4f:	out    0x62,eax
  403d51:	popa   
  403d52:	mov    dl,0xcf
  403d54:	popa   
  403d55:	icebp  
  403d56:	aad    0x73
  403d58:	and    BYTE PTR [edi-0x67],bh
  403d5b:	cmp    ah,BYTE PTR [eax+0x24]
  403d5e:	push   ebp
  403d5f:	jg     0x403d1f
  403d61:	pop    ecx
  403d62:	pop    eax
  403d63:	sbb    ebx,DWORD PTR [ebp-0x6b]
  403d66:	sbb    eax,0xe2ba2d65
  403d6b:	xchg   esi,eax
  403d6c:	test   al,0xea
  403d6e:	mov    bh,BYTE PTR [ebp+0x64bcd1a0]
  403d74:	es jle 0x403d81
  403d77:	add    bl,0x85
  403d7a:	inc    eax
  403d7b:	push   0x89cc677a
  403d80:	sub    DWORD PTR [ebx-0xf],esi
  403d83:	cmp    dl,dl
  403d85:	test   eax,0x98940646
  403d8a:	test   al,0x44
  403d8c:	scas   al,BYTE PTR es:[edi]
  403d8d:	sub    dl,BYTE PTR [edx]
  403d8f:	pop    eax
  403d90:	and    dl,BYTE PTR [edi+edi*4-0x45c22b62]
  403d97:	inc    eax
  403d98:	and    esi,DWORD PTR [ecx-0x29e91c18]
  403d9e:	xor    DWORD PTR [ecx-0x1b],ebp
  403da1:	mov    esi,0xab3d2f69
  403da6:	mov    esp,0x748283ce
  403dab:	in     eax,0x11
  403dad:	push   eax
  403dae:	jg     0x403e13
  403db0:	pop    esi
  403db1:	jo     0x403dcd
  403db3:	mov    ebx,0x8e4b9364
  403db8:	data16 mov dh,0xad
  403dbb:	or     BYTE PTR [edi-0x7a],ah
  403dbe:	dec    ebp
  403dbf:	sbb    ecx,ebp
  403dc1:	iret   
  403dc2:	xchg   edx,eax
  403dc3:	or     edx,ebp
  403dc5:	pop    ecx
  403dc6:	pop    ss
  403dc7:	push   0xffffffb7
  403dc9:	rcl    bh,cl
  403dcb:	adc    cl,BYTE PTR [ebp-0x2dac654e]
  403dd1:	push   ss
  403dd2:	outs   dx,BYTE PTR ds:[esi]
  403dd3:	push   0x50
  403dd5:	mov    DWORD PTR [edx+0x562c3910],ebp
  403ddb:	out    dx,eax
  403ddc:	ja     0x403e55
  403dde:	cmp    eax,DWORD PTR [edi-0x76]
  403de1:	std    
  403de2:	mov    al,ds:0x763bb783
  403de7:	mov    ds:0xc2dae775,al
  403dec:	dec    esp
  403ded:	push   ebx
  403dee:	cmp    ah,BYTE PTR [edi+ebx*4+0x64b30c0e]
  403df5:	inc    ax
  403df7:	add    esp,DWORD PTR [edi]
  403df9:	shr    BYTE PTR [ecx+0x4ad010b4],0xd0
  403e00:	mov    eax,DWORD PTR [eax+0x29fcec5]
  403e06:	dec    ebp
  403e07:	and    dl,BYTE PTR [ecx+edx*4-0x19ecdb7b]
  403e0e:	cs ret 0x2f10
  403e12:	lods   al,BYTE PTR ds:[esi]
  403e13:	aaa    
  403e14:	mov    ds,WORD PTR [edi-0x69e17d23]
  403e1a:	sub    al,BYTE PTR [eax+0x3f573919]
  403e20:	add    DWORD PTR [edi+0xb],ecx
  403e23:	in     eax,dx
  403e24:	stc    
  403e25:	pop    eax
  403e26:	test   eax,0x7dcb9cba
  403e2b:	cmp    al,0xc5
  403e2d:	push   ss
  403e2e:	das    
  403e2f:	dec    DWORD PTR [eax-0x7680cc4b]
  403e35:	(bad)  
  403e36:	sub    eax,0x3ceba47
  403e3b:	in     eax,dx
  403e3c:	push   ss
  403e3d:	imul   esp,DWORD PTR [edx-0x16],0xffffff87
  403e41:	enter  0x3c84,0x5c
  403e45:	mov    BYTE PTR [ebp-0x7b],cl
  403e48:	pushf  
  403e49:	mov    edi,0xcb654860
  403e4e:	xchg   ebp,eax
  403e4f:	pop    edx
  403e50:	call   0xc62c30a2
  403e55:	pop    esi
  403e56:	icebp  
  403e57:	mov    ecx,0xffd7cd5b
  403e5c:	inc    esi
  403e5d:	retf   
  403e5e:	test   BYTE PTR [esi+eiz*2-0x705a5877],ch
  403e65:	lea    eax,[ecx]
  403e67:	mov    bl,0xb4
  403e69:	mov    ch,0xbf
  403e6b:	fnstcw WORD PTR [edi+0x5f2a5efb]
  403e71:	popf   
  403e72:	push   0x5c0897a2
  403e77:	dec    esp
  403e78:	mov    ebx,0x455df1c8
  403e7d:	inc    esp
  403e7e:	mov    ds:0x8187cd71,eax
  403e83:	push   DWORD PTR [eax]
  403e85:	cmove  edi,DWORD PTR [eax]
  403e88:	mov    al,ds:0xf7cf6080
  403e8d:	inc    esp
  403e8e:	fldcw  WORD PTR [ebp-0x57d95a7]
  403e94:	inc    esp
  403e95:	stos   DWORD PTR es:[edi],eax
  403e96:	sbb    eax,0xcf2b8104
  403e9b:	(bad)  
  403e9c:	dec    eax
  403e9d:	pop    eax
  403e9e:	xchg   edi,eax
  403e9f:	pop    es
  403ea0:	mov    dh,0x68
  403ea2:	repz pop ebp
  403ea4:	popa   
  403ea5:	pop    edx
  403ea6:	and    ebx,DWORD PTR [eax]
  403ea8:	lahf   
  403ea9:	in     eax,0x92
  403eab:	or     al,0x6b
  403ead:	imul   eax,DWORD PTR [eax+0x57],0xb2b723eb
  403eb4:	dec    esp
  403eb5:	lods   al,BYTE PTR ds:[esi]
  403eb6:	dec    BYTE PTR [ebx+0x1c86aa5a]
  403ebc:	daa    
  403ebd:	cmp    DWORD PTR ds:0x45fee117,esp
  403ec3:	loope  0x403f0d
  403ec5:	ficomp WORD PTR [esp+ebp*4+0x4aee65c4]
  403ecc:	call   0x3202fb30
  403ed1:	(bad)
  403ed6:	xor    eax,0xdae2667d
  403edb:	inc    edx
  403edc:	sub    DWORD PTR [edi],edx
  403ede:	jbe    0x403f25
  403ee0:	pop    ds
  403ee1:	cmc    
  403ee2:	rcr    BYTE PTR [ecx],0xfa
  403ee5:	or     eax,0x3782a800
  403eea:	jp     0x403f2c
  403eec:	ret    0x4c65
  403eef:	or     BYTE PTR [edx+0x2f189e1d],dl
  403ef5:	ret    0xe0e5
  403ef8:	ror    ecx,0x35
  403efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403efc:	inc    edx
  403efd:	jbe    0x403ee5
  403eff:	(bad)  
  403f00:	fwait
  403f01:	inc    esp
  403f02:	(bad)  
  403f03:	xor    dl,0x93
  403f06:	loop   0x403f39
  403f08:	mov    ebp,0x7f46f4db
  403f0d:	fidiv  DWORD PTR [ecx]
  403f0f:	xor    edi,DWORD PTR [esi]
  403f11:	jmp    0xd4de6544
  403f16:	dec    eax
  403f17:	pop    edi
  403f18:	nop
  403f19:	cdq    
  403f1a:	cld    
  403f1b:	or     al,0x3a
  403f1d:	inc    edi
  403f1e:	sbb    DWORD PTR [ebp+0x7],0xffffffb0
  403f22:	push   0xffffff88
  403f24:	loopne 0x403f32
  403f26:	(bad)  [edx-0x1b6a37f7]
  403f2c:	pop    ebp
  403f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f2e:	jl     0x403eb1
  403f30:	gs cli 
  403f32:	lahf   
  403f33:	mov    bh,BYTE PTR [edi+0x75]
  403f36:	mov    ch,0xf
  403f38:	loope  0x403ec9
  403f3a:	and    ch,bh
  403f3c:	cs ins BYTE PTR es:[edi],dx
  403f3e:	adc    eax,DWORD PTR [esi]
  403f40:	and    eax,0xe45b4eb8
  403f45:	outs   dx,DWORD PTR ds:[esi]
  403f46:	cs xchg esp,eax
  403f48:	inc    edi
  403f49:	int    0xea
  403f4b:	adc    al,0xd
  403f4d:	sub    eax,0xd3a2560a
  403f52:	fistp  DWORD PTR [esp+edx*2+0x30b0c9dc]
  403f59:	mov    edx,DWORD PTR [ecx+0x16f909cc]
  403f5f:	fbstp  TBYTE PTR [edx]
  403f61:	jne    0x403fb1
  403f63:	dec    edx
  403f64:	sub    DWORD PTR ds:0x1f7178ef,eax
  403f6a:	(bad)  [edi+0x24]
  403f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f6e:	std    
  403f6f:	sub    eax,0x1393d3da
  403f74:	out    dx,eax
  403f75:	jo     0x403fd1
  403f77:	or     eax,0xcd9da42f
  403f7c:	gs dec ebx
  403f7e:	sar    DWORD PTR [edx-0x1a37ed78],0xb3
  403f85:	add    DWORD PTR [edi+eax*8],edi
  403f88:	les    eax,FWORD PTR [eax]
  403f8a:	dec    esp
  403f8b:	and    DWORD PTR [ebp+edi*8-0x2f],0xffffffc7
  403f90:	push   ebp
  403f91:	pusha  
  403f92:	push   ebp
  403f93:	test   al,0x72
  403f95:	jb     0x403fa9
  403f97:	rol    esi,1
  403f99:	(bad)  
  403f9b:	sub    al,0x56
  403f9d:	inc    ecx
  403f9e:	cmp    al,0xa
  403fa0:	and    cl,dh
  403fa2:	mov    esi,0x1f89604d
  403fa7:	xchg   edi,esi
  403fa9:	mov    dl,0x95
  403fab:	mov    esi,0x8c1fe48f
  403fb0:	dec    edi
  403fb1:	jg     0x403f52
  403fb3:	out    0x47,al
  403fb5:	pop    ecx
  403fb6:	xor    al,0xc2
  403fb8:	push   ds
  403fb9:	loopne 0x404021
  403fbb:	mov    ds:0x35a602b4,al
  403fc0:	sub    DWORD PTR [ecx+0x66c12c6c],edx
  403fc6:	mov    esp,ebx
  403fc8:	inc    esi
  403fc9:	lods   eax,DWORD PTR ds:[esi]
  403fca:	stc    
  403fcb:	inc    ecx
  403fcc:	mov    ebx,0x336e0417
  403fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd2:	clc    
  403fd3:	dec    edi
  403fd4:	ja     0x40400d
  403fd6:	cli    
  403fd7:	mov    edx,0xec799ea4
  403fdc:	jl     0x403fd6
  403fde:	mov    dl,0x8e
  403fe0:	add    eax,0x4224815f
  403fe5:	xchg   al,bh
  403fe7:	cmp    ebx,DWORD PTR [edx-0x68b7df85]
  403fed:	xor    edi,edx
  403fef:	fwait
  403ff0:	cwde   
  403ff1:	das    
  403ff2:	add    DWORD PTR [ecx+eax*2-0x31],0x1ac68ec5
  403ffa:	fiadd  WORD PTR [ebp+0x60e705b7]
  404000:	cmp    bl,BYTE PTR [ebp+0x6698148d]
  404006:	mov    edx,0x2c5ad3f1
  40400b:	push   cs
  40400c:	out    0x8b,eax
  40400e:	cld    
  40400f:	lock xchg edi,eax
  404011:	xor    al,0x9e
  404013:	lock pop ebx
  404015:	mov    bh,0x56
  404017:	push   eax
  404018:	mov    ah,0xb
  40401a:	pop    ds
  40401b:	mov    bl,0x3b
  40401d:	push   edx
  40401e:	mov    ebx,0xaf132a6b
  404023:	push   esp
  404024:	dec    esp
  404025:	mov    eax,0xef521dd8
  40402a:	repz cmp eax,0x27712a08
  404030:	inc    edi
  404031:	int    0x78
  404033:	mov    ds:0xfd1988e,eax
  404038:	push   edx
  404039:	outs   dx,BYTE PTR ds:[esi]
  40403a:	leave  
  40403b:	fnclex 
  40403d:	shr    DWORD PTR [ecx],cl
  40403f:	and    ch,BYTE PTR [ecx-0x1fd9e065]
  404045:	sub    eax,0xff3cdd1
  40404a:	and    esi,eax
  40404c:	xor    al,0x36
  40404e:	xor    BYTE PTR [ebp+eiz*1-0x50],al
  404052:	add    BYTE PTR [ecx+0x3b],ch
  404055:	xchg   ebp,eax
  404056:	loope  0x4040c1
  404058:	sub    cl,ah
  40405a:	scas   eax,DWORD PTR es:[edi]
  40405b:	xor    DWORD PTR [eax+ebx*1],ecx
  40405e:	stos   BYTE PTR es:[edi],al
  40405f:	push   edi
  404060:	daa    
  404061:	push   edi
  404062:	(bad)  
  404063:	xor    edi,DWORD PTR [edx]
  404065:	aam    0xf5
  404067:	push   edx
  404068:	stos   BYTE PTR es:[edi],al
  404069:	ds loope 0x4040d0
  40406c:	jp     0x404053
  40406e:	sbb    al,0xb9
  404070:	mov    cl,0x9a
  404072:	mov    ch,0x2a
  404074:	jnp    0x4040a1
  404076:	mov    edx,0xc85b4fea
  40407b:	fiadd  DWORD PTR [edi+ebx*8]
  40407e:	jle    0x404000
  404080:	fidivr DWORD PTR [ecx]
  404082:	inc    eax
  404083:	sbb    bl,BYTE PTR [ebx+0x4f15773d]
  404089:	mov    ch,0x21
  40408b:	jmp    DWORD PTR ds:0x7241d4c6
  404091:	push   0xcc9db9d9
  404096:	fild   QWORD PTR [edx-0x6089ea72]
  40409c:	outs   dx,BYTE PTR ds:[esi]
  40409d:	sbb    al,0xce
  40409f:	fstp   QWORD PTR [eax-0x4b]
  4040a2:	icebp  
  4040a3:	dec    edx
  4040a4:	or     al,0x1d
  4040a6:	(bad)
  4040a9:	cwde   
  4040aa:	in     al,dx
  4040ab:	pop    eax
  4040ac:	shl    BYTE PTR [esi+0x1e],1
  4040af:	je     0x40411f
  4040b1:	aam    0xa0
  4040b3:	repnz aas 
  4040b5:	cmp    ecx,DWORD PTR [ebx+0x2f]
  4040b8:	mov    ebx,esp
  4040ba:	lds    esi,FWORD PTR [eax+0x25e20a77]
  4040c0:	or     ch,cl
  4040c2:	enter  0xc4ee,0x54
  4040c6:	imul   edx,ebp,0x7aa7c810
  4040cc:	jns    0x4040bf
  4040ce:	xor    dh,BYTE PTR ds:0xb4379578
  4040d4:	pop    esp
  4040d5:	pop    ebp
  4040d6:	add    al,0xc5
  4040d8:	or     BYTE PTR [ebp-0x113170db],ah
  4040de:	jns    0x40414a
  4040e0:	xor    cl,BYTE PTR [edi-0x1f8aa4cd]
  4040e6:	mov    ds:0x23fc222b,al
  4040eb:	test   al,0x78
  4040ed:	jmp    0x3b27d5de
  4040f2:	push   edx
  4040f3:	jle    0x404103
  4040f5:	pop    edi
  4040f6:	fsubr  DWORD PTR [edx-0x4f]
  4040f9:	mov    ah,0x49
  4040fb:	(bad)  
  4040fc:	push   cs
  4040fd:	fisttp WORD PTR [ecx+edx*1-0x3bc0b66b]
  404104:	cmp    al,0xa3
  404106:	not    dh
  404108:	mov    dl,0x74
  40410a:	dec    ecx
  40410b:	(bad)  
  40410c:	loope  0x4040ed
  40410e:	call   0x7969:0x1d9e8841
  404115:	(bad)  
  404116:	sbb    al,0xa5
  404118:	mov    edi,eax
  40411a:	xlat   BYTE PTR ds:[ebx]
  40411b:	xchg   ebx,eax
  40411c:	pop    ebx
  40411d:	sbb    cl,dl
  40411f:	imul   eax,DWORD PTR [eax-0x3ee9f1ec],0x7e
  404126:	shr    DWORD PTR [ecx+0x71],1
  404129:	loopne 0x404104
  40412b:	or     eax,0xbcf40005
  404130:	cmp    ah,ah
  404132:	sbb    BYTE PTR [edi-0x204c723f],0xdf
  404139:	pop    edx
  40413a:	sub    cl,ch
  40413c:	or     edx,esp
  40413e:	je     0x4041af
  404140:	leave  
  404141:	mov    cl,0x82
  404143:	sub    DWORD PTR [ecx+0x49c04257],ebx
  404149:	repz jb 0x40417c
  40414c:	pop    ss
  40414d:	test   al,0xf4
  40414f:	call   DWORD PTR [eax]
  404151:	aas    
  404152:	sub    ch,BYTE PTR [esi+0x5e]
  404155:	scas   al,BYTE PTR es:[edi]
  404156:	jae    0x40417a
  404158:	fwait
  404159:	add    ch,bh
  40415b:	ins    BYTE PTR es:[edi],dx
  40415c:	push   es
  40415d:	cmp    eax,0x411e5a8e
  404162:	fnstsw WORD PTR [esi]
  404164:	and    al,0x66
  404166:	adc    ch,BYTE PTR [esi+0x2a202bb0]
  40416c:	mov    BYTE PTR [edi-0xf],ah
  40416f:	xlat   BYTE PTR ds:[ebx]
  404170:	fisub  WORD PTR [ecx-0x65]
  404173:	push   ecx
  404174:	cmp    DWORD PTR [edx-0x33c1f3a3],edi
  40417a:	mov    al,ds:0xc3dffeb6
  40417f:	xchg   edi,eax
  404180:	or     al,0x16
  404182:	and    ch,al
  404184:	or     al,0x18
  404186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404187:	(bad)  
  404188:	arpl   WORD PTR [esi-0x68],bx
  40418b:	cwde   
  40418c:	push   esi
  40418d:	cmp    ch,BYTE PTR [edi-0x1e]
  404190:	rcr    BYTE PTR [esi+0x428fc163],1
  404196:	add    al,0x4c
  404198:	mov    BYTE PTR [ebp+ebx*1-0x4406a1a6],dl
  40419f:	mov    esi,0x793fe8f1
  4041a4:	js     0x40419f
  4041a6:	dec    edx
  4041a7:	sub    DWORD PTR [esi-0x2b],0x71
  4041ab:	ror    edi,1
  4041ad:	jo     0x404174
  4041af:	dec    edx
  4041b0:	xchg   edi,eax
  4041b1:	adc    edi,DWORD PTR [esi+0x6c]
  4041b4:	pop    edx
  4041b5:	loopne 0x4041d3
  4041b7:	hlt    
  4041b8:	(bad)  
  4041b9:	mov    edx,0x64244e43
  4041be:	mov    bl,BYTE PTR [edx+0x5adb043e]
  4041c4:	bound  eax,QWORD PTR [esp+eax*2+0x26]
  4041c8:	leave  
  4041c9:	pushf  
  4041ca:	fisttp QWORD PTR [eax-0x66]
  4041cd:	fistp  WORD PTR [edx+0x34]
  4041d0:	in     eax,dx
  4041d1:	mov    ss,WORD PTR [edi+esi*1-0x6]
  4041d5:	mov    dl,0x44
  4041d7:	aaa    
  4041d8:	push   0xfffffff5
  4041da:	cmp    eax,0x5f3aa9db
  4041df:	scas   eax,DWORD PTR es:[edi]
  4041e0:	sub    ebx,edx
  4041e2:	add    eax,0x4b9cadf5
  4041e7:	xchg   ebp,eax
  4041e8:	dec    eax
  4041e9:	cmp    eax,0x8d5fcee7
  4041ee:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f0:	dec    ebp
  4041f1:	xlat   BYTE PTR ds:[ebx]
  4041f2:	cmp    DWORD PTR [ebp+0x37],edx
  4041f5:	rcr    dl,1
  4041f7:	xchg   edi,eax
  4041f8:	sbb    DWORD PTR [edi],esp
  4041fa:	cs cdq 
  4041fc:	out    dx,al
  4041fd:	stc    
  4041fe:	enter  0x1eb4,0xbe
  404202:	jp     0x404187
  404204:	xchg   ebx,eax
  404205:	jo     0x40427a
  404207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404208:	into   
  404209:	rol    DWORD PTR [ecx+0x28bacec7],0xdf
  404210:	dec    ebx
  404211:	sub    BYTE PTR [edx-0x36],ch
  404214:	(bad)  
  404215:	stc    
  404216:	ss xor al,0xd7
  404219:	out    dx,eax
  40421a:	inc    edx
  40421b:	xor    esi,DWORD PTR [ecx-0x7a]
  40421e:	stos   DWORD PTR es:[edi],eax
  40421f:	xchg   DWORD PTR [ebp+0x69],eax
  404222:	(bad)  
  404224:	xchg   ecx,eax
  404225:	mov    dl,0xc0
  404227:	push   cs
  404228:	rcr    dh,0x6e
  40422b:	lea    esp,[esi+0x3b]
  40422e:	mov    DWORD PTR [esi],esi
  404230:	dec    ebx
  404231:	add    eax,0xbbb16c40
  404236:	jp     0x404234
  404238:	shl    BYTE PTR [eax+0x76],cl
  40423b:	jb     0x4041c9
  40423d:	jecxz  0x40424d
  40423f:	xchg   edi,eax
  404240:	sbb    al,0x16
  404242:	mov    ds:0x41e2a8e4,eax
  404247:	or     dl,ah
  404249:	jl     0x4041f6
  40424b:	retf   
  40424c:	fnstenv [edi-0x5fad7759]
  404252:	popaw  
  404254:	ins    BYTE PTR es:[edi],dx
  404255:	sub    BYTE PTR [eax+0x4c],ch
  404258:	repz and eax,0x73a18f58
  40425e:	cld    
  40425f:	icebp  
  404260:	xchg   BYTE PTR [esi-0x32],dh
  404263:	dec    ebp
  404264:	lea    edi,[esi-0x4c4642ab]
  40426a:	xor    dl,ch
  40426c:	mov    ds:0xa1730aad,al
  404271:	mov    ecx,0x577ecb7e
  404276:	cmp    eax,0x6d7c7fca
  40427b:	int3   
  40427c:	sub    al,0x3f
  40427e:	xlat   BYTE PTR ds:[ebx]
  40427f:	fwait
  404280:	ins    DWORD PTR es:[edi],dx
  404281:	xchg   ebx,eax
  404282:	sub    ebp,esp
  404284:	(bad)  [edx-0x684d0d62]
  40428a:	into   
  40428b:	push   cs
  40428c:	je     0x40425d
  40428e:	add    DWORD PTR [edi-0x5e9b3b8f],edi
  404294:	sbb    DWORD PTR [ebx-0x3a],esp
  404297:	push   edi
  404298:	mov    eax,ds:0x64b79335
  40429d:	xor    al,0xfc
  40429f:	stos   DWORD PTR es:[edi],eax
  4042a0:	fisub  DWORD PTR [eax-0x3c69fa36]
  4042a7:	std    
  4042a8:	or     esi,DWORD PTR [ecx+0x24]
  4042ab:	pusha  
  4042ac:	inc    ecx
  4042ad:	inc    edi
  4042ae:	aaa    
  4042af:	push   esp
  4042b0:	das    
  4042b1:	test   al,0x5a
  4042b3:	fnstcw WORD PTR [esi]
  4042b5:	arpl   WORD PTR [edi-0x48],si
  4042b8:	hlt    
  4042b9:	push   ebx
  4042ba:	sbb    DWORD PTR [ecx-0x16],esp
  4042bd:	cmp    BYTE PTR [ecx-0x1bf84d11],0x4f
  4042c4:	mov    ecx,0x9962f4bc
  4042c9:	(bad)  
  4042ca:	repz loope 0x4042b2
  4042cd:	mov    al,0x80
  4042cf:	sub    eax,0xcdd194e6
  4042d4:	adc    eax,DWORD PTR [ebp+0x5368dacb]
  4042da:	outs   dx,BYTE PTR ds:[esi]
  4042db:	jp     0x40430d
  4042dd:	dec    ebx
  4042de:	push   0x0
  4042e0:	imul   eax,DWORD PTR [ebp+0x4],0x55947489
  4042e7:	or     eax,DWORD PTR [ebx+0x3b]
  4042ea:	ficom  DWORD PTR es:[edi]
  4042ed:	(bad)  
  4042ee:	cli    
  4042ef:	push   0x34
  4042f1:	xor    al,0x6f
  4042f3:	mov    gs,ebx
  4042f5:	add    ebp,DWORD PTR [edx]
  4042f7:	jecxz  0x404369
  4042f9:	dec    esi
  4042fa:	retf   
  4042fb:	rol    DWORD PTR [esi],cl
  4042fd:	dec    ecx
  4042fe:	into   
  4042ff:	into   
  404300:	and    DWORD PTR [eax],esi
  404302:	int    0xe3
  404304:	pop    edi
  404305:	xchg   ebp,eax
  404306:	inc    ebp
  404307:	push   ecx
  404308:	xchg   edx,eax
  404309:	xor    al,0x58
  40430b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40430c:	inc    eax
  40430d:	xor    al,0x96
  40430f:	fnsave [esi]
  404311:	(bad)  
  404312:	out    0xcf,eax
  404314:	adc    bh,dl
  404316:	out    0x9e,al
  404318:	cmp    al,0xd6
  40431a:	pop    ecx
  40431b:	cmp    bl,BYTE PTR gs:[si-0x6816]
  404321:	sub    eax,edx
  404323:	into   
  404324:	adc    bl,BYTE PTR [ebx+0xca25c15]
  40432a:	cmp    esp,0xffffffd8
  40432d:	aaa    
  40432e:	add    DWORD PTR [edi+edi*4+0x38],ebx
  404332:	jp     0x404369
  404334:	mov    cs,WORD PTR [edi+0x3c]
  404337:	pop    ebp
  404338:	lods   eax,DWORD PTR ds:[esi]
  404339:	dec    edx
  40433a:	cmp    eax,0x68ce7483
  40433f:	les    esi,FWORD PTR [edi]
  404341:	xchg   ebp,eax
  404342:	xor    ecx,esp
  404344:	add    BYTE PTR [eax],dh
  404346:	pop    ecx
  404347:	mov    al,BYTE PTR [ecx]
  404349:	push   0xffffff92
  40434b:	shl    BYTE PTR [edx+0xef0f847],cl
  404351:	mov    edx,0x904862d5
  404356:	xor    esp,DWORD PTR [edi]
  404358:	sub    DWORD PTR [eax],esp
  40435a:	test   eax,0xae693bfd
  40435f:	add    DWORD PTR [edi+0x40],ecx
  404362:	mov    eax,ds:0x88c4e1b9
  404367:	and    eax,0x9dbc3d15
  40436c:	push   ds
  40436d:	fdivr  QWORD PTR [edi+edx*1]
  404370:	adc    BYTE PTR [edi],0xde
  404373:	xchg   BYTE PTR [ebx-0x8],bl
  404376:	jo     0x404357
  404378:	xchg   ecx,eax
  404379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40437a:	aaa    
  40437b:	call   0x35c8761
  404380:	jp     0x40439c
  404382:	mov    edi,DWORD PTR [ecx+esi*4]
  404385:	ins    BYTE PTR es:[edi],dx
  404386:	dec    ebp
  404387:	nop
  404388:	cli    
  404389:	adc    esp,DWORD PTR [ebx-0x6cef9d09]
  40438f:	fmul   st(3),st
  404391:	pop    esp
  404392:	xchg   esp,eax
  404393:	cmp    eax,0xedeebcfb
  404398:	xchg   ebp,eax
  404399:	cs inc ebp
  40439b:	push   esi
  40439c:	mov    eax,0x9714e5c9
  4043a1:	enter  0xb0a6,0x30
  4043a5:	jbe    0x404337
  4043a7:	jmp    0x862d:0x3f8d37ab
  4043ae:	sar    DWORD PTR [ebp-0x29c1befd],0x6e
  4043b5:	aas    
  4043b6:	push   cs
  4043b7:	and    BYTE PTR [eax+0x78ab559a],bl
  4043bd:	sbb    DWORD PTR [ebx+0x23],ecx
  4043c0:	(bad)  
  4043c2:	call   0x29f34852
  4043c7:	push   edx
  4043c8:	push   DWORD PTR [ecx+0x3c]
  4043cb:	dec    edx
  4043cc:	jecxz  0x4043b3
  4043ce:	fwait
  4043cf:	iret   
  4043d0:	xchg   esi,eax
  4043d1:	mov    cl,0xa9
  4043d3:	jbe    0x404403
  4043d5:	dec    ebx
  4043d6:	leave  
  4043d7:	js     0x4043ce
  4043d9:	aaa    
  4043da:	lea    esp,[eiz*2-0x1a7403c5]
  4043e1:	push   edi
  4043e2:	call   FWORD PTR [esi-0x2e784377]
  4043e8:	stos   DWORD PTR es:[edi],eax
  4043e9:	out    dx,eax
  4043ea:	cs dec esp
  4043ec:	fwait
  4043ed:	cli    
  4043ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043ef:	adc    esi,DWORD PTR [edx+0x575ed0e7]
  4043f5:	lods   eax,DWORD PTR ds:[esi]
  4043f6:	dec    ebx
  4043f7:	sub    ch,BYTE PTR [ecx]
  4043f9:	sbb    ah,BYTE PTR [edx-0x598fd8be]
  4043ff:	sub    eax,0xebec1693
  404404:	jge    0x4043f8
  404406:	mov    bh,0x40
  404408:	cmp    BYTE PTR [edi+0x28196560],bl
  40440e:	sar    BYTE PTR [edi],cl
  404410:	mov    ebp,0x3745695b
  404415:	jle    0x404419
  404417:	dec    dx
  404419:	fisub  DWORD PTR [eax+0x24]
  40441c:	sbb    al,0x33
  40441e:	popf   
  40441f:	jo     0x40443d
  404421:	ret    
  404422:	sub    BYTE PTR [ecx-0x24c7a04d],al
  404428:	and    DWORD PTR [ebp-0x73433486],eax
  40442e:	sbb    BYTE PTR [edx+0x35725e05],bh
  404434:	sbb    bl,0x35
  404437:	xor    edx,DWORD PTR [ebp-0x34]
  40443a:	add    al,0x8
  40443c:	cli    
  40443d:	rol    BYTE PTR [ebx-0x9db3b50],cl
  404443:	lods   eax,DWORD PTR ds:[esi]
  404444:	call   0xc027:0x68185d91
  40444b:	dec    edx
  40444c:	push   ebp
  40444d:	mov    WORD PTR [ebx],fs
  40444f:	ins    DWORD PTR es:[edi],dx
  404450:	repnz fistp QWORD PTR [ecx+0x1b]
  404454:	cs rcl ch,0x9b
  404458:	test   ebx,0xb76d3bd3
  40445e:	dec    edi
  40445f:	mov    ecx,0x14edefce
  404464:	neg    bl
  404466:	pop    ecx
  404467:	sub    DWORD PTR [edx-0x24d7f370],esi
  40446d:	adc    bl,BYTE PTR [ecx+0x33]
  404470:	nop
  404471:	jp     0x4044bf
  404473:	and    eax,0xd9cd7fa9
  404478:	jmp    0x4044f3
  40447a:	pop    esp
  40447b:	mov    bh,0xb1
  40447d:	cmp    BYTE PTR [edi+0x32],bh
  404480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404481:	shl    DWORD PTR [eax+0x56],0x7d
  404485:	add    ebp,DWORD PTR [edi+0x3a16465d]
  40448b:	adc    edx,DWORD PTR [ebp-0x69118ef3]
  404491:	xchg   BYTE PTR [eax+eax*1-0x41f8e721],al
  404498:	xlat   BYTE PTR ds:[ebx]
  404499:	es jns 0x40444a
  40449c:	cli    
  40449d:	fucom  st(4)
  40449f:	cmc    
  4044a0:	mov    ch,0x3d
  4044a2:	out    dx,eax
  4044a3:	inc    eax
  4044a4:	push   ss
  4044a5:	inc    esp
  4044a6:	push   ss
  4044a7:	loopne 0x40450a
  4044a9:	nop
  4044aa:	sub    BYTE PTR [edx-0x2ac364e4],dl
  4044b0:	repz push esi
  4044b2:	pushf  
  4044b3:	xchg   esp,eax
  4044b4:	fild   WORD PTR [eax]
  4044b6:	adc    DWORD PTR [edi+eiz*8+0x791acd28],eax
  4044bd:	in     al,0x2b
  4044bf:	or     eax,0x132b1cd9
  4044c4:	out    0x75,al
  4044c6:	out    0xd6,al
  4044c8:	dec    eax
  4044c9:	push   esi
  4044ca:	(bad)  
  4044cc:	shr    DWORD PTR [ecx+0x2b],0xf9
  4044d0:	arpl   WORD PTR [ebx],bp
  4044d2:	mov    bl,0x58
  4044d4:	stc    
  4044d5:	ret    0xe1e3
  4044d8:	mov    ecx,DWORD PTR [eax-0x3b9a9184]
  4044de:	(bad)  
  4044df:	stc    
  4044e0:	mov    cl,0x6e
  4044e2:	cli    
  4044e3:	cli    
  4044e4:	adc    dh,bh
  4044e6:	test   eax,0xb1c44654
  4044eb:	jnp    0x4044ed
  4044ed:	mov    ecx,0x69edb8
  4044f2:	cmp    ch,BYTE PTR [edi-0x1d4ef465]
  4044f8:	mov    dh,0xe2
  4044fa:	adc    edi,DWORD PTR [esp+eax*2-0x74]
  4044fe:	dec    edi
  4044ff:	loope  0x4044fc
  404501:	xchg   edi,eax
  404502:	fwait
  404503:	pop    edx
  404504:	pusha  
  404505:	loope  0x4044da
  404507:	mov    ecx,0x2202ab51
  40450c:	lods   al,BYTE PTR ds:[esi]
  40450d:	mov    WORD PTR [esi+edx*1],?
  404510:	out    dx,eax
  404511:	repz pop esi
  404513:	icebp  
  404514:	and    al,0xb6
  404516:	or     eax,0x7bb89b84
  40451b:	dec    ebx
  40451c:	adc    al,0x1d
  40451e:	or     cl,al
  404520:	loope  0x404572
  404522:	cmp    BYTE PTR [edi],al
  404524:	sub    ah,bl
  404526:	adc    ch,BYTE PTR [ebx+0x650f6a5c]
  40452c:	aam    0xb8
  40452e:	cmp    DWORD PTR ds:[ecx+eax*1],ecx
  404532:	fcmovu st,st(0)
  404534:	or     BYTE PTR [ebx-0x280ff1c9],bh
  40453a:	or     eax,0x8bbf03f9
  40453f:	repnz mov ds:0x3d256cf2,al
  404545:	int    0x2d
  404547:	mov    cl,cl
  404549:	push   esp
  40454a:	cdq    
  40454b:	sub    DWORD PTR [eax-0x1131af14],ecx
  404551:	sti    
  404552:	or     ch,al
  404554:	lahf   
  404555:	cli    
  404556:	sub    ebp,DWORD PTR [ebx-0x45ed2deb]
  40455c:	push   0xffffffbb
  40455e:	repnz sub al,0xa0
  404561:	mov    ebx,0xc337803d
  404566:	push   ss
  404567:	rol    ebx,1
  404569:	fidiv  DWORD PTR [eax]
  40456b:	in     eax,dx
  40456c:	mov    ds:0xd06f7b2,eax
  404571:	mov    DWORD PTR [ebp+0x4e],ebx
  404574:	int    0x90
  404576:	retf   0x4ec8
  404579:	mov    ds:0x1e50b611,al
  40457e:	sbb    BYTE PTR [ebx],dl
  404580:	daa    
  404581:	(bad)  
  404582:	pop    ds
  404583:	test   eax,0x841bbec
  404588:	pushw  ss
  40458a:	pop    edx
  40458b:	das    
  40458c:	pusha  
  40458d:	loop   0x4045bb
  40458f:	mov    ebx,0xf4ff714e
  404594:	retf   
  404595:	adc    edx,DWORD PTR [edi]
  404597:	repnz inc eax
  404599:	div    dl
  40459b:	repnz xor BYTE PTR [ebx-0x1],ch
  40459f:	add    al,0xb6
  4045a1:	pop    ebx
  4045a2:	xor    DWORD PTR [edx],edx
  4045a4:	call   0x8b739154
  4045a9:	je     0x4045a6
  4045ab:	out    0x8c,al
  4045ad:	jmp    0xffc3be32
  4045b2:	adc    al,BYTE PTR [ebx-0x71ff018c]
  4045b8:	xchg   esp,eax
  4045b9:	jp     0x40463a
  4045bb:	jb     0x404630
  4045bd:	retf   
  4045be:	add    ah,BYTE PTR [ecx+edi*4]
  4045c1:	sub    eax,0xef465dd1
  4045c6:	jno    0x404549
  4045c8:	loop   0x404618
  4045ca:	add    dl,bl
  4045cc:	inc    edx
  4045cd:	or     eax,0xf5acf7a9
  4045d2:	cmp    DWORD PTR [ebp+0x75],esp
  4045d5:	add    bl,BYTE PTR [ebp+0x21b9ead4]
  4045db:	lea    esi,[ecx-0x2b]
  4045de:	mov    dl,0x2f
  4045e0:	aas    
  4045e1:	outs   dx,DWORD PTR ds:[esi]
  4045e2:	inc    esp
  4045e3:	add    DWORD PTR [edx+0x40],esi
  4045e6:	pop    edi
  4045e7:	ja     0x4045b6
  4045e9:	xor    BYTE PTR [edx-0x23],ah
  4045ec:	es dec eax
  4045ee:	add    ecx,DWORD PTR [edx]
  4045f0:	mov    BYTE PTR [eax+0x76],0x6c
  4045f4:	sub    ebp,esp
  4045f6:	addr16 inc esi
  4045f8:	xchg   ebp,eax
  4045f9:	lea    esp,[ebx+0x57]
  4045fc:	(bad)  
  4045fd:	sbb    DWORD PTR [edx],ecx
  4045ff:	cli    
  404600:	xor    BYTE PTR ds:0xa114f7a4,al
  404606:	sub    BYTE PTR [edx],dl
  404608:	and    eax,0x425b77ff
  40460d:	and    BYTE PTR [edi+0x271fd8c3],0xd1
  404614:	sbb    bh,bl
  404616:	sar    DWORD PTR [edi],cl
  404618:	dec    ebp
  404619:	sbb    al,0x75
  40461b:	jmp    0x5986:0xa4496fe9
  404622:	mov    ch,0x1a
  404624:	cld    
  404625:	(bad)  
  404626:	xchg   edx,eax
  404627:	test   eax,0xacbd258c
  40462c:	push   edi
  40462d:	test   dh,ah
  40462f:	push   esp
  404630:	push   ss
  404631:	adc    edx,DWORD PTR [edi+0x7899f8a3]
  404637:	xlat   BYTE PTR ds:[ebx]
  404638:	pop    edx
  404639:	inc    ecx
  40463a:	pop    ds
  40463b:	iret   
  40463c:	and    al,0xa1
  40463e:	mov    ds:0x1ba8b132,al
  404643:	(bad)  
  404644:	cmp    eax,0x934356a0
  404649:	or     BYTE PTR [ebp-0x26e7ec06],dl
  40464f:	into   
  404650:	je     0x404697
  404652:	ss aam 0x8a
  404655:	adc    edx,ebx
  404657:	mov    esi,DWORD PTR [edx-0x126d889]
  40465d:	(bad)  
  40465e:	stos   BYTE PTR es:[edi],al
  40465f:	jp     0x4046b5
  404661:	inc    ebx
  404662:	inc    edx
  404663:	mov    al,ds:0x39698aea
  404668:	sub    BYTE PTR [edx-0x1c],dh
  40466b:	pop    ebx
  40466c:	fmul   st,st(7)
  40466e:	and    ecx,ebx
  404670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404671:	or     esi,DWORD PTR [ebx-0x3bee6260]
  404677:	push   edi
  404678:	xchg   edi,eax
  404679:	mov    al,ds:0xa53169f9
  40467e:	mov    ch,0x25
  404680:	(bad)  
  404682:	add    al,ah
  404684:	ins    DWORD PTR es:[edi],dx
  404685:	sub    BYTE PTR [esi],0xdc
  404688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404689:	sahf   
  40468a:	sahf   
  40468b:	ret    0x6a90
  40468e:	cmp    DWORD PTR [ebx+0x5d],edx
  404691:	mov    esp,0x4948ae26
  404696:	popa   
  404697:	cdq    
  404698:	repz dec ecx
  40469a:	add    ebx,DWORD PTR [esi-0x1c]
  40469d:	ins    BYTE PTR es:[edi],dx
  40469e:	dec    edx
  40469f:	into   
  4046a0:	jmp    0x404629
  4046a2:	in     eax,0x87
  4046a4:	std    
  4046a5:	stos   BYTE PTR es:[edi],al
  4046a6:	fwait
  4046a7:	in     al,dx
  4046a8:	xchg   esi,eax
  4046a9:	cmp    eax,0x897d01d3
  4046ae:	dec    edx
  4046af:	js     0x4046fa
  4046b1:	xor    ah,cl
  4046b3:	rcl    esi,1
  4046b5:	int3   
  4046b6:	sbb    bl,BYTE PTR [edx+0x71]
  4046b9:	shl    DWORD PTR [edx-0x2b],0xfb
  4046bd:	push   ebp
  4046be:	or     DWORD PTR [ecx+0x72301c11],edi
  4046c4:	jge    0x40470c
  4046c6:	es out 0x6d,al
  4046c9:	dec    eax
  4046ca:	sbb    dh,ah
  4046cc:	inc    esi
  4046cd:	xchg   edx,eax
  4046ce:	int3   
  4046cf:	(bad)
  4046d4:	cmp    al,0x2c
  4046d6:	jle    0x4046b9
  4046d8:	(bad)  
  4046d9:	fidivr WORD PTR [edi+0x21]
  4046dc:	adc    edi,DWORD PTR [ecx]
  4046de:	add    cl,BYTE PTR [ebx+0x4a]
  4046e1:	add    eax,0xb1657f22
  4046e6:	(bad)  
  4046e7:	pop    ebp
  4046e8:	pop    eax
  4046e9:	gs in  al,0x89
  4046ec:	jbe    0x4046eb
  4046ee:	add    eax,0xb62b7f7b
  4046f3:	int3   
  4046f4:	mov    ebp,0xf0233003
  4046f9:	push   edx
  4046fa:	mov    esp,DWORD PTR [edi]
  4046fc:	pop    ss
  4046fd:	cld    
  4046fe:	cmp    DWORD PTR [ebp+0x24e902d0],ebx
  404704:	pop    es
  404705:	xchg   edi,eax
  404706:	loopne 0x40473f
  404708:	xchg   ecx,eax
  404709:	and    al,0xca
  40470b:	(bad)  
  40470c:	lods   eax,DWORD PTR ds:[esi]
  40470d:	fisub  WORD PTR [edx+esi*4]
  404710:	xor    esi,DWORD PTR [esi]
  404712:	jae    0x40477a
  404714:	dec    ebx
  404715:	mov    dh,0x3f
  404717:	mov    esp,0x6077281f
  40471c:	mov    DWORD PTR ds:0xc1c19024,ecx
  404722:	jg     0x404793
  404724:	adc    BYTE PTR [esi+0x11009c18],ch
  40472a:	ja     0x4046f8
  40472c:	push   esp
  40472d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40472e:	add    bh,BYTE PTR [edx]
  404730:	ret    
  404731:	fs push eax
  404733:	xor    edi,DWORD PTR [ebx+eiz*1+0x40]
  404737:	jno    0x404709
  404739:	(bad)  
  40473a:	sbb    al,0xfc
  40473c:	test   al,0xb7
  40473e:	jo     0x404705
  404740:	push   edi
  404741:	sti    
  404742:	jge    0x4046ee
  404744:	mov    eax,ds:0x31010395
  404749:	jb     0x404723
  40474b:	mov    edi,0xea06bb64
  404750:	aas    
  404751:	shl    BYTE PTR [edx],cl
  404753:	dec    edx
  404754:	jno    0x404730
  404756:	push   0xb446083c
  40475b:	and    DWORD PTR [esi-0x40],eax
  40475e:	lods   eax,DWORD PTR ds:[esi]
  40475f:	dec    esi
  404760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404761:	rcl    dh,1
  404763:	test   DWORD PTR [ebx+0x22],edi
  404766:	and    ebx,0xffffffcd
  404769:	ficomp WORD PTR [esi+0x6f]
  40476c:	fs pop edi
  40476e:	sbb    edx,ebx
  404770:	icebp  
  404771:	adc    esp,DWORD PTR [edi]
  404773:	test   eax,0x1b4e92f8
  404778:	mov    ecx,0x3e2b2043
  40477d:	je     0x404793
  40477f:	(bad)  
  404780:	pop    edi
  404781:	adc    eax,0x93b9b18e
  404786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404787:	cld    
  404788:	pop    esi
  404789:	fwait
  40478a:	inc    ebx
  40478b:	retf   
  40478c:	push   0xd3c0b974
  404791:	sub    eax,0x5fed7b70
  404796:	or     DWORD PTR ds:0xb4624584,0x57fa61b2
  4047a0:	jno    0x40472b
  4047a2:	out    0x38,al
  4047a4:	xor    DWORD PTR ss:[edi-0x5c],0x8a5bec09
  4047ac:	inc    esp
  4047ad:	sbb    ebp,DWORD PTR es:[edi-0x7]
  4047b1:	dec    ebp
  4047b2:	inc    edi
  4047b3:	jno    0x404768
  4047b5:	jg     0x40478d
  4047b7:	xchg   edi,eax
  4047b8:	xchg   esp,eax
  4047b9:	xchg   ecx,eax
  4047ba:	add    ch,BYTE PTR [ecx+eiz*1]
  4047bd:	jno    0x4047e0
  4047bf:	in     al,dx
  4047c0:	call   0x61a9:0xc996a00d
  4047c7:	jb     0x404779
  4047c9:	xor    eax,0xfe36896c
  4047ce:	pop    ecx
  4047cf:	clc    
  4047d0:	xor    esi,DWORD PTR [edx+0xc156f03]
  4047d6:	pop    esi
  4047d7:	add    BYTE PTR ds:0x76e751ed,ch
  4047dd:	ja     0x404799
  4047df:	in     al,0x22
  4047e1:	retf   
  4047e2:	adc    DWORD PTR [ecx-0x74d2684b],esp
  4047e8:	test   al,0x4c
  4047ea:	(bad)  cs:[edi-0x54]
  4047ee:	data16 jae 0x404850
  4047f1:	in     al,dx
  4047f2:	pop    eax
  4047f4:	add    ebx,0xffffffca
  4047f7:	jle    0x40485c
  4047f9:	mov    esi,0xf9af0011
  4047fe:	lods   al,BYTE PTR ds:[esi]
  4047ff:	rcr    BYTE PTR [ecx+0x61d51e4f],0x4b
  404806:	in     eax,dx
  404807:	and    al,0x6c
  404809:	ins    DWORD PTR es:[edi],dx
  40480a:	popa   
  40480b:	das    
  40480c:	mov    ds:0xa26a2691,al
  404811:	dec    edx
  404812:	cmp    eax,0xdbac7d5a
  404817:	xor    eax,0x77c63e4b
  40481c:	out    0x8e,eax
  40481e:	add    al,0x7c
  404820:	dec    BYTE PTR [edi]
  404822:	fs clc 
  404824:	mov    ss,WORD PTR [esi+0x4d04611e]
  40482a:	jp     0x4047ba
  40482c:	cmp    cl,bl
  40482e:	push   esp
  40482f:	in     eax,0x98
  404831:	dec    ebp
  404832:	into   
  404833:	scas   al,BYTE PTR es:[edi]
  404834:	(bad)  
  404836:	push   ecx
  404837:	nop
  404838:	jb     0x4047d4
  40483a:	stos   BYTE PTR es:[edi],al
  40483b:	mov    al,0x97
  40483d:	(bad)  
  40483e:	jle    0x404888
  404840:	div    BYTE PTR [edi+0x1d724066]
  404846:	or     eax,0x5a465861
  40484b:	fidiv  WORD PTR [ecx]
  40484d:	sbb    ebx,DWORD PTR [ebx]
  40484f:	inc    esp
  404850:	mov    ebp,DWORD PTR [ebx-0x8fb6726]
  404856:	outs   dx,BYTE PTR ds:[esi]
  404857:	jecxz  0x40484c
  404859:	in     eax,0xcd
  40485b:	jns    0x404837
  40485d:	add    DWORD PTR [edi],esp
  40485f:	add    al,0x9
  404861:	sub    BYTE PTR [esi-0x118652b],0x36
  404868:	pop    edi
  404869:	(bad)  
  40486a:	lock mov ah,0xc3
  40486d:	scas   al,BYTE PTR es:[edi]
  40486e:	mul    DWORD PTR [edx+0x59a5dbd4]
  404874:	inc    ecx
  404875:	xchg   edx,eax
  404876:	mov    bl,0xb7
  404878:	test   eax,0xf9da0fee
  40487d:	xchg   edi,eax
  40487e:	cmc    
  40487f:	fbstp  TBYTE PTR [esi]
  404881:	push   esp
  404882:	out    dx,eax
  404883:	jo     0x4048fd
  404885:	aas    
  404886:	ret    
  404887:	std    
  404888:	js     0x404827
  40488a:	sbb    eax,0xa5513651
  40488f:	lods   al,BYTE PTR ds:[esi]
  404890:	arpl   WORD PTR [esp+eax*8],cx
  404893:	clc    
  404894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404895:	nop
  404896:	mov    bh,bh
  404898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404899:	adc    bh,cl
  40489b:	jecxz  0x4048f2
  40489d:	retf   
  40489e:	(bad)  
  40489f:	cmp    al,0x9e
  4048a1:	test   eax,0x97f39410
  4048a6:	pop    ecx
  4048a7:	and    dh,al
  4048a9:	mov    bl,0x2d
  4048ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048ac:	cdq    
  4048ad:	mov    cl,0x3b
  4048af:	and    dl,BYTE PTR [edx-0x779df865]
  4048b5:	ins    BYTE PTR es:[edi],dx
  4048b6:	shr    DWORD PTR es:0xd850daf0,1
  4048bd:	lds    esi,FWORD PTR [edi]
  4048bf:	das    
  4048c0:	lock ins DWORD PTR es:[edi],dx
  4048c2:	iret   
  4048c3:	push   0xb52ccaa7
  4048c8:	xchg   ebp,eax
  4048c9:	das    
  4048ca:	repz jo 0x404869
  4048cd:	fild   WORD PTR [ebp+0x52ec86b5]
  4048d3:	lock pop ds
  4048d5:	xor    esp,DWORD PTR [esi+0x42]
  4048d8:	ss mov ebx,DWORD PTR ds:[ebp+0x14b1ed02]
  4048e0:	xor    ebx,eax
  4048e2:	mov    esi,0x2f6e06f2
  4048e7:	add    BYTE PTR [esi+0x4f],dl
  4048ea:	push   cs
  4048eb:	sub    ah,BYTE PTR [ebp-0x18]
  4048ee:	sti    
  4048ef:	add    ebx,DWORD PTR [edi-0x29]
  4048f2:	inc    edi
  4048f3:	in     eax,0x70
  4048f5:	xlat   BYTE PTR ds:[ebx]
  4048f6:	dec    ebp
  4048f7:	inc    BYTE PTR [eax]
  4048f9:	mov    esi,0xf7f3b17a
  4048fe:	xor    eax,0x42bb0bea
  404903:	fld    QWORD PTR [edi]
  404905:	cmp    BYTE PTR [ecx],cl
  404907:	loop   0x404933
  404909:	arpl   ax,ax
  40490b:	int    0x9a
  40490d:	jle    0x40494c
  40490f:	jne    0x4048f6
  404911:	push   ebp
  404912:	(bad)  
  404913:	pushf  
  404914:	imul   ebp,esi,0x26
  404917:	push   es
  404918:	mov    cl,0x12
  40491a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40491c:	inc    edi
  40491d:	(bad)  
  40491e:	sti    
  40491f:	int    0xbc
  404921:	dec    esp
  404922:	out    0x93,al
  404924:	mov    bh,0xc0
  404926:	inc    ecx
  404927:	ss enter 0xf4f8,0x2f
  40492c:	retf   
  40492d:	cld    
  40492e:	mov    al,ds:0xd9a0a778
  404934:	cmp    eax,0x60733082
  404939:	test   DWORD PTR [ecx-0x4d6d2d85],ebp
  40493f:	push   es
  404940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404941:	jbe    0x404989
  404943:	add    ah,BYTE PTR [ecx+0x58]
  404946:	in     al,0xa
  404948:	lods   al,BYTE PTR ds:[esi]
  404949:	xor    dh,BYTE PTR [esi-0x12a43ad6]
  40494f:	cld    
  404950:	inc    esp
  404951:	std    
  404952:	add    edx,DWORD PTR [ecx+0x60]
  404955:	mov    eax,ds:0x606b141d
  40495a:	adc    al,0x72
  40495c:	fcom   DWORD PTR [ecx+0x394535ef]
  404962:	xlat   BYTE PTR ds:[ebx]
  404963:	stos   BYTE PTR es:[edi],al
  404964:	push   0xffffff84
  404966:	leave  
  404967:	pop    esi
  404968:	mov    edi,0xffed7f9c
  40496d:	hlt    
  40496e:	loop   0x4049ef
  404970:	and    al,0x49
  404972:	rcr    DWORD PTR [ebx],0x2b
  404975:	sbb    eax,0xd54109ba
  40497a:	pushf  
  40497b:	cmp    ah,al
  40497d:	sub    edi,DWORD PTR [ebp-0x5a]
  404980:	adc    ebp,DWORD PTR [ecx-0x5baf2c28]
  404986:	xchg   edi,eax
  404987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404988:	je     0x404965
  40498a:	call   0xf714:0x3b6e4da6
  404991:	ret    0x8042
  404994:	stos   BYTE PTR es:[edi],al
  404995:	call   0xdebfc8cf
  40499a:	mov    bl,0x4
  40499c:	sub    al,0xf7
  40499e:	test   DWORD PTR [eax+0x16],esp
  4049a1:	mov    ch,0x1
  4049a3:	mov    ds:0x15c56434,eax
  4049a8:	scas   al,BYTE PTR es:[edi]
  4049a9:	scas   al,BYTE PTR es:[edi]
  4049aa:	jmp    0x3db01c11
  4049af:	xchg   esi,eax
  4049b0:	push   ecx
  4049b1:	dec    edi
  4049b2:	push   esi
  4049b3:	inc    ebx
  4049b4:	shl    DWORD PTR [esi],1
  4049b6:	rcr    BYTE PTR [ebx+0x62],1
  4049b9:	(bad)  
  4049bb:	cmp    eax,0x602bc75c
  4049c0:	sub    cl,BYTE PTR [esi+0x24]
  4049c3:	mov    DWORD PTR [ebp+0x44],ecx
  4049c6:	cli    
  4049c7:	cmp    BYTE PTR [edx-0x201a2bdd],dl
  4049cd:	ins    BYTE PTR es:[edi],dx
  4049ce:	xchg   edi,eax
  4049cf:	lock sub eax,0x4714dea0
  4049d5:	mov    ch,cl
  4049d7:	jb     0x404a13
  4049d9:	nop
  4049da:	scas   al,BYTE PTR es:[edi]
  4049db:	test   DWORD PTR [eax-0x197ce9d3],eax
  4049e1:	mov    ds:0xdfca93d6,al
  4049e6:	pop    esi
  4049e7:	xlat   BYTE PTR ds:[ebx]
  4049e8:	gs ret 0x1ce4
  4049ec:	add    al,0x6f
  4049ee:	jno    0x404a38
  4049f0:	into   
  4049f1:	add    eax,esp
  4049f3:	cmp    al,0xe4
  4049f5:	sub    eax,0xdc242d6a
  4049fa:	mov    ds:0xfc25259c,al
  4049ff:	je     0x404a40
  404a01:	mov    bh,BYTE PTR [ebp+0x5c331024]
  404a07:	sbb    esi,DWORD PTR [edx]
  404a09:	mov    bl,0x5f
  404a0b:	cld    
  404a0c:	sub    cl,dl
  404a0e:	lea    ebp,[edi]
  404a10:	sbb    dh,BYTE PTR [ecx+ecx*2]
  404a13:	and    eax,0x88ba2cd
  404a18:	retf   0x7642
  404a1b:	xor    BYTE PTR [edx],0xc8
  404a1e:	mov    edx,0x994c5e74
  404a23:	sbb    al,0x30
  404a25:	and    BYTE PTR [ebx],ch
  404a27:	sti    
  404a28:	mov    edx,0x5407f571
  404a2d:	jb     0x404a1b
  404a2f:	retf   0x754f
  404a32:	adc    bh,BYTE PTR ds:0xa89e9e40
  404a38:	mov    dl,0x5c
  404a3a:	ror    BYTE PTR [esi-0xd],1
  404a3d:	pop    esp
  404a3e:	cli    
  404a3f:	pop    edx
  404a40:	add    DWORD PTR [eax],0x2e
  404a43:	inc    ebx
  404a44:	call   0x496b6a8a
  404a49:	shr    dl,1
  404a4b:	add    al,0x49
  404a4d:	nop
  404a4e:	cmp    esi,ecx
  404a50:	data16 jge 0x4049db
  404a53:	push   cs
  404a54:	mov    al,ds:0xeedb8f63
  404a59:	int    0x90
  404a5b:	repnz retf 0xbbc1
  404a5f:	dec    DWORD PTR ds:0xe8420100
  404a65:	mov    ss,WORD PTR [ebx+0x3]
  404a68:	xor    BYTE PTR ds:0xa1610aed,al
  404a6e:	inc    esi
  404a6f:	xor    dh,BYTE PTR [ebp+0x1dac806d]
  404a75:	dec    edi
  404a76:	sub    al,0x37
  404a78:	and    ebp,edx
  404a7a:	xchg   edx,eax
  404a7b:	fwait
  404a7c:	lds    edx,FWORD PTR [ebx+0x66]
  404a7f:	repnz and BYTE PTR [ecx+0x9aa926c],al
  404a86:	mov    BYTE PTR [ebx],cl
  404a88:	cwde   
  404a89:	mov    bh,0x1
  404a8b:	mov    edx,0x38d775ce
  404a90:	stos   BYTE PTR es:[edi],al
  404a91:	mov    bh,0xc5
  404a93:	dec    edi
  404a94:	mov    eax,ds:0x8c85cbc8
  404a99:	in     al,dx
  404a9a:	cld    
  404a9b:	add    bh,al
  404a9d:	ret    
  404a9e:	xlat   BYTE PTR ds:[ebx]
  404a9f:	xchg   edx,eax
  404aa0:	lods   al,BYTE PTR ds:[esi]
  404aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aa2:	leave  
  404aa3:	sti    
  404aa4:	pop    es
  404aa5:	mov    bh,0x75
  404aa7:	out    dx,eax
  404aa8:	(bad)  
  404aa9:	ins    DWORD PTR es:[edi],dx
  404aaa:	dec    edi
  404aab:	jp     0x404ab9
  404aad:	mov    ebp,ecx
  404aaf:	sub    BYTE PTR [edx],cl
  404ab1:	loop   0x404aad
  404ab3:	push   cs
  404ab4:	in     al,0x9
  404ab6:	mov    edx,0xca3664d2
  404abb:	ret    0x44d4
  404abe:	fldenv [edx+0x7e]
  404ac1:	and    ebx,esi
  404ac3:	push   es
  404ac4:	call   0x9d7b:0xce98b05
  404acb:	sar    DWORD PTR [ebx+ebp*1+0x60],cl
  404acf:	push   ecx
  404ad0:	or     cl,cl
  404ad2:	jl     0x404b3a
  404ad4:	xor    cl,0xd8
  404ad7:	sbb    esi,esp
  404ad9:	and    eax,0x7bbb966f
  404ade:	dec    ecx
  404adf:	and    BYTE PTR ds:0xd9fd4cb1,bl
  404ae5:	jle    0x404a91
  404ae7:	push   ds
  404ae8:	dec    ebp
  404ae9:	adc    al,0x3d
  404aeb:	mov    ah,0x12
  404aed:	dec    esi
  404aee:	pop    esi
  404aef:	test   BYTE PTR [edx],cl
  404af1:	call   0x66f7:0xa1615e32
  404af8:	push   edx
  404af9:	fnstenv [eax]
  404afb:	inc    eax
  404afc:	jne    0x404ac7
  404afe:	fsubrp st(5),st
  404b00:	pop    esp
  404b01:	mov    ebx,0x1748b2c3
  404b06:	scas   eax,DWORD PTR es:[edi]
  404b07:	pop    eax
  404b08:	int3   
  404b09:	pop    esi
  404b0a:	inc    eax
  404b0b:	pop    ebp
  404b0c:	mov    ds:0x12d8cb99,eax
  404b11:	ret    
  404b12:	nop
  404b13:	inc    edx
  404b14:	push   edi
  404b15:	add    ch,cl
  404b17:	mov    ds:0x793c443b,al
  404b1c:	imul   edi,DWORD PTR [ebx-0x21],0x57
  404b20:	jns    0x404b6a
  404b22:	cmp    cl,dl
  404b24:	das    
  404b25:	les    ecx,FWORD PTR [esi+edx*4-0x3adced8f]
  404b2c:	xchg   ecx,esp
  404b2e:	and    ebp,ecx
  404b30:	inc    edi
  404b31:	push   es
  404b32:	ins    BYTE PTR es:[edi],dx
  404b33:	and    esi,DWORD PTR [eax]
  404b35:	add    BYTE PTR [eax+ebp*2+0x36],ah
  404b39:	adc    cl,ah
  404b3b:	adc    al,0x2b
  404b3d:	jnp    0x404b2e
  404b3f:	data16 arpl WORD PTR [eax+0x49],ax
  404b43:	loop   0x404acb
  404b45:	or     dl,BYTE PTR [esi+esi*1+0x6b065f41]
  404b4c:	mov    ecx,0xde5c7a3
  404b51:	(bad)  [ebp-0x7d]
  404b54:	lods   al,BYTE PTR ds:[esi]
  404b55:	lock inc ebx
  404b57:	retf   
  404b58:	fcomp  QWORD PTR [ecx-0x2f9c00c4]
  404b5e:	pop    edx
  404b5f:	inc    edi
  404b60:	call   0x1ce1bb2
  404b65:	cmp    BYTE PTR [esi],cl
  404b67:	cmp    al,ch
  404b69:	pop    es
  404b6a:	lahf   
  404b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b6c:	test   BYTE PTR [edi],dl
  404b6e:	jecxz  0x404bea
  404b70:	shl    BYTE PTR [esi],0x2d
  404b73:	stos   BYTE PTR es:[edi],al
  404b74:	sub    eax,0xffffffbe
  404b77:	jge    0x404aff
  404b79:	push   esi
  404b7a:	rol    ah,0xcd
  404b7d:	inc    esp
  404b7e:	mov    edx,0xb5ee5004
  404b83:	rol    dh,cl
  404b85:	mov    bl,0x8d
  404b87:	(bad)  
  404b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b8a:	adc    BYTE PTR [ebp+0x7aa0bcac],bl
  404b90:	aas    
  404b91:	out    dx,al
  404b92:	inc    edx
  404b93:	cdq    
  404b94:	push   ebp
  404b95:	cmp    eax,0x3715b494
  404b9a:	stc    
  404b9b:	in     eax,dx
  404b9c:	out    dx,eax
  404b9d:	sbb    DWORD PTR [esi-0x34],ecx
  404ba0:	(bad)  
  404ba1:	jnp    0x404bc4
  404ba3:	ficom  DWORD PTR [edx-0x4783f5ad]
  404ba9:	std    
  404baa:	push   ebp
  404bab:	mov    dl,0x2f
  404bad:	in     al,0x62
  404baf:	pop    esp
  404bb0:	imul   esi,DWORD PTR [ecx+0xfed2ee6],0xffffffd9
  404bb7:	out    0x49,eax
  404bb9:	mov    ds:0x8c5e9e45,eax
  404bbe:	adc    BYTE PTR [esi-0x57],bh
  404bc1:	pop    edx
  404bc2:	push   ecx
  404bc3:	xor    esi,esi
  404bc5:	repz pushf 
  404bc7:	cli    
  404bc8:	cmp    eax,0xac108e93
  404bcd:	mov    al,ds:0x15e14a58
  404bd2:	popf   
  404bd3:	pop    ds
  404bd4:	in     al,0x1d
  404bd6:	pop    esp
  404bd7:	dec    ebx
  404bd8:	dec    eax
  404bd9:	add    DWORD PTR [ebp-0x1c857b69],ecx
  404bdf:	je     0x404c2f
  404be1:	pop    ebp
  404be2:	test   ebp,esp
  404be4:	cmp    DWORD PTR [edi-0x1a4d421e],ebx
  404bea:	dec    edi
  404beb:	mov    BYTE PTR [eax],0x66
  404bee:	xor    esi,DWORD PTR [ebx]
  404bf0:	add    ecx,ecx
  404bf2:	sub    BYTE PTR [esi+0x1d465386],ah
  404bf8:	stos   BYTE PTR es:[edi],al
  404bf9:	test   eax,0xe22ae0df
  404bfe:	sbb    DWORD PTR [esi+0xff16df0],esp
  404c04:	cwde   
  404c05:	retf   
  404c06:	push   ebp
  404c07:	mov    bl,BYTE PTR [edx]
  404c09:	jg     0x404c6b
  404c0b:	stc    
  404c0c:	mov    edx,0x2c834e8a
  404c11:	sbb    eax,0xd6b1b9d9
  404c16:	(bad)  
  404c17:	int    0x99
  404c19:	mov    cl,0x2f
  404c1b:	adc    esp,DWORD PTR [bx+0x2b]
  404c1f:	cmp    bl,bh
  404c21:	sbb    DWORD PTR [edi+0x5218d1f0],esi
  404c27:	and    DWORD PTR [eax+0x5e899bb0],ecx
  404c2d:	mov    ebp,0x6d2c8b99
  404c32:	push   cs
  404c33:	jle    0x404c31
  404c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c36:	and    edi,eax
  404c38:	cld    
  404c39:	pop    esi
  404c3a:	push   esp
  404c3b:	mov    ah,bl
  404c3d:	scas   eax,DWORD PTR es:[edi]
  404c3e:	pop    edx
  404c3f:	retf   
  404c40:	imul   edi,DWORD PTR [eax],0x43
  404c43:	stc    
  404c44:	add    BYTE PTR [edi],bl
  404c46:	fidivr DWORD PTR [ebx+0x55]
  404c49:	(bad)  
  404c4b:	call   0x133b:0x6c29658c
  404c52:	and    al,BYTE PTR [esi-0x81e2fa2]
  404c58:	test   BYTE PTR [ecx+ebp*4+0x73fa67af],0x11
  404c60:	and    edi,ebx
  404c62:	jl     0x404c17
  404c64:	push   0xffffffa8
  404c66:	nop
  404c67:	mov    ah,dh
  404c69:	outs   dx,DWORD PTR ds:[esi]
  404c6a:	retf   0xf0d1
  404c6d:	cmp    eax,0x64fca44
  404c72:	idiv   BYTE PTR [ebx]
  404c74:	and    DWORD PTR [bx],eax
  404c77:	das    
  404c78:	mov    BYTE PTR [edx+eax*1],ch
  404c7b:	xlat   BYTE PTR ds:[ebx]
  404c7c:	test   eax,0x15d0f173
  404c81:	sub    eax,0x30986021
  404c86:	mov    dh,0x4c
  404c88:	inc    ecx
  404c89:	sbb    al,0x1e
  404c8b:	mov    al,0xf8
  404c8d:	sub    ch,BYTE PTR [bx+di+0x30]
  404c91:	cmp    DWORD PTR [edx-0x97ae4d8],eax
  404c97:	push   0x4daa1326
  404c9c:	mov    dl,0xcb
  404c9e:	jb     0x404cba
  404ca0:	cmp    cl,cl
  404ca2:	repz in eax,0x1d
  404ca5:	test   BYTE PTR [edx+edi*8-0x698412de],bl
  404cac:	push   0x55
  404cae:	mov    ebx,0xd326a53d
  404cb3:	push   ecx
  404cb4:	je     0x404cf6
  404cb6:	(bad)  
  404cb7:	jns    0x404d1b
  404cb9:	sbb    BYTE PTR ds:0xd59e4ba0,al
  404cbf:	xor    ecx,ebx
  404cc1:	mov    eax,0x3f94bf40
  404cc6:	mov    ebx,0x1211585
  404ccb:	dec    ebx
  404ccc:	fcomp  QWORD PTR ds:0x98f1e01d
  404cd2:	mov    BYTE PTR [edi+0x62],bl
  404cd5:	and    DWORD PTR [ebp+0x19],0xfffffff4
  404cd9:	std    
  404cda:	mov    esp,0x9fcc52e5
  404cdf:	mov    WORD PTR [eax+esi*2+0x5b9cd2cd],gs
  404ce6:	stos   BYTE PTR es:[edi],al
  404ce7:	mov    WORD PTR [ebx+edx*8-0x19],?
  404ceb:	rcr    DWORD PTR [edx],1
  404ced:	repz mov ebp,fs
  404cf0:	in     al,0x74
  404cf2:	aaa    
  404cf3:	and    BYTE PTR [ebp+eiz*1-0x61],cl
  404cf7:	sahf   
  404cf8:	push   esi
  404cf9:	sbb    BYTE PTR [edi-0x481046fa],ch
  404cff:	aas    
  404d00:	cmp    esp,DWORD PTR [eax-0x308a2cca]
  404d06:	xor    DWORD PTR [edx],ebp
  404d08:	movntps XMMWORD PTR [ecx-0x2f5cb6e1],xmm3
  404d0f:	in     eax,dx
  404d10:	ret    0xbd92
  404d13:	or     esi,ebp
  404d15:	inc    ecx
  404d16:	sbb    al,0xe1
  404d18:	outs   dx,DWORD PTR ds:[esi]
  404d19:	jnp    0x404d6a
  404d1b:	and    bh,BYTE PTR [ebp-0x6acf5de2]
  404d21:	sbb    dh,BYTE PTR ds:0x8a289294
  404d27:	lahf   
  404d28:	in     al,0x55
  404d2a:	cs (bad) 
  404d2c:	sub    edx,ebp
  404d2e:	aad    0xd4
  404d30:	add    edi,DWORD PTR cs:[edi-0xb]
  404d34:	dec    ecx
  404d35:	(bad)  
  404d37:	xor    BYTE PTR [ecx],bl
  404d39:	out    0x23,eax
  404d3b:	jo     0x404d43
  404d3d:	add    eax,0xb544ffa5
  404d42:	mov    esi,0x8862166
  404d47:	mul    BYTE PTR [eax-0x45]
  404d4a:	xchg   edx,eax
  404d4b:	test   al,cl
  404d4d:	scas   eax,DWORD PTR es:[edi]
  404d4e:	mov    WORD PTR [ebx],gs
  404d50:	ins    DWORD PTR es:[edi],dx
  404d51:	call   0x34:0x2ac76ab1
  404d58:	adc    ecx,DWORD PTR [edi-0x1a089286]
  404d5e:	icebp  
  404d5f:	mov    eax,0xcef17bde
  404d64:	jb     0x404d8b
  404d66:	mov    ah,0x3
  404d68:	stos   DWORD PTR es:[edi],eax
  404d69:	stos   BYTE PTR es:[edi],al
  404d6a:	dec    ecx
  404d6b:	lds    edx,FWORD PTR [edi]
  404d6d:	jl     0x404dda
  404d6f:	loop   0x404d55
  404d71:	pop    ecx
  404d72:	pop    ebx
  404d73:	or     eax,0x63ee3aa5
  404d78:	mov    ch,0x36
  404d7a:	mov    esp,0xd3d2f16
  404d7f:	(bad)  [eax-0x76be63e4]
  404d85:	add    al,0x2
  404d87:	cdq    
  404d88:	push   ebp
  404d89:	sbb    BYTE PTR cs:[ebp-0x46a487a5],ch
  404d90:	xor    ecx,DWORD PTR [ebx+0x4254f4d3]
  404d96:	xor    DWORD PTR [edi+0x65ff83c3],ebp
  404d9c:	hlt    
  404d9d:	mov    WORD PTR [edx-0x2df7929],fs
  404da3:	mov    ecx,0x6f649470
  404da8:	aad    0xd
  404daa:	aad    0xcf
  404dac:	fst    QWORD PTR [esi]
  404dae:	adc    DWORD PTR [ebp-0x20d04e58],esi
  404db4:	xchg   DWORD PTR [edi-0x37],esp
  404db7:	pop    ebx
  404db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404db9:	adc    eax,0x27a935dc
  404dbe:	daa    
  404dbf:	mov    edx,0x56a12ad0
  404dc4:	push   ecx
  404dc5:	push   ds
  404dc6:	mov    ch,0x4e
  404dc8:	test   eax,ecx
  404dca:	stos   BYTE PTR es:[edi],al
  404dcb:	xchg   BYTE PTR [edi],bh
  404dcd:	ror    esp,1
  404dcf:	in     eax,dx
  404dd0:	leave  
  404dd1:	mov    ds:0x3a005066,al
  404dd6:	jmp    0xf1e47805
  404ddb:	shl    BYTE PTR [ebx],1
  404ddd:	loope  0x404dc4
  404ddf:	(bad)  
  404de0:	pop    esi
  404de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de2:	inc    eax
  404de3:	sbb    ah,ah
  404de5:	pop    esi
  404de6:	adc    dl,bh
  404de8:	outs   dx,DWORD PTR ds:[esi]
  404de9:	(bad)  
  404dea:	cld    
  404deb:	and    eax,0x77dd8107
  404df0:	cwde   
  404df1:	out    dx,al
  404df2:	int3   
  404df3:	or     dh,cl
  404df5:	inc    esp
  404df6:	add    DWORD PTR [esi+0x61],0x1a
  404dfa:	xchg   BYTE PTR [ebp+0x5c],dh
  404dfd:	push   es
  404dfe:	(bad)  
  404dff:	push   ebx
  404e00:	or     edi,edx
  404e02:	xchg   edi,eax
  404e03:	xchg   bh,ah
  404e05:	mov    esp,0xd476862a
  404e0a:	add    BYTE PTR cs:[eax-0x27],bl
  404e0e:	mov    ebx,0x114221d6
  404e13:	inc    ebp
  404e14:	call   0xdde9:0x8b542fd8
  404e1b:	xor    DWORD PTR [edi+0x6c],edi
  404e1e:	push   edi
  404e1f:	out    0x8c,al
  404e21:	(bad)  
  404e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e23:	mov    eax,ds:0x27fa4ace
  404e28:	enter  0xaa3d,0xa0
  404e2c:	pushf  
  404e2d:	dec    edi
  404e2e:	imul   eax,ecx,0x7d
  404e31:	sub    al,0x1a
  404e33:	mov    eax,ds:0xc6560b49
  404e38:	xlat   BYTE PTR ds:[ebx]
  404e39:	stos   DWORD PTR es:[edi],eax
  404e3a:	and    edi,DWORD PTR [ebx+0x7e]
  404e3d:	add    DWORD PTR [edx-0x64],ebx
  404e40:	stc    
  404e41:	push   esp
  404e42:	cwde   
  404e43:	inc    ebx
  404e44:	and    DWORD PTR [ebx-0x2b],edi
  404e47:	ret    0x539c
  404e4a:	es (bad) 
  404e4c:	ficom  DWORD PTR [edi]
  404e4e:	pop    es
  404e4f:	enter  0xf6e6,0xc9
  404e53:	fwait
  404e54:	stos   BYTE PTR es:[edi],al
  404e55:	adc    eax,0xa417b556
  404e5a:	and    eax,0x1a39e6f5
  404e5f:	rol    ebx,1
  404e61:	pusha  
  404e62:	arpl   di,si
  404e64:	inc    esi
  404e65:	(bad)  
  404e66:	sbb    BYTE PTR [ecx-0x5d],ah
  404e69:	fsubp  st(7),st
  404e6b:	ins    DWORD PTR es:[edi],dx
  404e6c:	and    BYTE PTR [ecx+ecx*4+0x40],cl
  404e70:	int3   
  404e71:	int    0xec
  404e73:	dec    esi
  404e74:	stos   DWORD PTR es:[edi],eax
  404e75:	inc    edx
  404e76:	push   0xdab41c20
  404e7b:	push   ds
  404e7c:	fmulp  st(0),st
  404e7e:	stos   DWORD PTR es:[edi],eax
  404e7f:	adc    eax,0xc51414c6
  404e84:	mov    eax,ds:0x1530ac06
  404e89:	xchg   esi,eax
  404e8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e8b:	jmp    0x68a8:0x92c14462
  404e92:	push   ds
  404e93:	test   BYTE PTR [edx+ebp*1+0x70d38e4b],bh
  404e9a:	aam    0xb2
  404e9c:	or     eax,0x7c2d9ad3
  404ea1:	fistp  WORD PTR [esi+0x511138bc]
  404ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ea8:	sbb    BYTE PTR ds:0x22a73f2,ah
  404eae:	mov    cl,bh
  404eb0:	cmc    
  404eb1:	repnz mov ds:0x9cb2ef8,eax
  404eb7:	or     BYTE PTR [eax+0x4],dh
  404eba:	clc    
  404ebb:	popa   
  404ebc:	jg     0x404ea3
  404ebe:	add    ah,bl
  404ec0:	mov    bh,ah
  404ec2:	cs es cmp al,0x97
  404ec6:	lock bound esi,QWORD PTR [edx+0x7]
  404eca:	xchg   BYTE PTR [edi-0x64],cl
  404ecd:	push   es
  404ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ecf:	ins    BYTE PTR es:[edi],dx
  404ed0:	rcl    ecx,0xc4
  404ed3:	js     0x404ef3
  404ed5:	inc    esp
  404ed6:	mov    cl,0x6e
  404ed8:	cmc    
  404ed9:	sahf   
  404eda:	cmc    
  404edb:	cmp    DWORD PTR [ebx-0x5f],edi
  404ede:	push   es
  404edf:	dec    ebx
  404ee0:	inc    esi
  404ee1:	(bad)  
  404ee2:	mov    bl,0xe9
  404ee4:	in     eax,0xbd
  404ee6:	cdq    
  404ee7:	cmp    al,0x19
  404ee9:	xchg   ebp,eax
  404eea:	jmp    0x131052f0
  404eef:	mov    edi,0x22eba758
  404ef4:	test   eax,0x355eaf38
  404ef9:	dec    esp
  404efa:	sbb    DWORD PTR [eax+0x31663ea],eax
  404f00:	xchg   ebp,eax
  404f01:	mov    ds:0x8801887,eax
  404f06:	enter  0xf975,0x71
  404f0a:	daa    
  404f0b:	rol    BYTE PTR [ebp-0x70618ff6],0x54
  404f12:	hlt    
  404f13:	dec    esp
  404f14:	cmp    al,0xcb
  404f16:	inc    ecx
  404f17:	shl    BYTE PTR [edx-0x7764f017],cl
  404f1d:	ror    eax,0x76
  404f20:	pusha  
  404f21:	cld    
  404f22:	adc    edx,esi
  404f24:	hlt    
  404f25:	cmc    
  404f26:	fdiv   QWORD PTR [esi-0x74ed2dfc]
  404f2c:	jecxz  0x404f46
  404f2e:	mov    al,ds:0x8bfc458b
  404f33:	jge    0x404f2d
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0x47e6f58a
  405700:	or     bl,BYTE PTR ds:0x7a7a5fd7
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	jo     0x4056e7
  40570c:	cmp    BYTE PTR [edi+0x5dfd6123],ah
  405712:	loopne 0x4056ad
  405714:	fstp   QWORD PTR [ebp-0x72]
  405717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405718:	cmp    eax,0x64f58a9e
  40571d:	mov    esp,0xc1f94972
  405722:	idiv   cl
  405724:	pop    es
  405725:	ins    BYTE PTR es:[edi],dx
  405726:	rcr    al,1
  405728:	jb     0x405727
  40572a:	loopne 0x405755
  40572c:	or     eax,0xdef2fc8f
  405731:	(bad)  
  405733:	jne    0x405726
  405735:	dec    esp
  405736:	iret   
  405737:	sbb    BYTE PTR [ebp-0x7d],dl
  40573a:	xchg   ebp,eax
  40573b:	in     al,dx
  40573c:	retf   
  40573d:	push   0x203d69a3
  405742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405743:	mov    ch,0x39
  405745:	fdivr  DWORD PTR [ecx+eax*2-0x3f]
  405749:	jge    0x4056f6
  40574b:	jmp    0xdc7ad945
  405750:	clc    
  405751:	xor    eax,0x40ae0e1f
  405756:	fistp  DWORD PTR [edx]
  405758:	xchg   BYTE PTR [edx+ebx*4+0x144fa76c],dh
  40575f:	push   edi
  405760:	add    cl,al
  405762:	add    eax,0x41cb883c
  405767:	add    eax,0x3fc8ee79
  40576c:	cmp    ebx,DWORD PTR [esi+0x3b614616]
  405772:	fsubp  st(2),st
  405774:	sub    al,0x9c
  405776:	jge    0x4057de
  405778:	loop   0x40577f
  40577a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40577b:	fild   WORD PTR [ecx]
  40577d:	popa   
  40577e:	or     al,0x37
  405780:	pop    edx
  405781:	xor    eax,0x6fd939fc
  405786:	dec    esp
  405787:	je     0x4057b7
  405789:	lods   al,BYTE PTR ds:[esi]
  40578a:	daa    
  40578b:	into   
  40578c:	mov    ebp,0xb644f36d
  405791:	adc    esp,esi
  405793:	fistp  QWORD PTR [ecx+0x4a24a4eb]
  405799:	jnp    0x40576e
  40579b:	(bad)  
  40579c:	neg    BYTE PTR [esp+ecx*4]
  40579f:	cmp    BYTE PTR [ebx-0x15],0xfd
  4057a3:	pop    ecx
  4057a4:	dec    esi
  4057a5:	rol    DWORD PTR [ebp+eiz*1-0x1],cl
  4057a9:	(bad)  
  4057ab:	add    DWORD PTR [esi],ecx
  4057ad:	pop    ecx
  4057ae:	ss leave 
  4057b0:	mov    ecx,0xcdae6a45
  4057b5:	scas   al,BYTE PTR es:[edi]
  4057b6:	inc    eax
  4057b7:	(bad)  [ecx+0x61d2f0e4]
  4057bd:	sti    
  4057be:	mov    dl,0x56
  4057c0:	sbb    dh,bh
  4057c2:	dec    esp
  4057c3:	push   ebp
  4057c4:	test   eax,0x55fc8ccf
  4057c9:	push   es
  4057ca:	sbb    ch,BYTE PTR [eax-0x72]
  4057cd:	je     0x40579e
  4057cf:	xor    BYTE PTR [edx-0x55],dl
  4057d2:	test   BYTE PTR [ebx-0x4a],ah
  4057d5:	rcr    BYTE PTR fs:[ecx-0x372e77ba],1
  4057dc:	ins    BYTE PTR es:[edi],dx
  4057dd:	sar    dl,0xd4
  4057e0:	push   es
  4057e1:	mov    cl,0x8d
  4057e3:	in     al,dx
  4057e4:	stos   BYTE PTR es:[edi],al
  4057e5:	adc    al,0xd4
  4057e7:	cmp    dl,ah
  4057e9:	add    ebx,ecx
  4057eb:	cmp    DWORD PTR [ebp+0x4868e0e0],0xbe59f79b
  4057f5:	in     al,0x96
  4057f7:	js     0x4057cc
  4057f9:	sub    ch,BYTE PTR [ebx+0x2d]
  4057fc:	ficom  WORD PTR [ecx-0x3dcbad1]
  405802:	test   BYTE PTR [ebx+0x19],bl
  405805:	push   ds
  405806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405807:	mov    esi,0x43c24905
  40580c:	lds    ebp,FWORD PTR [ebx-0x6ea1f6e8]
  405812:	fnstcw WORD PTR [ecx-0x65]
  405815:	mov    al,BYTE PTR [ebx-0x45]
  405818:	add    BYTE PTR [ebp-0x38],bh
  40581b:	sub    eax,DWORD PTR ds:0x831ed721
  405821:	push   ss
  405822:	push   edx
  405823:	xor    eax,0x4e2b7d2f
  405828:	aam    0x43
  40582a:	frstor [ebx-0x43]
  40582d:	jnp    0x405803
  40582f:	push   edi
  405830:	enter  0x78e7,0xfe
  405834:	in     eax,dx
  405835:	push   ecx
  405836:	sub    dh,BYTE PTR [ebx-0x9]
  405839:	and    esp,ebp
  40583b:	and    al,0xd1
  40583d:	push   cs
  40583e:	inc    edi
  40583f:	nop
  405840:	leave  
  405841:	add    al,0xe1
  405843:	test   ah,ch
  405845:	xchg   BYTE PTR [ecx],cl
  405847:	push   es
  405848:	fdiv   DWORD PTR [edi]
  40584a:	jae    0x4058c9
  40584c:	add    BYTE PTR [esi+0x53],0x47
  405850:	call   FWORD PTR [ecx-0x191a69ff]
  405856:	icebp  
  405857:	mov    ch,0x90
  405859:	ins    DWORD PTR es:[edi],dx
  40585a:	inc    edi
  40585b:	je     0x405806
  40585d:	jmp    0x4058d1
  40585f:	cmp    esi,DWORD PTR [esi-0x61fa9e6]
  405865:	std    
  405866:	sbb    ebp,DWORD PTR [ebp-0x78]
  405869:	sbb    eax,0xee7f5f02
  40586e:	shl    DWORD PTR [ecx],1
  405870:	das    
  405871:	bnd jmp 0x4058bb
  405874:	push   esp
  405875:	lock js 0x40582e
  405878:	sub    BYTE PTR [edi],bl
  40587a:	mov    dh,0x9a
  40587c:	loop   0x4058b5
  40587e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40587f:	mov    esi,0x3fd2c679
  405884:	push   es
  405885:	lods   al,BYTE PTR ds:[esi]
  405886:	xchg   edx,eax
  405887:	mov    DWORD PTR [esi+eax*1-0xf],ebp
  40588b:	push   ds
  40588c:	inc    esi
  40588d:	add    bl,BYTE PTR [ebp-0xd]
  405890:	pop    edx
  405891:	sub    ch,cl
  405893:	push   edi
  405894:	push   edx
  405895:	outs   dx,DWORD PTR ds:[esi]
  405896:	fnstenv [edi-0x6cd9e877]
  40589c:	cld    
  40589d:	dec    ebp
  40589e:	les    ebp,FWORD PTR [edi+0x5a]
  4058a1:	pop    esp
  4058a2:	fistp  WORD PTR gs:[ebp-0x59fed522]
  4058a9:	adc    al,0x9a
  4058ab:	arpl   WORD PTR [ebx+0x5096baad],ax
  4058b1:	outs   dx,BYTE PTR ds:[esi]
  4058b2:	adc    ch,BYTE PTR [ecx+edx*8+0x352e1c8e]
  4058b9:	jae    0x405843
  4058bb:	jae    0x40584b
  4058bd:	push   ds
  4058be:	xchg   edi,eax
  4058bf:	lods   al,BYTE PTR ds:[esi]
  4058c0:	sbb    BYTE PTR [esi],ch
  4058c2:	mov    edi,0x98d7b8f4
  4058c7:	sbb    bh,ch
  4058c9:	or     ebx,ecx
  4058cb:	push   edi
  4058cc:	cwde   
  4058cd:	ja     0x405927
  4058cf:	lea    ecx,[ecx-0xa6afb02]
  4058d5:	sbb    esp,DWORD PTR [ebx+0x264269fe]
  4058db:	lock mov WORD PTR [esi-0x18],?
  4058df:	inc    esp
  4058e0:	push   ebx
  4058e1:	adc    cl,BYTE PTR [esp+ecx*1+0x6d]
  4058e5:	and    al,0xdb
  4058e7:	add    DWORD PTR [eax+eax*1+0x36548ddf],0xffffffe9
  4058ef:	xchg   esp,eax
  4058f0:	push   ss
  4058f1:	xor    ecx,esi
  4058f3:	fldenv [eax+0x74]
  4058f6:	mov    ecx,0x96c98f84
  4058fb:	and    DWORD PTR [esi],eax
  4058fd:	cli    
  4058fe:	test   ah,dh
  405900:	mov    al,ds:0x71a8ccb5
  405905:	ret    
  405906:	cdq    
  405907:	inc    esi
  405908:	inc    esi
  405909:	jmp    0xe212:0x378eac44
  405910:	xlat   BYTE PTR ds:[ebx]
  405911:	mov    esi,0xd08b87cf
  405916:	jb     0x4058fd
  405918:	aas    
  405919:	adc    DWORD PTR [esi],edi
  40591b:	daa    
  40591c:	iret   
  40591d:	or     al,0x27
  40591f:	and    esp,DWORD PTR [ecx-0x7da50ba1]
  405925:	dec    edi
  405926:	adc    dl,cl
  405928:	adc    ah,dh
  40592a:	jmp    0x11748ae3
  40592f:	jp     0x405927
  405931:	aas    
  405932:	pop    ebx
  405933:	loopne 0x40599d
  405935:	xlat   BYTE PTR ds:[ebx]
  405936:	enter  0x6c14,0xa9
  40593a:	imul   BYTE PTR ds:0xa05231fe
  405940:	rcl    dl,1
  405942:	add    esi,DWORD PTR [edi]
  405944:	push   ebp
  405945:	xchg   esi,eax
  405946:	les    esp,FWORD PTR [ebx-0x1]
  405949:	sahf   
  40594a:	adc    DWORD PTR ds:0xf3022b7a,edx
  405950:	jmp    0x294f9610
  405955:	cli    
  405956:	(bad)  
  405957:	and    BYTE PTR ds:0x90bb5623,dl
  40595d:	push   cs
  40595e:	cmp    BYTE PTR [edx-0x72],ch
  405961:	lea    eax,[ebx-0x77]
  405964:	test   ebp,edi
  405966:	dec    esp
  405967:	inc    ebp
  405968:	mov    ch,BYTE PTR [ebx-0x75]
  40596b:	(bad)  
  40596d:	lods   al,BYTE PTR ds:[esi]
  40596e:	and    eax,0x7b03ebe0
  405973:	std    
  405974:	pop    ecx
  405975:	fsub   DWORD PTR [eax+ebx*4+0x5da54f75]
  40597c:	or     dh,dl
  40597e:	inc    ebp
  40597f:	adc    BYTE PTR [edx-0x3f],ah
  405982:	inc    ebx
  405983:	cmp    ah,BYTE PTR [edi+0x3f]
  405986:	(bad)  
  405987:	push   ss
  405988:	int    0x70
  40598a:	imul   DWORD PTR [esi]
  40598c:	xchg   ecx,eax
  40598d:	call   0x66b5:0x2b637ebe
  405994:	cdq    
  405995:	xchg   edx,eax
  405996:	test   cl,bh
  405998:	aam    0x93
  40599a:	xchg   ecx,eax
  40599b:	imul   edx,DWORD PTR [edx+0x7dbc7889],0x5dc959d5
  4059a5:	not    DWORD PTR [esi-0x74]
  4059a8:	mov    ds:0xfae1024e,al
  4059ad:	jbe    0x405a1d
  4059af:	inc    edx
  4059b0:	pop    ebx
  4059b1:	sbb    eax,DWORD PTR gs:[ecx]
  4059b4:	mov    esi,0x3e97af16
  4059b9:	mov    eax,0xddb91258
  4059be:	ins    BYTE PTR es:[edi],dx
  4059bf:	jle    0x40596f
  4059c1:	test   al,0x11
  4059c3:	loope  0x405956
  4059c5:	cmp    DWORD PTR [ecx],0x212a5935
  4059cb:	aam    0xcb
  4059cd:	cmp    eax,0xe2d3ed36
  4059d3:	cmp    ecx,DWORD PTR [edx+eax*1]
  4059d6:	fwait
  4059d7:	test   BYTE PTR [eax+eiz*8],dh
  4059da:	call   0x32164978
  4059df:	mov    edx,0x8fbd07f3
  4059e4:	nop
  4059e5:	mov    bl,0xa3
  4059e7:	movd   mm5,DWORD PTR [edx]
  4059ea:	gs das 
  4059ec:	and    al,0xab
  4059ee:	dec    edi
  4059ef:	inc    edi
  4059f0:	push   ss
  4059f1:	mul    BYTE PTR [eax-0x60]
  4059f4:	popf   
  4059f5:	jge    0x4059c4
  4059f7:	xchg   DWORD PTR [edi],ebp
  4059f9:	add    DWORD PTR [edx],0x9009f479
  4059ff:	mov    esp,0xd1fb1621
  405a04:	xchg   edx,eax
  405a05:	pop    esi
  405a06:	shl    BYTE PTR [edx+ebx*1],0x96
  405a0a:	sar    DWORD PTR [eiz*2+0x3d884dc3],0x82
  405a12:	jmp    0x36a303d8
  405a17:	push   ss
  405a18:	lods   eax,DWORD PTR ds:[esi]
  405a19:	out    dx,eax
  405a1a:	fidiv  WORD PTR [ecx+0x34]
  405a1d:	pusha  
  405a1e:	dec    edx
  405a1f:	jbe    0x405a72
  405a21:	fs xchg ecx,eax
  405a23:	mov    al,ds:0x75f7c06a
  405a28:	jae    0x405a7e
  405a2a:	jmp    0x49c38841
  405a2f:	test   ebx,0x33ed48d9
  405a35:	popf   
  405a36:	mov    bl,0xb2
  405a38:	stos   BYTE PTR es:[edi],al
  405a39:	aaa    
  405a3a:	pop    ebp
  405a3b:	dec    esp
  405a3c:	xor    esp,edi
  405a3e:	ja     0x405a4a
  405a40:	jmp    0x8b5eca06
  405a45:	push   cs
  405a46:	popa   
  405a47:	aam    0xf7
  405a49:	aas    
  405a4a:	xor    ecx,DWORD PTR [edi+0x1a]
  405a4d:	aas    
  405a4e:	das    
  405a4f:	cmp    al,0xd4
  405a51:	xchg   ecx,eax
  405a52:	loop   0x4059f4
  405a54:	mov    edi,0xab4bf074
  405a59:	clc    
  405a5a:	cmp    esp,DWORD PTR cs:[eax]
  405a5d:	jno    0x405abc
  405a5f:	cmp    esp,DWORD PTR [ebp+0x11]
  405a62:	aas    
  405a63:	in     eax,0x7e
  405a65:	adc    DWORD PTR [ecx],ebx
  405a67:	adc    DWORD PTR [edx],edi
  405a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a6a:	add    esp,DWORD PTR [edi+0x2]
  405a6d:	xchg   ecx,eax
  405a6e:	imul   edx,DWORD PTR [esi],0xd0f060db
  405a74:	xchg   di,ax
  405a76:	or     ch,bh
  405a78:	push   ebp
  405a79:	call   0xbbefb899
  405a7e:	mov    WORD PTR [eax-0x2d],cs
  405a81:	test   eax,0xfb037b84
  405a86:	test   DWORD PTR [eax+0x5df3d97e],ecx
  405a8c:	adc    BYTE PTR [esi],dl
  405a8e:	sbb    dh,BYTE PTR [ecx]
  405a90:	mov    ds:0x931bc2ac,eax
  405a95:	or     ebp,edx
  405a97:	jg     0x405b01
  405a99:	jp     0x405aea
  405a9b:	fistp  WORD PTR [esi-0x54fd94a7]
  405aa1:	es dec esi
  405aa3:	jge    0x405a55
  405aa5:	sti    
  405aa6:	das    
  405aa7:	jno    0x405acb
  405aa9:	popa   
  405aaa:	ror    DWORD PTR [edx-0x11],1
  405aad:	in     al,dx
  405aae:	mov    ecx,0xd9c43a3
  405ab3:	shl    dh,0x30
  405ab6:	xchg   ebx,eax
  405ab7:	(bad)  
  405ab8:	mov    bl,0x18
  405aba:	xchg   ebp,ecx
  405abc:	xchg   BYTE PTR ss:[edi+edi*2-0x2d940993],bh
  405ac4:	xchg   edi,eax
  405ac5:	int3   
  405ac6:	xchg   ebp,ebx
  405ac8:	das    
  405ac9:	cmp    BYTE PTR [ecx],dl
  405acb:	push   ebx
  405acc:	mov    ah,0x13
  405ace:	or     dl,BYTE PTR [eax]
  405ad0:	and    al,ch
  405ad2:	(bad)  
  405ad3:	xchg   ebx,eax
  405ad4:	ret    
  405ad5:	mov    gs,ebp
  405ad7:	call   0xbc5fffd0
  405adc:	lods   eax,DWORD PTR ds:[esi]
  405add:	pop    edx
  405ade:	out    dx,eax
  405adf:	in     eax,0xe5
  405ae1:	out    dx,al
  405ae2:	scas   al,BYTE PTR es:[edi]
  405ae3:	fs (bad) 
  405ae5:	xor    eax,0x4b8d2e4f
  405aea:	pop    esp
  405aeb:	jmp    0x2b47:0x298c2256
  405af2:	cld    
  405af3:	push   ss
  405af4:	test   eax,0x78b8c9e1
  405af9:	mov    edx,0x7ad52ada
  405afe:	and    bl,BYTE PTR [ecx]
  405b00:	cwde   
  405b01:	repnz xchg cl,cl
  405b04:	pop    esi
  405b05:	dec    ecx
  405b06:	pop    ss
  405b07:	and    al,0xc4
  405b09:	jecxz  0x405b7e
  405b0b:	aaa    
  405b0c:	or     esi,DWORD PTR [eax-0x1985d452]
  405b12:	sbb    ecx,esp
  405b14:	iret   
  405b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b16:	pop    edi
  405b17:	lods   al,BYTE PTR ds:[esi]
  405b18:	dec    ecx
  405b19:	fs arpl si,di
  405b1c:	sbb    dh,al
  405b1e:	fsub   st,st(2)
  405b20:	push   ds
  405b21:	ins    DWORD PTR es:[edi],dx
  405b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b23:	mov    BYTE PTR [ebx-0x7b],cl
  405b26:	cmp    eax,0xa02bda0e
  405b2b:	int3   
  405b2c:	and    eax,0xccacadc1
  405b31:	add    edx,0x211c8909
  405b37:	stos   BYTE PTR es:[edi],al
  405b38:	outs   dx,BYTE PTR ds:[esi]
  405b39:	dec    eax
  405b3a:	movnti DWORD PTR ds:0x39e69b72,edx
  405b41:	and    DWORD PTR ds:0x48fa4528,edi
  405b47:	test   DWORD PTR [ecx-0x17d2645c],edx
  405b4d:	add    eax,0x9e7c06c4
  405b52:	jae    0x405b57
  405b54:	das    
  405b55:	loopne 0x405b3d
  405b57:	cmc    
  405b58:	lods   al,BYTE PTR ds:[esi]
  405b59:	push   ss
  405b5a:	mov    ebp,0xc0bcb3a6
  405b5f:	(bad)  
  405b60:	jmp    0x717a4c24
  405b65:	push   ds
  405b66:	pop    esp
  405b67:	rcl    BYTE PTR [ebx],0x34
  405b6a:	mov    bh,al
  405b6c:	mov    bl,0x79
  405b6e:	inc    esp
  405b6f:	retf   
  405b70:	pop    ecx
  405b71:	inc    ecx
  405b72:	dec    eax
  405b73:	jg     0x405b84
  405b75:	mov    DWORD PTR [ebp+0x1cee363c],0x3caa74cb
  405b7f:	arpl   bx,bx
  405b81:	or     eax,0x9d90f64e
  405b86:	cmc    
  405b87:	shl    ebx,0x61
  405b8a:	push   esp
  405b8b:	jb     0x405b4b
  405b8d:	mov    ecx,DWORD PTR [ecx]
  405b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b90:	std    
  405b91:	dec    esp
  405b92:	hlt    
  405b93:	lea    ebx,[edx+0x46f9e5ac]
  405b99:	jle    0x405b89
  405b9b:	lods   eax,DWORD PTR ds:[esi]
  405b9c:	lahf   
  405b9d:	push   esp
  405b9e:	mov    cl,0xd6
  405ba0:	cmp    BYTE PTR [ebx],dh
  405ba2:	adc    bl,dl
  405ba4:	ret    0xebeb
  405ba7:	shr    DWORD PTR [esp+edx*2+0x32922fdd],0xb4
  405baf:	push   ecx
  405bb0:	stc    
  405bb1:	out    0xe0,eax
  405bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bb4:	jp     0x405ba7
  405bb6:	jmp    FWORD PTR [ecx-0x19]
  405bb9:	sub    DWORD PTR [eax+0x14],ebx
  405bbc:	jns    0x405b66
  405bbe:	mov    bh,0x6f
  405bc0:	ss pop ecx
  405bc2:	push   ds
  405bc3:	cmp    eax,0x167ae33b
  405bc8:	pusha  
  405bc9:	mov    edi,0xdbc805e
  405bce:	fldenv [ebx+0x4b427dd3]
  405bd4:	ror    ecx,cl
  405bd6:	out    dx,al
  405bd7:	(bad)  
  405bd8:	fnstenv [esi+ebx*2+0x3a]
  405bdc:	jno    0x405c43
  405bde:	(bad)  
  405bdf:	fadd   st,st(0)
  405be1:	adc    BYTE PTR [ecx+0x42f6c160],bh
  405be7:	fsubr  st(3),st
  405be9:	hlt    
  405bea:	sbb    edx,DWORD PTR [ebp-0x51]
  405bed:	pop    ecx
  405bee:	in     al,dx
  405bef:	xchg   BYTE PTR [ecx],cl
  405bf1:	cmp    BYTE PTR [edx],bl
  405bf3:	in     al,dx
  405bf4:	mov    edi,0x10be484f
  405bf9:	retf   0xe066
  405bfc:	gs push ss
  405bfe:	mov    BYTE PTR [ecx],bl
  405c00:	bound  edx,QWORD PTR [ebp-0x61]
  405c03:	or     bl,BYTE PTR [ebx+ebx*1+0x166ae3d8]
  405c0a:	outs   dx,BYTE PTR ds:[esi]
  405c0b:	fisttp DWORD PTR [eax]
  405c0d:	pextrw esp,(bad),0xc5
  405c0f:	addr16 loop 0x405bda
  405c12:	out    0x7f,al
  405c14:	cld    
  405c15:	mov    esi,0x8e9768a6
  405c1a:	xor    bh,BYTE PTR [eax]
  405c1c:	jnp    0x405bd6
  405c1e:	je     0x405bf6
  405c20:	sub    BYTE PTR [edx],dh
  405c22:	and    eax,0x72823573
  405c27:	mov    bh,0xa5
  405c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c2a:	fs sahf 
  405c2c:	stos   BYTE PTR es:[edi],al
  405c2d:	mov    esi,eax
  405c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c30:	mov    al,ds:0xe85462d6
  405c35:	mov    esp,0xfa9d617e
  405c3a:	dec    esp
  405c3b:	aaa    
  405c3c:	es cwde 
  405c3e:	adc    BYTE PTR [eax-0x72],dl
  405c41:	and    cl,ch
  405c43:	push   ds
  405c44:	daa    
  405c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c46:	push   ebp
  405c47:	inc    esp
  405c48:	scas   al,BYTE PTR es:[edi]
  405c49:	xchg   BYTE PTR [ebx],dl
  405c4b:	cmp    BYTE PTR fs:[ecx-0x2f94957],dh
  405c52:	ret    0x89be
  405c55:	(bad)  
  405c56:	pop    ss
  405c57:	arpl   WORD PTR [eax+0x18fade66],si
  405c5d:	ss ds pop ebp
  405c60:	retf   
  405c61:	lea    ecx,[ebx+0x27c7ea61]
  405c67:	or     al,0x31
  405c69:	cmp    BYTE PTR [ecx-0x1f],ah
  405c6c:	inc    ebp
  405c6d:	xor    BYTE PTR [edx],cl
  405c6f:	push   0x4f
  405c71:	pop    ss
  405c72:	dec    eax
  405c73:	das    
  405c74:	cmp    eax,0x920b174
  405c79:	retf   
  405c7a:	cs sahf 
  405c7c:	pusha  
  405c7d:	pop    ecx
  405c7e:	je     0x405cca
  405c80:	lods   al,BYTE PTR ds:[esi]
  405c81:	imul   esp,esi,0x82c4597f
  405c87:	sar    BYTE PTR [ecx+0x10],0x67
  405c8b:	mov    esi,0x575a7d41
  405c90:	mul    BYTE PTR [ecx]
  405c92:	sbb    eax,0xa008e6df
  405c97:	mov    al,dl
  405c99:	mov    ebp,0x31492e9d
  405c9e:	inc    eax
  405c9f:	(bad)  
  405ca0:	cmp    al,0xa9
  405ca2:	sbb    ebx,DWORD PTR [ebp+0x43a52c60]
  405ca8:	outs   dx,BYTE PTR ds:[esi]
  405ca9:	aad    0x3e
  405cab:	xor    DWORD PTR [edx],ebp
  405cad:	push   esi
  405cae:	pop    ecx
  405caf:	out    dx,al
  405cb0:	xchg   edi,eax
  405cb1:	mov    al,ds:0x873a525e
  405cb6:	sub    edx,ecx
  405cb8:	shl    DWORD PTR [esp+ecx*1-0xf],0x7f
  405cbd:	or     BYTE PTR [esp+esi*8-0x4d],bh
  405cc1:	sti    
  405cc2:	and    al,0xda
  405cc4:	inc    eax
  405cc5:	add    DWORD PTR [edi+0x1c5b8380],ebx
  405ccb:	and    eax,esi
  405ccd:	jns    0x405ca9
  405ccf:	lahf   
  405cd0:	std    
  405cd1:	pop    esi
  405cd2:	shl    BYTE PTR [edx-0x5c50fdb8],cl
  405cd8:	loop   0x405d4b
  405cda:	adc    ecx,DWORD PTR [eax+0x47]
  405cdd:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cdf:	mov    dh,0xa1
  405ce1:	lea    esp,gs:[edi+ecx*8+0x7557183c]
  405ce9:	imul   esi,DWORD PTR [edi+0xa],0xff48271f
  405cf0:	jecxz  0x405d4c
  405cf2:	inc    eax
  405cf3:	jge    0x405cb7
  405cf5:	test   DWORD PTR es:[esi-0x7f],eax
  405cf9:	test   ah,0x71
  405cfc:	jmp    0x405cef
  405cfe:	out    dx,al
  405cff:	lds    edx,FWORD PTR [ecx]
  405d01:	xchg   esi,eax
  405d02:	test   BYTE PTR [eax+0x41],cl
  405d05:	clc    
  405d06:	(bad)  
  405d07:	data16 jae 0x405cd0
  405d0a:	cmp    eax,0xb54f84a2
  405d0f:	cmp    eax,0x57c45198
  405d14:	inc    esi
  405d15:	repz out 0xa2,al
  405d18:	push   0x51
  405d1a:	push   ss
  405d1b:	mov    bh,cl
  405d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d1e:	pop    ds
  405d1f:	inc    edi
  405d20:	pop    ds
  405d21:	mov    ds:0x6559fccc,al
  405d26:	call   0x231a7a88
  405d2b:	outs   dx,BYTE PTR ds:[esi]
  405d2c:	call   FWORD PTR [esi-0x9e1df74]
  405d32:	ins    BYTE PTR es:[edi],dx
  405d33:	or     bh,BYTE PTR [eax]
  405d35:	mov    ds:0xb99ec4d3,eax
  405d3a:	dec    ebx
  405d3b:	xchg   esp,eax
  405d3c:	mov    bl,0x58
  405d3e:	pop    ss
  405d3f:	jge    0x405cf9
  405d41:	inc    esp
  405d42:	add    al,0x26
  405d44:	pop    ecx
  405d45:	test   BYTE PTR ds:0x63448606,al
  405d4b:	and    esi,DWORD PTR [eax-0x6f701bac]
  405d51:	or     al,0xba
  405d53:	arpl   WORD PTR ds:0x94df0682,ax
  405d59:	outs   dx,DWORD PTR ds:[esi]
  405d5a:	fdiv   QWORD PTR [ecx-0x37]
  405d5d:	gs icebp 
  405d5f:	idiv   BYTE PTR [edi+0x6b]
  405d62:	jmp    0xf076:0x49fa0a62
  405d69:	rol    BYTE PTR [esi-0x4f],0x2b
  405d6d:	and    ebx,DWORD PTR [esi+0x4e32b503]
  405d73:	(bad)  
  405d74:	push   ds
  405d75:	sbb    esi,edx
  405d77:	arpl   WORD PTR [edi],bx
  405d79:	mov    esp,0x5ca1bcc
  405d7e:	add    ch,BYTE PTR [ecx+ebx*2]
  405d81:	push   edx
  405d82:	push   edx
  405d83:	push   eax
  405d84:	and    eax,0x4bc9cf46
  405d89:	dec    ebx
  405d8a:	mov    ds:0x608e724b,eax
  405d8f:	and    eax,0x1468396b
  405d94:	jmp    0x405d93
  405d96:	cld    
  405d97:	je     0x405d64
  405d99:	das    
  405d9a:	adc    bh,BYTE PTR [ecx-0x52]
  405d9d:	mov    bh,0x35
  405d9f:	xchg   ebp,eax
  405da0:	ror    BYTE PTR [eax+ebx*2-0x9bcaff2],1
  405da7:	add    esi,DWORD PTR [ebp-0x2e]
  405daa:	fsubr  QWORD PTR [eax*4-0x7c444cee]
  405db1:	and    BYTE PTR ds:0xa9938b1d,0xac
  405db8:	pop    ecx
  405db9:	mov    al,bh
  405dbb:	mov    dh,0x11
  405dbd:	mov    edi,ebp
  405dbf:	lidtd  [eax-0x22]
  405dc3:	bound  ebx,QWORD PTR [ebp-0x23]
  405dc6:	outs   dx,BYTE PTR fs:[esi]
  405dc8:	and    ch,BYTE PTR [ebx-0x52386af7]
  405dce:	pop    esp
  405dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dd0:	mov    ebp,0xf2bcf1ec
  405dd5:	gs mov bh,0xa6
  405dd8:	(bad)  [eax-0x5b]
  405ddb:	mov    al,BYTE PTR [ebp-0x34e20e79]
  405de1:	inc    esp
  405de2:	(bad)  
  405de3:	jnp    0x405dab
  405de5:	jg     0x405e10
  405de7:	dec    esp
  405de8:	in     al,dx
  405de9:	jecxz  0x405d7d
  405deb:	add    DWORD PTR [edi],edi
  405ded:	retf   
  405dee:	or     al,0xf6
  405df0:	cmc    
  405df1:	jae    0x405d76
  405df3:	sbb    BYTE PTR [esi+0x42],bl
  405df6:	adc    DWORD PTR [edx-0x7a37c43a],esp
  405dfc:	inc    DWORD PTR [esi-0x7c]
  405dff:	icebp  
  405e00:	push   esp
  405e01:	sub    al,0x7c
  405e03:	stos   BYTE PTR es:[edi],al
  405e04:	mov    bh,0x79
  405e06:	js     0x405d8d
  405e08:	mov    fs,edx
  405e0a:	xchg   ecx,eax
  405e0b:	adc    ebp,DWORD PTR [edi+0x1319266f]
  405e11:	rcr    DWORD PTR [ebp+0x6c],0x7e
  405e15:	ficom  DWORD PTR [esi-0x41]
  405e18:	loop   0x405dd4
  405e1a:	xor    eax,0x29549892
  405e1f:	(bad)  [ecx]
  405e21:	cmp    al,0x82
  405e23:	mov    ds:0x90424079,eax
  405e28:	xchg   edx,eax
  405e29:	cli    
  405e2a:	ss (bad) 
  405e2c:	out    dx,al
  405e2d:	and    BYTE PTR [edx-0x6e],dl
  405e30:	push   edx
  405e31:	pusha  
  405e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e33:	sti    
  405e34:	cdq    
  405e35:	xor    al,0x7e
  405e37:	outs   dx,BYTE PTR ds:[esi]
  405e38:	test   al,0xde
  405e3a:	leave  
  405e3b:	sar    BYTE PTR [esi],0x93
  405e3e:	mov    edi,0xfc65a38c
  405e43:	jge    0x405e4e
  405e45:	xchg   edx,eax
  405e46:	clc    
  405e47:	pop    edx
  405e48:	fs repz mov edx,0xe121fbce
  405e4f:	add    DWORD PTR [esi],ebp
  405e51:	jmp    0x405e83
  405e53:	(bad)  
  405e54:	clc    
  405e55:	sti    
  405e56:	adc    al,cl
  405e58:	push   0xffffff81
  405e5a:	xchg   edi,eax
  405e5b:	stos   DWORD PTR es:[edi],eax
  405e5c:	lods   eax,DWORD PTR ds:[esi]
  405e5d:	into   
  405e5e:	push   0x25f81b92
  405e63:	test   eax,0x886520b0
  405e68:	packsswb mm3,QWORD PTR [edx+0x34989363]
  405e6f:	out    0xd,al
  405e71:	mov    edi,0x4611e003
  405e76:	sub    eax,0xd0cb309d
  405e7b:	mov    eax,DWORD PTR [ebx-0x7a2498de]
  405e81:	mov    edi,0xf7d5c5d5
  405e86:	mov    ebx,?
  405e88:	(bad)  
  405e89:	fdiv   st,st(1)
  405e8b:	jae    0x405e42
  405e8d:	add    BYTE PTR [edx],ch
  405e8f:	fs (bad) 
  405e91:	lea    ebp,[esi-0x2d]
  405e94:	mov    ebp,0x842a67cf
  405e99:	mov    ebx,0x73c4f3ff
  405e9e:	aad    0x56
  405ea0:	xor    edi,DWORD PTR [esi]
  405ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ea4:	ret    0x41de
  405ea7:	xchg   ecx,eax
  405ea8:	loope  0x405e5b
  405eaa:	enter  0x499f,0xb
  405eae:	push   ebx
  405eaf:	sbb    BYTE PTR [edx-0x2],bl
  405eb2:	nop
  405eb3:	xor    DWORD PTR [ecx+0x5ffb8349],ebx
  405eb9:	(bad)  
  405eba:	cld    
  405ebb:	push   cs
  405ebc:	mov    bl,0x0
  405ebe:	mov    ch,0x4e
  405ec0:	mov    eax,0x484c8830
  405ec5:	adc    BYTE PTR [edx+0xb8ee2b3],ch
  405ecb:	idiv   BYTE PTR [esi]
  405ecd:	lahf   
  405ece:	nop
  405ecf:	ja     0x405eaf
  405ed1:	(bad)  [eax]
  405ed3:	jp     0x405e86
  405ed5:	cwde   
  405ed6:	inc    ebp
  405ed7:	gs inc esi
  405ed9:	nop
  405eda:	push   cs
  405edb:	sub    BYTE PTR [ecx+0x4562c84f],al
  405ee1:	mov    dl,0x3f
  405ee3:	cmp    BYTE PTR [edx+0x3c],bh
  405ee6:	out    0xcf,eax
  405ee8:	retf   0x93bc
  405eeb:	mov    ebx,0xa8570682
  405ef0:	lea    ecx,[esi-0x53e96378]
  405ef6:	cdq    
  405ef7:	cld    
  405ef8:	mov    ecx,0x6831bf3f
  405efd:	mov    ebp,0xc4fd1a59
  405f02:	cmp    BYTE PTR [ebp+0x6351473e],al
  405f08:	cmc    
  405f09:	push   ds
  405f0a:	retf   0x6be5
  405f0d:	jg     0x405f66
  405f0f:	lahf   
  405f10:	mov    esp,DWORD PTR [edi+0x7ffe4616]
  405f16:	arpl   dx,di
  405f18:	or     eax,0xba9a9a97
  405f1d:	inc    edi
  405f1e:	cld    
  405f1f:	cmp    eax,0xcba4094d
  405f24:	(bad)  
  405f25:	enter  0xce67,0xda
  405f29:	and    edi,DWORD PTR [edx-0xd]
  405f2c:	nop
  405f2d:	xchg   ecx,eax
  405f2e:	and    al,dl
  405f30:	mov    dl,0x5a
  405f32:	pop    ecx
  405f33:	jmp    0x405edf
  405f35:	das    
  405f36:	fisttp QWORD PTR [ebx]
  405f38:	out    0xb0,eax
  405f3a:	mov    ebp,0x7d672030
  405f3f:	push   cs
  405f40:	add    DWORD PTR [eax],ebp
  405f42:	xlat   BYTE PTR ds:[ebx]
  405f43:	jnp    0x405f2e
  405f45:	jl     0x405f4e
  405f47:	xchg   dl,cl
  405f49:	or     al,0x81
  405f4b:	xchg   ebx,eax
  405f4c:	mov    al,0x24
  405f4e:	shr    BYTE PTR [esi+0x3115ac3d],cl
  405f54:	or     eax,0x5053ab67
  405f59:	stos   BYTE PTR es:[edi],al
  405f5a:	fidiv  DWORD PTR [edi+0x70078ee2]
  405f60:	mov    esp,0x7f733298
  405f65:	mov    bh,0x5a
  405f67:	cmc    
  405f68:	or     al,0xdd
  405f6a:	mov    ch,BYTE PTR [edx]
  405f6c:	mov    WORD PTR [edi+0x7],ds
  405f6f:	cli    
  405f70:	pop    ebp
  405f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f72:	daa    
  405f73:	and    al,0x30
  405f75:	loopne 0x405f6d
  405f77:	(bad)  
  405f78:	mov    dl,0xad
  405f7a:	pop    esi
  405f7b:	xchg   ecx,eax
  405f7c:	adc    cl,dl
  405f7e:	mov    dl,0x25
  405f80:	sbb    ah,BYTE PTR [eax+0x38]
  405f83:	fnsave [edx+0x2c]
  405f86:	imul   eax,edi,0x25471082
  405f8c:	(bad)  
  405f8d:	mov    eax,ss:0x395ab928
  405f93:	out    dx,al
  405f94:	adc    DWORD PTR [edi+0x1b744a92],edx
  405f9a:	cmp    DWORD PTR [ebp-0x4e],ebp
  405f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f9e:	int    0xda
  405fa0:	pop    esp
  405fa1:	mov    ebx,0xefff0247
  405fa6:	fcmovne st,st(0)
  405fa8:	adc    eax,0x48cd79e
  405fad:	inc    ebx
  405fae:	xchg   ebp,esi
  405fb0:	sub    eax,0xec9d83d5
  405fb5:	xor    al,0x58
  405fb7:	adc    bh,BYTE PTR [ebx-0x26]
  405fba:	xchg   esi,eax
  405fbb:	(bad)  [ecx]
  405fbd:	jmp    0x405f8d
  405fbf:	es xor dh,ch
  405fc2:	add    eax,0x955a2d5c
  405fc7:	inc    edi
  405fc8:	xchg   esp,eax
  405fc9:	sbb    edi,DWORD PTR [eax-0x4d47f37f]
  405fcf:	mov    edi,edi
  405fd1:	add    eax,0x2847f56c
  405fd6:	add    eax,0x5c9387eb
  405fdb:	popa   
  405fdc:	lods   eax,DWORD PTR ds:[esi]
  405fdd:	dec    edi
  405fde:	adc    dl,BYTE PTR [esi-0x700b1896]
  405fe4:	or     al,0xd5
  405fe6:	call   0xca242c24
  405feb:	dec    edx
  405fec:	lods   eax,DWORD PTR ds:[esi]
  405fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fee:	sahf   
  405fef:	inc    esi
  405ff0:	sbb    ebx,eax
  405ff2:	jp     0x406048
  405ff4:	xor    BYTE PTR [edx+0x172429b6],0x97
  405ffb:	mov    ebx,DWORD PTR [bx+si+0x42]
  405fff:	in     eax,0x44
  406001:	sbb    DWORD PTR [ecx-0x693e960a],0x12
  406008:	pop    ebp
  406009:	mov    ecx,0x28aa29f2
  40600e:	push   ebx
  40600f:	retf   
  406010:	mov    ah,0x9a
  406012:	out    0xeb,al
  406014:	jo     0x405fbe
  406016:	aam    0xb2
  406018:	push   cs
  406019:	sub    al,dl
  40601b:	mov    edx,0xa659e20d
  406020:	jge    0x40604b
  406022:	sub    edx,ebx
  406024:	outs   dx,BYTE PTR ds:[esi]
  406025:	xchg   edx,eax
  406026:	pop    ebx
  406027:	xor    DWORD PTR ds:0x566a6fe1,esi
  40602d:	aaa    
  40602e:	and    al,dl
  406030:	adc    al,0xa5
  406032:	retf   0x4d36
  406035:	dec    ecx
  406036:	sub    al,0xf0
  406038:	fst    DWORD PTR [ebp-0x1935f98b]
  40603e:	not    DWORD PTR [esi+0x7d]
  406041:	inc    DWORD PTR [ecx-0x71]
  406044:	push   ebx
  406045:	xor    al,bl
  406047:	xor    ebx,edi
  406049:	pop    esp
  40604a:	cmp    eax,0xc725c92f
  40604f:	repnz mov ecx,0x4789f316
  406055:	pop    ebx
  406056:	add    dl,al
  406058:	pop    ecx
  406059:	call   0x304d:0x64413cef
  406060:	and    DWORD PTR [edx+0x1ac0c573],ebp
  406066:	sbb    al,0x78
  406068:	pop    ecx
  406069:	jnp    0x406004
  40606b:	dec    ebx
  40606c:	ret    
  40606d:	div    DWORD PTR [ecx+0x6fa0f241]
  406073:	call   0x20e1165e
  406078:	fst    QWORD PTR [edi+eiz*8+0x6e]
  40607c:	mov    ah,0xb9
  40607e:	loopne 0x40604c
  406080:	les    eax,FWORD PTR [esi-0x2f]
  406083:	test   eax,0xfbb107d
  406088:	jmp    0x40602f
  40608a:	hlt    
  40608b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40608c:	sahf   
  40608d:	jl     0x406068
  40608f:	jno    0x40601a
  406091:	popa   
  406092:	add    eax,0xc241c0ff
  406097:	test   al,0xb6
  406099:	mov    BYTE PTR [edi+0x51],bh
  40609c:	pop    DWORD PTR [edi-0x233d448b]
  4060a2:	mov    dl,0x41
  4060a4:	ins    DWORD PTR es:[edi],dx
  4060a5:	(bad)  
  4060a6:	repnz setp BYTE PTR [edi]
  4060aa:	jle    0x40608c
  4060ac:	sub    bh,BYTE PTR [ebx+0x4cb1c859]
  4060b2:	or     cl,BYTE PTR ds:0xe1c676f8
  4060b8:	aaa    
  4060b9:	xor    eax,0xf963a4a5
  4060be:	call   0x136f:0x5f48c7ff
  4060c5:	sahf   
  4060c6:	and    BYTE PTR [edi],dh
  4060c8:	pop    ecx
  4060c9:	cwde   
  4060ca:	push   0xffffff8c
  4060cc:	fs pusha 
  4060ce:	lahf   
  4060cf:	mov    ecx,0x8811102c
  4060d4:	sbb    cl,BYTE PTR [edi+0x121460cc]
  4060da:	or     DWORD PTR [edx],esi
  4060dc:	push   ss
  4060dd:	nop
  4060de:	mov    BYTE PTR [ecx+0x29],ah
  4060e1:	jg     0x40615c
  4060e3:	xor    DWORD PTR [edi+0x2970046c],esp
  4060e9:	dec    esp
  4060ea:	push   es
  4060eb:	fbstp  TBYTE PTR [ebx-0x6fed7120]
  4060f1:	sub    al,0xc5
  4060f3:	push   ebx
  4060f4:	(bad)  
  4060f5:	mov    ds:0x5cf924c5,eax
  4060fa:	jecxz  0x4060f3
  4060fc:	loopne 0x406169
  4060fe:	push   ebp
  4060ff:	sub    al,0xc9
  406101:	repz mov al,ds:0x4f237c40
  406107:	pusha  
  406108:	jl     0x406137
  40610a:	les    eax,FWORD PTR [ebx-0x6176429f]
  406110:	call   0xe0c11d85
  406115:	stc    
  406116:	sub    eax,0x432d0af4
  40611b:	jle    0x4060b4
  40611d:	push   ss
  40611e:	retf   
  40611f:	dec    ecx
  406120:	aaa    
  406121:	out    0xcb,eax
  406123:	test   esp,esi
  406125:	xor    al,0x1c
  406127:	or     bh,dh
  406129:	mov    ds:0xf1360b7e,eax
  40612e:	mov    ?,ebx
  406130:	mov    BYTE PTR [ebp+ebx*4+0x78495cbb],0x3d
  406138:	jmp    0x28c4:0x80f43ce2
  40613f:	arpl   WORD PTR [esi],cx
  406141:	stos   BYTE PTR es:[edi],al
  406142:	inc    ecx
  406143:	sub    al,0xf0
  406145:	lahf   
  406146:	fimul  WORD PTR [esi+0x1f]
  406149:	ror    DWORD PTR [ebp-0x5e],0xf0
  40614d:	jmp    0xaea52d47
  406152:	and    ecx,DWORD PTR [ebp+0x36032a24]
  406158:	sbb    edx,esp
  40615a:	adc    DWORD PTR [eax+0x1a],ecx
  40615d:	aad    0x57
  40615f:	xchg   esp,eax
  406160:	loop   0x4061c7
  406162:	mov    cl,0xc5
  406164:	lds    edx,FWORD PTR [ebx]
  406166:	ins    DWORD PTR es:[edi],dx
  406167:	push   ss
  406168:	add    eax,0x49e8bccf
  40616d:	sbb    edi,DWORD PTR [esi]
  40616f:	or     BYTE PTR [esi+eax*4],ah
  406172:	and    eax,0x8c588605
  406177:	addr16 mov al,0x68
  40617a:	sub    al,0xf4
  40617c:	add    DWORD PTR [ebx-0x3a17be06],0x6c412971
  406186:	push   ss
  406187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406188:	inc    eax
  406189:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40618b:	repnz imul ebp,edx,0xa4197c5b
  406192:	lods   al,BYTE PTR ds:[esi]
  406193:	sbb    eax,0x17092bda
  406198:	cdq    
  406199:	loop   0x406140
  40619b:	xor    ecx,DWORD PTR [ebx]
  40619d:	iret   
  40619e:	mov    esp,0x5cc91d2b
  4061a3:	inc    edx
  4061a4:	or     ch,BYTE PTR [esi-0x3b]
  4061a7:	addr16 loopne 0x40617b
  4061aa:	dec    edx
  4061ab:	pop    ebx
  4061ac:	sub    DWORD PTR [esi+0x4c],ecx
  4061af:	scas   eax,DWORD PTR es:[edi]
  4061b0:	and    DWORD PTR [edi+ebx*1],edi
  4061b3:	adc    DWORD PTR [ebp+0x3a557765],esi
  4061b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061ba:	sub    al,0x34
  4061bc:	inc    ebx
  4061bd:	retf   
  4061be:	sar    BYTE PTR [edx],0xb3
  4061c1:	mov    eax,ds:0x888086ea
  4061c6:	mov    ebx,0xf8b33bee
  4061cb:	ficomp WORD PTR [eax-0x37d63c29]
  4061d1:	dec    ebx
  4061d2:	pop    edi
  4061d3:	xchg   ebp,eax
  4061d4:	inc    ebp
  4061d5:	mov    ebp,0x7b4e4b67
  4061da:	dec    edx
  4061db:	pop    eax
  4061dc:	add    cl,cl
  4061de:	inc    ebp
  4061df:	push   ecx
  4061e0:	lods   eax,DWORD PTR ds:[esi]
  4061e1:	inc    esi
  4061e2:	or     eax,0x64230d8c
  4061e7:	int    0xdd
  4061e9:	lods   al,BYTE PTR ds:[esi]
  4061ea:	mov    ?,WORD PTR [edx-0x6994123]
  4061f0:	arpl   bx,si
  4061f2:	sub    eax,0x37b91d3d
  4061f7:	test   DWORD PTR [eax+0x2d6c39a7],eax
  4061fd:	dec    ecx
  4061fe:	push   eax
  4061ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406200:	mov    ebp,gs
  406202:	xchg   edi,eax
  406203:	xchg   ecx,eax
  406204:	(bad)  
  406205:	sub    ah,BYTE PTR [ecx-0x4b4333]
  40620b:	xsaveopt [esi-0x33]
  40620f:	test   eax,0x968165b9
  406214:	add    DWORD PTR [edx],eax
  406216:	xchg   esp,eax
  406217:	and    ebp,DWORD PTR [ecx+ebx*8]
  40621a:	xchg   ebx,eax
  40621b:	in     al,dx
  40621c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40621d:	bound  esp,QWORD PTR [edi+esi*8-0x67]
  406221:	clc    
  406222:	mov    edi,0xf81af2b0
  406227:	gs pop ebx
  406229:	ds jns 0x406216
  40622c:	ret    0x3bdd
  40622f:	push   DWORD PTR [edi+edi*2]
  406232:	add    DWORD PTR [eax*1-0x372c943],esi
  406239:	and    eax,0x291513c7
  40623e:	or     DWORD PTR [ebx-0x8cf7167],esp
  406244:	dec    ebx
  406245:	dec    ecx
  406246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406247:	push   ds
  406248:	sub    bl,BYTE PTR [edi+0x65]
  40624b:	adc    DWORD PTR [ebx+0x18],ebp
  40624e:	jbe    0x4062b7
  406250:	pop    ebp
  406251:	add    BYTE PTR [eax+0x19],cl
  406254:	inc    eax
  406255:	adc    ecx,DWORD PTR [ecx]
  406257:	stc    
  406258:	test   BYTE PTR [esi],0x59
  40625b:	jmp    0x406280
  40625d:	sbb    ch,ah
  40625f:	aaa    
  406260:	push   ecx
  406261:	leave  
  406262:	sbb    dh,BYTE PTR [ecx-0x5b3d4ec0]
  406268:	popa   
  406269:	pop    ds
  40626a:	sahf   
  40626b:	stc    
  40626c:	pushf  
  40626d:	arpl   WORD PTR [esp+esi*4-0x5810f46a],bx
  406274:	jae    0x40625a
  406276:	xlat   BYTE PTR ds:[ebx]
  406277:	mov    ebp,0x21fb0b9b
  40627c:	call   0x909d4d74
  406281:	cmp    al,bl
  406283:	push   edx
  406284:	pop    ecx
  406285:	jmp    0xfd3d6a41
  40628a:	push   eax
  40628b:	jns    0x40622f
  40628d:	xlat   BYTE PTR ds:[ebx]
  40628e:	fistp  DWORD PTR [edi+edi*2-0x2d]
  406292:	jle    0x40626e
  406294:	inc    ebp
  406295:	cld    
  406296:	or     DWORD PTR [eax-0x69],0x64d8971f
  40629d:	cli    
  40629e:	dec    eax
  40629f:	fild   WORD PTR fs:[ebx-0x19]
  4062a3:	push   esp
  4062a4:	mov    ah,0x29
  4062a6:	or     al,0xd8
  4062a8:	mov    ecx,0xf8c5511d
  4062ad:	and    BYTE PTR [ecx+0xc],bl
  4062b0:	repnz outs dx,BYTE PTR ds:[esi]
  4062b2:	ror    DWORD PTR [ebx+ecx*4-0x4e656466],0x19
  4062ba:	push   0x5fb6d3b4
  4062bf:	add    al,BYTE PTR [edi]
  4062c1:	jne    0x4062d7
  4062c3:	scas   al,BYTE PTR es:[edi]
  4062c4:	pusha  
  4062c5:	gs std 
  4062c7:	cwde   
  4062c8:	icebp  
  4062c9:	stc    
  4062ca:	cwde   
  4062cb:	fcmovb st,st(7)
  4062cd:	sub    dl,BYTE PTR [ebx-0x934cac5]
  4062d3:	fwait
  4062d4:	inc    ebp
  4062d5:	mov    esi,0xfa05bf79
  4062da:	pop    esi
  4062db:	push   edi
  4062dc:	dec    esi
  4062dd:	aas    
  4062de:	xor    eax,0x22aaffd8
  4062e3:	push   0xde708196
  4062e8:	or     BYTE PTR [ecx],ch
  4062ea:	inc    DWORD PTR [eax+edx*8]
  4062ed:	pop    edx
  4062ee:	inc    ebp
  4062ef:	fisubr DWORD PTR [esi+esi*4-0x4e3a72dd]
  4062f6:	es push ds
  4062f8:	mov    ah,0x39
  4062fa:	imul   edx,DWORD PTR [ebx+0x7],0xe43d4875
  406301:	scas   al,BYTE PTR es:[edi]
  406302:	mov    dl,0x3
  406304:	loope  0x406337
  406306:	sub    cl,BYTE PTR [eax]
  406308:	mov    ecx,DWORD PTR [ecx+ecx*4]
  40630b:	sbb    DWORD PTR [ebx-0x7fd74dca],0x5c
  406312:	jb     0x40636b
  406314:	mov    BYTE PTR [eax+0xe462f8c],al
  40631a:	and    esi,edi
  40631c:	ficomp DWORD PTR cs:[eax+edi*4]
  406320:	pop    ss
  406321:	push   0x6e47cbf
  406326:	mov    edi,0xebf64f59
  40632b:	mov    al,0xfa
  40632d:	int3   
  40632e:	stc    
  40632f:	jns    0x406302
  406331:	aam    0x55
  406333:	sbb    esp,ebx
  406335:	test   BYTE PTR [esi],al
  406337:	inc    ebx
  406338:	(bad)  
  406339:	lea    esp,[ebx+ecx*1+0x718469a]
  406340:	sbb    esi,edx
  406342:	out    0x71,al
  406344:	test   eax,0xd68a21ac
  406349:	loope  0x40636d
  40634b:	imul   ecx,edi,0x36
  40634e:	(bad)  
  40634f:	popa   
  406350:	dec    edi
  406351:	mov    esp,0x35d7b75
  406356:	xlat   BYTE PTR ds:[ebx]
  406357:	push   ebx
  406358:	xchg   ebp,eax
  406359:	pop    ecx
  40635a:	int3   
  40635b:	(bad)  
  40635c:	iret   
  40635d:	hlt    
  40635e:	jns    0x4062e1
  406360:	pop    ebx
  406361:	or     dh,BYTE PTR [edi+0x71662768]
  406367:	aas    
  406368:	sub    eax,0x3ed42d27
  40636d:	push   ds
  40636e:	xchg   ecx,eax
  40636f:	(bad)  
  406371:	nop
  406372:	push   esp
  406373:	jnp    0x4063db
  406375:	push   ss
  406376:	fwait
  406377:	mov    edi,DWORD PTR [eax]
  406379:	mov    eax,ds:0x7b5f4296
  40637e:	or     dl,0x9c
  406381:	sub    eax,0x9ee5038c
  406386:	mov    bl,0xb7
  406388:	lea    eax,[esi+0x45]
  40638b:	pop    ds
  40638c:	mov    eax,0x3466c70
  406391:	fisttp QWORD PTR [eax+ebx*2+0x64a23341]
  406398:	cmp    eax,DWORD PTR ds:0xa3025a7b
  40639e:	out    0xbb,al
  4063a0:	xchg   ebx,eax
  4063a1:	popa   
  4063a2:	lock add eax,0x496a9525
  4063a8:	fsubrp st(3),st
  4063aa:	sbb    DWORD PTR [edx+0xc],ebp
  4063ad:	aad    0x7f
  4063af:	outs   dx,DWORD PTR fs:[esi]
  4063b1:	aad    0x1e
  4063b3:	mov    eax,0xfdc47130
  4063b8:	or     BYTE PTR ds:0x22147fdb,bh
  4063be:	pop    edx
  4063bf:	and    al,0x6d
  4063c1:	cld    
  4063c2:	in     eax,dx
  4063c3:	pop    edx
  4063c4:	sbb    ah,BYTE PTR [ecx]
  4063c6:	mov    bh,0x2a
  4063c8:	retf   0x18ab
  4063cb:	pushf  
  4063cc:	out    dx,al
  4063cd:	mov    bl,0x66
  4063cf:	iret   
  4063d0:	push   ds
  4063d1:	lock cld 
  4063d3:	sbb    al,0x92
  4063d5:	in     al,0xb5
  4063d7:	push   ebp
  4063d8:	int3   
  4063d9:	xchg   edx,eax
  4063da:	adc    eax,0x4137c06c
  4063df:	cmp    DWORD PTR [esp+esi*8-0x71],ecx
  4063e3:	push   eax
  4063e4:	out    0x2b,eax
  4063e6:	pop    eax
  4063e7:	loope  0x4063de
  4063e9:	sti    
  4063ea:	and    ebx,DWORD PTR cs:[edi+0x749688ad]
  4063f1:	inc    ebp
  4063f2:	cmp    ah,BYTE PTR cs:[edi-0x2d]
  4063f6:	sbb    al,0x83
  4063f8:	sub    esi,DWORD PTR [eax]
  4063fa:	xor    dh,BYTE PTR [eax+0x4a]
  4063fd:	and    ebp,DWORD PTR [ecx+0x30fef098]
  406403:	adc    al,0xda
  406405:	retf   0xae1b
  406408:	sub    DWORD PTR [ebx-0x53bf63c2],edi
  40640e:	test   DWORD PTR [ecx-0x4febd355],0xed36f7de
  406418:	mov    ebx,0x27d71b38
  40641d:	std    
  40641e:	jb     0x406412
  406420:	out    dx,eax
  406421:	mov    es,WORD PTR [ecx]
  406423:	push   esp
  406424:	out    0x13,al
  406426:	mov    eax,0xa34e80a3
  40642b:	test   al,0x2e
  40642d:	cld    
  40642e:	stc    
  40642f:	mov    ?,WORD PTR [edx+ebx*1-0x120aba45]
  406436:	mov    ebp,fs
  406438:	jne    0x406428
  40643a:	jno    0x406438
  40643c:	pushf  
  40643d:	scas   eax,DWORD PTR es:[edi]
  40643e:	mov    ecx,0xf1b0af8d
  406443:	daa    
  406444:	lahf   
  406445:	call   0x457:0x3db08bc1
  40644c:	or     DWORD PTR [ecx-0x77],ecx
  40644f:	adc    al,0xc9
  406451:	scas   al,BYTE PTR es:[edi]
  406452:	call   0x63395729
  406457:	popf   
  406458:	cdq    
  406459:	xlat   BYTE PTR ds:[ebx]
  40645a:	pop    es
  40645b:	test   DWORD PTR [ecx+0x2b5399ec],ebx
  406461:	cmc    
  406462:	ins    DWORD PTR es:[edi],dx
  406463:	(bad)  
  406464:	ret    
  406465:	loope  0x406406
  406467:	ins    DWORD PTR es:[edi],dx
  406468:	jmp    0xd11:0xbffae277
  40646f:	pop    ecx
  406470:	pop    ebx
  406471:	stos   DWORD PTR es:[edi],eax
  406472:	mov    edi,0x25d00b11
  406477:	inc    ecx
  406478:	out    dx,al
  406479:	jg     0x4064c4
  40647b:	adc    DWORD PTR [ebp-0x315ff268],edi
  406481:	xor    ah,BYTE PTR [esi+0x7]
  406484:	and    al,0xa5
  406486:	sub    al,0x56
  406488:	mov    cl,0x8
  40648a:	push   es
  40648b:	mov    ebp,0x54b1ef99
  406490:	not    ebx
  406492:	in     eax,dx
  406493:	fcmovnu st,st(5)
  406495:	inc    edx
  406496:	ins    BYTE PTR es:[edi],dx
  406497:	mov    ds:0xd03c769e,al
  40649c:	mov    ah,0x8a
  40649e:	jae    0x40648e
  4064a0:	mov    ch,0x54
  4064a2:	cdq    
  4064a3:	add    esi,0x7a
  4064a6:	popa   
  4064a7:	sar    esp,cl
  4064a9:	adc    DWORD PTR [ebx+0x3c619761],ebx
  4064af:	dec    ebp
  4064b0:	outs   dx,DWORD PTR ds:[esi]
  4064b1:	sub    eax,0x4f4fd717
  4064b6:	or     eax,0xba991ba4
  4064bb:	jb     0x406444
  4064bd:	sub    BYTE PTR [esi],cl
  4064bf:	inc    edx
  4064c0:	cld    
  4064c1:	jle    0x406510
  4064c3:	and    esi,ebx
  4064c5:	lock xor eax,0x3caed492
  4064cb:	adc    eax,ebx
  4064cd:	frstor [ecx+0x3c]
  4064d0:	imul   eax,DWORD PTR [ebx+esi*1+0xae7914d],0x9390266a
  4064db:	push   esi
  4064dc:	rol    DWORD PTR [eax],1
  4064de:	adc    al,BYTE PTR [ebx-0x61eb99b6]
  4064e4:	mov    al,0xeb
  4064e6:	or     cl,ch
  4064e8:	xchg   esi,eax
  4064e9:	jo     0x4064a8
  4064eb:	addr16 jo 0x4064ee
  4064ee:	inc    esi
  4064ef:	scas   eax,DWORD PTR es:[edi]
  4064f0:	jnp    0x4064fd
  4064f2:	xor    eax,0x5721bbe9
  4064f7:	dec    edi
  4064f8:	pop    eax
  4064f9:	lods   al,BYTE PTR ds:[esi]
  4064fa:	push   es
  4064fb:	sbb    DWORD PTR [esi+0xe],ebp
  4064fe:	retf   
  4064ff:	rcl    DWORD PTR [ecx+eiz*1-0x4936614c],0x33
  406507:	daa    
  406508:	push   ebp
  406509:	adc    eax,0x3351383d
  40650e:	fs lock sbb eax,0x290dac35
  406515:	and    cl,BYTE PTR [esi+ebx*4-0x195810f0]
  40651c:	add    esi,ebp
  40651e:	sub    eax,0x8debd48c
  406523:	sbb    al,0x6f
  406525:	xchg   esp,eax
  406526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406527:	in     al,0x72
  406529:	xor    eax,0x7a7c84f0
  40652e:	test   DWORD PTR [ebx],0x40200bfe
  406534:	mov    WORD PTR [esp+ecx*4],ss
  406537:	sbb    al,0x3f
  406539:	imul   ebx,DWORD PTR [edi+0x79],0x5de32f5
  406540:	pop    es
  406541:	call   0x2a1:0x8cebba47
  406548:	mov    dh,0x35
  40654a:	das    
  40654b:	pop    esi
  40654c:	dec    ebp
  40654d:	pop    esi
  40654e:	mov    ah,0x9c
  406550:	mov    ah,0x4c
  406552:	popf   
  406553:	int    0x53
  406555:	in     al,dx
  406556:	mov    bl,bh
  406558:	or     DWORD PTR [esi-0x1f],esp
  40655b:	mov    ch,0x12
  40655d:	pop    ds
  40655e:	dec    ebp
  40655f:	cmp    eax,0xb0b3add1
  406564:	(bad)  
  406565:	sub    bh,dh
  406567:	ret    
  406568:	add    cl,BYTE PTR [esi+0x5e]
  40656b:	cmp    BYTE PTR es:[ebp-0x16],ch
  40656f:	inc    esi
  406570:	imul   BYTE PTR [eax-0x2f68d38b]
  406576:	mov    eax,0xd6ccea6c
  40657b:	mov    bh,0x84
  40657d:	or     ch,BYTE PTR [ecx-0x2c]
  406580:	sbb    DWORD PTR [esi+0x2164cb3b],0x12
  406587:	xchg   edi,eax
  406588:	jne    0x40651d
  40658a:	mov    al,ds:0x27e1e248
  40658f:	dec    esp
  406590:	inc    ecx
  406591:	pop    ecx
  406592:	sub    BYTE PTR [eax-0x6],bh
  406595:	push   0x1be78224
  40659a:	xchg   edx,eax
  40659b:	jmp    0x7f7a:0x50fd5cab
  4065a2:	xor    dl,BYTE PTR [eax-0x3d]
  4065a5:	cli    
  4065a6:	mov    cl,0xc8
  4065a8:	mov    ah,0x85
  4065aa:	sbb    bl,0xbf
  4065ad:	in     al,0xdc
  4065af:	push   edi
  4065b0:	test   al,0x4f
  4065b2:	(bad)  
  4065b3:	dec    ebp
  4065b4:	cmc    
  4065b5:	pop    ebx
  4065b6:	jb     0x4065fb
  4065b8:	(bad)  
  4065b9:	mov    esp,DWORD PTR [edx+eax*2-0x6990c036]
  4065c0:	adc    ebp,DWORD PTR [ecx+0x4c099162]
  4065c6:	test   eax,0xf7eb381a
  4065cb:	jnp    0x4065b4
  4065cd:	cld    
  4065ce:	xchg   DWORD PTR [edi+0x3e],esp
  4065d1:	add    DWORD PTR [edx-0x179a9af0],esi
  4065d7:	adc    DWORD PTR [ebx-0x52],edx
  4065da:	ficom  WORD PTR [edx+0x4faabcd2]
  4065e0:	push   0xe690bca8
  4065e5:	test   eax,0x3a54fd9
  4065ea:	jl     0x406626
  4065ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ed:	inc    eax
  4065ee:	sbb    edx,DWORD PTR [edx-0x7debcac0]
  4065f4:	add    eax,0xf4d676e1
  4065f9:	push   eax
  4065fa:	or     eax,DWORD PTR ds:0xb7c56e86
  406600:	shl    DWORD PTR [eax-0x41],0x2
  406604:	mov    eax,0x8f99bb1c
  406609:	xchg   esi,eax
  40660a:	(bad)  
  40660b:	and    al,0xa8
  40660d:	mov    DWORD PTR [ebx],0xcf63cb95
  406613:	int3   
  406614:	cmp    dh,BYTE PTR [ebp-0x272c55d2]
  40661a:	sbb    al,BYTE PTR [ebx+0x5d4b5dc0]
  406620:	pop    esi
  406621:	pop    esp
  406622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406623:	inc    edx
  406624:	xchg   ebx,eax
  406625:	jp     0x4065c3
  406627:	mov    ch,0x44
  406629:	lahf   
  40662a:	aaa    
  40662b:	jg     0x40667b
  40662d:	retf   
  40662e:	cmp    BYTE PTR [edi],bl
  406630:	pop    ebx
  406631:	sbb    al,0x4a
  406633:	cli    
  406634:	ret    0x4e6e
  406637:	or     eax,0x2053b81f
  40663c:	jo     0x5d339350
  406642:	aaa    
  406643:	test   al,0x4a
  406645:	jecxz  0x4066b9
  406647:	fistp  DWORD PTR [ecx+0x734ea4ac]
  40664d:	mov    bl,0x5b
  40664f:	stos   DWORD PTR es:[edi],eax
  406650:	jo     0x40669b
  406652:	ja     0x40663c
  406654:	dec    esi
  406655:	fwait
  406656:	test   BYTE PTR [ebx-0x1c],bh
  406659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40665a:	mov    ch,0xe0
  40665d:	mov    dl,0xc1
  40665f:	add    eax,0xd3a07162
  406664:	cmp    eax,0x4483c2ce
  406669:	dec    ebp
  40666a:	out    0x14,al
  40666c:	mov    ds:0xafca8112,al
  406671:	outs   dx,DWORD PTR ds:[esi]
  406672:	sti    
  406673:	mov    ah,0x68
  406675:	ret    0x9ad5
  406678:	jne    0x406664
  40667a:	pop    ebx
  40667b:	or     cl,dh
  40667d:	hlt    
  40667e:	je     0x4066bc
  406680:	dec    esp
  406681:	lock sub BYTE PTR [edx+ebx*8+0x64aebc41],dh
  406689:	push   eax
  40668a:	push   eax
  40668b:	push   ss
  40668c:	sbb    cl,cl
  40668e:	adc    ax,dx
  406691:	clc    
  406692:	add    dh,al
  406694:	fadd   QWORD PTR [esi+0x3a]
  406697:	hlt    
  406698:	adc    ecx,edx
  40669a:	std    
  40669b:	pushf  
  40669c:	test   BYTE PTR [esi-0x10806ce5],cl
  4066a2:	enter  0x14ca,0x1a
  4066a6:	enterw 0x29d6,0xe0
  4066ab:	sbb    eax,0xfd4e2fff
  4066b0:	add    DWORD PTR [edx-0x6a],esp
  4066b3:	call   0xadfb:0xa9b631e9
  4066ba:	sbb    ebx,0x935e8118
  4066c0:	inc    eax
  4066c1:	aad    0x2c
  4066c3:	inc    eax
  4066c4:	jp     0x406691
  4066c6:	pop    edx
  4066c7:	xchg   esp,eax
  4066c8:	adc    eax,0xec51d024
  4066cd:	mov    ecx,ecx
  4066cf:	pusha  
  4066d0:	inc    ebx
  4066d1:	std    
  4066d2:	ret    
  4066d3:	not    BYTE PTR [ecx+0x435c356c]
  4066d9:	xchg   edx,eax
  4066da:	aad    0xb6
  4066dc:	and    eax,0x997264ae
  4066e1:	mov    ah,0xcb
  4066e3:	call   0x534a1d4d
  4066e8:	pop    ecx
  4066e9:	xor    al,0xd8
  4066eb:	mov    ds:0xfdc6febd,eax
  4066f0:	into   
  4066f1:	mov    ch,0xde
  4066f3:	cmp    ebx,DWORD PTR [eax]
  4066f5:	shl    BYTE PTR [eax+eax*1+0x47ca8526],1
  4066fc:	or     BYTE PTR [ebx+0x79],0x2e
  406700:	dec    edx
  406701:	imul   ecx,DWORD PTR [ebp+0x68],0x17
  406705:	mov    edi,0x87e76b53
  40670a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40670b:	adc    al,0x34
  40670d:	stos   DWORD PTR es:[edi],eax
  40670e:	ret    0x1fbf
  406711:	dec    ebp
  406712:	repnz in eax,0xe1
  406715:	je     0x40671e
  406717:	push   0x49
  406719:	jno    0x4066f0
  40671b:	and    DWORD PTR [esi-0x192931a1],eax
  406721:	ins    BYTE PTR es:[edi],dx
  406722:	mov    eax,ds:0x6d73aed1
  406727:	push   0xffffffe3
  406729:	inc    esp
  40672a:	xor    dl,ch
  40672c:	enter  0x5965,0xee
  406730:	or     ecx,DWORD PTR [ebp-0x638639ed]
  406736:	jns    0x4066dd
  406738:	push   ss
  406739:	sbb    DWORD PTR [ebp+0x7d7a9190],edi
  40673f:	pop    ecx
  406740:	adc    dh,BYTE PTR [edx-0x4ad0eda7]
  406746:	pop    esp
  406747:	cdq    
  406748:	int3   
  406749:	fwait
  40674a:	test   BYTE PTR ds:0x5fef39d5,0x85
  406751:	push   ebx
  406752:	out    dx,al
  406753:	or     al,0x75
  406755:	cdq    
  406756:	mov    DWORD PTR [eax+ebp*2+0x35],ecx
  40675a:	mov    cl,0x88
  40675c:	sbb    ch,BYTE PTR [ecx+0x68de650a]
  406762:	dec    edi
  406763:	repz aam 0x1d
  406766:	mov    al,ds:0x99e88f16
  40676b:	cmp    eax,0xbc370a1a
  406770:	test   al,0xaa
  406772:	push   ds
  406773:	inc    edi
  406774:	jmp    0x406727
  406776:	sbb    edi,DWORD PTR [ecx]
  406778:	mov    ah,0xda
  40677a:	pop    edi
  40677b:	scas   eax,DWORD PTR es:[edi]
  40677c:	dec    esp
  40677d:	add    edi,DWORD PTR [esp+edi*8]
  406780:	dec    ebx
  406781:	lock adc ah,BYTE PTR [esi+0xa]
  406785:	jb     0x406764
  406787:	xchg   esi,eax
  406788:	and    eax,0x40cec4fa
  40678d:	lea    esp,[ecx+0x12]
  406790:	jmp    0x406805
  406792:	cmp    esp,0x58e991f5
  406798:	sub    DWORD PTR [edx],edx
  40679a:	jb     0x406789
  40679c:	cld    
  40679d:	cmp    ebp,ebx
  40679f:	dec    ebp
  4067a0:	mov    WORD PTR [edx-0x5facb584],es
  4067a6:	dec    ebx
  4067a7:	dec    esp
  4067a8:	cmp    DWORD PTR [edx-0x198744a7],esp
  4067ae:	add    eax,esp
  4067b0:	push   ebx
  4067b1:	fldcw  WORD PTR [ebp-0x7a034dd1]
  4067b7:	div    DWORD PTR [edx-0x4e]
  4067ba:	into   
  4067bb:	and    bh,cl
  4067bd:	and    eax,0x54bd8406
  4067c2:	mov    esi,0xdaf6c0f7
  4067c7:	mov    ebx,0xbca2645e
  4067cc:	push   ebp
  4067cd:	mov    WORD PTR [edi-0x10],?
  4067d0:	mov    ds:0x49ad7a41,al
  4067d5:	leave  
  4067d6:	lahf   
  4067d7:	jo     0x406807
  4067d9:	daa    
  4067da:	push   0xffffff8d
  4067dc:	dec    esi
  4067dd:	(bad)  
  4067de:	ss jecxz 0x406860
  4067e1:	nop
  4067e2:	loope  0x406766
  4067e4:	ins    BYTE PTR es:[edi],dx
  4067e5:	shl    BYTE PTR [edx+0x3ddec88b],1
  4067eb:	add    edx,DWORD PTR ds:[ebp+0x1b6b65fd]
  4067f2:	setne  BYTE PTR [edx+0x1a]
  4067f6:	or     BYTE PTR [ebx+0x4c],bh
  4067f9:	dec    eax
  4067fa:	xor    ebx,esi
  4067fc:	pop    esp
  4067fd:	sbb    esp,esi
  4067ff:	ins    DWORD PTR es:[edi],dx
  406800:	add    al,0x97
  406802:	mov    ebx,0x28e65586
  406807:	fdivrp st(7),st
  406809:	fcomp  QWORD PTR [ebx]
  40680b:	jb     0x40682e
  40680d:	fiadd  WORD PTR [ebx+0x27]
  406810:	fld    st(5)
  406812:	imul   eax,DWORD PTR [edi],0xcaf348a9
  406818:	push   esi
  406819:	(bad)  
  40681b:	ror    DWORD PTR [edx*4-0x7aa5ffb0],0xd4
  406823:	(bad)  
  406825:	xchg   ebx,eax
  406826:	xchg   esi,eax
  406827:	jno    0x4067f3
  406829:	add    BYTE PTR [eax-0x75],bh
  40682c:	mov    dh,0x35
  40682e:	imul   ebx,DWORD PTR [edi],0x3c843cc4
  406834:	int    0x9a
  406836:	sbb    eax,0x2bbd45f9
  40683b:	xchg   ecx,eax
  40683c:	inc    edi
  40683d:	push   ebx
  40683e:	xchg   edx,eax
  40683f:	lock xchg DWORD PTR [ecx+0x61],esp
  406843:	cmc    
  406844:	fsubp  st(7),st
  406846:	mov    WORD PTR [ebp-0x31981c0d],ds
  40684c:	das    
  40684d:	mov    ds:0x8cdce665,eax
  406852:	inc    ebx
  406853:	inc    ecx
  406854:	inc    eax
  406855:	sub    DWORD PTR [ebx],0xfaecad11
  40685b:	aas    
  40685c:	dec    esp
  40685d:	mov    DWORD PTR [edi],ebp
  40685f:	fistp  WORD PTR [edi+eax*4-0x715f5f02]
  406866:	or     eax,0x8070a6ee
  40686b:	push   edx
  40686c:	pushf  
  40686d:	ds mov dh,0x97
  406870:	shl    cl,cl
  406872:	out    dx,eax
  406873:	sbb    esi,edi
  406875:	scas   eax,DWORD PTR es:[edi]
  406876:	not    DWORD PTR [edx+0x23]
  406879:	rcl    ebp,cl
  40687b:	inc    ebx
  40687c:	xor    al,0x88
  40687e:	jle    0x406815
  406880:	sbb    DWORD PTR [edx-0x23fbe153],esp
  406886:	not    DWORD PTR [edx]
  406888:	sub    al,BYTE PTR [ebp+0x77]
  40688b:	(bad)  
  40688e:	scas   eax,DWORD PTR es:[edi]
  40688f:	xchg   edx,eax
  406890:	test   cl,dh
  406892:	jmp    0x3de4da0
  406897:	sub    al,0xd3
  406899:	sub    DWORD PTR [edx],0xffffff95
  40689c:	or     BYTE PTR [eax],al
  40689e:	and    eax,0x19c211c5
  4068a3:	jg     0x4068c9
  4068a5:	pop    ecx
  4068a6:	je     0x4068d6
  4068a8:	lods   al,BYTE PTR ds:[esi]
  4068a9:	cmp    edx,DWORD PTR [ebp+0x6fb3ab96]
  4068af:	cmp    dl,BYTE PTR [ebx-0x6c]
  4068b2:	push   esi
  4068b3:	mov    edi,0x2ade485d
  4068b8:	aas    
  4068b9:	retf   0x969e
  4068bc:	mov    esi,0x3347be8d
  4068c1:	add    al,0xb0
  4068c3:	loopne 0x406873
  4068c5:	ret    
  4068c6:	mov    dl,0x95
  4068c8:	lock sahf 
  4068ca:	jg     0x406915
  4068cc:	xchg   edx,eax
  4068cd:	popf   
  4068ce:	nop
  4068cf:	(bad)
  4068d2:	in     al,0xca
  4068d4:	(bad)  
  4068d5:	mov    dh,0x66
  4068d7:	or     BYTE PTR [ebx],bh
  4068d9:	mov    ebp,0x18b5ce4d
  4068de:	dec    edx
  4068df:	push   0xffffffe3
  4068e1:	inc    esp
  4068e2:	cmp    BYTE PTR [ecx],0x49
  4068e5:	push   0x54
  4068e7:	add    esp,esp
  4068e9:	sub    eax,DWORD PTR [edi+0x13de9438]
  4068ef:	enter  0x1b9e,0x2e
  4068f3:	or     eax,DWORD PTR [ebx-0x1c195078]
  4068f9:	push   es
  4068fa:	nop
  4068fb:	jecxz  0x4068dd
  4068fd:	pushf  
  4068fe:	sbb    eax,0x19ce3b9d
  406903:	int    0x5e
  406905:	cmp    DWORD PTR [esi],edi
  406907:	addr16 xchg ecx,eax
  406909:	add    ch,ah
  40690b:	je     0x406909
  40690d:	mov    ds:0xddad0377,eax
  406912:	int    0x9
  406914:	mov    eax,0x490cc451
  406919:	mov    ebp,0x987d3cf5
  40691e:	ret    0x753f
  406921:	mov    esi,DWORD PTR [edx]
  406923:	(bad)  
  406924:	jecxz  0x406933
  406926:	gs pop ds
  406928:	test   DWORD PTR [ebx-0x5],0xc2e47113
  40692f:	out    dx,al
  406930:	jmp    0x40692e
  406932:	jp     0x4069a1
  406934:	(bad)  
  406935:	fmul   QWORD PTR [esi+edi*4-0x1ed72ed5]
  40693c:	popa   
  40693d:	dec    ebp
  40693e:	push   ecx
  40693f:	mov    ah,0xae
  406941:	dec    edx
  406942:	dec    edi
  406943:	cdq    
  406944:	js     0x406956
  406946:	push   edi
  406947:	adc    BYTE PTR [edx+0x62],0x8b
  40694b:	jo     0x406929
  40694d:	mov    WORD PTR [ebp+ebx*4+0x6372f585],es
  406954:	dec    eax
  406955:	pop    esp
  406956:	enter  0x392c,0x4b
  40695a:	mov    ah,bl
  40695c:	pop    es
  40695d:	ficomp WORD PTR [esp+eax*4+0x4f8befa6]
  406964:	push   cs
  406965:	pop    ecx
  406966:	out    dx,al
  406967:	pop    ebx
  406968:	mov    ds:0x4936030e,eax
  40696d:	push   ebx
  40696e:	jae    0x4069dd
  406970:	cmp    eax,0xda8504c5
  406975:	out    dx,al
  406976:	call   0x230c:0x1e237c5d
  40697d:	or     eax,0x89b85e7c
  406982:	cwde   
  406983:	xor    al,0x36
  406985:	in     al,0xc2
  406987:	retf   0x6294
  40698a:	fisub  DWORD PTR [edx-0x482d7982]
  406990:	mov    BYTE PTR [edx-0x1d9a6426],ch
  406996:	shl    esp,0x75
  406999:	jle    0x40699f
  40699b:	pop    ds
  40699c:	adc    ebx,DWORD PTR [eax]
  40699e:	mov    ch,0x32
  4069a0:	femms  
  4069a2:	mov    eax,0x936ee383
  4069a7:	jnp    0x406978
  4069a9:	rol    BYTE PTR [ebx-0x55],0xf4
  4069ad:	xor    edx,DWORD PTR [edi-0x3b]
  4069b0:	cmp    eax,0xf38d02fd
  4069b5:	(bad)  
  4069b6:	je     0x4069a6
  4069b8:	xor    esp,edi
  4069ba:	test   al,0xe1
  4069bc:	mov    bh,0x70
  4069be:	cs xor cl,bh
  4069c1:	cwde   
  4069c2:	(bad)  [ecx+ebp*4+0x6]
  4069c6:	jmp    0x4069e1
  4069c8:	inc    eax
  4069c9:	or     al,0x8d
  4069cb:	ror    esp,1
  4069cd:	dec    esi
  4069ce:	imul   DWORD PTR [esi-0x4315ddb0]
  4069d4:	add    DWORD PTR [ebx+0x265b0806],0x6b851fe2
  4069de:	xor    bl,bl
  4069e0:	cli    
  4069e1:	es es js 0x4069b0
  4069e5:	in     eax,dx
  4069e6:	and    ebx,DWORD PTR ss:[eax+0x72f9e57]
  4069ed:	mov    al,ds:0x431a68e
  4069f2:	jae    0x406a66
  4069f4:	mov    ds:0x43b18d55,al
  4069f9:	out    dx,al
  4069fa:	outs   dx,DWORD PTR ds:[esi]
  4069fb:	mov    ds:0x921ce145,al
  406a00:	mov    cl,0x73
  406a02:	mov    al,0x3c
  406a04:	mov    bl,0x32
  406a06:	fsub   st(3),st
  406a08:	clc    
  406a09:	ss pop ebx
  406a0b:	cmp    eax,DWORD PTR [esi+0x49]
  406a0e:	lock nop
  406a10:	pop    edi
  406a11:	outs   dx,BYTE PTR ds:[esi]
  406a12:	bnd jp 0x406999
  406a15:	bound  eax,QWORD PTR [eax]
  406a17:	retf   
  406a18:	mov    al,0x4e
  406a1a:	xchg   ebx,eax
  406a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a1c:	mov    ebp,0xa969bbfa
  406a21:	psrlq  mm6,QWORD PTR ss:[edi+0x63]
  406a26:	aaa    
  406a27:	sbb    bl,BYTE PTR [eax]
  406a29:	stos   DWORD PTR es:[edi],eax
  406a2a:	(bad)  
  406a2b:	or     BYTE PTR [ebp+0x160112ca],0x7d
  406a32:	fisttp WORD PTR [ecx+0x6a]
  406a35:	or     ch,BYTE PTR [edi]
  406a37:	shr    BYTE PTR [ebx],1
  406a39:	js     0x406a66
  406a3b:	and    dl,BYTE PTR [ebx]
  406a3d:	sbb    DWORD PTR [edx-0x725226cd],edi
  406a43:	inc    ecx
  406a44:	mov    ch,0xf7
  406a46:	in     eax,dx
  406a47:	and    eax,0x134b0555
  406a4c:	test   bl,0xe
  406a4f:	ror    DWORD PTR ds:0xef672eca,1
  406a55:	icebp  
  406a56:	aaa    
  406a57:	cmp    esp,DWORD PTR [edx-0x4e]
  406a5a:	sub    DWORD PTR [esi+0x7e],edi
  406a5d:	dec    ebp
  406a5e:	push   ecx
  406a5f:	push   es
  406a60:	sti    
  406a61:	and    eax,0x909db02e
  406a66:	dec    eax
  406a67:	mov    ch,0x67
  406a69:	jo     0x406a1b
  406a6b:	aad    0xd2
  406a6d:	dec    ebx
  406a6e:	inc    esi
  406a6f:	retf   
  406a70:	sub    DWORD PTR [edi],esp
  406a72:	jo     0x406ad1
  406a74:	cmp    eax,0xace9495d
  406a79:	test   eax,0x8963bebc
  406a7e:	or     eax,0x748c7f39
  406a83:	cmp    DWORD PTR [esi+0x67],edi
  406a86:	dec    esp
  406a87:	pop    eax
  406a88:	add    BYTE PTR [ebp-0x44ddd659],0x20
  406a8f:	jge    0x406ac5
  406a91:	ins    BYTE PTR es:[edi],dx
  406a92:	push   eax
  406a93:	pop    ebp
  406a94:	and    BYTE PTR [esi],0x29
  406a97:	in     al,0x7
  406a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a9a:	scas   al,BYTE PTR es:[edi]
  406a9b:	mov    esi,0x1694c54a
  406aa0:	jg     0x406a43
  406aa2:	xor    edi,DWORD PTR [esi]
  406aa4:	pop    eax
  406aa5:	scas   al,BYTE PTR es:[edi]
  406aa6:	cmovb  edx,DWORD PTR [edx]
  406aa9:	xor    DWORD PTR [ebx-0x10],0xb25b260e
  406ab0:	stos   BYTE PTR es:[edi],al
  406ab1:	fiadd  DWORD PTR [esi-0x67]
  406ab4:	lods   eax,DWORD PTR ds:[esi]
  406ab5:	arpl   WORD PTR [esi],si
  406ab7:	inc    esp
  406ab8:	in     eax,0x3b
  406aba:	loope  0x406ad2
  406abc:	mov    al,ds:0x8f580d2
  406ac1:	pop    ebx
  406ac2:	push   0x12a5a5f0
  406ac7:	adc    al,0x7a
  406ac9:	stos   BYTE PTR es:[edi],al
  406aca:	inc    ebx
  406acb:	fwait
  406acc:	ja     0x406a58
  406ace:	sti    
  406acf:	retf   0x30cd
  406ad2:	xchg   DWORD PTR [esi+0x70],edi
  406ad5:	leave  
  406ad6:	ins    BYTE PTR es:[edi],dx
  406ad7:	enter  0x3a26,0xb
  406adb:	ins    DWORD PTR es:[edi],dx
  406adc:	(bad)  [edi]
  406ade:	stc    
  406adf:	outs   dx,DWORD PTR ds:[si]
  406ae1:	push   edi
  406ae2:	repz dec ecx
  406ae4:	aas    
  406ae5:	and    DWORD PTR [ebx+0x488d924f],ebx
  406aeb:	cmp    eax,0x646e54eb
  406af0:	mov    WORD PTR [edx],?
  406af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406af3:	outs   dx,BYTE PTR ds:[esi]
  406af4:	ret    
  406af5:	sar    BYTE PTR [edi+eax*1-0x1dc8a00b],1
  406afc:	fwait
  406afd:	dec    edi
  406afe:	mov    ebp,0x96e6378
  406b03:	mov    edi,0xd8174777
  406b08:	cld    
  406b09:	jnp    0x406aac
  406b0b:	mov    esp,ecx
  406b0d:	xchg   ebx,eax
  406b0e:	add    al,0x72
  406b10:	mov    DWORD PTR [ecx+0x7b],0x2f214f01
  406b17:	jns    0x406b80
  406b19:	mov    WORD PTR [ebp-0x76],?
  406b1c:	xchg   esi,eax
  406b1d:	mov    bh,0x2b
  406b1f:	xor    ecx,DWORD PTR [ebp-0x23cbcf34]
  406b25:	dec    ecx
  406b26:	or     al,ch
  406b28:	cmp    al,0x2b
  406b2a:	aad    0x80
  406b2c:	fdiv   DWORD PTR [edx+0x56]
  406b2f:	(bad)  
  406b30:	sbb    al,0x9f
  406b32:	popf   
  406b33:	arpl   WORD PTR [eax-0x12],bx
  406b36:	jmp    0x157206bc
  406b3b:	jns    0x406b4f
  406b3d:	cmp    eax,0x644b231e
  406b42:	popf   
  406b43:	xor    cl,BYTE PTR [ecx+0x6ef23381]
  406b49:	sti    
  406b4a:	call   0x515d3c5b
  406b4f:	fwait
  406b50:	fs sub eax,0xb9a4268e
  406b56:	mov    ?,WORD PTR [ebx+0x68]
  406b59:	or     DWORD PTR [ebx],esi
  406b5b:	ins    BYTE PTR es:[edi],dx
  406b5c:	or     esi,ebp
  406b5e:	iret   
  406b5f:	(bad)  
  406b60:	or     al,0x1c
  406b62:	mov    BYTE PTR [edi+0x17],dl
  406b65:	int3   
  406b66:	ret    
  406b67:	cmp    BYTE PTR [ecx-0x9],bh
  406b6a:	push   ecx
  406b6b:	jb     0x406bb2
  406b6d:	aaa    
  406b6e:	jns    0x406be3
  406b70:	aam    0x5c
  406b72:	mov    dl,0xa8
  406b74:	xor    edi,DWORD PTR [eax-0x70]
  406b77:	xchg   ebp,esp
  406b79:	and    esi,DWORD PTR [edi-0x7576cc5c]
  406b7f:	popa   
  406b80:	es jb  0x406b1d
  406b83:	sti    
  406b84:	sar    BYTE PTR [edx+0x16be1b9b],1
  406b8a:	adc    eax,0x58733830
  406b8f:	add    ebx,DWORD PTR [ebp+0x16]
  406b92:	loopne 0x406bf9
  406b94:	pop    eax
  406b95:	pusha  
  406b96:	rol    BYTE PTR [edi+0x33f9634],0x61
  406b9d:	pusha  
  406b9e:	sti    
  406b9f:	pop    ebp
  406ba0:	jae    0x406b5a
  406ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ba3:	sti    
  406ba4:	jl     0x5b9e8b6c
  406baa:	addr16 loope 0x406bd8
  406bad:	jg     0x406bf2
  406baf:	mov    ebp,0x7743de41
  406bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bb5:	inc    esi
  406bb6:	xchg   esp,eax
  406bb7:	pusha  
  406bb8:	mov    bl,0xa7
  406bba:	out    0x9,eax
  406bbc:	outs   dx,BYTE PTR ds:[esi]
  406bbd:	std    
  406bbe:	lds    esp,FWORD PTR [ebx-0x4a]
  406bc1:	or     al,0xa0
  406bc3:	js     0x406b83
  406bc5:	or     al,0xbe
  406bc7:	ret    
  406bc8:	retf   
  406bc9:	repnz popf 
  406bcb:	pop    esp
  406bcc:	ja     0x406bb1
  406bce:	in     al,dx
  406bcf:	add    eax,0x953d1052
  406bd4:	(bad)
  406bd8:	or     eax,0x79b4d2c7
  406bdd:	mov    ecx,0xe887091b
  406be2:	outs   dx,DWORD PTR ds:[esi]
  406be3:	inc    esp
  406be4:	repz push ebp
  406be6:	rcl    DWORD PTR [edx-0x38],cl
  406be9:	lock and ebp,edx
  406bec:	xor    eax,0xc41f6b33
  406bf1:	fwait
  406bf2:	scas   al,BYTE PTR es:[edi]
  406bf3:	mov    cl,0xa0
  406bf5:	lahf   
  406bf6:	push   0x69
  406bf8:	inc    esp
  406bf9:	ret    0xf4f
  406bfc:	dec    esi
  406bfd:	mov    ebx,0xe4945919
  406c03:	or     al,BYTE PTR [edi+edi*4-0x3fa91737]
  406c0a:	(bad)  
  406c0b:	cs pop esp
  406c0d:	mov    ecx,0xb914bf58
  406c12:	xchg   DWORD PTR [esi-0x25d1e9cb],edx
  406c18:	jp     0x406ba9
  406c1a:	rcr    BYTE PTR [esi-0x669e6058],cl
  406c20:	sahf   
  406c21:	cli    
  406c22:	xchg   ebx,eax
  406c23:	test   DWORD PTR [esi-0x23273680],esp
  406c29:	inc    eax
  406c2a:	fstp   DWORD PTR [esi+edi*8-0x40294392]
  406c31:	adc    al,0x3
  406c33:	jmp    0x61a2:0xd03464d8
  406c3a:	bound  ecx,QWORD PTR [ebp-0x3e8753f5]
  406c40:	in     al,dx
  406c41:	mov    dh,0xd9
  406c43:	jle    0x406c1e
  406c45:	sub    eax,0xf5749f4c
  406c4a:	mov    edi,0x1e1443c6
  406c4f:	xor    eax,0x3253ffee
  406c54:	aaa    
  406c55:	dec    ecx
  406c56:	dec    edi
  406c57:	cmp    eax,0x2fefe2f6
  406c5c:	in     al,dx
  406c5d:	mov    eax,0x32db7231
  406c62:	aas    
  406c63:	add    eax,0xe1ff215b
  406c68:	mov    eax,ds:0xaa6b147f
  406c6d:	scas   al,BYTE PTR es:[edi]
  406c6e:	mov    dl,0x4c
  406c70:	jl     0x406bff
  406c72:	cli    
  406c73:	ret    0x9550
  406c76:	in     eax,dx
  406c77:	ins    BYTE PTR es:[edi],dx
  406c78:	test   al,0x31
  406c7a:	jne    0x406c63
  406c7c:	pop    eax
  406c7d:	jbe    0x406cd2
  406c7f:	rcr    DWORD PTR [ecx+0x3],0x6d
  406c83:	mov    bh,0x77
  406c85:	pop    esi
  406c86:	pop    es
  406c87:	je     0x406c68
  406c89:	xchg   esp,eax
  406c8a:	les    ecx,FWORD PTR ds:0x86b5ee90
  406c90:	jle    0x406c1d
  406c92:	aam    0xa
  406c94:	mov    BYTE PTR [ebx],ah
  406c96:	sti    
  406c97:	pop    edx
  406c98:	xchg   BYTE PTR [esi-0x67],cl
  406c9b:	xor    eax,0x2e6267be
  406ca0:	dec    ebx
  406ca1:	mov    ecx,0xf709ff47
  406ca7:	outs   dx,DWORD PTR ds:[esi]
  406ca8:	retf   
  406ca9:	mov    ds:0xbb1a247b,al
  406cae:	das    
  406caf:	outs   dx,BYTE PTR ds:[esi]
  406cb0:	mov    edi,0x7d1f5002
  406cb5:	and    BYTE PTR [ecx-0x7c],cl
  406cb8:	idiv   BYTE PTR [ecx-0x23c2f2d3]
  406cbe:	dec    ecx
  406cbf:	pop    edx
  406cc0:	xor    ebp,DWORD PTR [ebx+eax*4-0x2dff71dd]
  406cc7:	mov    al,0x63
  406cc9:	and    BYTE PTR [ebx],dh
  406ccb:	cmp    eax,0x322c5060
  406cd0:	in     al,dx
  406cd1:	push   cs
  406cd2:	inc    ebx
  406cd3:	rcr    DWORD PTR [edi-0x78368c7e],1
  406cd9:	dec    eax
  406cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cdb:	add    DWORD PTR [ebp+0x27381699],0x3b
  406ce2:	sbb    bh,BYTE PTR [eax-0x6d2ba7f7]
  406ce8:	je     0x406cf1
  406cea:	pop    edi
  406ceb:	aad    0x86
  406ced:	mov    al,ds:0x726ab62f
  406cf2:	jge    0x406d72
  406cf4:	jmp    0x42f5:0xa5de167b
  406cfb:	xchg   ebp,eax
  406cfc:	aad    0x6c
  406cfe:	sub    esi,DWORD PTR [ecx-0x6]
  406d01:	fld    DWORD PTR [edx]
  406d03:	xchg   esp,eax
  406d04:	sbb    al,0xae
  406d06:	(bad)  
  406d07:	cmc    
  406d08:	popa   
  406d09:	aaa    
  406d0a:	ds add eax,0xe54d5064
  406d10:	mov    ch,0x38
  406d12:	pop    esp
  406d13:	repz push ecx
  406d15:	loop   0x406d7c
  406d17:	lahf   
  406d18:	jp     0x406d7c
  406d1a:	stos   BYTE PTR es:[edi],al
  406d1b:	psrad  mm1,QWORD PTR [edx-0x7b23cd38]
  406d22:	fnstcw WORD PTR [ecx+0x246217dd]
  406d28:	push   ss
  406d29:	fadd   DWORD PTR [ecx+eax*8+0x6bd1752]
  406d30:	mov    ebp,edi
  406d32:	call   0xfc55:0xb8178b5d
  406d39:	out    dx,eax
  406d3a:	repz jg 0x406da4
  406d3d:	jl     0x406d7a
  406d3f:	hlt    
  406d40:	mov    eax,0x9117baa2
  406d45:	push   eax
  406d46:	cmp    DWORD PTR [edi+0x26],eax
  406d49:	jnp    0x406d23
  406d4b:	lea    edx,[eax+ebp*2]
  406d4e:	push   eax
  406d4f:	out    dx,al
  406d50:	pop    es
  406d51:	fbstp  TBYTE PTR [esi]
  406d53:	fisttp WORD PTR [esi]
  406d55:	push   ss
  406d56:	mov    ds:0x4dd3d694,al
  406d5b:	xor    ah,BYTE PTR [ebx+0x667eebe9]
  406d61:	lock mov bl,0x4e
  406d64:	adc    al,0xe6
  406d66:	loopne 0x406d88
  406d68:	cld    
  406d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d6a:	xor    BYTE PTR [ebp-0x32],ah
  406d6d:	test   al,0xf1
  406d6f:	(bad)  
  406d70:	(bad)  
  406d71:	sub    esi,DWORD PTR [edx]
  406d73:	jmp    0x406d1a
  406d75:	(bad)  
  406d76:	or     BYTE PTR [ecx+eiz*4],bl
  406d79:	retf   0xebbf
  406d7c:	xor    esi,DWORD PTR [eax+ebx*4]
  406d7f:	int    0xd0
  406d81:	mov    gs,WORD PTR [ebp+0x60]
  406d84:	sub    DWORD PTR [esi-0x76bde21],ebp
  406d8a:	push   esi
  406d8b:	and    esi,esp
  406d8d:	sbb    eax,0xa8a33658
  406d92:	sub    DWORD PTR [edx-0x4a],edi
  406d95:	adc    edx,DWORD PTR [edx-0x53]
  406d98:	xchg   DWORD PTR [ebp+0x27f3a382],eax
  406d9e:	icebp  
  406d9f:	sbb    ecx,edi
  406da1:	pop    eax
  406da2:	xor    eax,0x72fb8c8
  406da7:	jmp    0x9b50:0x83130f79
  406dae:	pop    es
  406daf:	push   ds
  406db0:	ret    0xfb65
  406db3:	retf   
  406db4:	test   DWORD PTR [edi+0x37],edi
  406db7:	fstp   DWORD PTR [edi-0x62]
  406dba:	jge    0x406da1
  406dbc:	pop    ecx
  406dbd:	dec    esi
  406dbe:	cmp    eax,0x9ff7c466
  406dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dc4:	mov    bh,0xe4
  406dc6:	sahf   
  406dc7:	imul   eax,DWORD PTR [eax],0xffffffa1
  406dca:	fst    QWORD PTR [ebp-0x7f]
  406dcd:	pop    edx
  406dce:	dec    edx
  406dcf:	fwait
  406dd0:	int    0x35
  406dd2:	mov    ebx,DWORD PTR [ecx]
  406dd4:	shl    BYTE PTR [esi],0xd1
  406dd7:	lock stos DWORD PTR es:[edi],eax
  406dd9:	in     eax,dx
  406dda:	rcr    esp,1
  406ddc:	sti    
  406ddd:	neg    edx
  406ddf:	xor    bp,WORD PTR [ecx+eiz*2-0x58a54ad4]
  406de7:	cmp    ebx,DWORD PTR [ecx+esi*8+0x25]
  406deb:	and    ah,dh
  406ded:	push   edx
  406dee:	cmp    DWORD PTR [eax],ecx
  406df0:	aaa    
  406df1:	ja     0x406e00
  406df3:	xor    ebp,eax
  406df5:	sbb    eax,0x42092c4b
  406dfa:	and    ah,BYTE PTR [ebp+0x71]
  406dfd:	push   0xffffffa4
  406dff:	xor    DWORD PTR [eax+eiz*2],edi
  406e02:	push   ds
  406e03:	xchg   ecx,eax
  406e04:	ins    BYTE PTR es:[edi],dx
  406e05:	into   
  406e06:	je     0x406da1
  406e08:	push   eax
  406e09:	cmp    al,0x74
  406e0b:	inc    ecx
  406e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e0d:	cwde   
  406e0e:	es cmp al,0x56
  406e11:	add    eax,0xf2dcd250
  406e16:	mov    gs,WORD PTR [esi+0x1]
  406e19:	add    al,BYTE PTR [eax]
  406e1b:	inc    esp
  406e1c:	ds pop edx
  406e1e:	aad    0x26
  406e20:	add    BYTE PTR [edx+0x25],0x2e
  406e24:	outs   dx,BYTE PTR ds:[esi]
  406e25:	loope  0x406de5
  406e27:	mov    ebp,DWORD PTR [edx+0x1d]
  406e2a:	retf   0x7103
  406e2d:	sbb    ch,BYTE PTR [eax-0x783feb31]
  406e33:	mov    ch,0x8a
  406e35:	jne    0x406dbb
  406e37:	add    esi,DWORD PTR [ecx]
  406e39:	in     eax,dx
  406e3a:	adc    BYTE PTR [ebp-0x1fb9a0f9],bl
  406e40:	fiadd  DWORD PTR [edx]
  406e42:	fcomp  QWORD PTR [ebp-0x5e1f9f66]
  406e48:	mov    cl,0x29
  406e4a:	push   ss
  406e4b:	cmc    
  406e4c:	sub    esi,DWORD PTR [esi+0x4b]
  406e4f:	and    cl,BYTE PTR [ecx-0x4b]
  406e52:	adc    DWORD PTR [edx],esp
  406e54:	mov    bl,0x16
  406e56:	dec    ebp
  406e57:	mov    ah,0xc4
  406e59:	cmp    ch,BYTE PTR [ebx+eiz*1]
  406e5c:	stos   BYTE PTR es:[edi],al
  406e5d:	dec    eax
  406e5e:	out    0xc9,eax
  406e60:	adc    bh,al
  406e62:	fisub  DWORD PTR [ecx+0x14]
  406e65:	addr16 fwait
  406e67:	test   DWORD PTR [ebx+0x3],esi
  406e6a:	jb     0x406e24
  406e6c:	push   esi
  406e6d:	mov    ebx,0xfd1ad565
  406e72:	(bad)  
  406e73:	pusha  
  406e74:	jns    0x406e52
  406e76:	cmp    DWORD PTR [ecx-0xe],esi
  406e79:	mov    BYTE PTR [ecx+0x2c],bl
  406e7c:	loope  0x406ef9
  406e7e:	pop    ss
  406e7f:	outs   dx,BYTE PTR ds:[esi]
  406e80:	fdivp  st(1),st
  406e82:	movd   mm6,ebp
  406e85:	leave  
  406e86:	adc    edx,DWORD PTR [edx-0x44d394b1]
  406e8c:	popf   
  406e8d:	mul    DWORD PTR [edi-0x2e06bcdc]
  406e93:	or     ah,ah
  406e95:	xchg   edx,eax
  406e96:	sub    DWORD PTR [ebx+ebx*8-0x7c046c94],esp
  406e9d:	aaa    
  406e9e:	aas    
  406e9f:	cmp    al,cl
  406ea1:	in     al,dx
  406ea2:	pop    edx
  406ea3:	sub    BYTE PTR fs:[eax-0x140fc7f4],dl
  406eaa:	adc    edi,edi
  406eac:	cli    
  406ead:	sbb    BYTE PTR [ebx-0xc224ff1],cl
  406eb3:	push   ebp
  406eb4:	add    DWORD PTR [ebx+0x57],esi
  406eb7:	mov    dl,0x92
  406eb9:	push   0x4d
  406ebb:	fst    DWORD PTR [edx+0xdf207cb]
  406ec1:	fist   DWORD PTR [eax-0x66]
  406ec4:	or     cl,BYTE PTR [edx+0x663baa1c]
  406eca:	xchg   ebx,eax
  406ecb:	mov    cl,0xb
  406ecd:	(bad)  
  406ece:	sub    BYTE PTR [ecx+0x6d1f7b2b],dl
  406ed4:	jge    0x406ef6
  406ed6:	and    al,ch
  406ed8:	ins    BYTE PTR es:[edi],dx
  406ed9:	adc    al,0x17
  406edb:	pop    ebp
  406edc:	add    BYTE PTR [ecx],bh
  406ede:	out    dx,al
  406edf:	fisttp WORD PTR [ebx-0x530f72ff]
  406ee5:	idiv   DWORD PTR [edi+0x41]
  406ee8:	div    al
  406eea:	add    ax,0x1ca6
  406eee:	test   BYTE PTR [ebp+0x5],ch
  406ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ef2:	shl    DWORD PTR [eax-0x35e739e8],cl
  406ef8:	mov    eax,0x8c864012
  406efd:	sub    bh,BYTE PTR ds:0xe76b3456
  406f03:	in     al,dx
  406f04:	cli    
  406f05:	mov    ss,esi
  406f07:	lds    eax,FWORD PTR [edx-0x4ad7562b]
  406f0d:	jo     0x406eac
  406f0f:	hlt    
  406f10:	(bad)  
  406f11:	cmc    
  406f12:	(bad)  
  406f13:	xrelease xchg BYTE PTR [edi],al
  406f16:	lds    edi,FWORD PTR [ecx+0x41e9300d]
  406f1c:	aad    0xa5
  406f1e:	(bad)  
  406f1f:	call   0x98163142
  406f24:	arpl   WORD PTR [ebx],dx
  406f26:	hlt    
  406f27:	push   0xe4cb009e
  406f2c:	add    BYTE PTR [esi-0x5b],0x61
  406f30:	fsubr  DWORD PTR [bx+di]
  406f33:	pop    ecx
  406f34:	test   al,0x86
  406f36:	outs   dx,DWORD PTR ds:[esi]
  406f37:	adc    ah,cl
  406f39:	and    esp,esi
  406f3b:	fsub   QWORD PTR [ebp+0x399a353f]
  406f41:	clc    
  406f42:	stos   DWORD PTR es:[edi],eax
  406f43:	daa    
  406f44:	push   esp
  406f45:	sbb    eax,0xdedfe8e1
  406f4a:	fmul   DWORD PTR [ebp+ebp*2-0x1]
  406f4e:	aad    0xfd
  406f50:	adc    DWORD PTR [edx+0x7bc4a3ac],eax
  406f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f57:	push   edi
  406f58:	dec    esi
  406f59:	dec    eax
  406f5a:	and    bh,BYTE PTR [edi-0x9d2825]
  406f60:	sbb    edi,eax
  406f62:	mov    eax,ds:0xc85fd560
  406f67:	or     edi,DWORD PTR [ecx+0x5]
  406f6a:	(bad)  
  406f6b:	div    DWORD PTR [eax-0x40eacad7]
  406f71:	cwde   
  406f72:	and    cl,BYTE PTR [edi-0x4e]
  406f75:	xlat   BYTE PTR ds:[ebx]
  406f76:	mov    ch,0xff
  406f78:	dec    ebx
  406f79:	in     al,dx
  406f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f7b:	jo     0x406f43
  406f7d:	loopne 0x406f9f
  406f7f:	sti    
  406f80:	(bad)  
  406f81:	outs   dx,DWORD PTR ds:[esi]
  406f82:	mov    esi,0xc1a9148b
  406f87:	jle    0x406f15
  406f89:	in     eax,0x6c
  406f8b:	ficomp WORD PTR [edx-0x2e]
  406f8e:	xchg   bh,cl
  406f90:	pop    ss
  406f91:	mov    ss,WORD PTR [ebx]
  406f93:	xchg   ebp,eax
  406f94:	jmp    0xd5dc:0xd1f934e4
  406f9b:	xor    BYTE PTR [ebp+0x62],ah
  406f9e:	rcl    DWORD PTR [edi+eax*1],1
  406fa1:	xchg   esp,eax
  406fa2:	xchg   DWORD PTR [ecx-0xf],ebx
  406fa5:	cmp    BYTE PTR [ebp+0x29],ah
  406fa8:	mov    DWORD PTR [ecx],0x391c294
  406fae:	mul    DWORD PTR [edx-0x3c]
  406fb1:	dec    ebp
  406fb2:	sbb    al,0xfc
  406fb4:	add    DWORD PTR [ecx-0x65],esp
  406fb7:	lods   al,BYTE PTR ds:[esi]
  406fb8:	adc    eax,edx
  406fba:	into   
  406fbb:	jb     0x406f96
  406fbd:	push   esp
  406fbe:	outs   dx,BYTE PTR ds:[esi]
  406fbf:	(bad)  
  406fc0:	aam    0xe2
  406fc2:	push   edi
  406fc3:	int3   
  406fc4:	mov    ecx,0x7b9148f3
  406fc9:	test   DWORD PTR [esi-0x17],eax
  406fcc:	jnp    0x406fa6
  406fce:	fwait
  406fcf:	(bad)  
  406fd0:	mov    ebp,0x4509bd2d
  406fd5:	adc    BYTE PTR cs:[edx+0xd],al
  406fd9:	mov    edx,0xc4930b76
  406fde:	inc    eax
  406fdf:	mov    ebx,0x4f85061e
  406fe4:	jecxz  0x406f88
  406fe6:	push   ds
  406fe7:	cmp    BYTE PTR [eax],dh
  406fe9:	jp     0x406fd1
  406feb:	ja     0x40702a
  406fed:	mov    es,WORD PTR [edx+ecx*1]
  406ff0:	sbb    DWORD PTR [ecx],ebp
  406ff2:	sub    eax,0xb64aa3ef
  406ff7:	ror    BYTE PTR [esi+0x67],0x73
  406ffb:	mov    esi,0x7e55d155
  407000:	pop    ecx
  407001:	push   edi
  407002:	cwd    
  407004:	cli    
  407005:	xchg   esp,eax
  407006:	imul   BYTE PTR [esp+eax*2]
  407009:	add    dl,BYTE PTR [ebx-0x16]
  40700c:	stc    
  40700d:	in     eax,dx
  40700e:	shl    DWORD PTR [esi],cl
  407010:	imul   ebx,DWORD PTR [ebx+0x2c],0x4b
  407014:	jp     0x407051
  407016:	daa    
  407017:	jnp    0x406fb6
  407019:	and    ch,dl
  40701b:	lock push ebp
  40701d:	sbb    BYTE PTR [eax+0x2859b4d3],cl
  407023:	fmulp  st(0),st
  407025:	dec    edi
  407026:	nop
  407027:	adc    eax,0xc621a023
  40702c:	add    esp,edx
  40702e:	cmp    al,0x60
  407030:	cwde   
  407031:	xor    al,0xa5
  407033:	(bad)
  407037:	pop    esp
  407038:	imul   ebx,ecx,0x797c8af2
  40703e:	jg     0x4070a5
  407040:	cmp    DWORD PTR [esi+0xd],0x56
  407044:	out    dx,al
  407045:	xor    eax,0x257df40c
  40704a:	scas   eax,DWORD PTR es:[edi]
  40704b:	gs sbb eax,0xe0fbeb60
  407051:	sahf   
  407052:	call   0x6fce:0x9df4fece
  407059:	adc    eax,0xbdd9183e
  40705e:	and    DWORD PTR [esi+ebp*2+0x0],ebx
  407062:	sbb    al,0x53
  407064:	test   DWORD PTR [esi],edx
  407066:	(bad)  
  407067:	mov    edi,es
  407069:	test   DWORD PTR [edx-0x2db76146],edx
  40706f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407070:	xor    al,0xdb
  407072:	mov    eax,0x2d34b960
  407077:	pop    edi
  407078:	mov    esi,0x775a7c59
  40707d:	ss ds fucomi st,st(4)
  407081:	mov    ebp,0x386c0561
  407086:	stos   DWORD PTR es:[edi],eax
  407087:	scas   al,BYTE PTR es:[edi]
  407088:	dec    esp
  407089:	and    dl,BYTE PTR [esi-0x29e3f98e]
  40708f:	inc    edi
  407090:	shl    BYTE PTR [esi+0x23119295],0xd2
  407097:	adc    cl,BYTE PTR [ecx]
  407099:	aam    0x6c
  40709b:	adc    al,0xdf
  40709d:	adc    al,BYTE PTR [edx-0x335ab75f]
  4070a3:	and    al,0x6e
  4070a5:	dec    esi
  4070a6:	(bad)  
  4070a7:	and    ebx,DWORD PTR [edi]
  4070a9:	out    0xed,eax
  4070ab:	inc    ebp
  4070ac:	leave  
  4070ad:	cmp    eax,0x2f93fc2d
  4070b2:	sbb    eax,0xef9d05c9
  4070b7:	jmp    0x407079
  4070b9:	jp     0x407101
  4070bb:	xor    ch,ch
  4070bd:	xor    esp,DWORD PTR [edi-0x4e41fa48]
  4070c3:	mov    ebx,0xb59ffbcb
  4070c8:	xchg   edi,eax
  4070c9:	inc    edx
  4070ca:	jb     0x407097
  4070cc:	out    0xec,eax
  4070ce:	xchg   ebp,eax
  4070cf:	mov    bh,0x48
  4070d1:	mov    cl,0x8a
  4070d3:	(bad)  
  4070d4:	jmp    0x595d3da4
  4070d9:	mov    ch,0x5b
  4070db:	out    0x4a,eax
  4070dd:	add    al,0xaa
  4070df:	cwde   
  4070e0:	and    dh,BYTE PTR [ebp-0x4385a73d]
  4070e6:	or     DWORD PTR [ebx+0x5d],edi
  4070e9:	and    al,0xb4
  4070eb:	daa    
  4070ec:	jno    0x407153
  4070ee:	hlt    
  4070ef:	cmp    ecx,edx
  4070f1:	mov    esi,0xfa2b1f04
  4070f6:	(bad)  [ebx+0x77f5fded]
  4070fc:	loopne 0x407155
  4070fe:	sbb    eax,0x87febb72
  407103:	or     BYTE PTR [eax+0x30dcae4],dh
  407109:	out    0x28,al
  40710b:	ds aam 0x94
  40710e:	pushf  
  40710f:	inc    eax
  407110:	add    BYTE PTR [ecx+0x56],bl
  407113:	lea    esi,[edx]
  407115:	jns    0x4070e0
  407117:	dec    ecx
  407118:	mov    ds:0xb346bfbd,eax
  40711d:	pop    ss
  40711e:	add    eax,0x682c4de7
  407123:	jno    0x4070a7
  407125:	lds    ecx,FWORD PTR [edx+0x64f4c41b]
  40712b:	pop    edi
  40712c:	ror    DWORD PTR [ebx],cl
  40712e:	out    dx,al
  40712f:	xchg   cl,dh
  407131:	pushf  
  407132:	(bad)  
  407133:	test   al,0x96
  407135:	retf   0xd52c
  407138:	jge    0x407158
  40713a:	(bad)  
  40713b:	mov    esp,0x45c000a3
  407140:	or     eax,0x7d60580c
  407145:	push   0x334fb674
  40714a:	add    cl,BYTE PTR [esi]
  40714c:	mov    edi,0xa008c157
  407151:	dec    ecx
  407152:	test   BYTE PTR [ecx+0x56f359dc],dh
  407158:	dec    edx
  407159:	add    al,0x43
  40715b:	in     eax,0x67
  40715d:	lods   al,BYTE PTR ds:[esi]
  40715e:	sub    BYTE PTR [eax],0x65
  407161:	adc    edi,DWORD PTR [esi+0x6ab3a1d4]
  407167:	retf   0x4905
  40716a:	mov    ebx,0x4c278ed8
  40716f:	mov    dl,0x55
  407171:	and    BYTE PTR [eax],dl
  407173:	ja     0x40711d
  407175:	jle    0x40716c
  407177:	cmp    eax,DWORD PTR [ebx]
  407179:	call   0x57f6:0xfe38c54c
  407180:	bound  eax,QWORD PTR [edi-0x19]
  407183:	mov    ecx,0x1f5d2629
  407188:	mov    esi,0xce5cc3e3
  40718d:	cmp    eax,0x163f5a71
  407192:	(bad)  
  407193:	popf   
  407194:	inc    edx
  407195:	icebp  
  407196:	stc    
  407197:	pop    ecx
  407198:	sbb    edx,DWORD PTR [edi-0x1e]
  40719b:	dec    esi
  40719c:	ror    DWORD PTR [ebx-0x54],1
  40719f:	cmp    al,0x3e
  4071a1:	call   0xcf5654
  4071a6:	fst    QWORD PTR [ebp-0x6a]
  4071a9:	call   0xfd56095f
  4071ae:	inc    ecx
  4071af:	rol    bh,cl
  4071b1:	xor    edx,DWORD PTR [ebp+0x703e7537]
  4071b7:	jecxz  0x4071e9
  4071b9:	test   eax,0x78eb7f90
  4071be:	dec    eax
  4071bf:	lock out dx,eax
  4071c1:	xor    eax,0xcb1682f0
  4071c6:	mov    eax,ds:0x1997dad4
  4071cb:	or     bh,BYTE PTR [ebp+0x3339e447]
  4071d1:	push   es
  4071d2:	imul   esi,DWORD PTR [ebx-0x58],0xa3040968
  4071d9:	mov    esi,0x4422f0a8
  4071de:	xlat   BYTE PTR ds:[ebx]
  4071df:	mov    edx,DWORD PTR [ebp-0x1f277970]
  4071e5:	ins    BYTE PTR es:[edi],dx
  4071e6:	jge    0x4071c2
  4071e8:	mov    bh,0x6e
  4071ea:	test   edi,ebp
  4071ec:	push   ss
  4071ed:	add    BYTE PTR ds:0x2652ea0,ah
  4071f3:	jns    0x40724f
  4071f5:	(bad)  
  4071f6:	pop    ss
  4071f7:	mov    esi,0x4c1668f5
  4071fc:	or     dl,BYTE PTR [eax+0x32]
  4071ff:	xchg   BYTE PTR [eax+0x556e200],bl
  407205:	imul   edi,DWORD PTR [ebx-0x152c1aa4],0x68
  40720c:	mov    ds:0xe2586df6,eax
  407211:	mov    DWORD PTR [ebx+esi*2+0x35],esi
  407215:	adc    esi,DWORD PTR [ecx+0xc0c2097]
  40721b:	sti    
  40721c:	cld    
  40721d:	sahf   
  40721e:	jmp    0x40729f
  407220:	fidiv  DWORD PTR [esi]
  407222:	aaa    
  407223:	sbb    BYTE PTR [esi+0x590c64b7],cl
  407229:	sub    al,0xc5
  40722b:	cmp    eax,0xb68122ae
  407230:	xor    BYTE PTR [edx+0x4f],bl
  407233:	jnp    0x407204
  407235:	mov    al,0x39
  407237:	adc    ch,BYTE PTR [edx]
  407239:	inc    esp
  40723a:	mov    ebp,0xddd9b343
  40723f:	cdq    
  407240:	fstp   QWORD PTR [ebx]
  407242:	pop    esi
  407243:	dec    ebp
  407244:	pop    edx
  407245:	jecxz  0x40728a
  407247:	xchg   esi,eax
  407248:	stos   BYTE PTR es:[edi],al
  407249:	stos   DWORD PTR es:[edi],eax
  40724a:	sahf   
  40724b:	test   DWORD PTR [ecx-0x79],edi
  40724e:	hlt    
  40724f:	cmp    dh,BYTE PTR [ebx+edx*4]
  407252:	cwde   
  407253:	jo     0x4071e9
  407255:	pop    esp
  407256:	mov    cl,0x47
  407258:	arpl   WORD PTR [ebp+0x3f1a0706],cx
  40725e:	xor    eax,0x1a19003
  407263:	not    DWORD PTR [esi]
  407265:	in     eax,dx
  407266:	ins    BYTE PTR es:[edi],dx
  407267:	xor    BYTE PTR [edi],bh
  407269:	int3   
  40726a:	(bad)  
  40726c:	inc    ebx
  40726d:	int    0xaa
  40726f:	and    BYTE PTR [eax+0x605b8a9a],0xa7
  407276:	dec    ebx
  407277:	je     0x40728f
  407279:	sahf   
  40727a:	daa    
  40727b:	inc    esp
  40727c:	pop    ss
  40727d:	push   ebp
  40727e:	out    dx,eax
  40727f:	imul   ecx,DWORD PTR [edi-0x3e],0x59
  407283:	cwde   
  407284:	rol    BYTE PTR [esi],0xbc
  407287:	aam    0xb4
  407289:	(bad)  
  40728a:	push   ss
  40728b:	or     DWORD PTR [edi-0x72e3c2d3],ecx
  407291:	xchg   esi,eax
  407292:	or     DWORD PTR [edi-0x4e11dd1f],ebp
  407298:	sbb    bh,BYTE PTR [ecx-0x49ca1a2f]
  40729e:	mov    cl,0xe1
  4072a0:	pop    ecx
  4072a1:	dec    eax
  4072a2:	sti    
  4072a3:	dec    eax
  4072a4:	in     eax,dx
  4072a5:	mov    BYTE PTR [esi+0x22],cl
  4072a8:	in     eax,dx
  4072a9:	xchg   edi,eax
  4072aa:	pop    ss
  4072ab:	mov    bl,0x23
  4072ad:	jmp    0x2c87:0x9180b180
  4072b4:	sbb    dl,cl
  4072b6:	rol    DWORD PTR [ecx+0x34ffbe32],cl
  4072bc:	rol    DWORD PTR [eax],0xc0
  4072bf:	iret   
  4072c0:	xor    edi,DWORD PTR [eax]
  4072c2:	sub    ecx,ebp
  4072c4:	out    dx,eax
  4072c5:	jae    0x4072a7
  4072c7:	cli    
  4072c8:	fisubr DWORD PTR [ebx+0x2f]
  4072cb:	fist   WORD PTR [edi]
  4072cd:	leave  
  4072ce:	sub    al,0x49
  4072d0:	stos   BYTE PTR es:[edi],al
  4072d1:	add    dl,BYTE PTR [esi]
  4072d3:	push   esi
  4072d4:	sbb    ah,BYTE PTR [edi]
  4072d6:	push   eax
  4072d7:	push   0xffffffff
  4072d9:	pop    ss
  4072da:	in     al,dx
  4072db:	loop   0x4072bb
  4072dd:	aas    
  4072de:	or     esp,DWORD PTR [esp+ecx*4-0x50]
  4072e2:	aad    0x5b
  4072e4:	sbb    edi,DWORD PTR [edx-0x1fae639f]
  4072ea:	sub    bh,BYTE PTR [edi-0x669a7dbe]
  4072f0:	mov    ebp,0x950026b8
  4072f5:	(bad)  
  4072f6:	hlt    
  4072f7:	push   ecx
  4072f8:	xor    esp,DWORD PTR [ecx]
  4072fa:	and    ebx,DWORD PTR [edx]
  4072fc:	add    eax,0xa030058e
  407301:	jl     0x40735b
  407303:	in     eax,dx
  407304:	jmp    0x3fbc:0x6b0e1330
  40730b:	fld    DWORD PTR [edi+edi*2]
  40730e:	(bad)  
  40730f:	out    0xbf,eax
  407311:	fs push ebp
  407313:	adc    ebx,esi
  407315:	jnp    0x4072c7
  407317:	sbb    BYTE PTR [eax+0x2a116d34],ah
  40731d:	inc    edx
  40731e:	push   eax
  40731f:	js     0x407379
  407321:	fistp  QWORD PTR [ebp-0x3ad8e45c]
  407327:	xchg   DWORD PTR [edx],edx
  407329:	out    dx,al
  40732a:	dec    ecx
  40732b:	and    esp,DWORD PTR [ebp-0x7401d917]
  407331:	ret    0xf1a7
  407334:	mov    eax,ds:0x58334a1
  407339:	std    
  40733a:	mov    edx,0x40985dd1
  40733f:	xchg   esi,eax
  407340:	dec    edx
  407341:	pop    eax
  407342:	aam    0xa8
  407344:	lods   al,BYTE PTR ds:[esi]
  407345:	jp     0x407345
  407347:	adc    al,0xd5
  407349:	lods   al,BYTE PTR ds:[esi]
  40734a:	in     al,0x97
  40734c:	in     al,dx
  40734d:	arpl   si,bx
  40734f:	dec    esp
  407350:	pop    es
  407351:	lea    edx,[ecx-0x1fdddf01]
  407357:	add    DWORD PTR [eax+0x2b0d10c4],edx
  40735d:	xor    BYTE PTR [eax-0x78dd5e2],0x19
  407364:	xchg   edx,eax
  407365:	add    ch,BYTE PTR [ecx+0x4d49b3c4]
  40736b:	ja     0x407342
  40736d:	jne    0x407347
  40736f:	hlt    
  407370:	dec    eax
  407371:	sub    DWORD PTR [ebx],0x9d2d340d
  407377:	pop    ebx
  407378:	mov    cl,0xc
  40737a:	xchg   edx,eax
  40737b:	mov    ds:0x3487088,eax
  407380:	and    al,0xd
  407382:	xor    eax,0xf328b95
  407387:	jo     0x4073d7
  407389:	mov    BYTE PTR [ebp-0x29],al
  40738c:	fstp   DWORD PTR [ebx+0x7a904643]
  407392:	xchg   ecx,eax
  407393:	mov    esp,0x83f35aaf
  407398:	pop    esi
  407399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40739a:	xchg   ebp,eax
  40739b:	cmp    ecx,DWORD PTR [ecx-0x51]
  40739e:	pusha  
  40739f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073a0:	push   edi
  4073a1:	jecxz  0x407380
  4073a3:	rol    bh,cl
  4073a5:	int    0xf8
  4073a7:	add    DWORD PTR [edi],eax
  4073a9:	sub    BYTE PTR [ebx],0xb
  4073ac:	lahf   
  4073ad:	out    dx,al
  4073ae:	aad    0x9f
  4073b0:	add    esp,edx
  4073b2:	mov    BYTE PTR [eax-0x1f],bh
  4073b5:	sbb    eax,0xbc9a2cb0
  4073ba:	daa    
  4073bb:	mov    ecx,0x87836516
  4073c0:	sbb    edx,DWORD PTR [edi+0x63ee6ae8]
  4073c6:	sub    DWORD PTR [edi-0x1ff6968e],0xffffffef
  4073cd:	or     esp,DWORD PTR [esi]
  4073cf:	lock sbb ebx,DWORD PTR [ebp-0x7348e79b]
  4073d6:	xchg   edi,eax
  4073d7:	push   ebp
  4073d8:	loop   0x40741d
  4073da:	cmp    al,BYTE PTR [ebx]
  4073dc:	push   ds
  4073dd:	in     eax,dx
  4073de:	out    dx,eax
  4073df:	sbb    DWORD PTR [ecx+ebx*2],edi
  4073e2:	outs   dx,DWORD PTR ds:[esi]
  4073e3:	ret    
  4073e4:	aaa    
  4073e5:	pusha  
  4073e6:	inc    esi
  4073e7:	fild   DWORD PTR [edi+0x5b61357c]
  4073ed:	pushf  
  4073ee:	popf   
  4073ef:	sbb    bl,BYTE PTR [ecx-0x6d5a50d1]
  4073f5:	or     ecx,edx
  4073f7:	mov    edi,0x1ecb0000
  4073fc:	repz push eax
  4073fe:	imul   ebx,DWORD PTR [ecx-0x52],0xfffffffd
  407402:	inc    edx
  407403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407404:	cmp    BYTE PTR [esi+0x5d0a5768],dh
  40740a:	rep gs stos BYTE PTR es:[edi],al
  40740d:	xchg   edx,eax
  40740e:	add    al,0xb
  407410:	xchg   edx,eax
  407411:	or     edx,DWORD PTR ss:[ecx]
  407414:	xor    BYTE PTR [edx-0x64469b20],ah
  40741a:	ds push edx
  40741c:	pop    ss
  40741d:	in     eax,0x1
  40741f:	adc    eax,0x7431b6a2
  407424:	cwde   
  407425:	or     al,0x4
  407427:	aaa    
  407428:	das    
  407429:	mov    ds:0x1ded3774,eax
  40742e:	mov    bh,0xa6
  407430:	pop    es
  407431:	mov    esp,0x5ca876e8
  407436:	stos   DWORD PTR es:[edi],eax
  407437:	pop    ds
  407438:	nop
  407439:	dec    ebp
  40743a:	enter  0x6b43,0xfc
  40743e:	jmp    0xc1feee61
  407443:	rcl    esp,0xe6
  407446:	pop    ds
  407447:	lea    ebx,[esi+0x2f]
  40744a:	into   
  40744b:	mov    BYTE PTR [edx+edx*2-0x74],cl
  40744f:	push   ebp
  407450:	xchg   ebp,eax
  407451:	in     eax,dx
  407452:	sbb    al,0xe7
  407454:	jae    0x40742b
  407456:	sbb    BYTE PTR ds:0xcd45dcf9,0xfc
  40745d:	ja     0x407485
  40745f:	pop    eax
  407460:	mov    edx,0x2e7dc498
  407465:	xlat   BYTE PTR ds:[ebx]
  407466:	aaa    
  407467:	and    al,0x9e
  407469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40746a:	push   0xfffffff9
  40746c:	push   ss
  40746d:	push   edi
  40746e:	out    dx,al
  40746f:	in     al,0xbe
  407471:	and    eax,0x25b94c7a
  407476:	inc    eax
  407477:	lods   eax,DWORD PTR ds:[esi]
  407478:	(bad)
  40747c:	cmp    eax,0x8b5bad22
  407481:	outs   dx,BYTE PTR ds:[esi]
  407482:	jge    0x407446
  407484:	call   0xf2f8:0x94267a1a
  40748b:	cmp    eax,0x63d4b353
  407490:	dec    BYTE PTR [eax+0x3d]
  407493:	cwde   
  407494:	fldcw  WORD PTR [edx+0x5742c2a3]
  40749a:	xchg   ebx,eax
  40749b:	fdiv   QWORD PTR [eax-0x5d]
  40749e:	int    0x54
  4074a0:	ret    0xeb55
  4074a3:	lods   al,BYTE PTR ds:[esi]
  4074a4:	mov    ss,WORD PTR [edx-0x4c]
  4074a7:	out    dx,eax
  4074a8:	ja     0x407507
  4074aa:	arpl   WORD PTR [ecx-0x23],bx
  4074ad:	ins    DWORD PTR es:[edi],dx
  4074ae:	sbb    al,0x8
  4074b0:	(bad)  
  4074b1:	aaa    
  4074b2:	lods   al,BYTE PTR ds:[esi]
  4074b3:	cmc    
  4074b4:	fcom   DWORD PTR [edi+edx*1+0x3]
  4074b8:	fild   WORD PTR [eax-0x16a11f16]
  4074be:	sub    dl,BYTE PTR [esi]
  4074c0:	ja     0x407493
  4074c2:	sub    dh,BYTE PTR [ebx-0x2c]
  4074c5:	cdq    
  4074c6:	ficomp WORD PTR [edx+eax*4-0x5f2b0f15]
  4074cd:	pop    edi
  4074ce:	sbb    BYTE PTR [ebx-0x7cac02a],al
  4074d4:	ret    
  4074d5:	pusha  
  4074d6:	lods   eax,DWORD PTR ds:[esi]
  4074d7:	sbb    ecx,esp
  4074d9:	in     al,0x43
  4074db:	push   ebx
  4074dc:	jle    0x407473
  4074de:	inc    esi
  4074df:	nop
  4074e0:	into   
  4074e1:	mov    al,0x82
  4074e3:	add    DWORD PTR [ebx-0x4e],edi
  4074e6:	in     eax,dx
  4074e7:	sbb    DWORD PTR [esi+esi*1-0x75],0x33fdd1f7
  4074ef:	jnp    0x40747b
  4074f1:	gs cmp al,0xb
  4074f4:	lods   al,BYTE PTR ds:[esi]
  4074f5:	xchg   ecx,eax
  4074f6:	xor    al,0xc8
  4074f8:	ret    
  4074f9:	xchg   esi,eax
  4074fa:	push   es
  4074fb:	ja     0x4074a4
  4074fd:	arpl   WORD PTR [eax],si
  4074ff:	aaa    
  407500:	lods   al,BYTE PTR ds:[esi]
  407501:	pop    eax
  407502:	stos   DWORD PTR es:[edi],eax
  407503:	das    
  407504:	stos   DWORD PTR es:[edi],eax
  407505:	js     0x40756e
  407507:	scas   eax,DWORD PTR es:[edi]
  407508:	repz mov cl,0xfc
  40750b:	jge    0x407527
  40750d:	mov    edi,0xc4e42346
  407512:	out    0x5,eax
  407514:	dec    esp
  407515:	jge    0x4074c8
  407517:	js     0x407514
  407519:	mov    edi,ebp
  40751b:	cmc    
  40751c:	popa   
  40751d:	push   esp
  40751e:	scas   al,BYTE PTR es:[edi]
  40751f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407520:	push   cs
  407521:	add    edi,DWORD PTR [eax-0x20]
  407524:	or     DWORD PTR [edx],ebx
  407526:	int    0xe2
  407528:	scas   al,BYTE PTR es:[edi]
  407529:	test   BYTE PTR [eax+0x79],ah
  40752c:	out    dx,al
  40752d:	pop    ebp
  40752e:	sahf   
  40752f:	push   edi
  407530:	pop    ebx
  407531:	aam    0x8e
  407533:	cdq    
  407534:	paddd  mm4,QWORD PTR [ecx+0x32]
  407538:	in     eax,0x66
  40753a:	mov    edx,DWORD PTR gs:[ebp+0xdf28a8a]
  407541:	push   esi
  407542:	xchg   ebp,eax
  407543:	sbb    BYTE PTR [ecx-0x48],0xbd
  407547:	or     esp,DWORD PTR [eax-0x3d1de62e]
  40754d:	pop    ecx
  40754e:	sti    
  40754f:	int3   
  407550:	mov    ebx,0x33306553
  407555:	pop    ebx
  407556:	outs   dx,DWORD PTR ds:[esi]
  407557:	mov    BYTE PTR [edi-0x29],ah
  40755a:	mov    ds:0x6df04d97,al
  40755f:	and    eax,0x7f5c20b1
  407564:	fsubrp st(4),st
  407566:	sub    DWORD PTR [eax],0x3b
  407569:	cld    
  40756a:	inc    ebx
  40756b:	bound  edx,QWORD PTR [edx+0x5dfa8d27]
  407571:	lahf   
  407572:	mov    eax,0x4e901a5e
  407577:	aaa    
  407578:	mov    ds:0x15a12f7,eax
  40757d:	inc    eax
  40757e:	data16 rcr cl,cl
  407581:	mov    edx,?
  407583:	test   al,0xd2
  407585:	shr    BYTE PTR [esi+0x9],cl
  407588:	(bad)  
  407589:	ja     0x4075ed
  40758b:	mov    bh,BYTE PTR [ebx]
  40758d:	aam    0x14
  40758f:	jmp    0x407545
  407591:	jmp    0xcb9d6a4d
  407596:	pop    ebx
  407597:	rcl    BYTE PTR [eax-0x34],0x48
  40759b:	lds    esi,FWORD PTR [ebx+0x4b]
  40759e:	(bad)  
  40759f:	jge    0x407609
  4075a1:	mov    ebp,0x1abf310
  4075a6:	retf   0x1292
  4075a9:	xlat   BYTE PTR ds:[ebx]
  4075aa:	out    dx,al
  4075ab:	and    al,BYTE PTR [ecx+esi*1-0x75]
  4075af:	add    DWORD PTR [edi-0x6739c4c5],esi
  4075b5:	adc    dl,BYTE PTR [ebx+ebx*4]
  4075b8:	sbb    BYTE PTR [ebx-0x6b],bh
  4075bb:	adc    eax,0x12db4cb8
  4075c0:	and    esi,DWORD PTR [ebx+eax*8]
  4075c3:	xlat   BYTE PTR ds:[ebx]
  4075c4:	jbe    0x4075ee
  4075c6:	mov    ds:0x89ad2a12,eax
  4075cb:	daa    
  4075cc:	add    cl,BYTE PTR [edx+0x10]
  4075cf:	dec    eax
  4075d0:	sbb    ch,bh
  4075d2:	aas    
  4075d3:	adc    BYTE PTR [eax+0x77fdca68],bh
  4075d9:	xor    BYTE PTR [ebp-0x295e3af9],0xf2
  4075e0:	pop    eax
  4075e1:	xchg   edi,eax
  4075e2:	cli    
  4075e3:	sub    cl,BYTE PTR ds:0x49aba9c0
  4075e9:	mov    esi,0x3e319162
  4075ee:	cmp    al,ah
  4075f0:	(bad)  
  4075f1:	mov    al,ds:0x84bb06c
  4075f6:	iret   
  4075f7:	mov    fs,WORD PTR [ebp+0x3dd8cb5a]
  4075fd:	push   es
  4075fe:	div    BYTE PTR [esi+ecx*4-0x6e]
  407602:	and    al,BYTE PTR ds:0xede712a9
  407608:	jnp    0x4075c9
  40760a:	mov    edi,0x7ead22b9
  40760f:	xchg   esp,eax
  407610:	mov    al,0x14
  407612:	js     0x4075fd
  407614:	or     al,0xd1
  407616:	dec    ecx
  407617:	mov    ecx,0x5a660271
  40761c:	jle    0x4075ff
  40761e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40761f:	xchg   edi,eax
  407620:	sub    al,0xdb
  407622:	inc    ebp
  407623:	imul   eax,DWORD PTR [edi+eax*2+0x48],0xa2dce6c0
  40762b:	jge    0x4076a2
  40762d:	lds    edi,FWORD PTR [ecx+0x65585886]
  407633:	aaa    
  407634:	loope  0x40768d
  407636:	out    dx,eax
  407637:	inc    ecx
  407638:	cmp    DWORD PTR [esp+esi*8+0xf],ebp
  40763c:	in     eax,0x16
  40763e:	mov    edx,0xf44100f5
  407643:	mov    al,0x5a
  407645:	pop    ss
  407646:	push   ds
  407647:	ds inc ebp
  407649:	clc    
  40764a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40764b:	addr16 sbb eax,0xb764ac93
  407651:	pushf  
  407652:	cli    
  407653:	fiadd  WORD PTR [edi+0x43]
  407656:	and    DWORD PTR [ebx],0xe85e3ec4
  40765c:	mov    esp,0xdaa8b58d
  407661:	in     al,0x18
  407663:	pop    es
  407664:	sub    eax,0xeca34218
  407669:	loopne 0x407664
  40766b:	jmp    0xf3a39676
  407670:	(bad)  
  407671:	xor    al,0x3a
  407673:	xor    BYTE PTR [edx+0x690b19f6],ah
  407679:	mov    al,0x47
  40767b:	pop    ecx
  40767c:	lahf   
  40767d:	mov    ds:0xa1c306bd,al
  407682:	mov    dl,0x7a
  407684:	pop    es
  407685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407686:	jnp    0x4076bd
  407688:	or     cl,BYTE PTR [esi]
  40768a:	jae    0x40764a
  40768c:	rcl    BYTE PTR [esi+0x61],1
  40768f:	adc    eax,0x8c1654b5
  407694:	cld    
  407695:	push   ebp
  407696:	xor    BYTE PTR [esi+0x49],dh
  407699:	push   ecx
  40769a:	add    ah,BYTE PTR [ebx]
  40769c:	jae    0x407698
  40769e:	inc    edi
  40769f:	and    DWORD PTR [ecx-0x62],ecx
  4076a2:	sub    al,0x2a
  4076a4:	je     0x4076fa
  4076a6:	xchg   edi,eax
  4076a7:	sbb    DWORD PTR [esi],eax
  4076a9:	or     edx,DWORD PTR [ebx+0x1733b565]
  4076af:	pop    ebx
  4076b0:	pop    ecx
  4076b1:	fimul  WORD PTR [ebx+0x71ff69f4]
  4076b7:	rcr    ebx,cl
  4076b9:	test   eax,0xfdcb4937
  4076be:	in     eax,0xc7
  4076c0:	bound  edx,QWORD PTR [ebx-0x2a45d55f]
  4076c6:	xchg   ebp,eax
  4076c7:	sbb    esp,DWORD PTR [ecx+0x78e2fdfe]
  4076cd:	mov    ch,0xc9
  4076cf:	es addr16 add eax,0x8d0ae0cf
  4076d6:	aad    0x1b
  4076d8:	dec    ebx
  4076d9:	add    BYTE PTR [edi-0x51e5fda0],ch
  4076df:	dec    ebp
  4076e0:	pop    esi
  4076e1:	(bad)  
  4076e2:	mov    cl,0x69
  4076e4:	mov    BYTE PTR [ebx+eiz*2+0x5f],ah
  4076e8:	add    DWORD PTR [eax-0x54],edi
  4076eb:	push   0xffffffd8
  4076ed:	test   BYTE PTR [esi-0x24],ah
  4076f0:	mov    al,0x6a
  4076f2:	cwde   
  4076f3:	int3   
  4076f4:	add    DWORD PTR [ecx],eax
  4076f6:	cmp    edx,DWORD PTR [edx-0x7c]
  4076f9:	cli    
  4076fa:	inc    edx
  4076fb:	mov    ch,0x1e
  4076fd:	cmp    bl,BYTE PTR [edi-0x1b]
  407700:	arpl   WORD PTR es:[esi-0x28f65594],bx
  407707:	fdiv   DWORD PTR [ecx]
  407709:	lds    ebp,FWORD PTR [esi]
  40770b:	loop   0x4076bb
  40770d:	add    esi,eax
  40770f:	sahf   
  407710:	addr16 aad 0xb4
  407713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407714:	(bad)  
  407715:	pop    esi
  407716:	and    DWORD PTR [eax+0x1a9f1cd9],0x132eec55
  407720:	mov    ds:0xb0d9f80a,eax
  407725:	pop    ds
  407726:	vcmpss xmm7,xmm0,xmm1,0x8e
  40772b:	(bad)  
  40772c:	mov    edi,DWORD PTR [esi]
  40772e:	pop    ebx
  40772f:	jns    0x4076db
  407731:	jnp    0x4076fa
  407733:	mov    dl,0x96
  407735:	shl    DWORD PTR [esi-0xa],cl
  407738:	inc    edi
  407739:	sbb    eax,0xcea2413e
  40773e:	mov    eax,0xa4678da1
  407743:	retf   
  407744:	in     eax,dx
  407745:	jp     0x4076cd
  407747:	push   ebp
  407748:	adc    BYTE PTR [ebp+0x76],cl
  40774b:	out    dx,eax
  40774c:	imul   eax,DWORD PTR [edx],0x4845c951
  407752:	add    eax,0xaa5e41a9
  407757:	call   0x5076:0xe1111683
  40775e:	pop    ebx
  40775f:	(bad)  
  407760:	xlat   BYTE PTR ds:[ebx]
  407761:	scas   al,BYTE PTR es:[edi]
  407762:	ret    
  407763:	sbb    DWORD PTR [edi+0x7b383d3],edi
  407769:	push   ds
  40776a:	(bad)  [edi+0x62aad0d0]
  407770:	aam    0xa7
  407772:	adc    al,0x2c
  407774:	shr    DWORD PTR [edx-0x1d120cc5],0xa5
  40777b:	dec    ecx
  40777c:	in     eax,0x79
  40777e:	mov    esi,DWORD PTR [ebx]
  407780:	pop    esi
  407781:	and    ah,BYTE PTR [ecx-0x2591ad88]
  407787:	adc    eax,0x7168b8b3
  40778c:	jp     0x40775e
  40778e:	sar    DWORD PTR [ebx-0x5f0b6bca],0x5c
  407795:	(bad)  
  407796:	in     eax,dx
  407797:	inc    edx
  407798:	pushf  
  407799:	ror    DWORD PTR [ebx],cl
  40779b:	aas    
  40779c:	jo     0x40772a
  40779e:	add    BYTE PTR [ecx+0x5a5ec04b],bh
  4077a4:	outs   dx,BYTE PTR ds:[esi]
  4077a5:	mov    edx,0xfebd254e
  4077aa:	and    DWORD PTR [ecx+esi*4],0x65
  4077ae:	test   cl,0xd4
  4077b1:	mov    al,BYTE PTR [ebx+ecx*1]
  4077b4:	iret   
  4077b5:	js     0x407793
  4077b7:	(bad)  
  4077b8:	fcom   DWORD PTR ds:0x769a8c5d
  4077be:	cdq    
  4077bf:	inc    eax
  4077c0:	std    
  4077c1:	mov    esi,0xd38cb623
  4077c6:	and    BYTE PTR [edi+eax*2-0x67],0xf5
  4077cb:	jmp    0x1c4:0x850853e0
  4077d2:	jno    0x407807
  4077d4:	jns    0x40779d
  4077d6:	scas   eax,DWORD PTR es:[edi]
  4077d7:	dec    esi
  4077d8:	fs inc eax
  4077da:	pop    eax
  4077db:	lods   al,BYTE PTR ds:[esi]
  4077dc:	xchg   DWORD PTR [ecx+0x0],eax
  4077df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077e0:	(bad)  
  4077e1:	jb     0x40780d
  4077e3:	sbb    BYTE PTR [eax],al
  4077e5:	mov    DWORD PTR [eax+0x7c],ecx
  4077e8:	fwait
  4077e9:	jle    0x40779c
  4077eb:	int3   
  4077ec:	mov    DWORD PTR [ebx-0x7762ed2],eax
  4077f2:	je     0x407861
  4077f4:	int    0x10
  4077f6:	inc    eax
  4077f7:	ins    DWORD PTR es:[edi],dx
  4077f8:	repz (bad) 
  4077fa:	(bad)  
  4077fb:	mov    eax,0xc6964ece
  407800:	ret    0x3b01
  407803:	pusha  
  407804:	stos   BYTE PTR es:[edi],al
  407805:	dec    eax
  407806:	pop    eax
  407807:	xor    eax,0x980101e2
  40780c:	inc    ebp
  40780d:	jp     0x4077fb
  40780f:	pop    ds
  407810:	dec    ebp
  407811:	lds    ecx,FWORD PTR [ecx+0x6c8a6cad]
  407817:	inc    ecx
  407818:	fldcw  WORD PTR [eax+eax*2-0x49]
  40781c:	xor    BYTE PTR [ebp+0x30],0xed
  407820:	mov    ebx,0x208915c3
  407825:	push   ebp
  407826:	in     al,0x96
  407828:	out    0x20,al
  40782a:	pop    edx
  40782b:	jbe    0x4077ea
  40782d:	xor    eax,DWORD PTR [edi-0x7c]
  407830:	rcl    DWORD PTR [edx-0x4e999472],1
  407836:	pop    edx
  407837:	(bad)  
  407838:	jecxz  0x40781b
  40783a:	xchg   esi,eax
  40783b:	jg     0x40785c
  40783d:	repz lock fnstenv [esi]
  407841:	push   ss
  407842:	ret    0x3e1f
  407845:	xchg   BYTE PTR [ebx],ch
  407847:	cmp    eax,0x637f6a6a
  40784c:	add    eax,0x821a99e
  407851:	fsubr  st,st(1)
  407853:	adc    al,0xf6
  407855:	in     eax,0x12
  407857:	xchg   esp,eax
  407858:	xchg   edi,eax
  407859:	dec    edi
  40785a:	xor    al,0x25
  40785c:	push   esp
  40785d:	dec    edi
  40785e:	mov    esp,0xff55e41
  407863:	lods   al,BYTE PTR ds:[esi]
  407864:	cmp    BYTE PTR [edx-0x7f],0x8d
  407868:	mov    dl,0xd6
  40786a:	mov    ds:0x6947401,al
  40786f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407870:	iret   
  407871:	mov    ah,0x45
  407873:	test   BYTE PTR [esi+0x21],al
  407876:	stc    
  407877:	adc    eax,edi
  407879:	inc    ecx
  40787a:	adc    BYTE PTR [ecx],0xfd
  40787d:	sub    eax,0x1aa39bac
  407882:	out    0xc,eax
  407884:	sbb    al,0x9
  407886:	xchg   edi,eax
  407887:	pop    ss
  407888:	jmp    0x407889
  40788a:	(bad)  
  40788b:	fbld   TBYTE PTR [edx-0x71538ff5]
  407891:	xor    DWORD PTR [eax+0x74],ecx
  407894:	das    
  407895:	inc    ebp
  407896:	mov    ch,0x27
  407898:	sahf   
  407899:	ds popf 
  40789b:	cmp    al,0x37
  40789d:	cmp    dl,bh
  40789f:	mov    al,ds:0xc77368f8
  4078a4:	push   es
  4078a5:	out    dx,al
  4078a6:	sti    
  4078a7:	xchg   edi,eax
  4078a8:	push   cs
  4078a9:	xor    BYTE PTR [ecx+ebx*1],bl
  4078ac:	inc    ecx
  4078ad:	pop    esp
  4078ae:	cs and al,0xae
  4078b1:	out    dx,eax
  4078b2:	lods   al,BYTE PTR ds:[esi]
  4078b3:	test   al,0x73
  4078b5:	scas   eax,DWORD PTR es:[edi]
  4078b6:	and    BYTE PTR [edi],cl
  4078b8:	imul   esi,DWORD PTR [edi+0x77],0x3
  4078bc:	jle    0x4078a5
  4078be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078bf:	push   esp
  4078c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c1:	lea    esp,[ebx-0x6fea76a6]
  4078c7:	outs   dx,BYTE PTR ds:[esi]
  4078c8:	inc    esp
  4078c9:	mov    ?,WORD PTR [ebp+0x39]
  4078cc:	or     eax,DWORD PTR [edi+0x3c]
  4078cf:	and    eax,0x16a05e66
  4078d4:	stos   DWORD PTR es:[edi],eax
  4078d5:	push   eax
  4078d6:	jno    0x4078d8
  4078d8:	sbb    DWORD PTR [esi+0x736f7720],ebp
  4078de:	dec    edx
  4078df:	mov    DWORD PTR [eax-0x56],eax
  4078e2:	das    
  4078e3:	sbb    ecx,DWORD PTR [eax]
  4078e5:	rol    DWORD PTR gs:[esi-0xb],0x57
  4078ea:	repz ret 0x414b
  4078ee:	pop    edx
  4078ef:	push   ss
  4078f0:	ret    0x70ec
  4078f3:	es xor al,al
  4078f6:	(bad)
  4078f9:	fwait
  4078fa:	ja     0x4078ec
  4078fc:	cmc    
  4078fd:	mov    eax,ds:0x689eb8e7
  407902:	jb     0x4078ea
  407904:	addr16 out dx,al
  407906:	add    esi,ebx
  407908:	std    
  407909:	push   ss
  40790a:	test   al,0x18
  40790c:	jnp    0x4078da
  40790e:	xchg   ebx,eax
  40790f:	xchg   edx,ecx
  407911:	cmp    DWORD PTR es:[edi+edi*4+0x21894d7f],edi
  407919:	lea    esp,[ebx+0x44]
  40791c:	popa   
  40791d:	inc    edi
  40791e:	retf   
  40791f:	stos   DWORD PTR es:[edi],eax
  407920:	rcl    bl,1
  407922:	xor    dh,BYTE PTR [esi-0xc]
  407925:	xlat   BYTE PTR ds:[ebx]
  407926:	adc    ah,BYTE PTR [ebx+eiz*1-0x41]
  40792a:	scas   al,BYTE PTR es:[edi]
  40792b:	lds    eax,FWORD PTR [edi-0x2b]
  40792e:	push   eax
  40792f:	inc    edx
  407930:	shl    DWORD PTR [edx-0x48],0xad
  407934:	test   DWORD PTR [edx+0xd143140],edi
  40793a:	mov    ds,WORD PTR [ebx]
  40793c:	mov    edx,0x4116d7b3
  407941:	aam    0xa7
  407943:	shr    BYTE PTR [esi+0x320faa2a],cl
  407949:	bound  esp,QWORD PTR ss:[ebp+0x2]
  40794d:	mov    eax,ds:0xd7b52182
  407952:	jnp    0x4078f4
  407954:	xchg   ebp,eax
  407955:	cmp    DWORD PTR [edi+0x57],0x7f
  407959:	out    dx,al
  40795a:	dec    edi
  40795b:	dec    esi
  40795c:	js     0x407905
  40795e:	sub    ch,BYTE PTR [esi]
  407960:	shr    BYTE PTR [eax-0x6a],cl
  407963:	aaa    
  407964:	popa   
  407965:	jns    0x4079d9
  407967:	(bad)  
  407968:	xchg   edi,eax
  407969:	mov    dl,0xe7
  40796b:	sbb    ah,BYTE PTR [eax]
  40796d:	jne    0x4079dc
  40796f:	dec    edi
  407970:	push   ds
  407971:	or     ecx,DWORD PTR [ebx]
  407973:	add    DWORD PTR [ebx+0x68],eax
  407976:	adc    dl,0x94
  407979:	sub    ebp,0x942b369c
  40797f:	fs scas al,BYTE PTR es:[edi]
  407981:	ins    BYTE PTR es:[edi],dx
  407982:	dec    esi
  407983:	mov    eax,DWORD PTR [ebp+0x285f9e75]
  407989:	jmp    0x4079eb
  40798b:	cld    
  40798c:	mov    ch,0x43
  40798e:	icebp  
  40798f:	retf   
  407990:	jecxz  0x40795e
  407992:	jp     0x407916
  407994:	pop    ecx
  407995:	and    BYTE PTR [ebx+0x9a5a4d0],al
  40799b:	or     DWORD PTR [ebp+0xaadaa21],ebx
  4079a1:	into   
  4079a2:	pop    esp
  4079a3:	mov    edi,0xa21eb7b9
  4079a8:	pop    ebx
  4079a9:	adc    esp,ecx
  4079ab:	pop    edi
  4079ac:	call   0x19e2:0x5153a4e4
  4079b3:	shl    DWORD PTR [ebx+0xa00c15b],0x5b
  4079ba:	(bad)  
  4079bc:	test   al,0xda
  4079be:	lds    ebx,FWORD PTR [ecx+0xa13f61a]
  4079c4:	dec    ebp
  4079c5:	gs dec esp
  4079c7:	cmc    
  4079c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079c9:	pusha  
  4079ca:	adc    bh,ah
  4079cc:	cld    
  4079cd:	sub    BYTE PTR [ecx-0xa],dh
  4079d0:	pop    edi
  4079d1:	fnstcw WORD PTR [ebp+ebx*8-0x6f]
  4079d5:	sbb    DWORD PTR [ecx],ebx
  4079d7:	shl    al,0x27
  4079da:	mov    ds:0x9bd9c03c,eax
  4079df:	sub    eax,0x8436a3b1
  4079e4:	cmp    eax,DWORD PTR [ebx-0x3c]
  4079e7:	js     0x4079f2
  4079e9:	or     DWORD PTR [eax-0x76],ebx
  4079ec:	or     edi,esi
  4079ee:	les    esi,FWORD PTR [edi+0x7ffe25e1]
  4079f4:	repz popf 
  4079f6:	aad    0xe2
  4079f8:	dec    eax
  4079f9:	les    eax,FWORD PTR [eax]
  4079fb:	cmp    al,0x3e
  4079fd:	push   0x3f
  4079ff:	pop    ebp
  407a00:	(bad)  
  407a01:	je     0x4079bf
  407a03:	shl    BYTE PTR [esi+0x5f],1
  407a06:	into   
  407a07:	push   esi
  407a08:	jmp    0x4ae1:0x3761d4bc
  407a0f:	cdq    
  407a10:	xchg   ebx,eax
  407a11:	or     dl,ch
  407a13:	lock fcmovbe st,st(5)
  407a16:	gs ins DWORD PTR es:[edi],dx
  407a18:	clc    
  407a19:	and    eax,0x9d8aaff
  407a1e:	daa    
  407a1f:	and    al,0xb2
  407a21:	mov    ds:0x63ec1181,al
  407a26:	mov    dh,0x3d
  407a28:	sti    
  407a29:	loope  0x407aa6
  407a2b:	jae    0x407a08
  407a2d:	test   edx,edx
  407a2f:	jno    0x4079d5
  407a31:	ins    DWORD PTR es:[edi],dx
  407a32:	ins    BYTE PTR es:[edi],dx
  407a33:	push   eax
  407a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a35:	outs   dx,BYTE PTR ds:[esi]
  407a36:	rcl    DWORD PTR [esi-0x68],cl
  407a39:	adc    eax,0xc48903a5
  407a3e:	pop    edi
  407a3f:	or     DWORD PTR [esi+0x3c],edi
  407a42:	mov    ah,0x25
  407a44:	(bad)  
  407a45:	mov    ecx,DWORD PTR [ebp-0x4]
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0x1e6eea67
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	push   ebx
  407b36:	ficom  WORD PTR [esi-0x6210be5d]
  407b3c:	icebp  
  407b3d:	sub    bh,BYTE PTR [edi+0xb]
  407b40:	stc    
  407b41:	mov    edx,ecx
  407b43:	cmp    DWORD PTR [edx-0x32],ebx
  407b46:	cld    
  407b47:	fistp  QWORD PTR [edx-0x67]
  407b4a:	(bad)  
  407b4b:	adc    dl,BYTE PTR [edx+0x7c]
  407b4e:	in     al,0xf9
  407b50:	iret   
  407b51:	sub    DWORD PTR [esi+eiz*1],0xfdb8f453
  407b58:	and    dh,BYTE PTR [eax-0x5a]
  407b5b:	mov    edx,0x7e1b8ab5
  407b60:	dec    esp
  407b61:	or     eax,edx
  407b63:	shl    esi,0xf
  407b66:	pop    ebp
  407b67:	fwait
  407b68:	adc    DWORD PTR [ebx],esp
  407b6a:	mov    al,BYTE PTR [eax+eiz*1-0x38]
  407b6e:	sti    
  407b6f:	jp     0x407b86
  407b71:	xchg   ebp,eax
  407b72:	push   ss
  407b73:	cmp    esp,edx
  407b75:	enter  0xd683,0x36
  407b79:	aad    0x3
  407b7b:	stos   DWORD PTR es:[edi],eax
  407b7c:	xchg   edx,eax
  407b7d:	pop    eax
  407b7e:	pop    es
  407b7f:	sub    DWORD PTR [ebp-0x254faee],ebp
  407b85:	arpl   WORD PTR [edi],di
  407b87:	fisttp WORD PTR [esi-0x46]
  407b8a:	aas    
  407b8b:	sbb    BYTE PTR [ebx+0x27],bh
  407b8e:	jne    0x407b1a
  407b90:	or     bl,dh
  407b92:	in     al,dx
  407b93:	test   al,0x5a
  407b95:	adc    BYTE PTR [ecx+0x7bf27f8a],dl
  407b9b:	out    0xad,eax
  407b9d:	push   0x8246e5b1
  407ba2:	mov    ebp,0xa0a23a84
  407ba7:	sub    ebx,DWORD PTR [eax+0x5c62c1fa]
  407bad:	add    eax,0x26be786e
  407bb2:	das    
  407bb3:	cwde   
  407bb4:	mov    BYTE PTR [ebx+0x4d9d4cdd],bl
  407bba:	sbb    BYTE PTR [edi-0x29f49d2a],0x24
  407bc1:	in     al,0xd7
  407bc3:	mov    dh,0x50
  407bc5:	cld    
  407bc6:	inc    ebp
  407bc7:	hlt    
  407bc8:	cmp    dl,ah
  407bca:	mov    edi,0x786eceea
  407bcf:	outs   dx,BYTE PTR ds:[esi]
  407bd0:	ror    esi,1
  407bd2:	dec    esp
  407bd3:	mov    dl,0xd2
  407bd5:	arpl   WORD PTR [eax+0x6],si
  407bd8:	popa   
  407bd9:	jg     0x407c29
  407bdb:	mov    ebp,0xd0486370
  407be0:	ss stos DWORD PTR es:[edi],eax
  407be2:	test   al,0xf
  407be4:	test   eax,0x38548e7d
  407be9:	mov    al,0x32
  407beb:	and    eax,0x25
  407bee:	jns    0x407bf2
  407bf0:	xor    bl,bh
  407bf2:	push   ebx
  407bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bf4:	cli    
  407bf5:	enter  0x79be,0xa1
  407bf9:	mov    esp,cs
  407bfb:	jbe    0x407bb3
  407bfd:	fwait
  407bfe:	loopne 0x407c2c
  407c00:	mov    ebx,0x5caefc0f
  407c05:	sub    BYTE PTR [eax+0x6740ddee],0x33
  407c0c:	dec    ebx
  407c0d:	fmul   DWORD PTR [edx]
  407c0f:	lock xor eax,0xa325e7ad
  407c15:	xlat   BYTE PTR ds:[ebx]
  407c16:	bound  ebx,QWORD PTR [ecx+0x3f]
  407c19:	lahf   
  407c1a:	xchg   esp,edi
  407c1c:	inc    ebp
  407c1d:	scas   eax,DWORD PTR es:[edi]
  407c1e:	sahf   
  407c1f:	cdq    
  407c20:	push   esi
  407c21:	cmp    BYTE PTR [edx],bl
  407c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c24:	mov    ds:0x50c85f8b,al
  407c29:	fst    QWORD PTR [eax]
  407c2b:	les    ebx,FWORD PTR [ebp-0x4d1172f0]
  407c31:	adc    al,0xce
  407c33:	sbb    al,0x11
  407c35:	cmp    edx,DWORD PTR [ecx+ebx*1+0x74706d24]
  407c3c:	adc    al,0xed
  407c3e:	fstp   TBYTE PTR [edi-0x11e05853]
  407c44:	fdivr  st,st(7)
  407c46:	mov    DWORD PTR [ecx-0x7f2a73b3],ecx
  407c4c:	inc    eax
  407c4d:	add    ecx,ecx
  407c4f:	mov    ch,0xa0
  407c51:	in     eax,0x10
  407c53:	fs dec esi
  407c55:	rcl    BYTE PTR [edx],0x57
  407c58:	loop   0x407caa
  407c5a:	in     eax,0xb8
  407c5c:	sub    dl,dh
  407c5e:	push   eax
  407c5f:	jno    0x407bf6
  407c61:	and    DWORD PTR [eax-0x2],0xffffffe7
  407c65:	es cmp eax,0x22342f35
  407c6b:	xor    DWORD PTR [edi],ebp
  407c6d:	cmp    eax,0x39ca8c63
  407c72:	mov    ds:0xd4e2732a,al
  407c77:	(bad)  
  407c78:	pop    ebx
  407c79:	cmp    al,0x96
  407c7b:	leave  
  407c7c:	shl    BYTE PTR [ecx-0xe],1
  407c7f:	popa   
  407c80:	jns    0x407cbb
  407c82:	aad    0x1b
  407c84:	lods   eax,DWORD PTR ds:[esi]
  407c85:	mov    es,eax
  407c87:	adc    esp,ebx
  407c89:	or     eax,ecx
  407c8b:	imul   edi,DWORD PTR [edi-0x150f318b],0xa31085d3
  407c95:	dec    ebx
  407c96:	(bad)  
  407c97:	nop
  407c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c99:	cwde   
  407c9a:	arpl   WORD PTR [ecx],dx
  407c9c:	addr16 imul ecx,edi,0xffffffb6
  407ca0:	dec    eax
  407ca1:	repnz xor ebp,DWORD PTR [ecx]
  407ca4:	push   eax
  407ca5:	outs   dx,DWORD PTR ds:[esi]
  407ca6:	mov    eax,DWORD PTR [esi]
  407ca8:	addr16 add eax,0xe8668c8e
  407cae:	stc    
  407caf:	mov    ebx,0xb8e7401d
  407cb4:	lahf   
  407cb5:	mov    bl,0x40
  407cb7:	xchg   ebx,eax
  407cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cb9:	xchg   BYTE PTR [edi],dh
  407cbb:	lds    ecx,FWORD PTR [ebx-0x4c523dcd]
  407cc1:	adc    BYTE PTR [eax+0x251120b6],al
  407cc7:	mov    eax,0x8705efd1
  407ccc:	xchg   edi,eax
  407ccd:	mov    al,0x71
  407ccf:	pop    ebx
  407cd0:	add    DWORD PTR [edi+0x50bc2a6f],ebp
  407cd6:	ret    
  407cd7:	addr16 aaa 
  407cd9:	(bad)  
  407cdb:	test   BYTE PTR [ecx+0x6d7b0486],0x17
  407ce2:	mov    bh,0x26
  407ce4:	retf   0x55c6
  407ce7:	sub    eax,0xe885420c
  407cec:	push   ds
  407ced:	faddp  st(5),st
  407cef:	int3   
  407cf0:	repnz rcr DWORD PTR [eax+0x1b],1
  407cf4:	jmp    FWORD PTR ds:0xf3c49ce9
  407cfa:	mov    ds:0x7a0b792a,al
  407cff:	add    ecx,DWORD PTR [edi]
  407d01:	cmp    ch,BYTE PTR [esi+0x2aa02a60]
  407d07:	mov    bl,bl
  407d09:	call   0x70d183d5
  407d0e:	jecxz  0x407ccb
  407d10:	and    bh,cl
  407d12:	push   0x429c1d82
  407d17:	lods   al,BYTE PTR ds:[esi]
  407d18:	xor    DWORD PTR [eax],esp
  407d1a:	inc    ebp
  407d1b:	rcl    dl,cl
  407d1d:	push   cs
  407d1e:	ret    
  407d1f:	mov    ah,BYTE PTR [edx-0x30]
  407d22:	call   0xb9fa:0x5c97f2e7
  407d29:	fxsave [edi-0x6f]
  407d2d:	pop    es
  407d2e:	add    edx,DWORD PTR [edx+0x1b]
  407d31:	xor    DWORD PTR [ecx+0x58],ebp
  407d34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d35:	jecxz  0x407d6e
  407d37:	dec    ecx
  407d38:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d3a:	(bad)  
  407d3b:	loopne 0x407d0e
  407d3d:	pop    edi
  407d3e:	ret    0x240c
  407d41:	pop    esi
  407d42:	push   esi
  407d43:	addr16 or al,0x7d
  407d46:	mov    dh,0x3c
  407d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d49:	jecxz  0x407d9c
  407d4b:	int    0xb8
  407d4d:	(bad)  
  407d4e:	test   DWORD PTR [ecx-0x3d200082],0x7fa88ff6
  407d58:	pop    edi
  407d59:	inc    ebx
  407d5a:	sbb    BYTE PTR [ecx+0x6019f659],al
  407d60:	mov    ebp,0x9cd7ae13
  407d65:	mov    cl,0x89
  407d67:	mov    ?,WORD PTR [eax-0x65abcc2a]
  407d6d:	and    ebp,DWORD PTR [eax+0xe]
  407d70:	push   0x47
  407d72:	mov    DWORD PTR [ebx],0xe037a99e
  407d78:	fidiv  DWORD PTR [ebx-0x17]
  407d7b:	frstor [ecx-0x7d]
  407d7e:	mov    ds:0x48e30c00,al
  407d83:	js     0x407db6
  407d85:	inc    eax
  407d86:	pop    edx
  407d87:	(bad)  
  407d88:	mov    esi,0x40efffe7
  407d8d:	mov    ebx,0x4257ae5
  407d92:	out    dx,al
  407d93:	dec    ecx
  407d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d95:	outs   dx,BYTE PTR ds:[esi]
  407d96:	sub    DWORD PTR [ecx+0x7cd55de7],esi
  407d9c:	les    esp,FWORD PTR [ecx+edx*8-0x252850c2]
  407da3:	inc    edx
  407da4:	retf   
  407da5:	push   ebp
  407da6:	xchg   edx,eax
  407da7:	in     eax,dx
  407da8:	xor    eax,0xf021fe9
  407dad:	dec    ecx
  407dae:	xlat   BYTE PTR ds:[ebx]
  407daf:	jle    0x407dd7
  407db1:	push   ds
  407db2:	mov    ebp,0xed4b84fa
  407db7:	cmp    ecx,DWORD PTR [eax+0x212eb19c]
  407dbd:	das    
  407dbe:	jmp    0x4511:0x61fcd004
  407dc5:	jmp    0x6ecf3bd6
  407dca:	test   BYTE PTR [edx+0x3bd948da],bh
  407dd0:	ret    
  407dd1:	mov    ds:0xe216e781,eax
  407dd6:	int    0x79
  407dd8:	sub    al,0x15
  407dda:	cs repnz push ebx
  407ddd:	jle    0x407e0a
  407ddf:	scas   al,BYTE PTR es:[edi]
  407de0:	mov    edx,0x3b5e23f9
  407de5:	outs   dx,BYTE PTR ds:[esi]
  407de6:	add    ebx,esi
  407de8:	loopne 0x407df2
  407dea:	aas    
  407deb:	out    dx,eax
  407dec:	push   ebp
  407ded:	icebp  
  407dee:	and    bl,dh
  407df0:	xor    cl,BYTE PTR [esi]
  407df2:	add    eax,DWORD PTR [ebx+edi*2]
  407df5:	jp     0x407e34
  407df7:	fst    DWORD PTR [eax]
  407df9:	or     dl,ch
  407dfb:	xor    esi,ecx
  407dfd:	dec    edx
  407dfe:	loope  0x407e5e
  407e00:	or     eax,DWORD PTR [ecx-0x4f]
  407e03:	cmp    BYTE PTR [edx],ah
  407e05:	jnp    0x407e14
  407e07:	scas   al,BYTE PTR es:[edi]
  407e08:	pop    ecx
  407e09:	imul   ecx,eax,0xf
  407e0c:	jle    0x407e2e
  407e0e:	ins    BYTE PTR es:[edi],dx
  407e0f:	sub    DWORD PTR [eax+0x6b],edx
  407e12:	jecxz  0x407e61
  407e14:	imul   esp,DWORD PTR [edi+0x19],0xd8a8d65a
  407e1b:	test   al,bh
  407e1d:	clc    
  407e1e:	pusha  
  407e1f:	dec    esp
  407e20:	loop   0x407e59
  407e22:	(bad)  
  407e23:	dec    ebx
  407e24:	jo     0x407dec
  407e26:	sbb    ebx,edx
  407e28:	cli    
  407e29:	into   
  407e2a:	dec    ebx
  407e2b:	add    dh,BYTE PTR [ebx+0x49]
  407e2e:	pop    es
  407e2f:	add    esi,edx
  407e31:	out    0x5b,eax
  407e33:	test   eax,0x9508ab65
  407e38:	js     0x407e22
  407e3a:	add    edi,DWORD PTR [ebp+0xe]
  407e3d:	jecxz  0x407e18
  407e3f:	out    dx,eax
  407e40:	aaa    
  407e41:	or     ch,0x15
  407e44:	sub    ebx,esi
  407e46:	sbb    BYTE PTR [eax],cl
  407e48:	sbb    bh,BYTE PTR [eax-0x49ffcf76]
  407e4e:	je     0x407df8
  407e50:	xchg   ebp,eax
  407e51:	pushf  
  407e52:	inc    ecx
  407e53:	pop    ebx
  407e54:	pop    eax
  407e55:	dec    ecx
  407e56:	inc    esp
  407e57:	repnz std 
  407e59:	sar    DWORD PTR [ecx+0x6a],cl
  407e5c:	es push cs
  407e5e:	lods   al,BYTE PTR ds:[esi]
  407e5f:	test   BYTE PTR [ecx],0x70
  407e62:	aad    0xa9
  407e64:	inc    edi
  407e65:	xor    al,0x8a
  407e67:	inc    ebp
  407e68:	mov    esp,0x64a5efd9
  407e6d:	loopne 0x407e3d
  407e6f:	out    0xe6,eax
  407e71:	stos   DWORD PTR es:[edi],eax
  407e72:	add    BYTE PTR [eax],al
  407e74:	adc    al,0xb5
  407e76:	sbb    BYTE PTR [edi+0x68067b3],dl
  407e7c:	out    0xf4,al
  407e7e:	push   cs
  407e7f:	xchg   esi,eax
  407e80:	adc    eax,0x31b8bd0d
  407e85:	mov    edx,0x3b198c09
  407e8a:	sub    esi,ebp
  407e8c:	and    DWORD PTR [edx-0x21e7ab40],esp
  407e92:	jne    0x407e4b
  407e94:	lea    ebp,[ebx]
  407e96:	pop    edi
  407e97:	cmp    al,0x88
  407e99:	and    edx,DWORD PTR [eax+0x5bf1e53c]
  407e9f:	fld    DWORD PTR [ecx]
  407ea1:	jg     0x407e9b
  407ea3:	mov    ebp,0x287db77c
  407ea8:	out    dx,eax
  407ea9:	push   ebp
  407eaa:	jge    0x407ed3
  407eac:	int    0x4a
  407eae:	sbb    bl,BYTE PTR [esi-0x3f]
  407eb1:	jl     0x407eed
  407eb3:	adc    eax,0x534fffc8
  407eb8:	outs   dx,BYTE PTR ds:[esi]
  407eb9:	iret   
  407eba:	cli    
  407ebb:	ret    0xe90c
  407ebe:	retf   
  407ebf:	inc    eax
  407ec0:	mov    bh,0x11
  407ec2:	inc    ebx
  407ec3:	popf   
  407ec4:	and    ah,BYTE PTR [ebx+0x21cb30d9]
  407eca:	sbb    edx,edx
  407ecc:	pop    edx
  407ecd:	pusha  
  407ece:	mov    al,0x8a
  407ed0:	gs jo  0x407e67
  407ed3:	in     eax,0xce
  407ed5:	sub    eax,edi
  407ed7:	fst    QWORD PTR [ebx-0x678028bd]
  407edd:	and    esp,DWORD PTR [edx-0x3951c4a2]
  407ee3:	mov    dl,BYTE PTR [ecx+0x537076d3]
  407ee9:	inc    ebx
  407eeb:	call   0x512f:0x89e616b3
  407ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ef3:	jnp    0x407eb9
  407ef5:	jmp    0x7344:0xca1fcba8
  407efc:	cmp    eax,0xf8bfd9e
  407f01:	psraw  mm1,QWORD PTR ds:0xbc7c5b09
  407f08:	inc    esp
  407f09:	(bad)  [edi-0x300615a4]
  407f0f:	in     al,0xf7
  407f11:	fld    DWORD PTR [ecx]
  407f13:	inc    edi
  407f14:	add    esp,DWORD PTR [ecx]
  407f16:	adc    eax,0xd1224c5f
  407f1b:	cmc    
  407f1c:	jb     0x407f9a
  407f1e:	test   al,0x5e
  407f20:	test   eax,0x2c369bf3
  407f25:	pop    edi
  407f26:	add    DWORD PTR [esi+0x39],0x7740f044
  407f2d:	adc    DWORD PTR [ebx+eax*1],0x7dbdfa59
  407f34:	dec    esp
  407f35:	sbb    eax,0xf5891103
  407f3a:	push   ecx
  407f3b:	(bad)  
  407f3c:	mov    ds:0xcc3f878d,eax
  407f41:	fidivr DWORD PTR [eax-0x40077cad]
  407f47:	add    DWORD PTR [ecx-0x487c8df3],ecx
  407f4d:	and    eax,0x23b3b633
  407f52:	and    bh,dh
  407f54:	jb     0x407f5b
  407f56:	cs cwde 
  407f58:	scas   al,BYTE PTR es:[edi]
  407f59:	mov    edx,0xc548bc1c
  407f5e:	dec    edx
  407f5f:	add    BYTE PTR [edi+0x581cfae0],ch
  407f65:	sbb    ecx,DWORD PTR [edi-0x36]
  407f68:	add    esi,DWORD PTR [ebx+0x31]
  407f6b:	xor    BYTE PTR [ebx+0x4710dc2c],0x10
  407f72:	(bad)  
  407f73:	sar    BYTE PTR [edx],1
  407f75:	push   ss
  407f76:	mov    ebp,ebp
  407f78:	xor    edi,esi
  407f7a:	mov    cs,WORD PTR [ecx]
  407f7c:	gs mov ecx,0x7930ed27
  407f82:	out    0xf7,al
  407f84:	shl    DWORD PTR [esi+eiz*1+0x38],1
  407f88:	shr    BYTE PTR [ebx-0x6b],1
  407f8b:	enter  0x3df4,0x80
  407f8f:	imul   ebp,esi,0x35
  407f92:	aad    0xc8
  407f94:	xor    bh,dl
  407f96:	ja     0x407faf
  407f98:	popf   
  407f99:	jno    0x407f5f
  407f9b:	and    eax,0xf57625c7
  407fa0:	cmp    al,0x6
  407fa2:	adc    bh,cl
  407fa4:	in     al,dx
  407fa5:	cld    
  407fa6:	push   ecx
  407fa7:	iret   
  407fa8:	inc    esp
  407fa9:	dec    edi
  407faa:	enter  0x322,0xde
  407fae:	push   es
  407faf:	add    DWORD PTR [edx-0x29],eax
  407fb2:	cdq    
  407fb3:	fscale 
  407fb5:	aas    
  407fb6:	fidivr DWORD PTR [edx-0xb6a363]
  407fbc:	mov    eax,0xbd98acc9
  407fc1:	frstor [eax-0x4e]
  407fc4:	mov    dl,0x93
  407fc6:	push   edi
  407fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fc8:	add    DWORD PTR ds:0xe6707e71,ecx
  407fce:	mov    dh,0x60
  407fd0:	inc    edx
  407fd1:	test   eax,0x8ad3802f
  407fd6:	cdq    
  407fd7:	lods   eax,DWORD PTR ds:[esi]
  407fd8:	ja     0x407fd9
  407fda:	fistp  QWORD PTR [ecx]
  407fdc:	sub    bh,dl
  407fde:	imul   ecx,DWORD PTR [ebx],0x5c
  407fe1:	push   ss
  407fe2:	jnp    0x407f6d
  407fe4:	mov    bl,0x49
  407fe6:	mov    edi,0x2d200dac
  407feb:	fdiv   DWORD PTR [esp+esi*1-0x51]
  407fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ff0:	mov    ah,0x2a
  407ff2:	sahf   
  407ff3:	mov    bl,0x61
  407ff5:	or     eax,0xc8797b31
  407ffa:	or     BYTE PTR ds:0xa2603f4d,ah
  408000:	mov    ds:0xba9f5ebe,al
  408005:	loopne 0x40801c
  408007:	inc    ebx
  408008:	aad    0x39
  40800a:	fisub  DWORD PTR [eax+0x54]
  40800d:	cmp    BYTE PTR [edi],bh
  40800f:	mov    ah,0x28
  408011:	outs   dx,BYTE PTR ds:[esi]
  408012:	sub    ch,BYTE PTR ds:0x518a743d
  408018:	and    eax,0x3a831d3c
  40801d:	dec    BYTE PTR [edi]
  40801f:	pop    ebp
  408020:	scas   eax,DWORD PTR es:[edi]
  408021:	mov    al,0x2b
  408023:	test   eax,0x103af94f
  408028:	clc    
  408029:	push   es
  40802a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40802b:	sbb    ah,BYTE PTR [ebx+0x1ba3fc51]
  408031:	scas   al,BYTE PTR es:[edi]
  408032:	mov    cl,BYTE PTR [ebx+0x22f0893b]
  408038:	dec    ebx
  408039:	not    DWORD PTR [eax-0x35]
  40803c:	fmul   st,st(4)
  40803e:	push   ds
  40803f:	cmp    eax,0x451a62d8
  408044:	fdivr  DWORD PTR [eax]
  408046:	lds    ebx,FWORD PTR [edi-0x62]
  408049:	dec    ecx
  40804a:	dec    ecx
  40804b:	adc    esp,DWORD PTR [ebx]
  40804d:	jl     0x408011
  40804f:	adc    bl,dh
  408051:	mov    ch,0x1f
  408053:	gs mov ch,al
  408056:	xlat   BYTE PTR ds:[ebx]
  408057:	mov    esp,DWORD PTR [edi]
  408059:	push   ecx
  40805a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40805c:	fisttp DWORD PTR [esi]
  40805e:	cmp    al,0x55
  408060:	add    ecx,0xbd4bb05c
  408066:	jmp    0x810a:0x4bd7535a
  40806d:	jns    0x408020
  40806f:	adc    cl,BYTE PTR [ecx+0x39]
  408072:	fstp   DWORD PTR [ebx-0x75]
  408075:	adc    ecx,DWORD PTR [ebp+0x1b7f0726]
  40807b:	clc    
  40807c:	cli    
  40807d:	ins    DWORD PTR es:[edi],dx
  40807e:	cmp    al,0x42
  408080:	inc    esp
  408081:	mov    eax,ds:0xf091b3e6
  408086:	pop    ss
  408087:	add    dh,0xe6
  40808a:	fs in  al,0x86
  40808d:	dec    esp
  40808e:	das    
  40808f:	adc    eax,0xfba11ccf
  408094:	addr16 aad 0x6b
  408097:	popf   
  408098:	cmp    eax,0x71de7da0
  40809d:	sub    BYTE PTR [esi+0x53360ab9],bh
  4080a3:	xor    ah,cl
  4080a5:	(bad)  
  4080a6:	clc    
  4080a7:	repnz jecxz 0x40806c
  4080aa:	arpl   WORD PTR [eax-0x29a2e194],di
  4080b0:	daa    
  4080b1:	idiv   DWORD PTR [ebx+0x39]
  4080b4:	(bad)  
  4080b5:	push   ds
  4080b6:	inc    edx
  4080b7:	xchg   BYTE PTR [ebx],al
  4080b9:	mov    cl,0x1e
  4080bb:	dec    edi
  4080bc:	repz jp 0x408109
  4080bf:	add    al,0x37
  4080c1:	and    eax,0x5f411c8f
  4080c6:	test   al,0x3b
  4080c8:	clc    
  4080c9:	xor    BYTE PTR [ebx+0x71],cl
  4080cc:	or     DWORD PTR [eax+0x62eb7938],ebx
  4080d2:	enter  0xa62a,0x90
  4080d6:	sub    dh,BYTE PTR [edx+0x21]
  4080d9:	sub    edx,DWORD PTR [eax]
  4080db:	sub    eax,0xb5ea4f8c
  4080e0:	jge    0x408132
  4080e2:	ds adc bh,dh
  4080e5:	jne    0x4080f1
  4080e7:	lods   al,BYTE PTR ds:[esi]
  4080e8:	jg     0x408158
  4080ea:	aam    0x7f
  4080ec:	scas   al,BYTE PTR es:[edi]
  4080ed:	ja     0x408140
  4080ef:	cld    
  4080f0:	xchg   ebx,eax
  4080f1:	mov    bl,0xa6
  4080f3:	fisub  WORD PTR [esi-0x41a3e68f]
  4080f9:	sbb    esi,ebx
  4080fb:	or     eax,0xc9db220b
  408100:	mov    bl,0x93
  408102:	and    eax,eax
  408104:	(bad)  
  408105:	sbb    al,0xc2
  408107:	pop    ds
  408108:	(bad)  
  408109:	lea    ecx,[edx+0x6e40eb82]
  40810f:	call   0x9c7e9f7f
  408114:	mov    dh,0x89
  408116:	mov    esp,0x7ab33d8
  40811b:	adc    al,0x15
  40811d:	aad    0x73
  40811f:	mov    al,ds:0x1fb4e3cf
  408124:	and    dl,BYTE PTR [ecx]
  408126:	ins    DWORD PTR es:[edi],dx
  408127:	aam    0xda
  408129:	mov    cl,0xc5
  40812b:	imul   ecx,DWORD PTR [ecx],0xffffffcc
  40812e:	mov    bl,0x85
  408130:	jno    0x40811f
  408132:	push   0x1
  408134:	push   eax
  408135:	jmp    0xe651:0xea2789fd
  40813c:	test   al,0xcb
  40813e:	(bad)  
  408140:	sbb    eax,0x1b6438a1
  408145:	xor    al,0xd3
  408147:	or     dl,BYTE PTR [edi]
  408149:	inc    edi
  40814a:	shl    DWORD PTR [ecx+0x25],cl
  40814d:	adc    eax,0xc32f69e0
  408152:	push   cs
  408153:	sub    ecx,DWORD PTR [eax]
  408155:	pop    ss
  408156:	xor    eax,0x524be740
  40815b:	fmul   st,st(0)
  40815d:	stos   DWORD PTR es:[edi],eax
  40815e:	and    eax,0xdf1b1e01
  408163:	pop    eax
  408164:	mov    bh,0x7a
  408166:	mov    DWORD PTR [esi-0x78bbe3da],0x97e4ad5
  408170:	xchg   ebx,eax
  408171:	mov    WORD PTR [esi+0xf719e9e],fs
  408177:	in     eax,0x4f
  408179:	sar    BYTE PTR [ebx+eax*1],cl
  40817c:	mov    cl,0xed
  40817e:	and    al,BYTE PTR [edx+0xea7fe04]
  408184:	fiadd  DWORD PTR [ecx]
  408186:	mov    eax,0x268bfc53
  40818b:	adc    eax,0x87d5c97
  408190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408191:	ins    BYTE PTR es:[edi],dx
  408192:	push   ebx
  408193:	inc    ecx
  408194:	popf   
  408195:	mov    bh,0x77
  408197:	retf   
  408198:	xlat   BYTE PTR ds:[ebx]
  408199:	dec    edx
  40819a:	push   cs
  40819b:	test   BYTE PTR [ecx],bl
  40819d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40819e:	cli    
  40819f:	cmp    al,0x53
  4081a1:	sub    eax,esp
  4081a3:	push   esi
  4081a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081a5:	push   0x18
  4081a7:	popa   
  4081a8:	adc    DWORD PTR [esi+ebp*8],edx
  4081ab:	pop    esp
  4081ac:	clc    
  4081ad:	cmp    eax,esi
  4081af:	popa   
  4081b0:	adc    BYTE PTR [ebx+0x4c],ch
  4081b3:	cld    
  4081b4:	icebp  
  4081b5:	push   0x47
  4081b7:	pop    ds
  4081b8:	test   al,0xf2
  4081ba:	push   es
  4081bb:	ds aaa 
  4081bd:	xchg   edx,eax
  4081be:	jbe    0x4081b4
  4081c0:	or     ebx,ecx
  4081c2:	mov    ds,WORD PTR [esi+0x345eec2a]
  4081c8:	jbe    0x40815d
  4081ca:	mov    DWORD PTR [edi-0x7c5af847],eax
  4081d0:	inc    edx
  4081d1:	sub    DWORD PTR [ecx-0x2f4d5467],esi
  4081d7:	popa   
  4081d8:	aaa    
  4081d9:	(bad)  
  4081da:	adc    DWORD PTR [esi-0x2c],0x7f
  4081de:	pushf  
  4081df:	pop    ebp
  4081e0:	sbb    al,0x4b
  4081e2:	js     0x40817d
  4081e4:	leave  
  4081e5:	lods   al,BYTE PTR ds:[esi]
  4081e6:	dec    ebx
  4081e7:	xchg   ebp,eax
  4081e8:	shl    BYTE PTR [ecx-0x32],1
  4081eb:	and    DWORD PTR [edi-0x70c83bfe],0xfffffff2
  4081f2:	pop    ebx
  4081f3:	test   DWORD PTR [eax-0x32d54024],0xde1ba183
  4081fd:	mov    bh,0x8a
  4081ff:	outs   dx,BYTE PTR ds:[esi]
  408200:	fisub  DWORD PTR [ebp+esi*8-0x2781dff0]
  408207:	call   DWORD PTR [eax-0x5ce179e5]
  40820d:	add    al,0xff
  40820f:	jge    0x4081b4
  408211:	jnp    0x408280
  408213:	mov    BYTE PTR [ebx],0xe6
  408216:	mov    dh,0x99
  408218:	or     eax,0x1a260486
  40821d:	cmp    eax,0x3fe6eb98
  408222:	enter  0xb642,0x3
  408226:	scas   eax,DWORD PTR es:[edi]
  408227:	imul   BYTE PTR [esi]
  408229:	jl     0x4081fc
  40822b:	xor    cl,dh
  40822d:	add    esi,DWORD PTR [ebp-0x1afabc60]
  408233:	in     al,0x0
  408235:	jle    0x408280
  408237:	xchg   edx,ebx
  408239:	ror    DWORD PTR [esi-0x1c2dce7c],cl
  40823f:	test   esi,esp
  408241:	imul   edx,esi,0xb789353
  408247:	push   cs
  408248:	repz cdq 
  40824a:	dec    edx
  40824b:	mov    bl,0x13
  40824d:	push   0xf4d7e72c
  408252:	enter  0xc3b,0xce
  408256:	adc    al,0xa8
  408258:	outs   dx,DWORD PTR ds:[esi]
  408259:	into   
  40825a:	mov    esi,0x7f0f20e2
  40825f:	loope  0x4082c6
  408261:	xor    eax,0x21e1b18a
  408266:	mov    eax,DWORD PTR [edx+ebx*1+0x23]
  40826a:	and    DWORD PTR [ebx-0x52a959d7],esp
  408270:	mov    esp,0x17f2cc11
  408275:	(bad)  
  408276:	jb     0x40824f
  408278:	rcl    DWORD PTR [ebp+0x54d9eabb],cl
  40827e:	jl     0x408222
  408280:	jb     0x40828a
  408282:	jle    0x40825e
  408284:	shl    BYTE PTR fs:[ebx+0x7f],0x91
  408289:	inc    edx
  40828a:	and    bh,BYTE PTR [ecx+0x7609b61c]
  408290:	xchg   ecx,eax
  408291:	fs and ebx,ebx
  408294:	mov    bh,BYTE PTR [eax]
  408296:	cwde   
  408297:	xchg   ebp,eax
  408298:	sbb    eax,0xeaf53a29
  40829d:	lock or eax,0x2f55c7ca
  4082a3:	add    al,0x64
  4082a5:	data16 ja 0x408275
  4082a8:	pop    ebx
  4082a9:	pop    ecx
  4082aa:	js     0x408235
  4082ac:	pop    ebp
  4082ad:	imul   esp,DWORD PTR [edi+0x73],0x16
  4082b1:	js     0x4082d9
  4082b3:	dec    esp
  4082b4:	xlat   BYTE PTR ds:[ebx]
  4082b5:	iret   
  4082b6:	(bad)  
  4082b7:	or     al,0x5a
  4082b9:	test   DWORD PTR [esi+edx*1+0x5e96980f],esi
  4082c0:	bound  esp,QWORD PTR [ebx]
  4082c2:	cs fwait
  4082c4:	or     al,0xfc
  4082c6:	ret    
  4082c7:	rol    BYTE PTR [edx-0x71ac59a],0xe
  4082ce:	xor    ebx,0x7fea44f
  4082d4:	xchg   ecx,eax
  4082d5:	push   esi
  4082d6:	mov    dl,0xde
  4082d8:	dec    eax
  4082d9:	dec    ebp
  4082da:	xchg   esp,eax
  4082db:	(bad)  
  4082dc:	imul   eax,DWORD PTR [ebp+0x74],0xffffffef
  4082e0:	jne    0x40831a
  4082e2:	fpatan 
  4082e4:	(bad)  
  4082e5:	rol    DWORD PTR [eax+edx*8],0x8f
  4082e9:	arpl   WORD PTR [esi-0x4e],si
  4082ec:	repnz xor cl,BYTE PTR [edx]
  4082ef:	pop    ss
  4082f0:	hlt    
  4082f1:	retf   0x678
  4082f4:	mov    esp,0xaa7643bd
  4082f9:	and    DWORD PTR [esi-0x44],edi
  4082fc:	imul   ecx,DWORD PTR [bx+si+0x1c],0x5e974e57
  408304:	fidiv  WORD PTR [esi+ecx*4]
  408307:	outs   dx,BYTE PTR ds:[esi]
  408308:	inc    ebx
  408309:	int    0x90
  40830b:	and    ebx,DWORD PTR [ebx]
  40830d:	jmp    0x563e:0x8578ae18
  408314:	pushw  0x71
  408317:	and    DWORD PTR cs:[eax],ecx
  40831a:	lods   eax,DWORD PTR ds:[esi]
  40831b:	repnz pop ebx
  40831d:	or     eax,0x6405f4e8
  408322:	outs   dx,DWORD PTR ds:[esi]
  408323:	mov    al,0xa4
  408325:	(bad)  
  408326:	mov    DWORD PTR [ecx],0xe058e117
  40832c:	push   0x3d
  40832e:	ins    BYTE PTR es:[edi],dx
  40832f:	aaa    
  408330:	jae    0x4082b3
  408332:	or     eax,0x886e5372
  408337:	or     ah,BYTE PTR [ebx-0x5bdbea27]
  40833d:	sti    
  40833e:	aam    0xcc
  408340:	xor    DWORD PTR [ebx-0x60a92d1a],0xffffff84
  408347:	pop    esi
  408348:	pop    es
  408349:	scas   eax,DWORD PTR es:[edi]
  40834a:	adc    edi,DWORD PTR [eax+0x4]
  40834d:	xor    eax,0x12f59b60
  408352:	leave  
  408353:	sub    BYTE PTR [ecx],dh
  408355:	inc    esi
  408356:	in     al,0x2a
  408358:	cmp    ebp,DWORD PTR [ebp-0x3a]
  40835b:	hlt    
  40835c:	cmp    BYTE PTR [edi-0xfd1b8b3],0xee
  408363:	js     0x4082eb
  408365:	stc    
  408366:	mov    gs,WORD PTR [edi+0xc48cc51]
  40836c:	pop    edx
  40836d:	inc    ebp
  40836e:	out    dx,eax
  40836f:	in     eax,dx
  408370:	mov    bh,0x8f
  408372:	add    DWORD PTR [ecx+0x4959af97],esp
  408378:	dec    esp
  408379:	ret    
  40837a:	fldenv [edx+0x7853c51a]
  408380:	out    dx,al
  408381:	in     eax,dx
  408382:	popf   
  408383:	push   edi
  408384:	mov    eax,0xedaa9b92
  408389:	pop    ss
  40838a:	outs   dx,DWORD PTR ds:[esi]
  40838b:	test   al,0xd1
  40838d:	and    DWORD PTR [esi+0x7],ebx
  408390:	push   eax
  408391:	mov    dl,0x90
  408393:	mov    bl,0x81
  408396:	adc    ch,cl
  408398:	popf   
  408399:	cmp    al,0x36
  40839b:	(bad)  
  40839c:	inc    esi
  40839d:	int3   
  40839e:	pusha  
  40839f:	call   0x6913:0x262a84aa
  4083a6:	ins    DWORD PTR es:[edi],dx
  4083a7:	cmp    DWORD PTR ds:0xf38ed80b,ebx
  4083ad:	mov    BYTE PTR [edi+0x73],al
  4083b0:	test   BYTE PTR [edx-0x3695e306],0x6
  4083b7:	stos   DWORD PTR es:[edi],eax
  4083b8:	(bad)  [esi+0x2d]
  4083bb:	(bad)  
  4083bc:	jmp    0x3eec97e5
  4083c1:	lahf   
  4083c2:	stos   BYTE PTR es:[edi],al
  4083c3:	or     eax,0x34c256c6
  4083c8:	test   BYTE PTR [esp+ecx*1],dl
  4083cb:	icebp  
  4083cc:	sub    BYTE PTR [esi-0x32],0x1a
  4083d0:	out    dx,eax
  4083d1:	adc    al,0xae
  4083d3:	jmp    0xb04c:0xa3201ded
  4083da:	mov    eax,ds:0x8d385885
  4083df:	loop   0x408372
  4083e1:	pop    ebp
  4083e2:	jp     0x408403
  4083e4:	in     al,dx
  4083e5:	ror    BYTE PTR [ecx-0x341abd11],cl
  4083eb:	pusha  
  4083ec:	lods   eax,DWORD PTR ds:[esi]
  4083ed:	jnp    0x40843c
  4083ef:	mov    DWORD PTR [esp+edx*8-0x7c53f5e2],esp
  4083f6:	push   esi
  4083f7:	xor    BYTE PTR [ebx],ah
  4083f9:	test   BYTE PTR [ebp+0x4],al
  4083fc:	stos   DWORD PTR es:[edi],eax
  4083fd:	jnp    0x40838e
  4083ff:	pop    ss
  408400:	jecxz  0x408428
  408402:	sub    BYTE PTR [eax+0x79],0xc4
  408406:	mov    bh,0x28
  408408:	mov    dl,0x87
  40840a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40840b:	lods   al,BYTE PTR ds:[esi]
  40840c:	adc    DWORD PTR [eax+0x48],0x2b
  408410:	ja     0x408438
  408412:	mov    dl,0xa8
  408414:	ficomp DWORD PTR [ebx+0x14]
  408417:	jns    0x4083ec
  408419:	add    BYTE PTR [ebx+ebp*8-0x7d3ed83e],bl
  408420:	jae    0x4083a4
  408422:	jg     0x408422
  408424:	push   eax
  408425:	push   esi
  408426:	cld    
  408427:	xor    DWORD PTR ds:0x8d738a12,edx
  40842d:	adc    DWORD PTR [eax+0x5a],edx
  408430:	sti    
  408431:	adc    ah,BYTE PTR [ebp+esi*4-0x310e20fa]
  408438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408439:	add    bl,0xb9
  40843c:	lods   al,BYTE PTR ds:[esi]
  40843d:	stc    
  40843e:	gs jns 0x4083c3
  408441:	mov    ds:0xa3dd920b,eax
  408446:	sub    al,0xef
  408448:	xor    al,0x27
  40844a:	mov    esp,0xdf0933a4
  40844f:	mov    ah,0xbb
  408451:	pop    ebx
  408452:	push   ecx
  408453:	stos   BYTE PTR es:[edi],al
  408454:	mov    al,0x72
  408456:	cmp    BYTE PTR [edx+0x6ec0a7fb],al
  40845c:	popf   
  40845d:	imul   DWORD PTR [esp+ecx*8]
  408460:	pushf  
  408461:	jmp    0xeb67:0xe38d2eff
  408468:	sti    
  408469:	xchg   esi,eax
  40846a:	xor    ch,BYTE PTR [ebp+0x1d15c53]
  408470:	add    BYTE PTR [ebp+0x2f],0xdf
  408474:	jecxz  0x4084e3
  408476:	pop    ebp
  408477:	sub    DWORD PTR [edx+eax*2-0x2e],edi
  40847b:	mov    ds:0xe9dce558,eax
  408480:	push   ebp
  408481:	imul   edi,DWORD PTR [ecx+eax*4],0x3acb01f8
  408488:	sub    BYTE PTR [ebx],dh
  40848a:	inc    edi
  40848b:	adc    WORD PTR [esi+0x53],sp
  40848f:	call   0x4d557168
  408494:	cmp    BYTE PTR [edx-0x1],0xbf
  408498:	cmc    
  408499:	mov    ah,0xcf
  40849b:	sbb    eax,ebp
  40849d:	inc    ecx
  40849e:	cli    
  40849f:	outs   dx,BYTE PTR ds:[esi]
  4084a0:	and    ebx,esp
  4084a2:	fcom   QWORD PTR [ebx+0x49af3cad]
  4084a8:	les    ebx,FWORD PTR [ecx+edi*2+0x76700465]
  4084af:	xchg   DWORD PTR [ebx],edx
  4084b1:	out    dx,al
  4084b2:	cli    
  4084b3:	sub    al,0xe8
  4084b5:	mov    eax,0xbaa90f39
  4084ba:	mov    al,ds:0x139c1e3d
  4084bf:	ins    DWORD PTR es:[edi],dx
  4084c0:	in     al,0xe2
  4084c2:	push   eax
  4084c3:	xor    edi,edx
  4084c5:	scas   al,BYTE PTR es:[edi]
  4084c6:	sbb    DWORD PTR [ebp+0x78],0xffffffcd
  4084ca:	push   es
  4084cb:	add    esi,DWORD PTR [ebx+0x56fe9236]
  4084d1:	and    al,0x56
  4084d3:	mov    eax,0xc6198f54
  4084d8:	add    eax,0xecd7f0a1
  4084dd:	push   ss
  4084de:	and    DWORD PTR [edx-0x44],edx
  4084e1:	adc    ah,dh
  4084e3:	in     al,dx
  4084e4:	retf   0x15d1
  4084e7:	repnz ffree st(0)
  4084ea:	(bad)  
  4084eb:	jg     0x4084d1
  4084ed:	loope  0x4084a5
  4084ef:	cmp    BYTE PTR [eax-0x1],dl
  4084f2:	inc    DWORD PTR [ecx+ebx*2]
  4084f5:	enter  0x1d43,0x18
  4084f9:	stos   BYTE PTR es:[edi],al
  4084fa:	pop    ebp
  4084fb:	rol    ebx,cl
  4084fd:	jl     0x40848a
  4084ff:	int3   
  408500:	dec    edi
  408501:	enter  0x7ed7,0x78
  408505:	icebp  
  408506:	jno    0x408567
  408508:	inc    edx
  408509:	leave  
  40850a:	cmc    
  40850b:	fst    QWORD PTR [ecx]
  40850d:	retf   0xa493
  408510:	aaa    
  408511:	(bad)  
  408512:	(bad)  
  408513:	lds    eax,FWORD PTR [eax]
  408515:	cmp    al,0x7
  408517:	pop    esp
  408518:	leave  
  408519:	lea    edi,[edx]
  40851b:	call   FWORD PTR fs:[esp+ebx*4]
  40851f:	jecxz  0x408575
  408521:	xor    eax,0x686f1eb3
  408526:	sahf   
  408527:	jbe    0x40851a
  408529:	push   ecx
  40852a:	popa   
  40852b:	std    
  40852c:	adc    eax,eax
  40852e:	stos   BYTE PTR es:[edi],al
  40852f:	idiv   BYTE PTR [esi]
  408531:	jbe    0x4084eb
  408533:	fdivr  DWORD PTR [esi-0x4c]
  408536:	(bad)  
  408538:	call   0xe2a58555
  40853d:	fild   QWORD PTR [esi+eiz*1+0x6bc7cf8f]
  408544:	jmp    0x1996:0x65c62a5c
  40854b:	pop    esi
  40854c:	aas    
  40854d:	or     al,BYTE PTR ds:0x8da3a0f1
  408553:	mov    al,ds:0x86b5f299
  408558:	retf   
  408559:	fs (bad) 
  40855b:	adc    BYTE PTR [eax],dh
  40855d:	vorpd  ymm3,ymm1,YMMWORD PTR [ebx]
  408561:	push   cs
  408562:	cmp    eax,0x5a2c9733
  408567:	xchg   esi,eax
  408568:	inc    ebp
  408569:	or     al,0x12
  40856b:	jmp    0x79dd:0xfbbc6e63
  408572:	mov    DWORD PTR [ebx+0x49d4f7a9],ebx
  408578:	xchg   ebx,eax
  408579:	in     eax,0x44
  40857b:	outs   dx,DWORD PTR ds:[esi]
  40857c:	pop    esi
  40857d:	pushf  
  40857e:	repnz fstp QWORD PTR [esp+edx*1]
  408582:	and    al,0x3e
  408584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408585:	dec    edx
  408586:	cdq    
  408587:	cmp    eax,0x4784726b
  40858c:	aaa    
  40858d:	out    0x41,ax
  408590:	sbb    dl,cl
  408592:	jne    0x408579
  408594:	iret   
  408595:	adc    BYTE PTR [eax-0x14],al
  408598:	mov    edi,0xf7099907
  40859d:	adc    edx,ebx
  40859f:	or     dl,bh
  4085a1:	push   ss
  4085a2:	into   
  4085a3:	fcomp  QWORD PTR [eax+0x50]
  4085a6:	fsubr  QWORD PTR [ecx+0x40447041]
  4085ac:	hlt    
  4085ad:	mov    DWORD PTR [esi],edx
  4085af:	ret    0xed96
  4085b2:	mov    al,ds:0x5ea80b9e
  4085b7:	loop   0x4085d4
  4085b9:	and    al,BYTE PTR [esp+esi*2]
  4085bc:	push   DWORD PTR [ecx-0x4d]
  4085bf:	xchg   edi,eax
  4085c0:	mov    dl,0x60
  4085c2:	mov    eax,0x120941f5
  4085c7:	jl     0x40858e
  4085c9:	ja     0x408645
  4085cb:	int    0x48
  4085cd:	sti    
  4085ce:	out    0x8a,eax
  4085d0:	hlt    
  4085d1:	xchg   esp,eax
  4085d2:	mov    ds:0x9712fe3f,eax
  4085d7:	mov    edi,0xe6671bb0
  4085dc:	(bad)  
  4085dd:	lods   eax,DWORD PTR ds:[esi]
  4085de:	cmp    al,0x82
  4085e0:	dec    edx
  4085e1:	mov    ds:0x30602dd,eax
  4085e6:	je     0x408630
  4085e8:	aad    0x6e
  4085ea:	clc    
  4085eb:	mov    ecx,0x92d46383
  4085f0:	add    esi,ebx
  4085f2:	repz mov ds:0xa0d984e8,eax
  4085f8:	(bad)  [esi]
  4085fa:	adc    ch,BYTE PTR [eax]
  4085fc:	xor    esp,DWORD PTR [eax-0x3a]
  4085ff:	inc    esp
  408600:	inc    esp
  408601:	repz push esp
  408603:	adc    bh,al
  408605:	jnp    0x4085f3
  408607:	cwde   
  408608:	push   0x6979deb1
  40860d:	std    
  40860e:	push   cs
  40860f:	je     0x4085e3
  408611:	sar    esi,1
  408613:	retf   0x63d4
  408616:	lahf   
  408617:	xchg   esp,eax
  408618:	sti    
  408619:	jns    0x40859b
  40861b:	xchg   DWORD PTR [edx-0x58bbbdfb],ebp
  408621:	mov    ch,0x52
  408623:	sub    DWORD PTR ds:0xe868a048,0xf43a10f1
  40862d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862e:	loopne 0x4085c4
  408630:	dec    esi
  408631:	add    ebp,DWORD PTR [esi]
  408633:	push   eax
  408634:	cmc    
  408635:	add    eax,0x4e91d72f
  40863a:	out    0xec,eax
  40863c:	mov    al,ds:0xbc3150f3
  408641:	out    0x42,eax
  408643:	bound  ecx,QWORD PTR [ebx+0xc]
  408646:	fwait
  408647:	push   esp
  408648:	xor    esi,eax
  40864a:	cmp    DWORD PTR [edi-0x5566fa67],0xb10a106e
  408654:	xor    eax,0x8d45b484
  408659:	repz call 0x30c06a23
  40865f:	sub    eax,0xd0800ff3
  408664:	das    
  408665:	leave  
  408666:	xor    DWORD PTR [edi-0x7],esp
  408669:	jnp    0x40868a
  40866b:	enter  0xefa5,0x2
  40866f:	sbb    ebx,DWORD PTR [ebx+0x69f97158]
  408675:	xor    ch,BYTE PTR [eax-0x58]
  408678:	fidivr DWORD PTR [ecx-0x2df725ba]
  40867e:	add    al,BYTE PTR [esi-0x17e686e4]
  408684:	retf   0x5fc0
  408687:	jae    0x4086d2
  408689:	(bad)  
  40868a:	jae    0x4086c8
  40868c:	fwait
  40868d:	and    al,0xe
  40868f:	xchg   BYTE PTR [edi-0x605aca74],cl
  408695:	ror    DWORD PTR [eax-0x759436c],0x5c
  40869c:	loopne 0x408655
  40869e:	xchg   edx,eax
  40869f:	sub    DWORD PTR [edx],esi
  4086a1:	enter  0x360b,0xa2
  4086a5:	int    0x61
  4086a7:	cmp    dh,BYTE PTR [esi]
  4086a9:	test   DWORD PTR [eax],esp
  4086ab:	int3   
  4086ac:	sbb    bl,BYTE PTR [ebp-0x2c7da5d3]
  4086b2:	mov    esp,0x8aebe6d5
  4086b7:	(bad)  
  4086b8:	jmp    0x408718
  4086ba:	in     eax,0xde
  4086bc:	dec    eax
  4086bd:	imul   esp,DWORD PTR [eax-0x7d4eb771],0xffffffaf
  4086c4:	or     BYTE PTR [ebx],ah
  4086c6:	mov    es,WORD PTR [edi+0x6de0da7d]
  4086cc:	or     DWORD PTR [esi],0x53
  4086cf:	add    DWORD PTR [edx-0x715e3ea5],ecx
  4086d5:	inc    ebp
  4086d6:	aaa    
  4086d7:	(bad)  
  4086d8:	(bad)  
  4086d9:	loopne 0x4086dc
  4086db:	sbb    DWORD PTR [ebx-0x38],edi
  4086de:	(bad)  
  4086df:	mov    ds:0x8e982051,eax
  4086e4:	mov    WORD PTR [ebp-0x51],es
  4086e7:	test   BYTE PTR [eax-0x6e],bl
  4086ea:	and    ch,BYTE PTR es:[edx-0x2d05338b]
  4086f1:	inc    ebp
  4086f2:	mov    esp,0xccb93089
  4086f7:	pushf  
  4086f8:	jae    0x40868b
  4086fa:	add    al,0x1f
  4086fc:	xor    BYTE PTR [ecx+ebp*1-0x37],dh
  408700:	cmp    eax,0x2c74399f
  408705:	cdq    
  408706:	add    eax,0x90b3f4b6
  40870b:	sub    BYTE PTR [esi-0x219fea3d],dl
  408711:	aam    0xb
  408713:	rcr    ch,cl
  408715:	mov    bl,0x1b
  408717:	xor    eax,eax
  408719:	ins    BYTE PTR es:[edi],dx
  40871a:	pusha  
  40871b:	cmp    BYTE PTR [esi-0x69a0b57f],dl
  408721:	add    BYTE PTR [eax+0x72],dh
  408724:	and    DWORD PTR ds:0x4a19c1ac,ebx
  40872a:	popf   
  40872b:	jecxz  0x408790
  40872d:	mov    esp,0x4c888aac
  408732:	pusha  
  408733:	add    eax,0x9e5220ff
  408738:	or     BYTE PTR [ebp-0x3],cl
  40873b:	mov    bh,0x2f
  40873d:	int    0x87
  40873f:	pop    esp
  408740:	cmp    bh,BYTE PTR [eax-0x551e7d08]
  408746:	xchg   ebx,eax
  408747:	mov    esi,esi
  408749:	cmp    DWORD PTR [ebx+0x10],esp
  40874c:	push   cs
  40874d:	fldenv [eax]
  40874f:	push   cs
  408750:	dec    ebx
  408751:	or     edx,DWORD PTR [esi-0x6d]
  408754:	xor    BYTE PTR [ecx+ebx*2],dl
  408757:	loop   0x408729
  408759:	fwait
  40875a:	cmp    eax,0x8a4affb9
  40875f:	mov    eax,ds:0x6d605527
  408764:	or     DWORD PTR [ebx],esi
  408766:	outs   dx,DWORD PTR ds:[esi]
  408767:	cmp    eax,0x8c0dfd2d
  40876c:	aam    0x86
  40876e:	push   edx
  40876f:	shl    BYTE PTR [esi+eiz*1],cl
  408772:	call   0xee6702d8
  408777:	push   edi
  408778:	pop    ebp
  408779:	cwde   
  40877a:	sahf   
  40877b:	test   DWORD PTR [ebx],esp
  40877d:	in     eax,0x5b
  40877f:	clc    
  408780:	(bad)  
  408781:	lahf   
  408782:	pop    edi
  408783:	or     bh,bl
  408785:	dec    esp
  408786:	lods   al,BYTE PTR ds:[esi]
  408787:	(bad)  
  408788:	push   ecx
  408789:	into   
  40878a:	lea    esi,[ebx-0x5]
  40878d:	jae    0x408790
  40878f:	(bad)  
  408790:	push   ss
  408791:	out    0x6f,eax
  408793:	leave  
  408794:	(bad)  
  408795:	mov    al,ds:0x1c629540
  40879a:	sub    esi,DWORD PTR [edi+0x39695a31]
  4087a0:	xchg   ebx,eax
  4087a1:	test   DWORD PTR [edi+0x3a],edi
  4087a4:	jge    0x408764
  4087a6:	dec    DWORD PTR [ebp-0x4dcc2e4f]
  4087ac:	and    eax,0xe90c422c
  4087b1:	xor    al,0x2
  4087b3:	adc    bl,BYTE PTR [edi+0x61da24ff]
  4087b9:	ds das 
  4087bb:	xor    BYTE PTR [edi],0xf2
  4087be:	sbb    eax,0x35d7f4a3
  4087c3:	sub    BYTE PTR [eax+0xde5ddb9],ch
  4087c9:	and    cl,BYTE PTR [eax]
  4087cb:	xchg   BYTE PTR [esi],dl
  4087cd:	rol    BYTE PTR [edx+0x11],0x1d
  4087d1:	xchg   ebp,eax
  4087d2:	dec    ebx
  4087d3:	sbb    bh,BYTE PTR [edi-0x3e]
  4087d6:	cmp    DWORD PTR [eax],0xfffffff6
  4087d9:	push   ds
  4087da:	mul    BYTE PTR [ebx+eiz*4-0x2f]
  4087de:	dec    ecx
  4087df:	cdq    
  4087e0:	jp     0x408782
  4087e2:	ret    
  4087e3:	ror    BYTE PTR [edx+0x40],1
  4087e6:	fwait
  4087e7:	jbe    0x408793
  4087e9:	xchg   ebx,eax
  4087ea:	push   ds
  4087eb:	sti    
  4087ec:	retf   
  4087ed:	push   ebp
  4087ee:	adc    DWORD PTR [eax+0x68ceb0f2],0x63
  4087f5:	ja     0x408785
  4087f7:	cmc    
  4087f8:	mov    ebx,DWORD PTR [esi]
  4087fa:	lea    ebx,[edi+esi*2+0x26833a0a]
  408801:	push   es
  408802:	call   0xa65bb00e
  408807:	cmp    BYTE PTR [edx],al
  408809:	pushf  
  40880a:	push   eax
  40880b:	push   esi
  40880c:	pushf  
  40880d:	mov    ch,0xe7
  40880f:	jb     0x40883b
  408811:	out    0x81,eax
  408813:	call   0x248cfea3
  408818:	div    DWORD PTR [edi]
  40881a:	in     al,dx
  40881b:	in     eax,dx
  40881c:	inc    ecx
  40881d:	jae    0x408854
  40881f:	jo     0x4087d9
  408821:	and    DWORD PTR [si+0x7a43],0xa21711a7
  40882a:	pop    eax
  40882b:	fwait
  40882c:	shl    BYTE PTR [esi],1
  40882e:	or     al,0x28
  408830:	inc    ebp
  408831:	mov    esp,0x34c64187
  408836:	mov    cl,0xf1
  408838:	pop    edi
  408839:	repz push es
  40883b:	jnp    0x408871
  40883d:	in     eax,0x83
  40883f:	sub    BYTE PTR [esi],al
  408841:	imul   edi,DWORD PTR [edx-0x45250caa],0x60
  408848:	outs   dx,BYTE PTR ds:[esi]
  408849:	lea    ecx,[edx+0x34]
  40884c:	cld    
  40884d:	outs   dx,DWORD PTR ds:[esi]
  40884e:	hlt    
  40884f:	lahf   
  408850:	mov    eax,0x8152ba49
  408855:	jnp    0x4088bd
  408857:	lea    ecx,[ecx+0x18]
  40885a:	push   cs
  40885b:	data16 imul cl
  40885e:	popa   
  40885f:	mov    dl,0x96
  408861:	gs enter 0xe452,0x24
  408866:	sbb    edx,DWORD PTR [esi+ecx*8]
  408869:	xlat   BYTE PTR ds:[ebx]
  40886a:	loopne 0x408834
  40886c:	lea    ecx,[ebp-0x45a2a94f]
  408872:	leave  
  408873:	fidiv  WORD PTR [ebx+esi*4-0x62]
  408877:	(bad)  [eax-0x70]
  40887a:	out    0x6,eax
  40887c:	pop    eax
  40887d:	lock pop edx
  40887f:	jnp    0x408815
  408881:	(bad)  
  408882:	sar    BYTE PTR [ebx+0x57b2feab],0x90
  408889:	stc    
  40888a:	outs   dx,DWORD PTR ds:[esi]
  40888b:	std    
  40888c:	sub    BYTE PTR [edx+0x6b0e214d],ch
  408892:	push   edi
  408893:	hlt    
  408894:	jne    0x4088c6
  408896:	adc    al,0x4c
  408898:	sbb    ecx,ebp
  40889a:	add    eax,0xa1038229
  40889f:	cs inc eax
  4088a1:	jns    0x408876
  4088a3:	jne    0x4088e2
  4088a5:	shl    ah,cl
  4088a7:	lea    eax,[ecx+0x24552575]
  4088ad:	pop    ebp
  4088ae:	cmc    
  4088af:	(bad)  
  4088b0:	mov    esi,0x68eed31f
  4088b5:	adc    al,0xa5
  4088b7:	cmp    DWORD PTR [esi+0x642c8bd5],ecx
  4088bd:	xchg   edx,eax
  4088be:	sbb    DWORD PTR [edi+0x70],esp
  4088c1:	or     eax,0xa08f47df
  4088c6:	pop    ecx
  4088c7:	fadd   st(4),st
  4088c9:	mov    ah,0xc7
  4088cb:	jp     0x4088c9
  4088cd:	fs pop esi
  4088cf:	push   esi
  4088d0:	das    
  4088d1:	fisubr WORD PTR [edi]
  4088d3:	push   ecx
  4088d4:	push   0xffffff8c
  4088d6:	xor    bh,BYTE PTR [esi]
  4088d8:	in     eax,0x8a
  4088da:	cli    
  4088db:	push   edi
  4088dc:	int    0x47
  4088de:	cmc    
  4088df:	sub    DWORD PTR [edi-0x46026b66],esp
  4088e5:	cmp    al,0xb3
  4088e7:	arpl   WORD PTR [edx+0x27],si
  4088ea:	addr16 pop ebx
  4088ec:	inc    eax
  4088ed:	pusha  
  4088ee:	mov    esi,0x7c429af1
  4088f3:	mov    al,0xc1
  4088f5:	mov    al,ds:0x4fe6c448
  4088fa:	out    0xc9,eax
  4088fc:	xchg   edi,eax
  4088fd:	std    
  4088fe:	ins    BYTE PTR es:[edi],dx
  4088ff:	adc    BYTE PTR [ecx+0x5389f7dd],ah
  408905:	adc    bl,BYTE PTR [edx-0x7b]
  408908:	cmp    al,dl
  40890a:	xor    ecx,esi
  40890c:	(bad)  
  40890d:	sub    al,0xfb
  40890f:	(bad)  
  408910:	jmp    0x40893b
  408912:	test   DWORD PTR [edx-0x4f],0x2a4c32a9
  408919:	je     0x408910
  40891b:	mov    ch,0xe7
  40891d:	mov    al,0x1d
  40891f:	mov    cl,0xc
  408921:	xor    BYTE PTR [edi+0x22030363],dh
  408927:	xor    ecx,DWORD PTR [ebx+0x688d6d91]
  40892d:	sub    bh,BYTE PTR [ebp+0x2c]
  408930:	pop    edx
  408931:	(bad)
  408937:	lahf   
  408938:	inc    edi
  408939:	imul   esi,DWORD PTR [esp+esi*8],0x55
  40893d:	xchg   edi,eax
  40893e:	pusha  
  40893f:	aam    0xbc
  408941:	add    esi,DWORD PTR [esi+esi*4-0x5448f80e]
  408948:	sbb    cl,BYTE PTR [ebx-0x356fc033]
  40894e:	inc    edx
  40894f:	pop    eax
  408950:	dec    ebp
  408951:	dec    edx
  408952:	push   cs
  408953:	into   
  408954:	inc    edx
  408955:	imul   edi,DWORD PTR [ebx+0x59],0xd580c056
  40895c:	sar    edx,1
  40895e:	int3   
  40895f:	xchg   ecx,eax
  408960:	int    0xfc
  408962:	mov    edi,0xa98d824e
  408967:	pushf  
  408968:	cdq    
  408969:	add    ah,BYTE PTR [esi+0x1e]
  40896c:	lea    eax,ds:0xffc3dbb5
  408972:	ret    
  408973:	icebp  
  408974:	sbb    al,0x5d
  408976:	ret    0x4ca6
  408979:	adc    eax,0xce7bc02c
  40897e:	data16 or BYTE PTR [esi-0x80],0x95
  408983:	cli    
  408984:	dec    esi
  408985:	sub    DWORD PTR [esi],0x287ba4b
  40898b:	sbb    cl,bh
  40898d:	inc    ecx
  40898e:	adc    esi,DWORD PTR [esi-0x1e]
  408991:	int    0x13
  408993:	sub    al,0x6a
  408995:	leave  
  408996:	xchg   ecx,eax
  408997:	inc    ecx
  408998:	and    edx,0x330d6d97
  40899e:	(bad)  
  4089a0:	cmp    BYTE PTR [edi+0x41b5f164],ah
  4089a6:	ins    DWORD PTR es:[edi],dx
  4089a7:	int3   
  4089a8:	(bad)  
  4089aa:	cli    
  4089ab:	jno    0x40895a
  4089ad:	sbb    al,0x78
  4089af:	xchg   ebp,eax
  4089b0:	call   0xd4e:0x632c2ea0
  4089b7:	dec    edi
  4089b8:	cwde   
  4089b9:	cmp    ebp,ecx
  4089bb:	pop    edx
  4089bd:	mov    ss,WORD PTR [ebx+0x4]
  4089c0:	add    al,0xc6
  4089c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c3:	mov    DWORD PTR [esi-0x2d],0xce2d00e1
  4089ca:	xor    dh,BYTE PTR [esi+0x1af8d9f5]
  4089d0:	dec    eax
  4089d1:	lods   al,BYTE PTR ds:[esi]
  4089d2:	sub    dl,al
  4089d4:	shl    DWORD PTR [edx+0x6e7e9f2b],1
  4089da:	ja     0x408a2a
  4089dc:	lahf   
  4089dd:	popf   
  4089de:	xor    al,0x30
  4089e0:	jp     0x4089d4
  4089e2:	or     eax,edi
  4089e4:	push   ecx
  4089e5:	adc    al,BYTE PTR [ebp-0x41f31bd9]
  4089eb:	inc    ebp
  4089ec:	add    BYTE PTR cs:[esi-0x32a4a96c],bh
  4089f3:	inc    esp
  4089f4:	pop    ebx
  4089f5:	adc    ebp,DWORD PTR [ebx-0x45]
  4089f8:	and    eax,DWORD PTR [ebp+ebx*1+0x5213a2cf]
  4089ff:	inc    ebx
  408a00:	lock lods eax,DWORD PTR ds:[esi]
  408a02:	sub    al,0x81
  408a04:	or     al,0xbd
  408a06:	pushf  
  408a07:	adc    BYTE PTR [ebx-0x5d688b],cl
  408a0d:	imul   BYTE PTR [eax-0x18d7ecbb]
  408a13:	outs   dx,DWORD PTR es:[esi]
  408a15:	xchg   edx,eax
  408a16:	aam    0x4c
  408a18:	pop    ebp
  408a19:	adc    eax,0x1128c30f
  408a1e:	sti    
  408a1f:	scas   al,BYTE PTR es:[edi]
  408a20:	bsr    esp,ebx
  408a23:	jnp    0x408a4a
  408a25:	sub    eax,0x387f07b0
  408a2a:	sub    al,0x8d
  408a2c:	popf   
  408a2d:	mov    eax,0x66def796
  408a32:	and    ebp,DWORD PTR [edx+edx*8-0x4798abbe]
  408a39:	cmp    al,0x2e
  408a3b:	xor    al,0x60
  408a3d:	stc    
  408a3e:	test   al,0xe1
  408a40:	dec    esp
  408a41:	mov    DWORD PTR [ecx+0x49],ebp
  408a44:	aaa    
  408a45:	or     al,0x48
  408a47:	jmp    0x163ea374
  408a4c:	stc    
  408a4d:	(bad)  
  408a4e:	xor    BYTE PTR [esi+edx*2+0x24],cl
  408a52:	loop   0x408abe
  408a54:	fistp  DWORD PTR [esi-0x25]
  408a57:	test   bh,ch
  408a59:	push   ebx
  408a5a:	cmp    ch,BYTE PTR [esi+ecx*2-0x7a]
  408a5e:	test   al,0xc1
  408a60:	add    DWORD PTR [eax+ecx*2-0x4e8a7336],0x17be5057
  408a6b:	dec    ecx
  408a6c:	std    
  408a6d:	iret   
  408a6e:	mov    cl,BYTE PTR [ebp+0x29868e83]
  408a74:	bound  ebp,QWORD PTR [edx+ebp*8+0x67e4728e]
  408a7b:	sahf   
  408a7c:	mov    WORD PTR [ebp-0x1769aa73],ss
  408a82:	loope  0x408a5f
  408a84:	popa   
  408a85:	jg     0x408a14
  408a87:	push   0x48073ae1
  408a8c:	adc    BYTE PTR [edi],ch
  408a8e:	dec    ebp
  408a8f:	pop    edx
  408a90:	mov    esp,0x71c9fc5e
  408a95:	ret    0x2708
  408a98:	push   cs
  408a99:	inc    esp
  408a9a:	sbb    al,0xdc
  408a9c:	mov    ebp,0xa5e3969e
  408aa1:	mov    eax,ds:0xbc18c768
  408aa6:	xchg   ecx,eax
  408aa7:	scas   al,BYTE PTR es:[edi]
  408aa8:	jp     0x408a7c
  408aaa:	and    ah,bl
  408aac:	retf   
  408aad:	repnz pop ebx
  408aaf:	sbb    dl,BYTE PTR [ecx]
  408ab1:	mov    esi,esp
  408ab3:	push   ecx
  408ab4:	xchg   ecx,eax
  408ab5:	iret   
  408ab6:	je     0x408a6a
  408ab8:	les    eax,FWORD PTR [edi+edx*8+0x6e]
  408abc:	popf   
  408abd:	dec    ecx
  408abe:	and    ch,BYTE PTR [edx]
  408ac0:	shl    DWORD PTR [esi+0x416763d7],cl
  408ac6:	fdivr  DWORD PTR [eax-0x110b532a]
  408acc:	mov    ah,0xfc
  408ace:	into   
  408acf:	test   al,0x7e
  408ad1:	dec    edx
  408ad2:	pop    esp
  408ad3:	xor    edi,ebx
  408ad5:	imul   ebp,esi,0xf7d2c25
  408adb:	cmc    
  408adc:	inc    ecx
  408add:	dec    ebx
  408ade:	int3   
  408adf:	mov    eax,0x91f950dd
  408ae4:	sub    BYTE PTR [edx+edx*2],0x87
  408ae8:	shr    BYTE PTR [edx],1
  408aea:	jo     0x408b42
  408aec:	retf   
  408aed:	pusha  
  408aee:	adc    eax,0xc17e0f6a
  408af3:	add    eax,0x228a0a43
  408af8:	add    eax,0x8217b534
  408afd:	jo     0x408aa3
  408aff:	mov    al,0xd3
  408b01:	mov    WORD PTR [ebx+edx*8],cs
  408b04:	sar    al,0xba
  408b07:	dec    esi
  408b08:	dec    ebp
  408b09:	addr16 repz cdq 
  408b0c:	test   eax,0x39b4456d
  408b11:	test   BYTE PTR [edx+0x6e],dl
  408b14:	xlat   BYTE PTR ds:[ebx]
  408b15:	shl    DWORD PTR [ecx+0x1e],cl
  408b18:	and    dl,BYTE PTR [ecx]
  408b1a:	push   ss
  408b1b:	mov    dl,0x8e
  408b1d:	scas   al,BYTE PTR es:[edi]
  408b1e:	mov    bh,0x53
  408b20:	retf   
  408b21:	lds    esi,FWORD PTR [edi-0x7e46c85f]
  408b27:	fbstp  TBYTE PTR [eax]
  408b29:	test   DWORD PTR [edx],0x365007f7
  408b2f:	cmp    ebx,DWORD PTR [ebp-0x13]
  408b32:	or     eax,0xfb95f1e
  408b37:	sbb    esi,DWORD PTR [esi]
  408b39:	out    0xe9,al
  408b3b:	cdq    
  408b3c:	jge    0x408b7f
  408b3e:	mov    al,ds:0x3ce895e6
  408b43:	add    DWORD PTR [eax-0x6f],edi
  408b46:	jl     0x408bad
  408b48:	pop    ss
  408b49:	push   es
  408b4a:	aad    0xc7
  408b4c:	ficomp DWORD PTR [ebp+0x41356227]
  408b52:	repnz sub al,0x3b
  408b55:	loopne 0x408b6f
  408b57:	adc    ch,BYTE PTR [esi+0x74]
  408b5a:	in     eax,dx
  408b5b:	dec    edx
  408b5c:	jnp    0x408bc7
  408b5e:	adc    eax,0xa89b297c
  408b63:	pop    ds
  408b64:	icebp  
  408b65:	adc    DWORD PTR [esi-0x3b],ecx
  408b68:	retf   
  408b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b6a:	pop    edi
  408b6b:	sbb    ah,0xe6
  408b6e:	inc    esi
  408b6f:	jne    0x408bdc
  408b71:	jecxz  0x408b8c
  408b73:	jae    0x408b84
  408b75:	add    eax,0xa90b7b9a
  408b7a:	sub    al,0xbd
  408b7c:	nop
  408b7d:	inc    esi
  408b7e:	in     al,dx
  408b7f:	inc    edi
  408b80:	xchg   ebx,eax
  408b81:	pop    ebp
  408b82:	clc    
  408b83:	sti    
  408b84:	mov    BYTE PTR [eax],0xfa
  408b87:	lahf   
  408b88:	imul   ecx,ebx,0x93169d3f
  408b8e:	out    0x84,al
  408b90:	int3   
  408b91:	jae    0x408b5a
  408b93:	mov    dl,dh
  408b95:	ror    DWORD PTR [ecx+0x549d2344],0x50
  408b9c:	lahf   
  408b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b9e:	call   0x7444:0xc71a36ca
  408ba5:	fs cmp al,0x98
  408ba8:	repnz sbb al,0x34
  408bab:	lods   eax,DWORD PTR ds:[esi]
  408bac:	pop    ebp
  408bad:	rol    DWORD PTR [edi+0x37],1
  408bb0:	iret   
  408bb1:	aas    
  408bb2:	xor    al,0xaa
  408bb4:	push   0x5f
  408bb6:	xchg   esi,eax
  408bb7:	jg     0x408bac
  408bb9:	cmp    al,0xdf
  408bbb:	data16 and ch,cl
  408bbe:	mov    al,ds:0xac4d75b5
  408bc3:	adc    edx,esp
  408bc5:	inc    eax
  408bc6:	dec    eax
  408bc7:	sti    
  408bc8:	mov    esp,0xee031fac
  408bcd:	or     al,0xbc
  408bcf:	and    DWORD PTR [ebx+0x35e4a415],ebp
  408bd5:	into   
  408bd6:	ficomp DWORD PTR [ecx+0x6d]
  408bd9:	or     BYTE PTR [edi],ch
  408bdb:	lahf   
  408bdc:	rcl    BYTE PTR [ebx],cl
  408bde:	rcl    ecx,0xaa
  408be1:	pop    ecx
  408be2:	cs inc ecx
  408be4:	repz daa 
  408be6:	(bad)  
  408be7:	pop    ecx
  408be8:	cs dec ecx
  408bea:	dec    esp
  408beb:	mov    cl,0xe7
  408bed:	sar    BYTE PTR [esi+0x19],1
  408bf0:	es (bad) 
  408bf2:	daa    
  408bf3:	stos   BYTE PTR es:[edi],al
  408bf4:	pop    ebp
  408bf5:	or     eax,0x2738bf08
  408bfa:	jmp    0x408c5e
  408bfc:	add    al,0x91
  408bfe:	mov    edi,0x82c0babc
  408c03:	retf   
  408c04:	jae    0x408c68
  408c06:	test   DWORD PTR [ecx-0x5d],0xe6b5e8db
  408c0d:	clc    
  408c0e:	nop
  408c0f:	dec    ebp
  408c10:	fs jmp 0x977a:0xb7f16132
  408c18:	shl    BYTE PTR [edi+0x3d],0x1c
  408c1c:	repz sub al,0x28
  408c1f:	loope  0x408c2c
  408c21:	int3   
  408c22:	xchg   ecx,eax
  408c23:	arpl   WORD PTR [esi+0x65],bx
  408c26:	xor    cl,BYTE PTR [ebp-0x4c]
  408c29:	and    al,0x0
  408c2b:	fistp  DWORD PTR ds:0x399fe4c4
  408c31:	fistp  DWORD PTR [ebx]
  408c33:	and    eax,DWORD PTR [edx+0x6238c61e]
  408c39:	mov    eax,0xcd51c740
  408c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c3f:	xor    BYTE PTR [ebx+0x7c950470],dl
  408c45:	jae    0x408c46
  408c47:	or     eax,0x605e7530
  408c4c:	stc    
  408c4d:	clc    
  408c4e:	into   
  408c4f:	mov    ds:0x9ed45b7a,al
  408c54:	mov    ch,0xea
  408c56:	pusha  
  408c57:	inc    eax
  408c58:	rol    DWORD PTR [edi-0x76],cl
  408c5b:	mov    bh,0x3b
  408c5d:	retf   
  408c5e:	add    dl,ch
  408c60:	test   DWORD PTR [edi-0x74],edi
  408c63:	jae    0x408c76
  408c65:	test   DWORD PTR [esi-0x7d25eac4],edi
  408c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c6c:	add    al,0x62
  408c6e:	jns    0x408c6c
  408c70:	test   DWORD PTR [ebx],ecx
  408c72:	mov    dh,0xd5
  408c74:	lea    ebp,[ecx+0x266b8e9c]
  408c7a:	pop    ss
  408c7b:	cli    
  408c7c:	dec    esp
  408c7d:	mov    ebx,0x17154078
  408c82:	mov    ch,BYTE PTR [eax-0x662182d6]
  408c88:	std    
  408c89:	stc    
  408c8a:	jg     0x408caf
  408c8c:	and    DWORD PTR [ecx],esi
  408c8e:	jmp    0x408cfc
  408c90:	inc    ebx
  408c91:	sub    ecx,DWORD PTR [ecx+0x5c]
  408c94:	jmp    0x408c66
  408c96:	and    al,0xa3
  408c98:	test   al,0x6e
  408c9a:	imul   edx,DWORD PTR [eax+0x61],0xffffffc8
  408c9e:	jge    0x408c38
  408ca0:	popf   
  408ca1:	xchg   ebp,eax
  408ca2:	pop    eax
  408ca3:	adc    ecx,DWORD PTR [ecx]
  408ca5:	pop    ds
  408ca6:	pop    ebp
  408ca7:	aam    0xb3
  408ca9:	pop    edi
  408caa:	mov    ds:0xcc2ace62,eax
  408caf:	adc    dl,dl
  408cb1:	dec    ebp
  408cb2:	addr16 dec ebx
  408cb4:	les    esi,FWORD PTR [ebp-0x67]
  408cb7:	fnstcw WORD PTR [edi]
  408cb9:	arpl   WORD PTR [edi-0x55],ax
  408cbc:	sbb    BYTE PTR [eax-0x15925e95],dh
  408cc2:	lods   al,BYTE PTR ds:[esi]
  408cc3:	mov    ah,0xaa
  408cc5:	mov    ds:0xc95d698c,al
  408cca:	jae    0x408c58
  408ccc:	lahf   
  408ccd:	push   0xffffffef
  408ccf:	jg     0x408c84
  408cd1:	push   esp
  408cd2:	rcr    DWORD PTR [eax-0x2c7d1d9d],0xd0
  408cd9:	icebp  
  408cda:	inc    eax
  408cdb:	mov    al,ds:0xd7da1cff
  408ce0:	jge    0x408cbb
  408ce2:	jge    0x408c98
  408ce4:	or     eax,0xcecaabc5
  408ce9:	cmc    
  408cea:	mov    eax,ds:0x39362d11
  408cef:	lods   eax,DWORD PTR ds:[esi]
  408cf0:	mov    bl,0x6a
  408cf2:	pop    eax
  408cf3:	retf   0x3113
  408cf6:	add    al,bh
  408cf8:	imul   ecx,ecx,0x2475802b
  408cfe:	pop    ebx
  408cff:	test   eax,esp
  408d01:	enter  0x7452,0x3e
  408d05:	hlt    
  408d06:	or     al,0xb0
  408d08:	leave  
  408d09:	enter  0x8320,0xb
  408d0d:	push   0xffffffa8
  408d0f:	loopne 0x408d1e
  408d11:	sti    
  408d12:	pop    ebx
  408d13:	sub    al,0x3e
  408d15:	ins    DWORD PTR es:[edi],dx
  408d16:	call   0x23da:0xb219431c
  408d1d:	cmp    DWORD PTR [ecx-0xb],0x5b4348d1
  408d24:	sbb    eax,0xbd12c87c
  408d29:	(bad)  
  408d2b:	call   0xc183:0x549b7f54
  408d32:	imul   ecx,DWORD PTR [edi+0x2d8adbe5],0xffffffd2
  408d39:	mov    ecx,0x2c8699bc
  408d3e:	icebp  
  408d3f:	mov    ds:0x706e4086,al
  408d44:	cld    
  408d45:	jg     0x408d63
  408d47:	jb     0x408d24
  408d49:	mov    ds:0xa1395bcc,eax
  408d4e:	cwde   
  408d4f:	lods   al,BYTE PTR cs:[esi]
  408d51:	sub    dh,BYTE PTR [eax]
  408d53:	dec    esp
  408d54:	mov    bh,BYTE PTR [ebp-0x45577cb8]
  408d5a:	jb     0x408cdf
  408d5c:	jp     0x408d4c
  408d5e:	mov    al,ds:0xc0fa86fa
  408d63:	psubq  mm1,QWORD PTR [ebp+0x73]
  408d67:	cmp    DWORD PTR [edx],ebx
  408d69:	dec    DWORD PTR ds:0x94795546
  408d6f:	mov    ah,0xcf
  408d71:	xchg   esp,eax
  408d72:	outs   dx,BYTE PTR ds:[esi]
  408d73:	inc    esp
  408d74:	in     eax,dx
  408d75:	jo     0x408da2
  408d77:	mov    esi,0x1ca4787a
  408d7c:	rcr    ecx,0x1c
  408d7f:	jg     0x408dfa
  408d81:	ror    DWORD PTR [eax+0x49],1
  408d84:	hlt    
  408d85:	imul   esi,DWORD PTR [eax+0x22],0x8c347dba
  408d8c:	gs cli 
  408d8e:	int    0xc9
  408d90:	aas    
  408d91:	mov    edx,0x35521bab
  408d96:	aam    0xc0
  408d98:	mov    edx,0x4e69274d
  408d9d:	(bad)  
  408d9f:	pop    esi
  408da0:	les    ebx,FWORD PTR [edx-0x72bb895e]
  408da6:	or     BYTE PTR [eax+0x1e],dl
  408da9:	jl     0x408d2e
  408dab:	ror    BYTE PTR [edi],0x4c
  408dae:	jle    0x408dbd
  408db0:	sahf   
  408db1:	lods   al,BYTE PTR ds:[esi]
  408db2:	cdq    
  408db3:	lea    edx,[esi-0x5aba5a84]
  408db9:	imul   ebp,DWORD PTR [edi+0x153bc1de],0x63110878
  408dc3:	pop    esp
  408dc4:	ins    BYTE PTR es:[edi],dx
  408dc5:	ins    DWORD PTR es:[edi],dx
  408dc6:	add    eax,0x367a0b8b
  408dcb:	or     DWORD PTR [ebx-0x24e5678d],ecx
  408dd1:	jno    0x408e32
  408dd3:	stos   DWORD PTR es:[edi],eax
  408dd4:	mov    edx,0x3bf337fe
  408dd9:	inc    DWORD PTR [ebx+0x54]
  408ddc:	jmp    0xf5571a80
  408de1:	rcl    BYTE PTR [edi+0x3dc0f4ce],1
  408de7:	inc    edx
  408de8:	add    al,0xa6
  408dea:	push   ebp
  408deb:	cli    
  408dec:	and    DWORD PTR [edi+0x7c],ebx
  408def:	je     0x408e3e
  408df1:	or     dl,BYTE PTR [edi-0x49411189]
  408df7:	mov    ah,0x9c
  408df9:	repz and bl,cl
  408dfc:	inc    esp
  408dfd:	add    DWORD PTR [edi+0x62],ebp
  408e00:	inc    ebp
  408e01:	icebp  
  408e02:	ss je  0x408da7
  408e05:	push   es
  408e06:	xchg   ecx,eax
  408e07:	cmp    ah,bh
  408e09:	out    dx,al
  408e0a:	inc    ecx
  408e0b:	aam    0xd7
  408e0d:	out    dx,eax
  408e0e:	jns    0x408df4
  408e10:	sub    bh,BYTE PTR es:[ecx+0x822e433]
  408e17:	pop    es
  408e18:	mov    ?,WORD PTR [ebp+0x41583c22]
  408e1e:	push   ebp
  408e1f:	les    ebx,FWORD PTR [edi]
  408e21:	in     al,dx
  408e22:	outs   dx,DWORD PTR ds:[esi]
  408e23:	ss jmp 0x13c:0xefcb1f5f
  408e2b:	push   0xf82c5449
  408e30:	imul   BYTE PTR [edi-0x1d]
  408e33:	mov    ebx,0xa0f1ef56
  408e38:	mov    bh,0x2
  408e3a:	mov    edi,0x2af2bebf
  408e3f:	mov    ecx,0xd95e4fe7
  408e44:	cwde   
  408e45:	push   cs
  408e46:	mov    ds:0x414f0481,al
  408e4b:	aas    
  408e4c:	inc    edx
  408e4d:	imul   ebp,DWORD PTR [ecx+0x58],0xb13698a4
  408e54:	sbb    al,0x4b
  408e56:	call   0x14b480c
  408e5b:	and    BYTE PTR [eax],0xaf
  408e5e:	pop    es
  408e5f:	call   ebp
  408e61:	mov    BYTE PTR [ebx-0x11],dh
  408e64:	or     ch,BYTE PTR [edi+0x21160604]
  408e6a:	iret   
  408e6b:	lds    esp,FWORD PTR [ebx+0x41]
  408e6e:	mov    ds:0x21914f17,eax
  408e73:	and    al,0xbe
  408e75:	xor    eax,0x507bac0f
  408e7a:	pop    ebx
  408e7b:	sbb    eax,0x3961d537
  408e80:	xor    eax,0x94f4f668
  408e85:	call   0x51b3:0x20368a0d
  408e8c:	ret    0xc663
  408e8f:	fidivr DWORD PTR [eax]
  408e91:	(bad)  
  408e92:	lods   eax,DWORD PTR ds:[esi]
  408e93:	je     0x408e86
  408e95:	sbb    BYTE PTR [eax+0xf01c094],0x6d
  408e9c:	(bad)  
  408e9d:	icebp  
  408e9e:	push   0x7ae611a5
  408ea3:	popa   
  408ea4:	adc    DWORD PTR [esi],ebp
  408ea6:	aas    
  408ea7:	or     esp,edx
  408ea9:	mov    ebx,0x6ddbc4d0
  408eae:	repnz leave 
  408eb0:	lds    eax,FWORD PTR [edx+esi*4+0x528946e6]
  408eb7:	sub    ebp,DWORD PTR [ebx]
  408eb9:	ja     0x408e6f
  408ebb:	adc    eax,DWORD PTR [ebp-0x16a11bef]
  408ec1:	int3   
  408ec2:	div    DWORD PTR [ebx+edi*4]
  408ec5:	add    al,0x6d
  408ec7:	ret    
  408ec8:	mov    ds:0xf6a4bb2f,eax
  408ecd:	sub    dh,dl
  408ecf:	shr    DWORD PTR [ecx-0x6],0x93
  408ed3:	mov    ah,0xfd
  408ed5:	outs   dx,DWORD PTR ds:[esi]
  408ed6:	into   
  408ed7:	push   0x543fa47d
  408edc:	fs pop ebp
  408ede:	or     esp,ebp
  408ee0:	cmp    cl,ah
  408ee2:	or     eax,0x84fcdad7
  408ee7:	push   es
  408ee8:	push   edx
  408ee9:	adc    eax,0xbd4ddb2c
  408eee:	test   esp,edi
  408ef0:	das    
  408ef1:	sbb    bl,BYTE PTR [ebp-0xb820889]
  408ef7:	or     al,ah
  408ef9:	out    0xfc,eax
  408efb:	sbb    ebp,DWORD PTR [eax+0x4b]
  408efe:	inc    edi
  408eff:	mov    ds:0x3921d394,eax
  408f04:	ret    
  408f05:	dec    ecx
  408f06:	pop    eax
  408f07:	shl    ebp,1
  408f09:	sbb    al,0x86
  408f0b:	ins    BYTE PTR es:[edi],dx
  408f0c:	enter  0x2a2c,0x45
  408f10:	jns    0x408f29
  408f12:	sub    cl,bh
  408f14:	or     ecx,DWORD PTR [esi+ecx*1]
  408f17:	lahf   
  408f18:	cld    
  408f19:	dec    ebp
  408f1a:	fist   WORD PTR [edx]
  408f1c:	repnz sub DWORD PTR [ebp+0x7901f3bd],edi
  408f23:	pusha  
  408f24:	ror    BYTE PTR [edx-0x15d6a073],1
  408f2a:	int    0x60
  408f2c:	add    bl,BYTE PTR [esp+edi*8]
  408f2f:	jb     0x408eb8
  408f31:	cld    
  408f32:	inc    esp
  408f33:	int3   
  408f34:	push   0x16
  408f36:	push   eax
  408f37:	add    bh,ah
  408f39:	sbb    DWORD PTR [ebp-0x1a0bb99e],edi
  408f3f:	jmp    0x408ef4
  408f41:	push   0xefb0c9d1
  408f46:	inc    edx
  408f47:	or     BYTE PTR [edx-0x48cceef9],bl
  408f4d:	in     al,dx
  408f4e:	pop    es
  408f4f:	imul   esp,eax,0xffffff93
  408f52:	sub    DWORD PTR es:[edx+0x2da2b6b],ebx
  408f59:	lahf   
  408f5a:	xchg   dh,cl
  408f5c:	sbb    DWORD PTR [eax],0xf6c6cf6d
  408f62:	jae    0x408f2a
  408f64:	ror    DWORD PTR [esi+0xbdedd48],1
  408f6a:	inc    esp
  408f6b:	and    ah,ah
  408f6d:	fwait
  408f6e:	repnz test BYTE PTR [eax],0x38
  408f72:	and    bh,BYTE PTR [ebx-0x4b9118a8]
  408f78:	jmp    0xe930a865
  408f7d:	ret    0xbe28
  408f80:	xchg   edx,eax
  408f81:	clc    
  408f82:	cmp    ecx,edx
  408f84:	inc    edx
  408f85:	in     al,dx
  408f86:	pop    esi
  408f87:	sbb    al,0x6d
  408f89:	mov    fs,WORD PTR [edx+0x11283db1]
  408f8f:	inc    ebp
  408f90:	imul   esp,DWORD PTR [ebx-0x6ca3ce52],0xd3c1903c
  408f9a:	aam    0x77
  408f9c:	call   DWORD PTR fs:[eax-0x59]
  408fa0:	mov    ebp,0x87365fe7
  408fa5:	sub    eax,0x573da71
  408faa:	xor    al,0xa4
  408fac:	popa   
  408fad:	sub    ecx,DWORD PTR [ebp-0x6a0c609d]
  408fb3:	mov    cl,0x28
  408fb5:	fbld   TBYTE PTR [eax+0x7]
  408fb8:	dec    ebx
  408fb9:	out    dx,eax
  408fba:	jne    0x408f49
  408fbc:	push   ebx
  408fbd:	or     ebp,DWORD PTR [edx-0x80]
  408fc0:	(bad)  
  408fc1:	mov    dh,0x9f
  408fc3:	push   ds
  408fc4:	loop   0x40900f
  408fc6:	mov    edx,0x2d2d4c3c
  408fcb:	sub    ebx,DWORD PTR [ecx-0x624176c1]
  408fd1:	ds push 0x42
  408fd4:	push   ebx
  408fd5:	js     0x408fcc
  408fd7:	arpl   WORD PTR ds:0x7d75344f,bx
  408fdd:	mov    al,ds:0x51a898c6
  408fe2:	add    ecx,DWORD PTR [eax+0x797b8f3e]
  408fe8:	push   ebx
  408fe9:	mov    al,0x81
  408feb:	outs   dx,BYTE PTR ds:[esi]
  408fec:	leave  
  408fed:	lea    edi,[eax+eiz*8-0x7ef7ad67]
  408ff4:	dec    esp
  408ff5:	jle    0x408f9c
  408ff7:	scas   al,BYTE PTR es:[edi]
  408ff8:	push   ss
  408ff9:	in     al,0x19
  408ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ffc:	xor    edi,eax
  408ffe:	cmp    ah,bl
  409000:	fistp  QWORD PTR [esi+0x9b93f8c]
  409006:	test   eax,0x3299bf63
  40900b:	imul   edx,ecx,0x2b305e08
  409011:	cmp    cl,0x72
  409014:	xor    dl,dl
  409016:	xor    dh,BYTE PTR [ebx+0x4137bfc7]
  40901c:	push   ecx
  40901d:	jmp    0x8222:0xf3c8b2b0
  409024:	loop   0x409024
  409026:	xor    BYTE PTR [edi-0x74],cl
  409029:	mov    WORD PTR [edx],gs
  40902b:	pusha  
  40902c:	aaa    
  40902d:	aad    0x1a
  40902f:	mov    ds:0x95128af8,al
  409034:	jnp    0x4090b2
  409036:	test   al,0x40
  409038:	test   al,0xd
  40903a:	pop    ebx
  40903b:	lea    esi,[edi+0x67b51223]
  409041:	popf   
  409042:	xlat   BYTE PTR ds:[ebx]
  409043:	cmp    ah,BYTE PTR [esi+0x78a662cd]
  409049:	test   eax,0x8590d064
  40904e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40904f:	sti    
  409050:	je     0x40902d
  409052:	and    al,0x3e
  409054:	enter  0x5e4f,0x70
  409058:	and    ch,BYTE PTR [ebx+0x49]
  40905b:	adc    DWORD PTR [esi],eax
  40905d:	inc    eax
  40905e:	aas    
  40905f:	rol    DWORD PTR [ecx],0x50
  409062:	push   eax
  409063:	mov    esp,0x1a4e89d
  409068:	pop    ebx
  409069:	mov    eax,0x6467fc5e
  40906e:	cmp    al,0xbb
  409070:	sbb    ch,BYTE PTR [ebx]
  409072:	or     al,ah
  409074:	fcom   QWORD PTR [eax-0x69]
  409077:	add    eax,DWORD PTR [ecx+0x1a]
  40907a:	pop    ds
  40907b:	leave  
  40907c:	daa    
  40907d:	add    BYTE PTR [edi-0x51],0x36
  409081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409082:	(bad)  
  409084:	pop    eax
  409085:	xor    al,0x3c
  409087:	dec    edi
  409088:	rcr    BYTE PTR [edi-0x6474db11],0xa4
  40908f:	jae    0x4090f2
  409091:	push   ds
  409092:	sub    al,0x5c
  409094:	jmp    0xa8a1d1ae
  409099:	fcom   st(7)
  40909b:	fcomp  DWORD PTR [ebx+ebx*8-0x3e8c2cfb]
  4090a2:	dec    eax
  4090a3:	adc    edi,DWORD PTR [esi-0x519b9ac5]
  4090a9:	scas   eax,DWORD PTR es:[edi]
  4090aa:	add    ch,cl
  4090ac:	rcl    DWORD PTR [edi-0x69],0x85
  4090b0:	jecxz  0x4090cd
  4090b2:	aaa    
  4090b3:	pusha  
  4090b4:	adc    eax,0xed1bfb5c
  4090b9:	mov    bl,al
  4090bb:	into   
  4090bc:	pop    ss
  4090bd:	sub    esp,esi
  4090bf:	(bad)  
  4090c0:	in     al,dx
  4090c1:	inc    edx
  4090c2:	dec    esp
  4090c3:	pop    es
  4090c4:	mov    esp,ecx
  4090c6:	or     DWORD PTR [ebp-0x53],0xffffffb6
  4090ca:	nop
  4090cb:	push   cs
  4090cc:	loopne 0x409064
  4090ce:	sub    ah,dh
  4090d0:	hlt    
  4090d1:	and    ah,bl
  4090d3:	jle    0x40912c
  4090d5:	sub    BYTE PTR ds:0x3c622e70,dl
  4090db:	fbstp  TBYTE PTR [ebx-0x10]
  4090de:	loop   0x409155
  4090e0:	rcl    DWORD PTR [ecx],cl
  4090e2:	jno    0x4090ac
  4090e4:	lods   eax,DWORD PTR ds:[esi]
  4090e5:	xchg   ecx,eax
  4090e6:	add    al,0x77
  4090e8:	sti    
  4090e9:	or     al,0x93
  4090eb:	call   0x9fef4e99
  4090f0:	or     BYTE PTR [ecx-0x48],0xc8
  4090f4:	push   edx
  4090f5:	xor    eax,0xd50da0dc
  4090fa:	adc    ebp,DWORD PTR [ebx]
  4090fc:	gs adc esi,esi
  4090ff:	int3   
  409100:	sub    esp,DWORD PTR [edx+eax*4-0x7e20af29]
  409107:	xlat   BYTE PTR ds:[ebx]
  409108:	adc    al,0x88
  40910a:	fisttp QWORD PTR [eax+0xba92ce6]
  409110:	(bad)  
  409111:	addr16 sub eax,0x6b9c0156
  409117:	(bad)  
  409118:	or     eax,0xd3d464f5
  40911d:	or     al,0xb9
  40911f:	(bad)  
  409120:	fstp   QWORD PTR [eax]
  409122:	lock jnp 0x4090bf
  409125:	jge    0x409122
  409127:	jno    0x409118
  409129:	jbe    0x40910d
  40912b:	ficomp WORD PTR [edx+0x33]
  40912e:	aas    
  40912f:	nop
  409130:	dec    esi
  409131:	ret    
  409132:	jle    0x4091a4
  409134:	lahf   
  409135:	out    dx,al
  409136:	int3   
  409137:	dec    esp
  409138:	xchg   esi,eax
  409139:	cdq    
  40913a:	test   eax,0xbea73958
  40913f:	enter  0xaf0c,0x32
  409143:	cmp    DWORD PTR [ecx],0xffffffe3
  409146:	sti    
  409147:	jmp    0x40910e
  409149:	std    
  40914a:	mov    BYTE PTR [esi],dh
  40914c:	not    DWORD PTR [edi+eax*4]
  40914f:	mov    dl,0x6c
  409151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409152:	iret   
  409153:	ja     0x409145
  409155:	and    cl,BYTE PTR [edi-0x7027cefe]
  40915b:	mov    al,0x62
  40915d:	push   cs
  40915e:	jbe    0x40914c
  409160:	out    0x5c,al
  409162:	xor    eax,0xa44a040e
  409167:	adc    bl,BYTE PTR [ecx-0x39da1f32]
  40916d:	outs   dx,DWORD PTR ds:[esi]
  40916e:	imul   esp,ecx,0xfffffff5
  409171:	imul   edi,DWORD PTR [eax+0x44b04869],0xffffffda
  409178:	ins    DWORD PTR es:[edi],dx
  409179:	jmp    0x4677812f
  40917e:	stc    
  40917f:	push   cs
  409180:	mov    eax,0x482c50e1
  409185:	loop   0x4091b1
  409187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409188:	int    0x13
  40918a:	dec    ebx
  40918b:	out    dx,eax
  40918c:	lods   eax,DWORD PTR ds:[esi]
  40918d:	jns    0x409164
  40918f:	aad    0x22
  409191:	sbb    ebx,DWORD PTR ds:0x5475f4dc
  409197:	repz sub dh,BYTE PTR [edi-0x2fca1040]
  40919e:	in     al,dx
  40919f:	cmp    ecx,ebx
  4091a1:	neg    esi
  4091a3:	(bad)
  4091a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091a7:	mov    bh,0xae
  4091a9:	call   0xbdaa:0xed833a56
  4091b0:	cmp    eax,0xde8f3f30
  4091b5:	mov    ds:0x654bfed2,eax
  4091ba:	dec    edx
  4091bb:	inc    esp
  4091bc:	xlat   BYTE PTR ds:[ebx]
  4091bd:	push   ds
  4091be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091bf:	push   esi
  4091c0:	aas    
  4091c1:	imul   edi,DWORD PTR [esi-0x5c3fdcf1],0xf48f096d
  4091cb:	sub    DWORD PTR [edi],edx
  4091cd:	push   0x28641bc3
  4091d2:	xor    DWORD PTR [ecx],0xc576e33b
  4091d8:	dec    ebp
  4091d9:	xchg   esi,eax
  4091da:	aam    0x49
  4091dc:	aam    0xef
  4091de:	cmp    BYTE PTR [eax+0x46],cl
  4091e1:	cli    
  4091e2:	es inc esi
  4091e4:	inc    ebp
  4091e5:	shl    BYTE PTR [edi+0x2132de6f],cl
  4091eb:	or     DWORD PTR [esi+0x27c02fbe],ebp
  4091f1:	mov    bl,0xd7
  4091f3:	push   0xffffffe4
  4091f5:	or     esp,DWORD PTR [edi]
  4091f7:	aaa    
  4091f8:	mov    eax,0xfa7018ba
  4091fd:	sbb    al,0x84
  4091ff:	mov    ah,0xc3
  409201:	(bad)  
  409202:	stos   BYTE PTR es:[edi],al
  409203:	add    DWORD PTR [esi],ebp
  409205:	push   ebx
  409206:	stos   BYTE PTR es:[edi],al
  409207:	es sub al,0x6f
  40920a:	test   eax,0x7c10849
  40920f:	and    BYTE PTR ds:0x5b16930f,ch
  409215:	or     eax,ebp
  409217:	push   edx
  409218:	xor    DWORD PTR [eax],eax
  40921a:	add    dl,BYTE PTR [ebx-0x5e208956]
  409220:	loopne 0x4091e1
  409222:	std    
  409223:	in     al,dx
  409224:	sbb    eax,0x4effaa8e
  409229:	push   0xbba45c2c
  40922e:	add    dh,BYTE PTR [edi+eiz*4+0x4e]
  409232:	nop
  409233:	frstor [edi]
  409235:	or     al,0xab
  409237:	inc    ecx
  409238:	cwde   
  409239:	fist   DWORD PTR [ecx+eiz*8]
  40923c:	push   ds
  40923d:	nop
  40923e:	icebp  
  40923f:	jno    0x5d8c09c0
  409245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409246:	out    dx,eax
  409247:	cmp    al,0xa9
  409249:	outs   dx,DWORD PTR ds:[esi]
  40924a:	enter  0xec71,0x6c
  40924e:	gs lahf 
  409250:	xor    al,0x95
  409252:	pop    ebx
  409253:	mov    bh,al
  409255:	daa    
  409256:	sub    DWORD PTR [ebp+0x54b5e610],ebp
  40925c:	fnstsw WORD PTR [esi+0x4d]
  40925f:	or     ah,BYTE PTR [esi+0x5b]
  409262:	push   ebx
  409263:	mov    bh,0x94
  409265:	or     al,0x87
  409267:	rol    BYTE PTR [esp+eiz*4+0x2a],1
  40926b:	stos   DWORD PTR es:[edi],eax
  40926c:	out    dx,eax
  40926d:	shl    DWORD PTR [ebp-0x4a8f3bcc],cl
  409273:	push   edx
  409274:	sub    esp,DWORD PTR [ebx-0x64]
  409277:	xchg   ebx,eax
  409278:	pushf  
  409279:	jnp    0x409244
  40927b:	push   ds
  40927c:	push   edi
  40927d:	jecxz  0x4092cd
  40927f:	jle    0x4092c2
  409281:	inc    esp
  409282:	das    
  409283:	sbb    eax,0x3ebe1b09
  409288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409289:	(bad)  
  40928a:	in     al,0xe4
  40928c:	lea    ecx,[edi+edx*8-0x48]
  409290:	push   cs
  409291:	mov    ebp,0x8f1be671
  409296:	aad    0x54
  409298:	push   edx
  409299:	jge    0x4092e4
  40929b:	fwait
  40929c:	cli    
  40929d:	cli    
  40929e:	xchg   edi,eax
  40929f:	fst    DWORD PTR [ecx+esi*2]
  4092a2:	xlat   BYTE PTR ds:[ebx]
  4092a3:	push   esi
  4092a4:	cmp    cl,BYTE PTR [ecx]
  4092a6:	pop    ecx
  4092a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092a8:	(bad)  
  4092a9:	pop    gs
  4092ab:	scas   al,BYTE PTR es:[edi]
  4092ac:	mov    dl,0x0
  4092ae:	add    DWORD PTR [eax+0x10d0bcce],ebx
  4092b4:	nop
  4092b5:	das    
  4092b6:	imul   esp,DWORD PTR [ecx*8-0x146819c5],0xc7fe2a09
  4092c1:	outs   dx,BYTE PTR ds:[esi]
  4092c2:	xor    eax,0x27f7b4ab
  4092c7:	sub    al,0xe7
  4092c9:	dec    ecx
  4092ca:	mov    eax,ds:0xe9387b61
  4092cf:	cmp    DWORD PTR [edi+0x4b],ebp
  4092d2:	mov    dh,0xdd
  4092d4:	and    ebx,ebx
  4092d6:	fcom   DWORD PTR [ecx-0xf]
  4092d9:	js     0x409307
  4092db:	or     al,bl
  4092dd:	adc    dl,BYTE PTR [esi+0x36]
  4092e0:	out    0x17,eax
  4092e2:	push   ebx
  4092e3:	sub    ebx,ecx
  4092e5:	jmp    0x4092bb
  4092e7:	xchg   ebp,eax
  4092e8:	mov    DWORD PTR [esi+0x6c],ebp
  4092eb:	pop    ds
  4092ec:	mov    esp,0x6ede3c90
  4092f1:	scas   al,BYTE PTR es:[edi]
  4092f2:	push   ss
  4092f3:	outs   dx,DWORD PTR ds:[esi]
  4092f4:	mov    ebp,0x96d5841c
  4092f9:	sub    BYTE PTR [edx],0x85
  4092fc:	ror    DWORD PTR [ecx+0x472577eb],0x15
  409303:	mov    cl,0x3c
  409306:	shl    esi,cl
  409308:	mov    esp,?
  40930a:	jg     0x409340
  40930c:	jnp    0x4092a9
  40930e:	jle    0x4092a4
  409310:	jl     0x409360
  409312:	sbb    dh,BYTE PTR [ecx]
  409314:	lds    edi,FWORD PTR [ecx+edx*4]
  409317:	pop    esi
  409318:	inc    esp
  409319:	xchg   DWORD PTR [edx+edi*1-0x4103bac0],ebx
  409320:	jle    0x4092de
  409322:	and    al,0x17
  409324:	repnz dec ecx
  409326:	fyl2x  
  409328:	sti    
  409329:	fcmovnu st,st(5)
  40932b:	(bad)
  40932f:	adc    eax,0xb6fd93a5
  409334:	(bad)  
  409335:	hlt    
  409336:	icebp  
  409337:	pop    esi
  409338:	add    eax,0x65eada3d
  40933d:	imul   edi,DWORD PTR [ecx+esi*8],0x91c0c378
  409344:	loopne 0x409351
  409346:	sbb    DWORD PTR [ebp+0x1141bfc4],edi
  40934c:	inc    esi
  40934d:	aam    0x4c
  40934f:	clc    
  409350:	and    DWORD PTR [ebx-0x79],ebx
  409353:	pusha  
  409354:	push   esi
  409355:	dec    ecx
  409356:	or     al,0xd4
  409358:	add    ecx,ebp
  40935a:	out    0xa,eax
  40935c:	sub    ecx,DWORD PTR [esi-0x57e3dd69]
  409362:	(bad)  
  409363:	dec    edx
  409364:	jns    0x4093d9
  409366:	je     0x4093bd
  409368:	iret   
  409369:	mov    ch,0x3
  40936b:	adc    eax,0x7d4dea8a
  409370:	fdiv   QWORD PTR [eax]
  409372:	mov    ss,WORD PTR [edi-0x13804b9c]
  409378:	push   esp
  409379:	(bad)  
  40937a:	pop    edx
  40937b:	mov    cl,0x2e
  40937d:	mov    bh,0x39
  40937f:	enter  0x85e1,0xa
  409383:	xchg   ecx,eax
  409384:	adc    edi,ebx
  409386:	sbb    bh,BYTE PTR [edx+0x44323213]
  40938c:	or     eax,0xe2b2530c
  409391:	push   cs
  409392:	xchg   esp,eax
  409393:	push   ds
  409394:	outs   dx,DWORD PTR ds:[esi]
  409395:	add    bl,cl
  409397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409398:	lods   al,BYTE PTR ds:[esi]
  409399:	in     al,0x71
  40939b:	out    dx,al
  40939c:	fsubr  DWORD PTR [ebp+0x4ef445a2]
  4093a2:	(bad)  
  4093a3:	cmp    eax,0x86710d87
  4093a8:	add    ah,BYTE PTR [eax+ecx*2-0x5d6477c2]
  4093af:	(bad)  
  4093b0:	jg     0x40939f
  4093b2:	out    0x56,al
  4093b4:	xor    eax,DWORD PTR [edx]
  4093b6:	rcr    BYTE PTR [eax-0x7e],cl
  4093b9:	in     al,0xf7
  4093bb:	les    edx,FWORD PTR [ebx]
  4093bd:	les    edx,FWORD PTR [esi+0x41]
  4093c0:	in     al,dx
  4093c1:	sub    eax,0xd992f7a
  4093c6:	adc    al,0x90
  4093c8:	push   es
  4093c9:	pushf  
  4093ca:	push   ss
  4093cb:	addr16 cmp eax,0xdf5e28c0
  4093d1:	sub    BYTE PTR [ecx+0x3d860410],al
  4093d7:	arpl   WORD PTR [ecx],cx
  4093d9:	jbe    0x409395
  4093db:	lods   eax,DWORD PTR fs:[esi]
  4093dd:	jl     0x4093d4
  4093df:	and    al,0xa7
  4093e1:	aad    0xee
  4093e3:	xor    eax,0x66f85a2a
  4093e8:	dec    esi
  4093e9:	mov    eax,ds:0x66e50d4a
  4093ee:	inc    edx
  4093ef:	std    
  4093f0:	mov    dh,0xdc
  4093f2:	aaa    
  4093f3:	push   eax
  4093f4:	jle    0x409459
  4093f6:	xor    BYTE PTR [ecx+0x44],0xe0
  4093fa:	inc    esp
  4093fb:	xor    al,0x76
  4093fd:	push   0xffffff89
  4093ff:	call   0x480be3cf
  409404:	sbb    edx,ebp
  409406:	rcl    DWORD PTR [eax-0x21],0x70
  40940a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40940b:	in     al,dx
  40940c:	loope  0x4093a0
  40940e:	cli    
  40940f:	(bad)  
  409410:	jmp    0x409461
  409412:	ss cs mov cl,0xa2
  409416:	jp     0x4093b1
  409418:	in     al,dx
  409419:	jns    0x4093a6
  40941b:	inc    ebp
  40941c:	pusha  
  40941d:	push   esp
  40941e:	enter  0x5651,0xc3
  409422:	add    cl,dl
  409424:	push   ss
  409425:	shl    eax,cl
  409427:	push   eax
  409428:	shr    DWORD PTR [esi+0x4f],1
  40942b:	cmp    eax,0x2ca31c84
  409430:	imul   edx,DWORD PTR [ebx+0x4426acd0],0xd30cb474
  40943a:	rcl    BYTE PTR ds:0x6ef0bdb0,cl
  409440:	repz jge 0x409450
  409443:	data16 loopne 0x4093fd
  409446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409447:	pop    ecx
  409448:	pop    ebp
  409449:	imul   eax,DWORD PTR [ebx-0x17ca2769],0xa37a1f32
  409453:	icebp  
  409454:	pop    ebx
  409455:	inc    ecx
  409456:	outs   dx,DWORD PTR ds:[esi]
  409457:	dec    esi
  409458:	mov    dl,0xfc
  40945a:	dec    ebp
  40945b:	addr16 popa 
  40945d:	push   es
  40945e:	mov    esi,0xe4f5297f
  409463:	sub    BYTE PTR [esp+ebx*1-0x7b],bh
  409467:	dec    ecx
  409468:	icebp  
  409469:	sbb    bh,BYTE PTR ds:0x65113a7
  40946f:	leave  
  409470:	scas   al,BYTE PTR es:[edi]
  409471:	cmp    ebx,esp
  409473:	outs   dx,BYTE PTR ds:[esi]
  409474:	imul   edi,esi,0x47ab5ca2
  40947a:	push   eax
  40947b:	and    DWORD PTR [edx-0x75],ecx
  40947e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40947f:	push   cs
  409480:	push   ebx
  409481:	mov    esp,es
  409483:	sbb    BYTE PTR [esi-0xee8ef50],0x75
  40948a:	and    ecx,DWORD PTR [edx+0x77]
  40948d:	mov    ah,0x15
  40948f:	push   ds
  409490:	sbb    DWORD PTR [edi+0x28],ebp
  409493:	xchg   ebp,eax
  409494:	sub    ecx,edx
  409496:	sub    eax,0xe9f7dd7f
  40949b:	jecxz  0x40950e
  40949d:	and    BYTE PTR [ebx-0x18],cl
  4094a0:	dec    ecx
  4094a1:	xchg   edx,eax
  4094a2:	push   ebp
  4094a3:	aaa    
  4094a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094a5:	xor    BYTE PTR [edx],ah
  4094a7:	mov    eax,0xbcb1be0d
  4094ac:	add    dl,BYTE PTR [edx-0x46ff9a31]
  4094b2:	aaa    
  4094b3:	and    DWORD PTR [ebx-0x12],ecx
  4094b6:	es dec eax
  4094b8:	js     0x40944d
  4094ba:	arpl   cx,dx
  4094bc:	inc    ecx
  4094bd:	xchg   DWORD PTR [ebp-0x4c14340b],edx
  4094c3:	jbe    0x409454
  4094c5:	ds push 0x2db88c44
  4094cb:	or     eax,0xf428b045
  4094d0:	jb     0x409473
  4094d2:	pop    edi
  4094d3:	mov    ebx,DWORD PTR [edi*8+0x5f4e3638]
  4094da:	mov    WORD PTR [ecx+0x79aa3b30],es
  4094e0:	dec    edx
  4094e1:	mov    esp,0x98470fcb
  4094e6:	push   edx
  4094e7:	inc    edi
  4094e8:	add    eax,0x5aa5a553
  4094ed:	cmp    BYTE PTR [ebp+edi*4+0x58],dh
  4094f1:	push   ds
  4094f2:	pop    es
  4094f3:	xlat   BYTE PTR ds:[ebx]
  4094f4:	or     eax,0x4a379c66
  4094f9:	jge    0x4094cd
  4094fb:	test   BYTE PTR [edi+0x43],bh
  4094fe:	fnstcw WORD PTR [ebp-0x5b]
  409501:	enter  0xddce,0xf7
  409505:	sbb    dl,BYTE PTR [edi+0x6da00e2b]
  40950b:	aaa    
  40950c:	jge    0x40953e
  40950e:	in     al,0x70
  409510:	pop    ss
  409511:	pop    edi
  409512:	and    dh,BYTE PTR [ebp+0x66]
  409515:	mov    ds:0x4e2da96f,eax
  40951a:	sbb    al,0x1a
  40951c:	mov    al,ds:0x2185b0d9
  409521:	dec    ebx
  409522:	inc    esi
  409523:	push   esp
  409524:	mov    ah,0xf9
  409526:	rol    BYTE PTR [ebp+0x79b1951c],1
  40952c:	push   edx
  40952d:	ja     0x40956f
  40952f:	mov    edx,0x1f0ab04d
  409534:	adc    ch,ah
  409536:	lahf   
  409537:	fistp  DWORD PTR [esi-0x33]
  40953a:	xor    eax,0xd3f2dfb0
  40953f:	mov    dh,0x5a
  409541:	pop    edx
  409542:	das    
  409543:	ss ins DWORD PTR es:[edi],dx
  409545:	test   al,0x8b
  409547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409548:	fs push 0xffffffef
  40954b:	or     BYTE PTR [ebx+edx*4+0x69],bl
  40954f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409550:	shl    DWORD PTR [esi-0x14],1
  409553:	pop    ebx
  409554:	(bad)  
  409555:	cmp    eax,0x151a6dfd
  40955a:	sub    ebx,DWORD PTR [edx-0x130d0f9d]
  409560:	mov    esi,DWORD PTR [ecx]
  409562:	(bad)  
  409563:	xchg   ebp,eax
  409564:	nop
  409565:	(bad)  
  409566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409567:	cmp    al,0x48
  409569:	mov    ah,0xac
  40956b:	xlat   BYTE PTR ds:[ebx]
  40956c:	addr16 ret 
  40956e:	sub    eax,0x7108e590
  409573:	adc    eax,0x6e1a24d0
  409578:	into   
  409579:	shr    ebx,0x32
  40957c:	loop   0x4094ff
  40957e:	and    ch,BYTE PTR [ecx+0x4a]
  409581:	fisubr DWORD PTR cs:[ecx+0x1a]
  409585:	lock mov ecx,0xa134ad58
  40958b:	adc    DWORD PTR [eax+0x118b5cd9],0x93b245e6
  409595:	mov    dh,BYTE PTR [edi]
  409597:	dec    ebx
  409598:	dec    edx
  409599:	xor    BYTE PTR [esi+ebp*1],ah
  40959c:	add    al,0x79
  40959e:	sub    DWORD PTR [ebp+edi*2-0x48206fb7],eax
  4095a5:	xor    BYTE PTR [ecx],ch
  4095a7:	in     eax,dx
  4095a8:	xchg   esi,eax
  4095a9:	ins    DWORD PTR es:[edi],dx
  4095aa:	mov    ch,0xe7
  4095ac:	cmp    eax,0x204c5ea8
  4095b1:	xchg   ebx,eax
  4095b2:	jmp    0x536d57f5
  4095b7:	mov    dl,0x8
  4095b9:	mov    ah,0x53
  4095bb:	in     al,0x1d
  4095bd:	jmp    0xe04b52a
  4095c2:	bound  ebp,QWORD PTR [esi+ebx*1+0x614ddc34]
  4095c9:	call   0x5b161713
  4095ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095cf:	push   es
  4095d0:	data16 sub ch,BYTE PTR [esi]
  4095d3:	xlat   BYTE PTR ds:[ebx]
  4095d4:	ins    DWORD PTR es:[edi],dx
  4095d5:	loop   0x4095df
  4095d7:	push   0xffffffe4
  4095d9:	test   DWORD PTR [ebx],0xc2d3f217
  4095df:	bound  edx,QWORD PTR [esi]
  4095e1:	jmp    0x4581b384
  4095e6:	in     al,0x6e
  4095e8:	test   DWORD PTR [edx-0x2568b9f4],ebp
  4095ee:	sub    DWORD PTR [edi],0x5ca7b3e
  4095f4:	push   edx
  4095f5:	lock fsub QWORD PTR [esi]
  4095f8:	ins    BYTE PTR es:[edi],dx
  4095f9:	scas   eax,DWORD PTR es:[edi]
  4095fa:	lds    edi,FWORD PTR [eax+0x5c]
  4095fd:	push   esp
  4095fe:	(bad)  
  4095ff:	lds    ecx,FWORD PTR [eax+edx*2]
  409602:	pop    ebp
  409603:	aad    0xec
  409605:	lahf   
  409606:	ss push es
  409608:	addr16 es in eax,0x10
  40960c:	(bad)  
  40960d:	fidiv  WORD PTR [esi-0x71]
  409610:	cwde   
  409611:	les    ebp,FWORD PTR gs:[edx]
  409614:	ret    
  409615:	pop    ds
  409616:	jge    0x4095a2
  409618:	mov    ebp,0x729e43c5
  40961d:	gs or  al,0x66
  409620:	add    al,0x41
  409622:	aaa    
  409623:	xchg   edi,eax
  409624:	xor    BYTE PTR [ecx-0x588db6f1],ch
  40962a:	stc    
  40962b:	test   DWORD PTR [ecx-0x48bed57c],0x4c3c7b4
  409635:	dec    esp
  409636:	ror    DWORD PTR [esi+0x48],0xa5
  40963a:	sub    eax,0xea451a24
  40963f:	mov    ds:0xd57042f8,eax
  409644:	icebp  
  409645:	(bad)  
  409646:	xor    ebp,DWORD PTR [edi]
  409648:	pop    ss
  409649:	and    eax,0x6add49de
  40964e:	(bad)  
  40964f:	(bad)  
  409650:	pop    ebx
  409651:	(bad)  
  409652:	jmp    0x409646
  409654:	loop   0x409631
  409656:	retw   0x33b8
  40965a:	out    0xc5,eax
  40965c:	loope  0x4096aa
  40965e:	enter  0xe193,0x8d
  409662:	xchg   ebx,eax
  409663:	jmp    0x47590037
  409668:	push   ebx
  409669:	cmp    BYTE PTR [ebx-0x7be4c46a],ah
  40966f:	cmp    al,0x8
  409671:	xchg   ebx,eax
  409672:	(bad)  
  409674:	cwde   
  409675:	retf   0xbfab
  409678:	push   ds
  409679:	adc    DWORD PTR [esi-0x66e20ae],esp
  40967f:	(bad)  
  409680:	jmp    0x4096b2
  409682:	mov    dl,ah
  409684:	clc    
  409685:	ja     0x4096fe
  409687:	push   esi
  409688:	loop   0x4096e0
  40968a:	fmul   QWORD PTR [edx]
  40968c:	or     ch,dh
  40968e:	cmp    bh,BYTE PTR [ecx+esi*8+0x690d6983]
  409695:	inc    edi
  409696:	adc    al,0xc5
  409698:	sub    BYTE PTR [eax],dl
  40969a:	cmp    al,0x2e
  40969c:	fstp   TBYTE PTR [edi-0x4cfaa59c]
  4096a2:	into   
  4096a3:	mov    ah,bh
  4096a5:	ret    0x883f
  4096a8:	adc    BYTE PTR [esi-0x7f42317d],dh
  4096ae:	int3   
  4096af:	jnp    0x409723
  4096b1:	add    cl,bl
  4096b3:	popf   
  4096b4:	daa    
  4096b5:	xchg   esi,eax
  4096b6:	rcr    DWORD PTR [edi],0x80
  4096b9:	enter  0x23f3,0xe4
  4096bd:	pop    esp
  4096be:	fwait
  4096bf:	mov    ah,0xe9
  4096c1:	or     dh,dh
  4096c3:	jb     0x409670
  4096c5:	ss add dh,bl
  4096c8:	scas   eax,DWORD PTR es:[edi]
  4096c9:	push   edx
  4096ca:	mov    dh,0xb0
  4096cc:	pop    esp
  4096cd:	mov    eax,0x9b9a26cc
  4096d2:	dec    ebp
  4096d3:	xor    eax,0x7ca1994b
  4096d8:	push   DWORD PTR [esi]
  4096da:	sbb    BYTE PTR [ebp+0x0],bl
  4096dd:	mov    dh,dl
  4096df:	xchg   ecx,eax
  4096e0:	fdivr  DWORD PTR [esi]
  4096e2:	xchg   ebx,eax
  4096e3:	ss (bad) 
  4096e5:	cld    
  4096e6:	push   DWORD PTR [eax]
  4096e8:	inc    eax
  4096e9:	loop   0x409695
  4096eb:	adc    DWORD PTR [eax],esp
  4096ed:	aaa    
  4096ee:	jl     0x409683
  4096f0:	xor    eax,0x26fe125a
  4096f5:	out    dx,al
  4096f6:	pop    esp
  4096f7:	out    0x4e,eax
  4096f9:	loopne 0x4096b4
  4096fb:	outs   dx,BYTE PTR ds:[esi]
  4096fc:	sbb    ebx,DWORD PTR [edx-0x1e]
  4096ff:	push   es
  409700:	xchg   ebp,eax
  409701:	add    esp,edx
  409703:	or     al,0x66
  409705:	bnd jo 0x4096c3
  409708:	shl    ebp,1
  40970a:	out    0xb4,al
  40970c:	pop    eax
  40970d:	shl    DWORD PTR [edx],0x84
  409710:	dec    eax
  409711:	push   esp
  409712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409713:	jmp    0x313b:0x42d264de
  40971a:	daa    
  40971b:	inc    ecx
  40971c:	inc    esi
  40971d:	or     ebp,DWORD PTR [esi+ecx*1+0x468ef9]
  409724:	cli    
  409725:	xor    eax,0xbdab66d1
  40972a:	pop    edi
  40972b:	add    dh,BYTE PTR [esi+eax*2]
  40972e:	cmp    dl,BYTE PTR [ecx+edi*1]
  409731:	jge    0x40974b
  409733:	push   0x5f
  409735:	mov    edx,0xe335c056
  40973a:	or     ebp,DWORD PTR [eax+0x14426b3]
  409740:	jnp    0x409785
  409742:	push   eax
  409743:	dec    ebp
  409744:	es xchg edx,eax
  409746:	mov    ecx,DWORD PTR [ebx-0x71]
  409749:	mov    eax,DWORD PTR [esi-0x11]
  40974c:	test   DWORD PTR [ebx+ebx*4+0x29],edx
  409750:	fsubr  st,st(4)
  409752:	mov    ecx,0xb782898d
  409757:	sti    
  409758:	(bad)  
  409759:	fld    TBYTE PTR [edi+0x74]
  40975c:	mov    edi,0x70bc891d
  409761:	and    al,bh
  409763:	mov    ds:0xb952f0bc,eax
  409768:	pinsrw mm3,WORD PTR [edx+0xc],0x9e
  40976d:	retf   0x1895
  409770:	jo     0x40979f
  409772:	sti    
  409773:	iret   
  409774:	nop    DWORD PTR [ebx-0x28c15059]
  40977b:	rcl    ebx,1
  40977d:	ins    BYTE PTR es:[edi],dx
  40977e:	in     al,dx
  40977f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409780:	mov    al,0xae
  409782:	clc    
  409783:	lea    edi,gs:[ebp-0x6e9d4e65]
  40978a:	or     BYTE PTR [ebx+0xb],dh
  40978d:	push   0xffffff90
  40978f:	ja     0x4097a7
  409791:	add    BYTE PTR [ebx],bh
  409793:	mov    eax,ds:0x885293dd
  409798:	in     al,0x12
  40979a:	adc    esi,eax
  40979c:	jmp    0xf8ff65b
  4097a1:	push   0xffffffbb
  4097a3:	mov    eax,0x4d9daf18
  4097a8:	in     eax,0x93
  4097aa:	sahf   
  4097ab:	mov    bl,0xed
  4097ad:	pop    ebp
  4097ae:	add    eax,0xaa22e5d1
  4097b3:	(bad)  
  4097b5:	sub    BYTE PTR [ecx],0xfd
  4097b8:	jbe    0x409786
  4097ba:	cld    
  4097bb:	pop    es
  4097bc:	cwde   
  4097bd:	jp     0x409833
  4097bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097c0:	bnd je 0x40981d
  4097c3:	sbb    dh,BYTE PTR [eax+0x42]
  4097c6:	cmp    BYTE PTR [ecx],0xf2
  4097c9:	pushf  
  4097ca:	sbb    eax,DWORD PTR [esi]
  4097cc:	xlat   BYTE PTR ds:[ebx]
  4097cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ce:	pop    ebp
  4097cf:	scas   al,BYTE PTR es:[edi]
  4097d0:	mov    al,ds:0xd6a07617
  4097d5:	stc    
  4097d6:	mov    WORD PTR [eax+0x38],ds
  4097d9:	int    0xec
  4097db:	inc    eax
  4097dc:	ds pop eax
  4097de:	mov    ah,0xae
  4097e0:	jmp    0x409787
  4097e2:	mov    cl,BYTE PTR [edx]
  4097e4:	mov    bl,BYTE PTR [ecx-0x1cda16ab]
  4097ea:	cmp    ebp,DWORD PTR [ecx+esi*8-0x6677d3ee]
  4097f1:	push   cs
  4097f2:	xchg   edi,eax
  4097f3:	in     eax,dx
  4097f4:	sahf   
  4097f5:	mov    ecx,0xf05f2d6b
  4097fa:	push   ebp
  4097fb:	xchg   BYTE PTR [eax+0x33],bh
  4097fe:	in     eax,dx
  4097ff:	cdq    
  409800:	mov    eax,0x83c10479
  409805:	jle    0x409877
  409807:	mov    edx,esi
  409809:	pop    ds
  40980a:	sub    eax,0x15432f66
  40980f:	mov    dl,0xe8
  409811:	rcl    ch,cl
  409813:	aad    0xd4
  409815:	out    dx,eax
  409816:	pop    esp
  409817:	pop    ss
  409818:	test   BYTE PTR [esi+0x7e],cl
  40981b:	mov    esi,0xa247682
  409820:	inc    esi
  409821:	cmp    ebx,DWORD PTR [ebp+0x695b14f6]
  409827:	ja     0x4098a6
  409829:	dec    edi
  40982a:	(bad)  
  40982b:	push   eax
  40982c:	rol    DWORD PTR [ecx+0x37844737],1
  409832:	jns    0x40984b
  409834:	xchg   ebp,eax
  409835:	sub    al,BYTE PTR [ecx-0x53]
  409838:	mov    esp,0xc4e93e30
  40983d:	ret    0x7d8f
  409840:	fist   WORD PTR [edx+0x4d488fd9]
  409846:	push   edx
  409847:	mov    al,0x41
  409849:	mov    ebp,0x4189d80c
  40984e:	cli    
  40984f:	je     0x40988b
  409851:	arpl   ax,dx
  409853:	shr    DWORD PTR [esi],0x75
  409856:	cmp    al,0x7c
  409858:	or     al,0xc0
  40985a:	mov    dh,0xb2
  40985c:	push   0xaf621d29
  409861:	shr    BYTE PTR [eax],1
  409863:	jmp    0x34c65cb6
  409868:	and    al,0xb0
  40986a:	fistp  QWORD PTR [ebx]
  40986c:	jl     0x4098d3
  40986e:	fisttp WORD PTR [edi]
  409870:	mov    esp,0x7303ae5d
  409875:	sbb    al,0x38
  409877:	ficom  DWORD PTR [ebx+0x7d63defa]
  40987d:	inc    esi
  40987e:	mov    cl,0x6e
  409880:	repz cdq 
  409882:	cwde   
  409883:	stc    
  409884:	(bad)  
  409885:	out    0xc3,al
  409887:	jmp    0x3ea7:0x8a9fbee2
  40988e:	xchg   edx,eax
  40988f:	push   0xc5af209b
  409894:	shl    BYTE PTR [ebx+0x24],0x21
  409898:	push   0xffffffd9
  40989a:	and    ch,ah
  40989c:	lahf   
  40989d:	xchg   DWORD PTR [ebx],ebp
  40989f:	push   ebx
  4098a0:	ins    DWORD PTR es:[edi],dx
  4098a1:	push   0x8ec101e3
  4098a6:	cmc    
  4098a7:	push   ds
  4098a8:	js     0x409854
  4098aa:	divps  xmm1,XMMWORD PTR ds:0xf1a641bd
  4098b1:	das    
  4098b2:	(bad)  
  4098b3:	jbe    0x40990b
  4098b5:	aam    0xc1
  4098b7:	mov    edi,0xeb225601
  4098bc:	scas   al,BYTE PTR es:[edi]
  4098bd:	jg     0x4098af
  4098bf:	or     eax,0x63738538
  4098c4:	push   edx
  4098c5:	adc    BYTE PTR ds:0x94b9a04f,bl
  4098cb:	iret   
  4098cc:	dec    edx
  4098cd:	fsubr  st(4),st
  4098cf:	(bad)  [ebx]
  4098d1:	push   edx
  4098d2:	push   0x3a
  4098d4:	jbe    0x409891
  4098d6:	in     al,dx
  4098d7:	jecxz  0x40988f
  4098d9:	hlt    
  4098da:	lock xchg edi,eax
  4098dc:	or     edi,edi
  4098de:	fucomi st,st(2)
  4098e0:	fadd   DWORD PTR [ebx]
  4098e2:	clc    
  4098e3:	dec    esi
  4098e4:	mov    esi,0xe89a7d22
  4098e9:	jge    0x40993f
  4098eb:	mov    ebx,0x155a25d6
  4098f0:	jbe    0x409872
  4098f2:	test   DWORD PTR [esi+esi*1-0x719e9d46],ebx
  4098f9:	out    0xa5,al
  4098fb:	adc    bl,BYTE PTR [ebx+0x7e]
  4098fe:	mov    WORD PTR ds:0xbc230885,ds
  409904:	mov    dh,0xe7
  409906:	jmp    0x4586:0x2b58cc19
  40990d:	sbb    esi,DWORD PTR [ebx+0x7785f191]
  409913:	sub    DWORD PTR [ebx+0x4dc1dff],esp
  409919:	lahf   
  40991a:	pop    ebp
  40991b:	imul   esi,ebx,0x91095a71
  409921:	or     al,BYTE PTR [edx-0x415b748e]
  409927:	ins    DWORD PTR es:[edi],dx
  409928:	sub    bl,BYTE PTR [esi-0x3c0d732f]
  40992e:	jae    0x409986
  409930:	add    eax,0xb0191d4a
  409935:	leave  
  409936:	adc    al,0x68
  409938:	or     DWORD PTR [esi+0x2eeae7a2],esp
  40993e:	sbb    eax,0xbe245dc1
  409943:	lds    eax,FWORD PTR cs:[ebx-0x56c0fffd]
  40994a:	cdq    
  40994b:	adc    eax,0xfe29d8b1
  409950:	fmul   QWORD PTR [esi-0x27]
  409953:	cmp    ebx,DWORD PTR [ebx]
  409955:	retf   0x8035
  409958:	xchg   edx,eax
  409959:	or     esi,0xffffffe0
  40995c:	xchg   esi,eax
  40995d:	xor    DWORD PTR [eax],ebp
  40995f:	std    
  409960:	loopne 0x4098e5
  409962:	push   es
  409963:	clc    
  409964:	mov    BYTE PTR [ebp-0x2457096f],dl
  40996a:	das    
  40996b:	xchg   esp,eax
  40996c:	jmp    0x4098fd
  40996e:	int    0x5f
  409970:	mov    dl,0xf
  409972:	adc    DWORD PTR [esi+ebp*1-0x436aaee2],ebp
  409979:	cmc    
  40997a:	mov    bh,0x4d
  40997c:	nop
  40997d:	pusha  
  40997e:	and    esp,DWORD PTR [ebx-0x28]
  409981:	sbb    DWORD PTR [edi+0x49],0xecd0f430
  409988:	xchg   DWORD PTR [eax+eax*4+0x22],ebx
  40998c:	dec    si
  40998e:	int3   
  40998f:	mov    ?,edx
  409991:	hlt    
  409992:	adc    eax,0x8badd037
  409997:	pusha  
  409998:	push   es
  409999:	arpl   WORD PTR [ecx+0x2d],bp
  40999c:	push   eax
  40999d:	or     al,0xad
  40999f:	(bad)  
  4099a0:	aam    0xf4
  4099a2:	push   ebp
  4099a3:	mov    edx,0xc09a9776
  4099a8:	sbb    edi,edx
  4099aa:	into   
  4099ab:	rol    DWORD PTR [eax+0x2a],0x86
  4099af:	out    dx,eax
  4099b0:	aad    0xc6
  4099b2:	test   BYTE PTR [ebp+0x2e4a43ff],dl
  4099b8:	cld    
  4099b9:	imul   eax,esi,0xffffffdd
  4099bc:	add    dl,dl
  4099be:	scas   al,BYTE PTR es:[edi]
  4099bf:	cmp    ecx,ecx
  4099c1:	stos   DWORD PTR es:[edi],eax
  4099c2:	dec    esp
  4099c3:	lods   al,BYTE PTR ds:[esi]
  4099c4:	jg     0x4099a4
  4099c6:	stc    
  4099c7:	xor    ecx,ecx
  4099c9:	data16 loop 0x4099ad
  4099cc:	test   al,0x5c
  4099ce:	or     ah,BYTE PTR [ebp-0x2c]
  4099d1:	shl    BYTE PTR [ecx-0x41ec0cf8],cl
  4099d7:	xchg   ebp,eax
  4099d8:	out    dx,eax
  4099d9:	aas    
  4099da:	popf   
  4099db:	call   0xc8e2:0xb6fee9e
  4099e2:	nop
  4099e3:	jmp    0xf8e836cf
  4099e8:	mov    BYTE PTR [ebx+edi*4+0x3],bl
  4099ec:	in     eax,dx
  4099ed:	sub    eax,0x19a3f72b
  4099f2:	mov    ch,0x30
  4099f4:	jmp    0xfe669a7e
  4099f9:	mov    ecx,0x7a612395
  4099fe:	push   cs
  4099ff:	mov    ds,ecx
  409a01:	jle    0x409a6d
  409a03:	push   ebp
  409a04:	pop    ds
  409a05:	jge    0x4099d4
  409a07:	outs   dx,BYTE PTR ds:[esi]
  409a08:	(bad)  
  409a09:	div    DWORD PTR [ecx-0x7bafbd07]
  409a0f:	mov    bl,dh
  409a11:	rcr    BYTE PTR [ebp+0x1a],1
  409a14:	xchg   ebx,ebx
  409a16:	mov    cl,0xc0
  409a18:	out    dx,eax
  409a19:	ins    BYTE PTR es:[edi],dx
  409a1a:	hlt    
  409a1b:	arpl   WORD PTR [ebx-0x56],dx
  409a1e:	mov    ebx,0xc5e01621
  409a23:	dec    ebx
  409a24:	adc    esp,esp
  409a26:	mov    ah,0xd9
  409a28:	pushf  
  409a29:	jb     0x4099d9
  409a2b:	xor    bl,BYTE PTR [edi]
  409a2d:	call   0x72c7c13f
  409a32:	sub    al,0xd
  409a34:	jecxz  0x409a0b
  409a36:	jmp    0xb8ca57a6
  409a3b:	mov    al,ds:0x364733d
  409a40:	ss push ebx
  409a42:	push   ds
  409a43:	aaa    
  409a44:	jmp    0x409a3e
  409a46:	icebp  
  409a47:	call   0xd34746eb
  409a4c:	test   eax,0xbb8d224
  409a51:	mov    ecx,DWORD PTR [ebx+0x7d]
  409a54:	lock cs sbb eax,0x945626ee
  409a5b:	mov    dl,0x3a
  409a5d:	jmp    0xcb232e40
  409a62:	dec    eax
  409a63:	sbb    al,0x96
  409a65:	cmovnp ecx,DWORD PTR [esp+eiz*8-0x4a]
  409a6a:	(bad)  
  409a6c:	stc    
  409a6d:	inc    ecx
  409a6e:	cmp    eax,DWORD PTR [ecx+0x2503d848]
  409a74:	cmp    al,0x2e
  409a76:	fbstp  TBYTE PTR [edx]
  409a78:	add    ah,BYTE PTR [edx]
  409a7a:	(bad)  
  409a7b:	imul   edi,DWORD PTR [ebp+0x17],0xc2c30370
  409a82:	cmp    al,0x38
  409a84:	xor    al,0x23
  409a86:	aad    0x1a
  409a88:	inc    edi
  409a89:	cdq    
  409a8a:	push   0xffffffdc
  409a8c:	pop    eax
  409a8d:	and    edi,esi
  409a8f:	sar    BYTE PTR [eax+ebx*8],cl
  409a92:	or     DWORD PTR [edx],edx
  409a94:	or     al,0xe8
  409a96:	inc    eax
  409a97:	push   edi
  409a98:	cwde   
  409a99:	mov    edi,0x93578601
  409a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a9f:	jnp    0x409a2a
  409aa1:	das    
  409aa2:	aad    0x23
  409aa4:	sar    DWORD PTR [edx+0x406ff4d7],0x61
  409aab:	lock rep outs dx,DWORD PTR fs:[esi]
  409aaf:	retf   
  409ab0:	leave  
  409ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab2:	retf   0xdda9
  409ab5:	fcomp  st(6)
  409ab7:	ret    0xc114
  409aba:	data16 sahf 
  409abc:	adc    eax,0x46dda0e8
  409ac1:	in     eax,0x41
  409ac3:	outs   dx,DWORD PTR ds:[esi]
  409ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ac5:	js     0x409aac
  409ac7:	imul   esi,DWORD PTR [ecx],0xf949ba2f
  409acd:	mov    ebx,0x51fc9e14
  409ad2:	popf   
  409ad3:	push   edi
  409ad4:	push   esi
  409ad5:	xor    BYTE PTR [ecx+0x29],al
  409ad8:	inc    ebx
  409ad9:	inc    ebp
  409ada:	shr    BYTE PTR ds:0x4fdb95e4,cl
  409ae0:	cwde   
  409ae1:	imul   edi,DWORD PTR [eax],0x65f59ec9
  409ae7:	pushf  
  409ae8:	or     BYTE PTR [ebp+eax*2-0x14],ah
  409aec:	stos   BYTE PTR es:[edi],al
  409aed:	ret    
  409aee:	loope  0x409b33
  409af0:	jle    0x409b31
  409af2:	xchg   ecx,eax
  409af3:	xor    dh,dl
  409af5:	mov    al,BYTE PTR [eax+0x4d5c547e]
  409afb:	pop    es
  409afc:	jmp    0x8f9e:0x230b4f17
  409b03:	jns    0x409b2f
  409b05:	(bad)  
  409b07:	pop    esp
  409b08:	mov    cl,0x73
  409b0a:	clc    
  409b0b:	and    eax,0xe886f9d6
  409b10:	repnz dec esp
  409b12:	jo     0x409b6b
  409b14:	add    DWORD PTR [edx+ecx*1+0x2f],ebp
  409b18:	dec    eax
  409b19:	sbb    al,0x24
  409b1b:	popa   
  409b1c:	xor    eax,0x801f474c
  409b21:	jecxz  0x409b29
  409b23:	sub    BYTE PTR [esi-0x5ccc3cea],ch
  409b29:	fld    DWORD PTR [eax+0x27]
  409b2c:	sub    ecx,DWORD PTR [eax]
  409b2e:	xor    DWORD PTR [edx-0x16],ebx
  409b31:	sub    edi,DWORD PTR [ebx+0x76]
  409b34:	rcr    DWORD PTR [edx-0x4c49bdb],0x34
  409b3b:	loope  0x409baf
  409b3d:	dec    ebp
  409b3e:	xor    esp,DWORD PTR [ebx+ecx*8]
  409b41:	out    dx,al
  409b42:	bnd jne 0x409b5a
  409b45:	mov    cl,0x33
  409b47:	pop    ebp
  409b48:	inc    esp
  409b49:	lds    ebx,FWORD PTR [esi]
  409b4b:	inc    ecx
  409b4c:	sub    al,0x4b
  409b4e:	pop    edi
  409b4f:	xor    DWORD PTR [ebx+0x65c9fb63],ecx
  409b55:	(bad)  
  409b56:	out    0xc,eax
  409b58:	dec    edx
  409b59:	jmp    0x6d51:0x47e4bbdd
  409b60:	in     eax,dx
  409b61:	fs stos DWORD PTR es:[edi],eax
  409b63:	inc    esp
  409b64:	pop    ebx
  409b65:	nop
  409b66:	ret    0x7816
  409b69:	push   ecx
  409b6a:	pushf  
  409b6b:	(bad)  
  409b6c:	sbb    BYTE PTR [ebp-0x4f616aa3],ah
  409b72:	add    al,0x5d
  409b74:	cmp    BYTE PTR [esi],ah
  409b76:	xchg   ebx,eax
  409b77:	(bad)  
  409b78:	and    al,0xa1
  409b7a:	(bad)  
  409b7b:	ds push es
  409b7d:	and    esp,DWORD PTR [eax-0x67]
  409b80:	mov    ecx,0x45898e85
  409b85:	rcl    BYTE PTR [ebp+0x148a70c7],0xa7
  409b8c:	jno    0x409bcb
  409b8e:	jns    0x409b59
  409b90:	jmp    0x409b47
  409b92:	out    0x59,al
  409b94:	fcomp  DWORD PTR [esi-0x70442571]
  409b9a:	xor    cl,dh
  409b9c:	test   al,0x7f
  409b9e:	dec    eax
  409b9f:	xor    BYTE PTR [eax],0xb7
  409ba2:	out    dx,al
  409ba3:	mov    cl,0x44
  409ba5:	mov    bh,0xe8
  409ba7:	out    0x98,al
  409ba9:	sbb    BYTE PTR ds:0xafedcc7c,0x2b
  409bb0:	cli    
  409bb1:	(bad)  
  409bb2:	and    al,0xb2
  409bb4:	adc    bl,al
  409bb6:	dec    ebx
  409bb7:	in     eax,0xa5
  409bb9:	mov    dh,0xac
  409bbb:	out    dx,eax
  409bbc:	lods   ax,WORD PTR ds:[esi]
  409bbe:	adc    eax,DWORD PTR [bp+di]
  409bc1:	push   ss
  409bc2:	pop    edx
  409bc3:	shr    DWORD PTR [ecx],1
  409bc5:	ins    BYTE PTR es:[edi],dx
  409bc6:	popa   
  409bc7:	mov    DWORD PTR ds:0x4c8174a3,edx
  409bcd:	sbb    al,dh
  409bcf:	cli    
  409bd0:	push   ebp
  409bd1:	mov    WORD PTR ds:0x24d7b591,es
  409bd7:	enter  0x48a6,0x82
  409bdb:	and    ebp,DWORD PTR [ebp+0x30]
  409bde:	outs   dx,BYTE PTR ds:[esi]
  409bdf:	dec    ebx
  409be0:	cmp    edx,DWORD PTR [edi+0x49]
  409be3:	lods   eax,DWORD PTR ds:[esi]
  409be4:	(bad)  
  409be5:	jmp    0xe0bebac3
  409bea:	or     eax,0x64bcab10
  409bef:	push   0x647590ef
  409bf4:	push   ds
  409bf5:	xchg   esi,eax
  409bf6:	sbb    edx,DWORD PTR [ebp+ecx*8-0x10]
  409bfa:	xor    ebx,esi
  409bfc:	imul   ebp,edx,0x21999a4f
  409c02:	ret    0xe09e
  409c05:	jg     0x409c02
  409c07:	sub    edx,DWORD PTR [esi+ebx*8]
  409c0a:	cmp    ch,BYTE PTR [esi]
  409c0c:	mov    bh,0xa
  409c0e:	push   es
  409c0f:	and    cl,cl
  409c11:	jno    0x409c46
  409c13:	jg     0x409bb5
  409c15:	jle    0x409c4a
  409c17:	jne    0x409bbb
  409c19:	mov    es,edi
  409c1b:	jle    0x409bfd
  409c1d:	fmul   DWORD PTR [edx+ebp*2+0x1f8d0b37]
  409c24:	test   ecx,ebp
  409c26:	mov    al,ds:0xe3bfebbb
  409c2b:	inc    ecx
  409c2c:	in     eax,0x6f
  409c2e:	bound  ebp,QWORD PTR [ecx-0x33816468]
  409c34:	jns    0x409c14
  409c36:	pusha  
  409c37:	mov    al,0x4c
  409c39:	out    0x52,al
  409c3b:	jnp    0x409c52
  409c3d:	dec    edi
  409c3e:	mov    dl,0xa
  409c40:	sahf   
  409c41:	test   DWORD PTR ds:0xc6dc78ab,esp
  409c47:	std    
  409c48:	xor    ebx,DWORD PTR [edx]
  409c4a:	das    
  409c4b:	push   ss
  409c4c:	push   esp
  409c4d:	add    BYTE PTR [esi],dh
  409c4f:	push   ss
  409c50:	sub    DWORD PTR [eax+ecx*1-0x11],ecx
  409c54:	mov    edi,0xf98e50b
  409c59:	mov    ds:0x9074b9c5,eax
  409c5e:	jg     0x409ca3
  409c60:	nop
  409c61:	mov    ch,0xc
  409c63:	push   ebx
  409c64:	leave  
  409c65:	xor    al,0x20
  409c67:	clc    
  409c68:	popa   
  409c69:	jl     0x409bf8
  409c6b:	(bad)  
  409c6c:	das    
  409c6d:	in     al,dx
  409c6e:	icebp  
  409c6f:	jle    0x409c83
  409c71:	repnz lods al,BYTE PTR ds:[esi]
  409c73:	scas   eax,DWORD PTR es:[edi]
  409c74:	jb     0x409c2b
  409c76:	stos   BYTE PTR es:[edi],al
  409c77:	inc    eax
  409c78:	aaa    
  409c79:	mov    eax,es
  409c7b:	mov    dh,0x2d
  409c7d:	mov    WORD PTR [edx+0x3],ds
  409c80:	sub    eax,0x886b55e4
  409c85:	mov    ch,0x9e
  409c87:	into   
  409c88:	pop    es
  409c89:	or     al,0x34
  409c8c:	call   0xc0724cf
  409c91:	xchg   DWORD PTR [esi-0x73],ebp
  409c94:	and    esp,edx
  409c96:	pop    ebx
  409c97:	push   edx
  409c98:	add    DWORD PTR ss:[esi+0x23],edi
  409c9c:	ret    
  409c9d:	out    0xe,al
  409c9f:	mov    ebp,DWORD PTR ds:0xb56f628
  409ca5:	ins    DWORD PTR es:[edi],dx
  409ca6:	repz and DWORD PTR ss:[esi-0x19957b07],esp
  409cae:	dec    edi
  409caf:	mov    ds:0x97fe3c8f,al
  409cb4:	xor    DWORD PTR [eax+ebp*4-0x470a7fa6],esp
  409cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cbc:	jne    0x409cce
  409cbe:	dec    DWORD PTR [esi+0x8]
  409cc1:	cmp    BYTE PTR [eax],0x22
  409cc4:	arpl   WORD PTR [ebp+eiz*8+0x1efa8a05],cx
  409ccb:	mov    eax,0x68406621
  409cd0:	push   0x26
  409cd2:	mov    ds:0x32519a0e,eax
  409cd7:	or     BYTE PTR [eax+0x3b],dl
  409cda:	xchg   esi,eax
  409cdb:	sahf   
  409cdc:	xor    ecx,eax
  409cde:	lods   eax,DWORD PTR ds:[esi]
  409cdf:	add    al,BYTE PTR [ebp-0x61]
  409ce2:	cwde   
  409ce3:	sbb    eax,0xdaa5e0b5
  409ce8:	jns    0x409c6f
  409cea:	sbb    al,0x62
  409cec:	lahf   
  409ced:	xor    BYTE PTR [ecx+eax*1],cl
  409cf0:	retf   
  409cf1:	jno    0x409c9c
  409cf3:	dec    ecx
  409cf4:	ret    0xb8b1
  409cf7:	pop    esi
  409cf8:	cdq    
  409cf9:	(bad)  
  409cfb:	in     al,dx
  409cfc:	sbb    al,BYTE PTR [edx]
  409cfe:	or     edi,0xc423f330
  409d04:	mov    bh,0xa
  409d06:	xor    BYTE PTR [esi-0x30c5bea],dl
  409d0c:	iret   
  409d0d:	sti    
  409d0e:	nop
  409d0f:	jmp    0x409d01
  409d11:	pop    esi
  409d12:	cmp    BYTE PTR [edx+0x1e56b646],cl
  409d18:	lds    ecx,FWORD PTR [ebp-0x51]
  409d1b:	icebp  
  409d1c:	fmul   DWORD PTR ds:[esi+0x1]
  409d20:	cs dec ebx
  409d22:	push   es
  409d23:	cmp    dh,BYTE PTR [edx+edx*1]
  409d26:	push   0x49a1cce
  409d2b:	mov    DWORD PTR [ebx+0x33cf1edf],edi
  409d31:	jae    0x409db0
  409d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d34:	add    al,0xfc
  409d36:	in     al,dx
  409d37:	mov    dl,0x73
  409d39:	inc    ebp
  409d3a:	shl    dl,0x27
  409d3d:	add    esi,esi
  409d3f:	xchg   DWORD PTR [ecx+0x586e6f1b],ecx
  409d45:	retf   0x608c
  409d48:	or     BYTE PTR [esi-0x338bb2a0],dl
  409d4e:	mov    ah,0xf0
  409d50:	push   0xffffffc8
  409d52:	dec    edi
  409d53:	lds    eax,FWORD PTR [ecx]
  409d55:	test   al,0xee
  409d57:	test   DWORD PTR [edx],0x4a621845
  409d5d:	punpcklwd mm0,DWORD PTR [edi+0x35]
  409d61:	and    al,ah
  409d63:	jno    0x409d67
  409d65:	adc    ebp,DWORD PTR [ebx+0x34]
  409d68:	sub    DWORD PTR [edi+ebx*2+0x56ea4103],edx
  409d6f:	xlat   BYTE PTR ds:[ebx]
  409d70:	cmp    BYTE PTR [edi+0x78],dl
  409d73:	ret    
  409d74:	scas   eax,DWORD PTR es:[edi]
  409d75:	pushf  
  409d76:	adc    BYTE PTR [ebp+0x98e93d7],bl
  409d7c:	jns    0x409dab
  409d7e:	clc    
  409d7f:	iret   
  409d80:	ins    BYTE PTR es:[edi],dx
  409d81:	jp     0x409d8b
  409d83:	stos   DWORD PTR es:[edi],eax
  409d84:	dec    ebx
  409d85:	and    ebp,DWORD PTR [edi+0x53]
  409d88:	lock pushf 
  409d8a:	adc    DWORD PTR [edx+0x4a],ebp
  409d8d:	adc    DWORD PTR [esi],ebx
  409d8f:	push   ebx
  409d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d91:	pop    ss
  409d92:	lahf   
  409d93:	jp     0x409d5f
  409d95:	sbb    al,0x92
  409d97:	or     DWORD PTR [eax+0x72],ebp
  409d9a:	test   DWORD PTR [esp+ebp*4],ebp
  409d9d:	in     eax,dx
  409d9e:	lds    eax,FWORD PTR [ebx-0x8]
  409da1:	inc    ebx
  409da2:	cmp    al,0x7a
  409da4:	cmp    BYTE PTR [eiz*1+0x478d3d08],al
  409dab:	ret    0x19ed
  409dae:	js     0x409dbd
  409db0:	sahf   
  409db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db2:	outs   dx,BYTE PTR ds:[esi]
  409db3:	pop    es
  409db4:	cmp    al,0xc1
  409db6:	jo     0x409d40
  409db8:	loopne 0x409d45
  409dba:	jg     0x409dba
  409dbc:	xchg   al,dl
  409dbe:	push   ecx
  409dbf:	call   0x8a466a0c
  409dc4:	ds das 
  409dc6:	lds    esp,FWORD PTR ds:0xcf44b3d5
  409dcc:	fwait
  409dcd:	inc    edi
  409dce:	mul    DWORD PTR [ecx-0x424d4e47]
  409dd4:	aas    
  409dd5:	xchg   BYTE PTR [si-0x5d96],bl
  409dda:	mov    DWORD PTR [ebp+0x1b],esi
  409ddd:	mov    edi,0x1f007b63
  409de2:	jl     0x409e24
  409de4:	add    BYTE PTR [eax-0x6e],0xfc
  409de8:	xchg   esi,eax
  409de9:	pop    ebp
  409dea:	or     DWORD PTR [esi+0x25],edx
  409ded:	data16 fwait
  409def:	arpl   WORD PTR [ebx-0x210227d2],si
  409df5:	dec    edi
  409df6:	fucomi st,st(6)
  409df8:	popa   
  409df9:	imul   esp,DWORD PTR [ebp-0x79],0xffffff87
  409dfd:	cmp    esi,eax
  409dff:	lds    ecx,FWORD PTR [eax+0x50d3c075]
  409e05:	jge    0x409e7b
  409e07:	xor    cl,ch
  409e09:	(bad)  
  409e0b:	bound  ebx,QWORD PTR [eax]
  409e0d:	xchg   esi,ebp
  409e0f:	pop    edi
  409e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e11:	jmp    0x93c9:0x42f09ffc
  409e18:	mov    ch,0xf5
  409e1a:	xchg   ebx,eax
  409e1b:	cli    
  409e1c:	mov    bl,0xda
  409e1e:	and    eax,0xd4443298
  409e23:	mov    bh,0xac
  409e25:	leave  
  409e26:	call   0x83ab5bb7
  409e2b:	mov    ebp,0xc782f578
  409e30:	mov    ah,0x27
  409e32:	dec    eax
  409e33:	mov    ecx,0x36d078ff
  409e38:	call   0xdc857042
  409e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e3e:	outs   dx,BYTE PTR ds:[esi]
  409e3f:	ins    DWORD PTR es:[edi],dx
  409e40:	fwait
  409e41:	xor    BYTE PTR [esi],al
  409e43:	mov    DWORD PTR [eax+0x5687b04d],ebp
  409e49:	push   ebx
  409e4a:	jecxz  0x409ea8
  409e4c:	mov    ch,0x2c
  409e4e:	shl    dh,cl
  409e50:	sbb    BYTE PTR [edx],dh
  409e52:	stos   DWORD PTR es:[edi],eax
  409e53:	dec    esi
  409e54:	xchg   edi,eax
  409e55:	mov    ds:0xeacd3c84,eax
  409e5a:	aas    
  409e5b:	or     BYTE PTR [esi-0x1d],ah
  409e5e:	push   edi
  409e5f:	push   0x1a
  409e61:	cmp    BYTE PTR [ecx],0x6c
  409e64:	xchg   edx,eax
  409e65:	cmp    al,0xfd
  409e67:	cwde   
  409e68:	xor    DWORD PTR [edx+0x771533f4],esp
  409e6e:	ds imul eax,DWORD PTR cs:[edx]
  409e73:	mov    edx,DWORD PTR [ebp-0x4]
  409e76:	xor    edx,ecx
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx+0x2c57c083],bl
  40a717:	hlt    
  40a718:	xchg   DWORD PTR [edx+0x6d],esp
  40a71b:	add    al,0x7a
  40a71d:	jp     0x40a705
  40a71f:	pop    edi
  40a720:	jp     0x40a79c
  40a722:	jmp    0xc418:0x1bd9140e
  40a729:	(bad)  
  40a72a:	mov    BYTE PTR gs:[ecx-0x6c31536],dh
  40a731:	add    esp,DWORD PTR [edx+0x7d868066]
  40a737:	dec    eax
  40a738:	add    ch,BYTE PTR [edx]
  40a73a:	sti    
  40a73b:	sar    DWORD PTR [edx],1
  40a73d:	(bad)  
  40a73e:	jbe    0x40a7bc
  40a740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a741:	scas   al,BYTE PTR es:[edi]
  40a742:	popa   
  40a743:	xchg   ebp,eax
  40a744:	jmp    0x6ffc:0xd48eae74
  40a74b:	loop   0x40a6e6
  40a74d:	dec    ebp
  40a74e:	dec    ebp
  40a74f:	xchg   edx,eax
  40a750:	adc    cl,BYTE PTR [edi+0x5b]
  40a753:	dec    ebp
  40a754:	push   0xffffffc1
  40a756:	outs   dx,DWORD PTR ds:[esi]
  40a757:	pop    edi
  40a758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a759:	imul   DWORD PTR [esi-0x4a99bd93]
  40a75f:	push   cs
  40a760:	dec    edi
  40a761:	mov    dh,BYTE PTR [eax-0x31c2baf5]
  40a767:	jecxz  0x40a79e
  40a769:	mov    ah,0x81
  40a76b:	in     al,dx
  40a76c:	xchg   edx,eax
  40a76d:	and    edx,esi
  40a76f:	cwde   
  40a770:	xchg   esp,eax
  40a771:	loope  0x40a786
  40a773:	mov    ecx,0xa610d0dd
  40a778:	frstor [esi+0x3a]
  40a77b:	ret    
  40a77c:	stos   DWORD PTR es:[edi],eax
  40a77d:	jl     0x40a7fc
  40a77f:	pop    esi
  40a780:	ins    DWORD PTR es:[edi],dx
  40a781:	pop    eax
  40a782:	icebp  
  40a783:	mov    bh,0x79
  40a785:	cmp    DWORD PTR ds:0xe1c805f6,ebx
  40a78b:	fld    TBYTE PTR [ebx]
  40a78d:	inc    eax
  40a78e:	fwait
  40a78f:	cmc    
  40a790:	mov    ds:0x5a91508,al
  40a795:	and    eax,0x427d672
  40a79a:	or     BYTE PTR [eax+0x2dcfe712],al
  40a7a0:	dec    edx
  40a7a1:	mov    eax,ds:0xf093ed9a
  40a7a6:	imul   ecx,DWORD PTR [ebx+0x46],0xffffffbd
  40a7aa:	popa   
  40a7ab:	xlat   BYTE PTR ds:[ebx]
  40a7ac:	and    ebp,DWORD PTR [esp+ecx*4]
  40a7af:	and    ecx,esi
  40a7b1:	out    dx,eax
  40a7b2:	sub    dh,BYTE PTR [esi+0x6137a978]
  40a7b8:	sbb    bl,dh
  40a7ba:	data16 fcom QWORD PTR [edi]
  40a7bd:	fstp   TBYTE PTR [esi-0x345817e6]
  40a7c3:	mov    WORD PTR [eax-0x39c730e5],ds
  40a7c9:	daa    
  40a7ca:	dec    edi
  40a7cb:	addr16 icebp 
  40a7cd:	lds    ecx,FWORD PTR ds:[ebp-0x78831895]
  40a7d4:	inc    edi
  40a7d5:	inc    edi
  40a7d6:	and    cl,bh
  40a7d8:	popa   
  40a7d9:	ins    BYTE PTR es:[edi],dx
  40a7da:	adc    eax,0xaacd8bb1
  40a7df:	inc    esp
  40a7e0:	inc    ecx
  40a7e1:	xor    al,0x83
  40a7e3:	dec    ebx
  40a7e4:	push   ds
  40a7e5:	jb     0x40a7db
  40a7e7:	out    0x24,al
  40a7e9:	dec    esi
  40a7ea:	jg     0x40a851
  40a7ec:	add    BYTE PTR [ebp-0x49],ah
  40a7ef:	test   al,0x2d
  40a7f1:	(bad)  
  40a7f2:	das    
  40a7f3:	mov    esp,0x324995f7
  40a7f8:	stc    
  40a7f9:	mov    DWORD PTR [eax+0xe],edx
  40a7fc:	iret   
  40a7fd:	stos   BYTE PTR es:[edi],al
  40a7fe:	pop    esp
  40a7ff:	cmc    
  40a800:	test   eax,0x3d4a627c
  40a805:	dec    esp
  40a806:	addr16 inc ecx
  40a808:	push   ebx
  40a809:	pop    ds
  40a80a:	loope  0x40a866
  40a80c:	or     ah,cl
  40a80e:	push   ecx
  40a80f:	cmc    
  40a810:	push   esp
  40a811:	test   DWORD PTR [eax-0x6a],edi
  40a814:	mov    ch,0x4a
  40a816:	push   eax
  40a817:	mov    ch,0x12
  40a819:	inc    eax
  40a81a:	push   0x2e
  40a81c:	xchg   ebx,eax
  40a81d:	and    eax,0xeb6a3bac
  40a822:	fld    TBYTE PTR [ecx-0x43]
  40a825:	mov    dh,0x59
  40a827:	mov    edx,0x9c5ff32
  40a82c:	adc    eax,0x92631bdb
  40a831:	scas   eax,DWORD PTR es:[edi]
  40a832:	sar    BYTE PTR [ecx-0x37],1
  40a835:	mov    esi,0x100260c6
  40a83a:	mov    ds:0x6eac46bf,eax
  40a83f:	and    ebp,DWORD PTR [ebp+0x26d835b5]
  40a845:	call   0x9079:0x57212d8b
  40a84c:	es jg  0x40a80f
  40a84f:	add    BYTE PTR [edi+0x35],bh
  40a852:	or     DWORD PTR [edx],edi
  40a854:	outs   dx,BYTE PTR ds:[esi]
  40a855:	xor    eax,0xcb7cd6be
  40a85a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a85b:	out    dx,eax
  40a85c:	dec    esi
  40a85d:	inc    edx
  40a85e:	arpl   WORD PTR ds:0xb1f8794,bp
  40a864:	cmp    BYTE PTR [ebx+0x57],cl
  40a867:	stos   BYTE PTR es:[edi],al
  40a868:	in     eax,0x39
  40a86a:	push   ss
  40a86b:	mov    ds:0x54c4be9f,eax
  40a870:	adc    ch,0xd9
  40a873:	in     eax,dx
  40a874:	pop    ecx
  40a875:	cwde   
  40a876:	push   esi
  40a877:	or     eax,DWORD PTR cs:[esi]
  40a87a:	mov    esp,0xe6bec16d
  40a87f:	jmp    0x40a86b
  40a881:	int    0xd9
  40a883:	(bad)  
  40a884:	pop    edi
  40a885:	adc    BYTE PTR ds:0x61bd4207,0xb6
  40a88c:	btc    DWORD PTR [edi+esi*1-0x60],0xd
  40a892:	mov    eax,ds:0xc5568917
  40a897:	sbb    ebx,DWORD PTR [ebx]
  40a899:	mov    bl,BYTE PTR [edi+ebx*1+0x21c78d93]
  40a8a0:	jo     0x40a8c6
  40a8a2:	jmp    0x7cf5ae54
  40a8a7:	dec    ebp
  40a8a8:	xor    DWORD PTR [edx-0x4cf3fafd],edx
  40a8ae:	jbe    0x40a8ab
  40a8b0:	jo     0x40a8f8
  40a8b2:	add    BYTE PTR [ebp-0x4],ah
  40a8b5:	cmp    ch,BYTE PTR [ebx-0x74]
  40a8b8:	(bad)  
  40a8b9:	ds inc edx
  40a8bb:	ror    DWORD PTR [ebp-0x6a],0xb9
  40a8bf:	inc    ecx
  40a8c0:	into   
  40a8c1:	inc    ebx
  40a8c2:	xchg   edx,eax
  40a8c3:	shl    BYTE PTR [edi+0x56],cl
  40a8c6:	fdiv   DWORD PTR [eax+edx*1-0x77]
  40a8ca:	push   edi
  40a8cb:	outs   dx,DWORD PTR ds:[esi]
  40a8cc:	out    0xf0,eax
  40a8ce:	test   eax,0x9e811dfa
  40a8d3:	aaa    
  40a8d4:	mov    eax,0x14aec44d
  40a8d9:	stc    
  40a8da:	mov    BYTE PTR [edi-0x32],cl
  40a8dd:	jno    0x40a8b5
  40a8df:	sub    DWORD PTR [ebp+0x39],edi
  40a8e2:	call   0x5c2e:0x7fc88ef5
  40a8e9:	test   DWORD PTR es:[ebx-0x7d8e9d67],edi
  40a8f0:	daa    
  40a8f1:	jge    0x40a937
  40a8f3:	push   ebx
  40a8f4:	xor    eax,DWORD PTR [edx+0x1f]
  40a8f7:	jge    0x40a961
  40a8f9:	push   ebx
  40a8fa:	lods   al,BYTE PTR ds:[esi]
  40a8fb:	test   BYTE PTR [edx-0x1e],cl
  40a8fe:	leave  
  40a8ff:	xchg   esp,eax
  40a900:	shr    esi,cl
  40a902:	mov    WORD PTR [edi],gs
  40a904:	inc    ebp
  40a905:	ds push ds
  40a907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a908:	jge    0x40a8cd
  40a90a:	sub    al,0xf9
  40a90c:	cmp    BYTE PTR ds:0xeb82b1dd,dh
  40a912:	ins    DWORD PTR es:[edi],dx
  40a913:	or     DWORD PTR [ecx+esi*1],esp
  40a916:	jnp    0x40a8fc
  40a918:	(bad)  
  40a919:	fst    QWORD PTR [ecx+0x62d062f7]
  40a91f:	cdq    
  40a920:	jne    0x40a99b
  40a922:	and    ch,BYTE PTR es:[esp+ebx*4]
  40a926:	mov    al,ds:0x301c8799
  40a92b:	in     eax,dx
  40a92c:	push   ebp
  40a92d:	cmp    eax,0x4bed1284
  40a932:	test   DWORD PTR [ebp-0x65],esi
  40a935:	cld    
  40a936:	(bad)
  40a93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a93b:	dec    ebp
  40a93c:	cmc    
  40a93d:	xor    DWORD PTR [ebp+ebp*2+0x60d20e24],esp
  40a944:	repnz (bad) 
  40a946:	cmc    
  40a947:	add    edi,DWORD PTR [ebp-0x318a6d33]
  40a94d:	push   ax
  40a94f:	in     eax,0x9c
  40a951:	xchg   edi,eax
  40a952:	and    al,BYTE PTR [esi+0x22]
  40a955:	int    0x4f
  40a957:	clc    
  40a958:	in     al,dx
  40a959:	sbb    BYTE PTR [eax-0x4ca49dcc],0x37
  40a960:	adc    eax,0x788dcc74
  40a965:	pop    ss
  40a966:	dec    ebp
  40a967:	sub    ebp,ebx
  40a969:	ror    ecx,1
  40a96b:	stos   WORD PTR es:[edi],ax
  40a96d:	pop    ds
  40a96e:	add    DWORD PTR [ebp-0x3b],esi
  40a971:	ins    BYTE PTR es:[edi],dx
  40a972:	push   eax
  40a973:	test   al,0xe4
  40a975:	cdq    
  40a976:	nop
  40a977:	cmp    edi,DWORD PTR [esi]
  40a979:	or     ebx,ecx
  40a97b:	mov    al,ds:0x1f8cfd2b
  40a980:	inc    ebx
  40a981:	cmp    dl,dh
  40a983:	sahf   
  40a984:	adc    cl,BYTE PTR [ebp+0x44305c79]
  40a98a:	cmp    ch,BYTE PTR ds:0x6d7b7bb
  40a990:	mov    edx,0x44d6b533
  40a995:	fisttp QWORD PTR [edx+0x45]
  40a998:	cmp    BYTE PTR [eax],0x3c
  40a99b:	jb     0x40a99d
  40a99d:	in     eax,0x9f
  40a99f:	dec    ecx
  40a9a0:	or     al,0x6b
  40a9a2:	adc    eax,0x64435966
  40a9a7:	ret    
  40a9a8:	mov    ecx,0x415fa151
  40a9ad:	and    eax,eax
  40a9af:	int    0x74
  40a9b1:	and    cl,al
  40a9b3:	add    eax,0x41127e31
  40a9b8:	inc    ecx
  40a9b9:	mov    bh,0xf5
  40a9bb:	fs test eax,0x3cd3070
  40a9c1:	scas   eax,DWORD PTR es:[edi]
  40a9c2:	xor    ecx,edx
  40a9c4:	mov    cl,0xfa
  40a9c6:	les    edi,FWORD PTR [ebx+edx*2]
  40a9c9:	push   es
  40a9ca:	pop    esp
  40a9cb:	adc    bh,bl
  40a9cd:	sub    BYTE PTR [ebx],0x39
  40a9d0:	ret    
  40a9d1:	sbb    DWORD PTR [ebx-0x74],ecx
  40a9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d5:	fisttp DWORD PTR [ebp+ecx*8+0x3b]
  40a9d9:	xor    eax,0xa9b2c800
  40a9de:	mov    edx,0x610fe024
  40a9e3:	pop    edx
  40a9e4:	les    ebp,FWORD PTR [ebp+eiz*2+0x10538575]
  40a9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9ec:	jnp    0x40aa5f
  40a9ee:	cmp    DWORD PTR [ebp+0x47],eax
  40a9f1:	inc    ecx
  40a9f2:	into   
  40a9f3:	call   0x5f6:0x33080e3d
  40a9fa:	call   0x5cf7d830
  40a9ff:	imul   DWORD PTR [edi+eiz*2+0xc79c7ff]
  40aa06:	sbb    dl,cl
  40aa08:	scas   al,BYTE PTR es:[edi]
  40aa09:	jns    0x40a9ec
  40aa0b:	call   0x88d6fcb7
  40aa10:	xchg   eax,edx
  40aa12:	pop    eax
  40aa13:	(bad)  
  40aa15:	cdq    
  40aa16:	dec    esp
  40aa17:	pusha  
  40aa18:	enter  0x2d31,0x9b
  40aa1c:	int3   
  40aa1d:	ja     0x40a9f5
  40aa1f:	jno    0x40aa6d
  40aa21:	sbb    edi,DWORD PTR [ecx-0x61]
  40aa24:	stos   BYTE PTR es:[edi],al
  40aa25:	(bad)  
  40aa26:	rol    BYTE PTR [ecx],1
  40aa28:	add    bh,BYTE PTR [edx+0x27635b39]
  40aa2e:	(bad)  
  40aa2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa30:	pop    esp
  40aa31:	mov    eax,0xfeb5dec
  40aa36:	nop
  40aa37:	ret    0x5833
  40aa3a:	call   DWORD PTR [ebx-0x1e23785d]
  40aa40:	daa    
  40aa41:	scas   eax,DWORD PTR es:[edi]
  40aa42:	mov    DWORD PTR [ebp-0x1174f87c],ebp
  40aa48:	cmp    DWORD PTR [edx],ecx
  40aa4a:	cmc    
  40aa4b:	das    
  40aa4c:	clc    
  40aa4d:	mov    esi,0xca9182d0
  40aa52:	push   ss
  40aa53:	repz xchg ebp,eax
  40aa55:	and    DWORD PTR [esi],0xbfdc2a27
  40aa5b:	repnz xor DWORD PTR [ecx-0x2eb0cd6e],esi
  40aa62:	pop    ecx
  40aa63:	jmp    0x40aaa7
  40aa65:	jge    0x40aa36
  40aa67:	or     ebx,DWORD PTR [esi]
  40aa69:	gs clc 
  40aa6b:	and    ch,BYTE PTR [edx-0x10]
  40aa6e:	shl    DWORD PTR [edi-0x80],cl
  40aa71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa72:	mov    ebp,0x40acc5e6
  40aa77:	inc    eax
  40aa78:	push   ebp
  40aa79:	mov    al,0x84
  40aa7b:	scas   al,BYTE PTR es:[edi]
  40aa7c:	imul   ecx,eax,0xffffff93
  40aa7f:	outs   dx,BYTE PTR ds:[esi]
  40aa80:	les    esp,FWORD PTR [ecx-0x40c22734]
  40aa86:	ds xchg edx,eax
  40aa88:	cmp    eax,0xffa81fb1
  40aa8d:	cmp    edi,DWORD PTR [ebx+0x1a5a3943]
  40aa93:	fmul   DWORD PTR [esi]
  40aa95:	push   0x904078b6
  40aa9a:	lahf   
  40aa9b:	and    dh,cl
  40aa9d:	popa   
  40aa9e:	test   DWORD PTR [edi-0x2c],0x3c8aa1e2
  40aaa5:	cdq    
  40aaa6:	jl     0x40aaf5
  40aaa8:	lods   eax,DWORD PTR ds:[esi]
  40aaa9:	push   eax
  40aaaa:	cmc    
  40aaab:	dec    eax
  40aaac:	dec    ecx
  40aaad:	iret   
  40aaae:	je     0x40ab0e
  40aab0:	jg     0x40aaeb
  40aab2:	jae    0x40aa89
  40aab4:	hlt    
  40aab5:	ret    
  40aab6:	inc    eax
  40aab7:	loop   0x40aaf9
  40aab9:	call   0xd5226aec
  40aabe:	mov    ?,WORD PTR [ebp+0x30324b59]
  40aac4:	pop    edx
  40aac5:	(bad)  
  40aac6:	rol    DWORD PTR [edi-0x71],cl
  40aac9:	jp     0x40aaea
  40aacb:	stos   DWORD PTR es:[edi],eax
  40aacc:	or     ebx,DWORD PTR [eax-0x42]
  40aacf:	fsubr  QWORD PTR ds:0x9658ecb5
  40aad5:	sti    
  40aad6:	or     eax,DWORD PTR [eax+ecx*1+0x1f805788]
  40aadd:	inc    edi
  40aade:	xlat   BYTE PTR ds:[ebx]
  40aadf:	sbb    esi,DWORD PTR [ecx]
  40aae1:	ret    0x915c
  40aae4:	fs aaa 
  40aae6:	es js  0x40aa7d
  40aae9:	sbb    al,0xa7
  40aaeb:	dec    edi
  40aaec:	xor    DWORD PTR [edi-0x49],edx
  40aaef:	mov    eax,ds:0x97143ec1
  40aaf4:	imul   ecx,DWORD PTR [edx+0x5d039736],0x14b895a3
  40aafe:	ja     0x40ab77
  40ab00:	loop   0x40ab22
  40ab02:	cli    
  40ab03:	pop    ds
  40ab04:	test   DWORD PTR [edi],edx
  40ab06:	mov    esi,0x1d94a3f9
  40ab0b:	jb     0x40aabb
  40ab0d:	(bad)  [eax+0x50]
  40ab10:	inc    ebx
  40ab11:	mov    edi,0xacbe8f56
  40ab16:	mov    fs,edx
  40ab18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab19:	mov    ds:0xe7e16be4,eax
  40ab1e:	pop    edi
  40ab1f:	jecxz  0x40aadb
  40ab21:	mov    al,ds:0xd86d1a03
  40ab26:	mov    al,0x41
  40ab28:	bound  edi,QWORD PTR [ecx+0x432ceab8]
  40ab2e:	int3   
  40ab2f:	ret    
  40ab30:	rcl    DWORD PTR [ecx-0x3f62f5a3],cl
  40ab36:	and    eax,0xd4a0dd21
  40ab3b:	mov    ebx,0xa82f34b0
  40ab40:	add    eax,0xf3542aa0
  40ab45:	jb     0x3945a246
  40ab4b:	add    bh,BYTE PTR [ebp-0x37]
  40ab4e:	aad    0x56
  40ab50:	jge    0x40ab4e
  40ab52:	pop    ds
  40ab53:	jne    0x40ab8c
  40ab55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab56:	ret    
  40ab57:	(bad)  
  40ab59:	shr    BYTE PTR ds:0xce093cfd,0x5
  40ab60:	cmp    al,0x73
  40ab62:	imul   esp,DWORD PTR [edx-0x48],0xd77983c0
  40ab69:	sti    
  40ab6a:	call   0xdf1f:0xe35afe77
  40ab71:	mov    al,es:0xa5d78eb7
  40ab77:	fidivr DWORD PTR [ecx+ebp*4-0x47]
  40ab7b:	dec    ebp
  40ab7c:	dec    ecx
  40ab7d:	push   edx
  40ab7e:	mov    edx,0xd26eea36
  40ab83:	jae    0x40ab54
  40ab85:	cmp    eax,0x90673d23
  40ab8a:	out    dx,al
  40ab8b:	add    DWORD PTR [ebx-0x5b3f3aae],0xc4ce5f58
  40ab95:	retf   0xafd
  40ab98:	and    al,0x46
  40ab9a:	addr16 cmp eax,0xf15a5c6a
  40aba0:	jb     0x40ab54
  40aba2:	mov    bh,0xd7
  40aba4:	fidivr WORD PTR [ecx+0x66]
  40aba8:	out    0x8,al
  40abaa:	(bad)  
  40abab:	pandn  mm7,mm5
  40abae:	jge    0x40ab50
  40abb0:	or     al,0xf3
  40abb2:	pop    ebx
  40abb3:	ret    
  40abb4:	sar    BYTE PTR [ecx+0x6fc74140],0xed
  40abbb:	add    BYTE PTR [ebp-0x57],0xe3
  40abbf:	or     bh,BYTE PTR [ebp+0x6cbc23ac]
  40abc5:	pop    ebx
  40abc6:	out    dx,al
  40abc7:	fstp   DWORD PTR [edi]
  40abc9:	inc    ebp
  40abca:	mov    esi,0xf8a0e10f
  40abcf:	mov    dl,BYTE PTR ds:0xdf54d0d
  40abd5:	mov    ah,0x8a
  40abd7:	jle    0x40ac54
  40abd9:	aaa    
  40abda:	jge    0x40ac3f
  40abdc:	and    ebx,DWORD PTR gs:[ebx-0x4a]
  40abe0:	inc    ebp
  40abe1:	push   ebx
  40abe2:	pop    ecx
  40abe3:	enter  0x3348,0x67
  40abe7:	lahf   
  40abe8:	addr16 xchg esi,eax
  40abea:	ins    BYTE PTR es:[edi],dx
  40abeb:	rcr    BYTE PTR [edx],1
  40abed:	fisttp QWORD PTR [esi]
  40abef:	icebp  
  40abf0:	cli    
  40abf1:	jbe    0x40ac50
  40abf3:	rol    BYTE PTR [eax+0x60ab76fb],1
  40abf9:	inc    edi
  40abfa:	scas   eax,DWORD PTR es:[edi]
  40abfb:	dec    edx
  40abfc:	jnp    0x40ac0a
  40abfe:	cmc    
  40abff:	adc    BYTE PTR [esi+0x54],0xbf
  40ac03:	(bad)  
  40ac04:	(bad)  
  40ac05:	fist   WORD PTR ds:0x3c88ff65
  40ac0b:	and    esi,edx
  40ac0d:	and    al,0xfb
  40ac0f:	inc    esi
  40ac10:	xor    eax,0xc32dfe75
  40ac15:	xor    eax,0x3b6f168e
  40ac1a:	(bad)  
  40ac1b:	jbe    0x40ac4d
  40ac1d:	push   ebx
  40ac1e:	cwde   
  40ac1f:	repz jmp 0x40ac90
  40ac22:	inc    edx
  40ac23:	into   
  40ac24:	inc    ax
  40ac26:	test   DWORD PTR [eax-0x9],esp
  40ac29:	je     0x40abe7
  40ac2b:	rcl    BYTE PTR [edx-0x7c],cl
  40ac2e:	(bad)  
  40ac2f:	out    0xc5,eax
  40ac31:	mov    ecx,0x750189fe
  40ac36:	into   
  40ac37:	inc    ebx
  40ac38:	xchg   BYTE PTR [esi+esi*8-0x65],dh
  40ac3c:	std    
  40ac3d:	inc    eax
  40ac3e:	push   ds
  40ac3f:	mov    dl,0x7d
  40ac41:	mov    ebp,0x1581d6a4
  40ac46:	mov    edi,0x908fdeeb
  40ac4b:	xor    esp,DWORD PTR [ecx+ebx*1-0xd]
  40ac4f:	add    eax,0x4c69f109
  40ac54:	push   edi
  40ac55:	hlt    
  40ac56:	lea    esi,[edx]
  40ac58:	pop    edi
  40ac59:	not    eax
  40ac5b:	sub    DWORD PTR [esi-0x1f01147],ebx
  40ac61:	leave  
  40ac62:	inc    esp
  40ac63:	and    al,0xb4
  40ac65:	ja     0x40ac32
  40ac67:	sbb    eax,0x476d74eb
  40ac6c:	jmp    0xff82f2c0
  40ac71:	dec    edi
  40ac72:	inc    esi
  40ac73:	inc    edi
  40ac74:	sti    
  40ac75:	cmp    eax,0xdc2ef376
  40ac7a:	dec    edi
  40ac7b:	(bad)  
  40ac7c:	(bad)  
  40ac7d:	daa    
  40ac7e:	mov    bh,0xde
  40ac80:	fsubr  st(3),st
  40ac82:	sub    cl,BYTE PTR [ecx]
  40ac84:	int    0xa5
  40ac86:	push   ss
  40ac87:	cmc    
  40ac88:	dec    ecx
  40ac89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac8a:	sahf   
  40ac8b:	dec    ebx
  40ac8c:	fdiv   st(5),st
  40ac8e:	sbb    eax,0x2e328079
  40ac93:	mov    edx,0xb9bcaa5c
  40ac98:	stc    
  40ac99:	shl    DWORD PTR [eax+ebx*2+0x696bfbc],cl
  40aca0:	jp     0x40ac47
  40aca2:	xor    eax,0xc8cbcfa5
  40aca7:	jb     0x40ac39
  40aca9:	jmp    0x3097:0xd33d9844
  40acb0:	retf   0xe079
  40acb3:	ud2    
  40acb5:	dec    eax
  40acb6:	outs   dx,BYTE PTR ds:[esi]
  40acb7:	(bad)  
  40acb8:	xchg   edx,eax
  40acb9:	not    edx
  40acbb:	adc    BYTE PTR [ebp+0x63f9b2a0],cl
  40acc1:	cmp    BYTE PTR cs:[esi],bl
  40acc4:	fdiv   QWORD PTR [ecx]
  40acc6:	sbb    al,0x2f
  40acc8:	sar    BYTE PTR [edi+0x6c],0x5e
  40accc:	push   edi
  40accd:	lock mov eax,ds:0xced04ace
  40acd3:	mov    dh,0x7b
  40acd5:	and    DWORD PTR [esi+ebp*2+0x3979b54c],edi
  40acdc:	jo     0xb7d99035
  40ace2:	push   ebx
  40ace3:	fstp   DWORD PTR [ebp+0x19ff1b29]
  40ace9:	lods   eax,DWORD PTR ds:[esi]
  40acea:	mov    ch,0x32
  40acec:	and    BYTE PTR [ebp+ebx*1+0x31],0x55
  40acf1:	and    bl,BYTE PTR ds:0x7939b22c
  40acf7:	stc    
  40acf8:	pop    ebp
  40acf9:	call   0x6ff7:0xb63cf164
  40ad00:	lods   eax,DWORD PTR ds:[esi]
  40ad01:	mov    al,ds:0xa9010308
  40ad06:	test   al,0x77
  40ad08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad09:	mov    al,0x1a
  40ad0b:	push   edi
  40ad0c:	inc    ebp
  40ad0d:	sub    eax,0x26e3abef
  40ad12:	mov    ebx,0x607f3909
  40ad17:	sub    BYTE PTR [eax-0x7165ba62],al
  40ad1d:	mov    ebp,0x894367c5
  40ad22:	lods   al,BYTE PTR ds:[esi]
  40ad23:	adc    al,0xad
  40ad25:	sar    DWORD PTR [eax-0x4d7c51c5],0xc0
  40ad2c:	hlt    
  40ad2d:	mov    WORD PTR [edx-0x40bd92bd],es
  40ad33:	adc    al,0xf6
  40ad35:	pushf  
  40ad36:	outs   dx,DWORD PTR ds:[esi]
  40ad37:	cli    
  40ad38:	mov    ds:0x8e4b3334,eax
  40ad3d:	xchg   edx,eax
  40ad3e:	pop    edi
  40ad3f:	push   ds
  40ad40:	push   ecx
  40ad41:	bound  edx,QWORD PTR [eax]
  40ad43:	das    
  40ad44:	push   0x3f
  40ad46:	mov    ebx,0x6d357c5a
  40ad4b:	xor    ch,BYTE PTR [esi-0x54]
  40ad4e:	iret   
  40ad4f:	jmp    0xe89e:0x9fef1504
  40ad56:	mov    bh,0xb7
  40ad58:	add    eax,0xe8c4845b
  40ad5d:	pop    ss
  40ad5e:	enter  0xb7a8,0x49
  40ad62:	das    
  40ad63:	sbb    edi,esp
  40ad65:	mov    bl,0xfa
  40ad67:	inc    ecx
  40ad68:	fcomip st,st(2)
  40ad6a:	mov    edx,0x34f5cce4
  40ad6f:	mov    edx,cs
  40ad71:	pop    esi
  40ad72:	lods   eax,DWORD PTR ds:[esi]
  40ad73:	push   0x5a
  40ad75:	lock imul edx,esp,0x41
  40ad79:	or     DWORD PTR ds:0x73784a95,0xb9297082
  40ad83:	stc    
  40ad84:	mov    bl,0x2a
  40ad86:	push   ebx
  40ad87:	cdq    
  40ad88:	lock and eax,0x4aa5fade
  40ad8e:	pop    es
  40ad8f:	pop    ecx
  40ad90:	je     0x40ad60
  40ad92:	lods   al,BYTE PTR ds:[esi]
  40ad93:	das    
  40ad94:	sub    ebx,0xffffffe7
  40ad97:	pop    ds
  40ad98:	dec    edi
  40ad99:	data16 ins BYTE PTR es:[edi],dx
  40ad9b:	sbb    DWORD PTR [ebp-0x63],ebp
  40ad9e:	inc    ebx
  40ad9f:	jae    0x40ada1
  40ada1:	je     0x40adfb
  40ada3:	lds    ebp,FWORD PTR [edx-0x28231fdb]
  40ada9:	push   eax
  40adaa:	loope  0x40ad9f
  40adac:	xchg   edi,eax
  40adad:	xchg   esi,eax
  40adae:	in     al,dx
  40adaf:	xchg   ebx,eax
  40adb0:	dec    ecx
  40adb1:	test   DWORD PTR ds:0x93e275e9,0xc39a78e
  40adbb:	das    
  40adbc:	jle    0x40ada2
  40adbe:	push   ebx
  40adbf:	push   edi
  40adc0:	stc    
  40adc1:	jmp    0x2aa5b53f
  40adc6:	out    dx,eax
  40adc7:	int3   
  40adc8:	inc    ebp
  40adc9:	scas   eax,DWORD PTR es:[edi]
  40adca:	lds    esp,FWORD PTR [ecx]
  40adcc:	jl     0x40ade3
  40adce:	imul   esi,DWORD PTR [ebx-0xb32b92c],0x1b870c3e
  40add8:	test   eax,0xa04cd935
  40addd:	mov    ebx,0xd7359dd0
  40ade2:	adc    BYTE PTR [ebx-0x71],dl
  40ade5:	loope  0x40ae56
  40ade7:	clc    
  40ade8:	loope  0x40adc7
  40adea:	dec    eax
  40adeb:	dec    esp
  40adec:	mov    dh,0x70
  40adee:	les    esi,FWORD PTR [ebx+0x4f5a4f6f]
  40adf4:	inc    esp
  40adf5:	retf   
  40adf6:	xor    ah,bh
  40adf8:	out    dx,al
  40adf9:	nop
  40adfa:	push   ebp
  40adfb:	cmp    eax,0xcf696435
  40ae00:	mov    esi,0xf9bdf8e7
  40ae05:	lds    ecx,FWORD PTR [edi-0x38]
  40ae08:	add    esp,DWORD PTR [edi]
  40ae0a:	jge    0x40ae60
  40ae0c:	jg     0x40ae5b
  40ae0e:	mov    ds:0x3b686e9a,eax
  40ae13:	jns    0x40addd
  40ae15:	sub    ebx,DWORD PTR [ebx+0x4d]
  40ae18:	mov    al,0x9f
  40ae1a:	push   ebx
  40ae1b:	cmp    eax,0x9ab6a61d
  40ae20:	pop    esi
  40ae21:	pop    esi
  40ae22:	cmc    
  40ae23:	xchg   edi,eax
  40ae24:	mov    cl,0xac
  40ae26:	inc    edx
  40ae27:	adc    al,0xea
  40ae29:	js     0x40adfd
  40ae2b:	xchg   BYTE PTR [ebx],cl
  40ae2d:	and    eax,0xe7f52915
  40ae32:	xchg   ebx,eax
  40ae33:	fistp  QWORD PTR [ecx+eax*4]
  40ae36:	sahf   
  40ae37:	nop
  40ae38:	sub    BYTE PTR [ecx],0x9
  40ae3b:	mov    ah,0xae
  40ae3d:	mov    ebx,0x877d7d73
  40ae42:	(bad)  
  40ae43:	mov    al,dh
  40ae45:	sbb    al,0x62
  40ae47:	lock pop esi
  40ae49:	seto   BYTE PTR [ebx*2-0x4db06bd2]
  40ae51:	add    dh,dh
  40ae53:	mov    al,ds:0x425c612e
  40ae59:	stos   DWORD PTR es:[edi],eax
  40ae5a:	ret    0x3b5c
  40ae5d:	pop    edx
  40ae5e:	mov    BYTE PTR [esi-0x44],dh
  40ae61:	jnp    0x40ae04
  40ae63:	xor    DWORD PTR [esi-0x3b70f5a4],esi
  40ae69:	addr16 (bad) 
  40ae6b:	sti    
  40ae6c:	fimul  DWORD PTR [edx-0x7188385b]
  40ae72:	out    dx,eax
  40ae73:	sbb    edx,edi
  40ae75:	scas   eax,DWORD PTR es:[edi]
  40ae76:	fsubr  DWORD PTR [edi+0x53]
  40ae79:	push   0x509383f0
  40ae7e:	loopne 0x40aeab
  40ae80:	lods   eax,DWORD PTR ds:[esi]
  40ae81:	cmp    eax,0x83209c76
  40ae86:	nop
  40ae87:	pop    ebp
  40ae88:	xchg   ebx,eax
  40ae89:	sbb    al,BYTE PTR ds:0x5ca81d31
  40ae8f:	adc    DWORD PTR [eax+ecx*2+0x762569f3],eax
  40ae96:	fucom  st(3)
  40ae98:	sbb    edi,ebx
  40ae9a:	inc    edi
  40ae9b:	and    ecx,esi
  40ae9d:	ret    
  40ae9e:	std    
  40ae9f:	ret    0xf8f1
  40aea2:	in     eax,dx
  40aea3:	scas   al,BYTE PTR es:[edi]
  40aea4:	or     eax,0xdc06f9d2
  40aea9:	xchg   ecx,eax
  40aeaa:	sti    
  40aeab:	das    
  40aeac:	out    dx,al
  40aead:	inc    edx
  40aeae:	mov    cl,0x84
  40aeb0:	fs imul edx,ebx,0xffffffeb
  40aeb4:	adc    dh,bl
  40aeb6:	sbb    edi,ebx
  40aeb8:	fcom   QWORD PTR [edi-0x3e]
  40aebb:	cmp    al,0xf
  40aebd:	mov    ss,WORD PTR [ebx-0x2c]
  40aec0:	push   ebp
  40aec1:	pop    edi
  40aec2:	popf   
  40aec3:	imul   ebx,DWORD PTR [esi+0x20],0xa4c14e70
  40aeca:	fst    DWORD PTR [ecx+0x227651fa]
  40aed0:	sahf   
  40aed1:	shr    DWORD PTR [edi+0x5734111a],cl
  40aed7:	add    BYTE PTR ds:0x1eb61f58,0xfd
  40aede:	inc    edx
  40aedf:	xchg   edx,eax
  40aee0:	es ins DWORD PTR es:[edi],dx
  40aee2:	enter  0xb256,0x55
  40aee6:	add    ebp,edi
  40aee8:	imul   ecx,DWORD PTR [edx+0x7febf0b8],0x66ab02e6
  40aef2:	or     cl,BYTE PTR [esp+ebp*4-0x4b]
  40aef6:	ja     0x40aeaa
  40aef8:	shl    esi,0xa0
  40aefb:	test   BYTE PTR [esp+eiz*8],0xcb
  40aeff:	cmp    BYTE PTR [esi],bl
  40af01:	icebp  
  40af02:	int    0x1a
  40af04:	xchg   DWORD PTR [ecx+0x720e00e4],esp
  40af0a:	push   esp
  40af0b:	sbb    eax,0x3f1e6c4a
  40af10:	ss push edx
  40af12:	fsubr  DWORD PTR [ecx]
  40af14:	aad    0xb8
  40af16:	loop   0x40af19
  40af18:	bound  ecx,QWORD PTR [edi]
  40af1a:	arpl   WORD PTR [edi+0x1debd9ad],si
  40af20:	xchg   bl,al
  40af22:	pop    ss
  40af23:	je     0x40af4e
  40af25:	or     DWORD PTR [edi],edx
  40af27:	repz shr cl,cl
  40af2a:	jnp    0x40aec1
  40af2c:	imul   ebx,DWORD PTR [eax-0x66db2de8],0xffffffc2
  40af33:	and    eax,0x2160bc79
  40af38:	(bad)  [ebx]
  40af3a:	jp     0x40af45
  40af3c:	neg    DWORD PTR [ecx+0x77d8648e]
  40af42:	and    ebx,eax
  40af44:	and    BYTE PTR ds:0x810e4397,dl
  40af4a:	mov    al,ds:0x1abbaa21
  40af4f:	test   DWORD PTR [ebp+0x3a],ebp
  40af52:	xchg   ebx,eax
  40af53:	in     al,0x28
  40af55:	sub    al,0x60
  40af57:	push   ebp
  40af58:	out    dx,al
  40af59:	mov    WORD PTR [eax+0x624c0750],ds
  40af5f:	arpl   WORD PTR [ebx],bx
  40af61:	dec    ecx
  40af62:	into   
  40af63:	cmp    BYTE PTR [edx-0x73],0x33
  40af67:	fmul   QWORD PTR [ecx-0x1ce20361]
  40af6d:	out    0x37,al
  40af6f:	test   DWORD PTR [esi+0x1bf0ccad],edx
  40af75:	jnp    0x40af43
  40af77:	fucomp st(1)
  40af79:	mov    esp,0x4eee9ced
  40af7e:	inc    esi
  40af7f:	shl    DWORD PTR [ebx+0x5e],cl
  40af82:	(bad)  
  40af83:	into   
  40af84:	or     al,0x58
  40af86:	(bad)  [eax+ecx*2-0x2d1e333c]
  40af8d:	int3   
  40af8e:	paddw  mm5,QWORD PTR [ebp+ebp*8+0x2070e1ab]
  40af96:	inc    esi
  40af97:	ret    0x3f1c
  40af9a:	xchg   ebp,eax
  40af9b:	ins    DWORD PTR es:[edi],dx
  40af9c:	test   edx,esp
  40af9e:	or     dl,BYTE PTR [ecx+ebp*1-0x1482fc4d]
  40afa5:	or     ecx,DWORD PTR [edi]
  40afa7:	lea    esi,[ebp+0x34]
  40afaa:	call   0xef2696a9
  40afaf:	xchg   edi,eax
  40afb0:	std    
  40afb1:	popa   
  40afb2:	loopne 0x40af5b
  40afb4:	jle    0x40afd0
  40afb6:	pop    es
  40afb7:	(bad)  
  40afb9:	int    0x97
  40afbb:	repnz or ah,BYTE PTR [esi+eax*8+0xa]
  40afc0:	mov    eax,ds:0xc7d72eb9
  40afc5:	pop    edx
  40afc6:	inc    edi
  40afc7:	and    dh,BYTE PTR [esi]
  40afc9:	or     bl,BYTE PTR [edx+0x44bc4b20]
  40afcf:	outs   dx,BYTE PTR ds:[esi]
  40afd0:	stos   DWORD PTR es:[edi],eax
  40afd1:	jp     0x40b017
  40afd3:	pop    ecx
  40afd4:	mov    esp,0xaf3e1617
  40afd9:	(bad)  
  40afda:	or     al,0xb2
  40afdc:	cmp    eax,0x73470de1
  40afe1:	xor    BYTE PTR [edi],bl
  40afe3:	inc    ebp
  40afe4:	je     0x40b02b
  40afe6:	in     eax,dx
  40afe7:	pop    ebp
  40afe8:	xchg   ecx,eax
  40afe9:	sbb    ch,ah
  40afeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afec:	pop    ecx
  40afed:	ins    DWORD PTR es:[edi],dx
  40afee:	push   ebx
  40afef:	and    dl,al
  40aff1:	push   ds
  40aff2:	xchg   esi,eax
  40aff3:	lock fmul DWORD PTR [ebp-0x33b0fe1c]
  40affa:	dec    esp
  40affb:	xchg   esp,eax
  40affc:	jnp    0x40af95
  40affe:	shl    BYTE PTR [eax],0x1
  40b001:	inc    esi
  40b002:	push   esp
  40b003:	inc    ecx
  40b004:	and    eax,0x6bad95c9
  40b009:	xchg   esi,eax
  40b00a:	cmp    DWORD PTR [ecx],0x3b
  40b00d:	fstp   QWORD PTR [ebx-0x689f6262]
  40b013:	dec    edi
  40b014:	push   ss
  40b015:	push   edx
  40b016:	and    ecx,ebp
  40b018:	push   ebx
  40b019:	outs   dx,BYTE PTR ds:[esi]
  40b01a:	mov    ecx,DWORD PTR [eax+eax*8]
  40b01d:	add    al,BYTE PTR [edx+edx*1-0x1d223f5c]
  40b024:	push   edi
  40b025:	xchg   ecx,eax
  40b026:	dec    ecx
  40b027:	dec    ebp
  40b028:	call   0xa3bdd49e
  40b02d:	mov    ebp,0x42cc40a6
  40b032:	inc    eax
  40b033:	iret   
  40b034:	mov    ecx,ecx
  40b036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b037:	in     al,0x27
  40b039:	test   BYTE PTR [edi-0x29fbc06b],al
  40b03f:	add    DWORD PTR [edx-0x7d],edi
  40b042:	popf   
  40b043:	xor    DWORD PTR [esi+0x3507a5ec],esi
  40b049:	scas   eax,DWORD PTR es:[edi]
  40b04a:	push   eax
  40b04b:	or     edi,DWORD PTR [esi+0x76c80293]
  40b051:	cld    
  40b052:	idiv   cl
  40b054:	in     al,0xc8
  40b056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b057:	sbb    dl,BYTE PTR [ecx+0x6f7f6dc8]
  40b05d:	adc    BYTE PTR [edi-0x3c94eee5],ch
  40b063:	inc    edi
  40b064:	mul    BYTE PTR [ecx+edx*2+0x9]
  40b068:	push   es
  40b069:	lea    esp,[edi]
  40b06b:	add    eax,0x33361a05
  40b070:	dec    esp
  40b071:	pop    edi
  40b072:	fstp   QWORD PTR [ecx-0x74]
  40b075:	dec    edx
  40b076:	push   ecx
  40b077:	js     0x40b0e2
  40b079:	(bad)  [esp+edi*8]
  40b07c:	jb     0x40b0a5
  40b07e:	mov    DWORD PTR [ebx+0xa44c255],edi
  40b084:	or     esi,DWORD PTR [eax+0x0]
  40b087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b088:	popf   
  40b089:	imul   ebp,edx,0x2833feea
  40b08f:	ror    BYTE PTR [ebx-0xdd4686d],1
  40b095:	push   DWORD PTR [eax+eiz*4]
  40b098:	inc    ebp
  40b099:	xchg   ecx,eax
  40b09a:	ret    
  40b09b:	jae    0x40b09c
  40b09d:	sub    eax,0x7177cbf7
  40b0a2:	rcr    BYTE PTR [ecx-0x62],cl
  40b0a5:	iret   
  40b0a6:	in     al,0xb9
  40b0a8:	sbb    ah,dh
  40b0aa:	mov    ebx,0x98d16c15
  40b0af:	ins    BYTE PTR es:[edi],dx
  40b0b0:	adc    DWORD PTR [edi+0x69],esp
  40b0b3:	pop    ebp
  40b0b4:	test   eax,0x40f6a19a
  40b0b9:	fnsave [ebx]
  40b0bb:	inc    ebx
  40b0bc:	lock in al,0x54
  40b0bf:	(bad)  
  40b0c0:	arpl   di,cx
  40b0c2:	ret    
  40b0c3:	jnp    0x40b047
  40b0c5:	loop   0x40b079
  40b0c7:	sbb    al,0x36
  40b0c9:	in     eax,dx
  40b0ca:	and    dh,dh
  40b0cc:	test   BYTE PTR [ecx+0x71],ah
  40b0cf:	mov    bl,bh
  40b0d1:	add    ch,dh
  40b0d3:	dec    edx
  40b0d4:	in     eax,dx
  40b0d5:	xor    eax,0xfefaf152
  40b0da:	sbb    eax,0x4f6d2b8
  40b0df:	and    dh,BYTE PTR [esi]
  40b0e1:	hlt    
  40b0e2:	leave  
  40b0e3:	push   esp
  40b0e4:	test   al,0x65
  40b0e6:	fisttp QWORD PTR [edx]
  40b0e8:	outs   dx,BYTE PTR ds:[esi]
  40b0e9:	push   es
  40b0ea:	jl     0x40b0b3
  40b0ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0ed:	fs mov dl,0x94
  40b0f0:	push   ds
  40b0f1:	fdiv   DWORD PTR [edx]
  40b0f3:	xor    al,0x71
  40b0f5:	shl    BYTE PTR [eax+0xe],1
  40b0f8:	pop    ecx
  40b0f9:	jmp    0x85dd:0x28cd8c52
  40b100:	xchg   ebx,eax
  40b101:	in     eax,0x86
  40b103:	(bad)  
  40b104:	dec    edi
  40b105:	add    al,0x26
  40b107:	mov    eax,0xa252978e
  40b10c:	inc    ebp
  40b10d:	mov    eax,0x53577f56
  40b112:	sub    al,0xd3
  40b114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b115:	mov    BYTE PTR [esi],cl
  40b117:	inc    ebx
  40b118:	lds    edx,FWORD PTR es:[ecx-0x22d740d9]
  40b11f:	push   edx
  40b120:	and    eax,0xf213ec8e
  40b125:	cwde   
  40b126:	frstor [ebx+ecx*4+0x71]
  40b12a:	aad    0x78
  40b12c:	and    al,0xb4
  40b12e:	cmp    eax,0xfa6382aa
  40b133:	inc    esp
  40b134:	cs dec ecx
  40b136:	hlt    
  40b137:	jp     0x40b110
  40b139:	add    eax,0xb023bfc1
  40b13e:	inc    cl
  40b140:	sbb    BYTE PTR [ebx-0x38],al
  40b143:	inc    ebp
  40b144:	pop    es
  40b145:	jo     0x40b0db
  40b147:	repnz rcr BYTE PTR [ebp-0x68],cl
  40b14b:	pop    ecx
  40b14c:	std    
  40b14d:	xor    al,0xd4
  40b14f:	cdq    
  40b150:	inc    ah
  40b152:	mov    ds:0xfc4d4250,eax
  40b157:	inc    eax
  40b158:	mov    ecx,0xfb2c88ff
  40b15d:	imul   DWORD PTR [ecx]
  40b15f:	jbe    0x40b198
  40b161:	xchg   eax,eax
  40b163:	test   BYTE PTR [ebp+0x78],ch
  40b166:	test   dl,0x14
  40b169:	out    0x3b,al
  40b16b:	loopne 0x40b1c0
  40b16d:	mov    ecx,0x214c2fc1
  40b172:	push   edx
  40b173:	add    BYTE PTR [eax-0x3e76993e],bl
  40b179:	lock pop ebx
  40b17b:	enter  0x76fc,0x7e
  40b17f:	push   0x7d
  40b181:	adc    BYTE PTR [ebx+0x2508d7a1],bh
  40b187:	stos   BYTE PTR es:[edi],al
  40b188:	aaa    
  40b189:	pop    ecx
  40b18a:	iret   
  40b18b:	mov    ds:0x5b35d03c,eax
  40b190:	jp     0x40b1cd
  40b192:	call   0x5210:0xecdb46c3
  40b199:	sub    eax,0xfa1b5f4f
  40b19e:	push   cs
  40b19f:	sbb    eax,0x691e88f9
  40b1a4:	cmp    BYTE PTR [esi-0x75],dh
  40b1a7:	fsubr  QWORD PTR [esi+0x76]
  40b1aa:	pushf  
  40b1ab:	jmp    0x75923cf5
  40b1b0:	clc    
  40b1b1:	ret    
  40b1b2:	xor    dl,dh
  40b1b4:	imul   esi,DWORD PTR [edi+0x5f361fe],0x331596d0
  40b1be:	push   cs
  40b1bf:	jmp    0x175b6c8
  40b1c4:	stc    
  40b1c5:	and    ah,BYTE PTR [esi-0x62190f50]
  40b1cb:	push   ds
  40b1cc:	push   es
  40b1cd:	(bad)  
  40b1ce:	push   edx
  40b1cf:	dec    ecx
  40b1d0:	mov    dh,0x2
  40b1d2:	test   eax,0x2809fb05
  40b1d7:	js     0x40b201
  40b1d9:	fcmovu st,st(2)
  40b1db:	mov    BYTE PTR [esi+0x27],dh
  40b1de:	add    DWORD PTR [ebx-0x68],eax
  40b1e1:	sbb    BYTE PTR [edx],0xda
  40b1e4:	push   esp
  40b1e5:	cmp    al,0x61
  40b1e7:	dec    eax
  40b1e8:	ins    BYTE PTR es:[edi],dx
  40b1e9:	js     0x40b26a
  40b1eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1ec:	xchg   ecx,eax
  40b1ed:	bound  ebx,QWORD PTR [esi-0x2a62d100]
  40b1f3:	cdq    
  40b1f4:	push   0xf
  40b1f6:	test   BYTE PTR ds:0xeadcd3bd,ah
  40b1fc:	cli    
  40b1fd:	pop    esp
  40b1fe:	into   
  40b1ff:	popf   
  40b200:	or     ah,dl
  40b202:	fiadd  WORD PTR [eax-0x38]
  40b205:	pop    es
  40b206:	leave  
  40b207:	mov    bl,0xc0
  40b209:	aas    
  40b20a:	les    esi,FWORD PTR [ebp+0x3]
  40b20d:	push   esp
  40b20e:	xor    eax,0xa5b595bc
  40b213:	mov    ds:0x7c0398fa,eax
  40b218:	arpl   WORD PTR [ecx],bp
  40b21a:	jge    0x40b216
  40b21c:	add    DWORD PTR [esp+ebx*8+0x7efb7190],0x23
  40b224:	js     0x40b1c2
  40b226:	dec    ebx
  40b227:	push   ds
  40b228:	cld    
  40b229:	adc    al,0x6c
  40b22b:	stc    
  40b22c:	xchg   ecx,eax
  40b22d:	mov    ebp,0x70f6e312
  40b232:	lea    eax,[ebp+0x40]
  40b235:	sti    
  40b236:	aas    
  40b237:	sahf   
  40b238:	fcom   QWORD PTR [eax-0x45299337]
  40b23e:	or     ch,BYTE PTR [edi+0x61d3437f]
  40b244:	mov    ch,0x8a
  40b246:	mov    esi,0x7f3ff775
  40b24b:	push   ebx
  40b24c:	inc    edx
  40b24d:	ja     0x40b22e
  40b24f:	mov    WORD PTR [ebx],gs
  40b251:	mov    al,ds:0xfbee26ef
  40b256:	mov    ds:0x67d3c611,al
  40b25b:	dec    esi
  40b25c:	add    DWORD PTR [ecx],edx
  40b25e:	xchg   esp,eax
  40b25f:	(bad)  [ecx]
  40b261:	adc    edx,DWORD PTR [edx+0x58]
  40b264:	jmp    0x40b2c9
  40b266:	enter  0xbc72,0x2f
  40b26a:	inc    edi
  40b26b:	pushf  
  40b26c:	xchg   DWORD PTR [ebp+eax*2+0x2810a696],esp
  40b273:	sub    ebx,DWORD PTR [edi-0x21]
  40b276:	es or  ax,ax
  40b27a:	jg     0x40b263
  40b27c:	jl     0x40b2ac
  40b27e:	call   0xf4dc:0x90a6c7db
  40b285:	pextrw ecx,(bad),0xc5
  40b287:	dec    ebx
  40b288:	fbstp  TBYTE PTR [ebp-0x60bee7d]
  40b28e:	jb     0x40b243
  40b290:	into   
  40b291:	jnp    0x40b2cf
  40b293:	test   DWORD PTR [esi+0x4a],eax
  40b296:	pushf  
  40b297:	add    al,BYTE PTR [eax+ebp*8+0x4e]
  40b29b:	aam    0xfc
  40b29d:	push   ebx
  40b29e:	imul   eax,DWORD PTR [edx+0x7a],0x5a
  40b2a2:	mov    bl,0xa7
  40b2a4:	mov    al,ds:0x12efeaf6
  40b2a9:	ret    
  40b2aa:	out    dx,al
  40b2ab:	hlt    
  40b2ac:	mov    ah,0xfb
  40b2ae:	adc    al,0x7f
  40b2b0:	rol    DWORD PTR [ebx],cl
  40b2b2:	int3   
  40b2b3:	jmp    0x40b287
  40b2b5:	js     0x40b249
  40b2b7:	jne    0x40b23d
  40b2b9:	repz lock dec ebp
  40b2bc:	and    BYTE PTR [eax-0xc],ah
  40b2bf:	xchg   ecx,eax
  40b2c0:	arpl   WORD PTR [edi+0x9],si
  40b2c3:	mov    esi,0xa7675502
  40b2c8:	inc    esp
  40b2c9:	push   eax
  40b2ca:	inc    ebp
  40b2cb:	push   ebx
  40b2cc:	mov    eax,DWORD PTR ds:0x78fbeb1f
  40b2d2:	sub    BYTE PTR [ecx+0x3c],dh
  40b2d5:	pop    DWORD PTR [edi-0xb21a2e8]
  40b2db:	mov    bh,0xf0
  40b2dd:	and    al,0xf4
  40b2df:	cdq    
  40b2e0:	daa    
  40b2e1:	mov    DWORD PTR ds:0x58c3b21b,ecx
  40b2e7:	mov    BYTE PTR [edx],dl
  40b2e9:	stos   BYTE PTR es:[edi],al
  40b2ea:	imul   ebp,esp,0x75
  40b2ed:	cmp    dh,BYTE PTR [edi]
  40b2ef:	rol    BYTE PTR [ebx+esi*1+0x7cee84ac],0xbe
  40b2f7:	in     al,0xb3
  40b2f9:	dec    edx
  40b2fa:	scas   al,BYTE PTR es:[edi]
  40b2fb:	inc    ebp
  40b2fc:	jge    0x40b287
  40b2fe:	sub    ecx,DWORD PTR [ebp+0x9]
  40b301:	xor    bh,ch
  40b303:	mov    al,0xa3
  40b305:	xor    ecx,edx
  40b307:	or     DWORD PTR [edi-0x6fbab468],edi
  40b30d:	into   
  40b30e:	and    cl,cl
  40b310:	mov    WORD PTR [esi],gs
  40b312:	dec    esi
  40b313:	mov    BYTE PTR [ecx],ah
  40b315:	and    BYTE PTR [ecx+0x22],bh
  40b318:	xor    al,0xe7
  40b31a:	pop    es
  40b31b:	out    dx,eax
  40b31c:	leave  
  40b31d:	lock mov bh,0xe2
  40b320:	sti    
  40b321:	(bad)  
  40b322:	pop    eax
  40b323:	fwait
  40b324:	not    BYTE PTR [esi-0x44a038f]
  40b32a:	imul   esi,edx,0x3e0b5cf3
  40b330:	pop    ds
  40b331:	jae    0x40b319
  40b333:	call   0x50fe26db
  40b338:	pop    ss
  40b339:	addr16 (bad) 
  40b33b:	fstp   QWORD PTR [edx+esi*8+0x7fa40983]
  40b342:	mov    WORD PTR [edx],ds
  40b344:	adc    BYTE PTR [ebp+0x2a],cl
  40b347:	imul   edi,DWORD PTR [ecx],0x1d
  40b34a:	mov    esi,0xca915c6b
  40b34f:	or     eax,DWORD PTR [edi+ebp*4-0x30610981]
  40b356:	sub    dl,BYTE PTR [ebp-0xbaecc9a]
  40b35c:	cli    
  40b35d:	popf   
  40b35e:	mov    eax,ds:0xad552991
  40b363:	mov    al,ds:0x6e655ca0
  40b368:	lock cmp al,0xc3
  40b36b:	fild   WORD PTR [edi]
  40b36d:	xor    edx,edx
  40b36f:	push   edi
  40b370:	push   0x37de2bf5
  40b375:	jo     0x40b3b9
  40b377:	add    dh,ch
  40b379:	loope  0x40b317
  40b37b:	mov    ebx,0x49d53d07
  40b380:	std    
  40b381:	push   0xf9142632
  40b386:	shl    BYTE PTR [ecx-0x3d],0xf6
  40b38a:	mov    cl,0xa6
  40b38c:	adc    BYTE PTR [ebp-0x7d],ch
  40b38f:	(bad)  
  40b390:	or     al,al
  40b392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b393:	fldcw  WORD PTR [eax-0x7d33ec24]
  40b399:	ins    DWORD PTR es:[edi],dx
  40b39a:	fstp   QWORD PTR [ebp*8+0x61b9d4bc]
  40b3a1:	pusha  
  40b3a2:	arpl   WORD PTR [eax+0x35],ax
  40b3a5:	adc    al,BYTE PTR [edx]
  40b3a7:	in     eax,dx
  40b3a8:	mov    al,dh
  40b3aa:	aas    
  40b3ab:	adc    ebx,DWORD PTR [ebx+0x3cf2351e]
  40b3b1:	push   edi
  40b3b2:	sbb    ebp,DWORD PTR [ebx-0x60]
  40b3b5:	stos   BYTE PTR es:[edi],al
  40b3b6:	sbb    DWORD PTR [esi-0x7252b4de],0xeb8302ba
  40b3c0:	sar    BYTE PTR [edx-0x2fe02c0c],cl
  40b3c6:	scas   al,BYTE PTR es:[edi]
  40b3c7:	or     ebx,DWORD PTR [ebp-0x66cf3347]
  40b3cd:	mov    ch,0x3c
  40b3cf:	stos   DWORD PTR es:[edi],eax
  40b3d0:	aas    
  40b3d1:	(bad)  
  40b3d2:	mov    ecx,0xdde45234
  40b3d7:	dec    esi
  40b3d8:	push   ebx
  40b3d9:	dec    ebx
  40b3da:	push   ds
  40b3db:	mov    ecx,0x3beb186e
  40b3e0:	push   0xffffffd8
  40b3e2:	mov    BYTE PTR [edx],0x27
  40b3e5:	hlt    
  40b3e6:	xchg   edi,eax
  40b3e7:	sti    
  40b3e8:	adc    DWORD PTR [ebx+0x22d9fa8],esp
  40b3ee:	inc    esp
  40b3ef:	ds fstp QWORD PTR cs:[ebx]
  40b3f3:	jp     0x40b437
  40b3f5:	fimul  DWORD PTR [edx-0x5a9d274f]
  40b3fb:	lods   eax,DWORD PTR ds:[esi]
  40b3fc:	aam    0x6b
  40b3fe:	sub    ah,BYTE PTR [esi+edi*4]
  40b401:	ret    
  40b402:	shr    BYTE PTR [ecx+edi*8+0x10],0x97
  40b407:	in     al,0xef
  40b409:	mov    WORD PTR [ebp+ecx*4-0x7b712415],ss
  40b410:	(bad)  [ebp+0x5]
  40b413:	sub    al,0xe9
  40b415:	loop   0x40b48c
  40b417:	mov    dl,0x21
  40b419:	fisub  WORD PTR [ebx]
  40b41b:	shl    bl,0xba
  40b41e:	retf   
  40b41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b420:	mov    DWORD PTR [esi-0x362c13bd],ebx
  40b426:	scas   eax,DWORD PTR es:[edi]
  40b427:	lods   al,BYTE PTR ds:[esi]
  40b428:	jp     0x40b49e
  40b42a:	xchg   esi,eax
  40b42b:	mov    ds:0xcd53d900,eax
  40b430:	mov    DWORD PTR [edi],esp
  40b432:	and    ch,bh
  40b434:	jb     0x40b3fc
  40b436:	push   ecx
  40b437:	sahf   
  40b438:	pop    edi
  40b439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b43a:	sbb    BYTE PTR [esp+edx*1],cl
  40b43d:	mov    eax,0xb66ccc2
  40b442:	xchg   ebx,eax
  40b443:	dec    ebp
  40b444:	les    ecx,FWORD PTR [eax+0x77]
  40b447:	sbb    esi,ebx
  40b449:	mov    cl,0x4a
  40b44b:	push   ds
  40b44c:	inc    edi
  40b44d:	popf   
  40b44e:	out    dx,al
  40b44f:	mov    eax,ds:0x2171f5c2
  40b454:	mov    DWORD PTR [ecx+eiz*8-0x25],0x42d51cd0
  40b45c:	sbb    edi,DWORD PTR [ebp+0x35]
  40b45f:	mov    ds:0xfdf7baf9,eax
  40b464:	daa    
  40b465:	push   esi
  40b466:	loopne 0x40b489
  40b468:	pushf  
  40b469:	adc    eax,0x788cd071
  40b46e:	fisttp WORD PTR [edi]
  40b470:	bound  ebx,QWORD PTR [ecx+edi*8-0xe]
  40b474:	inc    edi
  40b475:	pop    ebp
  40b476:	jecxz  0x40b4bd
  40b478:	fisttp WORD PTR [ecx-0x24]
  40b47b:	into   
  40b47c:	inc    edx
  40b47d:	push   edx
  40b47e:	sbb    BYTE PTR [edx-0x4ba933fe],bl
  40b484:	arpl   WORD PTR [ebx],cx
  40b486:	sbb    eax,0x40820666
  40b48b:	cmp    ebp,DWORD PTR [eax+0x67]
  40b48e:	outs   dx,DWORD PTR ds:[esi]
  40b48f:	mov    esp,0xcc82f444
  40b494:	push   cs
  40b495:	inc    esi
  40b496:	aad    0x2f
  40b498:	iret   
  40b499:	test   al,0x15
  40b49b:	mov    ds,esp
  40b49d:	push   edx
  40b49e:	in     eax,dx
  40b49f:	mov    ah,0x3
  40b4a1:	pop    es
  40b4a2:	and    DWORD PTR [edx],eax
  40b4a4:	fmul   QWORD PTR [edi-0x1708cfa7]
  40b4aa:	(bad)  
  40b4ac:	imul   BYTE PTR [esi]
  40b4ae:	fisub  DWORD PTR [esi+0x22c52f90]
  40b4b4:	dec    esi
  40b4b5:	call   DWORD PTR [edx-0x7]
  40b4b8:	mov    bl,cl
  40b4ba:	jmp    0x259c:0x8f44c49e
  40b4c1:	push   ss
  40b4c2:	std    
  40b4c3:	sbb    al,ah
  40b4c5:	mov    cl,0x3e
  40b4c7:	adc    eax,0x4357d3a
  40b4cc:	push   0x6172461
  40b4d1:	(bad)  
  40b4d2:	dec    edi
  40b4d3:	outs   dx,BYTE PTR ds:[esi]
  40b4d4:	test   al,0x55
  40b4d6:	ret    
  40b4d7:	pop    esi
  40b4d8:	jb     0x40b52e
  40b4da:	cwde   
  40b4db:	iret   
  40b4dc:	lods   al,BYTE PTR ds:[esi]
  40b4dd:	xor    DWORD PTR [esi+0x44399717],ebx
  40b4e3:	xchg   edi,eax
  40b4e4:	popf   
  40b4e5:	jne    0x40b4ba
  40b4e7:	icebp  
  40b4e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4e9:	hlt    
  40b4ea:	push   ebx
  40b4eb:	mov    al,0x5c
  40b4ed:	shl    BYTE PTR [ebx-0x1f2bf26c],1
  40b4f3:	mov    ecx,0x710a17c3
  40b4f8:	jp     0x40b574
  40b4fa:	lods   al,BYTE PTR ds:[esi]
  40b4fb:	dec    ebx
  40b4fc:	jne    0x40b4ce
  40b4fe:	inc    ebp
  40b4ff:	adc    eax,0x3bd8ddba
  40b504:	mov    ss,ebp
  40b506:	sbb    eax,0x5f86adff
  40b50b:	push   0xfffffff7
  40b50d:	imul   edi,eax,0xa95706a3
  40b513:	and    al,0xb2
  40b515:	pusha  
  40b516:	scas   eax,DWORD PTR es:[edi]
  40b517:	stc    
  40b518:	mov    ebx,esp
  40b51a:	data16 sbb BYTE PTR [ebx-0x6c],cl
  40b51e:	packsswb mm0,QWORD PTR [edx+ebp*4+0x5b]
  40b523:	cmp    ah,ch
  40b525:	jbe    0x40b553
  40b527:	(bad)  
  40b528:	cmp    edi,DWORD PTR ds:0xc507ae91
  40b52e:	jp     0x40b52f
  40b530:	into   
  40b531:	out    dx,al
  40b532:	inc    eax
  40b533:	inc    esi
  40b534:	sbb    BYTE PTR [edx+0x7f178ef3],0x14
  40b53b:	ret    
  40b53c:	sbb    dh,dh
  40b53e:	mov    ds:0xb0d823c1,eax
  40b543:	mov    bl,0x8f
  40b545:	lods   al,BYTE PTR ds:[esi]
  40b546:	cmp    al,0xb4
  40b548:	(bad)  
  40b549:	mov    esi,0x522151b8
  40b54e:	test   BYTE PTR [ecx],bh
  40b550:	pop    ecx
  40b551:	fsub   DWORD PTR [ecx-0x5813bb12]
  40b557:	push   ebp
  40b558:	xchg   dh,dl
  40b55a:	fwait
  40b55b:	scas   eax,DWORD PTR es:[edi]
  40b55c:	or     DWORD PTR [edx-0x7b4cbd9d],ecx
  40b562:	mul    DWORD PTR [ebx+eiz*4-0x2afb7fb4]
  40b569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b56a:	mov    bh,0x64
  40b56c:	jbe    0x40b573
  40b56e:	enter  0x6f9f,0xc6
  40b572:	pop    edx
  40b573:	sbb    BYTE PTR [eax+eax*1],ah
  40b576:	bound  eax,QWORD PTR [ecx]
  40b578:	add    bl,0x9e
  40b57b:	sti    
  40b57c:	(bad)  
  40b57d:	iret   
  40b57e:	into   
  40b57f:	pop    es
  40b580:	push   0xa5cbd67e
  40b585:	loope  0x40b5c2
  40b587:	sbb    BYTE PTR [ecx+edi*2],0x1e
  40b58b:	add    eax,0x675be3fc
  40b590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b592:	das    
  40b593:	sbb    al,0xc6
  40b595:	mov    al,ds:0xfbec7342
  40b59a:	in     eax,dx
  40b59b:	or     edi,DWORD PTR [edx+0x37d6c408]
  40b5a1:	xchg   esi,eax
  40b5a2:	mov    eax,ds:0x418ef848
  40b5a7:	push   edi
  40b5a8:	nop
  40b5a9:	ss mov ah,0x14
  40b5ac:	fst    st(0)
  40b5ae:	mov    ds:0x3cb4d539,al
  40b5b3:	imul   eax,DWORD PTR [esi+ebx*1-0x4],0x5f
  40b5b8:	es leave 
  40b5ba:	stos   BYTE PTR es:[edi],al
  40b5bb:	mov    ch,BYTE PTR [edi-0x30186658]
  40b5c1:	loopne 0x40b590
  40b5c3:	jnp    0x40b55b
  40b5c5:	push   ebp
  40b5c6:	xchg   edi,eax
  40b5c7:	shl    BYTE PTR [esp+esi*4+0x37b9c619],0xc2
  40b5cf:	mov    ebx,0xc6497418
  40b5d4:	stos   BYTE PTR es:[edi],al
  40b5d5:	repnz and dl,BYTE PTR [eax-0x2f3909a5]
  40b5dc:	in     eax,dx
  40b5dd:	int    0x91
  40b5df:	mov    dl,0xf5
  40b5e1:	cmc    
  40b5e2:	xchg   BYTE PTR [edx],cl
  40b5e4:	pushf  
  40b5e5:	sbb    al,BYTE PTR [ebx]
  40b5e7:	dec    ecx
  40b5e8:	and    eax,ecx
  40b5ea:	fild   DWORD PTR ds:0x82dcc77
  40b5f0:	je     0x40b5fc
  40b5f2:	inc    ebx
  40b5f3:	or     esi,DWORD PTR [edi-0x2d]
  40b5f6:	mov    ah,0x54
  40b5f8:	fmul   st(1),st
  40b5fa:	test   eax,0xa65a152c
  40b5ff:	sub    BYTE PTR [ebp+eiz*2+0x644a0633],bl
  40b606:	pop    edi
  40b607:	out    dx,al
  40b608:	daa    
  40b609:	mov    ebp,DWORD PTR [edx+0x28]
  40b60c:	and    ecx,DWORD PTR ss:[esi+0x15]
  40b610:	in     eax,dx
  40b611:	push   edx
  40b612:	mov    WORD PTR [edi],?
  40b614:	lods   al,BYTE PTR ds:[esi]
  40b615:	and    ch,cl
  40b617:	jno    0x40b65c
  40b619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b61a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b61b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b61c:	push   edx
  40b61d:	mov    al,ds:0x54e5f290
  40b622:	out    0xe9,eax
  40b624:	outs   dx,DWORD PTR ds:[esi]
  40b625:	mov    bl,0x5b
  40b627:	test   BYTE PTR [edi+0x67],al
  40b62a:	dec    esp
  40b62b:	jmp    0x8ff2:0xf5ec5683
  40b632:	pushf  
  40b633:	push   ds
  40b634:	push   ss
  40b635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b636:	outs   dx,BYTE PTR ds:[esi]
  40b637:	leave  
  40b638:	call   0xb73ece7
  40b63d:	add    DWORD PTR ds:0x3a1b452f,eax
  40b643:	test   BYTE PTR [edi+0x56],0xfc
  40b647:	out    0xc7,eax
  40b649:	fwait
  40b64a:	or     al,al
  40b64c:	adc    eax,0xceae7897
  40b651:	repnz xchg esp,eax
  40b653:	xor    cl,cl
  40b655:	test   cl,bl
  40b657:	adc    al,0xf3
  40b659:	cmp    al,ah
  40b65b:	punpckhwd mm6,QWORD PTR ss:[edi]
  40b65f:	shl    DWORD PTR [eax+0x210a56f5],1
  40b665:	cmp    edi,DWORD PTR [ebx]
  40b667:	xchg   BYTE PTR [ebx-0x67a3fece],ah
  40b66d:	and    BYTE PTR [ecx-0x7e26e0ac],0xaa
  40b674:	je     0x40b619
  40b676:	sub    eax,DWORD PTR [ebx+0x5b04e4c2]
  40b67c:	pop    ecx
  40b67d:	inc    ebx
  40b67e:	sti    
  40b67f:	mov    ds:0x8cb972dd,eax
  40b684:	or     ecx,DWORD PTR [ecx+0x73]
  40b687:	xor    al,0xd5
  40b689:	add    dl,BYTE PTR [edi]
  40b68b:	mov    eax,0x23859f47
  40b690:	repnz add edx,esp
  40b693:	out    0x11,al
  40b695:	inc    ebp
  40b696:	mov    esi,0x6f8682e9
  40b69b:	add    ecx,edx
  40b69d:	mov    bh,BYTE PTR [ebp-0x57]
  40b6a0:	mov    edi,0x1b62d0d6
  40b6a5:	mov    bh,0xd5
  40b6a7:	rol    BYTE PTR [esp+ebp*8],0xf
  40b6ab:	fs js  0x40b6ca
  40b6ae:	add    al,0xd7
  40b6b0:	mov    edx,0xe4d3a224
  40b6b5:	push   ebx
  40b6b6:	mov    esp,0x1e5725d2
  40b6bb:	xor    ebp,esi
  40b6bd:	jmp    0xf300:0xbc13c3db
  40b6c4:	fwait
  40b6c5:	(bad)  
  40b6c8:	add    DWORD PTR [ebx+ebx*1],edi
  40b6cb:	sbb    eax,0xaec832ea
  40b6d0:	dec    ecx
  40b6d1:	loopne 0x40b671
  40b6d3:	ss mov edx,0xa2697f5b
  40b6d9:	int    0x1b
  40b6db:	imul   esp,DWORD PTR [ebp+0x779be76d],0xbdf187e4
  40b6e5:	adc    DWORD PTR [eax],0x60
  40b6e8:	or     ebp,DWORD PTR [esi+0x1b]
  40b6eb:	in     al,0xdc
  40b6ed:	(bad)  
  40b6ee:	xchg   esp,eax
  40b6ef:	dec    esi
  40b6f0:	enter  0x8134,0xcf
  40b6f4:	cs dec eax
  40b6f6:	neg    DWORD PTR [ebx+0x43]
  40b6f9:	lds    eax,FWORD PTR cs:[ebx+0x19]
  40b6fd:	icebp  
  40b6fe:	popa   
  40b6ff:	out    dx,eax
  40b700:	or     al,0xbd
  40b702:	imul   DWORD PTR [ecx]
  40b704:	(bad)  
  40b705:	call   0xf45236e6
  40b70a:	jno    0x40b6bf
  40b70c:	nop
  40b70d:	xor    al,0x1a
  40b70f:	lahf   
  40b710:	push   0xf7d2ff0a
  40b715:	fiadd  DWORD PTR [edi*1-0x2ad286ae]
  40b71c:	test   BYTE PTR [edx-0x6d25da16],bl
  40b722:	jmp    0x40b736
  40b724:	mov    ds:0xd7d8edfd,al
  40b729:	xor    al,ah
  40b72b:	and    DWORD PTR [eax+0x52],ebx
  40b72e:	jne    0x40b776
  40b730:	push   esp
  40b731:	fnstsw WORD PTR [edi+0x40bce8ef]
  40b737:	lahf   
  40b738:	call   0x7f89e8e0
  40b73d:	inc    edx
  40b73e:	pop    ds
  40b73f:	push   edi
  40b740:	sub    edx,ebp
  40b742:	cmp    ch,al
  40b744:	jo     0x40b73f
  40b746:	popa   
  40b747:	mov    edi,0xe5f176e9
  40b74c:	bound  eax,QWORD PTR [eax+0x15]
  40b74f:	cmp    BYTE PTR [ebx+0x4d55badc],ah
  40b755:	in     eax,dx
  40b756:	and    eax,0xa9744b3e
  40b75b:	lods   al,BYTE PTR ds:[esi]
  40b75c:	mov    ds:0x3a71a936,eax
  40b761:	jmp    0x40b723
  40b763:	imul   edi,DWORD PTR [edi],0xffffffd6
  40b766:	enter  0x3f7b,0x5d
  40b76a:	jnp    0x40b74f
  40b76c:	out    0xef,al
  40b76e:	jne    0x40b708
  40b770:	data16 jge 0x40b794
  40b773:	in     eax,0x92
  40b775:	cmp    al,0x62
  40b777:	pause  
  40b779:	xchg   esi,eax
  40b77a:	loopne 0x40b767
  40b77c:	les    esp,FWORD PTR [ebx-0x23]
  40b77f:	fldpi  
  40b781:	mov    DWORD PTR [edi],edx
  40b783:	(bad)  
  40b784:	je     0x40b757
  40b786:	ss stos BYTE PTR es:[edi],al
  40b788:	mov    ecx,DWORD PTR [edx]
  40b78a:	dec    ecx
  40b78b:	leave  
  40b78c:	jl     0x40b7e0
  40b78e:	lods   al,BYTE PTR ds:[esi]
  40b78f:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b791:	inc    ebx
  40b792:	(bad)  
  40b794:	and    eax,0x47f907a3
  40b799:	mov    ebp,0x8402d6b0
  40b79e:	das    
  40b79f:	dec    edi
  40b7a0:	mov    edi,0x5b0af9b4
  40b7a5:	out    dx,al
  40b7a6:	test   DWORD PTR [ecx],edx
  40b7a8:	hlt    
  40b7a9:	mov    ds:0x686bf01b,al
  40b7ae:	pop    es
  40b7af:	movs   WORD PTR es:[di],WORD PTR ds:[si]
  40b7b2:	adc    BYTE PTR [esi+edx*1-0x44],ah
  40b7b6:	shl    DWORD PTR [edi+0x7c77de6e],cl
  40b7bc:	mov    al,0x75
  40b7be:	jno    0x40b7b9
  40b7c0:	add    al,0x5
  40b7c2:	stos   DWORD PTR es:[edi],eax
  40b7c3:	push   cs
  40b7c4:	xchg   BYTE PTR [esi],dl
  40b7c6:	dec    eax
  40b7c7:	mov    esi,0x99c52802
  40b7cc:	adc    DWORD PTR [edi+ebp*2+0x42],0xffffff82
  40b7d1:	push   edx
  40b7d2:	outs   dx,BYTE PTR ds:[esi]
  40b7d3:	loope  0x40b7eb
  40b7d5:	cmc    
  40b7d6:	push   esi
  40b7d7:	in     eax,dx
  40b7d8:	out    dx,al
  40b7d9:	scas   eax,DWORD PTR es:[edi]
  40b7da:	nop
  40b7db:	cmp    al,0xf9
  40b7dd:	jnp    0x40b79f
  40b7df:	sbb    edx,DWORD PTR [eax]
  40b7e1:	dec    ecx
  40b7e2:	adc    al,0x44
  40b7e4:	mov    ch,0x98
  40b7e6:	jp     0x40b825
  40b7e8:	sub    bh,BYTE PTR [ebp-0xe]
  40b7eb:	jge    0x40b7b5
  40b7ed:	or     eax,0xe6ceb49e
  40b7f2:	jbe    0x40b7ea
  40b7f4:	jecxz  0x40b7b8
  40b7f6:	adc    BYTE PTR [ecx],cl
  40b7f8:	adc    al,0xe
  40b7fa:	outs   dx,BYTE PTR ds:[esi]
  40b7fb:	jbe    0x40b81a
  40b7fd:	cwde   
  40b7fe:	scas   eax,DWORD PTR es:[edi]
  40b7ff:	shr    ch,0x5a
  40b802:	cli    
  40b803:	push   esp
  40b804:	repnz mov bl,0x7
  40b807:	or     bh,bh
  40b809:	repz or eax,DWORD PTR [edx+ecx*8-0x744dcd2e]
  40b811:	add    dl,ch
  40b813:	out    0xda,eax
  40b815:	push   cs
  40b816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b817:	mov    bl,0x97
  40b819:	repz (bad) 
  40b81b:	out    dx,al
  40b81c:	cmp    al,0x5b
  40b81e:	jbe    0x40b802
  40b820:	fwait
  40b821:	cmp    al,0xe3
  40b823:	in     eax,dx
  40b824:	jno    0x40b7ea
  40b826:	xor    DWORD PTR [esi],ecx
  40b828:	shl    DWORD PTR [edi-0x76],1
  40b82b:	inc    edi
  40b82c:	push   esp
  40b82d:	push   es
  40b82e:	or     edx,DWORD PTR [ecx-0x3b406be0]
  40b834:	out    dx,al
  40b835:	dec    esi
  40b836:	test   BYTE PTR [eax-0x3d77dd4],dl
  40b83c:	jmp    0xa2f6:0xa294e14e
  40b843:	dec    esi
  40b844:	xor    eax,0x34385435
  40b849:	dec    ecx
  40b84a:	and    cl,BYTE PTR [eax]
  40b84c:	ja     0x40b8cc
  40b84e:	ds sahf 
  40b850:	test   BYTE PTR [edx-0x269b5c7b],dh
  40b856:	enter  0xb68e,0x9f
  40b85a:	(bad)  
  40b85b:	mov    al,ds:0xf7c4e6f
  40b860:	fmul   DWORD PTR [edx+0x25e73554]
  40b866:	mov    ebp,0x2303a8e7
  40b86b:	repnz (bad) [edi]
  40b86e:	pop    edx
  40b86f:	popf   
  40b870:	fist   WORD PTR [edi+0x433e8196]
  40b876:	inc    edi
  40b877:	sti    
  40b878:	xor    al,ah
  40b87a:	hlt    
  40b87b:	xchg   ecx,eax
  40b87c:	mov    cl,0x31
  40b87e:	adc    eax,0x3b537a8e
  40b883:	inc    edx
  40b884:	add    eax,0xe972f230
  40b889:	add    eax,0x1977fa8d
  40b88e:	or     al,0x9e
  40b890:	cmp    esi,DWORD PTR [edx+0x1f]
  40b893:	clc    
  40b894:	fist   WORD PTR ds:[eax-0x6cf8df1d]
  40b89b:	jmp    0x6545926b
  40b8a0:	lahf   
  40b8a1:	push   ebp
  40b8a2:	cmp    al,0xf9
  40b8a4:	in     eax,dx
  40b8a5:	into   
  40b8a6:	pop    eax
  40b8a7:	add    DWORD PTR [eax+0x7b],ecx
  40b8aa:	sbb    al,0xf3
  40b8ac:	add    DWORD PTR [eax+eax*1],ebp
  40b8af:	dec    esi
  40b8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8b1:	add    ch,BYTE PTR [edx+edx*1-0x48231329]
  40b8b8:	pop    edi
  40b8b9:	scas   eax,DWORD PTR es:[edi]
  40b8ba:	add    al,0x90
  40b8bc:	es mov edi,0xd6924f65
  40b8c2:	adc    ch,BYTE PTR [ebx+0x7303de69]
  40b8c8:	arpl   WORD PTR [eax],cx
  40b8ca:	clc    
  40b8cb:	dec    ebp
  40b8cc:	into   
  40b8cd:	sbb    BYTE PTR [edx+0x22],0x31
  40b8d1:	pop    es
  40b8d2:	dec    edx
  40b8d3:	sbb    BYTE PTR [ecx],bl
  40b8d5:	sbb    edx,ebp
  40b8d7:	inc    ecx
  40b8d8:	mov    ch,0x19
  40b8da:	inc    eax
  40b8db:	jge    0x40b8ba
  40b8dd:	mov    eax,ds:0x5d96c43c
  40b8e2:	jle    0x40b879
  40b8e4:	sub    eax,0x5e75fd0b
  40b8e9:	sub    BYTE PTR [ecx],0x95
  40b8ec:	xor    DWORD PTR [edi-0x5b],edi
  40b8ef:	fidivr DWORD PTR [ebx-0x13]
  40b8f2:	push   ss
  40b8f3:	jp     0x40b88b
  40b8f5:	retf   0xea3c
  40b8f8:	xchg   ebx,esi
  40b8fa:	dec    eax
  40b8fb:	popf   
  40b8fc:	in     al,dx
  40b8fd:	dec    esi
  40b8fe:	pop    esp
  40b8ff:	jge    0x40b935
  40b901:	loop   0x40b897
  40b903:	sbb    DWORD PTR [esp+ebx*2],eax
  40b906:	or     eax,0xd6896146
  40b90b:	sub    esi,eax
  40b90d:	xor    ah,BYTE PTR [eax+0xf]
  40b910:	nop
  40b911:	jne    0x40b948
  40b913:	push   0xffffffae
  40b915:	int    0x6b
  40b917:	xor    edi,DWORD PTR [ecx+0x23]
  40b91a:	lea    esp,[esi-0x70c199eb]
  40b920:	leave  
  40b921:	jle    0x40b958
  40b923:	add    al,0x4
  40b925:	cs cmp al,0x81
  40b928:	(bad)  
  40b929:	mov    esp,0x58a2c863
  40b92e:	mov    bh,BYTE PTR [ecx+esi*1]
  40b931:	sub    esi,ebp
  40b933:	sbb    BYTE PTR [eax-0x5bae1dc6],dl
  40b939:	push   edx
  40b93a:	(bad)  
  40b93c:	jge    0x40b925
  40b93e:	mov    ds:0x366095c4,eax
  40b943:	mov    esi,0x2fe372e3
  40b948:	cmp    DWORD PTR [edi+0x4b8403f8],ecx
  40b94e:	sbb    al,al
  40b950:	add    edx,DWORD PTR [edi-0x596843fd]
  40b956:	out    dx,eax
  40b957:	xchg   esp,eax
  40b958:	lock sbb esi,DWORD PTR [edx-0x74]
  40b95c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b95d:	xchg   ebp,eax
  40b95e:	adc    al,0x63
  40b960:	rol    BYTE PTR [edx+edi*8],0xa4
  40b964:	ins    DWORD PTR es:[edi],dx
  40b965:	lock out dx,eax
  40b967:	das    
  40b968:	push   ds
  40b969:	xor    ebx,DWORD PTR [edx-0x60b202ce]
  40b96f:	ss pushf 
  40b971:	pop    ds
  40b972:	push   esp
  40b973:	repz adc eax,0xccbdaf0f
  40b979:	xchg   ebx,eax
  40b97a:	hlt    
  40b97b:	inc    edx
  40b97c:	ins    BYTE PTR es:[edi],dx
  40b97d:	les    ebx,FWORD PTR [eax-0x393bff04]
  40b983:	sub    bl,0x4e
  40b986:	xor    al,0x52
  40b988:	imul   ebp,esi,0x773d88e1
  40b98e:	jge    0x40b95d
  40b990:	cmc    
  40b991:	call   0x878e3d1b
  40b996:	test   eax,0x29fa3870
  40b99b:	xchg   ebp,eax
  40b99c:	inc    eax
  40b99d:	mov    DWORD PTR [edi+0x584df493],0x9be477b2
  40b9a7:	and    al,0x84
  40b9a9:	dec    edi
  40b9ab:	pop    esi
  40b9ac:	and    eax,DWORD PTR [bx+si+0x56ae]
  40b9b1:	push   eax
  40b9b2:	dec    esi
  40b9b3:	xor    al,0xbd
  40b9b5:	mov    cl,0x1c
  40b9b7:	scas   al,BYTE PTR es:[edi]
  40b9b8:	mov    al,ds:0x37d4fff4
  40b9bd:	cmp    dl,BYTE PTR [esi+0x78eece90]
  40b9c3:	(bad)  
  40b9c4:	fwait
  40b9c5:	adc    BYTE PTR [eax-0x6e16259],ah
  40b9cb:	xchg   esi,eax
  40b9cc:	rol    BYTE PTR [eax],0x37
  40b9cf:	pushf  
  40b9d0:	in     eax,dx
  40b9d1:	pop    eax
  40b9d2:	mov    edi,0x59458514
  40b9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9d8:	pop    eax
  40b9d9:	sti    
  40b9da:	or     al,0x26
  40b9dc:	mov    eax,ds:0xc143414f
  40b9e1:	je     0x40b9fe
  40b9e3:	mov    BYTE PTR [esi],cl
  40b9e5:	daa    
  40b9e6:	in     al,0x54
  40b9e8:	test   dh,ah
  40b9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9eb:	jbe    0x40ba5e
  40b9ed:	xor    bl,cl
  40b9ef:	inc    ebx
  40b9f0:	jp     0x40b980
  40b9f2:	(bad)  
  40b9f3:	jmp    0x73ee:0x82f8b0ac
  40b9fa:	jmp    0x40ba51
  40b9fc:	out    dx,al
  40b9fd:	loopne 0x40b9c9
  40b9ff:	je     0x40b982
  40ba01:	xlat   BYTE PTR ds:[ebx]
  40ba02:	bound  esi,QWORD PTR [eax]
  40ba04:	push   edx
  40ba05:	pop    edx
  40ba06:	mov    dh,0x55
  40ba08:	out    dx,eax
  40ba09:	outs   dx,DWORD PTR ds:[esi]
  40ba0a:	js     0x40ba63
  40ba0c:	pop    esi
  40ba0d:	adc    al,0x50
  40ba0f:	std    
  40ba10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba11:	mov    BYTE PTR [esi+0x53eebff5],bh
  40ba17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba18:	cwde   
  40ba19:	xchg   BYTE PTR [ecx],bh
  40ba1b:	jecxz  0x40ba82
  40ba1d:	xor    eax,0x6561d410
  40ba22:	adc    BYTE PTR [edi+edx*1-0x47],al
  40ba26:	pop    ss
  40ba27:	imul   edx,DWORD PTR [ecx],0x27
  40ba2a:	(bad)  
  40ba2b:	fwait
  40ba2c:	pop    ebx
  40ba2d:	les    edx,FWORD PTR ds:0x50e74058
  40ba33:	pop    ss
  40ba34:	or     eax,0xbdfb3f15
  40ba39:	nop
  40ba3a:	inc    esp
  40ba3b:	pop    ss
  40ba3c:	std    
  40ba3d:	pop    edi
  40ba3e:	cli    
  40ba3f:	setno  BYTE PTR [edx-0x32bb65a]
  40ba46:	ss in  al,0xcb
  40ba49:	fild   DWORD PTR [ecx-0x24e81263]
  40ba4f:	sbb    eax,DWORD PTR [ebx-0x36]
  40ba52:	push   cs
  40ba53:	push   ebx
  40ba54:	xchg   edi,eax
  40ba55:	das    
  40ba56:	es sub al,0x3e
  40ba59:	cwde   
  40ba5a:	jp     0x40ba0a
  40ba5c:	test   eax,0x67f67eb0
  40ba61:	arpl   WORD PTR [edi],dx
  40ba63:	cmp    eax,0x87a11cd3
  40ba68:	lods   al,BYTE PTR ds:[esi]
  40ba69:	test   DWORD PTR [eax-0x3f],0xfc0e646f
  40ba70:	jecxz  0x40ba72
  40ba72:	ins    DWORD PTR es:[edi],dx
  40ba73:	add    ch,ch
  40ba75:	push   ecx
  40ba76:	retf   
  40ba77:	pop    esp
  40ba78:	test   al,0xe2
  40ba7a:	cld    
  40ba7b:	fld    TBYTE PTR [edx]
  40ba7d:	mov    ebp,0xf2ab54b
  40ba82:	test   BYTE PTR [edx+0x4c],bh
  40ba85:	mov    esp,0xda7a9d37
  40ba8a:	cmp    al,0xa1
  40ba8c:	in     al,0x34
  40ba8e:	sub    al,BYTE PTR [ebx+0x61]
  40ba91:	retf   0x5d75
  40ba94:	sbb    al,0x62
  40ba96:	or     eax,0x3f528c28
  40ba9b:	mov    edi,edi
  40ba9d:	inc    eax
  40ba9e:	add    BYTE PTR [ecx],bh
  40baa0:	push   ss
  40baa1:	xor    al,0xd3
  40baa3:	psrld  mm5,QWORD PTR [ebp+0x22]
  40baa7:	clc    
  40baa8:	cmp    eax,0x290c0eb8
  40baad:	jl     0x40bae2
  40baaf:	inc    ebx
  40bab0:	push   esp
  40bab1:	inc    eax
  40bab2:	dec    ebx
  40bab3:	adc    BYTE PTR [ecx],0xa8
  40bab6:	inc    edx
  40bab7:	xchg   ebx,eax
  40bab8:	ins    BYTE PTR es:[edi],dx
  40bab9:	jmp    0x40baf6
  40babb:	iret   
  40babc:	mov    esi,0xc7feb335
  40bac1:	lea    ebp,[eax]
  40bac3:	test   al,0x6f
  40bac5:	outs   dx,BYTE PTR ds:[esi]
  40bac6:	xchg   esp,eax
  40bac7:	xchg   esi,eax
  40bac8:	push   esi
  40bac9:	jle    0x40ba79
  40bacb:	rcr    BYTE PTR [eax+0x24],0xd1
  40bacf:	fisub  WORD PTR [eax]
  40bad1:	or     al,0xec
  40bad3:	push   edi
  40bad4:	enter  0x269a,0x9f
  40bad8:	sub    ecx,esi
  40bada:	add    eax,0xbfa7e2c5
  40badf:	sub    cl,bh
  40bae1:	push   esp
  40bae2:	loope  0x40baa4
  40bae4:	or     BYTE PTR [eax],0xa7
  40bae7:	or     BYTE PTR [ebp+edx*1-0x2a],al
  40baeb:	mov    eax,0x82374383
  40baf0:	mov    dl,0x42
  40baf2:	xchg   ebp,eax
  40baf3:	inc    edx
  40baf4:	aad    0xc7
  40baf6:	add    esp,edx
  40baf8:	and    eax,0xfa74c447
  40bafd:	scas   al,BYTE PTR es:[edi]
  40bafe:	mov    esp,0x498247cb
  40bb03:	(bad)
  40bb06:	fsubr  QWORD PTR [edi+esi*4-0x11a6b698]
  40bb0d:	stc    
  40bb0e:	pop    esi
  40bb0f:	push   esi
  40bb10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb11:	mov    BYTE PTR [ebx],bl
  40bb13:	js     0x40babc
  40bb15:	push   cs
  40bb16:	pop    ebx
  40bb17:	add    edx,DWORD PTR [edx+edi*1+0x59]
  40bb1b:	fmul   QWORD PTR [edx]
  40bb1d:	mov    esi,0xc118b956
  40bb22:	cmp    al,0x1f
  40bb24:	adc    edi,edx
  40bb26:	test   al,0x3a
  40bb28:	xchg   ebp,eax
  40bb29:	shl    BYTE PTR [ecx+edi*2],0x3e
  40bb2d:	adc    bh,ah
  40bb2f:	xor    eax,0xbb55f8b4
  40bb34:	mov    esp,ss
  40bb36:	(bad)  
  40bb37:	je     0x40bb3a
  40bb39:	mov    al,0x40
  40bb3b:	aad    0x44
  40bb3d:	dec    eax
  40bb3e:	cmp    al,BYTE PTR [ebx]
  40bb40:	push   edx
  40bb41:	mov    eax,ds:0x8f3fedb1
  40bb46:	add    eax,0x9274f432
  40bb4b:	rcl    DWORD PTR [esi-0x26],cl
  40bb4e:	mov    edx,0x24061cef
  40bb53:	pop    edx
  40bb54:	mov    ebx,0x62e7cb5
  40bb59:	jecxz  0x40bb8d
  40bb5b:	xlat   BYTE PTR ds:[ebx]
  40bb5c:	jecxz  0x40bbd9
  40bb5e:	sub    al,0xd3
  40bb60:	mov    esp,0xf5786f09
  40bb65:	xchg   ebp,eax
  40bb66:	pop    es
  40bb67:	js     0x40bb97
  40bb69:	dec    ecx
  40bb6a:	test   DWORD PTR [edx],ecx
  40bb6c:	pop    es
  40bb6d:	adc    bh,ah
  40bb6f:	mov    ebp,0x70077acd
  40bb74:	add    eax,0x625f1902
  40bb79:	push   ebx
  40bb7a:	or     ch,cl
  40bb7c:	mov    esp,0x60679b5f
  40bb81:	rcl    ch,1
  40bb83:	stos   BYTE PTR es:[edi],al
  40bb84:	or     eax,0x38b7cf36
  40bb89:	in     eax,0x63
  40bb8b:	test   BYTE PTR [ecx+0x50],bh
  40bb8e:	mov    esi,0x63b3dac5
  40bb93:	mov    ebp,0x606bc644
  40bb98:	cld    
  40bb99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb9a:	fisubr DWORD PTR [ebx+0xa]
  40bb9d:	scas   al,BYTE PTR es:[edi]
  40bb9e:	cmp    ch,BYTE PTR [ebx-0x1a]
  40bba1:	leave  
  40bba2:	and    BYTE PTR gs:[eax],dh
  40bba5:	ja     0x40bbf8
  40bba7:	mov    eax,0xd9d170d6
  40bbac:	inc    edx
  40bbad:	ins    DWORD PTR es:[edi],dx
  40bbae:	repnz pop edi
  40bbb0:	into   
  40bbb1:	mov    esi,0xa046247c
  40bbb6:	outs   dx,DWORD PTR ds:[esi]
  40bbb7:	loop   0x40bbe7
  40bbb9:	aaa    
  40bbba:	sbb    al,0xfa
  40bbbc:	(bad)  [ebx+0x4b44bbaf]
  40bbc2:	adc    eax,0x23654074
  40bbc7:	clc    
  40bbc8:	pop    DWORD PTR [eax]
  40bbca:	xor    DWORD PTR [ebx+eiz*1],edi
  40bbcd:	std    
  40bbce:	mov    DWORD PTR [ecx-0x46],ebp
  40bbd1:	cdq    
  40bbd2:	or     BYTE PTR [ebx-0x79519a9],al
  40bbd8:	and    BYTE PTR [ebp-0x10],0xee
  40bbdc:	push   cs
  40bbdd:	jns    0x40bbc4
  40bbdf:	das    
  40bbe0:	ins    BYTE PTR es:[edi],dx
  40bbe1:	pop    esi
  40bbe2:	push   ds
  40bbe3:	test   eax,0xfdee4913
  40bbe8:	scas   eax,DWORD PTR es:[edi]
  40bbe9:	out    0x71,al
  40bbeb:	or     al,0x37
  40bbed:	push   edi
  40bbee:	mov    al,0xbf
  40bbf0:	mov    esi,0xbb533156
  40bbf5:	rcr    DWORD PTR [ebp-0x7f],1
  40bbf8:	xchg   ebx,eax
  40bbf9:	daa    
  40bbfa:	xchg   DWORD PTR [ecx],esp
  40bbfc:	stc    
  40bbfd:	jp     0x40bc05
  40bbff:	push   esi
  40bc00:	dec    edx
  40bc01:	or     al,0x48
  40bc03:	mov    eax,ds:0xe132ac6
  40bc08:	or     al,0xc0
  40bc0a:	jo     0x40bc50
  40bc0c:	ins    DWORD PTR es:[edi],dx
  40bc0d:	dec    edi
  40bc0e:	fstp   QWORD PTR [edi]
  40bc10:	stc    
  40bc11:	fistp  QWORD PTR [ebx+eiz*1-0x3d]
  40bc15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc16:	cmp    ebp,ebx
  40bc18:	scas   al,BYTE PTR es:[edi]
  40bc19:	inc    eax
  40bc1a:	je     0x40bc29
  40bc1c:	xchg   BYTE PTR [ebp+0x5bb7d536],bl
  40bc22:	fwait
  40bc23:	mov    dl,0xb1
  40bc25:	add    eax,0xe1417b2a
  40bc2a:	cs jmp 0xa72e:0x73675da9
  40bc32:	cmp    dh,BYTE PTR [edx-0x19018171]
  40bc38:	xchg   ecx,eax
  40bc39:	popf   
  40bc3a:	stc    
  40bc3b:	fcmovnbe st,st(3)
  40bc3d:	mov    dl,BYTE PTR [ebp+0x64cb253d]
  40bc43:	aam    0x72
  40bc45:	fdivr  QWORD PTR [ebx+0x27]
  40bc48:	or     DWORD PTR [edi],0xd5e6f875
  40bc4e:	out    dx,eax
  40bc4f:	mov    bh,0x84
  40bc51:	call   0x7255:0xaf617f37
  40bc58:	retf   
  40bc59:	ins    BYTE PTR es:[edi],dx
  40bc5a:	inc    esi
  40bc5b:	retf   0xc2de
  40bc5e:	popa   
  40bc5f:	pop    es
  40bc60:	mov    bh,BYTE PTR [edi]
  40bc62:	push   si
  40bc64:	sbb    al,0x2e
  40bc66:	or     al,0xe7
  40bc68:	scas   al,BYTE PTR es:[edi]
  40bc69:	fnstsw WORD PTR [edx-0x4]
  40bc6c:	sbb    al,0xb
  40bc6e:	(bad)  
  40bc6f:	aam    0x0
  40bc71:	sbb    dh,0x3e
  40bc74:	jnp    0x40bc17
  40bc76:	sbb    BYTE PTR [eax],bl
  40bc78:	inc    ebx
  40bc79:	mov    bh,BYTE PTR [ebp+0x31903b5b]
  40bc7f:	daa    
  40bc80:	cdq    
  40bc81:	jae    0x40bc42
  40bc83:	int    0xc7
  40bc85:	cmp    DWORD PTR [ebp+0x7910c32f],ebp
  40bc8b:	stc    
  40bc8c:	in     al,0xe5
  40bc8e:	jmp    0x5f8e:0x62d353ad
  40bc95:	fdivr  QWORD PTR [esi]
  40bc97:	sbb    DWORD PTR [esi+edx*4+0x245f5401],eax
  40bc9e:	scas   eax,DWORD PTR es:[edi]
  40bc9f:	push   esp
  40bca0:	jae    0x40bcb2
  40bca2:	test   edi,ecx
  40bca4:	add    eax,0xf46102f2
  40bca9:	sahf   
  40bcaa:	xchg   ecx,eax
  40bcab:	sub    bl,ch
  40bcad:	sbb    BYTE PTR [ecx],bh
  40bcaf:	adc    DWORD PTR [edi+0x6bb872f6],0x429826c
  40bcb9:	cld    
  40bcba:	mov    ds:0xd7018cba,eax
  40bcbf:	int    0x6e
  40bcc1:	push   ebx
  40bcc2:	xchg   ebx,eax
  40bcc3:	adc    al,0xb5
  40bcc5:	jae    0x40bcf5
  40bcc7:	fsub   QWORD PTR [ebx]
  40bcc9:	push   0x4767895a
  40bcce:	ror    DWORD PTR [ecx],cl
  40bcd0:	jmp    0x938b1756
  40bcd5:	jns    0x40bc6d
  40bcd7:	jle    0x40bcab
  40bcd9:	repnz int 0xcc
  40bcdc:	cmp    eax,0x40d09859
  40bce1:	mov    ebp,0x35d4418d
  40bce6:	sbb    edi,DWORD PTR gs:[edx-0x66]
  40bcea:	pop    es
  40bceb:	call   0xa4a1f1f8
  40bcf0:	mov    ebx,fs
  40bcf2:	inc    edi
  40bcf3:	loop   0x40bccb
  40bcf5:	mov    ah,0x42
  40bcf7:	push   ebp
  40bcf8:	lds    ebx,FWORD PTR [ebx]
  40bcfa:	adc    dl,dh
  40bcfc:	sub    eax,0x9cc3ef30
  40bd01:	mov    dl,0xe4
  40bd03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd04:	sbb    edx,esp
  40bd06:	mov    ?,WORD PTR [edi+ebp*8+0x34da8539]
  40bd0d:	mov    ch,0xda
  40bd0f:	into   
  40bd10:	mov    cl,0x59
  40bd12:	adc    edi,DWORD PTR [edi]
  40bd14:	xchg   ebp,eax
  40bd15:	push   ds
  40bd16:	and    esp,eax
  40bd18:	jns    0x40bcdf
  40bd1a:	out    dx,al
  40bd1b:	idiv   BYTE PTR [ecx+0x27c8f88f]
  40bd21:	test   esi,ecx
  40bd23:	jb     0x40bcd7
  40bd25:	mov    ebp,DWORD PTR [ebx]
  40bd27:	jne    0x40bd90
  40bd29:	rol    DWORD PTR ds:0xa8200e22,1
  40bd2f:	sar    DWORD PTR ds:0x57acf2c0,0xe6
  40bd36:	aas    
  40bd37:	add    al,0x37
  40bd39:	add    eax,DWORD PTR [ebx+0x66a866bf]
  40bd3f:	stos   BYTE PTR es:[edi],al
  40bd40:	cmp    bl,BYTE PTR es:[edi+0x6f]
  40bd44:	gs push eax
  40bd46:	pushf  
  40bd47:	lahf   
  40bd48:	enter  0xd55c,0x35
  40bd4c:	mov    ds:0xd4969a76,eax
  40bd51:	mov    dl,BYTE PTR [eax]
  40bd53:	das    
  40bd54:	or     bl,BYTE PTR [ecx]
  40bd56:	int3   
  40bd57:	inc    ecx
  40bd58:	aas    
  40bd59:	ret    0x3dc6
  40bd5c:	loopne 0x40bd91
  40bd5e:	gs xchg esp,eax
  40bd60:	dec    ecx
  40bd61:	cmc    
  40bd62:	xchg   ebx,eax
  40bd63:	data16 icebp 
  40bd65:	inc    ebx
  40bd66:	jl     0x40bcf0
  40bd68:	fisub  WORD PTR [edi+0x73cf948c]
  40bd6e:	cmp    eax,0xbc2e136f
  40bd73:	jo     0x40bdc7
  40bd75:	ret    
  40bd76:	jge    0x40bdab
  40bd78:	stos   DWORD PTR es:[edi],eax
  40bd79:	mov    cl,0x94
  40bd7b:	hlt    
  40bd7c:	mov    ds:0xd459398c,eax
  40bd81:	inc    ecx
  40bd82:	in     al,0xdb
  40bd84:	pop    ebp
  40bd85:	mov    eax,ebp
  40bd87:	lea    edx,[esp+ecx*8-0x472a332]
  40bd8e:	mov    ecx,ebp
  40bd90:	or     BYTE PTR [ebx-0x3b4cd47d],bl
  40bd96:	jbe    0x40bd93
  40bd98:	mov    ecx,0xd3d31f83
  40bd9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd9e:	inc    ecx
  40bd9f:	scas   al,BYTE PTR es:[edi]
  40bda0:	cld    
  40bda1:	push   ds
  40bda2:	pop    es
  40bda3:	int    0x9d
  40bda5:	test   DWORD PTR [ebx+eiz*8+0x56642762],ecx
  40bdac:	dec    edx
  40bdad:	dec    esi
  40bdae:	inc    edi
  40bdaf:	enter  0x8ebd,0x88
  40bdb3:	jge    0x40bde0
  40bdb5:	push   ds
  40bdb6:	and    DWORD PTR [eax+0x5c],ebp
  40bdb9:	mov    ebp,0x8ec6b288
  40bdbe:	or     al,BYTE PTR [eax-0x168d0a52]
  40bdc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdc5:	dec    edx
  40bdc6:	xor    DWORD PTR ds:0x441fb04c,ebp
  40bdcc:	mov    ecx,0xc01b704c
  40bdd1:	adc    dl,BYTE PTR [esp+edx*1+0x4fc01f79]
  40bdd8:	dec    ecx
  40bdd9:	cmp    BYTE PTR [esi+0x6d],dl
  40bddc:	push   eax
  40bddd:	jb     0x40bdc3
  40bddf:	arpl   WORD PTR fs:[esp+ecx*8],ax
  40bde3:	mov    eax,ds:0xc31535eb
  40bde8:	sbb    ch,0x74
  40bdeb:	or     bl,al
  40bded:	call   DWORD PTR [esi+eax*4-0x306a8bc5]
  40bdf4:	sbb    BYTE PTR [esi+ebx*1-0xb],ch
  40bdf8:	jl     0x40bd93
  40bdfa:	adc    ah,BYTE PTR [edx-0x38]
  40bdfd:	int3   
  40bdfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdff:	and    bh,ch
  40be01:	mov    ah,0x54
  40be03:	call   0xf8b805b3
  40be08:	iret   
  40be09:	xchg   esi,eax
  40be0a:	xchg   edi,eax
  40be0b:	dec    ebp
  40be0c:	fstp   DWORD PTR [eax]
  40be0e:	push   es
  40be0f:	sbb    BYTE PTR [edi],bh
  40be11:	inc    edi
  40be12:	push   esi
  40be13:	pop    esp
  40be14:	gs mov esi,0x78060da
  40be1a:	mov    edi,0xd2bac8bc
  40be1f:	fadd   DWORD PTR [edx+0x54b89f8f]
  40be25:	xor    BYTE PTR [edi],bl
  40be27:	xchg   esi,eax
  40be28:	call   0xeace:0x5717bdbc
  40be2f:	mov    edx,0x9e37f7a6
  40be34:	lods   al,BYTE PTR ds:[esi]
  40be35:	scas   eax,DWORD PTR es:[edi]
  40be36:	jbe    0x40be5e
  40be38:	ins    BYTE PTR es:[edi],dx
  40be39:	retf   0x653a
  40be3c:	lea    ebp,[eax-0x11e4fb3d]
  40be42:	sbb    al,0xf7
  40be44:	out    dx,eax
  40be45:	add    al,0x7c
  40be47:	ret    
  40be48:	(bad)  
  40be49:	test   BYTE PTR [edi-0x5a708eff],0xbf
  40be50:	adc    al,0xe8
  40be52:	fdiv   st,st(1)
  40be54:	add    BYTE PTR [ecx],bl
  40be56:	pusha  
  40be57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be58:	(bad)
  40be5c:	(bad)  
  40be5e:	mov    DWORD PTR ds:0x7ecbde1c,esp
  40be64:	or     dh,BYTE PTR [esi+0x7d]
  40be67:	mov    ch,0x38
  40be69:	outs   dx,DWORD PTR ds:[esi]
  40be6a:	mov    esp,0x87ad1dca
  40be6f:	fst    st(3)
  40be71:	jp     0x40be3c
  40be73:	fld    TBYTE PTR [edx+0x353960c5]
  40be79:	inc    edx
  40be7a:	xor    al,0x7
  40be7c:	(bad)  
  40be7d:	cmp    eax,0x90d59c34
  40be82:	cmp    esp,DWORD PTR [eax]
  40be84:	(bad)  [edx]
  40be86:	int3   
  40be87:	cmp    edx,ecx
  40be89:	paddusw mm6,QWORD PTR [esp+ecx*8+0x29]
  40be8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be8f:	ret    0x1d6f
  40be92:	mov    al,ds:0x1292c7bb
  40be97:	sub    DWORD PTR [ecx],esp
  40be99:	ret    
  40be9a:	jo     0x40be42
  40be9c:	ds inc esi
  40be9e:	sub    eax,0xe39f4fbb
  40bea3:	mov    ds:0x7e001de8,al
  40bea8:	mov    ebp,0xf5f78dc5
  40bead:	cmp    eax,0xb6a2e4a5
  40beb2:	jns    0x40bee8
  40beb4:	mov    esi,0x138971e
  40beb9:	sub    dl,BYTE PTR [eax-0x7e]
  40bebc:	cmp    dl,BYTE PTR [ecx-0x7a]
  40bebf:	dec    ebx
  40bec0:	mov    edi,DWORD PTR [eax+eax*1]
  40bec3:	jmp    0x766:0xd1fa7f42
  40beca:	rol    BYTE PTR [edi+0x1f],0x7d
  40bece:	add    BYTE PTR [edx-0x26],dh
  40bed1:	cmc    
  40bed2:	mov    edx,0xed23ea7d
  40bed7:	dec    edi
  40bed8:	xlat   BYTE PTR ds:[ebx]
  40bed9:	xchg   esp,eax
  40beda:	pop    ss
  40bedb:	add    BYTE PTR [esi],ah
  40bedd:	(bad)  
  40bede:	aad    0xfe
  40bee0:	sti    
  40bee1:	fcmovnu st,st(7)
  40bee3:	das    
  40bee4:	mov    edx,0x81bddd8a
  40bee9:	int3   
  40beea:	sub    bl,al
  40beec:	daa    
  40beed:	sar    ebx,0x97
  40bef0:	xor    eax,0x3259ec12
  40bef5:	mov    dl,0x57
  40bef7:	into   
  40bef8:	sub    eax,0x481e3c
  40befd:	push   eax
  40befe:	pop    ss
  40beff:	in     al,dx
  40bf00:	cwde   
  40bf01:	scas   eax,DWORD PTR es:[edi]
  40bf02:	add    edx,DWORD PTR [eax]
  40bf04:	aam    0xe9
  40bf06:	sbb    ebp,DWORD PTR [eax]
  40bf08:	imul   ecx,DWORD PTR [ebx],0x67
  40bf0b:	xchg   edi,eax
  40bf0c:	(bad)  
  40bf0d:	jno    0x40bf14
  40bf0f:	mov    ss,WORD PTR [edx]
  40bf11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf12:	(bad)  
  40bf14:	xchg   ecx,eax
  40bf15:	hlt    
  40bf16:	mov    ah,0x8a
  40bf18:	sub    al,0x52
  40bf1a:	(bad)  
  40bf1c:	fsub   DWORD PTR [edx-0x3b]
  40bf1f:	xlat   BYTE PTR ds:[ebx]
  40bf20:	sbb    al,0xff
  40bf22:	xor    eax,0x41508836
  40bf27:	hlt    
  40bf28:	ret    
  40bf29:	sbb    al,BYTE PTR [edi+ebx*8-0x8efc8a8]
  40bf30:	(bad)  
  40bf31:	dec    edi
  40bf32:	mov    edx,0x6b87276b
  40bf37:	xor    al,0xa2
  40bf39:	inc    edi
  40bf3a:	outs   dx,BYTE PTR ds:[esi]
  40bf3b:	push   0x977fdde3
  40bf40:	add    al,0x97
  40bf42:	sahf   
  40bf43:	cwde   
  40bf44:	or     ch,BYTE PTR [edx+ebx*1-0x1fbfbb8]
  40bf4b:	cmp    al,0xcf
  40bf4d:	das    
  40bf4e:	xlat   BYTE PTR ds:[ebx]
  40bf4f:	repnz int3 
  40bf51:	fcom   DWORD PTR [edx-0x52]
  40bf54:	out    0xec,al
  40bf56:	mov    dh,0xec
  40bf58:	ds dec edi
  40bf5a:	jae    0x40bf85
  40bf5c:	test   eax,0x2a63b49
  40bf61:	dec    edx
  40bf62:	add    esp,ebp
  40bf64:	aam    0x4c
  40bf66:	fisub  DWORD PTR [edx+ecx*2+0x54831016]
  40bf6d:	inc    ebp
  40bf6e:	mov    dh,0xa4
  40bf70:	inc    edx
  40bf71:	dec    ecx
  40bf72:	(bad)  
  40bf73:	icebp  
  40bf74:	cwde   
  40bf75:	int    0xf0
  40bf77:	inc    esp
  40bf78:	jmp    0x40bfd5
  40bf7a:	push   ss
  40bf7b:	xchg   esi,eax
  40bf7c:	sbb    DWORD PTR [ecx+0x2b],edx
  40bf7f:	mov    ecx,DWORD PTR [edi]
  40bf81:	fbstp  TBYTE PTR [ebx-0x79]
  40bf84:	rol    DWORD PTR [edi+0x46f3b443],cl
  40bf8a:	push   edi
  40bf8b:	cmp    bh,BYTE PTR [esi+0xb]
  40bf8e:	fdivr  st(7),st
  40bf90:	cmp    al,0xa0
  40bf92:	mov    cl,0xa7
  40bf94:	push   es
  40bf95:	push   ecx
  40bf96:	addr16 es mov ecx,0x9a937eef
  40bf9d:	and    BYTE PTR [edi],cl
  40bf9f:	fldcw  WORD PTR [eax-0xd123cd3]
  40bfa5:	jp     0x40bf62
  40bfa7:	mov    ds,edi
  40bfa9:	sub    DWORD PTR [ebx+0x5],ecx
  40bfac:	int3   
  40bfad:	jb     0x40bfd0
  40bfaf:	xor    DWORD PTR [edx-0x7b0a5bea],edi
  40bfb5:	ffree  st(1)
  40bfb7:	adc    DWORD PTR ss:[ebx],edx
  40bfba:	sbb    DWORD PTR [edi-0x611b3198],eax
  40bfc0:	outs   dx,DWORD PTR ds:[esi]
  40bfc1:	imul   edx,ecx,0x5b
  40bfc4:	pop    ecx
  40bfc5:	loope  0x40bfcc
  40bfc7:	sub    eax,0x73b2b2b4
  40bfcc:	inc    ecx
  40bfcd:	pop    ebp
  40bfce:	mov    cl,0x44
  40bfd0:	int    0x5b
  40bfd2:	push   ebx
  40bfd3:	cmc    
  40bfd4:	and    al,BYTE PTR [esi-0xe]
  40bfd7:	nop
  40bfd8:	and    ah,BYTE PTR [eax]
  40bfda:	adc    al,0xfc
  40bfdc:	mov    eax,0xc9b84291
  40bfe1:	fimul  WORD PTR [edi+0x39301e35]
  40bfe7:	adc    BYTE PTR [ebx],ah
  40bfe9:	jmp    edi
  40bfeb:	push   ecx
  40bfec:	pop    eax
  40bfed:	add    dl,ah
  40bfef:	sub    al,0x3b
  40bff1:	dec    esi
  40bff2:	push   0x4410295a
  40bff7:	and    ebx,DWORD PTR [ecx+edx*8]
  40bffa:	icebp  
  40bffb:	lahf   
  40bffc:	xchg   DWORD PTR [edi],esp
  40bffe:	fstp   QWORD PTR [ebx+0x767c8356]
  40c004:	sbb    bl,BYTE PTR [ecx-0x45]
  40c007:	dec    edx
  40c008:	(bad)  
  40c009:	mov    bh,0x95
  40c00b:	addr16 ja 0x40c03e
  40c00e:	call   0x8df9587c
  40c013:	repz adc DWORD PTR ds:0x78fcdfd0,edi
  40c01a:	sbb    eax,edx
  40c01c:	popf   
  40c01d:	es clc 
  40c01f:	xchg   DWORD PTR [esi],ebp
  40c021:	inc    ebp
  40c022:	sbb    DWORD PTR [esi+0x476d888a],edi
  40c028:	mov    esi,0x5776c7d2
  40c02d:	and    esp,DWORD PTR [ebx]
  40c02f:	fsub   QWORD PTR [ebp+0x712393cf]
  40c035:	pop    edx
  40c036:	dec    ebp
  40c037:	not    BYTE PTR [ebx]
  40c039:	add    esi,edx
  40c03b:	dec    edi
  40c03c:	in     al,dx
  40c03d:	mov    esi,?
  40c03f:	push   edx
  40c040:	fist   WORD PTR ss:[eax]
  40c043:	pop    ss
  40c044:	pop    es
  40c045:	push   ebx
  40c046:	mov    ebx,0x7ab8c6e9
  40c04b:	jg     0x40c009
  40c04d:	ja     0x40c009
  40c04f:	push   eax
  40c050:	dec    ecx
  40c051:	inc    edx
  40c052:	inc    edi
  40c053:	xchg   esp,eax
  40c054:	out    0xa6,eax
  40c056:	xchg   edx,ebp
  40c058:	xchg   ecx,eax
  40c059:	mov    al,0x8d
  40c05b:	sbb    ch,al
  40c05d:	out    dx,eax
  40c05e:	add    al,0xfc
  40c060:	jns    0x40c028
  40c062:	enter  0x8220,0xe1
  40c066:	shl    BYTE PTR [eax-0x4d],0x63
  40c06a:	sub    esp,esp
  40c06c:	aaa    
  40c06d:	inc    edx
  40c06e:	ret    0xf841
  40c071:	sbb    cl,cl
  40c073:	iret   
  40c074:	lea    ebx,[ebx-0x6bb2e021]
  40c07a:	sub    DWORD PTR [ebx+0x73c34dc0],0xffffffe0
  40c081:	sub    eax,0xe910f541
  40c086:	xchg   edi,eax
  40c087:	xchg   esi,eax
  40c088:	sahf   
  40c089:	repz hlt 
  40c08b:	outs   dx,BYTE PTR ds:[esi]
  40c08c:	cmp    al,0x10
  40c08e:	sti    
  40c08f:	push   ecx
  40c090:	cmp    dh,BYTE PTR [eax]
  40c092:	les    edx,FWORD PTR [eax+0x7103f9fe]
  40c098:	sub    DWORD PTR [esi+ecx*4],eax
  40c09b:	jge    0x40c065
  40c09d:	lods   al,BYTE PTR ds:[esi]
  40c09e:	jmp    0xb332:0x5687a47
  40c0a5:	xor    eax,0xc3e8b996
  40c0aa:	fstp   TBYTE PTR [ebx]
  40c0ac:	xchg   edi,eax
  40c0ad:	cmc    
  40c0ae:	sub    DWORD PTR [edi-0x3fff6191],esp
  40c0b4:	inc    esi
  40c0b5:	dec    ebx
  40c0b6:	scas   eax,DWORD PTR es:[edi]
  40c0b7:	sahf   
  40c0b8:	ror    BYTE PTR [edx],1
  40c0ba:	jne    0x40c0ad
  40c0bc:	xor    al,0xac
  40c0be:	jae    0x40c065
  40c0c0:	mov    esi,0x20013978
  40c0c5:	int3   
  40c0c6:	daa    
  40c0c7:	inc    ecx
  40c0c8:	sub    esi,DWORD PTR [edx]
  40c0ca:	pop    esp
  40c0cb:	mov    edx,0x9f2e9ee3
  40c0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0d1:	imul   ecx,ebx,0x8f6754a2
  40c0d7:	les    esi,FWORD PTR [eax]
  40c0d9:	adc    al,0xb2
  40c0db:	mov    al,ds:0x5c69b0bb
  40c0e0:	imul   ecx,DWORD PTR [ebx+ebp*2],0xa53b6a6a
  40c0e7:	icebp  
  40c0e8:	and    bh,BYTE PTR [esi-0x5e5332a]
  40c0ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0ef:	mov    dl,0xad
  40c0f1:	xchg   esi,eax
  40c0f2:	xchg   esp,eax
  40c0f3:	jle    0x40c09b
  40c0f5:	repnz shl ebp,1
  40c0f8:	lds    ebp,FWORD PTR [ebx-0x76]
  40c0fb:	fs mov edi,0xbaa7c905
  40c101:	sub    esi,DWORD PTR [edi-0x4d0def27]
  40c107:	pop    ecx
  40c108:	pop    ebp
  40c109:	out    0x3,eax
  40c10b:	cmp    eax,0xc239fe96
  40c110:	cdq    
  40c111:	sti    
  40c112:	xchg   edi,eax
  40c113:	or     esi,DWORD PTR es:[ebx-0x60bcf708]
  40c11a:	sbb    eax,0x323b5155
  40c11f:	push   esi
  40c120:	or     al,BYTE PTR [edi+0x57c26ca3]
  40c126:	nop
  40c127:	inc    esp
  40c128:	mov    gs,edi
  40c12a:	xlat   BYTE PTR ds:[ebx]
  40c12b:	jmp    0x862174a8
  40c130:	stc    
  40c131:	es and al,0xb4
  40c134:	sub    ah,BYTE PTR [esi]
  40c136:	mov    ebp,0xef284c8
  40c13b:	fdivr  st(7),st
  40c13d:	xchg   ecx,eax
  40c13e:	inc    eax
  40c13f:	inc    ebp
  40c140:	clc    
  40c141:	mov    cl,0x74
  40c143:	add    DWORD PTR gs:[edi-0x2602a667],0x6e58d419
  40c14e:	int3   
  40c14f:	ds test al,0x9c
  40c152:	sub    dl,dl
  40c154:	int    0x18
  40c156:	mov    ds:0x4bb2f4fe,al
  40c15b:	mov    ds:0x45111a2e,eax
  40c160:	inc    esi
  40c161:	xchg   edi,eax
  40c162:	sbb    eax,0x36ea04d2
  40c167:	arpl   dx,si
  40c169:	inc    edx
  40c16a:	call   0xd4251259
  40c16f:	fdiv   QWORD PTR [esi-0x10]
  40c172:	mov    dl,0xf
  40c174:	retf   
  40c175:	mov    eax,0x4d2281b4
  40c17a:	shl    BYTE PTR [eax+ebp*2+0x72e5f8cf],cl
  40c181:	(bad)  
  40c182:	xlat   BYTE PTR ds:[ebx]
  40c183:	push   es
  40c184:	xchg   edx,eax
  40c185:	push   edi
  40c186:	dec    esp
  40c187:	mov    eax,edx
  40c189:	call   0xda265342
  40c18e:	(bad)  
  40c18f:	into   
  40c190:	cmp    ah,BYTE PTR [ebx-0x7f]
  40c193:	and    edx,esp
  40c195:	xor    ebp,DWORD PTR [edx]
  40c197:	xsha1  (bad)
  40c198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c199:	retf   0x98dc
  40c19c:	je     0x40c19b
  40c19e:	inc    ebx
  40c19f:	jno    0x40c19b
  40c1a1:	or     al,0x45
  40c1a3:	fninit 
  40c1a5:	add    BYTE PTR [esi-0x64],cl
  40c1a8:	and    eax,0xd93ccdf2
  40c1ad:	rcr    BYTE PTR [eax-0x39],cl
  40c1b0:	outs   dx,DWORD PTR ds:[esi]
  40c1b1:	xor    dh,BYTE PTR [ecx+0x3]
  40c1b4:	call   0x4ab0:0x2e41351
  40c1bb:	lds    edi,FWORD PTR [esi-0x27]
  40c1be:	push   esi
  40c1bf:	repnz fst st(4)
  40c1c2:	int    0xb3
  40c1c4:	cmp    dh,BYTE PTR [ecx+0x59]
  40c1c7:	aaa    
  40c1c8:	cmp    eax,0x59361bbf
  40c1cd:	cs int 0x86
  40c1d0:	push   ss
  40c1d1:	mov    edi,0xb4035c1f
  40c1d6:	push   ebx
  40c1d7:	add    cl,BYTE PTR ds:0x13cea8bf
  40c1dd:	dec    ecx
  40c1de:	or     ebx,eax
  40c1e0:	mov    ecx,0xed0b0a8b
  40c1e5:	push   esp
  40c1e6:	out    dx,al
  40c1e7:	addr16 das 
  40c1e9:	shl    bh,cl
  40c1eb:	xchg   edi,eax
  40c1ec:	push   ebx
  40c1ed:	adc    BYTE PTR [ebx+0x1fdaf4b7],0xdc
  40c1f4:	imul   ecx,ecx,0x20dea953
  40c1fa:	or     bh,BYTE PTR [esi-0x30c3b8ba]
  40c200:	dec    edi
  40c201:	pop    ebx
  40c202:	dec    eax
  40c203:	sar    DWORD PTR [ecx-0x5a],0xd5
  40c207:	cmp    DWORD PTR ds:0xfa64a9c9,esi
  40c20d:	(bad)
  40c210:	mov    ecx,0x74930028
  40c215:	cmp    eax,0xa7a00e82
  40c21a:	cld    
  40c21b:	popf   
  40c21c:	inc    edi
  40c21d:	mov    BYTE PTR [edx-0x1681ff70],al
  40c223:	imul   ebp,DWORD PTR [ebx-0x40],0xffffff99
  40c227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c228:	rep stos DWORD PTR es:[edi],eax
  40c22a:	(bad)  
  40c22b:	idiv   BYTE PTR [esi]
  40c22d:	ins    DWORD PTR es:[edi],dx
  40c22e:	xor    al,0x73
  40c230:	out    0x9a,eax
  40c232:	jae    0x40c2a1
  40c234:	rcl    DWORD PTR [ebx-0x5cce239f],cl
  40c23a:	(bad)  
  40c23b:	mov    ds:0xe4c757d7,eax
  40c240:	cdq    
  40c241:	add    bl,BYTE PTR [edi-0x7d76fc33]
  40c247:	cmp    eax,0xf2c6c9fa
  40c24c:	mov    ebx,0x28d2a2aa
  40c251:	adc    BYTE PTR [edx-0x69],dh
  40c254:	cmp    ch,BYTE PTR [ebx-0x5a]
  40c257:	cwde   
  40c258:	xchg   edi,eax
  40c259:	xchg   edx,eax
  40c25a:	retfw  
  40c25c:	and    DWORD PTR [edx+0x1d],0x490b7518
  40c263:	inc    ebx
  40c264:	pop    eax
  40c265:	lahf   
  40c266:	ja     0x40c289
  40c268:	push   cs
  40c269:	nop
  40c26a:	gs enter 0xd6d3,0x2d
  40c26f:	sbb    ecx,DWORD PTR [edi-0x51]
  40c272:	dec    esp
  40c273:	jge    0x40c269
  40c275:	jmp    0x99ea:0xe96a6d71
  40c27c:	(bad)  
  40c27d:	adc    DWORD PTR ds:0xc21293c7,ebx
  40c283:	ds inc edi
  40c285:	rcl    BYTE PTR [edi],1
  40c287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c288:	sbb    BYTE PTR [edx-0x1e305822],0xbe
  40c28f:	cld    
  40c290:	and    al,0x7f
  40c292:	sub    edi,DWORD PTR [ebx+0x5497be24]
  40c298:	jo     0x40c264
  40c29a:	mov    ch,0x52
  40c29c:	lahf   
  40c29d:	mov    cl,BYTE PTR [eax]
  40c29f:	pop    edi
  40c2a0:	inc    ebp
  40c2a1:	loopne 0x40c2d9
  40c2a3:	cwde   
  40c2a4:	fcomp  QWORD PTR [ecx+0x1e758a8f]
  40c2aa:	mov    BYTE PTR [ecx],dh
  40c2ac:	or     eax,0x11a093c8
  40c2b1:	inc    esp
  40c2b2:	test   DWORD PTR [esi-0x9],0xf59687aa
  40c2b9:	pop    edi
  40c2ba:	iret   
  40c2bb:	scas   al,BYTE PTR es:[edi]
  40c2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2bd:	jns    0x40c2ba
  40c2bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2c0:	or     ebx,DWORD PTR [edi]
  40c2c2:	lods   eax,DWORD PTR ds:[esi]
  40c2c3:	ret    0x192
  40c2c6:	mov    WORD PTR [edi+0x3ea97eb1],cs
  40c2cc:	mov    eax,ds:0x8d498c6f
  40c2d1:	mov    ds:0xad4c899e,al
  40c2d6:	mov    al,ds:0xd8277601
  40c2db:	and    ch,ch
  40c2dd:	popa   
  40c2de:	pop    ebx
  40c2df:	scas   al,BYTE PTR es:[edi]
  40c2e0:	jecxz  0x40c33a
  40c2e2:	or     al,cl
  40c2e4:	ins    BYTE PTR es:[edi],dx
  40c2e5:	stos   BYTE PTR es:[edi],al
  40c2e6:	test   al,0x4a
  40c2e8:	xor    DWORD PTR [eax],esp
  40c2ea:	stc    
  40c2eb:	scas   al,BYTE PTR es:[edi]
  40c2ec:	jno    0x40c322
  40c2ee:	add    al,BYTE PTR [eax+0x1c]
  40c2f1:	icebp  
  40c2f2:	imul   esi,DWORD PTR [esi-0x542be993],0xffffffd7
  40c2f9:	xchg   edi,eax
  40c2fa:	mov    edx,0x253dd070
  40c2ff:	jno    0x40c310
  40c301:	and    DWORD PTR ds:0x39d41799,ebx
  40c307:	inc    ebx
  40c308:	(bad)  
  40c309:	test   DWORD PTR [eax],0x5dd5edd7
  40c30f:	shl    DWORD PTR [eax-0x23],cl
  40c312:	jmp    0x40c337
  40c314:	das    
  40c315:	inc    eax
  40c316:	add    dh,dh
  40c318:	call   0xa0bb0ede
  40c31d:	jns    0x40c365
  40c31f:	mov    esi,0xad84a474
  40c324:	inc    ecx
  40c325:	hlt    
  40c326:	dec    esp
  40c327:	sti    
  40c328:	stos   DWORD PTR es:[edi],eax
  40c329:	fild   WORD PTR [eax]
  40c32b:	std    
  40c32c:	jmp    0x1a65114b
  40c331:	loopne 0x40c359
  40c333:	mov    DWORD PTR [edx-0x4f],edx
  40c336:	loopne 0x40c37e
  40c338:	icebp  
  40c339:	nop
  40c33a:	sub    bh,dh
  40c33c:	in     al,0x85
  40c33e:	mov    cl,0xe3
  40c340:	mov    al,ds:0xc32a711f
  40c345:	pop    es
  40c346:	out    0x4a,al
  40c348:	mov    ebx,0xef55ffd0
  40c34d:	loope  0x40c33c
  40c34f:	pop    ss
  40c350:	mov    BYTE PTR ds:0x2e8cbe5e,bh
  40c356:	xchg   esp,eax
  40c357:	iret   
  40c358:	stos   DWORD PTR es:[edi],eax
  40c359:	into   
  40c35a:	xor    BYTE PTR [ebp+0x51bb6802],dh
  40c360:	test   eax,0xdebe5434
  40c365:	or     eax,0xa9058c6f
  40c36a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c36b:	xor    DWORD PTR [esi+ecx*8-0xd],0xb7101c29
  40c373:	mov    edi,0xde8357a4
  40c378:	adc    esi,DWORD PTR [esi-0x2a15ffac]
  40c37e:	call   0xe2e5:0xe6d2e881
  40c385:	call   0x1c4689ed
  40c38a:	test   al,0x80
  40c38c:	inc    ebx
  40c38d:	mov    ebx,0xbbac771b
  40c392:	adc    BYTE PTR [ebx+0x1f868b78],cl
  40c398:	push   esp
  40c399:	push   0x2a033da6
  40c39e:	ins    DWORD PTR es:[edi],dx
  40c39f:	or     DWORD PTR [esi],0x2e375aab
  40c3a5:	and    ecx,edx
  40c3a7:	mov    edx,0x227793d9
  40c3ac:	sub    DWORD PTR [ebp-0x65a1b71f],edx
  40c3b2:	adc    DWORD PTR [eax],esp
  40c3b4:	leave  
  40c3b5:	and    BYTE PTR [edi-0x75],ah
  40c3b8:	ret    0xdddb
  40c3bb:	je     0x40c39a
  40c3bd:	in     al,0x81
  40c3bf:	test   DWORD PTR [ecx+0x6f6b040f],edi
  40c3c5:	dec    ebp
  40c3c6:	leave  
  40c3c7:	in     eax,dx
  40c3c8:	mov    eax,ds:0xdbd88d6b
  40c3cd:	adc    bh,dl
  40c3cf:	cmp    edi,DWORD PTR [esi]
  40c3d1:	pop    ecx
  40c3d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3d3:	stos   DWORD PTR es:[edi],eax
  40c3d4:	repz mov ecx,0x21b59b90
  40c3da:	fst    DWORD PTR [ecx]
  40c3dc:	repz jnp 0x40c3e6
  40c3df:	pop    ebp
  40c3e0:	in     al,dx
  40c3e1:	pop    es
  40c3e2:	lahf   
  40c3e3:	dec    BYTE PTR [edi]
  40c3e5:	sub    esi,DWORD PTR [edi+0x3684fd3c]
  40c3eb:	(bad)  
  40c3ec:	daa    
  40c3ed:	mov    esi,0xc2810ba
  40c3f2:	jmp    0x178a3a8b
  40c3f7:	in     al,dx
  40c3f8:	iret   
  40c3f9:	or     al,0x9e
  40c3fb:	ret    0x8e9c
  40c3fe:	pushf  
  40c3ff:	rcr    BYTE PTR [ebx+0x54],cl
  40c402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c403:	sub    DWORD PTR ds:0xd18fae77,ebx
  40c409:	rcr    esp,cl
  40c40b:	mov    al,ds:0xb395754b
  40c410:	les    ecx,FWORD PTR [ecx-0x3afa419d]
  40c416:	test   eax,0xe55efe8f
  40c41b:	pop    fs
  40c41d:	xor    al,0xd9
  40c41f:	pop    ecx
  40c420:	aad    0xb4
  40c422:	pop    esp
  40c423:	add    BYTE PTR [edx],ah
  40c425:	or     DWORD PTR [esi+0x39],0xffffff9c
  40c429:	rcl    DWORD PTR [eax+0x58],1
  40c42c:	shl    DWORD PTR [eax],cl
  40c42e:	adc    eax,0x58f5845
  40c433:	repz test DWORD PTR [esp],edx
  40c437:	(bad)  
  40c439:	stos   DWORD PTR es:[edi],eax
  40c43a:	jp     0x40c4b1
  40c43c:	jl     0x40c462
  40c43e:	adc    DWORD PTR [ebp+0x45],esp
  40c441:	fnstsw WORD PTR es:[ecx]
  40c444:	call   0x7db9:0x5cc4100
  40c44b:	sub    BYTE PTR [edi-0x4466f3b3],ch
  40c451:	dec    edx
  40c452:	jp     0x40c402
  40c454:	mov    ecx,0xa1832f4c
  40c459:	jo     0x40c3f0
  40c45b:	inc    esi
  40c45c:	push   ds
  40c45d:	add    BYTE PTR [ebp+eax*2+0x10],cl
  40c461:	lods   al,BYTE PTR ds:[esi]
  40c462:	push   esp
  40c463:	dec    ecx
  40c464:	add    eax,0x2e95d42a
  40c469:	shl    DWORD PTR fs:[ebp*8-0x5a84b373],0x50
  40c472:	sbb    eax,0x8d20c31
  40c477:	cs lahf 
  40c479:	adc    BYTE PTR [esi+0x11],bl
  40c47c:	jl     0x40c4f9
  40c47e:	sbb    al,0x86
  40c480:	retf   0x92f7
  40c483:	scas   al,BYTE PTR es:[edi]
  40c484:	in     al,dx
  40c485:	hlt    
  40c486:	jl     0x40c438
  40c488:	mov    al,ds:0x90b96fba
  40c48d:	cdq    
  40c48e:	jmp    0xe267:0xc83806d0
  40c495:	add    al,0x3
  40c497:	inc    BYTE PTR [ebx+0x6a23f91a]
  40c49d:	test   DWORD PTR [ebx-0x5e1f8ba6],edi
  40c4a3:	dec    esp
  40c4a4:	cmp    DWORD PTR [ecx-0x794683c7],esi
  40c4aa:	(bad)  
  40c4ab:	aad    0x87
  40c4ad:	mov    bl,0x4f
  40c4af:	and    dl,dl
  40c4b1:	repz dec edi
  40c4b3:	dec    esi
  40c4b4:	and    BYTE PTR [ebx],ah
  40c4b6:	mov    ebx,0xd164aaf1
  40c4bb:	arpl   WORD PTR [edx+eiz*1],bp
  40c4be:	fs adc eax,0x34cfd548
  40c4c4:	pop    ss
  40c4c5:	cwde   
  40c4c6:	and    DWORD PTR [edi],ebx
  40c4c8:	jl     0x40c514
  40c4ca:	ret    0x6aef
  40c4cd:	iret   
  40c4ce:	shl    BYTE PTR [ecx+0x7f],1
  40c4d1:	rol    BYTE PTR [edi+0x4b],cl
  40c4d4:	xchg   edx,eax
  40c4d5:	sbb    bh,al
  40c4d7:	dec    ecx
  40c4d8:	addr16 jns 0x40c4ff
  40c4db:	data16 (bad) 
  40c4dd:	rol    BYTE PTR [ecx+0x4f],cl
  40c4e0:	in     al,0x2c
  40c4e2:	pushw  es
  40c4e4:	and    edx,ebp
  40c4e6:	push   es
  40c4e7:	popa   
  40c4e8:	add    al,0x7f
  40c4ea:	adc    ah,BYTE PTR [ebx+0x7]
  40c4ed:	lods   eax,DWORD PTR ds:[esi]
  40c4ee:	retf   0xe4cd
  40c4f1:	inc    esi
  40c4f2:	mov    ds:0xc19c18d9,al
  40c4f7:	push   eax
  40c4f8:	xchg   esp,eax
  40c4f9:	cmp    al,al
  40c4fb:	pop    ebp
  40c4fc:	into   
  40c4fd:	push   ds
  40c4fe:	or     dl,BYTE PTR [eax+eax*8]
  40c501:	mov    cl,0xf0
  40c503:	xchg   ebp,eax
  40c504:	inc    esi
  40c505:	lods   eax,DWORD PTR ds:[esi]
  40c506:	jg     0x40c580
  40c508:	lock xor esi,ecx
  40c50b:	jne    0x40c500
  40c50d:	pop    es
  40c50e:	ins    DWORD PTR es:[edi],dx
  40c50f:	mov    ds:0x8ed2898a,eax
  40c514:	sub    eax,0x20ce2d9
  40c519:	cmp    DWORD PTR [eax+0x70838592],edx
  40c51f:	retf   
  40c520:	aam    0x5c
  40c522:	loope  0x40c584
  40c524:	div    BYTE PTR [ecx]
  40c526:	push   ecx
  40c527:	push   cs
  40c528:	sbb    eax,0x9b9f4ede
  40c52d:	sbb    dl,al
  40c52f:	inc    esi
  40c530:	jge    0x40c53f
  40c532:	fcomp  DWORD PTR [ebx]
  40c534:	ja     0x40c566
  40c536:	xchg   esi,eax
  40c537:	daa    
  40c538:	lock xor esi,DWORD PTR [ecx+0x240931f7]
  40c53f:	jnp    0x40c531
  40c541:	xchg   edx,eax
  40c542:	ror    DWORD PTR [edi+0x1fe9f78e],0x76
  40c549:	add    al,0x2a
  40c54b:	push   edi
  40c54c:	sbb    BYTE PTR [ecx],dh
  40c54e:	mov    ah,0x95
  40c550:	out    dx,al
  40c551:	dec    ecx
  40c552:	add    ebp,edi
  40c554:	fwait
  40c555:	sub    dl,cl
  40c557:	mov    ch,0x52
  40c559:	mov    bh,0xd9
  40c55b:	cmp    esi,DWORD PTR [ecx-0x9]
  40c55e:	jge    0x40c57c
  40c560:	xor    DWORD PTR [edx-0x106fab60],esi
  40c566:	pop    ds
  40c567:	pop    esi
  40c568:	fsub   DWORD PTR [eax-0x77]
  40c56b:	out    0xe7,al
  40c56d:	sbb    al,0xfa
  40c56f:	ja     0x40c50b
  40c571:	sub    al,0x42
  40c573:	adc    eax,0x6af1f417
  40c578:	pop    ebp
  40c579:	mov    ch,0x64
  40c57b:	les    eax,FWORD PTR [eiz*2+0x50b94cf4]
  40c582:	pop    edi
  40c583:	push   0x7433e55e
  40c588:	ins    BYTE PTR es:[edi],dx
  40c589:	sbb    edx,DWORD PTR [esi+edi*1+0x7c]
  40c58d:	adc    DWORD PTR [ecx+0x5b324122],eax
  40c593:	add    DWORD PTR [edx+0x5f7c0bf7],eax
  40c599:	and    al,BYTE PTR [ebx+0x100fdb63]
  40c59f:	jle    0x40c53a
  40c5a1:	xchg   BYTE PTR [ebx],bl
  40c5a3:	add    al,0x3e
  40c5a5:	cdq    
  40c5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5a7:	aam    0x3b
  40c5a9:	and    DWORD PTR [ebx],esp
  40c5ab:	mov    edx,0xb51a9cb5
  40c5b0:	xor    edi,DWORD PTR [ecx+0x62b2dea6]
  40c5b6:	scas   al,BYTE PTR es:[di]
  40c5b8:	inc    ecx
  40c5b9:	retf   0xa27e
  40c5bc:	hlt    
  40c5bd:	lods   eax,DWORD PTR ds:[esi]
  40c5be:	cmc    
  40c5bf:	inc    esp
  40c5c0:	mov    bl,0x63
  40c5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5c3:	loope  0x40c604
  40c5c5:	add    dl,BYTE PTR [eax+0x68]
  40c5c8:	push   ebx
  40c5c9:	cmp    al,0x3e
  40c5cb:	dec    esi
  40c5cc:	fs pop ebx
  40c5ce:	outs   dx,BYTE PTR ds:[esi]
  40c5cf:	adc    BYTE PTR [eax+edi*4],cl
  40c5d2:	sbb    eax,0x2d7c6649
  40c5d7:	lods   al,BYTE PTR ds:[esi]
  40c5d8:	fcomp  DWORD PTR [esi+edx*8+0x71]
  40c5dc:	outs   dx,DWORD PTR ds:[esi]
  40c5dd:	pop    esp
  40c5de:	fld    QWORD PTR [eax-0x76565ece]
  40c5e4:	lahf   
  40c5e5:	adc    DWORD PTR [ebx+0x6f],ecx
  40c5e8:	push   ebp
  40c5e9:	jmp    0xd5a4:0xd6ac2f1b
  40c5f0:	adc    BYTE PTR [esi+0x3a],dh
  40c5f3:	xchg   esi,eax
  40c5f4:	cmp    BYTE PTR [ebp+0x56242713],0x12
  40c5fb:	mov    bh,0xdc
  40c5fd:	scas   eax,DWORD PTR es:[edi]
  40c5fe:	dec    esi
  40c5ff:	push   es
  40c600:	nop
  40c601:	mov    dl,0x65
  40c603:	nop
  40c604:	pushf  
  40c605:	mov    al,ds:0xa3f96ec0
  40c60a:	push   edx
  40c60b:	arpl   dx,sp
  40c60d:	(bad)  
  40c60e:	lods   eax,DWORD PTR ds:[esi]
  40c60f:	shl    DWORD PTR [esi],1
  40c611:	enter  0xfb0,0x4b
  40c615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c616:	add    al,0x6c
  40c618:	mov    DWORD PTR [edx],ebp
  40c61a:	ss addr16 popa 
  40c61d:	out    dx,al
  40c61e:	jb     0x40c65a
  40c620:	sub    DWORD PTR [eax-0x1b8bbb7c],ebx
  40c626:	shr    BYTE PTR [esi],cl
  40c628:	das    
  40c629:	cmp    cl,BYTE PTR [edi]
  40c62b:	sbb    edx,0xffffffe4
  40c62e:	sbb    ebx,eax
  40c630:	addr16 cwde 
  40c632:	pop    eax
  40c633:	mov    ch,0xc0
  40c635:	mov    ecx,DWORD PTR [esi-0x39]
  40c638:	xchg   ebp,eax
  40c639:	push   ecx
  40c63a:	dec    ebp
  40c63b:	and    edx,esi
  40c63d:	dec    eax
  40c63e:	call   0x351b:0x6b7b7a32
  40c645:	xlat   BYTE PTR ds:[ebx]
  40c646:	push   edi
  40c647:	ret    
  40c648:	fidivr DWORD PTR [edx+0x2835a75b]
  40c64e:	fdiv   st(2),st
  40c650:	aas    
  40c651:	lods   eax,DWORD PTR ds:[esi]
  40c652:	fbld   TBYTE PTR [ecx]
  40c654:	aaa    
  40c655:	fisubr DWORD PTR [ecx-0x79]
  40c658:	dec    ebp
  40c659:	jecxz  0x40c69f
  40c65b:	std    
  40c65c:	dec    esp
  40c65d:	cmp    DWORD PTR ds:0x2c54512f,eax
  40c663:	cmc    
  40c664:	pusha  
  40c665:	fsub   st,st(4)
  40c667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c668:	sbb    eax,0xfc12c175
  40c66d:	xor    BYTE PTR [ebx-0x5d],ah
  40c670:	dec    edi
  40c671:	sbb    BYTE PTR [edx],dh
  40c673:	mov    ebp,0xa80c9b3
  40c678:	fwait
  40c679:	inc    ecx
  40c67a:	inc    ebx
  40c67b:	test   eax,0xe6304805
  40c680:	pop    edx
  40c681:	outs   dx,BYTE PTR ds:[esi]
  40c682:	jb     0x40c654
  40c684:	imul   edi,DWORD PTR [ecx-0x1b939bfb],0xffffff84
  40c68b:	in     al,dx
  40c68c:	jle    0x40c699
  40c68e:	std    
  40c68f:	sub    eax,0xb5a40b54
  40c694:	xchg   ecx,eax
  40c695:	jle    0x40c6f7
  40c697:	stos   DWORD PTR es:[edi],eax
  40c698:	sbb    al,0x45
  40c69a:	stc    
  40c69b:	fwait
  40c69c:	imul   ecx,DWORD PTR [ebx],0xffffff84
  40c69f:	shl    dh,cl
  40c6a1:	rol    DWORD PTR [ecx],cl
  40c6a3:	cmp    ebx,esp
  40c6a5:	cmp    eax,0x7f23757f
  40c6aa:	in     al,0x83
  40c6ac:	adc    BYTE PTR [bx+di+0x51cf],cl
  40c6b1:	push   0xe5d7af70
  40c6b6:	xlat   BYTE PTR ds:[ebx]
  40c6b7:	lods   al,BYTE PTR ds:[esi]
  40c6b8:	aaa    
  40c6b9:	push   cs
  40c6ba:	cmp    eax,DWORD PTR cs:[edx-0x40]
  40c6be:	nop
  40c6bf:	xchg   ebp,eax
  40c6c0:	iret   
  40c6c1:	in     eax,0xea
  40c6c3:	add    dl,ah
  40c6c5:	jecxz  0x40c6cb
  40c6c7:	add    al,0x1c
  40c6c9:	dec    ecx
  40c6ca:	mov    dh,0x4c
  40c6cc:	loope  0x40c693
  40c6ce:	cmc    
  40c6cf:	or     BYTE PTR [ebx-0x66],cl
  40c6d2:	sub    cl,BYTE PTR [ebx+ecx*2+0x60e55162]
  40c6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6da:	ret    
  40c6db:	fsub   QWORD PTR [esi+0x17]
  40c6de:	js     0x40c75d
  40c6e0:	push   edi
  40c6e1:	adc    al,0x20
  40c6e3:	xlat   BYTE PTR ds:[ebx]
  40c6e4:	and    bh,BYTE PTR [edx+eax*1]
  40c6e7:	inc    eax
  40c6e8:	icebp  
  40c6e9:	xor    ebx,edx
  40c6eb:	repnz aas 
  40c6ed:	fsubrp st(5),st
  40c6ef:	add    DWORD PTR [ebp+0x3b5d52d2],ecx
  40c6f5:	leave  
  40c6f6:	mov    eax,ds:0xed68df52
  40c6fb:	rcl    BYTE PTR [eax+edx*1+0x48],0x71
  40c700:	int3   
  40c701:	inc    eax
  40c702:	fild   DWORD PTR [edi+0xf]
  40c705:	shl    DWORD PTR [edx+0xb34ab2e],cl
  40c70b:	jne    0x40c74c
  40c70d:	adc    edi,DWORD PTR [edx+0x9b7becf]
  40c713:	psllq  mm3,QWORD PTR [ebp-0x4c]
  40c717:	push   ss
  40c718:	add    eax,0x21b06f24
  40c71d:	cmc    
  40c71e:	out    0xe4,eax
  40c720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c721:	out    dx,eax
  40c722:	mov    ebx,0xe56df7b1
  40c727:	inc    ecx
  40c728:	test   DWORD PTR [ecx+0x26],eax
  40c72b:	dec    edx
  40c72c:	add    al,BYTE PTR [ebx-0x5e]
  40c72f:	arpl   WORD PTR [esi+esi*8-0x4f6cd453],di
  40c736:	pop    esp
  40c737:	idiv   DWORD PTR [esi+0x7554b905]
  40c73d:	inc    esi
  40c73e:	ins    BYTE PTR es:[edi],dx
  40c73f:	or     DWORD PTR [esi+0x2336083d],ebx
  40c745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c746:	fs cwde 
  40c748:	add    al,0x68
  40c74a:	arpl   WORD PTR [edx],cx
  40c74c:	or     ah,BYTE PTR [ebx+ecx*8]
  40c74f:	adc    BYTE PTR [ebx],dh
  40c751:	add    BYTE PTR [edi+0x46ffaecd],al
  40c757:	pop    ss
  40c758:	and    eax,DWORD PTR [ebp+0x6c1c51a0]
  40c75e:	rcr    DWORD PTR [eax+0x7],1
  40c761:	xor    al,0xde
  40c763:	ret    
  40c764:	daa    
  40c765:	repz mov edx,0xe21da1b7
  40c76b:	add    ebp,DWORD PTR [edx+0x10]
  40c76e:	xchg   ecx,eax
  40c76f:	or     eax,0x83243ec
  40c774:	aas    
  40c775:	add    ebx,DWORD PTR [edx+ecx*2]
  40c778:	outs   dx,DWORD PTR ds:[esi]
  40c779:	sbb    eax,0x1d60e60e
  40c77e:	mov    cl,0xc
  40c780:	sub    dl,BYTE PTR [edx+0x66]
  40c783:	inc    esi
  40c784:	and    eax,DWORD PTR [ebx-0x37]
  40c787:	adc    eax,0x3711f9d
  40c78c:	cmp    ecx,esp
  40c78e:	mov    ch,0x47
  40c790:	jmp    0xe479d663
  40c795:	jb     0x40c71d
  40c797:	inc    edi
  40c798:	pop    eax
  40c799:	mov    al,ds:0xdfef748b
  40c79e:	xchg   esp,eax
  40c79f:	ja     0x40c724
  40c7a1:	xchg   edi,eax
  40c7a2:	xchg   ebp,eax
  40c7a3:	popa   
  40c7a4:	sub    edi,DWORD PTR [eax-0x39b89f93]
  40c7aa:	add    al,0x5b
  40c7ac:	push   0x294f5b09
  40c7b1:	rcr    eax,0x4a
  40c7b4:	shr    bl,0x9b
  40c7b7:	cmp    BYTE PTR [edx-0xb],bh
  40c7ba:	leave  
  40c7bb:	jmp    0xcb31:0x671662ac
  40c7c2:	call   0xb424:0x459fc726
  40c7c9:	shr    BYTE PTR [edx+0x48429e8a],0x5f
  40c7d0:	cmc    
  40c7d1:	test   eax,ecx
  40c7d3:	jecxz  0x40c802
  40c7d5:	sar    bh,1
  40c7d7:	inc    ebx
  40c7d8:	fild   QWORD PTR ds:0x4a0f8775
  40c7de:	pop    es
  40c7df:	outs   dx,BYTE PTR ds:[esi]
  40c7e0:	mov    dh,0xc0
  40c7e2:	retf   
  40c7e3:	sub    DWORD PTR [ebx],edx
  40c7e5:	sti    
  40c7e6:	scas   eax,DWORD PTR es:[edi]
  40c7e7:	and    eax,0x5d68bc51
  40c7ec:	mov    ?,WORD PTR [ebx]
  40c7ee:	dec    esp
  40c7ef:	sub    eax,0xbfe3ff94
  40c7f4:	push   ecx
  40c7f5:	dec    eax
  40c7f6:	jl     0x40c7c5
  40c7f8:	lahf   
  40c7f9:	mov    edx,esi
  40c7fb:	dec    BYTE PTR [esi+0x38]
  40c7fe:	aad    0xaf
  40c800:	adc    ebp,DWORD PTR [ebx+0x6d4bb504]
  40c806:	in     al,dx
  40c807:	inc    ecx
  40c808:	adc    al,0x19
  40c80a:	mov    ds:0x22184a23,eax
  40c80f:	mov    ds:0x520c4dc6,eax
  40c814:	inc    esi
  40c815:	dec    esp
  40c816:	mov    ecx,0x91e5ed02
  40c81b:	out    dx,eax
  40c81c:	xchg   ch,bl
  40c81e:	adc    BYTE PTR [edi-0x1f8229e3],ah
  40c824:	stos   BYTE PTR es:[edi],al
  40c825:	jno    0x40c7a9
  40c827:	repnz in al,dx
  40c829:	js     0x40c84c
  40c82b:	or     eax,0x1e9123d3
  40c830:	or     DWORD PTR [ebx],ebp
  40c832:	dec    esi
  40c833:	lock inc eax
  40c835:	pop    edi
  40c836:	sar    BYTE PTR [esi],cl
  40c838:	xchg   ebp,eax
  40c839:	jbe    0x40c814
  40c83b:	jmp    0x40c807
  40c83d:	std    
  40c83e:	mov    cl,0xed
  40c840:	inc    edi
  40c841:	retf   
  40c842:	or     DWORD PTR [eax+0x2b1d8739],0x17278ac6
  40c84c:	pop    edx
  40c84d:	fadd   QWORD PTR [ebp+0x17]
  40c850:	fcmovne st,st(7)
  40c852:	inc    edi
  40c853:	call   0x2c83313d
  40c858:	inc    edx
  40c859:	retf   
  40c85a:	repz inc esp
  40c85c:	xchg   esi,eax
  40c85d:	imul   edx,ebp
  40c860:	fwait
  40c861:	jge    0x40c874
  40c863:	cmc    
  40c864:	(bad)  
  40c865:	and    al,0x1f
  40c867:	mov    eax,0xb5a89351
  40c86c:	pop    esp
  40c86d:	xor    BYTE PTR [esi+ecx*4+0x3beeb946],ch
  40c874:	ja     0x40c82c
  40c876:	mov    ah,0xab
  40c878:	mov    al,ds:0x5e0e4294
  40c87d:	popf   
  40c87e:	inc    edi
  40c87f:	pop    eax
  40c880:	icebp  
  40c881:	pusha  
  40c882:	dec    esp
  40c883:	xor    eax,0xd117ff4a
  40c888:	sub    bh,dh
  40c88a:	mov    cl,0xb5
  40c88c:	push   0xf2764d03
  40c891:	in     eax,dx
  40c892:	jp     0x40c878
  40c894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c895:	ret    0xcb23
  40c898:	enter  0xd0e6,0xd
  40c89c:	inc    esp
  40c89d:	and    eax,0xe8ede300
  40c8a2:	xor    BYTE PTR [ebx-0x7284a387],cl
  40c8a8:	sbb    BYTE PTR [edx],ch
  40c8aa:	and    al,0x8c
  40c8ac:	sbb    ecx,DWORD PTR [esi-0x6e51258]
  40c8b2:	out    dx,al
  40c8b3:	pushf  
  40c8b4:	sbb    eax,0x72
  40c8b7:	xchg   DWORD PTR [edx],ecx
  40c8b9:	jecxz  0x40c870
  40c8bb:	mov    eax,ds:0x275cacb3
  40c8c0:	xlat   BYTE PTR ds:[ebx]
  40c8c1:	(bad)  
  40c8c2:	rcl    ch,1
  40c8c4:	and    BYTE PTR [esi+0x329ed889],bl
  40c8ca:	sbb    al,0x24
  40c8cc:	js     0x40c875
  40c8ce:	cmp    ch,ch
  40c8d0:	mov    eax,ds:0xfaa0cd04
  40c8d5:	push   esp
  40c8d6:	repz cmp bl,bl
  40c8d9:	fiadd  DWORD PTR [ecx-0x55]
  40c8dc:	cwde   
  40c8dd:	jnp    0x40c8f7
  40c8df:	add    cl,BYTE PTR [edx]
  40c8e1:	repnz nop
  40c8e3:	adc    al,0x26
  40c8e5:	mov    bh,ch
  40c8e7:	mov    dl,0x56
  40c8e9:	and    BYTE PTR [esp+esi*8-0x3c],dl
  40c8ed:	sub    BYTE PTR [eax-0x62],dh
  40c8f0:	outs   dx,BYTE PTR ds:[esi]
  40c8f1:	adc    eax,0xe71a5f4b
  40c8f6:	and    edi,DWORD PTR [ebx+0x507c709b]
  40c8fc:	add    al,BYTE PTR [ebx]
  40c8fe:	add    DWORD PTR [edi],ebp
  40c900:	inc    edi
  40c901:	inc    ecx
  40c902:	mov    ecx,0x503fcaa9
  40c907:	loope  0x40c8d8
  40c909:	lods   al,BYTE PTR ds:[esi]
  40c90a:	mov    ah,0xdb
  40c90c:	arpl   WORD PTR [esi+eiz*4],cx
  40c90f:	inc    ecx
  40c910:	push   esp
  40c911:	mov    edi,DWORD PTR [edx+0x5bbbf470]
  40c917:	dec    ebp
  40c918:	popf   
  40c919:	ficomp DWORD PTR [eax+0x4c]
  40c91c:	mov    ecx,0xb5532c4f
  40c921:	sbb    edx,esi
  40c923:	inc    ecx
  40c924:	aam    0xca
  40c926:	xor    eax,0xdb78e37a
  40c92b:	mov    ebp,0x293625c0
  40c930:	adc    eax,0x4c01b8f6
  40c935:	cmp    cl,BYTE PTR [edi+0x1a1a353e]
  40c93b:	popa   
  40c93c:	fldl2e 
  40c93e:	jge    0x40c92e
  40c940:	xor    ah,BYTE PTR [edi]
  40c942:	fcomi  st,st(1)
  40c944:	mov    ds:0xf9e52f40,eax
  40c949:	mov    dh,0x3e
  40c94b:	aaa    
  40c94c:	sbb    BYTE PTR [edx+0x56cf1a72],ah
  40c952:	push   ebp
  40c953:	push   0x3f28dda7
  40c958:	mov    al,ds:0x77831107
  40c95d:	cs pop edi
  40c95f:	jg     0x40c95a
  40c961:	cmp    ebx,DWORD PTR [ecx+ebx*2]
  40c964:	cwde   
  40c965:	fwait
  40c966:	fs cmc 
  40c968:	dec    esi
  40c969:	dec    esi
  40c96a:	ficomp DWORD PTR [ebp-0x7fde50d1]
  40c970:	or     ebx,ebx
  40c972:	inc    esp
  40c973:	fadd   QWORD PTR [ebp+esi*4+0x3fde7470]
  40c97a:	nop
  40c97b:	inc    esp
  40c97c:	xlat   BYTE PTR ds:[ebx]
  40c97d:	fsub   st,st(0)
  40c97f:	jmp    0x40c9d2
  40c981:	lahf   
  40c982:	jne    0x40c927
  40c984:	inc    esi
  40c985:	or     al,0xcd
  40c987:	cld    
  40c988:	xor    edx,DWORD PTR [edi-0x7f]
  40c98b:	mov    esi,0x9741c973
  40c990:	add    edi,DWORD PTR [edx-0x633c0fcd]
  40c996:	addr16 push edi
  40c998:	mov    edi,0x7c4e710c
  40c99d:	cli    
  40c99e:	push   cs
  40c99f:	ficomp DWORD PTR [edx-0x2d]
  40c9a2:	addr16 icebp 
  40c9a4:	add    DWORD PTR [esi+0x39],ecx
  40c9a7:	add    BYTE PTR [eax+eax*2+0x17e788c1],dh
  40c9ae:	pop    ebp
  40c9af:	in     al,dx
  40c9b0:	jae    0x40c96b
  40c9b2:	xor    DWORD PTR [ebx+esi*4-0x73],esi
  40c9b6:	jne    0x40ca25
  40c9b8:	inc    edi
  40c9b9:	lods   al,BYTE PTR ds:[esi]
  40c9ba:	mov    gs:0x6d05b718,eax
  40c9c0:	mov    ch,0xfc
  40c9c2:	sahf   
  40c9c3:	and    al,0xaa
  40c9c5:	stc    
  40c9c6:	xchg   ebp,esp
  40c9c8:	ret    0x55da
  40c9cb:	pushf  
  40c9cc:	js     0x40c9a8
  40c9ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9d0:	mov    eax,0xdfdffd63
  40c9d5:	xchg   ebx,eax
  40c9d6:	idiv   DWORD PTR [edx-0x47ca7b60]
  40c9dc:	icebp  
  40c9dd:	push   eax
  40c9de:	int    0xd7
  40c9e0:	ins    BYTE PTR es:[edi],dx
  40c9e1:	lods   eax,DWORD PTR ds:[esi]
  40c9e2:	mov    bl,0x1e
  40c9e4:	clc    
  40c9e5:	pop    ebx
  40c9e6:	sub    al,BYTE PTR [ecx+0x798c01c8]
  40c9ec:	mov    ch,0x7c
  40c9ee:	fmul   DWORD PTR [esi]
  40c9f0:	adc    DWORD PTR [ebp-0x46],0x6885c223
  40c9f7:	sbb    eax,0x273b446
  40c9fc:	fs sbb bh,al
  40c9ff:	mov    esi,ebp
  40ca01:	push   0xc1cd432e
  40ca06:	push   es
  40ca07:	mov    al,BYTE PTR [ebp-0x6ca159d4]
  40ca0d:	cs (bad) 
  40ca0f:	imul   edx,esp,0x4e09607b
  40ca15:	imul   esp,DWORD PTR [esi],0xffffffb6
  40ca18:	ins    DWORD PTR es:[edi],dx
  40ca19:	scas   al,BYTE PTR es:[edi]
  40ca1a:	int    0xd7
  40ca1c:	add    eax,0x77a7e2c4
  40ca21:	push   ss
  40ca22:	ja     0x40ca8b
  40ca24:	popf   
  40ca25:	sub    ecx,DWORD PTR [eax-0x5f8073b6]
  40ca2b:	(bad)  
  40ca2d:	mov    edx,0xef051046
  40ca32:	shl    DWORD PTR [esi],cl
  40ca34:	scas   eax,DWORD PTR es:[edi]
  40ca35:	shl    DWORD PTR [ecx+0xa6d293a],0x14
  40ca3c:	mov    DWORD PTR [edi+0x38],esi
  40ca3f:	sbb    edi,edx
  40ca41:	jge    0x40ca5b
  40ca43:	and    BYTE PTR [ecx],dh
  40ca45:	test   al,0x66
  40ca47:	push   esp
  40ca48:	xor    esi,esi
  40ca4a:	push   esp
  40ca4b:	mov    esp,0x9770801f
  40ca50:	cwde   
  40ca51:	dec    ecx
  40ca52:	fdiv   DWORD PTR [ecx-0xe]
  40ca55:	jno    0x40ca5d
  40ca57:	jbe    0x40ca49
  40ca59:	fiadd  DWORD PTR [esi]
  40ca5b:	ins    WORD PTR es:[edi],dx
  40ca5d:	cmp    al,0x78
  40ca5f:	(bad)  
  40ca60:	sbb    ch,BYTE PTR ds:[esp+eax*2]
  40ca64:	cli    
  40ca65:	jg     0x40cab3
  40ca67:	arpl   bp,ax
  40ca69:	mov    esi,0xddbdb46a
  40ca6e:	mov    al,ds:0x567f7381
  40ca73:	imul   edx,DWORD PTR [ebx+0x599a132a],0xfffffff3
  40ca7a:	addr16 adc eax,0x97009bdc
  40ca80:	aas    
  40ca81:	mov    bh,0x89
  40ca83:	ins    BYTE PTR es:[edi],dx
  40ca84:	inc    ebp
  40ca85:	pop    ecx
  40ca86:	outs   dx,DWORD PTR ds:[esi]
  40ca87:	sub    al,0x70
  40ca89:	std    
  40ca8a:	aaa    
  40ca8b:	test   BYTE PTR [esi],dl
  40ca8d:	scas   al,BYTE PTR es:[edi]
  40ca8e:	sub    ecx,DWORD PTR [esi]
  40ca90:	dec    esp
  40ca91:	push   ss
  40ca92:	bound  ecx,QWORD PTR [eax]
  40ca94:	xor    bh,BYTE PTR [ebp-0x2a]
  40ca97:	adc    al,0xb6
  40ca99:	pop    ebp
  40ca9a:	xchg   DWORD PTR [edi+0x62],ebx
  40ca9d:	mov    eax,ds:0x43a5a690
  40caa2:	sbb    al,0xf3
  40caa4:	sub    cl,al
  40caa6:	adc    eax,0xec5777da
  40caab:	pop    ebx
  40caac:	outs   dx,DWORD PTR ds:[esi]
  40caad:	fadd   DWORD PTR [ecx]
  40caaf:	sbb    BYTE PTR [ebx+0x7d8bfc45],cl
  40cab5:	clc    
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0xb4bf59a2,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40cd82
  40cde1:	repz cwde 
  40cde3:	cmc    
  40cde4:	xor    DWORD PTR [edx],edi
  40cde6:	js     0x40ce0d
  40cde8:	pop    ecx
  40cde9:	in     al,0xa0
  40cdeb:	inc    ecx
  40cdec:	dec    ebp
  40cded:	test   eax,0xbbff60ec
  40cdf2:	push   ebx
  40cdf3:	push   ecx
  40cdf4:	sti    
  40cdf5:	scas   eax,DWORD PTR es:[edi]
  40cdf6:	mov    ebx,0xe576ea4e
  40cdfb:	add    al,0xbc
  40cdfd:	out    0xda,al
  40cdff:	stc    
  40ce00:	sahf   
  40ce01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce02:	mov    DWORD PTR [esi],0x5e5ca4c4
  40ce08:	out    0xfc,eax
  40ce0a:	mov    edx,0xbecb85d4
  40ce0f:	test   al,0x5d
  40ce11:	and    eax,0x47b59fd0
  40ce16:	cmp    DWORD PTR [edi-0x53d2bda7],esi
  40ce1c:	loope  0x40cde5
  40ce1e:	xor    eax,0xd8ad3a4a
  40ce23:	loope  0x40cdd2
  40ce25:	stos   BYTE PTR es:[edi],al
  40ce26:	adc    BYTE PTR [esi-0x32],0xc
  40ce2a:	and    al,0xf5
  40ce2c:	xchg   edi,eax
  40ce2d:	pop    edi
  40ce2e:	pop    esi
  40ce2f:	xor    BYTE PTR [edi+ebx*2],0xd5
  40ce33:	mov    ch,0xb1
  40ce35:	lods   eax,DWORD PTR ds:[esi]
  40ce36:	xor    cl,bl
  40ce38:	div    esp
  40ce3a:	or     ch,0x33
  40ce3d:	setb   BYTE PTR [ebp+ebx*2-0x6f]
  40ce42:	mov    edx,DWORD PTR [ecx]
  40ce44:	(bad)  
  40ce45:	mov    WORD PTR [edi+0x58],ds
  40ce48:	pop    eax
  40ce49:	and    al,0x37
  40ce4b:	ja     0x40ce18
  40ce4d:	sub    DWORD PTR [ecx+0x36],esi
  40ce50:	cwde   
  40ce51:	xchg   dh,bh
  40ce53:	push   edi
  40ce54:	sbb    ebx,DWORD PTR [edi-0x79a7af40]
  40ce5a:	cmp    al,0x1a
  40ce5c:	mul    ch
  40ce5e:	out    dx,al
  40ce5f:	mov    WORD PTR [edi-0x270b8dc6],ds
  40ce65:	addr16 jo 0x40ced8
  40ce68:	mov    ds:0xe135ca45,eax
  40ce6d:	fmulp  st(6),st
  40ce6f:	or     BYTE PTR [esi-0x6a3152e8],ah
  40ce75:	sbb    BYTE PTR [ecx],ah
  40ce77:	repnz pop ecx
  40ce79:	sub    dh,BYTE PTR [ecx+0xa]
  40ce7c:	fcomp  DWORD PTR [edi]
  40ce7e:	sbb    eax,0xe25f0234
  40ce83:	loopne 0x40cea8
  40ce85:	xchg   ebx,eax
  40ce86:	xor    BYTE PTR [ecx-0x59],al
  40ce89:	fbstp  TBYTE PTR [edx-0x2c536a20]
  40ce8f:	outs   dx,BYTE PTR ds:[esi]
  40ce90:	je     0x40cec3
  40ce92:	add    ah,cl
  40ce94:	imul   eax,ebp,0xaf69601f
  40ce9a:	inc    ebx
  40ce9b:	test   BYTE PTR [ebx],bl
  40ce9d:	in     eax,0xe5
  40ce9f:	outs   dx,BYTE PTR ds:[esi]
  40cea0:	xor    BYTE PTR cs:[ebx+0x60],0x1e
  40cea5:	adc    al,0x71
  40cea7:	xor    cl,BYTE PTR [ebx+0x3773c2c6]
  40cead:	cs (bad) 
  40ceaf:	jge    0x40ceb5
  40ceb1:	dec    ecx
  40ceb2:	test   esp,0xfde24519
  40ceb8:	fcom   QWORD PTR [ebp+edi*8+0x74]
  40cebc:	nop
  40cebd:	hlt    
  40cebe:	int    0x4
  40cec0:	into   
  40cec1:	shl    al,0x4f
  40cec4:	push   0xec3b6c16
  40cec9:	cld    
  40ceca:	not    DWORD PTR [ebx+0x14]
  40cecd:	stos   BYTE PTR es:[edi],al
  40cece:	icebp  
  40cecf:	jl     0x40cefc
  40ced1:	mov    ch,0xd4
  40ced3:	fs jne 0x40ce6d
  40ced6:	loopne 0x40ce62
  40ced8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ced9:	xchg   ebp,eax
  40ceda:	dec    ecx
  40cedb:	pop    es
  40cedc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cedd:	out    dx,al
  40cede:	jae    0x40cea1
  40cee0:	ins    DWORD PTR es:[edi],dx
  40cee1:	sub    BYTE PTR [edi],dl
  40cee3:	imul   esi,edx,0x91237133
  40cee9:	in     eax,0x9
  40ceeb:	outs   dx,DWORD PTR ds:[esi]
  40ceec:	sahf   
  40ceed:	in     eax,0x6c
  40ceef:	sti    
  40cef0:	and    eax,0xdea73c8c
  40cef5:	daa    
  40cef6:	sbb    esi,esi
  40cef8:	outs   dx,BYTE PTR ds:[esi]
  40cef9:	cld    
  40cefa:	call   0xfb9fd419
  40ceff:	scas   al,BYTE PTR es:[edi]
  40cf00:	fs aaa 
  40cf02:	outs   dx,BYTE PTR ds:[esi]
  40cf03:	int    0x60
  40cf05:	inc    ebx
  40cf06:	in     al,0xad
  40cf08:	mov    DWORD PTR [ecx-0x67],esi
  40cf0b:	and    DWORD PTR [esi+ebp*1-0x72],edx
  40cf0f:	fstp   TBYTE PTR [ecx+0x12]
  40cf12:	jbe    0x40ceff
  40cf14:	test   bl,dl
  40cf16:	inc    ebp
  40cf17:	sub    DWORD PTR [edx+0x3c],ebx
  40cf1a:	icebp  
  40cf1b:	mov    ah,0x41
  40cf1d:	jmp    0x40ceea
  40cf1f:	cs ret 0x1985
  40cf23:	bound  edi,QWORD PTR [ecx+0x764ce275]
  40cf29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf2a:	inc    esp
  40cf2b:	inc    ecx
  40cf2c:	adc    ebx,DWORD PTR [edx-0x35ae7da4]
  40cf32:	arpl   WORD PTR [ecx],ax
  40cf34:	xchg   edx,eax
  40cf35:	dec    ecx
  40cf36:	jnp    0x40cf1c
  40cf38:	add    DWORD PTR [edx+0x25],ebp
  40cf3b:	xchg   edi,eax
  40cf3c:	fistp  QWORD PTR [edx+esi*8-0x74]
  40cf40:	mov    esp,0x6e84832c
  40cf45:	pop    edi
  40cf46:	jnp    0x40cf01
  40cf48:	repz aam 0x98
  40cf4b:	xor    eax,0x932f1680
  40cf50:	pushf  
  40cf51:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf53:	(bad)  
  40cf54:	int3   
  40cf55:	shr    cl,1
  40cf57:	in     al,0x63
  40cf59:	clc    
  40cf5a:	pop    eax
  40cf5b:	jae    0x40cfd7
  40cf5d:	xchg   ebp,eax
  40cf5e:	popf   
  40cf5f:	push   ds
  40cf60:	jne    0x40cf2b
  40cf62:	in     eax,0x60
  40cf64:	leave  
  40cf65:	or     DWORD PTR [ebx+0x1aa1cead],ebp
  40cf6b:	ds inc esi
  40cf6d:	cmp    edx,DWORD PTR [ecx-0x940810a]
  40cf73:	xchg   edx,eax
  40cf74:	mov    dl,0x7b
  40cf76:	fadd   DWORD PTR [ebx]
  40cf78:	inc    esp
  40cf79:	pop    eax
  40cf7a:	mov    ebx,DWORD PTR [edx-0x486a564c]
  40cf80:	mov    DWORD PTR [ebx],edi
  40cf82:	cmp    dl,dl
  40cf84:	imul   ecx,DWORD PTR [ebp-0x19],0x3e
  40cf88:	inc    esi
  40cf89:	mov    ch,0x24
  40cf8b:	mov    al,ds:0x83bca221
  40cf90:	pop    ds
  40cf91:	repz call 0xfa1:0xa00b2907
  40cf99:	ins    DWORD PTR es:[edi],dx
  40cf9a:	pop    ecx
  40cf9b:	inc    edi
  40cf9c:	cmp    ecx,ebx
  40cf9e:	repz xchg ecx,eax
  40cfa0:	mov    bl,0x9f
  40cfa2:	enter  0x4612,0xb7
  40cfa6:	stos   DWORD PTR es:[edi],eax
  40cfa7:	xchg   esp,eax
  40cfa8:	cs ins DWORD PTR es:[edi],dx
  40cfaa:	frstor [ebx]
  40cfac:	(bad)
  40cfb0:	stc    
  40cfb1:	adc    al,0x76
  40cfb3:	sbb    edx,DWORD PTR [eax]
  40cfb5:	jl     0x40d00a
  40cfb7:	mov    eax,0xd021e894
  40cfbc:	push   0xffffffc2
  40cfbe:	sahf   
  40cfbf:	sub    ch,BYTE PTR [ebp+0x15a99bee]
  40cfc5:	jge    0x40d01f
  40cfc7:	cmp    eax,DWORD PTR [edx+edx*8-0x7be82b0c]
  40cfce:	jmp    0x28231555
  40cfd3:	iret   
  40cfd4:	ficom  WORD PTR ds:0x65c9eb7c
  40cfda:	dec    ebx
  40cfdb:	aas    
  40cfdc:	ja     0x40cfdf
  40cfde:	mov    ebp,DWORD PTR [edi+0x4b]
  40cfe1:	pop    edi
  40cfe2:	test   BYTE PTR [edi-0x4501cc9d],bl
  40cfe8:	sbb    DWORD PTR [esi],edx
  40cfea:	pop    ss
  40cfeb:	pop    ebx
  40cfec:	xchg   ebp,eax
  40cfed:	lock dec edi
  40cfef:	pop    ecx
  40cff0:	int3   
  40cff1:	(bad)  
  40cff2:	stc    
  40cff3:	or     dl,BYTE PTR [ebx]
  40cff5:	adc    al,0xf2
  40cff7:	loope  0x40cf99
  40cff9:	mov    ch,0x63
  40cffb:	xor    al,0x31
  40cffd:	sub    DWORD PTR [ebx],edi
  40cfff:	xor    al,0x33
  40d001:	(bad)  
  40d002:	sub    DWORD PTR [esi+ebp*8],esi
  40d005:	mov    ebx,0xa132b713
  40d00a:	call   0xe9b1587a
  40d00f:	data16 stos BYTE PTR es:[edi],al
  40d011:	push   eax
  40d012:	adc    DWORD PTR [edi],edi
  40d014:	(bad)  
  40d015:	cld    
  40d016:	xchg   edx,eax
  40d017:	mov    bl,0x72
  40d019:	out    0x44,eax
  40d01b:	ficomp DWORD PTR [edx+edx*8+0x6cf8edfb]
  40d022:	leave  
  40d023:	and    dh,BYTE PTR ds:0x9f418358
  40d029:	sbb    al,0x86
  40d02b:	mov    ecx,esp
  40d02d:	sbb    ax,0xbba9
  40d031:	cld    
  40d032:	adc    eax,0x7f250fb3
  40d038:	or     eax,DWORD PTR [ebx+0x74b254e7]
  40d03e:	repnz std 
  40d040:	xor    DWORD PTR [edi-0x3a],ebx
  40d043:	imul   edi,DWORD PTR [edx],0xbfdcc432
  40d049:	pop    ebp
  40d04a:	dec    esp
  40d04b:	lods   eax,DWORD PTR ds:[esi]
  40d04c:	cmp    eax,0x5da269af
  40d051:	in     al,dx
  40d052:	loop   0x40d0d2
  40d054:	ds push ecx
  40d056:	mov    eax,0x28c2bbac
  40d05b:	scas   al,BYTE PTR es:[edi]
  40d05c:	jae    0x40d04b
  40d05e:	cmp    ebx,DWORD PTR [edx+0x28]
  40d061:	stc    
  40d062:	mov    DWORD PTR [ebx],edi
  40d064:	jo     0x40d009
  40d066:	mov    bl,0xbf
  40d068:	adc    ch,BYTE PTR [ebx-0x87203c8]
  40d06e:	cli    
  40d06f:	mov    ch,0x9a
  40d071:	cmp    ecx,esi
  40d073:	mov    ds,eax
  40d075:	cdq    
  40d076:	and    DWORD PTR [eiz*8-0x6a4e538c],0x1bc3e41e
  40d081:	scas   eax,DWORD PTR es:[edi]
  40d082:	frstor [esi+0x67338423]
  40d088:	mul    BYTE PTR [ebx+0x6afe841d]
  40d08e:	or     ch,BYTE PTR [edi+0x49b4778d]
  40d094:	push   ebx
  40d095:	mov    ch,0x13
  40d097:	cmp    ebx,DWORD PTR [edx-0x75d4ba83]
  40d09d:	xchg   ebp,eax
  40d09e:	dec    edi
  40d09f:	fsub   st(1),st
  40d0a1:	push   0xb
  40d0a3:	xchg   edi,eax
  40d0a4:	push   cs
  40d0a5:	push   eax
  40d0a6:	das    
  40d0a7:	icebp  
  40d0a8:	stos   DWORD PTR es:[edi],eax
  40d0a9:	sbb    cl,al
  40d0ab:	push   edi
  40d0ac:	js     0x40d0d2
  40d0ae:	dec    ebp
  40d0af:	loope  0x40d0b3
  40d0b1:	into   
  40d0b2:	sbb    edx,DWORD PTR [ebx]
  40d0b4:	leave  
  40d0b5:	xlat   BYTE PTR ds:[ebx]
  40d0b6:	lods   eax,DWORD PTR ds:[esi]
  40d0b7:	xchg   ebx,eax
  40d0b8:	(bad)  
  40d0b9:	ins    DWORD PTR es:[edi],dx
  40d0ba:	add    ah,ah
  40d0bc:	mul    DWORD PTR [ebx]
  40d0be:	xchg   ebx,eax
  40d0bf:	pop    esp
  40d0c0:	repnz add DWORD PTR ds:0xfb8854da,ecx
  40d0c7:	fs and ebp,eax
  40d0ca:	sub    al,BYTE PTR [ecx]
  40d0cc:	xlat   BYTE PTR ds:[ebx]
  40d0cd:	mov    ds:0xa20dde08,eax
  40d0d2:	pop    esp
  40d0d3:	pop    ebp
  40d0d4:	sti    
  40d0d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0d6:	cwde   
  40d0d7:	shr    DWORD PTR [edi-0x48],1
  40d0da:	lock inc edi
  40d0dc:	aad    0x88
  40d0de:	data16 stos BYTE PTR es:[edi],al
  40d0e0:	jmp    0x40d0e7
  40d0e2:	call   0x451a:0xabe31518
  40d0e9:	adc    edx,edx
  40d0eb:	imul   eax,DWORD PTR [ecx],0x72
  40d0ee:	adc    al,0x3e
  40d0f0:	std    
  40d0f1:	dec    edi
  40d0f2:	inc    edx
  40d0f3:	adc    dl,BYTE PTR [edi]
  40d0f5:	shr    DWORD PTR [ecx+0x682290bf],1
  40d0fb:	or     dl,BYTE PTR [bx+0x6eba]
  40d100:	mov    DWORD PTR [edx-0x6860f8a6],esi
  40d106:	int    0xc4
  40d108:	psllw  mm0,QWORD PTR [esi-0x56323f69]
  40d10f:	jmp    0xf9e3:0xd510081e
  40d116:	out    dx,eax
  40d117:	fmul   DWORD PTR [edi]
  40d119:	xchg   esi,eax
  40d11a:	out    0x36,eax
  40d11c:	inc    edi
  40d11d:	(bad)  
  40d11e:	sub    edx,edx
  40d120:	push   esi
  40d121:	push   edx
  40d122:	mov    ch,0xcb
  40d124:	call   0x3903bc74
  40d129:	xchg   edx,eax
  40d12a:	push   0x6997ad1b
  40d12f:	lahf   
  40d130:	in     eax,dx
  40d131:	pop    eax
  40d132:	pusha  
  40d133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d134:	jg     0x40d0cb
  40d136:	or     al,0x28
  40d138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d139:	mov    fs,WORD PTR [edx-0x5a]
  40d13c:	cdq    
  40d13d:	out    0xbd,al
  40d13f:	push   ss
  40d140:	daa    
  40d141:	loop   0x40d163
  40d143:	pop    edx
  40d144:	hlt    
  40d145:	pop    esi
  40d146:	inc    ecx
  40d147:	mov    cs,WORD PTR [esi]
  40d149:	fwait
  40d14a:	jne    0x40d160
  40d14c:	jnp    0x40d15b
  40d14e:	sub    al,0x40
  40d150:	adc    ch,BYTE PTR [ecx]
  40d152:	stos   BYTE PTR es:[edi],al
  40d153:	jae    0x40d17d
  40d155:	sti    
  40d156:	xchg   esp,eax
  40d157:	test   al,0x91
  40d159:	pop    esi
  40d15a:	xlat   BYTE PTR ds:[ebx]
  40d15b:	mov    ebx,0x688313f
  40d160:	das    
  40d161:	inc    esp
  40d162:	pop    ebx
  40d163:	mov    al,0xe3
  40d165:	mov    ecx,0xfd20782f
  40d16a:	inc    eax
  40d16b:	xchg   edi,eax
  40d16c:	mov    esp,0x47d7e12b
  40d171:	mov    eax,0x17818077
  40d176:	pop    ds
  40d177:	cmp    ebx,edx
  40d179:	sub    BYTE PTR [ecx-0x60],dh
  40d17c:	ret    0x11f3
  40d17f:	jle    0x40d1f3
  40d181:	jno    0x40d1ff
  40d183:	aas    
  40d184:	aaa    
  40d185:	push   ds
  40d186:	div    ebp
  40d188:	jecxz  0x40d16f
  40d18a:	or     ecx,0x29
  40d18d:	and    dl,BYTE PTR [ebp+0x20]
  40d190:	jle    0x40d1a6
  40d192:	dec    eax
  40d193:	and    eax,0xc2470653
  40d198:	jg     0x40d150
  40d19a:	cld    
  40d19b:	jae    0x40d13d
  40d19d:	add    DWORD PTR [edx-0xf],0x6b
  40d1a1:	mov    bh,0x5
  40d1a3:	xor    BYTE PTR [ecx-0x3e],ah
  40d1a6:	push   0x99f759c6
  40d1ab:	adc    BYTE PTR [edx+0x6b],ah
  40d1ae:	mov    esp,0x5807fe12
  40d1b3:	arpl   WORD PTR [esi-0x49],di
  40d1b6:	adc    DWORD PTR [edx],ebp
  40d1b8:	jnp    0x40d1e8
  40d1ba:	lods   al,BYTE PTR ds:[esi]
  40d1bb:	ffreep st(5)
  40d1bd:	dec    ebp
  40d1be:	(bad)  
  40d1bf:	jmp    0xc405c0b2
  40d1c4:	xor    BYTE PTR gs:[edi],dl
  40d1c7:	pusha  
  40d1c8:	test   ebx,esp
  40d1ca:	fbstp  TBYTE PTR ss:0xad09
  40d1d0:	cli    
  40d1d1:	inc    esp
  40d1d2:	add    DWORD PTR [edi],esi
  40d1d4:	scas   eax,DWORD PTR es:[edi]
  40d1d5:	push   ebp
  40d1d6:	int3   
  40d1d7:	pop    ss
  40d1d8:	xlat   BYTE PTR ds:[ebx]
  40d1d9:	jg     0x40d175
  40d1db:	inc    eax
  40d1dc:	repz into 
  40d1de:	std    
  40d1df:	jns    0x40d25d
  40d1e1:	int    0xa4
  40d1e3:	mov    bh,BYTE PTR [edx+edx*8-0x52]
  40d1e7:	xchg   ecx,eax
  40d1e8:	out    dx,eax
  40d1e9:	sti    
  40d1ea:	mov    ecx,0x3621aa8f
  40d1ef:	stos   DWORD PTR es:[edi],eax
  40d1f0:	mov    esi,0xe43bd762
  40d1f5:	test   eax,0x798522a3
  40d1fa:	push   0x9053b947
  40d1ff:	es (bad) 
  40d201:	sahf   
  40d202:	cli    
  40d203:	imul   ecx
  40d205:	sti    
  40d206:	xor    DWORD PTR [edi-0xc],0x2a30263f
  40d20d:	mov    bh,0x32
  40d20f:	(bad)  
  40d210:	pop    edi
  40d211:	inc    ecx
  40d212:	cld    
  40d213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d214:	out    0xf7,eax
  40d216:	mov    ds:0x1264663,al
  40d21b:	or     cl,BYTE PTR [ebx+0x33]
  40d21e:	sub    edi,esi
  40d220:	out    dx,al
  40d221:	or     DWORD PTR [edi+0x7d],0x23
  40d225:	sar    BYTE PTR [ecx+0x1e954b21],1
  40d22b:	rcl    edi,1
  40d22d:	or     cl,ah
  40d22f:	imul   DWORD PTR [ebx]
  40d231:	mul    BYTE PTR [ebx]
  40d233:	ficomp WORD PTR [eax-0x50]
  40d236:	in     eax,0xe3
  40d238:	jae    0x40d238
  40d23a:	cli    
  40d23b:	xchg   DWORD PTR [esi+0x4a67ecc],esp
  40d241:	xchg   esi,eax
  40d242:	test   DWORD PTR [ebp+ebx*8-0x26],eax
  40d246:	daa    
  40d247:	xlat   BYTE PTR ds:[ebx]
  40d248:	and    esp,DWORD PTR ds:0xc9578ff0
  40d24e:	and    dl,BYTE PTR [edx-0x5912ea0]
  40d254:	xchg   edi,esp
  40d256:	outs   dx,BYTE PTR ds:[esi]
  40d257:	xchg   edi,eax
  40d258:	ja     0x40d260
  40d25a:	xabort 0xb5
  40d25d:	mov    ch,0x2c
  40d25f:	push   edx
  40d260:	xchg   ebp,eax
  40d261:	daa    
  40d262:	xor    BYTE PTR [edi-0x64],ch
  40d265:	cmc    
  40d266:	cmp    DWORD PTR [esi],ebp
  40d268:	jecxz  0x40d27f
  40d26a:	mov    esp,ebx
  40d26c:	xchg   di,ax
  40d26e:	sub    al,BYTE PTR [ebx+ebx*2]
  40d271:	add    ch,ch
  40d273:	xor    al,0x8b
  40d275:	pop    ss
  40d276:	cwde   
  40d277:	fnstsw WORD PTR [edi+0x10887173]
  40d27d:	jno    0x40d283
  40d27f:	jle    0x40d2ac
  40d281:	and    ah,bl
  40d283:	pop    ecx
  40d284:	int    0x82
  40d286:	inc    esp
  40d287:	jecxz  0x40d294
  40d289:	out    0x95,al
  40d28b:	xchg   ebx,eax
  40d28c:	clc    
  40d28d:	dec    ebp
  40d28e:	jle    0x40d2b6
  40d290:	es arpl di,bx
  40d293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d294:	es aaa 
  40d296:	ins    BYTE PTR es:[edi],dx
  40d297:	push   ds
  40d298:	mul    DWORD PTR [esi+0x2d]
  40d29b:	popf   
  40d29c:	adc    al,0x43
  40d29e:	out    dx,eax
  40d29f:	(bad)  
  40d2a0:	fist   DWORD PTR [eax+ebp*4-0x27]
  40d2a4:	test   eax,0x20f723d6
  40d2aa:	mov    bl,0xa0
  40d2ac:	cmp    ecx,esi
  40d2ae:	add    DWORD PTR [ecx+0x40],edx
  40d2b1:	outs   dx,DWORD PTR ds:[esi]
  40d2b2:	imul   esp,DWORD PTR [edx-0x54],0xffffffb7
  40d2b6:	mov    BYTE PTR ds:0xcf98d4bf,al
  40d2bc:	jge    0x40d325
  40d2be:	pop    ss
  40d2bf:	aad    0x9b
  40d2c1:	mov    WORD PTR [ecx],gs
  40d2c3:	mov    eax,ss
  40d2c5:	psraw  mm4,0x80
  40d2c9:	push   es
  40d2ca:	in     eax,0x73
  40d2cc:	enter  0x2abc,0x5c
  40d2d0:	clc    
  40d2d1:	mov    esp,0x44081f6f
  40d2d6:	cmp    ch,BYTE PTR [ebp-0x2d]
  40d2d9:	hlt    
  40d2da:	add    eax,0x2e5617fc
  40d2df:	ds mov ebx,0xfd2f31c2
  40d2e5:	mov    cl,0x7a
  40d2e7:	push   ds
  40d2e8:	ror    BYTE PTR [ecx-0x22],0x92
  40d2ec:	ret    
  40d2ed:	push   esp
  40d2ee:	(bad)  
  40d2ef:	adc    DWORD PTR [eax],esp
  40d2f1:	js     0x40d292
  40d2f3:	not    BYTE PTR [eax+eax*8-0x60]
  40d2f7:	mov    cl,0xfc
  40d2f9:	xchg   ebx,eax
  40d2fa:	jp     0x40d2b9
  40d2fc:	adc    eax,0xe6ec3991
  40d301:	fdiv   DWORD PTR ds:0x445d5bab
  40d307:	mov    esi,0x74df4ebc
  40d30c:	jl     0x40d319
  40d30e:	fwait
  40d30f:	jmp    0x4896:0x5d98b9df
  40d316:	pop    ss
  40d317:	shl    BYTE PTR [ebp+0x245e23c1],0x17
  40d31e:	push   ds
  40d31f:	enter  0xe03c,0xc7
  40d323:	cli    
  40d324:	std    
  40d325:	inc    ebp
  40d326:	stos   DWORD PTR es:[edi],eax
  40d327:	pop    ds
  40d328:	shr    DWORD PTR [ebp+0x13],1
  40d32b:	pop    ds
  40d32c:	seta   BYTE PTR [eax-0x5fcdabfa]
  40d333:	inc    esp
  40d334:	(bad)  
  40d335:	lods   al,BYTE PTR ds:[esi]
  40d336:	push   esp
  40d337:	push   ecx
  40d338:	mov    ds,eax
  40d33a:	sbb    al,0x9
  40d33c:	sti    
  40d33d:	out    0x4a,eax
  40d33f:	inc    ecx
  40d340:	les    esp,FWORD PTR [esi+0x1c]
  40d343:	(bad)  [esi+0x1760ba22]
  40d349:	outs   dx,DWORD PTR ds:[esi]
  40d34a:	sub    DWORD PTR [edx+0x2a],0x1d1cc8c9
  40d351:	shl    DWORD PTR [esi+0x77],cl
  40d354:	mov    ds:0xcf56e610,eax
  40d359:	or     DWORD PTR [edi+edi*4+0x25],ecx
  40d35d:	test   DWORD PTR [ecx+0x69a78ff6],0x24fb78e8
  40d367:	sti    
  40d368:	call   0x313c:0x216b0802
  40d36f:	pop    ss
  40d370:	mov    al,ds:0x22d73b07
  40d375:	add    edi,ebx
  40d377:	cli    
  40d378:	int    0x7c
  40d37a:	jmp    0x1071456c
  40d37f:	dec    ecx
  40d380:	shr    DWORD PTR [edx-0x4917365e],0xb5
  40d387:	mov    ecx,0x9404683e
  40d38c:	push   edi
  40d38d:	repz sbb dl,BYTE PTR [ebx+0x40226a6e]
  40d394:	xchg   esi,eax
  40d395:	loopne 0x40d38f
  40d397:	jmp    0xb561:0x5223186
  40d39e:	add    eax,0x4f573f4b
  40d3a3:	lds    ebx,FWORD PTR [ebx]
  40d3a5:	jge    0x40d3c4
  40d3a7:	dec    esp
  40d3a8:	xor    BYTE PTR [esi+0x3309d834],dl
  40d3ae:	nop
  40d3af:	sbb    dh,BYTE PTR ds:0x5b2ad9bd
  40d3b5:	out    dx,eax
  40d3b6:	adc    DWORD PTR [edi+0xd],ebp
  40d3b9:	xor    eax,0x80353351
  40d3be:	mov    esp,0x9c3c9e70
  40d3c3:	int3   
  40d3c4:	cmp    ecx,esi
  40d3c6:	add    eax,ecx
  40d3c8:	or     edx,DWORD PTR [edx+0x4aa1118b]
  40d3ce:	fsubrp st(1),st
  40d3d0:	outs   dx,BYTE PTR ds:[esi]
  40d3d1:	xor    al,0x47
  40d3d3:	aaa    
  40d3d4:	sbb    BYTE PTR [edi-0x719b4189],bh
  40d3da:	rcl    BYTE PTR [ecx+ebx*2-0x1aa24527],1
  40d3e1:	cli    
  40d3e2:	shl    BYTE PTR [ebx+0x48],0x24
  40d3e6:	cld    
  40d3e7:	stos   DWORD PTR es:[edi],eax
  40d3e8:	jmp    0x40d3e3
  40d3ea:	les    edx,FWORD PTR [esi+ebx*1+0x69701a9f]
  40d3f1:	pop    edi
  40d3f2:	bound  ebx,QWORD PTR [ecx-0x5e]
  40d3f5:	sub    BYTE PTR [eax],cl
  40d3f7:	retf   0x86a0
  40d3fa:	pop    edi
  40d3fb:	inc    esi
  40d3fc:	xchg   esi,eax
  40d3fd:	push   eax
  40d3fe:	data16 xchg BYTE PTR [esi],al
  40d401:	dec    ebp
  40d402:	xor    edi,DWORD PTR [ebx+ebx*8-0x7b]
  40d406:	aam    0xc7
  40d408:	daa    
  40d409:	out    0x53,eax
  40d40b:	and    BYTE PTR [ebp+ecx*2-0xc],dh
  40d40f:	imul   edx,DWORD PTR [ebx],0x39
  40d412:	and    al,0xa8
  40d414:	(bad)  
  40d415:	int    0xbe
  40d417:	jne    0x40d3d9
  40d419:	js     0x40d454
  40d41b:	outs   dx,BYTE PTR ds:[esi]
  40d41c:	or     bh,BYTE PTR [esi-0xd265bd3]
  40d422:	es jb  0x40d496
  40d425:	sbb    eax,ecx
  40d427:	jbe    0x40d3f2
  40d429:	dec    esi
  40d42a:	pushf  
  40d42b:	aas    
  40d42c:	jmp    0x99b42c20
  40d431:	jg     0x40d3b6
  40d433:	mov    bh,0xd7
  40d435:	dec    esi
  40d436:	outs   dx,BYTE PTR ds:[esi]
  40d437:	fnstenv [eax-0x39c833b0]
  40d43d:	leave  
  40d43e:	sbb    BYTE PTR [ecx-0xf],ch
  40d441:	les    ecx,FWORD PTR [edx+0x3b]
  40d444:	les    edx,FWORD PTR [eax]
  40d446:	adc    cl,BYTE PTR ds:0xf0c56cc2
  40d44c:	les    ecx,FWORD PTR [eax+esi*2+0x76]
  40d450:	sub    eax,DWORD PTR [eax+0x7c]
  40d453:	mov    ecx,0x58d07e74
  40d458:	imul   edx,eax,0xffffffc0
  40d45b:	shr    DWORD PTR [eax-0xb],0x96
  40d45f:	arpl   WORD PTR [edi+eiz*4-0xc],ax
  40d463:	push   ebx
  40d464:	cdq    
  40d465:	call   0x817959e2
  40d46a:	cld    
  40d46b:	sar    dh,cl
  40d46d:	cmp    eax,0xe24e3b79
  40d472:	call   0xd5f:0x8ab4d970
  40d479:	pop    edx
  40d47a:	imul   esp,DWORD PTR ds:0x8942ce6b,0xffffffd0
  40d481:	xchg   DWORD PTR [ebx],esp
  40d483:	lods   eax,DWORD PTR ds:[esi]
  40d484:	mov    al,0x9c
  40d486:	jmp    0x76cb5a27
  40d48b:	iret   
  40d48c:	aam    0x99
  40d48e:	sbb    al,0x8e
  40d490:	cmp    ebx,DWORD PTR [edx+0x2e]
  40d493:	push   ecx
  40d494:	sub    esp,DWORD PTR [edx+0x6]
  40d497:	jae    0x40d508
  40d499:	mov    esp,0x8ad03666
  40d49e:	lods   al,BYTE PTR ds:[esi]
  40d49f:	mov    esi,0xe48662a
  40d4a4:	pop    ecx
  40d4a5:	pushf  
  40d4a6:	jns    0x40d493
  40d4a8:	push   eax
  40d4a9:	ret    
  40d4aa:	in     eax,0x72
  40d4ac:	ins    DWORD PTR es:[edi],dx
  40d4ad:	push   es
  40d4ae:	xchg   DWORD PTR [ebx-0x4e2b356b],ebp
  40d4b4:	sbb    DWORD PTR [ebx+0x245ddd06],0xc1e56577
  40d4be:	fistp  DWORD PTR [ecx]
  40d4c0:	or     esi,ebp
  40d4c2:	and    BYTE PTR [esi+0x42],cl
  40d4c5:	xor    BYTE PTR [eax+0x4158c81f],0xbb
  40d4cc:	sbb    al,BYTE PTR [edx-0x954c7d3]
  40d4d2:	push   0x7a77e0e1
  40d4d7:	mov    ebx,0xb8506938
  40d4dc:	das    
  40d4dd:	outs   dx,DWORD PTR ds:[esi]
  40d4de:	mov    ebp,0xec42c189
  40d4e3:	cs mov ch,0x9b
  40d4e6:	call   FWORD PTR [ebx-0x71]
  40d4e9:	mov    esi,0xc8eb4427
  40d4ee:	leave  
  40d4ef:	mov    ecx,0x3e9daeb9
  40d4f4:	push   ebx
  40d4f5:	jecxz  0x40d566
  40d4f7:	inc    ebx
  40d4f8:	fstp   QWORD PTR [ebx]
  40d4fa:	xor    dh,dl
  40d4fc:	jne    0x40d516
  40d4fe:	xor    dh,BYTE PTR [esi+0x7132b5d]
  40d504:	test   BYTE PTR [eax+0x65],dl
  40d507:	sbb    ah,ah
  40d509:	and    DWORD PTR [bp-0xa],esi
  40d50d:	daa    
  40d50e:	(bad)  
  40d50f:	sub    edi,DWORD PTR [eax+0xb]
  40d512:	adc    eax,DWORD PTR [eax+0x649629e7]
  40d518:	add    dl,ch
  40d51a:	mov    bh,0x88
  40d51c:	adc    ch,BYTE PTR [ebx+0x5ca90de9]
  40d522:	dec    ebx
  40d523:	(bad)
  40d526:	push   ecx
  40d527:	call   FWORD PTR [eax-0x2c53246d]
  40d52d:	jmp    0x963a43ca
  40d532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d533:	retf   0x70c2
  40d536:	stc    
  40d537:	sbb    ah,ch
  40d539:	push   edx
  40d53a:	ja     0x40d56f
  40d53c:	xor    eax,0xd4aff5c8
  40d541:	sub    edx,DWORD PTR [bp+si-0x260f]
  40d546:	lods   eax,DWORD PTR ds:[esi]
  40d547:	pop    esp
  40d548:	xchg   esp,eax
  40d549:	test   bh,al
  40d54b:	rol    edi,0xed
  40d54e:	retf   0x957b
  40d551:	xchg   ebx,eax
  40d552:	cmp    al,0x46
  40d554:	or     ah,BYTE PTR [esi-0x76]
  40d557:	sub    al,0xe2
  40d559:	nop
  40d55a:	cmp    eax,0x6e0f5788
  40d55f:	sub    BYTE PTR [edi-0x5f],dl
  40d562:	pop    ecx
  40d563:	push   esi
  40d564:	ret    
  40d565:	mov    ch,0x83
  40d567:	aas    
  40d568:	pop    ebx
  40d569:	cmp    al,0x15
  40d56b:	add    esp,DWORD PTR [eax+eax*1-0x6c0d5de0]
  40d572:	and    DWORD PTR [ecx],ebx
  40d574:	jmp    0xca137b37
  40d579:	test   DWORD PTR [eax-0x25],esp
  40d57c:	lock push esp
  40d57e:	inc    eax
  40d57f:	lds    esp,FWORD PTR [edi-0x2058b71a]
  40d585:	sub    al,0x98
  40d587:	dec    esi
  40d588:	das    
  40d589:	clc    
  40d58a:	jge    0x40d533
  40d58c:	adc    eax,0x3c528214
  40d591:	cmp    DWORD PTR [esi],esp
  40d593:	rol    DWORD PTR [esi],1
  40d595:	repz xchg ebp,eax
  40d597:	pop    esi
  40d598:	loope  0x40d5fa
  40d59a:	out    0xe3,eax
  40d59c:	add    al,0xfd
  40d59e:	or     al,dh
  40d5a0:	pop    esp
  40d5a1:	dec    esp
  40d5a2:	inc    ecx
  40d5a3:	sbb    bl,bl
  40d5a5:	mov    ecx,0x67b184a8
  40d5aa:	lods   al,BYTE PTR ds:[esi]
  40d5ab:	icebp  
  40d5ac:	xchg   ecx,eax
  40d5ad:	jbe    0x40d590
  40d5af:	call   0xa5455da
  40d5b4:	leave  
  40d5b5:	sbb    edi,edx
  40d5b7:	xor    DWORD PTR [esi+0x6b],ebx
  40d5ba:	and    dl,BYTE PTR es:0xa92692e5
  40d5c1:	sbb    DWORD PTR [edx-0x6e],edi
  40d5c4:	and    cl,ah
  40d5c6:	push   ds
  40d5c7:	pop    ebx
  40d5c8:	(bad)  
  40d5c9:	pop    eax
  40d5ca:	stc    
  40d5cb:	fs stos BYTE PTR es:[edi],al
  40d5cd:	adc    dh,BYTE PTR [eax+0x1]
  40d5d0:	or     edx,DWORD PTR [ebp+0x57]
  40d5d3:	ret    
  40d5d4:	cmp    cl,BYTE PTR [ecx-0x455ceb07]
  40d5da:	test   bl,cl
  40d5dc:	mov    BYTE PTR es:[ebx-0x15],dh
  40d5e0:	retf   0x32fd
  40d5e3:	fadd   QWORD PTR cs:[ebp-0x78]
  40d5e7:	test   al,al
  40d5e9:	dec    eax
  40d5ea:	push   ebx
  40d5eb:	adc    ah,BYTE PTR [eax]
  40d5ed:	or     DWORD PTR [ebx-0xe],edx
  40d5f0:	ja     0x40d64f
  40d5f2:	cmp    BYTE PTR [ecx-0x30655ebe],0x26
  40d5f9:	xor    esi,DWORD PTR [ecx]
  40d5fb:	pop    ds
  40d5fc:	add    bh,cl
  40d5fe:	and    eax,0xc62ef878
  40d603:	jne    0x40d644
  40d605:	push   ebp
  40d606:	pop    ecx
  40d607:	cmp    dh,BYTE PTR [edx-0x2b]
  40d60a:	mov    ah,0x9f
  40d60c:	addr16 iret 
  40d60e:	and    DWORD PTR [ebp-0x565f3d80],eax
  40d614:	ins    BYTE PTR es:[edi],dx
  40d615:	(bad)  
  40d616:	fild   DWORD PTR [esi+ebx*1-0x49]
  40d61a:	push   esi
  40d61b:	adc    al,0x1d
  40d61d:	clc    
  40d61e:	adc    edx,ebx
  40d620:	mov    ds:0xb0799333,al
  40d625:	add    edi,DWORD PTR [ecx+0x28]
  40d628:	enter  0xf7e7,0x44
  40d62c:	inc    esp
  40d62d:	mov    eax,0x3a352aa1
  40d632:	xchg   edx,eax
  40d633:	mov    esi,0xa2d7a496
  40d638:	mov    esp,0xa131d647
  40d63d:	cmp    esp,DWORD PTR [eax+0x29]
  40d640:	fild   DWORD PTR [eax+ebp*8+0x6b]
  40d644:	pop    ebp
  40d645:	nop
  40d646:	pop    edx
  40d647:	pop    es
  40d648:	jmp    0x3a4269d3
  40d64d:	push   ecx
  40d64e:	mov    edx,0xb1792d02
  40d653:	jmp    0x6cbccc7a
  40d658:	loopne 0x40d69e
  40d65a:	cmp    eax,0xf745f0df
  40d65f:	in     eax,dx
  40d660:	out    dx,al
  40d661:	push   edi
  40d662:	fs cmp eax,0x9a8c197a
  40d668:	push   ebx
  40d669:	jg     0x40d6d8
  40d66b:	mov    ecx,0x2bb42e21
  40d670:	pop    ebx
  40d671:	imul   ebx,edi,0xfffffff3
  40d674:	inc    ecx
  40d675:	jnp    0x40d6be
  40d677:	jecxz  0x40d65b
  40d679:	aam    0x1d
  40d67b:	fnstsw WORD PTR [edx+0x6a]
  40d67e:	popf   
  40d67f:	fcomp  DWORD PTR [edi]
  40d681:	mov    ebp,0x42c4abe5
  40d686:	shl    DWORD PTR [eax],cl
  40d688:	pop    esi
  40d689:	ja     0x40d6e7
  40d68b:	and    al,0xb3
  40d68d:	mov    al,ds:0x3989245d
  40d692:	sti    
  40d693:	fcom   QWORD PTR [eax+0x41]
  40d696:	out    dx,eax
  40d697:	mov    eax,0x78dbbb45
  40d69c:	icebp  
  40d69d:	cmp    esi,DWORD PTR [ebx+0x53]
  40d6a0:	fcomp  DWORD PTR [ebx+0x3db9fcbe]
  40d6a6:	fs (bad) 
  40d6a8:	xor    bl,bl
  40d6aa:	retf   0x1fac
  40d6ad:	jo     0x40d6ec
  40d6af:	xchg   BYTE PTR [edx+0x1e],bl
  40d6b2:	mov    bh,0x5f
  40d6b4:	adc    al,0xaa
  40d6b6:	and    al,BYTE PTR ds:[edx-0x38713ca9]
  40d6bd:	in     eax,0xa1
  40d6bf:	out    0x24,al
  40d6c1:	sbb    BYTE PTR [ecx+0x49ccabba],ah
  40d6c7:	arpl   WORD PTR [eax],sp
  40d6c9:	inc    edi
  40d6ca:	xlat   BYTE PTR ds:[ebx]
  40d6cb:	(bad)  
  40d6cc:	mov    esi,0xce1c23d9
  40d6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6d2:	add    al,0x24
  40d6d4:	hlt    
  40d6d5:	xlat   BYTE PTR ds:[ebx]
  40d6d6:	lea    edi,[eax-0xd1f7292]
  40d6dc:	adc    bl,0xcc
  40d6df:	rol    DWORD PTR [edx],0x4d
  40d6e2:	icebp  
  40d6e3:	ins    BYTE PTR es:[edi],dx
  40d6e4:	cmp    BYTE PTR [ecx+eax*4-0x7cf6c479],al
  40d6eb:	or     eax,0x176d6413
  40d6f0:	cwde   
  40d6f1:	imul   ebp,eax,0xffffffc7
  40d6f4:	xor    al,0x9c
  40d6f6:	in     eax,0x39
  40d6f8:	jb     0x40d707
  40d6fa:	lahf   
  40d6fb:	or     eax,0x5985f4c2
  40d700:	pop    ebx
  40d701:	pop    esi
  40d702:	repnz mov BYTE PTR [edi+0xf],0x57
  40d707:	fs test eax,0xab96fa5c
  40d70d:	jl     0x40d6c0
  40d70f:	cmc    
  40d710:	adc    ebp,DWORD PTR [edx+0x6b873193]
  40d716:	or     DWORD PTR [edx+0x6b],0xd30aed3f
  40d71d:	sbb    al,0xcf
  40d71f:	lahf   
  40d720:	and    al,0xbd
  40d722:	dec    ebx
  40d723:	mov    edi,0x93bba1d9
  40d728:	imul   ebp,eax,0x42454517
  40d72e:	xchg   ecx,eax
  40d72f:	mov    dl,0x92
  40d731:	adc    al,BYTE PTR [ebp+0x7f]
  40d734:	fadd   QWORD PTR [ecx+0x206cb857]
  40d73a:	ja     0x40d772
  40d73c:	inc    edi
  40d73d:	and    esi,DWORD PTR [ebp+0x2e]
  40d740:	icebp  
  40d741:	aad    0x25
  40d743:	(bad)
  40d747:	and    al,0x79
  40d749:	jg     0x40d6f9
  40d74b:	pcmpeqd mm2,QWORD PTR [esi]
  40d74e:	mov    esi,0xb7ee4f3e
  40d753:	sti    
  40d754:	adc    eax,DWORD PTR [ecx+0x1f8d4367]
  40d75a:	bound  edx,QWORD PTR [esi-0x33]
  40d75d:	stos   BYTE PTR es:[edi],al
  40d75e:	xor    al,0x64
  40d760:	test   DWORD PTR [edi-0x27],edi
  40d763:	sub    esi,DWORD PTR [eax+0x19]
  40d766:	in     eax,dx
  40d767:	retf   
  40d768:	mov    BYTE PTR [ebx+0x3],cl
  40d76b:	jge    0x40d6f4
  40d76d:	(bad)
  40d770:	jl     0x40d6f7
  40d772:	mov    edx,0x85111af5
  40d777:	loop   0x40d715
  40d779:	sar    BYTE PTR [ebp-0x69],cl
  40d77c:	(bad)  
  40d77e:	mov    al,0xe7
  40d780:	out    0x6e,eax
  40d782:	out    dx,al
  40d783:	jl     0x40d784
  40d785:	call   0xc2ce:0xa67aa740
  40d78c:	push   ecx
  40d78d:	pop    edi
  40d78e:	adc    al,0xc
  40d790:	repz or DWORD PTR [ecx-0x62],edx
  40d794:	xchg   BYTE PTR [edi-0x63],al
  40d797:	(bad)  
  40d798:	in     eax,0x75
  40d79a:	xchg   ebx,eax
  40d79b:	xchg   esi,eax
  40d79c:	dec    edx
  40d79d:	xchg   ebx,eax
  40d79e:	outs   dx,DWORD PTR ds:[esi]
  40d79f:	push   ecx
  40d7a0:	test   DWORD PTR [eax+0x2c6da029],0xb54fcd0c
  40d7aa:	loope  0x40d7b5
  40d7ac:	(bad)  
  40d7ad:	neg    DWORD PTR [eax+0x23]
  40d7b0:	adc    BYTE PTR [edx],0x34
  40d7b3:	fiadd  DWORD PTR [ebp+edx*8+0x2904d2da]
  40d7ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7bb:	xchg   ebx,eax
  40d7bc:	imul   eax
  40d7be:	test   al,0x28
  40d7c0:	out    dx,eax
  40d7c1:	cmp    DWORD PTR [ebx-0x6],ebp
  40d7c4:	add    bh,BYTE PTR [esi]
  40d7c6:	shl    DWORD PTR [esi-0x72],1
  40d7c9:	jae    0x40d7e7
  40d7cb:	retf   
  40d7cc:	and    ecx,ebp
  40d7ce:	xchg   ebp,eax
  40d7cf:	sub    DWORD PTR [edi],eax
  40d7d1:	or     BYTE PTR [ebx+0x418a3252],ch
  40d7d7:	add    dl,0x49
  40d7da:	and    BYTE PTR [edi-0x6b805bcf],bh
  40d7e0:	inc    edx
  40d7e1:	and    eax,0xb29240dd
  40d7e6:	jmp    0x2599:0xdc28dd0e
  40d7ed:	sahf   
  40d7ee:	int3   
  40d7ef:	cmp    DWORD PTR [eax-0x4cf80076],esi
  40d7f5:	fdiv   DWORD PTR [ebp-0x226be42d]
  40d7fb:	sahf   
  40d7fc:	icebp  
  40d7fd:	sbb    ebx,esi
  40d7ff:	pop    esi
  40d800:	loope  0x40d869
  40d802:	(bad)
  40d805:	(bad)  
  40d807:	jmp    0x40d7bf
  40d809:	ins    DWORD PTR es:[edi],dx
  40d80a:	push   edx
  40d80b:	test   DWORD PTR [esi-0x67d3ff1e],edx
  40d811:	push   esi
  40d812:	push   ds
  40d813:	pop    edi
  40d814:	int    0xc5
  40d816:	jl     0x40d842
  40d818:	ds pop edi
  40d81a:	(bad)  
  40d81b:	or     DWORD PTR [ecx+ecx*2+0x4e],0xb17da867
  40d823:	test   DWORD PTR ds:0x41ad8f65,edi
  40d829:	inc    ecx
  40d82a:	mov    dh,0xb
  40d82c:	scas   al,BYTE PTR es:[edi]
  40d82d:	iret   
  40d82e:	xor    eax,0x1931756b
  40d833:	fldcw  WORD PTR [edi-0x40f7e5f1]
  40d839:	out    0xb6,al
  40d83b:	mov    ebp,0xbf48abd4
  40d840:	mov    edi,0x95ab24b3
  40d845:	popa   
  40d846:	xchg   ebx,eax
  40d847:	ins    DWORD PTR es:[edi],dx
  40d848:	adc    DWORD PTR [eax],edi
  40d84a:	cmp    eax,0x7a4ada3
  40d84f:	mov    BYTE PTR [edi+0x425a2fe7],ah
  40d855:	mov    ds:0xf8033e75,al
  40d85a:	jne    0x40d8c3
  40d85c:	test   al,0x42
  40d85e:	and    DWORD PTR [ebx+0x46],0x35
  40d862:	popf   
  40d863:	enter  0x1046,0xe8
  40d867:	cmp    eax,0x4a809b8d
  40d86c:	pop    ebp
  40d86d:	test   eax,0x54226e70
  40d872:	mov    ebp,0x7acc82d0
  40d877:	jns    0x40d8e3
  40d879:	loope  0x40d878
  40d87b:	out    dx,al
  40d87c:	jmp    0xf4e7f12c
  40d881:	ds or  al,0x16
  40d884:	mov    esi,0x3dbece2d
  40d889:	jg     0x40d822
  40d88b:	jmpw   0x158a
  40d88f:	sahf   
  40d890:	sbb    eax,0xfa255d41
  40d895:	test   BYTE PTR [ebx+0x57],cl
  40d898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d899:	ss (bad) 
  40d89b:	mov    ds:0x7314979e,al
  40d8a0:	lahf   
  40d8a1:	jbe    0x40d8ba
  40d8a3:	pop    edx
  40d8a4:	and    eax,0xd72f1619
  40d8a9:	jg     0x40d8e7
  40d8ab:	jns    0x40d928
  40d8ad:	and    BYTE PTR [ebp+edx*8+0x46042502],0x18
  40d8b5:	icebp  
  40d8b6:	ds test al,0x41
  40d8b9:	dec    ecx
  40d8ba:	loopne 0x40d899
  40d8bc:	cli    
  40d8bd:	cmp    eax,0xbf635963
  40d8c2:	repnz inc ebx
  40d8c4:	faddp  st(1),st
  40d8c6:	push   ecx
  40d8c7:	dec    ebx
  40d8c8:	rcl    ebx,1
  40d8ca:	popa   
  40d8cb:	xor    BYTE PTR [eax+0x67fe6ca4],bl
  40d8d1:	mov    ss,WORD PTR [ecx]
  40d8d3:	sub    BYTE PTR [esi],cl
  40d8d5:	lods   al,BYTE PTR ds:[esi]
  40d8d6:	sub    DWORD PTR [edi-0x80],ebp
  40d8d9:	pushf  
  40d8da:	push   ss
  40d8db:	fwait
  40d8dc:	jmp    0x7e5b:0xfd4a67d4
  40d8e3:	arpl   WORD PTR [eax-0x64],dx
  40d8e6:	adc    BYTE PTR [eax+0x2bce4ba0],al
  40d8ec:	mov    al,ds:0xeeb27d3f
  40d8f1:	cmp    eax,DWORD PTR [ebp-0x11]
  40d8f4:	xchg   esp,eax
  40d8f5:	xor    BYTE PTR [ecx+0x56],dl
  40d8f8:	popa   
  40d8f9:	mov    al,0xec
  40d8fb:	mov    eax,0xb3cb11ad
  40d900:	rcr    BYTE PTR ds:0x18a4efd9,0x4a
  40d907:	sahf   
  40d908:	sti    
  40d909:	shr    DWORD PTR [eax+0x218eb609],0x59
  40d910:	in     al,dx
  40d911:	mov    al,ds:0x6093e87a
  40d916:	jae    0x40d95f
  40d918:	(bad)  
  40d919:	push   0x17
  40d91b:	(bad)  
  40d91c:	in     al,0x25
  40d91e:	pop    ecx
  40d91f:	inc    esp
  40d920:	sub    BYTE PTR ds:0x10b362ff,dh
  40d926:	xlat   BYTE PTR ds:[ebx]
  40d927:	adc    eax,0xd099ce8
  40d92c:	ss pop edi
  40d92e:	shl    BYTE PTR [eax],0xfc
  40d931:	or     ch,BYTE PTR [esi]
  40d933:	mov    esi,0xf9a0162f
  40d938:	mov    ebx,0x309152ca
  40d93d:	hlt    
  40d93e:	push   0xccaf5517
  40d943:	daa    
  40d944:	cmp    eax,0xd3692fce
  40d949:	or     al,0x9d
  40d94b:	push   es
  40d94c:	lahf   
  40d94d:	rol    bl,cl
  40d94f:	mov    dl,0x22
  40d951:	loop   0x40d9cc
  40d953:	ja     0x40d982
  40d955:	inc    ebp
  40d956:	bound  esi,QWORD PTR [eax]
  40d958:	pushf  
  40d959:	or     al,0xb7
  40d95b:	test   al,0xfb
  40d95d:	xchg   esi,eax
  40d95e:	ds add al,0x43
  40d961:	fbstp  TBYTE PTR [edx+0x14]
  40d964:	aad    0x74
  40d966:	push   ss
  40d967:	fimul  DWORD PTR [edx-0x10]
  40d96a:	dec    ecx
  40d96b:	int3   
  40d96c:	out    dx,al
  40d96d:	call   0x7cec:0xb94d83ef
  40d974:	ds xor al,0xcd
  40d977:	pop    ss
  40d978:	sub    dh,BYTE PTR [ebp+0x5376dd92]
  40d97e:	sub    al,0xa9
  40d980:	xor    al,BYTE PTR [esi]
  40d982:	outs   dx,DWORD PTR ds:[esi]
  40d983:	inc    esi
  40d984:	xchg   edx,eax
  40d985:	std    
  40d986:	jmp    0x8dd4:0xd660f0bf
  40d98d:	test   al,0xf9
  40d98f:	dec    edx
  40d990:	jb     0x40d9b4
  40d992:	fdivr  DWORD PTR [eax+0x1c8b06f]
  40d998:	(bad)  
  40d999:	in     al,0xad
  40d99b:	inc    edx
  40d99c:	lahf   
  40d99d:	push   0xec0bdcff
  40d9a2:	in     eax,dx
  40d9a3:	sub    cl,BYTE PTR [ebx-0x46]
  40d9a6:	sub    ch,BYTE PTR [edi-0x16]
  40d9a9:	popa   
  40d9aa:	pop    eax
  40d9ab:	retf   
  40d9ac:	loop   0x40d9fb
  40d9ae:	scas   al,BYTE PTR es:[edi]
  40d9af:	int    0x93
  40d9b1:	cdq    
  40d9b2:	dec    ebp
  40d9b3:	das    
  40d9b4:	fistp  DWORD PTR [ecx+0x41]
  40d9b7:	scas   al,BYTE PTR es:[edi]
  40d9b8:	xchg   ebp,eax
  40d9b9:	dec    esi
  40d9ba:	pop    esp
  40d9bb:	iret   
  40d9bc:	imul   edi
  40d9be:	test   eax,0xbc5f84c9
  40d9c3:	out    dx,eax
  40d9c4:	dec    edx
  40d9c5:	lahf   
  40d9c6:	inc    eax
  40d9c7:	mov    dh,0xa7
  40d9c9:	loop   0x40da09
  40d9cb:	aam    0x1c
  40d9cd:	xchg   ecx,eax
  40d9ce:	aad    0x51
  40d9d0:	dec    ebp
  40d9d1:	jmp    0x40d9cd
  40d9d3:	aas    
  40d9d4:	or     al,0xc4
  40d9d6:	mov    ebx,0xd4c9cdfe
  40d9db:	test   BYTE PTR [eax+0x3f57aa51],dl
  40d9e1:	lock outs dx,DWORD PTR ds:[esi]
  40d9e3:	out    0xdc,eax
  40d9e5:	cwde   
  40d9e6:	cld    
  40d9e7:	sbb    esp,DWORD PTR cs:[esi+0x32]
  40d9eb:	mov    cl,0x93
  40d9ed:	lea    ecx,[ecx+0x47]
  40d9f0:	mov    ds:0xd5ebd95d,eax
  40d9f5:	addr16 (bad) 
  40d9f7:	xor    ebp,DWORD PTR [edx-0x11535761]
  40d9fd:	rcr    BYTE PTR [ebp+0x4b4ba299],cl
  40da03:	adc    ebp,esp
  40da05:	getsec 
  40da07:	stos   DWORD PTR es:[edi],eax
  40da08:	adc    BYTE PTR [edi+0x7c061b4b],ch
  40da0e:	jae    0x40da2f
  40da10:	pushf  
  40da11:	js     0x40d9ca
  40da13:	and    DWORD PTR [eax+eiz*8+0x194c08ff],ebx
  40da1a:	out    0x5c,al
  40da1c:	mul    DWORD PTR [ebp-0xae5ebb9]
  40da22:	(bad)  
  40da23:	repz mov esi,0x54d8afd
  40da29:	addr16 pop esi
  40da2b:	cmp    BYTE PTR [edx-0x66],dl
  40da2e:	mov    ebp,0x9e908f2e
  40da33:	bswap  ebx
  40da35:	das    
  40da36:	inc    edi
  40da37:	shl    BYTE PTR [edi+0x7],cl
  40da3a:	add    al,0x93
  40da3c:	jmp    0xc9fb:0x32ec9d82
  40da43:	push   esp
  40da44:	and    edx,DWORD PTR [edx-0x722d75]
  40da4a:	adc    eax,0x56818288
  40da4f:	mov    ebx,0xe944eef2
  40da54:	gs xchg esp,eax
  40da56:	xchg   ecx,eax
  40da57:	loopne 0x40da76
  40da59:	sub    BYTE PTR [edx+0x2c8260fc],cl
  40da5f:	xchg   BYTE PTR [edi+0x23d1dad2],al
  40da65:	into   
  40da66:	les    esp,FWORD PTR [eax+0x20]
  40da69:	push   ss
  40da6a:	call   0xcbc6d77a
  40da6f:	jns    0x40dad2
  40da71:	add    eax,0x4dc231cb
  40da76:	jns    0x40da82
  40da78:	dec    ebp
  40da79:	cld    
  40da7a:	in     eax,0x64
  40da7c:	outs   dx,BYTE PTR ds:[esi]
  40da7d:	(bad)  [eax+0x71]
  40da80:	iret   
  40da81:	sub    esp,DWORD PTR [ebp+0x70]
  40da84:	sub    DWORD PTR [ebx],0x78caf0c5
  40da8a:	and    cl,BYTE PTR [edi+0x10]
  40da8d:	push   cs
  40da8e:	pop    es
  40da8f:	pop    edi
  40da90:	mov    DWORD PTR [edi+edx*2-0x47],ebx
  40da94:	jg     0x40dab5
  40da96:	int3   
  40da97:	loope  0x40da19
  40da99:	dec    esi
  40da9a:	lods   eax,DWORD PTR ds:[esi]
  40da9b:	cmp    BYTE PTR [ebx-0x7cf9cdd6],0x92
  40daa2:	pop    es
  40daa3:	push   cs
  40daa4:	xchg   ebx,eax
  40daa5:	test   ch,ah
  40daa7:	pop    edx
  40daa8:	sbb    DWORD PTR [eax],esi
  40daaa:	xlat   BYTE PTR ds:[ebx]
  40daab:	pop    esi
  40daac:	loopne 0x40da4d
  40daae:	pop    edi
  40daaf:	cld    
  40dab0:	(bad)  
  40dab1:	push   cs
  40dab2:	mov    ebx,es
  40dab4:	cmp    ah,BYTE PTR [ebp+0x29]
  40dab7:	xchg   ebx,eax
  40dab8:	retf   
  40dab9:	pop    edi
  40daba:	xchg   ebp,eax
  40dabb:	sti    
  40dabc:	pop    esi
  40dabd:	into   
  40dabe:	mov    eax,0x2d6e917a
  40dac3:	jmp    0x40db0a
  40dac5:	and    eax,DWORD PTR [esi-0x22ee254c]
  40dacb:	pushf  
  40dacc:	add    al,0x41
  40dace:	adc    eax,0xb4669d03
  40dad3:	mov    al,0xdc
  40dad5:	inc    edx
  40dad6:	sub    edi,DWORD PTR [edx]
  40dad8:	out    dx,al
  40dad9:	push   es
  40dada:	sub    al,0x82
  40dadc:	bound  ecx,QWORD PTR [edx-0x4c]
  40dadf:	addr16 in eax,0xa8
  40dae2:	mov    ecx,0x4e35c450
  40dae7:	int    0x88
  40dae9:	sub    ebp,DWORD PTR [edi]
  40daeb:	and    edx,ebx
  40daed:	pop    ds
  40daee:	fist   DWORD PTR [ebx]
  40daf0:	mov    al,0x35
  40daf2:	jne    0x40daeb
  40daf4:	mov    ds:0x56d73992,al
  40daf9:	pop    es
  40dafa:	or     eax,DWORD PTR [edi+ebx*4-0x3a9b5c3c]
  40db01:	fs ds ret 0xda77
  40db06:	push   ss
  40db07:	jb     0x40db2e
  40db09:	and    bh,BYTE PTR [edx+0x4dce77e1]
  40db0f:	cmp    DWORD PTR [ebx+0x5add429f],edx
  40db15:	mov    esp,0xbc547675
  40db1a:	mov    WORD PTR [edi],es
  40db1c:	jmp    0x1ed7:0x868802f9
  40db23:	out    dx,al
  40db24:	mov    cl,BYTE PTR [edx+0x37]
  40db27:	das    
  40db28:	popa   
  40db29:	aam    0x5f
  40db2b:	dec    edi
  40db2c:	mov    bh,0x4a
  40db2e:	push   ebx
  40db2f:	sub    DWORD PTR [ecx+edi*2+0x6d25bebe],0xb0da8fc1
  40db3a:	add    eax,0xd4ffead3
  40db3f:	dec    ebp
  40db40:	mov    eax,0x421ae301
  40db45:	and    dh,dl
  40db47:	inc    edx
  40db48:	mov    al,BYTE PTR [ecx+ebp*2+0x68]
  40db4c:	or     al,0xd8
  40db4e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40db50:	mov    esp,0x7079d6ac
  40db55:	(bad)  
  40db57:	cmp    esi,esi
  40db59:	push   edx
  40db5a:	test   al,0x81
  40db5c:	gs cwde 
  40db5e:	jmp    0x40dbd9
  40db60:	lahf   
  40db61:	push   esi
  40db62:	popf   
  40db63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db64:	sbb    BYTE PTR [eax],al
  40db66:	rcl    DWORD PTR [ebx-0x68],0x3f
  40db6a:	rcl    BYTE PTR [eax+0x9],1
  40db6d:	icebp  
  40db6e:	dec    ebp
  40db6f:	(bad)  
  40db70:	frstor [edx-0x2c5d382c]
  40db76:	cmp    ch,0x25
  40db79:	mov    dh,0x8d
  40db7b:	nop
  40db7c:	inc    esi
  40db7d:	inc    edi
  40db7e:	jbe    0x40db8a
  40db80:	ret    
  40db81:	mov    ebx,0xde49712c
  40db86:	push   es
  40db87:	stos   BYTE PTR es:[edi],al
  40db88:	and    edi,DWORD PTR [edx-0x18]
  40db8b:	xor    DWORD PTR [ebp-0x1f],ebp
  40db8e:	inc    ebx
  40db8f:	dec    cx
  40db91:	rcr    BYTE PTR [ebx-0x583071e6],1
  40db97:	neg    BYTE PTR [edx+ebx*2]
  40db9a:	stc    
  40db9b:	pushf  
  40db9c:	jp     0x40db68
  40db9e:	inc    edi
  40db9f:	call   0x9623aca7
  40dba4:	jmp    0x3c5d2762
  40dba9:	stos   DWORD PTR es:[edi],eax
  40dbaa:	pop    eax
  40dbab:	cwde   
  40dbac:	ins    DWORD PTR es:[edi],dx
  40dbad:	push   ebx
  40dbae:	sar    dl,1
  40dbb0:	iret   
  40dbb1:	sub    DWORD PTR [edx+0x72],eax
  40dbb4:	xchg   ecx,eax
  40dbb5:	adc    BYTE PTR [ebx+eiz*2-0x2f],al
  40dbb9:	shl    BYTE PTR ds:0x2c35d452,cl
  40dbbf:	cmp    BYTE PTR [esi+0x1af54dbc],ch
  40dbc5:	ret    
  40dbc6:	mov    cl,0x40
  40dbc8:	push   cs
  40dbc9:	sbb    DWORD PTR [esi-0x17f5dff4],esp
  40dbcf:	(bad)  
  40dbd0:	into   
  40dbd1:	es int 0x18
  40dbd4:	ins    BYTE PTR es:[edi],dx
  40dbd5:	push   ss
  40dbd6:	xchg   DWORD PTR [eax],ebp
  40dbd8:	mov    esp,0xf02e7fbb
  40dbdd:	stos   BYTE PTR es:[edi],al
  40dbde:	aam    0xf7
  40dbe0:	pop    es
  40dbe1:	jp     0x40dbef
  40dbe3:	xor    dh,BYTE PTR [edi]
  40dbe5:	and    al,0xd5
  40dbe7:	(bad)  
  40dbe8:	retf   
  40dbe9:	punpcklbw mm2,DWORD PTR [ebp-0x45d0f933]
  40dbf0:	hlt    
  40dbf1:	clc    
  40dbf2:	sub    BYTE PTR [esi+edi*1],cl
  40dbf5:	pop    edi
  40dbf6:	jnp    0x40dba2
  40dbf8:	xchg   esp,eax
  40dbf9:	xchg   ebp,eax
  40dbfa:	inc    ecx
  40dbfb:	push   ebp
  40dbfc:	div    ebp
  40dbfe:	jo     0x40dbe8
  40dc00:	test   al,0x45
  40dc02:	inc    edi
  40dc03:	fiadd  DWORD PTR [ebx-0x70759f2]
  40dc09:	mov    ah,0x48
  40dc0b:	jge    0x40dc36
  40dc0d:	jg     0x40dc2b
  40dc0f:	jbe    0x40dc53
  40dc11:	loopne 0x40dc2f
  40dc13:	xchg   esp,eax
  40dc14:	cld    
  40dc15:	test   BYTE PTR [eax+0x16],dl
  40dc18:	mov    ebx,0xca225c03
  40dc1d:	jmp    FWORD PTR [esi-0x72]
  40dc20:	pop    ecx
  40dc21:	into   
  40dc22:	out    dx,eax
  40dc23:	les    esp,FWORD PTR [esi+0x54994522]
  40dc29:	inc    eax
  40dc2a:	fcom   st(1)
  40dc2c:	retf   0x47bd
  40dc2f:	inc    eax
  40dc30:	nop
  40dc31:	mov    esi,0x763ddcd5
  40dc36:	enter  0x585c,0x10
  40dc3a:	adc    al,0x82
  40dc3c:	jg     0x40dc1e
  40dc3e:	in     al,0x63
  40dc40:	iret   
  40dc41:	mov    bh,0xff
  40dc43:	pop    gs
  40dc45:	mov    ecx,0x8398a1bf
  40dc4a:	bound  ebp,QWORD PTR [esi]
  40dc4c:	in     al,0xb8
  40dc4e:	cs aam 0xde
  40dc51:	dec    esi
  40dc52:	mov    bh,0xb3
  40dc54:	(bad)  
  40dc55:	sub    eax,0xd347f584
  40dc5a:	pushf  
  40dc5b:	(bad)  
  40dc5c:	outs   dx,DWORD PTR ds:[esi]
  40dc5d:	mov    ebp,0xa1c838c0
  40dc62:	mov    ebx,0xd21249c7
  40dc67:	push   ds
  40dc68:	ins    DWORD PTR es:[edi],dx
  40dc69:	addr16 mov al,0xe8
  40dc6c:	dec    esi
  40dc6d:	push   edx
  40dc6e:	into   
  40dc6f:	cmc    
  40dc70:	shl    BYTE PTR [esi-0x23953425],cl
  40dc76:	repnz pushf 
  40dc78:	retf   0xcb56
  40dc7b:	adc    esi,DWORD PTR [eax]
  40dc7d:	ret    0x6a65
  40dc80:	aam    0x87
  40dc82:	(bad)  
  40dc83:	dec    DWORD PTR [esi]
  40dc85:	cmp    eax,0x68e60fae
  40dc8a:	into   
  40dc8b:	call   DWORD PTR ds:0xdc38232f
  40dc91:	repnz lahf 
  40dc93:	add    DWORD PTR [ecx+ebx*8-0xe],edx
  40dc97:	je     0x40dce1
  40dc99:	outs   dx,DWORD PTR ds:[esi]
  40dc9b:	mov    edi,0xad719cc5
  40dca0:	les    eax,FWORD PTR [ecx+esi*2-0x56]
  40dca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dca5:	cmp    ah,BYTE PTR [esi-0x38e4798b]
  40dcab:	rol    eax,1
  40dcad:	xor    ch,BYTE PTR [ebp+edx*4-0x54]
  40dcb1:	data16 mov al,0x54
  40dcb4:	or     BYTE PTR [esi+0x69],ch
  40dcb7:	mov    dl,0x77
  40dcb9:	or     al,0x17
  40dcbb:	sub    eax,0x9921f4c0
  40dcc0:	retf   0x6bfb
  40dcc3:	inc    edi
  40dcc4:	mov    WORD PTR [eax-0x5b],?
  40dcc7:	sti    
  40dcc8:	cld    
  40dcc9:	leave  
  40dcca:	pop    edx
  40dccb:	jnp    0x40dcdc
  40dccd:	(bad)  
  40dcce:	iret   
  40dccf:	jns    0x40dc73
  40dcd1:	sbb    DWORD PTR [eax+ecx*2-0x60b06cc1],edx
  40dcd8:	outs   dx,DWORD PTR ds:[esi]
  40dcd9:	sbb    eax,0x4de02947
  40dcde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcdf:	jb     0x40dce7
  40dce1:	inc    edi
  40dce2:	test   DWORD PTR [ebp-0x7e081e61],ebp
  40dce8:	pop    ebp
  40dce9:	adc    BYTE PTR [esi+0x10],dl
  40dcec:	push   ebp
  40dced:	test   DWORD PTR [ecx],edi
  40dcef:	inc    edx
  40dcf0:	xchg   esp,eax
  40dcf1:	mov    DWORD PTR [ebp+0x61b01812],edx
  40dcf7:	(bad)  
  40dcf8:	mov    eax,ds:0x2644a71b
  40dcfd:	xchg   ebx,eax
  40dcfe:	fidiv  DWORD PTR [edi]
  40dd00:	rcl    BYTE PTR [edi-0x72ca4a57],1
  40dd06:	ret    0xa95c
  40dd09:	and    eax,0xc2263652
  40dd0e:	mov    dh,0x6
  40dd10:	ror    esp,1
  40dd12:	popf   
  40dd13:	cmc    
  40dd14:	loopne 0x40dd90
  40dd16:	mov    esi,0x2eca29b6
  40dd1b:	dec    eax
  40dd1c:	sti    
  40dd1d:	lock into 
  40dd1f:	test   al,0x7d
  40dd21:	iret   
  40dd22:	and    ah,BYTE PTR [edi-0x80]
  40dd25:	ror    BYTE PTR [eax-0x57],cl
  40dd28:	int    0x9e
  40dd2a:	dec    ebx
  40dd2b:	mov    ecx,0x50898bc9
  40dd31:	inc    ebp
  40dd32:	out    dx,al
  40dd33:	es xchg esp,eax
  40dd35:	in     al,dx
  40dd36:	popa   
  40dd37:	sbb    BYTE PTR [edx],cl
  40dd39:	sub    dl,BYTE PTR ds:0xa405d6ea
  40dd3f:	jmp    0x40dcd7
  40dd41:	xor    ch,BYTE PTR [esi+0x1e318047]
  40dd47:	(bad)  
  40dd48:	(bad)  
  40dd49:	leave  
  40dd4a:	unpcklps xmm5,XMMWORD PTR [edi+eax*8]
  40dd4e:	mov    cs,WORD PTR [edx+0x3d50c683]
  40dd54:	adc    eax,0xecefd63a
  40dd59:	push   ebx
  40dd5a:	jmp    FWORD PTR [edi-0x39]
  40dd5d:	repz mov eax,0x648e8758
  40dd63:	mov    cl,BYTE PTR [edx]
  40dd65:	inc    ebp
  40dd66:	xchg   ch,bh
  40dd68:	mov    al,ds:0xc0c25ed
  40dd6d:	arpl   dx,cx
  40dd6f:	test   al,0x72
  40dd71:	jns    0x40ddf0
  40dd73:	cdq    
  40dd74:	paddusb mm5,QWORD PTR [ecx-0x57]
  40dd78:	mov    ebx,0xb77581e2
  40dd7d:	inc    esi
  40dd7e:	inc    esi
  40dd7f:	mov    eax,ds:0xcd6dd5ac
  40dd84:	xlat   BYTE PTR ds:[ebx]
  40dd85:	adc    dl,BYTE PTR [edi]
  40dd87:	out    0x4c,al
  40dd89:	sub    BYTE PTR [esi+0x514d5d15],dh
  40dd8f:	es fwait
  40dd91:	retf   
  40dd92:	addr16 fsubr st,st(1)
  40dd95:	aas    
  40dd96:	mov    BYTE PTR [edx-0x3d],ch
  40dd99:	stos   BYTE PTR es:[edi],al
  40dd9a:	jae    0x40dd9a
  40dd9c:	int3   
  40dd9d:	imul   DWORD PTR [eax-0x46566a12]
  40dda3:	mov    ecx,0x8f57cc1c
  40dda8:	dec    DWORD PTR [esi-0x5e9de608]
  40ddae:	push   ds
  40ddaf:	sub    eax,edi
  40ddb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddb2:	adc    ch,BYTE PTR [ebx]
  40ddb4:	push   eax
  40ddb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddb6:	(bad)  
  40ddb8:	bound  ebp,QWORD PTR [ebx+0x34]
  40ddbb:	inc    ecx
  40ddbc:	xchg   BYTE PTR [edx],ah
  40ddbe:	pop    esp
  40ddbf:	push   esp
  40ddc0:	cmp    BYTE PTR [ecx+0x13a0d2d],dl
  40ddc6:	xchg   edx,eax
  40ddc7:	push   ebp
  40ddc8:	inc    ebp
  40ddc9:	xchg   bh,ch
  40ddcb:	dec    ebp
  40ddcc:	jp     0x40ddda
  40ddce:	jecxz  0x40ddd3
  40ddd0:	test   BYTE PTR [edi],bh
  40ddd2:	mov    bl,0xe9
  40ddd4:	fidiv  DWORD PTR [esi]
  40ddd6:	jmp    DWORD PTR [edx]
  40ddd8:	int    0x84
  40ddda:	cmp    DWORD PTR [eax-0x7520955c],ebp
  40dde0:	xor    eax,0xed21182d
  40dde5:	out    0xe3,al
  40dde7:	xchg   esp,eax
  40dde8:	dec    ecx
  40dde9:	push   ebx
  40ddea:	pop    ds
  40ddeb:	fs aaa 
  40dded:	mov    eax,ds:0x804ee6bb
  40ddf2:	jbe    0x40de1a
  40ddf4:	cmp    eax,0xd252192f
  40ddf9:	mov    ah,0xc4
  40ddfb:	jno    0x40de78
  40ddfd:	pop    edx
  40ddfe:	enter  0x5bff,0x76
  40de02:	jno    0x40ddb8
  40de04:	int    0xc3
  40de06:	retf   0x21ac
  40de09:	xbegin 0xcd586a2b
  40de0f:	push   ebp
  40de10:	adc    eax,0x91984b12
  40de15:	pop    edx
  40de16:	ds cld 
  40de18:	push   edi
  40de19:	push   ds
  40de1a:	adc    dh,BYTE PTR [edx+0x51]
  40de1d:	and    BYTE PTR [esi],ah
  40de1f:	xchg   ebp,eax
  40de20:	push   ss
  40de21:	(bad)  [ebp-0x15a29397]
  40de27:	mov    al,0x5a
  40de29:	rcr    esi,1
  40de2b:	push   0xffffffcc
  40de2d:	jmp    0x23f20e04
  40de32:	out    0xe4,eax
  40de34:	cmp    eax,DWORD PTR [esi+0x7b12086d]
  40de3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de3b:	mov    WORD PTR [eax+0x1e],ss
  40de3e:	mov    bh,0x93
  40de40:	test   BYTE PTR [eax],bh
  40de42:	xchg   edi,eax
  40de43:	repz data16 loope 0x40de6b
  40de47:	les    ebx,FWORD PTR [edx+0x47b1ed8a]
  40de4d:	cmp    eax,DWORD PTR [edi+0x1c88d3bb]
  40de53:	mov    ebp,0x2f9831d0
  40de58:	hlt    
  40de59:	ret    
  40de5a:	jg     0x40de28
  40de5c:	xor    bh,BYTE PTR [eax+0x714ceea2]
  40de62:	mov    esi,0xd60096ca
  40de67:	jnp    0x40de35
  40de69:	xchg   edx,eax
  40de6a:	data16 cld 
  40de6c:	(bad)  
  40de6d:	mov    ebp,0x751d70e3
  40de72:	push   0xffffff98
  40de74:	sub    al,0x4b
  40de76:	inc    ecx
  40de77:	repz call 0xd7d479d9
  40de7d:	lock mov eax,cs:0xb6bdf82c
  40de84:	mov    esi,0x7bb2f1f5
  40de89:	and    ebx,ebx
  40de8b:	xlat   BYTE PTR ds:[ebx]
  40de8c:	outs   dx,BYTE PTR ds:[esi]
  40de8d:	out    0xdc,al
  40de8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de90:	push   esi
  40de91:	imul   ebp,DWORD PTR [ebx],0xcf2e2df7
  40de97:	push   0x71
  40de99:	add    DWORD PTR [esi-0x76],ecx
  40de9c:	xor    eax,0x6ab9e5d
  40dea1:	lods   eax,DWORD PTR ds:[esi]
  40dea2:	sub    DWORD PTR [esi+ebx*4],edx
  40dea5:	push   0xa49c39b8
  40deaa:	pop    ss
  40deab:	sub    DWORD PTR [esi],ebp
  40dead:	push   esp
  40deae:	dec    ecx
  40deaf:	test   al,0x12
  40deb1:	fcom   QWORD PTR [edi-0x41]
  40deb4:	dec    esi
  40deb5:	cmp    DWORD PTR [edx+edi*4],edx
  40deb8:	cmp    DWORD PTR [edi+edi*1],esi
  40debb:	jnp    0x40de51
  40debd:	clc    
  40debe:	stos   DWORD PTR es:[edi],eax
  40debf:	fdiv   st(5),st
  40dec1:	in     al,dx
  40dec2:	jmp    0x207f:0x4f631771
  40dec9:	fild   WORD PTR [edi-0x7e]
  40decc:	inc    edi
  40decd:	out    dx,eax
  40dece:	lock and BYTE PTR [esi+0x60236fc7],dl
  40ded5:	outs   dx,DWORD PTR ds:[esi]
  40ded6:	fsub   DWORD PTR [edi]
  40ded8:	push   ecx
  40ded9:	test   eax,0xcfb0ba2d
  40dede:	mov    esi,0xf6a849a1
  40dee3:	test   al,0xea
  40dee5:	ss jecxz 0x40de72
  40dee8:	test   dh,al
  40deea:	pop    ecx
  40deeb:	je     0x40dec0
  40deed:	dec    ecx
  40deee:	shr    BYTE PTR fs:[edi-0x22e02484],0xdf
  40def6:	jns    0x40deac
  40def8:	jp     0x40dea5
  40defa:	push   cs
  40defb:	(bad)  [edx-0x125eeb5a]
  40df01:	dec    edi
  40df02:	push   ebp
  40df03:	pop    edx
  40df04:	adc    ch,bl
  40df06:	mov    BYTE PTR [bx+di+0x3d8b],dl
  40df0b:	pop    esp
  40df0c:	mov    dh,0xcc
  40df0e:	dec    esi
  40df0f:	pop    es
  40df10:	mov    al,ds:0xa629dbf9
  40df15:	ret    0x1e9e
  40df18:	test   al,0x65
  40df1a:	dec    ebp
  40df1b:	push   esi
  40df1c:	loopne 0x40df8b
  40df1e:	xchg   ecx,eax
  40df1f:	sub    dh,cl
  40df21:	outs   dx,BYTE PTR ds:[esi]
  40df22:	and    BYTE PTR [edx-0x5f],dl
  40df25:	inc    ecx
  40df26:	sub    DWORD PTR [ebx-0x57aee596],0x6d
  40df2d:	xchg   BYTE PTR [edx+0x12],bl
  40df30:	test   al,0x0
  40df32:	ss ret 
  40df34:	cli    
  40df35:	fidivr WORD PTR [eax+eiz*8+0xf37d01c]
  40df3c:	into   
  40df3d:	mov    dl,0x0
  40df3f:	sbb    eax,0x3bdfc707
  40df44:	(bad)  
  40df45:	into   
  40df46:	es (bad) 
  40df48:	out    dx,al
  40df49:	sbb    esi,DWORD PTR ds:[esi]
  40df4c:	mov    dh,0x60
  40df4e:	cmp    ch,bl
  40df50:	(bad)  
  40df52:	mov    edx,0xb751ba55
  40df57:	and    esi,esi
  40df59:	stos   BYTE PTR es:[edi],al
  40df5a:	aad    0xb6
  40df5c:	ins    BYTE PTR es:[edi],dx
  40df5d:	dec    ebp
  40df5e:	cmp    bh,bl
  40df60:	jge    0x40dfa6
  40df62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df63:	sbb    BYTE PTR [ebx-0x257c61cd],ch
  40df69:	add    DWORD PTR [edx+edi*4],0xffffffc6
  40df6d:	lods   al,BYTE PTR ds:[esi]
  40df6e:	(bad)  
  40df6f:	pop    ds
  40df70:	les    esp,FWORD PTR [eax]
  40df72:	add    DWORD PTR ds:0xd60b575d,edx
  40df78:	fwait
  40df79:	or     esp,esi
  40df7b:	fs pop esi
  40df7d:	data16 sub cl,BYTE PTR [esi+0x3b]
  40df81:	jg     0x40df70
  40df83:	dec    esp
  40df84:	test   al,0xee
  40df86:	nop
  40df87:	adc    edi,DWORD PTR [eax+0x7b312acc]
  40df8d:	mov    edx,0x3a7e03a7
  40df92:	jns    0x40e00e
  40df94:	jmp    0xd17422eb
  40df99:	xlat   BYTE PTR ds:[ebx]
  40df9a:	push   es
  40df9b:	jp     0x40dfe2
  40df9d:	daa    
  40df9e:	push   edi
  40df9f:	gs lock xchg edx,eax
  40dfa2:	pop    ss
  40dfa3:	iret   
  40dfa4:	cmc    
  40dfa5:	mov    ebp,0x4484a71f
  40dfaa:	push   0xc8ae05e2
  40dfaf:	imul   ecx,DWORD PTR [esp+edx*2+0x33c95d0],0xae926673
  40dfba:	shl    BYTE PTR [esi-0x3d],cl
  40dfbd:	or     DWORD PTR [ebx],0x74638ae
  40dfc3:	fld    TBYTE PTR ds:0xba961f61
  40dfc9:	mov    bl,ah
  40dfcb:	mov    eax,ds:0x86a5b8b6
  40dfd0:	ret    
  40dfd1:	fdiv   st(1),st
  40dfd3:	mov    ds:0x8155b746,al
  40dfd8:	arpl   WORD PTR [ebx-0x51d75afc],ax
  40dfde:	icebp  
  40dfdf:	dec    esi
  40dfe0:	sbb    DWORD PTR ds:0xffca3106,ebp
  40dfe6:	fld    QWORD PTR [ecx+edx*8]
  40dfe9:	xor    esi,eax
  40dfeb:	xor    BYTE PTR [edi-0x3c],ah
  40dfee:	ss push ds
  40dff0:	repnz and eax,0x61d232ae
  40dff6:	cmc    
  40dff7:	je     0x40e073
  40dff9:	and    BYTE PTR [ecx],bh
  40dffb:	lods   eax,DWORD PTR ds:[esi]
  40dffc:	cmc    
  40dffd:	clc    
  40dffe:	aad    0xca
  40e000:	and    eax,0xf9ffd92e
  40e005:	int3   
  40e006:	push   ss
  40e007:	sub    al,0xcd
  40e009:	mov    fs,WORD PTR [edi-0x2deb51b3]
  40e00f:	mov    eax,0xb6ee2cbd
  40e014:	cmc    
  40e015:	shr    edx,0xf7
  40e018:	xchg   ebp,eax
  40e019:	xchg   edx,eax
  40e01a:	jo     0x40dfb2
  40e01c:	push   es
  40e01d:	push   ss
  40e01e:	sub    al,0x8a
  40e020:	xlat   BYTE PTR ds:[ebx]
  40e021:	xchg   edx,eax
  40e022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e023:	lahf   
  40e024:	inc    ebx
  40e025:	xlat   BYTE PTR ds:[ebx]
  40e026:	xchg   BYTE PTR [esi+0x64],ah
  40e029:	dec    edi
  40e02a:	mov    al,ds:0x84929ce5
  40e02f:	lods   al,BYTE PTR ds:[esi]
  40e030:	and    esi,DWORD PTR [eax+edx*8+0x13cc3bb0]
  40e037:	inc    ecx
  40e038:	inc    edi
  40e039:	add    eax,DWORD PTR [eax-0xd]
  40e03c:	push   eax
  40e03d:	ins    DWORD PTR es:[edi],dx
  40e03e:	push   esi
  40e03f:	into   
  40e040:	dec    ebx
  40e041:	and    esp,DWORD PTR [esi-0x3e4c597a]
  40e047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e048:	scas   eax,DWORD PTR es:[edi]
  40e049:	jae    0x2848e79d
  40e04f:	cmc    
  40e050:	mov    cl,0xca
  40e052:	cmp    DWORD PTR [esp+ebx*8-0x2a],0x9
  40e057:	jnp    0x40e0d5
  40e059:	jno    0x40e0bb
  40e05b:	xchg   ebp,eax
  40e05c:	mov    edx,?
  40e05e:	outs   dx,BYTE PTR ds:[esi]
  40e05f:	(bad)  
  40e060:	scas   eax,DWORD PTR es:[edi]
  40e061:	rcl    BYTE PTR [edi],1
  40e063:	(bad)  
  40e065:	cmp    cl,bl
  40e067:	dec    edx
  40e068:	lods   al,BYTE PTR ds:[esi]
  40e069:	sbb    bl,BYTE PTR [ecx+0x603f7d07]
  40e06f:	aad    0x68
  40e071:	pop    eax
  40e072:	cmp    BYTE PTR [edi+0x1],ah
  40e075:	leave  
  40e076:	mov    edx,DWORD PTR [ebx]
  40e078:	dec    esi
  40e079:	mov    bl,0x8a
  40e07b:	inc    ebx
  40e07c:	mov    DWORD PTR [ecx-0x107fe279],edx
  40e082:	les    edi,FWORD PTR [esi]
  40e084:	dec    ebx
  40e085:	mov    eax,ds:0xfb1c0786
  40e08a:	dec    edi
  40e08b:	mov    ds:0x6dab1685,al
  40e090:	iret   
  40e091:	jecxz  0x40e111
  40e093:	stos   DWORD PTR es:[edi],eax
  40e094:	sub    al,0xa5
  40e096:	cld    
  40e097:	test   al,0x97
  40e099:	out    0xce,eax
  40e09b:	ss mov ebx,0x6970a261
  40e0a1:	popf   
  40e0a2:	mov    ebp,edi
  40e0a4:	sbb    DWORD PTR [esi],ebp
  40e0a6:	(bad)  
  40e0a7:	pop    ss
  40e0a8:	fwait
  40e0a9:	popa   
  40e0aa:	sbb    eax,DWORD PTR [ecx-0x9]
  40e0ad:	popf   
  40e0ae:	mov    ds:0xf7e691ee,al
  40e0b3:	and    eax,0x54874ec5
  40e0b8:	mov    cl,0x5c
  40e0ba:	ins    DWORD PTR es:[edi],dx
  40e0bb:	push   ds
  40e0bc:	loopne 0x40e132
  40e0be:	adc    BYTE PTR [edx],dh
  40e0c0:	ss call 0xca85:0x11d7fbea
  40e0c8:	jle    0x40e059
  40e0ca:	shr    DWORD PTR [ecx+0x71],0x56
  40e0ce:	retf   0x5dd
  40e0d1:	xor    DWORD PTR [ebp-0xf],esi
  40e0d4:	popa   
  40e0d5:	not    BYTE PTR [ebp+esi*1-0x6906a384]
  40e0dc:	lods   al,BYTE PTR ds:[esi]
  40e0dd:	les    esi,FWORD PTR [eax]
  40e0df:	bound  esi,QWORD PTR ds:0xb84f6954
  40e0e5:	pop    edi
  40e0e6:	xor    al,0xe7
  40e0e8:	adc    DWORD PTR [ebx],edx
  40e0ea:	adc    al,0xea
  40e0ec:	or     BYTE PTR [edi+0x4ee3937e],bl
  40e0f2:	lea    esp,[edx+0x7dc86882]
  40e0f8:	enter  0x7214,0x7e
  40e0fc:	push   es
  40e0fd:	or     ebx,esp
  40e0ff:	fwait
  40e100:	inc    ebp
  40e101:	fiadd  WORD PTR [edi-0x41]
  40e104:	jp     0x40e0c5
  40e106:	mov    BYTE PTR [ebp-0x21],0x2e
  40e10a:	mov    ebx,0x6ea82d51
  40e10f:	ja     0x40e0ce
  40e111:	xor    DWORD PTR [edx],esp
  40e113:	jns    0x40e124
  40e115:	sti    
  40e116:	sbb    al,0x8f
  40e118:	mov    edi,fs
  40e11a:	mov    ecx,0x78d5f72b
  40e11f:	jns    0x40e18a
  40e121:	sbb    esp,edx
  40e123:	add    BYTE PTR [ebx-0x10224e66],cl
  40e129:	sbb    DWORD PTR [ebx-0x7c1bc0cb],edi
  40e12f:	push   ecx
  40e130:	lods   eax,DWORD PTR ds:[esi]
  40e131:	mov    fs,esi
  40e133:	rcl    ah,0x70
  40e136:	xchg   edx,eax
  40e137:	inc    esp
  40e138:	popf   
  40e139:	mov    dl,0x2c
  40e13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e13c:	lock jl 0x40e1b8
  40e13f:	fdiv   QWORD PTR [edi-0x1739a694]
  40e145:	sar    DWORD PTR [ebp-0x32],cl
  40e148:	jbe    0x40e0d6
  40e14a:	imul   edi,DWORD PTR [edx+0x46dc2a04],0x63
  40e151:	cmp    BYTE PTR [eax-0xe304772],al
  40e157:	bound  esp,QWORD PTR ds:0xfb79d6ea
  40e15d:	lock sub eax,0xfbe0d388
  40e163:	sub    cl,0x58
  40e166:	jbe    0x40e183
  40e168:	rcr    BYTE PTR [edx],0xe9
  40e16b:	and    ch,BYTE PTR [ecx-0x2f]
  40e16e:	cwde   
  40e16f:	mov    ds:0xd8fb2d15,eax
  40e174:	cmp    eax,0x433f2518
  40e179:	mov    bl,bh
  40e17b:	hlt    
  40e17c:	add    ah,bh
  40e17e:	pop    ecx
  40e17f:	retf   
  40e180:	xchg   ecx,eax
  40e181:	ret    0x4021
  40e184:	ffree  st(6)
  40e186:	data16 int3 
  40e188:	imul   BYTE PTR [esi-0x24d6c91]
  40e18e:	test   BYTE PTR ds:0x7ad0cf12,ch
  40e194:	pop    esi
  40e195:	dec    ebx
  40e196:	loope  0x40e202
  40e198:	cmp    bl,BYTE PTR [ebx-0x2d]
  40e19b:	shl    ch,1
  40e19d:	jp     0x40e19a
  40e19f:	fnsave [edx+0x4a25c49]
  40e1a5:	mov    esp,0xbc922f7
  40e1aa:	or     ecx,DWORD PTR [ebx]
  40e1ac:	fstp   TBYTE PTR [esi]
  40e1ae:	inc    esp
  40e1af:	out    0x51,al
  40e1b1:	pop    edi
  40e1b2:	lds    esi,FWORD PTR [ebx]
  40e1b4:	xor    ch,ah
  40e1b6:	pop    es
  40e1b7:	push   0x34
  40e1b9:	jecxz  0x40e160
  40e1bb:	ja     0x40e224
  40e1bd:	add    ecx,esp
  40e1bf:	loopne 0x40e184
  40e1c1:	out    0x59,al
  40e1c3:	popa   
  40e1c4:	inc    edi
  40e1c5:	out    0xca,al
  40e1c7:	or     BYTE PTR es:[ecx-0x30],ch
  40e1cb:	push   0x4f39c54b
  40e1d0:	test   DWORD PTR [ebp-0xae81f27],ebx
  40e1d6:	(bad)  
  40e1d7:	arpl   dx,cx
  40e1d9:	xrelease xchg BYTE PTR [edx-0x36],ah
  40e1dd:	inc    DWORD PTR [edx]
  40e1df:	fst    QWORD PTR [edi-0x6986f000]
  40e1e5:	inc    edx
  40e1e6:	sub    eax,ebx
  40e1e8:	jb     0x40e233
  40e1ea:	scas   al,BYTE PTR es:[edi]
  40e1eb:	iret   
  40e1ec:	xchg   edi,eax
  40e1ed:	(bad)  
  40e1ee:	data16 jbe 0x40e201
  40e1f1:	inc    esi
  40e1f2:	int3   
  40e1f3:	lods   al,BYTE PTR ds:[esi]
  40e1f4:	sbb    bl,BYTE PTR [eax-0x2c298eb3]
  40e1fa:	mov    dh,bh
  40e1fc:	jnp    0x40e1eb
  40e1fe:	retf   
  40e1ff:	inc    DWORD PTR [ebx]
  40e201:	sbb    BYTE PTR [ebx],ch
  40e203:	cmp    cl,ch
  40e205:	imul   ebp,DWORD PTR [ebp-0xc],0x61
  40e209:	popf   
  40e20a:	lods   eax,DWORD PTR ds:[esi]
  40e20b:	cmp    eax,0x646b6f56
  40e210:	fincstp 
  40e212:	jns    0x40e1a7
  40e214:	fdivr  DWORD PTR [eax+ecx*1-0x37]
  40e218:	arpl   WORD PTR [ebx-0x13],di
  40e21b:	dec    ebx
  40e21c:	sub    DWORD PTR [esi],esp
  40e21e:	mov    al,0xd3
  40e220:	push   edx
  40e221:	push   edx
  40e222:	mov    ds:0xf1f091d8,eax
  40e227:	outs   dx,BYTE PTR ds:[esi]
  40e228:	xchg   esi,eax
  40e229:	mov    esi,0x6df245d3
  40e22e:	pop    esp
  40e22f:	stos   DWORD PTR es:[edi],eax
  40e230:	test   eax,0x812464bb
  40e235:	xchg   ebx,eax
  40e236:	je     0x40e1ed
  40e238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e239:	shr    BYTE PTR [ecx+0x6],0xc8
  40e23d:	mov    cl,0x0
  40e23f:	(bad)  
  40e240:	push   ds
  40e241:	das    
  40e242:	in     eax,dx
  40e243:	adc    DWORD PTR [esi],eax
  40e245:	jae    0x40e27d
  40e247:	xchg   DWORD PTR [edx],esp
  40e249:	dec    esi
  40e24a:	fstp   DWORD PTR [edx+0x2e]
  40e24d:	jle    0x40e228
  40e24f:	rcl    BYTE PTR [ecx+ecx*8-0x31],0x92
  40e254:	loope  0x40e270
  40e256:	add    al,0xc7
  40e258:	jmp    0xf5a0b971
  40e25d:	and    edi,DWORD PTR [edx-0x14]
  40e260:	(bad)  
  40e261:	je     0x40e22a
  40e263:	test   BYTE PTR [ebx+0x2fdfcc19],al
  40e269:	inc    edx
  40e26a:	add    eax,0xf26eb003
  40e26f:	les    esp,FWORD PTR cs:[eax+0x7c2a3310]
  40e276:	adc    BYTE PTR [edi-0x4e],dh
  40e279:	hlt    
  40e27a:	jno    0x40e251
  40e27c:	mov    cl,0x95
  40e27e:	nop
  40e27f:	cmc    
  40e280:	(bad)  
  40e281:	out    dx,al
  40e282:	(bad)  
  40e283:	into   
  40e284:	aad    0xb1
  40e286:	adc    DWORD PTR [ebx-0xcb49b7b],ebx
  40e28c:	cmp    al,0x2d
  40e28e:	sub    eax,0x9aeeb7d1
  40e293:	pop    esi
  40e294:	push   ss
  40e295:	sahf   
  40e296:	adc    al,0x3c
  40e298:	or     bl,dh
  40e29a:	retf   
  40e29b:	fcomp  DWORD PTR [esi+0x56]
  40e29e:	arpl   cx,si
  40e2a0:	jl     0x40e2cd
  40e2a2:	pop    eax
  40e2a4:	ret    0x532f
  40e2a7:	cwde   
  40e2a8:	es inc ecx
  40e2aa:	inc    eax
  40e2ab:	push   ds
  40e2ac:	and    al,0x55
  40e2ae:	test   BYTE PTR [edx+0x76],ah
  40e2b1:	add    al,0x17
  40e2b3:	into   
  40e2b4:	mov    ds,esp
  40e2b6:	xchg   ecx,eax
  40e2b7:	push   eax
  40e2b8:	jge    0x40e2f6
  40e2ba:	cmp    bl,ah
  40e2bc:	cmp    DWORD PTR [edx-0x13b10e11],ebp
  40e2c2:	xor    eax,0x31062970
  40e2c7:	shl    ebx,0x6e
  40e2ca:	clc    
  40e2cb:	ins    BYTE PTR es:[edi],dx
  40e2cc:	mov    esp,0xe3712f25
  40e2d1:	dec    esp
  40e2d2:	push   0xc7c4a85b
  40e2d7:	test   DWORD PTR [esi-0x22c6cd12],ecx
  40e2dd:	lods   al,BYTE PTR ds:[esi]
  40e2de:	dec    esp
  40e2df:	imul   eax,DWORD PTR [ebx+eiz*8-0x59],0xffffffd4
  40e2e4:	dec    edx
  40e2e5:	and    DWORD PTR [edi-0x70],esi
  40e2e8:	dec    dh
  40e2ea:	xor    eax,0x41565a49
  40e2ef:	aad    0xd5
  40e2f1:	cmp    BYTE PTR [ebx],dl
  40e2f3:	stc    
  40e2f4:	sbb    edi,edi
  40e2f6:	pusha  
  40e2f7:	push   ebx
  40e2f8:	push   edx
  40e2f9:	xor    BYTE PTR [esi],dh
  40e2fb:	sbb    dh,bl
  40e2fd:	jmp    0x40e2ff
  40e2ff:	loope  0x40e373
  40e301:	mov    esi,0x5c1d424e
  40e306:	sbb    ebx,edi
  40e308:	ret    0x778
  40e30b:	test   eax,0x81e2af86
  40e310:	jl     0x40e2a9
  40e312:	mov    eax,ds:0xe0e313bb
  40e317:	mov    eax,ds:0xee871a9c
  40e31c:	outs   dx,BYTE PTR ds:[esi]
  40e31d:	(bad)  
  40e31e:	add    eax,0x5c168296
  40e323:	dec    ebp
  40e324:	mov    bh,0xea
  40e326:	dec    esi
  40e327:	lods   al,BYTE PTR ds:[esi]
  40e328:	xor    eax,0x30c331f8
  40e32d:	jae    0x40e2f3
  40e32f:	jns    0x40e36e
  40e331:	pop    edx
  40e332:	jbe    0x40e2cc
  40e334:	scas   al,BYTE PTR es:[edi]
  40e335:	frstor [eax+eax*8]
  40e338:	and    al,0xff
  40e33a:	xchg   dl,ah
  40e33c:	push   ebp
  40e33d:	je     0x40e2d0
  40e33f:	arpl   WORD PTR [ebx+0x558aa72d],cx
  40e345:	xchg   ebx,eax
  40e346:	push   es
  40e347:	xor    dl,BYTE PTR [eax]
  40e349:	xchg   ebx,eax
  40e34a:	retf   0x40b3
  40e34d:	jmp    0x40e3b8
  40e34f:	das    
  40e350:	retf   
  40e351:	fwait
  40e352:	pop    edi
  40e353:	in     al,0x2
  40e355:	jmp    0x40e2d9
  40e357:	(bad)  
  40e358:	mov    edi,DWORD PTR [edi-0x550e04db]
  40e35e:	js     0x40e38b
  40e360:	shr    BYTE PTR [edx+0x6e],cl
  40e363:	push   ebx
  40e364:	cmp    cl,BYTE PTR [eax-0x3dc367c2]
  40e36a:	rcl    DWORD PTR [ebx],0x35
  40e36d:	scas   al,BYTE PTR es:[edi]
  40e36e:	mov    eax,ds:0x6bb1023f
  40e373:	xchg   ebx,eax
  40e374:	jecxz  0x40e375
  40e376:	dec    esi
  40e377:	push   ds
  40e378:	(bad)  
  40e379:	std    
  40e37a:	sbb    eax,0x1ccfe338
  40e37f:	(bad)  
  40e380:	sub    al,bl
  40e382:	fwait
  40e383:	rol    BYTE PTR [esi],1
  40e385:	scas   eax,DWORD PTR es:[edi]
  40e386:	xchg   ecx,eax
  40e387:	inc    esp
  40e388:	adc    BYTE PTR [ebx-0x7d],ch
  40e38b:	xchg   ebx,eax
  40e38c:	sbb    DWORD PTR [ebp-0x44],esp
  40e38f:	push   edi
  40e390:	add    BYTE PTR [eax+esi*8],bh
  40e393:	call   0x5e8d:0xefed0389
  40e39a:	and    ch,BYTE PTR [edi-0x25ffd8e8]
  40e3a0:	pop    edi
  40e3a1:	sbb    dh,BYTE PTR [edi-0x5b]
  40e3a4:	cld    
  40e3a5:	(bad)  
  40e3a6:	out    dx,eax
  40e3a7:	repz mov eax,ds:0xdd8217f7
  40e3ad:	(bad)
  40e3b0:	outs   dx,BYTE PTR ds:[esi]
  40e3b1:	aas    
  40e3b2:	and    DWORD PTR [edi-0x5b],esp
  40e3b5:	push   ebx
  40e3b6:	mov    cl,0x7d
  40e3b8:	out    0xca,al
  40e3ba:	jae    0x40e3e1
  40e3bc:	in     al,dx
  40e3bd:	data16 into 
  40e3bf:	leave  
  40e3c0:	jae    0x40e3b9
  40e3c2:	xor    eax,DWORD PTR [ebx-0x359ef06e]
  40e3c8:	inc    esp
  40e3c9:	xor    bh,cl
  40e3cb:	out    0xa7,al
  40e3cd:	add    ah,BYTE PTR [ebx+0x54017a9a]
  40e3d3:	inc    ebp
  40e3d4:	repz push 0xd399a7d0
  40e3da:	fstp   DWORD PTR [edi-0x30]
  40e3dd:	ret    0x8cd4
  40e3e0:	cmp    al,0x2
  40e3e2:	out    0xe3,eax
  40e3e4:	sub    DWORD PTR [edi+0x784876a7],0xffffffb2
  40e3eb:	mov    eax,0x91e71d49
  40e3f0:	ret    0xfb52
  40e3f3:	leave  
  40e3f4:	sub    ebp,DWORD PTR [esi+0x28207625]
  40e3fa:	xor    DWORD PTR [ecx+0x4c],ebx
  40e3fd:	dec    eax
  40e3fe:	enter  0xc54b,0xbf
  40e402:	(bad)
  40e405:	dec    ecx
  40e406:	leave  
  40e407:	push   esp
  40e408:	pop    es
  40e409:	cmp    eax,0x5e5b7b5
  40e40e:	jae    0x40e3f8
  40e410:	iret   
  40e411:	and    al,BYTE PTR [edx-0x3867e499]
  40e417:	cmc    
  40e418:	dec    edi
  40e419:	inc    edx
  40e41a:	inc    ebp
  40e41b:	ret    
  40e41c:	lahf   
  40e41d:	sbb    DWORD PTR [edx],0xffffffb8
  40e420:	xor    DWORD PTR [ebp+ecx*8+0x63d03bbb],ecx
  40e427:	enter  0x6c5c,0x53
  40e42b:	cmovne edx,DWORD PTR [ecx]
  40e42e:	push   esp
  40e42f:	enter  0xfb80,0x83
  40e433:	jmp    0x40e43b
  40e435:	mov    bh,0x21
  40e437:	dec    edi
  40e438:	loopne 0x40e483
  40e43a:	mov    ebp,0x41dbe2d8
  40e43f:	mov    BYTE PTR [ecx],bh
  40e441:	xchg   edx,eax
  40e442:	xchg   ebp,eax
  40e443:	shl    BYTE PTR [ebx-0x43],cl
  40e446:	push   ecx
  40e447:	xor    DWORD PTR [ebp-0x36],esp
  40e44a:	mov    bl,0x9d
  40e44c:	push   esp
  40e44d:	jae    0x40e48e
  40e44f:	in     al,dx
  40e450:	sub    eax,0x24b404c9
  40e455:	outs   dx,BYTE PTR ds:[esi]
  40e456:	fmul   QWORD PTR [eax]
  40e458:	push   esi
  40e459:	dec    esp
  40e45a:	sbb    eax,0xe9c9768
  40e45f:	add    eax,0xeb22d7f1
  40e464:	or     BYTE PTR [edi-0x1f5a73aa],cl
  40e46a:	scas   eax,DWORD PTR es:[edi]
  40e46b:	jle    0x40e3fd
  40e46d:	retf   0xe9eb
  40e470:	xchg   ebp,eax
  40e471:	(bad)  
  40e472:	mov    edx,0x6a90d285
  40e477:	jmp    0x40e430
  40e479:	sbb    BYTE PTR [ecx-0x15],dl
  40e47c:	clc    
  40e47d:	sub    DWORD PTR [ebp+0x1a],0xfffffffa
  40e481:	cli    
  40e482:	sub    DWORD PTR [eax],ebp
  40e484:	(bad)  
  40e485:	jp     0x40e4e9
  40e487:	stc    
  40e488:	les    ecx,FWORD PTR [esi]
  40e48a:	mov    bh,0xe
  40e48c:	push   ss
  40e48d:	xlat   BYTE PTR ds:[ebx]
  40e48e:	es xchg esp,eax
  40e490:	out    dx,eax
  40e491:	je     0x40e46d
  40e493:	addr16 enter 0x4ee6,0x15
  40e498:	inc    edi
  40e499:	(bad)  
  40e49b:	jmp    0x5c28:0xf4ff3b81
  40e4a2:	sub    BYTE PTR [edx],0x2f
  40e4a5:	push   es
  40e4a6:	push   ebp
  40e4a7:	mov    dl,0xfe
  40e4a9:	cwde   
  40e4aa:	dec    esp
  40e4ab:	arpl   cx,sp
  40e4ad:	push   ss
  40e4ae:	ins    DWORD PTR es:[edi],dx
  40e4af:	fnstsw WORD PTR [eax+0x34fe07bc]
  40e4b5:	rcl    DWORD PTR ds:0xc95c0960,1
  40e4bb:	mov    cl,0x60
  40e4bd:	sbb    eax,DWORD PTR [edi+eax*2+0x4d]
  40e4c1:	daa    
  40e4c2:	or     DWORD PTR [ecx+0x43],0xb30b99e0
  40e4c9:	inc    esp
  40e4ca:	mov    edi,0x3607dede
  40e4cf:	mov    cl,0x83
  40e4d1:	and    al,0x42
  40e4d3:	adc    eax,0x708da590
  40e4d8:	icebp  
  40e4d9:	lods   al,BYTE PTR ds:[esi]
  40e4da:	out    0xf2,eax
  40e4dc:	in     al,0xa
  40e4de:	xchg   edx,eax
  40e4df:	fs cmp eax,0x43d9d595
  40e4e5:	add    DWORD PTR [edi],edi
  40e4e7:	pushf  
  40e4e8:	in     al,dx
  40e4e9:	mov    edi,esp
  40e4eb:	pop    edi
  40e4ec:	loop   0x40e535
  40e4ee:	jl     0x40e54e
  40e4f0:	and    eax,0x2b218721
  40e4f5:	xchg   esi,eax
  40e4f6:	push   0x772ca3d4
  40e4fb:	(bad)  [eax]
  40e4fd:	lods   eax,DWORD PTR ds:[esi]
  40e4fe:	dec    ecx
  40e4ff:	sbb    BYTE PTR [ecx],0xed
  40e502:	add    DWORD PTR [ebx],ebp
  40e504:	jo     0x40e4de
  40e506:	pushf  
  40e507:	inc    esp
  40e508:	outs   dx,DWORD PTR ds:[esi]
  40e509:	or     edi,esi
  40e50b:	sbb    ch,dl
  40e50d:	dec    ebx
  40e50e:	adc    ebp,DWORD PTR [ebp+0x54]
  40e511:	add    dh,cl
  40e513:	jae    0x40e515
  40e515:	and    al,0xbe
  40e517:	inc    esp
  40e518:	stc    
  40e519:	nop
  40e51a:	inc    edx
  40e51b:	fst    QWORD PTR [ecx-0x529b6402]
  40e521:	dec    ebx
  40e522:	inc    edx
  40e523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e524:	enter  0xf81b,0x9c
  40e528:	loop   0x40e4b4
  40e52a:	pusha  
  40e52b:	mov    DWORD PTR [edi+0xe],ecx
  40e52e:	pop    ebp
  40e52f:	jb     0x40e52b
  40e531:	lds    eax,FWORD PTR ds:0x9fc0a84c
  40e537:	adc    edx,DWORD PTR [edx+0xdd126d3]
  40e53d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e53e:	push   esi
  40e53f:	mov    esi,gs
  40e541:	push   cs
  40e542:	int    0xa0
  40e544:	jmp    0xda1f9ba5
  40e549:	push   cs
  40e54a:	pop    eax
  40e54b:	pop    ds
  40e54c:	adc    eax,0xd131543a
  40e551:	or     eax,0x19e4aca2
  40e556:	cmc    
  40e557:	inc    ebx
  40e558:	pop    edx
  40e559:	jmp    FWORD PTR [ebp+0x34d92854]
  40e55f:	rcl    BYTE PTR [eax+esi*2],cl
  40e562:	in     al,dx
  40e563:	out    dx,al
  40e564:	or     DWORD PTR [esi-0x80],esi
  40e567:	or     al,0x48
  40e569:	jg     0x40e59b
  40e56b:	mov    BYTE PTR [ebx],bh
  40e56d:	jmp    0x40e58c
  40e56f:	sub    esi,DWORD PTR [edi-0x29f156e8]
  40e575:	jge    0x40e549
  40e577:	or     DWORD PTR [eax-0x10a30c18],ecx
  40e57d:	test   ebx,ebp
  40e57f:	mov    ds:0xe1502ca8,al
  40e584:	test   dl,cl
  40e586:	out    0xeb,al
  40e588:	sub    eax,0x51876066
  40e58d:	cs cld 
  40e58f:	cld    
  40e590:	lock mov ebx,0x3d49fbe5
  40e596:	and    eax,ebx
  40e598:	cmc    
  40e599:	mov    eax,DWORD PTR [ebp+ecx*2-0x71]
  40e59d:	inc    esi
  40e59e:	jmp    0x3804afb1
  40e5a3:	and    bh,BYTE PTR ds:[ebp-0x2e]
  40e5a7:	adc    edx,DWORD PTR [eax-0x51bd0c81]
  40e5ad:	jmp    0xf2ad:0x2b0b135b
  40e5b4:	and    eax,ebx
  40e5b6:	dec    esi
  40e5b7:	sbb    DWORD PTR [esi+eax*8-0x3a],0xffffffcb
  40e5bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5bd:	pusha  
  40e5be:	shl    DWORD PTR [ebp-0x4f],1
  40e5c1:	jnp    0x40e63c
  40e5c3:	or     DWORD PTR [edx-0x6],esp
  40e5c6:	cs dec eax
  40e5c8:	ds inc esi
  40e5ca:	xchg   ecx,eax
  40e5cb:	loopne 0x40e62e
  40e5cd:	cmp    al,0x70
  40e5cf:	sbb    al,0xe6
  40e5d1:	ror    DWORD PTR [edx],1
  40e5d3:	jne    0x40e5f0
  40e5d5:	sub    cl,BYTE PTR [ebx+0x54]
  40e5d8:	mov    cl,BYTE PTR [eax-0x34]
  40e5db:	dec    ebx
  40e5dc:	(bad)  
  40e5dd:	mov    ds:0x4945454,al
  40e5e2:	and    BYTE PTR [ebp-0x79],al
  40e5e5:	fnsave [ecx+edx*1-0x21]
  40e5e9:	aaa    
  40e5ea:	pop    ds
  40e5eb:	lahf   
  40e5ec:	(bad)  
  40e5ed:	addr16 lock pop es
  40e5f0:	cmc    
  40e5f1:	aad    0x40
  40e5f3:	nop
  40e5f4:	dec    edi
  40e5f5:	call   0xbc4c156
  40e5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5fb:	imul   esp,DWORD PTR [eax+0x85aaed6],0x0
  40e602:	mov    bh,0x9
  40e604:	xor    BYTE PTR [ecx-0x77fd5db1],cl
  40e60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e60b:	adc    ch,BYTE PTR [eax-0x3b1d218f]
  40e611:	dec    esp
  40e612:	adc    eax,0x5e4497b0
  40e617:	cmc    
  40e618:	clc    
  40e619:	js     0x40e629
  40e61b:	push   esi
  40e61c:	stc    
  40e61d:	cmp    edx,DWORD PTR ds:0xe9f382f2
  40e623:	fistp  QWORD PTR [edx+0x68]
  40e626:	shl    BYTE PTR [ebx-0x4c],cl
  40e629:	or     DWORD PTR [esi+0x52d6393b],esp
  40e62f:	ja     0x40e690
  40e631:	inc    ebx
  40e632:	(bad)  
  40e633:	xor    ebx,ebp
  40e635:	lods   eax,DWORD PTR ds:[esi]
  40e636:	dec    BYTE PTR [ebp-0x1cadad43]
  40e63c:	cmp    esi,DWORD PTR [esi+0x5177553]
  40e642:	lock sub DWORD PTR [edx-0x7a],0x33f756fc
  40e64a:	jecxz  0x40e622
  40e64c:	xchg   ecx,eax
  40e64d:	or     eax,0xb0e62a7
  40e652:	sbb    DWORD PTR [eax+esi*4],edi
  40e655:	xchg   edi,eax
  40e656:	fwait
  40e657:	jns    0x40e5e4
  40e659:	pop    edi
  40e65a:	add    BYTE PTR [ebx+0x1d],dh
  40e65d:	mov    edi,gs
  40e65f:	arpl   WORD PTR [ebx+0x5c],dx
  40e662:	dec    edi
  40e663:	xor    al,0x6e
  40e665:	dec    edx
  40e666:	sub    edi,ebp
  40e668:	dec    ebx
  40e669:	inc    edi
  40e66a:	sbb    cl,BYTE PTR [ebx]
  40e66c:	push   ss
  40e66d:	mov    ds:0x72a2a6ed,al
  40e672:	sub    eax,DWORD PTR [edi]
  40e674:	or     BYTE PTR [ecx],bl
  40e676:	icebp  
  40e677:	xchg   edx,eax
  40e678:	pop    edi
  40e679:	ror    bl,1
  40e67b:	add    dl,BYTE PTR ds:0xa2d4633a
  40e681:	dec    BYTE PTR [edi+0x1073781f]
  40e687:	popa   
  40e688:	inc    edx
  40e689:	jle    0x40e6be
  40e68b:	dec    eax
  40e68c:	lock les esp,FWORD PTR [edx]
  40e68f:	adc    eax,0x36c35993
  40e694:	mov    eax,ds:0xe92bcd67
  40e699:	arpl   si,di
  40e69b:	jae    0x40e644
  40e69d:	cmp    al,0x77
  40e69f:	inc    ebx
  40e6a0:	call   0x8595a417
  40e6a5:	pop    ss
  40e6a6:	sbb    BYTE PTR [edi+0x26],dh
  40e6a9:	call   0xc2f6:0xbde3ae90
  40e6b0:	inc    ebx
  40e6b1:	xchg   edi,eax
  40e6b2:	mov    DWORD PTR [ebx+0x7ffad757],edi
  40e6b8:	inc    edx
  40e6b9:	daa    
  40e6ba:	shl    BYTE PTR [ecx],1
  40e6bc:	xchg   ebp,eax
  40e6bd:	dec    ecx
  40e6be:	pop    esp
  40e6bf:	inc    ebx
  40e6c0:	push   esp
  40e6c1:	ret    
  40e6c2:	mov    esp,0x21613d7c
  40e6c7:	ret    
  40e6c8:	retf   
  40e6c9:	xchg   ebx,eax
  40e6ca:	lock adc edx,DWORD PTR [edx-0x45fdebe3]
  40e6d1:	push   esi
  40e6d2:	test   BYTE PTR [ebp-0x4cf95679],ch
  40e6d8:	xor    al,0xd
  40e6da:	mov    al,ds:0x9727a5c1
  40e6df:	jne    0x40e736
  40e6e1:	aaa    
  40e6e2:	fisubr WORD PTR [esi]
  40e6e4:	push   0xc628499f
  40e6e9:	pop    ebp
  40e6ea:	xchg   ebp,eax
  40e6eb:	jbe    0x40e6ef
  40e6ed:	push   esi
  40e6ee:	fbstp  TBYTE PTR [esi]
  40e6f0:	sbb    DWORD PTR [eax+ebp*1-0x32],0xffffffef
  40e6f5:	cmp    edi,ebp
  40e6f7:	fidivr WORD PTR [edx*4+0x4ee920c3]
  40e6fe:	jle    0x40e732
  40e700:	dec    edi
  40e701:	in     al,0x65
  40e703:	fdiv   st(0),st
  40e705:	dec    edi
  40e706:	push   ebx
  40e707:	xchg   DWORD PTR [ebx+ecx*8],esp
  40e70a:	rol    BYTE PTR [edx+0x25],1
  40e70d:	and    al,0xf
  40e70f:	xlat   BYTE PTR ds:[ebx]
  40e710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e711:	dec    edx
  40e712:	xchg   ebx,eax
  40e713:	(bad)  
  40e714:	adc    eax,0xf9528cda
  40e719:	mov    edi,ebp
  40e71b:	mov    bh,0x63
  40e71d:	pop    esi
  40e71e:	dec    ebx
  40e71f:	dec    ecx
  40e720:	lea    ebp,[ecx]
  40e722:	imul   ecx,DWORD PTR [ebp+0x69f7e51b],0xe3212c90
  40e72c:	lahf   
  40e72d:	ds call 0xab63c4ed
  40e733:	add    ebp,ecx
  40e735:	sbb    cl,BYTE PTR [ebx-0x3a]
  40e738:	or     eax,0xe166d119
  40e73d:	add    bh,BYTE PTR [ebx]
  40e73f:	or     BYTE PTR [esi+0x5c],ch
  40e742:	xchg   ecx,eax
  40e743:	nop
  40e744:	scas   eax,DWORD PTR es:[edi]
  40e745:	mov    esp,0x4748cc9c
  40e74a:	aaa    
  40e74b:	mov    bh,0x60
  40e74d:	paddusb mm5,QWORD PTR [ebx]
  40e750:	outs   dx,BYTE PTR ds:[esi]
  40e751:	sub    al,0xae
  40e753:	add    DWORD PTR [edi],esi
  40e755:	out    dx,al
  40e756:	and    al,BYTE PTR [esi-0x485427a5]
  40e75c:	in     eax,0xfe
  40e75e:	aam    0xfb
  40e760:	or     eax,0x22eeda98
  40e765:	pushf  
  40e766:	lods   eax,DWORD PTR ds:[esi]
  40e767:	sbb    esi,ecx
  40e769:	outs   dx,BYTE PTR ds:[esi]
  40e76a:	xor    ah,BYTE PTR [edx-0x36]
  40e76d:	sbb    bh,BYTE PTR [edi]
  40e76f:	lea    ebx,[esi+0x42f56609]
  40e775:	aas    
  40e776:	push   ss
  40e777:	adc    al,BYTE PTR [edi+eiz*2+0x41]
  40e77b:	cs push 0x1df494e7
  40e781:	sbb    edi,edx
  40e783:	repnz fwait
  40e785:	and    al,0x5f
  40e787:	xlat   BYTE PTR ds:[ebx]
  40e788:	pop    ebx
  40e789:	jae    0x40e7c9
  40e78b:	pop    edx
  40e78c:	ins    DWORD PTR es:[edi],dx
  40e78d:	das    
  40e78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e78f:	xchg   esp,eax
  40e790:	(bad)  
  40e791:	(bad)  
  40e792:	in     eax,0xa5
  40e794:	jecxz  0x40e73e
  40e796:	sub    eax,0x5ed108ff
  40e79b:	xchg   BYTE PTR [edx-0x3f],ah
  40e79e:	xor    al,0xdb
  40e7a0:	aaa    
  40e7a1:	cs jecxz 0x40e7d2
  40e7a4:	sub    al,0x83
  40e7a6:	and    esp,esi
  40e7a8:	inc    ebp
  40e7a9:	xchg   esi,eax
  40e7aa:	(bad)  
  40e7ab:	(bad)  
  40e7ac:	sub    eax,0x55de93e4
  40e7b1:	push   ecx
  40e7b2:	mov    dl,0x73
  40e7b4:	mov    al,0x33
  40e7b6:	pop    es
  40e7b7:	sbb    BYTE PTR [edi],0xad
  40e7ba:	pop    ecx
  40e7bb:	and    BYTE PTR [eax-0x7bfba7c4],dl
  40e7c1:	mov    ebp,0x16eec197
  40e7c6:	test   DWORD PTR [eax],ebx
  40e7c8:	stos   BYTE PTR es:[edi],al
  40e7c9:	fadd   QWORD PTR [ecx]
  40e7cb:	int3   
  40e7cc:	enter  0xf438,0x5
  40e7d0:	das    
  40e7d1:	adc    al,0xc7
  40e7d3:	repz js 0x40e78c
  40e7d6:	inc    ebx
  40e7d7:	pushf  
  40e7d8:	push   edx
  40e7d9:	sbb    esp,DWORD PTR [esi-0x4]
  40e7dc:	sub    al,0xf2
  40e7de:	inc    ebp
  40e7df:	push   ecx
  40e7e0:	push   es
  40e7e1:	inc    ebp
  40e7e2:	cli    
  40e7e3:	dec    edx
  40e7e4:	sub    cl,BYTE PTR ds:0x62f8897d
  40e7ea:	lods   al,BYTE PTR ds:[esi]
  40e7eb:	pop    es
  40e7ec:	int    0x93
  40e7ee:	jmp    0x4fe:0xecc524e8
  40e7f5:	inc    ebp
  40e7f6:	jmp    0xfe3fdf1a
  40e7fb:	(bad)  
  40e7fc:	adc    al,0x25
  40e7fe:	jno    0x40e7f6
  40e800:	adc    esi,ecx
  40e802:	dec    BYTE PTR [eax]
  40e804:	mov    al,0x80
  40e806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e808:	xor    edx,edx
  40e80a:	xlat   BYTE PTR ds:[ebx]
  40e80b:	xchg   esp,eax
  40e80c:	fiadd  WORD PTR [edx+0x6e]
  40e80f:	scas   al,BYTE PTR es:[edi]
  40e810:	jns    0x40e83a
  40e812:	push   ebp
  40e813:	dec    esi
  40e814:	and    dl,BYTE PTR [ebp+0x155647e9]
  40e81a:	(bad)  
  40e81b:	hlt    
  40e81c:	mov    bh,0x61
  40e81e:	adc    dl,al
  40e820:	std    
  40e821:	daa    
  40e822:	mov    eax,ds:0x9ebe7c06
  40e827:	xchg   edx,eax
  40e828:	in     al,0x44
  40e82a:	scas   eax,DWORD PTR es:[edi]
  40e82b:	pop    ecx
  40e82c:	call   0x7ff83257
  40e831:	push   edx
  40e832:	test   al,0x91
  40e834:	jmp    0x573c614f
  40e839:	jae    0x40e7f2
  40e83b:	neg    eax
  40e83d:	cmp    eax,0xc44976cf
  40e843:	jno    0x40e8a5
  40e845:	xor    al,0xf7
  40e847:	cld    
  40e848:	lock (bad) 
  40e84a:	mov    edi,0x73588252
  40e84f:	pop    ebx
  40e850:	sub    BYTE PTR [esi-0x27],ah
  40e853:	popa   
  40e854:	push   ds
  40e855:	cli    
  40e856:	xor    esp,DWORD PTR [edi+0x19]
  40e859:	data16 adc al,0xe5
  40e85c:	mov    ecx,0xfb8ff20c
  40e861:	push   es
  40e862:	mov    cl,0x4b
  40e864:	shl    dh,cl
  40e866:	push   ebx
  40e867:	xor    esp,0x34e01d78
  40e86d:	call   0x2159:0x3f0d7dc5
  40e874:	aad    0xf0
  40e876:	iret   
  40e877:	push   eax
  40e878:	xor    dh,BYTE PTR [ecx-0xe]
  40e87b:	mov    dl,0x81
  40e87d:	scas   al,BYTE PTR es:[edi]
  40e87e:	cli    
  40e87f:	adc    DWORD PTR [ebx+edx*8-0xfc1e729],edi
  40e886:	les    ebx,FWORD PTR [edi-0x66b8c110]
  40e88c:	jbe    0x40e896
  40e88e:	mov    ch,0x55
  40e890:	aam    0xfe
  40e892:	pop    ebp
  40e893:	mul    DWORD PTR [ebp-0x10]
  40e896:	test   DWORD PTR [esi+0x82374a9],edi
  40e89c:	cwde   
  40e89d:	jo     0x40e8a7
  40e89f:	mov    esi,DWORD PTR [edx-0x513afacc]
  40e8a5:	mov    ebx,?
  40e8a7:	and    BYTE PTR [edi+ecx*1-0x30],bl
  40e8ab:	repz and ch,cl
  40e8ae:	mov    cl,0x5c
  40e8b0:	mov    bl,0xd5
  40e8b2:	cs push edx
  40e8b4:	or     al,0x57
  40e8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b7:	adc    DWORD PTR [ebp-0x1f16eea5],esi
  40e8bd:	and    DWORD PTR [edx+0xb8eb78d],edx
  40e8c3:	cld    
  40e8c4:	mov    dl,0x9b
  40e8c6:	cwde   
  40e8c7:	int    0xf8
  40e8c9:	bound  esp,QWORD PTR [ebp+0x8]
  40e8cc:	jle    0x40e894
  40e8ce:	lea    ecx,[edx-0x301f42da]
  40e8d4:	leave  
  40e8d5:	xchg   ecx,eax
  40e8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8d7:	inc    eax
  40e8d8:	(bad)  
  40e8d9:	cli    
  40e8da:	push   ecx
  40e8db:	inc    esp
  40e8dc:	jecxz  0x40e896
  40e8de:	or     ebp,DWORD PTR [ebx-0x1]
  40e8e1:	pushf  
  40e8e2:	test   DWORD PTR [ecx+0x55],esp
  40e8e5:	inc    esp
  40e8e6:	adc    cl,BYTE PTR [esi]
  40e8e8:	mov    BYTE PTR [esi+0x1425d69b],cl
  40e8ee:	xor    al,0xc4
  40e8f0:	pusha  
  40e8f1:	lods   al,BYTE PTR ds:[esi]
  40e8f2:	sub    al,0x92
  40e8f4:	push   ds
  40e8f5:	or     DWORD PTR [ecx],ebx
  40e8f7:	fcomp  st(5)
  40e8f9:	push   0x71
  40e8fb:	mov    al,0x4a
  40e8fd:	lock das 
  40e8ff:	pop    eax
  40e900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e901:	dec    eax
  40e902:	jmp    0x9f0d:0x63a2bcc2
  40e909:	adc    esi,DWORD PTR [edi+0x3e7d9fca]
  40e90f:	mov    bl,BYTE PTR [ecx]
  40e911:	mov    WORD PTR [esi-0x70],?
  40e914:	pushf  
  40e915:	adc    bh,BYTE PTR es:[ecx-0x1]
  40e919:	pop    eax
  40e91a:	fisub  DWORD PTR [edx+0x725bdd13]
  40e920:	jnp    0x40e8c6
  40e922:	outs   dx,BYTE PTR ds:[esi]
  40e923:	into   
  40e924:	xchg   edi,eax
  40e925:	sbb    BYTE PTR [edx+0x19],ah
  40e928:	mov    esi,0x6d8dbf48
  40e92d:	inc    esp
  40e92e:	xchg   edx,eax
  40e92f:	in     eax,0x59
  40e931:	cmp    DWORD PTR [ebx],ebx
  40e933:	push   ds
  40e934:	dec    esi
  40e935:	sub    eax,0x4693df2f
  40e93a:	mov    ebx,0x6364bb38
  40e93f:	cs jmp 0x40e8ec
  40e942:	xchg   esp,eax
  40e943:	in     eax,dx
  40e944:	lahf   
  40e945:	and    al,0x60
  40e947:	dec    ebp
  40e948:	in     eax,0xe3
  40e94a:	aaa    
  40e94b:	xchg   ecx,eax
  40e94c:	jb     0x40e8e4
  40e94e:	cmp    al,0x33
  40e950:	or     ebp,DWORD PTR [ecx+0x74495545]
  40e956:	loope  0x40e92e
  40e958:	jae    0x40e942
  40e95a:	aaa    
  40e95b:	and    eax,0x9cd700d4
  40e960:	test   BYTE PTR [edi-0x1dceae31],bl
  40e966:	in     al,0xb0
  40e968:	or     eax,0xe703ed82
  40e96d:	dec    esi
  40e96e:	pushf  
  40e96f:	jnp    0x40e9b5
  40e971:	imul   ebx,DWORD PTR [eax-0x266b9f9d],0xffffffdb
  40e978:	cmp    al,0x29
  40e97a:	inc    ebx
  40e97b:	add    dh,bh
  40e97d:	add    bl,bl
  40e97f:	push   edx
  40e980:	out    0xa1,al
  40e982:	sqrtps xmm1,XMMWORD PTR [ecx-0x44fbdf1e]
  40e989:	dec    ebp
  40e98a:	push   ds
  40e98b:	push   esi
  40e98c:	jnp    0x40e97f
  40e98e:	leave  
  40e98f:	xchg   esi,eax
  40e990:	hlt    
  40e991:	test   DWORD PTR [esi-0x6d],ebp
  40e994:	sbb    dh,BYTE PTR [eax+0x54a12de]
  40e99a:	sahf   
  40e99b:	out    dx,al
  40e99c:	and    BYTE PTR ds:0xca3c7311,ch
  40e9a2:	repnz xor BYTE PTR [eax],bl
  40e9a5:	test   al,dl
  40e9a7:	and    bh,BYTE PTR [ebx]
  40e9a9:	pushf  
  40e9aa:	fstp   QWORD PTR [edi-0x15]
  40e9ad:	xchg   edx,eax
  40e9ae:	jge    0x40ea0f
  40e9b0:	sub    BYTE PTR [edi-0x77f05ea9],ch
  40e9b6:	fldcw  WORD PTR [edx+0x50]
  40e9b9:	sar    DWORD PTR [edi-0x6bf5d095],cl
  40e9bf:	lds    esp,FWORD PTR [eax]
  40e9c1:	jl     0x40e9e5
  40e9c3:	mov    cl,0x63
  40e9c5:	dec    esp
  40e9c6:	xchg   edi,eax
  40e9c7:	cmp    al,0x67
  40e9c9:	or     eax,0xf2b0ea10
  40e9ce:	ds fcmovb st,st(6)
  40e9d1:	pop    ds
  40e9d2:	push   0xc94c2a61
  40e9d7:	and    dl,BYTE PTR [ebx+0x3913ba21]
  40e9dd:	jns    0x40ea24
  40e9df:	xchg   ebp,eax
  40e9e0:	shl    DWORD PTR [ebp+0x1],0x2a
  40e9e4:	pop    ebx
  40e9e5:	cld    
  40e9e6:	xlat   BYTE PTR ds:[ebx]
  40e9e7:	lock mov ds:0x7bb6f126,al
  40e9ed:	imul   ecx,esp,0x77
  40e9f0:	add    edx,edi
  40e9f2:	or     edi,DWORD PTR [edx]
  40e9f4:	mov    BYTE PTR [ebx-0x1b],bl
  40e9f7:	pusha  
  40e9f8:	aad    0xdd
  40e9fa:	js     0x40e9ce
  40e9fc:	sub    ebp,edi
  40e9fe:	test   al,0x7a
  40ea00:	sub    eax,0xbe2494e5
  40ea05:	mov    eax,0x9acedb03
  40ea0a:	mov    ch,0x6f
  40ea0c:	xchg   esp,eax
  40ea0d:	add    eax,0xe7bc9d60
  40ea12:	mov    BYTE PTR [eax-0x32],bl
  40ea15:	in     eax,0xc5
  40ea17:	sub    BYTE PTR [esi-0x64d33766],bl
  40ea1d:	fist   WORD PTR ds:0x64552273
  40ea23:	cwde   
  40ea24:	push   0xffffffd7
  40ea26:	inc    si
  40ea28:	fwait
  40ea29:	enter  0x39e0,0xe
  40ea2d:	sub    esi,eax
  40ea2f:	fcom   QWORD PTR [eax]
  40ea31:	dec    esi
  40ea32:	mov    esp,0xca95126c
  40ea37:	retf   0x1660
  40ea3a:	or     BYTE PTR [eax],al
  40ea3c:	popf   
  40ea3d:	xchg   BYTE PTR [esp+esi*2-0x19],bl
  40ea41:	imul   edx,DWORD PTR [ecx+0x3f],0xe10602
  40ea48:	inc    eax
  40ea49:	cmp    ch,BYTE PTR [edx-0x7ba19cec]
  40ea4f:	jg     0x40ea5f
  40ea51:	xor    eax,0xf7ef4f75
  40ea56:	mov    edx,0xd89c083c
  40ea5b:	sbb    ebx,DWORD PTR ds:0x92c40cea
  40ea61:	in     eax,dx
  40ea62:	cmp    DWORD PTR [eax],0x6b
  40ea65:	dec    edi
  40ea66:	scas   eax,DWORD PTR es:[edi]
  40ea67:	mov    esi,0x9f551554
  40ea6c:	(bad)  
  40ea6d:	fmul   DWORD PTR [eax]
  40ea6f:	ins    DWORD PTR es:[edi],dx
  40ea70:	fist   WORD PTR [edi+0x42]
  40ea73:	aam    0x86
  40ea75:	js     0x40ea78
  40ea77:	je     0x40ea15
  40ea79:	(bad)
  40ea7c:	pop    eax
  40ea7d:	lea    eax,[edx]
  40ea7f:	leave  
  40ea80:	stos   BYTE PTR es:[edi],al
  40ea81:	mov    dh,0xb7
  40ea83:	sar    al,cl
  40ea85:	aas    
  40ea86:	pushf  
  40ea87:	sbb    BYTE PTR [ebp-0x30],al
  40ea8a:	xlat   BYTE PTR ds:[ebx]
  40ea8b:	xchg   ebp,eax
  40ea8c:	out    0xfc,al
  40ea8e:	adc    al,0x42
  40ea90:	inc    eax
  40ea91:	iret   
  40ea92:	les    edx,FWORD PTR [ebx-0x5e]
  40ea95:	add    edx,DWORD PTR [esi+edx*8]
  40ea98:	shl    BYTE PTR [edi],1
  40ea9a:	add    BYTE PTR [edi-0x46],cl
  40ea9d:	cmp    al,0xb3
  40ea9f:	shl    DWORD PTR [ebp+eax*2+0x56d0b862],0xea
  40eaa7:	mov    edx,0x93e61d52
  40eaac:	test   BYTE PTR [eax],0xea
  40eaaf:	sbb    DWORD PTR [esi+0x195aba49],ecx
  40eab5:	pop    ds
  40eab6:	test   DWORD PTR [ebp-0x6d],edx
  40eab9:	mov    edx,0xcb994cdb
  40eabe:	push   esp
  40eabf:	nop
  40eac0:	pop    ecx
  40eac1:	mov    cl,0x43
  40eac3:	jmp    0x40eaec
  40eac5:	or     eax,0x66bcf229
  40eaca:	test   DWORD PTR [eax-0x5c],ecx
  40eacd:	xchg   edx,eax
  40eace:	test   BYTE PTR [eax],ah
  40ead0:	jb     0x40eaae
  40ead2:	pop    ebx
  40ead3:	outs   dx,DWORD PTR ds:[esi]
  40ead4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead5:	shl    BYTE PTR [ebx],0xd0
  40ead8:	and    ebp,DWORD PTR ds:0xf3ffec39
  40eade:	and    DWORD PTR [eax+0x35],0x8f6f3b28
  40eae5:	aaa    
  40eae6:	mov    ds:0xb830c09d,eax
  40eaeb:	sub    DWORD PTR [eax-0x7b],edi
  40eaee:	mov    al,0x6e
  40eaf0:	or     DWORD PTR [edx-0x38e6e807],ebp
  40eaf6:	adc    esi,0x5d29d1a3
  40eafc:	xchg   BYTE PTR [esi-0x12],bh
  40eaff:	ja     0x40ead9
  40eb01:	punpckldq mm1,DWORD PTR [edi+0x31]
  40eb05:	int3   
  40eb06:	xlat   BYTE PTR ds:[ebx]
  40eb07:	mov    ds:0xe821774f,al
  40eb0c:	mov    al,ds:0x2c792623
  40eb11:	mov    dh,0x1a
  40eb13:	aas    
  40eb14:	pop    ecx
  40eb15:	sub    DWORD PTR [eax+0x4c2c53f6],esi
  40eb1b:	xchg   ebx,eax
  40eb1c:	push   ecx
  40eb1d:	mov    esp,0x58df3820
  40eb22:	imul   esi,DWORD PTR [ecx+0x6e],0xb99b4427
  40eb29:	mov    eax,ds:0x9439bab4
  40eb2e:	sbb    eax,0xa8b6385
  40eb33:	sub    edi,ecx
  40eb35:	dec    esi
  40eb36:	mov    dl,0x34
  40eb38:	xor    BYTE PTR [ecx-0x14],ch
  40eb3b:	gs clc 
  40eb3d:	jp     0x40eb1e
  40eb3f:	stos   BYTE PTR es:[edi],al
  40eb40:	push   ss
  40eb41:	lahf   
  40eb42:	rcr    BYTE PTR [ecx-0x52a6a825],cl
  40eb48:	push   esi
  40eb49:	adc    eax,0xe97c6fd0
  40eb4e:	ja     0x40eb1e
  40eb50:	mov    eax,ds:0xbd9f1f4
  40eb55:	call   0x425798af
  40eb5a:	mov    edi,0x9b481ad9
  40eb5f:	adc    al,ch
  40eb61:	mov    esp,0xb5edd749
  40eb66:	xchg   edi,eax
  40eb67:	enter  0xc6f5,0x5e
  40eb6b:	inc    eax
  40eb6c:	iret   
  40eb6d:	push   es
  40eb6e:	sub    ebp,DWORD PTR [esi-0x5f556f00]
  40eb74:	mov    bl,0x58
  40eb76:	jo     0x40ebd6
  40eb78:	(bad)
  40eb7b:	js     0x40eb8b
  40eb7d:	inc    ebp
  40eb7e:	add    eax,0xb47ac737
  40eb83:	std    
  40eb84:	mov    ds:0x62c15659,eax
  40eb89:	std    
  40eb8a:	pop    ebx
  40eb8b:	outs   dx,BYTE PTR ds:[esi]
  40eb8c:	jo     0x40eb95
  40eb8e:	jne    0x40eb3e
  40eb90:	dec    ecx
  40eb91:	adc    eax,0xd47a7e22
  40eb96:	add    ebx,DWORD PTR [ecx+0x695b089c]
  40eb9c:	cmp    DWORD PTR [ebp-0x773c4c67],eax
  40eba2:	retf   
  40eba3:	pcmpeqw mm7,QWORD PTR [ebx]
  40eba6:	sbb    ah,0xe1
  40eba9:	push   ss
  40ebaa:	jmp    0x9ace:0x11e634ad
  40ebb1:	out    0x1f,al
  40ebb3:	jno    0x40ec0b
  40ebb5:	jl     0x40ebd9
  40ebb7:	and    al,0x53
  40ebb9:	arpl   WORD PTR [edi],cx
  40ebbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebbc:	dec    ecx
  40ebbd:	(bad)  
  40ebbe:	sbb    al,0x95
  40ebc0:	dec    edx
  40ebc1:	aas    
  40ebc2:	sbb    edx,DWORD PTR [eax-0x202d394]
  40ebc8:	jo     0x40ebb0
  40ebca:	or     eax,0xf5910faa
  40ebcf:	pop    ss
  40ebd0:	and    al,0x89
  40ebd2:	cwde   
  40ebd3:	or     eax,0xcf45eebc
  40ebd8:	xchg   DWORD PTR [ecx],esi
  40ebda:	dec    eax
  40ebdb:	std    
  40ebdc:	mov    edx,0x32b265ea
  40ebe1:	jge    0x40ec30
  40ebe3:	div    DWORD PTR [edi-0x3bbde2e6]
  40ebe9:	add    al,0xa8
  40ebeb:	or     BYTE PTR [edi+0x56],al
  40ebee:	lods   eax,DWORD PTR ds:[esi]
  40ebef:	js     0x40ec0e
  40ebf1:	retf   
  40ebf2:	dec    edi
  40ebf3:	jg     0x40eb87
  40ebf5:	data16 aaa 
  40ebf7:	sub    ch,BYTE PTR [ebx+0x312df514]
  40ebfd:	jg     0x40eb8f
  40ebff:	xchg   BYTE PTR [edx+0x42],bl
  40ec02:	sub    eax,0x9eeac815
  40ec07:	mov    esi,0x5f863edf
  40ec0c:	clc    
  40ec0d:	sbb    DWORD PTR [esi+eax*2-0x6a932a51],ebx
  40ec14:	sar    BYTE PTR [edi],0x4a
  40ec17:	sub    eax,0x4006a8da
  40ec1c:	popf   
  40ec1d:	and    al,0x51
  40ec1f:	sbb    bh,BYTE PTR [ecx]
  40ec21:	dec    esp
  40ec22:	data16 sbb al,0xe8
  40ec25:	inc    DWORD PTR [esi+eiz*2+0x7e]
  40ec29:	push   ecx
  40ec2a:	jne    0x40ec45
  40ec2c:	sahf   
  40ec2d:	pop    ecx
  40ec2e:	inc    ecx
  40ec2f:	aaa    
  40ec30:	jns    0x40ec51
  40ec32:	mov    bl,0xb9
  40ec34:	jmp    0x40ec17
  40ec36:	cmp    BYTE PTR [edi+0x32152b61],0xf7
  40ec3d:	retf   
  40ec3e:	jb     0x40ecb5
  40ec40:	jae    0x40ec9e
  40ec42:	jnp    0x40ec15
  40ec44:	inc    edi
  40ec45:	xor    BYTE PTR [esi],dl
  40ec47:	jmp    0x9482722d
  40ec4c:	or     cl,BYTE PTR [ebp+0x7e751452]
  40ec52:	mov    bh,0xa5
  40ec54:	push   edx
  40ec55:	dec    edi
  40ec56:	pop    edi
  40ec57:	jb     0x40ebf7
  40ec59:	popa   
  40ec5a:	sbb    eax,0xee918b0c
  40ec5f:	cld    
  40ec60:	bswap  ebx
  40ec62:	retf   0x7220
  40ec65:	pop    edi
  40ec66:	les    eax,FWORD PTR [edi+0x4c]
  40ec69:	mov    al,ds:0x44e59f34
  40ec6e:	mov    ds:0x5ca246ed,al
  40ec73:	out    0x86,al
  40ec75:	fs adc ah,bh
  40ec78:	dec    eax
  40ec79:	cmp    al,ch
  40ec7b:	mov    edx,DWORD PTR [ecx-0x46053ec8]
  40ec81:	xchg   edi,eax
  40ec82:	sub    bh,BYTE PTR [edx+eax*1]
  40ec85:	xor    DWORD PTR [ebp+ebp*8+0x2b22114a],0x8bc9067a
  40ec90:	dec    ecx
  40ec91:	rcl    DWORD PTR [ebp+0x12],1
  40ec94:	loop   0x40ecf3
  40ec96:	test   eax,0x259c9ba
  40ec9b:	inc    ebp
  40ec9c:	cdq    
  40ec9d:	shl    DWORD PTR ss:[esp+ebp*2+0x43fcee15],0x34
  40eca6:	stos   BYTE PTR es:[edi],al
  40eca7:	inc    ebp
  40eca8:	iret   
  40eca9:	test   eax,0xadd2b56c
  40ecae:	and    esi,DWORD PTR [edx-0xea269c7]
  40ecb4:	mov    bh,0x66
  40ecb6:	js     0x40ecac
  40ecb8:	pop    esp
  40ecb9:	ror    BYTE PTR [esi+0x2d],1
  40ecbc:	and    al,0x2c
  40ecbe:	popa   
  40ecbf:	mov    bh,0x96
  40ecc1:	xchg   ebp,eax
  40ecc2:	push   cs
  40ecc3:	sti    
  40ecc4:	inc    ebx
  40ecc5:	mov    dh,0x2d
  40ecc7:	dec    ebp
  40ecc8:	das    
  40ecc9:	ds retf 0xad3e
  40eccd:	popa   
  40ecce:	imul   ebx,DWORD PTR [esi-0x23be2598],0xffffffa6
  40ecd5:	mov    ch,0x3b
  40ecd7:	pop    ds
  40ecd8:	or     edx,DWORD PTR [ebx+0x2d38c118]
  40ecde:	dec    ebp
  40ecdf:	aad    0x60
  40ece1:	mov    dh,0x1
  40ece3:	loope  0x40ed4d
  40ece5:	sbb    al,0x42
  40ece7:	mov    DWORD PTR [eax-0x79],ecx
  40ecea:	cmp    eax,0xfa97cbff
  40ecef:	pop    ss
  40ecf0:	(bad)
  40ecf3:	loopne 0x40ed45
  40ecf5:	enter  0x22e1,0xc7
  40ecf9:	stc    
  40ecfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecfb:	adc    BYTE PTR [ebx-0x1d],dh
  40ecfe:	hlt    
  40ecff:	jbe    0x40ec8d
  40ed01:	xchg   ecx,eax
  40ed02:	leave  
  40ed03:	out    0x53,al
  40ed05:	xchg   ebp,eax
  40ed06:	imul   esp,DWORD PTR [esi],0xffffffe3
  40ed09:	(bad)  
  40ed0a:	shr    ch,1
  40ed0c:	cmc    
  40ed0d:	stc    
  40ed0e:	fstp   QWORD PTR [edi]
  40ed10:	jne    0x40ecc9
  40ed12:	stos   BYTE PTR es:[edi],al
  40ed13:	pop    esi
  40ed14:	inc    esi
  40ed15:	mov    al,0xea
  40ed17:	xchg   BYTE PTR [esi],ah
  40ed19:	dec    ebx
  40ed1a:	bound  esp,QWORD PTR [edi-0x55b1b475]
  40ed20:	cmp    ecx,eax
  40ed22:	fcmovnbe st,st(6)
  40ed24:	mov    ah,0x6
  40ed26:	mov    ecx,0x90818b01
  40ed2b:	pop    edi
  40ed2c:	cmp    DWORD PTR [ebx+edi*1-0x45708f02],esi
  40ed33:	rol    bh,cl
  40ed35:	and    eax,0xae7db8e0
  40ed3a:	dec    edi
  40ed3b:	les    edi,FWORD PTR [eax-0x3d]
  40ed3e:	ret    
  40ed3f:	int3   
  40ed40:	xlat   BYTE PTR ds:[ebx]
  40ed41:	adc    esi,ebp
  40ed43:	dec    eax
  40ed44:	push   0x9b690938
  40ed49:	stos   DWORD PTR es:[edi],eax
  40ed4a:	pop    ds
  40ed4b:	jg     0x40ed1a
  40ed4d:	cmp    BYTE PTR [edx-0x72c23f94],dl
  40ed53:	sahf   
  40ed54:	xor    eax,0xbde8956
  40ed59:	iret   
  40ed5a:	mov    bl,0x1
  40ed5c:	sar    eax,1
  40ed5e:	mov    bl,0x9e
  40ed60:	jmp    0x31ff2e1a
  40ed65:	(bad)  
  40ed66:	xchg   esp,eax
  40ed67:	xchg   ebx,eax
  40ed68:	data16 fdecstp 
  40ed6b:	sbb    al,0x87
  40ed6d:	inc    esp
  40ed6e:	pop    edi
  40ed6f:	ins    BYTE PTR es:[edi],dx
  40ed70:	sbb    DWORD PTR [edi],eax
  40ed72:	test   DWORD PTR [edi+0x659b0f0],eax
  40ed78:	aas    
  40ed79:	cmp    cl,BYTE PTR [edi]
  40ed7b:	bound  eax,QWORD PTR gs:[edx]
  40ed7e:	inc    edi
  40ed7f:	jnp    0x40edfd
  40ed81:	push   ebx
  40ed82:	jmp    0x8b077659
  40ed87:	ss daa 
  40ed89:	sbb    dl,BYTE PTR gs:[eax]
  40ed8c:	push   edi
  40ed8d:	lds    ebp,FWORD PTR [edx]
  40ed8f:	xchg   bl,bh
  40ed91:	iret   
  40ed92:	clc    
  40ed93:	call   0xd19b:0x73d92856
  40ed9a:	(bad)  
  40ed9b:	lahf   
  40ed9c:	(bad)  
  40ed9d:	scas   eax,DWORD PTR es:[edi]
  40ed9e:	sub    al,0x28
  40eda0:	mov    ebx,0x21ef4f29
  40eda5:	js     0x40ed65
  40eda7:	stos   DWORD PTR es:[edi],eax
  40eda8:	mov    al,0x8c
  40edaa:	push   ecx
  40edab:	push   ss
  40edac:	jo     0x40ee0b
  40edae:	fdivrp st(6),st
  40edb0:	cmp    dl,bl
  40edb2:	mov    esi,0x8ad45f4e
  40edb7:	xor    esi,DWORD PTR [ecx+0x17f981ef]
  40edbd:	mov    bh,0x22
  40edbf:	mov    ebx,0xd56dba1a
  40edc4:	add    BYTE PTR [edi],0xa0
  40edc7:	mov    dl,0x25
  40edc9:	jge    0x40ed6e
  40edcb:	call   0x17b63e0d
  40edd0:	jle    0x40ee40
  40edd2:	xor    DWORD PTR [edx-0xf62b8d],0x11dbd2c2
  40eddc:	inc    esp
  40eddd:	mov    ebx,0x9133630
  40ede2:	loop   0x40ed73
  40ede4:	ret    0x5035
  40ede7:	hlt    
  40ede8:	xor    esi,DWORD PTR [eax+0x5a]
  40edeb:	jp     0x40ede9
  40eded:	jle    0x40ede7
  40edef:	mov    ecx,0xd60b508d
  40edf4:	fcom   QWORD PTR [esi-0x24534dc8]
  40edfa:	aam    0x94
  40edfc:	das    
  40edfd:	adc    ebp,edx
  40edff:	test   ch,ah
  40ee01:	xchg   ecx,eax
  40ee02:	fiadd  DWORD PTR [edx+0x10beb9a8]
  40ee08:	test   al,0x3c
  40ee0a:	leave  
  40ee0b:	fwait
  40ee0c:	mov    cl,0xe9
  40ee0e:	retf   0xfe1d
  40ee11:	fbld   TBYTE PTR [esi+0x3f]
  40ee14:	push   eax
  40ee15:	add    DWORD PTR [ecx-0x3c],edi
  40ee18:	fdiv   QWORD PTR [esi+0x6b5414d7]
  40ee1e:	jb     0x40edba
  40ee20:	pushf  
  40ee21:	or     ebx,DWORD PTR [esi-0x48caf212]
  40ee27:	xor    edi,DWORD PTR [ecx+0xa]
  40ee2a:	lea    eax,[esi-0x5c]
  40ee2d:	sbb    BYTE PTR [ecx],0xbb
  40ee30:	aas    
  40ee31:	or     DWORD PTR [ebp+0x1e],esi
  40ee34:	pushf  
  40ee35:	jg     0x40ee9b
  40ee37:	pop    esp
  40ee38:	inc    edx
  40ee39:	(bad)  
  40ee3a:	or     DWORD PTR [ebp-0x515e2c02],ecx
  40ee40:	fsubp  st(2),st
  40ee42:	outs   dx,DWORD PTR ds:[esi]
  40ee43:	retf   0xdf4f
  40ee46:	fs in  eax,0x84
  40ee49:	outs   dx,DWORD PTR ds:[esi]
  40ee4a:	jge    0x40ee5a
  40ee4c:	ja     0x40eeaf
  40ee4e:	xor    eax,0x78118cfb
  40ee53:	inc    BYTE PTR [eax+0xd6595e4]
  40ee59:	adc    ah,0xb9
  40ee5c:	lea    esi,[ebp+edx*4-0x1b]
  40ee60:	test   al,0x6a
  40ee62:	popa   
  40ee63:	mov    ch,0x5d
  40ee65:	ds popa 
  40ee67:	adc    eax,0xd5f03b0c
  40ee6c:	push   edi
  40ee6d:	add    bl,BYTE PTR [edx]
  40ee6f:	in     eax,dx
  40ee70:	ret    0xe930
  40ee73:	xor    DWORD PTR [esi],0xbdb14b5e
  40ee79:	dec    edx
  40ee7a:	bound  esp,QWORD PTR [eax+0x2a033058]
  40ee80:	jecxz  0x40ee8a
  40ee82:	test   eax,0x886e96ca
  40ee87:	fsub   QWORD PTR [eax-0x360b66aa]
  40ee8d:	pop    es
  40ee8e:	mov    ebx,edx
  40ee90:	mov    al,ds:0x63df6553
  40ee95:	add    al,0xb9
  40ee97:	stc    
  40ee98:	cli    
  40ee99:	xchg   edi,eax
  40ee9a:	fiadd  DWORD PTR [edx]
  40ee9c:	fst    DWORD PTR [ebx+0x26b48fb4]
  40eea2:	cli    
  40eea3:	and    BYTE PTR [edx+0x4cebd68a],bl
  40eea9:	ds and ah,ch
  40eeac:	xlat   BYTE PTR ds:[ebx]
  40eead:	xchg   BYTE PTR [ebx-0xabb08a1],dh
  40eeb3:	mov    ch,BYTE PTR [ebx+0x30]
  40eeb6:	dec    ebx
  40eeb7:	mov    dh,0x5b
  40eeb9:	pop    ebx
  40eeba:	loopne 0x40ef2d
  40eebc:	loopne 0x40eef5
  40eebe:	popf   
  40eebf:	call   0x7e3b907c
  40eec4:	mov    gs,WORD PTR [esp+edi*2-0x63583cf6]
  40eecb:	ja     0x40ee94
  40eecd:	hlt    
  40eece:	(bad)  
  40eed0:	and    al,0x79
  40eed2:	sbb    eax,0xd191b721
  40eed7:	stos   BYTE PTR es:[edi],al
  40eed8:	inc    ebx
  40eed9:	clc    
  40eeda:	dec    edx
  40eedb:	cdq    
  40eedc:	inc    eax
  40eedd:	pop    ecx
  40eede:	sbb    BYTE PTR [edi],bl
  40eee0:	mov    eax,es
  40eee2:	cli    
  40eee3:	hlt    
  40eee4:	ds enter 0xc0cf,0x7f
  40eee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeea:	(bad)  
  40eeeb:	jo     0x40eea9
  40eeed:	adc    edx,ebx
  40eeef:	sub    bh,BYTE PTR [eax]
  40eef1:	clc    
  40eef2:	fcomi  st,st(0)
  40eef4:	out    0xd5,al
  40eef6:	gs or  ecx,esp
  40eef9:	push   eax
  40eefa:	cmp    DWORD PTR [esi+0x17],eax
  40eefd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eefe:	and    BYTE PTR [edx],ch
  40ef00:	pop    esi
  40ef01:	cwde   
  40ef02:	shl    BYTE PTR ds:0x55348f04,1
  40ef08:	pop    esi
  40ef09:	fadd   QWORD PTR ds:0xdc414ae7
  40ef0f:	arpl   WORD PTR [edi-0x2d],si
  40ef12:	adc    cl,dh
  40ef14:	xchg   ebx,eax
  40ef15:	sub    BYTE PTR ds:[ecx],ah
  40ef18:	in     al,dx
  40ef19:	sahf   
  40ef1a:	ins    DWORD PTR es:[edi],dx
  40ef1b:	aaa    
  40ef1c:	into   
  40ef1d:	pop    ds
  40ef1e:	fstp   QWORD PTR [ecx]
  40ef20:	cmp    ebx,ebx
  40ef22:	mov    ebp,0x88452576
  40ef27:	sar    DWORD PTR [edx+0x3dae6981],0xba
  40ef2e:	aaa    
  40ef2f:	xor    BYTE PTR [ecx],bl
  40ef31:	retf   
  40ef32:	adc    esp,DWORD PTR [eax+0x4028264]
  40ef38:	retf   
  40ef39:	dec    ebx
  40ef3a:	lods   al,BYTE PTR ds:[esi]
  40ef3b:	mov    bl,0x1c
  40ef3d:	inc    ecx
  40ef3e:	adc    DWORD PTR [ebx],esi
  40ef40:	int    0x28
  40ef42:	dec    ebp
  40ef43:	mov    al,ds:0x6f8f76ba
  40ef48:	inc    esi
  40ef49:	mov    edx,0x4f24a1f4
  40ef4e:	rcl    BYTE PTR [edi],1
  40ef50:	leave  
  40ef51:	outs   dx,DWORD PTR ds:[esi]
  40ef52:	mov    BYTE PTR [ebp-0x1a],al
  40ef55:	xchg   ecx,eax
  40ef56:	fmul   st,st(4)
  40ef58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef59:	je     0x40ef34
  40ef5b:	stos   DWORD PTR es:[edi],eax
  40ef5c:	or     BYTE PTR [ecx+eiz*1+0x4d],cl
  40ef60:	pop    ss
  40ef61:	push   gs
  40ef63:	mov    cl,0x96
  40ef65:	push   edx
  40ef66:	aas    
  40ef67:	clc    
  40ef68:	push   0xffffffb1
  40ef6a:	inc    ecx
  40ef6b:	(bad)  
  40ef6c:	jo     0x40ef3a
  40ef6e:	fwait
  40ef6f:	cmp    BYTE PTR [edx],bh
  40ef71:	aas    
  40ef72:	iret   
  40ef73:	sbb    al,0xb7
  40ef75:	sub    esp,esp
  40ef77:	push   eax
  40ef78:	retf   0xfd78
  40ef7b:	loop   0x40efa7
  40ef7d:	arpl   WORD PTR [eax-0x5daa6ed7],di
  40ef83:	jmp    0x1f5ad79d
  40ef88:	loop   0x40ef4e
  40ef8a:	sbb    DWORD PTR [edi],edx
  40ef8c:	pop    ecx
  40ef8d:	or     BYTE PTR [esi-0xc83b878],dh
  40ef93:	jle    0x40efd1
  40ef95:	js     0x40ef41
  40ef97:	jge    0x40ef86
  40ef99:	fcomi  st,st(3)
  40ef9b:	stos   DWORD PTR es:[edi],eax
  40ef9c:	lods   eax,DWORD PTR ds:[esi]
  40ef9d:	fiadd  DWORD PTR [ebp+edi*1+0x25]
  40efa1:	lods   al,BYTE PTR ds:[esi]
  40efa2:	mov    esi,0x147f0148
  40efa7:	test   dl,bh
  40efa9:	les    eax,FWORD PTR [esi]
  40efab:	stos   BYTE PTR es:[edi],al
  40efac:	mov    ebp,DWORD PTR [edx+esi*8]
  40efaf:	outs   dx,DWORD PTR ds:[esi]
  40efb0:	mov    ebx,0xc52ac0c8
  40efb5:	dec    esi
  40efb6:	pop    esp
  40efb7:	mov    dh,0x7f
  40efb9:	sub    ecx,esp
  40efbb:	jle    0x40ef82
  40efbd:	cld    
  40efbe:	pop    edi
  40efbf:	mov    edi,fs
  40efc1:	ins    DWORD PTR es:[edi],dx
  40efc2:	sar    DWORD PTR [ecx+edi*4],cl
  40efc5:	mov    edx,0x486a1274
  40efca:	fwait
  40efcb:	test   eax,0x9bd4d167
  40efd0:	bound  esi,QWORD PTR [ebx-0x3]
  40efd3:	out    dx,al
  40efd4:	add    DWORD PTR [esi],edi
  40efd6:	push   cs
  40efd7:	ret    0x92c9
  40efda:	test   edx,ebp
  40efdc:	adc    al,ah
  40efde:	mov    DWORD PTR ss:[eax-0x75],edi
  40efe2:	outs   dx,DWORD PTR ds:[esi]
  40efe3:	jb     0x40efbb
  40efe5:	cld    
  40efe6:	leave  
  40efe7:	shl    ah,0xe2
  40efea:	mov    DWORD PTR [eax-0x5b2df8cc],ecx
  40eff0:	jle    0x40ef79
  40eff2:	aas    
  40eff3:	jge    0x40f05f
  40eff5:	lods   al,BYTE PTR ds:[esi]
  40eff6:	mov    ebp,0x881e6c2b
  40effb:	and    bh,cl
  40effd:	shl    BYTE PTR ds:0x4f59b865,0x99
  40f004:	mov    ah,0xad
  40f006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f007:	and    dh,BYTE PTR [esi*4+0x6027d102]
  40f00e:	sahf   
  40f00f:	mov    ds,WORD PTR [esi-0x171c765d]
  40f015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f016:	sahf   
  40f017:	mov    cl,0x7e
  40f019:	imul   esi,DWORD PTR [ebx+0x6a2a9990],0x94bf5fe5
  40f023:	xchg   DWORD PTR [edi-0x72852e75],eax
  40f029:	fistp  WORD PTR [ecx]
  40f02b:	add    al,0x8c
  40f02d:	adc    BYTE PTR [esi+0x2b8a1aa8],dh
  40f033:	inc    ebp
  40f034:	jmp    0x40efe1
  40f036:	jo     0x40f077
  40f038:	pop    eax
  40f039:	mov    cl,0x4a
  40f03b:	inc    ebx
  40f03c:	jo     0x40efed
  40f03e:	pop    eax
  40f03f:	ins    BYTE PTR es:[edi],dx
  40f040:	gs ss pushf 
  40f043:	(bad)  
  40f044:	out    dx,al
  40f045:	jbe    0x40efeb
  40f047:	dec    esi
  40f048:	mov    ds,ebx
  40f04a:	inc    esp
  40f04b:	loopne 0x40f069
  40f04d:	test   DWORD PTR [ebx-0x1c],0xd3f99312
  40f054:	jnp    0x40f0d5
  40f056:	mov    ebx,0xe8e0fe99
  40f05b:	retfw  0xe191
  40f05f:	lds    esi,FWORD PTR [edi+0x6e]
  40f062:	stos   BYTE PTR es:[edi],al
  40f063:	add    al,0x2a
  40f065:	sbb    ebx,ebp
  40f067:	les    esi,FWORD PTR [edx+0x5b]
  40f06a:	aaa    
  40f06b:	cmp    DWORD PTR [edx],eax
  40f06d:	mov    ebx,0x37a523e5
  40f072:	jbe    0x40f0dc
  40f074:	call   0xa794d409
  40f079:	call   0x64f6:0xb60cafe
  40f080:	mov    ah,0x9c
  40f082:	and    DWORD PTR [edi-0xb5a4c22],esp
  40f088:	jo     0x40f03c
  40f08a:	(bad)  
  40f08b:	mov    cl,0x35
  40f08d:	pop    esp
  40f08e:	(bad)  
  40f08f:	ffree  st(4)
  40f091:	or     eax,0xce80911
  40f096:	add    esp,DWORD PTR [edi-0xc90a22f]
  40f09c:	cmp    DWORD PTR [ebx-0xe],esp
  40f09f:	test   BYTE PTR [ebx+0x3ccc60ed],bl
  40f0a5:	push   edi
  40f0a6:	leave  
  40f0a7:	ficomp WORD PTR [ecx-0x67]
  40f0aa:	mov    al,ds:0x8dd430e1
  40f0af:	pusha  
  40f0b0:	add    ch,BYTE PTR [ebp+0x6e896423]
  40f0b6:	xor    eax,0x71d68013
  40f0bb:	push   0x177fce63
  40f0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0c1:	test   al,0x3
  40f0c3:	fcom   QWORD PTR [esi+0x21]
  40f0c6:	fild   DWORD PTR [ecx]
  40f0c8:	cld    
  40f0c9:	push   cs
  40f0ca:	pop    eax
  40f0cb:	mov    esp,0x6c2c680f
  40f0d0:	and    BYTE PTR ds:0x2c4dd3fc,bh
  40f0d6:	cmp    cl,bh
  40f0d8:	into   
  40f0d9:	repnz and BYTE PTR [edx-0x64],al
  40f0dd:	jns    0x40f133
  40f0df:	gs pop esi
  40f0e1:	add    DWORD PTR [ebp-0x4f],edi
  40f0e4:	jmp    0x40f0a1
  40f0e6:	pop    ecx
  40f0e7:	or     al,0x3
  40f0e9:	add    ebx,DWORD PTR [ecx-0x4924f563]
  40f0ef:	cmp    BYTE PTR [edi-0x616652fb],dh
  40f0f5:	inc    esi
  40f0f6:	das    
  40f0f7:	push   ecx
  40f0f8:	pusha  
  40f0f9:	mov    eax,0xecb90b8f
  40f0fe:	dec    ebx
  40f0ff:	or     BYTE PTR ds:0x2a3b45b6,bh
  40f105:	scas   eax,DWORD PTR es:[edi]
  40f106:	and    dh,ah
  40f108:	fisttp QWORD PTR [edi-0x1c]
  40f10b:	inc    ecx
  40f10c:	sbb    esp,0xfffffff1
  40f10f:	xchg   ebp,eax
  40f110:	in     eax,dx
  40f111:	cmp    al,0x4c
  40f113:	jle    0x40f117
  40f115:	inc    ebx
  40f116:	cmp    DWORD PTR [edx-0x41],esp
  40f119:	sbb    DWORD PTR [ecx],ebp
  40f11b:	dec    ecx
  40f11c:	pop    ecx
  40f11d:	sbb    al,0xe3
  40f11f:	gs aam 0xa3
  40f122:	mov    WORD PTR [ebp-0x63ceed74],fs
  40f128:	icebp  
  40f129:	add    ch,dh
  40f12b:	adc    al,0x8d
  40f12d:	aas    
  40f12e:	and    ecx,edx
  40f130:	push   0xffffffa7
  40f132:	inc    ebp
  40f133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f134:	lea    edx,[edi-0x378fa68c]
  40f13a:	mov    ch,0x20
  40f13c:	cmp    al,0x8b
  40f13e:	jne    0x40f14c
  40f140:	cmp    esi,eax
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	cld    
  40fa17:	cmp    ebp,eax
  40fa19:	mov    esi,0x7a7aca74
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	ss ret 
  40fa24:	data16 int3 
  40fa26:	mov    ebp,0x608d1138
  40fa2b:	xchg   edx,eax
  40fa2c:	sti    
  40fa2d:	or     ecx,DWORD PTR [ecx]
  40fa2f:	call   0xcb1d4d7d
  40fa34:	std    
  40fa35:	xchg   esp,eax
  40fa36:	ret    0x64c4
  40fa39:	adc    eax,0xb99bfe32
  40fa3e:	mov    dh,0x85
  40fa40:	dec    ebp
  40fa41:	rcr    dl,cl
  40fa43:	je     0x40fab6
  40fa45:	scas   eax,DWORD PTR es:[edi]
  40fa46:	daa    
  40fa47:	dec    eax
  40fa48:	pop    eax
  40fa49:	jo     0x40fa5f
  40fa4b:	sub    eax,0xdd2644d7
  40fa50:	mov    ecx,0xd9fc5a72
  40fa55:	test   DWORD PTR [ecx-0x3f86b0f8],ebp
  40fa5b:	push   DWORD PTR [ebp+0x63]
  40fa5e:	add    esp,edx
  40fa60:	mov    DWORD PTR [ebx],edi
  40fa62:	aaa    
  40fa63:	sbb    dl,bl
  40fa65:	xchg   BYTE PTR [edx],ch
  40fa67:	mov    dh,bl
  40fa69:	mov    edi,DWORD PTR [edi+0x3e5ec630]
  40fa6f:	mov    al,0x18
  40fa71:	jo     0x40fadb
  40fa73:	push   esi
  40fa74:	shr    DWORD PTR [ebp-0x584da75a],0x9d
  40fa7b:	inc    eax
  40fa7c:	push   0xffffffd5
  40fa7e:	jb     0x40fa52
  40fa80:	outs   dx,BYTE PTR ds:[esi]
  40fa81:	push   es
  40fa82:	rcl    BYTE PTR [esi],0x3c
  40fa85:	pop    esi
  40fa86:	mov    eax,0xf409a8b1
  40fa8b:	ins    DWORD PTR es:[edi],dx
  40fa8c:	dec    esi
  40fa8d:	(bad)  
  40fa8e:	lahf   
  40fa8f:	cwde   
  40fa90:	pop    ebx
  40fa91:	xor    ebx,0x550e4daa
  40fa97:	fs lsl ebp,bp
  40fa9b:	(bad)  
  40fa9c:	nop
  40fa9d:	leave  
  40fa9e:	add    cl,ch
  40faa0:	xor    DWORD PTR [esi+eax*8-0x10],edi
  40faa4:	int3   
  40faa5:	sub    BYTE PTR [ecx-0x4fa3451b],ah
  40faab:	sub    BYTE PTR [esi-0x1b2e1e40],ch
  40fab1:	inc    eax
  40fab2:	or     ebx,esp
  40fab4:	aaa    
  40fab5:	call   0xe1f00f8f
  40faba:	daa    
  40fabb:	or     dh,BYTE PTR [edx+eax*1+0x42bfa474]
  40fac2:	push   esp
  40fac3:	push   0x1ae889bc
  40fac8:	cmp    ah,0xf6
  40facb:	ins    DWORD PTR es:[edi],dx
  40facc:	in     al,dx
  40facd:	aas    
  40face:	mov    eax,ds:0xa7fa232
  40fad3:	xor    dh,BYTE PTR [esi]
  40fad5:	or     esp,eax
  40fad7:	jns    0x40fa81
  40fad9:	aad    0xc4
  40fadb:	fdivr  DWORD PTR [ebx-0x2c]
  40fade:	js     0x40fb3d
  40fae0:	fwait
  40fae1:	xchg   ebp,eax
  40fae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fae4:	ds aam 0xde
  40fae7:	xchg   BYTE PTR [esi+0x5a],ah
  40faea:	icebp  
  40faeb:	and    BYTE PTR [edi-0xf],dl
  40faee:	jmp    0x8ab96630
  40faf3:	push   esp
  40faf4:	jp     0x40fb22
  40faf6:	ret    0x773a
  40faf9:	and    al,0xd7
  40fafb:	cmp    BYTE PTR [ebx],ah
  40fafd:	push   0x13ae1429
  40fb02:	popf   
  40fb03:	xor    BYTE PTR [edx+0x7c],dl
  40fb06:	mov    dl,0xa5
  40fb08:	imul   ecx,DWORD PTR [edi+0xa],0x2942001a
  40fb0f:	or     ebp,ecx
  40fb11:	xchg   esp,eax
  40fb12:	loopne 0x40fb03
  40fb14:	clc    
  40fb15:	(bad)  
  40fb16:	jp     0x40fafb
  40fb18:	cmc    
  40fb19:	dec    ebx
  40fb1a:	jo     0x40fb60
  40fb1c:	cwde   
  40fb1d:	es pop esp
  40fb1f:	inc    eax
  40fb20:	xor    DWORD PTR [eax],edx
  40fb22:	pop    edx
  40fb23:	cld    
  40fb24:	mov    ah,0xe
  40fb26:	adc    DWORD PTR [edx+edi*2],esi
  40fb29:	xor    cl,BYTE PTR [edx]
  40fb2b:	add    BYTE PTR [ebp-0x1c13179],al
  40fb31:	add    al,0xc5
  40fb33:	je     0x40fb3c
  40fb35:	jg     0x40fb09
  40fb37:	and    eax,0xd1823be8
  40fb3c:	sub    al,0x8e
  40fb3e:	enter  0xd6a6,0x4f
  40fb42:	fdivr  QWORD PTR [edx-0x68]
  40fb45:	mov    al,ds:0xe4776a4d
  40fb4a:	aad    0x66
  40fb4c:	sbb    al,0xef
  40fb4e:	mov    eax,ds:0xc3e68694
  40fb53:	xor    edx,ebp
  40fb55:	in     al,0x25
  40fb57:	pop    esp
  40fb58:	ret    0x23e9
  40fb5b:	sub    eax,DWORD PTR [edi+0x711aeb95]
  40fb61:	fsubr  st,st(6)
  40fb63:	push   esp
  40fb64:	jl     0x40fb23
  40fb66:	scas   eax,DWORD PTR es:[edi]
  40fb67:	pop    edi
  40fb68:	ss pop es
  40fb6a:	mov    ebp,ecx
  40fb6c:	sbb    eax,0xffdf6367
  40fb71:	mov    edx,0x880f2678
  40fb76:	pop    ebx
  40fb77:	mov    ds:0xff0af00d,eax
  40fb7c:	xchg   DWORD PTR [edi-0x158c91e4],edi
  40fb82:	in     eax,dx
  40fb83:	mov    edx,0x5bfe1008
  40fb88:	popf   
  40fb89:	popf   
  40fb8a:	call   0x212d5f8f
  40fb8f:	and    esp,edi
  40fb91:	stos   DWORD PTR es:[edi],eax
  40fb92:	out    0xb1,al
  40fb94:	test   DWORD PTR [ecx],ebp
  40fb96:	fprem1 
  40fb98:	jnp    0x40fb7b
  40fb9a:	push   es
  40fb9b:	jge    0x40fc10
  40fb9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb9e:	mov    DWORD PTR [edi+0x51375500],esi
  40fba4:	cli    
  40fba5:	cli    
  40fba6:	cmp    al,BYTE PTR [esi]
  40fba8:	sub    dl,al
  40fbaa:	and    eax,DWORD PTR [eax]
  40fbac:	jmp    0x9e99:0x1220aecf
  40fbb3:	xchg   edi,eax
  40fbb4:	mov    ds,WORD PTR [edi+0x7]
  40fbb7:	mov    ecx,0x5be01ad8
  40fbbc:	popf   
  40fbbd:	adc    DWORD PTR [edx-0x472f4261],0x47
  40fbc4:	in     al,0xb0
  40fbc6:	push   eax
  40fbc7:	mov    ds:0xb7218f11,eax
  40fbcc:	mov    ebx,0xbc60ec6a
  40fbd1:	aad    0x1
  40fbd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbd4:	mov    bh,BYTE PTR [eax-0x7c]
  40fbd7:	mov    ds:0x1542f4c0,al
  40fbdc:	dec    eax
  40fbdd:	mov    ah,0xdf
  40fbdf:	sbb    ah,BYTE PTR [eax+0x32]
  40fbe2:	xchg   esp,eax
  40fbe3:	jg     0x40fbf0
  40fbe5:	mov    BYTE PTR [esi],bh
  40fbe7:	retf   
  40fbe8:	xor    eax,0xaa30fe10
  40fbed:	dec    edi
  40fbee:	sahf   
  40fbef:	jae    0x40fc33
  40fbf1:	mov    eax,ds:0xf0cf9709
  40fbf6:	add    DWORD PTR [ebx+eax*1-0x2],esp
  40fbfa:	aam    0xb5
  40fbfc:	lock mov al,ds:0x6180b968
  40fc02:	mov    ss,WORD PTR [eax-0x3f]
  40fc05:	outs   dx,BYTE PTR ds:[esi]
  40fc06:	add    eax,0x5879762f
  40fc0b:	inc    edi
  40fc0c:	leave  
  40fc0d:	inc    esi
  40fc0e:	fiadd  DWORD PTR es:[ebx-0x46]
  40fc12:	sub    edx,DWORD PTR [eax+0x1cd21ddf]
  40fc18:	pop    ebx
  40fc19:	xor    BYTE PTR [edx+0x2c],0x5f
  40fc1d:	jmp    0x31c8:0x4002d934
  40fc24:	(bad)  
  40fc25:	jae    0x40fbd8
  40fc27:	pop    edx
  40fc28:	fisubr WORD PTR [ebp-0x73458c5a]
  40fc2e:	repnz lock cli 
  40fc31:	jno    0x40fc07
  40fc33:	fcom   DWORD PTR ss:[edx-0x24c883d9]
  40fc3a:	outs   dx,DWORD PTR ds:[esi]
  40fc3b:	(bad)  
  40fc3c:	retf   
  40fc3d:	add    BYTE PTR [ecx],bh
  40fc3f:	inc    esi
  40fc40:	xor    eax,0xa7ffb1e4
  40fc45:	std    
  40fc46:	cmp    eax,DWORD PTR [ebx+0x3e58a265]
  40fc4c:	adc    al,0x6c
  40fc4e:	mov    eax,DWORD PTR [ecx+ebx*4-0x68436466]
  40fc55:	fcom   QWORD PTR [ebx+0x39]
  40fc58:	cmp    al,BYTE PTR [eax+0x21]
  40fc5b:	push   ebx
  40fc5c:	into   
  40fc5d:	retf   0x320c
  40fc60:	adc    al,0x51
  40fc62:	aaa    
  40fc63:	xor    BYTE PTR [edx-0xa],bh
  40fc66:	imul   edi,DWORD PTR [ebp-0x4a787865],0x79628a51
  40fc70:	cmp    al,0x8f
  40fc72:	bound  ebp,QWORD PTR [esi]
  40fc74:	pop    ebx
  40fc75:	inc    esp
  40fc76:	mov    al,ds:0x8835f71b
  40fc7b:	pop    ss
  40fc7c:	ins    BYTE PTR es:[edi],dx
  40fc7d:	sub    ch,BYTE PTR [edi+eax*4]
  40fc80:	pushf  
  40fc81:	in     al,0x87
  40fc83:	pop    eax
  40fc84:	outs   dx,DWORD PTR ds:[esi]
  40fc85:	adc    esp,DWORD PTR [ecx+0x61]
  40fc88:	lea    ecx,[ebx]
  40fc8a:	fcomip st,st(0)
  40fc8c:	(bad)  
  40fc8d:	fbstp  TBYTE PTR [ebx-0x32]
  40fc90:	(bad)  [ecx]
  40fc92:	sub    dl,BYTE PTR [edx+0x722db439]
  40fc98:	fldenv [ecx+0x6d297e17]
  40fc9e:	jg     0x40fcb3
  40fca0:	cwde   
  40fca1:	jb     0x40fd17
  40fca3:	sbb    DWORD PTR [esi],ebp
  40fca5:	es enter 0x47fc,0xc7
  40fcaa:	mov    edi,0x374f52bf
  40fcaf:	mov    edi,0x14cb3725
  40fcb5:	push   edi
  40fcb6:	dec    esp
  40fcb7:	mov    cl,0x35
  40fcb9:	ins    DWORD PTR es:[edi],dx
  40fcba:	(bad)  
  40fcbb:	sbb    bh,BYTE PTR [esi-0x27028715]
  40fcc1:	jle    0x40fc8d
  40fcc3:	aam    0x64
  40fcc5:	popa   
  40fcc6:	retf   0x71ba
  40fcc9:	fsub   QWORD PTR [edi-0x65278b99]
  40fccf:	cld    
  40fcd0:	jg     0x40fd49
  40fcd2:	idiv   BYTE PTR [ebx-0x7f]
  40fcd5:	sbb    ebp,ecx
  40fcd7:	jp     0x40fcc4
  40fcd9:	xor    dh,BYTE PTR [eax+ebx*1+0x8]
  40fcdd:	mov    eax,0xe0409ab
  40fce2:	lock jae 0x40fccc
  40fce5:	mov    eax,0xf58c6728
  40fcea:	cli    
  40fceb:	pusha  
  40fcec:	je     0x40fc8c
  40fcee:	jnp    0x40fc84
  40fcf0:	popa   
  40fcf1:	sub    eax,0x4cd1c4d9
  40fcf6:	dec    esp
  40fcf7:	jb     0x40fd53
  40fcf9:	bound  ecx,QWORD PTR [ebx+0x63f00f8e]
  40fcff:	add    DWORD PTR [edx+0x2e],eax
  40fd02:	fwait
  40fd03:	pusha  
  40fd04:	rcr    BYTE PTR [eax-0x3e],cl
  40fd07:	mov    gs,WORD PTR [edi-0x57]
  40fd0a:	xor    ecx,DWORD PTR [edi]
  40fd0c:	out    dx,al
  40fd0d:	aad    0x9c
  40fd0f:	push   ecx
  40fd10:	(bad)  
  40fd11:	mov    esp,0xd8db1fae
  40fd16:	aad    0xc8
  40fd18:	int    0x2a
  40fd1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd1b:	rol    BYTE PTR [ecx+ebp*8+0x16d60832],0x51
  40fd23:	pusha  
  40fd24:	xlat   BYTE PTR ds:[ebx]
  40fd25:	fimul  DWORD PTR [ecx+esi*1+0x1]
  40fd29:	and    ebx,DWORD PTR [ebx]
  40fd2b:	dec    edi
  40fd2c:	mov    eax,ds:0x4bb1396a
  40fd31:	cmp    dh,BYTE PTR [edx]
  40fd33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd34:	ins    DWORD PTR es:[edi],dx
  40fd35:	xchg   ecx,eax
  40fd36:	ja     0x40fcd6
  40fd38:	xchg   BYTE PTR [esi-0x1a],cl
  40fd3b:	push   0xffffff9b
  40fd3d:	mov    ebp,0xe8329d4e
  40fd42:	aas    
  40fd43:	push   esi
  40fd44:	test   al,0x4d
  40fd46:	sahf   
  40fd47:	shr    DWORD PTR [ebx-0x1474ac4],cl
  40fd4d:	add    bl,ah
  40fd4f:	out    0xe2,eax
  40fd51:	lock int 0x58
  40fd54:	mov    cl,0x27
  40fd56:	outs   dx,BYTE PTR ds:[esi]
  40fd57:	and    ebp,edx
  40fd59:	outs   dx,BYTE PTR ds:[esi]
  40fd5a:	icebp  
  40fd5b:	ret    0xb47b
  40fd5e:	pop    ecx
  40fd5f:	adc    al,0x54
  40fd61:	imul   eax,DWORD PTR [eax+0x5f],0xfffffffa
  40fd65:	mov    ds:0x5b46581c,eax
  40fd6a:	add    al,0xeb
  40fd6c:	pop    ds
  40fd6d:	and    dh,ch
  40fd6f:	in     eax,0x47
  40fd71:	dec    dh
  40fd73:	push   edx
  40fd74:	push   es
  40fd75:	add    eax,0xa95239fd
  40fd7a:	inc    edx
  40fd7b:	pop    ss
  40fd7c:	inc    DWORD PTR [edx]
  40fd7e:	iret   
  40fd7f:	xor    eax,DWORD PTR [ebx]
  40fd81:	ins    BYTE PTR es:[edi],dx
  40fd82:	pop    esp
  40fd83:	mov    dh,0x6f
  40fd85:	fcmovb st,st(1)
  40fd87:	scas   eax,DWORD PTR es:[edi]
  40fd88:	cs inc edi
  40fd8a:	mov    eax,0x5b21101f
  40fd8f:	(bad)
  40fd94:	mov    ebx,0xd7954ac4
  40fd99:	data16 lock fld TBYTE PTR [edi+0x40]
  40fd9e:	adc    eax,0x7b5e11ec
  40fda3:	(bad)  
  40fda4:	and    DWORD PTR [ecx+0x14],ecx
  40fda7:	mov    ds:0x9459bbe0,al
  40fdac:	xor    al,BYTE PTR [esp+edx*2-0x285f22b3]
  40fdb3:	fcom   DWORD PTR [ebp+0x43]
  40fdb6:	xor    bh,dl
  40fdb8:	push   cs
  40fdb9:	shl    bh,0x6d
  40fdbc:	mov    ds:0xf14e6302,al
  40fdc1:	pop    ss
  40fdc2:	xchg   esi,eax
  40fdc3:	shl    BYTE PTR [esi-0x28],1
  40fdc6:	in     al,dx
  40fdc7:	and    ah,BYTE PTR [ecx]
  40fdc9:	xlat   BYTE PTR ds:[ebx]
  40fdca:	lock add ch,BYTE PTR [edx+0x3443d387]
  40fdd1:	ds xor al,0xa8
  40fdd4:	xchg   ebx,eax
  40fdd5:	test   eax,0x4abcb793
  40fdda:	cld    
  40fddb:	xchg   ebx,eax
  40fddc:	rcl    edx,cl
  40fdde:	mov    edi,esi
  40fde0:	out    0x7e,al
  40fde2:	or     DWORD PTR [eax-0x2e],edx
  40fde5:	(bad)  
  40fde6:	test   al,0x65
  40fde8:	sbb    eax,0x16f766b8
  40fded:	push   cs
  40fdee:	aad    0x5f
  40fdf0:	xlat   BYTE PTR ds:[ebx]
  40fdf1:	or     edi,DWORD PTR [eax+ebp*2+0x45]
  40fdf5:	mov    ebp,DWORD PTR [esi]
  40fdf7:	sbb    al,0x46
  40fdf9:	mov    ds:0xc9d1081b,eax
  40fdfe:	xchg   edi,eax
  40fdff:	sub    al,cl
  40fe01:	aad    0xbd
  40fe03:	and    ch,0x94
  40fe06:	loopne 0x40fdf2
  40fe08:	gs push eax
  40fe0a:	mov    DWORD PTR [ebp-0x3bacc797],ebx
  40fe10:	ins    DWORD PTR es:[edi],dx
  40fe11:	jno    0x40fe23
  40fe13:	push   esp
  40fe14:	adc    al,0x62
  40fe16:	je     0x40fe68
  40fe18:	lods   eax,DWORD PTR ds:[esi]
  40fe19:	sbb    DWORD PTR [ebp+0x2f],ebx
  40fe1c:	inc    ebx
  40fe1d:	mov    ebp,0x81d838a
  40fe22:	dec    ebx
  40fe23:	call   0xc116:0x7f128030
  40fe2a:	mov    esp,0xbe5c9987
  40fe2f:	js     0x40fdbf
  40fe31:	or     DWORD PTR [eax+0x43fb20a],edi
  40fe37:	sbb    bl,bh
  40fe39:	jns    0x40fe8a
  40fe3b:	mov    ecx,0xb8995d87
  40fe40:	pushw  cs
  40fe42:	xchg   BYTE PTR [eax+ecx*4-0xe],cl
  40fe46:	clc    
  40fe47:	inc    ebp
  40fe48:	sub    esi,edi
  40fe4a:	dec    esp
  40fe4b:	pop    esp
  40fe4c:	jg     0x40fdf4
  40fe4e:	xchg   bh,bl
  40fe50:	adc    ah,ch
  40fe52:	iret   
  40fe53:	aaa    
  40fe54:	push   0xffffffca
  40fe56:	test   BYTE PTR [ecx+ebx*8-0xeb4d0ba],bh
  40fe5d:	push   0x779cdebd
  40fe62:	push   esi
  40fe63:	lock or al,0x84
  40fe66:	fild   DWORD PTR [eax-0x492124e4]
  40fe6c:	push   ebx
  40fe6d:	dec    esp
  40fe6e:	inc    esp
  40fe6f:	test   BYTE PTR [ebp-0x31daeb57],dh
  40fe75:	xor    BYTE PTR [esi+edi*4],0x5a
  40fe79:	(bad)  
  40fe7a:	repz push edx
  40fe7c:	cmp    edi,0x38
  40fe7f:	adc    DWORD PTR [eax-0x51],ebp
  40fe82:	jp     0x40ff00
  40fe84:	mov    ah,0x38
  40fe86:	mov    dl,0x4
  40fe88:	xor    al,0x44
  40fe8a:	adc    DWORD PTR ds:0x80ff7aee,0x33
  40fe91:	pop    esi
  40fe92:	jg     0x40fe41
  40fe94:	adc    edi,DWORD PTR [ebx]
  40fe96:	bound  ebp,QWORD PTR [edx+0x7f]
  40fe99:	ret    0x3a84
  40fe9c:	(bad)  
  40fe9d:	rcl    bl,cl
  40fe9f:	pop    ecx
  40fea0:	fldz   
  40fea2:	and    edx,DWORD PTR [eax-0x3f459aa]
  40fea8:	push   cs
  40fea9:	xor    DWORD PTR [esp+eiz*8],0x1bc95c4c
  40feb0:	repnz ds fs inc ebp
  40feb4:	outs   dx,BYTE PTR ds:[esi]
  40feb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feb6:	or     al,0x9d
  40feb8:	jmp    0x78eb5616
  40febd:	mov    ecx,0xa44d401
  40fec2:	ds popf 
  40fec4:	and    ah,BYTE PTR [edx]
  40fec6:	pop    esi
  40fec7:	and    DWORD PTR [ebp-0x47],ebp
  40feca:	push   ebp
  40fecb:	mov    edi,0x3d15638c
  40fed0:	xchg   ebp,eax
  40fed1:	push   esp
  40fed2:	ins    DWORD PTR es:[edi],dx
  40fed3:	rcr    BYTE PTR [eax-0x5c7c81b7],cl
  40fed9:	icebp  
  40feda:	js     0x40ff1b
  40fedc:	(bad)  
  40fedd:	cmp    al,0x12
  40fedf:	sub    eax,0xee5bd59e
  40fee4:	test   al,0x57
  40fee6:	popf   
  40fee7:	es fwait
  40fee9:	loop   0x40fe76
  40feeb:	fdivp  st(2),st
  40feed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feee:	outs   dx,DWORD PTR ds:[esi]
  40feef:	das    
  40fef0:	arpl   WORD PTR [ebp-0x18],bp
  40fef3:	mov    al,0xce
  40fef5:	add    BYTE PTR [edi+0x33e84a05],bl
  40fefb:	div    DWORD PTR ds:0xe620add2
  40ff01:	mov    al,0x2b
  40ff03:	stos   BYTE PTR es:[edi],al
  40ff04:	adc    BYTE PTR [ebx-0x15c190c0],ah
  40ff0a:	fild   DWORD PTR [ecx]
  40ff0c:	fwait
  40ff0d:	popa   
  40ff0e:	sar    BYTE PTR [esi-0x5b977d16],0x8e
  40ff15:	jmp    0x1e2c9de
  40ff1a:	push   edi
  40ff1b:	jl     0x40fee6
  40ff1d:	xor    ebp,ebx
  40ff1f:	fmul   DWORD PTR [eax]
  40ff21:	call   0xe61b8b5c
  40ff26:	and    cl,bl
  40ff28:	rol    al,1
  40ff2a:	cmp    al,0xd0
  40ff2c:	xor    al,0x97
  40ff2e:	mov    ebp,0x8f09cd3c
  40ff33:	fcmovbe st,st(1)
  40ff35:	sub    DWORD PTR [ebx],esi
  40ff37:	int    0xe4
  40ff39:	dec    esp
  40ff3a:	push   es
  40ff3b:	jno    0x40ff88
  40ff3d:	add    DWORD PTR [ecx-0x2e],esi
  40ff40:	rcl    BYTE PTR ds:0x461f1b05,1
  40ff46:	test   bl,bl
  40ff48:	dec    edi
  40ff49:	cdq    
  40ff4a:	ret    
  40ff4b:	dec    esp
  40ff4c:	stos   BYTE PTR es:[edi],al
  40ff4d:	mov    ?,WORD PTR [edi+eax*1]
  40ff50:	pop    eax
  40ff51:	call   0x1befed79
  40ff56:	clc    
  40ff57:	xor    ecx,ebx
  40ff59:	test   DWORD PTR [di-0x7bbf],esi
  40ff5e:	add    dh,ah
  40ff60:	(bad)  [edx]
  40ff62:	pop    es
  40ff63:	sbb    edi,DWORD PTR ds:0x5aefb9e0
  40ff69:	inc    edx
  40ff6a:	ins    BYTE PTR es:[edi],dx
  40ff6b:	test   eax,0x51cc97c4
  40ff70:	jns    0x40ffd0
  40ff72:	mov    dl,0xe1
  40ff74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff75:	mov    edi,0xaf877000
  40ff7a:	inc    ecx
  40ff7b:	mov    ah,0xf7
  40ff7d:	pushf  
  40ff7e:	inc    BYTE PTR [edi+eiz*8-0x178a1ced]
  40ff85:	push   0x68
  40ff87:	call   0xe24d95bf
  40ff8c:	jns    0x40ff6c
  40ff8e:	stos   BYTE PTR es:[edi],al
  40ff8f:	cld    
  40ff90:	push   ebx
  40ff91:	out    0xf,al
  40ff93:	adc    dl,BYTE PTR [esi+0x6d587806]
  40ff99:	idiv   BYTE PTR [ebx+0x225ab7f7]
  40ff9f:	stc    
  40ffa0:	mov    edx,0xc87be90
  40ffa5:	or     al,BYTE PTR [edi+0x378ff571]
  40ffab:	xchg   esi,eax
  40ffac:	test   al,0x19
  40ffae:	enter  0x2582,0x64
  40ffb2:	shl    BYTE PTR [edi+edi*1],1
  40ffb5:	outs   dx,DWORD PTR ds:[esi]
  40ffb6:	push   0xffffffe4
  40ffb8:	dec    edx
  40ffb9:	jl     0x40ffb9
  40ffbb:	jno    0x40ff52
  40ffbd:	div    DWORD PTR [ebx-0x77d14243]
  40ffc3:	lahf   
  40ffc4:	ret    
  40ffc5:	(bad)  
  40ffc6:	sub    ebp,edi
  40ffc8:	adc    DWORD PTR [ecx-0x1f51479b],0xffffff99
  40ffcf:	xor    eax,0xed74ad5b
  40ffd4:	into   
  40ffd5:	xchg   ecx,eax
  40ffd6:	xor    cx,WORD PTR [edx+0x3609c745]
  40ffdd:	xchg   ebp,eax
  40ffde:	repnz and BYTE PTR fs:[esi],dl
  40ffe2:	fisub  WORD PTR [ebx]
  40ffe4:	(bad)  
  40ffe5:	clc    
  40ffe6:	ja     0x410053
  40ffe8:	push   edx
  40ffe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffea:	fistp  DWORD PTR [esi+0x6f]
  40ffed:	lods   al,BYTE PTR ds:[esi]
  40ffee:	cmc    
  40ffef:	push   ebp
  40fff0:	and    eax,0x99f85171
  40fff5:	js     0x410053
  40fff7:	cmc    
  40fff8:	stos   BYTE PTR es:[edi],al
  40fff9:	add    al,0xe8
  40fffb:	mov    ah,0x8e
  40fffd:	stos   BYTE PTR es:[edi],al
  40fffe:	clc    
  40ffff:	pushf  
  410000:	mov    ebp,0xaf7a9d04
  410005:	sub    eax,0xa5a76c9a
  41000a:	sbb    eax,0x587275d9
  41000f:	or     BYTE PTR [ecx],al
  410011:	jae    0x410026
  410013:	mov    eax,ds:0x2756c8cc
  410018:	mov    ch,0xa0
  41001a:	push   esi
  41001b:	test   eax,0xd66e3ea9
  410020:	jae    0x41006b
  410022:	xchg   ebx,eax
  410023:	imul   ebp,DWORD PTR ss:[esi-0x6eef2593],0x5c903147
  41002e:	xlat   BYTE PTR ds:[ebx]
  41002f:	aad    0x92
  410031:	jp     0x410009
  410033:	adc    eax,DWORD PTR [eax+0x703eb70a]
  410039:	test   dl,cl
  41003b:	inc    ecx
  41003c:	sahf   
  41003d:	hlt    
  41003e:	or     dh,dh
  410040:	stos   BYTE PTR es:[edi],al
  410041:	std    
  410042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410043:	inc    ebp
  410044:	loop   0x410004
  410046:	das    
  410047:	mov    WORD PTR [edi+0x5d56c318],ds
  41004d:	hlt    
  41004e:	pop    ebp
  41004f:	mov    bh,0xae
  410051:	(bad)
  410055:	and    bh,BYTE PTR [esi-0x71ffd1fd]
  41005b:	dec    edx
  41005c:	inc    esp
  41005d:	data16 fstp QWORD PTR [edi+edx*8-0x5604e04c]
  410065:	dec    ecx
  410066:	xchg   DWORD PTR [edi+ecx*8],esp
  410069:	mov    al,ds:0x2f34f9fb
  41006e:	fidiv  WORD PTR [ebp-0x45862d7a]
  410074:	jecxz  0x410052
  410076:	ds xchg ecx,eax
  410078:	mov    cl,0x92
  41007a:	xchg   ecx,eax
  41007b:	jle    0x41002f
  41007d:	stos   DWORD PTR es:[edi],eax
  41007e:	push   ebp
  41007f:	in     al,dx
  410080:	adc    DWORD PTR [ebx+0x6e],ebp
  410083:	jmp    0x291620d1
  410088:	sub    al,BYTE PTR [ecx+eax*8-0x7fb18e8e]
  41008f:	adc    dh,BYTE PTR [ecx]
  410091:	jnp    0x410061
  410093:	cmp    al,BYTE PTR ss:[esi+edx*8+0x36480714]
  41009b:	cs sbb ch,bh
  41009e:	xchg   ecx,eax
  41009f:	test   BYTE PTR [edi+eiz*2-0x145816f4],ah
  4100a6:	sbb    eax,0x671712e0
  4100ab:	push   ecx
  4100ac:	gs ins DWORD PTR es:[edi],dx
  4100ae:	ret    0x9110
  4100b1:	inc    esp
  4100b2:	mov    bh,0x74
  4100b4:	push   ebp
  4100b5:	jp     0x410093
  4100b7:	inc    esp
  4100b8:	pop    ebx
  4100b9:	sub    esp,ecx
  4100bb:	ret    0xe05b
  4100be:	lods   eax,DWORD PTR ds:[esi]
  4100bf:	jnp    0x410117
  4100c1:	fistp  DWORD PTR [eax+0x20bcdaee]
  4100c7:	xor    DWORD PTR [ebx-0x1bd98793],ebx
  4100cd:	int    0xb
  4100cf:	out    0xdf,al
  4100d1:	ins    DWORD PTR es:[edi],dx
  4100d2:	mov    ds:0x26907279,eax
  4100d7:	mov    ds:0x7be7f6fa,al
  4100dc:	push   ecx
  4100dd:	mov    fs,esp
  4100df:	sub    eax,0xbd34b488
  4100e4:	sub    BYTE PTR [edx],bl
  4100e6:	adc    al,0x49
  4100e8:	xchg   esp,eax
  4100e9:	arpl   bx,si
  4100eb:	cmp    DWORD PTR [ebx-0x612e479a],edx
  4100f1:	adc    al,0x95
  4100f3:	dec    DWORD PTR [eax+0x44]
  4100f6:	in     al,0xea
  4100f8:	inc    edx
  4100f9:	stos   DWORD PTR es:[edi],eax
  4100fa:	aaa    
  4100fb:	loopne 0x4100b8
  4100fd:	and    BYTE PTR [ecx],ah
  4100ff:	call   0x6ed66c76
  410104:	js     0x410100
  410106:	jo     0x410108
  410108:	les    ebx,FWORD PTR [ebx]
  41010a:	add    esp,ebp
  41010c:	or     DWORD PTR [edi+edx*2+0x7b],edx
  410110:	mov    ebx,0x7fbaca8f
  410115:	sub    ah,bh
  410117:	and    edi,DWORD PTR [ebx+eiz*8]
  41011a:	imul   ebp,DWORD PTR [esi+0x719f0660],0xfffffff2
  410121:	add    ch,0x4c
  410124:	pop    ds
  410125:	adc    BYTE PTR [esi],ah
  410127:	mov    DWORD PTR [edx],esi
  410129:	push   eax
  41012a:	into   
  41012b:	test   DWORD PTR [ebx-0x299f0f2a],esi
  410131:	in     al,0xd3
  410133:	cmp    ebp,esi
  410135:	mov    eax,DWORD PTR [esi-0x5e]
  410138:	loopne 0x4100c2
  41013a:	fwait
  41013b:	xchg   ecx,eax
  41013c:	add    bh,bh
  41013e:	push   edx
  41013f:	jecxz  0x41015f
  410141:	fwait
  410142:	in     al,dx
  410143:	mov    WORD PTR [ebp-0x3b],fs
  410146:	xor    ah,BYTE PTR [edx]
  410148:	shl    cl,cl
  41014a:	inc    ecx
  41014b:	mov    bh,0x98
  41014d:	cmp    eax,0xa123942d
  410152:	sbb    esi,ebp
  410154:	sub    bl,bh
  410156:	std    
  410157:	sbb    eax,0x636bd35e
  41015c:	mov    al,0x8f
  41015e:	sub    dh,dl
  410160:	leave  
  410161:	mov    edx,DWORD PTR [eax-0x32d18b85]
  410167:	enter  0xa6f6,0x21
  41016b:	push   esp
  41016c:	mov    cl,0xef
  41016e:	mov    eax,ds:0x1c55bb33
  410173:	in     al,dx
  410174:	and    BYTE PTR [ebp-0xabd47e9],0xae
  41017b:	mov    dh,BYTE PTR [esi-0x17]
  41017e:	mov    esp,0xce6eeb45
  410183:	dec    ecx
  410184:	mov    edx,DWORD PTR [esp+esi*1]
  410187:	push   ecx
  410188:	add    bh,BYTE PTR [eax+0x118f5d0]
  41018e:	popa   
  41018f:	adc    al,0x4d
  410191:	cmp    al,0xf2
  410193:	(bad)  
  410194:	mov    al,0x97
  410196:	add    eax,0x1321db2d
  41019b:	jo     0x41016a
  41019d:	cmp    eax,0xd85d156d
  4101a2:	adc    al,0x71
  4101a4:	std    
  4101a5:	add    BYTE PTR [edi-0x4f32716b],cl
  4101ab:	das    
  4101ac:	addr16 mov edi,0xec0ec867
  4101b2:	dec    esp
  4101b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101b4:	mov    ch,0xf7
  4101b6:	mov    edi,0x31ddc7da
  4101bb:	adc    al,0x3f
  4101bd:	adc    DWORD PTR [ebp+edx*1+0x33682d87],eax
  4101c4:	popf   
  4101c5:	xor    al,0x14
  4101c7:	and    DWORD PTR [edi-0x9],ebx
  4101ca:	and    BYTE PTR [ecx],0x65
  4101cd:	pop    ds
  4101ce:	(bad)  
  4101cf:	not    al
  4101d1:	mov    ebp,gs
  4101d3:	ds or  al,0xfb
  4101d6:	push   ebx
  4101d7:	mov    ebx,0xb2c7c18b
  4101dc:	mov    ebx,0xb9ea4e20
  4101e1:	imul   esp,esp,0xf303117d
  4101e7:	pop    edx
  4101e8:	shl    BYTE PTR [edx-0x18b9f58e],1
  4101ee:	jmp    0x8203:0xabb238c
  4101f5:	sub    ebx,ebp
  4101f7:	int3   
  4101f8:	sub    DWORD PTR [ecx-0x21],ebx
  4101fb:	mov    bl,0x63
  4101fd:	js     0x4101ef
  4101ff:	out    0xb5,al
  410201:	pop    edi
  410202:	xchg   edx,eax
  410203:	imul   ebx,esi,0x35bbb297
  410209:	retf   0x842b
  41020c:	popf   
  41020d:	push   0x450c27bd
  410212:	hlt    
  410213:	fdivr  QWORD PTR [ecx-0x2c]
  410216:	cmp    al,0x48
  410218:	mov    BYTE PTR [ebx+0x29],cl
  41021b:	fadd   DWORD PTR [edx]
  41021d:	shr    DWORD PTR [esi+ecx*8+0x67],0xec
  410222:	or     eax,DWORD PTR [esi-0x5f604abc]
  410228:	pop    es
  410229:	je     0x4101ec
  41022b:	add    ah,bl
  41022d:	repnz (bad) 
  41022f:	push   edx
  410230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410231:	jae    0x410299
  410233:	lock push 0x3d
  410236:	sbb    eax,0xe40f3f0e
  41023b:	lahf   
  41023c:	mov    DWORD PTR [edi-0x3a],ebp
  41023f:	das    
  410240:	mov    al,BYTE PTR [ebp+0x759521a1]
  410246:	inc    esi
  410247:	jnp    0x41028f
  410249:	fsubr  QWORD PTR [ebx-0x6c]
  41024c:	mov    BYTE PTR [edx+0x12],cl
  41024f:	pop    edi
  410250:	iret   
  410251:	ret    
  410252:	or     DWORD PTR es:[esi],ebp
  410255:	dec    edx
  410256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410257:	cdq    
  410258:	clc    
  410259:	sub    BYTE PTR [edx],ch
  41025b:	jmp    0x410217
  41025d:	pop    ebx
  41025e:	inc    esp
  41025f:	in     eax,dx
  410260:	je     0x41026c
  410262:	dec    esp
  410263:	adc    al,0x90
  410265:	loope  0x41023d
  410267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410268:	cmp    eax,0x29154c35
  41026d:	xchg   esi,eax
  41026e:	stos   DWORD PTR es:[edi],eax
  41026f:	int    0x2
  410271:	adc    edx,DWORD PTR [ecx-0x6f]
  410274:	jmp    0x4102ee
  410276:	lahf   
  410277:	pop    esp
  410278:	test   al,0xf0
  41027a:	xor    esi,DWORD PTR [edx]
  41027c:	xor    DWORD PTR [ecx+0x20],ecx
  41027f:	pop    ebx
  410280:	push   ebx
  410281:	sahf   
  410282:	ret    
  410283:	loope  0x41029c
  410285:	sub    DWORD PTR [edx],ecx
  410287:	cmp    al,dh
  410289:	cdq    
  41028a:	push   ebx
  41028b:	xchg   esp,ecx
  41028d:	xlat   BYTE PTR ds:[ebx]
  41028e:	ds mov esp,0x8407e2fb
  410294:	int3   
  410295:	push   0x8047f7b3
  41029a:	mov    ebx,DWORD PTR [eax-0x31dd5a0a]
  4102a0:	sub    BYTE PTR [ebx-0x792c892b],cl
  4102a6:	lds    ebp,FWORD PTR [eax]
  4102a8:	shl    BYTE PTR [edi-0x2f],1
  4102ab:	loope  0x410321
  4102ad:	daa    
  4102ae:	push   esi
  4102af:	mov    cl,0xb
  4102b1:	jp     0x4102d8
  4102b3:	lahf   
  4102b4:	outs   dx,DWORD PTR ds:[esi]
  4102b5:	call   DWORD PTR [esp+ecx*2+0x21]
  4102b9:	mov    esp,0xeb7bd924
  4102be:	dec    edx
  4102bf:	call   0x31b883de
  4102c4:	(bad)  
  4102c5:	jl     0x41024f
  4102c7:	sbb    al,0xb1
  4102c9:	cmp    BYTE PTR [ebp-0x21],dl
  4102cc:	mov    bl,0x6c
  4102ce:	push   esi
  4102cf:	xchg   ecx,eax
  4102d0:	nop
  4102d1:	pop    edx
  4102d2:	xchg   edx,eax
  4102d3:	mov    dl,0x25
  4102d5:	pop    ss
  4102d6:	or     al,0x18
  4102d8:	js     0x41032c
  4102da:	scas   al,BYTE PTR es:[edi]
  4102db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102dc:	sub    esi,edx
  4102de:	xlat   BYTE PTR ds:[ebx]
  4102df:	ins    BYTE PTR es:[edi],dx
  4102e0:	mov    ah,0xcc
  4102e2:	sub    dl,BYTE PTR ds:0x2baf172b
  4102e8:	push   esi
  4102e9:	outs   dx,DWORD PTR ds:[esi]
  4102ea:	stos   DWORD PTR es:[edi],eax
  4102eb:	push   esi
  4102ec:	out    0x9,eax
  4102ee:	pop    ebx
  4102ef:	adc    ch,BYTE PTR [esi]
  4102f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102f2:	mov    ?,esi
  4102f4:	jnp    0x410277
  4102f6:	pop    eax
  4102f7:	push   cs
  4102f8:	(bad)  
  4102f9:	adc    al,0xbe
  4102fb:	mov    dl,dl
  4102fd:	in     eax,0x5e
  4102ff:	mov    eax,ds:0xb8c60336
  410304:	inc    ecx
  410305:	xor    al,0x92
  410307:	mov    ebx,0xeda5fee0
  41030c:	out    0xd9,al
  41030e:	cmp    DWORD PTR [edx+esi*1-0xb],esi
  410312:	das    
  410313:	fcmovne st,st(6)
  410315:	and    DWORD PTR [edx-0x71],edx
  410318:	ror    al,0x60
  41031b:	leave  
  41031c:	xchg   esp,eax
  41031d:	out    0x2d,eax
  41031f:	xor    bh,bl
  410321:	aam    0x38
  410323:	adc    al,BYTE PTR [ecx]
  410325:	sub    ebx,DWORD PTR ss:0x16f31a00
  41032c:	jle    0x4102e0
  41032e:	hlt    
  41032f:	jmp    0x2bff:0xdc4ab455
  410336:	aas    
  410337:	xlat   BYTE PTR ds:[ebx]
  410338:	sbb    bl,cl
  41033a:	adc    eax,0xe8c6619b
  41033f:	stos   DWORD PTR es:[edi],eax
  410340:	dec    ecx
  410341:	mov    edi,DWORD PTR [ecx+0x4a]
  410344:	lock jb 0x4102e1
  410347:	sub    ebx,DWORD PTR [esi+edx*2-0x4d]
  41034b:	lods   al,BYTE PTR ds:[esi]
  41034c:	std    
  41034d:	sbb    al,0x2f
  41034f:	cmp    WORD PTR ds:0x765ae32d,si
  410356:	retf   
  410357:	(bad)  
  410358:	call   0xd8ef91bc
  41035d:	jnp    0x4103b5
  41035f:	lahf   
  410360:	xor    DWORD PTR [ecx],esp
  410362:	and    eax,0x15c16328
  410367:	push   ds
  410368:	mov    al,ds:0x766a492e
  41036d:	add    eax,0xfbecf30d
  410372:	jae    0x410353
  410374:	add    esp,DWORD PTR [esi]
  410376:	sbb    eax,0x8db730dc
  41037b:	inc    ecx
  41037c:	scas   al,BYTE PTR es:[edi]
  41037d:	outs   dx,DWORD PTR ds:[esi]
  41037e:	mov    ebx,0x52165df1
  410383:	cmp    eax,0xc2cf8450
  410388:	out    dx,al
  410389:	scas   eax,DWORD PTR es:[edi]
  41038a:	mov    edi,0xd9b8fb2a
  41038f:	outs   dx,BYTE PTR ds:[esi]
  410390:	dec    ecx
  410391:	rcl    DWORD PTR fs:[edx],0x17
  410395:	xor    BYTE PTR [esp+esi*2],ah
  410398:	xor    DWORD PTR [ecx-0x7c],ecx
  41039b:	and    eax,0x3e87fcca
  4103a0:	or     eax,0xfc1fead9
  4103a5:	xchg   DWORD PTR [edi],esi
  4103a7:	pop    edx
  4103a8:	lds    eax,FWORD PTR [edi-0x7c]
  4103ab:	sub    edi,ebx
  4103ad:	std    
  4103ae:	jge    0x4103cc
  4103b0:	into   
  4103b1:	sub    ch,bl
  4103b3:	inc    ebx
  4103b4:	mov    ebx,0x50b3a79a
  4103b9:	call   0x9a64a4ff
  4103be:	gs in  eax,dx
  4103c0:	lods   eax,DWORD PTR ds:[esi]
  4103c1:	mov    esi,0x10283b69
  4103c6:	adc    bh,dh
  4103c8:	sbb    dh,BYTE PTR [ecx]
  4103ca:	retf   
  4103cb:	adc    dh,ah
  4103cd:	(bad)  
  4103ce:	fstp   TBYTE PTR [esi+0x623e4ba6]
  4103d4:	push   edi
  4103d5:	test   eax,0xe2438048
  4103da:	jb     0x410413
  4103dc:	outs   dx,DWORD PTR ds:[esi]
  4103dd:	mov    DWORD PTR [edi],edx
  4103df:	fmul   QWORD PTR [ebx+0x40e0e013]
  4103e5:	or     al,0x71
  4103e7:	xchg   esi,eax
  4103e8:	leave  
  4103e9:	outs   dx,DWORD PTR ds:[esi]
  4103ea:	sub    eax,0xbdf17c7c
  4103ef:	pop    ebx
  4103f0:	add    eax,0x70b5452c
  4103f5:	imul   eax,DWORD PTR [edi+ebx*8],0x2e
  4103f9:	cmp    ebp,DWORD PTR [edx+0x75c9bc1f]
  4103ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410400:	push   cs
  410401:	and    al,0xb7
  410403:	je     0x41040d
  410405:	pop    ds
  410406:	dec    ecx
  410407:	in     eax,0xbb
  410409:	(bad)  
  41040b:	inc    eax
  41040c:	mov    dl,0x31
  41040e:	repnz addr16 sahf 
  410411:	imul   ch
  410413:	fwait
  410414:	adc    DWORD PTR [esi+ebx*8+0x5f],esp
  410418:	ror    BYTE PTR [esi],1
  41041a:	test   eax,0xf1fbed4e
  41041f:	cli    
  410420:	addr16 mov ebp,0xb39004db
  410426:	cli    
  410427:	jl     0x41048b
  410429:	push   eax
  41042a:	fdivrp st(3),st
  41042c:	sar    DWORD PTR ds:0xc5eb7745,1
  410432:	ins    DWORD PTR es:[edi],dx
  410433:	pop    ebp
  410434:	fs push ecx
  410436:	cdq    
  410437:	mov    ebx,esp
  410439:	xlat   BYTE PTR ds:[ebx]
  41043a:	test   BYTE PTR [esi+0x46f1f16],bl
  410440:	push   es
  410441:	out    0x10,al
  410443:	xchg   esp,eax
  410444:	ds xor ebp,esp
  410447:	add    ch,BYTE PTR ds:0xfddbefe9
  41044d:	pushf  
  41044e:	mov    ecx,0x1f5ab980
  410453:	pop    edx
  410454:	in     al,0x99
  410456:	pop    edi
  410457:	xchg   esp,eax
  410458:	jno    0x4104c7
  41045a:	out    dx,al
  41045b:	jno    0x4103ee
  41045d:	push   ds
  41045e:	(bad)  
  410460:	push   ds
  410461:	fistp  DWORD PTR [ebx]
  410463:	inc    ebx
  410464:	bound  ecx,QWORD PTR [eax]
  410466:	add    al,0x56
  410468:	js     0x4104a4
  41046a:	xor    dl,BYTE PTR [ebx]
  41046c:	push   esi
  41046d:	jo     0x4104c8
  41046f:	clc    
  410470:	gs call 0xc222:0x22c348ed
  410478:	inc    ebp
  410479:	in     eax,dx
  41047a:	shr    bh,cl
  41047c:	lods   eax,DWORD PTR ds:[esi]
  41047d:	into   
  41047e:	out    0x4b,al
  410480:	je     0x41045d
  410482:	xchg   ecx,eax
  410483:	shl    cl,cl
  410485:	(bad)  
  410486:	enter  0xf6b6,0xf6
  41048a:	mov    bl,0x1d
  41048c:	pop    eax
  41048d:	dec    esp
  41048e:	jnp    0x410496
  410490:	inc    ecx
  410491:	push   0xffffffa3
  410493:	sar    BYTE PTR [eax],1
  410495:	fisttp DWORD PTR [ebp+0x7f]
  410498:	out    0x24,eax
  41049a:	xchg   esp,eax
  41049b:	outs   dx,BYTE PTR ds:[esi]
  41049c:	sub    esi,DWORD PTR [ecx+eiz*1+0x7c]
  4104a0:	ficomp WORD PTR ds:0xb0c7b8fc
  4104a6:	add    al,0xa5
  4104a8:	addr16 xor ah,ah
  4104ab:	jle    0x4104d2
  4104ad:	xor    BYTE PTR [esp+ecx*2+0x6e],al
  4104b1:	(bad)  
  4104b2:	jp     0x410456
  4104b4:	mov    ebp,0xc5dc218e
  4104b9:	fisttp QWORD PTR [ebp-0x30]
  4104bc:	jg     0x41049f
  4104be:	clc    
  4104bf:	int    0xf2
  4104c1:	ss pop esi
  4104c3:	xchg   BYTE PTR [ebp-0x9],ah
  4104c6:	jbe    0x410469
  4104c8:	jmp    0x290a409c
  4104cd:	jle    0x410516
  4104cf:	loop   0x41048d
  4104d1:	jbe    0x41046c
  4104d3:	out    0x52,al
  4104d5:	les    ebp,FWORD PTR [ecx]
  4104d7:	jmp    0x184993d4
  4104dc:	lahf   
  4104dd:	fbld   TBYTE PTR [ebp+0x6d]
  4104e0:	jb     0x410553
  4104e2:	mov    ecx,DWORD PTR [eax-0x27]
  4104e5:	loopne 0x4104d2
  4104e7:	(bad)  
  4104e8:	xor    DWORD PTR [eax-0xa],ecx
  4104eb:	xlat   BYTE PTR ds:[ebx]
  4104ec:	es iret 
  4104ee:	(bad)  
  4104f0:	stc    
  4104f1:	popf   
  4104f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104f3:	test   al,0x9d
  4104f5:	test   BYTE PTR [eax+0x27],bl
  4104f8:	je     0x4104f3
  4104fa:	enter  0x8f36,0x35
  4104fe:	stos   DWORD PTR es:[edi],eax
  4104ff:	xchg   ebx,eax
  410500:	mov    bl,0x32
  410502:	mov    ds:0xc1c83b4e,eax
  410507:	add    al,0x27
  410509:	or     eax,DWORD PTR [esi-0xc9445b2]
  41050f:	cld    
  410510:	push   edi
  410511:	pop    ebx
  410512:	popa   
  410513:	(bad)  
  410514:	shl    DWORD PTR [ebp-0x7f],0xd6
  410518:	xor    eax,0xdec13e8e
  41051d:	in     al,dx
  41051e:	pop    ds
  41051f:	or     eax,0xb1388a64
  410524:	mov    ecx,0x2b8a5839
  410529:	jb     0x410557
  41052b:	sbb    al,dl
  41052d:	shl    ebp,0x7
  410530:	cmp    eax,0x46faf4ff
  410535:	or     al,0x34
  410537:	scas   eax,DWORD PTR es:[edi]
  410538:	push   edi
  410539:	xchg   esi,eax
  41053a:	loopne 0x410521
  41053c:	xlat   BYTE PTR ds:[ebx]
  41053d:	xchg   BYTE PTR [ebp-0x80],dh
  410540:	ud2    
  410542:	ret    
  410543:	(bad)  
  410544:	leave  
  410545:	mov    bh,0x97
  410547:	cli    
  410548:	ins    DWORD PTR es:[edi],dx
  410549:	arpl   WORD PTR [ecx],si
  41054b:	test   al,0x95
  41054d:	cmp    al,0xda
  41054f:	ds add eax,0x6d40b4fb
  410555:	sbb    al,0x96
  410557:	rol    DWORD PTR [eax],1
  410559:	es ins DWORD PTR es:[edi],dx
  41055b:	(bad)  
  41055c:	pop    esi
  41055d:	dec    ebx
  41055e:	xor    eax,0x5db9c4b3
  410563:	mov    ecx,0x5a3e16be
  410568:	mov    esp,0x3ddcc338
  41056d:	xchg   esp,eax
  41056e:	mov    ch,0x7a
  410570:	xor    al,ch
  410572:	ss aad 0xaa
  410575:	imul   edx,DWORD PTR [ebp+0x56be64da],0x26f3d2d8
  41057f:	xchg   edx,eax
  410580:	jno    0x4105b0
  410582:	jno    0x4105ea
  410584:	or     dl,BYTE PTR [ecx]
  410586:	mov    ecx,0x5fee4197
  41058b:	dec    eax
  41058c:	out    dx,eax
  41058d:	cdq    
  41058e:	inc    edx
  41058f:	cld    
  410590:	ss dec esp
  410592:	or     esp,DWORD PTR [edx]
  410594:	sbb    edx,DWORD PTR [edx-0x6ccf28a0]
  41059a:	jns    0x410580
  41059c:	mov    ds:0x5cc31891,eax
  4105a1:	js     0x4105dd
  4105a3:	ss inc ebx
  4105a5:	pop    edi
  4105a6:	ffreep st(1)
  4105a8:	pop    es
  4105a9:	pavgw  mm7,mm0
  4105ac:	add    eax,0xb3192515
  4105b1:	push   esi
  4105b2:	xchg   esi,eax
  4105b3:	popf   
  4105b4:	sub    al,0x45
  4105b6:	and    ch,BYTE PTR [esi+0xdb306db]
  4105bc:	fwait
  4105bd:	(bad)  
  4105be:	lea    esp,[edx+0x51a13bbc]
  4105c4:	push   edi
  4105c5:	lea    eax,[ecx+0x54cd00bb]
  4105cb:	mov    ds:0x5d1c1f2a,eax
  4105d0:	popf   
  4105d1:	enter  0xe01b,0xb2
  4105d5:	inc    ecx
  4105d6:	push   ss
  4105d7:	jp     0x410623
  4105d9:	and    BYTE PTR [edi-0x2ec328a7],ah
  4105df:	ds lahf 
  4105e1:	dec    eax
  4105e2:	xchg   edi,eax
  4105e3:	ins    BYTE PTR es:[edi],dx
  4105e4:	shl    BYTE PTR [edx-0x61],1
  4105e7:	into   
  4105e8:	push   ebp
  4105e9:	sub    al,0xa8
  4105eb:	shl    BYTE PTR [edi-0x29],0x88
  4105ef:	add    eax,0xa2fb4343
  4105f4:	sub    DWORD PTR [edi-0x16315664],edi
  4105fa:	lods   al,BYTE PTR ds:[esi]
  4105fb:	(bad)  [edx+0x609257]
  410601:	mov    esi,0x62506753
  410606:	xor    BYTE PTR [edi+0xe],0xea
  41060a:	mov    eax,fs
  41060c:	xchg   ebp,eax
  41060d:	loopne 0x4105b7
  41060f:	inc    ebx
  410610:	push   esp
  410611:	mov    dl,0x8d
  410613:	pop    es
  410614:	and    ah,dl
  410616:	push   edi
  410617:	ds mov ebx,0x7e1ec5ad
  41061d:	push   esi
  41061e:	lahf   
  41061f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410620:	ins    BYTE PTR es:[edi],dx
  410621:	fiadd  DWORD PTR [ebx+0x3d]
  410624:	arpl   WORD PTR [edi],ax
  410626:	and    WORD PTR [eax],cx
  410629:	inc    esi
  41062a:	cld    
  41062b:	sahf   
  41062c:	pop    esi
  41062d:	div    BYTE PTR [eax+0x1329716]
  410633:	push   ebx
  410634:	cld    
  410635:	sbb    eax,0x894a9220
  41063a:	adc    eax,0x64532977
  41063f:	retf   
  410640:	mov    bl,0x46
  410642:	rcr    BYTE PTR [eax+0x18bd6dcc],cl
  410648:	hlt    
  410649:	ds inc ecx
  41064b:	repz test BYTE PTR [ebp+0x6ad9c954],bh
  410652:	sbb    eax,0x3df32fab
  410657:	out    0xc5,al
  410659:	je     0x410643
  41065b:	ret    
  41065c:	out    dx,eax
  41065d:	das    
  41065e:	fsubr  QWORD PTR [esi+0x18fbc4c6]
  410664:	and    ebp,DWORD PTR [edi+0x3c3c62fc]
  41066a:	and    esi,DWORD PTR [eax+0x564ef756]
  410670:	rcr    DWORD PTR [eax],0x82
  410673:	xchg   edi,eax
  410674:	int3   
  410675:	push   ecx
  410676:	dec    edx
  410677:	push   0xffffffd3
  410679:	not    BYTE PTR [ecx+0x4b873e26]
  41067f:	adc    al,0xb5
  410681:	inc    edx
  410682:	jecxz  0x41069d
  410684:	data16 cmc 
  410686:	mov    edi,0x16af98af
  41068b:	pop    edx
  41068c:	push   edx
  41068d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41068e:	(bad)  
  41068f:	hlt    
  410690:	xchg   ebx,eax
  410691:	xor    BYTE PTR [edx],0x0
  410694:	(bad)  
  410695:	xchg   edx,eax
  410696:	xor    BYTE PTR [esi],al
  410698:	retf   0xd6e1
  41069b:	cmp    DWORD PTR [edi+esi*1],edi
  41069e:	stc    
  41069f:	test   eax,0x36c0c599
  4106a4:	xor    DWORD PTR [ebx-0x79],0x7a0dc22d
  4106ab:	js     0x410659
  4106ad:	xor    BYTE PTR [edx+0x7ccc0fc4],bh
  4106b3:	dec    ebx
  4106b4:	hlt    
  4106b5:	sbb    eax,0x66bc6e1d
  4106ba:	mov    dh,0x83
  4106bc:	inc    esi
  4106bd:	inc    eax
  4106be:	mov    eax,DWORD PTR [edx+0x54]
  4106c1:	mov    bl,0x54
  4106c3:	push   esi
  4106c4:	mov    dl,0xb0
  4106c6:	jae    0x4106ef
  4106c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106c9:	fbstp  TBYTE PTR [ebx]
  4106cb:	aad    0x25
  4106cd:	loopne 0x4106bd
  4106cf:	sbb    BYTE PTR [ecx-0x29],ch
  4106d2:	pusha  
  4106d3:	mov    ecx,0xba8fa563
  4106d8:	mov    ds:0xc20b95ca,al
  4106dd:	cmp    edi,DWORD PTR [esi+0x7c]
  4106e0:	aas    
  4106e1:	push   ebx
  4106e2:	dec    edx
  4106e3:	retf   
  4106e4:	fsub   QWORD PTR [edx-0x75]
  4106e7:	mov    esi,0x96b852e2
  4106ec:	call   0x8bd3:0x406593a6
  4106f3:	push   ebp
  4106f4:	sub    eax,0x50ec7247
  4106f9:	sbb    al,BYTE PTR [ebp-0x3c]
  4106fc:	loop   0x410709
  4106fe:	jl     0x4106a5
  410700:	jo     0x41072b
  410702:	xchg   edx,eax
  410703:	mov    eax,0x991a7a82
  410708:	push   cs
  410709:	and    edi,DWORD PTR [edi+edi*8-0x48]
  41070d:	jmp    0xfb51afe5
  410712:	es and eax,0x5a6c3f3d
  410718:	inc    BYTE PTR [ecx+0x11]
  41071b:	test   esp,esi
  41071d:	jmp    0xef45:0x9a735a8a
  410724:	inc    edx
  410725:	push   esp
  410726:	inc    esp
  410727:	push   eax
  410728:	xchg   DWORD PTR [eax+edx*2],ebx
  41072b:	push   0x5c
  41072d:	(bad)  
  41072e:	in     al,dx
  41072f:	adc    DWORD PTR [edi-0x1],esp
  410732:	and    al,dh
  410734:	loopne 0x41071e
  410736:	mov    ds:0xde62efc7,eax
  41073b:	iret   
  41073c:	fcmovnb st,st(3)
  41073e:	shl    BYTE PTR [ebp+0x3c],1
  410741:	sbb    eax,0x9da337c5
  410746:	mov    WORD PTR [eax-0x3789de8e],?
  41074c:	or     BYTE PTR [eax-0x5],0xdd
  410750:	ja     0x410712
  410752:	inc    esp
  410753:	or     cl,BYTE PTR [esi]
  410755:	dec    ecx
  410756:	pop    ds
  410757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410758:	enter  0x608c,0xbe
  41075c:	js     0x41076b
  41075e:	test   al,0x73
  410760:	cli    
  410761:	jp     0x410734
  410763:	mov    esp,0x148db38d
  410768:	ins    BYTE PTR es:[edi],dx
  410769:	in     al,dx
  41076a:	sbb    BYTE PTR [esi],0x9d
  41076d:	mov    DWORD PTR [edi+0xf6b0770],ecx
  410773:	push   ds
  410774:	mov    DWORD PTR [ecx],edi
  410776:	stc    
  410777:	(bad)  
  410778:	(bad)
  41077b:	sub    DWORD PTR [edx],esp
  41077d:	(bad)  
  41077f:	mov    dl,ch
  410781:	xchg   ebp,eax
  410782:	enter  0xde78,0x9b
  410786:	push   ebp
  410787:	jb     0x410777
  410789:	je     0x41073a
  41078b:	sahf   
  41078c:	(bad)  
  41078d:	ficom  DWORD PTR [edi-0x5c]
  410790:	inc    esi
  410791:	ja     0x4107a7
  410793:	push   edi
  410794:	in     al,dx
  410795:	ror    BYTE PTR cs:[edi+0x6c],1
  410799:	aaa    
  41079a:	lods   al,BYTE PTR ds:[esi]
  41079b:	dec    esp
  41079c:	nop
  41079d:	add    al,0xb1
  41079f:	xchg   edi,eax
  4107a0:	sar    BYTE PTR [ecx+edi*8],cl
  4107a3:	lods   al,BYTE PTR ds:[esi]
  4107a4:	icebp  
  4107a5:	add    bl,0x73
  4107a8:	cdq    
  4107a9:	lea    eax,[ecx+0x5ddbcedf]
  4107af:	stc    
  4107b0:	scas   eax,DWORD PTR es:[edi]
  4107b1:	jno    0x41073a
  4107b3:	inc    eax
  4107b4:	mov    al,ds:0xd5695f8e
  4107b9:	mov    BYTE PTR [edx-0x5c],ch
  4107bc:	cmc    
  4107bd:	int3   
  4107be:	push   esi
  4107bf:	jns    0x410807
  4107c1:	outs   dx,BYTE PTR ds:[esi]
  4107c2:	hlt    
  4107c3:	hlt    
  4107c4:	pushf  
  4107c5:	push   0xfec60a5b
  4107ca:	cmp    ah,cl
  4107cc:	mov    al,cs:0xfe8ebc71
  4107d2:	leave  
  4107d3:	inc    edi
  4107d4:	xor    dh,BYTE PTR [ebp+0x53]
  4107d7:	test   BYTE PTR [edx+0x791e6ca4],bl
  4107dd:	mov    esi,0x44dad26c
  4107e2:	mov    al,0x9a
  4107e4:	cmp    BYTE PTR [esp+edi*4],bh
  4107e7:	xor    DWORD PTR ds:0xf08a8278,0xb62fa4d5
  4107f1:	pop    edx
  4107f2:	and    BYTE PTR [ebx+0x2a],dl
  4107f5:	sub    edx,DWORD PTR ds:0x2a9a2677
  4107fb:	outs   dx,DWORD PTR ds:[esi]
  4107fc:	sbb    DWORD PTR [esi+0x35d0e466],esp
  410802:	xchg   ebx,eax
  410803:	inc    edi
  410804:	shl    BYTE PTR [edx],0x6f
  410807:	inc    ecx
  410808:	add    bl,BYTE PTR [esi]
  41080a:	push   eax
  41080b:	(bad)  
  41080d:	dec    esi
  41080e:	mov    esi,0xe0ac1a61
  410813:	stc    
  410814:	add    esi,DWORD PTR [edi+0x598a6375]
  41081a:	xchg   dl,bh
  41081c:	jl     0x4107c8
  41081e:	dec    esp
  41081f:	xor    al,0xa4
  410821:	add    DWORD PTR [esi+esi*2+0x44],edi
  410825:	adc    dl,BYTE PTR [ebx-0x5f99b989]
  41082b:	jg     0x41080e
  41082d:	sub    ah,dh
  41082f:	(bad)  
  410830:	or     al,0x60
  410832:	cwde   
  410833:	mov    BYTE PTR [edx-0x73b327e1],cl
  410839:	xor    DWORD PTR [ecx],ebx
  41083b:	aam    0x35
  41083d:	bound  edi,QWORD PTR [ecx+0x21]
  410840:	pop    edx
  410841:	xchg   esi,eax
  410842:	push   cs
  410843:	arpl   dx,dx
  410845:	cmp    eax,0xcdf02a97
  41084a:	arpl   WORD PTR [ebx],cx
  41084c:	sub    al,0x19
  41084e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41084f:	pop    ss
  410850:	fadd   QWORD PTR [edx+0x7a]
  410853:	jl     0x4107ec
  410855:	pop    ss
  410856:	ret    0xd2e4
  410859:	pop    esp
  41085a:	lds    edx,FWORD PTR [ecx-0x385697e2]
  410860:	sub    al,0x94
  410862:	pop    ds
  410863:	rcr    BYTE PTR [edi],0xd3
  410866:	add    edi,0x521e008c
  41086c:	enter  0x49a2,0x63
  410870:	test   DWORD PTR [edi-0x54],eax
  410873:	out    0xf1,eax
  410875:	dec    eax
  410876:	and    edi,DWORD PTR [edi]
  410878:	rcl    DWORD PTR [esi-0x2dca37a],1
  41087e:	sti    
  41087f:	stos   BYTE PTR es:[edi],al
  410880:	pushf  
  410881:	dec    edi
  410882:	mov    eax,ds:0x2eaffca9
  410887:	cmp    BYTE PTR [ebx],ch
  410889:	jmp    0xea82:0xbc1be61e
  410890:	lea    ecx,[ebx+0x40]
  410893:	push   edi
  410894:	mov    ch,0xc5
  410896:	inc    edi
  410897:	ret    
  410898:	imul   ecx,DWORD PTR [edi],0x44
  41089b:	jae    0x4108f8
  41089d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41089e:	ror    BYTE PTR [ecx-0x1e],0x7b
  4108a2:	test   al,0x3f
  4108a4:	pop    ecx
  4108a5:	je     0x410885
  4108a7:	pushf  
  4108a8:	gs js  0x4108e0
  4108ab:	mov    ds:0x3bc6e861,al
  4108b0:	inc    ecx
  4108b1:	jecxz  0x4108ca
  4108b3:	data16 jg 0x410853
  4108b6:	sbb    bh,BYTE PTR [ebx]
  4108b8:	push   edi
  4108b9:	fist   WORD PTR ds:0xf2b9b483
  4108bf:	repnz fidivr WORD PTR [esp+eax*1]
  4108c3:	push   cs
  4108c4:	push   ds
  4108c5:	aam    0x4e
  4108c7:	loope  0x410945
  4108c9:	jo     0x410861
  4108cb:	push   ss
  4108cc:	bound  ebp,QWORD PTR [esi+0x7c]
  4108cf:	inc    eax
  4108d0:	mov    edi,0x26c7f761
  4108d5:	push   0xffffffc3
  4108d7:	jno    0x410924
  4108d9:	out    0x80,eax
  4108db:	call   0x8399:0x77f6a65c
  4108e2:	add    BYTE PTR ds:0xba7450b,ah
  4108e8:	mov    WORD PTR [ebx],cs
  4108ea:	xchg   edi,eax
  4108eb:	jmp    0x2379a48
  4108f0:	add    al,0xd
  4108f2:	mov    bl,0xc9
  4108f4:	or     bh,ah
  4108f6:	jge    0x410976
  4108f8:	not    BYTE PTR [ebx+0x5d]
  4108fb:	ficom  WORD PTR [ebp+eiz*2-0x5f24c23d]
  410902:	cdq    
  410903:	add    BYTE PTR [ecx],al
  410905:	push   es
  410906:	or     BYTE PTR [ebx+0x6a],0x4a
  41090a:	xlat   BYTE PTR ds:[ebx]
  41090b:	pop    ebp
  41090c:	or     esi,0xd07b2fe6
  410912:	(bad)  
  410913:	fisttp DWORD PTR [eax+0x33]
  410916:	je     0x410915
  410918:	std    
  410919:	sub    al,0xa4
  41091b:	jmp    FWORD PTR [edi-0x4ed74a10]
  410921:	ss dec edx
  410923:	jmp    0x53666291
  410928:	mov    dh,0x3e
  41092a:	inc    esi
  41092b:	jp     0x41099c
  41092d:	clc    
  41092e:	in     eax,0x89
  410930:	inc    ebx
  410931:	enter  0xdb16,0x19
  410935:	sub    ch,BYTE PTR [ecx]
  410937:	xchg   ebp,eax
  410938:	or     ebx,DWORD PTR [esi-0x44]
  41093b:	xlat   BYTE PTR ds:[ebx]
  41093c:	mov    ebp,edx
  41093e:	test   al,0x1f
  410940:	xchg   edx,eax
  410941:	fisubr DWORD PTR [esi]
  410943:	les    ebx,FWORD PTR [ecx+0x29c50e77]
  410949:	fstp   st(3)
  41094b:	iret   
  41094c:	(bad)  
  41094e:	sbb    al,0x49
  410950:	scas   al,BYTE PTR es:[edi]
  410951:	xor    DWORD PTR [esi+0x49c255c2],ebx
  410957:	pushf  
  410958:	adc    esp,esp
  41095a:	mov    es,ebp
  41095c:	pusha  
  41095d:	shl    DWORD PTR [edx+0x4952a4b2],1
  410963:	out    dx,al
  410964:	sbb    eax,0xb4cd83bc
  410969:	and    al,0x37
  41096b:	adc    al,0x93
  41096d:	pop    eax
  41096e:	mov    fs,WORD PTR [edi+0x215ea18e]
  410974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410975:	xchg   DWORD PTR [eax],esi
  410977:	not    DWORD PTR [eax+edx*8+0x16]
  41097b:	stos   BYTE PTR es:[edi],al
  41097c:	cmp    al,0x91
  41097e:	push   ds
  41097f:	dec    ecx
  410980:	outs   dx,DWORD PTR es:[esi]
  410982:	pop    esi
  410983:	mov    al,ds:0xfe330003
  410988:	xchg   BYTE PTR [ebx-0x45],dh
  41098b:	outs   dx,BYTE PTR ds:[esi]
  41098c:	sbb    al,0xc7
  41098e:	dec    eax
  41098f:	outs   dx,DWORD PTR ds:[esi]
  410990:	mov    al,dl
  410992:	cmp    ah,BYTE PTR [esi]
  410994:	add    ecx,ebx
  410996:	dec    eax
  410997:	and    eax,0x43369630
  41099c:	ret    
  41099d:	imul   ebx,eax,0xf077e238
  4109a3:	sti    
  4109a4:	pop    edx
  4109a5:	retf   
  4109a6:	sub    DWORD PTR [edx-0x5603cb71],0xffffffde
  4109ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ae:	std    
  4109af:	or     ebp,DWORD PTR [ebx-0x598385e0]
  4109b5:	mov    cl,0xbc
  4109b7:	inc    eax
  4109b8:	ret    0x6e18
  4109bb:	inc    edi
  4109bc:	pop    ecx
  4109bd:	xchg   DWORD PTR ds:0x49a58478,eax
  4109c3:	mov    al,ds:0x9cfd9bf
  4109c8:	nop
  4109c9:	push   esi
  4109ca:	call   0x3dad0f1d
  4109cf:	cmc    
  4109d0:	push   0x88b8bb11
  4109d5:	and    eax,0x27ce5676
  4109da:	cld    
  4109db:	icebp  
  4109dc:	gs cwde 
  4109de:	or     eax,0xa5e41e3a
  4109e3:	test   DWORD PTR [ecx+0x2cd3c6e6],esp
  4109e9:	shl    DWORD PTR [esi],0xf0
  4109ec:	sub    DWORD PTR [edi],ecx
  4109ee:	or     edx,DWORD PTR [ebx+0x1]
  4109f1:	nop
  4109f2:	js     0x410a65
  4109f4:	das    
  4109f5:	and    eax,0x6e52cbfb
  4109fa:	xor    eax,0x248288fd
  4109ff:	test   BYTE PTR ds:0x9d5426d,ch
  410a05:	gs stos DWORD PTR es:[edi],eax
  410a07:	arpl   WORD PTR [ecx+0x4a],bx
  410a0a:	rcr    BYTE PTR [ecx],1
  410a0c:	jge    0x4109f3
  410a0e:	xchg   edx,eax
  410a0f:	add    eax,0xf8250ba3
  410a14:	mov    dl,BYTE PTR [edx-0x24a6e2e4]
  410a1a:	popf   
  410a1b:	std    
  410a1c:	and    BYTE PTR [eax-0x71],bl
  410a1f:	cmc    
  410a20:	add    DWORD PTR [ebp-0x34],esp
  410a23:	repz mov ds:0x821eb4f5,eax
  410a29:	sub    cl,dh
  410a2b:	mov    ch,0xef
  410a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a2e:	ror    DWORD PTR ds:0x7ff13747,0xb6
  410a35:	adc    al,0x40
  410a37:	mov    bl,BYTE PTR [edi-0x59]
  410a3a:	(bad)  
  410a3b:	cs scas eax,DWORD PTR es:[edi]
  410a3d:	fnstenv [edi+0x9dad1a2]
  410a43:	nop
  410a44:	jbe    0x410aab
  410a46:	push   ecx
  410a47:	mov    eax,ebp
  410a49:	mov    ebx,0xa4222e14
  410a4e:	imul   edx,ebp,0xffffffc5
  410a51:	idiv   DWORD PTR [esi+0x718e1311]
  410a57:	int3   
  410a58:	jp     0x410a98
  410a5a:	cmp    DWORD PTR [edi+0x69],eax
  410a5d:	jle    0x410aaa
  410a5f:	cmp    BYTE PTR [eax-0x52],bl
  410a62:	jnp    0x410a3a
  410a64:	in     eax,0x80
  410a66:	loope  0x410a1a
  410a68:	pop    ebp
  410a69:	xchg   esp,eax
  410a6a:	out    0x6a,eax
  410a6c:	or     DWORD PTR [eax+0x3d3076ec],ebx
  410a72:	aas    
  410a73:	push   ebx
  410a74:	jae    0x4109fc
  410a76:	adc    esp,DWORD PTR [esi]
  410a78:	jle    0x410ad8
  410a7a:	inc    BYTE PTR ds:0xd695a594
  410a80:	int3   
  410a81:	xchg   esi,eax
  410a82:	fldenv [edx]
  410a84:	mov    edi,0xd4e363d6
  410a89:	gs enter 0xa488,0x23
  410a8e:	xchg   esp,eax
  410a8f:	add    BYTE PTR [edx+eax*4-0x7f],bl
  410a93:	or     ecx,DWORD PTR [ebp+0x12]
  410a96:	(bad)
  410a99:	es sahf 
  410a9b:	xor    eax,0x3fb7772e
  410aa0:	dec    ch
  410aa2:	loop   0x410add
  410aa4:	adc    esp,ebx
  410aa6:	je     0x410af7
  410aa8:	(bad)  
  410aa9:	int    0xc2
  410aab:	sbb    ecx,esi
  410aad:	enter  0xd9db,0x96
  410ab1:	enter  0x172a,0x5a
  410ab5:	pop    esp
  410ab6:	in     eax,0x91
  410ab8:	pop    esi
  410ab9:	cli    
  410aba:	sub    BYTE PTR [ebx-0x400ca80a],dh
  410ac0:	(bad)  
  410ac1:	xchg   ebx,eax
  410ac2:	jne    0x410a68
  410ac4:	(bad)  
  410ac5:	mov    cl,0x35
  410ac7:	inc    eax
  410ac8:	pop    edx
  410ac9:	aas    
  410aca:	mov    al,0xa7
  410acc:	data16 js 0x410b1a
  410acf:	repnz dec ebx
  410ad1:	mov    db2,esp
  410ad4:	ins    DWORD PTR es:[edi],dx
  410ad5:	jmp    0x9c1c5644
  410ada:	sbb    dl,cl
  410adc:	inc    edi
  410add:	mov    DWORD PTR [esi+0x7665673f],eax
  410ae3:	and    BYTE PTR [eax-0x4a],ah
  410ae6:	rcr    BYTE PTR [edi+0x312f7de9],1
  410aec:	sti    
  410aed:	outs   dx,DWORD PTR ds:[esi]
  410aee:	lahf   
  410aef:	dec    ecx
  410af0:	pop    esp
  410af1:	retf   0xcee6
  410af4:	add    DWORD PTR [eax*2+0x63560e6d],edi
  410afb:	call   0x157df7d6
  410b00:	(bad)  
  410b02:	mov    DWORD PTR [eax],edi
  410b04:	sbb    DWORD PTR [edi],edx
  410b06:	pop    esp
  410b07:	sti    
  410b08:	sar    DWORD PTR [edx+0x2e],0x51
  410b0c:	mov    gs,edx
  410b0e:	sar    DWORD PTR [edi],cl
  410b10:	mov    bl,0xfa
  410b12:	jg     0x410b72
  410b14:	repnz xchg edi,eax
  410b16:	mul    DWORD PTR [edx]
  410b18:	ds xor eax,0x47e2f877
  410b1e:	shl    DWORD PTR [esi-0x40ad8620],0x2d
  410b25:	fisub  WORD PTR [esp+edi*2+0x482f4622]
  410b2c:	pop    edi
  410b2d:	out    dx,al
  410b2e:	ss hlt 
  410b30:	mov    WORD PTR [eax+0x3a],?
  410b33:	rol    DWORD PTR [ebx-0x64],1
  410b36:	or     eax,DWORD PTR [ecx-0x6857f568]
  410b3c:	(bad)  
  410b3d:	stc    
  410b3e:	ret    
  410b3f:	push   esp
  410b40:	lods   al,BYTE PTR ds:[esi]
  410b41:	out    0x27,al
  410b43:	xchg   ecx,eax
  410b44:	sbb    ebp,edx
  410b46:	dec    esp
  410b47:	inc    DWORD PTR [esi+eiz*2-0x2b22ad2c]
  410b4e:	inc    ebx
  410b4f:	aam    0x64
  410b51:	dec    DWORD PTR es:[esp+eiz*8+0x68171a60]
  410b59:	jo     0x410b62
  410b5b:	sub    DWORD PTR [ebp+0x5a597bcd],esp
  410b61:	dec    ebx
  410b62:	or     eax,0x11e50ee5
  410b67:	jge    0x410bdb
  410b69:	sbb    DWORD PTR [ebp+0x7c],edx
  410b6c:	pop    ds
  410b6d:	ds in  al,0xd7
  410b70:	jnp    0x410b41
  410b72:	inc    esi
  410b73:	cmp    esi,DWORD PTR [edx-0x3e]
  410b76:	xor    eax,0x9722c3fd
  410b7b:	sub    DWORD PTR ds:[eax-0x2c],0x1fc65d14
  410b83:	inc    ebp
  410b84:	stc    
  410b85:	scas   eax,DWORD PTR es:[edi]
  410b86:	dec    ebx
  410b87:	dec    eax
  410b88:	adc    BYTE PTR [ebx],0xc5
  410b8b:	lea    eax,[edx-0x55]
  410b8e:	mov    dl,0xe2
  410b90:	and    dl,BYTE PTR [eax+eax*4]
  410b93:	cmp    BYTE PTR [edi],ah
  410b95:	dec    edi
  410b96:	aaa    
  410b97:	or     DWORD PTR [ecx],ebx
  410b99:	add    DWORD PTR [ebx+eiz*2],ebp
  410b9c:	dec    edi
  410b9d:	xor    DWORD PTR [edi+0x515b4821],edx
  410ba3:	scas   al,BYTE PTR es:[edi]
  410ba4:	fimul  WORD PTR [ebx-0x43535eb]
  410baa:	or     dh,BYTE PTR [edx+0x15d3e03e]
  410bb0:	(bad)  
  410bb2:	rol    DWORD PTR [ecx+edi*4],0x4e
  410bb6:	cwde   
  410bb7:	xor    DWORD PTR [ecx+0x33],edi
  410bba:	xchg   ecx,eax
  410bbb:	fcom   DWORD PTR [ebx]
  410bbd:	scas   eax,DWORD PTR es:[edi]
  410bbe:	aaa    
  410bbf:	jp     0x410bdf
  410bc1:	jp     0x410c10
  410bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bc4:	mov    ebx,0x661ba894
  410bc9:	and    dl,ah
  410bcb:	adc    dl,BYTE PTR [esi]
  410bcd:	inc    eax
  410bce:	or     esp,0x64
  410bd1:	retf   
  410bd2:	cmp    ah,BYTE PTR [edi-0x8]
  410bd5:	xchg   esp,eax
  410bd6:	call   0x231f:0xc164b74d
  410bdd:	ds scas al,BYTE PTR es:[edi]
  410bdf:	mov    esi,0x63a873d8
  410be4:	sbb    BYTE PTR [eax-0x6fbdb6c6],dl
  410bea:	in     eax,0xb4
  410bec:	fidivr WORD PTR [eax+0x71]
  410bef:	dec    ebp
  410bf0:	pop    edx
  410bf1:	push   ss
  410bf2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  410bf4:	mov    ch,0xcb
  410bf6:	add    DWORD PTR [eax-0x7ecaf3cd],edx
  410bfc:	cmp    al,0xc5
  410bfe:	fcomi  st,st(6)
  410c00:	sbb    eax,0xcf8f3b99
  410c05:	ret    0x93f2
  410c08:	ins    BYTE PTR es:[edi],dx
  410c09:	test   BYTE PTR [ebx-0x3b1e8b62],bh
  410c0f:	arpl   WORD PTR ds:0x8f890df3,di
  410c15:	pop    edx
  410c16:	push   es
  410c17:	ja     0x410c96
  410c19:	call   0x99b3:0x34b68d0d
  410c20:	sbb    eax,0xdbb0395e
  410c25:	fistp  WORD PTR [ebp-0x580382e0]
  410c2b:	xor    edx,ebx
  410c2d:	lds    ebp,FWORD PTR [eax+edi*2]
  410c30:	xchg   ebx,eax
  410c31:	mov    eax,DWORD PTR cs:[edi-0x5339820b]
  410c38:	mov    ch,0xd5
  410c3a:	xchg   esi,eax
  410c3b:	lock test ch,al
  410c3e:	enter  0xd829,0x38
  410c42:	cs jbe 0x410bf8
  410c45:	mov    DWORD PTR [edx+0x46bb2635],edx
  410c4b:	add    ch,BYTE PTR [eax-0x3c]
  410c4e:	fadd   st,st(0)
  410c50:	inc    ebp
  410c51:	ficom  DWORD PTR [ebx+ebp*1-0x26400608]
  410c58:	shl    DWORD PTR ds:0x120b2ded,1
  410c5e:	xor    dl,BYTE PTR [edx]
  410c60:	mov    al,ds:0xc1c4be1c
  410c65:	dec    eax
  410c66:	pop    edi
  410c67:	cmp    BYTE PTR [ecx-0x701a727f],cl
  410c6d:	das    
  410c6e:	push   0xa2cff214
  410c73:	vmread DWORD PTR [esp+ecx*4],edx
  410c77:	lock jecxz 0x410c5f
  410c7a:	fcom   st(2)
  410c7c:	test   al,0x4a
  410c7e:	jnp    0x410c95
  410c80:	sbb    bh,BYTE PTR [ecx-0x7a]
  410c83:	jle    0x410c95
  410c85:	(bad)  
  410c86:	jnp    0x410ce7
  410c88:	dec    edi
  410c89:	ss or  esp,edi
  410c8c:	pusha  
  410c8d:	mov    bl,0xa6
  410c8f:	je     0x410d03
  410c91:	shl    BYTE PTR [eax],1
  410c93:	adc    ebx,ecx
  410c95:	iret   
  410c96:	lods   eax,DWORD PTR ds:[esi]
  410c97:	dec    ecx
  410c98:	pop    eax
  410c99:	push   eax
  410c9a:	dec    edi
  410c9b:	xchg   BYTE PTR [esi-0x38f19e22],dl
  410ca1:	xchg   ebx,eax
  410ca2:	mov    DWORD PTR [edi+0x5d],eax
  410ca5:	mov    cl,0x1f
  410ca7:	in     eax,dx
  410ca8:	push   ebx
  410ca9:	pop    ebx
  410caa:	cmp    BYTE PTR [ebx+0x2bd74923],ah
  410cb0:	js     0x410c70
  410cb2:	(bad)  [eax-0x65b097f5]
  410cb8:	ror    BYTE PTR [eax],1
  410cba:	inc    ecx
  410cbb:	daa    
  410cbc:	xor    esp,esp
  410cbe:	lahf   
  410cbf:	xchg   edi,eax
  410cc0:	retf   
  410cc1:	jg     0x410cb0
  410cc3:	mul    ecx
  410cc5:	add    eax,0x426d8952
  410cca:	bnd call 0x90c6c0d1
  410cd0:	loop   0x410cca
  410cd2:	into   
  410cd3:	ret    
  410cd4:	repz arpl WORD PTR [eax],di
  410cd7:	or     dh,ch
  410cd9:	jmp    0xe88d:0xabeb5b71
  410ce0:	test   al,0xc9
  410ce2:	pop    ebx
  410ce3:	fwait
  410ce4:	jno    0x410d06
  410ce6:	ins    DWORD PTR es:[edi],dx
  410ce7:	cmp    BYTE PTR [edi+0x6d],dl
  410cea:	and    DWORD PTR [esi-0x39cc6e9f],0x4
  410cf1:	gs out dx,al
  410cf3:	push   cs
  410cf4:	mov    ?,edi
  410cf6:	fidivr WORD PTR [eax+ebx*1-0x1d386fcd]
  410cfd:	push   ebx
  410cfe:	sbb    eax,0xa61ac078
  410d03:	sbb    esi,DWORD PTR ds:0x78bcd937
  410d09:	shr    DWORD PTR [eax-0x7f],cl
  410d0c:	pop    ebx
  410d0d:	fimul  WORD PTR [edi+0x71]
  410d10:	dec    ecx
  410d11:	clc    
  410d12:	pop    esi
  410d13:	test   eax,0xaae6e485
  410d18:	jge    0x410ca9
  410d1a:	or     eax,0xd2c553c5
  410d1f:	lea    ecx,[edx]
  410d21:	sub    al,0xe9
  410d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d24:	mov    ah,0xf1
  410d26:	cli    
  410d27:	ret    0x9e72
  410d2a:	and    esp,DWORD PTR [eax]
  410d2c:	fwait
  410d2d:	out    dx,al
  410d2e:	outs   dx,BYTE PTR ds:[esi]
  410d2f:	cmp    al,dl
  410d31:	(bad)  
  410d32:	std    
  410d33:	sbb    edi,esi
  410d35:	jne    0x410db2
  410d37:	inc    ecx
  410d38:	cwde   
  410d39:	and    DWORD PTR [edx-0x557ec8ce],esp
  410d3f:	dec    esp
  410d40:	addr16 cs jno 0x410d6a
  410d44:	inc    esp
  410d45:	jo     0x410ce5
  410d47:	cmp    cl,cl
  410d49:	ret    
  410d4a:	mov    DWORD PTR [ebx+edx*8],esp
  410d4d:	stos   DWORD PTR es:[edi],eax
  410d4e:	sti    
  410d4f:	addr16 jbe 0x410d87
  410d52:	jmp    0x410d5b
  410d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d55:	pop    ecx
  410d56:	adc    DWORD PTR [esi-0x768d6567],ecx
  410d5c:	clc    
  410d5d:	fadd   st(2),st
  410d5f:	lods   eax,DWORD PTR ds:[esi]
  410d60:	sub    DWORD PTR [ecx+0x283c654f],ecx
  410d66:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  410d68:	adc    BYTE PTR ds:0x348d1b82,cl
  410d6e:	xchg   esp,eax
  410d6f:	imul   esp
  410d71:	outs   dx,BYTE PTR ds:[esi]
  410d72:	xlat   BYTE PTR ds:[ebx]
  410d73:	mov    ecx,0xa8026e1f
  410d78:	xchg   esi,eax
  410d79:	pop    ebx
  410d7a:	xchg   edx,eax
  410d7b:	mov    edi,0xb0b027d
  410d80:	dec    ecx
  410d81:	repz mov esi,0xe7354954
  410d87:	ins    DWORD PTR es:[edi],dx
  410d88:	jns    0x410dda
  410d8a:	or     al,0x28
  410d8c:	xchg   ecx,eax
  410d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d8e:	in     al,0x7
  410d90:	(bad)  
  410d91:	clc    
  410d92:	(bad)  
  410d93:	and    eax,0xb55a31d8
  410d98:	fneni(8087 only) 
  410d9a:	push   0xdecac910
  410d9f:	aaa    
  410da0:	out    0xae,eax
  410da2:	in     al,0x40
  410da4:	dec    eax
  410da5:	push   DWORD PTR [eax-0x96a24d2]
  410dab:	(bad)
  410dae:	xor    ebp,ebp
  410db0:	(bad)  
  410db1:	idiv   BYTE PTR [edi-0xe99fec]
  410db7:	(bad)  
  410db8:	and    ch,BYTE PTR [ebx]
  410dba:	and    BYTE PTR [eax-0x78],bh
  410dbd:	(bad)  
  410dbe:	mov    edx,cs
  410dc0:	push   ebp
  410dc1:	cmp    ch,BYTE PTR [ebx-0x69]
  410dc4:	pushf  
  410dc5:	ins    DWORD PTR es:[edi],dx
  410dc6:	jmp    0xb5263e37
  410dcb:	jbe    0x410d98
  410dcd:	scas   al,BYTE PTR es:[edi]
  410dce:	or     ah,dl
  410dd0:	fwait
  410dd1:	mov    BYTE PTR [eax-0x26],cl
  410dd4:	(bad)  
  410dd5:	cmp    DWORD PTR [edi],ebp
  410dd7:	push   0x6c
  410dd9:	dec    ecx
  410dda:	outs   dx,BYTE PTR ds:[esi]
  410ddb:	xchg   ebp,eax
  410ddc:	and    edi,DWORD PTR [ecx*8+0x4adb5d50]
  410de3:	xchg   DWORD PTR [ecx],ebx
  410de5:	les    ebp,FWORD PTR [edx-0x8c31c46]
  410deb:	aam    0x82
  410ded:	sub    bl,BYTE PTR [ecx-0x2ade0f7e]
  410df3:	ins    BYTE PTR es:[edi],dx
  410df4:	stos   DWORD PTR es:[edi],eax
  410df5:	push   es
  410df6:	retf   
  410df7:	push   edx
  410df8:	les    esi,FWORD PTR [ebp+0x732c221b]
  410dfe:	in     eax,dx
  410dff:	call   0x3546:0x31b46e31
  410e06:	mov    dl,0x29
  410e08:	lods   al,BYTE PTR ss:[esi]
  410e0a:	pop    ebp
  410e0b:	shr    BYTE PTR [ecx],0xae
  410e0e:	push   0x3d
  410e10:	sub    al,0xb8
  410e12:	mov    ah,0xe9
  410e14:	test   DWORD PTR [esi-0x65],0x3d3a7d00
  410e1b:	sub    edi,DWORD PTR [ebp+0x45]
  410e1e:	add    eax,0xa886fadf
  410e23:	mov    ah,0x61
  410e25:	rcl    ebp,1
  410e27:	ins    BYTE PTR es:[edi],dx
  410e28:	push   cs
  410e29:	iret   
  410e2a:	aad    0x9e
  410e2c:	cmp    DWORD PTR [ebp-0x40],0x72
  410e30:	pushf  
  410e31:	repz cld 
  410e33:	cld    
  410e34:	xchg   ebp,eax
  410e35:	push   0xfe5f8488
  410e3a:	retf   0xa15a
  410e3d:	ret    0x568c
  410e40:	jg     0x410e1c
  410e42:	push   es
  410e43:	sub    eax,DWORD PTR ds:0xbc90cbe7
  410e49:	xor    DWORD PTR [ebx],ecx
  410e4b:	mov    esp,0x241ac039
  410e50:	sbb    DWORD PTR [eax+0x4fb213cd],esp
  410e56:	inc    cx
  410e58:	mov    ds:0xcd61d3c0,al
  410e5d:	aaa    
  410e5e:	fidivr DWORD PTR [ebx]
  410e60:	cwde   
  410e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e62:	jmp    0x436ca7c3
  410e67:	pop    ss
  410e68:	mov    ds:0x31c20e46,al
  410e6d:	fs dec ecx
  410e6f:	shl    DWORD PTR [edi],cl
  410e71:	hlt    
  410e72:	or     ch,BYTE PTR [ecx]
  410e74:	sbb    al,0xe3
  410e76:	sti    
  410e77:	mov    ebp,0xa3c92d0
  410e7c:	mov    edx,0x7535ae71
  410e81:	cmp    dl,dh
  410e83:	mov    ecx,0x1c24127b
  410e88:	xor    edx,DWORD PTR [edx+eax*2]
  410e8b:	loope  0x410e62
  410e8d:	cmp    ch,ah
  410e8f:	xor    DWORD PTR [ebp+0x6e],edx
  410e92:	dec    ecx
  410e93:	shl    BYTE PTR [esi-0x7b9fe779],0xd
  410e9a:	shl    ah,0xd9
  410e9d:	adc    eax,0xa9a3dbe6
  410ea2:	gs enter 0xd9d,0x7d
  410ea7:	call   0xefd8656b
  410eac:	sbb    bh,BYTE PTR [edx-0x73456f4a]
  410eb2:	xchg   edi,eax
  410eb3:	jg     0x410ea4
  410eb5:	lock jecxz 0x410f0d
  410eb8:	nop
  410eb9:	jbe    0x410ea1
  410ebb:	loope  0x410f37
  410ebd:	popa   
  410ebe:	fs pop ebx
  410ec0:	sbb    DWORD PTR [ecx],ecx
  410ec2:	jge    0x410eab
  410ec4:	lea    ebp,[eax+0x6f]
  410ec7:	out    0xc7,eax
  410ec9:	sbb    eax,0xfa52fc79
  410ece:	or     ebx,DWORD PTR [edi-0x731ab90d]
  410ed4:	xchg   esp,eax
  410ed5:	push   esi
  410ed6:	int    0xa8
  410ed8:	gs (bad) 
  410eda:	pop    esp
  410edb:	call   0x763f8e4a
  410ee0:	or     BYTE PTR fs:[eax],bl
  410ee3:	or     bl,BYTE PTR [edi+ebp*8-0x610b532a]
  410eea:	fnstsw WORD PTR [esi+edi*8+0x50a86cd0]
  410ef1:	dec    eax
  410ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ef3:	mov    ah,0x3c
  410ef5:	int3   
  410ef6:	popf   
  410ef7:	jp     0x410eeb
  410ef9:	in     al,0x7c
  410efb:	jne    0x410f59
  410efd:	sar    BYTE PTR [esi+0x4eab1f47],0x18
  410f04:	cmp    eax,0x36b5d636
  410f09:	ss push esi
  410f0b:	aaa    
  410f0c:	xchg   ebx,eax
  410f0d:	dec    esp
  410f0e:	out    dx,eax
  410f0f:	jae    0x410ead
  410f11:	sti    
  410f12:	cmp    eax,0xe68eba26
  410f17:	xchg   edx,ebx
  410f19:	adc    DWORD PTR [ebx],edx
  410f1b:	pop    ebp
  410f1c:	jb     0x410ec9
  410f1e:	stos   DWORD PTR es:[edi],eax
  410f1f:	sub    DWORD PTR [edi],edx
  410f21:	push   ebx
  410f22:	and    ah,BYTE PTR [esi+ebx*1+0x1782aa9b]
  410f29:	pop    esi
  410f2a:	cmp    DWORD PTR [edx],esi
  410f2c:	scas   al,BYTE PTR es:[edi]
  410f2d:	sub    bl,BYTE PTR [ebp+esi*2+0x10109532]
  410f34:	adc    esp,edi
  410f36:	or     ch,BYTE PTR [esi+0x5c]
  410f39:	xchg   esp,ebx
  410f3b:	sahf   
  410f3c:	fimul  WORD PTR [ecx+0x7f]
  410f3f:	push   edi
  410f40:	lods   eax,DWORD PTR ds:[esi]
  410f41:	and    edi,DWORD PTR [edx+0x43885481]
  410f47:	mov    edi,0x22ec4be6
  410f4c:	jecxz  0x410fad
  410f4e:	repz inc edx
  410f50:	adc    eax,0x1fa1ec62
  410f55:	push   ebx
  410f56:	push   eax
  410f57:	loope  0x410f43
  410f59:	sbb    al,0x5f
  410f5b:	aas    
  410f5c:	aaa    
  410f5d:	sub    edi,esp
  410f5f:	sbb    dl,ah
  410f61:	div    BYTE PTR [ebx]
  410f63:	popf   
  410f64:	retf   0x485c
  410f67:	add    al,0x92
  410f69:	int3   
  410f6a:	mov    eax,0xb3a00121
  410f6f:	mov    ebp,fs
  410f71:	lods   al,BYTE PTR ds:[esi]
  410f72:	and    bl,BYTE PTR [edi+0x7fb157d5]
  410f78:	repz xor eax,0x58b4fd1f
  410f7e:	lods   eax,DWORD PTR ds:[esi]
  410f7f:	push   ecx
  410f80:	imul   ebp,DWORD PTR [ebx-0x46a80a0d],0xef2605b1
  410f8a:	add    edi,DWORD PTR [eax-0x28c9b3b2]
  410f90:	and    ebx,esp
  410f92:	dec    esi
  410f93:	add    DWORD PTR [eax+0x76],eax
  410f96:	xchg   edx,eax
  410f97:	pop    esp
  410f98:	mov    dh,al
  410f9a:	jl     0x410fb4
  410f9c:	cmp    al,0xa3
  410f9e:	mov    bl,0x1a
  410fa0:	dec    eax
  410fa1:	pushf  
  410fa2:	mov    al,ds:0x408bbd06
  410fa7:	sti    
  410fa8:	dec    eax
  410fa9:	add    al,0x43
  410fab:	sar    BYTE PTR [edi-0x70],0x22
  410faf:	call   0xfb19:0x617e7807
  410fb6:	in     eax,dx
  410fb7:	shl    bl,0xa
  410fba:	and    al,0xed
  410fbc:	jo     0x410f80
  410fbe:	mov    dl,0x27
  410fc0:	inc    esp
  410fc1:	mov    bl,0x23
  410fc3:	cwde   
  410fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fc5:	frstor [esi]
  410fc7:	leave  
  410fc8:	sbb    DWORD PTR [edx+0x5c15434b],edi
  410fce:	inc    ebp
  410fcf:	pop    esi
  410fd0:	jnp    0x410fd7
  410fd2:	or     BYTE PTR [ebx-0x67f3f7ad],cl
  410fd8:	pop    es
  410fd9:	aaa    
  410fda:	out    0xd1,al
  410fdc:	inc    esp
  410fdd:	xchg   ebp,eax
  410fde:	(bad)  
  410fdf:	xor    eax,0xd57a8683
  410fe4:	mov    ah,0x6
  410fe6:	jl     0x410fba
  410fe8:	out    0x36,al
  410fea:	or     ebx,ebp
  410fec:	pop    ebx
  410fed:	xchg   ebp,eax
  410fee:	imul   edi,eax,0xfa7b1000
  410ff4:	xor    eax,0xb9aba364
  410ff9:	clc    
  410ffa:	(bad)  
  410ffc:	sti    
  410ffd:	push   ss
  410ffe:	push   ecx
  410fff:	mov    ds:0x8a08fc83,al
  411004:	push   cs
  411005:	scas   eax,DWORD PTR es:[edi]
  411006:	in     eax,0x48
  411008:	adc    al,0x23
  41100a:	sbb    BYTE PTR [edx],ah
  41100c:	adc    al,0x9e
  41100e:	test   BYTE PTR [edx+0x4023fe72],al
  411014:	pop    edi
  411015:	mov    ch,0x2f
  411017:	xchg   DWORD PTR [ecx-0x7f6b2978],edi
  41101d:	ds dec ecx
  41101f:	outs   dx,DWORD PTR ds:[esi]
  411020:	fldcw  WORD PTR [ebp-0x24]
  411023:	dec    ecx
  411024:	adc    al,0xab
  411026:	mov    esi,0xc3aa9728
  41102b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41102c:	ja     0x411099
  41102e:	or     DWORD PTR [edx-0x1d1f1900],0x4c
  411035:	ins    BYTE PTR es:[edi],dx
  411036:	pop    edi
  411037:	xor    edx,DWORD PTR [edi+0x58]
  41103a:	stos   BYTE PTR es:[edi],al
  41103b:	jno    0x411095
  41103d:	xor    BYTE PTR [edx-0x3aef2981],cl
  411043:	xchg   edx,eax
  411044:	repnz in eax,dx
  411046:	test   eax,0x3ae18476
  41104b:	(bad)
  411050:	js     0x410ff3
  411052:	mov    edi,0xb6ab4f7f
  411057:	inc    esp
  411058:	imul   esi,DWORD PTR [ebx+0x5c31425c],0x23ebb37b
  411062:	jg     0x4110c6
  411064:	cld    
  411065:	fwait
  411066:	imul   edi,DWORD PTR ds:0xf8cbe322,0x71dab5a
  411070:	das    
  411071:	sbb    DWORD PTR [edx+0x7e0d909],ecx
  411077:	aad    0x2b
  411079:	fadd   QWORD PTR [ebp-0xe]
  41107c:	leave  
  41107d:	jo     0x411029
  41107f:	pushf  
  411080:	xor    BYTE PTR [edi+0x1f],0x66
  411084:	ror    bh,cl
  411086:	adc    eax,0x2d113d9a
  41108b:	adc    al,BYTE PTR [ecx-0x3a3b51c1]
  411091:	mov    dl,0xc4
  411093:	and    DWORD PTR ds:0xb78427a7,esi
  411099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41109a:	pop    eax
  41109b:	fst    DWORD PTR [ebp-0x16ad1d5f]
  4110a1:	dec    esi
  4110a2:	dec    edx
  4110a3:	sbb    bl,BYTE PTR [edx]
  4110a5:	pushf  
  4110a6:	int3   
  4110a7:	cli    
  4110a8:	adc    dl,bl
  4110aa:	add    al,0xd8
  4110ac:	xor    ecx,DWORD PTR ds:0x9692a73f
  4110b2:	mov    cl,0x9f
  4110b4:	adc    cl,BYTE PTR [edx]
  4110b6:	das    
  4110b7:	push   edi
  4110b8:	sub    DWORD PTR [ebp-0x5],0x1fbd45a7
  4110bf:	arpl   WORD PTR [esi-0x49f83fca],ax
  4110c5:	mov    al,ds:0x96e75aaf
  4110ca:	jbe    0x41109e
  4110cc:	out    dx,eax
  4110cd:	retf   0x8736
  4110d0:	xchg   esi,eax
  4110d1:	and    BYTE PTR [eax+0x62],ch
  4110d4:	enter  0x1af0,0x3e
  4110d8:	mov    ebx,0xb4534a1f
  4110dd:	adc    esi,DWORD PTR [esi-0x23504bec]
  4110e3:	add    DWORD PTR [edx+0x2b68d94c],0xffffffbf
  4110ea:	retf   0xb40b
  4110ed:	loop   0x41113a
  4110ef:	mov    eax,0x45feadb9
  4110f4:	lahf   
  4110f5:	cmp    eax,0x3b6b4501
  4110fa:	push   0x58d32ac3
  4110ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411100:	jae    0x411101
  411102:	adc    BYTE PTR [ebx-0x32c0cc2e],0x20
  411109:	in     eax,dx
  41110a:	mov    ebp,0x2cc37227
  41110f:	jmp    esp
  411111:	mul    BYTE PTR [eax]
  411113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411114:	dec    edx
  411115:	aam    0x5
  411117:	std    
  411118:	iret   
  411119:	ss clc 
  41111b:	enter  0x4be1,0xb1
  41111f:	inc    ebx
  411120:	lods   al,BYTE PTR ds:[esi]
  411121:	out    dx,eax
  411122:	or     eax,0xf85b6db3
  411128:	(bad)  
  411129:	cmp    al,0xf5
  41112b:	jmp    0x41111a
  41112d:	out    0x9c,al
  41112f:	das    
  411130:	push   ebx
  411131:	out    dx,al
  411132:	ja     0x41119f
  411134:	scas   eax,DWORD PTR es:[edi]
  411135:	ds inc edi
  411137:	aam    0xdd
  411139:	rcl    BYTE PTR [ecx-0x4dcffa61],0x31
  411140:	mov    ecx,0x88d8104b
  411145:	bound  edx,QWORD PTR [ebp-0x47]
  411148:	ret    
  411149:	shl    BYTE PTR [edx+ebp*2],cl
  41114c:	sbb    al,0x6a
  41114e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41114f:	add    al,0xd7
  411151:	(bad)  
  411152:	ja     0x4111bd
  411154:	xchg   edi,eax
  411155:	mov    esi,0x77d79515
  41115a:	loope  0x41113a
  41115c:	mov    ecx,0xab2ea2ff
  411161:	js     0x4111cd
  411163:	int3   
  411164:	in     eax,dx
  411165:	sbb    eax,0xb392ea09
  41116a:	add    ecx,eax
  41116c:	lahf   
  41116d:	push   edi
  41116e:	and    BYTE PTR [eax+ebx*1+0x4d],bl
  411172:	sub    eax,0x4715bd05
  411177:	shr    BYTE PTR [ebx+edx*4+0x62],cl
  41117b:	jmp    0x41111b
  41117d:	fbld   TBYTE PTR [edi]
  41117f:	mov    ebp,0xe631cf37
  411184:	push   esp
  411185:	inc    ecx
  411186:	mov    ds:0x5b5cc9af,al
  41118b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41118c:	sbb    BYTE PTR [ecx+0x17a18d48],al
  411192:	test   eax,edx
  411194:	iret   
  411195:	add    al,0x6f
  411197:	lahf   
  411198:	iret   
  411199:	sbb    DWORD PTR [eax+0x7f524a61],ebp
  41119f:	cs inc eax
  4111a1:	sbb    DWORD PTR ds:0xbf9f548d,ebx
  4111a7:	pop    es
  4111a8:	(bad)  
  4111a9:	hlt    
  4111aa:	test   eax,0xdf085370
  4111af:	aam    0xa6
  4111b1:	cmc    
  4111b2:	loop   0x4111d4
  4111b4:	cmp    edx,esp
  4111b6:	mov    DWORD PTR [ebx-0x7bb96edb],0x14af226c
  4111c0:	xchg   ecx,eax
  4111c1:	test   BYTE PTR [edi+0x8],0xf
  4111c5:	jno    0x411213
  4111c7:	or     cl,bl
  4111c9:	out    0x8a,al
  4111cb:	add    al,0x64
  4111cd:	mov    al,BYTE PTR [eax+0x29]
  4111d0:	stos   DWORD PTR es:[edi],eax
  4111d1:	mov    esi,0x5d4eccfb
  4111d6:	xchg   BYTE PTR [edi],bh
  4111d8:	aam    0x57
  4111da:	(bad)  
  4111db:	ror    DWORD PTR [edi],1
  4111dd:	jae    0x411162
  4111df:	cmp    al,0x35
  4111e1:	test   eax,0x82947c48
  4111e6:	adc    al,0x65
  4111e8:	aas    
  4111e9:	pop    ds
  4111ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111eb:	pop    edi
  4111ec:	stos   BYTE PTR es:[edi],al
  4111ed:	and    eax,DWORD PTR [ebx-0x7a]
  4111f0:	or     al,al
  4111f2:	push   ss
  4111f3:	cmp    al,BYTE PTR [eax-0x4948eb50]
  4111f9:	dec    esi
  4111fa:	out    dx,eax
  4111fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111fc:	jnp    0x41121a
  4111fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111ff:	out    0x2c,al
  411201:	mov    al,ds:0xd149ba5
  411206:	icebp  
  411207:	sub    DWORD PTR [esi+0x3e],esp
  41120a:	imul   ebx,DWORD PTR [edx],0x15cc1926
  411210:	out    dx,eax
  411211:	xchg   ebx,eax
  411212:	xchg   ecx,eax
  411213:	jp     0x4111b4
  411215:	adc    al,0x6a
  411217:	jge    0x411208
  411219:	xor    eax,0xa94a95b8
  41121e:	fldpi  
  411220:	stc    
  411221:	lds    esp,FWORD PTR [ebx+eax*8]
  411224:	stos   BYTE PTR es:[edi],al
  411225:	dec    ebx
  411226:	push   edi
  411227:	cmp    eax,0x82561e7b
  41122c:	jne    0x411270
  41122e:	jns    0x411283
  411230:	aas    
  411231:	jmp    0x310a23b1
  411236:	adc    al,dl
  411238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411239:	out    0xb3,al
  41123b:	icebp  
  41123c:	test   eax,0xfa354f7b
  411241:	cmp    ebx,DWORD PTR [esi+0x3a]
  411244:	pop    eax
  411245:	cmc    
  411246:	push   eax
  411247:	mov    dh,BYTE PTR [edx]
  411249:	push   ss
  41124a:	outs   dx,DWORD PTR ds:[esi]
  41124b:	cmp    bh,ah
  41124d:	or     cl,bl
  41124f:	in     eax,dx
  411250:	push   es
  411251:	imul   ecx,DWORD PTR [esi+ebp*4-0x7a],0x7a0760c9
  411259:	inc    edi
  41125a:	aad    0x66
  41125c:	and    al,0x32
  41125e:	mov    al,ds:0xd9fd73a5
  411263:	sbb    eax,0xbd68d214
  411268:	rcr    BYTE PTR [eax+0x28],cl
  41126b:	test   eax,0xf7cca7b7
  411270:	or     bl,BYTE PTR [edi+0x51230fc2]
  411276:	lods   eax,DWORD PTR ds:[esi]
  411277:	fwait
  411278:	jns    0x411249
  41127a:	std    
  41127b:	leave  
  41127c:	xor    cl,BYTE PTR [ebx+0x63]
  41127f:	xchg   esi,eax
  411280:	lock mov dh,ch
  411283:	sti    
  411284:	jmp    0x411244
  411286:	cmp    ecx,DWORD PTR [eax-0xc0f36eb]
  41128c:	in     eax,0xcf
  41128e:	add    edi,edx
  411290:	inc    edx
  411291:	inc    edx
  411292:	push   0xffffff9f
  411294:	call   0x1b204fde
  411299:	cmp    esp,DWORD PTR [edi+0x34]
  41129c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41129d:	clc    
  41129e:	jp     0x411279
  4112a0:	dec    ebp
  4112a1:	ins    DWORD PTR es:[edi],dx
  4112a2:	bound  ecx,QWORD PTR [ecx+0x3c]
  4112a5:	in     eax,dx
  4112a6:	or     eax,0xe9e9f056
  4112ab:	push   ss
  4112ac:	jmp    0x41128b
  4112ae:	jae    0x411240
  4112b0:	retf   
  4112b1:	pop    edi
  4112b2:	gs push esp
  4112b4:	pop    esi
  4112b5:	sub    BYTE PTR [edx+0x42b43400],bl
  4112bb:	mov    ecx,0xc143d0bf
  4112c0:	cmp    BYTE PTR [edx-0x5e],bl
  4112c3:	dec    edx
  4112c4:	xchg   esi,eax
  4112c5:	xchg   ecx,eax
  4112c6:	adc    ecx,0xf4d1b857
  4112cc:	and    BYTE PTR [edi+0x7c337552],ah
  4112d2:	fisub  DWORD PTR [eax]
  4112d4:	lds    edx,FWORD PTR [ebx]
  4112d6:	pop    ebp
  4112d7:	popa   
  4112d8:	cli    
  4112d9:	sub    BYTE PTR [eax+0x48071c51],ah
  4112df:	bound  ebx,QWORD PTR [ebp-0x44ea2bd3]
  4112e5:	pop    ebp
  4112e6:	sbb    BYTE PTR ds:0x6e2c63b,dh
  4112ec:	out    0x3b,al
  4112ee:	(bad)  
  4112f2:	dec    ebp
  4112f3:	mul    BYTE PTR [ebx+0x65]
  4112f6:	inc    edx
  4112f7:	cmp    eax,0xeba81646
  4112fc:	mov    esp,0x62e5cb90
  411301:	outs   dx,DWORD PTR ds:[esi]
  411302:	pop    edi
  411303:	(bad)  [ebx-0x69]
  411306:	jno    0x41130a
  411308:	dec    ecx
  411309:	inc    edi
  41130a:	adc    dl,BYTE PTR [edx-0x3aa97f43]
  411310:	and    al,0xfb
  411312:	and    eax,0xb1bfc995
  411317:	daa    
  411318:	add    eax,0x2e525ecf
  41131d:	mov    edi,0xc2388cff
  411322:	les    edi,FWORD PTR [ebx]
  411324:	inc    eax
  411325:	stos   BYTE PTR es:[edi],al
  411326:	leave  
  411327:	mov    dl,BYTE PTR [edi+0x7f066d1b]
  41132d:	xor    esp,edi
  41132f:	sub    eax,0x7a726287
  411334:	cmp    DWORD PTR [edx],ebx
  411336:	adc    esp,DWORD PTR [ecx-0xc5d7abd]
  41133c:	sbb    edi,0xa347b01
  411342:	push   0xcd17f88a
  411347:	mov    al,BYTE PTR [eax]
  411349:	bound  edi,QWORD PTR [ecx+0x36]
  41134c:	ds addr16 inc ebx
  41134f:	inc    ebp
  411350:	push   esi
  411351:	mov    ebp,0x49db2c77
  411356:	xchg   ebx,eax
  411357:	xor    cl,0x7b
  41135a:	sbb    eax,0xd68ea81
  41135f:	jmp    0x7fab:0x76e8a127
  411366:	and    dh,BYTE PTR [ebp-0x5bcf4b84]
  41136c:	xor    BYTE PTR [eax-0x11],dh
  41136f:	dec    ebp
  411370:	sbb    DWORD PTR [ebx],edx
  411372:	mov    al,dh
  411374:	in     eax,0x1e
  411376:	and    ch,BYTE PTR [esi+0x14eeaa3]
  41137c:	(bad)  [ebp-0x39d92095]
  411382:	add    eax,0x87f97537
  411387:	(bad)  
  411389:	or     al,BYTE PTR [edx]
  41138b:	xchg   BYTE PTR [ebp-0x4a71e8bd],cl
  411391:	lds    edx,FWORD PTR [edi]
  411393:	bound  ecx,QWORD PTR [ecx]
  411395:	(bad)  [edi-0x732d8037]
  41139b:	mov    ebp,DWORD PTR [esi-0x70b25b2e]
  4113a1:	adc    eax,0x87bae71b
  4113a6:	sbb    BYTE PTR [eax+esi*8],0x0
  4113aa:	fist   WORD PTR [ebp+0x35]
  4113ad:	xor    BYTE PTR [edi],dh
  4113af:	inc    ecx
  4113b0:	or     BYTE PTR [ecx-0x4],al
  4113b3:	adc    DWORD PTR [edx+ecx*4-0x16b47d7c],edx
  4113ba:	pop    esi
  4113bb:	retf   0xed21
  4113be:	shl    BYTE PTR [edx-0x60],0xe
  4113c2:	sbb    al,0x24
  4113c4:	popf   
  4113c5:	push   ebp
  4113c6:	cld    
  4113c7:	jnp    0x41141b
  4113c9:	ret    
  4113ca:	sbb    dl,ch
  4113cc:	jl     0x41139d
  4113ce:	mov    ah,0xeb
  4113d0:	push   0xa6fa67ca
  4113d5:	popf   
  4113d6:	mov    ah,0x76
  4113d8:	xor    DWORD PTR [ecx-0x7a],edx
  4113db:	push   ds
  4113dc:	push   edx
  4113dd:	repz ret 0x8cd9
  4113e1:	aas    
  4113e2:	fs and al,0xc3
  4113e5:	push   0xffffffc8
  4113e7:	jp     0x4113e0
  4113e9:	and    esp,DWORD PTR [esi+esi*2]
  4113ec:	push   ecx
  4113ed:	loope  0x4113a5
  4113ef:	ret    0x3dd7
  4113f2:	dec    ebx
  4113f3:	(bad)  
  4113f4:	push   eax
  4113f5:	stc    
  4113f6:	dec    esp
  4113f7:	lea    edx,[esi-0x1212e771]
  4113fd:	mov    ds:0xc7bdbf85,eax
  411402:	xchg   ch,ch
  411404:	repz lahf 
  411406:	add    eax,0x1ea085a9
  41140b:	sub    DWORD PTR [eax+0x0],edx
  41140e:	push   ds
  41140f:	stos   DWORD PTR es:[edi],eax
  411410:	repz aad 0xb7
  411413:	(bad)  
  411414:	cmp    al,0x58
  411416:	neg    DWORD PTR fs:[ecx+esi*2-0x1d9587ff]
  41141e:	mov    cl,BYTE PTR [ecx+0x23f27e1f]
  411424:	or     edx,DWORD PTR [eax+0x48]
  411427:	or     ecx,DWORD PTR [esi+ebp*2+0x4763322d]
  41142e:	mov    bh,BYTE PTR [edi-0x2cb44cc3]
  411434:	mov    ah,0xf6
  411436:	sub    eax,0x96123d94
  41143b:	cdq    
  41143c:	pop    ss
  41143d:	cmp    ebx,DWORD PTR [esi-0x12]
  411440:	inc    esi
  411441:	cwde   
  411442:	add    eax,0x686ccfb0
  411447:	mov    DWORD PTR ds:0x3c86eb02,0x5fc4d4b7
  411451:	test   eax,0xa7e09531
  411456:	jbe    0x411405
  411458:	loopne 0x411498
  41145a:	(bad)  
  41145c:	fild   QWORD PTR [edx-0x41]
  41145f:	and    BYTE PTR [eax+0x352908f4],dl
  411465:	push   cs
  411466:	lock push cs
  411468:	out    0x5e,al
  41146a:	xchg   BYTE PTR [edi],cl
  41146c:	fild   DWORD PTR [edi+ebp*4-0x2a30f6d8]
  411473:	pop    edi
  411474:	shl    DWORD PTR [ebx],0xc0
  411477:	test   ebx,esp
  411479:	inc    ebp
  41147a:	sbb    edi,DWORD PTR [edx]
  41147c:	mov    bh,BYTE PTR ds:0x6479e883
  411482:	dec    ebx
  411483:	adc    cl,BYTE PTR [edi+0x2328a989]
  411489:	xchg   ebp,esi
  41148b:	pusha  
  41148c:	dec    esp
  41148d:	aam    0x1c
  41148f:	mov    bh,0xa
  411491:	or     BYTE PTR [eax-0x43613bf4],dh
  411497:	cmp    esp,DWORD PTR [ecx+ecx*2-0x13acbf51]
  41149e:	jbe    0x4114f8
  4114a0:	jge    0x41151b
  4114a2:	hlt    
  4114a3:	jle    0x4114f5
  4114a5:	pop    ebx
  4114a6:	cli    
  4114a7:	repnz adc al,0x6b
  4114aa:	push   ecx
  4114ab:	jle    0x4114fe
  4114ad:	xor    DWORD PTR [ecx-0x974f65c],eax
  4114b3:	(bad)  
  4114b4:	pop    ecx
  4114b5:	adc    al,0x6f
  4114b7:	push   ebp
  4114b8:	in     al,0xe6
  4114ba:	into   
  4114bb:	inc    edx
  4114bc:	mov    gs,WORD PTR [eax+0x22]
  4114bf:	hlt    
  4114c0:	mov    ah,ah
  4114c2:	nop
  4114c3:	out    dx,al
  4114c4:	and    al,bh
  4114c6:	push   ebp
  4114c7:	xor    bh,BYTE PTR [ebp-0x5c]
  4114ca:	daa    
  4114cb:	clc    
  4114cc:	test   BYTE PTR [ebx+0x76978d53],bh
  4114d2:	stos   BYTE PTR es:[edi],al
  4114d3:	je     0x411458
  4114d5:	inc    eax
  4114d6:	inc    ebx
  4114d7:	dec    ebx
  4114d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114d9:	jno    0x4114d0
  4114db:	int    0x2a
  4114dd:	add    eax,0xa7040cba
  4114e2:	shl    bh,0xdd
  4114e5:	and    al,0x28
  4114e7:	cli    
  4114e8:	pop    esp
  4114e9:	xchg   ebx,eax
  4114ea:	jle    0x411482
  4114ec:	cld    
  4114ed:	xlat   BYTE PTR ds:[ebx]
  4114ee:	mov    DWORD PTR [ebp+ebx*1-0x7d849ca2],esi
  4114f5:	test   edi,ecx
  4114f7:	dec    ebp
  4114f8:	adc    al,0x91
  4114fa:	adc    eax,DWORD PTR [esi]
  4114fc:	(bad)  
  4114fd:	icebp  
  4114fe:	jb     0x4114ca
  411500:	xor    DWORD PTR [eax+0x20],esi
  411503:	add    eax,0x203869d2
  411508:	mov    esp,0xd1306c13
  41150d:	sub    BYTE PTR [edi+edx*2],cl
  411510:	mov    ecx,DWORD PTR [edi+0x6d225cc7]
  411516:	in     al,dx
  411517:	xchg   esi,eax
  411519:	jo     0x411554
  41151b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41151c:	aas    
  41151d:	inc    ecx
  41151e:	lods   al,BYTE PTR ds:[esi]
  41151f:	push   esi
  411520:	xchg   edx,eax
  411521:	call   0x6b01:0x61bc4ca3
  411528:	jg     0x411515
  41152a:	out    dx,al
  41152b:	shl    BYTE PTR [ecx-0x5e],cl
  41152e:	fcmovnb st,st(0)
  411530:	xlat   BYTE PTR ds:[ebx]
  411531:	repz xchg esp,eax
  411533:	pop    ebp
  411534:	and    edi,ecx
  411536:	sbb    eax,0x17a31fec
  41153b:	xchg   BYTE PTR [eax+0x5f],dl
  41153e:	xchg   BYTE PTR [edi+0x4b],ah
  411541:	ja     0x41155c
  411543:	cdq    
  411544:	js     0x41154c
  411546:	add    eax,0x9b11691e
  41154b:	cmp    DWORD PTR [esi+ecx*8+0x5655df10],ebp
  411552:	mov    ebp,0xfbaff206
  411557:	or     BYTE PTR [edi],dl
  411559:	aas    
  41155a:	or     DWORD PTR [ebx-0x63b5d0f2],esp
  411560:	mov    dh,0x4e
  411562:	inc    edx
  411563:	mov    esp,0xfb87f3fd
  411568:	data16 aad 0xe5
  41156b:	shl    DWORD PTR [esi],1
  41156d:	shr    DWORD PTR [eax+0x77],1
  411570:	outs   dx,DWORD PTR ds:[esi]
  411571:	frstor [eax]
  411573:	retf   0x6a8d
  411576:	fstp   DWORD PTR [ecx]
  411578:	add    BYTE PTR [edi],dh
  41157a:	fcmovu st,st(1)
  41157c:	pop    edx
  41157d:	fsub   DWORD PTR [ecx+0x2bd15794]
  411583:	push   es
  411584:	mov    ebx,0x7e9de5b6
  411589:	jno    0x411526
  41158b:	clc    
  41158c:	test   eax,0x8fd35300
  411591:	jmp    0xfdb8bd75
  411596:	(bad)  
  411597:	fidiv  WORD PTR [ebp-0x14d5b0f0]
  41159d:	repz inc esp
  41159f:	xor    dl,cl
  4115a1:	rcl    bh,cl
  4115a3:	mov    ebp,0xb05575f3
  4115a8:	dec    esi
  4115a9:	cmp    edx,esi
  4115ab:	dec    ecx
  4115ac:	push   ebx
  4115ad:	adc    DWORD PTR [ebp+0x24],esp
  4115b0:	add    ch,BYTE PTR [ebx]
  4115b2:	js     0x41154f
  4115b4:	fsubr  QWORD PTR [edi+ebp*1]
  4115b7:	das    
  4115b8:	fs mov bl,al
  4115bb:	and    bh,ah
  4115bd:	adc    esp,DWORD PTR [ebx+0x2ae82dc9]
  4115c3:	jp     0x411596
  4115c5:	mov    esi,0xcda3296d
  4115ca:	cmovne eax,DWORD PTR [edi-0x52]
  4115ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115cf:	pop    ss
  4115d0:	and    eax,0xdab314c0
  4115d5:	les    ecx,FWORD PTR [esi]
  4115d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d8:	or     BYTE PTR [edi-0x4c],0xac
  4115dc:	adc    BYTE PTR [eax+0x31],bh
  4115df:	mov    BYTE PTR [ebx-0x699c890c],bh
  4115e5:	loopne 0x411574
  4115e7:	call   0x3e52:0xb0cc7af8
  4115ee:	mov    edx,0x8e702a8f
  4115f3:	mov    al,0x34
  4115f5:	retf   0x54ec
  4115f8:	in     al,0xcb
  4115fa:	mov    al,0xf9
  4115fc:	jmp    0x96ee8097
  411601:	nop
  411602:	xchg   ecx,eax
  411603:	add    eax,0x2ccb7f4e
  411608:	clc    
  411609:	int3   
  41160a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41160b:	mov    bl,0x23
  41160d:	rcl    DWORD PTR fs:[edi-0x68],1
  411611:	jle    0x4115f6
  411613:	pop    es
  411614:	jmp    0x411671
  411616:	std    
  411617:	into   
  411618:	add    DWORD PTR ds:0x10861d88,ecx
  41161e:	imul   edi,DWORD PTR [esi-0x64],0x4c
  411622:	leave  
  411623:	es enter 0x1f2a,0x75
  411628:	add    edx,DWORD PTR [ebx]
  41162a:	aaa    
  41162b:	loope  0x4115b5
  41162d:	dec    edi
  41162e:	sub    ecx,DWORD PTR [ecx+0x2db26008]
  411634:	popf   
  411635:	sub    eax,DWORD PTR [eax-0x47d4b30d]
  41163b:	jmp    0x488af15f
  411640:	test   BYTE PTR [eax+eax*8+0x78],ch
  411644:	lea    ebx,[ebp+0x1c]
  411647:	ja     0x4116b3
  411649:	sbb    DWORD PTR [eax+0x7],edx
  41164c:	adc    eax,0x735d9d9a
  411651:	pop    es
  411652:	inc    ebp
  411653:	and    eax,DWORD PTR [ecx-0xfa8f21b]
  411659:	xor    DWORD PTR [edx*8-0x7ebf2fab],ebp
  411660:	and    sp,WORD PTR [esi+edx*1-0x65]
  411665:	fnsave [esi]
  411667:	das    
  411668:	xchg   esi,eax
  411669:	xchg   edi,eax
  41166a:	mov    WORD PTR [edx],fs
  41166c:	and    al,0xc6
  41166e:	mov    eax,0x7870ea5e
  411673:	out    0x61,al
  411675:	xor    eax,0x3e168266
  41167a:	mov    dh,0x15
  41167c:	aam    0xc3
  41167e:	xchg   ebp,eax
  41167f:	and    DWORD PTR [ebx+0x4f2bc8a1],eax
  411685:	(bad)  [ebx]
  411687:	pop    ebp
  411688:	and    ebx,esp
  41168a:	xchg   ecx,eax
  41168b:	push   es
  41168c:	jle    0x411705
  41168e:	(bad)  
  41168f:	retf   0x29a0
  411692:	std    
  411693:	dec    eax
  411694:	rcr    DWORD PTR [edx-0x261bbbb4],0x8b
  41169b:	das    
  41169c:	jg     0x4116ab
  41169e:	mov    dl,0xb5
  4116a0:	jmp    0x979d2afc
  4116a5:	dec    eax
  4116a6:	pop    ecx
  4116a7:	(bad)  [edx]
  4116a9:	or     edx,DWORD PTR [esi]
  4116ab:	jo     0x411688
  4116ad:	(bad)  [edx]
  4116af:	cmp    bl,BYTE PTR [ecx+0x1a8a458c]
  4116b5:	fldz   
  4116b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116b8:	sbb    dh,ah
  4116ba:	and    BYTE PTR [edi+0x2600440a],cl
  4116c0:	stc    
  4116c1:	xor    BYTE PTR [edx+eax*8],bh
  4116c4:	mov    bl,0xd2
  4116c6:	inc    ecx
  4116c7:	je     0x4116df
  4116c9:	mov    ds:0xa93a4e1d,al
  4116ce:	push   esp
  4116cf:	adc    ebp,DWORD PTR [ebx-0x77]
  4116d2:	sbb    dl,ch
  4116d4:	sbb    DWORD PTR [ecx],0x4c2c1657
  4116da:	fimul  WORD PTR [ecx-0x22]
  4116dd:	(bad)  
  4116de:	mov    WORD PTR [edx],?
  4116e0:	retf   
  4116e1:	mov    edi,0xbcc3f541
  4116e6:	adc    ecx,esp
  4116e8:	aaa    
  4116e9:	(bad)  
  4116ea:	out    dx,eax
  4116eb:	mov    ch,0xc1
  4116ed:	aad    0x74
  4116ef:	mov    dl,cl
  4116f1:	cs (bad) 
  4116f3:	in     al,dx
  4116f4:	aaa    
  4116f5:	ret    
  4116f6:	xor    BYTE PTR [eax-0x24e967a8],bh
  4116fc:	cmc    
  4116fd:	aaa    
  4116fe:	dec    edi
  4116ff:	lahf   
  411700:	dec    esi
  411701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411702:	jmp    0x5b47:0x2460d86a
  411709:	out    0xc2,al
  41170b:	pop    ss
  41170c:	cmp    esi,esp
  41170e:	cdq    
  41170f:	xor    eax,0xb4f710ba
  411714:	push   edx
  411715:	xchg   esp,eax
  411716:	add    BYTE PTR [esi-0x31],dl
  411719:	dec    esp
  41171a:	out    0x94,eax
  41171c:	cmp    bh,BYTE PTR ds:0xaf1acefc
  411722:	lds    edi,FWORD PTR [edi-0x56]
  411725:	or     al,BYTE PTR [ecx+0x79]
  411728:	adc    dh,ah
  41172a:	rcl    edi,cl
  41172c:	inc    ebp
  41172d:	lock cmc 
  41172f:	icebp  
  411730:	outs   dx,BYTE PTR ds:[esi]
  411731:	dec    ebx
  411732:	mov    dh,0x17
  411734:	sub    ecx,DWORD PTR [edx-0x6341145f]
  41173a:	jmp    0x26f1:0xcd1109e1
  411741:	hlt    
  411742:	lea    edx,[edi+0x1ec63839]
  411748:	jo     0x4116d3
  41174a:	mov    esi,0xe19d4789
  41174f:	jge    0x411750
  411751:	pop    esi
  411752:	sub    edx,DWORD PTR [edi+ecx*2-0x61bf8e72]
  411759:	int    0x41
  41175b:	rol    DWORD PTR [bp+si-0x75],cl
  41175f:	das    
  411760:	inc    esi
  411761:	addr16 push es
  411763:	std    
  411764:	push   bp
  411766:	ret    
  411767:	inc    ebp
  411768:	xchg   DWORD PTR [eax+0x70],esp
  41176b:	jns    0x411746
  41176d:	mov    edx,0x10f85a47
  411772:	sti    
  411773:	leave  
  411774:	sub    BYTE PTR [ecx],bh
  411776:	js     0x411706
  411778:	call   0x8cae:0x386c6674
  41177f:	adc    DWORD PTR [ebx],esp
  411781:	sbb    eax,0x5addacf
  411786:	cs shl cl,1
  411789:	inc    ebp
  41178a:	sbb    eax,0x35210c68
  411790:	pusha  
  411791:	stc    
  411792:	dec    edx
  411793:	pop    esi
  411794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411795:	mov    ds:0x65704177,eax
  41179a:	push   esp
  41179b:	or     bp,WORD PTR [ebx+edi*4-0x16e92358]
  4117a3:	or     DWORD PTR [ecx+0x43],0x6e13f956
  4117aa:	or     al,BYTE PTR [ecx+0xf717e96]
  4117b0:	fist   WORD PTR [ebp-0x9]
  4117b3:	in     al,dx
  4117b4:	pop    esi
  4117b5:	pop    edx
  4117b6:	push   ds
  4117b7:	shr    BYTE PTR [ebx-0x46],1
  4117ba:	test   BYTE PTR [esi-0x6e],bl
  4117bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117be:	nop
  4117bf:	leave  
  4117c0:	out    0xc5,al
  4117c2:	addr16 cwde 
  4117c4:	inc    esi
  4117c5:	shr    DWORD PTR [edx],0xd8
  4117c8:	(bad)  
  4117c9:	retf   
  4117ca:	or     esp,esi
  4117cc:	mov    dl,0x82
  4117ce:	scas   eax,DWORD PTR es:[edi]
  4117cf:	and    ebx,DWORD PTR [ecx+0x3f0a25d7]
  4117d5:	push   cs
  4117d6:	in     al,dx
  4117d7:	xchg   DWORD PTR ss:[ecx],esp
  4117da:	jno    0x41184c
  4117dc:	test   DWORD PTR [ebp-0x15],edi
  4117df:	pop    esp
  4117e0:	jne    0x411812
  4117e2:	sbb    eax,0x46751c3b
  4117e7:	mov    al,0xd9
  4117e9:	shl    bl,cl
  4117eb:	cdq    
  4117ec:	add    edx,DWORD PTR [esi]
  4117ee:	rcl    DWORD PTR [edi-0x5c02557a],1
  4117f4:	fs repnz ds push esi
  4117f8:	add    ebp,ecx
  4117fa:	jle    0x4117cd
  4117fc:	xchg   ecx,eax
  4117fd:	sbb    DWORD PTR [eax],0x4d165fb2
  411803:	js     0x41186e
  411805:	push   ecx
  411806:	int3   
  411807:	dec    esp
  411808:	push   eax
  411809:	ret    
  41180a:	aaa    
  41180b:	cmp    ah,ah
  41180d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41180e:	sub    ah,BYTE PTR [esi]
  411810:	xchg   ecx,eax
  411811:	(bad)  
  411812:	jl     0x411799
  411814:	push   esi
  411815:	mov    ecx,cs
  411817:	rcl    eax,cl
  411819:	jmp    0x7ffae6de
  41181e:	sahf   
  41181f:	mov    WORD PTR [ebx+0x10],gs
  411822:	cdq    
  411823:	out    0x43,al
  411825:	dec    ebx
  411826:	loope  0x411816
  411828:	sub    BYTE PTR [ecx],bl
  41182a:	dec    ebp
  41182b:	jno    0x411804
  41182d:	int3   
  41182e:	cld    
  41182f:	cmp    ecx,DWORD PTR [eax]
  411831:	loopne 0x411835
  411833:	adc    eax,0xff5275b0
  411838:	iret   
  411839:	sbb    cl,bl
  41183b:	cwde   
  41183c:	mov    dh,ch
  41183e:	ja     0x411894
  411840:	(bad)  
  411841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411842:	mov    eax,ds:0xe47c1960
  411847:	mov    ebx,0xba1c1571
  41184c:	inc    edi
  41184d:	push   ebp
  41184e:	call   0x863f4e2a
  411853:	loopne 0x411863
  411855:	daa    
  411856:	mov    edx,0x3192a62d
  41185b:	push   ebx
  41185c:	inc    edi
  41185d:	xor    bh,BYTE PTR [ebx]
  41185f:	call   0x91257e58
  411864:	xor    al,0xdd
  411866:	shl    edi,1
  411868:	and    ch,cl
  41186a:	stos   DWORD PTR es:[edi],eax
  41186b:	test   BYTE PTR [edx+0x79],dh
  41186e:	hlt    
  41186f:	fcmove st,st(7)
  411871:	fistp  DWORD PTR [ebx-0x13]
  411874:	xor    ebp,DWORD PTR [edx-0x36]
  411877:	outs   dx,DWORD PTR ds:[esi]
  411878:	das    
  411879:	mov    WORD PTR [esi-0x1d],fs
  41187c:	sub    DWORD PTR [ebx],ebp
  41187e:	(bad)  
  41187f:	and    ebx,DWORD PTR [eax+0x70dc0018]
  411885:	cmp    al,0x92
  411887:	mov    ds:0x70a37f1e,eax
  41188c:	sub    ah,BYTE PTR [esi+ebp*4]
  41188f:	push   esp
  411890:	mov    al,ds:0xb5ded6b4
  411895:	pop    edi
  411896:	push   ebx
  411897:	pop    es
  411898:	cdq    
  411899:	lds    eax,FWORD PTR [edi]
  41189b:	dec    esp
  41189c:	stos   BYTE PTR es:[edi],al
  41189d:	arpl   WORD PTR ds:0x652319a1,bx
  4118a3:	sbb    ah,BYTE PTR [ecx-0x5d]
  4118a6:	shr    DWORD PTR [ebp-0x4a],0x5b
  4118aa:	mov    esi,0x33a74995
  4118af:	addr16 sti 
  4118b1:	adc    edx,DWORD PTR [eax+eax*2+0x14]
  4118b5:	mov    eax,0xdd1b9f47
  4118ba:	xor    dl,dh
  4118bc:	(bad)  
  4118bd:	lock dec ecx
  4118bf:	test   al,0x75
  4118c1:	out    0xdc,eax
  4118c3:	or     al,BYTE PTR [ebp+0x5b678c6f]
  4118c9:	xor    al,BYTE PTR [esi]
  4118cb:	je     0x411936
  4118cd:	add    BYTE PTR [ecx],dl
  4118cf:	inc    ebx
  4118d0:	fstp   TBYTE PTR [edi+0x26d68452]
  4118d6:	(bad)  
  4118d7:	(bad)  
  4118d8:	ja     0x4118b8
  4118da:	aad    0x48
  4118dc:	ins    BYTE PTR es:[edi],dx
  4118dd:	sub    DWORD PTR [esp+ebp*1+0x67],esi
  4118e1:	add    ebp,DWORD PTR [esi+0x61]
  4118e4:	rcl    bh,1
  4118e6:	sbb    edi,edi
  4118e8:	(bad)  
  4118e9:	ror    BYTE PTR [eax-0x4e],0xf8
  4118ed:	and    BYTE PTR [esi+0x60f5b698],dh
  4118f3:	mov    ss,eax
  4118f5:	mov    eax,0xcf70f5c6
  4118fa:	sti    
  4118fb:	dec    ebp
  4118fc:	popa   
  4118fd:	aad    0x5a
  4118ff:	push   ds
  411900:	inc    edi
  411901:	repnz sub DWORD PTR [esi+0x7c16024c],edx
  411908:	sbb    DWORD PTR [ebp+0x711bf7c2],edx
  41190e:	or     ecx,DWORD PTR [eax-0x1799006f]
  411914:	and    eax,0xae3a8ddb
  411919:	push   esi
  41191a:	stos   BYTE PTR es:[edi],al
  41191b:	dec    eax
  41191c:	push   ebx
  41191d:	(bad)  
  41191f:	retf   
  411920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411921:	punpckldq mm1,DWORD PTR [ebx+ecx*8-0x4e]
  411926:	sub    eax,0x8b896841
  41192b:	cld    
  41192c:	inc    edi
  41192d:	lock daa 
  41192f:	fs jge 0x4118b4
  411932:	loop   0x41193f
  411934:	sbb    al,0xe5
  411936:	xchg   DWORD PTR [ebx],eax
  411938:	jmp    0x5040b525
  41193d:	or     eax,0x5ac04191
  411942:	or     eax,0xf13e0958
  411947:	popf   
  411948:	inc    eax
  411949:	lds    esp,FWORD PTR [ecx-0x444bb9ca]
  41194f:	cld    
  411950:	ror    BYTE PTR [edx],1
  411952:	imul   ebp,DWORD PTR [ecx],0x27
  411955:	ficom  DWORD PTR [edi+0x14f6c306]
  41195b:	fidivr DWORD PTR [edi]
  41195d:	xchg   edx,eax
  41195e:	stos   DWORD PTR es:[edi],eax
  41195f:	in     eax,dx
  411960:	pop    ss
  411961:	and    eax,0xef4250c8
  411966:	(bad)
  41196a:	cld    
  41196b:	mov    ch,BYTE PTR [esi]
  41196d:	dec    edx
  41196e:	(bad)  
  41196f:	and    DWORD PTR [ebx+edi*8+0x3f],esi
  411973:	add    al,0x0
  411975:	outs   dx,DWORD PTR ds:[esi]
  411976:	sub    eax,0x2048d850
  41197b:	mov    ds:0x65b3b54d,al
  411980:	fmul   st,st(7)
  411982:	dec    ebp
  411983:	add    cl,al
  411985:	daa    
  411986:	repz sbb bl,bl
  411989:	and    BYTE PTR ds:0x1b68e93,ch
  41198f:	dec    ebx
  411990:	je     0x4119e0
  411992:	pop    es
  411993:	jns    0x4119d4
  411995:	jbe    0x411922
  411997:	nop
  411998:	jmp    0x4119bf
  41199a:	sub    al,BYTE PTR [eax]
  41199c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41199d:	js     0x4119de
  41199f:	inc    esp
  4119a0:	dec    ecx
  4119a1:	dec    ebx
  4119a2:	in     eax,dx
  4119a3:	or     BYTE PTR [ebx+0x51],cl
  4119a6:	jp     0x4119ea
  4119a8:	adc    eax,0xc691d669
  4119ad:	xor    dh,bl
  4119af:	in     al,0x7f
  4119b1:	sub    cl,BYTE PTR [eax-0x31]
  4119b4:	jb     0x411948
  4119b6:	jae    0x4119a3
  4119b8:	cwde   
  4119b9:	inc    esp
  4119ba:	jno    0x4119f1
  4119bc:	xor    DWORD PTR [ecx],esp
  4119be:	mov    edx,0xb69ad111
  4119c3:	pop    esi
  4119c4:	xor    BYTE PTR [esi-0x642d478c],ah
  4119ca:	push   ds
  4119cb:	lds    esp,FWORD PTR [ecx+0x12]
  4119ce:	(bad)  
  4119cf:	cdq    
  4119d0:	dec    edi
  4119d1:	ret    
  4119d2:	shr    DWORD PTR ss:[edi],cl
  4119d5:	inc    DWORD PTR [eax]
  4119d7:	xor    edi,esp
  4119d9:	jb     0x4119e2
  4119db:	in     eax,dx
  4119dc:	or     al,0x33
  4119de:	test   cl,bh
  4119e0:	stc    
  4119e1:	mul    dl
  4119e3:	scas   eax,DWORD PTR es:[edi]
  4119e4:	fidivr WORD PTR [ebx+0x245e1347]
  4119ea:	jae    0x411991
  4119ec:	jnp    0x411a42
  4119ee:	and    al,0x82
  4119f0:	in     al,dx
  4119f1:	adc    ecx,DWORD PTR [esi+eax*1-0x19aa9869]
  4119f8:	xor    eax,0x267e37db
  4119fd:	sub    DWORD PTR [eax+0x7c],0xffffffd7
  411a01:	arpl   WORD PTR [eax],si
  411a03:	retf   
  411a04:	jge    0x411a85
  411a06:	jnp    0x411a02
  411a08:	pop    edx
  411a09:	dec    edx
  411a0a:	xor    ah,dl
  411a0c:	pop    edi
  411a0d:	push   edx
  411a0e:	cmp    dl,BYTE PTR [ebx]
  411a10:	pop    esi
  411a11:	mov    bl,BYTE PTR [ebx+0x6e]
  411a14:	mov    ebx,0xc412c767
  411a19:	add    ah,ch
  411a1b:	stc    
  411a1c:	data16 lahf 
  411a1e:	loopne 0x4119ab
  411a20:	mov    cl,0xef
  411a22:	xchg   ecx,eax
  411a23:	sbb    eax,0x58b8914e
  411a28:	int3   
  411a29:	ds (bad) 
  411a2b:	popa   
  411a2c:	sahf   
  411a2d:	rcr    BYTE PTR [eax+0x7a],1
  411a30:	js     0x411a2f
  411a32:	mov    ah,BYTE PTR [ebp+0x2be1ccb5]
  411a38:	lock test DWORD PTR [ebx-0x2f],0x65e81faf
  411a40:	jmp    0x411a17
  411a42:	cwde   
  411a43:	call   FWORD PTR [eax]
  411a45:	test   eax,0x767ed94e
  411a4a:	(bad)  
  411a4b:	loope  0x411a8f
  411a4d:	jnp    0x411ab1
  411a4f:	mov    edi,0xefdb2e59
  411a54:	int    0x83
  411a56:	sub    edi,DWORD PTR [ecx-0x1639f6]
  411a5c:	jmp    0x179c5b6
  411a61:	mov    esi,0xf7825e1
  411a66:	and    al,0x3
  411a68:	addr16 inc eax
  411a6a:	loopne 0x411a16
  411a6c:	pop    esp
  411a6d:	sahf   
  411a6e:	sub    ah,BYTE PTR [edi]
  411a70:	mov    ds:0x406d25f8,eax
  411a75:	jl     0x411a62
  411a77:	jno    0x411a0e
  411a79:	fimul  WORD PTR [esi+0x2ed6df9c]
  411a7f:	in     al,dx
  411a80:	ss jle 0x411a10
  411a83:	mov    eax,0xbfbfdea8
  411a88:	clc    
  411a89:	cmp    edx,0x9eed7cca
  411a8f:	mov    bh,0xdc
  411a91:	sbb    DWORD PTR [esi-0x1],edi
  411a94:	aaa    
  411a95:	sti    
  411a96:	neg    DWORD PTR [edx+0x25c69ec6]
  411a9c:	sahf   
  411a9d:	xchg   edi,eax
  411a9e:	and    al,0xee
  411aa0:	sbb    ah,BYTE PTR [esi-0x41]
  411aa3:	push   eax
  411aa4:	dec    esp
  411aa5:	mov    ch,0x1
  411aa7:	mov    eax,0x7d5cec18
  411aac:	rcr    BYTE PTR [esi-0x69],0xfd
  411ab0:	ret    
  411ab1:	std    
  411ab2:	sub    eax,0xb61ba7cd
  411ab7:	xchg   edi,eax
  411ab8:	push   ds
  411ab9:	outs   dx,DWORD PTR ds:[esi]
  411aba:	lea    ebp,[edi]
  411abc:	cmp    eax,ebx
  411abe:	cmp    dh,BYTE PTR [esi]
  411ac0:	push   edx
  411ac1:	pop    eax
  411ac2:	test   eax,0xdb5e3041
  411ac7:	fldcw  WORD PTR [edx]
  411ac9:	push   ecx
  411aca:	jne    0x411ae2
  411acc:	leave  
  411acd:	jno    0x411a9b
  411acf:	lea    edx,ds:0x2800a4b
  411ad5:	rdmsr  
  411ad7:	or     BYTE PTR [eax],bl
  411ad9:	gs cs jae 0x411a82
  411add:	in     al,0x1a
  411adf:	icebp  
  411ae0:	sbb    al,0x85
  411ae2:	(bad)  
  411ae3:	xchg   edx,eax
  411ae4:	rol    DWORD PTR [eax-0x4],1
  411ae7:	ss xor esp,esi
  411aea:	sub    DWORD PTR [eax-0x54],ecx
  411aed:	or     edi,DWORD PTR [esp+esi*4]
  411af0:	and    DWORD PTR [ebx-0x36442108],edi
  411af6:	mov    ebp,0x76ccacc1
  411afb:	iret   
  411afc:	mov    dh,0x24
  411afe:	push   cs
  411aff:	and    ah,BYTE PTR [esp+esi*8+0x7bf4b5e3]
  411b06:	imul   edi,DWORD PTR [edx-0x68]
  411b0a:	cdq    
  411b0b:	xchg   esp,eax
  411b0c:	lahf   
  411b0d:	cs push ds
  411b0f:	(bad)  
  411b10:	jp     0x411b19
  411b12:	bound  edi,QWORD PTR [edx]
  411b14:	sub    ebx,DWORD PTR [eax+0x5f]
  411b17:	adc    eax,0xe41fe631
  411b1c:	mov    bl,0xa5
  411b1e:	push   edi
  411b1f:	add    al,0x4b
  411b21:	sbb    eax,0xb9d0ac6e
  411b26:	pop    eax
  411b27:	pop    edx
  411b28:	dec    ebx
  411b29:	xor    al,0x50
  411b2b:	test   BYTE PTR [eax-0x6e],cl
  411b2e:	xchg   edi,eax
  411b2f:	adc    edx,DWORD PTR [esi+eiz*1-0x140843d7]
  411b36:	pop    edx
  411b37:	sbb    BYTE PTR [esp+ebx*2+0xd],dh
  411b3b:	adc    edx,DWORD PTR [ecx+0x606e7076]
  411b41:	sbb    al,0x20
  411b43:	fucomip st,st(5)
  411b45:	fs repz add al,0xc7
  411b49:	bound  edi,QWORD PTR [edx]
  411b4b:	out    0xf8,eax
  411b4d:	xchg   ecx,eax
  411b4e:	and    ch,BYTE PTR [edx]
  411b50:	(bad)  
  411b51:	(bad)  
  411b52:	lods   eax,DWORD PTR ds:[esi]
  411b53:	xchg   edx,eax
  411b54:	shr    BYTE PTR [esi],cl
  411b56:	mov    cs,WORD PTR [ecx+0x467b54a4]
  411b5c:	pop    esi
  411b5d:	add    BYTE PTR ds:0x556c4ded,ch
  411b63:	jno    0x411afb
  411b65:	fcomip st,st(2)
  411b67:	add    dl,al
  411b69:	and    cl,BYTE PTR [esi+0x56e0c658]
  411b6f:	push   esi
  411b70:	call   0x45a70d96
  411b75:	push   ds
  411b76:	jl     0x411b3b
  411b78:	ins    DWORD PTR es:[edi],dx
  411b79:	mov    WORD PTR ds:0x29879df9,fs
  411b7f:	xor    ch,BYTE PTR [edi-0x158ed2d3]
  411b85:	push   ds
  411b86:	(bad)  
  411b87:	lahf   
  411b88:	jl     0x411b78
  411b8a:	inc    edx
  411b8b:	ins    DWORD PTR es:[edi],dx
  411b8c:	xlat   BYTE PTR ds:[ebx]
  411b8d:	sbb    edi,DWORD PTR [edi*1+0x1dd100cc]
  411b94:	jle    0x411bb1
  411b96:	test   esp,0x1c49c545
  411b9c:	inc    esp
  411b9d:	fstp   QWORD PTR [eax]
  411b9f:	arpl   bp,bp
  411ba1:	push   0xffffffc0
  411ba3:	mov    BYTE PTR [esi+0x346a3ef0],bh
  411ba9:	(bad)  
  411baa:	jg     0x411bd3
  411bac:	or     eax,DWORD PTR [ebp-0x2d]
  411baf:	inc    ecx
  411bb0:	cmp    dh,bh
  411bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bb3:	into   
  411bb4:	test   eax,ebp
  411bb6:	es add ebx,edi
  411bb9:	or     DWORD PTR [edx-0x29],ecx
  411bbc:	xor    al,0xf2
  411bbe:	and    esi,ebp
  411bc0:	add    eax,0x65299e8d
  411bc5:	in     eax,dx
  411bc6:	pop    ds
  411bc7:	and    al,0xe6
  411bc9:	icebp  
  411bca:	inc    ecx
  411bcb:	jg     0x411c07
  411bcd:	jp     0x411bc8
  411bcf:	jno    0x411b78
  411bd1:	xor    eax,0x57dc5aaf
  411bd6:	rcr    BYTE PTR [esi],1
  411bd8:	out    0xca,al
  411bda:	mov    fs,ecx
  411bdc:	call   0x280539d0
  411be1:	nop
  411be2:	push   es
  411be3:	adc    ebx,DWORD PTR [ebp-0x55368066]
  411be9:	bound  ecx,QWORD PTR [eax+0x50]
  411bec:	out    dx,eax
  411bed:	jb     0x411b73
  411bef:	add    al,0x1a
  411bf1:	jo     0x411c33
  411bf3:	push   0x22
  411bf5:	jns    0x411ba5
  411bf7:	sbb    eax,0xd67f3a65
  411bfc:	clc    
  411bfd:	jne    0x411bbb
  411bff:	jmp    0x411c0d
  411c01:	pop    es
  411c02:	call   0xf77fee06
  411c07:	icebp  
  411c08:	(bad)  
  411c09:	jbe    0x411c63
  411c0b:	add    ch,BYTE PTR [esi+0x37]
  411c0e:	jle    0x411c68
  411c10:	xor    eax,0x6f92e742
  411c15:	adc    ah,dl
  411c17:	loope  0x411bed
  411c19:	adc    ch,cl
  411c1b:	lds    esp,FWORD PTR [edx+eax*4]
  411c1e:	mov    dl,dh
  411c20:	clc    
  411c21:	xchg   BYTE PTR [edx+eiz*8-0x6],bh
  411c25:	dec    ebp
  411c26:	pop    edx
  411c27:	mov    ds:0xa30c098d,al
  411c2c:	mov    eax,0xd84a0831
  411c31:	mov    ecx,0xe3d5dd72
  411c36:	dec    edi
  411c37:	cdq    
  411c38:	mov    ds:0x23c6aa83,al
  411c3d:	lds    ecx,FWORD PTR [ecx-0x2de26249]
  411c43:	and    DWORD PTR [edi+0x529fdc7c],ecx
  411c49:	out    0xb5,eax
  411c4b:	add    DWORD PTR [edx+0x4e],ecx
  411c4e:	sub    BYTE PTR [ebx],dh
  411c50:	cdq    
  411c51:	scas   eax,DWORD PTR es:[edi]
  411c52:	test   DWORD PTR [edx+ebx*4+0x48],ebp
  411c56:	cwde   
  411c57:	push   0x2cf33a88
  411c5c:	je     0x411cb3
  411c5e:	adc    al,0x80
  411c60:	jp     0x411c09
  411c62:	pop    ebp
  411c63:	rcr    DWORD PTR [esi],0x52
  411c66:	mov    edi,0x1b714536
  411c6b:	push   edi
  411c6c:	dec    esi
  411c6d:	dec    edi
  411c6e:	ror    cl,1
  411c70:	push   ebp
  411c71:	scas   eax,DWORD PTR es:[edi]
  411c72:	or     al,0x53
  411c74:	sub    bh,ch
  411c76:	jge    0x411c9a
  411c78:	pop    ebx
  411c79:	push   ebp
  411c7a:	pusha  
  411c7b:	pushf  
  411c7c:	stos   DWORD PTR es:[edi],eax
  411c7d:	jl     0x411cc6
  411c7f:	sbb    al,0x90
  411c81:	jl     0x411cf9
  411c83:	mov    ebx,0x52176cf7
  411c88:	call   0x7f325722
  411c8d:	push   edx
  411c8e:	push   ebx
  411c8f:	stc    
  411c90:	mov    esp,0x10808c02
  411c95:	mov    ch,0x7e
  411c97:	shl    DWORD PTR [edx+0x4230434b],cl
  411c9d:	sub    DWORD PTR [edi+0x60],esi
  411ca0:	push   ds
  411ca1:	lahf   
  411ca2:	or     al,0xf9
  411ca4:	jbe    0x411ceb
  411ca6:	push   ds
  411ca7:	rcr    ebp,0x16
  411caa:	loope  0x411d2b
  411cac:	pop    ss
  411cad:	into   
  411cae:	adc    DWORD PTR [edi],ebp
  411cb0:	and    DWORD PTR [esi],0x8b754663
  411cb6:	and    eax,0xf9fdcac7
  411cbb:	cmp    al,0xd6
  411cbd:	test   ecx,eax
  411cbf:	out    dx,al
  411cc0:	cwde   
  411cc1:	xchg   BYTE PTR [eax-0x36e7caef],ch
  411cc7:	push   0x8329ca0d
  411ccc:	repnz (bad) 
  411cce:	cwde   
  411ccf:	idiv   DWORD PTR [esi+0xa]
  411cd2:	das    
  411cd3:	lods   al,BYTE PTR ds:[esi]
  411cd4:	bound  edi,QWORD PTR [ebp+0xc342891]
  411cda:	cmp    eax,0x18d6d06d
  411cdf:	push   edx
  411ce0:	test   edi,0xed527d65
  411ce6:	pop    ss
  411ce7:	sub    ecx,ecx
  411ce9:	add    al,0x49
  411ceb:	mul    ecx
  411ced:	leave  
  411cee:	stos   DWORD PTR es:[edi],eax
  411cef:	std    
  411cf0:	clc    
  411cf1:	fsub   QWORD PTR [eax]
  411cf3:	daa    
  411cf4:	xchg   esp,eax
  411cf5:	sbb    al,0xa6
  411cf7:	call   0xfedf7885
  411cfc:	std    
  411cfd:	push   0x2be0595
  411d02:	(bad)  
  411d03:	adc    BYTE PTR ds:0x27d21aaa,bh
  411d09:	jnp    0x411d00
  411d0b:	loope  0x411cd5
  411d0d:	call   0xd139:0xde0a6fa6
  411d14:	add    cl,BYTE PTR [esi-0x7f]
  411d17:	adc    edx,DWORD PTR [ecx+0x25286a3b]
  411d1d:	or     BYTE PTR [edx+ebx*8-0x61],bl
  411d21:	pop    edi
  411d22:	pop    esi
  411d23:	dec    esi
  411d24:	sbb    dl,BYTE PTR [edx+0x3a753ee7]
  411d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d2b:	scas   eax,DWORD PTR es:[edi]
  411d2c:	jae    0x411d81
  411d2e:	fisub  WORD PTR [esi+0x41]
  411d31:	xor    eax,0x14d051e0
  411d36:	or     al,0xc4
  411d38:	sub    BYTE PTR [eax],0xcb
  411d3b:	test   al,0xc6
  411d3d:	xor    BYTE PTR ds:0x59370b,bh
  411d43:	xchg   ecx,eax
  411d44:	or     ebx,edi
  411d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d47:	inc    esi
  411d48:	mov    eax,0x9c0045c3
  411d4d:	xor    ch,al
  411d4f:	ret    0xae8b
  411d52:	arpl   di,dx
  411d54:	(bad)  
  411d55:	jle    0x411d3b
  411d57:	and    ch,BYTE PTR es:[eax]
  411d5a:	sbb    edx,ebx
  411d5c:	(bad)  
  411d5d:	and    eax,0x6fbe11e9
  411d62:	jecxz  0x411cf5
  411d64:	sbb    eax,DWORD PTR ds:0xe8076c99
  411d6a:	or     DWORD PTR [ecx+eiz*1],esi
  411d6d:	jmp    0x411d87
  411d6f:	or     ecx,DWORD PTR [edx]
  411d71:	xchg   edx,eax
  411d72:	int    0x58
  411d74:	cmp    eax,0x6d865f55
  411d79:	and    ch,BYTE PTR [eax-0x28564a9e]
  411d7f:	cmp    DWORD PTR [ecx+0x3],edi
  411d82:	nop
  411d83:	push   esi
  411d84:	pop    es
  411d85:	imul   esp,DWORD PTR fs:[ebx-0x17],0xf8772166
  411d8d:	push   ds
  411d8e:	mov    eax,DWORD PTR [edx+0x13]
  411d91:	pop    edi
  411d92:	ror    DWORD PTR [ebp-0x2],1
  411d95:	fxch   st(5)
  411d97:	leave  
  411d98:	loopne 0x411d52
  411d9a:	jmp    0xcb4d8534
  411d9f:	pushf  
  411da0:	cld    
  411da1:	cmp    ecx,edx
  411da3:	jb     0x40f9d0
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	in     al,0x6c
  412036:	pop    ebx
  412037:	sbb    BYTE PTR [ecx+ecx*8-0x675ab7eb],0xba
  41203f:	ret    
  412040:	(bad)  
  412041:	imul   ebx,DWORD PTR [eax+0x159],0x0
  412048:	inc    ebx
  412049:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41204d:	jb     0x4120c1
  41204f:	outs   dx,BYTE PTR gs:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	mov    bh,al
  415640:	lds    edx,FWORD PTR [ebp+0xd479]
  415646:	cmc    
  415647:	add    al,0x0
  415649:	add    BYTE PTR [eax+ecx*4-0x28],bh
  41564d:	std    
  41564e:	mov    ebp,0xb847ee09
  415653:	stos   BYTE PTR es:[edi],al
  415654:	pop    ds
  415655:	mov    ebx,DWORD PTR [ecx+0x44]
  415658:	and    eax,ebx
  41565a:	rcl    BYTE PTR [edi+0x69bd39a],0xdf
  415661:	clc    
  415662:	ficom  WORD PTR [esp+edi*2]
  415665:	(bad)  
  415666:	pcmpeqd mm6,QWORD PTR [eax-0x12]
  41566a:	rcl    DWORD PTR [ecx+ebx*4+0x5e],0x8f
  41566f:	ret    0xebc2
  415672:	test   edx,eax
  415674:	in     al,dx
  415675:	sub    eax,0x3c4b27af
  41567a:	sub    DWORD PTR [esi-0x5d1df29f],eax
  415680:	mov    ecx,0xd3b803a3
  415685:	cmc    
  415686:	ins    DWORD PTR es:[edi],dx
  415687:	fcmovnb st,st(2)
  415689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41568a:	lods   eax,DWORD PTR ds:[esi]
  41568b:	push   ds
  41568c:	jbe    0x4156c3
  41568e:	jbe    0x4156d0
  415690:	xchg   ebx,eax
  415691:	xor    al,bh
  415693:	arpl   WORD PTR [edx-0x7a],cx
  415696:	cmp    al,0xa5
  415698:	shr    ecx,1
  41569a:	shl    esp,1
  41569c:	sbb    eax,0xdddc58f0
  4156a1:	(bad)  
  4156a2:	jg     0x41567e
  4156a4:	sahf   
  4156a5:	add    al,0xb1
  4156a7:	xor    edx,DWORD PTR [eax-0x29]
  4156aa:	bound  ecx,QWORD PTR [eax-0x3d]
  4156ad:	jecxz  0x4156f5
  4156af:	imul   esp,DWORD PTR [eax],0x9
  4156b2:	add    dl,BYTE PTR [ebx+eiz*4+0x2bce0ece]
  4156b9:	xchg   ecx,eax
  4156ba:	sub    ah,cl
  4156bc:	adc    al,0x66
  4156be:	xchg   edx,eax
  4156bf:	daa    
  4156c0:	cmp    DWORD PTR [ecx+ecx*4-0x4],edi
  4156c4:	jae    0x4156e1
  4156c6:	mov    ebp,0x599cb464
  4156cb:	xor    BYTE PTR [esi-0x4ec67e23],bh
  4156d1:	or     bh,cl
  4156d3:	pop    ecx
  4156d4:	add    DWORD PTR [ecx+edx*4+0x39e4c20e],edx
  4156db:	fs int3 
  4156dd:	(bad)  
  4156de:	push   edx
  4156df:	jns    0x415680
  4156e1:	inc    ebx
  4156e2:	fdivr  QWORD PTR [ebp-0x8f3e5de]
  4156e8:	addr16 mov al,ds:0x6968
  4156ec:	loope  0x41576a
  4156ee:	add    ebx,DWORD PTR [esi+0x3b]
  4156f1:	adc    BYTE PTR [edi],dl
  4156f3:	mov    ch,BYTE PTR [edi]
  4156f5:	mov    dl,0xb1
  4156f7:	push   es
  4156f8:	sub    BYTE PTR [edi+0x6e],cl
  4156fb:	mov    ebp,0x52ff412d
  415700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415701:	pop    es
  415702:	ds push ss
  415704:	(bad)  [edi-0x7599d842]
  41570a:	sub    BYTE PTR [bp+di],0x99
  41570e:	iret   
  41570f:	hlt    
  415710:	test   edx,edi
  415712:	stos   DWORD PTR es:[edi],eax
  415713:	jbe    0x415701
  415715:	hlt    
  415716:	sub    DWORD PTR [esi-0x2b],0x2
  41571a:	int    0xbb
  41571c:	lock xor esi,DWORD PTR [edx-0x228c2224]
  415723:	dec    eax
  415724:	scas   eax,DWORD PTR es:[edi]
  415725:	loopne 0x415751
  415727:	or     al,0x51
  415729:	mov    ebp,0x38cc5f97
  41572e:	add    bh,cl
  415730:	pop    ecx
  415731:	add    al,0x63
  415733:	pop    es
  415734:	fcomp  DWORD PTR [ebx-0x58dcd25e]
  41573a:	clc    
  41573b:	(bad)  
  41573c:	push   ds
  41573d:	das    
  41573e:	push   edx
  41573f:	dec    edx
  415740:	xchg   esi,eax
  415741:	pop    ss
  415742:	lock cmp ebx,edi
  415745:	ins    BYTE PTR es:[edi],dx
  415746:	cmp    BYTE PTR [edi],cl
  415748:	adc    al,0x80
  41574a:	std    
  41574b:	(bad)  
  41574c:	mov    ds,eax
  41574e:	adc    BYTE PTR [esi],0xab
  415751:	dec    ebp
  415752:	mov    ebx,0xdd872885
  415757:	lock dec esp
  415759:	or     BYTE PTR [esi-0x5a13f438],0x5d
  415760:	xchg   esi,eax
  415761:	xor    esi,DWORD PTR [ebx]
  415763:	lahf   
  415764:	pop    ds
  415765:	push   ebp
  415766:	retf   
  415767:	and    bl,BYTE PTR [edi+0x1b57604e]
  41576d:	(bad)  
  41576e:	shl    DWORD PTR [esi+0xbd29958],0x28
  415775:	xor    dl,BYTE PTR [esi+0x6e]
  415778:	mov    ebx,0x6de1d4fc
  41577d:	lea    edx,[edi+0x6f]
  415780:	aaa    
  415781:	addr16 jo 0x415706
  415784:	sub    BYTE PTR [ecx-0x4b67eb29],bl
  41578a:	(bad)  
  41578b:	icebp  
  41578c:	cmp    dh,dh
  41578e:	call   FWORD PTR [ecx]
  415790:	cmp    edx,ebp
  415792:	cwde   
  415793:	popf   
  415794:	inc    esp
  415795:	daa    
  415796:	das    
  415797:	das    
  415798:	(bad)  
  415799:	neg    BYTE PTR [edx+0x5a]
  41579c:	loopne 0x41573a
  41579e:	out    dx,al
  41579f:	sbb    al,0x2
  4157a1:	rcl    BYTE PTR [edi],1
  4157a3:	jmp    0x415771
  4157a5:	xor    BYTE PTR [ebx-0x4656d802],cl
  4157ab:	dec    ebp
  4157ac:	xchg   ch,dh
  4157ae:	(bad)  
  4157b0:	into   
  4157b1:	stos   BYTE PTR es:[edi],al
  4157b2:	retf   0xddb9
  4157b5:	pop    es
  4157b6:	sub    DWORD PTR ds:0x5086c9d2,ebx
  4157bc:	hlt    
  4157bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157be:	adc    ah,BYTE PTR [ebp-0x5c]
  4157c1:	and    al,0xa3
  4157c3:	int3   
  4157c4:	or     ebp,esi
  4157c6:	ss add eax,0x40430504
  4157cc:	adc    eax,0xa8bdcaf9
  4157d1:	push   0x27fab8d4
  4157d6:	mov    ebx,0xeac41cc7
  4157db:	jp     0x415814
  4157dd:	pusha  
  4157de:	or     DWORD PTR [esi],0xc6109a2b
  4157e4:	pop    es
  4157e5:	push   ecx
  4157e6:	xchg   BYTE PTR [ebp+0x4f],al
  4157e9:	pop    edi
  4157ea:	in     al,0x46
  4157ec:	cmp    dh,BYTE PTR [edx-0x46]
  4157ef:	stos   DWORD PTR es:[edi],eax
  4157f0:	jb     0x41584a
  4157f2:	aam    0x29
  4157f4:	pop    ebp
  4157f5:	xor    BYTE PTR ds:0x56b331ba,al
  4157fb:	icebp  
  4157fc:	xchg   esi,eax
  4157fd:	pop    esp
  4157fe:	outs   dx,BYTE PTR ds:[esi]
  4157ff:	adc    dl,BYTE PTR [eax]
  415801:	xor    ebp,esp
  415803:	retf   
  415804:	adc    BYTE PTR [ebx],0x80
  415807:	imul   esp,DWORD PTR [esi-0x36a98fa6],0x32ed3b14
  415811:	push   eax
  415812:	mov    BYTE PTR [edi],al
  415814:	sub    esp,DWORD PTR [eax+0x31]
  415817:	in     al,0x39
  415819:	push   edx
  41581a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41581b:	sti    
  41581c:	bound  edx,QWORD PTR [esi+0x56ba11d6]
  415822:	lock adc esp,DWORD PTR [eax]
  415825:	xlat   BYTE PTR ds:[ebx]
  415826:	xlat   BYTE PTR ss:[ebx]
  415828:	aaa    
  415829:	jnp    0x415823
  41582b:	ret    0xe20c
  41582e:	dec    eax
  41582f:	(bad)  [eax]
  415831:	cwde   
  415832:	rcl    DWORD PTR [ebx],0x2c
  415835:	test   DWORD PTR [eax],esi
  415837:	sub    DWORD PTR [ebx+0x5db4e32a],esi
  41583d:	cdq    
  41583e:	arpl   WORD PTR [ecx-0x71],di
  415841:	xchg   ebp,eax
  415842:	stc    
  415843:	aam    0xaf
  415845:	ds loop 0x41589b
  415848:	pop    edx
  415849:	jae    0x4158ba
  41584b:	(bad)  
  41584c:	adc    ecx,ebp
  41584e:	xchg   edi,eax
  41584f:	mov    ah,0xf
  415851:	sub    eax,0xe244a16f
  415856:	aam    0x34
  415858:	shl    DWORD PTR [edi+edx*8],1
  41585b:	(bad)
  41585f:	(bad)  
  415860:	or     al,0x6
  415862:	and    ebp,DWORD PTR [edx-0x55e19ce4]
  415868:	popf   
  415869:	pop    esi
  41586a:	fist   WORD PTR [eax-0x5e]
  41586d:	mov    edx,0x184419a3
  415872:	cmp    eax,0xc5cfc556
  415877:	call   0xb678f822
  41587c:	retf   
  41587d:	push   ds
  41587e:	mov    eax,ds:0xcd60ec93
  415883:	push   0x64
  415885:	test   al,0x5f
  415887:	dec    edi
  415888:	mov    ch,0x79
  41588a:	out    dx,al
  41588b:	adc    BYTE PTR [edx],cl
  41588d:	jle    0x4158fc
  41588f:	dec    ecx
  415890:	data16 out dx,al
  415892:	adc    eax,0x6a7edbec
  415897:	pop    eax
  415898:	pop    edi
  415899:	popf   
  41589a:	pop    esp
  41589b:	fstp   TBYTE PTR [edx-0x7425630d]
  4158a1:	pop    esp
  4158a2:	mov    DWORD PTR [ebx-0x2a],ebp
  4158a5:	add    al,0xc2
  4158a7:	push   cs
  4158a8:	push   es
  4158a9:	mov    cl,0x5e
  4158ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ac:	int    0x40
  4158ae:	mov    al,ds:0xed6b198b
  4158b3:	outs   dx,DWORD PTR ds:[esi]
  4158b4:	dec    esi
  4158b5:	add    BYTE PTR [esi],0xef
  4158b8:	inc    ecx
  4158b9:	adc    ebx,ebp
  4158bb:	cmp    ecx,edi
  4158bd:	loopne 0x41589b
  4158bf:	add    ah,BYTE PTR [ebx-0xf3f5994]
  4158c5:	mov    edx,0xe6cb5e12
  4158ca:	xchg   esi,eax
  4158cb:	add    BYTE PTR [edi+0x2f],ah
  4158ce:	adc    eax,0xed652df
  4158d3:	pop    esp
  4158d4:	dec    ebp
  4158d5:	lahf   
  4158d6:	jmp    0x4ce3:0x554458da
  4158dd:	mov    dh,0x25
  4158df:	dec    eax
  4158e0:	hlt    
  4158e1:	sbb    al,bl
  4158e3:	push   ecx
  4158e4:	sub    dl,ah
  4158e6:	int    0xc5
  4158e8:	jae    0x415904
  4158ea:	sub    al,0x89
  4158ec:	pusha  
  4158ed:	adc    BYTE PTR [edi+0x5b],ah
  4158f0:	outs   dx,BYTE PTR ds:[esi]
  4158f1:	adc    eax,0x6f3558ca
  4158f6:	jae    0x4158e2
  4158f8:	sbb    eax,0xd730e7fd
  4158fd:	cmp    eax,0x270729da
  415902:	push   edx
  415903:	jl     0x4158fb
  415905:	outs   dx,BYTE PTR ds:[esi]
  415906:	and    cl,BYTE PTR [eax-0x107b892e]
  41590c:	aas    
  41590d:	jbe    0x415978
  41590f:	push   0xf64394f9
  415914:	xchg   ebx,eax
  415915:	mov    al,BYTE PTR [edi+0x7b]
  415918:	fwait
  415919:	pop    ss
  41591a:	sub    al,0x34
  41591c:	or     al,BYTE PTR ds:[ebx-0x6b]
  415920:	xor    edx,edx
  415922:	lods   eax,DWORD PTR ds:[esi]
  415923:	ret    
  415924:	adc    DWORD PTR [ecx+0x3d],ebp
  415927:	dec    edi
  415928:	jnp    0x415928
  41592a:	ret    0x1b4a
  41592d:	mov    DWORD PTR [edx+0x10824d0a],ebp
  415933:	or     DWORD PTR [esi],edi
  415935:	sub    eax,DWORD PTR [ecx-0x3f]
  415938:	jl     0x4158e2
  41593a:	outs   dx,BYTE PTR ds:[esi]
  41593b:	aam    0x8
  41593d:	jne    0x4159bd
  41593f:	enter  0xda77,0xd9
  415943:	dec    edx
  415944:	inc    esi
  415945:	adc    eax,0xb1b4e659
  41594a:	sub    dl,ah
  41594c:	mov    al,0xb9
  41594e:	dec    edx
  41594f:	dec    ebx
  415950:	or     BYTE PTR [ebp-0x56],dh
  415953:	mov    al,0x98
  415955:	sub    DWORD PTR [ecx+ecx*2],esp
  415958:	rcr    BYTE PTR [edx+0x18a3fba9],0xe5
  41595f:	mov    eax,ds:0x440e4012
  415964:	addr16 push edi
  415966:	or     eax,0x3668970d
  41596b:	cmp    bh,al
  41596d:	xchg   ebx,eax
  41596e:	ficom  DWORD PTR [ebx-0x28]
  415971:	stos   DWORD PTR es:[edi],eax
  415972:	fisub  DWORD PTR [esi]
  415974:	shl    BYTE PTR [eax],1
  415976:	mov    bh,0xb0
  415978:	xchg   DWORD PTR [ebx],ebx
  41597a:	dec    eax
  41597b:	rcl    DWORD PTR [eax],cl
  41597d:	repz sub DWORD PTR [edx],0xffffff85
  415981:	repnz inc esp
  415983:	xor    ecx,DWORD PTR [esp+ebx*8]
  415986:	mov    al,0x88
  415988:	dec    edi
  415989:	dec    edi
  41598a:	push   ebx
  41598b:	push   ds
  41598c:	mov    edi,0x9e539a97
  415991:	cdq    
  415992:	call   0x70e48ebd
  415997:	cmp    ch,BYTE PTR [edx+edi*1+0xb81786]
  41599e:	xlat   BYTE PTR ds:[ebx]
  41599f:	mov    ebp,ebp
  4159a1:	cmp    eax,0x606d1be7
  4159a6:	dec    eax
  4159a7:	sbb    al,0x90
  4159a9:	or     edi,eax
  4159ab:	sbb    ecx,esi
  4159ad:	add    BYTE PTR [esi-0x3a7a7412],dh
  4159b3:	mov    ds:0x3d576a36,eax
  4159b8:	ret    0xd39e
  4159bb:	sbb    DWORD PTR [ebp-0x12],edx
  4159be:	rcl    BYTE PTR [ecx-0x29],0x63
  4159c2:	dec    edx
  4159c3:	sub    al,0xf8
  4159c5:	push   edi
  4159c6:	mov    al,0x71
  4159c8:	mov    esi,0x66d227fe
  4159cd:	mov    ds:0x590ff716,al
  4159d2:	xor    ah,dl
  4159d4:	dec    edx
  4159d5:	pop    edi
  4159d6:	nop
  4159d7:	sbb    DWORD PTR [edi],0x9c109454
  4159dd:	loopne 0x415a1d
  4159df:	xchg   edi,ecx
  4159e1:	fdivr  DWORD PTR [edi]
  4159e3:	fcmovbe st,st(6)
  4159e5:	adc    al,0xa9
  4159e7:	mov    ebp,0xe14bb329
  4159ec:	pop    esp
  4159ed:	or     BYTE PTR [ebx-0x10aad3f2],dh
  4159f3:	mov    WORD PTR [esi],?
  4159f5:	inc    edx
  4159f6:	clc    
  4159f7:	iret   
  4159f8:	jmp    0x415a27
  4159fa:	fcmovnbe st,st(3)
  4159fc:	fadd   QWORD PTR [esi*4-0xaf2fbf5]
  415a03:	(bad)  
  415a04:	fcom   DWORD PTR [esi]
  415a06:	pop    ds
  415a07:	cmp    al,0xa4
  415a09:	popa   
  415a0a:	jge    0x415a28
  415a0c:	out    0x35,al
  415a0e:	lds    edx,FWORD PTR [edx+esi*4+0x31]
  415a12:	cmp    eax,0x3f4e7160
  415a17:	cld    
  415a18:	adc    eax,0xdb2267e7
  415a1d:	xchg   edx,eax
  415a1e:	test   eax,0x87d0fc51
  415a23:	or     BYTE PTR [ebx+0x6f55b64d],bl
  415a29:	mov    al,ds:0xc48c3614
  415a2e:	adc    DWORD PTR [edi],edx
  415a30:	xor    BYTE PTR [eax+eax*8],0xd1
  415a34:	icebp  
  415a35:	lds    edi,FWORD PTR [edx-0x57]
  415a38:	xchg   DWORD PTR [esi],eax
  415a3a:	mov    al,0x27
  415a3c:	sbb    BYTE PTR [ebx+0x118ed84a],0x32
  415a43:	shl    DWORD PTR [edx+ebp*2+0x22],cl
  415a47:	in     eax,0xec
  415a49:	(bad)  
  415a4a:	fcom   QWORD PTR [esp+edx*2]
  415a4d:	clc    
  415a4e:	mov    ebp,0x188ac350
  415a53:	jge    0x415ace
  415a55:	mov    ecx,0x59b007d
  415a5a:	sbb    al,0x30
  415a5c:	sbb    eax,0x21952af6
  415a61:	not    BYTE PTR [eax+0x28b155df]
  415a67:	cld    
  415a68:	jmp    0x544ed344
  415a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a6e:	and    bl,BYTE PTR [edi+0x5d3d4c69]
  415a74:	cli    
  415a75:	dec    ecx
  415a76:	sbb    esp,DWORD PTR [esi]
  415a78:	push   ebp
  415a79:	push   edx
  415a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a7b:	xchg   esi,eax
  415a7c:	in     eax,0x5b
  415a7e:	dec    ecx
  415a7f:	jl     0x415a22
  415a81:	out    dx,al
  415a82:	nop
  415a83:	jmp    0x883f684c
  415a88:	pop    eax
  415a89:	int    0xae
  415a8b:	pop    esi
  415a8c:	outs   dx,BYTE PTR ds:[esi]
  415a8d:	mov    dh,0xa9
  415a8f:	xchg   BYTE PTR [edx],cl
  415a91:	and    dh,ch
  415a93:	mov    dl,0x66
  415a95:	sbb    al,0xc9
  415a97:	jmp    0x70a27155
  415a9c:	rcr    BYTE PTR ds:0xc9d1fe0c,1
  415aa2:	xchg   ebp,eax
  415aa3:	add    BYTE PTR [ecx],dh
  415aa5:	pop    es
  415aa6:	pop    ebp
  415aa7:	sub    BYTE PTR [ebx-0x466097e0],dl
  415aad:	mov    edi,0x2189559b
  415ab2:	pop    esp
  415ab3:	push   eax
  415ab4:	pop    ebp
  415ab5:	push   esp
  415ab6:	les    esp,FWORD PTR [edi-0x74]
  415ab9:	cmp    al,0xc2
  415abb:	fist   DWORD PTR [eax+0x6335b369]
  415ac1:	addr16 int3 
  415ac3:	or     DWORD PTR [eax+0x7a6a8310],eax
  415ac9:	cmp    eax,0xd19a10e
  415ace:	pop    edx
  415acf:	cld    
  415ad0:	mov    bl,0xfb
  415ad2:	pop    ebx
  415ad3:	js     0x74769f85
  415ad9:	xor    eax,0x9fefb649
  415ade:	push   cs
  415adf:	out    0x9d,al
  415ae1:	aad    0xf
  415ae3:	(bad)
  415ae6:	jmp    0x415b40
  415ae8:	push   edi
  415ae9:	sti    
  415aea:	jo     0x415aa9
  415aec:	stos   BYTE PTR es:[edi],al
  415aed:	adc    dh,BYTE PTR [edi]
  415aef:	fadd   DWORD PTR [esi+esi*1-0x3ce4877e]
  415af6:	sbb    DWORD PTR [ecx+0x74],esp
  415af9:	sbb    DWORD PTR ds:0x2978c528,eax
  415aff:	test   al,0x5a
  415b01:	jle    0x415aa0
  415b03:	ins    DWORD PTR es:[edi],dx
  415b04:	push   edx
  415b05:	jmp    0xe31:0x7b3fc4b9
  415b0c:	dec    ebx
  415b0d:	mov    edx,0x762a406c
  415b12:	add    al,0xf1
  415b14:	xor    DWORD PTR [edi-0x63848be7],ecx
  415b1a:	sub    eax,0x51d4651
  415b1f:	cs out 0x32,al
  415b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b23:	cli    
  415b24:	add    eax,0x7fcb0dad
  415b29:	hlt    
  415b2a:	fs mov esp,0xa9da4e30
  415b30:	mov    es,WORD PTR [edx+0x3f465c4b]
  415b36:	not    dx
  415b39:	push   0xffffff83
  415b3b:	(bad)  
  415b3c:	int3   
  415b3d:	mov    edi,ebp
  415b3f:	add    BYTE PTR [eax],al
  415b41:	add    al,al
  415b43:	push   ss
  415b44:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415b48:	fistp  DWORD PTR [edi-0x239a6a81]
  415b4e:	adc    ch,BYTE PTR [esi]
  415b50:	jecxz  0x415b4b
  415b52:	outs   dx,BYTE PTR ds:[esi]
  415b53:	fld    DWORD PTR [eax]
  415b55:	add    ch,dh
  415b57:	add    al,0x0
  415b59:	add    BYTE PTR [ebx+0x1a],cl
  415b5c:	adc    esi,DWORD PTR [esi-0x46]
  415b5f:	mov    bl,0x2e
  415b61:	pusha  
  415b62:	hlt    
  415b63:	retf   
  415b64:	mov    edx,0xc41cda2f
  415b69:	or     eax,0xdf9ed39f
  415b6e:	outs   dx,DWORD PTR ds:[esi]
  415b6f:	cdq    
  415b70:	lahf   
  415b71:	aam    0xc9
  415b73:	and    al,0xaa
  415b75:	push   eax
  415b76:	mov    dl,0xd0
  415b78:	popf   
  415b79:	and    esp,eax
  415b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b7c:	jno    0x415b8e
  415b7e:	add    al,0x83
  415b80:	cmp    BYTE PTR [edi],dh
  415b82:	cmp    BYTE PTR ds:0x32bfaa19,dh
  415b88:	pop    esi
  415b89:	adc    eax,eax
  415b8b:	pop    ecx
  415b8c:	pop    ss
  415b8d:	ja     0x415bd2
  415b8f:	xchg   BYTE PTR [edi],bh
  415b91:	mov    ds:0x57db59a4,al
  415b96:	push   ss
  415b97:	mov    ch,0x7d
  415b99:	jmp    0x415b50
  415b9b:	dec    ebx
  415b9c:	mul    BYTE PTR [ebp-0x7b]
  415b9f:	push   0x4d
  415ba1:	push   ecx
  415ba2:	mov    edi,0xffaef28
  415ba7:	push   eax
  415ba8:	stc    
  415ba9:	jnp    0x415c2a
  415bab:	mov    ds:0xa2cd364a,al
  415bb0:	pop    edi
  415bb1:	mov    es,edi
  415bb3:	push   edx
  415bb4:	xchg   esi,eax
  415bb5:	scas   eax,DWORD PTR es:[edi]
  415bb6:	ins    BYTE PTR es:[edi],dx
  415bb7:	or     cl,dl
  415bb9:	scas   eax,DWORD PTR es:[edi]
  415bba:	xchg   ecx,eax
  415bbb:	test   DWORD PTR [eax],edi
  415bbd:	lods   eax,DWORD PTR ds:[esi]
  415bbe:	fidivr WORD PTR [esp+ebp*1-0x41]
  415bc2:	rol    BYTE PTR [esi-0x66],0x2a
  415bc6:	add    bh,dh
  415bc8:	out    dx,al
  415bc9:	in     al,dx
  415bca:	cmp    edi,DWORD PTR [eax-0x44]
  415bcd:	ds mov es,esi
  415bd0:	mov    bl,0x2a
  415bd2:	fst    DWORD PTR [edi]
  415bd4:	hlt    
  415bd5:	dec    ebx
  415bd6:	neg    DWORD PTR [eax+eax*1-0x5d]
  415bda:	lea    edi,ds:0x3865ece4
  415be0:	int    0x33
  415be2:	call   0xedfce227
  415be7:	mov    DWORD PTR [edx+0x500361cd],ebp
  415bed:	sbb    al,0xe6
  415bef:	jne    0x415c37
  415bf1:	mov    dh,0xd5
  415bf3:	cdq    
  415bf4:	mov    edx,0xcfc1eb51
  415bf9:	or     dl,BYTE PTR [ecx]
  415bfb:	inc    esp
  415bfc:	ret    
  415bfd:	or     al,0x98
  415bff:	imul   edx,DWORD PTR [ecx+eiz*8],0x4158e9bd
  415c06:	(bad)
  415c0a:	pop    es
  415c0b:	mov    al,0x3
  415c0d:	sahf   
  415c0e:	test   esp,esp
  415c10:	push   ebx
  415c11:	rol    ah,cl
  415c13:	frstor [ecx-0x6]
  415c16:	cld    
  415c17:	inc    ebp
  415c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c19:	push   eax
  415c1a:	mov    dl,0x8d
  415c1c:	inc    ecx
  415c1d:	jns    0x415bde
  415c1f:	fistp  QWORD PTR [edi+0x36]
  415c22:	push   ebx
  415c23:	cli    
  415c24:	fnstenv [eax]
  415c26:	popf   
  415c27:	jge    0x415c68
  415c29:	ja     0x415c99
  415c2b:	and    DWORD PTR [edi-0x5a],ecx
  415c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c2f:	lahf   
  415c30:	lock jle 0x415bbe
  415c33:	jbe    0x415bdf
  415c35:	push   ebx
  415c36:	ret    0xf07e
  415c39:	sti    
  415c3a:	enter  0xeabc,0x9b
  415c3e:	outs   dx,BYTE PTR ds:[esi]
  415c3f:	push   esp
  415c40:	add    edx,DWORD PTR [ebp+0x67cf39b4]
  415c46:	pusha  
  415c47:	dec    esi
  415c48:	pop    ebx
  415c49:	add    al,0x6e
  415c4b:	push   edi
  415c4c:	jo     0x415c09
  415c4e:	cmp    eax,0xf825337b
  415c53:	jmp    0x554a8777
  415c58:	xchg   dl,bl
  415c5a:	dec    edi
  415c5b:	inc    edx
  415c5c:	xor    al,0xd4
  415c5e:	mov    ebx,0xf695e3c3
  415c63:	and    al,0x58
  415c65:	(bad)  
  415c67:	repnz and ah,BYTE PTR [edi-0x19fda656]
  415c6e:	push   cs
  415c6f:	pusha  
  415c70:	sub    ebx,DWORD PTR cs:[edi]
  415c73:	and    eax,0xeefbae7
  415c78:	aad    0x21
  415c7a:	mov    al,ds:0xcd67d970
  415c7f:	mov    WORD PTR [eax+0x5e5651bc],fs
  415c85:	jmp    0x415c4f
  415c87:	inc    ecx
  415c88:	fist   DWORD PTR [eax]
  415c8a:	sbb    BYTE PTR [edi+0x67],dh
  415c8d:	daa    
  415c8e:	stos   BYTE PTR es:[edi],al
  415c8f:	push   0xffffff94
  415c91:	jmp    0x9391:0xc4ee44ec
  415c98:	mov    WORD PTR [ecx+0x581ea433],ds
  415c9e:	not    DWORD PTR [esp+ebp*1+0x30c70331]
  415ca5:	fldz   
  415ca7:	mov    dh,0x60
  415ca9:	xor    bh,BYTE PTR [edi+ecx*1-0x6fae861d]
  415cb0:	out    dx,eax
  415cb1:	jp     0x415c82
  415cb3:	inc    esi
  415cb4:	aas    
  415cb5:	sub    esp,DWORD PTR [eax+ecx*1+0x4da4f13]
  415cbc:	pop    ss
  415cbd:	outs   dx,BYTE PTR ds:[esi]
  415cbe:	inc    ebx
  415cbf:	(bad)  
  415cc0:	out    0x75,eax
  415cc2:	pop    ecx
  415cc3:	xor    edx,DWORD PTR ds:0x94c6c9cd
  415cc9:	add    edi,DWORD PTR [edi]
  415ccb:	or     DWORD PTR [esp+edx*4-0x52],ecx
  415ccf:	pop    ebx
  415cd0:	adc    al,cl
  415cd2:	aaa    
  415cd3:	dec    edi
  415cd4:	mov    ebp,0xf99e10b6
  415cd9:	pop    ebx
  415cda:	jbe    0x415d27
  415cdc:	mov    ds:0x79aa377c,al
  415ce1:	lahf   
  415ce2:	xor    eax,0x9150d106
  415ce7:	pop    ds
  415ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ce9:	mov    DWORD PTR [ebx+edx*8-0x47],edx
  415ced:	mov    ds:0x4d79931a,al
  415cf2:	mov    al,ds:0xe48056d4
  415cf7:	dec    eax
  415cf8:	mov    ds:0xb237f3b6,al
  415cfd:	inc    ecx
  415cfe:	jne    0x415c8e
  415d00:	sbb    BYTE PTR [eax-0x36],0x3c
  415d04:	push   ebx
  415d05:	mov    ah,0xfe
  415d07:	stos   BYTE PTR es:[edi],al
  415d08:	xchg   ecx,eax
  415d09:	mov    eax,0x591986c6
  415d0e:	inc    esi
  415d0f:	in     al,0xc2
  415d11:	in     eax,dx
  415d12:	aaa    
  415d13:	push   eax
  415d14:	fwait
  415d15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d16:	mov    esp,0x38d2095b
  415d1b:	jmp    0x4f784bcb
  415d20:	std    
  415d21:	repz push 0x72
  415d24:	(bad)  
  415d25:	shl    BYTE PTR [ebx-0x2],1
  415d28:	sbb    bl,bl
  415d2a:	jecxz  0x415da4
  415d2c:	jecxz  0x415da0
  415d2e:	jns    0x415d2c
  415d30:	adc    BYTE PTR [edx-0x4aed1dc2],0x48
  415d37:	in     eax,0xce
  415d39:	adc    al,0xd1
  415d3b:	push   ss
  415d3c:	push   0xffffff98
  415d3e:	jmp    0xaee7:0xd3191524
  415d45:	repnz add dh,BYTE PTR [ecx-0x5dd04844]
  415d4c:	push   ecx
  415d4d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d4f:	call   0xa9b6ba58
  415d54:	cmp    al,0xf7
  415d56:	out    dx,eax
  415d57:	jne    0x415dcb
  415d59:	push   ss
  415d5a:	outs   dx,BYTE PTR ds:[esi]
  415d5b:	into   
  415d5c:	nop
  415d5d:	dec    eax
  415d5e:	pop    ss
  415d5f:	(bad)  
  415d60:	xor    BYTE PTR [edx+edx*1],cl
  415d63:	dec    edi
  415d64:	sbb    edx,esi
  415d66:	mov    ebp,0x8b35516b
  415d6b:	cli    
  415d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d6d:	mov    WORD PTR [ebp+0x1f7507cf],cs
  415d73:	fadd   QWORD PTR [edi]
  415d75:	and    al,0x2
  415d77:	xlat   BYTE PTR ds:[ebx]
  415d78:	lds    esi,FWORD PTR [eax]
  415d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d7b:	mov    bh,0x7a
  415d7d:	in     al,dx
  415d7e:	fcmovu st,st(7)
  415d80:	add    dl,BYTE PTR [ebx]
  415d82:	dec    esp
  415d83:	cld    
  415d84:	cs scas eax,DWORD PTR es:[edi]
  415d86:	adc    eax,0xa25a36c
  415d8b:	ret    
  415d8c:	fwait
  415d8d:	pop    esp
  415d8e:	pop    ss
  415d8f:	fwait
  415d90:	mov    ebx,0x12a86d59
  415d95:	loop   0x415d60
  415d97:	dec    edi
  415d98:	dec    ebp
  415d99:	jno    0x415e08
  415d9b:	adc    eax,0x47e266da
  415da0:	xor    ebx,DWORD PTR [eax]
  415da2:	mov    esp,ebx
  415da4:	mov    edi,0x360929d8
  415da9:	add    eax,0x5b9c019a
  415dae:	mov    edx,DWORD PTR [edi-0xc9dd7c3]
  415db4:	fmul   DWORD PTR [edx-0x71f85964]
  415dba:	lods   al,BYTE PTR ds:[esi]
  415dbb:	loop   0x415dc5
  415dbd:	add    al,0x38
  415dbf:	mov    dl,0xe3
  415dc1:	inc    eax
  415dc2:	stc    
  415dc3:	and    edi,esi
  415dc5:	jl     0x415e0d
  415dc7:	test   DWORD PTR [eax-0x21dbdd57],0x138d6625
  415dd1:	lahf   
  415dd2:	inc    ecx
  415dd3:	inc    edx
  415dd4:	mov    BYTE PTR [ebx+0x1b3786ab],cl
  415dda:	jmp    0x415e1d
  415ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ddd:	retf   
  415dde:	into   
  415ddf:	jecxz  0x415d90
  415de1:	retf   
  415de2:	pop    ds
  415de3:	cmp    al,0x2f
  415de5:	mov    edx,0x3df967e7
  415dea:	lea    esp,[eax+0x3c97787d]
  415df0:	xor    eax,0x6419a132
  415df5:	call   ebx
  415df7:	lock sahf 
  415df9:	rcr    DWORD PTR [edi+0x363ee21f],0x8d
  415e00:	shl    BYTE PTR [esi-0x7c],1
  415e03:	jmp    0x415dda
  415e05:	sub    ch,dl
  415e07:	inc    edi
  415e08:	sbb    ch,dl
  415e0a:	dec    ebx
  415e0c:	inc    ebp
  415e0d:	push   ss
  415e0e:	and    al,0x82
  415e10:	and    al,BYTE PTR [ebx]
  415e12:	inc    ecx
  415e13:	cwde   
  415e14:	jae    0x415ddd
  415e16:	jno    0x415e83
  415e18:	pop    ds
  415e19:	or     BYTE PTR [ebx+0x5760556f],bl
  415e1f:	nop
  415e20:	ins    BYTE PTR es:[edi],dx
  415e21:	scas   eax,DWORD PTR es:[edi]
  415e22:	push   ss
  415e23:	aad    0x9
  415e25:	mov    cl,0xf6
  415e27:	jns    0x415dc2
  415e29:	or     al,0x95
  415e2b:	hlt    
  415e2c:	lea    edx,[ebp+0x9]
  415e2f:	adc    eax,0xb95a0af2
  415e34:	mov    ds:0x516fb5ec,al
  415e39:	das    
  415e3a:	pop    ebp
  415e3b:	loopne 0x415e06
  415e3d:	jb     0x415ebe
  415e3f:	sbb    BYTE PTR [ebx-0x6b],cl
  415e42:	fwait
  415e43:	lds    edx,FWORD PTR [esi]
  415e45:	pop    eax
  415e46:	sti    
  415e47:	and    BYTE PTR [esi],al
  415e49:	fdiv   DWORD PTR [esi]
  415e4b:	mov    edi,0x75a80d34
  415e50:	mov    al,ds:0xfbfa255
  415e55:	add    al,0xb
  415e57:	call   DWORD PTR [esi+0x51]
  415e5a:	jmp    0x2c74b5cb
  415e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e60:	dec    edi
  415e61:	(bad)  
  415e62:	sbb    eax,0xccf8cc6
  415e67:	cwde   
  415e68:	push   esi
  415e69:	cld    
  415e6a:	lahf   
  415e6b:	mov    eax,ds:0x94870dda
  415e70:	xchg   ebp,eax
  415e71:	mov    ecx,DWORD PTR [eax]
  415e73:	addr16 jno 0x415ec5
  415e76:	popa   
  415e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e78:	outs   dx,BYTE PTR ds:[esi]
  415e79:	xor    eax,DWORD PTR [eax]
  415e7b:	adc    cl,BYTE PTR [edi+0xf9fccbc]
  415e81:	xchg   esp,eax
  415e82:	int    0xf6
  415e84:	mov    ah,0x83
  415e86:	push   ecx
  415e87:	inc    esi
  415e88:	leave  
  415e89:	and    al,0xce
  415e8b:	jo     0x415ed6
  415e8d:	or     cl,BYTE PTR [edx+0x6fe5bdeb]
  415e93:	mov    edx,0xb86486a6
  415e98:	stos   BYTE PTR es:[edi],al
  415e99:	adc    ch,BYTE PTR [esi+edx*1+0x291374e5]
  415ea0:	mov    ds:0x5927751,eax
  415ea5:	scas   eax,DWORD PTR es:[edi]
  415ea6:	iret   
  415ea7:	pushf  
  415ea8:	add    al,0x91
  415eaa:	jb     0x415f08
  415eac:	ja     0x415f27
  415eae:	mov    ?,WORD PTR [eax+0x652f3b93]
  415eb4:	pop    es
  415eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eb6:	test   eax,0xb2c94973
  415ebb:	dec    edx
  415ebc:	mov    ah,0xe0
  415ebe:	es cld 
  415ec0:	outs   dx,DWORD PTR ds:[esi]
  415ec1:	aaa    
  415ec2:	sub    eax,0x48006246
  415ec7:	fadd   QWORD PTR [edx-0x12204614]
  415ecd:	mov    ah,0xd5
  415ecf:	push   eax
  415ed0:	mov    ds:0x708738a8,eax
  415ed5:	daa    
  415ed6:	mov    edx,0xd2cd88d2
  415edb:	xchg   DWORD PTR [eax+eiz*2+0x3f0d404f],esp
  415ee2:	shr    BYTE PTR [ebx],1
  415ee4:	stos   BYTE PTR es:[edi],al
  415ee5:	jmp    0x415f49
  415ee7:	mov    dl,0xe6
  415ee9:	adc    dh,BYTE PTR [edi+ebx*1-0x67f016dd]
  415ef0:	xchg   edx,eax
  415ef1:	or     ch,bl
  415ef3:	pop    ebp
  415ef4:	scas   eax,DWORD PTR es:[edi]
  415ef5:	repnz add al,0xdd
  415ef8:	mov    al,0xf5
  415efa:	push   cs
  415efb:	adc    eax,0x7354492f
  415f00:	into   
  415f01:	pop    edx
  415f02:	mov    esp,0xdd297294
  415f07:	pop    ebp
  415f08:	or     esi,eax
  415f0a:	add    al,0x91
  415f0c:	sub    dh,0x85
  415f0f:	cmp    BYTE PTR [eax-0x8],0xaf
  415f13:	xchg   DWORD PTR [eax+0x73],eax
  415f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f17:	cmp    ebx,DWORD PTR [esi+ecx*1-0x1681be15]
  415f1e:	xchg   edx,eax
  415f1f:	pop    eax
  415f20:	cmp    DWORD PTR [ebp*1+0x27333715],ecx
  415f27:	lods   al,BYTE PTR ds:[esi]
  415f28:	inc    esi
  415f29:	mov    eax,ds:0xd7f15218
  415f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f2f:	jae    0x415fac
  415f31:	jmp    0x415f69
  415f33:	or     ch,al
  415f35:	pusha  
  415f36:	mov    dl,BYTE PTR [edx]
  415f38:	xchg   esp,eax
  415f39:	sbb    al,0x63
  415f3b:	push   ecx
  415f3c:	adc    dl,al
  415f3e:	and    ch,BYTE PTR [ebx-0x2f]
  415f41:	js     0x415fbb
  415f43:	push   0x1e113ee2
  415f48:	fwait
  415f49:	inc    ebx
  415f4a:	push   ecx
  415f4b:	xchg   ebx,eax
  415f4c:	mov    bl,0xa9
  415f4e:	dec    ebx
  415f4f:	bound  ebx,QWORD PTR [ebx]
  415f51:	daa    
  415f52:	loope  0x415f19
  415f54:	sub    eax,ecx
  415f56:	sbb    DWORD PTR [eax+0x7142f814],eax
  415f5c:	dec    edx
  415f5d:	pop    ebp
  415f5e:	jmp    FWORD PTR [eax+ecx*8-0x2]
  415f62:	data16 cli 
  415f64:	into   
  415f65:	cs pop ecx
  415f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f68:	sti    
  415f69:	jmp    DWORD PTR [ecx+0x5f]
  415f6c:	mov    bh,0x6
  415f6e:	dec    esi
  415f6f:	fsub   DWORD PTR [esi]
  415f71:	(bad)  
  415f72:	push   ss
  415f73:	ret    
  415f74:	in     eax,dx
  415f75:	dec    ebp
  415f76:	fimul  DWORD PTR [eax+eiz*2]
  415f79:	test   eax,0xdbb1268b
  415f7e:	pop    ebp
  415f7f:	cs das 
  415f81:	xor    ch,BYTE PTR [edi]
  415f83:	jp     0x415fad
  415f85:	jmp    0xae83e80f
  415f8a:	or     BYTE PTR [eax],al
  415f8c:	dec    ebp
  415f8d:	int    0x2
  415f8f:	call   0x7cd8b4c3
  415f94:	sbb    al,0xe0
  415f96:	mov    bh,BYTE PTR [esi+0x50]
  415f99:	shl    DWORD PTR [eax-0x15],1
  415f9c:	pop    edi
  415f9d:	pop    es
  415f9e:	daa    
  415f9f:	repz (bad)
  415fa2:	(bad)  
  415fa3:	std    
  415fa4:	push   cs
  415fa5:	xchg   ecx,eax
  415fa6:	and    BYTE PTR [esi-0x3e7289cb],0x9e
  415fad:	or     DWORD PTR [edi+0x66c930bc],ecx
  415fb3:	jne    0x415ff5
  415fb5:	inc    ecx
  415fb6:	mov    ds:0xce4b31c0,eax
  415fbb:	lock rcr DWORD PTR [esi],1
  415fbe:	aas    
  415fbf:	jns    0x41603a
  415fc1:	mov    cl,0x6
  415fc3:	ret    
  415fc4:	sub    DWORD PTR [esi],edx
  415fc6:	jg     0x416023
  415fc8:	push   esi
  415fc9:	inc    ebx
  415fca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fcb:	cmc    
  415fcc:	sbb    BYTE PTR [ecx+0x33],bh
  415fcf:	fwait
  415fd0:	adc    al,BYTE PTR [esi+0x15]
  415fd3:	int    0xf7
  415fd5:	fistp  WORD PTR [ecx+0x3d]
  415fd8:	ret    
  415fd9:	cs jecxz 0x415fec
  415fdc:	dec    ecx
  415fdd:	sbb    DWORD PTR [ebx+0x54],edx
  415fe0:	pop    ss
  415fe1:	add    edx,esi
  415fe3:	sbb    eax,0x8923f4f8
  415fe8:	add    eax,0x63b239a
  415fed:	or     BYTE PTR [esi],ch
  415fef:	aam    0xbf
  415ff1:	(bad)  
  415ff3:	cmp    ch,BYTE PTR [edx-0x50bb2bde]
  415ff9:	enter  0x25c8,0xdd
  415ffd:	or     WORD PTR [edx+edi*8-0x330601c9],sp
  416005:	aaa    
  416006:	or     edi,DWORD PTR [eax+0x350cc498]
  41600c:	adc    BYTE PTR [edx-0x2a58a5a7],ch
  416012:	adc    bh,al
  416014:	push   edx
  416015:	xlat   BYTE PTR ds:[ebx]
  416016:	popf   
  416017:	mov    ch,0xaf
  416019:	ins    BYTE PTR es:[edi],dx
  41601a:	mov    bl,0x98
  41601c:	adc    al,0xc6
  41601e:	fcomi  st,st(3)
  416020:	lahf   
  416021:	dec    esi
  416022:	lahf   
  416023:	sbb    al,cl
  416025:	jmp    0xc30850b8
  41602a:	shl    eax,0xf9
  41602d:	dec    ecx
  41602e:	mov    esp,0x9c0f8790
  416033:	jmp    0x41604a
  416035:	inc    edx
  416036:	and    ah,ch
  416038:	test   al,0x76
  41603a:	stc    
  41603b:	or     al,0x69
  41603d:	fadd   DWORD PTR [ecx-0x13e5f1f2]
  416043:	xchg   DWORD PTR [esi],esi
  416045:	into   
  416046:	aas    
  416047:	bound  edi,QWORD PTR [eax]
  416049:	pop    edi
  41604a:	jo     0x416067
  41604c:	fisubr WORD PTR [edx]
  41604e:	cdq    
  41604f:	add    BYTE PTR [eax],al
  416051:	add    BYTE PTR [edx],bh
  416053:	jne    0x416091
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x4160b9
  41605f:	out    dx,al
  416060:	or     ch,dl
  416062:	arpl   si,bx
  416064:	add    BYTE PTR [eax],al
  416066:	cmc    
  416067:	add    al,0x0
  416069:	add    BYTE PTR [ebp+0x49d628c],dl
  41606f:	retf   0xe902
  416072:	mov    al,ds:0x59959a92
  416077:	push   ecx
  416078:	mov    ebx,0x84d66702
  41607d:	retf   
  41607e:	mov    cl,0xf5
  416080:	mov    ch,0xa2
  416082:	test   BYTE PTR [edx],ch
  416084:	sbb    ah,dh
  416086:	lock test DWORD PTR [ebx],ebp
  416089:	jns    0x416100
  41608b:	jnp    0x4160be
  41608d:	xchg   edx,eax
  41608e:	ins    BYTE PTR es:[edi],dx
  41608f:	push   ebp
  416090:	dec    ebp
  416091:	mov    dh,0x42
  416093:	mov    ch,0x63
  416095:	int3   
  416096:	add    al,0x0
  416098:	jo     0x4160b8
  41609a:	iret   
  41609b:	sub    ah,BYTE PTR [edi]
  41609d:	pop    ecx
  41609e:	imul   ebx,DWORD PTR [esi+0x25c95c3c],0x0
  4160a5:	js     0x4160f3
  4160a7:	loope  0x416127
  4160a9:	xchg   ebp,eax
  4160aa:	ja     0x41611b
  4160ac:	sbb    ebp,eax
  4160ae:	dec    ebp
  4160af:	jg     0x4160e1
  4160b1:	jecxz  0x4160bb
  4160b3:	inc    esi
  4160b4:	add    bh,ah
  4160b6:	jmp    0x416061
  4160b8:	mov    dl,0x1b
  4160ba:	xor    eax,0x183cd625
  4160bf:	dec    ebp
  4160c0:	ret    
  4160c1:	dec    eax
  4160c2:	xlat   BYTE PTR ds:[ebx]
  4160c3:	test   eax,0xa04c3b78
  4160c8:	adc    eax,0x68f36ea8
  4160cd:	mov    esi,0x7c5c8aba
  4160d2:	jo     0x416087
  4160d4:	shr    ebx,cl
  4160d6:	adc    eax,0x8d891f1
  4160db:	rol    BYTE PTR [esi-0x2696d866],1
  4160e1:	in     al,dx
  4160e2:	inc    ebx
  4160e3:	mov    ebp,0x731d017
  4160e8:	inc    edx
  4160e9:	cld    
  4160ea:	dec    esi
  4160eb:	push   ds
  4160ec:	test   BYTE PTR [edx+edx*2],0xd9
  4160f0:	mov    al,0x34
  4160f2:	add    ebx,DWORD PTR [edx+0x7]
  4160f5:	imul   esp,ecx,0x44
  4160f8:	lds    ebx,FWORD PTR [edi]
  4160fa:	inc    eax
  4160fb:	sub    edx,DWORD PTR ds:0x825e49ee
  416101:	aas    
  416102:	or     ah,BYTE PTR [bx+di-0x667e]
  416107:	or     al,0x9d
  416109:	jne    0x4160c7
  41610b:	and    DWORD PTR [ebx+0x12483d9b],esi
  416111:	jge    0x41612b
  416113:	imul   eax,DWORD PTR [ecx],0x974ab8cf
  416119:	or     edx,DWORD PTR [edx-0x3d]
  41611c:	push   edi
  41611d:	jns    0x4160db
  41611f:	stos   BYTE PTR es:[edi],al
  416120:	or     DWORD PTR cs:[ecx-0x4a],eax
  416124:	je     0x416100
  416126:	add    edx,DWORD PTR [edx-0x1fb6a0fc]
  41612c:	and    DWORD PTR [eax-0x644c5394],edx
  416132:	pop    esp
  416133:	adc    al,0x41
  416135:	adc    edi,eax
  416137:	sbb    esp,eax
  416139:	mov    dh,0xd3
  41613b:	dec    ebx
  41613c:	ins    BYTE PTR es:[edi],dx
  41613d:	popa   
  41613e:	lea    eax,[ecx]
  416140:	add    al,BYTE PTR [ebp+0x71e5cd14]
  416146:	sbb    dh,BYTE PTR [ebx]
  416148:	add    eax,0x5cc1485c
  41614d:	popa   
  41614e:	jecxz  0x41616e
  416150:	or     al,0x4b
  416152:	test   al,0x59
  416154:	sar    DWORD PTR [ecx+0x28],1
  416157:	les    ecx,FWORD PTR [eax]
  416159:	popa   
  41615a:	(bad)  
  41615b:	adc    DWORD PTR [edx],edi
  41615d:	inc    esi
  41615e:	(bad)  
  41615f:	pop    ebp
  416160:	das    
  416161:	aam    0xda
  416163:	out    0xf3,al
  416165:	inc    ebx
  416166:	outs   dx,BYTE PTR ds:[esi]
  416167:	xchg   edx,eax
  416168:	and    eax,0x4fae15b4
  41616d:	leave  
  41616e:	push   edi
  41616f:	and    al,0x76
  416171:	mov    al,0x93
  416173:	fld    TBYTE PTR [eax]
  416175:	mov    ah,0x36
  416177:	sahf   
  416178:	popa   
  416179:	jecxz  0x4161f1
  41617b:	adc    al,dl
  41617d:	mov    ebp,0x8f030ecc
  416182:	popf   
  416183:	sbb    BYTE PTR [ebp+eax*2+0x4f],ch
  416187:	stos   DWORD PTR es:[edi],eax
  416188:	sbb    DWORD PTR [esi+eiz*2-0x35428a69],0xffffff9e
  416190:	lods   eax,DWORD PTR ds:[esi]
  416191:	jmp    0x3279:0xa7053e39
  416198:	cmc    
  416199:	aad    0xd1
  41619b:	daa    
  41619c:	inc    DWORD PTR [ebx+0x1d2b5bc0]
  4161a2:	or     al,0x36
  4161a4:	lods   al,BYTE PTR ds:[esi]
  4161a5:	scas   eax,DWORD PTR es:[edi]
  4161a6:	cs dec esp
  4161a8:	aas    
  4161a9:	push   ebp
  4161aa:	xchg   BYTE PTR [edi-0x3f],bh
  4161ad:	arpl   WORD PTR [ebx+0x79],bx
  4161b0:	sub    al,BYTE PTR [ebp-0x35]
  4161b3:	sar    DWORD PTR ds:0x37616016,0x9e
  4161ba:	push   edi
  4161bb:	push   esp
  4161bc:	sbb    edx,eax
  4161be:	mov    ds:0xcb684fa5,al
  4161c3:	in     eax,0xd8
  4161c5:	mov    DWORD PTR [eax+edi*2-0x2d3e9f53],ebx
  4161cc:	push   ebx
  4161cd:	aam    0x83
  4161cf:	lahf   
  4161d0:	adc    al,0x45
  4161d2:	fucomp st(7)
  4161d4:	sbb    eax,0xb0556cdd
  4161d9:	dec    ecx
  4161da:	cwde   
  4161db:	imul   edx,DWORD PTR [ecx+0xaf7f95a],0x17
  4161e2:	jmp    0x853afcdc
  4161e7:	sbb    al,0xe
  4161e9:	sub    al,BYTE PTR [edi+ebp*2]
  4161ec:	jb     0x416257
  4161ee:	mov    ecx,0x13c962a9
  4161f3:	mov    bl,0x4c
  4161f5:	xchg   DWORD PTR [ecx-0xef51226],esi
  4161fb:	jno    0x416266
  4161fd:	loop   0x41623b
  4161ff:	cli    
  416200:	(bad)  
  416201:	ins    BYTE PTR es:[edi],dx
  416202:	test   al,0x3c
  416204:	jb     0x416283
  416206:	dec    eax
  416207:	or     eax,0x5599dd53
  41620c:	loopne 0x41626e
  41620e:	nop
  41620f:	xor    ebx,DWORD PTR [esp+eiz*2+0x36b8a057]
  416216:	scas   eax,DWORD PTR es:[edi]
  416217:	repz cli 
  416219:	cwde   
  41621a:	push   0xffffff97
  41621c:	mov    ebp,0x932f301
  416221:	out    dx,eax
  416222:	xor    DWORD PTR [bx],ecx
  416225:	int3   
  416226:	das    
  416227:	ja     0x41626e
  416229:	dec    edi
  41622a:	dec    edx
  41622b:	jb     0x4161f2
  41622d:	xlat   BYTE PTR ds:[ebx]
  41622e:	mov    esp,edx
  416230:	cmc    
  416231:	inc    edi
  416232:	jno    0x4161c0
  416234:	rol    DWORD PTR [edx+0x1f],cl
  416237:	pushf  
  416238:	stos   BYTE PTR es:[edi],al
  416239:	pop    es
  41623a:	cmp    esp,DWORD PTR [esi+0x33]
  41623d:	(bad)  
  41623e:	fild   QWORD PTR [ebp-0x7f]
  416241:	and    eax,0xa233a04c
  416246:	adc    DWORD PTR [eax-0x616fb5b4],ebx
  41624c:	repz sbb eax,0xcfdee928
  416252:	sub    BYTE PTR [ecx],al
  416254:	gs jnp 0x4162d2
  416257:	loope  0x416275
  416259:	pusha  
  41625a:	test   eax,0x4c4713fd
  41625f:	mov    ebx,0x933cad9c
  416264:	xchg   ebx,eax
  416265:	les    ecx,FWORD PTR [esi]
  416267:	cld    
  416268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416269:	pusha  
  41626a:	inc    eax
  41626b:	or     DWORD PTR [esi],0xffffffb7
  41626e:	mov    ebx,0xb69a8695
  416273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416274:	div    DWORD PTR [edi+0x7]
  416277:	in     eax,0xe3
  416279:	sbb    BYTE PTR [ebx-0x14faf360],ch
  41627f:	push   edx
  416280:	retf   0x173a
  416283:	ja     0x4162e5
  416285:	mov    cl,0x9b
  416287:	dec    edi
  416288:	mov    edx,0xdcb9ae20
  41628d:	jb     0x4162e7
  41628f:	xchg   esi,eax
  416290:	cmp    ebx,DWORD PTR [esi]
  416292:	xor    DWORD PTR [ecx+edi*8+0x71],edi
  416296:	add    ah,BYTE PTR [eax-0x6a]
  416299:	xchg   ecx,eax
  41629a:	and    DWORD PTR [edi+0x4e],esi
  41629d:	or     DWORD PTR [eax+0x2206063c],eax
  4162a3:	inc    ebx
  4162a4:	xlat   BYTE PTR ds:[ebx]
  4162a5:	xlat   BYTE PTR ds:[ebx]
  4162a6:	std    
  4162a7:	(bad)  
  4162a8:	mov    edi,DWORD PTR [eax-0x40]
  4162ab:	test   BYTE PTR [edx-0x68],bl
  4162ae:	jbe    0x416244
  4162b0:	int3   
  4162b1:	jns    0x41627d
  4162b3:	adc    ah,dl
  4162b5:	mov    al,ds:0x2c5a98ec
  4162ba:	in     al,dx
  4162bb:	rcr    DWORD PTR [eax-0x33],cl
  4162be:	and    DWORD PTR [edx-0x4f],ecx
  4162c1:	repnz push eax
  4162c3:	int3   
  4162c4:	into   
  4162c5:	pop    ecx
  4162c6:	dec    ebx
  4162c7:	cmp    eax,0x352e29fd
  4162cc:	inc    ebx
  4162cd:	or     esi,DWORD PTR [ecx+0x38]
  4162d0:	cmp    al,0x1e
  4162d2:	outs   dx,BYTE PTR ds:[esi]
  4162d3:	jnp    0x416312
  4162d5:	and    BYTE PTR [edx+0x6847cd2],0xd3
  4162dc:	test   eax,0xd4999ed9
  4162e1:	je     0x4162bb
  4162e3:	popa   
  4162e4:	mov    ds:0x2c484512,al
  4162e9:	or     esp,DWORD PTR [edx]
  4162eb:	imul   esi,DWORD PTR [esp+ebp*2],0x17
  4162ef:	or     eax,0x583e2bde
  4162f4:	mov    dh,0x12
  4162f6:	push   esp
  4162f7:	mov    dl,0x79
  4162f9:	adc    al,0x4b
  4162fb:	ins    DWORD PTR es:[edi],dx
  4162fc:	call   FWORD PTR [ebx-0x19056a13]
  416302:	sbb    al,0x31
  416304:	inc    edi
  416305:	or     edx,DWORD PTR [edi]
  416307:	ss and bh,cl
  41630a:	repz mov ch,dh
  41630d:	in     eax,dx
  41630e:	into   
  41630f:	jl     0x416377
  416311:	pop    ebx
  416312:	cdq    
  416313:	or     bh,ah
  416315:	shr    BYTE PTR [edx-0x72409f09],cl
  41631b:	mov    cs,edi
  41631d:	rcl    BYTE PTR [edx-0x58c0d0d9],cl
  416323:	mov    eax,0x87229e9e
  416328:	shl    ch,1
  41632a:	jne    0x4162c6
  41632c:	push   ecx
  41632d:	xor    al,0x1c
  41632f:	push   eax
  416330:	mov    edi,0x7992a479
  416335:	(bad)  
  416336:	xor    BYTE PTR [edx+eiz*2],al
  416339:	jp     0x4162ea
  41633b:	in     eax,0x1f
  41633d:	jno    0x416327
  41633f:	cmc    
  416340:	mov    edx,DWORD PTR [ebp-0x47]
  416343:	pop    eax
  416344:	sbb    BYTE PTR [esi],0x51
  416347:	add    DWORD PTR ds:0x5b59893b,0x561ec3b6
  416351:	jg     0x4163b8
  416353:	jns    0x41633a
  416355:	fstp   QWORD PTR [eax]
  416357:	pop    ebx
  416358:	mov    ch,0xe2
  41635a:	aam    0xaa
  41635c:	jl     0x41635e
  41635e:	xor    eax,0x43de691b
  416363:	xchg   esi,eax
  416364:	iret   
  416365:	mov    cl,BYTE PTR [edx+ebx*8+0x4d71e45d]
  41636c:	ret    0x63c1
  41636f:	neg    BYTE PTR [esp+edx*4+0x3304c396]
  416376:	dec    ebp
  416377:	pop    ecx
  416378:	popf   
  416379:	push   eax
  41637a:	gs xor al,0xb0
  41637d:	cmp    ecx,ecx
  41637f:	jnp    0x41635c
  416381:	push   0x54
  416383:	push   esi
  416384:	dec    esp
  416385:	das    
  416386:	pop    edi
  416387:	dec    ebp
  416388:	xor    DWORD PTR [ebx+0x2f],0x781d5446
  41638f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416390:	or     ebx,DWORD PTR [edi]
  416392:	(bad)  
  416393:	jne    0x416396
  416395:	repz pop ecx
  416397:	mov    edi,0x25924e6
  41639c:	shl    BYTE PTR [ecx+0x1a],cl
  41639f:	jp     0x4163de
  4163a1:	dec    edx
  4163a2:	into   
  4163a3:	outs   dx,BYTE PTR ds:[esi]
  4163a4:	and    esi,DWORD PTR [edi+0x2714bd14]
  4163aa:	or     BYTE PTR [edi+ebx*1+0x1a54e21a],0xc2
  4163b2:	xor    al,0xdb
  4163b4:	bound  edx,QWORD PTR [ebp-0x3d]
  4163b7:	repz lds eax,FWORD PTR [edi+0x5c]
  4163bb:	cmpxchg bh,dh
  4163be:	es cld 
  4163c0:	retf   
  4163c1:	les    edi,FWORD PTR [edi+ebx*2]
  4163c4:	retf   0xaf81
  4163c7:	dec    ecx
  4163c8:	into   
  4163c9:	(bad)  
  4163ca:	je     0x416363
  4163cc:	test   al,0x54
  4163ce:	dec    ebp
  4163cf:	cli    
  4163d0:	je     0x41642c
  4163d2:	enter  0x8af,0x40
  4163d6:	mov    dl,0x90
  4163d8:	arpl   ax,ax
  4163da:	ins    DWORD PTR es:[edi],dx
  4163db:	addr16 mov dl,0x2b
  4163de:	cmp    ecx,ecx
  4163e0:	or     DWORD PTR [eax-0x2f6c1fe3],edi
  4163e6:	mov    dl,BYTE PTR [eax]
  4163e8:	mov    WORD PTR [ecx+0x55],cs
  4163eb:	push   ds
  4163ec:	loope  0x416453
  4163ee:	cmp    eax,0xdbd01463
  4163f3:	mov    ebp,DWORD PTR [ebx-0x4c]
  4163f6:	(bad)  
  4163f7:	call   0x636536fb
  4163fc:	jbe    0x416427
  4163fe:	mov    ch,0x99
  416400:	addr16 jne 0x416426
  416403:	js     0x416459
  416405:	into   
  416406:	lds    eax,FWORD PTR [eax+0x39]
  416409:	dec    edi
  41640a:	outs   dx,DWORD PTR ds:[esi]
  41640b:	lock fisubr DWORD PTR [ebx+edi*8]
  41640f:	mov    esi,0x8f2bf983
  416414:	loopne 0x416494
  416416:	(bad)  [eax+edi*4]
  416419:	leave  
  41641a:	sbb    dh,0x26
  41641d:	lock mov edx,0x1dd9899e
  416423:	jo     0x4163ba
  416425:	pop    ss
  416426:	ins    BYTE PTR es:[edi],dx
  416427:	cs je  0x416434
  41642a:	out    0x6f,al
  41642c:	and    ch,cl
  41642e:	xchg   esi,eax
  41642f:	sub    DWORD PTR [esi],ebx
  416431:	push   edx
  416432:	xor    BYTE PTR [ecx],cl
  416434:	mov    esi,0x15a6c20b
  416439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41643a:	add    al,0xd7
  41643c:	sub    BYTE PTR [esp+esi*4+0xe35a166],bl
  416443:	push   es
  416444:	push   cs
  416445:	pusha  
  416446:	push   ecx
  416447:	adc    BYTE PTR ds:0x28fdfcc5,dh
  41644d:	call   0xe63f6fdd
  416452:	adc    DWORD PTR [ecx-0x13],eax
  416455:	push   cs
  416456:	add    eax,0x2a411c3a
  41645b:	mov    ch,0x91
  41645d:	pushf  
  41645e:	sub    eax,0x1057ffc9
  416463:	scas   eax,DWORD PTR es:[edi]
  416464:	jg     0x4164d2
  416466:	cs mov dh,0x33
  416469:	xchg   ebx,eax
  41646a:	shl    edx,0x1f
  41646d:	xchg   esi,eax
  41646e:	cmp    ebx,ecx
  416470:	add    DWORD PTR [edi+0x33],ebp
  416473:	leave  
  416474:	mov    bh,0x82
  416476:	pop    es
  416477:	xchg   ebp,eax
  416478:	mov    dl,0x50
  41647a:	xchg   DWORD PTR [eax+0x6e918ad0],esi
  416480:	push   es
  416481:	mov    cl,0x34
  416483:	neg    DWORD PTR [edx-0x4d]
  416486:	inc    edi
  416487:	dec    ebp
  416488:	dec    edx
  416489:	add    al,0xb9
  41648b:	jnp    0x41649a
  41648d:	les    eax,FWORD PTR [ebx-0x2d]
  416490:	dec    edi
  416491:	(bad)  
  416492:	loop   0x416431
  416494:	fidiv  DWORD PTR [ebp-0x2469e1b]
  41649a:	sub    eax,0xdc48eb37
  41649f:	dec    ebx
  4164a0:	push   es
  4164a1:	cmp    cl,BYTE PTR [edi-0x56]
  4164a4:	pop    ss
  4164a5:	mov    bl,BYTE PTR fs:[edi+ebp*1+0x27f3764e]
  4164ad:	pop    ss
  4164ae:	shl    BYTE PTR [edx],0xa9
  4164b1:	xor    cl,BYTE PTR [ecx+0x37]
  4164b4:	test   cl,cl
  4164b6:	dec    edi
  4164b7:	leave  
  4164b8:	je     0x41646d
  4164ba:	cmp    esp,DWORD PTR [edi]
  4164bc:	sub    al,dl
  4164be:	or     al,0x9c
  4164c0:	pop    ds
  4164c1:	or     ch,dl
  4164c3:	cld    
  4164c4:	mov    al,0x67
  4164c6:	and    eax,0x5ab952ae
  4164cb:	adc    ch,BYTE PTR [edx-0x42bb6505]
  4164d1:	jg     0x4164e1
  4164d3:	dec    eax
  4164d4:	sahf   
  4164d5:	mov    bh,0x99
  4164d7:	call   0xc963:0xac9c12fd
  4164de:	or     al,0x53
  4164e0:	sub    BYTE PTR [ebx],ch
  4164e2:	out    0xcb,al
  4164e4:	push   eax
  4164e5:	fsub   QWORD PTR [edi+0x16]
  4164e8:	ins    DWORD PTR es:[edi],dx
  4164e9:	(bad)  
  4164ea:	jmp    0x416554
  4164ec:	aam    0x37
  4164ee:	shl    DWORD PTR [esi-0x747551f5],1
  4164f4:	mov    DWORD PTR [ecx-0x30],ecx
  4164f7:	imul   ebx,DWORD PTR [edi],0xd1df1a7e
  4164fd:	sbb    esi,edi
  4164ff:	or     edx,esi
  416501:	pop    edi
  416502:	cmp    DWORD PTR [eax+0x5a],eax
  416505:	dec    edx
  416506:	push   edi
  416507:	push   ss
  416508:	jmp    0x651:0xc557ac74
  41650f:	ins    DWORD PTR es:[edi],dx
  416510:	jae    0x4164a0
  416512:	fnsetpm(287 only) 
  416514:	xchg   ebx,eax
  416515:	mov    dl,0x3b
  416517:	icebp  
  416518:	push   ebp
  416519:	bound  edx,QWORD PTR [ecx+0x62]
  41651c:	shr    BYTE PTR [ebx-0x21],0x67
  416520:	jb     0x41654b
  416522:	mov    eax,0x94524d54
  416527:	adc    edx,DWORD PTR [ebp+0x4e7c0ccc]
  41652d:	imul   ecx,DWORD PTR [eax+0x67],0xc059c58b
  416534:	je     0x4165b3
  416536:	and    al,0xda
  416538:	mov    eax,0x636358fd
  41653d:	push   edx
  41653e:	dec    ebx
  41653f:	fnstsw WORD PTR [edx]
  416541:	push   ss
  416542:	fs aad 0x16
  416545:	xchg   edi,eax
  416546:	push   cs
  416547:	adc    BYTE PTR [ebp-0x4ed69998],al
  41654d:	les    ebx,FWORD PTR [ecx]
  41654f:	mov    bl,0x91
  416551:	xchg   esp,eax
  416552:	fwait
  416553:	jmp    0x5b44:0xf8b0d104
  41655a:	cmp    eax,0x327cad4d
  41655f:	add    BYTE PTR [eax],al
  416561:	add    al,bh
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0x43f1
  41656f:	and    al,0x91
  416571:	pop    esp
  416572:	pop    eax
  416573:	jecxz  0x416575
  416575:	add    ch,dh
  416577:	add    al,0x0
  416579:	add    BYTE PTR [ecx-0x33f4aaa6],bl
  41657f:	sbb    eax,0x87d3b3e8
  416584:	in     eax,dx
  416585:	xor    eax,0xa0e1e2a5
  41658a:	adc    ebp,DWORD PTR [eax-0x46b7af73]
  416590:	or     BYTE PTR [ecx+eiz*8+0x77fcc956],ah
  416597:	int    0x85
  416599:	fldcw  WORD PTR [ebx]
  41659b:	test   DWORD PTR [edx],esi
  41659d:	fs pop es
  41659f:	push   esp
  4165a0:	test   eax,0x4ead3c72
  4165a5:	lahf   
  4165a6:	repz (bad) 
  4165a8:	cmp    ch,dh
  4165aa:	cli    
  4165ab:	adc    esp,DWORD PTR [ebx-0x76cf0c7a]
  4165b1:	push   ebp
  4165b2:	mov    cl,0x7d
  4165b4:	pop    ebp
  4165b5:	mov    WORD PTR [edi-0x1415e69d],ds
  4165bb:	cmp    eax,0x44870261
  4165c0:	retf   0x5ea0
  4165c3:	add    ebp,edi
  4165c5:	mov    ah,0x88
  4165c7:	dec    ebx
  4165c8:	jmp    0x694d8f1f
  4165cd:	xchg   edi,eax
  4165ce:	ret    
  4165cf:	pushf  
  4165d0:	jae    0x4165a5
  4165d2:	(bad)  
  4165d3:	fld    TBYTE PTR [esi-0x34]
  4165d6:	dec    ebx
  4165d7:	and    eax,0xd3d1ac5b
  4165dc:	out    dx,eax
  4165dd:	pushf  
  4165de:	pop    DWORD PTR [esi]
  4165e0:	inc    eax
  4165e1:	fist   WORD PTR [eiz*1-0x51a2482b]
  4165e8:	mov    cl,0x70
  4165ea:	jmp    0xe36:0x2590
  4165f0:	mov    esi,0x5c103ff6
  4165f5:	adc    al,0x4c
  4165f7:	(bad)  
  4165f8:	ja     0x41664d
  4165fa:	cmp    eax,0x13d6b3c3
  4165ff:	mov    BYTE PTR [ebx],ah
  416601:	repnz mov al,ds:0xe4635cb6
  416607:	es pop ebp
  416609:	dec    esp
  41660a:	mov    WORD PTR [ecx+0xc50ed00],ss
  416610:	rcr    ecx,cl
  416612:	mov    bl,0xd6
  416614:	cmp    al,0x6d
  416616:	cmovae ebx,DWORD PTR [esi-0x4f]
  41661a:	jb     0x4165d9
  41661c:	inc    edi
  41661d:	test   BYTE PTR [ecx+esi*2-0x225d3b11],cl
  416624:	add    ebx,DWORD PTR [ecx+esi*1-0x7fd0cf5c]
  41662b:	push   ebx
  41662c:	inc    edx
  41662d:	out    0xac,eax
  41662f:	mov    ch,0x69
  416631:	js     0x4165c8
  416633:	cld    
  416634:	bound  edi,QWORD PTR ds:0x68c60cd4
  41663a:	jae    0x4166b5
  41663c:	nop
  41663d:	sub    al,0xac
  416640:	(bad)  
  416641:	adc    DWORD PTR [ecx-0x3ab9c58a],ebp
  416647:	enter  0x821d,0x51
  41664b:	inc    ebp
  41664c:	cs rcl ch,1
  41664f:	jle    0x416651
  416651:	test   eax,ebx
  416653:	out    0x1e,eax
  416655:	fadd   st,st(3)
  416657:	dec    ebx
  416658:	push   es
  416659:	cmp    al,0x1c
  41665b:	scas   eax,DWORD PTR es:[edi]
  41665c:	shl    DWORD PTR [eax],0xc7
  41665f:	retf   
  416660:	je     0x4165e6
  416662:	xchg   esp,esi
  416664:	loop   0x4166c4
  416666:	call   0x4f13f17
  41666b:	fucom  st(1)
  41666d:	push   edx
  41666e:	lods   al,BYTE PTR ds:[esi]
  41666f:	into   
  416670:	aas    
  416671:	or     al,0xf9
  416673:	xor    al,0xe7
  416675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416676:	add    al,0xcd
  416678:	push   edi
  416679:	mov    esp,0xafee361d
  41667e:	lds    esp,FWORD PTR [edi+0x87ed32f]
  416684:	or     dl,BYTE PTR [ebx+ebx*2+0x3a]
  416688:	les    ebx,FWORD PTR [edx+0x7a]
  41668b:	stos   BYTE PTR es:[edi],al
  41668c:	inc    ebx
  41668d:	iret   
  41668e:	mov    DWORD PTR [esi],ebp
  416690:	arpl   WORD PTR [ebx+0x618388b4],si
  416696:	dec    ebx
  416697:	nop
  416698:	out    dx,al
  416699:	call   0x26165e8
  41669e:	inc    ebx
  41669f:	(bad)
  4166a2:	and    eax,0x883a53d4
  4166a7:	sahf   
  4166a8:	(bad)  
  4166a9:	ja     0x416673
  4166ab:	adc    al,0x27
  4166ad:	sub    eax,0xdb061441
  4166b2:	(bad)  
  4166b3:	xchg   edx,eax
  4166b4:	mov    edx,0x7f8fc9f9
  4166b9:	xchg   esi,eax
  4166ba:	call   0xf42534cb
  4166bf:	cmp    esi,0x611ce529
  4166c5:	cmp    DWORD PTR gs:[ecx+0x3],esi
  4166c9:	(bad)  
  4166cb:	add    ebx,DWORD PTR [esp+eax*8-0x4e4ea8f6]
  4166d2:	sbb    ch,BYTE PTR [eax-0x67]
  4166d5:	ja     0x41665a
  4166d7:	inc    ebp
  4166d8:	stos   BYTE PTR es:[edi],al
  4166d9:	jbe    0x4166c1
  4166db:	std    
  4166dc:	call   0x59e09b0b
  4166e1:	jbe    0x4166d6
  4166e3:	push   ecx
  4166e4:	int    0x43
  4166e6:	xor    ebx,edx
  4166e8:	mov    al,ds:0xfecc3a9e
  4166ed:	call   0x9fae:0xaf22a87
  4166f4:	stc    
  4166f5:	cdq    
  4166f6:	call   0x22358a62
  4166fb:	inc    eax
  4166fc:	ret    
  4166fd:	pop    ecx
  4166fe:	fisubr WORD PTR ds:0xd52c0ee7
  416704:	nop
  416705:	pop    edx
  416706:	jecxz  0x416756
  416708:	mov    ch,0x38
  41670a:	out    dx,al
  41670b:	popa   
  41670c:	aad    0x1a
  41670e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41670f:	cmp    ebx,esp
  416711:	les    eax,FWORD PTR [ebp-0x41]
  416714:	stos   DWORD PTR es:[edi],eax
  416715:	push   0xccd1749b
  41671a:	jp     0x416754
  41671c:	addr16 jne 0x416760
  41671f:	jno    0x4166c1
  416721:	in     eax,0x33
  416723:	adc    ecx,esi
  416725:	cwde   
  416726:	and    al,0x12
  416728:	aaa    
  416729:	xor    al,0xb2
  41672b:	pop    ds
  41672c:	pushf  
  41672d:	mulps  xmm3,XMMWORD PTR [esi+0x3c209f59]
  416734:	bound  ecx,QWORD PTR [eax+0x4d87ee86]
  41673a:	dec    esp
  41673b:	mov    ebp,0x3c2b5546
  416740:	arpl   WORD PTR [edi+0x34],cx
  416743:	(bad)  
  416744:	push   0x2e
  416746:	dec    ecx
  416747:	push   edi
  416748:	mov    ch,0x6b
  41674a:	sbb    DWORD PTR [eax],edx
  41674c:	adc    BYTE PTR [eax],0x8f
  41674f:	imul   ecx,DWORD PTR [eax],0xd4471ed2
  416755:	push   es
  416756:	xchg   ecx,eax
  416757:	jge    0x416705
  416759:	dec    edx
  41675a:	iret   
  41675b:	jno    0x416722
  41675d:	dec    esi
  41675e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41675f:	cmp    DWORD PTR [ecx+0x31629529],ebx
  416765:	xlat   BYTE PTR ds:[ebx]
  416766:	dec    ebx
  416767:	cdq    
  416768:	mov    ds:0xa4269fcf,al
  41676d:	jmp    0x41677e
  41676f:	outs   dx,BYTE PTR ds:[esi]
  416770:	ror    BYTE PTR [eax+eiz*2+0x2a4dd999],1
  416777:	into   
  416778:	scas   eax,DWORD PTR es:[edi]
  416779:	xchg   ch,al
  41677b:	push   edx
  41677c:	aam    0x54
  41677e:	add    BYTE PTR [ebp+0x7f5b4e06],dh
  416784:	jmp    0x65867257
  416789:	loopne 0x4167dc
  41678b:	mov    ecx,0x74772084
  416790:	jge    0x4167a8
  416792:	push   esp
  416793:	jmp    0x4167aa
  416795:	pop    es
  416796:	push   ebx
  416797:	xchg   ebx,eax
  416798:	push   ebx
  416799:	call   0x2603:0xa1da03b9
  4167a0:	pusha  
  4167a1:	gs jae 0x416813
  4167a4:	mov    eax,ds:0xfe6743ca
  4167a9:	je     0x416772
  4167ab:	scas   eax,DWORD PTR es:[edi]
  4167ac:	scas   eax,DWORD PTR es:[edi]
  4167ad:	bnd jo 0x416763
  4167b0:	cmp    BYTE PTR [ebx-0x3f43d9cd],0xad
  4167b7:	mov    eax,ds:0x487abef0
  4167bc:	pushf  
  4167bd:	mov    esi,0x235b702b
  4167c2:	repnz arpl WORD PTR [ecx+0x10],bp
  4167c6:	sbb    cl,BYTE PTR [ecx+0x3e8bd059]
  4167cc:	jns    0x416776
  4167ce:	push   0xf3eae554
  4167d3:	push   cs
  4167d4:	xlat   BYTE PTR ds:[ebx]
  4167d5:	and    DWORD PTR [esi],ebx
  4167d7:	mov    DWORD PTR [esp+edi*2+0x6d0a3f0a],ebx
  4167de:	mov    ebx,0xc19af048
  4167e3:	int    0x4c
  4167e5:	aam    0x2c
  4167e7:	inc    esp
  4167e8:	out    0xcf,al
  4167ea:	and    BYTE PTR [esi],bl
  4167ec:	jg     0x4167e0
  4167ee:	rcr    edx,0xcf
  4167f1:	cs inc esi
  4167f3:	mov    eax,0x3565c6ce
  4167f8:	adc    esp,ecx
  4167fa:	mov    cl,0x6
  4167fc:	inc    esp
  4167fd:	cmp    dh,BYTE PTR [edi-0xb]
  416800:	mov    ch,0xe1
  416802:	ret    0xd7e8
  416805:	mov    WORD PTR [edi+0x254de2d6],ds
  41680b:	adc    DWORD PTR [edx+0x123ef6f9],ebx
  416811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416812:	mov    ch,0xb
  416814:	ftst   
  416816:	pop    ss
  416817:	push   eax
  416818:	mov    al,ds:0x992582fc
  41681d:	and    DWORD PTR [esi],ebp
  41681f:	mov    ch,0x2d
  416821:	xlat   BYTE PTR ds:[ebx]
  416822:	xchg   esp,eax
  416823:	pop    ebx
  416824:	fisub  DWORD PTR [edi+0x41491a77]
  41682a:	pop    edi
  41682b:	into   
  41682c:	jbe    0x4167e5
  41682e:	hlt    
  41682f:	daa    
  416830:	jns    0x416878
  416832:	inc    edx
  416833:	in     al,dx
  416834:	or     DWORD PTR [edx-0x76],esi
  416837:	jnp    0x41688c
  416839:	ins    BYTE PTR es:[edi],dx
  41683a:	fldl2e 
  41683c:	lock cwde 
  41683e:	sbb    BYTE PTR [edi-0x4188da38],dl
  416844:	(bad)  
  416845:	ds sbb ah,bl
  416848:	ja     0x41683e
  41684a:	fwait
  41684b:	lock arpl WORD PTR [eax-0x2c06e89f],bp
  416852:	inc    edx
  416853:	mov    eax,ds:0xc5a92ccc
  416858:	mov    ds:0x644c173,eax
  41685d:	inc    edx
  41685e:	ss stc 
  416860:	fistp  QWORD PTR [edi]
  416862:	sbb    eax,0xaf3a70d6
  416867:	lods   al,BYTE PTR ds:[esi]
  416868:	lods   al,BYTE PTR ds:[esi]
  416869:	pop    esi
  41686a:	sahf   
  41686b:	pushf  
  41686c:	push   edi
  41686d:	mov    al,0xed
  41686f:	inc    edx
  416870:	mov    edi,0x97567b1f
  416875:	ds jns 0x416831
  416878:	sub    ebp,DWORD PTR [esi]
  41687a:	jge    0x41689c
  41687c:	pushf  
  41687d:	xor    esp,DWORD PTR [eax-0x7c]
  416880:	xor    eax,0xf54472ed
  416885:	or     DWORD PTR [esi+0x1b],eax
  416888:	pop    DWORD PTR ss:[edx+0x68]
  41688c:	not    DWORD PTR [esi]
  41688e:	popf   
  41688f:	enter  0x3389,0x4d
  416893:	in     al,0x8
  416895:	outs   dx,BYTE PTR ds:[esi]
  416896:	push   ebp
  416897:	lods   al,BYTE PTR ds:[esi]
  416898:	inc    BYTE PTR [ecx+0x6f]
  41689b:	scas   al,BYTE PTR es:[edi]
  41689c:	adc    eax,0xe2426207
  4168a1:	stos   BYTE PTR es:[edi],al
  4168a2:	cmp    DWORD PTR [esi-0x6b8916f1],esp
  4168a8:	jg     0x416879
  4168aa:	out    dx,eax
  4168ab:	inc    eax
  4168ac:	iret   
  4168ad:	jns    0x4168f1
  4168af:	sub    eax,0xfb0ef5c0
  4168b4:	sub    esi,eax
  4168b6:	mov    bh,0xa
  4168b8:	imul   ecx,DWORD PTR [edi+eiz*2-0x30],0x59
  4168bd:	mov    ecx,esp
  4168bf:	adc    eax,DWORD PTR [edi]
  4168c1:	outs   dx,BYTE PTR ds:[esi]
  4168c2:	or     bh,ah
  4168c4:	shr    ecx,1
  4168c6:	ins    BYTE PTR es:[edi],dx
  4168c7:	inc    edx
  4168c8:	cmc    
  4168c9:	in     eax,dx
  4168ca:	dec    esi
  4168cb:	push   esi
  4168cc:	dec    esp
  4168cd:	mov    ebx,edx
  4168cf:	imul   eax,DWORD PTR [edx],0x6d0cd38b
  4168d5:	pop    ebx
  4168d6:	out    dx,al
  4168d7:	jmp    0x5b336022
  4168dc:	and    bl,BYTE PTR [ebx+ecx*8+0x78]
  4168e0:	sub    DWORD PTR [eax-0x7c2ba37d],ecx
  4168e6:	or     esi,eax
  4168e8:	sbb    eax,0x66045284
  4168ed:	sbb    ah,BYTE PTR [ebx+0x6d801eb4]
  4168f3:	push   esp
  4168f4:	xchg   BYTE PTR [eax+edx*4+0x7be5959b],ch
  4168fb:	dec    ecx
  4168fc:	mov    dl,0x39
  4168fe:	in     al,0x52
  416900:	test   eax,0x4c2832a4
  416905:	jmp    0xb6d4330a
  41690a:	loopne 0x4168d8
  41690c:	sbb    DWORD PTR [ebx],ebx
  41690e:	jge    0x41696f
  416910:	pop    ds
  416911:	adc    al,0xb8
  416913:	call   0x9d8b858
  416918:	adc    DWORD PTR [ebx+0x4da86502],ecx
  41691e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41691f:	inc    edi
  416920:	mov    bl,0x38
  416922:	pop    ebp
  416923:	sub    al,0xe0
  416926:	aas    
  416927:	or     dh,BYTE PTR [ebp-0x42]
  41692a:	jecxz  0x41696d
  41692c:	mov    al,ds:0x558fe789
  416931:	jb     0x416904
  416933:	adc    edi,DWORD PTR [eax+0x67]
  416936:	mov    cl,cl
  416938:	add    edx,DWORD PTR [ecx+eax*2-0x6637defc]
  41693f:	xor    edi,DWORD PTR [ebx-0x4755c2f9]
  416945:	arpl   WORD PTR ds:0x3f8c7456,sp
  41694b:	dec    ebp
  41694c:	adc    DWORD PTR [esi],esi
  41694e:	sahf   
  41694f:	xchg   ecx,eax
  416950:	scas   eax,DWORD PTR es:[edi]
  416951:	jno    0x416958
  416953:	rcl    BYTE PTR [edi],cl
  416955:	or     eax,0xc9b24d86
  41695a:	cmp    ebx,esp
  41695c:	stos   DWORD PTR es:[edi],eax
  41695d:	out    0xd8,al
  41695f:	rcl    edx,1
  416961:	inc    edi
  416962:	out    0x52,eax
  416964:	test   eax,0xa8a1bacb
  416969:	fwait
  41696a:	mov    esp,0xf71fc05b
  41696f:	xor    al,0x92
  416971:	xchg   edi,eax
  416972:	xchg   edx,eax
  416973:	das    
  416974:	xor    ah,al
  416976:	jo     0x4169ed
  416978:	aas    
  416979:	scas   al,BYTE PTR es:[edi]
  41697a:	ret    0xc3ce
  41697d:	cli    
  41697e:	xchg   BYTE PTR [esi-0x56ef4480],bl
  416984:	ret    0x5b9e
  416987:	gs dec eax
  416989:	xchg   edi,eax
  41698a:	scas   eax,DWORD PTR es:[edi]
  41698b:	add    dl,ah
  41698d:	xchg   DWORD PTR [esi+0x78],ecx
  416990:	test   al,0x99
  416992:	fwait
  416993:	pushf  
  416994:	and    eax,DWORD PTR ds:0x8ce457d1
  41699a:	jae    0x4169d8
  41699c:	jne    0x4169bc
  41699e:	mov    cl,0xbb
  4169a0:	ss pop es
  4169a2:	and    ah,BYTE PTR [edi+0x3ceb2524]
  4169a8:	arpl   WORD PTR [ecx+esi*8+0x4a],dx
  4169ac:	loop   0x416a21
  4169ae:	fild   QWORD PTR [ebx]
  4169b0:	jbe    0x4169be
  4169b2:	das    
  4169b3:	adc    ecx,DWORD PTR [ecx]
  4169b5:	jl     0x416962
  4169b7:	dec    edi
  4169b8:	pop    edi
  4169b9:	push   eax
  4169ba:	test   eax,0xfe7ccafd
  4169bf:	js     0x4169c2
  4169c1:	push   0xffffff97
  4169c3:	adc    ecx,DWORD PTR [eax]
  4169c5:	mov    al,0xe1
  4169c7:	add    ah,BYTE PTR [edx+esi*2-0x4b]
  4169cb:	nop
  4169cc:	popa   
  4169cd:	and    al,0x42
  4169cf:	add    eax,DWORD PTR [edx+ebp*1+0x1d]
  4169d3:	and    ebx,DWORD PTR [esi-0x2f]
  4169d6:	mov    fs,WORD PTR [esi-0xa6a2607]
  4169dc:	aam    0x7f
  4169de:	pop    edi
  4169df:	fiadd  WORD PTR [ebx-0x53]
  4169e2:	or     BYTE PTR [esi+0x13e28658],ah
  4169e8:	test   ecx,edi
  4169ea:	test   BYTE PTR [edi+0x59ce8c90],dl
  4169f0:	xchg   edi,eax
  4169f1:	and    eax,0x31c23f3
  4169f6:	ror    DWORD PTR [edi+0x22],cl
  4169f9:	ins    DWORD PTR es:[edi],dx
  4169fa:	add    ch,BYTE PTR [eax-0x38]
  4169fd:	mov    ecx,0xa0efb134
  416a02:	retf   0xc457
  416a05:	xlat   BYTE PTR ds:[ebx]
  416a06:	cmp    DWORD PTR [edx+0x151adc2f],0x2e
  416a0d:	stos   BYTE PTR es:[edi],al
  416a0e:	cdq    
  416a0f:	popf   
  416a10:	xchg   edi,eax
  416a11:	arpl   WORD PTR [eax-0x22],sp
  416a14:	add    dh,bl
  416a16:	test   DWORD PTR [ebp+0x5],0xcfda55ec
  416a1d:	adc    bl,BYTE PTR [esi]
  416a1f:	out    0x23,al
  416a21:	iret   
  416a22:	(bad)  
  416a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a24:	dec    ebx
  416a25:	out    0x76,al
  416a27:	cmp    DWORD PTR [ebx],edi
  416a29:	inc    edx
  416a2a:	xor    al,0x30
  416a2c:	push   ecx
  416a2d:	scas   al,BYTE PTR es:[edi]
  416a2e:	xchg   ebp,eax
  416a2f:	icebp  
  416a30:	daa    
  416a31:	iret   
  416a32:	fiadd  WORD PTR ds:0xb451eb33
  416a38:	dec    DWORD PTR [ebp+eax*8+0x454b6a3b]
  416a3f:	fld    TBYTE PTR [edx-0x1e]
  416a42:	div    eax
  416a44:	out    0xcf,ax
  416a47:	pop    esi
  416a48:	xlat   BYTE PTR ds:[ebx]
  416a49:	and    DWORD PTR ds:0x7d36272a,ebp
  416a4f:	dec    edi
  416a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a51:	adc    BYTE PTR [ecx+0x7f6a23a6],al
  416a57:	pushf  
  416a58:	outs   dx,DWORD PTR ds:[esi]
  416a59:	dec    esp
  416a5a:	(bad)  
  416a5b:	adc    BYTE PTR [esi-0x4a],ch
  416a5e:	pop    es
  416a5f:	scas   eax,DWORD PTR es:[edi]
  416a60:	inc    esi
  416a61:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a63:	(bad)  
  416a64:	mov    edx,0xb67e7c50
  416a69:	sub    eax,DWORD PTR cs:[edx]
  416a6c:	cmp    al,0xa7
  416a6e:	mov    DWORD PTR [eax],eax
  416a70:	add    BYTE PTR [eax],al
  416a72:	call   0xfb7c3508
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx+0x73f3b875],cl
  416a7f:	xchg   esi,eax
  416a80:	into   
  416a81:	ret    0xe84d
  416a84:	add    BYTE PTR [eax],al
  416a86:	cmc    
  416a87:	add    al,0x0
  416a89:	add    ah,dl
  416a8b:	stc    
  416a8c:	out    0xea,eax
  416a8e:	jae    0x416a68
  416a90:	fucomi st,st(2)
  416a92:	fs addr16 pop ebp
  416a95:	mov    cl,0x7e
  416a97:	call   0x82824ff8
  416a9c:	call   0xc7d5:0x14c16768
  416aa3:	cmc    
  416aa4:	lods   al,BYTE PTR ds:[esi]
  416aa5:	mov    edx,0x1169061f
  416aaa:	pushf  
  416aab:	xor    eax,0xda2ed456
  416ab0:	inc    edx
  416ab1:	mov    ebp,0x951110cd
  416ab6:	mov    dl,0xe9
  416ab8:	push   edx
  416ab9:	pop    edi
  416aba:	in     al,0x91
  416abc:	arpl   sp,bp
  416abe:	popf   
  416abf:	add    DWORD PTR [eax-0x1c209339],0xffffffa2
  416ac6:	adc    ebp,DWORD PTR [eax]
  416ac8:	outs   dx,BYTE PTR ds:[esi]
  416ac9:	out    dx,eax
  416aca:	sub    al,0xdc
  416acc:	or     edx,DWORD PTR [esi-0x6c01ea58]
  416ad2:	mov    ebx,0x3db048b9
  416ad7:	mov    eax,0x65e2a934
  416adc:	cdq    
  416add:	jmp    DWORD PTR [edx]
  416adf:	loopne 0x416adf
  416ae1:	ins    BYTE PTR es:[edi],dx
  416ae2:	push   ecx
  416ae3:	aas    
  416ae4:	cmp    dl,BYTE PTR [ebx+0xb]
  416ae7:	cmp    al,0x1f
  416ae9:	push   0x971a0c1c
  416aee:	shl    ecx,cl
  416af0:	ret    0x4a0b
  416af3:	(bad)  
  416af4:	sbb    al,0xb9
  416af6:	jne    0x416ac4
  416af8:	icebp  
  416af9:	push   0xffffffdb
  416afb:	push   eax
  416afc:	loop   0x416ace
  416afe:	ss loopne 0x416b33
  416b01:	inc    eax
  416b02:	cmp    eax,0xdba3e986
  416b07:	xchg   esi,esi
  416b09:	push   0xffffff8e
  416b0b:	jp     0x416ae8
  416b0d:	test   al,0xa8
  416b0f:	dec    esi
  416b10:	mov    bh,cl
  416b12:	mov    ch,0xa6
  416b14:	and    eax,0xd498c440
  416b19:	lea    esp,[ebx+0x47]
  416b1c:	mov    cl,BYTE PTR [ecx-0x19339551]
  416b22:	or     BYTE PTR [ebx+0x6314848e],dh
  416b28:	jg     0x416ba1
  416b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b2b:	mov    al,0x94
  416b2d:	rcl    BYTE PTR [ecx-0x713face1],0x3c
  416b34:	sbb    BYTE PTR [eax+0x5],dl
  416b37:	push   cs
  416b38:	xchg   ebx,eax
  416b39:	xchg   ebp,eax
  416b3a:	cmp    ch,bl
  416b3c:	fstp   TBYTE PTR [si]
  416b3f:	jg     0x416b5f
  416b41:	or     BYTE PTR [ebx+eax*4],ch
  416b44:	mov    ecx,ebx
  416b46:	sbb    esi,ebx
  416b48:	dec    ebp
  416b49:	cmc    
  416b4a:	imul   ebp,DWORD PTR [ebx-0x67],0x234a5739
  416b51:	inc    ebp
  416b52:	or     eax,0xa1eb4f2a
  416b57:	jmp    0x416b5b
  416b59:	cdq    
  416b5a:	jo     0x416ba7
  416b5c:	les    esp,FWORD PTR [ebp+0x2c0ae4a8]
  416b62:	mov    DWORD PTR [ebp*4-0x4b76d304],edx
  416b69:	xchg   esp,eax
  416b6a:	jg     0x416b66
  416b6c:	mov    eax,0xf26c38b0
  416b71:	iret   
  416b72:	mov    edx,0xf8aeedbb
  416b77:	xchg   ebx,eax
  416b78:	imul   esi,esi,0x0
  416b7b:	popf   
  416b7c:	or     DWORD PTR [edx-0x394d485b],edx
  416b82:	mov    esi,0x683a93e
  416b87:	mov    edi,0xa61f19ac
  416b8c:	and    DWORD PTR [esi+0x2deabe8d],0x2da0425a
  416b96:	push   ds
  416b97:	outs   dx,DWORD PTR ds:[esi]
  416b98:	jp     0x416bcb
  416b9a:	jb     0x416b21
  416b9c:	rol    BYTE PTR [eax],1
  416b9e:	js     0x416bab
  416ba0:	ja     0x416b94
  416ba2:	in     al,0xa
  416ba4:	dec    edi
  416ba5:	xor    eax,0x5962b30b
  416baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bab:	mov    WORD PTR ds:0x4a244866,?
  416bb1:	jp     0x416c31
  416bb3:	cld    
  416bb4:	cmp    BYTE PTR [edi+0x3a067551],ah
  416bba:	or     DWORD PTR [edi],edx
  416bbc:	sbb    eax,DWORD PTR [edi-0x7]
  416bbf:	inc    esp
  416bc0:	dec    esi
  416bc1:	adc    ebx,edx
  416bc3:	mov    bl,0xa6
  416bc5:	scas   al,BYTE PTR es:[edi]
  416bc6:	pop    esi
  416bc7:	xchg   DWORD PTR [edx-0x604bc504],edi
  416bcd:	or     edi,DWORD PTR [ecx]
  416bcf:	test   al,0xf1
  416bd1:	mov    al,ds:0xb78bb773
  416bd6:	adc    BYTE PTR [edx+0x6a48d6b8],bl
  416bdc:	inc    esi
  416bdd:	push   edi
  416bde:	cli    
  416bdf:	stos   BYTE PTR es:[edi],al
  416be0:	xchg   edx,eax
  416be1:	or     ebp,DWORD PTR [ebx-0x310699c4]
  416be7:	and    edx,ebp
  416be9:	hlt    
  416bea:	jmp    0x2006:0xd8d06f94
  416bf1:	pushf  
  416bf2:	sub    DWORD PTR [ecx+eax*8-0x10ce9c3e],edi
  416bf9:	fisub  DWORD PTR [ebx-0x3b9c1a55]
  416bff:	(bad)  
  416c00:	jp     0x416bde
  416c02:	add    bh,bl
  416c04:	sub    eax,0x2f5f422e
  416c09:	fwait
  416c0a:	cmp    ah,BYTE PTR [edi+0x6e]
  416c0d:	sbb    eax,0x56e2b478
  416c12:	pushf  
  416c13:	pop    ss
  416c14:	in     eax,0x4b
  416c16:	inc    ebp
  416c17:	jnp    0x416c11
  416c19:	sahf   
  416c1a:	sub    ecx,edi
  416c1c:	ficomp WORD PTR [eax+0x6257cef3]
  416c22:	add    eax,DWORD PTR [eax+eiz*2-0x90a5b4b]
  416c29:	psubb  mm2,mm5
  416c2c:	rol    BYTE PTR [eax],1
  416c2e:	lds    edx,FWORD PTR [ecx]
  416c30:	(bad)  
  416c31:	pop    edx
  416c32:	sub    eax,0x74badde9
  416c37:	sahf   
  416c38:	(bad)  
  416c39:	adc    edx,DWORD PTR [ecx+0x72c10fa]
  416c3f:	mov    al,0x4b
  416c41:	inc    ecx
  416c42:	inc    ecx
  416c43:	dec    ecx
  416c44:	int    0x88
  416c46:	inc    ebx
  416c47:	es mov eax,0x6757a3b1
  416c4d:	pop    edx
  416c4e:	lods   eax,DWORD PTR ds:[esi]
  416c4f:	xor    ebp,0x27
  416c52:	xchg   edi,eax
  416c53:	inc    eax
  416c54:	ins    BYTE PTR es:[edi],dx
  416c55:	aam    0xf0
  416c57:	sahf   
  416c58:	fdivp  st(7),st
  416c5a:	rcl    DWORD PTR [edx+0x1],0xe9
  416c5e:	jb     0x416cbd
  416c60:	mov    ss,WORD PTR [ecx-0x1c870723]
  416c66:	push   eax
  416c67:	pop    ss
  416c68:	mov    ebp,DWORD PTR [ebx+edx*1+0x7a]
  416c6c:	lahf   
  416c6d:	or     DWORD PTR [esi+ecx*8+0x3a],ebp
  416c71:	mov    edi,0x61d7c377
  416c76:	pop    ebx
  416c77:	add    al,0xc0
  416c79:	and    eax,0x5f45e76
  416c7e:	test   edx,0x4081a285
  416c84:	fadd   QWORD PTR [ebx-0x79]
  416c87:	ret    0x7459
  416c8a:	or     ch,BYTE PTR [ebx-0x365726b2]
  416c90:	iret   
  416c91:	push   cs
  416c92:	aad    0xc9
  416c94:	jle    0x416c1b
  416c96:	xor    DWORD PTR [esi-0xd95b798],0xffffff8c
  416c9d:	or     BYTE PTR [edx+ecx*8+0x41],0xec
  416ca2:	(bad)  
  416ca3:	retf   
  416ca4:	add    al,0x2f
  416ca6:	and    DWORD PTR [ebx+0x6d],eax
  416ca9:	push   ss
  416caa:	aam    0x9e
  416cac:	jnp    0x416ccb
  416cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416caf:	unpcklps xmm3,xmm7
  416cb2:	das    
  416cb3:	xor    ch,dl
  416cb5:	xchg   esi,eax
  416cb6:	stos   BYTE PTR es:[edi],al
  416cb7:	jb     0x416c91
  416cb9:	cs mov edx,0xe5e4b89a
  416cbf:	mov    dh,0xf8
  416cc1:	xchg   DWORD PTR [ebp+0x7],esp
  416cc4:	imul   esi,DWORD PTR [ebx+0x381f25b6],0xffffff86
  416ccb:	int    0xd4
  416ccd:	jnp    0x416d30
  416ccf:	or     al,0x8c
  416cd1:	loop   0x416cb1
  416cd3:	out    0xdb,eax
  416cd5:	sbb    al,0xd8
  416cd7:	pop    es
  416cd8:	aad    0x5d
  416cda:	dec    eax
  416cdb:	stos   DWORD PTR es:[edi],eax
  416cdc:	adc    ebx,0xd6f0d8e0
  416ce2:	and    BYTE PTR [ebx-0x68],0xa9
  416ce6:	push   edx
  416ce7:	adc    eax,0xf266e3d1
  416cec:	daa    
  416ced:	sub    BYTE PTR [edx+0x2ff7e45c],ah
  416cf3:	test   edx,eax
  416cf5:	fcomip st,st(4)
  416cf7:	rol    BYTE PTR [edi+0x5f],1
  416cfa:	or     DWORD PTR [esi-0x1c7ff098],edx
  416d00:	jno    0x416cdf
  416d02:	es jo  0x416d2a
  416d05:	hlt    
  416d06:	enter  0xaac3,0xff
  416d0a:	sub    eax,0x291ab935
  416d0f:	pop    esi
  416d10:	jp     0x416d81
  416d12:	clc    
  416d13:	mov    edi,0x7d46ab2f
  416d18:	inc    esp
  416d19:	sub    BYTE PTR [ebx],al
  416d1b:	lds    esi,FWORD PTR [edx+0x29]
  416d1e:	repz data16 fmul QWORD PTR [ebp+0x36]
  416d23:	pop    ecx
  416d24:	jecxz  0x416cb1
  416d26:	int3   
  416d27:	sbb    BYTE PTR [ecx+0x3b],dl
  416d2a:	push   0xffffffd6
  416d2c:	mov    ds:0x147ceff9,al
  416d31:	inc    edx
  416d32:	int    0xd4
  416d34:	jge    0x416db4
  416d36:	dec    esi
  416d37:	lods   al,BYTE PTR ds:[esi]
  416d38:	ins    BYTE PTR es:[edi],dx
  416d39:	js     0x416d3e
  416d3b:	test   al,0xd3
  416d3d:	(bad)  
  416d3e:	fcom   QWORD PTR [esp+edi*8-0x29]
  416d42:	cli    
  416d43:	sub    edi,DWORD PTR [ecx+0x600a11f1]
  416d49:	mov    ecx,0xadaa001
  416d4e:	pop    ebp
  416d4f:	or     al,0x34
  416d51:	sbb    BYTE PTR [esi+0x49541c65],cl
  416d57:	sbb    esp,edi
  416d59:	xor    eax,0xa6b0f0c2
  416d5e:	add    BYTE PTR [eax],0x16
  416d61:	(bad)  
  416d62:	mov    edx,0xddb1e280
  416d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d68:	stos   DWORD PTR es:[edi],eax
  416d69:	cli    
  416d6a:	xchg   edi,eax
  416d6b:	pop    esp
  416d6c:	in     al,0x8c
  416d6e:	xchg   edi,eax
  416d6f:	daa    
  416d70:	sub    al,0x81
  416d72:	lds    esp,FWORD PTR [edi]
  416d74:	lods   al,BYTE PTR ds:[esi]
  416d75:	dec    edi
  416d76:	push   0xccdc04f6
  416d7b:	lock pop ecx
  416d7d:	sbb    eax,0xc69c4ea5
  416d82:	inc    eax
  416d83:	jecxz  0x416dc1
  416d85:	aad    0xfd
  416d87:	inc    eax
  416d88:	mov    dl,0xb6
  416d8a:	xrelease mov DWORD PTR [ebp+0x10fac0a],eax
  416d91:	ins    BYTE PTR es:[edi],dx
  416d92:	sub    eax,0x69756e5c
  416d97:	loop   0x416d83
  416d99:	xchg   ecx,eax
  416d9a:	lods   al,BYTE PTR ds:[esi]
  416d9b:	jno    0x416d6f
  416d9d:	sub    dl,BYTE PTR [esi]
  416d9f:	xchg   ecx,eax
  416da0:	shl    DWORD PTR [ecx*4-0x545be62f],0x30
  416da8:	out    dx,al
  416da9:	clc    
  416daa:	xchg   esp,eax
  416dab:	cmp    eax,0xf54e6fa9
  416db0:	out    dx,al
  416db1:	jge    0x416d57
  416db3:	call   0xb1c0:0xdb23bab7
  416dba:	aad    0xfa
  416dbc:	cmc    
  416dbd:	sub    ecx,esi
  416dbf:	stc    
  416dc0:	ja     0x416e17
  416dc2:	aaa    
  416dc3:	sbb    BYTE PTR [esi-0x6e],dl
  416dc6:	imul   edx,DWORD PTR [ecx],0xffffffd0
  416dc9:	loopne 0x416e4a
  416dcb:	cli    
  416dcc:	popa   
  416dcd:	scas   al,BYTE PTR es:[edi]
  416dce:	pop    ss
  416dcf:	rcl    BYTE PTR [ecx-0xd5f195c],cl
  416dd5:	fcom   DWORD PTR [eax+0x392eca55]
  416ddb:	in     eax,0xe6
  416ddd:	cmp    BYTE PTR ds:0x70b78a3f,cl
  416de3:	sbb    eax,0xb5461220
  416de8:	inc    ebx
  416de9:	test   al,0x2d
  416deb:	dec    edx
  416dec:	aaa    
  416ded:	cmp    al,0x9
  416def:	inc    edi
  416df0:	imul   esi,esi,0x806ac1ed
  416df6:	repz sar esp,cl
  416df9:	sbb    ch,BYTE PTR [eax-0xed057cf]
  416dff:	jmp    0x416d9d
  416e01:	daa    
  416e02:	test   BYTE PTR [ebp+0x59],0x9f
  416e06:	add    ah,BYTE PTR [ebx-0x46ee5b06]
  416e0c:	fadd   st(6),st
  416e0e:	mov    ecx,0xab995b83
  416e13:	dec    edx
  416e14:	call   0x5510:0x138e8574
  416e1b:	sub    dh,BYTE PTR [edx-0x52]
  416e1e:	xlat   BYTE PTR ds:[ebx]
  416e1f:	jmp    0x2d383517
  416e24:	fld    QWORD PTR [edx]
  416e26:	(bad)  
  416e27:	repz jmp 0x416e4d
  416e2a:	out    dx,eax
  416e2b:	mov    bl,0xb8
  416e2d:	sti    
  416e2e:	stos   BYTE PTR es:[edi],al
  416e2f:	fs or  dh,ch
  416e32:	pop    ebp
  416e33:	sti    
  416e34:	inc    esi
  416e35:	fnstcw WORD PTR [eax+0x15de9c6]
  416e3b:	scas   eax,DWORD PTR es:[edi]
  416e3c:	fsubr  st,st(1)
  416e3e:	inc    eax
  416e3f:	xchg   edi,eax
  416e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e41:	sahf   
  416e42:	adc    eax,0x1c5c1357
  416e47:	test   eax,0x2473c384
  416e4c:	xchg   ebx,eax
  416e4d:	lods   eax,DWORD PTR ds:[esi]
  416e4e:	and    ch,cl
  416e50:	add    BYTE PTR [ecx+eax*4],dh
  416e53:	daa    
  416e54:	push   ebx
  416e55:	xchg   ebx,eax
  416e56:	xor    cl,dl
  416e58:	(bad)  [edx-0x2c]
  416e5b:	and    eax,0x67d851c4
  416e60:	sub    DWORD PTR [ecx+0x76],esi
  416e63:	pmuludq mm4,QWORD PTR [edx-0x40]
  416e67:	cwde   
  416e68:	lods   eax,DWORD PTR ds:[esi]
  416e69:	cmp    eax,DWORD PTR [edi]
  416e6b:	mov    eax,ds:0xb0aca2a8
  416e70:	test   al,0xfa
  416e72:	dec    edi
  416e73:	mov    bh,0x1
  416e75:	push   0x1d
  416e77:	pop    ecx
  416e78:	sub    BYTE PTR [ebp+ebp*1-0x6f2d3e08],dh
  416e7f:	xor    edi,DWORD PTR [edi]
  416e81:	das    
  416e82:	(bad)  
  416e83:	test   eax,0x43ad97f1
  416e88:	xchg   BYTE PTR [edx-0x7e6e6403],al
  416e8e:	ins    DWORD PTR es:[edi],dx
  416e8f:	sub    DWORD PTR [ecx],esp
  416e91:	in     eax,dx
  416e92:	sbb    BYTE PTR [ebp+eiz*8-0x5795e913],dh
  416e99:	rcl    BYTE PTR [esi-0x5c],0xf6
  416e9d:	mov    DWORD PTR [ecx],ebx
  416e9f:	cmp    BYTE PTR [edi],al
  416ea1:	popa   
  416ea2:	sub    cl,BYTE PTR [ebx+0x205a38c5]
  416ea8:	popf   
  416ea9:	call   0x774a7226
  416eae:	jg     0x416e54
  416eb0:	adc    bh,BYTE PTR [edx]
  416eb2:	pop    es
  416eb3:	vmwrite ebx,DWORD PTR [ebx+0x59]
  416eb7:	fnstcw WORD PTR [ebp+edx*4+0x60]
  416ebb:	jno    0x416e4d
  416ebd:	nop
  416ebe:	mov    ah,0x1c
  416ec0:	call   0x9f58e9bd
  416ec5:	test   eax,0x8175c20c
  416eca:	mov    bh,0x32
  416ecc:	imul   edx,edx,0xd
  416ecf:	push   0xffffffde
  416ed1:	int3   
  416ed2:	adc    cl,0x18
  416ed5:	inc    BYTE PTR [ecx+0x7]
  416ed8:	rol    DWORD PTR [ebx+0x2594ce0b],cl
  416ede:	outs   dx,DWORD PTR ds:[esi]
  416edf:	mov    DWORD PTR [ebp+0x44],eax
  416ee2:	xchg   esi,eax
  416ee3:	sub    DWORD PTR [edi-0x57],0xc43f99d9
  416eea:	fldpi  
  416eec:	dec    esi
  416eed:	cmp    eax,0x105595aa
  416ef2:	scas   eax,DWORD PTR es:[edi]
  416ef3:	add    eax,0xde9bd6f1
  416ef8:	inc    esp
  416ef9:	jb     0x416ec6
  416efb:	js     0x416f49
  416efd:	jne    0x416ee7
  416eff:	mov    ah,0xd3
  416f01:	sbb    esi,DWORD PTR [ebx+ebp*1]
  416f04:	xchg   edx,eax
  416f05:	in     al,0x50
  416f07:	sub    dl,BYTE PTR [edx+0x1c]
  416f0a:	pusha  
  416f0b:	stc    
  416f0c:	sub    DWORD PTR [edx],esp
  416f0e:	(bad)  
  416f0f:	dec    esp
  416f10:	fidivr DWORD PTR [ecx]
  416f12:	push   cs
  416f13:	fwait
  416f14:	pop    ss
  416f15:	mov    edx,0xb39a332d
  416f1a:	addr16 and al,0xf0
  416f1d:	cdq    
  416f1e:	jbe    0x416eb7
  416f20:	sub    al,BYTE PTR [ecx]
  416f22:	shl    DWORD PTR [eax+0x4d],1
  416f25:	jmp    0xaf73:0x38d10e6d
  416f2c:	ficomp DWORD PTR [ebx-0x54]
  416f2f:	inc    ecx
  416f30:	pop    esi
  416f31:	jo     0x416f57
  416f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f34:	out    dx,al
  416f35:	xchg   DWORD PTR [ebx],eax
  416f37:	jnp    0x416f36
  416f39:	scas   eax,DWORD PTR es:[edi]
  416f3a:	outs   dx,BYTE PTR ds:[esi]
  416f3b:	mov    DWORD PTR [ebp+0x38],edx
  416f3e:	mov    edi,0x2ea2cd77
  416f43:	xor    ah,bh
  416f45:	out    dx,eax
  416f46:	dec    esi
  416f47:	bnd jmp 0x416f86
  416f4a:	xor    ch,ah
  416f4c:	lahf   
  416f4d:	mov    al,ds:0x3c9cae4
  416f52:	mov    edi,0x10eac9f3
  416f57:	clc    
  416f58:	int    0x8
  416f5a:	loopne 0x416f2a
  416f5c:	mov    dl,0x57
  416f5e:	clc    
  416f5f:	push   ebp
  416f60:	stc    
  416f61:	das    
  416f62:	hlt    
  416f63:	cdq    
  416f64:	nop
  416f65:	push   edi
  416f66:	mov    bh,BYTE PTR [ecx]
  416f68:	xchg   ebx,eax
  416f69:	mov    ch,BYTE PTR [eax-0x12f1be85]
  416f6f:	popa   
  416f70:	pop    edi
  416f71:	and    DWORD PTR [bp+di+0x18],edx
  416f75:	retf   0x433b
  416f78:	test   DWORD PTR [eax+0x1],ebp
  416f7b:	mov    WORD PTR [ebp+0x7434],ss
  416f81:	add    BYTE PTR [ebp+0x2c],dl
  416f84:	pop    edi
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx-0x545d09da]
  416f90:	mov    ch,0xf8
  416f92:	inc    edx
  416f93:	in     eax,dx
  416f94:	add    BYTE PTR [eax],al
  416f96:	cmc    
  416f97:	add    al,0x0
  416f99:	add    BYTE PTR [eax-0x6e],dh
  416f9c:	pop    esi
  416f9d:	or     DWORD PTR [esi-0x23],edi
  416fa0:	ret    0xda0a
  416fa3:	lock xchg esi,eax
  416fa5:	cs dec edx
  416fa7:	into   
  416fa8:	add    al,0x5e
  416faa:	ret    
  416fab:	icebp  
  416fac:	jmp    FWORD PTR [esi+0x2e]
  416faf:	cmp    eax,0xd1a3fc8f
  416fb4:	inc    edx
  416fb5:	mov    cl,0x4a
  416fb7:	lods   eax,DWORD PTR ds:[esi]
  416fb8:	xchg   ecx,eax
  416fb9:	fiadd  DWORD PTR [edi+0x65300fa4]
  416fbf:	mov    ebp,0x6f8803b5
  416fc4:	push   es
  416fc5:	xlat   BYTE PTR es:[ebx]
  416fc7:	test   al,0x9e
  416fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fca:	ret    
  416fcb:	outs   dx,BYTE PTR ds:[esi]
  416fcc:	jmp    0x416ff8
  416fce:	je     0x417039
  416fd0:	and    BYTE PTR [edi-0x70],bl
  416fd3:	(bad)  
  416fd4:	outs   dx,DWORD PTR ds:[esi]
  416fd5:	dec    edx
  416fd6:	jl     0x417015
  416fd8:	imul   BYTE PTR [ecx+0x1b]
  416fdb:	ss int 0x8f
  416fde:	fwait
  416fdf:	mov    cl,0xba
  416fe1:	xlat   BYTE PTR ds:[ebx]
  416fe2:	and    al,0xc
  416fe4:	pop    ds
  416fe5:	lods   al,BYTE PTR ds:[esi]
  416fe6:	mov    bh,0x5d
  416fe8:	(bad)  
  416fe9:	cli    
  416fea:	pop    es
  416feb:	cmc    
  416fec:	mov    DWORD PTR [ebp+0x14d6c58b],ebx
  416ff2:	xchg   BYTE PTR [esi+0x2df5003c],bl
  416ff8:	pushf  
  416ff9:	push   edi
  416ffa:	cdq    
  416ffb:	push   cs
  416ffc:	popf   
  416ffd:	and    DWORD PTR [esp+ebp*1-0x7f],edi
  417001:	sub    ch,BYTE PTR [esi+0x6c119415]
  417007:	push   ecx
  417008:	mov    ss,WORD PTR [ebp+0x5f953c81]
  41700e:	push   esi
  41700f:	xor    dl,BYTE PTR fs:[ecx]
  417012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417013:	inc    esi
  417014:	imul   esi,DWORD PTR [edx+0x4200ea3c],0x7a42adea
  41701e:	out    dx,eax
  41701f:	and    BYTE PTR [edx+0x667e0658],bh
  417025:	add    ecx,ebp
  417027:	push   ecx
  417028:	fcomp  st(7)
  41702a:	xchg   DWORD PTR [ebx],ecx
  41702c:	mov    ch,0x5e
  41702e:	sbb    dh,bh
  417030:	mov    al,ds:0x243de94e
  417035:	add    cl,bh
  417037:	mov    ebx,0x38a2205
  41703c:	jno    0x416fd6
  41703e:	fucom  st(0)
  417040:	xor    eax,0xb53b2b74
  417045:	test   BYTE PTR [esi-0x14],0x5f
  417049:	mov    ds:0x34df8e22,eax
  41704e:	mov    ah,0x67
  417050:	or     bh,bh
  417052:	xchg   ebp,eax
  417053:	(bad)  
  417054:	pop    edi
  417055:	(bad)  
  417056:	mov    WORD PTR [ecx-0x1e727e41],cs
  41705c:	xor    bl,BYTE PTR [ebp+edi*8-0x51]
  417060:	xchg   edi,eax
  417061:	call   0xc550:0x417228c
  417068:	retf   
  417069:	(bad)  
  41706b:	and    eax,0x9e641d7a
  417070:	push   cs
  417071:	fsub   st(6),st
  417073:	add    edi,eax
  417075:	sbb    edi,ebp
  417077:	retf   
  417078:	ja     0x416ffc
  41707a:	mov    ebx,0xe55f8f59
  41707f:	nop
  417080:	mov    dh,0x86
  417082:	sahf   
  417083:	and    edi,esp
  417085:	adc    eax,0x5d3e709
  41708a:	mov    ebp,0xf5803eb9
  41708f:	add    BYTE PTR [edx],ch
  417091:	fidiv  DWORD PTR [eax]
  417093:	mov    ds:0xf1c76c8e,eax
  417098:	dec    ebp
  417099:	push   ebp
  41709a:	xor    DWORD PTR [ecx-0x38],esi
  41709d:	shl    DWORD PTR [edi-0x10],1
  4170a0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4170a2:	jb     0x4170ba
  4170a4:	jmp    0xc978:0x491bf264
  4170ab:	jl     0x4170a7
  4170ad:	xchg   ebx,eax
  4170ae:	jns    0x41711c
  4170b0:	jl     0x4170de
  4170b2:	inc    esp
  4170b3:	hlt    
  4170b4:	fsub   DWORD PTR [edi-0x50]
  4170b7:	ficom  DWORD PTR [ebp+eax*8-0x6cebd218]
  4170be:	mov    BYTE PTR [eax-0x5],0x64
  4170c2:	sti    
  4170c3:	and    al,0xed
  4170c5:	sub    al,0xf1
  4170c7:	jno    0x4170d5
  4170c9:	leave  
  4170ca:	and    al,BYTE PTR [ebp-0x4d]
  4170cd:	dec    ebp
  4170ce:	call   0x5ba:0xf0f2ee51
  4170d5:	and    ebp,ebp
  4170d7:	jno    0x4170f7
  4170d9:	inc    ebx
  4170da:	hlt    
  4170db:	mov    gs,WORD PTR [ebx]
  4170dd:	in     eax,dx
  4170de:	mov    bl,0x96
  4170e0:	ja     0x4170b7
  4170e2:	stc    
  4170e3:	xchg   edi,eax
  4170e4:	sub    bh,BYTE PTR [eax+0x4768c8b4]
  4170ea:	jne    0x417162
  4170ec:	mov    edx,0xbacfbb49
  4170f1:	into   
  4170f2:	aad    0x41
  4170f4:	(bad)  
  4170f5:	call   0xadee:0x1b4c24dd
  4170fc:	push   0x2c
  4170fe:	mov    bh,0x93
  417100:	dec    ecx
  417101:	sbb    ah,BYTE PTR [ecx-0x7a]
  417104:	xor    DWORD PTR [ebx+ecx*1],esp
  417107:	dec    esi
  417108:	dec    edx
  417109:	fdivr  QWORD PTR [edx+0x31d0b8b8]
  41710f:	push   DWORD PTR [esi-0x2a12fc62]
  417115:	xor    ebp,DWORD PTR [eax+0x45c022d8]
  41711b:	add    eax,0x86f3ea9c
  417120:	mov    eax,0x2c350ff1
  417125:	nop
  417126:	cld    
  417127:	setp   BYTE PTR [ebp-0x33]
  41712b:	push   edi
  41712c:	and    DWORD PTR [ebx],0xb5526c8b
  417132:	sub    eax,0x8bb36eef
  417137:	xchg   esi,eax
  417138:	sub    bl,BYTE PTR [esi+0x70bc9977]
  41713e:	sub    eax,0x6f83afbb
  417143:	rcr    cl,1
  417145:	loope  0x4170e2
  417147:	push   ecx
  417148:	cmc    
  417149:	mov    BYTE PTR [edi*8+0x6f30f3c9],cl
  417150:	loope  0x417168
  417152:	ficomp DWORD PTR [ecx+0x5a]
  417155:	fistp  QWORD PTR [ebx]
  417157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417158:	loop   0x4171c8
  41715a:	ds in  al,dx
  41715c:	mov    eax,0x6c51cc6a
  417161:	inc    edi
  417162:	jp     0x417155
  417164:	cmp    al,0x20
  417166:	rcl    dl,0xe2
  417169:	xchg   esp,eax
  41716a:	jmp    FWORD PTR ds:0xa26587e
  417170:	xchg   ecx,eax
  417171:	rcr    DWORD PTR [ecx],0x23
  417174:	push   esi
  417175:	pop    esi
  417176:	jge    0x417144
  417178:	test   DWORD PTR [edx-0x73],edi
  41717b:	daa    
  41717c:	out    dx,al
  41717d:	call   0xd20b:0x789a5930
  417184:	pop    ds
  417185:	and    eax,0x6c3480d3
  41718a:	sbb    esp,DWORD PTR [bp+0x7bf5]
  41718f:	dec    edx
  417190:	sahf   
  417191:	jmp    0x8b955ed5
  417196:	test   eax,0x9daf6c65
  41719b:	aam    0xf1
  41719d:	mov    bh,0x1a
  41719f:	aas    
  4171a0:	or     al,0x39
  4171a2:	mov    WORD PTR [edi-0x28],?
  4171a5:	paddsw mm0,QWORD PTR [eax-0x65a5c73a]
  4171ac:	(bad)  
  4171ad:	mov    ebp,DWORD PTR [edi+esi*1]
  4171b0:	xchg   BYTE PTR [edx-0x550f770f],ah
  4171b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171b7:	jecxz  0x417224
  4171b9:	pop    ds
  4171ba:	push   edi
  4171bb:	xchg   ebp,eax
  4171bc:	stc    
  4171bd:	dec    ebp
  4171be:	pop    esp
  4171bf:	mov    BYTE PTR [eax+0x7773013e],dl
  4171c5:	push   ebx
  4171c6:	ins    BYTE PTR es:[edi],dx
  4171c7:	sar    esp,0x44
  4171ca:	loop   0x417207
  4171cc:	test   DWORD PTR [edi-0x753a20b8],eax
  4171d2:	cmp    BYTE PTR [eax],al
  4171d4:	xlat   BYTE PTR ds:[ebx]
  4171d5:	jns    0x4171cb
  4171d7:	cmp    dh,cl
  4171d9:	or     DWORD PTR [ebx+0x64],eax
  4171dc:	xchg   ebp,eax
  4171dd:	xchg   ebx,eax
  4171de:	adc    al,0x3e
  4171e0:	adc    al,0x47
  4171e2:	mov    ebp,0xd0b36fb5
  4171e7:	bound  edx,QWORD PTR [esi+0x4c]
  4171ea:	sub    BYTE PTR [ebx-0x25],0x6
  4171ee:	add    edi,DWORD PTR [ecx+0x78]
  4171f1:	cvtps2pi mm6,xmm6
  4171f4:	or     eax,0xf9b86f60
  4171f9:	mov    esp,0xe23f0834
  4171fe:	dec    ebp
  4171ff:	js     0x41718d
  417201:	dec    edx
  417202:	lods   eax,DWORD PTR ds:[esi]
  417203:	xchg   ebp,eax
  417204:	xor    DWORD PTR [edx],esi
  417206:	jp     0x4171b7
  417208:	ja     0x41727c
  41720a:	imul   edi,esp,0x18
  41720d:	in     eax,dx
  41720e:	pop    ebp
  41720f:	jge    0x41720c
  417211:	(bad)  
  417212:	enter  0xb5e6,0xd9
  417216:	bound  eax,QWORD PTR [eax-0x1a46b7a]
  41721c:	int3   
  41721d:	addr16 xchg esi,eax
  41721f:	jle    0x417220
  417221:	aas    
  417222:	aas    
  417223:	jle    0x417281
  417225:	leave  
  417226:	(bad)  
  417227:	rcr    BYTE PTR [ebp-0x33],cl
  41722a:	xor    al,0x39
  41722c:	out    dx,al
  41722d:	inc    ebx
  41722e:	imul   ecx,DWORD PTR [edx-0x77b05156],0x15
  417235:	scas   eax,DWORD PTR es:[edi]
  417236:	mov    ds:0x55de46db,al
  41723b:	aam    0x68
  41723d:	imul   ebp,DWORD PTR ss:[ebp-0x34],0xffffffbd
  417242:	leave  
  417243:	sub    BYTE PTR [edi-0x19c5db26],0xf1
  41724a:	mov    edi,esp
  41724c:	stc    
  41724d:	mov    bh,0x27
  417250:	lods   eax,DWORD PTR ds:[esi]
  417251:	out    dx,al
  417252:	mov    ebx,0xe302d0b3
  417257:	xchg   edi,eax
  417258:	adc    DWORD PTR [ebp-0x24],edx
  41725b:	rcl    bl,0xdb
  41725e:	ins    DWORD PTR es:[edi],dx
  41725f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417260:	inc    edi
  417261:	dec    esi
  417262:	imul   edi,esp,0xffffff96
  417265:	stos   DWORD PTR es:[edi],eax
  417266:	jnp    0x4172e1
  417268:	das    
  417269:	das    
  41726a:	lahf   
  41726b:	jae    0x417258
  41726d:	mov    dl,0xeb
  41726f:	aas    
  417270:	dec    DWORD PTR [ebx+0x57]
  417273:	call   0xfc11:0xec072e4c
  41727a:	mov    ds:0x3c7a267b,al
  41727f:	mov    al,ds:0x53caafe4
  417284:	adc    eax,0x2f5876cd
  417289:	adc    ecx,DWORD PTR [esi+0x7e7544e6]
  41728f:	mov    ebp,0x4ff5d18c
  417294:	cmp    bl,BYTE PTR [eax+0x70d6114d]
  41729a:	(bad)
  41729e:	xchg   edx,eax
  41729f:	xchg   DWORD PTR [eax+eiz*2-0x5c],eax
  4172a3:	dec    edx
  4172a4:	aam    0x2a
  4172a6:	sbb    edx,DWORD PTR [eax+0x395df1c0]
  4172ac:	clc    
  4172ad:	xchg   ebp,eax
  4172ae:	dec    esi
  4172af:	dec    DWORD PTR [ebp+0x60cb8ae7]
  4172b5:	adc    eax,0xe7ee6c8f
  4172ba:	lods   al,BYTE PTR ds:[esi]
  4172bb:	in     eax,dx
  4172bc:	(bad)  
  4172bd:	outs   dx,DWORD PTR ds:[esi]
  4172be:	push   eax
  4172bf:	mov    ah,BYTE PTR [edx-0x3b]
  4172c2:	xchg   edi,eax
  4172c3:	(bad)  
  4172c4:	aam    0x1c
  4172c6:	sbb    eax,0x4c2d07a3
  4172cb:	cmp    DWORD PTR [edx],ecx
  4172cd:	and    BYTE PTR [eax+eax*8],0xf8
  4172d1:	mov    ds:0x411a9729,eax
  4172d6:	jb     0x4172ea
  4172d8:	sbb    eax,0x19a0916
  4172dd:	mov    ch,0xff
  4172df:	div    ch
  4172e1:	loope  0x41729d
  4172e3:	out    dx,al
  4172e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172e5:	(bad)  [edi+ecx*1]
  4172e8:	enter  0xba9a,0xf
  4172ec:	jecxz  0x417351
  4172ee:	or     ebp,ecx
  4172f0:	ret    0xd90e
  4172f3:	call   0x7346:0xb83d7a88
  4172fa:	outs   dx,DWORD PTR ds:[esi]
  4172fb:	out    0x2b,al
  4172fd:	mov    ebp,0x4dbaa6a6
  417302:	lods   eax,DWORD PTR ds:[esi]
  417303:	dec    ebp
  417304:	xchg   ecx,eax
  417305:	and    DWORD PTR [edi+0x10],edx
  417308:	lds    esi,FWORD PTR [esi+0x6a]
  41730b:	jg     0x4172f9
  41730d:	xrelease xchg BYTE PTR [esp+ebp*2-0x3685b886],al
  417315:	push   ebp
  417316:	cmc    
  417317:	xchg   edi,eax
  417318:	add    DWORD PTR [ecx+0x33],edx
  41731b:	dec    ecx
  41731c:	shrd   DWORD PTR [edi],ebx,0x40
  417320:	dec    edi
  417321:	(bad)  
  417322:	adc    eax,0xb70e55b8
  417327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417328:	dec    ebp
  417329:	and    eax,0x644e22f5
  41732e:	imul   BYTE PTR [eax+0x71]
  417331:	nop
  417332:	lea    esp,[ebp+ecx*1+0x19]
  417336:	gs jle 0x41731b
  417339:	das    
  41733a:	inc    ebp
  41733b:	xchg   ebx,eax
  41733c:	(bad)  
  41733d:	jle    0x4172f3
  41733f:	jnp    0x41735e
  417341:	loope  0x417320
  417343:	aaa    
  417344:	adc    bl,BYTE PTR [edi+0x6da4f64e]
  41734a:	lahf   
  41734b:	adc    eax,0x6f9d14e8
  417350:	mov    al,ds:0x633a9a38
  417355:	mov    al,0xe5
  417357:	call   0x34c0:0xccfaa634
  41735e:	or     al,0x72
  417360:	jbe    0x4173a4
  417362:	out    0xe8,eax
  417364:	dec    ebx
  417365:	mov    ds:0x273d3761,eax
  41736a:	jg     0x417304
  41736c:	and    al,0x3c
  41736e:	enter  0x13fd,0x7e
  417372:	pop    edx
  417373:	outs   dx,BYTE PTR ds:[esi]
  417374:	(bad)  
  417375:	call   DWORD PTR [esi-0x4c]
  417378:	test   BYTE PTR [eax-0x30],bh
  41737b:	rcr    DWORD PTR [edx+ebp*4-0x7d],1
  41737f:	adc    ebx,DWORD PTR [edx-0x5b7b8d8]
  417385:	mov    al,0xc0
  417387:	xchg   ecx,eax
  417388:	popa   
  417389:	sbb    edi,edx
  41738b:	sbb    DWORD PTR [ecx+ebp*8+0x56b33342],edx
  417392:	inc    ebp
  417393:	xor    ebp,DWORD PTR [edi+0x6ee7be06]
  417399:	adc    dl,ch
  41739b:	test   eax,0xae38aa08
  4173a0:	int3   
  4173a1:	test   eax,0xafc62e01
  4173a6:	ret    0xd901
  4173a9:	(bad)
  4173ad:	(bad)  
  4173ae:	icebp  
  4173af:	call   0xe003:0xc2c04f07
  4173b6:	sar    al,0x64
  4173b9:	adc    BYTE PTR [eax-0x50e18eb4],dl
  4173bf:	push   ds
  4173c0:	fmul   DWORD PTR [ebx+eax*8-0x6b]
  4173c4:	xor    DWORD PTR [ebp+0x5922e38a],esp
  4173ca:	out    dx,al
  4173cb:	cmp    DWORD PTR [ecx],0x93fe5492
  4173d1:	sbb    ebp,DWORD PTR [ebx+0x4c6f3f22]
  4173d7:	sbb    ebx,DWORD PTR [edx-0x73]
  4173da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173db:	out    dx,al
  4173dc:	(bad)  
  4173dd:	push   ds
  4173de:	jne    0x41738a
  4173e0:	hlt    
  4173e1:	mov    bh,0x81
  4173e3:	fdivr  st(7),st
  4173e5:	mov    esi,0x974c6615
  4173ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173eb:	retf   
  4173ec:	add    DWORD PTR [edi+0x52146057],esi
  4173f2:	in     al,dx
  4173f3:	xor    bl,cl
  4173f5:	mov    ecx,0x6cef8be9
  4173fa:	stos   BYTE PTR es:[edi],al
  4173fb:	inc    esi
  4173fc:	ja     0x417395
  4173fe:	(bad)  [edi+0x769a4edc]
  417404:	js     0x41740b
  417406:	js     0x4173bc
  417408:	mov    ebp,0x7810a906
  41740d:	cmp    al,0xd2
  41740f:	inc    edi
  417410:	xchg   ecx,eax
  417411:	stos   DWORD PTR es:[edi],eax
  417412:	mov    BYTE PTR [ebp-0x47],dl
  417415:	inc    ecx
  417416:	push   es
  417417:	rcl    DWORD PTR [eax+ebx*8-0x45d1a016],0x13
  41741f:	pop    esp
  417420:	push   0xed080caf
  417425:	pusha  
  417426:	cwde   
  417427:	stos   DWORD PTR es:[edi],eax
  417428:	sbb    ecx,DWORD PTR [eax+0x22]
  41742b:	mov    dh,0x43
  41742d:	fs sbb edx,ecx
  417430:	rol    DWORD PTR [edx+0x6f566a8a],0x89
  417437:	mov    bh,0x29
  417439:	fist   WORD PTR [eax-0x1]
  41743c:	push   cs
  41743d:	clc    
  41743e:	push   ebp
  41743f:	jb     0x417463
  417441:	mov    bl,0x47
  417443:	cmp    DWORD PTR [edi],ecx
  417445:	std    
  417446:	pop    ebx
  417447:	aas    
  417448:	adc    BYTE PTR [ebx],0x49
  41744b:	pop    esi
  41744c:	lea    edi,[ebp-0x1f]
  41744f:	add    al,0x5a
  417451:	dec    eax
  417452:	ins    BYTE PTR es:[edi],dx
  417453:	rcl    BYTE PTR [ebx+0xf],1
  417456:	out    0x63,al
  417458:	jmp    0xb41906ac
  41745d:	in     eax,dx
  41745e:	sbb    DWORD PTR [eax+0x39c27fc1],ebp
  417464:	pop    ebx
  417465:	xor    eax,0xdc388c19
  41746a:	cwde   
  41746b:	and    BYTE PTR [ecx],dh
  41746d:	stc    
  41746e:	mov    BYTE PTR [ecx-0x50],0xa1
  417472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417473:	outs   dx,DWORD PTR ds:[esi]
  417474:	xchg   ebp,ebx
  417476:	mov    ah,0x42
  417478:	inc    ebx
  417479:	pop    es
  41747a:	mov    dh,bl
  41747c:	(bad)  
  41747d:	or     al,0x19
  41747f:	mov    eax,ds:0x52bdf6b0
  417484:	or     al,BYTE PTR [ebx+eax*1]
  417487:	ret    
  417488:	imul   ebx,DWORD PTR [ecx],0xccc62991
  41748e:	push   ecx
  41748f:	add    BYTE PTR [eax],al
  417491:	add    bh,bl
  417493:	dec    ebp
  417494:	call   0x305f:0xdfdf9a89
  41749b:	adc    al,0x61
  41749d:	retf   0xbf90
  4174a0:	mov    al,0xbb
  4174a2:	aaa    
  4174a3:	repnz add BYTE PTR [eax],al
  4174a6:	cmc    
  4174a7:	add    al,0x0
  4174a9:	add    ah,ch
  4174ab:	cs jns 0x4174e7
  4174ae:	add    al,0x9
  4174b0:	cmp    al,0xfc
  4174b2:	inc    ecx
  4174b3:	shr    BYTE PTR [esi+0x30d2b026],cl
  4174b9:	jecxz  0x417455
  4174bb:	xlat   BYTE PTR ds:[ebx]
  4174bc:	dec    ebx
  4174bd:	cdq    
  4174be:	jl     0x417463
  4174c0:	pop    edx
  4174c1:	adc    bh,BYTE PTR [ebp+0x10cfe7ad]
  4174c7:	nop    DWORD PTR [ebp-0x807fbfa]
  4174ce:	xlat   BYTE PTR ds:[ebx]
  4174cf:	cld    
  4174d0:	push   edi
  4174d1:	mov    ecx,0x1db584ce
  4174d6:	xchg   DWORD PTR [ebx-0x4d7e4cee],eax
  4174dc:	adc    DWORD PTR [ecx+0x62],ebp
  4174df:	jnp    0x4174a8
  4174e1:	dec    edx
  4174e2:	lahf   
  4174e3:	cwde   
  4174e4:	jo     0x4174a1
  4174e6:	in     al,dx
  4174e7:	pop    esp
  4174e8:	jg     0x41746b
  4174ea:	imul   esi,DWORD PTR ds:0xc8949b08,0x37c4a7e5
  4174f4:	cmp    eax,0xb8766930
  4174f9:	enter  0xcec6,0x77
  4174fd:	stos   DWORD PTR es:[edi],eax
  4174fe:	xchg   DWORD PTR [ebp-0x77],edi
  417501:	and    eax,0xd9e6078a
  417506:	inc    edi
  417507:	dec    ebx
  417508:	push   edi
  417509:	pusha  
  41750a:	jmp    0x417580
  41750c:	leave  
  41750d:	xchg   BYTE PTR [ebp+0x62],bh
  417510:	(bad)  
  417511:	(bad)  [edi+0x528d590f]
  417517:	out    dx,eax
  417518:	mov    ch,0x79
  41751a:	sbb    eax,eax
  41751c:	icebp  
  41751d:	scas   eax,DWORD PTR es:[edi]
  41751e:	jbe    0x4174da
  417520:	and    eax,0x11c0961c
  417525:	sti    
  417526:	add    ch,0xbb
  417529:	fisttp DWORD PTR [eax]
  41752b:	push   eax
  41752c:	push   eax
  41752d:	ja     0x417576
  41752f:	jecxz  0x4174b1
  417531:	and    eax,0x3aae4c57
  417536:	push   edi
  417537:	mov    eax,0xfdf01c5c
  41753c:	pushf  
  41753d:	(bad)  
  41753e:	sub    bl,cl
  417540:	lods   eax,DWORD PTR ds:[esi]
  417541:	shr    edx,0x43
  417544:	mov    esi,0x205bf9f9
  417549:	inc    ecx
  41754a:	out    0xc,al
  41754c:	and    BYTE PTR [ecx],al
  41754e:	jnp    0x4174fe
  417550:	dec    BYTE PTR [ebp+0x33]
  417553:	imul   ebx,DWORD PTR [ebx+0x6d73c8c5],0x75345d3f
  41755d:	sbb    ecx,DWORD PTR [eax]
  41755f:	sbb    cl,BYTE PTR [ecx]
  417561:	out    0xc,al
  417563:	push   cs
  417564:	pop    ebx
  417565:	push   ebp
  417566:	cwde   
  417567:	lahf   
  417568:	outs   dx,DWORD PTR fs:[esi]
  41756a:	adc    BYTE PTR [ebx],ah
  41756c:	push   eax
  41756d:	adc    ecx,DWORD PTR ds:0x7cfe1ee6
  417573:	lods   al,BYTE PTR ds:[esi]
  417574:	out    dx,eax
  417575:	mov    bl,0x71
  417577:	aas    
  417578:	push   esi
  417579:	push   ebx
  41757a:	int    0x45
  41757c:	mov    DWORD PTR [esi+0x15],edx
  41757f:	out    dx,al
  417580:	jle    0x41751a
  417582:	cld    
  417583:	aaa    
  417584:	test   BYTE PTR [eax-0x2b7a482a],dl
  41758a:	fs pop es
  41758c:	sbb    BYTE PTR [edi-0x4f0ed70],0xe9
  417593:	and    eax,0x5865cdfb
  417598:	push   esp
  417599:	push   es
  41759a:	xchg   ecx,eax
  41759b:	mov    ecx,0x194fd8e2
  4175a0:	pop    ebx
  4175a1:	push   ecx
  4175a2:	fidivr WORD PTR [esi-0x6a]
  4175a5:	sub    ah,BYTE PTR [edi+0x451834c0]
  4175ab:	repz cmp edx,DWORD PTR [edi+0x3]
  4175af:	gs rol ah,cl
  4175b2:	(bad)  
  4175b3:	inc    edx
  4175b4:	dec    ecx
  4175b5:	cld    
  4175b6:	push   edx
  4175b7:	arpl   cx,bp
  4175b9:	cld    
  4175ba:	and    eax,0x5287b166
  4175bf:	sub    al,BYTE PTR [esi+0x184bba13]
  4175c5:	dec    esp
  4175c6:	test   DWORD PTR [ebx],esi
  4175c8:	jg     0x4175ca
  4175ca:	loopne 0x417626
  4175cc:	int    0x94
  4175ce:	dec    edi
  4175cf:	sub    DWORD PTR [ebx+0x2898cd7a],edi
  4175d5:	popa   
  4175d6:	jb     0x4175fd
  4175d8:	and    eax,0xde77e15e
  4175dd:	popa   
  4175de:	push   edi
  4175df:	sub    eax,0xe61a6cac
  4175e4:	loope  0x417638
  4175e6:	rol    edx,cl
  4175e8:	add    eax,DWORD PTR [esi-0x31]
  4175eb:	ror    ebx,1
  4175ed:	and    BYTE PTR [ebx+0x27],bl
  4175f0:	stos   BYTE PTR es:[edi],al
  4175f1:	jae    0x41761d
  4175f3:	cmp    al,0x12
  4175f5:	or     DWORD PTR ds:0x76dac4a1,edx
  4175fb:	loop   0x41766a
  4175fd:	mov    dh,cl
  4175ff:	in     al,dx
  417600:	cmovno edi,DWORD PTR [ebx]
  417603:	aam    0x30
  417605:	add    eax,0x6aa2a25f
  41760a:	enter  0x4f8e,0xba
  41760e:	mov    DWORD PTR [ebx+eiz*2],ecx
  417611:	out    dx,al
  417612:	inc    ecx
  417613:	(bad)  
  417615:	mov    dl,0x0
  417617:	in     eax,dx
  417618:	mov    esp,0xf5761f6b
  41761d:	push   0x14
  41761f:	xor    al,0x43
  417621:	ror    BYTE PTR [ecx-0x6e9578c8],cl
  417627:	mov    dh,BYTE PTR [edi+eax*4-0xbff192]
  41762e:	dec    ebx
  41762f:	xor    al,dh
  417631:	shl    DWORD PTR gs:[eax+esi*1+0x786a0e4c],0x83
  41763a:	out    0xff,al
  41763c:	push   ebx
  41763d:	jp     0x4176a8
  41763f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417640:	xor    ecx,ebp
  417642:	or     DWORD PTR [esi-0x2e],eax
  417645:	cdq    
  417646:	adc    cl,BYTE PTR [ebx]
  417648:	inc    ecx
  417649:	mov    dl,dh
  41764b:	inc    ecx
  41764c:	daa    
  41764d:	out    dx,eax
  41764e:	jns    0x417652
  417650:	daa    
  417651:	push   edx
  417652:	xchg   DWORD PTR [edx-0x14],ebx
  417655:	pop    ecx
  417656:	dec    ebx
  417657:	(bad)  
  417658:	iret   
  417659:	sbb    al,BYTE PTR [esi-0x5cf30e9b]
  41765f:	mov    esp,0xa1381777
  417664:	xchg   esi,eax
  417665:	xchg   edi,eax
  417666:	imul   esi,DWORD PTR [ecx],0x56
  417669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41766a:	pop    esp
  41766b:	rcl    BYTE PTR [esp-0x67345207],1
  417672:	addr16 jge 0x4175f6
  417675:	inc    ebx
  417676:	outs   dx,DWORD PTR ds:[esi]
  417677:	push   es
  417678:	add    DWORD PTR [ecx],edi
  41767a:	pushf  
  41767b:	push   ss
  41767c:	xchg   ebx,eax
  41767d:	cli    
  41767e:	cli    
  41767f:	and    dl,bh
  417681:	(bad)  
  417682:	aad    0x8b
  417684:	inc    edi
  417685:	push   0x3ff8e3b5
  41768a:	add    DWORD PTR [esi+0x25],eax
  41768d:	sub    esp,ebx
  41768f:	push   esi
  417690:	jle    0x4176df
  417692:	adc    eax,0x6abb541a
  417697:	xlat   BYTE PTR ds:[ebx]
  417698:	dec    esp
  417699:	mov    bl,0xed
  41769b:	mov    ch,BYTE PTR [esi-0x34fb91a]
  4176a1:	mov    esi,0x79e27e63
  4176a6:	add    eax,0xf3a1fe36
  4176ab:	xchg   edi,eax
  4176ac:	into   
  4176ad:	push   ss
  4176ae:	(bad)  
  4176af:	cmp    al,BYTE PTR [ecx-0x68965094]
  4176b5:	mov    ecx,0x532db8ce
  4176ba:	lock mov al,ds:0x686800ae
  4176c0:	xchg   ebp,eax
  4176c1:	les    esp,FWORD PTR [eax]
  4176c3:	push   es
  4176c4:	xchg   ecx,eax
  4176c5:	jl     0x417658
  4176c7:	or     DWORD PTR [ebx+0x75290ed5],edx
  4176cd:	sub    cl,cl
  4176cf:	add    eax,0x7b93c538
  4176d4:	push   ds
  4176d5:	imul   eax,DWORD PTR [ebx-0x65],0xffffffab
  4176d9:	xor    eax,0xdbbaf06c
  4176de:	loop   0x41770c
  4176e0:	shl    BYTE PTR [ebx],1
  4176e2:	outs   dx,BYTE PTR ss:[esi]
  4176e4:	jg     0x4176ac
  4176e6:	stos   BYTE PTR es:[edi],al
  4176e7:	xor    esp,DWORD PTR [ecx-0x46]
  4176ea:	(bad)  [ecx+0x5f]
  4176ed:	mov    bh,0x36
  4176ef:	sbb    eax,0x3a10e166
  4176f4:	loop   0x4176a4
  4176f6:	jno    0x41767b
  4176f8:	pop    ds
  4176f9:	pop    esp
  4176fa:	push   0x45
  4176fc:	fmul   QWORD PTR [esi+0x1d19a9]
  417702:	adc    al,0x90
  417704:	mov    ebx,DWORD PTR [ebx+ebp*4-0x3853c2c6]
  41770b:	xchg   ebp,eax
  41770c:	test   DWORD PTR [esi-0x8d90f9d],ebp
  417712:	fnstcw WORD PTR [ebx]
  417714:	fdivr  DWORD PTR [ecx+0x79029847]
  41771a:	retf   
  41771b:	arpl   WORD PTR [esp+eax*8-0x400612f1],bx
  417722:	mov    bl,0xbd
  417724:	loop   0x417793
  417726:	or     BYTE PTR [esi+0x61e630ed],0x6
  41772d:	inc    edi
  41772e:	adc    ecx,ebp
  417730:	enter  0xfaa,0xa7
  417734:	add    al,bl
  417736:	pop    edx
  417737:	ret    0xe14d
  41773a:	and    DWORD PTR [esp+eiz*8+0x228c2f3e],0x42f08306
  417745:	enter  0xcc79,0x1
  417749:	xchg   ebp,eax
  41774a:	pop    edx
  41774b:	int3   
  41774c:	call   0x10fd131b
  417751:	mov    ecx,0x25aa099d
  417756:	mov    cl,0x6e
  417758:	mov    al,0x8b
  41775a:	neg    edx
  41775c:	mov    WORD PTR [edi],es
  41775e:	push   edx
  41775f:	cld    
  417760:	sbb    DWORD PTR [ecx],0x6d
  417763:	ret    
  417764:	jge    0x4177cd
  417766:	mov    al,ds:0x333dd857
  41776b:	mov    ds:0x782cd329,eax
  417770:	mov    esi,0x97e605ba
  417775:	sahf   
  417776:	mov    eax,0xa1cc8238
  41777b:	add    DWORD PTR [ebx],edi
  41777d:	cmp    ecx,DWORD PTR ds:[ecx-0x10b46fda]
  417784:	jbe    0x41776c
  417786:	jno    0x417793
  417788:	loop   0x41779b
  41778a:	jecxz  0x41778b
  41778c:	jp     0x417766
  41778e:	and    al,0x1e
  417790:	test   al,0xf2
  417792:	inc    ebx
  417793:	inc    ecx
  417794:	ffree  st(3)
  417796:	sub    ch,dl
  417798:	xchg   edx,eax
  417799:	stos   BYTE PTR es:[edi],al
  41779a:	push   0x64
  41779c:	fsub   DWORD PTR [esi+0x709da258]
  4177a2:	mov    ecx,0x61e46076
  4177a7:	dec    ecx
  4177a8:	std    
  4177a9:	pop    eax
  4177aa:	pop    edx
  4177ab:	scas   al,BYTE PTR es:[edi]
  4177ac:	xor    eax,0x36846298
  4177b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177b2:	pop    esp
  4177b3:	or     al,BYTE PTR [edi-0x522f15bf]
  4177b9:	int    0x32
  4177bb:	cmp    ebp,DWORD PTR [ebx-0x4c2c3524]
  4177c1:	and    eax,0x6b0e0c96
  4177c6:	aaa    
  4177c7:	(bad)  
  4177c8:	loop   0x417839
  4177ca:	mov    esp,0x3b11a0a2
  4177cf:	and    bl,dh
  4177d1:	add    al,0x29
  4177d3:	xor    BYTE PTR [esi],dh
  4177d5:	cli    
  4177d6:	inc    ebx
  4177d7:	push   edx
  4177d8:	xchg   esp,eax
  4177d9:	jae    0x417783
  4177db:	sar    DWORD PTR [ebx],cl
  4177dd:	(bad)  
  4177de:	fist   DWORD PTR [ebx-0x2a]
  4177e1:	push   ebx
  4177e2:	add    dl,cl
  4177e4:	fwait
  4177e5:	mov    eax,0xfdd3ffab
  4177ea:	or     BYTE PTR [ecx-0x14],ah
  4177ed:	stc    
  4177ee:	dec    ebx
  4177ef:	sub    eax,0x59538f8b
  4177f4:	jo     0x4177fb
  4177f6:	sar    DWORD PTR [edi-0x28f58bd0],1
  4177fc:	dec    ecx
  4177fd:	fld    QWORD PTR [ebp-0x48297dec]
  417803:	mov    al,0xe4
  417805:	mov    bh,0xcd
  417807:	inc    eax
  417808:	pop    ds
  417809:	xor    esi,DWORD PTR [ebx+0x1588150d]
  41780f:	and    bh,BYTE PTR [edi+0x49150cad]
  417815:	adc    dl,cl
  417817:	add    edx,DWORD PTR [ebp-0x58750396]
  41781d:	xor    edi,DWORD PTR [edx-0x77]
  417820:	pop    ebx
  417821:	push   esp
  417822:	int    0x65
  417824:	retf   
  417825:	mov    ebp,0x41797df0
  41782a:	and    dl,ah
  41782c:	or     al,0xaf
  41782e:	xchg   esi,eax
  41782f:	mul    BYTE PTR [eax-0x79]
  417832:	sbb    eax,0xa7b67e94
  417837:	jl     0x41786d
  417839:	add    ebp,DWORD PTR [edx]
  41783b:	in     eax,0x74
  41783d:	add    BYTE PTR [ecx],al
  41783f:	mov    ah,0x8b
  417841:	inc    esp
  417842:	js     0x417830
  417844:	mov    dl,0xa0
  417846:	cmp    ecx,DWORD PTR [esi-0x2b1535f4]
  41784c:	push   ebp
  41784d:	lods   eax,DWORD PTR ds:[esi]
  41784e:	mov    ebx,0x9adf6da1
  417853:	and    ebp,ebx
  417855:	add    eax,0x8ea3e2e8
  41785a:	ret    
  41785b:	cmc    
  41785c:	sub    BYTE PTR [ecx],ah
  41785e:	mov    ds:0x3c679b04,eax
  417863:	arpl   WORD PTR [ebx],sp
  417865:	inc    esp
  417866:	mov    cs,WORD PTR [esi]
  417868:	scas   al,BYTE PTR es:[edi]
  417869:	test   eax,0x8a5d9206
  41786f:	inc    edi
  417870:	push   es
  417871:	fucomp st(0)
  417873:	mov    ds:0xae1a02c,eax
  417878:	jmp    0xda04:0x841a7efe
  41787f:	xchg   ebx,eax
  417880:	jno    0x41788e
  417882:	jge    0x417876
  417884:	retf   0x98e6
  417887:	sbb    ebx,eax
  417889:	and    al,0x3d
  41788b:	dec    esp
  41788c:	arpl   cx,si
  41788e:	in     eax,dx
  41788f:	mov    edx,0x477f2e54
  417894:	fsubr  QWORD PTR [ebx+edi*8+0x50da018d]
  41789b:	aas    
  41789c:	xchg   esi,eax
  41789d:	pop    es
  41789e:	pushf  
  41789f:	out    0xeb,eax
  4178a1:	cmp    esi,esp
  4178a3:	or     al,bl
  4178a5:	push   esp
  4178a6:	int3   
  4178a7:	popf   
  4178a8:	dec    ebx
  4178a9:	jno    0x417895
  4178ab:	or     bl,BYTE PTR [esi]
  4178ad:	ror    BYTE PTR [ebx-0x5a],0x60
  4178b1:	cwde   
  4178b2:	dec    eax
  4178b3:	fcom   QWORD PTR [esi]
  4178b5:	dec    esi
  4178b6:	gs in  eax,0xd4
  4178b9:	dec    esp
  4178ba:	cmp    BYTE PTR [ebp+eiz*8-0x6],ch
  4178be:	pop    edx
  4178bf:	inc    ebp
  4178c0:	cmc    
  4178c1:	sbb    BYTE PTR [ecx-0x71],al
  4178c4:	push   ecx
  4178c5:	lods   al,BYTE PTR ds:[esi]
  4178c6:	test   BYTE PTR [ecx-0x6063eda4],al
  4178cc:	mov    esp,0xdd86890f
  4178d1:	dec    ecx
  4178d2:	or     BYTE PTR [edi+ebx*2],ah
  4178d5:	stc    
  4178d6:	xchg   edx,eax
  4178d7:	mov    al,0x51
  4178d9:	adc    DWORD PTR [edi],esi
  4178db:	jmp    0x44df:0x3f55dc5d
  4178e2:	daa    
  4178e3:	daa    
  4178e4:	in     al,dx
  4178e5:	fist   DWORD PTR [esi+0x1e]
  4178e8:	adc    eax,0xe9857ee0
  4178ed:	call   0xb423:0x2f7e48cc
  4178f4:	ja     0x4178f5
  4178f6:	sub    eax,0x6f4f32da
  4178fb:	nop
  4178fc:	jg     0x4178f1
  4178fe:	jae    0x417893
  417900:	or     DWORD PTR [esi-0x44fc803d],0x29aa52e4
  41790a:	cmp    BYTE PTR [esi+edi*4-0x5c],cl
  41790e:	mov    eax,0x6074eb04
  417913:	xchg   edi,eax
  417914:	imul   esp,DWORD PTR [eax-0x3dab9b5],0x8901bbc6
  41791e:	inc    eax
  41791f:	push   ebx
  417920:	mov    al,0x43
  417922:	xor    BYTE PTR [ebp+0x2ba431db],bh
  417928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417929:	xchg   DWORD PTR [esi],ebx
  41792b:	xchg   ecx,eax
  41792c:	je     0x41791b
  41792e:	push   ecx
  41792f:	push   edi
  417930:	hlt    
  417931:	pop    ds
  417932:	mov    cl,ch
  417934:	inc    ecx
  417936:	dec    edi
  417937:	sbb    edx,eax
  417939:	xchg   ebx,eax
  41793a:	outs   dx,BYTE PTR ds:[esi]
  41793b:	xchg   edx,eax
  41793c:	ss (bad) 
  41793e:	lock aad 0x40
  417941:	inc    ecx
  417942:	fdivr  DWORD PTR [eax+0x518d98d2]
  417948:	imul   DWORD PTR [edx+0x402a2053]
  41794e:	dec    edx
  41794f:	pop    ss
  417950:	sub    edx,DWORD PTR [edi]
  417952:	(bad)  
  417953:	and    ch,al
  417955:	cwde   
  417956:	push   ecx
  417957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417958:	test   BYTE PTR [edx+0x3730d804],bh
  41795e:	xchg   ebx,eax
  41795f:	and    BYTE PTR [ecx-0x42a430ef],dl
  417965:	mul    DWORD PTR [esi-0x43dad5e1]
  41796b:	inc    eax
  41796c:	add    al,0x78
  41796e:	inc    edx
  41796f:	pop    esp
  417970:	scas   al,BYTE PTR es:[edi]
  417971:	mov    DWORD PTR [ebx-0x797dcf18],ebx
  417977:	outs   dx,BYTE PTR ds:[esi]
  417978:	xchg   ebx,eax
  417979:	xchg   esp,eax
  41797a:	call   0x9853111e
  41797f:	std    
  417980:	jp     0x41792a
  417982:	and    al,0x38
  417984:	out    0x60,al
  417986:	not    BYTE PTR [eax]
  417988:	cld    
  417989:	dec    edi
  41798a:	push   cs
  41798b:	es hlt 
  41798d:	mov    ch,0x13
  41798f:	loope  0x4179d9
  417991:	outs   dx,DWORD PTR ds:[esi]
  417992:	xor    BYTE PTR [ebx],bh
  417994:	stos   DWORD PTR es:[edi],eax
  417995:	sub    esp,ebx
  417997:	pushf  
  417998:	shl    DWORD PTR [ebp+0x77],1
  41799b:	popa   
  41799c:	sbb    BYTE PTR [esi],ch
  41799e:	add    BYTE PTR es:[eax],al
  4179a1:	add    BYTE PTR [esi],ah
  4179a3:	mov    ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x198ce975
  4179b1:	jmp    0x4f5:0xf72c
  4179b8:	add    BYTE PTR [eax],al
  4179ba:	pop    edi
  4179bb:	xchg   esp,eax
  4179bc:	js     0x417959
  4179be:	push   cs
  4179bf:	mov    ch,BYTE PTR ds:0xcfc4e447
  4179c5:	out    0x21,al
  4179c7:	(bad)  
  4179c9:	mov    ds:0x57f63670,eax
  4179ce:	jg     0x417967
  4179d0:	ficom  DWORD PTR [esi-0x1e7db0ca]
  4179d6:	add    eax,0x222566e6
  4179db:	(bad)  
  4179dc:	pop    edi
  4179dd:	enter  0xcd54,0xf
  4179e1:	mov    ah,0x6
  4179e3:	test   al,0xb7
  4179e5:	add    al,0x13
  4179e7:	jmp    0x21cd:0x32e10dfc
  4179ee:	and    esi,0xffffff8e
  4179f1:	adc    eax,0xc9c980d0
  4179f6:	fidivr WORD PTR [esi+0x51]
  4179f9:	add    BYTE PTR [ecx+0x509f3a94],cl
  4179ff:	dec    edx
  417a00:	(bad)  
  417a01:	cli    
  417a02:	cmp    eax,0x5a7e36f8
  417a07:	dec    edx
  417a08:	mov    es,WORD PTR [edi]
  417a0a:	pop    ss
  417a0b:	ja     0x417a0e
  417a0d:	imul   edi,DWORD PTR [edi-0x6785d025],0x52626a07
  417a17:	fs add esp,0xa3342dd9
  417a1e:	sbb    eax,0x4e446f73
  417a23:	jmp    0x832b30b7
  417a28:	and    al,0x12
  417a2a:	inc    esi
  417a2b:	sbb    ecx,ecx
  417a2d:	sub    al,0x4
  417a2f:	add    DWORD PTR [ecx+0x11],eax
  417a32:	mov    ds,WORD PTR [ecx-0x61]
  417a35:	xor    dl,BYTE PTR [ebx-0x606d2783]
  417a3b:	aaa    
  417a3c:	gs je  0x417aab
  417a3f:	rcl    BYTE PTR [edi],0xe4
  417a42:	add    eax,0x499ca474
  417a47:	inc    eax
  417a48:	jmp    0xcfe8d6a2
  417a4d:	and    eax,0x7cefea95
  417a52:	les    edi,FWORD PTR ds:0x2f976fc2
  417a58:	sahf   
  417a59:	es pop esi
  417a5b:	cmp    BYTE PTR [esi-0x41],ah
  417a5e:	test   BYTE PTR ds:0x4b457f4d,0x19
  417a65:	pop    ebp
  417a66:	(bad)  
  417a67:	out    dx,al
  417a68:	push   0xfffffffe
  417a6a:	mov    dh,0xbb
  417a6c:	outs   dx,BYTE PTR ds:[esi]
  417a6d:	adc    DWORD PTR [ecx],edx
  417a6f:	pop    ecx
  417a70:	or     BYTE PTR [edi-0x7269433e],cl
  417a76:	scas   al,BYTE PTR es:[edi]
  417a77:	aam    0xa
  417a79:	stc    
  417a7a:	dec    ebp
  417a7b:	call   0x9ba3:0x542f5a76
  417a82:	das    
  417a83:	ret    0xbad7
  417a86:	mov    WORD PTR [esi],?
  417a88:	jns    0x417ace
  417a8a:	jns    0x417abd
  417a8c:	cmp    BYTE PTR [esi-0x50],cl
  417a8f:	fiadd  WORD PTR [ecx+ecx*4+0x4a994ca2]
  417a96:	dec    esi
  417a97:	jnp    0x417aa7
  417a99:	mov    WORD PTR [esi-0x6b3a4b63],?
  417a9f:	mov    al,BYTE PTR [esi-0x7a]
  417aa2:	inc    esi
  417aa3:	push   ss
  417aa4:	dec    ebp
  417aa5:	mov    eax,0x3300f9d0
  417aaa:	adc    DWORD PTR [ebp+0x5e],0xc
  417aae:	gs push ebp
  417ab0:	test   DWORD PTR [esi-0x101f3f16],edi
  417ab6:	jmp    0x417a72
  417ab8:	cli    
  417ab9:	mov    ss,WORD PTR [eax+0x387c4548]
  417abf:	mov    dl,0xbd
  417ac1:	xlat   BYTE PTR ds:[ebx]
  417ac2:	xchg   ebx,eax
  417ac3:	int3   
  417ac4:	xchg   DWORD PTR [ecx-0x23b7658d],eax
  417aca:	call   0x269d:0xfcbb45fc
  417ad1:	pop    esi
  417ad2:	jg     0x417b2a
  417ad4:	mov    DWORD PTR [eax+ebx*1-0x1e840600],ecx
  417adb:	imul   ebp,DWORD PTR [ebp-0x3f4e294d],0x7f
  417ae2:	push   eax
  417ae3:	sbb    al,dl
  417ae5:	pop    ebp
  417ae6:	mov    edi,DWORD PTR [edi+0x16]
  417ae9:	fbld   TBYTE PTR [edx+eiz*2-0x134224a]
  417af0:	mov    ds:0x138653d3,al
  417af5:	addr16 push esi
  417af7:	out    0xb4,eax
  417af9:	adc    al,0x8c
  417afb:	pop    edx
  417afc:	jecxz  0x417afe
  417afe:	xor    BYTE PTR [esi-0x3a63f3c1],ch
  417b04:	call   0x8e4:0x6bb91e35
  417b0b:	sbb    ebx,DWORD PTR [edi-0x80]
  417b0e:	retf   0xa54c
  417b11:	nop
  417b12:	fst    DWORD PTR ds:0x907d9e68
  417b18:	cmp    al,0x22
  417b1a:	mov    edi,0xf4a029b4
  417b1f:	prefetch BYTE PTR [ebp+0x37ec8f99]
  417b26:	cli    
  417b27:	push   esi
  417b28:	outs   dx,DWORD PTR ds:[esi]
  417b29:	sahf   
  417b2a:	popa   
  417b2b:	sbb    eax,0x800f4d31
  417b30:	sbb    BYTE PTR [ebx],al
  417b32:	and    eax,0xb8eddf5e
  417b37:	(bad)  
  417b38:	jmp    0xf3c0:0x339c73d8
  417b3f:	mov    fs,WORD PTR [eax-0x64f08eee]
  417b45:	int3   
  417b46:	lods   al,BYTE PTR ds:[esi]
  417b47:	jmp    DWORD PTR [ecx+0x36]
  417b4a:	push   cs
  417b4b:	ret    0x2689
  417b4e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b50:	push   0x76bbca8b
  417b55:	cwde   
  417b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b57:	adc    ebp,DWORD PTR [ecx+0x1a]
  417b5a:	int    0x69
  417b5c:	dec    ebp
  417b5d:	pop    ebx
  417b5e:	xor    ch,BYTE PTR [edi+0x2b]
  417b61:	into   
  417b62:	sbb    ch,BYTE PTR [edx]
  417b64:	mov    DWORD PTR [esi-0x798ff160],eax
  417b6a:	retf   
  417b6b:	jl     0x417bdb
  417b6d:	in     eax,0x96
  417b6f:	into   
  417b70:	and    dl,BYTE PTR [edx+0x77ba5e55]
  417b76:	in     al,dx
  417b77:	push   ecx
  417b78:	mov    esi,0x6fe2b829
  417b7d:	sub    al,0x75
  417b7f:	lods   al,BYTE PTR ds:[esi]
  417b80:	cli    
  417b81:	mov    cl,0xbf
  417b83:	test   BYTE PTR [eax],ch
  417b85:	test   BYTE PTR [ecx+0x6fbb39dd],bl
  417b8b:	jle    0x417bc3
  417b8d:	loopne 0x417bfc
  417b8f:	sbb    DWORD PTR [ebx-0x1523d860],ecx
  417b95:	(bad)  
  417b96:	pop    esp
  417b97:	lahf   
  417b98:	add    eax,0x93ddae14
  417b9d:	addr16 mov edx,ecx
  417ba0:	shl    al,cl
  417ba2:	jae    0x417b9f
  417ba4:	aaa    
  417ba5:	jmp    0xe145:0x70952a68
  417bac:	inc    ecx
  417bad:	or     ah,0xc4
  417bb0:	scas   eax,DWORD PTR es:[edi]
  417bb1:	je     0x417bda
  417bb3:	push   edi
  417bb4:	cdq    
  417bb5:	das    
  417bb6:	push   esi
  417bb7:	cmc    
  417bb8:	inc    ebx
  417bb9:	pop    esp
  417bba:	or     cl,BYTE PTR [edx]
  417bbc:	gs mov cl,0x6a
  417bbf:	stc    
  417bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bc1:	or     BYTE PTR [esi-0x60eb9bfb],0xcb
  417bc8:	fxch   st(0)
  417bca:	jmp    0x40df:0xfdae8f2f
  417bd1:	loope  0x417b8f
  417bd3:	and    eax,0x4ca31f75
  417bd8:	and    eax,0x89c7ce9a
  417bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bde:	fstp   DWORD PTR [ecx]
  417be0:	mov    esi,0x752cb8fc
  417be5:	je     0x417c26
  417be7:	inc    ebp
  417be8:	mov    ebp,0x973acac8
  417bed:	push   ss
  417bee:	mov    edi,0xedd6d561
  417bf3:	mov    cl,0xd
  417bf5:	ret    
  417bf6:	ror    DWORD PTR [edi+0x6d],cl
  417bf9:	push   edx
  417bfa:	cmp    eax,0x8f81e2c3
  417bff:	sub    DWORD PTR [edx+0x78],edi
  417c02:	dec    ebp
  417c03:	lods   eax,DWORD PTR ds:[esi]
  417c04:	cwde   
  417c05:	add    esi,DWORD PTR [edx+0xc0b92b0]
  417c0b:	add    al,0x71
  417c0d:	ret    
  417c0e:	jne    0x417c5d
  417c10:	test   al,0xc3
  417c12:	pushf  
  417c13:	dec    esp
  417c14:	mov    ch,0xbc
  417c16:	jg     0x417c42
  417c18:	jl     0x417c85
  417c1a:	in     eax,0x1
  417c1c:	and    eax,0xa49990a4
  417c21:	cmp    eax,edx
  417c23:	push   cs
  417c24:	pop    edi
  417c25:	dec    ecx
  417c26:	clc    
  417c27:	and    BYTE PTR [esi+0x36d9f2a5],ch
  417c2d:	xlat   BYTE PTR ds:[ebx]
  417c2e:	mov    al,ds:0x9e349faf
  417c33:	pusha  
  417c34:	add    al,0x4a
  417c36:	aam    0x7a
  417c38:	sbb    bl,BYTE PTR [eax]
  417c3a:	mov    ecx,0xcd6cdd92
  417c3f:	test   BYTE PTR [ecx-0x175250c8],bl
  417c45:	xor    ebp,eax
  417c47:	sub    ecx,DWORD PTR [esi]
  417c49:	adc    al,0xa0
  417c4b:	cmp    ah,BYTE PTR [ebp+0x391898fd]
  417c51:	imul   esi,ecx,0x32
  417c54:	aam    0xde
  417c56:	push   ds
  417c57:	fwait
  417c58:	imul   ebp,DWORD PTR [ebp-0x1c],0x66530b18
  417c5f:	enterw 0x9c4,0x3c
  417c64:	into   
  417c65:	retf   
  417c66:	push   es
  417c67:	mov    DWORD PTR [ebp+0x3f],ebx
  417c6a:	loope  0x417c99
  417c6c:	cdq    
  417c6d:	(bad)  
  417c6e:	pop    esp
  417c6f:	sub    al,0x90
  417c71:	fistp  DWORD PTR ds:0x9b23ef85
  417c77:	pop    esi
  417c78:	outs   dx,BYTE PTR ds:[esi]
  417c79:	retf   
  417c7a:	in     al,0xd4
  417c7c:	in     eax,dx
  417c7d:	ret    
  417c7e:	lods   al,BYTE PTR ds:[esi]
  417c7f:	js     0x417c93
  417c81:	test   DWORD PTR [edi+eiz*8],esi
  417c84:	test   al,0x15
  417c86:	lods   al,BYTE PTR ds:[esi]
  417c87:	popf   
  417c88:	mov    ebx,0x67221d18
  417c8d:	pop    esp
  417c8e:	push   ecx
  417c8f:	jns    0x417c9a
  417c91:	push   edi
  417c92:	mov    BYTE PTR ds:0xe6ae95ef,al
  417c98:	mov    ch,0xaf
  417c9a:	(bad)  
  417c9b:	shl    ebp,cl
  417c9d:	repz ja 0x417c89
  417ca0:	repz cs cmp eax,0x5603d0d6
  417ca7:	push   eax
  417ca8:	adc    DWORD PTR [esp+ecx*1-0x57c172f1],ecx
  417caf:	lods   al,BYTE PTR ds:[esi]
  417cb0:	loope  0x417c3c
  417cb2:	cdq    
  417cb3:	aaa    
  417cb4:	cmp    DWORD PTR [edx+0x76283c4b],esi
  417cba:	xchg   ebp,eax
  417cbb:	int3   
  417cbc:	lods   al,BYTE PTR ds:[esi]
  417cbd:	(bad)  
  417cbe:	in     al,0xb1
  417cc0:	jp     0x417cf7
  417cc2:	pop    ecx
  417cc3:	imul   ebp,DWORD PTR [esi],0xb73b49e5
  417cc9:	xlat   BYTE PTR ds:[ebx]
  417cca:	xor    DWORD PTR [ebx+0x74],edi
  417ccd:	inc    edx
  417ccf:	int3   
  417cd0:	xchg   DWORD PTR [edx-0xebf6111],esp
  417cd6:	pop    ecx
  417cd7:	popa   
  417cd8:	into   
  417cd9:	jl     0x417d47
  417cdb:	mov    BYTE PTR [ebx+ebp*2-0x3a03f99a],cl
  417ce2:	ss es mov esp,0x9d5d9dd2
  417ce9:	adc    BYTE PTR [ecx+eiz*2-0x4c02d236],0xf1
  417cf1:	xchg   dh,ah
  417cf3:	push   edx
  417cf4:	xchg   ecx,eax
  417cf5:	adc    ch,al
  417cf7:	cmp    bl,0xe8
  417cfa:	inc    esi
  417cfb:	ins    DWORD PTR es:[edi],dx
  417cfc:	lahf   
  417cfd:	cmp    ebp,eax
  417cff:	xchg   ecx,eax
  417d00:	repz pop esp
  417d02:	rcl    DWORD PTR fs:[eax-0x55cf9c0d],0x91
  417d0a:	jmp    0x417cd0
  417d0c:	sbb    DWORD PTR [ebp+0x9],ebp
  417d0f:	int3   
  417d10:	or     eax,0xa569162f
  417d15:	lahf   
  417d16:	out    dx,eax
  417d17:	jecxz  0x417d1c
  417d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d1a:	lods   al,BYTE PTR ds:[esi]
  417d1b:	fs ret 
  417d1d:	mov    cl,0x3
  417d1f:	sbb    dl,BYTE PTR [edi]
  417d21:	xchg   ebx,eax
  417d22:	mov    DWORD PTR es:[ecx+0x54e39f89],eax
  417d29:	adc    cl,BYTE PTR [esi+0xa2ddfb4]
  417d2f:	mov    dl,BYTE PTR [edx-0x4df0a27c]
  417d35:	hlt    
  417d36:	aam    0x2e
  417d38:	fidivr WORD PTR [ebx+0x5d]
  417d3b:	shl    cl,cl
  417d3d:	adc    ebp,DWORD PTR [edi-0x957ec0f]
  417d43:	xchg   ebx,eax
  417d44:	or     DWORD PTR [esi],ebx
  417d46:	mov    eax,0x6dae9689
  417d4b:	sbb    al,0x51
  417d4d:	lds    edx,FWORD PTR [esi+edi*1]
  417d50:	nop
  417d51:	add    eax,0x5794edc8
  417d56:	sub    BYTE PTR [edi-0x2],al
  417d59:	stos   DWORD PTR es:[edi],eax
  417d5a:	iret   
  417d5b:	ret    
  417d5c:	add    eax,DWORD PTR ds:0x34db5d54
  417d62:	pop    edx
  417d63:	push   eax
  417d64:	jno    0x417daf
  417d66:	push   cs
  417d67:	mov    WORD PTR [ebx-0x29],fs
  417d6a:	cmp    dl,BYTE PTR [edx]
  417d6c:	pop    ecx
  417d6d:	xor    BYTE PTR [eax+0x46],ah
  417d70:	xchg   BYTE PTR [ecx+0x54],dh
  417d73:	dec    ebx
  417d74:	dec    eax
  417d75:	xlat   BYTE PTR ds:[ebx]
  417d76:	nop
  417d77:	aam    0x7b
  417d79:	lds    eax,FWORD PTR [esi]
  417d7b:	out    0x52,eax
  417d7d:	cmp    ebp,DWORD PTR [edx]
  417d7f:	stc    
  417d80:	ret    0x1f4e
  417d83:	inc    esi
  417d84:	shl    DWORD PTR [ebx-0x56],cl
  417d87:	add    DWORD PTR [edx+0x35320af6],edx
  417d8d:	dec    esp
  417d8e:	outs   dx,BYTE PTR ds:[esi]
  417d8f:	aad    0xfa
  417d91:	jl     0x417df1
  417d93:	mov    al,gs:0xfa7a720b
  417d99:	dec    edi
  417d9a:	or     bl,ah
  417d9c:	push   ds
  417d9d:	jne    0x417dfd
  417d9f:	pop    ds
  417da0:	push   0x2
  417da2:	cwde   
  417da3:	mov    bl,BYTE PTR [eax]
  417da5:	popf   
  417da6:	pushf  
  417da7:	retf   
  417da8:	das    
  417da9:	scas   eax,DWORD PTR es:[edi]
  417daa:	int    0x7b
  417dac:	jae    0x417d4e
  417dae:	pop    esp
  417daf:	and    dh,ah
  417db1:	mov    ch,0x3b
  417db3:	xchg   ebx,eax
  417db4:	and    DWORD PTR [ebp-0x7f5c1ae5],edi
  417dba:	arpl   bp,sp
  417dbc:	xchg   ebx,ebp
  417dbe:	or     DWORD PTR [edx+0x1eb0a0dd],esi
  417dc4:	mov    eax,ds:0x86e12113
  417dc9:	sub    BYTE PTR [eax+0x67],dl
  417dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dcd:	mov    ds:0x1fa1fb72,al
  417dd2:	les    ecx,FWORD PTR [esi+0x1dd86683]
  417dd8:	ds jo  0x417dac
  417ddb:	push   edx
  417ddc:	xchg   esi,eax
  417ddd:	inc    DWORD PTR [ebx]
  417ddf:	push   edi
  417de0:	jp     0x417e3c
  417de2:	cwde   
  417de3:	xor    eax,0xc76e9349
  417de8:	mov    eax,0x1d069c58
  417ded:	not    DWORD PTR [edi+0x4891427f]
  417df3:	mov    edx,0x9f0b0319
  417df8:	cmp    al,BYTE PTR [ebp-0x3991a5b8]
  417dfe:	test   dl,al
  417e00:	fs dec edx
  417e02:	adc    DWORD PTR ds:0x6bb8793d,ecx
  417e08:	xadd   DWORD PTR [eax+0x1],edx
  417e0c:	test   BYTE PTR [edi+0x15d20719],bl
  417e12:	sbb    DWORD PTR [edi-0x20],edi
  417e15:	pop    esi
  417e16:	shl    BYTE PTR [ebx-0x44c6837b],0xf9
  417e1d:	mov    ch,0x7b
  417e1f:	(bad)  
  417e20:	and    eax,0x97628a5f
  417e25:	popf   
  417e26:	lods   al,BYTE PTR ds:[esi]
  417e27:	shl    BYTE PTR ds:0xe5fb0d1c,0x83
  417e2e:	inc    ebp
  417e2f:	cld    
  417e30:	xor    al,0x1b
  417e32:	aas    
  417e33:	lods   al,BYTE PTR ds:[esi]
  417e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e35:	sbb    BYTE PTR [ecx],al
  417e37:	call   0xdb9c:0x82a51f6f
  417e3e:	in     al,0x86
  417e40:	imul   edi,edx,0x0
  417e43:	xchg   esi,eax
  417e44:	pop    ss
  417e45:	scas   eax,DWORD PTR es:[edi]
  417e46:	mov    edx,0xb019af84
  417e4b:	mov    al,ds:0x7243c659
  417e50:	jae    0x417ea0
  417e52:	popf   
  417e53:	add    DWORD PTR [ebx-0x5e],0xfffffff6
  417e57:	dec    esp
  417e58:	imul   edx,DWORD PTR [ebp+0x7774b989],0x48
  417e5f:	and    DWORD PTR [esi+0x1cd884f],eax
  417e65:	jmp    0x417ed4
  417e67:	bound  esp,QWORD PTR [edx+0x1b76be0f]
  417e6d:	push   es
  417e6e:	cmp    ah,BYTE PTR [ebp+0x47]
  417e71:	xor    eax,DWORD PTR [esi-0x3789ea60]
  417e77:	je     0x417e85
  417e79:	jb     0x417ea8
  417e7b:	loopne 0x417eb2
  417e7d:	mov    bl,0xbc
  417e7f:	mov    cl,0x6d
  417e81:	sti    
  417e82:	inc    esi
  417e83:	mov    cl,0xf1
  417e85:	(bad)  
  417e86:	scas   eax,DWORD PTR es:[edi]
  417e87:	jle    0x417ea9
  417e89:	jne    0x417e47
  417e8b:	ins    BYTE PTR es:[edi],dx
  417e8c:	pop    edx
  417e8d:	jmp    0xad81fc00
  417e92:	loop   0x417e41
  417e94:	jae    0x417e8e
  417e96:	push   0xd1199c31
  417e9b:	add    DWORD PTR [edi+0x20],esi
  417e9e:	sbb    al,0xc6
  417ea0:	adc    dh,BYTE PTR [edi-0x54]
  417ea3:	mov    bl,0xb
  417ea5:	test   al,0x1c
  417ea7:	cld    
  417ea8:	loop   0x417e42
  417eaa:	idiv   BYTE PTR [ebp+0xe34ea3]
  417eb0:	add    BYTE PTR [eax],al
  417eb2:	ret    0x939e
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	nop    esp
  417ec0:	jne    0x417f0b
  417ec2:	and    esp,edi
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	cmc    
  417ec7:	add    al,0x0
  417ec9:	add    BYTE PTR [ebx],al
  417ecb:	xor    BYTE PTR [edx],0xe1
  417ece:	rol    DWORD PTR ds:0x275ce304,cl
  417ed4:	dec    esp
  417ed5:	xchg   edx,eax
  417ed6:	or     DWORD PTR [edx-0x52],0xdb07fe88
  417edd:	mov    esp,0x4df3c271
  417ee2:	or     eax,0xb2dd237f
  417ee7:	xor    eax,DWORD PTR [eax]
  417ee9:	inc    esi
  417eea:	mov    al,ds:0x38bc0f8f
  417eef:	mov    ecx,0x779e6955
  417ef4:	jnp    0x417eb3
  417ef6:	aas    
  417ef7:	imul   ebp,DWORD PTR [ebx*2+0x6a5010b5],0xcf788ea4
  417f02:	stc    
  417f03:	sbb    ch,dl
  417f05:	fcomp  QWORD PTR [eax+ecx*4+0x22c24232]
  417f0c:	clc    
  417f0d:	inc    edi
  417f0e:	loope  0x417ee8
  417f10:	inc    edx
  417f11:	addr16 and al,0xd7
  417f14:	inc    esp
  417f15:	or     eax,0xe120e689
  417f1a:	ds xchg esi,eax
  417f1c:	cli    
  417f1d:	pop    ebp
  417f1e:	sub    eax,DWORD PTR ds:0x93397a2c
  417f24:	xchg   ebp,eax
  417f25:	xchg   esp,eax
  417f26:	adc    eax,0x5945f5e7
  417f2b:	add    ch,dh
  417f2d:	push   edi
  417f2e:	shl    BYTE PTR [eax+0xfdf196a],cl
  417f34:	fwait
  417f35:	cmp    eax,0xedd353a1
  417f3a:	stc    
  417f3b:	push   0x57140502
  417f40:	xor    BYTE PTR [edx-0x24d70548],dl
  417f46:	or     BYTE PTR [ebx+edi*1+0x5a],bl
  417f4a:	push   0xd32466a3
  417f4f:	dec    esp
  417f50:	sbb    edx,DWORD PTR [ebx-0x6c]
  417f53:	add    cl,al
  417f55:	sbb    eax,0x8c172735
  417f5a:	jp     0x417f6d
  417f5c:	icebp  
  417f5d:	xor    ebp,edx
  417f5f:	loope  0x417f70
  417f61:	xchg   DWORD PTR [ebx+0x70],edi
  417f64:	rol    DWORD PTR [ebx-0x29c1cc6a],0xf
  417f6b:	mov    ch,0xb4
  417f6d:	mov    eax,0x4f04df89
  417f72:	pop    edx
  417f73:	add    bl,BYTE PTR [esi+ebp*2]
  417f76:	sub    eax,0x8b06560f
  417f7b:	cld    
  417f7c:	nop
  417f7d:	jmp    0xe360:0xe9e53d67
  417f84:	rol    BYTE PTR [ebp-0x2e],cl
  417f87:	adc    al,0xf
  417f89:	push   edx
  417f8a:	xchg   ecx,eax
  417f8b:	inc    esi
  417f8c:	add    DWORD PTR [ebx+eax*4-0x6a5e152f],esp
  417f93:	iret   
  417f94:	idiv   BYTE PTR [edx+0x56]
  417f97:	ret    
  417f98:	sbb    BYTE PTR [eax+0x5d],dl
  417f9b:	(bad)  
  417f9c:	mov    ecx,0x42d18b5d
  417fa1:	hlt    
  417fa2:	out    dx,al
  417fa3:	mov    DWORD PTR [ebp-0x14],esi
  417fa6:	mov    ds:0x7489ba69,eax
  417fab:	stos   DWORD PTR es:[edi],eax
  417fac:	cli    
  417fad:	in     al,dx
  417fae:	and    BYTE PTR [ecx],0xd7
  417fb1:	push   esi
  417fb2:	adc    edx,DWORD PTR [ebx+0x30b84ffe]
  417fb8:	cmc    
  417fb9:	int    0xec
  417fbb:	xchg   edx,eax
  417fbc:	jge    0x418026
  417fbe:	mov    ebp,0xd38825c5
  417fc3:	push   edi
  417fc4:	das    
  417fc5:	lahf   
  417fc6:	je     0x417feb
  417fc8:	or     eax,0xf9292788
  417fcd:	outs   dx,DWORD PTR ds:[esi]
  417fce:	sar    DWORD PTR [ebx+0x4fbb6dc7],1
  417fd4:	pop    edi
  417fd5:	pop    edi
  417fd6:	mov    eax,ds:0x6372f585
  417fdb:	in     al,dx
  417fdc:	jmp    0x417fe6
  417fde:	add    al,0xbb
  417fe0:	jmp    0x418021
  417fe2:	mov    al,ds:0x61705004
  417fe7:	daa    
  417fe8:	xor    eax,0xc8136025
  417fed:	stc    
  417fee:	jg     0x418015
  417ff0:	sub    esp,eax
  417ff2:	mov    bl,BYTE PTR ss:[edx-0x39]
  417ff6:	lahf   
  417ff7:	mov    ch,0xfc
  417ff9:	xlat   BYTE PTR ds:[ebx]
  417ffa:	ret    
  417ffb:	jb     0x417fdd
  417ffd:	clc    
  417ffe:	not    DWORD PTR [ecx]
  418000:	mov    eax,ds:0xa93ea731
  418005:	int3   
  418006:	jne    0x418057
  418008:	xor    DWORD PTR [ebx-0x36],eax
  41800b:	adc    BYTE PTR [ebp+0x7d0eab1c],bl
  418011:	sub    al,0x96
  418013:	mov    bl,0x4d
  418015:	pop    esp
  418016:	aas    
  418017:	dec    ebp
  418018:	fadd   DWORD PTR [ebx]
  41801a:	ret    0xb58f
  41801d:	repz and ecx,DWORD PTR [ebx]
  418020:	daa    
  418021:	test   BYTE PTR es:[esi+0x50],ah
  418025:	and    DWORD PTR [ecx+0x468ab41],edx
  41802b:	cmp    eax,0xba6e69ec
  418030:	dec    eax
  418031:	les    edi,FWORD PTR [eax+ebp*4-0x31]
  418035:	fisttp QWORD PTR [ecx+edi*2+0x3e]
  418039:	test   dl,dh
  41803b:	adc    al,0x66
  41803d:	dec    esp
  41803e:	add    DWORD PTR [ecx+esi*2+0x5ba37a2d],ebx
  418045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418046:	push   edx
  418047:	int3   
  418048:	mov    ebx,DWORD PTR [ebx]
  41804a:	mov    al,0x1
  41804c:	std    
  41804d:	cwde   
  41804e:	jae    0x417ff4
  418050:	mov    cl,0xbb
  418052:	dec    edi
  418053:	(bad)  
  418054:	lea    ebp,[ebx+0x2c9aec1d]
  41805a:	leave  
  41805b:	mov    edi,esi
  41805d:	push   ecx
  41805e:	out    dx,eax
  41805f:	cmp    bl,ah
  418061:	je     0x417fec
  418063:	xchg   edi,eax
  418064:	(bad)  
  418065:	(bad)  
  418067:	in     eax,0x18
  418069:	push   ds
  41806a:	sar    BYTE PTR [esi],1
  41806c:	enter  0x32cc,0x91
  418070:	out    0xd6,al
  418072:	push   esi
  418073:	or     DWORD PTR [eax+ebx*1-0x56173406],eax
  41807a:	inc    esi
  41807b:	sti    
  41807c:	repz sbb BYTE PTR [ebx],dl
  41807f:	cli    
  418080:	sub    eax,0x53a5b67c
  418085:	mov    eax,ds:0x9d4f40a6
  41808a:	jge    0x41800d
  41808c:	gs jo  0x4180f6
  41808f:	push   esi
  418090:	sub    esp,DWORD PTR [ecx+0x48]
  418093:	mov    ds:0x4410314,eax
  418098:	dec    esi
  418099:	cwde   
  41809a:	in     eax,dx
  41809b:	pushf  
  41809c:	lahf   
  41809d:	out    dx,eax
  41809e:	or     al,0x2c
  4180a0:	out    0xca,eax
  4180a2:	js     0x4180cc
  4180a4:	das    
  4180a5:	and    eax,0xf7dc0fff
  4180aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180ab:	cdq    
  4180ac:	sbb    al,0xb
  4180ae:	stos   DWORD PTR es:[edi],eax
  4180af:	aas    
  4180b0:	jne    0x41804d
  4180b2:	sub    al,0x4e
  4180b4:	aad    0x9a
  4180b6:	fstp   QWORD PTR [ecx+0x26]
  4180b9:	test   DWORD PTR [eax-0x1227fb56],0xe3b4c909
  4180c3:	inc    edi
  4180c4:	add    ebx,DWORD PTR [ecx-0x12]
  4180c7:	add    ebx,DWORD PTR gs:[ebx]
  4180ca:	ret    0xc451
  4180cd:	cwde   
  4180ce:	sub    al,0x49
  4180d0:	arpl   WORD PTR [edx],di
  4180d2:	jne    0x418098
  4180d4:	es inc esp
  4180d6:	jmp    0x438159b3
  4180db:	push   eax
  4180dc:	(bad)  [edx]
  4180de:	dec    eax
  4180df:	mov    ah,0x17
  4180e1:	jp     0x41813f
  4180e3:	xor    al,0x39
  4180e5:	cwde   
  4180e6:	clc    
  4180e7:	dec    edi
  4180e8:	imul   esp,DWORD PTR [esi+eiz*4-0x1c51da13],0xffffffb3
  4180f0:	sbb    BYTE PTR [ebx],dh
  4180f2:	in     al,dx
  4180f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180f4:	cmp    ebp,DWORD PTR [eax+ebx*4+0x234346df]
  4180fb:	or     dl,BYTE PTR [edx+eax*1-0x1b]
  4180ff:	or     al,0x2
  418101:	mov    WORD PTR [ecx+0x79],ss
  418104:	and    edx,DWORD PTR [ebx*2-0x31eb7803]
  41810b:	js     0x4180a1
  41810d:	push   esi
  41810e:	or     DWORD PTR [ebp-0x3caa01ce],0xffffffd3
  418115:	fwait
  418116:	xlat   BYTE PTR ds:[ebx]
  418117:	mov    ah,0xa5
  418119:	jns    0x41809d
  41811b:	xchg   esi,eax
  41811c:	outs   dx,DWORD PTR ds:[esi]
  41811d:	jne    0x418130
  41811f:	pop    ecx
  418120:	inc    esp
  418121:	mov    ds:0x69227680,eax
  418126:	mov    ebx,0x81665a84
  41812b:	inc    ebp
  41812c:	fcomp  QWORD PTR [ecx+0x5452623f]
  418132:	into   
  418133:	inc    eax
  418134:	dec    esp
  418135:	adc    BYTE PTR [edi-0x79e6cda7],al
  41813b:	mov    BYTE PTR [ecx+0x6c36eb2a],ah
  418141:	pop    edx
  418142:	jns    0x418133
  418144:	out    0xfb,al
  418146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418147:	sbb    edx,DWORD PTR [edx]
  418149:	out    dx,al
  41814a:	mov    dl,0xfc
  41814c:	icebp  
  41814d:	rcl    BYTE PTR [ebp-0x79f8d871],0x50
  418154:	loopne 0x41812b
  418156:	or     edi,0x5205871d
  41815c:	sub    al,0x99
  41815e:	jae    0x41816a
  418160:	xor    ebx,DWORD PTR [ebx]
  418162:	mov    ?,WORD PTR [esi+0xb5cf355]
  418168:	pop    edi
  418169:	ror    ebp,0x94
  41816c:	dec    BYTE PTR ds:0x380c13d0
  418172:	pop    esi
  418173:	mov    fs,WORD PTR [edx]
  418175:	cdq    
  418176:	mov    cl,0xce
  418178:	fwait
  418179:	clc    
  41817a:	ins    DWORD PTR es:[edi],dx
  41817b:	inc    esp
  41817c:	scas   eax,DWORD PTR es:[edi]
  41817d:	(bad)  
  41817e:	xchg   edi,eax
  41817f:	enter  0xf6fb,0xed
  418183:	push   eax
  418184:	(bad)  [ecx-0xd]
  418187:	not    dh
  418189:	xchg   ebp,eax
  41818a:	or     al,0x8
  41818c:	cwde   
  41818d:	fcmovbe st,st(0)
  41818f:	push   ss
  418190:	stos   BYTE PTR es:[edi],al
  418191:	mov    al,ds:0xc68a1c54
  418196:	dec    esp
  418197:	(bad)  
  418198:	stc    
  418199:	scas   al,BYTE PTR es:[edi]
  41819a:	xor    ebx,DWORD PTR gs:[edi]
  41819d:	xchg   esp,eax
  41819e:	jno    0x4181ff
  4181a0:	cmp    BYTE PTR [ebx-0x1210a948],ch
  4181a6:	push   ebp
  4181a7:	in     al,dx
  4181a8:	add    DWORD PTR [ebx-0x17],0x3a
  4181ac:	adc    ch,BYTE PTR [ebp+0x18159b92]
  4181b2:	inc    eax
  4181b3:	mov    ch,0x4b
  4181b5:	hlt    
  4181b6:	xor    DWORD PTR [ecx+0x35fd2f1c],0xffffff93
  4181bd:	repz js 0x4181a1
  4181c0:	sub    al,BYTE PTR [ebp+0x7033c28f]
  4181c6:	jno    0x41817a
  4181c8:	push   ss
  4181c9:	jbe    0x4181aa
  4181cb:	xor    BYTE PTR [ecx+0x18],dh
  4181ce:	das    
  4181cf:	fld    TBYTE PTR [eax+0x26]
  4181d2:	clc    
  4181d3:	sbb    eax,0xd7fd0613
  4181d8:	imul   dl
  4181da:	pop    ebx
  4181db:	shl    BYTE PTR [ebx-0x35],1
  4181de:	je     0x418166
  4181e0:	dec    ebx
  4181e1:	xor    al,0x8f
  4181e3:	push   esi
  4181e4:	call   0xa9e0:0xec13fe14
  4181eb:	jge    0x418257
  4181ed:	sar    esp,1
  4181ef:	add    eax,0x2098eadf
  4181f4:	adc    DWORD PTR [eax+ecx*4+0x21],ebp
  4181f8:	mov    esi,0xdf3ed0fa
  4181fd:	jnp    0x4181c9
  4181ff:	ficom  WORD PTR [edi+0x6adb0b1c]
  418205:	sti    
  418206:	loop   0x418260
  418208:	add    BYTE PTR [esi+eiz*4],dl
  41820b:	mov    ch,0x5a
  41820d:	pop    edi
  41820e:	fisub  WORD PTR [ebx-0x36687ac2]
  418214:	sti    
  418215:	xor    BYTE PTR [esi],ah
  418217:	call   0xa96e:0x9e2494e6
  41821e:	out    dx,al
  41821f:	and    DWORD PTR [edx],ebp
  418221:	xor    esp,DWORD PTR [ecx-0x8]
  418224:	mov    bh,BYTE PTR [ebp+0x298ad3f1]
  41822a:	push   es
  41822b:	outs   dx,DWORD PTR ds:[esi]
  41822c:	cmp    BYTE PTR [esi+0xd],bh
  41822f:	call   0x158859e0
  418234:	pop    esi
  418235:	ret    
  418236:	sub    eax,0xdb56b07e
  41823b:	ret    0xcdfd
  41823e:	cs push ebp
  418240:	sub    esi,DWORD PTR [ebp+0x19b3b95b]
  418246:	add    BYTE PTR es:[edi+ebx*8+0x4c],ah
  41824b:	xchg   ebp,eax
  41824c:	cmp    ebp,ebp
  41824e:	mov    al,0x35
  418250:	loop   0x418273
  418252:	mov    esi,0xc08eabde
  418257:	test   al,0xbf
  418259:	pop    esp
  41825a:	les    edx,FWORD PTR [ecx+0x77bea4de]
  418260:	mov    al,ds:0x1052e6ca
  418265:	mov    BYTE PTR [esi+0x55ed454d],dl
  41826b:	fiadd  DWORD PTR [ebx+0x24]
  41826e:	ss aaa 
  418270:	hlt    
  418271:	push   ebx
  418272:	lock imul esp,DWORD PTR [eax+0x2d],0xffffffd2
  418277:	push   esp
  418278:	xor    DWORD PTR [ecx],ecx
  41827a:	into   
  41827b:	push   ss
  41827c:	out    0x64,al
  41827e:	into   
  41827f:	push   ecx
  418280:	pop    eax
  418281:	mov    esp,0xdf29db45
  418286:	aad    0x4a
  418288:	hlt    
  418289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41828a:	shr    DWORD PTR [ebx-0x2e],1
  41828d:	lds    esp,FWORD PTR [edx]
  41828f:	adc    DWORD PTR gs:[ecx+0x1f],0x78
  418294:	add    al,0xc2
  418296:	fs jns 0x418234
  418299:	and    al,0xcb
  41829b:	cmp    eax,0x8c851378
  4182a0:	sar    DWORD PTR [ebx+0x2b],0xef
  4182a4:	xor    esp,DWORD PTR ss:[esi+0x28bae7fb]
  4182ab:	sar    ecx,1
  4182ad:	popa   
  4182ae:	in     eax,0xa8
  4182b0:	ds mov edx,0xfee53d0a
  4182b6:	imul   ebx,DWORD PTR [edi+0x7e],0x46
  4182ba:	add    al,cl
  4182bc:	icebp  
  4182bd:	je     0x418260
  4182bf:	cwde   
  4182c0:	enter  0x92d9,0x2f
  4182c4:	push   ds
  4182c5:	cs cs pop ss
  4182c8:	xor    al,BYTE PTR [ebx-0x79]
  4182cb:	fwait
  4182cc:	jg     0x418307
  4182ce:	cld    
  4182cf:	leave  
  4182d0:	and    ah,ah
  4182d2:	xchg   BYTE PTR [edi-0x4333ebbc],dh
  4182d8:	sub    al,0x25
  4182da:	mov    ebx,0x72a03101
  4182df:	inc    eax
  4182e0:	pop    ss
  4182e1:	push   ds
  4182e2:	xlat   BYTE PTR ds:[ebx]
  4182e3:	ds push edx
  4182e5:	jmp    0xb33c:0xe9f9b574
  4182ec:	xchg   edi,eax
  4182ed:	out    dx,al
  4182ee:	ins    BYTE PTR es:[edi],dx
  4182ef:	jmp    0x418335
  4182f1:	ins    DWORD PTR es:[edi],dx
  4182f2:	xchg   esp,eax
  4182f3:	loope  0x418368
  4182f5:	out    dx,al
  4182f6:	shl    DWORD PTR [edi+0x27],0xdb
  4182fa:	push   0x0
  4182fc:	xor    DWORD PTR [ecx+0x57c57e05],0x77
  418303:	icebp  
  418304:	mov    bl,0xcf
  418306:	or     eax,0xa94e4891
  41830b:	push   ss
  41830c:	push   ecx
  41830d:	inc    ebx
  41830e:	pusha  
  41830f:	sub    al,0x65
  418311:	pop    esi
  418312:	add    al,BYTE PTR [esi]
  418314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418315:	int    0xb1
  418317:	mov    ds:0xad73133d,eax
  41831c:	mov    edi,0xb760b42a
  418321:	outs   dx,DWORD PTR ds:[esi]
  418322:	add    dl,BYTE PTR [ecx+ebx*8]
  418325:	js     0x4182cc
  418327:	aad    0x50
  418329:	popa   
  41832a:	call   0xb516:0xd9501eeb
  418331:	xor    bh,BYTE PTR [edi+0x5c564980]
  418337:	cli    
  418338:	sahf   
  418339:	xor    ecx,DWORD PTR [edx-0x38362267]
  41833f:	mov    bh,0xa
  418341:	pop    edi
  418342:	xchg   ebx,eax
  418343:	xor    DWORD PTR [ebx-0x52],ebx
  418346:	leave  
  418347:	enter  0x5963,0x23
  41834b:	mov    DWORD PTR [ecx+0x12],esi
  41834e:	xchg   esi,eax
  41834f:	add    dl,BYTE PTR [ebp+ebx*4+0x23f81450]
  418356:	sbb    bh,BYTE PTR ds:0xbe9912bc
  41835c:	(bad)  
  41835d:	jmp    0x4183ab
  41835f:	push   esi
  418360:	(bad)  
  418361:	sub    ebp,eax
  418363:	sub    al,0xa3
  418365:	cmc    
  418366:	mov    ds:0x2bb08aba,al
  41836b:	das    
  41836c:	fnstsw WORD PTR [edi-0x6ff4dec3]
  418372:	addr16 jbe 0x4183dd
  418375:	jmp    0x418385
  418377:	jne    0x418325
  418379:	popf   
  41837a:	push   cs
  41837b:	xor    BYTE PTR [esp+eiz*2-0x57],0x1e
  418380:	cwde   
  418381:	neg    cl
  418383:	outs   dx,BYTE PTR ds:[esi]
  418384:	sbb    al,al
  418386:	push   esi
  418387:	daa    
  418388:	dec    edx
  418389:	fisub  DWORD PTR [esi-0x6d6d8de1]
  41838f:	adc    eax,0x88738b36
  418394:	push   ebx
  418395:	sbb    eax,0xdae55ea8
  41839a:	lds    esp,FWORD PTR [edi-0x5dccea5e]
  4183a0:	jbe    0x418366
  4183a2:	into   
  4183a3:	repz mov edx,0xcbb93b22
  4183a9:	mov    dl,0x0
  4183ab:	hlt    
  4183ac:	cdq    
  4183ad:	call   0x2305c07e
  4183b2:	jmp    0x52e03222
  4183b7:	add    eax,0xfeb358b
  4183bc:	out    dx,al
  4183bd:	jge    0x418370
  4183bf:	add    BYTE PTR [eax],al
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	adc    DWORD PTR [edx+0x166ba061],0x1
  4183d4:	add    DWORD PTR [eax],eax
  4183d6:	cmc    
  4183d7:	add    al,0x0
  4183d9:	add    dl,dl
  4183db:	dec    edi
  4183dc:	out    0xbb,al
  4183de:	ds inc ebx
  4183e0:	mov    edi,0x21c6ab30
  4183e5:	push   ebp
  4183e6:	xor    ch,BYTE PTR [ecx]
  4183e8:	dec    edx
  4183e9:	adc    BYTE PTR [ecx],dl
  4183eb:	sub    eax,0xcbf32a68
  4183f0:	loop   0x418428
  4183f2:	loop   0x4183fb
  4183f4:	shl    DWORD PTR [ebp-0x73247e36],cl
  4183fa:	popf   
  4183fb:	mov    ebx,0x61844dc0
  418400:	imul   ebp,DWORD PTR [ecx],0x8deef2ca
  418406:	data16 (bad) 
  418408:	jp     0x41843f
  41840a:	jo     0x418433
  41840c:	pop    ebx
  41840d:	lea    edx,[edx-0x79]
  418410:	dec    edx
  418411:	fadd   DWORD PTR [ebx+0x9546960]
  418417:	jbe    0x418405
  418419:	repnz inc esi
  41841b:	xchg   esi,eax
  41841c:	sub    ebx,eax
  41841e:	cmp    eax,0x53627d68
  418423:	pop    esp
  418424:	jnp    0x4183db
  418426:	and    esp,DWORD PTR [esi+eax*1-0x3007fc39]
  41842d:	xchg   ecx,eax
  41842e:	mov    ds:0xfa9ef779,eax
  418433:	xchg   ecx,eax
  418434:	sti    
  418435:	or     cl,ch
  418437:	add    eax,0x84a49d9b
  41843c:	adc    edx,DWORD PTR [esi]
  41843e:	daa    
  41843f:	sub    ecx,esi
  418441:	cmc    
  418442:	test   BYTE PTR [ecx],0x60
  418445:	jb     0x418402
  418447:	shr    DWORD PTR [edx+eax*1-0x39f22bf7],1
  41844e:	dec    edi
  41844f:	fsubr  QWORD PTR [esi+ecx*8+0x4a]
  418453:	imul   BYTE PTR [eax-0x5f]
  418456:	cmp    eax,DWORD PTR [edi+esi*2]
  418459:	mov    bl,0x97
  41845b:	fnstsw WORD PTR [edx-0x6c3aef38]
  418461:	xor    BYTE PTR [eax-0x277f2beb],ah
  418467:	jp     0x4183fe
  418469:	add    DWORD PTR [ebx],ecx
  41846b:	dec    ebx
  41846c:	jmp    0xeac4:0x80623ba4
  418473:	rol    ebp,0xeb
  418476:	cmp    DWORD PTR [edx],edx
  418478:	push   0x17
  41847a:	dec    ebx
  41847b:	mov    esp,ebp
  41847d:	fwait
  41847e:	cmc    
  41847f:	lods   al,BYTE PTR ds:[esi]
  418480:	stos   DWORD PTR es:[edi],eax
  418481:	pop    edx
  418482:	or     bh,0xef
  418485:	(bad)  
  418486:	out    0xf6,al
  418488:	cld    
  418489:	sbb    BYTE PTR [edi+0x60],ch
  41848c:	mov    bh,BYTE PTR [esi-0x58]
  41848f:	ins    BYTE PTR es:[edi],dx
  418490:	mov    edi,0x3a6f19fc
  418495:	les    edx,FWORD PTR [ebx]
  418497:	inc    eax
  418498:	fld    QWORD PTR [ebx+0x36fc5985]
  41849e:	test   BYTE PTR [eax+0x7c61db0a],cl
  4184a4:	push   ss
  4184a5:	stos   DWORD PTR es:[edi],eax
  4184a6:	dec    eax
  4184a7:	fstp   QWORD PTR ds:0x23119cc3
  4184ad:	or     bl,BYTE PTR ds:0x703ed6cb
  4184b3:	or     ah,BYTE PTR [edx-0x23]
  4184b6:	adc    eax,0x9f6c2201
  4184bb:	xor    eax,0xfa68a290
  4184c0:	pop    ebx
  4184c1:	stos   DWORD PTR es:[edi],eax
  4184c2:	push   0x8
  4184c4:	loop   0x41852c
  4184c6:	xchg   BYTE PTR ds:0x3159bb35,cl
  4184cc:	lock adc DWORD PTR [ebp-0x21],ebx
  4184d0:	push   0xc537a215
  4184d5:	lods   al,BYTE PTR ds:[esi]
  4184d6:	daa    
  4184d7:	mov    ebx,0x8ba27894
  4184dc:	jnp    0x418473
  4184de:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184e0:	sbb    al,BYTE PTR [edi+eiz*4+0x480f1114]
  4184e7:	and    al,ah
  4184e9:	lods   al,BYTE PTR ds:[esi]
  4184ea:	or     ecx,ecx
  4184ec:	icebp  
  4184ed:	sub    esi,edx
  4184ef:	xchg   edx,eax
  4184f0:	mov    ebx,0x657b0bad
  4184f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184f6:	push   ebp
  4184f7:	aam    0xfb
  4184f9:	mov    edi,0xf33e1de8
  4184fe:	adc    DWORD PTR [eax+0x2b],ebp
  418501:	adc    BYTE PTR [ebp+0x60],dl
  418504:	shr    BYTE PTR [eax+0x2c],0x9e
  418508:	add    dl,BYTE PTR [eax-0x4cf484fe]
  41850e:	adc    al,ah
  418510:	jb     0x418570
  418512:	out    dx,al
  418513:	mov    bh,0x83
  418515:	xor    eax,0xcbed2aa3
  41851a:	dec    ecx
  41851b:	(bad)  
  41851c:	scas   eax,DWORD PTR es:[edi]
  41851d:	add    al,0x30
  41851f:	les    sp,DWORD PTR [ebp+esi*1-0x39a5c2e2]
  418527:	push   es
  418528:	pushf  
  418529:	mov    dl,0x61
  41852b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41852c:	call   0xddbdb83d
  418531:	and    eax,0x3b76b558
  418536:	push   esp
  418537:	jno    0x4184da
  418539:	int    0xd0
  41853b:	xlat   BYTE PTR ds:[ebx]
  41853c:	jae    0x41856a
  41853e:	icebp  
  41853f:	lods   al,BYTE PTR ds:[esi]
  418540:	pop    ss
  418541:	mov    DWORD PTR [esi],esi
  418543:	not    DWORD PTR [edi-0x63]
  418546:	ret    
  418547:	sti    
  418548:	adc    bh,BYTE PTR [ebx-0x38]
  41854b:	repnz mov ah,0x9
  41854e:	dec    edi
  41854f:	popf   
  418550:	inc    ebp
  418551:	xchg   edi,eax
  418552:	pop    ebx
  418553:	pop    edx
  418554:	iret   
  418555:	or     BYTE PTR [esi],cl
  418557:	add    ch,BYTE PTR [ebx+0x47]
  41855a:	outs   dx,DWORD PTR ds:[esi]
  41855b:	sub    ah,dh
  41855d:	das    
  41855e:	aas    
  41855f:	in     al,dx
  418560:	mov    bh,0xa0
  418562:	jg     0x4185a4
  418564:	adc    bl,BYTE PTR [edx]
  418566:	add    BYTE PTR [esi-0x1de232d8],cl
  41856c:	cld    
  41856d:	in     al,dx
  41856e:	data16 or BYTE PTR [eax-0x7a],dh
  418572:	adc    ch,BYTE PTR [edx]
  418574:	call   FWORD PTR [esi+0x17]
  418577:	mov    ebx,0x868fdcb4
  41857c:	sbb    DWORD PTR [edx-0x5230f2e9],0x7429624d
  418586:	in     al,0x43
  418588:	stc    
  418589:	ret    0xcf77
  41858c:	sbb    BYTE PTR [esi+0x1e],bh
  41858f:	mov    esi,0x3499c823
  418594:	xchg   ebp,ecx
  418596:	mov    bl,0xb2
  418598:	fwait
  418599:	aad    0x7e
  41859b:	sahf   
  41859c:	pop    DWORD PTR [esi+0x21e4c790]
  4185a2:	mov    bh,0xed
  4185a4:	jns    0x418539
  4185a6:	dec    esi
  4185a7:	mov    cl,BYTE PTR [eax+0x22]
  4185aa:	aam    0xa5
  4185ac:	jo     0x4185fc
  4185ae:	inc    esi
  4185af:	and    al,BYTE PTR [eax-0x266b288f]
  4185b5:	cmp    BYTE PTR [edx],dh
  4185b7:	jae    0x4185a3
  4185b9:	cld    
  4185ba:	sub    BYTE PTR [esi+0x0],bl
  4185bd:	aaa    
  4185be:	addr16 inc edi
  4185c0:	in     eax,0x8b
  4185c2:	call   0xaf40:0xbadc2b3b
  4185c9:	dec    edx
  4185ca:	enter  0x5183,0x84
  4185ce:	sub    ch,BYTE PTR [ebp-0x660e5445]
  4185d4:	aam    0xa6
  4185d6:	js     0x418564
  4185d8:	int    0x54
  4185da:	(bad)  
  4185db:	(bad)  
  4185dd:	mov    ds:0xdf5df885,eax
  4185e2:	and    DWORD PTR [esi+0x75],edi
  4185e5:	fsubr  DWORD PTR [edx+0x58f04acb]
  4185eb:	int3   
  4185ec:	push   ss
  4185ed:	mov    ds:0xd0b1ee2b,al
  4185f2:	ret    0x2ca8
  4185f5:	pop    es
  4185f6:	xchg   ebx,eax
  4185f7:	inc    edi
  4185f8:	dec    edi
  4185f9:	cs out 0x5a,eax
  4185fc:	fxch   st(7)
  4185fe:	outs   dx,BYTE PTR ds:[esi]
  4185ff:	push   ss
  418600:	jnp    0x4185bb
  418602:	(bad)  
  418603:	fisubr DWORD PTR ds:0xdaf3aaa7
  418609:	push   esi
  41860a:	imul   esi,DWORD PTR [ebx-0x311bac15],0xc1921c5b
  418614:	dec    edi
  418615:	rcr    DWORD PTR [esi+0x3287596],cl
  41861b:	rol    ebx,1
  41861d:	push   esp
  41861e:	repz jb 0x418614
  418621:	fdiv   DWORD PTR [edx+0x1034b83a]
  418627:	pop    esp
  418628:	mov    fs,WORD PTR [edi+0x18132bca]
  41862e:	xchg   esi,eax
  41862f:	adc    eax,0x105a41e4
  418634:	fs enter 0x634b,0x5f
  418639:	dec    edi
  41863a:	jp     0x418651
  41863c:	and    ecx,DWORD PTR [eax-0x73fa64b8]
  418642:	hlt    
  418643:	jg     0x4185f6
  418645:	xchg   ebp,eax
  418646:	fs pop ebp
  418648:	xchg   DWORD PTR ds:[eax],edi
  41864b:	jl     0x418654
  41864d:	jns    0x4186a8
  41864f:	dec    esi
  418650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418651:	and    DWORD PTR [ebx+0x1e],0x32
  418655:	cld    
  418656:	xchg   edi,eax
  418657:	cmp    al,0xb4
  418659:	les    ecx,FWORD PTR [ebp-0x69]
  41865c:	rcr    eax,0x91
  41865f:	cdq    
  418660:	frstor [edx]
  418662:	mov    edi,0xd1281dd0
  418667:	sbb    bl,BYTE PTR [ebp-0x25]
  41866a:	mov    edx,0xa7e010ac
  41866f:	inc    esi
  418670:	loope  0x41860a
  418672:	pusha  
  418673:	pushf  
  418674:	mov    ebx,0x8f231027
  418679:	mov    esi,0xf3f68867
  41867e:	mov    cl,0xe7
  418680:	push   esp
  418681:	sar    DWORD PTR [ebx+0x779a7fdd],1
  418687:	test   BYTE PTR ds:0x58dbf8a1,al
  41868d:	cmp    esi,DWORD PTR [esi+0x1b517c8f]
  418693:	out    0x2d,eax
  418695:	cdq    
  418696:	pop    ss
  418697:	mov    esi,ebp
  418699:	xchg   ecx,eax
  41869a:	xor    ebp,ebx
  41869c:	cld    
  41869d:	iret   
  41869e:	sub    eax,0x6c600ae3
  4186a3:	daa    
  4186a4:	pop    DWORD PTR [ebp-0x35]
  4186a7:	mov    ah,0x80
  4186a9:	mov    eax,DWORD PTR [esi]
  4186ab:	xor    eax,0xcc6759fa
  4186b0:	push   ebp
  4186b1:	or     eax,0xcb20fccf
  4186b6:	jecxz  0x41872c
  4186b8:	mov    ecx,0xd75b1bbd
  4186bd:	es leave 
  4186bf:	xor    BYTE PTR [ecx+eiz*8],0xf0
  4186c3:	mov    esi,DWORD PTR ds:0x5feb42ae
  4186c9:	test   dl,bl
  4186cb:	stos   BYTE PTR es:[edi],al
  4186cc:	fisubr WORD PTR [eax]
  4186ce:	iret   
  4186cf:	ja     0x418690
  4186d1:	data16 add al,BYTE PTR [edx-0x3ce649fe]
  4186d8:	push   esi
  4186d9:	inc    esp
  4186da:	dec    esi
  4186db:	mov    al,ds:0xbf2e6960
  4186e0:	mov    ds:0x6b1f321c,eax
  4186e5:	push   ebp
  4186e6:	adc    DWORD PTR [ebx-0x79],0x156ab085
  4186ed:	test   al,0x86
  4186ef:	(bad)  
  4186f0:	cmp    eax,0x65f5c47d
  4186f5:	sbb    esi,DWORD PTR [ebx+0x2f]
  4186f8:	das    
  4186f9:	(bad)
  4186fd:	sar    bl,1
  4186ff:	in     eax,0x6f
  418701:	inc    ecx
  418702:	leave  
  418703:	jns    0x418712
  418705:	xchg   BYTE PTR [ebx+0x309258a2],cl
  41870b:	popf   
  41870c:	outs   dx,DWORD PTR ds:[esi]
  41870d:	fisubr WORD PTR [edi+0x10]
  418710:	inc    edi
  418711:	cwde   
  418712:	aaa    
  418713:	dec    edx
  418714:	xor    DWORD PTR [edx+esi*8-0x9],ecx
  418718:	fdivr  QWORD PTR [ebx+0x3d515a1a]
  41871e:	jne    0x4186b9
  418720:	add    dh,BYTE PTR [edi-0x5a0018ba]
  418726:	test   dl,ah
  418728:	adc    eax,ebp
  41872a:	push   0xc1b74004
  41872f:	call   0xbf0e1415
  418734:	dec    esp
  418735:	hlt    
  418736:	pop    esp
  418737:	shr    bl,cl
  418739:	loope  0x418746
  41873b:	mov    eax,ds:0xb0b0de67
  418740:	stos   BYTE PTR es:[edi],al
  418741:	(bad)  
  418742:	bound  ecx,QWORD PTR [ecx+0x68]
  418745:	mov    ah,0xae
  418747:	int    0xa3
  418749:	mov    al,0xb0
  41874b:	stc    
  41874c:	ins    BYTE PTR es:[edi],dx
  41874d:	jle    0x4186f9
  41874f:	dec    edi
  418750:	cmc    
  418751:	mov    al,ds:0x687a2900
  418756:	mov    eax,0x2b920a11
  41875b:	dec    ebx
  41875c:	mov    bl,0xc2
  41875e:	hlt    
  41875f:	dec    ecx
  418760:	ds pop ebp
  418762:	mov    cs:0x154e1c1a,al
  418768:	stos   BYTE PTR es:[edi],al
  418769:	mov    dl,0x67
  41876b:	in     al,dx
  41876c:	imul   esp,DWORD PTR [ebx+0x6280a11e],0xb2197954
  418776:	pop    ecx
  418777:	aas    
  418778:	bound  ecx,QWORD PTR [edi]
  41877a:	dec    ebx
  41877b:	retf   
  41877c:	push   ebp
  41877d:	shr    DWORD PTR [esi+0x64c9ac39],0x68
  418784:	ja     0x418794
  418786:	mov    bh,0x7b
  418788:	test   eax,0xd31a532b
  41878d:	out    dx,eax
  41878e:	imul   esi,DWORD PTR [eax+ebx*1],0xaf27dcc4
  418795:	lods   eax,DWORD PTR ds:[esi]
  418796:	call   0x7593:0x97b52314
  41879d:	(bad)  
  41879e:	jle    0x4187ed
  4187a0:	cli    
  4187a1:	push   0x98159292
  4187a6:	mov    edi,0xf6e25d88
  4187ab:	push   eax
  4187ac:	inc    edi
  4187ad:	mov    ebp,DWORD PTR [esi-0x5]
  4187b0:	div    DWORD PTR [eax-0x3a]
  4187b3:	test   al,0x8a
  4187b5:	fistp  DWORD PTR [ebx-0x26]
  4187b8:	or     eax,0xa2f13233
  4187bd:	sbb    eax,0x9f086432
  4187c2:	in     al,dx
  4187c3:	xor    al,0x27
  4187c5:	rol    BYTE PTR [ecx],cl
  4187c7:	pop    eax
  4187c8:	sub    BYTE PTR [ebx],ah
  4187ca:	push   esp
  4187cb:	adc    ecx,DWORD PTR [ecx-0x2]
  4187ce:	jg     0x41881e
  4187d0:	cmp    edi,DWORD PTR [esi+0x7c183e88]
  4187d6:	pop    edx
  4187d7:	icebp  
  4187d8:	xchg   edx,ebp
  4187da:	mov    ebx,esi
  4187dc:	mov    esi,0xc3f064f7
  4187e1:	add    BYTE PTR [esi-0x17],ah
  4187e4:	stos   BYTE PTR es:[edi],al
  4187e5:	and    al,0x9b
  4187e7:	push   cs
  4187e8:	sahf   
  4187e9:	daa    
  4187ea:	add    cl,BYTE PTR [ebp-0x39]
  4187ed:	arpl   WORD PTR [ebx-0x5],ax
  4187f0:	daa    
  4187f1:	push   esi
  4187f2:	leave  
  4187f3:	xor    edi,DWORD PTR [ebx+0x50633470]
  4187f9:	in     eax,0x1f
  4187fb:	sbb    DWORD PTR [edi],edx
  4187fd:	xchg   ebx,eax
  4187fe:	in     eax,0xa6
  418800:	push   ss
  418801:	adc    BYTE PTR [ecx],bl
  418803:	cmc    
  418804:	mov    ah,0x83
  418806:	cwde   
  418807:	inc    BYTE PTR [edi]
  418809:	add    BYTE PTR [ebx+0x27],bh
  41880c:	xchg   eax,ebx
  41880e:	xchg   esp,eax
  41880f:	leave  
  418810:	sub    eax,0xd61292c
  418815:	adc    al,0x29
  418817:	jg     0x418830
  418819:	xchg   bh,bl
  41881b:	mov    edx,0x138fcc
  418820:	fs stos DWORD PTR es:[edi],eax
  418822:	pop    ebx
  418823:	sbb    eax,0xe00e27b7
  418828:	(bad)  
  418829:	mov    ebx,0xb9adcc54
  41882e:	daa    
  41882f:	cld    
  418830:	mov    DWORD PTR [ebx-0x72],ebx
  418833:	xchg   ebp,eax
  418834:	inc    edx
  418835:	daa    
  418836:	mov    edi,0xfb0a4646
  41883b:	shl    DWORD PTR [ecx+0xf653a9a],cl
  418841:	jo     0x4187e9
  418843:	int    0x77
  418845:	jg     0x41886d
  418847:	add    esp,DWORD PTR [esi]
  418849:	xlat   BYTE PTR ds:[ebx]
  41884a:	add    BYTE PTR [ebx+ebx*8-0x30],bl
  41884e:	jae    0x418806
  418850:	sahf   
  418851:	cmp    BYTE PTR [eax-0x40ae5f28],dl
  418857:	test   al,0x93
  418859:	mov    dh,0xf5
  41885b:	rcr    BYTE PTR [esi+0x15b4dd24],0x3a
  418862:	or     dh,0xe4
  418865:	leave  
  418866:	clc    
  418867:	and    bx,ax
  41886a:	xor    eax,0x1243cce5
  41886f:	jb     0x4188e9
  418871:	repnz jecxz 0x4188d2
  418874:	adc    al,0x76
  418876:	dec    ecx
  418877:	je     0x41885c
  418879:	das    
  41887a:	sbb    DWORD PTR [esi+0x15efce89],0xe2590da6
  418884:	add    al,0x4a
  418886:	test   DWORD PTR [ebx-0x6f0496e7],ebx
  41888c:	data16 jg 0x418887
  41888f:	xchg   edx,eax
  418890:	push   cs
  418891:	mov    ebx,0xb8d97e61
  418896:	imul   eax,edi,0xffffffba
  418899:	ins    DWORD PTR es:[edi],dx
  41889a:	xor    eax,0xedd7bd97
  41889f:	and    eax,0x6909e3a0
  4188a4:	out    dx,al
  4188a5:	add    ebx,DWORD PTR [edx*8-0x3a0f4b04]
  4188ac:	or     bl,cl
  4188ae:	push   edx
  4188af:	xor    al,0x3
  4188b1:	cmp    eax,DWORD PTR [ecx-0x4f]
  4188b4:	inc    ebp
  4188b5:	(bad)  
  4188b6:	mov    edx,DWORD PTR [edx-0x55]
  4188b9:	pop    edi
  4188ba:	(bad)  
  4188bb:	cmp    edx,DWORD PTR [edi-0x381761fc]
  4188c1:	adc    DWORD PTR [edi],edx
  4188c3:	mov    bl,0x37
  4188c5:	(bad)  
  4188c6:	mov    BYTE PTR [edi+0x4f2dc6cc],0x20
  4188cd:	add    ebx,DWORD PTR [ebp+0x0]
  4188d0:	add    BYTE PTR [eax],al
  4188d2:	sahf   
  4188d3:	ins    DWORD PTR es:[edi],dx
  4188d4:	not    esi
  4188d6:	neg    esi
  4188d8:	mov    edi,0x9e0bd66d
  4188dd:	int    0x8a
  4188df:	inc    esp
  4188e0:	fsubp  st(2),st
  4188e2:	or     eax,DWORD PTR [esi]
  4188e4:	add    DWORD PTR [eax],eax
  4188e6:	cmc    
  4188e7:	add    al,0x0
  4188e9:	add    al,bh
  4188eb:	adc    BYTE PTR [esi+0x77ffeb24],dh
  4188f1:	enter  0xc0bc,0x75
  4188f5:	dec    edi
  4188f6:	cmp    eax,0x355c6c18
  4188fb:	push   esi
  4188fc:	lds    esp,FWORD PTR [edi-0xb0a4481]
  418902:	cmp    DWORD PTR [edx+0x56],esp
  418905:	mov    dl,0x57
  418907:	ror    ebx,1
  418909:	dec    eax
  41890a:	fwait
  41890b:	sbb    ebp,DWORD PTR [edi+0x7d]
  41890e:	jl     0x4188d4
  418910:	jmp    0xfe22a2c0
  418915:	(bad)  
  418917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418918:	pslld  mm1,QWORD PTR [esi]
  41891b:	inc    eax
  41891c:	aaa    
  41891d:	add    eax,0x238e0c5e
  418922:	sbb    BYTE PTR [edi],cl
  418924:	add    eax,0x5b0be2d1
  418929:	and    ecx,DWORD PTR [esi]
  41892b:	mov    dl,0xc2
  41892d:	jo     0x418931
  41892f:	cmp    al,0xef
  418931:	xor    eax,0x52f5cdcd
  418936:	dec    esi
  418937:	xchg   BYTE PTR [ebx],bl
  418939:	fstp   DWORD PTR [ecx+0x8]
  41893c:	popf   
  41893d:	ret    
  41893e:	sbb    eax,0x5bac9aed
  418943:	pop    ss
  418944:	imul   ecx,DWORD PTR [edx+0xe0a5f51],0xffffffef
  41894b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41894c:	cmp    al,0x1a
  41894e:	push   edi
  41894f:	push   0xfffffff9
  418951:	ds fcomip st,st(5)
  418954:	bound  esp,QWORD PTR [eax-0x7e0a5217]
  41895a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41895b:	shr    cl,cl
  41895d:	rcl    esp,cl
  41895f:	adc    al,0x12
  418961:	pop    edi
  418962:	dec    esp
  418963:	push   ebx
  418964:	add    esi,eax
  418966:	mov    eax,ds:0xabde04d4
  41896b:	lods   eax,DWORD PTR ds:[esi]
  41896c:	in     eax,0x73
  41896e:	sbb    edi,DWORD PTR [edi+0x3f]
  418971:	adc    cl,dl
  418973:	inc    eax
  418974:	(bad)  
  418975:	loope  0x4188fe
  418977:	mov    ds:0x2cc4bdcf,eax
  41897c:	mov    cl,BYTE PTR [ecx+0x15]
  41897f:	stos   BYTE PTR es:[edi],al
  418980:	push   es
  418981:	clc    
  418982:	hlt    
  418983:	jmp    0x730d:0xe5b39e56
  41898a:	inc    bl
  41898c:	or     eax,0x86c53d99
  418991:	cwde   
  418992:	shl    BYTE PTR [esi-0x7b],1
  418995:	icebp  
  418996:	leave  
  418997:	mov    edi,ebx
  418999:	cwde   
  41899a:	push   ebp
  41899b:	xchg   ebp,eax
  41899c:	add    BYTE PTR [ebp-0x27],0xdc
  4189a0:	scas   eax,DWORD PTR es:[edi]
  4189a1:	push   0xffffff85
  4189a3:	cmp    ch,ch
  4189a5:	repz mov WORD PTR [eax+edi*2+0x4e],fs
  4189aa:	mov    edi,0xd82b3911
  4189af:	sbb    ecx,DWORD PTR [edi-0x57]
  4189b2:	sub    BYTE PTR [ebp-0x1cf59081],dl
  4189b8:	sahf   
  4189b9:	or     ebx,esi
  4189bb:	add    dh,BYTE PTR [esi+0x37afa2ad]
  4189c1:	pop    es
  4189c2:	(bad)  
  4189c3:	and    al,0xa
  4189c5:	mov    WORD PTR [eax+0x38],gs
  4189c8:	test   ecx,esi
  4189ca:	sbb    eax,0xd08385bd
  4189cf:	cs mov esp,edx
  4189d2:	ror    eax,0xc5
  4189d5:	jge    0x418976
  4189d7:	mov    edi,0xfb1752a6
  4189dc:	and    BYTE PTR [eax],dl
  4189de:	push   edi
  4189df:	inc    ebx
  4189e0:	or     cl,BYTE PTR [ebp+0x326ea7c]
  4189e6:	push   ss
  4189e7:	jb     0x418a5a
  4189e9:	or     al,0xb6
  4189eb:	loope  0x41898d
  4189ed:	xor    ebp,DWORD PTR [ebx+edi*4+0x8]
  4189f1:	sysret 
  4189f3:	lahf   
  4189f4:	sub    BYTE PTR [edi],ch
  4189f6:	and    al,0xe0
  4189f8:	retf   0xca36
  4189fb:	jp     0x4189a0
  4189fd:	ss je  0x418a29
  418a00:	(bad)  
  418a01:	clc    
  418a02:	inc    esi
  418a03:	jns    0x4189ac
  418a05:	ret    0x2ec7
  418a08:	add    al,BYTE PTR [ebx]
  418a0a:	jg     0x418a00
  418a0c:	jmp    0x418a8d
  418a0e:	mov    ecx,0x1df861d6
  418a13:	xor    edi,DWORD PTR [ecx-0x6f]
  418a16:	sbb    BYTE PTR [ebp-0x2f],al
  418a19:	mov    bh,0xb8
  418a1b:	dec    esp
  418a1c:	and    BYTE PTR ds:0x7840fbf4,0x1e
  418a23:	in     eax,0x37
  418a25:	add    BYTE PTR [ebx],al
  418a27:	xchg   DWORD PTR [esi+0x50],ecx
  418a2a:	pop    ss
  418a2b:	adc    al,0xdb
  418a2d:	adc    dh,BYTE PTR [ecx+0x65]
  418a30:	in     eax,dx
  418a31:	add    BYTE PTR [ebp+0x66],bh
  418a34:	loop   0x418a1d
  418a36:	jecxz  0x418a4a
  418a38:	pop    es
  418a39:	or     al,BYTE PTR [ebp+0x3a]
  418a3c:	sbb    BYTE PTR [edi-0x5ec1bfae],bh
  418a42:	icebp  
  418a43:	pop    edx
  418a44:	xor    al,0x9a
  418a46:	and    ah,BYTE PTR [edi]
  418a48:	mov    ebx,ecx
  418a4a:	rol    DWORD PTR [ecx-0x5b69fb4],1
  418a50:	lods   eax,DWORD PTR ds:[esi]
  418a51:	dec    ebp
  418a52:	mov    al,ds:0xf9e73de5
  418a57:	jmp    0x418a2f
  418a59:	sub    ebp,DWORD PTR [edi-0x38]
  418a5c:	sub    dl,dl
  418a5e:	push   ebp
  418a5f:	mov    ah,0xeb
  418a61:	ins    BYTE PTR es:[edi],dx
  418a62:	sbb    dl,BYTE PTR [edx-0x7ad106db]
  418a68:	sbb    eax,0xe493b53f
  418a6d:	xor    DWORD PTR [ebx+eax*2-0x1b],edx
  418a71:	fistp  DWORD PTR [ecx]
  418a73:	aam    0xa
  418a75:	cs mov edi,0x419c237f
  418a7b:	stos   BYTE PTR es:[edi],al
  418a7c:	fs pop edx
  418a7e:	js     0x418a26
  418a80:	inc    esi
  418a81:	loope  0x418a99
  418a83:	(bad)  [edx+0x3d97fd52]
  418a89:	pop    eax
  418a8a:	in     eax,0xd0
  418a8c:	push   es
  418a8d:	cli    
  418a8e:	jge    0x418a5d
  418a90:	mov    edx,0xfb7f8f00
  418a95:	pop    ecx
  418a96:	stc    
  418a97:	aam    0x83
  418a99:	repz and eax,0x5cf03044
  418a9f:	push   ebx
  418aa0:	dec    ebx
  418aa1:	mov    edx,0x2944f891
  418aa6:	jmp    0x75ce:0x5102d0c7
  418aad:	fcomp  DWORD PTR [edi-0x14]
  418ab0:	jbe    0x418a5c
  418ab2:	(bad)  
  418ab3:	iret   
  418ab4:	xlat   BYTE PTR ds:[ebx]
  418ab5:	ss push cs
  418ab7:	adc    ch,BYTE PTR [edx]
  418ab9:	mov    esi,0x63d562ce
  418abe:	xchg   edx,eax
  418abf:	sub    ecx,edi
  418ac1:	xlat   BYTE PTR ds:[ebx]
  418ac2:	nop
  418ac3:	mov    edi,0xbd197217
  418ac8:	dec    DWORD PTR [ebp-0x6dde4c29]
  418ace:	sub    al,BYTE PTR [esi]
  418ad0:	int    0xde
  418ad2:	js     0x418aef
  418ad4:	xor    BYTE PTR [ecx-0x7f],ah
  418ad7:	mov    eax,0xdfbda8f6
  418adc:	cli    
  418add:	sbb    eax,DWORD PTR [eax+0xd]
  418ae0:	xchg   edi,eax
  418ae1:	test   BYTE PTR [eax+edi*4+0x6de46445],bh
  418ae8:	js     0x418aba
  418aea:	and    DWORD PTR [edx*1+0x3c468104],0xce9e81c9
  418af5:	test   ebx,edi
  418af7:	jp     0x418b21
  418af9:	adc    al,0x7b
  418afb:	daa    
  418afc:	loope  0x418b27
  418afe:	pop    ebp
  418aff:	std    
  418b00:	fcmovb st,st(6)
  418b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b03:	scas   al,BYTE PTR es:[edi]
  418b04:	inc    edi
  418b05:	repz dec edx
  418b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b08:	(bad)  
  418b09:	sub    al,0x41
  418b0b:	int3   
  418b0c:	scas   al,BYTE PTR es:[edi]
  418b0d:	and    DWORD PTR [ebx+0x1846f846],0xffffff93
  418b14:	imul   esi,DWORD PTR [esi-0x76],0xd11fc20f
  418b1b:	push   ebx
  418b1c:	xchg   edi,eax
  418b1d:	enter  0x6dd7,0xfb
  418b21:	ret    0xd4f0
  418b24:	add    eax,0xf51757ca
  418b29:	cwde   
  418b2a:	test   eax,0xbd1ae0cf
  418b2f:	scas   eax,DWORD PTR es:[edi]
  418b30:	xchg   edi,eax
  418b31:	repz jns 0x418ab7
  418b34:	(bad)  
  418b35:	popf   
  418b36:	mov    cl,0xa
  418b38:	pop    ebp
  418b39:	fisubr DWORD PTR [edi+0x29]
  418b3c:	cld    
  418b3d:	jb     0x418ae4
  418b3f:	mov    dl,0x6f
  418b41:	and    ch,BYTE PTR [eax]
  418b43:	pop    ecx
  418b44:	not    BYTE PTR [eax-0x357405d9]
  418b4a:	lahf   
  418b4b:	call   0xdf24c0ee
  418b50:	rcr    BYTE PTR [esi-0x40],cl
  418b53:	lahf   
  418b54:	xchg   edx,eax
  418b55:	int    0x5e
  418b57:	enter  0xf3f9,0xb1
  418b5b:	mov    ds:0xafc720f4,al
  418b60:	fmul   DWORD PTR [ebx-0x1dc21c9c]
  418b66:	sub    ebx,edi
  418b68:	pop    esi
  418b69:	pop    eax
  418b6a:	pop    esi
  418b6b:	enter  0x701a,0xf7
  418b6f:	jmp    0x75c8:0x990da3ab
  418b76:	push   ebx
  418b77:	inc    edx
  418b78:	rep ins DWORD PTR es:[edi],dx
  418b7a:	push   cs
  418b7b:	stos   BYTE PTR es:[edi],al
  418b7c:	mov    esi,0xe9ed7fa8
  418b81:	pop    ebx
  418b82:	add    eax,0x9646d937
  418b87:	and    BYTE PTR [ecx],dh
  418b89:	std    
  418b8a:	pop    ecx
  418b8b:	pop    ebx
  418b8c:	xlat   BYTE PTR ds:[ebx]
  418b8d:	inc    esi
  418b8e:	mov    dh,0x88
  418b90:	mov    al,0x4b
  418b92:	pop    ss
  418b93:	dec    edi
  418b94:	outs   dx,DWORD PTR ds:[esi]
  418b95:	push   esp
  418b96:	pop    es
  418b97:	test   eax,0x92f52cac
  418b9c:	cli    
  418b9d:	mov    al,ds:0x44d82afc
  418ba2:	std    
  418ba3:	std    
  418ba4:	xchg   edi,eax
  418ba5:	rcl    BYTE PTR [edx+0x696447d9],0x7
  418bac:	mul    BYTE PTR [edi+0x6b]
  418baf:	xchg   esi,eax
  418bb0:	mov    bh,0xfc
  418bb2:	sub    esi,ecx
  418bb4:	and    eax,0x30cdcee3
  418bb9:	jge    0x418c18
  418bbb:	mov    dl,0x3
  418bbd:	xchg   ebx,eax
  418bbe:	xor    bh,BYTE PTR [ecx+0x30]
  418bc1:	jmp    0x418b9e
  418bc3:	dec    edi
  418bc4:	loope  0x418bd3
  418bc6:	add    BYTE PTR [eax-0x2613c5f],ch
  418bcc:	cmp    dh,bh
  418bce:	jmp    0xae7288a0
  418bd3:	cmp    cl,dh
  418bd5:	xchg   ebp,eax
  418bd6:	call   0xbec3:0x44146dd3
  418bdd:	cmp    al,0xce
  418bdf:	cdq    
  418be0:	and    ch,dl
  418be2:	sahf   
  418be3:	iret   
  418be4:	xchg   edi,eax
  418be5:	sbb    al,0x83
  418be7:	adc    eax,0x9d94195c
  418bec:	das    
  418bed:	mov    ah,0x3a
  418bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bf0:	jmp    FWORD PTR [edi]
  418bf2:	hlt    
  418bf3:	cld    
  418bf4:	add    eax,0xd54cd7fd
  418bf9:	fsubr  DWORD PTR [ecx+0x58a044ee]
  418bff:	xor    eax,0x5e21881e
  418c04:	scas   al,BYTE PTR es:[edi]
  418c05:	int    0x5c
  418c07:	jg     0x418bd3
  418c09:	js     0x418c30
  418c0b:	pop    ss
  418c0c:	daa    
  418c0d:	sub    BYTE PTR [ebp+0x61],bl
  418c10:	lock mov edx,0xb7717ead
  418c16:	add    BYTE PTR [edx-0x1a99e4f9],dh
  418c1c:	mov    ds:0x46d3ffc0,al
  418c21:	jg     0x418c16
  418c23:	sub    BYTE PTR [eax],0x46
  418c26:	cmp    edi,edx
  418c28:	or     al,0x7e
  418c2a:	inc    ecx
  418c2b:	call   0xb9b:0xbfef669f
  418c32:	cmc    
  418c33:	or     bh,BYTE PTR [eax-0x3b]
  418c36:	push   0xd01a74e1
  418c3b:	xor    al,0xd4
  418c3d:	into   
  418c3e:	add    al,0x31
  418c40:	pop    edi
  418c41:	mov    al,0xae
  418c43:	das    
  418c44:	push   edi
  418c45:	dec    edi
  418c46:	and    al,0xf0
  418c48:	mov    DWORD PTR [ebx+0x3c],esp
  418c4b:	adc    al,0x20
  418c4d:	mov    eax,0x6a240faa
  418c52:	stc    
  418c53:	xor    DWORD PTR [ecx+0x1964d683],ebp
  418c59:	or     ebp,DWORD PTR [ebp+0x52]
  418c5c:	add    al,0xae
  418c5e:	aas    
  418c5f:	sti    
  418c60:	mov    bl,0x20
  418c62:	rcr    cl,0x51
  418c65:	mov    eax,0xa1540326
  418c6a:	or     dh,cl
  418c6c:	out    dx,eax
  418c6d:	(bad)  
  418c6e:	mov    edi,0x6c3e4477
  418c73:	add    esp,ebx
  418c75:	cwde   
  418c76:	pop    es
  418c77:	pop    eax
  418c78:	call   0x213:0x489d2481
  418c7f:	imul   ebx,DWORD PTR [ebx+esi*2+0x184679e4],0xaa8f0842
  418c8a:	mov    esp,DWORD PTR ds:0xb3f23b01
  418c90:	xor    esp,ebp
  418c92:	add    DWORD PTR [edi],ecx
  418c94:	cmp    eax,0xf8894106
  418c99:	xchg   edx,eax
  418c9a:	cmp    ebx,DWORD PTR [ebp-0x7f]
  418c9d:	adc    al,0x73
  418c9f:	and    al,0xad
  418ca1:	sti    
  418ca2:	dec    esi
  418ca3:	test   DWORD PTR [eax+0x27f86edb],0x8aabc598
  418cad:	lds    esp,FWORD PTR [ecx+0x328e0eb5]
  418cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cb4:	sahf   
  418cb5:	add    eax,0xc2591488
  418cba:	daa    
  418cbb:	test   BYTE PTR ds:0x6b7259a6,al
  418cc1:	test   al,0xa1
  418cc4:	or     BYTE PTR ds:0x693b46a7,dl
  418cca:	jmp    0x9162:0x56e87553
  418cd1:	fwait
  418cd2:	test   eax,0x5d2928d5
  418cd7:	popa   
  418cd8:	stc    
  418cd9:	popf   
  418cda:	push   0x9eb094c6
  418cdf:	fs in  al,dx
  418ce1:	pcmpeqd mm0,mm1
  418ce4:	cmp    al,0xd0
  418ce6:	adc    edx,edi
  418ce8:	out    dx,eax
  418ce9:	imul   edi,DWORD PTR [ebp+0x2c3dbcfe],0xffffffb1
  418cf0:	enter  0x94be,0x19
  418cf4:	push   ebp
  418cf5:	shl    BYTE PTR [edx+0x29909abb],1
  418cfb:	cmp    DWORD PTR [edi+eiz*1+0x1ea9eced],ebx
  418d02:	dec    ecx
  418d03:	inc    eax
  418d04:	pop    edi
  418d05:	jge    0x418d6f
  418d07:	unpcklps xmm3,xmm1
  418d0a:	mov    DWORD PTR [eax+0x3b],0x978c506b
  418d11:	sub    esi,DWORD PTR [edi-0x4e]
  418d14:	xlat   BYTE PTR ds:[ebx]
  418d15:	mov    al,0x68
  418d17:	in     eax,dx
  418d18:	inc    esp
  418d19:	lock hlt 
  418d1b:	push   edx
  418d1c:	push   0xffffffea
  418d1e:	loopne 0x418d69
  418d20:	mov    al,0x54
  418d22:	inc    ecx
  418d23:	in     eax,dx
  418d24:	push   0xffffff95
  418d26:	dec    ecx
  418d27:	ds sahf 
  418d29:	frstor [esi+eax*2-0x66]
  418d2d:	add    eax,0x3349d158
  418d32:	pextrw ebp,(bad),0xc5
  418d34:	imul   ecx,DWORD PTR [ecx-0x6e04e111],0x1cd621b
  418d3e:	fwait
  418d3f:	or     eax,0xe507c7cd
  418d44:	xchg   ebx,eax
  418d45:	ja     0x418d4f
  418d47:	xchg   edx,eax
  418d48:	mov    al,0xb2
  418d4a:	mov    ebp,0x37453bb5
  418d4f:	mov    ds:0x99a12104,al
  418d54:	mov    di,0x103e
  418d58:	in     eax,dx
  418d59:	pop    ecx
  418d5a:	xchg   ch,dl
  418d5c:	loope  0x418da5
  418d5e:	mov    edx,0xbf5f648f
  418d63:	push   ss
  418d64:	adc    ecx,DWORD PTR [eax]
  418d66:	mov    eax,ds:0x86af0611
  418d6b:	ror    dl,0xb0
  418d6e:	imul   eax,DWORD PTR [edx],0xbfd831e8
  418d74:	sub    al,0xbc
  418d77:	sbb    DWORD PTR [edi+0x9],0x456816f1
  418d7e:	cdq    
  418d7f:	cmp    eax,0xd98c365c
  418d84:	or     BYTE PTR [esi+0x18],bh
  418d87:	add    eax,0x2a6f76bd
  418d8c:	sahf   
  418d8d:	(bad)  
  418d8e:	cwde   
  418d8f:	popa   
  418d90:	xchg   edi,eax
  418d91:	outs   dx,BYTE PTR ds:[esi]
  418d92:	dec    esi
  418d93:	outs   dx,BYTE PTR ds:[esi]
  418d94:	add    edx,esi
  418d96:	inc    ecx
  418d97:	xor    ebx,ecx
  418d99:	add    cl,dl
  418d9b:	adc    ebp,esi
  418d9d:	popf   
  418d9e:	and    BYTE PTR [ebp+0x4],0x63
  418da2:	sbb    ecx,DWORD PTR [ebp+0x61]
  418da5:	dec    ecx
  418da6:	imul   edi,DWORD PTR [esi+0x7a8978fe],0x14
  418dad:	inc    ebp
  418dae:	mov    al,BYTE PTR [ebx-0x2c509633]
  418db4:	jl     0x418d7a
  418db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418db7:	out    0x4f,al
  418db9:	xor    al,BYTE PTR [edx]
  418dbb:	push   es
  418dbc:	sbb    eax,0x3ba3d7de
  418dc1:	mov    eax,0xf78be71f
  418dc7:	hlt    
  418dc8:	popf   
  418dc9:	daa    
  418dca:	sbb    dh,BYTE PTR [esi]
  418dcc:	dec    ecx
  418dcd:	cmp    BYTE PTR [ecx],dl
  418dcf:	push   cs
  418dd0:	cdq    
  418dd1:	push   edi
  418dd2:	aad    0x7e
  418dd4:	push   ss
  418dd5:	lock mov cl,0xd6
  418dd8:	mov    dl,0xc3
  418dda:	int3   
  418ddb:	inc    ebp
  418ddc:	fwait
  418ddd:	adc    eax,DWORD PTR [ebx]
  418ddf:	add    BYTE PTR [eax],al
  418de1:	add    BYTE PTR [edx-0x103695a9],dh
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0x13fe71f5
  418df2:	add    BYTE PTR [ebx],cl
  418df4:	add    DWORD PTR [eax],eax
  418df6:	cmc    
  418df7:	add    al,0x0
  418df9:	add    BYTE PTR [ebp+ebp*4+0x4b],bh
  418dfd:	add    BYTE PTR [edx],bh
  418dff:	add    eax,DWORD PTR [eax]
  418e01:	inc    edx
  418e02:	sbb    eax,0x47be015d
  418e07:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  418e09:	xor    eax,0xa412c12d
  418e0e:	xlat   BYTE PTR ds:[ebx]
  418e0f:	jmp    0x7d9e523a
  418e14:	stos   BYTE PTR es:[edi],al
  418e15:	jmp    0x418d9f
  418e17:	or     eax,0x162a2650
  418e1c:	add    al,0xa7
  418e1e:	lahf   
  418e1f:	mov    ds:0xaea1d991,al
  418e24:	les    ebp,FWORD PTR [edx-0x6c]
  418e27:	mov    bh,0x7e
  418e29:	dec    edx
  418e2a:	jl     0x418e5e
  418e2c:	push   es
  418e2d:	ror    ah,cl
  418e2f:	sbb    eax,0xdaec5080
  418e34:	jge    0x418ea7
  418e36:	retf   
  418e37:	or     BYTE PTR [esi+0x75],al
  418e3a:	pop    ds
  418e3b:	aad    0x5e
  418e3d:	test   eax,0xd19a8168
  418e42:	call   0xd262bed6
  418e47:	lahf   
  418e48:	add    edx,edx
  418e4a:	(bad)  
  418e4b:	bound  ebp,QWORD PTR [eax-0x2e7b10c6]
  418e51:	(bad)  
  418e52:	mov    bh,0xf7
  418e54:	add    cl,BYTE PTR [eax-0x5b5863ea]
  418e5a:	sub    eax,DWORD PTR [ecx]
  418e5c:	xor    DWORD PTR [ebx-0x73],edi
  418e5f:	sahf   
  418e60:	xor    eax,DWORD PTR [esi-0x71b15b3f]
  418e66:	adc    eax,0xd96e5481
  418e6b:	sub    DWORD PTR [edx],ebp
  418e6d:	das    
  418e6e:	icebp  
  418e6f:	fyl2xp1 
  418e71:	aas    
  418e72:	scas   eax,DWORD PTR es:[edi]
  418e73:	add    BYTE PTR [ebx],al
  418e75:	call   0x83babbb1
  418e7a:	out    0x3b,al
  418e7c:	mov    bh,0x27
  418e7e:	pop    esp
  418e7f:	addr16 push cs
  418e81:	rcl    BYTE PTR [esp+ecx*8],1
  418e84:	xor    BYTE PTR [esi+0x5b],bl
  418e87:	push   es
  418e88:	call   0x9d847501
  418e8d:	push   cs
  418e8e:	adc    ebp,DWORD PTR [edi]
  418e90:	ja     0x418f00
  418e92:	xor    DWORD PTR [edx-0x4729c689],esp
  418e98:	sub    al,0xc4
  418e9a:	loopne 0x418eeb
  418e9c:	mov    edx,0x1398a4fe
  418ea1:	sbb    esi,0x54f566fe
  418ea7:	push   edi
  418ea8:	sbb    al,0xa9
  418eaa:	mov    eax,ds:0x6a0c9444
  418eaf:	iret   
  418eb0:	sbb    BYTE PTR [ebx+0x70],bl
  418eb3:	dec    esp
  418eb4:	and    bh,BYTE PTR [ecx-0x11]
  418eb7:	xor    ch,ch
  418eb9:	mov    esp,0x1fdfa3a2
  418ebe:	arpl   WORD PTR [edi+0x43],bx
  418ec1:	scas   eax,DWORD PTR es:[edi]
  418ec2:	fwait
  418ec3:	push   esp
  418ec4:	xchg   edx,eax
  418ec5:	aas    
  418ec6:	mov    cl,0xb
  418ec8:	xor    esp,DWORD PTR [edi+0x48]
  418ecb:	push   ecx
  418ecc:	push   ecx
  418ecd:	popa   
  418ece:	xchg   esi,eax
  418ecf:	pop    ecx
  418ed0:	pop    ds
  418ed1:	mov    eax,0xbeed46b0
  418ed6:	mov    bh,BYTE PTR [edx]
  418ed8:	out    dx,eax
  418ed9:	stc    
  418eda:	sbb    edx,ebx
  418edc:	add    al,BYTE PTR [ebp-0x4cae0038]
  418ee2:	ror    DWORD PTR [edx+0x7d],1
  418ee5:	add    BYTE PTR [eax],ah
  418ee7:	cmp    DWORD PTR [ebx+0x5031d668],edx
  418eed:	leave  
  418eee:	or     al,al
  418ef0:	pop    ecx
  418ef1:	data16 (bad) 
  418ef3:	xchg   edx,eax
  418ef4:	pop    ds
  418ef5:	mov    ch,BYTE PTR [edi-0x71]
  418ef8:	ds sti 
  418efa:	pop    ebx
  418efb:	pop    ds
  418efc:	scas   al,BYTE PTR es:[edi]
  418efd:	ss loop 0x418eb1
  418f00:	lods   eax,DWORD PTR ds:[esi]
  418f01:	aam    0xc9
  418f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f04:	mov    ds:0x8a3aa23e,eax
  418f09:	test   al,0x20
  418f0b:	mov    esi,DWORD PTR [ecx+edi*8]
  418f0e:	(bad)  
  418f0f:	outs   dx,BYTE PTR ds:[esi]
  418f10:	popa   
  418f11:	xchg   ebx,eax
  418f12:	ins    BYTE PTR es:[edi],dx
  418f13:	mov    esi,edx
  418f15:	test   DWORD PTR [ebx],edx
  418f17:	push   edx
  418f18:	stc    
  418f19:	call   0x46fbdd0b
  418f1e:	fdivr  QWORD PTR [eax-0x5c]
  418f21:	add    edi,DWORD PTR [ebx+0x78]
  418f24:	ins    BYTE PTR es:[edi],dx
  418f25:	inc    eax
  418f26:	outs   dx,BYTE PTR ds:[esi]
  418f27:	inc    eax
  418f28:	repnz arpl sp,cx
  418f2b:	clc    
  418f2c:	sbb    al,0xe5
  418f2e:	pop    ebp
  418f2f:	push   ecx
  418f30:	pop    eax
  418f31:	mov    ah,0xdf
  418f33:	outs   dx,DWORD PTR ds:[esi]
  418f34:	cmp    dh,BYTE PTR ds:0x9b2785b5
  418f3a:	jl     0x418ed8
  418f3c:	test   al,0xca
  418f3e:	rcr    BYTE PTR [edi-0x36cf87e6],cl
  418f44:	je     0x418f3b
  418f46:	shl    BYTE PTR [edi-0x279d7b84],1
  418f4c:	ins    BYTE PTR es:[edi],dx
  418f4d:	push   eax
  418f4e:	(bad)  
  418f4f:	lock add cl,ch
  418f52:	adc    al,0x97
  418f54:	pop    edi
  418f55:	and    al,0x72
  418f57:	push   esp
  418f58:	aas    
  418f59:	out    dx,eax
  418f5a:	adc    edi,ebx
  418f5c:	out    dx,al
  418f5d:	sbb    al,dh
  418f5f:	pop    ds
  418f60:	cwde   
  418f61:	hlt    
  418f62:	rcr    BYTE PTR [esi+0x1a],0x77
  418f66:	xor    eax,0xb60a7871
  418f6b:	out    0x5d,al
  418f6d:	popa   
  418f6e:	mov    bl,al
  418f70:	int3   
  418f71:	xchg   ebp,eax
  418f72:	dec    ebx
  418f73:	mov    eax,0xde1c7b66
  418f78:	pop    edx
  418f79:	call   0xca056e3a
  418f7e:	imul   bl
  418f80:	push   ss
  418f81:	imul   ebp
  418f83:	jo     0x418f16
  418f85:	adc    ebp,esp
  418f87:	out    dx,al
  418f88:	scas   al,BYTE PTR es:[edi]
  418f89:	mov    ds:0x5a9ad129,al
  418f8e:	push   ss
  418f8f:	cmp    eax,DWORD PTR [edx+0x45]
  418f92:	cs dec ebx
  418f94:	push   ebx
  418f95:	hlt    
  418f96:	sub    eax,0x112c1f54
  418f9b:	sbb    al,0x6c
  418f9d:	les    ebx,FWORD PTR [edx]
  418f9f:	or     ch,BYTE PTR ds:0xe6a2eb9b
  418fa5:	pop    esi
  418fa6:	mov    dl,0x2d
  418fa8:	mov    bh,0x14
  418faa:	cmp    eax,0x4677efaa
  418faf:	sbb    ebp,ecx
  418fb1:	arpl   WORD PTR [edx+eax*4+0x2135f044],bx
  418fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fb9:	ret    
  418fba:	sahf   
  418fbb:	sbb    eax,0x42a6db59
  418fc0:	mov    dh,0x16
  418fc2:	or     al,0x6b
  418fc4:	jnp    0x418fe0
  418fc6:	arpl   WORD PTR [ebp-0x7e],ax
  418fc9:	das    
  418fca:	xor    eax,0x4ccde43e
  418fcf:	mov    cl,0xa5
  418fd1:	pop    esp
  418fd2:	xchg   edi,eax
  418fd3:	pop    ds
  418fd4:	adc    esp,esi
  418fd6:	fwait
  418fd7:	pop    esp
  418fd8:	sar    DWORD PTR [esi-0xa],0xdb
  418fdc:	mov    eax,ds:0x549275e6
  418fe1:	std    
  418fe2:	pop    edx
  418fe3:	int3   
  418fe4:	iret   
  418fe5:	inc    ebx
  418fe6:	inc    edx
  418fe7:	add    DWORD PTR [ebp+0x43dd2cda],edi
  418fed:	mov    bh,0x7b
  418fef:	ins    DWORD PTR es:[edi],dx
  418ff0:	add    DWORD PTR [edx-0x67],eax
  418ff3:	pop    edi
  418ff4:	int    0x3d
  418ff6:	lea    ecx,[ebp-0x2c1eb5e3]
  418ffc:	lds    ebp,FWORD PTR [edx+0x225c46ab]
  419002:	add    BYTE PTR [ecx-0x2c],ch
  419005:	mov    esp,0x3cf4ebff
  41900a:	fwait
  41900b:	test   DWORD PTR [esi+0x71],esp
  41900e:	dec    ebx
  41900f:	imul   ebp,DWORD PTR [edx],0xffffff88
  419012:	leave  
  419013:	fs leave 
  419015:	cli    
  419016:	push   ecx
  419017:	mov    DWORD PTR [ebx-0xa7264c1],esi
  41901d:	sub    ebp,edx
  41901f:	mov    edx,0x72acd9ce
  419024:	jb     0x419032
  419026:	or     al,0xa2
  419028:	push   esi
  419029:	xchg   ecx,eax
  41902a:	adc    al,0xd5
  41902c:	mov    edi,0xf0cf4242
  419031:	lds    ebp,FWORD PTR [ecx]
  419033:	ficom  DWORD PTR ds:0x602ddb11
  419039:	in     al,0xf0
  41903b:	cs push ecx
  41903d:	adc    al,0xc
  41903f:	test   eax,0xf1ec77d1
  419044:	arpl   WORD PTR [edx],sp
  419046:	scas   eax,DWORD PTR es:[edi]
  419047:	rol    esp,1
  419049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41904a:	cmp    al,0x51
  41904c:	sar    BYTE PTR [ecx],cl
  41904e:	psraw  mm0,QWORD PTR [esi]
  419051:	jge    0x4190b7
  419053:	mov    bl,0x8c
  419055:	sub    eax,0xb79e8f2f
  41905a:	jmp    0x6d09c8d9
  41905f:	ret    
  419060:	cmp    eax,0xaf54e186
  419065:	pop    ebp
  419066:	(bad)  
  419067:	or     cl,BYTE PTR [ebx]
  419069:	fild   WORD PTR [eax]
  41906b:	pushf  
  41906c:	mov    ss,WORD PTR [ecx-0x52e48c1c]
  419072:	cmp    bl,BYTE PTR [eax+0x2cc01e53]
  419078:	dec    edx
  419079:	pop    ebp
  41907a:	ja     0x4190b3
  41907c:	inc    ebx
  41907d:	xchg   eax,edx
  41907f:	or     dl,BYTE PTR [esi-0x2e]
  419082:	enter  0x1387,0x72
  419086:	mov    esp,0x5bf3abb
  41908b:	stc    
  41908c:	test   bh,al
  41908e:	ret    
  41908f:	add    esi,DWORD PTR [ebx-0x41]
  419092:	bound  esp,QWORD PTR [eax-0x2d]
  419095:	dec    ebp
  419096:	into   
  419097:	xchg   edx,eax
  419098:	push   cs
  419099:	xchg   DWORD PTR [ebx-0x70],edi
  41909c:	xor    al,0xd9
  41909e:	nop
  41909f:	jb     0x41903a
  4190a1:	push   ebp
  4190a2:	dec    ebx
  4190a3:	(bad)  
  4190a4:	rol    BYTE PTR [edi+0x2ff3fc69],1
  4190aa:	repnz inc ebx
  4190ac:	inc    ecx
  4190ad:	es pop eax
  4190af:	outs   dx,DWORD PTR ds:[esi]
  4190b0:	cmc    
  4190b1:	and    DWORD PTR [ecx+0x1d85cf26],esp
  4190b7:	mov    ebp,?
  4190b9:	xor    al,0x14
  4190bb:	hlt    
  4190bc:	pop    ebp
  4190bd:	xor    esp,DWORD PTR [ebx+0x7d4517af]
  4190c3:	cmp    ah,BYTE PTR [eax+0x3176e1bf]
  4190c9:	or     ebp,ebp
  4190cb:	retf   
  4190cc:	mov    edx,0x353bc859
  4190d1:	push   ecx
  4190d2:	dec    ecx
  4190d3:	pusha  
  4190d4:	mov    dl,0x58
  4190d6:	out    0x7d,eax
  4190d8:	sub    ebp,DWORD PTR [eax]
  4190da:	dec    ebp
  4190db:	mov    dl,0x8
  4190dd:	add    eax,0x4aaadf63
  4190e2:	inc    ebx
  4190e3:	imul   eax,DWORD PTR [eax],0xe30fcf81
  4190e9:	cmc    
  4190ea:	fcom   st(5)
  4190ec:	pop    ds
  4190ed:	jns    0x4190fe
  4190ef:	xor    eax,0x360fabc
  4190f4:	popa   
  4190f5:	inc    esi
  4190f6:	ror    BYTE PTR [ecx+0x9d8e15c],0x32
  4190fd:	js     0x4190db
  4190ff:	stos   DWORD PTR es:[edi],eax
  419100:	aam    0x8d
  419102:	and    edi,ecx
  419104:	or     al,0x10
  419106:	sbb    ecx,DWORD PTR [ebx-0x386d1b81]
  41910c:	cmp    cl,BYTE PTR [ecx]
  41910e:	push   edx
  41910f:	pop    ds
  419110:	in     al,dx
  419111:	sbb    DWORD PTR [ecx],0x6e1877a
  419117:	div    DWORD PTR [ebx+0x47b61e11]
  41911d:	inc    ecx
  41911e:	pop    es
  41911f:	inc    ebp
  419120:	call   0x8f34:0xe149fd83
  419127:	lock iret 
  419129:	push   0x53cdee42
  41912e:	push   ds
  41912f:	fiadd  WORD PTR [ecx+0x7b]
  419132:	inc    edi
  419133:	lds    ebp,FWORD PTR [eax+0x266ef9e8]
  419139:	xchg   edx,esi
  41913b:	lea    edi,[ebx+0x5b74c761]
  419141:	daa    
  419142:	lock xor DWORD PTR [ebp-0x57],edi
  419146:	out    0xe2,al
  419148:	xchg   ah,dh
  41914a:	mov    dh,0x4b
  41914c:	xchg   edx,eax
  41914d:	pop    ss
  41914e:	inc    ecx
  41914f:	ret    0x473a
  419152:	fsub   st(0),st
  419154:	xchg   edx,eax
  419155:	sub    eax,0x6c1ec8f3
  41915a:	xchg   esp,eax
  41915b:	mov    dl,0xdc
  41915d:	jae    0x419175
  41915f:	addr16 call 0xbf600a40
  419165:	or     BYTE PTR [ebx],dl
  419167:	and    edi,DWORD PTR [ebp-0x53]
  41916a:	push   0xffffff8f
  41916c:	mov    bl,0x38
  41916e:	popf   
  41916f:	xchg   esi,eax
  419170:	xor    eax,0x3e4d69a2
  419175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419176:	data16 xlat BYTE PTR ds:[ebx]
  419178:	mov    edx,0x4b6de11a
  41917d:	push   edx
  41917e:	xor    eax,ebp
  419180:	ret    
  419181:	xchg   edx,eax
  419182:	add    al,0x2e
  419184:	scas   al,BYTE PTR es:[edi]
  419185:	retf   0x912f
  419188:	rcr    DWORD PTR [ebx-0x45a89a98],cl
  41918e:	jae    0x4191b6
  419190:	and    al,0x2e
  419192:	int3   
  419193:	push   edi
  419194:	loopne 0x419160
  419196:	dec    eax
  419197:	fild   QWORD PTR [ebp+edi*2-0x6fc7f02]
  41919e:	fld    QWORD PTR [eax-0x69e5015e]
  4191a4:	fwait
  4191a5:	and    BYTE PTR ds:0x21588cbf,0xae
  4191ac:	jle    0x419150
  4191ae:	xchg   ecx,eax
  4191af:	int3   
  4191b0:	loop   0x4191ac
  4191b2:	jmp    0xb032:0xbea58af
  4191b9:	sbb    al,0xb5
  4191bb:	mov    dh,0x43
  4191bd:	nop
  4191be:	rcl    BYTE PTR [ebx+ecx*2-0x14797477],1
  4191c5:	lock mov al,ds:0x9902a068
  4191cb:	sub    ch,BYTE PTR ds:0xc62e5902
  4191d1:	mov    eax,0x9bd8b584
  4191d6:	fsubr  DWORD PTR [edx]
  4191d8:	imul   esi,esp,0xd00e40ca
  4191de:	xchg   ebx,eax
  4191df:	cmp    esp,DWORD PTR ds:[edx-0x71528c8b]
  4191e6:	cmp    al,0xc3
  4191e8:	push   ecx
  4191e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191ea:	mov    ebp,eax
  4191ec:	mov    ecx,0x1b61afa3
  4191f1:	dec    ebp
  4191f2:	xchg   ebp,eax
  4191f3:	ret    
  4191f4:	es in  eax,0x3
  4191f7:	dec    ebp
  4191f8:	aad    0x96
  4191fa:	loope  0x419185
  4191fc:	fdivr  st(2),st
  4191fe:	push   ss
  4191ff:	mul    DWORD PTR [edx-0x2d8c921c]
  419205:	pop    ecx
  419206:	xor    al,0xd
  419208:	pop    esi
  419209:	inc    edi
  41920a:	fist   WORD PTR [edx]
  41920c:	dec    ebp
  41920d:	int    0x87
  41920f:	mov    bl,0x39
  419211:	adc    BYTE PTR [ecx+0x21],0xe8
  419215:	mov    ah,0xee
  419217:	push   es
  419218:	das    
  419219:	in     eax,dx
  41921a:	cdq    
  41921b:	sub    al,0x31
  41921d:	iret   
  41921e:	aad    0xe
  419220:	ins    DWORD PTR es:[edi],dx
  419221:	push   esi
  419222:	mov    cl,0x69
  419224:	xchg   ebx,eax
  419225:	mov    ebp,0xf40a80d5
  41922a:	jecxz  0x41928c
  41922c:	aas    
  41922d:	cdq    
  41922e:	xor    al,0x31
  419230:	cwde   
  419231:	push   edx
  419232:	enter  0xc0a9,0xda
  419236:	icebp  
  419237:	cwde   
  419238:	inc    esi
  419239:	push   ebp
  41923a:	mov    edx,0x8a870eda
  41923f:	xchg   esi,eax
  419240:	push   ss
  419241:	and    eax,esp
  419243:	fisubr WORD PTR [ebx-0x3a2e6aad]
  419249:	dec    edi
  41924a:	xor    al,0x95
  41924c:	and    al,0xcc
  41924e:	nop
  41924f:	pop    edx
  419250:	out    0x30,eax
  419252:	scas   al,BYTE PTR es:[edi]
  419253:	xor    DWORD PTR [ebp-0x33],edi
  419256:	scas   eax,DWORD PTR es:[edi]
  419257:	mov    dl,ch
  419259:	test   eax,0x1280f954
  41925e:	daa    
  41925f:	xchg   edi,eax
  419260:	dec    edx
  419261:	or     DWORD PTR [di],eax
  419264:	mov    edi,0xd447cd61
  419269:	test   eax,0xc1b0862c
  41926e:	dec    ebx
  41926f:	pushf  
  419270:	icebp  
  419271:	mov    esi,0x26d3b648
  419276:	(bad)  
  419277:	sub    al,0xe2
  419279:	loopne 0x4192e3
  41927b:	mov    bl,BYTE PTR [esi+0xc422262]
  419281:	cs adc eax,0xfffffff5
  419285:	fimul  DWORD PTR [esi+0x4a]
  419288:	sub    al,0x63
  41928a:	or     esi,DWORD PTR [edx]
  41928c:	cmp    DWORD PTR [ecx-0x1cf80c41],esp
  419292:	mov    eax,0xc525b3f3
  419297:	js     0x4192cd
  419299:	and    eax,0x91bea06a
  41929e:	ins    BYTE PTR es:[edi],dx
  41929f:	mov    dl,0xa3
  4192a1:	leave  
  4192a2:	rcr    BYTE PTR [eax-0x5f],cl
  4192a5:	jno    0x4192ba
  4192a7:	out    0xce,al
  4192a9:	xlat   BYTE PTR ds:[ebx]
  4192aa:	fs jg  0x41924d
  4192ad:	fwait
  4192ae:	scas   al,BYTE PTR es:[edi]
  4192af:	enter  0xfd10,0xb7
  4192b3:	mov    dh,0x73
  4192b5:	add    BYTE PTR [edi+edx*4-0x18bc0623],cl
  4192bc:	jb     0x419302
  4192be:	mov    al,0xda
  4192c0:	loope  0x41925f
  4192c2:	retf   0xff64
  4192c5:	cld    
  4192c6:	cld    
  4192c7:	ret    0xed5b
  4192ca:	pop    es
  4192cb:	or     ebp,DWORD PTR [edx+0x42e0c5ac]
  4192d1:	pop    edi
  4192d2:	xor    al,0xc9
  4192d4:	xlat   BYTE PTR ds:[ebx]
  4192d5:	std    
  4192d6:	addr16 mov ecx,0x4eaadf46
  4192dc:	(bad)  [eax-0x40c39bb5]
  4192e2:	jl     0x419283
  4192e4:	push   edi
  4192e5:	adc    dh,BYTE PTR [ecx+edx*4]
  4192e8:	(bad)  
  4192e9:	pop    esp
  4192ea:	cdq    
  4192eb:	fcomp  QWORD PTR [ebp-0x8]
  4192ee:	or     eax,DWORD PTR [eax]
  4192f0:	add    BYTE PTR [eax],al
  4192f2:	inc    ebp
  4192f3:	push   cs
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x38575d81
  419300:	mov    BYTE PTR [ecx+0x10ff5],0xf5
  419307:	add    al,0x0
  419309:	add    BYTE PTR [edx+edi*1-0x79],cl
  41930d:	hlt    
  41930e:	leave  
  41930f:	inc    esp
  419310:	aad    0xec
  419312:	es addr16 mov ebp,0xc7e8ddb8
  419319:	lea    edi,[ebp+0x58fd9f0b]
  41931f:	rcl    esi,0x7f
  419322:	lock cmp DWORD PTR [ebp+0x39],0xffffff9b
  419327:	push   edx
  419328:	ror    DWORD PTR [esi+0x4c],1
  41932b:	mov    eax,ds:0x2b60491
  419330:	je     0x41936f
  419332:	call   0xe6a3:0x545254c0
  419339:	pop    ebp
  41933a:	es jne 0x4192e7
  41933d:	mov    ah,0xaf
  41933f:	dec    edx
  419340:	loop   0x4193a1
  419342:	lods   eax,DWORD PTR ds:[esi]
  419343:	push   cs
  419344:	xchg   esi,eax
  419345:	jmp    0x41931a
  419347:	adc    al,0x99
  419349:	data16 stos BYTE PTR es:[edi],al
  41934b:	xor    al,0x17
  41934d:	adc    BYTE PTR [esi+eiz*1+0x35],dl
  419351:	pop    ss
  419352:	jne    0x4192fd
  419354:	xchg   BYTE PTR [ecx-0xa],ch
  419357:	mov    ds:0x46d698c7,al
  41935c:	sti    
  41935d:	sbb    bh,al
  41935f:	adc    eax,0x26d43d51
  419364:	pop    ebp
  419365:	pop    ebp
  419366:	icebp  
  419367:	or     dh,dh
  419369:	mov    ah,0x84
  41936b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41936d:	mov    DWORD PTR [eax+0x3f],ebx
  419370:	(bad)  
  419371:	push   esi
  419372:	prefetchw (bad)
  419373:	or     eax,0x2a304bce
  419378:	in     eax,0xb3
  41937a:	mov    dh,0x10
  41937c:	in     al,dx
  41937d:	out    0xcb,eax
  41937f:	pushf  
  419380:	inc    ebp
  419381:	inc    ecx
  419382:	cmp    ebp,edx
  419384:	call   0x221:0xad8281aa
  41938b:	or     eax,DWORD PTR [ecx]
  41938d:	sub    ebp,DWORD PTR [ecx]
  41938f:	push   ds
  419390:	frstor fs:[edx+ecx*2]
  419394:	lea    esp,[ebx+0x234cb22]
  41939a:	lea    ecx,[esi+0x26f9e698]
  4193a0:	add    al,0xf4
  4193a2:	push   0x2
  4193a4:	jge    0x419344
  4193a6:	stos   BYTE PTR es:[edi],al
  4193a7:	pop    edi
  4193a8:	dec    edi
  4193a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193aa:	sbb    bl,dl
  4193ac:	loopne 0x4193ac
  4193ae:	imul   cl
  4193b0:	ja     0x4193a6
  4193b2:	outs   dx,DWORD PTR ds:[esi]
  4193b3:	xchg   esp,eax
  4193b4:	and    DWORD PTR [edx],0x75
  4193b7:	out    dx,eax
  4193b8:	xchg   esp,eax
  4193b9:	mov    ds:0x9a91048b,al
  4193be:	shl    eax,cl
  4193c0:	call   FWORD PTR [ebp+0x1a939712]
  4193c6:	mov    eax,ds:0x2284ee0d
  4193cb:	out    dx,al
  4193cc:	rcl    BYTE PTR [edx+0x79a9776e],cl
  4193d2:	xchg   ecx,eax
  4193d3:	push   esi
  4193d4:	(bad)  
  4193d5:	ins    BYTE PTR es:[edi],dx
  4193d6:	(bad)  
  4193d7:	jle    0x41943a
  4193d9:	test   al,0x18
  4193db:	(bad)  
  4193dc:	in     eax,dx
  4193dd:	ja     0x419418
  4193df:	cdq    
  4193e0:	sub    ah,BYTE PTR [eax+0x20]
  4193e3:	xchg   ebx,eax
  4193e4:	in     eax,dx
  4193e5:	dec    esi
  4193e6:	push   ebp
  4193e7:	pop    ds
  4193e8:	inc    edi
  4193e9:	push   cs
  4193ea:	ret    
  4193eb:	sahf   
  4193ec:	es mov ebp,0x10735b4a
  4193f2:	sbb    DWORD PTR ds:0xc2406c3b,0xffffffa8
  4193f9:	mov    ch,0x5e
  4193fb:	fild   QWORD PTR [ecx+edi*1]
  4193fe:	push   0xffffff9a
  419400:	cmp    ch,dl
  419402:	lods   eax,DWORD PTR ds:[esi]
  419403:	sbb    ah,ch
  419405:	aad    0x16
  419407:	dec    esi
  419408:	or     al,0x88
  41940a:	stc    
  41940b:	jb     0x4193fd
  41940d:	ss push ss
  41940f:	xor    ebp,edx
  419411:	and    DWORD PTR [ebx],esi
  419413:	and    BYTE PTR [eax+0x59],0x52
  419417:	in     eax,dx
  419418:	mov    BYTE PTR [ebx-0x749e47c0],bh
  41941e:	jg     0x419437
  419420:	push   esp
  419421:	mov    esp,fs
  419423:	mov    ch,0x3d
  419425:	jmp    0xa865:0x74e34bba
  41942c:	pop    esp
  41942d:	add    eax,0x8ae4181d
  419432:	jg     0x4193e2
  419434:	sbb    eax,0x517d763
  419439:	sub    eax,0x32abe355
  41943e:	imul   edx,DWORD PTR [ebx-0xa290f40],0x7
  419445:	(bad)  
  419446:	jb     0x41949e
  419448:	fbld   TBYTE PTR [esi]
  41944a:	or     al,ah
  41944c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41944d:	(bad)  
  41944e:	stc    
  41944f:	inc    edi
  419450:	push   0x3b
  419452:	mov    bl,BYTE PTR [eax]
  419454:	sub    bl,BYTE PTR [eax]
  419456:	data16 movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  419459:	outs   dx,BYTE PTR ds:[esi]
  41945a:	sbb    eax,0xc6d58a74
  41945f:	(bad)  
  419460:	jne    0x41945f
  419462:	cwde   
  419463:	aaa    
  419464:	addr16 gs hlt 
  419467:	pop    ds
  419468:	mov    ah,0x3d
  41946a:	daa    
  41946b:	test   al,0x2c
  41946d:	sbb    DWORD PTR [edx+0x67],eax
  419470:	cmp    al,0xab
  419472:	out    dx,al
  419473:	pop    edi
  419474:	jb     0x4194b9
  419476:	vcvtsd2ss xmm6,xmm5,QWORD PTR [edx+ecx*2-0x38d08d3a]
  41947f:	and    BYTE PTR [ebx],al
  419481:	imul   eax,DWORD PTR [esi-0x795c10a6],0xffffffea
  419488:	or     edi,esi
  41948a:	jg     0x41947e
  41948c:	xor    ebx,DWORD PTR ds:[ebp-0x490aeab1]
  419493:	fs js  0x41946d
  419496:	mov    ebp,0x1cf9dd00
  41949b:	inc    esi
  41949c:	call   ebx
  41949e:	fmul   DWORD PTR [ecx+0x15]
  4194a1:	dec    ecx
  4194a2:	sub    BYTE PTR [esi],cl
  4194a4:	into   
  4194a5:	(bad)
  4194a8:	add    esi,DWORD PTR [ecx+ecx*4-0x172941cd]
  4194af:	mov    al,BYTE PTR [eax]
  4194b1:	lods   al,BYTE PTR ds:[esi]
  4194b2:	lea    ebp,[esi]
  4194b4:	cwde   
  4194b5:	inc    eax
  4194b6:	push   ss
  4194b7:	pushf  
  4194b8:	outs   dx,DWORD PTR ds:[esi]
  4194b9:	repz adc DWORD PTR [edi],edx
  4194bc:	retf   0x9823
  4194bf:	data16 test al,0x36
  4194c2:	mov    ds:0x2a3e75fd,al
  4194c7:	enter  0x628b,0xb7
  4194cb:	mov    eax,0xfeb7b9ea
  4194d0:	jns    0x4194a5
  4194d2:	lds    ecx,FWORD PTR [ebp+0x7895c153]
  4194d8:	ins    BYTE PTR es:[edi],dx
  4194d9:	dec    edi
  4194da:	push   edi
  4194db:	adc    al,BYTE PTR [edx+eiz*4]
  4194de:	popf   
  4194df:	xor    edi,DWORD PTR [esi]
  4194e1:	sbb    al,0x7
  4194e3:	fs mov bh,0xf
  4194e6:	and    al,BYTE PTR [edx-0x5f001bfd]
  4194ec:	cmp    esp,edi
  4194ee:	and    DWORD PTR ds:0xce60acaf,0xeff8cb5c
  4194f8:	loopne 0x419574
  4194fa:	(bad)  
  4194fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194fc:	fwait
  4194fd:	test   al,0xcd
  4194ff:	dec    eax
  419500:	jbe    0x4194a8
  419502:	(bad)  
  419503:	jmp    0x41952e
  419505:	in     eax,dx
  419506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419507:	adc    eax,0x4de1d2d2
  41950c:	popa   
  41950d:	loopne 0x4194c5
  41950f:	inc    esp
  419510:	in     eax,0x6d
  419512:	xchg   ebx,eax
  419513:	mov    dh,0x97
  419515:	jle    0x419528
  419517:	mov    cl,0x92
  419519:	dec    ecx
  41951a:	aam    0x18
  41951c:	mov    dl,0x15
  41951e:	jmp    0xefc45b5
  419523:	sub    bh,BYTE PTR [eax+0x2e67bad8]
  419529:	pop    ss
  41952a:	dec    ebp
  41952b:	das    
  41952c:	neg    DWORD PTR ds:0xd5f4db4c
  419532:	lock in al,0x12
  419535:	jl     0x419565
  419537:	stos   BYTE PTR es:[edi],al
  419538:	push   ebx
  419539:	cli    
  41953a:	out    0x38,al
  41953c:	rcl    DWORD PTR [edx],0x2c
  41953f:	cmp    esp,DWORD PTR [edi+0x3d]
  419542:	fistp  WORD PTR [eax]
  419544:	sbb    dh,BYTE PTR [edi+0x46]
  419547:	jp     0x4194c9
  419549:	mov    ch,0x4d
  41954b:	out    0x78,al
  41954d:	rcr    BYTE PTR [esi],0xe4
  419550:	nop
  419551:	ret    
  419552:	adc    BYTE PTR [ebx-0x5bd5b213],al
  419558:	push   ss
  419559:	test   BYTE PTR [ecx-0x2e],al
  41955c:	cs mov esp,0x419b1e10
  419562:	call   0x881d:0x2a5b2aad
  419569:	jbe    0x4195c7
  41956b:	(bad)  
  41956c:	call   0xe777ea7e
  419571:	fxam   
  419573:	mov    ch,0xae
  419575:	es jns 0x41955d
  419578:	pop    esi
  419579:	outs   dx,DWORD PTR ds:[esi]
  41957a:	lods   al,BYTE PTR ds:[esi]
  41957b:	outs   dx,DWORD PTR ds:[esi]
  41957c:	(bad)  
  41957d:	data16 mov cs,WORD PTR [eax]
  419580:	push   0x31
  419582:	push   ebx
  419583:	loop   0x419521
  419585:	fisttp DWORD PTR [eax+edx*2+0x7da597c3]
  41958c:	or     al,0x28
  41958e:	xchg   edx,eax
  41958f:	add    eax,0xa92d4600
  419594:	push   0xf0c60e9e
  419599:	sub    DWORD PTR ds:0x89bb0893,0x9409f609
  4195a3:	lahf   
  4195a4:	test   al,0xeb
  4195a6:	rcr    bh,1
  4195a8:	cdq    
  4195a9:	hlt    
  4195aa:	test   ax,0x72f0
  4195ae:	dec    esi
  4195af:	int3   
  4195b0:	mov    eax,DWORD PTR [edi-0x53]
  4195b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195b4:	inc    eax
  4195b5:	rol    BYTE PTR [ebx+0x1bae2fd9],0xd3
  4195bc:	frstor [ebp+ebx*8-0x5c]
  4195c0:	sub    edx,0x44
  4195c3:	mov    BYTE PTR ds:0xbc9e6664,bl
  4195c9:	imul   eax,DWORD PTR [ebp-0x30cd3ca9],0x13
  4195d0:	sbb    bh,dl
  4195d2:	repz or BYTE PTR [edx],al
  4195d5:	adc    ebp,DWORD PTR [edx-0x42734f75]
  4195db:	loopne 0x419641
  4195dd:	int3   
  4195de:	xor    al,0xc
  4195e0:	cdq    
  4195e1:	and    al,0x16
  4195e3:	mov    ebp,0x1c454eec
  4195e8:	sbb    eax,eax
  4195ea:	push   ebp
  4195eb:	in     al,0x4e
  4195ed:	jbe    0x419585
  4195ef:	jmp    0x395a39c3
  4195f4:	xor    BYTE PTR [ebx],ch
  4195f6:	xchg   edx,eax
  4195f7:	push   0x23
  4195f9:	ins    BYTE PTR es:[edi],dx
  4195fa:	or     eax,ebx
  4195fc:	(bad)  
  4195fd:	jb     0x4195e7
  4195ff:	clc    
  419600:	mov    al,ds:0xc693ada
  419605:	cli    
  419606:	les    ebx,FWORD PTR [ecx]
  419608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419609:	xchg   edx,eax
  41960a:	fsubr  DWORD PTR [ecx+ecx*1]
  41960d:	mov    ah,0xde
  41960f:	stos   BYTE PTR es:[edi],al
  419610:	push   ss
  419611:	xchg   esp,eax
  419612:	jnp    0x41965f
  419614:	stos   BYTE PTR es:[edi],al
  419615:	and    DWORD PTR [ebx-0x1008785d],esp
  41961b:	fwait
  41961c:	leave  
  41961d:	fcom   QWORD PTR [esi+0x65f02376]
  419623:	jno    0x4195d4
  419625:	jl     0x4196a2
  419627:	enter  0x5229,0xfe
  41962b:	push   0xffffffd4
  41962d:	add    DWORD PTR [ebx-0x3a3bb6de],ebx
  419633:	js     0x419684
  419635:	sub    al,0x36
  419637:	lahf   
  419638:	fist   DWORD PTR [edx+ecx*1]
  41963b:	ja     0x419652
  41963d:	fmul   st(6),st
  41963f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419640:	sub    ah,BYTE PTR [ebp-0x398e82f0]
  419646:	pop    esp
  419647:	bound  edi,QWORD PTR [esi+eax*1-0x74c8cc22]
  41964e:	and    BYTE PTR [ecx],0xd8
  419651:	mov    dl,0x8a
  419653:	xlat   BYTE PTR ds:[ebx]
  419654:	retf   
  419655:	fld    TBYTE PTR [ebx-0x20]
  419658:	shl    BYTE PTR [esi],0xd4
  41965b:	jge    0x419678
  41965d:	call   0x1bb2:0x5f3d4094
  419664:	sub    al,BYTE PTR [ebp-0x71c4f3b2]
  41966a:	pusha  
  41966b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41966d:	push   esi
  41966e:	rcr    DWORD PTR [ebx],cl
  419670:	pushf  
  419671:	into   
  419672:	js     0x41963a
  419674:	test   BYTE PTR ds:0x9c37b88d,cl
  41967a:	mov    edi,0x378e12c5
  41967f:	cli    
  419680:	jae    0x4196f4
  419682:	inc    esi
  419683:	mov    bl,0x5c
  419685:	sbb    eax,0x42d545c5
  41968a:	pop    es
  41968b:	(bad)  
  41968c:	pop    edi
  41968d:	inc    ecx
  41968e:	sub    BYTE PTR [edx+0x14],0xaf
  419692:	imul   ecx,DWORD PTR [ebx],0xffffff90
  419695:	cmp    eax,0x2d59adbc
  41969a:	les    ecx,FWORD PTR [ebx+0x5]
  41969d:	cwde   
  41969e:	and    eax,0xce6fc112
  4196a3:	in     eax,dx
  4196a4:	nop
  4196a5:	dec    edi
  4196a6:	repnz iret 
  4196a8:	xchg   ebx,eax
  4196a9:	add    DWORD PTR [ebx],0x29f3548e
  4196af:	ret    
  4196b0:	and    esp,ebx
  4196b2:	inc    eax
  4196b3:	test   al,0x54
  4196b5:	ins    BYTE PTR es:[edi],dx
  4196b6:	mov    edx,0xe3a51251
  4196bb:	cmp    dh,BYTE PTR [edi]
  4196bd:	in     al,0x34
  4196bf:	xchg   ecx,eax
  4196c0:	mov    ss,ecx
  4196c2:	out    dx,eax
  4196c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196c4:	add    dh,ah
  4196c6:	in     al,0x6a
  4196c8:	icebp  
  4196c9:	push   ecx
  4196ca:	je     0x41965a
  4196cc:	sbb    ecx,DWORD PTR [ebx]
  4196ce:	hlt    
  4196cf:	fwait
  4196d0:	mov    ecx,0x65f34a07
  4196d5:	stos   BYTE PTR es:[edi],al
  4196d6:	push   edx
  4196d7:	loopne 0x41971d
  4196d9:	js     0x4196ef
  4196db:	sbb    eax,0x4e84a28a
  4196e0:	add    ecx,eax
  4196e2:	adc    dl,BYTE PTR [ebx-0x2]
  4196e5:	(bad)  
  4196e6:	call   0x546d7cb7
  4196eb:	stos   DWORD PTR es:[edi],eax
  4196ec:	cmp    DWORD PTR ds:0x6df18c81,ecx
  4196f2:	test   eax,0xeaba8706
  4196f7:	iret   
  4196f8:	jae    0x41967e
  4196fa:	mov    ds:0xd5ff62e2,al
  4196ff:	adc    DWORD PTR [eax+0x65],eax
  419702:	or     BYTE PTR ds:0xff69c7b8,dh
  419708:	adc    eax,0x910ade59
  41970d:	mov    esp,0x49ffaa14
  419712:	dec    BYTE PTR [edi-0x5b]
  419715:	inc    ecx
  419716:	dec    esp
  419717:	les    edx,FWORD PTR [edx]
  419719:	inc    ecx
  41971a:	cld    
  41971b:	xchg   edx,eax
  41971c:	sbb    edx,DWORD PTR ds:0x93255238
  419722:	push   eax
  419723:	add    al,0xb4
  419725:	inc    esp
  419726:	out    dx,eax
  419727:	or     bh,cl
  419729:	jle    0x4196fa
  41972b:	clc    
  41972c:	fiadd  WORD PTR [edx]
  41972e:	icebp  
  41972f:	popa   
  419730:	mov    WORD PTR [eax+0x76bcf903],ds
  419736:	into   
  419737:	lods   eax,DWORD PTR ds:[esi]
  419738:	xchg   DWORD PTR ds:[ecx],ebx
  41973b:	out    dx,al
  41973c:	cdq    
  41973d:	adc    esp,DWORD PTR [ebp-0x31]
  419740:	pop    ebx
  419741:	or     DWORD PTR [ebx+0x7bd01660],ebp
  419747:	push   eax
  419748:	inc    esi
  419749:	pop    ecx
  41974a:	std    
  41974b:	cmp    ch,BYTE PTR [edi+0x572e5310]
  419751:	je     0x4197ad
  419753:	(bad)  
  419754:	scas   al,BYTE PTR es:[edi]
  419755:	sub    DWORD PTR [ecx+0x1],edi
  419758:	push   0xc48f2f81
  41975d:	ret    0xb98
  419760:	mov    ds:0x9d85ac5b,al
  419765:	jae    0x419709
  419767:	or     ecx,DWORD PTR [ecx-0x2f]
  41976a:	scas   eax,DWORD PTR es:[edi]
  41976b:	mov    bh,BYTE PTR [edi]
  41976d:	jge    0x4197d6
  41976f:	test   al,0x65
  419771:	dec    ebp
  419772:	jg     0x4197dc
  419774:	push   es
  419775:	or     al,0xc3
  419777:	inc    esi
  419778:	and    BYTE PTR [edx],ch
  41977a:	xchg   esi,eax
  41977b:	inc    esp
  41977c:	jecxz  0x4197ae
  41977e:	es jnp 0x419767
  419781:	test   ecx,edi
  419783:	dec    eax
  419784:	icebp  
  419785:	push   ss
  419786:	dec    esi
  419787:	mov    dh,0x0
  419789:	icebp  
  41978a:	xlat   BYTE PTR ds:[ebx]
  41978b:	rcl    BYTE PTR [ebp-0x2aaf732b],1
  419791:	test   DWORD PTR [eax],esi
  419793:	mov    esp,0x2061e75b
  419798:	mov    BYTE PTR [edi],0xb7
  41979b:	daa    
  41979c:	cli    
  41979d:	jg     0x4197a2
  41979f:	dec    esi
  4197a0:	sbb    BYTE PTR [ebx-0x12],ah
  4197a3:	push   esp
  4197a4:	aam    0xca
  4197a6:	mov    ebx,0xaadc4ae3
  4197ab:	adc    eax,0xac04eb5d
  4197b0:	aad    0xb6
  4197b2:	call   DWORD PTR [ebx]
  4197b4:	push   ebx
  4197b5:	mov    ss,WORD PTR [eax]
  4197b7:	fdivr  QWORD PTR [eax]
  4197b9:	pop    ss
  4197ba:	jmp    0xdc45:0x9672bb38
  4197c1:	push   ebx
  4197c2:	fild   WORD PTR [ebx+0x72]
  4197c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197c6:	bound  edx,QWORD PTR [edx+eiz*2]
  4197c9:	sahf   
  4197ca:	xor    DWORD PTR [eax],eax
  4197cc:	lods   al,BYTE PTR ds:[esi]
  4197cd:	(bad)  
  4197ce:	cmp    dl,bl
  4197d0:	add    edx,ebx
  4197d2:	push   eax
  4197d3:	mov    ebx,DWORD PTR [ecx+0x6f]
  4197d6:	stos   DWORD PTR es:[edi],eax
  4197d7:	add    DWORD PTR [edx-0x3b11cedd],ebx
  4197dd:	cmp    BYTE PTR [edi-0x397c810f],al
  4197e3:	cmp    DWORD PTR [ebx-0x7b7f6854],0x981721f6
  4197ed:	xlat   BYTE PTR ds:[ebx]
  4197ee:	push   eax
  4197ef:	sbb    bl,0xb6
  4197f2:	sbb    eax,DWORD PTR [edx+0x25af8cb9]
  4197f8:	icebp  
  4197f9:	dec    ebx
  4197fa:	hlt    
  4197fb:	int3   
  4197fc:	push   0xc726
  419801:	add    BYTE PTR [ecx+ebp*8],dl
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	rcr    BYTE PTR [ecx-0x33],1
  419810:	pop    ebx
  419811:	(bad)  
  419812:	jmp    0x4:0xf5000114
  419819:	add    BYTE PTR [ecx],ah
  41981b:	lods   al,BYTE PTR ds:[esi]
  41981c:	adc    al,0xbf
  41981e:	push   edi
  41981f:	sti    
  419820:	stos   DWORD PTR es:[edi],eax
  419821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419822:	and    bl,al
  419824:	pop    ss
  419825:	aas    
  419826:	xchg   esp,eax
  419827:	enter  0x56b2,0xb2
  41982b:	cmp    edi,edx
  41982d:	adc    DWORD PTR [edx],ebx
  41982f:	mov    edi,0x687f82b0
  419834:	mov    dh,0x26
  419836:	lahf   
  419837:	mov    dh,0xc2
  419839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41983a:	xchg   BYTE PTR [ebx+0x6d],dh
  41983d:	cmp    eax,0xa98c648d
  419842:	dec    ebx
  419843:	int3   
  419844:	inc    ebp
  419845:	xchg   ebx,eax
  419846:	test   al,0x6c
  419848:	lods   al,BYTE PTR ds:[esi]
  419849:	rol    DWORD PTR [ebx],cl
  41984b:	(bad)  
  41984c:	pusha  
  41984d:	mov    BYTE PTR [esi],bl
  41984f:	fidivr WORD PTR [esi-0x60]
  419852:	test   BYTE PTR [edx-0x2f],ch
  419855:	fdiv   QWORD PTR [ecx+ecx*8-0x65231d0e]
  41985c:	sub    al,BYTE PTR [ebx+0x61]
  41985f:	mov    WORD PTR [esi],?
  419861:	push   eax
  419862:	sbb    esp,DWORD PTR [edx-0x643f8115]
  419868:	sar    BYTE PTR [ebx],cl
  41986a:	popa   
  41986b:	ins    BYTE PTR es:[edi],dx
  41986c:	sbb    eax,0x2a33e71f
  419871:	adc    edi,DWORD PTR [ecx-0x63b4f6da]
  419877:	outs   dx,BYTE PTR ds:[esi]
  419878:	mov    ebx,0x90b97aea
  41987d:	scas   al,BYTE PTR es:[edi]
  41987e:	lock jmp 0x4198ef
  419881:	ficom  DWORD PTR [ecx]
  419883:	pop    ds
  419884:	and    DWORD PTR [edx+0x6403673c],ebp
  41988a:	stos   DWORD PTR es:[edi],eax
  41988b:	xchg   edx,eax
  41988c:	mov    ah,0x49
  41988e:	jp     0x419899
  419890:	adc    cl,0x64
  419893:	in     al,dx
  419894:	sub    bh,BYTE PTR [ebx]
  419896:	iret   
  419897:	dec    ebx
  419898:	popf   
  419899:	dec    ebp
  41989a:	xchg   ebx,eax
  41989b:	xor    eax,0x657db35d
  4198a0:	mov    dl,0x13
  4198a2:	inc    ecx
  4198a3:	shl    DWORD PTR [ebx],cl
  4198a5:	push   es
  4198a6:	psubd  mm2,QWORD PTR [ebp+0x11fb6aad]
  4198ad:	sub    cl,BYTE PTR [ebx+0x707b6372]
  4198b3:	call   0x944b:0x864d2ebb
  4198ba:	test   eax,0xb04d2615
  4198bf:	ins    DWORD PTR es:[edi],dx
  4198c0:	xor    eax,0x9e17259b
  4198c5:	int3   
  4198c6:	ins    DWORD PTR es:[edi],dx
  4198c7:	or     DWORD PTR [ebp+edx*8-0x54b5dc40],0xffffff87
  4198cf:	les    esi,FWORD PTR [edi-0x408ccaa2]
  4198d5:	call   0xbcb5d9df
  4198da:	cwde   
  4198db:	adc    bl,BYTE PTR [ebx-0x5a045c81]
  4198e1:	repz and dh,BYTE PTR [eax-0x560446d3]
  4198e8:	cld    
  4198e9:	cmp    al,0x56
  4198eb:	and    DWORD PTR [edi+0x24],0x48dff2b9
  4198f2:	imul   ebx,DWORD PTR [esi],0x6ff70642
  4198f8:	pop    edx
  4198f9:	adc    edx,DWORD PTR [ebx]
  4198fb:	fcmovnu st,st(2)
  4198fd:	mov    eax,0x25e13711
  419902:	psrld  mm5,QWORD PTR [eax+0x1a054b]
  419909:	test   BYTE PTR [eax-0x44],al
  41990c:	jbe    0x4198a7
  41990e:	mov    edx,0x6e824b23
  419913:	xchg   edx,eax
  419914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419915:	dec    ebp
  419916:	inc    esi
  419917:	xor    al,0x77
  419919:	fiadd  DWORD PTR [edx+0xa]
  41991c:	mov    WORD PTR [ebp+0x38],cs
  41991f:	mov    ebp,0x477c4042
  419924:	mov    ebp,0x37e8bdf8
  419929:	lods   al,BYTE PTR ds:[esi]
  41992a:	xchg   BYTE PTR [eax],dh
  41992c:	and    eax,0xf426eb9f
  419931:	ret    0xee48
  419934:	(bad)  
  419935:	xor    bl,BYTE PTR [eax+0x90a803]
  41993b:	push   0x107a1151
  419940:	adc    BYTE PTR [eax],0xc9
  419943:	je     0x4198f2
  419945:	pop    ebp
  419946:	fdivr  QWORD PTR [edx-0x1d]
  419949:	pop    ds
  41994a:	xchg   edi,eax
  41994b:	mov    ecx,0xad9c2d3a
  419950:	(bad)  
  419951:	gs dec edx
  419953:	fldenv [esi]
  419955:	adc    bh,BYTE PTR [edi]
  419957:	or     bl,BYTE PTR [ecx]
  419959:	jl     0x4198ef
  41995b:	cwde   
  41995c:	push   esp
  41995d:	loopne 0x419999
  41995f:	loopne 0x419976
  419961:	pop    ecx
  419962:	sub    ch,0x1d
  419965:	cmp    DWORD PTR [edx-0xa],ebp
  419968:	into   
  419969:	stos   BYTE PTR es:[edi],al
  41996a:	outs   dx,BYTE PTR ds:[esi]
  41996b:	dec    edi
  41996c:	jmp    0xc6d1de10
  419971:	adc    BYTE PTR [edi],bl
  419973:	leave  
  419974:	test   BYTE PTR [ecx-0x4],ah
  419977:	rcl    DWORD PTR [esi+0x58f61b56],1
  41997d:	hlt    
  41997e:	push   ebx
  41997f:	call   0x78a7:0x46279ded
  419986:	sahf   
  419987:	std    
  419988:	lock mov eax,ds:0x643c4e54
  41998e:	adc    ebp,DWORD PTR [edi+0x24]
  419991:	imul   ebx,DWORD PTR [ebx-0x49],0x202105e
  419998:	lahf   
  419999:	gs pop ecx
  41999b:	jle    0x419963
  41999d:	push   eax
  41999e:	xor    eax,0x630abbd3
  4199a3:	and    esi,DWORD PTR ds:0x37a14cce
  4199a9:	mov    ebx,0xd06e83a5
  4199ae:	inc    esi
  4199af:	(bad)  
  4199b0:	ret    
  4199b1:	cmp    al,0x2e
  4199b3:	stc    
  4199b4:	(bad)  
  4199b5:	add    ah,al
  4199b7:	es or  al,0x68
  4199ba:	xchg   ebx,eax
  4199bb:	mov    BYTE PTR [edx-0x28],ah
  4199be:	fdivr  st(5),st
  4199c0:	outs   dx,DWORD PTR ds:[esi]
  4199c1:	fsubr  QWORD PTR [ebp+edx*4-0x676875dd]
  4199c8:	adc    edi,ebp
  4199ca:	jl     0x4199be
  4199cc:	cmp    esi,DWORD PTR [edi+edi*2-0x4a]
  4199d0:	mov    al,0x66
  4199d2:	scas   al,BYTE PTR es:[edi]
  4199d3:	mov    DWORD PTR [edi+0x10ddaea2],eax
  4199d9:	add    bl,BYTE PTR [edi-0x26bec9ee]
  4199df:	xchg   ebx,eax
  4199e0:	mov    ebx,0xd7a53d34
  4199e5:	cli    
  4199e6:	xchg   ecx,eax
  4199e7:	pop    ss
  4199e8:	retf   
  4199e9:	ret    0x6e3d
  4199ec:	mov    ecx,ebp
  4199ee:	mov    WORD PTR [ebx+0x5c],ds
  4199f1:	sahf   
  4199f2:	nop
  4199f3:	inc    ecx
  4199f4:	sbb    cl,BYTE PTR [ecx]
  4199f6:	stc    
  4199f7:	push   ecx
  4199f8:	addr16 mov al,0x23
  4199fb:	sub    eax,0x5fa68eb7
  419a00:	dec    ebx
  419a01:	fwait
  419a02:	ins    DWORD PTR es:[edi],dx
  419a03:	popf   
  419a04:	(bad)  
  419a05:	jge    0x4199b2
  419a07:	mov    ecx,0x16f258d6
  419a0c:	push   cs
  419a0d:	je     0x4199f5
  419a0f:	adc    al,0x43
  419a11:	dec    esi
  419a12:	mov    edi,0x31ac2c29
  419a17:	stos   BYTE PTR es:[edi],al
  419a18:	xor    bl,BYTE PTR [edi+0x2]
  419a1b:	adc    eax,DWORD PTR [ebx]
  419a1d:	clc    
  419a1e:	dec    edx
  419a1f:	in     al,0xde
  419a21:	mov    ch,0x7
  419a23:	pop    eax
  419a24:	std    
  419a25:	cmp    bl,BYTE PTR [edx]
  419a27:	jmp    0x4f9934aa
  419a2c:	push   ecx
  419a2d:	adc    eax,0x91fcea04
  419a32:	adc    edi,esi
  419a34:	shr    DWORD PTR [eax+0x47d26bdc],cl
  419a3a:	add    DWORD PTR [esi+0x5a],esp
  419a3d:	add    eax,0x46252bf6
  419a42:	inc    ebx
  419a43:	jle    0x4199d1
  419a45:	or     eax,0x103999b2
  419a4a:	xchg   BYTE PTR [edi],ah
  419a4c:	dec    esi
  419a4d:	sub    al,0x79
  419a4f:	pushf  
  419a50:	inc    esp
  419a51:	jle    0x419a52
  419a53:	mov    ds:0xc0fe9c17,eax
  419a58:	jno    0x419a0b
  419a5a:	mov    al,ds:0xd0abc4ec
  419a5f:	pop    ds
  419a60:	add    DWORD PTR [eax],edx
  419a62:	outs   dx,BYTE PTR ds:[esi]
  419a63:	jle    0x419a15
  419a65:	pop    edi
  419a66:	cmp    eax,edi
  419a68:	sbb    DWORD PTR [edi],esi
  419a6a:	scas   eax,DWORD PTR es:[edi]
  419a6b:	push   ds
  419a6c:	push   esi
  419a6d:	add    bh,cl
  419a6f:	pop    ds
  419a70:	push   0xba38805d
  419a75:	les    edx,FWORD PTR [edi+ebx*8-0x66006433]
  419a7c:	add    ebp,DWORD PTR [ebp+0x68]
  419a7f:	repnz hlt 
  419a81:	cwde   
  419a82:	ja     0x419af1
  419a84:	in     eax,dx
  419a85:	aas    
  419a86:	aam    0x9a
  419a88:	in     eax,dx
  419a89:	jmp    0x2dffcd62
  419a8e:	repnz into 
  419a90:	add    ah,ch
  419a92:	loopne 0x419a8b
  419a94:	std    
  419a95:	test   al,0x8a
  419a97:	or     ecx,DWORD PTR fs:[eax]
  419a9a:	jbe    0x419aea
  419a9c:	hlt    
  419a9d:	add    eax,0x781dd94e
  419aa2:	nop
  419aa3:	std    
  419aa4:	jmp    0xe256a5a7
  419aa9:	adc    ebp,DWORD PTR [esi-0x4f0b5467]
  419aaf:	cmp    BYTE PTR [edi],dl
  419ab1:	retf   
  419ab2:	in     eax,0x8
  419ab4:	repnz mov bh,0xca
  419ab7:	popf   
  419ab8:	inc    esp
  419ab9:	ja     0x419a78
  419abb:	add    al,0x60
  419abd:	bnd jne 0x419a5d
  419ac0:	xor    al,0x66
  419ac2:	push   ebp
  419ac3:	push   0xffffffc7
  419ac5:	ret    
  419ac6:	arpl   WORD PTR ds:0xb6bfbea1,di
  419acc:	jns    0x419aeb
  419ace:	jne    0x419ae7
  419ad0:	das    
  419ad1:	rcl    BYTE PTR [esp+edx*1-0x38],cl
  419ad5:	sbb    bl,BYTE PTR [ebx]
  419ad7:	adc    DWORD PTR [ebp-0x103f311],esp
  419add:	pop    ss
  419ade:	xor    DWORD PTR [esi+0x3e],ecx
  419ae1:	icebp  
  419ae2:	sbb    DWORD PTR [ebp+0x331ec7c1],edi
  419ae8:	arpl   WORD PTR ds:0x4b533d0e,bx
  419aee:	and    eax,0x8833e7d5
  419af3:	dec    DWORD PTR [esi+0xd2ceee1]
  419af9:	cmp    bh,BYTE PTR [eax]
  419afb:	jae    0x419a7f
  419afd:	mov    ebp,0xd6f84173
  419b02:	clc    
  419b03:	cmp    dl,dh
  419b05:	inc    ebp
  419b06:	imul   ecx,DWORD PTR [edx-0x7d],0x7910c639
  419b0d:	(bad)  
  419b0e:	mov    ebp,0x7bac646d
  419b13:	sbb    al,0xac
  419b15:	stos   DWORD PTR es:[edi],eax
  419b16:	test   DWORD PTR [ebp-0x74],ebx
  419b19:	xchg   edi,eax
  419b1a:	dec    edx
  419b1b:	pop    esp
  419b1c:	retf   0x77ce
  419b1f:	iret   
  419b20:	xor    ah,bh
  419b22:	and    DWORD PTR [eax-0x77d67f32],0x89dccae5
  419b2c:	or     BYTE PTR [ebx-0x5c],al
  419b2f:	pop    ebx
  419b30:	into   
  419b31:	jns    0x419b2c
  419b33:	lea    esp,[ebx+ebp*2]
  419b36:	and    eax,DWORD PTR [ebp-0x2736c45a]
  419b3c:	rol    BYTE PTR [ecx],cl
  419b3e:	outs   dx,DWORD PTR ds:[esi]
  419b3f:	jmp    0x419bab
  419b41:	lods   eax,DWORD PTR ds:[esi]
  419b42:	in     al,0x52
  419b44:	pushf  
  419b45:	repnz cmc 
  419b47:	outs   dx,BYTE PTR ds:[esi]
  419b48:	lahf   
  419b49:	pop    ebp
  419b4a:	daa    
  419b4b:	icebp  
  419b4c:	jb     0x419ada
  419b4e:	push   ecx
  419b4f:	outs   dx,DWORD PTR ds:[esi]
  419b50:	and    al,0xbb
  419b52:	pop    esi
  419b53:	dec    ebp
  419b54:	push   edx
  419b55:	jg     0x419bd2
  419b57:	inc    eax
  419b58:	mov    ah,0x25
  419b5a:	push   ebx
  419b5b:	xor    BYTE PTR [edx-0x2f],bh
  419b5e:	idiv   esp
  419b60:	jl     0x419b1e
  419b62:	inc    edi
  419b63:	loopne 0x419b7c
  419b65:	mov    bh,0x14
  419b67:	pop    ds
  419b68:	add    al,0x26
  419b6a:	jno    0x419af8
  419b6c:	fimul  WORD PTR [eax+0x48]
  419b6f:	and    bl,BYTE PTR [eax-0x43c0f14d]
  419b75:	add    DWORD PTR [ebx+0x68b2e9a8],ebx
  419b7b:	pop    ecx
  419b7c:	or     ah,dl
  419b7e:	fwait
  419b7f:	(bad)  
  419b80:	not    BYTE PTR [eax-0x42]
  419b83:	mov    eax,ds:0xb698035
  419b88:	in     al,dx
  419b89:	mov    ss,WORD PTR [ebp-0x23]
  419b8c:	out    0xc,eax
  419b8e:	mov    ebp,0xdba672ad
  419b93:	xchg   ah,cl
  419b95:	das    
  419b96:	fld    TBYTE PTR [ecx+0x5]
  419b99:	sub    eax,0xf6173d00
  419b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b9f:	cmp    BYTE PTR [esi],0x86
  419ba2:	aaa    
  419ba3:	mov    bh,0x5d
  419ba5:	or     al,0x28
  419ba7:	cdq    
  419ba8:	cdq    
  419ba9:	inc    esi
  419baa:	loopne 0x419b9c
  419bac:	push   ebp
  419bad:	cmp    BYTE PTR [ebx-0x6d],dh
  419bb0:	mov    bl,BYTE PTR [edx+0x788cb496]
  419bb6:	mov    ds:0x26930955,al
  419bbb:	cld    
  419bbc:	outs   dx,DWORD PTR ds:[esi]
  419bbd:	loope  0x419b93
  419bbf:	jno    0x419b4b
  419bc1:	call   0xefe05d9f
  419bc6:	push   esi
  419bc7:	or     al,0x5e
  419bc9:	or     bl,BYTE PTR [eax+eiz*1+0xd]
  419bcd:	mov    BYTE PTR [ecx+ecx*8-0x5404301d],cl
  419bd4:	clc    
  419bd5:	dec    esi
  419bd6:	repz inc ebp
  419bd8:	mov    esp,DWORD PTR [ecx+0x45]
  419bdb:	je     0x419bfe
  419bdd:	xchg   ecx,eax
  419bde:	xchg   BYTE PTR [edi],bl
  419be0:	cmp    al,BYTE PTR [edx]
  419be2:	dec    ebx
  419be3:	mov    dl,0xbd
  419be5:	sahf   
  419be6:	stos   BYTE PTR es:[edi],al
  419be7:	add    BYTE PTR [ecx],ah
  419be9:	mov    ebx,0x9b4302fb
  419bee:	push   ecx
  419bef:	mov    WORD PTR es:[esp+ebx*8-0x3f15fe54],?
  419bf7:	sbb    ebx,ebp
  419bf9:	add    BYTE PTR [ebx-0x13e86a5],0x9e
  419c00:	xor    edx,DWORD PTR [ecx+0x77b54fce]
  419c06:	or     al,0x86
  419c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c09:	faddp  st(6),st
  419c0b:	or     al,BYTE PTR [edi+0x28e5a018]
  419c11:	mov    ds:0xb0fb67cb,al
  419c16:	cdq    
  419c17:	ds iret 
  419c19:	push   cs
  419c1a:	mov    es,WORD PTR [edi-0x75]
  419c1d:	inc    edx
  419c1e:	dec    edx
  419c1f:	sbb    ecx,ecx
  419c21:	test   esi,ebp
  419c23:	shl    DWORD PTR [eax],1
  419c25:	lods   al,BYTE PTR ds:[esi]
  419c26:	dec    edx
  419c27:	stos   DWORD PTR es:[edi],eax
  419c28:	adc    BYTE PTR [ecx+0x44b8027e],0xcb
  419c2f:	jo     0x419c35
  419c31:	pushf  
  419c32:	or     ebp,edx
  419c34:	loope  0x419bed
  419c36:	gs in  eax,0x92
  419c39:	ins    BYTE PTR es:[edi],dx
  419c3a:	jo     0x419bef
  419c3c:	fdecstp 
  419c3e:	in     al,dx
  419c3f:	fwait
  419c40:	popf   
  419c41:	cmp    ch,BYTE PTR ds:0x5a4b8aa8
  419c47:	int3   
  419c48:	sbb    BYTE PTR [ecx],0x43
  419c4b:	add    al,0x11
  419c4d:	add    esi,DWORD PTR [esi]
  419c4f:	lahf   
  419c50:	fisub  WORD PTR [ebx]
  419c52:	adc    BYTE PTR [ecx],dh
  419c54:	imul   ecx,ecx,0xffffffca
  419c57:	push   edx
  419c58:	xchg   edi,eax
  419c59:	fwait
  419c5a:	cmp    ebx,esp
  419c5c:	xchg   edx,eax
  419c5d:	ror    bl,1
  419c5f:	aaa    
  419c60:	call   FWORD PTR [ecx-0x23eba3cb]
  419c66:	test   eax,0x23aaf3ea
  419c6b:	jno    0x419ca8
  419c6d:	sbb    ah,0x59
  419c70:	clc    
  419c71:	dec    edi
  419c72:	xchg   esi,eax
  419c73:	mov    edi,0xe20309e6
  419c78:	dec    BYTE PTR es:[esi]
  419c7b:	adc    ch,BYTE PTR [esi+0x6dfd383]
  419c81:	or     DWORD PTR [ecx+0x59],esi
  419c84:	clc    
  419c85:	aas    
  419c86:	jne    0x419c12
  419c88:	dec    edi
  419c89:	les    edx,FWORD PTR [bx+si]
  419c8c:	mov    bl,0x9e
  419c8e:	shr    DWORD PTR [edx+0x5bb16472],1
  419c94:	(bad)  
  419c95:	nop
  419c96:	inc    esp
  419c97:	lock shl DWORD PTR [eax-0x7cc271ef],0xc8
  419c9f:	sub    al,0x29
  419ca1:	mov    ss,WORD PTR [eax]
  419ca3:	push   ebp
  419ca4:	jno    0x419c4d
  419ca6:	retf   0x2193
  419ca9:	lahf   
  419caa:	dec    eax
  419cab:	inc    esi
  419cac:	int3   
  419cad:	jnp    0x419ccd
  419caf:	fdivr  DWORD PTR [ebx]
  419cb1:	push   esi
  419cb2:	retf   
  419cb3:	aam    0xfd
  419cb5:	inc    esi
  419cb6:	sbb    BYTE PTR [ecx+0x4b],dh
  419cb9:	fild   QWORD PTR [ecx+eax*2-0x5fceeab4]
  419cc0:	fs inc ecx
  419cc2:	xchg   ecx,eax
  419cc3:	and    bl,BYTE PTR [ebx+0x3e8ba44a]
  419cc9:	enter  0x4638,0x50
  419ccd:	fwait
  419cce:	es mov dl,0x1
  419cd1:	stos   DWORD PTR es:[edi],eax
  419cd2:	cmp    DWORD PTR [edi+0x608a6384],0x20a8a2e5
  419cdc:	sub    eax,0xb4e262d0
  419ce1:	in     al,0xe6
  419ce3:	jmp    0x419c6e
  419ce5:	jbe    0x419d14
  419ce7:	lock aaa 
  419ce9:	mov    ds:0xe55dbc79,eax
  419cee:	rep outs dx,DWORD PTR ds:[esi]
  419cf0:	or     BYTE PTR [esi+0x7ab6a4e6],dl
  419cf6:	add    BYTE PTR [esi+0x41b490f9],al
  419cfc:	stos   BYTE PTR es:[edi],al
  419cfd:	mov    WORD PTR [ecx],ss
  419cff:	and    al,0xce
  419d01:	push   edi
  419d02:	xchg   ebx,eax
  419d03:	stos   DWORD PTR es:[edi],eax
  419d04:	mov    eax,0x8a6469b
  419d09:	sahf   
  419d0a:	pop    es
  419d0b:	push   0x11
  419d0d:	push   cs
  419d0e:	adc    al,BYTE PTR [eax]
  419d10:	add    BYTE PTR [eax],al
  419d12:	mov    BYTE PTR [ebp-0x40],al
  419d15:	fs int 0xe5
  419d18:	lods   al,BYTE PTR ds:[esi]
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp-0x1f8ef884]
  419d20:	popf   
  419d21:	rcr    bh,cl
  419d23:	sbb    DWORD PTR [ecx],eax
  419d25:	add    ch,dh
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [eax],al
  419d2b:	add    al,0x35
  419d2d:	push   cs
  419d2e:	jl     0x419d0b
  419d30:	inc    BYTE PTR [ebp+0x6f5f3105]
  419d36:	mov    ds:0x6c323fbf,eax
  419d3b:	cldemote BYTE PTR [ebx-0x36]
  419d3f:	mov    dh,0x14
  419d41:	add    DWORD PTR [eax-0xa],esp
  419d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d45:	test   bl,bl
  419d47:	xor    al,0x78
  419d49:	inc    edx
  419d4a:	jo     0x419d89
  419d4c:	dec    ebx
  419d4d:	mov    al,ds:0x8fa44a00
  419d52:	mov    BYTE PTR [ebx-0xe04e5af],cl
  419d58:	dec    edi
  419d59:	ins    BYTE PTR es:[edi],dx
  419d5a:	lea    esi,[edi-0x71]
  419d5d:	fsubr  DWORD PTR [eax+edx*4+0x4c93550]
  419d64:	xor    eax,0xf594e087
  419d69:	jno    0x419ced
  419d6b:	out    dx,eax
  419d6c:	jmp    0x7202:0xb9beb145
  419d73:	mov    esp,0x22ba58cc
  419d78:	pop    ebx
  419d79:	(bad)  [edx+0x67]
  419d7d:	hlt    
  419d7e:	mov    esi,0xb953052c
  419d83:	mov    eax,ds:0x1103db81
  419d88:	aam    0x8d
  419d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d8b:	xchg   DWORD PTR [edi],ecx
  419d8d:	sar    eax,cl
  419d8f:	pop    edx
  419d90:	stc    
  419d91:	sbb    al,0xa9
  419d93:	(bad)  
  419d94:	fiadd  WORD PTR [ecx+0x165d1e3f]
  419d9a:	cmp    eax,0xa26b436f
  419d9f:	sysenter 
  419da1:	push   ss
  419da2:	add    DWORD PTR [eax],ecx
  419da4:	mov    DWORD PTR [ecx],0xb42a1dfa
  419daa:	and    cl,ch
  419dac:	adc    al,0x3e
  419dae:	sbb    eax,0xfabad4ee
  419db3:	cli    
  419db4:	shl    DWORD PTR [edx+0x29],1
  419db7:	pop    ecx
  419db8:	call   0x8f9df69e
  419dbd:	and    al,0x9f
  419dbf:	adc    ch,BYTE PTR [edi+0x5e71e855]
  419dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dc6:	nop
  419dc7:	or     eax,0x18119160
  419dcc:	dec    ebp
  419dcd:	enter  0x41e3,0xea
  419dd1:	int3   
  419dd2:	pop    edx
  419dd3:	inc    edi
  419dd4:	push   ecx
  419dd5:	cli    
  419dd6:	pop    ebx
  419dd7:	test   DWORD PTR [ebx+0x2676a35],edx
  419ddd:	xor    eax,0xd8a18f79
  419de2:	es out 0x38,eax
  419de5:	dec    edi
  419de6:	and    bl,al
  419de8:	imul   esp,DWORD PTR [ecx],0x6b6ce9d9
  419dee:	bound  ecx,QWORD PTR [eax]
  419df0:	dec    ebx
  419df1:	pop    ss
  419df2:	xchg   DWORD PTR [ebp+0x7a696d8f],edx
  419df8:	ds xchg ecx,eax
  419dfa:	or     ebp,DWORD PTR [edx+eax*2]
  419dfd:	ds pushf 
  419dff:	not    BYTE PTR [ebx]
  419e01:	rol    DWORD PTR ds:0x46ce9c2,cl
  419e07:	into   
  419e08:	pop    ebp
  419e09:	inc    eax
  419e0a:	xchg   ecx,eax
  419e0b:	jbe    0x419e70
  419e0d:	out    0x1,eax
  419e0f:	and    BYTE PTR [eax+edi*8+0x66121395],bh
  419e16:	in     al,dx
  419e17:	add    ch,BYTE PTR [esi-0x5b820ceb]
  419e1d:	dec    edx
  419e1e:	xor    eax,DWORD PTR [ebx-0x2bcc3c86]
  419e24:	test   al,0x47
  419e26:	test   eax,0xfe5bbb36
  419e2b:	dec    eax
  419e2c:	ins    BYTE PTR es:[edi],dx
  419e2d:	ret    0xaa8
  419e30:	or     ecx,esp
  419e32:	mov    ah,0x2c
  419e34:	push   ebp
  419e35:	inc    ebx
  419e36:	cwde   
  419e37:	push   cs
  419e38:	cmp    bh,0x75
  419e3b:	or     bl,BYTE PTR [edi+0x4e02a40c]
  419e41:	aad    0xaa
  419e43:	fwait
  419e44:	(bad)  
  419e45:	out    0x6a,eax
  419e47:	sub    BYTE PTR [edx],bl
  419e49:	scas   eax,DWORD PTR es:[edi]
  419e4a:	stos   BYTE PTR es:[edi],al
  419e4b:	in     al,0xb
  419e4d:	xchg   BYTE PTR [esi-0x3f],ch
  419e50:	push   esp
  419e51:	pop    ebx
  419e52:	arpl   bp,si
  419e54:	lods   al,BYTE PTR ds:[esi]
  419e55:	dec    eax
  419e56:	xchg   ebp,eax
  419e57:	addr16 iret 
  419e59:	jns    0x419ddb
  419e5b:	hlt    
  419e5c:	adc    DWORD PTR ds:0xc881763c,0x7b787041
  419e66:	fldlg2 
  419e68:	xlat   BYTE PTR ds:[ebx]
  419e69:	dec    eax
  419e6a:	ins    BYTE PTR es:[edi],dx
  419e6b:	sub    eax,0x7af718b1
  419e70:	sub    edx,DWORD PTR [ebx-0xfc8e8a2]
  419e76:	out    dx,eax
  419e77:	pusha  
  419e78:	xor    BYTE PTR [esp+eiz*2+0x15],dh
  419e7c:	inc    ecx
  419e7d:	mov    cl,0xbf
  419e7f:	inc    ebp
  419e80:	and    al,0x9d
  419e83:	xor    bh,dl
  419e85:	add    eax,0x864c4a68
  419e8a:	or     ch,BYTE PTR [ecx-0x251dc9a5]
  419e90:	or     BYTE PTR [ebp+0x6c92a580],dh
  419e96:	push   ebx
  419e97:	push   ds
  419e98:	loopne 0x419eb0
  419e9a:	test   DWORD PTR [ebx-0x3f1b3d69],esi
  419ea0:	and    eax,0xa63d6988
  419ea5:	jmp    0xfd06f1b8
  419eaa:	js     0x419e47
  419eac:	hlt    
  419ead:	clc    
  419eae:	icebp  
  419eaf:	stos   DWORD PTR es:[edi],eax
  419eb0:	xor    al,0x67
  419eb2:	xchg   DWORD PTR [eax+eax*1],esp
  419eb5:	ins    DWORD PTR es:[edi],dx
  419eb6:	stc    
  419eb7:	js     0x419e61
  419eb9:	repnz pop es
  419ebb:	and    edx,edi
  419ebd:	mov    ah,BYTE PTR [ecx]
  419ebf:	sub    al,0xb
  419ec1:	daa    
  419ec2:	dec    eax
  419ec3:	repnz shl BYTE PTR ds:0x84bbf661,1
  419eca:	call   0x9d753e62
  419ecf:	xchg   DWORD PTR [ecx-0x5f],edi
  419ed2:	xlat   BYTE PTR ds:[ebx]
  419ed3:	mov    bl,0xca
  419ed5:	dec    esi
  419ed6:	sbb    BYTE PTR [edx],bl
  419ed8:	jmp    0x27d:0x694544ad
  419edf:	xchg   ebp,eax
  419ee0:	xchg   ebp,eax
  419ee1:	add    edx,ebp
  419ee3:	push   edx
  419ee4:	jb     0x419e92
  419ee6:	jno    0x419e6a
  419ee8:	mov    esi,0x398b0bd6
  419eed:	pop    es
  419eee:	out    dx,al
  419eef:	pop    ebx
  419ef0:	sti    
  419ef1:	mov    ah,0x42
  419ef3:	xlat   BYTE PTR ds:[ebx]
  419ef4:	xchg   ebp,eax
  419ef5:	xor    BYTE PTR [edx+0xa],al
  419ef8:	in     al,dx
  419ef9:	cmp    al,0x14
  419efb:	and    al,0xa0
  419efd:	repnz dec ebp
  419eff:	fs (bad) 
  419f01:	das    
  419f02:	push   ss
  419f03:	adc    bh,BYTE PTR [ebx]
  419f05:	cmp    ebx,DWORD PTR [esi]
  419f07:	rcl    BYTE PTR [ecx],1
  419f09:	adc    edi,DWORD PTR [edx-0x70]
  419f0c:	mov    dl,0x5e
  419f0e:	jmp    0x419ec0
  419f10:	or     cl,dl
  419f12:	or     ah,dl
  419f14:	dec    ebp
  419f15:	xor    eax,0xf0fde8cc
  419f1a:	lahf   
  419f1b:	mov    bh,0x30
  419f1d:	adc    DWORD PTR [eax],edi
  419f1f:	cli    
  419f20:	out    dx,eax
  419f21:	cld    
  419f22:	sbb    BYTE PTR [edi*1-0x102bb1c2],cl
  419f29:	xchg   edi,eax
  419f2a:	idiv   bh
  419f2c:	cs das 
  419f2e:	(bad)  
  419f2f:	stos   DWORD PTR es:[edi],eax
  419f30:	inc    esp
  419f31:	push   edx
  419f32:	aad    0x34
  419f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f35:	cs aaa 
  419f37:	jns    0x419ebc
  419f39:	mov    bh,ah
  419f3b:	cmp    BYTE PTR [edi+0x5e107b73],0x38
  419f42:	out    0xfd,al
  419f44:	cmp    ebp,esi
  419f46:	loope  0x419f25
  419f48:	mov    ah,0xe9
  419f4a:	cwde   
  419f4b:	js     0x419f29
  419f4d:	loopne 0x419eee
  419f4f:	sub    DWORD PTR [ecx+0x7e1468d7],ebp
  419f55:	or     DWORD PTR [ebp-0x10],edi
  419f58:	out    dx,eax
  419f59:	fdivp  st(6),st
  419f5b:	inc    edx
  419f5c:	xchg   ebp,eax
  419f5d:	mov    edi,0xd69610eb
  419f62:	sbb    bl,cl
  419f64:	test   eax,0xd120e699
  419f69:	xchg   BYTE PTR [edi],al
  419f6b:	in     eax,dx
  419f6c:	or     al,0xaf
  419f6e:	mov    al,0xb2
  419f70:	inc    edi
  419f71:	cmp    DWORD PTR [ebp-0x29845fe6],ecx
  419f77:	ret    0xd1c8
  419f7a:	leave  
  419f7b:	mov    ds:0xa5048b4c,eax
  419f80:	jl     0x419fcd
  419f82:	cmp    BYTE PTR [ecx-0x7c],cl
  419f85:	lods   al,BYTE PTR ds:[esi]
  419f86:	lock or DWORD PTR [ebp+0x136d3c06],edx
  419f8d:	iret   
  419f8e:	add    BYTE PTR [edi],0x8
  419f91:	mov    BYTE PTR [esi-0x5efc060a],bl
  419f97:	ja     0x419f3e
  419f99:	xchg   ecx,eax
  419f9a:	pop    edx
  419f9b:	mov    bl,0x1b
  419f9d:	lds    eax,FWORD PTR [ecx-0x72]
  419fa0:	mov    dl,0xce
  419fa2:	push   esp
  419fa3:	popf   
  419fa4:	mov    esp,0x73acc9ef
  419fa9:	mov    esi,0x7ce44832
  419fae:	imul   eax,DWORD PTR [edi-0x15],0x8f8fa15
  419fb5:	mov    ds:0xeb4a893a,eax
  419fba:	push   0x4486c125
  419fbf:	test   al,0x30
  419fc1:	cmp    DWORD PTR [si],esp
  419fc4:	aam    0x8d
  419fc6:	dec    eax
  419fc7:	inc    ebp
  419fc8:	lea    edx,[edx+ebx*2]
  419fcb:	sahf   
  419fcc:	jno    0x419f52
  419fce:	mov    al,ds:0x33d3e157
  419fd3:	test   DWORD PTR [ebx],edx
  419fd5:	and    esi,DWORD PTR [ebx+0x435bf050]
  419fdb:	sub    edx,ebp
  419fdd:	sub    ecx,DWORD PTR [edx-0x5b25556a]
  419fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fe4:	mov    al,ds:0x1adcf291
  419fe9:	pop    ds
  419fea:	iret   
  419feb:	cmp    edx,DWORD PTR [ecx]
  419fed:	lds    edx,FWORD PTR [ecx]
  419fef:	es xor al,0x5f
  419ff2:	fistp  QWORD PTR [esi-0x4482ebfc]
  419ff8:	imul   edx,DWORD PTR [edx],0x919c6e98
  419ffe:	fcomp  QWORD PTR [edx]
  41a000:	addr16 jmp 0x3194:0xd5179dda
  41a008:	in     al,dx
  41a009:	in     eax,0x5b
  41a00b:	mov    ebp,0xeb5a2a61
  41a010:	shr    BYTE PTR [ecx],cl
  41a012:	rcr    BYTE PTR [ebp-0x24],0x92
  41a016:	mov    ds:0x6877528e,eax
  41a01b:	jmp    0x419fbc
  41a01d:	test   DWORD PTR ds:0x747e6f82,ecx
  41a023:	xchg   edx,eax
  41a024:	out    dx,al
  41a025:	add    BYTE PTR [ebx-0x7f],cl
  41a028:	adc    al,0xc2
  41a02a:	and    BYTE PTR [ebp-0x24],bh
  41a02d:	test   al,0x92
  41a02f:	popf   
  41a030:	icebp  
  41a031:	jecxz  0x41a04c
  41a033:	data16 fsub DWORD PTR [edx+ecx*8-0x12]
  41a038:	xor    DWORD PTR [ebp-0x5bd75e7e],ebp
  41a03e:	stos   DWORD PTR es:[edi],eax
  41a03f:	inc    edi
  41a040:	cmp    cl,BYTE PTR [esi*8-0x65322c6e]
  41a047:	not    BYTE PTR [esi]
  41a049:	ins    BYTE PTR es:[edi],dx
  41a04a:	test   DWORD PTR [ecx+0x12bd6fdd],ecx
  41a050:	xchg   ebp,eax
  41a051:	jmp    0x3747e2
  41a056:	xor    esp,esi
  41a058:	popa   
  41a059:	hlt    
  41a05a:	not    DWORD PTR [edi]
  41a05c:	mov    cl,BYTE PTR [edx-0x7e009e39]
  41a062:	cdq    
  41a063:	mov    ah,0x38
  41a065:	sbb    eax,0x3b214b2f
  41a06a:	ss ret 0x58bd
  41a06e:	sub    BYTE PTR [edi-0x2c],0xb
  41a072:	jecxz  0x41a015
  41a074:	add    eax,0x8b876119
  41a079:	jnp    0x41a05e
  41a07b:	xchg   esi,eax
  41a07c:	in     eax,0x4a
  41a07e:	mov    esi,0xc58c4762
  41a083:	scas   al,BYTE PTR es:[edi]
  41a084:	xor    BYTE PTR [esi-0x5cdaf4c9],ah
  41a08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a08b:	fisub  DWORD PTR [ecx-0x30a1873f]
  41a091:	sub    DWORD PTR [edi-0x55d99007],0xfffffff6
  41a098:	jmp    0xcd9:0x3fe37205
  41a09f:	shl    DWORD PTR [eax],cl
  41a0a1:	lock sub edi,DWORD PTR [eax+edi*8-0x32fcd824]
  41a0a9:	xchg   edi,eax
  41a0aa:	dec    edi
  41a0ab:	mul    DWORD PTR [esi+0x19]
  41a0ae:	push   0xe000e29d
  41a0b3:	or     eax,0xba9fda33
  41a0b8:	inc    esi
  41a0b9:	iret   
  41a0ba:	ds (bad) 
  41a0bc:	mov    ecx,0xf8e5987d
  41a0c1:	das    
  41a0c2:	jbe    0x41a08a
  41a0c4:	pop    ds
  41a0c5:	adc    al,0x7f
  41a0c7:	push   ds
  41a0c8:	and    al,BYTE PTR [edi+0x111cb636]
  41a0ce:	cdq    
  41a0cf:	and    eax,0x1297d46
  41a0d4:	inc    ebx
  41a0d5:	outs   dx,DWORD PTR ds:[esi]
  41a0d6:	xlat   BYTE PTR ds:[ebx]
  41a0d7:	mov    dh,0x7f
  41a0d9:	repnz clc 
  41a0db:	aad    0x52
  41a0dd:	imul   edx,DWORD PTR [ebx],0xffffffdf
  41a0e0:	adc    eax,0x93ea8fc8
  41a0e5:	je     0x41a0d7
  41a0e7:	sahf   
  41a0e8:	xor    edx,ecx
  41a0ea:	inc    edx
  41a0eb:	adc    al,0xe7
  41a0ed:	std    
  41a0ee:	cdq    
  41a0ef:	fimul  DWORD PTR [ebp-0x51]
  41a0f2:	enter  0x7018,0x28
  41a0f6:	pop    eax
  41a0f7:	ja     0x41a089
  41a0f9:	je     0x41a0f6
  41a0fb:	and    BYTE PTR [edx+ebx*1+0x73],0x72
  41a100:	xchg   ebp,eax
  41a101:	dec    ebp
  41a102:	(bad)  
  41a103:	(bad)  
  41a104:	dec    esp
  41a105:	mov    edx,0x593fef29
  41a10a:	mov    al,0x24
  41a10c:	adc    al,0xd6
  41a10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a10f:	sub    DWORD PTR [ecx-0x38793124],edx
  41a115:	rcl    edx,0x5e
  41a118:	and    eax,0xd47fbcc2
  41a11d:	dec    ecx
  41a11e:	add    DWORD PTR [ebp-0x1b460e9],edx
  41a124:	mov    ebp,0xb3abf401
  41a129:	scas   eax,DWORD PTR es:[edi]
  41a12a:	push   eax
  41a12b:	xor    dh,BYTE PTR [ecx]
  41a12d:	lods   al,BYTE PTR ds:[esi]
  41a12e:	enter  0x8248,0x16
  41a132:	test   ah,0xcb
  41a135:	test   al,0xd6
  41a137:	das    
  41a138:	pop    ebx
  41a139:	adc    al,0xb7
  41a13b:	mov    cl,0x87
  41a13d:	push   ebp
  41a13e:	js     0x41a0e5
  41a140:	mov    dh,BYTE PTR [edx+0x7e]
  41a143:	adc    ebp,edi
  41a145:	dec    ebp
  41a146:	or     ah,BYTE PTR [ebx+0x36]
  41a149:	popa   
  41a14a:	jmp    0x2e07:0x3660d22d
  41a151:	sti    
  41a152:	mov    ch,0x58
  41a154:	pop    ds
  41a155:	push   ss
  41a156:	push   ebp
  41a157:	cmp    dh,ah
  41a159:	dec    ebp
  41a15a:	xchg   esi,eax
  41a15b:	mov    DWORD PTR [eax],esi
  41a15d:	shr    ebx,0xf5
  41a160:	fdivr  QWORD PTR [ebx+0x53]
  41a163:	sub    ch,dh
  41a165:	jl     0x41a110
  41a167:	loop   0x41a155
  41a169:	mov    ds:0x78f42283,al
  41a16e:	mov    bl,0x2d
  41a170:	scas   eax,DWORD PTR es:[edi]
  41a171:	pop    ds
  41a172:	sbb    eax,0xa0b06fee
  41a177:	cwde   
  41a178:	call   0xb1558280
  41a17d:	xchg   esp,eax
  41a17e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a17f:	dec    esp
  41a180:	loope  0x41a17a
  41a182:	sbb    ebx,DWORD PTR [esi-0x73]
  41a185:	ret    
  41a186:	or     DWORD PTR [esi-0x460dd723],ecx
  41a18c:	mov    bh,0xd8
  41a18e:	push   cs
  41a18f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a190:	xchg   DWORD PTR [esi+0x5a],eax
  41a193:	aaa    
  41a194:	mov    edx,DWORD PTR [esi-0x65c54874]
  41a19a:	xchg   edx,eax
  41a19b:	idiv   BYTE PTR [edi+0x18]
  41a19e:	shl    ch,0x14
  41a1a1:	pop    es
  41a1a2:	ds cs jecxz 0x41a197
  41a1a6:	jb     0x41a199
  41a1a8:	retf   0xc5ee
  41a1ab:	push   eax
  41a1ac:	pop    esi
  41a1ad:	and    cl,BYTE PTR [ebx]
  41a1af:	mov    ch,0xd1
  41a1b1:	int    0xe5
  41a1b3:	mov    edx,0xd30f5fe7
  41a1b8:	jmp    0x72d0c97d
  41a1bd:	dec    ebx
  41a1be:	xchg   esp,eax
  41a1bf:	dec    esp
  41a1c0:	(bad)  
  41a1c1:	jmp    0x41a23b
  41a1c3:	push   ebx
  41a1c4:	test   edi,ebp
  41a1c6:	inc    ecx
  41a1c7:	or     ecx,DWORD PTR [edx+0x7b062cfd]
  41a1cd:	inc    edx
  41a1ce:	imul   edx,DWORD PTR [ebx+0x5ef4e2f1],0xffffffe3
  41a1d5:	dec    ecx
  41a1d6:	pop    ebx
  41a1d7:	pop    ecx
  41a1d8:	xchg   ecx,eax
  41a1d9:	xor    eax,0xb087a03c
  41a1de:	inc    eax
  41a1df:	(bad)  
  41a1e3:	sub    BYTE PTR [ecx+ebx*4+0xdcede3f],dl
  41a1ea:	xchg   dl,ch
  41a1ec:	xchg   esi,eax
  41a1ed:	ja     0x41a19a
  41a1ef:	call   0xc1d0:0xfeb386e5
  41a1f6:	scas   eax,DWORD PTR es:[edi]
  41a1f7:	sub    al,0xf9
  41a1f9:	call   0x915bcec4
  41a1fe:	push   esp
  41a1ff:	and    dh,BYTE PTR [ecx+0x1842665]
  41a205:	cmp    ebx,0xffffffa1
  41a208:	js     0x41a1b8
  41a20a:	cmp    BYTE PTR [edi+0x3aa7b5bf],cl
  41a210:	scas   al,BYTE PTR es:[edi]
  41a211:	add    ah,BYTE PTR [ebp-0x6c3ab3e7]
  41a217:	sbb    al,ch
  41a219:	sub    ebp,esi
  41a21b:	mov    edi,0x1cb155
  41a220:	add    BYTE PTR [eax],al
  41a222:	sbb    BYTE PTR [ebp+0xe],dl
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs mov dh,0xa7
  41a230:	inc    esp
  41a231:	arpl   sp,dx
  41a233:	push   ds
  41a234:	add    DWORD PTR [eax],eax
  41a236:	cmc    
  41a237:	add    al,0x0
  41a239:	add    BYTE PTR [ebx+0x3f],bh
  41a23c:	(bad)  
  41a23d:	fmul   st,st(7)
  41a23f:	fdivr  DWORD PTR [esi-0x43]
  41a242:	stos   BYTE PTR es:[edi],al
  41a243:	hlt    
  41a244:	imul   edi,ecx,0xffffffc8
  41a247:	and    al,0x95
  41a249:	sbb    BYTE PTR [eax-0x56],0xfe
  41a24d:	mov    eax,ds:0xccaeec3d
  41a252:	mov    dh,0x80
  41a254:	pop    edi
  41a255:	sbb    DWORD PTR [ecx-0x55208c25],ebx
  41a25b:	out    dx,eax
  41a25c:	iret   
  41a25d:	push   esp
  41a25e:	pop    ss
  41a25f:	in     al,0x9a
  41a261:	jle    0x41a24b
  41a263:	mov    edi,0x7d08e432
  41a268:	leave  
  41a269:	add    DWORD PTR [edx],ecx
  41a26b:	aaa    
  41a26c:	rcl    BYTE PTR [edi-0x42],0xb0
  41a270:	add    BYTE PTR [ecx],bl
  41a272:	in     al,dx
  41a273:	add    cl,bh
  41a275:	xor    BYTE PTR [eax-0x38],dh
  41a278:	push   ebp
  41a279:	test   BYTE PTR [eax-0x20],ah
  41a27c:	mov    al,ds:0x183d7aba
  41a281:	pop    esp
  41a282:	int3   
  41a283:	fild   DWORD PTR [edx+0x166da13d]
  41a289:	jae    0x41a299
  41a28b:	push   ds
  41a28c:	mov    DWORD PTR [eax+0xe],ebx
  41a28f:	ins    BYTE PTR es:[edi],dx
  41a290:	add    edx,eax
  41a292:	xor    DWORD PTR [esi+0x67],edi
  41a295:	dec    ebx
  41a296:	sbb    DWORD PTR [ebx+edx*2],eax
  41a299:	xchg   BYTE PTR [ecx+0x1],ch
  41a29c:	push   0x78d0f64a
  41a2a1:	jmp    0xc29a25b3
  41a2a6:	mov    edi,0xb7f911a5
  41a2ab:	cmp    BYTE PTR [ebp-0x46cffd3d],dl
  41a2b1:	scas   al,BYTE PTR es:[edi]
  41a2b2:	cmp    al,0xff
  41a2b4:	cmp    ebx,DWORD PTR [ebx-0xc052a75]
  41a2ba:	adc    bh,BYTE PTR [edx-0x55]
  41a2bd:	push   edx
  41a2be:	stc    
  41a2bf:	add    BYTE PTR [ebx],ah
  41a2c1:	loope  0x41a2cb
  41a2c3:	add    ah,BYTE PTR [esi+0x6bd8b4c4]
  41a2c9:	mov    ch,0xc1
  41a2cb:	mov    edi,0x34355647
  41a2d0:	test   BYTE PTR [edx-0x6d2087f2],ah
  41a2d6:	xchg   BYTE PTR [ebx+0x2ca74785],al
  41a2dc:	call   0x301897ff
  41a2e1:	aaa    
  41a2e2:	jg     0x41a2f3
  41a2e4:	xor    ebp,DWORD PTR [esi-0x33]
  41a2e7:	push   edi
  41a2e8:	aas    
  41a2e9:	add    BYTE PTR ds:0x8f8d23f9,ah
  41a2ef:	xchg   ebx,eax
  41a2f0:	adc    BYTE PTR [edx],bh
  41a2f2:	inc    ebx
  41a2f3:	imul   ebp,DWORD PTR ss:[edx-0x6b],0x1e
  41a2f8:	fst    QWORD PTR [ecx+0x42908c1d]
  41a2fe:	adc    bl,BYTE PTR [ebp+esi*2+0x29540c8c]
  41a305:	nop
  41a306:	call   0xca0a1d67
  41a30b:	inc    edx
  41a30c:	xchg   edi,eax
  41a30d:	sbb    ah,bl
  41a30f:	out    0x19,al
  41a311:	jo     0x41a2be
  41a313:	xor    dh,bh
  41a315:	adc    BYTE PTR [ebx+0x428d5587],bh
  41a31b:	bound  eax,QWORD PTR [ecx]
  41a31d:	aad    0x59
  41a31f:	jmp    0x41a2fd
  41a321:	mov    cl,0x40
  41a323:	cmp    eax,0x56041fb8
  41a328:	int    0x3d
  41a32a:	int3   
  41a32b:	inc    eax
  41a32c:	in     al,dx
  41a32d:	into   
  41a32e:	push   es
  41a32f:	lea    eax,[ebp+0x3e]
  41a332:	aad    0xf3
  41a334:	mov    eax,0x40814911
  41a339:	loopne 0x41a340
  41a33b:	pop    es
  41a33c:	inc    esi
  41a33d:	rol    BYTE PTR [esi],1
  41a33f:	mov    edx,0x1e0a4ba9
  41a344:	clc    
  41a345:	aas    
  41a346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a347:	xchg   ebx,eax
  41a348:	jnp    0x41a2d6
  41a34a:	ss fs pop edx
  41a34d:	jne    0x41a2db
  41a34f:	xchg   esi,eax
  41a350:	xor    ah,bl
  41a352:	sub    dh,BYTE PTR [edx-0x40]
  41a355:	inc    esi
  41a356:	hlt    
  41a357:	xor    cl,0x5
  41a35a:	enter  0xb146,0xbd
  41a35e:	fidivr WORD PTR [ecx+0x25]
  41a361:	loope  0x41a371
  41a363:	jecxz  0x41a330
  41a365:	jnp    0x41a3c9
  41a367:	js     0x41a31d
  41a369:	imul   esp,DWORD PTR [esp+edx*2+0x5e7957fb],0xd18d8be7
  41a374:	addr16 ret 0x3a29
  41a378:	sbb    DWORD PTR [ebx-0x10],edx
  41a37b:	sbb    DWORD PTR [ebx-0x3118a6ed],0x115664c0
  41a385:	stos   BYTE PTR es:[edi],al
  41a386:	outs   dx,BYTE PTR ds:[esi]
  41a387:	ja     0x41a3ba
  41a389:	stos   BYTE PTR es:[edi],al
  41a38a:	sbb    al,BYTE PTR [esi+ebp*2]
  41a38d:	mov    ch,0x8e
  41a38f:	sub    ebx,DWORD PTR [ebx+0x2a9787ed]
  41a395:	icebp  
  41a396:	cmp    al,0xe
  41a398:	push   ss
  41a399:	adc    DWORD PTR [esi-0x3f],ecx
  41a39c:	or     DWORD PTR [ebx-0x692e03a],edx
  41a3a2:	mov    edi,0x1c5fc911
  41a3a7:	out    dx,al
  41a3a8:	pop    edi
  41a3a9:	test   edx,edi
  41a3ab:	stos   DWORD PTR es:[edi],eax
  41a3ac:	hlt    
  41a3ad:	test   bh,dl
  41a3af:	jno    0x41a3ce
  41a3b1:	ror    BYTE PTR [edi],0x8
  41a3b4:	retf   
  41a3b5:	ret    0xa094
  41a3b8:	clc    
  41a3b9:	ret    
  41a3ba:	in     eax,dx
  41a3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3bc:	or     DWORD PTR [eax],edx
  41a3be:	inc    edi
  41a3bf:	aam    0x97
  41a3c1:	je     0x41a34c
  41a3c3:	and    DWORD PTR [ebx+0x74],eax
  41a3c6:	std    
  41a3c7:	leave  
  41a3c8:	das    
  41a3c9:	stos   DWORD PTR es:[edi],eax
  41a3ca:	xor    DWORD PTR [ecx],ebx
  41a3cc:	cmp    DWORD PTR [eax+ebx*8+0x4068aa05],esi
  41a3d3:	add    dl,BYTE PTR [ecx-0x746b6ab8]
  41a3d9:	adc    DWORD PTR [eax],ebx
  41a3db:	jbe    0x41a44f
  41a3dd:	test   BYTE PTR [edx+0x57],0xdf
  41a3e1:	xor    DWORD PTR ds:0x69e23f9c,0x78
  41a3e8:	fmul   QWORD PTR [ecx+0x4c]
  41a3eb:	pop    ss
  41a3ec:	xchg   esp,eax
  41a3ed:	jmp    DWORD PTR [ecx-0xdf2facf]
  41a3f3:	or     eax,0x302fa94d
  41a3f8:	xor    al,0xd7
  41a3fa:	pop    es
  41a3fb:	pop    ecx
  41a3fc:	jg     0x41a47b
  41a3fe:	out    dx,al
  41a3ff:	(bad)  
  41a400:	or     eax,0xabef2eb2
  41a405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a406:	retf   
  41a407:	xor    ecx,ebp
  41a409:	popf   
  41a40a:	sbb    BYTE PTR [edi+0x1e],bl
  41a40d:	push   es
  41a40e:	adc    eax,0x205c438d
  41a413:	loopne 0x41a450
  41a415:	mov    dh,0xa1
  41a417:	or     al,0xd2
  41a419:	inc    ecx
  41a41a:	and    BYTE PTR [edx+0x59ae5326],bl
  41a420:	or     DWORD PTR [ebp-0x4aca1fad],esp
  41a426:	pop    ecx
  41a427:	pop    esp
  41a428:	shr    bh,cl
  41a42a:	loop   0x41a414
  41a42c:	add    BYTE PTR [ebp+edi*8-0x78],bl
  41a430:	out    0xd9,al
  41a432:	jle    0x41a3e0
  41a434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a435:	pop    esp
  41a436:	or     edx,DWORD PTR [edx+0x13]
  41a439:	mov    esi,0x4f2e469
  41a43e:	fist   WORD PTR [ebp-0x778722df]
  41a444:	pop    ds
  41a445:	xchg   ebx,eax
  41a446:	xchg   ecx,eax
  41a447:	pop    es
  41a448:	xchg   ebp,eax
  41a449:	sbb    esi,DWORD PTR [ecx-0x16893de1]
  41a44f:	mov    edi,0xbe2b5c07
  41a454:	leave  
  41a455:	and    eax,DWORD PTR [ebp-0x374ba0a8]
  41a45b:	sbb    BYTE PTR [eax],dl
  41a45d:	mov    edi,0xbf56561b
  41a462:	xchg   ebx,eax
  41a463:	pop    ebp
  41a464:	push   edx
  41a465:	lea    ebx,[esi-0x32]
  41a468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a469:	lods   al,BYTE PTR ds:[esi]
  41a46a:	outs   dx,DWORD PTR ds:[esi]
  41a46b:	jle    0x41a475
  41a46d:	mov    al,ds:0x5ce470bd
  41a472:	sub    bh,dl
  41a474:	scas   eax,DWORD PTR es:[edi]
  41a475:	shr    DWORD PTR [esi],1
  41a477:	or     ebx,esi
  41a479:	push   esi
  41a47a:	push   edx
  41a47b:	leave  
  41a47c:	rep outs dx,BYTE PTR ds:[esi]
  41a47e:	addr16 std 
  41a480:	rcr    DWORD PTR [eax-0x3f355c58],1
  41a486:	xchg   esi,eax
  41a487:	xchg   ebp,eax
  41a488:	jno    0x41a4ce
  41a48a:	inc    esi
  41a48b:	adc    al,0x5c
  41a48d:	xchg   ecx,eax
  41a48e:	xor    BYTE PTR [ecx],0x2d
  41a491:	push   ebp
  41a492:	repnz push ecx
  41a494:	mov    edi,0xd0bfde37
  41a499:	aas    
  41a49a:	clc    
  41a49b:	pop    esi
  41a49c:	retf   
  41a49d:	hlt    
  41a49e:	sbb    eax,0xb8a28fe8
  41a4a3:	cli    
  41a4a4:	jns    0x41a43b
  41a4a6:	inc    ebx
  41a4a7:	xlat   BYTE PTR ds:[ebx]
  41a4a8:	and    BYTE PTR [edi+0x22a5ff61],al
  41a4ae:	stos   DWORD PTR es:[edi],eax
  41a4af:	ss mov ebx,esi
  41a4b2:	loop   0x41a47b
  41a4b4:	aam    0x14
  41a4b6:	jp     0x41a4ac
  41a4b8:	mov    cl,0x5b
  41a4ba:	mov    eax,0x2796b7ad
  41a4bf:	scas   al,BYTE PTR es:[edi]
  41a4c0:	(bad)  
  41a4c1:	(bad)  
  41a4c2:	fs inc esi
  41a4c4:	push   edi
  41a4c5:	push   0x9084191a
  41a4ca:	mov    ebx,0x12f6af42
  41a4cf:	cs xor eax,0xffc055bc
  41a4d5:	add    eax,0xd3fc620b
  41a4da:	dec    ebx
  41a4db:	adc    esi,DWORD PTR [ecx-0x2caca95f]
  41a4e1:	xchg   ebx,eax
  41a4e2:	or     esi,DWORD PTR [ebx]
  41a4e4:	xor    DWORD PTR [eax],ebx
  41a4e6:	shr    DWORD PTR [eax+0x3034a1a7],0xf3
  41a4ed:	call   0x70d7:0x99e53e85
  41a4f4:	pop    ebx
  41a4f5:	enter  0xbe00,0x4d
  41a4f9:	inc    ebp
  41a4fa:	push   ss
  41a4fb:	aaa    
  41a4fc:	cdq    
  41a4fd:	pusha  
  41a4fe:	(bad)  
  41a4ff:	fcmovne st,st(2)
  41a501:	mov    ah,0xa7
  41a503:	mov    bl,0xbf
  41a505:	cdq    
  41a506:	test   al,0x22
  41a508:	dec    esi
  41a509:	out    0xc7,al
  41a50b:	cld    
  41a50c:	test   BYTE PTR [ebx+ecx*1+0x4],al
  41a510:	add    DWORD PTR [esi-0x5b],ecx
  41a513:	or     edi,eax
  41a515:	fistp  DWORD PTR [esi]
  41a517:	pop    edi
  41a518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a51a:	leave  
  41a51b:	jne    0x41a51a
  41a51d:	push   esi
  41a51e:	ins    BYTE PTR es:[edi],dx
  41a51f:	mov    ds:0xe00e2815,eax
  41a524:	jb     0x41a4ae
  41a526:	xchg   ebx,eax
  41a527:	jno    0x41a519
  41a529:	stos   DWORD PTR es:[edi],eax
  41a52a:	call   0xda1c:0x228cec07
  41a531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a532:	cmp    edx,DWORD PTR [ebx-0x26]
  41a535:	jbe    0x41a4db
  41a537:	dec    ecx
  41a538:	out    0x80,eax
  41a53a:	add    al,0xeb
  41a53c:	scas   eax,DWORD PTR es:[edi]
  41a53d:	cmp    al,0x71
  41a53f:	cmp    BYTE PTR [esi],bh
  41a541:	xchg   ecx,eax
  41a542:	xchg   DWORD PTR [ebx-0x4fe3ad35],edx
  41a548:	sub    cl,BYTE PTR [ecx+0x52889fce]
  41a54e:	sti    
  41a54f:	fiadd  WORD PTR [eax+0x3a83557c]
  41a555:	and    DWORD PTR [ebx+ebp*8],edx
  41a558:	sar    BYTE PTR [edx],1
  41a55a:	in     eax,0xd1
  41a55c:	popa   
  41a55d:	push   0xae9cc7b7
  41a562:	stos   BYTE PTR es:[edi],al
  41a563:	popa   
  41a564:	or     DWORD PTR [esi+0x1b],esp
  41a567:	lahf   
  41a568:	lock pop edx
  41a56a:	or     BYTE PTR [edx+0x0],0x8a
  41a56e:	xchg   ebx,eax
  41a56f:	dec    edi
  41a570:	jmp    0xb2655645
  41a575:	push   0xfffffffd
  41a577:	dec    ebp
  41a578:	(bad)  
  41a579:	xor    BYTE PTR [eax],bh
  41a57b:	stos   DWORD PTR es:[edi],eax
  41a57c:	xchg   esp,eax
  41a57e:	cmp    DWORD PTR [ebx+0x7bb533b9],esi
  41a584:	fidiv  DWORD PTR [esi+0x8d40cee]
  41a58a:	xchg   ebp,eax
  41a58b:	inc    ebx
  41a58c:	inc    ebx
  41a58d:	or     eax,0xf43dfe31
  41a592:	mov    esi,0xc5785ad6
  41a597:	fs jns 0x41a5f8
  41a59a:	sar    BYTE PTR [ebp-0x77af6943],cl
  41a5a0:	cld    
  41a5a1:	add    DWORD PTR [eax+0x31],0x65
  41a5a5:	(bad)  
  41a5a7:	sbb    dh,BYTE PTR [eax]
  41a5a9:	(bad)  
  41a5aa:	outs   dx,DWORD PTR ds:[esi]
  41a5ab:	std    
  41a5ac:	fcomp  DWORD PTR [ebp+0x51]
  41a5af:	fucom  st(3)
  41a5b1:	fisubr DWORD PTR [ebx]
  41a5b3:	mov    eax,ds:0x584579fc
  41a5b8:	enter  0x734a,0xe5
  41a5bc:	pushf  
  41a5bd:	xlat   BYTE PTR ds:[ebx]
  41a5be:	xchg   DWORD PTR [ebp+0x1954db91],edi
  41a5c4:	mov    ecx,ecx
  41a5c6:	push   eax
  41a5c7:	jle    0x41a609
  41a5c9:	clc    
  41a5ca:	and    ecx,DWORD PTR [ebp+0x46f46424]
  41a5d0:	mov    edx,0x21c39e5f
  41a5d5:	lea    ebp,[edx]
  41a5d7:	into   
  41a5d8:	ins    BYTE PTR es:[edi],dx
  41a5d9:	rcr    BYTE PTR [edi],0xee
  41a5dc:	(bad)  
  41a5dd:	(bad)  [edi+eiz*8+0x6fdaf158]
  41a5e4:	lock hlt 
  41a5e6:	cmp    DWORD PTR [esi],edx
  41a5e8:	and    BYTE PTR [edi-0x6825814b],dl
  41a5ee:	fisubr WORD PTR ds:0x823c4f13
  41a5f4:	dec    ebp
  41a5f5:	fidivr DWORD PTR [ebp+0x4700fa58]
  41a5fb:	out    0x12,ax
  41a5fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5ff:	mov    bl,0xca
  41a601:	mov    ebp,0x5f6fce25
  41a606:	sub    DWORD PTR [ecx-0x48],ecx
  41a609:	(bad)  
  41a60a:	scas   eax,DWORD PTR es:[edi]
  41a60b:	scas   al,BYTE PTR es:[edi]
  41a60c:	jno    0x41a5a3
  41a60e:	imul   DWORD PTR cs:[eax+0x1e11eee7]
  41a615:	xchg   BYTE PTR ds:0x2bdd07bb,ch
  41a61b:	fbld   TBYTE PTR [ebx-0x68687e59]
  41a621:	int    0x2e
  41a623:	psllq  mm1,mm2
  41a626:	mov    edx,0xdabfd8cc
  41a62b:	dec    edi
  41a62c:	nop
  41a62d:	mov    ah,ah
  41a62f:	push   edi
  41a630:	sub    eax,edx
  41a632:	fdiv   QWORD PTR [edx+0x7b]
  41a635:	cld    
  41a636:	jne    0x41a602
  41a638:	xchg   edi,eax
  41a639:	stc    
  41a63a:	jb     0x41a617
  41a63c:	mov    bl,BYTE PTR [ebx+ecx*4+0x5abb7275]
  41a643:	or     DWORD PTR es:[eax],ebp
  41a646:	loop   0x41a6af
  41a648:	icebp  
  41a649:	mov    al,0xee
  41a64b:	leave  
  41a64c:	mov    esp,0x6e533e44
  41a651:	fadd   DWORD PTR [edx+ecx*4+0x33765fc3]
  41a658:	jmp    FWORD PTR [eax]
  41a65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a65b:	in     al,dx
  41a65c:	loopne 0x41a603
  41a65e:	add    eax,DWORD PTR [edx+ebx*4-0x37cca7fe]
  41a665:	pushf  
  41a666:	pop    DWORD PTR [edi]
  41a668:	and    DWORD PTR [edx+esi*8-0x2f079f3f],ebx
  41a66f:	mov    ch,0x40
  41a671:	mov    ebp,0x8ca7a12b
  41a676:	sti    
  41a677:	mov    cl,0x2c
  41a679:	mov    dl,0x71
  41a67b:	nop
  41a67c:	add    eax,ecx
  41a67e:	cmp    esp,DWORD PTR [edx-0x1d]
  41a681:	pushf  
  41a682:	xchg   DWORD PTR [esi-0x49],eax
  41a685:	lds    esp,FWORD PTR ds:0xe22582d5
  41a68b:	and    eax,0xbd272125
  41a690:	cdq    
  41a691:	mov    esi,0xcb982255
  41a696:	or     eax,0x3f0d33c4
  41a69b:	push   ebx
  41a69c:	data16 adc BYTE PTR [esi-0x1d189204],0xa
  41a6a4:	inc    edi
  41a6a5:	xor    DWORD PTR [ebp+0x5cb10578],ebx
  41a6ab:	adc    cl,BYTE PTR [ecx+ecx*4-0xf]
  41a6af:	into   
  41a6b0:	out    0xa7,al
  41a6b2:	mov    al,ds:0xe0df5a46
  41a6b7:	sub    eax,0xd092952
  41a6bc:	mov    bh,BYTE PTR [ebx+0x1a68b6e9]
  41a6c2:	fs inc ecx
  41a6c4:	cmp    dl,BYTE PTR [esi+0x19]
  41a6c7:	(bad)  
  41a6c9:	pop    ss
  41a6ca:	jbe    0x41a730
  41a6cc:	fmul   DWORD PTR [edi+esi*1+0x75]
  41a6d0:	jbe    0x41a65f
  41a6d2:	clc    
  41a6d3:	ja     0x41a692
  41a6d5:	sar    BYTE PTR [esi],0x60
  41a6d8:	adc    edi,edi
  41a6da:	mov    dl,dl
  41a6dc:	test   BYTE PTR [ebp-0x3],dh
  41a6df:	push   ebp
  41a6e0:	sbb    al,0x1a
  41a6e2:	stc    
  41a6e3:	or     al,0x84
  41a6e5:	rcl    DWORD PTR [esp+ecx*1-0x3e42ed1f],1
  41a6ec:	mov    esp,0x65869abf
  41a6f1:	addr16 cs out dx,eax
  41a6f4:	pop    edi
  41a6f5:	fstp   DWORD PTR [esi]
  41a6f7:	test   DWORD PTR [ebx],0x701f2d95
  41a6fd:	cs push edx
  41a6ff:	mov    bh,0x9f
  41a701:	mov    edx,0x69840c
  41a706:	and    eax,0xd4847a20
  41a70b:	loope  0x41a699
  41a70d:	jae    0x41a6dc
  41a70f:	addr16 pusha 
  41a711:	pop    esp
  41a712:	xor    al,0x56
  41a714:	jecxz  0x41a757
  41a716:	in     eax,0x10
  41a718:	push   edx
  41a719:	xchg   edx,eax
  41a71a:	mov    esi,0x8c230f0b
  41a71f:	adc    al,0xa7
  41a721:	jae    0x41a732
  41a723:	(bad)  
  41a724:	aad    0xb
  41a726:	icebp  
  41a727:	rcl    esi,0xb4
  41a72a:	test   al,0xcf
  41a72c:	pop    ebp
  41a72d:	cmc    
  41a72e:	jge    0x41a730
  41a730:	add    BYTE PTR [eax],al
  41a732:	dec    esi
  41a733:	outs   dx,DWORD PTR ds:[esi]
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	mov    cs,WORD PTR [ecx+ebx*2+0x123c96d]
  41a745:	add    ch,dh
  41a747:	add    al,0x0
  41a749:	add    BYTE PTR [ebx-0x42],bh
  41a74c:	add    ecx,DWORD PTR [edi]
  41a74e:	retf   
  41a74f:	adc    dl,BYTE PTR [ecx]
  41a751:	stos   DWORD PTR es:[edi],eax
  41a752:	fnstsw WORD PTR ds:0xe21bdec5
  41a758:	mov    ecx,0x2ff2fec0
  41a75d:	(bad)  
  41a75e:	int    0x0
  41a760:	test   eax,0xec82732a
  41a765:	jne    0x41a7a8
  41a767:	cmp    ecx,DWORD PTR [edx+0x60]
  41a76a:	mov    esp,DWORD PTR [edx+0x3a]
  41a76d:	push   cs
  41a76e:	sub    BYTE PTR [edi-0x29],cl
  41a771:	mov    esp,0xed7d3818
  41a776:	shr    ecx,0x6d
  41a779:	add    eax,0x8a00f4c2
  41a77e:	add    bh,BYTE PTR [ebp+0x4]
  41a781:	mov    al,ds:0x5a289a64
  41a786:	fidivr WORD PTR [edi+0x62]
  41a789:	dec    edx
  41a78a:	push   ds
  41a78b:	rcr    BYTE PTR [ebx],0xa7
  41a78e:	or     esi,esi
  41a790:	adc    BYTE PTR [esi],al
  41a792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a793:	push   es
  41a794:	xchg   esi,eax
  41a795:	push   esp
  41a796:	jmp    0x3b37:0xaf3951c
  41a79d:	mov    bh,0xc8
  41a79f:	fwait
  41a7a0:	xlat   BYTE PTR ds:[ebx]
  41a7a1:	cmp    al,0x62
  41a7a3:	dec    ebx
  41a7a4:	sub    al,0x99
  41a7a6:	mov    esp,0xb09aeba5
  41a7ab:	jmp    0xe084:0xb61f9140
  41a7b2:	call   0x93f7:0x597c888a
  41a7b9:	je     0x41a789
  41a7bb:	xlat   BYTE PTR ds:[ebx]
  41a7bc:	jg     0x41a77c
  41a7be:	cmp    DWORD PTR gs:[ecx-0x5f299291],ecx
  41a7c5:	mov    al,0x8a
  41a7c7:	in     al,0x87
  41a7c9:	jno    0x41a778
  41a7cb:	stos   BYTE PTR es:[edi],al
  41a7cc:	(bad)  
  41a7cd:	aam    0x57
  41a7cf:	mov    ds:0xb7303d8d,eax
  41a7d4:	xlat   BYTE PTR ds:[ebx]
  41a7d5:	cwde   
  41a7d6:	pop    esi
  41a7d7:	cld    
  41a7d8:	shl    bl,cl
  41a7da:	cld    
  41a7db:	aad    0x66
  41a7dd:	mov    ah,0x5
  41a7df:	mov    ebp,0x785d6fba
  41a7e4:	mov    ecx,0x37d5bb85
  41a7e9:	stos   DWORD PTR es:[edi],eax
  41a7ea:	cmp    bl,BYTE PTR ds:0x64211bb8
  41a7f0:	push   ebx
  41a7f1:	loopne 0x41a7f7
  41a7f3:	mov    ecx,es
  41a7f5:	stos   DWORD PTR es:[edi],eax
  41a7f6:	sar    esi,1
  41a7f8:	mov    esi,0x9f473187
  41a7fd:	ja     0x41a83e
  41a7ff:	or     al,0x70
  41a801:	xor    DWORD PTR [eax],ebp
  41a803:	imul   esi,edx,0x63
  41a806:	test   ebp,edi
  41a808:	fwait
  41a809:	mov    edx,0xabe3faf3
  41a80e:	ja     0x41a7cf
  41a810:	jne    0x41a7bd
  41a812:	push   ss
  41a813:	(bad)  
  41a814:	nop
  41a815:	mov    ecx,0x6a8d87fb
  41a81a:	sbb    bh,dh
  41a81c:	push   ebx
  41a81d:	jnp    0x41a85b
  41a81f:	cwde   
  41a820:	pop    ebp
  41a821:	fcmovb st,st(0)
  41a823:	inc    ebp
  41a824:	or     eax,0xe4bb194c
  41a829:	add    al,0xd4
  41a82b:	or     ah,0x1f
  41a82e:	iret   
  41a82f:	(bad)  
  41a831:	(bad)  
  41a832:	fsub   DWORD PTR [eax+edi*8+0x7058b636]
  41a839:	dec    ebx
  41a83a:	adc    eax,0xe7d8b05b
  41a83f:	adc    al,dl
  41a841:	shl    DWORD PTR [edx+0x3c0b572f],0x40
  41a848:	sbb    eax,0xa03b14b1
  41a84d:	imul   BYTE PTR [ebx+edi*8-0x4a]
  41a851:	pusha  
  41a852:	jmp    0x3e721b55
  41a857:	push   edx
  41a858:	mov    ebp,0x75378173
  41a85d:	mov    esp,0x651a5e69
  41a862:	dec    ebx
  41a863:	sub    esp,DWORD PTR [ebp+0x3b]
  41a866:	mov    edi,DWORD PTR [edi-0x3e]
  41a869:	pop    esi
  41a86a:	sub    esi,ebp
  41a86c:	mov    dl,0x9d
  41a86e:	int3   
  41a86f:	push   esp
  41a870:	mov    ebp,0x5513cde0
  41a875:	xchg   ecx,eax
  41a876:	sti    
  41a877:	xchg   esi,eax
  41a878:	bswap  ecx
  41a87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a87b:	cmp    eax,0x82b12666
  41a880:	push   0xffffff89
  41a882:	sub    DWORD PTR [ebx+edi*8],ebp
  41a885:	jne    0x41a8a0
  41a887:	mov    ebp,0x56e0a884
  41a88c:	out    dx,al
  41a88d:	test   BYTE PTR [ebp-0x60],dl
  41a890:	loop   0x41a841
  41a892:	xchg   esi,eax
  41a893:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41a895:	in     al,0x62
  41a897:	imul   edx,DWORD PTR [ecx-0x4f37b4fe],0xe5c1bae2
  41a8a1:	leave  
  41a8a2:	std    
  41a8a3:	dec    edi
  41a8a4:	(bad)  
  41a8a5:	dec    esp
  41a8a6:	mov    al,ds:0x6087179d
  41a8ab:	std    
  41a8ac:	mov    edx,0x1b5ea681
  41a8b1:	es retf 
  41a8b3:	mov    eax,DWORD PTR [edi+0x4e]
  41a8b6:	push   ss
  41a8b7:	sahf   
  41a8b8:	mov    al,ds:0xfeeffa4b
  41a8bd:	imul   ebp,DWORD PTR [ebp+0x27],0xd28e5e86
  41a8c4:	inc    ebx
  41a8c5:	scas   al,BYTE PTR es:[edi]
  41a8c6:	in     eax,0x4d
  41a8c8:	cld    
  41a8c9:	sub    eax,0x5765edd0
  41a8ce:	int    0x75
  41a8d0:	je     0x41a854
  41a8d2:	fcmove st,st(3)
  41a8d4:	cmp    DWORD PTR [edx],eax
  41a8d6:	arpl   WORD PTR [ebp-0x44d0ced1],cx
  41a8dc:	lds    ebp,FWORD PTR es:[edi-0x62]
  41a8e0:	mov    al,ds:0x6a9b9991
  41a8e5:	cmp    eax,0xcc1c8890
  41a8ea:	mov    bh,0x82
  41a8ec:	pop    ecx
  41a8ed:	sbb    BYTE PTR [ebp+0x4a],0xda
  41a8f1:	sti    
  41a8f2:	bound  eax,QWORD PTR [eax]
  41a8f4:	stos   DWORD PTR es:[edi],eax
  41a8f5:	mov    WORD PTR [ebx+0x29],cs
  41a8f8:	inc    ebp
  41a8f9:	add    eax,DWORD PTR [edx-0x6f]
  41a8fc:	or     bl,BYTE PTR [edx]
  41a8fe:	loope  0x41a91d
  41a900:	pusha  
  41a901:	dec    ebp
  41a902:	test   DWORD PTR [ecx],edi
  41a904:	inc    esp
  41a905:	sbb    al,0x85
  41a907:	push   0x8
  41a909:	(bad)  
  41a90a:	mov    dh,0x26
  41a90c:	(bad)  
  41a90d:	aaa    
  41a90e:	inc    ecx
  41a90f:	cwde   
  41a910:	stc    
  41a911:	mov    edi,0x13e4ddf9
  41a916:	outs   dx,DWORD PTR ds:[esi]
  41a917:	mov    eax,ds:0xc34e554e
  41a91c:	iret   
  41a91d:	dec    esp
  41a91e:	mov    BYTE PTR [esi-0x2c8095d1],dl
  41a924:	fcmovb st,st(7)
  41a926:	cmp    DWORD PTR [edx+0x77ad1f80],ebx
  41a92c:	hlt    
  41a92d:	ja     0x41a947
  41a92f:	mov    eax,0x44ca6a6b
  41a934:	adc    al,bh
  41a936:	pop    ss
  41a937:	hlt    
  41a938:	aad    0x6e
  41a93a:	mov    ds:0x260a6c5f,eax
  41a93f:	mov    ds:0x5c617be4,al
  41a944:	and    ebx,DWORD PTR [edx-0x127b9189]
  41a94a:	pop    esp
  41a94b:	pushf  
  41a94c:	adc    al,ch
  41a94e:	dec    edx
  41a94f:	xor    BYTE PTR [esi+0x6007454c],0x76
  41a956:	iret   
  41a957:	xchg   ch,bh
  41a959:	aam    0x27
  41a95b:	cs push ebx
  41a95d:	iret   
  41a95e:	sbb    al,0xfa
  41a960:	scas   al,BYTE PTR es:[edi]
  41a961:	xor    DWORD PTR [eax+0x6192d392],esp
  41a967:	idiv   BYTE PTR [edi]
  41a969:	or     dl,dl
  41a96b:	sbb    edx,edi
  41a96d:	inc    eax
  41a96e:	imul   edx,DWORD PTR [edi+0x5],0xffffffb7
  41a972:	inc    esi
  41a973:	sahf   
  41a974:	gs inc ecx
  41a976:	pop    ss
  41a977:	jmp    0x41a909
  41a979:	pop    ebp
  41a97a:	jge    0x41a9b7
  41a97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a97d:	inc    esp
  41a97e:	popa   
  41a97f:	cli    
  41a980:	sahf   
  41a981:	adc    ebp,DWORD PTR [ebx+0x2]
  41a984:	test   eax,esp
  41a986:	ds inc ebp
  41a988:	sub    al,0x32
  41a98a:	loope  0x41a943
  41a98c:	fistp  WORD PTR [edi+ebx*8+0x34]
  41a990:	daa    
  41a991:	fimul  WORD PTR [esi-0x64]
  41a994:	and    BYTE PTR [esi+0x68],ah
  41a997:	mov    cl,0xf2
  41a999:	test   DWORD PTR [ebx-0x61],eax
  41a99c:	test   DWORD PTR [ebx],ebp
  41a99e:	jnp    0x41a96f
  41a9a0:	pop    edx
  41a9a1:	push   ebp
  41a9a2:	int3   
  41a9a3:	fs (bad) 
  41a9a5:	enter  0x6a38,0x1
  41a9a9:	aas    
  41a9aa:	adc    BYTE PTR ds:0xf8d3258a,0xd4
  41a9b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9b2:	lahf   
  41a9b3:	test   eax,0x5afcb689
  41a9b8:	and    al,0xee
  41a9ba:	scas   eax,DWORD PTR es:[edi]
  41a9bb:	test   DWORD PTR [esi+0x4e],edi
  41a9be:	mov    dl,0x92
  41a9c0:	in     al,0xe6
  41a9c2:	nop
  41a9c3:	mov    esi,0x6fce86d6
  41a9c8:	outs   dx,BYTE PTR ds:[esi]
  41a9c9:	bound  ebp,QWORD PTR [esi-0x12]
  41a9cc:	into   
  41a9cd:	cmp    ch,dh
  41a9cf:	dec    ecx
  41a9d0:	into   
  41a9d1:	lds    edx,FWORD PTR [ebx-0x399a7f73]
  41a9d7:	lods   al,BYTE PTR ds:[esi]
  41a9d8:	enter  0x166b,0xc
  41a9dc:	or     esp,ebx
  41a9de:	sub    bh,ah
  41a9e0:	xor    eax,0xf311715c
  41a9e5:	out    0x9b,al
  41a9e7:	dec    esi
  41a9e8:	ins    DWORD PTR es:[edi],dx
  41a9e9:	neg    DWORD PTR [ebx-0x52041cac]
  41a9ef:	xchg   edi,eax
  41a9f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9f1:	pop    edx
  41a9f2:	push   edi
  41a9f3:	pop    ecx
  41a9f4:	push   esi
  41a9f5:	jl     0x41aa52
  41a9f7:	mov    eax,ds:0x37c816e1
  41a9fc:	int    0xdf
  41a9fe:	jecxz  0x41aa40
  41aa00:	and    DWORD PTR [edi+eax*4],esi
  41aa03:	pop    ebx
  41aa04:	cwde   
  41aa05:	cmp    eax,0x8a0ed013
  41aa0a:	cmp    bh,0x36
  41aa0d:	into   
  41aa0e:	cmp    eax,0xc62d40e5
  41aa13:	dec    edx
  41aa14:	stc    
  41aa15:	fidivr WORD PTR [edi-0xe]
  41aa18:	bnd je 0x41a99c
  41aa1b:	xor    ebx,DWORD PTR [edi-0x5be627]
  41aa21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa22:	pop    esp
  41aa23:	ficomp DWORD PTR ds:0xbc01d35c
  41aa29:	push   cs
  41aa2a:	js     0x41aa98
  41aa2c:	sub    bl,BYTE PTR [ecx-0x2fc7e9df]
  41aa32:	ror    DWORD PTR [edx-0x1f105e64],cl
  41aa38:	sbb    cl,BYTE PTR [ecx+0x72]
  41aa3b:	dec    ebp
  41aa3c:	cmp    BYTE PTR [edi+0x6d4d1390],bl
  41aa42:	cmc    
  41aa43:	ds hlt 
  41aa45:	mov    ecx,0x1f50c613
  41aa4a:	pop    es
  41aa4b:	lds    edx,FWORD PTR [eax-0x6fcd003]
  41aa51:	sbb    eax,0x54b3b85f
  41aa56:	stos   DWORD PTR es:[edi],eax
  41aa57:	cmp    dh,ch
  41aa59:	pushf  
  41aa5a:	imul   edi,DWORD PTR [ebp-0x18aec1b4],0x3880accf
  41aa64:	test   al,0x46
  41aa66:	ins    BYTE PTR es:[edi],dx
  41aa67:	popa   
  41aa68:	mov    edx,0xa35707b8
  41aa6d:	jae    0x41aad0
  41aa6f:	jae    0x41aa3e
  41aa71:	pushf  
  41aa72:	xchg   BYTE PTR [ebx],dh
  41aa74:	lods   eax,DWORD PTR ds:[esi]
  41aa75:	cmp    eax,0x91a36c87
  41aa7a:	imul   esi,DWORD PTR [ebx-0x4bb438e],0xfffffff3
  41aa81:	and    ebp,DWORD PTR [ecx]
  41aa83:	lea    esi,[edi-0x45dca2a9]
  41aa89:	call   0xb4175c94
  41aa8e:	sbb    al,0x11
  41aa90:	daa    
  41aa91:	jle    0x41aa72
  41aa93:	xlat   BYTE PTR es:[ebx]
  41aa95:	push   ecx
  41aa96:	mov    esi,0x1cab30ab
  41aa9b:	js     0x41aa55
  41aa9d:	pop    ebx
  41aa9e:	icebp  
  41aa9f:	(bad)  
  41aaa0:	mov    bl,0xd
  41aaa2:	iret   
  41aaa3:	pushw  es
  41aaa5:	xor    eax,0x25d8bb2c
  41aaaa:	adc    eax,edx
  41aaac:	add    esp,DWORD PTR es:[edi-0x53c80119]
  41aab3:	fidivr WORD PTR [edi-0xc9d6f2c]
  41aab9:	into   
  41aaba:	mov    cl,0x37
  41aabc:	cmp    BYTE PTR [ebx+0x4fdd5565],0x9b
  41aac3:	test   eax,0xfd2e7ea2
  41aac8:	in     al,0x9a
  41aaca:	jbe    0x41ab43
  41aacc:	mov    al,0x4f
  41aace:	xchg   DWORD PTR [esi],esp
  41aad0:	mov    ch,0x4
  41aad2:	or     al,0xa1
  41aad4:	fisubr DWORD PTR [ebp+0x4d]
  41aad7:	jp     0x41aaec
  41aad9:	jne    0x41ab4d
  41aadb:	inc    DWORD PTR [edx+0x2f]
  41aade:	xor    DWORD PTR [ebp-0x3d],0x2b
  41aae2:	inc    ebp
  41aae3:	shl    ecx,1
  41aae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aae6:	jo     0x41aae7
  41aae8:	xlat   BYTE PTR ds:[ebx]
  41aae9:	mov    ah,0x8e
  41aaeb:	mov    al,0x67
  41aaed:	jne    0x41aae2
  41aaef:	aas    
  41aaf0:	pop    DWORD PTR [esi]
  41aaf2:	enter  0xd42,0x26
  41aaf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaf7:	out    dx,al
  41aaf8:	push   ss
  41aaf9:	sbb    eax,0xe4d6db0d
  41aafe:	add    DWORD PTR [ecx],ecx
  41ab00:	sahf   
  41ab01:	outs   dx,BYTE PTR ds:[esi]
  41ab02:	mov    ebx,0xdc1f2723
  41ab07:	les    ebx,FWORD PTR [esi+ecx*4+0x6f]
  41ab0b:	mov    ds:0xaf1b1b87,eax
  41ab10:	jnp    0x41aa9e
  41ab12:	fisubr WORD PTR [edi+0x1f3b8c40]
  41ab18:	adc    DWORD PTR [edi],edx
  41ab1a:	lods   eax,DWORD PTR ds:[esi]
  41ab1b:	xor    bl,BYTE PTR [ecx-0x59]
  41ab1e:	xchg   edi,eax
  41ab1f:	or     al,0x2d
  41ab21:	mov    bl,0x1
  41ab23:	dec    edi
  41ab24:	scas   al,BYTE PTR es:[edi]
  41ab25:	mov    eax,fs
  41ab27:	sbb    eax,0xe1557c64
  41ab2c:	xor    BYTE PTR [edx],cl
  41ab2e:	mov    edx,ss
  41ab30:	into   
  41ab31:	shl    BYTE PTR [edx+edx*8+0x7eb24771],cl
  41ab38:	test   eax,0x244191f7
  41ab3d:	fstp   QWORD PTR [ebx]
  41ab3f:	out    dx,eax
  41ab40:	test   BYTE PTR [ecx],al
  41ab42:	je     0x41ab4a
  41ab44:	call   0xd951:0xb56cee7
  41ab4b:	or     eax,0x7f8493cb
  41ab50:	test   al,0x76
  41ab52:	out    dx,eax
  41ab53:	mov    ch,0x4e
  41ab55:	add    DWORD PTR [ecx-0x5a],edi
  41ab58:	mov    cl,bh
  41ab5a:	sbb    ebx,DWORD PTR [eax]
  41ab5c:	or     DWORD PTR [ecx-0x249b894b],ebx
  41ab62:	das    
  41ab63:	in     eax,dx
  41ab64:	fwait
  41ab65:	rol    DWORD PTR [edi],cl
  41ab67:	sbb    ah,BYTE PTR [ebp+0x2b960fc0]
  41ab6d:	and    ebp,ecx
  41ab6f:	jmp    0x41ab83
  41ab71:	(bad)  
  41ab72:	out    dx,eax
  41ab73:	cmp    DWORD PTR [edx],esp
  41ab75:	ja     0x41abb8
  41ab77:	and    dl,BYTE PTR [edi+eax*1]
  41ab7a:	shl    DWORD PTR [ebx],cl
  41ab7c:	cmp    DWORD PTR [edi+0x65],ecx
  41ab7f:	fsubr  DWORD PTR [eax+0x42]
  41ab82:	scas   al,BYTE PTR es:[edi]
  41ab83:	xchg   ebp,eax
  41ab84:	loopne 0x41ab13
  41ab86:	jae    0x41ab3f
  41ab88:	and    DWORD PTR [ecx-0x791d2771],esp
  41ab8e:	lods   eax,DWORD PTR ds:[esi]
  41ab8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab90:	retf   
  41ab91:	(bad)  [ebx]
  41ab93:	jb     0x41ab29
  41ab95:	sbb    eax,0xfb167d6c
  41ab9a:	adc    BYTE PTR [ecx-0x1e],ah
  41ab9d:	hlt    
  41ab9e:	popf   
  41ab9f:	and    al,0x34
  41aba1:	in     al,dx
  41aba2:	fidiv  DWORD PTR [esi+0x5a040530]
  41aba8:	loope  0x41abc7
  41abaa:	test   esi,edi
  41abac:	loop   0x41ab31
  41abae:	jle    0x41abcb
  41abb0:	ins    BYTE PTR es:[edi],dx
  41abb1:	(bad)  [eax]
  41abb3:	dec    eax
  41abb4:	push   eax
  41abb5:	call   0x95ea0b7
  41abba:	inc    eax
  41abbb:	mov    cl,0xd0
  41abbd:	or     DWORD PTR [eax+0x4f],edx
  41abc0:	cmc    
  41abc1:	rol    BYTE PTR [ebp+0x2b705ea1],1
  41abc7:	imul   ebp,DWORD PTR [eax+ecx*2-0x17],0x62
  41abcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abcd:	pop    eax
  41abce:	fild   DWORD PTR [ebx+edi*2-0x6281dfe2]
  41abd5:	or     eax,0x69e422b4
  41abda:	push   edi
  41abdb:	cmp    al,0xef
  41abdd:	and    eax,0x19709982
  41abe2:	and    eax,0x80866266
  41abe7:	mov    ch,0xe6
  41abe9:	mov    ah,0xf9
  41abeb:	outs   dx,DWORD PTR ds:[esi]
  41abec:	dec    esp
  41abed:	ret    0xe17a
  41abf0:	mov    edi,0xe7585dbb
  41abf5:	sub    eax,0x2eea99ea
  41abfa:	cli    
  41abfb:	rol    DWORD PTR [esi+eax*1],1
  41abfe:	(bad)  
  41abff:	pop    edx
  41ac00:	ret    0x3e0f
  41ac03:	mov    bl,0x41
  41ac05:	jne    0x41abed
  41ac07:	mov    BYTE PTR [esi-0x20],bh
  41ac0a:	(bad)  
  41ac0b:	mov    edx,0xaba04f79
  41ac10:	push   edi
  41ac11:	es daa 
  41ac13:	popa   
  41ac14:	mov    DWORD PTR [esi+0x236d5a66],edx
  41ac1a:	jl     0x41ac0f
  41ac1c:	cli    
  41ac1d:	dec    edi
  41ac1e:	push   cs
  41ac1f:	dec    ecx
  41ac20:	(bad)  
  41ac21:	and    eax,0x397bfb48
  41ac26:	cdq    
  41ac27:	or     DWORD PTR [ecx],ebx
  41ac29:	dec    edx
  41ac2a:	fnstenv [eax]
  41ac2c:	cmp    DWORD PTR [ebp+0x46b78d1b],edi
  41ac32:	push   ss
  41ac33:	mov    edx,0x8d03b53e
  41ac38:	or     BYTE PTR [ecx],ah
  41ac3a:	pop    ecx
  41ac3b:	add    al,0xd0
  41ac3d:	sbb    edx,DWORD PTR [edi+0x4d000000]
  41ac43:	dec    ebp
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	or     DWORD PTR [ecx+0x28befe61],ecx
  41ac54:	add    DWORD PTR [eax],eax
  41ac56:	cmc    
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR [edi],ch
  41ac5b:	outs   dx,DWORD PTR ds:[esi]
  41ac5c:	call   0xbbed5cc2
  41ac61:	fnstenv [edi-0x4bd9148b]
  41ac67:	enter  0x9272,0x8f
  41ac6b:	ret    0x8805
  41ac6e:	arpl   WORD PTR [ecx-0x45a86b4a],bx
  41ac74:	out    0xcd,eax
  41ac76:	sbb    ebx,DWORD PTR [edx-0x36db1db]
  41ac7c:	jbe    0x41ac53
  41ac7e:	loope  0x41ac59
  41ac80:	(bad)  [ecx+0x17ae0fd]
  41ac86:	push   ss
  41ac87:	mov    DWORD PTR [eax+0x729aec89],ecx
  41ac8d:	in     al,dx
  41ac8e:	(bad)  
  41ac8f:	jle    0x41ac22
  41ac91:	or     al,0x35
  41ac93:	daa    
  41ac94:	or     al,0x88
  41ac96:	sbb    esi,DWORD PTR [eax+0x5a18f474]
  41ac9c:	je     0x41ac7e
  41ac9e:	add    al,BYTE PTR [edi+edi*1-0x3e]
  41aca2:	sub    dh,0xc5
  41aca5:	dec    eax
  41aca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aca7:	loopne 0x41acb4
  41aca9:	inc    esi
  41acaa:	mov    dh,0x44
  41acac:	(bad)  
  41acad:	jns    0x41ad29
  41acaf:	xlat   BYTE PTR ds:[ebx]
  41acb0:	(bad)  
  41acb2:	imul   esp,DWORD PTR [edx-0x80],0x65
  41acb6:	aad    0xa3
  41acb8:	push   edi
  41acb9:	ja     0x41ace4
  41acbb:	sbb    eax,0x9fc8560f
  41acc0:	sub    dl,BYTE PTR [ebp+0x6d89db6d]
  41acc6:	xlat   BYTE PTR ds:[ebx]
  41acc7:	xor    ah,BYTE PTR [esi+edx*2-0x3051ccc8]
  41acce:	adc    DWORD PTR [ecx-0x41],ebx
  41acd1:	aaa    
  41acd2:	stos   BYTE PTR es:[edi],al
  41acd3:	inc    ebp
  41acd4:	leave  
  41acd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acd6:	(bad)  
  41acd7:	sbb    eax,0x2d4f88ee
  41acdc:	xchg   esp,eax
  41acdd:	fbstp  TBYTE PTR [ecx]
  41acdf:	cmp    bh,ch
  41ace1:	repz mov al,ds:0xdfece8f7
  41ace7:	add    DWORD PTR [ebp-0x53],esi
  41acea:	xchg   esp,eax
  41aceb:	and    ah,BYTE PTR [edx]
  41aced:	dec    eax
  41acee:	fidivr DWORD PTR [esi-0x28c5a1d3]
  41acf4:	fmul   st,st(6)
  41acf6:	jmp    0x41aca0
  41acf8:	test   al,0xf9
  41acfa:	cmp    eax,0xc649b701
  41acff:	mov    edx,0xf206af27
  41ad04:	out    dx,eax
  41ad05:	das    
  41ad06:	push   edx
  41ad07:	xor    eax,DWORD PTR [edx+0x7cb98ef3]
  41ad0d:	push   ebx
  41ad0e:	pop    ebp
  41ad0f:	sbb    DWORD PTR [eax+edx*2-0x4a9d9788],edi
  41ad16:	dec    esp
  41ad17:	scas   eax,DWORD PTR es:[edi]
  41ad18:	sbb    DWORD PTR [edx-0x55af056d],esi
  41ad1e:	mov    ah,0x2f
  41ad20:	mov    ebx,0x2e288b2f
  41ad25:	int    0x27
  41ad27:	sub    DWORD PTR [ebx],esi
  41ad29:	jge    0x41ada4
  41ad2b:	(bad)  
  41ad2c:	data16 mov dh,0xc3
  41ad2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad30:	sbb    ebx,DWORD PTR [ecx+edi*8+0x705f8e35]
  41ad37:	outs   dx,BYTE PTR ds:[esi]
  41ad38:	rcl    DWORD PTR [edi],0x72
  41ad3b:	sbb    BYTE PTR ds:0x2a8df755,ah
  41ad41:	mov    edi,gs
  41ad43:	pop    edx
  41ad44:	aad    0x15
  41ad46:	mov    cl,0xa5
  41ad48:	mov    al,ds:0x810e05f7
  41ad4d:	sbb    BYTE PTR [edi],bh
  41ad4f:	cli    
  41ad50:	pop    ecx
  41ad51:	cwde   
  41ad52:	and    DWORD PTR [ebx+eiz*8-0x40f44fe6],ecx
  41ad59:	and    esi,edi
  41ad5b:	mov    ecx,0x5e87b783
  41ad60:	fcomi  st,st(5)
  41ad62:	test   DWORD PTR [edi],ebp
  41ad64:	aam    0x4
  41ad66:	xor    al,0x52
  41ad68:	(bad)  
  41ad6a:	retf   0x59e1
  41ad6d:	fst    st(7)
  41ad6f:	push   ebp
  41ad70:	adc    BYTE PTR [ebx+0x9],bl
  41ad73:	jno    0x41ad86
  41ad75:	mov    ds:0xbbd01bdd,al
  41ad7a:	push   esp
  41ad7b:	jae    0x41ad68
  41ad7d:	cld    
  41ad7e:	jp     0x41ad7c
  41ad80:	in     eax,dx
  41ad81:	mov    al,0x15
  41ad83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad84:	sbb    DWORD PTR [esi-0x4f],edi
  41ad87:	lods   al,BYTE PTR ds:[esi]
  41ad88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad89:	mov    bh,0x21
  41ad8b:	push   ebx
  41ad8c:	arpl   WORD PTR [edi+0x55],bx
  41ad8f:	repnz pop eax
  41ad91:	mov    dh,0x30
  41ad93:	loopne 0x41ad44
  41ad95:	pop    es
  41ad96:	jge    0x41ad3f
  41ad98:	lea    esi,[esi+0x32daab5]
  41ad9e:	mov    al,BYTE PTR [eax-0x15]
  41ada1:	cmp    al,BYTE PTR [edx+0x593db2ab]
  41ada7:	mov    ebp,0x13a8e79
  41adac:	push   ss
  41adad:	lea    edx,[ecx+0x13c0b73]
  41adb3:	and    eax,0xfe7c4ade
  41adb8:	enter  0x2b95,0x1a
  41adbc:	js     0x41adaf
  41adbe:	jg     0x41ad5f
  41adc0:	jmp    0xac9e:0x8092504d
  41adc7:	pop    esp
  41adc8:	clc    
  41adc9:	outs   dx,BYTE PTR ds:[esi]
  41adca:	fwait
  41adcb:	and    al,0x7d
  41adcd:	in     al,dx
  41adce:	int    0x9
  41add0:	push   ds
  41add1:	mov    eax,0x3d1c53d8
  41add6:	cmp    al,0xc7
  41add8:	cmp    al,0xce
  41adda:	daa    
  41addb:	retf   
  41addc:	xchg   ebx,eax
  41addd:	xor    bh,BYTE PTR [ebp-0x557402d9]
  41ade3:	inc    ecx
  41ade4:	(bad)  
  41ade5:	shl    DWORD PTR [ebx-0x72f62528],cl
  41adeb:	in     eax,0x6a
  41aded:	test   esp,esp
  41adef:	out    dx,eax
  41adf0:	inc    edx
  41adf1:	pop    esp
  41adf2:	aaa    
  41adf3:	mov    eax,0x148e2b78
  41adf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adf9:	xor    eax,0x8d9c852b
  41adfe:	push   eax
  41adff:	xchg   ecx,eax
  41ae00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae01:	rcl    ebp,0xa8
  41ae04:	in     eax,0x10
  41ae06:	pop    es
  41ae07:	stos   BYTE PTR es:[edi],al
  41ae08:	mov    ch,BYTE PTR [ecx-0x2c64a95e]
  41ae0e:	push   ss
  41ae0f:	or     esp,DWORD PTR [edx+0xffcca18]
  41ae15:	inc    ebx
  41ae16:	adc    al,0xbd
  41ae18:	xchg   edi,eax
  41ae19:	rol    DWORD PTR [edi+edi*4+0x3ed7b74c],cl
  41ae20:	imul   ebp,DWORD PTR [ecx],0x26
  41ae23:	sub    cl,bl
  41ae25:	dec    ecx
  41ae26:	cmp    DWORD PTR [edx+eax*1+0x5b],esi
  41ae2a:	(bad)  
  41ae2b:	jmp    0x78aac54e
  41ae30:	sub    al,0x34
  41ae32:	or     eax,0x5a81e4d
  41ae37:	loope  0x41ae56
  41ae39:	scas   eax,DWORD PTR es:[edi]
  41ae3a:	outs   dx,DWORD PTR gs:[esi]
  41ae3c:	call   DWORD PTR [esi+0x51]
  41ae3f:	push   0xfffffff7
  41ae41:	jns    0x41ae18
  41ae43:	sar    BYTE PTR [edi-0x6c],1
  41ae46:	mov    ds:0x922f6511,eax
  41ae4b:	push   ebx
  41ae4c:	mov    esp,0x92e07bdd
  41ae51:	sbb    eax,0x5c00b346
  41ae56:	inc    esp
  41ae57:	(bad)  
  41ae58:	ins    DWORD PTR es:[edi],dx
  41ae59:	cmp    eax,esp
  41ae5b:	aam    0xd1
  41ae5d:	push   0x1a0ea220
  41ae62:	repz cmp eax,0xb9f6df33
  41ae68:	in     eax,0xcb
  41ae6a:	sbb    BYTE PTR [ecx-0x3],cl
  41ae6d:	mov    eax,0xdbc24037
  41ae72:	xor    ebp,DWORD PTR [eax-0x10919f1]
  41ae78:	(bad)  
  41ae79:	mov    dl,0x2c
  41ae7b:	mov    ebp,0xa7569c57
  41ae80:	and    BYTE PTR [edx],bl
  41ae82:	imul   edx,DWORD PTR [esi+eax*8-0x72],0x27f5bb35
  41ae8a:	es or  bh,al
  41ae8d:	nop
  41ae8e:	pop    ebx
  41ae8f:	sahf   
  41ae90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae91:	popf   
  41ae92:	popa   
  41ae93:	neg    DWORD PTR [ecx+0x6ea2e709]
  41ae99:	add    BYTE PTR [edi-0x2e],bh
  41ae9c:	fwait
  41ae9d:	dec    esi
  41ae9e:	aad    0xaf
  41aea0:	jbe    0x41aee6
  41aea2:	addr16 push cs
  41aea4:	fwait
  41aea5:	jmp    0xcefed1c9
  41aeaa:	mov    ds:0x13d836bd,eax
  41aeaf:	in     eax,dx
  41aeb0:	dec    esi
  41aeb1:	push   ds
  41aeb2:	jecxz  0x41ae71
  41aeb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeb5:	fidiv  WORD PTR [eax-0x24]
  41aeb8:	cmp    DWORD PTR [esi+esi*2],eax
  41aebb:	pop    eax
  41aebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aebd:	outs   dx,DWORD PTR ds:[esi]
  41aebe:	xlat   BYTE PTR ds:[ebx]
  41aebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aec0:	dec    ebp
  41aec1:	sub    BYTE PTR [ecx+edi*1+0x16],cl
  41aec5:	mov    eax,0xe6116a50
  41aeca:	stos   DWORD PTR es:[edi],eax
  41aecb:	jge    0x41ae9f
  41aecd:	lahf   
  41aece:	adc    al,0x9c
  41aed0:	pop    ss
  41aed1:	retf   0xb867
  41aed4:	es inc ebx
  41aed6:	int3   
  41aed7:	not    BYTE PTR [ebx]
  41aed9:	push   es
  41aeda:	ret    
  41aedb:	(bad)  
  41aedc:	sbb    esp,DWORD PTR [edi+ebx*8]
  41aedf:	or     BYTE PTR [ecx+0xc52799d],ch
  41aee5:	sbb    eax,0xe525b58d
  41aeea:	jge    0x41af67
  41aeec:	xchg   edx,eax
  41aeed:	repz iret 
  41aeef:	nop
  41aef0:	rcr    ecx,cl
  41aef2:	dec    ecx
  41aef3:	out    0x51,eax
  41aef5:	fcmovbe st,st(4)
  41aef7:	cld    
  41aef8:	out    0xb1,eax
  41aefa:	adc    BYTE PTR [eax+0x10c0bfb6],ah
  41af00:	xchg   ecx,eax
  41af01:	fstp   QWORD PTR [ebx-0x22fc9727]
  41af07:	or     DWORD PTR [ebp-0x2b],ebx
  41af0a:	stos   BYTE PTR es:[edi],al
  41af0b:	out    dx,al
  41af0c:	pushf  
  41af0d:	mov    BYTE PTR [edi],cl
  41af0f:	pop    esp
  41af10:	ds sub edx,0x867fcfbd
  41af17:	fwait
  41af18:	ja     0x41aeb5
  41af1a:	lods   al,BYTE PTR ds:[esi]
  41af1b:	nop
  41af1c:	inc    eax
  41af1d:	sbb    BYTE PTR [ebp+0x716f3271],dh
  41af23:	jbe    0x41af64
  41af25:	xor    BYTE PTR [ebx-0x109fe981],dh
  41af2b:	xchg   ebx,eax
  41af2c:	sub    eax,0x21b75457
  41af31:	push   edi
  41af32:	(bad)  
  41af34:	shl    DWORD PTR [esp+edi*2-0x34],cl
  41af38:	add    eax,0x8200595b
  41af3d:	loope  0x41af6a
  41af3f:	icebp  
  41af40:	(bad)  
  41af42:	lods   eax,DWORD PTR ds:[esi]
  41af43:	pop    ecx
  41af44:	mov    gs:0xc4f855fb,al
  41af4a:	jbe    0x41aeff
  41af4c:	nop
  41af4d:	cld    
  41af4e:	xor    bl,bl
  41af50:	clc    
  41af51:	pusha  
  41af52:	and    eax,0x1c4050bc
  41af57:	push   cs
  41af58:	imul   ebx,DWORD PTR [edx+0x5f3efea3],0xfe072982
  41af62:	push   edi
  41af63:	data16 mov BYTE PTR [esi-0x2bd42734],0xfc
  41af6b:	xor    BYTE PTR [ecx],ch
  41af6d:	loop   0x41af10
  41af6f:	inc    ebx
  41af70:	out    0x2a,eax
  41af72:	call   0x5e2df897
  41af77:	or     dl,bh
  41af79:	mov    dh,BYTE PTR [esi+ebp*2]
  41af7c:	inc    ebx
  41af7d:	call   0x5bca:0x8442d657
  41af84:	imul   ecx,DWORD PTR [eax],0x5
  41af87:	je     0x41af81
  41af89:	leave  
  41af8a:	call   0x26b2:0xd12999e3
  41af91:	pop    ebx
  41af92:	mov    WORD PTR [edi],ds
  41af94:	cwde   
  41af95:	cmp    DWORD PTR [esp+ecx*4-0x20],eax
  41af99:	(bad)  
  41af9c:	or     eax,0x69da7665
  41afa1:	jecxz  0x41afd3
  41afa3:	les    eax,FWORD PTR [edi-0x6aa5cc1d]
  41afa9:	shl    DWORD PTR [ebx+eax*4],0xee
  41afad:	ins    DWORD PTR es:[edi],dx
  41afae:	fstp   st(6)
  41afb0:	lahf   
  41afb1:	enter  0xb450,0xf1
  41afb5:	sub    ebp,ebp
  41afb7:	(bad)  
  41afb9:	push   es
  41afba:	mov    ebp,0xdca2f9a5
  41afbf:	pop    esi
  41afc0:	outs   dx,DWORD PTR ds:[esi]
  41afc1:	ret    0x3a46
  41afc4:	pop    ss
  41afc5:	ins    BYTE PTR es:[edi],dx
  41afc6:	and    edi,DWORD PTR [edx]
  41afc8:	imul   esp,DWORD PTR [ebp-0x2e],0x9e008fb6
  41afcf:	fnstenv ds:0xe6f67534
  41afd5:	lock neg DWORD PTR [ebp-0x5f]
  41afd9:	out    0x56,al
  41afdb:	xchg   edx,eax
  41afdc:	dec    edx
  41afdd:	fs shr dh,1
  41afe0:	mov    bl,bl
  41afe2:	stc    
  41afe3:	xchg   ecx,eax
  41afe4:	repnz into 
  41afe6:	loop   0x41af9a
  41afe8:	jb     0x41afe6
  41afea:	ins    DWORD PTR es:[edi],dx
  41afeb:	jno    0x41aff0
  41afed:	daa    
  41afee:	rcl    DWORD PTR [ebx+0x7f4c7b37],cl
  41aff4:	xor    ch,BYTE PTR ds:0x723805d5
  41affa:	jp     0x41afc7
  41affc:	dec    esi
  41affd:	(bad)  
  41affe:	mov    ch,0xe1
  41b000:	jle    0x41b006
  41b002:	dec    edi
  41b003:	repnz fwait
  41b005:	stc    
  41b006:	adc    ch,BYTE PTR gs:0x65b41b3b
  41b00d:	cmp    esi,edi
  41b00f:	or     eax,0x7bdac2cd
  41b014:	icebp  
  41b015:	sar    BYTE PTR [edi-0x50155b66],1
  41b01b:	pusha  
  41b01c:	cmp    DWORD PTR [edi+0x6693057],ebx
  41b022:	inc    ebx
  41b023:	retf   0x59da
  41b026:	and    al,0x86
  41b028:	xchg   ebp,eax
  41b029:	and    BYTE PTR [esi+0x31],al
  41b02c:	mov    al,0x5a
  41b02e:	mul    DWORD PTR [esi]
  41b030:	fld    DWORD PTR [edx]
  41b032:	xchg   ebp,eax
  41b033:	push   edx
  41b034:	aas    
  41b035:	xor    BYTE PTR [esi],cl
  41b037:	xor    al,0xa3
  41b039:	inc    ecx
  41b03a:	cmp    DWORD PTR ds:0x66873f2d,edx
  41b040:	sub    esi,edx
  41b042:	push   ebp
  41b043:	add    ecx,DWORD PTR [edx-0x62]
  41b046:	out    0xb4,eax
  41b048:	std    
  41b049:	jmp    0x41b05c
  41b04b:	adc    cl,cl
  41b04d:	dec    ebp
  41b04e:	jle    0x41b0ac
  41b050:	(bad)  
  41b052:	pusha  
  41b053:	bound  esi,QWORD PTR [edi+ecx*1-0x74]
  41b057:	mov    edi,eax
  41b059:	aad    0x90
  41b05b:	inc    ebx
  41b05c:	mov    ds:0xdb53fc90,al
  41b061:	xchg   ebp,eax
  41b062:	sub    al,0x7a
  41b064:	das    
  41b065:	sbb    al,0x23
  41b067:	out    dx,al
  41b068:	push   ebx
  41b069:	inc    ecx
  41b06a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b06b:	add    BYTE PTR [edx-0x6f],cl
  41b06e:	sub    esp,eax
  41b070:	gs mov esi,cs
  41b073:	jnp    0x41b09f
  41b075:	fbstp  TBYTE PTR [esi+0x563ad1d0]
  41b07b:	ins    BYTE PTR es:[edi],dx
  41b07c:	inc    BYTE PTR [esi+0x25bb28d]
  41b082:	fsub   DWORD PTR [ebx-0xd]
  41b085:	ret    
  41b086:	mov    ah,0x9d
  41b088:	lea    edx,[edx]
  41b08a:	and    eax,0xe76e92eb
  41b08f:	and    eax,0x580c2f08
  41b094:	and    BYTE PTR [edx+0x22c2ecc9],cl
  41b09a:	into   
  41b09b:	xor    edi,DWORD PTR [edx]
  41b09d:	cmp    BYTE PTR [ebx-0x9],cl
  41b0a0:	adc    al,0x9e
  41b0a2:	cmp    eax,0xb6bdfaa2
  41b0a7:	inc    esi
  41b0a8:	inc    esp
  41b0a9:	xchg   esp,eax
  41b0aa:	lods   eax,DWORD PTR ds:[esi]
  41b0ab:	mov    BYTE PTR [ebp-0x8],bh
  41b0ae:	fs xor al,0x93
  41b0b1:	mov    al,ds:0x7c865821
  41b0b6:	push   ebx
  41b0b7:	arpl   WORD PTR [ebp+0x5594b24e],sp
  41b0bd:	pop    edx
  41b0be:	jle    0x41b11b
  41b0c0:	fs dec edx
  41b0c2:	(bad)  
  41b0c4:	pop    ebx
  41b0c5:	jae    0x41b08e
  41b0c7:	cmp    ebp,0xffffffdc
  41b0ca:	mov    bh,0xb
  41b0cc:	pushf  
  41b0cd:	in     eax,dx
  41b0ce:	ins    DWORD PTR es:[edi],dx
  41b0cf:	out    0xf6,al
  41b0d1:	mov    dh,0xd
  41b0d3:	adc    ebp,eax
  41b0d5:	sbb    BYTE PTR [ecx+0x54a874ab],0x19
  41b0dc:	mov    esp,0xad64d292
  41b0e1:	xor    eax,0x9959dac0
  41b0e6:	stos   BYTE PTR es:[edi],al
  41b0e7:	push   ebp
  41b0e8:	lods   al,BYTE PTR ds:[esi]
  41b0e9:	push   edi
  41b0ea:	jae    0x41b13e
  41b0ec:	sub    ah,BYTE PTR [ecx]
  41b0ee:	jb     0x41b09f
  41b0f0:	std    
  41b0f1:	imul   eax,DWORD PTR [esi],0xbd1ff0fd
  41b0f7:	(bad)  
  41b0f8:	loop   0x41b144
  41b0fa:	jae    0x41b118
  41b0fc:	mov    WORD PTR [edx],fs
  41b0fe:	leave  
  41b0ff:	test   al,0x53
  41b101:	cdq    
  41b102:	into   
  41b103:	cmc    
  41b104:	adc    DWORD PTR ds:0xe027bf1a,ecx
  41b10a:	pop    eax
  41b10b:	or     edi,ecx
  41b10d:	mov    dh,0x49
  41b10f:	cmp    cl,bl
  41b111:	js     0x41b095
  41b113:	aaa    
  41b114:	cmp    ebx,ebx
  41b116:	add    BYTE PTR ds:0xe19dd066,al
  41b11c:	cdq    
  41b11d:	call   0x4410a447
  41b122:	pop    ebp
  41b123:	pop    esp
  41b124:	daa    
  41b125:	sbb    eax,0x575c8eb1
  41b12a:	jnp    0x41b149
  41b12c:	div    BYTE PTR [eax-0x41]
  41b12f:	pop    edi
  41b130:	aaa    
  41b131:	ins    BYTE PTR es:[edi],dx
  41b132:	test   dh,0xe1
  41b135:	aas    
  41b136:	icebp  
  41b137:	in     eax,dx
  41b138:	call   0x278d6c84
  41b13d:	adc    eax,0x68b13897
  41b142:	jns    0x41b1c2
  41b144:	adc    al,0x67
  41b146:	sbb    al,0xc6
  41b148:	add    DWORD PTR [eax-0x4],ecx
  41b14b:	pop    ebx
  41b14c:	fmul   QWORD PTR [edi+0x26]
  41b14f:	add    BYTE PTR [eax],al
  41b151:	add    ah,bh
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	ret    0xea3c
  41b161:	xor    eax,0x12db3
  41b166:	cmc    
  41b167:	add    al,0x0
  41b169:	add    BYTE PTR [esi+0x69a11967],bl
  41b16f:	je     0x41b1a1
  41b171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b172:	jns    0x41b150
  41b174:	les    eax,FWORD PTR [ecx+0x5d]
  41b177:	out    dx,al
  41b178:	xchg   esp,eax
  41b179:	je     0x41b1c4
  41b17b:	stos   DWORD PTR es:[edi],eax
  41b17c:	xchg   edx,eax
  41b17d:	xor    al,0x2b
  41b17f:	fucomip st,st(3)
  41b181:	ins    BYTE PTR es:[edi],dx
  41b182:	lods   al,BYTE PTR ds:[esi]
  41b183:	into   
  41b184:	nop
  41b185:	in     al,dx
  41b186:	add    al,0x9b
  41b188:	pop    ebx
  41b189:	add    esp,edi
  41b18b:	push   ebx
  41b18c:	push   es
  41b18d:	dec    esi
  41b18e:	dec    esp
  41b18f:	outs   dx,DWORD PTR ds:[esi]
  41b190:	xor    ebx,DWORD PTR [ebp+0x55]
  41b193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b194:	mov    al,ds:0xa0ccc518
  41b199:	mov    cs,WORD PTR [ebx]
  41b19b:	test   dh,al
  41b19d:	imul   ecx,DWORD PTR [ecx+0x65e3a889],0xc2f364d3
  41b1a7:	push   cs
  41b1a8:	sub    edx,ebx
  41b1aa:	rcl    DWORD PTR [ebx],0x24
  41b1ad:	xlat   BYTE PTR ds:[ebx]
  41b1ae:	sub    ecx,DWORD PTR [eax+0x2d]
  41b1b1:	out    0x4e,eax
  41b1b3:	ja     0x41b169
  41b1b5:	jge    0x41b1b3
  41b1b7:	gs pop bp
  41b1ba:	add    al,0x9f
  41b1bc:	(bad)  
  41b1bd:	sbb    DWORD PTR [esi+ecx*1+0x308e00a4],edx
  41b1c4:	push   es
  41b1c5:	xor    esi,DWORD PTR cs:[esi+edx*8]
  41b1c9:	loop   0x41b239
  41b1cb:	pusha  
  41b1cc:	pop    ds
  41b1cd:	out    dx,eax
  41b1ce:	lods   eax,DWORD PTR ds:[esi]
  41b1cf:	fstp   DWORD PTR [ecx-0x53]
  41b1d2:	jl     0x41b1d6
  41b1d4:	cmp    BYTE PTR [ecx-0x73],0x43
  41b1d8:	fdivr  st(1),st
  41b1da:	out    dx,eax
  41b1db:	jns    0x41b21a
  41b1dd:	outs   dx,DWORD PTR ds:[esi]
  41b1de:	xchg   ebx,eax
  41b1df:	push   ebx
  41b1e0:	in     eax,dx
  41b1e1:	sub    al,0x65
  41b1e3:	pop    es
  41b1e4:	add    al,0x8a
  41b1e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1e7:	lahf   
  41b1e8:	lahf   
  41b1e9:	inc    esp
  41b1ea:	sbb    al,0xd6
  41b1ec:	aam    0x25
  41b1ee:	hlt    
  41b1ef:	scas   eax,DWORD PTR es:[edi]
  41b1f0:	(bad)  
  41b1f1:	ret    0x99bc
  41b1f4:	shr    BYTE PTR [esi],cl
  41b1f6:	add    eax,0x4cac64ed
  41b1fb:	xchg   ecx,eax
  41b1fc:	push   es
  41b1fd:	data16 or BYTE PTR [esi-0x5b4aa585],cl
  41b204:	pop    eax
  41b205:	jp     0x41b190
  41b207:	pop    eax
  41b208:	jbe    0x41b1c6
  41b20a:	push   ebp
  41b20b:	mov    ds:0xb04abc81,al
  41b210:	cmp    eax,0x3115b46d
  41b215:	out    0xfa,al
  41b217:	push   ds
  41b218:	add    bh,cl
  41b21a:	jl     0x41b297
  41b21c:	or     bh,BYTE PTR [ebp+eiz*2-0x1f23d8bb]
  41b223:	add    eax,0x8a4a8532
  41b228:	das    
  41b229:	retf   
  41b22a:	fcom   DWORD PTR [edi-0x6ff36377]
  41b230:	dec    ebp
  41b231:	and    al,0xf2
  41b233:	lock loop 0x41b22f
  41b236:	mov    bl,BYTE PTR [ebx+eiz*4-0x73d6f6be]
  41b23d:	xchg   edi,eax
  41b23e:	test   al,0x52
  41b240:	leave  
  41b241:	xor    DWORD PTR [esi],esi
  41b243:	idiv   DWORD PTR [ebx]
  41b245:	jp     0x41b205
  41b247:	outs   dx,DWORD PTR ds:[esi]
  41b248:	std    
  41b249:	leave  
  41b24a:	xor    DWORD PTR ds:[edi-0x1c3074ae],edx
  41b251:	pop    esp
  41b252:	add    cl,BYTE PTR ds:0xec08fcc2
  41b258:	and    edi,0xca662bdb
  41b25e:	xchg   ebp,eax
  41b25f:	aad    0x97
  41b261:	mov    al,0x82
  41b263:	adc    bl,BYTE PTR [eax-0x77]
  41b266:	clc    
  41b267:	mov    DWORD PTR [edx-0x393ab9eb],esp
  41b26d:	arpl   WORD PTR [esi+0x67],sp
  41b270:	lock or eax,0xc1f61bee
  41b276:	gs lahf 
  41b278:	aas    
  41b279:	cmp    eax,0x12
  41b27c:	mov    BYTE PTR [edi+0x6a],ch
  41b27f:	jb     0x41b2d2
  41b281:	inc    esp
  41b282:	fiadd  WORD PTR [edi-0x3a]
  41b285:	xor    BYTE PTR es:[edx+0x28],ch
  41b289:	or     al,0x62
  41b28b:	mov    eax,ds:0xe0dcfd2a
  41b290:	mov    ebp,0xd5d89d94
  41b295:	sub    al,0x74
  41b297:	and    al,0xf1
  41b299:	adc    eax,0x2b6ac819
  41b29e:	xchg   ecx,eax
  41b29f:	mov    ds:0x9a5e2257,eax
  41b2a4:	daa    
  41b2a5:	xchg   edx,eax
  41b2a6:	mov    ecx,0xa1bc45ab
  41b2ab:	loop   0x41b296
  41b2ad:	gs and ch,cl
  41b2b0:	xor    eax,0xc08b1362
  41b2b5:	jecxz  0x41b252
  41b2b7:	jno    0x41b2b9
  41b2b9:	and    dh,BYTE PTR [esi-0x16]
  41b2bc:	dec    edi
  41b2bd:	jno    0x41b2e7
  41b2bf:	outs   dx,BYTE PTR ds:[esi]
  41b2c0:	dec    edx
  41b2c1:	shr    dl,1
  41b2c3:	xor    ch,BYTE PTR [edi-0x27]
  41b2c6:	into   
  41b2c7:	or     ebp,edx
  41b2c9:	ret    
  41b2ca:	mov    bh,0x7b
  41b2cc:	paddw  mm0,QWORD PTR [esi+0xc1875a5]
  41b2d3:	iret   
  41b2d4:	fwait
  41b2d5:	scas   al,BYTE PTR es:[edi]
  41b2d6:	ins    BYTE PTR es:[edi],dx
  41b2d7:	mov    esp,0xe44e3afe
  41b2dc:	pop    ds
  41b2dd:	sub    BYTE PTR ds:0x2676caa8,bl
  41b2e3:	mov    al,ds:0x12ef3a46
  41b2e8:	mov    eax,ds:0x6b7a1514
  41b2ed:	inc    eax
  41b2ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ef:	push   ss
  41b2f0:	and    al,0xd9
  41b2f2:	cmc    
  41b2f3:	fld    st(6)
  41b2f5:	data16 adc bh,bh
  41b2f8:	sub    ch,bh
  41b2fa:	mov    al,ds:0xb77ab957
  41b2ff:	out    0x4b,al
  41b301:	inc    ebp
  41b302:	mov    al,ds:0x78582ff9
  41b307:	call   0xf588:0x5bcb2d95
  41b30e:	ret    0xb2d3
  41b311:	and    al,BYTE PTR [edx+eax*4-0x48]
  41b315:	mov    esi,0x8b5a42da
  41b31a:	arpl   WORD PTR [ebx-0xd023dea],sp
  41b320:	sub    esp,DWORD PTR [ebp-0x10b17543]
  41b326:	pop    ebx
  41b327:	adc    DWORD PTR [ebx],esp
  41b329:	mov    cl,0x8b
  41b32b:	mov    bl,BYTE PTR [edi-0x4]
  41b32e:	into   
  41b32f:	repz adc ebp,esp
  41b332:	(bad)  
  41b333:	sar    al,0x49
  41b336:	dec    edx
  41b337:	or     DWORD PTR [ebx+0x4b],ebx
  41b33a:	adc    ah,BYTE PTR ds:0x5ab53c6a
  41b340:	iret   
  41b341:	aas    
  41b342:	lea    esp,[ebx+0x6f]
  41b345:	adc    ch,BYTE PTR gs:[edi-0x2277d404]
  41b34c:	es push edx
  41b34e:	push   ecx
  41b34f:	(bad)  
  41b350:	inc    ecx
  41b351:	(bad)
  41b355:	enter  0x75c3,0xd3
  41b359:	mov    esp,DWORD PTR [edx-0x2aa52e82]
  41b35f:	add    eax,0xe02c0d15
  41b364:	mov    WORD PTR [ecx-0x3ff01d6a],?
  41b36a:	mov    edi,0xb8e60d58
  41b36f:	hlt    
  41b370:	jns    0x41b349
  41b372:	repz into 
  41b374:	dec    ebx
  41b375:	jns    0x41b30e
  41b377:	cld    
  41b378:	imul   eax,DWORD PTR [esi+ebp*2+0x29],0xffffffce
  41b37d:	cmp    eax,0x51d1b85
  41b382:	fdivr  QWORD PTR [eax-0x11]
  41b385:	das    
  41b386:	push   cs
  41b387:	das    
  41b388:	cli    
  41b389:	in     al,dx
  41b38a:	push   0xffffff8f
  41b38c:	cli    
  41b38d:	retf   
  41b38e:	xchg   DWORD PTR [eax-0x71],edi
  41b391:	inc    ebx
  41b392:	mov    BYTE PTR [edi],dh
  41b394:	or     ecx,DWORD PTR [ebp-0xa7f2fe1]
  41b39a:	xor    eax,0x8ea738d7
  41b39f:	cmp    dh,ah
  41b3a1:	rol    DWORD PTR [eiz*4+0x497396e8],0xf6
  41b3a9:	sub    eax,0xbf9c3d98
  41b3ae:	rcr    edx,1
  41b3b0:	mov    ecx,0xaae8c6c
  41b3b5:	out    dx,eax
  41b3b6:	in     eax,0x67
  41b3b8:	sbb    eax,0x2d029f45
  41b3bd:	loope  0x41b381
  41b3bf:	fld    DWORD PTR [edi-0x66fccfc9]
  41b3c5:	inc    ebp
  41b3c6:	pop    ebx
  41b3c7:	mov    edx,0xd30ee8dc
  41b3cc:	aas    
  41b3cd:	std    
  41b3ce:	and    cl,al
  41b3d0:	jb     0x41b43f
  41b3d2:	xchg   BYTE PTR [ebx],ah
  41b3d4:	stos   DWORD PTR es:[edi],eax
  41b3d5:	mov    edi,0xbcef1357
  41b3da:	mov    bl,0xa0
  41b3dc:	sub    DWORD PTR [eax],esp
  41b3de:	and    bh,BYTE PTR [edi+0x58]
  41b3e1:	sub    BYTE PTR [edi+0x3e],ah
  41b3e4:	or     DWORD PTR [esi-0x19d4c796],edi
  41b3ea:	repz jle 0x41b3e9
  41b3ed:	retf   
  41b3ee:	out    dx,eax
  41b3ef:	dec    esi
  41b3f0:	mov    ecx,DWORD PTR [ebp-0x55258c7a]
  41b3f6:	push   esi
  41b3f7:	and    esp,DWORD PTR [ecx+0x5921e6e7]
  41b3fd:	fyl2xp1 
  41b3ff:	test   al,0xec
  41b401:	imul   edi,DWORD PTR [ecx+0x7a7bf9cf],0x8a7a6dfb
  41b40b:	sbb    DWORD PTR [edi-0x194bb567],edi
  41b411:	in     eax,dx
  41b412:	fiadd  DWORD PTR [edx]
  41b414:	adc    ah,bh
  41b416:	(bad)  
  41b417:	leave  
  41b418:	call   0x2d683d8c
  41b41d:	adc    cl,BYTE PTR [edx]
  41b41f:	sub    dh,dl
  41b421:	xor    DWORD PTR [edi-0x3b80e011],eax
  41b427:	mov    DWORD PTR [edx],edi
  41b429:	or     DWORD PTR [ecx+0x7f656624],ecx
  41b42f:	aad    0x8
  41b431:	nop
  41b432:	enter  0x900d,0xb9
  41b436:	loop   0x41b47c
  41b438:	xchg   al,al
  41b43a:	inc    eax
  41b43b:	sub    bl,BYTE PTR [edi-0x5f]
  41b43e:	sub    BYTE PTR ds:[ecx-0x28644838],bh
  41b445:	mov    bh,0x2d
  41b447:	fs and eax,0x9b71bd90
  41b44d:	inc    esp
  41b44e:	ds mov bh,0xa9
  41b451:	sahf   
  41b452:	push   ds
  41b453:	push   cs
  41b454:	jns    0x41b429
  41b456:	pop    esp
  41b457:	mov    al,0x95
  41b459:	lahf   
  41b45a:	div    DWORD PTR [ebp+0x27]
  41b45d:	cmp    bl,BYTE PTR [ebp+0x357fba54]
  41b463:	out    dx,eax
  41b464:	mov    ds:0xf8b0ffda,al
  41b469:	adc    DWORD PTR [ebp+0x1a],0x3b238d7c
  41b470:	call   0xcad3:0x11bb4049
  41b477:	pop    esi
  41b478:	in     al,0x43
  41b47a:	rep stos DWORD PTR es:[edi],eax
  41b47c:	out    0x13,al
  41b47e:	(bad)  
  41b47f:	jge    0x41b459
  41b481:	(bad)  
  41b482:	push   0x30c129bc
  41b487:	add    DWORD PTR [eax],esi
  41b489:	jl     0x41b4e3
  41b48b:	mov    ds:0x389c8b55,al
  41b490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b491:	jl     0x41b426
  41b493:	adc    BYTE PTR [edx-0x4e],dh
  41b496:	adc    ebx,DWORD PTR [edi-0x4e]
  41b499:	les    esp,FWORD PTR [ecx]
  41b49b:	test   cl,ch
  41b49d:	sbb    esi,edx
  41b49f:	mov    esi,0xc1d6a405
  41b4a4:	or     BYTE PTR [esi+0x5e],ah
  41b4a7:	xor    al,0x2d
  41b4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4aa:	inc    edi
  41b4ab:	out    0xe,al
  41b4ad:	mov    dh,0xf2
  41b4af:	jnp    0x41b50e
  41b4b1:	mov    ch,0x3c
  41b4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4b4:	push   esi
  41b4b5:	inc    ecx
  41b4b6:	test   BYTE PTR [ebx],ah
  41b4b8:	test   dl,cl
  41b4ba:	aam    0x5f
  41b4bc:	push   edi
  41b4bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4be:	sbb    bl,BYTE PTR [eax]
  41b4c0:	in     eax,dx
  41b4c1:	into   
  41b4c2:	out    dx,al
  41b4c3:	or     esp,DWORD PTR [ebx+ebp*1]
  41b4c6:	mov    dl,0xda
  41b4c8:	push   eax
  41b4c9:	sub    edx,ebx
  41b4cb:	arpl   bx,bx
  41b4cd:	push   edx
  41b4ce:	or     al,0x29
  41b4d0:	scas   eax,DWORD PTR es:[edi]
  41b4d1:	clc    
  41b4d2:	push   ebp
  41b4d3:	(bad)  
  41b4d4:	mov    cs,ebx
  41b4d6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41b4d8:	neg    BYTE PTR [ebx+edx*1]
  41b4db:	(bad)  
  41b4dc:	xlat   BYTE PTR ds:[ebx]
  41b4dd:	or     eax,0x1f8b3ed
  41b4e2:	cwde   
  41b4e3:	dec    esi
  41b4e4:	cmp    DWORD PTR [ebp-0x34e3ff45],esi
  41b4ea:	inc    esi
  41b4eb:	jg     0x41b49d
  41b4ed:	imul   edi,esi,0x62
  41b4f0:	ins    DWORD PTR es:[edi],dx
  41b4f1:	sbb    edx,eax
  41b4f3:	push   ebp
  41b4f4:	mov    esi,es
  41b4f6:	rol    DWORD PTR [ebp+0x6a],1
  41b4f9:	inc    esi
  41b4fa:	ret    0xc8fe
  41b4fd:	mov    al,0xa6
  41b4ff:	mov    esi,0xd3b43cff
  41b504:	cmp    edi,edx
  41b506:	mov    esp,0x877d1c2e
  41b50b:	jle    0x41b4ad
  41b50d:	daa    
  41b50e:	mov    ecx,0x5d374860
  41b513:	mov    eax,ds:0xef4fde8d
  41b518:	adc    ah,BYTE PTR ds:0xf3048bde
  41b51e:	scas   al,BYTE PTR es:[edi]
  41b51f:	inc    edx
  41b520:	xchg   esp,eax
  41b521:	mov    ah,0x46
  41b523:	xchg   edx,eax
  41b524:	aam    0x7b
  41b526:	mov    edx,0xd3833aef
  41b52b:	lock jb 0x41b563
  41b52e:	push   0xb690d0b7
  41b533:	push   es
  41b534:	fs add eax,0xa772585f
  41b53a:	mov    eax,ds:0x2fd33a37
  41b53f:	je     0x41b55d
  41b541:	mov    ch,0xf4
  41b543:	cwde   
  41b544:	repz adc DWORD PTR [edi+0x3cdb43f1],0xffffff9f
  41b54c:	in     al,0x9c
  41b54e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b54f:	mov    eax,ds:0x29a18710
  41b554:	jmp    DWORD PTR [esp+edi*4]
  41b557:	push   0xffffffa8
  41b559:	inc    esi
  41b55a:	push   edi
  41b55b:	scas   al,BYTE PTR es:[edi]
  41b55c:	adc    al,0x2b
  41b55e:	jle    0x41b512
  41b560:	aam    0xa5
  41b562:	push   esi
  41b563:	popf   
  41b564:	shl    ebp,0x36
  41b567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b568:	cmp    eax,0x6f29ffdc
  41b56d:	xchg   ebp,eax
  41b56e:	mov    WORD PTR [ecx],?
  41b570:	push   ebx
  41b571:	loope  0x41b53a
  41b573:	ds adc eax,0x76dceb05
  41b579:	and    ah,ch
  41b57b:	stos   BYTE PTR es:[edi],al
  41b57c:	jg     0x41b50b
  41b57e:	repz mov bh,0x82
  41b581:	out    dx,al
  41b582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b583:	test   esp,0x29ae3e0b
  41b589:	fnstsw WORD PTR [ecx-0x6a]
  41b58c:	sub    eax,0x8bf58664
  41b591:	cmc    
  41b592:	scas   al,BYTE PTR es:[edi]
  41b593:	loopne 0x41b517
  41b595:	jmp    0x8b3:0x8eec8cdf
  41b59c:	inc    ebx
  41b59d:	fs xchg edx,eax
  41b59f:	pop    esi
  41b5a0:	fs out 0x2,al
  41b5a3:	fcom   DWORD PTR [ebp+0x73]
  41b5a6:	stos   BYTE PTR es:[edi],al
  41b5a7:	sbb    BYTE PTR [edi-0x3b88b2ac],cl
  41b5ad:	aas    
  41b5ae:	sub    DWORD PTR [esi],ebp
  41b5b0:	iret   
  41b5b1:	ror    DWORD PTR [esi-0x797a596f],0x2
  41b5b8:	xchg   esp,eax
  41b5b9:	mov    edx,0x97d0888a
  41b5be:	and    DWORD PTR [edx-0x59a359ff],esp
  41b5c4:	cmp    BYTE PTR [edi-0x1005fb0d],al
  41b5ca:	pusha  
  41b5cb:	(bad)  
  41b5cc:	mov    ecx,0x58b91c59
  41b5d1:	fld    TBYTE PTR [edx]
  41b5d3:	lea    edx,[ecx]
  41b5d5:	scas   al,BYTE PTR es:[edi]
  41b5d6:	xchg   bh,cl
  41b5d8:	fstp   QWORD PTR [eax-0x2c863d04]
  41b5de:	add    edx,DWORD PTR cs:[eax-0x21]
  41b5e2:	or     eax,0xbda9c292
  41b5e7:	(bad)  
  41b5e8:	daa    
  41b5e9:	xchg   ecx,eax
  41b5ea:	pop    ds
  41b5eb:	out    dx,al
  41b5ec:	lds    esp,FWORD PTR [ecx-0x35f2e908]
  41b5f2:	mov    DWORD PTR [ebx+0x47],ebp
  41b5f5:	pop    edi
  41b5f6:	ins    DWORD PTR es:[edi],dx
  41b5f7:	mov    eax,ds:0xaa375c74
  41b5fc:	xor    al,0xf9
  41b5fe:	xchg   ecx,eax
  41b5ff:	ret    
  41b600:	pop    eax
  41b601:	adc    al,0xff
  41b603:	cmp    DWORD PTR [edx],ebx
  41b605:	ror    BYTE PTR [esi+0x76294676],0x56
  41b60c:	mov    ecx,0x51ae0a5d
  41b611:	int    0x56
  41b613:	pushf  
  41b614:	mov    al,0xa7
  41b616:	test   al,0x14
  41b618:	retf   0xafa1
  41b61b:	dec    esp
  41b61c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b61d:	and    al,0xa0
  41b61f:	jae    0x41b619
  41b621:	mov    dh,0x6f
  41b623:	xchg   BYTE PTR [eax-0x9],dh
  41b626:	hlt    
  41b627:	(bad)  
  41b628:	mov    al,dl
  41b62a:	jns    0x41b5c5
  41b62c:	and    ebp,DWORD PTR [edi+0x24945573]
  41b632:	scas   al,BYTE PTR es:[edi]
  41b633:	fldcw  WORD PTR [ecx+0x13275e66]
  41b639:	cwde   
  41b63a:	or     ebp,DWORD PTR [eax+0x5a]
  41b63d:	lock dec ecx
  41b63f:	sub    al,0xcb
  41b641:	pusha  
  41b642:	stos   BYTE PTR es:[edi],al
  41b643:	inc    esp
  41b644:	mov    bl,0x96
  41b646:	fwait
  41b647:	std    
  41b648:	pop    ds
  41b649:	outs   dx,BYTE PTR ds:[esi]
  41b64a:	imul   ecx,DWORD PTR [eax-0x3ca68be1],0xffffff84
  41b651:	scas   eax,DWORD PTR es:[edi]
  41b652:	jno    0x41b648
  41b654:	das    
  41b655:	pop    ds
  41b656:	imul   ebp,DWORD PTR [edx],0xffffffd8
  41b659:	mov    ds:0x7201e399,eax
  41b65e:	adc    BYTE PTR [eax],al
  41b660:	add    BYTE PTR [eax],al
  41b662:	(bad)  
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	icebp  
  41b66f:	add    eax,DWORD PTR [eax+0x132a8c8]
  41b675:	add    ch,dh
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [edx+0x13],dl
  41b67c:	cmp    bl,dl
  41b67e:	cmp    BYTE PTR [esi],dh
  41b680:	fsubr  st(6),st
  41b682:	or     DWORD PTR [edi+0x54],edx
  41b685:	aas    
  41b686:	pop    esp
  41b687:	lahf   
  41b688:	jg     0x41b673
  41b68a:	mov    cl,0xb1
  41b68c:	sbb    DWORD PTR [ebx+0x149492cd],0xffffffab
  41b693:	sbb    eax,0x129d2842
  41b698:	aaa    
  41b699:	psrlw  mm2,mm3
  41b69c:	lock and al,0xc2
  41b69f:	fcom   QWORD PTR [esi+0x1a]
  41b6a2:	popa   
  41b6a3:	push   edi
  41b6a4:	sbb    eax,0x161ee68d
  41b6a9:	adc    BYTE PTR [edi],dh
  41b6ab:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6ad:	sub    DWORD PTR [edi+0x583fcbc0],0xffffffaa
  41b6b4:	inc    eax
  41b6b5:	test   BYTE PTR [edi+0x62f5df5c],dh
  41b6bb:	sbb    al,ch
  41b6bd:	jnp    0x41b68b
  41b6bf:	mov    esp,0x921def04
  41b6c4:	out    dx,al
  41b6c5:	xchg   BYTE PTR [edx],al
  41b6c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6c8:	imul   ecx,DWORD PTR [esi+0x59e1f681],0xffffff9c
  41b6cf:	dec    eax
  41b6d0:	dec    esp
  41b6d1:	mov    WORD PTR [ebp-0x2c1e604f],?
  41b6d7:	push   ebx
  41b6d8:	in     eax,0xca
  41b6da:	dec    ebp
  41b6db:	test   esi,esp
  41b6dd:	xchg   ebp,eax
  41b6de:	jno    0x41b73a
  41b6e0:	pop    ecx
  41b6e1:	xchg   ebp,eax
  41b6e2:	add    bl,BYTE PTR [edx+0x7f]
  41b6e5:	rcl    DWORD PTR ds:0x5899209f,1
  41b6eb:	mov    ds:0x76fb308d,al
  41b6f0:	xchg   BYTE PTR [edx-0x5c],dl
  41b6f3:	arpl   WORD PTR ss:[edi+0x46c42f3],ax
  41b6fa:	icebp  
  41b6fb:	mov    al,ds:0x3c5cf5fa
  41b700:	xchg   ebp,eax
  41b701:	call   0xdf38:0xee62e814
  41b708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b709:	xchg   DWORD PTR [ebp+0x4321cd2b],eax
  41b70f:	sbb    BYTE PTR [edx-0x4935153e],bl
  41b715:	jge    0x41b69c
  41b717:	jmp    0x15b8:0xa766feb0
  41b71e:	xor    dh,BYTE PTR [esi]
  41b720:	and    al,0xde
  41b722:	mov    edi,0x6f64419d
  41b727:	loopne 0x41b6f8
  41b729:	in     al,0xce
  41b72b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41b72d:	xlat   BYTE PTR ds:[ebx]
  41b72e:	popa   
  41b72f:	sbb    eax,0x65349607
  41b734:	inc    esi
  41b735:	add    al,BYTE PTR [eax+ebx*2+0x63f7fa9a]
  41b73c:	push   0xffffffe5
  41b73e:	mov    ds:0x707ad89c,eax
  41b743:	mul    BYTE PTR [ebp+0x3f1c7daf]
  41b749:	mov    eax,ds:0xccaf20e5
  41b74e:	outs   dx,DWORD PTR ds:[esi]
  41b74f:	inc    edx
  41b750:	fadd   QWORD PTR [esp+ecx*2-0x68]
  41b754:	loope  0x41b7d0
  41b756:	xchg   esi,eax
  41b757:	and    BYTE PTR [edi+0x75f15c7],ch
  41b75d:	push   edx
  41b75e:	imul   esp,DWORD PTR [ebx-0x17557a12],0x421a239a
  41b768:	jl     0x41b7d6
  41b76a:	or     al,0x9
  41b76c:	sub    esi,ecx
  41b76e:	out    dx,al
  41b76f:	(bad)  
  41b770:	out    dx,al
  41b771:	cmp    eax,0x88a7f4be
  41b776:	jb     0x41b7ae
  41b778:	adc    DWORD PTR [edi+0x2df87b3f],ebp
  41b77e:	arpl   WORD PTR [edi+0xed7a1d1],cx
  41b784:	enter  0x5290,0xa
  41b788:	mov    ebx,0x19af3775
  41b78d:	add    BYTE PTR [edi+0x14cedd3e],ch
  41b793:	sub    BYTE PTR [eax-0x73],ah
  41b796:	or     DWORD PTR [eax+0x63],0x50
  41b79a:	sub    eax,0x65b57bf1
  41b79f:	call   0x8d61:0x708194a2
  41b7a6:	adc    al,0xcc
  41b7a8:	cli    
  41b7a9:	push   es
  41b7aa:	stos   DWORD PTR es:[edi],eax
  41b7ab:	(bad)  
  41b7ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7ae:	icebp  
  41b7af:	inc    eax
  41b7b0:	adc    eax,0x813dcb6e
  41b7b5:	xor    edx,ebp
  41b7b7:	ret    
  41b7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b9:	(bad)  
  41b7ba:	and    eax,0x6cdf3546
  41b7bf:	xor    esp,edi
  41b7c1:	mov    edi,gs
  41b7c3:	jne    0x41b77c
  41b7c5:	jge    0x41b7b6
  41b7c7:	jb     0x41b7a4
  41b7c9:	lds    ebx,FWORD PTR ds:0xd9a5a8fc
  41b7cf:	hlt    
  41b7d0:	imul   esi,DWORD PTR [edi-0x70],0xa895c666
  41b7d7:	shl    BYTE PTR [ebx+0x14],0x63
  41b7db:	mov    edx,0x6fa3a558
  41b7e0:	pop    ebx
  41b7e1:	scas   eax,DWORD PTR es:[edi]
  41b7e2:	mov    cl,0xdd
  41b7e4:	and    al,0x90
  41b7e6:	mov    al,ds:0xc3b05be0
  41b7eb:	and    al,0x5b
  41b7ed:	jo     0x41b79f
  41b7ef:	pop    ebx
  41b7f0:	and    BYTE PTR [ebp+0x43],al
  41b7f3:	cld    
  41b7f4:	outs   dx,DWORD PTR ds:[esi]
  41b7f5:	arpl   WORD PTR [ebx+0x353d05e4],ax
  41b7fb:	mov    esi,0x42d78691
  41b800:	jmp    0x3b7b:0x35fcb8b1
  41b807:	lods   eax,DWORD PTR ds:[esi]
  41b808:	mov    bh,0x65
  41b80a:	les    esp,FWORD PTR [esi+0x384f638d]
  41b810:	jmp    0x7312:0xbff16b81
  41b817:	cmc    
  41b818:	(bad)  
  41b819:	jp     0x41b875
  41b81b:	sub    ebx,DWORD PTR [edx+0x21]
  41b81e:	and    bl,BYTE PTR [ebp+ebx*1+0x59]
  41b822:	pop    edx
  41b823:	mov    ds:0x8c022110,al
  41b828:	push   ebx
  41b829:	push   ebx
  41b82a:	and    ah,BYTE PTR [ecx]
  41b82c:	mov    edx,0x300eb8
  41b831:	std    
  41b832:	jl     0x41b87c
  41b834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b835:	pop    esp
  41b836:	mov    ebp,0x152fe9a4
  41b83b:	in     eax,0xd7
  41b83d:	pop    ebp
  41b83e:	mov    BYTE PTR [esi],al
  41b840:	mov    edx,0xac0766a3
  41b845:	dec    ecx
  41b846:	jbe    0x41b87c
  41b848:	xchg   esi,eax
  41b849:	repnz mov DWORD PTR [edx],esp
  41b84c:	loope  0x41b878
  41b84e:	aad    0xe4
  41b850:	sub    BYTE PTR [esi+ecx*4+0x52],ah
  41b854:	jmp    0x41b80b
  41b856:	test   BYTE PTR [esi],bl
  41b858:	outs   dx,BYTE PTR ds:[esi]
  41b859:	gs enter 0x64b0,0x22
  41b85e:	mov    ebp,0x59434573
  41b863:	inc    edi
  41b864:	mov    cl,0x97
  41b866:	daa    
  41b867:	call   0x7c1175a4
  41b86c:	pushf  
  41b86d:	push   esi
  41b86e:	mov    edx,0x3c8a1a82
  41b873:	pop    es
  41b874:	lahf   
  41b875:	addr16 aaa 
  41b877:	push   ds
  41b878:	mov    ch,0x3e
  41b87a:	lahf   
  41b87b:	clc    
  41b87c:	mov    DWORD PTR [edx-0x6a514904],0xb8e46f7
  41b886:	jo     0x41b858
  41b888:	inc    esi
  41b889:	sbb    DWORD PTR [edi],esp
  41b88b:	push   edi
  41b88c:	in     al,0xcc
  41b88e:	pop    esi
  41b88f:	sbb    ah,BYTE PTR [ebp-0x2e]
  41b892:	popf   
  41b893:	(bad)  
  41b894:	and    BYTE PTR [edi-0x5c],ch
  41b897:	cld    
  41b898:	add    edi,DWORD PTR [ecx]
  41b89a:	xchg   ebp,eax
  41b89b:	jecxz  0x41b8f8
  41b89d:	int    0x76
  41b89f:	sbb    edi,DWORD PTR [edx+0x3]
  41b8a2:	push   esi
  41b8a3:	mov    ebx,0x22f19b1d
  41b8a8:	es jecxz 0x41b91a
  41b8ab:	test   eax,0xb0dbe17b
  41b8b0:	adc    al,0x3
  41b8b2:	cmp    bl,BYTE PTR [esi]
  41b8b4:	mov    WORD PTR [edi],es
  41b8b6:	add    al,0xd2
  41b8b9:	xchg   BYTE PTR [eax],dh
  41b8bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8bc:	jbe    0x41b860
  41b8be:	xchg   DWORD PTR [ebx],esp
  41b8c0:	dec    edi
  41b8c1:	imul   esp,DWORD PTR [edi-0x123cab26],0xffffff85
  41b8c8:	addr16 pop esp
  41b8ca:	push   edi
  41b8cb:	jbe    0x41b894
  41b8cd:	call   0x14553837
  41b8d2:	jnp    0x41b940
  41b8d4:	(bad)  
  41b8d5:	call   0xb5dd:0x2643c8a
  41b8dc:	pop    ebp
  41b8dd:	outs   dx,DWORD PTR ds:[esi]
  41b8de:	mov    ebx,0xd83d40fc
  41b8e3:	cmp    al,0x47
  41b8e5:	sub    bx,WORD PTR [ecx+0x5e]
  41b8e9:	mov    fs,WORD PTR [ebx+edx*2]
  41b8ec:	sub    eax,0x69b57a57
  41b8f1:	pop    ds
  41b8f2:	sub    DWORD PTR [ecx-0x3a7e04a1],eax
  41b8f8:	cld    
  41b8f9:	fadd   st,st(6)
  41b8fb:	dec    esi
  41b8fc:	fisttp QWORD PTR [ebx+0x2aaa8037]
  41b902:	mov    BYTE PTR [eax-0x33720674],dh
  41b908:	pop    ebp
  41b909:	add    DWORD PTR [esi+0x692a2492],ebp
  41b90f:	jae    0x41b8b4
  41b911:	dec    esp
  41b912:	fcomp  QWORD PTR [ebp-0xa1348ff]
  41b918:	jmp    0xaab2b9ee
  41b91d:	mov    bl,0xd0
  41b91f:	mov    ch,0x97
  41b921:	inc    edi
  41b922:	into   
  41b923:	popa   
  41b924:	and    al,0xc
  41b926:	aad    0xd1
  41b928:	xchg   BYTE PTR [edx+0x1e],ah
  41b92b:	and    ah,ah
  41b92d:	xor    DWORD PTR [ebx-0x57d8f09e],0x3273cb42
  41b937:	pop    edi
  41b938:	fisubr WORD PTR [ecx-0x1919095f]
  41b93e:	iret   
  41b93f:	lods   al,BYTE PTR ds:[esi]
  41b940:	jae    0x41b90d
  41b942:	and    BYTE PTR [eax],dh
  41b944:	sbb    bh,BYTE PTR [edi-0x52]
  41b947:	mov    eax,0x13666140
  41b94c:	repnz mov al,BYTE PTR ds:0x593a6aa2
  41b953:	dec    ebx
  41b954:	js     0x41b951
  41b956:	sub    al,0xba
  41b958:	dec    ebx
  41b959:	xor    BYTE PTR [ebx+0x5359ff34],dl
  41b95f:	mov    cl,BYTE PTR [edx+esi*2-0x61fc9f16]
  41b966:	sub    al,0xcf
  41b968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b969:	push   edx
  41b96a:	cmp    al,BYTE PTR [edx]
  41b96c:	push   esp
  41b96d:	jl     0x41b9ae
  41b96f:	jbe    0x41b978
  41b971:	dec    edi
  41b972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b973:	dec    esi
  41b974:	pop    eax
  41b975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b976:	mov    edx,0xdbe4d4f4
  41b97b:	fucomi st,st(3)
  41b97d:	jg     0x41b978
  41b97f:	jmp    DWORD PTR [eax+ebp*8+0x1a]
  41b983:	xchg   BYTE PTR [ecx+0x43e93651],al
  41b989:	addr16 icebp 
  41b98b:	dec    edi
  41b98c:	aad    0x30
  41b98e:	into   
  41b98f:	pop    ds
  41b990:	addr16 and eax,0xdc73675d
  41b996:	inc    esi
  41b997:	dec    esi
  41b998:	mov    dl,0xe5
  41b99a:	add    al,0xfd
  41b99c:	mov    ah,0x54
  41b99e:	push   ebp
  41b99f:	sbb    al,0x5b
  41b9a1:	mov    eax,0xedaf51c5
  41b9a6:	leave  
  41b9a7:	xor    eax,DWORD PTR [esp+edx*4]
  41b9aa:	mov    edi,0xf08ff43d
  41b9af:	out    dx,al
  41b9b0:	push   esi
  41b9b1:	lods   eax,DWORD PTR ds:[esi]
  41b9b2:	pop    ebx
  41b9b3:	jno    0x41ba2d
  41b9b5:	xchg   ch,ch
  41b9b7:	pop    edi
  41b9b8:	adc    DWORD PTR [eax],eax
  41b9ba:	xchg   edi,eax
  41b9bb:	dec    ecx
  41b9bc:	mov    bp,0x63be
  41b9c0:	call   0x67a6:0x8ddd96c7
  41b9c7:	mov    edx,0xbb46c57
  41b9cc:	arpl   WORD PTR [ebp+0x73efaa43],di
  41b9d2:	lea    ecx,[edi-0x60]
  41b9d5:	rcl    esp,0x8b
  41b9d8:	and    edx,esp
  41b9da:	add    bl,dh
  41b9dc:	mov    ch,0xfc
  41b9de:	ds xchg ecx,eax
  41b9e0:	shl    cl,cl
  41b9e2:	and    DWORD PTR [esp+ebp*1],ecx
  41b9e5:	inc    esi
  41b9e6:	and    eax,DWORD PTR [ebp-0x24]
  41b9e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9ea:	push   0x6422d3e9
  41b9ef:	xchg   ecx,eax
  41b9f0:	out    0x2f,eax
  41b9f2:	and    DWORD PTR [esi-0x2dccaee1],edi
  41b9f8:	ret    
  41b9f9:	in     eax,0xcd
  41b9fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9fc:	pop    edx
  41b9fd:	(bad)  
  41b9fe:	aad    0xef
  41ba00:	fucom  st(6)
  41ba02:	ret    0x5c81
  41ba05:	setg   BYTE PTR [edi]
  41ba08:	inc    ebx
  41ba09:	add    edi,DWORD PTR [ebp+ecx*4-0x174b4723]
  41ba10:	bound  ebp,QWORD PTR [edx-0x6b]
  41ba13:	aas    
  41ba14:	add    cl,BYTE PTR [edx+0x68b6424d]
  41ba1a:	xchg   edi,eax
  41ba1b:	jb     0x41ba5e
  41ba1d:	and    esi,DWORD PTR ds:0xfe8dd49b
  41ba23:	push   ecx
  41ba24:	push   cs
  41ba25:	adc    eax,0x576b8348
  41ba2a:	(bad)
  41ba2e:	pop    ebp
  41ba2f:	out    0x9b,eax
  41ba31:	inc    edi
  41ba32:	call   0x383e2821
  41ba37:	leave  
  41ba38:	pop    ebp
  41ba39:	sub    DWORD PTR [edi+0x54],ecx
  41ba3c:	je     0x41ba57
  41ba3e:	outs   dx,BYTE PTR ds:[esi]
  41ba3f:	cs out dx,eax
  41ba41:	cmp    DWORD PTR [ebp+eiz*2-0x73],esi
  41ba45:	outs   dx,DWORD PTR ds:[esi]
  41ba46:	sbb    ecx,DWORD PTR [edx-0x56]
  41ba49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba4a:	ror    esp,0x39
  41ba4d:	bnd jne 0x41baa3
  41ba50:	cdq    
  41ba51:	and    ebx,DWORD PTR [ebx+0x16]
  41ba54:	movd   mm3,DWORD PTR [esi-0x71]
  41ba58:	rcr    BYTE PTR [ebx-0x24],1
  41ba5b:	lods   eax,DWORD PTR ds:[esi]
  41ba5c:	(bad)  
  41ba5d:	push   eax
  41ba5e:	pop    ds
  41ba5f:	in     eax,dx
  41ba60:	push   edi
  41ba61:	frstor [esi-0x5b]
  41ba64:	(bad)  
  41ba65:	aam    0x8e
  41ba67:	popa   
  41ba68:	mov    esi,0x817ad50e
  41ba6d:	(bad)
  41ba72:	ret    0x52de
  41ba75:	retf   
  41ba76:	add    BYTE PTR [ecx],al
  41ba78:	mov    edx,0xd0f1eee8
  41ba7d:	and    al,0x9a
  41ba7f:	(bad)  
  41ba80:	adc    BYTE PTR [ebx+0x7fbe1f6e],dl
  41ba86:	push   eax
  41ba87:	idiv   ah
  41ba89:	dec    ecx
  41ba8a:	scas   al,BYTE PTR es:[edi]
  41ba8b:	popa   
  41ba8c:	adc    ch,bl
  41ba8e:	pavgw  mm1,QWORD PTR [edi+0x384f4554]
  41ba95:	cld    
  41ba96:	cld    
  41ba97:	ins    BYTE PTR es:[edi],dx
  41ba98:	xor    al,0x2
  41ba9a:	pusha  
  41ba9b:	add    DWORD PTR [esi-0x4881b147],edi
  41baa1:	mov    ch,0xfd
  41baa3:	mov    eax,0xb284a977
  41baa8:	sbb    esp,DWORD PTR [esi+0x5]
  41baab:	mov    DWORD PTR [ebx-0x31],esi
  41baae:	test   dl,cl
  41bab0:	add    BYTE PTR [esi],ch
  41bab2:	mov    dl,0x65
  41bab4:	lock ficomp DWORD PTR [ebp+0x50]
  41bab8:	nop
  41bab9:	shr    BYTE PTR [esi],0xbf
  41babc:	xor    eax,0x6a6b189a
  41bac2:	aad    0x7c
  41bac4:	mov    dh,ch
  41bac6:	jb     0x41baf7
  41bac8:	pop    ds
  41bac9:	ja     0x41bb46
  41bacb:	pop    eax
  41bacc:	push   ecx
  41bacd:	and    eax,0xf5e3a840
  41bad2:	fcmove st,st(5)
  41bad4:	sub    al,0xdb
  41bad6:	pusha  
  41bad7:	retf   0xf18a
  41bada:	or     ecx,DWORD PTR [ebp+ebx*2-0xc2bf640]
  41bae1:	inc    eax
  41bae2:	xchg   esi,eax
  41bae3:	push   0xffffffcc
  41bae5:	out    0xa7,eax
  41bae7:	sub    DWORD PTR [ebp-0x75],ecx
  41baea:	adc    DWORD PTR [ebx],0x3b
  41baed:	push   esp
  41baee:	pop    ebx
  41baef:	jmp    0x41bb01
  41baf1:	sbb    esi,DWORD PTR [esi+ecx*1+0x486180c9]
  41baf8:	push   eax
  41baf9:	mov    eax,ds:0x7e74f0aa
  41bafe:	push   ebx
  41baff:	push   ds
  41bb00:	add    dl,ch
  41bb02:	dec    edi
  41bb03:	inc    ebx
  41bb04:	leave  
  41bb05:	push   edi
  41bb06:	cmp    al,0xee
  41bb08:	dec    ecx
  41bb09:	mov    esi,0xb792848e
  41bb0e:	xchg   esp,eax
  41bb0f:	cmp    ch,BYTE PTR [esi]
  41bb11:	ret    0x3bc5
  41bb14:	ret    
  41bb15:	mul    BYTE PTR [esi+0x78]
  41bb18:	fadd   st(5),st
  41bb1a:	jmp    0x41bb2b
  41bb1c:	into   
  41bb1d:	ret    
  41bb1e:	mov    al,ds:0x3d239d29
  41bb23:	mov    ecx,DWORD PTR [edi+ebx*4]
  41bb26:	add    DWORD PTR [ebx-0x1c6221aa],ebx
  41bb2c:	addr16 mov esp,0x2a08f24
  41bb32:	js     0x41bbaa
  41bb34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb35:	outs   dx,BYTE PTR ds:[esi]
  41bb36:	add    esi,DWORD PTR [eax+0x590995da]
  41bb3c:	xchg   DWORD PTR [ebp+0x8],esp
  41bb3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb40:	inc    ebp
  41bb41:	jno    0x41bb97
  41bb43:	push   cs
  41bb44:	daa    
  41bb45:	out    0x41,al
  41bb47:	and    DWORD PTR [esp+eiz*2+0x33],eax
  41bb4b:	pop    esi
  41bb4c:	dec    esi
  41bb4d:	sbb    ebx,DWORD PTR [esi+0x42]
  41bb50:	pop    ecx
  41bb51:	jp     0x41bae3
  41bb53:	jle    0x41bb1e
  41bb55:	pop    es
  41bb56:	mov    ds:0x659c4913,al
  41bb5b:	imul   ecx,DWORD PTR [ebx-0x3f],0xfe5dd200
  41bb62:	pop    ebp
  41bb63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb64:	cli    
  41bb65:	xor    bl,BYTE PTR [edx+0x134811fb]
  41bb6b:	push   ebp
  41bb6c:	loop   0x41bb73
  41bb6e:	push   ebp
  41bb6f:	add    BYTE PTR [eax],al
  41bb71:	add    dh,ah
  41bb73:	inc    eax
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0x5a442583
  41bb7f:	fiadd  WORD PTR [esi+ecx*2-0x63]
  41bb83:	aaa    
  41bb84:	add    DWORD PTR [eax],eax
  41bb86:	cmc    
  41bb87:	add    al,0x0
  41bb89:	add    bh,ah
  41bb8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb8c:	sub    DWORD PTR [ebx+0x53],0x7d
  41bb90:	(bad)  
  41bb91:	sti    
  41bb92:	in     eax,0x9b
  41bb94:	mov    al,0x4c
  41bb96:	or     esi,DWORD PTR [ebp-0x4]
  41bb99:	mov    al,ds:0x6753078b
  41bb9e:	xchg   edx,eax
  41bb9f:	mov    dl,0xa8
  41bba1:	adc    al,bl
  41bba3:	ss out 0x21,eax
  41bba6:	inc    ebp
  41bba7:	in     al,dx
  41bba8:	aam    0xe1
  41bbaa:	out    dx,al
  41bbab:	xchg   cl,dl
  41bbad:	repnz es cmp eax,0xb927f399
  41bbb4:	fisubr WORD PTR [ecx-0x61]
  41bbb7:	sbb    ebp,DWORD PTR [edi-0xedbb438]
  41bbbd:	ja     0x41bc34
  41bbbf:	icebp  
  41bbc0:	add    BYTE PTR [eax+0x7164ce66],al
  41bbc6:	mov    ebp,0xc3607ca
  41bbcb:	leave  
  41bbcc:	xor    al,BYTE PTR [ebx]
  41bbce:	sub    eax,0xe4267f8a
  41bbd3:	sub    al,0xf3
  41bbd5:	jl     0x41bbc4
  41bbd7:	push   ecx
  41bbd8:	aaa    
  41bbd9:	push   0x49541e7f
  41bbde:	cdq    
  41bbdf:	mov    DWORD PTR [edx],ecx
  41bbe1:	nop
  41bbe2:	js     0x41bb85
  41bbe4:	mov    esp,edi
  41bbe6:	retf   0x69f4
  41bbe9:	addr16 mov ah,bh
  41bbec:	push   cs
  41bbed:	mov    eax,0xe8c92f1b
  41bbf2:	xchg   ecx,eax
  41bbf3:	jecxz  0x41bba4
  41bbf5:	cmp    ecx,DWORD PTR [eax]
  41bbf7:	rcl    BYTE PTR [eax-0x707410e7],cl
  41bbfd:	fsub   DWORD PTR [ebp+0x50]
  41bc00:	inc    esp
  41bc01:	hlt    
  41bc02:	xchg   ebx,eax
  41bc03:	dec    edx
  41bc04:	fist   WORD PTR [edx]
  41bc06:	sbb    al,0xda
  41bc08:	inc    ecx
  41bc09:	mov    WORD PTR [eax],es
  41bc0b:	dec    ebp
  41bc0c:	push   ds
  41bc0d:	xchg   ebp,eax
  41bc0e:	repnz sub BYTE PTR [ebx+0x72e8a44c],cl
  41bc15:	pop    esi
  41bc16:	(bad)  
  41bc18:	pop    ss
  41bc19:	pusha  
  41bc1a:	shl    BYTE PTR [ecx+0x7b],1
  41bc1d:	aam    0xeb
  41bc1f:	cs popf 
  41bc21:	icebp  
  41bc22:	int    0xf9
  41bc24:	cwde   
  41bc25:	mov    esp,esp
  41bc27:	mov    edi,0xcccf46a3
  41bc2c:	xchg   ecx,eax
  41bc2d:	gs hlt 
  41bc2f:	test   eax,0x3161ab8f
  41bc34:	mov    ebx,0xaf9c4b16
  41bc39:	je     0x41bc7a
  41bc3b:	ret    
  41bc3c:	repnz sbb BYTE PTR [eax-0x130a53cd],bl
  41bc43:	ins    DWORD PTR es:[edi],dx
  41bc44:	hlt    
  41bc45:	and    al,0x94
  41bc47:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc49:	jno    0x41bc85
  41bc4b:	rcl    BYTE PTR [edi-0x64],cl
  41bc4e:	loope  0x41bc4d
  41bc50:	arpl   WORD PTR [ecx-0xf],bp
  41bc53:	jae    0x41bc34
  41bc55:	push   ds
  41bc56:	and    eax,0x3ec80301
  41bc5b:	and    ch,BYTE PTR [ecx+0x79bbd610]
  41bc61:	sub    dh,BYTE PTR [ebx+0x6d]
  41bc64:	lods   eax,DWORD PTR gs:[esi]
  41bc66:	sbb    DWORD PTR gs:[ebx+0x62],0xfffffff7
  41bc6b:	push   0xc3ef15df
  41bc70:	icebp  
  41bc71:	(bad)  
  41bc72:	xlat   BYTE PTR ss:[ebx]
  41bc74:	into   
  41bc75:	pushf  
  41bc76:	ret    0xbc12
  41bc79:	lea    ecx,[esi-0x57c968f3]
  41bc7f:	mov    BYTE PTR [ebx-0x39],al
  41bc82:	sub    eax,0x839a3f03
  41bc87:	scas   eax,DWORD PTR es:[edi]
  41bc88:	xchg   edi,eax
  41bc89:	mov    al,0xe1
  41bc8b:	iret   
  41bc8c:	popf   
  41bc8d:	rol    edx,0x7f
  41bc90:	neg    BYTE PTR [edx]
  41bc92:	mov    cl,0x3a
  41bc94:	xor    al,0xaa
  41bc96:	fiadd  WORD PTR ds:0x1d0b8a8b
  41bc9c:	add    bh,al
  41bc9e:	sub    edi,ebx
  41bca0:	mov    ecx,0x4f3ccba9
  41bca5:	jp     0x41bd06
  41bca7:	jno    0x41bcd0
  41bca9:	ficom  WORD PTR [eax]
  41bcab:	retf   0x7483
  41bcae:	repnz mov BYTE PTR [edx],0x6f
  41bcb2:	fnstenv [ecx+0x47]
  41bcb5:	dec    esp
  41bcb6:	inc    esi
  41bcb7:	mov    ds:0xc6e1f732,eax
  41bcbc:	into   
  41bcbd:	mov    eax,0xc6181b19
  41bcc2:	jp     0x41bcd1
  41bcc4:	jo     0x41bc74
  41bcc6:	call   0xa9a3:0x56a39e02
  41bccd:	dec    ecx
  41bcce:	out    dx,eax
  41bccf:	aas    
  41bcd0:	jg     0x41bcf8
  41bcd2:	adc    DWORD PTR [ecx],ebx
  41bcd4:	imul   BYTE PTR [ebx]
  41bcd6:	push   ss
  41bcd7:	sbb    DWORD PTR [edx],0x14
  41bcda:	xchg   esi,eax
  41bcdb:	jno    0x41bc6f
  41bcdd:	stos   BYTE PTR es:[edi],al
  41bcde:	(bad)  
  41bce0:	mov    bl,BYTE PTR [ebp+0x4c]
  41bce3:	lea    edi,[ecx]
  41bce5:	jg     0x41bccd
  41bce7:	fisttp WORD PTR [eax]
  41bce9:	sar    BYTE PTR [edi+ebp*2+0x5a],cl
  41bced:	inc    esp
  41bcee:	test   DWORD PTR [edi-0x27],0x5bce06d
  41bcf5:	mov    eax,0x37ac6522
  41bcfa:	push   es
  41bcfb:	pop    es
  41bcfc:	hlt    
  41bcfd:	pop    ebx
  41bcfe:	popa   
  41bcff:	cli    
  41bd00:	sahf   
  41bd01:	cmp    DWORD PTR [edi+0x4ac9a473],esi
  41bd07:	shl    DWORD PTR [edx-0x7f],0x8a
  41bd0b:	sbb    BYTE PTR [esi],al
  41bd0d:	add    cl,BYTE PTR [esp-0x3062f4ce]
  41bd14:	mov    cl,0xa9
  41bd16:	lahf   
  41bd17:	mov    ecx,0x933f03f6
  41bd1c:	or     ebx,esp
  41bd1e:	lods   eax,DWORD PTR ds:[esi]
  41bd1f:	pop    esp
  41bd20:	mov    edi,0xbcecb88d
  41bd25:	test   BYTE PTR [ebx],0x9d
  41bd28:	jnp    0x41bd4c
  41bd2a:	fild   QWORD PTR [ecx+eax*2-0x4fd8d49c]
  41bd31:	in     al,dx
  41bd32:	popa   
  41bd33:	mov    eax,ss
  41bd35:	jecxz  0x41bd3e
  41bd37:	mov    ax,ds:0xfd3dbbe5
  41bd3d:	iret   
  41bd3e:	xchg   edi,eax
  41bd3f:	sub    DWORD PTR [eax+0xa77ae6],edi
  41bd45:	daa    
  41bd46:	or     ebx,edx
  41bd48:	es iret 
  41bd4a:	cli    
  41bd4b:	push   ds
  41bd4c:	push   ebp
  41bd4d:	test   BYTE PTR [ecx],al
  41bd4f:	xchg   ebx,eax
  41bd50:	inc    esi
  41bd51:	loopne 0x41bdb9
  41bd53:	adc    al,0x13
  41bd55:	xor    DWORD PTR [ebx+edi*1],0xa334b34a
  41bd5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd5d:	jae    0x41bd17
  41bd5f:	sbb    edi,DWORD PTR ds:0xbc1ac90
  41bd65:	pushf  
  41bd66:	mov    ds:0x7b00ae16,al
  41bd6b:	fldlg2 
  41bd6d:	push   edx
  41bd6e:	mov    esp,DWORD PTR [esi-0x626b4c73]
  41bd74:	jbe    0x41bdf5
  41bd76:	and    eax,0x740840b3
  41bd7b:	xor    BYTE PTR [esi],al
  41bd7d:	jle    0x41bd57
  41bd7f:	sti    
  41bd80:	xor    DWORD PTR [ecx],eax
  41bd82:	addr16 (bad) 
  41bd85:	add    DWORD PTR [edi+esi*4],esp
  41bd88:	test   BYTE PTR [ebx-0x48801953],dl
  41bd8e:	inc    edi
  41bd8f:	xor    eax,0x5fd9d296
  41bd94:	jle    0x41bdaa
  41bd96:	fabs   
  41bd98:	or     al,0x87
  41bd9a:	and    DWORD PTR [edx],ebx
  41bd9c:	popf   
  41bd9d:	adc    al,0xb0
  41bd9f:	xor    al,0xa2
  41bda1:	push   cs
  41bda2:	cmp    al,0xd1
  41bda4:	(bad)
  41bda7:	loopne 0x41bd40
  41bda9:	inc    ebx
  41bdaa:	in     eax,0xda
  41bdac:	push   ds
  41bdad:	sar    DWORD PTR [esi],cl
  41bdaf:	jp     0x41be1b
  41bdb1:	adc    al,0x59
  41bdb3:	fild   DWORD PTR [esi+0x34b87eaf]
  41bdb9:	sbb    DWORD PTR [ebp+eax*1+0x5a],edi
  41bdbd:	cmp    al,0x86
  41bdbf:	pop    ds
  41bdc0:	sbb    edi,esi
  41bdc2:	mov    bh,0xeb
  41bdc5:	test   eax,0xb85072d0
  41bdca:	adc    edx,ebx
  41bdcc:	push   ds
  41bdcd:	aam    0xf6
  41bdcf:	fidivr WORD PTR [esi+0x5d]
  41bdd2:	in     al,dx
  41bdd3:	xchg   edx,eax
  41bdd4:	int    0xa0
  41bdd6:	lahf   
  41bdd7:	and    esi,DWORD PTR [ebp-0x40262b13]
  41bddd:	sbb    esp,ebx
  41bddf:	push   0x8
  41bde1:	cmp    eax,0x20629f58
  41bde6:	mov    bl,0xee
  41bde8:	out    0x68,al
  41bdea:	(bad)  
  41bdeb:	daa    
  41bdec:	or     al,bl
  41bdee:	fnstenv [edx+esi*2]
  41bdf1:	aaa    
  41bdf2:	iret   
  41bdf3:	dec    esp
  41bdf4:	fidiv  DWORD PTR [edi]
  41bdf6:	or     BYTE PTR [ecx],al
  41bdf8:	or     al,0x78
  41bdfa:	adc    DWORD PTR [edx-0x7b],eax
  41bdfd:	sub    ebx,ebp
  41bdff:	stos   BYTE PTR es:[edi],al
  41be00:	mov    ebp,0xf2479fe
  41be05:	mov    ds:0x463474ae,al
  41be0a:	or     esi,DWORD PTR [ebx]
  41be0c:	sbb    BYTE PTR [eax],dh
  41be0e:	sub    eax,0x82498a40
  41be13:	jp     0x41be80
  41be15:	adc    ebp,ebx
  41be17:	jl     0x41bdf3
  41be19:	iret   
  41be1a:	xor    dh,ah
  41be1c:	add    al,0xa3
  41be1e:	push   0x34f9ed09
  41be23:	cmc    
  41be24:	fs adc al,0x69
  41be27:	dec    edx
  41be28:	stc    
  41be29:	fisubr WORD PTR [ebx+0x7]
  41be2c:	cmp    eax,eax
  41be2e:	or     bl,ah
  41be30:	pop    edx
  41be31:	fcomp  QWORD PTR [edi-0x12]
  41be34:	adc    ch,BYTE PTR [ebp-0x73627c43]
  41be3a:	mov    eax,0x58521e51
  41be3f:	push   ecx
  41be40:	dec    ebp
  41be41:	jl     0x41be06
  41be43:	fld    TBYTE PTR ds:0x22416029
  41be49:	xor    DWORD PTR [edi+0x6f],0x55
  41be4d:	mov    ds:0x415a3e7e,al
  41be52:	jne    0x41be17
  41be54:	mov    eax,ds:0xa1c2237b
  41be59:	jmp    0xab2f:0x12d9b07f
  41be60:	add    eax,0x57c021a3
  41be65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be67:	mov    WORD PTR [edx+0x54694b60],es
  41be6d:	(bad)  
  41be6e:	sbb    bh,BYTE PTR [edx+eiz*2]
  41be71:	loope  0x41be06
  41be73:	sub    al,0xe
  41be75:	and    ecx,ebp
  41be77:	or     BYTE PTR [edi-0x60],0x46
  41be7b:	push   ebx
  41be7c:	xchg   edi,eax
  41be7d:	inc    ebp
  41be7e:	sub    ebx,DWORD PTR [eax*4-0xf8a29a4]
  41be85:	mov    eax,ds:0x4ea44fb5
  41be8a:	aam    0x1e
  41be8c:	or     ebp,DWORD PTR [ecx+edx*2]
  41be8f:	ret    0x484f
  41be92:	idiv   DWORD PTR [ebx+0x0]
  41be95:	loopne 0x41be55
  41be97:	dec    ebp
  41be98:	sub    DWORD PTR [eax-0x69dab726],eax
  41be9e:	cmp    eax,0x97a64c0
  41bea3:	or     esp,eax
  41bea5:	repz sbb BYTE PTR [edx-0x36417a9a],dh
  41beac:	inc    eax
  41bead:	je     0x41bf04
  41beaf:	xchg   ebp,eax
  41beb0:	jmp    0xf0170467
  41beb5:	dec    ecx
  41beb6:	jecxz  0x41be72
  41beb8:	outs   dx,DWORD PTR ds:[esi]
  41beb9:	loopne 0x41bf36
  41bebb:	popf   
  41bebc:	mov    esp,0x9e5b78d7
  41bec1:	xchg   ebp,eax
  41bec2:	xor    edi,eax
  41bec4:	stos   BYTE PTR es:[edi],al
  41bec5:	dec    esp
  41bec6:	xor    DWORD PTR [ebp-0x56],edi
  41bec9:	mov    ebx,0x2563b582
  41bece:	or     ebp,DWORD PTR [ecx+0xf]
  41bed1:	mov    esp,0xe2598bb
  41bed6:	cmc    
  41bed7:	and    ch,BYTE PTR [ebx+0xed9ac1b]
  41bedd:	and    ebp,0x3f
  41bee0:	jmp    0x59be:0x2e248951
  41bee7:	jno    0x41befc
  41bee9:	shr    cl,1
  41beeb:	dec    edi
  41beec:	inc    ebp
  41beed:	ret    
  41beee:	cmp    eax,0xc892041f
  41bef3:	push   edi
  41bef4:	adc    ebx,0xdcc5cd5
  41befa:	pop    ebp
  41befb:	and    BYTE PTR [ecx-0x33],dh
  41befe:	pop    esi
  41beff:	sub    eax,0xd0ef50d9
  41bf04:	xor    eax,0xe57bbdf7
  41bf09:	std    
  41bf0a:	imul   edx,edx,0xfffffff4
  41bf0d:	jns    0x41bf56
  41bf0f:	(bad)  
  41bf10:	cmp    eax,0x61efd100
  41bf15:	pop    ecx
  41bf16:	xchg   ecx,eax
  41bf17:	cmp    eax,0xbb642d38
  41bf1c:	outs   dx,BYTE PTR ds:[esi]
  41bf1d:	jg     0x41becf
  41bf1f:	int3   
  41bf20:	sbb    eax,DWORD PTR [edx+0x7a]
  41bf23:	(bad)  [ebp+0xe]
  41bf26:	push   cs
  41bf27:	out    0xf2,al
  41bf29:	add    al,0xfc
  41bf2b:	push   0x5b4facf
  41bf30:	or     esi,DWORD PTR [esi]
  41bf32:	push   eax
  41bf33:	(bad)  
  41bf34:	repz arpl WORD PTR [edx],di
  41bf37:	stos   DWORD PTR es:[edi],eax
  41bf38:	mov    eax,ds:0xc1fd1130
  41bf3d:	jmp    0x9d14e366
  41bf42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf43:	jae    0x41bf6d
  41bf45:	je     0x41bfb5
  41bf47:	sbb    dh,cl
  41bf49:	mov    eax,?
  41bf4b:	call   0x21e5b2aa
  41bf50:	push   edx
  41bf51:	inc    eax
  41bf52:	xchg   esi,eax
  41bf53:	ins    BYTE PTR es:[edi],dx
  41bf54:	mov    esp,ds
  41bf56:	bound  esi,QWORD PTR [esi-0x2d98e38c]
  41bf5c:	mov    edi,0x770b5f3a
  41bf61:	and    al,0x26
  41bf63:	cmp    ah,al
  41bf65:	add    ebp,0x278cced2
  41bf6b:	retf   
  41bf6c:	aas    
  41bf6d:	mov    esi,0xaa602cbd
  41bf72:	pop    ss
  41bf73:	push   ebp
  41bf74:	mov    dh,0xfe
  41bf76:	sbb    esp,DWORD PTR [ebx+0x52]
  41bf79:	retf   
  41bf7a:	jecxz  0x41bf61
  41bf7c:	loopne 0x41bf4f
  41bf7e:	retf   0x727a
  41bf81:	jb     0x41bf09
  41bf83:	add    DWORD PTR [ecx+0xf],ecx
  41bf86:	xor    ecx,ebx
  41bf88:	push   esi
  41bf89:	push   esi
  41bf8a:	dec    eax
  41bf8b:	retf   
  41bf8c:	ret    
  41bf8d:	mov    eax,0x240687ef
  41bf92:	nop
  41bf93:	repnz sbb BYTE PTR [edi-0x2e],0xb1
  41bf98:	retf   
  41bf99:	cmp    al,0xad
  41bf9b:	daa    
  41bf9c:	test   DWORD PTR ds:0x539f3a64,ebp
  41bfa2:	call   0x923fb5b5
  41bfa7:	fnstenv [ebx-0x7293de3f]
  41bfad:	mov    edi,0xcf7c7319
  41bfb2:	sbb    al,0x90
  41bfb4:	sub    ebx,DWORD PTR [edi-0x39]
  41bfb7:	push   ebp
  41bfb8:	mov    ecx,0x19a756e0
  41bfbd:	or     eax,0x3ca7f791
  41bfc2:	retf   
  41bfc3:	inc    edi
  41bfc4:	inc    esi
  41bfc5:	sti    
  41bfc6:	push   0x1311c37d
  41bfcb:	xchg   edi,eax
  41bfcc:	jb     0x41bfb9
  41bfce:	scas   al,BYTE PTR es:[edi]
  41bfcf:	(bad)  
  41bfd0:	mov    WORD PTR [edx+0x3b],ss
  41bfd3:	stos   DWORD PTR es:[edi],eax
  41bfd4:	jmp    0x715f:0x41bca6d2
  41bfdb:	and    BYTE PTR [edi],ch
  41bfdd:	test   bh,al
  41bfdf:	and    ah,BYTE PTR [edx+eax*8+0x4f]
  41bfe3:	mov    edx,0x29a4f996
  41bfe8:	pop    eax
  41bfe9:	stc    
  41bfea:	ja     0x41bf81
  41bfec:	pusha  
  41bfed:	imul   ebx,DWORD PTR [eax],0x3c53bda8
  41bff3:	loop   0x41c065
  41bff5:	inc    edx
  41bff6:	out    dx,al
  41bff7:	data16 stc 
  41bff9:	mov    edx,0x45d38c04
  41bffe:	arpl   WORD PTR [ecx+0x325ea252],dx
  41c004:	add    eax,0x4a831a47
  41c009:	sub    ebx,DWORD PTR [ecx]
  41c00b:	xchg   ebp,eax
  41c00c:	popf   
  41c00d:	mov    edx,0xa44a8d9a
  41c012:	mov    ds:0xf42035b2,eax
  41c017:	xchg   esi,eax
  41c018:	fwait
  41c019:	push   0xcc51b872
  41c01e:	and    DWORD PTR [ebx],ecx
  41c020:	mov    dl,0x88
  41c022:	add    eax,0x3c4511fb
  41c027:	push   ebx
  41c028:	inc    esi
  41c029:	loope  0x41c052
  41c02b:	adc    eax,0x7a74d1e1
  41c030:	daa    
  41c031:	lea    edi,[ebx+0x67503d35]
  41c037:	pop    ebx
  41c038:	stc    
  41c039:	cmc    
  41c03a:	jmp    0x9913c103
  41c03f:	dec    ebp
  41c040:	mov    al,ds:0xb6819ec6
  41c045:	out    0x4d,al
  41c047:	adc    eax,0x6873246e
  41c04c:	jb     0x41c031
  41c04e:	jb     0x41c0b1
  41c050:	idiv   BYTE PTR [ebp+0x5a60b4e9]
  41c056:	fdiv   QWORD PTR [edi+0x1e60ec6f]
  41c05c:	cmp    al,0x43
  41c05e:	mov    cl,0x32
  41c060:	ins    DWORD PTR es:[edi],dx
  41c061:	sub    al,0xa4
  41c063:	test   edi,eax
  41c065:	sbb    ch,BYTE PTR [edx+0x36]
  41c068:	loopne 0x41c091
  41c06a:	test   BYTE PTR [edx],dh
  41c06c:	aas    
  41c06d:	popf   
  41c06e:	(bad)  
  41c06f:	mov    dh,0xde
  41c071:	pop    ds
  41c072:	add    BYTE PTR [ebx+0x71ff7063],0x97
  41c079:	xor    BYTE PTR ds:0x4710c6e,al
  41c07f:	add    BYTE PTR [eax],al
  41c081:	add    BYTE PTR [esi-0x10fe18c6],dh
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	xlat   BYTE PTR ds:[ebx]
  41c08f:	(bad)  
  41c090:	sbb    cl,BYTE PTR [eax+0x13c92]
  41c096:	cmc    
  41c097:	add    al,0x0
  41c099:	add    BYTE PTR [edx-0x4a],ch
  41c09c:	add    cl,BYTE PTR [ebx+0x67]
  41c09f:	cmp    edi,ebp
  41c0a1:	pushf  
  41c0a2:	jecxz  0x41c0f9
  41c0a4:	jge    0x41c028
  41c0a6:	stc    
  41c0a7:	int3   
  41c0a8:	daa    
  41c0a9:	mov    ch,0x19
  41c0ab:	mov    bl,0xd4
  41c0ad:	in     eax,dx
  41c0ae:	int3   
  41c0af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0b0:	loop   0x41c107
  41c0b2:	(bad)  
  41c0b3:	jg     0x41c081
  41c0b5:	pop    eax
  41c0b6:	pusha  
  41c0b7:	pop    edx
  41c0b8:	adc    edx,edi
  41c0ba:	scas   eax,DWORD PTR es:[edi]
  41c0bb:	add    ah,bh
  41c0bd:	in     al,dx
  41c0be:	jg     0x41c0b8
  41c0c0:	test   al,0x77
  41c0c2:	ret    0xd57b
  41c0c5:	neg    DWORD PTR [esi-0x7b]
  41c0c8:	shr    cl,cl
  41c0ca:	add    eax,0xb5af5e77
  41c0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0d0:	lods   eax,DWORD PTR ds:[esi]
  41c0d1:	aam    0x5a
  41c0d3:	jno    0x41c133
  41c0d5:	aaa    
  41c0d6:	xchg   esp,eax
  41c0d7:	cdq    
  41c0d8:	and    bh,BYTE PTR [edx+0x7b]
  41c0db:	pop    es
  41c0dc:	retf   
  41c0dd:	idiv   BYTE PTR [edx]
  41c0df:	xacquire xchg DWORD PTR ss:[ebx-0x26f8d9b7],edx
  41c0e7:	xor    al,0x4f
  41c0e9:	sub    ecx,esi
  41c0eb:	pop    ebx
  41c0ec:	pop    ecx
  41c0ed:	in     al,dx
  41c0ee:	dec    DWORD PTR [ebp-0x58511148]
  41c0f4:	cli    
  41c0f5:	sub    al,BYTE PTR [ecx]
  41c0f7:	mov    ebx,0x992c8141
  41c0fc:	and    ebp,DWORD PTR [ebp-0x71ac00f8]
  41c102:	sbb    esp,DWORD PTR [edx+0x3a]
  41c105:	adc    al,0xb4
  41c107:	mov    eax,0x8a5c92ab
  41c10c:	sub    eax,0xc1ccef30
  41c111:	mov    ecx,0xae0c8f10
  41c116:	jmp    esp
  41c118:	push   eax
  41c119:	je     0x41c108
  41c11b:	mov    ds:0xc615d0b3,al
  41c120:	inc    eax
  41c121:	out    0x59,eax
  41c123:	cmp    eax,0x920c5964
  41c128:	push   0xf05f5a32
  41c12d:	push   ecx
  41c12e:	mov    eax,0xa97489b1
  41c133:	xchg   esi,eax
  41c134:	xor    BYTE PTR [ecx],dh
  41c136:	dec    eax
  41c137:	xchg   ebp,eax
  41c138:	cmp    edi,DWORD PTR [eax-0x4a]
  41c13b:	arpl   WORD PTR [ebx+eax*8+0x57],ax
  41c13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c140:	(bad)  
  41c141:	std    
  41c142:	scas   eax,DWORD PTR es:[edi]
  41c143:	dec    esp
  41c144:	ss retf 0x2653
  41c148:	aas    
  41c149:	mov    ecx,edx
  41c14b:	sbb    BYTE PTR [ecx+edi*4+0x7f42d4e1],al
  41c152:	imul   edx,DWORD PTR [edx],0x4eabd7f8
  41c158:	pop    ecx
  41c159:	inc    edx
  41c15a:	(bad)  
  41c15b:	mov    BYTE PTR [edi-0x7561072e],cl
  41c161:	lock scas al,BYTE PTR es:[edi]
  41c163:	bound  esp,QWORD PTR [ecx-0x6c]
  41c166:	push   ebx
  41c167:	cld    
  41c168:	addr16 jae 0x41c1c0
  41c16b:	lods   eax,DWORD PTR ds:[esi]
  41c16c:	dec    edx
  41c16d:	or     eax,0x6b77c13e
  41c172:	retf   0xee1b
  41c175:	es cli 
  41c177:	dec    WORD PTR [ecx]
  41c17a:	xchg   esi,eax
  41c17b:	mov    dh,0x2e
  41c17d:	and    BYTE PTR [ebx+0x26],dh
  41c180:	fnstcw WORD PTR [edx+0x3b]
  41c183:	mov    ch,0xd7
  41c185:	mov    ecx,0xef74a09b
  41c18a:	pop    eax
  41c18b:	sbb    bl,BYTE PTR [ecx-0x5e4dda1a]
  41c191:	stos   DWORD PTR es:[edi],eax
  41c192:	imul   ebp,DWORD PTR [ebx],0xffffffb6
  41c195:	mov    edi,0xb90a54a
  41c19a:	and    BYTE PTR [ecx+0x61],cl
  41c19d:	xor    DWORD PTR [ecx+0x435e4acc],ebx
  41c1a3:	(bad)  
  41c1a4:	xchg   esp,eax
  41c1a5:	adc    DWORD PTR ds:0x8012fafe,ecx
  41c1ab:	or     esp,DWORD PTR [ecx-0x3b]
  41c1ae:	or     DWORD PTR [edx-0x2aa26b69],0x48
  41c1b5:	jbe    0x41c180
  41c1b7:	mov    ebp,0xd692c3ab
  41c1bc:	mov    cl,0xcb
  41c1be:	push   0xffffffab
  41c1c0:	rcr    BYTE PTR [edx+0x17],0xb8
  41c1c4:	dec    esi
  41c1c5:	xchg   BYTE PTR [esi-0x7f473d75],al
  41c1cb:	cmp    BYTE PTR [ecx-0x53],0xae
  41c1cf:	sub    BYTE PTR [esi+0x2eb57404],al
  41c1d5:	loop   0x41c1c8
  41c1d7:	fldcw  WORD PTR [edi]
  41c1d9:	popf   
  41c1da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1dc:	dec    edx
  41c1dd:	(bad)  
  41c1de:	jo     0x41c194
  41c1e0:	mov    DWORD PTR [esi],esp
  41c1e2:	sar    BYTE PTR [ebx-0x7a],cl
  41c1e5:	push   edi
  41c1e6:	mov    bh,0xd3
  41c1e8:	cs jnp 0x41c247
  41c1eb:	ins    BYTE PTR es:[edi],dx
  41c1ec:	aad    0xb6
  41c1ee:	stc    
  41c1ef:	xchg   ebp,eax
  41c1f0:	out    dx,al
  41c1f1:	mov    ch,0x52
  41c1f3:	cmp    BYTE PTR [eax-0xa],al
  41c1f6:	mov    bh,0x34
  41c1f8:	outs   dx,BYTE PTR ds:[esi]
  41c1f9:	mov    WORD PTR [edx+0x7a],fs
  41c1fc:	mov    ds:0x79fcd336,eax
  41c201:	mov    ah,0x51
  41c203:	xchg   ebx,eax
  41c204:	icebp  
  41c205:	xchg   edi,eax
  41c206:	inc    esp
  41c207:	pop    ds
  41c208:	sbb    eax,0xebe4b8a7
  41c20d:	dec    ebx
  41c20e:	adc    DWORD PTR ds:0xb035978e,ecx
  41c214:	lahf   
  41c215:	mov    ch,0x7
  41c217:	bound  ebp,QWORD PTR [ecx]
  41c219:	push   es
  41c21a:	mov    edi,edi
  41c21c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c21d:	mov    al,ds:0xdb90d6a4
  41c222:	mov    ebx,0xda490cf5
  41c227:	test   BYTE PTR [ebx+0x11],al
  41c22a:	jo     0x41c252
  41c22c:	test   eax,0x83520e69
  41c231:	add    eax,0x34a95c6f
  41c236:	fldenv [ebx]
  41c238:	sub    eax,DWORD PTR es:[edx+0x41df3bb1]
  41c23f:	inc    ebx
  41c240:	inc    esi
  41c241:	fcmovne st,st(6)
  41c243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c244:	sub    DWORD PTR [edi],esi
  41c246:	sbb    eax,0x2ee96d5d
  41c24b:	mov    dl,0xc4
  41c24d:	jae    0x41c2af
  41c24f:	sti    
  41c250:	xor    DWORD PTR [ebx+eiz*4+0x17],edx
  41c254:	xchg   esp,eax
  41c255:	inc    esi
  41c256:	dec    esp
  41c257:	mov    ebp,0x25915fe6
  41c25c:	fwait
  41c25d:	jmp    0xbc93:0xa3d47052
  41c264:	mov    ds:0xea2acc63,al
  41c269:	mov    WORD PTR [ebx-0x2f24a958],ss
  41c26f:	shr    BYTE PTR [edi-0x7416a370],cl
  41c275:	das    
  41c276:	cwde   
  41c277:	sbb    BYTE PTR ds:0xe5684e40,ch
  41c27d:	je     0x41c202
  41c27f:	mov    ch,BYTE PTR [eax+0x4d]
  41c282:	jmp    0x41c269
  41c284:	mov    al,0xb0
  41c286:	scas   eax,DWORD PTR es:[edi]
  41c287:	fdiv   st,st(4)
  41c289:	out    0x86,eax
  41c28b:	repnz (bad) 
  41c28d:	or     ecx,ebp
  41c28f:	mov    eax,ds:0xa3015173
  41c294:	mov    bl,BYTE PTR [esi+0x1a]
  41c297:	mov    ebp,0x690ca98e
  41c29c:	loope  0x41c2b1
  41c29e:	ds cmp eax,0xd3a7643e
  41c2a4:	dec    esi
  41c2a5:	out    dx,eax
  41c2a6:	push   eax
  41c2a7:	xchg   BYTE PTR [esi+edx*2+0x6e3285d7],cl
  41c2ae:	out    dx,eax
  41c2af:	mov    dh,0x93
  41c2b1:	out    0xd2,al
  41c2b3:	adc    bl,BYTE PTR [esi-0x80]
  41c2b6:	rcr    DWORD PTR [edx],0xa2
  41c2b9:	xor    eax,0xce77cfda
  41c2be:	sbb    al,0x71
  41c2c0:	cmp    al,BYTE PTR [ebp-0xc72efcb]
  41c2c6:	iret   
  41c2c7:	dec    ecx
  41c2c8:	inc    esi
  41c2c9:	out    dx,al
  41c2ca:	hlt    
  41c2cb:	das    
  41c2cc:	fdiv   DWORD PTR [ebp+0xe7ad3d2]
  41c2d2:	mov    dh,0xf7
  41c2d4:	push   eax
  41c2d5:	mov    dl,0x3
  41c2d7:	cmp    al,0x42
  41c2d9:	ficom  WORD PTR [eax+eax*8-0x669825c4]
  41c2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2e1:	adc    al,0xaf
  41c2e3:	test   DWORD PTR [ebx+0x5449a56f],edi
  41c2e9:	cld    
  41c2ea:	sbb    ecx,ebp
  41c2ec:	adc    DWORD PTR [ecx],ebx
  41c2ee:	and    eax,0xaf69e24e
  41c2f3:	jnp    0x41c2c4
  41c2f5:	or     dl,BYTE PTR [eax]
  41c2f7:	fdivr  st,st(2)
  41c2f9:	sbb    BYTE PTR [ecx-0xc777c7a],0xea
  41c300:	xchg   ebx,eax
  41c301:	dec    ecx
  41c302:	enter  0x93ef,0xf8
  41c306:	add    DWORD PTR [eax],edi
  41c308:	xchg   esp,eax
  41c309:	pop    eax
  41c30a:	mov    DWORD PTR ds:0x812249cf,ecx
  41c310:	jnp    0x41c2a4
  41c312:	pusha  
  41c313:	sub    al,0xe3
  41c315:	mov    esi,0xa9c451
  41c31a:	cmp    DWORD PTR [edi],eax
  41c31c:	lea    edx,cs:[eax-0x73171c54]
  41c323:	add    BYTE PTR [eax-0x6d97fa5b],al
  41c329:	test   al,0x1d
  41c32b:	jae    0x41c366
  41c32d:	add    DWORD PTR [ecx-0x6c8e56e4],esp
  41c333:	fsubr  st,st(0)
  41c335:	xor    al,0x9a
  41c337:	popa   
  41c338:	push   es
  41c339:	push   eax
  41c33a:	(bad)  
  41c33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c33c:	ins    DWORD PTR es:[edi],dx
  41c33d:	mov    edx,0xb3227211
  41c342:	lahf   
  41c343:	sub    BYTE PTR [edi],ah
  41c345:	hlt    
  41c346:	rcr    BYTE PTR [eax],1
  41c348:	cmp    ah,al
  41c34a:	out    0x9d,eax
  41c34c:	fyl2xp1 
  41c34e:	sbb    ch,BYTE PTR [esp+ecx*2+0x6c]
  41c352:	jge    0x41c3b6
  41c354:	out    0x94,al
  41c356:	test   cl,dh
  41c358:	ds inc eax
  41c35a:	rcr    DWORD PTR [ecx],0xa3
  41c35d:	inc    ebx
  41c35e:	cmp    ebx,edx
  41c360:	or     edi,DWORD PTR [edi+ebp*2-0x79d414e]
  41c367:	pop    esi
  41c368:	scas   al,BYTE PTR es:[edi]
  41c369:	sbb    ebx,DWORD PTR [ecx+edx*1+0x65]
  41c36d:	cld    
  41c36e:	push   esp
  41c36f:	in     eax,0x3a
  41c371:	xor    eax,0xb489ed54
  41c376:	out    0x1e,eax
  41c378:	xor    BYTE PTR [edi+0x6a],dl
  41c37b:	push   0x170de1c8
  41c380:	dec    edi
  41c381:	xchg   ecx,eax
  41c382:	xchg   edi,eax
  41c383:	ret    
  41c384:	push   ebp
  41c385:	retf   0xa683
  41c388:	test   al,0x3f
  41c38a:	xchg   esi,eax
  41c38b:	addr16 cmc 
  41c38d:	adc    BYTE PTR [edi-0x6c],dh
  41c390:	push   ds
  41c391:	inc    DWORD PTR [ebp+0x6a]
  41c394:	push   esi
  41c395:	xchg   esi,eax
  41c396:	mov    ecx,0x245d2e85
  41c39b:	mov    edi,0xd19f26fe
  41c3a0:	and    eax,ecx
  41c3a2:	pop    edi
  41c3a3:	jle    0x41c37f
  41c3a5:	test   al,0x1
  41c3a7:	loop   0x41c3e8
  41c3a9:	frstor [edx+0x3c]
  41c3ac:	outs   dx,DWORD PTR es:[esi]
  41c3ae:	repz inc esp
  41c3b0:	xchg   esi,eax
  41c3b1:	cld    
  41c3b2:	lds    edx,FWORD PTR [eax]
  41c3b4:	jno    0x41c3ca
  41c3b6:	test   DWORD PTR [edi-0x2b],ebp
  41c3b9:	js     0x41c423
  41c3bb:	(bad)  
  41c3bc:	and    al,0xa3
  41c3be:	ret    
  41c3bf:	(bad)  
  41c3c0:	mov    edi,0x7f915ea3
  41c3c5:	retf   
  41c3c6:	popf   
  41c3c7:	mov    gs,WORD PTR [edx+0x5]
  41c3ca:	cmc    
  41c3cb:	jmp    0xcdce:0xac2263b2
  41c3d2:	xor    eax,0x43f3029b
  41c3d7:	out    dx,al
  41c3d8:	cmp    al,0x3f
  41c3da:	adc    eax,0x33f31570
  41c3df:	test   DWORD PTR [eax+0x63],eax
  41c3e2:	mov    cl,0x74
  41c3e4:	dec    edx
  41c3e5:	xor    ah,BYTE PTR [ebx-0x406184cb]
  41c3eb:	pop    ebp
  41c3ec:	push   ss
  41c3ed:	jb     0x41c403
  41c3ef:	mov    dh,0x9e
  41c3f1:	add    ecx,DWORD PTR [eax-0x5f67959e]
  41c3f7:	push   0xffffffac
  41c3f9:	dec    ebp
  41c3fa:	arpl   WORD PTR [edi+0x7e],bp
  41c3fd:	es pop edx
  41c3ff:	or     ebp,ecx
  41c401:	aam    0x1d
  41c403:	mov    ds:0x4ccafc19,al
  41c408:	out    0x9e,al
  41c40a:	xor    ecx,DWORD PTR [edi+esi*1+0x25]
  41c40e:	jl     0x41c3f4
  41c410:	mov    dh,0xa8
  41c412:	sti    
  41c413:	xchg   BYTE PTR [esi+0x5a],dh
  41c416:	adc    eax,0x6803feb3
  41c41b:	xor    eax,0xd648d3d1
  41c420:	clc    
  41c421:	out    dx,eax
  41c422:	jg     0x41c3f6
  41c424:	test   DWORD PTR ds:0x9aa19933,ebp
  41c42a:	je     0x41c4a5
  41c42c:	push   ss
  41c42d:	js     0x41c3b8
  41c42f:	cs call 0x266b:0xd81a4fd2
  41c437:	lahf   
  41c438:	sbb    ah,BYTE PTR [ebx]
  41c43a:	(bad)  
  41c43b:	jbe    0x41c438
  41c43d:	and    DWORD PTR [esi+0x44c3bdc9],edi
  41c443:	push   ds
  41c444:	mov    edi,0xdf558f87
  41c449:	mov    ebx,0xa6aaf710
  41c44e:	or     DWORD PTR [ecx-0x14a227d4],edx
  41c454:	xchg   esi,eax
  41c455:	mov    bl,0x4b
  41c457:	xor    eax,0x95d5268b
  41c45c:	xor    DWORD PTR [edi+0x59684504],0x71
  41c463:	in     al,dx
  41c464:	sbb    BYTE PTR [ecx-0x1ab946fc],ch
  41c46a:	loopne 0x41c40f
  41c46c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c46d:	add    BYTE PTR [edx+0x7143c5f1],cl
  41c473:	cs mov al,0x73
  41c476:	sub    edi,DWORD PTR [ecx+0x35d862f0]
  41c47c:	sti    
  41c47d:	(bad)  
  41c47e:	jmp    0x6ee:0x3b0124d5
  41c485:	push   0x72
  41c487:	cdq    
  41c488:	xchg   esi,eax
  41c489:	lahf   
  41c48a:	xchg   ebp,eax
  41c48b:	push   cs
  41c48c:	fist   WORD PTR [esi]
  41c48e:	(bad)  
  41c48f:	push   ds
  41c490:	cs cmp al,0xcf
  41c493:	jp     0x41c4c5
  41c495:	jecxz  0x41c465
  41c497:	ficom  DWORD PTR [edx]
  41c499:	scas   eax,DWORD PTR es:[edi]
  41c49a:	aaa    
  41c49b:	out    dx,eax
  41c49c:	dec    ebp
  41c49d:	outs   dx,DWORD PTR ds:[esi]
  41c49e:	popf   
  41c49f:	and    bh,BYTE PTR [esi+0x4d]
  41c4a2:	add    DWORD PTR [ecx+0x39],0x626de223
  41c4a9:	test   eax,0x1280b3d3
  41c4ae:	mov    eax,ds:0x1886e53c
  41c4b3:	xchg   edi,eax
  41c4b4:	pushf  
  41c4b5:	retf   0x6795
  41c4b8:	push   esi
  41c4b9:	nop
  41c4ba:	adc    edi,ecx
  41c4bc:	inc    esp
  41c4bd:	dec    esi
  41c4be:	ins    DWORD PTR es:[edi],dx
  41c4bf:	ds pop eax
  41c4c1:	and    eax,0xa96df6ec
  41c4c6:	daa    
  41c4c7:	stos   BYTE PTR es:[edi],al
  41c4c8:	popf   
  41c4c9:	not    BYTE PTR [edi+0x30]
  41c4cc:	call   0x12f5:0x608d18f5
  41c4d3:	xor    esi,DWORD PTR [ebp+0x81a9b41]
  41c4d9:	rcl    DWORD PTR [esp+eax*2],cl
  41c4dc:	xor    eax,0xa3f5de2d
  41c4e1:	mov    eax,ds:0xa6774af0
  41c4e6:	cmp    dl,dh
  41c4e8:	das    
  41c4e9:	call   0x63d0:0x2b3cdcfc
  41c4f0:	add    eax,0xc7770bce
  41c4f5:	xchg   ebx,eax
  41c4f6:	adc    al,0xf7
  41c4f8:	xor    eax,0x7c671772
  41c4fd:	push   0x4d
  41c4ff:	and    dl,BYTE PTR [ebx]
  41c501:	lods   eax,DWORD PTR ds:[esi]
  41c502:	xor    eax,0x31fa959a
  41c507:	les    esi,FWORD PTR [edi]
  41c509:	push   edx
  41c50a:	lds    edi,FWORD PTR [ecx+edi*8]
  41c50d:	test   ecx,ecx
  41c50f:	or     eax,eax
  41c511:	loop   0x41c499
  41c513:	mov    esi,0x42a00f75
  41c518:	xchg   ebx,eax
  41c519:	or     ecx,DWORD PTR ds:0x522f43ab
  41c51f:	ins    BYTE PTR es:[edi],dx
  41c520:	or     cl,BYTE PTR [eax-0x7e09410b]
  41c526:	test   eax,0xc69c83a
  41c52b:	mov    esp,0x6712f2c
  41c530:	xlat   BYTE PTR ds:[ebx]
  41c531:	or     BYTE PTR [ebx+0x7a],0x1d
  41c535:	push   ecx
  41c536:	outs   dx,DWORD PTR ds:[esi]
  41c537:	ds sub eax,0x499b20b0
  41c53d:	cmp    ebp,DWORD PTR [eax+eiz*1+0x29]
  41c541:	jle    0x41c5c1
  41c543:	lods   al,BYTE PTR ds:[esi]
  41c544:	in     al,0xda
  41c546:	out    dx,eax
  41c547:	mov    esp,0xabc3256d
  41c54c:	out    dx,eax
  41c54d:	cmp    al,0x23
  41c54f:	fidiv  DWORD PTR [esi]
  41c551:	or     eax,0xe0f26b1f
  41c556:	ret    
  41c557:	ds das 
  41c559:	(bad)  
  41c55a:	jmp    0x41c5a3
  41c55c:	sub    DWORD PTR ds:[eax-0x2da3483f],ebx
  41c563:	push   cs
  41c564:	mov    ch,0xd0
  41c566:	leave  
  41c567:	xor    al,0xb2
  41c569:	xchg   dx,ax
  41c56b:	shl    DWORD PTR [ecx],0x77
  41c56e:	dec    ecx
  41c56f:	cmc    
  41c570:	jae    0x41c543
  41c572:	push   ss
  41c573:	mov    edx,0x193ecd18
  41c578:	push   0xfd4a180c
  41c57d:	xor    eax,0x7db65d64
  41c582:	(bad)  
  41c583:	mov    ah,0x7c
  41c585:	fsubr  QWORD PTR [edx+eiz*1]
  41c588:	out    0x2f,eax
  41c58a:	cld    
  41c58b:	call   0xfa61c8
  41c590:	add    BYTE PTR [eax],al
  41c592:	in     eax,0x12
  41c594:	pop    es
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	iret   
  41c59f:	sbb    bh,dh
  41c5a1:	dec    ebp
  41c5a2:	xchg   DWORD PTR [ecx+0x1],eax
  41c5a5:	add    ch,dh
  41c5a7:	add    al,0x0
  41c5a9:	add    dh,bh
  41c5ab:	lods   al,BYTE PTR ds:[esi]
  41c5ac:	outs   dx,DWORD PTR ds:[esi]
  41c5ad:	adc    eax,0xd6b80283
  41c5b2:	ret    
  41c5b3:	mov    ebx,0x6d5a43d1
  41c5b8:	or     ebp,DWORD PTR [eax]
  41c5ba:	fdivr  DWORD PTR [edi+esi*1]
  41c5bd:	or     al,0x6d
  41c5bf:	cld    
  41c5c0:	dec    esi
  41c5c1:	mov    cl,0x8c
  41c5c3:	lods   al,BYTE PTR ds:[esi]
  41c5c4:	scas   eax,DWORD PTR es:[edi]
  41c5c5:	push   es
  41c5c6:	sbb    BYTE PTR [ebx+0x30fa6ca4],bl
  41c5cc:	sub    eax,0xb8725b97
  41c5d1:	ins    BYTE PTR es:[edi],dx
  41c5d2:	out    dx,eax
  41c5d3:	mov    bl,BYTE PTR [edi]
  41c5d5:	sar    BYTE PTR [esi],1
  41c5d7:	imul   ebx,DWORD PTR [edi-0x6e],0xffffffdd
  41c5db:	in     al,0xfe
  41c5dd:	lods   al,BYTE PTR ds:[esi]
  41c5de:	add    al,0x38
  41c5e0:	and    BYTE PTR [ebp+0x62c87a06],cl
  41c5e6:	int    0x4a
  41c5e8:	(bad)  
  41c5e9:	aaa    
  41c5ea:	mov    ah,0xf9
  41c5ec:	add    cl,BYTE PTR [ecx-0x48028ac4]
  41c5f2:	std    
  41c5f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5f4:	loopne 0x41c5b5
  41c5f6:	and    eax,0x381316af
  41c5fb:	jg     0x41c5e2
  41c5fd:	jae    0x41c600
  41c5ff:	mov    cl,0xe
  41c601:	mov    ecx,0xae4eeeb2
  41c606:	or     BYTE PTR ds:0xd71e8d71,bh
  41c60c:	aad    0xb7
  41c60e:	ins    DWORD PTR es:[edi],dx
  41c60f:	lds    ebp,FWORD PTR [esp+eax*4-0x4c402dbd]
  41c616:	and    ecx,edi
  41c618:	xchg   esi,eax
  41c619:	lahf   
  41c61a:	jmp    FWORD PTR [esi+esi*8-0x3f]
  41c61e:	cmp    BYTE PTR ds:0x886a8c9a,ah
  41c624:	mov    ecx,0x2bfeb8ba
  41c629:	sbb    al,0x6f
  41c62b:	pop    ecx
  41c62c:	xchg   esp,eax
  41c62d:	jp     0x41c637
  41c62f:	int3   
  41c630:	mov    eax,0x57273442
  41c635:	ret    0x1bef
  41c638:	add    al,0x5f
  41c63a:	lock inc ecx
  41c63c:	pop    eax
  41c63d:	jge    0x41c640
  41c63f:	sub    BYTE PTR [edi-0x2a8fcac5],bh
  41c645:	xor    BYTE PTR [edx+0x48],al
  41c648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c649:	xor    al,0x6d
  41c64b:	xor    bh,BYTE PTR [edi-0xe]
  41c64e:	push   cs
  41c64f:	pop    eax
  41c650:	mov    eax,0xd00379aa
  41c655:	inc    edx
  41c656:	sbb    bh,ah
  41c658:	test   al,0x7f
  41c65a:	and    al,0xaa
  41c65c:	out    dx,al
  41c65d:	jecxz  0x41c6d5
  41c65f:	das    
  41c660:	xchg   esp,eax
  41c661:	inc    edx
  41c662:	and    DWORD PTR [esi-0x786f70db],edi
  41c668:	leave  
  41c669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c66a:	aad    0x22
  41c66c:	push   esi
  41c66d:	dec    ecx
  41c66e:	pop    edx
  41c66f:	test   eax,0xa260de4
  41c674:	test   BYTE PTR [edx],cl
  41c676:	xor    bl,al
  41c678:	fs or  eax,0x321d45cc
  41c67e:	std    
  41c67f:	add    al,0x30
  41c681:	outs   dx,DWORD PTR ds:[esi]
  41c682:	push   eax
  41c683:	fimul  WORD PTR [ecx+0x4882b5fb]
  41c689:	and    BYTE PTR [edx+0x7c],bl
  41c68c:	jnp    0x41c651
  41c68e:	xlat   BYTE PTR ds:[ebx]
  41c68f:	rcl    BYTE PTR [eax-0x20931667],cl
  41c695:	ret    0xbc66
  41c698:	push   esp
  41c699:	dec    eax
  41c69a:	cs ins BYTE PTR es:[edi],dx
  41c69c:	or     al,0xe9
  41c69e:	call   DWORD PTR [esi+0x1f]
  41c6a1:	fsubr  DWORD PTR [edx]
  41c6a3:	cmp    edi,esi
  41c6a5:	and    edx,DWORD PTR [edx]
  41c6a7:	mov    ch,0xc
  41c6a9:	xchg   edx,eax
  41c6aa:	push   edi
  41c6ab:	jmp    0x41c6b7
  41c6ad:	out    0x76,al
  41c6af:	loope  0x41c653
  41c6b1:	add    DWORD PTR [esp+edx*1+0x5f],edi
  41c6b5:	adc    edi,DWORD PTR [ebx-0x2d7a227e]
  41c6bb:	sub    esi,DWORD PTR [ecx]
  41c6bd:	xchg   ebp,eax
  41c6be:	push   eax
  41c6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6c0:	mov    eax,ds:0xda4e2a85
  41c6c5:	dec    ebx
  41c6c6:	mov    ds:0x5aba29ef,eax
  41c6cb:	adc    esi,eax
  41c6cd:	dec    ebx
  41c6ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6cf:	push   esi
  41c6d0:	jbe    0x41c68f
  41c6d2:	leave  
  41c6d3:	sbb    BYTE PTR [edi-0x5c004e2c],ch
  41c6d9:	cmp    dh,BYTE PTR [edx]
  41c6db:	or     DWORD PTR [edx+ebx*4],0x37e74947
  41c6e2:	jns    0x41c6c3
  41c6e4:	lods   eax,DWORD PTR ds:[esi]
  41c6e5:	push   esp
  41c6e6:	inc    edi
  41c6e7:	ror    BYTE PTR [esp+eax*8],cl
  41c6ea:	mov    ch,0xc8
  41c6ec:	cmp    dh,BYTE PTR [eax-0x549f64af]
  41c6f2:	in     al,0x5a
  41c6f4:	jno    0x41c698
  41c6f6:	int3   
  41c6f7:	xchg   BYTE PTR [eax],al
  41c6f9:	mov    cs,ebp
  41c6fb:	sbb    ebp,0xffffffd2
  41c6fe:	ins    DWORD PTR es:[edi],dx
  41c6ff:	out    dx,eax
  41c700:	mov    WORD PTR [ebx-0x46],ds
  41c703:	or     ecx,DWORD PTR [ecx-0x5c]
  41c706:	test   esi,esp
  41c708:	xchg   edx,eax
  41c709:	jne    0x41c6cb
  41c70b:	xchg   edi,eax
  41c70c:	xor    BYTE PTR [edx],bl
  41c70e:	out    0x2,eax
  41c710:	(bad)  
  41c711:	xchg   ebx,eax
  41c712:	mov    ebp,0x1605e5a7
  41c717:	or     bl,dl
  41c719:	xor    al,0x4e
  41c71b:	mov    BYTE PTR [eax+0x53],0x37
  41c71f:	adc    eax,0x1b2346d3
  41c724:	push   edi
  41c725:	cld    
  41c726:	je     0x41c6f9
  41c728:	push   edx
  41c729:	lods   eax,DWORD PTR ds:[esi]
  41c72a:	mov    esp,0xe1f0969d
  41c72f:	mov    ebp,0xeec4fabd
  41c734:	jecxz  0x41c715
  41c736:	out    0x2d,al
  41c738:	shl    DWORD PTR [ebx-0x7b],1
  41c73b:	fs push eax
  41c73d:	aam    0xc3
  41c73f:	or     eax,DWORD PTR [eax]
  41c741:	xchg   esi,eax
  41c742:	mov    esi,0x8277f127
  41c747:	xchg   edx,eax
  41c748:	in     al,0xff
  41c74a:	ins    DWORD PTR es:[edi],dx
  41c74b:	aas    
  41c74c:	and    al,0xca
  41c74e:	adc    DWORD PTR [esi+0x18a1dfb7],edi
  41c754:	pop    ebp
  41c755:	dec    eax
  41c756:	xor    eax,edx
  41c758:	mov    edx,0x4b393ea7
  41c75d:	es push ecx
  41c75f:	imul   esp,edx,0x46ba45d5
  41c765:	add    eax,0x11457c00
  41c76a:	adc    edx,eax
  41c76c:	in     eax,dx
  41c76d:	les    edi,FWORD PTR [ebp-0x2e11cc90]
  41c773:	popf   
  41c774:	jae    0x41c769
  41c776:	xchg   esi,eax
  41c777:	and    DWORD PTR [ecx],edi
  41c779:	es js  0x41c748
  41c77c:	mov    ecx,fs
  41c77e:	and    BYTE PTR [edi],bl
  41c780:	push   edi
  41c781:	fwait
  41c782:	scas   al,BYTE PTR es:[edi]
  41c783:	xchg   edi,eax
  41c784:	loopne 0x41c728
  41c786:	mov    al,0x5b
  41c788:	push   es
  41c789:	push   edi
  41c78a:	mov    esp,0xafd4d827
  41c78f:	retf   0xda87
  41c792:	sti    
  41c793:	adc    DWORD PTR [ebp+0x64b4ed38],eax
  41c799:	dec    ebx
  41c79a:	hlt    
  41c79b:	repnz xchg esi,eax
  41c79d:	mov    al,0x1b
  41c79f:	and    DWORD PTR [esi-0x60],edi
  41c7a2:	adc    BYTE PTR [ebp+eiz*1+0x13],ah
  41c7a6:	fbstp  TBYTE PTR [ebx]
  41c7a8:	test   eax,0x2756adf2
  41c7ad:	out    dx,al
  41c7ae:	inc    edx
  41c7af:	and    BYTE PTR [edx-0x76],bh
  41c7b2:	jmp    0x1a61:0x37d43b4b
  41c7b9:	xchg   ebx,eax
  41c7bb:	ja     0x41c826
  41c7bd:	add    esi,DWORD PTR [eax+edi*8-0x898329c]
  41c7c4:	fld    TBYTE PTR [eax+0x19]
  41c7c7:	adc    al,0x20
  41c7c9:	mov    BYTE PTR [edx+0x790a3f9d],bh
  41c7cf:	push   ss
  41c7d0:	stc    
  41c7d1:	and    esi,ebp
  41c7d3:	out    dx,eax
  41c7d4:	pop    ss
  41c7d5:	hlt    
  41c7d6:	cmp    eax,ecx
  41c7d8:	pop    ebp
  41c7d9:	sub    BYTE PTR [ecx+0x4653da9],cl
  41c7df:	cwde   
  41c7e0:	lea    esp,[ebx+0x3ab6f97]
  41c7e6:	cwde   
  41c7e7:	inc    edx
  41c7e8:	pop    ds
  41c7e9:	push   ebp
  41c7ea:	and    ch,BYTE PTR [edx-0x5a]
  41c7ed:	fs out dx,al
  41c7ef:	xor    esi,DWORD PTR [esi-0x2]
  41c7f2:	mov    dl,0x2e
  41c7f4:	xchg   ecx,eax
  41c7f5:	mov    dh,0xe3
  41c7f7:	inc    edi
  41c7f8:	scas   eax,DWORD PTR es:[edi]
  41c7f9:	mov    edx,0x139bf823
  41c7fe:	je     0x41c7d4
  41c800:	mov    bl,0xf9
  41c802:	imul   edx,DWORD PTR [ecx+0x43ea5b39],0xfffffffe
  41c809:	cs pusha 
  41c80b:	rcr    BYTE PTR [ecx],1
  41c80d:	iret   
  41c80e:	or     DWORD PTR [ecx],edx
  41c810:	iret   
  41c811:	jge    0x41c7f2
  41c813:	sub    eax,0x6abdc97a
  41c818:	jmp    0x41c861
  41c81a:	cmp    dh,dl
  41c81c:	dec    ebp
  41c81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c81e:	adc    eax,0x22f04a44
  41c823:	cwde   
  41c824:	test   BYTE PTR [ebx],0x31
  41c827:	push   ds
  41c828:	test   DWORD PTR [ebp-0x4861aee7],eax
  41c82e:	rcr    DWORD PTR [edi+edi*1-0x5e],0x8b
  41c833:	push   es
  41c834:	in     eax,0x94
  41c836:	stc    
  41c837:	repz pop eax
  41c839:	mov    eax,ds:0xe7089163
  41c83e:	pop    ds
  41c83f:	outs   dx,DWORD PTR ds:[esi]
  41c840:	test   BYTE PTR ds:0x8c2e9352,bh
  41c846:	xor    DWORD PTR [ebx+ebp*8+0x59],edi
  41c84a:	mov    bl,0x5c
  41c84c:	stos   DWORD PTR es:[edi],eax
  41c84d:	addr16 mov ah,0xbd
  41c850:	adc    ah,dl
  41c852:	iret   
  41c853:	les    ebx,FWORD PTR [edx-0x4]
  41c856:	(bad)
  41c859:	(bad)  [esi]
  41c85b:	scas   al,BYTE PTR es:[edi]
  41c85c:	(bad)  [edi-0x5b]
  41c85f:	(bad)  
  41c860:	nop
  41c861:	pop    eax
  41c862:	jg     0x41c871
  41c864:	fsub   QWORD PTR [esi]
  41c866:	jne    0x41c8e0
  41c868:	jl     0x41c866
  41c86a:	xor    dh,BYTE PTR [ebx]
  41c86c:	test   BYTE PTR [esi+esi*4-0x21582ea8],bl
  41c873:	jb     0x41c86f
  41c875:	lea    ebp,[ebp-0xa4684ba]
  41c87b:	adc    ecx,DWORD PTR [esi+0x76]
  41c87e:	xchg   ebx,eax
  41c87f:	loopne 0x41c851
  41c881:	push   esi
  41c882:	daa    
  41c883:	aam    0x6c
  41c885:	pop    edx
  41c886:	jae    0x41c8d5
  41c888:	mov    ecx,0x315352fd
  41c88d:	push   eax
  41c88e:	sub    dl,ah
  41c890:	push   ecx
  41c891:	stos   BYTE PTR es:[edi],al
  41c892:	sbb    bh,BYTE PTR [ebx]
  41c894:	rol    DWORD PTR [edx+0x36],cl
  41c897:	je     0x41c84e
  41c899:	mov    ch,0x79
  41c89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c89c:	sar    BYTE PTR [ebp+0x9017fe5],cl
  41c8a2:	ds inc esi
  41c8a4:	and    eax,0x29e6f265
  41c8a9:	pop    ds
  41c8aa:	push   gs
  41c8ac:	or     DWORD PTR [eax+esi*8],esp
  41c8af:	sahf   
  41c8b0:	cs xor eax,0xfcf2c953
  41c8b6:	in     eax,dx
  41c8b7:	xchg   ecx,eax
  41c8b8:	jle    0x41c8cd
  41c8ba:	inc    edx
  41c8bb:	out    dx,eax
  41c8bc:	inc    esi
  41c8bd:	repz inc esp
  41c8bf:	not    DWORD PTR ds:0x8b32efb8
  41c8c5:	mov    bh,0xbf
  41c8c7:	pop    ss
  41c8c8:	gs mov eax,0x4a42377d
  41c8ce:	imul   eax,DWORD PTR ds:0xe9732741,0x4c2005db
  41c8d8:	xchg   BYTE PTR [eax+eax*8],dl
  41c8db:	xor    ah,BYTE PTR [eax]
  41c8dd:	mov    bh,BYTE PTR [esi]
  41c8df:	imul   edi,DWORD PTR [esi],0x293f3f0f
  41c8e5:	dec    ebx
  41c8e6:	hlt    
  41c8e7:	ror    DWORD PTR [ebx],1
  41c8e9:	inc    ebp
  41c8ea:	jnp    0x41c95e
  41c8ec:	mov    ecx,0x297213a8
  41c8f1:	fs ret 
  41c8f3:	stos   DWORD PTR es:[edi],eax
  41c8f4:	and    esi,DWORD PTR [esi]
  41c8f6:	pop    eax
  41c8f7:	mov    edx,0xa91e4673
  41c8fc:	les    ecx,FWORD PTR [edx+0x20]
  41c8ff:	neg    BYTE PTR ds:0x23ce893c
  41c905:	fcmovnbe st,st(5)
  41c907:	enter  0x50,0xb2
  41c90b:	sub    ch,bh
  41c90d:	jae    0x41c8dc
  41c90f:	jmp    0x46f92cf2
  41c914:	imul   edx,DWORD PTR [esi+0x14],0x5b
  41c918:	and    ebp,ecx
  41c91a:	mov    ebp,0x4c3108fa
  41c91f:	adc    ebx,eax
  41c921:	test   esp,eax
  41c923:	ror    ch,0x96
  41c926:	pop    esi
  41c927:	dec    eax
  41c928:	and    ebp,esp
  41c92a:	(bad)
  41c92e:	jne    0x41c918
  41c930:	es ss jnp 0x41c95d
  41c934:	push   ebp
  41c935:	fsub   DWORD PTR [eax+eiz*2-0x7a40a138]
  41c93c:	push   es
  41c93d:	inc    esi
  41c93e:	pushw  cs
  41c940:	rcr    DWORD PTR [edi],1
  41c942:	push   esp
  41c943:	mov    eax,0x26595b06
  41c948:	mov    ds:0xce027a9c,eax
  41c94d:	addr16 or esp,esi
  41c950:	xchg   edx,eax
  41c951:	call   0x517b:0xd26571da
  41c958:	xlat   BYTE PTR gs:[ebx]
  41c95a:	add    al,0x26
  41c95c:	mov    al,0x44
  41c95e:	shl    BYTE PTR [edi+0x5a],cl
  41c961:	mov    edx,gs
  41c963:	pop    ebx
  41c964:	dec    edx
  41c965:	outs   dx,BYTE PTR ds:[esi]
  41c966:	das    
  41c967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c968:	nop
  41c969:	rol    BYTE PTR [eax],1
  41c96b:	adc    al,0x51
  41c96d:	loopne 0x41c913
  41c96f:	add    DWORD PTR [ebp-0x6e],eax
  41c972:	lock sbb BYTE PTR [ebx],0x4b
  41c976:	pop    ss
  41c977:	cdq    
  41c978:	push   ecx
  41c979:	rol    BYTE PTR [edi-0x58],0x6b
  41c97d:	jg     0x41c90e
  41c97f:	push   DWORD PTR [edi-0x7e]
  41c982:	adc    eax,0xb7abc872
  41c987:	mov    al,0x60
  41c989:	jo     0x41c9d5
  41c98b:	or     ebp,DWORD PTR [edx+0x32]
  41c98e:	push   0x8e7c3018
  41c993:	mov    ch,0x3a
  41c995:	(bad)  
  41c996:	ins    BYTE PTR es:[edi],dx
  41c997:	sbb    eax,0x84d67261
  41c99c:	aaa    
  41c99d:	cs fwait
  41c99f:	in     eax,dx
  41c9a0:	sub    ebp,DWORD PTR [esi+0x2f]
  41c9a3:	test   eax,0x74984f42
  41c9a8:	ds pop ebx
  41c9aa:	pop    esi
  41c9ab:	mov    eax,0xc2ea7d55
  41c9b0:	mov    al,0x66
  41c9b2:	aaa    
  41c9b3:	xchg   DWORD PTR [ebx],esi
  41c9b5:	into   
  41c9b6:	cmp    DWORD PTR [edi],edx
  41c9b8:	mov    edx,0xb98ffe50
  41c9bd:	ss pop esi
  41c9bf:	pop    es
  41c9c0:	adc    DWORD PTR [esi-0x50],0xffffffca
  41c9c4:	cli    
  41c9c5:	fiadd  DWORD PTR [ecx-0xdcb9cf0]
  41c9cb:	popf   
  41c9cc:	mov    BYTE PTR [ebx-0x70e4b0e],bh
  41c9d2:	call   0x424f:0x494c7a8e
  41c9d9:	pop    ecx
  41c9da:	jb     0x41ca50
  41c9dc:	pop    edi
  41c9dd:	daa    
  41c9de:	sbb    dh,BYTE PTR [esi-0x778e4170]
  41c9e4:	push   0x4173acd7
  41c9e9:	out    0x82,eax
  41c9eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9ec:	call   0xe3f4407
  41c9f1:	in     eax,0x39
  41c9f3:	sbb    BYTE PTR [eax-0x31],dl
  41c9f6:	popf   
  41c9f7:	sbb    al,0xd3
  41c9f9:	sbb    ecx,esp
  41c9fb:	(bad)  
  41c9fc:	loopne 0x41ca4e
  41c9fe:	dec    edx
  41c9ff:	aad    0x44
  41ca01:	test   eax,0x83854c4f
  41ca06:	sub    ch,BYTE PTR [ecx+0x56]
  41ca09:	xlat   BYTE PTR ds:[ebx]
  41ca0a:	add    esi,DWORD PTR [eax-0x54]
  41ca0d:	leave  
  41ca0e:	push   esp
  41ca0f:	and    al,0x9e
  41ca11:	fisub  DWORD PTR ds:0xb20a3381
  41ca17:	dec    edx
  41ca18:	or     al,0xab
  41ca1a:	inc    esp
  41ca1b:	out    0xbd,al
  41ca1d:	sbb    edx,DWORD PTR [edx]
  41ca1f:	es pop ebp
  41ca21:	inc    ecx
  41ca22:	pop    ecx
  41ca23:	inc    esi
  41ca24:	aaa    
  41ca25:	and    ebp,DWORD PTR [edi]
  41ca27:	cli    
  41ca28:	jae    0x41c9ca
  41ca2a:	adc    edx,DWORD PTR [eax-0x20]
  41ca2d:	adc    esi,0x21
  41ca30:	mov    eax,ds:0x6fa5b17f
  41ca35:	into   
  41ca36:	ror    BYTE PTR [eax+0x63],cl
  41ca39:	in     al,0xd9
  41ca3b:	sub    eax,0x628d2a82
  41ca40:	out    0xf3,eax
  41ca42:	in     al,0xcc
  41ca44:	sbb    BYTE PTR [ecx-0x44],ah
  41ca47:	call   0x142c:0x64d059ea
  41ca4e:	push   esi
  41ca4f:	pop    ss
  41ca50:	mov    al,BYTE PTR [esi+0x5e]
  41ca53:	jnp    0x41ca69
  41ca55:	push   es
  41ca56:	jne    0x41cad4
  41ca58:	jmp    DWORD PTR [eax+0xc]
  41ca5b:	push   ds
  41ca5c:	mov    BYTE PTR [eax],0xb9
  41ca5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca60:	or     eax,0x7eb06e92
  41ca65:	jle    0x41ca84
  41ca67:	xchg   esi,eax
  41ca68:	popa   
  41ca69:	lea    ecx,[ebx-0x71]
  41ca6c:	xor    BYTE PTR [esi+edi*2],ah
  41ca6f:	jmp    0x41cac6
  41ca71:	mov    dl,0xe
  41ca73:	push   ss
  41ca74:	sbb    dh,dl
  41ca76:	gs pop ds
  41ca78:	add    esi,ecx
  41ca7a:	imul   edx,esi,0xf7a37c58
  41ca80:	ins    DWORD PTR es:[edi],dx
  41ca81:	shl    DWORD PTR [ebx-0x14],cl
  41ca84:	fisubr DWORD PTR [esp+edi*4]
  41ca87:	repnz cld 
  41ca89:	push   esp
  41ca8a:	xor    bl,BYTE PTR [ecx+0x3a]
  41ca8d:	sub    al,0x1e
  41ca8f:	jo     0x41ca79
  41ca91:	cmp    al,0xf7
  41ca93:	jno    0x41caa2
  41ca95:	pop    es
  41ca96:	xchg   ecx,eax
  41ca97:	imul   BYTE PTR [ebp-0x37]
  41ca9a:	aad    0x7a
  41ca9c:	data16 neg BYTE PTR [edi-0x1c000000]
  41caa3:	ds mov esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0x5a]
  41caaf:	adc    ch,BYTE PTR [esi+0x1467cac]
  41cab5:	add    ch,dh
  41cab7:	add    al,0x0
  41cab9:	add    BYTE PTR [edi-0xaa8528d],cl
  41cabf:	push   0x147ac8c2
  41cac4:	nop
  41cac5:	dec    edi
  41cac6:	scas   eax,DWORD PTR es:[edi]
  41cac7:	das    
  41cac8:	fiadd  DWORD PTR [eax+0xf]
  41cacb:	scas   eax,DWORD PTR es:[edi]
  41cacc:	cmc    
  41cacd:	nop
  41cace:	dec    esp
  41cacf:	scas   al,BYTE PTR es:[edi]
  41cad0:	jmp    0x9cf3:0x8f3bb245
  41cad7:	test   BYTE PTR [ebp+0x31],0xe6
  41cadb:	ja     0x41cb4f
  41cadd:	xor    BYTE PTR [edi+0x3a],bl
  41cae0:	or     eax,0x8c262bda
  41cae5:	mov    cl,0x31
  41cae7:	pop    ebp
  41cae8:	mov    esp,0x6c1a98ad
  41caed:	ins    DWORD PTR es:[edi],dx
  41caee:	jo     0x41cacb
  41caf0:	jb     0x41cb0c
  41caf2:	jle    0x41cafe
  41caf4:	sub    DWORD PTR gs:[edi+0x77f4f1f0],0x77
  41cafc:	cwde   
  41cafd:	dec    ebx
  41cafe:	imul   ecx,ebx,0xfad36491
  41cb04:	loope  0x41cb84
  41cb06:	jmp    0x41caa0
  41cb08:	aad    0xdd
  41cb0a:	inc    ebx
  41cb0b:	into   
  41cb0c:	out    dx,al
  41cb0d:	repnz xchg ecx,eax
  41cb0f:	mov    BYTE PTR [ecx+edx*8-0xf52424c],bh
  41cb16:	fisubr WORD PTR [ebx-0x45]
  41cb19:	inc    ebx
  41cb1a:	pop    edi
  41cb1b:	pop    esi
  41cb1c:	inc    ebx
  41cb1d:	popa   
  41cb1e:	inc    eax
  41cb1f:	fcom   QWORD PTR [eax+0x34]
  41cb22:	pop    esi
  41cb23:	add    BYTE PTR [ecx+edx*8],ah
  41cb26:	pop    ebx
  41cb27:	or     BYTE PTR [edi],al
  41cb29:	cmp    esp,ebp
  41cb2b:	and    ebp,DWORD PTR [eax+0x6f]
  41cb2e:	push   eax
  41cb2f:	mov    edx,0x4fadf265
  41cb34:	aas    
  41cb35:	mov    esi,0xb8ca0703
  41cb3a:	fild   QWORD PTR [ecx-0x45]
  41cb3d:	rcl    BYTE PTR [eax-0x402478ed],1
  41cb43:	jecxz  0x41cbac
  41cb45:	sahf   
  41cb46:	dec    ecx
  41cb47:	pop    edx
  41cb48:	ja     0x41caed
  41cb4a:	out    0x7c,eax
  41cb4c:	sbb    ch,BYTE PTR [ecx]
  41cb4e:	retf   0x36f4
  41cb51:	push   ebp
  41cb52:	sbb    BYTE PTR [edi+ecx*8],ch
  41cb55:	push   ebx
  41cb56:	and    al,0x61
  41cb58:	xor    eax,0x10cac6ac
  41cb5d:	leave  
  41cb5e:	es xor al,0x10
  41cb61:	fsubr  DWORD PTR [ecx-0x3842b693]
  41cb67:	int    0x56
  41cb69:	call   0xb763:0xadc1d6bf
  41cb70:	mov    ebp,0xe96d484e
  41cb75:	int    0xf8
  41cb77:	ret    
  41cb78:	div    DWORD PTR [ebx]
  41cb7a:	xchg   ebx,esi
  41cb7c:	sub    al,0xc9
  41cb7e:	sti    
  41cb7f:	jecxz  0x41cba2
  41cb81:	imul   ebx,DWORD PTR [ebp-0x74],0xffffff86
  41cb85:	push   cs
  41cb86:	ds loop 0x41cbe9
  41cb89:	or     al,0xc8
  41cb8b:	sbb    bl,BYTE PTR [eax]
  41cb8d:	clc    
  41cb8e:	xlat   BYTE PTR ds:[ebx]
  41cb8f:	repnz dec ecx
  41cb91:	es nop
  41cb93:	mov    WORD PTR [ecx+0x1354f8ef],?
  41cb99:	out    0x9a,al
  41cb9b:	ds adc al,0x2e
  41cb9e:	outs   dx,BYTE PTR ds:[esi]
  41cb9f:	mov    bl,0xf1
  41cba1:	outs   dx,DWORD PTR ds:[esi]
  41cba2:	xchg   ebx,eax
  41cba3:	aad    0x5c
  41cba5:	test   DWORD PTR ds:0x511b0ded,0x7380b34a
  41cbaf:	cmp    DWORD PTR [ebx-0x4f7e03bf],esi
  41cbb5:	xor    ah,BYTE PTR [eax+0x11]
  41cbb8:	adc    al,BYTE PTR [edi-0x7fdb09f5]
  41cbbe:	les    ecx,FWORD PTR [ecx]
  41cbc0:	adc    ecx,DWORD PTR [ebp+0x5d3f19be]
  41cbc6:	sub    ecx,DWORD PTR [ecx+0x7f]
  41cbc9:	ror    dl,cl
  41cbcb:	push   edi
  41cbcc:	mov    ch,0x3b
  41cbce:	out    0xd6,eax
  41cbd0:	adc    DWORD PTR [edi],0xfde9fbff
  41cbd6:	jecxz  0x41cbbf
  41cbd8:	aam    0x19
  41cbda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbdb:	out    dx,eax
  41cbdc:	mov    ds,ebp
  41cbde:	std    
  41cbdf:	or     al,0x3d
  41cbe1:	fdivr  st,st(0)
  41cbe3:	lock inc ebp
  41cbe5:	mov    al,BYTE PTR [esi-0x3c]
  41cbe8:	mov    ds:0x5503b99a,al
  41cbed:	push   ss
  41cbee:	fist   WORD PTR ds:0x1a4167eb
  41cbf4:	leave  
  41cbf5:	enter  0x71fb,0x73
  41cbf9:	daa    
  41cbfa:	inc    esi
  41cbfb:	fdiv   st,st(2)
  41cbfd:	inc    esi
  41cbfe:	mov    bl,0x2a
  41cc00:	icebp  
  41cc01:	and    DWORD PTR [ebp+edx*2-0x79],edx
  41cc05:	xchg   ebx,eax
  41cc06:	add    ebx,esi
  41cc08:	inc    eax
  41cc09:	mov    al,0x41
  41cc0b:	jecxz  0x41cc03
  41cc0d:	inc    edi
  41cc0e:	(bad)  [ebx-0x32894fe]
  41cc14:	pop    ecx
  41cc15:	repz and dh,BYTE PTR [ecx]
  41cc18:	sub    DWORD PTR [ecx],ebp
  41cc1a:	jmp    0xbb8a7b82
  41cc1f:	adc    DWORD PTR [eax+0x58],edi
  41cc22:	loop   0x41cc2d
  41cc24:	enter  0x515c,0x15
  41cc28:	xchg   DWORD PTR [edx],edi
  41cc2a:	push   es
  41cc2b:	in     eax,0xa4
  41cc2d:	and    eax,0x6c3c7594
  41cc32:	mov    ebp,0xe02b0ff0
  41cc37:	leave  
  41cc38:	jnp    0x41cbf2
  41cc3a:	stc    
  41cc3b:	cs jmp 0x5688:0x9c719b94
  41cc43:	push   cs
  41cc44:	push   esp
  41cc45:	mov    esp,0xf1da806b
  41cc4a:	in     eax,dx
  41cc4b:	or     eax,0xc8d05167
  41cc50:	adc    BYTE PTR [edx],bl
  41cc52:	in     al,dx
  41cc53:	pusha  
  41cc54:	ins    BYTE PTR es:[edi],dx
  41cc55:	fsubr  QWORD PTR [ebp-0x62]
  41cc58:	dec    ecx
  41cc59:	test   DWORD PTR [ebx],edi
  41cc5b:	cmp    BYTE PTR [esi-0x18],dh
  41cc5e:	dec    ebp
  41cc5f:	inc    esp
  41cc60:	call   0x95ba29fb
  41cc65:	push   ss
  41cc66:	inc    esp
  41cc67:	(bad)  
  41cc68:	std    
  41cc69:	mov    esi,0xfbc70298
  41cc6e:	cli    
  41cc6f:	add    eax,0xa4558905
  41cc74:	and    BYTE PTR [ebp-0x76f9be66],cl
  41cc7a:	aad    0x11
  41cc7c:	aam    0xc6
  41cc7e:	das    
  41cc7f:	mov    ch,bh
  41cc81:	test   BYTE PTR [esi],cl
  41cc83:	ins    DWORD PTR es:[edi],dx
  41cc84:	jmp    0x1645:0xdb3e9adb
  41cc8b:	je     0x41cc66
  41cc8d:	mov    ecx,ds
  41cc8f:	in     eax,0x30
  41cc91:	pop    esp
  41cc92:	imul   bl
  41cc94:	ss push ds
  41cc96:	mov    ds:0x55c7d0af,eax
  41cc9b:	sub    al,0x31
  41cc9d:	or     dl,BYTE PTR [ebx]
  41cc9f:	icebp  
  41cca0:	xor    edx,DWORD PTR [eax-0x11]
  41cca3:	or     dh,BYTE PTR [edi-0x63a7b130]
  41cca9:	(bad)  
  41ccaa:	jb     0x41ccb4
  41ccac:	jecxz  0x41ccdb
  41ccae:	xchg   edx,eax
  41ccaf:	mov    ds:0xb5302abc,al
  41ccb4:	pop    esi
  41ccb5:	out    0x5f,al
  41ccb7:	repnz sbb BYTE PTR [esi-0x315b0be3],0x36
  41ccbf:	stc    
  41ccc0:	xchg   esi,eax
  41ccc1:	repz sahf 
  41ccc3:	dec    edx
  41ccc4:	pop    ebp
  41ccc5:	cwde   
  41ccc6:	inc    esp
  41ccc7:	cmp    dh,BYTE PTR fs:[eax]
  41ccca:	hlt    
  41cccb:	jl     0x41cc83
  41cccd:	test   eax,0xa743b1c2
  41ccd2:	cmp    bh,BYTE PTR [ebp-0x5eb88069]
  41ccd8:	pushw  0x389a
  41ccdc:	mov    ds:0xf4af269a,al
  41cce1:	sub    DWORD PTR [ecx+eiz*8-0x5588fb20],0x49
  41cce9:	lahf   
  41ccea:	loop   0x41cd36
  41ccec:	xchg   edx,eax
  41cced:	fwait
  41ccee:	pushf  
  41ccef:	shl    al,cl
  41ccf1:	aas    
  41ccf2:	shr    eax,cl
  41ccf4:	lock loopne 0x41ccb6
  41ccf7:	popf   
  41ccf8:	out    dx,eax
  41ccf9:	fst    DWORD PTR [ecx+0x6b247c4f]
  41ccff:	out    0x3b,eax
  41cd01:	mov    edi,DWORD PTR [ebx+0x4b]
  41cd04:	jnp    0x41ccce
  41cd06:	sub    bl,BYTE PTR [eax-0xc]
  41cd09:	dec    ebx
  41cd0a:	pop    ss
  41cd0b:	jg     0x41cd5f
  41cd0d:	ins    DWORD PTR es:[edi],dx
  41cd0e:	jmp    0x41cca4
  41cd10:	mov    edx,0x476f448
  41cd15:	xor    al,0x91
  41cd17:	test   BYTE PTR [edi-0x174d14e9],ah
  41cd1d:	mov    BYTE PTR [ebp-0xb],ah
  41cd20:	pop    ecx
  41cd21:	pop    esi
  41cd22:	cdq    
  41cd23:	enter  0x37e5,0x85
  41cd27:	cmc    
  41cd28:	in     eax,dx
  41cd29:	mov    esp,ebx
  41cd2b:	cmp    edx,DWORD PTR [esi+0x6446bc86]
  41cd31:	jmp    0xf561f2d
  41cd36:	add    eax,0xdc3c1ffd
  41cd3b:	sahf   
  41cd3c:	ss sub eax,0x18286aaf
  41cd42:	shl    ebp,0x21
  41cd45:	cli    
  41cd46:	scas   eax,DWORD PTR es:[edi]
  41cd47:	mov    eax,0xbe28df8d
  41cd4c:	ret    0xa0ad
  41cd4f:	jge    0x41cd33
  41cd51:	in     eax,0xdc
  41cd53:	pop    ss
  41cd54:	fdivr  QWORD PTR [esi-0x473cb4de]
  41cd5a:	lea    esp,[esi-0x65]
  41cd5d:	sahf   
  41cd5e:	xchg   bh,ah
  41cd60:	jns    0x41cce5
  41cd62:	iret   
  41cd63:	xlat   BYTE PTR ds:[ebx]
  41cd64:	and    DWORD PTR [edi+0x1b7fa973],ecx
  41cd6a:	adc    al,0x41
  41cd6c:	jmp    0xea12:0x798ba32d
  41cd73:	xlat   BYTE PTR ds:[ebx]
  41cd74:	sub    edx,ecx
  41cd76:	dec    ecx
  41cd77:	int    0xd4
  41cd79:	add    ebx,esi
  41cd7b:	fisub  DWORD PTR [edx-0x69141384]
  41cd81:	add    DWORD PTR [edx-0x12],edx
  41cd84:	xor    cl,BYTE PTR [eax]
  41cd86:	xor    BYTE PTR ds:0x8f6d7224,0xfa
  41cd8d:	and    BYTE PTR [edi-0x17],dl
  41cd90:	mov    dl,0xf9
  41cd92:	lods   eax,DWORD PTR ds:[esi]
  41cd93:	mov    ah,0x76
  41cd95:	jns    0x41cd25
  41cd97:	jle    0x41cd94
  41cd99:	loope  0x41cd94
  41cd9b:	inc    edx
  41cd9c:	jno    0x41cd30
  41cd9e:	adc    DWORD PTR [ecx-0x7d],esp
  41cda1:	je     0x41cd60
  41cda3:	fcmovnbe st,st(6)
  41cda5:	sub    eax,0x7e051f3c
  41cdaa:	stc    
  41cdab:	jae    0x41cd63
  41cdad:	inc    ebp
  41cdae:	pop    ebx
  41cdaf:	mov    esi,DWORD PTR [ebx+0x67874628]
  41cdb5:	imul   ebp,DWORD PTR [edi+0x3],0x72
  41cdb9:	jne    0x41ce02
  41cdbb:	mov    DWORD PTR [ecx-0x1aa4cc9d],eax
  41cdc1:	and    al,0x97
  41cdc3:	cmp    eax,0x388beb5f
  41cdc8:	or     BYTE PTR [edi],0x8f
  41cdcb:	jnp    0x41cdcc
  41cdcd:	cmc    
  41cdce:	mov    bl,0x36
  41cdd0:	lds    edx,FWORD PTR gs:[edx+0x2c568bf2]
  41cdd7:	mov    edi,0xe4178084
  41cddc:	xchg   esi,eax
  41cddd:	mov    ch,0x6b
  41cddf:	mov    ebx,0xb49d70e4
  41cde4:	inc    esp
  41cde5:	adc    BYTE PTR es:[ecx+0x6f],dl
  41cde9:	add    ch,BYTE PTR [edi-0x7747d27]
  41cdef:	jmp    0x6aec:0xe8716a3f
  41cdf6:	or     BYTE PTR [ebp+0x10eddd44],al
  41cdfc:	(bad)  
  41cdfe:	hlt    
  41cdff:	aam    0x5e
  41ce01:	mov    edi,0xa0cae87e
  41ce06:	dec    ebx
  41ce07:	sbb    BYTE PTR [ebp+0x23],ah
  41ce0a:	sub    DWORD PTR [ecx-0xf96809e],ebx
  41ce10:	mov    bl,0xc2
  41ce13:	in     al,dx
  41ce14:	stos   BYTE PTR es:[edi],al
  41ce15:	test   DWORD PTR [edx+edx*8+0x3e],0x54ff64a7
  41ce1d:	dec    ecx
  41ce1e:	scas   al,BYTE PTR es:[edi]
  41ce1f:	ss jno 0x41ce7e
  41ce22:	jp     0x41ce04
  41ce24:	and    eax,ebx
  41ce26:	call   0x4886:0x455c4fdb
  41ce2d:	jae    0x41ce1d
  41ce2f:	mul    BYTE PTR [edx-0x861d3b8]
  41ce35:	fcmovnb st,st(1)
  41ce38:	cwde   
  41ce39:	sti    
  41ce3a:	fcomp  DWORD PTR [edx+0x353b4243]
  41ce40:	xor    ch,cl
  41ce42:	or     al,0x1f
  41ce44:	fimul  WORD PTR ds:0xce71efee
  41ce4a:	xor    BYTE PTR [ebx-0x2b5ee541],ah
  41ce50:	xor    ebp,edx
  41ce52:	mov    esp,0xa836bd67
  41ce57:	aas    
  41ce58:	ja     0x41ce73
  41ce5a:	adc    dh,BYTE PTR [edx]
  41ce5c:	je     0x41ced2
  41ce5e:	push   es
  41ce5f:	xor    BYTE PTR [ecx],0x5b
  41ce62:	jmp    DWORD PTR [edx]
  41ce64:	imul   ecx,DWORD PTR ds:0xd7aa57c6,0xffffffb5
  41ce6b:	mov    ecx,0x5c3cf82
  41ce70:	xchg   edi,eax
  41ce71:	inc    ebx
  41ce72:	mov    ebx,DWORD PTR ds:0x2418a702
  41ce78:	jg     0x41ce6c
  41ce7a:	stos   DWORD PTR es:[edi],eax
  41ce7b:	fistp  DWORD PTR [edx-0x67964b9e]
  41ce81:	jle    0x41cee6
  41ce83:	dec    edi
  41ce84:	xor    ebx,edx
  41ce86:	or     BYTE PTR [ecx+edx*2],0xd6
  41ce8a:	fucomp st(1)
  41ce8c:	retf   0xaa68
  41ce8f:	add    bl,bh
  41ce91:	iret   
  41ce92:	add    edi,ecx
  41ce94:	es out dx,al
  41ce96:	hlt    
  41ce97:	jbe    0x41cefb
  41ce99:	enter  0x5b30,0x96
  41ce9d:	xchg   ecx,eax
  41ce9e:	dec    esp
  41ce9f:	sbb    BYTE PTR [ecx-0x74],dh
  41cea2:	xor    DWORD PTR [ebp+0x235e9350],ecx
  41cea8:	cwde   
  41cea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceaa:	or     edx,ebx
  41ceac:	(bad)  
  41cead:	not    BYTE PTR [edi]
  41ceaf:	pop    esi
  41ceb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceb1:	loopne 0x41ce5c
  41ceb3:	je     0x41cf13
  41ceb5:	cli    
  41ceb6:	xor    eax,0x4d055972
  41cebb:	repz or eax,0x6afe49fa
  41cec1:	add    DWORD PTR [edx-0x742b9d84],ebx
  41cec7:	jg     0x41cf43
  41cec9:	mov    edx,0x3114cdd5
  41cece:	inc    edx
  41cecf:	cs dec ebp
  41ced1:	fstp   DWORD PTR [eax-0x78]
  41ced4:	or     esp,DWORD PTR [eax+0x220bbeb]
  41ceda:	xor    DWORD PTR [edx],esi
  41cedc:	or     BYTE PTR [esi+0x3d],bl
  41cedf:	sub    edx,0x7
  41cee2:	ror    DWORD PTR [ebx+0x60b3cf88],1
  41cee8:	dec    ebx
  41cee9:	pushf  
  41ceea:	jmp    0x1337e12
  41ceef:	in     eax,dx
  41cef0:	mov    ebp,0xf6102abb
  41cef5:	aaa    
  41cef6:	fldenv [eax-0x3e]
  41cef9:	nop
  41cefa:	call   0xa830:0x7a453788
  41cf01:	pop    ds
  41cf02:	or     al,0x3
  41cf04:	lods   al,BYTE PTR ds:[esi]
  41cf05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf06:	jae    0x41cf2a
  41cf08:	ret    
  41cf09:	outs   dx,DWORD PTR ds:[esi]
  41cf0a:	sti    
  41cf0b:	push   edi
  41cf0c:	dec    ebp
  41cf0d:	adc    BYTE PTR [ebp-0x60a909b6],dl
  41cf13:	fmul   QWORD PTR [esi+0x70]
  41cf16:	or     esp,DWORD PTR [eax-0x4ca7f548]
  41cf1c:	cli    
  41cf1d:	adc    al,0x45
  41cf1f:	arpl   ax,di
  41cf21:	(bad)  
  41cf22:	in     eax,dx
  41cf23:	lods   eax,DWORD PTR ds:[esi]
  41cf24:	xchg   ebp,eax
  41cf25:	mov    ds:0x5dae0386,al
  41cf2a:	jp     0x41cf5b
  41cf2c:	mov    ecx,0x53a7ae9c
  41cf31:	fisubr DWORD PTR [edx+0x4c]
  41cf34:	and    ecx,edx
  41cf36:	std    
  41cf37:	(bad)  
  41cf38:	sbb    eax,DWORD PTR [eax-0x23]
  41cf3b:	fdiv   st,st(4)
  41cf3d:	adc    eax,0x67351834
  41cf42:	int3   
  41cf43:	(bad)  
  41cf44:	in     al,dx
  41cf45:	aam    0x1c
  41cf47:	add    bh,BYTE PTR [esi-0xc]
  41cf4a:	push   ecx
  41cf4b:	mov    esi,0x36fdd76d
  41cf50:	inc    ebp
  41cf51:	inc    ecx
  41cf52:	xor    al,0xe2
  41cf54:	mov    eax,0x69ce139d
  41cf59:	dec    ebp
  41cf5a:	inc    ecx
  41cf5b:	and    DWORD PTR [eax],0x43b60034
  41cf61:	shl    ebp,1
  41cf63:	mov    edx,DWORD PTR [edi]
  41cf65:	dec    ecx
  41cf66:	imul   ebx,DWORD PTR [ebx-0x4b17be66],0x347a2239
  41cf70:	arpl   WORD PTR [ebp-0x5d60a3c1],dx
  41cf76:	(bad)  
  41cf77:	fucom  st(1)
  41cf79:	sbb    ebp,DWORD PTR [esi-0x2c]
  41cf7c:	jmp    0x2b9a:0x6b27423d
  41cf83:	sti    
  41cf84:	jmp    0xe189:0xb3d327e9
  41cf8b:	xor    al,0x6f
  41cf8d:	mov    dl,0x59
  41cf8f:	sub    dl,al
  41cf91:	pop    esp
  41cf92:	jg     0x41cfa0
  41cf94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf95:	aas    
  41cf96:	sub    al,BYTE PTR [ebx+ebx*1]
  41cf99:	imul   DWORD PTR [ebp+edx*8-0x53]
  41cf9d:	clc    
  41cf9e:	pop    ss
  41cf9f:	icebp  
  41cfa0:	shr    DWORD PTR [edx+0x14],1
  41cfa3:	sub    al,0x70
  41cfa5:	jg     0x41cf5e
  41cfa7:	cmp    ah,BYTE PTR [esi+0x3b]
  41cfaa:	fcom   QWORD PTR [ebx+0x4d81b5]
  41cfb0:	add    BYTE PTR [eax],al
  41cfb2:	jnp    0x41cf7d
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0xaa97589e
  41cfc2:	jno    0x41d00f
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	cmc    
  41cfc7:	add    al,0x0
  41cfc9:	add    BYTE PTR [ecx+0x43],bl
  41cfcc:	jnp    0x41cf93
  41cfce:	adc    edx,DWORD PTR [eax]
  41cfd0:	push   ebp
  41cfd1:	push   edx
  41cfd2:	mov    ecx,0xe1d52aae
  41cfd7:	jb     0x41cff6
  41cfd9:	sub    DWORD PTR [ebp+0x151a3bb8],ebx
  41cfdf:	aam    0x6
  41cfe1:	stos   BYTE PTR es:[edi],al
  41cfe2:	loope  0x41d051
  41cfe4:	sub    eax,0x6747e40b
  41cfe9:	cld    
  41cfea:	inc    ebx
  41cfeb:	loope  0x41cf84
  41cfed:	push   edx
  41cfee:	stos   DWORD PTR es:[edi],eax
  41cfef:	sub    DWORD PTR [ebp+0xc300283],edi
  41cff5:	jl     0x41d000
  41cff7:	cmp    cl,BYTE PTR [ecx]
  41cff9:	iret   
  41cffa:	std    
  41cffb:	imul   ecx,DWORD PTR [ebx-0x32],0x57980940
  41d002:	data16 imul ax,WORD PTR [edi+0xefd1386],0x9444
  41d00c:	in     eax,0xf1
  41d00e:	add    al,0x2b
  41d010:	fdiv   DWORD PTR [edi-0x78]
  41d013:	fs mov bh,0xbb
  41d016:	inc    edx
  41d017:	aaa    
  41d018:	in     al,dx
  41d019:	cs mov bh,0xf4
  41d01c:	shl    BYTE PTR [esi-0x3f92eb5d],1
  41d022:	test   dl,ch
  41d024:	fxch   st(5)
  41d026:	dec    ebp
  41d027:	mov    ds:0xb475058d,eax
  41d02c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d02d:	xchg   esp,eax
  41d02e:	cmp    DWORD PTR [esi-0xc027bb9],eax
  41d034:	pop    ebp
  41d035:	or     eax,0x9a279f98
  41d03a:	jno    0x41d067
  41d03c:	pusha  
  41d03d:	inc    ecx
  41d03e:	mov    bl,0x80
  41d040:	add    BYTE PTR [ecx+0x30],ah
  41d043:	and    dh,BYTE PTR [esp+edi*2]
  41d046:	xchg   ecx,eax
  41d047:	hlt    
  41d048:	mov    dl,0x70
  41d04a:	pushf  
  41d04b:	icebp  
  41d04c:	mov    esi,0xc0583861
  41d051:	push   esi
  41d052:	(bad)  
  41d053:	imul   eax,edi,0xbd837f83
  41d059:	or     eax,DWORD PTR [esi-0x48]
  41d05c:	push   ds
  41d05d:	(bad)  
  41d05e:	in     eax,0xaf
  41d060:	test   DWORD PTR [ebx+0x14b52dc0],0x5c643a8a
  41d06a:	popf   
  41d06b:	sbb    al,0xa7
  41d06d:	and    DWORD PTR [ebp+0x1c],eax
  41d070:	div    BYTE PTR [ecx+0x3]
  41d073:	xchg   BYTE PTR [eax],dl
  41d075:	xchg   edi,eax
  41d076:	mov    al,0x20
  41d078:	scas   eax,DWORD PTR es:[edi]
  41d079:	shl    BYTE PTR [ebp+0x1b],1
  41d07c:	xor    DWORD PTR [ebx+0x75],0xffffffeb
  41d080:	push   ss
  41d081:	imul   esi,DWORD PTR [esi+edi*2-0x4e3c4e83],0xffffffd4
  41d089:	mov    edx,0x9b8e3a94
  41d08e:	inc    eax
  41d08f:	mov    edi,DWORD PTR [ecx-0x43]
  41d092:	push   edx
  41d093:	push   edi
  41d094:	data16 mov ch,0xdb
  41d097:	push   ss
  41d098:	in     al,0x58
  41d09a:	mov    eax,ds:0x97fa8a6
  41d09f:	in     eax,dx
  41d0a0:	inc    esi
  41d0a1:	in     al,dx
  41d0a2:	inc    ebx
  41d0a3:	mov    eax,0x78bdde90
  41d0a8:	cmp    ch,BYTE PTR [ebp+0x10]
  41d0ab:	xor    al,0x4e
  41d0ad:	ror    esp,cl
  41d0af:	xchg   ebp,esp
  41d0b1:	mov    ah,0x89
  41d0b3:	ret    
  41d0b4:	lahf   
  41d0b5:	les    ebx,FWORD PTR [edi]
  41d0b7:	mov    bl,0xd1
  41d0b9:	adc    BYTE PTR [ebp-0x368cead1],0xa8
  41d0c0:	shr    BYTE PTR [edx+0x2e6e25d9],0x44
  41d0c7:	xor    BYTE PTR ds:0x2d78fd35,ah
  41d0cd:	adc    ch,al
  41d0cf:	iret   
  41d0d0:	popa   
  41d0d1:	fisttp WORD PTR [edx+ebx*8+0x7c]
  41d0d5:	pop    es
  41d0d6:	add    ebp,DWORD PTR [ebx]
  41d0d8:	icebp  
  41d0d9:	sahf   
  41d0da:	sti    
  41d0db:	inc    ecx
  41d0dc:	test   DWORD PTR [ecx+0x31],ebp
  41d0df:	repnz sar BYTE PTR [edx-0x7c],cl
  41d0e3:	jle    0x41d124
  41d0e5:	leave  
  41d0e6:	dec    ebp
  41d0e7:	cs das 
  41d0e9:	xchg   esi,eax
  41d0ea:	pop    eax
  41d0eb:	sar    bh,0xe8
  41d0ee:	lods   al,BYTE PTR ds:[esi]
  41d0ef:	xor    DWORD PTR [esi],0x8048e0c9
  41d0f5:	fcomp  DWORD PTR [eax-0xeb52956]
  41d0fb:	jmp    0x41d151
  41d0fd:	mov    dh,0xfb
  41d0ff:	imul   ebp,esp,0x9823660f
  41d105:	mov    ch,ch
  41d107:	cli    
  41d108:	jnp    0x41d0de
  41d10a:	jmp    0x2b52:0xb972fd41
  41d111:	add    eax,0x913443ec
  41d116:	out    dx,al
  41d117:	ret    
  41d118:	cwd    
  41d11a:	jb     0x41d0d4
  41d11c:	or     al,0xbc
  41d11e:	mov    ah,0x80
  41d120:	dec    esp
  41d121:	jle    0x41d19e
  41d123:	pop    ebp
  41d124:	push   ebp
  41d125:	stc    
  41d126:	cmp    ebx,ebp
  41d128:	mov    eax,0xd75f1915
  41d12d:	pop    es
  41d12e:	cmp    edx,DWORD PTR [edi+0x5b]
  41d131:	shr    DWORD PTR [eax-0x4212b115],0x72
  41d138:	pop    esp
  41d139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d13a:	inc    ecx
  41d13b:	pop    ebx
  41d13c:	push   es
  41d13d:	in     al,0x72
  41d13f:	mov    bl,0x33
  41d141:	dec    edi
  41d142:	inc    ecx
  41d143:	push   eax
  41d144:	shl    DWORD PTR [ebp+0x16],1
  41d147:	jge    0x41d15a
  41d149:	pop    ebx
  41d14a:	xor    cl,BYTE PTR [ebp-0x11]
  41d14d:	test   DWORD PTR [ebp+0x52cc3724],esp
  41d153:	ss cdq 
  41d155:	fidivr WORD PTR [ebx]
  41d157:	mov    esp,0xb05bff37
  41d15c:	pop    ebp
  41d15d:	inc    ebp
  41d15e:	push   0xffffffed
  41d160:	cmp    cl,BYTE PTR [eax-0x3f]
  41d163:	cli    
  41d164:	stos   DWORD PTR es:[edi],eax
  41d165:	and    al,0xa8
  41d167:	sahf   
  41d168:	mov    esi,0x9f03f350
  41d16d:	ret    0xf140
  41d170:	push   ecx
  41d171:	or     edi,edx
  41d173:	push   cs
  41d174:	mov    eax,edx
  41d176:	(bad)  
  41d177:	jmp    0x41d106
  41d179:	arpl   WORD PTR [edi-0x8],dx
  41d17c:	jnp    0x41d148
  41d17e:	sub    esp,DWORD PTR [ebx]
  41d180:	fstp   QWORD PTR [eax-0x5a365a26]
  41d186:	dec    eax
  41d187:	(bad)  
  41d188:	ja     0x41d18d
  41d18a:	sub    al,0xf6
  41d18c:	or     DWORD PTR [edi+0x580d783a],edx
  41d192:	or     al,0x8d
  41d194:	inc    esp
  41d195:	inc    edi
  41d196:	in     eax,dx
  41d197:	mov    ah,0x1a
  41d199:	test   eax,0x38ae49ec
  41d19e:	add    BYTE PTR [ebp-0x30],ah
  41d1a1:	mov    ecx,0x3bedaf30
  41d1a6:	pop    ds
  41d1a7:	push   ss
  41d1a8:	add    al,0x38
  41d1aa:	in     eax,dx
  41d1ab:	cmc    
  41d1ac:	xchg   ebx,eax
  41d1ad:	cmp    dl,BYTE PTR [esi+0x6e368981]
  41d1b3:	out    0x7b,eax
  41d1b5:	jnp    0x41d1fa
  41d1b7:	ret    0xaf79
  41d1ba:	lock fbstp TBYTE PTR [edi+edx*8+0x620a0296]
  41d1c2:	sbb    al,0xcf
  41d1c4:	(bad)  
  41d1c5:	addr16 sbb eax,0xc59e66a1
  41d1cb:	pop    es
  41d1cc:	stos   BYTE PTR es:[edi],al
  41d1cd:	ffree  st(7)
  41d1cf:	mov    eax,0x50cbb975
  41d1d4:	fidivr WORD PTR [edi+0x48f2a54c]
  41d1da:	test   eax,0x414c9c71
  41d1df:	mov    esi,0x8965eaa7
  41d1e4:	pop    ebx
  41d1e5:	stc    
  41d1e6:	push   es
  41d1e7:	push   0xffffffd9
  41d1e9:	jns    0x41d238
  41d1eb:	into   
  41d1ec:	mov    WORD PTR [edx],?
  41d1ee:	pop    ebx
  41d1ef:	icebp  
  41d1f0:	pop    edx
  41d1f1:	scas   al,BYTE PTR es:[edi]
  41d1f2:	jne    0x41d20b
  41d1f4:	adc    al,0xff
  41d1f6:	repnz dec esi
  41d1f8:	ret    0x87f
  41d1fb:	bound  edi,QWORD PTR [edx+0xafe6d19]
  41d201:	xlat   BYTE PTR ds:[ebx]
  41d202:	les    edx,FWORD PTR ds:0x5191dffd
  41d208:	push   es
  41d209:	adc    al,0x6d
  41d20b:	mov    esp,0xf4bff1cc
  41d210:	into   
  41d211:	enter  0x863d,0xdb
  41d215:	xchg   ebp,eax
  41d216:	dec    esp
  41d217:	ss jg  0x41d1d3
  41d21a:	call   0x254e:0xeaf3cdbc
  41d221:	inc    ebx
  41d222:	or     eax,0xdfa950fa
  41d227:	inc    ebp
  41d228:	ss test al,0xd
  41d22b:	frstor [ecx-0x46]
  41d22e:	fucomi st,st(0)
  41d230:	icebp  
  41d231:	test   eax,0x4ba2a1e5
  41d236:	sub    BYTE PTR [edi],ah
  41d238:	xchg   edi,eax
  41d239:	xor    ebp,DWORD PTR [edi+0x73]
  41d23c:	ficom  WORD PTR [ebx+0x2a]
  41d23f:	out    0x9f,eax
  41d241:	std    
  41d242:	rcl    DWORD PTR [esi+0x76271c0],cl
  41d248:	test   eax,0x11ce1dfb
  41d24d:	dec    ebx
  41d24e:	sub    DWORD PTR [ebp-0x41],ecx
  41d251:	jnp    0x41d220
  41d253:	xchg   edx,eax
  41d254:	sti    
  41d255:	test   DWORD PTR [edx],0x2fedbabc
  41d25b:	je     0x41d2c8
  41d25d:	sbb    cl,BYTE PTR [edx-0x15]
  41d260:	mov    BYTE PTR [ebp-0x29303311],ch
  41d266:	jnp    0x41d258
  41d268:	dec    edi
  41d269:	or     cl,bh
  41d26b:	or     DWORD PTR ds:0x3886ea64,ebx
  41d271:	jmp    0x6bd2fefd
  41d276:	push   esi
  41d277:	pop    es
  41d278:	mov    ecx,DWORD PTR [ebx-0x20]
  41d27b:	sub    ebp,ebx
  41d27d:	addr16 pop esp
  41d27f:	pop    ds
  41d280:	cmp    al,0xd8
  41d282:	pushf  
  41d283:	leave  
  41d284:	mov    ebx,0xfe6d0cae
  41d289:	imul   ebp,DWORD PTR [edi],0x48
  41d28c:	(bad)  
  41d28d:	in     al,dx
  41d28e:	hlt    
  41d28f:	retf   0x1a3
  41d292:	cmp    DWORD PTR [ecx],0xe50c83f0
  41d298:	push   es
  41d299:	inc    ebx
  41d29a:	mov    ds,WORD PTR [ebx-0x784df988]
  41d2a0:	dec    ebx
  41d2a1:	and    edx,DWORD PTR [ebp-0x80]
  41d2a4:	jo     0x41d2a5
  41d2a6:	pop    esp
  41d2a7:	add    al,0x27
  41d2a9:	and    DWORD PTR [ebp-0x9f84e00],ebp
  41d2af:	cmp    eax,0xb210c4a1
  41d2b4:	jbe    0x41d277
  41d2b6:	enter  0xb21b,0x53
  41d2ba:	sti    
  41d2bb:	adc    eax,DWORD PTR [edi+0x66522d03]
  41d2c1:	fld    QWORD PTR [eax]
  41d2c3:	mov    DWORD PTR ds:0xef4c5399,esp
  41d2c9:	mov    BYTE PTR [eax],dh
  41d2cb:	out    dx,eax
  41d2cc:	or     bl,BYTE PTR ds:0x49dcce81
  41d2d2:	adc    ebx,ebp
  41d2d4:	adc    DWORD PTR [ebp+eiz*4+0x750b36f8],0xfffffff3
  41d2dc:	not    DWORD PTR [eax]
  41d2de:	dec    ebp
  41d2df:	mov    esi,DWORD PTR [ebx+ebx*1-0x45e36a77]
  41d2e6:	jne    0x41d367
  41d2e8:	jge    0x41d2ce
  41d2ea:	jae    0x41d300
  41d2ec:	push   0x37
  41d2ee:	inc    ebx
  41d2ef:	hlt    
  41d2f0:	push   0x48
  41d2f2:	int    0x55
  41d2f4:	pop    ds
  41d2f5:	sbb    edx,DWORD PTR [ecx+0x77]
  41d2f8:	jl     0x41d286
  41d2fa:	cmp    ch,al
  41d2fc:	jae    0x41d326
  41d2fe:	dec    ecx
  41d2ff:	mov    edi,0x9162bc48
  41d304:	loope  0x41d2b8
  41d306:	cmp    esp,DWORD PTR [edi]
  41d308:	sub    ebx,DWORD PTR [eax]
  41d30a:	loopne 0x41d382
  41d30c:	stc    
  41d30d:	sub    al,BYTE PTR [eax+eax*8]
  41d310:	(bad)  
  41d311:	das    
  41d312:	mov    bl,0x59
  41d314:	xchg   esp,eax
  41d315:	pop    ss
  41d316:	inc    ecx
  41d317:	push   ebx
  41d318:	cli    
  41d319:	hlt    
  41d31a:	in     eax,dx
  41d31b:	es dec ebp
  41d31d:	mov    BYTE PTR [ecx-0x5ecf2f7e],bh
  41d323:	out    dx,al
  41d324:	mov    ds:0x65f9040a,eax
  41d329:	aas    
  41d32a:	dec    edx
  41d32b:	and    bh,BYTE PTR [eax-0x59]
  41d32e:	sar    BYTE PTR [esi+eiz*2+0x35],0xa4
  41d333:	cld    
  41d334:	outs   dx,DWORD PTR ds:[esi]
  41d335:	xlat   BYTE PTR ds:[ebx]
  41d336:	sbb    BYTE PTR [esp+eiz*2-0x4ba6e9b3],ah
  41d33d:	sbb    al,0xc6
  41d33f:	neg    BYTE PTR [esi+0xa319b52]
  41d345:	add    eax,0x1b87fada
  41d34a:	xchg   edi,eax
  41d34b:	rcl    DWORD PTR [edx-0xc],1
  41d34e:	aas    
  41d34f:	cmp    al,0x83
  41d351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d352:	mov    eax,ds:0xbf4585f3
  41d357:	mov    dh,0xbe
  41d359:	call   0x7597b5e8
  41d35e:	jb     0x41d3a3
  41d360:	in     al,dx
  41d361:	clc    
  41d362:	test   DWORD PTR [ecx-0x19],0x9fcd7e16
  41d369:	(bad)  
  41d36a:	fidivr WORD PTR [edx]
  41d36c:	iret   
  41d36d:	fisub  WORD PTR ds:0x19a120ac
  41d373:	inc    edi
  41d374:	mov    edi,DWORD PTR [eax-0x7a8a6ba5]
  41d37a:	xor    esp,DWORD PTR ds:0x4162b6ea
  41d380:	and    ah,BYTE PTR [edi-0xdbcd682]
  41d386:	(bad)  
  41d387:	mov    ch,0x91
  41d389:	sub    edx,DWORD PTR [edi]
  41d38b:	popa   
  41d38c:	pop    ss
  41d38d:	cmp    dl,BYTE PTR [edx-0x66968eda]
  41d393:	mov    dl,0x0
  41d395:	fs js  0x41d415
  41d398:	sbb    BYTE PTR [esp+eax*4+0x70],bl
  41d39c:	sub    bh,BYTE PTR [eax]
  41d39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d39f:	cmp    bl,BYTE PTR [ebp-0x41]
  41d3a2:	jmp    0x41d3f1
  41d3a4:	jno    0x41d366
  41d3a6:	in     al,dx
  41d3a7:	fidivr WORD PTR [ebx+0x74be903]
  41d3ad:	push   ebx
  41d3ae:	test   ah,al
  41d3b0:	retf   0x9706
  41d3b3:	sub    esp,0x4c
  41d3b6:	jno    0x41d3da
  41d3b8:	(bad)  
  41d3b9:	xchg   esp,eax
  41d3ba:	jns    0x41d357
  41d3bc:	pop    ebx
  41d3bd:	push   0xffffffee
  41d3bf:	pop    eax
  41d3c0:	out    0x1,al
  41d3c2:	imul   eax,ecx,0x19cc067d
  41d3c8:	jg     0x41d3a3
  41d3ca:	aam    0xfe
  41d3cc:	jp     0x41d361
  41d3ce:	sti    
  41d3cf:	test   DWORD PTR gs:[eax-0x75476cc9],0xda703307
  41d3da:	jg     0x41d428
  41d3dc:	test   eax,0x6e74d139
  41d3e1:	imul   edx,DWORD PTR [edi-0x5ad72d26],0xffffffef
  41d3e8:	js     0x41d453
  41d3ea:	jns    0x41d383
  41d3ec:	pop    ss
  41d3ed:	sbb    DWORD PTR [esp+ebp*1],0x79e08f51
  41d3f4:	loop   0x41d3fa
  41d3f6:	addr16 retf 
  41d3f8:	push   0x2f9f46ab
  41d3fd:	jmp    0xcef4:0x89d44b8a
  41d404:	(bad)  
  41d405:	into   
  41d406:	out    0x5b,al
  41d408:	mov    ds:0x3319e98c,eax
  41d40d:	push   0xc60e9c5e
  41d412:	push   edx
  41d413:	and    al,BYTE PTR [edi+0x2e]
  41d416:	icebp  
  41d417:	dec    ebp
  41d418:	ret    0x281f
  41d41b:	inc    eax
  41d41c:	and    ch,BYTE PTR [edx-0x5a314d9f]
  41d422:	ins    BYTE PTR es:[edi],dx
  41d423:	and    eax,0xe6b009c
  41d428:	scas   al,BYTE PTR es:[edi]
  41d429:	adc    eax,0x8bc06604
  41d42e:	imul   ecx
  41d430:	stos   DWORD PTR es:[edi],eax
  41d431:	adc    al,0x61
  41d433:	jno    0x41d3cb
  41d435:	retf   
  41d436:	dec    ebp
  41d437:	adc    BYTE PTR ds:0xde0edac7,ah
  41d43d:	loop   0x41d3f4
  41d43f:	sub    al,bl
  41d441:	in     al,dx
  41d442:	loope  0x41d429
  41d444:	lods   al,BYTE PTR ds:[esi]
  41d445:	int3   
  41d446:	jb     0x41d434
  41d448:	popf   
  41d449:	into   
  41d44a:	jnp    0x41d48b
  41d44c:	loope  0x41d3f5
  41d44e:	(bad)  
  41d44f:	fisttp QWORD PTR [eax+0x4c7f0598]
  41d455:	ficom  DWORD PTR [eax+0x1a]
  41d458:	xchg   edx,eax
  41d459:	mov    ds:0x854bc270,eax
  41d45e:	repz or eax,esp
  41d461:	rcl    BYTE PTR [eax],0xc5
  41d464:	stos   BYTE PTR es:[edi],al
  41d465:	fst    st(7)
  41d467:	push   edi
  41d468:	test   eax,0xe5abc947
  41d46d:	and    al,0xd5
  41d46f:	arpl   WORD PTR [ecx+0x6d],dx
  41d472:	lea    esi,[edx+eiz*1]
  41d475:	fwait
  41d476:	iret   
  41d477:	adc    eax,ebx
  41d479:	inc    edx
  41d47a:	data16 fmul st(3),st
  41d47d:	mov    ds:0x2f4f9455,al
  41d482:	mov    esp,0xbe92f428
  41d487:	dec    ebp
  41d488:	stc    
  41d489:	adc    DWORD PTR [ecx],0xbc5e5d4c
  41d48f:	and    al,0xb3
  41d491:	in     eax,dx
  41d492:	push   eax
  41d493:	icebp  
  41d494:	sbb    eax,0x1da80c99
  41d499:	adc    DWORD PTR [ecx+edx*1+0x7],edi
  41d49d:	test   BYTE PTR [esi+ecx*8+0x3e],0x6f
  41d4a2:	add    eax,0x33b303ff
  41d4a7:	ins    DWORD PTR es:[edi],dx
  41d4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4a9:	mov    esp,edi
  41d4ab:	loope  0x41d475
  41d4ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4ae:	push   ebp
  41d4af:	lods   eax,DWORD PTR ds:[esi]
  41d4b0:	and    ebx,DWORD PTR [esi-0x3c6aad21]
  41d4b6:	xchg   esp,eax
  41d4b7:	lods   al,BYTE PTR gs:[esi]
  41d4b9:	rcl    al,0x1
  41d4bc:	inc    ecx
  41d4bd:	arpl   cx,bp
  41d4bf:	add    BYTE PTR [eax],al
  41d4c1:	add    dl,ah
  41d4c3:	or     al,BYTE PTR [ecx]
  41d4c5:	xchg   ecx,eax
  41d4c6:	jmp    0xbdbdc766
  41d4cb:	adc    esp,esi
  41d4cd:	pop    edi
  41d4ce:	xor    edx,esp
  41d4d0:	ins    DWORD PTR es:[edi],dx
  41d4d1:	ret    0x5066
  41d4d4:	add    DWORD PTR [eax],eax
  41d4d6:	cmc    
  41d4d7:	add    al,0x0
  41d4d9:	add    BYTE PTR [edi],cl
  41d4db:	mov    edi,esi
  41d4dd:	pusha  
  41d4de:	or     DWORD PTR [ebp+0x26345a62],esp
  41d4e4:	popa   
  41d4e5:	dec    edi
  41d4e6:	ret    
  41d4e7:	xor    DWORD PTR [edi],eax
  41d4e9:	cmp    dh,ah
  41d4eb:	mov    dh,0x13
  41d4ed:	fs mov dh,0x7
  41d4f0:	push   esi
  41d4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4f2:	sbb    eax,0x4d26caf7
  41d4f7:	int3   
  41d4f8:	sbb    ebx,esi
  41d4fa:	inc    eax
  41d4fb:	xchg   BYTE PTR [edx-0x49],al
  41d4fe:	mov    dh,0x95
  41d500:	fld    QWORD PTR [eax+0x56874afe]
  41d506:	add    DWORD PTR [ebp-0x8],esp
  41d509:	int3   
  41d50a:	jp     0x41d55e
  41d50c:	xchg   ecx,eax
  41d50d:	fadd   st,st(4)
  41d50f:	ins    DWORD PTR es:[edi],dx
  41d510:	ins    DWORD PTR es:[edi],dx
  41d511:	or     esi,DWORD PTR [ebx+0x349a5290]
  41d517:	fisubr DWORD PTR [edi+0x127269fd]
  41d51d:	inc    ebx
  41d51e:	or     dh,BYTE PTR [ebx+0xc79b712]
  41d524:	repnz mov BYTE PTR [eax+0x6161f7dd],ah
  41d52b:	push   0x7237b397
  41d530:	or     BYTE PTR ds:[ecx-0x24],0xcb
  41d535:	or     ebp,eax
  41d537:	pop    ebp
  41d538:	sub    eax,DWORD PTR fs:[ebx-0x43]
  41d53c:	inc    ebx
  41d53d:	cdq    
  41d53e:	push   ebx
  41d53f:	jnp    0x41d4cf
  41d541:	mov    BYTE PTR ds:[edi+ebx*8],bl
  41d545:	enterw 0xf3f,0x96
  41d54a:	and    eax,0x6e83d96a
  41d54f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d550:	(bad)  
  41d551:	fnstenv [ebp-0x42]
  41d554:	add    al,0x73
  41d556:	sbb    al,0x41
  41d558:	adc    dh,ch
  41d55a:	test   DWORD PTR [edi+0x6b8515e8],ebp
  41d560:	xor    BYTE PTR [ebx+esi*1+0x21],cl
  41d564:	lock cmp edx,edx
  41d567:	push   eax
  41d568:	adc    ah,ch
  41d56a:	lods   al,BYTE PTR ds:[esi]
  41d56b:	mov    WORD PTR [ebx+0x2cd8c8f2],es
  41d571:	sub    BYTE PTR [edi-0x1a],ah
  41d574:	add    eax,DWORD PTR [ecx]
  41d576:	jne    0x41d519
  41d578:	dec    ebx
  41d579:	imul   esp,DWORD PTR [ebx],0xffffffea
  41d57c:	test   BYTE PTR [ebp*2+0x403308ae],dl
  41d583:	mov    ds:0x21168dbd,al
  41d588:	in     al,0x38
  41d58a:	xor    ah,bh
  41d58c:	cmp    ebp,esp
  41d58e:	gs test al,0x1c
  41d591:	daa    
  41d592:	sbb    al,0x5b
  41d594:	push   ecx
  41d595:	es mov ch,0x99
  41d598:	in     eax,dx
  41d599:	sub    DWORD PTR [ebp-0x5c],0x72338926
  41d5a0:	dec    ebp
  41d5a1:	mov    dh,0x15
  41d5a3:	outs   dx,DWORD PTR ds:[esi]
  41d5a4:	loop   0x41d5df
  41d5a6:	mov    WORD PTR [esi],ds
  41d5a8:	jns    0x41d544
  41d5aa:	dec    esp
  41d5ab:	fsave  [ebx]
  41d5ae:	cdq    
  41d5af:	loopne 0x41d57c
  41d5b1:	dec    edx
  41d5b2:	adc    eax,0xfe8cc3c1
  41d5b7:	xchg   esi,eax
  41d5b8:	dec    esp
  41d5b9:	adc    edx,DWORD PTR [edx+0x66]
  41d5bc:	shl    edi,0x76
  41d5bf:	pop    ebp
  41d5c0:	clc    
  41d5c1:	xchg   ebp,eax
  41d5c2:	sbb    edx,DWORD PTR [esi+0x0]
  41d5c5:	mov    eax,fs
  41d5c7:	mov    eax,0x65b63496
  41d5cc:	jb     0x41d569
  41d5ce:	sub    BYTE PTR [ebx],ah
  41d5d0:	hlt    
  41d5d1:	fs sub al,al
  41d5d4:	mov    eax,0xec86c7b3
  41d5d9:	mov    dl,0xf0
  41d5db:	js     0x41d597
  41d5dd:	call   0x95b12fcc
  41d5e2:	fwait
  41d5e3:	mov    eax,ds:0xdcbf54b0
  41d5e8:	out    dx,eax
  41d5e9:	push   edi
  41d5ea:	sub    dh,dh
  41d5ec:	dec    ecx
  41d5ed:	push   ds
  41d5ee:	jmp    0xa66d:0x750498c0
  41d5f5:	stos   BYTE PTR es:[edi],al
  41d5f6:	shl    DWORD PTR [esi-0x231fd7a5],0xd8
  41d5fd:	dec    edx
  41d5fe:	mov    eax,ds:0x8ad569e9
  41d603:	test   DWORD PTR [ecx-0x25cb6b3d],ebp
  41d609:	xor    esp,DWORD PTR [esp+edx*4+0x2880a3ba]
  41d610:	ucomiss xmm1,xmm7
  41d613:	aam    0x9b
  41d615:	shl    BYTE PTR [ebx+ebp*1],1
  41d618:	std    
  41d619:	push   edi
  41d61a:	mov    WORD PTR [ebx],cs
  41d61c:	in     al,dx
  41d61d:	nop
  41d61e:	cli    
  41d61f:	inc    esi
  41d620:	(bad)  
  41d621:	mov    ds:0x9be116c1,eax
  41d626:	mov    ds:0xd32fe8a7,al
  41d62b:	mov    bh,0xc6
  41d62d:	loop   0x41d61d
  41d62f:	sub    ch,BYTE PTR [esi-0x3e]
  41d632:	dec    eax
  41d633:	call   0x26561cb5
  41d638:	jmp    0x41d5d7
  41d63a:	xchg   esi,eax
  41d63b:	daa    
  41d63c:	dec    esi
  41d63d:	push   0x93162645
  41d642:	scas   eax,DWORD PTR es:[edi]
  41d643:	push   edx
  41d644:	sub    BYTE PTR fs:[ebx],ah
  41d647:	out    0x8d,eax
  41d649:	mov    dl,0x78
  41d64b:	rol    DWORD PTR [eax-0x56],1
  41d64e:	fs pop ecx
  41d650:	mov    ebp,0xf61a64a
  41d655:	inc    eax
  41d656:	jns    0x41d678
  41d658:	cmp    eax,0xb7d3d366
  41d65d:	add    al,0x94
  41d65f:	inc    ecx
  41d660:	stos   BYTE PTR es:[edi],al
  41d661:	or     al,0x25
  41d663:	xor    DWORD PTR [eax],ebx
  41d665:	rcr    esp,1
  41d667:	pop    ecx
  41d668:	pop    esi
  41d669:	add    al,0x44
  41d66b:	add    esp,DWORD PTR [edx+0x10]
  41d66e:	(bad)  
  41d66f:	iret   
  41d670:	leave  
  41d671:	pop    esi
  41d672:	mov    dl,0xd5
  41d674:	ds pop edi
  41d676:	mov    al,0xd0
  41d678:	xor    ah,bl
  41d67a:	lods   eax,DWORD PTR ds:[esi]
  41d67b:	call   0x1bdc:0x56d5b3e1
  41d682:	retf   
  41d683:	cmp    BYTE PTR [ecx+eiz*2+0x43f7a3f2],ch
  41d68a:	daa    
  41d68b:	aas    
  41d68c:	test   DWORD PTR [ebx-0x65],edx
  41d68f:	jmp    0x45e09be1
  41d694:	add    DWORD PTR [edi],eax
  41d696:	pop    ebx
  41d697:	jns    0x41d697
  41d699:	stc    
  41d69a:	add    al,0xc1
  41d69c:	inc    esi
  41d69d:	repnz pop eax
  41d69f:	adc    eax,0x884ed3a0
  41d6a4:	push   edi
  41d6a5:	test   BYTE PTR [eax],ch
  41d6a7:	jne    0x41d62c
  41d6a9:	xor    eax,0x677f0906
  41d6ae:	cmpxchg DWORD PTR [edi],edi
  41d6b1:	loop   0x41d646
  41d6b3:	hlt    
  41d6b4:	xor    DWORD PTR [ecx],0x32
  41d6b7:	das    
  41d6b8:	mov    edi,0xf20eba1e
  41d6bd:	xor    al,0x88
  41d6bf:	(bad)  
  41d6c1:	data16 mov cl,0x9d
  41d6c4:	inc    ebp
  41d6c5:	lds    ebp,FWORD PTR [edi-0x73]
  41d6c8:	mov    al,0xa8
  41d6ca:	outs   dx,BYTE PTR ds:[esi]
  41d6cb:	adc    eax,0x40bbae21
  41d6d0:	xchg   edi,eax
  41d6d1:	je     0x41d67b
  41d6d3:	fisttp WORD PTR [esp+eax*1]
  41d6d6:	inc    eax
  41d6d7:	std    
  41d6d8:	adc    ebx,DWORD PTR [esi+0x27]
  41d6db:	mov    esi,0x947ef02a
  41d6e0:	or     DWORD PTR [ebp+0x53],esi
  41d6e3:	jg     0xeb3f0fae
  41d6e9:	ror    BYTE PTR [esi],1
  41d6eb:	xchg   edx,eax
  41d6ed:	hlt    
  41d6ee:	sub    DWORD PTR [ecx+0x288386e9],esi
  41d6f4:	ds xor edx,ebx
  41d6f7:	jnp    0x41d696
  41d6f9:	adc    BYTE PTR [ecx-0x3fb8e94],0xca
  41d700:	(bad)  
  41d701:	nop
  41d702:	pop    ecx
  41d703:	cmp    esp,ecx
  41d705:	clc    
  41d706:	ja     0x41d6b4
  41d708:	or     ah,0xd9
  41d70b:	jmp    0xd5627d53
  41d710:	adc    dl,cl
  41d712:	or     ebp,DWORD PTR [edi+0x2002c8]
  41d718:	cmc    
  41d719:	das    
  41d71a:	xchg   edi,eax
  41d71b:	ja     0x41d6b0
  41d71d:	aam    0x91
  41d71f:	mov    bh,0xb8
  41d721:	or     DWORD PTR [edi+0x284a78ff],ebx
  41d727:	and    DWORD PTR [ebp+0x590912e9],eax
  41d72d:	jb     0x41d6ef
  41d72f:	mov    eax,ds:0x85bf6583
  41d734:	in     al,dx
  41d735:	add    esi,DWORD PTR [edx]
  41d737:	cmp    DWORD PTR [ebx],ebx
  41d739:	les    esi,FWORD PTR [esi-0x2b]
  41d73c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d73d:	sar    ecx,cl
  41d73f:	ret    
  41d740:	fwait
  41d741:	pop    ss
  41d742:	xor    ah,BYTE PTR [edi]
  41d744:	repnz add BYTE PTR [edx+0x36],ch
  41d748:	mov    bl,BYTE PTR [ecx-0x28]
  41d74b:	rol    ebp,cl
  41d74d:	xchg   esp,eax
  41d74e:	push   ecx
  41d74f:	das    
  41d750:	sbb    dl,BYTE PTR [edi+0x49]
  41d753:	loopne 0x41d708
  41d755:	enter  0xb2e3,0x98
  41d759:	cmp    ebp,DWORD PTR [ebx]
  41d75b:	jns    0x41d796
  41d75d:	dec    esi
  41d75e:	sbb    dh,cl
  41d760:	fisttp QWORD PTR [edx-0x2699c13f]
  41d766:	or     ebx,eax
  41d768:	and    eax,0xbe1dbcde
  41d76d:	pop    esp
  41d76e:	fidivr WORD PTR [esi-0x246758f9]
  41d774:	lods   al,BYTE PTR ds:[esi]
  41d775:	test   eax,0x5caa3f47
  41d77a:	push   ebx
  41d77b:	xor    al,0x57
  41d77d:	cld    
  41d77e:	push   edi
  41d77f:	inc    edx
  41d780:	cmp    DWORD PTR [esi],ebx
  41d782:	cwde   
  41d783:	shl    BYTE PTR [ebx+edi*4],0x31
  41d787:	pop    eax
  41d788:	jne    0x41d734
  41d78a:	add    al,0xfa
  41d78c:	ret    0xbe53
  41d78f:	int3   
  41d790:	inc    DWORD PTR [eax+0x1c0fe96d]
  41d796:	jmp    0x92ca13c8
  41d79b:	sub    esp,esi
  41d79d:	or     al,0x9
  41d79f:	mov    esi,0xc324c133
  41d7a4:	add    dh,BYTE PTR [edx+0x225d38fe]
  41d7aa:	std    
  41d7ab:	lods   eax,DWORD PTR ds:[esi]
  41d7ac:	push   esp
  41d7ad:	dec    esp
  41d7ae:	je     0x41d780
  41d7b0:	out    0xda,al
  41d7b2:	clc    
  41d7b3:	push   es
  41d7b4:	cwde   
  41d7b5:	inc    BYTE PTR [ebx+0x16]
  41d7b8:	jne    0x41d786
  41d7ba:	cmp    al,0x87
  41d7bc:	mov    ebp,0xeefe2af3
  41d7c1:	(bad)  
  41d7c4:	aas    
  41d7c5:	outs   dx,BYTE PTR ds:[esi]
  41d7c6:	mov    WORD PTR [ebx],cs
  41d7c8:	sahf   
  41d7c9:	fld    DWORD PTR [ecx-0x65]
  41d7cc:	mov    ds:0xe7b5e2f8,eax
  41d7d1:	imul   esi,DWORD PTR [ebx],0xb76c9180
  41d7d7:	mov    eax,0x2c49c817
  41d7dc:	ss pop ss
  41d7de:	inc    ebx
  41d7df:	inc    ebx
  41d7e0:	cmp    DWORD PTR [esi],esp
  41d7e2:	pop    esi
  41d7e3:	and    esi,ebp
  41d7e5:	mov    cl,0xdc
  41d7e7:	push   ebp
  41d7e8:	loope  0x41d81e
  41d7ea:	aas    
  41d7eb:	(bad)  
  41d7ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7ed:	jo     0x41d790
  41d7ef:	inc    esi
  41d7f0:	dec    esi
  41d7f1:	inc    ebp
  41d7f2:	pop    edi
  41d7f3:	adc    al,0x1d
  41d7f5:	ja     0x41d7dd
  41d7f7:	imul   ebx,DWORD PTR [edi+0x510c97f6],0x94bca6ac
  41d801:	push   ds
  41d802:	das    
  41d803:	div    BYTE PTR [ecx-0x15]
  41d806:	dec    edi
  41d807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d808:	cdq    
  41d809:	repnz pop esp
  41d80b:	sub    al,0x98
  41d80d:	cmp    BYTE PTR [edi-0x220a7e94],ch
  41d813:	jbe    0x41d81a
  41d815:	jne    0x41d809
  41d817:	aaa    
  41d818:	pop    esi
  41d819:	jnp    0x41d830
  41d81b:	mov    DWORD PTR [eax+0x4f],eax
  41d81e:	and    bh,BYTE PTR [esi+ebx*4+0x6f]
  41d822:	xor    bh,BYTE PTR [eax+0x6]
  41d825:	std    
  41d826:	mov    al,0x86
  41d828:	sub    al,0x22
  41d82a:	dec    ebp
  41d82b:	push   edx
  41d82c:	xlat   BYTE PTR gs:[ebx]
  41d82e:	addr16 push edi
  41d830:	test   BYTE PTR [eax],0x2e
  41d833:	sbb    DWORD PTR ds:0x69e7c790,edi
  41d839:	mov    BYTE PTR [ebx+0xa],dh
  41d83c:	lock xor ecx,esi
  41d83f:	jp     0x41d898
  41d841:	mov    al,ds:0x15b77876
  41d846:	push   ds
  41d847:	xchg   ebp,eax
  41d848:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41d84a:	or     al,0xe
  41d84c:	aad    0x2a
  41d84e:	jo     0x41d80d
  41d850:	cs pop esi
  41d852:	into   
  41d853:	imul   eax,DWORD PTR ds:0x53a794a7,0xffffffa2
  41d85a:	xor    BYTE PTR [ecx],0x55
  41d85d:	sahf   
  41d85e:	cld    
  41d85f:	mov    ds:0xd985f713,al
  41d864:	les    ebx,FWORD PTR [ecx-0x2ccea834]
  41d86a:	and    eax,0xca15c63d
  41d86f:	add    al,0xc8
  41d871:	xchg   ecx,eax
  41d872:	fist   DWORD PTR [edx+0x6542a06f]
  41d878:	lods   eax,DWORD PTR ds:[esi]
  41d879:	ja     0x41d895
  41d87b:	jnp    0x41d8c7
  41d87d:	les    ebp,FWORD PTR [ebx-0x39]
  41d880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d881:	sub    eax,0xd0f42a76
  41d886:	stos   DWORD PTR es:[edi],eax
  41d887:	adc    DWORD PTR [ebp+0x4c],edx
  41d88a:	or     esp,DWORD PTR [ecx+0x44e83cd2]
  41d890:	ja     0x41d8ac
  41d892:	rcl    BYTE PTR [ebx-0x69],0xf6
  41d896:	jl     0x41d907
  41d898:	push   ecx
  41d899:	and    al,0x16
  41d89b:	sub    edx,DWORD PTR [edi]
  41d89d:	push   ecx
  41d89e:	mov    ebp,0xc21ed473
  41d8a3:	or     DWORD PTR [eax+ebp*2-0x21],ebx
  41d8a7:	add    BYTE PTR [ebx+0x53ea719b],dl
  41d8ad:	retf   0x952b
  41d8b0:	inc    edx
  41d8b1:	jnp    0x41d88e
  41d8b3:	xor    eax,0x2764e807
  41d8b8:	pushf  
  41d8b9:	jne    0x41d916
  41d8bb:	nop
  41d8bc:	xchg   esp,eax
  41d8bd:	mov    edi,0xd4f02a
  41d8c2:	mov    dl,0x8f
  41d8c4:	xor    edi,edi
  41d8c6:	and    bh,ah
  41d8c8:	in     al,dx
  41d8c9:	xchg   esi,eax
  41d8ca:	(bad)  
  41d8cb:	out    0xad,al
  41d8cd:	pop    ebx
  41d8ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8cf:	lea    ebp,[edi+esi*8+0x94d0986]
  41d8d6:	out    0x82,al
  41d8d8:	ds (bad) 
  41d8da:	stc    
  41d8db:	ja     0x41d8b9
  41d8dd:	test   eax,0x7b974427
  41d8e2:	jb     0x41d8d5
  41d8e4:	fcomp  DWORD PTR [esi-0x2a]
  41d8e7:	jne    0x41d922
  41d8e9:	retf   0x2d6f
  41d8ec:	sbb    BYTE PTR [edx+ecx*2-0x23],al
  41d8f0:	add    cl,bl
  41d8f2:	xor    al,0xb8
  41d8f4:	stos   DWORD PTR es:[edi],eax
  41d8f5:	repz adc cl,BYTE PTR [eax]
  41d8f8:	push   0x32
  41d8fa:	in     eax,0x60
  41d8fc:	sub    DWORD PTR [ecx+0x53037174],ebp
  41d902:	pop    eax
  41d903:	cmp    esp,DWORD PTR [ebx]
  41d905:	and    eax,0xc4e17b7e
  41d90a:	mov    esi,0x4ee3300c
  41d90f:	test   BYTE PTR [esi+eax*1],bh
  41d912:	or     DWORD PTR [edx+0x4e74e28c],ecx
  41d918:	jnp    0x41d96f
  41d91a:	int    0x85
  41d91c:	retf   0xd908
  41d91f:	pop    edx
  41d920:	pop    edi
  41d921:	bound  edi,QWORD PTR [esi-0x15]
  41d924:	nop
  41d925:	into   
  41d926:	cs dec ebx
  41d928:	fadd   st(6),st
  41d92a:	sub    DWORD PTR [ecx],0x57
  41d92d:	sub    ebx,DWORD PTR [ebx]
  41d92f:	xlat   BYTE PTR ds:[ebx]
  41d930:	in     eax,0x14
  41d932:	lds    edi,FWORD PTR [esp+edx*2]
  41d935:	mov    ebx,0xfdee973e
  41d93a:	jg     0x41d905
  41d93c:	iret   
  41d93d:	inc    edx
  41d93e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d93f:	jmp    0x42336188
  41d944:	aam    0x31
  41d946:	pop    ebp
  41d947:	dec    ebx
  41d948:	adc    BYTE PTR ds:0x5af3e3b8,bl
  41d94e:	pop    edi
  41d94f:	test   DWORD PTR [edi+0x28c5b7e5],esp
  41d955:	scas   eax,DWORD PTR es:[edi]
  41d956:	and    al,0xb6
  41d958:	sub    al,BYTE PTR [ebx]
  41d95a:	sbb    al,0x7c
  41d95c:	jg     0x41d9a2
  41d95e:	pop    eax
  41d95f:	fwait
  41d960:	mov    ebp,0x72fa32cb
  41d965:	push   cs
  41d966:	mov    esi,0x3954ae50
  41d96b:	inc    ebx
  41d96c:	std    
  41d96d:	pop    ebx
  41d96e:	dec    ebx
  41d96f:	dec    edx
  41d970:	imul   eax,eax,0xfffffff6
  41d973:	adc    bl,BYTE PTR [ebx+0x41]
  41d976:	das    
  41d977:	in     al,0x8d
  41d979:	push   ss
  41d97a:	clc    
  41d97b:	hlt    
  41d97c:	mov    edi,0x12abb098
  41d981:	jb     0x41d9fb
  41d983:	mov    al,ds:0xc0189575
  41d988:	outs   dx,BYTE PTR ds:[esi]
  41d989:	pop    ds
  41d98a:	and    eax,DWORD PTR [edi]
  41d98c:	(bad)  
  41d98d:	es daa 
  41d98f:	dec    ebx
  41d990:	xor    DWORD PTR [ebx],edi
  41d992:	xchg   ecx,eax
  41d993:	inc    ecx
  41d994:	push   esp
  41d995:	xor    DWORD PTR [ebp-0x2277d152],esp
  41d99b:	push   ebx
  41d99c:	pop    ss
  41d99d:	aad    0x4d
  41d99f:	adc    BYTE PTR [ebp+0x69933932],dl
  41d9a5:	add    al,ah
  41d9a7:	cmp    al,0x6
  41d9a9:	test   al,0x6a
  41d9ab:	shl    BYTE PTR [esi-0x43],0x1a
  41d9af:	adc    bl,BYTE PTR [esi]
  41d9b1:	je     0x41d9f6
  41d9b3:	fs sub eax,0x19678ae5
  41d9b9:	push   0xffffffc0
  41d9bb:	outs   dx,DWORD PTR ds:[esi]
  41d9bc:	std    
  41d9bd:	das    
  41d9be:	mov    eax,ds:0xec94cf74
  41d9c3:	popa   
  41d9c4:	xor    al,0xe
  41d9c6:	out    dx,eax
  41d9c7:	xchg   esi,eax
  41d9c8:	rcl    DWORD PTR [ebx-0x6ec24790],1
  41d9ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9cf:	add    BYTE PTR [eax],al
  41d9d1:	add    BYTE PTR [esi+0x5e],bl
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	mov    ds:0x5b5c1718,al
  41d9e3:	push   ebp
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	cmc    
  41d9e7:	add    al,0x0
  41d9e9:	add    al,bh
  41d9eb:	xor    eax,DWORD PTR [edx+0xf747831]
  41d9f1:	xlat   BYTE PTR ds:[ebx]
  41d9f2:	retf   0x71d7
  41d9f5:	lahf   
  41d9f6:	nop
  41d9f7:	das    
  41d9f8:	lahf   
  41d9f9:	sti    
  41d9fa:	neg    BYTE PTR [esi-0x5]
  41d9fd:	sti    
  41d9fe:	xchg   BYTE PTR [eax+0xf],dl
  41da01:	push   cs
  41da02:	ret    
  41da03:	in     eax,0x5b
  41da05:	rcl    DWORD PTR [ebx],cl
  41da07:	jg     0x41d9b3
  41da09:	dec    esi
  41da0a:	cmp    DWORD PTR [edx+0x60],ebx
  41da0d:	and    esp,esp
  41da0f:	imul   ecx,ebx,0x480d1ee2
  41da15:	xchg   esp,eax
  41da16:	add    al,0x91
  41da18:	mov    cl,0x87
  41da1a:	jmp    0xedb9:0xdd11292a
  41da21:	fimul  DWORD PTR [ebx+0xcae9239]
  41da27:	and    al,0x72
  41da29:	xchg   BYTE PTR [ebx+0x0],bl
  41da2c:	push   edi
  41da2d:	sub    BYTE PTR gs:[esi-0x74],bl
  41da31:	int    0xae
  41da33:	pop    ss
  41da34:	jo     0x41da67
  41da36:	cmc    
  41da37:	addr16 fs xchg esp,eax
  41da3a:	or     DWORD PTR [edi-0x1b],ebp
  41da3d:	scas   eax,DWORD PTR es:[edi]
  41da3e:	aaa    
  41da3f:	jmp    0x41da5d
  41da41:	add    BYTE PTR [ebx-0xead6c58],bh
  41da47:	scas   eax,DWORD PTR es:[edi]
  41da48:	dec    ebx
  41da49:	mov    dl,0x8b
  41da4b:	add    DWORD PTR [esi+0x5a8c44e1],edi
  41da51:	and    cl,BYTE PTR [esi-0x3a]
  41da54:	ds retf 
  41da56:	push   0x5cc0bfa2
  41da5b:	pop    ebx
  41da5c:	cmp    DWORD PTR [esi+0x25],ebx
  41da5f:	jecxz  0x41d9f6
  41da61:	pop    eax
  41da62:	xor    ebp,ecx
  41da64:	cmp    esp,DWORD PTR [edi]
  41da66:	push   esi
  41da67:	daa    
  41da68:	dec    eax
  41da69:	and    BYTE PTR [eax],bl
  41da6b:	cmp    BYTE PTR [ebx+eax*1-0x41d953bd],0xc1
  41da73:	lods   al,BYTE PTR ds:[esi]
  41da74:	(bad)  
  41da75:	xlat   BYTE PTR ds:[ebx]
  41da76:	adc    ebx,DWORD PTR [edi+ebp*2-0x27]
  41da7a:	loop   0x41dab0
  41da7c:	xor    BYTE PTR [eax+0x19fe0fd],al
  41da82:	push   esp
  41da83:	aas    
  41da84:	push   ebp
  41da85:	aaa    
  41da86:	push   edi
  41da87:	add    eax,0xeb1de162
  41da8c:	mov    eax,ds:0x44c65164
  41da91:	push   ds
  41da92:	clc    
  41da93:	ficom  DWORD PTR [eax-0x3dada432]
  41da99:	inc    ebp
  41da9a:	lods   al,BYTE PTR ds:[esi]
  41da9b:	retf   
  41da9c:	sub    DWORD PTR [edi-0x3c2ec9ad],eax
  41daa2:	pushf  
  41daa3:	pop    ss
  41daa4:	add    ah,ch
  41daa6:	jecxz  0x41da2a
  41daa8:	inc    ebp
  41daa9:	and    BYTE PTR [eax+edi*1-0x43],bh
  41daad:	mov    al,ds:0x8400251a
  41dab2:	and    bh,BYTE PTR [edx-0x3e]
  41dab5:	adc    edx,eax
  41dab7:	iret   
  41dab8:	sbb    ebp,DWORD PTR [ecx+0x57]
  41dabb:	mov    ch,0xa8
  41dabd:	sub    eax,0x8d895de6
  41dac2:	adc    ch,ch
  41dac4:	cld    
  41dac5:	sbb    BYTE PTR [edi-0x52],ah
  41dac8:	dec    ebx
  41dac9:	xor    eax,0x738fe830
  41dace:	and    esi,DWORD PTR [edi+0x16]
  41dad1:	fmul   QWORD PTR [ecx+0x69b17240]
  41dad7:	inc    eax
  41dad8:	push   ecx
  41dad9:	xor    esi,DWORD PTR [edi]
  41dadb:	repnz mov bh,0x9e
  41dade:	pop    es
  41dadf:	pop    ebx
  41dae0:	std    
  41dae1:	jns    0x41dad7
  41dae3:	pop    ecx
  41dae4:	xchg   esi,eax
  41dae5:	std    
  41dae6:	adc    al,0xc2
  41dae8:	icebp  
  41dae9:	jbe    0x41daa6
  41daeb:	mov    ebp,0x2095afb8
  41daf0:	adc    al,0x25
  41daf2:	sbb    BYTE PTR [eax-0x40f36a4a],0x5
  41daf9:	and    DWORD PTR [ecx-0x2b],eax
  41dafc:	and    DWORD PTR [ebx],esp
  41dafe:	test   esi,esp
  41db00:	popf   
  41db01:	pop    eax
  41db02:	rcl    esp,1
  41db04:	push   esp
  41db05:	dec    edx
  41db06:	sub    al,0xcb
  41db08:	hlt    
  41db09:	cdq    
  41db0a:	mov    ah,0x6a
  41db0c:	sub    al,0x2d
  41db0e:	lar    ebx,WORD PTR [ebx+0x7b]
  41db12:	(bad)  
  41db13:	push   cs
  41db14:	jl     0x41db47
  41db16:	mov    ch,0x5
  41db18:	loop   0x41db37
  41db1a:	lds    ecx,FWORD PTR [ebp-0x461a3d1b]
  41db20:	mov    ebp,0x70686f04
  41db25:	xchg   DWORD PTR [edi],ebx
  41db27:	lahf   
  41db28:	push   0x15
  41db2a:	cmp    esi,eax
  41db2c:	add    edx,esi
  41db2e:	jbe    0x41db99
  41db30:	adc    al,0x84
  41db32:	cld    
  41db33:	mov    ah,0x8c
  41db35:	xor    eax,DWORD PTR [esi]
  41db37:	shl    BYTE PTR [ebx+edi*8],cl
  41db3a:	mov    BYTE PTR [ebp+0x513470cd],al
  41db40:	push   0x3a
  41db42:	jns    0x41dbb6
  41db44:	(bad)  
  41db45:	fiadd  WORD PTR [esp+eiz*8+0x34]
  41db49:	fisubr DWORD PTR [eax+ebx*2+0x1be38a05]
  41db50:	adc    esi,DWORD PTR [ebx+ecx*4-0x28]
  41db54:	(bad)  
  41db55:	xchg   BYTE PTR [esi-0x4],ah
  41db58:	jno    0x41db29
  41db5a:	test   BYTE PTR [esi+0x5f5cbd63],ch
  41db60:	out    0x47,al
  41db62:	es push esp
  41db64:	lea    esi,[edi]
  41db66:	lock inc esi
  41db68:	not    esp
  41db6a:	xchg   edx,eax
  41db6b:	sub    DWORD PTR [eax+0x6],ebp
  41db6e:	lods   eax,DWORD PTR ds:[esi]
  41db6f:	push   ebx
  41db70:	lds    ebx,FWORD PTR [ecx+0x5c518290]
  41db76:	ror    BYTE PTR [ecx+0x41],cl
  41db79:	loope  0x41db41
  41db7b:	and    ah,BYTE PTR [ecx]
  41db7d:	push   ecx
  41db7e:	not    dl
  41db80:	call   0x7889f7fe
  41db85:	add    eax,0x78bbb767
  41db8a:	stos   DWORD PTR es:[edi],eax
  41db8b:	into   
  41db8c:	out    dx,eax
  41db8d:	and    bl,BYTE PTR [ecx]
  41db8f:	call   0x351757b2
  41db94:	test   eax,0xa1541cfb
  41db99:	push   edi
  41db9a:	jle    0x41dbed
  41db9c:	or     eax,DWORD PTR [esi+0x376bd66a]
  41dba2:	jge    0x41db6c
  41dba4:	and    al,0xdd
  41dba6:	add    eax,0xf7a58400
  41dbab:	and    BYTE PTR [esp-0x5e8f043d],bh
  41dbb2:	sbb    cl,BYTE PTR [edi+0x34]
  41dbb5:	mov    al,0x5c
  41dbb7:	bound  edx,QWORD PTR [edx]
  41dbb9:	scas   eax,DWORD PTR es:[edi]
  41dbba:	jns    0x41db88
  41dbbc:	or     eax,0x8efa6d03
  41dbc1:	dec    esi
  41dbc2:	mov    dh,0x9b
  41dbc4:	jp     0x41db8e
  41dbc6:	sub    ebx,DWORD PTR [edi]
  41dbc8:	mov    gs,WORD PTR [eax-0x57062b6a]
  41dbce:	cmp    DWORD PTR [esi+0x27],ebp
  41dbd1:	out    0x20,al
  41dbd3:	mov    dl,0x3a
  41dbd5:	cmp    esi,DWORD PTR [ecx]
  41dbd7:	in     al,dx
  41dbd8:	or     al,0xed
  41dbda:	pop    eax
  41dbdb:	imul   ecx,DWORD PTR [ebp-0x6932b0af],0x58
  41dbe2:	cmp    BYTE PTR [ebp+0x16211857],al
  41dbe8:	arpl   bp,si
  41dbea:	lods   eax,DWORD PTR ds:[esi]
  41dbeb:	sbb    eax,DWORD PTR [ecx]
  41dbed:	pusha  
  41dbee:	push   ebx
  41dbef:	mov    cl,BYTE PTR [ebp+0x15]
  41dbf2:	fst    QWORD PTR [ecx]
  41dbf4:	fdiv   DWORD PTR [eax-0x2eca9f81]
  41dbfa:	pushf  
  41dbfb:	das    
  41dbfc:	mov    ch,BYTE PTR [edi-0x1e9554e6]
  41dc02:	repz jg 0x41dbd5
  41dc05:	jecxz  0x41dc3b
  41dc07:	fcom   DWORD PTR [ebp-0x4]
  41dc0a:	(bad)  
  41dc0b:	sbb    ch,dh
  41dc0d:	pop    ebx
  41dc0e:	lahf   
  41dc0f:	xchg   esi,eax
  41dc10:	call   0xc63c3b10
  41dc15:	sbb    eax,0x70deb10c
  41dc1a:	hlt    
  41dc1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc1c:	popf   
  41dc1d:	daa    
  41dc1e:	xor    eax,0xa91fd137
  41dc23:	and    dl,al
  41dc25:	stc    
  41dc26:	inc    eax
  41dc27:	popf   
  41dc28:	sub    dl,BYTE PTR [ecx+ebx*8+0x2b]
  41dc2c:	lea    edx,[edx]
  41dc2e:	push   0x36
  41dc30:	xor    DWORD PTR [eax-0x53],esp
  41dc33:	(bad)  
  41dc34:	imul   ecx,DWORD PTR [edx+0x1a1e0d8f],0x73bf91e
  41dc3e:	psubusw mm7,QWORD PTR [ecx]
  41dc41:	mov    dh,0x53
  41dc43:	loope  0x41dc40
  41dc45:	(bad)  
  41dc46:	in     eax,dx
  41dc47:	daa    
  41dc48:	aad    0xc7
  41dc4a:	out    dx,al
  41dc4b:	test   eax,0xd0a803f3
  41dc50:	cmp    eax,0xdee6a991
  41dc55:	(bad)  
  41dc56:	out    dx,al
  41dc57:	repz aam 0xf5
  41dc5a:	ret    
  41dc5b:	mov    ecx,0xf39e1b2
  41dc60:	fadd   DWORD PTR [eax+eax*2]
  41dc63:	xchg   edx,eax
  41dc64:	fld    st(5)
  41dc66:	adc    ecx,DWORD PTR [edi+0x505ab56b]
  41dc6c:	scas   al,BYTE PTR es:[edi]
  41dc6d:	or     DWORD PTR [esi],edx
  41dc6f:	aas    
  41dc70:	xor    eax,0x98255030
  41dc75:	mov    ds:0x3eef23bf,eax
  41dc7a:	pop    edx
  41dc7b:	mov    ebx,0x2eeb5d1
  41dc80:	xchg   esi,eax
  41dc81:	imul   edx,DWORD PTR [ebx],0x18d70f91
  41dc87:	add    BYTE PTR [ecx-0x4fe0fdd9],bh
  41dc8d:	adc    ch,BYTE PTR [edx]
  41dc8f:	xchg   ecx,eax
  41dc90:	(bad)  
  41dc91:	sub    al,0x5a
  41dc93:	inc    ebx
  41dc94:	jle    0x41dc30
  41dc96:	jmp    0xa548:0xefa79492
  41dc9d:	popa   
  41dc9e:	push   es
  41dc9f:	xlat   BYTE PTR ds:[ebx]
  41dca0:	push   ss
  41dca1:	inc    esi
  41dca2:	jo     0x41dc98
  41dca4:	xor    dh,BYTE PTR [ecx-0x1b]
  41dca7:	dec    ebp
  41dca8:	push   cs
  41dca9:	nop
  41dcaa:	ficom  WORD PTR [eax]
  41dcac:	mov    ecx,0x729e2672
  41dcb1:	(bad)  
  41dcb2:	jmp    0x41dc48
  41dcb4:	adc    esi,DWORD PTR [esi]
  41dcb6:	and    bl,BYTE PTR [ecx+ecx*4-0x17]
  41dcba:	dec    esi
  41dcbb:	shr    dh,0xfe
  41dcbe:	(bad)
  41dcc1:	pop    esi
  41dcc2:	outs   dx,BYTE PTR ds:[esi]
  41dcc3:	cdq    
  41dcc4:	inc    ecx
  41dcc5:	add    dh,bl
  41dcc7:	retf   
  41dcc8:	arpl   WORD PTR [edi],ax
  41dcca:	xor    BYTE PTR [eax-0x72],dl
  41dccd:	and    eax,0x9fbb1a00
  41dcd2:	cmp    BYTE PTR [ecx-0x7a60a14c],0xaa
  41dcd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcda:	jmp    FWORD PTR [edx-0x4f]
  41dcdd:	and    esi,DWORD PTR [ebx+0x4e]
  41dce0:	jo     0x41dcb1
  41dce2:	pmulhuw mm2,mm4
  41dce5:	push   esp
  41dce6:	inc    ebp
  41dce7:	sti    
  41dce8:	sub    eax,esi
  41dcea:	(bad)  
  41dceb:	cwde   
  41dcec:	xchg   BYTE PTR [eax+edx*4],cl
  41dcef:	push   ss
  41dcf0:	sub    WORD PTR [eax+0x3a5aff8d],0x8560
  41dcf9:	inc    edx
  41dcfa:	nop
  41dcfb:	lods   eax,DWORD PTR ds:[esi]
  41dcfc:	sti    
  41dcfd:	add    DWORD PTR [ebx-0x14a157b3],ebx
  41dd03:	adc    dl,BYTE PTR [edi-0x5a]
  41dd06:	(bad)
  41dd0a:	test   BYTE PTR [esi-0x6d7435d8],ah
  41dd10:	fwait
  41dd11:	sub    bh,cl
  41dd13:	push   esp
  41dd14:	jg     0x41dd73
  41dd16:	xchg   ebp,ebx
  41dd18:	imul   esi,DWORD PTR [edi],0xffffff9e
  41dd1b:	inc    eax
  41dd1c:	imul   esp,DWORD PTR [eiz*2+0x6bc36f33],0x6307cded
  41dd27:	xchg   esi,eax
  41dd28:	nop
  41dd29:	or     DWORD PTR [esi+0x3eecba67],ebp
  41dd2f:	add    eax,0x832b7a8
  41dd34:	arpl   WORD PTR [esi+0x31f4223d],sp
  41dd3a:	fst    QWORD PTR [edi-0x69ba0720]
  41dd40:	shl    BYTE PTR [edi],0xb0
  41dd43:	fiadd  WORD PTR [eax+0x2653c386]
  41dd49:	mov    ah,0x49
  41dd4b:	push   edi
  41dd4c:	xchg   ebp,eax
  41dd4d:	scas   eax,DWORD PTR es:[edi]
  41dd4e:	inc    edi
  41dd4f:	retf   
  41dd50:	pop    edx
  41dd51:	stc    
  41dd52:	dec    ebp
  41dd53:	push   esi
  41dd54:	sub    esp,DWORD PTR [esi+0x171bb874]
  41dd5a:	pop    ss
  41dd5b:	repnz mov ch,0xe4
  41dd5e:	mov    dh,cl
  41dd60:	jbe    0x41dd5e
  41dd62:	outs   dx,BYTE PTR ds:[esi]
  41dd63:	cli    
  41dd64:	repnz pop esi
  41dd66:	dec    edx
  41dd67:	jne    0x41dddf
  41dd69:	es jmp 0x41dd0c
  41dd6c:	cmp    esi,DWORD PTR [edi]
  41dd6e:	mov    ds:0xc48ecde0,al
  41dd73:	in     al,0x2a
  41dd75:	jns    0x41dd4e
  41dd77:	mov    ebp,0xa954f0
  41dd7c:	inc    edx
  41dd7d:	outs   dx,BYTE PTR ds:[esi]
  41dd7e:	aad    0xe8
  41dd80:	xchg   edi,eax
  41dd81:	push   eax
  41dd82:	sub    esp,DWORD PTR [esi-0x5cd5f54d]
  41dd88:	xchg   edx,eax
  41dd89:	inc    ebx
  41dd8a:	jl     0x41dd21
  41dd8c:	(bad)  
  41dd8d:	jb     0x41dd65
  41dd8f:	les    edi,FWORD PTR [eax+eax*4]
  41dd92:	clc    
  41dd93:	dec    edx
  41dd94:	xchg   ebp,eax
  41dd95:	sbb    eax,0x6de85cc6
  41dd9a:	inc    edx
  41dd9b:	xchg   bh,bl
  41dd9d:	mov    bh,0x81
  41dd9f:	pushf  
  41dda0:	mov    ds:0xc5617736,eax
  41dda5:	mov    ah,0x65
  41dda7:	xor    ecx,ecx
  41dda9:	jb     0x41dd86
  41ddab:	push   es
  41ddac:	ja     0x41de2a
  41ddae:	icebp  
  41ddaf:	mov    ecx,0xbdd94860
  41ddb4:	add    ah,BYTE PTR [edi+0x42]
  41ddb7:	sub    eax,0x8b5efc5c
  41ddbc:	xor    ecx,DWORD PTR [edi]
  41ddbe:	js     0x41de21
  41ddc0:	aaa    
  41ddc1:	jbe    0x41dd62
  41ddc3:	add    eax,0x59ba02bf
  41ddc8:	push   esp
  41ddc9:	(bad)  
  41ddcb:	mov    dl,0xd7
  41ddcd:	imul   esi,DWORD PTR [esi],0xe7da718f
  41ddd3:	or     eax,0xf3bb3cbe
  41ddd8:	fmul   QWORD PTR [ebx]
  41ddda:	test   ch,ah
  41dddc:	fisttp QWORD PTR [edx+0x4d]
  41dddf:	(bad)  
  41dde0:	jbe    0x41de02
  41dde2:	sti    
  41dde3:	(bad)  
  41dde4:	(bad)  [edi-0x49cbe741]
  41ddea:	jl     0x41dda5
  41ddec:	div    cl
  41ddee:	loop   0x41dd7c
  41ddf0:	inc    edx
  41ddf1:	xchg   DWORD PTR [ebx-0x3c86a5f9],esp
  41ddf7:	dec    ebx
  41ddf8:	mov    al,ds:0x3a3e4bd8
  41ddfd:	pop    ebx
  41ddfe:	xchg   edx,eax
  41ddff:	scas   al,BYTE PTR es:[edi]
  41de00:	retf   0xe234
  41de03:	cli    
  41de04:	pop    esp
  41de05:	dec    ebx
  41de06:	enter  0xaf5,0xb8
  41de0a:	cdq    
  41de0b:	aam    0x96
  41de0d:	xchg   edx,eax
  41de0e:	mov    ebp,0x8894a146
  41de13:	pop    ebx
  41de14:	scas   eax,DWORD PTR es:[edi]
  41de15:	sub    ebx,0x21
  41de18:	push   edi
  41de19:	push   cs
  41de1a:	scas   eax,DWORD PTR es:[edi]
  41de1b:	scas   al,BYTE PTR es:[edi]
  41de1c:	inc    ebp
  41de1d:	lahf   
  41de1e:	mov    ebx,0x5555a622
  41de23:	inc    ebp
  41de24:	pop    ss
  41de25:	add    esi,DWORD PTR [esi+0x29]
  41de28:	fs mov cl,0x69
  41de2b:	arpl   WORD PTR [edx+0x36],di
  41de2e:	xor    DWORD PTR ds:0x6aeee82b,0xdf99872d
  41de38:	ins    DWORD PTR es:[edi],dx
  41de39:	into   
  41de3a:	sbb    esi,ebx
  41de3c:	loop   0x41de27
  41de3e:	into   
  41de3f:	push   ebp
  41de40:	jle    0x41dde8
  41de42:	jno    0x41dddb
  41de44:	jo     0x41de73
  41de46:	ficom  WORD PTR [ecx-0x34]
  41de49:	jnp    0x41ddf0
  41de4b:	push   ecx
  41de4c:	shr    DWORD PTR [ebp-0x4a78eeb6],0x8e
  41de53:	sub    DWORD PTR [esi],esp
  41de55:	xor    BYTE PTR ds:[eax],cl
  41de58:	shr    dl,0xee
  41de5b:	jns    0x41de31
  41de5d:	push   edi
  41de5e:	sub    DWORD PTR ds:0xf286ef91,esi
  41de64:	sbb    eax,0x5f4095e5
  41de69:	mov    ds:0x3e50a2e7,eax
  41de6e:	repnz xor DWORD PTR [edx],esp
  41de71:	cmp    ch,BYTE PTR [edi]
  41de73:	mov    ecx,0x78a715c9
  41de78:	int3   
  41de79:	adc    DWORD PTR [ecx],0xffffffcc
  41de7c:	jbe    0x41deb1
  41de7e:	dec    ecx
  41de7f:	iret   
  41de80:	ds imul eax,ebp,0x75520de4
  41de87:	push   es
  41de88:	cmp    bl,ch
  41de8a:	adc    BYTE PTR [ebp+0x4f6769d9],0x5a
  41de91:	jmp    0x268:0x81c024fa
  41de98:	or     DWORD PTR [ecx+0x75a10edd],0x48ef9f7a
  41dea2:	scas   al,BYTE PTR es:[edi]
  41dea3:	sbb    ah,BYTE PTR [ecx-0x5c]
  41dea6:	dec    eax
  41dea7:	lock addr16 cli 
  41deaa:	jne    0x41deaf
  41deac:	sub    edx,0x6c83b9e3
  41deb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41deb3:	in     al,dx
  41deb4:	push   ebp
  41deb5:	test   BYTE PTR [ecx+0x5d],bl
  41deb8:	push   ebx
  41deb9:	call   0xf699a0bb
  41debe:	xchg   BYTE PTR [edi+edx*2],bl
  41dec1:	sbb    ah,BYTE PTR [esi+edx*8+0x60]
  41dec5:	mov    ds:0xcc334d3a,al
  41deca:	add    BYTE PTR [ebx+0x7e],al
  41decd:	lea    ebx,[ebp+0x47]
  41ded0:	aas    
  41ded1:	xlat   BYTE PTR ds:[ebx]
  41ded2:	scas   eax,DWORD PTR es:[edi]
  41ded3:	iret   
  41ded4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ded5:	push   ss
  41ded6:	xor    edi,DWORD PTR [ecx]
  41ded8:	je     0x41de6e
  41deda:	adc    al,0x69
  41dedc:	cmp    DWORD PTR [ecx+0xb3],eax
  41dee2:	loope  0x41de68
  41dee4:	xchg   al,dh
  41dee6:	out    0xf2,eax
  41dee8:	not    DWORD PTR [ebp-0x25c4ffdf]
  41deee:	fbld   TBYTE PTR [edx+esi*2+0x15]
  41def2:	push   eax
  41def3:	pop    edx
  41def4:	add    DWORD PTR [eax],eax
  41def6:	cmc    
  41def7:	add    al,0x0
  41def9:	add    BYTE PTR [edi],dl
  41defb:	sbb    BYTE PTR [ecx+0x1e191690],cl
  41df01:	pop    ds
  41df02:	push   ds
  41df03:	mov    bl,0xcd
  41df05:	xchg   ebx,ecx
  41df07:	test   BYTE PTR [esi-0x6f],bl
  41df0a:	fs ret 0xa31d
  41df0e:	daa    
  41df0f:	imul   esp,DWORD PTR [edx],0x20
  41df12:	jmp    0x2f100304
  41df17:	mov    edx,0xd83c2e08
  41df1c:	sbb    BYTE PTR [ebx+0x53],ch
  41df1f:	xchg   esp,eax
  41df20:	xlat   BYTE PTR ds:[ebx]
  41df21:	mov    dl,0xd5
  41df23:	jl     0x41df87
  41df25:	mov    DWORD PTR [esi],edx
  41df27:	lahf   
  41df28:	cmp    ch,BYTE PTR [ecx+0x7f]
  41df2b:	jns    0x41df11
  41df2d:	outs   dx,BYTE PTR ds:[esi]
  41df2e:	outs   dx,BYTE PTR ds:[esi]
  41df2f:	jb     0x41df21
  41df31:	stc    
  41df32:	iret   
  41df33:	jmp    0x41df6f
  41df35:	jmp    0x41df9d
  41df37:	rcl    ecx,cl
  41df39:	mov    WORD PTR ds:[edi-0x2cbec898],fs
  41df40:	xor    esi,0xffffff99
  41df43:	mov    ebx,0xaf489b09
  41df48:	mov    edx,0xb7f509d7
  41df4d:	sbb    esp,DWORD PTR [esi+0x16]
  41df50:	and    dh,BYTE PTR [ebp-0x6c307419]
  41df56:	sti    
  41df57:	xchg   ecx,eax
  41df58:	out    0x41,eax
  41df5a:	stos   DWORD PTR es:[edi],eax
  41df5b:	dec    esi
  41df5c:	(bad)  [edi]
  41df5e:	sahf   
  41df5f:	jmp    0xfe61:0xb9d8e9bf
  41df66:	jge    0x41df60
  41df68:	xor    al,0x65
  41df6a:	loop   0x41dfb4
  41df6c:	pop    eax
  41df6d:	rol    DWORD PTR [edi],cl
  41df6f:	jg     0x41dfa4
  41df71:	addr16 dec eax
  41df73:	push   esi
  41df74:	adc    dl,BYTE PTR [edx]
  41df76:	popa   
  41df77:	push   ecx
  41df78:	arpl   WORD PTR ss:[ebx-0x5e],di
  41df7c:	add    BYTE PTR [edi+0x1],ah
  41df7f:	mov    bl,0x1c
  41df81:	call   0x2a95:0x8c24a51
  41df88:	push   ebx
  41df89:	sub    bh,BYTE PTR [ebx]
  41df8b:	cs sbb esp,0xffffffee
  41df8f:	ins    DWORD PTR es:[edi],dx
  41df90:	addr16 inc ebp
  41df92:	arpl   WORD PTR [edi],di
  41df94:	xor    DWORD PTR [edx],eax
  41df96:	push   cs
  41df97:	and    ebx,ecx
  41df99:	rol    DWORD PTR [eax+0x1c],1
  41df9c:	mul    DWORD PTR [eax]
  41df9e:	add    ebx,edx
  41dfa0:	sahf   
  41dfa1:	xchg   ecx,eax
  41dfa2:	in     al,dx
  41dfa3:	cmp    al,BYTE PTR ds:0xbb8109c6
  41dfa9:	adc    DWORD PTR [esi+0x29],esi
  41dfac:	push   es
  41dfad:	bound  eax,QWORD PTR [edx]
  41dfaf:	or     eax,0xab8a7c8a
  41dfb4:	inc    ecx
  41dfb5:	mov    edi,0xbe4f531b
  41dfba:	test   BYTE PTR [ebp+0x4a],cl
  41dfbd:	and    al,0x5
  41dfbf:	loopne 0x41e022
  41dfc1:	inc    edi
  41dfc2:	push   es
  41dfc3:	mov    eax,ss:0x97c2910f
  41dfc9:	sti    
  41dfca:	test   edi,edi
  41dfcc:	push   ecx
  41dfcd:	mov    al,0xb1
  41dfcf:	add    BYTE PTR [edi],al
  41dfd1:	sahf   
  41dfd2:	push   edx
  41dfd3:	pop    esp
  41dfd4:	cmp    dh,BYTE PTR [esi+ebp*2-0x673c4d60]
  41dfdb:	in     eax,0xeb
  41dfdd:	jne    0x41e013
  41dfdf:	pop    ds
  41dfe0:	leave  
  41dfe1:	push   cs
  41dfe2:	iret   
  41dfe3:	mov    bh,0xc8
  41dfe5:	xchg   ecx,eax
  41dfe6:	out    dx,eax
  41dfe7:	sbb    DWORD PTR [edx],ecx
  41dfe9:	pop    ecx
  41dfea:	xchg   edi,ebp
  41dfec:	push   eax
  41dfed:	mov    edx,0x4d53355a
  41dff2:	leave  
  41dff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dff4:	pop    esi
  41dff5:	push   ss
  41dff6:	add    eax,0x3286f9ea
  41dffb:	jo     0x41dfda
  41dffd:	shl    BYTE PTR [ebx+0x1b6b7988],0x14
  41e004:	in     eax,0x1
  41e006:	jp     0x41e007
  41e008:	(bad)  
  41e009:	and    ebp,DWORD PTR [eax-0x76]
  41e00c:	stos   DWORD PTR es:[edi],eax
  41e00d:	mov    esi,0x31651e54
  41e012:	pop    ds
  41e013:	jge    0x41dfae
  41e015:	jo     0x41e095
  41e017:	mov    esi,ebp
  41e019:	pop    eax
  41e01a:	rcr    DWORD PTR [edi-0x32],0xf9
  41e01e:	in     eax,dx
  41e01f:	cmp    BYTE PTR [ecx-0x5a],0xb1
  41e023:	pop    edi
  41e024:	data16 jo 0x41dfeb
  41e027:	adc    bl,BYTE PTR [ecx+0x7efb4be7]
  41e02d:	add    DWORD PTR [eax+0x1b09d281],esi
  41e033:	dec    esp
  41e034:	jbe    0x41e05b
  41e036:	stc    
  41e037:	mov    ds:0x19e3e9ee,al
  41e03c:	ror    BYTE PTR [edi],cl
  41e03e:	pushf  
  41e03f:	push   0x98963523
  41e044:	jnp    0x41e061
  41e046:	mov    ds:0xf64456cb,eax
  41e04b:	pop    ds
  41e04c:	push   ss
  41e04d:	and    BYTE PTR [eax],ch
  41e04f:	mov    ds:0xfd32a073,eax
  41e054:	mov    DWORD PTR [esi+0x4c],edx
  41e057:	scas   al,BYTE PTR es:[edi]
  41e058:	cwde   
  41e059:	mov    ecx,0xfe35fee6
  41e05e:	jno    0x41e048
  41e060:	jmp    FWORD PTR ds:0xb0718728
  41e066:	fisttp WORD PTR [esi-0x4caabf9f]
  41e06c:	cli    
  41e06d:	pop    ds
  41e06e:	nop
  41e06f:	jae    0x41e02d
  41e071:	adc    BYTE PTR [ebp-0xd],0xd4
  41e075:	sbb    al,0x5d
  41e077:	test   al,0xb3
  41e079:	mov    dh,0x29
  41e07b:	or     DWORD PTR [ebp-0x17],ebp
  41e07e:	jns    0x41e0b5
  41e080:	cwde   
  41e081:	popf   
  41e082:	inc    esi
  41e083:	pop    ss
  41e084:	or     al,0xf3
  41e086:	mov    al,0x68
  41e088:	into   
  41e089:	or     al,0xb4
  41e08b:	mov    ah,0x53
  41e08d:	and    edx,DWORD PTR [esi]
  41e08f:	xchg   edi,eax
  41e090:	jae    0x41e065
  41e092:	fld    TBYTE PTR [ecx-0x47928a21]
  41e098:	mov    eax,0x708dd6de
  41e09d:	mov    cl,0x12
  41e09f:	fild   WORD PTR [esi+0x35e372e9]
  41e0a5:	cld    
  41e0a6:	lock fcom QWORD PTR [ebx+0x54]
  41e0aa:	pop    ebx
  41e0ab:	and    eax,0x8fad8671
  41e0b0:	adc    ebx,DWORD PTR [ebx+0x2efc1a5a]
  41e0b6:	mov    WORD PTR [esi],ss
  41e0b8:	xlat   BYTE PTR ds:[ebx]
  41e0b9:	mov    ?,ebp
  41e0bb:	xchg   edi,eax
  41e0bc:	test   eax,0xc57997d3
  41e0c1:	ins    BYTE PTR es:[edi],dx
  41e0c2:	xchg   ecx,eax
  41e0c3:	call   DWORD PTR [edx-0x6b]
  41e0c6:	and    al,0x1f
  41e0c8:	dec    eax
  41e0c9:	test   DWORD PTR [edx],eax
  41e0cb:	pop    ebx
  41e0cc:	xor    edi,DWORD PTR [ebp*1+0x70e4ae12]
  41e0d3:	push   ecx
  41e0d4:	jge    0x41e081
  41e0d6:	inc    ecx
  41e0d7:	pop    ss
  41e0d8:	xor    eax,0xd67d9619
  41e0dd:	(bad)  
  41e0de:	repz jb 0x41e07e
  41e0e1:	add    esp,DWORD PTR [ecx-0x34]
  41e0e4:	mov    dh,dh
  41e0e6:	sbb    bl,BYTE PTR [ecx+eax*4]
  41e0e9:	lods   al,BYTE PTR ds:[esi]
  41e0ea:	loopne 0x41e0b9
  41e0ec:	sbb    BYTE PTR [edi],0xdb
  41e0ef:	push   edx
  41e0f0:	sbb    ch,bh
  41e0f2:	aaa    
  41e0f3:	cli    
  41e0f4:	jo     0x41e0db
  41e0f6:	xchg   edi,eax
  41e0f7:	mov    esp,0xaa55c8fc
  41e0fc:	pop    ebx
  41e0fd:	sub    edi,0xffffffcc
  41e100:	es sahf 
  41e102:	cmp    ch,BYTE PTR [ebp-0x340f85ea]
  41e108:	dec    esp
  41e109:	les    ebx,FWORD PTR [edi+0x47]
  41e10c:	loop   0x41e17a
  41e10e:	inc    ebp
  41e10f:	(bad)  
  41e110:	(bad)  
  41e111:	shr    BYTE PTR [edx],1
  41e113:	xor    BYTE PTR [eax+eax*2-0x530b5e27],dh
  41e11a:	mov    edx,0x343c238c
  41e11f:	(bad)  
  41e120:	cwde   
  41e121:	inc    ecx
  41e122:	xchg   esi,eax
  41e123:	(bad)
  41e126:	das    
  41e127:	out    0x3e,al
  41e129:	les    edx,FWORD PTR [edi+0x13]
  41e12c:	cwde   
  41e12d:	je     0x41e0f8
  41e12f:	mov    dl,0x5e
  41e131:	xchg   ebx,eax
  41e132:	mov    eax,ds:0xd89089ec
  41e137:	cld    
  41e138:	mov    ds:0x5a1a453b,al
  41e13d:	dec    eax
  41e13e:	std    
  41e13f:	outs   dx,BYTE PTR ds:[esi]
  41e140:	es push ds
  41e142:	xchg   BYTE PTR ds:[ebx+eax*4-0x7587c1a7],dh
  41e14a:	mov    ebp,DWORD PTR ds:[edx]
  41e14d:	dec    esi
  41e14e:	or     al,0xf9
  41e150:	push   edi
  41e151:	outs   dx,BYTE PTR ds:[esi]
  41e152:	(bad)  
  41e153:	jmp    0x5570:0x4206ec16
  41e15a:	setnp  BYTE PTR [esi]
  41e15d:	xchg   DWORD PTR [bp+si-0x47],ebp
  41e161:	xchg   esp,eax
  41e162:	xlat   BYTE PTR ds:[ebx]
  41e163:	lods   eax,DWORD PTR ds:[esi]
  41e164:	lods   al,BYTE PTR ds:[esi]
  41e165:	mov    DWORD PTR [edx],edi
  41e167:	bnd jp 0x41e0ec
  41e16a:	fisub  DWORD PTR [edx-0x41181505]
  41e170:	iret   
  41e171:	sub    BYTE PTR [ebx+eiz*8+0x16676469],dh
  41e178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e179:	mov    dh,0x4f
  41e17b:	jb     0x41e1a2
  41e17d:	hlt    
  41e17e:	lock fistp QWORD PTR [ebp+0x623f01c3]
  41e185:	in     al,0x19
  41e187:	push   ecx
  41e188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e189:	data16 data16 cmp BYTE PTR [edi],bl
  41e18d:	cld    
  41e18e:	mov    ah,0x28
  41e190:	and    eax,0xea5954b5
  41e195:	shr    dl,1
  41e197:	or     BYTE PTR [edx-0x3fcbeef5],bl
  41e19d:	rol    edi,cl
  41e19f:	nop
  41e1a0:	into   
  41e1a1:	pop    ebp
  41e1a2:	ror    ecx,1
  41e1a4:	cmp    cl,al
  41e1a6:	push   cs
  41e1a7:	inc    esi
  41e1a8:	inc    eax
  41e1a9:	mov    ebp,0x52f2dcbb
  41e1ae:	xchg   ecx,eax
  41e1af:	adc    bh,BYTE PTR [esi+0x35e2e591]
  41e1b5:	popa   
  41e1b6:	mov    ah,bl
  41e1b8:	popf   
  41e1b9:	stos   DWORD PTR es:[edi],eax
  41e1ba:	cmp    BYTE PTR [ebx-0x66],al
  41e1bd:	dec    ecx
  41e1be:	xchg   esp,eax
  41e1bf:	or     ebp,ebp
  41e1c1:	jmp    0x5480e162
  41e1c6:	xchg   ebp,eax
  41e1c7:	mov    ecx,0x151d5981
  41e1cc:	or     BYTE PTR ds:[ecx+0x5abffd09],dl
  41e1d3:	loop   0x41e1d3
  41e1d5:	dec    ebp
  41e1d6:	fs shl al,0x2d
  41e1da:	jb     0x41e19b
  41e1dc:	mov    al,ds:0x3028ce48
  41e1e1:	ret    
  41e1e2:	cmp    eax,0x1354376f
  41e1e7:	dec    esi
  41e1e8:	pop    es
  41e1e9:	dec    ebp
  41e1ea:	fcom   QWORD PTR [ebx+0xf]
  41e1ed:	xor    BYTE PTR [edx+0x26],dh
  41e1f0:	cld    
  41e1f1:	or     ecx,eax
  41e1f3:	mov    ebp,?
  41e1f5:	ja     0x41e17b
  41e1f7:	mov    esp,0xc8cf28
  41e1fc:	mov    ah,0x32
  41e1fe:	sub    ebp,edx
  41e200:	xor    BYTE PTR [esi],ch
  41e202:	stos   DWORD PTR es:[edi],eax
  41e203:	mov    esp,0x879b80d8
  41e208:	jg     0x41e199
  41e20a:	adc    BYTE PTR [esi+0x37],dh
  41e20d:	enter  0xd04c,0x56
  41e211:	bound  edi,QWORD PTR ds:0x5176c5ab
  41e217:	out    0xb0,al
  41e219:	aad    0x8a
  41e21b:	out    dx,al
  41e21c:	mov    ?,WORD PTR [edi+0xd]
  41e21f:	cmp    al,0x40
  41e221:	xchg   ebp,eax
  41e222:	push   DWORD PTR [ecx]
  41e224:	dec    esp
  41e225:	jnp    0x41e29c
  41e227:	aam    0xad
  41e229:	iret   
  41e22a:	push   esp
  41e22b:	jmp    0x41e259
  41e22d:	sbb    bl,al
  41e22f:	xor    eax,0x90e716d4
  41e234:	inc    ecx
  41e235:	mov    ds:0x700ec5c5,al
  41e23a:	scas   al,BYTE PTR es:[edi]
  41e23b:	mov    edx,0x6c9b4d51
  41e240:	dec    edi
  41e241:	test   eax,0x8a225673
  41e246:	mov    ch,0x52
  41e248:	out    0xc9,al
  41e24a:	lea    ebx,[esi-0x10]
  41e24d:	mov    BYTE PTR [edx],bl
  41e24f:	inc    ebp
  41e250:	ret    
  41e251:	push   esp
  41e252:	cwde   
  41e253:	push   esp
  41e254:	scas   al,BYTE PTR es:[edi]
  41e255:	into   
  41e256:	and    BYTE PTR [ebx+0x78],0x39
  41e25a:	fcmove st,st(5)
  41e25c:	xchg   edx,eax
  41e25d:	jbe    0x41e2c0
  41e25f:	and    bh,bl
  41e261:	(bad)  
  41e263:	sub    al,0xf
  41e265:	call   0xd4a3:0xa156a3a1
  41e26c:	and    BYTE PTR [ebp+0x6f],bl
  41e26f:	imul   ebp,DWORD PTR ds:0x840d727,0xe5345322
  41e279:	jo     0x41e23d
  41e27b:	inc    ebx
  41e27c:	lods   al,BYTE PTR ds:[esi]
  41e27d:	in     eax,0x54
  41e27f:	or     ebx,DWORD PTR [edi-0x44]
  41e282:	into   
  41e283:	mov    bh,0xcb
  41e285:	int    0xb6
  41e287:	mov    edi,DWORD PTR [ecx+ebx*4-0x70]
  41e28b:	idiv   DWORD PTR [edx]
  41e28d:	sbb    ah,BYTE PTR [edi+0x2e]
  41e290:	pusha  
  41e291:	pop    ecx
  41e292:	and    eax,0x4c91f6de
  41e297:	(bad)  [esi]
  41e299:	rcl    ecx,cl
  41e29b:	or     al,BYTE PTR [eax-0x71]
  41e29e:	sbb    BYTE PTR [esi+0x5],ah
  41e2a1:	sti    
  41e2a2:	popa   
  41e2a3:	repz xchg esp,eax
  41e2a5:	xor    dh,al
  41e2a7:	pop    edi
  41e2a8:	cs xchg ebx,eax
  41e2aa:	pop    ss
  41e2ab:	in     eax,0x8a
  41e2ad:	pop    ebx
  41e2ae:	sbb    DWORD PTR [esi-0x4e],ecx
  41e2b1:	and    ebp,DWORD PTR [ebp+eiz*2-0x2a99a7e4]
  41e2b8:	cmp    BYTE PTR [ebp-0x7b],al
  41e2bb:	adc    dl,ah
  41e2bd:	cdq    
  41e2be:	push   ds
  41e2bf:	dec    edi
  41e2c0:	shl    DWORD PTR ds:0xf9221690,0xdd
  41e2c7:	cdq    
  41e2c8:	mov    ah,0xf0
  41e2ca:	pop    eax
  41e2cb:	mov    ds:0xca505df2,al
  41e2d0:	ficomp WORD PTR [ecx]
  41e2d2:	loopne 0x41e326
  41e2d4:	jp     0x41e280
  41e2d6:	add    BYTE PTR ds:0xf7240959,ah
  41e2dc:	mov    eax,0x9908f6aa
  41e2e1:	jnp    0x41e2d5
  41e2e3:	or     eax,0xf7b1bb54
  41e2e8:	pop    ss
  41e2e9:	icebp  
  41e2ea:	and    eax,0x5a3b4455
  41e2ef:	dec    edx
  41e2f0:	add    BYTE PTR [edx],ch
  41e2f2:	into   
  41e2f3:	cmp    BYTE PTR [edx+0x2ebc0cba],bl
  41e2f9:	fbld   TBYTE PTR [ecx-0x1f]
  41e2fc:	aam    0x4c
  41e2fe:	mov    eax,0x3b2f3de8
  41e303:	repz leave 
  41e305:	xchg   edx,eax
  41e306:	shr    DWORD PTR [ecx],0xaa
  41e309:	adc    dl,0xbc
  41e30c:	scas   eax,DWORD PTR es:[edi]
  41e30d:	rcr    dh,cl
  41e30f:	sahf   
  41e310:	cld    
  41e311:	push   ss
  41e312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e313:	dec    esp
  41e314:	pop    es
  41e315:	add    DWORD PTR [ebx-0x62],0xffffffc5
  41e319:	ds inc ecx
  41e31b:	(bad)  
  41e31d:	mov    es,edx
  41e31f:	(bad)  
  41e320:	icebp  
  41e321:	mov    dl,0x43
  41e323:	nop
  41e324:	push   ebx
  41e325:	loopne 0x41e2f3
  41e327:	hlt    
  41e328:	fist   DWORD PTR [edx+0x2ce00da2]
  41e32e:	dec    edx
  41e32f:	(bad)  
  41e330:	fs cld 
  41e332:	adc    bh,BYTE PTR [esp+edi*1-0x35]
  41e336:	xor    eax,ebp
  41e338:	fadd   QWORD PTR [esi-0x65]
  41e33b:	or     eax,0x1ea66bba
  41e340:	xchg   esp,eax
  41e341:	xor    eax,0xc7869b08
  41e346:	mov    ebx,0x9aba0ad8
  41e34b:	push   esp
  41e34c:	pop    edx
  41e34d:	cld    
  41e34e:	pop    esi
  41e34f:	ins    DWORD PTR es:[edi],dx
  41e350:	sub    DWORD PTR [ebx],ebx
  41e352:	xor    edx,ebx
  41e354:	mov    dl,0xcb
  41e356:	mov    ds:0xb044468c,al
  41e35b:	sbb    ch,BYTE PTR [ecx+edx*4-0x112b5cad]
  41e362:	aam    0xd6
  41e364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e365:	in     al,dx
  41e366:	xchg   esi,eax
  41e367:	outs   dx,BYTE PTR ds:[esi]
  41e368:	mov    cl,0x95
  41e36a:	aas    
  41e36b:	sub    eax,DWORD PTR [ecx-0x338f42df]
  41e371:	addr16 xchg edx,eax
  41e373:	fbstp  TBYTE PTR [edi+0x3e]
  41e376:	idiv   DWORD PTR [edi]
  41e378:	adc    ebx,ebx
  41e37a:	mov    bh,0xf0
  41e37c:	fiadd  WORD PTR [ecx]
  41e37e:	push   eax
  41e37f:	inc    edx
  41e380:	and    ebx,DWORD PTR [ecx+0x2]
  41e383:	fcomp  DWORD PTR [edi+0xc1c7c0b]
  41e389:	or     dh,BYTE PTR [ecx-0x63]
  41e38c:	dec    DWORD PTR ds:0x778945f8
  41e392:	or     al,0x42
  41e394:	adc    eax,0x4e51b6b1
  41e399:	out    dx,al
  41e39a:	lods   eax,DWORD PTR ds:[esi]
  41e39b:	push   edi
  41e39c:	repz push es
  41e39e:	sar    bh,cl
  41e3a0:	mov    esi,0x16589739
  41e3a5:	cmp    edx,eax
  41e3a7:	in     eax,0xb3
  41e3a9:	das    
  41e3aa:	mov    eax,0xdaf893c7
  41e3af:	bound  ecx,QWORD PTR [edi-0x13982c86]
  41e3b5:	out    0xac,eax
  41e3b7:	in     al,dx
  41e3b8:	adc    DWORD PTR [edx+0x40],edx
  41e3bb:	dec    ecx
  41e3bc:	jae    0x41e39f
  41e3be:	int3   
  41e3bf:	(bad)  
  41e3c1:	lods   al,BYTE PTR ds:[esi]
  41e3c2:	sub    eax,0xd5ba6e55
  41e3c7:	jno    0x41e41e
  41e3c9:	push   0x6b
  41e3cb:	aaa    
  41e3cc:	pshufw mm4,mm6,0xa3
  41e3d0:	jmp    0x41e3c2
  41e3d2:	cli    
  41e3d3:	mov    ah,0x2f
  41e3d5:	push   esi
  41e3d6:	push   edx
  41e3d7:	test   al,0x8b
  41e3d9:	adc    esp,DWORD PTR [edx]
  41e3db:	data16 jmp 0x41e3f7
  41e3de:	fidivr WORD PTR [edi]
  41e3e0:	scas   al,BYTE PTR es:[edi]
  41e3e1:	aaa    
  41e3e2:	xchg   edx,eax
  41e3e3:	scas   eax,DWORD PTR es:[edi]
  41e3e4:	xchg   DWORD PTR [edx-0x76e8ba49],edx
  41e3ea:	cld    
  41e3eb:	test   DWORD PTR [eax+0x7fb5],eax
  41e3f1:	add    BYTE PTR [eax-0x7de0740],al
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0xc9aafc94
  41e400:	ror    DWORD PTR [eax+0x45],0x5f
  41e404:	add    DWORD PTR [eax],eax
  41e406:	cmc    
  41e407:	add    al,0x0
  41e409:	add    BYTE PTR [esp+eax*2-0x6],dh
  41e40d:	mov    DWORD PTR [ebx-0x37d9d0c1],eax
  41e413:	mov    ?,WORD PTR [edi]
  41e415:	aas    
  41e416:	mov    dh,BYTE PTR [esi-0x1e]
  41e419:	mov    esp,0x7b059acc
  41e41e:	pop    edi
  41e41f:	loope  0x41e406
  41e421:	sbb    al,0x86
  41e423:	sbb    eax,0x97da7a1c
  41e428:	xlat   BYTE PTR ds:[ebx]
  41e429:	inc    ebx
  41e42a:	push   cs
  41e42b:	test   eax,0x17f7bddb
  41e430:	inc    esi
  41e431:	pop    edi
  41e432:	sbb    eax,0x402e9ae2
  41e437:	jmp    0x44b8:0x629ec402
  41e43e:	mov    bl,0x5
  41e440:	inc    eax
  41e441:	icebp  
  41e442:	scas   al,BYTE PTR es:[edi]
  41e443:	in     eax,dx
  41e444:	ja     0x41e3ef
  41e446:	xor    DWORD PTR [esi-0x4b],esp
  41e449:	jl     0x41e43b
  41e44b:	and    eax,0x7a83ecce
  41e450:	js     0x41e458
  41e452:	and    bl,bh
  41e454:	test   BYTE PTR [edi-0x7f],cl
  41e457:	mov    eax,es:0xd45da8bd
  41e45d:	hlt    
  41e45e:	pop    ebp
  41e45f:	or     ebx,eax
  41e461:	test   DWORD PTR [edx],esi
  41e463:	jle    0x41e46e
  41e465:	(bad)  
  41e466:	in     al,dx
  41e467:	lods   al,BYTE PTR ds:[esi]
  41e468:	sub    al,0x45
  41e46a:	push   edx
  41e46b:	out    0xc,eax
  41e46d:	stos   BYTE PTR es:[edi],al
  41e46e:	push   edx
  41e46f:	test   eax,0x2b4c8757
  41e474:	sbb    DWORD PTR [eax+0x4745dfe3],esi
  41e47a:	inc    eax
  41e47b:	push   ecx
  41e47c:	cmp    DWORD PTR [eax-0x209f0d95],ebx
  41e482:	mov    al,0x92
  41e484:	mov    ds:0x1a0eb037,eax
  41e489:	stos   BYTE PTR es:[edi],al
  41e48a:	test   eax,0xf4b3d305
  41e48f:	inc    esp
  41e490:	pop    edi
  41e491:	jnp    0x41e45d
  41e493:	adc    esp,DWORD PTR [ebx]
  41e495:	sub    cl,BYTE PTR [ebx]
  41e497:	inc    esp
  41e498:	iret   
  41e499:	sahf   
  41e49a:	inc    esp
  41e49b:	inc    esp
  41e49c:	pop    esi
  41e49d:	leave  
  41e49e:	pop    ebx
  41e49f:	data16 and al,0xca
  41e4a2:	inc    ecx
  41e4a3:	and    bl,BYTE PTR ds:0x644a6f0c
  41e4a9:	xor    DWORD PTR [eax-0x43],ebp
  41e4ac:	sbb    BYTE PTR [ebp+eax*2+0x1301cd0f],ah
  41e4b3:	hlt    
  41e4b4:	rol    BYTE PTR [edi-0x779b4ee0],1
  41e4ba:	adc    DWORD PTR [ebp+0x54c6d139],edi
  41e4c0:	mov    edi,0x7db165c1
  41e4c5:	call   0xdb60:0x11bf7eef
  41e4cc:	jae    0x41e532
  41e4ce:	(bad)  
  41e4cf:	cmp    DWORD PTR [ebp-0x11a441],ebp
  41e4d5:	out    dx,al
  41e4d6:	adc    edi,DWORD PTR [esi+eax*1]
  41e4d9:	xchg   edx,eax
  41e4da:	add    ch,BYTE PTR [ebx]
  41e4dc:	scas   al,BYTE PTR es:[edi]
  41e4dd:	mov    edx,0xfc78bd1
  41e4e2:	fiadd  WORD PTR [ecx+0x5251266f]
  41e4e8:	iret   
  41e4e9:	sub    bh,BYTE PTR [ebx-0x1a0c1519]
  41e4ef:	cmp    dl,BYTE PTR [esp+ecx*2-0x3a]
  41e4f3:	out    dx,al
  41e4f4:	out    0xf9,al
  41e4f6:	mov    dh,0xdd
  41e4f8:	sbb    DWORD PTR fs:[eax-0x1b],edi
  41e4fc:	(bad)  
  41e4fd:	push   edx
  41e4fe:	dec    esp
  41e4ff:	shl    DWORD PTR [edi],cl
  41e501:	pop    esi
  41e502:	aas    
  41e503:	cdq    
  41e504:	dec    eax
  41e505:	jmp    0x40b70f08
  41e50a:	ret    
  41e50b:	sti    
  41e50c:	and    BYTE PTR [edx],0xa5
  41e50f:	in     al,0xd
  41e511:	inc    ebx
  41e512:	jmp    0x7268:0xea1a35cc
  41e519:	adc    esi,DWORD PTR [esi+edi*2+0x19f4ddaa]
  41e520:	xor    al,0x47
  41e522:	add    al,0xc9
  41e524:	das    
  41e525:	cmp    BYTE PTR [ebx],ch
  41e527:	jb     0x41e4a9
  41e529:	jmp    0xedb0:0x10eddc3d
  41e530:	inc    esi
  41e531:	out    0x6a,al
  41e533:	std    
  41e534:	loop   0x41e58f
  41e536:	pushf  
  41e537:	xchg   ebx,eax
  41e539:	mov    ch,BYTE PTR ds:0x12bf9cbf
  41e53f:	pop    eax
  41e540:	xchg   ebp,eax
  41e541:	push   esi
  41e542:	dec    edi
  41e543:	std    
  41e544:	xor    eax,0x8e3749a9
  41e549:	and    DWORD PTR [ebp+0x5a67cfb2],0xd74ea5a9
  41e553:	mov    ah,0xf1
  41e555:	pop    edx
  41e556:	add    eax,DWORD PTR [edx]
  41e558:	push   ecx
  41e559:	outs   dx,DWORD PTR ds:[esi]
  41e55a:	arpl   WORD PTR [esi+0x2f],cx
  41e55d:	stc    
  41e55e:	sbb    al,0xc6
  41e560:	aam    0x3d
  41e562:	call   0xeced182
  41e567:	test   BYTE PTR [ecx+eiz*1],ch
  41e56a:	sti    
  41e56b:	ret    
  41e56c:	mov    al,0x21
  41e56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e56f:	add    edx,ebp
  41e571:	lods   al,BYTE PTR ds:[esi]
  41e572:	fbld   TBYTE PTR [edx+0x66]
  41e575:	ja     0x41e51e
  41e577:	aas    
  41e578:	adc    cl,0x72
  41e57b:	das    
  41e57c:	pop    eax
  41e57d:	outs   dx,BYTE PTR ds:[esi]
  41e57e:	ss mov edx,0xfd471e5c
  41e584:	iret   
  41e585:	(bad)  
  41e586:	cld    
  41e587:	cli    
  41e588:	mov    ds:0x88c76e97,eax
  41e58d:	pop    esi
  41e58e:	pop    edx
  41e58f:	es cli 
  41e591:	les    eax,FWORD PTR [edi-0x4209a697]
  41e597:	mov    dl,0xe6
  41e599:	or     ecx,DWORD PTR [eax+0x2d]
  41e59c:	or     BYTE PTR [ebx+edx*1+0x54],dh
  41e5a0:	retf   0xd0b1
  41e5a3:	jl     0x41e599
  41e5a5:	mov    fs,WORD PTR [ebp+0x6caf4bad]
  41e5ab:	imul   eax,DWORD PTR [ecx],0x7
  41e5ae:	and    edx,esp
  41e5b0:	popf   
  41e5b1:	jmp    0x41e5b6
  41e5b3:	loope  0x41e60b
  41e5b5:	mov    ah,0x41
  41e5b7:	addr16 and bl,dl
  41e5ba:	cmp    al,BYTE PTR [eax-0x5a7aca59]
  41e5c0:	or     edi,0x2c80f5f6
  41e5c6:	div    DWORD PTR [ebx+0x2ffe66a4]
  41e5cc:	or     BYTE PTR [esi],0x95
  41e5cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5d0:	xchg   ebx,eax
  41e5d1:	mov    eax,?
  41e5d3:	mov    eax,0x812fff19
  41e5d8:	dec    edx
  41e5d9:	cdq    
  41e5da:	add    al,BYTE PTR [eax+edi*1]
  41e5dd:	add    DWORD PTR [edx],ebp
  41e5df:	xor    DWORD PTR [edx-0x6d],eax
  41e5e2:	or     eax,0x9f44654f
  41e5e7:	rol    esp,cl
  41e5e9:	jecxz  0x41e582
  41e5eb:	clc    
  41e5ec:	pop    ss
  41e5ed:	sbb    ebp,0xfdf56969
  41e5f3:	(bad)  
  41e5f4:	sub    DWORD PTR [ebp+0x44],ecx
  41e5f7:	or     BYTE PTR [ebp-0x119278f4],dh
  41e5fd:	push   esi
  41e5fe:	sub    DWORD PTR [ecx+0x4d],0xdab711d2
  41e605:	or     BYTE PTR [edi+0x4252df89],al
  41e60b:	rcr    DWORD PTR [ebx+0x27],1
  41e60e:	sub    bl,bl
  41e610:	mov    bl,0xa0
  41e612:	jae    0x41e660
  41e614:	jge    0x41e5ae
  41e616:	dec    edi
  41e617:	sbb    ah,cl
  41e619:	xchg   esi,eax
  41e61a:	adc    dh,BYTE PTR [ebp+0xb]
  41e61d:	add    al,BYTE PTR [ebp-0x3099b2fc]
  41e623:	inc    esp
  41e624:	js     0x41e692
  41e626:	addr16 xor al,0xa2
  41e629:	mov    dh,0x47
  41e62b:	loopne 0x41e648
  41e62d:	retf   
  41e62e:	aaa    
  41e62f:	cmp    al,0x57
  41e631:	test   DWORD PTR [edx+0x5bc43909],edx
  41e637:	lahf   
  41e638:	xor    ah,0xff
  41e63b:	inc    ecx
  41e63c:	pop    edx
  41e63d:	cmc    
  41e63e:	cmp    eax,0x4a543cf8
  41e643:	push   cs
  41e644:	fisttp WORD PTR [ebx-0x1d]
  41e647:	mov    cl,0x4b
  41e649:	imul   ecx,DWORD PTR [ecx-0xfbec546],0x7c
  41e650:	inc    esi
  41e651:	push   esp
  41e652:	xchg   ebp,eax
  41e653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e654:	jmp    0x74a5:0x5bf47314
  41e65b:	jne    0x41e67f
  41e65d:	push   edi
  41e65e:	mov    ebx,0xf2d353ce
  41e663:	mov    bl,0xab
  41e665:	xor    BYTE PTR [ebx-0x3],dh
  41e668:	jp     0x41e646
  41e66a:	or     BYTE PTR [edx+0x6],ah
  41e66d:	jge    0x41e6c3
  41e66f:	out    dx,eax
  41e670:	aas    
  41e671:	call   0x8a5c6527
  41e676:	inc    edx
  41e677:	repz out dx,al
  41e679:	xchg   DWORD PTR [ecx+0xf0be68a],edx
  41e67f:	ins    DWORD PTR es:[edi],dx
  41e680:	add    esi,DWORD PTR [ecx-0xdae219c]
  41e686:	out    dx,al
  41e687:	mov    dh,0x14
  41e689:	(bad)  
  41e68b:	cmp    eax,0x72626812
  41e690:	xor    eax,0x2b
  41e693:	in     eax,dx
  41e694:	push   ebp
  41e695:	pop    esp
  41e696:	adc    bh,BYTE PTR [eax]
  41e698:	in     eax,dx
  41e699:	jl     0x41e706
  41e69b:	sbb    ah,bh
  41e69d:	data16 mov al,0x9b
  41e6a0:	out    dx,al
  41e6a1:	mov    edi,0xac4d79c0
  41e6a6:	cs lock loopne 0x41e6ef
  41e6aa:	lods   al,BYTE PTR ds:[esi]
  41e6ab:	push   ebx
  41e6ac:	dec    eax
  41e6ad:	imul   ebx,edx,0x51f1d2b0
  41e6b3:	sahf   
  41e6b4:	jmp    0x378:0x5be9d0f6
  41e6bb:	pop    edx
  41e6bc:	jle    0x41e726
  41e6be:	aaa    
  41e6bf:	outs   dx,DWORD PTR ds:[esi]
  41e6c0:	test   bh,bh
  41e6c2:	stos   DWORD PTR es:[edi],eax
  41e6c3:	adc    eax,DWORD PTR [edi+0x34]
  41e6c6:	pusha  
  41e6c7:	gs pop ss
  41e6c9:	ds mov esi,0xbe90faf1
  41e6cf:	ror    DWORD PTR [esi-0x40],1
  41e6d2:	cmp    eax,0xc3e19d8c
  41e6d7:	or     BYTE PTR [ecx-0x141413d3],ch
  41e6dd:	aaa    
  41e6de:	cmp    BYTE PTR [edx-0x28],0x2e
  41e6e2:	loope  0x41e69a
  41e6e4:	dec    ebx
  41e6e5:	mov    cl,0xd8
  41e6e7:	les    ebp,FWORD PTR [eax]
  41e6e9:	mov    DWORD PTR [edi+0x79],esp
  41e6ec:	mov    bl,dh
  41e6ee:	and    DWORD PTR [edx],0x32
  41e6f1:	add    ecx,DWORD PTR [ebx-0x7403af36]
  41e6f7:	sub    ah,0x8d
  41e6fa:	add    BYTE PTR [ebx-0x221ca983],0xe9
  41e701:	out    0x35,al
  41e703:	sbb    eax,0x4b8a1544
  41e708:	dec    esi
  41e709:	stc    
  41e70a:	out    dx,eax
  41e70b:	add    bh,dl
  41e70d:	jmp    0xe3409b8f
  41e712:	clc    
  41e713:	(bad)
  41e717:	xor    al,0xa0
  41e719:	and    al,BYTE PTR [eax]
  41e71b:	rol    bh,1
  41e71d:	pusha  
  41e71e:	loope  0x41e6d2
  41e720:	sub    ah,BYTE PTR [ebx+0xef8704b]
  41e726:	fcomp  QWORD PTR [ebx+esi*4+0x5a]
  41e72a:	je     0x41e7a2
  41e72c:	(bad)  
  41e72d:	add    edi,DWORD PTR [edx+0x2f]
  41e730:	jmp    0x1c3a3705
  41e735:	in     eax,0x20
  41e737:	rcr    BYTE PTR [edx+0x2922a417],cl
  41e73d:	mov    eax,0x191115d
  41e742:	out    0x70,al
  41e744:	adc    edi,DWORD PTR [ebp+0x21dc2983]
  41e74a:	pusha  
  41e74b:	mov    dl,0x95
  41e74d:	pop    ecx
  41e74e:	sbb    eax,0x99faadc
  41e753:	push   esp
  41e754:	sub    cl,0x27
  41e757:	jo     0x41e79a
  41e759:	xchg   BYTE PTR [ebx+ecx*1+0x54e6dd5e],dh
  41e760:	mov    ebx,0xf5c95338
  41e765:	hlt    
  41e766:	cmc    
  41e767:	fsub   QWORD PTR [ecx-0x6f]
  41e76a:	jg     0x41e76a
  41e76c:	adc    al,0x78
  41e76e:	inc    esi
  41e76f:	jne    0x41e7a0
  41e771:	out    0x1,al
  41e773:	pop    edi
  41e774:	jnp    0x41e745
  41e776:	pop    es
  41e777:	test   eax,0xfdede13e
  41e77c:	mov    ebx,0x9737bf7c
  41e781:	or     ch,BYTE PTR [edi]
  41e783:	ror    BYTE PTR [eax+edx*1-0x26],cl
  41e787:	xor    eax,DWORD PTR [edx-0x65]
  41e78a:	scas   al,BYTE PTR es:[edi]
  41e78b:	jg     0xc1fba66a
  41e791:	adc    esp,edi
  41e793:	dec    ecx
  41e794:	sub    BYTE PTR [ecx+0x28a80529],al
  41e79a:	adc    al,0xea
  41e79c:	xchg   ebx,eax
  41e79d:	icebp  
  41e79e:	dec    ebp
  41e79f:	and    DWORD PTR [edx-0x7b47960d],edi
  41e7a5:	bound  ebp,QWORD PTR [ebx-0x76f2f508]
  41e7ab:	pop    ds
  41e7ac:	in     eax,0x30
  41e7ae:	mov    al,0x73
  41e7b0:	sbb    eax,0x3ac45773
  41e7b5:	push   ecx
  41e7b6:	mov    ebp,ebx
  41e7b8:	and    edx,DWORD PTR [edi]
  41e7ba:	sbb    eax,0x123f7191
  41e7bf:	dec    esp
  41e7c0:	sbb    ah,cl
  41e7c2:	loopne 0x41e78c
  41e7c4:	ins    BYTE PTR es:[edi],dx
  41e7c5:	test   BYTE PTR [edi+ebp*4],ah
  41e7c8:	xor    BYTE PTR [edx+0x15d7fca2],dh
  41e7ce:	jbe    0x41e776
  41e7d0:	and    al,0x82
  41e7d2:	aam    0xa
  41e7d4:	add    esp,DWORD PTR [edi]
  41e7d6:	dec    ebp
  41e7d7:	ret    
  41e7d8:	outs   dx,BYTE PTR ds:[esi]
  41e7d9:	pop    ecx
  41e7da:	dec    ebp
  41e7db:	out    0x5c,eax
  41e7dd:	cmp    DWORD PTR [ecx],ebp
  41e7df:	fwait
  41e7e0:	and    eax,0x56817df2
  41e7e5:	jmp    0xa84c:0xad8ec3b8
  41e7ec:	test   BYTE PTR [esi],ah
  41e7ee:	xchg   esp,eax
  41e7ef:	push   es
  41e7f0:	dec    edx
  41e7f1:	or     eax,0xb0e49f7d
  41e7f6:	mov    dh,0x8d
  41e7f8:	arpl   WORD PTR [esi],di
  41e7fa:	push   esi
  41e7fb:	mov    esi,ss
  41e7fd:	push   ebp
  41e7fe:	mov    ch,0x23
  41e800:	fdivrp st(7),st
  41e802:	nop
  41e803:	loope  0x41e85e
  41e805:	cmp    dh,dl
  41e807:	dec    ecx
  41e808:	xchg   DWORD PTR [ecx+eiz*2],edx
  41e80b:	cmp    al,0x98
  41e80d:	mov    esi,0xfe66bdd9
  41e812:	rol    BYTE PTR [ecx-0x2066366],1
  41e818:	lods   eax,DWORD PTR ds:[esi]
  41e819:	dec    edx
  41e81a:	adc    al,0x2f
  41e81c:	rcr    ebx,0xd3
  41e81f:	imul   edx,DWORD PTR [ebx+0x6594d8d3],0x34b8c98c
  41e829:	test   BYTE PTR [ecx-0x67],ah
  41e82c:	aad    0x35
  41e82e:	push   cs
  41e82f:	sti    
  41e830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e831:	push   ds
  41e832:	jecxz  0x41e81a
  41e834:	inc    edx
  41e835:	pusha  
  41e836:	mov    ecx,0xb13c1273
  41e83b:	test   DWORD PTR [edx+ecx*1+0x15],ecx
  41e83f:	iret   
  41e840:	push   ebp
  41e841:	fldenv [ecx+ecx*4+0x70]
  41e845:	ins    WORD PTR es:[edi],dx
  41e847:	loop   0x41e830
  41e849:	adc    edi,DWORD PTR ds:0xf92897e1
  41e84f:	add    ah,BYTE PTR ds:0x562e925c
  41e855:	test   DWORD PTR [esi+0x61],edx
  41e858:	push   edx
  41e859:	ficom  WORD PTR [eax+0x47]
  41e85c:	bound  esp,QWORD PTR [edi-0x22f0d2fc]
  41e862:	cld    
  41e863:	adc    ebx,ebp
  41e865:	adc    BYTE PTR [edi-0x2f],bl
  41e868:	mov    cl,0x32
  41e86a:	sbb    BYTE PTR [ecx],ch
  41e86c:	bnd jmp 0x6f4ad2a0
  41e872:	fdiv   DWORD PTR [edx+ebp*1-0x23759f8]
  41e879:	fwait
  41e87a:	and    bl,BYTE PTR [eax-0x37]
  41e87d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e87e:	jp     0x41e8f0
  41e880:	mov    dh,BYTE PTR [esi-0x6c967d08]
  41e886:	xor    edi,DWORD PTR [ebx+0x3bb6130a]
  41e88c:	mov    ecx,0xccb5a0fa
  41e891:	out    0x5b,al
  41e893:	cwde   
  41e894:	pop    ebp
  41e895:	jp     0x41e8db
  41e897:	jg     0x41e8e5
  41e899:	or     dh,BYTE PTR [edi]
  41e89b:	js     0x41e8e8
  41e89d:	sbb    ch,ch
  41e89f:	mov    ?,WORD PTR [edx-0x55]
  41e8a2:	neg    BYTE PTR [eax]
  41e8a4:	or     DWORD PTR [ebx],edi
  41e8a6:	stos   DWORD PTR es:[edi],eax
  41e8a7:	loope  0x41e85f
  41e8a9:	cmp    al,0xdc
  41e8ab:	dec    eax
  41e8ac:	xchg   ebp,eax
  41e8ad:	imul   eax,DWORD PTR [ecx],0x3887be1c
  41e8b3:	fstp   DWORD PTR [esi+0x6d3a7d51]
  41e8b9:	push   ebp
  41e8ba:	icebp  
  41e8bb:	hlt    
  41e8bc:	pop    es
  41e8bd:	add    ah,dh
  41e8bf:	pop    esi
  41e8c0:	cld    
  41e8c1:	fdivp  st(7),st
  41e8c3:	stos   BYTE PTR es:[edi],al
  41e8c4:	retf   
  41e8c5:	adc    al,0x2f
  41e8c7:	lock jmp 0x8675:0xeb29350c
  41e8cf:	pop    ebx
  41e8d0:	jne    0x41e866
  41e8d2:	xchg   esi,eax
  41e8d3:	inc    ebx
  41e8d4:	mov    ds:0x7ae491af,al
  41e8d9:	pop    edx
  41e8da:	cdq    
  41e8db:	test   eax,0x7baceee8
  41e8e0:	shr    BYTE PTR ds:0x775bb804,cl
  41e8e6:	retf   
  41e8e7:	mov    edi,esi
  41e8e9:	adc    eax,0xeb8095ba
  41e8ee:	jge    0x41e87f
  41e8f0:	mov    dh,0x3a
  41e8f2:	and    eax,0xc477ed74
  41e8f7:	outs   dx,DWORD PTR ds:[esi]
  41e8f8:	out    0x77,eax
  41e8fa:	sbb    al,ah
  41e8fc:	add    DWORD PTR [edi+0x5e],ebx
  41e902:	jg     0x41e97c
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	sbb    DWORD PTR [ecx-0x17],edx
  41e911:	loope  0x41e94d
  41e913:	add    DWORD PTR fs:[eax],eax
  41e916:	cmc    
  41e917:	add    al,0x0
  41e919:	add    BYTE PTR [edi+0x1f],bh
  41e91c:	xchg   edi,eax
  41e91d:	dec    esi
  41e91e:	int3   
  41e91f:	adc    eax,0x27a2a91e
  41e924:	ins    DWORD PTR es:[edi],dx
  41e925:	mov    WORD PTR gs:[di],?
  41e929:	xor    BYTE PTR [ecx+0x6df345be],bh
  41e92f:	es inc ecx
  41e931:	scas   eax,DWORD PTR es:[edi]
  41e932:	pop    edi
  41e933:	jge    0x41e950
  41e935:	add    al,0x34
  41e937:	loopne 0x41e8ba
  41e939:	ss arpl WORD PTR gs:[ebp-0x7c],cx
  41e93e:	mov    al,ds:0x4b36f717
  41e943:	loope  0x41e929
  41e945:	daa    
  41e946:	scas   al,BYTE PTR es:[edi]
  41e947:	inc    edi
  41e948:	sti    
  41e949:	not    BYTE PTR [eax+0x11]
  41e94c:	cmp    eax,0xfe3f84f1
  41e951:	fsubr  QWORD PTR [edx+edx*2]
  41e954:	idiv   DWORD PTR [ebp+0x3006ee98]
  41e95a:	jo     0x41e90b
  41e95c:	scas   al,BYTE PTR es:[edi]
  41e95d:	xor    al,BYTE PTR [esi-0x48783701]
  41e963:	jg     0x41e9b6
  41e965:	mov    ebx,0x9004a22b
  41e96a:	sbb    BYTE PTR [ebx-0x20393a92],bl
  41e970:	aam    0x14
  41e972:	sbb    BYTE PTR [eax],dl
  41e974:	sti    
  41e975:	fdiv   DWORD PTR [ecx+0x29]
  41e978:	enter  0xf8c4,0x2
  41e97c:	pusha  
  41e97d:	or     ch,BYTE PTR [edi+esi*8+0x5bf1900d]
  41e984:	push   esi
  41e985:	push   edx
  41e986:	jl     0x41e99a
  41e988:	xor    DWORD PTR [esi+esi*8-0x2],ebp
  41e98c:	(bad)  
  41e98d:	mov    edi,0x26e9e89a
  41e992:	outs   dx,BYTE PTR ds:[esi]
  41e993:	pop    ds
  41e994:	jmp    0x41e93c
  41e996:	out    dx,al
  41e997:	fld    TBYTE PTR [ebx]
  41e999:	call   DWORD PTR [eax]
  41e99b:	les    ebx,FWORD PTR [eax-0x79]
  41e99e:	pusha  
  41e99f:	fs inc ebx
  41e9a1:	xchg   edi,eax
  41e9a2:	in     al,dx
  41e9a3:	and    eax,0xe1fccc42
  41e9a8:	test   BYTE PTR [eax],al
  41e9aa:	pop    ebx
  41e9ab:	and    BYTE PTR [ecx-0x35],bh
  41e9ae:	in     al,0xa0
  41e9b0:	and    al,0x55
  41e9b2:	repz push ds
  41e9b4:	shr    eax,0xd8
  41e9b7:	cmp    eax,0xd395935c
  41e9bc:	jecxz  0x41e9b3
  41e9be:	jo     0x41e990
  41e9c0:	jns    0x41e983
  41e9c2:	add    dl,BYTE PTR [ebx+0x65]
  41e9c5:	inc    ebp
  41e9c6:	fisttp QWORD PTR [ebx+eiz*1]
  41e9c9:	shl    edx,0x6c
  41e9cc:	dec    edx
  41e9cd:	and    cl,dl
  41e9cf:	je     0x41e97e
  41e9d1:	add    dl,BYTE PTR [ecx-0x703dbb4d]
  41e9d7:	lods   al,BYTE PTR ds:[esi]
  41e9d8:	aad    0x42
  41e9da:	imul   ecx,DWORD PTR [edx],0x50db61dc
  41e9e0:	and    al,0xcd
  41e9e2:	mov    esp,0x435b3c5f
  41e9e7:	pop    ebp
  41e9e8:	push   ecx
  41e9e9:	ins    DWORD PTR es:[edi],dx
  41e9ea:	mov    edx,0x1870afe4
  41e9ef:	ret    
  41e9f0:	(bad)  
  41e9f1:	cmp    eax,ebx
  41e9f3:	and    BYTE PTR [ecx],ch
  41e9f5:	sahf   
  41e9f6:	mov    ecx,0x9cd1b370
  41e9fb:	fs popa 
  41e9fd:	inc    ebp
  41e9fe:	daa    
  41e9ff:	jae    0x41e9ce
  41ea01:	cld    
  41ea02:	popf   
  41ea03:	enter  0x96f9,0xba
  41ea07:	push   0xffffff9e
  41ea09:	pop    ds
  41ea0a:	dec    ebp
  41ea0b:	adc    ebp,eax
  41ea0d:	pop    ss
  41ea0e:	int3   
  41ea0f:	pop    esi
  41ea10:	inc    esi
  41ea11:	cld    
  41ea12:	add    eax,0x9cf0d4ce
  41ea17:	jmp    0x26da2d45
  41ea1c:	mov    esp,0xc08202ea
  41ea21:	add    bl,BYTE PTR [ecx+0x6c]
  41ea24:	sbb    al,0x45
  41ea26:	mov    ch,0xd1
  41ea28:	mov    ecx,0xa350e68c
  41ea2d:	out    dx,al
  41ea2e:	or     DWORD PTR [esi+ebx*8],edx
  41ea31:	pop    es
  41ea32:	je     0x41eaa0
  41ea34:	or     BYTE PTR ds:0x2506d489,bh
  41ea3a:	fwait
  41ea3b:	inc    esi
  41ea3c:	sbb    al,BYTE PTR [eax-0x7c]
  41ea3f:	cmp    al,0xe7
  41ea41:	xchg   dh,dh
  41ea43:	dec    eax
  41ea44:	dec    edx
  41ea45:	aad    0x87
  41ea47:	mov    dh,0xd9
  41ea49:	(bad)  
  41ea4a:	sub    eax,0x1eb6ab24
  41ea4f:	push   edi
  41ea50:	stos   BYTE PTR es:[edi],al
  41ea51:	mov    ah,0x10
  41ea53:	jne    0x41eabd
  41ea55:	sub    eax,0x4aef0a1f
  41ea5a:	stc    
  41ea5b:	shr    ecx,0x96
  41ea5e:	xor    DWORD PTR [ecx+0x43616d63],ecx
  41ea64:	out    0xf2,al
  41ea66:	xor    edx,ebp
  41ea68:	in     al,dx
  41ea69:	cwde   
  41ea6a:	and    BYTE PTR [edx],dl
  41ea6c:	add    BYTE PTR [eax-0x3c],ah
  41ea6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea70:	or     DWORD PTR [edx-0x1bf2160b],eax
  41ea76:	out    0xd0,al
  41ea78:	or     bh,ah
  41ea7a:	(bad)  
  41ea7b:	gs pop ecx
  41ea7d:	push   esp
  41ea7e:	mov    al,0x9d
  41ea80:	or     eax,0xe458a313
  41ea85:	(bad)  
  41ea86:	mov    ebp,0x9918c8db
  41ea8b:	push   ebx
  41ea8c:	mov    ?,edx
  41ea8e:	add    edx,DWORD PTR [esi+0x7ce6c923]
  41ea94:	scas   eax,DWORD PTR es:[edi]
  41ea95:	aad    0xc1
  41ea97:	(bad)  
  41ea98:	dec    ecx
  41ea99:	pop    DWORD PTR [ebx-0x296ee1f9]
  41ea9f:	and    edi,DWORD PTR [eax+esi*8+0x5ad6be57]
  41eaa6:	cmp    DWORD PTR [eax+0x587bb068],ebp
  41eaac:	(bad)  
  41eaae:	push   es
  41eaaf:	js     0x41eb10
  41eab1:	std    
  41eab2:	pop    es
  41eab3:	pop    ss
  41eab4:	retf   0xe4ef
  41eab7:	push   ebx
  41eab8:	mov    al,BYTE PTR [ebx+0x54]
  41eabb:	stos   DWORD PTR es:[edi],eax
  41eabc:	cmp    DWORD PTR [eax+0x6c],eax
  41eabf:	in     eax,0xd1
  41eac1:	clc    
  41eac2:	inc    esi
  41eac3:	xchg   ebp,eax
  41eac4:	xchg   edx,eax
  41eac5:	data16 sub BYTE PTR [esi+0x14],0xe
  41eaca:	pop    ecx
  41eacb:	dec    ebp
  41eacc:	and    esp,0xae25813f
  41ead2:	stos   BYTE PTR es:[edi],al
  41ead3:	mov    esi,fs
  41ead5:	sbb    ecx,DWORD PTR [esi]
  41ead7:	xlat   BYTE PTR ds:[ebx]
  41ead8:	and    BYTE PTR [edx-0x4c],bl
  41eadb:	push   ds
  41eadc:	jae    0x41ea99
  41eade:	adc    al,0x2e
  41eae0:	and    dl,BYTE PTR [ebx-0x5d]
  41eae3:	cmp    BYTE PTR es:[edi+edx*4+0x26],al
  41eae8:	cmp    DWORD PTR [edx+0x57933e27],0xffffffab
  41eaef:	sahf   
  41eaf0:	jbe    0x41ea73
  41eaf2:	popa   
  41eaf3:	fcomp  QWORD PTR [esi+0x14]
  41eaf6:	sub    esi,edi
  41eaf8:	xor    BYTE PTR [esi],ah
  41eafa:	sti    
  41eafb:	ins    BYTE PTR es:[edi],dx
  41eafc:	jae    0x41eb49
  41eafe:	ins    DWORD PTR es:[edi],dx
  41eaff:	lods   al,BYTE PTR ds:[esi]
  41eb00:	xor    cl,BYTE PTR [ebp+0x74]
  41eb03:	in     eax,dx
  41eb04:	icebp  
  41eb05:	mov    ah,BYTE PTR [edx+0x7233c42a]
  41eb0b:	mov    eax,ds:0xecf98c88
  41eb10:	fist   WORD PTR [edi+eax*2]
  41eb13:	aas    
  41eb14:	outs   dx,BYTE PTR ds:[esi]
  41eb15:	repnz dec edi
  41eb17:	pop    edx
  41eb18:	into   
  41eb19:	sti    
  41eb1a:	jp     0x41eb3c
  41eb1c:	dec    eax
  41eb1d:	inc    edx
  41eb1e:	pop    ebx
  41eb1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb20:	ds in  al,dx
  41eb22:	inc    ecx
  41eb23:	cmp    esp,DWORD PTR [ecx]
  41eb25:	jae    0x41eabc
  41eb27:	mov    DWORD PTR [ebx-0x5c],ebp
  41eb2a:	icebp  
  41eb2b:	push   ebp
  41eb2c:	jae    0x41eb5e
  41eb2e:	test   al,0x7b
  41eb30:	pop    ebx
  41eb31:	pop    ebx
  41eb32:	pop    ds
  41eb33:	sub    al,0x16
  41eb35:	fiadd  WORD PTR [ebx-0x664f6b36]
  41eb3b:	dec    esi
  41eb3c:	loopne 0x41eba4
  41eb3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb3f:	lahf   
  41eb40:	enter  0x6b68,0xcb
  41eb44:	xchg   DWORD PTR [ecx-0x6a],ebp
  41eb47:	dec    esp
  41eb48:	outs   dx,BYTE PTR ds:[esi]
  41eb49:	sub    bl,BYTE PTR [edi-0x2fe3bbd2]
  41eb4f:	adc    BYTE PTR [edi],dh
  41eb51:	jg     0x41eba3
  41eb53:	mov    edi,0x87d6c0cf
  41eb58:	js     0x41eb6c
  41eb5a:	test   al,0xbf
  41eb5c:	(bad)  
  41eb5d:	call   0x448a:0x1511f766
  41eb64:	xchg   edx,eax
  41eb65:	enter  0x5791,0x27
  41eb69:	sbb    eax,0xe4bb4f2c
  41eb6e:	mov    dh,0x9b
  41eb70:	jo     0x41eb4d
  41eb72:	push   edx
  41eb73:	jb     0x41eb1d
  41eb75:	xchg   DWORD PTR [ebp-0x120afb0c],ecx
  41eb7b:	sub    al,0x75
  41eb7d:	mov    esp,0xbea4b072
  41eb82:	and    al,0x84
  41eb84:	dec    esp
  41eb85:	mov    bl,0xae
  41eb87:	ins    BYTE PTR es:[edi],dx
  41eb88:	mov    al,0x47
  41eb8a:	loope  0x41ebb6
  41eb8c:	aaa    
  41eb8d:	mov    dh,0x48
  41eb8f:	sub    al,BYTE PTR [ebx]
  41eb91:	out    0x96,al
  41eb93:	and    ah,BYTE PTR [ebp+0x4479f64a]
  41eb99:	jnp    0x41eb33
  41eb9b:	leave  
  41eb9c:	mov    bl,BYTE PTR [ecx-0x24]
  41eb9f:	arpl   WORD PTR [ebp-0x80],bp
  41eba2:	mov    ecx,0x91a2e649
  41eba7:	dec    ebx
  41eba8:	in     al,dx
  41eba9:	imul   esp,ebx,0xfffffffb
  41ebac:	lahf   
  41ebad:	jnp    0x41ebf9
  41ebaf:	cmp    DWORD PTR [ebp-0x3c],ebp
  41ebb2:	adc    DWORD PTR [edx+0x20],ebx
  41ebb5:	cmp    BYTE PTR [ebx+0x7a645481],dl
  41ebbb:	adc    eax,0x3fe589ee
  41ebc0:	add    BYTE PTR [ebp-0x7be21e6f],cl
  41ebc6:	ja     0x41ebd8
  41ebc8:	xchg   edx,eax
  41ebc9:	adc    al,0xbb
  41ebcb:	cmp    eax,0xf10031b2
  41ebd0:	jl     0x41ec1e
  41ebd2:	loop   0x41ebe3
  41ebd4:	fistp  WORD PTR [ebx]
  41ebd6:	pop    edi
  41ebd7:	sbb    eax,0x6adc515b
  41ebdc:	(bad)  
  41ebdd:	sub    BYTE PTR [esi-0x63e87b8a],bh
  41ebe3:	int    0x66
  41ebe5:	mov    DWORD PTR [esi],ecx
  41ebe7:	daa    
  41ebe8:	or     BYTE PTR [edi],al
  41ebea:	mov    ah,0x43
  41ebec:	push   es
  41ebed:	call   0xca19:0x215d6882
  41ebf4:	xor    eax,0x4f323c08
  41ebf9:	add    esp,DWORD PTR [eax+ebp*1+0x5d1a38af]
  41ec00:	mov    WORD PTR [ecx],cs
  41ec02:	mov    eax,ds:0x119bd0bf
  41ec07:	fst    st(6)
  41ec09:	add    DWORD PTR [ebp-0x6],edx
  41ec0c:	lods   eax,DWORD PTR es:[esi]
  41ec0e:	jmp    0x8edcf4b2
  41ec13:	adc    BYTE PTR [edi+0x63],ch
  41ec16:	mov    ch,0x9a
  41ec18:	pop    esp
  41ec19:	xlat   BYTE PTR ds:[ebx]
  41ec1a:	retf   0xa817
  41ec1d:	mov    edi,0x46917c2b
  41ec22:	in     al,0x2d
  41ec24:	sub    al,0x39
  41ec26:	sti    
  41ec27:	xchg   ecx,eax
  41ec28:	rcl    BYTE PTR [eax],cl
  41ec2a:	add    DWORD PTR [edx-0x3c093db5],eax
  41ec30:	jno    0x41ebd5
  41ec32:	push   ds
  41ec33:	mov    ecx,0xe0b47990
  41ec38:	xchg   ebp,eax
  41ec39:	repnz shl dl,0x7e
  41ec3d:	xchg   edi,eax
  41ec3e:	out    0x5,eax
  41ec40:	mov    BYTE PTR [esp+ebp*1],0xfa
  41ec44:	stc    
  41ec45:	ins    DWORD PTR es:[edi],dx
  41ec46:	mov    ecx,0x652010bd
  41ec4b:	push   ecx
  41ec4c:	adc    eax,0x36cfad7d
  41ec51:	sbb    esi,DWORD PTR [esi+0x3d]
  41ec54:	arpl   WORD PTR [edx+0xc],bp
  41ec57:	rcr    DWORD PTR [edx-0x1d],0x76
  41ec5b:	xor    DWORD PTR [ebx-0x23d34b39],ebp
  41ec61:	mov    edx,eax
  41ec63:	fdiv   DWORD PTR [esi+eiz*8-0x2d]
  41ec67:	add    BYTE PTR [edi],dl
  41ec69:	jbe    0x41eca1
  41ec6b:	xor    eax,0xc9371b0c
  41ec70:	int    0x28
  41ec72:	stos   DWORD PTR es:[edi],eax
  41ec73:	push   ebx
  41ec74:	ret    
  41ec75:	jge    0x41ec9b
  41ec77:	jbe    0x41ec8f
  41ec79:	ds das 
  41ec7b:	in     al,0xe6
  41ec7d:	jge    0x41ecf8
  41ec7f:	jmp    0xcf54c244
  41ec84:	retf   0x71c0
  41ec87:	mov    eax,ds:0xcfe2dc6a
  41ec8c:	mul    ch
  41ec8e:	add    eax,DWORD PTR [edi+0x0]
  41ec91:	xor    DWORD PTR [ebx],esi
  41ec93:	ins    DWORD PTR es:[edi],dx
  41ec94:	mov    ch,0x43
  41ec96:	mov    ah,0x89
  41ec98:	jmp    0x9aab:0xb8f3a6b3
  41ec9f:	imul   DWORD PTR [esi]
  41eca1:	xchg   esp,eax
  41eca2:	out    dx,eax
  41eca3:	jno    0x41ec8d
  41eca5:	in     eax,dx
  41eca6:	xor    DWORD PTR [esi-0x6a9c74a4],esi
  41ecac:	adc    dl,BYTE PTR [esi-0x5f]
  41ecaf:	adc    cl,dl
  41ecb1:	add    esi,esi
  41ecb3:	test   al,0xc3
  41ecb5:	mov    dl,0x91
  41ecb7:	mul    DWORD PTR [eax-0x4e6c8863]
  41ecbd:	cmp    dh,dh
  41ecbf:	out    0x2c,eax
  41ecc1:	cdq    
  41ecc2:	dec    edx
  41ecc3:	and    BYTE PTR [ebx+esi*4+0x36],0x8f
  41ecc8:	ins    BYTE PTR es:[edi],dx
  41ecc9:	(bad)  
  41ecca:	cli    
  41eccb:	(bad)  
  41eccc:	ss mov al,0x6e
  41eccf:	imul   eax,DWORD PTR [ecx-0x38],0x4c67dec3
  41ecd6:	pop    ss
  41ecd7:	pop    edx
  41ecd8:	xchg   BYTE PTR [ecx],cl
  41ecda:	dec    esi
  41ecdb:	cmp    BYTE PTR [ebp-0x20],bh
  41ecde:	xchg   BYTE PTR [ecx],dh
  41ece0:	and    al,0xfc
  41ece2:	push   eax
  41ece3:	cmp    esi,DWORD PTR [edx+0x73]
  41ece6:	inc    ebx
  41ece7:	call   DWORD PTR [ecx+0x47]
  41ecea:	ins    DWORD PTR es:[edi],dx
  41eceb:	cwde   
  41ecec:	xor    DWORD PTR [edi-0x500b0123],esi
  41ecf2:	and    cl,dh
  41ecf4:	es cld 
  41ecf6:	inc    esp
  41ecf7:	mov    ah,0xab
  41ecf9:	loope  0x41ecc6
  41ecfb:	jle    0x41ed54
  41ecfd:	xor    DWORD PTR [ecx-0x35572555],ebp
  41ed03:	dec    esi
  41ed04:	mov    bl,0x16
  41ed06:	int3   
  41ed07:	mov    al,BYTE PTR [ecx+eiz*4-0xf1b5442]
  41ed0e:	mov    bl,0x14
  41ed10:	test   BYTE PTR [edi+0x6e],dl
  41ed13:	lods   eax,DWORD PTR ds:[esi]
  41ed14:	or     al,0x2
  41ed16:	mov    ecx,0x7b960c57
  41ed1b:	fild   QWORD PTR [edx-0x17]
  41ed1f:	and    DWORD PTR [esi-0x3b464a91],0x1c830035
  41ed29:	xchg   BYTE PTR [esi],al
  41ed2b:	xor    eax,0xfb76efb1
  41ed30:	pushf  
  41ed31:	lock or BYTE PTR [edx+0x1a1894e0],0xdb
  41ed39:	fdiv   st,st(5)
  41ed3b:	add    eax,DWORD PTR [edx+0x4a8dfb07]
  41ed41:	test   al,0xf2
  41ed43:	dec    ebx
  41ed44:	fld    DWORD PTR [edi-0xb]
  41ed47:	fldcw  WORD PTR [eax]
  41ed49:	cmp    esp,DWORD PTR [esi+ebp*2-0x364a9f98]
  41ed50:	test   DWORD PTR [ebx-0x5805062a],eax
  41ed56:	mul    ebx
  41ed58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed59:	je     0x41ed7a
  41ed5b:	cs test eax,0x7d2b3bd8
  41ed61:	lods   eax,DWORD PTR ds:[esi]
  41ed62:	pop    esp
  41ed63:	lods   eax,DWORD PTR ds:[esi]
  41ed64:	pop    ebp
  41ed65:	jb     0x41ed0b
  41ed67:	call   0x40c71107
  41ed6c:	test   eax,0xc0aca518
  41ed71:	xchg   ecx,eax
  41ed72:	mov    bh,0xcc
  41ed74:	jno    0x41eda3
  41ed76:	inc    esi
  41ed77:	sub    al,0x68
  41ed79:	jae    0x41ed0a
  41ed7b:	mov    ecx,ebp
  41ed7d:	cmc    
  41ed7e:	cmp    esi,DWORD PTR [edi+0x54]
  41ed81:	retf   
  41ed82:	jae    0x41ed44
  41ed84:	xor    eax,0x68971e6a
  41ed89:	sbb    DWORD PTR [ebp+0x67d17459],edx
  41ed8f:	push   ecx
  41ed90:	loope  0x41ed52
  41ed92:	popf   
  41ed93:	popf   
  41ed94:	or     BYTE PTR ds:0xfe09195a,ch
  41ed9a:	or     eax,0x3fc6ed1d
  41ed9f:	repz inc esi
  41eda1:	pop    edx
  41eda2:	fnsave [ebx-0x46]
  41eda5:	cmp    DWORD PTR [ebp-0x76],ebp
  41eda8:	scas   eax,DWORD PTR es:[edi]
  41eda9:	lds    eax,FWORD PTR [edx+0xbbbf5cf]
  41edaf:	int3   
  41edb0:	in     al,0x87
  41edb2:	jns    0x41ed98
  41edb4:	push   ecx
  41edb5:	xchg   esp,eax
  41edb6:	jno    0x41ed50
  41edb8:	retf   0x48c0
  41edbb:	in     eax,dx
  41edbc:	test   DWORD PTR [ecx],ebp
  41edbe:	add    al,0x2a
  41edc0:	dec    eax
  41edc1:	dec    ebp
  41edc2:	faddp  st(5),st
  41edc4:	xchg   DWORD PTR [esi+0x36d1789f],edx
  41edca:	add    esi,0x59
  41edcd:	xor    eax,0xa5b2c523
  41edd2:	jmp    0xb455:0xce0df79d
  41edd9:	xchg   DWORD PTR [esi-0x537d6e26],ebp
  41eddf:	jbe    0x41ed79
  41ede1:	fs iret 
  41ede3:	jnp    0x41ede8
  41ede5:	hlt    
  41ede6:	nop
  41ede7:	je     0x41eda2
  41ede9:	cmp    BYTE PTR [esi+0xa],dl
  41edec:	ss push esi
  41edee:	sahf   
  41edef:	inc    ebp
  41edf0:	mov    dh,0xb
  41edf2:	cmp    ch,ch
  41edf4:	xor    BYTE PTR [esp-0x4a],dh
  41edf8:	int    0x52
  41edfa:	loop   0x41ee2b
  41edfc:	cwde   
  41edfd:	mov    dh,ah
  41edff:	loop   0x41ee12
  41ee01:	or     bh,BYTE PTR [edi]
  41ee03:	sbb    ah,BYTE PTR [edx-0x5e]
  41ee06:	cmp    BYTE PTR [ecx+0x73],ch
  41ee09:	sbb    ebx,DWORD PTR [edx-0x2f]
  41ee0c:	les    ebx,FWORD PTR [ebx]
  41ee0e:	pushf  
  41ee0f:	add    BYTE PTR [eax],al
  41ee11:	add    BYTE PTR [edx+0x51],dl
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	and    eax,0x2f711abf
  41ee23:	imul   eax,DWORD PTR [ecx],0x4f500
  41ee29:	add    BYTE PTR [ebp+0x36],bh
  41ee2c:	jl     0x41ee2d
  41ee2e:	xor    al,BYTE PTR es:[esi+ebx*8+0x68]
  41ee33:	or     ecx,edi
  41ee35:	lds    edx,FWORD PTR [ebp-0x5c]
  41ee38:	xor    BYTE PTR [edx+0x426b6000],0x8d
  41ee3f:	dec    esi
  41ee40:	inc    esi
  41ee41:	jne    0x41ee3b
  41ee43:	dec    esp
  41ee44:	xor    DWORD PTR ss:[edi],ebx
  41ee47:	inc    esp
  41ee48:	sahf   
  41ee49:	mov    esp,0xa3a958
  41ee4e:	jb     0x41ede3
  41ee50:	inc    edx
  41ee51:	test   DWORD PTR [edi-0x644c32c0],0x6ca5da87
  41ee5b:	mov    edx,0x5e56f563
  41ee60:	mov    es,WORD PTR [ecx+0x2400a7a]
  41ee66:	dec    edx
  41ee67:	jmp    0x283c5548
  41ee6c:	mov    ebx,0x3b5b53d
  41ee71:	pop    ecx
  41ee72:	jae    0x41ee16
  41ee74:	enter  0x8b14,0xab
  41ee78:	xchg   esp,eax
  41ee79:	call   0x698f338a
  41ee7e:	mov    bh,0xec
  41ee80:	mov    ebx,0x7b48bc43
  41ee85:	(bad)  
  41ee86:	sti    
  41ee87:	add    DWORD PTR [ebp+0x166cd18c],ecx
  41ee8d:	sbb    bl,bl
  41ee8f:	pop    es
  41ee90:	or     DWORD PTR [eax+0x29],0xd812e2c7
  41ee97:	mov    bh,0xc8
  41ee99:	xchg   edi,eax
  41ee9a:	ret    0x6d06
  41ee9d:	aad    0xb7
  41ee9f:	sub    BYTE PTR [ecx+0x6a],0x6b
  41eea3:	push   eax
  41eea4:	cmc    
  41eea5:	dec    esi
  41eea6:	sti    
  41eea7:	mov    eax,0xa6402e6b
  41eeac:	fistp  DWORD PTR [ebp-0x275cf0d]
  41eeb2:	cmp    BYTE PTR [edi],0xcf
  41eeb5:	mov    ds:0x76337d71,al
  41eeba:	aam    0x6f
  41eebc:	dec    BYTE PTR ds:[eax+esi*4-0x80]
  41eec1:	add    BYTE PTR [esi-0x48],dl
  41eec4:	jns    0x41ef0a
  41eec6:	dec    esi
  41eec7:	sbb    BYTE PTR [edx+0x66563a20],dh
  41eecd:	xor    ah,BYTE PTR [edi]
  41eecf:	jo     0x41ee97
  41eed1:	xchg   edi,eax
  41eed2:	sbb    DWORD PTR [ebx+eax*4+0x15],0xffffffb5
  41eed7:	xor    DWORD PTR [ebx-0x37b73270],esp
  41eedd:	mov    edi,0x1b962ec8
  41eee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eee3:	cld    
  41eee4:	in     al,dx
  41eee5:	gs cmp dl,ah
  41eee8:	ror    DWORD PTR [ebp+0x636f4d86],0x22
  41eeef:	xchg   ebp,eax
  41eef0:	mov    bl,0xce
  41eef2:	jb     0x41ef27
  41eef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eef5:	mov    cl,0xaf
  41eef7:	in     al,dx
  41eef8:	jp     0x41ef02
  41eefa:	sar    esi,cl
  41eefc:	sub    BYTE PTR [edi+0x3ee187db],0x1a
  41ef03:	fst    DWORD PTR [edi-0x1]
  41ef06:	mov    al,0xca
  41ef08:	sub    ebx,DWORD PTR [ebp+0x7]
  41ef0b:	loop   0x41eea3
  41ef0d:	pushf  
  41ef0e:	hlt    
  41ef0f:	pop    esi
  41ef10:	or     BYTE PTR [edi],ch
  41ef12:	mov    al,ds:0xd5897392
  41ef17:	sbb    BYTE PTR [ebx+0x14],0xa9
  41ef1b:	aas    
  41ef1c:	pop    ss
  41ef1d:	gs dec eax
  41ef1f:	adc    eax,0xa10db8
  41ef24:	pop    edx
  41ef25:	mov    esp,0x8939d264
  41ef2a:	cmp    al,0xe4
  41ef2c:	inc    ebx
  41ef2d:	mov    WORD PTR ds:0x4c1f2923,fs
  41ef33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef34:	scas   al,BYTE PTR es:[edi]
  41ef35:	pop    esp
  41ef36:	xchg   ecx,eax
  41ef37:	scas   eax,DWORD PTR es:[edi]
  41ef38:	fisub  DWORD PTR [eax+0x2465aa71]
  41ef3e:	dec    edx
  41ef3f:	cs xchg esi,eax
  41ef41:	cld    
  41ef42:	enter  0xec8f,0xc7
  41ef46:	mov    cl,0xec
  41ef48:	jp     0x41eee0
  41ef4a:	lahf   
  41ef4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef4c:	jnp    0x41efae
  41ef4e:	dec    ebp
  41ef4f:	inc    esi
  41ef50:	mov    eax,0xea7cd3fd
  41ef55:	test   ah,0x48
  41ef58:	icebp  
  41ef59:	or     al,0x4a
  41ef5b:	add    edi,esi
  41ef5d:	imul   edi,DWORD PTR [ebx+0x4d],0xd4d08e46
  41ef64:	push   cs
  41ef65:	jmp    0x8259:0xb6c1ba9b
  41ef6c:	mov    bh,0x43
  41ef6e:	loopne 0x41efac
  41ef70:	sbb    DWORD PTR [esi-0x67],esi
  41ef73:	jbe    0x41ef87
  41ef75:	mov    DWORD PTR [eax-0x71],eax
  41ef78:	mov    ss,WORD PTR [eax]
  41ef7a:	or     BYTE PTR [ebp-0x6dda323c],al
  41ef80:	pop    ebx
  41ef81:	add    bh,BYTE PTR [edi+0x51f358f4]
  41ef87:	(bad)  
  41ef89:	out    dx,al
  41ef8a:	(bad)  [edi+esi*2-0x3291c1e4]
  41ef91:	lods   eax,DWORD PTR ds:[esi]
  41ef92:	lock cmc 
  41ef94:	jmp    0x4841:0xece2e203
  41ef9b:	aad    0x30
  41ef9d:	mov    gs:0xba87f123,al
  41efa3:	test   BYTE PTR [eax],bl
  41efa5:	add    BYTE PTR [esi],dl
  41efa7:	inc    ebx
  41efa8:	icebp  
  41efa9:	xor    al,BYTE PTR [esi+eax*1+0x52]
  41efad:	pop    eax
  41efae:	pop    edi
  41efaf:	into   
  41efb0:	cld    
  41efb1:	jg     0x41efe4
  41efb3:	(bad)  
  41efb4:	les    edx,FWORD PTR [ecx+0x2a]
  41efb7:	les    esi,FWORD PTR [ecx]
  41efb9:	call   0x461b:0x73acb5b4
  41efc0:	mov    ebx,0x228e5251
  41efc5:	pop    ecx
  41efc6:	jl     0x41f004
  41efc8:	or     DWORD PTR [ebp-0x1e9647b2],0x446bbeff
  41efd2:	ret    
  41efd3:	test   BYTE PTR [eax-0x501ca318],ch
  41efd9:	push   0xb11f5257
  41efde:	sub    ch,BYTE PTR [ebp+0x6deae106]
  41efe4:	imul   edx,DWORD PTR [eax],0x96949435
  41efea:	jmp    0x41f04f
  41efec:	std    
  41efed:	arpl   WORD PTR [ebp-0x116f1650],ax
  41eff3:	outs   dx,BYTE PTR ds:[esi]
  41eff4:	es stos BYTE PTR es:[edi],al
  41eff6:	mov    cl,0xa3
  41eff8:	ss or  bh,BYTE PTR es:[ebx+edx*8-0x56]
  41effe:	lods   al,BYTE PTR ds:[esi]
  41efff:	adc    esp,ebx
  41f001:	xchg   DWORD PTR ds:0x3a51a779,ecx
  41f007:	sbb    eax,0xa431ddf0
  41f00c:	std    
  41f00d:	ret    0x7cef
  41f010:	sti    
  41f011:	sub    edx,DWORD PTR [edi+0x11]
  41f014:	es out dx,al
  41f016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f017:	fs sbb al,0x3e
  41f01a:	push   0xc13f7459
  41f01f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f020:	xchg   ebx,esp
  41f022:	mov    DWORD PTR ds:0x9f204a6a,ecx
  41f028:	test   ecx,ecx
  41f02a:	xchg   ebp,eax
  41f02b:	or     al,ah
  41f02d:	inc    ecx
  41f02e:	add    DWORD PTR [esi],ebp
  41f030:	rcl    edi,0xab
  41f033:	stos   DWORD PTR es:[edi],eax
  41f034:	sub    DWORD PTR [edx-0x5b],edi
  41f037:	push   ss
  41f038:	mov    DWORD PTR [esi-0x2920ce92],edx
  41f03e:	ret    0x2a34
  41f041:	out    0xbb,eax
  41f043:	(bad)  
  41f044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f045:	test   DWORD PTR [edi-0x49],ebp
  41f048:	cmp    ebx,edx
  41f04a:	sbb    BYTE PTR ds:0xdf251b75,ch
  41f050:	dec    DWORD PTR [edx]
  41f052:	pop    esp
  41f053:	iret   
  41f054:	add    BYTE PTR [eax+eiz*1+0x757d131d],ch
  41f05b:	js     0x41f06a
  41f05d:	fucomp st(6)
  41f05f:	or     cl,BYTE PTR [eax-0x6c8b40db]
  41f065:	pushf  
  41f066:	inc    BYTE PTR [edx+esi*2-0x26]
  41f06a:	pop    ss
  41f06b:	mov    al,cl
  41f06d:	and    bh,BYTE PTR [esi]
  41f06f:	pusha  
  41f070:	lods   eax,DWORD PTR ds:[esi]
  41f071:	sbb    ch,BYTE PTR [ebx+0x5]
  41f074:	lods   al,BYTE PTR ds:[esi]
  41f075:	add    ah,BYTE PTR [eax-0x53]
  41f078:	int    0x8b
  41f07a:	dec    ebx
  41f07b:	inc    ebx
  41f07c:	dec    ebx
  41f07d:	cmp    BYTE PTR [ebx+edx*4],bl
  41f080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f081:	lea    edx,[edx+0x50]
  41f084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f085:	outs   dx,BYTE PTR ds:[esi]
  41f086:	jle    0x41f0fd
  41f088:	dec    edx
  41f089:	sub    dl,BYTE PTR [edi]
  41f08b:	shl    BYTE PTR [esi+0x2df4df3],1
  41f091:	cmp    edi,esi
  41f093:	sbb    DWORD PTR [ebx],ecx
  41f095:	xchg   ebx,eax
  41f096:	je     0x41f0a2
  41f098:	xchg   ebp,eax
  41f099:	pop    edx
  41f09a:	xlat   BYTE PTR gs:[ebx]
  41f09c:	iret   
  41f09d:	aas    
  41f09e:	add    BYTE PTR [edx+0x14],dl
  41f0a1:	enter  0x3a19,0x8b
  41f0a5:	cwde   
  41f0a6:	mov    ch,0x88
  41f0a8:	mov    bl,0xe8
  41f0aa:	cmp    bh,BYTE PTR [esi]
  41f0ac:	mov    ebx,0x28a14b7
  41f0b1:	inc    edx
  41f0b2:	sub    DWORD PTR [edi],eax
  41f0b4:	data16 jbe 0x41f104
  41f0b7:	cmc    
  41f0b8:	in     al,dx
  41f0b9:	dec    esp
  41f0ba:	je     0x41f05b
  41f0bc:	sbb    al,0x63
  41f0be:	mov    ecx,0xb47a6d8b
  41f0c3:	dec    ebp
  41f0c4:	and    al,0xd7
  41f0c6:	in     al,dx
  41f0c7:	add    BYTE PTR [edi],ah
  41f0c9:	or     BYTE PTR [ecx+eiz*2+0x462ec643],cl
  41f0d0:	or     al,0xa1
  41f0d2:	mov    dl,0xdf
  41f0d4:	xchg   edi,eax
  41f0d5:	(bad)  
  41f0d7:	fwait
  41f0d8:	xchg   esi,eax
  41f0d9:	jg     0x41f0cb
  41f0db:	addr16 into 
  41f0dd:	xor    BYTE PTR [eax*8+0x33017e19],bh
  41f0e4:	fcom   DWORD PTR [ebp-0x1d]
  41f0e7:	pop    ebx
  41f0e8:	scas   eax,DWORD PTR es:[edi]
  41f0e9:	or     edx,DWORD PTR [edi+0x5f]
  41f0ec:	xor    esi,DWORD PTR [edx+0x23af6c54]
  41f0f2:	test   eax,0x454c6865
  41f0f7:	jbe    0x41f0e2
  41f0f9:	pop    ds
  41f0fa:	ror    edx,cl
  41f0fc:	ins    BYTE PTR es:[edi],dx
  41f0fd:	ret    0xf1dd
  41f100:	pop    esi
  41f101:	mov    ds:0x3be711c0,al
  41f106:	inc    ebx
  41f107:	add    eax,0xe3c8c462
  41f10c:	(bad)  
  41f10d:	outs   dx,DWORD PTR ds:[esi]
  41f10e:	punpckhwd mm6,mm4
  41f111:	hlt    
  41f112:	mov    eax,0xf984680a
  41f117:	inc    ebp
  41f118:	sub    bh,BYTE PTR [edi-0x4c6a2ce2]
  41f11e:	mov    bl,0x91
  41f120:	jecxz  0x41f160
  41f122:	and    DWORD PTR [ebp+0x558da961],0x6e
  41f129:	aaa    
  41f12a:	add    eax,0x7d5f3c03
  41f12f:	mov    edx,DWORD PTR [edx+0x17]
  41f132:	test   eax,0xb507618f
  41f137:	jo     0x41f12b
  41f139:	adc    al,0xed
  41f13b:	hlt    
  41f13c:	and    eax,0x4caa903d
  41f141:	outs   dx,BYTE PTR ds:[esi]
  41f142:	mov    al,ds:0x63d5c74b
  41f147:	icebp  
  41f148:	push   0x3
  41f14a:	mov    cl,0xb9
  41f14c:	adc    al,0xe8
  41f14e:	pop    esi
  41f14f:	std    
  41f150:	lds    esp,FWORD PTR [ebp+0x55]
  41f153:	cmp    DWORD PTR [edx+esi*4+0x43],0x69fd6bf7
  41f15b:	pop    esp
  41f15c:	xor    DWORD PTR [eax-0x5d47d6c4],0xffffffb3
  41f163:	and    al,0x81
  41f165:	ror    dh,0xfe
  41f168:	fild   WORD PTR [edi-0x28]
  41f16b:	sbb    al,0xfa
  41f16d:	jb     0x41f13b
  41f16f:	mov    eax,ds:0xc19f6791
  41f174:	or     ebp,0x4c
  41f177:	sub    eax,0xa4b8791f
  41f17c:	iret   
  41f17d:	mov    esi,0x954063cd
  41f182:	popf   
  41f183:	(bad)  
  41f184:	sti    
  41f185:	cld    
  41f186:	add    ah,dl
  41f188:	scas   eax,DWORD PTR es:[edi]
  41f189:	std    
  41f18a:	cdq    
  41f18b:	xor    dl,al
  41f18d:	in     al,0x3c
  41f18f:	addr16 jg 0x41f1a5
  41f192:	mov    ds:0x1f50f3ef,al
  41f197:	icebp  
  41f198:	and    eax,0x3a54716
  41f19d:	or     eax,ecx
  41f19f:	add    esi,ebx
  41f1a1:	std    
  41f1a2:	retf   0x7e45
  41f1a5:	xchg   edi,eax
  41f1a6:	shr    DWORD PTR [eax+0x4da0acfe],cl
  41f1ac:	aas    
  41f1ad:	lods   al,BYTE PTR ds:[esi]
  41f1ae:	hlt    
  41f1af:	add    al,0x2c
  41f1b1:	mov    esp,0x16111a08
  41f1b6:	jg     0x41f20d
  41f1b8:	pop    es
  41f1b9:	push   esp
  41f1ba:	or     bl,BYTE PTR [ebx]
  41f1bc:	jne    0x41f158
  41f1be:	xchg   ebx,eax
  41f1bf:	(bad)  
  41f1c0:	test   al,0x1a
  41f1c2:	jo     0x41f1de
  41f1c4:	and    edx,DWORD PTR [edi+0xfc9b23b]
  41f1ca:	sub    DWORD PTR [eax],eax
  41f1cc:	cmp    edi,DWORD PTR [eax-0x12b1cba6]
  41f1d2:	imul   edx,DWORD PTR [esi+0xf],0x5b
  41f1d6:	adc    BYTE PTR [esi+0x171d746b],cl
  41f1dc:	aad    0xd2
  41f1de:	sub    DWORD PTR [ebx-0x6a4c3b8a],0xffffffa5
  41f1e5:	pop    edx
  41f1e6:	xchg   edi,eax
  41f1e7:	nop
  41f1e8:	repz fwait
  41f1ea:	inc    edx
  41f1eb:	imul   BYTE PTR [esi-0x38]
  41f1ee:	push   ds
  41f1ef:	jmp    0x41f1f6
  41f1f1:	xchg   edi,eax
  41f1f2:	jbe    0x41f1c2
  41f1f4:	call   0xb5d1:0xc8c8644b
  41f1fb:	pop    esp
  41f1fc:	(bad)  
  41f1fe:	mov    BYTE PTR [ecx-0x71cc24ed],ch
  41f204:	pushf  
  41f205:	mov    edi,0x2df6d436
  41f20a:	add    bh,dh
  41f20c:	ja     0x41f22d
  41f20e:	cmp    dl,ch
  41f210:	dec    ah
  41f212:	fsubr  DWORD PTR [ebx-0x116aa4da]
  41f218:	call   0x8c47:0xd718107e
  41f21f:	sbb    DWORD PTR [edi+0x4e],edx
  41f222:	or     ebx,DWORD PTR [eax+0x7c]
  41f225:	inc    ebx
  41f226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f227:	dec    eax
  41f228:	mov    al,0x82
  41f22a:	not    bl
  41f22c:	fld    QWORD PTR [ebp-0x3e9835c4]
  41f232:	xchg   esi,eax
  41f233:	shr    BYTE PTR [esi+0x7e71f420],1
  41f239:	iret   
  41f23a:	std    
  41f23b:	mov    esp,0xde6b8ff7
  41f240:	into   
  41f241:	add    DWORD PTR [eax],ebp
  41f243:	sbb    al,0xdf
  41f245:	cmp    ah,bl
  41f247:	cmp    DWORD PTR [ecx],0x2f6c5748
  41f24d:	fidiv  DWORD PTR [esi-0x68]
  41f250:	mov    esp,0xdb091ddb
  41f255:	mov    ds:0x180cad5,al
  41f25a:	adc    BYTE PTR [edi],cl
  41f25c:	std    
  41f25d:	ret    
  41f25e:	mov    cs,WORD PTR [edi]
  41f260:	push   0x6ed71564
  41f265:	jmp    0xc8397361
  41f26a:	rcl    DWORD PTR [esi-0x75],0xc
  41f26e:	adc    ebx,eax
  41f270:	mov    dh,0xc4
  41f272:	lock shr cl,0xef
  41f276:	add    ebp,DWORD PTR ds:0xa3cb6a
  41f27c:	mov    cl,BYTE PTR ds:0x600a02bb
  41f282:	ds pop ss
  41f284:	mov    ch,0xe7
  41f286:	inc    eax
  41f287:	dec    ebp
  41f288:	pop    ebp
  41f289:	jo     0x41f24b
  41f28b:	jecxz  0x41f24f
  41f28d:	fild   DWORD PTR [edx-0x78]
  41f290:	int    0x6d
  41f292:	loopne 0x41f309
  41f294:	call   0x50aafef0
  41f299:	xor    cl,dl
  41f29b:	xchg   esi,eax
  41f29c:	shl    BYTE PTR [edx],0x7c
  41f29f:	neg    BYTE PTR [edi+0x36]
  41f2a2:	lods   al,BYTE PTR ds:[esi]
  41f2a3:	in     eax,dx
  41f2a4:	repz jb 0x41f2e6
  41f2a7:	test   BYTE PTR [ecx-0x66c1b6ae],bl
  41f2ad:	stos   DWORD PTR es:[edi],eax
  41f2ae:	fiadd  DWORD PTR [ecx+0x36f2a25b]
  41f2b4:	les    eax,FWORD PTR [esi+eax*1+0x6b385a3f]
  41f2bb:	inc    edx
  41f2bc:	lds    esi,FWORD PTR [esi]
  41f2be:	sti    
  41f2bf:	inc    eax
  41f2c0:	(bad)  
  41f2c1:	imul   ebp,DWORD PTR [eax-0x31],0x4f9dd268
  41f2c8:	pop    ds
  41f2c9:	pop    ds
  41f2ca:	imul   ecx,DWORD PTR [eax-0x54f2cac5],0xd849166c
  41f2d4:	es sub al,0x4c
  41f2d7:	stc    
  41f2d8:	dec    ecx
  41f2d9:	jp     0x41f321
  41f2db:	jns    0x41f2ce
  41f2dd:	mov    al,0x26
  41f2df:	mov    edi,0x403aa99c
  41f2e4:	xchg   ebx,eax
  41f2e5:	push   edi
  41f2e6:	shl    DWORD PTR [edi+edx*1],1
  41f2e9:	xchg   ebx,ecx
  41f2eb:	dec    esi
  41f2ed:	gs pop ebx
  41f2ef:	stos   DWORD PTR es:[edi],eax
  41f2f0:	adc    edx,DWORD PTR [edi+edi*4+0x5]
  41f2f4:	sahf   
  41f2f5:	pushf  
  41f2f6:	push   ebp
  41f2f7:	pop    edi
  41f2f8:	or     edi,DWORD PTR [edx]
  41f2fa:	stos   DWORD PTR es:[edi],eax
  41f2fb:	adc    al,0xaf
  41f2fd:	out    dx,al
  41f2fe:	jmp    0xe307c349
  41f303:	xchg   BYTE PTR [ecx],cl
  41f305:	lds    esi,FWORD PTR [ecx+0x76]
  41f308:	lods   al,BYTE PTR ds:[esi]
  41f309:	and    al,0x86
  41f30b:	ror    DWORD PTR [edx],0xfc
  41f30e:	enter  0xe3b3,0xe1
  41f312:	lock imul ebp,DWORD PTR [eax],0x5e
  41f316:	push   ds
  41f317:	jae    0x41f2b5
  41f319:	repz and DWORD PTR [ebp+0xb73489],esi
  41f320:	add    BYTE PTR [eax],al
  41f322:	sub    esp,DWORD PTR [ecx-0x934ebbd]
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	or     ch,0xf5
  41f330:	lods   eax,DWORD PTR ds:[esi]
  41f331:	in     al,0x24
  41f333:	outs   dx,BYTE PTR ds:[esi]
  41f334:	add    DWORD PTR [eax],eax
  41f336:	cmc    
  41f337:	add    al,0x0
  41f339:	add    BYTE PTR [ebp-0x33],bl
  41f33c:	rcl    BYTE PTR [ebp+0x7db0e5e4],1
  41f342:	jb     0x41f321
  41f344:	pop    edi
  41f345:	out    0x6f,eax
  41f347:	and    ah,bh
  41f349:	or     DWORD PTR [eax+0x3e],edx
  41f34c:	aaa    
  41f34d:	dec    ebx
  41f34e:	or     eax,0xcb7e5354
  41f353:	dec    esp
  41f354:	jmp    0xba3:0x4a2e3833
  41f35b:	(bad)  
  41f35d:	xchg   esi,eax
  41f35e:	cmp    BYTE PTR [esi-0x305c3351],dl
  41f364:	mov    ebp,DWORD PTR [eax-0xf67185]
  41f36a:	fcom   QWORD PTR [ecx-0x6152ec00]
  41f370:	push   edi
  41f371:	jo     0x41f363
  41f373:	sub    ah,BYTE PTR [edx]
  41f375:	cmp    al,0x6
  41f377:	pop    ecx
  41f378:	push   ss
  41f379:	dec    ebp
  41f37a:	mov    dl,0x1c
  41f37c:	aaa    
  41f37d:	inc    ebp
  41f37e:	sbb    edi,0xffffffc5
  41f381:	mov    edx,0x75837a89
  41f386:	push   es
  41f387:	lds    ebx,FWORD PTR [edx-0x2b0fe35b]
  41f38d:	mov    esp,0x89bbde80
  41f392:	int    0xd4
  41f394:	sbb    cx,WORD PTR ds:0x51d74518
  41f39b:	xchg   esp,eax
  41f39c:	mov    WORD PTR [edi+ebx*1-0x15e3b964],cs
  41f3a3:	mov    al,ds:0x7f82ad1c
  41f3a8:	fcom   QWORD PTR [ecx]
  41f3aa:	cmc    
  41f3ab:	pop    ecx
  41f3ac:	call   FWORD PTR [ecx+0x4b764a8d]
  41f3b2:	ror    BYTE PTR [esi],1
  41f3b4:	jmp    0x13238ed5
  41f3b9:	sbb    DWORD PTR [ebx+0x10],esp
  41f3bc:	addr16 (bad) 
  41f3be:	xlat   BYTE PTR ds:[ebx]
  41f3bf:	or     esp,edi
  41f3c1:	mov    ss,WORD PTR [esi*1-0x39d1989]
  41f3c8:	pop    edi
  41f3c9:	aaa    
  41f3ca:	test   DWORD PTR [eax],ecx
  41f3cc:	push   0x76
  41f3ce:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41f3d0:	cs cmp al,0x3b
  41f3d3:	call   0x68d8:0x210d9517
  41f3da:	mov    ebp,0x5114d1dc
  41f3df:	(bad)  [ecx]
  41f3e1:	push   ss
  41f3e2:	pusha  
  41f3e3:	call   0x6eda:0x59eeb26
  41f3ea:	call   0xc2ade922
  41f3ef:	test   bh,0xb0
  41f3f2:	cmp    cl,bh
  41f3f4:	dec    ebp
  41f3f5:	dec    edx
  41f3f6:	outs   dx,BYTE PTR ds:[esi]
  41f3f7:	loopne 0x41f419
  41f3f9:	push   cs
  41f3fa:	add    cl,bh
  41f3fc:	std    
  41f3fd:	jge    0x41f38d
  41f3ff:	(bad)
  41f402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f403:	fs mov eax,0x9d09102f
  41f409:	mov    eax,ds:0xa5fdd55a
  41f40e:	ret    
  41f40f:	or     al,0xe1
  41f411:	in     al,0x76
  41f413:	mov    bh,0x64
  41f415:	adc    al,0x9d
  41f417:	(bad)  
  41f418:	push   edx
  41f419:	dec    edx
  41f41a:	loopne 0x41f472
  41f41c:	into   
  41f41d:	cmp    BYTE PTR [ecx-0x2cb4f0c6],0x69
  41f424:	stc    
  41f425:	pushf  
  41f426:	sbb    bh,ch
  41f428:	add    esp,DWORD PTR [edx]
  41f42a:	jnp    0x41f3d3
  41f42c:	mov    bl,0xb6
  41f42e:	pop    es
  41f42f:	lea    edi,ds:0xeca7ef29
  41f435:	mov    edi,0xa8166d11
  41f43a:	adc    BYTE PTR ss:[esi+ebx*2],al
  41f43e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f43f:	dec    esi
  41f440:	mov    ebp,0x64cd22ef
  41f445:	das    
  41f446:	cmp    al,al
  41f448:	and    al,BYTE PTR [ebp+0x1aff1d58]
  41f44e:	push   esp
  41f44f:	ds (bad) 
  41f454:	aas    
  41f455:	xchg   ecx,eax
  41f456:	outs   dx,DWORD PTR ds:[esi]
  41f457:	inc    esp
  41f458:	loope  0x41f468
  41f45a:	jg     0x41f4c3
  41f45c:	popf   
  41f45d:	pop    ebp
  41f45e:	sbb    eax,ecx
  41f460:	sti    
  41f461:	or     ecx,DWORD PTR [esi+0x45]
  41f464:	stos   BYTE PTR es:[edi],al
  41f465:	popa   
  41f466:	sbb    BYTE PTR [edx-0x63e64ab4],dh
  41f46c:	push   0x8be95519
  41f471:	inc    ebx
  41f472:	rcl    BYTE PTR [esi],0x75
  41f475:	rol    edi,1
  41f477:	push   edx
  41f478:	inc    esi
  41f479:	jmp    0xa9e6:0x7e87a1a3
  41f480:	ins    DWORD PTR es:[edi],dx
  41f481:	sti    
  41f482:	(bad)  
  41f484:	mov    cl,BYTE PTR [ebx]
  41f486:	push   ds
  41f487:	data16 mov dh,0x2e
  41f48a:	and    BYTE PTR [edi+ebx*1],cl
  41f48d:	cdq    
  41f48e:	mov    bh,0x96
  41f490:	ror    BYTE PTR [eax+eiz*4],0x2e
  41f494:	clc    
  41f495:	mov    bl,0x38
  41f497:	dec    ebx
  41f498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f499:	inc    esp
  41f49a:	test   esp,edx
  41f49c:	cmp    dl,ah
  41f49e:	lea    eax,[ebx-0x7f]
  41f4a1:	out    dx,eax
  41f4a2:	and    DWORD PTR [ecx],esp
  41f4a4:	aad    0xf
  41f4a6:	xor    al,0xb5
  41f4a8:	popf   
  41f4a9:	xchg   esp,eax
  41f4aa:	inc    esp
  41f4ab:	pop    ss
  41f4ac:	retf   
  41f4ad:	mov    bh,0xae
  41f4af:	repnz sahf 
  41f4b1:	jge    0x41f4f5
  41f4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4b4:	pop    edx
  41f4b5:	fmul   QWORD PTR [esi]
  41f4b7:	add    ch,BYTE PTR [ebx*1-0x1aacd418]
  41f4be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4bf:	push   edx
  41f4c0:	dec    edx
  41f4c1:	mov    ebp,0x2f6bffcf
  41f4c6:	int    0xcf
  41f4c8:	jo     0x41f470
  41f4ca:	jl     0x41f4d6
  41f4cc:	and    DWORD PTR [eax],esi
  41f4ce:	xchg   DWORD PTR [ebx-0x161d5f0d],eax
  41f4d4:	(bad)  
  41f4d5:	hlt    
  41f4d6:	jmp    0x4086:0x13f8cbfe
  41f4dd:	sbb    eax,0x253b6674
  41f4e2:	sahf   
  41f4e3:	std    
  41f4e4:	inc    ecx
  41f4e5:	out    dx,eax
  41f4e6:	sti    
  41f4e7:	dec    BYTE PTR [eax]
  41f4e9:	adc    ebp,DWORD PTR [edx+0x3a]
  41f4ec:	stc    
  41f4ed:	mov    ds:0x43e31e2a,al
  41f4f2:	inc    esp
  41f4f3:	dec    eax
  41f4f4:	out    0x3a,eax
  41f4f6:	or     dl,BYTE PTR [ebx]
  41f4f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f9:	or     al,0x2d
  41f4fb:	pop    ebp
  41f4fc:	cmp    eax,0x841484a1
  41f501:	xchg   edx,eax
  41f502:	jmp    0xf229301f
  41f507:	mov    al,ds:0xdec6c877
  41f50c:	data16 mov dl,0x49
  41f50f:	or     BYTE PTR [eax],ah
  41f511:	(bad)  
  41f512:	mov    edx,0x278c9895
  41f517:	ror    esp,cl
  41f519:	push   esp
  41f51a:	xlat   BYTE PTR ds:[ebx]
  41f51b:	(bad)  
  41f51c:	sahf   
  41f51d:	push   edx
  41f51e:	xchg   edx,eax
  41f51f:	xchg   edi,eax
  41f520:	clc    
  41f521:	daa    
  41f522:	shl    BYTE PTR [edi],cl
  41f524:	pop    esi
  41f525:	pop    esp
  41f526:	les    esp,FWORD PTR [ebx]
  41f528:	out    0x9f,al
  41f52a:	dec    eax
  41f52b:	push   eax
  41f52c:	stos   BYTE PTR es:[edi],al
  41f52d:	xchg   ebp,eax
  41f52e:	addr16 pusha 
  41f530:	xchg   BYTE PTR [ebx+0x17a7f38],ah
  41f536:	mov    ah,0xd8
  41f538:	mov    BYTE PTR [edx+0x3ea79db6],dh
  41f53e:	cmp    al,BYTE PTR [edx]
  41f540:	popf   
  41f541:	jbe    0x41f58a
  41f543:	and    DWORD PTR [ebp+0x67],ebx
  41f546:	into   
  41f547:	out    dx,al
  41f548:	lahf   
  41f549:	pop    ebp
  41f54a:	sti    
  41f54b:	push   ebp
  41f54c:	jnp    0x41f50e
  41f54e:	fst    QWORD PTR [eax]
  41f550:	ret    0x8f1d
  41f553:	aas    
  41f554:	ins    BYTE PTR es:[edi],dx
  41f555:	lds    ebx,FWORD PTR [ebx+ecx*4]
  41f558:	call   0x618:0xe11b3515
  41f55f:	mov    eax,0x7d7cd9cb
  41f564:	(bad)  
  41f565:	cmp    DWORD PTR [ebx+ebx*2-0x54],esi
  41f569:	ins    DWORD PTR es:[edi],dx
  41f56a:	and    al,0x3
  41f56c:	pop    ecx
  41f56d:	pop    es
  41f56e:	(bad)  
  41f56f:	cmp    al,0xdb
  41f571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f572:	add    BYTE PTR [esi-0x33],ah
  41f575:	cmp    bh,BYTE PTR [ebp-0x41d52f06]
  41f57b:	cwde   
  41f57c:	enter  0xe663,0xa
  41f580:	rcr    BYTE PTR [ebx+0x5bdd490a],0xa2
  41f587:	xchg   edi,eax
  41f588:	pop    eax
  41f589:	popf   
  41f58a:	mov    bh,0xb6
  41f58c:	les    ebp,FWORD PTR ds:0x14413ac2
  41f592:	or     eax,0xd4077414
  41f597:	mov    dh,0x8a
  41f599:	fdiv   st(2),st
  41f59b:	sbb    al,0xd0
  41f59d:	mov    BYTE PTR [edx+0x236982e7],al
  41f5a3:	jo     0x41f579
  41f5a5:	test   eax,0x525754b9
  41f5aa:	push   es
  41f5ab:	rcr    BYTE PTR [ebp+0x13],1
  41f5ae:	xchg   ecx,eax
  41f5af:	pop    esi
  41f5b0:	cmp    eax,0x240b39f
  41f5b5:	and    BYTE PTR [esi],cl
  41f5b7:	jmp    0xa49e:0xc4cbd13c
  41f5be:	(bad)  
  41f5bf:	call   0x94f41cdb
  41f5c4:	pop    ebx
  41f5c5:	jne    0x41f5fb
  41f5c7:	ror    BYTE PTR [edx],0x2e
  41f5ca:	jmp    0x41f579
  41f5cc:	jb     0x41f63b
  41f5ce:	add    edx,eax
  41f5d0:	out    dx,al
  41f5d1:	push   ds
  41f5d2:	adc    eax,DWORD PTR [edx+edx*1-0x68]
  41f5d6:	cld    
  41f5d7:	push   ecx
  41f5d8:	mov    bh,0x81
  41f5da:	test   eax,0x4a8da5bc
  41f5df:	or     al,BYTE PTR [esi]
  41f5e1:	rcr    DWORD PTR [ebp-0x87a2a5a],cl
  41f5e7:	dec    ebx
  41f5e8:	xor    eax,0xbb1ab590
  41f5ed:	stos   DWORD PTR es:[edi],eax
  41f5ee:	fild   DWORD PTR [ebp+0x3086a10d]
  41f5f4:	mov    esi,0x680a36c2
  41f5f9:	pop    edx
  41f5fa:	dec    esp
  41f5fb:	add    al,0xa6
  41f5fd:	in     eax,dx
  41f5fe:	dec    ebx
  41f5ff:	mov    cl,0x50
  41f601:	mov    esp,0xcd89f237
  41f606:	or     ebp,eax
  41f608:	retf   0xd710
  41f60b:	or     al,0x2
  41f60d:	sahf   
  41f60e:	aas    
  41f60f:	es sbb eax,0xcc635112
  41f615:	cmc    
  41f616:	les    eax,FWORD PTR [esi-0x2]
  41f619:	adc    BYTE PTR [eax+0x44],bh
  41f61c:	mov    edx,0x2aa2f3ff
  41f621:	js     0x41f67a
  41f623:	in     al,0xc8
  41f625:	pop    esi
  41f626:	jecxz  0x41f5c7
  41f628:	add    DWORD PTR ds:0x943932ae,esi
  41f62e:	(bad)  
  41f630:	jno    0x41f699
  41f632:	sbb    DWORD PTR [eax+ecx*2],edx
  41f635:	fistp  WORD PTR [edx]
  41f637:	aas    
  41f638:	rcr    BYTE PTR [edi-0x5c],cl
  41f63b:	int3   
  41f63c:	mov    al,0x1d
  41f63e:	call   0xb968:0x9a2e79d0
  41f645:	or     BYTE PTR [ebx+0x2f],0xb4
  41f649:	imul   BYTE PTR [ebp-0x19]
  41f64c:	(bad)  
  41f64e:	jp     0x41f5d0
  41f650:	retf   
  41f651:	sub    DWORD PTR [ebp-0x6e],eax
  41f654:	repz cli 
  41f656:	ins    DWORD PTR es:[edi],dx
  41f657:	aam    0xd9
  41f659:	push   edi
  41f65a:	lock add BYTE PTR [edi+0x6cbb9aa6],bh
  41f661:	js     0x41f63c
  41f663:	xsha256 (bad)
  41f664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f665:	pop    ss
  41f666:	adc    al,0xa1
  41f668:	xor    DWORD PTR ds:0x1658eda2,edi
  41f66e:	add    al,0x87
  41f670:	aas    
  41f671:	or     ebx,0xa31f9bf9
  41f677:	push   cs
  41f678:	leave  
  41f679:	mov    ebx,DWORD PTR [edx-0x643d4305]
  41f67f:	sahf   
  41f680:	cs gs mov cl,0x64
  41f684:	inc    edi
  41f685:	dec    edx
  41f686:	inc    esi
  41f687:	mov    dl,0xab
  41f689:	les    ecx,FWORD PTR [esi]
  41f68b:	xor    al,0xcc
  41f68d:	push   esp
  41f68e:	jno    0x41f6f4
  41f690:	setns  BYTE PTR [edx-0x4a]
  41f694:	inc    ebx
  41f695:	add    dh,bh
  41f697:	fwait
  41f698:	push   0xd99f0ce2
  41f69d:	push   edx
  41f69e:	mov    edi,0x3633e398
  41f6a3:	pop    ds
  41f6a4:	rcl    DWORD PTR [eax],1
  41f6a6:	imul   eax,DWORD PTR [eax+0x4cb68bf],0x58
  41f6ad:	xor    ch,BYTE PTR [esi-0x4eb8770a]
  41f6b3:	pop    esi
  41f6b4:	mov    DWORD PTR [edx-0x58b9d598],ebx
  41f6ba:	and    edi,esi
  41f6bc:	xchg   dh,dl
  41f6be:	sbb    ecx,DWORD PTR [esi-0x1]
  41f6c1:	call   0xd5650ed
  41f6c6:	push   0x8ecf996d
  41f6cb:	retf   
  41f6cc:	inc    ecx
  41f6cd:	jno    0x41f6d9
  41f6cf:	xchg   esp,eax
  41f6d0:	push   edi
  41f6d1:	fisttp QWORD PTR ds:0x7c0743d3
  41f6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6d8:	ror    BYTE PTR [ebx-0x4b013fde],cl
  41f6de:	pop    ss
  41f6df:	inc    esi
  41f6e0:	mov    bh,BYTE PTR [edi]
  41f6e2:	jg     0x41f6ab
  41f6e4:	pop    esp
  41f6e5:	adc    ebx,esp
  41f6e7:	ror    eax,1
  41f6e9:	fnstsw WORD PTR ss:[esi+0x39]
  41f6ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6ee:	add    BYTE PTR [edi+edi*1+0x1d7894f4],bh
  41f6f5:	xor    BYTE PTR [esi+0x669a80da],0x27
  41f6fc:	xor    al,0x9b
  41f6fe:	dec    esp
  41f6ff:	push   cs
  41f700:	std    
  41f701:	daa    
  41f702:	xor    eax,0xa06cccfe
  41f707:	mov    cl,0x5e
  41f709:	sbb    eax,0x5d34fde9
  41f70e:	cld    
  41f70f:	sbb    cl,BYTE PTR [ecx-0x2cbe69eb]
  41f715:	xor    eax,0xb52c813d
  41f71a:	mov    bh,0x87
  41f71c:	and    eax,DWORD PTR [edx]
  41f71e:	clc    
  41f71f:	cwde   
  41f720:	push   0xffffffde
  41f722:	pusha  
  41f723:	inc    edi
  41f724:	test   DWORD PTR [ebx-0x5a15969a],ecx
  41f72a:	and    eax,0x4153a270
  41f72f:	inc    eax
  41f730:	pop    esp
  41f731:	pop    es
  41f732:	xchg   DWORD PTR [edi+0x5e],esp
  41f735:	mov    ch,0x3f
  41f737:	push   eax
  41f738:	mov    bl,0xac
  41f73a:	jns    0x41f723
  41f73c:	(bad)  
  41f73d:	pop    ecx
  41f73e:	or     al,0x6e
  41f740:	add    eax,0x7e8b1533
  41f745:	cmc    
  41f746:	cld    
  41f747:	stos   DWORD PTR es:[edi],eax
  41f748:	mov    DWORD PTR [eax-0x15],edi
  41f74b:	push   esp
  41f74c:	dec    ebx
  41f74d:	sub    DWORD PTR [edx+0x568949da],esi
  41f753:	add    BYTE PTR [eax+0x3bf0db74],bh
  41f759:	xor    DWORD PTR [esi],ebp
  41f75b:	jnp    0x41f722
  41f75d:	adc    BYTE PTR [ebp+0x797f43db],cl
  41f763:	mov    DWORD PTR [edx+0x2],edi
  41f766:	icebp  
  41f767:	popf   
  41f768:	mov    bl,0x18
  41f76a:	mov    ebp,0xf7efa1cb
  41f76f:	sub    DWORD PTR [ecx+0x43],edi
  41f772:	sub    eax,0xf15e1d73
  41f777:	(bad)  
  41f778:	cmc    
  41f779:	fsubr  QWORD PTR [eax-0x29378a10]
  41f77f:	call   0xeaf2:0x9bbfa267
  41f786:	mov    esp,0x1d1c9e10
  41f78b:	mov    bh,0x92
  41f78d:	pop    ecx
  41f78f:	sbb    al,0xbc
  41f791:	sbb    esi,edx
  41f793:	push   0xe9dd368a
  41f798:	punpcklwd mm7,DWORD PTR [esi+0x30]
  41f79c:	inc    edx
  41f79d:	test   ch,0x88
  41f7a0:	dec    edx
  41f7a1:	ror    BYTE PTR [esi+0x78],1
  41f7a4:	outs   dx,DWORD PTR ds:[esi]
  41f7a5:	mov    dh,bl
  41f7a7:	jae    0x41f7ff
  41f7a9:	sbb    DWORD PTR [esi+0x7b74db27],ecx
  41f7af:	scas   al,BYTE PTR es:[edi]
  41f7b0:	in     al,0x3c
  41f7b2:	nop
  41f7b3:	rcl    DWORD PTR gs:[esi+0xe0abd6d],1
  41f7ba:	sub    al,0x61
  41f7bc:	push   cs
  41f7bd:	ins    BYTE PTR es:[edi],dx
  41f7be:	(bad)  
  41f7bf:	jg     0x41f81f
  41f7c1:	add    ebp,DWORD PTR [bx]
  41f7c4:	push   es
  41f7c5:	mov    ch,0x9b
  41f7c7:	mov    ds:0x6c02e10e,eax
  41f7cc:	xchg   edx,eax
  41f7cd:	cdq    
  41f7ce:	dec    ecx
  41f7cf:	loope  0x41f77b
  41f7d1:	mov    al,ds:0x472543f4
  41f7d6:	and    ebp,DWORD PTR [esi+0x47]
  41f7d9:	adc    eax,0x40af7ae7
  41f7de:	xchg   ebx,eax
  41f7df:	push   esi
  41f7e0:	mov    ch,0x90
  41f7e2:	retf   0xf39f
  41f7e5:	adc    BYTE PTR [edx-0x97e0c7],0x1a
  41f7ec:	jno    0x41f818
  41f7ee:	lods   al,BYTE PTR ds:[esi]
  41f7ef:	ins    WORD PTR es:[edi],dx
  41f7f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7f2:	cmp    BYTE PTR [edx],0xe4
  41f7f5:	push   eax
  41f7f6:	into   
  41f7f7:	xchg   ebx,eax
  41f7f8:	outs   dx,DWORD PTR ds:[esi]
  41f7f9:	mov    ch,0xd3
  41f7fb:	pop    ecx
  41f7fc:	aad    0xb3
  41f7fe:	xor    ah,BYTE PTR [ebp+0x17dda567]
  41f804:	retf   0x6bca
  41f807:	repz repz jmp 0x80b905e9
  41f80e:	or     BYTE PTR [edx],dh
  41f810:	into   
  41f811:	es pop edx
  41f813:	xchg   edi,eax
  41f814:	sub    ch,BYTE PTR ds:0x58b582af
  41f81a:	jecxz  0x41f88b
  41f81c:	or     BYTE PTR [ecx-0x4ae4001a],bh
  41f822:	imul   ecx,ecx,0xa18d904f
  41f828:	jmp    0x41f8a8
  41f82a:	adc    ch,BYTE PTR [edx+edx*4]
  41f82d:	add    al,BYTE PTR ds:0x48000000
  41f833:	mul    BYTE PTR fs:[eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	add    BYTE PTR es:[eax],dh
  41f841:	cld    
  41f842:	sbb    DWORD PTR [ebx+0x1],esi
  41f845:	add    ch,dh
  41f847:	add    al,0x0
  41f849:	add    cl,ah
  41f84b:	cmp    cl,dh
  41f84d:	ins    BYTE PTR es:[edi],dx
  41f84e:	shr    DWORD PTR [ebx-0x6b],0xdf
  41f852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f853:	out    0x7c,eax
  41f855:	mov    dh,0xb6
  41f857:	into   
  41f858:	imul   ecx
  41f85a:	jge    0x41f819
  41f85c:	or     bl,al
  41f85e:	adc    al,0xf7
  41f860:	adc    DWORD PTR [ebp+0x7],eax
  41f863:	or     esi,DWORD PTR [ecx-0x59d9e7c4]
  41f869:	sub    eax,DWORD PTR [ebx-0x6d7faa77]
  41f86f:	not    BYTE PTR [ebx+edx*4-0x5d7e1078]
  41f876:	ret    0x2ebd
  41f879:	cwde   
  41f87a:	and    al,0x6a
  41f87c:	inc    edx
  41f87d:	stos   DWORD PTR es:[edi],eax
  41f87e:	dec    edi
  41f87f:	loope  0x41f8e3
  41f881:	in     al,0xb7
  41f883:	in     eax,0x66
  41f885:	sbb    BYTE PTR [ebp-0x322387cc],ah
  41f88b:	jb     0x41f901
  41f88d:	sbb    DWORD PTR [esi+0x33],esp
  41f890:	mov    eax,0xff8ad9e1
  41f895:	fnsave [ebx]
  41f897:	int3   
  41f898:	fucomip st,st(3)
  41f89a:	push   es
  41f89b:	xor    BYTE PTR [edx-0x2b],bl
  41f89e:	pop    ebp
  41f89f:	fisub  DWORD PTR [ebx+0x25]
  41f8a2:	xchg   ecx,eax
  41f8a3:	mov    ebp,0xc55169b9
  41f8a8:	xlat   BYTE PTR ds:[ebx]
  41f8a9:	(bad)  
  41f8aa:	push   ecx
  41f8ab:	data16 mov WORD PTR [ebp+0x5],cs
  41f8af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8b0:	ins    BYTE PTR es:[edi],dx
  41f8b1:	(bad)  
  41f8b3:	jmp    0x41f925
  41f8b5:	retf   0x2688
  41f8b8:	psubusw mm0,QWORD PTR [eax+0x463d7711]
  41f8bf:	test   eax,0xad2b5447
  41f8c4:	sbb    ebx,DWORD PTR [esi+0x5d97cabe]
  41f8ca:	test   DWORD PTR [edi],edi
  41f8cc:	rcr    BYTE PTR [ebx-0xa],cl
  41f8cf:	push   edi
  41f8d0:	shr    DWORD PTR [ecx+0x50],0xf3
  41f8d4:	leave  
  41f8d5:	cli    
  41f8d6:	inc    ebp
  41f8d7:	ins    BYTE PTR es:[edi],dx
  41f8d8:	in     al,0xba
  41f8da:	jg     0x41f8a7
  41f8dc:	jbe    0x41f8ee
  41f8de:	add    ecx,ebx
  41f8e0:	sbb    ah,BYTE PTR [edi]
  41f8e2:	aas    
  41f8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8e4:	dec    edi
  41f8e5:	xor    DWORD PTR [ebp+0x3044a6a1],ebx
  41f8eb:	lds    eax,FWORD PTR [ecx-0x5]
  41f8ee:	cmp    dl,ah
  41f8f0:	push   ds
  41f8f1:	and    ecx,0x7fadbfc
  41f8f7:	jmp    0xcf913eb1
  41f8fc:	cs enter 0xf70a,0xfc
  41f901:	fidiv  WORD PTR ss:[edi-0x5afb8d25]
  41f908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f909:	fs ret 
  41f90b:	fsubr  QWORD PTR [ecx+0x1e]
  41f90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f90f:	fisttp DWORD PTR [edi]
  41f911:	add    edx,DWORD PTR [eax+0x5d7775a5]
  41f917:	xchg   ecx,eax
  41f918:	test   al,0x1d
  41f91a:	xor    ch,ch
  41f91c:	out    0x0,eax
  41f91e:	gs dec ecx
  41f920:	xchg   BYTE PTR [edx],dl
  41f922:	pop    esp
  41f923:	(bad)  
  41f924:	push   ds
  41f925:	sbb    al,0xba
  41f927:	arpl   WORD PTR [esi],sp
  41f929:	cmp    dl,BYTE PTR [esi+0x1cfa36f5]
  41f92f:	gs stos WORD PTR es:[edi],ax
  41f932:	sbb    esi,eax
  41f934:	xor    eax,DWORD PTR [edx+ebp*8+0xd055c63]
  41f93b:	sbb    ebp,DWORD PTR [edx+0x3ee993ee]
  41f941:	loope  0x41f960
  41f943:	add    BYTE PTR [ebx-0x60539adf],bh
  41f949:	jle    0x41f98d
  41f94b:	retf   0x86fc
  41f94e:	sbb    ebx,edx
  41f950:	shl    BYTE PTR [esi+ecx*4-0x1083565a],0xcd
  41f958:	and    edx,0x2e6a214
  41f95e:	adc    bh,BYTE PTR [edi+ecx*2]
  41f961:	pop    ebp
  41f962:	dec    WORD PTR [ecx+0x4b645996]
  41f969:	cmp    eax,0xb9047950
  41f96e:	inc    DWORD PTR [ebx+0x14]
  41f971:	stos   BYTE PTR es:[edi],al
  41f972:	lock jmp 0x41f901
  41f975:	scas   al,BYTE PTR es:[edi]
  41f976:	mov    ch,0xb0
  41f978:	push   ebp
  41f979:	pop    ds
  41f97a:	mov    esi,0x5f3e374e
  41f97f:	ja     0x41f92f
  41f981:	addr16 out 0x34,eax
  41f984:	int    0x34
  41f986:	mov    DWORD PTR [ebx],eax
  41f988:	aaa    
  41f989:	inc    esi
  41f98a:	pop    si
  41f98c:	loopne 0x41f992
  41f98e:	jns    0x41f959
  41f990:	in     al,0x52
  41f992:	sbb    DWORD PTR [eax-0x548f433b],edi
  41f998:	sbb    eax,0x46f86291
  41f99d:	jnp    0x41f925
  41f99f:	or     BYTE PTR [edi+0x48],bh
  41f9a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9a3:	mov    edi,0x18467ffc
  41f9a8:	dec    ecx
  41f9a9:	fimul  DWORD PTR [ebp+0x7c]
  41f9ac:	fcom   st(2)
  41f9ae:	adc    ch,ch
  41f9b0:	ja     0x41fa31
  41f9b2:	sbb    al,0x0
  41f9b4:	ret    
  41f9b5:	das    
  41f9b6:	int3   
  41f9b7:	xor    al,0x99
  41f9b9:	push   esi
  41f9ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9bb:	and    BYTE PTR [esi],bh
  41f9bd:	inc    esi
  41f9be:	mov    ss,WORD PTR [ecx]
  41f9c0:	fs sbb al,0x63
  41f9c3:	loope  0x41f9b7
  41f9c5:	xchg   esi,eax
  41f9c6:	inc    ebp
  41f9c7:	mov    edx,0xdf40aef4
  41f9cc:	out    dx,eax
  41f9cd:	push   es
  41f9ce:	lods   eax,DWORD PTR ds:[esi]
  41f9cf:	lods   eax,DWORD PTR ds:[esi]
  41f9d0:	test   eax,0x1404310f
  41f9d5:	lods   al,BYTE PTR ds:[esi]
  41f9d6:	imul   ebp,DWORD PTR [ebx],0xffffffc7
  41f9d9:	lods   al,BYTE PTR es:[esi]
  41f9db:	cwde   
  41f9dc:	push   esi
  41f9dd:	dec    ecx
  41f9de:	sbb    DWORD PTR [ecx],esp
  41f9e0:	rol    DWORD PTR [esi],1
  41f9e2:	jmp    0x41f99a
  41f9e4:	jno    0x41fa33
  41f9e6:	adc    ah,ch
  41f9e8:	sub    al,0xc5
  41f9ea:	aaa    
  41f9eb:	push   ss
  41f9ec:	mov    edx,0xf3e7dbd4
  41f9f1:	lods   eax,DWORD PTR ds:[esi]
  41f9f2:	adc    eax,0x128ecae3
  41f9f7:	pop    ebx
  41f9f8:	lods   eax,DWORD PTR ds:[esi]
  41f9f9:	mov    ds:0x8136ea3,al
  41f9fe:	or     ah,BYTE PTR [ecx+0x3d]
  41fa01:	lods   al,BYTE PTR ds:[esi]
  41fa02:	not    BYTE PTR [esi+0x1f]
  41fa05:	xor    al,0x9f
  41fa07:	push   0x7cea6163
  41fa0c:	stos   DWORD PTR es:[edi],eax
  41fa0d:	push   0xfb176fd8
  41fa12:	add    al,0xf
  41fa14:	fs in  al,0x47
  41fa17:	push   edi
  41fa18:	jl     0x41f9a9
  41fa1a:	xchg   ebp,eax
  41fa1b:	cwde   
  41fa1c:	cmp    al,0x1d
  41fa1e:	push   cs
  41fa1f:	out    0x4f,eax
  41fa21:	shl    DWORD PTR [ecx+0x3600576d],cl
  41fa27:	(bad)  
  41fa28:	outs   dx,DWORD PTR ds:[esi]
  41fa29:	xor    bh,BYTE PTR [eax+0x34]
  41fa2c:	repz dec esp
  41fa2e:	adc    BYTE PTR [eax],dl
  41fa30:	in     eax,dx
  41fa31:	in     al,dx
  41fa32:	cmp    BYTE PTR [edx+0x10],dh
  41fa35:	inc    eax
  41fa36:	push   esi
  41fa37:	addr16 push 0xce153b9a
  41fa3d:	xor    al,0x2c
  41fa3f:	and    DWORD PTR ds:0x9ee41513,esi
  41fa45:	push   es
  41fa46:	arpl   WORD PTR ds:0x4d07b395,cx
  41fa4c:	add    eax,0x64659869
  41fa51:	xor    DWORD PTR [ecx-0x4051d760],ebx
  41fa57:	inc    esp
  41fa58:	pushf  
  41fa59:	mov    bh,0x3
  41fa5b:	dec    ebx
  41fa5c:	rol    BYTE PTR [ecx-0x2d],cl
  41fa5f:	xchg   edi,eax
  41fa60:	out    0x3,eax
  41fa62:	loope  0x41fa7f
  41fa64:	mov    DWORD PTR [esi-0x55],0x7b2aa9e3
  41fa6b:	push   ebx
  41fa6c:	or     ebx,DWORD PTR [ecx-0x72f3bdae]
  41fa72:	push   esp
  41fa73:	push   ebp
  41fa74:	sub    BYTE PTR [ecx-0x16f59f34],ch
  41fa7a:	shl    DWORD PTR [ebp-0x62],1
  41fa7d:	enter  0x896f,0xb5
  41fa81:	add    DWORD PTR [eax],ecx
  41fa83:	outs   dx,DWORD PTR ds:[esi]
  41fa84:	xchg   ecx,eax
  41fa85:	xlat   BYTE PTR ds:[ebx]
  41fa86:	daa    
  41fa87:	lock dec ebp
  41fa89:	sub    al,0xb2
  41fa8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa8c:	adc    esp,DWORD PTR [edi]
  41fa8e:	je     0x41fa3d
  41fa90:	ret    
  41fa91:	sub    DWORD PTR [edx+ebp*1+0x409c3e14],ecx
  41fa98:	aas    
  41fa99:	dec    edx
  41fa9a:	repnz jmp 0x6701:0x37ec6976
  41faa2:	repnz xchg esi,eax
  41faa5:	adc    al,0x50
  41faa7:	mov    dh,0x2f
  41faa9:	fsubr  QWORD PTR [bx+si-0x20]
  41faad:	push   cs
  41faae:	and    ecx,DWORD PTR [esi+ebx*4]
  41fab1:	xor    bl,BYTE PTR [ebx+0x95670ec]
  41fab7:	rol    ch,cl
  41fab9:	fbstp  TBYTE PTR [ebp+0x3501173]
  41fabf:	mov    al,0x3e
  41fac1:	sub    BYTE PTR [esi],ch
  41fac3:	imul   edi,DWORD PTR [eax+eax*2+0x22],0x3ca6b8da
  41facb:	mov    BYTE PTR [eax-0x12645599],cl
  41fad1:	lds    eax,FWORD PTR [edi]
  41fad3:	sbb    esi,DWORD PTR [esi]
  41fad5:	stos   BYTE PTR es:[edi],al
  41fad6:	sahf   
  41fad7:	mov    ah,0xf0
  41fad9:	jbe    0x41fad9
  41fadb:	mov    WORD PTR [edx],?
  41fadd:	xchg   ebx,eax
  41fade:	retf   0x3e34
  41fae1:	ins    BYTE PTR es:[edi],dx
  41fae2:	mov    edi,0xc1e6b999
  41fae7:	xchg   ebp,eax
  41fae8:	call   0x7bfdca30
  41faed:	test   dh,al
  41faef:	jle    0x41fae8
  41faf1:	mov    ds:0xcfc4e672,al
  41faf6:	xchg   edx,eax
  41faf7:	lea    esp,[ebp+0x4]
  41fafa:	sub    al,0x38
  41fafc:	adc    bh,ch
  41fafe:	in     eax,dx
  41faff:	mov    al,ds:0x23b03ec2
  41fb04:	sbb    al,0x1a
  41fb06:	mov    eax,ds:0x870d2fee
  41fb0b:	push   0x2dabcb51
  41fb10:	mov    ch,0x5d
  41fb12:	retf   0xc500
  41fb15:	cld    
  41fb16:	and    eax,DWORD PTR [edx]
  41fb18:	ds (bad) 
  41fb1a:	mov    al,0xde
  41fb1c:	pusha  
  41fb1d:	jne    0x41fb81
  41fb1f:	aam    0x50
  41fb21:	das    
  41fb22:	out    dx,eax
  41fb23:	jo     0x41fb5b
  41fb25:	cmc    
  41fb26:	mov    cl,0xa6
  41fb28:	pop    esi
  41fb29:	xor    ebp,DWORD PTR [esp+ebp*1+0xacbc4c8]
  41fb30:	test   DWORD PTR ds:0xa616f801,edx
  41fb36:	aaa    
  41fb37:	in     eax,dx
  41fb38:	pop    edi
  41fb39:	jmp    0x6d78:0x2e47c642
  41fb40:	xchg   esi,eax
  41fb41:	int3   
  41fb42:	or     BYTE PTR [eax+eax*4],0x9f
  41fb46:	sub    al,0x1d
  41fb48:	add    eax,0x617392e5
  41fb4d:	int    0xe9
  41fb4f:	dec    edi
  41fb50:	(bad)  
  41fb51:	ins    BYTE PTR es:[edi],dx
  41fb52:	jmp    0x22bc7123
  41fb57:	push   ds
  41fb58:	push   eax
  41fb59:	addr16 sub eax,0xd149792d
  41fb5f:	cdq    
  41fb60:	dec    eax
  41fb61:	jmp    0xe613:0x8199685f
  41fb68:	mov    dh,0x80
  41fb6a:	jmp    0xf8ea9a80
  41fb6f:	in     eax,0x6b
  41fb71:	js     0x41fb88
  41fb73:	mov    ebx,0xc8d6c9a6
  41fb78:	push   0x52
  41fb7a:	cmp    al,0x8d
  41fb7c:	add    eax,0x9c855557
  41fb81:	xor    esp,DWORD PTR [ebx-0x3972bacb]
  41fb87:	inc    ebp
  41fb88:	xchg   edx,eax
  41fb89:	dec    bh
  41fb8b:	test   eax,0x9b2d9a32
  41fb90:	add    eax,0x66e970e7
  41fb95:	leave  
  41fb96:	out    dx,eax
  41fb97:	xor    DWORD PTR [esi+0x1b81616b],ebx
  41fb9d:	and    DWORD PTR [edi-0x2afa1ff7],ecx
  41fba3:	out    dx,eax
  41fba4:	mov    ch,0x4
  41fba6:	pop    ds
  41fba7:	gs in  al,0x38
  41fbaa:	(bad)  
  41fbab:	in     eax,0x7
  41fbad:	mov    WORD PTR [esi+eax*8-0x230a83d2],ds
  41fbb4:	cmp    al,BYTE PTR [esi]
  41fbb6:	pop    edi
  41fbb7:	pop    eax
  41fbb8:	and    BYTE PTR [edi+edx*8+0x39],dh
  41fbbc:	in     al,dx
  41fbbd:	icebp  
  41fbbe:	lea    ebx,[ebx+0x5e]
  41fbc1:	std    
  41fbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbc3:	loopne 0x41fb90
  41fbc5:	add    bl,dl
  41fbc7:	add    eax,0x72e42a89
  41fbcc:	sti    
  41fbcd:	fadd   QWORD PTR ds:0x27a3dd00
  41fbd3:	scas   al,BYTE PTR es:[edi]
  41fbd4:	cld    
  41fbd5:	or     ah,ch
  41fbd7:	loopne 0x41fb61
  41fbd9:	loop   0x41fb68
  41fbdb:	ror    DWORD PTR [ebx],1
  41fbdd:	pop    esp
  41fbde:	and    esi,ebp
  41fbe0:	ror    DWORD PTR [eax+0x4d],cl
  41fbe3:	in     eax,dx
  41fbe4:	pop    ecx
  41fbe5:	dec    ebp
  41fbe6:	lods   al,BYTE PTR ds:[esi]
  41fbe7:	lock loopne 0x41fbb5
  41fbea:	xor    edx,ebp
  41fbec:	and    BYTE PTR [esi-0x4b],ah
  41fbef:	in     eax,dx
  41fbf0:	jl     0x41fbf5
  41fbf2:	xchg   edx,eax
  41fbf3:	ins    DWORD PTR es:[edi],dx
  41fbf4:	shl    BYTE PTR [ebx+0x1a397bb9],0x53
  41fbfb:	adc    al,0xc1
  41fbfd:	(bad)  
  41fbfe:	pop    ecx
  41fbff:	xor    eax,0x4c0946a
  41fc04:	fwait
  41fc05:	dec    eax
  41fc06:	jmp    0x41fbed
  41fc08:	div    DWORD PTR [eax+0x5116320d]
  41fc0e:	cs mov eax,0x43b730ca
  41fc14:	(bad)  [ebx+ecx*4-0x725ff241]
  41fc1b:	int    0xf7
  41fc1d:	je     0x6de5d9ef
  41fc23:	fwait
  41fc24:	inc    edi
  41fc25:	adc    eax,ecx
  41fc27:	xchg   ecx,eax
  41fc28:	jg     0x41fbac
  41fc2a:	int    0x85
  41fc2c:	jg     0x41fca1
  41fc2e:	std    
  41fc2f:	rcr    dl,1
  41fc31:	test   al,0x99
  41fc33:	(bad)  
  41fc34:	shl    DWORD PTR [eax-0x6f363130],1
  41fc3a:	dec    esp
  41fc3b:	xchg   ecx,eax
  41fc3c:	xor    dl,BYTE PTR [ebx+eiz*2]
  41fc3f:	lods   al,BYTE PTR ds:[esi]
  41fc40:	and    BYTE PTR [eax+0x190525d3],0x62
  41fc47:	xor    al,0x2c
  41fc49:	pop    es
  41fc4a:	add    ebx,DWORD PTR [edi]
  41fc4c:	rcr    BYTE PTR [ebp+0x6b],cl
  41fc4f:	jne    0x41fc63
  41fc51:	cmp    dh,ch
  41fc53:	stc    
  41fc54:	jp     0x41fcb6
  41fc56:	inc    DWORD PTR [esi]
  41fc58:	push   0x7b
  41fc5a:	into   
  41fc5b:	cdq    
  41fc5c:	shr    BYTE PTR [ebx+0x58],cl
  41fc5f:	(bad)
  41fc62:	dec    edx
  41fc63:	outs   dx,DWORD PTR ds:[esi]
  41fc64:	cmp    BYTE PTR [edx-0x37],al
  41fc67:	stos   BYTE PTR es:[edi],al
  41fc68:	lahf   
  41fc69:	push   0x3f0661fd
  41fc6e:	imul   esi,DWORD PTR [eax+ebp*4+0x70],0xab2df15a
  41fc76:	(bad)  
  41fc77:	xor    dh,ch
  41fc79:	sbb    esp,edi
  41fc7b:	cmp    BYTE PTR [ebx],0x9f
  41fc7e:	cmp    DWORD PTR [ebp-0x3da71c6a],0x43
  41fc85:	xor    DWORD PTR [eax],ebp
  41fc87:	and    al,0x77
  41fc89:	adc    al,0x4
  41fc8b:	inc    esi
  41fc8c:	cmp    DWORD PTR [ebx-0x23],eax
  41fc8f:	adc    DWORD PTR [esi+0x25],0x64
  41fc93:	pop    es
  41fc94:	push   ebx
  41fc95:	repnz xor eax,0xf3f25231
  41fc9b:	dec    ecx
  41fc9c:	pushf  
  41fc9d:	pop    esi
  41fc9e:	xchg   ebp,eax
  41fc9f:	les    ebp,FWORD PTR ds:0xde5ddb72
  41fca5:	push   es
  41fca6:	shr    DWORD PTR [ebx-0x29],1
  41fca9:	pop    edx
  41fcaa:	xor    BYTE PTR ds:0xd9692e2a,bl
  41fcb0:	jb     0x41fcb6
  41fcb2:	xlat   BYTE PTR ds:[ebx]
  41fcb3:	jae    0x41fcea
  41fcb5:	adc    dh,BYTE PTR [ebx+edi*2]
  41fcb8:	jle    0x41fd06
  41fcba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcbb:	jnp    0x41fca8
  41fcbd:	lock int 0xb8
  41fcc0:	dec    eax
  41fcc1:	test   eax,0xec46dfc9
  41fcc6:	aas    
  41fcc7:	sbb    eax,0xa4a66a5
  41fccc:	add    al,0xbe
  41fcce:	mov    edi,?
  41fcd0:	adc    DWORD PTR [edx+0x2754ce7e],esi
  41fcd6:	pop    eax
  41fcd7:	jno    0x41fc78
  41fcd9:	xor    al,0xd7
  41fcdb:	aam    0xc4
  41fcdd:	sar    BYTE PTR [edi],0x5c
  41fce0:	aam    0x4d
  41fce2:	add    ah,BYTE PTR [edx+0x19]
  41fce5:	jne    0x41fc98
  41fce7:	or     esp,DWORD PTR [edx-0x19]
  41fcea:	jl     0x41fd4a
  41fcec:	sbb    DWORD PTR [esi+edi*1],0x26
  41fcf0:	(bad)  
  41fcf2:	int    0x41
  41fcf4:	ins    DWORD PTR es:[edi],dx
  41fcf5:	arpl   bx,si
  41fcf7:	push   ds
  41fcf8:	(bad)  
  41fcf9:	loope  0x41fd54
  41fcfb:	jg     0x41fd6d
  41fcfd:	jg     0x41fd29
  41fcff:	and    BYTE PTR [ecx-0x5971ca6],dh
  41fd05:	arpl   WORD PTR [esi-0x7],bp
  41fd08:	inc    edx
  41fd09:	dec    edi
  41fd0a:	imul   eax,DWORD PTR [ebx],0x66
  41fd0d:	jae    0x41fc94
  41fd0f:	inc    ecx
  41fd10:	jle    0x41fcbd
  41fd12:	popf   
  41fd13:	cs pusha 
  41fd15:	push   ds
  41fd16:	jmp    DWORD PTR [ecx+0x7a]
  41fd19:	and    esi,DWORD PTR [edi]
  41fd1b:	aaa    
  41fd1c:	push   esp
  41fd1d:	inc    ebp
  41fd1e:	jge    0x41fd19
  41fd20:	adc    eax,edx
  41fd22:	retf   0xd3ee
  41fd25:	mov    eax,ds:0xb2f46503
  41fd2a:	popf   
  41fd2b:	aaa    
  41fd2c:	jnp    0x41fda3
  41fd2e:	ins    DWORD PTR es:[edi],dx
  41fd2f:	cli    
  41fd30:	mov    bl,0xce
  41fd32:	jo     0x41fd4b
  41fd34:	fbstp  TBYTE PTR [ecx]
  41fd36:	je     0x41fd6f
  41fd38:	les    ebx,FWORD PTR [edi-0xe]
  41fd3b:	in     al,0xea
  41fd3d:	clc    
  41fd3e:	xchg   ebx,eax
  41fd3f:	add    BYTE PTR [eax],al
  41fd41:	add    BYTE PTR [edx-0x48ec49e9],ah
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi+0x3da25ddc],dh
  41fd51:	ror    BYTE PTR [esi],1
  41fd53:	js     0x41fd56
  41fd55:	add    ch,dh
  41fd57:	add    al,0x0
  41fd59:	add    bh,dh
  41fd5b:	mov    eax,0x324c9873
  41fd60:	stc    
  41fd61:	(bad)  [eax+0x1ff6fc5b]
  41fd67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd68:	jo     0x41fced
  41fd6a:	jmp    0x41fd09
  41fd6c:	popa   
  41fd6d:	mov    cl,0x6a
  41fd6f:	stc    
  41fd70:	rcl    BYTE PTR [ebp-0x3c325a60],1
  41fd76:	dec    eax
  41fd77:	dec    ecx
  41fd78:	and    eax,0x4f
  41fd7b:	jp     0x41fd9c
  41fd7d:	and    eax,0xbd47731e
  41fd82:	fadd   QWORD PTR [eax-0x16]
  41fd85:	ficom  WORD PTR [esi-0x34f8ed15]
  41fd8b:	pop    es
  41fd8c:	dec    edi
  41fd8d:	retf   0xacb
  41fd90:	rcr    BYTE PTR [ecx+0x56],1
  41fd93:	jno    0x41fd3b
  41fd95:	gs daa 
  41fd97:	or     edx,DWORD PTR [edx+0x1412dbf7]
  41fd9d:	mov    al,ds:0x908a6e93
  41fda2:	pusha  
  41fda3:	(bad)  
  41fda4:	mov    bh,0x8c
  41fda6:	pusha  
  41fda7:	je     0x41fdd4
  41fda9:	out    dx,eax
  41fdaa:	imul   esi,esi,0x4d
  41fdad:	call   0xbde:0x7d086be0
  41fdb4:	xchg   edi,eax
  41fdb5:	inc    edi
  41fdb6:	(bad)  [edi]
  41fdb8:	inc    esp
  41fdb9:	sub    ebx,esi
  41fdbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdbc:	fldenv [esi+0x2c]
  41fdbf:	les    ebx,FWORD PTR [edi]
  41fdc1:	es inc edi
  41fdc3:	clc    
  41fdc4:	dec    edx
  41fdc5:	dec    ecx
  41fdc6:	icebp  
  41fdc7:	fwait
  41fdc8:	ins    DWORD PTR es:[edi],dx
  41fdc9:	inc    esi
  41fdca:	pop    ebx
  41fdcb:	lods   eax,DWORD PTR ds:[esi]
  41fdcc:	aad    0xeb
  41fdce:	and    eax,0xd7abb5b7
  41fdd3:	mov    bl,0x49
  41fdd5:	jp     0x41fddb
  41fdd7:	mov    BYTE PTR [edi],ch
  41fdd9:	jo     0x41fd8c
  41fddb:	dec    eax
  41fddc:	mov    ds:0x76891226,eax
  41fde1:	cwde   
  41fde2:	sahf   
  41fde3:	into   
  41fde4:	loopne 0x41fd75
  41fde6:	lds    ebx,FWORD PTR [edx]
  41fde8:	mov    edx,0xe1559194
  41fded:	ret    
  41fdee:	mov    ch,0xb9
  41fdf0:	sub    DWORD PTR [ebx],eax
  41fdf2:	jo     0x41fe5c
  41fdf4:	int    0xbc
  41fdf6:	ret    
  41fdf7:	adc    BYTE PTR [eax+ebp*2],al
  41fdfa:	mov    al,0x9c
  41fdfc:	mov    bl,0xb
  41fdfe:	adc    eax,0xaab8059b
  41fe03:	inc    ebx
  41fe04:	mov    cl,0xa
  41fe06:	push   edx
  41fe07:	mov    ch,0x71
  41fe09:	jb     0x41fe8a
  41fe0b:	sub    al,0xde
  41fe0d:	jge    0x41fe41
  41fe0f:	sbb    al,0x1f
  41fe11:	pop    ebp
  41fe12:	adc    BYTE PTR [eax-0x7b],0x3b
  41fe16:	xchg   edx,eax
  41fe17:	test   eax,0x24584f19
  41fe1c:	in     eax,0x33
  41fe1e:	jmp    0xfffb13cf
  41fe23:	imul   esp,ebx,0xffffffb0
  41fe26:	loopne 0x41fe88
  41fe28:	int    0x81
  41fe2a:	sti    
  41fe2b:	adc    ebx,DWORD PTR [ebx]
  41fe2d:	(bad)  
  41fe2e:	ss adc ecx,ebp
  41fe31:	push   edi
  41fe32:	inc    ebx
  41fe33:	jl     0x41fe14
  41fe35:	sbb    al,0x3d
  41fe37:	cdq    
  41fe38:	iret   
  41fe39:	sbb    DWORD PTR [ecx+0x14],edi
  41fe3c:	daa    
  41fe3d:	mov    ch,0xd7
  41fe3f:	icebp  
  41fe40:	aad    0xa7
  41fe42:	scas   eax,DWORD PTR es:[edi]
  41fe43:	enter  0x706a,0xdb
  41fe47:	xlat   BYTE PTR ds:[ebx]
  41fe48:	sahf   
  41fe49:	(bad)  
  41fe4a:	int3   
  41fe4b:	mov    ebx,esp
  41fe4d:	pop    es
  41fe4e:	fdivr  DWORD PTR [esi]
  41fe50:	fldcw  WORD PTR [esi]
  41fe52:	data16 sub BYTE PTR [edi+0x427a1c11],0x14
  41fe5a:	ja     0x41fdef
  41fe5c:	dec    esi
  41fe5d:	pop    ebp
  41fe5e:	sbb    esi,DWORD PTR [ecx]
  41fe60:	sar    DWORD PTR [edi+0x365c3826],0x5e
  41fe67:	dec    ebp
  41fe68:	push   esi
  41fe69:	push   ebx
  41fe6a:	jae    0x41fed7
  41fe6c:	dec    esp
  41fe6d:	dec    ebp
  41fe6e:	loope  0x41fdf2
  41fe70:	fwait
  41fe71:	pop    edi
  41fe72:	push   esi
  41fe73:	fld    TBYTE PTR [edi]
  41fe75:	scas   eax,DWORD PTR es:[edi]
  41fe76:	stos   BYTE PTR es:[edi],al
  41fe77:	jg     0x41feea
  41fe79:	lahf   
  41fe7a:	sti    
  41fe7b:	or     al,ah
  41fe7d:	in     eax,0xf6
  41fe7f:	add    ch,0xd7
  41fe82:	pop    esi
  41fe83:	stos   DWORD PTR es:[edi],eax
  41fe84:	sti    
  41fe85:	cmp    BYTE PTR [eax+eiz*8-0x12],0xdc
  41fe8a:	mov    al,ds:0x2ab9e5c7
  41fe8f:	stc    
  41fe90:	xor    al,0x51
  41fe92:	fwait
  41fe93:	mov    eax,ds:0xf64d3f0
  41fe98:	je     0x41fe51
  41fe9a:	and    BYTE PTR [ecx+0x5d15ba8c],dl
  41fea0:	mov    ds:0x8c4c270f,eax
  41fea5:	cli    
  41fea6:	adc    eax,0xf793fe62
  41feab:	mov    ebx,0xe406627c
  41feb0:	push   cs
  41feb1:	pop    eax
  41feb2:	cwde   
  41feb3:	sbb    al,0xe3
  41feb5:	das    
  41feb6:	jns    0x41ff34
  41feb8:	cmc    
  41feb9:	lock mov dh,0x4d
  41febc:	xchg   ebp,eax
  41febd:	test   al,0x1e
  41febf:	ror    dh,1
  41fec1:	popf   
  41fec2:	jmp    DWORD PTR [eax]
  41fec4:	scas   eax,DWORD PTR es:[edi]
  41fec5:	inc    BYTE PTR [ebx-0x640dd978]
  41fecb:	aam    0x92
  41fecd:	jnp    0x41fee5
  41fecf:	adc    al,0xab
  41fed1:	dec    ebp
  41fed2:	inc    eax
  41fed3:	ins    DWORD PTR es:[edi],dx
  41fed4:	push   cs
  41fed5:	lock mov al,0xbd
  41fed8:	mov    ds,WORD PTR [esi]
  41feda:	test   al,0xf1
  41fedc:	mov    eax,0xd9381ece
  41fee1:	push   0x4
  41fee3:	clc    
  41fee4:	dec    esi
  41fee5:	sar    BYTE PTR [ebx-0x78c7affa],cl
  41feeb:	push   0xf0d6a51
  41fef0:	pop    edx
  41fef1:	inc    ebp
  41fef2:	xchg   esi,eax
  41fef3:	xlat   BYTE PTR ds:[ebx]
  41fef4:	pop    esp
  41fef5:	popa   
  41fef6:	das    
  41fef7:	inc    edi
  41fef8:	fisubr WORD PTR [eax+edx*8]
  41fefb:	sub    eax,0x4078b118
  41ff00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff01:	fsubr  DWORD PTR [ebx-0x2f]
  41ff04:	mov    ebx,0x7e186a1a
  41ff09:	xor    DWORD PTR [ebp+0x4d],eax
  41ff0c:	pop    es
  41ff0d:	pusha  
  41ff0e:	xchg   DWORD PTR [ecx+0x4f],esp
  41ff11:	xchg   edi,eax
  41ff12:	div    DWORD PTR [eax-0x6f]
  41ff15:	cmp    dl,0x85
  41ff18:	into   
  41ff19:	mov    bh,0x8d
  41ff1b:	fmul   st,st(4)
  41ff1d:	dec    esi
  41ff1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff1f:	inc    ebp
  41ff20:	mov    bl,0xce
  41ff22:	gs loopne 0x41ff35
  41ff25:	add    DWORD PTR [edx+0x25],esi
  41ff28:	inc    edi
  41ff29:	mov    ecx,0x82823a9d
  41ff2e:	cmp    BYTE PTR [esp+ecx*2+0x7e01bfb2],dl
  41ff35:	mov    esp,DWORD PTR [edi+0x591304e4]
  41ff3b:	pop    edx
  41ff3c:	add    ah,BYTE PTR [edi]
  41ff3e:	cli    
  41ff3f:	sar    DWORD PTR [esi-0x24f6f7bc],cl
  41ff45:	push   ds
  41ff46:	adc    bp,WORD PTR [edx-0x30a3573a]
  41ff4d:	jmp    0x2951b8f1
  41ff52:	lea    esp,[edi]
  41ff54:	fdivr  DWORD PTR [esi]
  41ff56:	int    0x36
  41ff58:	push   edi
  41ff59:	es dec esi
  41ff5b:	cld    
  41ff5c:	adc    cl,bl
  41ff5e:	or     ebx,ecx
  41ff60:	and    BYTE PTR [eax-0x621ed9f9],cl
  41ff66:	bound  esi,QWORD PTR [edi+0x78]
  41ff69:	adc    ch,BYTE PTR ds:0xd4f78705
  41ff6f:	inc    ebp
  41ff70:	sub    al,0xa3
  41ff72:	dec    edx
  41ff73:	ds mov ecx,0x167a9844
  41ff79:	ret    0x38e1
  41ff7c:	add    DWORD PTR [edx-0x3],eax
  41ff7f:	rcl    BYTE PTR [edi+esi*2-0x46],1
  41ff83:	push   0x50c1e271
  41ff88:	call   0x71aca7a3
  41ff8d:	out    0x4a,al
  41ff8f:	mov    ds:0xd7eac453,eax
  41ff94:	out    0x82,al
  41ff96:	jne    0x42000b
  41ff98:	jg     0x41ff31
  41ff9a:	jbe    0x41ffd7
  41ff9c:	xor    dl,cl
  41ff9e:	mov    esp,0x13efaf19
  41ffa3:	ftst   
  41ffa5:	int3   
  41ffa6:	adc    al,0xf
  41ffa8:	fisub  DWORD PTR [ecx]
  41ffaa:	mul    edi
  41ffac:	cwde   
  41ffad:	in     eax,dx
  41ffae:	jnp    0x420006
  41ffb0:	cmp    BYTE PTR [ebp+0x22],ah
  41ffb3:	cld    
  41ffb4:	test   DWORD PTR [edi-0x69],eax
  41ffb7:	sbb    ch,0xc4
  41ffba:	xchg   bl,dh
  41ffbc:	fisttp DWORD PTR ds:0x77f9012c
  41ffc2:	retf   0xc059
  41ffc5:	mov    al,0x59
  41ffc7:	jae    0x420045
  41ffc9:	retf   
  41ffca:	retf   0x6b75
  41ffcd:	(bad)  
  41ffce:	js     0x420003
  41ffd0:	fs sahf 
  41ffd2:	fmul   DWORD PTR [ecx+0x78e52600]
  41ffd8:	cmp    BYTE PTR [ecx-0x23cc10f1],ch
  41ffde:	fistp  WORD PTR [esi-0x26]
  41ffe1:	es and al,0xfa
  41ffe4:	xchg   esi,eax
  41ffe5:	out    dx,eax
  41ffe6:	mov    bl,0xa7
  41ffe8:	repnz (bad) 
  41ffeb:	imul   eax,esp,0xffffffea
  41ffee:	cmp    BYTE PTR [ecx+0x7d],ch
  41fff1:	test   al,0xe7
  41fff3:	jmp    0x1c09:0x92005ce1
  41fffa:	mov    ds:0xf899b73c,eax
  41ffff:	jbe    0x42007b
  420001:	ffreep st(0)
  420003:	jmp    0xc0fc:0x51330c0
  42000a:	mov    ds:0x7c22f0f,al
  42000f:	(bad)  
  420010:	fnstcw WORD PTR [edi]
  420012:	iret   
  420013:	jnp    0x41ff9b
  420015:	cld    
  420016:	jp     0x41ffe6
  420018:	dec    esi
  420019:	scas   al,BYTE PTR es:[edi]
  42001a:	push   ecx
  42001b:	inc    eax
  42001c:	(bad)  [edi+0x12b419ba]
  420022:	sahf   
  420023:	fistp  WORD PTR [edi+0x49]
  420026:	or     BYTE PTR [edx-0x44],cl
  420029:	jecxz  0x41ffd4
  42002b:	xor    DWORD PTR [eax+0x494b43d9],edx
  420031:	mov    edi,0xa857017a
  420036:	(bad)  
  420037:	hlt    
  420038:	scas   eax,DWORD PTR es:[edi]
  420039:	jne    0x41ffcb
  42003b:	in     al,0xef
  42003d:	mov    edx,0x1a31ef37
  420042:	jne    0x420014
  420044:	in     eax,dx
  420045:	mov    ebx,0x452addf9
  42004a:	jl     0x41ffe7
  42004c:	and    DWORD PTR [edx-0x61],ecx
  42004f:	adc    edx,ebx
  420051:	fiadd  WORD PTR [esp+ebp*2-0x7]
  420055:	xchg   esi,eax
  420056:	xchg   edi,eax
  420057:	jl     0x420060
  420059:	int3   
  42005a:	dec    eax
  42005b:	jmp    0x914e:0x577ff45f
  420062:	mov    WORD PTR [esp+eiz*8+0x40],?
  420066:	arpl   WORD PTR [edx-0xbf66b48],bx
  42006c:	push   ebp
  42006d:	ret    0xcdf
  420070:	fimul  WORD PTR [ecx]
  420072:	inc    esi
  420073:	nop
  420074:	jb     0x4200e7
  420076:	int3   
  420077:	dec    edi
  420078:	jmp    0x4200da
  42007a:	push   ebp
  42007b:	sahf   
  42007c:	pop    eax
  42007d:	outs   dx,DWORD PTR ds:[esi]
  42007e:	inc    ebp
  42007f:	adc    ecx,DWORD PTR [eax-0x3ebf3481]
  420085:	call   0x8e2c:0x3a05beb9
  42008c:	jb     0x420100
  42008e:	adc    ebp,DWORD PTR [edi+0x25]
  420091:	jbe    0x420016
  420093:	(bad)  
  420094:	and    DWORD PTR [eax],ebp
  420096:	fmul   DWORD PTR [ebp-0x7174ca3a]
  42009c:	inc    eax
  42009d:	gs mov ah,0x1f
  4200a0:	jle    0x42005c
  4200a2:	pop    ecx
  4200a3:	loop   0x4200cd
  4200a5:	retf   
  4200a6:	xor    DWORD PTR [ebp-0x2e6ecef5],ecx
  4200ac:	std    
  4200ad:	repz xchg edi,eax
  4200af:	mov    WORD PTR [esi-0x7e],ds
  4200b2:	fistp  DWORD PTR [esi-0x72]
  4200b5:	fwait
  4200b6:	inc    ecx
  4200b7:	dec    edx
  4200b8:	stos   DWORD PTR es:[edi],eax
  4200b9:	cli    
  4200ba:	mov    al,0xa0
  4200bc:	adc    BYTE PTR [edi-0x1],dh
  4200bf:	xor    cl,BYTE PTR [edx+0x5a1d69c0]
  4200c5:	jno    0x42010c
  4200c7:	cmp    DWORD PTR [edx-0x66],eax
  4200ca:	jns    0x4200e5
  4200cc:	lods   al,BYTE PTR ds:[esi]
  4200cd:	aad    0x88
  4200cf:	cmp    ecx,ebx
  4200d1:	leave  
  4200d2:	dec    ecx
  4200d3:	fs imul ebx
  4200d6:	cmp    BYTE PTR [ebx+0x40],bl
  4200d9:	fiadd  WORD PTR [ebx-0x441e0078]
  4200df:	ins    BYTE PTR es:[edi],dx
  4200e0:	rcr    BYTE PTR [edx-0x35ed5f1e],cl
  4200e6:	jp     0x42012f
  4200e8:	aad    0x83
  4200ea:	pop    ebp
  4200eb:	adc    al,0x7d
  4200ed:	int    0x16
  4200ef:	cmp    DWORD PTR [edi],esp
  4200f1:	cmp    DWORD PTR [ebx-0x1f],edi
  4200f4:	and    ah,BYTE PTR [ecx+0x70]
  4200f7:	push   0xb6169cd5
  4200fc:	ret    0x5c66
  4200ff:	mov    ds:0x94bb044,eax
  420104:	inc    ebx
  420105:	mov    ah,0x7f
  420107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420108:	in     eax,dx
  420109:	pop    esi
  42010a:	cs sub eax,0x12b24320
  420110:	ret    0x89cc
  420113:	cwde   
  420114:	dec    ecx
  420115:	jae    0x42014c
  420117:	jge    0x42012c
  420119:	xchg   edx,eax
  42011a:	jae    0x4200a0
  42011c:	mov    bl,0x6f
  42011e:	aaa    
  42011f:	add    bl,BYTE PTR ds:0x7dfe8340
  420125:	ret    0x97f9
  420128:	xchg   esp,eax
  420129:	out    0xb1,al
  42012b:	xchg   ebx,eax
  42012c:	imul   edx,DWORD PTR [edx+eax*4],0xc33c5449
  420133:	pop    DWORD PTR [edi-0x7c08feaf]
  420139:	or     ebp,eax
  42013b:	sbb    al,ah
  42013d:	adc    eax,0x5d3f2a8e
  420142:	jnp    0x420180
  420144:	sbb    ch,ah
  420146:	stc    
  420147:	cli    
  420148:	pusha  
  420149:	add    BYTE PTR [ebp-0x76],0xa4
  42014d:	mov    edi,0xff47dc10
  420152:	mov    eax,ds:0x6939a860
  420157:	xor    eax,0x8fb6a9ec
  42015c:	dec    esi
  42015d:	push   ebx
  42015e:	adc    BYTE PTR [ecx-0x54],0x3c
  420162:	shl    DWORD PTR [edx-0x30],cl
  420165:	mov    ?,esp
  420167:	mov    dh,0x5c
  420169:	ja     0x420191
  42016b:	call   0xa221:0x98eabaf4
  420172:	mov    bl,BYTE PTR [ebp+0x44392953]
  420178:	aam    0xc9
  42017a:	rcr    BYTE PTR ss:[ebx-0x5bbea352],cl
  420181:	mov    edi,0x14969021
  420186:	(bad)  
  420187:	cmp    eax,ebx
  420189:	sbb    ch,bl
  42018b:	adc    al,0x97
  42018d:	retf   0x49c5
  420190:	ins    BYTE PTR es:[edi],dx
  420191:	cli    
  420192:	xchg   esp,eax
  420193:	xor    DWORD PTR [ecx+0x1e],eax
  420196:	nop
  420197:	scas   al,BYTE PTR es:[edi]
  420198:	cs adc edi,edi
  42019b:	scas   al,BYTE PTR es:[edi]
  42019c:	xchg   DWORD PTR [ebx+0x42195d46],edi
  4201a2:	fmulp  st(2),st
  4201a4:	sti    
  4201a5:	sub    ecx,esp
  4201a7:	pop    ebp
  4201a8:	inc    ebx
  4201a9:	mov    ds:0x3a181c67,al
  4201ae:	popa   
  4201af:	sub    al,BYTE PTR [eax-0x409f8f51]
  4201b5:	push   cs
  4201b6:	cmp    ebx,DWORD PTR [edx+edi*2-0x2c304343]
  4201bd:	jmp    0xcd3bbbd9
  4201c2:	repnz mov esp,0x2052617
  4201c8:	jns    0x420165
  4201ca:	dec    esi
  4201cb:	cmp    DWORD PTR [esi+esi*8+0x67],ebp
  4201cf:	jecxz  0x420236
  4201d1:	fld    QWORD PTR [edx+0xc0a0a21]
  4201d7:	icebp  
  4201d8:	int    0xfd
  4201da:	mov    bh,ch
  4201dc:	xchg   esi,eax
  4201dd:	cld    
  4201de:	sbb    DWORD PTR [edx-0x71],edx
  4201e1:	nop
  4201e2:	shr    DWORD PTR [ecx-0x72],cl
  4201e5:	mov    ebp,0xb0875449
  4201ea:	dec    edi
  4201eb:	aas    
  4201ec:	xchg   esp,eax
  4201ed:	loope  0x4201a7
  4201ef:	rcr    BYTE PTR [ecx+0x3d3a599a],cl
  4201f5:	(bad)  
  4201f6:	cmp    eax,0xb004aa87
  4201fb:	push   ecx
  4201fc:	cs fcom st(2)
  4201ff:	(bad)  
  420200:	jae    0x4201b1
  420202:	and    ch,cl
  420204:	xor    BYTE PTR [ecx+0x3ce818b8],0x86
  42020b:	lods   al,BYTE PTR ds:[esi]
  42020c:	loop   0x420227
  42020e:	in     eax,dx
  42020f:	retf   0x8bb7
  420212:	push   ds
  420213:	xor    ebx,DWORD PTR [ebp+0x2cef8afa]
  420219:	cmp    al,0xaf
  42021b:	into   
  42021c:	pop    edi
  42021d:	imul   esi,edi,0x1b452b47
  420223:	sbb    DWORD PTR ds:0x8de66d42,ebx
  420229:	inc    edx
  42022a:	push   ecx
  42022b:	fidiv  DWORD PTR [esi-0x63]
  42022e:	push   edi
  42022f:	leave  
  420230:	pop    ebp
  420231:	pop    es
  420232:	or     edi,ebx
  420234:	push   ds
  420235:	(bad)  
  420237:	add    ebp,eax
  420239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42023a:	sbb    eax,0x3e43eaff
  42023f:	mov    cl,0xa6
  420241:	jne    0x4201d4
  420243:	bound  ecx,QWORD PTR [edi]
  420245:	retf   0x313c
  420248:	xchg   ecx,eax
  420249:	adc    edi,DWORD PTR [ebx]
  42024b:	call   0xfeddfe
  420250:	add    BYTE PTR [eax],al
  420252:	xchg   esi,eax
  420253:	test   BYTE PTR [ebp-0x2],al
  420256:	push   edi
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    ch,al
  42025f:	das    
  420260:	fs stos DWORD PTR es:[edi],eax
  420262:	add    edi,DWORD PTR [ebp+0x1]
  420265:	add    ch,dh
  420267:	add    al,0x0
  420269:	add    BYTE PTR [ecx-0xf],bh
  42026c:	push   ebx
  42026d:	sub    dh,BYTE PTR [eax+0x6a]
  420270:	(bad)  
  420271:	sahf   
  420272:	call   0x4cfad404
  420277:	sub    eax,0x4c4ee835
  42027c:	mov    cl,0x48
  42027e:	jb     0x4202be
  420280:	fincstp 
  420282:	lods   al,BYTE PTR ds:[esi]
  420283:	dec    edi
  420284:	xor    DWORD PTR [esi-0xa],eax
  420287:	repz sbb DWORD PTR ds:0x8a9e7d5d,eax
  42028e:	aas    
  42028f:	dec    esp
  420290:	retf   
  420291:	dec    ecx
  420292:	mov    ah,0xb6
  420294:	mov    eax,0xa2af0e0d
  420299:	xchg   esp,eax
  42029a:	xchg   esp,eax
  42029b:	jp     0x42027a
  42029d:	imul   eax,edx,0xbea49a71
  4202a3:	sub    BYTE PTR [edi],bh
  4202a5:	lods   eax,DWORD PTR ds:[esi]
  4202a6:	or     BYTE PTR [ecx-0x731fa93b],dl
  4202ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202ad:	es dec esi
  4202af:	mov    dh,0x66
  4202b1:	stos   BYTE PTR es:[edi],al
  4202b2:	neg    DWORD PTR [eax+0x659ad0f0]
  4202b8:	aam    0x7
  4202ba:	test   eax,0xcef43838
  4202bf:	xchg   DWORD PTR [esi+ebx*1+0x19],esp
  4202c3:	pop    ebp
  4202c4:	mov    al,ds:0xc69a7c7b
  4202c9:	imul   ebp,DWORD PTR [eax+eiz*2+0x27],0x32
  4202ce:	mov    eax,0xea7be639
  4202d3:	mov    edi,0xcd763da6
  4202d8:	daa    
  4202d9:	push   ds
  4202da:	ja     0x4202cc
  4202dc:	push   eax
  4202dd:	je     0x420303
  4202df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202e0:	xchg   edx,eax
  4202e1:	sbb    DWORD PTR [ecx-0x5b],0xffffffbd
  4202e5:	xchg   ecx,eax
  4202e6:	mov    ebx,0x80a5b553
  4202eb:	mov    edi,0xcda1bbf8
  4202f0:	pop    edx
  4202f1:	int3   
  4202f2:	gs or  al,0xe7
  4202f5:	mov    ds:0xff23f0f0,al
  4202fa:	jb     0x42027e
  4202fc:	adc    DWORD PTR [ebp+0x61],ecx
  4202ff:	repnz pop ebp
  420301:	ret    0x1eb6
  420304:	cli    
  420305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420306:	out    dx,al
  420307:	ds popa 
  420309:	jno    0x420311
  42030b:	mov    bl,0x22
  42030d:	pop    ecx
  42030e:	es imul esi,esi,0xfffffffd
  420312:	inc    esp
  420313:	fsubp  st(6),st
  420315:	popf   
  420316:	icebp  
  420317:	push   es
  420318:	jae    0x420333
  42031a:	inc    esp
  42031b:	arpl   bp,bx
  42031d:	dec    ebp
  42031e:	push   0xffffffa6
  420320:	push   eax
  420321:	jne    0x420331
  420323:	pop    eax
  420324:	mov    esi,0xae6ba03c
  420329:	fcom   st(0)
  42032b:	jle    0x4203ab
  42032d:	sbb    BYTE PTR [esi+0x2622490a],0xb2
  420334:	mov    esi,0xbad3068
  420339:	cld    
  42033a:	inc    esp
  42033b:	dec    esp
  42033c:	into   
  42033d:	mov    ebx,0xd679ac2f
  420342:	jbe    0x420369
  420344:	dec    ecx
  420345:	sbb    cl,bh
  420347:	adc    eax,0x849bbfd0
  42034c:	jg     0x420357
  42034e:	out    0x9e,eax
  420350:	push   ecx
  420351:	mov    esi,0x21c2484a
  420356:	aas    
  420357:	jg     0x4202ed
  420359:	cmp    eax,0xa88c41bf
  42035e:	push   0x2c
  420360:	cmp    BYTE PTR [ecx],bl
  420362:	xchg   edx,eax
  420363:	bnd je 0x4203b9
  420366:	xchg   esp,eax
  420367:	jge    0x420306
  420369:	test   al,0x8b
  42036b:	arpl   WORD PTR [esi-0x66dae1ae],di
  420371:	inc    ebp
  420372:	(bad)  
  420373:	mov    eax,ds:0x9cf61b8a
  420378:	mov    eax,ds:0xfd04cffa
  42037d:	enter  0xc822,0x24
  420381:	cld    
  420382:	test   esi,edi
  420384:	enter  0xd54a,0xdb
  420388:	fidivr DWORD PTR [esi]
  42038a:	(bad)  
  42038b:	xor    ebx,edx
  42038d:	inc    edx
  42038e:	xlat   BYTE PTR ds:[ebx]
  42038f:	outs   dx,DWORD PTR ds:[esi]
  420390:	out    0x9a,eax
  420392:	adc    DWORD PTR ds:0xbfe6b788,esi
  420398:	push   0xffffffd9
  42039a:	xchg   ebp,eax
  42039b:	ins    DWORD PTR es:[edi],dx
  42039c:	std    
  42039d:	in     eax,dx
  42039e:	inc    esi
  42039f:	sbb    eax,0xde5b6851
  4203a4:	mov    esi,0x9d0e4e71
  4203a9:	aaa    
  4203aa:	xor    ch,BYTE PTR [ebx+0x43]
  4203ad:	or     ecx,DWORD PTR [edx-0x37]
  4203b0:	push   edi
  4203b1:	cmp    al,0xce
  4203b3:	push   ds
  4203b4:	mov    dh,0xb4
  4203b6:	add    eax,0x8e75739a
  4203bb:	sbb    dl,BYTE PTR [ecx+eiz*8+0x21901f3a]
  4203c2:	add    al,al
  4203c4:	loopne 0x42038e
  4203c6:	icebp  
  4203c7:	sbb    al,0x53
  4203c9:	aas    
  4203ca:	push   eax
  4203cb:	add    bl,BYTE PTR [esi-0x787c8f22]
  4203d1:	adc    BYTE PTR [edx+0x45],ch
  4203d4:	rol    DWORD PTR [ecx+0x22],cl
  4203d7:	jecxz  0x420384
  4203d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203da:	(bad)  
  4203db:	pop    edi
  4203dc:	(bad)  
  4203dd:	shl    ebx,1
  4203df:	mov    dh,0x5
  4203e1:	cli    
  4203e2:	fistp  QWORD PTR [ecx-0x54]
  4203e5:	sbb    al,0xe7
  4203e7:	xchg   edx,eax
  4203e8:	ret    0x247f
  4203eb:	lods   al,BYTE PTR ds:[esi]
  4203ec:	repz int3 
  4203ee:	mov    eax,0xd0aeeff2
  4203f3:	aaa    
  4203f4:	fld    QWORD PTR [ebx-0x3c]
  4203f7:	inc    ecx
  4203f8:	scas   al,BYTE PTR es:[edi]
  4203f9:	adc    DWORD PTR [edi+edi*1],ebp
  4203fc:	mov    ds:0xdfa0d4ea,eax
  420401:	xlat   BYTE PTR ds:[ebx]
  420402:	add    eax,0x2774764
  420407:	push   edi
  420408:	fst    QWORD PTR [esi-0x17b4e093]
  42040e:	shl    BYTE PTR [ebx],cl
  420410:	xchg   edi,eax
  420411:	pop    ecx
  420412:	ss jne 0x42042f
  420415:	push   ebp
  420416:	test   DWORD PTR [esi],ebx
  420418:	in     eax,dx
  420419:	inc    ebx
  42041a:	add    BYTE PTR [esi+eiz*2-0x65],bh
  42041e:	jmp    0xda0f:0x7faf6c7a
  420425:	fstp   DWORD PTR [esi-0x271a0623]
  42042b:	xchg   esp,eax
  42042c:	and    DWORD PTR [edx-0x2e],ecx
  42042f:	xor    al,0x13
  420431:	cmc    
  420432:	call   0x2978:0x8c880d1f
  420439:	jne    0x4204ae
  42043b:	mov    bl,0xfa
  42043d:	xor    ebp,esp
  42043f:	push   DWORD PTR [ecx+0x37]
  420442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420443:	rcl    BYTE PTR [eax+0x5c],0x84
  420447:	push   eax
  420448:	xor    DWORD PTR [edi-0x4b],edi
  42044b:	mov    edi,0x9d109cbf
  420450:	jno    0x42047c
  420452:	daa    
  420453:	mov    ah,BYTE PTR [ecx+edx*4-0x3b5cc17f]
  42045a:	sub    eax,0x64518e7a
  42045f:	jne    0x4204c6
  420461:	ins    DWORD PTR es:[edi],dx
  420462:	or     al,0x20
  420464:	jnp    0x42040b
  420466:	xchg   ebx,eax
  420467:	outs   dx,DWORD PTR ds:[esi]
  420468:	scas   eax,DWORD PTR es:[edi]
  420469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42046a:	xchg   edx,eax
  42046b:	out    dx,eax
  42046c:	xchg   cl,bl
  42046e:	aas    
  42046f:	loopne 0x420457
  420471:	xor    eax,0xf39c53cf
  420476:	xchg   ebp,eax
  420477:	stos   DWORD PTR es:[edi],eax
  420478:	adc    al,0xf3
  42047a:	ror    BYTE PTR [ebx+0x15e46587],1
  420480:	add    al,0xf2
  420482:	add    eax,0x72041d21
  420487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420488:	xchg   DWORD PTR [eax],esi
  42048a:	fwait
  42048b:	jmp    0x967f:0xe1dffc99
  420492:	enter  0x441d,0x3e
  420496:	arpl   WORD PTR [esi+0x1b2079be],sp
  42049c:	retf   
  42049d:	cmp    dh,BYTE PTR [esi]
  42049f:	jmp    0x420492
  4204a1:	xlat   BYTE PTR ds:[ebx]
  4204a2:	adc    al,ch
  4204a4:	gs clc 
  4204a6:	(bad)  
  4204a7:	cmp    al,0xf7
  4204a9:	jne    0x42042b
  4204ab:	arpl   WORD PTR [ebx-0xb5a2cbf],di
  4204b1:	xor    ebx,ebp
  4204b3:	int    0xb0
  4204b5:	adc    DWORD PTR [edi],eax
  4204b7:	(bad)  
  4204b8:	adc    DWORD PTR [esp+edx*4-0x35],eax
  4204bc:	jnp    0x420521
  4204be:	dec    edx
  4204bf:	xor    BYTE PTR [esi+0x10],al
  4204c2:	das    
  4204c3:	sub    esp,0x163bd110
  4204c9:	std    
  4204ca:	fild   WORD PTR [edi-0x738d2758]
  4204d0:	fst    st(3)
  4204d2:	jnp    0x4204e0
  4204d4:	adc    cl,BYTE PTR [esi+ebp*4-0x1d10c6d7]
  4204db:	fldcw  WORD PTR [edx+0x7e]
  4204de:	sbb    DWORD PTR [ecx-0x7945c0e9],0x7e
  4204e5:	call   0xfb9c30b9
  4204ea:	pop    eax
  4204eb:	jno    0x42051f
  4204ed:	repz int3 
  4204ef:	lods   eax,DWORD PTR ds:[esi]
  4204f0:	mov    ch,0x2f
  4204f2:	mov    eax,DWORD PTR [ebx+0x1d70fa65]
  4204f8:	shl    edx,0xa6
  4204fb:	pop    edx
  4204fc:	test   BYTE PTR [ecx+eax*8],bl
  4204ff:	cli    
  420500:	jb     0x4204c6
  420502:	int3   
  420503:	dec    eax
  420504:	adc    al,0x4
  420506:	call   0x4ad1:0x8c221ffa
  42050d:	inc    eax
  42050e:	test   al,0x47
  420510:	jl     0x42058d
  420512:	loopne 0x420524
  420514:	dec    edi
  420515:	ret    
  420516:	out    0x75,eax
  420518:	in     al,dx
  420519:	jne    0x420529
  42051b:	mov    bl,0x63
  42051d:	(bad)  
  42051e:	popa   
  42051f:	dec    ebx
  420520:	pop    edi
  420521:	cmp    BYTE PTR [ecx-0x2e],dh
  420524:	push   ss
  420525:	xchg   ebp,eax
  420526:	bound  edi,QWORD PTR [ebx-0xc7f0d08]
  42052c:	out    0x9d,eax
  42052e:	ins    BYTE PTR es:[edi],dx
  42052f:	inc    esp
  420530:	outs   dx,BYTE PTR ds:[esi]
  420531:	mov    eax,0x9afba74e
  420536:	test   dl,bl
  420538:	sbb    esp,0x74536a1b
  42053e:	or     BYTE PTR [eax-0x5b2c9b0f],dh
  420544:	es mov ebx,esp
  420547:	popa   
  420548:	inc    ebp
  420549:	sub    esp,esp
  42054b:	and    al,0x3
  42054d:	daa    
  42054e:	sahf   
  42054f:	pop    es
  420550:	xor    ah,ah
  420552:	pusha  
  420553:	add    ebx,DWORD PTR [esi+0xb]
  420556:	mov    ds:0x5217e31f,al
  42055b:	enter  0x3e5b,0x6a
  42055f:	mov    WORD PTR [eax+0x3e],es
  420562:	nop
  420563:	test   BYTE PTR [ebx-0xd],al
  420566:	adc    al,0x88
  420568:	and    edi,0xc7c0604a
  42056e:	mov    eax,0xa665b5f
  420573:	ret    
  420574:	dec    ebp
  420575:	jno    0x420569
  420577:	outs   dx,DWORD PTR ds:[esi]
  420578:	inc    esi
  420579:	adc    BYTE PTR [ebx+0x30],bl
  42057c:	mov    dl,0x30
  42057e:	mov    edi,DWORD PTR [esi]
  420580:	and    eax,0x6803e03d
  420585:	adc    al,0xff
  420587:	addps  xmm5,XMMWORD PTR [ebp-0x5c]
  42058b:	loop   0x42058d
  42058d:	mov    dh,al
  42058f:	(bad)
  420592:	lods   al,BYTE PTR ds:[esi]
  420593:	jecxz  0x420519
  420595:	add    DWORD PTR [edi-0x75147a1d],ecx
  42059b:	push   ecx
  42059c:	jl     0x4205a4
  42059e:	sahf   
  42059f:	dec    ecx
  4205a0:	stos   DWORD PTR es:[edi],eax
  4205a1:	aad    0xf6
  4205a3:	stc    
  4205a4:	sub    ebp,DWORD PTR [edx+ecx*8-0xa]
  4205a8:	or     BYTE PTR [edi],al
  4205aa:	lahf   
  4205ab:	sbb    eax,0x6750f32a
  4205b0:	and    BYTE PTR [ebx-0x3e9117bb],ah
  4205b6:	dec    ebx
  4205b7:	ins    DWORD PTR es:[edi],dx
  4205b8:	lfs    ecx,FWORD PTR [ebx]
  4205bb:	mov    ss,WORD PTR [ebx-0x51d8a604]
  4205c1:	sub    al,0x99
  4205c3:	stos   BYTE PTR es:[edi],al
  4205c4:	push   0x74
  4205c6:	jl     0x42056f
  4205c8:	retf   
  4205c9:	sub    bl,BYTE PTR [ecx]
  4205cb:	jnp    0x420558
  4205cd:	or     al,0xf1
  4205cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205d0:	xchg   edx,eax
  4205d1:	and    DWORD PTR ds:0xbfcbebe,esi
  4205d7:	outs   dx,BYTE PTR ds:[esi]
  4205d8:	add    dl,BYTE PTR [edi+0x52]
  4205db:	push   0xffffff9d
  4205dd:	or     BYTE PTR [eax+0x6bb471aa],dl
  4205e3:	add    DWORD PTR [ecx-0x2ec6a711],0x2fa665a2
  4205ed:	sti    
  4205ee:	mov    edi,0x7362fd8a
  4205f3:	cld    
  4205f4:	fbstp  TBYTE PTR [ecx]
  4205f6:	mov    bl,0xfe
  4205f8:	lds    eax,FWORD PTR [ebp+0x63]
  4205fb:	or     al,0xbb
  4205fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205fe:	or     BYTE PTR [ebx+eax*2],0x82
  420602:	push   0x668a7b4d
  420607:	push   ebp
  420608:	or     bl,BYTE PTR [edi-0x57d0f6d3]
  42060e:	xor    al,0xa9
  420610:	inc    edx
  420611:	fsubp  st(6),st
  420613:	xchg   esp,eax
  420614:	outs   dx,DWORD PTR ds:[esi]
  420615:	into   
  420616:	retf   
  420617:	ss aas 
  420619:	repnz lahf 
  42061b:	icebp  
  42061c:	jnp    0x42069d
  42061e:	push   ds
  42061f:	mov    eax,ds:0x1f30130d
  420624:	pushf  
  420625:	pop    ecx
  420626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420627:	call   0x1357:0x500ccc17
  42062e:	imul   eax,eax,0xfffffffd
  420631:	cdq    
  420632:	mov    edi,0x888030ae
  420637:	addr16 or al,0xb
  42063a:	inc    ebx
  42063b:	jecxz  0x4206ae
  42063d:	add    BYTE PTR [edi+0x2cf9a8e4],ch
  420643:	cmp    eax,0xb4e62660
  420648:	jecxz  0x4206b6
  42064a:	stos   DWORD PTR es:[edi],eax
  42064b:	int3   
  42064c:	dec    eax
  42064d:	sub    ecx,ebp
  42064f:	dec    ecx
  420650:	fimul  DWORD PTR [edx+0x2d25ea3a]
  420656:	imul   DWORD PTR [edi]
  420658:	dec    edx
  420659:	(bad)  
  42065b:	inc    ebp
  42065c:	mov    esi,0x719181b
  420661:	sub    cl,BYTE PTR [esi+0x79]
  420664:	sub    bh,BYTE PTR [edi-0xe593a8a]
  42066a:	pop    edi
  42066b:	test   DWORD PTR [edx+0x50],ecx
  42066e:	push   DWORD PTR [edi-0x4b]
  420671:	inc    edi
  420672:	in     al,dx
  420673:	push   edx
  420674:	arpl   WORD PTR [ebx+0x296e2904],dx
  42067a:	in     eax,dx
  42067b:	cmp    BYTE PTR [edx+0x13],0x83
  42067f:	fidiv  DWORD PTR ds:0x936df4a5
  420685:	add    eax,0xfeb53648
  42068a:	xor    edx,edi
  42068c:	retf   
  42068d:	cs icebp 
  42068f:	ja     0x420637
  420691:	cld    
  420692:	add    ch,BYTE PTR [ebx+0x51]
  420695:	retf   
  420696:	cdq    
  420697:	mov    eax,0xab5c46c7
  42069c:	lahf   
  42069d:	aam    0x4
  42069f:	das    
  4206a0:	(bad)  
  4206a1:	add    al,0x6c
  4206a3:	mov    ebp,0x59ca3ab0
  4206a8:	and    cl,dh
  4206aa:	fdiv   st(0),st
  4206ac:	mov    ch,0x5f
  4206ae:	cmp    al,0xb7
  4206b0:	ins    DWORD PTR es:[edi],dx
  4206b1:	and    DWORD PTR [ebx-0x76],esp
  4206b4:	inc    edi
  4206b5:	das    
  4206b6:	push   ecx
  4206b7:	dec    ebx
  4206b8:	jnp    0x42070b
  4206ba:	aas    
  4206bb:	push   eax
  4206bc:	dec    ecx
  4206bd:	fadd   DWORD PTR [esi+ebp*8+0x309dc7d0]
  4206c4:	(bad)  
  4206c5:	inc    edx
  4206c6:	out    dx,al
  4206c7:	ins    BYTE PTR es:[edi],dx
  4206c8:	xchg   esi,eax
  4206c9:	jnp    0x42066d
  4206cb:	jae    0x420722
  4206cd:	mov    dh,0x8b
  4206cf:	stc    
  4206d0:	sbb    DWORD PTR [ebx+0x92315a9],0x441bf9c7
  4206da:	xor    esp,DWORD PTR [esi-0x3]
  4206dd:	dec    DWORD PTR [ebx+0x3]
  4206e0:	lds    ecx,FWORD PTR [edx-0x1c2edad8]
  4206e6:	es stc 
  4206e8:	inc    ebp
  4206e9:	out    dx,al
  4206ea:	mov    WORD PTR [esi+0x323ffa52],gs
  4206f0:	mov    esp,0xde833055
  4206f5:	repz enter 0x295a,0x75
  4206fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206fb:	xor    DWORD PTR [esi+edi*1-0x48],ebp
  4206ff:	push   es
  420700:	push   0x4
  420702:	dec    edx
  420703:	mov    dl,0x84
  420705:	xchg   edi,eax
  420706:	sahf   
  420707:	xchg   esp,eax
  420708:	test   al,0x20
  42070a:	nop
  42070b:	jg     0x42070c
  42070d:	pop    ss
  42070e:	mov    cl,0xa7
  420710:	(bad)  
  420711:	out    dx,eax
  420712:	dec    edi
  420713:	sub    eax,edi
  420715:	xchg   ebp,eax
  420716:	addr16 call 0xb866fa25
  42071c:	(bad)  
  42071d:	ror    BYTE PTR ds:0x8401bb4c,1
  420723:	pushf  
  420724:	sub    DWORD PTR [edi+0xf],0xffffffb3
  420728:	sbb    BYTE PTR [eax],dl
  42072a:	push   ds
  42072b:	xor    ch,BYTE PTR [edi-0x755b8e19]
  420731:	sub    eax,0xbc48f760
  420736:	ret    0xbf71
  420739:	lods   al,BYTE PTR ds:[esi]
  42073a:	cmp    al,0x1a
  42073c:	inc    esp
  42073d:	rcl    ecx,0x3b
  420740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420741:	cwde   
  420742:	inc    edx
  420743:	imul   esi,DWORD PTR [ecx+eiz*8],0xeceea006
  42074a:	stc    
  42074b:	retf   
  42074c:	sbb    esp,DWORD PTR [edi-0x322f55b0]
  420752:	mov    edx,0x2943ef78
  420757:	mov    eax,DWORD PTR [esp+ecx*4+0x65a84b13]
  42075e:	jmp    0xdd1f:0x21000000
  420765:	push   es
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	test   BYTE PTR [eax-0xe],0x94
  420772:	clc    
  420773:	add    DWORD PTR [ecx],0x4f500
  420779:	add    BYTE PTR [ecx+0x75],ch
  42077c:	cmp    BYTE PTR [eax+0x7fb1b72c],bl
  420782:	mov    BYTE PTR [edi-0x52b4902e],dh
  420788:	xor    esi,eax
  42078a:	lahf   
  42078b:	ficom  WORD PTR [esi]
  42078d:	adc    eax,0x9a74d576
  420792:	mov    cs,WORD PTR [eax-0x2d995541]
  420798:	imul   ebp,DWORD PTR [ecx+0x22],0xa3bad8b3
  42079f:	mov    cl,0xf0
  4207a1:	sub    ebp,0x4b
  4207a4:	adc    al,0x81
  4207a6:	leave  
  4207a7:	mov    bh,0xbe
  4207a9:	and    DWORD PTR [esp+ecx*8],0x59
  4207ad:	shr    BYTE PTR [ebx+esi*4],cl
  4207b0:	xor    edx,DWORD PTR [edi-0x302985cc]
  4207b6:	dec    edi
  4207b7:	in     eax,dx
  4207b8:	out    dx,al
  4207b9:	out    0x1c,eax
  4207bb:	cmc    
  4207bc:	xchg   esp,eax
  4207bd:	(bad)  
  4207be:	inc    ebx
  4207bf:	and    eax,0x2ab2854f
  4207c4:	mov    WORD PTR ds:0xf60d3fe6,?
  4207ca:	mov    ah,0x1d
  4207cc:	pop    esp
  4207cd:	inc    ebp
  4207ce:	popa   
  4207cf:	loope  0x420797
  4207d1:	(bad)  
  4207d2:	sub    al,0x7
  4207d4:	stos   DWORD PTR es:[edi],eax
  4207d5:	mov    ebx,0x8320014e
  4207da:	mov    al,0xff
  4207dc:	inc    eax
  4207dd:	mov    ebp,0x93346f35
  4207e2:	xchg   ebp,eax
  4207e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207e4:	rol    DWORD PTR [eax],cl
  4207e6:	jnp    0x4207ac
  4207e8:	and    esp,DWORD PTR [eax]
  4207ea:	inc    eax
  4207eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ec:	ret    
  4207ed:	adc    BYTE PTR [eax],dl
  4207ef:	pop    ebx
  4207f0:	fwait
  4207f1:	inc    esp
  4207f2:	push   ss
  4207f3:	sub    al,0x96
  4207f5:	inc    ebx
  4207f6:	dec    ebx
  4207f7:	aam    0xb3
  4207f9:	dec    ecx
  4207fa:	enter  0x3e8f,0xc8
  4207fe:	les    edi,FWORD PTR [eax+0x18bb9f60]
  420804:	imul   ecx,esi,0x7c08c220
  42080a:	sbb    BYTE PTR [ebp+0x62],bh
  42080d:	mov    dl,0x12
  42080f:	call   0xbcfbf1da
  420814:	pop    edi
  420815:	push   0xffffffa8
  420817:	imul   ebp,DWORD PTR fs:[edx],0x8bc70e86
  42081e:	mov    ds:0xc6735a08,al
  420823:	stc    
  420824:	pushf  
  420825:	sub    BYTE PTR [ebx],bh
  420827:	and    edi,DWORD PTR [ebx]
  420829:	xor    dl,BYTE PTR [ebp-0x62]
  42082c:	(bad)
  42082f:	inc    esp
  420830:	loopne 0x42083e
  420832:	popa   
  420833:	fild   DWORD PTR [eax-0x3b8b99cd]
  420839:	in     al,dx
  42083a:	cmp    eax,0x2e68204e
  42083f:	push   ds
  420840:	push   esp
  420841:	in     al,0xda
  420843:	shr    BYTE PTR [ebx-0x71fd845b],cl
  420849:	push   cs
  42084a:	jecxz  0x4208c8
  42084c:	scas   eax,DWORD PTR es:[edi]
  42084d:	pop    eax
  42084e:	bnd jns 0x4208a3
  420851:	jbe    0x420891
  420853:	xchg   esi,eax
  420854:	retf   0xab44
  420857:	popa   
  420858:	(bad)  
  420859:	xchg   esp,eax
  42085a:	mov    ebx,0x15ed343d
  42085f:	cmp    esp,edx
  420861:	or     BYTE PTR fs:[edi+ebp*2+0x6a],bl
  420866:	hlt    
  420867:	call   0xec3b:0xf6f58a77
  42086e:	sub    ebp,DWORD PTR [esi+0x6ad00cc5]
  420874:	xor    ebp,DWORD PTR [ecx]
  420876:	sub    BYTE PTR [edx-0x50],ch
  420879:	sbb    DWORD PTR [ebp-0x38],0xb51b3903
  420880:	mov    bp,0x8188
  420884:	dec    ebx
  420885:	cmc    
  420886:	clc    
  420887:	shl    bl,1
  420889:	cdq    
  42088a:	and    DWORD PTR [edi-0x797dd9a2],esi
  420890:	xor    al,0xaa
  420892:	fs and DWORD PTR es:[edi-0x5a],0xf98ba26
  42089b:	int    0xd1
  42089d:	int3   
  42089e:	sub    eax,0x69785735
  4208a3:	retf   
  4208a4:	sbb    eax,DWORD PTR [ebx-0x120c0067]
  4208aa:	inc    BYTE PTR [esi]
  4208ac:	and    al,0xb0
  4208ae:	std    
  4208af:	dec    esp
  4208b0:	lods   al,BYTE PTR ds:[esi]
  4208b1:	jns    0x420867
  4208b3:	fdivr  QWORD PTR [eax-0x7a8dd26f]
  4208b9:	fld    DWORD PTR [ebx*8+0x7494cabe]
  4208c0:	sub    DWORD PTR [edi+ecx*2-0x3884ac8b],edx
  4208c7:	or     ecx,DWORD PTR [eax]
  4208c9:	rcr    ecx,1
  4208cb:	bound  ecx,QWORD PTR [esp+eax*8-0x471df6b3]
  4208d2:	retf   
  4208d3:	scas   al,BYTE PTR es:[edi]
  4208d4:	rcr    DWORD PTR [eax],0xc8
  4208d7:	sbb    DWORD PTR [edi-0x2dc24180],esi
  4208dd:	add    al,0x35
  4208df:	(bad)  
  4208e0:	cmp    DWORD PTR [ebx-0x406a0b2b],esp
  4208e6:	dec    ebx
  4208e7:	push   0xffffffd9
  4208e9:	enter  0x703,0xfd
  4208ed:	les    ebx,FWORD PTR [eax]
  4208ef:	dec    esi
  4208f0:	dec    esp
  4208f1:	mov    ebp,0xfd85171e
  4208f6:	fs mov dl,0xbd
  4208f9:	leave  
  4208fa:	out    dx,al
  4208fb:	mov    esp,0x2d6c7e4e
  420900:	mov    ebx,edx
  420902:	ret    
  420903:	fsub   DWORD PTR [ebx+0x32]
  420906:	sbb    DWORD PTR [ebx-0x39],edx
  420909:	push   edi
  42090a:	popa   
  42090b:	call   0xf491cb95
  420910:	xor    DWORD PTR [esi+0x35],esp
  420913:	lock fs or ebx,eax
  420917:	rcr    bh,cl
  420919:	inc    esi
  42091a:	push   ebx
  42091b:	fisubr DWORD PTR [eax]
  42091d:	push   cs
  42091e:	imul   ecx,DWORD PTR [edx-0x706950fd],0xffffff96
  420925:	jle    0x420940
  420927:	push   es
  420928:	jmp    0x420911
  42092a:	ja     0x420946
  42092c:	push   0x893ba312
  420931:	sbb    BYTE PTR [edx-0xc40cfe0],ah
  420937:	popf   
  420938:	lock rcr DWORD PTR ds:[ecx+0x22],1
  42093d:	mov    ecx,ebx
  42093f:	sbb    DWORD PTR [edx-0x50],ebp
  420942:	test   al,0x55
  420944:	push   0x47
  420946:	lods   eax,DWORD PTR ds:[esi]
  420947:	pop    ds
  420948:	adc    BYTE PTR [ecx],bl
  42094a:	ja     0x420960
  42094c:	jns    0x42093b
  42094e:	test   eax,0x79bec392
  420953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420954:	xor    ebp,DWORD PTR [edi]
  420956:	out    0x7a,al
  420958:	sti    
  420959:	sub    BYTE PTR [edx-0x125e9e97],al
  42095f:	cmp    eax,0x3a6e14c0
  420964:	sbb    al,0xf6
  420966:	adc    eax,DWORD PTR [ebp+0x7c]
  420969:	call   FWORD PTR [ebx+0x44]
  42096c:	mov    WORD PTR [eax-0x29],es
  42096f:	int3   
  420970:	sbb    DWORD PTR [ebp+0x269ff3c4],edi
  420976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420977:	imul   esi,DWORD PTR ds:0x2dc0c69c,0x58
  42097e:	and    DWORD PTR [edx-0x74],eax
  420981:	adc    ch,BYTE PTR [esp+eiz*2+0x5]
  420985:	test   eax,0x483313dd
  42098a:	lea    eax,ds:0x288caf0
  420990:	iret   
  420991:	ret    
  420992:	and    cl,BYTE PTR [ebx-0x4d]
  420995:	jp     0x420938
  420997:	loop   0x4209ee
  420999:	adc    bl,BYTE PTR [ebx+0x73]
  42099c:	int3   
  42099d:	and    al,0x77
  42099f:	pop    ss
  4209a0:	xor    edx,DWORD PTR [ebp+0x3b51940]
  4209a6:	jne    0x420a0e
  4209a8:	xor    bh,BYTE PTR [edx+edi*2]
  4209ab:	adc    dl,BYTE PTR [edx]
  4209ad:	ds enter 0xb782,0xb1
  4209b2:	mov    esi,0x6e77f242
  4209b7:	or     al,0x41
  4209b9:	push   esp
  4209ba:	int    0x1e
  4209bc:	hlt    
  4209bd:	mov    ecx,0x675c6803
  4209c2:	mov    al,0x53
  4209c4:	daa    
  4209c5:	test   eax,0xc4575015
  4209ca:	enter  0xcf58,0x33
  4209ce:	dec    edx
  4209cf:	les    esp,FWORD PTR [ebx+0x79cc63a8]
  4209d5:	ret    
  4209d6:	pop    edx
  4209d7:	xor    al,0x43
  4209d9:	stos   DWORD PTR es:[edi],eax
  4209da:	push   es
  4209db:	xchg   esi,eax
  4209dc:	xchg   esi,eax
  4209dd:	inc    edx
  4209de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209df:	fcomp  DWORD PTR [edx]
  4209e1:	ret    
  4209e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209e3:	sbb    DWORD PTR [ecx+0x3c13ea9a],edx
  4209e9:	mov    bh,0x2e
  4209eb:	imul   ebx,esp,0x63
  4209ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209ef:	jb     0x4209f8
  4209f1:	push   es
  4209f2:	scas   al,BYTE PTR es:[edi]
  4209f3:	cmp    al,0xe2
  4209f5:	xor    al,0x53
  4209f7:	imul   ebp,DWORD PTR [edi+edx*4+0x42],0x8844d9d4
  4209ff:	stos   BYTE PTR es:[edi],al
  420a00:	jno    0x4209b9
  420a02:	cmp    DWORD PTR [esi+0x1807902],eax
  420a08:	sbb    al,0xe5
  420a0a:	jl     0x4209f1
  420a0c:	clc    
  420a0d:	aaa    
  420a0e:	arpl   WORD PTR [esi+0x78],bp
  420a11:	xor    BYTE PTR [eax+ebx*8-0x27b44bf1],bl
  420a18:	ss pop es
  420a1a:	mov    bl,0x46
  420a1c:	mov    bl,0xab
  420a1e:	call   0xf9b88b0b
  420a23:	sbb    al,0xdd
  420a25:	ds fsubrp st(0),st
  420a28:	mul    BYTE PTR ds:[ebp-0x3472a8da]
  420a2f:	xor    ch,BYTE PTR [esi-0x38fc3c0]
  420a35:	(bad)
  420a3a:	xor    dl,BYTE PTR [edi+edi*4]
  420a3d:	int3   
  420a3e:	pusha  
  420a3f:	(bad)  
  420a40:	jmp    0x420a0e
  420a42:	xor    eax,edi
  420a44:	jg     0x420a40
  420a46:	add    edi,DWORD PTR ds:[eax]
  420a49:	stos   DWORD PTR es:[edi],eax
  420a4a:	xchg   cl,ah
  420a4c:	mov    ecx,0x3aa6dc50
  420a51:	(bad)  
  420a52:	sub    BYTE PTR [edi],ch
  420a54:	mov    al,0x14
  420a56:	fild   DWORD PTR ds:0xec5d362f
  420a5c:	add    dl,BYTE PTR [edi-0x39328a63]
  420a62:	das    
  420a63:	nop
  420a64:	icebp  
  420a65:	adc    BYTE PTR [edx+0x7907e42a],cl
  420a6b:	pop    esi
  420a6c:	sahf   
  420a6d:	mov    ss:0xcd0bf34f,al
  420a73:	inc    ebx
  420a74:	sbb    BYTE PTR ds:0x62c468c9,bl
  420a7a:	ins    BYTE PTR es:[edi],dx
  420a7b:	mov    dh,0xff
  420a7e:	push   ecx
  420a7f:	test   al,0xa1
  420a81:	call   0x8aec:0xc88070ff
  420a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a89:	mov    ebp,0x82b38b53
  420a8e:	cs inc edx
  420a90:	add    ch,BYTE PTR [esp+ecx*2-0x5382b478]
  420a97:	pop    ebx
  420a98:	je     0x420a3a
  420a9a:	not    DWORD PTR ds:0x20edc14d
  420aa0:	stos   DWORD PTR es:[edi],eax
  420aa1:	mov    esp,0x6838c097
  420aa6:	mov    cl,0x81
  420aa8:	pop    ds
  420aa9:	(bad)
  420aac:	or     DWORD PTR [ecx],ebp
  420aae:	das    
  420aaf:	sahf   
  420ab0:	sti    
  420ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ab2:	and    eax,0xdc6d3f72
  420ab7:	and    ah,dl
  420ab9:	jmp    0x420b2f
  420abb:	adc    eax,0x9e147a2e
  420ac0:	inc    ebp
  420ac1:	jle    0x420b18
  420ac3:	mov    bh,0x47
  420ac5:	mov    cl,0x7c
  420ac7:	or     BYTE PTR [eax+0x3b],al
  420aca:	mov    al,0xbf
  420acc:	and    dl,BYTE PTR [edi]
  420ace:	aad    0x8b
  420ad0:	pop    ecx
  420ad1:	int3   
  420ad2:	mov    al,ds:0xe5276783
  420ad7:	xchg   esp,eax
  420ad8:	(bad)  
  420ad9:	and    esp,ecx
  420adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420adc:	es sub al,0xb5
  420adf:	and    ebx,esi
  420ae1:	xchg   ebp,eax
  420ae2:	xchg   edi,eax
  420ae3:	outs   dx,DWORD PTR ds:[esi]
  420ae4:	pop    esp
  420ae5:	adc    bh,cl
  420ae7:	xchg   ecx,eax
  420ae8:	jmp    0x371ed015
  420aed:	sub    DWORD PTR [eax-0x45c233d5],edi
  420af3:	fwait
  420af4:	jo     0x420afd
  420af6:	adc    DWORD PTR [esi-0x42],0x5f
  420afa:	push   ss
  420afb:	push   ds
  420afc:	push   es
  420afd:	cmp    eax,DWORD PTR [eax+0x25]
  420b00:	out    0xc7,al
  420b02:	or     eax,0xe595244d
  420b07:	pop    ecx
  420b08:	push   esp
  420b09:	ret    0xc69c
  420b0c:	addr16 jb 0x420aa5
  420b0f:	dec    esp
  420b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b11:	les    ebx,FWORD PTR [edx-0x5c]
  420b14:	xchg   ecx,eax
  420b15:	push   ecx
  420b16:	int    0x99
  420b18:	jns    0x420aed
  420b1a:	push   ebx
  420b1b:	jns    0x420b89
  420b1d:	xor    esi,ebp
  420b1f:	scas   eax,DWORD PTR es:[edi]
  420b20:	in     al,0x92
  420b22:	and    BYTE PTR [esi+0x7f],ch
  420b25:	push   cs
  420b26:	or     ah,ah
  420b28:	sbb    esp,DWORD PTR [ecx+eiz*1+0x40d428e0]
  420b2f:	and    al,0x88
  420b31:	xor    dl,BYTE PTR [ecx-0x14b723ef]
  420b37:	adc    al,0x54
  420b39:	or     dl,al
  420b3b:	push   esi
  420b3c:	mov    al,ds:0xdd9fa9d5
  420b41:	jl     0x420add
  420b43:	and    BYTE PTR [ecx+0x1c93aae8],0x26
  420b4a:	xor    al,0x10
  420b4c:	xor    BYTE PTR [eax-0x21],dh
  420b4f:	das    
  420b50:	mov    esp,0x874dc28f
  420b55:	pop    esi
  420b56:	push   ds
  420b57:	ret    
  420b58:	mov    al,ds:0x6c67e0ff
  420b5d:	jb     0x420b64
  420b5f:	mov    bl,dl
  420b61:	jns    0x420af5
  420b63:	xchg   BYTE PTR [eax-0x56],cl
  420b66:	scas   eax,DWORD PTR es:[edi]
  420b67:	shl    BYTE PTR [edi],cl
  420b69:	jne    0x420be7
  420b6b:	cmp    cl,BYTE PTR [edi]
  420b6d:	xchg   ebp,eax
  420b6e:	xchg   ebp,eax
  420b6f:	push   es
  420b70:	cmp    edi,ebp
  420b72:	push   edx
  420b73:	mov    esi,ds
  420b75:	adc    eax,0xc38c8062
  420b7a:	cmp    cl,BYTE PTR [eax-0x506740eb]
  420b80:	mov    WORD PTR [edi-0xd],cs
  420b83:	pop    ecx
  420b84:	push   ecx
  420b85:	das    
  420b86:	sub    edi,edi
  420b88:	and    edi,DWORD PTR [edx-0x21]
  420b8b:	add    al,0x9a
  420b8d:	rcl    BYTE PTR [edi-0x4c1b6803],0x55
  420b94:	in     eax,0x6f
  420b96:	xor    BYTE PTR [esi-0x29],bh
  420b99:	in     al,0xa4
  420b9b:	retf   0x96d4
  420b9e:	or     ecx,DWORD PTR [edx-0x652e1f9]
  420ba4:	ds xchg ax,ax
  420ba7:	js     0x420b8c
  420ba9:	hlt    
  420baa:	mov    al,ds:0xe67343b0
  420baf:	aam    0xa5
  420bb1:	xchg   ecx,eax
  420bb2:	push   es
  420bb3:	setbe  ah
  420bb6:	mov    edx,0x72d7ae6c
  420bbb:	fstp   QWORD PTR [ecx]
  420bbd:	iret   
  420bbe:	in     eax,dx
  420bbf:	pop    esi
  420bc0:	jnp    0x420b84
  420bc2:	mov    edi,0x196ae67
  420bc7:	inc    ebx
  420bc8:	mov    al,ds:0x9774d577
  420bcd:	push   edi
  420bce:	dec    edi
  420bcf:	cmp    BYTE PTR [eax+0x36],0x34
  420bd3:	clc    
  420bd4:	or     eax,DWORD PTR [ebp-0x36]
  420bd7:	ins    DWORD PTR es:[edi],dx
  420bd8:	(bad)  
  420bd9:	pop    ebx
  420bda:	xchg   edi,eax
  420bdb:	dec    bh
  420bdd:	and    ecx,DWORD PTR [ebx-0x6d]
  420be0:	test   eax,0x69deb09a
  420be5:	xchg   ebp,eax
  420be6:	xchg   BYTE PTR [esi-0x60],bh
  420be9:	pop    es
  420bea:	bound  eax,QWORD PTR [edi+0x68a9079d]
  420bf0:	xchg   DWORD PTR [edx+0x27],edi
  420bf3:	sbb    al,0xa9
  420bf5:	clc    
  420bf6:	mov    eax,eax
  420bf8:	test   al,0xa7
  420bfa:	sbb    esp,DWORD PTR [edx-0x22e308fd]
  420c00:	stos   DWORD PTR es:[edi],eax
  420c01:	into   
  420c02:	rol    BYTE PTR [edx-0x662f5469],0xb8
  420c09:	sbb    eax,0x9730c925
  420c0e:	loope  0x420bf9
  420c10:	pop    edi
  420c11:	mov    ebp,0x7b7446c9
  420c16:	ja     0x420be2
  420c18:	push   es
  420c19:	pop    edx
  420c1a:	stc    
  420c1b:	imul   BYTE PTR [edi]
  420c1d:	out    dx,al
  420c1e:	xchg   edx,eax
  420c1f:	ret    0x3af
  420c22:	imul   bl
  420c24:	mov    eax,0x902bc3ce
  420c29:	iret   
  420c2a:	mov    DWORD PTR [esi+0x7c05ca6a],ebx
  420c30:	frstor [ebx-0x5c]
  420c33:	add    DWORD PTR [edi+0x493657ee],eax
  420c39:	jb     0x420be7
  420c3b:	xchg   edi,eax
  420c3c:	push   ecx
  420c3d:	int    0xb4
  420c3f:	add    DWORD PTR [esi],ebx
  420c41:	js     0x420c07
  420c43:	aas    
  420c44:	sar    DWORD PTR [edx+0x7ad367bc],cl
  420c4a:	fs cmp eax,0xf83abb7c
  420c50:	or     al,0x6d
  420c52:	idiv   DWORD PTR [edx-0x20b741ca]
  420c58:	cmp    al,0x4e
  420c5a:	js     0x420bf5
  420c5c:	jmp    0xeb77:0x1158346b
  420c63:	adc    ch,dl
  420c65:	inc    edx
  420c66:	shr    DWORD PTR [edi],1
  420c68:	cmc    
  420c69:	(bad)  
  420c6a:	pop    ebx
  420c6b:	dec    eax
  420c6c:	add    eax,0x6bcc
  420c71:	add    BYTE PTR [ecx],al
  420c73:	jge    0x420c4d
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx-0x79047a9]
  420c80:	test   BYTE PTR [ecx+0x186ed],ch
  420c86:	cmc    
  420c87:	add    al,0x0
  420c89:	add    ch,ch
  420c8b:	ror    BYTE PTR [edx+eax*8+0x548c1e40],1
  420c92:	lods   eax,DWORD PTR ds:[esi]
  420c93:	fs scas al,BYTE PTR es:[edi]
  420c95:	adc    esp,DWORD PTR [ecx-0x4f70f4fb]
  420c9b:	das    
  420c9c:	ret    
  420c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c9e:	cli    
  420c9f:	adc    eax,0x8cb782c9
  420ca4:	adc    al,0xe5
  420ca6:	push   edx
  420ca7:	dec    ecx
  420ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ca9:	ins    DWORD PTR es:[edi],dx
  420caa:	or     ch,BYTE PTR [eax+0x4f]
  420cad:	lods   eax,DWORD PTR ds:[esi]
  420cae:	lods   eax,DWORD PTR ds:[esi]
  420caf:	xchg   ebp,eax
  420cb0:	scas   al,BYTE PTR es:[edi]
  420cb1:	push   ebx
  420cb2:	test   eax,0xfcb69281
  420cb7:	jae    0x420c74
  420cb9:	add    eax,0xf285de00
  420cbe:	not    DWORD PTR [ebx+ebp*4-0x8]
  420cc2:	dec    ecx
  420cc3:	and    BYTE PTR [eax-0x12],0x71
  420cc7:	xor    BYTE PTR [esi+0xd],bh
  420cca:	mov    dh,0xf3
  420ccc:	pop    esp
  420ccd:	cdq    
  420cce:	inc    ebp
  420ccf:	fsubr  DWORD PTR [esi+0xe]
  420cd2:	ret    0xd61c
  420cd5:	push   ss
  420cd6:	ss pop eax
  420cd8:	jnp    0x420c71
  420cda:	and    esp,DWORD PTR [ecx-0x6d525715]
  420ce0:	dec    ecx
  420ce1:	jg     0x420c97
  420ce3:	push   esp
  420ce4:	jmp    0x420d50
  420ce6:	xor    DWORD PTR [esi],esi
  420ce8:	mov    es,edx
  420cea:	sub    eax,DWORD PTR [edx+ebp*1]
  420ced:	inc    esi
  420cee:	xchg   DWORD PTR [ebp-0xe982df0],esi
  420cf4:	mov    eax,ds:0xf9eccd90
  420cf9:	pop    ecx
  420cfa:	pop    edx
  420cfb:	aas    
  420cfc:	imul   ebx,DWORD PTR [esi],0xf5c722f4
  420d02:	mov    WORD PTR cs:[edi+edx*4+0x45d24d3f],?
  420d0a:	push   edi
  420d0b:	cmp    BYTE PTR [edx-0x3c],al
  420d0e:	xchg   esi,eax
  420d0f:	cmp    BYTE PTR [edx-0x80],al
  420d12:	mov    ebp,ebx
  420d14:	dec    edi
  420d15:	mov    cl,0x1
  420d17:	sub    DWORD PTR ds:0x38c09a4a,ecx
  420d1d:	loopne 0x420ce4
  420d1f:	call   0xdff416be
  420d24:	add    DWORD PTR [edi-0x55b3f660],ecx
  420d2a:	mov    eax,0xa8987571
  420d2f:	rcr    DWORD PTR [esi+0x640e93f8],cl
  420d35:	dec    ecx
  420d36:	das    
  420d37:	clc    
  420d38:	mov    ebp,0x2bdf78ed
  420d3d:	cmp    DWORD PTR [edx-0x577b801f],0xf989ba1b
  420d47:	pop    eax
  420d48:	pop    edi
  420d49:	sub    dl,ah
  420d4b:	pop    ss
  420d4c:	xchg   edx,eax
  420d4d:	inc    ebp
  420d4e:	in     al,dx
  420d4f:	push   edi
  420d50:	pop    esi
  420d51:	mov    bl,0x7
  420d53:	gs inc esp
  420d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d56:	push   0x20
  420d58:	stc    
  420d59:	imul   esi,DWORD PTR [esi],0xda9a3340
  420d5f:	xchg   ecx,eax
  420d60:	daa    
  420d61:	sbb    BYTE PTR fs:[ebp+0x8],al
  420d65:	add    DWORD PTR [edx+esi*8],0x85b32449
  420d6c:	mov    ebx,0x954488d9
  420d71:	out    dx,al
  420d72:	adc    al,0x64
  420d74:	pop    esi
  420d75:	mov    esp,0x3704b815
  420d7a:	lahf   
  420d7b:	jae    0x420df5
  420d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d7e:	push   ss
  420d7f:	xchg   edx,eax
  420d80:	mov    ebx,0xde2ee635
  420d85:	mov    ch,0xb8
  420d87:	nop
  420d88:	ds (bad) 
  420d8a:	loope  0x420d1e
  420d8c:	mov    ch,0xa5
  420d8e:	bound  ebp,QWORD PTR [edi-0x27a0ea9f]
  420d94:	adc    ecx,DWORD PTR [esi+0x7274f860]
  420d9a:	rol    BYTE PTR [ebp+0x4642861a],0xdb
  420da1:	out    dx,al
  420da2:	(bad)  
  420da3:	dec    BYTE PTR [edx+ecx*8]
  420da6:	fisttp DWORD PTR [ecx-0x2eda0396]
  420dac:	fistp  QWORD PTR [edi+ecx*1]
  420daf:	mov    al,0x59
  420db1:	adc    esp,DWORD PTR [ecx]
  420db3:	jmp    0x96c49401
  420db8:	(bad)  
  420dbc:	pop    ebp
  420dbd:	or     dh,bl
  420dbf:	and    dl,dl
  420dc1:	adc    DWORD PTR [esi-0x2023ff07],esi
  420dc7:	movhps xmm7,QWORD PTR [ecx]
  420dca:	fwait
  420dcb:	gs dec edx
  420dcd:	jecxz  0x420dc0
  420dcf:	fldcw  WORD PTR [eax]
  420dd1:	push   ecx
  420dd2:	pop    edx
  420dd3:	cwde   
  420dd4:	lea    edi,[edx+0x54c15279]
  420dda:	shr    DWORD PTR [edi+0x7e],1
  420ddd:	pop    edi
  420dde:	es jge 0x420e30
  420de1:	add    BYTE PTR ds:0x6bc738fc,bl
  420de7:	xchg   ecx,eax
  420de8:	pop    esi
  420de9:	sub    bh,BYTE PTR [eax-0xe]
  420dec:	xchg   esp,eax
  420ded:	aad    0xa
  420def:	loop   0x420e4d
  420df1:	xor    ebp,esp
  420df3:	mov    BYTE PTR [ecx+ecx*2-0x4d],0x75
  420df8:	in     eax,dx
  420df9:	popa   
  420dfa:	sub    bl,BYTE PTR [ebx+0x4d]
  420dfd:	std    
  420dfe:	pop    ebp
  420dff:	mov    edx,ebx
  420e01:	cmp    dh,BYTE PTR [edx+0x4c]
  420e04:	mov    ecx,0x4485af19
  420e09:	pop    edx
  420e0a:	movq   mm3,QWORD PTR [eax-0x66a6b5da]
  420e11:	loopne 0x420da5
  420e13:	iret   
  420e14:	or     BYTE PTR [esi-0x7b736b49],cl
  420e1a:	fsub   QWORD PTR [esi*2-0x2023cb22]
  420e21:	(bad)  
  420e22:	ds gs add dh,dl
  420e26:	mov    dl,0xd0
  420e28:	xor    al,0x23
  420e2a:	sahf   
  420e2b:	mov    bl,0x89
  420e2d:	xor    DWORD PTR [ebx-0x8],eax
  420e30:	and    al,0x3d
  420e32:	sub    BYTE PTR [edx-0x4580e7f8],dl
  420e38:	jp     0x420e13
  420e3a:	fdiv   QWORD PTR [esi+eax*4+0x69e27b97]
  420e41:	sti    
  420e42:	xchg   BYTE PTR [eax+0x10b3354c],ch
  420e48:	jmp    0x420df2
  420e4a:	cmp    DWORD PTR [ebp+0x4e],0xffffff87
  420e4e:	mov    al,0x58
  420e50:	pop    ds
  420e51:	dec    ebp
  420e52:	or     al,0x3d
  420e54:	and    DWORD PTR [ebx-0x33],0xaa78bd3
  420e5b:	(bad)  
  420e5c:	add    BYTE PTR [edi+0x7a],ch
  420e5f:	lahf   
  420e60:	popf   
  420e61:	out    dx,eax
  420e62:	pop    ecx
  420e63:	cdq    
  420e64:	into   
  420e65:	push   ss
  420e66:	clc    
  420e67:	das    
  420e68:	adc    esi,DWORD PTR [esi-0x78]
  420e6b:	push   0xc1251f97
  420e70:	add    DWORD PTR [esi-0x2d],ecx
  420e73:	stos   BYTE PTR es:[edi],al
  420e74:	lock popa 
  420e76:	cmp    eax,0x8b32b8b9
  420e7b:	aas    
  420e7c:	jbe    0x420e25
  420e7e:	scas   eax,DWORD PTR es:[edi]
  420e7f:	adc    al,0x5f
  420e81:	addr16 dec eax
  420e83:	pop    edi
  420e84:	dec    edi
  420e85:	ss les eax,FWORD PTR fs:[ebp-0x30a92ddd]
  420e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e8e:	mov    ebp,0xb9a2d283
  420e93:	cld    
  420e94:	ud1    ebx,DWORD PTR [ecx+0x4f]
  420e98:	jns    0x420e7b
  420e9a:	pop    esi
  420e9b:	sbb    dl,BYTE PTR [ebp-0x61]
  420e9e:	pop    eax
  420e9f:	(bad)  
  420ea0:	cmp    eax,0x6cb84985
  420ea5:	enter  0xf7ed,0x64
  420ea9:	in     al,0x32
  420eab:	cmp    DWORD PTR [esi-0x5d],ebx
  420eae:	sti    
  420eaf:	push   ebp
  420eb0:	test   BYTE PTR [eax],bl
  420eb2:	push   ebp
  420eb3:	retf   
  420eb4:	mov    ebp,0x15df094
  420eb9:	sbb    al,0x62
  420ebb:	les    edi,FWORD PTR ds:0x838290e2
  420ec1:	cdq    
  420ec2:	cmp    BYTE PTR [ebx+0x17],dl
  420ec5:	and    dh,BYTE PTR [esi+0x39]
  420ec8:	push   ebp
  420ec9:	leave  
  420eca:	aam    0x9a
  420ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ecd:	pushf  
  420ece:	(bad)  
  420ecf:	adc    al,BYTE PTR [edx+ecx*4-0x3061625f]
  420ed6:	retf   0xcd51
  420ed9:	test   eax,0x2ca52048
  420ede:	push   eax
  420ee0:	or     dh,BYTE PTR [edi-0x9]
  420ee3:	loopne 0x420e79
  420ee5:	xchg   DWORD PTR [ecx+0x41],esp
  420ee8:	out    dx,eax
  420ee9:	lock add eax,0x7e10725
  420eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ef0:	xchg   DWORD PTR [ebp+0x21],edi
  420ef3:	(bad)  
  420ef5:	imul   ebx,DWORD PTR [esi+0x281cf26e],0x64a7b27d
  420eff:	outs   dx,DWORD PTR ds:[esi]
  420f00:	inc    esi
  420f01:	xchg   DWORD PTR [ebx-0x458f8b1e],esi
  420f07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f08:	dec    edx
  420f09:	mov    cl,0x83
  420f0b:	dec    eax
  420f0c:	xchg   edx,eax
  420f0d:	outs   dx,BYTE PTR ds:[esi]
  420f0e:	jb     0x420ee0
  420f10:	das    
  420f11:	xor    al,0xc5
  420f13:	or     BYTE PTR [edi-0x26],al
  420f16:	fdivr  DWORD PTR [esi-0x3632aca6]
  420f1c:	(bad)  [edi-0x22]
  420f1f:	push   edi
  420f20:	adc    DWORD PTR [eax],ebx
  420f22:	js     0x420f36
  420f24:	dec    ebx
  420f25:	sub    eax,0xc255fe87
  420f2a:	pushf  
  420f2b:	repnz xor al,0xab
  420f2e:	inc    ebx
  420f2f:	call   0x4247b8ec
  420f34:	sbb    DWORD PTR ds:0x74860105,esi
  420f3a:	popf   
  420f3b:	(bad)  
  420f3c:	jmp    DWORD PTR [ebx-0x653aa917]
  420f42:	pop    ebx
  420f43:	mov    eax,0xacdf8b31
  420f48:	jmp    0x420eeb
  420f4a:	call   DWORD PTR [edi-0x7e6c4290]
  420f50:	fcmovbe st,st(0)
  420f52:	xor    BYTE PTR [edi],cl
  420f54:	sbb    BYTE PTR ds:0x7356139,bh
  420f5a:	add    edx,edi
  420f5c:	push   esi
  420f5d:	clc    
  420f5e:	pop    edi
  420f5f:	mov    esi,DWORD PTR [eax-0x4c]
  420f62:	lea    edx,[eax+0x6f19b171]
  420f68:	out    0xa8,al
  420f6a:	sahf   
  420f6b:	shr    BYTE PTR [esi+edx*2+0x37325028],0xf3
  420f73:	icebp  
  420f74:	lods   eax,DWORD PTR ds:[esi]
  420f75:	call   DWORD PTR [ebx+0x5fedd783]
  420f7b:	jle    0x420faa
  420f7d:	dec    eax
  420f7e:	push   eax
  420f7f:	enter  0x69ff,0xd8
  420f83:	out    0xf6,al
  420f85:	inc    ebp
  420f86:	retf   0x868e
  420f89:	je     0x420f21
  420f8b:	shl    esp,1
  420f8d:	dec    eax
  420f8e:	and    BYTE PTR [esi-0x7c8672d9],dl
  420f94:	loop   0x420f90
  420f96:	(bad)  
  420f97:	imul   ebx,DWORD PTR [ebx-0x23],0x6b
  420f9b:	sbb    DWORD PTR [ecx+0x4abe8619],0x4f
  420fa2:	push   ss
  420fa3:	in     al,dx
  420fa4:	push   edi
  420fa5:	mov    ah,0xbe
  420fa7:	jmp    0x3fe133f6
  420fac:	ret    
  420fad:	(bad)  
  420fae:	jmp    0x50fe6088
  420fb3:	adc    al,0x7f
  420fb5:	(bad)  
  420fb6:	stc    
  420fb7:	fs pop ecx
  420fb9:	pusha  
  420fba:	int    0x8b
  420fbc:	mov    ?,WORD PTR [esi]
  420fbe:	addr16 mov edx,edx
  420fc1:	lods   al,BYTE PTR ds:[esi]
  420fc2:	add    DWORD PTR [edx+eax*2],eax
  420fc5:	xor    cl,BYTE PTR [edx-0x17]
  420fc8:	pop    ds
  420fc9:	push   0x7ff1d4f2
  420fce:	sub    eax,0x6b494140
  420fd3:	and    DWORD PTR [ebx+0x6c],0xffffff9a
  420fd7:	sbb    eax,DWORD PTR [esi+0x73]
  420fda:	aam    0x64
  420fdc:	jnp    0x42103f
  420fde:	pop    ecx
  420fdf:	je     0x420ffc
  420fe1:	int3   
  420fe2:	mov    dh,0xde
  420fe4:	cs lahf 
  420fe6:	aaa    
  420fe7:	test   eax,0xd8ddeaad
  420fec:	fcom   DWORD PTR [ebx+0x4e240b63]
  420ff2:	(bad)  
  420ff3:	jecxz  0x420fb2
  420ff5:	xchg   ecx,eax
  420ff6:	xchg   si,ax
  420ff8:	imul   ebx,DWORD PTR [edi+ebp*4+0x1f9f750e],0x20bb3a82
  421003:	or     DWORD PTR [eax+0xdbd77b9],ecx
  421009:	jecxz  0x42100c
  42100b:	lahf   
  42100c:	in     eax,dx
  42100d:	pop    ebx
  42100e:	loopne 0x421028
  421010:	call   FWORD PTR [edx-0x24982d0b]
  421016:	fdivrp st(4),st
  421018:	cmp    DWORD PTR [ebx-0x20],0x14
  42101c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42101d:	add    eax,0x1c749d67
  421022:	gs jae 0x42100f
  421025:	in     al,dx
  421026:	outs   dx,BYTE PTR ds:[esi]
  421027:	retf   0x9b44
  42102a:	inc    DWORD PTR [edx]
  42102c:	jbe    0x421002
  42102e:	rcl    BYTE PTR [edx],cl
  421030:	mov    ds:0x92cbc9d5,eax
  421035:	repnz add al,0x6f
  421038:	cli    
  421039:	test   eax,0x63f5e7df
  42103e:	lahf   
  42103f:	cmp    eax,0xde93cfd
  421044:	in     al,0x3d
  421046:	add    bl,BYTE PTR [eax]
  421048:	ret    0x6494
  42104b:	mov    al,ds:0x29adfda6
  421050:	stc    
  421051:	xchg   ecx,eax
  421052:	lods   eax,DWORD PTR ds:[esi]
  421053:	nop
  421054:	call   0x2945ec50
  421059:	push   edx
  42105a:	push   esi
  42105b:	inc    edx
  42105c:	cmp    DWORD PTR [esi+0x4dee651a],0xffffff95
  421063:	mov    ch,0xc2
  421065:	add    edx,0x8
  421068:	mov    ebp,0xd9377336
  42106d:	sub    ecx,DWORD PTR [eax]
  42106f:	fs push ebp
  421071:	xchg   ebx,eax
  421072:	mov    dh,0x9
  421074:	inc    esp
  421075:	mov    dl,0x99
  421077:	mov    edi,0xc4c3e883
  42107c:	sbb    BYTE PTR [esi+ecx*2+0x78],ch
  421080:	dec    ebp
  421081:	mov    bl,0xad
  421083:	int    0x9b
  421085:	fdivr  QWORD PTR [esi-0x1d]
  421088:	xlat   BYTE PTR ds:[ebx]
  421089:	(bad)  ds:0xed13926a
  42108f:	or     DWORD PTR [ebp+0x66a592b2],ebx
  421095:	jne    0x421105
  421097:	adc    BYTE PTR [eax+ebp*2],al
  42109a:	mov    dl,BYTE PTR [edi-0x252eee51]
  4210a0:	jg     0x4210ba
  4210a2:	xchg   ebx,eax
  4210a3:	stos   DWORD PTR es:[edi],eax
  4210a4:	pop    edx
  4210a5:	ss jae 0x42105a
  4210a8:	jbe    0x4210a3
  4210aa:	fwait
  4210ab:	xor    al,0x5d
  4210ad:	mov    al,0x66
  4210af:	adc    edi,ebp
  4210b1:	xchg   esp,eax
  4210b2:	aaa    
  4210b3:	xchg   DWORD PTR [ebx+0x7b],ebx
  4210b6:	clc    
  4210b7:	adc    DWORD PTR [edi],eax
  4210b9:	lods   al,BYTE PTR ds:[esi]
  4210ba:	adc    dl,BYTE PTR [eax+0x49e022c0]
  4210c0:	mov    esi,0x36f6d279
  4210c5:	(bad)  
  4210c6:	clc    
  4210c7:	xchg   ebp,eax
  4210c8:	cli    
  4210c9:	cmp    DWORD PTR [edi+ecx*4],0x7847f058
  4210d0:	(bad)  
  4210d1:	jmp    0x2dc3:0x916d4fde
  4210d8:	fmul   DWORD PTR es:[ebx]
  4210db:	pop    ecx
  4210dc:	cmp    ecx,edi
  4210de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210df:	sbb    bh,BYTE PTR [eax+eax*4-0x17]
  4210e3:	fisttp QWORD PTR [eax-0x1427f9a4]
  4210e9:	mov    ah,0x34
  4210eb:	push   0x22
  4210ed:	rcl    eax,0x55
  4210f0:	sub    eax,0x70d37e88
  4210f5:	jle    0x421078
  4210f7:	fsubr  st(3),st
  4210f9:	xor    al,BYTE PTR [ecx]
  4210fb:	adc    edx,DWORD PTR [edi-0x38f4975a]
  421101:	enter  0x66ad,0x1c
  421105:	mov    edi,0x6ca868d9
  42110a:	dec    esi
  42110b:	push   ecx
  42110c:	rol    al,cl
  42110e:	cmp    cl,BYTE PTR [edx+0x27]
  421111:	mov    WORD PTR [eax],?
  421113:	cli    
  421114:	adc    DWORD PTR [edi+ebx*2],ecx
  421117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421118:	sbb    ebp,DWORD PTR [ebp+0x44]
  42111b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42111c:	std    
  42111d:	xchg   ebp,eax
  42111e:	fnstsw WORD PTR [edi]
  421120:	mov    ds:0x4890c0af,eax
  421125:	xor    al,0x45
  421127:	mov    esi,0x471891f4
  42112c:	push   edx
  42112d:	pop    edi
  42112e:	xchg   BYTE PTR [ebx+0x13a1b7a2],dl
  421134:	adc    ah,BYTE PTR [ecx-0x51]
  421137:	jbe    0x42114a
  421139:	(bad)  
  42113a:	pop    edx
  42113b:	jb     0x42112d
  42113d:	cmp    eax,0x84d2fc41
  421142:	enter  0xfc02,0x3
  421146:	push   edx
  421147:	inc    ecx
  421148:	mov    dl,0xa
  42114a:	dec    edi
  42114b:	sub    dh,0x73
  42114e:	or     eax,DWORD PTR ds:0x678519bb
  421154:	xchg   edx,eax
  421155:	mov    esp,0xd0fb7179
  42115a:	cs dec ebp
  42115c:	and    DWORD PTR [edi-0x25b2ec4d],ebx
  421162:	mov    ds,WORD PTR [ebx+edi*4-0x38]
  421166:	loope  0x42117b
  421168:	pusha  
  421169:	dec    ebp
  42116a:	loope  0x421153
  42116c:	push   cs
  42116d:	xchg   esp,eax
  42116e:	push   0xd7a7fdec
  421173:	dec    esp
  421174:	lahf   
  421175:	and    eax,0xb07c194
  42117a:	and    ecx,DWORD PTR [esi+0x44]
  42117d:	xor    bl,BYTE PTR ds:0x87000000
  421183:	iret   
  421184:	adc    ebp,DWORD PTR [edx]
  421186:	pop    ebx
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [ecx-0x1d047472],ah
  421193:	mov    eax,DWORD PTR [ecx]
  421195:	add    ch,dh
  421197:	add    al,0x0
  421199:	add    BYTE PTR [ebp-0x65c15746],dl
  42119f:	dec    edi
  4211a0:	add    eax,0xe08cce85
  4211a5:	lea    eax,ds:0x275b7215
  4211ab:	pop    edx
  4211ac:	add    eax,0x834ac580
  4211b1:	pop    ds
  4211b2:	aas    
  4211b3:	add    edi,ecx
  4211b5:	mov    dh,0xe0
  4211b7:	dec    ecx
  4211b8:	add    eax,0xe9d77ac7
  4211bd:	xor    esp,DWORD PTR [ebp-0x15]
  4211c0:	shl    DWORD PTR [esi-0x30],1
  4211c3:	pop    esi
  4211c4:	or     al,0x5d
  4211c6:	xchg   BYTE PTR [eax-0x4c],dl
  4211c9:	cmp    eax,0x807ef2fd
  4211ce:	cdq    
  4211cf:	sbb    al,0xe2
  4211d1:	out    0xf8,eax
  4211d3:	(bad)  
  4211d4:	or     ebx,DWORD PTR [esi-0x5f]
  4211d7:	out    dx,eax
  4211d8:	(bad)  [esi-0x5cb686bb]
  4211de:	int3   
  4211df:	jb     0x421171
  4211e1:	test   eax,0xc648166c
  4211e6:	pop    edx
  4211e7:	xchg   edi,eax
  4211e8:	sahf   
  4211e9:	lods   al,BYTE PTR ds:[esi]
  4211ea:	(bad)  
  4211eb:	jmp    0x421212
  4211ed:	add    eax,DWORD PTR [edi+0x74]
  4211f0:	push   esp
  4211f1:	cmp    eax,0x5b7ce721
  4211f6:	jl     0x42125b
  4211f8:	pop    ebx
  4211f9:	les    ecx,FWORD PTR [ecx-0x51]
  4211fc:	xchg   DWORD PTR [eax+0x19a707c9],eax
  421202:	scas   eax,DWORD PTR es:[edi]
  421203:	cmp    al,0xc1
  421205:	lds    edx,FWORD PTR [ebp-0x7301476c]
  42120b:	repz jbe 0x421255
  42120e:	pusha  
  42120f:	mov    ch,0x73
  421211:	pop    ebx
  421212:	iret   
  421213:	or     BYTE PTR [eax+0xf693141],ch
  421219:	test   BYTE PTR [edx-0x6dd6664a],cl
  42121f:	inc    esi
  421220:	mov    bh,0xfe
  421222:	xor    bh,BYTE PTR [edx+ebp*8+0x7462942f]
  421229:	sub    ch,bl
  42122b:	in     eax,dx
  42122c:	fwait
  42122d:	or     DWORD PTR ds:0x67466dd9,edx
  421233:	inc    BYTE PTR [ecx-0x79]
  421236:	popa   
  421237:	jmp    0x9c5d:0x7ea58925
  42123e:	je     0x4211ee
  421240:	push   eax
  421241:	or     eax,0x2b4f038
  421246:	mov    eax,0xce05274b
  42124b:	hlt    
  42124c:	dec    ebp
  42124d:	mov    esp,0xe2b62154
  421252:	sub    al,0x23
  421254:	jbe    0x421224
  421256:	js     0x4212c0
  421258:	div    BYTE PTR [ecx+0x796abccc]
  42125e:	xor    al,0x2
  421260:	xor    dh,BYTE PTR [eax-0x6576d6db]
  421266:	mov    ebx,0x60c85821
  42126b:	dec    eax
  42126c:	inc    eax
  42126d:	sub    BYTE PTR ds:0x8b3af58a,bh
  421273:	xchg   BYTE PTR ds:0x7048469c,ah
  421279:	out    0x96,eax
  42127b:	jl     0x4212e8
  42127d:	push   ebp
  42127e:	and    eax,0xf80fcb59
  421283:	cdq    
  421284:	adc    bl,BYTE PTR [edi+0x7f23c8d]
  42128a:	mov    al,0xef
  42128c:	jne    0x4212f6
  42128e:	(bad)  
  42128f:	fcmovnu st,st(4)
  421291:	mov    BYTE PTR [edx],cl
  421293:	(bad)  [ebp+0x49b4db0]
  421299:	sub    edx,DWORD PTR [edi]
  42129b:	pop    esi
  42129c:	and    bl,BYTE PTR [edi+0xdf4cd35]
  4212a2:	or     eax,DWORD PTR [edx]
  4212a4:	xchg   esi,eax
  4212a5:	in     al,0x10
  4212a7:	xchg   ecx,eax
  4212a8:	leave  
  4212a9:	test   ebp,0x25315ac1
  4212af:	je     0x42123c
  4212b1:	cld    
  4212b2:	jns    0x421247
  4212b4:	mov    dl,0xaf
  4212b6:	push   0x60
  4212b8:	ror    BYTE PTR [edx+0x57ed8ddd],0xf3
  4212bf:	adc    eax,0x9764a03b
  4212c4:	ret    
  4212c5:	jns    0x421257
  4212c7:	ja     0x4212fd
  4212c9:	sbb    bh,bl
  4212cb:	inc    edx
  4212cc:	sbb    al,0xd6
  4212ce:	and    al,0x9e
  4212d0:	dec    edx
  4212d1:	push   ss
  4212d2:	cmp    edi,DWORD PTR [esi]
  4212d4:	daa    
  4212d5:	div    BYTE PTR [edi]
  4212d7:	push   edx
  4212d8:	and    edx,DWORD PTR [edx-0x3783fa88]
  4212de:	(bad)  
  4212df:	add    edi,DWORD PTR [ebx+0x5f]
  4212e2:	test   BYTE PTR [ebx],dh
  4212e4:	sub    al,0x8a
  4212e6:	int3   
  4212e7:	ins    BYTE PTR es:[edi],dx
  4212e8:	inc    edi
  4212e9:	fs sub al,0x8c
  4212ec:	rcl    BYTE PTR [eax+0x59],1
  4212ef:	pop    esp
  4212f0:	das    
  4212f1:	pop    ebp
  4212f2:	inc    ebp
  4212f3:	mov    edx,DWORD PTR [ecx-0x4e]
  4212f6:	add    al,0x62
  4212f8:	fisubr WORD PTR [esi+0x68]
  4212fb:	or     eax,0x999138b4
  421300:	fisttp QWORD PTR [ebp+0x781ddbb9]
  421306:	shr    bl,cl
  421308:	adc    eax,0xf379e5ac
  42130d:	and    eax,0x6cacf538
  421312:	mov    esi,0x818d610f
  421317:	cmp    DWORD PTR [esi+eiz*1],edx
  42131a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42131b:	xlat   BYTE PTR ds:[ebx]
  42131c:	jg     0x4212c9
  42131e:	fnstcw WORD PTR [ebx+0x2f7cf806]
  421324:	imul   eax,DWORD PTR [ecx],0x567fe0b7
  42132a:	add    eax,0x38f33f14
  42132f:	and    DWORD PTR [edx],0x36f4830a
  421335:	jp     0x42136a
  421337:	nop
  421338:	jmp    0xf43b:0x226a0f55
  42133f:	dec    eax
  421340:	jne    0x42137a
  421342:	bound  edx,QWORD PTR [ecx-0x6d]
  421345:	(bad)  
  421346:	aam    0x5d
  421348:	ficom  DWORD PTR [ebx+ecx*4-0x37]
  42134c:	xor    eax,0x6f9aa4ed
  421351:	ret    
  421352:	mov    ?,WORD PTR [edx-0x7b]
  421355:	pop    edi
  421356:	(bad)  
  421357:	rol    BYTE PTR [edx+0x31d12184],cl
  42135d:	or     ecx,DWORD PTR [ecx]
  42135f:	sahf   
  421360:	outs   dx,BYTE PTR ds:[esi]
  421361:	or     BYTE PTR [eax],al
  421363:	sbb    esi,DWORD PTR [esi-0xd]
  421366:	and    ah,BYTE PTR ds:0x970b55d2
  42136c:	mov    BYTE PTR [ebx-0x10],0x54
  421370:	arpl   WORD PTR [edi+esi*4],bp
  421373:	arpl   WORD PTR [edx+0x62a2ad05],dx
  421379:	and    eax,0x34c6ecb6
  42137e:	mov    esp,0x9e78f867
  421383:	push   0xffffffb1
  421385:	jo     0x42135e
  421387:	mov    al,0xa4
  421389:	pop    ebp
  42138a:	rol    DWORD PTR [ecx+0x47],cl
  42138d:	sub    al,0xb2
  42138f:	outs   dx,BYTE PTR ds:[esi]
  421390:	int    0x67
  421392:	out    0x9e,al
  421394:	or     esi,DWORD PTR [ebp-0x28]
  421397:	and    eax,0x6e83efe7
  42139c:	adc    edx,DWORD PTR [ebx]
  42139e:	wbinvd 
  4213a0:	push   cs
  4213a1:	or     al,0xe5
  4213a3:	(bad)  
  4213a4:	(bad)  
  4213a6:	test   ah,bl
  4213a8:	pop    ss
  4213a9:	ret    
  4213aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213ab:	cmovae esp,DWORD PTR [ebx]
  4213ae:	imul   esi,DWORD PTR [ebx-0x4efe7e15],0x1e
  4213b5:	inc    esp
  4213b6:	jb     0x4213bd
  4213b8:	push   esp
  4213b9:	push   ds
  4213ba:	jns    0x421412
  4213bc:	mov    ecx,DWORD PTR [ecx-0x1c]
  4213bf:	dec    esp
  4213c0:	test   DWORD PTR [esi+0x24284ff1],ebx
  4213c6:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4213c8:	add    al,0xf9
  4213ca:	cmp    edx,ebx
  4213cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213cd:	sbb    dh,BYTE PTR [eax-0x6b286fdc]
  4213d3:	add    al,0x4c
  4213d5:	leave  
  4213d6:	fdiv   QWORD PTR [ebx+0x5389d599]
  4213dc:	jnp    0x421456
  4213de:	jge    0x421400
  4213e0:	(bad)  
  4213e1:	dec    edx
  4213e2:	xchg   ebx,eax
  4213e3:	loope  0x421388
  4213e5:	xchg   esp,eax
  4213e6:	or     edx,DWORD PTR [ecx-0x7f]
  4213e9:	sub    esi,esp
  4213eb:	lods   eax,DWORD PTR ds:[esi]
  4213ec:	neg    BYTE PTR [ecx+0x70]
  4213ef:	nop
  4213f0:	cmp    eax,0xb1e103e9
  4213f5:	test   al,0xe
  4213f7:	es mov dh,0x36
  4213fa:	sub    BYTE PTR [edx+0x14],cl
  4213fd:	mov    ah,0xc
  4213ff:	xor    esi,esi
  421401:	cmp    al,0xfa
  421403:	es in  al,0xd5
  421406:	mov    ch,0xaa
  421408:	add    DWORD PTR [eax],ecx
  42140a:	std    
  42140b:	leave  
  42140c:	and    esi,DWORD PTR [edi-0x5a]
  42140f:	(bad)  
  421410:	xor    ebp,ebx
  421412:	test   al,0x8b
  421414:	or     al,0x64
  421416:	fadd   st,st(5)
  421418:	hlt    
  421419:	add    eax,0x29b9507c
  42141e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42141f:	add    al,0x82
  421421:	adc    al,0x62
  421423:	mov    ebx,0x735a9822
  421428:	shl    DWORD PTR ds:0xf1b5ff1c,cl
  42142e:	jmp    0x71e70b59
  421433:	stos   BYTE PTR es:[edi],al
  421434:	das    
  421435:	loop   0x4213c7
  421437:	arpl   di,di
  421439:	cdq    
  42143a:	and    ah,BYTE PTR ds:0x79ebc633
  421440:	adc    al,0x7a
  421442:	mov    esp,0xe5f8200e
  421447:	jge    0x4213d7
  421449:	mov    ah,bl
  42144b:	dec    edx
  42144c:	scas   eax,DWORD PTR es:[edi]
  42144d:	call   0xc2d6aa49
  421452:	and    esi,DWORD PTR [edx-0x5]
  421455:	and    ch,BYTE PTR [edi+esi*8-0x80]
  421459:	and    esp,DWORD PTR [edx+0x1b1f15db]
  42145f:	or     ch,BYTE PTR ss:[esp+eax*2+0x66]
  421464:	sbb    DWORD PTR [eax-0x44],ebx
  421467:	pop    ecx
  421468:	mov    ds:0x9a81e917,al
  42146d:	fmul   QWORD PTR [ecx-0xb86540d]
  421473:	and    eax,0xcb5c07ef
  421478:	add    BYTE PTR [edi-0x110bf678],dh
  42147e:	sub    esp,eax
  421480:	popf   
  421481:	fbld   TBYTE PTR [ebx-0x49204a5e]
  421487:	sbb    esi,esp
  421489:	in     eax,0xdf
  42148b:	mov    ebp,0xbc074b05
  421490:	xor    BYTE PTR [edx-0x7b],ah
  421493:	pop    esp
  421494:	sbb    eax,0xf7f6fc43
  421499:	in     al,dx
  42149a:	xchg   esi,eax
  42149b:	cmp    DWORD PTR [ebx],edi
  42149d:	pusha  
  42149e:	push   ss
  42149f:	mov    bh,ch
  4214a1:	mov    ch,0xfd
  4214a3:	mov    esp,0x2e3cb84c
  4214a8:	jle    0x4214dd
  4214aa:	ret    0x98bc
  4214ad:	out    dx,al
  4214ae:	sahf   
  4214af:	cld    
  4214b0:	imul   BYTE PTR [ebx]
  4214b2:	jb     0x4214fa
  4214b4:	jno    0x42148a
  4214b6:	inc    esp
  4214b7:	push   ebp
  4214b8:	fstp   QWORD PTR [ecx-0xb]
  4214bb:	cmp    al,0xd8
  4214bd:	push   eax
  4214be:	int    0x43
  4214c0:	mov    ebx,0xb122ed42
  4214c5:	popa   
  4214c6:	inc    eax
  4214c7:	add    bh,0x1c
  4214ca:	lods   al,BYTE PTR ds:[esi]
  4214cb:	pusha  
  4214cc:	pop    eax
  4214cd:	pop    ss
  4214ce:	xor    ah,0x50
  4214d1:	xchg   esi,eax
  4214d2:	popf   
  4214d3:	sbb    ebp,ebp
  4214d5:	lea    eax,[edx+0x4b]
  4214d8:	loop   0x421496
  4214da:	shr    BYTE PTR [esi+0x3c],0xbd
  4214de:	popf   
  4214df:	hlt    
  4214e0:	test   eax,0x35346432
  4214e5:	jmp    0xef72bf59
  4214ea:	push   ds
  4214eb:	pop    eax
  4214ec:	mov    eax,0x92ce1b10
  4214f1:	ror    BYTE PTR [ebx-0x4d9cdb78],1
  4214f7:	stc    
  4214f8:	cmp    eax,0x6915be33
  4214fd:	or     ebx,DWORD PTR [eax+eax*1+0xe4bc39c]
  421504:	xchg   DWORD PTR [ecx-0x114a9431],esi
  42150a:	addr16 enter 0x474f,0x11
  42150f:	sti    
  421510:	cwde   
  421511:	and    eax,0xe090d42d
  421516:	lea    eax,[ebx-0x26959549]
  42151c:	retf   0x10b4
  42151f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421520:	jmp    0x3a5787f9
  421525:	dec    ecx
  421526:	xchg   ebp,eax
  421527:	leave  
  421528:	ret    
  421529:	icebp  
  42152a:	bound  ebx,QWORD PTR [edi-0xf]
  42152d:	sar    DWORD PTR [edi+0xa],1
  421530:	inc    BYTE PTR [esi+0x7a]
  421533:	push   0x1e
  421535:	loopne 0x42155b
  421537:	and    esp,edi
  421539:	xor    eax,0x8908aa52
  42153e:	mov    edx,0xea13d6f3
  421543:	xchg   ecx,eax
  421544:	cmp    eax,0xe92e26a7
  421549:	xor    dh,ah
  42154b:	adc    edx,0xbce26805
  421551:	and    esp,DWORD PTR [edx-0x11]
  421554:	sbb    DWORD PTR [esp+eiz*8-0x77edff49],ebp
  42155b:	dec    ebx
  42155c:	inc    ecx
  42155d:	cmp    al,0x8f
  42155f:	or     eax,0x4564a155
  421564:	test   eax,0x9ec32f7f
  421569:	cs ret 0x5ead
  42156d:	or     ch,dl
  42156f:	leave  
  421570:	push   edi
  421571:	aam    0xef
  421573:	lahf   
  421574:	cwde   
  421575:	sub    edx,DWORD PTR [edx-0x14d3d4bc]
  42157b:	aas    
  42157c:	xlat   BYTE PTR ds:[ebx]
  42157d:	daa    
  42157e:	sub    al,0xb7
  421580:	xor    al,0x35
  421582:	cli    
  421583:	mul    BYTE PTR [ecx]
  421585:	jmp    0x4d7c1357
  42158a:	fild   DWORD PTR [ebp-0x44]
  42158d:	add    eax,0x394a6aad
  421592:	daa    
  421593:	test   al,0xe5
  421595:	mov    ds:0x14f026a9,eax
  42159a:	fs sub al,0x72
  42159d:	sbb    ah,BYTE PTR [edi+0x0]
  4215a0:	xchg   edi,eax
  4215a1:	lods   eax,DWORD PTR ds:[esi]
  4215a2:	fmul   DWORD PTR [edx+0x6c]
  4215a5:	out    dx,al
  4215a6:	lea    ebx,[eax]
  4215a8:	dec    edi
  4215a9:	xor    ebp,esp
  4215ab:	adc    eax,ebp
  4215ad:	mov    dh,0x66
  4215af:	test   eax,0x5c549ae1
  4215b4:	and    eax,0x3f99fb5f
  4215b9:	aaa    
  4215ba:	mov    cl,0xe6
  4215bc:	into   
  4215bd:	push   ebp
  4215be:	cmc    
  4215bf:	aam    0x71
  4215c1:	ret    
  4215c2:	rcr    BYTE PTR ds:0xdad42f6b,cl
  4215c8:	xchg   edi,eax
  4215c9:	pop    eax
  4215ca:	ja     0x4215ba
  4215cc:	(bad)  
  4215ce:	add    al,0x41
  4215d0:	cwde   
  4215d1:	pop    esi
  4215d2:	fdivr  st,st(2)
  4215d4:	mov    edx,0x59d4cc64
  4215d9:	add    DWORD PTR [edi+esi*8-0x2934c6ad],esi
  4215e0:	arpl   cx,bx
  4215e2:	xchg   bl,al
  4215e4:	loop   0x4215a8
  4215e6:	sbb    eax,0xc2cb9f06
  4215eb:	xchg   edi,eax
  4215ec:	test   al,0x9c
  4215ee:	and    DWORD PTR [ebp+0x36],eax
  4215f1:	add    ch,BYTE PTR [edx+0x4d2969b1]
  4215f7:	and    eax,0x511ad30a
  4215fc:	pop    ecx
  4215fd:	pop    esi
  4215fe:	aas    
  4215ff:	xor    eax,0x11c8c746
  421604:	pop    eax
  421605:	sub    DWORD PTR [ebp+ebp*2-0x19452781],esp
  42160c:	hlt    
  42160d:	clc    
  42160e:	das    
  42160f:	or     DWORD PTR [ebp-0x3a],0xffffffca
  421613:	das    
  421614:	cmp    DWORD PTR [esi+ecx*1],edx
  421617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421618:	inc    esi
  421619:	dec    edi
  42161a:	cmp    eax,0x685ec18d
  42161f:	and    al,0x18
  421621:	clc    
  421622:	sbb    eax,eax
  421624:	cwde   
  421625:	not    DWORD PTR ds:0x947eec8d
  42162b:	sub    edx,DWORD PTR [esi+0x3e376015]
  421631:	loope  0x42163e
  421633:	push   ebp
  421634:	mov    ds:0xe187313f,al
  421639:	nop
  42163a:	sbb    eax,DWORD PTR [ebp-0x60]
  42163d:	adc    al,0xef
  42163f:	pop    ds
  421640:	scas   eax,DWORD PTR es:[edi]
  421641:	aad    0xd9
  421643:	mov    eax,ds:0x31a62a14
  421648:	in     eax,0xad
  42164a:	push   edx
  42164b:	xchg   BYTE PTR [edx],ch
  42164d:	inc    ebp
  42164e:	jbe    0x421615
  421650:	add    cl,bl
  421652:	or     eax,0xe1e1603b
  421657:	jg     0x421686
  421659:	in     eax,dx
  42165a:	repz dec esp
  42165c:	fld    QWORD PTR [ecx+0xd]
  42165f:	and    esp,eax
  421661:	fbstp  TBYTE PTR [edi+edi*2+0x24]
  421665:	rol    BYTE PTR [ebx],cl
  421667:	mov    ds:0xf59da1b1,al
  42166c:	jbe    0x4216be
  42166e:	jbe    0x42169f
  421670:	adc    BYTE PTR [ecx+0x6b4f52b1],bl
  421676:	inc    eax
  421677:	in     eax,0x27
  421679:	jle    0x42161d
  42167b:	adc    esi,esp
  42167d:	les    ecx,FWORD PTR ds:[ecx]
  421680:	(bad)  
  421681:	jl     0x421692
  421683:	(bad)  
  421684:	or     al,0x2a
  421686:	daa    
  421687:	pop    eax
  421688:	out    dx,al
  421689:	xor    eax,0x62c66940
  42168e:	test   DWORD PTR [eax],eax
  421690:	add    BYTE PTR [eax],al
  421692:	sti    
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x3eb08cc6
  4216a1:	xchg   esp,eax
  4216a2:	xlat   BYTE PTR ds:[ebx]
  4216a3:	nop
  4216a4:	add    DWORD PTR [eax],eax
  4216a6:	cmc    
  4216a7:	add    al,0x0
  4216a9:	add    bl,bl
  4216ab:	fnclex 
  4216ad:	or     ebp,DWORD PTR [ecx]
  4216af:	dec    eax
  4216b0:	xor    esi,DWORD PTR [edx]
  4216b2:	xchg   edx,eax
  4216b3:	jl     0x42168c
  4216b5:	add    DWORD PTR [edx+0x2],eax
  4216b8:	div    DWORD PTR [edi]
  4216ba:	in     eax,dx
  4216bb:	ret    0xd565
  4216be:	or     al,0x7
  4216c0:	aam    0x49
  4216c2:	hlt    
  4216c3:	(bad)  
  4216c5:	jle    0x4216d4
  4216c7:	sbb    al,0x67
  4216c9:	xchg   ecx,eax
  4216ca:	jle    0x421688
  4216cc:	jmp    0x536d:0x8ebaf679
  4216d3:	fisub  DWORD PTR [esi]
  4216d5:	bound  ebx,QWORD PTR [eax-0x4e76c758]
  4216db:	jge    0x4216cf
  4216dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216de:	jns    0x4216f7
  4216e0:	pop    es
  4216e1:	test   eax,0x5cdd9e88
  4216e6:	loope  0x4216fb
  4216e8:	cld    
  4216e9:	test   esp,edi
  4216eb:	add    dh,BYTE PTR [esi+0x67ab9a89]
  4216f1:	jb     0x421750
  4216f3:	pop    edi
  4216f4:	fild   QWORD PTR [esi+0x52]
  4216f7:	adc    al,0xed
  4216f9:	add    al,0x1
  4216fb:	cmp    ch,cl
  4216fd:	loope  0x4216fc
  4216ff:	cld    
  421700:	xor    DWORD PTR [ebp-0x75],ebx
  421703:	pop    ss
  421704:	hlt    
  421705:	out    dx,eax
  421706:	push   eax
  421707:	mov    ecx,0x7dc8f732
  42170c:	inc    ecx
  42170d:	xchg   esi,eax
  42170e:	inc    esp
  42170f:	fisttp WORD PTR [edi-0x158080a0]
  421715:	popa   
  421716:	dec    edi
  421717:	leave  
  421718:	push   es
  421719:	pop    edi
  42171a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42171b:	jae    0x4216e2
  42171d:	ins    BYTE PTR es:[edi],dx
  42171e:	push   esp
  42171f:	or     eax,DWORD PTR [edi+0x31]
  421722:	adc    bl,bl
  421724:	sbb    eax,0x756d2dca
  42172a:	xchg   esp,eax
  42172b:	adc    BYTE PTR [esi+edx*8+0x59],0xd9
  421730:	push   es
  421731:	test   ebp,esi
  421733:	ss dec edi
  421735:	call   0xbadee34b
  42173a:	test   BYTE PTR [eax],ah
  42173c:	mov    gs,WORD PTR [ebx]
  42173e:	daa    
  42173f:	mov    ch,0x5a
  421741:	(bad)  
  421742:	and    BYTE PTR [esi+esi*8],dh
  421745:	xchg   edi,eax
  421746:	gs push ds
  421748:	pusha  
  421749:	ja     0x4217bc
  42174b:	out    0x24,eax
  42174d:	popa   
  42174e:	fstp   QWORD PTR [ebp-0x4b]
  421751:	mov    ch,0x4a
  421753:	cld    
  421754:	push   edi
  421755:	mov    ds:0x22bd9bb3,eax
  42175a:	(bad)  
  42175b:	das    
  42175c:	cwde   
  42175d:	aam    0x19
  42175f:	call   0xe206:0x1bca4035
  421766:	shr    edi,0x2f
  421769:	retf   
  42176a:	pop    ebx
  42176b:	and    ah,dl
  42176d:	mov    ds:0xb9df80f7,al
  421772:	pop    edx
  421773:	sub    al,0x79
  421775:	mov    ebp,esi
  421777:	nop
  421778:	in     eax,0x15
  42177a:	fcom   DWORD PTR [eax-0x29]
  42177d:	gs xchg edx,eax
  42177f:	sbb    DWORD PTR [ebp+0x1bc1d3bf],eax
  421785:	into   
  421786:	repz xchg ebx,eax
  421788:	jo     0x421735
  42178a:	lods   al,BYTE PTR ss:[esi]
  42178c:	xor    dh,cl
  42178e:	mov    ah,0xee
  421790:	jo     0x4217ed
  421792:	fcomp  QWORD PTR [eax-0x38]
  421795:	std    
  421796:	xchg   esp,eax
  421797:	in     al,0xa5
  421799:	sbb    edi,esi
  42179b:	push   eax
  42179c:	scas   eax,DWORD PTR es:[edi]
  42179d:	pop    ss
  42179e:	and    al,BYTE PTR [eax]
  4217a0:	stc    
  4217a1:	jbe    0x42173a
  4217a3:	cmp    al,BYTE PTR [edi]
  4217a5:	jmp    0x421743
  4217a7:	cli    
  4217a8:	cs push ebp
  4217aa:	ror    edi,cl
  4217ac:	fstp   DWORD PTR [esi+0x290af743]
  4217b2:	sub    cl,BYTE PTR [ebx+esi*4]
  4217b5:	mov    ds:0xfc57a776,al
  4217ba:	or     eax,0x755eb4f3
  4217bf:	sub    dh,BYTE PTR [ecx-0xe]
  4217c2:	mov    ebp,ebx
  4217c4:	sbb    DWORD PTR [edi+ebx*1],0x854632dc
  4217cb:	dec    ecx
  4217cc:	mov    ebp,0xa078e6d7
  4217d1:	pop    esp
  4217d2:	shr    bl,1
  4217d4:	dec    ebx
  4217d5:	sub    al,0x1d
  4217d7:	pop    ebx
  4217d8:	call   0x10d3cb4a
  4217dd:	adc    al,0x12
  4217df:	xchg   edx,eax
  4217e0:	cmp    bl,BYTE PTR [ecx+0x6d]
  4217e3:	cld    
  4217e4:	jae    0x4217cf
  4217e6:	sbb    BYTE PTR ds:0xe8b9df24,cl
  4217ec:	retf   0xc5c
  4217ef:	ja     0x4217e6
  4217f1:	repz xchg edi,eax
  4217f3:	push   ecx
  4217f4:	sbb    ebp,DWORD PTR [esi]
  4217f6:	cmp    ch,0x9e
  4217f9:	push   ebx
  4217fa:	push   ebp
  4217fb:	loope  0x42179a
  4217fd:	or     ch,BYTE PTR [ebx-0x1b]
  421800:	into   
  421801:	push   esi
  421802:	cmp    edi,DWORD PTR [esi+0x42]
  421805:	retf   0x7a46
  421808:	sbb    DWORD PTR [ebp-0x34],eax
  42180b:	sahf   
  42180c:	cs arpl sp,bp
  42180f:	inc    ebp
  421810:	xor    edx,DWORD PTR ds:0xc6132f03
  421816:	lds    ecx,FWORD PTR [ecx-0x17b6e5e9]
  42181c:	jne    0x4217d4
  42181e:	repz adc DWORD PTR [eax],0x32
  421822:	shl    BYTE PTR [esi-0xa],cl
  421825:	popf   
  421826:	xchg   ebx,eax
  421827:	fs ret 0x542f
  42182b:	js     0x421831
  42182d:	lock rcr BYTE PTR [esi+0x68a2de18],0x2d
  421835:	push   esp
  421836:	aam    0xfc
  421838:	pop    esi
  421839:	sbb    eax,ebp
  42183b:	dec    edx
  42183c:	gs xchg edx,eax
  42183e:	mov    eax,0xe55271bf
  421843:	ins    BYTE PTR es:[edi],dx
  421844:	fisub  DWORD PTR [ecx-0x32]
  421847:	addr16 icebp 
  421849:	jp     0x4217db
  42184b:	mov    esi,0x870859d1
  421850:	in     eax,0xe7
  421852:	jmp    0x7cbb:0x5a8c16b9
  421859:	repnz scas eax,DWORD PTR es:[edi]
  42185b:	pop    ecx
  42185d:	fisttp WORD PTR [eax]
  42185f:	mov    al,ds:0x22c7f589
  421864:	and    eax,0xf997ac3b
  421869:	cmc    
  42186a:	dec    ebx
  42186b:	mov    bl,ch
  42186d:	pop    edx
  42186e:	je     0x4218b8
  421870:	jg     0x4218ed
  421872:	dec    esp
  421873:	rcr    BYTE PTR [eax+0x2c6a81d8],1
  421879:	cld    
  42187a:	dec    edi
  42187b:	adc    BYTE PTR [esi+0x2b],ah
  42187e:	ins    BYTE PTR es:[edi],dx
  42187f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421880:	push   edx
  421881:	lods   al,BYTE PTR ds:[esi]
  421882:	cmp    bh,BYTE PTR cs:[ecx-0xef7c3f0]
  421889:	mov    eax,0x28bb36ff
  42188e:	push   ebp
  42188f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421890:	daa    
  421891:	adc    DWORD PTR [eax+esi*1-0x338dcf59],edi
  421898:	pop    ecx
  421899:	sahf   
  42189a:	pop    ds
  42189b:	push   eax
  42189c:	mov    ds:0x7ecc2ea5,eax
  4218a1:	pop    esp
  4218a2:	ja     0x421854
  4218a4:	mov    bl,0x43
  4218a6:	lods   eax,DWORD PTR ds:[esi]
  4218a7:	fnstsw WORD PTR [ebx+0x1b]
  4218aa:	ret    
  4218ab:	adc    eax,0xbe59a8c
  4218b0:	xor    al,0xfa
  4218b2:	jmp    0x421855
  4218b4:	or     esi,DWORD PTR [edi]
  4218b6:	inc    ebx
  4218b7:	repz mov ?,WORD PTR ds:0x8e636bb9
  4218be:	cmp    bh,BYTE PTR [edx+0x2502b6cf]
  4218c4:	mov    ecx,0x88aace23
  4218c9:	fdiv   DWORD PTR [ebp-0x32]
  4218cc:	pop    ebx
  4218cd:	mov    esi,ss
  4218cf:	call   0xdf2b:0x84d218a2
  4218d6:	xchg   ebx,eax
  4218d7:	jns    0x42192a
  4218d9:	xchg   ebp,eax
  4218da:	aam    0xb6
  4218dc:	mov    ch,0xb7
  4218de:	shl    DWORD PTR [ebp+0x2f],1
  4218e1:	mov    dl,0xe
  4218e3:	or     eax,0x8e3d1ef4
  4218e8:	dec    ebx
  4218e9:	lahf   
  4218ea:	das    
  4218eb:	das    
  4218ec:	test   ebx,edx
  4218ee:	xor    bh,bl
  4218f0:	ss xchg edi,eax
  4218f2:	jge    0x421917
  4218f4:	addr16 mov bh,0x9f
  4218f7:	push   ds
  4218f8:	sahf   
  4218f9:	imul   esi,DWORD PTR [ecx],0x42ef85c7
  4218ff:	add    al,0xc5
  421901:	sbb    ah,dh
  421903:	test   al,0xd2
  421905:	add    al,0x54
  421907:	cmc    
  421908:	stos   DWORD PTR es:[edi],eax
  421909:	fstp   QWORD PTR [ebx]
  42190b:	inc    eax
  42190c:	push   edi
  42190d:	stos   WORD PTR es:[edi],ax
  42190f:	enter  0x2bd9,0xa0
  421913:	xor    edx,DWORD PTR ds:0x74c7f07f
  421919:	jl     0x4218ea
  42191b:	loop   0x421964
  42191d:	clc    
  42191e:	movlps xmm6,QWORD PTR [eax+0x21]
  421922:	loope  0x42198b
  421924:	inc    esp
  421925:	mov    edi,0x7be9c497
  42192a:	(bad)  
  42192b:	je     0x421907
  42192d:	jno    0x42199a
  42192f:	je     0x4218e6
  421931:	clc    
  421932:	push   esp
  421933:	push   esp
  421934:	dec    esp
  421935:	jae    0x42194e
  421937:	pushf  
  421938:	test   eax,0x16685729
  42193d:	xchg   ebp,eax
  42193e:	and    bh,0xeb
  421941:	cmp    eax,0x9ad2a6cb
  421946:	add    al,0xf0
  421948:	lods   eax,DWORD PTR ds:[esi]
  421949:	shl    ch,0x43
  42194c:	lock mov WORD PTR [edx+0x2f],cs
  421950:	into   
  421951:	inc    ebx
  421952:	cmove  edx,DWORD PTR [ebx+ecx*1]
  421956:	inc    esp
  421957:	cs out dx,al
  421959:	pop    ss
  42195a:	jmp    0x4219a2
  42195c:	pop    esp
  42195d:	sbb    eax,0x74953fd0
  421962:	data16 jg 0x421907
  421965:	push   es
  421966:	shl    BYTE PTR [eax+0x38],cl
  421969:	outs   dx,BYTE PTR ds:[esi]
  42196a:	aaa    
  42196b:	sbb    bh,bh
  42196d:	or     eax,0xc552e5b6
  421972:	sub    edi,esi
  421974:	stos   DWORD PTR es:[edi],eax
  421975:	mov    DWORD PTR [edi+0x4f13b679],ecx
  42197b:	mov    ch,0xa5
  42197d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42197e:	hlt    
  42197f:	xor    al,0x88
  421981:	jg     0x42195f
  421983:	xor    DWORD PTR [ebx-0x3d],ebp
  421986:	popf   
  421987:	xchg   esi,eax
  421988:	ins    BYTE PTR es:[edi],dx
  421989:	test   DWORD PTR [edx+0x9c8217],eax
  42198f:	inc    edx
  421990:	lods   al,BYTE PTR ds:[esi]
  421991:	or     DWORD PTR [edi-0x1c],edx
  421994:	xchg   esi,eax
  421995:	arpl   ax,si
  421997:	mov    bl,BYTE PTR [ebx+0x60]
  42199a:	in     al,dx
  42199b:	mov    ecx,0x4aedf0ab
  4219a0:	repz push esp
  4219a2:	dec    esi
  4219a3:	jns    0x4219ba
  4219a5:	pushf  
  4219a6:	sub    eax,0xa4d091d3
  4219ab:	jb     0x4219a6
  4219ad:	jp     0x421938
  4219af:	cs mov ecx,0x843cf011
  4219b5:	js     0x42199e
  4219b7:	sbb    DWORD PTR [eax],ebp
  4219b9:	sub    DWORD PTR [eax-0x25c0b1fb],ebx
  4219bf:	sbb    ebp,DWORD PTR [ecx-0x5b009ad9]
  4219c5:	test   BYTE PTR [edx-0x60],cl
  4219c8:	pop    edx
  4219c9:	sub    al,0x87
  4219cb:	fdivr  st(3),st
  4219cd:	xor    ebp,DWORD PTR [eax+0x771951f5]
  4219d3:	inc    ebx
  4219d4:	shr    DWORD PTR [ebx-0x3d],cl
  4219d7:	push   ebp
  4219d8:	inc    esp
  4219d9:	dec    ecx
  4219da:	xor    bl,BYTE PTR [ebx+0x58b857d1]
  4219e0:	out    dx,eax
  4219e1:	jb     0x421963
  4219e3:	not    DWORD PTR [esi-0x4dc8e974]
  4219e9:	cmp    ecx,DWORD PTR ds:0x210fb22f
  4219ef:	(bad)  
  4219f0:	xchg   ecx,eax
  4219f1:	retf   
  4219f2:	rol    BYTE PTR [edx],1
  4219f4:	inc    edi
  4219f5:	jg     0x421a40
  4219f7:	pop    esi
  4219f8:	mov    DWORD PTR [ecx+0x4c],ebp
  4219fb:	sbb    DWORD PTR [edi+eiz*1],0x19641680
  421a02:	and    al,BYTE PTR [edx-0x29]
  421a05:	scas   eax,DWORD PTR es:[edi]
  421a06:	sub    al,0x12
  421a08:	test   BYTE PTR [eax+0x3e],0x80
  421a0c:	cld    
  421a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a0e:	mov    eax,0xa39d8105
  421a13:	imul   ebx,DWORD PTR [esp+ecx*2],0xe2ea215c
  421a1a:	adc    al,BYTE PTR [esi-0x3a]
  421a1d:	fs pop ebp
  421a1f:	add    DWORD PTR [ebx+0x33d9f355],eax
  421a25:	fisubr WORD PTR [ebp+0x5aed5d5f]
  421a2b:	inc    ebx
  421a2c:	mov    ecx,0x7210b814
  421a31:	loope  0x421a81
  421a33:	sub    DWORD PTR [edi-0x4527d649],eax
  421a39:	inc    edx
  421a3a:	dec    DWORD PTR [ecx+0x0]
  421a3d:	pop    esi
  421a3e:	outs   dx,BYTE PTR ds:[esi]
  421a3f:	xchg   ebx,eax
  421a40:	cmp    BYTE PTR [esi+0x17],al
  421a43:	fsub   DWORD PTR [ecx-0x1af8c8c2]
  421a49:	sub    bh,bl
  421a4b:	mov    ds,WORD PTR [ebp+0x30519900]
  421a51:	cs cmp eax,0x93321cb6
  421a57:	dec    ecx
  421a58:	scas   al,BYTE PTR es:[edi]
  421a59:	mov    ebp,DWORD PTR [esi-0x47]
  421a5c:	xchg   edx,eax
  421a5d:	pop    ss
  421a5e:	adc    BYTE PTR [ebx-0x49],dh
  421a61:	out    0x76,al
  421a63:	dec    esi
  421a64:	fstp   st(3)
  421a66:	inc    eax
  421a67:	xchg   esi,eax
  421a68:	dec    edi
  421a69:	rol    bh,cl
  421a6b:	mov    bl,0xf1
  421a6d:	in     eax,dx
  421a6e:	pushf  
  421a6f:	sub    ah,dh
  421a71:	cmp    dh,al
  421a73:	jnp    0x421a44
  421a75:	jno    0x4219fb
  421a77:	js     0x421aa3
  421a79:	cmp    eax,0xa4c2f58f
  421a7e:	add    al,0x6e
  421a80:	and    ch,BYTE PTR [edi+0x7]
  421a83:	sbb    DWORD PTR [ebp+0x76],esp
  421a86:	mov    al,0xc0
  421a88:	jbe    0x421a1f
  421a8a:	push   esp
  421a8b:	and    ah,dl
  421a8d:	test   al,0x99
  421a8f:	or     edi,esp
  421a91:	or     eax,0x55b199d4
  421a96:	sbb    al,0xd1
  421a98:	sub    BYTE PTR [edx+0x23],ah
  421a9b:	rcl    BYTE PTR [ecx-0x80],0x56
  421a9f:	sti    
  421aa0:	or     edi,ebp
  421aa2:	jmp    0x36b1f0e5
  421aa7:	cmp    dl,BYTE PTR [esi-0x4]
  421aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aab:	mov    ds:0x98d95182,eax
  421ab0:	mov    DWORD PTR [edi+edx*4-0x37],eax
  421ab4:	xchg   edi,eax
  421ab5:	add    BYTE PTR [eax+0x57],0x3e
  421ab9:	imul   ecx,esp,0x11
  421abc:	enter  0xabea,0x11
  421ac0:	repnz inc ebx
  421ac2:	fcom   DWORD PTR [eax+eax*8+0x79a340f5]
  421ac9:	lods   al,BYTE PTR ds:[esi]
  421aca:	and    DWORD PTR ds:0xfcaa386c,ecx
  421ad0:	out    0xec,al
  421ad2:	add    bl,BYTE PTR [ebx-0x685862a7]
  421ad8:	or     ebx,DWORD PTR [esp+ebx*2-0x7714037a]
  421adf:	jmp    0x421b17
  421ae1:	icebp  
  421ae2:	jle    0x421b07
  421ae4:	(bad)  
  421ae5:	sbb    ebx,DWORD PTR [ebx]
  421ae7:	sbb    edi,DWORD PTR [ecx+0x52]
  421aea:	cmp    ebx,DWORD PTR [ecx+0x5c]
  421aed:	scas   al,BYTE PTR es:[edi]
  421aee:	stc    
  421aef:	ins    DWORD PTR es:[edi],dx
  421af0:	xor    al,0xad
  421af2:	lods   eax,DWORD PTR ds:[esi]
  421af3:	cmp    edx,ebx
  421af5:	lds    ecx,FWORD PTR [edx+ecx*8+0x1d3c50ec]
  421afc:	mov    al,ds:0x7d9657
  421b01:	cmc    
  421b02:	add    DWORD PTR [eax],edx
  421b04:	mov    esp,0x8daafdd
  421b09:	lods   al,BYTE PTR ds:[esi]
  421b0a:	add    BYTE PTR [ebp+0x1a80cdfb],ch
  421b10:	push   0x67
  421b12:	retf   
  421b13:	xor    eax,0x1804209
  421b18:	ret    
  421b19:	cmp    DWORD PTR [eax],esi
  421b1b:	push   ss
  421b1c:	add    eax,0xc5d90787
  421b21:	add    DWORD PTR [ebx-0x77],0x51
  421b25:	js     0x421ab6
  421b27:	(bad)
  421b2b:	sbb    eax,0x613f8a3a
  421b30:	repnz sbb ebp,edx
  421b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b34:	pushf  
  421b35:	add    BYTE PTR [edi-0x2b2a3de6],cl
  421b3b:	sub    cl,BYTE PTR [ebp+0x73139460]
  421b41:	mov    ebx,0x851d0069
  421b46:	adc    cl,dh
  421b48:	ds scas eax,DWORD PTR es:[edi]
  421b4a:	mov    ?,ebp
  421b4c:	out    0x31,eax
  421b4e:	out    dx,al
  421b4f:	arpl   WORD PTR [ebp-0x4c],sp
  421b52:	jb     0x421bc1
  421b54:	cmp    eax,0xcb15311a
  421b59:	inc    ebx
  421b5a:	outs   dx,DWORD PTR ds:[esi]
  421b5b:	call   0xd841:0x4b564661
  421b62:	adc    dh,ch
  421b64:	sbb    al,0x32
  421b66:	int    0x8d
  421b68:	push   0x33387e86
  421b6d:	cmp    BYTE PTR [ebx+eax*1-0x2b3aafbf],ah
  421b74:	fdivr  QWORD PTR [edx-0xd]
  421b77:	out    0x5d,al
  421b79:	mov    eax,ds:0x17a30538
  421b7e:	mov    ds:0x36dae5b0,al
  421b83:	rol    BYTE PTR [eax+0x73],0xc
  421b87:	sbb    esp,esi
  421b89:	and    DWORD PTR cs:[ecx],0xffffff88
  421b8d:	jb     0x421b4c
  421b8f:	inc    ebp
  421b90:	cmp    esp,DWORD PTR [ebp+0x544ecd73]
  421b96:	retf   
  421b97:	push   esi
  421b98:	retf   0xbcff
  421b9b:	in     al,dx
  421b9c:	ds pop es
  421b9e:	and    al,BYTE PTR [eax]
  421ba0:	add    BYTE PTR [eax],al
  421ba2:	sbb    edi,DWORD PTR [esi-0x25106512]
  421ba8:	jg     0x421b69
  421baa:	call   0xc326:0x2a770da0
  421bb1:	(bad)  
  421bb2:	int3   
  421bb3:	xchg   ebp,eax
  421bb4:	add    DWORD PTR [eax],eax
  421bb6:	cmc    
  421bb7:	add    al,0x0
  421bb9:	add    bl,al
  421bbb:	(bad)  
  421bbc:	call   0x2bbd7c01
  421bc1:	ds ret 0x590e
  421bc5:	sub    dx,sp
  421bc8:	and    BYTE PTR [esi+0x50f5e1c2],bh
  421bce:	ja     0x421b7c
  421bd0:	push   ss
  421bd1:	sub    eax,0x7e1206f2
  421bd6:	pop    ebx
  421bd7:	or     dl,al
  421bd9:	mov    es,WORD PTR [eax-0x75]
  421bdc:	push   ebp
  421bdd:	shr    al,0xbd
  421be0:	push   es
  421be1:	mov    al,ds:0xc4e97673
  421be6:	mov    esp,0x6f4d89fe
  421beb:	add    BYTE PTR [edi],dh
  421bed:	xchg   ecx,eax
  421bee:	pop    edx
  421bef:	in     al,0xce
  421bf1:	mov    dl,0x9b
  421bf3:	and    ebp,DWORD PTR [edi-0x9]
  421bf6:	jne    0x421beb
  421bf8:	cli    
  421bf9:	shr    BYTE PTR [ecx],cl
  421bfb:	jnp    0x421c4b
  421bfd:	jp     0x421bb1
  421bff:	iret   
  421c00:	test   al,0x1f
  421c02:	xchg   BYTE PTR [ecx-0x14],ch
  421c05:	pop    ecx
  421c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c07:	jmp    0xd8dfe9b5
  421c0c:	ss sub al,0xcd
  421c0f:	mov    ds:0x7482f4b9,eax
  421c14:	sbb    bl,BYTE PTR [edx]
  421c16:	xor    BYTE PTR [eax],bh
  421c18:	jo     0x421c64
  421c1a:	dec    ah
  421c1c:	push   esp
  421c1d:	ins    DWORD PTR es:[edi],dx
  421c1e:	jecxz  0x421ba5
  421c20:	scas   eax,DWORD PTR es:[edi]
  421c21:	int3   
  421c22:	and    edx,DWORD PTR [esi+ecx*4-0x28]
  421c26:	iret   
  421c27:	mov    es,WORD PTR [edx+0x30]
  421c2a:	inc    eax
  421c2b:	push   ss
  421c2c:	dec    esi
  421c2d:	mov    edx,0x4439a82b
  421c32:	inc    esi
  421c33:	repnz enter 0xe2f9,0x77
  421c38:	xlat   BYTE PTR ds:[ebx]
  421c39:	ficomp DWORD PTR [ecx-0x2b]
  421c3c:	call   0xc10ce569
  421c41:	or     eax,0xf7d64fcd
  421c46:	inc    ecx
  421c47:	mov    esi,0xa76868
  421c4c:	mov    BYTE PTR [ecx],al
  421c4e:	pop    edi
  421c4f:	xchg   BYTE PTR [esp+ebp*2-0x1d57a318],dl
  421c56:	out    dx,eax
  421c57:	imul   ah
  421c59:	ins    DWORD PTR es:[edi],dx
  421c5a:	les    ecx,FWORD PTR [edi]
  421c5c:	fisttp WORD PTR [edi+0x33]
  421c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c60:	sub    al,0xae
  421c62:	cdq    
  421c63:	dec    esi
  421c64:	ja     0x421bfc
  421c66:	pop    edx
  421c67:	call   0xa182:0xd679c776
  421c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c6f:	push   cs
  421c70:	xchg   edx,eax
  421c71:	mov    cl,0x38
  421c73:	jmp    0x421c94
  421c75:	push   esi
  421c76:	scas   eax,DWORD PTR es:[edi]
  421c77:	int3   
  421c78:	mov    ah,0x7b
  421c7a:	dec    ebx
  421c7b:	in     al,dx
  421c7c:	sbb    eax,0x42652ed4
  421c81:	scas   eax,DWORD PTR es:[edi]
  421c82:	repz jmp 0x421c8e
  421c85:	mov    bl,0xb2
  421c87:	in     eax,0xaf
  421c89:	or     eax,0xd6f48e35
  421c8e:	mul    DWORD PTR [esi+0x4d]
  421c91:	inc    ebp
  421c92:	aas    
  421c93:	pop    ds
  421c94:	jl     0x421cb9
  421c96:	mov    eax,0x98963b81
  421c9b:	nop
  421c9c:	or     al,0xfc
  421c9e:	adc    DWORD PTR [eax],0x3ff982b7
  421ca4:	dec    DWORD PTR [edi]
  421ca6:	sbb    ecx,DWORD PTR [esi-0x42]
  421ca9:	push   0x7cf9ae24
  421cae:	cmp    ah,BYTE PTR fs:[eax*1+0x5a71fa0a]
  421cb6:	adc    ebp,DWORD PTR [edi-0x58e2351d]
  421cbc:	sbb    cl,bl
  421cbe:	mov    edi,0x4096d7e5
  421cc3:	mov    esi,0x84c699d6
  421cc8:	popf   
  421cc9:	jmp    0xee0344bd
  421cce:	sbb    DWORD PTR [esp+eax*1],ebx
  421cd1:	test   DWORD PTR [edx-0x43],0xbf5b3cc7
  421cd8:	repnz inc ecx
  421cda:	lods   al,BYTE PTR ds:[esi]
  421cdb:	sub    DWORD PTR [esi],ebx
  421cdd:	repnz add DWORD PTR [edx+0x60],edi
  421ce1:	lahf   
  421ce2:	mov    edx,0x6dfd4eb5
  421ce7:	test   al,0x2
  421ce9:	sahf   
  421cea:	aad    0xbd
  421cec:	jb     0x421d44
  421cee:	mov    ebp,0xf847e7f
  421cf3:	mov    BYTE PTR [ecx+esi*4],bl
  421cf6:	mov    ecx,ecx
  421cf8:	es gs scas eax,DWORD PTR es:[edi]
  421cfb:	xor    cl,bh
  421cfd:	or     DWORD PTR [ebp+0x32],0x5967c33f
  421d04:	cmc    
  421d05:	sub    bl,BYTE PTR cs:[esp+ebx*4]
  421d09:	push   ebp
  421d0a:	inc    edi
  421d0b:	mov    eax,0x9c8ff846
  421d10:	out    dx,eax
  421d11:	daa    
  421d12:	jmp    0x421d35
  421d14:	and    al,0xf1
  421d16:	loope  0x421cbb
  421d18:	inc    ebp
  421d19:	test   DWORD PTR [ebx+ebp*4],eax
  421d1c:	sub    ch,BYTE PTR [esi]
  421d1e:	loope  0x421cf8
  421d20:	inc    edx
  421d21:	js     0x421da0
  421d23:	mov    al,ds:0x170ff4bf
  421d28:	adc    eax,0xaa92414
  421d2d:	test   al,0xf3
  421d2f:	es push ebp
  421d31:	gs jns 0x421d29
  421d34:	in     eax,dx
  421d35:	mov    al,0xe8
  421d37:	jp     0x421d50
  421d39:	bound  ecx,QWORD PTR [ebx]
  421d3b:	ins    BYTE PTR es:[edi],dx
  421d3c:	dec    ebx
  421d3d:	in     al,0x3a
  421d3f:	inc    ebp
  421d40:	mov    edx,0xf7b54fee
  421d45:	or     ebp,edi
  421d47:	adc    eax,ecx
  421d49:	lahf   
  421d4a:	adc    al,0x4f
  421d4c:	and    BYTE PTR [esi-0x12],ch
  421d4f:	mov    ebp,0x94c7ec7
  421d54:	jge    0x421da2
  421d56:	mov    dl,0xd6
  421d58:	adc    eax,0x944afe11
  421d5d:	mov    bl,0x49
  421d5f:	sbb    esi,DWORD PTR [eax+0x519f356f]
  421d65:	jae    0x421ddc
  421d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d68:	jbe    0x421dc9
  421d6a:	cld    
  421d6b:	jae    0x421d4c
  421d6d:	daa    
  421d6e:	arpl   bx,ax
  421d70:	mov    eax,ds:0xf1708adc
  421d75:	inc    edi
  421d76:	mov    edi,0xe732f62c
  421d7b:	xor    BYTE PTR [edx],dh
  421d7d:	call   0x28000b26
  421d82:	sbb    al,0x1c
  421d84:	xor    DWORD PTR [esi+0x1],edx
  421d87:	mov    bh,0xc2
  421d89:	jle    0x421d14
  421d8b:	jge    0x421d8c
  421d8d:	and    esp,DWORD PTR [edi]
  421d8f:	and    eax,0x1cf96add
  421d94:	ins    BYTE PTR es:[edi],dx
  421d95:	ss test ebx,eax
  421d98:	and    ah,BYTE PTR [ebp-0x3d]
  421d9b:	and    eax,0xa2788a90
  421da0:	jo     0x421e17
  421da2:	mov    edx,0x239877b0
  421da7:	(bad)  
  421da8:	mov    ds:0x23e0ebd3,al
  421dad:	jg     0x421daf
  421daf:	cmc    
  421db0:	push   edx
  421db1:	or     edx,ebp
  421db3:	(bad)  
  421db4:	out    0x11,eax
  421db6:	ss call 0x7fc1:0x590b2260
  421dbe:	into   
  421dbf:	pop    ds
  421dc0:	(bad)  
  421dc1:	mov    ebp,0xe28ead2a
  421dc6:	fcomp  st(5)
  421dc8:	push   ecx
  421dc9:	xor    BYTE PTR [edi],cl
  421dcb:	dec    ecx
  421dcc:	pushf  
  421dcd:	jae    0x421d53
  421dcf:	in     eax,dx
  421dd0:	clc    
  421dd1:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dd3:	pop    ebp
  421dd4:	sahf   
  421dd5:	js     0x421e0f
  421dd7:	leave  
  421dd8:	xchg   ecx,eax
  421dd9:	inc    edi
  421dda:	mov    esp,0xaf3c3f34
  421ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421de0:	xchg   esi,eax
  421de1:	fimul  WORD PTR [ecx-0x65]
  421de4:	pop    esi
  421de5:	cmp    al,0x6
  421de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421de8:	or     ebx,ebp
  421dea:	push   ecx
  421deb:	iret   
  421dec:	push   eax
  421ded:	addr16 (bad) 
  421def:	in     eax,dx
  421df0:	sahf   
  421df1:	xchg   ebx,eax
  421df2:	xchg   BYTE PTR gs:[ebp+0x49],bh
  421df6:	or     al,0x48
  421df8:	out    0xda,eax
  421dfa:	cmp    eax,0x9a3b331d
  421dff:	adc    DWORD PTR [eax+ecx*2-0x78],eax
  421e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e04:	jle    0x421e3a
  421e06:	loope  0x421e20
  421e08:	push   ds
  421e09:	jns    0x421e25
  421e0b:	and    bl,BYTE PTR [edx]
  421e0d:	xor    al,0xaf
  421e0f:	cli    
  421e10:	stos   DWORD PTR es:[edi],eax
  421e11:	sbb    eax,0xe1659800
  421e16:	xor    BYTE PTR [ecx],cl
  421e18:	jmp    0xa5b:0xf7412eff
  421e1f:	or     BYTE PTR gs:[ebp+0x33b8af1],dh
  421e26:	add    al,0x99
  421e28:	sbb    BYTE PTR [edi-0x20b4e321],ch
  421e2e:	pop    esp
  421e2f:	inc    ebp
  421e30:	dec    BYTE PTR ds:0x485963b0
  421e36:	not    cl
  421e38:	jno    0x421e2a
  421e3a:	mov    eax,0x4c52701c
  421e3f:	cdq    
  421e40:	popa   
  421e41:	or     DWORD PTR [esi],0x815f6603
  421e47:	es test eax,0xa786ef99
  421e4d:	(bad)
  421e50:	mov    ecx,ebp
  421e52:	test   eax,0x3088320b
  421e57:	xor    eax,0x2a33be7e
  421e5c:	or     ebp,DWORD PTR [esp+ecx*1-0x29]
  421e60:	xchg   edi,eax
  421e61:	add    cl,BYTE PTR ds:0x167f85af
  421e67:	icebp  
  421e68:	je     0x421e20
  421e6a:	dec    ecx
  421e6b:	pop    edx
  421e6c:	loopne 0x421e65
  421e6e:	std    
  421e6f:	ss sub ebx,edi
  421e72:	rcl    DWORD PTR [edi+ebx*1],cl
  421e75:	popa   
  421e76:	enter  0xc77e,0x77
  421e7a:	add    BYTE PTR cs:[edx-0x3a],cl
  421e7e:	shl    BYTE PTR [eax+ebx*1+0x59c73a],1
  421e85:	mov    bl,0x2d
  421e87:	outs   dx,BYTE PTR ds:[esi]
  421e88:	mov    bh,0xf5
  421e8a:	mov    bl,0x52
  421e8c:	lock adc al,0x10
  421e8f:	je     0x421ef7
  421e91:	test   al,0x96
  421e93:	sub    al,BYTE PTR [ecx-0x22]
  421e96:	fidivr WORD PTR [ebx+0x63]
  421e99:	push   ebx
  421e9a:	(bad)
  421e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e9e:	test   ah,0xc0
  421ea1:	aad    0xcc
  421ea3:	xor    al,0x4b
  421ea5:	ins    DWORD PTR es:[edi],dx
  421ea6:	cwde   
  421ea7:	mov    cs,WORD PTR [edi-0x1b]
  421eaa:	cmp    dl,BYTE PTR fs:[ebx]
  421ead:	ficom  WORD PTR [esi-0x74]
  421eb0:	hlt    
  421eb1:	xchg   edx,eax
  421eb2:	push   esp
  421eb3:	pop    es
  421eb4:	jns    0x421e6b
  421eb6:	add    ch,ch
  421eb8:	mov    cs,WORD PTR [ebp+0x11]
  421ebb:	test   al,0xbb
  421ebd:	jge    0x421eaf
  421ebf:	pop    esi
  421ec0:	dec    ebp
  421ec1:	mov    ?,WORD PTR [edx+edx*4]
  421ec4:	xor    ebp,DWORD PTR [ecx]
  421ec6:	gs mov edi,0x7b6ace58
  421ecc:	xchg   ecx,eax
  421ecd:	fdivr  DWORD PTR [ecx-0x68]
  421ed0:	push   ss
  421ed1:	out    dx,al
  421ed2:	mov    eax,ds:0x8555213
  421ed7:	push   ecx
  421ed8:	outs   dx,BYTE PTR ds:[esi]
  421ed9:	jl     0x421f1c
  421edb:	enter  0xce6d,0xb7
  421edf:	scas   eax,DWORD PTR es:[edi]
  421ee0:	jbe    0x421e8f
  421ee2:	mov    DWORD PTR [esi-0x3c7a207e],esp
  421ee8:	and    DWORD PTR [ebp-0x47],ecx
  421eeb:	jnp    0x421ecc
  421eed:	mov    bh,0xb8
  421eef:	xchg   al,bh
  421ef1:	repz icebp 
  421ef3:	mov    esi,gs
  421ef5:	les    ebx,FWORD PTR [ebx+0x713cf54b]
  421efb:	push   ss
  421efc:	jl     0x421f03
  421efe:	fldl2e 
  421f00:	push   ebp
  421f01:	or     al,0x8a
  421f03:	sub    ah,dl
  421f05:	dec    BYTE PTR [eax+0x5b]
  421f08:	outs   dx,DWORD PTR ds:[esi]
  421f09:	xor    dh,BYTE PTR [edx]
  421f0b:	mov    cl,0x50
  421f0d:	jno    0x421f6f
  421f0f:	(bad)  
  421f10:	jle    0x421f10
  421f12:	cmc    
  421f13:	xlat   BYTE PTR ds:[ebx]
  421f14:	ret    0x561b
  421f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f18:	dec    ebx
  421f19:	add    al,0xe7
  421f1b:	xchg   esi,eax
  421f1c:	adc    DWORD PTR [ebx],esp
  421f1e:	push   edi
  421f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f20:	mov    ch,0xf5
  421f22:	popa   
  421f23:	out    0xd0,al
  421f25:	mov    ebx,edi
  421f27:	mov    ds:0x49b5b94f,eax
  421f2c:	repnz gs push ebx
  421f2f:	mov    ecx,DWORD PTR [ecx+esi*1+0x559a4a64]
  421f36:	mov    ch,0x89
  421f38:	sar    BYTE PTR [esi+0xf],0xa
  421f3c:	and    ch,BYTE PTR [eax+ecx*4+0x51]
  421f40:	mov    ebx,0x65ceeeb4
  421f45:	shl    DWORD PTR [ecx+esi*8+0x57],cl
  421f49:	dec    eax
  421f4a:	xor    BYTE PTR [edx-0x66d59ae5],ch
  421f50:	xor    BYTE PTR [eax-0x60],ch
  421f53:	cmp    eax,ebp
  421f55:	stos   BYTE PTR es:[edi],al
  421f56:	xor    BYTE PTR [ecx-0x7d],dh
  421f59:	ins    DWORD PTR es:[edi],dx
  421f5a:	cmc    
  421f5b:	mov    eax,ds:0x2358436d
  421f60:	mov    eax,0x5ff0a686
  421f65:	out    0x34,al
  421f67:	ss ret 
  421f69:	xchg   esi,eax
  421f6a:	fucomip st,st(7)
  421f6c:	mov    ecx,0xa7495bb3
  421f71:	mov    cl,0x89
  421f73:	dec    edx
  421f74:	jmp    0xed66:0x2b4d269a
  421f7b:	ret    
  421f7c:	fs ins DWORD PTR es:[edi],dx
  421f7e:	xor    esp,esi
  421f80:	push   0xfffffffc
  421f82:	out    dx,al
  421f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f84:	mov    eax,ds:0x1c0bdfaf
  421f89:	cmp    eax,0x87185e76
  421f8e:	loope  0x421f77
  421f90:	pop    ebp
  421f91:	lods   al,BYTE PTR ds:[esi]
  421f92:	xchg   esp,eax
  421f93:	and    dl,al
  421f95:	test   eax,0xe02d00c0
  421f9a:	xor    dh,BYTE PTR [esi+esi*2+0x6695a0e4]
  421fa1:	mov    ds:0xbfad4329,al
  421fa6:	outs   dx,DWORD PTR ds:[esi]
  421fa7:	xor    ch,BYTE PTR [eax+edx*8]
  421faa:	adc    eax,0xa15380ee
  421faf:	aam    0x35
  421fb1:	(bad)  
  421fb2:	call   0x853bc4de
  421fb7:	int    0xfe
  421fb9:	inc    ebx
  421fba:	das    
  421fbb:	xor    ah,dl
  421fbd:	ficomp DWORD PTR [edi+0x51c5c439]
  421fc3:	push   eax
  421fc4:	jbe    0x421fd6
  421fc6:	pop    edx
  421fc7:	sub    al,0x67
  421fc9:	icebp  
  421fca:	or     ebx,DWORD PTR [ecx-0x5f]
  421fcd:	pop    ebx
  421fce:	and    al,0x31
  421fd0:	inc    ecx
  421fd1:	ret    0xfe3c
  421fd4:	cld    
  421fd5:	push   cs
  421fd6:	inc    ecx
  421fd7:	dec    esi
  421fd8:	retf   
  421fd9:	aaa    
  421fda:	pop    esi
  421fdb:	jp     0x421f63
  421fdd:	mov    dl,0x46
  421fdf:	inc    eax
  421fe0:	stc    
  421fe1:	popfw  
  421fe3:	(bad)  
  421fe4:	sbb    eax,0x30cd2dbc
  421fe9:	mov    gs,WORD PTR [edi+0x4dcead8f]
  421fef:	not    DWORD PTR [ebx]
  421ff1:	adc    eax,0x1ff8198
  421ff6:	adc    bh,BYTE PTR [eax+0xe]
  421ff9:	add    DWORD PTR [edx+0x1d],edi
  421ffc:	call   0x51af:0xe6e2c756
  422003:	jae    0x421ff8
  422005:	adc    esp,DWORD PTR [esi-0x35]
  422008:	push   0x90e5eb64
  42200d:	and    ebp,ecx
  42200f:	mov    WORD PTR [esi],?
  422011:	inc    ebp
  422012:	mov    DWORD PTR [edx],0xe48b8ea2
  422018:	hlt    
  422019:	dec    ebp
  42201a:	nop
  42201b:	nop
  42201c:	mov    ecx,0x139a3567
  422021:	nop    DWORD PTR ds:0xa0a3a313
  422028:	jle    0x421fed
  42202a:	fnsave [edx-0xa]
  42202d:	xor    BYTE PTR [ebp+0x3c],bh
  422030:	push   es
  422031:	div    ch
  422033:	sub    eax,0x2becfd2c
  422038:	mov    eax,ds:0x5078d683
  42203d:	mov    WORD PTR [edi],?
  42203f:	pop    ss
  422040:	mov    cl,0xc1
  422042:	sub    eax,0xc36d5f03
  422047:	jnp    0x421ff7
  422049:	cmp    eax,0xa2476fff
  42204e:	daa    
  42204f:	cmp    ebx,esp
  422051:	pop    ss
  422052:	or     al,0xc7
  422055:	dec    cx
  422057:	jb     0x422033
  422059:	jmp    0x42209d
  42205b:	stos   BYTE PTR es:[edi],al
  42205c:	jbe    0x42201e
  42205e:	icebp  
  42205f:	mov    ds:0x26759dd2,al
  422064:	sbb    DWORD PTR [ebx],ebx
  422066:	xchg   ecx,eax
  422067:	call   0xdd0d:0xca351584
  42206e:	arpl   WORD PTR [ebx],bp
  422070:	sbb    BYTE PTR [ebx+0x28],dh
  422073:	dec    eax
  422074:	mov    bl,0x0
  422076:	add    DWORD PTR [edx-0x6ec1028b],edi
  42207c:	sbb    edi,edx
  42207e:	xor    edi,ebx
  422080:	sub    BYTE PTR [ecx],dh
  422082:	pop    esi
  422083:	pop    esp
  422084:	pop    ds
  422085:	add    DWORD PTR [ebx+0x72a5087],0xb18362df
  42208f:	test   eax,0x94acca
  422094:	(bad)  
  422095:	punpckldq mm3,DWORD PTR [ebx-0x6d023a01]
  42209c:	xchg   DWORD PTR [ebx-0x3a1b50e1],esi
  4220a2:	fiadd  WORD PTR [esp+esi*2+0x5f]
  4220a6:	test   BYTE PTR [ecx-0x24],ch
  4220a9:	mov    esi,esi
  4220ab:	cmp    eax,0x253009
  4220b0:	add    BYTE PTR [eax],al
  4220b2:	cmp    ecx,edi
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	aad    0x51
  4220c0:	lods   al,BYTE PTR ds:[esi]
  4220c1:	xor    eax,0x19ac1
  4220c6:	cmc    
  4220c7:	add    al,0x0
  4220c9:	add    BYTE PTR [esi],dh
  4220cb:	sub    DWORD PTR [ebp-0x2d],edi
  4220ce:	daa    
  4220cf:	ficom  WORD PTR [edi]
  4220d1:	pop    esi
  4220d2:	test   BYTE PTR [ebx+0x7f98c2be],bl
  4220d8:	push   edi
  4220d9:	in     al,dx
  4220da:	push   ss
  4220db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220dc:	mov    ch,0xc1
  4220de:	(bad)  
  4220df:	out    dx,eax
  4220e0:	or     edi,esi
  4220e2:	add    esp,edi
  4220e4:	enter  0xf59f,0xee
  4220e8:	sbb    BYTE PTR ds:0xf20e0ead,dh
  4220ee:	inc    eax
  4220ef:	dec    ebx
  4220f0:	in     al,0x9c
  4220f2:	and    esp,DWORD PTR [ebx-0x3c]
  4220f5:	fwait
  4220f6:	aad    0x60
  4220f8:	mov    ebx,0x5393615a
  4220fd:	loopne 0x4220da
  4220ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422100:	or     eax,0x94642e2b
  422105:	mov    ecx,0xebea33cb
  42210a:	in     eax,0x92
  42210c:	adc    edi,0x86378e33
  422112:	cmp    DWORD PTR [ebp-0x5cd18838],ecx
  422118:	fistp  QWORD PTR [ebx]
  42211a:	mov    ss,WORD PTR [ebx]
  42211c:	inc    edi
  42211d:	add    dh,BYTE PTR [ecx+0x7ce5c75d]
  422123:	(bad)  
  422125:	int3   
  422126:	adc    esp,DWORD PTR [edi]
  422128:	hlt    
  422129:	in     eax,dx
  42212a:	xor    DWORD PTR [ebp+0x76319a8c],esp
  422130:	fcomp  QWORD PTR [edx-0x3e86468]
  422136:	mov    ch,0xa8
  422138:	mov    al,ds:0x3d51e52a
  42213d:	mov    ds:0x611c62fd,eax
  422142:	scas   al,BYTE PTR es:[edi]
  422143:	in     eax,dx
  422144:	jmp    0x4c3adf09
  422149:	cmp    esi,DWORD PTR [ebp-0x15]
  42214c:	imul   ebp,esi,0xffffffc3
  42214f:	or     eax,0x7f6cd500
  422154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422155:	inc    edi
  422156:	mov    bl,0x5d
  422158:	jge    0x4220f4
  42215a:	stos   DWORD PTR es:[edi],eax
  42215b:	popf   
  42215c:	xchg   edx,eax
  42215d:	movd   mm0,ecx
  422160:	test   DWORD PTR [edx+0xe],edx
  422163:	mov    ebx,0xb4488091
  422168:	push   ss
  422169:	dec    ebp
  42216a:	or     BYTE PTR [eax+ebp*2],dh
  42216d:	push   edx
  42216e:	fs push 0x39
  422171:	repnz or eax,0xed145611
  422177:	push   ds
  422178:	jne    0x422102
  42217a:	adc    DWORD PTR [esi],eax
  42217c:	inc    ebx
  42217d:	lods   eax,DWORD PTR ds:[esi]
  42217e:	xchg   BYTE PTR [esp+edx*8-0x73],dl
  422182:	bound  edi,QWORD PTR [ebp+0x18]
  422185:	and    al,0x32
  422187:	jmp    0x6cd0ce0e
  42218c:	(bad)  
  42218e:	and    al,0x62
  422190:	sub    DWORD PTR [ebp-0xf178be7],edi
  422196:	out    0xcc,al
  422198:	and    DWORD PTR [edx-0x5a],0x43263b8d
  42219f:	mov    bh,0x35
  4221a1:	push   eax
  4221a2:	cmp    eax,0xc16bc0f
  4221a7:	dec    esi
  4221a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221a9:	push   edx
  4221aa:	pop    edi
  4221ab:	pop    ss
  4221ac:	push   es
  4221ad:	sbb    bl,BYTE PTR [esi+0x21]
  4221b0:	xchg   ebp,eax
  4221b1:	cmp    DWORD PTR [ebx+0x3b],0xffffffe0
  4221b5:	jno    0x4221bf
  4221b7:	test   eax,0x9ebdde7
  4221bc:	mov    esi,0xe8ca6097
  4221c1:	cmp    DWORD PTR [ebx],edx
  4221c3:	ror    BYTE PTR [edi],0xf4
  4221c6:	or     al,0xfa
  4221c8:	mov    ebp,0xaab3fe8e
  4221cd:	es in  eax,dx
  4221cf:	adc    ecx,esi
  4221d1:	jno    0x4221a9
  4221d3:	or     eax,0xa524ac8c
  4221d8:	push   es
  4221d9:	setns  BYTE PTR ds:0x41ddbf52
  4221e0:	ss stc 
  4221e2:	and    cl,cl
  4221e4:	mov    eax,ds:0x5536f9c4
  4221e9:	xchg   edx,eax
  4221ea:	mov    al,ds:0x9f8fb543
  4221ef:	rcl    BYTE PTR [eax-0x5a],1
  4221f2:	mov    dh,0x4c
  4221f4:	sar    BYTE PTR [edx-0x48],1
  4221f7:	push   ds
  4221f8:	jo     0x4221ad
  4221fa:	neg    ch
  4221fc:	cmp    al,0xac
  4221fe:	sti    
  4221ff:	int3   
  422200:	mov    esp,DWORD PTR [ebx-0x35f8c2ea]
  422206:	jecxz  0x4221ad
  422208:	pusha  
  422209:	mov    ebx,0xd93c587
  42220e:	push   ecx
  42220f:	outs   dx,DWORD PTR ds:[esi]
  422210:	inc    ebx
  422211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422212:	mov    WORD PTR [ecx-0x34297713],?
  422218:	sbb    DWORD PTR ds:0x9e3b8c7e,edx
  42221e:	loopne 0x42229f
  422220:	jns    0x422222
  422222:	xor    esp,esi
  422224:	test   al,al
  422226:	hlt    
  422227:	adc    BYTE PTR [ecx-0x167400ad],al
  42222d:	dec    ebp
  42222e:	mov    dl,0xbb
  422230:	sbb    al,0x9a
  422232:	sbb    eax,0xc54e99c0
  422237:	out    0x8d,eax
  422239:	in     al,0xb8
  42223b:	jb     0x422292
  42223d:	push   ebp
  42223e:	mov    eax,ds:0xf1d09086
  422243:	outs   dx,BYTE PTR ds:[esi]
  422244:	(bad)  
  422245:	cdq    
  422246:	test   eax,0x46e53a58
  42224b:	ins    BYTE PTR es:[edi],dx
  42224c:	mov    esp,0xe35965bd
  422251:	gs dec ebp
  422253:	cmp    edx,esp
  422255:	lea    esi,[ecx+0x1d]
  422258:	in     al,dx
  422259:	push   esp
  42225a:	sbb    BYTE PTR [edi-0x70853914],cl
  422260:	push   edi
  422261:	jmp    0x59e9:0x9180917c
  422268:	jmp    DWORD PTR [eax-0x1b]
  42226b:	or     eax,DWORD PTR [esi+0x7202eb7]
  422271:	fucom  st(1)
  422273:	(bad)  [edi+0x58]
  422276:	inc    edi
  422277:	fs xor al,0xb3
  42227a:	mov    ds:0x4fe1d0eb,eax
  42227f:	leave  
  422280:	js     0x4222a7
  422282:	mov    eax,0xe2c99fed
  422287:	inc    esi
  422288:	mov    ch,0x53
  42228a:	add    BYTE PTR [esi],0xac
  42228d:	cmp    DWORD PTR [ecx+0x7],eax
  422290:	sub    eax,0x4ac89a40
  422295:	adc    al,0x6c
  422297:	cli    
  422298:	cmp    eax,0x578f56fa
  42229d:	test   DWORD PTR [eax+esi*4-0x18922520],edx
  4222a4:	jle    0x422247
  4222a6:	les    ebp,FWORD PTR [edi-0x39684c63]
  4222ac:	jg     0x4222b0
  4222ae:	jns    0x42225f
  4222b0:	pusha  
  4222b1:	mov    eax,0xc95df79a
  4222b6:	dec    ebp
  4222b7:	mov    eax,0xe1e45ec5
  4222bc:	pop    edi
  4222bd:	cwde   
  4222be:	or     al,0x69
  4222c0:	inc    eax
  4222c1:	or     eax,0xf1aa6cf6
  4222c6:	push   edx
  4222c7:	mov    ah,0x2
  4222c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222ca:	xor    dl,BYTE PTR [eax-0x4c]
  4222cd:	(bad)  
  4222ce:	push   ss
  4222cf:	dec    ecx
  4222d0:	mov    esi,0x7f492d2f
  4222d5:	inc    esp
  4222d6:	cmp    ch,BYTE PTR [edx-0x3d]
  4222d9:	mov    al,ds:0x9f4c216d
  4222de:	shl    edx,cl
  4222e0:	aas    
  4222e1:	sahf   
  4222e2:	dec    esp
  4222e3:	call   0x4e95:0x3a117c9f
  4222ea:	or     edi,DWORD PTR [ebp+0x7be60a00]
  4222f0:	cmp    DWORD PTR [edi-0x20e63e2],ebp
  4222f6:	mov    bh,BYTE PTR [ebx-0xab52a63]
  4222fc:	int3   
  4222fd:	fsub   QWORD PTR [esi+ecx*1]
  422300:	aad    0x96
  422302:	je     0x422343
  422304:	shl    BYTE PTR [ebx+0x4f16a22c],1
  42230a:	inc    eax
  42230b:	sbb    al,0x9f
  42230d:	push   ecx
  42230e:	ins    BYTE PTR es:[edi],dx
  42230f:	jmp    0xfcd6505b
  422314:	xchg   cx,sp
  422317:	cmc    
  422318:	inc    ebx
  422319:	sub    eax,0x5fb1a992
  42231e:	dec    edi
  42231f:	(bad)  
  422320:	jle    0x422393
  422322:	xchg   ebx,eax
  422323:	inc    cx
  422325:	sub    dl,BYTE PTR gs:[esi-0x34bf5844]
  42232c:	xchg   ebx,eax
  42232d:	jae    0x4222e0
  42232f:	std    
  422330:	arpl   bp,ax
  422332:	add    BYTE PTR [edi+0x613253df],al
  422338:	pop    edi
  422339:	fcmove st,st(7)
  42233b:	enter  0x35be,0x4a
  42233f:	mov    al,0x69
  422341:	and    DWORD PTR [esi+0x4f20d2f0],edi
  422347:	pop    es
  422348:	mov    edi,0x383790fe
  42234d:	loope  0x42234b
  42234f:	xchg   esp,eax
  422350:	stos   DWORD PTR es:[edi],eax
  422351:	mov    ds:0x1cd8db81,eax
  422356:	xchg   edi,eax
  422357:	jmp    0x479:0x7e024be2
  42235e:	test   al,0x2
  422360:	stc    
  422361:	pop    ss
  422362:	mov    esi,0xcf310a4f
  422367:	sub    eax,0xfd70d78d
  42236c:	aaa    
  42236d:	mov    ecx,0xa258cc3f
  422372:	scas   al,BYTE PTR es:[edi]
  422373:	mov    eax,ds:0xc6a1e381
  422378:	cmp    bl,BYTE PTR [ecx+0x1b]
  42237b:	cld    
  42237c:	scas   al,BYTE PTR es:[edi]
  42237d:	cmp    ebp,DWORD PTR [ecx+0x59]
  422380:	inc    ebp
  422381:	add    dh,BYTE PTR [ecx]
  422383:	cmp    DWORD PTR [ebp-0x16],esp
  422386:	mov    bl,0x91
  422388:	mov    al,0xaa
  42238a:	add    DWORD PTR [ecx],ebx
  42238c:	and    DWORD PTR [ebx],0xffffffc9
  42238f:	or     DWORD PTR ds:0xd8e30d33,ebx
  422395:	lea    ecx,[ecx]
  422397:	jo     0x422350
  422399:	dec    ebp
  42239a:	test   BYTE PTR [esi+0x36],dh
  42239d:	leave  
  42239e:	in     eax,0xad
  4223a0:	sub    eax,0x454ac6cd
  4223a5:	cmc    
  4223a6:	loop   0x4223fe
  4223a8:	inc    esi
  4223a9:	cs in  eax,0xff
  4223ac:	dec    ebx
  4223ad:	add    ah,ch
  4223af:	mov    esi,?
  4223b1:	push   esp
  4223b2:	mov    edx,0x9c2e3f26
  4223b7:	mov    edx,0x2a930068
  4223bc:	lahf   
  4223bd:	scas   al,BYTE PTR es:[edi]
  4223be:	mov    eax,0xf126b15d
  4223c3:	shl    ebp,1
  4223c5:	pop    ss
  4223c6:	sub    al,BYTE PTR [ecx-0x54abff4]
  4223cc:	mov    eax,ds:0xccf597ed
  4223d1:	dec    ecx
  4223d2:	inc    ebp
  4223d3:	xchg   ecx,ebp
  4223d5:	cdq    
  4223d6:	cmp    BYTE PTR [edx],0xa2
  4223d9:	sar    DWORD PTR [eax],1
  4223db:	je     0x422387
  4223dd:	inc    esp
  4223de:	sub    eax,0xb45ab6aa
  4223e3:	das    
  4223e4:	push   esi
  4223e5:	icebp  
  4223e6:	sbb    esi,DWORD PTR [edi+0x1b5666e1]
  4223ec:	mov    dl,0x5b
  4223ee:	nop
  4223ef:	mov    edi,0x70c54faa
  4223f4:	pop    esp
  4223f5:	inc    esp
  4223f6:	mov    ds:0x8ba464ec,al
  4223fb:	test   eax,0xc72d0174
  422400:	inc    esp
  422401:	rcl    DWORD PTR [eax+0x734cc7f],cl
  422407:	pushf  
  422408:	and    esp,DWORD PTR [ebp+0x3a]
  42240b:	daa    
  42240c:	jle    0x42240b
  42240e:	repnz ror DWORD PTR [ebp-0x230dad59],0x67
  422416:	std    
  422417:	push   edx
  422418:	ds enter 0x2546,0xd3
  42241d:	sbb    al,0xb2
  42241f:	outs   dx,DWORD PTR ds:[esi]
  422420:	xchg   edi,eax
  422421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422422:	mov    eax,0xc5e7fda7
  422427:	xor    cl,BYTE PTR [edx+0x41f64258]
  42242d:	es mov ch,0xd8
  422430:	lods   eax,DWORD PTR ds:[esi]
  422431:	or     al,0xee
  422433:	or     DWORD PTR [ebp+edx*8+0x6],edi
  422437:	push   0x33b8f3a1
  42243c:	(bad)  
  42243d:	retf   
  42243e:	std    
  42243f:	stos   BYTE PTR es:[edi],al
  422440:	cmp    dh,BYTE PTR fs:[ecx+0x7648731e]
  422447:	xchg   edi,eax
  422448:	sub    bl,ch
  42244a:	into   
  42244b:	adc    esi,DWORD PTR [ecx+0x4b6bae18]
  422451:	test   DWORD PTR [edi],edi
  422453:	cdq    
  422454:	inc    eax
  422455:	sub    bl,ch
  422457:	mov    esi,DWORD PTR [ebx]
  422459:	xchg   DWORD PTR [edx],edx
  42245b:	fisttp WORD PTR [ebx]
  42245d:	mov    edx,edx
  42245f:	or     DWORD PTR [ecx],ebx
  422461:	sbb    al,0x65
  422463:	and    ecx,edi
  422465:	mov    edx,0x705b2cd5
  42246a:	lea    esi,[edx-0x5db05d58]
  422470:	fistp  WORD PTR [edx]
  422472:	sub    DWORD PTR [esi-0x12],edx
  422475:	pop    ecx
  422476:	and    DWORD PTR [ebp+0x7a3ac96d],0x84f77f14
  422480:	inc    edx
  422481:	fldenv [esi]
  422483:	retf   
  422484:	addr16 cmp cl,bh
  422487:	or     dh,BYTE PTR [esi-0x4ee3face]
  42248d:	(bad)  
  42248e:	and    ebx,DWORD PTR [edi+eiz*8+0x66ae1cb2]
  422495:	sbb    ecx,edx
  422497:	push   esp
  422498:	xor    DWORD PTR [esi-0x4e0810e9],0x841013d9
  4224a2:	cmp    esp,DWORD PTR [ebp+0x66]
  4224a5:	fsubr  QWORD PTR [edi]
  4224a7:	popa   
  4224a8:	ins    DWORD PTR es:[edi],dx
  4224a9:	xor    ebx,DWORD PTR [ebx-0x61c9ce86]
  4224af:	out    0x34,eax
  4224b1:	pop    edx
  4224b2:	rol    BYTE PTR [ebp+0x3c],cl
  4224b5:	rcr    DWORD PTR ds:0xc8c4d73a,cl
  4224bb:	mov    al,0x5d
  4224bd:	xchg   edi,eax
  4224be:	ds sti 
  4224c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c1:	hlt    
  4224c2:	sbb    DWORD PTR [edi-0x52],ebx
  4224c5:	call   0x3d8f:0xab9d49b2
  4224cc:	in     eax,dx
  4224cd:	xchg   al,dh
  4224cf:	cmp    eax,0xc3c8c70e
  4224d4:	popf   
  4224d5:	jg     0x422514
  4224d7:	xchg   edx,eax
  4224d9:	int3   
  4224da:	xchg   ebx,eax
  4224db:	pop    ds
  4224dc:	not    DWORD PTR [esi+0x157881cc]
  4224e2:	sub    DWORD PTR [ebx],esp
  4224e4:	aam    0x18
  4224e6:	sbb    al,0x54
  4224e8:	adc    bl,BYTE PTR [ebx]
  4224ea:	icebp  
  4224eb:	add    ah,dl
  4224ed:	aas    
  4224ee:	dec    esi
  4224ef:	out    dx,al
  4224f0:	out    0xc6,eax
  4224f2:	cld    
  4224f3:	mov    ebx,0x7d56075
  4224f8:	int    0xe4
  4224fa:	pop    ebx
  4224fb:	sbb    eax,DWORD PTR [ebx-0x1eb2a7a2]
  422501:	cmp    edi,edi
  422503:	mov    ?,WORD PTR [edx+ebp*2+0x26]
  422507:	clc    
  422508:	gs popf 
  42250a:	aaa    
  42250b:	jno    0x4224af
  42250d:	es push ss
  42250f:	scas   eax,DWORD PTR es:[edi]
  422510:	push   0xffffffd6
  422512:	jle    0x422580
  422514:	lahf   
  422515:	xor    DWORD PTR [edi-0x5c],0xe013e180
  42251c:	popf   
  42251d:	adc    al,0xae
  42251f:	inc    esp
  422520:	fldcw  WORD PTR [esi-0x999f395]
  422526:	push   ebp
  422527:	push   0x9ef230b1
  42252c:	push   ecx
  42252d:	sbb    DWORD PTR [esi],edi
  42252f:	(bad)
  422532:	push   ss
  422533:	inc    edi
  422534:	(bad)  
  422535:	jl     0x422594
  422537:	mov    WORD PTR [esi-0x79],ss
  42253a:	pop    edi
  42253b:	mov    ecx,0xc7f754eb
  422540:	pushf  
  422541:	scas   eax,DWORD PTR es:[edi]
  422542:	int    0x17
  422544:	aaa    
  422545:	dec    ebp
  422546:	int3   
  422547:	inc    edx
  422548:	push   ecx
  422549:	jmp    0x422533
  42254b:	or     BYTE PTR [edx],bh
  42254d:	sub    bh,bl
  42254f:	cli    
  422550:	xor    DWORD PTR [esi],eax
  422552:	cmp    eax,0x417b5673
  422557:	sub    al,BYTE PTR [esi]
  422559:	mov    edx,0x2407ccd7
  42255e:	sbb    ebp,DWORD PTR [edi-0x7d]
  422561:	inc    ebp
  422562:	jmp    0x4225e3
  422564:	aas    
  422565:	enter  0x3c2b,0x3e
  422569:	retf   0x1d64
  42256c:	rol    BYTE PTR [ecx],1
  42256e:	mov    dl,0x89
  422570:	fcomp  st(7)
  422572:	bound  esp,QWORD PTR [eax]
  422574:	retf   
  422575:	outs   dx,BYTE PTR ds:[esi]
  422576:	xchg   edx,eax
  422577:	out    0x20,al
  422579:	sub    ch,dl
  42257b:	add    al,0xb1
  42257d:	pop    ebx
  42257e:	inc    ecx
  42257f:	cmp    al,0x25
  422581:	pop    ss
  422582:	out    0x81,eax
  422584:	or     eax,DWORD PTR [ebp+0x41]
  422587:	inc    edx
  422588:	mov    al,0x45
  42258a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42258b:	enter  0x88f5,0x8f
  42258f:	(bad)  
  422590:	retf   
  422591:	add    BYTE PTR [ebp+edi*4-0x6e4b23d8],bh
  422598:	ss xor eax,0xabb83242
  42259e:	sub    BYTE PTR [ebx-0x1f041224],0x8a
  4225a5:	adc    al,0x4
  4225a7:	jl     0x4225b4
  4225a9:	inc    esi
  4225aa:	pusha  
  4225ab:	pop    esi
  4225ac:	xchg   edx,eax
  4225ad:	xor    eax,0xce4a2acb
  4225b2:	pushf  
  4225b3:	add    BYTE PTR [eax-0x1a],bl
  4225b6:	imul   DWORD PTR ds:0xe7d6f933
  4225bc:	pop    es
  4225bd:	jae    0x4225cb
  4225bf:	add    BYTE PTR [eax],al
  4225c1:	add    dl,cl
  4225c3:	adc    al,0x69
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9fb6:0x1631b957
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	cmc    
  4225d7:	add    al,0x0
  4225d9:	add    dl,dh
  4225db:	pop    edx
  4225dc:	or     al,0xaf
  4225de:	push   ds
  4225df:	scas   al,BYTE PTR es:[edi]
  4225e0:	xor    DWORD PTR [ebp+0x4f],esp
  4225e3:	dec    ebx
  4225e4:	pushf  
  4225e5:	sub    edx,DWORD PTR [eax]
  4225e7:	in     al,dx
  4225e8:	stos   DWORD PTR es:[edi],eax
  4225e9:	ja     0x42260e
  4225eb:	(bad)  
  4225ec:	outs   dx,DWORD PTR ds:[esi]
  4225ed:	sub    al,BYTE PTR [ecx]
  4225ef:	jl     0x422625
  4225f1:	push   ds
  4225f2:	and    BYTE PTR [edx-0x3e],al
  4225f5:	pop    eax
  4225f6:	rol    BYTE PTR [edx-0x4452319f],1
  4225fc:	retf   
  4225fd:	ins    DWORD PTR es:[edi],dx
  4225fe:	hlt    
  4225ff:	test   BYTE PTR gs:[edx-0x1c4d65b7],dh
  422606:	out    dx,eax
  422607:	test   DWORD PTR [ebx],esi
  422609:	aam    0x24
  42260b:	jae    0x422662
  42260d:	inc    esi
  42260e:	adc    al,0x74
  422610:	xchg   esi,eax
  422611:	ror    BYTE PTR [esi+0x53],0x82
  422615:	ficom  WORD PTR [ebp-0x2e]
  422618:	or     DWORD PTR [ecx+0x5b],0x2c
  42261c:	into   
  42261d:	mov    BYTE PTR [ebx-0x1919f369],dl
  422623:	stos   DWORD PTR es:[edi],eax
  422624:	sub    al,BYTE PTR [ebx-0x46]
  422627:	inc    esi
  422628:	aaa    
  422629:	aas    
  42262a:	or     bl,bl
  42262c:	add    al,0x65
  42262e:	stos   DWORD PTR es:[edi],eax
  42262f:	sbb    al,0xb1
  422631:	mov    eax,ds:0x8e48f6a1
  422636:	mov    ebp,0xbec7054d
  42263b:	lds    eax,FWORD PTR [edi+0x12d52d30]
  422641:	fist   WORD PTR [esi+0x5a50b7fa]
  422647:	mov    eax,0x5d5a0d66
  42264c:	jg     0x4225e4
  42264e:	push   esi
  42264f:	nop
  422650:	lods   eax,DWORD PTR ds:[esi]
  422651:	ins    DWORD PTR es:[edi],dx
  422652:	push   esp
  422653:	mov    edi,0x19741965
  422659:	mov    al,ds:0xaedf3e62
  42265e:	cmp    al,0x4e
  422660:	add    BYTE PTR [esi+0x462907d],bl
  422666:	lahf   
  422667:	out    dx,al
  422668:	nop
  422669:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42266b:	dec    ecx
  42266c:	outs   dx,BYTE PTR ds:[esi]
  42266d:	test   DWORD PTR [esi],esp
  42266f:	test   eax,0x23b81f62
  422674:	mov    BYTE PTR [edi-0x1a9f986f],al
  42267a:	popa   
  42267b:	call   0x9da5b20b
  422680:	out    0x5a,al
  422682:	mov    BYTE PTR [ebp+0x1f],ch
  422685:	pop    ss
  422686:	adc    edx,edi
  422688:	mov    ds:0x452742e5,al
  42268d:	je     0x422703
  42268f:	add    eax,0x3c9110f5
  422694:	add    eax,0xe8dc771f
  422699:	rol    ecx,cl
  42269b:	add    ecx,edx
  42269d:	push   cs
  42269e:	mov    ch,0x7f
  4226a0:	xchg   edi,eax
  4226a1:	mov    bl,0x4a
  4226a3:	xchg   esp,eax
  4226a4:	ret    0xb575
  4226a7:	xor    ah,cl
  4226a9:	push   ecx
  4226aa:	loope  0x422635
  4226ac:	adc    al,0x9e
  4226ae:	mov    WORD PTR [ecx-0x18288274],cs
  4226b4:	cmp    al,0xdf
  4226b6:	dec    eax
  4226b7:	and    bh,BYTE PTR [ecx-0x3b]
  4226ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226bb:	push   ebx
  4226bc:	add    eax,0x8a11fb8e
  4226c1:	(bad)  
  4226c2:	mov    edx,0xc058c4a0
  4226c7:	pusha  
  4226c8:	push   esp
  4226c9:	clc    
  4226ca:	push   ebp
  4226cb:	xlat   BYTE PTR ds:[ebx]
  4226cc:	mov    esp,0x33a7ca53
  4226d1:	xchg   DWORD PTR [ebp-0x3],edi
  4226d4:	cmp    al,0xab
  4226d6:	imul   edx,esp,0xfffffffb
  4226d9:	cmp    dl,BYTE PTR [eax]
  4226db:	cmp    BYTE PTR [edx+0x4],dl
  4226de:	fadd   DWORD PTR [esi]
  4226e0:	xlat   BYTE PTR ds:[ebx]
  4226e1:	fld    QWORD PTR [ecx+0x60c28323]
  4226e7:	std    
  4226e8:	xor    al,0x48
  4226ea:	or     eax,0xcab882a8
  4226ef:	call   0x59feb630
  4226f4:	jno    0x422686
  4226f6:	mov    bl,0x2d
  4226f8:	arpl   WORD PTR [eax],sp
  4226fa:	cmc    
  4226fb:	int    0x1c
  4226fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226fe:	cwde   
  4226ff:	bound  ebx,QWORD PTR [ebx+0x773f1c64]
  422705:	out    dx,eax
  422706:	push   ebx
  422707:	js     0x42276e
  422709:	mov    ds,WORD PTR [eiz*2-0x6e92377f]
  422710:	test   eax,0xc72f17b7
  422715:	shr    esi,cl
  422717:	sub    al,0xc
  422719:	(bad)  
  42271a:	push   cs
  42271b:	mov    ds:0xb112eba6,al
  422720:	pop    ss
  422721:	jo     0x42276d
  422723:	jo     0x422756
  422725:	mov    edi,0x5600af27
  42272a:	jmp    0x69c29255
  42272f:	out    0xb0,eax
  422731:	cmp    BYTE PTR ss:[eax+0x15],0xfd
  422736:	mov    bl,0x33
  422738:	push   cs
  422739:	mov    ebx,0xa8acd821
  42273e:	outs   dx,BYTE PTR ds:[esi]
  42273f:	cmp    BYTE PTR [esi+0x23],ah
  422742:	pop    ecx
  422743:	imul   edi,DWORD PTR [ebx],0xffffffcc
  422746:	(bad)  
  422747:	(bad)  
  422748:	jb     0x42272b
  42274a:	sbb    BYTE PTR [esi],cl
  42274c:	pop    edx
  42274d:	adc    DWORD PTR [esi+0xf],ebp
  422750:	add    al,0x90
  422752:	loopne 0x4227a5
  422754:	xchg   edi,eax
  422755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422756:	push   esp
  422757:	sub    BYTE PTR [ebp-0x10],ah
  42275a:	cmp    bl,BYTE PTR [ebp-0x7]
  42275d:	add    DWORD PTR [edi-0x3d73312],esp
  422763:	pop    eax
  422764:	mov    edi,?
  422766:	push   ebx
  422767:	pop    edx
  422768:	push   es
  422769:	push   esp
  42276a:	push   ecx
  42276b:	aad    0x3f
  42276d:	das    
  42276e:	jmp    0xde1c4178
  422773:	das    
  422774:	loope  0x4227b4
  422776:	dec    esp
  422777:	ret    
  422778:	ret    0x98d3
  42277b:	push   esp
  42277c:	and    esp,ecx
  42277e:	xor    al,0x8e
  422780:	push   cs
  422781:	test   al,0xa7
  422783:	bound  eax,QWORD PTR [ebp+0x4aa0c8a5]
  422789:	and    ecx,edx
  42278b:	popf   
  42278c:	sti    
  42278d:	aam    0x8d
  42278f:	rcl    BYTE PTR [edx+0x2863df24],1
  422795:	(bad)  [edi]
  422797:	fdiv   DWORD PTR [edx]
  422799:	imul   edi,DWORD PTR [ebx+0x4c44053a],0x44e12090
  4227a3:	lahf   
  4227a4:	dec    ebx
  4227a5:	sub    BYTE PTR [ebp+0x76e4174b],0x29
  4227ac:	xchg   ebx,eax
  4227ad:	in     al,dx
  4227ae:	xchg   edx,eax
  4227af:	sahf   
  4227b0:	aas    
  4227b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227b2:	mov    esp,ebx
  4227b4:	dec    ebp
  4227b5:	std    
  4227b6:	out    0xde,al
  4227b8:	xchg   ebx,eax
  4227b9:	out    dx,eax
  4227ba:	popf   
  4227bb:	lock or eax,0xffdb6255
  4227c1:	jmp    0x42279e
  4227c3:	mov    fs,esi
  4227c5:	daa    
  4227c6:	mov    ebp,0xecd4e7c7
  4227cb:	mov    esi,0x403f3dd9
  4227d0:	mov    BYTE PTR [edi],cl
  4227d2:	scas   al,BYTE PTR es:[edi]
  4227d3:	sub    al,0xb9
  4227d5:	cmp    BYTE PTR [ebx],cl
  4227d7:	sub    BYTE PTR [edx+0x5d],0x8f
  4227db:	add    al,al
  4227dd:	xlat   BYTE PTR ds:[ebx]
  4227de:	mov    al,ds:0xaffa7387
  4227e3:	push   ss
  4227e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227e5:	mov    WORD PTR [edx+0xd2c1ed1],gs
  4227eb:	jge    0x422858
  4227ed:	fbld   TBYTE PTR ds:[ebx]
  4227f0:	add    bl,BYTE PTR [edi+0x71]
  4227f3:	shr    edi,cl
  4227f5:	jnp    0x422821
  4227f7:	or     DWORD PTR [ebx-0x72],0x8d2ba6cd
  4227fe:	jg     0x422800
  422800:	mov    eax,ebx
  422802:	in     eax,dx
  422803:	retf   
  422804:	psllw  mm6,mm0
  422807:	mov    cl,bh
  422809:	hlt    
  42280a:	loop   0x4227c1
  42280c:	xor    ch,BYTE PTR [esi-0x33]
  42280f:	enter  0x5125,0x44
  422813:	jmp    0x422818
  422815:	adc    dl,bh
  422817:	ss jne 0x4227de
  42281a:	or     al,0x7a
  42281c:	int    0xa7
  42281e:	xor    eax,0xa2f7afc5
  422823:	ja     0x422857
  422825:	shl    BYTE PTR [edx],1
  422827:	fisttp QWORD PTR [esi]
  422829:	gs inc esi
  42282b:	mov    dh,0xd6
  42282d:	push   es
  42282e:	sub    ah,BYTE PTR [esi]
  422830:	xor    BYTE PTR [edi-0x6746459a],ah
  422836:	cmp    al,0xd2
  422838:	sub    eax,0x5d1c6a09
  42283d:	xor    dh,dh
  42283f:	xor    al,0x9f
  422841:	(bad)  
  422842:	bound  eax,QWORD PTR [ecx-0x54b04e65]
  422848:	and    BYTE PTR [eax+0x51ef7711],ch
  42284e:	or     edi,DWORD PTR [eax+ebx*4]
  422851:	loopne 0x4228b8
  422853:	inc    edx
  422854:	cmp    bh,bl
  422856:	inc    edx
  422857:	mov    edi,0x475edec6
  42285c:	nop
  42285d:	clc    
  42285e:	mov    cl,0x3c
  422860:	jecxz  0x422828
  422862:	add    BYTE PTR [edi],0xb3
  422865:	xchg   DWORD PTR [edi-0x30ab30d5],ecx
  42286b:	test   eax,0xf800eb55
  422870:	dec    ebx
  422871:	ins    DWORD PTR es:[edi],dx
  422872:	(bad)  
  422873:	jo     0x4228b3
  422875:	ficom  DWORD PTR [esi+ebp*4+0x598ce459]
  42287c:	xor    al,0x16
  42287e:	push   edx
  42287f:	mov    dh,0x7d
  422881:	sbb    al,0xb9
  422883:	dec    ecx
  422884:	call   0x7374:0x439196dd
  42288b:	sbb    DWORD PTR [esi-0x26],edi
  42288e:	retf   
  42288f:	jmp    0x42285a
  422891:	dec    ecx
  422892:	push   ss
  422893:	jbe    0x422883
  422895:	xchg   ecx,eax
  422896:	inc    eax
  422897:	inc    edx
  422898:	push   ebp
  422899:	push   0x7f11eebb
  42289e:	sar    ebx,cl
  4228a0:	popa   
  4228a1:	nop
  4228a2:	(bad)  
  4228a4:	xor    al,BYTE PTR [ecx+0xb0849e5]
  4228aa:	into   
  4228ab:	jle    0x42283e
  4228ad:	adc    edi,DWORD PTR [ebp+0x267866da]
  4228b3:	and    bl,BYTE PTR [edi-0x43d2244f]
  4228b9:	daa    
  4228ba:	(bad)  
  4228bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228bc:	inc    edi
  4228bd:	push   ebp
  4228be:	and    BYTE PTR [esi],bh
  4228c0:	jno    0x422869
  4228c2:	xchg   edi,eax
  4228c3:	dec    esp
  4228c4:	shl    BYTE PTR [ecx+0x3672edc5],cl
  4228ca:	mov    dh,BYTE PTR [esi-0x6990b80d]
  4228d0:	and    BYTE PTR [eax-0x59046dc5],bl
  4228d6:	add    eax,0x67b5368
  4228db:	outs   dx,BYTE PTR ds:[esi]
  4228dc:	add    eax,0x7a524b42
  4228e1:	(bad)  
  4228e2:	dec    ebx
  4228e3:	ror    dl,cl
  4228e5:	retf   0x97fb
  4228e8:	add    ah,bh
  4228ea:	clc    
  4228eb:	dec    esp
  4228ec:	shr    BYTE PTR [eax+0x2d9cdbba],1
  4228f2:	leave  
  4228f3:	hlt    
  4228f4:	push   ds
  4228f5:	fcmovne st,st(3)
  4228f7:	bound  edi,QWORD PTR [edx]
  4228f9:	add    BYTE PTR [ecx+ebx*1+0x45cf241c],dl
  422900:	fcmovnu st,st(0)
  422902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422903:	or     al,0xe8
  422905:	test   BYTE PTR [edx],cl
  422907:	or     ebp,DWORD PTR [edx+0x66ddf368]
  42290d:	push   es
  42290e:	std    
  42290f:	mov    cl,BYTE PTR [ecx+0x25]
  422912:	neg    BYTE PTR [esp+eax*2+0x60]
  422916:	xor    bl,al
  422918:	into   
  422919:	pop    ds
  42291a:	lods   al,BYTE PTR ds:[esi]
  42291b:	loop   0x422957
  42291d:	pop    edi
  42291e:	fadd   DWORD PTR [esp+edi*1-0x16f26be0]
  422925:	jecxz  0x4229a3
  422927:	pushf  
  422928:	push   esp
  422929:	mov    edx,0x3b0ae909
  42292e:	xchg   ebp,eax
  42292f:	push   0x68ec5544
  422934:	or     al,0xf4
  422936:	cmp    eax,DWORD PTR [ecx+edi*1-0x44]
  42293a:	sub    DWORD PTR [eax+0x3b],ecx
  42293d:	push   cs
  42293e:	push   cs
  42293f:	push   ss
  422940:	icebp  
  422941:	pop    edi
  422942:	jmp    0xa0215450
  422947:	hlt    
  422948:	enter  0x1d6e,0xf1
  42294c:	loope  0x4229c3
  42294e:	scas   eax,DWORD PTR es:[edi]
  42294f:	mov    al,0xdb
  422951:	jecxz  0x4228ef
  422953:	pop    ebp
  422954:	add    al,0x3e
  422956:	stc    
  422957:	fst    DWORD PTR [esp+edx*1]
  42295a:	xchg   esi,eax
  42295b:	jg     0x422948
  42295d:	addr16 mov edi,0xbb187f4f
  422963:	dec    edi
  422964:	out    0x6,al
  422966:	adc    edx,ebp
  422968:	pop    esi
  422969:	jecxz  0x42298f
  42296b:	push   ebx
  42296c:	mov    eax,DWORD PTR [ebx]
  42296e:	aas    
  42296f:	push   ss
  422970:	stos   DWORD PTR es:[edi],eax
  422971:	jmp    0x4228ff
  422973:	stc    
  422974:	mov    ds:0x95aa8fa,al
  422979:	mov    ebx,0xfee0a92b
  42297e:	in     eax,0x81
  422980:	iret   
  422981:	out    dx,al
  422982:	mov    bl,0xf4
  422984:	loop   0x42297f
  422986:	mov    ecx,0x46f2beca
  42298b:	xchg   ecx,eax
  42298c:	cmp    BYTE PTR [ecx+ebx*2+0x6c6a1e01],0x4
  422994:	pop    ecx
  422995:	push   ecx
  422996:	push   esp
  422997:	mov    bl,0x24
  422999:	sub    ah,BYTE PTR [edi+0x28]
  42299c:	mov    ch,0xe0
  42299e:	aaa    
  42299f:	das    
  4229a0:	add    DWORD PTR [edx-0x5f],edi
  4229a3:	out    0x96,al
  4229a5:	je     0x422a09
  4229a7:	jecxz  0x4229fe
  4229a9:	push   cs
  4229aa:	mov    ds:0x5854429a,eax
  4229af:	mov    bh,0x6c
  4229b1:	inc    edx
  4229b2:	mov    dl,0x19
  4229b4:	call   0xa3b8b543
  4229b9:	dec    ecx
  4229ba:	mov    ebx,0xebbed7fc
  4229bf:	adc    esi,DWORD PTR [ebx]
  4229c1:	sub    al,0xf2
  4229c3:	push   esp
  4229c4:	test   edx,esi
  4229c6:	push   ecx
  4229c7:	add    al,0xa8
  4229ca:	push   ds
  4229cb:	pop    ss
  4229cc:	mov    eax,ds:0x283986bf
  4229d1:	lods   eax,DWORD PTR ds:[esi]
  4229d2:	mov    ebp,0x9abe869
  4229d7:	or     BYTE PTR [esi-0x63f0e3a0],bl
  4229dd:	mov    edi,0x61a596c1
  4229e2:	add    ecx,ebx
  4229e4:	ret    0x2a80
  4229e7:	lahf   
  4229e8:	and    cl,ch
  4229ea:	stc    
  4229eb:	popa   
  4229ec:	or     DWORD PTR [eax+0x4b4a3ed5],0xffffffd3
  4229f3:	std    
  4229f4:	pushf  
  4229f5:	fnstcw WORD PTR [eax]
  4229f7:	into   
  4229f8:	and    eax,0x68696d5e
  4229fd:	jp     0x422a60
  4229ff:	mov    edi,0x67714fea
  422a04:	jl     0x4229ff
  422a06:	call   0x3b2fc81f
  422a0b:	das    
  422a0c:	mov    ah,0x43
  422a0e:	xchg   esp,eax
  422a0f:	dec    ebp
  422a10:	pop    edx
  422a11:	jle    0x422a75
  422a13:	mov    BYTE PTR [ecx+ecx*2-0x11],bl
  422a17:	sbb    eax,DWORD PTR [ecx+0x4b33eb4a]
  422a1d:	add    eax,0x44b762aa
  422a22:	inc    ebx
  422a23:	into   
  422a24:	or     ah,BYTE PTR [ecx+0x7b]
  422a27:	loop   0x422a04
  422a29:	sub    al,dh
  422a2b:	inc    ebx
  422a2c:	leave  
  422a2d:	and    DWORD PTR es:[esi-0x3581f00],ebp
  422a34:	cmp    al,0xf9
  422a36:	cwde   
  422a37:	popa   
  422a38:	aas    
  422a39:	mov    WORD PTR [edi+0x533f452f],?
  422a3f:	out    dx,al
  422a40:	cmp    edx,esp
  422a42:	dec    esp
  422a43:	add    DWORD PTR [eax+0xb],ecx
  422a46:	js     0x422a46
  422a48:	mov    ch,0x1f
  422a4a:	dec    ecx
  422a4b:	push   0xffffff8e
  422a4d:	push   ebp
  422a4e:	aaa    
  422a4f:	clc    
  422a50:	or     eax,0x557feae1
  422a55:	dec    eax
  422a56:	fwait
  422a57:	sub    ebp,DWORD PTR [edx+0x9]
  422a5a:	rol    BYTE PTR [esi],1
  422a5c:	icebp  
  422a5d:	hlt    
  422a5e:	mov    edx,0x6c867baa
  422a63:	in     eax,0x56
  422a65:	mov    ds:0x6747bd95,eax
  422a6a:	or     BYTE PTR [esi+0x7918ee5],0x64
  422a71:	and    ecx,edx
  422a73:	out    0x19,eax
  422a75:	sbb    ebp,DWORD PTR [edi]
  422a77:	jne    0x422acc
  422a79:	push   esi
  422a7a:	dec    eax
  422a7b:	pop    ds
  422a7c:	int3   
  422a7d:	jae    0x422a2f
  422a7f:	pop    eax
  422a80:	aad    0x7d
  422a82:	sub    al,0x49
  422a84:	jbe    0x422ae2
  422a86:	sahf   
  422a87:	jmp    0xc7eeeedf
  422a8c:	push   0xb9898a28
  422a91:	rep ins DWORD PTR es:[edi],dx
  422a93:	mov    ds:0x22f06fbb,al
  422a98:	push   cs
  422a99:	or     dl,ah
  422a9b:	shr    BYTE PTR [esp+ebp*1+0x25],1
  422a9f:	popa   
  422aa0:	lods   al,BYTE PTR ds:[esi]
  422aa1:	ins    DWORD PTR es:[edi],dx
  422aa2:	lea    ebx,[eax-0x578d735c]
  422aa8:	mov    bh,0xc4
  422aaa:	mov    ecx,ebx
  422aac:	in     al,0x6a
  422aae:	sub    bl,BYTE PTR [edx+ecx*2]
  422ab1:	fnstenv [eax+0x7d]
  422ab4:	or     DWORD PTR [edx+ecx*8],edi
  422ab7:	(bad)  
  422ab8:	mov    dl,0x6
  422aba:	aaa    
  422abb:	outs   dx,DWORD PTR ds:[esi]
  422abc:	push   ebp
  422abd:	mov    bl,0x3d
  422abf:	shl    DWORD PTR [esi+0x20],0xa6
  422ac3:	dec    eax
  422ac4:	jl     0x422ad3
  422ac6:	(bad)  
  422ac7:	jmp    0x422a9a
  422ac9:	and    eax,0x9e71fc29
  422ace:	jnp    0x422ad0
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx+0x622f09c8],bh
  422ae2:	stos   DWORD PTR es:[edi],eax
  422ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae4:	add    DWORD PTR [eax],eax
  422ae6:	cmc    
  422ae7:	add    al,0x0
  422ae9:	add    BYTE PTR [ecx-0x6b],al
  422aec:	xchg   ebp,eax
  422aed:	push   0x1f
  422aef:	ror    BYTE PTR [ebp+0x7f],1
  422af2:	call   0x248a:0x3939fe4d
  422af9:	mov    ecx,0xff5b022a
  422afe:	inc    esp
  422aff:	call   DWORD PTR [esi]
  422b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b02:	sbb    DWORD PTR [ebx-0x4f8c712c],ebp
  422b08:	data16 jo 0x422b5d
  422b0b:	mov    ebx,0x26fa560f
  422b10:	test   al,0xcb
  422b12:	leave  
  422b13:	push   esi
  422b14:	jmp    0x422b05
  422b16:	icebp  
  422b17:	push   cs
  422b18:	jbe    0x422b07
  422b1a:	jb     0x422b7e
  422b1c:	xor    BYTE PTR [ecx+0x32],ch
  422b1f:	jns    0x422af3
  422b21:	jg     0x422afc
  422b23:	sahf   
  422b24:	xchg   ecx,eax
  422b25:	or     al,0xe1
  422b27:	jle    0x422ab7
  422b29:	(bad)  
  422b2b:	ret    
  422b2c:	and    esp,DWORD PTR [edi-0x228afa57]
  422b32:	lods   al,BYTE PTR ds:[esi]
  422b33:	jp     0x422b81
  422b35:	(bad)  
  422b36:	loop   0x422bb7
  422b38:	stos   BYTE PTR es:[edi],al
  422b39:	fcomp  DWORD PTR [eax]
  422b3b:	stc    
  422b3c:	push   eax
  422b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b3e:	push   es
  422b3f:	push   esp
  422b40:	imul   ebx,DWORD PTR [ebx-0x64],0x76
  422b44:	inc    edi
  422b45:	mov    ah,0xe7
  422b47:	mov    al,0xe3
  422b49:	outs   dx,DWORD PTR ds:[esi]
  422b4a:	rcl    ecx,cl
  422b4c:	in     al,dx
  422b4d:	cmp    ch,BYTE PTR [edi]
  422b4f:	fdiv   QWORD PTR [eax]
  422b51:	in     eax,dx
  422b52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b53:	mov    bl,0x59
  422b55:	xchg   BYTE PTR [ebx+0xbed1a2],ch
  422b5b:	aas    
  422b5c:	js     0x422b0b
  422b5e:	(bad)  
  422b5f:	push   edi
  422b60:	popf   
  422b61:	jle    0x422bce
  422b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b64:	call   0xbc52:0x99fed172
  422b6b:	loop   0x422b16
  422b6d:	mov    al,0x75
  422b6f:	scas   eax,DWORD PTR es:[edi]
  422b70:	ja     0x422b04
  422b72:	mov    cl,0x34
  422b74:	in     eax,0x6e
  422b76:	cmp    ah,bl
  422b78:	xor    al,0xff
  422b7a:	add    ch,BYTE PTR [edx-0x58d24a1c]
  422b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b81:	daa    
  422b82:	xor    eax,DWORD PTR [eax-0xbd2d3a5]
  422b88:	push   ebx
  422b89:	pop    ebp
  422b8a:	push   0xc9cc2a3
  422b8f:	or     ebp,DWORD PTR [ecx+0x74]
  422b92:	dec    esi
  422b93:	iret   
  422b94:	mov    WORD PTR [ecx-0x36673bdc],?
  422b9a:	mov    eax,ds:0x8c9377fa
  422b9f:	pop    es
  422ba0:	outs   dx,DWORD PTR ds:[esi]
  422ba1:	push   edi
  422ba2:	lods   al,BYTE PTR ds:[esi]
  422ba3:	pop    esp
  422ba4:	std    
  422ba5:	jnp    0x422b44
  422ba7:	inc    ebx
  422ba8:	(bad)  
  422ba9:	xchg   ecx,eax
  422baa:	jae    0x422b89
  422bac:	inc    edx
  422bad:	dec    eax
  422bae:	and    DWORD PTR [ebx+0x32],eax
  422bb1:	lahf   
  422bb2:	and    ebx,0xcd600dbb
  422bb8:	cmp    BYTE PTR [edi],bh
  422bba:	push   cs
  422bbb:	mov    cl,0x47
  422bbd:	daa    
  422bbe:	rol    DWORD PTR [edi],0xb8
  422bc1:	stos   DWORD PTR es:[edi],eax
  422bc2:	pop    edi
  422bc3:	jnp    0x422b9f
  422bc5:	sbb    al,0xfd
  422bc7:	shr    BYTE PTR [edi+0x54],cl
  422bca:	fnstsw WORD PTR [esi-0x1cbfe223]
  422bd0:	or     bl,BYTE PTR [esi]
  422bd2:	or     al,0xdd
  422bd4:	mov    ch,BYTE PTR [ecx+edi*4]
  422bd7:	push   ds
  422bd8:	dec    edi
  422bd9:	(bad)  
  422bda:	push   ss
  422bdb:	je     0x422c3a
  422bdd:	fsubr  QWORD PTR [edx-0x64]
  422be0:	mov    ds:0x9e48e631,eax
  422be5:	repz cmc 
  422be7:	sub    cl,BYTE PTR [eax+eiz*4-0x287dc494]
  422bee:	adc    dl,BYTE PTR [edx-0x79]
  422bf1:	push   ecx
  422bf2:	xchg   edi,eax
  422bf3:	inc    ebx
  422bf4:	(bad)  
  422bf5:	fstp   TBYTE PTR [ebx-0x74]
  422bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bf9:	mov    bh,bl
  422bfb:	pop    eax
  422bfc:	mov    DWORD PTR [ecx+0x7426ac88],esp
  422c02:	jge    0x422c67
  422c04:	scas   eax,DWORD PTR es:[edi]
  422c05:	cmp    al,0x77
  422c07:	cmc    
  422c08:	sub    bl,BYTE PTR [edi]
  422c0a:	ins    DWORD PTR es:[edi],dx
  422c0b:	cmp    DWORD PTR [ecx-0x36],ecx
  422c0e:	std    
  422c0f:	dec    ebp
  422c10:	scas   al,BYTE PTR es:[edi]
  422c11:	push   edi
  422c12:	xor    esi,0xffffff9f
  422c15:	mov    ebp,0x21c3d7a3
  422c1a:	jg     0x422be3
  422c1c:	sbb    eax,0x598da18
  422c21:	dec    ebp
  422c22:	jmp    0x7083:0x28b01fe2
  422c29:	sub    BYTE PTR [ecx-0x59],dl
  422c2c:	aad    0xbe
  422c2e:	jb     0x422c02
  422c30:	out    dx,eax
  422c31:	fldenv [eax+0x75e66530]
  422c37:	adc    edx,eax
  422c39:	dec    edx
  422c3a:	fnstsw WORD PTR ds:0x75907474
  422c40:	mov    dl,0x23
  422c42:	(bad)  
  422c43:	push   cs
  422c44:	xchg   esp,eax
  422c45:	imul   ebx,DWORD PTR [edx-0x23],0x595192c8
  422c4c:	xor    eax,0x82842f0e
  422c51:	sbb    BYTE PTR [esp+esi*8-0x405c2056],ch
  422c58:	jecxz  0x422be5
  422c5a:	ss add edi,eax
  422c5d:	push   0x6a
  422c5f:	lods   eax,DWORD PTR ds:[esi]
  422c60:	aam    0xd9
  422c62:	mov    DWORD PTR [esi],edi
  422c64:	inc    edi
  422c65:	dec    eax
  422c66:	in     al,0x4f
  422c68:	sub    BYTE PTR [ecx],ah
  422c6a:	popf   
  422c6b:	sar    ebp,cl
  422c6d:	sub    dh,BYTE PTR [eax-0x6d]
  422c70:	fcomp  DWORD PTR [eax+edx*1]
  422c73:	jmp    0x422cb3
  422c75:	dec    edi
  422c76:	mov    bh,0xf4
  422c78:	sub    bh,BYTE PTR [eax+edi*2-0x4]
  422c7c:	frstor [edi]
  422c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c7f:	shl    DWORD PTR [ebx],1
  422c81:	add    eax,0x1404c0bb
  422c86:	cmp    bl,dh
  422c88:	jg     0x422c87
  422c8a:	test   eax,0xc965ebf4
  422c8f:	outs   dx,BYTE PTR ds:[esi]
  422c90:	lock addr16 inc esi
  422c93:	(bad)  
  422c94:	enter  0x6c4a,0x1d
  422c98:	jb     0x422c39
  422c9a:	or     DWORD PTR [di-0x3c],edi
  422c9e:	je     0x422cbd
  422ca0:	call   0x4c4b:0x2e2be37d
  422ca7:	test   ah,ah
  422ca9:	mov    cs,ebp
  422cab:	repnz cld 
  422cad:	jmp    0x6edf:0x2de017d5
  422cb4:	test   DWORD PTR [ebp-0x6c],0x31c7696e
  422cbb:	(bad)  
  422cbc:	cmp    ebp,ebx
  422cbe:	push   ebx
  422cbf:	dec    eax
  422cc0:	push   0x5a
  422cc2:	or     dh,BYTE PTR [ebx+0x6b17309d]
  422cc8:	sub    eax,0x28935585
  422ccd:	inc    edi
  422cce:	mov    eax,0x32ddfc2c
  422cd3:	mov    al,0x28
  422cd5:	repz cmp DWORD PTR [ebp-0x77daf29],edi
  422cdc:	mov    cl,0xfe
  422cde:	sbb    eax,0xc24b7f54
  422ce3:	popa   
  422ce4:	mov    ds:0x8efbf372,al
  422ce9:	mov    ?,WORD PTR [ebx+0x59635a8c]
  422cef:	mov    al,ds:0xd7f4612
  422cf4:	loop   0x422d0e
  422cf6:	and    BYTE PTR [ecx],ch
  422cf8:	xor    DWORD PTR [ebp+0x2ba24774],ebp
  422cfe:	xchg   esi,eax
  422cff:	mov    ds:0x7635ee66,al
  422d04:	pusha  
  422d05:	xor    ah,ch
  422d07:	mov    fs,WORD PTR [eax+0x586a52f]
  422d0d:	inc    ecx
  422d0e:	and    eax,0x19af2e3f
  422d13:	add    bh,0x78
  422d16:	cmp    ebp,ecx
  422d18:	popa   
  422d19:	and    eax,0x5a1314d9
  422d1e:	pusha  
  422d1f:	jp     0x422ca7
  422d21:	(bad)  
  422d22:	fist   DWORD PTR [ecx+0x46]
  422d25:	stos   BYTE PTR es:[edi],al
  422d26:	add    ebp,ebp
  422d28:	xchg   esp,eax
  422d29:	and    ebx,DWORD PTR [eax+0x2d]
  422d2c:	test   ah,ch
  422d2e:	call   0xd4af:0x1d50962
  422d35:	jb     0x422d6d
  422d37:	fld    DWORD PTR [ebx-0x4a72eb1a]
  422d3d:	pop    ebp
  422d3e:	test   ecx,edi
  422d40:	jmp    0x422d43
  422d42:	nop
  422d43:	(bad)  
  422d44:	fdivr  DWORD PTR [edx+0x0]
  422d47:	push   ebp
  422d48:	add    al,0x84
  422d4a:	mov    ah,0xf4
  422d4c:	and    BYTE PTR [ecx+0x62d957c3],cl
  422d52:	mov    al,BYTE PTR [ebp+0x5ae44753]
  422d58:	scas   eax,DWORD PTR es:[edi]
  422d59:	xor    eax,0x9d0bca42
  422d5e:	dec    ebx
  422d5f:	pop    eax
  422d60:	pop    esp
  422d61:	lods   eax,DWORD PTR ds:[esi]
  422d62:	pop    edx
  422d63:	ret    0x638
  422d66:	pusha  
  422d67:	je     0x422d6e
  422d69:	jae    0x422da5
  422d6b:	ja     0x422dea
  422d6d:	sub    BYTE PTR [ebx+ebx*8],ah
  422d70:	sbb    al,0xa4
  422d72:	add    ebp,0xffffff8c
  422d75:	jecxz  0x422d3f
  422d77:	test   al,0x54
  422d79:	loopne 0x422d84
  422d7b:	js     0x422d39
  422d7d:	sub    ebp,DWORD PTR [ecx-0x3e]
  422d80:	adc    DWORD PTR [esi+0x74],ebp
  422d83:	inc    esp
  422d84:	loope  0x422da9
  422d86:	jecxz  0x422d0e
  422d88:	cs scas al,BYTE PTR es:[edi]
  422d8a:	push   0x4
  422d8c:	sbb    eax,DWORD PTR [esi]
  422d8e:	push   ds
  422d8f:	fnstcw WORD PTR [eax+0x6a]
  422d92:	in     al,0xc0
  422d94:	mov    esi,0xa1eb549c
  422d99:	mov    bh,0x53
  422d9b:	mov    ds:0x804c74bd,eax
  422da0:	xchg   edi,eax
  422da1:	pop    ecx
  422da2:	icebp  
  422da3:	jg     0x422d4f
  422da5:	and    al,0x6e
  422da7:	push   edi
  422da8:	dec    esp
  422da9:	inc    esp
  422daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dab:	push   es
  422dac:	jp     0x422d94
  422dae:	cmp    BYTE PTR [ebx-0x27],cl
  422db1:	inc    ebp
  422db2:	cmp    eax,0xe3077e5b
  422db7:	dec    eax
  422db8:	pop    edi
  422db9:	push   ecx
  422dba:	sub    BYTE PTR [ebx+0x6e],0x27
  422dbe:	mov    eax,ds:0xcaf2244
  422dc3:	lods   eax,DWORD PTR ds:[esi]
  422dc4:	cli    
  422dc5:	jns    0x422da9
  422dc7:	cwde   
  422dc8:	mov    esp,0xc1a53b
  422dcd:	push   ecx
  422dce:	(bad)  
  422dcf:	cmc    
  422dd0:	jecxz  0x422d75
  422dd2:	sbb    DWORD PTR [ecx+esi*2],ebp
  422dd5:	push   0x2a
  422dd7:	repnz adc BYTE PTR [edx+ecx*2-0x53],dh
  422ddc:	pop    eax
  422ddd:	sar    DWORD PTR [edx-0x9],1
  422de0:	sar    BYTE PTR [ebp+0x18],cl
  422de3:	fistp  WORD PTR [esi+0x5d]
  422de6:	cmc    
  422de7:	int    0xe1
  422de9:	push   edi
  422dea:	jl     0x422e00
  422dec:	xchg   esi,eax
  422ded:	arpl   WORD PTR [ecx-0x19],di
  422df0:	nop
  422df1:	add    BYTE PTR [ebp-0x70],dl
  422df4:	inc    eax
  422df5:	in     al,dx
  422df6:	repnz cs push ebx
  422df9:	push   es
  422dfa:	xor    DWORD PTR [edi+edx*8-0x5d],0x7bd555f1
  422e02:	popf   
  422e03:	cmp    DWORD PTR [esi+0x3b8eafe4],ecx
  422e09:	fwait
  422e0a:	shl    dl,cl
  422e0c:	cmp    DWORD PTR [eax+ebp*2],0x3d
  422e10:	jecxz  0x422e8d
  422e12:	xchg   edi,eax
  422e13:	cmp    dl,BYTE PTR [eax+eiz*8+0x61]
  422e17:	mov    bl,0xd2
  422e19:	test   eax,0x2a19bcc4
  422e1e:	cmp    BYTE PTR [ebp+0x3f0d5d68],al
  422e24:	xor    esi,DWORD PTR [eax+0x2881d963]
  422e2a:	push   ds
  422e2b:	fist   DWORD PTR [esi-0x12]
  422e2e:	adc    edi,DWORD PTR [esi+0x0]
  422e31:	popf   
  422e32:	dec    esi
  422e33:	fs call 0xebb0:0x300f617b
  422e3b:	scas   al,BYTE PTR es:[edi]
  422e3c:	cli    
  422e3d:	jae    0x422e60
  422e3f:	inc    esp
  422e40:	imul   esi,DWORD PTR [esi+edx*8+0x18df569a],0x19f476f3
  422e4b:	xchg   esi,eax
  422e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e4d:	sbb    ebp,edi
  422e4f:	push   cs
  422e50:	frstor [esi-0x15d006d8]
  422e56:	jge    0x422e1f
  422e58:	pop    edi
  422e59:	je     0x422e7a
  422e5b:	adc    al,0xdc
  422e5d:	test   DWORD PTR [ebx+esi*4+0x7777fb90],ebx
  422e64:	mov    ah,0x59
  422e66:	pop    eax
  422e67:	leave  
  422e68:	mov    esp,0x2ffa517a
  422e6d:	mov    bl,0x45
  422e6f:	das    
  422e70:	mov    al,ds:0x6e73df9c
  422e75:	stos   BYTE PTR es:[edi],al
  422e76:	xchg   ebx,eax
  422e77:	inc    edx
  422e78:	sub    edx,ecx
  422e7a:	sub    eax,0x901b878e
  422e7f:	mov    esi,0xc66d9e23
  422e84:	(bad)  
  422e85:	dec    esi
  422e86:	daa    
  422e87:	clc    
  422e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e89:	aam    0xfe
  422e8b:	jo     0x422e6d
  422e8d:	imul   ebp,DWORD PTR [ebx+0x76],0x2bb87972
  422e94:	es add eax,0x1ad9f5dd
  422e9a:	int3   
  422e9b:	icebp  
  422e9c:	loopne 0x422f0e
  422e9e:	mov    dl,0x49
  422ea0:	xchg   dh,ch
  422ea2:	and    eax,DWORD PTR [edx+0x2b34ed53]
  422ea8:	popf   
  422ea9:	nop
  422eaa:	js     0x422ea5
  422eac:	in     eax,0x70
  422eae:	sbb    al,0x16
  422eb0:	imul   DWORD PTR [ecx-0x3d]
  422eb3:	mov    es,WORD PTR [edx-0x627a43e8]
  422eb9:	dec    edi
  422eba:	pop    edi
  422ebb:	sbb    dl,BYTE PTR [ecx]
  422ebd:	sar    DWORD PTR [ebp-0x74],cl
  422ec0:	rcl    BYTE PTR [eax],0xf4
  422ec3:	jae    0x422f10
  422ec5:	int    0x87
  422ec7:	inc    edx
  422ec8:	pop    ds
  422ec9:	push   ecx
  422eca:	cmp    ecx,esi
  422ecc:	jnp    0x422ef8
  422ece:	mov    ds:0x97daab91,eax
  422ed3:	mov    dl,BYTE PTR [ebx-0x25]
  422ed6:	add    bl,al
  422ed8:	ds pop ebp
  422eda:	inc    esp
  422edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422edc:	shr    BYTE PTR [edx-0x31],0xd0
  422ee0:	repnz cmp al,0x6c
  422ee3:	ror    ecx,cl
  422ee5:	sbb    ebp,DWORD PTR [ebp-0x35c5cd35]
  422eeb:	fdivr  st(1),st
  422eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eee:	pop    ebp
  422eef:	inc    ebx
  422ef0:	inc    esi
  422ef1:	adc    bl,bh
  422ef3:	les    esp,FWORD PTR [eax-0x5f]
  422ef6:	mov    ecx,0xd15fa9f8
  422efb:	inc    edx
  422efc:	(bad)
  422eff:	cmc    
  422f00:	(bad)  
  422f01:	sbb    eax,0x2b1fa707
  422f06:	sbb    al,0x48
  422f08:	xchg   ebx,eax
  422f09:	mov    ebp,0xe37777e4
  422f0e:	mov    edx,0x490d3d78
  422f13:	jno    0x422efb
  422f15:	inc    esi
  422f16:	(bad)  
  422f17:	cs inc ebx
  422f19:	div    DWORD PTR [edx+0x5c]
  422f1c:	div    DWORD PTR cs:[ebx+esi*1-0x3e]
  422f21:	xor    DWORD PTR ds:0xefce3dbd,ebx
  422f27:	xor    edi,DWORD PTR [edx]
  422f29:	sbb    ecx,DWORD PTR [edx+eiz*1]
  422f2c:	adc    DWORD PTR [ebx],edi
  422f2e:	mov    esi,0xc9f2b43e
  422f33:	js     0x422ee3
  422f35:	retf   
  422f36:	outs   dx,BYTE PTR ds:[esi]
  422f37:	sub    al,dl
  422f39:	xchg   ecx,eax
  422f3a:	fstp   DWORD PTR [ebx+eiz*4-0x29]
  422f3e:	addr16 mov ecx,0x17b34b11
  422f44:	ins    BYTE PTR es:[edi],dx
  422f45:	mov    ch,0x87
  422f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f48:	outs   dx,DWORD PTR ds:[esi]
  422f49:	mov    ebp,0xf803fedf
  422f4e:	arpl   WORD PTR [edx-0x74d23c93],dx
  422f54:	pop    ds
  422f55:	pop    esi
  422f56:	or     al,0xd0
  422f58:	stos   DWORD PTR es:[edi],eax
  422f59:	mov    bl,0x1a
  422f5b:	pop    ecx
  422f5c:	jmp    0x9cb9d8c7
  422f61:	loope  0x422f3e
  422f63:	les    eax,FWORD PTR [edx-0x7a8eb2d0]
  422f69:	pushf  
  422f6a:	cmp    DWORD PTR [esi-0x79],edi
  422f6d:	and    ebp,0x7cbf8d72
  422f73:	test   al,0x63
  422f75:	in     al,dx
  422f76:	outs   dx,BYTE PTR ds:[esi]
  422f77:	sbb    al,0xc4
  422f79:	mov    esp,0x4c6fb096
  422f7f:	jbe    0x422f62
  422f81:	add    DWORD PTR [esi+0x3c],eax
  422f84:	xchg   edi,eax
  422f85:	xchg   DWORD PTR [eax+edi*4-0x27],edi
  422f89:	scas   eax,DWORD PTR es:[edi]
  422f8a:	pusha  
  422f8b:	push   eax
  422f8c:	adc    eax,0x5c6b7cc0
  422f91:	xor    BYTE PTR [esi+0x7b],0x10
  422f95:	mov    ebx,0x5742f45c
  422f9a:	mov    ?,ebx
  422f9c:	idiv   DWORD PTR [edx+0x77]
  422f9f:	fstp   TBYTE PTR [edi+ebx*2]
  422fa2:	dec    ebp
  422fa3:	sub    edx,edi
  422fa5:	push   edx
  422fa6:	imul   edx,DWORD PTR [edi-0x14],0x6c3c55fb
  422fad:	pop    esp
  422fae:	add    eax,0x3cd0501c
  422fb3:	push   ecx
  422fb4:	or     eax,0xc3c5e8cc
  422fb9:	scas   eax,DWORD PTR es:[edi]
  422fba:	pop    esi
  422fbb:	cmc    
  422fbc:	jne    0x422fa2
  422fbe:	sbb    dl,ah
  422fc0:	xor    eax,0xfbb38987
  422fc5:	repz and BYTE PTR [edx+0x3e],ch
  422fc9:	pop    esi
  422fca:	adc    BYTE PTR [edx+0x44],dh
  422fcd:	jno    0x422f71
  422fcf:	in     al,0xc3
  422fd1:	push   esi
  422fd2:	mov    DWORD PTR [edx+0x6e70b958],esi
  422fd8:	mov    bl,0x72
  422fda:	jo     0x422ff1
  422fdc:	inc    edx
  422fdd:	std    
  422fde:	fadd   DWORD PTR [eax]
  422fe0:	add    BYTE PTR [eax],al
  422fe2:	cvtdq2ps xmm0,XMMWORD PTR [esi+edx*1+0x5b9fdfd4]
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    edx,DWORD PTR [esi+edx*4]
  422ff0:	mov    esp,0x1a9a031
  422ff5:	add    ch,dh
  422ff7:	add    al,0x0
  422ff9:	add    al,al
  422ffb:	rcl    DWORD PTR [edx+0xd],0xc
  422fff:	mov    ds:0x694c593b,al
  423004:	sbb    al,0xb5
  423006:	inc    edi
  423007:	cmp    eax,0x6f244d4e
  42300c:	sub    bl,BYTE PTR [edi-0xc110716]
  423012:	push   ebp
  423013:	sbb    dh,bl
  423015:	cmp    al,0x62
  423017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423018:	mov    ds:0x2243c226,eax
  42301d:	ins    DWORD PTR es:[edi],dx
  42301e:	mov    edi,0xa9d3a015
  423023:	int3   
  423024:	(bad)  
  423025:	dec    DWORD PTR [edi]
  423027:	push   esp
  423028:	std    
  423029:	in     al,0x30
  42302b:	or     dh,0xab
  42302e:	cmp    eax,0xb3658cdf
  423033:	pop    ecx
  423034:	xor    edx,DWORD PTR [esp+eiz*8-0x5a476211]
  42303b:	mov    ds:0xddd31fd4,eax
  423040:	mov    edi,0x3a0bdbc6
  423045:	arpl   WORD PTR [ebx-0x14],si
  423048:	xchg   esi,eax
  423049:	outs   dx,DWORD PTR ds:[esi]
  42304a:	xor    bl,bh
  42304c:	mov    ch,0xa5
  42304e:	push   edx
  42304f:	daa    
  423050:	and    BYTE PTR [esp+eax*1+0x2e],dl
  423054:	mov    ebp,0x1f5ba7ae
  423059:	mov    eax,ds:0x4dbeea86
  42305e:	sub    al,0x35
  423060:	aaa    
  423061:	vhaddpd xmm2,xmm1,XMMWORD PTR [ebx-0x546c7f0d]
  423069:	mov    WORD PTR [ebp-0x61818000],?
  42306f:	sub    DWORD PTR [edx+eax*2+0x29],ebx
  423073:	and    ebx,DWORD PTR [edi+esi*8-0x46126c34]
  42307a:	enter  0xbae5,0xd8
  42307e:	cld    
  42307f:	pop    ebp
  423080:	add    eax,0x9f15283
  423085:	rcl    DWORD PTR [edx+0x56],0xed
  423089:	popf   
  42308a:	clc    
  42308b:	ja     0x4230c2
  42308d:	xchg   edi,eax
  42308e:	cmp    edx,DWORD PTR [ebp+eiz*2-0x5a]
  423092:	in     al,0x96
  423094:	mov    eax,ds:0x2581ffac
  423099:	mov    edi,es
  42309b:	sub    BYTE PTR [edx+0x2f],0x5d
  42309f:	pop    edi
  4230a0:	int3   
  4230a1:	push   esp
  4230a2:	(bad)
  4230a5:	dec    ecx
  4230a6:	xor    esp,DWORD PTR [edi+eax*2]
  4230a9:	pop    esi
  4230aa:	js     0x423064
  4230ac:	inc    esp
  4230ad:	retf   
  4230ae:	push   ecx
  4230af:	mov    DWORD PTR [ecx+0x2e51040d],esi
  4230b5:	xchg   ebp,eax
  4230b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230b7:	mov    bl,0xa7
  4230b9:	or     cl,BYTE PTR [ebp+0xa28d692]
  4230bf:	cs je  0x42304c
  4230c2:	aam    0xe2
  4230c4:	push   0xfffffff3
  4230c6:	cmp    ebp,DWORD PTR [ebx+0x75]
  4230c9:	into   
  4230ca:	xchg   edi,eax
  4230cb:	lods   eax,DWORD PTR ds:[esi]
  4230cc:	mov    esi,0x5f74083a
  4230d1:	test   BYTE PTR [ebp+0x1ed5a843],0xf8
  4230d8:	in     al,0xb1
  4230da:	lods   eax,DWORD PTR ds:[esi]
  4230db:	mov    eax,ds
  4230dd:	pcmpeqw mm0,mm5
  4230e0:	push   ss
  4230e1:	lock fisttp WORD PTR [ebx+0x792ed54d]
  4230e8:	adc    DWORD PTR [esi-0x797f535c],0x8728dca0
  4230f2:	shl    esi,1
  4230f4:	add    DWORD PTR [edi-0x514c16a],eax
  4230fa:	jb     0x42316c
  4230fc:	popf   
  4230fd:	std    
  4230fe:	nop
  4230ff:	dec    esp
  423100:	or     eax,0x3b8593cc
  423105:	fldenv [esi+ebp*2]
  423108:	jecxz  0x423102
  42310a:	inc    eax
  42310b:	push   edi
  42310c:	neg    BYTE PTR [eax]
  42310e:	lahf   
  42310f:	jo     0x423165
  423111:	mov    bh,0xef
  423113:	inc    ecx
  423114:	fcmovnu st,st(3)
  423116:	pop    ebp
  423117:	cmp    bh,BYTE PTR [ecx]
  423119:	inc    ecx
  42311a:	lods   eax,DWORD PTR ds:[esi]
  42311b:	jns    0x423121
  42311d:	retf   0x778b
  423120:	jle    0x4230d2
  423122:	in     al,0x84
  423124:	stos   BYTE PTR es:[edi],al
  423125:	mov    cl,0xc0
  423127:	jl     0x423167
  423129:	popa   
  42312a:	xchg   edi,eax
  42312b:	(bad)  
  42312c:	les    esp,FWORD PTR [edx-0x22]
  42312f:	sti    
  423130:	pushf  
  423131:	inc    edx
  423132:	add    eax,0xcdde2f37
  423137:	inc    eax
  423138:	pop    es
  423139:	scas   al,BYTE PTR es:[edi]
  42313a:	fcmovne st,st(5)
  42313c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42313d:	sti    
  42313e:	sahf   
  42313f:	mov    al,ds:0x40851381
  423144:	(bad)  [eax]
  423146:	loop   0x423133
  423148:	xchg   bl,ah
  42314a:	xor    dh,dl
  42314c:	daa    
  42314d:	(bad)  
  42314e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42314f:	sahf   
  423150:	ins    BYTE PTR es:[edi],dx
  423151:	pop    es
  423152:	iretw  
  423154:	repz push ss
  423156:	ror    DWORD PTR [ecx],0x24
  423159:	imul   ebx,DWORD PTR [edx-0x61],0x9bd143f3
  423160:	cmp    eax,0x936aec26
  423165:	stc    
  423166:	mov    ah,BYTE PTR [esi]
  423168:	out    dx,al
  423169:	dec    esp
  42316a:	sub    ecx,DWORD PTR [eax]
  42316c:	xor    DWORD PTR [ebx+0x12c188d4],esp
  423172:	aad    0x93
  423174:	imul   edi,eax,0xfffffff7
  423177:	stos   BYTE PTR es:[edi],al
  423178:	mov    bh,0x55
  42317a:	stos   DWORD PTR es:[edi],eax
  42317b:	pusha  
  42317c:	mov    ch,0x5a
  42317e:	jg     0x423159
  423180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423181:	jo     0x4231db
  423183:	fild   QWORD PTR [ebp-0x42]
  423186:	ret    
  423187:	lods   al,BYTE PTR ds:[esi]
  423188:	adc    dl,al
  42318a:	into   
  42318b:	xchg   ecx,eax
  42318c:	inc    ebx
  42318d:	retf   
  42318e:	pop    edi
  42318f:	push   cs
  423190:	repz pop ss
  423192:	int3   
  423193:	or     al,0xa8
  423195:	and    bh,BYTE PTR [ecx]
  423197:	mov    bh,0x5f
  423199:	inc    esp
  42319a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42319b:	in     eax,dx
  42319c:	scas   eax,DWORD PTR es:[edi]
  42319d:	cs (bad) 
  42319f:	cmp    DWORD PTR [esi+0x10],edi
  4231a2:	cld    
  4231a3:	xor    al,0xbc
  4231a5:	stc    
  4231a6:	add    eax,edi
  4231a8:	pop    esp
  4231a9:	pop    eax
  4231aa:	icebp  
  4231ab:	sahf   
  4231ac:	into   
  4231ad:	iret   
  4231ae:	and    ah,ch
  4231b0:	push   edx
  4231b1:	mov    ecx,DWORD PTR [esi]
  4231b3:	mov    ds:0x651234b6,eax
  4231b8:	lods   al,BYTE PTR ds:[esi]
  4231b9:	jl     0x4231c8
  4231bb:	pop    ds
  4231bc:	iret   
  4231bd:	jb     0x4231d6
  4231bf:	xchg   ecx,eax
  4231c0:	xchg   esp,eax
  4231c1:	pop    ecx
  4231c2:	daa    
  4231c3:	push   0xffffffa2
  4231c5:	(bad)  
  4231c6:	cmp    al,0x6b
  4231c8:	lahf   
  4231c9:	ret    
  4231ca:	xchg   edx,eax
  4231cb:	aad    0x46
  4231cd:	jbe    0x42324d
  4231cf:	pushf  
  4231d0:	sub    eax,0x87624975
  4231d5:	les    edi,FWORD PTR [ecx-0x13d0124d]
  4231db:	test   DWORD PTR [eax-0x4568a523],ebx
  4231e1:	push   ebx
  4231e2:	inc    ebp
  4231e3:	push   edi
  4231e4:	clc    
  4231e5:	(bad)  
  4231e6:	mov    cl,0x3b
  4231e8:	js     0x42318b
  4231ea:	jne    0x423219
  4231ec:	mov    ecx,0x4bff6785
  4231f1:	xor    BYTE PTR ds:0x4527916e,0x40
  4231f8:	stos   DWORD PTR es:[edi],eax
  4231f9:	ret    0x16ee
  4231fc:	push   edi
  4231fd:	adc    ebx,ebx
  4231ff:	push   esi
  423200:	dec    ebx
  423201:	jmp    0x9a81219
  423206:	pusha  
  423207:	fs jnp 0x423241
  42320a:	mov    eax,ds:0x937ee35
  42320f:	inc    ebx
  423210:	lods   eax,DWORD PTR ds:[esi]
  423211:	shr    DWORD PTR ds:0x12ba1d5f,cl
  423217:	xor    edx,DWORD PTR [edi+0x2a]
  42321a:	lds    edx,FWORD PTR [edx-0x3415cd2b]
  423220:	fisubr WORD PTR [ebp+0x4bfcfd1e]
  423226:	das    
  423227:	adc    ebx,DWORD PTR [ebx]
  423229:	mov    ds:0x300db345,eax
  42322e:	test   al,0x2c
  423230:	inc    ecx
  423231:	stos   DWORD PTR es:[edi],eax
  423232:	leave  
  423233:	into   
  423234:	fiadd  WORD PTR [ebx]
  423236:	loop   0x423240
  423238:	xor    DWORD PTR [esi],esi
  42323a:	int    0xc8
  42323c:	rcl    eax,cl
  42323e:	or     BYTE PTR ss:[esi],dh
  423241:	call   0xbb80:0xf41d18f7
  423248:	cwde   
  423249:	pop    ecx
  42324a:	and    al,0x88
  42324c:	xor    al,0x21
  42324e:	call   0xc2c33c84
  423253:	mov    bl,0x9
  423255:	xchg   edi,eax
  423256:	bound  ebp,QWORD PTR [ecx]
  423258:	lds    esi,FWORD PTR [ebx-0x3f]
  42325b:	xchg   BYTE PTR [eax-0x1d5700c],al
  423261:	cmp    al,0xb3
  423263:	test   eax,0xc802b729
  423268:	push   edi
  423269:	test   DWORD PTR [ebp+0x422da563],ecx
  42326f:	jae    0x42329c
  423271:	xchg   ecx,eax
  423272:	(bad)  
  423273:	cli    
  423274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423275:	popf   
  423276:	jno    0x42320c
  423278:	jmp    0xa99e:0x8030ac2b
  42327f:	and    DWORD PTR [edi+ebx*8-0x42],0x23
  423284:	mov    al,ds:0xdba2f5de
  423289:	xchg   bh,al
  42328b:	ins    BYTE PTR es:[edi],dx
  42328c:	test   BYTE PTR [esi-0x55],0x10
  423290:	lea    edi,[esi+ebp*1]
  423293:	clc    
  423294:	push   0xb5b6332c
  423299:	and    bh,BYTE PTR ds:0xf92da997
  42329f:	leave  
  4232a0:	pop    ebx
  4232a1:	push   ds
  4232a2:	jns    0x4232aa
  4232a4:	fmul   QWORD PTR [eax]
  4232a6:	sub    al,0x47
  4232a8:	inc    esp
  4232a9:	push   ebx
  4232aa:	rol    BYTE PTR [ecx+0x5fa2d551],0x3
  4232b1:	scas   al,BYTE PTR es:[edi]
  4232b2:	xchg   esp,eax
  4232b3:	(bad)  
  4232b5:	xchg   ebx,eax
  4232b6:	sbb    bh,BYTE PTR [edi-0x4e]
  4232b9:	sbb    bl,0x19
  4232bc:	push   edi
  4232bd:	push   ebp
  4232be:	fidiv  WORD PTR es:[edi]
  4232c1:	adc    ebp,esp
  4232c3:	and    ebp,DWORD PTR ds:0x53a6165c
  4232c9:	into   
  4232ca:	mov    dh,0xad
  4232cc:	call   0xa83089d0
  4232d1:	add    al,0x99
  4232d3:	mov    eax,ds:0x91b5b9a
  4232d8:	shufps xmm7,XMMWORD PTR [eax+0x6d252805],0x42
  4232e0:	xor    edx,esp
  4232e2:	xor    al,ah
  4232e4:	push   esp
  4232e5:	mov    ebp,DWORD PTR [ecx+0x1c]
  4232e8:	xchg   esp,ebx
  4232ea:	in     al,0x6a
  4232ec:	xor    dh,BYTE PTR [edx+0x602fdfd1]
  4232f2:	mov    edi,0x381a4238
  4232f7:	syscall 
  4232f9:	sub    DWORD PTR [eax+0x76c9dd88],esp
  4232ff:	sahf   
  423300:	int3   
  423301:	in     al,0xb8
  423303:	dec    esp
  423304:	jmp    0x4232b7
  423306:	pop    ds
  423307:	mov    ah,0x72
  423309:	mov    ch,0xb9
  42330b:	xchg   edx,eax
  42330c:	pop    ecx
  42330d:	lock shl DWORD PTR [ecx-0x66],1
  423311:	push   es
  423312:	add    BYTE PTR [edi],dh
  423314:	test   bl,bl
  423316:	jmp    0xd80c57a8
  42331b:	sti    
  42331c:	imul   edx,DWORD PTR [esi+0x1d047f7],0xffffff92
  423323:	arpl   bx,si
  423325:	and    BYTE PTR [edi],0x5a
  423328:	call   0xeb2a8a3f
  42332d:	add    BYTE PTR [edi+0x23],ch
  423330:	push   0xffffffbe
  423332:	mov    dh,0x61
  423334:	lds    ebx,FWORD PTR [ecx+esi*1+0x35a65a99]
  42333b:	pop    es
  42333c:	cwde   
  42333d:	repnz xlat BYTE PTR ds:[ebx]
  42333f:	loope  0x4233a8
  423341:	mov    bl,0x24
  423343:	cmp    DWORD PTR [edi+0x1e],ecx
  423346:	rol    DWORD PTR [ebx],1
  423348:	mov    al,0x2f
  42334a:	test   DWORD PTR [edx+0x6271dc35],esp
  423350:	push   edi
  423351:	aad    0x90
  423353:	and    eax,DWORD PTR [edi+ecx*1-0x65]
  423357:	adc    bh,al
  423359:	arpl   WORD PTR [ebx],bx
  42335b:	push   esp
  42335c:	xchg   ebx,eax
  42335d:	push   esi
  42335e:	mov    bh,0x30
  423360:	das    
  423361:	sub    ah,bl
  423363:	dec    esi
  423364:	shl    BYTE PTR [ecx],cl
  423366:	jnp    0x42337d
  423368:	imul   esp,DWORD PTR [edi+ecx*4],0xffffffec
  42336c:	pop    esp
  42336d:	add    dh,BYTE PTR [edi]
  42336f:	pop    ebp
  423370:	je     0x4232fa
  423372:	and    ch,dh
  423374:	scas   al,BYTE PTR es:[edi]
  423375:	push   ds
  423376:	(bad)  
  423377:	(bad)  
  423378:	sbb    eax,0x2dad1a7b
  42337d:	cmp    edx,DWORD PTR [eax-0x45099d6]
  423383:	clc    
  423384:	out    dx,al
  423385:	push   esp
  423386:	shl    DWORD PTR [ebp-0xe776ca3],1
  42338c:	fsub   QWORD PTR [edx]
  42338e:	sbb    ah,BYTE PTR es:[ecx-0x2ce6098c]
  423395:	loope  0x4233e6
  423397:	in     eax,0x22
  423399:	push   ebx
  42339a:	cs out 0xc5,eax
  42339d:	js     0x42340f
  42339f:	call   0x9c86a7f
  4233a4:	aad    0xcb
  4233a6:	mov    esp,0x2cc493f9
  4233ab:	push   ebx
  4233ac:	fild   DWORD PTR [eax+ebp*4+0x49]
  4233b0:	jp     0x4233f4
  4233b2:	sbb    DWORD PTR [ebp-0x1c43fbee],edx
  4233b8:	shl    esp,1
  4233ba:	out    0x79,eax
  4233bc:	sub    BYTE PTR [ecx+0x5a14856d],bh
  4233c2:	and    DWORD PTR [eax],ebp
  4233c4:	loope  0x4233ba
  4233c6:	xor    cl,BYTE PTR [edx-0x66365da1]
  4233cc:	or     esp,edi
  4233ce:	cmc    
  4233cf:	js     0x42338c
  4233d1:	jo     0x4233e9
  4233d3:	pop    ebp
  4233d4:	inc    edi
  4233d5:	jmp    0x22846b35
  4233da:	nop
  4233db:	ret    0x7ce
  4233de:	pop    esp
  4233df:	(bad)  
  4233e0:	imul   edx,DWORD PTR [esi+0x176dd062],0x4019e741
  4233ea:	repz cwde 
  4233ec:	sub    bh,BYTE PTR [edi]
  4233ee:	jb     0x42339a
  4233f0:	les    eax,FWORD PTR [ebx+esi*8]
  4233f3:	mov    eax,0x2cf9e8d8
  4233f8:	add    DWORD PTR [esi],esp
  4233fa:	adc    DWORD PTR [eax-0x201289c],edi
  423400:	pop    ebx
  423401:	enter  0x8e01,0x43
  423405:	sub    bl,BYTE PTR [esi+0x47]
  423408:	or     BYTE PTR [ecx+0x79],0xa8
  42340c:	and    ebp,DWORD PTR [esi+0x2d]
  42340f:	mov    ebx,fs
  423411:	das    
  423412:	adc    al,0xe0
  423414:	daa    
  423415:	adc    DWORD PTR [eax+0x108ad643],ebx
  42341b:	and    esi,DWORD PTR [esp+esi*2+0x1d9b9957]
  423422:	xchg   edi,eax
  423423:	push   ecx
  423424:	stos   DWORD PTR es:[edi],eax
  423425:	lahf   
  423426:	idiv   DWORD PTR [edi+0x57244e73]
  42342c:	mov    edx,0x5d254a84
  423431:	lea    esp,[esi-0x397dee76]
  423437:	in     al,0xab
  423439:	or     eax,0xb9116e46
  42343e:	pop    es
  42343f:	push   ebx
  423440:	adc    al,0x1f
  423442:	das    
  423443:	stc    
  423444:	das    
  423445:	pusha  
  423446:	pop    ebp
  423447:	das    
  423448:	mov    dh,0xfd
  42344a:	xor    edi,eax
  42344c:	daa    
  42344d:	adc    dl,BYTE PTR [edx+0x66]
  423450:	out    0xe2,al
  423452:	fiadd  WORD PTR ds:0x6c4519d0
  423458:	jo     0x4234d2
  42345a:	ret    
  42345b:	mov    al,0x87
  42345d:	add    ch,BYTE PTR [ebx-0xa]
  423460:	xor    edx,DWORD PTR [ebx]
  423462:	inc    ebp
  423463:	xchg   edi,eax
  423464:	xor    BYTE PTR [ebx],bl
  423466:	xlat   BYTE PTR ds:[ebx]
  423467:	mov    edx,0xd2e26a60
  42346c:	scas   eax,DWORD PTR es:[edi]
  42346d:	jecxz  0x423468
  42346f:	ror    DWORD PTR [ebx],1
  423471:	push   esp
  423472:	cmp    al,0x8
  423474:	cmc    
  423475:	or     ebx,edi
  423477:	cmp    dh,BYTE PTR [edi+0x50]
  42347a:	pop    esp
  42347b:	cli    
  42347c:	jg     0x423408
  42347e:	jnp    0x423444
  423480:	sbb    al,0x21
  423482:	cmp    ebx,DWORD PTR [ebx]
  423484:	jmp    0x1a69:0xd7dc6b57
  42348b:	xchg   edx,eax
  42348c:	push   ecx
  42348d:	dec    edi
  42348e:	push   edi
  42348f:	icebp  
  423490:	xchg   BYTE PTR [ecx],bl
  423492:	sub    eax,0xe1ed28f2
  423497:	pop    ebx
  423498:	inc    edi
  423499:	inc    edi
  42349a:	jns    0x42347a
  42349c:	adc    ecx,esi
  42349e:	push   ecx
  42349f:	mov    esi,0x917df34e
  4234a4:	xor    DWORD PTR [ecx+0x460fb8cb],0x2d
  4234ab:	adc    eax,0xf977134c
  4234b0:	jge    0x4234c6
  4234b2:	das    
  4234b3:	out    0x24,al
  4234b5:	into   
  4234b6:	xchg   ebx,eax
  4234b7:	pop    edi
  4234b8:	mov    cl,0x62
  4234ba:	jp     0x4234a4
  4234bc:	xlat   BYTE PTR ds:[ebx]
  4234bd:	or     bh,BYTE PTR [edi-0x7c717fcb]
  4234c3:	jno    0x4234dc
  4234c5:	fnstsw WORD PTR [ecx]
  4234c7:	mov    ch,0xe7
  4234c9:	lds    esp,FWORD PTR [eax+0x59a858b9]
  4234cf:	(bad)  
  4234d1:	sbb    esp,DWORD PTR [edx]
  4234d3:	inc    DWORD PTR [ecx+0x735e167c]
  4234d9:	jecxz  0x42345c
  4234db:	clc    
  4234dc:	out    0xa4,eax
  4234de:	jl     0x423486
  4234e0:	or     BYTE PTR [ebp-0x7772dcdc],dh
  4234e6:	or     BYTE PTR [eax+0x2d46583a],0x9
  4234ed:	or     ebp,ebp
  4234ef:	add    BYTE PTR [eax],al
  4234f1:	add    BYTE PTR [ecx-0x5d],cl
  4234f4:	push   ebp
  4234f5:	(bad)  
  4234f6:	push   esi
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	dec    eax
  4234ff:	scas   eax,DWORD PTR es:[edi]
  423500:	out    0xe8,eax
  423502:	xchg   ebp,eax
  423503:	scas   al,BYTE PTR es:[edi]
  423504:	add    DWORD PTR [eax],eax
  423506:	cmc    
  423507:	add    al,0x0
  423509:	add    BYTE PTR [ebx+ebx*8],dh
  42350c:	fstp   TBYTE PTR [edx-0x5a13c81c]
  423512:	mov    ds:0xf41c0d78,eax
  423517:	int    0xb9
  423519:	xor    al,0xb4
  42351b:	icebp  
  42351c:	mov    eax,ds:0xf3984015
  423521:	adc    DWORD PTR [ebx],esp
  423523:	xor    al,0xd9
  423525:	add    edi,DWORD PTR [eax+eax*1+0x2b7051ac]
  42352c:	test   DWORD PTR [edx+0x7e],ebp
  42352f:	or     esp,DWORD PTR [esi-0x56]
  423532:	sbb    DWORD PTR [ecx+0x2a],0x7055c704
  423539:	(bad)  
  42353a:	iret   
  42353b:	push   esi
  42353c:	out    0xf7,eax
  42353e:	cmp    BYTE PTR [esi],ah
  423540:	sub    bh,BYTE PTR cs:[esi]
  423543:	retf   
  423544:	icebp  
  423545:	sbb    BYTE PTR [eax+0x1a],al
  423548:	mov    bh,0x2b
  42354a:	cwde   
  42354b:	mov    eax,0x779a694b
  423550:	mov    ds:0x8fecdae7,al
  423555:	popa   
  423556:	sub    ebp,esi
  423558:	sub    al,0xd
  42355a:	loopne 0x423514
  42355c:	adc    DWORD PTR [eax-0x73],edx
  42355f:	add    DWORD PTR [eax+0x36],0xb57bd8ad
  423566:	je     0x4234e9
  423568:	push   0x32
  42356a:	inc    esp
  42356b:	add    al,0xd2
  42356d:	sbb    BYTE PTR [edx+0x410971c9],dh
  423573:	fst    QWORD PTR [ebp+0x6a]
  423576:	aad    0x6b
  423578:	dec    ebx
  423579:	jecxz  0x4235d0
  42357b:	popf   
  42357c:	xchg   ebx,esp
  42357e:	or     WORD PTR [edi-0x3d00b6b9],0x1e4b
  423587:	dec    BYTE PTR [edi-0x43f9ca82]
  42358d:	mov    dh,0x11
  42358f:	leave  
  423590:	aaa    
  423591:	ja     0x423550
  423593:	push   edx
  423594:	and    al,0x32
  423596:	leave  
  423597:	mov    dl,BYTE PTR [esi]
  423599:	shl    BYTE PTR [ecx+0x5c],cl
  42359c:	sbb    edx,ebx
  42359e:	retf   0x62d4
  4235a1:	or     ebx,DWORD PTR [ebp+ecx*4-0xa2ca84b]
  4235a8:	loop   0x423545
  4235aa:	test   BYTE PTR [ecx-0x4a95637f],0x17
  4235b1:	pop    esp
  4235b2:	dec    ecx
  4235b3:	sbb    eax,DWORD PTR [esi]
  4235b5:	in     al,0xa6
  4235b7:	test   eax,0x271d6a33
  4235bc:	add    cl,BYTE PTR [esi]
  4235be:	sbb    ah,BYTE PTR [eax-0xbb58edc]
  4235c4:	aaa    
  4235c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235c6:	loope  0x4235ca
  4235c8:	mov    al,0x5a
  4235ca:	xchg   ebx,eax
  4235cb:	xor    ch,dl
  4235cd:	aam    0xd5
  4235cf:	pop    ebx
  4235d0:	cmp    eax,0x203283fd
  4235d5:	sub    bh,BYTE PTR [ecx-0x5fb898d5]
  4235db:	jle    0x4235c3
  4235dd:	shr    ecx,1
  4235df:	mov    DWORD PTR [eax],ebx
  4235e1:	cmp    ecx,ecx
  4235e3:	jo     0x423631
  4235e5:	mov    esp,0x6d57d87e
  4235ea:	mov    BYTE PTR [ebp-0x6690260e],al
  4235f0:	pop    ecx
  4235f1:	aas    
  4235f2:	sbb    DWORD PTR [eax],0xffffffe2
  4235f5:	fs adc ah,dh
  4235f8:	and    DWORD PTR [edx-0x2b363b13],eax
  4235fe:	loopne 0x4235c6
  423600:	repz sbb al,0x84
  423603:	dec    esp
  423604:	xlat   BYTE PTR ds:[ebx]
  423605:	rcl    DWORD PTR [eax+edi*1],1
  423608:	sbb    al,0x21
  42360a:	call   0x334bc390
  42360f:	test   eax,eax
  423611:	std    
  423612:	xchg   ecx,eax
  423613:	pop    ebp
  423614:	inc    ecx
  423615:	push   es
  423616:	mov    ds:0xf880cac3,al
  42361b:	or     al,0x5f
  42361d:	adc    eax,0xd33ae021
  423622:	loopne 0x4235f1
  423624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423625:	rol    BYTE PTR [eax+0x1a],1
  423628:	push   0xc0e38cc5
  42362d:	push   edx
  42362e:	pushf  
  42362f:	lea    edx,[eax+0x768571e7]
  423635:	je     0x42368c
  423637:	cmp    ebp,DWORD PTR ds:0xdf7e083d
  42363d:	pop    edx
  42363e:	dec    esi
  42363f:	mov    ebx,0x24fc92b6
  423644:	leave  
  423645:	cli    
  423646:	inc    eax
  423647:	mov    eax,0xbd72329e
  42364c:	push   es
  42364d:	int    0x92
  42364f:	fidiv  WORD PTR [ecx+ebp*4]
  423652:	jge    0x4235fb
  423654:	sbb    cl,cl
  423656:	arpl   WORD PTR [eax],sp
  423658:	adc    BYTE PTR [ecx-0x1ddd2696],cl
  42365e:	in     eax,0x4d
  423660:	lds    esi,FWORD PTR [ebx-0x6485ebc2]
  423666:	jecxz  0x423622
  423668:	rcr    DWORD PTR [eax-0x2],0x18
  42366c:	cmp    al,0xe4
  42366e:	pushf  
  42366f:	inc    esp
  423670:	and    ecx,esi
  423672:	dec    edx
  423673:	pop    ss
  423674:	nop
  423675:	imul   edi,DWORD PTR [ebx-0x4bef5cb9],0x2607d131
  42367f:	mov    ah,0x17
  423681:	mov    ebp,0x93a58968
  423686:	fwait
  423687:	sbb    cl,BYTE PTR [edx]
  423689:	fcom   QWORD PTR [ebx+0x14]
  42368c:	(bad)  
  42368d:	push   edi
  42368f:	call   0x74e:0x9f01f30b
  423696:	ja     0x423682
  423698:	push   ebp
  423699:	dec    esp
  42369a:	aaa    
  42369b:	pop    edi
  42369c:	je     0x42365d
  42369e:	(bad)  
  42369f:	outs   dx,DWORD PTR ds:[esi]
  4236a0:	jmp    0x3767:0x287a3feb
  4236a7:	push   esp
  4236a8:	(bad)  
  4236a9:	adc    esp,esp
  4236ab:	aad    0x63
  4236ad:	fdiv   st,st(0)
  4236af:	outs   dx,DWORD PTR ds:[esi]
  4236b0:	loopne 0x4236c4
  4236b2:	sbb    al,0x55
  4236b4:	lock and BYTE PTR [edi-0x17],ah
  4236b8:	test   BYTE PTR [ebx+edi*8],bh
  4236bb:	add    BYTE PTR [ebx+edi*4+0x10f6db8a],cl
  4236c2:	pop    ecx
  4236c3:	mov    ebx,ebp
  4236c5:	dec    edi
  4236c6:	scas   al,BYTE PTR es:[edi]
  4236c7:	fnsave [ebx*4+0x5f7ce7ac]
  4236ce:	jbe    0x423742
  4236d0:	push   ecx
  4236d1:	cmp    DWORD PTR [eax+0x60f2e5f],edi
  4236d7:	jmp    0xdfeba972
  4236dc:	pop    DWORD PTR [ecx+0x364b4ffe]
  4236e2:	pop    ss
  4236e3:	jl     0x4236c6
  4236e5:	bnd jno 0x42367d
  4236e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236e9:	mov    ebp,0xc9849624
  4236ee:	lds    edi,FWORD PTR [esi+eax*4-0x78d7c542]
  4236f5:	jmp    0x6e5e3098
  4236fa:	ror    DWORD PTR [ebx-0x64bf4a61],0xf0
  423701:	outs   dx,DWORD PTR ds:[esi]
  423702:	push   esp
  423703:	call   0x3c3f09e1
  423708:	mov    edx,0x8f7bcfe2
  42370d:	jae    0x42378e
  42370f:	ss jns 0x423785
  423712:	pop    ds
  423713:	sub    dl,al
  423715:	push   esi
  423716:	dec    ebx
  423717:	sbb    cl,dl
  423719:	sub    eax,0xe58d5c1b
  42371e:	je     0x423772
  423720:	fdivr  st,st(6)
  423722:	ins    DWORD PTR es:[edi],dx
  423723:	(bad)  
  423725:	ds add bh,ah
  423728:	jge    0x4236b1
  42372a:	push   esp
  42372b:	pop    ebx
  42372c:	xchg   ebx,eax
  42372d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42372e:	xor    ebp,ebp
  423730:	mov    ds:0xbc17d54a,eax
  423735:	fsub   DWORD PTR [edi]
  423737:	aad    0xb2
  423739:	rcr    DWORD PTR [ebx-0x580168ed],0xa3
  423740:	lea    edi,[eax-0x22cb32d8]
  423746:	test   eax,0xe8765db5
  42374b:	jnp    0x423701
  42374d:	xchg   edx,eax
  42374e:	gs mov dh,0xfa
  423751:	jg     0x423749
  423753:	mov    ebx,0xd30e25a2
  423758:	sub    BYTE PTR [esi],bh
  42375a:	pop    ds
  42375b:	jl     0x4236f9
  42375d:	push   edx
  42375e:	lods   al,BYTE PTR ds:[esi]
  42375f:	sub    eax,0x903b3523
  423764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423765:	mov    eax,ds:0xc5fd51a4
  42376a:	sub    eax,0x6d509206
  42376f:	ss pop ecx
  423771:	pushf  
  423772:	mov    cl,0x6e
  423774:	ficom  WORD PTR [ecx+esi*2-0x12c3b212]
  42377b:	xchg   ebx,eax
  42377c:	sbb    BYTE PTR [ebp+0x3f62a06f],ch
  423782:	jmp    0x4237f1
  423784:	or     esp,0xb6a85346
  42378a:	cwde   
  42378b:	fisub  DWORD PTR [ebx+0x6926bafc]
  423791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423792:	repnz or BYTE PTR [edx],al
  423795:	xor    al,0xb9
  423797:	cmp    DWORD PTR [eax+0x4a781ecb],edi
  42379d:	push   DWORD PTR [esp+eax*8-0x56eb5dee]
  4237a4:	dec    eax
  4237a5:	in     eax,dx
  4237a6:	dec    edi
  4237a7:	fmul   QWORD PTR [ebp-0x3]
  4237aa:	rcpps  xmm6,XMMWORD PTR [eax+0x69]
  4237ae:	call   0x5d3e:0xbdd60f8c
  4237b5:	push   ds
  4237b6:	pop    ebx
  4237b7:	arpl   WORD PTR [ebp-0x7d],dx
  4237ba:	sti    
  4237bb:	sti    
  4237bc:	out    dx,eax
  4237bd:	rol    BYTE PTR [esi+0x3e245e71],1
  4237c3:	cmp    eax,0x27d92f66
  4237c8:	push   eax
  4237c9:	(bad)  
  4237ca:	ds sbb eax,0x99e2376d
  4237d0:	add    ah,BYTE PTR [eax+0x1c]
  4237d3:	jp     0x423833
  4237d5:	add    al,0x62
  4237d7:	mov    esi,0x92d6e5a9
  4237dc:	sbb    ebp,ebp
  4237de:	in     al,dx
  4237df:	imul   eax,edx,0xa8bb7a21
  4237e5:	mov    ch,0xde
  4237e7:	push   0xffffff84
  4237e9:	(bad)  
  4237ea:	sbb    cl,bh
  4237ec:	xor    edi,edx
  4237ee:	dec    esi
  4237ef:	cmp    ah,dh
  4237f1:	cmp    eax,0xa5b48761
  4237f6:	(bad)  
  4237f7:	and    al,0xd4
  4237f9:	mov    ds,WORD PTR [esi+0x61]
  4237fc:	out    dx,al
  4237fd:	imul   dl
  4237ff:	mov    ah,0x22
  423801:	dec    esp
  423802:	push   es
  423803:	push   0xfffffff7
  423805:	out    dx,eax
  423806:	out    dx,eax
  423807:	daa    
  423808:	inc    eax
  423809:	mov    esi,0x9a378d99
  42380e:	mov    edi,DWORD PTR [edi-0x77]
  423811:	(bad)  
  423812:	call   0xd20eff62
  423817:	adc    DWORD PTR [edx-0x7d],esp
  42381a:	stos   BYTE PTR es:[edi],al
  42381b:	test   al,0xfb
  42381d:	fwait
  42381e:	sbb    bh,cl
  423820:	jbe    0x42381f
  423822:	mov    esi,0xbc0d5abc
  423827:	shr    DWORD PTR [edx-0x47],1
  42382a:	jns    0x4237b5
  42382c:	mov    edx,0x25737fe4
  423831:	daa    
  423832:	in     al,dx
  423833:	cmp    edi,DWORD PTR cs:[ebx-0x7d]
  423837:	push   0xbfd9c181
  42383c:	rcr    DWORD PTR [ecx+eax*1+0x6dcd34d7],0x2a
  423844:	lods   eax,DWORD PTR ds:[esi]
  423845:	sub    al,0x4e
  423847:	je     0x42380a
  423849:	xchg   edx,eax
  42384a:	mov    DWORD PTR [ecx+0x35],esp
  42384d:	dec    ebp
  42384e:	add    eax,0xc4de5353
  423853:	data16 mov bl,0x7b
  423856:	fistp  WORD PTR [edx]
  423858:	push   ebx
  423859:	xchg   esi,eax
  42385a:	(bad)  ds:0xbda9b8dc
  423860:	pusha  
  423861:	int    0xe1
  423863:	jmp    0x423856
  423865:	or     BYTE PTR [edi-0x4a67bd5d],al
  42386b:	pop    edi
  42386c:	rcr    DWORD PTR [edx+eax*1-0x1d],1
  423870:	retf   
  423871:	in     al,0xde
  423873:	fst    QWORD PTR [eax+0x504b0b8]
  423879:	mov    bl,0xc2
  42387b:	pop    esp
  42387c:	stc    
  42387d:	pushf  
  42387e:	adc    edi,DWORD PTR [ecx+0x41bbc23f]
  423884:	clc    
  423885:	and    esi,ebp
  423887:	sub    dh,ah
  423889:	mov    ds:0x30066893,al
  42388e:	pop    ecx
  42388f:	arpl   WORD PTR [ebx+0x380754f3],dx
  423895:	jecxz  0x42389f
  423897:	pop    esp
  423898:	jmp    0x77923e2d
  42389d:	rcl    DWORD PTR [esi+0x3b7df20],1
  4238a3:	rol    esi,cl
  4238a5:	in     al,dx
  4238a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238a7:	rcl    BYTE PTR [edi+edx*1+0x75],cl
  4238ab:	ins    DWORD PTR es:[edi],dx
  4238ac:	jb     0x42386d
  4238ae:	scas   eax,DWORD PTR es:[edi]
  4238af:	push   ss
  4238b0:	pop    edx
  4238b1:	sahf   
  4238b2:	sub    bl,al
  4238b4:	sbb    BYTE PTR [esi+0x14],ch
  4238b7:	add    al,0xf5
  4238b9:	jecxz  0x42388d
  4238bb:	sub    edx,edi
  4238bd:	xor    eax,0x276b9b4b
  4238c2:	lock mov edi,0xe2914417
  4238c8:	and    BYTE PTR [edx],dl
  4238ca:	xchg   cl,cl
  4238cc:	test   al,0x84
  4238ce:	dec    edx
  4238cf:	fcomp  st(3)
  4238d1:	int    0x2d
  4238d3:	hlt    
  4238d4:	pop    ss
  4238d5:	dec    edx
  4238d6:	and    al,0x6e
  4238d8:	mov    bl,cl
  4238da:	cli    
  4238db:	inc    eax
  4238dc:	js     0x4238b6
  4238de:	outs   dx,DWORD PTR ds:[esi]
  4238df:	ds jmp 0xbf48:0xf8c4a5cb
  4238e7:	mov    ds:0x18775be7,al
  4238ec:	jg     0x42388a
  4238ee:	jmp    0x42393b
  4238f0:	xchg   edi,eax
  4238f1:	push   esp
  4238f2:	and    BYTE PTR [ecx-0x72],0xb4
  4238f6:	repz (bad) [ebx-0x6ab07a42]
  4238fd:	in     eax,0xef
  4238ff:	not    ecx
  423901:	dec    ecx
  423902:	jo     0x42389e
  423904:	(bad)  
  423905:	sbb    BYTE PTR [ebx],dh
  423907:	arpl   bx,bp
  423909:	repz jp 0x4238c3
  42390c:	div    BYTE PTR [eax]
  42390e:	(bad)  
  42390f:	cs jo  0x42392e
  423912:	inc    ebx
  423913:	mov    ds:0x8ccca1e5,al
  423918:	cmp    esi,eax
  42391a:	mov    ds:0x3011232,eax
  42391f:	xor    al,0x53
  423921:	jo     0x42393d
  423923:	test   eax,0x312d35ad
  423928:	jle    0x4239a3
  42392a:	test   DWORD PTR [esi-0x7c45790c],esp
  423930:	sar    DWORD PTR [ebx],cl
  423932:	mov    dh,0xd9
  423934:	sbb    dl,BYTE PTR [eax]
  423936:	cdq    
  423937:	push   cs
  423938:	jne    0x4238ea
  42393a:	jb     0x4238d3
  42393c:	adc    al,0x6d
  42393e:	mov    ah,0x0
  423940:	mov    bh,0x5e
  423942:	inc    esi
  423943:	mov    eax,DWORD PTR [ebx+0x6c]
  423946:	dec    esi
  423947:	aad    0x7e
  423949:	repnz inc ebp
  42394b:	lods   eax,DWORD PTR ds:[esi]
  42394c:	div    DWORD PTR [edx]
  42394e:	enter  0xae9a,0x8e
  423952:	cdq    
  423953:	pop    esi
  423954:	push   esi
  423955:	or     DWORD PTR [edx],esi
  423957:	ret    0x8a0f
  42395a:	mov    ah,0xf7
  42395c:	add    esi,DWORD PTR [esi+0x4e]
  42395f:	cwde   
  423960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423961:	and    BYTE PTR [edi],ch
  423963:	sub    eax,DWORD PTR [ecx+0x10]
  423966:	push   esi
  423967:	inc    edx
  423968:	xchg   BYTE PTR [ebx-0x61],ch
  42396b:	mov    ebx,0x99f85b55
  423970:	adc    cl,al
  423972:	ja     0x42391a
  423974:	mov    al,0xd6
  423977:	mov    ebp,0xf4fdc983
  42397c:	mov    ebx,0xd13faf25
  423981:	test   ecx,ebp
  423983:	jecxz  0x423972
  423985:	inc    eax
  423987:	sbb    eax,DWORD PTR [esi]
  423989:	lods   al,BYTE PTR ds:[esi]
  42398a:	lods   al,BYTE PTR ds:[esi]
  42398b:	sub    esp,ebp
  42398d:	out    dx,al
  42398e:	fstp   TBYTE PTR [eax+0x63ea692c]
  423994:	jg     0xec7888fb
  42399a:	jbe    0x423a15
  42399c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42399d:	fs iret 
  42399f:	hlt    
  4239a0:	push   ss
  4239a1:	lods   eax,DWORD PTR ds:[esi]
  4239a2:	inc    eax
  4239a3:	das    
  4239a4:	add    al,BYTE PTR [eax-0x77bac6cf]
  4239aa:	cmp    dh,BYTE PTR [eax]
  4239ac:	(bad)  
  4239ad:	push   esi
  4239ae:	outs   dx,BYTE PTR ds:[esi]
  4239af:	xchg   edi,eax
  4239b0:	fadd   QWORD PTR [esi-0x4]
  4239b3:	add    edi,DWORD PTR [esp+edx*4]
  4239b6:	and    al,0xef
  4239b8:	iret   
  4239b9:	cmc    
  4239ba:	fidiv  DWORD PTR [ebx+0x3b369b7b]
  4239c0:	jbe    0x4239a3
  4239c2:	fcmovne st,st(7)
  4239c4:	or     eax,0x95d51538
  4239c9:	cld    
  4239ca:	and    esp,edx
  4239cc:	gs and cl,0x43
  4239d0:	repz les edx,FWORD PTR [edi]
  4239d3:	mov    BYTE PTR [edi-0x6b709555],cl
  4239d9:	add    al,BYTE PTR [ebx+0x11f21e16]
  4239df:	pop    ebx
  4239e0:	retf   
  4239e1:	or     dh,BYTE PTR [esi-0x3d86487a]
  4239e7:	in     al,0x84
  4239e9:	jge    0x4239ab
  4239eb:	shr    cl,cl
  4239ed:	fwait
  4239ee:	dec    esp
  4239ef:	add    bh,BYTE PTR [ebp-0x64]
  4239f2:	jmp    0x4239d6
  4239f4:	mov    dl,0x8e
  4239f6:	pop    ebx
  4239f7:	sub    BYTE PTR ds:0x6905207b,ch
  4239fd:	jne    0x423987
  4239ff:	add    BYTE PTR [eax],al
  423a01:	add    BYTE PTR [esi-0x69],al
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp+0x20b8dcdf]
  423a12:	mov    dh,BYTE PTR [ebx+0x4f50001]
  423a18:	add    BYTE PTR [eax],al
  423a1a:	lock scas al,BYTE PTR es:[edi]
  423a1c:	out    dx,al
  423a1d:	fucomp st(7)
  423a1f:	arpl   WORD PTR [eax-0x59dcbf37],di
  423a25:	nop
  423a26:	sub    eax,0x91624fcb
  423a2b:	jmp    0xfc59043e
  423a30:	jl     0x423a4b
  423a32:	pushf  
  423a33:	test   eax,0x671129e2
  423a38:	xor    eax,0x9a9874ce
  423a3d:	cmc    
  423a3e:	mov    ah,0xa8
  423a40:	ficomp DWORD PTR [ebx+0x63d67f54]
  423a46:	in     eax,0x58
  423a48:	pop    ebx
  423a49:	dec    ecx
  423a4a:	xchg   ecx,eax
  423a4b:	sub    DWORD PTR [esi+eax*1+0x17],0xd417d40b
  423a53:	sbb    BYTE PTR [edx+0xf96c2ac],0x45
  423a5a:	rol    BYTE PTR [ebx],0x3d
  423a5d:	inc    ebx
  423a5e:	ja     0x423ac0
  423a60:	push   ecx
  423a61:	xor    al,0xcc
  423a63:	stc    
  423a64:	test   al,0xbd
  423a66:	cld    
  423a67:	jle    0x423ac1
  423a69:	push   edx
  423a6a:	shr    BYTE PTR [ebx+0x6205ef91],0x12
  423a71:	lods   eax,DWORD PTR ds:[esi]
  423a72:	dec    ebx
  423a73:	mov    ?,WORD PTR ds:0x49ae0752
  423a79:	add    dl,bl
  423a7b:	cmp    BYTE PTR [eax-0x5c],cl
  423a7e:	dec    edx
  423a7f:	loopne 0x423ac9
  423a81:	mov    BYTE PTR [ebx+edx*2+0x1639481],0xb3
  423a89:	sbb    DWORD PTR [edx-0x38],esp
  423a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a8d:	pop    esp
  423a8e:	fldenv [edx+0x3b53d81f]
  423a94:	mov    esp,0x5fa90329
  423a99:	xor    al,ah
  423a9b:	jne    0x423a96
  423a9d:	inc    ebp
  423a9e:	xchg   esp,eax
  423a9f:	call   0xfc35:0x655f6ced
  423aa6:	and    ebp,DWORD PTR [ebx+eiz*2-0x10]
  423aaa:	jle    0x423ab2
  423aac:	lahf   
  423aad:	or     dl,BYTE PTR [edx+ebp*2-0x1f]
  423ab1:	and    eax,0x8509aa76
  423ab6:	adc    al,0xab
  423ab8:	cmp    al,0xa1
  423aba:	data16 cs js 0x423a53
  423abe:	js     0x423aa5
  423ac0:	and    esi,DWORD PTR [esi]
  423ac2:	mov    esi,0x26c93173
  423ac7:	mov    edx,0x2d3a7533
  423acc:	push   cs
  423acd:	fs inc edi
  423acf:	inc    ebx
  423ad0:	adc    eax,0x4a46329e
  423ad5:	inc    ecx
  423ad6:	push   ds
  423ad7:	and    al,0xd9
  423ad9:	xor    bh,BYTE PTR [edx+0x27]
  423adc:	add    bh,ch
  423ade:	jbe    0x423b4b
  423ae0:	fimul  DWORD PTR [edx]
  423ae2:	fisubr WORD PTR [eax]
  423ae4:	fisttp DWORD PTR [edi+0x9750f03]
  423aea:	loopne 0x423ad0
  423aec:	gs int3 
  423aee:	add    eax,DWORD PTR [ecx+0x6b89ea37]
  423af4:	aam    0x1d
  423af6:	or     eax,0x16611647
  423afb:	fdivr  DWORD PTR [edi+0x0]
  423afe:	test   DWORD PTR [ebx+0x65],ebp
  423b01:	mov    al,dh
  423b03:	hlt    
  423b04:	int    0x97
  423b06:	xor    al,0x6
  423b08:	jmp    0xa5b21bda
  423b0d:	cmp    DWORD PTR [edx+0x2ba0e0c],ecx
  423b13:	dec    ebp
  423b14:	push   ecx
  423b15:	push   0x4c
  423b17:	adc    DWORD PTR [eax],edi
  423b19:	jge    0x423b79
  423b1b:	or     esp,DWORD PTR [ebx+0xaa2a197]
  423b21:	push   edx
  423b22:	xchg   ebx,esi
  423b24:	pop    esp
  423b25:	cmc    
  423b26:	outs   dx,DWORD PTR ds:[esi]
  423b27:	mov    esp,0xf1ff961
  423b2c:	dec    eax
  423b2d:	or     al,BYTE PTR [edi+0x48]
  423b30:	pusha  
  423b31:	hlt    
  423b32:	push   ss
  423b33:	xchg   edx,eax
  423b34:	or     DWORD PTR [eax+edi*4-0x11],0xcebd065a
  423b3c:	imul   ecx,DWORD PTR [edx-0x5ec2223b],0xc
  423b43:	inc    ebx
  423b44:	arpl   WORD PTR [edi],bx
  423b46:	cdq    
  423b47:	push   ebx
  423b48:	lea    eax,[eax]
  423b4a:	mov    ds:0xe8cdc2f8,eax
  423b4f:	pop    esi
  423b50:	add    ebp,DWORD PTR [eax-0x2a]
  423b53:	pop    ebp
  423b54:	std    
  423b55:	pop    es
  423b56:	sbb    esi,DWORD PTR ds:0xce371a54
  423b5c:	push   edi
  423b5d:	sbb    esp,DWORD PTR [ecx+0x68ea8967]
  423b63:	loope  0x423b8d
  423b65:	inc    ecx
  423b66:	or     dl,ch
  423b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b69:	out    0x53,al
  423b6b:	mov    ecx,0xa7e40c4b
  423b70:	xor    dh,BYTE PTR [ebx]
  423b72:	sub    edx,ebx
  423b74:	clc    
  423b75:	ror    BYTE PTR [ebp+0x6e],1
  423b78:	pop    ss
  423b79:	imul   edx,DWORD PTR [ebx-0x6b7f61af],0xe0d8e172
  423b83:	jge    0x423bc6
  423b85:	add    al,0xa
  423b87:	sub    BYTE PTR [edi-0x225b2707],ch
  423b8d:	mul    DWORD PTR gs:[eax]
  423b90:	icebp  
  423b91:	jg     0x423b25
  423b93:	pusha  
  423b94:	iret   
  423b95:	adc    eax,0x43fd2530
  423b9a:	mov    BYTE PTR [esp+ecx*4-0x250fbd5d],bl
  423ba1:	rcl    DWORD PTR [edi-0x71d88acb],0x18
  423ba8:	retf   0xe2d6
  423bab:	sahf   
  423bac:	dec    eax
  423bad:	xor    DWORD PTR [esi+0x2f],0x3
  423bb1:	xchg   esp,eax
  423bb2:	cmp    ah,cl
  423bb4:	popa   
  423bb5:	xchg   edi,eax
  423bb6:	in     eax,0x6c
  423bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bb9:	adc    al,0x93
  423bbb:	fadd   st,st(4)
  423bbd:	test   eax,esi
  423bbf:	push   eax
  423bc0:	nop
  423bc1:	mov    cl,0x88
  423bc3:	mov    edx,eax
  423bc5:	js     0x423bab
  423bc7:	out    dx,al
  423bc8:	push   0x4cf73884
  423bcd:	push   ds
  423bce:	out    0xa8,eax
  423bd0:	xor    BYTE PTR [ecx-0xe4318a5],al
  423bd6:	jmp    0x423c02
  423bd8:	(bad)  
  423bd9:	mov    edx,0xfd61e751
  423bde:	mov    esp,edx
  423be0:	pop    esi
  423be1:	inc    ecx
  423be3:	icebp  
  423be4:	mov    bh,0x66
  423be6:	out    0x6c,al
  423be8:	mov    esi,esi
  423bea:	enter  0xcfa5,0xe1
  423bee:	mov    edx,0xb9dfb7d1
  423bf3:	imul   ah
  423bf5:	das    
  423bf6:	or     DWORD PTR [edi+0x3ca327d2],ebp
  423bfc:	loopne 0x423c43
  423bfe:	jbe    0x423c34
  423c00:	cmc    
  423c01:	(bad)
  423c05:	les    esp,FWORD PTR [ebx+0x72]
  423c08:	mov    ch,0xd9
  423c0a:	adc    eax,0xcf7b1214
  423c0f:	jp     0x423c24
  423c11:	popa   
  423c12:	pop    esi
  423c13:	aad    0x5c
  423c15:	pop    ecx
  423c16:	in     al,dx
  423c17:	jecxz  0x423c4a
  423c19:	mov    ebp,0xe8af2609
  423c1e:	sub    ebp,esi
  423c20:	or     esp,DWORD PTR [ebx+0x22]
  423c23:	pop    ss
  423c24:	and    DWORD PTR [edx],eax
  423c26:	adc    eax,0xec26407e
  423c2b:	pop    esi
  423c2c:	nop
  423c2d:	xlat   BYTE PTR ds:[ebx]
  423c2e:	push   edi
  423c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c30:	mov    esp,0xf24fda4a
  423c35:	cmp    eax,0xfca39976
  423c3a:	loope  0x423c06
  423c3c:	pop    ebp
  423c3d:	(bad)  
  423c3e:	ss scas eax,DWORD PTR es:[edi]
  423c40:	sub    BYTE PTR [ebx+0x760b1c21],bl
  423c46:	sbb    BYTE PTR [ebx-0x4d],0x5e
  423c4a:	retf   
  423c4b:	cmp    al,al
  423c4d:	ja     0x423c19
  423c4f:	test   bh,dl
  423c51:	push   eax
  423c52:	js     0x423c9e
  423c54:	and    al,0x61
  423c56:	xlat   BYTE PTR ds:[ebx]
  423c57:	retf   0xa94b
  423c5a:	mov    ebx,0xa6678925
  423c5f:	xor    eax,0xb3f20160
  423c64:	sti    
  423c65:	sbb    DWORD PTR [ebp+esi*1+0x44fce29d],ecx
  423c6c:	mov    ebp,0x288b4214
  423c71:	retf   0x775a
  423c74:	mov    bl,0x77
  423c76:	(bad)  
  423c77:	outs   dx,DWORD PTR ds:[esi]
  423c78:	shl    BYTE PTR [ecx],0xc8
  423c7b:	loop   0x423ceb
  423c7d:	pop    edx
  423c7e:	and    edi,ecx
  423c80:	push   ebp
  423c81:	xchg   esp,eax
  423c82:	outs   dx,DWORD PTR ds:[esi]
  423c83:	ds hlt 
  423c85:	mov    ss,WORD PTR [esi-0x6e]
  423c88:	pop    eax
  423c89:	(bad)
  423c8c:	repnz ss rcr esi,0x6c
  423c91:	push   ecx
  423c92:	sub    eax,0x3834d603
  423c97:	pop    es
  423c98:	imul   ebx,DWORD PTR [esi-0x7cb77adb],0x8af0d434
  423ca2:	sar    BYTE PTR [ecx-0x34],0x1b
  423ca6:	adc    eax,0x3a732399
  423cab:	pop    esi
  423cac:	and    BYTE PTR [edi],0x8c
  423caf:	stos   DWORD PTR es:[edi],eax
  423cb0:	push   ss
  423cb1:	shr    BYTE PTR [ecx],0x69
  423cb4:	xchg   ebx,eax
  423cb5:	jge    0x423c45
  423cb7:	mov    ah,0x23
  423cb9:	add    esi,DWORD PTR [esi+0xb1620a0]
  423cbf:	or     ch,BYTE PTR [ebx+ebp*8]
  423cc2:	jns    0x423c75
  423cc4:	jb     0x423c59
  423cc6:	jg     0x423c73
  423cc8:	dec    ebx
  423cc9:	arpl   WORD PTR [esi-0x15],bp
  423ccc:	mov    bh,0xf3
  423cce:	pop    eax
  423ccf:	clc    
  423cd0:	inc    eax
  423cd1:	popf   
  423cd2:	mov    DWORD PTR [eax],esi
  423cd4:	sub    BYTE PTR [edi+0x5],bh
  423cd7:	dec    edi
  423cd8:	aas    
  423cd9:	mov    edx,0x7dda810c
  423cde:	fiadd  DWORD PTR [eax]
  423ce0:	in     al,0xd1
  423ce2:	dec    esi
  423ce3:	dec    ebp
  423ce4:	scas   al,BYTE PTR es:[edi]
  423ce5:	loop   0x423d55
  423ce7:	mov    BYTE PTR [esi-0x36],cl
  423cea:	pop    esi
  423ceb:	repz pop ebp
  423ced:	xchg   edx,eax
  423cee:	(bad)  
  423cef:	cmp    eax,0xa54c4fe3
  423cf4:	(bad)  
  423cf6:	jno    0x423ce1
  423cf8:	ret    
  423cf9:	mov    edx,DWORD PTR [ebp-0x31]
  423cfc:	jp     0x423d60
  423cfe:	pop    ds
  423cff:	mov    al,0x61
  423d01:	in     al,dx
  423d02:	cmp    eax,0x91d741d2
  423d07:	push   esp
  423d08:	adc    al,0x5
  423d0a:	ja     0x423d40
  423d0c:	push   0xfffffff6
  423d0e:	cwde   
  423d0f:	jmp    0x4728a746
  423d14:	xlat   BYTE PTR ds:[ebx]
  423d15:	mov    cl,0xb6
  423d17:	rcr    DWORD PTR [ebp-0x7b],1
  423d1a:	and    eax,0x6400116d
  423d1f:	out    0xa6,al
  423d21:	imul   DWORD PTR [edx+0x316d5688]
  423d27:	hlt    
  423d28:	popa   
  423d29:	or     DWORD PTR [eax-0x4c],0x78978a21
  423d30:	mov    al,0xd0
  423d32:	rol    BYTE PTR [edi],1
  423d34:	inc    edi
  423d35:	leave  
  423d36:	clc    
  423d37:	or     edx,DWORD PTR [edx]
  423d39:	dec    ebp
  423d3a:	jbe    0x423cc7
  423d3c:	add    DWORD PTR [esi+ecx*2+0x76],ebx
  423d40:	dec    edx
  423d41:	(bad)  
  423d42:	loope  0x423d9d
  423d44:	(bad)  [eax]
  423d46:	in     eax,0x46
  423d48:	icebp  
  423d49:	sar    edi,cl
  423d4b:	mov    bh,0x5d
  423d4d:	cmc    
  423d4e:	mul    ebp
  423d50:	pushf  
  423d51:	cmp    al,0xea
  423d53:	xlat   BYTE PTR ds:[ebx]
  423d54:	sbb    eax,0xbbc0c8f5
  423d59:	xor    ch,ah
  423d5b:	push   ss
  423d5c:	cli    
  423d5d:	cs popa 
  423d5f:	dec    edi
  423d60:	cld    
  423d61:	loopne 0x423d2d
  423d63:	jne    0x423dcf
  423d65:	sbb    ebx,DWORD PTR [edx]
  423d67:	push   ss
  423d68:	adc    ch,BYTE PTR [ebx+eiz*1]
  423d6b:	rcl    BYTE PTR [eax-0x30],1
  423d6e:	(bad)  
  423d6f:	jno    0x423dcc
  423d71:	call   0x6a2862d6
  423d76:	dec    eax
  423d77:	or     bh,cl
  423d79:	sbb    DWORD PTR [ebx],ecx
  423d7b:	mov    ah,0x75
  423d7d:	sbb    BYTE PTR [ecx-0x3d],dl
  423d80:	xor    eax,0xb39285a3
  423d85:	dec    esi
  423d86:	aam    0xfc
  423d88:	sbb    DWORD PTR [esi+0x2042473f],esi
  423d8e:	(bad)  [ebx]
  423d90:	les    esp,FWORD PTR [edi]
  423d92:	lahf   
  423d93:	push   ds
  423d94:	call   DWORD PTR [eax+0x45]
  423d97:	ins    BYTE PTR es:[edi],dx
  423d98:	call   FWORD PTR [edx]
  423d9a:	adc    DWORD PTR [eax-0x36295ed3],ebx
  423da0:	cli    
  423da1:	push   ebp
  423da2:	out    0xd4,eax
  423da4:	test   DWORD PTR [esi+0x23],ebx
  423da7:	xchg   edx,eax
  423da8:	scas   al,BYTE PTR es:[edi]
  423da9:	cmp    DWORD PTR [eax],0xf6c9f74a
  423daf:	jno    0x423d93
  423db1:	inc    ebx
  423db2:	mov    cl,BYTE PTR [eax+0x45]
  423db5:	das    
  423db6:	adc    esp,DWORD PTR [edx-0x5c]
  423db9:	sbb    bh,BYTE PTR [eax-0x77]
  423dbc:	inc    esp
  423dbd:	loopne 0x423dca
  423dbf:	xchg   esp,eax
  423dc0:	jbe    0x423d80
  423dc2:	retfw  
  423dc4:	and    al,0xce
  423dc6:	add    eax,0x90bc048d
  423dcb:	mov    ecx,0x1ed3eec
  423dd0:	out    dx,eax
  423dd1:	mov    ecx,0x2cb9176d
  423dd6:	add    al,bl
  423dd8:	xchg   ebx,eax
  423dd9:	in     eax,dx
  423dda:	fsub   QWORD PTR [ebx+0x126e3634]
  423de0:	mov    ds:0xbaa48c96,al
  423de5:	sub    al,0xa
  423de7:	sbb    DWORD PTR [eax+0x9],ecx
  423dea:	scas   al,BYTE PTR es:[edi]
  423deb:	mov    dl,0xfb
  423ded:	xchg   ebx,eax
  423dee:	mov    dh,0xc6
  423df0:	popa   
  423df1:	pop    edx
  423df2:	xchg   ecx,eax
  423df3:	jns    0x423dc4
  423df5:	aaa    
  423df6:	cmp    al,0x70
  423df8:	dec    ebx
  423df9:	dec    eax
  423dfa:	sub    al,0x67
  423dfc:	xor    BYTE PTR [esi],ch
  423dfe:	out    dx,eax
  423dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e00:	sar    BYTE PTR [ecx+0x27923ce6],0x29
  423e07:	xchg   ebp,eax
  423e08:	mov    dh,0x56
  423e0a:	lock push 0xffffffea
  423e0d:	repz lahf 
  423e0f:	jecxz  0x423e63
  423e11:	fsub   st,st(5)
  423e13:	xchg   edi,eax
  423e14:	test   eax,0x3724b8d1
  423e19:	lahf   
  423e1a:	or     ch,BYTE PTR [ebx]
  423e1c:	ins    DWORD PTR es:[edi],dx
  423e1d:	sub    al,BYTE PTR es:[edx-0x6]
  423e21:	push   edi
  423e22:	mov    esp,0xb8cbb22
  423e27:	xchg   esp,esi
  423e29:	(bad)  
  423e2a:	fdivr  QWORD PTR [esi]
  423e2c:	sti    
  423e2d:	icebp  
  423e2e:	dec    esp
  423e2f:	nop
  423e30:	retf   0xc9ad
  423e33:	pop    esi
  423e34:	add    edx,ecx
  423e36:	aam    0x2d
  423e38:	(bad)  
  423e39:	nop
  423e3a:	not    esp
  423e3c:	stc    
  423e3d:	out    dx,eax
  423e3e:	lds    edi,FWORD PTR ds:0xd895f15c
  423e44:	pop    eax
  423e45:	adc    eax,DWORD PTR [edx+0x9]
  423e48:	mov    ebx,0x292ab748
  423e4d:	lahf   
  423e4e:	xchg   edx,eax
  423e4f:	out    dx,al
  423e50:	cmp    ecx,esi
  423e52:	shr    DWORD PTR cs:[edx+0x2b2f3268],1
  423e59:	sti    
  423e5a:	mov    eax,0xcd08aa82
  423e5f:	jo     0x423e28
  423e61:	sbb    edx,DWORD PTR [ecx-0x7b]
  423e64:	mov    al,ds:0x935acfd5
  423e69:	cdq    
  423e6a:	jns    0x423e6d
  423e6c:	das    
  423e6d:	pusha  
  423e6e:	mov    dh,BYTE PTR [edi-0x51]
  423e71:	outs   dx,BYTE PTR ds:[esi]
  423e72:	aad    0x12
  423e74:	mov    ds:0x408d03f5,eax
  423e79:	aas    
  423e7a:	retf   
  423e7b:	loope  0x423ea2
  423e7d:	jle    0x423ee2
  423e7f:	mov    edx,0x1894eefb
  423e84:	ds repz jno 0x423e96
  423e88:	or     edi,DWORD PTR [eax-0x7911b89f]
  423e8e:	and    BYTE PTR [edi-0x7e],cl
  423e91:	sbb    al,0xd3
  423e93:	inc    edx
  423e94:	cmp    DWORD PTR [ebp+0x76],edi
  423e97:	jne    0x423ebe
  423e99:	stc    
  423e9a:	fidiv  WORD PTR [edi+0x13e2809a]
  423ea0:	cli    
  423ea1:	cs aad 0x2d
  423ea4:	jge    0x423ef7
  423ea6:	sub    al,0x7c
  423ea8:	mov    DWORD PTR [ebx+0x14],edx
  423eab:	dec    edi
  423eac:	xchg   DWORD PTR [eax-0xce81597],esi
  423eb2:	sar    DWORD PTR [esi+ebx*2],0x81
  423eb6:	dec    ecx
  423eb7:	not    BYTE PTR [eax+0x93c4d93]
  423ebd:	inc    esi
  423ebe:	dec    ebx
  423ebf:	fwait
  423ec0:	ret    0x83cb
  423ec3:	test   al,0xe8
  423ec5:	pop    ebp
  423ec6:	aaa    
  423ec7:	(bad)  
  423ec8:	scas   al,BYTE PTR es:[edi]
  423ec9:	jmp    0x423ec6
  423ecb:	jo     0x423f48
  423ecd:	pushf  
  423ece:	jno    0x423ee4
  423ed0:	jbe    0xff886db5
  423ed6:	je     0x423e66
  423ed8:	pop    edi
  423ed9:	xchg   BYTE PTR [ebp+0x4b],dl
  423edc:	lea    ebp,[ecx-0x66]
  423edf:	lea    esi,[eax+0x31]
  423ee2:	sub    BYTE PTR [edx-0x1ab5ed60],bh
  423ee8:	jbe    0x423ecc
  423eea:	repz adc BYTE PTR [ebp-0x5e1ead6e],bh
  423ef1:	adc    DWORD PTR [esp+eax*2-0x8],ebp
  423ef5:	ss xchg edi,eax
  423ef7:	push   es
  423ef8:	(bad)  
  423ef9:	jmp    0x381012ff
  423efe:	mov    edi,0xc1a7fca3
  423f03:	add    dl,BYTE PTR [ebp-0x6b]
  423f06:	inc    esi
  423f07:	in     al,0x74
  423f09:	test   eax,0x5521eebb
  423f0e:	or     DWORD PTR [eax],eax
  423f10:	add    BYTE PTR [eax],al
  423f12:	sar    al,cl
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fcmovb st,st(2)
  423f1f:	adc    ebx,DWORD PTR [edx]
  423f21:	adc    edi,DWORD PTR [edi-0x48]
  423f24:	add    DWORD PTR [eax],eax
  423f26:	cmc    
  423f27:	add    al,0x0
  423f29:	add    ch,dl
  423f2b:	mov    esi,0x4db5301
  423f30:	push   0xffffff88
  423f32:	mov    cl,0x59
  423f34:	ins    DWORD PTR es:[edi],dx
  423f35:	sbb    al,0x47
  423f37:	inc    esp
  423f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f39:	popf   
  423f3a:	ins    DWORD PTR es:[edi],dx
  423f3b:	sub    al,ch
  423f3d:	sbb    al,0x2e
  423f3f:	jl     0x423f82
  423f41:	(bad)  
  423f42:	dec    edx
  423f43:	cmp    eax,0x7c15717e
  423f48:	xor    eax,0x19539ccc
  423f4d:	shr    BYTE PTR [edi-0x30],1
  423f50:	fwait
  423f51:	sub    DWORD PTR [ecx-0x3abdc512],ebx
  423f57:	scas   al,BYTE PTR es:[edi]
  423f58:	lock add ah,ch
  423f5b:	xchg   esp,eax
  423f5c:	out    dx,al
  423f5d:	(bad)  
  423f5e:	pushf  
  423f5f:	mov    esp,0xccff9a91
  423f64:	loopne 0x423fd8
  423f66:	call   FWORD PTR [esp+ecx*4-0x14700bce]
  423f6d:	fnstcw WORD PTR [ecx]
  423f6f:	popf   
  423f70:	in     al,dx
  423f71:	aas    
  423f72:	sub    ch,BYTE PTR [edi-0x75e5b58c]
  423f78:	jmp    0x423f93
  423f7a:	xchg   edi,eax
  423f7b:	cwde   
  423f7c:	and    dh,bh
  423f7e:	cmp    bh,BYTE PTR [esi]
  423f80:	neg    BYTE PTR [ebx-0x6f]
  423f83:	inc    ebx
  423f84:	sub    DWORD PTR [edx+0x5],0x25
  423f88:	xor    eax,0x57de7f38
  423f8d:	xchg   edx,eax
  423f8e:	sti    
  423f8f:	inc    ebx
  423f90:	repz dec eax
  423f92:	out    dx,eax
  423f93:	inc    ebx
  423f94:	fbld   TBYTE PTR [esi]
  423f96:	shl    DWORD PTR [edi+0x67],0x9c
  423f9a:	ds scas eax,DWORD PTR es:[edi]
  423f9c:	bound  ebx,QWORD PTR [eax+0x4f]
  423f9f:	jmp    0xa698a893
  423fa4:	pop    DWORD PTR gs:[ecx+0x240a2759]
  423fab:	test   DWORD PTR [esi-0x24],ecx
  423fae:	adc    ecx,DWORD PTR [ebx+0x7]
  423fb1:	pop    edi
  423fb2:	xchg   ebx,eax
  423fb3:	jmp    0x430:0x9319aea5
  423fba:	cli    
  423fbb:	xchg   ebp,eax
  423fbc:	mov    WORD PTR [edx],cs
  423fbe:	pop    edx
  423fbf:	std    
  423fc0:	add    al,0xb7
  423fc2:	idiv   ebp
  423fc4:	mov    dl,0x3b
  423fc6:	repz (bad) 
  423fc8:	pop    esi
  423fc9:	test   eax,0xbf91657
  423fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fcf:	inc    ebx
  423fd0:	clc    
  423fd1:	out    0xc0,al
  423fd3:	je     0x423ffa
  423fd5:	outs   dx,BYTE PTR ds:[esi]
  423fd6:	pushf  
  423fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fd8:	adc    BYTE PTR [ebp-0x72],bh
  423fdb:	mov    esp,0x6482820d
  423fe0:	into   
  423fe1:	js     0x42401c
  423fe3:	ins    BYTE PTR es:[edi],dx
  423fe4:	dec    edx
  423fe5:	leave  
  423fe6:	hlt    
  423fe7:	add    eax,0x9896bfe5
  423fec:	add    al,0x7a
  423fee:	jns    0x9175e173
  423ff4:	sahf   
  423ff5:	add    bh,BYTE PTR [ebp-0x69be73ff]
  423ffb:	and    ch,BYTE PTR [ecx]
  423ffd:	jae    0x423f84
  423fff:	movzx  ecx,ax
  424002:	ror    DWORD PTR [edx-0x38b333fa],cl
  424008:	or     DWORD PTR [ecx-0x37],esi
  42400b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42400c:	mov    al,ds:0x936cd85d
  424011:	in     al,dx
  424012:	mov    ds:0x44330a1f,al
  424017:	lea    edx,[ebx]
  424019:	sub    eax,0x634828b2
  42401e:	push   ds
  42401f:	push   eax
  424020:	sbb    BYTE PTR [edx],bh
  424022:	jg     0x423fbb
  424024:	fsubr  DWORD PTR [ebx-0x15]
  424027:	push   0xffffff87
  424029:	inc    ecx
  42402a:	arpl   WORD PTR [edx-0x21],bx
  42402d:	pusha  
  42402e:	pop    ss
  42402f:	lods   eax,DWORD PTR ds:[esi]
  424030:	xchg   ebx,eax
  424031:	fnstenv [ecx]
  424033:	lods   al,BYTE PTR ds:[esi]
  424034:	data16 lods al,BYTE PTR ds:[esi]
  424036:	js     0x423feb
  424038:	stos   BYTE PTR es:[edi],al
  424039:	inc    edi
  42403a:	xor    DWORD PTR [edx],0x33dc705a
  424040:	sub    al,0x81
  424042:	imul   ebx,DWORD PTR [edi+0x54474c74],0x5e904726
  42404c:	push   ecx
  42404d:	aad    0x59
  42404f:	sub    ecx,DWORD PTR [ecx-0x50]
  424052:	mov    bh,0xeb
  424054:	rcr    BYTE PTR [ebp*8+0x7cdfea8],1
  42405b:	jmp    0x3796cd2d
  424060:	lods   eax,DWORD PTR ds:[esi]
  424061:	and    al,0x90
  424063:	mov    ecx,0x9e421a08
  424068:	pop    ds
  424069:	shl    DWORD PTR [ebx+0x385e5336],0xc1
  424070:	mov    dh,0xcd
  424072:	jmp    0x14d5:0xcc44312b
  424079:	int    0xb8
  42407b:	mov    cl,0x63
  42407d:	js     0x424027
  42407f:	dec    ecx
  424080:	test   DWORD PTR [ecx+ebp*2+0x64ba01c7],0x933e0ae1
  42408b:	add    eax,DWORD PTR [edx]
  42408d:	and    BYTE PTR [esi+ebp*2],cl
  424090:	push   gs
  424092:	jl     0x4240cf
  424094:	sbb    dh,ah
  424096:	dec    eax
  424097:	or     DWORD PTR [ecx+edx*1],0x5695d540
  42409e:	enter  0x7d4e,0x6c
  4240a2:	mov    ecx,0x965b32a7
  4240a7:	xchg   edi,eax
  4240a8:	sbb    esp,esp
  4240aa:	push   edi
  4240ab:	sahf   
  4240ac:	aam    0x15
  4240ae:	mov    dh,0xc1
  4240b0:	loope  0x4240f7
  4240b2:	gs (bad) 
  4240b4:	jnp    0x424113
  4240b6:	js     0x4240cd
  4240b8:	jno    0x4240ec
  4240ba:	xor    ch,BYTE PTR [ecx+0xb]
  4240bd:	sbb    eax,0x5ca8c16b
  4240c2:	stos   BYTE PTR es:[edi],al
  4240c3:	je     0x4240bc
  4240c5:	test   BYTE PTR [ecx],dh
  4240c7:	ja     0x424115
  4240c9:	loop   0x4240a7
  4240cb:	cmovp  ecx,DWORD PTR [ebp-0x6b405e7e]
  4240d2:	pushf  
  4240d3:	rcr    BYTE PTR [edi-0x29ce5241],cl
  4240d9:	cmc    
  4240da:	cmp    eax,0xb93d6564
  4240df:	xor    eax,0xfdb252a
  4240e4:	in     al,dx
  4240e5:	jo     0x4240f2
  4240e7:	xchg   ebp,eax
  4240e8:	pop    esi
  4240e9:	imul   edx,DWORD PTR [edx-0x2b2a0931],0x2bc79317
  4240f3:	add    al,0xf2
  4240f5:	push   ecx
  4240f6:	sbb    al,0x45
  4240f8:	rcr    DWORD PTR [ebx+edi*1-0x5],cl
  4240fc:	sbb    DWORD PTR [esi],0x60
  4240ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424100:	cli    
  424101:	mov    esp,0x9c81f76b
  424106:	call   0x629e:0x190329ee
  42410d:	cmp    ah,BYTE PTR [esi-0x515daacf]
  424113:	mov    esi,0x8530fedd
  424118:	xor    ebx,esi
  42411a:	int    0xf6
  42411c:	and    eax,0xdeab4d18
  424121:	push   ebp
  424122:	mov    ds:0xfa43f3b1,eax
  424127:	mov    cl,0x99
  424129:	adc    al,0x23
  42412b:	xor    eax,0x9775127a
  424130:	test   BYTE PTR [esi-0x6b],bh
  424133:	and    BYTE PTR [esi],0x7
  424136:	jne    0x424112
  424138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424139:	jp     0x4240e7
  42413b:	scas   eax,DWORD PTR es:[edi]
  42413c:	pop    ecx
  42413d:	xchg   ebx,eax
  42413e:	sbb    al,0xe1
  424140:	push   eax
  424141:	(bad)  
  424142:	push   0xfffffff9
  424144:	cdq    
  424145:	adc    al,0x5f
  424147:	push   esp
  424148:	ret    0x77c
  42414b:	xchg   DWORD PTR [eax+0x3fb75ff6],ecx
  424151:	mov    dl,0x87
  424153:	jbe    0x42415a
  424155:	test   bl,dl
  424157:	push   edx
  424158:	ficom  WORD PTR [edx-0x1e]
  42415b:	mov    edi,0xd2295516
  424160:	aam    0x65
  424162:	xor    al,0x3e
  424164:	xor    ecx,DWORD PTR [ebx]
  424166:	icebp  
  424167:	dec    edx
  424168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424169:	iret   
  42416a:	call   0x5d5e7796
  42416f:	jns    0x424155
  424171:	ret    
  424172:	fld    TBYTE PTR [esi+0x9c75c91]
  424178:	inc    ebx
  424179:	mov    cl,0x74
  42417b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42417c:	inc    DWORD PTR [edi]
  42417e:	(bad)  
  42417f:	out    0x23,al
  424181:	retf   0x6aaf
  424184:	sbb    cl,dh
  424186:	and    BYTE PTR [edi],bh
  424188:	add    edx,esi
  42418a:	clc    
  42418b:	and    DWORD PTR [edx-0x38],esp
  42418e:	or     DWORD PTR [edi-0x5b],0xfb7e92cc
  424195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424196:	ror    DWORD PTR [edi-0x7c],1
  424199:	js     0x42411d
  42419b:	push   0x86cc25a2
  4241a0:	sbb    ebp,DWORD PTR [esi-0x6109644c]
  4241a6:	inc    ebp
  4241a7:	(bad)  
  4241a8:	pop    ebp
  4241a9:	in     al,0x35
  4241ab:	dec    edi
  4241ac:	(bad)  
  4241ae:	pop    ebp
  4241af:	xor    ebp,ebx
  4241b1:	inc    edx
  4241b2:	add    BYTE PTR [edx],dh
  4241b4:	push   es
  4241b5:	push   cs
  4241b6:	pop    ebx
  4241b7:	or     DWORD PTR [edi+0x5cba7a9b],ebp
  4241bd:	add    eax,DWORD PTR [esi+esi*2-0x6839402e]
  4241c4:	xor    ebx,DWORD PTR [edi+0x3e]
  4241c7:	fiadd  WORD PTR [ebx+0x5abeb476]
  4241cd:	outs   dx,DWORD PTR ds:[esi]
  4241ce:	adc    BYTE PTR [ebx-0x71],0x9
  4241d2:	fimul  WORD PTR [eax]
  4241d4:	clc    
  4241d5:	xor    eax,0x526145fc
  4241da:	jmp    0x30927ddb
  4241df:	push   ds
  4241e0:	sub    al,0x95
  4241e2:	sahf   
  4241e3:	adc    al,0xba
  4241e5:	mov    cl,dl
  4241e7:	aaa    
  4241e8:	pop    edx
  4241e9:	call   DWORD PTR [esi+0x6a]
  4241ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241ed:	jge    0x424250
  4241ef:	inc    ebp
  4241f0:	(bad)  
  4241f2:	adc    bl,al
  4241f4:	mov    edi,edx
  4241f6:	sti    
  4241f7:	retf   
  4241f8:	pop    DWORD PTR [ebp-0x34]
  4241fb:	in     al,0x60
  4241fd:	sbb    BYTE PTR [ebp+0x2e0b3c9a],bl
  424203:	(bad)  
  424205:	pusha  
  424206:	(bad)  
  424208:	add    al,0x16
  42420a:	hlt    
  42420b:	imul   ecx,DWORD PTR ds:0x5115c98c,0x511a6ae1
  424215:	outs   dx,BYTE PTR ds:[esi]
  424216:	cmp    al,0x6
  424218:	fst    DWORD PTR [ebp-0x40]
  42421b:	(bad)  
  42421d:	mov    dl,0x70
  42421f:	inc    esi
  424220:	cmp    eax,DWORD PTR [eax+eiz*8]
  424223:	popa   
  424224:	dec    edi
  424225:	ins    DWORD PTR es:[edi],dx
  424226:	sahf   
  424227:	push   es
  424228:	xchg   ebx,eax
  424229:	dec    edx
  42422a:	jg     0x424219
  42422c:	(bad)  
  42422d:	int    0x30
  42422f:	sub    ebx,esp
  424231:	inc    edi
  424232:	xchg   ecx,eax
  424233:	arpl   WORD PTR [edx+0x56],cx
  424236:	mov    ebp,0x7c2c8bec
  42423b:	shr    ebp,cl
  42423d:	aam    0x5c
  42423f:	in     al,0xa8
  424241:	mov    ah,0x44
  424243:	or     ah,BYTE PTR [edx-0x484b9349]
  424249:	fld    QWORD PTR [eax-0x53]
  42424c:	xchg   ecx,eax
  42424d:	jo     0x424278
  42424f:	lock or edx,esp
  424252:	push   esi
  424253:	push   esp
  424254:	sub    esp,DWORD PTR [edi+0x3de5ed32]
  42425a:	repz xchg edi,eax
  42425c:	pushf  
  42425d:	cmp    eax,0x7df7d1a2
  424262:	xchg   edx,eax
  424263:	jmp    0xa76c6ecb
  424268:	push   esi
  424269:	(bad)
  42426c:	jmp    0x9424d98e
  424271:	xchg   DWORD PTR [ecx+0x1f],eax
  424274:	cdq    
  424275:	cmp    BYTE PTR [ecx],ch
  424277:	sub    ch,BYTE PTR [ebp+ebp*2+0x1856b1fd]
  42427e:	data16 xor bh,BYTE PTR [ecx-0x4200eb83]
  424285:	loopne 0x424218
  424287:	pusha  
  424288:	inc    edx
  424289:	or     DWORD PTR [edx-0x3a],ebx
  42428c:	cdq    
  42428d:	inc    ebp
  42428e:	retf   0xd6c0
  424291:	xor    ah,BYTE PTR [edx-0xc7ac90e]
  424297:	lds    esi,FWORD PTR [ebx-0x11]
  42429a:	popf   
  42429b:	outs   dx,DWORD PTR ds:[esi]
  42429c:	xchg   esi,eax
  42429d:	dec    ebp
  42429e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42429f:	das    
  4242a0:	pop    edi
  4242a1:	sbb    cl,ch
  4242a3:	add    bh,cl
  4242a5:	pusha  
  4242a6:	lods   al,BYTE PTR ds:[esi]
  4242a7:	test   dh,ch
  4242a9:	test   eax,0xc29f6332
  4242ae:	test   BYTE PTR [esp+eiz*2],bl
  4242b1:	xchg   edx,eax
  4242b2:	adc    eax,0x2e0ff9ab
  4242b7:	repnz lea ecx,[ebx-0x34a3beb9]
  4242be:	cwde   
  4242bf:	inc    eax
  4242c0:	(bad)  
  4242c1:	push   edi
  4242c2:	in     eax,dx
  4242c3:	mov    eax,ds:0x7b6eef4d
  4242c8:	inc    eax
  4242c9:	bound  esi,QWORD PTR [edx]
  4242cb:	xor    dh,BYTE PTR [edx]
  4242cd:	xor    BYTE PTR [ebx+0x79],bh
  4242d0:	ja     0x42433f
  4242d2:	nop
  4242d3:	push   ecx
  4242d4:	or     eax,0x67745334
  4242d9:	and    DWORD PTR [ebp+0x48e890a1],ebp
  4242df:	mul    DWORD PTR [ebp+0x7278ab92]
  4242e5:	(bad)  
  4242e6:	retf   0x86bf
  4242e9:	mov    WORD PTR [ecx-0x50],es
  4242ec:	pop    esp
  4242ed:	fnstenv [edi]
  4242ef:	push   eax
  4242f0:	ja     0x42428f
  4242f2:	sbb    eax,ebx
  4242f4:	adc    BYTE PTR [ecx-0x78],0x33
  4242f8:	retf   0xbecf
  4242fb:	pop    esp
  4242fc:	sub    dl,BYTE PTR [eax+0x71]
  4242ff:	test   al,0x88
  424301:	pop    ds
  424302:	pop    esp
  424303:	adc    al,0xf0
  424305:	fimul  WORD PTR [eax+0xe]
  424308:	or     DWORD PTR [ebp+0x2a],esi
  42430b:	loopne 0x4242d5
  42430d:	leave  
  42430e:	xchg   ebp,eax
  42430f:	push   cs
  424310:	pop    edi
  424311:	mov    bl,0x2a
  424313:	add    DWORD PTR [edi+eiz*4+0x2c461035],esi
  42431a:	(bad)  [eax+0x60]
  42431d:	cwde   
  42431e:	pop    eax
  42431f:	mov    ch,0x93
  424321:	jecxz  0x424302
  424323:	push   esp
  424324:	icebp  
  424325:	xor    DWORD PTR [ecx+0x38],eax
  424328:	mov    eax,0x7917eba5
  42432d:	mov    edi,0xe9f2bbe0
  424332:	xor    ah,cl
  424334:	inc    esp
  424335:	push   es
  424336:	dec    ebp
  424337:	dec    ebp
  424338:	lea    eax,[ebx+ecx*2+0x2c35b090]
  42433f:	stos   DWORD PTR es:[edi],eax
  424340:	push   eax
  424341:	dec    ecx
  424342:	cdq    
  424343:	adc    eax,0x29fe79aa
  424348:	popf   
  424349:	adc    ch,BYTE PTR [edi]
  42434b:	mov    eax,ds:0x590a6b6e
  424350:	xchg   ecx,ebx
  424352:	cdq    
  424353:	fimul  DWORD PTR [edx]
  424355:	pop    es
  424356:	inc    ecx
  424357:	out    0x51,al
  424359:	jne    0x4242df
  42435b:	xor    BYTE PTR [ecx],dh
  42435d:	mov    edx,DWORD PTR [edi-0x79]
  424360:	pop    esi
  424361:	aas    
  424362:	sahf   
  424363:	jno    0x42438c
  424365:	sub    edx,DWORD PTR [eax-0x5]
  424368:	pusha  
  424369:	or     BYTE PTR [eax+0x52],bh
  42436c:	inc    eax
  42436d:	pushf  
  42436e:	pop    esp
  42436f:	inc    eax
  424370:	jo     0x4243e5
  424372:	out    dx,al
  424373:	fwait
  424374:	push   esi
  424375:	push   eax
  424376:	xchg   ebp,eax
  424377:	retf   0x7d92
  42437a:	cdq    
  42437b:	push   0xffffffe9
  42437d:	inc    edx
  42437e:	imul   eax,DWORD PTR [ecx],0x6237b35c
  424384:	pop    ecx
  424385:	pop    ds
  424386:	sbb    esp,DWORD PTR [ebp-0x6c6403ac]
  42438c:	out    dx,al
  42438d:	out    dx,al
  42438e:	mov    ah,0x34
  424390:	mov    al,ds:0xd9a9e418
  424395:	push   0x1e
  424397:	(bad)  
  424399:	mov    edx,DWORD PTR [ebx-0x57f70d59]
  42439f:	or     DWORD PTR [edx+edx*8],0xffffffaf
  4243a3:	jb     0x4243ff
  4243a5:	ficom  DWORD PTR [edi+eax*4-0x138619ae]
  4243ac:	sub    DWORD PTR [esi+0x7f],eax
  4243af:	inc    esp
  4243b0:	sbb    eax,0x54e6757f
  4243b5:	jp     0x4243e6
  4243b7:	scas   eax,DWORD PTR es:[edi]
  4243b8:	ret    
  4243b9:	pop    esi
  4243ba:	cmp    eax,0x4aa1477b
  4243bf:	or     dh,BYTE PTR [edx-0x26]
  4243c2:	iret   
  4243c3:	std    
  4243c4:	lahf   
  4243c5:	xchg   ebx,eax
  4243c6:	xor    eax,0xab3b63f9
  4243cb:	sub    eax,0x1e255ec5
  4243d0:	neg    DWORD PTR [ebp-0x17]
  4243d3:	jnp    0x424409
  4243d5:	rcl    ah,1
  4243d7:	call   0x2e70:0xad2c0f9
  4243de:	(bad)  
  4243df:	shl    DWORD PTR [edx],cl
  4243e1:	inc    eax
  4243e2:	pop    ebx
  4243e3:	sub    DWORD PTR [ebp-0x516119ac],ebp
  4243e9:	push   ebp
  4243ea:	mov    edi,0x450a667d
  4243ef:	push   0xffffffe8
  4243f1:	inc    ecx
  4243f2:	jg     0x42441c
  4243f4:	cmp    ch,BYTE PTR [ebx-0xf]
  4243f7:	push   0x4d
  4243f9:	in     eax,0x99
  4243fb:	dec    DWORD PTR [esi-0x2f300403]
  424401:	int    0xf
  424403:	sub    eax,0xc1ecf4b8
  424408:	pop    ecx
  424409:	loope  0x42442f
  42440b:	mov    WORD PTR ds:0x622671f0,es
  424411:	dec    esp
  424412:	mov    esi,DWORD PTR ss:[ebx]
  424415:	cmp    edi,DWORD PTR [eax+0x5a]
  424418:	adc    ch,BYTE PTR [ebp-0x322598b5]
  42441e:	sahf   
  42441f:	add    BYTE PTR [eax],al
  424421:	add    BYTE PTR [edx+ebx*8],ch
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	jmp    0x4243b8
  424430:	adc    dh,BYTE PTR [edi]
  424432:	je     0x4243f1
  424434:	add    DWORD PTR [eax],eax
  424436:	cmc    
  424437:	add    al,0x0
  424439:	add    bl,bl
  42443b:	xchg   esp,eax
  42443c:	adc    dh,BYTE PTR [edx+0x4c]
  42443f:	hlt    
  424440:	xchg   edx,eax
  424441:	add    ecx,DWORD PTR ds:0x6b358371
  424447:	and    DWORD PTR [ebp+0x6647d482],esp
  42444d:	and    al,0xb2
  42444f:	dec    esi
  424450:	inc    ebp
  424451:	cmp    DWORD PTR [edx],0x5d
  424454:	cmp    DWORD PTR [esi],ecx
  424456:	fwait
  424457:	adc    bl,al
  424459:	repz es jecxz 0x4243ed
  42445d:	aad    0x26
  42445f:	push   ds
  424460:	or     eax,0x5d9ab2b0
  424465:	out    0xcc,al
  424467:	cs comiss xmm4,xmm6
  42446b:	or     bh,ch
  42446d:	div    DWORD PTR [ecx-0x2c]
  424470:	jns    0x424403
  424472:	fist   DWORD PTR [esi+0x65c731f8]
  424478:	mov    ecx,0xad57f156
  42447d:	xchg   ebx,eax
  42447e:	lods   eax,DWORD PTR ds:[esi]
  42447f:	dec    edi
  424480:	bound  esi,QWORD PTR [edi-0x1d]
  424483:	jge    0x4244e6
  424485:	pop    ebx
  424486:	pop    eax
  424487:	pop    esi
  424488:	ja     0x4244fe
  42448a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42448b:	push   edi
  42448c:	les    ebx,FWORD PTR [ebx]
  42448e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42448f:	lds    esp,FWORD PTR [edx-0x67c94f1d]
  424495:	js     0x42441f
  424497:	lea    ebx,[esi]
  424499:	loope  0x4244b0
  42449b:	lods   al,BYTE PTR ds:[esi]
  42449c:	xor    edi,ebp
  42449e:	mov    ch,0xb3
  4244a0:	pop    ebx
  4244a1:	jb     0x424451
  4244a3:	leave  
  4244a4:	in     al,dx
  4244a5:	(bad)  [esi-0x3d38cc5e]
  4244ab:	daa    
  4244ac:	jmp    0x606e33eb
  4244b1:	aas    
  4244b2:	xor    al,0x2c
  4244b4:	rol    DWORD PTR [eax+0x928718a],0x71
  4244bb:	jb     0x4244d1
  4244bd:	dec    esi
  4244be:	cs push edx
  4244c0:	fild   DWORD PTR ds:0x23e52ca2
  4244c6:	rcr    DWORD PTR [ebx],1
  4244c8:	dec    ebp
  4244c9:	outs   dx,BYTE PTR ds:[esi]
  4244ca:	push   es
  4244cb:	fcom   QWORD PTR [edi+0x2f7a89b1]
  4244d1:	dec    edi
  4244d2:	js     0x4244b3
  4244d4:	adc    bh,BYTE PTR [esi+0x23]
  4244d7:	ror    DWORD PTR [ebx+eiz*8],0xe8
  4244db:	mov    BYTE PTR [edi],0xcb
  4244de:	lea    edx,[edx+0x22]
  4244e1:	jbe    0x424526
  4244e3:	jae    0x424471
  4244e5:	push   ebx
  4244e6:	es pop es
  4244e8:	imul   ebp,DWORD PTR [edi],0x12
  4244eb:	enter  0x2575,0x80
  4244ef:	add    edi,esp
  4244f1:	sub    DWORD PTR [ecx-0x4b],ecx
  4244f4:	jmp    0x6c86d120
  4244f9:	inc    eax
  4244fa:	push   ebp
  4244fb:	pop    ebx
  4244fc:	push   esp
  4244fd:	jle    0x424578
  4244ff:	jecxz  0x4244e7
  424501:	mov    DWORD PTR [edi],eax
  424503:	mov    edi,0x485f0df4
  424508:	xor    eax,0xc138270b
  42450d:	clc    
  42450e:	out    dx,eax
  42450f:	xchg   ecx,eax
  424510:	mov    ah,0x11
  424512:	xor    dl,BYTE PTR [edi]
  424514:	into   
  424515:	(bad)  
  424516:	jmp    0xd614:0xbc45a235
  42451d:	cmp    ch,BYTE PTR [esi+0x2f42ce88]
  424523:	jnp    0x424564
  424525:	cld    
  424526:	xor    DWORD PTR [ebx-0xa],esi
  424529:	popa   
  42452a:	xor    cl,BYTE PTR ss:[edx-0x119819ca]
  424531:	fistp  DWORD PTR es:[edx]
  424534:	retf   
  424535:	lock sbb DWORD PTR [ebx+edx*2-0x4e19d58b],edx
  42453d:	xor    ch,BYTE PTR [eax]
  42453f:	popa   
  424540:	or     BYTE PTR [ebx],dl
  424542:	mov    bh,0x5b
  424544:	adc    eax,0x45ebc808
  424549:	mov    ebp,0xedd9dc80
  42454e:	sbb    BYTE PTR [esi+0x6e],bh
  424551:	cmp    eax,0xb9cb2973
  424556:	adc    bl,bh
  424558:	cwde   
  424559:	inc    ebp
  42455a:	aas    
  42455b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42455c:	shr    bl,1
  42455e:	push   esi
  42455f:	aam    0xd9
  424561:	mov    ds:0x58fb3f5b,eax
  424566:	int3   
  424567:	add    BYTE PTR [eax],0xfa
  42456a:	add    ebp,DWORD PTR [ebx+esi*2+0x52466d5d]
  424571:	xor    eax,DWORD PTR [ebp+0x14bb666d]
  424577:	mov    ecx,0xc0d4ebd8
  42457c:	mov    esp,0x4c124fa1
  424581:	ret    
  424582:	and    bl,BYTE PTR [ebp-0x72d15ffb]
  424588:	jbe    0x424542
  42458a:	in     eax,0x54
  42458c:	int    0xd1
  42458e:	cmp    eax,0xef95863e
  424593:	add    al,0xf0
  424595:	lds    ebx,FWORD PTR [edx-0x63731be3]
  42459b:	(bad)
  42459f:	out    dx,eax
  4245a0:	pop    ds
  4245a1:	icebp  
  4245a2:	sti    
  4245a3:	aad    0x87
  4245a5:	dec    ecx
  4245a6:	mov    ch,0x5a
  4245a8:	ins    DWORD PTR es:[edi],dx
  4245a9:	and    esp,DWORD PTR [ebp-0x5b6d25e8]
  4245af:	sub    ecx,DWORD PTR [ecx+edi*1-0x217108d5]
  4245b6:	jmp    0x424556
  4245b8:	std    
  4245b9:	into   
  4245ba:	sbb    BYTE PTR [ebx-0x6dc4db2a],bh
  4245c0:	in     eax,dx
  4245c1:	mov    ebx,0xed129070
  4245c6:	inc    edx
  4245c7:	adc    DWORD PTR [ecx+0x1],esi
  4245ca:	fldcw  WORD PTR [edi+0x4878cc55]
  4245d0:	jns    0x424632
  4245d2:	add    bh,dh
  4245d4:	fs push cs
  4245d6:	shl    DWORD PTR ds:0xac8cfdc2,0xc5
  4245dd:	fisub  WORD PTR [esi-0x13]
  4245e0:	sbb    BYTE PTR [edi+0x1c],0x6f
  4245e4:	shl    BYTE PTR [ebp+0x36bdeebf],cl
  4245ea:	mov    ch,0x84
  4245ec:	sub    ecx,DWORD PTR cs:[ecx]
  4245ef:	in     al,dx
  4245f0:	mov    dh,0xa4
  4245f2:	cmp    eax,DWORD PTR [ecx]
  4245f4:	xchg   ebp,eax
  4245f5:	jno    0x4245ff
  4245f7:	fs sbb ch,BYTE PTR fs:[edi]
  4245fb:	cmp    edx,DWORD PTR [esi+0x39]
  4245fe:	jecxz  0x424670
  424600:	scas   al,BYTE PTR es:[edi]
  424601:	test   al,0x59
  424603:	push   0x6f
  424605:	pop    ebp
  424606:	shr    edi,cl
  424608:	adc    esp,DWORD PTR [edx-0x188293bf]
  42460e:	sbb    ax,0xbbcb
  424612:	xchg   esp,eax
  424613:	repz mov WORD PTR [ebp-0x63],es
  424617:	pop    edx
  424618:	xor    ch,BYTE PTR [esi]
  42461a:	sbb    bl,al
  42461c:	leave  
  42461d:	and    eax,0x1f0d4750
  424622:	cwde   
  424623:	xor    al,0xea
  424625:	jo     0x4245b9
  424627:	imul   DWORD PTR [ebx+ecx*4-0x559b2bfe]
  42462e:	into   
  42462f:	or     DWORD PTR ds:[esi],ebp
  424632:	sub    dh,BYTE PTR [edi]
  424634:	pop    esi
  424635:	jne    0x424633
  424637:	pop    ecx
  424638:	adc    esp,DWORD PTR [eax-0x2a]
  42463b:	shl    ebp,0xae
  42463e:	jmp    0x6e508e36
  424643:	jmp    0x424671
  424645:	jmp    0xf850:0x40d7
  42464b:	and    dx,bx
  42464e:	scas   eax,DWORD PTR es:[edi]
  42464f:	mov    bh,BYTE PTR [ebx]
  424651:	scas   eax,DWORD PTR es:[edi]
  424652:	arpl   WORD PTR [ecx+0x18],bx
  424655:	mov    al,0xd0
  424657:	fst    QWORD PTR [esi]
  424659:	(bad)  
  42465a:	jno    0x424645
  42465c:	sbb    DWORD PTR [ebx+0x33d508e1],esp
  424662:	cmc    
  424663:	mov    dl,0xe7
  424665:	sbb    ecx,ebx
  424667:	inc    ebp
  424668:	fstp   QWORD PTR [ecx-0x7505cc1d]
  42466e:	bound  ecx,QWORD PTR [esi]
  424670:	mov    dh,0x3
  424672:	mov    dh,0xef
  424674:	jbe    0x4246d6
  424676:	jle    0x424676
  424678:	pop    DWORD PTR [esi+0x30]
  42467b:	mov    edi,0xb52fff7e
  424680:	and    eax,0x5228f1c1
  424685:	xchg   esi,eax
  424686:	mov    eax,ds:0x63ca531f
  42468b:	lea    eax,ds:0xe83ad001
  424691:	mov    ebp,0x651711db
  424696:	xor    eax,0xed81a813
  42469b:	xchg   edi,eax
  42469c:	mov    DWORD PTR [ebx-0x32ccb4db],0xf5dbd39e
  4246a6:	jle    0x42471d
  4246a8:	call   0x2ecb:0xc14f631d
  4246af:	pop    eax
  4246b0:	dec    edx
  4246b1:	repnz inc ebp
  4246b3:	push   ebp
  4246b4:	mov    edi,0x689ebab0
  4246b9:	mov    dh,0x9d
  4246bb:	xchg   ebx,eax
  4246bc:	mov    al,0xed
  4246be:	retf   0xdf4d
  4246c1:	icebp  
  4246c2:	cmp    edx,DWORD PTR [esi-0x5a]
  4246c5:	mov    dl,BYTE PTR [edx]
  4246c7:	popf   
  4246c8:	std    
  4246c9:	xchg   ebx,eax
  4246ca:	sbb    bh,BYTE PTR [edx-0x30]
  4246cd:	add    DWORD PTR [ebx],0xb303806d
  4246d3:	xchg   DWORD PTR [edx-0x349ea557],edi
  4246d9:	mov    ch,0x34
  4246db:	mov    edi,0xb4593172
  4246e0:	sub    dh,BYTE PTR [ebx]
  4246e2:	mov    dh,0x3f
  4246e4:	sub    BYTE PTR [esi-0x747baffd],0xda
  4246eb:	iret   
  4246ec:	and    eax,0x146ad870
  4246f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246f2:	add    bh,BYTE PTR [edi-0x33f60354]
  4246f8:	aaa    
  4246f9:	test   BYTE PTR [esi-0x4ea32bc9],al
  4246ff:	fisubr WORD PTR [eax+ecx*1-0x1fd1bca4]
  424706:	lahf   
  424707:	or     al,0x24
  424709:	pop    eax
  42470a:	aaa    
  42470b:	leave  
  42470c:	pop    ebx
  42470d:	dec    edi
  42470e:	inc    ebp
  42470f:	pop    edi
  424710:	pop    eax
  424711:	xchg   ecx,eax
  424712:	call   0xd7685d20
  424717:	xor    cl,BYTE PTR [edx]
  424719:	mov    eax,ds:0xe5f772dc
  42471e:	jnp    0x4246a7
  424720:	retf   
  424721:	mov    DWORD PTR [ecx-0x27],eax
  424724:	jp     0x4246b5
  424726:	les    eax,FWORD PTR [edi+0x11]
  424729:	dec    edi
  42472a:	stos   DWORD PTR es:[edi],eax
  42472b:	xchg   esi,eax
  42472c:	mov    ebx,0xb8d5176
  424731:	mov    bl,0xc3
  424733:	pop    ds
  424734:	cmp    ch,BYTE PTR [edx+0x284549e8]
  42473a:	loop   0x424774
  42473c:	(bad)  
  42473d:	enter  0x35d2,0x73
  424741:	cwde   
  424742:	cmc    
  424743:	and    bh,BYTE PTR [ecx-0x77]
  424746:	adc    eax,0x89ee85fe
  42474b:	xor    BYTE PTR [edi-0x35],dh
  42474e:	ss dec eax
  424750:	inc    eax
  424751:	retf   
  424752:	test   eax,0x43f11b41
  424757:	sub    ebx,edx
  424759:	hlt    
  42475a:	nop
  42475b:	cwde   
  42475c:	mov    edi,0xd9be7322
  424761:	mov    ds:0x85d88ec7,al
  424766:	pushf  
  424767:	jno    0x42476d
  424769:	aad    0xd3
  42476b:	jo     0x42475e
  42476d:	adc    BYTE PTR [ebp+0x44e4afa4],bl
  424773:	xchg   ebp,eax
  424774:	test   bh,bh
  424776:	cmp    al,BYTE PTR [edi]
  424778:	(bad)  
  424779:	test   BYTE PTR [esi-0x883d349],cl
  42477f:	(bad)  
  424780:	sbb    eax,DWORD PTR [esi]
  424782:	outs   dx,BYTE PTR ds:[esi]
  424783:	lock cs mov dh,0x9e
  424787:	jo     0x424808
  424789:	lock xor edi,DWORD PTR [ebx+0x55]
  42478d:	cmp    BYTE PTR [eax+0x21],bl
  424790:	rcr    bh,0x95
  424793:	or     BYTE PTR [ebp+0x45],bh
  424796:	fldenv [ecx]
  424798:	xchg   ebp,eax
  424799:	add    ah,al
  42479b:	cmp    eax,0xf59cb46c
  4247a0:	scas   eax,DWORD PTR es:[edi]
  4247a1:	fwait
  4247a2:	mov    bh,0x8b
  4247a4:	add    al,0x92
  4247a6:	cmp    BYTE PTR [ecx],0xc6
  4247a9:	call   0x918a:0x8a3e07a6
  4247b0:	jbe    0x424760
  4247b2:	loope  0x4247d5
  4247b4:	jb     0x42481d
  4247b6:	mov    edi,0x6a70be3a
  4247bb:	in     eax,0x29
  4247bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247be:	(bad)  
  4247bf:	bound  esp,QWORD PTR [ecx]
  4247c1:	lods   eax,DWORD PTR ds:[esi]
  4247c2:	or     eax,0x387ce5d0
  4247c7:	xchg   ebp,eax
  4247c8:	jbe    0x42477f
  4247ca:	stos   BYTE PTR es:[edi],al
  4247cb:	popa   
  4247cc:	mov    bl,0x9
  4247ce:	lds    eax,FWORD PTR [edi-0x48]
  4247d1:	or     ah,bl
  4247d3:	cmp    eax,0xe8be9be1
  4247d8:	or     dh,BYTE PTR ds:0x2ea7abbe
  4247de:	add    eax,0xc54dbca4
  4247e3:	mov    bh,0xe8
  4247e5:	stos   DWORD PTR es:[edi],eax
  4247e6:	push   ds
  4247e7:	adc    bl,BYTE PTR [esi+0x49a0d67d]
  4247ed:	lods   eax,DWORD PTR ds:[esi]
  4247ee:	ret    0x3716
  4247f1:	lock push edx
  4247f3:	popf   
  4247f4:	add    eax,0x78742134
  4247f9:	fnstenv [ecx+0x5e]
  4247fc:	jbe    0x424857
  4247fe:	pop    ds
  4247ff:	in     al,0xa
  424801:	mov    ?,ecx
  424803:	les    edi,FWORD PTR [ebp-0x3601f1f2]
  424809:	ins    DWORD PTR es:[edi],dx
  42480a:	aam    0x23
  42480c:	sbb    ch,ah
  42480e:	push   cs
  42480f:	jno    0x424845
  424811:	mov    edi,edx
  424813:	sahf   
  424814:	mov    ebx,DWORD PTR [ecx]
  424816:	retf   0xb169
  424819:	dec    ebx
  42481a:	mov    esp,0x274d4c0
  42481f:	enter  0x6922,0xde
  424823:	daa    
  424824:	xchg   edi,eax
  424825:	mov    bx,0x25f7
  424829:	push   esp
  42482a:	(bad)  [ebp+0x50]
  42482d:	or     eax,0x3147ec0d
  424832:	sub    BYTE PTR [ebx-0x63],al
  424835:	mov    ds:0x9269cd42,al
  42483a:	aam    0x3f
  42483c:	jmp    0x4248bd
  42483e:	loopne 0x4247cd
  424840:	sbb    dl,al
  424842:	sbb    al,0xf9
  424844:	cmp    al,0x17
  424846:	sbb    BYTE PTR ss:[edx+0x75],0xc1
  42484b:	and    esp,DWORD PTR [esi+0x212ae233]
  424851:	sbb    ah,BYTE PTR [ebx-0x6d1d4afb]
  424857:	adc    ch,0x8b
  42485a:	fst    DWORD PTR [eax]
  42485c:	int    0x40
  42485e:	xchg   esi,eax
  42485f:	rcl    BYTE PTR [eax+0x78d8c5c7],cl
  424865:	xchg   ebx,eax
  424866:	outs   dx,BYTE PTR ds:[esi]
  424867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424868:	mov    bh,0x56
  42486a:	ja     0x424853
  42486c:	das    
  42486d:	iret   
  42486e:	mov    DWORD PTR ds:0x871432ad,esi
  424874:	mov    cl,0xcd
  424876:	rcl    BYTE PTR [ebx+edi*2],0x53
  42487a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42487b:	mov    dl,0x72
  42487d:	bound  esp,QWORD PTR [esi-0x54737e3f]
  424883:	pop    es
  424884:	mov    edi,0x7d10b805
  424889:	dec    eax
  42488a:	pop    ss
  42488b:	pop    ebx
  42488c:	(bad)  
  42488d:	jmp    0x95e:0xb08ef1a2
  424894:	inc    edi
  424895:	pop    es
  424896:	(bad)  
  424897:	xlat   BYTE PTR ds:[ebx]
  424898:	addr16 dec ebx
  42489a:	pop    ebp
  42489b:	cld    
  42489c:	arpl   WORD PTR [edx],cx
  42489e:	arpl   dx,bp
  4248a0:	hlt    
  4248a1:	sbb    eax,0x463f60f4
  4248a6:	sbb    dl,dh
  4248a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248a9:	add    eax,0x6cb8dde0
  4248ae:	mov    edi,0xa9d9bfbe
  4248b3:	inc    ecx
  4248b4:	sar    DWORD PTR [ebx-0x2e048e92],0x97
  4248bb:	dec    ebx
  4248bc:	add    BYTE PTR [ebp+0x11755c96],al
  4248c2:	pusha  
  4248c3:	(bad)  
  4248c4:	(bad)
  4248c8:	inc    esp
  4248c9:	call   0x231407fc
  4248ce:	xor    BYTE PTR ds:0xe18f8d0,bh
  4248d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248d5:	out    dx,al
  4248d6:	xchg   esp,eax
  4248d7:	mov    gs,WORD PTR [ebp+ebp*4-0x1]
  4248db:	xor    BYTE PTR [ebp-0x2b],0x4f
  4248df:	add    al,0x83
  4248e1:	dec    edi
  4248e2:	xchg   ecx,eax
  4248e3:	sub    al,BYTE PTR [ebx]
  4248e5:	push   ecx
  4248e6:	pop    ds
  4248e7:	pop    ebp
  4248e8:	ds mov ah,0x61
  4248eb:	fidivr DWORD PTR [edi+edx*1-0x5c3e0934]
  4248f2:	int    0x7c
  4248f4:	pushf  
  4248f5:	fmul   QWORD PTR [edx]
  4248f7:	xchg   ecx,eax
  4248f8:	mov    dl,0x5e
  4248fa:	shl    esi,0xf6
  4248fd:	push   edi
  4248fe:	je     0x4248f7
  424900:	cmp    al,ah
  424902:	sub    edi,DWORD PTR [edi-0x1f]
  424905:	pop    ebp
  424906:	and    dl,dl
  424908:	scas   eax,DWORD PTR es:[edi]
  424909:	adc    ebx,DWORD PTR [edi+0x16]
  42490c:	in     al,dx
  42490d:	stc    
  42490e:	int    0xa6
  424910:	sbb    BYTE PTR [edi+eiz*2+0x3181de0],bh
  424917:	push   ss
  424918:	jge    0x424960
  42491a:	(bad)  [ecx]
  42491c:	mov    BYTE PTR [ebx],dl
  42491e:	xor    DWORD PTR [esi],edx
  424920:	out    0x13,al
  424922:	cmp    BYTE PTR [eax],ah
  424924:	pusha  
  424925:	jbe    0x424923
  424927:	adc    BYTE PTR [ebp+0x6c],bh
  42492a:	out    0x4f,eax
  42492c:	xchg   ebx,eax
  42492d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42492f:	add    BYTE PTR [eax],al
  424931:	add    BYTE PTR [ebx],dl
  424933:	lea    ebp,[ecx]
  424935:	imul   edi,DWORD PTR [edi+0x23fd53ef],0x6b
  42493c:	fcmovnb st,st(6)
  42493e:	(bad)  
  42493f:	jmp    0x42496f
  424941:	adc    ebp,DWORD PTR [ecx-0x3e]
  424944:	add    DWORD PTR [eax],eax
  424946:	cmc    
  424947:	add    al,0x0
  424949:	add    BYTE PTR [ebx],ch
  42494b:	fcomip st,st(1)
  42494d:	rol    BYTE PTR [ecx-0x60aa5d6c],0xc0
  424954:	test   BYTE PTR [esi+0xef5479e],dh
  42495a:	jne    0x4248dc
  42495c:	call   0x5959:0xab806f2a
  424963:	je     0x424944
  424965:	xchg   esi,eax
  424966:	in     eax,0x28
  424968:	push   cs
  424969:	das    
  42496a:	jb     0x42495f
  42496c:	popf   
  42496d:	mov    esi,0xc62f253d
  424972:	scas   eax,DWORD PTR es:[di]
  424974:	cmp    ebx,DWORD PTR [ebx-0x488d1046]
  42497a:	push   ebp
  42497b:	jg     0x42494f
  42497d:	pop    eax
  42497e:	inc    edx
  42497f:	push   cs
  424980:	mov    eax,ds:0x7fb37f5a
  424985:	mov    eax,0x4e7f2bc5
  42498a:	mov    esi,0x3f780b17
  42498f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424990:	retf   
  424991:	stos   BYTE PTR es:[edi],al
  424992:	dec    edx
  424993:	xchg   ebp,eax
  424994:	mov    esp,0xd6167819
  424999:	je     0x4249d4
  42499b:	jmp    0x988:0x74ec41a7
  4249a2:	inc    edx
  4249a3:	mov    bl,0x81
  4249a5:	aaa    
  4249a6:	xchg   edx,eax
  4249a7:	mov    esp,DWORD PTR [edi]
  4249a9:	call   0xb334:0xed862112
  4249b0:	cli    
  4249b1:	retf   0x548d
  4249b4:	sub    bh,BYTE PTR [esi]
  4249b6:	sub    eax,0xb48b573d
  4249bb:	mov    ds:0x52ee83e3,al
  4249c0:	shr    DWORD PTR [eax-0x35dbe176],0x35
  4249c7:	shl    cl,cl
  4249c9:	jns    0x4249bb
  4249cb:	jecxz  0x424a00
  4249cd:	inc    ebx
  4249ce:	pop    edi
  4249cf:	sbb    BYTE PTR [eax],0x63
  4249d2:	popa   
  4249d3:	scas   al,BYTE PTR es:[edi]
  4249d4:	(bad)  
  4249d6:	lds    ebx,FWORD PTR [ecx+eax*1]
  4249d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249da:	and    bl,dl
  4249dc:	pop    ecx
  4249dd:	or     eax,0x3c
  4249e0:	add    ch,BYTE PTR [ebp+ebp*2+0x19559eb6]
  4249e7:	loope  0x424972
  4249e9:	mov    gs,WORD PTR [ebp+0x3]
  4249ec:	push   edx
  4249ed:	lods   eax,DWORD PTR ds:[esi]
  4249ee:	adc    al,0x92
  4249f0:	ins    BYTE PTR es:[edi],dx
  4249f1:	xchg   ebp,eax
  4249f2:	lods   eax,DWORD PTR ds:[esi]
  4249f3:	stos   BYTE PTR es:[edi],al
  4249f4:	or     DWORD PTR [ebx],0x28
  4249f7:	fs leave 
  4249f9:	call   0x9099:0x971f3513
  424a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a01:	push   esp
  424a02:	jne    0x424a64
  424a04:	mov    edi,0xba14646b
  424a09:	dec    edi
  424a0a:	jae    0x4249be
  424a0c:	sahf   
  424a0d:	loope  0x424a76
  424a0f:	jo     0x424a19
  424a11:	inc    eax
  424a12:	(bad)  
  424a14:	stc    
  424a15:	ja     0x4249ce
  424a17:	(bad)  
  424a18:	cmp    BYTE PTR [esi-0x41fc6c1e],al
  424a1e:	in     al,0xe0
  424a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a21:	hlt    
  424a22:	test   DWORD PTR [ebp+0x51395298],eax
  424a28:	and    DWORD PTR [edx],edx
  424a2a:	pop    ss
  424a2b:	add    DWORD PTR [edi],edi
  424a2d:	cwde   
  424a2e:	(bad)  
  424a2f:	call   0x71fd:0xb3a9e74a
  424a36:	lds    ebp,FWORD PTR [ebp-0x28cd9f3d]
  424a3c:	or     DWORD PTR [ecx-0x73],0x7b
  424a40:	fcmovnb st,st(6)
  424a42:	leave  
  424a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a44:	rcr    DWORD PTR [ebx-0x62],cl
  424a47:	js     0x424a75
  424a49:	sbb    dl,BYTE PTR [eax]
  424a4b:	in     eax,dx
  424a4c:	adc    BYTE PTR [edx-0x3e309508],0x9e
  424a53:	dec    edx
  424a54:	push   ebx
  424a55:	(bad)  [ebx+esi*8+0x67]
  424a59:	mov    DWORD PTR [ebp-0x18970455],esp
  424a5f:	sub    DWORD PTR [edx],edx
  424a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a62:	cmp    BYTE PTR [ebx],bh
  424a64:	and    al,0x3d
  424a66:	shl    ch,1
  424a68:	lea    esi,[edx+0x3b]
  424a6b:	dec    edx
  424a6c:	fdiv   st(6),st
  424a6e:	fisub  DWORD PTR [ecx]
  424a70:	sbb    esp,DWORD PTR [ebx+eax*2]
  424a73:	jmp    0x4973:0xaf1cf63
  424a7a:	out    dx,al
  424a7b:	ja     0x424a2f
  424a7d:	rol    BYTE PTR [ebx-0x43],cl
  424a80:	into   
  424a81:	push   ss
  424a82:	dec    edi
  424a83:	cmp    dl,BYTE PTR [edx+0x3f54dab7]
  424a89:	cmp    eax,0x93bac75
  424a8e:	jns    0x424a5e
  424a90:	jno    0x424a46
  424a92:	test   DWORD PTR [ecx+0x17],edi
  424a95:	test   DWORD PTR [eax],eax
  424a97:	dec    ecx
  424a98:	mov    esp,0xc552b3bf
  424a9d:	dec    edx
  424a9e:	adc    BYTE PTR [eax+0x9],0xb0
  424aa2:	rol    DWORD PTR [ecx+edx*8-0x67703dc8],1
  424aa9:	mov    eax,0xcba8f6e3
  424aae:	call   0x52174599
  424ab3:	cmp    eax,0x83405256
  424ab8:	xchg   DWORD PTR [edx+0x33],ecx
  424abb:	fnstenv [ebx+eax*2-0x62]
  424abf:	int3   
  424ac0:	dec    ebp
  424ac1:	inc    esp
  424ac2:	retf   0x4c4b
  424ac5:	adc    edi,ebp
  424ac7:	push   edx
  424ac8:	adc    BYTE PTR [ebx],dh
  424aca:	aam    0x9d
  424acc:	stos   BYTE PTR es:[edi],al
  424acd:	leave  
  424ace:	inc    BYTE PTR [ebp-0x15]
  424ad1:	dec    esp
  424ad2:	fadd   QWORD PTR [ebx]
  424ad4:	pushf  
  424ad5:	adc    eax,eax
  424ad7:	fst    QWORD PTR [ebx-0x7319e649]
  424add:	imul   ecx,esp,0x82f3c763
  424ae3:	bound  ebx,QWORD PTR [ebx-0x2e6f77c7]
  424ae9:	(bad)
  424aec:	in     al,dx
  424aed:	ss inc edi
  424aef:	scas   eax,DWORD PTR es:[edi]
  424af0:	inc    edx
  424af1:	xor    al,BYTE PTR [ecx]
  424af3:	ins    DWORD PTR es:[edi],dx
  424af4:	cmp    al,0x3e
  424af6:	cmp    eax,0x78de7fe2
  424afb:	hlt    
  424afc:	dec    ebp
  424afd:	and    al,0x7
  424aff:	sub    esp,DWORD PTR [ecx-0x4e]
  424b02:	or     eax,0x2730ba9d
  424b07:	xchg   esp,eax
  424b08:	sub    DWORD PTR [edx+0x41],esi
  424b0b:	mov    ch,0xa5
  424b0d:	lahf   
  424b0e:	fild   WORD PTR [ebp-0x80]
  424b11:	repz mov bl,BYTE PTR [edx+0x62]
  424b15:	inc    ecx
  424b16:	mov    ds:0xa1471228,eax
  424b1b:	push   es
  424b1c:	mov    al,0x84
  424b1e:	outs   dx,BYTE PTR ds:[esi]
  424b1f:	dec    ebp
  424b20:	adc    ch,ah
  424b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b23:	daa    
  424b24:	and    eax,ebp
  424b26:	pop    esp
  424b27:	pusha  
  424b28:	jmp    0xe7db:0xd8c5abd6
  424b2f:	mov    ch,0x41
  424b31:	fld    DWORD PTR [ebp+0x4ddcfa60]
  424b37:	cmp    edx,DWORD PTR [esi]
  424b39:	add    eax,0x79bac08b
  424b3e:	jbe    0x424aca
  424b40:	scas   eax,DWORD PTR es:[edi]
  424b41:	leave  
  424b42:	xor    edx,ebx
  424b44:	mov    ebp,0xbace616a
  424b49:	cld    
  424b4a:	cmp    esp,DWORD PTR [edi+eiz*4+0x6]
  424b4e:	push   ebx
  424b4f:	sub    al,0x68
  424b51:	lahf   
  424b52:	push   ds
  424b53:	jp     0x424b67
  424b55:	je     0x424b8b
  424b57:	xchg   BYTE PTR [edx+0x31],ch
  424b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b5b:	(bad)  
  424b5c:	shr    BYTE PTR [ecx],0x76
  424b5f:	pop    ecx
  424b60:	sub    eax,edx
  424b62:	pop    ds
  424b63:	mov    esi,0xbcbc14ea
  424b68:	pop    ds
  424b69:	mov    bl,0x1
  424b6b:	and    ebp,DWORD PTR [ecx-0x1303ca75]
  424b71:	inc    ecx
  424b72:	(bad)  
  424b74:	add    BYTE PTR [ebx+eiz*1-0x16],cl
  424b78:	stos   BYTE PTR es:[edi],al
  424b79:	cmp    WORD PTR [ebx],ax
  424b7c:	retf   0x5e3
  424b7f:	js     0x424bec
  424b81:	sub    DWORD PTR [esp+ebp*8+0x4dbf65bf],edx
  424b88:	dec    ebp
  424b89:	bound  esp,QWORD PTR [edx]
  424b8b:	jne    0x424b9c
  424b8d:	mov    bl,0x93
  424b8f:	call   0x6675:0x180e1bd7
  424b96:	jge    0x424b36
  424b98:	ror    ebp,cl
  424b9a:	js     0x424b7e
  424b9c:	add    WORD PTR [ebp+0x3085d29e],di
  424ba3:	iret   
  424ba4:	xlat   BYTE PTR ds:[ebx]
  424ba5:	add    BYTE PTR [edx-0x69],dl
  424ba8:	and    DWORD PTR [edx-0x13],edx
  424bab:	jmp    0x2c204647
  424bb0:	mov    ebp,0x1ff570d2
  424bb5:	mov    DWORD PTR [ecx-0x47e2b9e1],ecx
  424bbb:	in     al,dx
  424bbc:	inc    edi
  424bbd:	inc    esp
  424bbe:	xor    BYTE PTR [edx],0x28
  424bc1:	inc    edx
  424bc2:	ficom  DWORD PTR [edi+0x32f83a94]
  424bc9:	out    dx,eax
  424bca:	imul   ecx,eax,0x52
  424bcd:	pop    edx
  424bce:	fstp   TBYTE PTR [ecx+0x5d]
  424bd1:	dec    ecx
  424bd2:	xchg   ecx,eax
  424bd3:	test   DWORD PTR [ebx],eax
  424bd5:	mov    edx,0xac11d5a9
  424bda:	sbb    cl,BYTE PTR [eax-0x55]
  424bdd:	push   ds
  424bde:	cmp    dl,bh
  424be0:	push   edi
  424be1:	pop    ecx
  424be2:	ins    BYTE PTR es:[edi],dx
  424be3:	sbb    eax,0x6b62fc91
  424be8:	js     0x424bc6
  424bea:	mov    dh,0x25
  424bec:	jne    0x424c5e
  424bee:	and    edx,eax
  424bf0:	inc    ebx
  424bf1:	lods   al,BYTE PTR ds:[esi]
  424bf2:	stos   DWORD PTR es:[edi],eax
  424bf3:	xchg   esp,eax
  424bf4:	dec    ebp
  424bf5:	aam    0x9e
  424bf7:	dec    esi
  424bf8:	jno    0x424bae
  424bfa:	pop    ebx
  424bfb:	cmp    DWORD PTR ds:[edx-0x9],esi
  424bff:	stc    
  424c00:	xchg   esp,eax
  424c01:	fcomp  DWORD PTR [eax+0x4dfc8777]
  424c07:	iret   
  424c08:	ins    BYTE PTR es:[edi],dx
  424c09:	pop    ds
  424c0a:	popf   
  424c0b:	ret    0xbcc0
  424c0e:	cmp    BYTE PTR [eax+0x2f],dl
  424c11:	fdiv   QWORD PTR [edi+edx*1-0x3b]
  424c15:	stc    
  424c16:	(bad)  
  424c17:	repnz (bad) 
  424c19:	sbb    eax,0x74c32843
  424c1e:	jae    0x424bb3
  424c20:	mov    DWORD PTR [edi-0x41],ecx
  424c23:	xchg   esp,eax
  424c24:	rol    eax,cl
  424c26:	inc    ecx
  424c27:	imul   DWORD PTR [edx]
  424c29:	(bad)  
  424c2a:	out    dx,eax
  424c2b:	out    dx,eax
  424c2c:	or     DWORD PTR [ebp+0x7df04b54],eax
  424c32:	sti    
  424c33:	sub    ebx,edi
  424c35:	cs jo  0x424c0a
  424c38:	data16 int 0x30
  424c3b:	outs   dx,DWORD PTR ds:[esi]
  424c3c:	mov    eax,ds:0x45bb4e48
  424c41:	nop
  424c42:	push   esi
  424c43:	mov    ebp,0x14d5a20a
  424c48:	je     0x424c6a
  424c4a:	cmc    
  424c4b:	outs   dx,BYTE PTR ds:[esi]
  424c4c:	mov    esp,0x9cc17676
  424c51:	sub    DWORD PTR [ebp+0x51],edx
  424c54:	xchg   edi,eax
  424c55:	sub    BYTE PTR [esp+ebx*8],ah
  424c58:	mov    ds:0x32135cde,al
  424c5d:	(bad)  
  424c5e:	(bad)  
  424c60:	and    DWORD PTR [edi],edi
  424c62:	gs pop edi
  424c64:	ror    DWORD PTR [edx-0x5e],0xde
  424c68:	rol    ah,0x27
  424c6b:	push   ebx
  424c6c:	cmp    esp,DWORD PTR [ebx]
  424c6e:	sbb    BYTE PTR [edi-0x4b],al
  424c71:	call   0xe9a9:0xd2219e24
  424c78:	int3   
  424c79:	in     al,0x8d
  424c7b:	call   DWORD PTR [eax+edx*2+0x1990d2f2]
  424c82:	jno    0x424c65
  424c84:	outs   dx,DWORD PTR ds:[esi]
  424c85:	mov    edi,0xe2054ad3
  424c8a:	dec    edx
  424c8b:	mov    ch,0xb
  424c8d:	lea    ebx,[esi-0x48]
  424c90:	pushf  
  424c91:	cmp    al,0x35
  424c93:	push   edi
  424c94:	lock push es
  424c96:	cli    
  424c97:	bound  edi,QWORD PTR [edi-0x5f34086c]
  424c9d:	xchg   esp,eax
  424c9e:	mov    ah,0x36
  424ca0:	inc    esi
  424ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ca2:	jp     0x424c7b
  424ca4:	inc    ebp
  424ca5:	sahf   
  424ca6:	addr16 push ds
  424ca8:	dec    eax
  424ca9:	in     al,dx
  424caa:	jge    0x424d19
  424cac:	jge    0x424cbd
  424cae:	mov    eax,ds:0xcd7d5e9b
  424cb3:	out    dx,al
  424cb4:	jb     0x424ccf
  424cb6:	mov    esp,0x1cd8715b
  424cbb:	popf   
  424cbc:	std    
  424cbd:	daa    
  424cbe:	mov    ds:0x9a8b62e0,al
  424cc3:	imul   ebp,DWORD PTR [edx],0xd37f57de
  424cc9:	or     DWORD PTR ds:0x7812c565,esi
  424ccf:	mov    ebp,0xecadd2ea
  424cd4:	stos   BYTE PTR es:[edi],al
  424cd5:	(bad)  
  424cd6:	sub    DWORD PTR [ebx],ebx
  424cd8:	inc    edx
  424cd9:	test   eax,0xe6ce2435
  424cde:	je     0x424d24
  424ce0:	mov    BYTE PTR [eax],cl
  424ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ce3:	mov    eax,0x3a866c1c
  424ce8:	cdq    
  424ce9:	call   0x889e:0x51322821
  424cf0:	cld    
  424cf1:	dec    ebp
  424cf2:	repnz and eax,0xf26efb3f
  424cf8:	jle    0x424c9a
  424cfa:	xor    eax,0x6f213e17
  424cff:	mov    ch,0x10
  424d01:	daa    
  424d02:	out    dx,eax
  424d03:	push   ss
  424d04:	dec    ebp
  424d05:	cmp    al,0xd0
  424d07:	(bad)
  424d0a:	ss push eax
  424d0c:	addr16 aaa 
  424d0e:	xchg   edi,eax
  424d0f:	sub    DWORD PTR [ebp+0x61e1f4e3],ebp
  424d15:	test   DWORD PTR [ebx],edi
  424d17:	or     DWORD PTR [edx-0x5befb0dd],esp
  424d1d:	test   BYTE PTR [edx+0x1b],cl
  424d20:	ret    0x6857
  424d23:	jg     0x424d27
  424d25:	in     al,0x45
  424d27:	lahf   
  424d28:	rol    DWORD PTR [eax+esi*1],0x91
  424d2c:	mov    bh,0xdb
  424d2e:	inc    ecx
  424d2f:	mov    al,ds:0xc06c4bc1
  424d34:	adc    eax,0x6c4908ee
  424d39:	stc    
  424d3a:	retf   
  424d3b:	stos   BYTE PTR es:[edi],al
  424d3c:	xor    al,0xba
  424d3f:	add    BYTE PTR [eax+0x7e3b8dc],dl
  424d45:	ss test al,0xa3
  424d48:	adc    DWORD PTR [ebx+0x1f6558ab],esi
  424d4e:	sub    eax,0xdfa81c82
  424d53:	(bad)  
  424d54:	ss shl ebx,cl
  424d57:	jb     0x424d7e
  424d59:	push   ebx
  424d5a:	sbb    BYTE PTR [edi+edi*2-0x4fd73e7f],0x70
  424d62:	mov    DWORD PTR [ebx-0xc26eddc],ebp
  424d68:	or     dh,0x92
  424d6b:	shr    BYTE PTR [esi+0x1e6c3503],0x1
  424d72:	add    eax,DWORD PTR [edi]
  424d74:	mov    dl,0xc7
  424d76:	test   al,0x45
  424d78:	pop    ds
  424d79:	repnz icebp 
  424d7b:	in     al,dx
  424d7c:	cmp    al,dl
  424d7e:	inc    ebx
  424d7f:	xchg   esi,eax
  424d80:	jg     0x424dd3
  424d82:	pusha  
  424d83:	data16 jno 0x424d91
  424d86:	popf   
  424d87:	in     eax,0xf8
  424d89:	sbb    eax,esi
  424d8b:	and    esi,eax
  424d8d:	and    ecx,esi
  424d8f:	stc    
  424d90:	xchg   BYTE PTR [eax+eiz*1],bh
  424d93:	jge    0x424d74
  424d95:	mov    BYTE PTR [esi+edx*4],dl
  424d98:	xchg   BYTE PTR [eax],bh
  424d9a:	fimul  DWORD PTR ds:0x2db87fa4
  424da0:	out    dx,eax
  424da1:	into   
  424da2:	or     BYTE PTR [edi],0x9f
  424da5:	add    bl,BYTE PTR [edx+0xb2ed73d]
  424dab:	jb     0x424d75
  424dad:	xchg   edx,eax
  424dae:	push   edi
  424daf:	xor    ah,dh
  424db1:	xor    edi,edi
  424db3:	adc    al,BYTE PTR [esi+eiz*1]
  424db6:	jl     0x424da8
  424db8:	(bad)  
  424db9:	shr    DWORD PTR fs:[ecx-0x4a],cl
  424dbd:	popf   
  424dbe:	cmp    BYTE PTR [ebx-0x44],ch
  424dc1:	shr    BYTE PTR [ecx+0x29e5455c],0x4b
  424dc8:	or     BYTE PTR [edi-0x4a],bl
  424dcb:	xor    ebx,DWORD PTR es:[ecx]
  424dce:	std    
  424dcf:	aad    0x30
  424dd1:	sub    eax,0xff6552f6
  424dd7:	rol    ecx,cl
  424dd9:	sub    DWORD PTR [edi],ebx
  424ddb:	clc    
  424ddc:	sub    BYTE PTR [eax+0xb],bl
  424ddf:	jae    0x424e2c
  424de1:	inc    ecx
  424de2:	imul   ecx,DWORD PTR [ebx-0x504ea074],0xffffffe8
  424de9:	mov    cl,0xe
  424deb:	xlat   BYTE PTR ds:[ebx]
  424dec:	ja     0x424e43
  424dee:	inc    eax
  424def:	inc    eax
  424df0:	les    eax,FWORD PTR [eax+0x42d51b1c]
  424df6:	xchg   BYTE PTR fs:[esi-0x12],dl
  424dfa:	jbe    0x424d8a
  424dfc:	jmp    0x48dc:0xea91c019
  424e03:	xlat   BYTE PTR ds:[ebx]
  424e04:	stos   BYTE PTR es:[edi],al
  424e05:	fst    QWORD PTR [edi-0x23a011a2]
  424e0b:	mov    al,ds:0x94a6c086
  424e10:	dec    ebp
  424e11:	cwde   
  424e12:	push   es
  424e13:	(bad)  
  424e14:	jbe    0x424dc7
  424e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e17:	and    eax,0xa181cc2b
  424e1c:	push   0xffffffe0
  424e1e:	ds scas eax,DWORD PTR es:[edi]
  424e20:	inc    ebp
  424e21:	pusha  
  424e22:	add    al,0xf3
  424e24:	or     dh,BYTE PTR [eax+0x68]
  424e27:	sbb    al,0x49
  424e29:	push   ebp
  424e2a:	mov    ebx,0x1cfb68f0
  424e2f:	test   DWORD PTR [ebx-0xddd833a],esi
  424e35:	into   
  424e36:	mov    bl,0x7b
  424e38:	rcr    BYTE PTR [edi],cl
  424e3a:	aas    
  424e3b:	je     0x424e9e
  424e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e3e:	jg     0x424e40
  424e40:	add    BYTE PTR [eax],al
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     esi,DWORD PTR [ecx+0x5e39a981]
  424e53:	mov    DWORD PTR [ecx],0x4f500
  424e59:	add    cl,ch
  424e5b:	push   ebx
  424e5c:	pop    edx
  424e5d:	push   esi
  424e5e:	mov    dl,0x5d
  424e60:	outs   dx,BYTE PTR ds:[esi]
  424e61:	mov    bh,0xf6
  424e63:	test   BYTE PTR [edx],cl
  424e65:	and    al,0xe3
  424e67:	sahf   
  424e68:	ret    
  424e69:	outs   dx,DWORD PTR ds:[esi]
  424e6a:	(bad)  
  424e6b:	adc    dh,dl
  424e6d:	ins    DWORD PTR es:[edi],dx
  424e6e:	bnd call 0x9f9a00ba
  424e74:	sub    BYTE PTR [ebx+0x9bb6c58],0x57
  424e7b:	ins    BYTE PTR es:[edi],dx
  424e7c:	pop    ds
  424e7d:	xor    al,0x2e
  424e7f:	mov    ebp,0x4bbbc41f
  424e84:	gs pop ebp
  424e86:	sbb    ecx,esp
  424e88:	sub    BYTE PTR [eax],0x2f
  424e8b:	(bad)  
  424e8c:	sub    esi,0xc
  424e8f:	jo     0x424ee6
  424e91:	(bad)  
  424e92:	out    0xfc,al
  424e94:	pop    ecx
  424e95:	jmp    0xb858655
  424e9a:	mov    ds:0x45bdcc46,al
  424e9f:	rcr    DWORD PTR [eax+0xb823689],1
  424ea5:	loopne 0x424ea0
  424ea7:	(bad)  
  424ea8:	and    eax,0xce270616
  424ead:	cmp    al,0x1f
  424eaf:	pop    ebp
  424eb0:	pop    ebp
  424eb1:	push   edx
  424eb2:	add    DWORD PTR [ebp-0x7e],ebp
  424eb5:	rcr    DWORD PTR [edx+0x45f087ea],0xd2
  424ebc:	sar    ebx,0x5
  424ebf:	imul   ebx,DWORD PTR [ebp-0x7be6e978],0xffffffa9
  424ec6:	xchg   edx,eax
  424ec7:	call   DWORD PTR [ebx]
  424ec9:	int    0xf5
  424ecb:	lea    ecx,[eax+0x51d94083]
  424ed1:	adc    dh,BYTE PTR [esi]
  424ed3:	jmp    0xef76:0x4f325466
  424eda:	inc    edi
  424edb:	repz cs mov edi,0xb7a79185
  424ee2:	add    eax,0xbb09ec57
  424ee7:	or     eax,0x56deb121
  424eec:	xor    BYTE PTR [ecx-0x3a],dl
  424eef:	mov    cl,0x31
  424ef1:	jecxz  0x424ec6
  424ef3:	xchg   ebp,eax
  424ef4:	push   ds
  424ef5:	leave  
  424ef6:	mov    bl,0xd8
  424ef8:	adc    al,ah
  424efa:	in     eax,dx
  424efb:	pop    ss
  424efc:	int    0xd4
  424efe:	mov    cl,0x8
  424f00:	inc    edx
  424f01:	arpl   WORD PTR [eax+ecx*1-0x131dfb43],sp
  424f08:	repnz cwde 
  424f0a:	xor    al,bh
  424f0c:	fdiv   DWORD PTR [eax]
  424f0e:	ret    
  424f0f:	inc    ecx
  424f10:	nop
  424f11:	lods   eax,DWORD PTR ds:[esi]
  424f12:	loopne 0x424f63
  424f14:	jae    0x424efd
  424f16:	stc    
  424f17:	push   edx
  424f18:	shr    DWORD PTR [edx-0x35],cl
  424f1b:	fbstp  TBYTE PTR fs:[eax+0x1cbd9a87]
  424f22:	sar    BYTE PTR [ebp+0x22],cl
  424f25:	and    bl,ah
  424f27:	adc    ebx,DWORD PTR [eax+esi*2-0x3]
  424f2b:	sub    BYTE PTR [ecx+edx*1+0x35],cl
  424f2f:	mov    al,ds:0xca76987f
  424f34:	jl     0x424f71
  424f36:	clc    
  424f37:	out    0x18,al
  424f39:	leave  
  424f3a:	mov    bh,0x77
  424f3c:	push   ecx
  424f3d:	lea    esp,[ebp+0x2849a58b]
  424f43:	fcmovu st,st(2)
  424f45:	in     eax,dx
  424f46:	js     0x424fc0
  424f48:	call   0x11e8922
  424f4d:	add    edx,DWORD PTR [edi+ebp*4+0x6e]
  424f51:	mov    eax,0x34b5ead9
  424f56:	xchg   edi,eax
  424f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f58:	ret    
  424f59:	dec    di
  424f5b:	shr    BYTE PTR [edx-0x4c],1
  424f5e:	nop
  424f5f:	mov    eax,ds:0x2f5e5411
  424f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f65:	mov    BYTE PTR [edi+0x68ff3154],0xc3
  424f6c:	sti    
  424f6d:	(bad)  
  424f6e:	(bad)  ds:0x2203f331
  424f74:	cli    
  424f75:	cmp    edi,0xffffffb0
  424f78:	bound  ecx,QWORD PTR [esi-0x6b]
  424f7b:	pop    edi
  424f7c:	jnp    0x424f63
  424f7e:	xchg   edi,eax
  424f7f:	nop
  424f80:	aaa    
  424f81:	rcl    BYTE PTR [eax+0x2d],cl
  424f84:	mov    ah,BYTE PTR [ebx-0x5118f46d]
  424f8a:	push   ebp
  424f8b:	adc    al,0x65
  424f8d:	sub    eax,0x3193e8af
  424f92:	jae    0x425006
  424f94:	ins    BYTE PTR es:[edi],dx
  424f95:	ins    BYTE PTR es:[edi],dx
  424f96:	adc    eax,DWORD PTR [eax-0x2afdfaac]
  424f9c:	aam    0xa9
  424f9e:	sub    DWORD PTR es:[eax-0x17883606],eax
  424fa5:	xchg   ebx,eax
  424fa6:	das    
  424fa7:	(bad)  
  424fa8:	xor    edi,DWORD PTR [edi-0x26]
  424fab:	nop
  424fac:	sub    DWORD PTR [edx+0xc],esi
  424faf:	mov    esp,es
  424fb1:	mov    ebp,0x3ab1f0f2
  424fb6:	push   ebp
  424fb7:	xchg   BYTE PTR [esi],al
  424fb9:	mov    dh,0x9c
  424fbb:	arpl   bx,dx
  424fbd:	in     eax,0x1f
  424fbf:	sbb    al,dl
  424fc1:	add    eax,0xb6c0e692
  424fc6:	cmp    al,ah
  424fc8:	addr16 dec eax
  424fca:	pop    ebx
  424fcb:	int    0xf7
  424fcd:	call   0x9ff1:0x7a636ecd
  424fd4:	push   ebx
  424fd5:	sub    eax,edi
  424fd7:	inc    edx
  424fd8:	and    al,0xe1
  424fda:	xor    al,0x50
  424fdc:	adc    al,0x8f
  424fde:	fnsave [ecx+ebp*2-0x975651f]
  424fe5:	daa    
  424fe6:	adc    al,BYTE PTR [ebp+0x3f]
  424fe9:	jl     0x42500d
  424feb:	jmp    0x424f70
  424fed:	xchg   esp,eax
  424fee:	jns    0x424feb
  424ff0:	sbb    al,0xe0
  424ff2:	jmp    0x1062:0x6d8455ed
  424ff9:	mov    edi,0x6568e7dd
  424ffe:	jl     0x425076
  425000:	xchg   DWORD PTR [ebp+0x7d8db9a9],ebp
  425006:	and    eax,0xa55bcb27
  42500b:	or     al,BYTE PTR gs:[ecx+0x3f]
  42500f:	outs   dx,DWORD PTR ds:[esi]
  425010:	nop
  425011:	(bad)  
  425012:	jbe    0x42504f
  425014:	cwde   
  425015:	xor    al,0x2f
  425017:	mov    DWORD PTR [ebx-0x4b],0x2f2968aa
  42501e:	sub    DWORD PTR [ecx],eax
  425020:	push   ss
  425021:	mov    cl,0x1b
  425023:	xor    ebp,ebx
  425025:	mov    esi,0x4d71e5ec
  42502a:	inc    esp
  42502b:	mov    dh,0x4a
  42502d:	fs (bad) 
  42502f:	loop   0x42505e
  425031:	mov    BYTE PTR [esi+0x61],bh
  425034:	int3   
  425035:	xchg   al,al
  425037:	mov    BYTE PTR [esi+0x59578f2c],cl
  42503d:	mov    gs:0x7f8126fb,al
  425043:	dec    edi
  425044:	outs   dx,DWORD PTR ds:[esi]
  425045:	lods   eax,DWORD PTR ds:[esi]
  425046:	jmp    0x42507f
  425048:	adc    ch,cl
  42504a:	xlat   BYTE PTR ds:[ebx]
  42504b:	sub    ebp,edi
  42504d:	fbstp  TBYTE PTR [edi]
  42504f:	sbb    cl,BYTE PTR [edi]
  425051:	gs sbb ch,ah
  425054:	sbb    edx,ecx
  425056:	hlt    
  425057:	sbb    BYTE PTR [ebx+0x49],bh
  42505a:	rcr    ebx,1
  42505c:	lds    edi,FWORD PTR [eax-0x57]
  42505f:	xchg   ebx,eax
  425060:	cmp    bl,BYTE PTR [esi+0x3c]
  425063:	daa    
  425064:	sbb    cl,dl
  425066:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  425068:	data16 inc cl
  42506b:	inc    eax
  42506c:	jns    0x425060
  42506e:	(bad)  
  42506f:	stc    
  425070:	shr    DWORD PTR [esi-0x7d],0x48
  425074:	xor    DWORD PTR [ecx+eax*2+0x44],ebp
  425078:	pop    ebp
  425079:	dec    esi
  42507a:	(bad)  
  42507b:	loop   0x42500f
  42507d:	mov    ds:0x35f89450,eax
  425082:	(bad)
  425086:	mov    ecx,0x75907ab2
  42508b:	gs inc ebx
  42508d:	add    al,0x73
  42508f:	stos   BYTE PTR es:[edi],al
  425090:	xor    DWORD PTR [eax+0x6e],0x65
  425094:	mov    esp,0x340f689f
  425099:	ret    0xbc90
  42509c:	les    ebx,FWORD PTR [edi+0x4983e91c]
  4250a2:	dec    ebp
  4250a3:	dec    esp
  4250a4:	repz pusha 
  4250a6:	cdq    
  4250a7:	test   DWORD PTR [edx-0x66],0xe68822d0
  4250ae:	rol    DWORD PTR [edx-0x2619cba5],0xb7
  4250b5:	cld    
  4250b6:	mov    edi,DWORD PTR [esi+0x41]
  4250b9:	mov    bh,0xc5
  4250bb:	jmp    0x8ecb:0xbe0faa5c
  4250c2:	cmc    
  4250c3:	lods   al,BYTE PTR ds:[esi]
  4250c4:	sub    al,0x1e
  4250c6:	mov    ecx,0x99139d99
  4250cb:	out    dx,eax
  4250cc:	mov    esp,0xf8f50c3f
  4250d1:	popf   
  4250d2:	push   ecx
  4250d3:	add    DWORD PTR [esi+0x15],ebp
  4250d6:	xor    edx,ebp
  4250d8:	cld    
  4250d9:	jmp    0xdc97:0x84aeb6cb
  4250e0:	lea    ecx,[edx+ebp*4+0x5a]
  4250e4:	ret    0x5d71
  4250e7:	jns    0x42509a
  4250e9:	data16 and ch,BYTE PTR [ecx+0x75]
  4250ed:	inc    esi
  4250ee:	popa   
  4250ef:	stos   DWORD PTR es:[edi],eax
  4250f0:	ror    BYTE PTR [ebx],1
  4250f2:	jae    0x425115
  4250f4:	mov    WORD PTR [eax-0x2],?
  4250f7:	pop    ds
  4250f8:	adc    cl,BYTE PTR [edi]
  4250fa:	cmp    DWORD PTR [esi+0x249aa7ea],0x3b
  425101:	mov    al,ds:0xb6f63409
  425106:	xchg   DWORD PTR [edx+0x7d],edx
  425109:	jp     0x4250ae
  42510b:	scas   al,BYTE PTR es:[edi]
  42510c:	retf   0x8087
  42510f:	jl     0x4250fd
  425111:	add    eax,0x67a9b421
  425116:	xor    BYTE PTR [esi*1+0xcd2748c],al
  42511d:	lds    ebx,FWORD PTR [esp+edi*4+0x38]
  425121:	or     al,0x6c
  425123:	mov    bl,0xa1
  425125:	xchg   esp,eax
  425126:	js     0x425150
  425128:	repz push eax
  42512a:	es jecxz 0x42511f
  42512d:	lahf   
  42512e:	add    edi,esp
  425130:	sti    
  425131:	xchg   edx,eax
  425132:	int3   
  425133:	leave  
  425134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425135:	lds    ecx,FWORD PTR ds:0x4c3f9ee1
  42513b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42513c:	push   0x7dbdf8b7
  425141:	out    0xb7,al
  425143:	iret   
  425144:	les    esi,FWORD PTR [ebx]
  425146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425147:	push   es
  425148:	sbb    eax,0x24edf0f6
  42514d:	xchg   edx,eax
  42514e:	cld    
  42514f:	sub    BYTE PTR [eax],al
  425151:	fnstenv [edx-0x42148421]
  425157:	and    BYTE PTR [edx-0x15e8bbe2],0x9b
  42515e:	dec    ecx
  42515f:	inc    ebx
  425160:	call   0x7e567b20
  425165:	sub    ebx,eax
  425167:	and    DWORD PTR [edx-0x4c],edx
  42516a:	sbb    ch,BYTE PTR [eax]
  42516c:	scas   al,BYTE PTR es:[edi]
  42516d:	inc    edi
  42516e:	mov    bl,0x57
  425170:	fneni(8087 only) 
  425172:	out    dx,al
  425173:	jne    0x42517b
  425175:	rcl    al,0x6e
  425178:	bound  edx,QWORD PTR [ebp+ebp*8-0x4d2b5ae8]
  42517f:	mov    edi,0xecdf2528
  425184:	add    dh,BYTE PTR [edi+0x8]
  425187:	adc    al,0x99
  425189:	sbb    edi,DWORD PTR ds:0xca90f20e
  42518f:	sub    eax,0x50dd1042
  425194:	mov    WORD PTR [ebx],ds
  425196:	scas   eax,DWORD PTR es:[edi]
  425197:	adc    BYTE PTR [ebx],dl
  425199:	adc    eax,0x2619738
  42519e:	adc    bh,BYTE PTR [esi]
  4251a0:	add    al,0xe5
  4251a2:	inc    eax
  4251a3:	mov    cl,0xa9
  4251a5:	ins    BYTE PTR es:[edi],dx
  4251a6:	mov    al,ds:0x2acf8856
  4251ab:	stc    
  4251ac:	cld    
  4251ad:	adc    ebp,edx
  4251af:	or     DWORD PTR [ebx-0x6f],ecx
  4251b2:	pop    edi
  4251b3:	icebp  
  4251b4:	jge    0x4251ab
  4251b6:	push   0xffffffc8
  4251b8:	mov    ds:0x6bba12f,al
  4251bd:	mov    eax,ds:0x6291a636
  4251c2:	iret   
  4251c3:	ror    DWORD PTR [ecx-0x64],0x47
  4251c7:	int    0x60
  4251c9:	mov    al,ds:0x9a5cf2ce
  4251ce:	aas    
  4251cf:	pop    ebp
  4251d0:	mov    esp,0x74593c28
  4251d5:	pop    ecx
  4251d6:	shl    BYTE PTR [edx+0x440b07a2],0x5d
  4251dd:	jg     0x42525e
  4251df:	out    0x2c,eax
  4251e1:	ins    BYTE PTR es:[edi],dx
  4251e2:	shr    BYTE PTR [ecx+0x64],1
  4251e5:	jbe    0x425202
  4251e7:	adc    eax,0x92cb1e67
  4251ec:	scas   al,BYTE PTR es:[edi]
  4251ed:	sub    ah,ch
  4251ef:	inc    ecx
  4251f0:	and    bl,BYTE PTR [eax+0x63]
  4251f3:	fwait
  4251f4:	xor    eax,0x6a60a9d8
  4251f9:	enter  0x8d05,0x74
  4251fd:	adc    edx,edx
  4251ff:	cmp    ah,BYTE PTR [ecx-0x13585602]
  425205:	push   cs
  425206:	cli    
  425207:	dec    eax
  425208:	pop    ebx
  425209:	or     bl,BYTE PTR [ecx+0x6d]
  42520c:	jmp    0xfa13:0x2314c868
  425213:	add    BYTE PTR [esi],al
  425215:	xor    ebp,DWORD PTR [esi+0x57]
  425218:	inc    edx
  425219:	inc    edi
  42521a:	cmc    
  42521b:	stos   BYTE PTR es:[edi],al
  42521c:	and    al,0x9b
  42521e:	daa    
  42521f:	fbld   TBYTE PTR [ebx]
  425221:	xchg   ecx,eax
  425222:	or     esi,ebp
  425224:	or     eax,0xa3b3fdee
  425229:	out    0x43,eax
  42522b:	and    bh,BYTE PTR [ebx]
  42522d:	clc    
  42522e:	pop    ss
  42522f:	add    DWORD PTR [edx+ebp*1+0x62a8866f],ecx
  425236:	xchg   esp,eax
  425237:	icebp  
  425238:	call   0xc40d3215
  42523d:	test   DWORD PTR [ecx-0x465d355a],ebx
  425243:	arpl   WORD PTR [edi],bx
  425245:	call   0xc19e:0x105b503
  42524c:	xor    ecx,DWORD PTR [eax+0x2e]
  42524f:	in     al,0x68
  425251:	cmp    edi,DWORD PTR ds:0x82b9e82f
  425257:	sub    ecx,0x2ca372e3
  42525d:	retf   0xf2b2
  425260:	call   0xc5f6:0x6001d373
  425267:	adc    al,0x9e
  425269:	push   edi
  42526a:	call   0x28bf178f
  42526f:	fiadd  WORD PTR [ebx+eax*8+0x74]
  425273:	xchg   ebp,eax
  425274:	pop    ebx
  425275:	mov    dl,0xb4
  425277:	mov    WORD PTR [esi],cs
  425279:	mov    cl,0x8d
  42527b:	push   esp
  42527c:	test   edx,ebx
  42527e:	test   DWORD PTR [edx],ebx
  425280:	inc    edi
  425281:	dec    edi
  425282:	inc    esi
  425283:	push   ebp
  425284:	mov    WORD PTR [edi+0x7925ef0],?
  42528a:	test   ebx,edx
  42528c:	sti    
  42528d:	repnz pop edi
  42528f:	mov    bl,BYTE PTR [esi+0x2396b12b]
  425295:	movups xmm2,XMMWORD PTR [ecx+ebx*4]
  425299:	mov    ebx,0xdffb4abd
  42529e:	xor    dl,ah
  4252a0:	jae    0x42525e
  4252a2:	pop    edi
  4252a3:	ins    BYTE PTR es:[edi],dx
  4252a4:	or     dl,bl
  4252a6:	cmc    
  4252a7:	ins    BYTE PTR es:[edi],dx
  4252a8:	popa   
  4252a9:	xor    ebx,DWORD PTR [ebx-0x16]
  4252ac:	and    ebp,esp
  4252ae:	mov    ebx,0xccd79663
  4252b3:	xor    DWORD PTR [ecx-0x2b],edx
  4252b6:	mov    ebx,0xc90ba411
  4252bb:	mov    ah,0x4f
  4252bd:	mov    ebx,edx
  4252bf:	xor    eax,0xb5247a5a
  4252c4:	hlt    
  4252c5:	outs   dx,DWORD PTR ds:[esi]
  4252c6:	ins    BYTE PTR es:[edi],dx
  4252c7:	sub    esi,DWORD PTR [ebx-0x9]
  4252ca:	mov    al,ds:0x47f6c074
  4252cf:	add    edx,esi
  4252d1:	push   cs
  4252d2:	call   0x1fd94d6
  4252d7:	test   DWORD PTR ds:0xe09fad95,esi
  4252dd:	ret    0xd08b
  4252e0:	and    al,0xc5
  4252e2:	pop    ebp
  4252e3:	cmp    ah,dh
  4252e5:	or     eax,0x5e81ddff
  4252ea:	rcr    DWORD PTR [ecx+0x32],cl
  4252ed:	mov    bl,0xdc
  4252ef:	pop    ebp
  4252f0:	imul   BYTE PTR [esi]
  4252f2:	mov    cl,0x65
  4252f4:	aam    0x45
  4252f6:	mov    al,ds:0x8c75b62c
  4252fb:	push   0x5c
  4252fd:	ins    BYTE PTR es:[edi],dx
  4252fe:	push   ebx
  4252ff:	sbb    DWORD PTR [edx],0x55f78e30
  425305:	jb     0x42529e
  425307:	or     eax,0xe23d799f
  42530c:	fcomp  DWORD PTR [esi-0x67]
  42530f:	mov    ebx,0x6e8db2b1
  425314:	std    
  425315:	cmc    
  425316:	nop
  425317:	cmp    bl,BYTE PTR [edi+0x4c]
  42531a:	inc    ebp
  42531b:	push   ecx
  42531c:	inc    edx
  42531d:	and    DWORD PTR [edx+0x1cc9c2a2],ebx
  425323:	js     0x425319
  425325:	or     ebp,DWORD PTR [esi+0x2d]
  425328:	mov    bl,BYTE PTR [eax+ebp*2-0x56f79a0a]
  42532f:	push   esi
  425330:	call   0x9a177b79
  425335:	or     DWORD PTR [ecx+0x2a],ecx
  425338:	mov    bh,0xfe
  42533a:	cmp    dh,dl
  42533c:	in     al,0xc6
  42533e:	into   
  42533f:	add    edx,DWORD PTR [ecx+ebp*4]
  425342:	xor    eax,0xa4c0a0b7
  425347:	cmp    ah,BYTE PTR [esi]
  425349:	adc    bl,bl
  42534b:	push   cs
  42534c:	stos   BYTE PTR es:[edi],al
  42534d:	ficomp WORD PTR [edx+0x0]
  425350:	add    BYTE PTR [eax],al
  425352:	fwait
  425353:	push   ebp
  425354:	pusha  
  425355:	outs   dx,DWORD PTR ds:[esi]
  425356:	out    dx,al
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	inc    edi
  42535f:	add    dh,ch
  425361:	sbb    eax,0x1cc53
  425366:	cmc    
  425367:	add    al,0x0
  425369:	add    BYTE PTR [edi+eax*8+0x39db5b1e],al
  425370:	sbb    ebp,DWORD PTR [esi-0x4]
  425373:	push   cs
  425374:	stc    
  425375:	aaa    
  425376:	out    dx,al
  425377:	mov    ds:0x8df870f3,eax
  42537c:	adc    DWORD PTR [ecx-0x1b],edx
  42537f:	push   esp
  425380:	iret   
  425381:	scas   al,BYTE PTR es:[edi]
  425382:	es mov al,0x41
  425385:	mov    cl,0xa1
  425387:	mov    ecx,0xbc44fe21
  42538c:	add    edi,DWORD PTR [ecx-0x2e]
  42538f:	adc    al,0xd1
  425391:	std    
  425392:	mov    bh,0x4a
  425394:	outs   dx,BYTE PTR ds:[esi]
  425395:	cdq    
  425396:	jle    0x4253ce
  425398:	or     al,0xc
  42539a:	adc    bl,BYTE PTR [ebx+0x7e79a529]
  4253a0:	add    bh,dl
  4253a2:	adc    esp,DWORD PTR [edx-0x5b]
  4253a5:	cld    
  4253a6:	shr    BYTE PTR [edi+0xb],1
  4253a9:	scas   eax,DWORD PTR es:[edi]
  4253aa:	mov    ecx,0xd338ed43
  4253af:	dec    ebx
  4253b0:	pop    eax
  4253b1:	mov    ebp,0x4dcefe29
  4253b6:	dec    eax
  4253b7:	into   
  4253b8:	adc    DWORD PTR [esi],edi
  4253ba:	xchg   edi,eax
  4253bb:	push   0xbb104c54
  4253c0:	cli    
  4253c1:	ins    BYTE PTR es:[edi],dx
  4253c2:	loopne 0x4253c5
  4253c4:	sbb    DWORD PTR [edx],ebp
  4253c6:	push   0x9bc873e0
  4253cb:	lahf   
  4253cc:	mov    eax,0x9a38bd99
  4253d1:	stc    
  4253d2:	adc    eax,0x98e85f34
  4253d7:	fnstenv [edi+0x43]
  4253da:	(bad)  
  4253db:	dec    edi
  4253dc:	out    0xb1,al
  4253de:	scas   al,BYTE PTR es:[edi]
  4253df:	out    dx,eax
  4253e0:	lods   eax,DWORD PTR ds:[esi]
  4253e1:	cmp    ebp,DWORD PTR [edx-0x9]
  4253e4:	shl    DWORD PTR [edi+0x29],1
  4253e7:	lahf   
  4253e8:	rcl    DWORD PTR [ebx],cl
  4253ea:	cmp    ebp,ebx
  4253ec:	xchg   ebx,eax
  4253ed:	dec    edx
  4253ee:	add    DWORD PTR [ebp+0x6c],edx
  4253f1:	push   esi
  4253f2:	dec    edx
  4253f3:	pop    di
  4253f5:	sbb    eax,0x44149a9e
  4253fa:	xchg   esp,eax
  4253fb:	addr16 fwait
  4253fd:	and    DWORD PTR [ecx-0x862f854],ecx
  425403:	and    edi,DWORD PTR [esi-0x30]
  425406:	mov    esi,0x59c302b6
  42540b:	ins    DWORD PTR es:[edi],dx
  42540c:	iret   
  42540d:	sub    edx,edi
  42540f:	mov    ds:0x2eb5e531,al
  425414:	data16 fdiv DWORD PTR [ebx+0x3c]
  425418:	mov    ecx,0x96b1689b
  42541d:	cmp    eax,0xc5eb535a
  425422:	cmp    BYTE PTR [edx],ah
  425424:	bsf    ebp,DWORD PTR [esi]
  425427:	add    al,0x31
  425429:	fcomp  DWORD PTR [ebx+ebp*4-0x1e]
  42542d:	or     ah,al
  42542f:	mov    eax,DWORD PTR [ebp+0x7c]
  425432:	dec    ecx
  425433:	xchg   edx,eax
  425434:	test   BYTE PTR [edx],bh
  425436:	lods   al,BYTE PTR ds:[esi]
  425437:	jnp    0x425448
  425439:	push   eax
  42543a:	daa    
  42543b:	mov    al,0xc2
  42543d:	addr16 or al,0xc8
  425440:	jb     0x425466
  425442:	pop    ebx
  425443:	pushf  
  425444:	(bad)  
  425446:	mov    eax,ds:0xa98da47f
  42544b:	inc    eax
  42544c:	and    BYTE PTR [edx-0x11b895fa],cl
  425452:	iret   
  425453:	and    al,0xcc
  425455:	dec    edx
  425456:	xchg   edx,eax
  425457:	push   ecx
  425458:	ins    DWORD PTR es:[edi],dx
  425459:	stos   DWORD PTR es:[edi],eax
  42545a:	scas   eax,DWORD PTR es:[edi]
  42545b:	sti    
  42545c:	jg     0x425405
  42545e:	xor    bh,ah
  425460:	leave  
  425461:	call   FWORD PTR [esi+0x2f0a8d4a]
  425467:	jns    0x4254c3
  425469:	xchg   esp,eax
  42546a:	out    0x8a,al
  42546c:	retf   0xe1e6
  42546f:	sar    edx,cl
  425471:	mov    ds:0xa44b0bde,al
  425476:	mov    al,0xe8
  425478:	push   edx
  425479:	fnstenv ds:0x384685aa
  42547f:	rcr    BYTE PTR [ebp+0xab3175],0x7b
  425486:	inc    edx
  425487:	add    BYTE PTR [edx],ch
  425489:	repz mov al,0x61
  42548c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42548d:	imul   ecx,DWORD PTR [esi],0x88229a6c
  425493:	xchg   ebp,eax
  425494:	jne    0x4254e3
  425496:	daa    
  425497:	xor    al,BYTE PTR [eax]
  425499:	lods   al,BYTE PTR ds:[esi]
  42549a:	stos   DWORD PTR es:[edi],eax
  42549b:	iret   
  42549c:	ss jle 0x42542a
  42549f:	mov    esp,DWORD PTR [edi-0x8]
  4254a2:	cmp    BYTE PTR ds:0xaabab5e4,ah
  4254a8:	sbb    eax,0x2b0bb842
  4254ad:	jl     0x4254f1
  4254af:	mov    bl,0x4b
  4254b1:	cli    
  4254b2:	jne    0x4254f5
  4254b4:	pop    es
  4254b5:	jnp    0x425479
  4254b7:	hlt    
  4254b8:	jne    0x42544f
  4254ba:	aaa    
  4254bb:	sti    
  4254bc:	dec    ebx
  4254bd:	ss jae 0x425498
  4254c0:	call   0xde9e45e8
  4254c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254c6:	cwde   
  4254c7:	ja     0x425540
  4254c9:	outs   dx,BYTE PTR ds:[esi]
  4254ca:	leave  
  4254cb:	icebp  
  4254cc:	xchg   ecx,eax
  4254cd:	shl    DWORD PTR [ecx-0x40],1
  4254d0:	popf   
  4254d1:	xor    eax,0x3b73d5c3
  4254d6:	dec    eax
  4254d7:	sar    BYTE PTR [ebx-0x4895427],0xcd
  4254de:	iret   
  4254df:	cmp    ah,BYTE PTR [edi]
  4254e1:	je     0x4254f8
  4254e3:	fisttp WORD PTR [esi+edx*8-0x47]
  4254e7:	adc    DWORD PTR [edx-0x41382686],ebx
  4254ed:	cdq    
  4254ee:	add    eax,0x65042ab9
  4254f3:	adc    BYTE PTR [edi],dl
  4254f5:	mov    bh,dh
  4254f7:	loopne 0x425499
  4254f9:	xchg   ebx,eax
  4254fa:	std    
  4254fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254fc:	adc    edi,DWORD PTR [ecx]
  4254fe:	or     al,0x5d
  425500:	inc    esp
  425501:	adc    eax,0x6f2b51d0
  425506:	outs   dx,DWORD PTR ds:[esi]
  425507:	add    DWORD PTR [ecx+0x7d],edx
  42550a:	sub    eax,0xd2caf01a
  42550f:	push   ds
  425510:	popf   
  425511:	add    ch,BYTE PTR [ebx]
  425513:	pusha  
  425514:	loop   0x4254a8
  425516:	xor    ebx,DWORD PTR [ecx-0x26]
  425519:	aas    
  42551a:	mov    cl,0xd0
  42551c:	ins    BYTE PTR es:[edi],dx
  42551d:	or     DWORD PTR [eax],eax
  42551f:	mov    ecx,0x85e563c8
  425524:	dec    edx
  425525:	jae    0x42559f
  425527:	mov    ebx,0x73a195bd
  42552c:	mov    dl,0x6a
  42552e:	mov    cl,BYTE PTR [ebp-0x4c687f7d]
  425534:	mov    ch,BYTE PTR [edx-0x5ea6e22a]
  42553a:	mov    DWORD PTR [edi+0x74],0x959a9c12
  425541:	mov    al,0xfa
  425543:	add    DWORD PTR ds:0xec626e6b,0xe64d7911
  42554d:	pop    edx
  42554e:	xchg   edi,eax
  42554f:	pop    ebx
  425550:	and    ecx,DWORD PTR [eax-0x41]
  425553:	mov    cl,0xe0
  425555:	pop    esi
  425556:	(bad)  
  425557:	and    al,dh
  425559:	xor    edx,DWORD PTR [edx-0x701e6e88]
  42555f:	mov    bl,0x81
  425561:	dec    ebx
  425562:	ror    BYTE PTR [eax],cl
  425564:	test   eax,0x6bc493a6
  425569:	aad    0x73
  42556b:	rcl    DWORD PTR [eax],0x9d
  42556e:	or     BYTE PTR [esi-0x56cf1c80],dh
  425574:	jns    0x42550c
  425576:	pop    edi
  425577:	inc    ebx
  425578:	outs   dx,BYTE PTR ds:[esi]
  425579:	add    esp,DWORD PTR [esi+0x61d2995d]
  42557f:	rol    BYTE PTR [eax],0xf3
  425582:	repnz sub DWORD PTR [ecx-0x2c07d3e9],eax
  425589:	cld    
  42558a:	mov    WORD PTR [eax],?
  42558c:	shl    DWORD PTR [edx],0x3a
  42558f:	lahf   
  425590:	call   0x4fe3:0x1f3f4beb
  425597:	(bad)  
  425598:	mov    edi,esi
  42559a:	pushf  
  42559b:	pop    esi
  42559c:	inc    eax
  42559d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42559e:	inc    ecx
  42559f:	stos   DWORD PTR es:[edi],eax
  4255a0:	and    bh,cl
  4255a2:	lea    esi,[ebx]
  4255a4:	push   ebx
  4255a5:	pop    edx
  4255a6:	pop    ds
  4255a7:	push   esi
  4255a8:	call   0x3fdfa8a8
  4255ad:	dec    ebx
  4255ae:	xchg   esp,eax
  4255af:	or     DWORD PTR [eax+esi*2-0x50],esi
  4255b3:	mov    BYTE PTR [edx+0x5de37a88],bl
  4255b9:	cmp    eax,0xccbe7943
  4255be:	ja     0x4255c6
  4255c0:	xchg   ebx,eax
  4255c1:	(bad)
  4255c4:	popa   
  4255c5:	mov    esi,0x1e1f1bbf
  4255ca:	ss lahf 
  4255cc:	call   DWORD PTR ds:0x505bd3d
  4255d2:	jno    0x4255f5
  4255d4:	mov    bh,0x78
  4255d6:	mov    ecx,0xba1547df
  4255db:	scas   eax,DWORD PTR es:[edi]
  4255dc:	aaa    
  4255dd:	xlat   BYTE PTR ds:[ebx]
  4255de:	shl    BYTE PTR [edx-0x52d5225b],0xf7
  4255e5:	mov    edi,0xc97d64df
  4255ea:	pop    esi
  4255eb:	pushf  
  4255ec:	pop    ss
  4255ed:	inc    eax
  4255ee:	shl    BYTE PTR [edi+0x4a],0xaf
  4255f2:	nop
  4255f3:	scas   eax,DWORD PTR es:[edi]
  4255f4:	lea    esp,[eax]
  4255f6:	inc    ebp
  4255f7:	mov    eax,0x971ffcbd
  4255fc:	cwde   
  4255fd:	dec    ecx
  4255fe:	ret    0x6b7d
  425601:	jb     0x4255ac
  425603:	and    eax,0xe7450234
  425608:	outs   dx,BYTE PTR ds:[esi]
  425609:	addr16 dec ecx
  42560b:	ret    
  42560c:	es repnz enter 0xe487,0xb6
  425612:	sar    BYTE PTR [edx+0x3f],1
  425615:	pusha  
  425616:	das    
  425617:	push   ecx
  425618:	push   edi
  425619:	push   0xffffff90
  42561b:	scas   al,BYTE PTR es:[edi]
  42561c:	xor    DWORD PTR [eax],ebx
  42561e:	jae    0x4255a9
  425620:	mov    ds:0xc164513c,eax
  425625:	jecxz  0x42562d
  425627:	icebp  
  425628:	sub    al,0x71
  42562a:	bound  edi,QWORD PTR [eax-0xe]
  42562d:	xchg   ebx,eax
  42562e:	lea    esp,[esi+0x4e94dde1]
  425634:	cmp    ah,dl
  425636:	xor    al,0x88
  425638:	dec    ebx
  425639:	mov    eax,0x77d7b4e
  42563e:	xchg   edx,eax
  42563f:	neg    BYTE PTR [edx+ebx*4+0x341b9e4c]
  425646:	adc    edi,0x1895e8ee
  42564c:	adc    al,0x3e
  42564e:	int    0x58
  425650:	xchg   ecx,eax
  425651:	and    esp,DWORD PTR [ebp+0x75]
  425654:	or     al,0x82
  425656:	xchg   esi,eax
  425657:	cmp    al,ah
  425659:	and    BYTE PTR [edi],bl
  42565b:	xchg   esp,eax
  42565c:	push   0x0
  42565e:	pop    ebp
  42565f:	lock cmp cl,BYTE PTR [edi-0x24]
  425663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425664:	sbb    eax,0x323cfbc3
  425669:	jo     0x42568d
  42566b:	and    ebp,DWORD PTR ds:0xa9b9a979
  425671:	push   esp
  425672:	sbb    DWORD PTR [eax+0x16],0xf1ea21c7
  425679:	aaa    
  42567a:	add    al,0x5
  42567c:	add    ebp,DWORD PTR [eax-0x65]
  42567f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425680:	pop    ds
  425681:	out    dx,eax
  425682:	pop    ebp
  425683:	mov    ah,0xff
  425685:	mov    ds:0xe823194,al
  42568a:	out    0x70,eax
  42568c:	push   cs
  42568d:	lods   al,BYTE PTR ds:[esi]
  42568e:	sahf   
  42568f:	in     al,0x97
  425691:	jmp    0x425644
  425693:	add    BYTE PTR [edx+0x1a],ch
  425696:	aam    0x82
  425698:	inc    ecx
  425699:	scas   al,BYTE PTR es:[edi]
  42569a:	mov    eax,DWORD PTR [ebx-0x1a]
  42569d:	(bad)  
  42569e:	pop    edi
  42569f:	push   eax
  4256a0:	ror    BYTE PTR [ecx],cl
  4256a2:	mov    ebp,0x9df636ed
  4256a7:	das    
  4256a8:	mov    bl,0x50
  4256aa:	mov    esi,0x3dfbab83
  4256af:	dec    edx
  4256b0:	xlat   BYTE PTR ds:[ebx]
  4256b1:	icebp  
  4256b2:	xchg   DWORD PTR [esi],ebp
  4256b4:	lds    esi,FWORD PTR ds:0xdae5b0e8
  4256ba:	jp     0x4256d9
  4256bc:	cmp    al,0x10
  4256be:	mov    edi,DWORD PTR [ebx+0x3e]
  4256c1:	lds    edx,FWORD PTR [esi+eax*4+0x3130cfa]
  4256c8:	add    DWORD PTR [edx-0x73],esp
  4256cb:	jb     0x4256ba
  4256cd:	dec    esi
  4256ce:	out    0x3,eax
  4256d0:	ds dec cx
  4256d3:	or     cl,BYTE PTR [ebx-0xaabdcab]
  4256d9:	je     0x42572e
  4256db:	push   ds
  4256dc:	mov    ds:0x4567d050,al
  4256e1:	xchg   ebx,eax
  4256e2:	pop    esi
  4256e3:	int    0x59
  4256e5:	enter  0xac1f,0xe1
  4256e9:	mov    bh,0x68
  4256eb:	enter  0x4664,0xf4
  4256ef:	fwait
  4256f0:	sbb    ebx,esp
  4256f2:	jae    0x42575c
  4256f4:	sahf   
  4256f5:	inc    BYTE PTR [eax+esi*2+0xfbb86ce]
  4256fc:	sahf   
  4256fd:	add    esp,DWORD PTR [esi-0x53]
  425700:	ins    BYTE PTR es:[edi],dx
  425701:	jbe    0x425760
  425703:	push   edi
  425704:	cmp    al,0xcb
  425706:	xlat   BYTE PTR ds:[ebx]
  425707:	(bad)  
  425708:	sbb    dl,ch
  42570a:	sub    eax,0xebe93557
  42570f:	fcomi  st,st(1)
  425711:	(bad)  
  425712:	sub    eax,0x5b705db8
  425717:	in     eax,0xda
  425719:	or     eax,0xbad1f3f
  42571e:	push   0xa9dd230a
  425723:	xor    DWORD PTR [eax],0x6b
  425726:	mov    al,0xaa
  425728:	or     DWORD PTR [ebp+esi*8-0x749012b2],0x1a
  425730:	arpl   WORD PTR [ecx],dx
  425732:	loope  0x4256ba
  425734:	ins    BYTE PTR es:[edi],dx
  425735:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  425737:	pop    ss
  425738:	push   esp
  425739:	cmp    al,0x19
  42573b:	int    0xea
  42573d:	ficomp WORD PTR [eax+0x13]
  425740:	inc    esp
  425741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425742:	scas   eax,DWORD PTR es:[edi]
  425743:	sar    ch,cl
  425745:	sub    dh,bh
  425747:	add    DWORD PTR [edx-0x1],esi
  42574a:	(bad)  
  42574b:	ins    DWORD PTR es:[edi],dx
  42574c:	aad    0x52
  42574e:	or     eax,0x5c489ace
  425753:	and    dh,dl
  425755:	inc    ebp
  425756:	dec    ecx
  425757:	xlat   BYTE PTR ds:[ebx]
  425758:	jge    0x425726
  42575a:	pusha  
  42575b:	inc    edx
  42575c:	shr    DWORD PTR [edx-0x46],1
  42575f:	sbb    BYTE PTR [ebx],ch
  425761:	adc    eax,0xd3a1166f
  425766:	mov    esi,0x79bf8f21
  42576b:	xor    BYTE PTR [edi+eiz*8+0x30],al
  42576f:	sbb    esi,DWORD PTR [ecx]
  425771:	jmp    0xa485b190
  425776:	(bad)  
  425777:	dec    esi
  425778:	rol    DWORD PTR [ecx-0x71],1
  42577b:	pop    edx
  42577c:	and    DWORD PTR ds:0x334ac8ac,edx
  425782:	jae    0x425752
  425784:	mov    esp,0x807c6d29
  425789:	push   es
  42578a:	shr    DWORD PTR [eax-0x56a784fb],1
  425790:	inc    ecx
  425791:	mov    edx,0xe92f780a
  425796:	jae    0x4257a5
  425798:	rep outs dx,DWORD PTR ds:[esi]
  42579a:	jge    0x4257fe
  42579c:	dec    ebx
  42579d:	out    0x7b,eax
  42579f:	push   edx
  4257a0:	je     0x42576b
  4257a2:	mov    dh,BYTE PTR [eax+0x1a]
  4257a5:	nop
  4257a6:	clc    
  4257a7:	dec    ebp
  4257a8:	stos   DWORD PTR es:[edi],eax
  4257a9:	sub    eax,0x7c6cf13d
  4257ae:	cmp    BYTE PTR ds:0x24919cb7,dh
  4257b4:	test   BYTE PTR [edi-0x3ed1b260],ah
  4257ba:	aam    0x55
  4257bc:	(bad)  
  4257bd:	in     al,0x9d
  4257bf:	push   0x75
  4257c1:	imul   eax,eax,0x45
  4257c4:	je     0x4257bf
  4257c6:	and    eax,0x9e661ea7
  4257cb:	rcl    ch,cl
  4257cd:	pop    ss
  4257ce:	dec    DWORD PTR [edx]
  4257d0:	jmp    0x1c9bafc3
  4257d5:	xchg   edx,eax
  4257d6:	push   0x19
  4257d8:	cmp    eax,0xb738ec59
  4257dd:	jecxz  0x425845
  4257df:	inc    ebx
  4257e0:	xchg   DWORD PTR [ebp-0x43],eax
  4257e3:	je     0x425830
  4257e5:	mov    ch,0x99
  4257e7:	imul   ecx,DWORD PTR [edx-0x7e55f36f],0x343f6836
  4257f1:	sbb    al,0x69
  4257f3:	fdivr  QWORD PTR [edx+0x7c]
  4257f6:	jmp    0x70507257
  4257fb:	repz jg 0xf360f324
  425802:	mov    ch,0xb1
  425804:	fcomp  QWORD PTR [esi-0x70d50d76]
  42580a:	sbb    ebx,DWORD PTR [esi]
  42580c:	sbb    esi,eax
  42580e:	mov    ebx,0xe25c5eba
  425813:	pop    eax
  425814:	lock push ecx
  425816:	test   DWORD PTR [ebp*1-0x4c776a0c],esp
  42581d:	(bad)  [esi+0x34]
  425820:	aam    0x69
  425822:	jne    0x42587e
  425824:	adc    eax,0x6832687f
  425829:	xor    DWORD PTR [ecx],ecx
  42582b:	fild   QWORD PTR [ebp-0x66]
  42582e:	xor    DWORD PTR [ebp+edi*8+0x63bf6001],esp
  425835:	sar    BYTE PTR [ecx],1
  425837:	pop    edi
  425838:	in     al,0x95
  42583a:	xor    BYTE PTR [ecx-0x6],bh
  42583d:	push   edi
  42583e:	das    
  42583f:	jne    0x425889
  425841:	dec    edi
  425842:	test   eax,0xc70b76ef
  425847:	sbb    DWORD PTR [edi+0x26],eax
  42584a:	(bad)  
  42584b:	(bad)  
  42584c:	gs mov dl,0x5f
  42584f:	rcl    DWORD PTR [ebp-0x2796501],0x78
  425856:	clc    
  425857:	pop    ebx
  425858:	sub    eax,0x2917c9ca
  42585d:	popa   
  42585e:	in     al,dx
  42585f:	add    BYTE PTR [eax],al
  425861:	add    BYTE PTR ds:0xaf44af85,al
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx-0x7fa2c908]
  42586f:	clc    
  425870:	clc    
  425871:	mov    dl,0x48
  425873:	rol    DWORD PTR [ecx],1
  425875:	add    ch,dh
  425877:	add    al,0x0
  425879:	add    BYTE PTR [edx],cl
  42587b:	push   edx
  42587c:	in     al,0xe8
  42587e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42587f:	and    al,0x98
  425881:	or     ecx,DWORD PTR [ecx-0x5e]
  425884:	jecxz  0x42584f
  425886:	xchg   ebx,eax
  425887:	pop    ebp
  425888:	sar    DWORD PTR [edx+0x2ee519c0],cl
  42588e:	xor    al,0x6c
  425890:	aas    
  425891:	xchg   ebp,eax
  425892:	jbe    0x4258aa
  425894:	outs   dx,DWORD PTR ds:[esi]
  425895:	test   eax,eax
  425897:	adc    eax,0x7cefd207
  42589c:	aas    
  42589d:	push   cs
  42589e:	outs   dx,BYTE PTR ds:[esi]
  42589f:	jae    0x425912
  4258a1:	pop    eax
  4258a2:	push   esi
  4258a3:	and    eax,0x62e0b8d
  4258a8:	jp     0x42587e
  4258aa:	rcr    BYTE PTR [ebp-0x57],1
  4258ad:	mov    cl,0x49
  4258af:	gs (bad) 
  4258b1:	mov    esp,0xb9358f10
  4258b6:	std    
  4258b7:	push   es
  4258b8:	sbb    ebp,DWORD PTR [edi+0x53]
  4258bb:	xor    ch,BYTE PTR [ebp-0x25]
  4258be:	hlt    
  4258bf:	sub    al,0xe
  4258c1:	ror    BYTE PTR [edi],cl
  4258c3:	add    al,BYTE PTR [esi]
  4258c5:	pop    es
  4258c6:	jp     0x4258da
  4258c8:	cmp    ecx,DWORD PTR [edx+edx*4]
  4258cb:	push   es
  4258cc:	addr16 popf 
  4258ce:	mov    DWORD PTR [ebx],ecx
  4258d0:	pop    esi
  4258d1:	cmc    
  4258d2:	sub    eax,0xc9b0c605
  4258d7:	push   ss
  4258d8:	and    BYTE PTR [ecx],ah
  4258da:	jle    0x42595b
  4258dc:	hlt    
  4258dd:	or     esi,DWORD PTR [esi+0x1dd1cf65]
  4258e3:	(bad)  
  4258e5:	cmc    
  4258e6:	jnp    0x425928
  4258e8:	jbe    0x425925
  4258ea:	inc    ebx
  4258eb:	pop    ebp
  4258ec:	sub    esp,DWORD PTR [esi*4+0x2ca3d166]
  4258f3:	ins    BYTE PTR es:[edi],dx
  4258f4:	add    al,0x25
  4258f6:	mov    eax,ds:0x16d43701
  4258fb:	jge    0x4258ce
  4258fd:	adc    BYTE PTR [ebp+0x26002693],bh
  425903:	xchg   esp,eax
  425904:	sbb    al,0x6b
  425906:	or     eax,0x2b273dc0
  42590b:	xchg   ecx,ebp
  42590d:	in     eax,0x4a
  42590f:	mov    ebp,0x9843f513
  425914:	jbe    0x425898
  425916:	in     al,0x66
  425918:	ds and ebp,ecx
  42591b:	push   esp
  42591c:	les    edx,FWORD PTR [ecx-0x470db377]
  425922:	pop    edi
  425923:	mov    cl,ch
  425925:	add    cl,BYTE PTR [eax]
  425927:	and    dh,dh
  425929:	sub    bl,bl
  42592b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42592c:	fucomi st,st(6)
  42592e:	idiv   BYTE PTR [edi]
  425930:	shl    BYTE PTR [edx+0x52e12332],1
  425936:	retf   0x513e
  425939:	jp     0x425994
  42593b:	push   ecx
  42593c:	inc    esp
  42593d:	je     0x42592b
  42593f:	jnp    0x425931
  425941:	std    
  425942:	mov    ds:0x50d4824e,al
  425947:	imul   edx,ebx,0xffffffb3
  42594a:	sub    eax,0xccf7997a
  42594f:	cmp    BYTE PTR [esi+eax*8+0x3743f6b1],dh
  425956:	ja     0x42592b
  425958:	mov    dl,0x17
  42595a:	stos   DWORD PTR es:[edi],eax
  42595b:	jae    0x4258f3
  42595d:	call   FWORD PTR [eax+ecx*4+0x20feea0b]
  425964:	mov    esp,0x3003f0e1
  425969:	cld    
  42596a:	fsub   st,st(3)
  42596c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42596d:	lods   al,BYTE PTR ds:[esi]
  42596e:	push   esi
  42596f:	xchg   edi,eax
  425970:	and    eax,0xedf3b682
  425975:	js     0x42599c
  425977:	cmc    
  425978:	mov    ebp,0xe2a83a1d
  42597d:	arpl   WORD PTR [ebx+0x71],ax
  425980:	enter  0x7acd,0x6f
  425984:	(bad)  
  425985:	test   BYTE PTR ds:0xfbda184d,0x56
  42598c:	cli    
  42598d:	push   esi
  42598e:	add    DWORD PTR [esi+ecx*1+0x72672d7d],ecx
  425995:	xor    dl,BYTE PTR [ecx+ecx*8-0x6f8566f1]
  42599c:	add    BYTE PTR [esi+0x2fd235aa],al
  4259a2:	mov    al,0x85
  4259a4:	loop   0x425a1f
  4259a6:	pop    esp
  4259a7:	jmp    0x6139c0ea
  4259ac:	outs   dx,BYTE PTR ds:[esi]
  4259ad:	enter  0x93ec,0x32
  4259b1:	xchg   esp,eax
  4259b2:	or     BYTE PTR [ebp-0x4d],ah
  4259b5:	mov    ah,0xe2
  4259b7:	gs pop es
  4259b9:	repz div BYTE PTR [edi+edi*4+0x75]
  4259be:	in     eax,0x4e
  4259c0:	jle    0x4259b7
  4259c2:	mov    al,bh
  4259c4:	dec    eax
  4259c5:	pop    eax
  4259c6:	mov    al,ds:0x2633d224
  4259cb:	out    0x4b,al
  4259cd:	call   0xc632:0x626d103b
  4259d4:	shl    DWORD PTR cs:[esi],cl
  4259d7:	dec    edi
  4259d8:	gs xor al,cl
  4259db:	push   edx
  4259dc:	mov    edx,0x8b16c400
  4259e1:	stc    
  4259e2:	test   al,0x8a
  4259e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259e5:	push   0xfffffff1
  4259e7:	rcl    DWORD PTR [esi],cl
  4259e9:	mov    eax,0x2312508a
  4259ee:	repnz loope 0x4259bb
  4259f1:	addr16 inc edx
  4259f3:	(bad)  
  4259f4:	aam    0xcf
  4259f6:	inc    edi
  4259f7:	sub    DWORD PTR [ecx],edx
  4259f9:	xchg   edx,eax
  4259fa:	jmp    0xcb83:0x9b183395
  425a01:	cmp    edx,edx
  425a03:	stos   DWORD PTR es:[edi],eax
  425a04:	lds    ebp,FWORD PTR [eax+ecx*8]
  425a07:	outs   dx,BYTE PTR ds:[esi]
  425a08:	out    dx,al
  425a09:	ja     0x4259d2
  425a0b:	jbe    0x425a16
  425a0d:	and    ah,cl
  425a0f:	out    dx,eax
  425a10:	call   DWORD PTR es:[edi+ebx*1+0x12]
  425a15:	shl    DWORD PTR [eax+0x7bd8dd7a],0xff
  425a1c:	in     al,dx
  425a1d:	adc    BYTE PTR [edi-0x7237d1e8],0xbc
  425a24:	jb     0x4259fb
  425a26:	lds    eax,FWORD PTR [eax+0x2]
  425a29:	sbb    al,0xbb
  425a2b:	dec    ebp
  425a2c:	inc    edi
  425a2d:	pushf  
  425a2e:	push   eax
  425a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a30:	(bad)  
  425a31:	std    
  425a32:	bound  edi,QWORD PTR [esi+0x48]
  425a35:	leave  
  425a36:	inc    ebx
  425a37:	mov    eax,ds:0x823aec77
  425a3c:	sub    bl,BYTE PTR [eax]
  425a3e:	call   0xa8ee9065
  425a43:	fnstcw WORD PTR [eax-0x12]
  425a46:	clc    
  425a47:	xchg   ebx,edx
  425a49:	adc    al,0x7
  425a4b:	push   DWORD PTR [ecx-0x56859906]
  425a51:	dec    esi
  425a52:	jne    0x425aad
  425a54:	jl     0x425a68
  425a56:	loope  0x425a52
  425a58:	mov    ds:0x538b3487,eax
  425a5d:	xchg   esp,eax
  425a5e:	imul   edi,DWORD PTR [ebx+0x43],0x4c
  425a62:	les    ecx,FWORD PTR [eax+0x28f916e]
  425a68:	clc    
  425a69:	stos   BYTE PTR es:[edi],al
  425a6a:	lock cmp al,dh
  425a6d:	bsf    ecx,DWORD PTR [edx-0x4c13bbd5]
  425a74:	int    0xbd
  425a76:	fild   DWORD PTR [esi+0x37]
  425a79:	jge    0x425a17
  425a7b:	push   ecx
  425a7c:	and    eax,0x11a5387e
  425a81:	into   
  425a82:	aaa    
  425a83:	sbb    DWORD PTR [edx+eax*2+0x24],0xffffffcc
  425a88:	or     ebx,DWORD PTR [ecx]
  425a8a:	push   ss
  425a8b:	dec    ebp
  425a8c:	cld    
  425a8d:	mov    ecx,0xf900d810
  425a92:	dec    esi
  425a93:	cld    
  425a94:	(bad)  
  425a95:	pop    ecx
  425a96:	adc    al,0xea
  425a98:	test   eax,0xc5f9564b
  425a9d:	dec    esi
  425a9e:	jp     0x425b1a
  425aa0:	sbb    BYTE PTR [edx+0x21aca45a],cl
  425aa6:	fs repnz (bad) 
  425aa9:	(bad)  
  425aab:	jmp    0x220f43d9
  425ab0:	ja     0x425a50
  425ab2:	push   es
  425ab3:	int3   
  425ab4:	cs xchg ebx,eax
  425ab6:	mov    al,es:0x6a9d50f1
  425abc:	xchg   DWORD PTR [ebp+0xdb925cd],esp
  425ac2:	jge    0x425a51
  425ac4:	pop    ebp
  425ac5:	test   BYTE PTR [ecx],ch
  425ac7:	or     al,BYTE PTR ds:0xcce1fc40
  425acd:	mov    ecx,0xbeac6944
  425ad2:	jmp    0x425ab0
  425ad4:	pop    eax
  425ad5:	dec    edi
  425ad6:	xchg   ebx,eax
  425ad7:	or     al,0x86
  425ad9:	imul   ecx,eax,0xf0821ce3
  425adf:	sahf   
  425ae0:	adc    esp,esi
  425ae2:	loopne 0x425a7e
  425ae4:	loope  0x425b60
  425ae6:	cmp    BYTE PTR [eax+ebx*1+0x59],0xd1
  425aeb:	mov    esi,0xca89740c
  425af0:	sti    
  425af1:	sar    al,1
  425af3:	nop
  425af4:	mov    dl,0xb4
  425af6:	mov    eax,ds:0xd6acb0a1
  425afb:	pop    esp
  425afc:	aas    
  425afd:	mov    WORD PTR [edi+edi*8+0x74431530],fs
  425b04:	hlt    
  425b05:	and    BYTE PTR [eax+0x5c],cl
  425b08:	jnp    0x425b28
  425b0a:	sbb    ch,BYTE PTR [ecx+0x6d433265]
  425b10:	or     eax,0xf00b78e6
  425b15:	iret   
  425b16:	sub    eax,0x45e7a7c8
  425b1b:	scas   eax,DWORD PTR es:[edi]
  425b1c:	je     0x425b5c
  425b1e:	jle    0x425b13
  425b20:	dec    edi
  425b21:	sub    DWORD PTR [ecx+ebx*4-0x530f7c00],ebp
  425b28:	inc    ecx
  425b29:	mov    ch,0x3c
  425b2b:	icebp  
  425b2c:	xchg   ebx,eax
  425b2d:	lock xor esp,ebp
  425b30:	lea    esi,[ecx+0x1a]
  425b33:	add    eax,0x9bf700aa
  425b38:	xor    BYTE PTR [edi],bh
  425b3a:	enter  0xe10e,0x39
  425b3e:	push   ss
  425b3f:	xchg   edx,eax
  425b40:	(bad)  
  425b42:	inc    ebp
  425b43:	(bad)  
  425b45:	inc    esi
  425b46:	in     eax,0x57
  425b48:	sbb    eax,0x4c4457ea
  425b4d:	push   esi
  425b4e:	xor    eax,0x6856dc3e
  425b53:	jecxz  0x425ba4
  425b55:	jecxz  0x425bbd
  425b57:	pop    edi
  425b58:	add    bh,dh
  425b5a:	cmp    eax,0xb57b5353
  425b5f:	lock stc 
  425b61:	xchg   DWORD PTR [eax-0x18],edx
  425b64:	and    eax,0x51eb17d2
  425b69:	pslld  mm0,QWORD PTR ds:0xf79182cc
  425b70:	dec    ecx
  425b71:	jmp    0x425af5
  425b73:	ins    DWORD PTR es:[edi],dx
  425b74:	add    ah,BYTE PTR [ebp-0x75]
  425b77:	iret   
  425b78:	pop    es
  425b79:	jmp    0x425b02
  425b7b:	ret    
  425b7c:	mov    al,ds:0x9f08d3be
  425b81:	xchg   edi,eax
  425b82:	call   0xd0831a96
  425b87:	sub    DWORD PTR [ecx-0x7fbf746e],0x3
  425b8e:	xor    ch,BYTE PTR [ecx]
  425b90:	out    0x47,al
  425b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b93:	cdq    
  425b94:	cmp    eax,0xdb87cd2
  425b99:	rcr    DWORD PTR [ebp+0x1192ffc0],1
  425b9f:	add    eax,0xacb41062
  425ba4:	inc    edi
  425ba5:	test   DWORD PTR [ebx],ecx
  425ba7:	stc    
  425ba8:	sub    esp,edx
  425baa:	(bad)  
  425bab:	mov    eax,cs:0xcbe0ae37
  425bb1:	or     al,cl
  425bb3:	push   ebp
  425bb4:	or     al,0x5c
  425bb6:	das    
  425bb7:	(bad)  
  425bb9:	sar    al,0x1e
  425bbc:	test   al,0xa4
  425bbe:	pop    edi
  425bbf:	inc    ebx
  425bc0:	addr16 pusha 
  425bc2:	add    eax,0x916e24e3
  425bc7:	pop    eax
  425bc8:	inc    eax
  425bc9:	bound  ebx,QWORD PTR [edi-0x7954a89e]
  425bcf:	into   
  425bd0:	sahf   
  425bd1:	sbb    BYTE PTR [ebp-0x4e76b86b],al
  425bd7:	cmp    BYTE PTR [edi],ah
  425bd9:	jecxz  0x425b80
  425bdb:	xor    DWORD PTR [esi+0x52550bb4],ecx
  425be1:	addr16 jbe 0x425b6b
  425be4:	mov    DWORD PTR [edx+0x48],0x72ad8a05
  425beb:	or     DWORD PTR [esi+edx*4-0x557154b5],ebp
  425bf2:	dec    esi
  425bf3:	adc    esi,ebp
  425bf5:	sub    ebx,DWORD PTR [esp+edi*1-0x26]
  425bf9:	loopne 0x425c49
  425bfb:	jmp    0xa29d:0x50fe369e
  425c02:	test   dh,0x10
  425c05:	pop    edx
  425c06:	and    esi,DWORD PTR [eax-0x7c7b64b7]
  425c0c:	add    eax,0xe8d3a832
  425c11:	fwait
  425c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c14:	push   eax
  425c15:	loope  0x425c5f
  425c17:	jbe    0x425c37
  425c19:	sub    al,0xc9
  425c1b:	jp     0x425c37
  425c1d:	stos   BYTE PTR es:[edi],al
  425c1e:	dec    ebp
  425c1f:	sbb    eax,0x4651a9aa
  425c24:	push   ds
  425c25:	cmp    esi,DWORD PTR [esi]
  425c27:	xchg   BYTE PTR [eax],al
  425c29:	je     0x425c8a
  425c2b:	xor    eax,0xa0a9c491
  425c30:	push   0x8b7259a1
  425c35:	or     dl,BYTE PTR [edx+0x393646ae]
  425c3b:	outs   dx,DWORD PTR ds:[esi]
  425c3c:	(bad)  
  425c3e:	adc    eax,0x9
  425c41:	xor    al,BYTE PTR [esi]
  425c43:	mov    WORD PTR [edi-0x24a3ec8],gs
  425c49:	es xchg ebx,eax
  425c4b:	inc    ecx
  425c4c:	std    
  425c4d:	data16 cmp cl,BYTE PTR [eax]
  425c50:	sahf   
  425c51:	mov    ah,0x17
  425c53:	pop    es
  425c54:	mov    eax,DWORD PTR [edi-0x8a9caa5]
  425c5a:	js     0x425bf3
  425c5c:	jl     0x425c8f
  425c5e:	dec    eax
  425c5f:	in     eax,0x45
  425c61:	fcmovnu st,st(2)
  425c63:	shl    DWORD PTR [ecx+0x43a66bba],1
  425c69:	pop    DWORD PTR [ecx-0x2a]
  425c6c:	fst    DWORD PTR [edi-0x56809d4f]
  425c72:	shr    cl,cl
  425c74:	retf   0xf147
  425c77:	xchg   ch,ah
  425c79:	repnz hlt 
  425c7b:	in     al,dx
  425c7c:	(bad)  
  425c7e:	and    cl,al
  425c80:	mov    DWORD PTR [edx],edi
  425c82:	nop
  425c83:	into   
  425c84:	push   esp
  425c85:	fist   DWORD PTR [eax-0x42307ece]
  425c8b:	cld    
  425c8c:	jmp    0xbe94b840
  425c91:	mov    dl,0x72
  425c93:	mov    al,0x35
  425c95:	(bad)  
  425c96:	xor    cl,al
  425c98:	lods   eax,DWORD PTR ds:[esi]
  425c99:	(bad)  
  425c9a:	lods   eax,DWORD PTR ds:[esi]
  425c9b:	mov    edi,ss
  425c9d:	dec    esp
  425c9e:	mov    ebp,DWORD PTR [ebx]
  425ca0:	pop    ecx
  425ca1:	aaa    
  425ca2:	dec    ebx
  425ca3:	fadd   st,st(6)
  425ca5:	in     eax,0xc5
  425ca7:	pop    ebx
  425ca8:	loop   0x425cb6
  425caa:	jmp    0x425cd9
  425cac:	inc    eax
  425cad:	xor    DWORD PTR [ecx],0xd931d76c
  425cb3:	xchg   ebp,eax
  425cb4:	je     0x425c3e
  425cb6:	push   0xb88d64b1
  425cbb:	xchg   esp,eax
  425cbc:	pop    esp
  425cbd:	push   ds
  425cbe:	je     0x425cde
  425cc0:	rol    BYTE PTR [edi],0x10
  425cc3:	out    dx,al
  425cc4:	sub    BYTE PTR [ecx+0x67],dh
  425cc7:	jo     0x425d40
  425cc9:	push   0xfffffffe
  425ccb:	xchg   esp,eax
  425ccc:	sbb    ecx,DWORD PTR [edx+0x6b963100]
  425cd2:	adc    BYTE PTR [ebx+0x44],0x20
  425cd6:	xchg   esi,eax
  425cd7:	aaa    
  425cd8:	mov    WORD PTR [ebx],gs
  425cda:	nop
  425cdb:	fisub  WORD PTR [ebx]
  425cdd:	sbb    ebx,DWORD PTR [ecx+eiz*2]
  425ce0:	or     DWORD PTR cs:[bp-0x2813],eax
  425ce6:	jp     0x425d17
  425ce8:	jl     0x425cd3
  425cea:	js     0x425c99
  425cec:	sahf   
  425ced:	adc    edx,ebp
  425cef:	aad    0x7c
  425cf1:	les    ecx,FWORD PTR [eax]
  425cf3:	pop    ss
  425cf4:	jmp    0x36da:0x1b6d8ad8
  425cfb:	div    DWORD PTR [ebp+ecx*1-0x3bba328e]
  425d02:	xchg   DWORD PTR [esi+edi*8+0x16],esp
  425d06:	sti    
  425d07:	and    bl,ch
  425d09:	cmp    DWORD PTR [esi+edi*4-0x5e],ebp
  425d0d:	lds    ebx,FWORD PTR [eax]
  425d0f:	push   es
  425d10:	mov    ss,WORD PTR [edx-0x62d2b849]
  425d16:	sti    
  425d17:	pop    esi
  425d18:	xchg   esp,eax
  425d19:	push   ss
  425d1a:	(bad)  
  425d1b:	(bad)  
  425d1c:	dec    edi
  425d1d:	(bad)  
  425d1e:	mov    edx,0xc4a7188
  425d23:	pop    edi
  425d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d25:	mov    eax,ds:0x6ea56233
  425d2a:	cld    
  425d2b:	loopne 0x425cc7
  425d2d:	sbb    ch,ah
  425d2f:	test   BYTE PTR [esi+0x11d5cde3],cl
  425d35:	cmp    dl,BYTE PTR ds:0xa24a1575
  425d3b:	je     0x425db9
  425d3d:	inc    esi
  425d3e:	pop    ss
  425d3f:	imul   eax,esi,0xffffff86
  425d42:	jo     0x425d35
  425d44:	mov    ds,ebp
  425d46:	add    edx,0x49d38650
  425d4c:	bound  edx,QWORD PTR [ebx+0x522a52d0]
  425d52:	mov    al,ds:0x8c8d4dd
  425d57:	enter  0x3fbf,0xd7
  425d5b:	xor    BYTE PTR [ecx-0x5],0xe8
  425d5f:	and    eax,0x2d205f21
  425d64:	loop   0x425d6a
  425d66:	inc    ebp
  425d67:	repnz fldcw WORD PTR [edx]
  425d6a:	pop    ebx
  425d6b:	fld    DWORD PTR [ecx]
  425d6d:	mov    edi,DWORD PTR [eax+eax*1-0x35120000]
  425d74:	mov    ebp,edx
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [ebx+eiz*1-0x10]
  425d80:	xchg   DWORD PTR [edx],esi
  425d82:	cmp    eax,0xf50001d6
  425d87:	add    al,0x0
  425d89:	add    BYTE PTR [edx],bl
  425d8b:	data16 sbb BYTE PTR [ecx],0x9b
  425d8f:	cwde   
  425d90:	pushf  
  425d91:	xchg   ebx,eax
  425d92:	out    0x4c,eax
  425d94:	push   eax
  425d95:	cwde   
  425d96:	stos   BYTE PTR es:[edi],al
  425d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d98:	loopne 0x425e03
  425d9a:	pop    esp
  425d9b:	jle    0x425dce
  425d9d:	inc    eax
  425d9e:	popa   
  425d9f:	fisttp QWORD PTR [eax]
  425da1:	dec    eax
  425da2:	push   ebx
  425da4:	xchg   ecx,eax
  425da5:	or     dl,BYTE PTR [edi-0x1915ca56]
  425dab:	jo     0x425e00
  425dad:	jp     0x425d35
  425daf:	xor    BYTE PTR [edi],dh
  425db1:	call   0x5c1b93cf
  425db6:	cmc    
  425db7:	sbb    al,0x3a
  425db9:	sar    DWORD PTR [eax-0x782cb0e2],1
  425dbf:	in     al,0x37
  425dc1:	dec    ebp
  425dc2:	pop    ebx
  425dc3:	sub    BYTE PTR [edx+ebx*8],al
  425dc6:	loopne 0x425d5c
  425dc8:	pop    eax
  425dc9:	call   0x2733:0xb934b89b
  425dd0:	jae    0x425de0
  425dd2:	push   ebp
  425dd3:	xchg   DWORD PTR [esi+0x3bb83812],esp
  425dd9:	push   edi
  425dda:	pop    es
  425ddb:	inc    edi
  425ddc:	push   0xffffff85
  425dde:	jl     0x425e0f
  425de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425de1:	sahf   
  425de2:	xor    eax,0x9ecd748
  425de7:	xchg   ebx,eax
  425de8:	pop    esp
  425de9:	dec    edi
  425dea:	fist   WORD PTR [eax]
  425dec:	lea    edi,[ebp+edi*4+0x68]
  425df0:	push   esi
  425df1:	imul   ecx,ecx,0xd
  425df4:	pop    ebp
  425df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425df6:	jb     0x425e2b
  425df8:	test   DWORD PTR [edi+0x7],eax
  425dfb:	adc    DWORD PTR [edi+0x4e92bca4],esi
  425e01:	fcom   DWORD PTR [edx+0x2c80b5ce]
  425e07:	push   edx
  425e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e09:	int    0x8b
  425e0b:	fldenv [ebx-0x1a]
  425e0e:	sub    eax,DWORD PTR [ebp-0x1e]
  425e11:	jp     0x425e3c
  425e13:	mov    DWORD PTR [esi],esp
  425e15:	and    eax,0x19c4d6f5
  425e1a:	xchg   edx,eax
  425e1b:	xor    dh,BYTE PTR [ecx-0x69610f03]
  425e21:	xor    ebp,DWORD PTR [eax]
  425e23:	fnstenv [esp+ebx*4-0x2c7677f4]
  425e2a:	sub    DWORD PTR [edx+0x455e17ba],ecx
  425e30:	aaa    
  425e31:	pop    esi
  425e32:	jb     0x425e2b
  425e34:	sbb    bl,BYTE PTR [ebx-0x5f5f834d]
  425e3a:	dec    esi
  425e3b:	lea    ecx,[ecx]
  425e3d:	rcr    BYTE PTR [ecx],0x10
  425e40:	xor    DWORD PTR [edx-0x68c6e510],ebx
  425e46:	mov    ds:0xb4867ace,eax
  425e4b:	lea    edx,[edx-0x23]
  425e4e:	rol    DWORD PTR [edx],cl
  425e50:	cwde   
  425e51:	xchg   edi,eax
  425e52:	test   BYTE PTR [ebp-0x2f4c25ca],bh
  425e58:	add    BYTE PTR [ebx-0x5b],ch
  425e5b:	cmp    BYTE PTR [ecx+0x3b],bl
  425e5e:	stc    
  425e5f:	sbb    al,0x22
  425e61:	push   0xffffffe1
  425e63:	imul   esp,esi,0xffffff8d
  425e66:	xchg   ebp,eax
  425e67:	cmp    DWORD PTR [esi-0x66],eax
  425e6a:	cvttps2pi mm3,QWORD PTR [edx+eiz*1]
  425e6e:	sub    BYTE PTR [edi-0x5f],0x80
  425e72:	jmp    0x213d:0x60720826
  425e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e7a:	cmp    DWORD PTR [ecx+0x37],edx
  425e7d:	leave  
  425e7e:	xchg   esi,eax
  425e7f:	stos   BYTE PTR es:[edi],al
  425e80:	cmp    al,0xbe
  425e82:	sub    cl,BYTE PTR [edx+eax*2+0x57889585]
  425e89:	mov    esi,0x25be734d
  425e8e:	adc    al,0x50
  425e90:	dec    esi
  425e91:	int    0xa0
  425e93:	(bad)  ds:0xc197f0f6
  425e99:	xchg   edx,eax
  425e9a:	mul    bh
  425e9c:	xchg   ebp,eax
  425e9d:	sub    al,0x89
  425e9f:	(bad)  
  425ea0:	xchg   ecx,eax
  425ea1:	aas    
  425ea2:	or     ecx,DWORD PTR ds:0xddfd7904
  425ea8:	ret    
  425ea9:	test   eax,0x5eff3c65
  425eae:	les    edx,FWORD PTR [edx]
  425eb0:	mov    ch,0xbd
  425eb2:	inc    esi
  425eb3:	ja     0x425e39
  425eb5:	inc    esp
  425eb6:	(bad)  ds:0x89bbebb2
  425ebc:	sbb    al,0x11
  425ebe:	adc    BYTE PTR [eax-0x11],bl
  425ec1:	shl    BYTE PTR [esi+0x9],cl
  425ec4:	shr    DWORD PTR [eax],cl
  425ec6:	cld    
  425ec7:	jp     0x425eeb
  425ec9:	pop    edi
  425eca:	add    eax,0x57a76eb0
  425ecf:	retf   
  425ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ed1:	js     0x425e5b
  425ed3:	sub    BYTE PTR [ebx+0x8],al
  425ed6:	jnp    0x425e73
  425ed8:	mov    ebx,ebx
  425eda:	mov    cl,0x76
  425edc:	shr    BYTE PTR [ecx],cl
  425ede:	(bad)  
  425ee0:	sub    eax,0x9431ad0b
  425ee5:	push   esi
  425ee6:	xor    BYTE PTR [edx],al
  425ee8:	(bad)  
  425ee9:	out    dx,al
  425eea:	enter  0x6aef,0x37
  425eee:	out    0xbc,eax
  425ef0:	popf   
  425ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ef2:	or     al,0x9e
  425ef4:	jae    0x425f49
  425ef6:	pop    ecx
  425ef7:	jno    0x425e9b
  425ef9:	push   ss
  425efa:	(bad)  
  425efb:	jmp    0xd73a2643
  425f00:	cmp    BYTE PTR [ebx-0x2b],cl
  425f03:	into   
  425f04:	mov    eax,0x6fed2c14
  425f09:	mov    BYTE PTR [ebp+0x6041d4eb],dl
  425f0f:	mov    cl,0x8c
  425f11:	enter  0xad4,0x8f
  425f15:	mov    edx,0x8bc78532
  425f1a:	test   al,0xb
  425f1c:	and    esi,ebp
  425f1e:	adc    eax,0x7790a82c
  425f23:	xchg   edx,eax
  425f24:	mov    ah,0x15
  425f26:	aam    0xa1
  425f28:	int    0x94
  425f2a:	sub    BYTE PTR [ecx+0x1e],cl
  425f2d:	xchg   edx,eax
  425f2e:	icebp  
  425f2f:	aas    
  425f30:	xor    eax,0xbe5fbac9
  425f35:	repnz sar esp,1
  425f38:	sbb    DWORD PTR [edx],esp
  425f3a:	test   BYTE PTR [edx],al
  425f3c:	popa   
  425f3d:	xchg   DWORD PTR [edi+ecx*1+0x58],ebp
  425f41:	adc    al,0x96
  425f43:	aaa    
  425f44:	fsubr  QWORD PTR [ebp+0x29784c14]
  425f4a:	and    bl,BYTE PTR [eax+0x43]
  425f4d:	push   es
  425f4e:	(bad)  
  425f4f:	cld    
  425f50:	fstp   QWORD PTR [esi]
  425f52:	push   0x3
  425f54:	pop    es
  425f55:	or     BYTE PTR [eax-0x45],al
  425f58:	popa   
  425f59:	popa   
  425f5a:	cmp    eax,0xaa7ff27a
  425f5f:	aam    0x8
  425f61:	and    eax,0x74c18ffd
  425f66:	out    dx,al
  425f67:	jns    0x425ee9
  425f69:	xchg   edi,eax
  425f6a:	jl     0x425fca
  425f6c:	xor    DWORD PTR [edi+eax*2],0xffffffd2
  425f70:	fsubr  DWORD PTR [ecx+0x22]
  425f73:	mov    ?,esi
  425f75:	cmp    BYTE PTR [esi+0x10274309],bl
  425f7b:	fst    DWORD PTR [esi+edi*1-0x4]
  425f7f:	or     al,0x27
  425f81:	repz jne 0x425fa5
  425f84:	enter  0xeb73,0x7e
  425f88:	pop    ebx
  425f89:	cmp    edx,edx
  425f8b:	pop    ss
  425f8c:	xor    esp,DWORD PTR [ecx+0x39]
  425f8f:	or     DWORD PTR [ecx],0xf179cc30
  425f95:	retf   
  425f96:	cmp    eax,0x5a7b059e
  425f9b:	xor    eax,0x8a5b941a
  425fa0:	mov    bl,0x63
  425fa2:	jae    0x425fdc
  425fa4:	push   ecx
  425fa5:	fcmovbe st,st(4)
  425fa7:	xor    al,0x13
  425fa9:	mov    dl,0x74
  425fab:	dec    ebp
  425fac:	or     BYTE PTR [edi],bl
  425fae:	into   
  425faf:	inc    esp
  425fb0:	popa   
  425fb1:	dec    ecx
  425fb2:	popa   
  425fb3:	loope  0x425ff1
  425fb5:	sbb    eax,0x31bfc75d
  425fba:	jne    0x425fc4
  425fbc:	loop   0x425f9c
  425fbe:	or     al,0x2b
  425fc0:	int    0x16
  425fc2:	daa    
  425fc3:	aaa    
  425fc4:	mov    ebx,0xf68928d0
  425fc9:	cmp    DWORD PTR ds:0xdf6b71f9,edi
  425fcf:	mov    ah,0xe0
  425fd1:	jmp    0x425feb
  425fd3:	jbe    0x426026
  425fd5:	cmp    ebx,DWORD PTR [eax-0x76728a87]
  425fdb:	cwde   
  425fdc:	js     0x425ff2
  425fde:	xor    esi,esi
  425fe0:	sahf   
  425fe1:	fwait
  425fe2:	adc    dh,BYTE PTR [eax+0x5c6a6430]
  425fe8:	js     0x426007
  425fea:	jge    0x426012
  425fec:	pushf  
  425fed:	xchg   esi,eax
  425fee:	pop    esi
  425fef:	cwde   
  425ff0:	or     DWORD PTR [edi],edx
  425ff2:	jnp    0x426071
  425ff4:	cmp    eax,0xc66b2426
  425ff9:	aam    0x2
  425ffb:	push   0x18
  425ffd:	imul   edi,DWORD PTR [edi-0x3ed2ba69],0x64
  426004:	cmp    dl,BYTE PTR [ebx-0x75]
  426007:	mov    ebx,0x447aa0b7
  42600c:	or     BYTE PTR [ebp+ebx*4+0x1e6a67cf],0xc4
  426014:	js     0x42605d
  426016:	dec    ebx
  426017:	jecxz  0x426098
  426019:	fcomp  DWORD PTR [ecx]
  42601b:	stc    
  42601c:	pop    edx
  42601d:	xchg   ebx,eax
  42601e:	(bad)  
  42601f:	push   ss
  426020:	cmp    al,0xa8
  426022:	pop    ss
  426023:	loope  0x425fda
  426025:	cli    
  426026:	jne    0x4260a5
  426028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426029:	(bad)  
  42602a:	aad    0x69
  42602c:	inc    ebp
  42602d:	fs shr esi,1
  426030:	mov    cl,0x8b
  426032:	xor    eax,0xf192732d
  426037:	fdivr  st(5),st
  426039:	mov    BYTE PTR [ecx-0x12c68163],bh
  42603f:	les    edx,FWORD PTR [ebx+esi*1+0x48]
  426043:	mov    eax,ds:0xf97b1a42
  426048:	jns    0x42608f
  42604a:	xchg   ebx,eax
  42604b:	inc    edx
  42604c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42604d:	lahf   
  42604e:	xor    DWORD PTR [ecx+0x32],ebp
  426051:	xor    DWORD PTR [ecx-0x46],edi
  426054:	push   ds
  426055:	mov    esi,0x91ce1d3f
  42605a:	sbb    al,BYTE PTR [ebx]
  42605c:	jmp    0x4260d8
  42605e:	xchg   edx,eax
  42605f:	sbb    esp,DWORD PTR [edx-0x79137a76]
  426065:	mov    edx,0xd2bf8d2d
  42606a:	dec    ecx
  42606b:	loopne 0x426008
  42606d:	into   
  42606e:	loopne 0x426061
  426070:	dec    esi
  426071:	jp     0x426068
  426073:	mov    edx,0xee83a0d9
  426078:	pop    ebx
  426079:	icebp  
  42607a:	mov    al,es:0x940778cf
  426080:	retf   0x7d0
  426083:	adc    ebx,DWORD PTR [ecx]
  426085:	push   0x2b
  426087:	mov    dl,0xe7
  426089:	in     al,0x8
  42608b:	int    0x3
  42608d:	xchg   edx,eax
  42608e:	push   0xc1224c1c
  426093:	in     al,dx
  426094:	in     eax,0x8
  426096:	push   0xffffff8e
  426098:	pcmpgtw mm6,QWORD PTR [edx-0x20f7c927]
  42609f:	mov    ecx,0xda94416b
  4260a4:	stos   DWORD PTR es:[edi],eax
  4260a5:	push   ebp
  4260a6:	jne    0x42610d
  4260a8:	test   BYTE PTR [eax],cl
  4260aa:	push   eax
  4260ab:	rcl    BYTE PTR [ebx+0x7c],cl
  4260ae:	imul   edx,DWORD PTR [ecx-0x10],0xe82988e0
  4260b5:	cmc    
  4260b6:	ja     0x4260b0
  4260b8:	int3   
  4260b9:	outs   dx,DWORD PTR ds:[esi]
  4260ba:	fisttp WORD PTR [ebx-0x72]
  4260bd:	shl    DWORD PTR [eax+0x45],0xcb
  4260c1:	add    bl,BYTE PTR [ebp-0x3e]
  4260c4:	rcl    ch,1
  4260c6:	mov    edx,0x693fa204
  4260cb:	push   ecx
  4260cc:	sbb    BYTE PTR [edi+0x64597ff1],bl
  4260d2:	pusha  
  4260d3:	xor    eax,0xf9e5bee1
  4260d8:	ss lahf 
  4260da:	test   al,0x4c
  4260dc:	inc    ebx
  4260dd:	jae    0x426113
  4260df:	and    BYTE PTR [esi],0x6e
  4260e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260e3:	push   ebx
  4260e4:	cmc    
  4260e5:	stc    
  4260e6:	js     0x42606d
  4260e8:	pop    es
  4260e9:	repnz sbb edi,DWORD PTR [ecx+0x184cbbc9]
  4260f0:	mov    ah,BYTE PTR [ebx]
  4260f2:	xlat   BYTE PTR ds:[ebx]
  4260f3:	(bad)  
  4260f4:	fistp  QWORD PTR [edi-0x6e]
  4260f7:	daa    
  4260f8:	adc    al,0xee
  4260fa:	aad    0xc2
  4260fc:	jp     0x4260ba
  4260fe:	daa    
  4260ff:	ret    
  426100:	add    DWORD PTR [esi+edx*2],ebp
  426103:	je     0x426176
  426105:	stc    
  426106:	or     BYTE PTR [ebp-0x6ba9224],dl
  42610c:	loope  0x42617d
  42610e:	outs   dx,DWORD PTR ds:[esi]
  42610f:	mov    DWORD PTR [ebp-0x45],ecx
  426112:	jns    0x426117
  426114:	adc    al,0x26
  426116:	mov    bh,0x68
  426118:	outs   dx,DWORD PTR ds:[esi]
  426119:	imul   esp,DWORD PTR [esi+0x49],0x1dac7f2d
  426120:	push   0xffffffba
  426122:	xor    ecx,ecx
  426124:	mov    ds:0xdf7b780b,al
  426129:	sbb    cl,BYTE PTR [ecx+ecx*8+0x15952c14]
  426130:	inc    edx
  426131:	add    ecx,ebx
  426133:	frstor [esi]
  426135:	or     al,0xfc
  426137:	aaa    
  426138:	fiadd  WORD PTR [edx+0x6c]
  42613b:	fwait
  42613c:	(bad)
  42613f:	jp     0x4260ef
  426141:	cmc    
  426142:	pop    esi
  426143:	push   0x4862d677
  426148:	in     eax,0x2d
  42614a:	and    DWORD PTR [ebx+0x3b7bf0f2],ebx
  426150:	push   ebp
  426151:	xchg   ebx,eax
  426152:	jmp    0x7141:0x99ee9c72
  426159:	mov    dl,0x6e
  42615b:	fbld   TBYTE PTR [ebx]
  42615d:	fadd   QWORD PTR ds:0xe7183ea8
  426163:	pushf  
  426164:	xchg   edi,eax
  426165:	adc    edi,0xffffffa5
  426168:	aas    
  426169:	push   ds
  42616a:	mov    bh,0x1e
  42616c:	pop    es
  42616d:	mov    esi,DWORD PTR [ebp+ecx*4+0x2a]
  426171:	test   eax,0x32f850da
  426176:	pop    ebp
  426177:	add    BYTE PTR [ebp+ebp*2+0x42c7f47f],dl
  42617e:	cmp    al,0x6d
  426180:	xor    BYTE PTR [edx],dh
  426182:	jge    0x426177
  426184:	in     eax,dx
  426185:	aam    0x74
  426187:	adc    edi,DWORD PTR [ebp+0x84f3734]
  42618d:	mov    ebp,0xa9affcea
  426192:	add    dl,BYTE PTR [edi+0x5438bfd4]
  426198:	fiadd  WORD PTR [ecx+ebx*1+0x63]
  42619c:	mov    BYTE PTR [esi-0x2a4edae5],0x6
  4261a3:	f2xm1  
  4261a5:	xchg   edi,eax
  4261a6:	ins    BYTE PTR es:[edi],dx
  4261a7:	cmp    BYTE PTR [edx+ebp*2],bh
  4261aa:	(bad)  
  4261ab:	fstp   st(1)
  4261ad:	pusha  
  4261ae:	mov    al,ds:0xcffe6e6a
  4261b3:	imul   ecx,DWORD PTR [ebp-0x3e],0xd0d53786
  4261ba:	xor    DWORD PTR [ebx+0x4563d1fb],esi
  4261c0:	sahf   
  4261c1:	jb     0x426209
  4261c3:	repnz das 
  4261c5:	cli    
  4261c6:	xchg   ebx,eax
  4261c7:	icebp  
  4261c8:	popa   
  4261c9:	adc    cl,ah
  4261cb:	jbe    0x426214
  4261cd:	aad    0xdf
  4261cf:	daa    
  4261d0:	mov    esi,0x3ba91ef0
  4261d5:	arpl   si,di
  4261d7:	rcl    DWORD PTR [eax],0x84
  4261da:	add    eax,esi
  4261dc:	jnp    0x4261fc
  4261de:	mov    ebp,DWORD PTR [eax-0x25]
  4261e1:	pop    ss
  4261e2:	test   eax,0xe2711fbd
  4261e7:	iret   
  4261e8:	mov    ds:0x352fd668,eax
  4261ed:	data16 in al,dx
  4261ef:	mov    BYTE PTR [ebp+0x4f2f9e7d],al
  4261f5:	nop
  4261f6:	cli    
  4261f7:	or     al,0xc3
  4261f9:	gs scas eax,DWORD PTR es:[edi]
  4261fb:	push   esp
  4261fc:	and    BYTE PTR [edi+eiz*2-0x27d7ea1d],dh
  426203:	inc    esi
  426204:	adc    eax,0x4612d776
  426209:	pusha  
  42620a:	pop    ds
  42620b:	push   ecx
  42620c:	jb     0x426238
  42620e:	out    dx,eax
  42620f:	shl    DWORD PTR [edi-0x44],0x42
  426213:	mov    ah,0xd0
  426215:	jmp    DWORD PTR [edi]
  426217:	cli    
  426218:	jno    0x426225
  42621a:	inc    edx
  42621b:	mov    eax,0xd0290573
  426220:	push   0xffffffe2
  426222:	xchg   ecx,eax
  426223:	adc    ah,ch
  426225:	xchg   ecx,eax
  426226:	mov    cs,WORD PTR [edi+0x2c8bc094]
  42622c:	enter  0x641b,0x9b
  426230:	idiv   BYTE PTR [ebp+0x2b70663d]
  426236:	clc    
  426237:	fstp   QWORD PTR [edi-0x54b1236a]
  42623d:	jle    0x4261e4
  42623f:	loopne 0x426254
  426241:	test   al,0x22
  426243:	mov    edi,DWORD PTR ds:[ecx-0x2b2ad18a]
  42624a:	es mov dh,0x78
  42624d:	jns    0x426240
  42624f:	jle    0x4261f1
  426251:	adc    ecx,DWORD PTR gs:[edi-0x6a]
  426255:	clc    
  426256:	cmp    edi,ecx
  426258:	mov    cl,0x3f
  42625a:	sbb    al,al
  42625c:	data16 jg 0x42623e
  42625f:	push   0xb62b46e4
  426264:	pusha  
  426265:	std    
  426266:	rcl    BYTE PTR [edx],1
  426268:	push   ecx
  426269:	(bad)  
  42626a:	fdivr  DWORD PTR [edx]
  42626c:	stos   DWORD PTR es:[edi],eax
  42626d:	ins    DWORD PTR es:[edi],dx
  42626e:	aad    0x6a
  426270:	pop    ss
  426271:	ss push eax
  426273:	call   0x5d13:0xa364cece
  42627a:	xchg   esi,eax
  42627b:	lods   al,BYTE PTR ds:[esi]
  42627c:	fwait
  42627d:	out    0xe2,al
  42627f:	add    BYTE PTR [eax],al
  426281:	add    BYTE PTR [ecx-0x3d],dh
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	es test al,0x1c
  426291:	(bad)  
  426292:	xor    bl,bl
  426294:	add    DWORD PTR [eax],eax
  426296:	cmc    
  426297:	add    al,0x0
  426299:	add    dh,bl
  42629b:	test   DWORD PTR [ebx],edi
  42629d:	push   edx
  42629e:	jg     0x4262d4
  4262a0:	fist   DWORD PTR [ecx+0x7fd07793]
  4262a6:	push   ebp
  4262a7:	popf   
  4262a8:	adc    bh,al
  4262aa:	in     al,dx
  4262ab:	pop    ebx
  4262ac:	mov    dl,0x9e
  4262ae:	ror    DWORD PTR [ecx+0x380ccadd],cl
  4262b4:	mov    ecx,0xa986325a
  4262b9:	and    cl,ah
  4262bb:	rol    DWORD PTR ds:0x18bb2c6b,cl
  4262c1:	pop    edx
  4262c2:	mov    dh,0xc8
  4262c4:	mov    dh,0x9f
  4262c6:	iret   
  4262c7:	loope  0x426347
  4262c9:	xor    ecx,esi
  4262cb:	inc    esi
  4262cc:	fmul   DWORD PTR [ebx-0x6eb9eff2]
  4262d2:	into   
  4262d3:	hlt    
  4262d4:	adc    eax,0x5052f55d
  4262d9:	mov    fs,WORD PTR [edi-0x149212a5]
  4262df:	in     eax,dx
  4262e0:	pop    eax
  4262e1:	fldenv [edi+0x72]
  4262e4:	mov    edx,0xe567f433
  4262e9:	lds    ebp,FWORD PTR [esi+0x1714ca86]
  4262ef:	xchg   ecx,eax
  4262f0:	xchg   ebx,eax
  4262f1:	(bad)  
  4262f2:	call   0xfc2cbb50
  4262f7:	lods   al,BYTE PTR ds:[esi]
  4262f8:	stos   DWORD PTR es:[edi],eax
  4262f9:	or     ch,dh
  4262fb:	xchg   ecx,eax
  4262fc:	aaa    
  4262fd:	mov    esp,0x27184079
  426302:	imul   esp,edi,0x9480a781
  426308:	addr16 xchg esi,eax
  42630a:	mov    ebp,DWORD PTR [edx]
  42630c:	add    esi,DWORD PTR [ecx+0x5ef16720]
  426312:	(bad)  
  426313:	(bad)  
  426314:	(bad)  
  426316:	jmp    0x4262b4
  426318:	jl     0x4262d1
  42631a:	aas    
  42631b:	aad    0x99
  42631d:	sub    eax,DWORD PTR fs:[edi+0x437e6535]
  426324:	(bad)  
  426325:	dec    ebp
  426326:	mov    dl,0x35
  426328:	into   
  426329:	jp     0x4262b0
  42632b:	cmp    DWORD PTR [esi+eiz*4],esi
  42632e:	mov    edi,0xfc7d898a
  426333:	iret   
  426334:	and    eax,0xef7659bd
  426339:	and    al,0x10
  42633b:	mov    esi,0xb7ba7b13
  426340:	and    esi,DWORD PTR [esi+0x2f]
  426343:	ret    
  426344:	in     al,0x89
  426346:	add    dl,0xcd
  426349:	and    al,0x57
  42634b:	in     al,0xf9
  42634d:	mov    ds:0xd4a1dc91,eax
  426352:	push   ds
  426353:	or     eax,0xfa0207b2
  426358:	shr    BYTE PTR [ecx],0xd2
  42635b:	cmp    dh,cl
  42635d:	lahf   
  42635e:	xchg   esi,eax
  42635f:	pop    ebp
  426360:	jmp    0x4808:0xe7f66df4
  426367:	retf   0x7e5b
  42636a:	jbe    0x426328
  42636c:	mov    ah,0x89
  42636e:	scas   al,BYTE PTR es:[edi]
  42636f:	sub    DWORD PTR [ebp+0x3cb15b20],esp
  426375:	dec    cx
  426377:	sub    DWORD PTR [edi-0x39b7ccb6],edi
  42637d:	jl     0x4263aa
  42637f:	mov    ch,0xe3
  426381:	ret    
  426382:	int    0xb3
  426384:	mov    WORD PTR [edx],gs
  426386:	jge    0x426334
  426388:	dec    edx
  426389:	push   es
  42638a:	push   0xa3bbdb62
  42638f:	fs cld 
  426391:	fsubp  st(4),st
  426393:	sar    BYTE PTR [edx],1
  426395:	outs   dx,BYTE PTR ds:[esi]
  426396:	mov    al,ds:0x4d304a1d
  42639b:	enter  0xe3c3,0xe8
  42639f:	sar    BYTE PTR [esi-0x6c4a5c51],cl
  4263a5:	sbb    eax,0xa2cc902
  4263aa:	mov    bl,0x64
  4263ac:	(bad)  
  4263ad:	mov    ds:0x5f03ce51,al
  4263b2:	fist   DWORD PTR [ebx+eiz*4]
  4263b5:	jp     0x426402
  4263b7:	mov    WORD PTR [esi-0x76d1cbe1],gs
  4263bd:	mov    dh,0x55
  4263bf:	xor    al,0xb6
  4263c1:	mov    ch,0x2
  4263c3:	mov    edi,0x775299b7
  4263c8:	icebp  
  4263c9:	loope  0x4263d4
  4263cb:	pop    DWORD PTR [ebx]
  4263cd:	or     al,0x8f
  4263cf:	sub    BYTE PTR ds:0x44901a42,bl
  4263d5:	push   ebx
  4263d6:	test   esi,esi
  4263d8:	adc    DWORD PTR [edi-0x2527cf66],0x28
  4263df:	(bad)  
  4263e0:	pop    esi
  4263e1:	jg     0x426375
  4263e3:	leave  
  4263e4:	push   0xfffffff2
  4263e6:	fsubrp st(5),st
  4263e8:	or     al,0x8a
  4263ea:	jns    0x426417
  4263ec:	add    BYTE PTR [eax+0x7e185172],bl
  4263f2:	retf   0x923a
  4263f5:	in     eax,dx
  4263f6:	sbb    DWORD PTR [eax+esi*1-0x7bd35560],0xffffffa0
  4263fe:	cmp    bh,al
  426400:	push   es
  426401:	dec    esi
  426402:	mov    ah,0x1b
  426404:	pop    ss
  426405:	ja     0x426436
  426407:	neg    BYTE PTR [ecx]
  426409:	imul   edx,DWORD PTR ds:[edx+0x607bc450],0xaef3a701
  426414:	ja     0x42647e
  426416:	lods   eax,DWORD PTR ds:[esi]
  426417:	(bad)  
  426418:	outs   dx,DWORD PTR ds:[esi]
  426419:	ja     0x426454
  42641b:	mov    esp,0xca3c45fd
  426420:	inc    ebp
  426421:	das    
  426422:	repz pop eax
  426424:	out    0x3,al
  426426:	inc    esi
  426427:	sbb    ebx,DWORD PTR [esi-0x2263a899]
  42642d:	outs   dx,BYTE PTR ds:[esi]
  42642e:	and    al,0x2b
  426430:	inc    esp
  426431:	cmp    bl,BYTE PTR [edi]
  426433:	sub    DWORD PTR [esi+0x1d2f3f86],0x4e49dcbe
  42643d:	repz into 
  42643f:	test   eax,0x3f8eea34
  426444:	push   0x45
  426446:	ds jmp 0xb6d2:0xb1f7ffa3
  42644e:	lds    edx,FWORD PTR [esi]
  426450:	jnp    0x426417
  426452:	pop    ecx
  426453:	dec    ebp
  426454:	push   es
  426455:	sub    eax,0x3f02b608
  42645a:	int3   
  42645b:	mov    edx,0x451b934f
  426460:	xchg   BYTE PTR [ecx],dh
  426462:	ret    
  426463:	addr16 pop edx
  426465:	stos   DWORD PTR es:[di],eax
  426467:	mov    eax,ds:0x1dc413e7
  42646c:	scas   al,BYTE PTR es:[edi]
  42646d:	call   0xe59284ad
  426472:	dec    esp
  426473:	add    esp,DWORD PTR ds:[ebx+esi*2+0x1cf146d2]
  42647b:	xor    esi,edx
  42647d:	pavgb  mm7,QWORD PTR [ebx-0x4c]
  426481:	jecxz  0x4264b8
  426483:	fld    QWORD PTR [esi+ecx*2+0x2a]
  426487:	xlat   BYTE PTR ds:[ebx]
  426489:	xchg   DWORD PTR [edx],esp
  42648b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42648c:	pop    edi
  42648d:	and    al,0x63
  42648f:	repnz test eax,0x635a93cc
  426495:	or     BYTE PTR [edi+0x13],dl
  426498:	ret    0xcdb9
  42649b:	dec    eax
  42649c:	cwde   
  42649d:	pop    ds
  42649e:	int3   
  42649f:	inc    ebp
  4264a0:	stc    
  4264a1:	or     eax,0x2608d096
  4264a6:	ins    DWORD PTR es:[edi],dx
  4264a7:	inc    ebp
  4264a8:	dec    ebx
  4264a9:	jge    0x426462
  4264ab:	xchg   edi,eax
  4264ac:	add    eax,0xa245bded
  4264b1:	xchg   esp,eax
  4264b2:	es aas 
  4264b4:	pop    eax
  4264b5:	jns    0x42645d
  4264b7:	out    dx,al
  4264b8:	add    BYTE PTR [eax+edi*4-0x74],bh
  4264bc:	repnz xor eax,0xc26ab976
  4264c2:	mov    eax,0x1b108888
  4264c7:	rol    ecx,0x4e
  4264ca:	pop    ebp
  4264cb:	cld    
  4264cc:	push   ds
  4264cd:	mov    eax,ds:0x11869e9a
  4264d2:	xor    al,0x16
  4264d4:	lods   al,BYTE PTR ds:[esi]
  4264d5:	out    dx,eax
  4264d6:	shl    DWORD PTR [ebx-0x6d],0x72
  4264da:	das    
  4264db:	jl     0x426466
  4264dd:	outs   dx,BYTE PTR ds:[esi]
  4264de:	pop    eax
  4264df:	retf   
  4264e0:	sti    
  4264e1:	mov    al,0x20
  4264e3:	sbb    bl,BYTE PTR [edx+0x56]
  4264e6:	or     bh,BYTE PTR [ecx+ebx*2+0x375cf9b3]
  4264ed:	ja     0x4264e6
  4264ef:	mul    BYTE PTR [edi+edx*2]
  4264f2:	dec    esi
  4264f3:	sub    ebx,0x2cfdcf87
  4264f9:	cs add ebp,edi
  4264fc:	shl    BYTE PTR [ebx-0x59],0xdc
  426500:	pop    esi
  426501:	jns    0x4264f0
  426503:	push   es
  426504:	cld    
  426505:	xor    esi,DWORD PTR [edi+0x5]
  426508:	inc    edx
  426509:	and    eax,DWORD PTR [ebp-0x24]
  42650c:	test   BYTE PTR [ebp-0x47],ch
  42650f:	lock cmp al,0x5d
  426512:	and    ch,BYTE PTR [edi-0x3]
  426515:	dec    esp
  426516:	mov    ?,WORD PTR [edx+0x5e]
  426519:	mov    ds:0x71d1355b,al
  42651e:	in     eax,0xb3
  426520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426521:	mov    bh,0xbf
  426523:	or     BYTE PTR [esi],bl
  426525:	fadd   st(3),st
  426527:	out    0xc,al
  426529:	inc    esi
  42652a:	clc    
  42652b:	bound  esi,QWORD PTR [esi]
  42652d:	mov    edx,0xbb010934
  426532:	mov    dl,0xc3
  426534:	dec    ecx
  426535:	inc    edx
  426536:	add    bh,BYTE PTR [ebp-0x78]
  426539:	test   DWORD PTR [edi-0x5b77dfd2],ebp
  42653f:	pop    esi
  426540:	aad    0x86
  426542:	fisttp DWORD PTR [eax+0x38]
  426545:	sar    DWORD PTR [eax-0x5c],0xa5
  426549:	ror    bl,cl
  42654b:	mov    ds,eax
  42654d:	sub    BYTE PTR [edi+0x49799ac4],0x7a
  426554:	jmp    0x4265af
  426556:	cmp    BYTE PTR [esp+ebp*1+0x2b6c0af],al
  42655d:	adc    al,0x33
  42655f:	sub    eax,0x8dec85d8
  426564:	outs   dx,DWORD PTR ds:[esi]
  426565:	into   
  426566:	fstp   TBYTE PTR [ebp-0x23780967]
  42656c:	inc    edi
  42656d:	xor    edi,DWORD PTR [esi-0x32]
  426570:	aaa    
  426571:	out    dx,al
  426572:	fwait
  426573:	dec    esi
  426574:	sub    al,0xae
  426576:	js     0x426537
  426578:	js     0x42656e
  42657a:	fbld   TBYTE PTR [ebx]
  42657c:	jb     0x42653c
  42657e:	mov    eax,0xd139f4dc
  426583:	jmp    0xa4294d37
  426588:	jb     0x426575
  42658a:	in     eax,dx
  42658b:	arpl   bx,ax
  42658d:	dec    esp
  42658e:	pop    eax
  42658f:	or     eax,DWORD PTR ss:[edi-0x4df5dd08]
  426596:	adc    BYTE PTR [edx+0x43],ah
  426599:	adc    eax,0xe1a29dce
  42659e:	test   eax,0x1d9b0ba4
  4265a3:	mov    eax,ds:0x51bd5205
  4265a8:	push   0xcbcde88f
  4265ad:	(bad)  
  4265ae:	sbb    bh,BYTE PTR ds:0x1eb44937
  4265b4:	push   es
  4265b5:	leave  
  4265b6:	jae    0x426551
  4265b8:	or     edi,DWORD PTR [ebx+0x24]
  4265bb:	xchg   ecx,eax
  4265bc:	es into 
  4265be:	add    al,0x27
  4265c0:	xor    BYTE PTR [esi-0x52],al
  4265c3:	jmp    0x1127:0x1af76d3
  4265ca:	add    eax,0x924262bf
  4265cf:	jb     0x4265bc
  4265d1:	mov    ah,0xbd
  4265d3:	jge    0x42661b
  4265d5:	xchg   esi,eax
  4265d6:	fdivr  DWORD PTR [esi-0xc]
  4265d9:	mov    ecx,0x763dc3e4
  4265de:	sub    al,0x23
  4265e0:	push   0x1d994e28
  4265e5:	inc    eax
  4265e6:	or     ecx,DWORD PTR [ebx-0x5eacdfb7]
  4265ec:	pop    ss
  4265ed:	inc    eax
  4265ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265ef:	jp     0x426649
  4265f1:	adc    DWORD PTR [eax+0x36],esp
  4265f4:	(bad)  
  4265f5:	adc    al,0x78
  4265f7:	nop
  4265f8:	cmp    eax,0x4aae5686
  4265fd:	test   eax,0xa9992164
  426602:	or     ebx,DWORD PTR ds:0xa7f9b735
  426608:	jae    0x4265f8
  42660a:	loop   0x4265a2
  42660c:	push   cs
  42660d:	cmp    DWORD PTR [eax+edi*8-0x72173f75],edi
  426614:	jne    0x426649
  426616:	adc    eax,0xc0e618d4
  42661b:	pop    es
  42661c:	stc    
  42661d:	addr16 in al,0x9f
  426620:	dec    ebx
  426621:	bound  ebx,QWORD PTR ds:0x32b73659
  426627:	popf   
  426628:	loopne 0x426645
  42662a:	xor    al,BYTE PTR [ecx]
  42662c:	add    al,0x1f
  42662e:	or     esp,ebp
  426630:	pushf  
  426631:	rcr    BYTE PTR [ebx],cl
  426633:	push   ss
  426634:	push   esp
  426635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426636:	adc    al,0x27
  426638:	call   0x86e4:0xe5c4e115
  42663f:	inc    ecx
  426640:	lds    edi,FWORD PTR [eax]
  426642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426643:	bound  ebp,QWORD PTR [edi]
  426645:	xchg   esp,eax
  426646:	adc    edi,0x50
  426649:	outs   dx,DWORD PTR ds:[esi]
  42664a:	ins    DWORD PTR es:[edi],dx
  42664b:	xor    al,0xc5
  42664d:	sub    ecx,DWORD PTR [eax-0x3cc1a46a]
  426653:	jnp    0x426693
  426655:	or     dh,BYTE PTR [ebp+0x1f583b3f]
  42665b:	push   ds
  42665c:	in     eax,0x26
  42665e:	push   ds
  42665f:	cmp    al,0x81
  426661:	daa    
  426662:	inc    esi
  426663:	outs   dx,BYTE PTR ds:[esi]
  426664:	into   
  426665:	hlt    
  426666:	fstp   TBYTE PTR [esi+0x5045dab4]
  42666c:	js     0x42665b
  42666e:	aad    0xac
  426670:	call   0x998d:0x78b78b55
  426677:	ins    DWORD PTR es:[edi],dx
  426678:	sar    bl,0x34
  42667b:	or     al,0xe
  42667d:	test   edi,ecx
  42667f:	test   eax,0xba8aa066
  426684:	cmp    ch,bl
  426686:	and    al,0xbc
  426688:	pop    esi
  426689:	mov    ecx,0x27eb4899
  42668e:	pop    esi
  42668f:	and    ebx,DWORD PTR [esi]
  426691:	push   es
  426692:	mov    dh,0x3b
  426694:	repnz adc DWORD PTR [ecx-0x5e],eax
  426698:	retf   
  426699:	test   DWORD PTR [esi-0x59eb575f],esi
  42669f:	icebp  
  4266a0:	cdq    
  4266a1:	sahf   
  4266a2:	std    
  4266a3:	arpl   WORD PTR [edi],ax
  4266a5:	mov    ch,0x48
  4266a7:	ins    BYTE PTR es:[edi],dx
  4266a8:	imul   ebp,ebp,0x6dda393c
  4266ae:	fisttp DWORD PTR [edi+0x4f]
  4266b1:	and    eax,ebp
  4266b3:	push   esp
  4266b4:	ud2    
  4266b6:	xchg   esp,eax
  4266b7:	les    ecx,FWORD PTR [ebx+0x2176feb]
  4266bd:	jmp    0x2443:0xd8b72e42
  4266c4:	js     0x42669b
  4266c6:	cld    
  4266c7:	das    
  4266c8:	sub    DWORD PTR [ebx],esi
  4266ca:	lods   al,BYTE PTR ds:[esi]
  4266cb:	fs jp  0x426710
  4266ce:	dec    edx
  4266cf:	pop    edi
  4266d0:	mov    ebp,0x61ed6635
  4266d5:	leave  
  4266d6:	icebp  
  4266d7:	sbb    BYTE PTR [esi+eiz*4],bl
  4266da:	scas   al,BYTE PTR es:[edi]
  4266db:	dec    eax
  4266dc:	and    DWORD PTR [eax+0x6f],ebx
  4266df:	adc    BYTE PTR [edi+0x1bc96a1],bh
  4266e5:	pusha  
  4266e6:	push   ecx
  4266e7:	xor    DWORD PTR [ecx+0x22],edx
  4266ea:	nop
  4266eb:	push   ebx
  4266ec:	ror    ah,1
  4266ee:	out    0xfd,al
  4266f0:	and    DWORD PTR [ecx],0xffffff85
  4266f3:	test   al,0x20
  4266f5:	mov    WORD PTR [edi-0x15],?
  4266f8:	rcr    cl,cl
  4266fa:	iret   
  4266fb:	pushf  
  4266fc:	test   ebp,ebx
  4266fe:	(bad)  
  4266ff:	out    0x8e,al
  426701:	cmp    DWORD PTR [edi],0x72
  426704:	xchg   edx,eax
  426705:	test   al,0xe0
  426707:	loopne 0x42672b
  426709:	call   DWORD PTR [ebx+0xc97c21f]
  42670f:	dec    eax
  426710:	pop    ebx
  426711:	xor    DWORD PTR [esi+eiz*8+0x3e960a08],esi
  426718:	(bad)  
  426719:	fist   WORD PTR [ebp+0x7e524fbc]
  42671f:	fs xchg ebp,eax
  426721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426722:	mov    bh,ah
  426724:	es js  0x426725
  426727:	adc    BYTE PTR [eax-0x31],dh
  42672a:	mov    WORD PTR [eax+0x18],ss
  42672d:	and    al,0x6d
  42672f:	mov    ecx,0x6d6c997b
  426734:	inc    ecx
  426735:	xchg   DWORD PTR [eax],eax
  426737:	fs test eax,0x909f897d
  42673d:	mov    ebx,0xbaf6e9e4
  426742:	stos   BYTE PTR es:[edi],al
  426743:	xchg   ebp,eax
  426744:	jae    0x4266d8
  426746:	sbb    DWORD PTR [eax-0xfb3c1eb],esi
  42674c:	je     0x426748
  42674e:	lods   eax,DWORD PTR ds:[esi]
  42674f:	push   ebp
  426750:	mov    WORD PTR [ecx],ds
  426752:	mov    dh,0x56
  426754:	arpl   WORD PTR [ecx],sp
  426756:	aas    
  426757:	add    BYTE PTR [esi-0x26],0x3
  42675b:	push   eax
  42675c:	mov    ebx,0xdd4f0a9c
  426761:	repnz sbb eax,0xf7dd29b3
  426767:	(bad)  
  426769:	jmp    0x6754:0xbc4434ca
  426770:	jo     0x4267bb
  426772:	mov    ecx,0x54679899
  426777:	xor    eax,0x2b
  42677a:	(bad)  
  42677b:	scas   eax,DWORD PTR es:[edi]
  42677c:	sub    eax,0x59cb6725
  426781:	dec    ecx
  426782:	add    BYTE PTR ds:0xc251d152,dh
  426788:	cmp    ecx,DWORD PTR [ebp-0x1714865d]
  42678e:	jmp    0x81426793
  426793:	and    al,0xe9
  426795:	xchg   ebx,eax
  426796:	in     eax,dx
  426797:	(bad)  
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	cmc    
  42679f:	pop    edi
  4267a0:	nop
  4267a1:	shl    BYTE PTR [edi],cl
  4267a3:	loopne 0x4267a6
  4267a5:	add    ch,dh
  4267a7:	add    al,0x0
  4267a9:	add    BYTE PTR [eax-0xe],ch
  4267ac:	mov    es,WORD PTR [ebx]
  4267ae:	jp     0x426759
  4267b0:	dec    edi
  4267b1:	inc    esi
  4267b2:	lods   al,BYTE PTR ds:[esi]
  4267b3:	dec    DWORD PTR [ebp-0x75]
  4267b6:	xor    eax,DWORD PTR [edi-0x45]
  4267b9:	and    DWORD PTR [edx+0x64],edx
  4267bc:	mov    cl,0x62
  4267be:	sbb    esp,0x65
  4267c1:	jmp    DWORD PTR [ecx+ebp*2]
  4267c4:	xlat   BYTE PTR ds:[ebx]
  4267c5:	pop    ebp
  4267c6:	xor    BYTE PTR [ecx+0xab89b5b],dl
  4267cc:	fldenv [edx-0x6e]
  4267cf:	xor    DWORD PTR [edi],ebp
  4267d1:	sub    ebp,DWORD PTR ss:[ecx+esi*4-0x1f7f8982]
  4267d9:	push   ebp
  4267da:	popa   
  4267db:	popa   
  4267dc:	clc    
  4267dd:	and    al,0xd8
  4267df:	call   0x6c23:0xc3d59c02
  4267e6:	jmp    0x4cd81bfc
  4267eb:	shl    DWORD PTR [eax-0xf522bf],1
  4267f1:	xchg   esi,eax
  4267f2:	mov    edx,0x6ee9484e
  4267f7:	mov    ss,WORD PTR [eax+eax*1-0x59f3297f]
  4267fe:	aam    0xdf
  426800:	stc    
  426801:	xchg   ebp,eax
  426802:	loope  0x42684e
  426804:	xchg   edi,eax
  426805:	das    
  426806:	cmc    
  426807:	and    edi,eax
  426809:	push   0x5a
  42680b:	ss mov bl,0xa4
  42680e:	scas   al,BYTE PTR es:[edi]
  42680f:	(bad)  
  426811:	mov    BYTE PTR [edx],bh
  426813:	das    
  426814:	shl    BYTE PTR [edi],1
  426816:	mov    ebx,0x427bc267
  42681b:	pop    eax
  42681c:	jbe    0x426899
  42681e:	call   0xc307f596
  426823:	mov    eax,ds:0x696a2a07
  426828:	inc    ebp
  426829:	cmp    BYTE PTR [ecx+0x70],bh
  42682c:	in     eax,dx
  42682d:	mov    ?,eax
  42682f:	pop    esp
  426830:	xor    cl,dl
  426832:	call   0x2d37a297
  426837:	pop    edi
  426838:	jno    0x4268b6
  42683a:	jmp    0x8900:0x22436f7
  426841:	in     al,0x36
  426843:	push   edi
  426844:	adc    al,0xcc
  426846:	pusha  
  426847:	sar    cl,1
  426849:	pop    ebp
  42684a:	push   edx
  42684b:	div    DWORD PTR [ebp+0xe]
  42684e:	or     eax,0x220989f4
  426853:	xor    DWORD PTR [esi-0x4e195ae0],0x7
  42685a:	jb     0x4267dc
  42685c:	inc    esi
  42685d:	iret   
  42685e:	and    DWORD PTR [ecx-0x3b2e4dd7],esp
  426864:	pop    ebx
  426865:	enter  0xd2d0,0xf4
  426869:	jno    0x4268e4
  42686b:	scas   al,BYTE PTR es:[edi]
  42686c:	sar    DWORD PTR [edx],cl
  42686e:	mov    ds:0x7c929ef0,al
  426873:	shr    cl,0x36
  426876:	and    al,0x7d
  426878:	mov    bh,0x1d
  42687a:	arpl   WORD PTR [edi+0x37],di
  42687d:	adc    al,BYTE PTR [edx+0x70]
  426880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426881:	jg     0x426896
  426883:	sub    eax,0xa532cbb
  426888:	rol    DWORD PTR ds:0xd0440a3f,cl
  42688e:	mov    ds:0xd7f36b17,eax
  426893:	clc    
  426894:	jmp    0xecc05599
  426899:	lock dec ebx
  42689b:	cmp    dh,BYTE PTR [eax-0x79]
  42689e:	fcomi  st,st(1)
  4268a0:	sbb    al,0x69
  4268a2:	xchg   ecx,eax
  4268a3:	(bad)  
  4268a4:	in     al,0xb4
  4268a6:	in     al,0x5b
  4268a8:	and    DWORD PTR [ebx-0x4f],ebx
  4268ab:	xchg   esi,eax
  4268ac:	dec    esi
  4268ad:	gs ret 
  4268af:	push   eax
  4268b0:	add    bh,cl
  4268b2:	out    dx,al
  4268b3:	sub    ah,BYTE PTR [esi+0x12]
  4268b6:	cld    
  4268b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268b8:	inc    ebp
  4268b9:	ins    BYTE PTR es:[edi],dx
  4268ba:	push   ds
  4268bb:	loop   0x4268cd
  4268bd:	sub    eax,0xf5e124f9
  4268c2:	fwait
  4268c3:	popf   
  4268c4:	pusha  
  4268c5:	pop    ecx
  4268c6:	xor    al,0x39
  4268c8:	loopne 0x4268a5
  4268ca:	lods   eax,DWORD PTR ds:[esi]
  4268cb:	cmp    eax,0xf3be8d1c
  4268d0:	fstp   QWORD PTR [eax-0x2d]
  4268d3:	retf   0xb598
  4268d6:	in     al,dx
  4268d7:	inc    ebx
  4268d8:	jae    0x4268c3
  4268da:	add    al,bl
  4268dc:	and    al,0xd4
  4268de:	and    al,0xa5
  4268e0:	xchg   edi,eax
  4268e1:	sbb    al,0xe0
  4268e3:	jmp    0xc6a2:0xfc87732d
  4268ea:	cli    
  4268eb:	dec    ebp
  4268ec:	aas    
  4268ed:	mov    edi,0x81ed1da6
  4268f2:	push   ebx
  4268f3:	loope  0x426894
  4268f5:	dec    edi
  4268f6:	aad    0x2b
  4268f8:	aas    
  4268f9:	cmc    
  4268fa:	inc    ebp
  4268fb:	adc    ebp,DWORD PTR [ebp-0x71]
  4268fe:	push   esi
  4268ff:	sti    
  426900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426901:	and    al,0x93
  426903:	sub    ah,BYTE PTR [ecx+0x4c706a01]
  426909:	inc    ebp
  42690a:	push   0xffffffb2
  42690c:	stos   BYTE PTR es:[edi],al
  42690d:	pop    esp
  42690e:	fst    DWORD PTR [eax+0x3f]
  426911:	arpl   WORD PTR [esi+ebp*1+0x8],bx
  426915:	xchg   ecx,eax
  426916:	das    
  426917:	ret    0xd09b
  42691a:	stos   DWORD PTR es:[edi],eax
  42691b:	push   0x8b48d00a
  426920:	sub    BYTE PTR cs:[ebp-0x18],dh
  426924:	inc    ebx
  426925:	xchg   DWORD PTR [edi],ebx
  426927:	repz add BYTE PTR [ebx],bl
  42692a:	inc    esi
  42692b:	push   ss
  42692c:	iret   
  42692d:	leave  
  42692e:	ret    0x48f5
  426931:	test   al,0x97
  426933:	stos   DWORD PTR es:[edi],eax
  426934:	pushf  
  426935:	into   
  426936:	xchg   edi,eax
  426937:	and    BYTE PTR [ecx-0x1b21b6bd],0x82
  42693e:	fwait
  42693f:	sub    esi,ecx
  426941:	mov    gs,WORD PTR [esi-0x4c]
  426944:	out    0x0,eax
  426946:	test   eax,0xf0849941
  42694b:	dec    ebx
  42694c:	add    BYTE PTR [ecx+0x16e164d6],0xd7
  426953:	ja     0x42694c
  426955:	rcr    ecx,1
  426957:	lock aaa 
  426959:	(bad)
  42695c:	xchg   edi,eax
  42695d:	jl     0x4268e0
  42695f:	and    eax,0xeefd682f
  426964:	(bad)  
  426965:	clc    
  426966:	xchg   ebp,eax
  426967:	test   BYTE PTR [ecx-0x60],0x96
  42696b:	sbb    al,0x89
  42696d:	js     0x42693a
  42696f:	cld    
  426970:	daa    
  426971:	out    0xbc,al
  426973:	out    dx,al
  426974:	sub    eax,0x3037619b
  426979:	fstp   DWORD PTR [ecx]
  42697b:	imul   edi,DWORD PTR [edi],0xd2af02a8
  426981:	pop    ecx
  426982:	mov    WORD PTR [ebp-0x547a86d7],ds
  426988:	sbb    al,BYTE PTR [ebx*2+0x12f3ccd5]
  42698f:	cli    
  426990:	adc    BYTE PTR [edx-0x6a],bl
  426993:	ja     0x4269d7
  426995:	sahf   
  426996:	data16 cld 
  426998:	fwait
  426999:	or     DWORD PTR [edx-0x21417fa2],edx
  42699f:	adc    ch,BYTE PTR [ebx]
  4269a1:	in     eax,0xc4
  4269a3:	mov    esi,0x9f6b8887
  4269a8:	xchg   esi,eax
  4269a9:	mov    eax,ds:0xfdfa549f
  4269ae:	mov    gs,WORD PTR [edi+ecx*2-0x33]
  4269b2:	pop    ss
  4269b3:	jg     0x4269b0
  4269b5:	(bad)  [esi+0x7d52f083]
  4269bb:	ret    
  4269bc:	jnp    0x4269f9
  4269be:	mov    ebp,0x261648ee
  4269c3:	pop    edx
  4269c4:	adc    al,0x11
  4269c6:	imul   esi,DWORD PTR [edx-0x1e7831b7],0xe9e86ac0
  4269d0:	mov    bl,0x2
  4269d2:	inc    edi
  4269d3:	aaa    
  4269d4:	mov    edi,0x3aa6c09a
  4269d9:	cld    
  4269da:	ins    DWORD PTR es:[edi],dx
  4269db:	mov    eax,ds:0x7541b65b
  4269e0:	jo     0x426965
  4269e2:	test   eax,0x924b9343
  4269e7:	arpl   WORD PTR [ebx-0x14],sp
  4269ea:	cmp    ecx,DWORD PTR [ebx+esi*4+0x79]
  4269ee:	lahf   
  4269ef:	(bad)  
  4269f0:	imul   eax,DWORD PTR ss:[ecx+0x36],0xffffffeb
  4269f5:	enter  0xf764,0x47
  4269f9:	test   eax,0x629ae9d5
  4269fe:	cmp    eax,0x6972e618
  426a03:	inc    edi
  426a04:	adc    al,0x1e
  426a06:	mov    esi,0x4b91984d
  426a0b:	sub    ecx,DWORD PTR [eax]
  426a0d:	mov    esp,0x6b824195
  426a12:	popa   
  426a13:	shl    DWORD PTR [ebp+0x56],1
  426a16:	out    0x66,al
  426a18:	popa   
  426a19:	or     edi,DWORD PTR gs:[ebp-0xf]
  426a1d:	call   DWORD PTR [ebx-0x229245c0]
  426a23:	adc    bl,BYTE PTR [edx+ecx*4-0x60]
  426a27:	mov    bl,BYTE PTR [edx]
  426a29:	add    edi,DWORD PTR [edx+0x3be30eca]
  426a2f:	mov    bl,0xd3
  426a31:	xor    DWORD PTR [edi],edi
  426a33:	inc    eax
  426a34:	dec    edx
  426a35:	xchg   ebx,eax
  426a36:	mov    bh,0xe3
  426a38:	int3   
  426a39:	sbb    BYTE PTR [edi],bh
  426a3b:	sahf   
  426a3c:	retf   
  426a3d:	ret    
  426a3e:	jmp    0xa271ec52
  426a43:	pop    ecx
  426a44:	les    ebx,FWORD PTR [eax-0x2b]
  426a47:	(bad)  
  426a48:	lock in eax,dx
  426a4a:	push   edi
  426a4b:	push   es
  426a4c:	push   esp
  426a4d:	sub    eax,0xef44aa77
  426a52:	jno    0x426a67
  426a54:	cmp    DWORD PTR [edi-0x3d],ebp
  426a57:	(bad)  
  426a58:	test   eax,0x9bfafdf8
  426a5d:	(bad)  
  426a5e:	rcl    DWORD PTR [ecx],cl
  426a60:	xlat   BYTE PTR ds:[ebx]
  426a61:	jbe    0x426ac7
  426a63:	xchg   ebp,eax
  426a64:	sbb    al,0xc6
  426a66:	sbb    edi,DWORD PTR [ebp-0x229aa0a]
  426a6c:	jmp    0x426ac4
  426a6e:	shr    ah,cl
  426a70:	inc    esi
  426a71:	jae    0x426a68
  426a73:	idiv   al
  426a75:	nop
  426a76:	out    dx,eax
  426a77:	cwde   
  426a78:	cmp    al,0x18
  426a7a:	test   al,0x63
  426a7c:	enter  0xd6dd,0x7c
  426a80:	cmp    esp,edi
  426a82:	push   edx
  426a83:	(bad)  
  426a84:	lods   eax,DWORD PTR ds:[esi]
  426a85:	dec    edx
  426a86:	jge    0x426ae4
  426a88:	jnp    0x426a46
  426a8a:	lods   al,BYTE PTR ds:[esi]
  426a8b:	repnz outs dx,DWORD PTR ss:[esi]
  426a8e:	sahf   
  426a8f:	dec    eax
  426a90:	outs   dx,BYTE PTR ds:[esi]
  426a91:	ret    0x1e90
  426a94:	push   0xffffffe6
  426a96:	sbb    eax,0xc86653b6
  426a9b:	inc    esp
  426a9c:	jo     0x426aea
  426a9e:	jns    0x426ab6
  426aa0:	and    DWORD PTR ds:0x9cdc0646,ecx
  426aa6:	iret   
  426aa7:	test   DWORD PTR [eax],ebx
  426aa9:	or     ch,BYTE PTR [edx+0x28]
  426aac:	mov    al,0x42
  426aae:	sti    
  426aaf:	xchg   edx,eax
  426ab0:	xchg   edi,eax
  426ab1:	fldenv [esi+0x63]
  426ab4:	inc    esi
  426ab5:	test   DWORD PTR [edx-0x11],edi
  426ab8:	test   eax,0x54c26c06
  426abd:	pop    es
  426abe:	adc    ebx,DWORD PTR [ebx-0x3caf8962]
  426ac4:	int3   
  426ac5:	mov    WORD PTR [eax+0x53],gs
  426ac8:	ins    BYTE PTR es:[edi],dx
  426ac9:	ins    DWORD PTR es:[edi],dx
  426aca:	adc    BYTE PTR [ebx],ch
  426acc:	pop    eax
  426acd:	out    dx,al
  426ace:	cmp    ch,ah
  426ad0:	ja     0x426b42
  426ad2:	test   DWORD PTR [ecx],ebx
  426ad4:	mov    ah,0xe7
  426ad6:	mov    ebp,0x9b9a614a
  426adb:	outs   dx,BYTE PTR ds:[esi]
  426adc:	mov    ebx,0x7ec7e01b
  426ae1:	and    al,0xbe
  426ae3:	(bad)  
  426ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ae5:	cld    
  426ae6:	push   esp
  426ae7:	cli    
  426ae8:	test   DWORD PTR [edi],esp
  426aea:	cdq    
  426aeb:	sub    DWORD PTR [edi-0x1e94fda8],edx
  426af1:	cmp    eax,0x5c8917e1
  426af6:	stc    
  426af7:	shr    DWORD PTR [edi],cl
  426af9:	and    BYTE PTR [esi],0x4b
  426afc:	ins    DWORD PTR es:[edi],dx
  426afd:	ss sub esp,edi
  426b00:	and    ebp,DWORD PTR [ebp+0x27]
  426b03:	repz add eax,0xc26875c7
  426b09:	pusha  
  426b0a:	or     DWORD PTR [eax+0x46],ecx
  426b0d:	not    DWORD PTR [ecx]
  426b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b10:	or     edx,DWORD PTR [edx-0x26]
  426b13:	mov    dl,0x43
  426b15:	xchg   edi,eax
  426b16:	in     eax,dx
  426b17:	fadd   DWORD PTR [edi+0x57]
  426b1a:	cld    
  426b1b:	jns    0x426ab0
  426b1d:	sbb    ebx,DWORD PTR [esi]
  426b1f:	sahf   
  426b20:	push   edi
  426b21:	sbb    BYTE PTR [edx+0x4e6e9a18],dl
  426b27:	lock (bad) 
  426b29:	cwde   
  426b2a:	and    edx,DWORD PTR [ecx-0x7c]
  426b2d:	adc    cl,ch
  426b2f:	mov    edi,0xb96587e6
  426b34:	ss stos DWORD PTR es:[edi],eax
  426b36:	gs pushf 
  426b38:	(bad)  
  426b39:	clc    
  426b3a:	dec    esp
  426b3b:	ds xchg bh,dh
  426b3e:	fld    TBYTE PTR [edi+0x44]
  426b41:	cs (bad) 
  426b43:	scas   eax,DWORD PTR es:[edi]
  426b44:	ds aas 
  426b46:	mov    al,ds:0x96e6ff55
  426b4b:	enter  0x9b7,0xc6
  426b4f:	xchg   edx,eax
  426b50:	shl    BYTE PTR [edi+eax*8-0x274d6f27],1
  426b57:	outs   dx,DWORD PTR ds:[esi]
  426b58:	(bad)  
  426b59:	xor    eax,0xad32a146
  426b5e:	stc    
  426b5f:	scas   eax,DWORD PTR es:[edi]
  426b60:	push   ecx
  426b61:	xchg   DWORD PTR [esi],edx
  426b63:	mov    edi,DWORD PTR [edx+0x33c8ab04]
  426b69:	call   0x7b23:0xc19b68a7
  426b70:	add    BYTE PTR [eax-0x75038fe],bl
  426b76:	pop    edi
  426b77:	jbe    0x426b2d
  426b79:	xchg   DWORD PTR [edx+0x3c],esp
  426b7c:	shl    BYTE PTR [esi+edi*2+0x4063bb41],1
  426b83:	xchg   esi,eax
  426b84:	ins    DWORD PTR es:[edi],dx
  426b85:	and    dh,BYTE PTR [esp+edi*2+0x52]
  426b89:	fmulp  st(3),st
  426b8b:	mov    edx,0x5867a101
  426b90:	xchg   ecx,eax
  426b91:	(bad)  
  426b92:	mov    ebx,0x8efe233b
  426b97:	lea    edx,[ecx+0x4f]
  426b9a:	hlt    
  426b9b:	pop    esi
  426b9c:	push   ss
  426b9d:	jge    0x426b42
  426b9f:	jecxz  0x426b38
  426ba1:	std    
  426ba2:	push   eax
  426ba3:	(bad)  
  426ba4:	jmp    0xc0d3dcc6
  426ba9:	out    0x7f,eax
  426bab:	lods   eax,DWORD PTR ds:[esi]
  426bac:	loop   0x426c0f
  426bae:	outs   dx,DWORD PTR ds:[esi]
  426baf:	xlat   BYTE PTR ds:[ebx]
  426bb0:	sar    BYTE PTR [esi+0x6905f67e],cl
  426bb6:	call   0x233f:0x4ed87c4
  426bbd:	mov    dh,0x5f
  426bbf:	or     ah,BYTE PTR [ecx-0x17]
  426bc2:	rol    bl,0xd2
  426bc5:	pushf  
  426bc6:	or     edx,0x48
  426bc9:	popa   
  426bca:	lods   al,BYTE PTR ds:[esi]
  426bcb:	arpl   WORD PTR [edx-0x52],dx
  426bce:	shl    DWORD PTR [ebx],cl
  426bd0:	out    dx,eax
  426bd1:	scas   al,BYTE PTR es:[edi]
  426bd2:	lods   eax,DWORD PTR ds:[esi]
  426bd3:	mov    ds:0x2705bb7c,eax
  426bd8:	adc    edi,edx
  426bda:	dec    edx
  426bdb:	cmp    BYTE PTR [ebp-0x2b],dh
  426bde:	mov    BYTE PTR [ebx-0x42],al
  426be1:	stos   BYTE PTR es:[edi],al
  426be2:	cmp    DWORD PTR [edx-0x5c0d4828],esp
  426be8:	xchg   edx,eax
  426be9:	loop   0x426b86
  426beb:	lock push DWORD PTR [ebx+0x4f002823]
  426bf2:	test   DWORD PTR [esi+ebx*8-0x1a681cb9],esp
  426bf9:	xchg   DWORD PTR [ebx-0x72],eax
  426bfc:	fst    QWORD PTR [esi]
  426bfe:	jge    0x426bb1
  426c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c01:	cdq    
  426c02:	sbb    BYTE PTR [eax-0x45],0xc0
  426c06:	mov    esp,0x8208a2f5
  426c0b:	hlt    
  426c0c:	mov    eax,0x58f60c24
  426c11:	adc    DWORD PTR [esi],esi
  426c13:	addr16 dec ecx
  426c15:	test   al,0x16
  426c17:	jle    0x426c89
  426c19:	pmaddwd mm6,QWORD PTR [eax+0x65]
  426c1d:	fisubr WORD PTR [ecx-0x681946a3]
  426c23:	mov    eax,0x8c7fa427
  426c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c29:	arpl   bp,ax
  426c2b:	cmp    dl,BYTE PTR [eax+0x2a]
  426c2e:	and    eax,0x9bf2a596
  426c33:	imul   ebx,DWORD PTR [esi],0xffffffc2
  426c36:	retw   
  426c38:	push   esi
  426c39:	fbld   TBYTE PTR [eax]
  426c3b:	xchg   esi,eax
  426c3c:	jge    0x426c73
  426c3e:	outs   dx,BYTE PTR ds:[esi]
  426c3f:	fwait
  426c40:	sahf   
  426c41:	stc    
  426c42:	in     eax,0x86
  426c44:	popf   
  426c45:	lea    ebx,[ebp+0x64]
  426c48:	inc    esp
  426c49:	lods   al,BYTE PTR ds:[esi]
  426c4a:	sbb    DWORD PTR [ecx-0x7e3687cf],edx
  426c50:	cdq    
  426c51:	sbb    al,0x37
  426c53:	pop    ss
  426c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c55:	mov    ecx,0xd07f08a9
  426c5a:	sar    BYTE PTR [esi+0x4b],1
  426c5d:	pop    ebp
  426c5e:	or     ecx,ebp
  426c60:	push   esi
  426c61:	pop    eax
  426c62:	and    eax,DWORD PTR [ebx]
  426c64:	mov    WORD PTR [esi],cs
  426c66:	imul   DWORD PTR [edi]
  426c68:	pop    ebp
  426c69:	and    dl,BYTE PTR [ebx]
  426c6b:	add    al,BYTE PTR [edi+0x11886914]
  426c71:	dec    esi
  426c72:	ja     0x426cb0
  426c74:	stos   BYTE PTR es:[edi],al
  426c75:	popa   
  426c76:	inc    esp
  426c77:	add    ecx,edx
  426c79:	test   BYTE PTR [ecx+0x1ed73324],dh
  426c7f:	and    esi,esp
  426c81:	mov    al,ds:0x6ba02ec0
  426c86:	fidiv  DWORD PTR [esp+ebx*2+0x26b6b6e4]
  426c8d:	cmc    
  426c8e:	fwait
  426c8f:	mov    eax,DWORD PTR [ecx-0x78]
  426c92:	dec    ebp
  426c93:	mov    al,ds:0xe93fc034
  426c98:	in     al,dx
  426c99:	imul   ebx,DWORD PTR [edi+0x49],0x1f33c1
  426ca0:	add    BYTE PTR [eax],al
  426ca2:	xchg   esi,eax
  426ca3:	rcr    BYTE PTR [edi],0x45
  426ca6:	pop    edi
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx+0x23e88e10],cl
  426caf:	repz and al,0x77
  426cb2:	sbb    al,0xe5
  426cb4:	add    DWORD PTR [eax],eax
  426cb6:	cmc    
  426cb7:	add    al,0x0
  426cb9:	add    BYTE PTR [ebx+0x58167d89],bl
  426cbf:	adc    esi,edi
  426cc1:	daa    
  426cc2:	sub    DWORD PTR [ebx+esi*4-0x19a6bf3b],edx
  426cc9:	xchg   esi,eax
  426cca:	inc    ebp
  426ccb:	dec    eax
  426ccc:	adc    eax,0x4c5ea942
  426cd1:	or     ecx,DWORD PTR [ebx]
  426cd3:	xor    DWORD PTR [edx-0x1e],0x26ed001
  426cda:	leave  
  426cdb:	fisubr DWORD PTR [esi+0x26]
  426cde:	call   0x56eb1db8
  426ce3:	cmp    BYTE PTR [ebx],bh
  426ce5:	mov    cl,0xda
  426ce7:	es aad 0x8b
  426cea:	mov    eax,0x7277455d
  426cef:	cs (bad) 
  426cf1:	xlat   BYTE PTR ds:[ebx]
  426cf2:	jns    0x426ccb
  426cf4:	fdiv   DWORD PTR ds:0x7cb7c071
  426cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cfb:	xor    BYTE PTR [edx],cl
  426cfd:	lea    esi,[ecx+eiz*4-0x5c]
  426d01:	fistp  QWORD PTR [eax+eax*2-0x28e01258]
  426d08:	dec    edi
  426d09:	adc    BYTE PTR [edi-0x74],cl
  426d0c:	in     al,dx
  426d0d:	lods   al,BYTE PTR ds:[esi]
  426d0e:	xlat   BYTE PTR ds:[ebx]
  426d0f:	inc    edx
  426d10:	and    DWORD PTR [esi+0x6f58ecfc],ecx
  426d16:	xor    BYTE PTR [edx-0x227e0d31],dh
  426d1c:	test   bh,bl
  426d1e:	lahf   
  426d1f:	jo     0x426d8c
  426d21:	aas    
  426d22:	sub    al,0xdf
  426d24:	inc    ecx
  426d25:	ins    BYTE PTR es:[edi],dx
  426d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d27:	mov    ?,edi
  426d29:	dec    ebx
  426d2a:	mov    bl,BYTE PTR [eax-0x481a4c4c]
  426d30:	cmp    eax,0x32a2050d
  426d35:	sub    DWORD PTR [esi+edx*8+0x7b8e256a],0x1bd82bba
  426d40:	mov    ch,0xbe
  426d42:	repz pop ebp
  426d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d45:	pop    edi
  426d46:	in     eax,0x27
  426d48:	sar    BYTE PTR ds:0xce14dd86,0xe3
  426d4f:	mov    eax,ds:0x468a23c0
  426d54:	das    
  426d55:	cli    
  426d56:	dec    eax
  426d57:	repnz cmp al,BYTE PTR [ebx-0x42]
  426d5b:	frstor [ebp-0x2c]
  426d5e:	xchg   edi,eax
  426d5f:	dec    esp
  426d60:	ret    0xe28b
  426d63:	mov    esi,DWORD PTR [eax-0x5ac9952]
  426d69:	out    0xdb,eax
  426d6b:	xlat   BYTE PTR ds:[ebx]
  426d6c:	or     al,dl
  426d6e:	mov    bl,0xd4
  426d70:	push   esi
  426d71:	aam    0xe7
  426d73:	lods   eax,DWORD PTR ds:[esi]
  426d74:	or     ecx,DWORD PTR [ebx+0x33]
  426d77:	sbb    DWORD PTR [ecx-0x3c],esp
  426d7a:	inc    ebx
  426d7b:	stos   DWORD PTR es:[edi],eax
  426d7c:	fadd   QWORD PTR [ebx-0x319159b]
  426d82:	xor    al,0x90
  426d84:	retf   
  426d85:	and    al,0x87
  426d87:	and    eax,0x3b2e6caa
  426d8c:	nop
  426d8d:	and    ah,dh
  426d8f:	scas   al,BYTE PTR es:[edi]
  426d90:	ficomp DWORD PTR [edi+ebp*2+0x32557f5a]
  426d97:	not    DWORD PTR [edx+0x143f737b]
  426d9d:	outs   dx,DWORD PTR ds:[esi]
  426d9e:	push   0x4ef6c173
  426da3:	dec    eax
  426da4:	mov    ds:0x5eb2f68c,eax
  426da9:	cli    
  426daa:	push   ds
  426dab:	and    al,0xe4
  426dad:	jl     0x426d34
  426daf:	xchg   dh,bh
  426db1:	ins    DWORD PTR es:[edi],dx
  426db2:	ja     0x426d5f
  426db4:	sub    DWORD PTR [esi+0x40821cda],ecx
  426dba:	stos   BYTE PTR es:[edi],al
  426dbb:	ss call 0x711:0x8ea9de00
  426dc3:	jle    0x426dce
  426dc5:	mov    WORD PTR [esi+esi*4],fs
  426dc8:	inc    esi
  426dc9:	jmp    0x25770bf7
  426dce:	into   
  426dcf:	sub    BYTE PTR [edi+0x5f],ch
  426dd2:	iret   
  426dd3:	rol    edx,0xbf
  426dd6:	fld    DWORD PTR [edx-0x63]
  426dd9:	out    0x7d,eax
  426ddb:	add    al,0x5f
  426ddd:	pop    ebp
  426dde:	fistp  QWORD PTR [esi]
  426de0:	inc    edi
  426de1:	test   dl,al
  426de3:	and    eax,0xcb4a4990
  426de8:	les    ecx,FWORD PTR [eax-0x531d51b1]
  426dee:	cld    
  426def:	popa   
  426df0:	adc    BYTE PTR [ecx+0x4609a850],bl
  426df6:	push   eax
  426df7:	sub    eax,0x8223583b
  426dfc:	(bad)  
  426dfd:	dec    edx
  426dfe:	leave  
  426dff:	mov    esi,0xe577ac8
  426e04:	fistp  DWORD PTR ds:0xc4c9f8b7
  426e0a:	dec    esp
  426e0b:	jg     0x426e47
  426e0d:	enter  0xfede,0x3a
  426e11:	and    edx,esi
  426e13:	mov    ch,0xd6
  426e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e16:	pop    ebx
  426e17:	jne    0x426de6
  426e19:	(bad)  
  426e1b:	add    eax,ebp
  426e1d:	mov    bl,0xc4
  426e1f:	nop
  426e20:	into   
  426e21:	fs xor eax,0x5a3e390a
  426e27:	jbe    0x426e0b
  426e29:	es jnp 0x426dee
  426e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e2d:	dec    edi
  426e2e:	sbb    al,BYTE PTR [esi-0x90a7b10]
  426e34:	mov    esi,0xd3cc1c7
  426e39:	ror    BYTE PTR [ebp-0x2f],0xe6
  426e3d:	(bad)  
  426e3e:	in     eax,0xec
  426e40:	int    0x8c
  426e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e43:	out    0x16,eax
  426e45:	mov    ds:0xc6fe95e3,eax
  426e4a:	mov    bl,0x73
  426e4c:	add    DWORD PTR ds:[edi],ebp
  426e4f:	les    edx,FWORD PTR [edx-0x4699fdd7]
  426e55:	(bad)
  426e58:	fbld   TBYTE PTR [edi]
  426e5a:	cmp    al,BYTE PTR [ebp+0x42]
  426e5d:	cmc    
  426e5e:	xchg   esi,eax
  426e5f:	mov    eax,ds:0x39f1cd5f
  426e64:	jno    0x426ea1
  426e66:	aam    0xea
  426e68:	and    ecx,DWORD PTR [ecx-0x61]
  426e6b:	sub    al,0x93
  426e6d:	cmp    eax,0x5c8d38f0
  426e72:	clc    
  426e73:	push   edx
  426e74:	cdq    
  426e75:	loopne 0x426ead
  426e77:	in     eax,dx
  426e78:	outs   dx,BYTE PTR ds:[esi]
  426e79:	push   ds
  426e7a:	push   0xffffffd7
  426e7c:	(bad)  
  426e7d:	lahf   
  426e7e:	aaa    
  426e7f:	dec    ecx
  426e80:	xor    BYTE PTR [edx+0x24285684],bh
  426e86:	mov    edx,0x3f5e2cf9
  426e8b:	cdq    
  426e8c:	(bad)  
  426e8e:	fcomp  QWORD PTR ds:0x95f7
  426e94:	lods   al,BYTE PTR ds:[esi]
  426e95:	mov    eax,ds:0x2b140d67
  426e9a:	(bad)  
  426e9c:	(bad)  
  426e9d:	pop    esp
  426e9e:	inc    DWORD PTR [eax+0x5c511a85]
  426ea4:	add    BYTE PTR [ecx-0x78],0x4e
  426ea8:	pop    es
  426ea9:	add    bl,BYTE PTR [ecx-0x1c]
  426eac:	mov    dl,BYTE PTR [eax]
  426eae:	sti    
  426eaf:	xor    DWORD PTR [eax+0x5c8d37fe],0x79710efa
  426eb9:	xor    eax,0xc7bb0f86
  426ebe:	clc    
  426ebf:	outs   dx,BYTE PTR ds:[esi]
  426ec0:	(bad)  
  426ec1:	sbb    edi,ebx
  426ec3:	ins    DWORD PTR es:[edi],dx
  426ec4:	or     BYTE PTR [eax+0x4c],cl
  426ec7:	push   edi
  426ec8:	scas   al,BYTE PTR es:[edi]
  426ec9:	sbb    BYTE PTR gs:[ebp+0x7c],ch
  426ecd:	stos   BYTE PTR es:[edi],al
  426ece:	dec    ebp
  426ecf:	mov    esi,edx
  426ed1:	jns    0x426ec6
  426ed3:	test   cl,dh
  426ed5:	std    
  426ed6:	ret    
  426ed7:	rol    DWORD PTR [edx+0x7587fda0],0x3e
  426ede:	pop    esp
  426edf:	xor    eax,DWORD PTR [edx]
  426ee1:	test   al,0x19
  426ee3:	cld    
  426ee4:	int    0x7d
  426ee6:	aaa    
  426ee7:	pop    ebp
  426ee8:	jb     0x426f02
  426eea:	outs   dx,BYTE PTR ds:[esi]
  426eeb:	jmp    0xee3d:0x49a0dee8
  426ef2:	mov    eax,ds:0xff72facf
  426ef7:	adc    ebx,0x366cd56f
  426efd:	or     al,0xf2
  426eff:	scas   eax,DWORD PTR es:[edi]
  426f00:	jbe    0x426ec1
  426f02:	(bad)  
  426f03:	fistp  QWORD PTR [edi-0x2a]
  426f06:	test   BYTE PTR [eax-0x65],ah
  426f09:	jge    0x426f64
  426f0b:	ficomp DWORD PTR [esi+eax*1-0x66]
  426f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f10:	mov    ebp,0xb11f94f2
  426f15:	add    bl,BYTE PTR [edi]
  426f17:	cmc    
  426f18:	pop    esi
  426f19:	out    0xba,eax
  426f1b:	jmp    0x654c:0x8f8d73aa
  426f22:	add    DWORD PTR [esi],edx
  426f24:	icebp  
  426f25:	icebp  
  426f26:	fldcw  WORD PTR [ebp+0x24]
  426f29:	femms  
  426f2b:	cmp    DWORD PTR [esi+0x63044215],edi
  426f31:	jnp    0x426f4c
  426f33:	cmp    ebp,ecx
  426f35:	or     dh,BYTE PTR [ebp+edx*2+0x22]
  426f39:	dec    edx
  426f3a:	loope  0x426f78
  426f3c:	fs adc al,0xb6
  426f3f:	popa   
  426f40:	mov    BYTE PTR [edx-0x6579a47],dh
  426f46:	in     al,dx
  426f47:	xor    eax,0xb3dd6884
  426f4c:	push   esi
  426f4d:	mov    al,0xc6
  426f4f:	sbb    ebx,DWORD PTR [edx-0x26]
  426f52:	push   eax
  426f53:	push   edx
  426f54:	push   0xd
  426f56:	xor    eax,0xb69d18ad
  426f5b:	inc    esi
  426f5c:	test   al,0x5b
  426f5e:	repnz jmp 0x1e7a:0x7c834994
  426f66:	shr    BYTE PTR [edi],0x93
  426f69:	dec    ecx
  426f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f6b:	mov    ds:0x9bfb9466,eax
  426f70:	inc    ebx
  426f71:	xchg   ebx,eax
  426f72:	pop    ebx
  426f73:	jae    0x426f46
  426f75:	fwait
  426f76:	loopne 0x426f52
  426f78:	mov    edx,0xe48873a3
  426f7d:	xor    al,0x9b
  426f7f:	and    BYTE PTR [esi],dl
  426f81:	xor    eax,0xd604d8e1
  426f86:	pop    ss
  426f87:	clc    
  426f88:	pop    ss
  426f89:	mov    al,0x39
  426f8b:	ss inc ecx
  426f8d:	mov    cl,0xf3
  426f8f:	es std 
  426f91:	into   
  426f92:	jne    0x426f7e
  426f94:	mov    ch,0x58
  426f96:	(bad)  
  426f98:	inc    ebp
  426f99:	retf   
  426f9a:	push   eax
  426f9b:	cmp    esp,DWORD PTR [ebp-0x3e]
  426f9e:	dec    ebp
  426f9f:	xchg   ecx,eax
  426fa0:	inc    edx
  426fa1:	or     BYTE PTR [edi],bh
  426fa3:	or     edx,DWORD PTR [edi+esi*4-0x4a]
  426fa7:	cmp    al,0xc1
  426fa9:	xor    esi,DWORD PTR [eax-0x44]
  426fac:	out    0x65,eax
  426fae:	pop    ebp
  426faf:	loopne 0x426f3a
  426fb1:	xchg   edi,eax
  426fb2:	rcl    ah,1
  426fb4:	aad    0xb4
  426fb6:	jae    0x426f7b
  426fb8:	ins    DWORD PTR es:[edi],dx
  426fb9:	jmp    0x427004
  426fbb:	or     eax,0x5d6db681
  426fc0:	aam    0xd6
  426fc2:	pop    eax
  426fc3:	jno    0x42700c
  426fc5:	(bad)  
  426fc7:	mov    ch,0x71
  426fc9:	xchg   esi,eax
  426fca:	daa    
  426fcb:	push   ss
  426fcc:	rcr    BYTE PTR [ebp+0x2a8844fa],0xc8
  426fd3:	sub    dh,cl
  426fd5:	mov    bh,0x37
  426fd7:	mov    bh,0x9d
  426fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fda:	shl    dl,cl
  426fdc:	call   0x17dcbc97
  426fe1:	xchg   ecx,esp
  426fe3:	retf   0xf5f9
  426fe6:	(bad)  
  426fe7:	jl     0x426ff0
  426fe9:	clc    
  426fea:	mov    ?,WORD PTR [esi+0x50ea67e7]
  426ff0:	mov    dh,0x9e
  426ff2:	jmp    0x7fa2:0x3b25e52a
  426ff9:	das    
  426ffa:	xchg   edi,eax
  426ffb:	es fsubp st(1),st
  426ffe:	jl     0x426fe9
  427000:	leave  
  427001:	call   0x4fe6:0x8ca4ee5
  427008:	(bad)  
  427009:	js     0x426f8d
  42700b:	and    al,BYTE PTR [ecx-0x54]
  42700e:	pusha  
  42700f:	dec    esi
  427010:	(bad)  
  427012:	push   ebx
  427013:	das    
  427014:	add    ch,BYTE PTR [esp+edx*8-0x320f12ca]
  42701b:	data16 cmp cl,BYTE PTR [edi]
  42701e:	pop    esp
  42701f:	popw   ss
  427021:	jae    0x427094
  427023:	mov    DWORD PTR [edi-0x47a3],0x1b156229
  42702d:	das    
  42702e:	outs   dx,DWORD PTR ds:[esi]
  42702f:	adc    ah,ch
  427031:	push   ebx
  427032:	test   esp,0x912004ed
  427038:	retf   0x6b2b
  42703b:	push   eax
  42703c:	das    
  42703d:	pop    eax
  42703e:	addr16 das 
  427040:	sub    DWORD PTR [eax],ebx
  427042:	xchg   edx,eax
  427043:	data16 jns 0x4270b2
  427046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427048:	pop    edx
  427049:	pop    esi
  42704a:	cmp    dh,BYTE PTR [ebx-0x184db968]
  427050:	adc    al,0xf1
  427052:	pop    esi
  427053:	dec    esp
  427054:	dec    esi
  427055:	(bad)  
  427056:	cmc    
  427057:	cli    
  427058:	dec    ebx
  427059:	pop    ebx
  42705a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42705b:	sbb    DWORD PTR [edx-0x44],eax
  42705e:	into   
  42705f:	icebp  
  427060:	or     eax,0xb0b23fee
  427065:	stc    
  427066:	(bad)  
  427067:	test   edx,edi
  427069:	js     0x4270a2
  42706b:	mov    ah,BYTE PTR [esi+ebp*2]
  42706e:	fstp   st(4)
  427070:	aam    0x99
  427072:	adc    eax,0xa98d49e3
  427077:	sbb    dl,cl
  427079:	es or  eax,0x36212bd0
  42707f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427080:	dec    esi
  427081:	lea    edi,[ebp-0x3814f61c]
  427087:	(bad)  
  427088:	push   ss
  427089:	sbb    DWORD PTR [edi],edx
  42708b:	adc    BYTE PTR [edx-0x52],cl
  42708e:	xchg   ebp,eax
  42708f:	nop
  427090:	pusha  
  427091:	cdq    
  427092:	pop    ds
  427093:	xchg   ebx,eax
  427094:	sbb    al,0x42
  427096:	mov    edx,0x283987c7
  42709b:	retf   0x1e16
  42709e:	ret    
  42709f:	mov    dh,0x50
  4270a1:	adc    BYTE PTR [edx],bh
  4270a3:	icebp  
  4270a4:	enter  0xbaf8,0xc2
  4270a8:	xor    DWORD PTR [ebp-0x50],0x7c
  4270ac:	xor    dl,cl
  4270ae:	inc    ebp
  4270af:	mov    ah,BYTE PTR [eax+0x61]
  4270b2:	xor    ch,0xce
  4270b5:	jb     0x42708c
  4270b7:	mov    ds:0xe5dc0695,al
  4270bc:	pop    edx
  4270bd:	xchg   ebx,eax
  4270be:	stos   BYTE PTR es:[edi],al
  4270bf:	xchg   edx,eax
  4270c0:	xchg   ebx,eax
  4270c1:	rol    DWORD PTR [esi+0x1bf1a56],0xc3
  4270c8:	ins    DWORD PTR es:[edi],dx
  4270c9:	mov    dl,0xc6
  4270cb:	(bad)  
  4270cd:	in     eax,dx
  4270ce:	push   ss
  4270cf:	xchg   edi,eax
  4270d0:	inc    DWORD PTR [esp+edx*1+0x9]
  4270d4:	mov    bh,0xf3
  4270d6:	and    BYTE PTR [edx],0x74
  4270d9:	js     0x42710e
  4270db:	cmp    al,0x5f
  4270dd:	mulps  xmm1,XMMWORD PTR [eax-0x112358b2]
  4270e4:	dec    ebp
  4270e5:	je     0x42710b
  4270e7:	pusha  
  4270e8:	pop    es
  4270e9:	fcomp  DWORD PTR [ebp-0x77]
  4270ec:	xor    esp,esi
  4270ee:	push   ecx
  4270ef:	pop    ds
  4270f0:	inc    ebp
  4270f1:	ret    0x410f
  4270f4:	dec    ebx
  4270f5:	jle    0x427077
  4270f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270f8:	jmp    0x7d95:0xc1a47977
  4270ff:	loope  0x427168
  427101:	xchg   edx,eax
  427102:	inc    eax
  427103:	(bad)  
  427104:	and    BYTE PTR [edx],0x6f
  427107:	mov    al,0xac
  427109:	or     eax,0x5b376810
  42710e:	mov    bl,0x41
  427110:	mov    dl,0x76
  427112:	fcmovnu st,st(3)
  427114:	mov    dl,0xf2
  427116:	add    BYTE PTR [edi],bh
  427118:	add    edi,ecx
  42711a:	pop    ds
  42711b:	out    dx,eax
  42711c:	(bad)  
  42711d:	scas   al,BYTE PTR es:[edi]
  42711e:	movlps xmm5,QWORD PTR [ebx]
  427121:	shr    BYTE PTR [ebp-0x1e],1
  427124:	mov    ah,ch
  427126:	rcl    DWORD PTR [edx-0xbd3a780],cl
  42712c:	sahf   
  42712d:	fcom   st(2)
  42712f:	jmp    0xb0:0xc17686df
  427136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427137:	in     eax,0xe9
  427139:	mov    ebx,0xbfb6c6a2
  42713e:	pop    eax
  42713f:	and    al,0x8d
  427141:	xor    dl,BYTE PTR [esi-0x5ed35a58]
  427147:	mov    ah,0xfe
  427149:	retf   
  42714a:	int3   
  42714b:	and    edi,DWORD PTR [esi-0x28733db7]
  427151:	test   DWORD PTR [eax],ebx
  427153:	inc    edi
  427154:	dec    esi
  427155:	in     al,0xd0
  427157:	xor    BYTE PTR ds:0x4e3bef65,dl
  42715d:	jle    0x427123
  42715f:	jo     0x42711f
  427161:	mov    eax,ds:0x81a39ceb
  427166:	push   esi
  427167:	es dec esp
  427169:	das    
  42716a:	inc    esp
  42716b:	cmp    al,0xf7
  42716d:	loop   0x427104
  42716f:	mov    cl,0x69
  427171:	sbb    ecx,esp
  427173:	push   0xffffff94
  427175:	lahf   
  427176:	sub    al,0x60
  427178:	jnp    0x427183
  42717a:	fwait
  42717b:	cmp    BYTE PTR ss:[edx+ebp*4],ah
  42717f:	sahf   
  427180:	test   al,0x95
  427182:	nop
  427183:	sub    eax,0x778e7fa0
  427188:	sbb    eax,DWORD PTR [ecx*1-0x498e234]
  42718f:	shr    DWORD PTR [ebx],cl
  427191:	clc    
  427192:	cmp    edx,esi
  427194:	mov    dh,0x1b
  427196:	jmp    0x852e:0xbefb9731
  42719d:	jne    0x4271d0
  42719f:	mov    bl,0x2c
  4271a1:	jo     0x4271dd
  4271a3:	mov    edx,0x5634f95a
  4271a8:	clc    
  4271a9:	add    DWORD PTR [ebx],edx
  4271ab:	adc    ebx,DWORD PTR [ecx]
  4271ad:	sar    edi,cl
  4271af:	add    BYTE PTR [eax],al
  4271b1:	add    BYTE PTR [ebx],ch
  4271b3:	xchg   DWORD PTR [ebp-0x1f],esi
  4271b6:	std    
  4271b7:	repz mov edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	dec    edx
  4271bf:	push   ecx
  4271c0:	xchg   ebx,eax
  4271c1:	adc    DWORD PTR [ecx],edx
  4271c3:	jmp    0x0:0x4f50001
  4271ca:	neg    BYTE PTR [esi-0x4a]
  4271cd:	xlat   BYTE PTR ds:[ebx]
  4271ce:	cdq    
  4271cf:	and    ecx,edi
  4271d1:	ds icebp 
  4271d3:	fdivr  QWORD PTR [ebx+0x30]
  4271d6:	shl    DWORD PTR [ebx-0x80],cl
  4271d9:	fimul  DWORD PTR [edx+0x3350d462]
  4271df:	jns    0x427227
  4271e1:	jbe    0x42718a
  4271e3:	ror    DWORD PTR [ebp-0x28],1
  4271e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271e7:	lock std 
  4271e9:	push   es
  4271ea:	es inc ebp
  4271ec:	cmp    BYTE PTR [esi+edx*2+0x1f],ch
  4271f0:	jl     0x4271cb
  4271f2:	mov    edi,0x72fe4c52
  4271f7:	sub    ah,BYTE PTR [esi]
  4271f9:	push   es
  4271fa:	gs in  eax,0x6d
  4271fd:	icebp  
  4271fe:	ficom  WORD PTR [eax]
  427200:	rcl    DWORD PTR [esi+edi*1-0x429af9ce],1
  427207:	sti    
  427208:	push   eax
  427209:	mov    bh,0x57
  42720b:	or     ah,dl
  42720d:	sbb    al,0x9a
  42720f:	scas   eax,DWORD PTR es:[edi]
  427210:	dec    esp
  427211:	adc    al,0xee
  427213:	mov    esi,0xb4b747ea
  427218:	xor    al,0x3c
  42721a:	adc    al,0x6e
  42721c:	mov    ch,bh
  42721e:	mov    esi,0x48750e8a
  427223:	outs   dx,DWORD PTR ds:[esi]
  427224:	sbb    eax,0xffacc377
  427229:	data16 (bad) 
  42722b:	out    dx,eax
  42722c:	dec    edx
  42722d:	mov    ds:0xa35d3e10,al
  427232:	in     al,0x7e
  427234:	mov    edi,0xa945e074
  427239:	dec    ebx
  42723a:	jp     0x427244
  42723c:	out    dx,al
  42723d:	mov    ds:0x5874b19d,al
  427242:	push   es
  427243:	pop    esp
  427244:	mov    ebp,0x68d287fd
  427249:	dec    eax
  42724a:	cli    
  42724b:	in     al,0x12
  42724d:	loopne 0x427270
  42724f:	popa   
  427250:	test   DWORD PTR [eax+0x3e],0x3616ced4
  427257:	fucomp st(2)
  427259:	lea    esp,[ecx-0x2bf6d34c]
  42725f:	xchg   ebx,eax
  427260:	sub    ah,BYTE PTR [eax]
  427262:	jnp    0x4272b0
  427264:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  427266:	pop    ss
  427267:	mov    bh,BYTE PTR [ecx]
  427269:	hlt    
  42726a:	jb     0x427271
  42726c:	and    edi,DWORD PTR ds:0x7305734
  427272:	fcom   QWORD PTR [ebx]
  427274:	mov    esi,0x9601a099
  427279:	xor    eax,0x898fda08
  42727e:	enter  0x9a9a,0xde
  427282:	mov    DWORD PTR [ebx],eax
  427284:	cmp    cl,al
  427286:	cdq    
  427287:	mov    eax,0xa09fd31e
  42728c:	dec    esi
  42728d:	jb     0x42726f
  42728f:	mov    cl,0x8
  427291:	rdpmc  
  427293:	xchg   esp,eax
  427294:	fsub   QWORD PTR [ecx-0x663e79c3]
  42729a:	mov    ebx,0xd8de112a
  42729f:	(bad)  
  4272a0:	in     al,0x1c
  4272a2:	hlt    
  4272a3:	sbb    eax,DWORD PTR [edi-0x26]
  4272a6:	xor    esp,DWORD PTR [ebx]
  4272a8:	xor    DWORD PTR [esi+0x2fbd62a1],0xffffffa3
  4272af:	dec    esi
  4272b0:	mov    cl,0xe5
  4272b2:	or     eax,0x61197b6d
  4272b7:	dec    esp
  4272b8:	jo     0x427263
  4272ba:	(bad)  [edx+edi*1+0x50e36b12]
  4272c1:	jg     0x4272f5
  4272c3:	dec    edi
  4272c4:	out    0x87,eax
  4272c6:	xlat   BYTE PTR ds:[ebx]
  4272c7:	mov    ecx,0x2f5489e
  4272cc:	imul   ebx,edx,0xfffffff2
  4272cf:	ins    DWORD PTR es:[edi],dx
  4272d0:	and    al,0x96
  4272d2:	cmp    edi,0xa895fb89
  4272d8:	or     DWORD PTR [edi],edi
  4272da:	mov    ch,0xe4
  4272dc:	sub    edx,DWORD PTR [eax+0x38]
  4272df:	pop    ebp
  4272e0:	enter  0xffe4,0xb6
  4272e4:	push   ss
  4272e5:	nop
  4272e6:	popf   
  4272e7:	mov    edx,0x123a4e8e
  4272ec:	into   
  4272ed:	inc    edi
  4272ee:	int    0x24
  4272f0:	ret    
  4272f1:	and    ebp,DWORD PTR [esi+0x32]
  4272f4:	imul   ecx,DWORD PTR gs:[ebx+0x55dc8312],0x64e8d65e
  4272ff:	mov    al,0x31
  427301:	mov    ds:0x4fa1452d,eax
  427306:	data16 and al,0xe5
  427309:	add    BYTE PTR [edi-0x6c789dbd],0xc2
  427310:	outs   dx,DWORD PTR ds:[esi]
  427311:	inc    ebp
  427312:	mov    ah,BYTE PTR [eax+0x7a]
  427315:	adc    esp,DWORD PTR [ecx]
  427317:	bound  edi,QWORD PTR [esp+eax*4+0x6596724d]
  42731e:	sub    al,0x2a
  427320:	popf   
  427321:	test   al,0x35
  427323:	mov    al,al
  427325:	dec    ecx
  427326:	into   
  427327:	mov    ebp,DWORD PTR [edx]
  427329:	nop
  42732a:	loope  0x427376
  42732c:	cs sbb eax,0x8d2faef2
  427332:	in     al,dx
  427333:	or     dh,BYTE PTR [esi+0x4]
  427336:	jmp    0x4272bf
  427338:	pop    edi
  427339:	jmp    0x427395
  42733b:	dec    edx
  42733c:	bound  eax,QWORD PTR [esi-0x4cbc70e4]
  427342:	sub    dl,ch
  427344:	or     eax,0xbe91fe7f
  427349:	cmp    al,0xbd
  42734b:	out    0x20,al
  42734d:	es push ecx
  42734f:	fscale 
  427351:	pop    ss
  427352:	aam    0x32
  427354:	out    dx,al
  427355:	push   ds
  427356:	dec    eax
  427357:	pop    esp
  427358:	out    dx,eax
  427359:	xor    DWORD PTR [edi+ebx*2-0x4f6c2ae8],ebp
  427360:	jl     0x4273c8
  427362:	jecxz  0x427350
  427364:	ins    BYTE PTR es:[edi],dx
  427365:	gs inc edi
  427367:	in     al,dx
  427368:	push   edx
  427369:	jb     0x4272f3
  42736b:	mov    DWORD PTR [edx],ecx
  42736d:	shl    bl,0xc
  427370:	es jnp 0x4273c7
  427373:	scas   eax,DWORD PTR es:[edi]
  427374:	arpl   WORD PTR [edx+ebp*8+0x68490b23],dx
  42737b:	stos   DWORD PTR es:[edi],eax
  42737c:	mov    al,0x9c
  42737e:	adc    bl,dh
  427380:	cs (bad) 
  427382:	leave  
  427383:	cmp    esp,DWORD PTR [eax+0x22]
  427386:	nop
  427387:	aam    0x48
  427389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42738a:	jae    0x42738b
  42738c:	dec    edx
  42738d:	enter  0xc7e8,0x1a
  427391:	cdq    
  427392:	repz rcl BYTE PTR [esi+0x5a28473f],0x4e
  42739a:	es call 0x92e4f173
  4273a0:	lods   eax,DWORD PTR ds:[esi]
  4273a1:	and    dl,al
  4273a3:	inc    ecx
  4273a4:	cmp    eax,0xb94188d2
  4273a9:	or     dh,BYTE PTR [esi]
  4273ab:	push   0xffffffd2
  4273ad:	in     al,dx
  4273ae:	dec    esi
  4273af:	or     BYTE PTR [ebp-0x77],dh
  4273b2:	popa   
  4273b3:	jecxz  0x4273c7
  4273b5:	jp     0x427348
  4273b7:	mov    ebp,0x67ae9643
  4273bc:	dec    edi
  4273bd:	in     al,0xca
  4273bf:	fstp   TBYTE PTR [eax]
  4273c1:	xchg   edi,eax
  4273c2:	xor    al,0x6f
  4273c5:	and    DWORD PTR [eax],esi
  4273c7:	pop    ebx
  4273c8:	xor    DWORD PTR [ebx+ecx*4],esi
  4273cb:	lds    ebp,FWORD PTR [eax+edx*2-0x1f5176a2]
  4273d2:	mov    bh,0xeb
  4273d4:	mov    esp,0x4d9c23fc
  4273d9:	into   
  4273da:	ret    
  4273db:	dec    edx
  4273dc:	jae    0x42736e
  4273de:	jle    0x427368
  4273e0:	repz or DWORD PTR [eax+0x2b],edi
  4273e4:	xor    edx,DWORD PTR ds:0x422e1239
  4273ea:	push   ecx
  4273eb:	iret   
  4273ec:	sub    dh,bl
  4273ee:	(bad)  
  4273ef:	cli    
  4273f0:	push   ds
  4273f1:	frstor [ecx-0x33cac529]
  4273f7:	sub    ecx,DWORD PTR [ebx-0x46]
  4273fa:	fild   WORD PTR [eax-0x12]
  4273fd:	sub    ch,BYTE PTR [eax+0x44]
  427400:	and    cl,BYTE PTR [eax-0x11]
  427403:	mov    dh,0x30
  427405:	repnz xor BYTE PTR [ebx-0x14cd94cf],dl
  42740c:	jmp    0x2fabf8e
  427411:	fistp  QWORD PTR [esi-0x1c69313]
  427417:	and    eax,0x5c6add5
  42741c:	add    BYTE PTR [edx],bl
  42741e:	cmp    eax,0xc99f45cb
  427423:	aad    0xb9
  427425:	call   DWORD PTR ds:0xc661801b
  42742b:	jp     0x4274a7
  42742d:	pcmpeqw mm3,QWORD PTR [esi-0x2f6c2d56]
  427434:	cli    
  427435:	mov    ebx,0x2892241b
  42743a:	jnp    0x427410
  42743c:	pop    ss
  42743d:	inc    eax
  42743e:	fs in  eax,0x8
  427441:	imul   esp,DWORD PTR [ebx],0x2
  427444:	enter  0x292f,0x11
  427448:	imul   ebp,DWORD PTR [edi+0xc14ec6b],0x1962af25
  427452:	stos   BYTE PTR es:[edi],al
  427453:	sub    DWORD PTR [ebp+0xb8b093e],ebx
  427459:	loop   0x4274c5
  42745b:	xchg   esp,eax
  42745c:	inc    ebp
  42745d:	inc    ebp
  42745e:	scas   eax,DWORD PTR es:[edi]
  42745f:	mov    cl,0xf7
  427461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427462:	popf   
  427463:	cmp    esi,DWORD PTR [edi+0x2c]
  427466:	outs   dx,BYTE PTR ds:[esi]
  427467:	ret    0x7cd4
  42746a:	retf   0x9d5a
  42746d:	fld    QWORD PTR [esp+edi*1]
  427470:	repnz inc edi
  427472:	sub    al,0x61
  427474:	cs pop esp
  427476:	xlat   BYTE PTR ds:[ebx]
  427477:	and    ebp,eax
  427479:	push   0xffffffba
  42747b:	push   0x77433188
  427480:	in     eax,0x9b
  427482:	(bad)  
  427484:	shr    DWORD PTR [eax-0x75],0x55
  427488:	cmp    esp,DWORD PTR [edi]
  42748a:	mov    dh,0x5b
  42748c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42748d:	div    DWORD PTR [edx]
  42748f:	sbb    dl,BYTE PTR [edx]
  427491:	push   0xffffffe8
  427493:	push   0x68bc3857
  427498:	add    ebx,DWORD PTR [esi+esi*4-0x7b]
  42749c:	sbb    eax,0x5248dd19
  4274a1:	mov    edi,0x8922ea9f
  4274a6:	inc    edi
  4274a7:	popa   
  4274a8:	or     eax,0x9787e7f8
  4274ad:	cmp    BYTE PTR [eax],ch
  4274af:	mov    eax,0xcacbf940
  4274b4:	pop    eax
  4274b5:	arpl   WORD PTR [ecx-0x61c169bb],dx
  4274bb:	cmp    al,0x4
  4274bd:	sahf   
  4274be:	fldenv [ecx+0x3e]
  4274c1:	add    DWORD PTR [eax+0x5d54d644],ecx
  4274c7:	fdiv   QWORD PTR [edx+0x3d]
  4274ca:	or     BYTE PTR [ecx],0xa5
  4274cd:	out    0x1b,al
  4274cf:	push   esp
  4274d0:	loop   0x427524
  4274d2:	int3   
  4274d3:	ss inc eax
  4274d5:	xor    eax,DWORD PTR [ebx+0x0]
  4274d8:	sub    ch,BYTE PTR [edi+edx*8+0x1a]
  4274dc:	jnp    0x427472
  4274de:	sbb    edi,0x62d09054
  4274e4:	mov    ds:0x53a5164e,al
  4274e9:	sub    eax,0x55bb82a4
  4274ee:	mov    ch,0x23
  4274f0:	mov    ebx,0x89443b19
  4274f5:	mov    dh,0x15
  4274f7:	or     eax,0xde7a6ade
  4274fc:	xor    DWORD PTR [esi+ebx*4-0x20948f11],ecx
  427503:	sub    bl,al
  427505:	rcl    DWORD PTR [edx+edi*1-0x4],1
  427509:	xchg   ecx,eax
  42750a:	ja     0x427499
  42750c:	mov    ah,0x65
  42750e:	retf   0x4ecb
  427511:	mov    bl,0xd6
  427513:	jp     0x427526
  427515:	imul   ebp,DWORD PTR [edi+ebx*2+0x4c38fc4c],0xffffff9a
  42751d:	add    al,0xe3
  42751f:	test   al,0x11
  427521:	das    
  427522:	and    esi,DWORD PTR [ebp+0x217a57ea]
  427528:	adc    al,0x82
  42752a:	aas    
  42752b:	retf   0x95f
  42752e:	pop    ebx
  42752f:	adc    eax,DWORD PTR [edx]
  427531:	push   ebx
  427532:	aad    0x8b
  427534:	clc    
  427535:	popa   
  427536:	je     0x4274dc
  427538:	arpl   WORD PTR [ecx+0x6c],di
  42753b:	retf   
  42753c:	dec    esp
  42753d:	je     0x427513
  42753f:	mov    al,ds:0x3af492d4
  427544:	xor    edi,DWORD PTR [edi]
  427546:	test   eax,0x477036fa
  42754b:	sar    BYTE PTR [ebp-0x27],1
  42754e:	sub    al,ch
  427550:	push   eax
  427551:	daa    
  427552:	mov    ebp,0x521e3855
  427557:	xchg   ecx,eax
  427558:	mov    dl,dl
  42755a:	sti    
  42755b:	lods   al,BYTE PTR ds:[esi]
  42755c:	mov    DWORD PTR [esi+0x3474c628],esp
  427562:	repz fmul DWORD PTR ds:[eax]
  427566:	sub    eax,0x71130c7b
  42756b:	or     BYTE PTR [eax],bh
  42756d:	pop    edx
  42756e:	inc    ebp
  42756f:	mov    ebx,0x88757375
  427574:	mov    dl,0xf3
  427576:	add    edx,DWORD PTR [ebp+0x116848d6]
  42757c:	sbb    eax,0xb63d4faf
  427581:	repz bound edi,QWORD PTR [eax-0x7b]
  427585:	dec    esp
  427586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427587:	add    bh,BYTE PTR [esi+0x2510dd8]
  42758d:	dec    edx
  42758e:	mov    al,0xcb
  427590:	sbb    DWORD PTR ss:[edx],esi
  427593:	adc    eax,0x6dc4ef2b
  427598:	mov    ds:0x6268333e,eax
  42759d:	pushf  
  42759e:	test   eax,0x3ae988d
  4275a3:	in     eax,0xb9
  4275a5:	popf   
  4275a6:	popf   
  4275a7:	and    eax,0x6a868a93
  4275ac:	js     0x42758f
  4275ae:	pop    edi
  4275af:	scas   eax,DWORD PTR es:[edi]
  4275b0:	call   0xc593:0xc2a5ec2d
  4275b7:	adc    ebx,DWORD PTR [ecx+0x4550531d]
  4275bd:	lahf   
  4275be:	das    
  4275bf:	jbe    0x42762f
  4275c1:	mov    esp,0x5fbc299
  4275c6:	jo     0x4275e6
  4275c8:	adc    esi,DWORD PTR [ecx+0xd15f1ab]
  4275ce:	mov    ds:0x1337baf7,al
  4275d3:	mov    al,0x77
  4275d5:	sbb    BYTE PTR [edx+0x45],al
  4275d8:	cvttps2pi mm5,QWORD PTR [ebp+0x1f]
  4275dc:	or     al,0x12
  4275de:	lods   eax,DWORD PTR ds:[esi]
  4275df:	or     al,0xb3
  4275e1:	mov    bl,0x41
  4275e3:	and    ebp,ebx
  4275e5:	xchg   ecx,eax
  4275e6:	mov    ds:0x27de3483,eax
  4275eb:	jae    0x42758b
  4275ed:	jl     0x427644
  4275ef:	xchg   esp,eax
  4275f0:	push   esp
  4275f1:	fs stos DWORD PTR es:[edi],eax
  4275f3:	int3   
  4275f4:	aam    0xcb
  4275f6:	je     0x4275c7
  4275f8:	je     0x42765e
  4275fa:	mov    ecx,0x82f32138
  4275ff:	std    
  427600:	inc    edx
  427601:	(bad)
  427605:	sub    esi,DWORD PTR [ebx+0x9]
  427608:	js     0x42761a
  42760a:	in     eax,0xff
  42760c:	inc    edx
  42760d:	mov    ah,0x4b
  42760f:	inc    ebp
  427610:	clc    
  427611:	xchg   edi,eax
  427612:	es and bh,bh
  427615:	loope  0x427685
  427617:	xor    DWORD PTR [edx+0x71f2b40c],ebp
  42761d:	adc    esp,ebx
  42761f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427620:	fbstp  TBYTE PTR [ebx+0xb]
  427623:	(bad)  
  427624:	lock jae 0x4275d9
  427627:	pop    ss
  427628:	sbb    bh,bl
  42762a:	jae    0x427664
  42762c:	lea    esp,[ecx+eiz*2-0x75d16c0e]
  427633:	sub    DWORD PTR [edx+0x6b],esi
  427636:	inc    ecx
  427637:	mov    dl,0x87
  427639:	mov    edi,0xcc8e5ba0
  42763e:	mov    ebx,0xa0a9d5e6
  427643:	push   esp
  427644:	mov    eax,0x14a7845d
  427649:	xor    ebp,DWORD PTR [ebp+0x9]
  42764c:	sbb    al,0xfd
  42764e:	and    ebp,DWORD PTR [edi-0x7137e0db]
  427654:	loopne 0x42764e
  427656:	mov    ecx,0xdbee5740
  42765b:	mov    ebp,0xecea51cf
  427660:	(bad)  
  427661:	push   esi
  427662:	jg     0x427637
  427664:	jmp    0x3c1de912
  427669:	push   0xffffffd0
  42766b:	std    
  42766c:	push   es
  42766d:	pop    ds
  42766e:	cld    
  42766f:	add    eax,0xd5e4897
  427674:	test   cl,bh
  427676:	jo     0x427652
  427678:	push   cs
  427679:	jno    0x42764c
  42767b:	arpl   WORD PTR [eax-0x31fe57fd],bx
  427681:	adc    ebp,esi
  427683:	retf   0xbfd3
  427686:	pop    edx
  427687:	push   ds
  427688:	imul   edi,DWORD PTR [esi+0x31],0xffffffa1
  42768c:	fisub  DWORD PTR [ebx+0x78ed314a]
  427692:	out    dx,eax
  427693:	les    dx,DWORD PTR [ebp-0x3c]
  427697:	jmp    0x427681
  427699:	pop    edx
  42769a:	into   
  42769b:	pop    edx
  42769c:	data16 loopne 0x42771d
  42769f:	mov    esp,0x4ba66518
  4276a4:	mov    esi,0x6b3d4ba3
  4276a9:	jb     0x42764a
  4276ab:	push   0x4d5c36eb
  4276b0:	pop    esp
  4276b1:	mov    bl,0x67
  4276b3:	shr    DWORD PTR [ebx],1
  4276b5:	bswap  ebp
  4276b7:	sub    bh,BYTE PTR [ebp-0x68]
  4276ba:	add    bl,BYTE PTR ds:0x4382ab
  4276c0:	add    BYTE PTR [eax],al
  4276c2:	or     al,ah
  4276c4:	mov    eax,ds:0x5ef7eff7
  4276c9:	std    
  4276ca:	mov    ebp,0x9f91c3b
  4276cf:	push   ebp
  4276d0:	js     0x4276e1
  4276d2:	push   es
  4276d3:	out    dx,eax
  4276d4:	add    DWORD PTR [eax],eax
  4276d6:	cmc    
  4276d7:	add    al,0x0
  4276d9:	add    BYTE PTR [ecx],cl
  4276db:	mov    al,ds:0xf77fc600
  4276e0:	lahf   
  4276e1:	jge    0x4276d5
  4276e3:	jnp    0x42768e
  4276e5:	outs   dx,BYTE PTR ds:[esi]
  4276e6:	out    dx,al
  4276e7:	jmp    0xd220:0xc01eeb7b
  4276ee:	loopne 0x42770a
  4276f0:	cmc    
  4276f1:	les    esp,FWORD PTR [ecx-0x7d96a5f3]
  4276f7:	add    eax,0x7051e072
  4276fc:	rep outs dx,BYTE PTR ds:[esi]
  4276fe:	push   ebp
  4276ff:	and    cl,dh
  427701:	mov    eax,0xf25f4c07
  427706:	or     eax,0x3cb758e4
  42770b:	mov    eax,ds:0x55952507
  427710:	lods   al,BYTE PTR ds:[esi]
  427711:	push   edx
  427712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427713:	jne    0x427752
  427715:	cli    
  427716:	cmp    cl,0x1f
  427719:	mov    DWORD PTR [esp+eiz*8+0x6fa90f03],eax
  427720:	outs   dx,BYTE PTR ds:[esi]
  427721:	mov    ebp,0x8400d7bd
  427726:	ja     0x427728
  427728:	adc    DWORD PTR [edi],esi
  42772a:	call   0x1924475a
  42772f:	ret    0xb345
  427732:	xchg   edx,eax
  427733:	aas    
  427734:	das    
  427735:	mov    esi,DWORD PTR [eax]
  427737:	push   ss
  427738:	nop/reserved BYTE PTR cs:[eax+0xf]
  42773d:	pop    es
  42773e:	fild   QWORD PTR [esi]
  427740:	pop    ss
  427741:	ret    0x9370
  427744:	fcom   st(2)
  427746:	mov    edx,0xbab8c4cf
  42774b:	sbb    DWORD PTR [edx],eax
  42774d:	imul   BYTE PTR [esi+0xa]
  427750:	and    al,0x1d
  427752:	or     bh,BYTE PTR [ebx-0x1c]
  427755:	mov    ds:0xcbbc6419,al
  42775a:	mov    ecx,0x2aef59d1
  42775f:	or     al,BYTE PTR [eax]
  427761:	jp     0x4277cd
  427763:	int3   
  427764:	cmp    eax,0x816feacf
  427769:	(bad)  
  42776a:	cmp    ch,BYTE PTR cs:[ebx]
  42776d:	pushf  
  42776e:	daa    
  42776f:	xor    BYTE PTR [edi+ebx*8],al
  427772:	xchg   dh,cl
  427774:	mov    ds:0xf65e2df8,al
  427779:	imul   ecx,DWORD PTR [edx-0x77578137],0xe7b9b92a
  427783:	cld    
  427784:	or     eax,0x80b8cb53
  427789:	pop    ds
  42778a:	xchg   edx,eax
  42778b:	or     esi,DWORD PTR [edi-0x79c0c184]
  427791:	jbe    0x42771c
  427793:	jge    0x42777b
  427795:	call   0x9fc5:0xae5f235a
  42779c:	and    eax,0xa862b576
  4277a1:	dec    edx
  4277a2:	jnp    0x427788
  4277a4:	das    
  4277a5:	inc    ebp
  4277a6:	or     eax,0xae527de4
  4277ab:	scas   eax,DWORD PTR es:[edi]
  4277ac:	mov    bh,0xe5
  4277ae:	aad    0x40
  4277b0:	stc    
  4277b1:	into   
  4277b2:	xor    BYTE PTR [ecx],al
  4277b4:	jmp    0x3bc61623
  4277b9:	or     al,0x2a
  4277bb:	adc    DWORD PTR [esi],edx
  4277bd:	cli    
  4277be:	mov    WORD PTR [esi],fs
  4277c0:	push   esp
  4277c1:	dec    ecx
  4277c2:	hlt    
  4277c3:	mov    ebp,0x896498c
  4277c8:	sbb    ebx,edx
  4277ca:	ret    0xbacb
  4277cd:	and    ecx,0x7955be36
  4277d3:	repnz cmc 
  4277d5:	push   edi
  4277d6:	jbe    0x4277ee
  4277d8:	bound  ecx,QWORD PTR [edx+0x6a]
  4277db:	lods   al,BYTE PTR ds:[esi]
  4277dc:	and    eax,0xffffffc8
  4277df:	addr16 dec esi
  4277e1:	pop    ss
  4277e2:	retf   
  4277e3:	xchg   DWORD PTR [ebx-0x5a72df69],ebx
  4277e9:	je     0x42783f
  4277eb:	pop    ebp
  4277ec:	(bad)  
  4277ed:	inc    DWORD PTR ds:0xd30ef9d8
  4277f3:	push   edx
  4277f4:	and    DWORD PTR [esi],0xf826b7ba
  4277fa:	push   eax
  4277fc:	sbb    ecx,DWORD PTR [eax-0x677f4e26]
  427802:	rcl    DWORD PTR [ecx-0x54],0x37
  427806:	outs   dx,BYTE PTR ds:[esi]
  427807:	pop    edx
  427808:	inc    ebp
  427809:	xchg   edi,eax
  42780a:	push   edx
  42780b:	mov    esi,DWORD PTR [edi+0xa]
  42780e:	sbb    BYTE PTR [ebx],ch
  427810:	sub    eax,DWORD PTR [ecx]
  427812:	push   cs
  427813:	retf   0xc7bf
  427816:	xor    al,0x74
  427818:	or     ebp,DWORD PTR [ecx+0x4f]
  42781b:	addr16 (bad) 
  42781d:	aad    0x8b
  42781f:	ds nop
  427821:	jp     0x42789b
  427823:	adc    BYTE PTR [ecx+ebx*1],dh
  427826:	repnz test DWORD PTR [ecx-0x5e37c0de],edi
  42782d:	out    0x64,eax
  42782f:	mov    ch,0x55
  427831:	xchg   esp,eax
  427832:	mov    ds:0xc7e45336,eax
  427837:	mov    eax,ds:0x8a741f3a
  42783c:	pop    ds
  42783d:	pop    eax
  42783e:	leave  
  42783f:	enter  0x5d51,0xd1
  427843:	jmp    0xa740:0xae39e35a
  42784a:	mov    eax,0xad1e610
  42784f:	push   esi
  427850:	les    edi,FWORD PTR [ebp*2-0x1e4254c5]
  427857:	inc    eax
  427858:	mov    eax,ds:0xf292d201
  42785d:	inc    ebp
  42785e:	xor    ch,dl
  427860:	pop    ebp
  427861:	fcomp  QWORD PTR [esi-0x3279b3a3]
  427867:	cmp    ecx,DWORD PTR [ebx+0x61]
  42786a:	push   edi
  42786b:	sahf   
  42786c:	int    0xbc
  42786e:	sub    eax,DWORD PTR [esi+ebp*8-0x2c]
  427872:	cmp    edi,0x6f9c86f8
  427878:	inc    ebx
  427879:	or     al,0x28
  42787b:	sub    dh,al
  42787d:	outs   dx,DWORD PTR ds:[esi]
  42787e:	fwait
  42787f:	push   edx
  427880:	fstp   st(7)
  427882:	rcl    BYTE PTR [ecx-0x37a5c2f8],0x8b
  427889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42788a:	stc    
  42788b:	call   0x823a5fac
  427890:	(bad)  [edi+0x227d21d0]
  427896:	xor    DWORD PTR [esi-0x1f],ecx
  427899:	mov    ebp,0x96e16e95
  42789e:	dec    edi
  42789f:	popf   
  4278a0:	ret    0xe880
  4278a3:	xor    bl,BYTE PTR [eax+0x3cdf6cef]
  4278a9:	sbb    edi,ebp
  4278ab:	enter  0x131a,0xbe
  4278af:	fstp   TBYTE PTR [ebx-0x67]
  4278b2:	adc    al,0x2e
  4278b4:	shr    DWORD PTR [eax-0x58],0xb7
  4278b8:	aas    
  4278b9:	inc    ecx
  4278ba:	push   ebp
  4278bb:	(bad)  
  4278bc:	mov    eax,cr1
  4278bf:	pop    ebx
  4278c0:	das    
  4278c1:	inc    esp
  4278c2:	test   BYTE PTR [edi+0x18c839f6],dh
  4278c8:	lahf   
  4278c9:	cmp    DWORD PTR [edx+eiz*1+0x33],eax
  4278cd:	jmp    FWORD PTR [edi+0x22]
  4278d0:	mov    ah,0x56
  4278d2:	js     0x4278c8
  4278d4:	sub    al,0x37
  4278d6:	push   0x46
  4278d8:	mov    esi,0x64dd422c
  4278dd:	fist   DWORD PTR [edx-0x4afeda7a]
  4278e3:	jmp    0x42791e
  4278e5:	push   ecx
  4278e6:	pusha  
  4278e7:	test   BYTE PTR [ebx],ah
  4278e9:	hlt    
  4278ea:	enter  0x9c51,0x32
  4278ee:	push   ecx
  4278ef:	mov    ecx,DWORD PTR [edi]
  4278f1:	mov    ebp,DWORD PTR [edx+0x7]
  4278f4:	and    esp,DWORD PTR [ebx+0x39]
  4278f7:	xchg   esi,eax
  4278f8:	out    dx,al
  4278f9:	xchg   esp,eax
  4278fa:	div    DWORD PTR [edx-0x36]
  4278fd:	in     eax,0x40
  4278ff:	rol    dl,cl
  427901:	cdq    
  427902:	jno    0x427918
  427904:	mov    al,ds:0xd5a02aa7
  427909:	push   eax
  42790a:	jmp    0x427947
  42790c:	loop   0x42790a
  42790e:	enter  0xc16b,0xd3
  427912:	mov    dl,0x83
  427914:	jo     0x4278a0
  427916:	xchg   esp,eax
  427917:	call   0xab4a04ed
  42791c:	into   
  42791d:	or     BYTE PTR [eax-0x7bc54161],dl
  427923:	add    al,0xf2
  427925:	std    
  427926:	aaa    
  427927:	xchg   esi,eax
  427928:	outs   dx,DWORD PTR ds:[esi]
  427929:	push   esp
  42792a:	lock ret 0x9957
  42792e:	retf   0x86bb
  427931:	gs fwait
  427933:	and    BYTE PTR [ebx+0x680a7e71],bl
  427939:	pusha  
  42793a:	fild   DWORD PTR [esi]
  42793c:	jecxz  0x4278db
  42793e:	xchg   ebx,eax
  42793f:	and    DWORD PTR [esi-0x6f3a5884],edx
  427945:	fiadd  DWORD PTR [ebp+0x539c3347]
  42794b:	(bad)  
  42794c:	xchg   edi,eax
  42794d:	add    BYTE PTR [esi+0x6f],ch
  427950:	pop    eax
  427951:	inc    ebx
  427952:	in     al,dx
  427953:	jo     0x427989
  427955:	das    
  427956:	jmp    0x8001f903
  42795b:	push   cs
  42795c:	mov    edi,0x5ac3dfd9
  427961:	inc    ebx
  427962:	cmp    DWORD PTR [ecx],0xbc76a75c
  427968:	or     DWORD PTR [ebp-0xf],esp
  42796b:	stos   BYTE PTR es:[edi],al
  42796c:	popa   
  42796d:	(bad)  
  42796e:	mov    dh,0xae
  427970:	sti    
  427971:	fdiv   DWORD PTR [esi+0x65]
  427974:	push   ecx
  427975:	cld    
  427976:	clc    
  427977:	sub    ebp,ebx
  427979:	pop    ss
  42797a:	jb     0x427938
  42797c:	outs   dx,BYTE PTR ds:[esi]
  42797d:	ror    DWORD PTR [ecx+ebx*2-0x1a],1
  427981:	sbb    al,0x17
  427983:	jo     0x427910
  427985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427986:	ins    BYTE PTR es:[edi],dx
  427987:	inc    ebp
  427988:	(bad)  
  427989:	add    DWORD PTR fs:0xa3f3a872,ecx
  427990:	cmp    ebx,ebp
  427992:	dec    edi
  427993:	aas    
  427994:	mov    ds:0x99917148,eax
  427999:	gs jmp 0x42798d
  42799c:	adc    dl,BYTE PTR ds:0xb06b5a5a
  4279a2:	jle    0x42794a
  4279a4:	xlat   BYTE PTR ds:[ebx]
  4279a5:	call   0xf37fe7da
  4279aa:	cmp    eax,0xe078ab10
  4279af:	imul   esp,DWORD PTR [ebp+ebx*1+0x43],0xcf1459f8
  4279b7:	cli    
  4279b8:	(bad)  
  4279b9:	xlat   BYTE PTR ds:[ebx]
  4279ba:	aad    0xdd
  4279bc:	sbb    al,0xa9
  4279be:	das    
  4279bf:	(bad)  
  4279c0:	jg     0x4279f9
  4279c2:	xchg   ebx,eax
  4279c3:	not    BYTE PTR [esi-0x18]
  4279c6:	mov    al,0x49
  4279c8:	rol    BYTE PTR [edi-0x646e5dec],1
  4279ce:	fld    QWORD PTR [esi]
  4279d0:	dec    edx
  4279d1:	inc    ecx
  4279d2:	(bad)  
  4279d3:	mov    ecx,gs
  4279d5:	xor    dl,BYTE PTR [ecx+0x12]
  4279d8:	adc    BYTE PTR [edi],al
  4279da:	out    0xf6,al
  4279dc:	sbb    esp,DWORD PTR [ebp-0x7f69065e]
  4279e2:	mov    dh,0x57
  4279e4:	or     al,0x76
  4279e6:	lds    edi,FWORD PTR [ecx]
  4279e8:	cmp    bh,BYTE PTR [esi]
  4279ea:	stc    
  4279eb:	pop    ecx
  4279ec:	or     al,BYTE PTR [esi+edi*1+0x53]
  4279f0:	dec    edx
  4279f1:	adc    bh,BYTE PTR [esi-0x19bd3ee2]
  4279f7:	jmp    edi
  4279f9:	fild   DWORD PTR [ecx+ecx*1+0xd]
  4279fd:	cmp    BYTE PTR [ecx],cl
  4279ff:	out    dx,eax
  427a00:	sub    DWORD PTR [ebp-0x7f],eax
  427a03:	js     0x4279c6
  427a05:	pushf  
  427a06:	jmp    edi
  427a08:	(bad)  
  427a09:	stos   DWORD PTR es:[edi],eax
  427a0a:	mov    BYTE PTR [eax],bl
  427a0c:	add    edi,edx
  427a0e:	mov    eax,ds:0xc7e9ca5e
  427a13:	icebp  
  427a14:	pop    es
  427a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a16:	jne    0x4279b5
  427a18:	xor    DWORD PTR [esi+edi*4+0x6d],ebx
  427a1c:	fdivr  QWORD PTR [edx]
  427a1e:	xor    eax,0xa861db72
  427a23:	test   DWORD PTR [edx+0x3b],esp
  427a26:	into   
  427a27:	xchg   DWORD PTR [eax-0x31029415],ecx
  427a2d:	imul   eax,edx,0x5fcc25f8
  427a33:	dec    eax
  427a34:	mov    eax,ds:0x3d24d94e
  427a39:	pop    eax
  427a3a:	into   
  427a3b:	push   es
  427a3c:	aas    
  427a3d:	mov    ds:0x31bd56d8,al
  427a42:	aas    
  427a43:	test   eax,0xeded6d29
  427a48:	xchg   ecx,eax
  427a49:	add    al,0x88
  427a4b:	adc    al,0x9d
  427a4d:	jbe    0x427a99
  427a4f:	or     al,0xd
  427a51:	cmp    edx,0xffffff9c
  427a54:	fs mov dl,0x93
  427a57:	pop    ecx
  427a58:	jl     0x427ac3
  427a5a:	(bad)  
  427a5b:	in     al,0x2a
  427a5d:	or     al,BYTE PTR [esi-0x30fd13b8]
  427a63:	enter  0x5b94,0x94
  427a67:	ds or  al,0xb7
  427a6a:	hlt    
  427a6b:	retf   
  427a6c:	cmp    ch,dl
  427a6e:	stos   BYTE PTR es:[edi],al
  427a6f:	or     DWORD PTR [edx],0x646dbded
  427a75:	inc    ecx
  427a76:	lods   al,BYTE PTR ds:[esi]
  427a77:	xor    DWORD PTR [ecx+0x16],esi
  427a7a:	inc    eax
  427a7b:	ds inc esi
  427a7d:	xchg   esp,eax
  427a7e:	xor    bl,BYTE PTR [eax]
  427a80:	push   ds
  427a81:	pop    es
  427a82:	pop    ebp
  427a83:	out    0x90,al
  427a85:	push   edx
  427a86:	push   edi
  427a87:	retf   0xc4c5
  427a8a:	div    BYTE PTR [ebp+ebx*4-0x74]
  427a8e:	xchg   edx,esp
  427a90:	inc    ebp
  427a91:	es push 0xfffffff4
  427a94:	lea    edx,[esp+edi*8+0x65]
  427a98:	ins    BYTE PTR es:[edi],dx
  427a99:	aad    0x15
  427a9b:	out    0xd6,eax
  427a9d:	xchg   edi,eax
  427a9e:	mov    edx,0xabe2516c
  427aa3:	dec    ecx
  427aa4:	icebp  
  427aa5:	jne    0x427adc
  427aa7:	stc    
  427aa8:	retf   
  427aa9:	outs   dx,DWORD PTR ds:[esi]
  427aaa:	push   edx
  427aab:	jl     0x427a66
  427aad:	xchg   DWORD PTR [edx+0x1fcb50f3],ebp
  427ab3:	mov    eax,0x13633447
  427ab8:	or     edi,esi
  427aba:	push   cs
  427abb:	fbld   TBYTE PTR [ebx+0x5c]
  427abe:	iret   
  427abf:	add    BYTE PTR [ecx+0x2e834b0],bh
  427ac5:	jg     0x427ad0
  427ac7:	mov    ecx,0xa9932cbf
  427acc:	mov    cl,0x51
  427ace:	jnp    0x427a92
  427ad0:	cwde   
  427ad1:	pop    esi
  427ad2:	pop    ss
  427ad3:	jp     0x427aa0
  427ad5:	mov    al,0x10
  427ad7:	loope  0x427b24
  427ad9:	ret    
  427ada:	push   eax
  427adb:	and    ecx,edx
  427add:	jecxz  0x427b44
  427adf:	mov    cl,0xb4
  427ae1:	lock mov ds:0x2ecf4c9b,al
  427ae7:	push   esp
  427ae8:	fisub  DWORD PTR [edx]
  427aea:	fidiv  DWORD PTR [esi]
  427aec:	jns    0x427af5
  427aee:	pop    edx
  427aef:	dec    edx
  427af0:	fsubr  st(7),st
  427af2:	scas   eax,DWORD PTR es:[edi]
  427af3:	data16 lahf 
  427af5:	dec    BYTE PTR [eax]
  427af7:	pop    ds
  427af8:	aam    0x8b
  427afa:	sub    ebp,DWORD PTR [esi]
  427afc:	and    eax,0x10e378c0
  427b01:	push   esi
  427b02:	cld    
  427b03:	mov    ds:0xd66e01b7,al
  427b08:	call   0x49e2:0xb42f6c6a
  427b0f:	fidivr WORD PTR [esi+0x7d]
  427b12:	mov    ah,bh
  427b14:	pop    ebp
  427b15:	in     eax,dx
  427b16:	mov    ds:0x7741bfc,eax
  427b1b:	rcl    DWORD PTR [ebx+ebx*4-0x2d],0xda
  427b20:	loopne 0x427b44
  427b22:	adc    al,0x52
  427b24:	sbb    eax,0x162273ad
  427b29:	pop    edi
  427b2a:	icebp  
  427b2b:	push   ds
  427b2c:	loope  0x427b44
  427b2e:	jmp    0x98e7:0x724a2819
  427b35:	aas    
  427b36:	xchg   BYTE PTR [edx-0x31],bl
  427b39:	jnp    0x427b99
  427b3b:	loop   0x427b9d
  427b3d:	push   edi
  427b3e:	sbb    BYTE PTR [edx+0x49],0x19
  427b42:	dec    ebx
  427b43:	add    BYTE PTR [eax-0x48],ch
  427b46:	ins    BYTE PTR es:[edi],dx
  427b47:	xchg   DWORD PTR [edi+0x56594e2d],edx
  427b4d:	jp     0x427ad6
  427b4f:	or     ch,bh
  427b51:	imul   DWORD PTR ds:0xad98c93c
  427b57:	mov    WORD PTR ds:0xbcfc,gs
  427b5c:	jge    0x427b99
  427b5e:	sub    dh,bl
  427b60:	mov    ds:0x7bf787,eax
  427b65:	dec    edi
  427b66:	dec    esp
  427b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b68:	mov    edi,0x396869b0
  427b6d:	xor    al,0x7a
  427b6f:	or     bl,cl
  427b71:	in     al,dx
  427b72:	imul   esi,DWORD PTR ds:0x1b1b1b89,0x5
  427b79:	mov    al,0x70
  427b7b:	das    
  427b7c:	dec    esp
  427b7d:	fdiv   DWORD PTR [edi+0x8a4e60c]
  427b83:	aaa    
  427b84:	sbb    DWORD PTR ds:0x54a00209,esp
  427b8a:	sahf   
  427b8b:	out    dx,al
  427b8c:	mov    BYTE PTR [edi-0xe],bl
  427b8f:	aad    0x66
  427b91:	aaa    
  427b92:	in     eax,dx
  427b93:	mov    ah,0x91
  427b95:	xor    eax,0x2a5bb0f4
  427b9a:	fwait
  427b9b:	xchg   edx,ecx
  427b9d:	jnp    0x427bc6
  427b9f:	mov    ch,0x7e
  427ba1:	or     edx,ebx
  427ba3:	cmp    BYTE PTR [edi+ecx*4],cl
  427ba6:	imul   edi,DWORD PTR [edx-0x64],0xffffff9b
  427baa:	mov    ebx,0x73869058
  427baf:	loop   0x427bc8
  427bb1:	push   ebp
  427bb2:	bound  esi,QWORD PTR [ecx-0x47]
  427bb5:	stc    
  427bb6:	add    dl,al
  427bb8:	pop    eax
  427bb9:	pop    edi
  427bba:	jo     0x427c0d
  427bbc:	and    ebp,ecx
  427bbe:	out    0x35,al
  427bc0:	mov    dh,0x92
  427bc2:	mov    esi,0x248e02d2
  427bc7:	mov    dl,0xeb
  427bc9:	cmp    al,0x63
  427bcb:	fwait
  427bcc:	dec    esp
  427bcd:	jb     0x427b73
  427bcf:	add    BYTE PTR [eax],al
  427bd1:	add    BYTE PTR [edi-0xa],dh
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0xafb7e2d0
  427be0:	and    edi,DWORD PTR [ebx+edi*8-0xd]
  427be4:	add    DWORD PTR [eax],eax
  427be6:	cmc    
  427be7:	add    al,0x0
  427be9:	add    BYTE PTR [esi],bh
  427beb:	neg    DWORD PTR [eax+0x238b91c5]
  427bf1:	or     DWORD PTR [ebp+0x1445bc99],esp
  427bf7:	(bad)  
  427bf8:	mov    al,ds:0xdfe5232a
  427bfd:	in     al,dx
  427bfe:	scas   al,BYTE PTR es:[edi]
  427bff:	pusha  
  427c00:	xchg   esi,eax
  427c01:	sub    ah,BYTE PTR ds:0xd132a5ec
  427c07:	dec    edi
  427c08:	sub    eax,0x91fe3974
  427c0d:	inc    esp
  427c0e:	cmp    al,0x87
  427c10:	outs   dx,BYTE PTR ds:[esi]
  427c11:	cmp    DWORD PTR [edx-0x12c99c4a],edx
  427c17:	ins    DWORD PTR es:[edi],dx
  427c18:	mov    edi,0x3e0fe60e
  427c1d:	outs   dx,BYTE PTR ds:[esi]
  427c1e:	mov    gs,WORD PTR [ecx-0x1b34963c]
  427c24:	data16 cmp bl,dh
  427c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c28:	rcr    cl,1
  427c2a:	arpl   di,bp
  427c2c:	repz fcmovbe st,st(0)
  427c2f:	aaa    
  427c30:	loopne 0x427c02
  427c32:	cmp    dl,BYTE PTR [ecx-0x42]
  427c35:	jmp    0x427bdf
  427c37:	out    0x3c,eax
  427c39:	rcr    ah,0xf8
  427c3c:	fwait
  427c3d:	jle    0x427c55
  427c3f:	add    BYTE PTR [ecx],cl
  427c41:	(bad)  
  427c42:	cmp    DWORD PTR [esp+eax*4-0x24],esp
  427c46:	push   edx
  427c47:	jae    0x427c30
  427c49:	cmp    ebx,DWORD PTR [ebp+0x7442d25f]
  427c4f:	fnstenv [edx+0x69]
  427c52:	adc    al,0x88
  427c54:	out    dx,al
  427c55:	fldenv [ebp+0x7d]
  427c58:	sub    ebp,DWORD PTR [edi-0xf]
  427c5b:	out    dx,eax
  427c5c:	rol    DWORD PTR [edx+0x1ff95aca],cl
  427c62:	cwde   
  427c63:	std    
  427c64:	mov    edx,0x56a41125
  427c69:	jmp    0x427c94
  427c6b:	adc    edx,DWORD PTR [esi-0x1d]
  427c6e:	inc    eax
  427c6f:	popa   
  427c70:	ja     0x427c99
  427c72:	mov    ebx,0x1a2d33a7
  427c77:	push   edx
  427c78:	inc    esi
  427c79:	sbb    edi,ecx
  427c7b:	je     0x427ca7
  427c7d:	pop    es
  427c7e:	jl     0x427c97
  427c80:	(bad)  
  427c81:	loope  0x427c78
  427c83:	xchg   ecx,eax
  427c84:	push   ebp
  427c85:	push   esp
  427c86:	cli    
  427c87:	loop   0x427c61
  427c89:	js     0x427cd9
  427c8b:	jmp    0x26918c19
  427c90:	cli    
  427c91:	imul   esi,DWORD PTR [ebx],0x99a46b35
  427c97:	fs aaa 
  427c99:	clc    
  427c9a:	xlat   BYTE PTR ds:[ebx]
  427c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c9c:	inc    edx
  427c9d:	in     eax,0x5e
  427c9f:	pop    ds
  427ca0:	sahf   
  427ca1:	pop    eax
  427ca2:	fmul   QWORD PTR [edi-0x63fed24d]
  427ca8:	dec    esp
  427ca9:	cmp    DWORD PTR [ebx-0x34cb318c],eax
  427caf:	inc    ebp
  427cb0:	sbb    dh,BYTE PTR [edx]
  427cb2:	scas   al,BYTE PTR es:[edi]
  427cb3:	sbb    DWORD PTR ds:0xc94a3f59,esp
  427cb9:	imul   edi,DWORD PTR cs:[ebx+0x76],0xffffff99
  427cbe:	rcl    esi,1
  427cc0:	in     eax,dx
  427cc1:	stos   DWORD PTR es:[edi],eax
  427cc2:	arpl   WORD PTR [ebp+0x36],di
  427cc5:	not    edi
  427cc7:	add    DWORD PTR [ecx-0x3f3ed753],edi
  427ccd:	mov    ch,0x7f
  427ccf:	sbb    bh,BYTE PTR [eax+0x6fe30b10]
  427cd5:	repnz rcl ch,cl
  427cd8:	dec    edi
  427cd9:	cmc    
  427cda:	bound  esp,QWORD PTR [eax]
  427cdc:	cmp    bh,ah
  427cde:	fidiv  DWORD PTR [ebp-0x4548b52a]
  427ce4:	sub    BYTE PTR [edi],ah
  427ce6:	sub    bl,ah
  427ce8:	xchg   esp,eax
  427ce9:	push   ss
  427cea:	push   ebp
  427ceb:	cmp    al,0x2e
  427ced:	inc    edi
  427cee:	sbb    DWORD PTR [ebp+0x2a],eax
  427cf1:	mov    dh,0x9d
  427cf3:	and    al,0x86
  427cf5:	(bad)  
  427cf6:	fisub  DWORD PTR [esi+0x4f]
  427cf9:	ins    BYTE PTR es:[edi],dx
  427cfa:	push   ebp
  427cfb:	arpl   WORD PTR [esi-0x2bf5855c],bx
  427d01:	lods   eax,DWORD PTR ds:[esi]
  427d02:	(bad)  
  427d03:	cmp    eax,0xae9e8a2c
  427d08:	in     eax,dx
  427d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d0a:	pop    ss
  427d0b:	inc    edi
  427d0c:	loopne 0x427d63
  427d0e:	mov    edi,0xd7b0ddb0
  427d13:	adc    dh,BYTE PTR [ecx+eiz*1]
  427d16:	cld    
  427d17:	mov    bh,0xd0
  427d19:	addr16 or al,0xb8
  427d1c:	pop    esp
  427d1d:	arpl   WORD PTR [edx+0x9],di
  427d20:	jno    0x427d8b
  427d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d23:	pop    ebx
  427d24:	call   0xbe43ce8c
  427d29:	add    eax,0x6ec3bdb3
  427d2e:	pop    ds
  427d2f:	bound  esi,QWORD PTR [esi-0x75]
  427d32:	inc    esi
  427d33:	ret    
  427d34:	sub    ah,ah
  427d36:	retf   0x2816
  427d39:	mov    dl,0x3b
  427d3b:	lahf   
  427d3c:	inc    eax
  427d3d:	mov    esi,DWORD PTR [edx+esi*4]
  427d40:	and    BYTE PTR [esi+0x10],bl
  427d43:	add    ah,BYTE PTR [ebp-0x6ca921d2]
  427d49:	xchg   esp,eax
  427d4a:	aad    0xfa
  427d4c:	sub    edx,DWORD PTR [eax-0x70]
  427d4f:	mov    BYTE PTR [esi-0x74],cl
  427d52:	pop    eax
  427d53:	fwait
  427d54:	xor    BYTE PTR [edi-0x2607f35c],0xc1
  427d5b:	sbb    ax,0x7b3b
  427d5f:	push   ds
  427d60:	xchg   DWORD PTR [edi+0x16],edi
  427d63:	aad    0x87
  427d65:	inc    ecx
  427d66:	sbb    edx,eax
  427d68:	jge    0x427d89
  427d6a:	sub    bl,BYTE PTR [esp+eax*1-0x16]
  427d6e:	add    al,0xe5
  427d70:	sub    eax,0x51f574e6
  427d75:	add    bh,bl
  427d77:	mov    dh,0x64
  427d79:	enter  0x17c,0xb7
  427d7d:	cld    
  427d7e:	add    DWORD PTR ds:0x53709cc4,ebx
  427d84:	mov    BYTE PTR [esi+0x2a],ah
  427d87:	aaa    
  427d88:	cs and eax,0xd29c054b
  427d8e:	jmp    0x427d3b
  427d90:	or     BYTE PTR [ebx],dh
  427d92:	lods   eax,DWORD PTR ds:[esi]
  427d93:	adc    al,0x3b
  427d95:	xor    eax,0x52d1bad3
  427d9a:	dec    ebx
  427d9b:	xchg   esi,eax
  427d9c:	mov    eax,0x1007d27
  427da1:	lds    esp,FWORD PTR [ecx-0x47]
  427da4:	mov    esp,0x835ee4a1
  427da9:	or     al,0x8c
  427dab:	ja     0x427d5f
  427dad:	dec    edi
  427dae:	stc    
  427daf:	xor    eax,0x9563c612
  427db4:	mov    edx,0x7f8cea51
  427db9:	and    eax,0x27fc6fb7
  427dbe:	test   al,0xc7
  427dc0:	sub    al,0x86
  427dc2:	inc    esp
  427dc3:	retf   
  427dc4:	dec    eax
  427dc5:	lock lea edx,[eax]
  427dc8:	push   ebx
  427dc9:	or     BYTE PTR [esi],al
  427dcb:	pop    ebx
  427dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dce:	out    dx,eax
  427dcf:	jns    0x427d8b
  427dd1:	sti    
  427dd2:	fwait
  427dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dd4:	and    edi,esi
  427dd6:	xor    al,0xb5
  427dd8:	and    eax,0xf6b7260
  427ddd:	aam    0x7
  427ddf:	mov    al,0xb0
  427de1:	sub    DWORD PTR [eax],edx
  427de3:	mul    BYTE PTR [eax-0x6e98e3b8]
  427de9:	xor    ebp,DWORD PTR [edi-0x6bef6e5f]
  427def:	shr    BYTE PTR [esi+0x6ef7173b],1
  427df5:	dec    edi
  427df6:	std    
  427df7:	mov    esi,0x5f4aa9fc
  427dfc:	aad    0xb0
  427dfe:	xor    ecx,DWORD PTR [ebx]
  427e00:	lds    edx,FWORD PTR [ebx]
  427e02:	rcr    esp,1
  427e04:	cmc    
  427e05:	mov    ?,WORD PTR [ebp-0x4866653]
  427e0b:	loopne 0x427dda
  427e0d:	push   eax
  427e0e:	jno    0x427e1f
  427e10:	fs mov cl,0xf2
  427e13:	xor    ebp,DWORD PTR [edx]
  427e15:	sbb    esp,0xab4cbe56
  427e1b:	push   edi
  427e1c:	stos   BYTE PTR es:[edi],al
  427e1d:	(bad)  
  427e1e:	(bad)  
  427e1f:	(bad)  
  427e20:	push   edx
  427e21:	xchg   ecx,eax
  427e22:	xchg   edx,eax
  427e23:	or     eax,0xb789c64c
  427e28:	or     BYTE PTR [ecx-0x58432747],0x25
  427e2f:	gs push ecx
  427e31:	out    dx,eax
  427e32:	push   es
  427e33:	sub    eax,0xc85a350f
  427e38:	push   ss
  427e39:	pop    es
  427e3a:	lock mov bl,0xc0
  427e3d:	nop
  427e3e:	test   ebp,esi
  427e40:	shl    edi,cl
  427e42:	push   ecx
  427e43:	lahf   
  427e44:	rcr    DWORD PTR [ebp+0x3f5d34cb],0x0
  427e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e4c:	or     bl,dl
  427e4e:	xchg   esi,eax
  427e4f:	popf   
  427e50:	sbb    eax,0xa2efc0cc
  427e55:	adc    BYTE PTR [ecx+0x23],0xc8
  427e59:	push   ecx
  427e5a:	push   cs
  427e5b:	sbb    ecx,DWORD PTR [ebp+0x51922e03]
  427e61:	pop    ds
  427e62:	add    BYTE PTR [esi*8-0x763ed46b],bl
  427e69:	cmp    dl,BYTE PTR [eax-0x587d7e5b]
  427e6f:	fadd   QWORD PTR [ecx]
  427e71:	xchg   esp,eax
  427e72:	jbe    0x427e3e
  427e74:	ss mov esp,0xedef361d
  427e7a:	test   DWORD PTR [ecx+0x14882953],eax
  427e80:	jb     0x427ec5
  427e82:	scas   al,BYTE PTR es:[edi]
  427e83:	(bad)  
  427e84:	ja     0x427e27
  427e86:	pop    ds
  427e87:	out    0x5b,eax
  427e89:	ss sbb eax,0x136b2ed2
  427e8f:	in     eax,0x9b
  427e91:	iret   
  427e92:	out    dx,eax
  427e93:	sub    eax,DWORD PTR [ebp+0x32bc63c8]
  427e99:	dec    ecx
  427e9a:	push   es
  427e9b:	lods   eax,DWORD PTR ds:[esi]
  427e9c:	mov    ecx,0x7ca6527c
  427ea1:	ja     0x427e5c
  427ea3:	jns    0x427e82
  427ea5:	or     cl,BYTE PTR [ecx+0x67]
  427ea8:	fbstp  TBYTE PTR [ebp+0x4c05a19e]
  427eae:	sbb    ah,cl
  427eb0:	dec    edi
  427eb1:	pusha  
  427eb2:	sbb    al,0x6
  427eb4:	(bad)  
  427eb5:	stc    
  427eb6:	icebp  
  427eb7:	stos   DWORD PTR es:[edi],eax
  427eb8:	fst    DWORD PTR ds:0x69b03e52
  427ebe:	pop    esp
  427ebf:	(bad)  
  427ec0:	aad    0xd2
  427ec2:	inc    esi
  427ec3:	lock out dx,eax
  427ec5:	sbb    DWORD PTR ds:0x8ed29c8c,ebp
  427ecb:	mov    al,ds:0xbac2db2c
  427ed0:	jle    0x427ea8
  427ed2:	ret    
  427ed3:	(bad)  
  427ed4:	mov    ecx,0xeaff5991
  427ed9:	sub    dl,dl
  427edb:	fdivr  DWORD PTR [esi+0x1a]
  427ede:	cmp    al,0x2
  427ee0:	fs or  esp,edi
  427ee3:	lea    eax,ds:0x2add9425
  427ee9:	cmp    al,0x62
  427eeb:	lds    ebx,FWORD PTR [esi-0x3c]
  427eee:	inc    ebp
  427eef:	outs   dx,DWORD PTR ds:[esi]
  427ef0:	mov    esi,0x302884c5
  427ef5:	or     BYTE PTR [edi+0x3acb0213],dh
  427efb:	repnz cmp BYTE PTR [edi+0x5c],al
  427eff:	int3   
  427f00:	push   edx
  427f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f02:	faddp  st(5),st
  427f04:	xchg   ecx,eax
  427f05:	mov    ecx,0x3f057564
  427f0a:	call   0xd85e:0x75f41fba
  427f11:	ins    DWORD PTR es:[edi],dx
  427f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f13:	lods   al,BYTE PTR ds:[esi]
  427f14:	or     BYTE PTR [ecx],dl
  427f16:	adc    edx,ebp
  427f18:	xchg   esp,eax
  427f19:	fld    TBYTE PTR [edi+0x15]
  427f1c:	ja     0x427f82
  427f1e:	popf   
  427f1f:	lods   al,BYTE PTR ds:[esi]
  427f20:	cmp    ah,ch
  427f22:	xchg   BYTE PTR [ebp+0x53],bl
  427f25:	mov    al,0xb5
  427f27:	jo     0x427ee7
  427f29:	mov    dl,0x63
  427f2b:	xchg   ebx,eax
  427f2c:	call   0xead6e0b4
  427f31:	shr    DWORD PTR [ecx+0x7dd359fd],1
  427f37:	mov    edi,0x6a31d06
  427f3c:	push   esi
  427f3d:	in     eax,0x8d
  427f3f:	retf   0x7aad
  427f42:	shr    BYTE PTR [ebx],cl
  427f44:	aad    0x9c
  427f46:	and    DWORD PTR [edi],0x4
  427f49:	(bad)  
  427f4a:	sub    al,0x26
  427f4c:	iret   
  427f4d:	mov    ds:0x3c733ba5,eax
  427f52:	stos   DWORD PTR es:[edi],eax
  427f53:	xlat   BYTE PTR ds:[ebx]
  427f54:	scas   eax,DWORD PTR es:[edi]
  427f55:	jno    0x427f8b
  427f57:	stos   BYTE PTR es:[edi],al
  427f58:	push   ss
  427f59:	leave  
  427f5a:	sti    
  427f5b:	jmp    0x427ee4
  427f5d:	repnz in al,0x58
  427f60:	jmp    0x3072:0xe388ea09
  427f67:	jge    0x427fdc
  427f69:	jmp    0x6ff8:0xe2bac26b
  427f70:	fsub   st(5),st
  427f72:	int3   
  427f73:	mov    dh,0xca
  427f75:	sbb    ch,dh
  427f77:	jae    0x427f17
  427f79:	xor    bh,bl
  427f7b:	inc    ebp
  427f7c:	jnp    0x427fb6
  427f7e:	imul   edx,DWORD PTR [eax-0x4f],0x80654b1c
  427f85:	xor    ecx,DWORD PTR [ebp-0x3a]
  427f88:	std    
  427f89:	in     eax,0xba
  427f8b:	cld    
  427f8c:	(bad)  
  427f8d:	popa   
  427f8e:	mov    ds:0xb6f09560,al
  427f93:	stos   DWORD PTR es:[edi],eax
  427f94:	mov    edx,0x34dff16b
  427f99:	adc    edi,ebx
  427f9b:	imul   edi,DWORD PTR [esi-0x4800c0c4],0x3cf3bf24
  427fa5:	jge    0x427fa1
  427fa7:	retf   0x9d92
  427faa:	lds    eax,FWORD PTR [ebx+0x2a]
  427fad:	mov    esi,0x21c3078
  427fb2:	mov    ch,0x8
  427fb4:	mov    BYTE PTR [edx+ecx*4-0x583e5d19],dl
  427fbb:	jae    0x427f9d
  427fbd:	leave  
  427fbe:	inc    esi
  427fbf:	sbb    DWORD PTR [ecx-0x61],esi
  427fc2:	fstp   TBYTE PTR [ecx-0x46d2463b]
  427fc8:	xchg   edi,eax
  427fc9:	ds jmp 0x1647:0x24b1af22
  427fd1:	adc    al,0xb8
  427fd3:	sbb    ah,BYTE PTR [edx-0x7217b34e]
  427fd9:	iret   
  427fda:	hlt    
  427fdb:	push   eax
  427fdc:	dec    esi
  427fdd:	lods   eax,DWORD PTR ds:[esi]
  427fde:	lods   eax,DWORD PTR ds:[esi]
  427fdf:	imul   edx,DWORD PTR [edx+0x6f],0xd0ba7708
  427fe6:	retf   0x5f50
  427fe9:	call   0xfdb2f1e8
  427fee:	inc    esp
  427fef:	jle    0x427ffd
  427ff1:	popf   
  427ff2:	xchg   ebp,eax
  427ff3:	mov    WORD PTR [edi+0x4fdceea],ss
  427ff9:	gs retf 0xb569
  427ffd:	pushf  
  427ffe:	ins    DWORD PTR es:[edi],dx
  427fff:	xor    ebx,edx
  428001:	xchg   edx,eax
  428002:	fistp  QWORD PTR [esi+ebp*1+0x1b]
  428006:	jnp    0x427ff6
  428008:	aad    0x5a
  42800a:	add    al,0x9c
  42800c:	jle    0x428041
  42800e:	push   cs
  42800f:	cmp    ebp,DWORD PTR [edi+ebp*4]
  428012:	sub    eax,0xcf21199f
  428017:	sbb    al,0x32
  428019:	cdq    
  42801a:	pop    eax
  42801b:	and    bh,0x28
  42801e:	jmp    0x79c3bf9e
  428023:	push   edi
  428024:	inc    esi
  428025:	push   esi
  428026:	xor    eax,0xc2b9e923
  42802b:	or     edi,eax
  42802d:	in     eax,dx
  42802e:	repnz dec edi
  428030:	clc    
  428031:	jp     0x42806e
  428033:	fwait
  428034:	mov    eax,ds:0x887782cf
  428039:	icebp  
  42803a:	dec    ecx
  42803b:	adc    eax,0x61dbb1e1
  428040:	std    
  428041:	(bad)  
  428042:	mov    esp,0x6008691f
  428047:	dec    edi
  428048:	xchg   esi,eax
  428049:	sahf   
  42804a:	hlt    
  42804b:	xchg   ebx,eax
  42804c:	sbb    eax,0x33f16910
  428051:	out    dx,eax
  428052:	pop    ecx
  428053:	mov    esp,0x536a1dc9
  428058:	jb     0x428039
  42805a:	pop    ebx
  42805b:	xchg   ebp,eax
  42805c:	fst    QWORD PTR [edi+0x34]
  42805f:	sahf   
  428060:	mov    eax,ds:0xcb4765c9
  428065:	xor    BYTE PTR [eax+0x7e985080],ah
  42806b:	dec    edx
  42806c:	outs   dx,BYTE PTR ds:[esi]
  42806d:	cmp    al,0x47
  42806f:	fwait
  428070:	sub    edx,DWORD PTR [ebx+0x17]
  428073:	lods   eax,DWORD PTR ds:[esi]
  428074:	fs mov dl,0x76
  428077:	xor    eax,0xf81558eb
  42807c:	popa   
  42807d:	lock rol BYTE PTR [ecx+0x5612103],1
  428084:	mov    al,0x70
  428086:	test   eax,0x1505c8f2
  42808b:	fwait
  42808c:	jmp    0xec293db8
  428091:	pop    eax
  428092:	xor    al,0x99
  428094:	in     al,dx
  428095:	stos   DWORD PTR es:[edi],eax
  428096:	and    eax,0x66343b23
  42809b:	push   ds
  42809c:	aad    0x47
  42809e:	sbb    bl,BYTE PTR [ecx]
  4280a0:	dec    ebp
  4280a1:	and    DWORD PTR [ebx],ebx
  4280a3:	add    ch,BYTE PTR [ebx]
  4280a5:	pop    edx
  4280a6:	fdiv   DWORD PTR [ebp-0x61c6163b]
  4280ac:	(bad)  
  4280ad:	push   ds
  4280ae:	stos   BYTE PTR es:[edi],al
  4280af:	mov    bh,0xd1
  4280b1:	aaa    
  4280b2:	xchg   ebx,eax
  4280b3:	push   es
  4280b4:	sbb    DWORD PTR [eax+ebp*8],esp
  4280b7:	(bad)  
  4280b8:	pop    ss
  4280b9:	sbb    bh,0x56
  4280bc:	loop   0x4280bd
  4280be:	inc    edx
  4280bf:	cmp    al,0x75
  4280c1:	adc    eax,0x869d8942
  4280c6:	sub    DWORD PTR [ebp-0x72d03764],edi
  4280cc:	arpl   dx,ax
  4280ce:	inc    ebp
  4280cf:	cmp    dl,bl
  4280d1:	imul   eax,DWORD PTR [esi],0xe43c26a7
  4280d7:	into   
  4280d8:	mov    edi,0xb44778c1
  4280dd:	or     DWORD PTR [eax-0x3a000000],esp
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx+0x5b2768be]
  4280ef:	jne    0x428079
  4280f1:	push   eax
  4280f2:	lock clc 
  4280f4:	add    DWORD PTR [eax],eax
  4280f6:	out    0x4,eax
  4280f8:	add    BYTE PTR [eax],al
  4280fa:	inc    esi
  4280fb:	jp     0x4280d6
  4280fd:	jno    0x428114
  4280ff:	out    dx,eax
  428100:	dec    edi
  428101:	(bad)  
  428102:	xchg   esi,eax
  428103:	adc    al,0xe2
  428105:	xor    eax,0x100edd12
  42810a:	push   edx
  42810b:	sub    BYTE PTR [bx-0x3c90],0xcc
  428111:	pmaxub mm6,QWORD PTR [edi-0x60]
  428115:	scas   eax,DWORD PTR es:[edi]
  428116:	in     eax,dx
  428117:	mov    edx,0x3ed16495
  42811c:	jnp    0x428184
  42811e:	xor    al,0x59
  428120:	and    eax,0x245efa71
  428125:	cmp    DWORD PTR [edx+ebx*4],ecx
  428128:	push   ecx
  428129:	loope  0x428164
  42812b:	adc    BYTE PTR [ecx+0x14c27887],0x54
  428132:	test   al,0x9d
  428134:	xor    BYTE PTR [esi+0x3b99223b],0xe4
  42813b:	call   0x2fd411f8
  428140:	jb     0x4281b4
  428142:	jge    0x4280e6
  428144:	out    dx,eax
  428145:	mov    al,cl
  428147:	adc    DWORD PTR [edi+0x6c],eax
  42814a:	mov    edx,0xe56a6993
  42814f:	gs push esp
  428151:	mov    esp,0xe2690d8d
  428156:	test   DWORD PTR [esi],edx
  428158:	jle    0x42815a
  42815a:	cmp    ebp,DWORD PTR [eax]
  42815c:	and    edx,0xeb242758
  428162:	hlt    
  428163:	pop    edi
  428164:	int3   
  428165:	fimul  WORD PTR [eax+0x4a]
  428168:	sub    cl,BYTE PTR [edi]
  42816a:	fadd   DWORD PTR [eax+esi*2+0x2e]
  42816e:	test   esp,edx
  428170:	int3   
  428171:	jae    0x4281b5
  428173:	repz fldenv [esi+0x41]
  428177:	cmp    ebx,ebx
  428179:	mov    edi,0x12db1b99
  42817e:	xchg   edi,eax
  42817f:	mov    ecx,esp
  428181:	in     eax,0xe7
  428183:	int3   
  428184:	sub    eax,0xac53e627
  428189:	mov    eax,ds:0x24eebda5
  42818e:	or     DWORD PTR [ebx-0x1ee7b6d8],esi
  428194:	pop    esp
  428195:	sub    DWORD PTR ds:0xc4c66de1,edi
  42819b:	push   ebp
  42819c:	ret    0xea0e
  42819f:	test   BYTE PTR [ebx-0x6c],cl
  4281a2:	(bad)  
  4281a3:	stc    
  4281a4:	mov    gs,WORD PTR [edi]
  4281a6:	ins    DWORD PTR es:[edi],dx
  4281a7:	jmp    0xf795:0x3df280a
  4281ae:	gs scas eax,DWORD PTR es:[edi]
  4281b0:	cld    
  4281b1:	mov    bh,0xf
  4281b3:	inc    ebx
  4281b4:	repnz es test al,0xd1
  4281b8:	fmul   DWORD PTR [edi-0x7c456d71]
  4281be:	push   es
  4281bf:	push   ecx
  4281c0:	and    esp,esp
  4281c2:	jl     0x4281db
  4281c4:	test   BYTE PTR [esi+esi*2-0x40],0x5
  4281c9:	jl     0x42814d
  4281cb:	push   ebx
  4281cc:	dec    ebx
  4281cd:	repz fidivr WORD PTR [edi+0x3734387a]
  4281d4:	inc    DWORD PTR [edx]
  4281d6:	sub    edx,0xffffff92
  4281d9:	out    dx,eax
  4281da:	mov    eax,0x835bac64
  4281df:	pop    ecx
  4281e0:	push   ebp
  4281e1:	test   eax,0x3cf876ce
  4281e6:	mov    dl,0xde
  4281e8:	inc    eax
  4281e9:	add    ebp,DWORD PTR [esi-0x2ca90727]
  4281ef:	sbb    eax,0x35b669b2
  4281f4:	mov    BYTE PTR [edx+0x5f8fc78d],0x87
  4281fb:	imul   DWORD PTR [ecx+eiz*1+0x10865ca2]
  428202:	sub    bl,BYTE PTR [esi+0x69c09ee7]
  428208:	or     ebx,DWORD PTR [ecx-0x7a]
  42820b:	ret    
  42820c:	idiv   DWORD PTR [esi-0x54]
  42820f:	test   eax,0xe4d999d2
  428214:	iret   
  428215:	into   
  428216:	push   ds
  428217:	sub    bl,BYTE PTR [ecx-0x1dd4748d]
  42821d:	add    eax,0xe9e8b252
  428222:	sbb    edi,DWORD PTR ds:0xfac46226
  428228:	sub    DWORD PTR [ecx-0x33e4c355],0x5a825aee
  428232:	ret    0x9695
  428235:	or     dh,cl
  428237:	in     al,dx
  428238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428239:	mov    ebp,DWORD PTR [esi]
  42823b:	enter  0x9873,0xfa
  42823f:	outs   dx,BYTE PTR ds:[esi]
  428240:	push   cs
  428241:	or     eax,0xe909a1c9
  428246:	dec    esp
  428247:	or     BYTE PTR [esi+0x32591393],al
  42824d:	push   esi
  42824e:	call   0x5dc3:0x89deb67d
  428255:	xchg   BYTE PTR [ebp+0x39cfb89a],ch
  42825b:	outs   dx,DWORD PTR ds:[esi]
  42825c:	in     eax,0xfa
  42825e:	outs   dx,BYTE PTR ds:[esi]
  42825f:	sbb    BYTE PTR [ebx+edi*8-0x58432d49],bh
  428266:	inc    ebx
  428267:	stos   BYTE PTR es:[edi],al
  428268:	lods   al,BYTE PTR ds:[esi]
  428269:	sub    BYTE PTR [edx],bh
  42826b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42826c:	mov    eax,0xbfc83c2b
  428271:	inc    BYTE PTR [eax]
  428273:	add    esp,0x5a
  428276:	ins    BYTE PTR es:[edi],dx
  428277:	cmp    DWORD PTR [ebx-0x61],ebx
  42827a:	jbe    0x428248
  42827c:	inc    ecx
  42827d:	jmp    0x53cf:0x23ee079e
  428284:	ja     0x428285
  428286:	loopne 0x428303
  428288:	pop    ebp
  428289:	jmp    0x54be3909
  42828e:	and    DWORD PTR ds:0x6bd93c72,0x6
  428295:	sub    eax,0x436ddbbb
  42829a:	cli    
  42829b:	sahf   
  42829c:	ret    0xf076
  42829f:	push   0xffffffbd
  4282a1:	(bad)  
  4282a3:	xchg   esp,ebp
  4282a5:	paddusw mm6,QWORD PTR [eax+0x40c7ca14]
  4282ac:	mov    DWORD PTR [ebp-0x44],edi
  4282af:	inc    bh
  4282b1:	scas   al,BYTE PTR es:[edi]
  4282b2:	(bad)  
  4282b5:	inc    edx
  4282b6:	xor    al,0x1e
  4282b8:	pop    esp
  4282b9:	hlt    
  4282ba:	cli    
  4282bb:	or     eax,DWORD PTR [esp+edi*1+0x18d656d1]
  4282c2:	xchg   ebp,eax
  4282c3:	into   
  4282c4:	add    ebp,ecx
  4282c6:	xor    BYTE PTR [eax],dl
  4282c8:	pop    ds
  4282c9:	fist   WORD PTR [ecx]
  4282cb:	jl     0x42824f
  4282cd:	je     0x428342
  4282cf:	sti    
  4282d0:	adc    ebx,DWORD PTR [ebp+0xe]
  4282d3:	or     eax,0x2fa13b5c
  4282d8:	stos   DWORD PTR es:[edi],eax
  4282d9:	gs cwde 
  4282db:	mov    ch,0xe0
  4282dd:	and    esi,eax
  4282df:	int    0xdd
  4282e1:	dec    edx
  4282e2:	les    ebp,FWORD PTR [ebx]
  4282e4:	xor    BYTE PTR [esi],0x6d
  4282e7:	jmp    0x28ba:0x4921443c
  4282ee:	pusha  
  4282ef:	ja     0x42836b
  4282f1:	sbb    dl,0x3f
  4282f4:	retf   
  4282f5:	stos   BYTE PTR es:[edi],al
  4282f6:	ja     0x428347
  4282f8:	push   ds
  4282f9:	call   ebp
  4282fb:	dec    edx
  4282fc:	pop    esi
  4282fd:	cwde   
  4282fe:	inc    esp
  4282ff:	adc    ebp,DWORD PTR [esi]
  428301:	sbb    al,0xdd
  428303:	dec    ebx
  428304:	mov    ds:0xd08b3c3a,eax
  428309:	and    edx,DWORD PTR [eax+0x42]
  42830c:	jbe    0x4282a0
  42830e:	lahf   
  42830f:	and    edx,DWORD PTR [ecx+0x1b49b68]
  428315:	adc    eax,0xfeb0157c
  42831a:	int    0x58
  42831c:	dec    edi
  42831d:	pop    eax
  42831e:	mov    BYTE PTR [eax-0x7e2a02cb],bl
  428324:	xchg   edx,eax
  428325:	sub    ebp,DWORD PTR [edx-0x6801dac9]
  42832b:	in     al,dx
  42832c:	pop    edi
  42832d:	dec    esi
  42832e:	fstp   TBYTE PTR [eax]
  428330:	les    esi,FWORD PTR [edi-0x4cc6049b]
  428336:	dec    ebx
  428337:	push   DWORD PTR [esi-0x2f]
  42833a:	out    0xbb,eax
  42833c:	cmp    bh,bl
  42833e:	sbb    DWORD PTR [edx],edi
  428340:	leave  
  428341:	xor    cl,BYTE PTR [edx-0x33]
  428344:	mov    gs,WORD PTR [ebx]
  428346:	sbb    eax,0x884dad29
  42834b:	xchg   ebp,eax
  42834c:	scas   al,BYTE PTR es:[edi]
  42834d:	push   0x15e57b52
  428352:	and    bl,ch
  428354:	shr    BYTE PTR [edi+0x48f7fee],cl
  42835a:	jne    0x42831f
  42835c:	sub    eax,0x44417b72
  428361:	scas   eax,DWORD PTR es:[edi]
  428362:	xor    al,0xe2
  428364:	bound  ebx,QWORD PTR ds:0x790ad219
  42836a:	sub    DWORD PTR [edx+eiz*1],ebp
  42836d:	dec    ecx
  42836e:	in     eax,dx
  42836f:	out    dx,al
  428370:	call   0xa3bda902
  428375:	aas    
  428376:	dec    edx
  428377:	popf   
  428378:	xor    cl,BYTE PTR [eax+0x20]
  42837b:	pusha  
  42837c:	jl     0x4283cb
  42837e:	ss test al,0x96
  428381:	inc    ebp
  428382:	pop    esi
  428383:	mov    edx,0x10ef21fc
  428388:	mov    dh,0x40
  42838a:	mov    ah,0x46
  42838c:	push   eax
  42838d:	mov    bl,0xa3
  42838f:	cld    
  428390:	mov    dl,0xfc
  428392:	and    al,0xd3
  428394:	mov    eax,0xe74ccc00
  428399:	int    0xf1
  42839b:	mov    ch,0xce
  42839d:	cmp    eax,0x2b6ce7cf
  4283a2:	jno    0x4283bb
  4283a4:	jns    0x42840e
  4283a6:	jnp    0x4283e7
  4283a8:	movups xmm1,XMMWORD PTR [ebp+0x39d9e738]
  4283af:	mov    BYTE PTR [esi-0x29],ch
  4283b2:	outs   dx,BYTE PTR ds:[esi]
  4283b3:	cmc    
  4283b4:	push   ebx
  4283b5:	std    
  4283b6:	sbb    bl,BYTE PTR [esi+0x53]
  4283b9:	pop    ds
  4283ba:	pop    ss
  4283bb:	adc    al,0x8d
  4283bd:	(bad)  
  4283be:	out    dx,eax
  4283bf:	xor    al,0x4b
  4283c1:	nop
  4283c2:	add    DWORD PTR [edx-0x1d0e9f54],esi
  4283c8:	adc    BYTE PTR [ebp+0x51],dl
  4283cb:	ret    0x49b0
  4283ce:	ret    0xe5e7
  4283d1:	push   edx
  4283d2:	iret   
  4283d3:	clc    
  4283d4:	mov    ah,0x25
  4283d6:	cmp    dh,BYTE PTR [edx]
  4283d8:	mov    edx,0xb4ea02
  4283dd:	idiv   DWORD PTR [eax+0x673674ac]
  4283e3:	add    al,0xfe
  4283e5:	dec    esi
  4283e6:	in     eax,dx
  4283e7:	test   al,0xd7
  4283e9:	mov    al,ds:0x5365f499
  4283ee:	enter  0x5aff,0xb6
  4283f2:	and    bl,al
  4283f4:	in     al,0xaa
  4283f6:	pusha  
  4283f7:	jno    0x428438
  4283f9:	jp     0x428410
  4283fb:	push   0xabc89c8d
  428400:	xor    BYTE PTR [esi+eiz*2-0x3b],al
  428404:	and    ax,0xd3c2
  428408:	in     eax,dx
  428409:	xchg   ecx,eax
  42840a:	addr16 cmp al,0xfb
  42840d:	cmp    DWORD PTR [eax-0x80],edx
  428410:	outs   dx,DWORD PTR ds:[esi]
  428411:	scas   eax,DWORD PTR es:[edi]
  428412:	xchg   DWORD PTR [eax-0x11df6f61],edi
  428418:	push   esp
  428419:	test   BYTE PTR [eax],0xd5
  42841c:	(bad)  
  42841d:	mov    ch,0xad
  42841f:	pop    es
  428420:	repz pop edx
  428422:	iret   
  428423:	cmp    bl,BYTE PTR [ebx+0x70]
  428426:	sbb    al,0xc0
  428428:	test   al,0x7d
  42842a:	inc    edi
  42842b:	dec    edi
  42842c:	stos   BYTE PTR es:[edi],al
  42842d:	into   
  42842e:	retf   0x6ffe
  428431:	sub    dh,ch
  428433:	mov    ch,0xba
  428435:	das    
  428436:	fbld   TBYTE PTR [edi+0x35]
  428439:	(bad)  
  42843b:	xchg   BYTE PTR [esi],dh
  42843d:	adc    BYTE PTR [esp+eax*8],cl
  428440:	dec    esp
  428441:	ror    BYTE PTR [ebp-0x1978b1ec],0x2e
  428448:	cmp    al,0x39
  42844a:	cmova  esp,DWORD PTR [ecx-0x521a2b19]
  428451:	inc    ebp
  428452:	sub    al,0x8a
  428454:	jno    0x428412
  428456:	int    0xf
  428458:	loopne 0x42843b
  42845a:	add    al,0x10
  42845c:	sti    
  42845d:	dec    esi
  42845e:	xchg   esp,eax
  42845f:	sbb    al,0x2a
  428461:	mov    esp,0xbdf4f004
  428466:	adc    al,0x72
  428468:	sbb    DWORD PTR [ecx-0x2ad61223],ebx
  42846e:	sti    
  42846f:	in     al,0xac
  428471:	add    ch,BYTE PTR [esi+0x43bb5f77]
  428477:	and    al,ah
  428479:	aad    0x83
  42847b:	mov    dx,0x90a9
  42847f:	push   eax
  428480:	xchg   DWORD PTR [edi-0x2d],edx
  428483:	shl    ecx,cl
  428485:	out    0x76,eax
  428487:	jne    0x628cb29a
  42848d:	dec    ecx
  42848e:	fisub  WORD PTR [ecx-0x5af00274]
  428494:	xchg   ebx,eax
  428495:	or     DWORD PTR ds:0x914f4258,esp
  42849b:	mov    esp,0x404443da
  4284a0:	stos   DWORD PTR es:[edi],eax
  4284a1:	mov    eax,ds:0x97ce8eac
  4284a6:	xor    edx,DWORD PTR [ebx+0x7b]
  4284a9:	test   BYTE PTR [edi+0x13cf2b2a],0xa
  4284b0:	fcomp  DWORD PTR [edi+0x711f4be9]
  4284b6:	shl    BYTE PTR [edx+eiz*4+0x47766912],cl
  4284bd:	dec    esi
  4284be:	inc    ebx
  4284bf:	(bad)  
  4284c0:	mov    esp,0x5e083cf
  4284c5:	jno    0x4284c9
  4284c7:	addr16 push dx
  4284ca:	(bad)  
  4284cb:	sar    cl,cl
  4284cd:	pop    eax
  4284ce:	pop    edi
  4284cf:	push   0xffffffb1
  4284d1:	arpl   si,di
  4284d3:	(bad)  
  4284d4:	cli    
  4284d5:	popa   
  4284d6:	enter  0xff1,0xd8
  4284da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284db:	pop    ecx
  4284dc:	loopne 0x4284c6
  4284de:	stos   DWORD PTR es:[edi],eax
  4284df:	pop    esp
  4284e0:	dec    edx
  4284e1:	push   ds
  4284e2:	cmp    BYTE PTR [esi+0x2430740b],dh
  4284e8:	and    bl,BYTE PTR [edx]
  4284ea:	xor    eax,0x74793039
  4284ef:	sar    BYTE PTR [esi],cl
  4284f1:	sbb    BYTE PTR [edi+edi*4],0xc7
  4284f5:	das    
  4284f6:	push   ebx
  4284f7:	pop    ebp
  4284f8:	and    al,0xb5
  4284fa:	mov    ds:0xd145d47d,al
  4284ff:	inc    ebp
  428500:	lock jge 0x428505
  428503:	bound  ebx,QWORD PTR [ecx]
  428505:	pushf  
  428506:	fimul  WORD PTR [edx]
  428508:	int    0xfe
  42850a:	inc    ebx
  42850b:	lods   eax,DWORD PTR ds:[esi]
  42850c:	or     DWORD PTR [ecx+0x54bdfe7c],ecx
  428512:	es push ebp
  428514:	add    cl,bh
  428516:	in     al,dx
  428517:	push   0xcc5cd97c
  42851c:	shl    DWORD PTR [ecx],cl
  42851e:	mov    eax,0xb3794a6e
  428523:	pop    edx
  428524:	ins    BYTE PTR es:[edi],dx
  428525:	pop    esp
  428526:	icebp  
  428527:	or     eax,0xa43b0cd6
  42852c:	mov    esp,0x104f078e
  428531:	add    dh,BYTE PTR [edi+0x6c]
  428534:	repz mov cl,0x52
  428537:	cmp    eax,0x8fbd6e91
  42853c:	dec    edx
  42853d:	lea    ebx,[esp+eiz*4+0x45e46230]
  428544:	mov    dh,0x15
  428546:	pusha  
  428547:	stos   BYTE PTR es:[edi],al
  428548:	or     bl,0x91
  42854b:	in     eax,dx
  42854c:	add    al,0x67
  42854e:	stos   BYTE PTR es:[edi],al
  42854f:	in     al,dx
  428550:	xchg   ebx,eax
  428551:	push   ebp
  428552:	fisubr DWORD PTR [ebx+ebx*4]
  428555:	rcl    DWORD PTR [ebp+eiz*2+0x19],0xba
  42855a:	call   0x7469:0x3f423f60
  428561:	xchg   esi,eax
  428562:	(bad)  
  428563:	sub    al,0x1d
  428565:	fstp   DWORD PTR [edi+0x7f177fd9]
  42856b:	and    esi,esp
  42856d:	dec    ebp
  42856e:	nop
  42856f:	sub    bh,BYTE PTR [eax+0x3e]
  428572:	std    
  428573:	std    
  428574:	add    esi,ebp
  428576:	adc    al,0x38
  428578:	cmp    al,0x9c
  42857a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42857b:	pop    ds
  42857c:	xchg   ebp,eax
  42857d:	pop    ebp
  42857e:	fisubr DWORD PTR [eax]
  428580:	es mov dh,0xc7
  428583:	sahf   
  428584:	cmp    eax,0xa3a19464
  428589:	(bad)  
  42858a:	gs pop es
  42858c:	data16 lods al,BYTE PTR ds:[esi]
  42858e:	pop    esp
  42858f:	jmp    0x6bb5:0x7eef2fa3
  428596:	in     eax,0x95
  428598:	loopne 0x4285c1
  42859a:	push   cs
  42859b:	scas   eax,DWORD PTR es:[edi]
  42859c:	dec    esp
  42859d:	pusha  
  42859e:	repnz popf 
  4285a0:	xor    BYTE PTR [eax],cl
  4285a2:	pop    edi
  4285a3:	je     0x42854f
  4285a5:	pop    DWORD PTR [edx-0x5d]
  4285a8:	xor    bh,cl
  4285aa:	mov    esp,0xd602652d
  4285af:	dec    ebx
  4285b0:	test   DWORD PTR [edx+0x4],ecx
  4285b3:	jle    0x4285d7
  4285b5:	ret    
  4285b6:	mov    edi,0x30957cbd
  4285bb:	or     bl,dh
  4285bd:	jmp    0x4c77:0x747f2648
  4285c4:	cs aad 0xb8
  4285c7:	fsubp  st(5),st
  4285c9:	fild   WORD PTR [esi-0x65]
  4285cc:	fist   WORD PTR [ebx]
  4285ce:	sub    BYTE PTR [edi-0x4a083198],0xd7
  4285d5:	jbe    0x4285b2
  4285d7:	repnz dec eax
  4285d9:	lds    ebp,FWORD PTR [eax]
  4285db:	mov    bl,0xe9
  4285dd:	jmp    0x59cd9b
